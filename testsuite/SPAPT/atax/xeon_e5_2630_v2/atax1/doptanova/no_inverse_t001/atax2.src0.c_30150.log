
====== START ORIO ======

----- begin reading the source file: atax2.src0.c -----
----- finished reading the source file -----

----- begin parsing annotations -----
----- finished parsing annotations -----

----- begin optimizations -----
Search_Space         = 2.573e+12
Number_of_Parameters = 13
Numeric_Parameters   = 13
Binary_Parameters    = 00
['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
[[1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 8, 32], [1, 8, 32], [1, 8, 32]]

----- begin empirical tuning for problem size -----
 N = 10000
Parameters: {'RT_K': [0, 3], 'T1_I': [0, 7], 'T1_J': [0, 7], 'T1_K': [0, 7], 'U_K': [0, 30], 'U_J': [0, 30], 'U_I': [0, 30], 'U1_I': [0, 30], 'T2_K': [0, 7], 'T2_J': [0, 7], 'T2_I': [0, 7], 'RT_I': [0, 3], 'RT_J': [0, 3]}
Parameter Range Values: {'RT_K': [1, 8, 32], 'T1_I': [1, 16, 32, 64, 128, 256, 512], 'T1_J': [1, 16, 32, 64, 128, 256, 512], 'T1_K': [1, 16, 32, 64, 128, 256, 512], 'U_K': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_J': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U1_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'T2_K': [1, 64, 128, 256, 512, 1024, 2048], 'T2_J': [1, 64, 128, 256, 512, 1024, 2048], 'T2_I': [1, 64, 128, 256, 512, 1024, 2048], 'RT_I': [1, 8, 32], 'RT_J': [1, 8, 32]}

----- begin DLMT -----
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Initial Inverse Factors: []
Initial Interactions: []
Starting DLMT
Step 0
Full Model:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K
Generating valid search space of size 36000 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Tested coordinates: 150000
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Tested coordinates: 190000
Tested coordinates: 200000
Tested coordinates: 210000
Tested coordinates: 220000
Tested coordinates: 230000
Tested coordinates: 240000
Tested coordinates: 250000
Tested coordinates: 260000
Tested coordinates: 270000
Tested coordinates: 280000
Tested coordinates: 290000
Valid coordinates: 7200
Tested coordinates: 300000
Tested coordinates: 310000
Tested coordinates: 320000
Tested coordinates: 330000
Tested coordinates: 340000
Tested coordinates: 350000
Tested coordinates: 360000
Tested coordinates: 370000
Tested coordinates: 380000
Tested coordinates: 390000
Tested coordinates: 400000
Tested coordinates: 410000
Tested coordinates: 420000
Tested coordinates: 430000
Tested coordinates: 440000
Tested coordinates: 450000
Tested coordinates: 460000
Tested coordinates: 470000
Tested coordinates: 480000
Tested coordinates: 490000
Tested coordinates: 500000
Tested coordinates: 510000
Tested coordinates: 520000
Tested coordinates: 530000
Tested coordinates: 540000
Tested coordinates: 550000
Tested coordinates: 560000
Tested coordinates: 570000
Tested coordinates: 580000
Tested coordinates: 590000
Valid coordinates: 14400
Tested coordinates: 600000
Tested coordinates: 610000
Tested coordinates: 620000
Tested coordinates: 630000
Tested coordinates: 640000
Tested coordinates: 650000
Tested coordinates: 660000
Tested coordinates: 670000
Tested coordinates: 680000
Tested coordinates: 690000
Tested coordinates: 700000
Tested coordinates: 710000
Tested coordinates: 720000
Tested coordinates: 730000
Tested coordinates: 740000
Tested coordinates: 750000
Tested coordinates: 760000
Tested coordinates: 770000
Tested coordinates: 780000
Tested coordinates: 790000
Tested coordinates: 800000
Tested coordinates: 810000
Tested coordinates: 820000
Tested coordinates: 830000
Tested coordinates: 840000
Tested coordinates: 850000
Tested coordinates: 860000
Tested coordinates: 870000
Tested coordinates: 880000
Tested coordinates: 890000
Valid coordinates: 21600
Tested coordinates: 900000
Tested coordinates: 910000
Tested coordinates: 920000
Tested coordinates: 930000
Tested coordinates: 940000
Tested coordinates: 950000
Tested coordinates: 960000
Tested coordinates: 970000
Tested coordinates: 980000
Tested coordinates: 990000
Tested coordinates: 1000000
Tested coordinates: 1010000
Tested coordinates: 1020000
Tested coordinates: 1030000
Tested coordinates: 1040000
Tested coordinates: 1050000
Tested coordinates: 1060000
Tested coordinates: 1070000
Tested coordinates: 1080000
Tested coordinates: 1090000
Tested coordinates: 1100000
Tested coordinates: 1110000
Tested coordinates: 1120000
Tested coordinates: 1130000
Tested coordinates: 1140000
Tested coordinates: 1150000
Tested coordinates: 1160000
Tested coordinates: 1170000
Tested coordinates: 1180000
Valid coordinates: 28800
Tested coordinates: 1190000
Tested coordinates: 1200000
Tested coordinates: 1210000
Tested coordinates: 1220000
Tested coordinates: 1230000
Tested coordinates: 1240000
Tested coordinates: 1250000
Tested coordinates: 1260000
Tested coordinates: 1270000
Tested coordinates: 1280000
Tested coordinates: 1290000
Tested coordinates: 1300000
Tested coordinates: 1310000
Tested coordinates: 1320000
Tested coordinates: 1330000
Tested coordinates: 1340000
Tested coordinates: 1350000
Tested coordinates: 1360000
Tested coordinates: 1370000
Tested coordinates: 1380000
Tested coordinates: 1390000
Tested coordinates: 1400000
Tested coordinates: 1410000
Tested coordinates: 1420000
Tested coordinates: 1430000
Tested coordinates: 1440000
Tested coordinates: 1450000
Tested coordinates: 1460000
Tested coordinates: 1470000
Tested coordinates: 1480000
Valid coordinates: 36000
Valid/Tested configurations: 36000/1480876
Generated Search Space:
NULL
Clean Info:
Removed Factors: character(0)

Removed Inverse Factors: character(0)

New Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
New Inverse Factors: []
New Fixed Factors: {}
Fixed Factors: {}
Computing D-Optimal Design
Computing D-Optimal Design with 18 experiments
Design Formula:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K
Starting "optFederov" run
Using Search Space:
NULL
Data Dimensions: [1] 36000    13

      T1_I T1_J T1_K T2_I T2_J T2_K U1_I U_I U_J U_K RT_I RT_J RT_K
5        1    5    2    5    3    0   29  29  29   0    0    2    0
956      6    2    0    5    6    6    0   2  27   0    0    1    0
1351     6    0    5    5    0    0    5   0  26   0    0    0    0
2472     0    4    6    6    3    4   28   0  27  29    1    1    0
6083     6    0    6    0    2    0   25   2   0   0    0    2    0
15412    6    1    0    6    6    0   28   2   0  28    2    0    0
15817    0    6    6    6    0    4    7   0   3   0    0    0    0
19667    2    1    1    6    0    5    6   3   0   2    0    0    2
20727    4    1    5    2    6    6    0  29   0  29    1    1    0
20821    5    6    6    0    6    0   11   0   9   8    1    1    0
22432    6    6    2    0    0    5   28   0  29  18    0    0    2
26142    6    4    4    6    6    6   29  22   0   0    0    0    1
29517    6    6    6    0    6    6   18  29  28   0    2    0    0
29684    1    0    0    0    4    6   27   6   0  26    0    0    0
29772    0    5    2    0    6    0    5   0  27  23    0    0    2
31631    2    0    6    5    3    0    2  28   0  24    0    0    2
32034    4    6    1    6    0    0    2  22   0  28    1    0    0
33161    0    0    2    1    2    6    1  25  29   0    2    0    0

D-Efficiency Approximation: [1] 0.471

Measuring design of size 18
Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = jjj
Code stats:
        Number of loops: 	76
        Max loop nest depth: 	5
        Additions: 		13831
        Multiplications: 	3968
        Divisions: 		0
        Logical: 		0
        Reads: 			20612
        Writes: 		2198
        Comparisons:		76
        Gotos: 			0
        
 building the original code:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -DORIGINAL -o __orio_perftest_original.exe __orio_perftest1.c timer_cpu.o -lm
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest1.exe __orio_perftest1.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest1.exe  
Program Test Output: 
{'[1, 5, 2, 5, 3, 0, 29, 29, 29, 0, 0, 2, 0]' : 0.22877}
{'[1, 5, 2, 5, 3, 0, 29, 29, 29, 0, 0, 2, 0]' : 0.222737}
{'[1, 5, 2, 5, 3, 0, 29, 29, 29, 0, 0, 2, 0]' : 0.221204}
{'[1, 5, 2, 5, 3, 0, 29, 29, 29, 0, 0, 2, 0]' : 0.221286}
{'[1, 5, 2, 5, 3, 0, 29, 29, 29, 0, 0, 2, 0]' : 0.220957}
{'[1, 5, 2, 5, 3, 0, 29, 29, 29, 0, 0, 2, 0]' : 0.221005}
{'[1, 5, 2, 5, 3, 0, 29, 29, 29, 0, 0, 2, 0]' : 0.221086}
{'[1, 5, 2, 5, 3, 0, 29, 29, 29, 0, 0, 2, 0]' : 0.221036}
{'[1, 5, 2, 5, 3, 0, 29, 29, 29, 0, 0, 2, 0]' : 0.221051}
{'[1, 5, 2, 5, 3, 0, 29, 29, 29, 0, 0, 2, 0]' : 0.220971}
{'[1, 5, 2, 5, 3, 0, 29, 29, 29, 0, 0, 2, 0]' : 0.221284}
{'[1, 5, 2, 5, 3, 0, 29, 29, 29, 0, 0, 2, 0]' : 0.221025}
{'[1, 5, 2, 5, 3, 0, 29, 29, 29, 0, 0, 2, 0]' : 0.221002}
{'[1, 5, 2, 5, 3, 0, 29, 29, 29, 0, 0, 2, 0]' : 0.220969}
{'[1, 5, 2, 5, 3, 0, 29, 29, 29, 0, 0, 2, 0]' : 0.220912}
{'[1, 5, 2, 5, 3, 0, 29, 29, 29, 0, 0, 2, 0]' : 0.220985}
{'[1, 5, 2, 5, 3, 0, 29, 29, 29, 0, 0, 2, 0]' : 0.221181}
{'[1, 5, 2, 5, 3, 0, 29, 29, 29, 0, 0, 2, 0]' : 0.22512}
{'[1, 5, 2, 5, 3, 0, 29, 29, 29, 0, 0, 2, 0]' : 0.22857}
{'[1, 5, 2, 5, 3, 0, 29, 29, 29, 0, 0, 2, 0]' : 0.228392}
{'[1, 5, 2, 5, 3, 0, 29, 29, 29, 0, 0, 2, 0]' : 0.228373}
{'[1, 5, 2, 5, 3, 0, 29, 29, 29, 0, 0, 2, 0]' : 0.227446}
{'[1, 5, 2, 5, 3, 0, 29, 29, 29, 0, 0, 2, 0]' : 0.221055}
{'[1, 5, 2, 5, 3, 0, 29, 29, 29, 0, 0, 2, 0]' : 0.221109}
{'[1, 5, 2, 5, 3, 0, 29, 29, 29, 0, 0, 2, 0]' : 0.220971}
{'[1, 5, 2, 5, 3, 0, 29, 29, 29, 0, 0, 2, 0]' : 0.221151}
{'[1, 5, 2, 5, 3, 0, 29, 29, 29, 0, 0, 2, 0]' : 0.221103}
{'[1, 5, 2, 5, 3, 0, 29, 29, 29, 0, 0, 2, 0]' : 0.22114}
{'[1, 5, 2, 5, 3, 0, 29, 29, 29, 0, 0, 2, 0]' : 0.22095}
{'[1, 5, 2, 5, 3, 0, 29, 29, 29, 0, 0, 2, 0]' : 0.22127}

out:
 ["{'[1, 5, 2, 5, 3, 0, 29, 29, 29, 0, 0, 2, 0]' : 0.22877}", "{'[1, 5, 2, 5, 3, 0, 29, 29, 29, 0, 0, 2, 0]' : 0.222737}", "{'[1, 5, 2, 5, 3, 0, 29, 29, 29, 0, 0, 2, 0]' : 0.221204}", "{'[1, 5, 2, 5, 3, 0, 29, 29, 29, 0, 0, 2, 0]' : 0.221286}", "{'[1, 5, 2, 5, 3, 0, 29, 29, 29, 0, 0, 2, 0]' : 0.220957}", "{'[1, 5, 2, 5, 3, 0, 29, 29, 29, 0, 0, 2, 0]' : 0.221005}", "{'[1, 5, 2, 5, 3, 0, 29, 29, 29, 0, 0, 2, 0]' : 0.221086}", "{'[1, 5, 2, 5, 3, 0, 29, 29, 29, 0, 0, 2, 0]' : 0.221036}", "{'[1, 5, 2, 5, 3, 0, 29, 29, 29, 0, 0, 2, 0]' : 0.221051}", "{'[1, 5, 2, 5, 3, 0, 29, 29, 29, 0, 0, 2, 0]' : 0.220971}", "{'[1, 5, 2, 5, 3, 0, 29, 29, 29, 0, 0, 2, 0]' : 0.221284}", "{'[1, 5, 2, 5, 3, 0, 29, 29, 29, 0, 0, 2, 0]' : 0.221025}", "{'[1, 5, 2, 5, 3, 0, 29, 29, 29, 0, 0, 2, 0]' : 0.221002}", "{'[1, 5, 2, 5, 3, 0, 29, 29, 29, 0, 0, 2, 0]' : 0.220969}", "{'[1, 5, 2, 5, 3, 0, 29, 29, 29, 0, 0, 2, 0]' : 0.220912}", "{'[1, 5, 2, 5, 3, 0, 29, 29, 29, 0, 0, 2, 0]' : 0.220985}", "{'[1, 5, 2, 5, 3, 0, 29, 29, 29, 0, 0, 2, 0]' : 0.221181}", "{'[1, 5, 2, 5, 3, 0, 29, 29, 29, 0, 0, 2, 0]' : 0.22512}", "{'[1, 5, 2, 5, 3, 0, 29, 29, 29, 0, 0, 2, 0]' : 0.22857}", "{'[1, 5, 2, 5, 3, 0, 29, 29, 29, 0, 0, 2, 0]' : 0.228392}", "{'[1, 5, 2, 5, 3, 0, 29, 29, 29, 0, 0, 2, 0]' : 0.228373}", "{'[1, 5, 2, 5, 3, 0, 29, 29, 29, 0, 0, 2, 0]' : 0.227446}", "{'[1, 5, 2, 5, 3, 0, 29, 29, 29, 0, 0, 2, 0]' : 0.221055}", "{'[1, 5, 2, 5, 3, 0, 29, 29, 29, 0, 0, 2, 0]' : 0.221109}", "{'[1, 5, 2, 5, 3, 0, 29, 29, 29, 0, 0, 2, 0]' : 0.220971}", "{'[1, 5, 2, 5, 3, 0, 29, 29, 29, 0, 0, 2, 0]' : 0.221151}", "{'[1, 5, 2, 5, 3, 0, 29, 29, 29, 0, 0, 2, 0]' : 0.221103}", "{'[1, 5, 2, 5, 3, 0, 29, 29, 29, 0, 0, 2, 0]' : 0.22114}", "{'[1, 5, 2, 5, 3, 0, 29, 29, 29, 0, 0, 2, 0]' : 0.22095}", "{'[1, 5, 2, 5, 3, 0, 29, 29, 29, 0, 0, 2, 0]' : 0.22127}"]
returning from 'run': {'[1, 5, 2, 5, 3, 0, 29, 29, 29, 0, 0, 2, 0]': ([0.22877, 0.222737, 0.221204, 0.221286, 0.220957, 0.221005, 0.221086, 0.221036, 0.221051, 0.220971, 0.221284, 0.221025, 0.221002, 0.220969, 0.220912, 0.220985, 0.221181, 0.22512, 0.22857, 0.228392, 0.228373, 0.227446, 0.221055, 0.221109, 0.220971, 0.221151, 0.221103, 0.22114, 0.22095, 0.22127], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 5, 2, 5, 3, 0, 29, 29, 29, 0, 0, 2, 0]': ([0.22877, 0.222737, 0.221204, 0.221286, 0.220957, 0.221005, 0.221086, 0.221036, 0.221051, 0.220971, 0.221284, 0.221025, 0.221002, 0.220969, 0.220912, 0.220985, 0.221181, 0.22512, 0.22857, 0.228392, 0.228373, 0.227446, 0.221055, 0.221109, 0.220971, 0.221151, 0.221103, 0.22114, 0.22095, 0.22127], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	23
        Max loop nest depth: 	6
        Additions: 		919
        Multiplications: 	304
        Divisions: 		0
        Logical: 		0
        Reads: 			1699
        Writes: 		203
        Comparisons:		23
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest2.exe __orio_perftest2.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest2.exe  
Program Test Output: 
{'[6, 2, 0, 5, 6, 6, 0, 2, 27, 0, 0, 1, 0]' : 0.144848}
{'[6, 2, 0, 5, 6, 6, 0, 2, 27, 0, 0, 1, 0]' : 0.145292}
{'[6, 2, 0, 5, 6, 6, 0, 2, 27, 0, 0, 1, 0]' : 0.145267}
{'[6, 2, 0, 5, 6, 6, 0, 2, 27, 0, 0, 1, 0]' : 0.135481}
{'[6, 2, 0, 5, 6, 6, 0, 2, 27, 0, 0, 1, 0]' : 0.125719}
{'[6, 2, 0, 5, 6, 6, 0, 2, 27, 0, 0, 1, 0]' : 0.129765}
{'[6, 2, 0, 5, 6, 6, 0, 2, 27, 0, 0, 1, 0]' : 0.128646}
{'[6, 2, 0, 5, 6, 6, 0, 2, 27, 0, 0, 1, 0]' : 0.128294}
{'[6, 2, 0, 5, 6, 6, 0, 2, 27, 0, 0, 1, 0]' : 0.128431}
{'[6, 2, 0, 5, 6, 6, 0, 2, 27, 0, 0, 1, 0]' : 0.129771}
{'[6, 2, 0, 5, 6, 6, 0, 2, 27, 0, 0, 1, 0]' : 0.128685}
{'[6, 2, 0, 5, 6, 6, 0, 2, 27, 0, 0, 1, 0]' : 0.125783}
{'[6, 2, 0, 5, 6, 6, 0, 2, 27, 0, 0, 1, 0]' : 0.125944}
{'[6, 2, 0, 5, 6, 6, 0, 2, 27, 0, 0, 1, 0]' : 0.129512}
{'[6, 2, 0, 5, 6, 6, 0, 2, 27, 0, 0, 1, 0]' : 0.129224}
{'[6, 2, 0, 5, 6, 6, 0, 2, 27, 0, 0, 1, 0]' : 0.129163}
{'[6, 2, 0, 5, 6, 6, 0, 2, 27, 0, 0, 1, 0]' : 0.129201}
{'[6, 2, 0, 5, 6, 6, 0, 2, 27, 0, 0, 1, 0]' : 0.128638}
{'[6, 2, 0, 5, 6, 6, 0, 2, 27, 0, 0, 1, 0]' : 0.127289}
{'[6, 2, 0, 5, 6, 6, 0, 2, 27, 0, 0, 1, 0]' : 0.125893}
{'[6, 2, 0, 5, 6, 6, 0, 2, 27, 0, 0, 1, 0]' : 0.127185}
{'[6, 2, 0, 5, 6, 6, 0, 2, 27, 0, 0, 1, 0]' : 0.12855}
{'[6, 2, 0, 5, 6, 6, 0, 2, 27, 0, 0, 1, 0]' : 0.128398}
{'[6, 2, 0, 5, 6, 6, 0, 2, 27, 0, 0, 1, 0]' : 0.128325}
{'[6, 2, 0, 5, 6, 6, 0, 2, 27, 0, 0, 1, 0]' : 0.128692}
{'[6, 2, 0, 5, 6, 6, 0, 2, 27, 0, 0, 1, 0]' : 0.126885}
{'[6, 2, 0, 5, 6, 6, 0, 2, 27, 0, 0, 1, 0]' : 0.125432}
{'[6, 2, 0, 5, 6, 6, 0, 2, 27, 0, 0, 1, 0]' : 0.125002}
{'[6, 2, 0, 5, 6, 6, 0, 2, 27, 0, 0, 1, 0]' : 0.125573}
{'[6, 2, 0, 5, 6, 6, 0, 2, 27, 0, 0, 1, 0]' : 0.125139}

out:
 ["{'[6, 2, 0, 5, 6, 6, 0, 2, 27, 0, 0, 1, 0]' : 0.144848}", "{'[6, 2, 0, 5, 6, 6, 0, 2, 27, 0, 0, 1, 0]' : 0.145292}", "{'[6, 2, 0, 5, 6, 6, 0, 2, 27, 0, 0, 1, 0]' : 0.145267}", "{'[6, 2, 0, 5, 6, 6, 0, 2, 27, 0, 0, 1, 0]' : 0.135481}", "{'[6, 2, 0, 5, 6, 6, 0, 2, 27, 0, 0, 1, 0]' : 0.125719}", "{'[6, 2, 0, 5, 6, 6, 0, 2, 27, 0, 0, 1, 0]' : 0.129765}", "{'[6, 2, 0, 5, 6, 6, 0, 2, 27, 0, 0, 1, 0]' : 0.128646}", "{'[6, 2, 0, 5, 6, 6, 0, 2, 27, 0, 0, 1, 0]' : 0.128294}", "{'[6, 2, 0, 5, 6, 6, 0, 2, 27, 0, 0, 1, 0]' : 0.128431}", "{'[6, 2, 0, 5, 6, 6, 0, 2, 27, 0, 0, 1, 0]' : 0.129771}", "{'[6, 2, 0, 5, 6, 6, 0, 2, 27, 0, 0, 1, 0]' : 0.128685}", "{'[6, 2, 0, 5, 6, 6, 0, 2, 27, 0, 0, 1, 0]' : 0.125783}", "{'[6, 2, 0, 5, 6, 6, 0, 2, 27, 0, 0, 1, 0]' : 0.125944}", "{'[6, 2, 0, 5, 6, 6, 0, 2, 27, 0, 0, 1, 0]' : 0.129512}", "{'[6, 2, 0, 5, 6, 6, 0, 2, 27, 0, 0, 1, 0]' : 0.129224}", "{'[6, 2, 0, 5, 6, 6, 0, 2, 27, 0, 0, 1, 0]' : 0.129163}", "{'[6, 2, 0, 5, 6, 6, 0, 2, 27, 0, 0, 1, 0]' : 0.129201}", "{'[6, 2, 0, 5, 6, 6, 0, 2, 27, 0, 0, 1, 0]' : 0.128638}", "{'[6, 2, 0, 5, 6, 6, 0, 2, 27, 0, 0, 1, 0]' : 0.127289}", "{'[6, 2, 0, 5, 6, 6, 0, 2, 27, 0, 0, 1, 0]' : 0.125893}", "{'[6, 2, 0, 5, 6, 6, 0, 2, 27, 0, 0, 1, 0]' : 0.127185}", "{'[6, 2, 0, 5, 6, 6, 0, 2, 27, 0, 0, 1, 0]' : 0.12855}", "{'[6, 2, 0, 5, 6, 6, 0, 2, 27, 0, 0, 1, 0]' : 0.128398}", "{'[6, 2, 0, 5, 6, 6, 0, 2, 27, 0, 0, 1, 0]' : 0.128325}", "{'[6, 2, 0, 5, 6, 6, 0, 2, 27, 0, 0, 1, 0]' : 0.128692}", "{'[6, 2, 0, 5, 6, 6, 0, 2, 27, 0, 0, 1, 0]' : 0.126885}", "{'[6, 2, 0, 5, 6, 6, 0, 2, 27, 0, 0, 1, 0]' : 0.125432}", "{'[6, 2, 0, 5, 6, 6, 0, 2, 27, 0, 0, 1, 0]' : 0.125002}", "{'[6, 2, 0, 5, 6, 6, 0, 2, 27, 0, 0, 1, 0]' : 0.125573}", "{'[6, 2, 0, 5, 6, 6, 0, 2, 27, 0, 0, 1, 0]' : 0.125139}"]
returning from 'run': {'[6, 2, 0, 5, 6, 6, 0, 2, 27, 0, 0, 1, 0]': ([0.144848, 0.145292, 0.145267, 0.135481, 0.125719, 0.129765, 0.128646, 0.128294, 0.128431, 0.129771, 0.128685, 0.125783, 0.125944, 0.129512, 0.129224, 0.129163, 0.129201, 0.128638, 0.127289, 0.125893, 0.127185, 0.12855, 0.128398, 0.128325, 0.128692, 0.126885, 0.125432, 0.125002, 0.125573, 0.125139], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 2, 0, 5, 6, 6, 0, 2, 27, 0, 0, 1, 0]': ([0.144848, 0.145292, 0.145267, 0.135481, 0.125719, 0.129765, 0.128646, 0.128294, 0.128431, 0.129771, 0.128685, 0.125783, 0.125944, 0.129512, 0.129224, 0.129163, 0.129201, 0.128638, 0.127289, 0.125893, 0.127185, 0.12855, 0.128398, 0.128325, 0.128692, 0.126885, 0.125432, 0.125002, 0.125573, 0.125139], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	5
        Additions: 		142
        Multiplications: 	58
        Divisions: 		0
        Logical: 		0
        Reads: 			361
        Writes: 		55
        Comparisons:		9
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest3.exe __orio_perftest3.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest3.exe  
Program Test Output: 
{'[6, 0, 5, 5, 0, 0, 5, 0, 26, 0, 0, 0, 0]' : 0.212094}
{'[6, 0, 5, 5, 0, 0, 5, 0, 26, 0, 0, 0, 0]' : 0.20059}
{'[6, 0, 5, 5, 0, 0, 5, 0, 26, 0, 0, 0, 0]' : 0.176674}
{'[6, 0, 5, 5, 0, 0, 5, 0, 26, 0, 0, 0, 0]' : 0.176288}
{'[6, 0, 5, 5, 0, 0, 5, 0, 26, 0, 0, 0, 0]' : 0.176292}
{'[6, 0, 5, 5, 0, 0, 5, 0, 26, 0, 0, 0, 0]' : 0.176279}
{'[6, 0, 5, 5, 0, 0, 5, 0, 26, 0, 0, 0, 0]' : 0.176298}
{'[6, 0, 5, 5, 0, 0, 5, 0, 26, 0, 0, 0, 0]' : 0.176372}
{'[6, 0, 5, 5, 0, 0, 5, 0, 26, 0, 0, 0, 0]' : 0.176267}
{'[6, 0, 5, 5, 0, 0, 5, 0, 26, 0, 0, 0, 0]' : 0.176265}
{'[6, 0, 5, 5, 0, 0, 5, 0, 26, 0, 0, 0, 0]' : 0.176718}
{'[6, 0, 5, 5, 0, 0, 5, 0, 26, 0, 0, 0, 0]' : 0.176608}
{'[6, 0, 5, 5, 0, 0, 5, 0, 26, 0, 0, 0, 0]' : 0.176275}
{'[6, 0, 5, 5, 0, 0, 5, 0, 26, 0, 0, 0, 0]' : 0.176496}
{'[6, 0, 5, 5, 0, 0, 5, 0, 26, 0, 0, 0, 0]' : 0.176299}
{'[6, 0, 5, 5, 0, 0, 5, 0, 26, 0, 0, 0, 0]' : 0.17629}
{'[6, 0, 5, 5, 0, 0, 5, 0, 26, 0, 0, 0, 0]' : 0.176603}
{'[6, 0, 5, 5, 0, 0, 5, 0, 26, 0, 0, 0, 0]' : 0.176363}
{'[6, 0, 5, 5, 0, 0, 5, 0, 26, 0, 0, 0, 0]' : 0.17943}
{'[6, 0, 5, 5, 0, 0, 5, 0, 26, 0, 0, 0, 0]' : 0.182292}
{'[6, 0, 5, 5, 0, 0, 5, 0, 26, 0, 0, 0, 0]' : 0.182339}
{'[6, 0, 5, 5, 0, 0, 5, 0, 26, 0, 0, 0, 0]' : 0.182319}
{'[6, 0, 5, 5, 0, 0, 5, 0, 26, 0, 0, 0, 0]' : 0.182569}
{'[6, 0, 5, 5, 0, 0, 5, 0, 26, 0, 0, 0, 0]' : 0.18233}
{'[6, 0, 5, 5, 0, 0, 5, 0, 26, 0, 0, 0, 0]' : 0.182561}
{'[6, 0, 5, 5, 0, 0, 5, 0, 26, 0, 0, 0, 0]' : 0.182331}
{'[6, 0, 5, 5, 0, 0, 5, 0, 26, 0, 0, 0, 0]' : 0.182581}
{'[6, 0, 5, 5, 0, 0, 5, 0, 26, 0, 0, 0, 0]' : 0.182425}
{'[6, 0, 5, 5, 0, 0, 5, 0, 26, 0, 0, 0, 0]' : 0.182421}
{'[6, 0, 5, 5, 0, 0, 5, 0, 26, 0, 0, 0, 0]' : 0.182417}

out:
 ["{'[6, 0, 5, 5, 0, 0, 5, 0, 26, 0, 0, 0, 0]' : 0.212094}", "{'[6, 0, 5, 5, 0, 0, 5, 0, 26, 0, 0, 0, 0]' : 0.20059}", "{'[6, 0, 5, 5, 0, 0, 5, 0, 26, 0, 0, 0, 0]' : 0.176674}", "{'[6, 0, 5, 5, 0, 0, 5, 0, 26, 0, 0, 0, 0]' : 0.176288}", "{'[6, 0, 5, 5, 0, 0, 5, 0, 26, 0, 0, 0, 0]' : 0.176292}", "{'[6, 0, 5, 5, 0, 0, 5, 0, 26, 0, 0, 0, 0]' : 0.176279}", "{'[6, 0, 5, 5, 0, 0, 5, 0, 26, 0, 0, 0, 0]' : 0.176298}", "{'[6, 0, 5, 5, 0, 0, 5, 0, 26, 0, 0, 0, 0]' : 0.176372}", "{'[6, 0, 5, 5, 0, 0, 5, 0, 26, 0, 0, 0, 0]' : 0.176267}", "{'[6, 0, 5, 5, 0, 0, 5, 0, 26, 0, 0, 0, 0]' : 0.176265}", "{'[6, 0, 5, 5, 0, 0, 5, 0, 26, 0, 0, 0, 0]' : 0.176718}", "{'[6, 0, 5, 5, 0, 0, 5, 0, 26, 0, 0, 0, 0]' : 0.176608}", "{'[6, 0, 5, 5, 0, 0, 5, 0, 26, 0, 0, 0, 0]' : 0.176275}", "{'[6, 0, 5, 5, 0, 0, 5, 0, 26, 0, 0, 0, 0]' : 0.176496}", "{'[6, 0, 5, 5, 0, 0, 5, 0, 26, 0, 0, 0, 0]' : 0.176299}", "{'[6, 0, 5, 5, 0, 0, 5, 0, 26, 0, 0, 0, 0]' : 0.17629}", "{'[6, 0, 5, 5, 0, 0, 5, 0, 26, 0, 0, 0, 0]' : 0.176603}", "{'[6, 0, 5, 5, 0, 0, 5, 0, 26, 0, 0, 0, 0]' : 0.176363}", "{'[6, 0, 5, 5, 0, 0, 5, 0, 26, 0, 0, 0, 0]' : 0.17943}", "{'[6, 0, 5, 5, 0, 0, 5, 0, 26, 0, 0, 0, 0]' : 0.182292}", "{'[6, 0, 5, 5, 0, 0, 5, 0, 26, 0, 0, 0, 0]' : 0.182339}", "{'[6, 0, 5, 5, 0, 0, 5, 0, 26, 0, 0, 0, 0]' : 0.182319}", "{'[6, 0, 5, 5, 0, 0, 5, 0, 26, 0, 0, 0, 0]' : 0.182569}", "{'[6, 0, 5, 5, 0, 0, 5, 0, 26, 0, 0, 0, 0]' : 0.18233}", "{'[6, 0, 5, 5, 0, 0, 5, 0, 26, 0, 0, 0, 0]' : 0.182561}", "{'[6, 0, 5, 5, 0, 0, 5, 0, 26, 0, 0, 0, 0]' : 0.182331}", "{'[6, 0, 5, 5, 0, 0, 5, 0, 26, 0, 0, 0, 0]' : 0.182581}", "{'[6, 0, 5, 5, 0, 0, 5, 0, 26, 0, 0, 0, 0]' : 0.182425}", "{'[6, 0, 5, 5, 0, 0, 5, 0, 26, 0, 0, 0, 0]' : 0.182421}", "{'[6, 0, 5, 5, 0, 0, 5, 0, 26, 0, 0, 0, 0]' : 0.182417}"]
returning from 'run': {'[6, 0, 5, 5, 0, 0, 5, 0, 26, 0, 0, 0, 0]': ([0.212094, 0.20059, 0.176674, 0.176288, 0.176292, 0.176279, 0.176298, 0.176372, 0.176267, 0.176265, 0.176718, 0.176608, 0.176275, 0.176496, 0.176299, 0.17629, 0.176603, 0.176363, 0.17943, 0.182292, 0.182339, 0.182319, 0.182569, 0.18233, 0.182561, 0.182331, 0.182581, 0.182425, 0.182421, 0.182417], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 5, 5, 0, 0, 5, 0, 26, 0, 0, 0, 0]': ([0.212094, 0.20059, 0.176674, 0.176288, 0.176292, 0.176279, 0.176298, 0.176372, 0.176267, 0.176265, 0.176718, 0.176608, 0.176275, 0.176496, 0.176299, 0.17629, 0.176603, 0.176363, 0.17943, 0.182292, 0.182339, 0.182319, 0.182569, 0.18233, 0.182561, 0.182331, 0.182581, 0.182425, 0.182421, 0.182417], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	5
        Additions: 		3960
        Multiplications: 	1224
        Divisions: 		0
        Logical: 		0
        Reads: 			6335
        Writes: 		686
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest4.exe __orio_perftest4.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest4.exe  
Program Test Output: 
{'[0, 4, 6, 6, 3, 4, 28, 0, 27, 29, 1, 1, 0]' : 0.111977}
{'[0, 4, 6, 6, 3, 4, 28, 0, 27, 29, 1, 1, 0]' : 0.111733}
{'[0, 4, 6, 6, 3, 4, 28, 0, 27, 29, 1, 1, 0]' : 0.111724}
{'[0, 4, 6, 6, 3, 4, 28, 0, 27, 29, 1, 1, 0]' : 0.112155}
{'[0, 4, 6, 6, 3, 4, 28, 0, 27, 29, 1, 1, 0]' : 0.112214}
{'[0, 4, 6, 6, 3, 4, 28, 0, 27, 29, 1, 1, 0]' : 0.111783}
{'[0, 4, 6, 6, 3, 4, 28, 0, 27, 29, 1, 1, 0]' : 0.111594}
{'[0, 4, 6, 6, 3, 4, 28, 0, 27, 29, 1, 1, 0]' : 0.11239}
{'[0, 4, 6, 6, 3, 4, 28, 0, 27, 29, 1, 1, 0]' : 0.11442}
{'[0, 4, 6, 6, 3, 4, 28, 0, 27, 29, 1, 1, 0]' : 0.114536}
{'[0, 4, 6, 6, 3, 4, 28, 0, 27, 29, 1, 1, 0]' : 0.113597}
{'[0, 4, 6, 6, 3, 4, 28, 0, 27, 29, 1, 1, 0]' : 0.111827}
{'[0, 4, 6, 6, 3, 4, 28, 0, 27, 29, 1, 1, 0]' : 0.112005}
{'[0, 4, 6, 6, 3, 4, 28, 0, 27, 29, 1, 1, 0]' : 0.113349}
{'[0, 4, 6, 6, 3, 4, 28, 0, 27, 29, 1, 1, 0]' : 0.114307}
{'[0, 4, 6, 6, 3, 4, 28, 0, 27, 29, 1, 1, 0]' : 0.114712}
{'[0, 4, 6, 6, 3, 4, 28, 0, 27, 29, 1, 1, 0]' : 0.114663}
{'[0, 4, 6, 6, 3, 4, 28, 0, 27, 29, 1, 1, 0]' : 0.114433}
{'[0, 4, 6, 6, 3, 4, 28, 0, 27, 29, 1, 1, 0]' : 0.114268}
{'[0, 4, 6, 6, 3, 4, 28, 0, 27, 29, 1, 1, 0]' : 0.114371}
{'[0, 4, 6, 6, 3, 4, 28, 0, 27, 29, 1, 1, 0]' : 0.114577}
{'[0, 4, 6, 6, 3, 4, 28, 0, 27, 29, 1, 1, 0]' : 0.111969}
{'[0, 4, 6, 6, 3, 4, 28, 0, 27, 29, 1, 1, 0]' : 0.112548}
{'[0, 4, 6, 6, 3, 4, 28, 0, 27, 29, 1, 1, 0]' : 0.114493}
{'[0, 4, 6, 6, 3, 4, 28, 0, 27, 29, 1, 1, 0]' : 0.113911}
{'[0, 4, 6, 6, 3, 4, 28, 0, 27, 29, 1, 1, 0]' : 0.112022}
{'[0, 4, 6, 6, 3, 4, 28, 0, 27, 29, 1, 1, 0]' : 0.111516}
{'[0, 4, 6, 6, 3, 4, 28, 0, 27, 29, 1, 1, 0]' : 0.111798}
{'[0, 4, 6, 6, 3, 4, 28, 0, 27, 29, 1, 1, 0]' : 0.111725}
{'[0, 4, 6, 6, 3, 4, 28, 0, 27, 29, 1, 1, 0]' : 0.112099}

out:
 ["{'[0, 4, 6, 6, 3, 4, 28, 0, 27, 29, 1, 1, 0]' : 0.111977}", "{'[0, 4, 6, 6, 3, 4, 28, 0, 27, 29, 1, 1, 0]' : 0.111733}", "{'[0, 4, 6, 6, 3, 4, 28, 0, 27, 29, 1, 1, 0]' : 0.111724}", "{'[0, 4, 6, 6, 3, 4, 28, 0, 27, 29, 1, 1, 0]' : 0.112155}", "{'[0, 4, 6, 6, 3, 4, 28, 0, 27, 29, 1, 1, 0]' : 0.112214}", "{'[0, 4, 6, 6, 3, 4, 28, 0, 27, 29, 1, 1, 0]' : 0.111783}", "{'[0, 4, 6, 6, 3, 4, 28, 0, 27, 29, 1, 1, 0]' : 0.111594}", "{'[0, 4, 6, 6, 3, 4, 28, 0, 27, 29, 1, 1, 0]' : 0.11239}", "{'[0, 4, 6, 6, 3, 4, 28, 0, 27, 29, 1, 1, 0]' : 0.11442}", "{'[0, 4, 6, 6, 3, 4, 28, 0, 27, 29, 1, 1, 0]' : 0.114536}", "{'[0, 4, 6, 6, 3, 4, 28, 0, 27, 29, 1, 1, 0]' : 0.113597}", "{'[0, 4, 6, 6, 3, 4, 28, 0, 27, 29, 1, 1, 0]' : 0.111827}", "{'[0, 4, 6, 6, 3, 4, 28, 0, 27, 29, 1, 1, 0]' : 0.112005}", "{'[0, 4, 6, 6, 3, 4, 28, 0, 27, 29, 1, 1, 0]' : 0.113349}", "{'[0, 4, 6, 6, 3, 4, 28, 0, 27, 29, 1, 1, 0]' : 0.114307}", "{'[0, 4, 6, 6, 3, 4, 28, 0, 27, 29, 1, 1, 0]' : 0.114712}", "{'[0, 4, 6, 6, 3, 4, 28, 0, 27, 29, 1, 1, 0]' : 0.114663}", "{'[0, 4, 6, 6, 3, 4, 28, 0, 27, 29, 1, 1, 0]' : 0.114433}", "{'[0, 4, 6, 6, 3, 4, 28, 0, 27, 29, 1, 1, 0]' : 0.114268}", "{'[0, 4, 6, 6, 3, 4, 28, 0, 27, 29, 1, 1, 0]' : 0.114371}", "{'[0, 4, 6, 6, 3, 4, 28, 0, 27, 29, 1, 1, 0]' : 0.114577}", "{'[0, 4, 6, 6, 3, 4, 28, 0, 27, 29, 1, 1, 0]' : 0.111969}", "{'[0, 4, 6, 6, 3, 4, 28, 0, 27, 29, 1, 1, 0]' : 0.112548}", "{'[0, 4, 6, 6, 3, 4, 28, 0, 27, 29, 1, 1, 0]' : 0.114493}", "{'[0, 4, 6, 6, 3, 4, 28, 0, 27, 29, 1, 1, 0]' : 0.113911}", "{'[0, 4, 6, 6, 3, 4, 28, 0, 27, 29, 1, 1, 0]' : 0.112022}", "{'[0, 4, 6, 6, 3, 4, 28, 0, 27, 29, 1, 1, 0]' : 0.111516}", "{'[0, 4, 6, 6, 3, 4, 28, 0, 27, 29, 1, 1, 0]' : 0.111798}", "{'[0, 4, 6, 6, 3, 4, 28, 0, 27, 29, 1, 1, 0]' : 0.111725}", "{'[0, 4, 6, 6, 3, 4, 28, 0, 27, 29, 1, 1, 0]' : 0.112099}"]
returning from 'run': {'[0, 4, 6, 6, 3, 4, 28, 0, 27, 29, 1, 1, 0]': ([0.111977, 0.111733, 0.111724, 0.112155, 0.112214, 0.111783, 0.111594, 0.11239, 0.11442, 0.114536, 0.113597, 0.111827, 0.112005, 0.113349, 0.114307, 0.114712, 0.114663, 0.114433, 0.114268, 0.114371, 0.114577, 0.111969, 0.112548, 0.114493, 0.113911, 0.112022, 0.111516, 0.111798, 0.111725, 0.112099], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 4, 6, 6, 3, 4, 28, 0, 27, 29, 1, 1, 0]': ([0.111977, 0.111733, 0.111724, 0.112155, 0.112214, 0.111783, 0.111594, 0.11239, 0.11442, 0.114536, 0.113597, 0.111827, 0.112005, 0.113349, 0.114307, 0.114712, 0.114663, 0.114433, 0.114268, 0.114371, 0.114577, 0.111969, 0.112548, 0.114493, 0.113911, 0.112022, 0.111516, 0.111798, 0.111725, 0.112099], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		802
        Multiplications: 	272
        Divisions: 		0
        Logical: 		0
        Reads: 			1519
        Writes: 		197
        Comparisons:		15
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest5.exe __orio_perftest5.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest5.exe  
Program Test Output: 
{'[6, 0, 6, 0, 2, 0, 25, 2, 0, 0, 0, 2, 0]' : 0.147201}
{'[6, 0, 6, 0, 2, 0, 25, 2, 0, 0, 0, 2, 0]' : 0.147175}
{'[6, 0, 6, 0, 2, 0, 25, 2, 0, 0, 0, 2, 0]' : 0.138135}
{'[6, 0, 6, 0, 2, 0, 25, 2, 0, 0, 0, 2, 0]' : 0.131566}
{'[6, 0, 6, 0, 2, 0, 25, 2, 0, 0, 0, 2, 0]' : 0.131934}
{'[6, 0, 6, 0, 2, 0, 25, 2, 0, 0, 0, 2, 0]' : 0.130433}
{'[6, 0, 6, 0, 2, 0, 25, 2, 0, 0, 0, 2, 0]' : 0.128102}
{'[6, 0, 6, 0, 2, 0, 25, 2, 0, 0, 0, 2, 0]' : 0.127836}
{'[6, 0, 6, 0, 2, 0, 25, 2, 0, 0, 0, 2, 0]' : 0.12862}
{'[6, 0, 6, 0, 2, 0, 25, 2, 0, 0, 0, 2, 0]' : 0.131661}
{'[6, 0, 6, 0, 2, 0, 25, 2, 0, 0, 0, 2, 0]' : 0.131616}
{'[6, 0, 6, 0, 2, 0, 25, 2, 0, 0, 0, 2, 0]' : 0.131669}
{'[6, 0, 6, 0, 2, 0, 25, 2, 0, 0, 0, 2, 0]' : 0.131672}
{'[6, 0, 6, 0, 2, 0, 25, 2, 0, 0, 0, 2, 0]' : 0.131588}
{'[6, 0, 6, 0, 2, 0, 25, 2, 0, 0, 0, 2, 0]' : 0.131615}
{'[6, 0, 6, 0, 2, 0, 25, 2, 0, 0, 0, 2, 0]' : 0.131609}
{'[6, 0, 6, 0, 2, 0, 25, 2, 0, 0, 0, 2, 0]' : 0.131593}
{'[6, 0, 6, 0, 2, 0, 25, 2, 0, 0, 0, 2, 0]' : 0.131598}
{'[6, 0, 6, 0, 2, 0, 25, 2, 0, 0, 0, 2, 0]' : 0.13152}
{'[6, 0, 6, 0, 2, 0, 25, 2, 0, 0, 0, 2, 0]' : 0.131804}
{'[6, 0, 6, 0, 2, 0, 25, 2, 0, 0, 0, 2, 0]' : 0.131834}
{'[6, 0, 6, 0, 2, 0, 25, 2, 0, 0, 0, 2, 0]' : 0.131635}
{'[6, 0, 6, 0, 2, 0, 25, 2, 0, 0, 0, 2, 0]' : 0.129768}
{'[6, 0, 6, 0, 2, 0, 25, 2, 0, 0, 0, 2, 0]' : 0.128159}
{'[6, 0, 6, 0, 2, 0, 25, 2, 0, 0, 0, 2, 0]' : 0.131332}
{'[6, 0, 6, 0, 2, 0, 25, 2, 0, 0, 0, 2, 0]' : 0.131584}
{'[6, 0, 6, 0, 2, 0, 25, 2, 0, 0, 0, 2, 0]' : 0.131559}
{'[6, 0, 6, 0, 2, 0, 25, 2, 0, 0, 0, 2, 0]' : 0.131674}
{'[6, 0, 6, 0, 2, 0, 25, 2, 0, 0, 0, 2, 0]' : 0.131774}
{'[6, 0, 6, 0, 2, 0, 25, 2, 0, 0, 0, 2, 0]' : 0.131548}

out:
 ["{'[6, 0, 6, 0, 2, 0, 25, 2, 0, 0, 0, 2, 0]' : 0.147201}", "{'[6, 0, 6, 0, 2, 0, 25, 2, 0, 0, 0, 2, 0]' : 0.147175}", "{'[6, 0, 6, 0, 2, 0, 25, 2, 0, 0, 0, 2, 0]' : 0.138135}", "{'[6, 0, 6, 0, 2, 0, 25, 2, 0, 0, 0, 2, 0]' : 0.131566}", "{'[6, 0, 6, 0, 2, 0, 25, 2, 0, 0, 0, 2, 0]' : 0.131934}", "{'[6, 0, 6, 0, 2, 0, 25, 2, 0, 0, 0, 2, 0]' : 0.130433}", "{'[6, 0, 6, 0, 2, 0, 25, 2, 0, 0, 0, 2, 0]' : 0.128102}", "{'[6, 0, 6, 0, 2, 0, 25, 2, 0, 0, 0, 2, 0]' : 0.127836}", "{'[6, 0, 6, 0, 2, 0, 25, 2, 0, 0, 0, 2, 0]' : 0.12862}", "{'[6, 0, 6, 0, 2, 0, 25, 2, 0, 0, 0, 2, 0]' : 0.131661}", "{'[6, 0, 6, 0, 2, 0, 25, 2, 0, 0, 0, 2, 0]' : 0.131616}", "{'[6, 0, 6, 0, 2, 0, 25, 2, 0, 0, 0, 2, 0]' : 0.131669}", "{'[6, 0, 6, 0, 2, 0, 25, 2, 0, 0, 0, 2, 0]' : 0.131672}", "{'[6, 0, 6, 0, 2, 0, 25, 2, 0, 0, 0, 2, 0]' : 0.131588}", "{'[6, 0, 6, 0, 2, 0, 25, 2, 0, 0, 0, 2, 0]' : 0.131615}", "{'[6, 0, 6, 0, 2, 0, 25, 2, 0, 0, 0, 2, 0]' : 0.131609}", "{'[6, 0, 6, 0, 2, 0, 25, 2, 0, 0, 0, 2, 0]' : 0.131593}", "{'[6, 0, 6, 0, 2, 0, 25, 2, 0, 0, 0, 2, 0]' : 0.131598}", "{'[6, 0, 6, 0, 2, 0, 25, 2, 0, 0, 0, 2, 0]' : 0.13152}", "{'[6, 0, 6, 0, 2, 0, 25, 2, 0, 0, 0, 2, 0]' : 0.131804}", "{'[6, 0, 6, 0, 2, 0, 25, 2, 0, 0, 0, 2, 0]' : 0.131834}", "{'[6, 0, 6, 0, 2, 0, 25, 2, 0, 0, 0, 2, 0]' : 0.131635}", "{'[6, 0, 6, 0, 2, 0, 25, 2, 0, 0, 0, 2, 0]' : 0.129768}", "{'[6, 0, 6, 0, 2, 0, 25, 2, 0, 0, 0, 2, 0]' : 0.128159}", "{'[6, 0, 6, 0, 2, 0, 25, 2, 0, 0, 0, 2, 0]' : 0.131332}", "{'[6, 0, 6, 0, 2, 0, 25, 2, 0, 0, 0, 2, 0]' : 0.131584}", "{'[6, 0, 6, 0, 2, 0, 25, 2, 0, 0, 0, 2, 0]' : 0.131559}", "{'[6, 0, 6, 0, 2, 0, 25, 2, 0, 0, 0, 2, 0]' : 0.131674}", "{'[6, 0, 6, 0, 2, 0, 25, 2, 0, 0, 0, 2, 0]' : 0.131774}", "{'[6, 0, 6, 0, 2, 0, 25, 2, 0, 0, 0, 2, 0]' : 0.131548}"]
returning from 'run': {'[6, 0, 6, 0, 2, 0, 25, 2, 0, 0, 0, 2, 0]': ([0.147201, 0.147175, 0.138135, 0.131566, 0.131934, 0.130433, 0.128102, 0.127836, 0.12862, 0.131661, 0.131616, 0.131669, 0.131672, 0.131588, 0.131615, 0.131609, 0.131593, 0.131598, 0.13152, 0.131804, 0.131834, 0.131635, 0.129768, 0.128159, 0.131332, 0.131584, 0.131559, 0.131674, 0.131774, 0.131548], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 6, 0, 2, 0, 25, 2, 0, 0, 0, 2, 0]': ([0.147201, 0.147175, 0.138135, 0.131566, 0.131934, 0.130433, 0.128102, 0.127836, 0.12862, 0.131661, 0.131616, 0.131669, 0.131672, 0.131588, 0.131615, 0.131609, 0.131593, 0.131598, 0.13152, 0.131804, 0.131834, 0.131635, 0.129768, 0.128159, 0.131332, 0.131584, 0.131559, 0.131674, 0.131774, 0.131548], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	26
        Max loop nest depth: 	6
        Additions: 		7456
        Multiplications: 	2232
        Divisions: 		0
        Logical: 		0
        Reads: 			11396
        Writes: 		1203
        Comparisons:		26
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest6.exe __orio_perftest6.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest6.exe  
Program Test Output: 
{'[6, 1, 0, 6, 6, 0, 28, 2, 0, 28, 2, 0, 0]' : 0.216347}
{'[6, 1, 0, 6, 6, 0, 28, 2, 0, 28, 2, 0, 0]' : 0.21567}
{'[6, 1, 0, 6, 6, 0, 28, 2, 0, 28, 2, 0, 0]' : 0.19628}
{'[6, 1, 0, 6, 6, 0, 28, 2, 0, 28, 2, 0, 0]' : 0.193681}
{'[6, 1, 0, 6, 6, 0, 28, 2, 0, 28, 2, 0, 0]' : 0.192777}
{'[6, 1, 0, 6, 6, 0, 28, 2, 0, 28, 2, 0, 0]' : 0.193028}
{'[6, 1, 0, 6, 6, 0, 28, 2, 0, 28, 2, 0, 0]' : 0.193273}
{'[6, 1, 0, 6, 6, 0, 28, 2, 0, 28, 2, 0, 0]' : 0.193147}
{'[6, 1, 0, 6, 6, 0, 28, 2, 0, 28, 2, 0, 0]' : 0.193082}
{'[6, 1, 0, 6, 6, 0, 28, 2, 0, 28, 2, 0, 0]' : 0.194266}
{'[6, 1, 0, 6, 6, 0, 28, 2, 0, 28, 2, 0, 0]' : 0.193911}
{'[6, 1, 0, 6, 6, 0, 28, 2, 0, 28, 2, 0, 0]' : 0.193142}
{'[6, 1, 0, 6, 6, 0, 28, 2, 0, 28, 2, 0, 0]' : 0.193215}
{'[6, 1, 0, 6, 6, 0, 28, 2, 0, 28, 2, 0, 0]' : 0.193202}
{'[6, 1, 0, 6, 6, 0, 28, 2, 0, 28, 2, 0, 0]' : 0.193146}
{'[6, 1, 0, 6, 6, 0, 28, 2, 0, 28, 2, 0, 0]' : 0.189938}
{'[6, 1, 0, 6, 6, 0, 28, 2, 0, 28, 2, 0, 0]' : 0.189996}
{'[6, 1, 0, 6, 6, 0, 28, 2, 0, 28, 2, 0, 0]' : 0.193338}
{'[6, 1, 0, 6, 6, 0, 28, 2, 0, 28, 2, 0, 0]' : 0.193858}
{'[6, 1, 0, 6, 6, 0, 28, 2, 0, 28, 2, 0, 0]' : 0.194004}
{'[6, 1, 0, 6, 6, 0, 28, 2, 0, 28, 2, 0, 0]' : 0.193765}
{'[6, 1, 0, 6, 6, 0, 28, 2, 0, 28, 2, 0, 0]' : 0.19436}
{'[6, 1, 0, 6, 6, 0, 28, 2, 0, 28, 2, 0, 0]' : 0.194319}
{'[6, 1, 0, 6, 6, 0, 28, 2, 0, 28, 2, 0, 0]' : 0.193333}
{'[6, 1, 0, 6, 6, 0, 28, 2, 0, 28, 2, 0, 0]' : 0.194449}
{'[6, 1, 0, 6, 6, 0, 28, 2, 0, 28, 2, 0, 0]' : 0.193213}
{'[6, 1, 0, 6, 6, 0, 28, 2, 0, 28, 2, 0, 0]' : 0.194392}
{'[6, 1, 0, 6, 6, 0, 28, 2, 0, 28, 2, 0, 0]' : 0.192682}
{'[6, 1, 0, 6, 6, 0, 28, 2, 0, 28, 2, 0, 0]' : 0.194062}
{'[6, 1, 0, 6, 6, 0, 28, 2, 0, 28, 2, 0, 0]' : 0.193591}

out:
 ["{'[6, 1, 0, 6, 6, 0, 28, 2, 0, 28, 2, 0, 0]' : 0.216347}", "{'[6, 1, 0, 6, 6, 0, 28, 2, 0, 28, 2, 0, 0]' : 0.21567}", "{'[6, 1, 0, 6, 6, 0, 28, 2, 0, 28, 2, 0, 0]' : 0.19628}", "{'[6, 1, 0, 6, 6, 0, 28, 2, 0, 28, 2, 0, 0]' : 0.193681}", "{'[6, 1, 0, 6, 6, 0, 28, 2, 0, 28, 2, 0, 0]' : 0.192777}", "{'[6, 1, 0, 6, 6, 0, 28, 2, 0, 28, 2, 0, 0]' : 0.193028}", "{'[6, 1, 0, 6, 6, 0, 28, 2, 0, 28, 2, 0, 0]' : 0.193273}", "{'[6, 1, 0, 6, 6, 0, 28, 2, 0, 28, 2, 0, 0]' : 0.193147}", "{'[6, 1, 0, 6, 6, 0, 28, 2, 0, 28, 2, 0, 0]' : 0.193082}", "{'[6, 1, 0, 6, 6, 0, 28, 2, 0, 28, 2, 0, 0]' : 0.194266}", "{'[6, 1, 0, 6, 6, 0, 28, 2, 0, 28, 2, 0, 0]' : 0.193911}", "{'[6, 1, 0, 6, 6, 0, 28, 2, 0, 28, 2, 0, 0]' : 0.193142}", "{'[6, 1, 0, 6, 6, 0, 28, 2, 0, 28, 2, 0, 0]' : 0.193215}", "{'[6, 1, 0, 6, 6, 0, 28, 2, 0, 28, 2, 0, 0]' : 0.193202}", "{'[6, 1, 0, 6, 6, 0, 28, 2, 0, 28, 2, 0, 0]' : 0.193146}", "{'[6, 1, 0, 6, 6, 0, 28, 2, 0, 28, 2, 0, 0]' : 0.189938}", "{'[6, 1, 0, 6, 6, 0, 28, 2, 0, 28, 2, 0, 0]' : 0.189996}", "{'[6, 1, 0, 6, 6, 0, 28, 2, 0, 28, 2, 0, 0]' : 0.193338}", "{'[6, 1, 0, 6, 6, 0, 28, 2, 0, 28, 2, 0, 0]' : 0.193858}", "{'[6, 1, 0, 6, 6, 0, 28, 2, 0, 28, 2, 0, 0]' : 0.194004}", "{'[6, 1, 0, 6, 6, 0, 28, 2, 0, 28, 2, 0, 0]' : 0.193765}", "{'[6, 1, 0, 6, 6, 0, 28, 2, 0, 28, 2, 0, 0]' : 0.19436}", "{'[6, 1, 0, 6, 6, 0, 28, 2, 0, 28, 2, 0, 0]' : 0.194319}", "{'[6, 1, 0, 6, 6, 0, 28, 2, 0, 28, 2, 0, 0]' : 0.193333}", "{'[6, 1, 0, 6, 6, 0, 28, 2, 0, 28, 2, 0, 0]' : 0.194449}", "{'[6, 1, 0, 6, 6, 0, 28, 2, 0, 28, 2, 0, 0]' : 0.193213}", "{'[6, 1, 0, 6, 6, 0, 28, 2, 0, 28, 2, 0, 0]' : 0.194392}", "{'[6, 1, 0, 6, 6, 0, 28, 2, 0, 28, 2, 0, 0]' : 0.192682}", "{'[6, 1, 0, 6, 6, 0, 28, 2, 0, 28, 2, 0, 0]' : 0.194062}", "{'[6, 1, 0, 6, 6, 0, 28, 2, 0, 28, 2, 0, 0]' : 0.193591}"]
returning from 'run': {'[6, 1, 0, 6, 6, 0, 28, 2, 0, 28, 2, 0, 0]': ([0.216347, 0.21567, 0.19628, 0.193681, 0.192777, 0.193028, 0.193273, 0.193147, 0.193082, 0.194266, 0.193911, 0.193142, 0.193215, 0.193202, 0.193146, 0.189938, 0.189996, 0.193338, 0.193858, 0.194004, 0.193765, 0.19436, 0.194319, 0.193333, 0.194449, 0.193213, 0.194392, 0.192682, 0.194062, 0.193591], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 1, 0, 6, 6, 0, 28, 2, 0, 28, 2, 0, 0]': ([0.216347, 0.21567, 0.19628, 0.193681, 0.192777, 0.193028, 0.193273, 0.193147, 0.193082, 0.194266, 0.193911, 0.193142, 0.193215, 0.193202, 0.193146, 0.189938, 0.189996, 0.193338, 0.193858, 0.194004, 0.193765, 0.19436, 0.194319, 0.193333, 0.194449, 0.193213, 0.194392, 0.192682, 0.194062, 0.193591], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	4
        Additions: 		60
        Multiplications: 	12
        Divisions: 		0
        Logical: 		0
        Reads: 			139
        Writes: 		34
        Comparisons:		9
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest7.exe __orio_perftest7.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest7.exe  
Program Test Output: 
{'[0, 6, 6, 6, 0, 4, 7, 0, 3, 0, 0, 0, 0]' : 0.238152}
{'[0, 6, 6, 6, 0, 4, 7, 0, 3, 0, 0, 0, 0]' : 0.232898}
{'[0, 6, 6, 6, 0, 4, 7, 0, 3, 0, 0, 0, 0]' : 0.232839}
{'[0, 6, 6, 6, 0, 4, 7, 0, 3, 0, 0, 0, 0]' : 0.232521}
{'[0, 6, 6, 6, 0, 4, 7, 0, 3, 0, 0, 0, 0]' : 0.238278}
{'[0, 6, 6, 6, 0, 4, 7, 0, 3, 0, 0, 0, 0]' : 0.233397}
{'[0, 6, 6, 6, 0, 4, 7, 0, 3, 0, 0, 0, 0]' : 0.230684}
{'[0, 6, 6, 6, 0, 4, 7, 0, 3, 0, 0, 0, 0]' : 0.225057}
{'[0, 6, 6, 6, 0, 4, 7, 0, 3, 0, 0, 0, 0]' : 0.232806}
{'[0, 6, 6, 6, 0, 4, 7, 0, 3, 0, 0, 0, 0]' : 0.235472}
{'[0, 6, 6, 6, 0, 4, 7, 0, 3, 0, 0, 0, 0]' : 0.235625}
{'[0, 6, 6, 6, 0, 4, 7, 0, 3, 0, 0, 0, 0]' : 0.238825}
{'[0, 6, 6, 6, 0, 4, 7, 0, 3, 0, 0, 0, 0]' : 0.23689}
{'[0, 6, 6, 6, 0, 4, 7, 0, 3, 0, 0, 0, 0]' : 0.232603}
{'[0, 6, 6, 6, 0, 4, 7, 0, 3, 0, 0, 0, 0]' : 0.23263}
{'[0, 6, 6, 6, 0, 4, 7, 0, 3, 0, 0, 0, 0]' : 0.238414}
{'[0, 6, 6, 6, 0, 4, 7, 0, 3, 0, 0, 0, 0]' : 0.234131}
{'[0, 6, 6, 6, 0, 4, 7, 0, 3, 0, 0, 0, 0]' : 0.238546}
{'[0, 6, 6, 6, 0, 4, 7, 0, 3, 0, 0, 0, 0]' : 0.23287}
{'[0, 6, 6, 6, 0, 4, 7, 0, 3, 0, 0, 0, 0]' : 0.232724}
{'[0, 6, 6, 6, 0, 4, 7, 0, 3, 0, 0, 0, 0]' : 0.232746}
{'[0, 6, 6, 6, 0, 4, 7, 0, 3, 0, 0, 0, 0]' : 0.237768}
{'[0, 6, 6, 6, 0, 4, 7, 0, 3, 0, 0, 0, 0]' : 0.233865}
{'[0, 6, 6, 6, 0, 4, 7, 0, 3, 0, 0, 0, 0]' : 0.233106}
{'[0, 6, 6, 6, 0, 4, 7, 0, 3, 0, 0, 0, 0]' : 0.238944}
{'[0, 6, 6, 6, 0, 4, 7, 0, 3, 0, 0, 0, 0]' : 0.236283}
{'[0, 6, 6, 6, 0, 4, 7, 0, 3, 0, 0, 0, 0]' : 0.228457}
{'[0, 6, 6, 6, 0, 4, 7, 0, 3, 0, 0, 0, 0]' : 0.22812}
{'[0, 6, 6, 6, 0, 4, 7, 0, 3, 0, 0, 0, 0]' : 0.232593}
{'[0, 6, 6, 6, 0, 4, 7, 0, 3, 0, 0, 0, 0]' : 0.232725}

out:
 ["{'[0, 6, 6, 6, 0, 4, 7, 0, 3, 0, 0, 0, 0]' : 0.238152}", "{'[0, 6, 6, 6, 0, 4, 7, 0, 3, 0, 0, 0, 0]' : 0.232898}", "{'[0, 6, 6, 6, 0, 4, 7, 0, 3, 0, 0, 0, 0]' : 0.232839}", "{'[0, 6, 6, 6, 0, 4, 7, 0, 3, 0, 0, 0, 0]' : 0.232521}", "{'[0, 6, 6, 6, 0, 4, 7, 0, 3, 0, 0, 0, 0]' : 0.238278}", "{'[0, 6, 6, 6, 0, 4, 7, 0, 3, 0, 0, 0, 0]' : 0.233397}", "{'[0, 6, 6, 6, 0, 4, 7, 0, 3, 0, 0, 0, 0]' : 0.230684}", "{'[0, 6, 6, 6, 0, 4, 7, 0, 3, 0, 0, 0, 0]' : 0.225057}", "{'[0, 6, 6, 6, 0, 4, 7, 0, 3, 0, 0, 0, 0]' : 0.232806}", "{'[0, 6, 6, 6, 0, 4, 7, 0, 3, 0, 0, 0, 0]' : 0.235472}", "{'[0, 6, 6, 6, 0, 4, 7, 0, 3, 0, 0, 0, 0]' : 0.235625}", "{'[0, 6, 6, 6, 0, 4, 7, 0, 3, 0, 0, 0, 0]' : 0.238825}", "{'[0, 6, 6, 6, 0, 4, 7, 0, 3, 0, 0, 0, 0]' : 0.23689}", "{'[0, 6, 6, 6, 0, 4, 7, 0, 3, 0, 0, 0, 0]' : 0.232603}", "{'[0, 6, 6, 6, 0, 4, 7, 0, 3, 0, 0, 0, 0]' : 0.23263}", "{'[0, 6, 6, 6, 0, 4, 7, 0, 3, 0, 0, 0, 0]' : 0.238414}", "{'[0, 6, 6, 6, 0, 4, 7, 0, 3, 0, 0, 0, 0]' : 0.234131}", "{'[0, 6, 6, 6, 0, 4, 7, 0, 3, 0, 0, 0, 0]' : 0.238546}", "{'[0, 6, 6, 6, 0, 4, 7, 0, 3, 0, 0, 0, 0]' : 0.23287}", "{'[0, 6, 6, 6, 0, 4, 7, 0, 3, 0, 0, 0, 0]' : 0.232724}", "{'[0, 6, 6, 6, 0, 4, 7, 0, 3, 0, 0, 0, 0]' : 0.232746}", "{'[0, 6, 6, 6, 0, 4, 7, 0, 3, 0, 0, 0, 0]' : 0.237768}", "{'[0, 6, 6, 6, 0, 4, 7, 0, 3, 0, 0, 0, 0]' : 0.233865}", "{'[0, 6, 6, 6, 0, 4, 7, 0, 3, 0, 0, 0, 0]' : 0.233106}", "{'[0, 6, 6, 6, 0, 4, 7, 0, 3, 0, 0, 0, 0]' : 0.238944}", "{'[0, 6, 6, 6, 0, 4, 7, 0, 3, 0, 0, 0, 0]' : 0.236283}", "{'[0, 6, 6, 6, 0, 4, 7, 0, 3, 0, 0, 0, 0]' : 0.228457}", "{'[0, 6, 6, 6, 0, 4, 7, 0, 3, 0, 0, 0, 0]' : 0.22812}", "{'[0, 6, 6, 6, 0, 4, 7, 0, 3, 0, 0, 0, 0]' : 0.232593}", "{'[0, 6, 6, 6, 0, 4, 7, 0, 3, 0, 0, 0, 0]' : 0.232725}"]
returning from 'run': {'[0, 6, 6, 6, 0, 4, 7, 0, 3, 0, 0, 0, 0]': ([0.238152, 0.232898, 0.232839, 0.232521, 0.238278, 0.233397, 0.230684, 0.225057, 0.232806, 0.235472, 0.235625, 0.238825, 0.23689, 0.232603, 0.23263, 0.238414, 0.234131, 0.238546, 0.23287, 0.232724, 0.232746, 0.237768, 0.233865, 0.233106, 0.238944, 0.236283, 0.228457, 0.22812, 0.232593, 0.232725], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 6, 6, 0, 4, 7, 0, 3, 0, 0, 0, 0]': ([0.238152, 0.232898, 0.232839, 0.232521, 0.238278, 0.233397, 0.230684, 0.225057, 0.232806, 0.235472, 0.235625, 0.238825, 0.23689, 0.232603, 0.23263, 0.238414, 0.234131, 0.238546, 0.23287, 0.232724, 0.232746, 0.237768, 0.233865, 0.233106, 0.238944, 0.236283, 0.228457, 0.22812, 0.232593, 0.232725], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	26
        Max loop nest depth: 	6
        Additions: 		1235
        Multiplications: 	370
        Divisions: 		0
        Logical: 		0
        Reads: 			2070
        Writes: 		250
        Comparisons:		26
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest8.exe __orio_perftest8.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest8.exe  
Program Test Output: 
{'[2, 1, 1, 6, 0, 5, 6, 3, 0, 2, 0, 0, 2]' : 0.217697}
{'[2, 1, 1, 6, 0, 5, 6, 3, 0, 2, 0, 0, 2]' : 0.217774}
{'[2, 1, 1, 6, 0, 5, 6, 3, 0, 2, 0, 0, 2]' : 0.196489}
{'[2, 1, 1, 6, 0, 5, 6, 3, 0, 2, 0, 0, 2]' : 0.188066}
{'[2, 1, 1, 6, 0, 5, 6, 3, 0, 2, 0, 0, 2]' : 0.190237}
{'[2, 1, 1, 6, 0, 5, 6, 3, 0, 2, 0, 0, 2]' : 0.194028}
{'[2, 1, 1, 6, 0, 5, 6, 3, 0, 2, 0, 0, 2]' : 0.193649}
{'[2, 1, 1, 6, 0, 5, 6, 3, 0, 2, 0, 0, 2]' : 0.188458}
{'[2, 1, 1, 6, 0, 5, 6, 3, 0, 2, 0, 0, 2]' : 0.188636}
{'[2, 1, 1, 6, 0, 5, 6, 3, 0, 2, 0, 0, 2]' : 0.189346}
{'[2, 1, 1, 6, 0, 5, 6, 3, 0, 2, 0, 0, 2]' : 0.188618}
{'[2, 1, 1, 6, 0, 5, 6, 3, 0, 2, 0, 0, 2]' : 0.188521}
{'[2, 1, 1, 6, 0, 5, 6, 3, 0, 2, 0, 0, 2]' : 0.192934}
{'[2, 1, 1, 6, 0, 5, 6, 3, 0, 2, 0, 0, 2]' : 0.194017}
{'[2, 1, 1, 6, 0, 5, 6, 3, 0, 2, 0, 0, 2]' : 0.194078}
{'[2, 1, 1, 6, 0, 5, 6, 3, 0, 2, 0, 0, 2]' : 0.191165}
{'[2, 1, 1, 6, 0, 5, 6, 3, 0, 2, 0, 0, 2]' : 0.188637}
{'[2, 1, 1, 6, 0, 5, 6, 3, 0, 2, 0, 0, 2]' : 0.191682}
{'[2, 1, 1, 6, 0, 5, 6, 3, 0, 2, 0, 0, 2]' : 0.193981}
{'[2, 1, 1, 6, 0, 5, 6, 3, 0, 2, 0, 0, 2]' : 0.194246}
{'[2, 1, 1, 6, 0, 5, 6, 3, 0, 2, 0, 0, 2]' : 0.194059}
{'[2, 1, 1, 6, 0, 5, 6, 3, 0, 2, 0, 0, 2]' : 0.194017}
{'[2, 1, 1, 6, 0, 5, 6, 3, 0, 2, 0, 0, 2]' : 0.194049}
{'[2, 1, 1, 6, 0, 5, 6, 3, 0, 2, 0, 0, 2]' : 0.194031}
{'[2, 1, 1, 6, 0, 5, 6, 3, 0, 2, 0, 0, 2]' : 0.19398}
{'[2, 1, 1, 6, 0, 5, 6, 3, 0, 2, 0, 0, 2]' : 0.1941}
{'[2, 1, 1, 6, 0, 5, 6, 3, 0, 2, 0, 0, 2]' : 0.193599}
{'[2, 1, 1, 6, 0, 5, 6, 3, 0, 2, 0, 0, 2]' : 0.187587}
{'[2, 1, 1, 6, 0, 5, 6, 3, 0, 2, 0, 0, 2]' : 0.194009}
{'[2, 1, 1, 6, 0, 5, 6, 3, 0, 2, 0, 0, 2]' : 0.194223}

out:
 ["{'[2, 1, 1, 6, 0, 5, 6, 3, 0, 2, 0, 0, 2]' : 0.217697}", "{'[2, 1, 1, 6, 0, 5, 6, 3, 0, 2, 0, 0, 2]' : 0.217774}", "{'[2, 1, 1, 6, 0, 5, 6, 3, 0, 2, 0, 0, 2]' : 0.196489}", "{'[2, 1, 1, 6, 0, 5, 6, 3, 0, 2, 0, 0, 2]' : 0.188066}", "{'[2, 1, 1, 6, 0, 5, 6, 3, 0, 2, 0, 0, 2]' : 0.190237}", "{'[2, 1, 1, 6, 0, 5, 6, 3, 0, 2, 0, 0, 2]' : 0.194028}", "{'[2, 1, 1, 6, 0, 5, 6, 3, 0, 2, 0, 0, 2]' : 0.193649}", "{'[2, 1, 1, 6, 0, 5, 6, 3, 0, 2, 0, 0, 2]' : 0.188458}", "{'[2, 1, 1, 6, 0, 5, 6, 3, 0, 2, 0, 0, 2]' : 0.188636}", "{'[2, 1, 1, 6, 0, 5, 6, 3, 0, 2, 0, 0, 2]' : 0.189346}", "{'[2, 1, 1, 6, 0, 5, 6, 3, 0, 2, 0, 0, 2]' : 0.188618}", "{'[2, 1, 1, 6, 0, 5, 6, 3, 0, 2, 0, 0, 2]' : 0.188521}", "{'[2, 1, 1, 6, 0, 5, 6, 3, 0, 2, 0, 0, 2]' : 0.192934}", "{'[2, 1, 1, 6, 0, 5, 6, 3, 0, 2, 0, 0, 2]' : 0.194017}", "{'[2, 1, 1, 6, 0, 5, 6, 3, 0, 2, 0, 0, 2]' : 0.194078}", "{'[2, 1, 1, 6, 0, 5, 6, 3, 0, 2, 0, 0, 2]' : 0.191165}", "{'[2, 1, 1, 6, 0, 5, 6, 3, 0, 2, 0, 0, 2]' : 0.188637}", "{'[2, 1, 1, 6, 0, 5, 6, 3, 0, 2, 0, 0, 2]' : 0.191682}", "{'[2, 1, 1, 6, 0, 5, 6, 3, 0, 2, 0, 0, 2]' : 0.193981}", "{'[2, 1, 1, 6, 0, 5, 6, 3, 0, 2, 0, 0, 2]' : 0.194246}", "{'[2, 1, 1, 6, 0, 5, 6, 3, 0, 2, 0, 0, 2]' : 0.194059}", "{'[2, 1, 1, 6, 0, 5, 6, 3, 0, 2, 0, 0, 2]' : 0.194017}", "{'[2, 1, 1, 6, 0, 5, 6, 3, 0, 2, 0, 0, 2]' : 0.194049}", "{'[2, 1, 1, 6, 0, 5, 6, 3, 0, 2, 0, 0, 2]' : 0.194031}", "{'[2, 1, 1, 6, 0, 5, 6, 3, 0, 2, 0, 0, 2]' : 0.19398}", "{'[2, 1, 1, 6, 0, 5, 6, 3, 0, 2, 0, 0, 2]' : 0.1941}", "{'[2, 1, 1, 6, 0, 5, 6, 3, 0, 2, 0, 0, 2]' : 0.193599}", "{'[2, 1, 1, 6, 0, 5, 6, 3, 0, 2, 0, 0, 2]' : 0.187587}", "{'[2, 1, 1, 6, 0, 5, 6, 3, 0, 2, 0, 0, 2]' : 0.194009}", "{'[2, 1, 1, 6, 0, 5, 6, 3, 0, 2, 0, 0, 2]' : 0.194223}"]
returning from 'run': {'[2, 1, 1, 6, 0, 5, 6, 3, 0, 2, 0, 0, 2]': ([0.217697, 0.217774, 0.196489, 0.188066, 0.190237, 0.194028, 0.193649, 0.188458, 0.188636, 0.189346, 0.188618, 0.188521, 0.192934, 0.194017, 0.194078, 0.191165, 0.188637, 0.191682, 0.193981, 0.194246, 0.194059, 0.194017, 0.194049, 0.194031, 0.19398, 0.1941, 0.193599, 0.187587, 0.194009, 0.194223], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 1, 1, 6, 0, 5, 6, 3, 0, 2, 0, 0, 2]': ([0.217697, 0.217774, 0.196489, 0.188066, 0.190237, 0.194028, 0.193649, 0.188458, 0.188636, 0.189346, 0.188618, 0.188521, 0.192934, 0.194017, 0.194078, 0.191165, 0.188637, 0.191682, 0.193981, 0.194246, 0.194059, 0.194017, 0.194049, 0.194031, 0.19398, 0.1941, 0.193599, 0.187587, 0.194009, 0.194223], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = iii
Code stats:
        Number of loops: 	29
        Max loop nest depth: 	5
        Additions: 		10415
        Multiplications: 	3120
        Divisions: 		0
        Logical: 		0
        Reads: 			15869
        Writes: 		1651
        Comparisons:		29
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest9.exe __orio_perftest9.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest9.exe  
Program Test Output: 
{'[4, 1, 5, 2, 6, 6, 0, 29, 0, 29, 1, 1, 0]' : 0.117409}
{'[4, 1, 5, 2, 6, 6, 0, 29, 0, 29, 1, 1, 0]' : 0.117332}
{'[4, 1, 5, 2, 6, 6, 0, 29, 0, 29, 1, 1, 0]' : 0.11716}
{'[4, 1, 5, 2, 6, 6, 0, 29, 0, 29, 1, 1, 0]' : 0.117332}
{'[4, 1, 5, 2, 6, 6, 0, 29, 0, 29, 1, 1, 0]' : 0.117465}
{'[4, 1, 5, 2, 6, 6, 0, 29, 0, 29, 1, 1, 0]' : 0.117382}
{'[4, 1, 5, 2, 6, 6, 0, 29, 0, 29, 1, 1, 0]' : 0.11732}
{'[4, 1, 5, 2, 6, 6, 0, 29, 0, 29, 1, 1, 0]' : 0.117454}
{'[4, 1, 5, 2, 6, 6, 0, 29, 0, 29, 1, 1, 0]' : 0.117661}
{'[4, 1, 5, 2, 6, 6, 0, 29, 0, 29, 1, 1, 0]' : 0.117441}
{'[4, 1, 5, 2, 6, 6, 0, 29, 0, 29, 1, 1, 0]' : 0.117223}
{'[4, 1, 5, 2, 6, 6, 0, 29, 0, 29, 1, 1, 0]' : 0.117483}
{'[4, 1, 5, 2, 6, 6, 0, 29, 0, 29, 1, 1, 0]' : 0.117778}
{'[4, 1, 5, 2, 6, 6, 0, 29, 0, 29, 1, 1, 0]' : 0.117357}
{'[4, 1, 5, 2, 6, 6, 0, 29, 0, 29, 1, 1, 0]' : 0.117182}
{'[4, 1, 5, 2, 6, 6, 0, 29, 0, 29, 1, 1, 0]' : 0.117374}
{'[4, 1, 5, 2, 6, 6, 0, 29, 0, 29, 1, 1, 0]' : 0.11734}
{'[4, 1, 5, 2, 6, 6, 0, 29, 0, 29, 1, 1, 0]' : 0.117349}
{'[4, 1, 5, 2, 6, 6, 0, 29, 0, 29, 1, 1, 0]' : 0.117241}
{'[4, 1, 5, 2, 6, 6, 0, 29, 0, 29, 1, 1, 0]' : 0.117411}
{'[4, 1, 5, 2, 6, 6, 0, 29, 0, 29, 1, 1, 0]' : 0.117337}
{'[4, 1, 5, 2, 6, 6, 0, 29, 0, 29, 1, 1, 0]' : 0.117435}
{'[4, 1, 5, 2, 6, 6, 0, 29, 0, 29, 1, 1, 0]' : 0.117229}
{'[4, 1, 5, 2, 6, 6, 0, 29, 0, 29, 1, 1, 0]' : 0.117454}
{'[4, 1, 5, 2, 6, 6, 0, 29, 0, 29, 1, 1, 0]' : 0.117408}
{'[4, 1, 5, 2, 6, 6, 0, 29, 0, 29, 1, 1, 0]' : 0.117516}
{'[4, 1, 5, 2, 6, 6, 0, 29, 0, 29, 1, 1, 0]' : 0.117291}
{'[4, 1, 5, 2, 6, 6, 0, 29, 0, 29, 1, 1, 0]' : 0.117483}
{'[4, 1, 5, 2, 6, 6, 0, 29, 0, 29, 1, 1, 0]' : 0.117478}
{'[4, 1, 5, 2, 6, 6, 0, 29, 0, 29, 1, 1, 0]' : 0.117794}

out:
 ["{'[4, 1, 5, 2, 6, 6, 0, 29, 0, 29, 1, 1, 0]' : 0.117409}", "{'[4, 1, 5, 2, 6, 6, 0, 29, 0, 29, 1, 1, 0]' : 0.117332}", "{'[4, 1, 5, 2, 6, 6, 0, 29, 0, 29, 1, 1, 0]' : 0.11716}", "{'[4, 1, 5, 2, 6, 6, 0, 29, 0, 29, 1, 1, 0]' : 0.117332}", "{'[4, 1, 5, 2, 6, 6, 0, 29, 0, 29, 1, 1, 0]' : 0.117465}", "{'[4, 1, 5, 2, 6, 6, 0, 29, 0, 29, 1, 1, 0]' : 0.117382}", "{'[4, 1, 5, 2, 6, 6, 0, 29, 0, 29, 1, 1, 0]' : 0.11732}", "{'[4, 1, 5, 2, 6, 6, 0, 29, 0, 29, 1, 1, 0]' : 0.117454}", "{'[4, 1, 5, 2, 6, 6, 0, 29, 0, 29, 1, 1, 0]' : 0.117661}", "{'[4, 1, 5, 2, 6, 6, 0, 29, 0, 29, 1, 1, 0]' : 0.117441}", "{'[4, 1, 5, 2, 6, 6, 0, 29, 0, 29, 1, 1, 0]' : 0.117223}", "{'[4, 1, 5, 2, 6, 6, 0, 29, 0, 29, 1, 1, 0]' : 0.117483}", "{'[4, 1, 5, 2, 6, 6, 0, 29, 0, 29, 1, 1, 0]' : 0.117778}", "{'[4, 1, 5, 2, 6, 6, 0, 29, 0, 29, 1, 1, 0]' : 0.117357}", "{'[4, 1, 5, 2, 6, 6, 0, 29, 0, 29, 1, 1, 0]' : 0.117182}", "{'[4, 1, 5, 2, 6, 6, 0, 29, 0, 29, 1, 1, 0]' : 0.117374}", "{'[4, 1, 5, 2, 6, 6, 0, 29, 0, 29, 1, 1, 0]' : 0.11734}", "{'[4, 1, 5, 2, 6, 6, 0, 29, 0, 29, 1, 1, 0]' : 0.117349}", "{'[4, 1, 5, 2, 6, 6, 0, 29, 0, 29, 1, 1, 0]' : 0.117241}", "{'[4, 1, 5, 2, 6, 6, 0, 29, 0, 29, 1, 1, 0]' : 0.117411}", "{'[4, 1, 5, 2, 6, 6, 0, 29, 0, 29, 1, 1, 0]' : 0.117337}", "{'[4, 1, 5, 2, 6, 6, 0, 29, 0, 29, 1, 1, 0]' : 0.117435}", "{'[4, 1, 5, 2, 6, 6, 0, 29, 0, 29, 1, 1, 0]' : 0.117229}", "{'[4, 1, 5, 2, 6, 6, 0, 29, 0, 29, 1, 1, 0]' : 0.117454}", "{'[4, 1, 5, 2, 6, 6, 0, 29, 0, 29, 1, 1, 0]' : 0.117408}", "{'[4, 1, 5, 2, 6, 6, 0, 29, 0, 29, 1, 1, 0]' : 0.117516}", "{'[4, 1, 5, 2, 6, 6, 0, 29, 0, 29, 1, 1, 0]' : 0.117291}", "{'[4, 1, 5, 2, 6, 6, 0, 29, 0, 29, 1, 1, 0]' : 0.117483}", "{'[4, 1, 5, 2, 6, 6, 0, 29, 0, 29, 1, 1, 0]' : 0.117478}", "{'[4, 1, 5, 2, 6, 6, 0, 29, 0, 29, 1, 1, 0]' : 0.117794}"]
returning from 'run': {'[4, 1, 5, 2, 6, 6, 0, 29, 0, 29, 1, 1, 0]': ([0.117409, 0.117332, 0.11716, 0.117332, 0.117465, 0.117382, 0.11732, 0.117454, 0.117661, 0.117441, 0.117223, 0.117483, 0.117778, 0.117357, 0.117182, 0.117374, 0.11734, 0.117349, 0.117241, 0.117411, 0.117337, 0.117435, 0.117229, 0.117454, 0.117408, 0.117516, 0.117291, 0.117483, 0.117478, 0.117794], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 1, 5, 2, 6, 6, 0, 29, 0, 29, 1, 1, 0]': ([0.117409, 0.117332, 0.11716, 0.117332, 0.117465, 0.117382, 0.11732, 0.117454, 0.117661, 0.117441, 0.117223, 0.117483, 0.117778, 0.117357, 0.117182, 0.117374, 0.11734, 0.117349, 0.117241, 0.117411, 0.117337, 0.117435, 0.117229, 0.117454, 0.117408, 0.117516, 0.117291, 0.117483, 0.117478, 0.117794], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	5
        Additions: 		1678
        Multiplications: 	522
        Divisions: 		0
        Logical: 		0
        Reads: 			2791
        Writes: 		318
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest10.exe __orio_perftest10.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest10.exe  
Program Test Output: 
{'[5, 6, 6, 0, 6, 0, 11, 0, 9, 8, 1, 1, 0]' : 0.126411}
{'[5, 6, 6, 0, 6, 0, 11, 0, 9, 8, 1, 1, 0]' : 0.126603}
{'[5, 6, 6, 0, 6, 0, 11, 0, 9, 8, 1, 1, 0]' : 0.126504}
{'[5, 6, 6, 0, 6, 0, 11, 0, 9, 8, 1, 1, 0]' : 0.122417}
{'[5, 6, 6, 0, 6, 0, 11, 0, 9, 8, 1, 1, 0]' : 0.114192}
{'[5, 6, 6, 0, 6, 0, 11, 0, 9, 8, 1, 1, 0]' : 0.114193}
{'[5, 6, 6, 0, 6, 0, 11, 0, 9, 8, 1, 1, 0]' : 0.114107}
{'[5, 6, 6, 0, 6, 0, 11, 0, 9, 8, 1, 1, 0]' : 0.113924}
{'[5, 6, 6, 0, 6, 0, 11, 0, 9, 8, 1, 1, 0]' : 0.114147}
{'[5, 6, 6, 0, 6, 0, 11, 0, 9, 8, 1, 1, 0]' : 0.114253}
{'[5, 6, 6, 0, 6, 0, 11, 0, 9, 8, 1, 1, 0]' : 0.11407}
{'[5, 6, 6, 0, 6, 0, 11, 0, 9, 8, 1, 1, 0]' : 0.11389}
{'[5, 6, 6, 0, 6, 0, 11, 0, 9, 8, 1, 1, 0]' : 0.114167}
{'[5, 6, 6, 0, 6, 0, 11, 0, 9, 8, 1, 1, 0]' : 0.1141}
{'[5, 6, 6, 0, 6, 0, 11, 0, 9, 8, 1, 1, 0]' : 0.112622}
{'[5, 6, 6, 0, 6, 0, 11, 0, 9, 8, 1, 1, 0]' : 0.112162}
{'[5, 6, 6, 0, 6, 0, 11, 0, 9, 8, 1, 1, 0]' : 0.114161}
{'[5, 6, 6, 0, 6, 0, 11, 0, 9, 8, 1, 1, 0]' : 0.11414}
{'[5, 6, 6, 0, 6, 0, 11, 0, 9, 8, 1, 1, 0]' : 0.111906}
{'[5, 6, 6, 0, 6, 0, 11, 0, 9, 8, 1, 1, 0]' : 0.112367}
{'[5, 6, 6, 0, 6, 0, 11, 0, 9, 8, 1, 1, 0]' : 0.114317}
{'[5, 6, 6, 0, 6, 0, 11, 0, 9, 8, 1, 1, 0]' : 0.114216}
{'[5, 6, 6, 0, 6, 0, 11, 0, 9, 8, 1, 1, 0]' : 0.114134}
{'[5, 6, 6, 0, 6, 0, 11, 0, 9, 8, 1, 1, 0]' : 0.114037}
{'[5, 6, 6, 0, 6, 0, 11, 0, 9, 8, 1, 1, 0]' : 0.114307}
{'[5, 6, 6, 0, 6, 0, 11, 0, 9, 8, 1, 1, 0]' : 0.114163}
{'[5, 6, 6, 0, 6, 0, 11, 0, 9, 8, 1, 1, 0]' : 0.114163}
{'[5, 6, 6, 0, 6, 0, 11, 0, 9, 8, 1, 1, 0]' : 0.114119}
{'[5, 6, 6, 0, 6, 0, 11, 0, 9, 8, 1, 1, 0]' : 0.114282}
{'[5, 6, 6, 0, 6, 0, 11, 0, 9, 8, 1, 1, 0]' : 0.114086}

out:
 ["{'[5, 6, 6, 0, 6, 0, 11, 0, 9, 8, 1, 1, 0]' : 0.126411}", "{'[5, 6, 6, 0, 6, 0, 11, 0, 9, 8, 1, 1, 0]' : 0.126603}", "{'[5, 6, 6, 0, 6, 0, 11, 0, 9, 8, 1, 1, 0]' : 0.126504}", "{'[5, 6, 6, 0, 6, 0, 11, 0, 9, 8, 1, 1, 0]' : 0.122417}", "{'[5, 6, 6, 0, 6, 0, 11, 0, 9, 8, 1, 1, 0]' : 0.114192}", "{'[5, 6, 6, 0, 6, 0, 11, 0, 9, 8, 1, 1, 0]' : 0.114193}", "{'[5, 6, 6, 0, 6, 0, 11, 0, 9, 8, 1, 1, 0]' : 0.114107}", "{'[5, 6, 6, 0, 6, 0, 11, 0, 9, 8, 1, 1, 0]' : 0.113924}", "{'[5, 6, 6, 0, 6, 0, 11, 0, 9, 8, 1, 1, 0]' : 0.114147}", "{'[5, 6, 6, 0, 6, 0, 11, 0, 9, 8, 1, 1, 0]' : 0.114253}", "{'[5, 6, 6, 0, 6, 0, 11, 0, 9, 8, 1, 1, 0]' : 0.11407}", "{'[5, 6, 6, 0, 6, 0, 11, 0, 9, 8, 1, 1, 0]' : 0.11389}", "{'[5, 6, 6, 0, 6, 0, 11, 0, 9, 8, 1, 1, 0]' : 0.114167}", "{'[5, 6, 6, 0, 6, 0, 11, 0, 9, 8, 1, 1, 0]' : 0.1141}", "{'[5, 6, 6, 0, 6, 0, 11, 0, 9, 8, 1, 1, 0]' : 0.112622}", "{'[5, 6, 6, 0, 6, 0, 11, 0, 9, 8, 1, 1, 0]' : 0.112162}", "{'[5, 6, 6, 0, 6, 0, 11, 0, 9, 8, 1, 1, 0]' : 0.114161}", "{'[5, 6, 6, 0, 6, 0, 11, 0, 9, 8, 1, 1, 0]' : 0.11414}", "{'[5, 6, 6, 0, 6, 0, 11, 0, 9, 8, 1, 1, 0]' : 0.111906}", "{'[5, 6, 6, 0, 6, 0, 11, 0, 9, 8, 1, 1, 0]' : 0.112367}", "{'[5, 6, 6, 0, 6, 0, 11, 0, 9, 8, 1, 1, 0]' : 0.114317}", "{'[5, 6, 6, 0, 6, 0, 11, 0, 9, 8, 1, 1, 0]' : 0.114216}", "{'[5, 6, 6, 0, 6, 0, 11, 0, 9, 8, 1, 1, 0]' : 0.114134}", "{'[5, 6, 6, 0, 6, 0, 11, 0, 9, 8, 1, 1, 0]' : 0.114037}", "{'[5, 6, 6, 0, 6, 0, 11, 0, 9, 8, 1, 1, 0]' : 0.114307}", "{'[5, 6, 6, 0, 6, 0, 11, 0, 9, 8, 1, 1, 0]' : 0.114163}", "{'[5, 6, 6, 0, 6, 0, 11, 0, 9, 8, 1, 1, 0]' : 0.114163}", "{'[5, 6, 6, 0, 6, 0, 11, 0, 9, 8, 1, 1, 0]' : 0.114119}", "{'[5, 6, 6, 0, 6, 0, 11, 0, 9, 8, 1, 1, 0]' : 0.114282}", "{'[5, 6, 6, 0, 6, 0, 11, 0, 9, 8, 1, 1, 0]' : 0.114086}"]
returning from 'run': {'[5, 6, 6, 0, 6, 0, 11, 0, 9, 8, 1, 1, 0]': ([0.126411, 0.126603, 0.126504, 0.122417, 0.114192, 0.114193, 0.114107, 0.113924, 0.114147, 0.114253, 0.11407, 0.11389, 0.114167, 0.1141, 0.112622, 0.112162, 0.114161, 0.11414, 0.111906, 0.112367, 0.114317, 0.114216, 0.114134, 0.114037, 0.114307, 0.114163, 0.114163, 0.114119, 0.114282, 0.114086], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 6, 6, 0, 6, 0, 11, 0, 9, 8, 1, 1, 0]': ([0.126411, 0.126603, 0.126504, 0.122417, 0.114192, 0.114193, 0.114107, 0.113924, 0.114147, 0.114253, 0.11407, 0.11389, 0.114167, 0.1141, 0.112622, 0.112162, 0.114161, 0.11414, 0.111906, 0.112367, 0.114317, 0.114216, 0.114134, 0.114037, 0.114307, 0.114163, 0.114163, 0.114119, 0.114282, 0.114086], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		454
        Multiplications: 	166
        Divisions: 		0
        Logical: 		0
        Reads: 			976
        Writes: 		138
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest11.exe __orio_perftest11.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest11.exe  
Program Test Output: 
{'[6, 6, 2, 0, 0, 5, 28, 0, 29, 18, 0, 0, 2]' : 0.234124}
{'[6, 6, 2, 0, 0, 5, 28, 0, 29, 18, 0, 0, 2]' : 0.233799}
{'[6, 6, 2, 0, 0, 5, 28, 0, 29, 18, 0, 0, 2]' : 0.214527}
{'[6, 6, 2, 0, 0, 5, 28, 0, 29, 18, 0, 0, 2]' : 0.207834}
{'[6, 6, 2, 0, 0, 5, 28, 0, 29, 18, 0, 0, 2]' : 0.209002}
{'[6, 6, 2, 0, 0, 5, 28, 0, 29, 18, 0, 0, 2]' : 0.20609}
{'[6, 6, 2, 0, 0, 5, 28, 0, 29, 18, 0, 0, 2]' : 0.203385}
{'[6, 6, 2, 0, 0, 5, 28, 0, 29, 18, 0, 0, 2]' : 0.203344}
{'[6, 6, 2, 0, 0, 5, 28, 0, 29, 18, 0, 0, 2]' : 0.203424}
{'[6, 6, 2, 0, 0, 5, 28, 0, 29, 18, 0, 0, 2]' : 0.203486}
{'[6, 6, 2, 0, 0, 5, 28, 0, 29, 18, 0, 0, 2]' : 0.20535}
{'[6, 6, 2, 0, 0, 5, 28, 0, 29, 18, 0, 0, 2]' : 0.203464}
{'[6, 6, 2, 0, 0, 5, 28, 0, 29, 18, 0, 0, 2]' : 0.203372}
{'[6, 6, 2, 0, 0, 5, 28, 0, 29, 18, 0, 0, 2]' : 0.20333}
{'[6, 6, 2, 0, 0, 5, 28, 0, 29, 18, 0, 0, 2]' : 0.203311}
{'[6, 6, 2, 0, 0, 5, 28, 0, 29, 18, 0, 0, 2]' : 0.206544}
{'[6, 6, 2, 0, 0, 5, 28, 0, 29, 18, 0, 0, 2]' : 0.20497}
{'[6, 6, 2, 0, 0, 5, 28, 0, 29, 18, 0, 0, 2]' : 0.203399}
{'[6, 6, 2, 0, 0, 5, 28, 0, 29, 18, 0, 0, 2]' : 0.203335}
{'[6, 6, 2, 0, 0, 5, 28, 0, 29, 18, 0, 0, 2]' : 0.203532}
{'[6, 6, 2, 0, 0, 5, 28, 0, 29, 18, 0, 0, 2]' : 0.207137}
{'[6, 6, 2, 0, 0, 5, 28, 0, 29, 18, 0, 0, 2]' : 0.208997}
{'[6, 6, 2, 0, 0, 5, 28, 0, 29, 18, 0, 0, 2]' : 0.207011}
{'[6, 6, 2, 0, 0, 5, 28, 0, 29, 18, 0, 0, 2]' : 0.209057}
{'[6, 6, 2, 0, 0, 5, 28, 0, 29, 18, 0, 0, 2]' : 0.209024}
{'[6, 6, 2, 0, 0, 5, 28, 0, 29, 18, 0, 0, 2]' : 0.208996}
{'[6, 6, 2, 0, 0, 5, 28, 0, 29, 18, 0, 0, 2]' : 0.207361}
{'[6, 6, 2, 0, 0, 5, 28, 0, 29, 18, 0, 0, 2]' : 0.206159}
{'[6, 6, 2, 0, 0, 5, 28, 0, 29, 18, 0, 0, 2]' : 0.209203}
{'[6, 6, 2, 0, 0, 5, 28, 0, 29, 18, 0, 0, 2]' : 0.20903}

out:
 ["{'[6, 6, 2, 0, 0, 5, 28, 0, 29, 18, 0, 0, 2]' : 0.234124}", "{'[6, 6, 2, 0, 0, 5, 28, 0, 29, 18, 0, 0, 2]' : 0.233799}", "{'[6, 6, 2, 0, 0, 5, 28, 0, 29, 18, 0, 0, 2]' : 0.214527}", "{'[6, 6, 2, 0, 0, 5, 28, 0, 29, 18, 0, 0, 2]' : 0.207834}", "{'[6, 6, 2, 0, 0, 5, 28, 0, 29, 18, 0, 0, 2]' : 0.209002}", "{'[6, 6, 2, 0, 0, 5, 28, 0, 29, 18, 0, 0, 2]' : 0.20609}", "{'[6, 6, 2, 0, 0, 5, 28, 0, 29, 18, 0, 0, 2]' : 0.203385}", "{'[6, 6, 2, 0, 0, 5, 28, 0, 29, 18, 0, 0, 2]' : 0.203344}", "{'[6, 6, 2, 0, 0, 5, 28, 0, 29, 18, 0, 0, 2]' : 0.203424}", "{'[6, 6, 2, 0, 0, 5, 28, 0, 29, 18, 0, 0, 2]' : 0.203486}", "{'[6, 6, 2, 0, 0, 5, 28, 0, 29, 18, 0, 0, 2]' : 0.20535}", "{'[6, 6, 2, 0, 0, 5, 28, 0, 29, 18, 0, 0, 2]' : 0.203464}", "{'[6, 6, 2, 0, 0, 5, 28, 0, 29, 18, 0, 0, 2]' : 0.203372}", "{'[6, 6, 2, 0, 0, 5, 28, 0, 29, 18, 0, 0, 2]' : 0.20333}", "{'[6, 6, 2, 0, 0, 5, 28, 0, 29, 18, 0, 0, 2]' : 0.203311}", "{'[6, 6, 2, 0, 0, 5, 28, 0, 29, 18, 0, 0, 2]' : 0.206544}", "{'[6, 6, 2, 0, 0, 5, 28, 0, 29, 18, 0, 0, 2]' : 0.20497}", "{'[6, 6, 2, 0, 0, 5, 28, 0, 29, 18, 0, 0, 2]' : 0.203399}", "{'[6, 6, 2, 0, 0, 5, 28, 0, 29, 18, 0, 0, 2]' : 0.203335}", "{'[6, 6, 2, 0, 0, 5, 28, 0, 29, 18, 0, 0, 2]' : 0.203532}", "{'[6, 6, 2, 0, 0, 5, 28, 0, 29, 18, 0, 0, 2]' : 0.207137}", "{'[6, 6, 2, 0, 0, 5, 28, 0, 29, 18, 0, 0, 2]' : 0.208997}", "{'[6, 6, 2, 0, 0, 5, 28, 0, 29, 18, 0, 0, 2]' : 0.207011}", "{'[6, 6, 2, 0, 0, 5, 28, 0, 29, 18, 0, 0, 2]' : 0.209057}", "{'[6, 6, 2, 0, 0, 5, 28, 0, 29, 18, 0, 0, 2]' : 0.209024}", "{'[6, 6, 2, 0, 0, 5, 28, 0, 29, 18, 0, 0, 2]' : 0.208996}", "{'[6, 6, 2, 0, 0, 5, 28, 0, 29, 18, 0, 0, 2]' : 0.207361}", "{'[6, 6, 2, 0, 0, 5, 28, 0, 29, 18, 0, 0, 2]' : 0.206159}", "{'[6, 6, 2, 0, 0, 5, 28, 0, 29, 18, 0, 0, 2]' : 0.209203}", "{'[6, 6, 2, 0, 0, 5, 28, 0, 29, 18, 0, 0, 2]' : 0.20903}"]
returning from 'run': {'[6, 6, 2, 0, 0, 5, 28, 0, 29, 18, 0, 0, 2]': ([0.234124, 0.233799, 0.214527, 0.207834, 0.209002, 0.20609, 0.203385, 0.203344, 0.203424, 0.203486, 0.20535, 0.203464, 0.203372, 0.20333, 0.203311, 0.206544, 0.20497, 0.203399, 0.203335, 0.203532, 0.207137, 0.208997, 0.207011, 0.209057, 0.209024, 0.208996, 0.207361, 0.206159, 0.209203, 0.20903], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 2, 0, 0, 5, 28, 0, 29, 18, 0, 0, 2]': ([0.234124, 0.233799, 0.214527, 0.207834, 0.209002, 0.20609, 0.203385, 0.203344, 0.203424, 0.203486, 0.20535, 0.203464, 0.203372, 0.20333, 0.203311, 0.206544, 0.20497, 0.203399, 0.203335, 0.203532, 0.207137, 0.208997, 0.207011, 0.209057, 0.209024, 0.208996, 0.207361, 0.206159, 0.209203, 0.20903], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	6
        Additions: 		1565
        Multiplications: 	480
        Divisions: 		0
        Logical: 		0
        Reads: 			2642
        Writes: 		335
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest12.exe __orio_perftest12.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest12.exe  
Program Test Output: 
{'[6, 4, 4, 6, 6, 6, 29, 22, 0, 0, 0, 0, 1]' : 0.164127}
{'[6, 4, 4, 6, 6, 6, 29, 22, 0, 0, 0, 0, 1]' : 0.164047}
{'[6, 4, 4, 6, 6, 6, 29, 22, 0, 0, 0, 0, 1]' : 0.163643}
{'[6, 4, 4, 6, 6, 6, 29, 22, 0, 0, 0, 0, 1]' : 0.146561}
{'[6, 4, 4, 6, 6, 6, 29, 22, 0, 0, 0, 0, 1]' : 0.144981}
{'[6, 4, 4, 6, 6, 6, 29, 22, 0, 0, 0, 0, 1]' : 0.142371}
{'[6, 4, 4, 6, 6, 6, 29, 22, 0, 0, 0, 0, 1]' : 0.14136}
{'[6, 4, 4, 6, 6, 6, 29, 22, 0, 0, 0, 0, 1]' : 0.140851}
{'[6, 4, 4, 6, 6, 6, 29, 22, 0, 0, 0, 0, 1]' : 0.140681}
{'[6, 4, 4, 6, 6, 6, 29, 22, 0, 0, 0, 0, 1]' : 0.141298}
{'[6, 4, 4, 6, 6, 6, 29, 22, 0, 0, 0, 0, 1]' : 0.144051}
{'[6, 4, 4, 6, 6, 6, 29, 22, 0, 0, 0, 0, 1]' : 0.145418}
{'[6, 4, 4, 6, 6, 6, 29, 22, 0, 0, 0, 0, 1]' : 0.145555}
{'[6, 4, 4, 6, 6, 6, 29, 22, 0, 0, 0, 0, 1]' : 0.146007}
{'[6, 4, 4, 6, 6, 6, 29, 22, 0, 0, 0, 0, 1]' : 0.14506}
{'[6, 4, 4, 6, 6, 6, 29, 22, 0, 0, 0, 0, 1]' : 0.145316}
{'[6, 4, 4, 6, 6, 6, 29, 22, 0, 0, 0, 0, 1]' : 0.145362}
{'[6, 4, 4, 6, 6, 6, 29, 22, 0, 0, 0, 0, 1]' : 0.14559}
{'[6, 4, 4, 6, 6, 6, 29, 22, 0, 0, 0, 0, 1]' : 0.145165}
{'[6, 4, 4, 6, 6, 6, 29, 22, 0, 0, 0, 0, 1]' : 0.145259}
{'[6, 4, 4, 6, 6, 6, 29, 22, 0, 0, 0, 0, 1]' : 0.145724}
{'[6, 4, 4, 6, 6, 6, 29, 22, 0, 0, 0, 0, 1]' : 0.143051}
{'[6, 4, 4, 6, 6, 6, 29, 22, 0, 0, 0, 0, 1]' : 0.141075}
{'[6, 4, 4, 6, 6, 6, 29, 22, 0, 0, 0, 0, 1]' : 0.141474}
{'[6, 4, 4, 6, 6, 6, 29, 22, 0, 0, 0, 0, 1]' : 0.142005}
{'[6, 4, 4, 6, 6, 6, 29, 22, 0, 0, 0, 0, 1]' : 0.145426}
{'[6, 4, 4, 6, 6, 6, 29, 22, 0, 0, 0, 0, 1]' : 0.145473}
{'[6, 4, 4, 6, 6, 6, 29, 22, 0, 0, 0, 0, 1]' : 0.145448}
{'[6, 4, 4, 6, 6, 6, 29, 22, 0, 0, 0, 0, 1]' : 0.145628}
{'[6, 4, 4, 6, 6, 6, 29, 22, 0, 0, 0, 0, 1]' : 0.145694}

out:
 ["{'[6, 4, 4, 6, 6, 6, 29, 22, 0, 0, 0, 0, 1]' : 0.164127}", "{'[6, 4, 4, 6, 6, 6, 29, 22, 0, 0, 0, 0, 1]' : 0.164047}", "{'[6, 4, 4, 6, 6, 6, 29, 22, 0, 0, 0, 0, 1]' : 0.163643}", "{'[6, 4, 4, 6, 6, 6, 29, 22, 0, 0, 0, 0, 1]' : 0.146561}", "{'[6, 4, 4, 6, 6, 6, 29, 22, 0, 0, 0, 0, 1]' : 0.144981}", "{'[6, 4, 4, 6, 6, 6, 29, 22, 0, 0, 0, 0, 1]' : 0.142371}", "{'[6, 4, 4, 6, 6, 6, 29, 22, 0, 0, 0, 0, 1]' : 0.14136}", "{'[6, 4, 4, 6, 6, 6, 29, 22, 0, 0, 0, 0, 1]' : 0.140851}", "{'[6, 4, 4, 6, 6, 6, 29, 22, 0, 0, 0, 0, 1]' : 0.140681}", "{'[6, 4, 4, 6, 6, 6, 29, 22, 0, 0, 0, 0, 1]' : 0.141298}", "{'[6, 4, 4, 6, 6, 6, 29, 22, 0, 0, 0, 0, 1]' : 0.144051}", "{'[6, 4, 4, 6, 6, 6, 29, 22, 0, 0, 0, 0, 1]' : 0.145418}", "{'[6, 4, 4, 6, 6, 6, 29, 22, 0, 0, 0, 0, 1]' : 0.145555}", "{'[6, 4, 4, 6, 6, 6, 29, 22, 0, 0, 0, 0, 1]' : 0.146007}", "{'[6, 4, 4, 6, 6, 6, 29, 22, 0, 0, 0, 0, 1]' : 0.14506}", "{'[6, 4, 4, 6, 6, 6, 29, 22, 0, 0, 0, 0, 1]' : 0.145316}", "{'[6, 4, 4, 6, 6, 6, 29, 22, 0, 0, 0, 0, 1]' : 0.145362}", "{'[6, 4, 4, 6, 6, 6, 29, 22, 0, 0, 0, 0, 1]' : 0.14559}", "{'[6, 4, 4, 6, 6, 6, 29, 22, 0, 0, 0, 0, 1]' : 0.145165}", "{'[6, 4, 4, 6, 6, 6, 29, 22, 0, 0, 0, 0, 1]' : 0.145259}", "{'[6, 4, 4, 6, 6, 6, 29, 22, 0, 0, 0, 0, 1]' : 0.145724}", "{'[6, 4, 4, 6, 6, 6, 29, 22, 0, 0, 0, 0, 1]' : 0.143051}", "{'[6, 4, 4, 6, 6, 6, 29, 22, 0, 0, 0, 0, 1]' : 0.141075}", "{'[6, 4, 4, 6, 6, 6, 29, 22, 0, 0, 0, 0, 1]' : 0.141474}", "{'[6, 4, 4, 6, 6, 6, 29, 22, 0, 0, 0, 0, 1]' : 0.142005}", "{'[6, 4, 4, 6, 6, 6, 29, 22, 0, 0, 0, 0, 1]' : 0.145426}", "{'[6, 4, 4, 6, 6, 6, 29, 22, 0, 0, 0, 0, 1]' : 0.145473}", "{'[6, 4, 4, 6, 6, 6, 29, 22, 0, 0, 0, 0, 1]' : 0.145448}", "{'[6, 4, 4, 6, 6, 6, 29, 22, 0, 0, 0, 0, 1]' : 0.145628}", "{'[6, 4, 4, 6, 6, 6, 29, 22, 0, 0, 0, 0, 1]' : 0.145694}"]
returning from 'run': {'[6, 4, 4, 6, 6, 6, 29, 22, 0, 0, 0, 0, 1]': ([0.164127, 0.164047, 0.163643, 0.146561, 0.144981, 0.142371, 0.14136, 0.140851, 0.140681, 0.141298, 0.144051, 0.145418, 0.145555, 0.146007, 0.14506, 0.145316, 0.145362, 0.14559, 0.145165, 0.145259, 0.145724, 0.143051, 0.141075, 0.141474, 0.142005, 0.145426, 0.145473, 0.145448, 0.145628, 0.145694], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 4, 4, 6, 6, 6, 29, 22, 0, 0, 0, 0, 1]': ([0.164127, 0.164047, 0.163643, 0.146561, 0.144981, 0.142371, 0.14136, 0.140851, 0.140681, 0.141298, 0.144051, 0.145418, 0.145555, 0.146007, 0.14506, 0.145316, 0.145362, 0.14559, 0.145165, 0.145259, 0.145724, 0.143051, 0.141075, 0.141474, 0.142005, 0.145426, 0.145473, 0.145448, 0.145628, 0.145694], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	27
        Max loop nest depth: 	5
        Additions: 		13117
        Multiplications: 	3906
        Divisions: 		0
        Logical: 		0
        Reads: 			19823
        Writes: 		2059
        Comparisons:		27
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest13.exe __orio_perftest13.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest13.exe  
Program Test Output: 
{'[6, 6, 6, 0, 6, 6, 18, 29, 28, 0, 2, 0, 0]' : 0.294972}
{'[6, 6, 6, 0, 6, 6, 18, 29, 28, 0, 2, 0, 0]' : 0.268683}
{'[6, 6, 6, 0, 6, 6, 18, 29, 28, 0, 2, 0, 0]' : 0.267213}
{'[6, 6, 6, 0, 6, 6, 18, 29, 28, 0, 2, 0, 0]' : 0.266885}
{'[6, 6, 6, 0, 6, 6, 18, 29, 28, 0, 2, 0, 0]' : 0.267795}
{'[6, 6, 6, 0, 6, 6, 18, 29, 28, 0, 2, 0, 0]' : 0.267435}
{'[6, 6, 6, 0, 6, 6, 18, 29, 28, 0, 2, 0, 0]' : 0.267256}
{'[6, 6, 6, 0, 6, 6, 18, 29, 28, 0, 2, 0, 0]' : 0.26775}
{'[6, 6, 6, 0, 6, 6, 18, 29, 28, 0, 2, 0, 0]' : 0.267345}
{'[6, 6, 6, 0, 6, 6, 18, 29, 28, 0, 2, 0, 0]' : 0.268562}
{'[6, 6, 6, 0, 6, 6, 18, 29, 28, 0, 2, 0, 0]' : 0.2685}
{'[6, 6, 6, 0, 6, 6, 18, 29, 28, 0, 2, 0, 0]' : 0.267585}
{'[6, 6, 6, 0, 6, 6, 18, 29, 28, 0, 2, 0, 0]' : 0.26681}
{'[6, 6, 6, 0, 6, 6, 18, 29, 28, 0, 2, 0, 0]' : 0.267489}
{'[6, 6, 6, 0, 6, 6, 18, 29, 28, 0, 2, 0, 0]' : 0.268159}
{'[6, 6, 6, 0, 6, 6, 18, 29, 28, 0, 2, 0, 0]' : 0.266586}
{'[6, 6, 6, 0, 6, 6, 18, 29, 28, 0, 2, 0, 0]' : 0.268321}
{'[6, 6, 6, 0, 6, 6, 18, 29, 28, 0, 2, 0, 0]' : 0.267076}
{'[6, 6, 6, 0, 6, 6, 18, 29, 28, 0, 2, 0, 0]' : 0.267851}
{'[6, 6, 6, 0, 6, 6, 18, 29, 28, 0, 2, 0, 0]' : 0.267479}
{'[6, 6, 6, 0, 6, 6, 18, 29, 28, 0, 2, 0, 0]' : 0.267516}
{'[6, 6, 6, 0, 6, 6, 18, 29, 28, 0, 2, 0, 0]' : 0.267306}
{'[6, 6, 6, 0, 6, 6, 18, 29, 28, 0, 2, 0, 0]' : 0.268454}
{'[6, 6, 6, 0, 6, 6, 18, 29, 28, 0, 2, 0, 0]' : 0.26707}
{'[6, 6, 6, 0, 6, 6, 18, 29, 28, 0, 2, 0, 0]' : 0.267152}
{'[6, 6, 6, 0, 6, 6, 18, 29, 28, 0, 2, 0, 0]' : 0.267757}
{'[6, 6, 6, 0, 6, 6, 18, 29, 28, 0, 2, 0, 0]' : 0.2681}
{'[6, 6, 6, 0, 6, 6, 18, 29, 28, 0, 2, 0, 0]' : 0.266995}
{'[6, 6, 6, 0, 6, 6, 18, 29, 28, 0, 2, 0, 0]' : 0.267415}
{'[6, 6, 6, 0, 6, 6, 18, 29, 28, 0, 2, 0, 0]' : 0.268405}

out:
 ["{'[6, 6, 6, 0, 6, 6, 18, 29, 28, 0, 2, 0, 0]' : 0.294972}", "{'[6, 6, 6, 0, 6, 6, 18, 29, 28, 0, 2, 0, 0]' : 0.268683}", "{'[6, 6, 6, 0, 6, 6, 18, 29, 28, 0, 2, 0, 0]' : 0.267213}", "{'[6, 6, 6, 0, 6, 6, 18, 29, 28, 0, 2, 0, 0]' : 0.266885}", "{'[6, 6, 6, 0, 6, 6, 18, 29, 28, 0, 2, 0, 0]' : 0.267795}", "{'[6, 6, 6, 0, 6, 6, 18, 29, 28, 0, 2, 0, 0]' : 0.267435}", "{'[6, 6, 6, 0, 6, 6, 18, 29, 28, 0, 2, 0, 0]' : 0.267256}", "{'[6, 6, 6, 0, 6, 6, 18, 29, 28, 0, 2, 0, 0]' : 0.26775}", "{'[6, 6, 6, 0, 6, 6, 18, 29, 28, 0, 2, 0, 0]' : 0.267345}", "{'[6, 6, 6, 0, 6, 6, 18, 29, 28, 0, 2, 0, 0]' : 0.268562}", "{'[6, 6, 6, 0, 6, 6, 18, 29, 28, 0, 2, 0, 0]' : 0.2685}", "{'[6, 6, 6, 0, 6, 6, 18, 29, 28, 0, 2, 0, 0]' : 0.267585}", "{'[6, 6, 6, 0, 6, 6, 18, 29, 28, 0, 2, 0, 0]' : 0.26681}", "{'[6, 6, 6, 0, 6, 6, 18, 29, 28, 0, 2, 0, 0]' : 0.267489}", "{'[6, 6, 6, 0, 6, 6, 18, 29, 28, 0, 2, 0, 0]' : 0.268159}", "{'[6, 6, 6, 0, 6, 6, 18, 29, 28, 0, 2, 0, 0]' : 0.266586}", "{'[6, 6, 6, 0, 6, 6, 18, 29, 28, 0, 2, 0, 0]' : 0.268321}", "{'[6, 6, 6, 0, 6, 6, 18, 29, 28, 0, 2, 0, 0]' : 0.267076}", "{'[6, 6, 6, 0, 6, 6, 18, 29, 28, 0, 2, 0, 0]' : 0.267851}", "{'[6, 6, 6, 0, 6, 6, 18, 29, 28, 0, 2, 0, 0]' : 0.267479}", "{'[6, 6, 6, 0, 6, 6, 18, 29, 28, 0, 2, 0, 0]' : 0.267516}", "{'[6, 6, 6, 0, 6, 6, 18, 29, 28, 0, 2, 0, 0]' : 0.267306}", "{'[6, 6, 6, 0, 6, 6, 18, 29, 28, 0, 2, 0, 0]' : 0.268454}", "{'[6, 6, 6, 0, 6, 6, 18, 29, 28, 0, 2, 0, 0]' : 0.26707}", "{'[6, 6, 6, 0, 6, 6, 18, 29, 28, 0, 2, 0, 0]' : 0.267152}", "{'[6, 6, 6, 0, 6, 6, 18, 29, 28, 0, 2, 0, 0]' : 0.267757}", "{'[6, 6, 6, 0, 6, 6, 18, 29, 28, 0, 2, 0, 0]' : 0.2681}", "{'[6, 6, 6, 0, 6, 6, 18, 29, 28, 0, 2, 0, 0]' : 0.266995}", "{'[6, 6, 6, 0, 6, 6, 18, 29, 28, 0, 2, 0, 0]' : 0.267415}", "{'[6, 6, 6, 0, 6, 6, 18, 29, 28, 0, 2, 0, 0]' : 0.268405}"]
returning from 'run': {'[6, 6, 6, 0, 6, 6, 18, 29, 28, 0, 2, 0, 0]': ([0.294972, 0.268683, 0.267213, 0.266885, 0.267795, 0.267435, 0.267256, 0.26775, 0.267345, 0.268562, 0.2685, 0.267585, 0.26681, 0.267489, 0.268159, 0.266586, 0.268321, 0.267076, 0.267851, 0.267479, 0.267516, 0.267306, 0.268454, 0.26707, 0.267152, 0.267757, 0.2681, 0.266995, 0.267415, 0.268405], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 6, 0, 6, 6, 18, 29, 28, 0, 2, 0, 0]': ([0.294972, 0.268683, 0.267213, 0.266885, 0.267795, 0.267435, 0.267256, 0.26775, 0.267345, 0.268562, 0.2685, 0.267585, 0.26681, 0.267489, 0.268159, 0.266586, 0.268321, 0.267076, 0.267851, 0.267479, 0.267516, 0.267306, 0.268454, 0.26707, 0.267152, 0.267757, 0.2681, 0.266995, 0.267415, 0.268405], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		1546
        Multiplications: 	464
        Divisions: 		0
        Logical: 		0
        Reads: 			2499
        Writes: 		299
        Comparisons:		15
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest14.exe __orio_perftest14.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest14.exe  
Program Test Output: 
{'[1, 0, 0, 0, 4, 6, 27, 6, 0, 26, 0, 0, 0]' : 0.163045}
{'[1, 0, 0, 0, 4, 6, 27, 6, 0, 26, 0, 0, 0]' : 0.164311}
{'[1, 0, 0, 0, 4, 6, 27, 6, 0, 26, 0, 0, 0]' : 0.164342}
{'[1, 0, 0, 0, 4, 6, 27, 6, 0, 26, 0, 0, 0]' : 0.164321}
{'[1, 0, 0, 0, 4, 6, 27, 6, 0, 26, 0, 0, 0]' : 0.164053}
{'[1, 0, 0, 0, 4, 6, 27, 6, 0, 26, 0, 0, 0]' : 0.159154}
{'[1, 0, 0, 0, 4, 6, 27, 6, 0, 26, 0, 0, 0]' : 0.160669}
{'[1, 0, 0, 0, 4, 6, 27, 6, 0, 26, 0, 0, 0]' : 0.1644}
{'[1, 0, 0, 0, 4, 6, 27, 6, 0, 26, 0, 0, 0]' : 0.164303}
{'[1, 0, 0, 0, 4, 6, 27, 6, 0, 26, 0, 0, 0]' : 0.164307}
{'[1, 0, 0, 0, 4, 6, 27, 6, 0, 26, 0, 0, 0]' : 0.164299}
{'[1, 0, 0, 0, 4, 6, 27, 6, 0, 26, 0, 0, 0]' : 0.164453}
{'[1, 0, 0, 0, 4, 6, 27, 6, 0, 26, 0, 0, 0]' : 0.164467}
{'[1, 0, 0, 0, 4, 6, 27, 6, 0, 26, 0, 0, 0]' : 0.164326}
{'[1, 0, 0, 0, 4, 6, 27, 6, 0, 26, 0, 0, 0]' : 0.16407}
{'[1, 0, 0, 0, 4, 6, 27, 6, 0, 26, 0, 0, 0]' : 0.159591}
{'[1, 0, 0, 0, 4, 6, 27, 6, 0, 26, 0, 0, 0]' : 0.161143}
{'[1, 0, 0, 0, 4, 6, 27, 6, 0, 26, 0, 0, 0]' : 0.164236}
{'[1, 0, 0, 0, 4, 6, 27, 6, 0, 26, 0, 0, 0]' : 0.164404}
{'[1, 0, 0, 0, 4, 6, 27, 6, 0, 26, 0, 0, 0]' : 0.164341}
{'[1, 0, 0, 0, 4, 6, 27, 6, 0, 26, 0, 0, 0]' : 0.164354}
{'[1, 0, 0, 0, 4, 6, 27, 6, 0, 26, 0, 0, 0]' : 0.16429}
{'[1, 0, 0, 0, 4, 6, 27, 6, 0, 26, 0, 0, 0]' : 0.164417}
{'[1, 0, 0, 0, 4, 6, 27, 6, 0, 26, 0, 0, 0]' : 0.164638}
{'[1, 0, 0, 0, 4, 6, 27, 6, 0, 26, 0, 0, 0]' : 0.164417}
{'[1, 0, 0, 0, 4, 6, 27, 6, 0, 26, 0, 0, 0]' : 0.164405}
{'[1, 0, 0, 0, 4, 6, 27, 6, 0, 26, 0, 0, 0]' : 0.164388}
{'[1, 0, 0, 0, 4, 6, 27, 6, 0, 26, 0, 0, 0]' : 0.164342}
{'[1, 0, 0, 0, 4, 6, 27, 6, 0, 26, 0, 0, 0]' : 0.164419}
{'[1, 0, 0, 0, 4, 6, 27, 6, 0, 26, 0, 0, 0]' : 0.164275}

out:
 ["{'[1, 0, 0, 0, 4, 6, 27, 6, 0, 26, 0, 0, 0]' : 0.163045}", "{'[1, 0, 0, 0, 4, 6, 27, 6, 0, 26, 0, 0, 0]' : 0.164311}", "{'[1, 0, 0, 0, 4, 6, 27, 6, 0, 26, 0, 0, 0]' : 0.164342}", "{'[1, 0, 0, 0, 4, 6, 27, 6, 0, 26, 0, 0, 0]' : 0.164321}", "{'[1, 0, 0, 0, 4, 6, 27, 6, 0, 26, 0, 0, 0]' : 0.164053}", "{'[1, 0, 0, 0, 4, 6, 27, 6, 0, 26, 0, 0, 0]' : 0.159154}", "{'[1, 0, 0, 0, 4, 6, 27, 6, 0, 26, 0, 0, 0]' : 0.160669}", "{'[1, 0, 0, 0, 4, 6, 27, 6, 0, 26, 0, 0, 0]' : 0.1644}", "{'[1, 0, 0, 0, 4, 6, 27, 6, 0, 26, 0, 0, 0]' : 0.164303}", "{'[1, 0, 0, 0, 4, 6, 27, 6, 0, 26, 0, 0, 0]' : 0.164307}", "{'[1, 0, 0, 0, 4, 6, 27, 6, 0, 26, 0, 0, 0]' : 0.164299}", "{'[1, 0, 0, 0, 4, 6, 27, 6, 0, 26, 0, 0, 0]' : 0.164453}", "{'[1, 0, 0, 0, 4, 6, 27, 6, 0, 26, 0, 0, 0]' : 0.164467}", "{'[1, 0, 0, 0, 4, 6, 27, 6, 0, 26, 0, 0, 0]' : 0.164326}", "{'[1, 0, 0, 0, 4, 6, 27, 6, 0, 26, 0, 0, 0]' : 0.16407}", "{'[1, 0, 0, 0, 4, 6, 27, 6, 0, 26, 0, 0, 0]' : 0.159591}", "{'[1, 0, 0, 0, 4, 6, 27, 6, 0, 26, 0, 0, 0]' : 0.161143}", "{'[1, 0, 0, 0, 4, 6, 27, 6, 0, 26, 0, 0, 0]' : 0.164236}", "{'[1, 0, 0, 0, 4, 6, 27, 6, 0, 26, 0, 0, 0]' : 0.164404}", "{'[1, 0, 0, 0, 4, 6, 27, 6, 0, 26, 0, 0, 0]' : 0.164341}", "{'[1, 0, 0, 0, 4, 6, 27, 6, 0, 26, 0, 0, 0]' : 0.164354}", "{'[1, 0, 0, 0, 4, 6, 27, 6, 0, 26, 0, 0, 0]' : 0.16429}", "{'[1, 0, 0, 0, 4, 6, 27, 6, 0, 26, 0, 0, 0]' : 0.164417}", "{'[1, 0, 0, 0, 4, 6, 27, 6, 0, 26, 0, 0, 0]' : 0.164638}", "{'[1, 0, 0, 0, 4, 6, 27, 6, 0, 26, 0, 0, 0]' : 0.164417}", "{'[1, 0, 0, 0, 4, 6, 27, 6, 0, 26, 0, 0, 0]' : 0.164405}", "{'[1, 0, 0, 0, 4, 6, 27, 6, 0, 26, 0, 0, 0]' : 0.164388}", "{'[1, 0, 0, 0, 4, 6, 27, 6, 0, 26, 0, 0, 0]' : 0.164342}", "{'[1, 0, 0, 0, 4, 6, 27, 6, 0, 26, 0, 0, 0]' : 0.164419}", "{'[1, 0, 0, 0, 4, 6, 27, 6, 0, 26, 0, 0, 0]' : 0.164275}"]
returning from 'run': {'[1, 0, 0, 0, 4, 6, 27, 6, 0, 26, 0, 0, 0]': ([0.163045, 0.164311, 0.164342, 0.164321, 0.164053, 0.159154, 0.160669, 0.1644, 0.164303, 0.164307, 0.164299, 0.164453, 0.164467, 0.164326, 0.16407, 0.159591, 0.161143, 0.164236, 0.164404, 0.164341, 0.164354, 0.16429, 0.164417, 0.164638, 0.164417, 0.164405, 0.164388, 0.164342, 0.164419, 0.164275], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 0, 0, 4, 6, 27, 6, 0, 26, 0, 0, 0]': ([0.163045, 0.164311, 0.164342, 0.164321, 0.164053, 0.159154, 0.160669, 0.1644, 0.164303, 0.164307, 0.164299, 0.164453, 0.164467, 0.164326, 0.16407, 0.159591, 0.161143, 0.164236, 0.164404, 0.164341, 0.164354, 0.16429, 0.164417, 0.164638, 0.164417, 0.164405, 0.164388, 0.164342, 0.164419, 0.164275], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		445
        Multiplications: 	172
        Divisions: 		0
        Logical: 		0
        Reads: 			953
        Writes: 		116
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest15.exe __orio_perftest15.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest15.exe  
Program Test Output: 
{'[0, 5, 2, 0, 6, 0, 5, 0, 27, 23, 0, 0, 2]' : 0.196728}
{'[0, 5, 2, 0, 6, 0, 5, 0, 27, 23, 0, 0, 2]' : 0.194195}
{'[0, 5, 2, 0, 6, 0, 5, 0, 27, 23, 0, 0, 2]' : 0.196584}
{'[0, 5, 2, 0, 6, 0, 5, 0, 27, 23, 0, 0, 2]' : 0.196669}
{'[0, 5, 2, 0, 6, 0, 5, 0, 27, 23, 0, 0, 2]' : 0.196629}
{'[0, 5, 2, 0, 6, 0, 5, 0, 27, 23, 0, 0, 2]' : 0.196315}
{'[0, 5, 2, 0, 6, 0, 5, 0, 27, 23, 0, 0, 2]' : 0.192315}
{'[0, 5, 2, 0, 6, 0, 5, 0, 27, 23, 0, 0, 2]' : 0.196598}
{'[0, 5, 2, 0, 6, 0, 5, 0, 27, 23, 0, 0, 2]' : 0.196793}
{'[0, 5, 2, 0, 6, 0, 5, 0, 27, 23, 0, 0, 2]' : 0.196622}
{'[0, 5, 2, 0, 6, 0, 5, 0, 27, 23, 0, 0, 2]' : 0.196588}
{'[0, 5, 2, 0, 6, 0, 5, 0, 27, 23, 0, 0, 2]' : 0.192004}
{'[0, 5, 2, 0, 6, 0, 5, 0, 27, 23, 0, 0, 2]' : 0.196605}
{'[0, 5, 2, 0, 6, 0, 5, 0, 27, 23, 0, 0, 2]' : 0.196614}
{'[0, 5, 2, 0, 6, 0, 5, 0, 27, 23, 0, 0, 2]' : 0.196591}
{'[0, 5, 2, 0, 6, 0, 5, 0, 27, 23, 0, 0, 2]' : 0.196602}
{'[0, 5, 2, 0, 6, 0, 5, 0, 27, 23, 0, 0, 2]' : 0.19659}
{'[0, 5, 2, 0, 6, 0, 5, 0, 27, 23, 0, 0, 2]' : 0.196682}
{'[0, 5, 2, 0, 6, 0, 5, 0, 27, 23, 0, 0, 2]' : 0.196836}
{'[0, 5, 2, 0, 6, 0, 5, 0, 27, 23, 0, 0, 2]' : 0.196623}
{'[0, 5, 2, 0, 6, 0, 5, 0, 27, 23, 0, 0, 2]' : 0.196627}
{'[0, 5, 2, 0, 6, 0, 5, 0, 27, 23, 0, 0, 2]' : 0.192316}
{'[0, 5, 2, 0, 6, 0, 5, 0, 27, 23, 0, 0, 2]' : 0.190663}
{'[0, 5, 2, 0, 6, 0, 5, 0, 27, 23, 0, 0, 2]' : 0.190524}
{'[0, 5, 2, 0, 6, 0, 5, 0, 27, 23, 0, 0, 2]' : 0.189076}
{'[0, 5, 2, 0, 6, 0, 5, 0, 27, 23, 0, 0, 2]' : 0.190628}
{'[0, 5, 2, 0, 6, 0, 5, 0, 27, 23, 0, 0, 2]' : 0.190734}
{'[0, 5, 2, 0, 6, 0, 5, 0, 27, 23, 0, 0, 2]' : 0.190768}
{'[0, 5, 2, 0, 6, 0, 5, 0, 27, 23, 0, 0, 2]' : 0.190536}
{'[0, 5, 2, 0, 6, 0, 5, 0, 27, 23, 0, 0, 2]' : 0.190718}

out:
 ["{'[0, 5, 2, 0, 6, 0, 5, 0, 27, 23, 0, 0, 2]' : 0.196728}", "{'[0, 5, 2, 0, 6, 0, 5, 0, 27, 23, 0, 0, 2]' : 0.194195}", "{'[0, 5, 2, 0, 6, 0, 5, 0, 27, 23, 0, 0, 2]' : 0.196584}", "{'[0, 5, 2, 0, 6, 0, 5, 0, 27, 23, 0, 0, 2]' : 0.196669}", "{'[0, 5, 2, 0, 6, 0, 5, 0, 27, 23, 0, 0, 2]' : 0.196629}", "{'[0, 5, 2, 0, 6, 0, 5, 0, 27, 23, 0, 0, 2]' : 0.196315}", "{'[0, 5, 2, 0, 6, 0, 5, 0, 27, 23, 0, 0, 2]' : 0.192315}", "{'[0, 5, 2, 0, 6, 0, 5, 0, 27, 23, 0, 0, 2]' : 0.196598}", "{'[0, 5, 2, 0, 6, 0, 5, 0, 27, 23, 0, 0, 2]' : 0.196793}", "{'[0, 5, 2, 0, 6, 0, 5, 0, 27, 23, 0, 0, 2]' : 0.196622}", "{'[0, 5, 2, 0, 6, 0, 5, 0, 27, 23, 0, 0, 2]' : 0.196588}", "{'[0, 5, 2, 0, 6, 0, 5, 0, 27, 23, 0, 0, 2]' : 0.192004}", "{'[0, 5, 2, 0, 6, 0, 5, 0, 27, 23, 0, 0, 2]' : 0.196605}", "{'[0, 5, 2, 0, 6, 0, 5, 0, 27, 23, 0, 0, 2]' : 0.196614}", "{'[0, 5, 2, 0, 6, 0, 5, 0, 27, 23, 0, 0, 2]' : 0.196591}", "{'[0, 5, 2, 0, 6, 0, 5, 0, 27, 23, 0, 0, 2]' : 0.196602}", "{'[0, 5, 2, 0, 6, 0, 5, 0, 27, 23, 0, 0, 2]' : 0.19659}", "{'[0, 5, 2, 0, 6, 0, 5, 0, 27, 23, 0, 0, 2]' : 0.196682}", "{'[0, 5, 2, 0, 6, 0, 5, 0, 27, 23, 0, 0, 2]' : 0.196836}", "{'[0, 5, 2, 0, 6, 0, 5, 0, 27, 23, 0, 0, 2]' : 0.196623}", "{'[0, 5, 2, 0, 6, 0, 5, 0, 27, 23, 0, 0, 2]' : 0.196627}", "{'[0, 5, 2, 0, 6, 0, 5, 0, 27, 23, 0, 0, 2]' : 0.192316}", "{'[0, 5, 2, 0, 6, 0, 5, 0, 27, 23, 0, 0, 2]' : 0.190663}", "{'[0, 5, 2, 0, 6, 0, 5, 0, 27, 23, 0, 0, 2]' : 0.190524}", "{'[0, 5, 2, 0, 6, 0, 5, 0, 27, 23, 0, 0, 2]' : 0.189076}", "{'[0, 5, 2, 0, 6, 0, 5, 0, 27, 23, 0, 0, 2]' : 0.190628}", "{'[0, 5, 2, 0, 6, 0, 5, 0, 27, 23, 0, 0, 2]' : 0.190734}", "{'[0, 5, 2, 0, 6, 0, 5, 0, 27, 23, 0, 0, 2]' : 0.190768}", "{'[0, 5, 2, 0, 6, 0, 5, 0, 27, 23, 0, 0, 2]' : 0.190536}", "{'[0, 5, 2, 0, 6, 0, 5, 0, 27, 23, 0, 0, 2]' : 0.190718}"]
returning from 'run': {'[0, 5, 2, 0, 6, 0, 5, 0, 27, 23, 0, 0, 2]': ([0.196728, 0.194195, 0.196584, 0.196669, 0.196629, 0.196315, 0.192315, 0.196598, 0.196793, 0.196622, 0.196588, 0.192004, 0.196605, 0.196614, 0.196591, 0.196602, 0.19659, 0.196682, 0.196836, 0.196623, 0.196627, 0.192316, 0.190663, 0.190524, 0.189076, 0.190628, 0.190734, 0.190768, 0.190536, 0.190718], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 5, 2, 0, 6, 0, 5, 0, 27, 23, 0, 0, 2]': ([0.196728, 0.194195, 0.196584, 0.196669, 0.196629, 0.196315, 0.192315, 0.196598, 0.196793, 0.196622, 0.196588, 0.192004, 0.196605, 0.196614, 0.196591, 0.196602, 0.19659, 0.196682, 0.196836, 0.196623, 0.196627, 0.192316, 0.190663, 0.190524, 0.189076, 0.190628, 0.190734, 0.190768, 0.190536, 0.190718], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	74
        Max loop nest depth: 	5
        Additions: 		12382
        Multiplications: 	3540
        Divisions: 		0
        Logical: 		0
        Reads: 			18398
        Writes: 		1952
        Comparisons:		74
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest16.exe __orio_perftest16.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest16.exe  
Program Test Output: 
{'[2, 0, 6, 5, 3, 0, 2, 28, 0, 24, 0, 0, 2]' : 0.215956}
{'[2, 0, 6, 5, 3, 0, 2, 28, 0, 24, 0, 0, 2]' : 0.213878}
{'[2, 0, 6, 5, 3, 0, 2, 28, 0, 24, 0, 0, 2]' : 0.196603}
{'[2, 0, 6, 5, 3, 0, 2, 28, 0, 24, 0, 0, 2]' : 0.197023}
{'[2, 0, 6, 5, 3, 0, 2, 28, 0, 24, 0, 0, 2]' : 0.196665}
{'[2, 0, 6, 5, 3, 0, 2, 28, 0, 24, 0, 0, 2]' : 0.196509}
{'[2, 0, 6, 5, 3, 0, 2, 28, 0, 24, 0, 0, 2]' : 0.194621}
{'[2, 0, 6, 5, 3, 0, 2, 28, 0, 24, 0, 0, 2]' : 0.192359}
{'[2, 0, 6, 5, 3, 0, 2, 28, 0, 24, 0, 0, 2]' : 0.192329}
{'[2, 0, 6, 5, 3, 0, 2, 28, 0, 24, 0, 0, 2]' : 0.196385}
{'[2, 0, 6, 5, 3, 0, 2, 28, 0, 24, 0, 0, 2]' : 0.196727}
{'[2, 0, 6, 5, 3, 0, 2, 28, 0, 24, 0, 0, 2]' : 0.197071}
{'[2, 0, 6, 5, 3, 0, 2, 28, 0, 24, 0, 0, 2]' : 0.196779}
{'[2, 0, 6, 5, 3, 0, 2, 28, 0, 24, 0, 0, 2]' : 0.196947}
{'[2, 0, 6, 5, 3, 0, 2, 28, 0, 24, 0, 0, 2]' : 0.197177}
{'[2, 0, 6, 5, 3, 0, 2, 28, 0, 24, 0, 0, 2]' : 0.19684}
{'[2, 0, 6, 5, 3, 0, 2, 28, 0, 24, 0, 0, 2]' : 0.196732}
{'[2, 0, 6, 5, 3, 0, 2, 28, 0, 24, 0, 0, 2]' : 0.19634}
{'[2, 0, 6, 5, 3, 0, 2, 28, 0, 24, 0, 0, 2]' : 0.196684}
{'[2, 0, 6, 5, 3, 0, 2, 28, 0, 24, 0, 0, 2]' : 0.197184}
{'[2, 0, 6, 5, 3, 0, 2, 28, 0, 24, 0, 0, 2]' : 0.196731}
{'[2, 0, 6, 5, 3, 0, 2, 28, 0, 24, 0, 0, 2]' : 0.196788}
{'[2, 0, 6, 5, 3, 0, 2, 28, 0, 24, 0, 0, 2]' : 0.196979}
{'[2, 0, 6, 5, 3, 0, 2, 28, 0, 24, 0, 0, 2]' : 0.197116}
{'[2, 0, 6, 5, 3, 0, 2, 28, 0, 24, 0, 0, 2]' : 0.197141}
{'[2, 0, 6, 5, 3, 0, 2, 28, 0, 24, 0, 0, 2]' : 0.196538}
{'[2, 0, 6, 5, 3, 0, 2, 28, 0, 24, 0, 0, 2]' : 0.197074}
{'[2, 0, 6, 5, 3, 0, 2, 28, 0, 24, 0, 0, 2]' : 0.196661}
{'[2, 0, 6, 5, 3, 0, 2, 28, 0, 24, 0, 0, 2]' : 0.196717}
{'[2, 0, 6, 5, 3, 0, 2, 28, 0, 24, 0, 0, 2]' : 0.196867}

out:
 ["{'[2, 0, 6, 5, 3, 0, 2, 28, 0, 24, 0, 0, 2]' : 0.215956}", "{'[2, 0, 6, 5, 3, 0, 2, 28, 0, 24, 0, 0, 2]' : 0.213878}", "{'[2, 0, 6, 5, 3, 0, 2, 28, 0, 24, 0, 0, 2]' : 0.196603}", "{'[2, 0, 6, 5, 3, 0, 2, 28, 0, 24, 0, 0, 2]' : 0.197023}", "{'[2, 0, 6, 5, 3, 0, 2, 28, 0, 24, 0, 0, 2]' : 0.196665}", "{'[2, 0, 6, 5, 3, 0, 2, 28, 0, 24, 0, 0, 2]' : 0.196509}", "{'[2, 0, 6, 5, 3, 0, 2, 28, 0, 24, 0, 0, 2]' : 0.194621}", "{'[2, 0, 6, 5, 3, 0, 2, 28, 0, 24, 0, 0, 2]' : 0.192359}", "{'[2, 0, 6, 5, 3, 0, 2, 28, 0, 24, 0, 0, 2]' : 0.192329}", "{'[2, 0, 6, 5, 3, 0, 2, 28, 0, 24, 0, 0, 2]' : 0.196385}", "{'[2, 0, 6, 5, 3, 0, 2, 28, 0, 24, 0, 0, 2]' : 0.196727}", "{'[2, 0, 6, 5, 3, 0, 2, 28, 0, 24, 0, 0, 2]' : 0.197071}", "{'[2, 0, 6, 5, 3, 0, 2, 28, 0, 24, 0, 0, 2]' : 0.196779}", "{'[2, 0, 6, 5, 3, 0, 2, 28, 0, 24, 0, 0, 2]' : 0.196947}", "{'[2, 0, 6, 5, 3, 0, 2, 28, 0, 24, 0, 0, 2]' : 0.197177}", "{'[2, 0, 6, 5, 3, 0, 2, 28, 0, 24, 0, 0, 2]' : 0.19684}", "{'[2, 0, 6, 5, 3, 0, 2, 28, 0, 24, 0, 0, 2]' : 0.196732}", "{'[2, 0, 6, 5, 3, 0, 2, 28, 0, 24, 0, 0, 2]' : 0.19634}", "{'[2, 0, 6, 5, 3, 0, 2, 28, 0, 24, 0, 0, 2]' : 0.196684}", "{'[2, 0, 6, 5, 3, 0, 2, 28, 0, 24, 0, 0, 2]' : 0.197184}", "{'[2, 0, 6, 5, 3, 0, 2, 28, 0, 24, 0, 0, 2]' : 0.196731}", "{'[2, 0, 6, 5, 3, 0, 2, 28, 0, 24, 0, 0, 2]' : 0.196788}", "{'[2, 0, 6, 5, 3, 0, 2, 28, 0, 24, 0, 0, 2]' : 0.196979}", "{'[2, 0, 6, 5, 3, 0, 2, 28, 0, 24, 0, 0, 2]' : 0.197116}", "{'[2, 0, 6, 5, 3, 0, 2, 28, 0, 24, 0, 0, 2]' : 0.197141}", "{'[2, 0, 6, 5, 3, 0, 2, 28, 0, 24, 0, 0, 2]' : 0.196538}", "{'[2, 0, 6, 5, 3, 0, 2, 28, 0, 24, 0, 0, 2]' : 0.197074}", "{'[2, 0, 6, 5, 3, 0, 2, 28, 0, 24, 0, 0, 2]' : 0.196661}", "{'[2, 0, 6, 5, 3, 0, 2, 28, 0, 24, 0, 0, 2]' : 0.196717}", "{'[2, 0, 6, 5, 3, 0, 2, 28, 0, 24, 0, 0, 2]' : 0.196867}"]
returning from 'run': {'[2, 0, 6, 5, 3, 0, 2, 28, 0, 24, 0, 0, 2]': ([0.215956, 0.213878, 0.196603, 0.197023, 0.196665, 0.196509, 0.194621, 0.192359, 0.192329, 0.196385, 0.196727, 0.197071, 0.196779, 0.196947, 0.197177, 0.19684, 0.196732, 0.19634, 0.196684, 0.197184, 0.196731, 0.196788, 0.196979, 0.197116, 0.197141, 0.196538, 0.197074, 0.196661, 0.196717, 0.196867], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 6, 5, 3, 0, 2, 28, 0, 24, 0, 0, 2]': ([0.215956, 0.213878, 0.196603, 0.197023, 0.196665, 0.196509, 0.194621, 0.192359, 0.192329, 0.196385, 0.196727, 0.197071, 0.196779, 0.196947, 0.197177, 0.19684, 0.196732, 0.19634, 0.196684, 0.197184, 0.196731, 0.196788, 0.196979, 0.197116, 0.197141, 0.196538, 0.197074, 0.196661, 0.196717, 0.196867], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	5
        Additions: 		6624
        Multiplications: 	1984
        Divisions: 		0
        Logical: 		0
        Reads: 			10132
        Writes: 		1065
        Comparisons:		22
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest17.exe __orio_perftest17.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest17.exe  
Program Test Output: 
{'[4, 6, 1, 6, 0, 0, 2, 22, 0, 28, 1, 0, 0]' : 0.155332}
{'[4, 6, 1, 6, 0, 0, 2, 22, 0, 28, 1, 0, 0]' : 0.15423}
{'[4, 6, 1, 6, 0, 0, 2, 22, 0, 28, 1, 0, 0]' : 0.131872}
{'[4, 6, 1, 6, 0, 0, 2, 22, 0, 28, 1, 0, 0]' : 0.130197}
{'[4, 6, 1, 6, 0, 0, 2, 22, 0, 28, 1, 0, 0]' : 0.130042}
{'[4, 6, 1, 6, 0, 0, 2, 22, 0, 28, 1, 0, 0]' : 0.130281}
{'[4, 6, 1, 6, 0, 0, 2, 22, 0, 28, 1, 0, 0]' : 0.129988}
{'[4, 6, 1, 6, 0, 0, 2, 22, 0, 28, 1, 0, 0]' : 0.130326}
{'[4, 6, 1, 6, 0, 0, 2, 22, 0, 28, 1, 0, 0]' : 0.130122}
{'[4, 6, 1, 6, 0, 0, 2, 22, 0, 28, 1, 0, 0]' : 0.130261}
{'[4, 6, 1, 6, 0, 0, 2, 22, 0, 28, 1, 0, 0]' : 0.129894}
{'[4, 6, 1, 6, 0, 0, 2, 22, 0, 28, 1, 0, 0]' : 0.130266}
{'[4, 6, 1, 6, 0, 0, 2, 22, 0, 28, 1, 0, 0]' : 0.130149}
{'[4, 6, 1, 6, 0, 0, 2, 22, 0, 28, 1, 0, 0]' : 0.130299}
{'[4, 6, 1, 6, 0, 0, 2, 22, 0, 28, 1, 0, 0]' : 0.130011}
{'[4, 6, 1, 6, 0, 0, 2, 22, 0, 28, 1, 0, 0]' : 0.130558}
{'[4, 6, 1, 6, 0, 0, 2, 22, 0, 28, 1, 0, 0]' : 0.13011}
{'[4, 6, 1, 6, 0, 0, 2, 22, 0, 28, 1, 0, 0]' : 0.130728}
{'[4, 6, 1, 6, 0, 0, 2, 22, 0, 28, 1, 0, 0]' : 0.130236}
{'[4, 6, 1, 6, 0, 0, 2, 22, 0, 28, 1, 0, 0]' : 0.130303}
{'[4, 6, 1, 6, 0, 0, 2, 22, 0, 28, 1, 0, 0]' : 0.130242}
{'[4, 6, 1, 6, 0, 0, 2, 22, 0, 28, 1, 0, 0]' : 0.130238}
{'[4, 6, 1, 6, 0, 0, 2, 22, 0, 28, 1, 0, 0]' : 0.129965}
{'[4, 6, 1, 6, 0, 0, 2, 22, 0, 28, 1, 0, 0]' : 0.130335}
{'[4, 6, 1, 6, 0, 0, 2, 22, 0, 28, 1, 0, 0]' : 0.130161}
{'[4, 6, 1, 6, 0, 0, 2, 22, 0, 28, 1, 0, 0]' : 0.130225}
{'[4, 6, 1, 6, 0, 0, 2, 22, 0, 28, 1, 0, 0]' : 0.129951}
{'[4, 6, 1, 6, 0, 0, 2, 22, 0, 28, 1, 0, 0]' : 0.130294}
{'[4, 6, 1, 6, 0, 0, 2, 22, 0, 28, 1, 0, 0]' : 0.130177}
{'[4, 6, 1, 6, 0, 0, 2, 22, 0, 28, 1, 0, 0]' : 0.130269}

out:
 ["{'[4, 6, 1, 6, 0, 0, 2, 22, 0, 28, 1, 0, 0]' : 0.155332}", "{'[4, 6, 1, 6, 0, 0, 2, 22, 0, 28, 1, 0, 0]' : 0.15423}", "{'[4, 6, 1, 6, 0, 0, 2, 22, 0, 28, 1, 0, 0]' : 0.131872}", "{'[4, 6, 1, 6, 0, 0, 2, 22, 0, 28, 1, 0, 0]' : 0.130197}", "{'[4, 6, 1, 6, 0, 0, 2, 22, 0, 28, 1, 0, 0]' : 0.130042}", "{'[4, 6, 1, 6, 0, 0, 2, 22, 0, 28, 1, 0, 0]' : 0.130281}", "{'[4, 6, 1, 6, 0, 0, 2, 22, 0, 28, 1, 0, 0]' : 0.129988}", "{'[4, 6, 1, 6, 0, 0, 2, 22, 0, 28, 1, 0, 0]' : 0.130326}", "{'[4, 6, 1, 6, 0, 0, 2, 22, 0, 28, 1, 0, 0]' : 0.130122}", "{'[4, 6, 1, 6, 0, 0, 2, 22, 0, 28, 1, 0, 0]' : 0.130261}", "{'[4, 6, 1, 6, 0, 0, 2, 22, 0, 28, 1, 0, 0]' : 0.129894}", "{'[4, 6, 1, 6, 0, 0, 2, 22, 0, 28, 1, 0, 0]' : 0.130266}", "{'[4, 6, 1, 6, 0, 0, 2, 22, 0, 28, 1, 0, 0]' : 0.130149}", "{'[4, 6, 1, 6, 0, 0, 2, 22, 0, 28, 1, 0, 0]' : 0.130299}", "{'[4, 6, 1, 6, 0, 0, 2, 22, 0, 28, 1, 0, 0]' : 0.130011}", "{'[4, 6, 1, 6, 0, 0, 2, 22, 0, 28, 1, 0, 0]' : 0.130558}", "{'[4, 6, 1, 6, 0, 0, 2, 22, 0, 28, 1, 0, 0]' : 0.13011}", "{'[4, 6, 1, 6, 0, 0, 2, 22, 0, 28, 1, 0, 0]' : 0.130728}", "{'[4, 6, 1, 6, 0, 0, 2, 22, 0, 28, 1, 0, 0]' : 0.130236}", "{'[4, 6, 1, 6, 0, 0, 2, 22, 0, 28, 1, 0, 0]' : 0.130303}", "{'[4, 6, 1, 6, 0, 0, 2, 22, 0, 28, 1, 0, 0]' : 0.130242}", "{'[4, 6, 1, 6, 0, 0, 2, 22, 0, 28, 1, 0, 0]' : 0.130238}", "{'[4, 6, 1, 6, 0, 0, 2, 22, 0, 28, 1, 0, 0]' : 0.129965}", "{'[4, 6, 1, 6, 0, 0, 2, 22, 0, 28, 1, 0, 0]' : 0.130335}", "{'[4, 6, 1, 6, 0, 0, 2, 22, 0, 28, 1, 0, 0]' : 0.130161}", "{'[4, 6, 1, 6, 0, 0, 2, 22, 0, 28, 1, 0, 0]' : 0.130225}", "{'[4, 6, 1, 6, 0, 0, 2, 22, 0, 28, 1, 0, 0]' : 0.129951}", "{'[4, 6, 1, 6, 0, 0, 2, 22, 0, 28, 1, 0, 0]' : 0.130294}", "{'[4, 6, 1, 6, 0, 0, 2, 22, 0, 28, 1, 0, 0]' : 0.130177}", "{'[4, 6, 1, 6, 0, 0, 2, 22, 0, 28, 1, 0, 0]' : 0.130269}"]
returning from 'run': {'[4, 6, 1, 6, 0, 0, 2, 22, 0, 28, 1, 0, 0]': ([0.155332, 0.15423, 0.131872, 0.130197, 0.130042, 0.130281, 0.129988, 0.130326, 0.130122, 0.130261, 0.129894, 0.130266, 0.130149, 0.130299, 0.130011, 0.130558, 0.13011, 0.130728, 0.130236, 0.130303, 0.130242, 0.130238, 0.129965, 0.130335, 0.130161, 0.130225, 0.129951, 0.130294, 0.130177, 0.130269], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 6, 1, 6, 0, 0, 2, 22, 0, 28, 1, 0, 0]': ([0.155332, 0.15423, 0.131872, 0.130197, 0.130042, 0.130281, 0.129988, 0.130326, 0.130122, 0.130261, 0.129894, 0.130266, 0.130149, 0.130299, 0.130011, 0.130558, 0.13011, 0.130728, 0.130236, 0.130303, 0.130242, 0.130238, 0.129965, 0.130335, 0.130161, 0.130225, 0.129951, 0.130294, 0.130177, 0.130269], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	5
        Additions: 		12651
        Multiplications: 	3776
        Divisions: 		0
        Logical: 		0
        Reads: 			19110
        Writes: 		1967
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest18.exe __orio_perftest18.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest18.exe  
Program Test Output: 
{'[0, 0, 2, 1, 2, 6, 1, 25, 29, 0, 2, 0, 0]' : 0.279595}
{'[0, 0, 2, 1, 2, 6, 1, 25, 29, 0, 2, 0, 0]' : 0.279867}
{'[0, 0, 2, 1, 2, 6, 1, 25, 29, 0, 2, 0, 0]' : 0.28009}
{'[0, 0, 2, 1, 2, 6, 1, 25, 29, 0, 2, 0, 0]' : 0.280275}
{'[0, 0, 2, 1, 2, 6, 1, 25, 29, 0, 2, 0, 0]' : 0.279915}
{'[0, 0, 2, 1, 2, 6, 1, 25, 29, 0, 2, 0, 0]' : 0.282926}
{'[0, 0, 2, 1, 2, 6, 1, 25, 29, 0, 2, 0, 0]' : 0.28515}
{'[0, 0, 2, 1, 2, 6, 1, 25, 29, 0, 2, 0, 0]' : 0.282514}
{'[0, 0, 2, 1, 2, 6, 1, 25, 29, 0, 2, 0, 0]' : 0.281447}
{'[0, 0, 2, 1, 2, 6, 1, 25, 29, 0, 2, 0, 0]' : 0.279764}
{'[0, 0, 2, 1, 2, 6, 1, 25, 29, 0, 2, 0, 0]' : 0.280064}
{'[0, 0, 2, 1, 2, 6, 1, 25, 29, 0, 2, 0, 0]' : 0.283023}
{'[0, 0, 2, 1, 2, 6, 1, 25, 29, 0, 2, 0, 0]' : 0.281881}
{'[0, 0, 2, 1, 2, 6, 1, 25, 29, 0, 2, 0, 0]' : 0.280174}
{'[0, 0, 2, 1, 2, 6, 1, 25, 29, 0, 2, 0, 0]' : 0.280129}
{'[0, 0, 2, 1, 2, 6, 1, 25, 29, 0, 2, 0, 0]' : 0.28023}
{'[0, 0, 2, 1, 2, 6, 1, 25, 29, 0, 2, 0, 0]' : 0.280043}
{'[0, 0, 2, 1, 2, 6, 1, 25, 29, 0, 2, 0, 0]' : 0.280146}
{'[0, 0, 2, 1, 2, 6, 1, 25, 29, 0, 2, 0, 0]' : 0.279942}
{'[0, 0, 2, 1, 2, 6, 1, 25, 29, 0, 2, 0, 0]' : 0.280059}
{'[0, 0, 2, 1, 2, 6, 1, 25, 29, 0, 2, 0, 0]' : 0.280317}
{'[0, 0, 2, 1, 2, 6, 1, 25, 29, 0, 2, 0, 0]' : 0.280217}
{'[0, 0, 2, 1, 2, 6, 1, 25, 29, 0, 2, 0, 0]' : 0.280054}
{'[0, 0, 2, 1, 2, 6, 1, 25, 29, 0, 2, 0, 0]' : 0.280064}
{'[0, 0, 2, 1, 2, 6, 1, 25, 29, 0, 2, 0, 0]' : 0.279751}
{'[0, 0, 2, 1, 2, 6, 1, 25, 29, 0, 2, 0, 0]' : 0.279936}
{'[0, 0, 2, 1, 2, 6, 1, 25, 29, 0, 2, 0, 0]' : 0.279966}
{'[0, 0, 2, 1, 2, 6, 1, 25, 29, 0, 2, 0, 0]' : 0.279727}
{'[0, 0, 2, 1, 2, 6, 1, 25, 29, 0, 2, 0, 0]' : 0.280445}
{'[0, 0, 2, 1, 2, 6, 1, 25, 29, 0, 2, 0, 0]' : 0.279746}

out:
 ["{'[0, 0, 2, 1, 2, 6, 1, 25, 29, 0, 2, 0, 0]' : 0.279595}", "{'[0, 0, 2, 1, 2, 6, 1, 25, 29, 0, 2, 0, 0]' : 0.279867}", "{'[0, 0, 2, 1, 2, 6, 1, 25, 29, 0, 2, 0, 0]' : 0.28009}", "{'[0, 0, 2, 1, 2, 6, 1, 25, 29, 0, 2, 0, 0]' : 0.280275}", "{'[0, 0, 2, 1, 2, 6, 1, 25, 29, 0, 2, 0, 0]' : 0.279915}", "{'[0, 0, 2, 1, 2, 6, 1, 25, 29, 0, 2, 0, 0]' : 0.282926}", "{'[0, 0, 2, 1, 2, 6, 1, 25, 29, 0, 2, 0, 0]' : 0.28515}", "{'[0, 0, 2, 1, 2, 6, 1, 25, 29, 0, 2, 0, 0]' : 0.282514}", "{'[0, 0, 2, 1, 2, 6, 1, 25, 29, 0, 2, 0, 0]' : 0.281447}", "{'[0, 0, 2, 1, 2, 6, 1, 25, 29, 0, 2, 0, 0]' : 0.279764}", "{'[0, 0, 2, 1, 2, 6, 1, 25, 29, 0, 2, 0, 0]' : 0.280064}", "{'[0, 0, 2, 1, 2, 6, 1, 25, 29, 0, 2, 0, 0]' : 0.283023}", "{'[0, 0, 2, 1, 2, 6, 1, 25, 29, 0, 2, 0, 0]' : 0.281881}", "{'[0, 0, 2, 1, 2, 6, 1, 25, 29, 0, 2, 0, 0]' : 0.280174}", "{'[0, 0, 2, 1, 2, 6, 1, 25, 29, 0, 2, 0, 0]' : 0.280129}", "{'[0, 0, 2, 1, 2, 6, 1, 25, 29, 0, 2, 0, 0]' : 0.28023}", "{'[0, 0, 2, 1, 2, 6, 1, 25, 29, 0, 2, 0, 0]' : 0.280043}", "{'[0, 0, 2, 1, 2, 6, 1, 25, 29, 0, 2, 0, 0]' : 0.280146}", "{'[0, 0, 2, 1, 2, 6, 1, 25, 29, 0, 2, 0, 0]' : 0.279942}", "{'[0, 0, 2, 1, 2, 6, 1, 25, 29, 0, 2, 0, 0]' : 0.280059}", "{'[0, 0, 2, 1, 2, 6, 1, 25, 29, 0, 2, 0, 0]' : 0.280317}", "{'[0, 0, 2, 1, 2, 6, 1, 25, 29, 0, 2, 0, 0]' : 0.280217}", "{'[0, 0, 2, 1, 2, 6, 1, 25, 29, 0, 2, 0, 0]' : 0.280054}", "{'[0, 0, 2, 1, 2, 6, 1, 25, 29, 0, 2, 0, 0]' : 0.280064}", "{'[0, 0, 2, 1, 2, 6, 1, 25, 29, 0, 2, 0, 0]' : 0.279751}", "{'[0, 0, 2, 1, 2, 6, 1, 25, 29, 0, 2, 0, 0]' : 0.279936}", "{'[0, 0, 2, 1, 2, 6, 1, 25, 29, 0, 2, 0, 0]' : 0.279966}", "{'[0, 0, 2, 1, 2, 6, 1, 25, 29, 0, 2, 0, 0]' : 0.279727}", "{'[0, 0, 2, 1, 2, 6, 1, 25, 29, 0, 2, 0, 0]' : 0.280445}", "{'[0, 0, 2, 1, 2, 6, 1, 25, 29, 0, 2, 0, 0]' : 0.279746}"]
returning from 'run': {'[0, 0, 2, 1, 2, 6, 1, 25, 29, 0, 2, 0, 0]': ([0.279595, 0.279867, 0.28009, 0.280275, 0.279915, 0.282926, 0.28515, 0.282514, 0.281447, 0.279764, 0.280064, 0.283023, 0.281881, 0.280174, 0.280129, 0.28023, 0.280043, 0.280146, 0.279942, 0.280059, 0.280317, 0.280217, 0.280054, 0.280064, 0.279751, 0.279936, 0.279966, 0.279727, 0.280445, 0.279746], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 2, 1, 2, 6, 1, 25, 29, 0, 2, 0, 0]': ([0.279595, 0.279867, 0.28009, 0.280275, 0.279915, 0.282926, 0.28515, 0.282514, 0.281447, 0.279764, 0.280064, 0.283023, 0.281881, 0.280174, 0.280129, 0.28023, 0.280043, 0.280146, 0.279942, 0.280059, 0.280317, 0.280217, 0.280054, 0.280064, 0.279751, 0.279936, 0.279966, 0.279727, 0.280445, 0.279746], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Complete design, with measurements:
      T1_I T1_J T1_K T2_I T2_J T2_K U1_I U_I U_J U_K RT_I RT_J RT_K cost_mean
5        1    5    2    5    3    0   29  29  29   0    0    2    0 0.2224704
956      6    2    0    5    6    6    0   2  27   0    0    1    0 0.1296676
1351     6    0    5    5    0    0    5   0  26   0    0    0    0 0.1807029
2472     0    4    6    6    3    4   28   0  27  29    1    1    0 0.1129572
6083     6    0    6    0    2    0   25   2   0   0    0    2    0 0.1323271
15412    6    1    0    6    6    0   28   2   0  28    2    0    0 0.1949156
15817    0    6    6    6    0    4    7   0   3   0    0    0    0 0.2339990
19667    2    1    1    6    0    5    6   3   0   2    0    0    2 0.1938638
20727    4    1    5    2    6    6    0  29   0  29    1    1    0 0.1174040
20821    5    6    6    0    6    0   11   0   9   8    1    1    0 0.1154053
22432    6    6    2    0    0    5   28   0  29  18    0    0    2 0.2080532
26142    6    4    4    6    6    6   29  22   0   0    0    0    1 0.1461234
29517    6    6    6    0    6    6   18  29  28   0    2    0    0 0.2685307
29684    1    0    0    0    4    6   27   6   0  26    0    0    0 0.1637393
29772    0    5    2    0    6    0    5   0  27  23    0    0    2 0.1944591
31631    2    0    6    5    3    0    2  28   0  24    0    0    2 0.1976474
32034    4    6    1    6    0    0    2  22   0  28    1    0    0 0.1319021
33161    0    0    2    1    2    6    1  25  29   0    2    0    0 0.2805819

Heteroscedasticity Test p-value: 0.913909989612
Regression Step:            Df   Sum Sq  Mean Sq F value Pr(>F)
T1_I         1 0.003456 0.003456   1.515  0.286
T1_J         1 0.000162 0.000162   0.071  0.803
T1_K         1 0.000277 0.000277   0.121  0.745
T2_I         1 0.001159 0.001159   0.508  0.515
T2_J         1 0.002095 0.002095   0.918  0.392
T2_K         1 0.000786 0.000786   0.344  0.589
U1_I         1 0.000001 0.000001   0.000  0.984
U_I          1 0.004796 0.004796   2.102  0.221
U_J          1 0.004166 0.004166   1.826  0.248
U_K          1 0.004508 0.004508   1.976  0.233
RT_I         1 0.004003 0.004003   1.755  0.256
RT_J         1 0.010353 0.010353   4.538  0.100
RT_K         1 0.000614 0.000614   0.269  0.631
Residuals    4 0.009125 0.002281               

Predicting Best
Generating valid search space of size 36000 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Tested coordinates: 150000
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Tested coordinates: 190000
Tested coordinates: 200000
Tested coordinates: 210000
Tested coordinates: 220000
Tested coordinates: 230000
Tested coordinates: 240000
Tested coordinates: 250000
Tested coordinates: 260000
Tested coordinates: 270000
Tested coordinates: 280000
Tested coordinates: 290000
Valid coordinates: 7200
Tested coordinates: 300000
Tested coordinates: 310000
Tested coordinates: 320000
Tested coordinates: 330000
Tested coordinates: 340000
Tested coordinates: 350000
Tested coordinates: 360000
Tested coordinates: 370000
Tested coordinates: 380000
Tested coordinates: 390000
Tested coordinates: 400000
Tested coordinates: 410000
Tested coordinates: 420000
Tested coordinates: 430000
Tested coordinates: 440000
Tested coordinates: 450000
Tested coordinates: 460000
Tested coordinates: 470000
Tested coordinates: 480000
Tested coordinates: 490000
Tested coordinates: 500000
Tested coordinates: 510000
Tested coordinates: 520000
Tested coordinates: 530000
Tested coordinates: 540000
Tested coordinates: 550000
Tested coordinates: 560000
Tested coordinates: 570000
Tested coordinates: 580000
Tested coordinates: 590000
Valid coordinates: 14400
Tested coordinates: 600000
Tested coordinates: 610000
Tested coordinates: 620000
Tested coordinates: 630000
Tested coordinates: 640000
Tested coordinates: 650000
Tested coordinates: 660000
Tested coordinates: 670000
Tested coordinates: 680000
Tested coordinates: 690000
Tested coordinates: 700000
Tested coordinates: 710000
Tested coordinates: 720000
Tested coordinates: 730000
Tested coordinates: 740000
Tested coordinates: 750000
Tested coordinates: 760000
Tested coordinates: 770000
Tested coordinates: 780000
Tested coordinates: 790000
Tested coordinates: 800000
Tested coordinates: 810000
Tested coordinates: 820000
Tested coordinates: 830000
Tested coordinates: 840000
Tested coordinates: 850000
Tested coordinates: 860000
Tested coordinates: 870000
Tested coordinates: 880000
Tested coordinates: 890000
Valid coordinates: 21600
Tested coordinates: 900000
Tested coordinates: 910000
Tested coordinates: 920000
Tested coordinates: 930000
Tested coordinates: 940000
Tested coordinates: 950000
Tested coordinates: 960000
Tested coordinates: 970000
Tested coordinates: 980000
Tested coordinates: 990000
Tested coordinates: 1000000
Tested coordinates: 1010000
Tested coordinates: 1020000
Tested coordinates: 1030000
Tested coordinates: 1040000
Tested coordinates: 1050000
Tested coordinates: 1060000
Tested coordinates: 1070000
Tested coordinates: 1080000
Tested coordinates: 1090000
Tested coordinates: 1100000
Tested coordinates: 1110000
Tested coordinates: 1120000
Tested coordinates: 1130000
Tested coordinates: 1140000
Tested coordinates: 1150000
Tested coordinates: 1160000
Tested coordinates: 1170000
Tested coordinates: 1180000
Tested coordinates: 1190000
Valid coordinates: 28800
Tested coordinates: 1200000
Tested coordinates: 1210000
Tested coordinates: 1220000
Tested coordinates: 1230000
Tested coordinates: 1240000
Tested coordinates: 1250000
Tested coordinates: 1260000
Tested coordinates: 1270000
Tested coordinates: 1280000
Tested coordinates: 1290000
Tested coordinates: 1300000
Tested coordinates: 1310000
Tested coordinates: 1320000
Tested coordinates: 1330000
Tested coordinates: 1340000
Tested coordinates: 1350000
Tested coordinates: 1360000
Tested coordinates: 1370000
Tested coordinates: 1380000
Tested coordinates: 1390000
Tested coordinates: 1400000
Tested coordinates: 1410000
Tested coordinates: 1420000
Tested coordinates: 1430000
Tested coordinates: 1440000
Tested coordinates: 1450000
Tested coordinates: 1460000
Tested coordinates: 1470000
Tested coordinates: 1480000
Valid coordinates: 36000
Valid/Tested configurations: 36000/1489515
Generated Search Space:
NULL
Getting Best from Design
Response: ['cost_mean']
Design Names:  [1] "T1_I"      "T1_J"      "T1_K"      "T2_I"      "T2_J"      "T2_K"     
 [7] "U1_I"      "U_I"       "U_J"       "U_K"       "RT_I"      "RT_J"     
[13] "RT_K"      "cost_mean"

Design Response:       cost_mean
5     0.2224704
956   0.1296676
1351  0.1807029
2472  0.1129572
6083  0.1323271
15412 0.1949156
15817 0.2339990
19667 0.1938638
20727 0.1174040
20821 0.1154053
22432 0.2080532
26142 0.1461234
29517 0.2685307
29684 0.1637393
29772 0.1944591
31631 0.1976474
32034 0.1319021
33161 0.2805819

Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Getting fixed variables
No variables within acceptable threshold
Fixed Variables: {}
Unique Variables: []
Pruning Model
No variables within acceptable threshold
Best Predicted:       T1_I T1_J T1_K T2_I T2_J T2_K U1_I U_I U_J U_K RT_I RT_J RT_K
23431    6    0    6    4    6    5    6   8   0  28    0    2    0

Best From Design: [0, 4, 6, 6, 3, 4, 28, 0, 27, 29, 1, 1, 0]
Pruned Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Pruned Inverse Factors: []
Pruned Interactions: []
Fixed Factors: {}
Length of requested configs: 1
Result was on Database, Returning Now
Starting Point (-O3):
0.16059526666666663
Predicted Best Point:
[6, 0, 6, 4, 6, 5, 6, 8, 0, 28, 0, 2, 0]
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	5
        Additions: 		4091
        Multiplications: 	1260
        Divisions: 		0
        Logical: 		0
        Reads: 			6469
        Writes: 		686
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest19.exe __orio_perftest19.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest19.exe  
Program Test Output: 
{'[6, 0, 6, 4, 6, 5, 6, 8, 0, 28, 0, 2, 0]' : 0.1611}
{'[6, 0, 6, 4, 6, 5, 6, 8, 0, 28, 0, 2, 0]' : 0.161165}
{'[6, 0, 6, 4, 6, 5, 6, 8, 0, 28, 0, 2, 0]' : 0.144659}
{'[6, 0, 6, 4, 6, 5, 6, 8, 0, 28, 0, 2, 0]' : 0.136049}
{'[6, 0, 6, 4, 6, 5, 6, 8, 0, 28, 0, 2, 0]' : 0.135981}
{'[6, 0, 6, 4, 6, 5, 6, 8, 0, 28, 0, 2, 0]' : 0.136052}
{'[6, 0, 6, 4, 6, 5, 6, 8, 0, 28, 0, 2, 0]' : 0.136052}
{'[6, 0, 6, 4, 6, 5, 6, 8, 0, 28, 0, 2, 0]' : 0.136028}
{'[6, 0, 6, 4, 6, 5, 6, 8, 0, 28, 0, 2, 0]' : 0.136036}
{'[6, 0, 6, 4, 6, 5, 6, 8, 0, 28, 0, 2, 0]' : 0.136065}
{'[6, 0, 6, 4, 6, 5, 6, 8, 0, 28, 0, 2, 0]' : 0.136099}
{'[6, 0, 6, 4, 6, 5, 6, 8, 0, 28, 0, 2, 0]' : 0.136438}
{'[6, 0, 6, 4, 6, 5, 6, 8, 0, 28, 0, 2, 0]' : 0.136082}
{'[6, 0, 6, 4, 6, 5, 6, 8, 0, 28, 0, 2, 0]' : 0.136049}
{'[6, 0, 6, 4, 6, 5, 6, 8, 0, 28, 0, 2, 0]' : 0.136611}
{'[6, 0, 6, 4, 6, 5, 6, 8, 0, 28, 0, 2, 0]' : 0.136}
{'[6, 0, 6, 4, 6, 5, 6, 8, 0, 28, 0, 2, 0]' : 0.136016}
{'[6, 0, 6, 4, 6, 5, 6, 8, 0, 28, 0, 2, 0]' : 0.136078}
{'[6, 0, 6, 4, 6, 5, 6, 8, 0, 28, 0, 2, 0]' : 0.136108}
{'[6, 0, 6, 4, 6, 5, 6, 8, 0, 28, 0, 2, 0]' : 0.13599}
{'[6, 0, 6, 4, 6, 5, 6, 8, 0, 28, 0, 2, 0]' : 0.136015}
{'[6, 0, 6, 4, 6, 5, 6, 8, 0, 28, 0, 2, 0]' : 0.136251}
{'[6, 0, 6, 4, 6, 5, 6, 8, 0, 28, 0, 2, 0]' : 0.136036}
{'[6, 0, 6, 4, 6, 5, 6, 8, 0, 28, 0, 2, 0]' : 0.136215}
{'[6, 0, 6, 4, 6, 5, 6, 8, 0, 28, 0, 2, 0]' : 0.136009}
{'[6, 0, 6, 4, 6, 5, 6, 8, 0, 28, 0, 2, 0]' : 0.136351}
{'[6, 0, 6, 4, 6, 5, 6, 8, 0, 28, 0, 2, 0]' : 0.136065}
{'[6, 0, 6, 4, 6, 5, 6, 8, 0, 28, 0, 2, 0]' : 0.136025}
{'[6, 0, 6, 4, 6, 5, 6, 8, 0, 28, 0, 2, 0]' : 0.13603}
{'[6, 0, 6, 4, 6, 5, 6, 8, 0, 28, 0, 2, 0]' : 0.13605}

out:
 ["{'[6, 0, 6, 4, 6, 5, 6, 8, 0, 28, 0, 2, 0]' : 0.1611}", "{'[6, 0, 6, 4, 6, 5, 6, 8, 0, 28, 0, 2, 0]' : 0.161165}", "{'[6, 0, 6, 4, 6, 5, 6, 8, 0, 28, 0, 2, 0]' : 0.144659}", "{'[6, 0, 6, 4, 6, 5, 6, 8, 0, 28, 0, 2, 0]' : 0.136049}", "{'[6, 0, 6, 4, 6, 5, 6, 8, 0, 28, 0, 2, 0]' : 0.135981}", "{'[6, 0, 6, 4, 6, 5, 6, 8, 0, 28, 0, 2, 0]' : 0.136052}", "{'[6, 0, 6, 4, 6, 5, 6, 8, 0, 28, 0, 2, 0]' : 0.136052}", "{'[6, 0, 6, 4, 6, 5, 6, 8, 0, 28, 0, 2, 0]' : 0.136028}", "{'[6, 0, 6, 4, 6, 5, 6, 8, 0, 28, 0, 2, 0]' : 0.136036}", "{'[6, 0, 6, 4, 6, 5, 6, 8, 0, 28, 0, 2, 0]' : 0.136065}", "{'[6, 0, 6, 4, 6, 5, 6, 8, 0, 28, 0, 2, 0]' : 0.136099}", "{'[6, 0, 6, 4, 6, 5, 6, 8, 0, 28, 0, 2, 0]' : 0.136438}", "{'[6, 0, 6, 4, 6, 5, 6, 8, 0, 28, 0, 2, 0]' : 0.136082}", "{'[6, 0, 6, 4, 6, 5, 6, 8, 0, 28, 0, 2, 0]' : 0.136049}", "{'[6, 0, 6, 4, 6, 5, 6, 8, 0, 28, 0, 2, 0]' : 0.136611}", "{'[6, 0, 6, 4, 6, 5, 6, 8, 0, 28, 0, 2, 0]' : 0.136}", "{'[6, 0, 6, 4, 6, 5, 6, 8, 0, 28, 0, 2, 0]' : 0.136016}", "{'[6, 0, 6, 4, 6, 5, 6, 8, 0, 28, 0, 2, 0]' : 0.136078}", "{'[6, 0, 6, 4, 6, 5, 6, 8, 0, 28, 0, 2, 0]' : 0.136108}", "{'[6, 0, 6, 4, 6, 5, 6, 8, 0, 28, 0, 2, 0]' : 0.13599}", "{'[6, 0, 6, 4, 6, 5, 6, 8, 0, 28, 0, 2, 0]' : 0.136015}", "{'[6, 0, 6, 4, 6, 5, 6, 8, 0, 28, 0, 2, 0]' : 0.136251}", "{'[6, 0, 6, 4, 6, 5, 6, 8, 0, 28, 0, 2, 0]' : 0.136036}", "{'[6, 0, 6, 4, 6, 5, 6, 8, 0, 28, 0, 2, 0]' : 0.136215}", "{'[6, 0, 6, 4, 6, 5, 6, 8, 0, 28, 0, 2, 0]' : 0.136009}", "{'[6, 0, 6, 4, 6, 5, 6, 8, 0, 28, 0, 2, 0]' : 0.136351}", "{'[6, 0, 6, 4, 6, 5, 6, 8, 0, 28, 0, 2, 0]' : 0.136065}", "{'[6, 0, 6, 4, 6, 5, 6, 8, 0, 28, 0, 2, 0]' : 0.136025}", "{'[6, 0, 6, 4, 6, 5, 6, 8, 0, 28, 0, 2, 0]' : 0.13603}", "{'[6, 0, 6, 4, 6, 5, 6, 8, 0, 28, 0, 2, 0]' : 0.13605}"]
returning from 'run': {'[6, 0, 6, 4, 6, 5, 6, 8, 0, 28, 0, 2, 0]': ([0.1611, 0.161165, 0.144659, 0.136049, 0.135981, 0.136052, 0.136052, 0.136028, 0.136036, 0.136065, 0.136099, 0.136438, 0.136082, 0.136049, 0.136611, 0.136, 0.136016, 0.136078, 0.136108, 0.13599, 0.136015, 0.136251, 0.136036, 0.136215, 0.136009, 0.136351, 0.136065, 0.136025, 0.13603, 0.13605], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 6, 4, 6, 5, 6, 8, 0, 28, 0, 2, 0]': ([0.1611, 0.161165, 0.144659, 0.136049, 0.135981, 0.136052, 0.136052, 0.136028, 0.136036, 0.136065, 0.136099, 0.136438, 0.136082, 0.136049, 0.136611, 0.136, 0.136016, 0.136078, 0.136108, 0.13599, 0.136015, 0.136251, 0.136036, 0.136215, 0.136009, 0.136351, 0.136065, 0.136025, 0.13603, 0.13605], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Design Best Point:
[0, 4, 6, 6, 3, 4, 28, 0, 27, 29, 1, 1, 0]
Length of requested configs: 1
Result was on Database, Returning Now
Fixed Factors: {}
Slowdown (Design Best): 0.703365686576898
Slowdown (Predicted Best): 0.8596569263768257
Budget: 18/180
Updating Global Best: 0.1129572
Current Best Point: 
[0, 4, 6, 6, 3, 4, 28, 0, 27, 29, 1, 1, 0]
Step 1
Full Model:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K
Generating valid search space of size 36000 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Tested coordinates: 150000
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Tested coordinates: 190000
Tested coordinates: 200000
Tested coordinates: 210000
Tested coordinates: 220000
Tested coordinates: 230000
Tested coordinates: 240000
Tested coordinates: 250000
Tested coordinates: 260000
Tested coordinates: 270000
Tested coordinates: 280000
Tested coordinates: 290000
Valid coordinates: 7200
Tested coordinates: 300000
Tested coordinates: 310000
Tested coordinates: 320000
Tested coordinates: 330000
Tested coordinates: 340000
Tested coordinates: 350000
Tested coordinates: 360000
Tested coordinates: 370000
Tested coordinates: 380000
Tested coordinates: 390000
Tested coordinates: 400000
Tested coordinates: 410000
Tested coordinates: 420000
Tested coordinates: 430000
Tested coordinates: 440000
Tested coordinates: 450000
Tested coordinates: 460000
Tested coordinates: 470000
Tested coordinates: 480000
Tested coordinates: 490000
Tested coordinates: 500000
Tested coordinates: 510000
Tested coordinates: 520000
Tested coordinates: 530000
Tested coordinates: 540000
Tested coordinates: 550000
Tested coordinates: 560000
Tested coordinates: 570000
Tested coordinates: 580000
Tested coordinates: 590000
Valid coordinates: 14400
Tested coordinates: 600000
Tested coordinates: 610000
Tested coordinates: 620000
Tested coordinates: 630000
Tested coordinates: 640000
Tested coordinates: 650000
Tested coordinates: 660000
Tested coordinates: 670000
Tested coordinates: 680000
Tested coordinates: 690000
Tested coordinates: 700000
Tested coordinates: 710000
Tested coordinates: 720000
Tested coordinates: 730000
Tested coordinates: 740000
Tested coordinates: 750000
Tested coordinates: 760000
Tested coordinates: 770000
Tested coordinates: 780000
Tested coordinates: 790000
Tested coordinates: 800000
Tested coordinates: 810000
Tested coordinates: 820000
Tested coordinates: 830000
Tested coordinates: 840000
Tested coordinates: 850000
Tested coordinates: 860000
Tested coordinates: 870000
Tested coordinates: 880000
Tested coordinates: 890000
Valid coordinates: 21600
Tested coordinates: 900000
Tested coordinates: 910000
Tested coordinates: 920000
Tested coordinates: 930000
Tested coordinates: 940000
Tested coordinates: 950000
Tested coordinates: 960000
Tested coordinates: 970000
Tested coordinates: 980000
Tested coordinates: 990000
Tested coordinates: 1000000
Tested coordinates: 1010000
Tested coordinates: 1020000
Tested coordinates: 1030000
Tested coordinates: 1040000
Tested coordinates: 1050000
Tested coordinates: 1060000
Tested coordinates: 1070000
Tested coordinates: 1080000
Tested coordinates: 1090000
Tested coordinates: 1100000
Tested coordinates: 1110000
Tested coordinates: 1120000
Tested coordinates: 1130000
Tested coordinates: 1140000
Tested coordinates: 1150000
Tested coordinates: 1160000
Tested coordinates: 1170000
Valid coordinates: 28800
Tested coordinates: 1180000
Tested coordinates: 1190000
Tested coordinates: 1200000
Tested coordinates: 1210000
Tested coordinates: 1220000
Tested coordinates: 1230000
Tested coordinates: 1240000
Tested coordinates: 1250000
Tested coordinates: 1260000
Tested coordinates: 1270000
Tested coordinates: 1280000
Tested coordinates: 1290000
Tested coordinates: 1300000
Tested coordinates: 1310000
Tested coordinates: 1320000
Tested coordinates: 1330000
Tested coordinates: 1340000
Tested coordinates: 1350000
Tested coordinates: 1360000
Tested coordinates: 1370000
Tested coordinates: 1380000
Tested coordinates: 1390000
Tested coordinates: 1400000
Tested coordinates: 1410000
Tested coordinates: 1420000
Tested coordinates: 1430000
Tested coordinates: 1440000
Tested coordinates: 1450000
Tested coordinates: 1460000
Tested coordinates: 1470000
Valid coordinates: 36000
Valid/Tested configurations: 36000/1476670
Generated Search Space:
NULL
Clean Info:
Removed Factors: character(0)

Removed Inverse Factors: character(0)

New Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
New Inverse Factors: []
New Fixed Factors: {}
Fixed Factors: {}
Computing D-Optimal Design
Computing D-Optimal Design with 18 experiments
Design Formula:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K
Starting "optFederov" run
Using Search Space:
NULL
Data Dimensions: [1] 36000    13

      T1_I T1_J T1_K T2_I T2_J T2_K U1_I U_I U_J U_K RT_I RT_J RT_K
569      6    0    6    6    4    6    0   0   0   0    2    0    0
3184     1    0    0    0    6    6    6  26  24   0    0    0    2
6141     6    6    0    6    6    5   18   1   0  26    0    2    0
8973     0    6    6    0    0    5    4   0   0   0    0    0    0
11318    3    0    6    0    0    6   29   0  26  25    2    0    0
15880    1    6    1    3    6    0   23  26  25   0    2    0    0
18119    1    6    6    1    6    6    0  26   0  29    1    1    0
19792    0    6    4    6    6    0   16   3   0  24    0    0    2
21331    0    3    1    6    0    0    1   0  26  25    0    2    0
21335    1    0    6    0    6    0   26  23   9   0    0    2    0
22458    6    0    2    0    0    0    1  25   0  29    1    0    0
23868    5    1    6    6    6    0   16   0  26  26    0    0    0
27277    5    3    6    6    4    6   22  28  28   0    0    2    0
28397    6    5    6    5    0    0    3  29  15   0    0    0    0
30974    1    0    0    5    3    6   29  29   0   8    0    0    0
31155    6    5    0    0    6    3    2   0  26  25    0    0    0
32571    6    6    6    0    0    5   27  11   0  25    0    0    2
33574    6    1    1    0    5    0   29   2   0   0    0    2    0

D-Efficiency Approximation: [1] 0.488

Measuring design of size 18
Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	6
        Additions: 		327
        Multiplications: 	132
        Divisions: 		0
        Logical: 		0
        Reads: 			759
        Writes: 		99
        Comparisons:		15
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest20.exe __orio_perftest20.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest20.exe  
Program Test Output: 
{'[6, 0, 6, 6, 4, 6, 0, 0, 0, 0, 2, 0, 0]' : 0.211768}
{'[6, 0, 6, 6, 4, 6, 0, 0, 0, 0, 2, 0, 0]' : 0.196277}
{'[6, 0, 6, 6, 4, 6, 0, 0, 0, 0, 2, 0, 0]' : 0.185245}
{'[6, 0, 6, 6, 4, 6, 0, 0, 0, 0, 2, 0, 0]' : 0.184281}
{'[6, 0, 6, 6, 4, 6, 0, 0, 0, 0, 2, 0, 0]' : 0.183903}
{'[6, 0, 6, 6, 4, 6, 0, 0, 0, 0, 2, 0, 0]' : 0.184636}
{'[6, 0, 6, 6, 4, 6, 0, 0, 0, 0, 2, 0, 0]' : 0.184634}
{'[6, 0, 6, 6, 4, 6, 0, 0, 0, 0, 2, 0, 0]' : 0.18415}
{'[6, 0, 6, 6, 4, 6, 0, 0, 0, 0, 2, 0, 0]' : 0.183906}
{'[6, 0, 6, 6, 4, 6, 0, 0, 0, 0, 2, 0, 0]' : 0.185093}
{'[6, 0, 6, 6, 4, 6, 0, 0, 0, 0, 2, 0, 0]' : 0.185921}
{'[6, 0, 6, 6, 4, 6, 0, 0, 0, 0, 2, 0, 0]' : 0.184657}
{'[6, 0, 6, 6, 4, 6, 0, 0, 0, 0, 2, 0, 0]' : 0.183336}
{'[6, 0, 6, 6, 4, 6, 0, 0, 0, 0, 2, 0, 0]' : 0.185375}
{'[6, 0, 6, 6, 4, 6, 0, 0, 0, 0, 2, 0, 0]' : 0.184805}
{'[6, 0, 6, 6, 4, 6, 0, 0, 0, 0, 2, 0, 0]' : 0.184262}
{'[6, 0, 6, 6, 4, 6, 0, 0, 0, 0, 2, 0, 0]' : 0.184126}
{'[6, 0, 6, 6, 4, 6, 0, 0, 0, 0, 2, 0, 0]' : 0.184712}
{'[6, 0, 6, 6, 4, 6, 0, 0, 0, 0, 2, 0, 0]' : 0.184046}
{'[6, 0, 6, 6, 4, 6, 0, 0, 0, 0, 2, 0, 0]' : 0.184357}
{'[6, 0, 6, 6, 4, 6, 0, 0, 0, 0, 2, 0, 0]' : 0.184305}
{'[6, 0, 6, 6, 4, 6, 0, 0, 0, 0, 2, 0, 0]' : 0.184979}
{'[6, 0, 6, 6, 4, 6, 0, 0, 0, 0, 2, 0, 0]' : 0.184692}
{'[6, 0, 6, 6, 4, 6, 0, 0, 0, 0, 2, 0, 0]' : 0.184978}
{'[6, 0, 6, 6, 4, 6, 0, 0, 0, 0, 2, 0, 0]' : 0.183654}
{'[6, 0, 6, 6, 4, 6, 0, 0, 0, 0, 2, 0, 0]' : 0.184459}
{'[6, 0, 6, 6, 4, 6, 0, 0, 0, 0, 2, 0, 0]' : 0.184248}
{'[6, 0, 6, 6, 4, 6, 0, 0, 0, 0, 2, 0, 0]' : 0.184248}
{'[6, 0, 6, 6, 4, 6, 0, 0, 0, 0, 2, 0, 0]' : 0.184074}
{'[6, 0, 6, 6, 4, 6, 0, 0, 0, 0, 2, 0, 0]' : 0.185064}

out:
 ["{'[6, 0, 6, 6, 4, 6, 0, 0, 0, 0, 2, 0, 0]' : 0.211768}", "{'[6, 0, 6, 6, 4, 6, 0, 0, 0, 0, 2, 0, 0]' : 0.196277}", "{'[6, 0, 6, 6, 4, 6, 0, 0, 0, 0, 2, 0, 0]' : 0.185245}", "{'[6, 0, 6, 6, 4, 6, 0, 0, 0, 0, 2, 0, 0]' : 0.184281}", "{'[6, 0, 6, 6, 4, 6, 0, 0, 0, 0, 2, 0, 0]' : 0.183903}", "{'[6, 0, 6, 6, 4, 6, 0, 0, 0, 0, 2, 0, 0]' : 0.184636}", "{'[6, 0, 6, 6, 4, 6, 0, 0, 0, 0, 2, 0, 0]' : 0.184634}", "{'[6, 0, 6, 6, 4, 6, 0, 0, 0, 0, 2, 0, 0]' : 0.18415}", "{'[6, 0, 6, 6, 4, 6, 0, 0, 0, 0, 2, 0, 0]' : 0.183906}", "{'[6, 0, 6, 6, 4, 6, 0, 0, 0, 0, 2, 0, 0]' : 0.185093}", "{'[6, 0, 6, 6, 4, 6, 0, 0, 0, 0, 2, 0, 0]' : 0.185921}", "{'[6, 0, 6, 6, 4, 6, 0, 0, 0, 0, 2, 0, 0]' : 0.184657}", "{'[6, 0, 6, 6, 4, 6, 0, 0, 0, 0, 2, 0, 0]' : 0.183336}", "{'[6, 0, 6, 6, 4, 6, 0, 0, 0, 0, 2, 0, 0]' : 0.185375}", "{'[6, 0, 6, 6, 4, 6, 0, 0, 0, 0, 2, 0, 0]' : 0.184805}", "{'[6, 0, 6, 6, 4, 6, 0, 0, 0, 0, 2, 0, 0]' : 0.184262}", "{'[6, 0, 6, 6, 4, 6, 0, 0, 0, 0, 2, 0, 0]' : 0.184126}", "{'[6, 0, 6, 6, 4, 6, 0, 0, 0, 0, 2, 0, 0]' : 0.184712}", "{'[6, 0, 6, 6, 4, 6, 0, 0, 0, 0, 2, 0, 0]' : 0.184046}", "{'[6, 0, 6, 6, 4, 6, 0, 0, 0, 0, 2, 0, 0]' : 0.184357}", "{'[6, 0, 6, 6, 4, 6, 0, 0, 0, 0, 2, 0, 0]' : 0.184305}", "{'[6, 0, 6, 6, 4, 6, 0, 0, 0, 0, 2, 0, 0]' : 0.184979}", "{'[6, 0, 6, 6, 4, 6, 0, 0, 0, 0, 2, 0, 0]' : 0.184692}", "{'[6, 0, 6, 6, 4, 6, 0, 0, 0, 0, 2, 0, 0]' : 0.184978}", "{'[6, 0, 6, 6, 4, 6, 0, 0, 0, 0, 2, 0, 0]' : 0.183654}", "{'[6, 0, 6, 6, 4, 6, 0, 0, 0, 0, 2, 0, 0]' : 0.184459}", "{'[6, 0, 6, 6, 4, 6, 0, 0, 0, 0, 2, 0, 0]' : 0.184248}", "{'[6, 0, 6, 6, 4, 6, 0, 0, 0, 0, 2, 0, 0]' : 0.184248}", "{'[6, 0, 6, 6, 4, 6, 0, 0, 0, 0, 2, 0, 0]' : 0.184074}", "{'[6, 0, 6, 6, 4, 6, 0, 0, 0, 0, 2, 0, 0]' : 0.185064}"]
returning from 'run': {'[6, 0, 6, 6, 4, 6, 0, 0, 0, 0, 2, 0, 0]': ([0.211768, 0.196277, 0.185245, 0.184281, 0.183903, 0.184636, 0.184634, 0.18415, 0.183906, 0.185093, 0.185921, 0.184657, 0.183336, 0.185375, 0.184805, 0.184262, 0.184126, 0.184712, 0.184046, 0.184357, 0.184305, 0.184979, 0.184692, 0.184978, 0.183654, 0.184459, 0.184248, 0.184248, 0.184074, 0.185064], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 6, 6, 4, 6, 0, 0, 0, 0, 2, 0, 0]': ([0.211768, 0.196277, 0.185245, 0.184281, 0.183903, 0.184636, 0.184634, 0.18415, 0.183906, 0.185093, 0.185921, 0.184657, 0.183336, 0.185375, 0.184805, 0.184262, 0.184126, 0.184712, 0.184046, 0.184357, 0.184305, 0.184979, 0.184692, 0.184978, 0.183654, 0.184459, 0.184248, 0.184248, 0.184074, 0.185064], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	17
        Max loop nest depth: 	4
        Additions: 		11107
        Multiplications: 	3304
        Divisions: 		0
        Logical: 		0
        Reads: 			16711
        Writes: 		1722
        Comparisons:		17
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest21.exe __orio_perftest21.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest21.exe  
Program Test Output: 
{'[1, 0, 0, 0, 6, 6, 6, 26, 24, 0, 0, 0, 2]' : 0.220143}
{'[1, 0, 0, 0, 6, 6, 6, 26, 24, 0, 0, 0, 2]' : 0.198064}
{'[1, 0, 0, 0, 6, 6, 6, 26, 24, 0, 0, 0, 2]' : 0.184133}
{'[1, 0, 0, 0, 6, 6, 6, 26, 24, 0, 0, 0, 2]' : 0.184238}
{'[1, 0, 0, 0, 6, 6, 6, 26, 24, 0, 0, 0, 2]' : 0.184546}
{'[1, 0, 0, 0, 6, 6, 6, 26, 24, 0, 0, 0, 2]' : 0.184204}
{'[1, 0, 0, 0, 6, 6, 6, 26, 24, 0, 0, 0, 2]' : 0.184151}
{'[1, 0, 0, 0, 6, 6, 6, 26, 24, 0, 0, 0, 2]' : 0.184374}
{'[1, 0, 0, 0, 6, 6, 6, 26, 24, 0, 0, 0, 2]' : 0.184238}
{'[1, 0, 0, 0, 6, 6, 6, 26, 24, 0, 0, 0, 2]' : 0.184196}
{'[1, 0, 0, 0, 6, 6, 6, 26, 24, 0, 0, 0, 2]' : 0.184504}
{'[1, 0, 0, 0, 6, 6, 6, 26, 24, 0, 0, 0, 2]' : 0.184399}
{'[1, 0, 0, 0, 6, 6, 6, 26, 24, 0, 0, 0, 2]' : 0.184209}
{'[1, 0, 0, 0, 6, 6, 6, 26, 24, 0, 0, 0, 2]' : 0.184152}
{'[1, 0, 0, 0, 6, 6, 6, 26, 24, 0, 0, 0, 2]' : 0.184266}
{'[1, 0, 0, 0, 6, 6, 6, 26, 24, 0, 0, 0, 2]' : 0.184281}
{'[1, 0, 0, 0, 6, 6, 6, 26, 24, 0, 0, 0, 2]' : 0.184242}
{'[1, 0, 0, 0, 6, 6, 6, 26, 24, 0, 0, 0, 2]' : 0.184365}
{'[1, 0, 0, 0, 6, 6, 6, 26, 24, 0, 0, 0, 2]' : 0.184637}
{'[1, 0, 0, 0, 6, 6, 6, 26, 24, 0, 0, 0, 2]' : 0.184336}
{'[1, 0, 0, 0, 6, 6, 6, 26, 24, 0, 0, 0, 2]' : 0.184484}
{'[1, 0, 0, 0, 6, 6, 6, 26, 24, 0, 0, 0, 2]' : 0.184452}
{'[1, 0, 0, 0, 6, 6, 6, 26, 24, 0, 0, 0, 2]' : 0.184257}
{'[1, 0, 0, 0, 6, 6, 6, 26, 24, 0, 0, 0, 2]' : 0.184281}
{'[1, 0, 0, 0, 6, 6, 6, 26, 24, 0, 0, 0, 2]' : 0.18422}
{'[1, 0, 0, 0, 6, 6, 6, 26, 24, 0, 0, 0, 2]' : 0.184353}
{'[1, 0, 0, 0, 6, 6, 6, 26, 24, 0, 0, 0, 2]' : 0.184565}
{'[1, 0, 0, 0, 6, 6, 6, 26, 24, 0, 0, 0, 2]' : 0.184534}
{'[1, 0, 0, 0, 6, 6, 6, 26, 24, 0, 0, 0, 2]' : 0.184479}
{'[1, 0, 0, 0, 6, 6, 6, 26, 24, 0, 0, 0, 2]' : 0.184634}

out:
 ["{'[1, 0, 0, 0, 6, 6, 6, 26, 24, 0, 0, 0, 2]' : 0.220143}", "{'[1, 0, 0, 0, 6, 6, 6, 26, 24, 0, 0, 0, 2]' : 0.198064}", "{'[1, 0, 0, 0, 6, 6, 6, 26, 24, 0, 0, 0, 2]' : 0.184133}", "{'[1, 0, 0, 0, 6, 6, 6, 26, 24, 0, 0, 0, 2]' : 0.184238}", "{'[1, 0, 0, 0, 6, 6, 6, 26, 24, 0, 0, 0, 2]' : 0.184546}", "{'[1, 0, 0, 0, 6, 6, 6, 26, 24, 0, 0, 0, 2]' : 0.184204}", "{'[1, 0, 0, 0, 6, 6, 6, 26, 24, 0, 0, 0, 2]' : 0.184151}", "{'[1, 0, 0, 0, 6, 6, 6, 26, 24, 0, 0, 0, 2]' : 0.184374}", "{'[1, 0, 0, 0, 6, 6, 6, 26, 24, 0, 0, 0, 2]' : 0.184238}", "{'[1, 0, 0, 0, 6, 6, 6, 26, 24, 0, 0, 0, 2]' : 0.184196}", "{'[1, 0, 0, 0, 6, 6, 6, 26, 24, 0, 0, 0, 2]' : 0.184504}", "{'[1, 0, 0, 0, 6, 6, 6, 26, 24, 0, 0, 0, 2]' : 0.184399}", "{'[1, 0, 0, 0, 6, 6, 6, 26, 24, 0, 0, 0, 2]' : 0.184209}", "{'[1, 0, 0, 0, 6, 6, 6, 26, 24, 0, 0, 0, 2]' : 0.184152}", "{'[1, 0, 0, 0, 6, 6, 6, 26, 24, 0, 0, 0, 2]' : 0.184266}", "{'[1, 0, 0, 0, 6, 6, 6, 26, 24, 0, 0, 0, 2]' : 0.184281}", "{'[1, 0, 0, 0, 6, 6, 6, 26, 24, 0, 0, 0, 2]' : 0.184242}", "{'[1, 0, 0, 0, 6, 6, 6, 26, 24, 0, 0, 0, 2]' : 0.184365}", "{'[1, 0, 0, 0, 6, 6, 6, 26, 24, 0, 0, 0, 2]' : 0.184637}", "{'[1, 0, 0, 0, 6, 6, 6, 26, 24, 0, 0, 0, 2]' : 0.184336}", "{'[1, 0, 0, 0, 6, 6, 6, 26, 24, 0, 0, 0, 2]' : 0.184484}", "{'[1, 0, 0, 0, 6, 6, 6, 26, 24, 0, 0, 0, 2]' : 0.184452}", "{'[1, 0, 0, 0, 6, 6, 6, 26, 24, 0, 0, 0, 2]' : 0.184257}", "{'[1, 0, 0, 0, 6, 6, 6, 26, 24, 0, 0, 0, 2]' : 0.184281}", "{'[1, 0, 0, 0, 6, 6, 6, 26, 24, 0, 0, 0, 2]' : 0.18422}", "{'[1, 0, 0, 0, 6, 6, 6, 26, 24, 0, 0, 0, 2]' : 0.184353}", "{'[1, 0, 0, 0, 6, 6, 6, 26, 24, 0, 0, 0, 2]' : 0.184565}", "{'[1, 0, 0, 0, 6, 6, 6, 26, 24, 0, 0, 0, 2]' : 0.184534}", "{'[1, 0, 0, 0, 6, 6, 6, 26, 24, 0, 0, 0, 2]' : 0.184479}", "{'[1, 0, 0, 0, 6, 6, 6, 26, 24, 0, 0, 0, 2]' : 0.184634}"]
returning from 'run': {'[1, 0, 0, 0, 6, 6, 6, 26, 24, 0, 0, 0, 2]': ([0.220143, 0.198064, 0.184133, 0.184238, 0.184546, 0.184204, 0.184151, 0.184374, 0.184238, 0.184196, 0.184504, 0.184399, 0.184209, 0.184152, 0.184266, 0.184281, 0.184242, 0.184365, 0.184637, 0.184336, 0.184484, 0.184452, 0.184257, 0.184281, 0.18422, 0.184353, 0.184565, 0.184534, 0.184479, 0.184634], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 0, 0, 6, 6, 6, 26, 24, 0, 0, 0, 2]': ([0.220143, 0.198064, 0.184133, 0.184238, 0.184546, 0.184204, 0.184151, 0.184374, 0.184238, 0.184196, 0.184504, 0.184399, 0.184209, 0.184152, 0.184266, 0.184281, 0.184242, 0.184365, 0.184637, 0.184336, 0.184484, 0.184452, 0.184257, 0.184281, 0.18422, 0.184353, 0.184565, 0.184534, 0.184479, 0.184634], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	6
        Additions: 		1048
        Multiplications: 	366
        Divisions: 		0
        Logical: 		0
        Reads: 			2016
        Writes: 		246
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest22.exe __orio_perftest22.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest22.exe  
Program Test Output: 
{'[6, 6, 0, 6, 6, 5, 18, 1, 0, 26, 0, 2, 0]' : 0.156746}
{'[6, 6, 0, 6, 6, 5, 18, 1, 0, 26, 0, 2, 0]' : 0.156485}
{'[6, 6, 0, 6, 6, 5, 18, 1, 0, 26, 0, 2, 0]' : 0.156577}
{'[6, 6, 0, 6, 6, 5, 18, 1, 0, 26, 0, 2, 0]' : 0.145247}
{'[6, 6, 0, 6, 6, 5, 18, 1, 0, 26, 0, 2, 0]' : 0.137766}
{'[6, 6, 0, 6, 6, 5, 18, 1, 0, 26, 0, 2, 0]' : 0.136147}
{'[6, 6, 0, 6, 6, 5, 18, 1, 0, 26, 0, 2, 0]' : 0.135986}
{'[6, 6, 0, 6, 6, 5, 18, 1, 0, 26, 0, 2, 0]' : 0.138924}
{'[6, 6, 0, 6, 6, 5, 18, 1, 0, 26, 0, 2, 0]' : 0.137546}
{'[6, 6, 0, 6, 6, 5, 18, 1, 0, 26, 0, 2, 0]' : 0.135771}
{'[6, 6, 0, 6, 6, 5, 18, 1, 0, 26, 0, 2, 0]' : 0.136591}
{'[6, 6, 0, 6, 6, 5, 18, 1, 0, 26, 0, 2, 0]' : 0.137668}
{'[6, 6, 0, 6, 6, 5, 18, 1, 0, 26, 0, 2, 0]' : 0.13607}
{'[6, 6, 0, 6, 6, 5, 18, 1, 0, 26, 0, 2, 0]' : 0.136093}
{'[6, 6, 0, 6, 6, 5, 18, 1, 0, 26, 0, 2, 0]' : 0.137937}
{'[6, 6, 0, 6, 6, 5, 18, 1, 0, 26, 0, 2, 0]' : 0.137589}
{'[6, 6, 0, 6, 6, 5, 18, 1, 0, 26, 0, 2, 0]' : 0.135829}
{'[6, 6, 0, 6, 6, 5, 18, 1, 0, 26, 0, 2, 0]' : 0.13603}
{'[6, 6, 0, 6, 6, 5, 18, 1, 0, 26, 0, 2, 0]' : 0.136519}
{'[6, 6, 0, 6, 6, 5, 18, 1, 0, 26, 0, 2, 0]' : 0.135861}
{'[6, 6, 0, 6, 6, 5, 18, 1, 0, 26, 0, 2, 0]' : 0.135944}
{'[6, 6, 0, 6, 6, 5, 18, 1, 0, 26, 0, 2, 0]' : 0.136822}
{'[6, 6, 0, 6, 6, 5, 18, 1, 0, 26, 0, 2, 0]' : 0.13942}
{'[6, 6, 0, 6, 6, 5, 18, 1, 0, 26, 0, 2, 0]' : 0.136178}
{'[6, 6, 0, 6, 6, 5, 18, 1, 0, 26, 0, 2, 0]' : 0.135948}
{'[6, 6, 0, 6, 6, 5, 18, 1, 0, 26, 0, 2, 0]' : 0.137945}
{'[6, 6, 0, 6, 6, 5, 18, 1, 0, 26, 0, 2, 0]' : 0.138722}
{'[6, 6, 0, 6, 6, 5, 18, 1, 0, 26, 0, 2, 0]' : 0.135354}
{'[6, 6, 0, 6, 6, 5, 18, 1, 0, 26, 0, 2, 0]' : 0.135285}
{'[6, 6, 0, 6, 6, 5, 18, 1, 0, 26, 0, 2, 0]' : 0.139307}

out:
 ["{'[6, 6, 0, 6, 6, 5, 18, 1, 0, 26, 0, 2, 0]' : 0.156746}", "{'[6, 6, 0, 6, 6, 5, 18, 1, 0, 26, 0, 2, 0]' : 0.156485}", "{'[6, 6, 0, 6, 6, 5, 18, 1, 0, 26, 0, 2, 0]' : 0.156577}", "{'[6, 6, 0, 6, 6, 5, 18, 1, 0, 26, 0, 2, 0]' : 0.145247}", "{'[6, 6, 0, 6, 6, 5, 18, 1, 0, 26, 0, 2, 0]' : 0.137766}", "{'[6, 6, 0, 6, 6, 5, 18, 1, 0, 26, 0, 2, 0]' : 0.136147}", "{'[6, 6, 0, 6, 6, 5, 18, 1, 0, 26, 0, 2, 0]' : 0.135986}", "{'[6, 6, 0, 6, 6, 5, 18, 1, 0, 26, 0, 2, 0]' : 0.138924}", "{'[6, 6, 0, 6, 6, 5, 18, 1, 0, 26, 0, 2, 0]' : 0.137546}", "{'[6, 6, 0, 6, 6, 5, 18, 1, 0, 26, 0, 2, 0]' : 0.135771}", "{'[6, 6, 0, 6, 6, 5, 18, 1, 0, 26, 0, 2, 0]' : 0.136591}", "{'[6, 6, 0, 6, 6, 5, 18, 1, 0, 26, 0, 2, 0]' : 0.137668}", "{'[6, 6, 0, 6, 6, 5, 18, 1, 0, 26, 0, 2, 0]' : 0.13607}", "{'[6, 6, 0, 6, 6, 5, 18, 1, 0, 26, 0, 2, 0]' : 0.136093}", "{'[6, 6, 0, 6, 6, 5, 18, 1, 0, 26, 0, 2, 0]' : 0.137937}", "{'[6, 6, 0, 6, 6, 5, 18, 1, 0, 26, 0, 2, 0]' : 0.137589}", "{'[6, 6, 0, 6, 6, 5, 18, 1, 0, 26, 0, 2, 0]' : 0.135829}", "{'[6, 6, 0, 6, 6, 5, 18, 1, 0, 26, 0, 2, 0]' : 0.13603}", "{'[6, 6, 0, 6, 6, 5, 18, 1, 0, 26, 0, 2, 0]' : 0.136519}", "{'[6, 6, 0, 6, 6, 5, 18, 1, 0, 26, 0, 2, 0]' : 0.135861}", "{'[6, 6, 0, 6, 6, 5, 18, 1, 0, 26, 0, 2, 0]' : 0.135944}", "{'[6, 6, 0, 6, 6, 5, 18, 1, 0, 26, 0, 2, 0]' : 0.136822}", "{'[6, 6, 0, 6, 6, 5, 18, 1, 0, 26, 0, 2, 0]' : 0.13942}", "{'[6, 6, 0, 6, 6, 5, 18, 1, 0, 26, 0, 2, 0]' : 0.136178}", "{'[6, 6, 0, 6, 6, 5, 18, 1, 0, 26, 0, 2, 0]' : 0.135948}", "{'[6, 6, 0, 6, 6, 5, 18, 1, 0, 26, 0, 2, 0]' : 0.137945}", "{'[6, 6, 0, 6, 6, 5, 18, 1, 0, 26, 0, 2, 0]' : 0.138722}", "{'[6, 6, 0, 6, 6, 5, 18, 1, 0, 26, 0, 2, 0]' : 0.135354}", "{'[6, 6, 0, 6, 6, 5, 18, 1, 0, 26, 0, 2, 0]' : 0.135285}", "{'[6, 6, 0, 6, 6, 5, 18, 1, 0, 26, 0, 2, 0]' : 0.139307}"]
returning from 'run': {'[6, 6, 0, 6, 6, 5, 18, 1, 0, 26, 0, 2, 0]': ([0.156746, 0.156485, 0.156577, 0.145247, 0.137766, 0.136147, 0.135986, 0.138924, 0.137546, 0.135771, 0.136591, 0.137668, 0.13607, 0.136093, 0.137937, 0.137589, 0.135829, 0.13603, 0.136519, 0.135861, 0.135944, 0.136822, 0.13942, 0.136178, 0.135948, 0.137945, 0.138722, 0.135354, 0.135285, 0.139307], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 0, 6, 6, 5, 18, 1, 0, 26, 0, 2, 0]': ([0.156746, 0.156485, 0.156577, 0.145247, 0.137766, 0.136147, 0.135986, 0.138924, 0.137546, 0.135771, 0.136591, 0.137668, 0.13607, 0.136093, 0.137937, 0.137589, 0.135829, 0.13603, 0.136519, 0.135861, 0.135944, 0.136822, 0.13942, 0.136178, 0.135948, 0.137945, 0.138722, 0.135354, 0.135285, 0.139307], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	4
        Additions: 		30
        Multiplications: 	4
        Divisions: 		0
        Logical: 		0
        Reads: 			82
        Writes: 		25
        Comparisons:		8
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest23.exe __orio_perftest23.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest23.exe  
Program Test Output: 
{'[0, 6, 6, 0, 0, 5, 4, 0, 0, 0, 0, 0, 0]' : 0.438107}
{'[0, 6, 6, 0, 0, 5, 4, 0, 0, 0, 0, 0, 0]' : 0.389911}
{'[0, 6, 6, 0, 0, 5, 4, 0, 0, 0, 0, 0, 0]' : 0.382868}
{'[0, 6, 6, 0, 0, 5, 4, 0, 0, 0, 0, 0, 0]' : 0.388581}
{'[0, 6, 6, 0, 0, 5, 4, 0, 0, 0, 0, 0, 0]' : 0.386249}
{'[0, 6, 6, 0, 0, 5, 4, 0, 0, 0, 0, 0, 0]' : 0.386576}
{'[0, 6, 6, 0, 0, 5, 4, 0, 0, 0, 0, 0, 0]' : 0.382539}
{'[0, 6, 6, 0, 0, 5, 4, 0, 0, 0, 0, 0, 0]' : 0.380256}
{'[0, 6, 6, 0, 0, 5, 4, 0, 0, 0, 0, 0, 0]' : 0.386911}
{'[0, 6, 6, 0, 0, 5, 4, 0, 0, 0, 0, 0, 0]' : 0.386372}
{'[0, 6, 6, 0, 0, 5, 4, 0, 0, 0, 0, 0, 0]' : 0.384097}
{'[0, 6, 6, 0, 0, 5, 4, 0, 0, 0, 0, 0, 0]' : 0.388171}
{'[0, 6, 6, 0, 0, 5, 4, 0, 0, 0, 0, 0, 0]' : 0.386342}
{'[0, 6, 6, 0, 0, 5, 4, 0, 0, 0, 0, 0, 0]' : 0.388771}
{'[0, 6, 6, 0, 0, 5, 4, 0, 0, 0, 0, 0, 0]' : 0.388796}
{'[0, 6, 6, 0, 0, 5, 4, 0, 0, 0, 0, 0, 0]' : 0.382233}
{'[0, 6, 6, 0, 0, 5, 4, 0, 0, 0, 0, 0, 0]' : 0.388137}
{'[0, 6, 6, 0, 0, 5, 4, 0, 0, 0, 0, 0, 0]' : 0.386268}
{'[0, 6, 6, 0, 0, 5, 4, 0, 0, 0, 0, 0, 0]' : 0.386584}
{'[0, 6, 6, 0, 0, 5, 4, 0, 0, 0, 0, 0, 0]' : 0.386668}
{'[0, 6, 6, 0, 0, 5, 4, 0, 0, 0, 0, 0, 0]' : 0.383553}
{'[0, 6, 6, 0, 0, 5, 4, 0, 0, 0, 0, 0, 0]' : 0.390958}
{'[0, 6, 6, 0, 0, 5, 4, 0, 0, 0, 0, 0, 0]' : 0.386876}
{'[0, 6, 6, 0, 0, 5, 4, 0, 0, 0, 0, 0, 0]' : 0.384623}
{'[0, 6, 6, 0, 0, 5, 4, 0, 0, 0, 0, 0, 0]' : 0.387904}
{'[0, 6, 6, 0, 0, 5, 4, 0, 0, 0, 0, 0, 0]' : 0.391073}
{'[0, 6, 6, 0, 0, 5, 4, 0, 0, 0, 0, 0, 0]' : 0.389976}
{'[0, 6, 6, 0, 0, 5, 4, 0, 0, 0, 0, 0, 0]' : 0.390395}
{'[0, 6, 6, 0, 0, 5, 4, 0, 0, 0, 0, 0, 0]' : 0.383023}
{'[0, 6, 6, 0, 0, 5, 4, 0, 0, 0, 0, 0, 0]' : 0.386601}

out:
 ["{'[0, 6, 6, 0, 0, 5, 4, 0, 0, 0, 0, 0, 0]' : 0.438107}", "{'[0, 6, 6, 0, 0, 5, 4, 0, 0, 0, 0, 0, 0]' : 0.389911}", "{'[0, 6, 6, 0, 0, 5, 4, 0, 0, 0, 0, 0, 0]' : 0.382868}", "{'[0, 6, 6, 0, 0, 5, 4, 0, 0, 0, 0, 0, 0]' : 0.388581}", "{'[0, 6, 6, 0, 0, 5, 4, 0, 0, 0, 0, 0, 0]' : 0.386249}", "{'[0, 6, 6, 0, 0, 5, 4, 0, 0, 0, 0, 0, 0]' : 0.386576}", "{'[0, 6, 6, 0, 0, 5, 4, 0, 0, 0, 0, 0, 0]' : 0.382539}", "{'[0, 6, 6, 0, 0, 5, 4, 0, 0, 0, 0, 0, 0]' : 0.380256}", "{'[0, 6, 6, 0, 0, 5, 4, 0, 0, 0, 0, 0, 0]' : 0.386911}", "{'[0, 6, 6, 0, 0, 5, 4, 0, 0, 0, 0, 0, 0]' : 0.386372}", "{'[0, 6, 6, 0, 0, 5, 4, 0, 0, 0, 0, 0, 0]' : 0.384097}", "{'[0, 6, 6, 0, 0, 5, 4, 0, 0, 0, 0, 0, 0]' : 0.388171}", "{'[0, 6, 6, 0, 0, 5, 4, 0, 0, 0, 0, 0, 0]' : 0.386342}", "{'[0, 6, 6, 0, 0, 5, 4, 0, 0, 0, 0, 0, 0]' : 0.388771}", "{'[0, 6, 6, 0, 0, 5, 4, 0, 0, 0, 0, 0, 0]' : 0.388796}", "{'[0, 6, 6, 0, 0, 5, 4, 0, 0, 0, 0, 0, 0]' : 0.382233}", "{'[0, 6, 6, 0, 0, 5, 4, 0, 0, 0, 0, 0, 0]' : 0.388137}", "{'[0, 6, 6, 0, 0, 5, 4, 0, 0, 0, 0, 0, 0]' : 0.386268}", "{'[0, 6, 6, 0, 0, 5, 4, 0, 0, 0, 0, 0, 0]' : 0.386584}", "{'[0, 6, 6, 0, 0, 5, 4, 0, 0, 0, 0, 0, 0]' : 0.386668}", "{'[0, 6, 6, 0, 0, 5, 4, 0, 0, 0, 0, 0, 0]' : 0.383553}", "{'[0, 6, 6, 0, 0, 5, 4, 0, 0, 0, 0, 0, 0]' : 0.390958}", "{'[0, 6, 6, 0, 0, 5, 4, 0, 0, 0, 0, 0, 0]' : 0.386876}", "{'[0, 6, 6, 0, 0, 5, 4, 0, 0, 0, 0, 0, 0]' : 0.384623}", "{'[0, 6, 6, 0, 0, 5, 4, 0, 0, 0, 0, 0, 0]' : 0.387904}", "{'[0, 6, 6, 0, 0, 5, 4, 0, 0, 0, 0, 0, 0]' : 0.391073}", "{'[0, 6, 6, 0, 0, 5, 4, 0, 0, 0, 0, 0, 0]' : 0.389976}", "{'[0, 6, 6, 0, 0, 5, 4, 0, 0, 0, 0, 0, 0]' : 0.390395}", "{'[0, 6, 6, 0, 0, 5, 4, 0, 0, 0, 0, 0, 0]' : 0.383023}", "{'[0, 6, 6, 0, 0, 5, 4, 0, 0, 0, 0, 0, 0]' : 0.386601}"]
returning from 'run': {'[0, 6, 6, 0, 0, 5, 4, 0, 0, 0, 0, 0, 0]': ([0.438107, 0.389911, 0.382868, 0.388581, 0.386249, 0.386576, 0.382539, 0.380256, 0.386911, 0.386372, 0.384097, 0.388171, 0.386342, 0.388771, 0.388796, 0.382233, 0.388137, 0.386268, 0.386584, 0.386668, 0.383553, 0.390958, 0.386876, 0.384623, 0.387904, 0.391073, 0.389976, 0.390395, 0.383023, 0.386601], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 6, 0, 0, 5, 4, 0, 0, 0, 0, 0, 0]': ([0.438107, 0.389911, 0.382868, 0.388581, 0.386249, 0.386576, 0.382539, 0.380256, 0.386911, 0.386372, 0.384097, 0.388171, 0.386342, 0.388771, 0.388796, 0.382233, 0.388137, 0.386268, 0.386584, 0.386668, 0.383553, 0.390958, 0.386876, 0.384623, 0.387904, 0.391073, 0.389976, 0.390395, 0.383023, 0.386601], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	17
        Max loop nest depth: 	5
        Additions: 		12200
        Multiplications: 	3630
        Divisions: 		0
        Logical: 		0
        Reads: 			18331
        Writes: 		1882
        Comparisons:		17
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest24.exe __orio_perftest24.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest24.exe  
Program Test Output: 
{'[3, 0, 6, 0, 0, 6, 29, 0, 26, 25, 2, 0, 0]' : 0.310296}
{'[3, 0, 6, 0, 0, 6, 29, 0, 26, 25, 2, 0, 0]' : 0.313289}
{'[3, 0, 6, 0, 0, 6, 29, 0, 26, 25, 2, 0, 0]' : 0.315828}
{'[3, 0, 6, 0, 0, 6, 29, 0, 26, 25, 2, 0, 0]' : 0.315086}
{'[3, 0, 6, 0, 0, 6, 29, 0, 26, 25, 2, 0, 0]' : 0.315314}
{'[3, 0, 6, 0, 0, 6, 29, 0, 26, 25, 2, 0, 0]' : 0.315783}
{'[3, 0, 6, 0, 0, 6, 29, 0, 26, 25, 2, 0, 0]' : 0.315034}
{'[3, 0, 6, 0, 0, 6, 29, 0, 26, 25, 2, 0, 0]' : 0.314834}
{'[3, 0, 6, 0, 0, 6, 29, 0, 26, 25, 2, 0, 0]' : 0.315325}
{'[3, 0, 6, 0, 0, 6, 29, 0, 26, 25, 2, 0, 0]' : 0.315399}
{'[3, 0, 6, 0, 0, 6, 29, 0, 26, 25, 2, 0, 0]' : 0.315369}
{'[3, 0, 6, 0, 0, 6, 29, 0, 26, 25, 2, 0, 0]' : 0.31221}
{'[3, 0, 6, 0, 0, 6, 29, 0, 26, 25, 2, 0, 0]' : 0.31411}
{'[3, 0, 6, 0, 0, 6, 29, 0, 26, 25, 2, 0, 0]' : 0.315209}
{'[3, 0, 6, 0, 0, 6, 29, 0, 26, 25, 2, 0, 0]' : 0.315586}
{'[3, 0, 6, 0, 0, 6, 29, 0, 26, 25, 2, 0, 0]' : 0.315801}
{'[3, 0, 6, 0, 0, 6, 29, 0, 26, 25, 2, 0, 0]' : 0.31505}
{'[3, 0, 6, 0, 0, 6, 29, 0, 26, 25, 2, 0, 0]' : 0.314968}
{'[3, 0, 6, 0, 0, 6, 29, 0, 26, 25, 2, 0, 0]' : 0.315458}
{'[3, 0, 6, 0, 0, 6, 29, 0, 26, 25, 2, 0, 0]' : 0.314091}
{'[3, 0, 6, 0, 0, 6, 29, 0, 26, 25, 2, 0, 0]' : 0.314292}
{'[3, 0, 6, 0, 0, 6, 29, 0, 26, 25, 2, 0, 0]' : 0.31577}
{'[3, 0, 6, 0, 0, 6, 29, 0, 26, 25, 2, 0, 0]' : 0.315095}
{'[3, 0, 6, 0, 0, 6, 29, 0, 26, 25, 2, 0, 0]' : 0.316036}
{'[3, 0, 6, 0, 0, 6, 29, 0, 26, 25, 2, 0, 0]' : 0.314668}
{'[3, 0, 6, 0, 0, 6, 29, 0, 26, 25, 2, 0, 0]' : 0.315404}
{'[3, 0, 6, 0, 0, 6, 29, 0, 26, 25, 2, 0, 0]' : 0.315451}
{'[3, 0, 6, 0, 0, 6, 29, 0, 26, 25, 2, 0, 0]' : 0.315643}
{'[3, 0, 6, 0, 0, 6, 29, 0, 26, 25, 2, 0, 0]' : 0.315873}
{'[3, 0, 6, 0, 0, 6, 29, 0, 26, 25, 2, 0, 0]' : 0.315566}

out:
 ["{'[3, 0, 6, 0, 0, 6, 29, 0, 26, 25, 2, 0, 0]' : 0.310296}", "{'[3, 0, 6, 0, 0, 6, 29, 0, 26, 25, 2, 0, 0]' : 0.313289}", "{'[3, 0, 6, 0, 0, 6, 29, 0, 26, 25, 2, 0, 0]' : 0.315828}", "{'[3, 0, 6, 0, 0, 6, 29, 0, 26, 25, 2, 0, 0]' : 0.315086}", "{'[3, 0, 6, 0, 0, 6, 29, 0, 26, 25, 2, 0, 0]' : 0.315314}", "{'[3, 0, 6, 0, 0, 6, 29, 0, 26, 25, 2, 0, 0]' : 0.315783}", "{'[3, 0, 6, 0, 0, 6, 29, 0, 26, 25, 2, 0, 0]' : 0.315034}", "{'[3, 0, 6, 0, 0, 6, 29, 0, 26, 25, 2, 0, 0]' : 0.314834}", "{'[3, 0, 6, 0, 0, 6, 29, 0, 26, 25, 2, 0, 0]' : 0.315325}", "{'[3, 0, 6, 0, 0, 6, 29, 0, 26, 25, 2, 0, 0]' : 0.315399}", "{'[3, 0, 6, 0, 0, 6, 29, 0, 26, 25, 2, 0, 0]' : 0.315369}", "{'[3, 0, 6, 0, 0, 6, 29, 0, 26, 25, 2, 0, 0]' : 0.31221}", "{'[3, 0, 6, 0, 0, 6, 29, 0, 26, 25, 2, 0, 0]' : 0.31411}", "{'[3, 0, 6, 0, 0, 6, 29, 0, 26, 25, 2, 0, 0]' : 0.315209}", "{'[3, 0, 6, 0, 0, 6, 29, 0, 26, 25, 2, 0, 0]' : 0.315586}", "{'[3, 0, 6, 0, 0, 6, 29, 0, 26, 25, 2, 0, 0]' : 0.315801}", "{'[3, 0, 6, 0, 0, 6, 29, 0, 26, 25, 2, 0, 0]' : 0.31505}", "{'[3, 0, 6, 0, 0, 6, 29, 0, 26, 25, 2, 0, 0]' : 0.314968}", "{'[3, 0, 6, 0, 0, 6, 29, 0, 26, 25, 2, 0, 0]' : 0.315458}", "{'[3, 0, 6, 0, 0, 6, 29, 0, 26, 25, 2, 0, 0]' : 0.314091}", "{'[3, 0, 6, 0, 0, 6, 29, 0, 26, 25, 2, 0, 0]' : 0.314292}", "{'[3, 0, 6, 0, 0, 6, 29, 0, 26, 25, 2, 0, 0]' : 0.31577}", "{'[3, 0, 6, 0, 0, 6, 29, 0, 26, 25, 2, 0, 0]' : 0.315095}", "{'[3, 0, 6, 0, 0, 6, 29, 0, 26, 25, 2, 0, 0]' : 0.316036}", "{'[3, 0, 6, 0, 0, 6, 29, 0, 26, 25, 2, 0, 0]' : 0.314668}", "{'[3, 0, 6, 0, 0, 6, 29, 0, 26, 25, 2, 0, 0]' : 0.315404}", "{'[3, 0, 6, 0, 0, 6, 29, 0, 26, 25, 2, 0, 0]' : 0.315451}", "{'[3, 0, 6, 0, 0, 6, 29, 0, 26, 25, 2, 0, 0]' : 0.315643}", "{'[3, 0, 6, 0, 0, 6, 29, 0, 26, 25, 2, 0, 0]' : 0.315873}", "{'[3, 0, 6, 0, 0, 6, 29, 0, 26, 25, 2, 0, 0]' : 0.315566}"]
returning from 'run': {'[3, 0, 6, 0, 0, 6, 29, 0, 26, 25, 2, 0, 0]': ([0.310296, 0.313289, 0.315828, 0.315086, 0.315314, 0.315783, 0.315034, 0.314834, 0.315325, 0.315399, 0.315369, 0.31221, 0.31411, 0.315209, 0.315586, 0.315801, 0.31505, 0.314968, 0.315458, 0.314091, 0.314292, 0.31577, 0.315095, 0.316036, 0.314668, 0.315404, 0.315451, 0.315643, 0.315873, 0.315566], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 0, 6, 0, 0, 6, 29, 0, 26, 25, 2, 0, 0]': ([0.310296, 0.313289, 0.315828, 0.315086, 0.315314, 0.315783, 0.315034, 0.314834, 0.315325, 0.315399, 0.315369, 0.31221, 0.31411, 0.315209, 0.315586, 0.315801, 0.31505, 0.314968, 0.315458, 0.314091, 0.314292, 0.31577, 0.315095, 0.316036, 0.314668, 0.315404, 0.315451, 0.315643, 0.315873, 0.315566], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	6
        Additions: 		11250
        Multiplications: 	3360
        Divisions: 		0
        Logical: 		0
        Reads: 			17083
        Writes: 		1784
        Comparisons:		25
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest25.exe __orio_perftest25.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest25.exe  
Program Test Output: 
{'[1, 6, 1, 3, 6, 0, 23, 26, 25, 0, 2, 0, 0]' : 0.241621}
{'[1, 6, 1, 3, 6, 0, 23, 26, 25, 0, 2, 0, 0]' : 0.241343}
{'[1, 6, 1, 3, 6, 0, 23, 26, 25, 0, 2, 0, 0]' : 0.24131}
{'[1, 6, 1, 3, 6, 0, 23, 26, 25, 0, 2, 0, 0]' : 0.241247}
{'[1, 6, 1, 3, 6, 0, 23, 26, 25, 0, 2, 0, 0]' : 0.241478}
{'[1, 6, 1, 3, 6, 0, 23, 26, 25, 0, 2, 0, 0]' : 0.241343}
{'[1, 6, 1, 3, 6, 0, 23, 26, 25, 0, 2, 0, 0]' : 0.241311}
{'[1, 6, 1, 3, 6, 0, 23, 26, 25, 0, 2, 0, 0]' : 0.241451}
{'[1, 6, 1, 3, 6, 0, 23, 26, 25, 0, 2, 0, 0]' : 0.241215}
{'[1, 6, 1, 3, 6, 0, 23, 26, 25, 0, 2, 0, 0]' : 0.241399}
{'[1, 6, 1, 3, 6, 0, 23, 26, 25, 0, 2, 0, 0]' : 0.241222}
{'[1, 6, 1, 3, 6, 0, 23, 26, 25, 0, 2, 0, 0]' : 0.241293}
{'[1, 6, 1, 3, 6, 0, 23, 26, 25, 0, 2, 0, 0]' : 0.241208}
{'[1, 6, 1, 3, 6, 0, 23, 26, 25, 0, 2, 0, 0]' : 0.241353}
{'[1, 6, 1, 3, 6, 0, 23, 26, 25, 0, 2, 0, 0]' : 0.241385}
{'[1, 6, 1, 3, 6, 0, 23, 26, 25, 0, 2, 0, 0]' : 0.241396}
{'[1, 6, 1, 3, 6, 0, 23, 26, 25, 0, 2, 0, 0]' : 0.241264}
{'[1, 6, 1, 3, 6, 0, 23, 26, 25, 0, 2, 0, 0]' : 0.241188}
{'[1, 6, 1, 3, 6, 0, 23, 26, 25, 0, 2, 0, 0]' : 0.241591}
{'[1, 6, 1, 3, 6, 0, 23, 26, 25, 0, 2, 0, 0]' : 0.241226}
{'[1, 6, 1, 3, 6, 0, 23, 26, 25, 0, 2, 0, 0]' : 0.241602}
{'[1, 6, 1, 3, 6, 0, 23, 26, 25, 0, 2, 0, 0]' : 0.241152}
{'[1, 6, 1, 3, 6, 0, 23, 26, 25, 0, 2, 0, 0]' : 0.24155}
{'[1, 6, 1, 3, 6, 0, 23, 26, 25, 0, 2, 0, 0]' : 0.24157}
{'[1, 6, 1, 3, 6, 0, 23, 26, 25, 0, 2, 0, 0]' : 0.241545}
{'[1, 6, 1, 3, 6, 0, 23, 26, 25, 0, 2, 0, 0]' : 0.241243}
{'[1, 6, 1, 3, 6, 0, 23, 26, 25, 0, 2, 0, 0]' : 0.241131}
{'[1, 6, 1, 3, 6, 0, 23, 26, 25, 0, 2, 0, 0]' : 0.241381}
{'[1, 6, 1, 3, 6, 0, 23, 26, 25, 0, 2, 0, 0]' : 0.241422}
{'[1, 6, 1, 3, 6, 0, 23, 26, 25, 0, 2, 0, 0]' : 0.241126}

out:
 ["{'[1, 6, 1, 3, 6, 0, 23, 26, 25, 0, 2, 0, 0]' : 0.241621}", "{'[1, 6, 1, 3, 6, 0, 23, 26, 25, 0, 2, 0, 0]' : 0.241343}", "{'[1, 6, 1, 3, 6, 0, 23, 26, 25, 0, 2, 0, 0]' : 0.24131}", "{'[1, 6, 1, 3, 6, 0, 23, 26, 25, 0, 2, 0, 0]' : 0.241247}", "{'[1, 6, 1, 3, 6, 0, 23, 26, 25, 0, 2, 0, 0]' : 0.241478}", "{'[1, 6, 1, 3, 6, 0, 23, 26, 25, 0, 2, 0, 0]' : 0.241343}", "{'[1, 6, 1, 3, 6, 0, 23, 26, 25, 0, 2, 0, 0]' : 0.241311}", "{'[1, 6, 1, 3, 6, 0, 23, 26, 25, 0, 2, 0, 0]' : 0.241451}", "{'[1, 6, 1, 3, 6, 0, 23, 26, 25, 0, 2, 0, 0]' : 0.241215}", "{'[1, 6, 1, 3, 6, 0, 23, 26, 25, 0, 2, 0, 0]' : 0.241399}", "{'[1, 6, 1, 3, 6, 0, 23, 26, 25, 0, 2, 0, 0]' : 0.241222}", "{'[1, 6, 1, 3, 6, 0, 23, 26, 25, 0, 2, 0, 0]' : 0.241293}", "{'[1, 6, 1, 3, 6, 0, 23, 26, 25, 0, 2, 0, 0]' : 0.241208}", "{'[1, 6, 1, 3, 6, 0, 23, 26, 25, 0, 2, 0, 0]' : 0.241353}", "{'[1, 6, 1, 3, 6, 0, 23, 26, 25, 0, 2, 0, 0]' : 0.241385}", "{'[1, 6, 1, 3, 6, 0, 23, 26, 25, 0, 2, 0, 0]' : 0.241396}", "{'[1, 6, 1, 3, 6, 0, 23, 26, 25, 0, 2, 0, 0]' : 0.241264}", "{'[1, 6, 1, 3, 6, 0, 23, 26, 25, 0, 2, 0, 0]' : 0.241188}", "{'[1, 6, 1, 3, 6, 0, 23, 26, 25, 0, 2, 0, 0]' : 0.241591}", "{'[1, 6, 1, 3, 6, 0, 23, 26, 25, 0, 2, 0, 0]' : 0.241226}", "{'[1, 6, 1, 3, 6, 0, 23, 26, 25, 0, 2, 0, 0]' : 0.241602}", "{'[1, 6, 1, 3, 6, 0, 23, 26, 25, 0, 2, 0, 0]' : 0.241152}", "{'[1, 6, 1, 3, 6, 0, 23, 26, 25, 0, 2, 0, 0]' : 0.24155}", "{'[1, 6, 1, 3, 6, 0, 23, 26, 25, 0, 2, 0, 0]' : 0.24157}", "{'[1, 6, 1, 3, 6, 0, 23, 26, 25, 0, 2, 0, 0]' : 0.241545}", "{'[1, 6, 1, 3, 6, 0, 23, 26, 25, 0, 2, 0, 0]' : 0.241243}", "{'[1, 6, 1, 3, 6, 0, 23, 26, 25, 0, 2, 0, 0]' : 0.241131}", "{'[1, 6, 1, 3, 6, 0, 23, 26, 25, 0, 2, 0, 0]' : 0.241381}", "{'[1, 6, 1, 3, 6, 0, 23, 26, 25, 0, 2, 0, 0]' : 0.241422}", "{'[1, 6, 1, 3, 6, 0, 23, 26, 25, 0, 2, 0, 0]' : 0.241126}"]
returning from 'run': {'[1, 6, 1, 3, 6, 0, 23, 26, 25, 0, 2, 0, 0]': ([0.241621, 0.241343, 0.24131, 0.241247, 0.241478, 0.241343, 0.241311, 0.241451, 0.241215, 0.241399, 0.241222, 0.241293, 0.241208, 0.241353, 0.241385, 0.241396, 0.241264, 0.241188, 0.241591, 0.241226, 0.241602, 0.241152, 0.24155, 0.24157, 0.241545, 0.241243, 0.241131, 0.241381, 0.241422, 0.241126], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 6, 1, 3, 6, 0, 23, 26, 25, 0, 2, 0, 0]': ([0.241621, 0.241343, 0.24131, 0.241247, 0.241478, 0.241343, 0.241311, 0.241451, 0.241215, 0.241399, 0.241222, 0.241293, 0.241208, 0.241353, 0.241385, 0.241396, 0.241264, 0.241188, 0.241591, 0.241226, 0.241602, 0.241152, 0.24155, 0.24157, 0.241545, 0.241243, 0.241131, 0.241381, 0.241422, 0.241126], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	30
        Max loop nest depth: 	6
        Additions: 		9605
        Multiplications: 	2880
        Divisions: 		0
        Logical: 		0
        Reads: 			14670
        Writes: 		1530
        Comparisons:		30
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest26.exe __orio_perftest26.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest26.exe  
Program Test Output: 
{'[1, 6, 6, 1, 6, 6, 0, 26, 0, 29, 1, 1, 0]' : 0.112939}
{'[1, 6, 6, 1, 6, 6, 0, 26, 0, 29, 1, 1, 0]' : 0.112759}
{'[1, 6, 6, 1, 6, 6, 0, 26, 0, 29, 1, 1, 0]' : 0.112767}
{'[1, 6, 6, 1, 6, 6, 0, 26, 0, 29, 1, 1, 0]' : 0.112791}
{'[1, 6, 6, 1, 6, 6, 0, 26, 0, 29, 1, 1, 0]' : 0.112775}
{'[1, 6, 6, 1, 6, 6, 0, 26, 0, 29, 1, 1, 0]' : 0.112694}
{'[1, 6, 6, 1, 6, 6, 0, 26, 0, 29, 1, 1, 0]' : 0.112637}
{'[1, 6, 6, 1, 6, 6, 0, 26, 0, 29, 1, 1, 0]' : 0.112649}
{'[1, 6, 6, 1, 6, 6, 0, 26, 0, 29, 1, 1, 0]' : 0.112773}
{'[1, 6, 6, 1, 6, 6, 0, 26, 0, 29, 1, 1, 0]' : 0.112706}
{'[1, 6, 6, 1, 6, 6, 0, 26, 0, 29, 1, 1, 0]' : 0.112742}
{'[1, 6, 6, 1, 6, 6, 0, 26, 0, 29, 1, 1, 0]' : 0.112719}
{'[1, 6, 6, 1, 6, 6, 0, 26, 0, 29, 1, 1, 0]' : 0.112766}
{'[1, 6, 6, 1, 6, 6, 0, 26, 0, 29, 1, 1, 0]' : 0.112913}
{'[1, 6, 6, 1, 6, 6, 0, 26, 0, 29, 1, 1, 0]' : 0.112768}
{'[1, 6, 6, 1, 6, 6, 0, 26, 0, 29, 1, 1, 0]' : 0.112797}
{'[1, 6, 6, 1, 6, 6, 0, 26, 0, 29, 1, 1, 0]' : 0.112593}
{'[1, 6, 6, 1, 6, 6, 0, 26, 0, 29, 1, 1, 0]' : 0.112609}
{'[1, 6, 6, 1, 6, 6, 0, 26, 0, 29, 1, 1, 0]' : 0.112818}
{'[1, 6, 6, 1, 6, 6, 0, 26, 0, 29, 1, 1, 0]' : 0.112895}
{'[1, 6, 6, 1, 6, 6, 0, 26, 0, 29, 1, 1, 0]' : 0.112972}
{'[1, 6, 6, 1, 6, 6, 0, 26, 0, 29, 1, 1, 0]' : 0.11274}
{'[1, 6, 6, 1, 6, 6, 0, 26, 0, 29, 1, 1, 0]' : 0.112628}
{'[1, 6, 6, 1, 6, 6, 0, 26, 0, 29, 1, 1, 0]' : 0.112947}
{'[1, 6, 6, 1, 6, 6, 0, 26, 0, 29, 1, 1, 0]' : 0.112993}
{'[1, 6, 6, 1, 6, 6, 0, 26, 0, 29, 1, 1, 0]' : 0.112742}
{'[1, 6, 6, 1, 6, 6, 0, 26, 0, 29, 1, 1, 0]' : 0.112603}
{'[1, 6, 6, 1, 6, 6, 0, 26, 0, 29, 1, 1, 0]' : 0.112668}
{'[1, 6, 6, 1, 6, 6, 0, 26, 0, 29, 1, 1, 0]' : 0.113572}
{'[1, 6, 6, 1, 6, 6, 0, 26, 0, 29, 1, 1, 0]' : 0.11547}

out:
 ["{'[1, 6, 6, 1, 6, 6, 0, 26, 0, 29, 1, 1, 0]' : 0.112939}", "{'[1, 6, 6, 1, 6, 6, 0, 26, 0, 29, 1, 1, 0]' : 0.112759}", "{'[1, 6, 6, 1, 6, 6, 0, 26, 0, 29, 1, 1, 0]' : 0.112767}", "{'[1, 6, 6, 1, 6, 6, 0, 26, 0, 29, 1, 1, 0]' : 0.112791}", "{'[1, 6, 6, 1, 6, 6, 0, 26, 0, 29, 1, 1, 0]' : 0.112775}", "{'[1, 6, 6, 1, 6, 6, 0, 26, 0, 29, 1, 1, 0]' : 0.112694}", "{'[1, 6, 6, 1, 6, 6, 0, 26, 0, 29, 1, 1, 0]' : 0.112637}", "{'[1, 6, 6, 1, 6, 6, 0, 26, 0, 29, 1, 1, 0]' : 0.112649}", "{'[1, 6, 6, 1, 6, 6, 0, 26, 0, 29, 1, 1, 0]' : 0.112773}", "{'[1, 6, 6, 1, 6, 6, 0, 26, 0, 29, 1, 1, 0]' : 0.112706}", "{'[1, 6, 6, 1, 6, 6, 0, 26, 0, 29, 1, 1, 0]' : 0.112742}", "{'[1, 6, 6, 1, 6, 6, 0, 26, 0, 29, 1, 1, 0]' : 0.112719}", "{'[1, 6, 6, 1, 6, 6, 0, 26, 0, 29, 1, 1, 0]' : 0.112766}", "{'[1, 6, 6, 1, 6, 6, 0, 26, 0, 29, 1, 1, 0]' : 0.112913}", "{'[1, 6, 6, 1, 6, 6, 0, 26, 0, 29, 1, 1, 0]' : 0.112768}", "{'[1, 6, 6, 1, 6, 6, 0, 26, 0, 29, 1, 1, 0]' : 0.112797}", "{'[1, 6, 6, 1, 6, 6, 0, 26, 0, 29, 1, 1, 0]' : 0.112593}", "{'[1, 6, 6, 1, 6, 6, 0, 26, 0, 29, 1, 1, 0]' : 0.112609}", "{'[1, 6, 6, 1, 6, 6, 0, 26, 0, 29, 1, 1, 0]' : 0.112818}", "{'[1, 6, 6, 1, 6, 6, 0, 26, 0, 29, 1, 1, 0]' : 0.112895}", "{'[1, 6, 6, 1, 6, 6, 0, 26, 0, 29, 1, 1, 0]' : 0.112972}", "{'[1, 6, 6, 1, 6, 6, 0, 26, 0, 29, 1, 1, 0]' : 0.11274}", "{'[1, 6, 6, 1, 6, 6, 0, 26, 0, 29, 1, 1, 0]' : 0.112628}", "{'[1, 6, 6, 1, 6, 6, 0, 26, 0, 29, 1, 1, 0]' : 0.112947}", "{'[1, 6, 6, 1, 6, 6, 0, 26, 0, 29, 1, 1, 0]' : 0.112993}", "{'[1, 6, 6, 1, 6, 6, 0, 26, 0, 29, 1, 1, 0]' : 0.112742}", "{'[1, 6, 6, 1, 6, 6, 0, 26, 0, 29, 1, 1, 0]' : 0.112603}", "{'[1, 6, 6, 1, 6, 6, 0, 26, 0, 29, 1, 1, 0]' : 0.112668}", "{'[1, 6, 6, 1, 6, 6, 0, 26, 0, 29, 1, 1, 0]' : 0.113572}", "{'[1, 6, 6, 1, 6, 6, 0, 26, 0, 29, 1, 1, 0]' : 0.11547}"]
returning from 'run': {'[1, 6, 6, 1, 6, 6, 0, 26, 0, 29, 1, 1, 0]': ([0.112939, 0.112759, 0.112767, 0.112791, 0.112775, 0.112694, 0.112637, 0.112649, 0.112773, 0.112706, 0.112742, 0.112719, 0.112766, 0.112913, 0.112768, 0.112797, 0.112593, 0.112609, 0.112818, 0.112895, 0.112972, 0.11274, 0.112628, 0.112947, 0.112993, 0.112742, 0.112603, 0.112668, 0.113572, 0.11547], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 6, 6, 1, 6, 6, 0, 26, 0, 29, 1, 1, 0]': ([0.112939, 0.112759, 0.112767, 0.112791, 0.112775, 0.112694, 0.112637, 0.112649, 0.112773, 0.112706, 0.112742, 0.112719, 0.112766, 0.112913, 0.112768, 0.112797, 0.112593, 0.112609, 0.112818, 0.112895, 0.112972, 0.11274, 0.112628, 0.112947, 0.112993, 0.112742, 0.112603, 0.112668, 0.113572, 0.11547], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	5
        Additions: 		1924
        Multiplications: 	590
        Divisions: 		0
        Logical: 		0
        Reads: 			3183
        Writes: 		368
        Comparisons:		25
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest27.exe __orio_perftest27.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest27.exe  
Program Test Output: 
{'[0, 6, 4, 6, 6, 0, 16, 3, 0, 24, 0, 0, 2]' : 0.151142}
{'[0, 6, 4, 6, 6, 0, 16, 3, 0, 24, 0, 0, 2]' : 0.15156}
{'[0, 6, 4, 6, 6, 0, 16, 3, 0, 24, 0, 0, 2]' : 0.151614}
{'[0, 6, 4, 6, 6, 0, 16, 3, 0, 24, 0, 0, 2]' : 0.149145}
{'[0, 6, 4, 6, 6, 0, 16, 3, 0, 24, 0, 0, 2]' : 0.147298}
{'[0, 6, 4, 6, 6, 0, 16, 3, 0, 24, 0, 0, 2]' : 0.147545}
{'[0, 6, 4, 6, 6, 0, 16, 3, 0, 24, 0, 0, 2]' : 0.148403}
{'[0, 6, 4, 6, 6, 0, 16, 3, 0, 24, 0, 0, 2]' : 0.151572}
{'[0, 6, 4, 6, 6, 0, 16, 3, 0, 24, 0, 0, 2]' : 0.151549}
{'[0, 6, 4, 6, 6, 0, 16, 3, 0, 24, 0, 0, 2]' : 0.151584}
{'[0, 6, 4, 6, 6, 0, 16, 3, 0, 24, 0, 0, 2]' : 0.147859}
{'[0, 6, 4, 6, 6, 0, 16, 3, 0, 24, 0, 0, 2]' : 0.14725}
{'[0, 6, 4, 6, 6, 0, 16, 3, 0, 24, 0, 0, 2]' : 0.147522}
{'[0, 6, 4, 6, 6, 0, 16, 3, 0, 24, 0, 0, 2]' : 0.147701}
{'[0, 6, 4, 6, 6, 0, 16, 3, 0, 24, 0, 0, 2]' : 0.147289}
{'[0, 6, 4, 6, 6, 0, 16, 3, 0, 24, 0, 0, 2]' : 0.147359}
{'[0, 6, 4, 6, 6, 0, 16, 3, 0, 24, 0, 0, 2]' : 0.147343}
{'[0, 6, 4, 6, 6, 0, 16, 3, 0, 24, 0, 0, 2]' : 0.147202}
{'[0, 6, 4, 6, 6, 0, 16, 3, 0, 24, 0, 0, 2]' : 0.147412}
{'[0, 6, 4, 6, 6, 0, 16, 3, 0, 24, 0, 0, 2]' : 0.14717}
{'[0, 6, 4, 6, 6, 0, 16, 3, 0, 24, 0, 0, 2]' : 0.147999}
{'[0, 6, 4, 6, 6, 0, 16, 3, 0, 24, 0, 0, 2]' : 0.147302}
{'[0, 6, 4, 6, 6, 0, 16, 3, 0, 24, 0, 0, 2]' : 0.145191}
{'[0, 6, 4, 6, 6, 0, 16, 3, 0, 24, 0, 0, 2]' : 0.144078}
{'[0, 6, 4, 6, 6, 0, 16, 3, 0, 24, 0, 0, 2]' : 0.147314}
{'[0, 6, 4, 6, 6, 0, 16, 3, 0, 24, 0, 0, 2]' : 0.147344}
{'[0, 6, 4, 6, 6, 0, 16, 3, 0, 24, 0, 0, 2]' : 0.147706}
{'[0, 6, 4, 6, 6, 0, 16, 3, 0, 24, 0, 0, 2]' : 0.147494}
{'[0, 6, 4, 6, 6, 0, 16, 3, 0, 24, 0, 0, 2]' : 0.147424}
{'[0, 6, 4, 6, 6, 0, 16, 3, 0, 24, 0, 0, 2]' : 0.147381}

out:
 ["{'[0, 6, 4, 6, 6, 0, 16, 3, 0, 24, 0, 0, 2]' : 0.151142}", "{'[0, 6, 4, 6, 6, 0, 16, 3, 0, 24, 0, 0, 2]' : 0.15156}", "{'[0, 6, 4, 6, 6, 0, 16, 3, 0, 24, 0, 0, 2]' : 0.151614}", "{'[0, 6, 4, 6, 6, 0, 16, 3, 0, 24, 0, 0, 2]' : 0.149145}", "{'[0, 6, 4, 6, 6, 0, 16, 3, 0, 24, 0, 0, 2]' : 0.147298}", "{'[0, 6, 4, 6, 6, 0, 16, 3, 0, 24, 0, 0, 2]' : 0.147545}", "{'[0, 6, 4, 6, 6, 0, 16, 3, 0, 24, 0, 0, 2]' : 0.148403}", "{'[0, 6, 4, 6, 6, 0, 16, 3, 0, 24, 0, 0, 2]' : 0.151572}", "{'[0, 6, 4, 6, 6, 0, 16, 3, 0, 24, 0, 0, 2]' : 0.151549}", "{'[0, 6, 4, 6, 6, 0, 16, 3, 0, 24, 0, 0, 2]' : 0.151584}", "{'[0, 6, 4, 6, 6, 0, 16, 3, 0, 24, 0, 0, 2]' : 0.147859}", "{'[0, 6, 4, 6, 6, 0, 16, 3, 0, 24, 0, 0, 2]' : 0.14725}", "{'[0, 6, 4, 6, 6, 0, 16, 3, 0, 24, 0, 0, 2]' : 0.147522}", "{'[0, 6, 4, 6, 6, 0, 16, 3, 0, 24, 0, 0, 2]' : 0.147701}", "{'[0, 6, 4, 6, 6, 0, 16, 3, 0, 24, 0, 0, 2]' : 0.147289}", "{'[0, 6, 4, 6, 6, 0, 16, 3, 0, 24, 0, 0, 2]' : 0.147359}", "{'[0, 6, 4, 6, 6, 0, 16, 3, 0, 24, 0, 0, 2]' : 0.147343}", "{'[0, 6, 4, 6, 6, 0, 16, 3, 0, 24, 0, 0, 2]' : 0.147202}", "{'[0, 6, 4, 6, 6, 0, 16, 3, 0, 24, 0, 0, 2]' : 0.147412}", "{'[0, 6, 4, 6, 6, 0, 16, 3, 0, 24, 0, 0, 2]' : 0.14717}", "{'[0, 6, 4, 6, 6, 0, 16, 3, 0, 24, 0, 0, 2]' : 0.147999}", "{'[0, 6, 4, 6, 6, 0, 16, 3, 0, 24, 0, 0, 2]' : 0.147302}", "{'[0, 6, 4, 6, 6, 0, 16, 3, 0, 24, 0, 0, 2]' : 0.145191}", "{'[0, 6, 4, 6, 6, 0, 16, 3, 0, 24, 0, 0, 2]' : 0.144078}", "{'[0, 6, 4, 6, 6, 0, 16, 3, 0, 24, 0, 0, 2]' : 0.147314}", "{'[0, 6, 4, 6, 6, 0, 16, 3, 0, 24, 0, 0, 2]' : 0.147344}", "{'[0, 6, 4, 6, 6, 0, 16, 3, 0, 24, 0, 0, 2]' : 0.147706}", "{'[0, 6, 4, 6, 6, 0, 16, 3, 0, 24, 0, 0, 2]' : 0.147494}", "{'[0, 6, 4, 6, 6, 0, 16, 3, 0, 24, 0, 0, 2]' : 0.147424}", "{'[0, 6, 4, 6, 6, 0, 16, 3, 0, 24, 0, 0, 2]' : 0.147381}"]
returning from 'run': {'[0, 6, 4, 6, 6, 0, 16, 3, 0, 24, 0, 0, 2]': ([0.151142, 0.15156, 0.151614, 0.149145, 0.147298, 0.147545, 0.148403, 0.151572, 0.151549, 0.151584, 0.147859, 0.14725, 0.147522, 0.147701, 0.147289, 0.147359, 0.147343, 0.147202, 0.147412, 0.14717, 0.147999, 0.147302, 0.145191, 0.144078, 0.147314, 0.147344, 0.147706, 0.147494, 0.147424, 0.147381], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 4, 6, 6, 0, 16, 3, 0, 24, 0, 0, 2]': ([0.151142, 0.15156, 0.151614, 0.149145, 0.147298, 0.147545, 0.148403, 0.151572, 0.151549, 0.151584, 0.147859, 0.14725, 0.147522, 0.147701, 0.147289, 0.147359, 0.147343, 0.147202, 0.147412, 0.14717, 0.147999, 0.147302, 0.145191, 0.144078, 0.147314, 0.147344, 0.147706, 0.147494, 0.147424, 0.147381], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		416
        Multiplications: 	174
        Divisions: 		0
        Logical: 		0
        Reads: 			955
        Writes: 		113
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest28.exe __orio_perftest28.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest28.exe  
Program Test Output: 
{'[0, 3, 1, 6, 0, 0, 1, 0, 26, 25, 0, 2, 0]' : 0.231894}
{'[0, 3, 1, 6, 0, 0, 1, 0, 26, 25, 0, 2, 0]' : 0.231631}
{'[0, 3, 1, 6, 0, 0, 1, 0, 26, 25, 0, 2, 0]' : 0.211652}
{'[0, 3, 1, 6, 0, 0, 1, 0, 26, 25, 0, 2, 0]' : 0.20592}
{'[0, 3, 1, 6, 0, 0, 1, 0, 26, 25, 0, 2, 0]' : 0.206012}
{'[0, 3, 1, 6, 0, 0, 1, 0, 26, 25, 0, 2, 0]' : 0.205899}
{'[0, 3, 1, 6, 0, 0, 1, 0, 26, 25, 0, 2, 0]' : 0.204042}
{'[0, 3, 1, 6, 0, 0, 1, 0, 26, 25, 0, 2, 0]' : 0.205778}
{'[0, 3, 1, 6, 0, 0, 1, 0, 26, 25, 0, 2, 0]' : 0.206154}
{'[0, 3, 1, 6, 0, 0, 1, 0, 26, 25, 0, 2, 0]' : 0.206128}
{'[0, 3, 1, 6, 0, 0, 1, 0, 26, 25, 0, 2, 0]' : 0.205958}
{'[0, 3, 1, 6, 0, 0, 1, 0, 26, 25, 0, 2, 0]' : 0.205976}
{'[0, 3, 1, 6, 0, 0, 1, 0, 26, 25, 0, 2, 0]' : 0.206073}
{'[0, 3, 1, 6, 0, 0, 1, 0, 26, 25, 0, 2, 0]' : 0.205985}
{'[0, 3, 1, 6, 0, 0, 1, 0, 26, 25, 0, 2, 0]' : 0.206025}
{'[0, 3, 1, 6, 0, 0, 1, 0, 26, 25, 0, 2, 0]' : 0.205956}
{'[0, 3, 1, 6, 0, 0, 1, 0, 26, 25, 0, 2, 0]' : 0.205988}
{'[0, 3, 1, 6, 0, 0, 1, 0, 26, 25, 0, 2, 0]' : 0.205933}
{'[0, 3, 1, 6, 0, 0, 1, 0, 26, 25, 0, 2, 0]' : 0.206221}
{'[0, 3, 1, 6, 0, 0, 1, 0, 26, 25, 0, 2, 0]' : 0.206069}
{'[0, 3, 1, 6, 0, 0, 1, 0, 26, 25, 0, 2, 0]' : 0.205956}
{'[0, 3, 1, 6, 0, 0, 1, 0, 26, 25, 0, 2, 0]' : 0.206073}
{'[0, 3, 1, 6, 0, 0, 1, 0, 26, 25, 0, 2, 0]' : 0.205945}
{'[0, 3, 1, 6, 0, 0, 1, 0, 26, 25, 0, 2, 0]' : 0.205949}
{'[0, 3, 1, 6, 0, 0, 1, 0, 26, 25, 0, 2, 0]' : 0.206048}
{'[0, 3, 1, 6, 0, 0, 1, 0, 26, 25, 0, 2, 0]' : 0.206052}
{'[0, 3, 1, 6, 0, 0, 1, 0, 26, 25, 0, 2, 0]' : 0.206008}
{'[0, 3, 1, 6, 0, 0, 1, 0, 26, 25, 0, 2, 0]' : 0.205979}
{'[0, 3, 1, 6, 0, 0, 1, 0, 26, 25, 0, 2, 0]' : 0.206354}
{'[0, 3, 1, 6, 0, 0, 1, 0, 26, 25, 0, 2, 0]' : 0.205975}

out:
 ["{'[0, 3, 1, 6, 0, 0, 1, 0, 26, 25, 0, 2, 0]' : 0.231894}", "{'[0, 3, 1, 6, 0, 0, 1, 0, 26, 25, 0, 2, 0]' : 0.231631}", "{'[0, 3, 1, 6, 0, 0, 1, 0, 26, 25, 0, 2, 0]' : 0.211652}", "{'[0, 3, 1, 6, 0, 0, 1, 0, 26, 25, 0, 2, 0]' : 0.20592}", "{'[0, 3, 1, 6, 0, 0, 1, 0, 26, 25, 0, 2, 0]' : 0.206012}", "{'[0, 3, 1, 6, 0, 0, 1, 0, 26, 25, 0, 2, 0]' : 0.205899}", "{'[0, 3, 1, 6, 0, 0, 1, 0, 26, 25, 0, 2, 0]' : 0.204042}", "{'[0, 3, 1, 6, 0, 0, 1, 0, 26, 25, 0, 2, 0]' : 0.205778}", "{'[0, 3, 1, 6, 0, 0, 1, 0, 26, 25, 0, 2, 0]' : 0.206154}", "{'[0, 3, 1, 6, 0, 0, 1, 0, 26, 25, 0, 2, 0]' : 0.206128}", "{'[0, 3, 1, 6, 0, 0, 1, 0, 26, 25, 0, 2, 0]' : 0.205958}", "{'[0, 3, 1, 6, 0, 0, 1, 0, 26, 25, 0, 2, 0]' : 0.205976}", "{'[0, 3, 1, 6, 0, 0, 1, 0, 26, 25, 0, 2, 0]' : 0.206073}", "{'[0, 3, 1, 6, 0, 0, 1, 0, 26, 25, 0, 2, 0]' : 0.205985}", "{'[0, 3, 1, 6, 0, 0, 1, 0, 26, 25, 0, 2, 0]' : 0.206025}", "{'[0, 3, 1, 6, 0, 0, 1, 0, 26, 25, 0, 2, 0]' : 0.205956}", "{'[0, 3, 1, 6, 0, 0, 1, 0, 26, 25, 0, 2, 0]' : 0.205988}", "{'[0, 3, 1, 6, 0, 0, 1, 0, 26, 25, 0, 2, 0]' : 0.205933}", "{'[0, 3, 1, 6, 0, 0, 1, 0, 26, 25, 0, 2, 0]' : 0.206221}", "{'[0, 3, 1, 6, 0, 0, 1, 0, 26, 25, 0, 2, 0]' : 0.206069}", "{'[0, 3, 1, 6, 0, 0, 1, 0, 26, 25, 0, 2, 0]' : 0.205956}", "{'[0, 3, 1, 6, 0, 0, 1, 0, 26, 25, 0, 2, 0]' : 0.206073}", "{'[0, 3, 1, 6, 0, 0, 1, 0, 26, 25, 0, 2, 0]' : 0.205945}", "{'[0, 3, 1, 6, 0, 0, 1, 0, 26, 25, 0, 2, 0]' : 0.205949}", "{'[0, 3, 1, 6, 0, 0, 1, 0, 26, 25, 0, 2, 0]' : 0.206048}", "{'[0, 3, 1, 6, 0, 0, 1, 0, 26, 25, 0, 2, 0]' : 0.206052}", "{'[0, 3, 1, 6, 0, 0, 1, 0, 26, 25, 0, 2, 0]' : 0.206008}", "{'[0, 3, 1, 6, 0, 0, 1, 0, 26, 25, 0, 2, 0]' : 0.205979}", "{'[0, 3, 1, 6, 0, 0, 1, 0, 26, 25, 0, 2, 0]' : 0.206354}", "{'[0, 3, 1, 6, 0, 0, 1, 0, 26, 25, 0, 2, 0]' : 0.205975}"]
returning from 'run': {'[0, 3, 1, 6, 0, 0, 1, 0, 26, 25, 0, 2, 0]': ([0.231894, 0.231631, 0.211652, 0.20592, 0.206012, 0.205899, 0.204042, 0.205778, 0.206154, 0.206128, 0.205958, 0.205976, 0.206073, 0.205985, 0.206025, 0.205956, 0.205988, 0.205933, 0.206221, 0.206069, 0.205956, 0.206073, 0.205945, 0.205949, 0.206048, 0.206052, 0.206008, 0.205979, 0.206354, 0.205975], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 3, 1, 6, 0, 0, 1, 0, 26, 25, 0, 2, 0]': ([0.231894, 0.231631, 0.211652, 0.20592, 0.206012, 0.205899, 0.204042, 0.205778, 0.206154, 0.206128, 0.205958, 0.205976, 0.206073, 0.205985, 0.206025, 0.205956, 0.205988, 0.205933, 0.206221, 0.206069, 0.205956, 0.206073, 0.205945, 0.205949, 0.206048, 0.206052, 0.206008, 0.205979, 0.206354, 0.205975], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	63
        Max loop nest depth: 	4
        Additions: 		7709
        Multiplications: 	2200
        Divisions: 		0
        Logical: 		0
        Reads: 			11639
        Writes: 		1279
        Comparisons:		63
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest29.exe __orio_perftest29.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest29.exe  
Program Test Output: 
{'[1, 0, 6, 0, 6, 0, 26, 23, 9, 0, 0, 2, 0]' : 0.23081}
{'[1, 0, 6, 0, 6, 0, 26, 23, 9, 0, 0, 2, 0]' : 0.230342}
{'[1, 0, 6, 0, 6, 0, 26, 23, 9, 0, 0, 2, 0]' : 0.207133}
{'[1, 0, 6, 0, 6, 0, 26, 23, 9, 0, 0, 2, 0]' : 0.206229}
{'[1, 0, 6, 0, 6, 0, 26, 23, 9, 0, 0, 2, 0]' : 0.20622}
{'[1, 0, 6, 0, 6, 0, 26, 23, 9, 0, 0, 2, 0]' : 0.206292}
{'[1, 0, 6, 0, 6, 0, 26, 23, 9, 0, 0, 2, 0]' : 0.2065}
{'[1, 0, 6, 0, 6, 0, 26, 23, 9, 0, 0, 2, 0]' : 0.206369}
{'[1, 0, 6, 0, 6, 0, 26, 23, 9, 0, 0, 2, 0]' : 0.206327}
{'[1, 0, 6, 0, 6, 0, 26, 23, 9, 0, 0, 2, 0]' : 0.206326}
{'[1, 0, 6, 0, 6, 0, 26, 23, 9, 0, 0, 2, 0]' : 0.206331}
{'[1, 0, 6, 0, 6, 0, 26, 23, 9, 0, 0, 2, 0]' : 0.206426}
{'[1, 0, 6, 0, 6, 0, 26, 23, 9, 0, 0, 2, 0]' : 0.20638}
{'[1, 0, 6, 0, 6, 0, 26, 23, 9, 0, 0, 2, 0]' : 0.206379}
{'[1, 0, 6, 0, 6, 0, 26, 23, 9, 0, 0, 2, 0]' : 0.206339}
{'[1, 0, 6, 0, 6, 0, 26, 23, 9, 0, 0, 2, 0]' : 0.206558}
{'[1, 0, 6, 0, 6, 0, 26, 23, 9, 0, 0, 2, 0]' : 0.206321}
{'[1, 0, 6, 0, 6, 0, 26, 23, 9, 0, 0, 2, 0]' : 0.206333}
{'[1, 0, 6, 0, 6, 0, 26, 23, 9, 0, 0, 2, 0]' : 0.206365}
{'[1, 0, 6, 0, 6, 0, 26, 23, 9, 0, 0, 2, 0]' : 0.206357}
{'[1, 0, 6, 0, 6, 0, 26, 23, 9, 0, 0, 2, 0]' : 0.206365}
{'[1, 0, 6, 0, 6, 0, 26, 23, 9, 0, 0, 2, 0]' : 0.206483}
{'[1, 0, 6, 0, 6, 0, 26, 23, 9, 0, 0, 2, 0]' : 0.206371}
{'[1, 0, 6, 0, 6, 0, 26, 23, 9, 0, 0, 2, 0]' : 0.206372}
{'[1, 0, 6, 0, 6, 0, 26, 23, 9, 0, 0, 2, 0]' : 0.206346}
{'[1, 0, 6, 0, 6, 0, 26, 23, 9, 0, 0, 2, 0]' : 0.206524}
{'[1, 0, 6, 0, 6, 0, 26, 23, 9, 0, 0, 2, 0]' : 0.206354}
{'[1, 0, 6, 0, 6, 0, 26, 23, 9, 0, 0, 2, 0]' : 0.20634}
{'[1, 0, 6, 0, 6, 0, 26, 23, 9, 0, 0, 2, 0]' : 0.206396}
{'[1, 0, 6, 0, 6, 0, 26, 23, 9, 0, 0, 2, 0]' : 0.206359}

out:
 ["{'[1, 0, 6, 0, 6, 0, 26, 23, 9, 0, 0, 2, 0]' : 0.23081}", "{'[1, 0, 6, 0, 6, 0, 26, 23, 9, 0, 0, 2, 0]' : 0.230342}", "{'[1, 0, 6, 0, 6, 0, 26, 23, 9, 0, 0, 2, 0]' : 0.207133}", "{'[1, 0, 6, 0, 6, 0, 26, 23, 9, 0, 0, 2, 0]' : 0.206229}", "{'[1, 0, 6, 0, 6, 0, 26, 23, 9, 0, 0, 2, 0]' : 0.20622}", "{'[1, 0, 6, 0, 6, 0, 26, 23, 9, 0, 0, 2, 0]' : 0.206292}", "{'[1, 0, 6, 0, 6, 0, 26, 23, 9, 0, 0, 2, 0]' : 0.2065}", "{'[1, 0, 6, 0, 6, 0, 26, 23, 9, 0, 0, 2, 0]' : 0.206369}", "{'[1, 0, 6, 0, 6, 0, 26, 23, 9, 0, 0, 2, 0]' : 0.206327}", "{'[1, 0, 6, 0, 6, 0, 26, 23, 9, 0, 0, 2, 0]' : 0.206326}", "{'[1, 0, 6, 0, 6, 0, 26, 23, 9, 0, 0, 2, 0]' : 0.206331}", "{'[1, 0, 6, 0, 6, 0, 26, 23, 9, 0, 0, 2, 0]' : 0.206426}", "{'[1, 0, 6, 0, 6, 0, 26, 23, 9, 0, 0, 2, 0]' : 0.20638}", "{'[1, 0, 6, 0, 6, 0, 26, 23, 9, 0, 0, 2, 0]' : 0.206379}", "{'[1, 0, 6, 0, 6, 0, 26, 23, 9, 0, 0, 2, 0]' : 0.206339}", "{'[1, 0, 6, 0, 6, 0, 26, 23, 9, 0, 0, 2, 0]' : 0.206558}", "{'[1, 0, 6, 0, 6, 0, 26, 23, 9, 0, 0, 2, 0]' : 0.206321}", "{'[1, 0, 6, 0, 6, 0, 26, 23, 9, 0, 0, 2, 0]' : 0.206333}", "{'[1, 0, 6, 0, 6, 0, 26, 23, 9, 0, 0, 2, 0]' : 0.206365}", "{'[1, 0, 6, 0, 6, 0, 26, 23, 9, 0, 0, 2, 0]' : 0.206357}", "{'[1, 0, 6, 0, 6, 0, 26, 23, 9, 0, 0, 2, 0]' : 0.206365}", "{'[1, 0, 6, 0, 6, 0, 26, 23, 9, 0, 0, 2, 0]' : 0.206483}", "{'[1, 0, 6, 0, 6, 0, 26, 23, 9, 0, 0, 2, 0]' : 0.206371}", "{'[1, 0, 6, 0, 6, 0, 26, 23, 9, 0, 0, 2, 0]' : 0.206372}", "{'[1, 0, 6, 0, 6, 0, 26, 23, 9, 0, 0, 2, 0]' : 0.206346}", "{'[1, 0, 6, 0, 6, 0, 26, 23, 9, 0, 0, 2, 0]' : 0.206524}", "{'[1, 0, 6, 0, 6, 0, 26, 23, 9, 0, 0, 2, 0]' : 0.206354}", "{'[1, 0, 6, 0, 6, 0, 26, 23, 9, 0, 0, 2, 0]' : 0.20634}", "{'[1, 0, 6, 0, 6, 0, 26, 23, 9, 0, 0, 2, 0]' : 0.206396}", "{'[1, 0, 6, 0, 6, 0, 26, 23, 9, 0, 0, 2, 0]' : 0.206359}"]
returning from 'run': {'[1, 0, 6, 0, 6, 0, 26, 23, 9, 0, 0, 2, 0]': ([0.23081, 0.230342, 0.207133, 0.206229, 0.20622, 0.206292, 0.2065, 0.206369, 0.206327, 0.206326, 0.206331, 0.206426, 0.20638, 0.206379, 0.206339, 0.206558, 0.206321, 0.206333, 0.206365, 0.206357, 0.206365, 0.206483, 0.206371, 0.206372, 0.206346, 0.206524, 0.206354, 0.20634, 0.206396, 0.206359], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 6, 0, 6, 0, 26, 23, 9, 0, 0, 2, 0]': ([0.23081, 0.230342, 0.207133, 0.206229, 0.20622, 0.206292, 0.2065, 0.206369, 0.206327, 0.206326, 0.206331, 0.206426, 0.20638, 0.206379, 0.206339, 0.206558, 0.206321, 0.206333, 0.206365, 0.206357, 0.206365, 0.206483, 0.206371, 0.206372, 0.206346, 0.206524, 0.206354, 0.20634, 0.206396, 0.206359], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	4
        Additions: 		7480
        Multiplications: 	2240
        Divisions: 		0
        Logical: 		0
        Reads: 			11388
        Writes: 		1187
        Comparisons:		18
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest30.exe __orio_perftest30.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest30.exe  
Program Test Output: 
{'[6, 0, 2, 0, 0, 0, 1, 25, 0, 29, 1, 0, 0]' : 0.123916}
{'[6, 0, 2, 0, 0, 0, 1, 25, 0, 29, 1, 0, 0]' : 0.123868}
{'[6, 0, 2, 0, 0, 0, 1, 25, 0, 29, 1, 0, 0]' : 0.123747}
{'[6, 0, 2, 0, 0, 0, 1, 25, 0, 29, 1, 0, 0]' : 0.123821}
{'[6, 0, 2, 0, 0, 0, 1, 25, 0, 29, 1, 0, 0]' : 0.123638}
{'[6, 0, 2, 0, 0, 0, 1, 25, 0, 29, 1, 0, 0]' : 0.123737}
{'[6, 0, 2, 0, 0, 0, 1, 25, 0, 29, 1, 0, 0]' : 0.123771}
{'[6, 0, 2, 0, 0, 0, 1, 25, 0, 29, 1, 0, 0]' : 0.123921}
{'[6, 0, 2, 0, 0, 0, 1, 25, 0, 29, 1, 0, 0]' : 0.12371}
{'[6, 0, 2, 0, 0, 0, 1, 25, 0, 29, 1, 0, 0]' : 0.123717}
{'[6, 0, 2, 0, 0, 0, 1, 25, 0, 29, 1, 0, 0]' : 0.123637}
{'[6, 0, 2, 0, 0, 0, 1, 25, 0, 29, 1, 0, 0]' : 0.123864}
{'[6, 0, 2, 0, 0, 0, 1, 25, 0, 29, 1, 0, 0]' : 0.123705}
{'[6, 0, 2, 0, 0, 0, 1, 25, 0, 29, 1, 0, 0]' : 0.123731}
{'[6, 0, 2, 0, 0, 0, 1, 25, 0, 29, 1, 0, 0]' : 0.12383}
{'[6, 0, 2, 0, 0, 0, 1, 25, 0, 29, 1, 0, 0]' : 0.123919}
{'[6, 0, 2, 0, 0, 0, 1, 25, 0, 29, 1, 0, 0]' : 0.123777}
{'[6, 0, 2, 0, 0, 0, 1, 25, 0, 29, 1, 0, 0]' : 0.123737}
{'[6, 0, 2, 0, 0, 0, 1, 25, 0, 29, 1, 0, 0]' : 0.123647}
{'[6, 0, 2, 0, 0, 0, 1, 25, 0, 29, 1, 0, 0]' : 0.123854}
{'[6, 0, 2, 0, 0, 0, 1, 25, 0, 29, 1, 0, 0]' : 0.123737}
{'[6, 0, 2, 0, 0, 0, 1, 25, 0, 29, 1, 0, 0]' : 0.123662}
{'[6, 0, 2, 0, 0, 0, 1, 25, 0, 29, 1, 0, 0]' : 0.123785}
{'[6, 0, 2, 0, 0, 0, 1, 25, 0, 29, 1, 0, 0]' : 0.123757}
{'[6, 0, 2, 0, 0, 0, 1, 25, 0, 29, 1, 0, 0]' : 0.123738}
{'[6, 0, 2, 0, 0, 0, 1, 25, 0, 29, 1, 0, 0]' : 0.123792}
{'[6, 0, 2, 0, 0, 0, 1, 25, 0, 29, 1, 0, 0]' : 0.122588}
{'[6, 0, 2, 0, 0, 0, 1, 25, 0, 29, 1, 0, 0]' : 0.121678}
{'[6, 0, 2, 0, 0, 0, 1, 25, 0, 29, 1, 0, 0]' : 0.121274}
{'[6, 0, 2, 0, 0, 0, 1, 25, 0, 29, 1, 0, 0]' : 0.121343}

out:
 ["{'[6, 0, 2, 0, 0, 0, 1, 25, 0, 29, 1, 0, 0]' : 0.123916}", "{'[6, 0, 2, 0, 0, 0, 1, 25, 0, 29, 1, 0, 0]' : 0.123868}", "{'[6, 0, 2, 0, 0, 0, 1, 25, 0, 29, 1, 0, 0]' : 0.123747}", "{'[6, 0, 2, 0, 0, 0, 1, 25, 0, 29, 1, 0, 0]' : 0.123821}", "{'[6, 0, 2, 0, 0, 0, 1, 25, 0, 29, 1, 0, 0]' : 0.123638}", "{'[6, 0, 2, 0, 0, 0, 1, 25, 0, 29, 1, 0, 0]' : 0.123737}", "{'[6, 0, 2, 0, 0, 0, 1, 25, 0, 29, 1, 0, 0]' : 0.123771}", "{'[6, 0, 2, 0, 0, 0, 1, 25, 0, 29, 1, 0, 0]' : 0.123921}", "{'[6, 0, 2, 0, 0, 0, 1, 25, 0, 29, 1, 0, 0]' : 0.12371}", "{'[6, 0, 2, 0, 0, 0, 1, 25, 0, 29, 1, 0, 0]' : 0.123717}", "{'[6, 0, 2, 0, 0, 0, 1, 25, 0, 29, 1, 0, 0]' : 0.123637}", "{'[6, 0, 2, 0, 0, 0, 1, 25, 0, 29, 1, 0, 0]' : 0.123864}", "{'[6, 0, 2, 0, 0, 0, 1, 25, 0, 29, 1, 0, 0]' : 0.123705}", "{'[6, 0, 2, 0, 0, 0, 1, 25, 0, 29, 1, 0, 0]' : 0.123731}", "{'[6, 0, 2, 0, 0, 0, 1, 25, 0, 29, 1, 0, 0]' : 0.12383}", "{'[6, 0, 2, 0, 0, 0, 1, 25, 0, 29, 1, 0, 0]' : 0.123919}", "{'[6, 0, 2, 0, 0, 0, 1, 25, 0, 29, 1, 0, 0]' : 0.123777}", "{'[6, 0, 2, 0, 0, 0, 1, 25, 0, 29, 1, 0, 0]' : 0.123737}", "{'[6, 0, 2, 0, 0, 0, 1, 25, 0, 29, 1, 0, 0]' : 0.123647}", "{'[6, 0, 2, 0, 0, 0, 1, 25, 0, 29, 1, 0, 0]' : 0.123854}", "{'[6, 0, 2, 0, 0, 0, 1, 25, 0, 29, 1, 0, 0]' : 0.123737}", "{'[6, 0, 2, 0, 0, 0, 1, 25, 0, 29, 1, 0, 0]' : 0.123662}", "{'[6, 0, 2, 0, 0, 0, 1, 25, 0, 29, 1, 0, 0]' : 0.123785}", "{'[6, 0, 2, 0, 0, 0, 1, 25, 0, 29, 1, 0, 0]' : 0.123757}", "{'[6, 0, 2, 0, 0, 0, 1, 25, 0, 29, 1, 0, 0]' : 0.123738}", "{'[6, 0, 2, 0, 0, 0, 1, 25, 0, 29, 1, 0, 0]' : 0.123792}", "{'[6, 0, 2, 0, 0, 0, 1, 25, 0, 29, 1, 0, 0]' : 0.122588}", "{'[6, 0, 2, 0, 0, 0, 1, 25, 0, 29, 1, 0, 0]' : 0.121678}", "{'[6, 0, 2, 0, 0, 0, 1, 25, 0, 29, 1, 0, 0]' : 0.121274}", "{'[6, 0, 2, 0, 0, 0, 1, 25, 0, 29, 1, 0, 0]' : 0.121343}"]
returning from 'run': {'[6, 0, 2, 0, 0, 0, 1, 25, 0, 29, 1, 0, 0]': ([0.123916, 0.123868, 0.123747, 0.123821, 0.123638, 0.123737, 0.123771, 0.123921, 0.12371, 0.123717, 0.123637, 0.123864, 0.123705, 0.123731, 0.12383, 0.123919, 0.123777, 0.123737, 0.123647, 0.123854, 0.123737, 0.123662, 0.123785, 0.123757, 0.123738, 0.123792, 0.122588, 0.121678, 0.121274, 0.121343], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 2, 0, 0, 0, 1, 25, 0, 29, 1, 0, 0]': ([0.123916, 0.123868, 0.123747, 0.123821, 0.123638, 0.123737, 0.123771, 0.123921, 0.12371, 0.123717, 0.123637, 0.123864, 0.123705, 0.123731, 0.12383, 0.123919, 0.123777, 0.123737, 0.123647, 0.123854, 0.123737, 0.123662, 0.123785, 0.123757, 0.123738, 0.123792, 0.122588, 0.121678, 0.121274, 0.121343], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	6
        Additions: 		312
        Multiplications: 	112
        Divisions: 		0
        Logical: 		0
        Reads: 			682
        Writes: 		99
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest31.exe __orio_perftest31.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest31.exe  
Program Test Output: 
{'[5, 1, 6, 6, 6, 0, 16, 0, 26, 26, 0, 0, 0]' : 0.211405}
{'[5, 1, 6, 6, 6, 0, 16, 0, 26, 26, 0, 0, 0]' : 0.187895}
{'[5, 1, 6, 6, 6, 0, 16, 0, 26, 26, 0, 0, 0]' : 0.175798}
{'[5, 1, 6, 6, 6, 0, 16, 0, 26, 26, 0, 0, 0]' : 0.175525}
{'[5, 1, 6, 6, 6, 0, 16, 0, 26, 26, 0, 0, 0]' : 0.175536}
{'[5, 1, 6, 6, 6, 0, 16, 0, 26, 26, 0, 0, 0]' : 0.175521}
{'[5, 1, 6, 6, 6, 0, 16, 0, 26, 26, 0, 0, 0]' : 0.175624}
{'[5, 1, 6, 6, 6, 0, 16, 0, 26, 26, 0, 0, 0]' : 0.17554}
{'[5, 1, 6, 6, 6, 0, 16, 0, 26, 26, 0, 0, 0]' : 0.175548}
{'[5, 1, 6, 6, 6, 0, 16, 0, 26, 26, 0, 0, 0]' : 0.175767}
{'[5, 1, 6, 6, 6, 0, 16, 0, 26, 26, 0, 0, 0]' : 0.175512}
{'[5, 1, 6, 6, 6, 0, 16, 0, 26, 26, 0, 0, 0]' : 0.175647}
{'[5, 1, 6, 6, 6, 0, 16, 0, 26, 26, 0, 0, 0]' : 0.175863}
{'[5, 1, 6, 6, 6, 0, 16, 0, 26, 26, 0, 0, 0]' : 0.17556}
{'[5, 1, 6, 6, 6, 0, 16, 0, 26, 26, 0, 0, 0]' : 0.175575}
{'[5, 1, 6, 6, 6, 0, 16, 0, 26, 26, 0, 0, 0]' : 0.175533}
{'[5, 1, 6, 6, 6, 0, 16, 0, 26, 26, 0, 0, 0]' : 0.175565}
{'[5, 1, 6, 6, 6, 0, 16, 0, 26, 26, 0, 0, 0]' : 0.175912}
{'[5, 1, 6, 6, 6, 0, 16, 0, 26, 26, 0, 0, 0]' : 0.175593}
{'[5, 1, 6, 6, 6, 0, 16, 0, 26, 26, 0, 0, 0]' : 0.176292}
{'[5, 1, 6, 6, 6, 0, 16, 0, 26, 26, 0, 0, 0]' : 0.175631}
{'[5, 1, 6, 6, 6, 0, 16, 0, 26, 26, 0, 0, 0]' : 0.175711}
{'[5, 1, 6, 6, 6, 0, 16, 0, 26, 26, 0, 0, 0]' : 0.175679}
{'[5, 1, 6, 6, 6, 0, 16, 0, 26, 26, 0, 0, 0]' : 0.175699}
{'[5, 1, 6, 6, 6, 0, 16, 0, 26, 26, 0, 0, 0]' : 0.175604}
{'[5, 1, 6, 6, 6, 0, 16, 0, 26, 26, 0, 0, 0]' : 0.175636}
{'[5, 1, 6, 6, 6, 0, 16, 0, 26, 26, 0, 0, 0]' : 0.175728}
{'[5, 1, 6, 6, 6, 0, 16, 0, 26, 26, 0, 0, 0]' : 0.175593}
{'[5, 1, 6, 6, 6, 0, 16, 0, 26, 26, 0, 0, 0]' : 0.175608}
{'[5, 1, 6, 6, 6, 0, 16, 0, 26, 26, 0, 0, 0]' : 0.175911}

out:
 ["{'[5, 1, 6, 6, 6, 0, 16, 0, 26, 26, 0, 0, 0]' : 0.211405}", "{'[5, 1, 6, 6, 6, 0, 16, 0, 26, 26, 0, 0, 0]' : 0.187895}", "{'[5, 1, 6, 6, 6, 0, 16, 0, 26, 26, 0, 0, 0]' : 0.175798}", "{'[5, 1, 6, 6, 6, 0, 16, 0, 26, 26, 0, 0, 0]' : 0.175525}", "{'[5, 1, 6, 6, 6, 0, 16, 0, 26, 26, 0, 0, 0]' : 0.175536}", "{'[5, 1, 6, 6, 6, 0, 16, 0, 26, 26, 0, 0, 0]' : 0.175521}", "{'[5, 1, 6, 6, 6, 0, 16, 0, 26, 26, 0, 0, 0]' : 0.175624}", "{'[5, 1, 6, 6, 6, 0, 16, 0, 26, 26, 0, 0, 0]' : 0.17554}", "{'[5, 1, 6, 6, 6, 0, 16, 0, 26, 26, 0, 0, 0]' : 0.175548}", "{'[5, 1, 6, 6, 6, 0, 16, 0, 26, 26, 0, 0, 0]' : 0.175767}", "{'[5, 1, 6, 6, 6, 0, 16, 0, 26, 26, 0, 0, 0]' : 0.175512}", "{'[5, 1, 6, 6, 6, 0, 16, 0, 26, 26, 0, 0, 0]' : 0.175647}", "{'[5, 1, 6, 6, 6, 0, 16, 0, 26, 26, 0, 0, 0]' : 0.175863}", "{'[5, 1, 6, 6, 6, 0, 16, 0, 26, 26, 0, 0, 0]' : 0.17556}", "{'[5, 1, 6, 6, 6, 0, 16, 0, 26, 26, 0, 0, 0]' : 0.175575}", "{'[5, 1, 6, 6, 6, 0, 16, 0, 26, 26, 0, 0, 0]' : 0.175533}", "{'[5, 1, 6, 6, 6, 0, 16, 0, 26, 26, 0, 0, 0]' : 0.175565}", "{'[5, 1, 6, 6, 6, 0, 16, 0, 26, 26, 0, 0, 0]' : 0.175912}", "{'[5, 1, 6, 6, 6, 0, 16, 0, 26, 26, 0, 0, 0]' : 0.175593}", "{'[5, 1, 6, 6, 6, 0, 16, 0, 26, 26, 0, 0, 0]' : 0.176292}", "{'[5, 1, 6, 6, 6, 0, 16, 0, 26, 26, 0, 0, 0]' : 0.175631}", "{'[5, 1, 6, 6, 6, 0, 16, 0, 26, 26, 0, 0, 0]' : 0.175711}", "{'[5, 1, 6, 6, 6, 0, 16, 0, 26, 26, 0, 0, 0]' : 0.175679}", "{'[5, 1, 6, 6, 6, 0, 16, 0, 26, 26, 0, 0, 0]' : 0.175699}", "{'[5, 1, 6, 6, 6, 0, 16, 0, 26, 26, 0, 0, 0]' : 0.175604}", "{'[5, 1, 6, 6, 6, 0, 16, 0, 26, 26, 0, 0, 0]' : 0.175636}", "{'[5, 1, 6, 6, 6, 0, 16, 0, 26, 26, 0, 0, 0]' : 0.175728}", "{'[5, 1, 6, 6, 6, 0, 16, 0, 26, 26, 0, 0, 0]' : 0.175593}", "{'[5, 1, 6, 6, 6, 0, 16, 0, 26, 26, 0, 0, 0]' : 0.175608}", "{'[5, 1, 6, 6, 6, 0, 16, 0, 26, 26, 0, 0, 0]' : 0.175911}"]
returning from 'run': {'[5, 1, 6, 6, 6, 0, 16, 0, 26, 26, 0, 0, 0]': ([0.211405, 0.187895, 0.175798, 0.175525, 0.175536, 0.175521, 0.175624, 0.17554, 0.175548, 0.175767, 0.175512, 0.175647, 0.175863, 0.17556, 0.175575, 0.175533, 0.175565, 0.175912, 0.175593, 0.176292, 0.175631, 0.175711, 0.175679, 0.175699, 0.175604, 0.175636, 0.175728, 0.175593, 0.175608, 0.175911], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 1, 6, 6, 6, 0, 16, 0, 26, 26, 0, 0, 0]': ([0.211405, 0.187895, 0.175798, 0.175525, 0.175536, 0.175521, 0.175624, 0.17554, 0.175548, 0.175767, 0.175512, 0.175647, 0.175863, 0.17556, 0.175575, 0.175533, 0.175565, 0.175912, 0.175593, 0.176292, 0.175631, 0.175711, 0.175679, 0.175699, 0.175604, 0.175636, 0.175728, 0.175593, 0.175608, 0.175911], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	78
        Max loop nest depth: 	6
        Additions: 		13176
        Multiplications: 	3780
        Divisions: 		0
        Logical: 		0
        Reads: 			19666
        Writes: 		2100
        Comparisons:		78
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest32.exe __orio_perftest32.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest32.exe  
Program Test Output: 
{'[5, 3, 6, 6, 4, 6, 22, 28, 28, 0, 0, 2, 0]' : 0.203948}
{'[5, 3, 6, 6, 4, 6, 22, 28, 28, 0, 0, 2, 0]' : 0.203536}
{'[5, 3, 6, 6, 4, 6, 22, 28, 28, 0, 0, 2, 0]' : 0.211313}
{'[5, 3, 6, 6, 4, 6, 22, 28, 28, 0, 0, 2, 0]' : 0.208561}
{'[5, 3, 6, 6, 4, 6, 22, 28, 28, 0, 0, 2, 0]' : 0.212029}
{'[5, 3, 6, 6, 4, 6, 22, 28, 28, 0, 0, 2, 0]' : 0.208677}
{'[5, 3, 6, 6, 4, 6, 22, 28, 28, 0, 0, 2, 0]' : 0.209631}
{'[5, 3, 6, 6, 4, 6, 22, 28, 28, 0, 0, 2, 0]' : 0.207144}
{'[5, 3, 6, 6, 4, 6, 22, 28, 28, 0, 0, 2, 0]' : 0.208147}
{'[5, 3, 6, 6, 4, 6, 22, 28, 28, 0, 0, 2, 0]' : 0.210274}
{'[5, 3, 6, 6, 4, 6, 22, 28, 28, 0, 0, 2, 0]' : 0.207532}
{'[5, 3, 6, 6, 4, 6, 22, 28, 28, 0, 0, 2, 0]' : 0.211799}
{'[5, 3, 6, 6, 4, 6, 22, 28, 28, 0, 0, 2, 0]' : 0.205534}
{'[5, 3, 6, 6, 4, 6, 22, 28, 28, 0, 0, 2, 0]' : 0.206532}
{'[5, 3, 6, 6, 4, 6, 22, 28, 28, 0, 0, 2, 0]' : 0.209968}
{'[5, 3, 6, 6, 4, 6, 22, 28, 28, 0, 0, 2, 0]' : 0.20841}
{'[5, 3, 6, 6, 4, 6, 22, 28, 28, 0, 0, 2, 0]' : 0.210946}
{'[5, 3, 6, 6, 4, 6, 22, 28, 28, 0, 0, 2, 0]' : 0.206538}
{'[5, 3, 6, 6, 4, 6, 22, 28, 28, 0, 0, 2, 0]' : 0.208663}
{'[5, 3, 6, 6, 4, 6, 22, 28, 28, 0, 0, 2, 0]' : 0.208648}
{'[5, 3, 6, 6, 4, 6, 22, 28, 28, 0, 0, 2, 0]' : 0.208524}
{'[5, 3, 6, 6, 4, 6, 22, 28, 28, 0, 0, 2, 0]' : 0.210347}
{'[5, 3, 6, 6, 4, 6, 22, 28, 28, 0, 0, 2, 0]' : 0.207117}
{'[5, 3, 6, 6, 4, 6, 22, 28, 28, 0, 0, 2, 0]' : 0.211069}
{'[5, 3, 6, 6, 4, 6, 22, 28, 28, 0, 0, 2, 0]' : 0.208585}
{'[5, 3, 6, 6, 4, 6, 22, 28, 28, 0, 0, 2, 0]' : 0.211071}
{'[5, 3, 6, 6, 4, 6, 22, 28, 28, 0, 0, 2, 0]' : 0.210647}
{'[5, 3, 6, 6, 4, 6, 22, 28, 28, 0, 0, 2, 0]' : 0.207118}
{'[5, 3, 6, 6, 4, 6, 22, 28, 28, 0, 0, 2, 0]' : 0.211725}
{'[5, 3, 6, 6, 4, 6, 22, 28, 28, 0, 0, 2, 0]' : 0.207784}

out:
 ["{'[5, 3, 6, 6, 4, 6, 22, 28, 28, 0, 0, 2, 0]' : 0.203948}", "{'[5, 3, 6, 6, 4, 6, 22, 28, 28, 0, 0, 2, 0]' : 0.203536}", "{'[5, 3, 6, 6, 4, 6, 22, 28, 28, 0, 0, 2, 0]' : 0.211313}", "{'[5, 3, 6, 6, 4, 6, 22, 28, 28, 0, 0, 2, 0]' : 0.208561}", "{'[5, 3, 6, 6, 4, 6, 22, 28, 28, 0, 0, 2, 0]' : 0.212029}", "{'[5, 3, 6, 6, 4, 6, 22, 28, 28, 0, 0, 2, 0]' : 0.208677}", "{'[5, 3, 6, 6, 4, 6, 22, 28, 28, 0, 0, 2, 0]' : 0.209631}", "{'[5, 3, 6, 6, 4, 6, 22, 28, 28, 0, 0, 2, 0]' : 0.207144}", "{'[5, 3, 6, 6, 4, 6, 22, 28, 28, 0, 0, 2, 0]' : 0.208147}", "{'[5, 3, 6, 6, 4, 6, 22, 28, 28, 0, 0, 2, 0]' : 0.210274}", "{'[5, 3, 6, 6, 4, 6, 22, 28, 28, 0, 0, 2, 0]' : 0.207532}", "{'[5, 3, 6, 6, 4, 6, 22, 28, 28, 0, 0, 2, 0]' : 0.211799}", "{'[5, 3, 6, 6, 4, 6, 22, 28, 28, 0, 0, 2, 0]' : 0.205534}", "{'[5, 3, 6, 6, 4, 6, 22, 28, 28, 0, 0, 2, 0]' : 0.206532}", "{'[5, 3, 6, 6, 4, 6, 22, 28, 28, 0, 0, 2, 0]' : 0.209968}", "{'[5, 3, 6, 6, 4, 6, 22, 28, 28, 0, 0, 2, 0]' : 0.20841}", "{'[5, 3, 6, 6, 4, 6, 22, 28, 28, 0, 0, 2, 0]' : 0.210946}", "{'[5, 3, 6, 6, 4, 6, 22, 28, 28, 0, 0, 2, 0]' : 0.206538}", "{'[5, 3, 6, 6, 4, 6, 22, 28, 28, 0, 0, 2, 0]' : 0.208663}", "{'[5, 3, 6, 6, 4, 6, 22, 28, 28, 0, 0, 2, 0]' : 0.208648}", "{'[5, 3, 6, 6, 4, 6, 22, 28, 28, 0, 0, 2, 0]' : 0.208524}", "{'[5, 3, 6, 6, 4, 6, 22, 28, 28, 0, 0, 2, 0]' : 0.210347}", "{'[5, 3, 6, 6, 4, 6, 22, 28, 28, 0, 0, 2, 0]' : 0.207117}", "{'[5, 3, 6, 6, 4, 6, 22, 28, 28, 0, 0, 2, 0]' : 0.211069}", "{'[5, 3, 6, 6, 4, 6, 22, 28, 28, 0, 0, 2, 0]' : 0.208585}", "{'[5, 3, 6, 6, 4, 6, 22, 28, 28, 0, 0, 2, 0]' : 0.211071}", "{'[5, 3, 6, 6, 4, 6, 22, 28, 28, 0, 0, 2, 0]' : 0.210647}", "{'[5, 3, 6, 6, 4, 6, 22, 28, 28, 0, 0, 2, 0]' : 0.207118}", "{'[5, 3, 6, 6, 4, 6, 22, 28, 28, 0, 0, 2, 0]' : 0.211725}", "{'[5, 3, 6, 6, 4, 6, 22, 28, 28, 0, 0, 2, 0]' : 0.207784}"]
returning from 'run': {'[5, 3, 6, 6, 4, 6, 22, 28, 28, 0, 0, 2, 0]': ([0.203948, 0.203536, 0.211313, 0.208561, 0.212029, 0.208677, 0.209631, 0.207144, 0.208147, 0.210274, 0.207532, 0.211799, 0.205534, 0.206532, 0.209968, 0.20841, 0.210946, 0.206538, 0.208663, 0.208648, 0.208524, 0.210347, 0.207117, 0.211069, 0.208585, 0.211071, 0.210647, 0.207118, 0.211725, 0.207784], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 3, 6, 6, 4, 6, 22, 28, 28, 0, 0, 2, 0]': ([0.203948, 0.203536, 0.211313, 0.208561, 0.212029, 0.208677, 0.209631, 0.207144, 0.208147, 0.210274, 0.207532, 0.211799, 0.205534, 0.206532, 0.209968, 0.20841, 0.210946, 0.206538, 0.208663, 0.208648, 0.208524, 0.210347, 0.207117, 0.211069, 0.208585, 0.211071, 0.210647, 0.207118, 0.211725, 0.207784], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	5
        Additions: 		3689
        Multiplications: 	1116
        Divisions: 		0
        Logical: 		0
        Reads: 			5764
        Writes: 		626
        Comparisons:		16
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest33.exe __orio_perftest33.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest33.exe  
Program Test Output: 
{'[6, 5, 6, 5, 0, 0, 3, 29, 15, 0, 0, 0, 0]' : 0.26135}
{'[6, 5, 6, 5, 0, 0, 3, 29, 15, 0, 0, 0, 0]' : 0.258659}
{'[6, 5, 6, 5, 0, 0, 3, 29, 15, 0, 0, 0, 0]' : 0.230617}
{'[6, 5, 6, 5, 0, 0, 3, 29, 15, 0, 0, 0, 0]' : 0.236403}
{'[6, 5, 6, 5, 0, 0, 3, 29, 15, 0, 0, 0, 0]' : 0.236029}
{'[6, 5, 6, 5, 0, 0, 3, 29, 15, 0, 0, 0, 0]' : 0.231412}
{'[6, 5, 6, 5, 0, 0, 3, 29, 15, 0, 0, 0, 0]' : 0.234379}
{'[6, 5, 6, 5, 0, 0, 3, 29, 15, 0, 0, 0, 0]' : 0.232288}
{'[6, 5, 6, 5, 0, 0, 3, 29, 15, 0, 0, 0, 0]' : 0.235429}
{'[6, 5, 6, 5, 0, 0, 3, 29, 15, 0, 0, 0, 0]' : 0.238308}
{'[6, 5, 6, 5, 0, 0, 3, 29, 15, 0, 0, 0, 0]' : 0.238902}
{'[6, 5, 6, 5, 0, 0, 3, 29, 15, 0, 0, 0, 0]' : 0.236951}
{'[6, 5, 6, 5, 0, 0, 3, 29, 15, 0, 0, 0, 0]' : 0.23064}
{'[6, 5, 6, 5, 0, 0, 3, 29, 15, 0, 0, 0, 0]' : 0.235844}
{'[6, 5, 6, 5, 0, 0, 3, 29, 15, 0, 0, 0, 0]' : 0.238176}
{'[6, 5, 6, 5, 0, 0, 3, 29, 15, 0, 0, 0, 0]' : 0.227552}
{'[6, 5, 6, 5, 0, 0, 3, 29, 15, 0, 0, 0, 0]' : 0.233702}
{'[6, 5, 6, 5, 0, 0, 3, 29, 15, 0, 0, 0, 0]' : 0.231712}
{'[6, 5, 6, 5, 0, 0, 3, 29, 15, 0, 0, 0, 0]' : 0.233875}
{'[6, 5, 6, 5, 0, 0, 3, 29, 15, 0, 0, 0, 0]' : 0.237764}
{'[6, 5, 6, 5, 0, 0, 3, 29, 15, 0, 0, 0, 0]' : 0.235965}
{'[6, 5, 6, 5, 0, 0, 3, 29, 15, 0, 0, 0, 0]' : 0.229591}
{'[6, 5, 6, 5, 0, 0, 3, 29, 15, 0, 0, 0, 0]' : 0.239744}
{'[6, 5, 6, 5, 0, 0, 3, 29, 15, 0, 0, 0, 0]' : 0.231895}
{'[6, 5, 6, 5, 0, 0, 3, 29, 15, 0, 0, 0, 0]' : 0.23773}
{'[6, 5, 6, 5, 0, 0, 3, 29, 15, 0, 0, 0, 0]' : 0.236155}
{'[6, 5, 6, 5, 0, 0, 3, 29, 15, 0, 0, 0, 0]' : 0.237924}
{'[6, 5, 6, 5, 0, 0, 3, 29, 15, 0, 0, 0, 0]' : 0.234538}
{'[6, 5, 6, 5, 0, 0, 3, 29, 15, 0, 0, 0, 0]' : 0.231309}
{'[6, 5, 6, 5, 0, 0, 3, 29, 15, 0, 0, 0, 0]' : 0.234529}

out:
 ["{'[6, 5, 6, 5, 0, 0, 3, 29, 15, 0, 0, 0, 0]' : 0.26135}", "{'[6, 5, 6, 5, 0, 0, 3, 29, 15, 0, 0, 0, 0]' : 0.258659}", "{'[6, 5, 6, 5, 0, 0, 3, 29, 15, 0, 0, 0, 0]' : 0.230617}", "{'[6, 5, 6, 5, 0, 0, 3, 29, 15, 0, 0, 0, 0]' : 0.236403}", "{'[6, 5, 6, 5, 0, 0, 3, 29, 15, 0, 0, 0, 0]' : 0.236029}", "{'[6, 5, 6, 5, 0, 0, 3, 29, 15, 0, 0, 0, 0]' : 0.231412}", "{'[6, 5, 6, 5, 0, 0, 3, 29, 15, 0, 0, 0, 0]' : 0.234379}", "{'[6, 5, 6, 5, 0, 0, 3, 29, 15, 0, 0, 0, 0]' : 0.232288}", "{'[6, 5, 6, 5, 0, 0, 3, 29, 15, 0, 0, 0, 0]' : 0.235429}", "{'[6, 5, 6, 5, 0, 0, 3, 29, 15, 0, 0, 0, 0]' : 0.238308}", "{'[6, 5, 6, 5, 0, 0, 3, 29, 15, 0, 0, 0, 0]' : 0.238902}", "{'[6, 5, 6, 5, 0, 0, 3, 29, 15, 0, 0, 0, 0]' : 0.236951}", "{'[6, 5, 6, 5, 0, 0, 3, 29, 15, 0, 0, 0, 0]' : 0.23064}", "{'[6, 5, 6, 5, 0, 0, 3, 29, 15, 0, 0, 0, 0]' : 0.235844}", "{'[6, 5, 6, 5, 0, 0, 3, 29, 15, 0, 0, 0, 0]' : 0.238176}", "{'[6, 5, 6, 5, 0, 0, 3, 29, 15, 0, 0, 0, 0]' : 0.227552}", "{'[6, 5, 6, 5, 0, 0, 3, 29, 15, 0, 0, 0, 0]' : 0.233702}", "{'[6, 5, 6, 5, 0, 0, 3, 29, 15, 0, 0, 0, 0]' : 0.231712}", "{'[6, 5, 6, 5, 0, 0, 3, 29, 15, 0, 0, 0, 0]' : 0.233875}", "{'[6, 5, 6, 5, 0, 0, 3, 29, 15, 0, 0, 0, 0]' : 0.237764}", "{'[6, 5, 6, 5, 0, 0, 3, 29, 15, 0, 0, 0, 0]' : 0.235965}", "{'[6, 5, 6, 5, 0, 0, 3, 29, 15, 0, 0, 0, 0]' : 0.229591}", "{'[6, 5, 6, 5, 0, 0, 3, 29, 15, 0, 0, 0, 0]' : 0.239744}", "{'[6, 5, 6, 5, 0, 0, 3, 29, 15, 0, 0, 0, 0]' : 0.231895}", "{'[6, 5, 6, 5, 0, 0, 3, 29, 15, 0, 0, 0, 0]' : 0.23773}", "{'[6, 5, 6, 5, 0, 0, 3, 29, 15, 0, 0, 0, 0]' : 0.236155}", "{'[6, 5, 6, 5, 0, 0, 3, 29, 15, 0, 0, 0, 0]' : 0.237924}", "{'[6, 5, 6, 5, 0, 0, 3, 29, 15, 0, 0, 0, 0]' : 0.234538}", "{'[6, 5, 6, 5, 0, 0, 3, 29, 15, 0, 0, 0, 0]' : 0.231309}", "{'[6, 5, 6, 5, 0, 0, 3, 29, 15, 0, 0, 0, 0]' : 0.234529}"]
returning from 'run': {'[6, 5, 6, 5, 0, 0, 3, 29, 15, 0, 0, 0, 0]': ([0.26135, 0.258659, 0.230617, 0.236403, 0.236029, 0.231412, 0.234379, 0.232288, 0.235429, 0.238308, 0.238902, 0.236951, 0.23064, 0.235844, 0.238176, 0.227552, 0.233702, 0.231712, 0.233875, 0.237764, 0.235965, 0.229591, 0.239744, 0.231895, 0.23773, 0.236155, 0.237924, 0.234538, 0.231309, 0.234529], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 5, 6, 5, 0, 0, 3, 29, 15, 0, 0, 0, 0]': ([0.26135, 0.258659, 0.230617, 0.236403, 0.236029, 0.231412, 0.234379, 0.232288, 0.235429, 0.238308, 0.238902, 0.236951, 0.23064, 0.235844, 0.238176, 0.227552, 0.233702, 0.231712, 0.233875, 0.237764, 0.235965, 0.229591, 0.239744, 0.231895, 0.23773, 0.236155, 0.237924, 0.234538, 0.231309, 0.234529], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	5
        Additions: 		2225
        Multiplications: 	682
        Divisions: 		0
        Logical: 		0
        Reads: 			3646
        Writes: 		435
        Comparisons:		16
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest34.exe __orio_perftest34.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest34.exe  
Program Test Output: 
{'[1, 0, 0, 5, 3, 6, 29, 29, 0, 8, 0, 0, 0]' : 0.365332}
{'[1, 0, 0, 5, 3, 6, 29, 29, 0, 8, 0, 0, 0]' : 0.373471}
{'[1, 0, 0, 5, 3, 6, 29, 29, 0, 8, 0, 0, 0]' : 0.373646}
{'[1, 0, 0, 5, 3, 6, 29, 29, 0, 8, 0, 0, 0]' : 0.375561}
{'[1, 0, 0, 5, 3, 6, 29, 29, 0, 8, 0, 0, 0]' : 0.373778}
{'[1, 0, 0, 5, 3, 6, 29, 29, 0, 8, 0, 0, 0]' : 0.373493}
{'[1, 0, 0, 5, 3, 6, 29, 29, 0, 8, 0, 0, 0]' : 0.368394}
{'[1, 0, 0, 5, 3, 6, 29, 29, 0, 8, 0, 0, 0]' : 0.368079}
{'[1, 0, 0, 5, 3, 6, 29, 29, 0, 8, 0, 0, 0]' : 0.375911}
{'[1, 0, 0, 5, 3, 6, 29, 29, 0, 8, 0, 0, 0]' : 0.37462}
{'[1, 0, 0, 5, 3, 6, 29, 29, 0, 8, 0, 0, 0]' : 0.37362}
{'[1, 0, 0, 5, 3, 6, 29, 29, 0, 8, 0, 0, 0]' : 0.3794}
{'[1, 0, 0, 5, 3, 6, 29, 29, 0, 8, 0, 0, 0]' : 0.375308}
{'[1, 0, 0, 5, 3, 6, 29, 29, 0, 8, 0, 0, 0]' : 0.373458}
{'[1, 0, 0, 5, 3, 6, 29, 29, 0, 8, 0, 0, 0]' : 0.376452}
{'[1, 0, 0, 5, 3, 6, 29, 29, 0, 8, 0, 0, 0]' : 0.370438}
{'[1, 0, 0, 5, 3, 6, 29, 29, 0, 8, 0, 0, 0]' : 0.373478}
{'[1, 0, 0, 5, 3, 6, 29, 29, 0, 8, 0, 0, 0]' : 0.375462}
{'[1, 0, 0, 5, 3, 6, 29, 29, 0, 8, 0, 0, 0]' : 0.373846}
{'[1, 0, 0, 5, 3, 6, 29, 29, 0, 8, 0, 0, 0]' : 0.374681}
{'[1, 0, 0, 5, 3, 6, 29, 29, 0, 8, 0, 0, 0]' : 0.373768}
{'[1, 0, 0, 5, 3, 6, 29, 29, 0, 8, 0, 0, 0]' : 0.36329}
{'[1, 0, 0, 5, 3, 6, 29, 29, 0, 8, 0, 0, 0]' : 0.371791}
{'[1, 0, 0, 5, 3, 6, 29, 29, 0, 8, 0, 0, 0]' : 0.373599}
{'[1, 0, 0, 5, 3, 6, 29, 29, 0, 8, 0, 0, 0]' : 0.37386}
{'[1, 0, 0, 5, 3, 6, 29, 29, 0, 8, 0, 0, 0]' : 0.373769}
{'[1, 0, 0, 5, 3, 6, 29, 29, 0, 8, 0, 0, 0]' : 0.373536}
{'[1, 0, 0, 5, 3, 6, 29, 29, 0, 8, 0, 0, 0]' : 0.367679}
{'[1, 0, 0, 5, 3, 6, 29, 29, 0, 8, 0, 0, 0]' : 0.374285}
{'[1, 0, 0, 5, 3, 6, 29, 29, 0, 8, 0, 0, 0]' : 0.373609}

out:
 ["{'[1, 0, 0, 5, 3, 6, 29, 29, 0, 8, 0, 0, 0]' : 0.365332}", "{'[1, 0, 0, 5, 3, 6, 29, 29, 0, 8, 0, 0, 0]' : 0.373471}", "{'[1, 0, 0, 5, 3, 6, 29, 29, 0, 8, 0, 0, 0]' : 0.373646}", "{'[1, 0, 0, 5, 3, 6, 29, 29, 0, 8, 0, 0, 0]' : 0.375561}", "{'[1, 0, 0, 5, 3, 6, 29, 29, 0, 8, 0, 0, 0]' : 0.373778}", "{'[1, 0, 0, 5, 3, 6, 29, 29, 0, 8, 0, 0, 0]' : 0.373493}", "{'[1, 0, 0, 5, 3, 6, 29, 29, 0, 8, 0, 0, 0]' : 0.368394}", "{'[1, 0, 0, 5, 3, 6, 29, 29, 0, 8, 0, 0, 0]' : 0.368079}", "{'[1, 0, 0, 5, 3, 6, 29, 29, 0, 8, 0, 0, 0]' : 0.375911}", "{'[1, 0, 0, 5, 3, 6, 29, 29, 0, 8, 0, 0, 0]' : 0.37462}", "{'[1, 0, 0, 5, 3, 6, 29, 29, 0, 8, 0, 0, 0]' : 0.37362}", "{'[1, 0, 0, 5, 3, 6, 29, 29, 0, 8, 0, 0, 0]' : 0.3794}", "{'[1, 0, 0, 5, 3, 6, 29, 29, 0, 8, 0, 0, 0]' : 0.375308}", "{'[1, 0, 0, 5, 3, 6, 29, 29, 0, 8, 0, 0, 0]' : 0.373458}", "{'[1, 0, 0, 5, 3, 6, 29, 29, 0, 8, 0, 0, 0]' : 0.376452}", "{'[1, 0, 0, 5, 3, 6, 29, 29, 0, 8, 0, 0, 0]' : 0.370438}", "{'[1, 0, 0, 5, 3, 6, 29, 29, 0, 8, 0, 0, 0]' : 0.373478}", "{'[1, 0, 0, 5, 3, 6, 29, 29, 0, 8, 0, 0, 0]' : 0.375462}", "{'[1, 0, 0, 5, 3, 6, 29, 29, 0, 8, 0, 0, 0]' : 0.373846}", "{'[1, 0, 0, 5, 3, 6, 29, 29, 0, 8, 0, 0, 0]' : 0.374681}", "{'[1, 0, 0, 5, 3, 6, 29, 29, 0, 8, 0, 0, 0]' : 0.373768}", "{'[1, 0, 0, 5, 3, 6, 29, 29, 0, 8, 0, 0, 0]' : 0.36329}", "{'[1, 0, 0, 5, 3, 6, 29, 29, 0, 8, 0, 0, 0]' : 0.371791}", "{'[1, 0, 0, 5, 3, 6, 29, 29, 0, 8, 0, 0, 0]' : 0.373599}", "{'[1, 0, 0, 5, 3, 6, 29, 29, 0, 8, 0, 0, 0]' : 0.37386}", "{'[1, 0, 0, 5, 3, 6, 29, 29, 0, 8, 0, 0, 0]' : 0.373769}", "{'[1, 0, 0, 5, 3, 6, 29, 29, 0, 8, 0, 0, 0]' : 0.373536}", "{'[1, 0, 0, 5, 3, 6, 29, 29, 0, 8, 0, 0, 0]' : 0.367679}", "{'[1, 0, 0, 5, 3, 6, 29, 29, 0, 8, 0, 0, 0]' : 0.374285}", "{'[1, 0, 0, 5, 3, 6, 29, 29, 0, 8, 0, 0, 0]' : 0.373609}"]
returning from 'run': {'[1, 0, 0, 5, 3, 6, 29, 29, 0, 8, 0, 0, 0]': ([0.365332, 0.373471, 0.373646, 0.375561, 0.373778, 0.373493, 0.368394, 0.368079, 0.375911, 0.37462, 0.37362, 0.3794, 0.375308, 0.373458, 0.376452, 0.370438, 0.373478, 0.375462, 0.373846, 0.374681, 0.373768, 0.36329, 0.371791, 0.373599, 0.37386, 0.373769, 0.373536, 0.367679, 0.374285, 0.373609], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 0, 5, 3, 6, 29, 29, 0, 8, 0, 0, 0]': ([0.365332, 0.373471, 0.373646, 0.375561, 0.373778, 0.373493, 0.368394, 0.368079, 0.375911, 0.37462, 0.37362, 0.3794, 0.375308, 0.373458, 0.376452, 0.370438, 0.373478, 0.375462, 0.373846, 0.374681, 0.373768, 0.36329, 0.371791, 0.373599, 0.37386, 0.373769, 0.373536, 0.367679, 0.374285, 0.373609], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	5
        Additions: 		290
        Multiplications: 	110
        Divisions: 		0
        Logical: 		0
        Reads: 			637
        Writes: 		82
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest35.exe __orio_perftest35.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest35.exe  
Program Test Output: 
{'[6, 5, 0, 0, 6, 3, 2, 0, 26, 25, 0, 0, 0]' : 0.2067}
{'[6, 5, 0, 0, 6, 3, 2, 0, 26, 25, 0, 0, 0]' : 0.207044}
{'[6, 5, 0, 0, 6, 3, 2, 0, 26, 25, 0, 0, 0]' : 0.186498}
{'[6, 5, 0, 0, 6, 3, 2, 0, 26, 25, 0, 0, 0]' : 0.17906}
{'[6, 5, 0, 0, 6, 3, 2, 0, 26, 25, 0, 0, 0]' : 0.175074}
{'[6, 5, 0, 0, 6, 3, 2, 0, 26, 25, 0, 0, 0]' : 0.172933}
{'[6, 5, 0, 0, 6, 3, 2, 0, 26, 25, 0, 0, 0]' : 0.178692}
{'[6, 5, 0, 0, 6, 3, 2, 0, 26, 25, 0, 0, 0]' : 0.18271}
{'[6, 5, 0, 0, 6, 3, 2, 0, 26, 25, 0, 0, 0]' : 0.17863}
{'[6, 5, 0, 0, 6, 3, 2, 0, 26, 25, 0, 0, 0]' : 0.178767}
{'[6, 5, 0, 0, 6, 3, 2, 0, 26, 25, 0, 0, 0]' : 0.178898}
{'[6, 5, 0, 0, 6, 3, 2, 0, 26, 25, 0, 0, 0]' : 0.178767}
{'[6, 5, 0, 0, 6, 3, 2, 0, 26, 25, 0, 0, 0]' : 0.178912}
{'[6, 5, 0, 0, 6, 3, 2, 0, 26, 25, 0, 0, 0]' : 0.178529}
{'[6, 5, 0, 0, 6, 3, 2, 0, 26, 25, 0, 0, 0]' : 0.178614}
{'[6, 5, 0, 0, 6, 3, 2, 0, 26, 25, 0, 0, 0]' : 0.178685}
{'[6, 5, 0, 0, 6, 3, 2, 0, 26, 25, 0, 0, 0]' : 0.178824}
{'[6, 5, 0, 0, 6, 3, 2, 0, 26, 25, 0, 0, 0]' : 0.17597}
{'[6, 5, 0, 0, 6, 3, 2, 0, 26, 25, 0, 0, 0]' : 0.18062}
{'[6, 5, 0, 0, 6, 3, 2, 0, 26, 25, 0, 0, 0]' : 0.178679}
{'[6, 5, 0, 0, 6, 3, 2, 0, 26, 25, 0, 0, 0]' : 0.178785}
{'[6, 5, 0, 0, 6, 3, 2, 0, 26, 25, 0, 0, 0]' : 0.17859}
{'[6, 5, 0, 0, 6, 3, 2, 0, 26, 25, 0, 0, 0]' : 0.17758}
{'[6, 5, 0, 0, 6, 3, 2, 0, 26, 25, 0, 0, 0]' : 0.178097}
{'[6, 5, 0, 0, 6, 3, 2, 0, 26, 25, 0, 0, 0]' : 0.178837}
{'[6, 5, 0, 0, 6, 3, 2, 0, 26, 25, 0, 0, 0]' : 0.178858}
{'[6, 5, 0, 0, 6, 3, 2, 0, 26, 25, 0, 0, 0]' : 0.179039}
{'[6, 5, 0, 0, 6, 3, 2, 0, 26, 25, 0, 0, 0]' : 0.178843}
{'[6, 5, 0, 0, 6, 3, 2, 0, 26, 25, 0, 0, 0]' : 0.178768}
{'[6, 5, 0, 0, 6, 3, 2, 0, 26, 25, 0, 0, 0]' : 0.178391}

out:
 ["{'[6, 5, 0, 0, 6, 3, 2, 0, 26, 25, 0, 0, 0]' : 0.2067}", "{'[6, 5, 0, 0, 6, 3, 2, 0, 26, 25, 0, 0, 0]' : 0.207044}", "{'[6, 5, 0, 0, 6, 3, 2, 0, 26, 25, 0, 0, 0]' : 0.186498}", "{'[6, 5, 0, 0, 6, 3, 2, 0, 26, 25, 0, 0, 0]' : 0.17906}", "{'[6, 5, 0, 0, 6, 3, 2, 0, 26, 25, 0, 0, 0]' : 0.175074}", "{'[6, 5, 0, 0, 6, 3, 2, 0, 26, 25, 0, 0, 0]' : 0.172933}", "{'[6, 5, 0, 0, 6, 3, 2, 0, 26, 25, 0, 0, 0]' : 0.178692}", "{'[6, 5, 0, 0, 6, 3, 2, 0, 26, 25, 0, 0, 0]' : 0.18271}", "{'[6, 5, 0, 0, 6, 3, 2, 0, 26, 25, 0, 0, 0]' : 0.17863}", "{'[6, 5, 0, 0, 6, 3, 2, 0, 26, 25, 0, 0, 0]' : 0.178767}", "{'[6, 5, 0, 0, 6, 3, 2, 0, 26, 25, 0, 0, 0]' : 0.178898}", "{'[6, 5, 0, 0, 6, 3, 2, 0, 26, 25, 0, 0, 0]' : 0.178767}", "{'[6, 5, 0, 0, 6, 3, 2, 0, 26, 25, 0, 0, 0]' : 0.178912}", "{'[6, 5, 0, 0, 6, 3, 2, 0, 26, 25, 0, 0, 0]' : 0.178529}", "{'[6, 5, 0, 0, 6, 3, 2, 0, 26, 25, 0, 0, 0]' : 0.178614}", "{'[6, 5, 0, 0, 6, 3, 2, 0, 26, 25, 0, 0, 0]' : 0.178685}", "{'[6, 5, 0, 0, 6, 3, 2, 0, 26, 25, 0, 0, 0]' : 0.178824}", "{'[6, 5, 0, 0, 6, 3, 2, 0, 26, 25, 0, 0, 0]' : 0.17597}", "{'[6, 5, 0, 0, 6, 3, 2, 0, 26, 25, 0, 0, 0]' : 0.18062}", "{'[6, 5, 0, 0, 6, 3, 2, 0, 26, 25, 0, 0, 0]' : 0.178679}", "{'[6, 5, 0, 0, 6, 3, 2, 0, 26, 25, 0, 0, 0]' : 0.178785}", "{'[6, 5, 0, 0, 6, 3, 2, 0, 26, 25, 0, 0, 0]' : 0.17859}", "{'[6, 5, 0, 0, 6, 3, 2, 0, 26, 25, 0, 0, 0]' : 0.17758}", "{'[6, 5, 0, 0, 6, 3, 2, 0, 26, 25, 0, 0, 0]' : 0.178097}", "{'[6, 5, 0, 0, 6, 3, 2, 0, 26, 25, 0, 0, 0]' : 0.178837}", "{'[6, 5, 0, 0, 6, 3, 2, 0, 26, 25, 0, 0, 0]' : 0.178858}", "{'[6, 5, 0, 0, 6, 3, 2, 0, 26, 25, 0, 0, 0]' : 0.179039}", "{'[6, 5, 0, 0, 6, 3, 2, 0, 26, 25, 0, 0, 0]' : 0.178843}", "{'[6, 5, 0, 0, 6, 3, 2, 0, 26, 25, 0, 0, 0]' : 0.178768}", "{'[6, 5, 0, 0, 6, 3, 2, 0, 26, 25, 0, 0, 0]' : 0.178391}"]
returning from 'run': {'[6, 5, 0, 0, 6, 3, 2, 0, 26, 25, 0, 0, 0]': ([0.2067, 0.207044, 0.186498, 0.17906, 0.175074, 0.172933, 0.178692, 0.18271, 0.17863, 0.178767, 0.178898, 0.178767, 0.178912, 0.178529, 0.178614, 0.178685, 0.178824, 0.17597, 0.18062, 0.178679, 0.178785, 0.17859, 0.17758, 0.178097, 0.178837, 0.178858, 0.179039, 0.178843, 0.178768, 0.178391], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 5, 0, 0, 6, 3, 2, 0, 26, 25, 0, 0, 0]': ([0.2067, 0.207044, 0.186498, 0.17906, 0.175074, 0.172933, 0.178692, 0.18271, 0.17863, 0.178767, 0.178898, 0.178767, 0.178912, 0.178529, 0.178614, 0.178685, 0.178824, 0.17597, 0.18062, 0.178679, 0.178785, 0.17859, 0.17758, 0.178097, 0.178837, 0.178858, 0.179039, 0.178843, 0.178768, 0.178391], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	41
        Max loop nest depth: 	5
        Additions: 		5374
        Multiplications: 	1560
        Divisions: 		0
        Logical: 		0
        Reads: 			8215
        Writes: 		904
        Comparisons:		41
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest36.exe __orio_perftest36.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest36.exe  
Program Test Output: 
{'[6, 6, 6, 0, 0, 5, 27, 11, 0, 25, 0, 0, 2]' : 0.139845}
{'[6, 6, 6, 0, 0, 5, 27, 11, 0, 25, 0, 0, 2]' : 0.139904}
{'[6, 6, 6, 0, 0, 5, 27, 11, 0, 25, 0, 0, 2]' : 0.139537}
{'[6, 6, 6, 0, 0, 5, 27, 11, 0, 25, 0, 0, 2]' : 0.14126}
{'[6, 6, 6, 0, 0, 5, 27, 11, 0, 25, 0, 0, 2]' : 0.143809}
{'[6, 6, 6, 0, 0, 5, 27, 11, 0, 25, 0, 0, 2]' : 0.143869}
{'[6, 6, 6, 0, 0, 5, 27, 11, 0, 25, 0, 0, 2]' : 0.143789}
{'[6, 6, 6, 0, 0, 5, 27, 11, 0, 25, 0, 0, 2]' : 0.143926}
{'[6, 6, 6, 0, 0, 5, 27, 11, 0, 25, 0, 0, 2]' : 0.143798}
{'[6, 6, 6, 0, 0, 5, 27, 11, 0, 25, 0, 0, 2]' : 0.143963}
{'[6, 6, 6, 0, 0, 5, 27, 11, 0, 25, 0, 0, 2]' : 0.142625}
{'[6, 6, 6, 0, 0, 5, 27, 11, 0, 25, 0, 0, 2]' : 0.140103}
{'[6, 6, 6, 0, 0, 5, 27, 11, 0, 25, 0, 0, 2]' : 0.140145}
{'[6, 6, 6, 0, 0, 5, 27, 11, 0, 25, 0, 0, 2]' : 0.140048}
{'[6, 6, 6, 0, 0, 5, 27, 11, 0, 25, 0, 0, 2]' : 0.140112}
{'[6, 6, 6, 0, 0, 5, 27, 11, 0, 25, 0, 0, 2]' : 0.140066}
{'[6, 6, 6, 0, 0, 5, 27, 11, 0, 25, 0, 0, 2]' : 0.140292}
{'[6, 6, 6, 0, 0, 5, 27, 11, 0, 25, 0, 0, 2]' : 0.140433}
{'[6, 6, 6, 0, 0, 5, 27, 11, 0, 25, 0, 0, 2]' : 0.139957}
{'[6, 6, 6, 0, 0, 5, 27, 11, 0, 25, 0, 0, 2]' : 0.140191}
{'[6, 6, 6, 0, 0, 5, 27, 11, 0, 25, 0, 0, 2]' : 0.140021}
{'[6, 6, 6, 0, 0, 5, 27, 11, 0, 25, 0, 0, 2]' : 0.140117}
{'[6, 6, 6, 0, 0, 5, 27, 11, 0, 25, 0, 0, 2]' : 0.142013}
{'[6, 6, 6, 0, 0, 5, 27, 11, 0, 25, 0, 0, 2]' : 0.144045}
{'[6, 6, 6, 0, 0, 5, 27, 11, 0, 25, 0, 0, 2]' : 0.144039}
{'[6, 6, 6, 0, 0, 5, 27, 11, 0, 25, 0, 0, 2]' : 0.143817}
{'[6, 6, 6, 0, 0, 5, 27, 11, 0, 25, 0, 0, 2]' : 0.143729}
{'[6, 6, 6, 0, 0, 5, 27, 11, 0, 25, 0, 0, 2]' : 0.14376}
{'[6, 6, 6, 0, 0, 5, 27, 11, 0, 25, 0, 0, 2]' : 0.141223}
{'[6, 6, 6, 0, 0, 5, 27, 11, 0, 25, 0, 0, 2]' : 0.140153}

out:
 ["{'[6, 6, 6, 0, 0, 5, 27, 11, 0, 25, 0, 0, 2]' : 0.139845}", "{'[6, 6, 6, 0, 0, 5, 27, 11, 0, 25, 0, 0, 2]' : 0.139904}", "{'[6, 6, 6, 0, 0, 5, 27, 11, 0, 25, 0, 0, 2]' : 0.139537}", "{'[6, 6, 6, 0, 0, 5, 27, 11, 0, 25, 0, 0, 2]' : 0.14126}", "{'[6, 6, 6, 0, 0, 5, 27, 11, 0, 25, 0, 0, 2]' : 0.143809}", "{'[6, 6, 6, 0, 0, 5, 27, 11, 0, 25, 0, 0, 2]' : 0.143869}", "{'[6, 6, 6, 0, 0, 5, 27, 11, 0, 25, 0, 0, 2]' : 0.143789}", "{'[6, 6, 6, 0, 0, 5, 27, 11, 0, 25, 0, 0, 2]' : 0.143926}", "{'[6, 6, 6, 0, 0, 5, 27, 11, 0, 25, 0, 0, 2]' : 0.143798}", "{'[6, 6, 6, 0, 0, 5, 27, 11, 0, 25, 0, 0, 2]' : 0.143963}", "{'[6, 6, 6, 0, 0, 5, 27, 11, 0, 25, 0, 0, 2]' : 0.142625}", "{'[6, 6, 6, 0, 0, 5, 27, 11, 0, 25, 0, 0, 2]' : 0.140103}", "{'[6, 6, 6, 0, 0, 5, 27, 11, 0, 25, 0, 0, 2]' : 0.140145}", "{'[6, 6, 6, 0, 0, 5, 27, 11, 0, 25, 0, 0, 2]' : 0.140048}", "{'[6, 6, 6, 0, 0, 5, 27, 11, 0, 25, 0, 0, 2]' : 0.140112}", "{'[6, 6, 6, 0, 0, 5, 27, 11, 0, 25, 0, 0, 2]' : 0.140066}", "{'[6, 6, 6, 0, 0, 5, 27, 11, 0, 25, 0, 0, 2]' : 0.140292}", "{'[6, 6, 6, 0, 0, 5, 27, 11, 0, 25, 0, 0, 2]' : 0.140433}", "{'[6, 6, 6, 0, 0, 5, 27, 11, 0, 25, 0, 0, 2]' : 0.139957}", "{'[6, 6, 6, 0, 0, 5, 27, 11, 0, 25, 0, 0, 2]' : 0.140191}", "{'[6, 6, 6, 0, 0, 5, 27, 11, 0, 25, 0, 0, 2]' : 0.140021}", "{'[6, 6, 6, 0, 0, 5, 27, 11, 0, 25, 0, 0, 2]' : 0.140117}", "{'[6, 6, 6, 0, 0, 5, 27, 11, 0, 25, 0, 0, 2]' : 0.142013}", "{'[6, 6, 6, 0, 0, 5, 27, 11, 0, 25, 0, 0, 2]' : 0.144045}", "{'[6, 6, 6, 0, 0, 5, 27, 11, 0, 25, 0, 0, 2]' : 0.144039}", "{'[6, 6, 6, 0, 0, 5, 27, 11, 0, 25, 0, 0, 2]' : 0.143817}", "{'[6, 6, 6, 0, 0, 5, 27, 11, 0, 25, 0, 0, 2]' : 0.143729}", "{'[6, 6, 6, 0, 0, 5, 27, 11, 0, 25, 0, 0, 2]' : 0.14376}", "{'[6, 6, 6, 0, 0, 5, 27, 11, 0, 25, 0, 0, 2]' : 0.141223}", "{'[6, 6, 6, 0, 0, 5, 27, 11, 0, 25, 0, 0, 2]' : 0.140153}"]
returning from 'run': {'[6, 6, 6, 0, 0, 5, 27, 11, 0, 25, 0, 0, 2]': ([0.139845, 0.139904, 0.139537, 0.14126, 0.143809, 0.143869, 0.143789, 0.143926, 0.143798, 0.143963, 0.142625, 0.140103, 0.140145, 0.140048, 0.140112, 0.140066, 0.140292, 0.140433, 0.139957, 0.140191, 0.140021, 0.140117, 0.142013, 0.144045, 0.144039, 0.143817, 0.143729, 0.14376, 0.141223, 0.140153], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 6, 0, 0, 5, 27, 11, 0, 25, 0, 0, 2]': ([0.139845, 0.139904, 0.139537, 0.14126, 0.143809, 0.143869, 0.143789, 0.143926, 0.143798, 0.143963, 0.142625, 0.140103, 0.140145, 0.140048, 0.140112, 0.140066, 0.140292, 0.140433, 0.139957, 0.140191, 0.140021, 0.140117, 0.142013, 0.144045, 0.144039, 0.143817, 0.143729, 0.14376, 0.141223, 0.140153], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	17
        Max loop nest depth: 	5
        Additions: 		812
        Multiplications: 	272
        Divisions: 		0
        Logical: 		0
        Reads: 			1541
        Writes: 		205
        Comparisons:		17
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest37.exe __orio_perftest37.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest37.exe  
Program Test Output: 
{'[6, 1, 1, 0, 5, 0, 29, 2, 0, 0, 0, 2, 0]' : 0.193653}
{'[6, 1, 1, 0, 5, 0, 29, 2, 0, 0, 0, 2, 0]' : 0.174301}
{'[6, 1, 1, 0, 5, 0, 29, 2, 0, 0, 0, 2, 0]' : 0.173006}
{'[6, 1, 1, 0, 5, 0, 29, 2, 0, 0, 0, 2, 0]' : 0.16898}
{'[6, 1, 1, 0, 5, 0, 29, 2, 0, 0, 0, 2, 0]' : 0.163053}
{'[6, 1, 1, 0, 5, 0, 29, 2, 0, 0, 0, 2, 0]' : 0.166946}
{'[6, 1, 1, 0, 5, 0, 29, 2, 0, 0, 0, 2, 0]' : 0.167695}
{'[6, 1, 1, 0, 5, 0, 29, 2, 0, 0, 0, 2, 0]' : 0.171608}
{'[6, 1, 1, 0, 5, 0, 29, 2, 0, 0, 0, 2, 0]' : 0.172985}
{'[6, 1, 1, 0, 5, 0, 29, 2, 0, 0, 0, 2, 0]' : 0.173002}
{'[6, 1, 1, 0, 5, 0, 29, 2, 0, 0, 0, 2, 0]' : 0.166452}
{'[6, 1, 1, 0, 5, 0, 29, 2, 0, 0, 0, 2, 0]' : 0.16745}
{'[6, 1, 1, 0, 5, 0, 29, 2, 0, 0, 0, 2, 0]' : 0.167761}
{'[6, 1, 1, 0, 5, 0, 29, 2, 0, 0, 0, 2, 0]' : 0.170252}
{'[6, 1, 1, 0, 5, 0, 29, 2, 0, 0, 0, 2, 0]' : 0.170517}
{'[6, 1, 1, 0, 5, 0, 29, 2, 0, 0, 0, 2, 0]' : 0.167643}
{'[6, 1, 1, 0, 5, 0, 29, 2, 0, 0, 0, 2, 0]' : 0.166077}
{'[6, 1, 1, 0, 5, 0, 29, 2, 0, 0, 0, 2, 0]' : 0.164066}
{'[6, 1, 1, 0, 5, 0, 29, 2, 0, 0, 0, 2, 0]' : 0.163003}
{'[6, 1, 1, 0, 5, 0, 29, 2, 0, 0, 0, 2, 0]' : 0.163355}
{'[6, 1, 1, 0, 5, 0, 29, 2, 0, 0, 0, 2, 0]' : 0.172478}
{'[6, 1, 1, 0, 5, 0, 29, 2, 0, 0, 0, 2, 0]' : 0.172997}
{'[6, 1, 1, 0, 5, 0, 29, 2, 0, 0, 0, 2, 0]' : 0.172743}
{'[6, 1, 1, 0, 5, 0, 29, 2, 0, 0, 0, 2, 0]' : 0.164068}
{'[6, 1, 1, 0, 5, 0, 29, 2, 0, 0, 0, 2, 0]' : 0.163006}
{'[6, 1, 1, 0, 5, 0, 29, 2, 0, 0, 0, 2, 0]' : 0.163047}
{'[6, 1, 1, 0, 5, 0, 29, 2, 0, 0, 0, 2, 0]' : 0.168195}
{'[6, 1, 1, 0, 5, 0, 29, 2, 0, 0, 0, 2, 0]' : 0.167699}
{'[6, 1, 1, 0, 5, 0, 29, 2, 0, 0, 0, 2, 0]' : 0.167758}
{'[6, 1, 1, 0, 5, 0, 29, 2, 0, 0, 0, 2, 0]' : 0.172003}

out:
 ["{'[6, 1, 1, 0, 5, 0, 29, 2, 0, 0, 0, 2, 0]' : 0.193653}", "{'[6, 1, 1, 0, 5, 0, 29, 2, 0, 0, 0, 2, 0]' : 0.174301}", "{'[6, 1, 1, 0, 5, 0, 29, 2, 0, 0, 0, 2, 0]' : 0.173006}", "{'[6, 1, 1, 0, 5, 0, 29, 2, 0, 0, 0, 2, 0]' : 0.16898}", "{'[6, 1, 1, 0, 5, 0, 29, 2, 0, 0, 0, 2, 0]' : 0.163053}", "{'[6, 1, 1, 0, 5, 0, 29, 2, 0, 0, 0, 2, 0]' : 0.166946}", "{'[6, 1, 1, 0, 5, 0, 29, 2, 0, 0, 0, 2, 0]' : 0.167695}", "{'[6, 1, 1, 0, 5, 0, 29, 2, 0, 0, 0, 2, 0]' : 0.171608}", "{'[6, 1, 1, 0, 5, 0, 29, 2, 0, 0, 0, 2, 0]' : 0.172985}", "{'[6, 1, 1, 0, 5, 0, 29, 2, 0, 0, 0, 2, 0]' : 0.173002}", "{'[6, 1, 1, 0, 5, 0, 29, 2, 0, 0, 0, 2, 0]' : 0.166452}", "{'[6, 1, 1, 0, 5, 0, 29, 2, 0, 0, 0, 2, 0]' : 0.16745}", "{'[6, 1, 1, 0, 5, 0, 29, 2, 0, 0, 0, 2, 0]' : 0.167761}", "{'[6, 1, 1, 0, 5, 0, 29, 2, 0, 0, 0, 2, 0]' : 0.170252}", "{'[6, 1, 1, 0, 5, 0, 29, 2, 0, 0, 0, 2, 0]' : 0.170517}", "{'[6, 1, 1, 0, 5, 0, 29, 2, 0, 0, 0, 2, 0]' : 0.167643}", "{'[6, 1, 1, 0, 5, 0, 29, 2, 0, 0, 0, 2, 0]' : 0.166077}", "{'[6, 1, 1, 0, 5, 0, 29, 2, 0, 0, 0, 2, 0]' : 0.164066}", "{'[6, 1, 1, 0, 5, 0, 29, 2, 0, 0, 0, 2, 0]' : 0.163003}", "{'[6, 1, 1, 0, 5, 0, 29, 2, 0, 0, 0, 2, 0]' : 0.163355}", "{'[6, 1, 1, 0, 5, 0, 29, 2, 0, 0, 0, 2, 0]' : 0.172478}", "{'[6, 1, 1, 0, 5, 0, 29, 2, 0, 0, 0, 2, 0]' : 0.172997}", "{'[6, 1, 1, 0, 5, 0, 29, 2, 0, 0, 0, 2, 0]' : 0.172743}", "{'[6, 1, 1, 0, 5, 0, 29, 2, 0, 0, 0, 2, 0]' : 0.164068}", "{'[6, 1, 1, 0, 5, 0, 29, 2, 0, 0, 0, 2, 0]' : 0.163006}", "{'[6, 1, 1, 0, 5, 0, 29, 2, 0, 0, 0, 2, 0]' : 0.163047}", "{'[6, 1, 1, 0, 5, 0, 29, 2, 0, 0, 0, 2, 0]' : 0.168195}", "{'[6, 1, 1, 0, 5, 0, 29, 2, 0, 0, 0, 2, 0]' : 0.167699}", "{'[6, 1, 1, 0, 5, 0, 29, 2, 0, 0, 0, 2, 0]' : 0.167758}", "{'[6, 1, 1, 0, 5, 0, 29, 2, 0, 0, 0, 2, 0]' : 0.172003}"]
returning from 'run': {'[6, 1, 1, 0, 5, 0, 29, 2, 0, 0, 0, 2, 0]': ([0.193653, 0.174301, 0.173006, 0.16898, 0.163053, 0.166946, 0.167695, 0.171608, 0.172985, 0.173002, 0.166452, 0.16745, 0.167761, 0.170252, 0.170517, 0.167643, 0.166077, 0.164066, 0.163003, 0.163355, 0.172478, 0.172997, 0.172743, 0.164068, 0.163006, 0.163047, 0.168195, 0.167699, 0.167758, 0.172003], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 1, 1, 0, 5, 0, 29, 2, 0, 0, 0, 2, 0]': ([0.193653, 0.174301, 0.173006, 0.16898, 0.163053, 0.166946, 0.167695, 0.171608, 0.172985, 0.173002, 0.166452, 0.16745, 0.167761, 0.170252, 0.170517, 0.167643, 0.166077, 0.164066, 0.163003, 0.163355, 0.172478, 0.172997, 0.172743, 0.164068, 0.163006, 0.163047, 0.168195, 0.167699, 0.167758, 0.172003], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Complete design, with measurements:
      T1_I T1_J T1_K T2_I T2_J T2_K U1_I U_I U_J U_K RT_I RT_J RT_K cost_mean
569      6    0    6    6    4    6    0   0   0   0    2    0    0 0.1858064
3184     1    0    0    0    6    6    6  26  24   0    0    0    2 0.1859979
6141     6    6    0    6    6    5   18   1   0  26    0    2    0 0.1391436
8973     0    6    6    0    0    5    4   0   0   0    0    0    0 0.3883140
11318    3    0    6    0    0    6   29   0  26  25    2    0    0 0.3149279
15880    1    6    1    3    6    0   23  26  25   0    2    0    0 0.2413522
18119    1    6    6    1    6    6    0  26   0  29    1    1    0 0.1128815
19792    0    6    4    6    6    0   16   3   0  24    0    0    2 0.1481584
21331    0    3    1    6    0    0    1   0  26  25    0    2    0 0.2078544
21335    1    0    6    0    6    0   26  23   9   0    0    2    0 0.2080082
22458    6    0    2    0    0    0    1  25   0  29    1    0    0 0.1234967
23868    5    1    6    6    6    0   16   0  26  26    0    0    0 0.1772670
27277    5    3    6    6    4    6   22  28  28   0    0    2    0 0.2087272
28397    6    5    6    5    0    0    3  29  15   0    0    0    0 0.2363124
30974    1    0    0    5    3    6   29  29   0   8    0    0    0 0.3729205
31155    6    5    0    0    6    3    2   0  26  25    0    0    0 0.1806131
32571    6    6    6    0    0    5   27  11   0  25    0    0    2 0.1416863
33574    6    1    1    0    5    0   29   2   0   0    0    2    0 0.1691933

Heteroscedasticity Test p-value: 0.508271529466
Regression Step:            Df   Sum Sq  Mean Sq F value   Pr(>F)    
T1_I         1 0.017434 0.017434  58.573 0.001566 ** 
T1_J         1 0.003332 0.003332  11.194 0.028683 *  
T1_K         1 0.000855 0.000855   2.872 0.165398    
T2_I         1 0.000001 0.000001   0.002 0.966874    
T2_J         1 0.017712 0.017712  59.504 0.001520 ** 
T2_K         1 0.005828 0.005828  19.579 0.011468 *  
U1_I         1 0.007353 0.007353  24.704 0.007650 ** 
U_I          1 0.000390 0.000390   1.310 0.316227    
U_J          1 0.001885 0.001885   6.333 0.065603 .  
U_K          1 0.017861 0.017861  60.004 0.001496 ** 
RT_I         1 0.000009 0.000009   0.029 0.873448    
RT_J         1 0.006530 0.006530  21.938 0.009421 ** 
RT_K         1 0.025766 0.025766  86.563 0.000743 ***
Residuals    4 0.001191 0.000298                     
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Predicting Best
Generating valid search space of size 36000 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Tested coordinates: 150000
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Tested coordinates: 190000
Tested coordinates: 200000
Tested coordinates: 210000
Tested coordinates: 220000
Tested coordinates: 230000
Tested coordinates: 240000
Tested coordinates: 250000
Tested coordinates: 260000
Tested coordinates: 270000
Tested coordinates: 280000
Tested coordinates: 290000
Valid coordinates: 7200
Tested coordinates: 300000
Tested coordinates: 310000
Tested coordinates: 320000
Tested coordinates: 330000
Tested coordinates: 340000
Tested coordinates: 350000
Tested coordinates: 360000
Tested coordinates: 370000
Tested coordinates: 380000
Tested coordinates: 390000
Tested coordinates: 400000
Tested coordinates: 410000
Tested coordinates: 420000
Tested coordinates: 430000
Tested coordinates: 440000
Tested coordinates: 450000
Tested coordinates: 460000
Tested coordinates: 470000
Tested coordinates: 480000
Tested coordinates: 490000
Tested coordinates: 500000
Tested coordinates: 510000
Tested coordinates: 520000
Tested coordinates: 530000
Tested coordinates: 540000
Tested coordinates: 550000
Tested coordinates: 560000
Tested coordinates: 570000
Tested coordinates: 580000
Tested coordinates: 590000
Valid coordinates: 14400
Tested coordinates: 600000
Tested coordinates: 610000
Tested coordinates: 620000
Tested coordinates: 630000
Tested coordinates: 640000
Tested coordinates: 650000
Tested coordinates: 660000
Tested coordinates: 670000
Tested coordinates: 680000
Tested coordinates: 690000
Tested coordinates: 700000
Tested coordinates: 710000
Tested coordinates: 720000
Tested coordinates: 730000
Tested coordinates: 740000
Tested coordinates: 750000
Tested coordinates: 760000
Tested coordinates: 770000
Tested coordinates: 780000
Tested coordinates: 790000
Tested coordinates: 800000
Tested coordinates: 810000
Tested coordinates: 820000
Tested coordinates: 830000
Tested coordinates: 840000
Tested coordinates: 850000
Tested coordinates: 860000
Tested coordinates: 870000
Tested coordinates: 880000
Tested coordinates: 890000
Valid coordinates: 21600
Tested coordinates: 900000
Tested coordinates: 910000
Tested coordinates: 920000
Tested coordinates: 930000
Tested coordinates: 940000
Tested coordinates: 950000
Tested coordinates: 960000
Tested coordinates: 970000
Tested coordinates: 980000
Tested coordinates: 990000
Tested coordinates: 1000000
Tested coordinates: 1010000
Tested coordinates: 1020000
Tested coordinates: 1030000
Tested coordinates: 1040000
Tested coordinates: 1050000
Tested coordinates: 1060000
Tested coordinates: 1070000
Tested coordinates: 1080000
Tested coordinates: 1090000
Tested coordinates: 1100000
Tested coordinates: 1110000
Tested coordinates: 1120000
Tested coordinates: 1130000
Tested coordinates: 1140000
Tested coordinates: 1150000
Tested coordinates: 1160000
Tested coordinates: 1170000
Tested coordinates: 1180000
Valid coordinates: 28800
Tested coordinates: 1190000
Tested coordinates: 1200000
Tested coordinates: 1210000
Tested coordinates: 1220000
Tested coordinates: 1230000
Tested coordinates: 1240000
Tested coordinates: 1250000
Tested coordinates: 1260000
Tested coordinates: 1270000
Tested coordinates: 1280000
Tested coordinates: 1290000
Tested coordinates: 1300000
Tested coordinates: 1310000
Tested coordinates: 1320000
Tested coordinates: 1330000
Tested coordinates: 1340000
Tested coordinates: 1350000
Tested coordinates: 1360000
Tested coordinates: 1370000
Tested coordinates: 1380000
Tested coordinates: 1390000
Tested coordinates: 1400000
Tested coordinates: 1410000
Tested coordinates: 1420000
Tested coordinates: 1430000
Tested coordinates: 1440000
Tested coordinates: 1450000
Tested coordinates: 1460000
Tested coordinates: 1470000
Tested coordinates: 1480000
Valid coordinates: 36000
Valid/Tested configurations: 36000/1487603
Generated Search Space:
NULL
Getting Best from Design
Response: ['cost_mean']
Design Names:  [1] "T1_I"      "T1_J"      "T1_K"      "T2_I"      "T2_J"      "T2_K"     
 [7] "U1_I"      "U_I"       "U_J"       "U_K"       "RT_I"      "RT_J"     
[13] "RT_K"      "cost_mean"

Design Response:       cost_mean
569   0.1858064
3184  0.1859979
6141  0.1391436
8973  0.3883140
11318 0.3149279
15880 0.2413522
18119 0.1128815
19792 0.1481584
21331 0.2078544
21335 0.2080082
22458 0.1234967
23868 0.1772670
27277 0.2087272
28397 0.2363124
30974 0.3729205
31155 0.1806131
32571 0.1416863
33574 0.1691933

Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Getting fixed variables
Variables within threshold: ['RT_K', 'U_K', 'T2_J', 'T1_I', 'U1_I', 'RT_J']
Fixed Variables: {}
Unique Variables: ['RT_K', 'U_K', 'T2_J', 'T1_I', 'U1_I', 'RT_J']
Pruning Model
Variables within threshold: ['RT_K', 'U_K', 'T2_J', 'T1_I', 'U1_I', 'RT_J']
Best Predicted:      T1_I T1_J T1_K T2_I T2_J T2_K U1_I U_I U_J U_K RT_I RT_J RT_K
6602    5    6    0    4    6    2    3  24   0  28    0    0    2

Best From Design: [1, 6, 6, 1, 6, 6, 0, 26, 0, 29, 1, 1, 0]
Pruned Factors: ['T1_J', 'T1_K', 'T2_I', 'T2_K', 'U_I', 'U_J', 'RT_I']
Pruned Inverse Factors: []
Pruned Interactions: []
Fixed Factors: {'RT_K': 2, 'T1_I': 5, 'U_K': 28, 'T2_J': 6, 'U1_I': 3, 'RT_J': 0}
Length of requested configs: 1
Result was on Database, Returning Now
Starting Point (-O3):
0.16059526666666663
Predicted Best Point:
[5, 6, 0, 4, 6, 2, 3, 24, 0, 28, 0, 0, 2]
Length of requested configs: 1
Code stats:
        Number of loops: 	68
        Max loop nest depth: 	6
        Additions: 		11425
        Multiplications: 	3276
        Divisions: 		0
        Logical: 		0
        Reads: 			17014
        Writes: 		1805
        Comparisons:		68
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest38.exe __orio_perftest38.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest38.exe  
Program Test Output: 
{'[5, 6, 0, 4, 6, 2, 3, 24, 0, 28, 0, 0, 2]' : 0.193645}
{'[5, 6, 0, 4, 6, 2, 3, 24, 0, 28, 0, 0, 2]' : 0.189333}
{'[5, 6, 0, 4, 6, 2, 3, 24, 0, 28, 0, 0, 2]' : 0.167824}
{'[5, 6, 0, 4, 6, 2, 3, 24, 0, 28, 0, 0, 2]' : 0.168076}
{'[5, 6, 0, 4, 6, 2, 3, 24, 0, 28, 0, 0, 2]' : 0.167637}
{'[5, 6, 0, 4, 6, 2, 3, 24, 0, 28, 0, 0, 2]' : 0.16784}
{'[5, 6, 0, 4, 6, 2, 3, 24, 0, 28, 0, 0, 2]' : 0.168038}
{'[5, 6, 0, 4, 6, 2, 3, 24, 0, 28, 0, 0, 2]' : 0.168308}
{'[5, 6, 0, 4, 6, 2, 3, 24, 0, 28, 0, 0, 2]' : 0.167868}
{'[5, 6, 0, 4, 6, 2, 3, 24, 0, 28, 0, 0, 2]' : 0.167881}
{'[5, 6, 0, 4, 6, 2, 3, 24, 0, 28, 0, 0, 2]' : 0.167904}
{'[5, 6, 0, 4, 6, 2, 3, 24, 0, 28, 0, 0, 2]' : 0.168369}
{'[5, 6, 0, 4, 6, 2, 3, 24, 0, 28, 0, 0, 2]' : 0.167931}
{'[5, 6, 0, 4, 6, 2, 3, 24, 0, 28, 0, 0, 2]' : 0.168252}
{'[5, 6, 0, 4, 6, 2, 3, 24, 0, 28, 0, 0, 2]' : 0.167905}
{'[5, 6, 0, 4, 6, 2, 3, 24, 0, 28, 0, 0, 2]' : 0.167827}
{'[5, 6, 0, 4, 6, 2, 3, 24, 0, 28, 0, 0, 2]' : 0.167915}
{'[5, 6, 0, 4, 6, 2, 3, 24, 0, 28, 0, 0, 2]' : 0.16824}
{'[5, 6, 0, 4, 6, 2, 3, 24, 0, 28, 0, 0, 2]' : 0.167919}
{'[5, 6, 0, 4, 6, 2, 3, 24, 0, 28, 0, 0, 2]' : 0.168137}
{'[5, 6, 0, 4, 6, 2, 3, 24, 0, 28, 0, 0, 2]' : 0.167967}
{'[5, 6, 0, 4, 6, 2, 3, 24, 0, 28, 0, 0, 2]' : 0.167934}
{'[5, 6, 0, 4, 6, 2, 3, 24, 0, 28, 0, 0, 2]' : 0.167837}
{'[5, 6, 0, 4, 6, 2, 3, 24, 0, 28, 0, 0, 2]' : 0.168185}
{'[5, 6, 0, 4, 6, 2, 3, 24, 0, 28, 0, 0, 2]' : 0.16782}
{'[5, 6, 0, 4, 6, 2, 3, 24, 0, 28, 0, 0, 2]' : 0.167965}
{'[5, 6, 0, 4, 6, 2, 3, 24, 0, 28, 0, 0, 2]' : 0.167825}
{'[5, 6, 0, 4, 6, 2, 3, 24, 0, 28, 0, 0, 2]' : 0.16786}
{'[5, 6, 0, 4, 6, 2, 3, 24, 0, 28, 0, 0, 2]' : 0.167901}
{'[5, 6, 0, 4, 6, 2, 3, 24, 0, 28, 0, 0, 2]' : 0.167844}

out:
 ["{'[5, 6, 0, 4, 6, 2, 3, 24, 0, 28, 0, 0, 2]' : 0.193645}", "{'[5, 6, 0, 4, 6, 2, 3, 24, 0, 28, 0, 0, 2]' : 0.189333}", "{'[5, 6, 0, 4, 6, 2, 3, 24, 0, 28, 0, 0, 2]' : 0.167824}", "{'[5, 6, 0, 4, 6, 2, 3, 24, 0, 28, 0, 0, 2]' : 0.168076}", "{'[5, 6, 0, 4, 6, 2, 3, 24, 0, 28, 0, 0, 2]' : 0.167637}", "{'[5, 6, 0, 4, 6, 2, 3, 24, 0, 28, 0, 0, 2]' : 0.16784}", "{'[5, 6, 0, 4, 6, 2, 3, 24, 0, 28, 0, 0, 2]' : 0.168038}", "{'[5, 6, 0, 4, 6, 2, 3, 24, 0, 28, 0, 0, 2]' : 0.168308}", "{'[5, 6, 0, 4, 6, 2, 3, 24, 0, 28, 0, 0, 2]' : 0.167868}", "{'[5, 6, 0, 4, 6, 2, 3, 24, 0, 28, 0, 0, 2]' : 0.167881}", "{'[5, 6, 0, 4, 6, 2, 3, 24, 0, 28, 0, 0, 2]' : 0.167904}", "{'[5, 6, 0, 4, 6, 2, 3, 24, 0, 28, 0, 0, 2]' : 0.168369}", "{'[5, 6, 0, 4, 6, 2, 3, 24, 0, 28, 0, 0, 2]' : 0.167931}", "{'[5, 6, 0, 4, 6, 2, 3, 24, 0, 28, 0, 0, 2]' : 0.168252}", "{'[5, 6, 0, 4, 6, 2, 3, 24, 0, 28, 0, 0, 2]' : 0.167905}", "{'[5, 6, 0, 4, 6, 2, 3, 24, 0, 28, 0, 0, 2]' : 0.167827}", "{'[5, 6, 0, 4, 6, 2, 3, 24, 0, 28, 0, 0, 2]' : 0.167915}", "{'[5, 6, 0, 4, 6, 2, 3, 24, 0, 28, 0, 0, 2]' : 0.16824}", "{'[5, 6, 0, 4, 6, 2, 3, 24, 0, 28, 0, 0, 2]' : 0.167919}", "{'[5, 6, 0, 4, 6, 2, 3, 24, 0, 28, 0, 0, 2]' : 0.168137}", "{'[5, 6, 0, 4, 6, 2, 3, 24, 0, 28, 0, 0, 2]' : 0.167967}", "{'[5, 6, 0, 4, 6, 2, 3, 24, 0, 28, 0, 0, 2]' : 0.167934}", "{'[5, 6, 0, 4, 6, 2, 3, 24, 0, 28, 0, 0, 2]' : 0.167837}", "{'[5, 6, 0, 4, 6, 2, 3, 24, 0, 28, 0, 0, 2]' : 0.168185}", "{'[5, 6, 0, 4, 6, 2, 3, 24, 0, 28, 0, 0, 2]' : 0.16782}", "{'[5, 6, 0, 4, 6, 2, 3, 24, 0, 28, 0, 0, 2]' : 0.167965}", "{'[5, 6, 0, 4, 6, 2, 3, 24, 0, 28, 0, 0, 2]' : 0.167825}", "{'[5, 6, 0, 4, 6, 2, 3, 24, 0, 28, 0, 0, 2]' : 0.16786}", "{'[5, 6, 0, 4, 6, 2, 3, 24, 0, 28, 0, 0, 2]' : 0.167901}", "{'[5, 6, 0, 4, 6, 2, 3, 24, 0, 28, 0, 0, 2]' : 0.167844}"]
returning from 'run': {'[5, 6, 0, 4, 6, 2, 3, 24, 0, 28, 0, 0, 2]': ([0.193645, 0.189333, 0.167824, 0.168076, 0.167637, 0.16784, 0.168038, 0.168308, 0.167868, 0.167881, 0.167904, 0.168369, 0.167931, 0.168252, 0.167905, 0.167827, 0.167915, 0.16824, 0.167919, 0.168137, 0.167967, 0.167934, 0.167837, 0.168185, 0.16782, 0.167965, 0.167825, 0.16786, 0.167901, 0.167844], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 6, 0, 4, 6, 2, 3, 24, 0, 28, 0, 0, 2]': ([0.193645, 0.189333, 0.167824, 0.168076, 0.167637, 0.16784, 0.168038, 0.168308, 0.167868, 0.167881, 0.167904, 0.168369, 0.167931, 0.168252, 0.167905, 0.167827, 0.167915, 0.16824, 0.167919, 0.168137, 0.167967, 0.167934, 0.167837, 0.168185, 0.16782, 0.167965, 0.167825, 0.16786, 0.167901, 0.167844], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Design Best Point:
[1, 6, 6, 1, 6, 6, 0, 26, 0, 29, 1, 1, 0]
Length of requested configs: 1
Result was on Database, Returning Now
Fixed Factors: {'RT_K': 2, 'T1_I': 5, 'U_K': 28, 'T2_J': 6, 'U1_I': 3, 'RT_J': 0}
Slowdown (Design Best): 0.7028943152745474
Slowdown (Predicted Best): 1.0556531554064068
Budget: 36/180
Updating Global Best: 0.11288149999999998
Current Best Point: 
[1, 6, 6, 1, 6, 6, 0, 26, 0, 29, 1, 1, 0]
Step 2
Full Model:  ~ T1_J + T1_K + T2_I + T2_K + U_I + U_J + RT_I
Generating valid search space of size 24000 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Tested coordinates: 150000
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Tested coordinates: 190000
Tested coordinates: 200000
Tested coordinates: 210000
Tested coordinates: 220000
Tested coordinates: 230000
Tested coordinates: 240000
Tested coordinates: 250000
Tested coordinates: 260000
Tested coordinates: 270000
Tested coordinates: 280000
Tested coordinates: 290000
Tested coordinates: 300000
Tested coordinates: 310000
Tested coordinates: 320000
Tested coordinates: 330000
Tested coordinates: 340000
Valid coordinates: 4800
Tested coordinates: 350000
Tested coordinates: 360000
Tested coordinates: 370000
Tested coordinates: 380000
Tested coordinates: 390000
Tested coordinates: 400000
Tested coordinates: 410000
Tested coordinates: 420000
Tested coordinates: 430000
Tested coordinates: 440000
Tested coordinates: 450000
Tested coordinates: 460000
Tested coordinates: 470000
Tested coordinates: 480000
Tested coordinates: 490000
Tested coordinates: 500000
Tested coordinates: 510000
Tested coordinates: 520000
Tested coordinates: 530000
Tested coordinates: 540000
Tested coordinates: 550000
Tested coordinates: 560000
Tested coordinates: 570000
Tested coordinates: 580000
Tested coordinates: 590000
Tested coordinates: 600000
Tested coordinates: 610000
Tested coordinates: 620000
Tested coordinates: 630000
Tested coordinates: 640000
Tested coordinates: 650000
Tested coordinates: 660000
Tested coordinates: 670000
Tested coordinates: 680000
Tested coordinates: 690000
Valid coordinates: 9600
Tested coordinates: 700000
Tested coordinates: 710000
Tested coordinates: 720000
Tested coordinates: 730000
Tested coordinates: 740000
Tested coordinates: 750000
Tested coordinates: 760000
Tested coordinates: 770000
Tested coordinates: 780000
Tested coordinates: 790000
Tested coordinates: 800000
Tested coordinates: 810000
Tested coordinates: 820000
Tested coordinates: 830000
Tested coordinates: 840000
Tested coordinates: 850000
Tested coordinates: 860000
Tested coordinates: 870000
Tested coordinates: 880000
Tested coordinates: 890000
Tested coordinates: 900000
Tested coordinates: 910000
Tested coordinates: 920000
Tested coordinates: 930000
Tested coordinates: 940000
Tested coordinates: 950000
Tested coordinates: 960000
Tested coordinates: 970000
Tested coordinates: 980000
Tested coordinates: 990000
Tested coordinates: 1000000
Tested coordinates: 1010000
Tested coordinates: 1020000
Tested coordinates: 1030000
Tested coordinates: 1040000
Valid coordinates: 14400
Tested coordinates: 1050000
Tested coordinates: 1060000
Tested coordinates: 1070000
Tested coordinates: 1080000
Tested coordinates: 1090000
Tested coordinates: 1100000
Tested coordinates: 1110000
Tested coordinates: 1120000
Tested coordinates: 1130000
Tested coordinates: 1140000
Tested coordinates: 1150000
Tested coordinates: 1160000
Tested coordinates: 1170000
Tested coordinates: 1180000
Tested coordinates: 1190000
Tested coordinates: 1200000
Tested coordinates: 1210000
Tested coordinates: 1220000
Tested coordinates: 1230000
Tested coordinates: 1240000
Tested coordinates: 1250000
Tested coordinates: 1260000
Tested coordinates: 1270000
Tested coordinates: 1280000
Tested coordinates: 1290000
Tested coordinates: 1300000
Tested coordinates: 1310000
Tested coordinates: 1320000
Tested coordinates: 1330000
Tested coordinates: 1340000
Tested coordinates: 1350000
Tested coordinates: 1360000
Tested coordinates: 1370000
Tested coordinates: 1380000
Tested coordinates: 1390000
Tested coordinates: 1400000
Valid coordinates: 19200
Tested coordinates: 1410000
Tested coordinates: 1420000
Tested coordinates: 1430000
Tested coordinates: 1440000
Tested coordinates: 1450000
Tested coordinates: 1460000
Tested coordinates: 1470000
Tested coordinates: 1480000
Tested coordinates: 1490000
Tested coordinates: 1500000
Tested coordinates: 1510000
Tested coordinates: 1520000
Tested coordinates: 1530000
Tested coordinates: 1540000
Tested coordinates: 1550000
Tested coordinates: 1560000
Tested coordinates: 1570000
Tested coordinates: 1580000
Tested coordinates: 1590000
Tested coordinates: 1600000
Tested coordinates: 1610000
Tested coordinates: 1620000
Tested coordinates: 1630000
Tested coordinates: 1640000
Tested coordinates: 1650000
Tested coordinates: 1660000
Tested coordinates: 1670000
Tested coordinates: 1680000
Tested coordinates: 1690000
Tested coordinates: 1700000
Tested coordinates: 1710000
Tested coordinates: 1720000
Tested coordinates: 1730000
Tested coordinates: 1740000
Tested coordinates: 1750000
Tested coordinates: 1760000
Valid coordinates: 24000
Valid/Tested configurations: 24000/1761954
Generated Search Space:
NULL
Clean Info:
Removed Factors: [1] "RT_I"

Removed Inverse Factors: character(0)

New Factors: ['T1_J', 'T1_K', 'T2_I', 'T2_K', 'U_I', 'U_J']
New Inverse Factors: []
New Fixed Factors: {'RT_K': 2, 'T1_I': 5, 'RT_I': 0, 'U_K': 28, 'T2_J': 6, 'U1_I': 3, 'RT_J': 0}
Fixed Factors: {'RT_K': 2, 'T1_I': 5, 'RT_I': 0, 'U_K': 28, 'T2_J': 6, 'U1_I': 3, 'RT_J': 0}
Computing D-Optimal Design
Computing D-Optimal Design with 12 experiments
Design Formula:  ~ T1_J + T1_K + T2_I + T2_K + U_I + U_J + RT_I
Starting "optFederov" run
Using Search Space:
NULL
Data Dimensions: [1] 24000     6

