
====== START ORIO ======

----- begin reading the source file: atax2.src1.c -----
----- finished reading the source file -----

----- begin parsing annotations -----
----- finished parsing annotations -----

----- begin optimizations -----
Search_Space         = 8.234e+13
Number_of_Parameters = 18
Numeric_Parameters   = 13
Binary_Parameters    = 05
['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
[[1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [False, True], [False, True], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 8, 32], [1, 8, 32], [1, 8, 32], [False, True], [False, True], [False, True]]

----- begin empirical tuning for problem size -----
 N = 10000
Parameters: {'ACOPY_x': [0, 2], 'ACOPY_y': [0, 2], 'RT_K': [0, 3], 'T1_I': [0, 7], 'T1_J': [0, 7], 'T1_K': [0, 7], 'U_K': [0, 30], 'U_J': [0, 30], 'U_I': [0, 30], 'U1_I': [0, 30], 'T2_K': [0, 7], 'T2_J': [0, 7], 'T2_I': [0, 7], 'VEC2': [0, 2], 'VEC1': [0, 2], 'RT_I': [0, 3], 'SCR': [0, 2], 'RT_J': [0, 3]}
Parameter Range Values: {'ACOPY_x': [False, True], 'ACOPY_y': [False, True], 'RT_K': [1, 8, 32], 'T1_I': [1, 16, 32, 64, 128, 256, 512], 'T1_J': [1, 16, 32, 64, 128, 256, 512], 'T1_K': [1, 16, 32, 64, 128, 256, 512], 'U_K': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_J': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U1_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'T2_K': [1, 64, 128, 256, 512, 1024, 2048], 'T2_J': [1, 64, 128, 256, 512, 1024, 2048], 'T2_I': [1, 64, 128, 256, 512, 1024, 2048], 'VEC2': [False, True], 'VEC1': [False, True], 'RT_I': [1, 8, 32], 'SCR': [False, True], 'RT_J': [1, 8, 32]}

----- begin random search -----
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Inverse Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Starting DOPT-anova
Step 0
Generating valid search space of size 4600 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Valid coordinates: 920
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Valid coordinates: 1840
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Valid coordinates: 2760
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Tested coordinates: 150000
Valid coordinates: 3680
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Tested coordinates: 190000
Valid coordinates: 4600
Valid/Tested configurations: 4600/195388
Generated Search Space:
NULL
Clean Info:
Removed Factors: character(0)

Removed Inverse Factors: [1] "ACOPY_x" "ACOPY_y" "SCR"     "VEC1"    "VEC2"   

New Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
New Inverse Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
New Fixed Factors: {}
Full Model:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Fixed Factors: {}
Computing D-Optimal Design
Computing D-Optimal Design with 46 experiments
Design Formula:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Starting "optFederov" run
Using Search Space:
NULL
Data Dimensions: [1] 4600   18

     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
157     2    6    6    6    0    0       1       0   23   0   6  29    0    2
237     5    4    0    6    2    2       1       0   29   0  29  27    1    1
246     3    1    0    1    0    0       1       0    5  27   0   8    2    0
531     1    0    3    2    3    6       1       1   12  26  23   0    1    1
568     6    1    6    5    0    5       1       1    1  26   0  27    0    2
641     0    0    0    4    4    4       0       0    3   0   0  10    1    0
687     4    0    6    0    1    6       0       0    0  12  29   0    0    0
739     6    5    0    0    0    0       0       0   29  28   1   0    0    1
1084    0    5    0    1    0    6       0       0    3   0  24  20    2    0
1343    6    2    3    6    6    2       1       1   25  24   0  18    0    0
1392    2    5    5    0    6    4       1       0   26  29   0  29    0    0
1683    6    1    4    6    0    0       0       0    6  21   0   8    1    0
1688    6    4    6    0    5    6       0       0   27  15   0   1    2    0
1826    2    6    0    0    5    0       0       1    6   7   0  28    0    0
1835    0    0    1    2    5    1       0       0   12   0  27   6    0    2
1957    6    5    6    6    0    6       1       0   20   0  29  18    0    0
1977    6    4    0    6    6    6       0       1    0  14   0  11    0    2
2153    6    0    3    5    5    1       1       0    3  19   0   1    2    0
2232    2    0    2    0    1    0       0       0    4   0   6  28    0    1
2262    6    0    0    0    6    4       1       0   16   0  28  29    1    0
2476    0    4    5    2    6    5       0       1    2  29  28   0    2    0
2510    2    6    6    1    6    0       1       1   13   5  15   0    0    1
2515    5    6    1    0    0    6       0       1   28   0   1  10    0    2
3066    5    3    5    3    4    0       1       1    0   0   0  26    1    1
3178    5    2    6    3    6    6       0       1   12   0  22  26    1    0
3282    1    3    1    3    2    4       1       1   24   0   0  29    0    0
3308    2    6    0    6    5    4       1       0   28  24  24   0    1    0
3310    5    0    6    6    2    0       0       1   13   0  28  23    1    0
3440    2    6    0    5    4    5       0       0   18  25   0   0    1    0
3444    1    1    2    0    0    1       0       1   17   0  25   0    0    1
3533    0    0    3    6    6    0       0       1   25   0  10  20    2    0
3674    0    6    0    6    0    3       0       1    9   0   7  10    0    1
3693    0    3    3    0    4    2       0       0    1   6   0  23    0    2
3884    0    5    1    0    5    2       1       1   10   0  27   8    1    0
3885    3    2    0    1    1    2       0       1   16   0   8  15    0    0
4104    4    0    0    4    0    5       0       0   20  21   0  29    0    0
4147    0    4    5    0    2    0       1       1   28  15   0   7    0    0
4148    3    0    4    1    0    4       1       1    0   6   0  23    1    0
4150    0    0    6    5    1    4       1       1    7  26   0  12    1    0
4192    5    3    2    6    0    6       1       1   26   7  15   0    0    0
4286    3    6    6    1    5    0       0       0    0   0  10   1    1    1
4305    0    2    6    2    6    5       1       0   29   5  14   0    0    1
4347    1    1    0    6    2    6       1       0    0   0  12  24    0    0
4353    6    6    2    4    0    1       0       1    0  21  14   0    2    0
4451    1    2    1    2    0    0       0       0   17   7   0   5    1    0
4524    5    1    0    0    3    0       1       1   18  27   0   0    0    2
     RT_K SCR VEC1 VEC2
157     0   1    1    1
237     0   0    1    0
246     0   0    0    0
531     0   1    1    1
568     0   0    1    1
641     0   0    1    1
687     1   0    1    0
739     0   1    1    0
1084    0   1    1    0
1343    1   1    1    1
1392    2   0    1    0
1683    1   1    1    0
1688    0   0    1    1
1826    0   0    0    1
1835    0   0    1    1
1957    0   1    0    0
1977    0   1    1    0
2153    0   0    1    0
2232    1   0    0    0
2262    0   1    0    0
2476    0   0    0    1
2510    1   1    1    0
2515    0   0    0    0
3066    0   0    1    0
3178    1   0    0    1
3282    1   1    0    1
3308    1   1    0    0
3310    1   1    1    0
3440    1   1    0    0
3444    1   0    0    0
3533    0   1    0    1
3674    1   1    1    1
3693    0   1    0    0
3884    1   0    1    0
3885    2   1    0    0
4104    2   0    0    1
4147    2   1    0    1
4148    0   0    0    0
4150    1   0    0    1
4192    2   1    1    1
4286    0   1    0    1
4305    0   0    0    0
4347    1   0    1    1
4353    0   0    0    1
4451    0   1    1    1
4524    0   1    1    0

D-Efficiency Approximation: [1] 0.41

Measuring design of size 46
Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	5
        Additions: 		373
        Multiplications: 	126
        Divisions: 		0
        Logical: 		0
        Reads: 			840
        Writes: 		183
        Comparisons:		11
        Gotos: 			0
        
 building the original code:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -DORIGINAL -o __orio_perftest_original.exe __orio_perftest1.c timer_cpu.o -lm
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest1.exe __orio_perftest1.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest1.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest1.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest1.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest1.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = jjj
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	5
        Additions: 		2271
        Multiplications: 	666
        Divisions: 		0
        Logical: 		0
        Reads: 			3606
        Writes: 		407
        Comparisons:		18
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest2.exe __orio_perftest2.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest2.exe  
Program Test Output: 
{'[5, 4, 0, 6, 2, 2, 1, 0, 29, 0, 29, 27, 1, 1, 0, 0, 1, 0]' : 0.112442}
{'[5, 4, 0, 6, 2, 2, 1, 0, 29, 0, 29, 27, 1, 1, 0, 0, 1, 0]' : 0.115184}
{'[5, 4, 0, 6, 2, 2, 1, 0, 29, 0, 29, 27, 1, 1, 0, 0, 1, 0]' : 0.11506}
{'[5, 4, 0, 6, 2, 2, 1, 0, 29, 0, 29, 27, 1, 1, 0, 0, 1, 0]' : 0.117658}
{'[5, 4, 0, 6, 2, 2, 1, 0, 29, 0, 29, 27, 1, 1, 0, 0, 1, 0]' : 0.117644}
{'[5, 4, 0, 6, 2, 2, 1, 0, 29, 0, 29, 27, 1, 1, 0, 0, 1, 0]' : 0.11549}
{'[5, 4, 0, 6, 2, 2, 1, 0, 29, 0, 29, 27, 1, 1, 0, 0, 1, 0]' : 0.114818}
{'[5, 4, 0, 6, 2, 2, 1, 0, 29, 0, 29, 27, 1, 1, 0, 0, 1, 0]' : 0.117001}
{'[5, 4, 0, 6, 2, 2, 1, 0, 29, 0, 29, 27, 1, 1, 0, 0, 1, 0]' : 0.11761}
{'[5, 4, 0, 6, 2, 2, 1, 0, 29, 0, 29, 27, 1, 1, 0, 0, 1, 0]' : 0.115692}
{'[5, 4, 0, 6, 2, 2, 1, 0, 29, 0, 29, 27, 1, 1, 0, 0, 1, 0]' : 0.11462}
{'[5, 4, 0, 6, 2, 2, 1, 0, 29, 0, 29, 27, 1, 1, 0, 0, 1, 0]' : 0.116222}
{'[5, 4, 0, 6, 2, 2, 1, 0, 29, 0, 29, 27, 1, 1, 0, 0, 1, 0]' : 0.117712}
{'[5, 4, 0, 6, 2, 2, 1, 0, 29, 0, 29, 27, 1, 1, 0, 0, 1, 0]' : 0.11765}
{'[5, 4, 0, 6, 2, 2, 1, 0, 29, 0, 29, 27, 1, 1, 0, 0, 1, 0]' : 0.115362}
{'[5, 4, 0, 6, 2, 2, 1, 0, 29, 0, 29, 27, 1, 1, 0, 0, 1, 0]' : 0.115223}
{'[5, 4, 0, 6, 2, 2, 1, 0, 29, 0, 29, 27, 1, 1, 0, 0, 1, 0]' : 0.11465}
{'[5, 4, 0, 6, 2, 2, 1, 0, 29, 0, 29, 27, 1, 1, 0, 0, 1, 0]' : 0.114175}
{'[5, 4, 0, 6, 2, 2, 1, 0, 29, 0, 29, 27, 1, 1, 0, 0, 1, 0]' : 0.111598}
{'[5, 4, 0, 6, 2, 2, 1, 0, 29, 0, 29, 27, 1, 1, 0, 0, 1, 0]' : 0.111488}
{'[5, 4, 0, 6, 2, 2, 1, 0, 29, 0, 29, 27, 1, 1, 0, 0, 1, 0]' : 0.11625}
{'[5, 4, 0, 6, 2, 2, 1, 0, 29, 0, 29, 27, 1, 1, 0, 0, 1, 0]' : 0.117666}
{'[5, 4, 0, 6, 2, 2, 1, 0, 29, 0, 29, 27, 1, 1, 0, 0, 1, 0]' : 0.115283}
{'[5, 4, 0, 6, 2, 2, 1, 0, 29, 0, 29, 27, 1, 1, 0, 0, 1, 0]' : 0.114669}
{'[5, 4, 0, 6, 2, 2, 1, 0, 29, 0, 29, 27, 1, 1, 0, 0, 1, 0]' : 0.115657}
{'[5, 4, 0, 6, 2, 2, 1, 0, 29, 0, 29, 27, 1, 1, 0, 0, 1, 0]' : 0.1148}
{'[5, 4, 0, 6, 2, 2, 1, 0, 29, 0, 29, 27, 1, 1, 0, 0, 1, 0]' : 0.11461}
{'[5, 4, 0, 6, 2, 2, 1, 0, 29, 0, 29, 27, 1, 1, 0, 0, 1, 0]' : 0.115108}
{'[5, 4, 0, 6, 2, 2, 1, 0, 29, 0, 29, 27, 1, 1, 0, 0, 1, 0]' : 0.115028}
{'[5, 4, 0, 6, 2, 2, 1, 0, 29, 0, 29, 27, 1, 1, 0, 0, 1, 0]' : 0.117635}

out:
 ["{'[5, 4, 0, 6, 2, 2, 1, 0, 29, 0, 29, 27, 1, 1, 0, 0, 1, 0]' : 0.112442}", "{'[5, 4, 0, 6, 2, 2, 1, 0, 29, 0, 29, 27, 1, 1, 0, 0, 1, 0]' : 0.115184}", "{'[5, 4, 0, 6, 2, 2, 1, 0, 29, 0, 29, 27, 1, 1, 0, 0, 1, 0]' : 0.11506}", "{'[5, 4, 0, 6, 2, 2, 1, 0, 29, 0, 29, 27, 1, 1, 0, 0, 1, 0]' : 0.117658}", "{'[5, 4, 0, 6, 2, 2, 1, 0, 29, 0, 29, 27, 1, 1, 0, 0, 1, 0]' : 0.117644}", "{'[5, 4, 0, 6, 2, 2, 1, 0, 29, 0, 29, 27, 1, 1, 0, 0, 1, 0]' : 0.11549}", "{'[5, 4, 0, 6, 2, 2, 1, 0, 29, 0, 29, 27, 1, 1, 0, 0, 1, 0]' : 0.114818}", "{'[5, 4, 0, 6, 2, 2, 1, 0, 29, 0, 29, 27, 1, 1, 0, 0, 1, 0]' : 0.117001}", "{'[5, 4, 0, 6, 2, 2, 1, 0, 29, 0, 29, 27, 1, 1, 0, 0, 1, 0]' : 0.11761}", "{'[5, 4, 0, 6, 2, 2, 1, 0, 29, 0, 29, 27, 1, 1, 0, 0, 1, 0]' : 0.115692}", "{'[5, 4, 0, 6, 2, 2, 1, 0, 29, 0, 29, 27, 1, 1, 0, 0, 1, 0]' : 0.11462}", "{'[5, 4, 0, 6, 2, 2, 1, 0, 29, 0, 29, 27, 1, 1, 0, 0, 1, 0]' : 0.116222}", "{'[5, 4, 0, 6, 2, 2, 1, 0, 29, 0, 29, 27, 1, 1, 0, 0, 1, 0]' : 0.117712}", "{'[5, 4, 0, 6, 2, 2, 1, 0, 29, 0, 29, 27, 1, 1, 0, 0, 1, 0]' : 0.11765}", "{'[5, 4, 0, 6, 2, 2, 1, 0, 29, 0, 29, 27, 1, 1, 0, 0, 1, 0]' : 0.115362}", "{'[5, 4, 0, 6, 2, 2, 1, 0, 29, 0, 29, 27, 1, 1, 0, 0, 1, 0]' : 0.115223}", "{'[5, 4, 0, 6, 2, 2, 1, 0, 29, 0, 29, 27, 1, 1, 0, 0, 1, 0]' : 0.11465}", "{'[5, 4, 0, 6, 2, 2, 1, 0, 29, 0, 29, 27, 1, 1, 0, 0, 1, 0]' : 0.114175}", "{'[5, 4, 0, 6, 2, 2, 1, 0, 29, 0, 29, 27, 1, 1, 0, 0, 1, 0]' : 0.111598}", "{'[5, 4, 0, 6, 2, 2, 1, 0, 29, 0, 29, 27, 1, 1, 0, 0, 1, 0]' : 0.111488}", "{'[5, 4, 0, 6, 2, 2, 1, 0, 29, 0, 29, 27, 1, 1, 0, 0, 1, 0]' : 0.11625}", "{'[5, 4, 0, 6, 2, 2, 1, 0, 29, 0, 29, 27, 1, 1, 0, 0, 1, 0]' : 0.117666}", "{'[5, 4, 0, 6, 2, 2, 1, 0, 29, 0, 29, 27, 1, 1, 0, 0, 1, 0]' : 0.115283}", "{'[5, 4, 0, 6, 2, 2, 1, 0, 29, 0, 29, 27, 1, 1, 0, 0, 1, 0]' : 0.114669}", "{'[5, 4, 0, 6, 2, 2, 1, 0, 29, 0, 29, 27, 1, 1, 0, 0, 1, 0]' : 0.115657}", "{'[5, 4, 0, 6, 2, 2, 1, 0, 29, 0, 29, 27, 1, 1, 0, 0, 1, 0]' : 0.1148}", "{'[5, 4, 0, 6, 2, 2, 1, 0, 29, 0, 29, 27, 1, 1, 0, 0, 1, 0]' : 0.11461}", "{'[5, 4, 0, 6, 2, 2, 1, 0, 29, 0, 29, 27, 1, 1, 0, 0, 1, 0]' : 0.115108}", "{'[5, 4, 0, 6, 2, 2, 1, 0, 29, 0, 29, 27, 1, 1, 0, 0, 1, 0]' : 0.115028}", "{'[5, 4, 0, 6, 2, 2, 1, 0, 29, 0, 29, 27, 1, 1, 0, 0, 1, 0]' : 0.117635}"]
returning from 'run': {'[5, 4, 0, 6, 2, 2, 1, 0, 29, 0, 29, 27, 1, 1, 0, 0, 1, 0]': ([0.112442, 0.115184, 0.11506, 0.117658, 0.117644, 0.11549, 0.114818, 0.117001, 0.11761, 0.115692, 0.11462, 0.116222, 0.117712, 0.11765, 0.115362, 0.115223, 0.11465, 0.114175, 0.111598, 0.111488, 0.11625, 0.117666, 0.115283, 0.114669, 0.115657, 0.1148, 0.11461, 0.115108, 0.115028, 0.117635], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 4, 0, 6, 2, 2, 1, 0, 29, 0, 29, 27, 1, 1, 0, 0, 1, 0]': ([0.112442, 0.115184, 0.11506, 0.117658, 0.117644, 0.11549, 0.114818, 0.117001, 0.11761, 0.115692, 0.11462, 0.116222, 0.117712, 0.11765, 0.115362, 0.115223, 0.11465, 0.114175, 0.111598, 0.111488, 0.11625, 0.117666, 0.115283, 0.114669, 0.115657, 0.1148, 0.11461, 0.115108, 0.115028, 0.117635], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
Code stats:
        Number of loops: 	102
        Max loop nest depth: 	4
        Additions: 		4607
        Multiplications: 	1342
        Divisions: 		0
        Logical: 		0
        Reads: 			7643
        Writes: 		942
        Comparisons:		102
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest3.exe __orio_perftest3.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest3.exe  
Program Test Output: 
{'[3, 1, 0, 1, 0, 0, 1, 0, 5, 27, 0, 8, 2, 0, 0, 0, 0, 0]' : 0.191216}
{'[3, 1, 0, 1, 0, 0, 1, 0, 5, 27, 0, 8, 2, 0, 0, 0, 0, 0]' : 0.1918}
{'[3, 1, 0, 1, 0, 0, 1, 0, 5, 27, 0, 8, 2, 0, 0, 0, 0, 0]' : 0.191226}
{'[3, 1, 0, 1, 0, 0, 1, 0, 5, 27, 0, 8, 2, 0, 0, 0, 0, 0]' : 0.190254}
{'[3, 1, 0, 1, 0, 0, 1, 0, 5, 27, 0, 8, 2, 0, 0, 0, 0, 0]' : 0.193433}
{'[3, 1, 0, 1, 0, 0, 1, 0, 5, 27, 0, 8, 2, 0, 0, 0, 0, 0]' : 0.193872}
{'[3, 1, 0, 1, 0, 0, 1, 0, 5, 27, 0, 8, 2, 0, 0, 0, 0, 0]' : 0.195674}
{'[3, 1, 0, 1, 0, 0, 1, 0, 5, 27, 0, 8, 2, 0, 0, 0, 0, 0]' : 0.195875}
{'[3, 1, 0, 1, 0, 0, 1, 0, 5, 27, 0, 8, 2, 0, 0, 0, 0, 0]' : 0.195637}
{'[3, 1, 0, 1, 0, 0, 1, 0, 5, 27, 0, 8, 2, 0, 0, 0, 0, 0]' : 0.195191}
{'[3, 1, 0, 1, 0, 0, 1, 0, 5, 27, 0, 8, 2, 0, 0, 0, 0, 0]' : 0.19378}
{'[3, 1, 0, 1, 0, 0, 1, 0, 5, 27, 0, 8, 2, 0, 0, 0, 0, 0]' : 0.192394}
{'[3, 1, 0, 1, 0, 0, 1, 0, 5, 27, 0, 8, 2, 0, 0, 0, 0, 0]' : 0.194388}
{'[3, 1, 0, 1, 0, 0, 1, 0, 5, 27, 0, 8, 2, 0, 0, 0, 0, 0]' : 0.19528}
{'[3, 1, 0, 1, 0, 0, 1, 0, 5, 27, 0, 8, 2, 0, 0, 0, 0, 0]' : 0.195603}
{'[3, 1, 0, 1, 0, 0, 1, 0, 5, 27, 0, 8, 2, 0, 0, 0, 0, 0]' : 0.195289}
{'[3, 1, 0, 1, 0, 0, 1, 0, 5, 27, 0, 8, 2, 0, 0, 0, 0, 0]' : 0.195125}
{'[3, 1, 0, 1, 0, 0, 1, 0, 5, 27, 0, 8, 2, 0, 0, 0, 0, 0]' : 0.195477}
{'[3, 1, 0, 1, 0, 0, 1, 0, 5, 27, 0, 8, 2, 0, 0, 0, 0, 0]' : 0.195516}
{'[3, 1, 0, 1, 0, 0, 1, 0, 5, 27, 0, 8, 2, 0, 0, 0, 0, 0]' : 0.195218}
{'[3, 1, 0, 1, 0, 0, 1, 0, 5, 27, 0, 8, 2, 0, 0, 0, 0, 0]' : 0.194657}
{'[3, 1, 0, 1, 0, 0, 1, 0, 5, 27, 0, 8, 2, 0, 0, 0, 0, 0]' : 0.195008}
{'[3, 1, 0, 1, 0, 0, 1, 0, 5, 27, 0, 8, 2, 0, 0, 0, 0, 0]' : 0.19622}
{'[3, 1, 0, 1, 0, 0, 1, 0, 5, 27, 0, 8, 2, 0, 0, 0, 0, 0]' : 0.195921}
{'[3, 1, 0, 1, 0, 0, 1, 0, 5, 27, 0, 8, 2, 0, 0, 0, 0, 0]' : 0.194736}
{'[3, 1, 0, 1, 0, 0, 1, 0, 5, 27, 0, 8, 2, 0, 0, 0, 0, 0]' : 0.196109}
{'[3, 1, 0, 1, 0, 0, 1, 0, 5, 27, 0, 8, 2, 0, 0, 0, 0, 0]' : 0.195147}
{'[3, 1, 0, 1, 0, 0, 1, 0, 5, 27, 0, 8, 2, 0, 0, 0, 0, 0]' : 0.195713}
{'[3, 1, 0, 1, 0, 0, 1, 0, 5, 27, 0, 8, 2, 0, 0, 0, 0, 0]' : 0.194936}
{'[3, 1, 0, 1, 0, 0, 1, 0, 5, 27, 0, 8, 2, 0, 0, 0, 0, 0]' : 0.193532}

out:
 ["{'[3, 1, 0, 1, 0, 0, 1, 0, 5, 27, 0, 8, 2, 0, 0, 0, 0, 0]' : 0.191216}", "{'[3, 1, 0, 1, 0, 0, 1, 0, 5, 27, 0, 8, 2, 0, 0, 0, 0, 0]' : 0.1918}", "{'[3, 1, 0, 1, 0, 0, 1, 0, 5, 27, 0, 8, 2, 0, 0, 0, 0, 0]' : 0.191226}", "{'[3, 1, 0, 1, 0, 0, 1, 0, 5, 27, 0, 8, 2, 0, 0, 0, 0, 0]' : 0.190254}", "{'[3, 1, 0, 1, 0, 0, 1, 0, 5, 27, 0, 8, 2, 0, 0, 0, 0, 0]' : 0.193433}", "{'[3, 1, 0, 1, 0, 0, 1, 0, 5, 27, 0, 8, 2, 0, 0, 0, 0, 0]' : 0.193872}", "{'[3, 1, 0, 1, 0, 0, 1, 0, 5, 27, 0, 8, 2, 0, 0, 0, 0, 0]' : 0.195674}", "{'[3, 1, 0, 1, 0, 0, 1, 0, 5, 27, 0, 8, 2, 0, 0, 0, 0, 0]' : 0.195875}", "{'[3, 1, 0, 1, 0, 0, 1, 0, 5, 27, 0, 8, 2, 0, 0, 0, 0, 0]' : 0.195637}", "{'[3, 1, 0, 1, 0, 0, 1, 0, 5, 27, 0, 8, 2, 0, 0, 0, 0, 0]' : 0.195191}", "{'[3, 1, 0, 1, 0, 0, 1, 0, 5, 27, 0, 8, 2, 0, 0, 0, 0, 0]' : 0.19378}", "{'[3, 1, 0, 1, 0, 0, 1, 0, 5, 27, 0, 8, 2, 0, 0, 0, 0, 0]' : 0.192394}", "{'[3, 1, 0, 1, 0, 0, 1, 0, 5, 27, 0, 8, 2, 0, 0, 0, 0, 0]' : 0.194388}", "{'[3, 1, 0, 1, 0, 0, 1, 0, 5, 27, 0, 8, 2, 0, 0, 0, 0, 0]' : 0.19528}", "{'[3, 1, 0, 1, 0, 0, 1, 0, 5, 27, 0, 8, 2, 0, 0, 0, 0, 0]' : 0.195603}", "{'[3, 1, 0, 1, 0, 0, 1, 0, 5, 27, 0, 8, 2, 0, 0, 0, 0, 0]' : 0.195289}", "{'[3, 1, 0, 1, 0, 0, 1, 0, 5, 27, 0, 8, 2, 0, 0, 0, 0, 0]' : 0.195125}", "{'[3, 1, 0, 1, 0, 0, 1, 0, 5, 27, 0, 8, 2, 0, 0, 0, 0, 0]' : 0.195477}", "{'[3, 1, 0, 1, 0, 0, 1, 0, 5, 27, 0, 8, 2, 0, 0, 0, 0, 0]' : 0.195516}", "{'[3, 1, 0, 1, 0, 0, 1, 0, 5, 27, 0, 8, 2, 0, 0, 0, 0, 0]' : 0.195218}", "{'[3, 1, 0, 1, 0, 0, 1, 0, 5, 27, 0, 8, 2, 0, 0, 0, 0, 0]' : 0.194657}", "{'[3, 1, 0, 1, 0, 0, 1, 0, 5, 27, 0, 8, 2, 0, 0, 0, 0, 0]' : 0.195008}", "{'[3, 1, 0, 1, 0, 0, 1, 0, 5, 27, 0, 8, 2, 0, 0, 0, 0, 0]' : 0.19622}", "{'[3, 1, 0, 1, 0, 0, 1, 0, 5, 27, 0, 8, 2, 0, 0, 0, 0, 0]' : 0.195921}", "{'[3, 1, 0, 1, 0, 0, 1, 0, 5, 27, 0, 8, 2, 0, 0, 0, 0, 0]' : 0.194736}", "{'[3, 1, 0, 1, 0, 0, 1, 0, 5, 27, 0, 8, 2, 0, 0, 0, 0, 0]' : 0.196109}", "{'[3, 1, 0, 1, 0, 0, 1, 0, 5, 27, 0, 8, 2, 0, 0, 0, 0, 0]' : 0.195147}", "{'[3, 1, 0, 1, 0, 0, 1, 0, 5, 27, 0, 8, 2, 0, 0, 0, 0, 0]' : 0.195713}", "{'[3, 1, 0, 1, 0, 0, 1, 0, 5, 27, 0, 8, 2, 0, 0, 0, 0, 0]' : 0.194936}", "{'[3, 1, 0, 1, 0, 0, 1, 0, 5, 27, 0, 8, 2, 0, 0, 0, 0, 0]' : 0.193532}"]
returning from 'run': {'[3, 1, 0, 1, 0, 0, 1, 0, 5, 27, 0, 8, 2, 0, 0, 0, 0, 0]': ([0.191216, 0.1918, 0.191226, 0.190254, 0.193433, 0.193872, 0.195674, 0.195875, 0.195637, 0.195191, 0.19378, 0.192394, 0.194388, 0.19528, 0.195603, 0.195289, 0.195125, 0.195477, 0.195516, 0.195218, 0.194657, 0.195008, 0.19622, 0.195921, 0.194736, 0.196109, 0.195147, 0.195713, 0.194936, 0.193532], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 1, 0, 1, 0, 0, 1, 0, 5, 27, 0, 8, 2, 0, 0, 0, 0, 0]': ([0.191216, 0.1918, 0.191226, 0.190254, 0.193433, 0.193872, 0.195674, 0.195875, 0.195637, 0.195191, 0.19378, 0.192394, 0.194388, 0.19528, 0.195603, 0.195289, 0.195125, 0.195477, 0.195516, 0.195218, 0.194657, 0.195008, 0.19622, 0.195921, 0.194736, 0.196109, 0.195147, 0.195713, 0.194936, 0.193532], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	109
        Max loop nest depth: 	6
        Additions: 		1748
        Multiplications: 	648
        Divisions: 		0
        Logical: 		0
        Reads: 			3849
        Writes: 		775
        Comparisons:		109
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest4.exe __orio_perftest4.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest4.exe  
Program Test Output: 
{'[1, 0, 3, 2, 3, 6, 1, 1, 12, 26, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.0953538}
{'[1, 0, 3, 2, 3, 6, 1, 1, 12, 26, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.095171}
{'[1, 0, 3, 2, 3, 6, 1, 1, 12, 26, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.0951629}
{'[1, 0, 3, 2, 3, 6, 1, 1, 12, 26, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.0955501}
{'[1, 0, 3, 2, 3, 6, 1, 1, 12, 26, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.0971479}
{'[1, 0, 3, 2, 3, 6, 1, 1, 12, 26, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.0976341}
{'[1, 0, 3, 2, 3, 6, 1, 1, 12, 26, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.0976179}
{'[1, 0, 3, 2, 3, 6, 1, 1, 12, 26, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.0975909}
{'[1, 0, 3, 2, 3, 6, 1, 1, 12, 26, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.0975621}
{'[1, 0, 3, 2, 3, 6, 1, 1, 12, 26, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.097734}
{'[1, 0, 3, 2, 3, 6, 1, 1, 12, 26, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.095845}
{'[1, 0, 3, 2, 3, 6, 1, 1, 12, 26, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.0952311}
{'[1, 0, 3, 2, 3, 6, 1, 1, 12, 26, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.095408}
{'[1, 0, 3, 2, 3, 6, 1, 1, 12, 26, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.095366}
{'[1, 0, 3, 2, 3, 6, 1, 1, 12, 26, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.0951061}
{'[1, 0, 3, 2, 3, 6, 1, 1, 12, 26, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.0959241}
{'[1, 0, 3, 2, 3, 6, 1, 1, 12, 26, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.095135}
{'[1, 0, 3, 2, 3, 6, 1, 1, 12, 26, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.095103}
{'[1, 0, 3, 2, 3, 6, 1, 1, 12, 26, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.095155}
{'[1, 0, 3, 2, 3, 6, 1, 1, 12, 26, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.0951231}
{'[1, 0, 3, 2, 3, 6, 1, 1, 12, 26, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.096024}
{'[1, 0, 3, 2, 3, 6, 1, 1, 12, 26, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.0954409}
{'[1, 0, 3, 2, 3, 6, 1, 1, 12, 26, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.0952902}
{'[1, 0, 3, 2, 3, 6, 1, 1, 12, 26, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.095129}
{'[1, 0, 3, 2, 3, 6, 1, 1, 12, 26, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.09518}
{'[1, 0, 3, 2, 3, 6, 1, 1, 12, 26, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.095943}
{'[1, 0, 3, 2, 3, 6, 1, 1, 12, 26, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.0952291}
{'[1, 0, 3, 2, 3, 6, 1, 1, 12, 26, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.0952661}
{'[1, 0, 3, 2, 3, 6, 1, 1, 12, 26, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.0951991}
{'[1, 0, 3, 2, 3, 6, 1, 1, 12, 26, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.0952339}

out:
 ["{'[1, 0, 3, 2, 3, 6, 1, 1, 12, 26, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.0953538}", "{'[1, 0, 3, 2, 3, 6, 1, 1, 12, 26, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.095171}", "{'[1, 0, 3, 2, 3, 6, 1, 1, 12, 26, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.0951629}", "{'[1, 0, 3, 2, 3, 6, 1, 1, 12, 26, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.0955501}", "{'[1, 0, 3, 2, 3, 6, 1, 1, 12, 26, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.0971479}", "{'[1, 0, 3, 2, 3, 6, 1, 1, 12, 26, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.0976341}", "{'[1, 0, 3, 2, 3, 6, 1, 1, 12, 26, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.0976179}", "{'[1, 0, 3, 2, 3, 6, 1, 1, 12, 26, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.0975909}", "{'[1, 0, 3, 2, 3, 6, 1, 1, 12, 26, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.0975621}", "{'[1, 0, 3, 2, 3, 6, 1, 1, 12, 26, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.097734}", "{'[1, 0, 3, 2, 3, 6, 1, 1, 12, 26, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.095845}", "{'[1, 0, 3, 2, 3, 6, 1, 1, 12, 26, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.0952311}", "{'[1, 0, 3, 2, 3, 6, 1, 1, 12, 26, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.095408}", "{'[1, 0, 3, 2, 3, 6, 1, 1, 12, 26, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.095366}", "{'[1, 0, 3, 2, 3, 6, 1, 1, 12, 26, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.0951061}", "{'[1, 0, 3, 2, 3, 6, 1, 1, 12, 26, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.0959241}", "{'[1, 0, 3, 2, 3, 6, 1, 1, 12, 26, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.095135}", "{'[1, 0, 3, 2, 3, 6, 1, 1, 12, 26, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.095103}", "{'[1, 0, 3, 2, 3, 6, 1, 1, 12, 26, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.095155}", "{'[1, 0, 3, 2, 3, 6, 1, 1, 12, 26, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.0951231}", "{'[1, 0, 3, 2, 3, 6, 1, 1, 12, 26, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.096024}", "{'[1, 0, 3, 2, 3, 6, 1, 1, 12, 26, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.0954409}", "{'[1, 0, 3, 2, 3, 6, 1, 1, 12, 26, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.0952902}", "{'[1, 0, 3, 2, 3, 6, 1, 1, 12, 26, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.095129}", "{'[1, 0, 3, 2, 3, 6, 1, 1, 12, 26, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.09518}", "{'[1, 0, 3, 2, 3, 6, 1, 1, 12, 26, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.095943}", "{'[1, 0, 3, 2, 3, 6, 1, 1, 12, 26, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.0952291}", "{'[1, 0, 3, 2, 3, 6, 1, 1, 12, 26, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.0952661}", "{'[1, 0, 3, 2, 3, 6, 1, 1, 12, 26, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.0951991}", "{'[1, 0, 3, 2, 3, 6, 1, 1, 12, 26, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.0952339}"]
returning from 'run': {'[1, 0, 3, 2, 3, 6, 1, 1, 12, 26, 23, 0, 1, 1, 0, 1, 1, 1]': ([0.0953538, 0.095171, 0.0951629, 0.0955501, 0.0971479, 0.0976341, 0.0976179, 0.0975909, 0.0975621, 0.097734, 0.095845, 0.0952311, 0.095408, 0.095366, 0.0951061, 0.0959241, 0.095135, 0.095103, 0.095155, 0.0951231, 0.096024, 0.0954409, 0.0952902, 0.095129, 0.09518, 0.095943, 0.0952291, 0.0952661, 0.0951991, 0.0952339], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 3, 2, 3, 6, 1, 1, 12, 26, 23, 0, 1, 1, 0, 1, 1, 1]': ([0.0953538, 0.095171, 0.0951629, 0.0955501, 0.0971479, 0.0976341, 0.0976179, 0.0975909, 0.0975621, 0.097734, 0.095845, 0.0952311, 0.095408, 0.095366, 0.0951061, 0.0959241, 0.095135, 0.095103, 0.095155, 0.0951231, 0.096024, 0.0954409, 0.0952902, 0.095129, 0.09518, 0.095943, 0.0952291, 0.0952661, 0.0951991, 0.0952339], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	154
        Max loop nest depth: 	6
        Additions: 		14805
        Multiplications: 	3416
        Divisions: 		0
        Logical: 		0
        Reads: 			21442
        Writes: 		2220
        Comparisons:		154
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest5.exe __orio_perftest5.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest5.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest5.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest5.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest5.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		758
        Multiplications: 	234
        Divisions: 		0
        Logical: 		0
        Reads: 			1307
        Writes: 		165
        Comparisons:		15
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest6.exe __orio_perftest6.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest6.exe  
Program Test Output: 
{'[0, 0, 0, 4, 4, 4, 0, 0, 3, 0, 0, 10, 1, 0, 0, 0, 1, 1]' : 0.133184}
{'[0, 0, 0, 4, 4, 4, 0, 0, 3, 0, 0, 10, 1, 0, 0, 0, 1, 1]' : 0.132828}
{'[0, 0, 0, 4, 4, 4, 0, 0, 3, 0, 0, 10, 1, 0, 0, 0, 1, 1]' : 0.12828}
{'[0, 0, 0, 4, 4, 4, 0, 0, 3, 0, 0, 10, 1, 0, 0, 0, 1, 1]' : 0.120723}
{'[0, 0, 0, 4, 4, 4, 0, 0, 3, 0, 0, 10, 1, 0, 0, 0, 1, 1]' : 0.120782}
{'[0, 0, 0, 4, 4, 4, 0, 0, 3, 0, 0, 10, 1, 0, 0, 0, 1, 1]' : 0.120635}
{'[0, 0, 0, 4, 4, 4, 0, 0, 3, 0, 0, 10, 1, 0, 0, 0, 1, 1]' : 0.120351}
{'[0, 0, 0, 4, 4, 4, 0, 0, 3, 0, 0, 10, 1, 0, 0, 0, 1, 1]' : 0.120596}
{'[0, 0, 0, 4, 4, 4, 0, 0, 3, 0, 0, 10, 1, 0, 0, 0, 1, 1]' : 0.120941}
{'[0, 0, 0, 4, 4, 4, 0, 0, 3, 0, 0, 10, 1, 0, 0, 0, 1, 1]' : 0.120821}
{'[0, 0, 0, 4, 4, 4, 0, 0, 3, 0, 0, 10, 1, 0, 0, 0, 1, 1]' : 0.120707}
{'[0, 0, 0, 4, 4, 4, 0, 0, 3, 0, 0, 10, 1, 0, 0, 0, 1, 1]' : 0.120767}
{'[0, 0, 0, 4, 4, 4, 0, 0, 3, 0, 0, 10, 1, 0, 0, 0, 1, 1]' : 0.120855}
{'[0, 0, 0, 4, 4, 4, 0, 0, 3, 0, 0, 10, 1, 0, 0, 0, 1, 1]' : 0.120919}
{'[0, 0, 0, 4, 4, 4, 0, 0, 3, 0, 0, 10, 1, 0, 0, 0, 1, 1]' : 0.120619}
{'[0, 0, 0, 4, 4, 4, 0, 0, 3, 0, 0, 10, 1, 0, 0, 0, 1, 1]' : 0.120389}
{'[0, 0, 0, 4, 4, 4, 0, 0, 3, 0, 0, 10, 1, 0, 0, 0, 1, 1]' : 0.120748}
{'[0, 0, 0, 4, 4, 4, 0, 0, 3, 0, 0, 10, 1, 0, 0, 0, 1, 1]' : 0.120839}
{'[0, 0, 0, 4, 4, 4, 0, 0, 3, 0, 0, 10, 1, 0, 0, 0, 1, 1]' : 0.121065}
{'[0, 0, 0, 4, 4, 4, 0, 0, 3, 0, 0, 10, 1, 0, 0, 0, 1, 1]' : 0.120742}
{'[0, 0, 0, 4, 4, 4, 0, 0, 3, 0, 0, 10, 1, 0, 0, 0, 1, 1]' : 0.120873}
{'[0, 0, 0, 4, 4, 4, 0, 0, 3, 0, 0, 10, 1, 0, 0, 0, 1, 1]' : 0.120966}
{'[0, 0, 0, 4, 4, 4, 0, 0, 3, 0, 0, 10, 1, 0, 0, 0, 1, 1]' : 0.120713}
{'[0, 0, 0, 4, 4, 4, 0, 0, 3, 0, 0, 10, 1, 0, 0, 0, 1, 1]' : 0.120485}
{'[0, 0, 0, 4, 4, 4, 0, 0, 3, 0, 0, 10, 1, 0, 0, 0, 1, 1]' : 0.120308}
{'[0, 0, 0, 4, 4, 4, 0, 0, 3, 0, 0, 10, 1, 0, 0, 0, 1, 1]' : 0.119038}
{'[0, 0, 0, 4, 4, 4, 0, 0, 3, 0, 0, 10, 1, 0, 0, 0, 1, 1]' : 0.11811}
{'[0, 0, 0, 4, 4, 4, 0, 0, 3, 0, 0, 10, 1, 0, 0, 0, 1, 1]' : 0.118285}
{'[0, 0, 0, 4, 4, 4, 0, 0, 3, 0, 0, 10, 1, 0, 0, 0, 1, 1]' : 0.118434}
{'[0, 0, 0, 4, 4, 4, 0, 0, 3, 0, 0, 10, 1, 0, 0, 0, 1, 1]' : 0.118977}

out:
 ["{'[0, 0, 0, 4, 4, 4, 0, 0, 3, 0, 0, 10, 1, 0, 0, 0, 1, 1]' : 0.133184}", "{'[0, 0, 0, 4, 4, 4, 0, 0, 3, 0, 0, 10, 1, 0, 0, 0, 1, 1]' : 0.132828}", "{'[0, 0, 0, 4, 4, 4, 0, 0, 3, 0, 0, 10, 1, 0, 0, 0, 1, 1]' : 0.12828}", "{'[0, 0, 0, 4, 4, 4, 0, 0, 3, 0, 0, 10, 1, 0, 0, 0, 1, 1]' : 0.120723}", "{'[0, 0, 0, 4, 4, 4, 0, 0, 3, 0, 0, 10, 1, 0, 0, 0, 1, 1]' : 0.120782}", "{'[0, 0, 0, 4, 4, 4, 0, 0, 3, 0, 0, 10, 1, 0, 0, 0, 1, 1]' : 0.120635}", "{'[0, 0, 0, 4, 4, 4, 0, 0, 3, 0, 0, 10, 1, 0, 0, 0, 1, 1]' : 0.120351}", "{'[0, 0, 0, 4, 4, 4, 0, 0, 3, 0, 0, 10, 1, 0, 0, 0, 1, 1]' : 0.120596}", "{'[0, 0, 0, 4, 4, 4, 0, 0, 3, 0, 0, 10, 1, 0, 0, 0, 1, 1]' : 0.120941}", "{'[0, 0, 0, 4, 4, 4, 0, 0, 3, 0, 0, 10, 1, 0, 0, 0, 1, 1]' : 0.120821}", "{'[0, 0, 0, 4, 4, 4, 0, 0, 3, 0, 0, 10, 1, 0, 0, 0, 1, 1]' : 0.120707}", "{'[0, 0, 0, 4, 4, 4, 0, 0, 3, 0, 0, 10, 1, 0, 0, 0, 1, 1]' : 0.120767}", "{'[0, 0, 0, 4, 4, 4, 0, 0, 3, 0, 0, 10, 1, 0, 0, 0, 1, 1]' : 0.120855}", "{'[0, 0, 0, 4, 4, 4, 0, 0, 3, 0, 0, 10, 1, 0, 0, 0, 1, 1]' : 0.120919}", "{'[0, 0, 0, 4, 4, 4, 0, 0, 3, 0, 0, 10, 1, 0, 0, 0, 1, 1]' : 0.120619}", "{'[0, 0, 0, 4, 4, 4, 0, 0, 3, 0, 0, 10, 1, 0, 0, 0, 1, 1]' : 0.120389}", "{'[0, 0, 0, 4, 4, 4, 0, 0, 3, 0, 0, 10, 1, 0, 0, 0, 1, 1]' : 0.120748}", "{'[0, 0, 0, 4, 4, 4, 0, 0, 3, 0, 0, 10, 1, 0, 0, 0, 1, 1]' : 0.120839}", "{'[0, 0, 0, 4, 4, 4, 0, 0, 3, 0, 0, 10, 1, 0, 0, 0, 1, 1]' : 0.121065}", "{'[0, 0, 0, 4, 4, 4, 0, 0, 3, 0, 0, 10, 1, 0, 0, 0, 1, 1]' : 0.120742}", "{'[0, 0, 0, 4, 4, 4, 0, 0, 3, 0, 0, 10, 1, 0, 0, 0, 1, 1]' : 0.120873}", "{'[0, 0, 0, 4, 4, 4, 0, 0, 3, 0, 0, 10, 1, 0, 0, 0, 1, 1]' : 0.120966}", "{'[0, 0, 0, 4, 4, 4, 0, 0, 3, 0, 0, 10, 1, 0, 0, 0, 1, 1]' : 0.120713}", "{'[0, 0, 0, 4, 4, 4, 0, 0, 3, 0, 0, 10, 1, 0, 0, 0, 1, 1]' : 0.120485}", "{'[0, 0, 0, 4, 4, 4, 0, 0, 3, 0, 0, 10, 1, 0, 0, 0, 1, 1]' : 0.120308}", "{'[0, 0, 0, 4, 4, 4, 0, 0, 3, 0, 0, 10, 1, 0, 0, 0, 1, 1]' : 0.119038}", "{'[0, 0, 0, 4, 4, 4, 0, 0, 3, 0, 0, 10, 1, 0, 0, 0, 1, 1]' : 0.11811}", "{'[0, 0, 0, 4, 4, 4, 0, 0, 3, 0, 0, 10, 1, 0, 0, 0, 1, 1]' : 0.118285}", "{'[0, 0, 0, 4, 4, 4, 0, 0, 3, 0, 0, 10, 1, 0, 0, 0, 1, 1]' : 0.118434}", "{'[0, 0, 0, 4, 4, 4, 0, 0, 3, 0, 0, 10, 1, 0, 0, 0, 1, 1]' : 0.118977}"]
returning from 'run': {'[0, 0, 0, 4, 4, 4, 0, 0, 3, 0, 0, 10, 1, 0, 0, 0, 1, 1]': ([0.133184, 0.132828, 0.12828, 0.120723, 0.120782, 0.120635, 0.120351, 0.120596, 0.120941, 0.120821, 0.120707, 0.120767, 0.120855, 0.120919, 0.120619, 0.120389, 0.120748, 0.120839, 0.121065, 0.120742, 0.120873, 0.120966, 0.120713, 0.120485, 0.120308, 0.119038, 0.11811, 0.118285, 0.118434, 0.118977], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 0, 4, 4, 4, 0, 0, 3, 0, 0, 10, 1, 0, 0, 0, 1, 1]': ([0.133184, 0.132828, 0.12828, 0.120723, 0.120782, 0.120635, 0.120351, 0.120596, 0.120941, 0.120821, 0.120707, 0.120767, 0.120855, 0.120919, 0.120619, 0.120389, 0.120748, 0.120839, 0.121065, 0.120742, 0.120873, 0.120966, 0.120713, 0.120485, 0.120308, 0.119038, 0.11811, 0.118285, 0.118434, 0.118977], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	5
        Additions: 		3650
        Multiplications: 	1120
        Divisions: 		0
        Logical: 		0
        Reads: 			5758
        Writes: 		612
        Comparisons:		18
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest7.exe __orio_perftest7.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest7.exe  
Program Test Output: 
{'[4, 0, 6, 0, 1, 6, 0, 0, 0, 12, 29, 0, 0, 0, 1, 0, 1, 0]' : 0.147062}
{'[4, 0, 6, 0, 1, 6, 0, 0, 0, 12, 29, 0, 0, 0, 1, 0, 1, 0]' : 0.146446}
{'[4, 0, 6, 0, 1, 6, 0, 0, 0, 12, 29, 0, 0, 0, 1, 0, 1, 0]' : 0.135773}
{'[4, 0, 6, 0, 1, 6, 0, 0, 0, 12, 29, 0, 0, 0, 1, 0, 1, 0]' : 0.127837}
{'[4, 0, 6, 0, 1, 6, 0, 0, 0, 12, 29, 0, 0, 0, 1, 0, 1, 0]' : 0.127748}
{'[4, 0, 6, 0, 1, 6, 0, 0, 0, 12, 29, 0, 0, 0, 1, 0, 1, 0]' : 0.128514}
{'[4, 0, 6, 0, 1, 6, 0, 0, 0, 12, 29, 0, 0, 0, 1, 0, 1, 0]' : 0.12837}
{'[4, 0, 6, 0, 1, 6, 0, 0, 0, 12, 29, 0, 0, 0, 1, 0, 1, 0]' : 0.128299}
{'[4, 0, 6, 0, 1, 6, 0, 0, 0, 12, 29, 0, 0, 0, 1, 0, 1, 0]' : 0.12804}
{'[4, 0, 6, 0, 1, 6, 0, 0, 0, 12, 29, 0, 0, 0, 1, 0, 1, 0]' : 0.131065}
{'[4, 0, 6, 0, 1, 6, 0, 0, 0, 12, 29, 0, 0, 0, 1, 0, 1, 0]' : 0.131412}
{'[4, 0, 6, 0, 1, 6, 0, 0, 0, 12, 29, 0, 0, 0, 1, 0, 1, 0]' : 0.131529}
{'[4, 0, 6, 0, 1, 6, 0, 0, 0, 12, 29, 0, 0, 0, 1, 0, 1, 0]' : 0.131387}
{'[4, 0, 6, 0, 1, 6, 0, 0, 0, 12, 29, 0, 0, 0, 1, 0, 1, 0]' : 0.12904}
{'[4, 0, 6, 0, 1, 6, 0, 0, 0, 12, 29, 0, 0, 0, 1, 0, 1, 0]' : 0.127845}
{'[4, 0, 6, 0, 1, 6, 0, 0, 0, 12, 29, 0, 0, 0, 1, 0, 1, 0]' : 0.127998}
{'[4, 0, 6, 0, 1, 6, 0, 0, 0, 12, 29, 0, 0, 0, 1, 0, 1, 0]' : 0.126033}
{'[4, 0, 6, 0, 1, 6, 0, 0, 0, 12, 29, 0, 0, 0, 1, 0, 1, 0]' : 0.127889}
{'[4, 0, 6, 0, 1, 6, 0, 0, 0, 12, 29, 0, 0, 0, 1, 0, 1, 0]' : 0.127946}
{'[4, 0, 6, 0, 1, 6, 0, 0, 0, 12, 29, 0, 0, 0, 1, 0, 1, 0]' : 0.127736}
{'[4, 0, 6, 0, 1, 6, 0, 0, 0, 12, 29, 0, 0, 0, 1, 0, 1, 0]' : 0.128071}
{'[4, 0, 6, 0, 1, 6, 0, 0, 0, 12, 29, 0, 0, 0, 1, 0, 1, 0]' : 0.127836}
{'[4, 0, 6, 0, 1, 6, 0, 0, 0, 12, 29, 0, 0, 0, 1, 0, 1, 0]' : 0.127827}
{'[4, 0, 6, 0, 1, 6, 0, 0, 0, 12, 29, 0, 0, 0, 1, 0, 1, 0]' : 0.128278}
{'[4, 0, 6, 0, 1, 6, 0, 0, 0, 12, 29, 0, 0, 0, 1, 0, 1, 0]' : 0.128327}
{'[4, 0, 6, 0, 1, 6, 0, 0, 0, 12, 29, 0, 0, 0, 1, 0, 1, 0]' : 0.127909}
{'[4, 0, 6, 0, 1, 6, 0, 0, 0, 12, 29, 0, 0, 0, 1, 0, 1, 0]' : 0.127812}
{'[4, 0, 6, 0, 1, 6, 0, 0, 0, 12, 29, 0, 0, 0, 1, 0, 1, 0]' : 0.130705}
{'[4, 0, 6, 0, 1, 6, 0, 0, 0, 12, 29, 0, 0, 0, 1, 0, 1, 0]' : 0.129491}
{'[4, 0, 6, 0, 1, 6, 0, 0, 0, 12, 29, 0, 0, 0, 1, 0, 1, 0]' : 0.131484}

out:
 ["{'[4, 0, 6, 0, 1, 6, 0, 0, 0, 12, 29, 0, 0, 0, 1, 0, 1, 0]' : 0.147062}", "{'[4, 0, 6, 0, 1, 6, 0, 0, 0, 12, 29, 0, 0, 0, 1, 0, 1, 0]' : 0.146446}", "{'[4, 0, 6, 0, 1, 6, 0, 0, 0, 12, 29, 0, 0, 0, 1, 0, 1, 0]' : 0.135773}", "{'[4, 0, 6, 0, 1, 6, 0, 0, 0, 12, 29, 0, 0, 0, 1, 0, 1, 0]' : 0.127837}", "{'[4, 0, 6, 0, 1, 6, 0, 0, 0, 12, 29, 0, 0, 0, 1, 0, 1, 0]' : 0.127748}", "{'[4, 0, 6, 0, 1, 6, 0, 0, 0, 12, 29, 0, 0, 0, 1, 0, 1, 0]' : 0.128514}", "{'[4, 0, 6, 0, 1, 6, 0, 0, 0, 12, 29, 0, 0, 0, 1, 0, 1, 0]' : 0.12837}", "{'[4, 0, 6, 0, 1, 6, 0, 0, 0, 12, 29, 0, 0, 0, 1, 0, 1, 0]' : 0.128299}", "{'[4, 0, 6, 0, 1, 6, 0, 0, 0, 12, 29, 0, 0, 0, 1, 0, 1, 0]' : 0.12804}", "{'[4, 0, 6, 0, 1, 6, 0, 0, 0, 12, 29, 0, 0, 0, 1, 0, 1, 0]' : 0.131065}", "{'[4, 0, 6, 0, 1, 6, 0, 0, 0, 12, 29, 0, 0, 0, 1, 0, 1, 0]' : 0.131412}", "{'[4, 0, 6, 0, 1, 6, 0, 0, 0, 12, 29, 0, 0, 0, 1, 0, 1, 0]' : 0.131529}", "{'[4, 0, 6, 0, 1, 6, 0, 0, 0, 12, 29, 0, 0, 0, 1, 0, 1, 0]' : 0.131387}", "{'[4, 0, 6, 0, 1, 6, 0, 0, 0, 12, 29, 0, 0, 0, 1, 0, 1, 0]' : 0.12904}", "{'[4, 0, 6, 0, 1, 6, 0, 0, 0, 12, 29, 0, 0, 0, 1, 0, 1, 0]' : 0.127845}", "{'[4, 0, 6, 0, 1, 6, 0, 0, 0, 12, 29, 0, 0, 0, 1, 0, 1, 0]' : 0.127998}", "{'[4, 0, 6, 0, 1, 6, 0, 0, 0, 12, 29, 0, 0, 0, 1, 0, 1, 0]' : 0.126033}", "{'[4, 0, 6, 0, 1, 6, 0, 0, 0, 12, 29, 0, 0, 0, 1, 0, 1, 0]' : 0.127889}", "{'[4, 0, 6, 0, 1, 6, 0, 0, 0, 12, 29, 0, 0, 0, 1, 0, 1, 0]' : 0.127946}", "{'[4, 0, 6, 0, 1, 6, 0, 0, 0, 12, 29, 0, 0, 0, 1, 0, 1, 0]' : 0.127736}", "{'[4, 0, 6, 0, 1, 6, 0, 0, 0, 12, 29, 0, 0, 0, 1, 0, 1, 0]' : 0.128071}", "{'[4, 0, 6, 0, 1, 6, 0, 0, 0, 12, 29, 0, 0, 0, 1, 0, 1, 0]' : 0.127836}", "{'[4, 0, 6, 0, 1, 6, 0, 0, 0, 12, 29, 0, 0, 0, 1, 0, 1, 0]' : 0.127827}", "{'[4, 0, 6, 0, 1, 6, 0, 0, 0, 12, 29, 0, 0, 0, 1, 0, 1, 0]' : 0.128278}", "{'[4, 0, 6, 0, 1, 6, 0, 0, 0, 12, 29, 0, 0, 0, 1, 0, 1, 0]' : 0.128327}", "{'[4, 0, 6, 0, 1, 6, 0, 0, 0, 12, 29, 0, 0, 0, 1, 0, 1, 0]' : 0.127909}", "{'[4, 0, 6, 0, 1, 6, 0, 0, 0, 12, 29, 0, 0, 0, 1, 0, 1, 0]' : 0.127812}", "{'[4, 0, 6, 0, 1, 6, 0, 0, 0, 12, 29, 0, 0, 0, 1, 0, 1, 0]' : 0.130705}", "{'[4, 0, 6, 0, 1, 6, 0, 0, 0, 12, 29, 0, 0, 0, 1, 0, 1, 0]' : 0.129491}", "{'[4, 0, 6, 0, 1, 6, 0, 0, 0, 12, 29, 0, 0, 0, 1, 0, 1, 0]' : 0.131484}"]
returning from 'run': {'[4, 0, 6, 0, 1, 6, 0, 0, 0, 12, 29, 0, 0, 0, 1, 0, 1, 0]': ([0.147062, 0.146446, 0.135773, 0.127837, 0.127748, 0.128514, 0.12837, 0.128299, 0.12804, 0.131065, 0.131412, 0.131529, 0.131387, 0.12904, 0.127845, 0.127998, 0.126033, 0.127889, 0.127946, 0.127736, 0.128071, 0.127836, 0.127827, 0.128278, 0.128327, 0.127909, 0.127812, 0.130705, 0.129491, 0.131484], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 0, 6, 0, 1, 6, 0, 0, 0, 12, 29, 0, 0, 0, 1, 0, 1, 0]': ([0.147062, 0.146446, 0.135773, 0.127837, 0.127748, 0.128514, 0.12837, 0.128299, 0.12804, 0.131065, 0.131412, 0.131529, 0.131387, 0.12904, 0.127845, 0.127998, 0.126033, 0.127889, 0.127946, 0.127736, 0.128071, 0.127836, 0.127827, 0.128278, 0.128327, 0.127909, 0.127812, 0.130705, 0.129491, 0.131484], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	71
        Max loop nest depth: 	4
        Additions: 		1946
        Multiplications: 	720
        Divisions: 		0
        Logical: 		0
        Reads: 			3541
        Writes: 		638
        Comparisons:		71
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest8.exe __orio_perftest8.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest8.exe  
Program Test Output: 
{'[6, 5, 0, 0, 0, 0, 0, 0, 29, 28, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.172449}
{'[6, 5, 0, 0, 0, 0, 0, 0, 29, 28, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.174735}
{'[6, 5, 0, 0, 0, 0, 0, 0, 29, 28, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.176305}
{'[6, 5, 0, 0, 0, 0, 0, 0, 29, 28, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.175779}
{'[6, 5, 0, 0, 0, 0, 0, 0, 29, 28, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.176048}
{'[6, 5, 0, 0, 0, 0, 0, 0, 29, 28, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.175782}
{'[6, 5, 0, 0, 0, 0, 0, 0, 29, 28, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.176234}
{'[6, 5, 0, 0, 0, 0, 0, 0, 29, 28, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.17615}
{'[6, 5, 0, 0, 0, 0, 0, 0, 29, 28, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.175517}
{'[6, 5, 0, 0, 0, 0, 0, 0, 29, 28, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.175928}
{'[6, 5, 0, 0, 0, 0, 0, 0, 29, 28, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.175527}
{'[6, 5, 0, 0, 0, 0, 0, 0, 29, 28, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.175692}
{'[6, 5, 0, 0, 0, 0, 0, 0, 29, 28, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.176316}
{'[6, 5, 0, 0, 0, 0, 0, 0, 29, 28, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.17609}
{'[6, 5, 0, 0, 0, 0, 0, 0, 29, 28, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.175746}
{'[6, 5, 0, 0, 0, 0, 0, 0, 29, 28, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.176212}
{'[6, 5, 0, 0, 0, 0, 0, 0, 29, 28, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.175406}
{'[6, 5, 0, 0, 0, 0, 0, 0, 29, 28, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.17546}
{'[6, 5, 0, 0, 0, 0, 0, 0, 29, 28, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.176707}
{'[6, 5, 0, 0, 0, 0, 0, 0, 29, 28, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.175935}
{'[6, 5, 0, 0, 0, 0, 0, 0, 29, 28, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.175804}
{'[6, 5, 0, 0, 0, 0, 0, 0, 29, 28, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.176464}
{'[6, 5, 0, 0, 0, 0, 0, 0, 29, 28, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.175818}
{'[6, 5, 0, 0, 0, 0, 0, 0, 29, 28, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.175748}
{'[6, 5, 0, 0, 0, 0, 0, 0, 29, 28, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.176039}
{'[6, 5, 0, 0, 0, 0, 0, 0, 29, 28, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.17662}
{'[6, 5, 0, 0, 0, 0, 0, 0, 29, 28, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.176854}
{'[6, 5, 0, 0, 0, 0, 0, 0, 29, 28, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.175863}
{'[6, 5, 0, 0, 0, 0, 0, 0, 29, 28, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.175323}
{'[6, 5, 0, 0, 0, 0, 0, 0, 29, 28, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.175797}

out:
 ["{'[6, 5, 0, 0, 0, 0, 0, 0, 29, 28, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.172449}", "{'[6, 5, 0, 0, 0, 0, 0, 0, 29, 28, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.174735}", "{'[6, 5, 0, 0, 0, 0, 0, 0, 29, 28, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.176305}", "{'[6, 5, 0, 0, 0, 0, 0, 0, 29, 28, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.175779}", "{'[6, 5, 0, 0, 0, 0, 0, 0, 29, 28, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.176048}", "{'[6, 5, 0, 0, 0, 0, 0, 0, 29, 28, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.175782}", "{'[6, 5, 0, 0, 0, 0, 0, 0, 29, 28, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.176234}", "{'[6, 5, 0, 0, 0, 0, 0, 0, 29, 28, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.17615}", "{'[6, 5, 0, 0, 0, 0, 0, 0, 29, 28, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.175517}", "{'[6, 5, 0, 0, 0, 0, 0, 0, 29, 28, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.175928}", "{'[6, 5, 0, 0, 0, 0, 0, 0, 29, 28, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.175527}", "{'[6, 5, 0, 0, 0, 0, 0, 0, 29, 28, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.175692}", "{'[6, 5, 0, 0, 0, 0, 0, 0, 29, 28, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.176316}", "{'[6, 5, 0, 0, 0, 0, 0, 0, 29, 28, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.17609}", "{'[6, 5, 0, 0, 0, 0, 0, 0, 29, 28, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.175746}", "{'[6, 5, 0, 0, 0, 0, 0, 0, 29, 28, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.176212}", "{'[6, 5, 0, 0, 0, 0, 0, 0, 29, 28, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.175406}", "{'[6, 5, 0, 0, 0, 0, 0, 0, 29, 28, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.17546}", "{'[6, 5, 0, 0, 0, 0, 0, 0, 29, 28, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.176707}", "{'[6, 5, 0, 0, 0, 0, 0, 0, 29, 28, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.175935}", "{'[6, 5, 0, 0, 0, 0, 0, 0, 29, 28, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.175804}", "{'[6, 5, 0, 0, 0, 0, 0, 0, 29, 28, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.176464}", "{'[6, 5, 0, 0, 0, 0, 0, 0, 29, 28, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.175818}", "{'[6, 5, 0, 0, 0, 0, 0, 0, 29, 28, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.175748}", "{'[6, 5, 0, 0, 0, 0, 0, 0, 29, 28, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.176039}", "{'[6, 5, 0, 0, 0, 0, 0, 0, 29, 28, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.17662}", "{'[6, 5, 0, 0, 0, 0, 0, 0, 29, 28, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.176854}", "{'[6, 5, 0, 0, 0, 0, 0, 0, 29, 28, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.175863}", "{'[6, 5, 0, 0, 0, 0, 0, 0, 29, 28, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.175323}", "{'[6, 5, 0, 0, 0, 0, 0, 0, 29, 28, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.175797}"]
returning from 'run': {'[6, 5, 0, 0, 0, 0, 0, 0, 29, 28, 1, 0, 0, 1, 0, 1, 1, 0]': ([0.172449, 0.174735, 0.176305, 0.175779, 0.176048, 0.175782, 0.176234, 0.17615, 0.175517, 0.175928, 0.175527, 0.175692, 0.176316, 0.17609, 0.175746, 0.176212, 0.175406, 0.17546, 0.176707, 0.175935, 0.175804, 0.176464, 0.175818, 0.175748, 0.176039, 0.17662, 0.176854, 0.175863, 0.175323, 0.175797], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 5, 0, 0, 0, 0, 0, 0, 29, 28, 1, 0, 0, 1, 0, 1, 1, 0]': ([0.172449, 0.174735, 0.176305, 0.175779, 0.176048, 0.175782, 0.176234, 0.17615, 0.175517, 0.175928, 0.175527, 0.175692, 0.176316, 0.17609, 0.175746, 0.176212, 0.175406, 0.17546, 0.176707, 0.175935, 0.175804, 0.176464, 0.175818, 0.175748, 0.176039, 0.17662, 0.176854, 0.175863, 0.175323, 0.175797], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	17
        Max loop nest depth: 	4
        Additions: 		6389
        Multiplications: 	3168
        Divisions: 		0
        Logical: 		0
        Reads: 			11795
        Writes: 		1808
        Comparisons:		17
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest9.exe __orio_perftest9.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest9.exe  
Program Test Output: 
{'[0, 5, 0, 1, 0, 6, 0, 0, 3, 0, 24, 20, 2, 0, 0, 1, 1, 0]' : 0.233376}
{'[0, 5, 0, 1, 0, 6, 0, 0, 3, 0, 24, 20, 2, 0, 0, 1, 1, 0]' : 0.230212}
{'[0, 5, 0, 1, 0, 6, 0, 0, 3, 0, 24, 20, 2, 0, 0, 1, 1, 0]' : 0.234979}
{'[0, 5, 0, 1, 0, 6, 0, 0, 3, 0, 24, 20, 2, 0, 0, 1, 1, 0]' : 0.238395}
{'[0, 5, 0, 1, 0, 6, 0, 0, 3, 0, 24, 20, 2, 0, 0, 1, 1, 0]' : 0.236141}
{'[0, 5, 0, 1, 0, 6, 0, 0, 3, 0, 24, 20, 2, 0, 0, 1, 1, 0]' : 0.229436}
{'[0, 5, 0, 1, 0, 6, 0, 0, 3, 0, 24, 20, 2, 0, 0, 1, 1, 0]' : 0.230326}
{'[0, 5, 0, 1, 0, 6, 0, 0, 3, 0, 24, 20, 2, 0, 0, 1, 1, 0]' : 0.229989}
{'[0, 5, 0, 1, 0, 6, 0, 0, 3, 0, 24, 20, 2, 0, 0, 1, 1, 0]' : 0.230814}
{'[0, 5, 0, 1, 0, 6, 0, 0, 3, 0, 24, 20, 2, 0, 0, 1, 1, 0]' : 0.230429}
{'[0, 5, 0, 1, 0, 6, 0, 0, 3, 0, 24, 20, 2, 0, 0, 1, 1, 0]' : 0.229828}
{'[0, 5, 0, 1, 0, 6, 0, 0, 3, 0, 24, 20, 2, 0, 0, 1, 1, 0]' : 0.230824}
{'[0, 5, 0, 1, 0, 6, 0, 0, 3, 0, 24, 20, 2, 0, 0, 1, 1, 0]' : 0.232285}
{'[0, 5, 0, 1, 0, 6, 0, 0, 3, 0, 24, 20, 2, 0, 0, 1, 1, 0]' : 0.23104}
{'[0, 5, 0, 1, 0, 6, 0, 0, 3, 0, 24, 20, 2, 0, 0, 1, 1, 0]' : 0.233604}
{'[0, 5, 0, 1, 0, 6, 0, 0, 3, 0, 24, 20, 2, 0, 0, 1, 1, 0]' : 0.227272}
{'[0, 5, 0, 1, 0, 6, 0, 0, 3, 0, 24, 20, 2, 0, 0, 1, 1, 0]' : 0.230806}
{'[0, 5, 0, 1, 0, 6, 0, 0, 3, 0, 24, 20, 2, 0, 0, 1, 1, 0]' : 0.231806}
{'[0, 5, 0, 1, 0, 6, 0, 0, 3, 0, 24, 20, 2, 0, 0, 1, 1, 0]' : 0.229836}
{'[0, 5, 0, 1, 0, 6, 0, 0, 3, 0, 24, 20, 2, 0, 0, 1, 1, 0]' : 0.228485}
{'[0, 5, 0, 1, 0, 6, 0, 0, 3, 0, 24, 20, 2, 0, 0, 1, 1, 0]' : 0.232829}
{'[0, 5, 0, 1, 0, 6, 0, 0, 3, 0, 24, 20, 2, 0, 0, 1, 1, 0]' : 0.232437}
{'[0, 5, 0, 1, 0, 6, 0, 0, 3, 0, 24, 20, 2, 0, 0, 1, 1, 0]' : 0.226549}
{'[0, 5, 0, 1, 0, 6, 0, 0, 3, 0, 24, 20, 2, 0, 0, 1, 1, 0]' : 0.234761}
{'[0, 5, 0, 1, 0, 6, 0, 0, 3, 0, 24, 20, 2, 0, 0, 1, 1, 0]' : 0.230145}
{'[0, 5, 0, 1, 0, 6, 0, 0, 3, 0, 24, 20, 2, 0, 0, 1, 1, 0]' : 0.227615}
{'[0, 5, 0, 1, 0, 6, 0, 0, 3, 0, 24, 20, 2, 0, 0, 1, 1, 0]' : 0.233169}
{'[0, 5, 0, 1, 0, 6, 0, 0, 3, 0, 24, 20, 2, 0, 0, 1, 1, 0]' : 0.233018}
{'[0, 5, 0, 1, 0, 6, 0, 0, 3, 0, 24, 20, 2, 0, 0, 1, 1, 0]' : 0.232625}
{'[0, 5, 0, 1, 0, 6, 0, 0, 3, 0, 24, 20, 2, 0, 0, 1, 1, 0]' : 0.235628}

out:
 ["{'[0, 5, 0, 1, 0, 6, 0, 0, 3, 0, 24, 20, 2, 0, 0, 1, 1, 0]' : 0.233376}", "{'[0, 5, 0, 1, 0, 6, 0, 0, 3, 0, 24, 20, 2, 0, 0, 1, 1, 0]' : 0.230212}", "{'[0, 5, 0, 1, 0, 6, 0, 0, 3, 0, 24, 20, 2, 0, 0, 1, 1, 0]' : 0.234979}", "{'[0, 5, 0, 1, 0, 6, 0, 0, 3, 0, 24, 20, 2, 0, 0, 1, 1, 0]' : 0.238395}", "{'[0, 5, 0, 1, 0, 6, 0, 0, 3, 0, 24, 20, 2, 0, 0, 1, 1, 0]' : 0.236141}", "{'[0, 5, 0, 1, 0, 6, 0, 0, 3, 0, 24, 20, 2, 0, 0, 1, 1, 0]' : 0.229436}", "{'[0, 5, 0, 1, 0, 6, 0, 0, 3, 0, 24, 20, 2, 0, 0, 1, 1, 0]' : 0.230326}", "{'[0, 5, 0, 1, 0, 6, 0, 0, 3, 0, 24, 20, 2, 0, 0, 1, 1, 0]' : 0.229989}", "{'[0, 5, 0, 1, 0, 6, 0, 0, 3, 0, 24, 20, 2, 0, 0, 1, 1, 0]' : 0.230814}", "{'[0, 5, 0, 1, 0, 6, 0, 0, 3, 0, 24, 20, 2, 0, 0, 1, 1, 0]' : 0.230429}", "{'[0, 5, 0, 1, 0, 6, 0, 0, 3, 0, 24, 20, 2, 0, 0, 1, 1, 0]' : 0.229828}", "{'[0, 5, 0, 1, 0, 6, 0, 0, 3, 0, 24, 20, 2, 0, 0, 1, 1, 0]' : 0.230824}", "{'[0, 5, 0, 1, 0, 6, 0, 0, 3, 0, 24, 20, 2, 0, 0, 1, 1, 0]' : 0.232285}", "{'[0, 5, 0, 1, 0, 6, 0, 0, 3, 0, 24, 20, 2, 0, 0, 1, 1, 0]' : 0.23104}", "{'[0, 5, 0, 1, 0, 6, 0, 0, 3, 0, 24, 20, 2, 0, 0, 1, 1, 0]' : 0.233604}", "{'[0, 5, 0, 1, 0, 6, 0, 0, 3, 0, 24, 20, 2, 0, 0, 1, 1, 0]' : 0.227272}", "{'[0, 5, 0, 1, 0, 6, 0, 0, 3, 0, 24, 20, 2, 0, 0, 1, 1, 0]' : 0.230806}", "{'[0, 5, 0, 1, 0, 6, 0, 0, 3, 0, 24, 20, 2, 0, 0, 1, 1, 0]' : 0.231806}", "{'[0, 5, 0, 1, 0, 6, 0, 0, 3, 0, 24, 20, 2, 0, 0, 1, 1, 0]' : 0.229836}", "{'[0, 5, 0, 1, 0, 6, 0, 0, 3, 0, 24, 20, 2, 0, 0, 1, 1, 0]' : 0.228485}", "{'[0, 5, 0, 1, 0, 6, 0, 0, 3, 0, 24, 20, 2, 0, 0, 1, 1, 0]' : 0.232829}", "{'[0, 5, 0, 1, 0, 6, 0, 0, 3, 0, 24, 20, 2, 0, 0, 1, 1, 0]' : 0.232437}", "{'[0, 5, 0, 1, 0, 6, 0, 0, 3, 0, 24, 20, 2, 0, 0, 1, 1, 0]' : 0.226549}", "{'[0, 5, 0, 1, 0, 6, 0, 0, 3, 0, 24, 20, 2, 0, 0, 1, 1, 0]' : 0.234761}", "{'[0, 5, 0, 1, 0, 6, 0, 0, 3, 0, 24, 20, 2, 0, 0, 1, 1, 0]' : 0.230145}", "{'[0, 5, 0, 1, 0, 6, 0, 0, 3, 0, 24, 20, 2, 0, 0, 1, 1, 0]' : 0.227615}", "{'[0, 5, 0, 1, 0, 6, 0, 0, 3, 0, 24, 20, 2, 0, 0, 1, 1, 0]' : 0.233169}", "{'[0, 5, 0, 1, 0, 6, 0, 0, 3, 0, 24, 20, 2, 0, 0, 1, 1, 0]' : 0.233018}", "{'[0, 5, 0, 1, 0, 6, 0, 0, 3, 0, 24, 20, 2, 0, 0, 1, 1, 0]' : 0.232625}", "{'[0, 5, 0, 1, 0, 6, 0, 0, 3, 0, 24, 20, 2, 0, 0, 1, 1, 0]' : 0.235628}"]
returning from 'run': {'[0, 5, 0, 1, 0, 6, 0, 0, 3, 0, 24, 20, 2, 0, 0, 1, 1, 0]': ([0.233376, 0.230212, 0.234979, 0.238395, 0.236141, 0.229436, 0.230326, 0.229989, 0.230814, 0.230429, 0.229828, 0.230824, 0.232285, 0.23104, 0.233604, 0.227272, 0.230806, 0.231806, 0.229836, 0.228485, 0.232829, 0.232437, 0.226549, 0.234761, 0.230145, 0.227615, 0.233169, 0.233018, 0.232625, 0.235628], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 5, 0, 1, 0, 6, 0, 0, 3, 0, 24, 20, 2, 0, 0, 1, 1, 0]': ([0.233376, 0.230212, 0.234979, 0.238395, 0.236141, 0.229436, 0.230326, 0.229989, 0.230814, 0.230429, 0.229828, 0.230824, 0.232285, 0.23104, 0.233604, 0.227272, 0.230806, 0.231806, 0.229836, 0.228485, 0.232829, 0.232437, 0.226549, 0.234761, 0.230145, 0.227615, 0.233169, 0.233018, 0.232625, 0.235628], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	96
        Max loop nest depth: 	6
        Additions: 		1375
        Multiplications: 	468
        Divisions: 		0
        Logical: 		0
        Reads: 			3076
        Writes: 		649
        Comparisons:		96
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest10.exe __orio_perftest10.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest10.exe  
Program Test Output: 
{'[6, 2, 3, 6, 6, 2, 1, 1, 25, 24, 0, 18, 0, 0, 1, 1, 1, 1]' : 0.225489}
{'[6, 2, 3, 6, 6, 2, 1, 1, 25, 24, 0, 18, 0, 0, 1, 1, 1, 1]' : 0.22511}
{'[6, 2, 3, 6, 6, 2, 1, 1, 25, 24, 0, 18, 0, 0, 1, 1, 1, 1]' : 0.225385}
{'[6, 2, 3, 6, 6, 2, 1, 1, 25, 24, 0, 18, 0, 0, 1, 1, 1, 1]' : 0.231442}
{'[6, 2, 3, 6, 6, 2, 1, 1, 25, 24, 0, 18, 0, 0, 1, 1, 1, 1]' : 0.230702}
{'[6, 2, 3, 6, 6, 2, 1, 1, 25, 24, 0, 18, 0, 0, 1, 1, 1, 1]' : 0.225258}
{'[6, 2, 3, 6, 6, 2, 1, 1, 25, 24, 0, 18, 0, 0, 1, 1, 1, 1]' : 0.22487}
{'[6, 2, 3, 6, 6, 2, 1, 1, 25, 24, 0, 18, 0, 0, 1, 1, 1, 1]' : 0.225313}
{'[6, 2, 3, 6, 6, 2, 1, 1, 25, 24, 0, 18, 0, 0, 1, 1, 1, 1]' : 0.224856}
{'[6, 2, 3, 6, 6, 2, 1, 1, 25, 24, 0, 18, 0, 0, 1, 1, 1, 1]' : 0.225227}
{'[6, 2, 3, 6, 6, 2, 1, 1, 25, 24, 0, 18, 0, 0, 1, 1, 1, 1]' : 0.225013}
{'[6, 2, 3, 6, 6, 2, 1, 1, 25, 24, 0, 18, 0, 0, 1, 1, 1, 1]' : 0.225116}
{'[6, 2, 3, 6, 6, 2, 1, 1, 25, 24, 0, 18, 0, 0, 1, 1, 1, 1]' : 0.224869}
{'[6, 2, 3, 6, 6, 2, 1, 1, 25, 24, 0, 18, 0, 0, 1, 1, 1, 1]' : 0.224306}
{'[6, 2, 3, 6, 6, 2, 1, 1, 25, 24, 0, 18, 0, 0, 1, 1, 1, 1]' : 0.225155}
{'[6, 2, 3, 6, 6, 2, 1, 1, 25, 24, 0, 18, 0, 0, 1, 1, 1, 1]' : 0.224995}
{'[6, 2, 3, 6, 6, 2, 1, 1, 25, 24, 0, 18, 0, 0, 1, 1, 1, 1]' : 0.22499}
{'[6, 2, 3, 6, 6, 2, 1, 1, 25, 24, 0, 18, 0, 0, 1, 1, 1, 1]' : 0.225029}
{'[6, 2, 3, 6, 6, 2, 1, 1, 25, 24, 0, 18, 0, 0, 1, 1, 1, 1]' : 0.225439}
{'[6, 2, 3, 6, 6, 2, 1, 1, 25, 24, 0, 18, 0, 0, 1, 1, 1, 1]' : 0.225458}
{'[6, 2, 3, 6, 6, 2, 1, 1, 25, 24, 0, 18, 0, 0, 1, 1, 1, 1]' : 0.22535}
{'[6, 2, 3, 6, 6, 2, 1, 1, 25, 24, 0, 18, 0, 0, 1, 1, 1, 1]' : 0.22511}
{'[6, 2, 3, 6, 6, 2, 1, 1, 25, 24, 0, 18, 0, 0, 1, 1, 1, 1]' : 0.22537}
{'[6, 2, 3, 6, 6, 2, 1, 1, 25, 24, 0, 18, 0, 0, 1, 1, 1, 1]' : 0.225296}
{'[6, 2, 3, 6, 6, 2, 1, 1, 25, 24, 0, 18, 0, 0, 1, 1, 1, 1]' : 0.225392}
{'[6, 2, 3, 6, 6, 2, 1, 1, 25, 24, 0, 18, 0, 0, 1, 1, 1, 1]' : 0.230505}
{'[6, 2, 3, 6, 6, 2, 1, 1, 25, 24, 0, 18, 0, 0, 1, 1, 1, 1]' : 0.231264}
{'[6, 2, 3, 6, 6, 2, 1, 1, 25, 24, 0, 18, 0, 0, 1, 1, 1, 1]' : 0.231193}
{'[6, 2, 3, 6, 6, 2, 1, 1, 25, 24, 0, 18, 0, 0, 1, 1, 1, 1]' : 0.231102}
{'[6, 2, 3, 6, 6, 2, 1, 1, 25, 24, 0, 18, 0, 0, 1, 1, 1, 1]' : 0.230646}

out:
 ["{'[6, 2, 3, 6, 6, 2, 1, 1, 25, 24, 0, 18, 0, 0, 1, 1, 1, 1]' : 0.225489}", "{'[6, 2, 3, 6, 6, 2, 1, 1, 25, 24, 0, 18, 0, 0, 1, 1, 1, 1]' : 0.22511}", "{'[6, 2, 3, 6, 6, 2, 1, 1, 25, 24, 0, 18, 0, 0, 1, 1, 1, 1]' : 0.225385}", "{'[6, 2, 3, 6, 6, 2, 1, 1, 25, 24, 0, 18, 0, 0, 1, 1, 1, 1]' : 0.231442}", "{'[6, 2, 3, 6, 6, 2, 1, 1, 25, 24, 0, 18, 0, 0, 1, 1, 1, 1]' : 0.230702}", "{'[6, 2, 3, 6, 6, 2, 1, 1, 25, 24, 0, 18, 0, 0, 1, 1, 1, 1]' : 0.225258}", "{'[6, 2, 3, 6, 6, 2, 1, 1, 25, 24, 0, 18, 0, 0, 1, 1, 1, 1]' : 0.22487}", "{'[6, 2, 3, 6, 6, 2, 1, 1, 25, 24, 0, 18, 0, 0, 1, 1, 1, 1]' : 0.225313}", "{'[6, 2, 3, 6, 6, 2, 1, 1, 25, 24, 0, 18, 0, 0, 1, 1, 1, 1]' : 0.224856}", "{'[6, 2, 3, 6, 6, 2, 1, 1, 25, 24, 0, 18, 0, 0, 1, 1, 1, 1]' : 0.225227}", "{'[6, 2, 3, 6, 6, 2, 1, 1, 25, 24, 0, 18, 0, 0, 1, 1, 1, 1]' : 0.225013}", "{'[6, 2, 3, 6, 6, 2, 1, 1, 25, 24, 0, 18, 0, 0, 1, 1, 1, 1]' : 0.225116}", "{'[6, 2, 3, 6, 6, 2, 1, 1, 25, 24, 0, 18, 0, 0, 1, 1, 1, 1]' : 0.224869}", "{'[6, 2, 3, 6, 6, 2, 1, 1, 25, 24, 0, 18, 0, 0, 1, 1, 1, 1]' : 0.224306}", "{'[6, 2, 3, 6, 6, 2, 1, 1, 25, 24, 0, 18, 0, 0, 1, 1, 1, 1]' : 0.225155}", "{'[6, 2, 3, 6, 6, 2, 1, 1, 25, 24, 0, 18, 0, 0, 1, 1, 1, 1]' : 0.224995}", "{'[6, 2, 3, 6, 6, 2, 1, 1, 25, 24, 0, 18, 0, 0, 1, 1, 1, 1]' : 0.22499}", "{'[6, 2, 3, 6, 6, 2, 1, 1, 25, 24, 0, 18, 0, 0, 1, 1, 1, 1]' : 0.225029}", "{'[6, 2, 3, 6, 6, 2, 1, 1, 25, 24, 0, 18, 0, 0, 1, 1, 1, 1]' : 0.225439}", "{'[6, 2, 3, 6, 6, 2, 1, 1, 25, 24, 0, 18, 0, 0, 1, 1, 1, 1]' : 0.225458}", "{'[6, 2, 3, 6, 6, 2, 1, 1, 25, 24, 0, 18, 0, 0, 1, 1, 1, 1]' : 0.22535}", "{'[6, 2, 3, 6, 6, 2, 1, 1, 25, 24, 0, 18, 0, 0, 1, 1, 1, 1]' : 0.22511}", "{'[6, 2, 3, 6, 6, 2, 1, 1, 25, 24, 0, 18, 0, 0, 1, 1, 1, 1]' : 0.22537}", "{'[6, 2, 3, 6, 6, 2, 1, 1, 25, 24, 0, 18, 0, 0, 1, 1, 1, 1]' : 0.225296}", "{'[6, 2, 3, 6, 6, 2, 1, 1, 25, 24, 0, 18, 0, 0, 1, 1, 1, 1]' : 0.225392}", "{'[6, 2, 3, 6, 6, 2, 1, 1, 25, 24, 0, 18, 0, 0, 1, 1, 1, 1]' : 0.230505}", "{'[6, 2, 3, 6, 6, 2, 1, 1, 25, 24, 0, 18, 0, 0, 1, 1, 1, 1]' : 0.231264}", "{'[6, 2, 3, 6, 6, 2, 1, 1, 25, 24, 0, 18, 0, 0, 1, 1, 1, 1]' : 0.231193}", "{'[6, 2, 3, 6, 6, 2, 1, 1, 25, 24, 0, 18, 0, 0, 1, 1, 1, 1]' : 0.231102}", "{'[6, 2, 3, 6, 6, 2, 1, 1, 25, 24, 0, 18, 0, 0, 1, 1, 1, 1]' : 0.230646}"]
returning from 'run': {'[6, 2, 3, 6, 6, 2, 1, 1, 25, 24, 0, 18, 0, 0, 1, 1, 1, 1]': ([0.225489, 0.22511, 0.225385, 0.231442, 0.230702, 0.225258, 0.22487, 0.225313, 0.224856, 0.225227, 0.225013, 0.225116, 0.224869, 0.224306, 0.225155, 0.224995, 0.22499, 0.225029, 0.225439, 0.225458, 0.22535, 0.22511, 0.22537, 0.225296, 0.225392, 0.230505, 0.231264, 0.231193, 0.231102, 0.230646], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 2, 3, 6, 6, 2, 1, 1, 25, 24, 0, 18, 0, 0, 1, 1, 1, 1]': ([0.225489, 0.22511, 0.225385, 0.231442, 0.230702, 0.225258, 0.22487, 0.225313, 0.224856, 0.225227, 0.225013, 0.225116, 0.224869, 0.224306, 0.225155, 0.224995, 0.22499, 0.225029, 0.225439, 0.225458, 0.22535, 0.22511, 0.22537, 0.225296, 0.225392, 0.230505, 0.231264, 0.231193, 0.231102, 0.230646], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	110
        Max loop nest depth: 	5
        Additions: 		14054
        Multiplications: 	3968
        Divisions: 		0
        Logical: 		0
        Reads: 			21036
        Writes: 		2297
        Comparisons:		110
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest11.exe __orio_perftest11.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest11.exe  
Program Test Output: 
{'[2, 5, 5, 0, 6, 4, 1, 0, 26, 29, 0, 29, 0, 0, 2, 0, 1, 0]' : 0.220824}
{'[2, 5, 5, 0, 6, 4, 1, 0, 26, 29, 0, 29, 0, 0, 2, 0, 1, 0]' : 0.221015}
{'[2, 5, 5, 0, 6, 4, 1, 0, 26, 29, 0, 29, 0, 0, 2, 0, 1, 0]' : 0.220715}
{'[2, 5, 5, 0, 6, 4, 1, 0, 26, 29, 0, 29, 0, 0, 2, 0, 1, 0]' : 0.221392}
{'[2, 5, 5, 0, 6, 4, 1, 0, 26, 29, 0, 29, 0, 0, 2, 0, 1, 0]' : 0.220607}
{'[2, 5, 5, 0, 6, 4, 1, 0, 26, 29, 0, 29, 0, 0, 2, 0, 1, 0]' : 0.221075}
{'[2, 5, 5, 0, 6, 4, 1, 0, 26, 29, 0, 29, 0, 0, 2, 0, 1, 0]' : 0.220459}
{'[2, 5, 5, 0, 6, 4, 1, 0, 26, 29, 0, 29, 0, 0, 2, 0, 1, 0]' : 0.219499}
{'[2, 5, 5, 0, 6, 4, 1, 0, 26, 29, 0, 29, 0, 0, 2, 0, 1, 0]' : 0.216044}
{'[2, 5, 5, 0, 6, 4, 1, 0, 26, 29, 0, 29, 0, 0, 2, 0, 1, 0]' : 0.218922}
{'[2, 5, 5, 0, 6, 4, 1, 0, 26, 29, 0, 29, 0, 0, 2, 0, 1, 0]' : 0.217631}
{'[2, 5, 5, 0, 6, 4, 1, 0, 26, 29, 0, 29, 0, 0, 2, 0, 1, 0]' : 0.217724}
{'[2, 5, 5, 0, 6, 4, 1, 0, 26, 29, 0, 29, 0, 0, 2, 0, 1, 0]' : 0.216542}
{'[2, 5, 5, 0, 6, 4, 1, 0, 26, 29, 0, 29, 0, 0, 2, 0, 1, 0]' : 0.216477}
{'[2, 5, 5, 0, 6, 4, 1, 0, 26, 29, 0, 29, 0, 0, 2, 0, 1, 0]' : 0.220548}
{'[2, 5, 5, 0, 6, 4, 1, 0, 26, 29, 0, 29, 0, 0, 2, 0, 1, 0]' : 0.220575}
{'[2, 5, 5, 0, 6, 4, 1, 0, 26, 29, 0, 29, 0, 0, 2, 0, 1, 0]' : 0.220712}
{'[2, 5, 5, 0, 6, 4, 1, 0, 26, 29, 0, 29, 0, 0, 2, 0, 1, 0]' : 0.221477}
{'[2, 5, 5, 0, 6, 4, 1, 0, 26, 29, 0, 29, 0, 0, 2, 0, 1, 0]' : 0.21803}
{'[2, 5, 5, 0, 6, 4, 1, 0, 26, 29, 0, 29, 0, 0, 2, 0, 1, 0]' : 0.215751}
{'[2, 5, 5, 0, 6, 4, 1, 0, 26, 29, 0, 29, 0, 0, 2, 0, 1, 0]' : 0.216684}
{'[2, 5, 5, 0, 6, 4, 1, 0, 26, 29, 0, 29, 0, 0, 2, 0, 1, 0]' : 0.220745}
{'[2, 5, 5, 0, 6, 4, 1, 0, 26, 29, 0, 29, 0, 0, 2, 0, 1, 0]' : 0.217642}
{'[2, 5, 5, 0, 6, 4, 1, 0, 26, 29, 0, 29, 0, 0, 2, 0, 1, 0]' : 0.220659}
{'[2, 5, 5, 0, 6, 4, 1, 0, 26, 29, 0, 29, 0, 0, 2, 0, 1, 0]' : 0.22099}
{'[2, 5, 5, 0, 6, 4, 1, 0, 26, 29, 0, 29, 0, 0, 2, 0, 1, 0]' : 0.22059}
{'[2, 5, 5, 0, 6, 4, 1, 0, 26, 29, 0, 29, 0, 0, 2, 0, 1, 0]' : 0.216457}
{'[2, 5, 5, 0, 6, 4, 1, 0, 26, 29, 0, 29, 0, 0, 2, 0, 1, 0]' : 0.217786}
{'[2, 5, 5, 0, 6, 4, 1, 0, 26, 29, 0, 29, 0, 0, 2, 0, 1, 0]' : 0.220857}
{'[2, 5, 5, 0, 6, 4, 1, 0, 26, 29, 0, 29, 0, 0, 2, 0, 1, 0]' : 0.22065}

out:
 ["{'[2, 5, 5, 0, 6, 4, 1, 0, 26, 29, 0, 29, 0, 0, 2, 0, 1, 0]' : 0.220824}", "{'[2, 5, 5, 0, 6, 4, 1, 0, 26, 29, 0, 29, 0, 0, 2, 0, 1, 0]' : 0.221015}", "{'[2, 5, 5, 0, 6, 4, 1, 0, 26, 29, 0, 29, 0, 0, 2, 0, 1, 0]' : 0.220715}", "{'[2, 5, 5, 0, 6, 4, 1, 0, 26, 29, 0, 29, 0, 0, 2, 0, 1, 0]' : 0.221392}", "{'[2, 5, 5, 0, 6, 4, 1, 0, 26, 29, 0, 29, 0, 0, 2, 0, 1, 0]' : 0.220607}", "{'[2, 5, 5, 0, 6, 4, 1, 0, 26, 29, 0, 29, 0, 0, 2, 0, 1, 0]' : 0.221075}", "{'[2, 5, 5, 0, 6, 4, 1, 0, 26, 29, 0, 29, 0, 0, 2, 0, 1, 0]' : 0.220459}", "{'[2, 5, 5, 0, 6, 4, 1, 0, 26, 29, 0, 29, 0, 0, 2, 0, 1, 0]' : 0.219499}", "{'[2, 5, 5, 0, 6, 4, 1, 0, 26, 29, 0, 29, 0, 0, 2, 0, 1, 0]' : 0.216044}", "{'[2, 5, 5, 0, 6, 4, 1, 0, 26, 29, 0, 29, 0, 0, 2, 0, 1, 0]' : 0.218922}", "{'[2, 5, 5, 0, 6, 4, 1, 0, 26, 29, 0, 29, 0, 0, 2, 0, 1, 0]' : 0.217631}", "{'[2, 5, 5, 0, 6, 4, 1, 0, 26, 29, 0, 29, 0, 0, 2, 0, 1, 0]' : 0.217724}", "{'[2, 5, 5, 0, 6, 4, 1, 0, 26, 29, 0, 29, 0, 0, 2, 0, 1, 0]' : 0.216542}", "{'[2, 5, 5, 0, 6, 4, 1, 0, 26, 29, 0, 29, 0, 0, 2, 0, 1, 0]' : 0.216477}", "{'[2, 5, 5, 0, 6, 4, 1, 0, 26, 29, 0, 29, 0, 0, 2, 0, 1, 0]' : 0.220548}", "{'[2, 5, 5, 0, 6, 4, 1, 0, 26, 29, 0, 29, 0, 0, 2, 0, 1, 0]' : 0.220575}", "{'[2, 5, 5, 0, 6, 4, 1, 0, 26, 29, 0, 29, 0, 0, 2, 0, 1, 0]' : 0.220712}", "{'[2, 5, 5, 0, 6, 4, 1, 0, 26, 29, 0, 29, 0, 0, 2, 0, 1, 0]' : 0.221477}", "{'[2, 5, 5, 0, 6, 4, 1, 0, 26, 29, 0, 29, 0, 0, 2, 0, 1, 0]' : 0.21803}", "{'[2, 5, 5, 0, 6, 4, 1, 0, 26, 29, 0, 29, 0, 0, 2, 0, 1, 0]' : 0.215751}", "{'[2, 5, 5, 0, 6, 4, 1, 0, 26, 29, 0, 29, 0, 0, 2, 0, 1, 0]' : 0.216684}", "{'[2, 5, 5, 0, 6, 4, 1, 0, 26, 29, 0, 29, 0, 0, 2, 0, 1, 0]' : 0.220745}", "{'[2, 5, 5, 0, 6, 4, 1, 0, 26, 29, 0, 29, 0, 0, 2, 0, 1, 0]' : 0.217642}", "{'[2, 5, 5, 0, 6, 4, 1, 0, 26, 29, 0, 29, 0, 0, 2, 0, 1, 0]' : 0.220659}", "{'[2, 5, 5, 0, 6, 4, 1, 0, 26, 29, 0, 29, 0, 0, 2, 0, 1, 0]' : 0.22099}", "{'[2, 5, 5, 0, 6, 4, 1, 0, 26, 29, 0, 29, 0, 0, 2, 0, 1, 0]' : 0.22059}", "{'[2, 5, 5, 0, 6, 4, 1, 0, 26, 29, 0, 29, 0, 0, 2, 0, 1, 0]' : 0.216457}", "{'[2, 5, 5, 0, 6, 4, 1, 0, 26, 29, 0, 29, 0, 0, 2, 0, 1, 0]' : 0.217786}", "{'[2, 5, 5, 0, 6, 4, 1, 0, 26, 29, 0, 29, 0, 0, 2, 0, 1, 0]' : 0.220857}", "{'[2, 5, 5, 0, 6, 4, 1, 0, 26, 29, 0, 29, 0, 0, 2, 0, 1, 0]' : 0.22065}"]
returning from 'run': {'[2, 5, 5, 0, 6, 4, 1, 0, 26, 29, 0, 29, 0, 0, 2, 0, 1, 0]': ([0.220824, 0.221015, 0.220715, 0.221392, 0.220607, 0.221075, 0.220459, 0.219499, 0.216044, 0.218922, 0.217631, 0.217724, 0.216542, 0.216477, 0.220548, 0.220575, 0.220712, 0.221477, 0.21803, 0.215751, 0.216684, 0.220745, 0.217642, 0.220659, 0.22099, 0.22059, 0.216457, 0.217786, 0.220857, 0.22065], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 5, 5, 0, 6, 4, 1, 0, 26, 29, 0, 29, 0, 0, 2, 0, 1, 0]': ([0.220824, 0.221015, 0.220715, 0.221392, 0.220607, 0.221075, 0.220459, 0.219499, 0.216044, 0.218922, 0.217631, 0.217724, 0.216542, 0.216477, 0.220548, 0.220575, 0.220712, 0.221477, 0.21803, 0.215751, 0.216684, 0.220745, 0.217642, 0.220659, 0.22099, 0.22059, 0.216457, 0.217786, 0.220857, 0.22065], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	67
        Max loop nest depth: 	5
        Additions: 		3112
        Multiplications: 	1178
        Divisions: 		0
        Logical: 		0
        Reads: 			6499
        Writes: 		1350
        Comparisons:		67
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest12.exe __orio_perftest12.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest12.exe  
Program Test Output: 
{'[6, 1, 4, 6, 0, 0, 0, 0, 6, 21, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0951612}
{'[6, 1, 4, 6, 0, 0, 0, 0, 6, 21, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.095047}
{'[6, 1, 4, 6, 0, 0, 0, 0, 6, 21, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.094939}
{'[6, 1, 4, 6, 0, 0, 0, 0, 6, 21, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.095423}
{'[6, 1, 4, 6, 0, 0, 0, 0, 6, 21, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0968289}
{'[6, 1, 4, 6, 0, 0, 0, 0, 6, 21, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.096822}
{'[6, 1, 4, 6, 0, 0, 0, 0, 6, 21, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0967801}
{'[6, 1, 4, 6, 0, 0, 0, 0, 6, 21, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0944421}
{'[6, 1, 4, 6, 0, 0, 0, 0, 6, 21, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.093168}
{'[6, 1, 4, 6, 0, 0, 0, 0, 6, 21, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0970631}
{'[6, 1, 4, 6, 0, 0, 0, 0, 6, 21, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0967522}
{'[6, 1, 4, 6, 0, 0, 0, 0, 6, 21, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0968308}
{'[6, 1, 4, 6, 0, 0, 0, 0, 6, 21, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.096817}
{'[6, 1, 4, 6, 0, 0, 0, 0, 6, 21, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0968418}
{'[6, 1, 4, 6, 0, 0, 0, 0, 6, 21, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.095475}
{'[6, 1, 4, 6, 0, 0, 0, 0, 6, 21, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.095134}
{'[6, 1, 4, 6, 0, 0, 0, 0, 6, 21, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.095022}
{'[6, 1, 4, 6, 0, 0, 0, 0, 6, 21, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.094461}
{'[6, 1, 4, 6, 0, 0, 0, 0, 6, 21, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0934091}
{'[6, 1, 4, 6, 0, 0, 0, 0, 6, 21, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.094223}
{'[6, 1, 4, 6, 0, 0, 0, 0, 6, 21, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0952101}
{'[6, 1, 4, 6, 0, 0, 0, 0, 6, 21, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.096391}
{'[6, 1, 4, 6, 0, 0, 0, 0, 6, 21, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.09674}
{'[6, 1, 4, 6, 0, 0, 0, 0, 6, 21, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0950739}
{'[6, 1, 4, 6, 0, 0, 0, 0, 6, 21, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0952029}
{'[6, 1, 4, 6, 0, 0, 0, 0, 6, 21, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0950241}
{'[6, 1, 4, 6, 0, 0, 0, 0, 6, 21, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0950699}
{'[6, 1, 4, 6, 0, 0, 0, 0, 6, 21, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.094995}
{'[6, 1, 4, 6, 0, 0, 0, 0, 6, 21, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0950081}
{'[6, 1, 4, 6, 0, 0, 0, 0, 6, 21, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0954721}

out:
 ["{'[6, 1, 4, 6, 0, 0, 0, 0, 6, 21, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0951612}", "{'[6, 1, 4, 6, 0, 0, 0, 0, 6, 21, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.095047}", "{'[6, 1, 4, 6, 0, 0, 0, 0, 6, 21, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.094939}", "{'[6, 1, 4, 6, 0, 0, 0, 0, 6, 21, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.095423}", "{'[6, 1, 4, 6, 0, 0, 0, 0, 6, 21, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0968289}", "{'[6, 1, 4, 6, 0, 0, 0, 0, 6, 21, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.096822}", "{'[6, 1, 4, 6, 0, 0, 0, 0, 6, 21, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0967801}", "{'[6, 1, 4, 6, 0, 0, 0, 0, 6, 21, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0944421}", "{'[6, 1, 4, 6, 0, 0, 0, 0, 6, 21, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.093168}", "{'[6, 1, 4, 6, 0, 0, 0, 0, 6, 21, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0970631}", "{'[6, 1, 4, 6, 0, 0, 0, 0, 6, 21, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0967522}", "{'[6, 1, 4, 6, 0, 0, 0, 0, 6, 21, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0968308}", "{'[6, 1, 4, 6, 0, 0, 0, 0, 6, 21, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.096817}", "{'[6, 1, 4, 6, 0, 0, 0, 0, 6, 21, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0968418}", "{'[6, 1, 4, 6, 0, 0, 0, 0, 6, 21, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.095475}", "{'[6, 1, 4, 6, 0, 0, 0, 0, 6, 21, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.095134}", "{'[6, 1, 4, 6, 0, 0, 0, 0, 6, 21, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.095022}", "{'[6, 1, 4, 6, 0, 0, 0, 0, 6, 21, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.094461}", "{'[6, 1, 4, 6, 0, 0, 0, 0, 6, 21, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0934091}", "{'[6, 1, 4, 6, 0, 0, 0, 0, 6, 21, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.094223}", "{'[6, 1, 4, 6, 0, 0, 0, 0, 6, 21, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0952101}", "{'[6, 1, 4, 6, 0, 0, 0, 0, 6, 21, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.096391}", "{'[6, 1, 4, 6, 0, 0, 0, 0, 6, 21, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.09674}", "{'[6, 1, 4, 6, 0, 0, 0, 0, 6, 21, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0950739}", "{'[6, 1, 4, 6, 0, 0, 0, 0, 6, 21, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0952029}", "{'[6, 1, 4, 6, 0, 0, 0, 0, 6, 21, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0950241}", "{'[6, 1, 4, 6, 0, 0, 0, 0, 6, 21, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0950699}", "{'[6, 1, 4, 6, 0, 0, 0, 0, 6, 21, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.094995}", "{'[6, 1, 4, 6, 0, 0, 0, 0, 6, 21, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0950081}", "{'[6, 1, 4, 6, 0, 0, 0, 0, 6, 21, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0954721}"]
returning from 'run': {'[6, 1, 4, 6, 0, 0, 0, 0, 6, 21, 0, 8, 1, 0, 1, 1, 1, 0]': ([0.0951612, 0.095047, 0.094939, 0.095423, 0.0968289, 0.096822, 0.0967801, 0.0944421, 0.093168, 0.0970631, 0.0967522, 0.0968308, 0.096817, 0.0968418, 0.095475, 0.095134, 0.095022, 0.094461, 0.0934091, 0.094223, 0.0952101, 0.096391, 0.09674, 0.0950739, 0.0952029, 0.0950241, 0.0950699, 0.094995, 0.0950081, 0.0954721], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 1, 4, 6, 0, 0, 0, 0, 6, 21, 0, 8, 1, 0, 1, 1, 1, 0]': ([0.0951612, 0.095047, 0.094939, 0.095423, 0.0968289, 0.096822, 0.0967801, 0.0944421, 0.093168, 0.0970631, 0.0967522, 0.0968308, 0.096817, 0.0968418, 0.095475, 0.095134, 0.095022, 0.094461, 0.0934091, 0.094223, 0.0952101, 0.096391, 0.09674, 0.0950739, 0.0952029, 0.0950241, 0.0950699, 0.094995, 0.0950081, 0.0954721], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	27
        Max loop nest depth: 	5
        Additions: 		1111
        Multiplications: 	392
        Divisions: 		0
        Logical: 		0
        Reads: 			2273
        Writes: 		312
        Comparisons:		27
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest13.exe __orio_perftest13.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest13.exe  
Program Test Output: 
{'[6, 4, 6, 0, 5, 6, 0, 0, 27, 15, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.205259}
{'[6, 4, 6, 0, 5, 6, 0, 0, 27, 15, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.202828}
{'[6, 4, 6, 0, 5, 6, 0, 0, 27, 15, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.203909}
{'[6, 4, 6, 0, 5, 6, 0, 0, 27, 15, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.204551}
{'[6, 4, 6, 0, 5, 6, 0, 0, 27, 15, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.201538}
{'[6, 4, 6, 0, 5, 6, 0, 0, 27, 15, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.205112}
{'[6, 4, 6, 0, 5, 6, 0, 0, 27, 15, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.205835}
{'[6, 4, 6, 0, 5, 6, 0, 0, 27, 15, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.205148}
{'[6, 4, 6, 0, 5, 6, 0, 0, 27, 15, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.204239}
{'[6, 4, 6, 0, 5, 6, 0, 0, 27, 15, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.204711}
{'[6, 4, 6, 0, 5, 6, 0, 0, 27, 15, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.202637}
{'[6, 4, 6, 0, 5, 6, 0, 0, 27, 15, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.200799}
{'[6, 4, 6, 0, 5, 6, 0, 0, 27, 15, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.200363}
{'[6, 4, 6, 0, 5, 6, 0, 0, 27, 15, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.195714}
{'[6, 4, 6, 0, 5, 6, 0, 0, 27, 15, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.199285}
{'[6, 4, 6, 0, 5, 6, 0, 0, 27, 15, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.201297}
{'[6, 4, 6, 0, 5, 6, 0, 0, 27, 15, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.200391}
{'[6, 4, 6, 0, 5, 6, 0, 0, 27, 15, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.201597}
{'[6, 4, 6, 0, 5, 6, 0, 0, 27, 15, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.204664}
{'[6, 4, 6, 0, 5, 6, 0, 0, 27, 15, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.204981}
{'[6, 4, 6, 0, 5, 6, 0, 0, 27, 15, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.204568}
{'[6, 4, 6, 0, 5, 6, 0, 0, 27, 15, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.20591}
{'[6, 4, 6, 0, 5, 6, 0, 0, 27, 15, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.20542}
{'[6, 4, 6, 0, 5, 6, 0, 0, 27, 15, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.204369}
{'[6, 4, 6, 0, 5, 6, 0, 0, 27, 15, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.20447}
{'[6, 4, 6, 0, 5, 6, 0, 0, 27, 15, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.204498}
{'[6, 4, 6, 0, 5, 6, 0, 0, 27, 15, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.205218}
{'[6, 4, 6, 0, 5, 6, 0, 0, 27, 15, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.205373}
{'[6, 4, 6, 0, 5, 6, 0, 0, 27, 15, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.20455}
{'[6, 4, 6, 0, 5, 6, 0, 0, 27, 15, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.204413}

out:
 ["{'[6, 4, 6, 0, 5, 6, 0, 0, 27, 15, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.205259}", "{'[6, 4, 6, 0, 5, 6, 0, 0, 27, 15, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.202828}", "{'[6, 4, 6, 0, 5, 6, 0, 0, 27, 15, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.203909}", "{'[6, 4, 6, 0, 5, 6, 0, 0, 27, 15, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.204551}", "{'[6, 4, 6, 0, 5, 6, 0, 0, 27, 15, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.201538}", "{'[6, 4, 6, 0, 5, 6, 0, 0, 27, 15, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.205112}", "{'[6, 4, 6, 0, 5, 6, 0, 0, 27, 15, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.205835}", "{'[6, 4, 6, 0, 5, 6, 0, 0, 27, 15, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.205148}", "{'[6, 4, 6, 0, 5, 6, 0, 0, 27, 15, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.204239}", "{'[6, 4, 6, 0, 5, 6, 0, 0, 27, 15, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.204711}", "{'[6, 4, 6, 0, 5, 6, 0, 0, 27, 15, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.202637}", "{'[6, 4, 6, 0, 5, 6, 0, 0, 27, 15, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.200799}", "{'[6, 4, 6, 0, 5, 6, 0, 0, 27, 15, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.200363}", "{'[6, 4, 6, 0, 5, 6, 0, 0, 27, 15, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.195714}", "{'[6, 4, 6, 0, 5, 6, 0, 0, 27, 15, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.199285}", "{'[6, 4, 6, 0, 5, 6, 0, 0, 27, 15, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.201297}", "{'[6, 4, 6, 0, 5, 6, 0, 0, 27, 15, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.200391}", "{'[6, 4, 6, 0, 5, 6, 0, 0, 27, 15, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.201597}", "{'[6, 4, 6, 0, 5, 6, 0, 0, 27, 15, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.204664}", "{'[6, 4, 6, 0, 5, 6, 0, 0, 27, 15, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.204981}", "{'[6, 4, 6, 0, 5, 6, 0, 0, 27, 15, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.204568}", "{'[6, 4, 6, 0, 5, 6, 0, 0, 27, 15, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.20591}", "{'[6, 4, 6, 0, 5, 6, 0, 0, 27, 15, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.20542}", "{'[6, 4, 6, 0, 5, 6, 0, 0, 27, 15, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.204369}", "{'[6, 4, 6, 0, 5, 6, 0, 0, 27, 15, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.20447}", "{'[6, 4, 6, 0, 5, 6, 0, 0, 27, 15, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.204498}", "{'[6, 4, 6, 0, 5, 6, 0, 0, 27, 15, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.205218}", "{'[6, 4, 6, 0, 5, 6, 0, 0, 27, 15, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.205373}", "{'[6, 4, 6, 0, 5, 6, 0, 0, 27, 15, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.20455}", "{'[6, 4, 6, 0, 5, 6, 0, 0, 27, 15, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.204413}"]
returning from 'run': {'[6, 4, 6, 0, 5, 6, 0, 0, 27, 15, 0, 1, 2, 0, 0, 0, 1, 1]': ([0.205259, 0.202828, 0.203909, 0.204551, 0.201538, 0.205112, 0.205835, 0.205148, 0.204239, 0.204711, 0.202637, 0.200799, 0.200363, 0.195714, 0.199285, 0.201297, 0.200391, 0.201597, 0.204664, 0.204981, 0.204568, 0.20591, 0.20542, 0.204369, 0.20447, 0.204498, 0.205218, 0.205373, 0.20455, 0.204413], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 4, 6, 0, 5, 6, 0, 0, 27, 15, 0, 1, 2, 0, 0, 0, 1, 1]': ([0.205259, 0.202828, 0.203909, 0.204551, 0.201538, 0.205112, 0.205835, 0.205148, 0.204239, 0.204711, 0.202637, 0.200799, 0.200363, 0.195714, 0.199285, 0.201297, 0.200391, 0.201597, 0.204664, 0.204981, 0.204568, 0.20591, 0.20542, 0.204369, 0.20447, 0.204498, 0.205218, 0.205373, 0.20455, 0.204413], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	29
        Max loop nest depth: 	5
        Additions: 		1872
        Multiplications: 	558
        Divisions: 		0
        Logical: 		0
        Reads: 			3063
        Writes: 		383
        Comparisons:		29
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest14.exe __orio_perftest14.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest14.exe  
Program Test Output: 
{'[2, 6, 0, 0, 5, 0, 0, 1, 6, 7, 0, 28, 0, 0, 0, 0, 0, 1]' : 0.136968}
{'[2, 6, 0, 0, 5, 0, 0, 1, 6, 7, 0, 28, 0, 0, 0, 0, 0, 1]' : 0.136731}
{'[2, 6, 0, 0, 5, 0, 0, 1, 6, 7, 0, 28, 0, 0, 0, 0, 0, 1]' : 0.13097}
{'[2, 6, 0, 0, 5, 0, 0, 1, 6, 7, 0, 28, 0, 0, 0, 0, 0, 1]' : 0.124856}
{'[2, 6, 0, 0, 5, 0, 0, 1, 6, 7, 0, 28, 0, 0, 0, 0, 0, 1]' : 0.125022}
{'[2, 6, 0, 0, 5, 0, 0, 1, 6, 7, 0, 28, 0, 0, 0, 0, 0, 1]' : 0.124444}
{'[2, 6, 0, 0, 5, 0, 0, 1, 6, 7, 0, 28, 0, 0, 0, 0, 0, 1]' : 0.124528}
{'[2, 6, 0, 0, 5, 0, 0, 1, 6, 7, 0, 28, 0, 0, 0, 0, 0, 1]' : 0.122587}
{'[2, 6, 0, 0, 5, 0, 0, 1, 6, 7, 0, 28, 0, 0, 0, 0, 0, 1]' : 0.122617}
{'[2, 6, 0, 0, 5, 0, 0, 1, 6, 7, 0, 28, 0, 0, 0, 0, 0, 1]' : 0.123003}
{'[2, 6, 0, 0, 5, 0, 0, 1, 6, 7, 0, 28, 0, 0, 0, 0, 0, 1]' : 0.122849}
{'[2, 6, 0, 0, 5, 0, 0, 1, 6, 7, 0, 28, 0, 0, 0, 0, 0, 1]' : 0.122611}
{'[2, 6, 0, 0, 5, 0, 0, 1, 6, 7, 0, 28, 0, 0, 0, 0, 0, 1]' : 0.122597}
{'[2, 6, 0, 0, 5, 0, 0, 1, 6, 7, 0, 28, 0, 0, 0, 0, 0, 1]' : 0.122465}
{'[2, 6, 0, 0, 5, 0, 0, 1, 6, 7, 0, 28, 0, 0, 0, 0, 0, 1]' : 0.12204}
{'[2, 6, 0, 0, 5, 0, 0, 1, 6, 7, 0, 28, 0, 0, 0, 0, 0, 1]' : 0.124972}
{'[2, 6, 0, 0, 5, 0, 0, 1, 6, 7, 0, 28, 0, 0, 0, 0, 0, 1]' : 0.125124}
{'[2, 6, 0, 0, 5, 0, 0, 1, 6, 7, 0, 28, 0, 0, 0, 0, 0, 1]' : 0.124061}
{'[2, 6, 0, 0, 5, 0, 0, 1, 6, 7, 0, 28, 0, 0, 0, 0, 0, 1]' : 0.122858}
{'[2, 6, 0, 0, 5, 0, 0, 1, 6, 7, 0, 28, 0, 0, 0, 0, 0, 1]' : 0.122843}
{'[2, 6, 0, 0, 5, 0, 0, 1, 6, 7, 0, 28, 0, 0, 0, 0, 0, 1]' : 0.122575}
{'[2, 6, 0, 0, 5, 0, 0, 1, 6, 7, 0, 28, 0, 0, 0, 0, 0, 1]' : 0.122213}
{'[2, 6, 0, 0, 5, 0, 0, 1, 6, 7, 0, 28, 0, 0, 0, 0, 0, 1]' : 0.12225}
{'[2, 6, 0, 0, 5, 0, 0, 1, 6, 7, 0, 28, 0, 0, 0, 0, 0, 1]' : 0.122954}
{'[2, 6, 0, 0, 5, 0, 0, 1, 6, 7, 0, 28, 0, 0, 0, 0, 0, 1]' : 0.122661}
{'[2, 6, 0, 0, 5, 0, 0, 1, 6, 7, 0, 28, 0, 0, 0, 0, 0, 1]' : 0.12279}
{'[2, 6, 0, 0, 5, 0, 0, 1, 6, 7, 0, 28, 0, 0, 0, 0, 0, 1]' : 0.122593}
{'[2, 6, 0, 0, 5, 0, 0, 1, 6, 7, 0, 28, 0, 0, 0, 0, 0, 1]' : 0.121735}
{'[2, 6, 0, 0, 5, 0, 0, 1, 6, 7, 0, 28, 0, 0, 0, 0, 0, 1]' : 0.119932}
{'[2, 6, 0, 0, 5, 0, 0, 1, 6, 7, 0, 28, 0, 0, 0, 0, 0, 1]' : 0.11928}

out:
 ["{'[2, 6, 0, 0, 5, 0, 0, 1, 6, 7, 0, 28, 0, 0, 0, 0, 0, 1]' : 0.136968}", "{'[2, 6, 0, 0, 5, 0, 0, 1, 6, 7, 0, 28, 0, 0, 0, 0, 0, 1]' : 0.136731}", "{'[2, 6, 0, 0, 5, 0, 0, 1, 6, 7, 0, 28, 0, 0, 0, 0, 0, 1]' : 0.13097}", "{'[2, 6, 0, 0, 5, 0, 0, 1, 6, 7, 0, 28, 0, 0, 0, 0, 0, 1]' : 0.124856}", "{'[2, 6, 0, 0, 5, 0, 0, 1, 6, 7, 0, 28, 0, 0, 0, 0, 0, 1]' : 0.125022}", "{'[2, 6, 0, 0, 5, 0, 0, 1, 6, 7, 0, 28, 0, 0, 0, 0, 0, 1]' : 0.124444}", "{'[2, 6, 0, 0, 5, 0, 0, 1, 6, 7, 0, 28, 0, 0, 0, 0, 0, 1]' : 0.124528}", "{'[2, 6, 0, 0, 5, 0, 0, 1, 6, 7, 0, 28, 0, 0, 0, 0, 0, 1]' : 0.122587}", "{'[2, 6, 0, 0, 5, 0, 0, 1, 6, 7, 0, 28, 0, 0, 0, 0, 0, 1]' : 0.122617}", "{'[2, 6, 0, 0, 5, 0, 0, 1, 6, 7, 0, 28, 0, 0, 0, 0, 0, 1]' : 0.123003}", "{'[2, 6, 0, 0, 5, 0, 0, 1, 6, 7, 0, 28, 0, 0, 0, 0, 0, 1]' : 0.122849}", "{'[2, 6, 0, 0, 5, 0, 0, 1, 6, 7, 0, 28, 0, 0, 0, 0, 0, 1]' : 0.122611}", "{'[2, 6, 0, 0, 5, 0, 0, 1, 6, 7, 0, 28, 0, 0, 0, 0, 0, 1]' : 0.122597}", "{'[2, 6, 0, 0, 5, 0, 0, 1, 6, 7, 0, 28, 0, 0, 0, 0, 0, 1]' : 0.122465}", "{'[2, 6, 0, 0, 5, 0, 0, 1, 6, 7, 0, 28, 0, 0, 0, 0, 0, 1]' : 0.12204}", "{'[2, 6, 0, 0, 5, 0, 0, 1, 6, 7, 0, 28, 0, 0, 0, 0, 0, 1]' : 0.124972}", "{'[2, 6, 0, 0, 5, 0, 0, 1, 6, 7, 0, 28, 0, 0, 0, 0, 0, 1]' : 0.125124}", "{'[2, 6, 0, 0, 5, 0, 0, 1, 6, 7, 0, 28, 0, 0, 0, 0, 0, 1]' : 0.124061}", "{'[2, 6, 0, 0, 5, 0, 0, 1, 6, 7, 0, 28, 0, 0, 0, 0, 0, 1]' : 0.122858}", "{'[2, 6, 0, 0, 5, 0, 0, 1, 6, 7, 0, 28, 0, 0, 0, 0, 0, 1]' : 0.122843}", "{'[2, 6, 0, 0, 5, 0, 0, 1, 6, 7, 0, 28, 0, 0, 0, 0, 0, 1]' : 0.122575}", "{'[2, 6, 0, 0, 5, 0, 0, 1, 6, 7, 0, 28, 0, 0, 0, 0, 0, 1]' : 0.122213}", "{'[2, 6, 0, 0, 5, 0, 0, 1, 6, 7, 0, 28, 0, 0, 0, 0, 0, 1]' : 0.12225}", "{'[2, 6, 0, 0, 5, 0, 0, 1, 6, 7, 0, 28, 0, 0, 0, 0, 0, 1]' : 0.122954}", "{'[2, 6, 0, 0, 5, 0, 0, 1, 6, 7, 0, 28, 0, 0, 0, 0, 0, 1]' : 0.122661}", "{'[2, 6, 0, 0, 5, 0, 0, 1, 6, 7, 0, 28, 0, 0, 0, 0, 0, 1]' : 0.12279}", "{'[2, 6, 0, 0, 5, 0, 0, 1, 6, 7, 0, 28, 0, 0, 0, 0, 0, 1]' : 0.122593}", "{'[2, 6, 0, 0, 5, 0, 0, 1, 6, 7, 0, 28, 0, 0, 0, 0, 0, 1]' : 0.121735}", "{'[2, 6, 0, 0, 5, 0, 0, 1, 6, 7, 0, 28, 0, 0, 0, 0, 0, 1]' : 0.119932}", "{'[2, 6, 0, 0, 5, 0, 0, 1, 6, 7, 0, 28, 0, 0, 0, 0, 0, 1]' : 0.11928}"]
returning from 'run': {'[2, 6, 0, 0, 5, 0, 0, 1, 6, 7, 0, 28, 0, 0, 0, 0, 0, 1]': ([0.136968, 0.136731, 0.13097, 0.124856, 0.125022, 0.124444, 0.124528, 0.122587, 0.122617, 0.123003, 0.122849, 0.122611, 0.122597, 0.122465, 0.12204, 0.124972, 0.125124, 0.124061, 0.122858, 0.122843, 0.122575, 0.122213, 0.12225, 0.122954, 0.122661, 0.12279, 0.122593, 0.121735, 0.119932, 0.11928], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 6, 0, 0, 5, 0, 0, 1, 6, 7, 0, 28, 0, 0, 0, 0, 0, 1]': ([0.136968, 0.136731, 0.13097, 0.124856, 0.125022, 0.124444, 0.124528, 0.122587, 0.122617, 0.123003, 0.122849, 0.122611, 0.122597, 0.122465, 0.12204, 0.124972, 0.125124, 0.124061, 0.122858, 0.122843, 0.122575, 0.122213, 0.12225, 0.122954, 0.122661, 0.12279, 0.122593, 0.121735, 0.119932, 0.11928], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		339
        Multiplications: 	138
        Divisions: 		0
        Logical: 		0
        Reads: 			824
        Writes: 		118
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest15.exe __orio_perftest15.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest15.exe  
Program Test Output: 
{'[0, 0, 1, 2, 5, 1, 0, 0, 12, 0, 27, 6, 0, 2, 0, 0, 1, 1]' : 0.226553}
{'[0, 0, 1, 2, 5, 1, 0, 0, 12, 0, 27, 6, 0, 2, 0, 0, 1, 1]' : 0.226584}
{'[0, 0, 1, 2, 5, 1, 0, 0, 12, 0, 27, 6, 0, 2, 0, 0, 1, 1]' : 0.226298}
{'[0, 0, 1, 2, 5, 1, 0, 0, 12, 0, 27, 6, 0, 2, 0, 0, 1, 1]' : 0.226545}
{'[0, 0, 1, 2, 5, 1, 0, 0, 12, 0, 27, 6, 0, 2, 0, 0, 1, 1]' : 0.226661}
{'[0, 0, 1, 2, 5, 1, 0, 0, 12, 0, 27, 6, 0, 2, 0, 0, 1, 1]' : 0.222046}
{'[0, 0, 1, 2, 5, 1, 0, 0, 12, 0, 27, 6, 0, 2, 0, 0, 1, 1]' : 0.226488}
{'[0, 0, 1, 2, 5, 1, 0, 0, 12, 0, 27, 6, 0, 2, 0, 0, 1, 1]' : 0.226513}
{'[0, 0, 1, 2, 5, 1, 0, 0, 12, 0, 27, 6, 0, 2, 0, 0, 1, 1]' : 0.226425}
{'[0, 0, 1, 2, 5, 1, 0, 0, 12, 0, 27, 6, 0, 2, 0, 0, 1, 1]' : 0.226874}
{'[0, 0, 1, 2, 5, 1, 0, 0, 12, 0, 27, 6, 0, 2, 0, 0, 1, 1]' : 0.226532}
{'[0, 0, 1, 2, 5, 1, 0, 0, 12, 0, 27, 6, 0, 2, 0, 0, 1, 1]' : 0.226426}
{'[0, 0, 1, 2, 5, 1, 0, 0, 12, 0, 27, 6, 0, 2, 0, 0, 1, 1]' : 0.226535}
{'[0, 0, 1, 2, 5, 1, 0, 0, 12, 0, 27, 6, 0, 2, 0, 0, 1, 1]' : 0.226465}
{'[0, 0, 1, 2, 5, 1, 0, 0, 12, 0, 27, 6, 0, 2, 0, 0, 1, 1]' : 0.227272}
{'[0, 0, 1, 2, 5, 1, 0, 0, 12, 0, 27, 6, 0, 2, 0, 0, 1, 1]' : 0.226348}
{'[0, 0, 1, 2, 5, 1, 0, 0, 12, 0, 27, 6, 0, 2, 0, 0, 1, 1]' : 0.226517}
{'[0, 0, 1, 2, 5, 1, 0, 0, 12, 0, 27, 6, 0, 2, 0, 0, 1, 1]' : 0.226338}
{'[0, 0, 1, 2, 5, 1, 0, 0, 12, 0, 27, 6, 0, 2, 0, 0, 1, 1]' : 0.226806}
{'[0, 0, 1, 2, 5, 1, 0, 0, 12, 0, 27, 6, 0, 2, 0, 0, 1, 1]' : 0.226813}
{'[0, 0, 1, 2, 5, 1, 0, 0, 12, 0, 27, 6, 0, 2, 0, 0, 1, 1]' : 0.226386}
{'[0, 0, 1, 2, 5, 1, 0, 0, 12, 0, 27, 6, 0, 2, 0, 0, 1, 1]' : 0.226815}
{'[0, 0, 1, 2, 5, 1, 0, 0, 12, 0, 27, 6, 0, 2, 0, 0, 1, 1]' : 0.226566}
{'[0, 0, 1, 2, 5, 1, 0, 0, 12, 0, 27, 6, 0, 2, 0, 0, 1, 1]' : 0.22682}
{'[0, 0, 1, 2, 5, 1, 0, 0, 12, 0, 27, 6, 0, 2, 0, 0, 1, 1]' : 0.226578}
{'[0, 0, 1, 2, 5, 1, 0, 0, 12, 0, 27, 6, 0, 2, 0, 0, 1, 1]' : 0.226514}
{'[0, 0, 1, 2, 5, 1, 0, 0, 12, 0, 27, 6, 0, 2, 0, 0, 1, 1]' : 0.226276}
{'[0, 0, 1, 2, 5, 1, 0, 0, 12, 0, 27, 6, 0, 2, 0, 0, 1, 1]' : 0.227091}
{'[0, 0, 1, 2, 5, 1, 0, 0, 12, 0, 27, 6, 0, 2, 0, 0, 1, 1]' : 0.22643}
{'[0, 0, 1, 2, 5, 1, 0, 0, 12, 0, 27, 6, 0, 2, 0, 0, 1, 1]' : 0.222526}

out:
 ["{'[0, 0, 1, 2, 5, 1, 0, 0, 12, 0, 27, 6, 0, 2, 0, 0, 1, 1]' : 0.226553}", "{'[0, 0, 1, 2, 5, 1, 0, 0, 12, 0, 27, 6, 0, 2, 0, 0, 1, 1]' : 0.226584}", "{'[0, 0, 1, 2, 5, 1, 0, 0, 12, 0, 27, 6, 0, 2, 0, 0, 1, 1]' : 0.226298}", "{'[0, 0, 1, 2, 5, 1, 0, 0, 12, 0, 27, 6, 0, 2, 0, 0, 1, 1]' : 0.226545}", "{'[0, 0, 1, 2, 5, 1, 0, 0, 12, 0, 27, 6, 0, 2, 0, 0, 1, 1]' : 0.226661}", "{'[0, 0, 1, 2, 5, 1, 0, 0, 12, 0, 27, 6, 0, 2, 0, 0, 1, 1]' : 0.222046}", "{'[0, 0, 1, 2, 5, 1, 0, 0, 12, 0, 27, 6, 0, 2, 0, 0, 1, 1]' : 0.226488}", "{'[0, 0, 1, 2, 5, 1, 0, 0, 12, 0, 27, 6, 0, 2, 0, 0, 1, 1]' : 0.226513}", "{'[0, 0, 1, 2, 5, 1, 0, 0, 12, 0, 27, 6, 0, 2, 0, 0, 1, 1]' : 0.226425}", "{'[0, 0, 1, 2, 5, 1, 0, 0, 12, 0, 27, 6, 0, 2, 0, 0, 1, 1]' : 0.226874}", "{'[0, 0, 1, 2, 5, 1, 0, 0, 12, 0, 27, 6, 0, 2, 0, 0, 1, 1]' : 0.226532}", "{'[0, 0, 1, 2, 5, 1, 0, 0, 12, 0, 27, 6, 0, 2, 0, 0, 1, 1]' : 0.226426}", "{'[0, 0, 1, 2, 5, 1, 0, 0, 12, 0, 27, 6, 0, 2, 0, 0, 1, 1]' : 0.226535}", "{'[0, 0, 1, 2, 5, 1, 0, 0, 12, 0, 27, 6, 0, 2, 0, 0, 1, 1]' : 0.226465}", "{'[0, 0, 1, 2, 5, 1, 0, 0, 12, 0, 27, 6, 0, 2, 0, 0, 1, 1]' : 0.227272}", "{'[0, 0, 1, 2, 5, 1, 0, 0, 12, 0, 27, 6, 0, 2, 0, 0, 1, 1]' : 0.226348}", "{'[0, 0, 1, 2, 5, 1, 0, 0, 12, 0, 27, 6, 0, 2, 0, 0, 1, 1]' : 0.226517}", "{'[0, 0, 1, 2, 5, 1, 0, 0, 12, 0, 27, 6, 0, 2, 0, 0, 1, 1]' : 0.226338}", "{'[0, 0, 1, 2, 5, 1, 0, 0, 12, 0, 27, 6, 0, 2, 0, 0, 1, 1]' : 0.226806}", "{'[0, 0, 1, 2, 5, 1, 0, 0, 12, 0, 27, 6, 0, 2, 0, 0, 1, 1]' : 0.226813}", "{'[0, 0, 1, 2, 5, 1, 0, 0, 12, 0, 27, 6, 0, 2, 0, 0, 1, 1]' : 0.226386}", "{'[0, 0, 1, 2, 5, 1, 0, 0, 12, 0, 27, 6, 0, 2, 0, 0, 1, 1]' : 0.226815}", "{'[0, 0, 1, 2, 5, 1, 0, 0, 12, 0, 27, 6, 0, 2, 0, 0, 1, 1]' : 0.226566}", "{'[0, 0, 1, 2, 5, 1, 0, 0, 12, 0, 27, 6, 0, 2, 0, 0, 1, 1]' : 0.22682}", "{'[0, 0, 1, 2, 5, 1, 0, 0, 12, 0, 27, 6, 0, 2, 0, 0, 1, 1]' : 0.226578}", "{'[0, 0, 1, 2, 5, 1, 0, 0, 12, 0, 27, 6, 0, 2, 0, 0, 1, 1]' : 0.226514}", "{'[0, 0, 1, 2, 5, 1, 0, 0, 12, 0, 27, 6, 0, 2, 0, 0, 1, 1]' : 0.226276}", "{'[0, 0, 1, 2, 5, 1, 0, 0, 12, 0, 27, 6, 0, 2, 0, 0, 1, 1]' : 0.227091}", "{'[0, 0, 1, 2, 5, 1, 0, 0, 12, 0, 27, 6, 0, 2, 0, 0, 1, 1]' : 0.22643}", "{'[0, 0, 1, 2, 5, 1, 0, 0, 12, 0, 27, 6, 0, 2, 0, 0, 1, 1]' : 0.222526}"]
returning from 'run': {'[0, 0, 1, 2, 5, 1, 0, 0, 12, 0, 27, 6, 0, 2, 0, 0, 1, 1]': ([0.226553, 0.226584, 0.226298, 0.226545, 0.226661, 0.222046, 0.226488, 0.226513, 0.226425, 0.226874, 0.226532, 0.226426, 0.226535, 0.226465, 0.227272, 0.226348, 0.226517, 0.226338, 0.226806, 0.226813, 0.226386, 0.226815, 0.226566, 0.22682, 0.226578, 0.226514, 0.226276, 0.227091, 0.22643, 0.222526], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 1, 2, 5, 1, 0, 0, 12, 0, 27, 6, 0, 2, 0, 0, 1, 1]': ([0.226553, 0.226584, 0.226298, 0.226545, 0.226661, 0.222046, 0.226488, 0.226513, 0.226425, 0.226874, 0.226532, 0.226426, 0.226535, 0.226465, 0.227272, 0.226348, 0.226517, 0.226338, 0.226806, 0.226813, 0.226386, 0.226815, 0.226566, 0.22682, 0.226578, 0.226514, 0.226276, 0.227091, 0.22643, 0.222526], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	6
        Additions: 		323
        Multiplications: 	102
        Divisions: 		0
        Logical: 		0
        Reads: 			686
        Writes: 		143
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest16.exe __orio_perftest16.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest16.exe  
Program Test Output: 
{'[6, 5, 6, 6, 0, 6, 1, 0, 20, 0, 29, 18, 0, 0, 0, 1, 0, 0]' : 0.235537}
{'[6, 5, 6, 6, 0, 6, 1, 0, 20, 0, 29, 18, 0, 0, 0, 1, 0, 0]' : 0.20792}
{'[6, 5, 6, 6, 0, 6, 1, 0, 20, 0, 29, 18, 0, 0, 0, 1, 0, 0]' : 0.206743}
{'[6, 5, 6, 6, 0, 6, 1, 0, 20, 0, 29, 18, 0, 0, 0, 1, 0, 0]' : 0.204957}
{'[6, 5, 6, 6, 0, 6, 1, 0, 20, 0, 29, 18, 0, 0, 0, 1, 0, 0]' : 0.204987}
{'[6, 5, 6, 6, 0, 6, 1, 0, 20, 0, 29, 18, 0, 0, 0, 1, 0, 0]' : 0.204892}
{'[6, 5, 6, 6, 0, 6, 1, 0, 20, 0, 29, 18, 0, 0, 0, 1, 0, 0]' : 0.204676}
{'[6, 5, 6, 6, 0, 6, 1, 0, 20, 0, 29, 18, 0, 0, 0, 1, 0, 0]' : 0.207664}
{'[6, 5, 6, 6, 0, 6, 1, 0, 20, 0, 29, 18, 0, 0, 0, 1, 0, 0]' : 0.204763}
{'[6, 5, 6, 6, 0, 6, 1, 0, 20, 0, 29, 18, 0, 0, 0, 1, 0, 0]' : 0.205101}
{'[6, 5, 6, 6, 0, 6, 1, 0, 20, 0, 29, 18, 0, 0, 0, 1, 0, 0]' : 0.204843}
{'[6, 5, 6, 6, 0, 6, 1, 0, 20, 0, 29, 18, 0, 0, 0, 1, 0, 0]' : 0.204927}
{'[6, 5, 6, 6, 0, 6, 1, 0, 20, 0, 29, 18, 0, 0, 0, 1, 0, 0]' : 0.208188}
{'[6, 5, 6, 6, 0, 6, 1, 0, 20, 0, 29, 18, 0, 0, 0, 1, 0, 0]' : 0.204937}
{'[6, 5, 6, 6, 0, 6, 1, 0, 20, 0, 29, 18, 0, 0, 0, 1, 0, 0]' : 0.205156}
{'[6, 5, 6, 6, 0, 6, 1, 0, 20, 0, 29, 18, 0, 0, 0, 1, 0, 0]' : 0.204786}
{'[6, 5, 6, 6, 0, 6, 1, 0, 20, 0, 29, 18, 0, 0, 0, 1, 0, 0]' : 0.204762}
{'[6, 5, 6, 6, 0, 6, 1, 0, 20, 0, 29, 18, 0, 0, 0, 1, 0, 0]' : 0.208043}
{'[6, 5, 6, 6, 0, 6, 1, 0, 20, 0, 29, 18, 0, 0, 0, 1, 0, 0]' : 0.205359}
{'[6, 5, 6, 6, 0, 6, 1, 0, 20, 0, 29, 18, 0, 0, 0, 1, 0, 0]' : 0.205217}
{'[6, 5, 6, 6, 0, 6, 1, 0, 20, 0, 29, 18, 0, 0, 0, 1, 0, 0]' : 0.204827}
{'[6, 5, 6, 6, 0, 6, 1, 0, 20, 0, 29, 18, 0, 0, 0, 1, 0, 0]' : 0.204971}
{'[6, 5, 6, 6, 0, 6, 1, 0, 20, 0, 29, 18, 0, 0, 0, 1, 0, 0]' : 0.204788}
{'[6, 5, 6, 6, 0, 6, 1, 0, 20, 0, 29, 18, 0, 0, 0, 1, 0, 0]' : 0.20506}
{'[6, 5, 6, 6, 0, 6, 1, 0, 20, 0, 29, 18, 0, 0, 0, 1, 0, 0]' : 0.208522}
{'[6, 5, 6, 6, 0, 6, 1, 0, 20, 0, 29, 18, 0, 0, 0, 1, 0, 0]' : 0.21066}
{'[6, 5, 6, 6, 0, 6, 1, 0, 20, 0, 29, 18, 0, 0, 0, 1, 0, 0]' : 0.209215}
{'[6, 5, 6, 6, 0, 6, 1, 0, 20, 0, 29, 18, 0, 0, 0, 1, 0, 0]' : 0.204879}
{'[6, 5, 6, 6, 0, 6, 1, 0, 20, 0, 29, 18, 0, 0, 0, 1, 0, 0]' : 0.204966}
{'[6, 5, 6, 6, 0, 6, 1, 0, 20, 0, 29, 18, 0, 0, 0, 1, 0, 0]' : 0.20506}

out:
 ["{'[6, 5, 6, 6, 0, 6, 1, 0, 20, 0, 29, 18, 0, 0, 0, 1, 0, 0]' : 0.235537}", "{'[6, 5, 6, 6, 0, 6, 1, 0, 20, 0, 29, 18, 0, 0, 0, 1, 0, 0]' : 0.20792}", "{'[6, 5, 6, 6, 0, 6, 1, 0, 20, 0, 29, 18, 0, 0, 0, 1, 0, 0]' : 0.206743}", "{'[6, 5, 6, 6, 0, 6, 1, 0, 20, 0, 29, 18, 0, 0, 0, 1, 0, 0]' : 0.204957}", "{'[6, 5, 6, 6, 0, 6, 1, 0, 20, 0, 29, 18, 0, 0, 0, 1, 0, 0]' : 0.204987}", "{'[6, 5, 6, 6, 0, 6, 1, 0, 20, 0, 29, 18, 0, 0, 0, 1, 0, 0]' : 0.204892}", "{'[6, 5, 6, 6, 0, 6, 1, 0, 20, 0, 29, 18, 0, 0, 0, 1, 0, 0]' : 0.204676}", "{'[6, 5, 6, 6, 0, 6, 1, 0, 20, 0, 29, 18, 0, 0, 0, 1, 0, 0]' : 0.207664}", "{'[6, 5, 6, 6, 0, 6, 1, 0, 20, 0, 29, 18, 0, 0, 0, 1, 0, 0]' : 0.204763}", "{'[6, 5, 6, 6, 0, 6, 1, 0, 20, 0, 29, 18, 0, 0, 0, 1, 0, 0]' : 0.205101}", "{'[6, 5, 6, 6, 0, 6, 1, 0, 20, 0, 29, 18, 0, 0, 0, 1, 0, 0]' : 0.204843}", "{'[6, 5, 6, 6, 0, 6, 1, 0, 20, 0, 29, 18, 0, 0, 0, 1, 0, 0]' : 0.204927}", "{'[6, 5, 6, 6, 0, 6, 1, 0, 20, 0, 29, 18, 0, 0, 0, 1, 0, 0]' : 0.208188}", "{'[6, 5, 6, 6, 0, 6, 1, 0, 20, 0, 29, 18, 0, 0, 0, 1, 0, 0]' : 0.204937}", "{'[6, 5, 6, 6, 0, 6, 1, 0, 20, 0, 29, 18, 0, 0, 0, 1, 0, 0]' : 0.205156}", "{'[6, 5, 6, 6, 0, 6, 1, 0, 20, 0, 29, 18, 0, 0, 0, 1, 0, 0]' : 0.204786}", "{'[6, 5, 6, 6, 0, 6, 1, 0, 20, 0, 29, 18, 0, 0, 0, 1, 0, 0]' : 0.204762}", "{'[6, 5, 6, 6, 0, 6, 1, 0, 20, 0, 29, 18, 0, 0, 0, 1, 0, 0]' : 0.208043}", "{'[6, 5, 6, 6, 0, 6, 1, 0, 20, 0, 29, 18, 0, 0, 0, 1, 0, 0]' : 0.205359}", "{'[6, 5, 6, 6, 0, 6, 1, 0, 20, 0, 29, 18, 0, 0, 0, 1, 0, 0]' : 0.205217}", "{'[6, 5, 6, 6, 0, 6, 1, 0, 20, 0, 29, 18, 0, 0, 0, 1, 0, 0]' : 0.204827}", "{'[6, 5, 6, 6, 0, 6, 1, 0, 20, 0, 29, 18, 0, 0, 0, 1, 0, 0]' : 0.204971}", "{'[6, 5, 6, 6, 0, 6, 1, 0, 20, 0, 29, 18, 0, 0, 0, 1, 0, 0]' : 0.204788}", "{'[6, 5, 6, 6, 0, 6, 1, 0, 20, 0, 29, 18, 0, 0, 0, 1, 0, 0]' : 0.20506}", "{'[6, 5, 6, 6, 0, 6, 1, 0, 20, 0, 29, 18, 0, 0, 0, 1, 0, 0]' : 0.208522}", "{'[6, 5, 6, 6, 0, 6, 1, 0, 20, 0, 29, 18, 0, 0, 0, 1, 0, 0]' : 0.21066}", "{'[6, 5, 6, 6, 0, 6, 1, 0, 20, 0, 29, 18, 0, 0, 0, 1, 0, 0]' : 0.209215}", "{'[6, 5, 6, 6, 0, 6, 1, 0, 20, 0, 29, 18, 0, 0, 0, 1, 0, 0]' : 0.204879}", "{'[6, 5, 6, 6, 0, 6, 1, 0, 20, 0, 29, 18, 0, 0, 0, 1, 0, 0]' : 0.204966}", "{'[6, 5, 6, 6, 0, 6, 1, 0, 20, 0, 29, 18, 0, 0, 0, 1, 0, 0]' : 0.20506}"]
returning from 'run': {'[6, 5, 6, 6, 0, 6, 1, 0, 20, 0, 29, 18, 0, 0, 0, 1, 0, 0]': ([0.235537, 0.20792, 0.206743, 0.204957, 0.204987, 0.204892, 0.204676, 0.207664, 0.204763, 0.205101, 0.204843, 0.204927, 0.208188, 0.204937, 0.205156, 0.204786, 0.204762, 0.208043, 0.205359, 0.205217, 0.204827, 0.204971, 0.204788, 0.20506, 0.208522, 0.21066, 0.209215, 0.204879, 0.204966, 0.20506], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 5, 6, 6, 0, 6, 1, 0, 20, 0, 29, 18, 0, 0, 0, 1, 0, 0]': ([0.235537, 0.20792, 0.206743, 0.204957, 0.204987, 0.204892, 0.204676, 0.207664, 0.204763, 0.205101, 0.204843, 0.204927, 0.208188, 0.204937, 0.205156, 0.204786, 0.204762, 0.208043, 0.205359, 0.205217, 0.204827, 0.204971, 0.204788, 0.20506, 0.208522, 0.21066, 0.209215, 0.204879, 0.204966, 0.20506], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	79
        Max loop nest depth: 	6
        Additions: 		4081
        Multiplications: 	1472
        Divisions: 		0
        Logical: 		0
        Reads: 			7833
        Writes: 		1425
        Comparisons:		79
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest17.exe __orio_perftest17.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest17.exe  
Program Test Output: 
{'[6, 4, 0, 6, 6, 6, 0, 1, 0, 14, 0, 11, 0, 2, 0, 1, 1, 0]' : 0.160748}
{'[6, 4, 0, 6, 6, 6, 0, 1, 0, 14, 0, 11, 0, 2, 0, 1, 1, 0]' : 0.164175}
{'[6, 4, 0, 6, 6, 6, 0, 1, 0, 14, 0, 11, 0, 2, 0, 1, 1, 0]' : 0.165654}
{'[6, 4, 0, 6, 6, 6, 0, 1, 0, 14, 0, 11, 0, 2, 0, 1, 1, 0]' : 0.165033}
{'[6, 4, 0, 6, 6, 6, 0, 1, 0, 14, 0, 11, 0, 2, 0, 1, 1, 0]' : 0.161193}
{'[6, 4, 0, 6, 6, 6, 0, 1, 0, 14, 0, 11, 0, 2, 0, 1, 1, 0]' : 0.161178}
{'[6, 4, 0, 6, 6, 6, 0, 1, 0, 14, 0, 11, 0, 2, 0, 1, 1, 0]' : 0.161605}
{'[6, 4, 0, 6, 6, 6, 0, 1, 0, 14, 0, 11, 0, 2, 0, 1, 1, 0]' : 0.161527}
{'[6, 4, 0, 6, 6, 6, 0, 1, 0, 14, 0, 11, 0, 2, 0, 1, 1, 0]' : 0.161114}
{'[6, 4, 0, 6, 6, 6, 0, 1, 0, 14, 0, 11, 0, 2, 0, 1, 1, 0]' : 0.161043}
{'[6, 4, 0, 6, 6, 6, 0, 1, 0, 14, 0, 11, 0, 2, 0, 1, 1, 0]' : 0.161124}
{'[6, 4, 0, 6, 6, 6, 0, 1, 0, 14, 0, 11, 0, 2, 0, 1, 1, 0]' : 0.161338}
{'[6, 4, 0, 6, 6, 6, 0, 1, 0, 14, 0, 11, 0, 2, 0, 1, 1, 0]' : 0.161768}
{'[6, 4, 0, 6, 6, 6, 0, 1, 0, 14, 0, 11, 0, 2, 0, 1, 1, 0]' : 0.161399}
{'[6, 4, 0, 6, 6, 6, 0, 1, 0, 14, 0, 11, 0, 2, 0, 1, 1, 0]' : 0.161317}
{'[6, 4, 0, 6, 6, 6, 0, 1, 0, 14, 0, 11, 0, 2, 0, 1, 1, 0]' : 0.161029}
{'[6, 4, 0, 6, 6, 6, 0, 1, 0, 14, 0, 11, 0, 2, 0, 1, 1, 0]' : 0.161172}
{'[6, 4, 0, 6, 6, 6, 0, 1, 0, 14, 0, 11, 0, 2, 0, 1, 1, 0]' : 0.161356}
{'[6, 4, 0, 6, 6, 6, 0, 1, 0, 14, 0, 11, 0, 2, 0, 1, 1, 0]' : 0.161062}
{'[6, 4, 0, 6, 6, 6, 0, 1, 0, 14, 0, 11, 0, 2, 0, 1, 1, 0]' : 0.161902}
{'[6, 4, 0, 6, 6, 6, 0, 1, 0, 14, 0, 11, 0, 2, 0, 1, 1, 0]' : 0.161089}
{'[6, 4, 0, 6, 6, 6, 0, 1, 0, 14, 0, 11, 0, 2, 0, 1, 1, 0]' : 0.161091}
{'[6, 4, 0, 6, 6, 6, 0, 1, 0, 14, 0, 11, 0, 2, 0, 1, 1, 0]' : 0.161307}
{'[6, 4, 0, 6, 6, 6, 0, 1, 0, 14, 0, 11, 0, 2, 0, 1, 1, 0]' : 0.161057}
{'[6, 4, 0, 6, 6, 6, 0, 1, 0, 14, 0, 11, 0, 2, 0, 1, 1, 0]' : 0.161025}
{'[6, 4, 0, 6, 6, 6, 0, 1, 0, 14, 0, 11, 0, 2, 0, 1, 1, 0]' : 0.161547}
{'[6, 4, 0, 6, 6, 6, 0, 1, 0, 14, 0, 11, 0, 2, 0, 1, 1, 0]' : 0.161461}
{'[6, 4, 0, 6, 6, 6, 0, 1, 0, 14, 0, 11, 0, 2, 0, 1, 1, 0]' : 0.161205}
{'[6, 4, 0, 6, 6, 6, 0, 1, 0, 14, 0, 11, 0, 2, 0, 1, 1, 0]' : 0.161187}
{'[6, 4, 0, 6, 6, 6, 0, 1, 0, 14, 0, 11, 0, 2, 0, 1, 1, 0]' : 0.16119}

out:
 ["{'[6, 4, 0, 6, 6, 6, 0, 1, 0, 14, 0, 11, 0, 2, 0, 1, 1, 0]' : 0.160748}", "{'[6, 4, 0, 6, 6, 6, 0, 1, 0, 14, 0, 11, 0, 2, 0, 1, 1, 0]' : 0.164175}", "{'[6, 4, 0, 6, 6, 6, 0, 1, 0, 14, 0, 11, 0, 2, 0, 1, 1, 0]' : 0.165654}", "{'[6, 4, 0, 6, 6, 6, 0, 1, 0, 14, 0, 11, 0, 2, 0, 1, 1, 0]' : 0.165033}", "{'[6, 4, 0, 6, 6, 6, 0, 1, 0, 14, 0, 11, 0, 2, 0, 1, 1, 0]' : 0.161193}", "{'[6, 4, 0, 6, 6, 6, 0, 1, 0, 14, 0, 11, 0, 2, 0, 1, 1, 0]' : 0.161178}", "{'[6, 4, 0, 6, 6, 6, 0, 1, 0, 14, 0, 11, 0, 2, 0, 1, 1, 0]' : 0.161605}", "{'[6, 4, 0, 6, 6, 6, 0, 1, 0, 14, 0, 11, 0, 2, 0, 1, 1, 0]' : 0.161527}", "{'[6, 4, 0, 6, 6, 6, 0, 1, 0, 14, 0, 11, 0, 2, 0, 1, 1, 0]' : 0.161114}", "{'[6, 4, 0, 6, 6, 6, 0, 1, 0, 14, 0, 11, 0, 2, 0, 1, 1, 0]' : 0.161043}", "{'[6, 4, 0, 6, 6, 6, 0, 1, 0, 14, 0, 11, 0, 2, 0, 1, 1, 0]' : 0.161124}", "{'[6, 4, 0, 6, 6, 6, 0, 1, 0, 14, 0, 11, 0, 2, 0, 1, 1, 0]' : 0.161338}", "{'[6, 4, 0, 6, 6, 6, 0, 1, 0, 14, 0, 11, 0, 2, 0, 1, 1, 0]' : 0.161768}", "{'[6, 4, 0, 6, 6, 6, 0, 1, 0, 14, 0, 11, 0, 2, 0, 1, 1, 0]' : 0.161399}", "{'[6, 4, 0, 6, 6, 6, 0, 1, 0, 14, 0, 11, 0, 2, 0, 1, 1, 0]' : 0.161317}", "{'[6, 4, 0, 6, 6, 6, 0, 1, 0, 14, 0, 11, 0, 2, 0, 1, 1, 0]' : 0.161029}", "{'[6, 4, 0, 6, 6, 6, 0, 1, 0, 14, 0, 11, 0, 2, 0, 1, 1, 0]' : 0.161172}", "{'[6, 4, 0, 6, 6, 6, 0, 1, 0, 14, 0, 11, 0, 2, 0, 1, 1, 0]' : 0.161356}", "{'[6, 4, 0, 6, 6, 6, 0, 1, 0, 14, 0, 11, 0, 2, 0, 1, 1, 0]' : 0.161062}", "{'[6, 4, 0, 6, 6, 6, 0, 1, 0, 14, 0, 11, 0, 2, 0, 1, 1, 0]' : 0.161902}", "{'[6, 4, 0, 6, 6, 6, 0, 1, 0, 14, 0, 11, 0, 2, 0, 1, 1, 0]' : 0.161089}", "{'[6, 4, 0, 6, 6, 6, 0, 1, 0, 14, 0, 11, 0, 2, 0, 1, 1, 0]' : 0.161091}", "{'[6, 4, 0, 6, 6, 6, 0, 1, 0, 14, 0, 11, 0, 2, 0, 1, 1, 0]' : 0.161307}", "{'[6, 4, 0, 6, 6, 6, 0, 1, 0, 14, 0, 11, 0, 2, 0, 1, 1, 0]' : 0.161057}", "{'[6, 4, 0, 6, 6, 6, 0, 1, 0, 14, 0, 11, 0, 2, 0, 1, 1, 0]' : 0.161025}", "{'[6, 4, 0, 6, 6, 6, 0, 1, 0, 14, 0, 11, 0, 2, 0, 1, 1, 0]' : 0.161547}", "{'[6, 4, 0, 6, 6, 6, 0, 1, 0, 14, 0, 11, 0, 2, 0, 1, 1, 0]' : 0.161461}", "{'[6, 4, 0, 6, 6, 6, 0, 1, 0, 14, 0, 11, 0, 2, 0, 1, 1, 0]' : 0.161205}", "{'[6, 4, 0, 6, 6, 6, 0, 1, 0, 14, 0, 11, 0, 2, 0, 1, 1, 0]' : 0.161187}", "{'[6, 4, 0, 6, 6, 6, 0, 1, 0, 14, 0, 11, 0, 2, 0, 1, 1, 0]' : 0.16119}"]
returning from 'run': {'[6, 4, 0, 6, 6, 6, 0, 1, 0, 14, 0, 11, 0, 2, 0, 1, 1, 0]': ([0.160748, 0.164175, 0.165654, 0.165033, 0.161193, 0.161178, 0.161605, 0.161527, 0.161114, 0.161043, 0.161124, 0.161338, 0.161768, 0.161399, 0.161317, 0.161029, 0.161172, 0.161356, 0.161062, 0.161902, 0.161089, 0.161091, 0.161307, 0.161057, 0.161025, 0.161547, 0.161461, 0.161205, 0.161187, 0.16119], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 4, 0, 6, 6, 6, 0, 1, 0, 14, 0, 11, 0, 2, 0, 1, 1, 0]': ([0.160748, 0.164175, 0.165654, 0.165033, 0.161193, 0.161178, 0.161605, 0.161527, 0.161114, 0.161043, 0.161124, 0.161338, 0.161768, 0.161399, 0.161317, 0.161029, 0.161172, 0.161356, 0.161062, 0.161902, 0.161089, 0.161091, 0.161307, 0.161057, 0.161025, 0.161547, 0.161461, 0.161205, 0.161187, 0.16119], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = kkk
Code stats:
        Number of loops: 	44
        Max loop nest depth: 	5
        Additions: 		1297
        Multiplications: 	424
        Divisions: 		0
        Logical: 		0
        Reads: 			2651
        Writes: 		352
        Comparisons:		44
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest18.exe __orio_perftest18.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest18.exe  
Program Test Output: 
{'[6, 0, 3, 5, 5, 1, 1, 0, 3, 19, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.208604}
{'[6, 0, 3, 5, 5, 1, 1, 0, 3, 19, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.208794}
{'[6, 0, 3, 5, 5, 1, 1, 0, 3, 19, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.209071}
{'[6, 0, 3, 5, 5, 1, 1, 0, 3, 19, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.208613}
{'[6, 0, 3, 5, 5, 1, 1, 0, 3, 19, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.209101}
{'[6, 0, 3, 5, 5, 1, 1, 0, 3, 19, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.209233}
{'[6, 0, 3, 5, 5, 1, 1, 0, 3, 19, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.208974}
{'[6, 0, 3, 5, 5, 1, 1, 0, 3, 19, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.208259}
{'[6, 0, 3, 5, 5, 1, 1, 0, 3, 19, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.208965}
{'[6, 0, 3, 5, 5, 1, 1, 0, 3, 19, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.209023}
{'[6, 0, 3, 5, 5, 1, 1, 0, 3, 19, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.209016}
{'[6, 0, 3, 5, 5, 1, 1, 0, 3, 19, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.209183}
{'[6, 0, 3, 5, 5, 1, 1, 0, 3, 19, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.208787}
{'[6, 0, 3, 5, 5, 1, 1, 0, 3, 19, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.208648}
{'[6, 0, 3, 5, 5, 1, 1, 0, 3, 19, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.208204}
{'[6, 0, 3, 5, 5, 1, 1, 0, 3, 19, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.209035}
{'[6, 0, 3, 5, 5, 1, 1, 0, 3, 19, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.208867}
{'[6, 0, 3, 5, 5, 1, 1, 0, 3, 19, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.209207}
{'[6, 0, 3, 5, 5, 1, 1, 0, 3, 19, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.20877}
{'[6, 0, 3, 5, 5, 1, 1, 0, 3, 19, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.20866}
{'[6, 0, 3, 5, 5, 1, 1, 0, 3, 19, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.210897}
{'[6, 0, 3, 5, 5, 1, 1, 0, 3, 19, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.208828}
{'[6, 0, 3, 5, 5, 1, 1, 0, 3, 19, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.208754}
{'[6, 0, 3, 5, 5, 1, 1, 0, 3, 19, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.208831}
{'[6, 0, 3, 5, 5, 1, 1, 0, 3, 19, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.209344}
{'[6, 0, 3, 5, 5, 1, 1, 0, 3, 19, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.208966}
{'[6, 0, 3, 5, 5, 1, 1, 0, 3, 19, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.209366}
{'[6, 0, 3, 5, 5, 1, 1, 0, 3, 19, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.208579}
{'[6, 0, 3, 5, 5, 1, 1, 0, 3, 19, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.20832}
{'[6, 0, 3, 5, 5, 1, 1, 0, 3, 19, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.208793}

out:
 ["{'[6, 0, 3, 5, 5, 1, 1, 0, 3, 19, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.208604}", "{'[6, 0, 3, 5, 5, 1, 1, 0, 3, 19, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.208794}", "{'[6, 0, 3, 5, 5, 1, 1, 0, 3, 19, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.209071}", "{'[6, 0, 3, 5, 5, 1, 1, 0, 3, 19, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.208613}", "{'[6, 0, 3, 5, 5, 1, 1, 0, 3, 19, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.209101}", "{'[6, 0, 3, 5, 5, 1, 1, 0, 3, 19, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.209233}", "{'[6, 0, 3, 5, 5, 1, 1, 0, 3, 19, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.208974}", "{'[6, 0, 3, 5, 5, 1, 1, 0, 3, 19, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.208259}", "{'[6, 0, 3, 5, 5, 1, 1, 0, 3, 19, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.208965}", "{'[6, 0, 3, 5, 5, 1, 1, 0, 3, 19, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.209023}", "{'[6, 0, 3, 5, 5, 1, 1, 0, 3, 19, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.209016}", "{'[6, 0, 3, 5, 5, 1, 1, 0, 3, 19, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.209183}", "{'[6, 0, 3, 5, 5, 1, 1, 0, 3, 19, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.208787}", "{'[6, 0, 3, 5, 5, 1, 1, 0, 3, 19, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.208648}", "{'[6, 0, 3, 5, 5, 1, 1, 0, 3, 19, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.208204}", "{'[6, 0, 3, 5, 5, 1, 1, 0, 3, 19, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.209035}", "{'[6, 0, 3, 5, 5, 1, 1, 0, 3, 19, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.208867}", "{'[6, 0, 3, 5, 5, 1, 1, 0, 3, 19, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.209207}", "{'[6, 0, 3, 5, 5, 1, 1, 0, 3, 19, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.20877}", "{'[6, 0, 3, 5, 5, 1, 1, 0, 3, 19, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.20866}", "{'[6, 0, 3, 5, 5, 1, 1, 0, 3, 19, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.210897}", "{'[6, 0, 3, 5, 5, 1, 1, 0, 3, 19, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.208828}", "{'[6, 0, 3, 5, 5, 1, 1, 0, 3, 19, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.208754}", "{'[6, 0, 3, 5, 5, 1, 1, 0, 3, 19, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.208831}", "{'[6, 0, 3, 5, 5, 1, 1, 0, 3, 19, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.209344}", "{'[6, 0, 3, 5, 5, 1, 1, 0, 3, 19, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.208966}", "{'[6, 0, 3, 5, 5, 1, 1, 0, 3, 19, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.209366}", "{'[6, 0, 3, 5, 5, 1, 1, 0, 3, 19, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.208579}", "{'[6, 0, 3, 5, 5, 1, 1, 0, 3, 19, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.20832}", "{'[6, 0, 3, 5, 5, 1, 1, 0, 3, 19, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.208793}"]
returning from 'run': {'[6, 0, 3, 5, 5, 1, 1, 0, 3, 19, 0, 1, 2, 0, 0, 0, 1, 0]': ([0.208604, 0.208794, 0.209071, 0.208613, 0.209101, 0.209233, 0.208974, 0.208259, 0.208965, 0.209023, 0.209016, 0.209183, 0.208787, 0.208648, 0.208204, 0.209035, 0.208867, 0.209207, 0.20877, 0.20866, 0.210897, 0.208828, 0.208754, 0.208831, 0.209344, 0.208966, 0.209366, 0.208579, 0.20832, 0.208793], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 3, 5, 5, 1, 1, 0, 3, 19, 0, 1, 2, 0, 0, 0, 1, 0]': ([0.208604, 0.208794, 0.209071, 0.208613, 0.209101, 0.209233, 0.208974, 0.208259, 0.208965, 0.209023, 0.209016, 0.209183, 0.208787, 0.208648, 0.208204, 0.209035, 0.208867, 0.209207, 0.20877, 0.20866, 0.210897, 0.208828, 0.208754, 0.208831, 0.209344, 0.208966, 0.209366, 0.208579, 0.20832, 0.208793], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		299
        Multiplications: 	108
        Divisions: 		0
        Logical: 		0
        Reads: 			638
        Writes: 		85
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest19.exe __orio_perftest19.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest19.exe  
Program Test Output: 
{'[2, 0, 2, 0, 1, 0, 0, 0, 4, 0, 6, 28, 0, 1, 1, 0, 0, 0]' : 0.222471}
{'[2, 0, 2, 0, 1, 0, 0, 0, 4, 0, 6, 28, 0, 1, 1, 0, 0, 0]' : 0.221956}
{'[2, 0, 2, 0, 1, 0, 0, 0, 4, 0, 6, 28, 0, 1, 1, 0, 0, 0]' : 0.219911}
{'[2, 0, 2, 0, 1, 0, 0, 0, 4, 0, 6, 28, 0, 1, 1, 0, 0, 0]' : 0.214294}
{'[2, 0, 2, 0, 1, 0, 0, 0, 4, 0, 6, 28, 0, 1, 1, 0, 0, 0]' : 0.21636}
{'[2, 0, 2, 0, 1, 0, 0, 0, 4, 0, 6, 28, 0, 1, 1, 0, 0, 0]' : 0.222307}
{'[2, 0, 2, 0, 1, 0, 0, 0, 4, 0, 6, 28, 0, 1, 1, 0, 0, 0]' : 0.22243}
{'[2, 0, 2, 0, 1, 0, 0, 0, 4, 0, 6, 28, 0, 1, 1, 0, 0, 0]' : 0.222027}
{'[2, 0, 2, 0, 1, 0, 0, 0, 4, 0, 6, 28, 0, 1, 1, 0, 0, 0]' : 0.222107}
{'[2, 0, 2, 0, 1, 0, 0, 0, 4, 0, 6, 28, 0, 1, 1, 0, 0, 0]' : 0.222515}
{'[2, 0, 2, 0, 1, 0, 0, 0, 4, 0, 6, 28, 0, 1, 1, 0, 0, 0]' : 0.222308}
{'[2, 0, 2, 0, 1, 0, 0, 0, 4, 0, 6, 28, 0, 1, 1, 0, 0, 0]' : 0.222168}
{'[2, 0, 2, 0, 1, 0, 0, 0, 4, 0, 6, 28, 0, 1, 1, 0, 0, 0]' : 0.222012}
{'[2, 0, 2, 0, 1, 0, 0, 0, 4, 0, 6, 28, 0, 1, 1, 0, 0, 0]' : 0.222113}
{'[2, 0, 2, 0, 1, 0, 0, 0, 4, 0, 6, 28, 0, 1, 1, 0, 0, 0]' : 0.221864}
{'[2, 0, 2, 0, 1, 0, 0, 0, 4, 0, 6, 28, 0, 1, 1, 0, 0, 0]' : 0.22217}
{'[2, 0, 2, 0, 1, 0, 0, 0, 4, 0, 6, 28, 0, 1, 1, 0, 0, 0]' : 0.222135}
{'[2, 0, 2, 0, 1, 0, 0, 0, 4, 0, 6, 28, 0, 1, 1, 0, 0, 0]' : 0.2223}
{'[2, 0, 2, 0, 1, 0, 0, 0, 4, 0, 6, 28, 0, 1, 1, 0, 0, 0]' : 0.217471}
{'[2, 0, 2, 0, 1, 0, 0, 0, 4, 0, 6, 28, 0, 1, 1, 0, 0, 0]' : 0.214312}
{'[2, 0, 2, 0, 1, 0, 0, 0, 4, 0, 6, 28, 0, 1, 1, 0, 0, 0]' : 0.215591}
{'[2, 0, 2, 0, 1, 0, 0, 0, 4, 0, 6, 28, 0, 1, 1, 0, 0, 0]' : 0.214237}
{'[2, 0, 2, 0, 1, 0, 0, 0, 4, 0, 6, 28, 0, 1, 1, 0, 0, 0]' : 0.214771}
{'[2, 0, 2, 0, 1, 0, 0, 0, 4, 0, 6, 28, 0, 1, 1, 0, 0, 0]' : 0.222071}
{'[2, 0, 2, 0, 1, 0, 0, 0, 4, 0, 6, 28, 0, 1, 1, 0, 0, 0]' : 0.22201}
{'[2, 0, 2, 0, 1, 0, 0, 0, 4, 0, 6, 28, 0, 1, 1, 0, 0, 0]' : 0.222171}
{'[2, 0, 2, 0, 1, 0, 0, 0, 4, 0, 6, 28, 0, 1, 1, 0, 0, 0]' : 0.221927}
{'[2, 0, 2, 0, 1, 0, 0, 0, 4, 0, 6, 28, 0, 1, 1, 0, 0, 0]' : 0.222081}
{'[2, 0, 2, 0, 1, 0, 0, 0, 4, 0, 6, 28, 0, 1, 1, 0, 0, 0]' : 0.221744}
{'[2, 0, 2, 0, 1, 0, 0, 0, 4, 0, 6, 28, 0, 1, 1, 0, 0, 0]' : 0.221929}

out:
 ["{'[2, 0, 2, 0, 1, 0, 0, 0, 4, 0, 6, 28, 0, 1, 1, 0, 0, 0]' : 0.222471}", "{'[2, 0, 2, 0, 1, 0, 0, 0, 4, 0, 6, 28, 0, 1, 1, 0, 0, 0]' : 0.221956}", "{'[2, 0, 2, 0, 1, 0, 0, 0, 4, 0, 6, 28, 0, 1, 1, 0, 0, 0]' : 0.219911}", "{'[2, 0, 2, 0, 1, 0, 0, 0, 4, 0, 6, 28, 0, 1, 1, 0, 0, 0]' : 0.214294}", "{'[2, 0, 2, 0, 1, 0, 0, 0, 4, 0, 6, 28, 0, 1, 1, 0, 0, 0]' : 0.21636}", "{'[2, 0, 2, 0, 1, 0, 0, 0, 4, 0, 6, 28, 0, 1, 1, 0, 0, 0]' : 0.222307}", "{'[2, 0, 2, 0, 1, 0, 0, 0, 4, 0, 6, 28, 0, 1, 1, 0, 0, 0]' : 0.22243}", "{'[2, 0, 2, 0, 1, 0, 0, 0, 4, 0, 6, 28, 0, 1, 1, 0, 0, 0]' : 0.222027}", "{'[2, 0, 2, 0, 1, 0, 0, 0, 4, 0, 6, 28, 0, 1, 1, 0, 0, 0]' : 0.222107}", "{'[2, 0, 2, 0, 1, 0, 0, 0, 4, 0, 6, 28, 0, 1, 1, 0, 0, 0]' : 0.222515}", "{'[2, 0, 2, 0, 1, 0, 0, 0, 4, 0, 6, 28, 0, 1, 1, 0, 0, 0]' : 0.222308}", "{'[2, 0, 2, 0, 1, 0, 0, 0, 4, 0, 6, 28, 0, 1, 1, 0, 0, 0]' : 0.222168}", "{'[2, 0, 2, 0, 1, 0, 0, 0, 4, 0, 6, 28, 0, 1, 1, 0, 0, 0]' : 0.222012}", "{'[2, 0, 2, 0, 1, 0, 0, 0, 4, 0, 6, 28, 0, 1, 1, 0, 0, 0]' : 0.222113}", "{'[2, 0, 2, 0, 1, 0, 0, 0, 4, 0, 6, 28, 0, 1, 1, 0, 0, 0]' : 0.221864}", "{'[2, 0, 2, 0, 1, 0, 0, 0, 4, 0, 6, 28, 0, 1, 1, 0, 0, 0]' : 0.22217}", "{'[2, 0, 2, 0, 1, 0, 0, 0, 4, 0, 6, 28, 0, 1, 1, 0, 0, 0]' : 0.222135}", "{'[2, 0, 2, 0, 1, 0, 0, 0, 4, 0, 6, 28, 0, 1, 1, 0, 0, 0]' : 0.2223}", "{'[2, 0, 2, 0, 1, 0, 0, 0, 4, 0, 6, 28, 0, 1, 1, 0, 0, 0]' : 0.217471}", "{'[2, 0, 2, 0, 1, 0, 0, 0, 4, 0, 6, 28, 0, 1, 1, 0, 0, 0]' : 0.214312}", "{'[2, 0, 2, 0, 1, 0, 0, 0, 4, 0, 6, 28, 0, 1, 1, 0, 0, 0]' : 0.215591}", "{'[2, 0, 2, 0, 1, 0, 0, 0, 4, 0, 6, 28, 0, 1, 1, 0, 0, 0]' : 0.214237}", "{'[2, 0, 2, 0, 1, 0, 0, 0, 4, 0, 6, 28, 0, 1, 1, 0, 0, 0]' : 0.214771}", "{'[2, 0, 2, 0, 1, 0, 0, 0, 4, 0, 6, 28, 0, 1, 1, 0, 0, 0]' : 0.222071}", "{'[2, 0, 2, 0, 1, 0, 0, 0, 4, 0, 6, 28, 0, 1, 1, 0, 0, 0]' : 0.22201}", "{'[2, 0, 2, 0, 1, 0, 0, 0, 4, 0, 6, 28, 0, 1, 1, 0, 0, 0]' : 0.222171}", "{'[2, 0, 2, 0, 1, 0, 0, 0, 4, 0, 6, 28, 0, 1, 1, 0, 0, 0]' : 0.221927}", "{'[2, 0, 2, 0, 1, 0, 0, 0, 4, 0, 6, 28, 0, 1, 1, 0, 0, 0]' : 0.222081}", "{'[2, 0, 2, 0, 1, 0, 0, 0, 4, 0, 6, 28, 0, 1, 1, 0, 0, 0]' : 0.221744}", "{'[2, 0, 2, 0, 1, 0, 0, 0, 4, 0, 6, 28, 0, 1, 1, 0, 0, 0]' : 0.221929}"]
returning from 'run': {'[2, 0, 2, 0, 1, 0, 0, 0, 4, 0, 6, 28, 0, 1, 1, 0, 0, 0]': ([0.222471, 0.221956, 0.219911, 0.214294, 0.21636, 0.222307, 0.22243, 0.222027, 0.222107, 0.222515, 0.222308, 0.222168, 0.222012, 0.222113, 0.221864, 0.22217, 0.222135, 0.2223, 0.217471, 0.214312, 0.215591, 0.214237, 0.214771, 0.222071, 0.22201, 0.222171, 0.221927, 0.222081, 0.221744, 0.221929], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 2, 0, 1, 0, 0, 0, 4, 0, 6, 28, 0, 1, 1, 0, 0, 0]': ([0.222471, 0.221956, 0.219911, 0.214294, 0.21636, 0.222307, 0.22243, 0.222027, 0.222107, 0.222515, 0.222308, 0.222168, 0.222012, 0.222113, 0.221864, 0.22217, 0.222135, 0.2223, 0.217471, 0.214312, 0.215591, 0.214237, 0.214771, 0.222071, 0.22201, 0.222171, 0.221927, 0.222081, 0.221744, 0.221929], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	4
        Additions: 		2396
        Multiplications: 	1098
        Divisions: 		0
        Logical: 		0
        Reads: 			4634
        Writes: 		781
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest20.exe __orio_perftest20.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest20.exe  
Program Test Output: 
{'[6, 0, 0, 0, 6, 4, 1, 0, 16, 0, 28, 29, 1, 0, 0, 1, 0, 0]' : 0.105775}
{'[6, 0, 0, 0, 6, 4, 1, 0, 16, 0, 28, 29, 1, 0, 0, 1, 0, 0]' : 0.105837}
{'[6, 0, 0, 0, 6, 4, 1, 0, 16, 0, 28, 29, 1, 0, 0, 1, 0, 0]' : 0.105799}
{'[6, 0, 0, 0, 6, 4, 1, 0, 16, 0, 28, 29, 1, 0, 0, 1, 0, 0]' : 0.107533}
{'[6, 0, 0, 0, 6, 4, 1, 0, 16, 0, 28, 29, 1, 0, 0, 1, 0, 0]' : 0.108921}
{'[6, 0, 0, 0, 6, 4, 1, 0, 16, 0, 28, 29, 1, 0, 0, 1, 0, 0]' : 0.108891}
{'[6, 0, 0, 0, 6, 4, 1, 0, 16, 0, 28, 29, 1, 0, 0, 1, 0, 0]' : 0.108866}
{'[6, 0, 0, 0, 6, 4, 1, 0, 16, 0, 28, 29, 1, 0, 0, 1, 0, 0]' : 0.108723}
{'[6, 0, 0, 0, 6, 4, 1, 0, 16, 0, 28, 29, 1, 0, 0, 1, 0, 0]' : 0.108832}
{'[6, 0, 0, 0, 6, 4, 1, 0, 16, 0, 28, 29, 1, 0, 0, 1, 0, 0]' : 0.108778}
{'[6, 0, 0, 0, 6, 4, 1, 0, 16, 0, 28, 29, 1, 0, 0, 1, 0, 0]' : 0.108658}
{'[6, 0, 0, 0, 6, 4, 1, 0, 16, 0, 28, 29, 1, 0, 0, 1, 0, 0]' : 0.108766}
{'[6, 0, 0, 0, 6, 4, 1, 0, 16, 0, 28, 29, 1, 0, 0, 1, 0, 0]' : 0.109155}
{'[6, 0, 0, 0, 6, 4, 1, 0, 16, 0, 28, 29, 1, 0, 0, 1, 0, 0]' : 0.108877}
{'[6, 0, 0, 0, 6, 4, 1, 0, 16, 0, 28, 29, 1, 0, 0, 1, 0, 0]' : 0.109025}
{'[6, 0, 0, 0, 6, 4, 1, 0, 16, 0, 28, 29, 1, 0, 0, 1, 0, 0]' : 0.108745}
{'[6, 0, 0, 0, 6, 4, 1, 0, 16, 0, 28, 29, 1, 0, 0, 1, 0, 0]' : 0.108864}
{'[6, 0, 0, 0, 6, 4, 1, 0, 16, 0, 28, 29, 1, 0, 0, 1, 0, 0]' : 0.108891}
{'[6, 0, 0, 0, 6, 4, 1, 0, 16, 0, 28, 29, 1, 0, 0, 1, 0, 0]' : 0.108921}
{'[6, 0, 0, 0, 6, 4, 1, 0, 16, 0, 28, 29, 1, 0, 0, 1, 0, 0]' : 0.108812}
{'[6, 0, 0, 0, 6, 4, 1, 0, 16, 0, 28, 29, 1, 0, 0, 1, 0, 0]' : 0.109243}
{'[6, 0, 0, 0, 6, 4, 1, 0, 16, 0, 28, 29, 1, 0, 0, 1, 0, 0]' : 0.108821}
{'[6, 0, 0, 0, 6, 4, 1, 0, 16, 0, 28, 29, 1, 0, 0, 1, 0, 0]' : 0.108714}
{'[6, 0, 0, 0, 6, 4, 1, 0, 16, 0, 28, 29, 1, 0, 0, 1, 0, 0]' : 0.108818}
{'[6, 0, 0, 0, 6, 4, 1, 0, 16, 0, 28, 29, 1, 0, 0, 1, 0, 0]' : 0.109082}
{'[6, 0, 0, 0, 6, 4, 1, 0, 16, 0, 28, 29, 1, 0, 0, 1, 0, 0]' : 0.108832}
{'[6, 0, 0, 0, 6, 4, 1, 0, 16, 0, 28, 29, 1, 0, 0, 1, 0, 0]' : 0.108868}
{'[6, 0, 0, 0, 6, 4, 1, 0, 16, 0, 28, 29, 1, 0, 0, 1, 0, 0]' : 0.108729}
{'[6, 0, 0, 0, 6, 4, 1, 0, 16, 0, 28, 29, 1, 0, 0, 1, 0, 0]' : 0.108625}
{'[6, 0, 0, 0, 6, 4, 1, 0, 16, 0, 28, 29, 1, 0, 0, 1, 0, 0]' : 0.108777}

out:
 ["{'[6, 0, 0, 0, 6, 4, 1, 0, 16, 0, 28, 29, 1, 0, 0, 1, 0, 0]' : 0.105775}", "{'[6, 0, 0, 0, 6, 4, 1, 0, 16, 0, 28, 29, 1, 0, 0, 1, 0, 0]' : 0.105837}", "{'[6, 0, 0, 0, 6, 4, 1, 0, 16, 0, 28, 29, 1, 0, 0, 1, 0, 0]' : 0.105799}", "{'[6, 0, 0, 0, 6, 4, 1, 0, 16, 0, 28, 29, 1, 0, 0, 1, 0, 0]' : 0.107533}", "{'[6, 0, 0, 0, 6, 4, 1, 0, 16, 0, 28, 29, 1, 0, 0, 1, 0, 0]' : 0.108921}", "{'[6, 0, 0, 0, 6, 4, 1, 0, 16, 0, 28, 29, 1, 0, 0, 1, 0, 0]' : 0.108891}", "{'[6, 0, 0, 0, 6, 4, 1, 0, 16, 0, 28, 29, 1, 0, 0, 1, 0, 0]' : 0.108866}", "{'[6, 0, 0, 0, 6, 4, 1, 0, 16, 0, 28, 29, 1, 0, 0, 1, 0, 0]' : 0.108723}", "{'[6, 0, 0, 0, 6, 4, 1, 0, 16, 0, 28, 29, 1, 0, 0, 1, 0, 0]' : 0.108832}", "{'[6, 0, 0, 0, 6, 4, 1, 0, 16, 0, 28, 29, 1, 0, 0, 1, 0, 0]' : 0.108778}", "{'[6, 0, 0, 0, 6, 4, 1, 0, 16, 0, 28, 29, 1, 0, 0, 1, 0, 0]' : 0.108658}", "{'[6, 0, 0, 0, 6, 4, 1, 0, 16, 0, 28, 29, 1, 0, 0, 1, 0, 0]' : 0.108766}", "{'[6, 0, 0, 0, 6, 4, 1, 0, 16, 0, 28, 29, 1, 0, 0, 1, 0, 0]' : 0.109155}", "{'[6, 0, 0, 0, 6, 4, 1, 0, 16, 0, 28, 29, 1, 0, 0, 1, 0, 0]' : 0.108877}", "{'[6, 0, 0, 0, 6, 4, 1, 0, 16, 0, 28, 29, 1, 0, 0, 1, 0, 0]' : 0.109025}", "{'[6, 0, 0, 0, 6, 4, 1, 0, 16, 0, 28, 29, 1, 0, 0, 1, 0, 0]' : 0.108745}", "{'[6, 0, 0, 0, 6, 4, 1, 0, 16, 0, 28, 29, 1, 0, 0, 1, 0, 0]' : 0.108864}", "{'[6, 0, 0, 0, 6, 4, 1, 0, 16, 0, 28, 29, 1, 0, 0, 1, 0, 0]' : 0.108891}", "{'[6, 0, 0, 0, 6, 4, 1, 0, 16, 0, 28, 29, 1, 0, 0, 1, 0, 0]' : 0.108921}", "{'[6, 0, 0, 0, 6, 4, 1, 0, 16, 0, 28, 29, 1, 0, 0, 1, 0, 0]' : 0.108812}", "{'[6, 0, 0, 0, 6, 4, 1, 0, 16, 0, 28, 29, 1, 0, 0, 1, 0, 0]' : 0.109243}", "{'[6, 0, 0, 0, 6, 4, 1, 0, 16, 0, 28, 29, 1, 0, 0, 1, 0, 0]' : 0.108821}", "{'[6, 0, 0, 0, 6, 4, 1, 0, 16, 0, 28, 29, 1, 0, 0, 1, 0, 0]' : 0.108714}", "{'[6, 0, 0, 0, 6, 4, 1, 0, 16, 0, 28, 29, 1, 0, 0, 1, 0, 0]' : 0.108818}", "{'[6, 0, 0, 0, 6, 4, 1, 0, 16, 0, 28, 29, 1, 0, 0, 1, 0, 0]' : 0.109082}", "{'[6, 0, 0, 0, 6, 4, 1, 0, 16, 0, 28, 29, 1, 0, 0, 1, 0, 0]' : 0.108832}", "{'[6, 0, 0, 0, 6, 4, 1, 0, 16, 0, 28, 29, 1, 0, 0, 1, 0, 0]' : 0.108868}", "{'[6, 0, 0, 0, 6, 4, 1, 0, 16, 0, 28, 29, 1, 0, 0, 1, 0, 0]' : 0.108729}", "{'[6, 0, 0, 0, 6, 4, 1, 0, 16, 0, 28, 29, 1, 0, 0, 1, 0, 0]' : 0.108625}", "{'[6, 0, 0, 0, 6, 4, 1, 0, 16, 0, 28, 29, 1, 0, 0, 1, 0, 0]' : 0.108777}"]
returning from 'run': {'[6, 0, 0, 0, 6, 4, 1, 0, 16, 0, 28, 29, 1, 0, 0, 1, 0, 0]': ([0.105775, 0.105837, 0.105799, 0.107533, 0.108921, 0.108891, 0.108866, 0.108723, 0.108832, 0.108778, 0.108658, 0.108766, 0.109155, 0.108877, 0.109025, 0.108745, 0.108864, 0.108891, 0.108921, 0.108812, 0.109243, 0.108821, 0.108714, 0.108818, 0.109082, 0.108832, 0.108868, 0.108729, 0.108625, 0.108777], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 0, 0, 6, 4, 1, 0, 16, 0, 28, 29, 1, 0, 0, 1, 0, 0]': ([0.105775, 0.105837, 0.105799, 0.107533, 0.108921, 0.108891, 0.108866, 0.108723, 0.108832, 0.108778, 0.108658, 0.108766, 0.109155, 0.108877, 0.109025, 0.108745, 0.108864, 0.108891, 0.108921, 0.108812, 0.109243, 0.108821, 0.108714, 0.108818, 0.109082, 0.108832, 0.108868, 0.108729, 0.108625, 0.108777], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	91
        Max loop nest depth: 	5
        Additions: 		13483
        Multiplications: 	3906
        Divisions: 		0
        Logical: 		0
        Reads: 			20709
        Writes: 		2247
        Comparisons:		91
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest21.exe __orio_perftest21.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest21.exe  
Program Test Output: 
{'[0, 4, 5, 2, 6, 5, 0, 1, 2, 29, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.259024}
{'[0, 4, 5, 2, 6, 5, 0, 1, 2, 29, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.261314}
{'[0, 4, 5, 2, 6, 5, 0, 1, 2, 29, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.25707}
{'[0, 4, 5, 2, 6, 5, 0, 1, 2, 29, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.260112}
{'[0, 4, 5, 2, 6, 5, 0, 1, 2, 29, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.259197}
{'[0, 4, 5, 2, 6, 5, 0, 1, 2, 29, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.260656}
{'[0, 4, 5, 2, 6, 5, 0, 1, 2, 29, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.263862}
{'[0, 4, 5, 2, 6, 5, 0, 1, 2, 29, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.261576}
{'[0, 4, 5, 2, 6, 5, 0, 1, 2, 29, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.256622}
{'[0, 4, 5, 2, 6, 5, 0, 1, 2, 29, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.260368}
{'[0, 4, 5, 2, 6, 5, 0, 1, 2, 29, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.264071}
{'[0, 4, 5, 2, 6, 5, 0, 1, 2, 29, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.260791}
{'[0, 4, 5, 2, 6, 5, 0, 1, 2, 29, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.259774}
{'[0, 4, 5, 2, 6, 5, 0, 1, 2, 29, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.259249}
{'[0, 4, 5, 2, 6, 5, 0, 1, 2, 29, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.261523}
{'[0, 4, 5, 2, 6, 5, 0, 1, 2, 29, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.260274}
{'[0, 4, 5, 2, 6, 5, 0, 1, 2, 29, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.258739}
{'[0, 4, 5, 2, 6, 5, 0, 1, 2, 29, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.260442}
{'[0, 4, 5, 2, 6, 5, 0, 1, 2, 29, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.262052}
{'[0, 4, 5, 2, 6, 5, 0, 1, 2, 29, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.261791}
{'[0, 4, 5, 2, 6, 5, 0, 1, 2, 29, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.258352}
{'[0, 4, 5, 2, 6, 5, 0, 1, 2, 29, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.259739}
{'[0, 4, 5, 2, 6, 5, 0, 1, 2, 29, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.26084}
{'[0, 4, 5, 2, 6, 5, 0, 1, 2, 29, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.262714}
{'[0, 4, 5, 2, 6, 5, 0, 1, 2, 29, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.260769}
{'[0, 4, 5, 2, 6, 5, 0, 1, 2, 29, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.261925}
{'[0, 4, 5, 2, 6, 5, 0, 1, 2, 29, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.260858}
{'[0, 4, 5, 2, 6, 5, 0, 1, 2, 29, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.261597}
{'[0, 4, 5, 2, 6, 5, 0, 1, 2, 29, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.258528}
{'[0, 4, 5, 2, 6, 5, 0, 1, 2, 29, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.25808}

out:
 ["{'[0, 4, 5, 2, 6, 5, 0, 1, 2, 29, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.259024}", "{'[0, 4, 5, 2, 6, 5, 0, 1, 2, 29, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.261314}", "{'[0, 4, 5, 2, 6, 5, 0, 1, 2, 29, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.25707}", "{'[0, 4, 5, 2, 6, 5, 0, 1, 2, 29, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.260112}", "{'[0, 4, 5, 2, 6, 5, 0, 1, 2, 29, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.259197}", "{'[0, 4, 5, 2, 6, 5, 0, 1, 2, 29, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.260656}", "{'[0, 4, 5, 2, 6, 5, 0, 1, 2, 29, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.263862}", "{'[0, 4, 5, 2, 6, 5, 0, 1, 2, 29, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.261576}", "{'[0, 4, 5, 2, 6, 5, 0, 1, 2, 29, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.256622}", "{'[0, 4, 5, 2, 6, 5, 0, 1, 2, 29, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.260368}", "{'[0, 4, 5, 2, 6, 5, 0, 1, 2, 29, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.264071}", "{'[0, 4, 5, 2, 6, 5, 0, 1, 2, 29, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.260791}", "{'[0, 4, 5, 2, 6, 5, 0, 1, 2, 29, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.259774}", "{'[0, 4, 5, 2, 6, 5, 0, 1, 2, 29, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.259249}", "{'[0, 4, 5, 2, 6, 5, 0, 1, 2, 29, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.261523}", "{'[0, 4, 5, 2, 6, 5, 0, 1, 2, 29, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.260274}", "{'[0, 4, 5, 2, 6, 5, 0, 1, 2, 29, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.258739}", "{'[0, 4, 5, 2, 6, 5, 0, 1, 2, 29, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.260442}", "{'[0, 4, 5, 2, 6, 5, 0, 1, 2, 29, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.262052}", "{'[0, 4, 5, 2, 6, 5, 0, 1, 2, 29, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.261791}", "{'[0, 4, 5, 2, 6, 5, 0, 1, 2, 29, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.258352}", "{'[0, 4, 5, 2, 6, 5, 0, 1, 2, 29, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.259739}", "{'[0, 4, 5, 2, 6, 5, 0, 1, 2, 29, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.26084}", "{'[0, 4, 5, 2, 6, 5, 0, 1, 2, 29, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.262714}", "{'[0, 4, 5, 2, 6, 5, 0, 1, 2, 29, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.260769}", "{'[0, 4, 5, 2, 6, 5, 0, 1, 2, 29, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.261925}", "{'[0, 4, 5, 2, 6, 5, 0, 1, 2, 29, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.260858}", "{'[0, 4, 5, 2, 6, 5, 0, 1, 2, 29, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.261597}", "{'[0, 4, 5, 2, 6, 5, 0, 1, 2, 29, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.258528}", "{'[0, 4, 5, 2, 6, 5, 0, 1, 2, 29, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.25808}"]
returning from 'run': {'[0, 4, 5, 2, 6, 5, 0, 1, 2, 29, 28, 0, 2, 0, 0, 0, 0, 1]': ([0.259024, 0.261314, 0.25707, 0.260112, 0.259197, 0.260656, 0.263862, 0.261576, 0.256622, 0.260368, 0.264071, 0.260791, 0.259774, 0.259249, 0.261523, 0.260274, 0.258739, 0.260442, 0.262052, 0.261791, 0.258352, 0.259739, 0.26084, 0.262714, 0.260769, 0.261925, 0.260858, 0.261597, 0.258528, 0.25808], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 4, 5, 2, 6, 5, 0, 1, 2, 29, 28, 0, 2, 0, 0, 0, 0, 1]': ([0.259024, 0.261314, 0.25707, 0.260112, 0.259197, 0.260656, 0.263862, 0.261576, 0.256622, 0.260368, 0.264071, 0.260791, 0.259774, 0.259249, 0.261523, 0.260274, 0.258739, 0.260442, 0.262052, 0.261791, 0.258352, 0.259739, 0.26084, 0.262714, 0.260769, 0.261925, 0.260858, 0.261597, 0.258528, 0.25808], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	37
        Max loop nest depth: 	6
        Additions: 		657
        Multiplications: 	224
        Divisions: 		0
        Logical: 		0
        Reads: 			1401
        Writes: 		286
        Comparisons:		37
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest22.exe __orio_perftest22.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest22.exe  
Program Test Output: 
{'[2, 6, 6, 1, 6, 0, 1, 1, 13, 5, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.182087}
{'[2, 6, 6, 1, 6, 0, 1, 1, 13, 5, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.182044}
{'[2, 6, 6, 1, 6, 0, 1, 1, 13, 5, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.181981}
{'[2, 6, 6, 1, 6, 0, 1, 1, 13, 5, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.161375}
{'[2, 6, 6, 1, 6, 0, 1, 1, 13, 5, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.158608}
{'[2, 6, 6, 1, 6, 0, 1, 1, 13, 5, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.158287}
{'[2, 6, 6, 1, 6, 0, 1, 1, 13, 5, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.15835}
{'[2, 6, 6, 1, 6, 0, 1, 1, 13, 5, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.158665}
{'[2, 6, 6, 1, 6, 0, 1, 1, 13, 5, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.158494}
{'[2, 6, 6, 1, 6, 0, 1, 1, 13, 5, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.158574}
{'[2, 6, 6, 1, 6, 0, 1, 1, 13, 5, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.15882}
{'[2, 6, 6, 1, 6, 0, 1, 1, 13, 5, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.158486}
{'[2, 6, 6, 1, 6, 0, 1, 1, 13, 5, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.158351}
{'[2, 6, 6, 1, 6, 0, 1, 1, 13, 5, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.15842}
{'[2, 6, 6, 1, 6, 0, 1, 1, 13, 5, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.155512}
{'[2, 6, 6, 1, 6, 0, 1, 1, 13, 5, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.153809}
{'[2, 6, 6, 1, 6, 0, 1, 1, 13, 5, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.153982}
{'[2, 6, 6, 1, 6, 0, 1, 1, 13, 5, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.156941}
{'[2, 6, 6, 1, 6, 0, 1, 1, 13, 5, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.158475}
{'[2, 6, 6, 1, 6, 0, 1, 1, 13, 5, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.158402}
{'[2, 6, 6, 1, 6, 0, 1, 1, 13, 5, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.158704}
{'[2, 6, 6, 1, 6, 0, 1, 1, 13, 5, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.158353}
{'[2, 6, 6, 1, 6, 0, 1, 1, 13, 5, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.158589}
{'[2, 6, 6, 1, 6, 0, 1, 1, 13, 5, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.158909}
{'[2, 6, 6, 1, 6, 0, 1, 1, 13, 5, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.158478}
{'[2, 6, 6, 1, 6, 0, 1, 1, 13, 5, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.158491}
{'[2, 6, 6, 1, 6, 0, 1, 1, 13, 5, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.158733}
{'[2, 6, 6, 1, 6, 0, 1, 1, 13, 5, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.158742}
{'[2, 6, 6, 1, 6, 0, 1, 1, 13, 5, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.158612}
{'[2, 6, 6, 1, 6, 0, 1, 1, 13, 5, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.159304}

out:
 ["{'[2, 6, 6, 1, 6, 0, 1, 1, 13, 5, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.182087}", "{'[2, 6, 6, 1, 6, 0, 1, 1, 13, 5, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.182044}", "{'[2, 6, 6, 1, 6, 0, 1, 1, 13, 5, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.181981}", "{'[2, 6, 6, 1, 6, 0, 1, 1, 13, 5, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.161375}", "{'[2, 6, 6, 1, 6, 0, 1, 1, 13, 5, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.158608}", "{'[2, 6, 6, 1, 6, 0, 1, 1, 13, 5, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.158287}", "{'[2, 6, 6, 1, 6, 0, 1, 1, 13, 5, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.15835}", "{'[2, 6, 6, 1, 6, 0, 1, 1, 13, 5, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.158665}", "{'[2, 6, 6, 1, 6, 0, 1, 1, 13, 5, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.158494}", "{'[2, 6, 6, 1, 6, 0, 1, 1, 13, 5, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.158574}", "{'[2, 6, 6, 1, 6, 0, 1, 1, 13, 5, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.15882}", "{'[2, 6, 6, 1, 6, 0, 1, 1, 13, 5, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.158486}", "{'[2, 6, 6, 1, 6, 0, 1, 1, 13, 5, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.158351}", "{'[2, 6, 6, 1, 6, 0, 1, 1, 13, 5, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.15842}", "{'[2, 6, 6, 1, 6, 0, 1, 1, 13, 5, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.155512}", "{'[2, 6, 6, 1, 6, 0, 1, 1, 13, 5, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.153809}", "{'[2, 6, 6, 1, 6, 0, 1, 1, 13, 5, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.153982}", "{'[2, 6, 6, 1, 6, 0, 1, 1, 13, 5, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.156941}", "{'[2, 6, 6, 1, 6, 0, 1, 1, 13, 5, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.158475}", "{'[2, 6, 6, 1, 6, 0, 1, 1, 13, 5, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.158402}", "{'[2, 6, 6, 1, 6, 0, 1, 1, 13, 5, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.158704}", "{'[2, 6, 6, 1, 6, 0, 1, 1, 13, 5, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.158353}", "{'[2, 6, 6, 1, 6, 0, 1, 1, 13, 5, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.158589}", "{'[2, 6, 6, 1, 6, 0, 1, 1, 13, 5, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.158909}", "{'[2, 6, 6, 1, 6, 0, 1, 1, 13, 5, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.158478}", "{'[2, 6, 6, 1, 6, 0, 1, 1, 13, 5, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.158491}", "{'[2, 6, 6, 1, 6, 0, 1, 1, 13, 5, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.158733}", "{'[2, 6, 6, 1, 6, 0, 1, 1, 13, 5, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.158742}", "{'[2, 6, 6, 1, 6, 0, 1, 1, 13, 5, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.158612}", "{'[2, 6, 6, 1, 6, 0, 1, 1, 13, 5, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.159304}"]
returning from 'run': {'[2, 6, 6, 1, 6, 0, 1, 1, 13, 5, 15, 0, 0, 1, 1, 1, 1, 0]': ([0.182087, 0.182044, 0.181981, 0.161375, 0.158608, 0.158287, 0.15835, 0.158665, 0.158494, 0.158574, 0.15882, 0.158486, 0.158351, 0.15842, 0.155512, 0.153809, 0.153982, 0.156941, 0.158475, 0.158402, 0.158704, 0.158353, 0.158589, 0.158909, 0.158478, 0.158491, 0.158733, 0.158742, 0.158612, 0.159304], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 6, 6, 1, 6, 0, 1, 1, 13, 5, 15, 0, 0, 1, 1, 1, 1, 0]': ([0.182087, 0.182044, 0.181981, 0.161375, 0.158608, 0.158287, 0.15835, 0.158665, 0.158494, 0.158574, 0.15882, 0.158486, 0.158351, 0.15842, 0.155512, 0.153809, 0.153982, 0.156941, 0.158475, 0.158402, 0.158704, 0.158353, 0.158589, 0.158909, 0.158478, 0.158491, 0.158733, 0.158742, 0.158612, 0.159304], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		303
        Multiplications: 	94
        Divisions: 		0
        Logical: 		0
        Reads: 			664
        Writes: 		108
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest23.exe __orio_perftest23.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest23.exe  
Program Test Output: 
{'[5, 6, 1, 0, 0, 6, 0, 1, 28, 0, 1, 10, 0, 2, 0, 0, 0, 0]' : 0.308809}
{'[5, 6, 1, 0, 0, 6, 0, 1, 28, 0, 1, 10, 0, 2, 0, 0, 0, 0]' : 0.308813}
{'[5, 6, 1, 0, 0, 6, 0, 1, 28, 0, 1, 10, 0, 2, 0, 0, 0, 0]' : 0.313014}
{'[5, 6, 1, 0, 0, 6, 0, 1, 28, 0, 1, 10, 0, 2, 0, 0, 0, 0]' : 0.309015}
{'[5, 6, 1, 0, 0, 6, 0, 1, 28, 0, 1, 10, 0, 2, 0, 0, 0, 0]' : 0.30246}
{'[5, 6, 1, 0, 0, 6, 0, 1, 28, 0, 1, 10, 0, 2, 0, 0, 0, 0]' : 0.30261}
{'[5, 6, 1, 0, 0, 6, 0, 1, 28, 0, 1, 10, 0, 2, 0, 0, 0, 0]' : 0.312815}
{'[5, 6, 1, 0, 0, 6, 0, 1, 28, 0, 1, 10, 0, 2, 0, 0, 0, 0]' : 0.308835}
{'[5, 6, 1, 0, 0, 6, 0, 1, 28, 0, 1, 10, 0, 2, 0, 0, 0, 0]' : 0.309867}
{'[5, 6, 1, 0, 0, 6, 0, 1, 28, 0, 1, 10, 0, 2, 0, 0, 0, 0]' : 0.308598}
{'[5, 6, 1, 0, 0, 6, 0, 1, 28, 0, 1, 10, 0, 2, 0, 0, 0, 0]' : 0.309288}
{'[5, 6, 1, 0, 0, 6, 0, 1, 28, 0, 1, 10, 0, 2, 0, 0, 0, 0]' : 0.309042}
{'[5, 6, 1, 0, 0, 6, 0, 1, 28, 0, 1, 10, 0, 2, 0, 0, 0, 0]' : 0.310161}
{'[5, 6, 1, 0, 0, 6, 0, 1, 28, 0, 1, 10, 0, 2, 0, 0, 0, 0]' : 0.309128}
{'[5, 6, 1, 0, 0, 6, 0, 1, 28, 0, 1, 10, 0, 2, 0, 0, 0, 0]' : 0.308697}
{'[5, 6, 1, 0, 0, 6, 0, 1, 28, 0, 1, 10, 0, 2, 0, 0, 0, 0]' : 0.310447}
{'[5, 6, 1, 0, 0, 6, 0, 1, 28, 0, 1, 10, 0, 2, 0, 0, 0, 0]' : 0.308854}
{'[5, 6, 1, 0, 0, 6, 0, 1, 28, 0, 1, 10, 0, 2, 0, 0, 0, 0]' : 0.309431}
{'[5, 6, 1, 0, 0, 6, 0, 1, 28, 0, 1, 10, 0, 2, 0, 0, 0, 0]' : 0.308943}
{'[5, 6, 1, 0, 0, 6, 0, 1, 28, 0, 1, 10, 0, 2, 0, 0, 0, 0]' : 0.308755}
{'[5, 6, 1, 0, 0, 6, 0, 1, 28, 0, 1, 10, 0, 2, 0, 0, 0, 0]' : 0.306082}
{'[5, 6, 1, 0, 0, 6, 0, 1, 28, 0, 1, 10, 0, 2, 0, 0, 0, 0]' : 0.300272}
{'[5, 6, 1, 0, 0, 6, 0, 1, 28, 0, 1, 10, 0, 2, 0, 0, 0, 0]' : 0.308678}
{'[5, 6, 1, 0, 0, 6, 0, 1, 28, 0, 1, 10, 0, 2, 0, 0, 0, 0]' : 0.307904}
{'[5, 6, 1, 0, 0, 6, 0, 1, 28, 0, 1, 10, 0, 2, 0, 0, 0, 0]' : 0.302215}
{'[5, 6, 1, 0, 0, 6, 0, 1, 28, 0, 1, 10, 0, 2, 0, 0, 0, 0]' : 0.307407}
{'[5, 6, 1, 0, 0, 6, 0, 1, 28, 0, 1, 10, 0, 2, 0, 0, 0, 0]' : 0.304512}
{'[5, 6, 1, 0, 0, 6, 0, 1, 28, 0, 1, 10, 0, 2, 0, 0, 0, 0]' : 0.305032}
{'[5, 6, 1, 0, 0, 6, 0, 1, 28, 0, 1, 10, 0, 2, 0, 0, 0, 0]' : 0.304813}
{'[5, 6, 1, 0, 0, 6, 0, 1, 28, 0, 1, 10, 0, 2, 0, 0, 0, 0]' : 0.302142}

out:
 ["{'[5, 6, 1, 0, 0, 6, 0, 1, 28, 0, 1, 10, 0, 2, 0, 0, 0, 0]' : 0.308809}", "{'[5, 6, 1, 0, 0, 6, 0, 1, 28, 0, 1, 10, 0, 2, 0, 0, 0, 0]' : 0.308813}", "{'[5, 6, 1, 0, 0, 6, 0, 1, 28, 0, 1, 10, 0, 2, 0, 0, 0, 0]' : 0.313014}", "{'[5, 6, 1, 0, 0, 6, 0, 1, 28, 0, 1, 10, 0, 2, 0, 0, 0, 0]' : 0.309015}", "{'[5, 6, 1, 0, 0, 6, 0, 1, 28, 0, 1, 10, 0, 2, 0, 0, 0, 0]' : 0.30246}", "{'[5, 6, 1, 0, 0, 6, 0, 1, 28, 0, 1, 10, 0, 2, 0, 0, 0, 0]' : 0.30261}", "{'[5, 6, 1, 0, 0, 6, 0, 1, 28, 0, 1, 10, 0, 2, 0, 0, 0, 0]' : 0.312815}", "{'[5, 6, 1, 0, 0, 6, 0, 1, 28, 0, 1, 10, 0, 2, 0, 0, 0, 0]' : 0.308835}", "{'[5, 6, 1, 0, 0, 6, 0, 1, 28, 0, 1, 10, 0, 2, 0, 0, 0, 0]' : 0.309867}", "{'[5, 6, 1, 0, 0, 6, 0, 1, 28, 0, 1, 10, 0, 2, 0, 0, 0, 0]' : 0.308598}", "{'[5, 6, 1, 0, 0, 6, 0, 1, 28, 0, 1, 10, 0, 2, 0, 0, 0, 0]' : 0.309288}", "{'[5, 6, 1, 0, 0, 6, 0, 1, 28, 0, 1, 10, 0, 2, 0, 0, 0, 0]' : 0.309042}", "{'[5, 6, 1, 0, 0, 6, 0, 1, 28, 0, 1, 10, 0, 2, 0, 0, 0, 0]' : 0.310161}", "{'[5, 6, 1, 0, 0, 6, 0, 1, 28, 0, 1, 10, 0, 2, 0, 0, 0, 0]' : 0.309128}", "{'[5, 6, 1, 0, 0, 6, 0, 1, 28, 0, 1, 10, 0, 2, 0, 0, 0, 0]' : 0.308697}", "{'[5, 6, 1, 0, 0, 6, 0, 1, 28, 0, 1, 10, 0, 2, 0, 0, 0, 0]' : 0.310447}", "{'[5, 6, 1, 0, 0, 6, 0, 1, 28, 0, 1, 10, 0, 2, 0, 0, 0, 0]' : 0.308854}", "{'[5, 6, 1, 0, 0, 6, 0, 1, 28, 0, 1, 10, 0, 2, 0, 0, 0, 0]' : 0.309431}", "{'[5, 6, 1, 0, 0, 6, 0, 1, 28, 0, 1, 10, 0, 2, 0, 0, 0, 0]' : 0.308943}", "{'[5, 6, 1, 0, 0, 6, 0, 1, 28, 0, 1, 10, 0, 2, 0, 0, 0, 0]' : 0.308755}", "{'[5, 6, 1, 0, 0, 6, 0, 1, 28, 0, 1, 10, 0, 2, 0, 0, 0, 0]' : 0.306082}", "{'[5, 6, 1, 0, 0, 6, 0, 1, 28, 0, 1, 10, 0, 2, 0, 0, 0, 0]' : 0.300272}", "{'[5, 6, 1, 0, 0, 6, 0, 1, 28, 0, 1, 10, 0, 2, 0, 0, 0, 0]' : 0.308678}", "{'[5, 6, 1, 0, 0, 6, 0, 1, 28, 0, 1, 10, 0, 2, 0, 0, 0, 0]' : 0.307904}", "{'[5, 6, 1, 0, 0, 6, 0, 1, 28, 0, 1, 10, 0, 2, 0, 0, 0, 0]' : 0.302215}", "{'[5, 6, 1, 0, 0, 6, 0, 1, 28, 0, 1, 10, 0, 2, 0, 0, 0, 0]' : 0.307407}", "{'[5, 6, 1, 0, 0, 6, 0, 1, 28, 0, 1, 10, 0, 2, 0, 0, 0, 0]' : 0.304512}", "{'[5, 6, 1, 0, 0, 6, 0, 1, 28, 0, 1, 10, 0, 2, 0, 0, 0, 0]' : 0.305032}", "{'[5, 6, 1, 0, 0, 6, 0, 1, 28, 0, 1, 10, 0, 2, 0, 0, 0, 0]' : 0.304813}", "{'[5, 6, 1, 0, 0, 6, 0, 1, 28, 0, 1, 10, 0, 2, 0, 0, 0, 0]' : 0.302142}"]
returning from 'run': {'[5, 6, 1, 0, 0, 6, 0, 1, 28, 0, 1, 10, 0, 2, 0, 0, 0, 0]': ([0.308809, 0.308813, 0.313014, 0.309015, 0.30246, 0.30261, 0.312815, 0.308835, 0.309867, 0.308598, 0.309288, 0.309042, 0.310161, 0.309128, 0.308697, 0.310447, 0.308854, 0.309431, 0.308943, 0.308755, 0.306082, 0.300272, 0.308678, 0.307904, 0.302215, 0.307407, 0.304512, 0.305032, 0.304813, 0.302142], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 6, 1, 0, 0, 6, 0, 1, 28, 0, 1, 10, 0, 2, 0, 0, 0, 0]': ([0.308809, 0.308813, 0.313014, 0.309015, 0.30246, 0.30261, 0.312815, 0.308835, 0.309867, 0.308598, 0.309288, 0.309042, 0.310161, 0.309128, 0.308697, 0.310447, 0.308854, 0.309431, 0.308943, 0.308755, 0.306082, 0.300272, 0.308678, 0.307904, 0.302215, 0.307407, 0.304512, 0.305032, 0.304813, 0.302142], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = iii
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	5
        Additions: 		2701
        Multiplications: 	648
        Divisions: 		0
        Logical: 		0
        Reads: 			4004
        Writes: 		378
        Comparisons:		22
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest24.exe __orio_perftest24.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest24.exe  
Program Test Output: 
{'[5, 3, 5, 3, 4, 0, 1, 1, 0, 0, 0, 26, 1, 1, 0, 0, 1, 0]' : 0.109777}
{'[5, 3, 5, 3, 4, 0, 1, 1, 0, 0, 0, 26, 1, 1, 0, 0, 1, 0]' : 0.108639}
{'[5, 3, 5, 3, 4, 0, 1, 1, 0, 0, 0, 26, 1, 1, 0, 0, 1, 0]' : 0.106566}
{'[5, 3, 5, 3, 4, 0, 1, 1, 0, 0, 0, 26, 1, 1, 0, 0, 1, 0]' : 0.106571}
{'[5, 3, 5, 3, 4, 0, 1, 1, 0, 0, 0, 26, 1, 1, 0, 0, 1, 0]' : 0.110851}
{'[5, 3, 5, 3, 4, 0, 1, 1, 0, 0, 0, 26, 1, 1, 0, 0, 1, 0]' : 0.112433}
{'[5, 3, 5, 3, 4, 0, 1, 1, 0, 0, 0, 26, 1, 1, 0, 0, 1, 0]' : 0.110026}
{'[5, 3, 5, 3, 4, 0, 1, 1, 0, 0, 0, 26, 1, 1, 0, 0, 1, 0]' : 0.106862}
{'[5, 3, 5, 3, 4, 0, 1, 1, 0, 0, 0, 26, 1, 1, 0, 0, 1, 0]' : 0.107365}
{'[5, 3, 5, 3, 4, 0, 1, 1, 0, 0, 0, 26, 1, 1, 0, 0, 1, 0]' : 0.109873}
{'[5, 3, 5, 3, 4, 0, 1, 1, 0, 0, 0, 26, 1, 1, 0, 0, 1, 0]' : 0.110076}
{'[5, 3, 5, 3, 4, 0, 1, 1, 0, 0, 0, 26, 1, 1, 0, 0, 1, 0]' : 0.106846}
{'[5, 3, 5, 3, 4, 0, 1, 1, 0, 0, 0, 26, 1, 1, 0, 0, 1, 0]' : 0.106999}
{'[5, 3, 5, 3, 4, 0, 1, 1, 0, 0, 0, 26, 1, 1, 0, 0, 1, 0]' : 0.110439}
{'[5, 3, 5, 3, 4, 0, 1, 1, 0, 0, 0, 26, 1, 1, 0, 0, 1, 0]' : 0.112694}
{'[5, 3, 5, 3, 4, 0, 1, 1, 0, 0, 0, 26, 1, 1, 0, 0, 1, 0]' : 0.116387}
{'[5, 3, 5, 3, 4, 0, 1, 1, 0, 0, 0, 26, 1, 1, 0, 0, 1, 0]' : 0.115995}
{'[5, 3, 5, 3, 4, 0, 1, 1, 0, 0, 0, 26, 1, 1, 0, 0, 1, 0]' : 0.113824}
{'[5, 3, 5, 3, 4, 0, 1, 1, 0, 0, 0, 26, 1, 1, 0, 0, 1, 0]' : 0.112745}
{'[5, 3, 5, 3, 4, 0, 1, 1, 0, 0, 0, 26, 1, 1, 0, 0, 1, 0]' : 0.110043}
{'[5, 3, 5, 3, 4, 0, 1, 1, 0, 0, 0, 26, 1, 1, 0, 0, 1, 0]' : 0.109824}
{'[5, 3, 5, 3, 4, 0, 1, 1, 0, 0, 0, 26, 1, 1, 0, 0, 1, 0]' : 0.109888}
{'[5, 3, 5, 3, 4, 0, 1, 1, 0, 0, 0, 26, 1, 1, 0, 0, 1, 0]' : 0.111574}
{'[5, 3, 5, 3, 4, 0, 1, 1, 0, 0, 0, 26, 1, 1, 0, 0, 1, 0]' : 0.111804}
{'[5, 3, 5, 3, 4, 0, 1, 1, 0, 0, 0, 26, 1, 1, 0, 0, 1, 0]' : 0.109608}
{'[5, 3, 5, 3, 4, 0, 1, 1, 0, 0, 0, 26, 1, 1, 0, 0, 1, 0]' : 0.107252}
{'[5, 3, 5, 3, 4, 0, 1, 1, 0, 0, 0, 26, 1, 1, 0, 0, 1, 0]' : 0.106975}
{'[5, 3, 5, 3, 4, 0, 1, 1, 0, 0, 0, 26, 1, 1, 0, 0, 1, 0]' : 0.11037}
{'[5, 3, 5, 3, 4, 0, 1, 1, 0, 0, 0, 26, 1, 1, 0, 0, 1, 0]' : 0.107766}
{'[5, 3, 5, 3, 4, 0, 1, 1, 0, 0, 0, 26, 1, 1, 0, 0, 1, 0]' : 0.106923}

out:
 ["{'[5, 3, 5, 3, 4, 0, 1, 1, 0, 0, 0, 26, 1, 1, 0, 0, 1, 0]' : 0.109777}", "{'[5, 3, 5, 3, 4, 0, 1, 1, 0, 0, 0, 26, 1, 1, 0, 0, 1, 0]' : 0.108639}", "{'[5, 3, 5, 3, 4, 0, 1, 1, 0, 0, 0, 26, 1, 1, 0, 0, 1, 0]' : 0.106566}", "{'[5, 3, 5, 3, 4, 0, 1, 1, 0, 0, 0, 26, 1, 1, 0, 0, 1, 0]' : 0.106571}", "{'[5, 3, 5, 3, 4, 0, 1, 1, 0, 0, 0, 26, 1, 1, 0, 0, 1, 0]' : 0.110851}", "{'[5, 3, 5, 3, 4, 0, 1, 1, 0, 0, 0, 26, 1, 1, 0, 0, 1, 0]' : 0.112433}", "{'[5, 3, 5, 3, 4, 0, 1, 1, 0, 0, 0, 26, 1, 1, 0, 0, 1, 0]' : 0.110026}", "{'[5, 3, 5, 3, 4, 0, 1, 1, 0, 0, 0, 26, 1, 1, 0, 0, 1, 0]' : 0.106862}", "{'[5, 3, 5, 3, 4, 0, 1, 1, 0, 0, 0, 26, 1, 1, 0, 0, 1, 0]' : 0.107365}", "{'[5, 3, 5, 3, 4, 0, 1, 1, 0, 0, 0, 26, 1, 1, 0, 0, 1, 0]' : 0.109873}", "{'[5, 3, 5, 3, 4, 0, 1, 1, 0, 0, 0, 26, 1, 1, 0, 0, 1, 0]' : 0.110076}", "{'[5, 3, 5, 3, 4, 0, 1, 1, 0, 0, 0, 26, 1, 1, 0, 0, 1, 0]' : 0.106846}", "{'[5, 3, 5, 3, 4, 0, 1, 1, 0, 0, 0, 26, 1, 1, 0, 0, 1, 0]' : 0.106999}", "{'[5, 3, 5, 3, 4, 0, 1, 1, 0, 0, 0, 26, 1, 1, 0, 0, 1, 0]' : 0.110439}", "{'[5, 3, 5, 3, 4, 0, 1, 1, 0, 0, 0, 26, 1, 1, 0, 0, 1, 0]' : 0.112694}", "{'[5, 3, 5, 3, 4, 0, 1, 1, 0, 0, 0, 26, 1, 1, 0, 0, 1, 0]' : 0.116387}", "{'[5, 3, 5, 3, 4, 0, 1, 1, 0, 0, 0, 26, 1, 1, 0, 0, 1, 0]' : 0.115995}", "{'[5, 3, 5, 3, 4, 0, 1, 1, 0, 0, 0, 26, 1, 1, 0, 0, 1, 0]' : 0.113824}", "{'[5, 3, 5, 3, 4, 0, 1, 1, 0, 0, 0, 26, 1, 1, 0, 0, 1, 0]' : 0.112745}", "{'[5, 3, 5, 3, 4, 0, 1, 1, 0, 0, 0, 26, 1, 1, 0, 0, 1, 0]' : 0.110043}", "{'[5, 3, 5, 3, 4, 0, 1, 1, 0, 0, 0, 26, 1, 1, 0, 0, 1, 0]' : 0.109824}", "{'[5, 3, 5, 3, 4, 0, 1, 1, 0, 0, 0, 26, 1, 1, 0, 0, 1, 0]' : 0.109888}", "{'[5, 3, 5, 3, 4, 0, 1, 1, 0, 0, 0, 26, 1, 1, 0, 0, 1, 0]' : 0.111574}", "{'[5, 3, 5, 3, 4, 0, 1, 1, 0, 0, 0, 26, 1, 1, 0, 0, 1, 0]' : 0.111804}", "{'[5, 3, 5, 3, 4, 0, 1, 1, 0, 0, 0, 26, 1, 1, 0, 0, 1, 0]' : 0.109608}", "{'[5, 3, 5, 3, 4, 0, 1, 1, 0, 0, 0, 26, 1, 1, 0, 0, 1, 0]' : 0.107252}", "{'[5, 3, 5, 3, 4, 0, 1, 1, 0, 0, 0, 26, 1, 1, 0, 0, 1, 0]' : 0.106975}", "{'[5, 3, 5, 3, 4, 0, 1, 1, 0, 0, 0, 26, 1, 1, 0, 0, 1, 0]' : 0.11037}", "{'[5, 3, 5, 3, 4, 0, 1, 1, 0, 0, 0, 26, 1, 1, 0, 0, 1, 0]' : 0.107766}", "{'[5, 3, 5, 3, 4, 0, 1, 1, 0, 0, 0, 26, 1, 1, 0, 0, 1, 0]' : 0.106923}"]
returning from 'run': {'[5, 3, 5, 3, 4, 0, 1, 1, 0, 0, 0, 26, 1, 1, 0, 0, 1, 0]': ([0.109777, 0.108639, 0.106566, 0.106571, 0.110851, 0.112433, 0.110026, 0.106862, 0.107365, 0.109873, 0.110076, 0.106846, 0.106999, 0.110439, 0.112694, 0.116387, 0.115995, 0.113824, 0.112745, 0.110043, 0.109824, 0.109888, 0.111574, 0.111804, 0.109608, 0.107252, 0.106975, 0.11037, 0.107766, 0.106923], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 3, 5, 3, 4, 0, 1, 1, 0, 0, 0, 26, 1, 1, 0, 0, 1, 0]': ([0.109777, 0.108639, 0.106566, 0.106571, 0.110851, 0.112433, 0.110026, 0.106862, 0.107365, 0.109873, 0.110076, 0.106846, 0.106999, 0.110439, 0.112694, 0.116387, 0.115995, 0.113824, 0.112745, 0.110043, 0.109824, 0.109888, 0.111574, 0.111804, 0.109608, 0.107252, 0.106975, 0.11037, 0.107766, 0.106923], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = iii
Code stats:
        Number of loops: 	23
        Max loop nest depth: 	5
        Additions: 		2025
        Multiplications: 	576
        Divisions: 		0
        Logical: 		0
        Reads: 			3249
        Writes: 		362
        Comparisons:		23
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest25.exe __orio_perftest25.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest25.exe  
Program Test Output: 
{'[5, 2, 6, 3, 6, 6, 0, 1, 12, 0, 22, 26, 1, 0, 1, 0, 0, 1]' : 0.108836}
{'[5, 2, 6, 3, 6, 6, 0, 1, 12, 0, 22, 26, 1, 0, 1, 0, 0, 1]' : 0.111418}
{'[5, 2, 6, 3, 6, 6, 0, 1, 12, 0, 22, 26, 1, 0, 1, 0, 0, 1]' : 0.110616}
{'[5, 2, 6, 3, 6, 6, 0, 1, 12, 0, 22, 26, 1, 0, 1, 0, 0, 1]' : 0.10835}
{'[5, 2, 6, 3, 6, 6, 0, 1, 12, 0, 22, 26, 1, 0, 1, 0, 0, 1]' : 0.108286}
{'[5, 2, 6, 3, 6, 6, 0, 1, 12, 0, 22, 26, 1, 0, 1, 0, 0, 1]' : 0.110124}
{'[5, 2, 6, 3, 6, 6, 0, 1, 12, 0, 22, 26, 1, 0, 1, 0, 0, 1]' : 0.108503}
{'[5, 2, 6, 3, 6, 6, 0, 1, 12, 0, 22, 26, 1, 0, 1, 0, 0, 1]' : 0.108398}
{'[5, 2, 6, 3, 6, 6, 0, 1, 12, 0, 22, 26, 1, 0, 1, 0, 0, 1]' : 0.108395}
{'[5, 2, 6, 3, 6, 6, 0, 1, 12, 0, 22, 26, 1, 0, 1, 0, 0, 1]' : 0.109201}
{'[5, 2, 6, 3, 6, 6, 0, 1, 12, 0, 22, 26, 1, 0, 1, 0, 0, 1]' : 0.111324}
{'[5, 2, 6, 3, 6, 6, 0, 1, 12, 0, 22, 26, 1, 0, 1, 0, 0, 1]' : 0.111213}
{'[5, 2, 6, 3, 6, 6, 0, 1, 12, 0, 22, 26, 1, 0, 1, 0, 0, 1]' : 0.108243}
{'[5, 2, 6, 3, 6, 6, 0, 1, 12, 0, 22, 26, 1, 0, 1, 0, 0, 1]' : 0.108427}
{'[5, 2, 6, 3, 6, 6, 0, 1, 12, 0, 22, 26, 1, 0, 1, 0, 0, 1]' : 0.109539}
{'[5, 2, 6, 3, 6, 6, 0, 1, 12, 0, 22, 26, 1, 0, 1, 0, 0, 1]' : 0.111457}
{'[5, 2, 6, 3, 6, 6, 0, 1, 12, 0, 22, 26, 1, 0, 1, 0, 0, 1]' : 0.109838}
{'[5, 2, 6, 3, 6, 6, 0, 1, 12, 0, 22, 26, 1, 0, 1, 0, 0, 1]' : 0.108334}
{'[5, 2, 6, 3, 6, 6, 0, 1, 12, 0, 22, 26, 1, 0, 1, 0, 0, 1]' : 0.108385}
{'[5, 2, 6, 3, 6, 6, 0, 1, 12, 0, 22, 26, 1, 0, 1, 0, 0, 1]' : 0.111346}
{'[5, 2, 6, 3, 6, 6, 0, 1, 12, 0, 22, 26, 1, 0, 1, 0, 0, 1]' : 0.111359}
{'[5, 2, 6, 3, 6, 6, 0, 1, 12, 0, 22, 26, 1, 0, 1, 0, 0, 1]' : 0.111286}
{'[5, 2, 6, 3, 6, 6, 0, 1, 12, 0, 22, 26, 1, 0, 1, 0, 0, 1]' : 0.108332}
{'[5, 2, 6, 3, 6, 6, 0, 1, 12, 0, 22, 26, 1, 0, 1, 0, 0, 1]' : 0.109579}
{'[5, 2, 6, 3, 6, 6, 0, 1, 12, 0, 22, 26, 1, 0, 1, 0, 0, 1]' : 0.109404}
{'[5, 2, 6, 3, 6, 6, 0, 1, 12, 0, 22, 26, 1, 0, 1, 0, 0, 1]' : 0.10834}
{'[5, 2, 6, 3, 6, 6, 0, 1, 12, 0, 22, 26, 1, 0, 1, 0, 0, 1]' : 0.108288}
{'[5, 2, 6, 3, 6, 6, 0, 1, 12, 0, 22, 26, 1, 0, 1, 0, 0, 1]' : 0.108702}
{'[5, 2, 6, 3, 6, 6, 0, 1, 12, 0, 22, 26, 1, 0, 1, 0, 0, 1]' : 0.111596}
{'[5, 2, 6, 3, 6, 6, 0, 1, 12, 0, 22, 26, 1, 0, 1, 0, 0, 1]' : 0.11175}

out:
 ["{'[5, 2, 6, 3, 6, 6, 0, 1, 12, 0, 22, 26, 1, 0, 1, 0, 0, 1]' : 0.108836}", "{'[5, 2, 6, 3, 6, 6, 0, 1, 12, 0, 22, 26, 1, 0, 1, 0, 0, 1]' : 0.111418}", "{'[5, 2, 6, 3, 6, 6, 0, 1, 12, 0, 22, 26, 1, 0, 1, 0, 0, 1]' : 0.110616}", "{'[5, 2, 6, 3, 6, 6, 0, 1, 12, 0, 22, 26, 1, 0, 1, 0, 0, 1]' : 0.10835}", "{'[5, 2, 6, 3, 6, 6, 0, 1, 12, 0, 22, 26, 1, 0, 1, 0, 0, 1]' : 0.108286}", "{'[5, 2, 6, 3, 6, 6, 0, 1, 12, 0, 22, 26, 1, 0, 1, 0, 0, 1]' : 0.110124}", "{'[5, 2, 6, 3, 6, 6, 0, 1, 12, 0, 22, 26, 1, 0, 1, 0, 0, 1]' : 0.108503}", "{'[5, 2, 6, 3, 6, 6, 0, 1, 12, 0, 22, 26, 1, 0, 1, 0, 0, 1]' : 0.108398}", "{'[5, 2, 6, 3, 6, 6, 0, 1, 12, 0, 22, 26, 1, 0, 1, 0, 0, 1]' : 0.108395}", "{'[5, 2, 6, 3, 6, 6, 0, 1, 12, 0, 22, 26, 1, 0, 1, 0, 0, 1]' : 0.109201}", "{'[5, 2, 6, 3, 6, 6, 0, 1, 12, 0, 22, 26, 1, 0, 1, 0, 0, 1]' : 0.111324}", "{'[5, 2, 6, 3, 6, 6, 0, 1, 12, 0, 22, 26, 1, 0, 1, 0, 0, 1]' : 0.111213}", "{'[5, 2, 6, 3, 6, 6, 0, 1, 12, 0, 22, 26, 1, 0, 1, 0, 0, 1]' : 0.108243}", "{'[5, 2, 6, 3, 6, 6, 0, 1, 12, 0, 22, 26, 1, 0, 1, 0, 0, 1]' : 0.108427}", "{'[5, 2, 6, 3, 6, 6, 0, 1, 12, 0, 22, 26, 1, 0, 1, 0, 0, 1]' : 0.109539}", "{'[5, 2, 6, 3, 6, 6, 0, 1, 12, 0, 22, 26, 1, 0, 1, 0, 0, 1]' : 0.111457}", "{'[5, 2, 6, 3, 6, 6, 0, 1, 12, 0, 22, 26, 1, 0, 1, 0, 0, 1]' : 0.109838}", "{'[5, 2, 6, 3, 6, 6, 0, 1, 12, 0, 22, 26, 1, 0, 1, 0, 0, 1]' : 0.108334}", "{'[5, 2, 6, 3, 6, 6, 0, 1, 12, 0, 22, 26, 1, 0, 1, 0, 0, 1]' : 0.108385}", "{'[5, 2, 6, 3, 6, 6, 0, 1, 12, 0, 22, 26, 1, 0, 1, 0, 0, 1]' : 0.111346}", "{'[5, 2, 6, 3, 6, 6, 0, 1, 12, 0, 22, 26, 1, 0, 1, 0, 0, 1]' : 0.111359}", "{'[5, 2, 6, 3, 6, 6, 0, 1, 12, 0, 22, 26, 1, 0, 1, 0, 0, 1]' : 0.111286}", "{'[5, 2, 6, 3, 6, 6, 0, 1, 12, 0, 22, 26, 1, 0, 1, 0, 0, 1]' : 0.108332}", "{'[5, 2, 6, 3, 6, 6, 0, 1, 12, 0, 22, 26, 1, 0, 1, 0, 0, 1]' : 0.109579}", "{'[5, 2, 6, 3, 6, 6, 0, 1, 12, 0, 22, 26, 1, 0, 1, 0, 0, 1]' : 0.109404}", "{'[5, 2, 6, 3, 6, 6, 0, 1, 12, 0, 22, 26, 1, 0, 1, 0, 0, 1]' : 0.10834}", "{'[5, 2, 6, 3, 6, 6, 0, 1, 12, 0, 22, 26, 1, 0, 1, 0, 0, 1]' : 0.108288}", "{'[5, 2, 6, 3, 6, 6, 0, 1, 12, 0, 22, 26, 1, 0, 1, 0, 0, 1]' : 0.108702}", "{'[5, 2, 6, 3, 6, 6, 0, 1, 12, 0, 22, 26, 1, 0, 1, 0, 0, 1]' : 0.111596}", "{'[5, 2, 6, 3, 6, 6, 0, 1, 12, 0, 22, 26, 1, 0, 1, 0, 0, 1]' : 0.11175}"]
returning from 'run': {'[5, 2, 6, 3, 6, 6, 0, 1, 12, 0, 22, 26, 1, 0, 1, 0, 0, 1]': ([0.108836, 0.111418, 0.110616, 0.10835, 0.108286, 0.110124, 0.108503, 0.108398, 0.108395, 0.109201, 0.111324, 0.111213, 0.108243, 0.108427, 0.109539, 0.111457, 0.109838, 0.108334, 0.108385, 0.111346, 0.111359, 0.111286, 0.108332, 0.109579, 0.109404, 0.10834, 0.108288, 0.108702, 0.111596, 0.11175], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 2, 6, 3, 6, 6, 0, 1, 12, 0, 22, 26, 1, 0, 1, 0, 0, 1]': ([0.108836, 0.111418, 0.110616, 0.10835, 0.108286, 0.110124, 0.108503, 0.108398, 0.108395, 0.109201, 0.111324, 0.111213, 0.108243, 0.108427, 0.109539, 0.111457, 0.109838, 0.108334, 0.108385, 0.111346, 0.111359, 0.111286, 0.108332, 0.109579, 0.109404, 0.10834, 0.108288, 0.108702, 0.111596, 0.11175], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		124
        Multiplications: 	18
        Divisions: 		0
        Logical: 		0
        Reads: 			297
        Writes: 		87
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest26.exe __orio_perftest26.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest26.exe  
Program Test Output: 
{'[1, 3, 1, 3, 2, 4, 1, 1, 24, 0, 0, 29, 0, 0, 1, 1, 0, 1]' : 0.324717}
{'[1, 3, 1, 3, 2, 4, 1, 1, 24, 0, 0, 29, 0, 0, 1, 1, 0, 1]' : 0.322156}
{'[1, 3, 1, 3, 2, 4, 1, 1, 24, 0, 0, 29, 0, 0, 1, 1, 0, 1]' : 0.27688}
{'[1, 3, 1, 3, 2, 4, 1, 1, 24, 0, 0, 29, 0, 0, 1, 1, 0, 1]' : 0.277256}
{'[1, 3, 1, 3, 2, 4, 1, 1, 24, 0, 0, 29, 0, 0, 1, 1, 0, 1]' : 0.271068}
{'[1, 3, 1, 3, 2, 4, 1, 1, 24, 0, 0, 29, 0, 0, 1, 1, 0, 1]' : 0.2869}
{'[1, 3, 1, 3, 2, 4, 1, 1, 24, 0, 0, 29, 0, 0, 1, 1, 0, 1]' : 0.287107}
{'[1, 3, 1, 3, 2, 4, 1, 1, 24, 0, 0, 29, 0, 0, 1, 1, 0, 1]' : 0.282724}
{'[1, 3, 1, 3, 2, 4, 1, 1, 24, 0, 0, 29, 0, 0, 1, 1, 0, 1]' : 0.280342}
{'[1, 3, 1, 3, 2, 4, 1, 1, 24, 0, 0, 29, 0, 0, 1, 1, 0, 1]' : 0.273272}
{'[1, 3, 1, 3, 2, 4, 1, 1, 24, 0, 0, 29, 0, 0, 1, 1, 0, 1]' : 0.272355}
{'[1, 3, 1, 3, 2, 4, 1, 1, 24, 0, 0, 29, 0, 0, 1, 1, 0, 1]' : 0.271547}
{'[1, 3, 1, 3, 2, 4, 1, 1, 24, 0, 0, 29, 0, 0, 1, 1, 0, 1]' : 0.277678}
{'[1, 3, 1, 3, 2, 4, 1, 1, 24, 0, 0, 29, 0, 0, 1, 1, 0, 1]' : 0.282363}
{'[1, 3, 1, 3, 2, 4, 1, 1, 24, 0, 0, 29, 0, 0, 1, 1, 0, 1]' : 0.280063}
{'[1, 3, 1, 3, 2, 4, 1, 1, 24, 0, 0, 29, 0, 0, 1, 1, 0, 1]' : 0.280983}
{'[1, 3, 1, 3, 2, 4, 1, 1, 24, 0, 0, 29, 0, 0, 1, 1, 0, 1]' : 0.28007}
{'[1, 3, 1, 3, 2, 4, 1, 1, 24, 0, 0, 29, 0, 0, 1, 1, 0, 1]' : 0.280142}
{'[1, 3, 1, 3, 2, 4, 1, 1, 24, 0, 0, 29, 0, 0, 1, 1, 0, 1]' : 0.280259}
{'[1, 3, 1, 3, 2, 4, 1, 1, 24, 0, 0, 29, 0, 0, 1, 1, 0, 1]' : 0.279335}
{'[1, 3, 1, 3, 2, 4, 1, 1, 24, 0, 0, 29, 0, 0, 1, 1, 0, 1]' : 0.280298}
{'[1, 3, 1, 3, 2, 4, 1, 1, 24, 0, 0, 29, 0, 0, 1, 1, 0, 1]' : 0.280255}
{'[1, 3, 1, 3, 2, 4, 1, 1, 24, 0, 0, 29, 0, 0, 1, 1, 0, 1]' : 0.279532}
{'[1, 3, 1, 3, 2, 4, 1, 1, 24, 0, 0, 29, 0, 0, 1, 1, 0, 1]' : 0.280145}
{'[1, 3, 1, 3, 2, 4, 1, 1, 24, 0, 0, 29, 0, 0, 1, 1, 0, 1]' : 0.281997}
{'[1, 3, 1, 3, 2, 4, 1, 1, 24, 0, 0, 29, 0, 0, 1, 1, 0, 1]' : 0.288264}
{'[1, 3, 1, 3, 2, 4, 1, 1, 24, 0, 0, 29, 0, 0, 1, 1, 0, 1]' : 0.280136}
{'[1, 3, 1, 3, 2, 4, 1, 1, 24, 0, 0, 29, 0, 0, 1, 1, 0, 1]' : 0.280061}
{'[1, 3, 1, 3, 2, 4, 1, 1, 24, 0, 0, 29, 0, 0, 1, 1, 0, 1]' : 0.284712}
{'[1, 3, 1, 3, 2, 4, 1, 1, 24, 0, 0, 29, 0, 0, 1, 1, 0, 1]' : 0.282324}

out:
 ["{'[1, 3, 1, 3, 2, 4, 1, 1, 24, 0, 0, 29, 0, 0, 1, 1, 0, 1]' : 0.324717}", "{'[1, 3, 1, 3, 2, 4, 1, 1, 24, 0, 0, 29, 0, 0, 1, 1, 0, 1]' : 0.322156}", "{'[1, 3, 1, 3, 2, 4, 1, 1, 24, 0, 0, 29, 0, 0, 1, 1, 0, 1]' : 0.27688}", "{'[1, 3, 1, 3, 2, 4, 1, 1, 24, 0, 0, 29, 0, 0, 1, 1, 0, 1]' : 0.277256}", "{'[1, 3, 1, 3, 2, 4, 1, 1, 24, 0, 0, 29, 0, 0, 1, 1, 0, 1]' : 0.271068}", "{'[1, 3, 1, 3, 2, 4, 1, 1, 24, 0, 0, 29, 0, 0, 1, 1, 0, 1]' : 0.2869}", "{'[1, 3, 1, 3, 2, 4, 1, 1, 24, 0, 0, 29, 0, 0, 1, 1, 0, 1]' : 0.287107}", "{'[1, 3, 1, 3, 2, 4, 1, 1, 24, 0, 0, 29, 0, 0, 1, 1, 0, 1]' : 0.282724}", "{'[1, 3, 1, 3, 2, 4, 1, 1, 24, 0, 0, 29, 0, 0, 1, 1, 0, 1]' : 0.280342}", "{'[1, 3, 1, 3, 2, 4, 1, 1, 24, 0, 0, 29, 0, 0, 1, 1, 0, 1]' : 0.273272}", "{'[1, 3, 1, 3, 2, 4, 1, 1, 24, 0, 0, 29, 0, 0, 1, 1, 0, 1]' : 0.272355}", "{'[1, 3, 1, 3, 2, 4, 1, 1, 24, 0, 0, 29, 0, 0, 1, 1, 0, 1]' : 0.271547}", "{'[1, 3, 1, 3, 2, 4, 1, 1, 24, 0, 0, 29, 0, 0, 1, 1, 0, 1]' : 0.277678}", "{'[1, 3, 1, 3, 2, 4, 1, 1, 24, 0, 0, 29, 0, 0, 1, 1, 0, 1]' : 0.282363}", "{'[1, 3, 1, 3, 2, 4, 1, 1, 24, 0, 0, 29, 0, 0, 1, 1, 0, 1]' : 0.280063}", "{'[1, 3, 1, 3, 2, 4, 1, 1, 24, 0, 0, 29, 0, 0, 1, 1, 0, 1]' : 0.280983}", "{'[1, 3, 1, 3, 2, 4, 1, 1, 24, 0, 0, 29, 0, 0, 1, 1, 0, 1]' : 0.28007}", "{'[1, 3, 1, 3, 2, 4, 1, 1, 24, 0, 0, 29, 0, 0, 1, 1, 0, 1]' : 0.280142}", "{'[1, 3, 1, 3, 2, 4, 1, 1, 24, 0, 0, 29, 0, 0, 1, 1, 0, 1]' : 0.280259}", "{'[1, 3, 1, 3, 2, 4, 1, 1, 24, 0, 0, 29, 0, 0, 1, 1, 0, 1]' : 0.279335}", "{'[1, 3, 1, 3, 2, 4, 1, 1, 24, 0, 0, 29, 0, 0, 1, 1, 0, 1]' : 0.280298}", "{'[1, 3, 1, 3, 2, 4, 1, 1, 24, 0, 0, 29, 0, 0, 1, 1, 0, 1]' : 0.280255}", "{'[1, 3, 1, 3, 2, 4, 1, 1, 24, 0, 0, 29, 0, 0, 1, 1, 0, 1]' : 0.279532}", "{'[1, 3, 1, 3, 2, 4, 1, 1, 24, 0, 0, 29, 0, 0, 1, 1, 0, 1]' : 0.280145}", "{'[1, 3, 1, 3, 2, 4, 1, 1, 24, 0, 0, 29, 0, 0, 1, 1, 0, 1]' : 0.281997}", "{'[1, 3, 1, 3, 2, 4, 1, 1, 24, 0, 0, 29, 0, 0, 1, 1, 0, 1]' : 0.288264}", "{'[1, 3, 1, 3, 2, 4, 1, 1, 24, 0, 0, 29, 0, 0, 1, 1, 0, 1]' : 0.280136}", "{'[1, 3, 1, 3, 2, 4, 1, 1, 24, 0, 0, 29, 0, 0, 1, 1, 0, 1]' : 0.280061}", "{'[1, 3, 1, 3, 2, 4, 1, 1, 24, 0, 0, 29, 0, 0, 1, 1, 0, 1]' : 0.284712}", "{'[1, 3, 1, 3, 2, 4, 1, 1, 24, 0, 0, 29, 0, 0, 1, 1, 0, 1]' : 0.282324}"]
returning from 'run': {'[1, 3, 1, 3, 2, 4, 1, 1, 24, 0, 0, 29, 0, 0, 1, 1, 0, 1]': ([0.324717, 0.322156, 0.27688, 0.277256, 0.271068, 0.2869, 0.287107, 0.282724, 0.280342, 0.273272, 0.272355, 0.271547, 0.277678, 0.282363, 0.280063, 0.280983, 0.28007, 0.280142, 0.280259, 0.279335, 0.280298, 0.280255, 0.279532, 0.280145, 0.281997, 0.288264, 0.280136, 0.280061, 0.284712, 0.282324], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 3, 1, 3, 2, 4, 1, 1, 24, 0, 0, 29, 0, 0, 1, 1, 0, 1]': ([0.324717, 0.322156, 0.27688, 0.277256, 0.271068, 0.2869, 0.287107, 0.282724, 0.280342, 0.273272, 0.272355, 0.271547, 0.277678, 0.282363, 0.280063, 0.280983, 0.28007, 0.280142, 0.280259, 0.279335, 0.280298, 0.280255, 0.279532, 0.280145, 0.281997, 0.288264, 0.280136, 0.280061, 0.284712, 0.282324], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	103
        Max loop nest depth: 	6
        Additions: 		6615
        Multiplications: 	2380
        Divisions: 		0
        Logical: 		0
        Reads: 			11191
        Writes: 		1628
        Comparisons:		103
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest27.exe __orio_perftest27.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest27.exe  
Program Test Output: 
{'[2, 6, 0, 6, 5, 4, 1, 0, 28, 24, 24, 0, 1, 0, 1, 1, 0, 0]' : 0.092274}
{'[2, 6, 0, 6, 5, 4, 1, 0, 28, 24, 24, 0, 1, 0, 1, 1, 0, 0]' : 0.092977}
{'[2, 6, 0, 6, 5, 4, 1, 0, 28, 24, 24, 0, 1, 0, 1, 1, 0, 0]' : 0.0910299}
{'[2, 6, 0, 6, 5, 4, 1, 0, 28, 24, 24, 0, 1, 0, 1, 1, 0, 0]' : 0.0907278}
{'[2, 6, 0, 6, 5, 4, 1, 0, 28, 24, 24, 0, 1, 0, 1, 1, 0, 0]' : 0.0908079}
{'[2, 6, 0, 6, 5, 4, 1, 0, 28, 24, 24, 0, 1, 0, 1, 1, 0, 0]' : 0.0914409}
{'[2, 6, 0, 6, 5, 4, 1, 0, 28, 24, 24, 0, 1, 0, 1, 1, 0, 0]' : 0.0907042}
{'[2, 6, 0, 6, 5, 4, 1, 0, 28, 24, 24, 0, 1, 0, 1, 1, 0, 0]' : 0.090796}
{'[2, 6, 0, 6, 5, 4, 1, 0, 28, 24, 24, 0, 1, 0, 1, 1, 0, 0]' : 0.090693}
{'[2, 6, 0, 6, 5, 4, 1, 0, 28, 24, 24, 0, 1, 0, 1, 1, 0, 0]' : 0.090786}
{'[2, 6, 0, 6, 5, 4, 1, 0, 28, 24, 24, 0, 1, 0, 1, 1, 0, 0]' : 0.0919969}
{'[2, 6, 0, 6, 5, 4, 1, 0, 28, 24, 24, 0, 1, 0, 1, 1, 0, 0]' : 0.0911489}
{'[2, 6, 0, 6, 5, 4, 1, 0, 28, 24, 24, 0, 1, 0, 1, 1, 0, 0]' : 0.0907042}
{'[2, 6, 0, 6, 5, 4, 1, 0, 28, 24, 24, 0, 1, 0, 1, 1, 0, 0]' : 0.0907891}
{'[2, 6, 0, 6, 5, 4, 1, 0, 28, 24, 24, 0, 1, 0, 1, 1, 0, 0]' : 0.090661}
{'[2, 6, 0, 6, 5, 4, 1, 0, 28, 24, 24, 0, 1, 0, 1, 1, 0, 0]' : 0.0909212}
{'[2, 6, 0, 6, 5, 4, 1, 0, 28, 24, 24, 0, 1, 0, 1, 1, 0, 0]' : 0.0915051}
{'[2, 6, 0, 6, 5, 4, 1, 0, 28, 24, 24, 0, 1, 0, 1, 1, 0, 0]' : 0.0909221}
{'[2, 6, 0, 6, 5, 4, 1, 0, 28, 24, 24, 0, 1, 0, 1, 1, 0, 0]' : 0.090694}
{'[2, 6, 0, 6, 5, 4, 1, 0, 28, 24, 24, 0, 1, 0, 1, 1, 0, 0]' : 0.0906959}
{'[2, 6, 0, 6, 5, 4, 1, 0, 28, 24, 24, 0, 1, 0, 1, 1, 0, 0]' : 0.0910761}
{'[2, 6, 0, 6, 5, 4, 1, 0, 28, 24, 24, 0, 1, 0, 1, 1, 0, 0]' : 0.0916941}
{'[2, 6, 0, 6, 5, 4, 1, 0, 28, 24, 24, 0, 1, 0, 1, 1, 0, 0]' : 0.0909989}
{'[2, 6, 0, 6, 5, 4, 1, 0, 28, 24, 24, 0, 1, 0, 1, 1, 0, 0]' : 0.0911961}
{'[2, 6, 0, 6, 5, 4, 1, 0, 28, 24, 24, 0, 1, 0, 1, 1, 0, 0]' : 0.090786}
{'[2, 6, 0, 6, 5, 4, 1, 0, 28, 24, 24, 0, 1, 0, 1, 1, 0, 0]' : 0.0906861}
{'[2, 6, 0, 6, 5, 4, 1, 0, 28, 24, 24, 0, 1, 0, 1, 1, 0, 0]' : 0.0908852}
{'[2, 6, 0, 6, 5, 4, 1, 0, 28, 24, 24, 0, 1, 0, 1, 1, 0, 0]' : 0.091428}
{'[2, 6, 0, 6, 5, 4, 1, 0, 28, 24, 24, 0, 1, 0, 1, 1, 0, 0]' : 0.0908809}
{'[2, 6, 0, 6, 5, 4, 1, 0, 28, 24, 24, 0, 1, 0, 1, 1, 0, 0]' : 0.0906339}

out:
 ["{'[2, 6, 0, 6, 5, 4, 1, 0, 28, 24, 24, 0, 1, 0, 1, 1, 0, 0]' : 0.092274}", "{'[2, 6, 0, 6, 5, 4, 1, 0, 28, 24, 24, 0, 1, 0, 1, 1, 0, 0]' : 0.092977}", "{'[2, 6, 0, 6, 5, 4, 1, 0, 28, 24, 24, 0, 1, 0, 1, 1, 0, 0]' : 0.0910299}", "{'[2, 6, 0, 6, 5, 4, 1, 0, 28, 24, 24, 0, 1, 0, 1, 1, 0, 0]' : 0.0907278}", "{'[2, 6, 0, 6, 5, 4, 1, 0, 28, 24, 24, 0, 1, 0, 1, 1, 0, 0]' : 0.0908079}", "{'[2, 6, 0, 6, 5, 4, 1, 0, 28, 24, 24, 0, 1, 0, 1, 1, 0, 0]' : 0.0914409}", "{'[2, 6, 0, 6, 5, 4, 1, 0, 28, 24, 24, 0, 1, 0, 1, 1, 0, 0]' : 0.0907042}", "{'[2, 6, 0, 6, 5, 4, 1, 0, 28, 24, 24, 0, 1, 0, 1, 1, 0, 0]' : 0.090796}", "{'[2, 6, 0, 6, 5, 4, 1, 0, 28, 24, 24, 0, 1, 0, 1, 1, 0, 0]' : 0.090693}", "{'[2, 6, 0, 6, 5, 4, 1, 0, 28, 24, 24, 0, 1, 0, 1, 1, 0, 0]' : 0.090786}", "{'[2, 6, 0, 6, 5, 4, 1, 0, 28, 24, 24, 0, 1, 0, 1, 1, 0, 0]' : 0.0919969}", "{'[2, 6, 0, 6, 5, 4, 1, 0, 28, 24, 24, 0, 1, 0, 1, 1, 0, 0]' : 0.0911489}", "{'[2, 6, 0, 6, 5, 4, 1, 0, 28, 24, 24, 0, 1, 0, 1, 1, 0, 0]' : 0.0907042}", "{'[2, 6, 0, 6, 5, 4, 1, 0, 28, 24, 24, 0, 1, 0, 1, 1, 0, 0]' : 0.0907891}", "{'[2, 6, 0, 6, 5, 4, 1, 0, 28, 24, 24, 0, 1, 0, 1, 1, 0, 0]' : 0.090661}", "{'[2, 6, 0, 6, 5, 4, 1, 0, 28, 24, 24, 0, 1, 0, 1, 1, 0, 0]' : 0.0909212}", "{'[2, 6, 0, 6, 5, 4, 1, 0, 28, 24, 24, 0, 1, 0, 1, 1, 0, 0]' : 0.0915051}", "{'[2, 6, 0, 6, 5, 4, 1, 0, 28, 24, 24, 0, 1, 0, 1, 1, 0, 0]' : 0.0909221}", "{'[2, 6, 0, 6, 5, 4, 1, 0, 28, 24, 24, 0, 1, 0, 1, 1, 0, 0]' : 0.090694}", "{'[2, 6, 0, 6, 5, 4, 1, 0, 28, 24, 24, 0, 1, 0, 1, 1, 0, 0]' : 0.0906959}", "{'[2, 6, 0, 6, 5, 4, 1, 0, 28, 24, 24, 0, 1, 0, 1, 1, 0, 0]' : 0.0910761}", "{'[2, 6, 0, 6, 5, 4, 1, 0, 28, 24, 24, 0, 1, 0, 1, 1, 0, 0]' : 0.0916941}", "{'[2, 6, 0, 6, 5, 4, 1, 0, 28, 24, 24, 0, 1, 0, 1, 1, 0, 0]' : 0.0909989}", "{'[2, 6, 0, 6, 5, 4, 1, 0, 28, 24, 24, 0, 1, 0, 1, 1, 0, 0]' : 0.0911961}", "{'[2, 6, 0, 6, 5, 4, 1, 0, 28, 24, 24, 0, 1, 0, 1, 1, 0, 0]' : 0.090786}", "{'[2, 6, 0, 6, 5, 4, 1, 0, 28, 24, 24, 0, 1, 0, 1, 1, 0, 0]' : 0.0906861}", "{'[2, 6, 0, 6, 5, 4, 1, 0, 28, 24, 24, 0, 1, 0, 1, 1, 0, 0]' : 0.0908852}", "{'[2, 6, 0, 6, 5, 4, 1, 0, 28, 24, 24, 0, 1, 0, 1, 1, 0, 0]' : 0.091428}", "{'[2, 6, 0, 6, 5, 4, 1, 0, 28, 24, 24, 0, 1, 0, 1, 1, 0, 0]' : 0.0908809}", "{'[2, 6, 0, 6, 5, 4, 1, 0, 28, 24, 24, 0, 1, 0, 1, 1, 0, 0]' : 0.0906339}"]
returning from 'run': {'[2, 6, 0, 6, 5, 4, 1, 0, 28, 24, 24, 0, 1, 0, 1, 1, 0, 0]': ([0.092274, 0.092977, 0.0910299, 0.0907278, 0.0908079, 0.0914409, 0.0907042, 0.090796, 0.090693, 0.090786, 0.0919969, 0.0911489, 0.0907042, 0.0907891, 0.090661, 0.0909212, 0.0915051, 0.0909221, 0.090694, 0.0906959, 0.0910761, 0.0916941, 0.0909989, 0.0911961, 0.090786, 0.0906861, 0.0908852, 0.091428, 0.0908809, 0.0906339], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 6, 0, 6, 5, 4, 1, 0, 28, 24, 24, 0, 1, 0, 1, 1, 0, 0]': ([0.092274, 0.092977, 0.0910299, 0.0907278, 0.0908079, 0.0914409, 0.0907042, 0.090796, 0.090693, 0.090786, 0.0919969, 0.0911489, 0.0907042, 0.0907891, 0.090661, 0.0909212, 0.0915051, 0.0909221, 0.090694, 0.0906959, 0.0910761, 0.0916941, 0.0909989, 0.0911961, 0.090786, 0.0906861, 0.0908852, 0.091428, 0.0908809, 0.0906339], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	5
        Additions: 		1491
        Multiplications: 	684
        Divisions: 		0
        Logical: 		0
        Reads: 			2890
        Writes: 		486
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest28.exe __orio_perftest28.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest28.exe  
Program Test Output: 
{'[5, 0, 6, 6, 2, 0, 0, 1, 13, 0, 28, 23, 1, 0, 1, 1, 1, 0]' : 0.108886}
{'[5, 0, 6, 6, 2, 0, 0, 1, 13, 0, 28, 23, 1, 0, 1, 1, 1, 0]' : 0.108797}
{'[5, 0, 6, 6, 2, 0, 0, 1, 13, 0, 28, 23, 1, 0, 1, 1, 1, 0]' : 0.108623}
{'[5, 0, 6, 6, 2, 0, 0, 1, 13, 0, 28, 23, 1, 0, 1, 1, 1, 0]' : 0.107661}
{'[5, 0, 6, 6, 2, 0, 0, 1, 13, 0, 28, 23, 1, 0, 1, 1, 1, 0]' : 0.106623}
{'[5, 0, 6, 6, 2, 0, 0, 1, 13, 0, 28, 23, 1, 0, 1, 1, 1, 0]' : 0.10605}
{'[5, 0, 6, 6, 2, 0, 0, 1, 13, 0, 28, 23, 1, 0, 1, 1, 1, 0]' : 0.106157}
{'[5, 0, 6, 6, 2, 0, 0, 1, 13, 0, 28, 23, 1, 0, 1, 1, 1, 0]' : 0.106003}
{'[5, 0, 6, 6, 2, 0, 0, 1, 13, 0, 28, 23, 1, 0, 1, 1, 1, 0]' : 0.103221}
{'[5, 0, 6, 6, 2, 0, 0, 1, 13, 0, 28, 23, 1, 0, 1, 1, 1, 0]' : 0.10672}
{'[5, 0, 6, 6, 2, 0, 0, 1, 13, 0, 28, 23, 1, 0, 1, 1, 1, 0]' : 0.107726}
{'[5, 0, 6, 6, 2, 0, 0, 1, 13, 0, 28, 23, 1, 0, 1, 1, 1, 0]' : 0.106186}
{'[5, 0, 6, 6, 2, 0, 0, 1, 13, 0, 28, 23, 1, 0, 1, 1, 1, 0]' : 0.106105}
{'[5, 0, 6, 6, 2, 0, 0, 1, 13, 0, 28, 23, 1, 0, 1, 1, 1, 0]' : 0.10623}
{'[5, 0, 6, 6, 2, 0, 0, 1, 13, 0, 28, 23, 1, 0, 1, 1, 1, 0]' : 0.109019}
{'[5, 0, 6, 6, 2, 0, 0, 1, 13, 0, 28, 23, 1, 0, 1, 1, 1, 0]' : 0.108666}
{'[5, 0, 6, 6, 2, 0, 0, 1, 13, 0, 28, 23, 1, 0, 1, 1, 1, 0]' : 0.108822}
{'[5, 0, 6, 6, 2, 0, 0, 1, 13, 0, 28, 23, 1, 0, 1, 1, 1, 0]' : 0.107377}
{'[5, 0, 6, 6, 2, 0, 0, 1, 13, 0, 28, 23, 1, 0, 1, 1, 1, 0]' : 0.107484}
{'[5, 0, 6, 6, 2, 0, 0, 1, 13, 0, 28, 23, 1, 0, 1, 1, 1, 0]' : 0.109007}
{'[5, 0, 6, 6, 2, 0, 0, 1, 13, 0, 28, 23, 1, 0, 1, 1, 1, 0]' : 0.108532}
{'[5, 0, 6, 6, 2, 0, 0, 1, 13, 0, 28, 23, 1, 0, 1, 1, 1, 0]' : 0.10637}
{'[5, 0, 6, 6, 2, 0, 0, 1, 13, 0, 28, 23, 1, 0, 1, 1, 1, 0]' : 0.106453}
{'[5, 0, 6, 6, 2, 0, 0, 1, 13, 0, 28, 23, 1, 0, 1, 1, 1, 0]' : 0.108319}
{'[5, 0, 6, 6, 2, 0, 0, 1, 13, 0, 28, 23, 1, 0, 1, 1, 1, 0]' : 0.10883}
{'[5, 0, 6, 6, 2, 0, 0, 1, 13, 0, 28, 23, 1, 0, 1, 1, 1, 0]' : 0.108695}
{'[5, 0, 6, 6, 2, 0, 0, 1, 13, 0, 28, 23, 1, 0, 1, 1, 1, 0]' : 0.108673}
{'[5, 0, 6, 6, 2, 0, 0, 1, 13, 0, 28, 23, 1, 0, 1, 1, 1, 0]' : 0.108762}
{'[5, 0, 6, 6, 2, 0, 0, 1, 13, 0, 28, 23, 1, 0, 1, 1, 1, 0]' : 0.108689}
{'[5, 0, 6, 6, 2, 0, 0, 1, 13, 0, 28, 23, 1, 0, 1, 1, 1, 0]' : 0.108658}

out:
 ["{'[5, 0, 6, 6, 2, 0, 0, 1, 13, 0, 28, 23, 1, 0, 1, 1, 1, 0]' : 0.108886}", "{'[5, 0, 6, 6, 2, 0, 0, 1, 13, 0, 28, 23, 1, 0, 1, 1, 1, 0]' : 0.108797}", "{'[5, 0, 6, 6, 2, 0, 0, 1, 13, 0, 28, 23, 1, 0, 1, 1, 1, 0]' : 0.108623}", "{'[5, 0, 6, 6, 2, 0, 0, 1, 13, 0, 28, 23, 1, 0, 1, 1, 1, 0]' : 0.107661}", "{'[5, 0, 6, 6, 2, 0, 0, 1, 13, 0, 28, 23, 1, 0, 1, 1, 1, 0]' : 0.106623}", "{'[5, 0, 6, 6, 2, 0, 0, 1, 13, 0, 28, 23, 1, 0, 1, 1, 1, 0]' : 0.10605}", "{'[5, 0, 6, 6, 2, 0, 0, 1, 13, 0, 28, 23, 1, 0, 1, 1, 1, 0]' : 0.106157}", "{'[5, 0, 6, 6, 2, 0, 0, 1, 13, 0, 28, 23, 1, 0, 1, 1, 1, 0]' : 0.106003}", "{'[5, 0, 6, 6, 2, 0, 0, 1, 13, 0, 28, 23, 1, 0, 1, 1, 1, 0]' : 0.103221}", "{'[5, 0, 6, 6, 2, 0, 0, 1, 13, 0, 28, 23, 1, 0, 1, 1, 1, 0]' : 0.10672}", "{'[5, 0, 6, 6, 2, 0, 0, 1, 13, 0, 28, 23, 1, 0, 1, 1, 1, 0]' : 0.107726}", "{'[5, 0, 6, 6, 2, 0, 0, 1, 13, 0, 28, 23, 1, 0, 1, 1, 1, 0]' : 0.106186}", "{'[5, 0, 6, 6, 2, 0, 0, 1, 13, 0, 28, 23, 1, 0, 1, 1, 1, 0]' : 0.106105}", "{'[5, 0, 6, 6, 2, 0, 0, 1, 13, 0, 28, 23, 1, 0, 1, 1, 1, 0]' : 0.10623}", "{'[5, 0, 6, 6, 2, 0, 0, 1, 13, 0, 28, 23, 1, 0, 1, 1, 1, 0]' : 0.109019}", "{'[5, 0, 6, 6, 2, 0, 0, 1, 13, 0, 28, 23, 1, 0, 1, 1, 1, 0]' : 0.108666}", "{'[5, 0, 6, 6, 2, 0, 0, 1, 13, 0, 28, 23, 1, 0, 1, 1, 1, 0]' : 0.108822}", "{'[5, 0, 6, 6, 2, 0, 0, 1, 13, 0, 28, 23, 1, 0, 1, 1, 1, 0]' : 0.107377}", "{'[5, 0, 6, 6, 2, 0, 0, 1, 13, 0, 28, 23, 1, 0, 1, 1, 1, 0]' : 0.107484}", "{'[5, 0, 6, 6, 2, 0, 0, 1, 13, 0, 28, 23, 1, 0, 1, 1, 1, 0]' : 0.109007}", "{'[5, 0, 6, 6, 2, 0, 0, 1, 13, 0, 28, 23, 1, 0, 1, 1, 1, 0]' : 0.108532}", "{'[5, 0, 6, 6, 2, 0, 0, 1, 13, 0, 28, 23, 1, 0, 1, 1, 1, 0]' : 0.10637}", "{'[5, 0, 6, 6, 2, 0, 0, 1, 13, 0, 28, 23, 1, 0, 1, 1, 1, 0]' : 0.106453}", "{'[5, 0, 6, 6, 2, 0, 0, 1, 13, 0, 28, 23, 1, 0, 1, 1, 1, 0]' : 0.108319}", "{'[5, 0, 6, 6, 2, 0, 0, 1, 13, 0, 28, 23, 1, 0, 1, 1, 1, 0]' : 0.10883}", "{'[5, 0, 6, 6, 2, 0, 0, 1, 13, 0, 28, 23, 1, 0, 1, 1, 1, 0]' : 0.108695}", "{'[5, 0, 6, 6, 2, 0, 0, 1, 13, 0, 28, 23, 1, 0, 1, 1, 1, 0]' : 0.108673}", "{'[5, 0, 6, 6, 2, 0, 0, 1, 13, 0, 28, 23, 1, 0, 1, 1, 1, 0]' : 0.108762}", "{'[5, 0, 6, 6, 2, 0, 0, 1, 13, 0, 28, 23, 1, 0, 1, 1, 1, 0]' : 0.108689}", "{'[5, 0, 6, 6, 2, 0, 0, 1, 13, 0, 28, 23, 1, 0, 1, 1, 1, 0]' : 0.108658}"]
returning from 'run': {'[5, 0, 6, 6, 2, 0, 0, 1, 13, 0, 28, 23, 1, 0, 1, 1, 1, 0]': ([0.108886, 0.108797, 0.108623, 0.107661, 0.106623, 0.10605, 0.106157, 0.106003, 0.103221, 0.10672, 0.107726, 0.106186, 0.106105, 0.10623, 0.109019, 0.108666, 0.108822, 0.107377, 0.107484, 0.109007, 0.108532, 0.10637, 0.106453, 0.108319, 0.10883, 0.108695, 0.108673, 0.108762, 0.108689, 0.108658], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 0, 6, 6, 2, 0, 0, 1, 13, 0, 28, 23, 1, 0, 1, 1, 1, 0]': ([0.108886, 0.108797, 0.108623, 0.107661, 0.106623, 0.10605, 0.106157, 0.106003, 0.103221, 0.10672, 0.107726, 0.106186, 0.106105, 0.10623, 0.109019, 0.108666, 0.108822, 0.107377, 0.107484, 0.109007, 0.108532, 0.10637, 0.106453, 0.108319, 0.10883, 0.108695, 0.108673, 0.108762, 0.108689, 0.108658], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	5
        Additions: 		1463
        Multiplications: 	700
        Divisions: 		0
        Logical: 		0
        Reads: 			3039
        Writes: 		568
        Comparisons:		22
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest29.exe __orio_perftest29.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest29.exe  
Program Test Output: 
{'[2, 6, 0, 5, 4, 5, 0, 0, 18, 25, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.106114}
{'[2, 6, 0, 5, 4, 5, 0, 0, 18, 25, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.106114}
{'[2, 6, 0, 5, 4, 5, 0, 0, 18, 25, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.10421}
{'[2, 6, 0, 5, 4, 5, 0, 0, 18, 25, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.094162}
{'[2, 6, 0, 5, 4, 5, 0, 0, 18, 25, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0934961}
{'[2, 6, 0, 5, 4, 5, 0, 0, 18, 25, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0935979}
{'[2, 6, 0, 5, 4, 5, 0, 0, 18, 25, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.094275}
{'[2, 6, 0, 5, 4, 5, 0, 0, 18, 25, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0935662}
{'[2, 6, 0, 5, 4, 5, 0, 0, 18, 25, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0935671}
{'[2, 6, 0, 5, 4, 5, 0, 0, 18, 25, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0936069}
{'[2, 6, 0, 5, 4, 5, 0, 0, 18, 25, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0935621}
{'[2, 6, 0, 5, 4, 5, 0, 0, 18, 25, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0936699}
{'[2, 6, 0, 5, 4, 5, 0, 0, 18, 25, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0935478}
{'[2, 6, 0, 5, 4, 5, 0, 0, 18, 25, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0938749}
{'[2, 6, 0, 5, 4, 5, 0, 0, 18, 25, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0935941}
{'[2, 6, 0, 5, 4, 5, 0, 0, 18, 25, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0935552}
{'[2, 6, 0, 5, 4, 5, 0, 0, 18, 25, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0936501}
{'[2, 6, 0, 5, 4, 5, 0, 0, 18, 25, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0935972}
{'[2, 6, 0, 5, 4, 5, 0, 0, 18, 25, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0935352}
{'[2, 6, 0, 5, 4, 5, 0, 0, 18, 25, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0936401}
{'[2, 6, 0, 5, 4, 5, 0, 0, 18, 25, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.093704}
{'[2, 6, 0, 5, 4, 5, 0, 0, 18, 25, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.093801}
{'[2, 6, 0, 5, 4, 5, 0, 0, 18, 25, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.094312}
{'[2, 6, 0, 5, 4, 5, 0, 0, 18, 25, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0938749}
{'[2, 6, 0, 5, 4, 5, 0, 0, 18, 25, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0937901}
{'[2, 6, 0, 5, 4, 5, 0, 0, 18, 25, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0936859}
{'[2, 6, 0, 5, 4, 5, 0, 0, 18, 25, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.093575}
{'[2, 6, 0, 5, 4, 5, 0, 0, 18, 25, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0936551}
{'[2, 6, 0, 5, 4, 5, 0, 0, 18, 25, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.093581}
{'[2, 6, 0, 5, 4, 5, 0, 0, 18, 25, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0938921}

out:
 ["{'[2, 6, 0, 5, 4, 5, 0, 0, 18, 25, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.106114}", "{'[2, 6, 0, 5, 4, 5, 0, 0, 18, 25, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.106114}", "{'[2, 6, 0, 5, 4, 5, 0, 0, 18, 25, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.10421}", "{'[2, 6, 0, 5, 4, 5, 0, 0, 18, 25, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.094162}", "{'[2, 6, 0, 5, 4, 5, 0, 0, 18, 25, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0934961}", "{'[2, 6, 0, 5, 4, 5, 0, 0, 18, 25, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0935979}", "{'[2, 6, 0, 5, 4, 5, 0, 0, 18, 25, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.094275}", "{'[2, 6, 0, 5, 4, 5, 0, 0, 18, 25, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0935662}", "{'[2, 6, 0, 5, 4, 5, 0, 0, 18, 25, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0935671}", "{'[2, 6, 0, 5, 4, 5, 0, 0, 18, 25, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0936069}", "{'[2, 6, 0, 5, 4, 5, 0, 0, 18, 25, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0935621}", "{'[2, 6, 0, 5, 4, 5, 0, 0, 18, 25, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0936699}", "{'[2, 6, 0, 5, 4, 5, 0, 0, 18, 25, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0935478}", "{'[2, 6, 0, 5, 4, 5, 0, 0, 18, 25, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0938749}", "{'[2, 6, 0, 5, 4, 5, 0, 0, 18, 25, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0935941}", "{'[2, 6, 0, 5, 4, 5, 0, 0, 18, 25, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0935552}", "{'[2, 6, 0, 5, 4, 5, 0, 0, 18, 25, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0936501}", "{'[2, 6, 0, 5, 4, 5, 0, 0, 18, 25, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0935972}", "{'[2, 6, 0, 5, 4, 5, 0, 0, 18, 25, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0935352}", "{'[2, 6, 0, 5, 4, 5, 0, 0, 18, 25, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0936401}", "{'[2, 6, 0, 5, 4, 5, 0, 0, 18, 25, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.093704}", "{'[2, 6, 0, 5, 4, 5, 0, 0, 18, 25, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.093801}", "{'[2, 6, 0, 5, 4, 5, 0, 0, 18, 25, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.094312}", "{'[2, 6, 0, 5, 4, 5, 0, 0, 18, 25, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0938749}", "{'[2, 6, 0, 5, 4, 5, 0, 0, 18, 25, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0937901}", "{'[2, 6, 0, 5, 4, 5, 0, 0, 18, 25, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0936859}", "{'[2, 6, 0, 5, 4, 5, 0, 0, 18, 25, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.093575}", "{'[2, 6, 0, 5, 4, 5, 0, 0, 18, 25, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0936551}", "{'[2, 6, 0, 5, 4, 5, 0, 0, 18, 25, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.093581}", "{'[2, 6, 0, 5, 4, 5, 0, 0, 18, 25, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0938921}"]
returning from 'run': {'[2, 6, 0, 5, 4, 5, 0, 0, 18, 25, 0, 0, 1, 0, 1, 1, 0, 0]': ([0.106114, 0.106114, 0.10421, 0.094162, 0.0934961, 0.0935979, 0.094275, 0.0935662, 0.0935671, 0.0936069, 0.0935621, 0.0936699, 0.0935478, 0.0938749, 0.0935941, 0.0935552, 0.0936501, 0.0935972, 0.0935352, 0.0936401, 0.093704, 0.093801, 0.094312, 0.0938749, 0.0937901, 0.0936859, 0.093575, 0.0936551, 0.093581, 0.0938921], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 6, 0, 5, 4, 5, 0, 0, 18, 25, 0, 0, 1, 0, 1, 1, 0, 0]': ([0.106114, 0.106114, 0.10421, 0.094162, 0.0934961, 0.0935979, 0.094275, 0.0935662, 0.0935671, 0.0936069, 0.0935621, 0.0936699, 0.0935478, 0.0938749, 0.0935941, 0.0935552, 0.0936501, 0.0935972, 0.0935352, 0.0936401, 0.093704, 0.093801, 0.094312, 0.0938749, 0.0937901, 0.0936859, 0.093575, 0.0936551, 0.093581, 0.0938921], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		255
        Multiplications: 	86
        Divisions: 		0
        Logical: 		0
        Reads: 			583
        Writes: 		91
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest30.exe __orio_perftest30.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest30.exe  
Program Test Output: 
{'[1, 1, 2, 0, 0, 1, 0, 1, 17, 0, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.333904}
{'[1, 1, 2, 0, 0, 1, 0, 1, 17, 0, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.298613}
{'[1, 1, 2, 0, 0, 1, 0, 1, 17, 0, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.281153}
{'[1, 1, 2, 0, 0, 1, 0, 1, 17, 0, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.279813}
{'[1, 1, 2, 0, 0, 1, 0, 1, 17, 0, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.280341}
{'[1, 1, 2, 0, 0, 1, 0, 1, 17, 0, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.28031}
{'[1, 1, 2, 0, 0, 1, 0, 1, 17, 0, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.280121}
{'[1, 1, 2, 0, 0, 1, 0, 1, 17, 0, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.284399}
{'[1, 1, 2, 0, 0, 1, 0, 1, 17, 0, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.290085}
{'[1, 1, 2, 0, 0, 1, 0, 1, 17, 0, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.290625}
{'[1, 1, 2, 0, 0, 1, 0, 1, 17, 0, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.290246}
{'[1, 1, 2, 0, 0, 1, 0, 1, 17, 0, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.290237}
{'[1, 1, 2, 0, 0, 1, 0, 1, 17, 0, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.290378}
{'[1, 1, 2, 0, 0, 1, 0, 1, 17, 0, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.290131}
{'[1, 1, 2, 0, 0, 1, 0, 1, 17, 0, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.291097}
{'[1, 1, 2, 0, 0, 1, 0, 1, 17, 0, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.289685}
{'[1, 1, 2, 0, 0, 1, 0, 1, 17, 0, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.290297}
{'[1, 1, 2, 0, 0, 1, 0, 1, 17, 0, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.290556}
{'[1, 1, 2, 0, 0, 1, 0, 1, 17, 0, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.293434}
{'[1, 1, 2, 0, 0, 1, 0, 1, 17, 0, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.28999}
{'[1, 1, 2, 0, 0, 1, 0, 1, 17, 0, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.289671}
{'[1, 1, 2, 0, 0, 1, 0, 1, 17, 0, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.294675}
{'[1, 1, 2, 0, 0, 1, 0, 1, 17, 0, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.293391}
{'[1, 1, 2, 0, 0, 1, 0, 1, 17, 0, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.28974}
{'[1, 1, 2, 0, 0, 1, 0, 1, 17, 0, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.289988}
{'[1, 1, 2, 0, 0, 1, 0, 1, 17, 0, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.290193}
{'[1, 1, 2, 0, 0, 1, 0, 1, 17, 0, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.289848}
{'[1, 1, 2, 0, 0, 1, 0, 1, 17, 0, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.289694}
{'[1, 1, 2, 0, 0, 1, 0, 1, 17, 0, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.290039}
{'[1, 1, 2, 0, 0, 1, 0, 1, 17, 0, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.290333}

out:
 ["{'[1, 1, 2, 0, 0, 1, 0, 1, 17, 0, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.333904}", "{'[1, 1, 2, 0, 0, 1, 0, 1, 17, 0, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.298613}", "{'[1, 1, 2, 0, 0, 1, 0, 1, 17, 0, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.281153}", "{'[1, 1, 2, 0, 0, 1, 0, 1, 17, 0, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.279813}", "{'[1, 1, 2, 0, 0, 1, 0, 1, 17, 0, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.280341}", "{'[1, 1, 2, 0, 0, 1, 0, 1, 17, 0, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.28031}", "{'[1, 1, 2, 0, 0, 1, 0, 1, 17, 0, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.280121}", "{'[1, 1, 2, 0, 0, 1, 0, 1, 17, 0, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.284399}", "{'[1, 1, 2, 0, 0, 1, 0, 1, 17, 0, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.290085}", "{'[1, 1, 2, 0, 0, 1, 0, 1, 17, 0, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.290625}", "{'[1, 1, 2, 0, 0, 1, 0, 1, 17, 0, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.290246}", "{'[1, 1, 2, 0, 0, 1, 0, 1, 17, 0, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.290237}", "{'[1, 1, 2, 0, 0, 1, 0, 1, 17, 0, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.290378}", "{'[1, 1, 2, 0, 0, 1, 0, 1, 17, 0, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.290131}", "{'[1, 1, 2, 0, 0, 1, 0, 1, 17, 0, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.291097}", "{'[1, 1, 2, 0, 0, 1, 0, 1, 17, 0, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.289685}", "{'[1, 1, 2, 0, 0, 1, 0, 1, 17, 0, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.290297}", "{'[1, 1, 2, 0, 0, 1, 0, 1, 17, 0, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.290556}", "{'[1, 1, 2, 0, 0, 1, 0, 1, 17, 0, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.293434}", "{'[1, 1, 2, 0, 0, 1, 0, 1, 17, 0, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.28999}", "{'[1, 1, 2, 0, 0, 1, 0, 1, 17, 0, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.289671}", "{'[1, 1, 2, 0, 0, 1, 0, 1, 17, 0, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.294675}", "{'[1, 1, 2, 0, 0, 1, 0, 1, 17, 0, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.293391}", "{'[1, 1, 2, 0, 0, 1, 0, 1, 17, 0, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.28974}", "{'[1, 1, 2, 0, 0, 1, 0, 1, 17, 0, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.289988}", "{'[1, 1, 2, 0, 0, 1, 0, 1, 17, 0, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.290193}", "{'[1, 1, 2, 0, 0, 1, 0, 1, 17, 0, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.289848}", "{'[1, 1, 2, 0, 0, 1, 0, 1, 17, 0, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.289694}", "{'[1, 1, 2, 0, 0, 1, 0, 1, 17, 0, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.290039}", "{'[1, 1, 2, 0, 0, 1, 0, 1, 17, 0, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.290333}"]
returning from 'run': {'[1, 1, 2, 0, 0, 1, 0, 1, 17, 0, 25, 0, 0, 1, 1, 0, 0, 0]': ([0.333904, 0.298613, 0.281153, 0.279813, 0.280341, 0.28031, 0.280121, 0.284399, 0.290085, 0.290625, 0.290246, 0.290237, 0.290378, 0.290131, 0.291097, 0.289685, 0.290297, 0.290556, 0.293434, 0.28999, 0.289671, 0.294675, 0.293391, 0.28974, 0.289988, 0.290193, 0.289848, 0.289694, 0.290039, 0.290333], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 1, 2, 0, 0, 1, 0, 1, 17, 0, 25, 0, 0, 1, 1, 0, 0, 0]': ([0.333904, 0.298613, 0.281153, 0.279813, 0.280341, 0.28031, 0.280121, 0.284399, 0.290085, 0.290625, 0.290246, 0.290237, 0.290378, 0.290131, 0.291097, 0.289685, 0.290297, 0.290556, 0.293434, 0.28999, 0.289671, 0.294675, 0.293391, 0.28974, 0.289988, 0.290193, 0.289848, 0.289694, 0.290039, 0.290333], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	4
        Additions: 		4667
        Multiplications: 	2244
        Divisions: 		0
        Logical: 		0
        Reads: 			8703
        Writes: 		1375
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest31.exe __orio_perftest31.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest31.exe  
Program Test Output: 
{'[0, 0, 3, 6, 6, 0, 0, 1, 25, 0, 10, 20, 2, 0, 0, 1, 0, 1]' : 0.229238}
{'[0, 0, 3, 6, 6, 0, 0, 1, 25, 0, 10, 20, 2, 0, 0, 1, 0, 1]' : 0.221421}
{'[0, 0, 3, 6, 6, 0, 0, 1, 25, 0, 10, 20, 2, 0, 0, 1, 0, 1]' : 0.204571}
{'[0, 0, 3, 6, 6, 0, 0, 1, 25, 0, 10, 20, 2, 0, 0, 1, 0, 1]' : 0.205314}
{'[0, 0, 3, 6, 6, 0, 0, 1, 25, 0, 10, 20, 2, 0, 0, 1, 0, 1]' : 0.203872}
{'[0, 0, 3, 6, 6, 0, 0, 1, 25, 0, 10, 20, 2, 0, 0, 1, 0, 1]' : 0.205514}
{'[0, 0, 3, 6, 6, 0, 0, 1, 25, 0, 10, 20, 2, 0, 0, 1, 0, 1]' : 0.202482}
{'[0, 0, 3, 6, 6, 0, 0, 1, 25, 0, 10, 20, 2, 0, 0, 1, 0, 1]' : 0.204442}
{'[0, 0, 3, 6, 6, 0, 0, 1, 25, 0, 10, 20, 2, 0, 0, 1, 0, 1]' : 0.20353}
{'[0, 0, 3, 6, 6, 0, 0, 1, 25, 0, 10, 20, 2, 0, 0, 1, 0, 1]' : 0.205472}
{'[0, 0, 3, 6, 6, 0, 0, 1, 25, 0, 10, 20, 2, 0, 0, 1, 0, 1]' : 0.202317}
{'[0, 0, 3, 6, 6, 0, 0, 1, 25, 0, 10, 20, 2, 0, 0, 1, 0, 1]' : 0.203734}
{'[0, 0, 3, 6, 6, 0, 0, 1, 25, 0, 10, 20, 2, 0, 0, 1, 0, 1]' : 0.205523}
{'[0, 0, 3, 6, 6, 0, 0, 1, 25, 0, 10, 20, 2, 0, 0, 1, 0, 1]' : 0.205722}
{'[0, 0, 3, 6, 6, 0, 0, 1, 25, 0, 10, 20, 2, 0, 0, 1, 0, 1]' : 0.203781}
{'[0, 0, 3, 6, 6, 0, 0, 1, 25, 0, 10, 20, 2, 0, 0, 1, 0, 1]' : 0.204085}
{'[0, 0, 3, 6, 6, 0, 0, 1, 25, 0, 10, 20, 2, 0, 0, 1, 0, 1]' : 0.203005}
{'[0, 0, 3, 6, 6, 0, 0, 1, 25, 0, 10, 20, 2, 0, 0, 1, 0, 1]' : 0.204897}
{'[0, 0, 3, 6, 6, 0, 0, 1, 25, 0, 10, 20, 2, 0, 0, 1, 0, 1]' : 0.207517}
{'[0, 0, 3, 6, 6, 0, 0, 1, 25, 0, 10, 20, 2, 0, 0, 1, 0, 1]' : 0.208071}
{'[0, 0, 3, 6, 6, 0, 0, 1, 25, 0, 10, 20, 2, 0, 0, 1, 0, 1]' : 0.203969}
{'[0, 0, 3, 6, 6, 0, 0, 1, 25, 0, 10, 20, 2, 0, 0, 1, 0, 1]' : 0.202277}
{'[0, 0, 3, 6, 6, 0, 0, 1, 25, 0, 10, 20, 2, 0, 0, 1, 0, 1]' : 0.200702}
{'[0, 0, 3, 6, 6, 0, 0, 1, 25, 0, 10, 20, 2, 0, 0, 1, 0, 1]' : 0.202657}
{'[0, 0, 3, 6, 6, 0, 0, 1, 25, 0, 10, 20, 2, 0, 0, 1, 0, 1]' : 0.202934}
{'[0, 0, 3, 6, 6, 0, 0, 1, 25, 0, 10, 20, 2, 0, 0, 1, 0, 1]' : 0.203631}
{'[0, 0, 3, 6, 6, 0, 0, 1, 25, 0, 10, 20, 2, 0, 0, 1, 0, 1]' : 0.202598}
{'[0, 0, 3, 6, 6, 0, 0, 1, 25, 0, 10, 20, 2, 0, 0, 1, 0, 1]' : 0.202919}
{'[0, 0, 3, 6, 6, 0, 0, 1, 25, 0, 10, 20, 2, 0, 0, 1, 0, 1]' : 0.203709}
{'[0, 0, 3, 6, 6, 0, 0, 1, 25, 0, 10, 20, 2, 0, 0, 1, 0, 1]' : 0.203799}

out:
 ["{'[0, 0, 3, 6, 6, 0, 0, 1, 25, 0, 10, 20, 2, 0, 0, 1, 0, 1]' : 0.229238}", "{'[0, 0, 3, 6, 6, 0, 0, 1, 25, 0, 10, 20, 2, 0, 0, 1, 0, 1]' : 0.221421}", "{'[0, 0, 3, 6, 6, 0, 0, 1, 25, 0, 10, 20, 2, 0, 0, 1, 0, 1]' : 0.204571}", "{'[0, 0, 3, 6, 6, 0, 0, 1, 25, 0, 10, 20, 2, 0, 0, 1, 0, 1]' : 0.205314}", "{'[0, 0, 3, 6, 6, 0, 0, 1, 25, 0, 10, 20, 2, 0, 0, 1, 0, 1]' : 0.203872}", "{'[0, 0, 3, 6, 6, 0, 0, 1, 25, 0, 10, 20, 2, 0, 0, 1, 0, 1]' : 0.205514}", "{'[0, 0, 3, 6, 6, 0, 0, 1, 25, 0, 10, 20, 2, 0, 0, 1, 0, 1]' : 0.202482}", "{'[0, 0, 3, 6, 6, 0, 0, 1, 25, 0, 10, 20, 2, 0, 0, 1, 0, 1]' : 0.204442}", "{'[0, 0, 3, 6, 6, 0, 0, 1, 25, 0, 10, 20, 2, 0, 0, 1, 0, 1]' : 0.20353}", "{'[0, 0, 3, 6, 6, 0, 0, 1, 25, 0, 10, 20, 2, 0, 0, 1, 0, 1]' : 0.205472}", "{'[0, 0, 3, 6, 6, 0, 0, 1, 25, 0, 10, 20, 2, 0, 0, 1, 0, 1]' : 0.202317}", "{'[0, 0, 3, 6, 6, 0, 0, 1, 25, 0, 10, 20, 2, 0, 0, 1, 0, 1]' : 0.203734}", "{'[0, 0, 3, 6, 6, 0, 0, 1, 25, 0, 10, 20, 2, 0, 0, 1, 0, 1]' : 0.205523}", "{'[0, 0, 3, 6, 6, 0, 0, 1, 25, 0, 10, 20, 2, 0, 0, 1, 0, 1]' : 0.205722}", "{'[0, 0, 3, 6, 6, 0, 0, 1, 25, 0, 10, 20, 2, 0, 0, 1, 0, 1]' : 0.203781}", "{'[0, 0, 3, 6, 6, 0, 0, 1, 25, 0, 10, 20, 2, 0, 0, 1, 0, 1]' : 0.204085}", "{'[0, 0, 3, 6, 6, 0, 0, 1, 25, 0, 10, 20, 2, 0, 0, 1, 0, 1]' : 0.203005}", "{'[0, 0, 3, 6, 6, 0, 0, 1, 25, 0, 10, 20, 2, 0, 0, 1, 0, 1]' : 0.204897}", "{'[0, 0, 3, 6, 6, 0, 0, 1, 25, 0, 10, 20, 2, 0, 0, 1, 0, 1]' : 0.207517}", "{'[0, 0, 3, 6, 6, 0, 0, 1, 25, 0, 10, 20, 2, 0, 0, 1, 0, 1]' : 0.208071}", "{'[0, 0, 3, 6, 6, 0, 0, 1, 25, 0, 10, 20, 2, 0, 0, 1, 0, 1]' : 0.203969}", "{'[0, 0, 3, 6, 6, 0, 0, 1, 25, 0, 10, 20, 2, 0, 0, 1, 0, 1]' : 0.202277}", "{'[0, 0, 3, 6, 6, 0, 0, 1, 25, 0, 10, 20, 2, 0, 0, 1, 0, 1]' : 0.200702}", "{'[0, 0, 3, 6, 6, 0, 0, 1, 25, 0, 10, 20, 2, 0, 0, 1, 0, 1]' : 0.202657}", "{'[0, 0, 3, 6, 6, 0, 0, 1, 25, 0, 10, 20, 2, 0, 0, 1, 0, 1]' : 0.202934}", "{'[0, 0, 3, 6, 6, 0, 0, 1, 25, 0, 10, 20, 2, 0, 0, 1, 0, 1]' : 0.203631}", "{'[0, 0, 3, 6, 6, 0, 0, 1, 25, 0, 10, 20, 2, 0, 0, 1, 0, 1]' : 0.202598}", "{'[0, 0, 3, 6, 6, 0, 0, 1, 25, 0, 10, 20, 2, 0, 0, 1, 0, 1]' : 0.202919}", "{'[0, 0, 3, 6, 6, 0, 0, 1, 25, 0, 10, 20, 2, 0, 0, 1, 0, 1]' : 0.203709}", "{'[0, 0, 3, 6, 6, 0, 0, 1, 25, 0, 10, 20, 2, 0, 0, 1, 0, 1]' : 0.203799}"]
returning from 'run': {'[0, 0, 3, 6, 6, 0, 0, 1, 25, 0, 10, 20, 2, 0, 0, 1, 0, 1]': ([0.229238, 0.221421, 0.204571, 0.205314, 0.203872, 0.205514, 0.202482, 0.204442, 0.20353, 0.205472, 0.202317, 0.203734, 0.205523, 0.205722, 0.203781, 0.204085, 0.203005, 0.204897, 0.207517, 0.208071, 0.203969, 0.202277, 0.200702, 0.202657, 0.202934, 0.203631, 0.202598, 0.202919, 0.203709, 0.203799], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 3, 6, 6, 0, 0, 1, 25, 0, 10, 20, 2, 0, 0, 1, 0, 1]': ([0.229238, 0.221421, 0.204571, 0.205314, 0.203872, 0.205514, 0.202482, 0.204442, 0.20353, 0.205472, 0.202317, 0.203734, 0.205523, 0.205722, 0.203781, 0.204085, 0.203005, 0.204897, 0.207517, 0.208071, 0.203969, 0.202277, 0.200702, 0.202657, 0.202934, 0.203631, 0.202598, 0.202919, 0.203709, 0.203799], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		172
        Multiplications: 	50
        Divisions: 		0
        Logical: 		0
        Reads: 			391
        Writes: 		89
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest32.exe __orio_perftest32.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest32.exe  
Program Test Output: 
{'[0, 6, 0, 6, 0, 3, 0, 1, 9, 0, 7, 10, 0, 1, 1, 1, 1, 1]' : 0.224236}
{'[0, 6, 0, 6, 0, 3, 0, 1, 9, 0, 7, 10, 0, 1, 1, 1, 1, 1]' : 0.224028}
{'[0, 6, 0, 6, 0, 3, 0, 1, 9, 0, 7, 10, 0, 1, 1, 1, 1, 1]' : 0.214716}
{'[0, 6, 0, 6, 0, 3, 0, 1, 9, 0, 7, 10, 0, 1, 1, 1, 1, 1]' : 0.198816}
{'[0, 6, 0, 6, 0, 3, 0, 1, 9, 0, 7, 10, 0, 1, 1, 1, 1, 1]' : 0.198805}
{'[0, 6, 0, 6, 0, 3, 0, 1, 9, 0, 7, 10, 0, 1, 1, 1, 1, 1]' : 0.199004}
{'[0, 6, 0, 6, 0, 3, 0, 1, 9, 0, 7, 10, 0, 1, 1, 1, 1, 1]' : 0.198808}
{'[0, 6, 0, 6, 0, 3, 0, 1, 9, 0, 7, 10, 0, 1, 1, 1, 1, 1]' : 0.198835}
{'[0, 6, 0, 6, 0, 3, 0, 1, 9, 0, 7, 10, 0, 1, 1, 1, 1, 1]' : 0.198786}
{'[0, 6, 0, 6, 0, 3, 0, 1, 9, 0, 7, 10, 0, 1, 1, 1, 1, 1]' : 0.198775}
{'[0, 6, 0, 6, 0, 3, 0, 1, 9, 0, 7, 10, 0, 1, 1, 1, 1, 1]' : 0.198846}
{'[0, 6, 0, 6, 0, 3, 0, 1, 9, 0, 7, 10, 0, 1, 1, 1, 1, 1]' : 0.198913}
{'[0, 6, 0, 6, 0, 3, 0, 1, 9, 0, 7, 10, 0, 1, 1, 1, 1, 1]' : 0.19899}
{'[0, 6, 0, 6, 0, 3, 0, 1, 9, 0, 7, 10, 0, 1, 1, 1, 1, 1]' : 0.198888}
{'[0, 6, 0, 6, 0, 3, 0, 1, 9, 0, 7, 10, 0, 1, 1, 1, 1, 1]' : 0.198905}
{'[0, 6, 0, 6, 0, 3, 0, 1, 9, 0, 7, 10, 0, 1, 1, 1, 1, 1]' : 0.199103}
{'[0, 6, 0, 6, 0, 3, 0, 1, 9, 0, 7, 10, 0, 1, 1, 1, 1, 1]' : 0.198871}
{'[0, 6, 0, 6, 0, 3, 0, 1, 9, 0, 7, 10, 0, 1, 1, 1, 1, 1]' : 0.198932}
{'[0, 6, 0, 6, 0, 3, 0, 1, 9, 0, 7, 10, 0, 1, 1, 1, 1, 1]' : 0.198967}
{'[0, 6, 0, 6, 0, 3, 0, 1, 9, 0, 7, 10, 0, 1, 1, 1, 1, 1]' : 0.19885}
{'[0, 6, 0, 6, 0, 3, 0, 1, 9, 0, 7, 10, 0, 1, 1, 1, 1, 1]' : 0.198897}
{'[0, 6, 0, 6, 0, 3, 0, 1, 9, 0, 7, 10, 0, 1, 1, 1, 1, 1]' : 0.198827}
{'[0, 6, 0, 6, 0, 3, 0, 1, 9, 0, 7, 10, 0, 1, 1, 1, 1, 1]' : 0.198907}
{'[0, 6, 0, 6, 0, 3, 0, 1, 9, 0, 7, 10, 0, 1, 1, 1, 1, 1]' : 0.198946}
{'[0, 6, 0, 6, 0, 3, 0, 1, 9, 0, 7, 10, 0, 1, 1, 1, 1, 1]' : 0.198974}
{'[0, 6, 0, 6, 0, 3, 0, 1, 9, 0, 7, 10, 0, 1, 1, 1, 1, 1]' : 0.199197}
{'[0, 6, 0, 6, 0, 3, 0, 1, 9, 0, 7, 10, 0, 1, 1, 1, 1, 1]' : 0.198859}
{'[0, 6, 0, 6, 0, 3, 0, 1, 9, 0, 7, 10, 0, 1, 1, 1, 1, 1]' : 0.198864}
{'[0, 6, 0, 6, 0, 3, 0, 1, 9, 0, 7, 10, 0, 1, 1, 1, 1, 1]' : 0.198972}
{'[0, 6, 0, 6, 0, 3, 0, 1, 9, 0, 7, 10, 0, 1, 1, 1, 1, 1]' : 0.198905}

out:
 ["{'[0, 6, 0, 6, 0, 3, 0, 1, 9, 0, 7, 10, 0, 1, 1, 1, 1, 1]' : 0.224236}", "{'[0, 6, 0, 6, 0, 3, 0, 1, 9, 0, 7, 10, 0, 1, 1, 1, 1, 1]' : 0.224028}", "{'[0, 6, 0, 6, 0, 3, 0, 1, 9, 0, 7, 10, 0, 1, 1, 1, 1, 1]' : 0.214716}", "{'[0, 6, 0, 6, 0, 3, 0, 1, 9, 0, 7, 10, 0, 1, 1, 1, 1, 1]' : 0.198816}", "{'[0, 6, 0, 6, 0, 3, 0, 1, 9, 0, 7, 10, 0, 1, 1, 1, 1, 1]' : 0.198805}", "{'[0, 6, 0, 6, 0, 3, 0, 1, 9, 0, 7, 10, 0, 1, 1, 1, 1, 1]' : 0.199004}", "{'[0, 6, 0, 6, 0, 3, 0, 1, 9, 0, 7, 10, 0, 1, 1, 1, 1, 1]' : 0.198808}", "{'[0, 6, 0, 6, 0, 3, 0, 1, 9, 0, 7, 10, 0, 1, 1, 1, 1, 1]' : 0.198835}", "{'[0, 6, 0, 6, 0, 3, 0, 1, 9, 0, 7, 10, 0, 1, 1, 1, 1, 1]' : 0.198786}", "{'[0, 6, 0, 6, 0, 3, 0, 1, 9, 0, 7, 10, 0, 1, 1, 1, 1, 1]' : 0.198775}", "{'[0, 6, 0, 6, 0, 3, 0, 1, 9, 0, 7, 10, 0, 1, 1, 1, 1, 1]' : 0.198846}", "{'[0, 6, 0, 6, 0, 3, 0, 1, 9, 0, 7, 10, 0, 1, 1, 1, 1, 1]' : 0.198913}", "{'[0, 6, 0, 6, 0, 3, 0, 1, 9, 0, 7, 10, 0, 1, 1, 1, 1, 1]' : 0.19899}", "{'[0, 6, 0, 6, 0, 3, 0, 1, 9, 0, 7, 10, 0, 1, 1, 1, 1, 1]' : 0.198888}", "{'[0, 6, 0, 6, 0, 3, 0, 1, 9, 0, 7, 10, 0, 1, 1, 1, 1, 1]' : 0.198905}", "{'[0, 6, 0, 6, 0, 3, 0, 1, 9, 0, 7, 10, 0, 1, 1, 1, 1, 1]' : 0.199103}", "{'[0, 6, 0, 6, 0, 3, 0, 1, 9, 0, 7, 10, 0, 1, 1, 1, 1, 1]' : 0.198871}", "{'[0, 6, 0, 6, 0, 3, 0, 1, 9, 0, 7, 10, 0, 1, 1, 1, 1, 1]' : 0.198932}", "{'[0, 6, 0, 6, 0, 3, 0, 1, 9, 0, 7, 10, 0, 1, 1, 1, 1, 1]' : 0.198967}", "{'[0, 6, 0, 6, 0, 3, 0, 1, 9, 0, 7, 10, 0, 1, 1, 1, 1, 1]' : 0.19885}", "{'[0, 6, 0, 6, 0, 3, 0, 1, 9, 0, 7, 10, 0, 1, 1, 1, 1, 1]' : 0.198897}", "{'[0, 6, 0, 6, 0, 3, 0, 1, 9, 0, 7, 10, 0, 1, 1, 1, 1, 1]' : 0.198827}", "{'[0, 6, 0, 6, 0, 3, 0, 1, 9, 0, 7, 10, 0, 1, 1, 1, 1, 1]' : 0.198907}", "{'[0, 6, 0, 6, 0, 3, 0, 1, 9, 0, 7, 10, 0, 1, 1, 1, 1, 1]' : 0.198946}", "{'[0, 6, 0, 6, 0, 3, 0, 1, 9, 0, 7, 10, 0, 1, 1, 1, 1, 1]' : 0.198974}", "{'[0, 6, 0, 6, 0, 3, 0, 1, 9, 0, 7, 10, 0, 1, 1, 1, 1, 1]' : 0.199197}", "{'[0, 6, 0, 6, 0, 3, 0, 1, 9, 0, 7, 10, 0, 1, 1, 1, 1, 1]' : 0.198859}", "{'[0, 6, 0, 6, 0, 3, 0, 1, 9, 0, 7, 10, 0, 1, 1, 1, 1, 1]' : 0.198864}", "{'[0, 6, 0, 6, 0, 3, 0, 1, 9, 0, 7, 10, 0, 1, 1, 1, 1, 1]' : 0.198972}", "{'[0, 6, 0, 6, 0, 3, 0, 1, 9, 0, 7, 10, 0, 1, 1, 1, 1, 1]' : 0.198905}"]
returning from 'run': {'[0, 6, 0, 6, 0, 3, 0, 1, 9, 0, 7, 10, 0, 1, 1, 1, 1, 1]': ([0.224236, 0.224028, 0.214716, 0.198816, 0.198805, 0.199004, 0.198808, 0.198835, 0.198786, 0.198775, 0.198846, 0.198913, 0.19899, 0.198888, 0.198905, 0.199103, 0.198871, 0.198932, 0.198967, 0.19885, 0.198897, 0.198827, 0.198907, 0.198946, 0.198974, 0.199197, 0.198859, 0.198864, 0.198972, 0.198905], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 0, 6, 0, 3, 0, 1, 9, 0, 7, 10, 0, 1, 1, 1, 1, 1]': ([0.224236, 0.224028, 0.214716, 0.198816, 0.198805, 0.199004, 0.198808, 0.198835, 0.198786, 0.198775, 0.198846, 0.198913, 0.19899, 0.198888, 0.198905, 0.199103, 0.198871, 0.198932, 0.198967, 0.19885, 0.198897, 0.198827, 0.198907, 0.198946, 0.198974, 0.199197, 0.198859, 0.198864, 0.198972, 0.198905], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	4
        Additions: 		1955
        Multiplications: 	928
        Divisions: 		0
        Logical: 		0
        Reads: 			3878
        Writes: 		664
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest33.exe __orio_perftest33.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest33.exe  
Program Test Output: 
{'[0, 3, 3, 0, 4, 2, 0, 0, 1, 6, 0, 23, 0, 2, 0, 1, 0, 0]' : 0.122091}
{'[0, 3, 3, 0, 4, 2, 0, 0, 1, 6, 0, 23, 0, 2, 0, 1, 0, 0]' : 0.125453}
{'[0, 3, 3, 0, 4, 2, 0, 0, 1, 6, 0, 23, 0, 2, 0, 1, 0, 0]' : 0.126042}
{'[0, 3, 3, 0, 4, 2, 0, 0, 1, 6, 0, 23, 0, 2, 0, 1, 0, 0]' : 0.125835}
{'[0, 3, 3, 0, 4, 2, 0, 0, 1, 6, 0, 23, 0, 2, 0, 1, 0, 0]' : 0.12569}
{'[0, 3, 3, 0, 4, 2, 0, 0, 1, 6, 0, 23, 0, 2, 0, 1, 0, 0]' : 0.125853}
{'[0, 3, 3, 0, 4, 2, 0, 0, 1, 6, 0, 23, 0, 2, 0, 1, 0, 0]' : 0.125876}
{'[0, 3, 3, 0, 4, 2, 0, 0, 1, 6, 0, 23, 0, 2, 0, 1, 0, 0]' : 0.125839}
{'[0, 3, 3, 0, 4, 2, 0, 0, 1, 6, 0, 23, 0, 2, 0, 1, 0, 0]' : 0.125772}
{'[0, 3, 3, 0, 4, 2, 0, 0, 1, 6, 0, 23, 0, 2, 0, 1, 0, 0]' : 0.125707}
{'[0, 3, 3, 0, 4, 2, 0, 0, 1, 6, 0, 23, 0, 2, 0, 1, 0, 0]' : 0.125801}
{'[0, 3, 3, 0, 4, 2, 0, 0, 1, 6, 0, 23, 0, 2, 0, 1, 0, 0]' : 0.125902}
{'[0, 3, 3, 0, 4, 2, 0, 0, 1, 6, 0, 23, 0, 2, 0, 1, 0, 0]' : 0.126329}
{'[0, 3, 3, 0, 4, 2, 0, 0, 1, 6, 0, 23, 0, 2, 0, 1, 0, 0]' : 0.125708}
{'[0, 3, 3, 0, 4, 2, 0, 0, 1, 6, 0, 23, 0, 2, 0, 1, 0, 0]' : 0.12574}
{'[0, 3, 3, 0, 4, 2, 0, 0, 1, 6, 0, 23, 0, 2, 0, 1, 0, 0]' : 0.125663}
{'[0, 3, 3, 0, 4, 2, 0, 0, 1, 6, 0, 23, 0, 2, 0, 1, 0, 0]' : 0.125694}
{'[0, 3, 3, 0, 4, 2, 0, 0, 1, 6, 0, 23, 0, 2, 0, 1, 0, 0]' : 0.125781}
{'[0, 3, 3, 0, 4, 2, 0, 0, 1, 6, 0, 23, 0, 2, 0, 1, 0, 0]' : 0.125691}
{'[0, 3, 3, 0, 4, 2, 0, 0, 1, 6, 0, 23, 0, 2, 0, 1, 0, 0]' : 0.125453}
{'[0, 3, 3, 0, 4, 2, 0, 0, 1, 6, 0, 23, 0, 2, 0, 1, 0, 0]' : 0.125816}
{'[0, 3, 3, 0, 4, 2, 0, 0, 1, 6, 0, 23, 0, 2, 0, 1, 0, 0]' : 0.125804}
{'[0, 3, 3, 0, 4, 2, 0, 0, 1, 6, 0, 23, 0, 2, 0, 1, 0, 0]' : 0.125761}
{'[0, 3, 3, 0, 4, 2, 0, 0, 1, 6, 0, 23, 0, 2, 0, 1, 0, 0]' : 0.125836}
{'[0, 3, 3, 0, 4, 2, 0, 0, 1, 6, 0, 23, 0, 2, 0, 1, 0, 0]' : 0.1258}
{'[0, 3, 3, 0, 4, 2, 0, 0, 1, 6, 0, 23, 0, 2, 0, 1, 0, 0]' : 0.125719}
{'[0, 3, 3, 0, 4, 2, 0, 0, 1, 6, 0, 23, 0, 2, 0, 1, 0, 0]' : 0.125336}
{'[0, 3, 3, 0, 4, 2, 0, 0, 1, 6, 0, 23, 0, 2, 0, 1, 0, 0]' : 0.125433}
{'[0, 3, 3, 0, 4, 2, 0, 0, 1, 6, 0, 23, 0, 2, 0, 1, 0, 0]' : 0.125851}
{'[0, 3, 3, 0, 4, 2, 0, 0, 1, 6, 0, 23, 0, 2, 0, 1, 0, 0]' : 0.125676}

out:
 ["{'[0, 3, 3, 0, 4, 2, 0, 0, 1, 6, 0, 23, 0, 2, 0, 1, 0, 0]' : 0.122091}", "{'[0, 3, 3, 0, 4, 2, 0, 0, 1, 6, 0, 23, 0, 2, 0, 1, 0, 0]' : 0.125453}", "{'[0, 3, 3, 0, 4, 2, 0, 0, 1, 6, 0, 23, 0, 2, 0, 1, 0, 0]' : 0.126042}", "{'[0, 3, 3, 0, 4, 2, 0, 0, 1, 6, 0, 23, 0, 2, 0, 1, 0, 0]' : 0.125835}", "{'[0, 3, 3, 0, 4, 2, 0, 0, 1, 6, 0, 23, 0, 2, 0, 1, 0, 0]' : 0.12569}", "{'[0, 3, 3, 0, 4, 2, 0, 0, 1, 6, 0, 23, 0, 2, 0, 1, 0, 0]' : 0.125853}", "{'[0, 3, 3, 0, 4, 2, 0, 0, 1, 6, 0, 23, 0, 2, 0, 1, 0, 0]' : 0.125876}", "{'[0, 3, 3, 0, 4, 2, 0, 0, 1, 6, 0, 23, 0, 2, 0, 1, 0, 0]' : 0.125839}", "{'[0, 3, 3, 0, 4, 2, 0, 0, 1, 6, 0, 23, 0, 2, 0, 1, 0, 0]' : 0.125772}", "{'[0, 3, 3, 0, 4, 2, 0, 0, 1, 6, 0, 23, 0, 2, 0, 1, 0, 0]' : 0.125707}", "{'[0, 3, 3, 0, 4, 2, 0, 0, 1, 6, 0, 23, 0, 2, 0, 1, 0, 0]' : 0.125801}", "{'[0, 3, 3, 0, 4, 2, 0, 0, 1, 6, 0, 23, 0, 2, 0, 1, 0, 0]' : 0.125902}", "{'[0, 3, 3, 0, 4, 2, 0, 0, 1, 6, 0, 23, 0, 2, 0, 1, 0, 0]' : 0.126329}", "{'[0, 3, 3, 0, 4, 2, 0, 0, 1, 6, 0, 23, 0, 2, 0, 1, 0, 0]' : 0.125708}", "{'[0, 3, 3, 0, 4, 2, 0, 0, 1, 6, 0, 23, 0, 2, 0, 1, 0, 0]' : 0.12574}", "{'[0, 3, 3, 0, 4, 2, 0, 0, 1, 6, 0, 23, 0, 2, 0, 1, 0, 0]' : 0.125663}", "{'[0, 3, 3, 0, 4, 2, 0, 0, 1, 6, 0, 23, 0, 2, 0, 1, 0, 0]' : 0.125694}", "{'[0, 3, 3, 0, 4, 2, 0, 0, 1, 6, 0, 23, 0, 2, 0, 1, 0, 0]' : 0.125781}", "{'[0, 3, 3, 0, 4, 2, 0, 0, 1, 6, 0, 23, 0, 2, 0, 1, 0, 0]' : 0.125691}", "{'[0, 3, 3, 0, 4, 2, 0, 0, 1, 6, 0, 23, 0, 2, 0, 1, 0, 0]' : 0.125453}", "{'[0, 3, 3, 0, 4, 2, 0, 0, 1, 6, 0, 23, 0, 2, 0, 1, 0, 0]' : 0.125816}", "{'[0, 3, 3, 0, 4, 2, 0, 0, 1, 6, 0, 23, 0, 2, 0, 1, 0, 0]' : 0.125804}", "{'[0, 3, 3, 0, 4, 2, 0, 0, 1, 6, 0, 23, 0, 2, 0, 1, 0, 0]' : 0.125761}", "{'[0, 3, 3, 0, 4, 2, 0, 0, 1, 6, 0, 23, 0, 2, 0, 1, 0, 0]' : 0.125836}", "{'[0, 3, 3, 0, 4, 2, 0, 0, 1, 6, 0, 23, 0, 2, 0, 1, 0, 0]' : 0.1258}", "{'[0, 3, 3, 0, 4, 2, 0, 0, 1, 6, 0, 23, 0, 2, 0, 1, 0, 0]' : 0.125719}", "{'[0, 3, 3, 0, 4, 2, 0, 0, 1, 6, 0, 23, 0, 2, 0, 1, 0, 0]' : 0.125336}", "{'[0, 3, 3, 0, 4, 2, 0, 0, 1, 6, 0, 23, 0, 2, 0, 1, 0, 0]' : 0.125433}", "{'[0, 3, 3, 0, 4, 2, 0, 0, 1, 6, 0, 23, 0, 2, 0, 1, 0, 0]' : 0.125851}", "{'[0, 3, 3, 0, 4, 2, 0, 0, 1, 6, 0, 23, 0, 2, 0, 1, 0, 0]' : 0.125676}"]
returning from 'run': {'[0, 3, 3, 0, 4, 2, 0, 0, 1, 6, 0, 23, 0, 2, 0, 1, 0, 0]': ([0.122091, 0.125453, 0.126042, 0.125835, 0.12569, 0.125853, 0.125876, 0.125839, 0.125772, 0.125707, 0.125801, 0.125902, 0.126329, 0.125708, 0.12574, 0.125663, 0.125694, 0.125781, 0.125691, 0.125453, 0.125816, 0.125804, 0.125761, 0.125836, 0.1258, 0.125719, 0.125336, 0.125433, 0.125851, 0.125676], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 3, 3, 0, 4, 2, 0, 0, 1, 6, 0, 23, 0, 2, 0, 1, 0, 0]': ([0.122091, 0.125453, 0.126042, 0.125835, 0.12569, 0.125853, 0.125876, 0.125839, 0.125772, 0.125707, 0.125801, 0.125902, 0.126329, 0.125708, 0.12574, 0.125663, 0.125694, 0.125781, 0.125691, 0.125453, 0.125816, 0.125804, 0.125761, 0.125836, 0.1258, 0.125719, 0.125336, 0.125433, 0.125851, 0.125676], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		2334
        Multiplications: 	592
        Divisions: 		0
        Logical: 		0
        Reads: 			3454
        Writes: 		341
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest34.exe __orio_perftest34.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest34.exe  
Program Test Output: 
{'[0, 5, 1, 0, 5, 2, 1, 1, 10, 0, 27, 8, 1, 0, 1, 0, 1, 0]' : 0.133068}
{'[0, 5, 1, 0, 5, 2, 1, 1, 10, 0, 27, 8, 1, 0, 1, 0, 1, 0]' : 0.129404}
{'[0, 5, 1, 0, 5, 2, 1, 1, 10, 0, 27, 8, 1, 0, 1, 0, 1, 0]' : 0.128811}
{'[0, 5, 1, 0, 5, 2, 1, 1, 10, 0, 27, 8, 1, 0, 1, 0, 1, 0]' : 0.128872}
{'[0, 5, 1, 0, 5, 2, 1, 1, 10, 0, 27, 8, 1, 0, 1, 0, 1, 0]' : 0.129444}
{'[0, 5, 1, 0, 5, 2, 1, 1, 10, 0, 27, 8, 1, 0, 1, 0, 1, 0]' : 0.135349}
{'[0, 5, 1, 0, 5, 2, 1, 1, 10, 0, 27, 8, 1, 0, 1, 0, 1, 0]' : 0.136281}
{'[0, 5, 1, 0, 5, 2, 1, 1, 10, 0, 27, 8, 1, 0, 1, 0, 1, 0]' : 0.136478}
{'[0, 5, 1, 0, 5, 2, 1, 1, 10, 0, 27, 8, 1, 0, 1, 0, 1, 0]' : 0.132022}
{'[0, 5, 1, 0, 5, 2, 1, 1, 10, 0, 27, 8, 1, 0, 1, 0, 1, 0]' : 0.129016}
{'[0, 5, 1, 0, 5, 2, 1, 1, 10, 0, 27, 8, 1, 0, 1, 0, 1, 0]' : 0.128682}
{'[0, 5, 1, 0, 5, 2, 1, 1, 10, 0, 27, 8, 1, 0, 1, 0, 1, 0]' : 0.129188}
{'[0, 5, 1, 0, 5, 2, 1, 1, 10, 0, 27, 8, 1, 0, 1, 0, 1, 0]' : 0.129572}
{'[0, 5, 1, 0, 5, 2, 1, 1, 10, 0, 27, 8, 1, 0, 1, 0, 1, 0]' : 0.134947}
{'[0, 5, 1, 0, 5, 2, 1, 1, 10, 0, 27, 8, 1, 0, 1, 0, 1, 0]' : 0.136238}
{'[0, 5, 1, 0, 5, 2, 1, 1, 10, 0, 27, 8, 1, 0, 1, 0, 1, 0]' : 0.13595}
{'[0, 5, 1, 0, 5, 2, 1, 1, 10, 0, 27, 8, 1, 0, 1, 0, 1, 0]' : 0.129916}
{'[0, 5, 1, 0, 5, 2, 1, 1, 10, 0, 27, 8, 1, 0, 1, 0, 1, 0]' : 0.128994}
{'[0, 5, 1, 0, 5, 2, 1, 1, 10, 0, 27, 8, 1, 0, 1, 0, 1, 0]' : 0.128808}
{'[0, 5, 1, 0, 5, 2, 1, 1, 10, 0, 27, 8, 1, 0, 1, 0, 1, 0]' : 0.128986}
{'[0, 5, 1, 0, 5, 2, 1, 1, 10, 0, 27, 8, 1, 0, 1, 0, 1, 0]' : 0.133515}
{'[0, 5, 1, 0, 5, 2, 1, 1, 10, 0, 27, 8, 1, 0, 1, 0, 1, 0]' : 0.129248}
{'[0, 5, 1, 0, 5, 2, 1, 1, 10, 0, 27, 8, 1, 0, 1, 0, 1, 0]' : 0.124896}
{'[0, 5, 1, 0, 5, 2, 1, 1, 10, 0, 27, 8, 1, 0, 1, 0, 1, 0]' : 0.125292}
{'[0, 5, 1, 0, 5, 2, 1, 1, 10, 0, 27, 8, 1, 0, 1, 0, 1, 0]' : 0.129047}
{'[0, 5, 1, 0, 5, 2, 1, 1, 10, 0, 27, 8, 1, 0, 1, 0, 1, 0]' : 0.129327}
{'[0, 5, 1, 0, 5, 2, 1, 1, 10, 0, 27, 8, 1, 0, 1, 0, 1, 0]' : 0.129039}
{'[0, 5, 1, 0, 5, 2, 1, 1, 10, 0, 27, 8, 1, 0, 1, 0, 1, 0]' : 0.129355}
{'[0, 5, 1, 0, 5, 2, 1, 1, 10, 0, 27, 8, 1, 0, 1, 0, 1, 0]' : 0.131626}
{'[0, 5, 1, 0, 5, 2, 1, 1, 10, 0, 27, 8, 1, 0, 1, 0, 1, 0]' : 0.129252}

out:
 ["{'[0, 5, 1, 0, 5, 2, 1, 1, 10, 0, 27, 8, 1, 0, 1, 0, 1, 0]' : 0.133068}", "{'[0, 5, 1, 0, 5, 2, 1, 1, 10, 0, 27, 8, 1, 0, 1, 0, 1, 0]' : 0.129404}", "{'[0, 5, 1, 0, 5, 2, 1, 1, 10, 0, 27, 8, 1, 0, 1, 0, 1, 0]' : 0.128811}", "{'[0, 5, 1, 0, 5, 2, 1, 1, 10, 0, 27, 8, 1, 0, 1, 0, 1, 0]' : 0.128872}", "{'[0, 5, 1, 0, 5, 2, 1, 1, 10, 0, 27, 8, 1, 0, 1, 0, 1, 0]' : 0.129444}", "{'[0, 5, 1, 0, 5, 2, 1, 1, 10, 0, 27, 8, 1, 0, 1, 0, 1, 0]' : 0.135349}", "{'[0, 5, 1, 0, 5, 2, 1, 1, 10, 0, 27, 8, 1, 0, 1, 0, 1, 0]' : 0.136281}", "{'[0, 5, 1, 0, 5, 2, 1, 1, 10, 0, 27, 8, 1, 0, 1, 0, 1, 0]' : 0.136478}", "{'[0, 5, 1, 0, 5, 2, 1, 1, 10, 0, 27, 8, 1, 0, 1, 0, 1, 0]' : 0.132022}", "{'[0, 5, 1, 0, 5, 2, 1, 1, 10, 0, 27, 8, 1, 0, 1, 0, 1, 0]' : 0.129016}", "{'[0, 5, 1, 0, 5, 2, 1, 1, 10, 0, 27, 8, 1, 0, 1, 0, 1, 0]' : 0.128682}", "{'[0, 5, 1, 0, 5, 2, 1, 1, 10, 0, 27, 8, 1, 0, 1, 0, 1, 0]' : 0.129188}", "{'[0, 5, 1, 0, 5, 2, 1, 1, 10, 0, 27, 8, 1, 0, 1, 0, 1, 0]' : 0.129572}", "{'[0, 5, 1, 0, 5, 2, 1, 1, 10, 0, 27, 8, 1, 0, 1, 0, 1, 0]' : 0.134947}", "{'[0, 5, 1, 0, 5, 2, 1, 1, 10, 0, 27, 8, 1, 0, 1, 0, 1, 0]' : 0.136238}", "{'[0, 5, 1, 0, 5, 2, 1, 1, 10, 0, 27, 8, 1, 0, 1, 0, 1, 0]' : 0.13595}", "{'[0, 5, 1, 0, 5, 2, 1, 1, 10, 0, 27, 8, 1, 0, 1, 0, 1, 0]' : 0.129916}", "{'[0, 5, 1, 0, 5, 2, 1, 1, 10, 0, 27, 8, 1, 0, 1, 0, 1, 0]' : 0.128994}", "{'[0, 5, 1, 0, 5, 2, 1, 1, 10, 0, 27, 8, 1, 0, 1, 0, 1, 0]' : 0.128808}", "{'[0, 5, 1, 0, 5, 2, 1, 1, 10, 0, 27, 8, 1, 0, 1, 0, 1, 0]' : 0.128986}", "{'[0, 5, 1, 0, 5, 2, 1, 1, 10, 0, 27, 8, 1, 0, 1, 0, 1, 0]' : 0.133515}", "{'[0, 5, 1, 0, 5, 2, 1, 1, 10, 0, 27, 8, 1, 0, 1, 0, 1, 0]' : 0.129248}", "{'[0, 5, 1, 0, 5, 2, 1, 1, 10, 0, 27, 8, 1, 0, 1, 0, 1, 0]' : 0.124896}", "{'[0, 5, 1, 0, 5, 2, 1, 1, 10, 0, 27, 8, 1, 0, 1, 0, 1, 0]' : 0.125292}", "{'[0, 5, 1, 0, 5, 2, 1, 1, 10, 0, 27, 8, 1, 0, 1, 0, 1, 0]' : 0.129047}", "{'[0, 5, 1, 0, 5, 2, 1, 1, 10, 0, 27, 8, 1, 0, 1, 0, 1, 0]' : 0.129327}", "{'[0, 5, 1, 0, 5, 2, 1, 1, 10, 0, 27, 8, 1, 0, 1, 0, 1, 0]' : 0.129039}", "{'[0, 5, 1, 0, 5, 2, 1, 1, 10, 0, 27, 8, 1, 0, 1, 0, 1, 0]' : 0.129355}", "{'[0, 5, 1, 0, 5, 2, 1, 1, 10, 0, 27, 8, 1, 0, 1, 0, 1, 0]' : 0.131626}", "{'[0, 5, 1, 0, 5, 2, 1, 1, 10, 0, 27, 8, 1, 0, 1, 0, 1, 0]' : 0.129252}"]
returning from 'run': {'[0, 5, 1, 0, 5, 2, 1, 1, 10, 0, 27, 8, 1, 0, 1, 0, 1, 0]': ([0.133068, 0.129404, 0.128811, 0.128872, 0.129444, 0.135349, 0.136281, 0.136478, 0.132022, 0.129016, 0.128682, 0.129188, 0.129572, 0.134947, 0.136238, 0.13595, 0.129916, 0.128994, 0.128808, 0.128986, 0.133515, 0.129248, 0.124896, 0.125292, 0.129047, 0.129327, 0.129039, 0.129355, 0.131626, 0.129252], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 5, 1, 0, 5, 2, 1, 1, 10, 0, 27, 8, 1, 0, 1, 0, 1, 0]': ([0.133068, 0.129404, 0.128811, 0.128872, 0.129444, 0.135349, 0.136281, 0.136478, 0.132022, 0.129016, 0.128682, 0.129188, 0.129572, 0.134947, 0.136238, 0.13595, 0.129916, 0.128994, 0.128808, 0.128986, 0.133515, 0.129248, 0.124896, 0.125292, 0.129047, 0.129327, 0.129039, 0.129355, 0.131626, 0.129252], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		320
        Multiplications: 	84
        Divisions: 		0
        Logical: 		0
        Reads: 			693
        Writes: 		153
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest35.exe __orio_perftest35.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest35.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest35.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest35.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest35.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	58
        Max loop nest depth: 	5
        Additions: 		10246
        Multiplications: 	2944
        Divisions: 		0
        Logical: 		0
        Reads: 			15446
        Writes: 		1706
        Comparisons:		58
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest36.exe __orio_perftest36.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest36.exe  
Program Test Output: 
{'[4, 0, 0, 4, 0, 5, 0, 0, 20, 21, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.149583}
{'[4, 0, 0, 4, 0, 5, 0, 0, 20, 21, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.151122}
{'[4, 0, 0, 4, 0, 5, 0, 0, 20, 21, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.150969}
{'[4, 0, 0, 4, 0, 5, 0, 0, 20, 21, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.151084}
{'[4, 0, 0, 4, 0, 5, 0, 0, 20, 21, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.151128}
{'[4, 0, 0, 4, 0, 5, 0, 0, 20, 21, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.148363}
{'[4, 0, 0, 4, 0, 5, 0, 0, 20, 21, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.147715}
{'[4, 0, 0, 4, 0, 5, 0, 0, 20, 21, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.148166}
{'[4, 0, 0, 4, 0, 5, 0, 0, 20, 21, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.147865}
{'[4, 0, 0, 4, 0, 5, 0, 0, 20, 21, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.147589}
{'[4, 0, 0, 4, 0, 5, 0, 0, 20, 21, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.149107}
{'[4, 0, 0, 4, 0, 5, 0, 0, 20, 21, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.149253}
{'[4, 0, 0, 4, 0, 5, 0, 0, 20, 21, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.151088}
{'[4, 0, 0, 4, 0, 5, 0, 0, 20, 21, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.15071}
{'[4, 0, 0, 4, 0, 5, 0, 0, 20, 21, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.147918}
{'[4, 0, 0, 4, 0, 5, 0, 0, 20, 21, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.150173}
{'[4, 0, 0, 4, 0, 5, 0, 0, 20, 21, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.151023}
{'[4, 0, 0, 4, 0, 5, 0, 0, 20, 21, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.151076}
{'[4, 0, 0, 4, 0, 5, 0, 0, 20, 21, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.151015}
{'[4, 0, 0, 4, 0, 5, 0, 0, 20, 21, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.14772}
{'[4, 0, 0, 4, 0, 5, 0, 0, 20, 21, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.149468}
{'[4, 0, 0, 4, 0, 5, 0, 0, 20, 21, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.151099}
{'[4, 0, 0, 4, 0, 5, 0, 0, 20, 21, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.150957}
{'[4, 0, 0, 4, 0, 5, 0, 0, 20, 21, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.15101}
{'[4, 0, 0, 4, 0, 5, 0, 0, 20, 21, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.147081}
{'[4, 0, 0, 4, 0, 5, 0, 0, 20, 21, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.144265}
{'[4, 0, 0, 4, 0, 5, 0, 0, 20, 21, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.144143}
{'[4, 0, 0, 4, 0, 5, 0, 0, 20, 21, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.146602}
{'[4, 0, 0, 4, 0, 5, 0, 0, 20, 21, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.14779}
{'[4, 0, 0, 4, 0, 5, 0, 0, 20, 21, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.149734}

out:
 ["{'[4, 0, 0, 4, 0, 5, 0, 0, 20, 21, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.149583}", "{'[4, 0, 0, 4, 0, 5, 0, 0, 20, 21, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.151122}", "{'[4, 0, 0, 4, 0, 5, 0, 0, 20, 21, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.150969}", "{'[4, 0, 0, 4, 0, 5, 0, 0, 20, 21, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.151084}", "{'[4, 0, 0, 4, 0, 5, 0, 0, 20, 21, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.151128}", "{'[4, 0, 0, 4, 0, 5, 0, 0, 20, 21, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.148363}", "{'[4, 0, 0, 4, 0, 5, 0, 0, 20, 21, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.147715}", "{'[4, 0, 0, 4, 0, 5, 0, 0, 20, 21, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.148166}", "{'[4, 0, 0, 4, 0, 5, 0, 0, 20, 21, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.147865}", "{'[4, 0, 0, 4, 0, 5, 0, 0, 20, 21, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.147589}", "{'[4, 0, 0, 4, 0, 5, 0, 0, 20, 21, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.149107}", "{'[4, 0, 0, 4, 0, 5, 0, 0, 20, 21, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.149253}", "{'[4, 0, 0, 4, 0, 5, 0, 0, 20, 21, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.151088}", "{'[4, 0, 0, 4, 0, 5, 0, 0, 20, 21, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.15071}", "{'[4, 0, 0, 4, 0, 5, 0, 0, 20, 21, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.147918}", "{'[4, 0, 0, 4, 0, 5, 0, 0, 20, 21, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.150173}", "{'[4, 0, 0, 4, 0, 5, 0, 0, 20, 21, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.151023}", "{'[4, 0, 0, 4, 0, 5, 0, 0, 20, 21, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.151076}", "{'[4, 0, 0, 4, 0, 5, 0, 0, 20, 21, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.151015}", "{'[4, 0, 0, 4, 0, 5, 0, 0, 20, 21, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.14772}", "{'[4, 0, 0, 4, 0, 5, 0, 0, 20, 21, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.149468}", "{'[4, 0, 0, 4, 0, 5, 0, 0, 20, 21, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.151099}", "{'[4, 0, 0, 4, 0, 5, 0, 0, 20, 21, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.150957}", "{'[4, 0, 0, 4, 0, 5, 0, 0, 20, 21, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.15101}", "{'[4, 0, 0, 4, 0, 5, 0, 0, 20, 21, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.147081}", "{'[4, 0, 0, 4, 0, 5, 0, 0, 20, 21, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.144265}", "{'[4, 0, 0, 4, 0, 5, 0, 0, 20, 21, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.144143}", "{'[4, 0, 0, 4, 0, 5, 0, 0, 20, 21, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.146602}", "{'[4, 0, 0, 4, 0, 5, 0, 0, 20, 21, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.14779}", "{'[4, 0, 0, 4, 0, 5, 0, 0, 20, 21, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.149734}"]
returning from 'run': {'[4, 0, 0, 4, 0, 5, 0, 0, 20, 21, 0, 29, 0, 0, 2, 0, 0, 1]': ([0.149583, 0.151122, 0.150969, 0.151084, 0.151128, 0.148363, 0.147715, 0.148166, 0.147865, 0.147589, 0.149107, 0.149253, 0.151088, 0.15071, 0.147918, 0.150173, 0.151023, 0.151076, 0.151015, 0.14772, 0.149468, 0.151099, 0.150957, 0.15101, 0.147081, 0.144265, 0.144143, 0.146602, 0.14779, 0.149734], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 0, 0, 4, 0, 5, 0, 0, 20, 21, 0, 29, 0, 0, 2, 0, 0, 1]': ([0.149583, 0.151122, 0.150969, 0.151084, 0.151128, 0.148363, 0.147715, 0.148166, 0.147865, 0.147589, 0.149107, 0.149253, 0.151088, 0.15071, 0.147918, 0.150173, 0.151023, 0.151076, 0.151015, 0.14772, 0.149468, 0.151099, 0.150957, 0.15101, 0.147081, 0.144265, 0.144143, 0.146602, 0.14779, 0.149734], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = jjj
Code stats:
        Number of loops: 	63
        Max loop nest depth: 	3
        Additions: 		2696
        Multiplications: 	1122
        Divisions: 		0
        Logical: 		0
        Reads: 			5316
        Writes: 		952
        Comparisons:		63
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest37.exe __orio_perftest37.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest37.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest37.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest37.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest37.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
Code stats:
        Number of loops: 	50
        Max loop nest depth: 	5
        Additions: 		3692
        Multiplications: 	832
        Divisions: 		0
        Logical: 		0
        Reads: 			5444
        Writes: 		544
        Comparisons:		50
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest38.exe __orio_perftest38.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest38.exe  
Program Test Output: 
{'[3, 0, 4, 1, 0, 4, 1, 1, 0, 6, 0, 23, 1, 0, 0, 0, 0, 0]' : 0.111531}
{'[3, 0, 4, 1, 0, 4, 1, 1, 0, 6, 0, 23, 1, 0, 0, 0, 0, 0]' : 0.111705}
{'[3, 0, 4, 1, 0, 4, 1, 1, 0, 6, 0, 23, 1, 0, 0, 0, 0, 0]' : 0.113958}
{'[3, 0, 4, 1, 0, 4, 1, 1, 0, 6, 0, 23, 1, 0, 0, 0, 0, 0]' : 0.114178}
{'[3, 0, 4, 1, 0, 4, 1, 1, 0, 6, 0, 23, 1, 0, 0, 0, 0, 0]' : 0.114287}
{'[3, 0, 4, 1, 0, 4, 1, 1, 0, 6, 0, 23, 1, 0, 0, 0, 0, 0]' : 0.114112}
{'[3, 0, 4, 1, 0, 4, 1, 1, 0, 6, 0, 23, 1, 0, 0, 0, 0, 0]' : 0.114718}
{'[3, 0, 4, 1, 0, 4, 1, 1, 0, 6, 0, 23, 1, 0, 0, 0, 0, 0]' : 0.114108}
{'[3, 0, 4, 1, 0, 4, 1, 1, 0, 6, 0, 23, 1, 0, 0, 0, 0, 0]' : 0.114122}
{'[3, 0, 4, 1, 0, 4, 1, 1, 0, 6, 0, 23, 1, 0, 0, 0, 0, 0]' : 0.114057}
{'[3, 0, 4, 1, 0, 4, 1, 1, 0, 6, 0, 23, 1, 0, 0, 0, 0, 0]' : 0.114167}
{'[3, 0, 4, 1, 0, 4, 1, 1, 0, 6, 0, 23, 1, 0, 0, 0, 0, 0]' : 0.113922}
{'[3, 0, 4, 1, 0, 4, 1, 1, 0, 6, 0, 23, 1, 0, 0, 0, 0, 0]' : 0.114037}
{'[3, 0, 4, 1, 0, 4, 1, 1, 0, 6, 0, 23, 1, 0, 0, 0, 0, 0]' : 0.113891}
{'[3, 0, 4, 1, 0, 4, 1, 1, 0, 6, 0, 23, 1, 0, 0, 0, 0, 0]' : 0.1138}
{'[3, 0, 4, 1, 0, 4, 1, 1, 0, 6, 0, 23, 1, 0, 0, 0, 0, 0]' : 0.1143}
{'[3, 0, 4, 1, 0, 4, 1, 1, 0, 6, 0, 23, 1, 0, 0, 0, 0, 0]' : 0.112687}
{'[3, 0, 4, 1, 0, 4, 1, 1, 0, 6, 0, 23, 1, 0, 0, 0, 0, 0]' : 0.111523}
{'[3, 0, 4, 1, 0, 4, 1, 1, 0, 6, 0, 23, 1, 0, 0, 0, 0, 0]' : 0.111155}
{'[3, 0, 4, 1, 0, 4, 1, 1, 0, 6, 0, 23, 1, 0, 0, 0, 0, 0]' : 0.113345}
{'[3, 0, 4, 1, 0, 4, 1, 1, 0, 6, 0, 23, 1, 0, 0, 0, 0, 0]' : 0.11397}
{'[3, 0, 4, 1, 0, 4, 1, 1, 0, 6, 0, 23, 1, 0, 0, 0, 0, 0]' : 0.11412}
{'[3, 0, 4, 1, 0, 4, 1, 1, 0, 6, 0, 23, 1, 0, 0, 0, 0, 0]' : 0.113833}
{'[3, 0, 4, 1, 0, 4, 1, 1, 0, 6, 0, 23, 1, 0, 0, 0, 0, 0]' : 0.114172}
{'[3, 0, 4, 1, 0, 4, 1, 1, 0, 6, 0, 23, 1, 0, 0, 0, 0, 0]' : 0.11395}
{'[3, 0, 4, 1, 0, 4, 1, 1, 0, 6, 0, 23, 1, 0, 0, 0, 0, 0]' : 0.114065}
{'[3, 0, 4, 1, 0, 4, 1, 1, 0, 6, 0, 23, 1, 0, 0, 0, 0, 0]' : 0.114074}
{'[3, 0, 4, 1, 0, 4, 1, 1, 0, 6, 0, 23, 1, 0, 0, 0, 0, 0]' : 0.113956}
{'[3, 0, 4, 1, 0, 4, 1, 1, 0, 6, 0, 23, 1, 0, 0, 0, 0, 0]' : 0.114301}
{'[3, 0, 4, 1, 0, 4, 1, 1, 0, 6, 0, 23, 1, 0, 0, 0, 0, 0]' : 0.113892}

out:
 ["{'[3, 0, 4, 1, 0, 4, 1, 1, 0, 6, 0, 23, 1, 0, 0, 0, 0, 0]' : 0.111531}", "{'[3, 0, 4, 1, 0, 4, 1, 1, 0, 6, 0, 23, 1, 0, 0, 0, 0, 0]' : 0.111705}", "{'[3, 0, 4, 1, 0, 4, 1, 1, 0, 6, 0, 23, 1, 0, 0, 0, 0, 0]' : 0.113958}", "{'[3, 0, 4, 1, 0, 4, 1, 1, 0, 6, 0, 23, 1, 0, 0, 0, 0, 0]' : 0.114178}", "{'[3, 0, 4, 1, 0, 4, 1, 1, 0, 6, 0, 23, 1, 0, 0, 0, 0, 0]' : 0.114287}", "{'[3, 0, 4, 1, 0, 4, 1, 1, 0, 6, 0, 23, 1, 0, 0, 0, 0, 0]' : 0.114112}", "{'[3, 0, 4, 1, 0, 4, 1, 1, 0, 6, 0, 23, 1, 0, 0, 0, 0, 0]' : 0.114718}", "{'[3, 0, 4, 1, 0, 4, 1, 1, 0, 6, 0, 23, 1, 0, 0, 0, 0, 0]' : 0.114108}", "{'[3, 0, 4, 1, 0, 4, 1, 1, 0, 6, 0, 23, 1, 0, 0, 0, 0, 0]' : 0.114122}", "{'[3, 0, 4, 1, 0, 4, 1, 1, 0, 6, 0, 23, 1, 0, 0, 0, 0, 0]' : 0.114057}", "{'[3, 0, 4, 1, 0, 4, 1, 1, 0, 6, 0, 23, 1, 0, 0, 0, 0, 0]' : 0.114167}", "{'[3, 0, 4, 1, 0, 4, 1, 1, 0, 6, 0, 23, 1, 0, 0, 0, 0, 0]' : 0.113922}", "{'[3, 0, 4, 1, 0, 4, 1, 1, 0, 6, 0, 23, 1, 0, 0, 0, 0, 0]' : 0.114037}", "{'[3, 0, 4, 1, 0, 4, 1, 1, 0, 6, 0, 23, 1, 0, 0, 0, 0, 0]' : 0.113891}", "{'[3, 0, 4, 1, 0, 4, 1, 1, 0, 6, 0, 23, 1, 0, 0, 0, 0, 0]' : 0.1138}", "{'[3, 0, 4, 1, 0, 4, 1, 1, 0, 6, 0, 23, 1, 0, 0, 0, 0, 0]' : 0.1143}", "{'[3, 0, 4, 1, 0, 4, 1, 1, 0, 6, 0, 23, 1, 0, 0, 0, 0, 0]' : 0.112687}", "{'[3, 0, 4, 1, 0, 4, 1, 1, 0, 6, 0, 23, 1, 0, 0, 0, 0, 0]' : 0.111523}", "{'[3, 0, 4, 1, 0, 4, 1, 1, 0, 6, 0, 23, 1, 0, 0, 0, 0, 0]' : 0.111155}", "{'[3, 0, 4, 1, 0, 4, 1, 1, 0, 6, 0, 23, 1, 0, 0, 0, 0, 0]' : 0.113345}", "{'[3, 0, 4, 1, 0, 4, 1, 1, 0, 6, 0, 23, 1, 0, 0, 0, 0, 0]' : 0.11397}", "{'[3, 0, 4, 1, 0, 4, 1, 1, 0, 6, 0, 23, 1, 0, 0, 0, 0, 0]' : 0.11412}", "{'[3, 0, 4, 1, 0, 4, 1, 1, 0, 6, 0, 23, 1, 0, 0, 0, 0, 0]' : 0.113833}", "{'[3, 0, 4, 1, 0, 4, 1, 1, 0, 6, 0, 23, 1, 0, 0, 0, 0, 0]' : 0.114172}", "{'[3, 0, 4, 1, 0, 4, 1, 1, 0, 6, 0, 23, 1, 0, 0, 0, 0, 0]' : 0.11395}", "{'[3, 0, 4, 1, 0, 4, 1, 1, 0, 6, 0, 23, 1, 0, 0, 0, 0, 0]' : 0.114065}", "{'[3, 0, 4, 1, 0, 4, 1, 1, 0, 6, 0, 23, 1, 0, 0, 0, 0, 0]' : 0.114074}", "{'[3, 0, 4, 1, 0, 4, 1, 1, 0, 6, 0, 23, 1, 0, 0, 0, 0, 0]' : 0.113956}", "{'[3, 0, 4, 1, 0, 4, 1, 1, 0, 6, 0, 23, 1, 0, 0, 0, 0, 0]' : 0.114301}", "{'[3, 0, 4, 1, 0, 4, 1, 1, 0, 6, 0, 23, 1, 0, 0, 0, 0, 0]' : 0.113892}"]
returning from 'run': {'[3, 0, 4, 1, 0, 4, 1, 1, 0, 6, 0, 23, 1, 0, 0, 0, 0, 0]': ([0.111531, 0.111705, 0.113958, 0.114178, 0.114287, 0.114112, 0.114718, 0.114108, 0.114122, 0.114057, 0.114167, 0.113922, 0.114037, 0.113891, 0.1138, 0.1143, 0.112687, 0.111523, 0.111155, 0.113345, 0.11397, 0.11412, 0.113833, 0.114172, 0.11395, 0.114065, 0.114074, 0.113956, 0.114301, 0.113892], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 0, 4, 1, 0, 4, 1, 1, 0, 6, 0, 23, 1, 0, 0, 0, 0, 0]': ([0.111531, 0.111705, 0.113958, 0.114178, 0.114287, 0.114112, 0.114718, 0.114108, 0.114122, 0.114057, 0.114167, 0.113922, 0.114037, 0.113891, 0.1138, 0.1143, 0.112687, 0.111523, 0.111155, 0.113345, 0.11397, 0.11412, 0.113833, 0.114172, 0.11395, 0.114065, 0.114074, 0.113956, 0.114301, 0.113892], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	105
        Max loop nest depth: 	4
        Additions: 		3086
        Multiplications: 	648
        Divisions: 		0
        Logical: 		0
        Reads: 			5098
        Writes: 		665
        Comparisons:		105
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest39.exe __orio_perftest39.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest39.exe  
Program Test Output: 
{'[0, 0, 6, 5, 1, 4, 1, 1, 7, 26, 0, 12, 1, 0, 1, 0, 0, 1]' : 0.12117}
{'[0, 0, 6, 5, 1, 4, 1, 1, 7, 26, 0, 12, 1, 0, 1, 0, 0, 1]' : 0.120939}
{'[0, 0, 6, 5, 1, 4, 1, 1, 7, 26, 0, 12, 1, 0, 1, 0, 0, 1]' : 0.121067}
{'[0, 0, 6, 5, 1, 4, 1, 1, 7, 26, 0, 12, 1, 0, 1, 0, 0, 1]' : 0.120943}
{'[0, 0, 6, 5, 1, 4, 1, 1, 7, 26, 0, 12, 1, 0, 1, 0, 0, 1]' : 0.11874}
{'[0, 0, 6, 5, 1, 4, 1, 1, 7, 26, 0, 12, 1, 0, 1, 0, 0, 1]' : 0.107437}
{'[0, 0, 6, 5, 1, 4, 1, 1, 7, 26, 0, 12, 1, 0, 1, 0, 0, 1]' : 0.10865}
{'[0, 0, 6, 5, 1, 4, 1, 1, 7, 26, 0, 12, 1, 0, 1, 0, 0, 1]' : 0.109766}
{'[0, 0, 6, 5, 1, 4, 1, 1, 7, 26, 0, 12, 1, 0, 1, 0, 0, 1]' : 0.109196}
{'[0, 0, 6, 5, 1, 4, 1, 1, 7, 26, 0, 12, 1, 0, 1, 0, 0, 1]' : 0.108991}
{'[0, 0, 6, 5, 1, 4, 1, 1, 7, 26, 0, 12, 1, 0, 1, 0, 0, 1]' : 0.10957}
{'[0, 0, 6, 5, 1, 4, 1, 1, 7, 26, 0, 12, 1, 0, 1, 0, 0, 1]' : 0.10974}
{'[0, 0, 6, 5, 1, 4, 1, 1, 7, 26, 0, 12, 1, 0, 1, 0, 0, 1]' : 0.109955}
{'[0, 0, 6, 5, 1, 4, 1, 1, 7, 26, 0, 12, 1, 0, 1, 0, 0, 1]' : 0.1097}
{'[0, 0, 6, 5, 1, 4, 1, 1, 7, 26, 0, 12, 1, 0, 1, 0, 0, 1]' : 0.107374}
{'[0, 0, 6, 5, 1, 4, 1, 1, 7, 26, 0, 12, 1, 0, 1, 0, 0, 1]' : 0.107304}
{'[0, 0, 6, 5, 1, 4, 1, 1, 7, 26, 0, 12, 1, 0, 1, 0, 0, 1]' : 0.107538}
{'[0, 0, 6, 5, 1, 4, 1, 1, 7, 26, 0, 12, 1, 0, 1, 0, 0, 1]' : 0.107583}
{'[0, 0, 6, 5, 1, 4, 1, 1, 7, 26, 0, 12, 1, 0, 1, 0, 0, 1]' : 0.108414}
{'[0, 0, 6, 5, 1, 4, 1, 1, 7, 26, 0, 12, 1, 0, 1, 0, 0, 1]' : 0.10976}
{'[0, 0, 6, 5, 1, 4, 1, 1, 7, 26, 0, 12, 1, 0, 1, 0, 0, 1]' : 0.109782}
{'[0, 0, 6, 5, 1, 4, 1, 1, 7, 26, 0, 12, 1, 0, 1, 0, 0, 1]' : 0.109773}
{'[0, 0, 6, 5, 1, 4, 1, 1, 7, 26, 0, 12, 1, 0, 1, 0, 0, 1]' : 0.10965}
{'[0, 0, 6, 5, 1, 4, 1, 1, 7, 26, 0, 12, 1, 0, 1, 0, 0, 1]' : 0.107674}
{'[0, 0, 6, 5, 1, 4, 1, 1, 7, 26, 0, 12, 1, 0, 1, 0, 0, 1]' : 0.107469}
{'[0, 0, 6, 5, 1, 4, 1, 1, 7, 26, 0, 12, 1, 0, 1, 0, 0, 1]' : 0.107813}
{'[0, 0, 6, 5, 1, 4, 1, 1, 7, 26, 0, 12, 1, 0, 1, 0, 0, 1]' : 0.109584}
{'[0, 0, 6, 5, 1, 4, 1, 1, 7, 26, 0, 12, 1, 0, 1, 0, 0, 1]' : 0.10981}
{'[0, 0, 6, 5, 1, 4, 1, 1, 7, 26, 0, 12, 1, 0, 1, 0, 0, 1]' : 0.108892}
{'[0, 0, 6, 5, 1, 4, 1, 1, 7, 26, 0, 12, 1, 0, 1, 0, 0, 1]' : 0.107568}

out:
 ["{'[0, 0, 6, 5, 1, 4, 1, 1, 7, 26, 0, 12, 1, 0, 1, 0, 0, 1]' : 0.12117}", "{'[0, 0, 6, 5, 1, 4, 1, 1, 7, 26, 0, 12, 1, 0, 1, 0, 0, 1]' : 0.120939}", "{'[0, 0, 6, 5, 1, 4, 1, 1, 7, 26, 0, 12, 1, 0, 1, 0, 0, 1]' : 0.121067}", "{'[0, 0, 6, 5, 1, 4, 1, 1, 7, 26, 0, 12, 1, 0, 1, 0, 0, 1]' : 0.120943}", "{'[0, 0, 6, 5, 1, 4, 1, 1, 7, 26, 0, 12, 1, 0, 1, 0, 0, 1]' : 0.11874}", "{'[0, 0, 6, 5, 1, 4, 1, 1, 7, 26, 0, 12, 1, 0, 1, 0, 0, 1]' : 0.107437}", "{'[0, 0, 6, 5, 1, 4, 1, 1, 7, 26, 0, 12, 1, 0, 1, 0, 0, 1]' : 0.10865}", "{'[0, 0, 6, 5, 1, 4, 1, 1, 7, 26, 0, 12, 1, 0, 1, 0, 0, 1]' : 0.109766}", "{'[0, 0, 6, 5, 1, 4, 1, 1, 7, 26, 0, 12, 1, 0, 1, 0, 0, 1]' : 0.109196}", "{'[0, 0, 6, 5, 1, 4, 1, 1, 7, 26, 0, 12, 1, 0, 1, 0, 0, 1]' : 0.108991}", "{'[0, 0, 6, 5, 1, 4, 1, 1, 7, 26, 0, 12, 1, 0, 1, 0, 0, 1]' : 0.10957}", "{'[0, 0, 6, 5, 1, 4, 1, 1, 7, 26, 0, 12, 1, 0, 1, 0, 0, 1]' : 0.10974}", "{'[0, 0, 6, 5, 1, 4, 1, 1, 7, 26, 0, 12, 1, 0, 1, 0, 0, 1]' : 0.109955}", "{'[0, 0, 6, 5, 1, 4, 1, 1, 7, 26, 0, 12, 1, 0, 1, 0, 0, 1]' : 0.1097}", "{'[0, 0, 6, 5, 1, 4, 1, 1, 7, 26, 0, 12, 1, 0, 1, 0, 0, 1]' : 0.107374}", "{'[0, 0, 6, 5, 1, 4, 1, 1, 7, 26, 0, 12, 1, 0, 1, 0, 0, 1]' : 0.107304}", "{'[0, 0, 6, 5, 1, 4, 1, 1, 7, 26, 0, 12, 1, 0, 1, 0, 0, 1]' : 0.107538}", "{'[0, 0, 6, 5, 1, 4, 1, 1, 7, 26, 0, 12, 1, 0, 1, 0, 0, 1]' : 0.107583}", "{'[0, 0, 6, 5, 1, 4, 1, 1, 7, 26, 0, 12, 1, 0, 1, 0, 0, 1]' : 0.108414}", "{'[0, 0, 6, 5, 1, 4, 1, 1, 7, 26, 0, 12, 1, 0, 1, 0, 0, 1]' : 0.10976}", "{'[0, 0, 6, 5, 1, 4, 1, 1, 7, 26, 0, 12, 1, 0, 1, 0, 0, 1]' : 0.109782}", "{'[0, 0, 6, 5, 1, 4, 1, 1, 7, 26, 0, 12, 1, 0, 1, 0, 0, 1]' : 0.109773}", "{'[0, 0, 6, 5, 1, 4, 1, 1, 7, 26, 0, 12, 1, 0, 1, 0, 0, 1]' : 0.10965}", "{'[0, 0, 6, 5, 1, 4, 1, 1, 7, 26, 0, 12, 1, 0, 1, 0, 0, 1]' : 0.107674}", "{'[0, 0, 6, 5, 1, 4, 1, 1, 7, 26, 0, 12, 1, 0, 1, 0, 0, 1]' : 0.107469}", "{'[0, 0, 6, 5, 1, 4, 1, 1, 7, 26, 0, 12, 1, 0, 1, 0, 0, 1]' : 0.107813}", "{'[0, 0, 6, 5, 1, 4, 1, 1, 7, 26, 0, 12, 1, 0, 1, 0, 0, 1]' : 0.109584}", "{'[0, 0, 6, 5, 1, 4, 1, 1, 7, 26, 0, 12, 1, 0, 1, 0, 0, 1]' : 0.10981}", "{'[0, 0, 6, 5, 1, 4, 1, 1, 7, 26, 0, 12, 1, 0, 1, 0, 0, 1]' : 0.108892}", "{'[0, 0, 6, 5, 1, 4, 1, 1, 7, 26, 0, 12, 1, 0, 1, 0, 0, 1]' : 0.107568}"]
returning from 'run': {'[0, 0, 6, 5, 1, 4, 1, 1, 7, 26, 0, 12, 1, 0, 1, 0, 0, 1]': ([0.12117, 0.120939, 0.121067, 0.120943, 0.11874, 0.107437, 0.10865, 0.109766, 0.109196, 0.108991, 0.10957, 0.10974, 0.109955, 0.1097, 0.107374, 0.107304, 0.107538, 0.107583, 0.108414, 0.10976, 0.109782, 0.109773, 0.10965, 0.107674, 0.107469, 0.107813, 0.109584, 0.10981, 0.108892, 0.107568], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 6, 5, 1, 4, 1, 1, 7, 26, 0, 12, 1, 0, 1, 0, 0, 1]': ([0.12117, 0.120939, 0.121067, 0.120943, 0.11874, 0.107437, 0.10865, 0.109766, 0.109196, 0.108991, 0.10957, 0.10974, 0.109955, 0.1097, 0.107374, 0.107304, 0.107538, 0.107583, 0.108414, 0.10976, 0.109782, 0.109773, 0.10965, 0.107674, 0.107469, 0.107813, 0.109584, 0.10981, 0.108892, 0.107568], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	59
        Max loop nest depth: 	6
        Additions: 		2521
        Multiplications: 	882
        Divisions: 		0
        Logical: 		0
        Reads: 			4664
        Writes: 		801
        Comparisons:		59
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest40.exe __orio_perftest40.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest40.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest40.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest40.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest40.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	5
        Additions: 		886
        Multiplications: 	414
        Divisions: 		0
        Logical: 		0
        Reads: 			1795
        Writes: 		314
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest41.exe __orio_perftest41.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest41.exe  
Program Test Output: 
{'[3, 6, 6, 1, 5, 0, 0, 0, 0, 0, 10, 1, 1, 1, 0, 1, 0, 1]' : 0.0882981}
{'[3, 6, 6, 1, 5, 0, 0, 0, 0, 0, 10, 1, 1, 1, 0, 1, 0, 1]' : 0.088119}
{'[3, 6, 6, 1, 5, 0, 0, 0, 0, 0, 10, 1, 1, 1, 0, 1, 0, 1]' : 0.088212}
{'[3, 6, 6, 1, 5, 0, 0, 0, 0, 0, 10, 1, 1, 1, 0, 1, 0, 1]' : 0.08829}
{'[3, 6, 6, 1, 5, 0, 0, 0, 0, 0, 10, 1, 1, 1, 0, 1, 0, 1]' : 0.088218}
{'[3, 6, 6, 1, 5, 0, 0, 0, 0, 0, 10, 1, 1, 1, 0, 1, 0, 1]' : 0.0877271}
{'[3, 6, 6, 1, 5, 0, 0, 0, 0, 0, 10, 1, 1, 1, 0, 1, 0, 1]' : 0.0876501}
{'[3, 6, 6, 1, 5, 0, 0, 0, 0, 0, 10, 1, 1, 1, 0, 1, 0, 1]' : 0.08757}
{'[3, 6, 6, 1, 5, 0, 0, 0, 0, 0, 10, 1, 1, 1, 0, 1, 0, 1]' : 0.0877552}
{'[3, 6, 6, 1, 5, 0, 0, 0, 0, 0, 10, 1, 1, 1, 0, 1, 0, 1]' : 0.087692}
{'[3, 6, 6, 1, 5, 0, 0, 0, 0, 0, 10, 1, 1, 1, 0, 1, 0, 1]' : 0.0876582}
{'[3, 6, 6, 1, 5, 0, 0, 0, 0, 0, 10, 1, 1, 1, 0, 1, 0, 1]' : 0.08763}
{'[3, 6, 6, 1, 5, 0, 0, 0, 0, 0, 10, 1, 1, 1, 0, 1, 0, 1]' : 0.0876639}
{'[3, 6, 6, 1, 5, 0, 0, 0, 0, 0, 10, 1, 1, 1, 0, 1, 0, 1]' : 0.0875342}
{'[3, 6, 6, 1, 5, 0, 0, 0, 0, 0, 10, 1, 1, 1, 0, 1, 0, 1]' : 0.087625}
{'[3, 6, 6, 1, 5, 0, 0, 0, 0, 0, 10, 1, 1, 1, 0, 1, 0, 1]' : 0.0878429}
{'[3, 6, 6, 1, 5, 0, 0, 0, 0, 0, 10, 1, 1, 1, 0, 1, 0, 1]' : 0.0876279}
{'[3, 6, 6, 1, 5, 0, 0, 0, 0, 0, 10, 1, 1, 1, 0, 1, 0, 1]' : 0.0876372}
{'[3, 6, 6, 1, 5, 0, 0, 0, 0, 0, 10, 1, 1, 1, 0, 1, 0, 1]' : 0.087642}
{'[3, 6, 6, 1, 5, 0, 0, 0, 0, 0, 10, 1, 1, 1, 0, 1, 0, 1]' : 0.087759}
{'[3, 6, 6, 1, 5, 0, 0, 0, 0, 0, 10, 1, 1, 1, 0, 1, 0, 1]' : 0.0879171}
{'[3, 6, 6, 1, 5, 0, 0, 0, 0, 0, 10, 1, 1, 1, 0, 1, 0, 1]' : 0.087728}
{'[3, 6, 6, 1, 5, 0, 0, 0, 0, 0, 10, 1, 1, 1, 0, 1, 0, 1]' : 0.087666}
{'[3, 6, 6, 1, 5, 0, 0, 0, 0, 0, 10, 1, 1, 1, 0, 1, 0, 1]' : 0.0876548}
{'[3, 6, 6, 1, 5, 0, 0, 0, 0, 0, 10, 1, 1, 1, 0, 1, 0, 1]' : 0.0876329}
{'[3, 6, 6, 1, 5, 0, 0, 0, 0, 0, 10, 1, 1, 1, 0, 1, 0, 1]' : 0.0877051}
{'[3, 6, 6, 1, 5, 0, 0, 0, 0, 0, 10, 1, 1, 1, 0, 1, 0, 1]' : 0.087671}
{'[3, 6, 6, 1, 5, 0, 0, 0, 0, 0, 10, 1, 1, 1, 0, 1, 0, 1]' : 0.087822}
{'[3, 6, 6, 1, 5, 0, 0, 0, 0, 0, 10, 1, 1, 1, 0, 1, 0, 1]' : 0.0876479}
{'[3, 6, 6, 1, 5, 0, 0, 0, 0, 0, 10, 1, 1, 1, 0, 1, 0, 1]' : 0.0876341}

out:
 ["{'[3, 6, 6, 1, 5, 0, 0, 0, 0, 0, 10, 1, 1, 1, 0, 1, 0, 1]' : 0.0882981}", "{'[3, 6, 6, 1, 5, 0, 0, 0, 0, 0, 10, 1, 1, 1, 0, 1, 0, 1]' : 0.088119}", "{'[3, 6, 6, 1, 5, 0, 0, 0, 0, 0, 10, 1, 1, 1, 0, 1, 0, 1]' : 0.088212}", "{'[3, 6, 6, 1, 5, 0, 0, 0, 0, 0, 10, 1, 1, 1, 0, 1, 0, 1]' : 0.08829}", "{'[3, 6, 6, 1, 5, 0, 0, 0, 0, 0, 10, 1, 1, 1, 0, 1, 0, 1]' : 0.088218}", "{'[3, 6, 6, 1, 5, 0, 0, 0, 0, 0, 10, 1, 1, 1, 0, 1, 0, 1]' : 0.0877271}", "{'[3, 6, 6, 1, 5, 0, 0, 0, 0, 0, 10, 1, 1, 1, 0, 1, 0, 1]' : 0.0876501}", "{'[3, 6, 6, 1, 5, 0, 0, 0, 0, 0, 10, 1, 1, 1, 0, 1, 0, 1]' : 0.08757}", "{'[3, 6, 6, 1, 5, 0, 0, 0, 0, 0, 10, 1, 1, 1, 0, 1, 0, 1]' : 0.0877552}", "{'[3, 6, 6, 1, 5, 0, 0, 0, 0, 0, 10, 1, 1, 1, 0, 1, 0, 1]' : 0.087692}", "{'[3, 6, 6, 1, 5, 0, 0, 0, 0, 0, 10, 1, 1, 1, 0, 1, 0, 1]' : 0.0876582}", "{'[3, 6, 6, 1, 5, 0, 0, 0, 0, 0, 10, 1, 1, 1, 0, 1, 0, 1]' : 0.08763}", "{'[3, 6, 6, 1, 5, 0, 0, 0, 0, 0, 10, 1, 1, 1, 0, 1, 0, 1]' : 0.0876639}", "{'[3, 6, 6, 1, 5, 0, 0, 0, 0, 0, 10, 1, 1, 1, 0, 1, 0, 1]' : 0.0875342}", "{'[3, 6, 6, 1, 5, 0, 0, 0, 0, 0, 10, 1, 1, 1, 0, 1, 0, 1]' : 0.087625}", "{'[3, 6, 6, 1, 5, 0, 0, 0, 0, 0, 10, 1, 1, 1, 0, 1, 0, 1]' : 0.0878429}", "{'[3, 6, 6, 1, 5, 0, 0, 0, 0, 0, 10, 1, 1, 1, 0, 1, 0, 1]' : 0.0876279}", "{'[3, 6, 6, 1, 5, 0, 0, 0, 0, 0, 10, 1, 1, 1, 0, 1, 0, 1]' : 0.0876372}", "{'[3, 6, 6, 1, 5, 0, 0, 0, 0, 0, 10, 1, 1, 1, 0, 1, 0, 1]' : 0.087642}", "{'[3, 6, 6, 1, 5, 0, 0, 0, 0, 0, 10, 1, 1, 1, 0, 1, 0, 1]' : 0.087759}", "{'[3, 6, 6, 1, 5, 0, 0, 0, 0, 0, 10, 1, 1, 1, 0, 1, 0, 1]' : 0.0879171}", "{'[3, 6, 6, 1, 5, 0, 0, 0, 0, 0, 10, 1, 1, 1, 0, 1, 0, 1]' : 0.087728}", "{'[3, 6, 6, 1, 5, 0, 0, 0, 0, 0, 10, 1, 1, 1, 0, 1, 0, 1]' : 0.087666}", "{'[3, 6, 6, 1, 5, 0, 0, 0, 0, 0, 10, 1, 1, 1, 0, 1, 0, 1]' : 0.0876548}", "{'[3, 6, 6, 1, 5, 0, 0, 0, 0, 0, 10, 1, 1, 1, 0, 1, 0, 1]' : 0.0876329}", "{'[3, 6, 6, 1, 5, 0, 0, 0, 0, 0, 10, 1, 1, 1, 0, 1, 0, 1]' : 0.0877051}", "{'[3, 6, 6, 1, 5, 0, 0, 0, 0, 0, 10, 1, 1, 1, 0, 1, 0, 1]' : 0.087671}", "{'[3, 6, 6, 1, 5, 0, 0, 0, 0, 0, 10, 1, 1, 1, 0, 1, 0, 1]' : 0.087822}", "{'[3, 6, 6, 1, 5, 0, 0, 0, 0, 0, 10, 1, 1, 1, 0, 1, 0, 1]' : 0.0876479}", "{'[3, 6, 6, 1, 5, 0, 0, 0, 0, 0, 10, 1, 1, 1, 0, 1, 0, 1]' : 0.0876341}"]
returning from 'run': {'[3, 6, 6, 1, 5, 0, 0, 0, 0, 0, 10, 1, 1, 1, 0, 1, 0, 1]': ([0.0882981, 0.088119, 0.088212, 0.08829, 0.088218, 0.0877271, 0.0876501, 0.08757, 0.0877552, 0.087692, 0.0876582, 0.08763, 0.0876639, 0.0875342, 0.087625, 0.0878429, 0.0876279, 0.0876372, 0.087642, 0.087759, 0.0879171, 0.087728, 0.087666, 0.0876548, 0.0876329, 0.0877051, 0.087671, 0.087822, 0.0876479, 0.0876341], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 6, 6, 1, 5, 0, 0, 0, 0, 0, 10, 1, 1, 1, 0, 1, 0, 1]': ([0.0882981, 0.088119, 0.088212, 0.08829, 0.088218, 0.0877271, 0.0876501, 0.08757, 0.0877552, 0.087692, 0.0876582, 0.08763, 0.0876639, 0.0875342, 0.087625, 0.0878429, 0.0876279, 0.0876372, 0.087642, 0.087759, 0.0879171, 0.087728, 0.087666, 0.0876548, 0.0876329, 0.0877051, 0.087671, 0.087822, 0.0876479, 0.0876341], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	5
        Additions: 		531
        Multiplications: 	126
        Divisions: 		0
        Logical: 		0
        Reads: 			957
        Writes: 		156
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest42.exe __orio_perftest42.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest42.exe  
Program Test Output: 
{'[0, 2, 6, 2, 6, 5, 1, 0, 29, 5, 14, 0, 0, 1, 0, 0, 0, 0]' : 0.141294}
{'[0, 2, 6, 2, 6, 5, 1, 0, 29, 5, 14, 0, 0, 1, 0, 0, 0, 0]' : 0.141204}
{'[0, 2, 6, 2, 6, 5, 1, 0, 29, 5, 14, 0, 0, 1, 0, 0, 0, 0]' : 0.141168}
{'[0, 2, 6, 2, 6, 5, 1, 0, 29, 5, 14, 0, 0, 1, 0, 0, 0, 0]' : 0.141133}
{'[0, 2, 6, 2, 6, 5, 1, 0, 29, 5, 14, 0, 0, 1, 0, 0, 0, 0]' : 0.14105}
{'[0, 2, 6, 2, 6, 5, 1, 0, 29, 5, 14, 0, 0, 1, 0, 0, 0, 0]' : 0.141137}
{'[0, 2, 6, 2, 6, 5, 1, 0, 29, 5, 14, 0, 0, 1, 0, 0, 0, 0]' : 0.141561}
{'[0, 2, 6, 2, 6, 5, 1, 0, 29, 5, 14, 0, 0, 1, 0, 0, 0, 0]' : 0.141235}
{'[0, 2, 6, 2, 6, 5, 1, 0, 29, 5, 14, 0, 0, 1, 0, 0, 0, 0]' : 0.141017}
{'[0, 2, 6, 2, 6, 5, 1, 0, 29, 5, 14, 0, 0, 1, 0, 0, 0, 0]' : 0.141228}
{'[0, 2, 6, 2, 6, 5, 1, 0, 29, 5, 14, 0, 0, 1, 0, 0, 0, 0]' : 0.14108}
{'[0, 2, 6, 2, 6, 5, 1, 0, 29, 5, 14, 0, 0, 1, 0, 0, 0, 0]' : 0.141055}
{'[0, 2, 6, 2, 6, 5, 1, 0, 29, 5, 14, 0, 0, 1, 0, 0, 0, 0]' : 0.141144}
{'[0, 2, 6, 2, 6, 5, 1, 0, 29, 5, 14, 0, 0, 1, 0, 0, 0, 0]' : 0.141462}
{'[0, 2, 6, 2, 6, 5, 1, 0, 29, 5, 14, 0, 0, 1, 0, 0, 0, 0]' : 0.141088}
{'[0, 2, 6, 2, 6, 5, 1, 0, 29, 5, 14, 0, 0, 1, 0, 0, 0, 0]' : 0.141229}
{'[0, 2, 6, 2, 6, 5, 1, 0, 29, 5, 14, 0, 0, 1, 0, 0, 0, 0]' : 0.141614}
{'[0, 2, 6, 2, 6, 5, 1, 0, 29, 5, 14, 0, 0, 1, 0, 0, 0, 0]' : 0.14561}
{'[0, 2, 6, 2, 6, 5, 1, 0, 29, 5, 14, 0, 0, 1, 0, 0, 0, 0]' : 0.145679}
{'[0, 2, 6, 2, 6, 5, 1, 0, 29, 5, 14, 0, 0, 1, 0, 0, 0, 0]' : 0.145531}
{'[0, 2, 6, 2, 6, 5, 1, 0, 29, 5, 14, 0, 0, 1, 0, 0, 0, 0]' : 0.145021}
{'[0, 2, 6, 2, 6, 5, 1, 0, 29, 5, 14, 0, 0, 1, 0, 0, 0, 0]' : 0.14119}
{'[0, 2, 6, 2, 6, 5, 1, 0, 29, 5, 14, 0, 0, 1, 0, 0, 0, 0]' : 0.141187}
{'[0, 2, 6, 2, 6, 5, 1, 0, 29, 5, 14, 0, 0, 1, 0, 0, 0, 0]' : 0.141148}
{'[0, 2, 6, 2, 6, 5, 1, 0, 29, 5, 14, 0, 0, 1, 0, 0, 0, 0]' : 0.141087}
{'[0, 2, 6, 2, 6, 5, 1, 0, 29, 5, 14, 0, 0, 1, 0, 0, 0, 0]' : 0.141058}
{'[0, 2, 6, 2, 6, 5, 1, 0, 29, 5, 14, 0, 0, 1, 0, 0, 0, 0]' : 0.141176}
{'[0, 2, 6, 2, 6, 5, 1, 0, 29, 5, 14, 0, 0, 1, 0, 0, 0, 0]' : 0.142691}
{'[0, 2, 6, 2, 6, 5, 1, 0, 29, 5, 14, 0, 0, 1, 0, 0, 0, 0]' : 0.141238}
{'[0, 2, 6, 2, 6, 5, 1, 0, 29, 5, 14, 0, 0, 1, 0, 0, 0, 0]' : 0.141106}

out:
 ["{'[0, 2, 6, 2, 6, 5, 1, 0, 29, 5, 14, 0, 0, 1, 0, 0, 0, 0]' : 0.141294}", "{'[0, 2, 6, 2, 6, 5, 1, 0, 29, 5, 14, 0, 0, 1, 0, 0, 0, 0]' : 0.141204}", "{'[0, 2, 6, 2, 6, 5, 1, 0, 29, 5, 14, 0, 0, 1, 0, 0, 0, 0]' : 0.141168}", "{'[0, 2, 6, 2, 6, 5, 1, 0, 29, 5, 14, 0, 0, 1, 0, 0, 0, 0]' : 0.141133}", "{'[0, 2, 6, 2, 6, 5, 1, 0, 29, 5, 14, 0, 0, 1, 0, 0, 0, 0]' : 0.14105}", "{'[0, 2, 6, 2, 6, 5, 1, 0, 29, 5, 14, 0, 0, 1, 0, 0, 0, 0]' : 0.141137}", "{'[0, 2, 6, 2, 6, 5, 1, 0, 29, 5, 14, 0, 0, 1, 0, 0, 0, 0]' : 0.141561}", "{'[0, 2, 6, 2, 6, 5, 1, 0, 29, 5, 14, 0, 0, 1, 0, 0, 0, 0]' : 0.141235}", "{'[0, 2, 6, 2, 6, 5, 1, 0, 29, 5, 14, 0, 0, 1, 0, 0, 0, 0]' : 0.141017}", "{'[0, 2, 6, 2, 6, 5, 1, 0, 29, 5, 14, 0, 0, 1, 0, 0, 0, 0]' : 0.141228}", "{'[0, 2, 6, 2, 6, 5, 1, 0, 29, 5, 14, 0, 0, 1, 0, 0, 0, 0]' : 0.14108}", "{'[0, 2, 6, 2, 6, 5, 1, 0, 29, 5, 14, 0, 0, 1, 0, 0, 0, 0]' : 0.141055}", "{'[0, 2, 6, 2, 6, 5, 1, 0, 29, 5, 14, 0, 0, 1, 0, 0, 0, 0]' : 0.141144}", "{'[0, 2, 6, 2, 6, 5, 1, 0, 29, 5, 14, 0, 0, 1, 0, 0, 0, 0]' : 0.141462}", "{'[0, 2, 6, 2, 6, 5, 1, 0, 29, 5, 14, 0, 0, 1, 0, 0, 0, 0]' : 0.141088}", "{'[0, 2, 6, 2, 6, 5, 1, 0, 29, 5, 14, 0, 0, 1, 0, 0, 0, 0]' : 0.141229}", "{'[0, 2, 6, 2, 6, 5, 1, 0, 29, 5, 14, 0, 0, 1, 0, 0, 0, 0]' : 0.141614}", "{'[0, 2, 6, 2, 6, 5, 1, 0, 29, 5, 14, 0, 0, 1, 0, 0, 0, 0]' : 0.14561}", "{'[0, 2, 6, 2, 6, 5, 1, 0, 29, 5, 14, 0, 0, 1, 0, 0, 0, 0]' : 0.145679}", "{'[0, 2, 6, 2, 6, 5, 1, 0, 29, 5, 14, 0, 0, 1, 0, 0, 0, 0]' : 0.145531}", "{'[0, 2, 6, 2, 6, 5, 1, 0, 29, 5, 14, 0, 0, 1, 0, 0, 0, 0]' : 0.145021}", "{'[0, 2, 6, 2, 6, 5, 1, 0, 29, 5, 14, 0, 0, 1, 0, 0, 0, 0]' : 0.14119}", "{'[0, 2, 6, 2, 6, 5, 1, 0, 29, 5, 14, 0, 0, 1, 0, 0, 0, 0]' : 0.141187}", "{'[0, 2, 6, 2, 6, 5, 1, 0, 29, 5, 14, 0, 0, 1, 0, 0, 0, 0]' : 0.141148}", "{'[0, 2, 6, 2, 6, 5, 1, 0, 29, 5, 14, 0, 0, 1, 0, 0, 0, 0]' : 0.141087}", "{'[0, 2, 6, 2, 6, 5, 1, 0, 29, 5, 14, 0, 0, 1, 0, 0, 0, 0]' : 0.141058}", "{'[0, 2, 6, 2, 6, 5, 1, 0, 29, 5, 14, 0, 0, 1, 0, 0, 0, 0]' : 0.141176}", "{'[0, 2, 6, 2, 6, 5, 1, 0, 29, 5, 14, 0, 0, 1, 0, 0, 0, 0]' : 0.142691}", "{'[0, 2, 6, 2, 6, 5, 1, 0, 29, 5, 14, 0, 0, 1, 0, 0, 0, 0]' : 0.141238}", "{'[0, 2, 6, 2, 6, 5, 1, 0, 29, 5, 14, 0, 0, 1, 0, 0, 0, 0]' : 0.141106}"]
returning from 'run': {'[0, 2, 6, 2, 6, 5, 1, 0, 29, 5, 14, 0, 0, 1, 0, 0, 0, 0]': ([0.141294, 0.141204, 0.141168, 0.141133, 0.14105, 0.141137, 0.141561, 0.141235, 0.141017, 0.141228, 0.14108, 0.141055, 0.141144, 0.141462, 0.141088, 0.141229, 0.141614, 0.14561, 0.145679, 0.145531, 0.145021, 0.14119, 0.141187, 0.141148, 0.141087, 0.141058, 0.141176, 0.142691, 0.141238, 0.141106], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 6, 2, 6, 5, 1, 0, 29, 5, 14, 0, 0, 1, 0, 0, 0, 0]': ([0.141294, 0.141204, 0.141168, 0.141133, 0.14105, 0.141137, 0.141561, 0.141235, 0.141017, 0.141228, 0.14108, 0.141055, 0.141144, 0.141462, 0.141088, 0.141229, 0.141614, 0.14561, 0.145679, 0.145531, 0.145021, 0.14119, 0.141187, 0.141148, 0.141087, 0.141058, 0.141176, 0.142691, 0.141238, 0.141106], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	6
        Additions: 		284
        Multiplications: 	96
        Divisions: 		0
        Logical: 		0
        Reads: 			610
        Writes: 		85
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest43.exe __orio_perftest43.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest43.exe  
Program Test Output: 
{'[1, 1, 0, 6, 2, 6, 1, 0, 0, 0, 12, 24, 0, 0, 1, 0, 1, 1]' : 0.214269}
{'[1, 1, 0, 6, 2, 6, 1, 0, 0, 0, 12, 24, 0, 0, 1, 0, 1, 1]' : 0.214297}
{'[1, 1, 0, 6, 2, 6, 1, 0, 0, 0, 12, 24, 0, 0, 1, 0, 1, 1]' : 0.214741}
{'[1, 1, 0, 6, 2, 6, 1, 0, 0, 0, 12, 24, 0, 0, 1, 0, 1, 1]' : 0.214847}
{'[1, 1, 0, 6, 2, 6, 1, 0, 0, 0, 12, 24, 0, 0, 1, 0, 1, 1]' : 0.214174}
{'[1, 1, 0, 6, 2, 6, 1, 0, 0, 0, 12, 24, 0, 0, 1, 0, 1, 1]' : 0.214448}
{'[1, 1, 0, 6, 2, 6, 1, 0, 0, 0, 12, 24, 0, 0, 1, 0, 1, 1]' : 0.214582}
{'[1, 1, 0, 6, 2, 6, 1, 0, 0, 0, 12, 24, 0, 0, 1, 0, 1, 1]' : 0.214285}
{'[1, 1, 0, 6, 2, 6, 1, 0, 0, 0, 12, 24, 0, 0, 1, 0, 1, 1]' : 0.214463}
{'[1, 1, 0, 6, 2, 6, 1, 0, 0, 0, 12, 24, 0, 0, 1, 0, 1, 1]' : 0.214596}
{'[1, 1, 0, 6, 2, 6, 1, 0, 0, 0, 12, 24, 0, 0, 1, 0, 1, 1]' : 0.214765}
{'[1, 1, 0, 6, 2, 6, 1, 0, 0, 0, 12, 24, 0, 0, 1, 0, 1, 1]' : 0.214663}
{'[1, 1, 0, 6, 2, 6, 1, 0, 0, 0, 12, 24, 0, 0, 1, 0, 1, 1]' : 0.21444}
{'[1, 1, 0, 6, 2, 6, 1, 0, 0, 0, 12, 24, 0, 0, 1, 0, 1, 1]' : 0.214551}
{'[1, 1, 0, 6, 2, 6, 1, 0, 0, 0, 12, 24, 0, 0, 1, 0, 1, 1]' : 0.214135}
{'[1, 1, 0, 6, 2, 6, 1, 0, 0, 0, 12, 24, 0, 0, 1, 0, 1, 1]' : 0.214602}
{'[1, 1, 0, 6, 2, 6, 1, 0, 0, 0, 12, 24, 0, 0, 1, 0, 1, 1]' : 0.214289}
{'[1, 1, 0, 6, 2, 6, 1, 0, 0, 0, 12, 24, 0, 0, 1, 0, 1, 1]' : 0.214358}
{'[1, 1, 0, 6, 2, 6, 1, 0, 0, 0, 12, 24, 0, 0, 1, 0, 1, 1]' : 0.214811}
{'[1, 1, 0, 6, 2, 6, 1, 0, 0, 0, 12, 24, 0, 0, 1, 0, 1, 1]' : 0.21454}
{'[1, 1, 0, 6, 2, 6, 1, 0, 0, 0, 12, 24, 0, 0, 1, 0, 1, 1]' : 0.214421}
{'[1, 1, 0, 6, 2, 6, 1, 0, 0, 0, 12, 24, 0, 0, 1, 0, 1, 1]' : 0.214331}
{'[1, 1, 0, 6, 2, 6, 1, 0, 0, 0, 12, 24, 0, 0, 1, 0, 1, 1]' : 0.214302}
{'[1, 1, 0, 6, 2, 6, 1, 0, 0, 0, 12, 24, 0, 0, 1, 0, 1, 1]' : 0.214408}
{'[1, 1, 0, 6, 2, 6, 1, 0, 0, 0, 12, 24, 0, 0, 1, 0, 1, 1]' : 0.215061}
{'[1, 1, 0, 6, 2, 6, 1, 0, 0, 0, 12, 24, 0, 0, 1, 0, 1, 1]' : 0.214238}
{'[1, 1, 0, 6, 2, 6, 1, 0, 0, 0, 12, 24, 0, 0, 1, 0, 1, 1]' : 0.214282}
{'[1, 1, 0, 6, 2, 6, 1, 0, 0, 0, 12, 24, 0, 0, 1, 0, 1, 1]' : 0.214277}
{'[1, 1, 0, 6, 2, 6, 1, 0, 0, 0, 12, 24, 0, 0, 1, 0, 1, 1]' : 0.214569}
{'[1, 1, 0, 6, 2, 6, 1, 0, 0, 0, 12, 24, 0, 0, 1, 0, 1, 1]' : 0.214448}

out:
 ["{'[1, 1, 0, 6, 2, 6, 1, 0, 0, 0, 12, 24, 0, 0, 1, 0, 1, 1]' : 0.214269}", "{'[1, 1, 0, 6, 2, 6, 1, 0, 0, 0, 12, 24, 0, 0, 1, 0, 1, 1]' : 0.214297}", "{'[1, 1, 0, 6, 2, 6, 1, 0, 0, 0, 12, 24, 0, 0, 1, 0, 1, 1]' : 0.214741}", "{'[1, 1, 0, 6, 2, 6, 1, 0, 0, 0, 12, 24, 0, 0, 1, 0, 1, 1]' : 0.214847}", "{'[1, 1, 0, 6, 2, 6, 1, 0, 0, 0, 12, 24, 0, 0, 1, 0, 1, 1]' : 0.214174}", "{'[1, 1, 0, 6, 2, 6, 1, 0, 0, 0, 12, 24, 0, 0, 1, 0, 1, 1]' : 0.214448}", "{'[1, 1, 0, 6, 2, 6, 1, 0, 0, 0, 12, 24, 0, 0, 1, 0, 1, 1]' : 0.214582}", "{'[1, 1, 0, 6, 2, 6, 1, 0, 0, 0, 12, 24, 0, 0, 1, 0, 1, 1]' : 0.214285}", "{'[1, 1, 0, 6, 2, 6, 1, 0, 0, 0, 12, 24, 0, 0, 1, 0, 1, 1]' : 0.214463}", "{'[1, 1, 0, 6, 2, 6, 1, 0, 0, 0, 12, 24, 0, 0, 1, 0, 1, 1]' : 0.214596}", "{'[1, 1, 0, 6, 2, 6, 1, 0, 0, 0, 12, 24, 0, 0, 1, 0, 1, 1]' : 0.214765}", "{'[1, 1, 0, 6, 2, 6, 1, 0, 0, 0, 12, 24, 0, 0, 1, 0, 1, 1]' : 0.214663}", "{'[1, 1, 0, 6, 2, 6, 1, 0, 0, 0, 12, 24, 0, 0, 1, 0, 1, 1]' : 0.21444}", "{'[1, 1, 0, 6, 2, 6, 1, 0, 0, 0, 12, 24, 0, 0, 1, 0, 1, 1]' : 0.214551}", "{'[1, 1, 0, 6, 2, 6, 1, 0, 0, 0, 12, 24, 0, 0, 1, 0, 1, 1]' : 0.214135}", "{'[1, 1, 0, 6, 2, 6, 1, 0, 0, 0, 12, 24, 0, 0, 1, 0, 1, 1]' : 0.214602}", "{'[1, 1, 0, 6, 2, 6, 1, 0, 0, 0, 12, 24, 0, 0, 1, 0, 1, 1]' : 0.214289}", "{'[1, 1, 0, 6, 2, 6, 1, 0, 0, 0, 12, 24, 0, 0, 1, 0, 1, 1]' : 0.214358}", "{'[1, 1, 0, 6, 2, 6, 1, 0, 0, 0, 12, 24, 0, 0, 1, 0, 1, 1]' : 0.214811}", "{'[1, 1, 0, 6, 2, 6, 1, 0, 0, 0, 12, 24, 0, 0, 1, 0, 1, 1]' : 0.21454}", "{'[1, 1, 0, 6, 2, 6, 1, 0, 0, 0, 12, 24, 0, 0, 1, 0, 1, 1]' : 0.214421}", "{'[1, 1, 0, 6, 2, 6, 1, 0, 0, 0, 12, 24, 0, 0, 1, 0, 1, 1]' : 0.214331}", "{'[1, 1, 0, 6, 2, 6, 1, 0, 0, 0, 12, 24, 0, 0, 1, 0, 1, 1]' : 0.214302}", "{'[1, 1, 0, 6, 2, 6, 1, 0, 0, 0, 12, 24, 0, 0, 1, 0, 1, 1]' : 0.214408}", "{'[1, 1, 0, 6, 2, 6, 1, 0, 0, 0, 12, 24, 0, 0, 1, 0, 1, 1]' : 0.215061}", "{'[1, 1, 0, 6, 2, 6, 1, 0, 0, 0, 12, 24, 0, 0, 1, 0, 1, 1]' : 0.214238}", "{'[1, 1, 0, 6, 2, 6, 1, 0, 0, 0, 12, 24, 0, 0, 1, 0, 1, 1]' : 0.214282}", "{'[1, 1, 0, 6, 2, 6, 1, 0, 0, 0, 12, 24, 0, 0, 1, 0, 1, 1]' : 0.214277}", "{'[1, 1, 0, 6, 2, 6, 1, 0, 0, 0, 12, 24, 0, 0, 1, 0, 1, 1]' : 0.214569}", "{'[1, 1, 0, 6, 2, 6, 1, 0, 0, 0, 12, 24, 0, 0, 1, 0, 1, 1]' : 0.214448}"]
returning from 'run': {'[1, 1, 0, 6, 2, 6, 1, 0, 0, 0, 12, 24, 0, 0, 1, 0, 1, 1]': ([0.214269, 0.214297, 0.214741, 0.214847, 0.214174, 0.214448, 0.214582, 0.214285, 0.214463, 0.214596, 0.214765, 0.214663, 0.21444, 0.214551, 0.214135, 0.214602, 0.214289, 0.214358, 0.214811, 0.21454, 0.214421, 0.214331, 0.214302, 0.214408, 0.215061, 0.214238, 0.214282, 0.214277, 0.214569, 0.214448], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 1, 0, 6, 2, 6, 1, 0, 0, 0, 12, 24, 0, 0, 1, 0, 1, 1]': ([0.214269, 0.214297, 0.214741, 0.214847, 0.214174, 0.214448, 0.214582, 0.214285, 0.214463, 0.214596, 0.214765, 0.214663, 0.21444, 0.214551, 0.214135, 0.214602, 0.214289, 0.214358, 0.214811, 0.21454, 0.214421, 0.214331, 0.214302, 0.214408, 0.215061, 0.214238, 0.214282, 0.214277, 0.214569, 0.214448], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
Code stats:
        Number of loops: 	71
        Max loop nest depth: 	5
        Additions: 		6435
        Multiplications: 	1870
        Divisions: 		0
        Logical: 		0
        Reads: 			10271
        Writes: 		1162
        Comparisons:		71
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest44.exe __orio_perftest44.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest44.exe  
Program Test Output: 
{'[6, 6, 2, 4, 0, 1, 0, 1, 0, 21, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.325945}
{'[6, 6, 2, 4, 0, 1, 0, 1, 0, 21, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.293216}
{'[6, 6, 2, 4, 0, 1, 0, 1, 0, 21, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.292945}
{'[6, 6, 2, 4, 0, 1, 0, 1, 0, 21, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.292788}
{'[6, 6, 2, 4, 0, 1, 0, 1, 0, 21, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.293012}
{'[6, 6, 2, 4, 0, 1, 0, 1, 0, 21, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.292662}
{'[6, 6, 2, 4, 0, 1, 0, 1, 0, 21, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.293266}
{'[6, 6, 2, 4, 0, 1, 0, 1, 0, 21, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.292874}
{'[6, 6, 2, 4, 0, 1, 0, 1, 0, 21, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.292989}
{'[6, 6, 2, 4, 0, 1, 0, 1, 0, 21, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.292948}
{'[6, 6, 2, 4, 0, 1, 0, 1, 0, 21, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.29289}
{'[6, 6, 2, 4, 0, 1, 0, 1, 0, 21, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.293072}
{'[6, 6, 2, 4, 0, 1, 0, 1, 0, 21, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.293564}
{'[6, 6, 2, 4, 0, 1, 0, 1, 0, 21, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.293269}
{'[6, 6, 2, 4, 0, 1, 0, 1, 0, 21, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.292746}
{'[6, 6, 2, 4, 0, 1, 0, 1, 0, 21, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.292748}
{'[6, 6, 2, 4, 0, 1, 0, 1, 0, 21, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.2927}
{'[6, 6, 2, 4, 0, 1, 0, 1, 0, 21, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.293426}
{'[6, 6, 2, 4, 0, 1, 0, 1, 0, 21, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.292922}
{'[6, 6, 2, 4, 0, 1, 0, 1, 0, 21, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.292957}
{'[6, 6, 2, 4, 0, 1, 0, 1, 0, 21, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.29283}
{'[6, 6, 2, 4, 0, 1, 0, 1, 0, 21, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.293061}
{'[6, 6, 2, 4, 0, 1, 0, 1, 0, 21, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.2932}
{'[6, 6, 2, 4, 0, 1, 0, 1, 0, 21, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.292871}
{'[6, 6, 2, 4, 0, 1, 0, 1, 0, 21, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.293219}
{'[6, 6, 2, 4, 0, 1, 0, 1, 0, 21, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.292843}
{'[6, 6, 2, 4, 0, 1, 0, 1, 0, 21, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.292859}
{'[6, 6, 2, 4, 0, 1, 0, 1, 0, 21, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.293223}
{'[6, 6, 2, 4, 0, 1, 0, 1, 0, 21, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.292838}
{'[6, 6, 2, 4, 0, 1, 0, 1, 0, 21, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.292977}

out:
 ["{'[6, 6, 2, 4, 0, 1, 0, 1, 0, 21, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.325945}", "{'[6, 6, 2, 4, 0, 1, 0, 1, 0, 21, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.293216}", "{'[6, 6, 2, 4, 0, 1, 0, 1, 0, 21, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.292945}", "{'[6, 6, 2, 4, 0, 1, 0, 1, 0, 21, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.292788}", "{'[6, 6, 2, 4, 0, 1, 0, 1, 0, 21, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.293012}", "{'[6, 6, 2, 4, 0, 1, 0, 1, 0, 21, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.292662}", "{'[6, 6, 2, 4, 0, 1, 0, 1, 0, 21, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.293266}", "{'[6, 6, 2, 4, 0, 1, 0, 1, 0, 21, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.292874}", "{'[6, 6, 2, 4, 0, 1, 0, 1, 0, 21, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.292989}", "{'[6, 6, 2, 4, 0, 1, 0, 1, 0, 21, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.292948}", "{'[6, 6, 2, 4, 0, 1, 0, 1, 0, 21, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.29289}", "{'[6, 6, 2, 4, 0, 1, 0, 1, 0, 21, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.293072}", "{'[6, 6, 2, 4, 0, 1, 0, 1, 0, 21, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.293564}", "{'[6, 6, 2, 4, 0, 1, 0, 1, 0, 21, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.293269}", "{'[6, 6, 2, 4, 0, 1, 0, 1, 0, 21, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.292746}", "{'[6, 6, 2, 4, 0, 1, 0, 1, 0, 21, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.292748}", "{'[6, 6, 2, 4, 0, 1, 0, 1, 0, 21, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.2927}", "{'[6, 6, 2, 4, 0, 1, 0, 1, 0, 21, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.293426}", "{'[6, 6, 2, 4, 0, 1, 0, 1, 0, 21, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.292922}", "{'[6, 6, 2, 4, 0, 1, 0, 1, 0, 21, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.292957}", "{'[6, 6, 2, 4, 0, 1, 0, 1, 0, 21, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.29283}", "{'[6, 6, 2, 4, 0, 1, 0, 1, 0, 21, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.293061}", "{'[6, 6, 2, 4, 0, 1, 0, 1, 0, 21, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.2932}", "{'[6, 6, 2, 4, 0, 1, 0, 1, 0, 21, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.292871}", "{'[6, 6, 2, 4, 0, 1, 0, 1, 0, 21, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.293219}", "{'[6, 6, 2, 4, 0, 1, 0, 1, 0, 21, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.292843}", "{'[6, 6, 2, 4, 0, 1, 0, 1, 0, 21, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.292859}", "{'[6, 6, 2, 4, 0, 1, 0, 1, 0, 21, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.293223}", "{'[6, 6, 2, 4, 0, 1, 0, 1, 0, 21, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.292838}", "{'[6, 6, 2, 4, 0, 1, 0, 1, 0, 21, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.292977}"]
returning from 'run': {'[6, 6, 2, 4, 0, 1, 0, 1, 0, 21, 14, 0, 2, 0, 0, 0, 0, 1]': ([0.325945, 0.293216, 0.292945, 0.292788, 0.293012, 0.292662, 0.293266, 0.292874, 0.292989, 0.292948, 0.29289, 0.293072, 0.293564, 0.293269, 0.292746, 0.292748, 0.2927, 0.293426, 0.292922, 0.292957, 0.29283, 0.293061, 0.2932, 0.292871, 0.293219, 0.292843, 0.292859, 0.293223, 0.292838, 0.292977], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 2, 4, 0, 1, 0, 1, 0, 21, 14, 0, 2, 0, 0, 0, 0, 1]': ([0.325945, 0.293216, 0.292945, 0.292788, 0.293012, 0.292662, 0.293266, 0.292874, 0.292989, 0.292948, 0.29289, 0.293072, 0.293564, 0.293269, 0.292746, 0.292748, 0.2927, 0.293426, 0.292922, 0.292957, 0.29283, 0.293061, 0.2932, 0.292871, 0.293219, 0.292843, 0.292859, 0.293223, 0.292838, 0.292977], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	5
        Additions: 		645
        Multiplications: 	272
        Divisions: 		0
        Logical: 		0
        Reads: 			1419
        Writes: 		302
        Comparisons:		22
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest45.exe __orio_perftest45.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest45.exe  
Program Test Output: 
{'[1, 2, 1, 2, 0, 0, 0, 0, 17, 7, 0, 5, 1, 0, 0, 1, 1, 1]' : 0.129565}
{'[1, 2, 1, 2, 0, 0, 0, 0, 17, 7, 0, 5, 1, 0, 0, 1, 1, 1]' : 0.129352}
{'[1, 2, 1, 2, 0, 0, 0, 0, 17, 7, 0, 5, 1, 0, 0, 1, 1, 1]' : 0.122359}
{'[1, 2, 1, 2, 0, 0, 0, 0, 17, 7, 0, 5, 1, 0, 0, 1, 1, 1]' : 0.11569}
{'[1, 2, 1, 2, 0, 0, 0, 0, 17, 7, 0, 5, 1, 0, 0, 1, 1, 1]' : 0.115402}
{'[1, 2, 1, 2, 0, 0, 0, 0, 17, 7, 0, 5, 1, 0, 0, 1, 1, 1]' : 0.115545}
{'[1, 2, 1, 2, 0, 0, 0, 0, 17, 7, 0, 5, 1, 0, 0, 1, 1, 1]' : 0.11563}
{'[1, 2, 1, 2, 0, 0, 0, 0, 17, 7, 0, 5, 1, 0, 0, 1, 1, 1]' : 0.115668}
{'[1, 2, 1, 2, 0, 0, 0, 0, 17, 7, 0, 5, 1, 0, 0, 1, 1, 1]' : 0.115525}
{'[1, 2, 1, 2, 0, 0, 0, 0, 17, 7, 0, 5, 1, 0, 0, 1, 1, 1]' : 0.11541}
{'[1, 2, 1, 2, 0, 0, 0, 0, 17, 7, 0, 5, 1, 0, 0, 1, 1, 1]' : 0.115397}
{'[1, 2, 1, 2, 0, 0, 0, 0, 17, 7, 0, 5, 1, 0, 0, 1, 1, 1]' : 0.115673}
{'[1, 2, 1, 2, 0, 0, 0, 0, 17, 7, 0, 5, 1, 0, 0, 1, 1, 1]' : 0.115379}
{'[1, 2, 1, 2, 0, 0, 0, 0, 17, 7, 0, 5, 1, 0, 0, 1, 1, 1]' : 0.11554}
{'[1, 2, 1, 2, 0, 0, 0, 0, 17, 7, 0, 5, 1, 0, 0, 1, 1, 1]' : 0.115391}
{'[1, 2, 1, 2, 0, 0, 0, 0, 17, 7, 0, 5, 1, 0, 0, 1, 1, 1]' : 0.116395}
{'[1, 2, 1, 2, 0, 0, 0, 0, 17, 7, 0, 5, 1, 0, 0, 1, 1, 1]' : 0.117898}
{'[1, 2, 1, 2, 0, 0, 0, 0, 17, 7, 0, 5, 1, 0, 0, 1, 1, 1]' : 0.116036}
{'[1, 2, 1, 2, 0, 0, 0, 0, 17, 7, 0, 5, 1, 0, 0, 1, 1, 1]' : 0.115597}
{'[1, 2, 1, 2, 0, 0, 0, 0, 17, 7, 0, 5, 1, 0, 0, 1, 1, 1]' : 0.115589}
{'[1, 2, 1, 2, 0, 0, 0, 0, 17, 7, 0, 5, 1, 0, 0, 1, 1, 1]' : 0.117022}
{'[1, 2, 1, 2, 0, 0, 0, 0, 17, 7, 0, 5, 1, 0, 0, 1, 1, 1]' : 0.117804}
{'[1, 2, 1, 2, 0, 0, 0, 0, 17, 7, 0, 5, 1, 0, 0, 1, 1, 1]' : 0.116297}
{'[1, 2, 1, 2, 0, 0, 0, 0, 17, 7, 0, 5, 1, 0, 0, 1, 1, 1]' : 0.115498}
{'[1, 2, 1, 2, 0, 0, 0, 0, 17, 7, 0, 5, 1, 0, 0, 1, 1, 1]' : 0.115161}
{'[1, 2, 1, 2, 0, 0, 0, 0, 17, 7, 0, 5, 1, 0, 0, 1, 1, 1]' : 0.112871}
{'[1, 2, 1, 2, 0, 0, 0, 0, 17, 7, 0, 5, 1, 0, 0, 1, 1, 1]' : 0.112785}
{'[1, 2, 1, 2, 0, 0, 0, 0, 17, 7, 0, 5, 1, 0, 0, 1, 1, 1]' : 0.112958}
{'[1, 2, 1, 2, 0, 0, 0, 0, 17, 7, 0, 5, 1, 0, 0, 1, 1, 1]' : 0.11283}
{'[1, 2, 1, 2, 0, 0, 0, 0, 17, 7, 0, 5, 1, 0, 0, 1, 1, 1]' : 0.115368}

out:
 ["{'[1, 2, 1, 2, 0, 0, 0, 0, 17, 7, 0, 5, 1, 0, 0, 1, 1, 1]' : 0.129565}", "{'[1, 2, 1, 2, 0, 0, 0, 0, 17, 7, 0, 5, 1, 0, 0, 1, 1, 1]' : 0.129352}", "{'[1, 2, 1, 2, 0, 0, 0, 0, 17, 7, 0, 5, 1, 0, 0, 1, 1, 1]' : 0.122359}", "{'[1, 2, 1, 2, 0, 0, 0, 0, 17, 7, 0, 5, 1, 0, 0, 1, 1, 1]' : 0.11569}", "{'[1, 2, 1, 2, 0, 0, 0, 0, 17, 7, 0, 5, 1, 0, 0, 1, 1, 1]' : 0.115402}", "{'[1, 2, 1, 2, 0, 0, 0, 0, 17, 7, 0, 5, 1, 0, 0, 1, 1, 1]' : 0.115545}", "{'[1, 2, 1, 2, 0, 0, 0, 0, 17, 7, 0, 5, 1, 0, 0, 1, 1, 1]' : 0.11563}", "{'[1, 2, 1, 2, 0, 0, 0, 0, 17, 7, 0, 5, 1, 0, 0, 1, 1, 1]' : 0.115668}", "{'[1, 2, 1, 2, 0, 0, 0, 0, 17, 7, 0, 5, 1, 0, 0, 1, 1, 1]' : 0.115525}", "{'[1, 2, 1, 2, 0, 0, 0, 0, 17, 7, 0, 5, 1, 0, 0, 1, 1, 1]' : 0.11541}", "{'[1, 2, 1, 2, 0, 0, 0, 0, 17, 7, 0, 5, 1, 0, 0, 1, 1, 1]' : 0.115397}", "{'[1, 2, 1, 2, 0, 0, 0, 0, 17, 7, 0, 5, 1, 0, 0, 1, 1, 1]' : 0.115673}", "{'[1, 2, 1, 2, 0, 0, 0, 0, 17, 7, 0, 5, 1, 0, 0, 1, 1, 1]' : 0.115379}", "{'[1, 2, 1, 2, 0, 0, 0, 0, 17, 7, 0, 5, 1, 0, 0, 1, 1, 1]' : 0.11554}", "{'[1, 2, 1, 2, 0, 0, 0, 0, 17, 7, 0, 5, 1, 0, 0, 1, 1, 1]' : 0.115391}", "{'[1, 2, 1, 2, 0, 0, 0, 0, 17, 7, 0, 5, 1, 0, 0, 1, 1, 1]' : 0.116395}", "{'[1, 2, 1, 2, 0, 0, 0, 0, 17, 7, 0, 5, 1, 0, 0, 1, 1, 1]' : 0.117898}", "{'[1, 2, 1, 2, 0, 0, 0, 0, 17, 7, 0, 5, 1, 0, 0, 1, 1, 1]' : 0.116036}", "{'[1, 2, 1, 2, 0, 0, 0, 0, 17, 7, 0, 5, 1, 0, 0, 1, 1, 1]' : 0.115597}", "{'[1, 2, 1, 2, 0, 0, 0, 0, 17, 7, 0, 5, 1, 0, 0, 1, 1, 1]' : 0.115589}", "{'[1, 2, 1, 2, 0, 0, 0, 0, 17, 7, 0, 5, 1, 0, 0, 1, 1, 1]' : 0.117022}", "{'[1, 2, 1, 2, 0, 0, 0, 0, 17, 7, 0, 5, 1, 0, 0, 1, 1, 1]' : 0.117804}", "{'[1, 2, 1, 2, 0, 0, 0, 0, 17, 7, 0, 5, 1, 0, 0, 1, 1, 1]' : 0.116297}", "{'[1, 2, 1, 2, 0, 0, 0, 0, 17, 7, 0, 5, 1, 0, 0, 1, 1, 1]' : 0.115498}", "{'[1, 2, 1, 2, 0, 0, 0, 0, 17, 7, 0, 5, 1, 0, 0, 1, 1, 1]' : 0.115161}", "{'[1, 2, 1, 2, 0, 0, 0, 0, 17, 7, 0, 5, 1, 0, 0, 1, 1, 1]' : 0.112871}", "{'[1, 2, 1, 2, 0, 0, 0, 0, 17, 7, 0, 5, 1, 0, 0, 1, 1, 1]' : 0.112785}", "{'[1, 2, 1, 2, 0, 0, 0, 0, 17, 7, 0, 5, 1, 0, 0, 1, 1, 1]' : 0.112958}", "{'[1, 2, 1, 2, 0, 0, 0, 0, 17, 7, 0, 5, 1, 0, 0, 1, 1, 1]' : 0.11283}", "{'[1, 2, 1, 2, 0, 0, 0, 0, 17, 7, 0, 5, 1, 0, 0, 1, 1, 1]' : 0.115368}"]
returning from 'run': {'[1, 2, 1, 2, 0, 0, 0, 0, 17, 7, 0, 5, 1, 0, 0, 1, 1, 1]': ([0.129565, 0.129352, 0.122359, 0.11569, 0.115402, 0.115545, 0.11563, 0.115668, 0.115525, 0.11541, 0.115397, 0.115673, 0.115379, 0.11554, 0.115391, 0.116395, 0.117898, 0.116036, 0.115597, 0.115589, 0.117022, 0.117804, 0.116297, 0.115498, 0.115161, 0.112871, 0.112785, 0.112958, 0.11283, 0.115368], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 2, 1, 2, 0, 0, 0, 0, 17, 7, 0, 5, 1, 0, 0, 1, 1, 1]': ([0.129565, 0.129352, 0.122359, 0.11569, 0.115402, 0.115545, 0.11563, 0.115668, 0.115525, 0.11541, 0.115397, 0.115673, 0.115379, 0.11554, 0.115391, 0.116395, 0.117898, 0.116036, 0.115597, 0.115589, 0.117022, 0.117804, 0.116297, 0.115498, 0.115161, 0.112871, 0.112785, 0.112958, 0.11283, 0.115368], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	42
        Max loop nest depth: 	5
        Additions: 		4065
        Multiplications: 	1914
        Divisions: 		0
        Logical: 		0
        Reads: 			7583
        Writes: 		1216
        Comparisons:		42
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest46.exe __orio_perftest46.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest46.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest46.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest46.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest46.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Complete design, with measurements:
     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
237     5    4    0    6    2    2       1       0   29   0  29  27    1    1
246     3    1    0    1    0    0       1       0    5  27   0   8    2    0
531     1    0    3    2    3    6       1       1   12  26  23   0    1    1
641     0    0    0    4    4    4       0       0    3   0   0  10    1    0
687     4    0    6    0    1    6       0       0    0  12  29   0    0    0
739     6    5    0    0    0    0       0       0   29  28   1   0    0    1
1084    0    5    0    1    0    6       0       0    3   0  24  20    2    0
1343    6    2    3    6    6    2       1       1   25  24   0  18    0    0
1392    2    5    5    0    6    4       1       0   26  29   0  29    0    0
1683    6    1    4    6    0    0       0       0    6  21   0   8    1    0
1688    6    4    6    0    5    6       0       0   27  15   0   1    2    0
1826    2    6    0    0    5    0       0       1    6   7   0  28    0    0
1835    0    0    1    2    5    1       0       0   12   0  27   6    0    2
1957    6    5    6    6    0    6       1       0   20   0  29  18    0    0
1977    6    4    0    6    6    6       0       1    0  14   0  11    0    2
2153    6    0    3    5    5    1       1       0    3  19   0   1    2    0
2232    2    0    2    0    1    0       0       0    4   0   6  28    0    1
2262    6    0    0    0    6    4       1       0   16   0  28  29    1    0
2476    0    4    5    2    6    5       0       1    2  29  28   0    2    0
2510    2    6    6    1    6    0       1       1   13   5  15   0    0    1
2515    5    6    1    0    0    6       0       1   28   0   1  10    0    2
3066    5    3    5    3    4    0       1       1    0   0   0  26    1    1
3178    5    2    6    3    6    6       0       1   12   0  22  26    1    0
3282    1    3    1    3    2    4       1       1   24   0   0  29    0    0
3308    2    6    0    6    5    4       1       0   28  24  24   0    1    0
3310    5    0    6    6    2    0       0       1   13   0  28  23    1    0
3440    2    6    0    5    4    5       0       0   18  25   0   0    1    0
3444    1    1    2    0    0    1       0       1   17   0  25   0    0    1
3533    0    0    3    6    6    0       0       1   25   0  10  20    2    0
3674    0    6    0    6    0    3       0       1    9   0   7  10    0    1
3693    0    3    3    0    4    2       0       0    1   6   0  23    0    2
3884    0    5    1    0    5    2       1       1   10   0  27   8    1    0
4104    4    0    0    4    0    5       0       0   20  21   0  29    0    0
4148    3    0    4    1    0    4       1       1    0   6   0  23    1    0
4150    0    0    6    5    1    4       1       1    7  26   0  12    1    0
4286    3    6    6    1    5    0       0       0    0   0  10   1    1    1
4305    0    2    6    2    6    5       1       0   29   5  14   0    0    1
4347    1    1    0    6    2    6       1       0    0   0  12  24    0    0
4353    6    6    2    4    0    1       0       1    0  21  14   0    2    0
4451    1    2    1    2    0    0       0       0   17   7   0   5    1    0
     RT_K SCR VEC1 VEC2  cost_mean
237     0   0    1    0 0.11546683
246     0   0    0    0 0.19447423
531     0   1    1    1 0.09579521
641     0   0    1    1 0.12143267
687     1   0    1    0 0.13019030
739     0   1    1    0 0.17581160
1084    0   1    1    0 0.23162197
1343    1   1    1    1 0.22650833
1392    2   0    1    0 0.21930263
1683    1   1    1    0 0.09549425
1688    0   0    1    1 0.20345490
1826    0   0    0    1 0.12410430
1835    0   0    1    1 0.22630137
1957    0   1    0    0 0.20688020
1977    0   1    1    0 0.16162987
2153    0   0    1    0 0.20892307
2232    1   0    0    0 0.22045877
2262    0   1    0    0 0.10850593
2476    0   0    0    1 0.26039697
2510    1   1    1    0 0.16055260
2515    0   0    0    0 0.30755463
3066    0   0    1    0 0.10989983
3178    1   0    0    1 0.10962897
3282    1   1    0    1 0.28283137
3308    1   1    0    0 0.09108468
3310    1   1    1    0 0.10757813
3440    1   1    0    0 0.09489356
3444    1   0    0    0 0.29043290
3533    0   1    0    1 0.20545677
3674    1   1    1    1 0.20111407
3693    0   1    0    0 0.12563173
3884    1   0    1    0 0.13068743
4104    2   0    0    1 0.14916053
4148    0   0    0    0 0.11366453
4150    1   0    0    1 0.11072840
4286    0   1    0    1 0.08777436
4305    0   0    0    0 0.14181403
4347    1   0    1    1 0.21447310
4353    0   0    0    1 0.29409533
4451    0   1    1    1 0.11658783

Heteroscedasticity Test p-value: 0.440935619516
Regression Step:                Df  Sum Sq Mean Sq F value   Pr(>F)    
T1_I             1 0.00013 0.00013   0.127  0.73036    
T1_J             1 0.00348 0.00348   3.442  0.10064    
T1_K             1 0.00232 0.00232   2.297  0.16813    
T2_I             1 0.00225 0.00225   2.224  0.17418    
T2_J             1 0.00575 0.00575   5.687  0.04422 *  
T2_K             1 0.00099 0.00099   0.984  0.35032    
ACOPY_x          1 0.00048 0.00048   0.477  0.50952    
ACOPY_y          1 0.00895 0.00895   8.855  0.01772 *  
U1_I             1 0.00466 0.00466   4.612  0.06402 .  
U_I              1 0.00001 0.00001   0.007  0.93478    
U_J              1 0.00000 0.00000   0.002  0.96935    
U_K              1 0.00041 0.00041   0.409  0.54015    
RT_I             1 0.00015 0.00015   0.148  0.71055    
RT_J             1 0.00053 0.00053   0.524  0.48988    
RT_K             1 0.00015 0.00015   0.152  0.70666    
SCR              1 0.00937 0.00937   9.264  0.01597 *  
VEC1             1 0.00005 0.00005   0.053  0.82350    
VEC2             1 0.00186 0.00186   1.840  0.21199    
I(1/(1 + T1_I))  1 0.00501 0.00501   4.959  0.05657 .  
I(1/(1 + T1_J))  1 0.00274 0.00274   2.707  0.13853    
I(1/(1 + T1_K))  1 0.02224 0.02224  21.997  0.00156 ** 
I(1/(1 + T2_I))  1 0.00001 0.00001   0.007  0.93410    
I(1/(1 + T2_J))  1 0.00369 0.00369   3.647  0.09259 .  
I(1/(1 + T2_K))  1 0.00139 0.00139   1.376  0.27453    
I(1/(1 + U1_I))  1 0.00012 0.00012   0.120  0.73823    
I(1/(1 + U_I))   1 0.00819 0.00819   8.100  0.02161 *  
I(1/(1 + U_J))   1 0.00420 0.00420   4.152  0.07595 .  
I(1/(1 + U_K))   1 0.00234 0.00234   2.317  0.16650    
I(1/(1 + RT_I))  1 0.06035 0.06035  59.684 5.61e-05 ***
I(1/(1 + RT_J))  1 0.00173 0.00173   1.711  0.22717    
I(1/(1 + RT_K))  1 0.00009 0.00009   0.093  0.76849    
Residuals        8 0.00809 0.00101                     
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Predicting Best
Generating valid search space of size 4600 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Valid coordinates: 920
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Valid coordinates: 1840
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Valid coordinates: 2760
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Tested coordinates: 150000
Valid coordinates: 3680
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Valid coordinates: 4600
Valid/Tested configurations: 4600/187453
Generated Search Space:
NULL
Identical predictions (tol = 1e-5): 1
Getting Best from Design
Response: ['cost_mean']
Design Names:  [1] "T1_I"      "T1_J"      "T1_K"      "T2_I"      "T2_J"      "T2_K"     
 [7] "ACOPY_x"   "ACOPY_y"   "U1_I"      "U_I"       "U_J"       "U_K"      
[13] "RT_I"      "RT_J"      "RT_K"      "SCR"       "VEC1"      "VEC2"     
[19] "cost_mean"

Design Response:       cost_mean
237  0.11546683
246  0.19447423
531  0.09579521
641  0.12143267
687  0.13019030
739  0.17581160
1084 0.23162197
1343 0.22650833
1392 0.21930263
1683 0.09549425
1688 0.20345490
1826 0.12410430
1835 0.22630137
1957 0.20688020
1977 0.16162987
2153 0.20892307
2232 0.22045877
2262 0.10850593
2476 0.26039697
2510 0.16055260
2515 0.30755463
3066 0.10989983
3178 0.10962897
3282 0.28283137
3308 0.09108468
3310 0.10757813
3440 0.09489356
3444 0.29043290
3533 0.20545677
3674 0.20111407
3693 0.12563173
3884 0.13068743
4104 0.14916053
4148 0.11366453
4150 0.11072840
4286 0.08777436
4305 0.14181403
4347 0.21447310
4353 0.29409533
4451 0.11658783

Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Getting fixed variables
Pruning Model
Best Predicted:    T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
64    6    0    0    0    3    0       1       1   28   9   0  23    1    1
   RT_K SCR VEC1 VEC2
64    0   1    0    1

Best From Design: [3, 6, 6, 1, 5, 0, 0, 0, 0, 0, 10, 1, 1, 1, 0, 1, 0, 1]
Pruned Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_K', 'ACOPY_x', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'VEC1', 'VEC2']
Fixed Factors: {'ACOPY_y': 1, 'U1_I': 28, 'T2_J': 3, 'SCR': 1}
Length of requested configs: 1
Result was on Database, Returning Now
Starting Point (-O3):
0.16283083333333334
Predicted Best Point:
[6, 0, 0, 0, 3, 0, 1, 1, 28, 9, 0, 23, 1, 1, 0, 1, 0, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	48
        Max loop nest depth: 	4
        Additions: 		3188
        Multiplications: 	1254
        Divisions: 		0
        Logical: 		0
        Reads: 			6899
        Writes: 		1470
        Comparisons:		48
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest47.exe __orio_perftest47.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest47.exe  
Program Test Output: 
{'[6, 0, 0, 0, 3, 0, 1, 1, 28, 9, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.101533}
{'[6, 0, 0, 0, 3, 0, 1, 1, 28, 9, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.101487}
{'[6, 0, 0, 0, 3, 0, 1, 1, 28, 9, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.101405}
{'[6, 0, 0, 0, 3, 0, 1, 1, 28, 9, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.095032}
{'[6, 0, 0, 0, 3, 0, 1, 1, 28, 9, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.087517}
{'[6, 0, 0, 0, 3, 0, 1, 1, 28, 9, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.0874729}
{'[6, 0, 0, 0, 3, 0, 1, 1, 28, 9, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.087491}
{'[6, 0, 0, 0, 3, 0, 1, 1, 28, 9, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.087539}
{'[6, 0, 0, 0, 3, 0, 1, 1, 28, 9, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.088037}
{'[6, 0, 0, 0, 3, 0, 1, 1, 28, 9, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.0875239}
{'[6, 0, 0, 0, 3, 0, 1, 1, 28, 9, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.0875461}
{'[6, 0, 0, 0, 3, 0, 1, 1, 28, 9, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.0874929}
{'[6, 0, 0, 0, 3, 0, 1, 1, 28, 9, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.0875721}
{'[6, 0, 0, 0, 3, 0, 1, 1, 28, 9, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.087502}
{'[6, 0, 0, 0, 3, 0, 1, 1, 28, 9, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.087523}
{'[6, 0, 0, 0, 3, 0, 1, 1, 28, 9, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.087492}
{'[6, 0, 0, 0, 3, 0, 1, 1, 28, 9, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.087569}
{'[6, 0, 0, 0, 3, 0, 1, 1, 28, 9, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.0874839}
{'[6, 0, 0, 0, 3, 0, 1, 1, 28, 9, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.087518}
{'[6, 0, 0, 0, 3, 0, 1, 1, 28, 9, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.0875471}
{'[6, 0, 0, 0, 3, 0, 1, 1, 28, 9, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.087575}
{'[6, 0, 0, 0, 3, 0, 1, 1, 28, 9, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.0879099}
{'[6, 0, 0, 0, 3, 0, 1, 1, 28, 9, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.0875089}
{'[6, 0, 0, 0, 3, 0, 1, 1, 28, 9, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.0875661}
{'[6, 0, 0, 0, 3, 0, 1, 1, 28, 9, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.087594}
{'[6, 0, 0, 0, 3, 0, 1, 1, 28, 9, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.08814}
{'[6, 0, 0, 0, 3, 0, 1, 1, 28, 9, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.0877562}
{'[6, 0, 0, 0, 3, 0, 1, 1, 28, 9, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.087563}
{'[6, 0, 0, 0, 3, 0, 1, 1, 28, 9, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.087486}
{'[6, 0, 0, 0, 3, 0, 1, 1, 28, 9, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.087553}

out:
 ["{'[6, 0, 0, 0, 3, 0, 1, 1, 28, 9, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.101533}", "{'[6, 0, 0, 0, 3, 0, 1, 1, 28, 9, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.101487}", "{'[6, 0, 0, 0, 3, 0, 1, 1, 28, 9, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.101405}", "{'[6, 0, 0, 0, 3, 0, 1, 1, 28, 9, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.095032}", "{'[6, 0, 0, 0, 3, 0, 1, 1, 28, 9, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.087517}", "{'[6, 0, 0, 0, 3, 0, 1, 1, 28, 9, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.0874729}", "{'[6, 0, 0, 0, 3, 0, 1, 1, 28, 9, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.087491}", "{'[6, 0, 0, 0, 3, 0, 1, 1, 28, 9, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.087539}", "{'[6, 0, 0, 0, 3, 0, 1, 1, 28, 9, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.088037}", "{'[6, 0, 0, 0, 3, 0, 1, 1, 28, 9, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.0875239}", "{'[6, 0, 0, 0, 3, 0, 1, 1, 28, 9, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.0875461}", "{'[6, 0, 0, 0, 3, 0, 1, 1, 28, 9, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.0874929}", "{'[6, 0, 0, 0, 3, 0, 1, 1, 28, 9, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.0875721}", "{'[6, 0, 0, 0, 3, 0, 1, 1, 28, 9, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.087502}", "{'[6, 0, 0, 0, 3, 0, 1, 1, 28, 9, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.087523}", "{'[6, 0, 0, 0, 3, 0, 1, 1, 28, 9, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.087492}", "{'[6, 0, 0, 0, 3, 0, 1, 1, 28, 9, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.087569}", "{'[6, 0, 0, 0, 3, 0, 1, 1, 28, 9, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.0874839}", "{'[6, 0, 0, 0, 3, 0, 1, 1, 28, 9, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.087518}", "{'[6, 0, 0, 0, 3, 0, 1, 1, 28, 9, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.0875471}", "{'[6, 0, 0, 0, 3, 0, 1, 1, 28, 9, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.087575}", "{'[6, 0, 0, 0, 3, 0, 1, 1, 28, 9, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.0879099}", "{'[6, 0, 0, 0, 3, 0, 1, 1, 28, 9, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.0875089}", "{'[6, 0, 0, 0, 3, 0, 1, 1, 28, 9, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.0875661}", "{'[6, 0, 0, 0, 3, 0, 1, 1, 28, 9, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.087594}", "{'[6, 0, 0, 0, 3, 0, 1, 1, 28, 9, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.08814}", "{'[6, 0, 0, 0, 3, 0, 1, 1, 28, 9, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.0877562}", "{'[6, 0, 0, 0, 3, 0, 1, 1, 28, 9, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.087563}", "{'[6, 0, 0, 0, 3, 0, 1, 1, 28, 9, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.087486}", "{'[6, 0, 0, 0, 3, 0, 1, 1, 28, 9, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.087553}"]
returning from 'run': {'[6, 0, 0, 0, 3, 0, 1, 1, 28, 9, 0, 23, 1, 1, 0, 1, 0, 1]': ([0.101533, 0.101487, 0.101405, 0.095032, 0.087517, 0.0874729, 0.087491, 0.087539, 0.088037, 0.0875239, 0.0875461, 0.0874929, 0.0875721, 0.087502, 0.087523, 0.087492, 0.087569, 0.0874839, 0.087518, 0.0875471, 0.087575, 0.0879099, 0.0875089, 0.0875661, 0.087594, 0.08814, 0.0877562, 0.087563, 0.087486, 0.087553], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 0, 0, 3, 0, 1, 1, 28, 9, 0, 23, 1, 1, 0, 1, 0, 1]': ([0.101533, 0.101487, 0.101405, 0.095032, 0.087517, 0.0874729, 0.087491, 0.087539, 0.088037, 0.0875239, 0.0875461, 0.0874929, 0.0875721, 0.087502, 0.087523, 0.087492, 0.087569, 0.0874839, 0.087518, 0.0875471, 0.087575, 0.0879099, 0.0875089, 0.0875661, 0.087594, 0.08814, 0.0877562, 0.087563, 0.087486, 0.087553], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Design Best Point:
[3, 6, 6, 1, 5, 0, 0, 0, 0, 0, 10, 1, 1, 1, 0, 1, 0, 1]
Length of requested configs: 1
Result was on Database, Returning Now
Fixed Factors: {'ACOPY_y': 1, 'U1_I': 28, 'T2_J': 3, 'SCR': 1}
Slowdown (Design Best): 0.5390524317159421
Slowdown (Predicted Best): 0.5479994063368425
Budget: 40/180
Updating Global Best: 0.08777435666666661
Current Best Point: 
[3, 6, 6, 1, 5, 0, 0, 0, 0, 0, 10, 1, 1, 1, 0, 1, 0, 1]
Step 1
Generating valid search space of size 3700 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Valid coordinates: 740
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Valid coordinates: 1480
Tested coordinates: 70000
Tested coordinates: 80000
Tested coordinates: 90000
Valid coordinates: 2220
Tested coordinates: 100000
Tested coordinates: 110000
Tested coordinates: 120000
Valid coordinates: 2960
Tested coordinates: 130000
Tested coordinates: 140000
Tested coordinates: 150000
Valid coordinates: 3700
Valid/Tested configurations: 3700/155050
Generated Search Space:
NULL
Clean Info:
Removed Factors: character(0)

Removed Inverse Factors: [1] "ACOPY_x" "VEC1"    "VEC2"   

New Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_K', 'ACOPY_x', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'VEC1', 'VEC2']
New Inverse Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_K', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
New Fixed Factors: {'ACOPY_y': 1, 'U1_I': 28, 'T2_J': 3, 'SCR': 1}
Full Model:  ~ T1_I + T1_J + T1_K + T2_I + T2_K + ACOPY_x + U_I + U_J + U_K + RT_I + RT_J + RT_K + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_K)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Fixed Factors: {'ACOPY_y': 1, 'U1_I': 28, 'T2_J': 3, 'SCR': 1}
Computing D-Optimal Design
Computing D-Optimal Design with 37 experiments
Design Formula:  ~ T1_I + T1_J + T1_K + T2_I + T2_K + ACOPY_x + U_I + U_J + U_K + RT_I + RT_J + RT_K + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_K)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Starting "optFederov" run
Using Search Space:
NULL
Data Dimensions: [1] 3700   14

     T1_I T1_J T1_K T2_I T2_K ACOPY_x U_I U_J U_K RT_I RT_J RT_K VEC1 VEC2
80      6    2    2    5    0       0   2   4   0    2    0    0    0    0
295     6    0    2    0    5       1  18   0  25    0    0    0    1    0
305     6    0    0    5    1       0   3   0   0    1    0    1    1    1
873     2    4    3    6    2       1  29   0  29    1    0    1    0    0
901     6    2    4    0    2       1  19   0   5    0    0    2    0    1
955     2    1    1    3    0       1   0   0   0    1    0    0    1    0
1029    0    5    2    6    6       1   2  20   0    0    0    2    1    1
1044    1    0    0    6    6       1   0   6   7    0    0    0    1    1
1213    3    5    6    0    0       0  22  29   0    0    0    0    0    0
1376    0    4    0    1    6       0   0  26  14    2    0    0    0    1
1440    1    0    6    0    6       0  25  29   0    0    1    0    0    0
1565    0    2    0    0    1       1   8   0   6    0    2    0    1    1
1727    1    2    0    0    6       1   0  15  22    1    0    0    1    0
1745    0    2    6    1    0       1   0   7   3    0    1    1    1    0
1898    0    1    3    1    1       1   0  20  28    1    0    0    0    1
2403    3    5    0    1    6       1  19   0  12    0    0    2    0    0
2508    2    2    4    0    6       0   0   1   0    0    1    1    0    1
2559    4    0    6    6    0       1  15   0  14    2    0    0    0    1
2730    5    4    2    5    6       0  27   0   7    0    2    0    1    1
2741    0    0    1    2    0       0   0   3  28    0    0    2    1    0
2861    0    0    5    2    5       0  29  23   0    0    0    1    0    0
2895    2    2    0    5    2       1  29   3   0    2    0    0    1    1
3111    1    4    2    1    2       1   0  27   6    0    2    0    1    0
3141    6    5    0    4    1       1   0  29  10    0    0    1    0    1
3152    2    2    6    4    6       1  11   8   0    0    0    0    1    0
3180    2    0    3    5    3       1   3   7   0    0    2    0    0    0
3184    0    4    6    5    5       0   2   0  28    2    0    0    1    0
3189    3    2    2    6    0       1   0  29  29    0    1    1    0    0
3265    3    5    1    0    1       0   3   5   0    1    0    1    1    1
3292    6    1    0    6    2       0  29  27   0    1    1    0    1    0
3422    4    0    0    6    2       0   1   0  22    0    0    0    0    1
3444    1    1    2    2    6       0   6   0   5    1    0    1    0    1
3474    0    5    2    6    1       0   0   6   9    0    1    0    1    0
3520    5    4    6    4    5       0   0  27  26    0    1    1    1    1
3521    3    5    0    2    0       1  23   4   0    0    1    0    0    1
3665    6    5    6    6    6       0   0   9   0    0    2    0    0    0
3688    0    0    0    0    0       0   0  25   5    2    0    0    0    1

D-Efficiency Approximation: [1] 0.444

Measuring design of size 37
Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_K', 'ACOPY_x', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Length of requested configs: 1
Code stats:
        Number of loops: 	35
        Max loop nest depth: 	6
        Additions: 		1141
        Multiplications: 	504
        Divisions: 		0
        Logical: 		0
        Reads: 			2406
        Writes: 		457
        Comparisons:		35
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest48.exe __orio_perftest48.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest48.exe  
Program Test Output: 
{'[6, 2, 2, 5, 3, 0, 0, 1, 28, 2, 4, 0, 2, 0, 0, 1, 0, 0]' : 0.155574}
{'[6, 2, 2, 5, 3, 0, 0, 1, 28, 2, 4, 0, 2, 0, 0, 1, 0, 0]' : 0.154699}
{'[6, 2, 2, 5, 3, 0, 0, 1, 28, 2, 4, 0, 2, 0, 0, 1, 0, 0]' : 0.156398}
{'[6, 2, 2, 5, 3, 0, 0, 1, 28, 2, 4, 0, 2, 0, 0, 1, 0, 0]' : 0.157067}
{'[6, 2, 2, 5, 3, 0, 0, 1, 28, 2, 4, 0, 2, 0, 0, 1, 0, 0]' : 0.154523}
{'[6, 2, 2, 5, 3, 0, 0, 1, 28, 2, 4, 0, 2, 0, 0, 1, 0, 0]' : 0.155441}
{'[6, 2, 2, 5, 3, 0, 0, 1, 28, 2, 4, 0, 2, 0, 0, 1, 0, 0]' : 0.152449}
{'[6, 2, 2, 5, 3, 0, 0, 1, 28, 2, 4, 0, 2, 0, 0, 1, 0, 0]' : 0.152178}
{'[6, 2, 2, 5, 3, 0, 0, 1, 28, 2, 4, 0, 2, 0, 0, 1, 0, 0]' : 0.155622}
{'[6, 2, 2, 5, 3, 0, 0, 1, 28, 2, 4, 0, 2, 0, 0, 1, 0, 0]' : 0.157029}
{'[6, 2, 2, 5, 3, 0, 0, 1, 28, 2, 4, 0, 2, 0, 0, 1, 0, 0]' : 0.155161}
{'[6, 2, 2, 5, 3, 0, 0, 1, 28, 2, 4, 0, 2, 0, 0, 1, 0, 0]' : 0.156122}
{'[6, 2, 2, 5, 3, 0, 0, 1, 28, 2, 4, 0, 2, 0, 0, 1, 0, 0]' : 0.15631}
{'[6, 2, 2, 5, 3, 0, 0, 1, 28, 2, 4, 0, 2, 0, 0, 1, 0, 0]' : 0.155247}
{'[6, 2, 2, 5, 3, 0, 0, 1, 28, 2, 4, 0, 2, 0, 0, 1, 0, 0]' : 0.153361}
{'[6, 2, 2, 5, 3, 0, 0, 1, 28, 2, 4, 0, 2, 0, 0, 1, 0, 0]' : 0.15689}
{'[6, 2, 2, 5, 3, 0, 0, 1, 28, 2, 4, 0, 2, 0, 0, 1, 0, 0]' : 0.157231}
{'[6, 2, 2, 5, 3, 0, 0, 1, 28, 2, 4, 0, 2, 0, 0, 1, 0, 0]' : 0.156524}
{'[6, 2, 2, 5, 3, 0, 0, 1, 28, 2, 4, 0, 2, 0, 0, 1, 0, 0]' : 0.157265}
{'[6, 2, 2, 5, 3, 0, 0, 1, 28, 2, 4, 0, 2, 0, 0, 1, 0, 0]' : 0.156952}
{'[6, 2, 2, 5, 3, 0, 0, 1, 28, 2, 4, 0, 2, 0, 0, 1, 0, 0]' : 0.157179}
{'[6, 2, 2, 5, 3, 0, 0, 1, 28, 2, 4, 0, 2, 0, 0, 1, 0, 0]' : 0.157594}
{'[6, 2, 2, 5, 3, 0, 0, 1, 28, 2, 4, 0, 2, 0, 0, 1, 0, 0]' : 0.157086}
{'[6, 2, 2, 5, 3, 0, 0, 1, 28, 2, 4, 0, 2, 0, 0, 1, 0, 0]' : 0.156928}
{'[6, 2, 2, 5, 3, 0, 0, 1, 28, 2, 4, 0, 2, 0, 0, 1, 0, 0]' : 0.157181}
{'[6, 2, 2, 5, 3, 0, 0, 1, 28, 2, 4, 0, 2, 0, 0, 1, 0, 0]' : 0.156412}
{'[6, 2, 2, 5, 3, 0, 0, 1, 28, 2, 4, 0, 2, 0, 0, 1, 0, 0]' : 0.156535}
{'[6, 2, 2, 5, 3, 0, 0, 1, 28, 2, 4, 0, 2, 0, 0, 1, 0, 0]' : 0.156813}
{'[6, 2, 2, 5, 3, 0, 0, 1, 28, 2, 4, 0, 2, 0, 0, 1, 0, 0]' : 0.156443}
{'[6, 2, 2, 5, 3, 0, 0, 1, 28, 2, 4, 0, 2, 0, 0, 1, 0, 0]' : 0.156295}

out:
 ["{'[6, 2, 2, 5, 3, 0, 0, 1, 28, 2, 4, 0, 2, 0, 0, 1, 0, 0]' : 0.155574}", "{'[6, 2, 2, 5, 3, 0, 0, 1, 28, 2, 4, 0, 2, 0, 0, 1, 0, 0]' : 0.154699}", "{'[6, 2, 2, 5, 3, 0, 0, 1, 28, 2, 4, 0, 2, 0, 0, 1, 0, 0]' : 0.156398}", "{'[6, 2, 2, 5, 3, 0, 0, 1, 28, 2, 4, 0, 2, 0, 0, 1, 0, 0]' : 0.157067}", "{'[6, 2, 2, 5, 3, 0, 0, 1, 28, 2, 4, 0, 2, 0, 0, 1, 0, 0]' : 0.154523}", "{'[6, 2, 2, 5, 3, 0, 0, 1, 28, 2, 4, 0, 2, 0, 0, 1, 0, 0]' : 0.155441}", "{'[6, 2, 2, 5, 3, 0, 0, 1, 28, 2, 4, 0, 2, 0, 0, 1, 0, 0]' : 0.152449}", "{'[6, 2, 2, 5, 3, 0, 0, 1, 28, 2, 4, 0, 2, 0, 0, 1, 0, 0]' : 0.152178}", "{'[6, 2, 2, 5, 3, 0, 0, 1, 28, 2, 4, 0, 2, 0, 0, 1, 0, 0]' : 0.155622}", "{'[6, 2, 2, 5, 3, 0, 0, 1, 28, 2, 4, 0, 2, 0, 0, 1, 0, 0]' : 0.157029}", "{'[6, 2, 2, 5, 3, 0, 0, 1, 28, 2, 4, 0, 2, 0, 0, 1, 0, 0]' : 0.155161}", "{'[6, 2, 2, 5, 3, 0, 0, 1, 28, 2, 4, 0, 2, 0, 0, 1, 0, 0]' : 0.156122}", "{'[6, 2, 2, 5, 3, 0, 0, 1, 28, 2, 4, 0, 2, 0, 0, 1, 0, 0]' : 0.15631}", "{'[6, 2, 2, 5, 3, 0, 0, 1, 28, 2, 4, 0, 2, 0, 0, 1, 0, 0]' : 0.155247}", "{'[6, 2, 2, 5, 3, 0, 0, 1, 28, 2, 4, 0, 2, 0, 0, 1, 0, 0]' : 0.153361}", "{'[6, 2, 2, 5, 3, 0, 0, 1, 28, 2, 4, 0, 2, 0, 0, 1, 0, 0]' : 0.15689}", "{'[6, 2, 2, 5, 3, 0, 0, 1, 28, 2, 4, 0, 2, 0, 0, 1, 0, 0]' : 0.157231}", "{'[6, 2, 2, 5, 3, 0, 0, 1, 28, 2, 4, 0, 2, 0, 0, 1, 0, 0]' : 0.156524}", "{'[6, 2, 2, 5, 3, 0, 0, 1, 28, 2, 4, 0, 2, 0, 0, 1, 0, 0]' : 0.157265}", "{'[6, 2, 2, 5, 3, 0, 0, 1, 28, 2, 4, 0, 2, 0, 0, 1, 0, 0]' : 0.156952}", "{'[6, 2, 2, 5, 3, 0, 0, 1, 28, 2, 4, 0, 2, 0, 0, 1, 0, 0]' : 0.157179}", "{'[6, 2, 2, 5, 3, 0, 0, 1, 28, 2, 4, 0, 2, 0, 0, 1, 0, 0]' : 0.157594}", "{'[6, 2, 2, 5, 3, 0, 0, 1, 28, 2, 4, 0, 2, 0, 0, 1, 0, 0]' : 0.157086}", "{'[6, 2, 2, 5, 3, 0, 0, 1, 28, 2, 4, 0, 2, 0, 0, 1, 0, 0]' : 0.156928}", "{'[6, 2, 2, 5, 3, 0, 0, 1, 28, 2, 4, 0, 2, 0, 0, 1, 0, 0]' : 0.157181}", "{'[6, 2, 2, 5, 3, 0, 0, 1, 28, 2, 4, 0, 2, 0, 0, 1, 0, 0]' : 0.156412}", "{'[6, 2, 2, 5, 3, 0, 0, 1, 28, 2, 4, 0, 2, 0, 0, 1, 0, 0]' : 0.156535}", "{'[6, 2, 2, 5, 3, 0, 0, 1, 28, 2, 4, 0, 2, 0, 0, 1, 0, 0]' : 0.156813}", "{'[6, 2, 2, 5, 3, 0, 0, 1, 28, 2, 4, 0, 2, 0, 0, 1, 0, 0]' : 0.156443}", "{'[6, 2, 2, 5, 3, 0, 0, 1, 28, 2, 4, 0, 2, 0, 0, 1, 0, 0]' : 0.156295}"]
returning from 'run': {'[6, 2, 2, 5, 3, 0, 0, 1, 28, 2, 4, 0, 2, 0, 0, 1, 0, 0]': ([0.155574, 0.154699, 0.156398, 0.157067, 0.154523, 0.155441, 0.152449, 0.152178, 0.155622, 0.157029, 0.155161, 0.156122, 0.15631, 0.155247, 0.153361, 0.15689, 0.157231, 0.156524, 0.157265, 0.156952, 0.157179, 0.157594, 0.157086, 0.156928, 0.157181, 0.156412, 0.156535, 0.156813, 0.156443, 0.156295], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 2, 2, 5, 3, 0, 0, 1, 28, 2, 4, 0, 2, 0, 0, 1, 0, 0]': ([0.155574, 0.154699, 0.156398, 0.157067, 0.154523, 0.155441, 0.152449, 0.152178, 0.155622, 0.157029, 0.155161, 0.156122, 0.15631, 0.155247, 0.153361, 0.15689, 0.157231, 0.156524, 0.157265, 0.156952, 0.157179, 0.157594, 0.157086, 0.156928, 0.157181, 0.156412, 0.156535, 0.156813, 0.156443, 0.156295], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	113
        Max loop nest depth: 	5
        Additions: 		4875
        Multiplications: 	1120
        Divisions: 		0
        Logical: 		0
        Reads: 			9615
        Writes: 		2020
        Comparisons:		113
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest49.exe __orio_perftest49.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest49.exe  
Program Test Output: 
{'[6, 0, 2, 0, 3, 5, 1, 1, 28, 18, 0, 25, 0, 0, 0, 1, 1, 0]' : 0.23987}
{'[6, 0, 2, 0, 3, 5, 1, 1, 28, 18, 0, 25, 0, 0, 0, 1, 1, 0]' : 0.239519}
{'[6, 0, 2, 0, 3, 5, 1, 1, 28, 18, 0, 25, 0, 0, 0, 1, 1, 0]' : 0.222356}
{'[6, 0, 2, 0, 3, 5, 1, 1, 28, 18, 0, 25, 0, 0, 0, 1, 1, 0]' : 0.216023}
{'[6, 0, 2, 0, 3, 5, 1, 1, 28, 18, 0, 25, 0, 0, 0, 1, 1, 0]' : 0.215889}
{'[6, 0, 2, 0, 3, 5, 1, 1, 28, 18, 0, 25, 0, 0, 0, 1, 1, 0]' : 0.210492}
{'[6, 0, 2, 0, 3, 5, 1, 1, 28, 18, 0, 25, 0, 0, 0, 1, 1, 0]' : 0.210543}
{'[6, 0, 2, 0, 3, 5, 1, 1, 28, 18, 0, 25, 0, 0, 0, 1, 1, 0]' : 0.206945}
{'[6, 0, 2, 0, 3, 5, 1, 1, 28, 18, 0, 25, 0, 0, 0, 1, 1, 0]' : 0.204615}
{'[6, 0, 2, 0, 3, 5, 1, 1, 28, 18, 0, 25, 0, 0, 0, 1, 1, 0]' : 0.204855}
{'[6, 0, 2, 0, 3, 5, 1, 1, 28, 18, 0, 25, 0, 0, 0, 1, 1, 0]' : 0.206056}
{'[6, 0, 2, 0, 3, 5, 1, 1, 28, 18, 0, 25, 0, 0, 0, 1, 1, 0]' : 0.210572}
{'[6, 0, 2, 0, 3, 5, 1, 1, 28, 18, 0, 25, 0, 0, 0, 1, 1, 0]' : 0.210615}
{'[6, 0, 2, 0, 3, 5, 1, 1, 28, 18, 0, 25, 0, 0, 0, 1, 1, 0]' : 0.209388}
{'[6, 0, 2, 0, 3, 5, 1, 1, 28, 18, 0, 25, 0, 0, 0, 1, 1, 0]' : 0.205082}
{'[6, 0, 2, 0, 3, 5, 1, 1, 28, 18, 0, 25, 0, 0, 0, 1, 1, 0]' : 0.205633}
{'[6, 0, 2, 0, 3, 5, 1, 1, 28, 18, 0, 25, 0, 0, 0, 1, 1, 0]' : 0.210753}
{'[6, 0, 2, 0, 3, 5, 1, 1, 28, 18, 0, 25, 0, 0, 0, 1, 1, 0]' : 0.208673}
{'[6, 0, 2, 0, 3, 5, 1, 1, 28, 18, 0, 25, 0, 0, 0, 1, 1, 0]' : 0.204974}
{'[6, 0, 2, 0, 3, 5, 1, 1, 28, 18, 0, 25, 0, 0, 0, 1, 1, 0]' : 0.204777}
{'[6, 0, 2, 0, 3, 5, 1, 1, 28, 18, 0, 25, 0, 0, 0, 1, 1, 0]' : 0.206009}
{'[6, 0, 2, 0, 3, 5, 1, 1, 28, 18, 0, 25, 0, 0, 0, 1, 1, 0]' : 0.209076}
{'[6, 0, 2, 0, 3, 5, 1, 1, 28, 18, 0, 25, 0, 0, 0, 1, 1, 0]' : 0.20437}
{'[6, 0, 2, 0, 3, 5, 1, 1, 28, 18, 0, 25, 0, 0, 0, 1, 1, 0]' : 0.204632}
{'[6, 0, 2, 0, 3, 5, 1, 1, 28, 18, 0, 25, 0, 0, 0, 1, 1, 0]' : 0.209234}
{'[6, 0, 2, 0, 3, 5, 1, 1, 28, 18, 0, 25, 0, 0, 0, 1, 1, 0]' : 0.210702}
{'[6, 0, 2, 0, 3, 5, 1, 1, 28, 18, 0, 25, 0, 0, 0, 1, 1, 0]' : 0.21061}
{'[6, 0, 2, 0, 3, 5, 1, 1, 28, 18, 0, 25, 0, 0, 0, 1, 1, 0]' : 0.210346}
{'[6, 0, 2, 0, 3, 5, 1, 1, 28, 18, 0, 25, 0, 0, 0, 1, 1, 0]' : 0.210955}
{'[6, 0, 2, 0, 3, 5, 1, 1, 28, 18, 0, 25, 0, 0, 0, 1, 1, 0]' : 0.210355}

out:
 ["{'[6, 0, 2, 0, 3, 5, 1, 1, 28, 18, 0, 25, 0, 0, 0, 1, 1, 0]' : 0.23987}", "{'[6, 0, 2, 0, 3, 5, 1, 1, 28, 18, 0, 25, 0, 0, 0, 1, 1, 0]' : 0.239519}", "{'[6, 0, 2, 0, 3, 5, 1, 1, 28, 18, 0, 25, 0, 0, 0, 1, 1, 0]' : 0.222356}", "{'[6, 0, 2, 0, 3, 5, 1, 1, 28, 18, 0, 25, 0, 0, 0, 1, 1, 0]' : 0.216023}", "{'[6, 0, 2, 0, 3, 5, 1, 1, 28, 18, 0, 25, 0, 0, 0, 1, 1, 0]' : 0.215889}", "{'[6, 0, 2, 0, 3, 5, 1, 1, 28, 18, 0, 25, 0, 0, 0, 1, 1, 0]' : 0.210492}", "{'[6, 0, 2, 0, 3, 5, 1, 1, 28, 18, 0, 25, 0, 0, 0, 1, 1, 0]' : 0.210543}", "{'[6, 0, 2, 0, 3, 5, 1, 1, 28, 18, 0, 25, 0, 0, 0, 1, 1, 0]' : 0.206945}", "{'[6, 0, 2, 0, 3, 5, 1, 1, 28, 18, 0, 25, 0, 0, 0, 1, 1, 0]' : 0.204615}", "{'[6, 0, 2, 0, 3, 5, 1, 1, 28, 18, 0, 25, 0, 0, 0, 1, 1, 0]' : 0.204855}", "{'[6, 0, 2, 0, 3, 5, 1, 1, 28, 18, 0, 25, 0, 0, 0, 1, 1, 0]' : 0.206056}", "{'[6, 0, 2, 0, 3, 5, 1, 1, 28, 18, 0, 25, 0, 0, 0, 1, 1, 0]' : 0.210572}", "{'[6, 0, 2, 0, 3, 5, 1, 1, 28, 18, 0, 25, 0, 0, 0, 1, 1, 0]' : 0.210615}", "{'[6, 0, 2, 0, 3, 5, 1, 1, 28, 18, 0, 25, 0, 0, 0, 1, 1, 0]' : 0.209388}", "{'[6, 0, 2, 0, 3, 5, 1, 1, 28, 18, 0, 25, 0, 0, 0, 1, 1, 0]' : 0.205082}", "{'[6, 0, 2, 0, 3, 5, 1, 1, 28, 18, 0, 25, 0, 0, 0, 1, 1, 0]' : 0.205633}", "{'[6, 0, 2, 0, 3, 5, 1, 1, 28, 18, 0, 25, 0, 0, 0, 1, 1, 0]' : 0.210753}", "{'[6, 0, 2, 0, 3, 5, 1, 1, 28, 18, 0, 25, 0, 0, 0, 1, 1, 0]' : 0.208673}", "{'[6, 0, 2, 0, 3, 5, 1, 1, 28, 18, 0, 25, 0, 0, 0, 1, 1, 0]' : 0.204974}", "{'[6, 0, 2, 0, 3, 5, 1, 1, 28, 18, 0, 25, 0, 0, 0, 1, 1, 0]' : 0.204777}", "{'[6, 0, 2, 0, 3, 5, 1, 1, 28, 18, 0, 25, 0, 0, 0, 1, 1, 0]' : 0.206009}", "{'[6, 0, 2, 0, 3, 5, 1, 1, 28, 18, 0, 25, 0, 0, 0, 1, 1, 0]' : 0.209076}", "{'[6, 0, 2, 0, 3, 5, 1, 1, 28, 18, 0, 25, 0, 0, 0, 1, 1, 0]' : 0.20437}", "{'[6, 0, 2, 0, 3, 5, 1, 1, 28, 18, 0, 25, 0, 0, 0, 1, 1, 0]' : 0.204632}", "{'[6, 0, 2, 0, 3, 5, 1, 1, 28, 18, 0, 25, 0, 0, 0, 1, 1, 0]' : 0.209234}", "{'[6, 0, 2, 0, 3, 5, 1, 1, 28, 18, 0, 25, 0, 0, 0, 1, 1, 0]' : 0.210702}", "{'[6, 0, 2, 0, 3, 5, 1, 1, 28, 18, 0, 25, 0, 0, 0, 1, 1, 0]' : 0.21061}", "{'[6, 0, 2, 0, 3, 5, 1, 1, 28, 18, 0, 25, 0, 0, 0, 1, 1, 0]' : 0.210346}", "{'[6, 0, 2, 0, 3, 5, 1, 1, 28, 18, 0, 25, 0, 0, 0, 1, 1, 0]' : 0.210955}", "{'[6, 0, 2, 0, 3, 5, 1, 1, 28, 18, 0, 25, 0, 0, 0, 1, 1, 0]' : 0.210355}"]
returning from 'run': {'[6, 0, 2, 0, 3, 5, 1, 1, 28, 18, 0, 25, 0, 0, 0, 1, 1, 0]': ([0.23987, 0.239519, 0.222356, 0.216023, 0.215889, 0.210492, 0.210543, 0.206945, 0.204615, 0.204855, 0.206056, 0.210572, 0.210615, 0.209388, 0.205082, 0.205633, 0.210753, 0.208673, 0.204974, 0.204777, 0.206009, 0.209076, 0.20437, 0.204632, 0.209234, 0.210702, 0.21061, 0.210346, 0.210955, 0.210355], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 2, 0, 3, 5, 1, 1, 28, 18, 0, 25, 0, 0, 0, 1, 1, 0]': ([0.23987, 0.239519, 0.222356, 0.216023, 0.215889, 0.210492, 0.210543, 0.206945, 0.204615, 0.204855, 0.206056, 0.210572, 0.210615, 0.209388, 0.205082, 0.205633, 0.210753, 0.208673, 0.204974, 0.204777, 0.206009, 0.209076, 0.20437, 0.204632, 0.209234, 0.210702, 0.21061, 0.210346, 0.210955, 0.210355], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	31
        Max loop nest depth: 	5
        Additions: 		666
        Multiplications: 	234
        Divisions: 		0
        Logical: 		0
        Reads: 			1445
        Writes: 		312
        Comparisons:		31
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest50.exe __orio_perftest50.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest50.exe  
Program Test Output: 
{'[6, 0, 0, 5, 3, 1, 0, 1, 28, 3, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0990319}
{'[6, 0, 0, 5, 3, 1, 0, 1, 28, 3, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0990479}
{'[6, 0, 0, 5, 3, 1, 0, 1, 28, 3, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.100052}
{'[6, 0, 0, 5, 3, 1, 0, 1, 28, 3, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.100463}
{'[6, 0, 0, 5, 3, 1, 0, 1, 28, 3, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.099117}
{'[6, 0, 0, 5, 3, 1, 0, 1, 28, 3, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.098753}
{'[6, 0, 0, 5, 3, 1, 0, 1, 28, 3, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0986929}
{'[6, 0, 0, 5, 3, 1, 0, 1, 28, 3, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0989909}
{'[6, 0, 0, 5, 3, 1, 0, 1, 28, 3, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0988319}
{'[6, 0, 0, 5, 3, 1, 0, 1, 28, 3, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0988102}
{'[6, 0, 0, 5, 3, 1, 0, 1, 28, 3, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0992219}
{'[6, 0, 0, 5, 3, 1, 0, 1, 28, 3, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0988941}
{'[6, 0, 0, 5, 3, 1, 0, 1, 28, 3, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0992169}
{'[6, 0, 0, 5, 3, 1, 0, 1, 28, 3, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0991371}
{'[6, 0, 0, 5, 3, 1, 0, 1, 28, 3, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.098772}
{'[6, 0, 0, 5, 3, 1, 0, 1, 28, 3, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0988691}
{'[6, 0, 0, 5, 3, 1, 0, 1, 28, 3, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.098738}
{'[6, 0, 0, 5, 3, 1, 0, 1, 28, 3, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0996091}
{'[6, 0, 0, 5, 3, 1, 0, 1, 28, 3, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.10104}
{'[6, 0, 0, 5, 3, 1, 0, 1, 28, 3, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.10098}
{'[6, 0, 0, 5, 3, 1, 0, 1, 28, 3, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.10097}
{'[6, 0, 0, 5, 3, 1, 0, 1, 28, 3, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.10118}
{'[6, 0, 0, 5, 3, 1, 0, 1, 28, 3, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.101237}
{'[6, 0, 0, 5, 3, 1, 0, 1, 28, 3, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.100996}
{'[6, 0, 0, 5, 3, 1, 0, 1, 28, 3, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.101194}
{'[6, 0, 0, 5, 3, 1, 0, 1, 28, 3, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.101186}
{'[6, 0, 0, 5, 3, 1, 0, 1, 28, 3, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0989661}
{'[6, 0, 0, 5, 3, 1, 0, 1, 28, 3, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0990071}
{'[6, 0, 0, 5, 3, 1, 0, 1, 28, 3, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0996599}
{'[6, 0, 0, 5, 3, 1, 0, 1, 28, 3, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.098896}

out:
 ["{'[6, 0, 0, 5, 3, 1, 0, 1, 28, 3, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0990319}", "{'[6, 0, 0, 5, 3, 1, 0, 1, 28, 3, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0990479}", "{'[6, 0, 0, 5, 3, 1, 0, 1, 28, 3, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.100052}", "{'[6, 0, 0, 5, 3, 1, 0, 1, 28, 3, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.100463}", "{'[6, 0, 0, 5, 3, 1, 0, 1, 28, 3, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.099117}", "{'[6, 0, 0, 5, 3, 1, 0, 1, 28, 3, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.098753}", "{'[6, 0, 0, 5, 3, 1, 0, 1, 28, 3, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0986929}", "{'[6, 0, 0, 5, 3, 1, 0, 1, 28, 3, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0989909}", "{'[6, 0, 0, 5, 3, 1, 0, 1, 28, 3, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0988319}", "{'[6, 0, 0, 5, 3, 1, 0, 1, 28, 3, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0988102}", "{'[6, 0, 0, 5, 3, 1, 0, 1, 28, 3, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0992219}", "{'[6, 0, 0, 5, 3, 1, 0, 1, 28, 3, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0988941}", "{'[6, 0, 0, 5, 3, 1, 0, 1, 28, 3, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0992169}", "{'[6, 0, 0, 5, 3, 1, 0, 1, 28, 3, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0991371}", "{'[6, 0, 0, 5, 3, 1, 0, 1, 28, 3, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.098772}", "{'[6, 0, 0, 5, 3, 1, 0, 1, 28, 3, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0988691}", "{'[6, 0, 0, 5, 3, 1, 0, 1, 28, 3, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.098738}", "{'[6, 0, 0, 5, 3, 1, 0, 1, 28, 3, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0996091}", "{'[6, 0, 0, 5, 3, 1, 0, 1, 28, 3, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.10104}", "{'[6, 0, 0, 5, 3, 1, 0, 1, 28, 3, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.10098}", "{'[6, 0, 0, 5, 3, 1, 0, 1, 28, 3, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.10097}", "{'[6, 0, 0, 5, 3, 1, 0, 1, 28, 3, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.10118}", "{'[6, 0, 0, 5, 3, 1, 0, 1, 28, 3, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.101237}", "{'[6, 0, 0, 5, 3, 1, 0, 1, 28, 3, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.100996}", "{'[6, 0, 0, 5, 3, 1, 0, 1, 28, 3, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.101194}", "{'[6, 0, 0, 5, 3, 1, 0, 1, 28, 3, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.101186}", "{'[6, 0, 0, 5, 3, 1, 0, 1, 28, 3, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0989661}", "{'[6, 0, 0, 5, 3, 1, 0, 1, 28, 3, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0990071}", "{'[6, 0, 0, 5, 3, 1, 0, 1, 28, 3, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0996599}", "{'[6, 0, 0, 5, 3, 1, 0, 1, 28, 3, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.098896}"]
returning from 'run': {'[6, 0, 0, 5, 3, 1, 0, 1, 28, 3, 0, 0, 1, 0, 1, 1, 1, 1]': ([0.0990319, 0.0990479, 0.100052, 0.100463, 0.099117, 0.098753, 0.0986929, 0.0989909, 0.0988319, 0.0988102, 0.0992219, 0.0988941, 0.0992169, 0.0991371, 0.098772, 0.0988691, 0.098738, 0.0996091, 0.10104, 0.10098, 0.10097, 0.10118, 0.101237, 0.100996, 0.101194, 0.101186, 0.0989661, 0.0990071, 0.0996599, 0.098896], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 0, 5, 3, 1, 0, 1, 28, 3, 0, 0, 1, 0, 1, 1, 1, 1]': ([0.0990319, 0.0990479, 0.100052, 0.100463, 0.099117, 0.098753, 0.0986929, 0.0989909, 0.0988319, 0.0988102, 0.0992219, 0.0988941, 0.0992169, 0.0991371, 0.098772, 0.0988691, 0.098738, 0.0996091, 0.10104, 0.10098, 0.10097, 0.10118, 0.101237, 0.100996, 0.101194, 0.101186, 0.0989661, 0.0990071, 0.0996599, 0.098896], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	121
        Max loop nest depth: 	6
        Additions: 		1959
        Multiplications: 	702
        Divisions: 		0
        Logical: 		0
        Reads: 			4300
        Writes: 		879
        Comparisons:		121
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest51.exe __orio_perftest51.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest51.exe  
Program Test Output: 
{'[2, 4, 3, 6, 3, 2, 1, 1, 28, 29, 0, 29, 1, 0, 1, 1, 0, 0]' : 0.109737}
{'[2, 4, 3, 6, 3, 2, 1, 1, 28, 29, 0, 29, 1, 0, 1, 1, 0, 0]' : 0.109604}
{'[2, 4, 3, 6, 3, 2, 1, 1, 28, 29, 0, 29, 1, 0, 1, 1, 0, 0]' : 0.109522}
{'[2, 4, 3, 6, 3, 2, 1, 1, 28, 29, 0, 29, 1, 0, 1, 1, 0, 0]' : 0.098407}
{'[2, 4, 3, 6, 3, 2, 1, 1, 28, 29, 0, 29, 1, 0, 1, 1, 0, 0]' : 0.0950291}
{'[2, 4, 3, 6, 3, 2, 1, 1, 28, 29, 0, 29, 1, 0, 1, 1, 0, 0]' : 0.0951462}
{'[2, 4, 3, 6, 3, 2, 1, 1, 28, 29, 0, 29, 1, 0, 1, 1, 0, 0]' : 0.095114}
{'[2, 4, 3, 6, 3, 2, 1, 1, 28, 29, 0, 29, 1, 0, 1, 1, 0, 0]' : 0.0952039}
{'[2, 4, 3, 6, 3, 2, 1, 1, 28, 29, 0, 29, 1, 0, 1, 1, 0, 0]' : 0.095242}
{'[2, 4, 3, 6, 3, 2, 1, 1, 28, 29, 0, 29, 1, 0, 1, 1, 0, 0]' : 0.0951388}
{'[2, 4, 3, 6, 3, 2, 1, 1, 28, 29, 0, 29, 1, 0, 1, 1, 0, 0]' : 0.0951681}
{'[2, 4, 3, 6, 3, 2, 1, 1, 28, 29, 0, 29, 1, 0, 1, 1, 0, 0]' : 0.095192}
{'[2, 4, 3, 6, 3, 2, 1, 1, 28, 29, 0, 29, 1, 0, 1, 1, 0, 0]' : 0.0956981}
{'[2, 4, 3, 6, 3, 2, 1, 1, 28, 29, 0, 29, 1, 0, 1, 1, 0, 0]' : 0.09519}
{'[2, 4, 3, 6, 3, 2, 1, 1, 28, 29, 0, 29, 1, 0, 1, 1, 0, 0]' : 0.095983}
{'[2, 4, 3, 6, 3, 2, 1, 1, 28, 29, 0, 29, 1, 0, 1, 1, 0, 0]' : 0.095401}
{'[2, 4, 3, 6, 3, 2, 1, 1, 28, 29, 0, 29, 1, 0, 1, 1, 0, 0]' : 0.0954311}
{'[2, 4, 3, 6, 3, 2, 1, 1, 28, 29, 0, 29, 1, 0, 1, 1, 0, 0]' : 0.0954101}
{'[2, 4, 3, 6, 3, 2, 1, 1, 28, 29, 0, 29, 1, 0, 1, 1, 0, 0]' : 0.0953689}
{'[2, 4, 3, 6, 3, 2, 1, 1, 28, 29, 0, 29, 1, 0, 1, 1, 0, 0]' : 0.0951569}
{'[2, 4, 3, 6, 3, 2, 1, 1, 28, 29, 0, 29, 1, 0, 1, 1, 0, 0]' : 0.0951669}
{'[2, 4, 3, 6, 3, 2, 1, 1, 28, 29, 0, 29, 1, 0, 1, 1, 0, 0]' : 0.095083}
{'[2, 4, 3, 6, 3, 2, 1, 1, 28, 29, 0, 29, 1, 0, 1, 1, 0, 0]' : 0.09517}
{'[2, 4, 3, 6, 3, 2, 1, 1, 28, 29, 0, 29, 1, 0, 1, 1, 0, 0]' : 0.0951431}
{'[2, 4, 3, 6, 3, 2, 1, 1, 28, 29, 0, 29, 1, 0, 1, 1, 0, 0]' : 0.095295}
{'[2, 4, 3, 6, 3, 2, 1, 1, 28, 29, 0, 29, 1, 0, 1, 1, 0, 0]' : 0.0952358}
{'[2, 4, 3, 6, 3, 2, 1, 1, 28, 29, 0, 29, 1, 0, 1, 1, 0, 0]' : 0.0951891}
{'[2, 4, 3, 6, 3, 2, 1, 1, 28, 29, 0, 29, 1, 0, 1, 1, 0, 0]' : 0.095134}
{'[2, 4, 3, 6, 3, 2, 1, 1, 28, 29, 0, 29, 1, 0, 1, 1, 0, 0]' : 0.095448}
{'[2, 4, 3, 6, 3, 2, 1, 1, 28, 29, 0, 29, 1, 0, 1, 1, 0, 0]' : 0.0954912}

out:
 ["{'[2, 4, 3, 6, 3, 2, 1, 1, 28, 29, 0, 29, 1, 0, 1, 1, 0, 0]' : 0.109737}", "{'[2, 4, 3, 6, 3, 2, 1, 1, 28, 29, 0, 29, 1, 0, 1, 1, 0, 0]' : 0.109604}", "{'[2, 4, 3, 6, 3, 2, 1, 1, 28, 29, 0, 29, 1, 0, 1, 1, 0, 0]' : 0.109522}", "{'[2, 4, 3, 6, 3, 2, 1, 1, 28, 29, 0, 29, 1, 0, 1, 1, 0, 0]' : 0.098407}", "{'[2, 4, 3, 6, 3, 2, 1, 1, 28, 29, 0, 29, 1, 0, 1, 1, 0, 0]' : 0.0950291}", "{'[2, 4, 3, 6, 3, 2, 1, 1, 28, 29, 0, 29, 1, 0, 1, 1, 0, 0]' : 0.0951462}", "{'[2, 4, 3, 6, 3, 2, 1, 1, 28, 29, 0, 29, 1, 0, 1, 1, 0, 0]' : 0.095114}", "{'[2, 4, 3, 6, 3, 2, 1, 1, 28, 29, 0, 29, 1, 0, 1, 1, 0, 0]' : 0.0952039}", "{'[2, 4, 3, 6, 3, 2, 1, 1, 28, 29, 0, 29, 1, 0, 1, 1, 0, 0]' : 0.095242}", "{'[2, 4, 3, 6, 3, 2, 1, 1, 28, 29, 0, 29, 1, 0, 1, 1, 0, 0]' : 0.0951388}", "{'[2, 4, 3, 6, 3, 2, 1, 1, 28, 29, 0, 29, 1, 0, 1, 1, 0, 0]' : 0.0951681}", "{'[2, 4, 3, 6, 3, 2, 1, 1, 28, 29, 0, 29, 1, 0, 1, 1, 0, 0]' : 0.095192}", "{'[2, 4, 3, 6, 3, 2, 1, 1, 28, 29, 0, 29, 1, 0, 1, 1, 0, 0]' : 0.0956981}", "{'[2, 4, 3, 6, 3, 2, 1, 1, 28, 29, 0, 29, 1, 0, 1, 1, 0, 0]' : 0.09519}", "{'[2, 4, 3, 6, 3, 2, 1, 1, 28, 29, 0, 29, 1, 0, 1, 1, 0, 0]' : 0.095983}", "{'[2, 4, 3, 6, 3, 2, 1, 1, 28, 29, 0, 29, 1, 0, 1, 1, 0, 0]' : 0.095401}", "{'[2, 4, 3, 6, 3, 2, 1, 1, 28, 29, 0, 29, 1, 0, 1, 1, 0, 0]' : 0.0954311}", "{'[2, 4, 3, 6, 3, 2, 1, 1, 28, 29, 0, 29, 1, 0, 1, 1, 0, 0]' : 0.0954101}", "{'[2, 4, 3, 6, 3, 2, 1, 1, 28, 29, 0, 29, 1, 0, 1, 1, 0, 0]' : 0.0953689}", "{'[2, 4, 3, 6, 3, 2, 1, 1, 28, 29, 0, 29, 1, 0, 1, 1, 0, 0]' : 0.0951569}", "{'[2, 4, 3, 6, 3, 2, 1, 1, 28, 29, 0, 29, 1, 0, 1, 1, 0, 0]' : 0.0951669}", "{'[2, 4, 3, 6, 3, 2, 1, 1, 28, 29, 0, 29, 1, 0, 1, 1, 0, 0]' : 0.095083}", "{'[2, 4, 3, 6, 3, 2, 1, 1, 28, 29, 0, 29, 1, 0, 1, 1, 0, 0]' : 0.09517}", "{'[2, 4, 3, 6, 3, 2, 1, 1, 28, 29, 0, 29, 1, 0, 1, 1, 0, 0]' : 0.0951431}", "{'[2, 4, 3, 6, 3, 2, 1, 1, 28, 29, 0, 29, 1, 0, 1, 1, 0, 0]' : 0.095295}", "{'[2, 4, 3, 6, 3, 2, 1, 1, 28, 29, 0, 29, 1, 0, 1, 1, 0, 0]' : 0.0952358}", "{'[2, 4, 3, 6, 3, 2, 1, 1, 28, 29, 0, 29, 1, 0, 1, 1, 0, 0]' : 0.0951891}", "{'[2, 4, 3, 6, 3, 2, 1, 1, 28, 29, 0, 29, 1, 0, 1, 1, 0, 0]' : 0.095134}", "{'[2, 4, 3, 6, 3, 2, 1, 1, 28, 29, 0, 29, 1, 0, 1, 1, 0, 0]' : 0.095448}", "{'[2, 4, 3, 6, 3, 2, 1, 1, 28, 29, 0, 29, 1, 0, 1, 1, 0, 0]' : 0.0954912}"]
returning from 'run': {'[2, 4, 3, 6, 3, 2, 1, 1, 28, 29, 0, 29, 1, 0, 1, 1, 0, 0]': ([0.109737, 0.109604, 0.109522, 0.098407, 0.0950291, 0.0951462, 0.095114, 0.0952039, 0.095242, 0.0951388, 0.0951681, 0.095192, 0.0956981, 0.09519, 0.095983, 0.095401, 0.0954311, 0.0954101, 0.0953689, 0.0951569, 0.0951669, 0.095083, 0.09517, 0.0951431, 0.095295, 0.0952358, 0.0951891, 0.095134, 0.095448, 0.0954912], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 4, 3, 6, 3, 2, 1, 1, 28, 29, 0, 29, 1, 0, 1, 1, 0, 0]': ([0.109737, 0.109604, 0.109522, 0.098407, 0.0950291, 0.0951462, 0.095114, 0.0952039, 0.095242, 0.0951388, 0.0951681, 0.095192, 0.0956981, 0.09519, 0.095983, 0.095401, 0.0954311, 0.0954101, 0.0953689, 0.0951569, 0.0951669, 0.095083, 0.09517, 0.0951431, 0.095295, 0.0952358, 0.0951891, 0.095134, 0.095448, 0.0954912], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = kkk
Code stats:
        Number of loops: 	78
        Max loop nest depth: 	5
        Additions: 		3289
        Multiplications: 	1386
        Divisions: 		0
        Logical: 		0
        Reads: 			6437
        Writes: 		1138
        Comparisons:		78
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest52.exe __orio_perftest52.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest52.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest52.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest52.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest52.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	6
        Additions: 		167
        Multiplications: 	36
        Divisions: 		0
        Logical: 		0
        Reads: 			442
        Writes: 		126
        Comparisons:		22
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest53.exe __orio_perftest53.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest53.exe  
Program Test Output: 
{'[2, 1, 1, 3, 3, 0, 1, 1, 28, 0, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.11284}
{'[2, 1, 1, 3, 3, 0, 1, 1, 28, 0, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.110313}
{'[2, 1, 1, 3, 3, 0, 1, 1, 28, 0, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.0998309}
{'[2, 1, 1, 3, 3, 0, 1, 1, 28, 0, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.0985839}
{'[2, 1, 1, 3, 3, 0, 1, 1, 28, 0, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.097652}
{'[2, 1, 1, 3, 3, 0, 1, 1, 28, 0, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.0976439}
{'[2, 1, 1, 3, 3, 0, 1, 1, 28, 0, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.097652}
{'[2, 1, 1, 3, 3, 0, 1, 1, 28, 0, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.097563}
{'[2, 1, 1, 3, 3, 0, 1, 1, 28, 0, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.098233}
{'[2, 1, 1, 3, 3, 0, 1, 1, 28, 0, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.098942}
{'[2, 1, 1, 3, 3, 0, 1, 1, 28, 0, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.0998199}
{'[2, 1, 1, 3, 3, 0, 1, 1, 28, 0, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.100198}
{'[2, 1, 1, 3, 3, 0, 1, 1, 28, 0, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.0999532}
{'[2, 1, 1, 3, 3, 0, 1, 1, 28, 0, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.0995669}
{'[2, 1, 1, 3, 3, 0, 1, 1, 28, 0, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.0973921}
{'[2, 1, 1, 3, 3, 0, 1, 1, 28, 0, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.0973971}
{'[2, 1, 1, 3, 3, 0, 1, 1, 28, 0, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.0976419}
{'[2, 1, 1, 3, 3, 0, 1, 1, 28, 0, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.0973661}
{'[2, 1, 1, 3, 3, 0, 1, 1, 28, 0, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.100646}
{'[2, 1, 1, 3, 3, 0, 1, 1, 28, 0, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.102129}
{'[2, 1, 1, 3, 3, 0, 1, 1, 28, 0, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.102056}
{'[2, 1, 1, 3, 3, 0, 1, 1, 28, 0, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.102065}
{'[2, 1, 1, 3, 3, 0, 1, 1, 28, 0, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.102054}
{'[2, 1, 1, 3, 3, 0, 1, 1, 28, 0, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.101025}
{'[2, 1, 1, 3, 3, 0, 1, 1, 28, 0, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.0995932}
{'[2, 1, 1, 3, 3, 0, 1, 1, 28, 0, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.099508}
{'[2, 1, 1, 3, 3, 0, 1, 1, 28, 0, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.099535}
{'[2, 1, 1, 3, 3, 0, 1, 1, 28, 0, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.0995309}
{'[2, 1, 1, 3, 3, 0, 1, 1, 28, 0, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.0997131}
{'[2, 1, 1, 3, 3, 0, 1, 1, 28, 0, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.099535}

out:
 ["{'[2, 1, 1, 3, 3, 0, 1, 1, 28, 0, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.11284}", "{'[2, 1, 1, 3, 3, 0, 1, 1, 28, 0, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.110313}", "{'[2, 1, 1, 3, 3, 0, 1, 1, 28, 0, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.0998309}", "{'[2, 1, 1, 3, 3, 0, 1, 1, 28, 0, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.0985839}", "{'[2, 1, 1, 3, 3, 0, 1, 1, 28, 0, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.097652}", "{'[2, 1, 1, 3, 3, 0, 1, 1, 28, 0, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.0976439}", "{'[2, 1, 1, 3, 3, 0, 1, 1, 28, 0, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.097652}", "{'[2, 1, 1, 3, 3, 0, 1, 1, 28, 0, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.097563}", "{'[2, 1, 1, 3, 3, 0, 1, 1, 28, 0, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.098233}", "{'[2, 1, 1, 3, 3, 0, 1, 1, 28, 0, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.098942}", "{'[2, 1, 1, 3, 3, 0, 1, 1, 28, 0, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.0998199}", "{'[2, 1, 1, 3, 3, 0, 1, 1, 28, 0, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.100198}", "{'[2, 1, 1, 3, 3, 0, 1, 1, 28, 0, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.0999532}", "{'[2, 1, 1, 3, 3, 0, 1, 1, 28, 0, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.0995669}", "{'[2, 1, 1, 3, 3, 0, 1, 1, 28, 0, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.0973921}", "{'[2, 1, 1, 3, 3, 0, 1, 1, 28, 0, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.0973971}", "{'[2, 1, 1, 3, 3, 0, 1, 1, 28, 0, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.0976419}", "{'[2, 1, 1, 3, 3, 0, 1, 1, 28, 0, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.0973661}", "{'[2, 1, 1, 3, 3, 0, 1, 1, 28, 0, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.100646}", "{'[2, 1, 1, 3, 3, 0, 1, 1, 28, 0, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.102129}", "{'[2, 1, 1, 3, 3, 0, 1, 1, 28, 0, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.102056}", "{'[2, 1, 1, 3, 3, 0, 1, 1, 28, 0, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.102065}", "{'[2, 1, 1, 3, 3, 0, 1, 1, 28, 0, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.102054}", "{'[2, 1, 1, 3, 3, 0, 1, 1, 28, 0, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.101025}", "{'[2, 1, 1, 3, 3, 0, 1, 1, 28, 0, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.0995932}", "{'[2, 1, 1, 3, 3, 0, 1, 1, 28, 0, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.099508}", "{'[2, 1, 1, 3, 3, 0, 1, 1, 28, 0, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.099535}", "{'[2, 1, 1, 3, 3, 0, 1, 1, 28, 0, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.0995309}", "{'[2, 1, 1, 3, 3, 0, 1, 1, 28, 0, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.0997131}", "{'[2, 1, 1, 3, 3, 0, 1, 1, 28, 0, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.099535}"]
returning from 'run': {'[2, 1, 1, 3, 3, 0, 1, 1, 28, 0, 0, 0, 1, 0, 0, 1, 1, 0]': ([0.11284, 0.110313, 0.0998309, 0.0985839, 0.097652, 0.0976439, 0.097652, 0.097563, 0.098233, 0.098942, 0.0998199, 0.100198, 0.0999532, 0.0995669, 0.0973921, 0.0973971, 0.0976419, 0.0973661, 0.100646, 0.102129, 0.102056, 0.102065, 0.102054, 0.101025, 0.0995932, 0.099508, 0.099535, 0.0995309, 0.0997131, 0.099535], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 1, 1, 3, 3, 0, 1, 1, 28, 0, 0, 0, 1, 0, 0, 1, 1, 0]': ([0.11284, 0.110313, 0.0998309, 0.0985839, 0.097652, 0.0976439, 0.097652, 0.097563, 0.098233, 0.098942, 0.0998199, 0.100198, 0.0999532, 0.0995669, 0.0973921, 0.0973971, 0.0976419, 0.0973661, 0.100646, 0.102129, 0.102056, 0.102065, 0.102054, 0.101025, 0.0995932, 0.099508, 0.099535, 0.0995309, 0.0997131, 0.099535], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = jjj
Code stats:
        Number of loops: 	33
        Max loop nest depth: 	5
        Additions: 		1355
        Multiplications: 	432
        Divisions: 		0
        Logical: 		0
        Reads: 			2621
        Writes: 		481
        Comparisons:		33
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest54.exe __orio_perftest54.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest54.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest54.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest54.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest54.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		184
        Multiplications: 	34
        Divisions: 		0
        Logical: 		0
        Reads: 			405
        Writes: 		108
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest55.exe __orio_perftest55.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest55.exe  
Program Test Output: 
{'[1, 0, 0, 6, 3, 6, 1, 1, 28, 0, 6, 7, 0, 0, 0, 1, 1, 1]' : 0.281932}
{'[1, 0, 0, 6, 3, 6, 1, 1, 28, 0, 6, 7, 0, 0, 0, 1, 1, 1]' : 0.263536}
{'[1, 0, 0, 6, 3, 6, 1, 1, 28, 0, 6, 7, 0, 0, 0, 1, 1, 1]' : 0.245244}
{'[1, 0, 0, 6, 3, 6, 1, 1, 28, 0, 6, 7, 0, 0, 0, 1, 1, 1]' : 0.251516}
{'[1, 0, 0, 6, 3, 6, 1, 1, 28, 0, 6, 7, 0, 0, 0, 1, 1, 1]' : 0.2515}
{'[1, 0, 0, 6, 3, 6, 1, 1, 28, 0, 6, 7, 0, 0, 0, 1, 1, 1]' : 0.251473}
{'[1, 0, 0, 6, 3, 6, 1, 1, 28, 0, 6, 7, 0, 0, 0, 1, 1, 1]' : 0.251517}
{'[1, 0, 0, 6, 3, 6, 1, 1, 28, 0, 6, 7, 0, 0, 0, 1, 1, 1]' : 0.251493}
{'[1, 0, 0, 6, 3, 6, 1, 1, 28, 0, 6, 7, 0, 0, 0, 1, 1, 1]' : 0.251763}
{'[1, 0, 0, 6, 3, 6, 1, 1, 28, 0, 6, 7, 0, 0, 0, 1, 1, 1]' : 0.251585}
{'[1, 0, 0, 6, 3, 6, 1, 1, 28, 0, 6, 7, 0, 0, 0, 1, 1, 1]' : 0.251481}
{'[1, 0, 0, 6, 3, 6, 1, 1, 28, 0, 6, 7, 0, 0, 0, 1, 1, 1]' : 0.251457}
{'[1, 0, 0, 6, 3, 6, 1, 1, 28, 0, 6, 7, 0, 0, 0, 1, 1, 1]' : 0.251482}
{'[1, 0, 0, 6, 3, 6, 1, 1, 28, 0, 6, 7, 0, 0, 0, 1, 1, 1]' : 0.251444}
{'[1, 0, 0, 6, 3, 6, 1, 1, 28, 0, 6, 7, 0, 0, 0, 1, 1, 1]' : 0.250003}
{'[1, 0, 0, 6, 3, 6, 1, 1, 28, 0, 6, 7, 0, 0, 0, 1, 1, 1]' : 0.244052}
{'[1, 0, 0, 6, 3, 6, 1, 1, 28, 0, 6, 7, 0, 0, 0, 1, 1, 1]' : 0.245489}
{'[1, 0, 0, 6, 3, 6, 1, 1, 28, 0, 6, 7, 0, 0, 0, 1, 1, 1]' : 0.251477}
{'[1, 0, 0, 6, 3, 6, 1, 1, 28, 0, 6, 7, 0, 0, 0, 1, 1, 1]' : 0.251488}
{'[1, 0, 0, 6, 3, 6, 1, 1, 28, 0, 6, 7, 0, 0, 0, 1, 1, 1]' : 0.251464}
{'[1, 0, 0, 6, 3, 6, 1, 1, 28, 0, 6, 7, 0, 0, 0, 1, 1, 1]' : 0.251459}
{'[1, 0, 0, 6, 3, 6, 1, 1, 28, 0, 6, 7, 0, 0, 0, 1, 1, 1]' : 0.251487}
{'[1, 0, 0, 6, 3, 6, 1, 1, 28, 0, 6, 7, 0, 0, 0, 1, 1, 1]' : 0.251211}
{'[1, 0, 0, 6, 3, 6, 1, 1, 28, 0, 6, 7, 0, 0, 0, 1, 1, 1]' : 0.244288}
{'[1, 0, 0, 6, 3, 6, 1, 1, 28, 0, 6, 7, 0, 0, 0, 1, 1, 1]' : 0.245461}
{'[1, 0, 0, 6, 3, 6, 1, 1, 28, 0, 6, 7, 0, 0, 0, 1, 1, 1]' : 0.2482}
{'[1, 0, 0, 6, 3, 6, 1, 1, 28, 0, 6, 7, 0, 0, 0, 1, 1, 1]' : 0.245073}
{'[1, 0, 0, 6, 3, 6, 1, 1, 28, 0, 6, 7, 0, 0, 0, 1, 1, 1]' : 0.251503}
{'[1, 0, 0, 6, 3, 6, 1, 1, 28, 0, 6, 7, 0, 0, 0, 1, 1, 1]' : 0.251533}
{'[1, 0, 0, 6, 3, 6, 1, 1, 28, 0, 6, 7, 0, 0, 0, 1, 1, 1]' : 0.25155}

out:
 ["{'[1, 0, 0, 6, 3, 6, 1, 1, 28, 0, 6, 7, 0, 0, 0, 1, 1, 1]' : 0.281932}", "{'[1, 0, 0, 6, 3, 6, 1, 1, 28, 0, 6, 7, 0, 0, 0, 1, 1, 1]' : 0.263536}", "{'[1, 0, 0, 6, 3, 6, 1, 1, 28, 0, 6, 7, 0, 0, 0, 1, 1, 1]' : 0.245244}", "{'[1, 0, 0, 6, 3, 6, 1, 1, 28, 0, 6, 7, 0, 0, 0, 1, 1, 1]' : 0.251516}", "{'[1, 0, 0, 6, 3, 6, 1, 1, 28, 0, 6, 7, 0, 0, 0, 1, 1, 1]' : 0.2515}", "{'[1, 0, 0, 6, 3, 6, 1, 1, 28, 0, 6, 7, 0, 0, 0, 1, 1, 1]' : 0.251473}", "{'[1, 0, 0, 6, 3, 6, 1, 1, 28, 0, 6, 7, 0, 0, 0, 1, 1, 1]' : 0.251517}", "{'[1, 0, 0, 6, 3, 6, 1, 1, 28, 0, 6, 7, 0, 0, 0, 1, 1, 1]' : 0.251493}", "{'[1, 0, 0, 6, 3, 6, 1, 1, 28, 0, 6, 7, 0, 0, 0, 1, 1, 1]' : 0.251763}", "{'[1, 0, 0, 6, 3, 6, 1, 1, 28, 0, 6, 7, 0, 0, 0, 1, 1, 1]' : 0.251585}", "{'[1, 0, 0, 6, 3, 6, 1, 1, 28, 0, 6, 7, 0, 0, 0, 1, 1, 1]' : 0.251481}", "{'[1, 0, 0, 6, 3, 6, 1, 1, 28, 0, 6, 7, 0, 0, 0, 1, 1, 1]' : 0.251457}", "{'[1, 0, 0, 6, 3, 6, 1, 1, 28, 0, 6, 7, 0, 0, 0, 1, 1, 1]' : 0.251482}", "{'[1, 0, 0, 6, 3, 6, 1, 1, 28, 0, 6, 7, 0, 0, 0, 1, 1, 1]' : 0.251444}", "{'[1, 0, 0, 6, 3, 6, 1, 1, 28, 0, 6, 7, 0, 0, 0, 1, 1, 1]' : 0.250003}", "{'[1, 0, 0, 6, 3, 6, 1, 1, 28, 0, 6, 7, 0, 0, 0, 1, 1, 1]' : 0.244052}", "{'[1, 0, 0, 6, 3, 6, 1, 1, 28, 0, 6, 7, 0, 0, 0, 1, 1, 1]' : 0.245489}", "{'[1, 0, 0, 6, 3, 6, 1, 1, 28, 0, 6, 7, 0, 0, 0, 1, 1, 1]' : 0.251477}", "{'[1, 0, 0, 6, 3, 6, 1, 1, 28, 0, 6, 7, 0, 0, 0, 1, 1, 1]' : 0.251488}", "{'[1, 0, 0, 6, 3, 6, 1, 1, 28, 0, 6, 7, 0, 0, 0, 1, 1, 1]' : 0.251464}", "{'[1, 0, 0, 6, 3, 6, 1, 1, 28, 0, 6, 7, 0, 0, 0, 1, 1, 1]' : 0.251459}", "{'[1, 0, 0, 6, 3, 6, 1, 1, 28, 0, 6, 7, 0, 0, 0, 1, 1, 1]' : 0.251487}", "{'[1, 0, 0, 6, 3, 6, 1, 1, 28, 0, 6, 7, 0, 0, 0, 1, 1, 1]' : 0.251211}", "{'[1, 0, 0, 6, 3, 6, 1, 1, 28, 0, 6, 7, 0, 0, 0, 1, 1, 1]' : 0.244288}", "{'[1, 0, 0, 6, 3, 6, 1, 1, 28, 0, 6, 7, 0, 0, 0, 1, 1, 1]' : 0.245461}", "{'[1, 0, 0, 6, 3, 6, 1, 1, 28, 0, 6, 7, 0, 0, 0, 1, 1, 1]' : 0.2482}", "{'[1, 0, 0, 6, 3, 6, 1, 1, 28, 0, 6, 7, 0, 0, 0, 1, 1, 1]' : 0.245073}", "{'[1, 0, 0, 6, 3, 6, 1, 1, 28, 0, 6, 7, 0, 0, 0, 1, 1, 1]' : 0.251503}", "{'[1, 0, 0, 6, 3, 6, 1, 1, 28, 0, 6, 7, 0, 0, 0, 1, 1, 1]' : 0.251533}", "{'[1, 0, 0, 6, 3, 6, 1, 1, 28, 0, 6, 7, 0, 0, 0, 1, 1, 1]' : 0.25155}"]
returning from 'run': {'[1, 0, 0, 6, 3, 6, 1, 1, 28, 0, 6, 7, 0, 0, 0, 1, 1, 1]': ([0.281932, 0.263536, 0.245244, 0.251516, 0.2515, 0.251473, 0.251517, 0.251493, 0.251763, 0.251585, 0.251481, 0.251457, 0.251482, 0.251444, 0.250003, 0.244052, 0.245489, 0.251477, 0.251488, 0.251464, 0.251459, 0.251487, 0.251211, 0.244288, 0.245461, 0.2482, 0.245073, 0.251503, 0.251533, 0.25155], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 0, 6, 3, 6, 1, 1, 28, 0, 6, 7, 0, 0, 0, 1, 1, 1]': ([0.281932, 0.263536, 0.245244, 0.251516, 0.2515, 0.251473, 0.251517, 0.251493, 0.251763, 0.251585, 0.251481, 0.251457, 0.251482, 0.251444, 0.250003, 0.244052, 0.245489, 0.251477, 0.251488, 0.251464, 0.251459, 0.251487, 0.251211, 0.244288, 0.245461, 0.2482, 0.245073, 0.251503, 0.251533, 0.25155], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = jjj
Code stats:
        Number of loops: 	63
        Max loop nest depth: 	4
        Additions: 		3333
        Multiplications: 	1536
        Divisions: 		0
        Logical: 		0
        Reads: 			6425
        Writes: 		1079
        Comparisons:		63
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest56.exe __orio_perftest56.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest56.exe  
Program Test Output: 
{'[3, 5, 6, 0, 3, 0, 0, 1, 28, 22, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.175697}
{'[3, 5, 6, 0, 3, 0, 0, 1, 28, 22, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.178729}
{'[3, 5, 6, 0, 3, 0, 0, 1, 28, 22, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.175639}
{'[3, 5, 6, 0, 3, 0, 0, 1, 28, 22, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.175886}
{'[3, 5, 6, 0, 3, 0, 0, 1, 28, 22, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.175622}
{'[3, 5, 6, 0, 3, 0, 0, 1, 28, 22, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.176011}
{'[3, 5, 6, 0, 3, 0, 0, 1, 28, 22, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.175573}
{'[3, 5, 6, 0, 3, 0, 0, 1, 28, 22, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.175449}
{'[3, 5, 6, 0, 3, 0, 0, 1, 28, 22, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.17555}
{'[3, 5, 6, 0, 3, 0, 0, 1, 28, 22, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.176007}
{'[3, 5, 6, 0, 3, 0, 0, 1, 28, 22, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.175358}
{'[3, 5, 6, 0, 3, 0, 0, 1, 28, 22, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.175554}
{'[3, 5, 6, 0, 3, 0, 0, 1, 28, 22, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.175464}
{'[3, 5, 6, 0, 3, 0, 0, 1, 28, 22, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.175712}
{'[3, 5, 6, 0, 3, 0, 0, 1, 28, 22, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.175513}
{'[3, 5, 6, 0, 3, 0, 0, 1, 28, 22, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.1758}
{'[3, 5, 6, 0, 3, 0, 0, 1, 28, 22, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.176368}
{'[3, 5, 6, 0, 3, 0, 0, 1, 28, 22, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.176547}
{'[3, 5, 6, 0, 3, 0, 0, 1, 28, 22, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.175663}
{'[3, 5, 6, 0, 3, 0, 0, 1, 28, 22, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.175468}
{'[3, 5, 6, 0, 3, 0, 0, 1, 28, 22, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.17581}
{'[3, 5, 6, 0, 3, 0, 0, 1, 28, 22, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.175586}
{'[3, 5, 6, 0, 3, 0, 0, 1, 28, 22, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.175614}
{'[3, 5, 6, 0, 3, 0, 0, 1, 28, 22, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.175518}
{'[3, 5, 6, 0, 3, 0, 0, 1, 28, 22, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.175455}
{'[3, 5, 6, 0, 3, 0, 0, 1, 28, 22, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.175519}
{'[3, 5, 6, 0, 3, 0, 0, 1, 28, 22, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.178063}
{'[3, 5, 6, 0, 3, 0, 0, 1, 28, 22, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.175746}
{'[3, 5, 6, 0, 3, 0, 0, 1, 28, 22, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.176957}
{'[3, 5, 6, 0, 3, 0, 0, 1, 28, 22, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.178496}

out:
 ["{'[3, 5, 6, 0, 3, 0, 0, 1, 28, 22, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.175697}", "{'[3, 5, 6, 0, 3, 0, 0, 1, 28, 22, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.178729}", "{'[3, 5, 6, 0, 3, 0, 0, 1, 28, 22, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.175639}", "{'[3, 5, 6, 0, 3, 0, 0, 1, 28, 22, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.175886}", "{'[3, 5, 6, 0, 3, 0, 0, 1, 28, 22, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.175622}", "{'[3, 5, 6, 0, 3, 0, 0, 1, 28, 22, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.176011}", "{'[3, 5, 6, 0, 3, 0, 0, 1, 28, 22, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.175573}", "{'[3, 5, 6, 0, 3, 0, 0, 1, 28, 22, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.175449}", "{'[3, 5, 6, 0, 3, 0, 0, 1, 28, 22, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.17555}", "{'[3, 5, 6, 0, 3, 0, 0, 1, 28, 22, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.176007}", "{'[3, 5, 6, 0, 3, 0, 0, 1, 28, 22, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.175358}", "{'[3, 5, 6, 0, 3, 0, 0, 1, 28, 22, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.175554}", "{'[3, 5, 6, 0, 3, 0, 0, 1, 28, 22, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.175464}", "{'[3, 5, 6, 0, 3, 0, 0, 1, 28, 22, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.175712}", "{'[3, 5, 6, 0, 3, 0, 0, 1, 28, 22, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.175513}", "{'[3, 5, 6, 0, 3, 0, 0, 1, 28, 22, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.1758}", "{'[3, 5, 6, 0, 3, 0, 0, 1, 28, 22, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.176368}", "{'[3, 5, 6, 0, 3, 0, 0, 1, 28, 22, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.176547}", "{'[3, 5, 6, 0, 3, 0, 0, 1, 28, 22, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.175663}", "{'[3, 5, 6, 0, 3, 0, 0, 1, 28, 22, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.175468}", "{'[3, 5, 6, 0, 3, 0, 0, 1, 28, 22, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.17581}", "{'[3, 5, 6, 0, 3, 0, 0, 1, 28, 22, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.175586}", "{'[3, 5, 6, 0, 3, 0, 0, 1, 28, 22, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.175614}", "{'[3, 5, 6, 0, 3, 0, 0, 1, 28, 22, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.175518}", "{'[3, 5, 6, 0, 3, 0, 0, 1, 28, 22, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.175455}", "{'[3, 5, 6, 0, 3, 0, 0, 1, 28, 22, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.175519}", "{'[3, 5, 6, 0, 3, 0, 0, 1, 28, 22, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.178063}", "{'[3, 5, 6, 0, 3, 0, 0, 1, 28, 22, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.175746}", "{'[3, 5, 6, 0, 3, 0, 0, 1, 28, 22, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.176957}", "{'[3, 5, 6, 0, 3, 0, 0, 1, 28, 22, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.178496}"]
returning from 'run': {'[3, 5, 6, 0, 3, 0, 0, 1, 28, 22, 29, 0, 0, 0, 0, 1, 0, 0]': ([0.175697, 0.178729, 0.175639, 0.175886, 0.175622, 0.176011, 0.175573, 0.175449, 0.17555, 0.176007, 0.175358, 0.175554, 0.175464, 0.175712, 0.175513, 0.1758, 0.176368, 0.176547, 0.175663, 0.175468, 0.17581, 0.175586, 0.175614, 0.175518, 0.175455, 0.175519, 0.178063, 0.175746, 0.176957, 0.178496], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 5, 6, 0, 3, 0, 0, 1, 28, 22, 29, 0, 0, 0, 0, 1, 0, 0]': ([0.175697, 0.178729, 0.175639, 0.175886, 0.175622, 0.176011, 0.175573, 0.175449, 0.17555, 0.176007, 0.175358, 0.175554, 0.175464, 0.175712, 0.175513, 0.1758, 0.176368, 0.176547, 0.175663, 0.175468, 0.17581, 0.175586, 0.175614, 0.175518, 0.175455, 0.175519, 0.178063, 0.175746, 0.176957, 0.178496], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	23
        Max loop nest depth: 	5
        Additions: 		5960
        Multiplications: 	2904
        Divisions: 		0
        Logical: 		0
        Reads: 			11001
        Writes: 		1704
        Comparisons:		23
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest57.exe __orio_perftest57.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest57.exe  
Program Test Output: 
{'[0, 4, 0, 1, 3, 6, 0, 1, 28, 0, 26, 14, 2, 0, 0, 1, 0, 1]' : 0.178093}
{'[0, 4, 0, 1, 3, 6, 0, 1, 28, 0, 26, 14, 2, 0, 0, 1, 0, 1]' : 0.176311}
{'[0, 4, 0, 1, 3, 6, 0, 1, 28, 0, 26, 14, 2, 0, 0, 1, 0, 1]' : 0.174316}
{'[0, 4, 0, 1, 3, 6, 0, 1, 28, 0, 26, 14, 2, 0, 0, 1, 0, 1]' : 0.177968}
{'[0, 4, 0, 1, 3, 6, 0, 1, 28, 0, 26, 14, 2, 0, 0, 1, 0, 1]' : 0.179477}
{'[0, 4, 0, 1, 3, 6, 0, 1, 28, 0, 26, 14, 2, 0, 0, 1, 0, 1]' : 0.178227}
{'[0, 4, 0, 1, 3, 6, 0, 1, 28, 0, 26, 14, 2, 0, 0, 1, 0, 1]' : 0.177124}
{'[0, 4, 0, 1, 3, 6, 0, 1, 28, 0, 26, 14, 2, 0, 0, 1, 0, 1]' : 0.177845}
{'[0, 4, 0, 1, 3, 6, 0, 1, 28, 0, 26, 14, 2, 0, 0, 1, 0, 1]' : 0.178228}
{'[0, 4, 0, 1, 3, 6, 0, 1, 28, 0, 26, 14, 2, 0, 0, 1, 0, 1]' : 0.177218}
{'[0, 4, 0, 1, 3, 6, 0, 1, 28, 0, 26, 14, 2, 0, 0, 1, 0, 1]' : 0.175687}
{'[0, 4, 0, 1, 3, 6, 0, 1, 28, 0, 26, 14, 2, 0, 0, 1, 0, 1]' : 0.176015}
{'[0, 4, 0, 1, 3, 6, 0, 1, 28, 0, 26, 14, 2, 0, 0, 1, 0, 1]' : 0.17402}
{'[0, 4, 0, 1, 3, 6, 0, 1, 28, 0, 26, 14, 2, 0, 0, 1, 0, 1]' : 0.173614}
{'[0, 4, 0, 1, 3, 6, 0, 1, 28, 0, 26, 14, 2, 0, 0, 1, 0, 1]' : 0.178922}
{'[0, 4, 0, 1, 3, 6, 0, 1, 28, 0, 26, 14, 2, 0, 0, 1, 0, 1]' : 0.17619}
{'[0, 4, 0, 1, 3, 6, 0, 1, 28, 0, 26, 14, 2, 0, 0, 1, 0, 1]' : 0.175707}
{'[0, 4, 0, 1, 3, 6, 0, 1, 28, 0, 26, 14, 2, 0, 0, 1, 0, 1]' : 0.176497}
{'[0, 4, 0, 1, 3, 6, 0, 1, 28, 0, 26, 14, 2, 0, 0, 1, 0, 1]' : 0.17013}
{'[0, 4, 0, 1, 3, 6, 0, 1, 28, 0, 26, 14, 2, 0, 0, 1, 0, 1]' : 0.17311}
{'[0, 4, 0, 1, 3, 6, 0, 1, 28, 0, 26, 14, 2, 0, 0, 1, 0, 1]' : 0.177558}
{'[0, 4, 0, 1, 3, 6, 0, 1, 28, 0, 26, 14, 2, 0, 0, 1, 0, 1]' : 0.177961}
{'[0, 4, 0, 1, 3, 6, 0, 1, 28, 0, 26, 14, 2, 0, 0, 1, 0, 1]' : 0.177897}
{'[0, 4, 0, 1, 3, 6, 0, 1, 28, 0, 26, 14, 2, 0, 0, 1, 0, 1]' : 0.175027}
{'[0, 4, 0, 1, 3, 6, 0, 1, 28, 0, 26, 14, 2, 0, 0, 1, 0, 1]' : 0.172532}
{'[0, 4, 0, 1, 3, 6, 0, 1, 28, 0, 26, 14, 2, 0, 0, 1, 0, 1]' : 0.174126}
{'[0, 4, 0, 1, 3, 6, 0, 1, 28, 0, 26, 14, 2, 0, 0, 1, 0, 1]' : 0.178369}
{'[0, 4, 0, 1, 3, 6, 0, 1, 28, 0, 26, 14, 2, 0, 0, 1, 0, 1]' : 0.178672}
{'[0, 4, 0, 1, 3, 6, 0, 1, 28, 0, 26, 14, 2, 0, 0, 1, 0, 1]' : 0.177322}
{'[0, 4, 0, 1, 3, 6, 0, 1, 28, 0, 26, 14, 2, 0, 0, 1, 0, 1]' : 0.177268}

out:
 ["{'[0, 4, 0, 1, 3, 6, 0, 1, 28, 0, 26, 14, 2, 0, 0, 1, 0, 1]' : 0.178093}", "{'[0, 4, 0, 1, 3, 6, 0, 1, 28, 0, 26, 14, 2, 0, 0, 1, 0, 1]' : 0.176311}", "{'[0, 4, 0, 1, 3, 6, 0, 1, 28, 0, 26, 14, 2, 0, 0, 1, 0, 1]' : 0.174316}", "{'[0, 4, 0, 1, 3, 6, 0, 1, 28, 0, 26, 14, 2, 0, 0, 1, 0, 1]' : 0.177968}", "{'[0, 4, 0, 1, 3, 6, 0, 1, 28, 0, 26, 14, 2, 0, 0, 1, 0, 1]' : 0.179477}", "{'[0, 4, 0, 1, 3, 6, 0, 1, 28, 0, 26, 14, 2, 0, 0, 1, 0, 1]' : 0.178227}", "{'[0, 4, 0, 1, 3, 6, 0, 1, 28, 0, 26, 14, 2, 0, 0, 1, 0, 1]' : 0.177124}", "{'[0, 4, 0, 1, 3, 6, 0, 1, 28, 0, 26, 14, 2, 0, 0, 1, 0, 1]' : 0.177845}", "{'[0, 4, 0, 1, 3, 6, 0, 1, 28, 0, 26, 14, 2, 0, 0, 1, 0, 1]' : 0.178228}", "{'[0, 4, 0, 1, 3, 6, 0, 1, 28, 0, 26, 14, 2, 0, 0, 1, 0, 1]' : 0.177218}", "{'[0, 4, 0, 1, 3, 6, 0, 1, 28, 0, 26, 14, 2, 0, 0, 1, 0, 1]' : 0.175687}", "{'[0, 4, 0, 1, 3, 6, 0, 1, 28, 0, 26, 14, 2, 0, 0, 1, 0, 1]' : 0.176015}", "{'[0, 4, 0, 1, 3, 6, 0, 1, 28, 0, 26, 14, 2, 0, 0, 1, 0, 1]' : 0.17402}", "{'[0, 4, 0, 1, 3, 6, 0, 1, 28, 0, 26, 14, 2, 0, 0, 1, 0, 1]' : 0.173614}", "{'[0, 4, 0, 1, 3, 6, 0, 1, 28, 0, 26, 14, 2, 0, 0, 1, 0, 1]' : 0.178922}", "{'[0, 4, 0, 1, 3, 6, 0, 1, 28, 0, 26, 14, 2, 0, 0, 1, 0, 1]' : 0.17619}", "{'[0, 4, 0, 1, 3, 6, 0, 1, 28, 0, 26, 14, 2, 0, 0, 1, 0, 1]' : 0.175707}", "{'[0, 4, 0, 1, 3, 6, 0, 1, 28, 0, 26, 14, 2, 0, 0, 1, 0, 1]' : 0.176497}", "{'[0, 4, 0, 1, 3, 6, 0, 1, 28, 0, 26, 14, 2, 0, 0, 1, 0, 1]' : 0.17013}", "{'[0, 4, 0, 1, 3, 6, 0, 1, 28, 0, 26, 14, 2, 0, 0, 1, 0, 1]' : 0.17311}", "{'[0, 4, 0, 1, 3, 6, 0, 1, 28, 0, 26, 14, 2, 0, 0, 1, 0, 1]' : 0.177558}", "{'[0, 4, 0, 1, 3, 6, 0, 1, 28, 0, 26, 14, 2, 0, 0, 1, 0, 1]' : 0.177961}", "{'[0, 4, 0, 1, 3, 6, 0, 1, 28, 0, 26, 14, 2, 0, 0, 1, 0, 1]' : 0.177897}", "{'[0, 4, 0, 1, 3, 6, 0, 1, 28, 0, 26, 14, 2, 0, 0, 1, 0, 1]' : 0.175027}", "{'[0, 4, 0, 1, 3, 6, 0, 1, 28, 0, 26, 14, 2, 0, 0, 1, 0, 1]' : 0.172532}", "{'[0, 4, 0, 1, 3, 6, 0, 1, 28, 0, 26, 14, 2, 0, 0, 1, 0, 1]' : 0.174126}", "{'[0, 4, 0, 1, 3, 6, 0, 1, 28, 0, 26, 14, 2, 0, 0, 1, 0, 1]' : 0.178369}", "{'[0, 4, 0, 1, 3, 6, 0, 1, 28, 0, 26, 14, 2, 0, 0, 1, 0, 1]' : 0.178672}", "{'[0, 4, 0, 1, 3, 6, 0, 1, 28, 0, 26, 14, 2, 0, 0, 1, 0, 1]' : 0.177322}", "{'[0, 4, 0, 1, 3, 6, 0, 1, 28, 0, 26, 14, 2, 0, 0, 1, 0, 1]' : 0.177268}"]
returning from 'run': {'[0, 4, 0, 1, 3, 6, 0, 1, 28, 0, 26, 14, 2, 0, 0, 1, 0, 1]': ([0.178093, 0.176311, 0.174316, 0.177968, 0.179477, 0.178227, 0.177124, 0.177845, 0.178228, 0.177218, 0.175687, 0.176015, 0.17402, 0.173614, 0.178922, 0.17619, 0.175707, 0.176497, 0.17013, 0.17311, 0.177558, 0.177961, 0.177897, 0.175027, 0.172532, 0.174126, 0.178369, 0.178672, 0.177322, 0.177268], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 4, 0, 1, 3, 6, 0, 1, 28, 0, 26, 14, 2, 0, 0, 1, 0, 1]': ([0.178093, 0.176311, 0.174316, 0.177968, 0.179477, 0.178227, 0.177124, 0.177845, 0.178228, 0.177218, 0.175687, 0.176015, 0.17402, 0.173614, 0.178922, 0.17619, 0.175707, 0.176497, 0.17013, 0.17311, 0.177558, 0.177961, 0.177897, 0.175027, 0.172532, 0.174126, 0.178369, 0.178672, 0.177322, 0.177268], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	123
        Max loop nest depth: 	5
        Additions: 		5712
        Multiplications: 	2160
        Divisions: 		0
        Logical: 		0
        Reads: 			9925
        Writes: 		1503
        Comparisons:		123
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest58.exe __orio_perftest58.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest58.exe  
Program Test Output: 
{'[1, 0, 6, 0, 3, 6, 0, 1, 28, 25, 29, 0, 0, 1, 0, 1, 0, 0]' : 0.265696}
{'[1, 0, 6, 0, 3, 6, 0, 1, 28, 25, 29, 0, 0, 1, 0, 1, 0, 0]' : 0.246235}
{'[1, 0, 6, 0, 3, 6, 0, 1, 28, 25, 29, 0, 0, 1, 0, 1, 0, 0]' : 0.231047}
{'[1, 0, 6, 0, 3, 6, 0, 1, 28, 25, 29, 0, 0, 1, 0, 1, 0, 0]' : 0.23528}
{'[1, 0, 6, 0, 3, 6, 0, 1, 28, 25, 29, 0, 0, 1, 0, 1, 0, 0]' : 0.231111}
{'[1, 0, 6, 0, 3, 6, 0, 1, 28, 25, 29, 0, 0, 1, 0, 1, 0, 0]' : 0.228435}
{'[1, 0, 6, 0, 3, 6, 0, 1, 28, 25, 29, 0, 0, 1, 0, 1, 0, 0]' : 0.22849}
{'[1, 0, 6, 0, 3, 6, 0, 1, 28, 25, 29, 0, 0, 1, 0, 1, 0, 0]' : 0.228207}
{'[1, 0, 6, 0, 3, 6, 0, 1, 28, 25, 29, 0, 0, 1, 0, 1, 0, 0]' : 0.228252}
{'[1, 0, 6, 0, 3, 6, 0, 1, 28, 25, 29, 0, 0, 1, 0, 1, 0, 0]' : 0.228523}
{'[1, 0, 6, 0, 3, 6, 0, 1, 28, 25, 29, 0, 0, 1, 0, 1, 0, 0]' : 0.228184}
{'[1, 0, 6, 0, 3, 6, 0, 1, 28, 25, 29, 0, 0, 1, 0, 1, 0, 0]' : 0.22815}
{'[1, 0, 6, 0, 3, 6, 0, 1, 28, 25, 29, 0, 0, 1, 0, 1, 0, 0]' : 0.228129}
{'[1, 0, 6, 0, 3, 6, 0, 1, 28, 25, 29, 0, 0, 1, 0, 1, 0, 0]' : 0.228233}
{'[1, 0, 6, 0, 3, 6, 0, 1, 28, 25, 29, 0, 0, 1, 0, 1, 0, 0]' : 0.228435}
{'[1, 0, 6, 0, 3, 6, 0, 1, 28, 25, 29, 0, 0, 1, 0, 1, 0, 0]' : 0.228591}
{'[1, 0, 6, 0, 3, 6, 0, 1, 28, 25, 29, 0, 0, 1, 0, 1, 0, 0]' : 0.228842}
{'[1, 0, 6, 0, 3, 6, 0, 1, 28, 25, 29, 0, 0, 1, 0, 1, 0, 0]' : 0.228689}
{'[1, 0, 6, 0, 3, 6, 0, 1, 28, 25, 29, 0, 0, 1, 0, 1, 0, 0]' : 0.226075}
{'[1, 0, 6, 0, 3, 6, 0, 1, 28, 25, 29, 0, 0, 1, 0, 1, 0, 0]' : 0.221909}
{'[1, 0, 6, 0, 3, 6, 0, 1, 28, 25, 29, 0, 0, 1, 0, 1, 0, 0]' : 0.227272}
{'[1, 0, 6, 0, 3, 6, 0, 1, 28, 25, 29, 0, 0, 1, 0, 1, 0, 0]' : 0.225756}
{'[1, 0, 6, 0, 3, 6, 0, 1, 28, 25, 29, 0, 0, 1, 0, 1, 0, 0]' : 0.225874}
{'[1, 0, 6, 0, 3, 6, 0, 1, 28, 25, 29, 0, 0, 1, 0, 1, 0, 0]' : 0.227792}
{'[1, 0, 6, 0, 3, 6, 0, 1, 28, 25, 29, 0, 0, 1, 0, 1, 0, 0]' : 0.228242}
{'[1, 0, 6, 0, 3, 6, 0, 1, 28, 25, 29, 0, 0, 1, 0, 1, 0, 0]' : 0.22789}
{'[1, 0, 6, 0, 3, 6, 0, 1, 28, 25, 29, 0, 0, 1, 0, 1, 0, 0]' : 0.228022}
{'[1, 0, 6, 0, 3, 6, 0, 1, 28, 25, 29, 0, 0, 1, 0, 1, 0, 0]' : 0.227817}
{'[1, 0, 6, 0, 3, 6, 0, 1, 28, 25, 29, 0, 0, 1, 0, 1, 0, 0]' : 0.222193}
{'[1, 0, 6, 0, 3, 6, 0, 1, 28, 25, 29, 0, 0, 1, 0, 1, 0, 0]' : 0.227385}

out:
 ["{'[1, 0, 6, 0, 3, 6, 0, 1, 28, 25, 29, 0, 0, 1, 0, 1, 0, 0]' : 0.265696}", "{'[1, 0, 6, 0, 3, 6, 0, 1, 28, 25, 29, 0, 0, 1, 0, 1, 0, 0]' : 0.246235}", "{'[1, 0, 6, 0, 3, 6, 0, 1, 28, 25, 29, 0, 0, 1, 0, 1, 0, 0]' : 0.231047}", "{'[1, 0, 6, 0, 3, 6, 0, 1, 28, 25, 29, 0, 0, 1, 0, 1, 0, 0]' : 0.23528}", "{'[1, 0, 6, 0, 3, 6, 0, 1, 28, 25, 29, 0, 0, 1, 0, 1, 0, 0]' : 0.231111}", "{'[1, 0, 6, 0, 3, 6, 0, 1, 28, 25, 29, 0, 0, 1, 0, 1, 0, 0]' : 0.228435}", "{'[1, 0, 6, 0, 3, 6, 0, 1, 28, 25, 29, 0, 0, 1, 0, 1, 0, 0]' : 0.22849}", "{'[1, 0, 6, 0, 3, 6, 0, 1, 28, 25, 29, 0, 0, 1, 0, 1, 0, 0]' : 0.228207}", "{'[1, 0, 6, 0, 3, 6, 0, 1, 28, 25, 29, 0, 0, 1, 0, 1, 0, 0]' : 0.228252}", "{'[1, 0, 6, 0, 3, 6, 0, 1, 28, 25, 29, 0, 0, 1, 0, 1, 0, 0]' : 0.228523}", "{'[1, 0, 6, 0, 3, 6, 0, 1, 28, 25, 29, 0, 0, 1, 0, 1, 0, 0]' : 0.228184}", "{'[1, 0, 6, 0, 3, 6, 0, 1, 28, 25, 29, 0, 0, 1, 0, 1, 0, 0]' : 0.22815}", "{'[1, 0, 6, 0, 3, 6, 0, 1, 28, 25, 29, 0, 0, 1, 0, 1, 0, 0]' : 0.228129}", "{'[1, 0, 6, 0, 3, 6, 0, 1, 28, 25, 29, 0, 0, 1, 0, 1, 0, 0]' : 0.228233}", "{'[1, 0, 6, 0, 3, 6, 0, 1, 28, 25, 29, 0, 0, 1, 0, 1, 0, 0]' : 0.228435}", "{'[1, 0, 6, 0, 3, 6, 0, 1, 28, 25, 29, 0, 0, 1, 0, 1, 0, 0]' : 0.228591}", "{'[1, 0, 6, 0, 3, 6, 0, 1, 28, 25, 29, 0, 0, 1, 0, 1, 0, 0]' : 0.228842}", "{'[1, 0, 6, 0, 3, 6, 0, 1, 28, 25, 29, 0, 0, 1, 0, 1, 0, 0]' : 0.228689}", "{'[1, 0, 6, 0, 3, 6, 0, 1, 28, 25, 29, 0, 0, 1, 0, 1, 0, 0]' : 0.226075}", "{'[1, 0, 6, 0, 3, 6, 0, 1, 28, 25, 29, 0, 0, 1, 0, 1, 0, 0]' : 0.221909}", "{'[1, 0, 6, 0, 3, 6, 0, 1, 28, 25, 29, 0, 0, 1, 0, 1, 0, 0]' : 0.227272}", "{'[1, 0, 6, 0, 3, 6, 0, 1, 28, 25, 29, 0, 0, 1, 0, 1, 0, 0]' : 0.225756}", "{'[1, 0, 6, 0, 3, 6, 0, 1, 28, 25, 29, 0, 0, 1, 0, 1, 0, 0]' : 0.225874}", "{'[1, 0, 6, 0, 3, 6, 0, 1, 28, 25, 29, 0, 0, 1, 0, 1, 0, 0]' : 0.227792}", "{'[1, 0, 6, 0, 3, 6, 0, 1, 28, 25, 29, 0, 0, 1, 0, 1, 0, 0]' : 0.228242}", "{'[1, 0, 6, 0, 3, 6, 0, 1, 28, 25, 29, 0, 0, 1, 0, 1, 0, 0]' : 0.22789}", "{'[1, 0, 6, 0, 3, 6, 0, 1, 28, 25, 29, 0, 0, 1, 0, 1, 0, 0]' : 0.228022}", "{'[1, 0, 6, 0, 3, 6, 0, 1, 28, 25, 29, 0, 0, 1, 0, 1, 0, 0]' : 0.227817}", "{'[1, 0, 6, 0, 3, 6, 0, 1, 28, 25, 29, 0, 0, 1, 0, 1, 0, 0]' : 0.222193}", "{'[1, 0, 6, 0, 3, 6, 0, 1, 28, 25, 29, 0, 0, 1, 0, 1, 0, 0]' : 0.227385}"]
returning from 'run': {'[1, 0, 6, 0, 3, 6, 0, 1, 28, 25, 29, 0, 0, 1, 0, 1, 0, 0]': ([0.265696, 0.246235, 0.231047, 0.23528, 0.231111, 0.228435, 0.22849, 0.228207, 0.228252, 0.228523, 0.228184, 0.22815, 0.228129, 0.228233, 0.228435, 0.228591, 0.228842, 0.228689, 0.226075, 0.221909, 0.227272, 0.225756, 0.225874, 0.227792, 0.228242, 0.22789, 0.228022, 0.227817, 0.222193, 0.227385], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 6, 0, 3, 6, 0, 1, 28, 25, 29, 0, 0, 1, 0, 1, 0, 0]': ([0.265696, 0.246235, 0.231047, 0.23528, 0.231111, 0.228435, 0.22849, 0.228207, 0.228252, 0.228523, 0.228184, 0.22815, 0.228129, 0.228233, 0.228435, 0.228591, 0.228842, 0.228689, 0.226075, 0.221909, 0.227272, 0.225756, 0.225874, 0.227792, 0.228242, 0.22789, 0.228022, 0.227817, 0.222193, 0.227385], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	62
        Max loop nest depth: 	4
        Additions: 		2256
        Multiplications: 	800
        Divisions: 		0
        Logical: 		0
        Reads: 			4444
        Writes: 		841
        Comparisons:		62
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest59.exe __orio_perftest59.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest59.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest59.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest59.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest59.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	5
        Additions: 		1766
        Multiplications: 	738
        Divisions: 		0
        Logical: 		0
        Reads: 			3400
        Writes: 		591
        Comparisons:		25
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest60.exe __orio_perftest60.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest60.exe  
Program Test Output: 
{'[1, 2, 0, 0, 3, 6, 1, 1, 28, 0, 15, 22, 1, 0, 0, 1, 1, 0]' : 0.127298}
{'[1, 2, 0, 0, 3, 6, 1, 1, 28, 0, 15, 22, 1, 0, 0, 1, 1, 0]' : 0.127347}
{'[1, 2, 0, 0, 3, 6, 1, 1, 28, 0, 15, 22, 1, 0, 0, 1, 1, 0]' : 0.127149}
{'[1, 2, 0, 0, 3, 6, 1, 1, 28, 0, 15, 22, 1, 0, 0, 1, 1, 0]' : 0.119937}
{'[1, 2, 0, 0, 3, 6, 1, 1, 28, 0, 15, 22, 1, 0, 0, 1, 1, 0]' : 0.111929}
{'[1, 2, 0, 0, 3, 6, 1, 1, 28, 0, 15, 22, 1, 0, 0, 1, 1, 0]' : 0.113097}
{'[1, 2, 0, 0, 3, 6, 1, 1, 28, 0, 15, 22, 1, 0, 0, 1, 1, 0]' : 0.115083}
{'[1, 2, 0, 0, 3, 6, 1, 1, 28, 0, 15, 22, 1, 0, 0, 1, 1, 0]' : 0.11485}
{'[1, 2, 0, 0, 3, 6, 1, 1, 28, 0, 15, 22, 1, 0, 0, 1, 1, 0]' : 0.11234}
{'[1, 2, 0, 0, 3, 6, 1, 1, 28, 0, 15, 22, 1, 0, 0, 1, 1, 0]' : 0.112322}
{'[1, 2, 0, 0, 3, 6, 1, 1, 28, 0, 15, 22, 1, 0, 0, 1, 1, 0]' : 0.114926}
{'[1, 2, 0, 0, 3, 6, 1, 1, 28, 0, 15, 22, 1, 0, 0, 1, 1, 0]' : 0.115023}
{'[1, 2, 0, 0, 3, 6, 1, 1, 28, 0, 15, 22, 1, 0, 0, 1, 1, 0]' : 0.115083}
{'[1, 2, 0, 0, 3, 6, 1, 1, 28, 0, 15, 22, 1, 0, 0, 1, 1, 0]' : 0.115062}
{'[1, 2, 0, 0, 3, 6, 1, 1, 28, 0, 15, 22, 1, 0, 0, 1, 1, 0]' : 0.115101}
{'[1, 2, 0, 0, 3, 6, 1, 1, 28, 0, 15, 22, 1, 0, 0, 1, 1, 0]' : 0.11471}
{'[1, 2, 0, 0, 3, 6, 1, 1, 28, 0, 15, 22, 1, 0, 0, 1, 1, 0]' : 0.114629}
{'[1, 2, 0, 0, 3, 6, 1, 1, 28, 0, 15, 22, 1, 0, 0, 1, 1, 0]' : 0.113549}
{'[1, 2, 0, 0, 3, 6, 1, 1, 28, 0, 15, 22, 1, 0, 0, 1, 1, 0]' : 0.112211}
{'[1, 2, 0, 0, 3, 6, 1, 1, 28, 0, 15, 22, 1, 0, 0, 1, 1, 0]' : 0.112302}
{'[1, 2, 0, 0, 3, 6, 1, 1, 28, 0, 15, 22, 1, 0, 0, 1, 1, 0]' : 0.112373}
{'[1, 2, 0, 0, 3, 6, 1, 1, 28, 0, 15, 22, 1, 0, 0, 1, 1, 0]' : 0.112376}
{'[1, 2, 0, 0, 3, 6, 1, 1, 28, 0, 15, 22, 1, 0, 0, 1, 1, 0]' : 0.112389}
{'[1, 2, 0, 0, 3, 6, 1, 1, 28, 0, 15, 22, 1, 0, 0, 1, 1, 0]' : 0.11449}
{'[1, 2, 0, 0, 3, 6, 1, 1, 28, 0, 15, 22, 1, 0, 0, 1, 1, 0]' : 0.115013}
{'[1, 2, 0, 0, 3, 6, 1, 1, 28, 0, 15, 22, 1, 0, 0, 1, 1, 0]' : 0.11136}
{'[1, 2, 0, 0, 3, 6, 1, 1, 28, 0, 15, 22, 1, 0, 0, 1, 1, 0]' : 0.109587}
{'[1, 2, 0, 0, 3, 6, 1, 1, 28, 0, 15, 22, 1, 0, 0, 1, 1, 0]' : 0.111039}
{'[1, 2, 0, 0, 3, 6, 1, 1, 28, 0, 15, 22, 1, 0, 0, 1, 1, 0]' : 0.115044}
{'[1, 2, 0, 0, 3, 6, 1, 1, 28, 0, 15, 22, 1, 0, 0, 1, 1, 0]' : 0.115005}

out:
 ["{'[1, 2, 0, 0, 3, 6, 1, 1, 28, 0, 15, 22, 1, 0, 0, 1, 1, 0]' : 0.127298}", "{'[1, 2, 0, 0, 3, 6, 1, 1, 28, 0, 15, 22, 1, 0, 0, 1, 1, 0]' : 0.127347}", "{'[1, 2, 0, 0, 3, 6, 1, 1, 28, 0, 15, 22, 1, 0, 0, 1, 1, 0]' : 0.127149}", "{'[1, 2, 0, 0, 3, 6, 1, 1, 28, 0, 15, 22, 1, 0, 0, 1, 1, 0]' : 0.119937}", "{'[1, 2, 0, 0, 3, 6, 1, 1, 28, 0, 15, 22, 1, 0, 0, 1, 1, 0]' : 0.111929}", "{'[1, 2, 0, 0, 3, 6, 1, 1, 28, 0, 15, 22, 1, 0, 0, 1, 1, 0]' : 0.113097}", "{'[1, 2, 0, 0, 3, 6, 1, 1, 28, 0, 15, 22, 1, 0, 0, 1, 1, 0]' : 0.115083}", "{'[1, 2, 0, 0, 3, 6, 1, 1, 28, 0, 15, 22, 1, 0, 0, 1, 1, 0]' : 0.11485}", "{'[1, 2, 0, 0, 3, 6, 1, 1, 28, 0, 15, 22, 1, 0, 0, 1, 1, 0]' : 0.11234}", "{'[1, 2, 0, 0, 3, 6, 1, 1, 28, 0, 15, 22, 1, 0, 0, 1, 1, 0]' : 0.112322}", "{'[1, 2, 0, 0, 3, 6, 1, 1, 28, 0, 15, 22, 1, 0, 0, 1, 1, 0]' : 0.114926}", "{'[1, 2, 0, 0, 3, 6, 1, 1, 28, 0, 15, 22, 1, 0, 0, 1, 1, 0]' : 0.115023}", "{'[1, 2, 0, 0, 3, 6, 1, 1, 28, 0, 15, 22, 1, 0, 0, 1, 1, 0]' : 0.115083}", "{'[1, 2, 0, 0, 3, 6, 1, 1, 28, 0, 15, 22, 1, 0, 0, 1, 1, 0]' : 0.115062}", "{'[1, 2, 0, 0, 3, 6, 1, 1, 28, 0, 15, 22, 1, 0, 0, 1, 1, 0]' : 0.115101}", "{'[1, 2, 0, 0, 3, 6, 1, 1, 28, 0, 15, 22, 1, 0, 0, 1, 1, 0]' : 0.11471}", "{'[1, 2, 0, 0, 3, 6, 1, 1, 28, 0, 15, 22, 1, 0, 0, 1, 1, 0]' : 0.114629}", "{'[1, 2, 0, 0, 3, 6, 1, 1, 28, 0, 15, 22, 1, 0, 0, 1, 1, 0]' : 0.113549}", "{'[1, 2, 0, 0, 3, 6, 1, 1, 28, 0, 15, 22, 1, 0, 0, 1, 1, 0]' : 0.112211}", "{'[1, 2, 0, 0, 3, 6, 1, 1, 28, 0, 15, 22, 1, 0, 0, 1, 1, 0]' : 0.112302}", "{'[1, 2, 0, 0, 3, 6, 1, 1, 28, 0, 15, 22, 1, 0, 0, 1, 1, 0]' : 0.112373}", "{'[1, 2, 0, 0, 3, 6, 1, 1, 28, 0, 15, 22, 1, 0, 0, 1, 1, 0]' : 0.112376}", "{'[1, 2, 0, 0, 3, 6, 1, 1, 28, 0, 15, 22, 1, 0, 0, 1, 1, 0]' : 0.112389}", "{'[1, 2, 0, 0, 3, 6, 1, 1, 28, 0, 15, 22, 1, 0, 0, 1, 1, 0]' : 0.11449}", "{'[1, 2, 0, 0, 3, 6, 1, 1, 28, 0, 15, 22, 1, 0, 0, 1, 1, 0]' : 0.115013}", "{'[1, 2, 0, 0, 3, 6, 1, 1, 28, 0, 15, 22, 1, 0, 0, 1, 1, 0]' : 0.11136}", "{'[1, 2, 0, 0, 3, 6, 1, 1, 28, 0, 15, 22, 1, 0, 0, 1, 1, 0]' : 0.109587}", "{'[1, 2, 0, 0, 3, 6, 1, 1, 28, 0, 15, 22, 1, 0, 0, 1, 1, 0]' : 0.111039}", "{'[1, 2, 0, 0, 3, 6, 1, 1, 28, 0, 15, 22, 1, 0, 0, 1, 1, 0]' : 0.115044}", "{'[1, 2, 0, 0, 3, 6, 1, 1, 28, 0, 15, 22, 1, 0, 0, 1, 1, 0]' : 0.115005}"]
returning from 'run': {'[1, 2, 0, 0, 3, 6, 1, 1, 28, 0, 15, 22, 1, 0, 0, 1, 1, 0]': ([0.127298, 0.127347, 0.127149, 0.119937, 0.111929, 0.113097, 0.115083, 0.11485, 0.11234, 0.112322, 0.114926, 0.115023, 0.115083, 0.115062, 0.115101, 0.11471, 0.114629, 0.113549, 0.112211, 0.112302, 0.112373, 0.112376, 0.112389, 0.11449, 0.115013, 0.11136, 0.109587, 0.111039, 0.115044, 0.115005], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 2, 0, 0, 3, 6, 1, 1, 28, 0, 15, 22, 1, 0, 0, 1, 1, 0]': ([0.127298, 0.127347, 0.127149, 0.119937, 0.111929, 0.113097, 0.115083, 0.11485, 0.11234, 0.112322, 0.114926, 0.115023, 0.115083, 0.115062, 0.115101, 0.11471, 0.114629, 0.113549, 0.112211, 0.112302, 0.112373, 0.112376, 0.112389, 0.11449, 0.115013, 0.11136, 0.109587, 0.111039, 0.115044, 0.115005], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		158
        Multiplications: 	32
        Divisions: 		0
        Logical: 		0
        Reads: 			356
        Writes: 		95
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest61.exe __orio_perftest61.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest61.exe  
Program Test Output: 
{'[0, 2, 6, 1, 3, 0, 1, 1, 28, 0, 7, 3, 0, 1, 1, 1, 1, 0]' : 0.23594}
{'[0, 2, 6, 1, 3, 0, 1, 1, 28, 0, 7, 3, 0, 1, 1, 1, 1, 0]' : 0.228411}
{'[0, 2, 6, 1, 3, 0, 1, 1, 28, 0, 7, 3, 0, 1, 1, 1, 1, 0]' : 0.209215}
{'[0, 2, 6, 1, 3, 0, 1, 1, 28, 0, 7, 3, 0, 1, 1, 1, 1, 0]' : 0.209175}
{'[0, 2, 6, 1, 3, 0, 1, 1, 28, 0, 7, 3, 0, 1, 1, 1, 1, 0]' : 0.203446}
{'[0, 2, 6, 1, 3, 0, 1, 1, 28, 0, 7, 3, 0, 1, 1, 1, 1, 0]' : 0.202192}
{'[0, 2, 6, 1, 3, 0, 1, 1, 28, 0, 7, 3, 0, 1, 1, 1, 1, 0]' : 0.202853}
{'[0, 2, 6, 1, 3, 0, 1, 1, 28, 0, 7, 3, 0, 1, 1, 1, 1, 0]' : 0.209284}
{'[0, 2, 6, 1, 3, 0, 1, 1, 28, 0, 7, 3, 0, 1, 1, 1, 1, 0]' : 0.209552}
{'[0, 2, 6, 1, 3, 0, 1, 1, 28, 0, 7, 3, 0, 1, 1, 1, 1, 0]' : 0.209235}
{'[0, 2, 6, 1, 3, 0, 1, 1, 28, 0, 7, 3, 0, 1, 1, 1, 1, 0]' : 0.209254}
{'[0, 2, 6, 1, 3, 0, 1, 1, 28, 0, 7, 3, 0, 1, 1, 1, 1, 0]' : 0.209304}
{'[0, 2, 6, 1, 3, 0, 1, 1, 28, 0, 7, 3, 0, 1, 1, 1, 1, 0]' : 0.20929}
{'[0, 2, 6, 1, 3, 0, 1, 1, 28, 0, 7, 3, 0, 1, 1, 1, 1, 0]' : 0.209298}
{'[0, 2, 6, 1, 3, 0, 1, 1, 28, 0, 7, 3, 0, 1, 1, 1, 1, 0]' : 0.209197}
{'[0, 2, 6, 1, 3, 0, 1, 1, 28, 0, 7, 3, 0, 1, 1, 1, 1, 0]' : 0.209188}
{'[0, 2, 6, 1, 3, 0, 1, 1, 28, 0, 7, 3, 0, 1, 1, 1, 1, 0]' : 0.209274}
{'[0, 2, 6, 1, 3, 0, 1, 1, 28, 0, 7, 3, 0, 1, 1, 1, 1, 0]' : 0.209194}
{'[0, 2, 6, 1, 3, 0, 1, 1, 28, 0, 7, 3, 0, 1, 1, 1, 1, 0]' : 0.208088}
{'[0, 2, 6, 1, 3, 0, 1, 1, 28, 0, 7, 3, 0, 1, 1, 1, 1, 0]' : 0.203938}
{'[0, 2, 6, 1, 3, 0, 1, 1, 28, 0, 7, 3, 0, 1, 1, 1, 1, 0]' : 0.204443}
{'[0, 2, 6, 1, 3, 0, 1, 1, 28, 0, 7, 3, 0, 1, 1, 1, 1, 0]' : 0.209196}
{'[0, 2, 6, 1, 3, 0, 1, 1, 28, 0, 7, 3, 0, 1, 1, 1, 1, 0]' : 0.209199}
{'[0, 2, 6, 1, 3, 0, 1, 1, 28, 0, 7, 3, 0, 1, 1, 1, 1, 0]' : 0.207976}
{'[0, 2, 6, 1, 3, 0, 1, 1, 28, 0, 7, 3, 0, 1, 1, 1, 1, 0]' : 0.202954}
{'[0, 2, 6, 1, 3, 0, 1, 1, 28, 0, 7, 3, 0, 1, 1, 1, 1, 0]' : 0.199564}
{'[0, 2, 6, 1, 3, 0, 1, 1, 28, 0, 7, 3, 0, 1, 1, 1, 1, 0]' : 0.203414}
{'[0, 2, 6, 1, 3, 0, 1, 1, 28, 0, 7, 3, 0, 1, 1, 1, 1, 0]' : 0.209215}
{'[0, 2, 6, 1, 3, 0, 1, 1, 28, 0, 7, 3, 0, 1, 1, 1, 1, 0]' : 0.209397}
{'[0, 2, 6, 1, 3, 0, 1, 1, 28, 0, 7, 3, 0, 1, 1, 1, 1, 0]' : 0.209287}

out:
 ["{'[0, 2, 6, 1, 3, 0, 1, 1, 28, 0, 7, 3, 0, 1, 1, 1, 1, 0]' : 0.23594}", "{'[0, 2, 6, 1, 3, 0, 1, 1, 28, 0, 7, 3, 0, 1, 1, 1, 1, 0]' : 0.228411}", "{'[0, 2, 6, 1, 3, 0, 1, 1, 28, 0, 7, 3, 0, 1, 1, 1, 1, 0]' : 0.209215}", "{'[0, 2, 6, 1, 3, 0, 1, 1, 28, 0, 7, 3, 0, 1, 1, 1, 1, 0]' : 0.209175}", "{'[0, 2, 6, 1, 3, 0, 1, 1, 28, 0, 7, 3, 0, 1, 1, 1, 1, 0]' : 0.203446}", "{'[0, 2, 6, 1, 3, 0, 1, 1, 28, 0, 7, 3, 0, 1, 1, 1, 1, 0]' : 0.202192}", "{'[0, 2, 6, 1, 3, 0, 1, 1, 28, 0, 7, 3, 0, 1, 1, 1, 1, 0]' : 0.202853}", "{'[0, 2, 6, 1, 3, 0, 1, 1, 28, 0, 7, 3, 0, 1, 1, 1, 1, 0]' : 0.209284}", "{'[0, 2, 6, 1, 3, 0, 1, 1, 28, 0, 7, 3, 0, 1, 1, 1, 1, 0]' : 0.209552}", "{'[0, 2, 6, 1, 3, 0, 1, 1, 28, 0, 7, 3, 0, 1, 1, 1, 1, 0]' : 0.209235}", "{'[0, 2, 6, 1, 3, 0, 1, 1, 28, 0, 7, 3, 0, 1, 1, 1, 1, 0]' : 0.209254}", "{'[0, 2, 6, 1, 3, 0, 1, 1, 28, 0, 7, 3, 0, 1, 1, 1, 1, 0]' : 0.209304}", "{'[0, 2, 6, 1, 3, 0, 1, 1, 28, 0, 7, 3, 0, 1, 1, 1, 1, 0]' : 0.20929}", "{'[0, 2, 6, 1, 3, 0, 1, 1, 28, 0, 7, 3, 0, 1, 1, 1, 1, 0]' : 0.209298}", "{'[0, 2, 6, 1, 3, 0, 1, 1, 28, 0, 7, 3, 0, 1, 1, 1, 1, 0]' : 0.209197}", "{'[0, 2, 6, 1, 3, 0, 1, 1, 28, 0, 7, 3, 0, 1, 1, 1, 1, 0]' : 0.209188}", "{'[0, 2, 6, 1, 3, 0, 1, 1, 28, 0, 7, 3, 0, 1, 1, 1, 1, 0]' : 0.209274}", "{'[0, 2, 6, 1, 3, 0, 1, 1, 28, 0, 7, 3, 0, 1, 1, 1, 1, 0]' : 0.209194}", "{'[0, 2, 6, 1, 3, 0, 1, 1, 28, 0, 7, 3, 0, 1, 1, 1, 1, 0]' : 0.208088}", "{'[0, 2, 6, 1, 3, 0, 1, 1, 28, 0, 7, 3, 0, 1, 1, 1, 1, 0]' : 0.203938}", "{'[0, 2, 6, 1, 3, 0, 1, 1, 28, 0, 7, 3, 0, 1, 1, 1, 1, 0]' : 0.204443}", "{'[0, 2, 6, 1, 3, 0, 1, 1, 28, 0, 7, 3, 0, 1, 1, 1, 1, 0]' : 0.209196}", "{'[0, 2, 6, 1, 3, 0, 1, 1, 28, 0, 7, 3, 0, 1, 1, 1, 1, 0]' : 0.209199}", "{'[0, 2, 6, 1, 3, 0, 1, 1, 28, 0, 7, 3, 0, 1, 1, 1, 1, 0]' : 0.207976}", "{'[0, 2, 6, 1, 3, 0, 1, 1, 28, 0, 7, 3, 0, 1, 1, 1, 1, 0]' : 0.202954}", "{'[0, 2, 6, 1, 3, 0, 1, 1, 28, 0, 7, 3, 0, 1, 1, 1, 1, 0]' : 0.199564}", "{'[0, 2, 6, 1, 3, 0, 1, 1, 28, 0, 7, 3, 0, 1, 1, 1, 1, 0]' : 0.203414}", "{'[0, 2, 6, 1, 3, 0, 1, 1, 28, 0, 7, 3, 0, 1, 1, 1, 1, 0]' : 0.209215}", "{'[0, 2, 6, 1, 3, 0, 1, 1, 28, 0, 7, 3, 0, 1, 1, 1, 1, 0]' : 0.209397}", "{'[0, 2, 6, 1, 3, 0, 1, 1, 28, 0, 7, 3, 0, 1, 1, 1, 1, 0]' : 0.209287}"]
returning from 'run': {'[0, 2, 6, 1, 3, 0, 1, 1, 28, 0, 7, 3, 0, 1, 1, 1, 1, 0]': ([0.23594, 0.228411, 0.209215, 0.209175, 0.203446, 0.202192, 0.202853, 0.209284, 0.209552, 0.209235, 0.209254, 0.209304, 0.20929, 0.209298, 0.209197, 0.209188, 0.209274, 0.209194, 0.208088, 0.203938, 0.204443, 0.209196, 0.209199, 0.207976, 0.202954, 0.199564, 0.203414, 0.209215, 0.209397, 0.209287], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 6, 1, 3, 0, 1, 1, 28, 0, 7, 3, 0, 1, 1, 1, 1, 0]': ([0.23594, 0.228411, 0.209215, 0.209175, 0.203446, 0.202192, 0.202853, 0.209284, 0.209552, 0.209235, 0.209254, 0.209304, 0.20929, 0.209298, 0.209197, 0.209188, 0.209274, 0.209194, 0.208088, 0.203938, 0.204443, 0.209196, 0.209199, 0.207976, 0.202954, 0.199564, 0.203414, 0.209215, 0.209397, 0.209287], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = kkk
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	5
        Additions: 		2208
        Multiplications: 	936
        Divisions: 		0
        Logical: 		0
        Reads: 			4237
        Writes: 		728
        Comparisons:		25
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest62.exe __orio_perftest62.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest62.exe  
Program Test Output: 
{'[0, 1, 3, 1, 3, 1, 1, 1, 28, 0, 20, 28, 1, 0, 0, 1, 0, 1]' : 0.104479}
{'[0, 1, 3, 1, 3, 1, 1, 1, 28, 0, 20, 28, 1, 0, 0, 1, 0, 1]' : 0.104317}
{'[0, 1, 3, 1, 3, 1, 1, 1, 28, 0, 20, 28, 1, 0, 0, 1, 0, 1]' : 0.104242}
{'[0, 1, 3, 1, 3, 1, 1, 1, 28, 0, 20, 28, 1, 0, 0, 1, 0, 1]' : 0.10437}
{'[0, 1, 3, 1, 3, 1, 1, 1, 28, 0, 20, 28, 1, 0, 0, 1, 0, 1]' : 0.103657}
{'[0, 1, 3, 1, 3, 1, 1, 1, 28, 0, 20, 28, 1, 0, 0, 1, 0, 1]' : 0.1023}
{'[0, 1, 3, 1, 3, 1, 1, 1, 28, 0, 20, 28, 1, 0, 0, 1, 0, 1]' : 0.102228}
{'[0, 1, 3, 1, 3, 1, 1, 1, 28, 0, 20, 28, 1, 0, 0, 1, 0, 1]' : 0.102233}
{'[0, 1, 3, 1, 3, 1, 1, 1, 28, 0, 20, 28, 1, 0, 0, 1, 0, 1]' : 0.102187}
{'[0, 1, 3, 1, 3, 1, 1, 1, 28, 0, 20, 28, 1, 0, 0, 1, 0, 1]' : 0.102126}
{'[0, 1, 3, 1, 3, 1, 1, 1, 28, 0, 20, 28, 1, 0, 0, 1, 0, 1]' : 0.101919}
{'[0, 1, 3, 1, 3, 1, 1, 1, 28, 0, 20, 28, 1, 0, 0, 1, 0, 1]' : 0.102053}
{'[0, 1, 3, 1, 3, 1, 1, 1, 28, 0, 20, 28, 1, 0, 0, 1, 0, 1]' : 0.10225}
{'[0, 1, 3, 1, 3, 1, 1, 1, 28, 0, 20, 28, 1, 0, 0, 1, 0, 1]' : 0.102031}
{'[0, 1, 3, 1, 3, 1, 1, 1, 28, 0, 20, 28, 1, 0, 0, 1, 0, 1]' : 0.103824}
{'[0, 1, 3, 1, 3, 1, 1, 1, 28, 0, 20, 28, 1, 0, 0, 1, 0, 1]' : 0.104208}
{'[0, 1, 3, 1, 3, 1, 1, 1, 28, 0, 20, 28, 1, 0, 0, 1, 0, 1]' : 0.104213}
{'[0, 1, 3, 1, 3, 1, 1, 1, 28, 0, 20, 28, 1, 0, 0, 1, 0, 1]' : 0.104007}
{'[0, 1, 3, 1, 3, 1, 1, 1, 28, 0, 20, 28, 1, 0, 0, 1, 0, 1]' : 0.102201}
{'[0, 1, 3, 1, 3, 1, 1, 1, 28, 0, 20, 28, 1, 0, 0, 1, 0, 1]' : 0.102398}
{'[0, 1, 3, 1, 3, 1, 1, 1, 28, 0, 20, 28, 1, 0, 0, 1, 0, 1]' : 0.102149}
{'[0, 1, 3, 1, 3, 1, 1, 1, 28, 0, 20, 28, 1, 0, 0, 1, 0, 1]' : 0.101969}
{'[0, 1, 3, 1, 3, 1, 1, 1, 28, 0, 20, 28, 1, 0, 0, 1, 0, 1]' : 0.102073}
{'[0, 1, 3, 1, 3, 1, 1, 1, 28, 0, 20, 28, 1, 0, 0, 1, 0, 1]' : 0.102377}
{'[0, 1, 3, 1, 3, 1, 1, 1, 28, 0, 20, 28, 1, 0, 0, 1, 0, 1]' : 0.102104}
{'[0, 1, 3, 1, 3, 1, 1, 1, 28, 0, 20, 28, 1, 0, 0, 1, 0, 1]' : 0.102046}
{'[0, 1, 3, 1, 3, 1, 1, 1, 28, 0, 20, 28, 1, 0, 0, 1, 0, 1]' : 0.102092}
{'[0, 1, 3, 1, 3, 1, 1, 1, 28, 0, 20, 28, 1, 0, 0, 1, 0, 1]' : 0.102073}
{'[0, 1, 3, 1, 3, 1, 1, 1, 28, 0, 20, 28, 1, 0, 0, 1, 0, 1]' : 0.102375}
{'[0, 1, 3, 1, 3, 1, 1, 1, 28, 0, 20, 28, 1, 0, 0, 1, 0, 1]' : 0.102194}

out:
 ["{'[0, 1, 3, 1, 3, 1, 1, 1, 28, 0, 20, 28, 1, 0, 0, 1, 0, 1]' : 0.104479}", "{'[0, 1, 3, 1, 3, 1, 1, 1, 28, 0, 20, 28, 1, 0, 0, 1, 0, 1]' : 0.104317}", "{'[0, 1, 3, 1, 3, 1, 1, 1, 28, 0, 20, 28, 1, 0, 0, 1, 0, 1]' : 0.104242}", "{'[0, 1, 3, 1, 3, 1, 1, 1, 28, 0, 20, 28, 1, 0, 0, 1, 0, 1]' : 0.10437}", "{'[0, 1, 3, 1, 3, 1, 1, 1, 28, 0, 20, 28, 1, 0, 0, 1, 0, 1]' : 0.103657}", "{'[0, 1, 3, 1, 3, 1, 1, 1, 28, 0, 20, 28, 1, 0, 0, 1, 0, 1]' : 0.1023}", "{'[0, 1, 3, 1, 3, 1, 1, 1, 28, 0, 20, 28, 1, 0, 0, 1, 0, 1]' : 0.102228}", "{'[0, 1, 3, 1, 3, 1, 1, 1, 28, 0, 20, 28, 1, 0, 0, 1, 0, 1]' : 0.102233}", "{'[0, 1, 3, 1, 3, 1, 1, 1, 28, 0, 20, 28, 1, 0, 0, 1, 0, 1]' : 0.102187}", "{'[0, 1, 3, 1, 3, 1, 1, 1, 28, 0, 20, 28, 1, 0, 0, 1, 0, 1]' : 0.102126}", "{'[0, 1, 3, 1, 3, 1, 1, 1, 28, 0, 20, 28, 1, 0, 0, 1, 0, 1]' : 0.101919}", "{'[0, 1, 3, 1, 3, 1, 1, 1, 28, 0, 20, 28, 1, 0, 0, 1, 0, 1]' : 0.102053}", "{'[0, 1, 3, 1, 3, 1, 1, 1, 28, 0, 20, 28, 1, 0, 0, 1, 0, 1]' : 0.10225}", "{'[0, 1, 3, 1, 3, 1, 1, 1, 28, 0, 20, 28, 1, 0, 0, 1, 0, 1]' : 0.102031}", "{'[0, 1, 3, 1, 3, 1, 1, 1, 28, 0, 20, 28, 1, 0, 0, 1, 0, 1]' : 0.103824}", "{'[0, 1, 3, 1, 3, 1, 1, 1, 28, 0, 20, 28, 1, 0, 0, 1, 0, 1]' : 0.104208}", "{'[0, 1, 3, 1, 3, 1, 1, 1, 28, 0, 20, 28, 1, 0, 0, 1, 0, 1]' : 0.104213}", "{'[0, 1, 3, 1, 3, 1, 1, 1, 28, 0, 20, 28, 1, 0, 0, 1, 0, 1]' : 0.104007}", "{'[0, 1, 3, 1, 3, 1, 1, 1, 28, 0, 20, 28, 1, 0, 0, 1, 0, 1]' : 0.102201}", "{'[0, 1, 3, 1, 3, 1, 1, 1, 28, 0, 20, 28, 1, 0, 0, 1, 0, 1]' : 0.102398}", "{'[0, 1, 3, 1, 3, 1, 1, 1, 28, 0, 20, 28, 1, 0, 0, 1, 0, 1]' : 0.102149}", "{'[0, 1, 3, 1, 3, 1, 1, 1, 28, 0, 20, 28, 1, 0, 0, 1, 0, 1]' : 0.101969}", "{'[0, 1, 3, 1, 3, 1, 1, 1, 28, 0, 20, 28, 1, 0, 0, 1, 0, 1]' : 0.102073}", "{'[0, 1, 3, 1, 3, 1, 1, 1, 28, 0, 20, 28, 1, 0, 0, 1, 0, 1]' : 0.102377}", "{'[0, 1, 3, 1, 3, 1, 1, 1, 28, 0, 20, 28, 1, 0, 0, 1, 0, 1]' : 0.102104}", "{'[0, 1, 3, 1, 3, 1, 1, 1, 28, 0, 20, 28, 1, 0, 0, 1, 0, 1]' : 0.102046}", "{'[0, 1, 3, 1, 3, 1, 1, 1, 28, 0, 20, 28, 1, 0, 0, 1, 0, 1]' : 0.102092}", "{'[0, 1, 3, 1, 3, 1, 1, 1, 28, 0, 20, 28, 1, 0, 0, 1, 0, 1]' : 0.102073}", "{'[0, 1, 3, 1, 3, 1, 1, 1, 28, 0, 20, 28, 1, 0, 0, 1, 0, 1]' : 0.102375}", "{'[0, 1, 3, 1, 3, 1, 1, 1, 28, 0, 20, 28, 1, 0, 0, 1, 0, 1]' : 0.102194}"]
returning from 'run': {'[0, 1, 3, 1, 3, 1, 1, 1, 28, 0, 20, 28, 1, 0, 0, 1, 0, 1]': ([0.104479, 0.104317, 0.104242, 0.10437, 0.103657, 0.1023, 0.102228, 0.102233, 0.102187, 0.102126, 0.101919, 0.102053, 0.10225, 0.102031, 0.103824, 0.104208, 0.104213, 0.104007, 0.102201, 0.102398, 0.102149, 0.101969, 0.102073, 0.102377, 0.102104, 0.102046, 0.102092, 0.102073, 0.102375, 0.102194], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 3, 1, 3, 1, 1, 1, 28, 0, 20, 28, 1, 0, 0, 1, 0, 1]': ([0.104479, 0.104317, 0.104242, 0.10437, 0.103657, 0.1023, 0.102228, 0.102233, 0.102187, 0.102126, 0.101919, 0.102053, 0.10225, 0.102031, 0.103824, 0.104208, 0.104213, 0.104007, 0.102201, 0.102398, 0.102149, 0.101969, 0.102073, 0.102377, 0.102104, 0.102046, 0.102092, 0.102073, 0.102375, 0.102194], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = jjj
Code stats:
        Number of loops: 	76
        Max loop nest depth: 	4
        Additions: 		3283
        Multiplications: 	1386
        Divisions: 		0
        Logical: 		0
        Reads: 			6415
        Writes: 		1130
        Comparisons:		76
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest63.exe __orio_perftest63.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest63.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest63.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest63.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest63.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		173
        Multiplications: 	38
        Divisions: 		0
        Logical: 		0
        Reads: 			389
        Writes: 		103
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest64.exe __orio_perftest64.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest64.exe  
Program Test Output: 
{'[2, 2, 4, 0, 3, 6, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.226286}
{'[2, 2, 4, 0, 3, 6, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.226323}
{'[2, 2, 4, 0, 3, 6, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.225648}
{'[2, 2, 4, 0, 3, 6, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.197428}
{'[2, 2, 4, 0, 3, 6, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.198889}
{'[2, 2, 4, 0, 3, 6, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.200618}
{'[2, 2, 4, 0, 3, 6, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.200877}
{'[2, 2, 4, 0, 3, 6, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.19627}
{'[2, 2, 4, 0, 3, 6, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.192183}
{'[2, 2, 4, 0, 3, 6, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.195098}
{'[2, 2, 4, 0, 3, 6, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.194831}
{'[2, 2, 4, 0, 3, 6, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.189294}
{'[2, 2, 4, 0, 3, 6, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.195285}
{'[2, 2, 4, 0, 3, 6, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.195197}
{'[2, 2, 4, 0, 3, 6, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.197807}
{'[2, 2, 4, 0, 3, 6, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.200773}
{'[2, 2, 4, 0, 3, 6, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.197442}
{'[2, 2, 4, 0, 3, 6, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.195427}
{'[2, 2, 4, 0, 3, 6, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.195231}
{'[2, 2, 4, 0, 3, 6, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.19749}
{'[2, 2, 4, 0, 3, 6, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.200725}
{'[2, 2, 4, 0, 3, 6, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.199922}
{'[2, 2, 4, 0, 3, 6, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.193474}
{'[2, 2, 4, 0, 3, 6, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.189218}
{'[2, 2, 4, 0, 3, 6, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.191059}
{'[2, 2, 4, 0, 3, 6, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.19531}
{'[2, 2, 4, 0, 3, 6, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.195179}
{'[2, 2, 4, 0, 3, 6, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.196905}
{'[2, 2, 4, 0, 3, 6, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.195369}
{'[2, 2, 4, 0, 3, 6, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.195404}

out:
 ["{'[2, 2, 4, 0, 3, 6, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.226286}", "{'[2, 2, 4, 0, 3, 6, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.226323}", "{'[2, 2, 4, 0, 3, 6, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.225648}", "{'[2, 2, 4, 0, 3, 6, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.197428}", "{'[2, 2, 4, 0, 3, 6, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.198889}", "{'[2, 2, 4, 0, 3, 6, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.200618}", "{'[2, 2, 4, 0, 3, 6, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.200877}", "{'[2, 2, 4, 0, 3, 6, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.19627}", "{'[2, 2, 4, 0, 3, 6, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.192183}", "{'[2, 2, 4, 0, 3, 6, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.195098}", "{'[2, 2, 4, 0, 3, 6, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.194831}", "{'[2, 2, 4, 0, 3, 6, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.189294}", "{'[2, 2, 4, 0, 3, 6, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.195285}", "{'[2, 2, 4, 0, 3, 6, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.195197}", "{'[2, 2, 4, 0, 3, 6, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.197807}", "{'[2, 2, 4, 0, 3, 6, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.200773}", "{'[2, 2, 4, 0, 3, 6, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.197442}", "{'[2, 2, 4, 0, 3, 6, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.195427}", "{'[2, 2, 4, 0, 3, 6, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.195231}", "{'[2, 2, 4, 0, 3, 6, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.19749}", "{'[2, 2, 4, 0, 3, 6, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.200725}", "{'[2, 2, 4, 0, 3, 6, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.199922}", "{'[2, 2, 4, 0, 3, 6, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.193474}", "{'[2, 2, 4, 0, 3, 6, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.189218}", "{'[2, 2, 4, 0, 3, 6, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.191059}", "{'[2, 2, 4, 0, 3, 6, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.19531}", "{'[2, 2, 4, 0, 3, 6, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.195179}", "{'[2, 2, 4, 0, 3, 6, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.196905}", "{'[2, 2, 4, 0, 3, 6, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.195369}", "{'[2, 2, 4, 0, 3, 6, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.195404}"]
returning from 'run': {'[2, 2, 4, 0, 3, 6, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 0, 1]': ([0.226286, 0.226323, 0.225648, 0.197428, 0.198889, 0.200618, 0.200877, 0.19627, 0.192183, 0.195098, 0.194831, 0.189294, 0.195285, 0.195197, 0.197807, 0.200773, 0.197442, 0.195427, 0.195231, 0.19749, 0.200725, 0.199922, 0.193474, 0.189218, 0.191059, 0.19531, 0.195179, 0.196905, 0.195369, 0.195404], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 2, 4, 0, 3, 6, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 0, 1]': ([0.226286, 0.226323, 0.225648, 0.197428, 0.198889, 0.200618, 0.200877, 0.19627, 0.192183, 0.195098, 0.194831, 0.189294, 0.195285, 0.195197, 0.197807, 0.200773, 0.197442, 0.195427, 0.195231, 0.19749, 0.200725, 0.199922, 0.193474, 0.189218, 0.191059, 0.19531, 0.195179, 0.196905, 0.195369, 0.195404], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	106
        Max loop nest depth: 	5
        Additions: 		4894
        Multiplications: 	1666
        Divisions: 		0
        Logical: 		0
        Reads: 			9703
        Writes: 		1880
        Comparisons:		106
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest65.exe __orio_perftest65.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest65.exe  
Program Test Output: 
{'[4, 0, 6, 6, 3, 0, 1, 1, 28, 15, 0, 14, 2, 0, 0, 1, 0, 1]' : 0.141144}
{'[4, 0, 6, 6, 3, 0, 1, 1, 28, 15, 0, 14, 2, 0, 0, 1, 0, 1]' : 0.140426}
{'[4, 0, 6, 6, 3, 0, 1, 1, 28, 15, 0, 14, 2, 0, 0, 1, 0, 1]' : 0.140259}
{'[4, 0, 6, 6, 3, 0, 1, 1, 28, 15, 0, 14, 2, 0, 0, 1, 0, 1]' : 0.141398}
{'[4, 0, 6, 6, 3, 0, 1, 1, 28, 15, 0, 14, 2, 0, 0, 1, 0, 1]' : 0.140397}
{'[4, 0, 6, 6, 3, 0, 1, 1, 28, 15, 0, 14, 2, 0, 0, 1, 0, 1]' : 0.140196}
{'[4, 0, 6, 6, 3, 0, 1, 1, 28, 15, 0, 14, 2, 0, 0, 1, 0, 1]' : 0.140622}
{'[4, 0, 6, 6, 3, 0, 1, 1, 28, 15, 0, 14, 2, 0, 0, 1, 0, 1]' : 0.140543}
{'[4, 0, 6, 6, 3, 0, 1, 1, 28, 15, 0, 14, 2, 0, 0, 1, 0, 1]' : 0.138415}
{'[4, 0, 6, 6, 3, 0, 1, 1, 28, 15, 0, 14, 2, 0, 0, 1, 0, 1]' : 0.13742}
{'[4, 0, 6, 6, 3, 0, 1, 1, 28, 15, 0, 14, 2, 0, 0, 1, 0, 1]' : 0.138473}
{'[4, 0, 6, 6, 3, 0, 1, 1, 28, 15, 0, 14, 2, 0, 0, 1, 0, 1]' : 0.142253}
{'[4, 0, 6, 6, 3, 0, 1, 1, 28, 15, 0, 14, 2, 0, 0, 1, 0, 1]' : 0.14211}
{'[4, 0, 6, 6, 3, 0, 1, 1, 28, 15, 0, 14, 2, 0, 0, 1, 0, 1]' : 0.139772}
{'[4, 0, 6, 6, 3, 0, 1, 1, 28, 15, 0, 14, 2, 0, 0, 1, 0, 1]' : 0.1415}
{'[4, 0, 6, 6, 3, 0, 1, 1, 28, 15, 0, 14, 2, 0, 0, 1, 0, 1]' : 0.141885}
{'[4, 0, 6, 6, 3, 0, 1, 1, 28, 15, 0, 14, 2, 0, 0, 1, 0, 1]' : 0.139951}
{'[4, 0, 6, 6, 3, 0, 1, 1, 28, 15, 0, 14, 2, 0, 0, 1, 0, 1]' : 0.140118}
{'[4, 0, 6, 6, 3, 0, 1, 1, 28, 15, 0, 14, 2, 0, 0, 1, 0, 1]' : 0.142612}
{'[4, 0, 6, 6, 3, 0, 1, 1, 28, 15, 0, 14, 2, 0, 0, 1, 0, 1]' : 0.142778}
{'[4, 0, 6, 6, 3, 0, 1, 1, 28, 15, 0, 14, 2, 0, 0, 1, 0, 1]' : 0.142922}
{'[4, 0, 6, 6, 3, 0, 1, 1, 28, 15, 0, 14, 2, 0, 0, 1, 0, 1]' : 0.143236}
{'[4, 0, 6, 6, 3, 0, 1, 1, 28, 15, 0, 14, 2, 0, 0, 1, 0, 1]' : 0.142637}
{'[4, 0, 6, 6, 3, 0, 1, 1, 28, 15, 0, 14, 2, 0, 0, 1, 0, 1]' : 0.142759}
{'[4, 0, 6, 6, 3, 0, 1, 1, 28, 15, 0, 14, 2, 0, 0, 1, 0, 1]' : 0.142821}
{'[4, 0, 6, 6, 3, 0, 1, 1, 28, 15, 0, 14, 2, 0, 0, 1, 0, 1]' : 0.142709}
{'[4, 0, 6, 6, 3, 0, 1, 1, 28, 15, 0, 14, 2, 0, 0, 1, 0, 1]' : 0.142777}
{'[4, 0, 6, 6, 3, 0, 1, 1, 28, 15, 0, 14, 2, 0, 0, 1, 0, 1]' : 0.139802}
{'[4, 0, 6, 6, 3, 0, 1, 1, 28, 15, 0, 14, 2, 0, 0, 1, 0, 1]' : 0.141218}
{'[4, 0, 6, 6, 3, 0, 1, 1, 28, 15, 0, 14, 2, 0, 0, 1, 0, 1]' : 0.140901}

out:
 ["{'[4, 0, 6, 6, 3, 0, 1, 1, 28, 15, 0, 14, 2, 0, 0, 1, 0, 1]' : 0.141144}", "{'[4, 0, 6, 6, 3, 0, 1, 1, 28, 15, 0, 14, 2, 0, 0, 1, 0, 1]' : 0.140426}", "{'[4, 0, 6, 6, 3, 0, 1, 1, 28, 15, 0, 14, 2, 0, 0, 1, 0, 1]' : 0.140259}", "{'[4, 0, 6, 6, 3, 0, 1, 1, 28, 15, 0, 14, 2, 0, 0, 1, 0, 1]' : 0.141398}", "{'[4, 0, 6, 6, 3, 0, 1, 1, 28, 15, 0, 14, 2, 0, 0, 1, 0, 1]' : 0.140397}", "{'[4, 0, 6, 6, 3, 0, 1, 1, 28, 15, 0, 14, 2, 0, 0, 1, 0, 1]' : 0.140196}", "{'[4, 0, 6, 6, 3, 0, 1, 1, 28, 15, 0, 14, 2, 0, 0, 1, 0, 1]' : 0.140622}", "{'[4, 0, 6, 6, 3, 0, 1, 1, 28, 15, 0, 14, 2, 0, 0, 1, 0, 1]' : 0.140543}", "{'[4, 0, 6, 6, 3, 0, 1, 1, 28, 15, 0, 14, 2, 0, 0, 1, 0, 1]' : 0.138415}", "{'[4, 0, 6, 6, 3, 0, 1, 1, 28, 15, 0, 14, 2, 0, 0, 1, 0, 1]' : 0.13742}", "{'[4, 0, 6, 6, 3, 0, 1, 1, 28, 15, 0, 14, 2, 0, 0, 1, 0, 1]' : 0.138473}", "{'[4, 0, 6, 6, 3, 0, 1, 1, 28, 15, 0, 14, 2, 0, 0, 1, 0, 1]' : 0.142253}", "{'[4, 0, 6, 6, 3, 0, 1, 1, 28, 15, 0, 14, 2, 0, 0, 1, 0, 1]' : 0.14211}", "{'[4, 0, 6, 6, 3, 0, 1, 1, 28, 15, 0, 14, 2, 0, 0, 1, 0, 1]' : 0.139772}", "{'[4, 0, 6, 6, 3, 0, 1, 1, 28, 15, 0, 14, 2, 0, 0, 1, 0, 1]' : 0.1415}", "{'[4, 0, 6, 6, 3, 0, 1, 1, 28, 15, 0, 14, 2, 0, 0, 1, 0, 1]' : 0.141885}", "{'[4, 0, 6, 6, 3, 0, 1, 1, 28, 15, 0, 14, 2, 0, 0, 1, 0, 1]' : 0.139951}", "{'[4, 0, 6, 6, 3, 0, 1, 1, 28, 15, 0, 14, 2, 0, 0, 1, 0, 1]' : 0.140118}", "{'[4, 0, 6, 6, 3, 0, 1, 1, 28, 15, 0, 14, 2, 0, 0, 1, 0, 1]' : 0.142612}", "{'[4, 0, 6, 6, 3, 0, 1, 1, 28, 15, 0, 14, 2, 0, 0, 1, 0, 1]' : 0.142778}", "{'[4, 0, 6, 6, 3, 0, 1, 1, 28, 15, 0, 14, 2, 0, 0, 1, 0, 1]' : 0.142922}", "{'[4, 0, 6, 6, 3, 0, 1, 1, 28, 15, 0, 14, 2, 0, 0, 1, 0, 1]' : 0.143236}", "{'[4, 0, 6, 6, 3, 0, 1, 1, 28, 15, 0, 14, 2, 0, 0, 1, 0, 1]' : 0.142637}", "{'[4, 0, 6, 6, 3, 0, 1, 1, 28, 15, 0, 14, 2, 0, 0, 1, 0, 1]' : 0.142759}", "{'[4, 0, 6, 6, 3, 0, 1, 1, 28, 15, 0, 14, 2, 0, 0, 1, 0, 1]' : 0.142821}", "{'[4, 0, 6, 6, 3, 0, 1, 1, 28, 15, 0, 14, 2, 0, 0, 1, 0, 1]' : 0.142709}", "{'[4, 0, 6, 6, 3, 0, 1, 1, 28, 15, 0, 14, 2, 0, 0, 1, 0, 1]' : 0.142777}", "{'[4, 0, 6, 6, 3, 0, 1, 1, 28, 15, 0, 14, 2, 0, 0, 1, 0, 1]' : 0.139802}", "{'[4, 0, 6, 6, 3, 0, 1, 1, 28, 15, 0, 14, 2, 0, 0, 1, 0, 1]' : 0.141218}", "{'[4, 0, 6, 6, 3, 0, 1, 1, 28, 15, 0, 14, 2, 0, 0, 1, 0, 1]' : 0.140901}"]
returning from 'run': {'[4, 0, 6, 6, 3, 0, 1, 1, 28, 15, 0, 14, 2, 0, 0, 1, 0, 1]': ([0.141144, 0.140426, 0.140259, 0.141398, 0.140397, 0.140196, 0.140622, 0.140543, 0.138415, 0.13742, 0.138473, 0.142253, 0.14211, 0.139772, 0.1415, 0.141885, 0.139951, 0.140118, 0.142612, 0.142778, 0.142922, 0.143236, 0.142637, 0.142759, 0.142821, 0.142709, 0.142777, 0.139802, 0.141218, 0.140901], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 0, 6, 6, 3, 0, 1, 1, 28, 15, 0, 14, 2, 0, 0, 1, 0, 1]': ([0.141144, 0.140426, 0.140259, 0.141398, 0.140397, 0.140196, 0.140622, 0.140543, 0.138415, 0.13742, 0.138473, 0.142253, 0.14211, 0.139772, 0.1415, 0.141885, 0.139951, 0.140118, 0.142612, 0.142778, 0.142922, 0.143236, 0.142637, 0.142759, 0.142821, 0.142709, 0.142777, 0.139802, 0.141218, 0.140901], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	134
        Max loop nest depth: 	6
        Additions: 		6502
        Multiplications: 	2436
        Divisions: 		0
        Logical: 		0
        Reads: 			12533
        Writes: 		2310
        Comparisons:		134
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest66.exe __orio_perftest66.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest66.exe  
Program Test Output: 
{'[5, 4, 2, 5, 3, 6, 0, 1, 28, 27, 0, 7, 0, 2, 0, 1, 1, 1]' : 0.19667}
{'[5, 4, 2, 5, 3, 6, 0, 1, 28, 27, 0, 7, 0, 2, 0, 1, 1, 1]' : 0.193412}
{'[5, 4, 2, 5, 3, 6, 0, 1, 28, 27, 0, 7, 0, 2, 0, 1, 1, 1]' : 0.190926}
{'[5, 4, 2, 5, 3, 6, 0, 1, 28, 27, 0, 7, 0, 2, 0, 1, 1, 1]' : 0.191282}
{'[5, 4, 2, 5, 3, 6, 0, 1, 28, 27, 0, 7, 0, 2, 0, 1, 1, 1]' : 0.189885}
{'[5, 4, 2, 5, 3, 6, 0, 1, 28, 27, 0, 7, 0, 2, 0, 1, 1, 1]' : 0.196123}
{'[5, 4, 2, 5, 3, 6, 0, 1, 28, 27, 0, 7, 0, 2, 0, 1, 1, 1]' : 0.196488}
{'[5, 4, 2, 5, 3, 6, 0, 1, 28, 27, 0, 7, 0, 2, 0, 1, 1, 1]' : 0.196859}
{'[5, 4, 2, 5, 3, 6, 0, 1, 28, 27, 0, 7, 0, 2, 0, 1, 1, 1]' : 0.196322}
{'[5, 4, 2, 5, 3, 6, 0, 1, 28, 27, 0, 7, 0, 2, 0, 1, 1, 1]' : 0.196423}
{'[5, 4, 2, 5, 3, 6, 0, 1, 28, 27, 0, 7, 0, 2, 0, 1, 1, 1]' : 0.195627}
{'[5, 4, 2, 5, 3, 6, 0, 1, 28, 27, 0, 7, 0, 2, 0, 1, 1, 1]' : 0.19638}
{'[5, 4, 2, 5, 3, 6, 0, 1, 28, 27, 0, 7, 0, 2, 0, 1, 1, 1]' : 0.196415}
{'[5, 4, 2, 5, 3, 6, 0, 1, 28, 27, 0, 7, 0, 2, 0, 1, 1, 1]' : 0.196607}
{'[5, 4, 2, 5, 3, 6, 0, 1, 28, 27, 0, 7, 0, 2, 0, 1, 1, 1]' : 0.19687}
{'[5, 4, 2, 5, 3, 6, 0, 1, 28, 27, 0, 7, 0, 2, 0, 1, 1, 1]' : 0.196482}
{'[5, 4, 2, 5, 3, 6, 0, 1, 28, 27, 0, 7, 0, 2, 0, 1, 1, 1]' : 0.196589}
{'[5, 4, 2, 5, 3, 6, 0, 1, 28, 27, 0, 7, 0, 2, 0, 1, 1, 1]' : 0.196889}
{'[5, 4, 2, 5, 3, 6, 0, 1, 28, 27, 0, 7, 0, 2, 0, 1, 1, 1]' : 0.196397}
{'[5, 4, 2, 5, 3, 6, 0, 1, 28, 27, 0, 7, 0, 2, 0, 1, 1, 1]' : 0.194008}
{'[5, 4, 2, 5, 3, 6, 0, 1, 28, 27, 0, 7, 0, 2, 0, 1, 1, 1]' : 0.194692}
{'[5, 4, 2, 5, 3, 6, 0, 1, 28, 27, 0, 7, 0, 2, 0, 1, 1, 1]' : 0.196579}
{'[5, 4, 2, 5, 3, 6, 0, 1, 28, 27, 0, 7, 0, 2, 0, 1, 1, 1]' : 0.197172}
{'[5, 4, 2, 5, 3, 6, 0, 1, 28, 27, 0, 7, 0, 2, 0, 1, 1, 1]' : 0.192907}
{'[5, 4, 2, 5, 3, 6, 0, 1, 28, 27, 0, 7, 0, 2, 0, 1, 1, 1]' : 0.191279}
{'[5, 4, 2, 5, 3, 6, 0, 1, 28, 27, 0, 7, 0, 2, 0, 1, 1, 1]' : 0.194309}
{'[5, 4, 2, 5, 3, 6, 0, 1, 28, 27, 0, 7, 0, 2, 0, 1, 1, 1]' : 0.19636}
{'[5, 4, 2, 5, 3, 6, 0, 1, 28, 27, 0, 7, 0, 2, 0, 1, 1, 1]' : 0.19696}
{'[5, 4, 2, 5, 3, 6, 0, 1, 28, 27, 0, 7, 0, 2, 0, 1, 1, 1]' : 0.186414}
{'[5, 4, 2, 5, 3, 6, 0, 1, 28, 27, 0, 7, 0, 2, 0, 1, 1, 1]' : 0.185218}

out:
 ["{'[5, 4, 2, 5, 3, 6, 0, 1, 28, 27, 0, 7, 0, 2, 0, 1, 1, 1]' : 0.19667}", "{'[5, 4, 2, 5, 3, 6, 0, 1, 28, 27, 0, 7, 0, 2, 0, 1, 1, 1]' : 0.193412}", "{'[5, 4, 2, 5, 3, 6, 0, 1, 28, 27, 0, 7, 0, 2, 0, 1, 1, 1]' : 0.190926}", "{'[5, 4, 2, 5, 3, 6, 0, 1, 28, 27, 0, 7, 0, 2, 0, 1, 1, 1]' : 0.191282}", "{'[5, 4, 2, 5, 3, 6, 0, 1, 28, 27, 0, 7, 0, 2, 0, 1, 1, 1]' : 0.189885}", "{'[5, 4, 2, 5, 3, 6, 0, 1, 28, 27, 0, 7, 0, 2, 0, 1, 1, 1]' : 0.196123}", "{'[5, 4, 2, 5, 3, 6, 0, 1, 28, 27, 0, 7, 0, 2, 0, 1, 1, 1]' : 0.196488}", "{'[5, 4, 2, 5, 3, 6, 0, 1, 28, 27, 0, 7, 0, 2, 0, 1, 1, 1]' : 0.196859}", "{'[5, 4, 2, 5, 3, 6, 0, 1, 28, 27, 0, 7, 0, 2, 0, 1, 1, 1]' : 0.196322}", "{'[5, 4, 2, 5, 3, 6, 0, 1, 28, 27, 0, 7, 0, 2, 0, 1, 1, 1]' : 0.196423}", "{'[5, 4, 2, 5, 3, 6, 0, 1, 28, 27, 0, 7, 0, 2, 0, 1, 1, 1]' : 0.195627}", "{'[5, 4, 2, 5, 3, 6, 0, 1, 28, 27, 0, 7, 0, 2, 0, 1, 1, 1]' : 0.19638}", "{'[5, 4, 2, 5, 3, 6, 0, 1, 28, 27, 0, 7, 0, 2, 0, 1, 1, 1]' : 0.196415}", "{'[5, 4, 2, 5, 3, 6, 0, 1, 28, 27, 0, 7, 0, 2, 0, 1, 1, 1]' : 0.196607}", "{'[5, 4, 2, 5, 3, 6, 0, 1, 28, 27, 0, 7, 0, 2, 0, 1, 1, 1]' : 0.19687}", "{'[5, 4, 2, 5, 3, 6, 0, 1, 28, 27, 0, 7, 0, 2, 0, 1, 1, 1]' : 0.196482}", "{'[5, 4, 2, 5, 3, 6, 0, 1, 28, 27, 0, 7, 0, 2, 0, 1, 1, 1]' : 0.196589}", "{'[5, 4, 2, 5, 3, 6, 0, 1, 28, 27, 0, 7, 0, 2, 0, 1, 1, 1]' : 0.196889}", "{'[5, 4, 2, 5, 3, 6, 0, 1, 28, 27, 0, 7, 0, 2, 0, 1, 1, 1]' : 0.196397}", "{'[5, 4, 2, 5, 3, 6, 0, 1, 28, 27, 0, 7, 0, 2, 0, 1, 1, 1]' : 0.194008}", "{'[5, 4, 2, 5, 3, 6, 0, 1, 28, 27, 0, 7, 0, 2, 0, 1, 1, 1]' : 0.194692}", "{'[5, 4, 2, 5, 3, 6, 0, 1, 28, 27, 0, 7, 0, 2, 0, 1, 1, 1]' : 0.196579}", "{'[5, 4, 2, 5, 3, 6, 0, 1, 28, 27, 0, 7, 0, 2, 0, 1, 1, 1]' : 0.197172}", "{'[5, 4, 2, 5, 3, 6, 0, 1, 28, 27, 0, 7, 0, 2, 0, 1, 1, 1]' : 0.192907}", "{'[5, 4, 2, 5, 3, 6, 0, 1, 28, 27, 0, 7, 0, 2, 0, 1, 1, 1]' : 0.191279}", "{'[5, 4, 2, 5, 3, 6, 0, 1, 28, 27, 0, 7, 0, 2, 0, 1, 1, 1]' : 0.194309}", "{'[5, 4, 2, 5, 3, 6, 0, 1, 28, 27, 0, 7, 0, 2, 0, 1, 1, 1]' : 0.19636}", "{'[5, 4, 2, 5, 3, 6, 0, 1, 28, 27, 0, 7, 0, 2, 0, 1, 1, 1]' : 0.19696}", "{'[5, 4, 2, 5, 3, 6, 0, 1, 28, 27, 0, 7, 0, 2, 0, 1, 1, 1]' : 0.186414}", "{'[5, 4, 2, 5, 3, 6, 0, 1, 28, 27, 0, 7, 0, 2, 0, 1, 1, 1]' : 0.185218}"]
returning from 'run': {'[5, 4, 2, 5, 3, 6, 0, 1, 28, 27, 0, 7, 0, 2, 0, 1, 1, 1]': ([0.19667, 0.193412, 0.190926, 0.191282, 0.189885, 0.196123, 0.196488, 0.196859, 0.196322, 0.196423, 0.195627, 0.19638, 0.196415, 0.196607, 0.19687, 0.196482, 0.196589, 0.196889, 0.196397, 0.194008, 0.194692, 0.196579, 0.197172, 0.192907, 0.191279, 0.194309, 0.19636, 0.19696, 0.186414, 0.185218], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 4, 2, 5, 3, 6, 0, 1, 28, 27, 0, 7, 0, 2, 0, 1, 1, 1]': ([0.19667, 0.193412, 0.190926, 0.191282, 0.189885, 0.196123, 0.196488, 0.196859, 0.196322, 0.196423, 0.195627, 0.19638, 0.196415, 0.196607, 0.19687, 0.196482, 0.196589, 0.196889, 0.196397, 0.194008, 0.194692, 0.196579, 0.197172, 0.192907, 0.191279, 0.194309, 0.19636, 0.19696, 0.186414, 0.185218], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		309
        Multiplications: 	74
        Divisions: 		0
        Logical: 		0
        Reads: 			676
        Writes: 		161
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest67.exe __orio_perftest67.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest67.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest67.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest67.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest67.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	79
        Max loop nest depth: 	5
        Additions: 		4452
        Multiplications: 	2046
        Divisions: 		0
        Logical: 		0
        Reads: 			8529
        Writes: 		1423
        Comparisons:		79
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest68.exe __orio_perftest68.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest68.exe  
Program Test Output: 
{'[0, 0, 5, 2, 3, 5, 0, 1, 28, 29, 23, 0, 0, 0, 1, 1, 0, 0]' : 0.214468}
{'[0, 0, 5, 2, 3, 5, 0, 1, 28, 29, 23, 0, 0, 0, 1, 1, 0, 0]' : 0.215416}
{'[0, 0, 5, 2, 3, 5, 0, 1, 28, 29, 23, 0, 0, 0, 1, 1, 0, 0]' : 0.20036}
{'[0, 0, 5, 2, 3, 5, 0, 1, 28, 29, 23, 0, 0, 0, 1, 1, 0, 0]' : 0.192054}
{'[0, 0, 5, 2, 3, 5, 0, 1, 28, 29, 23, 0, 0, 0, 1, 1, 0, 0]' : 0.189977}
{'[0, 0, 5, 2, 3, 5, 0, 1, 28, 29, 23, 0, 0, 0, 1, 1, 0, 0]' : 0.189415}
{'[0, 0, 5, 2, 3, 5, 0, 1, 28, 29, 23, 0, 0, 0, 1, 1, 0, 0]' : 0.19252}
{'[0, 0, 5, 2, 3, 5, 0, 1, 28, 29, 23, 0, 0, 0, 1, 1, 0, 0]' : 0.193637}
{'[0, 0, 5, 2, 3, 5, 0, 1, 28, 29, 23, 0, 0, 0, 1, 1, 0, 0]' : 0.194049}
{'[0, 0, 5, 2, 3, 5, 0, 1, 28, 29, 23, 0, 0, 0, 1, 1, 0, 0]' : 0.190244}
{'[0, 0, 5, 2, 3, 5, 0, 1, 28, 29, 23, 0, 0, 0, 1, 1, 0, 0]' : 0.189651}
{'[0, 0, 5, 2, 3, 5, 0, 1, 28, 29, 23, 0, 0, 0, 1, 1, 0, 0]' : 0.192781}
{'[0, 0, 5, 2, 3, 5, 0, 1, 28, 29, 23, 0, 0, 0, 1, 1, 0, 0]' : 0.196922}
{'[0, 0, 5, 2, 3, 5, 0, 1, 28, 29, 23, 0, 0, 0, 1, 1, 0, 0]' : 0.19727}
{'[0, 0, 5, 2, 3, 5, 0, 1, 28, 29, 23, 0, 0, 0, 1, 1, 0, 0]' : 0.196755}
{'[0, 0, 5, 2, 3, 5, 0, 1, 28, 29, 23, 0, 0, 0, 1, 1, 0, 0]' : 0.196982}
{'[0, 0, 5, 2, 3, 5, 0, 1, 28, 29, 23, 0, 0, 0, 1, 1, 0, 0]' : 0.195051}
{'[0, 0, 5, 2, 3, 5, 0, 1, 28, 29, 23, 0, 0, 0, 1, 1, 0, 0]' : 0.19525}
{'[0, 0, 5, 2, 3, 5, 0, 1, 28, 29, 23, 0, 0, 0, 1, 1, 0, 0]' : 0.193}
{'[0, 0, 5, 2, 3, 5, 0, 1, 28, 29, 23, 0, 0, 0, 1, 1, 0, 0]' : 0.195562}
{'[0, 0, 5, 2, 3, 5, 0, 1, 28, 29, 23, 0, 0, 0, 1, 1, 0, 0]' : 0.194833}
{'[0, 0, 5, 2, 3, 5, 0, 1, 28, 29, 23, 0, 0, 0, 1, 1, 0, 0]' : 0.193901}
{'[0, 0, 5, 2, 3, 5, 0, 1, 28, 29, 23, 0, 0, 0, 1, 1, 0, 0]' : 0.196257}
{'[0, 0, 5, 2, 3, 5, 0, 1, 28, 29, 23, 0, 0, 0, 1, 1, 0, 0]' : 0.196484}
{'[0, 0, 5, 2, 3, 5, 0, 1, 28, 29, 23, 0, 0, 0, 1, 1, 0, 0]' : 0.194913}
{'[0, 0, 5, 2, 3, 5, 0, 1, 28, 29, 23, 0, 0, 0, 1, 1, 0, 0]' : 0.193264}
{'[0, 0, 5, 2, 3, 5, 0, 1, 28, 29, 23, 0, 0, 0, 1, 1, 0, 0]' : 0.190614}
{'[0, 0, 5, 2, 3, 5, 0, 1, 28, 29, 23, 0, 0, 0, 1, 1, 0, 0]' : 0.19684}
{'[0, 0, 5, 2, 3, 5, 0, 1, 28, 29, 23, 0, 0, 0, 1, 1, 0, 0]' : 0.196159}
{'[0, 0, 5, 2, 3, 5, 0, 1, 28, 29, 23, 0, 0, 0, 1, 1, 0, 0]' : 0.19537}

out:
 ["{'[0, 0, 5, 2, 3, 5, 0, 1, 28, 29, 23, 0, 0, 0, 1, 1, 0, 0]' : 0.214468}", "{'[0, 0, 5, 2, 3, 5, 0, 1, 28, 29, 23, 0, 0, 0, 1, 1, 0, 0]' : 0.215416}", "{'[0, 0, 5, 2, 3, 5, 0, 1, 28, 29, 23, 0, 0, 0, 1, 1, 0, 0]' : 0.20036}", "{'[0, 0, 5, 2, 3, 5, 0, 1, 28, 29, 23, 0, 0, 0, 1, 1, 0, 0]' : 0.192054}", "{'[0, 0, 5, 2, 3, 5, 0, 1, 28, 29, 23, 0, 0, 0, 1, 1, 0, 0]' : 0.189977}", "{'[0, 0, 5, 2, 3, 5, 0, 1, 28, 29, 23, 0, 0, 0, 1, 1, 0, 0]' : 0.189415}", "{'[0, 0, 5, 2, 3, 5, 0, 1, 28, 29, 23, 0, 0, 0, 1, 1, 0, 0]' : 0.19252}", "{'[0, 0, 5, 2, 3, 5, 0, 1, 28, 29, 23, 0, 0, 0, 1, 1, 0, 0]' : 0.193637}", "{'[0, 0, 5, 2, 3, 5, 0, 1, 28, 29, 23, 0, 0, 0, 1, 1, 0, 0]' : 0.194049}", "{'[0, 0, 5, 2, 3, 5, 0, 1, 28, 29, 23, 0, 0, 0, 1, 1, 0, 0]' : 0.190244}", "{'[0, 0, 5, 2, 3, 5, 0, 1, 28, 29, 23, 0, 0, 0, 1, 1, 0, 0]' : 0.189651}", "{'[0, 0, 5, 2, 3, 5, 0, 1, 28, 29, 23, 0, 0, 0, 1, 1, 0, 0]' : 0.192781}", "{'[0, 0, 5, 2, 3, 5, 0, 1, 28, 29, 23, 0, 0, 0, 1, 1, 0, 0]' : 0.196922}", "{'[0, 0, 5, 2, 3, 5, 0, 1, 28, 29, 23, 0, 0, 0, 1, 1, 0, 0]' : 0.19727}", "{'[0, 0, 5, 2, 3, 5, 0, 1, 28, 29, 23, 0, 0, 0, 1, 1, 0, 0]' : 0.196755}", "{'[0, 0, 5, 2, 3, 5, 0, 1, 28, 29, 23, 0, 0, 0, 1, 1, 0, 0]' : 0.196982}", "{'[0, 0, 5, 2, 3, 5, 0, 1, 28, 29, 23, 0, 0, 0, 1, 1, 0, 0]' : 0.195051}", "{'[0, 0, 5, 2, 3, 5, 0, 1, 28, 29, 23, 0, 0, 0, 1, 1, 0, 0]' : 0.19525}", "{'[0, 0, 5, 2, 3, 5, 0, 1, 28, 29, 23, 0, 0, 0, 1, 1, 0, 0]' : 0.193}", "{'[0, 0, 5, 2, 3, 5, 0, 1, 28, 29, 23, 0, 0, 0, 1, 1, 0, 0]' : 0.195562}", "{'[0, 0, 5, 2, 3, 5, 0, 1, 28, 29, 23, 0, 0, 0, 1, 1, 0, 0]' : 0.194833}", "{'[0, 0, 5, 2, 3, 5, 0, 1, 28, 29, 23, 0, 0, 0, 1, 1, 0, 0]' : 0.193901}", "{'[0, 0, 5, 2, 3, 5, 0, 1, 28, 29, 23, 0, 0, 0, 1, 1, 0, 0]' : 0.196257}", "{'[0, 0, 5, 2, 3, 5, 0, 1, 28, 29, 23, 0, 0, 0, 1, 1, 0, 0]' : 0.196484}", "{'[0, 0, 5, 2, 3, 5, 0, 1, 28, 29, 23, 0, 0, 0, 1, 1, 0, 0]' : 0.194913}", "{'[0, 0, 5, 2, 3, 5, 0, 1, 28, 29, 23, 0, 0, 0, 1, 1, 0, 0]' : 0.193264}", "{'[0, 0, 5, 2, 3, 5, 0, 1, 28, 29, 23, 0, 0, 0, 1, 1, 0, 0]' : 0.190614}", "{'[0, 0, 5, 2, 3, 5, 0, 1, 28, 29, 23, 0, 0, 0, 1, 1, 0, 0]' : 0.19684}", "{'[0, 0, 5, 2, 3, 5, 0, 1, 28, 29, 23, 0, 0, 0, 1, 1, 0, 0]' : 0.196159}", "{'[0, 0, 5, 2, 3, 5, 0, 1, 28, 29, 23, 0, 0, 0, 1, 1, 0, 0]' : 0.19537}"]
returning from 'run': {'[0, 0, 5, 2, 3, 5, 0, 1, 28, 29, 23, 0, 0, 0, 1, 1, 0, 0]': ([0.214468, 0.215416, 0.20036, 0.192054, 0.189977, 0.189415, 0.19252, 0.193637, 0.194049, 0.190244, 0.189651, 0.192781, 0.196922, 0.19727, 0.196755, 0.196982, 0.195051, 0.19525, 0.193, 0.195562, 0.194833, 0.193901, 0.196257, 0.196484, 0.194913, 0.193264, 0.190614, 0.19684, 0.196159, 0.19537], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 5, 2, 3, 5, 0, 1, 28, 29, 23, 0, 0, 0, 1, 1, 0, 0]': ([0.214468, 0.215416, 0.20036, 0.192054, 0.189977, 0.189415, 0.19252, 0.193637, 0.194049, 0.190244, 0.189651, 0.192781, 0.196922, 0.19727, 0.196755, 0.196982, 0.195051, 0.19525, 0.193, 0.195562, 0.194833, 0.193901, 0.196257, 0.196484, 0.194913, 0.193264, 0.190614, 0.19684, 0.196159, 0.19537], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	179
        Max loop nest depth: 	6
        Additions: 		2673
        Multiplications: 	756
        Divisions: 		0
        Logical: 		0
        Reads: 			5523
        Writes: 		1133
        Comparisons:		179
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest69.exe __orio_perftest69.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest69.exe  
Program Test Output: 
{'[2, 2, 0, 5, 3, 2, 1, 1, 28, 29, 3, 0, 2, 0, 0, 1, 1, 1]' : 0.1632}
{'[2, 2, 0, 5, 3, 2, 1, 1, 28, 29, 3, 0, 2, 0, 0, 1, 1, 1]' : 0.163831}
{'[2, 2, 0, 5, 3, 2, 1, 1, 28, 29, 3, 0, 2, 0, 0, 1, 1, 1]' : 0.163357}
{'[2, 2, 0, 5, 3, 2, 1, 1, 28, 29, 3, 0, 2, 0, 0, 1, 1, 1]' : 0.15329}
{'[2, 2, 0, 5, 3, 2, 1, 1, 28, 29, 3, 0, 2, 0, 0, 1, 1, 1]' : 0.150757}
{'[2, 2, 0, 5, 3, 2, 1, 1, 28, 29, 3, 0, 2, 0, 0, 1, 1, 1]' : 0.149441}
{'[2, 2, 0, 5, 3, 2, 1, 1, 28, 29, 3, 0, 2, 0, 0, 1, 1, 1]' : 0.14876}
{'[2, 2, 0, 5, 3, 2, 1, 1, 28, 29, 3, 0, 2, 0, 0, 1, 1, 1]' : 0.149671}
{'[2, 2, 0, 5, 3, 2, 1, 1, 28, 29, 3, 0, 2, 0, 0, 1, 1, 1]' : 0.149693}
{'[2, 2, 0, 5, 3, 2, 1, 1, 28, 29, 3, 0, 2, 0, 0, 1, 1, 1]' : 0.149332}
{'[2, 2, 0, 5, 3, 2, 1, 1, 28, 29, 3, 0, 2, 0, 0, 1, 1, 1]' : 0.148619}
{'[2, 2, 0, 5, 3, 2, 1, 1, 28, 29, 3, 0, 2, 0, 0, 1, 1, 1]' : 0.151834}
{'[2, 2, 0, 5, 3, 2, 1, 1, 28, 29, 3, 0, 2, 0, 0, 1, 1, 1]' : 0.150778}
{'[2, 2, 0, 5, 3, 2, 1, 1, 28, 29, 3, 0, 2, 0, 0, 1, 1, 1]' : 0.151584}
{'[2, 2, 0, 5, 3, 2, 1, 1, 28, 29, 3, 0, 2, 0, 0, 1, 1, 1]' : 0.152028}
{'[2, 2, 0, 5, 3, 2, 1, 1, 28, 29, 3, 0, 2, 0, 0, 1, 1, 1]' : 0.149463}
{'[2, 2, 0, 5, 3, 2, 1, 1, 28, 29, 3, 0, 2, 0, 0, 1, 1, 1]' : 0.150008}
{'[2, 2, 0, 5, 3, 2, 1, 1, 28, 29, 3, 0, 2, 0, 0, 1, 1, 1]' : 0.150404}
{'[2, 2, 0, 5, 3, 2, 1, 1, 28, 29, 3, 0, 2, 0, 0, 1, 1, 1]' : 0.151598}
{'[2, 2, 0, 5, 3, 2, 1, 1, 28, 29, 3, 0, 2, 0, 0, 1, 1, 1]' : 0.148791}
{'[2, 2, 0, 5, 3, 2, 1, 1, 28, 29, 3, 0, 2, 0, 0, 1, 1, 1]' : 0.149243}
{'[2, 2, 0, 5, 3, 2, 1, 1, 28, 29, 3, 0, 2, 0, 0, 1, 1, 1]' : 0.151765}
{'[2, 2, 0, 5, 3, 2, 1, 1, 28, 29, 3, 0, 2, 0, 0, 1, 1, 1]' : 0.150976}
{'[2, 2, 0, 5, 3, 2, 1, 1, 28, 29, 3, 0, 2, 0, 0, 1, 1, 1]' : 0.149596}
{'[2, 2, 0, 5, 3, 2, 1, 1, 28, 29, 3, 0, 2, 0, 0, 1, 1, 1]' : 0.150879}
{'[2, 2, 0, 5, 3, 2, 1, 1, 28, 29, 3, 0, 2, 0, 0, 1, 1, 1]' : 0.150957}
{'[2, 2, 0, 5, 3, 2, 1, 1, 28, 29, 3, 0, 2, 0, 0, 1, 1, 1]' : 0.150559}
{'[2, 2, 0, 5, 3, 2, 1, 1, 28, 29, 3, 0, 2, 0, 0, 1, 1, 1]' : 0.15}
{'[2, 2, 0, 5, 3, 2, 1, 1, 28, 29, 3, 0, 2, 0, 0, 1, 1, 1]' : 0.150228}
{'[2, 2, 0, 5, 3, 2, 1, 1, 28, 29, 3, 0, 2, 0, 0, 1, 1, 1]' : 0.148779}

out:
 ["{'[2, 2, 0, 5, 3, 2, 1, 1, 28, 29, 3, 0, 2, 0, 0, 1, 1, 1]' : 0.1632}", "{'[2, 2, 0, 5, 3, 2, 1, 1, 28, 29, 3, 0, 2, 0, 0, 1, 1, 1]' : 0.163831}", "{'[2, 2, 0, 5, 3, 2, 1, 1, 28, 29, 3, 0, 2, 0, 0, 1, 1, 1]' : 0.163357}", "{'[2, 2, 0, 5, 3, 2, 1, 1, 28, 29, 3, 0, 2, 0, 0, 1, 1, 1]' : 0.15329}", "{'[2, 2, 0, 5, 3, 2, 1, 1, 28, 29, 3, 0, 2, 0, 0, 1, 1, 1]' : 0.150757}", "{'[2, 2, 0, 5, 3, 2, 1, 1, 28, 29, 3, 0, 2, 0, 0, 1, 1, 1]' : 0.149441}", "{'[2, 2, 0, 5, 3, 2, 1, 1, 28, 29, 3, 0, 2, 0, 0, 1, 1, 1]' : 0.14876}", "{'[2, 2, 0, 5, 3, 2, 1, 1, 28, 29, 3, 0, 2, 0, 0, 1, 1, 1]' : 0.149671}", "{'[2, 2, 0, 5, 3, 2, 1, 1, 28, 29, 3, 0, 2, 0, 0, 1, 1, 1]' : 0.149693}", "{'[2, 2, 0, 5, 3, 2, 1, 1, 28, 29, 3, 0, 2, 0, 0, 1, 1, 1]' : 0.149332}", "{'[2, 2, 0, 5, 3, 2, 1, 1, 28, 29, 3, 0, 2, 0, 0, 1, 1, 1]' : 0.148619}", "{'[2, 2, 0, 5, 3, 2, 1, 1, 28, 29, 3, 0, 2, 0, 0, 1, 1, 1]' : 0.151834}", "{'[2, 2, 0, 5, 3, 2, 1, 1, 28, 29, 3, 0, 2, 0, 0, 1, 1, 1]' : 0.150778}", "{'[2, 2, 0, 5, 3, 2, 1, 1, 28, 29, 3, 0, 2, 0, 0, 1, 1, 1]' : 0.151584}", "{'[2, 2, 0, 5, 3, 2, 1, 1, 28, 29, 3, 0, 2, 0, 0, 1, 1, 1]' : 0.152028}", "{'[2, 2, 0, 5, 3, 2, 1, 1, 28, 29, 3, 0, 2, 0, 0, 1, 1, 1]' : 0.149463}", "{'[2, 2, 0, 5, 3, 2, 1, 1, 28, 29, 3, 0, 2, 0, 0, 1, 1, 1]' : 0.150008}", "{'[2, 2, 0, 5, 3, 2, 1, 1, 28, 29, 3, 0, 2, 0, 0, 1, 1, 1]' : 0.150404}", "{'[2, 2, 0, 5, 3, 2, 1, 1, 28, 29, 3, 0, 2, 0, 0, 1, 1, 1]' : 0.151598}", "{'[2, 2, 0, 5, 3, 2, 1, 1, 28, 29, 3, 0, 2, 0, 0, 1, 1, 1]' : 0.148791}", "{'[2, 2, 0, 5, 3, 2, 1, 1, 28, 29, 3, 0, 2, 0, 0, 1, 1, 1]' : 0.149243}", "{'[2, 2, 0, 5, 3, 2, 1, 1, 28, 29, 3, 0, 2, 0, 0, 1, 1, 1]' : 0.151765}", "{'[2, 2, 0, 5, 3, 2, 1, 1, 28, 29, 3, 0, 2, 0, 0, 1, 1, 1]' : 0.150976}", "{'[2, 2, 0, 5, 3, 2, 1, 1, 28, 29, 3, 0, 2, 0, 0, 1, 1, 1]' : 0.149596}", "{'[2, 2, 0, 5, 3, 2, 1, 1, 28, 29, 3, 0, 2, 0, 0, 1, 1, 1]' : 0.150879}", "{'[2, 2, 0, 5, 3, 2, 1, 1, 28, 29, 3, 0, 2, 0, 0, 1, 1, 1]' : 0.150957}", "{'[2, 2, 0, 5, 3, 2, 1, 1, 28, 29, 3, 0, 2, 0, 0, 1, 1, 1]' : 0.150559}", "{'[2, 2, 0, 5, 3, 2, 1, 1, 28, 29, 3, 0, 2, 0, 0, 1, 1, 1]' : 0.15}", "{'[2, 2, 0, 5, 3, 2, 1, 1, 28, 29, 3, 0, 2, 0, 0, 1, 1, 1]' : 0.150228}", "{'[2, 2, 0, 5, 3, 2, 1, 1, 28, 29, 3, 0, 2, 0, 0, 1, 1, 1]' : 0.148779}"]
returning from 'run': {'[2, 2, 0, 5, 3, 2, 1, 1, 28, 29, 3, 0, 2, 0, 0, 1, 1, 1]': ([0.1632, 0.163831, 0.163357, 0.15329, 0.150757, 0.149441, 0.14876, 0.149671, 0.149693, 0.149332, 0.148619, 0.151834, 0.150778, 0.151584, 0.152028, 0.149463, 0.150008, 0.150404, 0.151598, 0.148791, 0.149243, 0.151765, 0.150976, 0.149596, 0.150879, 0.150957, 0.150559, 0.15, 0.150228, 0.148779], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 2, 0, 5, 3, 2, 1, 1, 28, 29, 3, 0, 2, 0, 0, 1, 1, 1]': ([0.1632, 0.163831, 0.163357, 0.15329, 0.150757, 0.149441, 0.14876, 0.149671, 0.149693, 0.149332, 0.148619, 0.151834, 0.150778, 0.151584, 0.152028, 0.149463, 0.150008, 0.150404, 0.151598, 0.148791, 0.149243, 0.151765, 0.150976, 0.149596, 0.150879, 0.150957, 0.150559, 0.15, 0.150228, 0.148779], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	6
        Additions: 		293
        Multiplications: 	80
        Divisions: 		0
        Logical: 		0
        Reads: 			597
        Writes: 		125
        Comparisons:		15
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest70.exe __orio_perftest70.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest70.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest70.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest70.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest70.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = jjj
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		280
        Multiplications: 	78
        Divisions: 		0
        Logical: 		0
        Reads: 			569
        Writes: 		119
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest71.exe __orio_perftest71.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest71.exe  
Program Test Output: 
{'[6, 5, 0, 4, 3, 1, 1, 1, 28, 0, 29, 10, 0, 0, 1, 1, 0, 1]' : 0.253671}
{'[6, 5, 0, 4, 3, 1, 1, 1, 28, 0, 29, 10, 0, 0, 1, 1, 0, 1]' : 0.248503}
{'[6, 5, 0, 4, 3, 1, 1, 1, 28, 0, 29, 10, 0, 0, 1, 1, 0, 1]' : 0.215465}
{'[6, 5, 0, 4, 3, 1, 1, 1, 28, 0, 29, 10, 0, 0, 1, 1, 0, 1]' : 0.220058}
{'[6, 5, 0, 4, 3, 1, 1, 1, 28, 0, 29, 10, 0, 0, 1, 1, 0, 1]' : 0.220394}
{'[6, 5, 0, 4, 3, 1, 1, 1, 28, 0, 29, 10, 0, 0, 1, 1, 0, 1]' : 0.219808}
{'[6, 5, 0, 4, 3, 1, 1, 1, 28, 0, 29, 10, 0, 0, 1, 1, 0, 1]' : 0.219771}
{'[6, 5, 0, 4, 3, 1, 1, 1, 28, 0, 29, 10, 0, 0, 1, 1, 0, 1]' : 0.220278}
{'[6, 5, 0, 4, 3, 1, 1, 1, 28, 0, 29, 10, 0, 0, 1, 1, 0, 1]' : 0.21997}
{'[6, 5, 0, 4, 3, 1, 1, 1, 28, 0, 29, 10, 0, 0, 1, 1, 0, 1]' : 0.220325}
{'[6, 5, 0, 4, 3, 1, 1, 1, 28, 0, 29, 10, 0, 0, 1, 1, 0, 1]' : 0.219766}
{'[6, 5, 0, 4, 3, 1, 1, 1, 28, 0, 29, 10, 0, 0, 1, 1, 0, 1]' : 0.221526}
{'[6, 5, 0, 4, 3, 1, 1, 1, 28, 0, 29, 10, 0, 0, 1, 1, 0, 1]' : 0.226073}
{'[6, 5, 0, 4, 3, 1, 1, 1, 28, 0, 29, 10, 0, 0, 1, 1, 0, 1]' : 0.219966}
{'[6, 5, 0, 4, 3, 1, 1, 1, 28, 0, 29, 10, 0, 0, 1, 1, 0, 1]' : 0.220277}
{'[6, 5, 0, 4, 3, 1, 1, 1, 28, 0, 29, 10, 0, 0, 1, 1, 0, 1]' : 0.213827}
{'[6, 5, 0, 4, 3, 1, 1, 1, 28, 0, 29, 10, 0, 0, 1, 1, 0, 1]' : 0.222442}
{'[6, 5, 0, 4, 3, 1, 1, 1, 28, 0, 29, 10, 0, 0, 1, 1, 0, 1]' : 0.222678}
{'[6, 5, 0, 4, 3, 1, 1, 1, 28, 0, 29, 10, 0, 0, 1, 1, 0, 1]' : 0.220779}
{'[6, 5, 0, 4, 3, 1, 1, 1, 28, 0, 29, 10, 0, 0, 1, 1, 0, 1]' : 0.221485}
{'[6, 5, 0, 4, 3, 1, 1, 1, 28, 0, 29, 10, 0, 0, 1, 1, 0, 1]' : 0.221188}
{'[6, 5, 0, 4, 3, 1, 1, 1, 28, 0, 29, 10, 0, 0, 1, 1, 0, 1]' : 0.223054}
{'[6, 5, 0, 4, 3, 1, 1, 1, 28, 0, 29, 10, 0, 0, 1, 1, 0, 1]' : 0.219944}
{'[6, 5, 0, 4, 3, 1, 1, 1, 28, 0, 29, 10, 0, 0, 1, 1, 0, 1]' : 0.224529}
{'[6, 5, 0, 4, 3, 1, 1, 1, 28, 0, 29, 10, 0, 0, 1, 1, 0, 1]' : 0.220235}
{'[6, 5, 0, 4, 3, 1, 1, 1, 28, 0, 29, 10, 0, 0, 1, 1, 0, 1]' : 0.224486}
{'[6, 5, 0, 4, 3, 1, 1, 1, 28, 0, 29, 10, 0, 0, 1, 1, 0, 1]' : 0.223941}
{'[6, 5, 0, 4, 3, 1, 1, 1, 28, 0, 29, 10, 0, 0, 1, 1, 0, 1]' : 0.222943}
{'[6, 5, 0, 4, 3, 1, 1, 1, 28, 0, 29, 10, 0, 0, 1, 1, 0, 1]' : 0.221245}
{'[6, 5, 0, 4, 3, 1, 1, 1, 28, 0, 29, 10, 0, 0, 1, 1, 0, 1]' : 0.221557}

out:
 ["{'[6, 5, 0, 4, 3, 1, 1, 1, 28, 0, 29, 10, 0, 0, 1, 1, 0, 1]' : 0.253671}", "{'[6, 5, 0, 4, 3, 1, 1, 1, 28, 0, 29, 10, 0, 0, 1, 1, 0, 1]' : 0.248503}", "{'[6, 5, 0, 4, 3, 1, 1, 1, 28, 0, 29, 10, 0, 0, 1, 1, 0, 1]' : 0.215465}", "{'[6, 5, 0, 4, 3, 1, 1, 1, 28, 0, 29, 10, 0, 0, 1, 1, 0, 1]' : 0.220058}", "{'[6, 5, 0, 4, 3, 1, 1, 1, 28, 0, 29, 10, 0, 0, 1, 1, 0, 1]' : 0.220394}", "{'[6, 5, 0, 4, 3, 1, 1, 1, 28, 0, 29, 10, 0, 0, 1, 1, 0, 1]' : 0.219808}", "{'[6, 5, 0, 4, 3, 1, 1, 1, 28, 0, 29, 10, 0, 0, 1, 1, 0, 1]' : 0.219771}", "{'[6, 5, 0, 4, 3, 1, 1, 1, 28, 0, 29, 10, 0, 0, 1, 1, 0, 1]' : 0.220278}", "{'[6, 5, 0, 4, 3, 1, 1, 1, 28, 0, 29, 10, 0, 0, 1, 1, 0, 1]' : 0.21997}", "{'[6, 5, 0, 4, 3, 1, 1, 1, 28, 0, 29, 10, 0, 0, 1, 1, 0, 1]' : 0.220325}", "{'[6, 5, 0, 4, 3, 1, 1, 1, 28, 0, 29, 10, 0, 0, 1, 1, 0, 1]' : 0.219766}", "{'[6, 5, 0, 4, 3, 1, 1, 1, 28, 0, 29, 10, 0, 0, 1, 1, 0, 1]' : 0.221526}", "{'[6, 5, 0, 4, 3, 1, 1, 1, 28, 0, 29, 10, 0, 0, 1, 1, 0, 1]' : 0.226073}", "{'[6, 5, 0, 4, 3, 1, 1, 1, 28, 0, 29, 10, 0, 0, 1, 1, 0, 1]' : 0.219966}", "{'[6, 5, 0, 4, 3, 1, 1, 1, 28, 0, 29, 10, 0, 0, 1, 1, 0, 1]' : 0.220277}", "{'[6, 5, 0, 4, 3, 1, 1, 1, 28, 0, 29, 10, 0, 0, 1, 1, 0, 1]' : 0.213827}", "{'[6, 5, 0, 4, 3, 1, 1, 1, 28, 0, 29, 10, 0, 0, 1, 1, 0, 1]' : 0.222442}", "{'[6, 5, 0, 4, 3, 1, 1, 1, 28, 0, 29, 10, 0, 0, 1, 1, 0, 1]' : 0.222678}", "{'[6, 5, 0, 4, 3, 1, 1, 1, 28, 0, 29, 10, 0, 0, 1, 1, 0, 1]' : 0.220779}", "{'[6, 5, 0, 4, 3, 1, 1, 1, 28, 0, 29, 10, 0, 0, 1, 1, 0, 1]' : 0.221485}", "{'[6, 5, 0, 4, 3, 1, 1, 1, 28, 0, 29, 10, 0, 0, 1, 1, 0, 1]' : 0.221188}", "{'[6, 5, 0, 4, 3, 1, 1, 1, 28, 0, 29, 10, 0, 0, 1, 1, 0, 1]' : 0.223054}", "{'[6, 5, 0, 4, 3, 1, 1, 1, 28, 0, 29, 10, 0, 0, 1, 1, 0, 1]' : 0.219944}", "{'[6, 5, 0, 4, 3, 1, 1, 1, 28, 0, 29, 10, 0, 0, 1, 1, 0, 1]' : 0.224529}", "{'[6, 5, 0, 4, 3, 1, 1, 1, 28, 0, 29, 10, 0, 0, 1, 1, 0, 1]' : 0.220235}", "{'[6, 5, 0, 4, 3, 1, 1, 1, 28, 0, 29, 10, 0, 0, 1, 1, 0, 1]' : 0.224486}", "{'[6, 5, 0, 4, 3, 1, 1, 1, 28, 0, 29, 10, 0, 0, 1, 1, 0, 1]' : 0.223941}", "{'[6, 5, 0, 4, 3, 1, 1, 1, 28, 0, 29, 10, 0, 0, 1, 1, 0, 1]' : 0.222943}", "{'[6, 5, 0, 4, 3, 1, 1, 1, 28, 0, 29, 10, 0, 0, 1, 1, 0, 1]' : 0.221245}", "{'[6, 5, 0, 4, 3, 1, 1, 1, 28, 0, 29, 10, 0, 0, 1, 1, 0, 1]' : 0.221557}"]
returning from 'run': {'[6, 5, 0, 4, 3, 1, 1, 1, 28, 0, 29, 10, 0, 0, 1, 1, 0, 1]': ([0.253671, 0.248503, 0.215465, 0.220058, 0.220394, 0.219808, 0.219771, 0.220278, 0.21997, 0.220325, 0.219766, 0.221526, 0.226073, 0.219966, 0.220277, 0.213827, 0.222442, 0.222678, 0.220779, 0.221485, 0.221188, 0.223054, 0.219944, 0.224529, 0.220235, 0.224486, 0.223941, 0.222943, 0.221245, 0.221557], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 5, 0, 4, 3, 1, 1, 1, 28, 0, 29, 10, 0, 0, 1, 1, 0, 1]': ([0.253671, 0.248503, 0.215465, 0.220058, 0.220394, 0.219808, 0.219771, 0.220278, 0.21997, 0.220325, 0.219766, 0.221526, 0.226073, 0.219966, 0.220277, 0.213827, 0.222442, 0.222678, 0.220779, 0.221485, 0.221188, 0.223054, 0.219944, 0.224529, 0.220235, 0.224486, 0.223941, 0.222943, 0.221245, 0.221557], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	81
        Max loop nest depth: 	6
        Additions: 		1217
        Multiplications: 	286
        Divisions: 		0
        Logical: 		0
        Reads: 			2240
        Writes: 		420
        Comparisons:		81
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest72.exe __orio_perftest72.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest72.exe  
Program Test Output: 
{'[2, 2, 6, 4, 3, 6, 1, 1, 28, 11, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.246021}
{'[2, 2, 6, 4, 3, 6, 1, 1, 28, 11, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.211061}
{'[2, 2, 6, 4, 3, 6, 1, 1, 28, 11, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.206269}
{'[2, 2, 6, 4, 3, 6, 1, 1, 28, 11, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.20628}
{'[2, 2, 6, 4, 3, 6, 1, 1, 28, 11, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.206524}
{'[2, 2, 6, 4, 3, 6, 1, 1, 28, 11, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.206338}
{'[2, 2, 6, 4, 3, 6, 1, 1, 28, 11, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.214754}
{'[2, 2, 6, 4, 3, 6, 1, 1, 28, 11, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.206245}
{'[2, 2, 6, 4, 3, 6, 1, 1, 28, 11, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.206428}
{'[2, 2, 6, 4, 3, 6, 1, 1, 28, 11, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.206284}
{'[2, 2, 6, 4, 3, 6, 1, 1, 28, 11, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.206353}
{'[2, 2, 6, 4, 3, 6, 1, 1, 28, 11, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.206701}
{'[2, 2, 6, 4, 3, 6, 1, 1, 28, 11, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.206271}
{'[2, 2, 6, 4, 3, 6, 1, 1, 28, 11, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.214955}
{'[2, 2, 6, 4, 3, 6, 1, 1, 28, 11, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.206359}
{'[2, 2, 6, 4, 3, 6, 1, 1, 28, 11, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.206401}
{'[2, 2, 6, 4, 3, 6, 1, 1, 28, 11, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.206357}
{'[2, 2, 6, 4, 3, 6, 1, 1, 28, 11, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.20638}
{'[2, 2, 6, 4, 3, 6, 1, 1, 28, 11, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.206372}
{'[2, 2, 6, 4, 3, 6, 1, 1, 28, 11, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.206287}
{'[2, 2, 6, 4, 3, 6, 1, 1, 28, 11, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.206268}
{'[2, 2, 6, 4, 3, 6, 1, 1, 28, 11, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.214538}
{'[2, 2, 6, 4, 3, 6, 1, 1, 28, 11, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.206411}
{'[2, 2, 6, 4, 3, 6, 1, 1, 28, 11, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.206617}
{'[2, 2, 6, 4, 3, 6, 1, 1, 28, 11, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.206393}
{'[2, 2, 6, 4, 3, 6, 1, 1, 28, 11, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.20636}
{'[2, 2, 6, 4, 3, 6, 1, 1, 28, 11, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.206395}
{'[2, 2, 6, 4, 3, 6, 1, 1, 28, 11, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.206372}
{'[2, 2, 6, 4, 3, 6, 1, 1, 28, 11, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.214789}
{'[2, 2, 6, 4, 3, 6, 1, 1, 28, 11, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.206599}

out:
 ["{'[2, 2, 6, 4, 3, 6, 1, 1, 28, 11, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.246021}", "{'[2, 2, 6, 4, 3, 6, 1, 1, 28, 11, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.211061}", "{'[2, 2, 6, 4, 3, 6, 1, 1, 28, 11, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.206269}", "{'[2, 2, 6, 4, 3, 6, 1, 1, 28, 11, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.20628}", "{'[2, 2, 6, 4, 3, 6, 1, 1, 28, 11, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.206524}", "{'[2, 2, 6, 4, 3, 6, 1, 1, 28, 11, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.206338}", "{'[2, 2, 6, 4, 3, 6, 1, 1, 28, 11, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.214754}", "{'[2, 2, 6, 4, 3, 6, 1, 1, 28, 11, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.206245}", "{'[2, 2, 6, 4, 3, 6, 1, 1, 28, 11, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.206428}", "{'[2, 2, 6, 4, 3, 6, 1, 1, 28, 11, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.206284}", "{'[2, 2, 6, 4, 3, 6, 1, 1, 28, 11, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.206353}", "{'[2, 2, 6, 4, 3, 6, 1, 1, 28, 11, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.206701}", "{'[2, 2, 6, 4, 3, 6, 1, 1, 28, 11, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.206271}", "{'[2, 2, 6, 4, 3, 6, 1, 1, 28, 11, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.214955}", "{'[2, 2, 6, 4, 3, 6, 1, 1, 28, 11, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.206359}", "{'[2, 2, 6, 4, 3, 6, 1, 1, 28, 11, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.206401}", "{'[2, 2, 6, 4, 3, 6, 1, 1, 28, 11, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.206357}", "{'[2, 2, 6, 4, 3, 6, 1, 1, 28, 11, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.20638}", "{'[2, 2, 6, 4, 3, 6, 1, 1, 28, 11, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.206372}", "{'[2, 2, 6, 4, 3, 6, 1, 1, 28, 11, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.206287}", "{'[2, 2, 6, 4, 3, 6, 1, 1, 28, 11, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.206268}", "{'[2, 2, 6, 4, 3, 6, 1, 1, 28, 11, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.214538}", "{'[2, 2, 6, 4, 3, 6, 1, 1, 28, 11, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.206411}", "{'[2, 2, 6, 4, 3, 6, 1, 1, 28, 11, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.206617}", "{'[2, 2, 6, 4, 3, 6, 1, 1, 28, 11, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.206393}", "{'[2, 2, 6, 4, 3, 6, 1, 1, 28, 11, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.20636}", "{'[2, 2, 6, 4, 3, 6, 1, 1, 28, 11, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.206395}", "{'[2, 2, 6, 4, 3, 6, 1, 1, 28, 11, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.206372}", "{'[2, 2, 6, 4, 3, 6, 1, 1, 28, 11, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.214789}", "{'[2, 2, 6, 4, 3, 6, 1, 1, 28, 11, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.206599}"]
returning from 'run': {'[2, 2, 6, 4, 3, 6, 1, 1, 28, 11, 8, 0, 0, 0, 0, 1, 1, 0]': ([0.246021, 0.211061, 0.206269, 0.20628, 0.206524, 0.206338, 0.214754, 0.206245, 0.206428, 0.206284, 0.206353, 0.206701, 0.206271, 0.214955, 0.206359, 0.206401, 0.206357, 0.20638, 0.206372, 0.206287, 0.206268, 0.214538, 0.206411, 0.206617, 0.206393, 0.20636, 0.206395, 0.206372, 0.214789, 0.206599], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 2, 6, 4, 3, 6, 1, 1, 28, 11, 8, 0, 0, 0, 0, 1, 1, 0]': ([0.246021, 0.211061, 0.206269, 0.20628, 0.206524, 0.206338, 0.214754, 0.206245, 0.206428, 0.206284, 0.206353, 0.206701, 0.206271, 0.214955, 0.206359, 0.206401, 0.206357, 0.20638, 0.206372, 0.206287, 0.206268, 0.214538, 0.206411, 0.206617, 0.206393, 0.20636, 0.206395, 0.206372, 0.214789, 0.206599], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	31
        Max loop nest depth: 	6
        Additions: 		864
        Multiplications: 	330
        Divisions: 		0
        Logical: 		0
        Reads: 			1742
        Writes: 		323
        Comparisons:		31
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest73.exe __orio_perftest73.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest73.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest73.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest73.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest73.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	41
        Max loop nest depth: 	5
        Additions: 		5125
        Multiplications: 	2232
        Divisions: 		0
        Logical: 		0
        Reads: 			9651
        Writes: 		1620
        Comparisons:		41
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest74.exe __orio_perftest74.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest74.exe  
Program Test Output: 
{'[0, 4, 6, 5, 3, 5, 0, 1, 28, 2, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.178112}
{'[0, 4, 6, 5, 3, 5, 0, 1, 28, 2, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.178387}
{'[0, 4, 6, 5, 3, 5, 0, 1, 28, 2, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.179399}
{'[0, 4, 6, 5, 3, 5, 0, 1, 28, 2, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.177687}
{'[0, 4, 6, 5, 3, 5, 0, 1, 28, 2, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.17808}
{'[0, 4, 6, 5, 3, 5, 0, 1, 28, 2, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.177189}
{'[0, 4, 6, 5, 3, 5, 0, 1, 28, 2, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.174216}
{'[0, 4, 6, 5, 3, 5, 0, 1, 28, 2, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.175905}
{'[0, 4, 6, 5, 3, 5, 0, 1, 28, 2, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.17723}
{'[0, 4, 6, 5, 3, 5, 0, 1, 28, 2, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.177764}
{'[0, 4, 6, 5, 3, 5, 0, 1, 28, 2, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.177669}
{'[0, 4, 6, 5, 3, 5, 0, 1, 28, 2, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.176582}
{'[0, 4, 6, 5, 3, 5, 0, 1, 28, 2, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.174128}
{'[0, 4, 6, 5, 3, 5, 0, 1, 28, 2, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.177216}
{'[0, 4, 6, 5, 3, 5, 0, 1, 28, 2, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.177399}
{'[0, 4, 6, 5, 3, 5, 0, 1, 28, 2, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.175848}
{'[0, 4, 6, 5, 3, 5, 0, 1, 28, 2, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.181127}
{'[0, 4, 6, 5, 3, 5, 0, 1, 28, 2, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.177655}
{'[0, 4, 6, 5, 3, 5, 0, 1, 28, 2, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.17552}
{'[0, 4, 6, 5, 3, 5, 0, 1, 28, 2, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.17753}
{'[0, 4, 6, 5, 3, 5, 0, 1, 28, 2, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.177118}
{'[0, 4, 6, 5, 3, 5, 0, 1, 28, 2, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.179519}
{'[0, 4, 6, 5, 3, 5, 0, 1, 28, 2, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.181214}
{'[0, 4, 6, 5, 3, 5, 0, 1, 28, 2, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.178691}
{'[0, 4, 6, 5, 3, 5, 0, 1, 28, 2, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.178827}
{'[0, 4, 6, 5, 3, 5, 0, 1, 28, 2, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.177556}
{'[0, 4, 6, 5, 3, 5, 0, 1, 28, 2, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.177692}
{'[0, 4, 6, 5, 3, 5, 0, 1, 28, 2, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.178426}
{'[0, 4, 6, 5, 3, 5, 0, 1, 28, 2, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.17697}
{'[0, 4, 6, 5, 3, 5, 0, 1, 28, 2, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.174188}

out:
 ["{'[0, 4, 6, 5, 3, 5, 0, 1, 28, 2, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.178112}", "{'[0, 4, 6, 5, 3, 5, 0, 1, 28, 2, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.178387}", "{'[0, 4, 6, 5, 3, 5, 0, 1, 28, 2, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.179399}", "{'[0, 4, 6, 5, 3, 5, 0, 1, 28, 2, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.177687}", "{'[0, 4, 6, 5, 3, 5, 0, 1, 28, 2, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.17808}", "{'[0, 4, 6, 5, 3, 5, 0, 1, 28, 2, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.177189}", "{'[0, 4, 6, 5, 3, 5, 0, 1, 28, 2, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.174216}", "{'[0, 4, 6, 5, 3, 5, 0, 1, 28, 2, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.175905}", "{'[0, 4, 6, 5, 3, 5, 0, 1, 28, 2, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.17723}", "{'[0, 4, 6, 5, 3, 5, 0, 1, 28, 2, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.177764}", "{'[0, 4, 6, 5, 3, 5, 0, 1, 28, 2, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.177669}", "{'[0, 4, 6, 5, 3, 5, 0, 1, 28, 2, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.176582}", "{'[0, 4, 6, 5, 3, 5, 0, 1, 28, 2, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.174128}", "{'[0, 4, 6, 5, 3, 5, 0, 1, 28, 2, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.177216}", "{'[0, 4, 6, 5, 3, 5, 0, 1, 28, 2, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.177399}", "{'[0, 4, 6, 5, 3, 5, 0, 1, 28, 2, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.175848}", "{'[0, 4, 6, 5, 3, 5, 0, 1, 28, 2, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.181127}", "{'[0, 4, 6, 5, 3, 5, 0, 1, 28, 2, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.177655}", "{'[0, 4, 6, 5, 3, 5, 0, 1, 28, 2, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.17552}", "{'[0, 4, 6, 5, 3, 5, 0, 1, 28, 2, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.17753}", "{'[0, 4, 6, 5, 3, 5, 0, 1, 28, 2, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.177118}", "{'[0, 4, 6, 5, 3, 5, 0, 1, 28, 2, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.179519}", "{'[0, 4, 6, 5, 3, 5, 0, 1, 28, 2, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.181214}", "{'[0, 4, 6, 5, 3, 5, 0, 1, 28, 2, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.178691}", "{'[0, 4, 6, 5, 3, 5, 0, 1, 28, 2, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.178827}", "{'[0, 4, 6, 5, 3, 5, 0, 1, 28, 2, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.177556}", "{'[0, 4, 6, 5, 3, 5, 0, 1, 28, 2, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.177692}", "{'[0, 4, 6, 5, 3, 5, 0, 1, 28, 2, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.178426}", "{'[0, 4, 6, 5, 3, 5, 0, 1, 28, 2, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.17697}", "{'[0, 4, 6, 5, 3, 5, 0, 1, 28, 2, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.174188}"]
returning from 'run': {'[0, 4, 6, 5, 3, 5, 0, 1, 28, 2, 0, 28, 2, 0, 0, 1, 1, 0]': ([0.178112, 0.178387, 0.179399, 0.177687, 0.17808, 0.177189, 0.174216, 0.175905, 0.17723, 0.177764, 0.177669, 0.176582, 0.174128, 0.177216, 0.177399, 0.175848, 0.181127, 0.177655, 0.17552, 0.17753, 0.177118, 0.179519, 0.181214, 0.178691, 0.178827, 0.177556, 0.177692, 0.178426, 0.17697, 0.174188], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 4, 6, 5, 3, 5, 0, 1, 28, 2, 0, 28, 2, 0, 0, 1, 1, 0]': ([0.178112, 0.178387, 0.179399, 0.177687, 0.17808, 0.177189, 0.174216, 0.175905, 0.17723, 0.177764, 0.177669, 0.176582, 0.174128, 0.177216, 0.177399, 0.175848, 0.181127, 0.177655, 0.17552, 0.17753, 0.177118, 0.179519, 0.181214, 0.178691, 0.178827, 0.177556, 0.177692, 0.178426, 0.17697, 0.174188], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	6
        Additions: 		161
        Multiplications: 	32
        Divisions: 		0
        Logical: 		0
        Reads: 			357
        Writes: 		94
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest75.exe __orio_perftest75.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest75.exe  
Program Test Output: 
{'[3, 2, 2, 6, 3, 0, 1, 1, 28, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.265628}
{'[3, 2, 2, 6, 3, 0, 1, 1, 28, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.264949}
{'[3, 2, 2, 6, 3, 0, 1, 1, 28, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.234537}
{'[3, 2, 2, 6, 3, 0, 1, 1, 28, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.228262}
{'[3, 2, 2, 6, 3, 0, 1, 1, 28, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.233264}
{'[3, 2, 2, 6, 3, 0, 1, 1, 28, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.232568}
{'[3, 2, 2, 6, 3, 0, 1, 1, 28, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.232371}
{'[3, 2, 2, 6, 3, 0, 1, 1, 28, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.228452}
{'[3, 2, 2, 6, 3, 0, 1, 1, 28, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.231387}
{'[3, 2, 2, 6, 3, 0, 1, 1, 28, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.230036}
{'[3, 2, 2, 6, 3, 0, 1, 1, 28, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.230215}
{'[3, 2, 2, 6, 3, 0, 1, 1, 28, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.228566}
{'[3, 2, 2, 6, 3, 0, 1, 1, 28, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.228807}
{'[3, 2, 2, 6, 3, 0, 1, 1, 28, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.229973}
{'[3, 2, 2, 6, 3, 0, 1, 1, 28, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.228217}
{'[3, 2, 2, 6, 3, 0, 1, 1, 28, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.227313}
{'[3, 2, 2, 6, 3, 0, 1, 1, 28, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.221735}
{'[3, 2, 2, 6, 3, 0, 1, 1, 28, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.230431}
{'[3, 2, 2, 6, 3, 0, 1, 1, 28, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.233099}
{'[3, 2, 2, 6, 3, 0, 1, 1, 28, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.228471}
{'[3, 2, 2, 6, 3, 0, 1, 1, 28, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.22272}
{'[3, 2, 2, 6, 3, 0, 1, 1, 28, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.223852}
{'[3, 2, 2, 6, 3, 0, 1, 1, 28, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.228569}
{'[3, 2, 2, 6, 3, 0, 1, 1, 28, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.228615}
{'[3, 2, 2, 6, 3, 0, 1, 1, 28, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.228291}
{'[3, 2, 2, 6, 3, 0, 1, 1, 28, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.228734}
{'[3, 2, 2, 6, 3, 0, 1, 1, 28, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.228719}
{'[3, 2, 2, 6, 3, 0, 1, 1, 28, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.228137}
{'[3, 2, 2, 6, 3, 0, 1, 1, 28, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.228181}
{'[3, 2, 2, 6, 3, 0, 1, 1, 28, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.221679}

out:
 ["{'[3, 2, 2, 6, 3, 0, 1, 1, 28, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.265628}", "{'[3, 2, 2, 6, 3, 0, 1, 1, 28, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.264949}", "{'[3, 2, 2, 6, 3, 0, 1, 1, 28, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.234537}", "{'[3, 2, 2, 6, 3, 0, 1, 1, 28, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.228262}", "{'[3, 2, 2, 6, 3, 0, 1, 1, 28, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.233264}", "{'[3, 2, 2, 6, 3, 0, 1, 1, 28, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.232568}", "{'[3, 2, 2, 6, 3, 0, 1, 1, 28, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.232371}", "{'[3, 2, 2, 6, 3, 0, 1, 1, 28, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.228452}", "{'[3, 2, 2, 6, 3, 0, 1, 1, 28, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.231387}", "{'[3, 2, 2, 6, 3, 0, 1, 1, 28, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.230036}", "{'[3, 2, 2, 6, 3, 0, 1, 1, 28, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.230215}", "{'[3, 2, 2, 6, 3, 0, 1, 1, 28, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.228566}", "{'[3, 2, 2, 6, 3, 0, 1, 1, 28, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.228807}", "{'[3, 2, 2, 6, 3, 0, 1, 1, 28, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.229973}", "{'[3, 2, 2, 6, 3, 0, 1, 1, 28, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.228217}", "{'[3, 2, 2, 6, 3, 0, 1, 1, 28, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.227313}", "{'[3, 2, 2, 6, 3, 0, 1, 1, 28, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.221735}", "{'[3, 2, 2, 6, 3, 0, 1, 1, 28, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.230431}", "{'[3, 2, 2, 6, 3, 0, 1, 1, 28, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.233099}", "{'[3, 2, 2, 6, 3, 0, 1, 1, 28, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.228471}", "{'[3, 2, 2, 6, 3, 0, 1, 1, 28, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.22272}", "{'[3, 2, 2, 6, 3, 0, 1, 1, 28, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.223852}", "{'[3, 2, 2, 6, 3, 0, 1, 1, 28, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.228569}", "{'[3, 2, 2, 6, 3, 0, 1, 1, 28, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.228615}", "{'[3, 2, 2, 6, 3, 0, 1, 1, 28, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.228291}", "{'[3, 2, 2, 6, 3, 0, 1, 1, 28, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.228734}", "{'[3, 2, 2, 6, 3, 0, 1, 1, 28, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.228719}", "{'[3, 2, 2, 6, 3, 0, 1, 1, 28, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.228137}", "{'[3, 2, 2, 6, 3, 0, 1, 1, 28, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.228181}", "{'[3, 2, 2, 6, 3, 0, 1, 1, 28, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.221679}"]
returning from 'run': {'[3, 2, 2, 6, 3, 0, 1, 1, 28, 0, 29, 29, 0, 1, 1, 1, 0, 0]': ([0.265628, 0.264949, 0.234537, 0.228262, 0.233264, 0.232568, 0.232371, 0.228452, 0.231387, 0.230036, 0.230215, 0.228566, 0.228807, 0.229973, 0.228217, 0.227313, 0.221735, 0.230431, 0.233099, 0.228471, 0.22272, 0.223852, 0.228569, 0.228615, 0.228291, 0.228734, 0.228719, 0.228137, 0.228181, 0.221679], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 2, 2, 6, 3, 0, 1, 1, 28, 0, 29, 29, 0, 1, 1, 1, 0, 0]': ([0.265628, 0.264949, 0.234537, 0.228262, 0.233264, 0.232568, 0.232371, 0.228452, 0.231387, 0.230036, 0.230215, 0.228566, 0.228807, 0.229973, 0.228217, 0.227313, 0.221735, 0.230431, 0.233099, 0.228471, 0.22272, 0.223852, 0.228569, 0.228615, 0.228291, 0.228734, 0.228719, 0.228137, 0.228181, 0.221679], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = jjj
Code stats:
        Number of loops: 	36
        Max loop nest depth: 	5
        Additions: 		1007
        Multiplications: 	390
        Divisions: 		0
        Logical: 		0
        Reads: 			2092
        Writes: 		418
        Comparisons:		36
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest76.exe __orio_perftest76.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest76.exe  
Program Test Output: 
{'[3, 5, 1, 0, 3, 1, 0, 1, 28, 3, 5, 0, 1, 0, 1, 1, 1, 1]' : 0.119917}
{'[3, 5, 1, 0, 3, 1, 0, 1, 28, 3, 5, 0, 1, 0, 1, 1, 1, 1]' : 0.11981}
{'[3, 5, 1, 0, 3, 1, 0, 1, 28, 3, 5, 0, 1, 0, 1, 1, 1, 1]' : 0.119173}
{'[3, 5, 1, 0, 3, 1, 0, 1, 28, 3, 5, 0, 1, 0, 1, 1, 1, 1]' : 0.107372}
{'[3, 5, 1, 0, 3, 1, 0, 1, 28, 3, 5, 0, 1, 0, 1, 1, 1, 1]' : 0.105185}
{'[3, 5, 1, 0, 3, 1, 0, 1, 28, 3, 5, 0, 1, 0, 1, 1, 1, 1]' : 0.105203}
{'[3, 5, 1, 0, 3, 1, 0, 1, 28, 3, 5, 0, 1, 0, 1, 1, 1, 1]' : 0.105248}
{'[3, 5, 1, 0, 3, 1, 0, 1, 28, 3, 5, 0, 1, 0, 1, 1, 1, 1]' : 0.105128}
{'[3, 5, 1, 0, 3, 1, 0, 1, 28, 3, 5, 0, 1, 0, 1, 1, 1, 1]' : 0.105205}
{'[3, 5, 1, 0, 3, 1, 0, 1, 28, 3, 5, 0, 1, 0, 1, 1, 1, 1]' : 0.1053}
{'[3, 5, 1, 0, 3, 1, 0, 1, 28, 3, 5, 0, 1, 0, 1, 1, 1, 1]' : 0.105237}
{'[3, 5, 1, 0, 3, 1, 0, 1, 28, 3, 5, 0, 1, 0, 1, 1, 1, 1]' : 0.105229}
{'[3, 5, 1, 0, 3, 1, 0, 1, 28, 3, 5, 0, 1, 0, 1, 1, 1, 1]' : 0.105317}
{'[3, 5, 1, 0, 3, 1, 0, 1, 28, 3, 5, 0, 1, 0, 1, 1, 1, 1]' : 0.105557}
{'[3, 5, 1, 0, 3, 1, 0, 1, 28, 3, 5, 0, 1, 0, 1, 1, 1, 1]' : 0.106269}
{'[3, 5, 1, 0, 3, 1, 0, 1, 28, 3, 5, 0, 1, 0, 1, 1, 1, 1]' : 0.105604}
{'[3, 5, 1, 0, 3, 1, 0, 1, 28, 3, 5, 0, 1, 0, 1, 1, 1, 1]' : 0.105409}
{'[3, 5, 1, 0, 3, 1, 0, 1, 28, 3, 5, 0, 1, 0, 1, 1, 1, 1]' : 0.105535}
{'[3, 5, 1, 0, 3, 1, 0, 1, 28, 3, 5, 0, 1, 0, 1, 1, 1, 1]' : 0.105534}
{'[3, 5, 1, 0, 3, 1, 0, 1, 28, 3, 5, 0, 1, 0, 1, 1, 1, 1]' : 0.105492}
{'[3, 5, 1, 0, 3, 1, 0, 1, 28, 3, 5, 0, 1, 0, 1, 1, 1, 1]' : 0.105532}
{'[3, 5, 1, 0, 3, 1, 0, 1, 28, 3, 5, 0, 1, 0, 1, 1, 1, 1]' : 0.105452}
{'[3, 5, 1, 0, 3, 1, 0, 1, 28, 3, 5, 0, 1, 0, 1, 1, 1, 1]' : 0.105174}
{'[3, 5, 1, 0, 3, 1, 0, 1, 28, 3, 5, 0, 1, 0, 1, 1, 1, 1]' : 0.10522}
{'[3, 5, 1, 0, 3, 1, 0, 1, 28, 3, 5, 0, 1, 0, 1, 1, 1, 1]' : 0.105701}
{'[3, 5, 1, 0, 3, 1, 0, 1, 28, 3, 5, 0, 1, 0, 1, 1, 1, 1]' : 0.105645}
{'[3, 5, 1, 0, 3, 1, 0, 1, 28, 3, 5, 0, 1, 0, 1, 1, 1, 1]' : 0.105464}
{'[3, 5, 1, 0, 3, 1, 0, 1, 28, 3, 5, 0, 1, 0, 1, 1, 1, 1]' : 0.105533}
{'[3, 5, 1, 0, 3, 1, 0, 1, 28, 3, 5, 0, 1, 0, 1, 1, 1, 1]' : 0.10605}
{'[3, 5, 1, 0, 3, 1, 0, 1, 28, 3, 5, 0, 1, 0, 1, 1, 1, 1]' : 0.105633}

out:
 ["{'[3, 5, 1, 0, 3, 1, 0, 1, 28, 3, 5, 0, 1, 0, 1, 1, 1, 1]' : 0.119917}", "{'[3, 5, 1, 0, 3, 1, 0, 1, 28, 3, 5, 0, 1, 0, 1, 1, 1, 1]' : 0.11981}", "{'[3, 5, 1, 0, 3, 1, 0, 1, 28, 3, 5, 0, 1, 0, 1, 1, 1, 1]' : 0.119173}", "{'[3, 5, 1, 0, 3, 1, 0, 1, 28, 3, 5, 0, 1, 0, 1, 1, 1, 1]' : 0.107372}", "{'[3, 5, 1, 0, 3, 1, 0, 1, 28, 3, 5, 0, 1, 0, 1, 1, 1, 1]' : 0.105185}", "{'[3, 5, 1, 0, 3, 1, 0, 1, 28, 3, 5, 0, 1, 0, 1, 1, 1, 1]' : 0.105203}", "{'[3, 5, 1, 0, 3, 1, 0, 1, 28, 3, 5, 0, 1, 0, 1, 1, 1, 1]' : 0.105248}", "{'[3, 5, 1, 0, 3, 1, 0, 1, 28, 3, 5, 0, 1, 0, 1, 1, 1, 1]' : 0.105128}", "{'[3, 5, 1, 0, 3, 1, 0, 1, 28, 3, 5, 0, 1, 0, 1, 1, 1, 1]' : 0.105205}", "{'[3, 5, 1, 0, 3, 1, 0, 1, 28, 3, 5, 0, 1, 0, 1, 1, 1, 1]' : 0.1053}", "{'[3, 5, 1, 0, 3, 1, 0, 1, 28, 3, 5, 0, 1, 0, 1, 1, 1, 1]' : 0.105237}", "{'[3, 5, 1, 0, 3, 1, 0, 1, 28, 3, 5, 0, 1, 0, 1, 1, 1, 1]' : 0.105229}", "{'[3, 5, 1, 0, 3, 1, 0, 1, 28, 3, 5, 0, 1, 0, 1, 1, 1, 1]' : 0.105317}", "{'[3, 5, 1, 0, 3, 1, 0, 1, 28, 3, 5, 0, 1, 0, 1, 1, 1, 1]' : 0.105557}", "{'[3, 5, 1, 0, 3, 1, 0, 1, 28, 3, 5, 0, 1, 0, 1, 1, 1, 1]' : 0.106269}", "{'[3, 5, 1, 0, 3, 1, 0, 1, 28, 3, 5, 0, 1, 0, 1, 1, 1, 1]' : 0.105604}", "{'[3, 5, 1, 0, 3, 1, 0, 1, 28, 3, 5, 0, 1, 0, 1, 1, 1, 1]' : 0.105409}", "{'[3, 5, 1, 0, 3, 1, 0, 1, 28, 3, 5, 0, 1, 0, 1, 1, 1, 1]' : 0.105535}", "{'[3, 5, 1, 0, 3, 1, 0, 1, 28, 3, 5, 0, 1, 0, 1, 1, 1, 1]' : 0.105534}", "{'[3, 5, 1, 0, 3, 1, 0, 1, 28, 3, 5, 0, 1, 0, 1, 1, 1, 1]' : 0.105492}", "{'[3, 5, 1, 0, 3, 1, 0, 1, 28, 3, 5, 0, 1, 0, 1, 1, 1, 1]' : 0.105532}", "{'[3, 5, 1, 0, 3, 1, 0, 1, 28, 3, 5, 0, 1, 0, 1, 1, 1, 1]' : 0.105452}", "{'[3, 5, 1, 0, 3, 1, 0, 1, 28, 3, 5, 0, 1, 0, 1, 1, 1, 1]' : 0.105174}", "{'[3, 5, 1, 0, 3, 1, 0, 1, 28, 3, 5, 0, 1, 0, 1, 1, 1, 1]' : 0.10522}", "{'[3, 5, 1, 0, 3, 1, 0, 1, 28, 3, 5, 0, 1, 0, 1, 1, 1, 1]' : 0.105701}", "{'[3, 5, 1, 0, 3, 1, 0, 1, 28, 3, 5, 0, 1, 0, 1, 1, 1, 1]' : 0.105645}", "{'[3, 5, 1, 0, 3, 1, 0, 1, 28, 3, 5, 0, 1, 0, 1, 1, 1, 1]' : 0.105464}", "{'[3, 5, 1, 0, 3, 1, 0, 1, 28, 3, 5, 0, 1, 0, 1, 1, 1, 1]' : 0.105533}", "{'[3, 5, 1, 0, 3, 1, 0, 1, 28, 3, 5, 0, 1, 0, 1, 1, 1, 1]' : 0.10605}", "{'[3, 5, 1, 0, 3, 1, 0, 1, 28, 3, 5, 0, 1, 0, 1, 1, 1, 1]' : 0.105633}"]
returning from 'run': {'[3, 5, 1, 0, 3, 1, 0, 1, 28, 3, 5, 0, 1, 0, 1, 1, 1, 1]': ([0.119917, 0.11981, 0.119173, 0.107372, 0.105185, 0.105203, 0.105248, 0.105128, 0.105205, 0.1053, 0.105237, 0.105229, 0.105317, 0.105557, 0.106269, 0.105604, 0.105409, 0.105535, 0.105534, 0.105492, 0.105532, 0.105452, 0.105174, 0.10522, 0.105701, 0.105645, 0.105464, 0.105533, 0.10605, 0.105633], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 5, 1, 0, 3, 1, 0, 1, 28, 3, 5, 0, 1, 0, 1, 1, 1, 1]': ([0.119917, 0.11981, 0.119173, 0.107372, 0.105185, 0.105203, 0.105248, 0.105128, 0.105205, 0.1053, 0.105237, 0.105229, 0.105317, 0.105557, 0.106269, 0.105604, 0.105409, 0.105535, 0.105534, 0.105492, 0.105532, 0.105452, 0.105174, 0.10522, 0.105701, 0.105645, 0.105464, 0.105533, 0.10605, 0.105633], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	150
        Max loop nest depth: 	6
        Additions: 		7491
        Multiplications: 	2964
        Divisions: 		0
        Logical: 		0
        Reads: 			13258
        Writes: 		2040
        Comparisons:		150
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest77.exe __orio_perftest77.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest77.exe  
Program Test Output: 
{'[6, 1, 0, 6, 3, 2, 0, 1, 28, 29, 27, 0, 1, 1, 0, 1, 1, 0]' : 0.134593}
{'[6, 1, 0, 6, 3, 2, 0, 1, 28, 29, 27, 0, 1, 1, 0, 1, 1, 0]' : 0.130166}
{'[6, 1, 0, 6, 3, 2, 0, 1, 28, 29, 27, 0, 1, 1, 0, 1, 1, 0]' : 0.130194}
{'[6, 1, 0, 6, 3, 2, 0, 1, 28, 29, 27, 0, 1, 1, 0, 1, 1, 0]' : 0.130261}
{'[6, 1, 0, 6, 3, 2, 0, 1, 28, 29, 27, 0, 1, 1, 0, 1, 1, 0]' : 0.125857}
{'[6, 1, 0, 6, 3, 2, 0, 1, 28, 29, 27, 0, 1, 1, 0, 1, 1, 0]' : 0.113243}
{'[6, 1, 0, 6, 3, 2, 0, 1, 28, 29, 27, 0, 1, 1, 0, 1, 1, 0]' : 0.113137}
{'[6, 1, 0, 6, 3, 2, 0, 1, 28, 29, 27, 0, 1, 1, 0, 1, 1, 0]' : 0.113484}
{'[6, 1, 0, 6, 3, 2, 0, 1, 28, 29, 27, 0, 1, 1, 0, 1, 1, 0]' : 0.116532}
{'[6, 1, 0, 6, 3, 2, 0, 1, 28, 29, 27, 0, 1, 1, 0, 1, 1, 0]' : 0.114325}
{'[6, 1, 0, 6, 3, 2, 0, 1, 28, 29, 27, 0, 1, 1, 0, 1, 1, 0]' : 0.113517}
{'[6, 1, 0, 6, 3, 2, 0, 1, 28, 29, 27, 0, 1, 1, 0, 1, 1, 0]' : 0.113167}
{'[6, 1, 0, 6, 3, 2, 0, 1, 28, 29, 27, 0, 1, 1, 0, 1, 1, 0]' : 0.113291}
{'[6, 1, 0, 6, 3, 2, 0, 1, 28, 29, 27, 0, 1, 1, 0, 1, 1, 0]' : 0.112445}
{'[6, 1, 0, 6, 3, 2, 0, 1, 28, 29, 27, 0, 1, 1, 0, 1, 1, 0]' : 0.109743}
{'[6, 1, 0, 6, 3, 2, 0, 1, 28, 29, 27, 0, 1, 1, 0, 1, 1, 0]' : 0.109732}
{'[6, 1, 0, 6, 3, 2, 0, 1, 28, 29, 27, 0, 1, 1, 0, 1, 1, 0]' : 0.109942}
{'[6, 1, 0, 6, 3, 2, 0, 1, 28, 29, 27, 0, 1, 1, 0, 1, 1, 0]' : 0.11338}
{'[6, 1, 0, 6, 3, 2, 0, 1, 28, 29, 27, 0, 1, 1, 0, 1, 1, 0]' : 0.110401}
{'[6, 1, 0, 6, 3, 2, 0, 1, 28, 29, 27, 0, 1, 1, 0, 1, 1, 0]' : 0.111378}
{'[6, 1, 0, 6, 3, 2, 0, 1, 28, 29, 27, 0, 1, 1, 0, 1, 1, 0]' : 0.11337}
{'[6, 1, 0, 6, 3, 2, 0, 1, 28, 29, 27, 0, 1, 1, 0, 1, 1, 0]' : 0.113289}
{'[6, 1, 0, 6, 3, 2, 0, 1, 28, 29, 27, 0, 1, 1, 0, 1, 1, 0]' : 0.113099}
{'[6, 1, 0, 6, 3, 2, 0, 1, 28, 29, 27, 0, 1, 1, 0, 1, 1, 0]' : 0.113076}
{'[6, 1, 0, 6, 3, 2, 0, 1, 28, 29, 27, 0, 1, 1, 0, 1, 1, 0]' : 0.113192}
{'[6, 1, 0, 6, 3, 2, 0, 1, 28, 29, 27, 0, 1, 1, 0, 1, 1, 0]' : 0.113345}
{'[6, 1, 0, 6, 3, 2, 0, 1, 28, 29, 27, 0, 1, 1, 0, 1, 1, 0]' : 0.117465}
{'[6, 1, 0, 6, 3, 2, 0, 1, 28, 29, 27, 0, 1, 1, 0, 1, 1, 0]' : 0.113117}
{'[6, 1, 0, 6, 3, 2, 0, 1, 28, 29, 27, 0, 1, 1, 0, 1, 1, 0]' : 0.112827}
{'[6, 1, 0, 6, 3, 2, 0, 1, 28, 29, 27, 0, 1, 1, 0, 1, 1, 0]' : 0.110095}

out:
 ["{'[6, 1, 0, 6, 3, 2, 0, 1, 28, 29, 27, 0, 1, 1, 0, 1, 1, 0]' : 0.134593}", "{'[6, 1, 0, 6, 3, 2, 0, 1, 28, 29, 27, 0, 1, 1, 0, 1, 1, 0]' : 0.130166}", "{'[6, 1, 0, 6, 3, 2, 0, 1, 28, 29, 27, 0, 1, 1, 0, 1, 1, 0]' : 0.130194}", "{'[6, 1, 0, 6, 3, 2, 0, 1, 28, 29, 27, 0, 1, 1, 0, 1, 1, 0]' : 0.130261}", "{'[6, 1, 0, 6, 3, 2, 0, 1, 28, 29, 27, 0, 1, 1, 0, 1, 1, 0]' : 0.125857}", "{'[6, 1, 0, 6, 3, 2, 0, 1, 28, 29, 27, 0, 1, 1, 0, 1, 1, 0]' : 0.113243}", "{'[6, 1, 0, 6, 3, 2, 0, 1, 28, 29, 27, 0, 1, 1, 0, 1, 1, 0]' : 0.113137}", "{'[6, 1, 0, 6, 3, 2, 0, 1, 28, 29, 27, 0, 1, 1, 0, 1, 1, 0]' : 0.113484}", "{'[6, 1, 0, 6, 3, 2, 0, 1, 28, 29, 27, 0, 1, 1, 0, 1, 1, 0]' : 0.116532}", "{'[6, 1, 0, 6, 3, 2, 0, 1, 28, 29, 27, 0, 1, 1, 0, 1, 1, 0]' : 0.114325}", "{'[6, 1, 0, 6, 3, 2, 0, 1, 28, 29, 27, 0, 1, 1, 0, 1, 1, 0]' : 0.113517}", "{'[6, 1, 0, 6, 3, 2, 0, 1, 28, 29, 27, 0, 1, 1, 0, 1, 1, 0]' : 0.113167}", "{'[6, 1, 0, 6, 3, 2, 0, 1, 28, 29, 27, 0, 1, 1, 0, 1, 1, 0]' : 0.113291}", "{'[6, 1, 0, 6, 3, 2, 0, 1, 28, 29, 27, 0, 1, 1, 0, 1, 1, 0]' : 0.112445}", "{'[6, 1, 0, 6, 3, 2, 0, 1, 28, 29, 27, 0, 1, 1, 0, 1, 1, 0]' : 0.109743}", "{'[6, 1, 0, 6, 3, 2, 0, 1, 28, 29, 27, 0, 1, 1, 0, 1, 1, 0]' : 0.109732}", "{'[6, 1, 0, 6, 3, 2, 0, 1, 28, 29, 27, 0, 1, 1, 0, 1, 1, 0]' : 0.109942}", "{'[6, 1, 0, 6, 3, 2, 0, 1, 28, 29, 27, 0, 1, 1, 0, 1, 1, 0]' : 0.11338}", "{'[6, 1, 0, 6, 3, 2, 0, 1, 28, 29, 27, 0, 1, 1, 0, 1, 1, 0]' : 0.110401}", "{'[6, 1, 0, 6, 3, 2, 0, 1, 28, 29, 27, 0, 1, 1, 0, 1, 1, 0]' : 0.111378}", "{'[6, 1, 0, 6, 3, 2, 0, 1, 28, 29, 27, 0, 1, 1, 0, 1, 1, 0]' : 0.11337}", "{'[6, 1, 0, 6, 3, 2, 0, 1, 28, 29, 27, 0, 1, 1, 0, 1, 1, 0]' : 0.113289}", "{'[6, 1, 0, 6, 3, 2, 0, 1, 28, 29, 27, 0, 1, 1, 0, 1, 1, 0]' : 0.113099}", "{'[6, 1, 0, 6, 3, 2, 0, 1, 28, 29, 27, 0, 1, 1, 0, 1, 1, 0]' : 0.113076}", "{'[6, 1, 0, 6, 3, 2, 0, 1, 28, 29, 27, 0, 1, 1, 0, 1, 1, 0]' : 0.113192}", "{'[6, 1, 0, 6, 3, 2, 0, 1, 28, 29, 27, 0, 1, 1, 0, 1, 1, 0]' : 0.113345}", "{'[6, 1, 0, 6, 3, 2, 0, 1, 28, 29, 27, 0, 1, 1, 0, 1, 1, 0]' : 0.117465}", "{'[6, 1, 0, 6, 3, 2, 0, 1, 28, 29, 27, 0, 1, 1, 0, 1, 1, 0]' : 0.113117}", "{'[6, 1, 0, 6, 3, 2, 0, 1, 28, 29, 27, 0, 1, 1, 0, 1, 1, 0]' : 0.112827}", "{'[6, 1, 0, 6, 3, 2, 0, 1, 28, 29, 27, 0, 1, 1, 0, 1, 1, 0]' : 0.110095}"]
returning from 'run': {'[6, 1, 0, 6, 3, 2, 0, 1, 28, 29, 27, 0, 1, 1, 0, 1, 1, 0]': ([0.134593, 0.130166, 0.130194, 0.130261, 0.125857, 0.113243, 0.113137, 0.113484, 0.116532, 0.114325, 0.113517, 0.113167, 0.113291, 0.112445, 0.109743, 0.109732, 0.109942, 0.11338, 0.110401, 0.111378, 0.11337, 0.113289, 0.113099, 0.113076, 0.113192, 0.113345, 0.117465, 0.113117, 0.112827, 0.110095], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 1, 0, 6, 3, 2, 0, 1, 28, 29, 27, 0, 1, 1, 0, 1, 1, 0]': ([0.134593, 0.130166, 0.130194, 0.130261, 0.125857, 0.113243, 0.113137, 0.113484, 0.116532, 0.114325, 0.113517, 0.113167, 0.113291, 0.112445, 0.109743, 0.109732, 0.109942, 0.11338, 0.110401, 0.111378, 0.11337, 0.113289, 0.113099, 0.113076, 0.113192, 0.113345, 0.117465, 0.113117, 0.112827, 0.110095], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	5
        Additions: 		661
        Multiplications: 	150
        Divisions: 		0
        Logical: 		0
        Reads: 			1410
        Writes: 		324
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest78.exe __orio_perftest78.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest78.exe  
Program Test Output: 
{'[4, 0, 0, 6, 3, 2, 0, 1, 28, 1, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.212082}
{'[4, 0, 0, 6, 3, 2, 0, 1, 28, 1, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.20409}
{'[4, 0, 0, 6, 3, 2, 0, 1, 28, 1, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.178027}
{'[4, 0, 0, 6, 3, 2, 0, 1, 28, 1, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.178082}
{'[4, 0, 0, 6, 3, 2, 0, 1, 28, 1, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.178096}
{'[4, 0, 0, 6, 3, 2, 0, 1, 28, 1, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.178042}
{'[4, 0, 0, 6, 3, 2, 0, 1, 28, 1, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.178062}
{'[4, 0, 0, 6, 3, 2, 0, 1, 28, 1, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.178073}
{'[4, 0, 0, 6, 3, 2, 0, 1, 28, 1, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.178416}
{'[4, 0, 0, 6, 3, 2, 0, 1, 28, 1, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.178864}
{'[4, 0, 0, 6, 3, 2, 0, 1, 28, 1, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.178192}
{'[4, 0, 0, 6, 3, 2, 0, 1, 28, 1, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.178229}
{'[4, 0, 0, 6, 3, 2, 0, 1, 28, 1, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.178044}
{'[4, 0, 0, 6, 3, 2, 0, 1, 28, 1, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.178125}
{'[4, 0, 0, 6, 3, 2, 0, 1, 28, 1, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.178058}
{'[4, 0, 0, 6, 3, 2, 0, 1, 28, 1, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.178105}
{'[4, 0, 0, 6, 3, 2, 0, 1, 28, 1, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.178014}
{'[4, 0, 0, 6, 3, 2, 0, 1, 28, 1, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.178783}
{'[4, 0, 0, 6, 3, 2, 0, 1, 28, 1, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.178094}
{'[4, 0, 0, 6, 3, 2, 0, 1, 28, 1, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.178055}
{'[4, 0, 0, 6, 3, 2, 0, 1, 28, 1, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.178112}
{'[4, 0, 0, 6, 3, 2, 0, 1, 28, 1, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.178298}
{'[4, 0, 0, 6, 3, 2, 0, 1, 28, 1, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.178082}
{'[4, 0, 0, 6, 3, 2, 0, 1, 28, 1, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.178065}
{'[4, 0, 0, 6, 3, 2, 0, 1, 28, 1, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.178123}
{'[4, 0, 0, 6, 3, 2, 0, 1, 28, 1, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.178428}
{'[4, 0, 0, 6, 3, 2, 0, 1, 28, 1, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.178824}
{'[4, 0, 0, 6, 3, 2, 0, 1, 28, 1, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.178155}
{'[4, 0, 0, 6, 3, 2, 0, 1, 28, 1, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.17805}
{'[4, 0, 0, 6, 3, 2, 0, 1, 28, 1, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.178107}

out:
 ["{'[4, 0, 0, 6, 3, 2, 0, 1, 28, 1, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.212082}", "{'[4, 0, 0, 6, 3, 2, 0, 1, 28, 1, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.20409}", "{'[4, 0, 0, 6, 3, 2, 0, 1, 28, 1, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.178027}", "{'[4, 0, 0, 6, 3, 2, 0, 1, 28, 1, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.178082}", "{'[4, 0, 0, 6, 3, 2, 0, 1, 28, 1, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.178096}", "{'[4, 0, 0, 6, 3, 2, 0, 1, 28, 1, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.178042}", "{'[4, 0, 0, 6, 3, 2, 0, 1, 28, 1, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.178062}", "{'[4, 0, 0, 6, 3, 2, 0, 1, 28, 1, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.178073}", "{'[4, 0, 0, 6, 3, 2, 0, 1, 28, 1, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.178416}", "{'[4, 0, 0, 6, 3, 2, 0, 1, 28, 1, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.178864}", "{'[4, 0, 0, 6, 3, 2, 0, 1, 28, 1, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.178192}", "{'[4, 0, 0, 6, 3, 2, 0, 1, 28, 1, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.178229}", "{'[4, 0, 0, 6, 3, 2, 0, 1, 28, 1, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.178044}", "{'[4, 0, 0, 6, 3, 2, 0, 1, 28, 1, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.178125}", "{'[4, 0, 0, 6, 3, 2, 0, 1, 28, 1, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.178058}", "{'[4, 0, 0, 6, 3, 2, 0, 1, 28, 1, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.178105}", "{'[4, 0, 0, 6, 3, 2, 0, 1, 28, 1, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.178014}", "{'[4, 0, 0, 6, 3, 2, 0, 1, 28, 1, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.178783}", "{'[4, 0, 0, 6, 3, 2, 0, 1, 28, 1, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.178094}", "{'[4, 0, 0, 6, 3, 2, 0, 1, 28, 1, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.178055}", "{'[4, 0, 0, 6, 3, 2, 0, 1, 28, 1, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.178112}", "{'[4, 0, 0, 6, 3, 2, 0, 1, 28, 1, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.178298}", "{'[4, 0, 0, 6, 3, 2, 0, 1, 28, 1, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.178082}", "{'[4, 0, 0, 6, 3, 2, 0, 1, 28, 1, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.178065}", "{'[4, 0, 0, 6, 3, 2, 0, 1, 28, 1, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.178123}", "{'[4, 0, 0, 6, 3, 2, 0, 1, 28, 1, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.178428}", "{'[4, 0, 0, 6, 3, 2, 0, 1, 28, 1, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.178824}", "{'[4, 0, 0, 6, 3, 2, 0, 1, 28, 1, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.178155}", "{'[4, 0, 0, 6, 3, 2, 0, 1, 28, 1, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.17805}", "{'[4, 0, 0, 6, 3, 2, 0, 1, 28, 1, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.178107}"]
returning from 'run': {'[4, 0, 0, 6, 3, 2, 0, 1, 28, 1, 0, 22, 0, 0, 0, 1, 0, 1]': ([0.212082, 0.20409, 0.178027, 0.178082, 0.178096, 0.178042, 0.178062, 0.178073, 0.178416, 0.178864, 0.178192, 0.178229, 0.178044, 0.178125, 0.178058, 0.178105, 0.178014, 0.178783, 0.178094, 0.178055, 0.178112, 0.178298, 0.178082, 0.178065, 0.178123, 0.178428, 0.178824, 0.178155, 0.17805, 0.178107], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 0, 0, 6, 3, 2, 0, 1, 28, 1, 0, 22, 0, 0, 0, 1, 0, 1]': ([0.212082, 0.20409, 0.178027, 0.178082, 0.178096, 0.178042, 0.178062, 0.178073, 0.178416, 0.178864, 0.178192, 0.178229, 0.178044, 0.178125, 0.178058, 0.178105, 0.178014, 0.178783, 0.178094, 0.178055, 0.178112, 0.178298, 0.178082, 0.178065, 0.178123, 0.178428, 0.178824, 0.178155, 0.17805, 0.178107], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	43
        Max loop nest depth: 	6
        Additions: 		816
        Multiplications: 	288
        Divisions: 		0
        Logical: 		0
        Reads: 			1763
        Writes: 		375
        Comparisons:		43
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest79.exe __orio_perftest79.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest79.exe  
Program Test Output: 
{'[1, 1, 2, 2, 3, 6, 0, 1, 28, 6, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.112403}
{'[1, 1, 2, 2, 3, 6, 0, 1, 28, 6, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.11253}
{'[1, 1, 2, 2, 3, 6, 0, 1, 28, 6, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.112261}
{'[1, 1, 2, 2, 3, 6, 0, 1, 28, 6, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.11218}
{'[1, 1, 2, 2, 3, 6, 0, 1, 28, 6, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.102475}
{'[1, 1, 2, 2, 3, 6, 0, 1, 28, 6, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.101209}
{'[1, 1, 2, 2, 3, 6, 0, 1, 28, 6, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.101055}
{'[1, 1, 2, 2, 3, 6, 0, 1, 28, 6, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.101049}
{'[1, 1, 2, 2, 3, 6, 0, 1, 28, 6, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.100953}
{'[1, 1, 2, 2, 3, 6, 0, 1, 28, 6, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.101003}
{'[1, 1, 2, 2, 3, 6, 0, 1, 28, 6, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.101618}
{'[1, 1, 2, 2, 3, 6, 0, 1, 28, 6, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.101198}
{'[1, 1, 2, 2, 3, 6, 0, 1, 28, 6, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.101352}
{'[1, 1, 2, 2, 3, 6, 0, 1, 28, 6, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.101169}
{'[1, 1, 2, 2, 3, 6, 0, 1, 28, 6, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.10107}
{'[1, 1, 2, 2, 3, 6, 0, 1, 28, 6, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.100855}
{'[1, 1, 2, 2, 3, 6, 0, 1, 28, 6, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.101223}
{'[1, 1, 2, 2, 3, 6, 0, 1, 28, 6, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.100914}
{'[1, 1, 2, 2, 3, 6, 0, 1, 28, 6, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.10065}
{'[1, 1, 2, 2, 3, 6, 0, 1, 28, 6, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.101022}
{'[1, 1, 2, 2, 3, 6, 0, 1, 28, 6, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.101405}
{'[1, 1, 2, 2, 3, 6, 0, 1, 28, 6, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.102961}
{'[1, 1, 2, 2, 3, 6, 0, 1, 28, 6, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.103136}
{'[1, 1, 2, 2, 3, 6, 0, 1, 28, 6, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.103032}
{'[1, 1, 2, 2, 3, 6, 0, 1, 28, 6, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.102909}
{'[1, 1, 2, 2, 3, 6, 0, 1, 28, 6, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.103117}
{'[1, 1, 2, 2, 3, 6, 0, 1, 28, 6, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.103153}
{'[1, 1, 2, 2, 3, 6, 0, 1, 28, 6, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.103054}
{'[1, 1, 2, 2, 3, 6, 0, 1, 28, 6, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.103251}
{'[1, 1, 2, 2, 3, 6, 0, 1, 28, 6, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.103114}

out:
 ["{'[1, 1, 2, 2, 3, 6, 0, 1, 28, 6, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.112403}", "{'[1, 1, 2, 2, 3, 6, 0, 1, 28, 6, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.11253}", "{'[1, 1, 2, 2, 3, 6, 0, 1, 28, 6, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.112261}", "{'[1, 1, 2, 2, 3, 6, 0, 1, 28, 6, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.11218}", "{'[1, 1, 2, 2, 3, 6, 0, 1, 28, 6, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.102475}", "{'[1, 1, 2, 2, 3, 6, 0, 1, 28, 6, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.101209}", "{'[1, 1, 2, 2, 3, 6, 0, 1, 28, 6, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.101055}", "{'[1, 1, 2, 2, 3, 6, 0, 1, 28, 6, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.101049}", "{'[1, 1, 2, 2, 3, 6, 0, 1, 28, 6, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.100953}", "{'[1, 1, 2, 2, 3, 6, 0, 1, 28, 6, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.101003}", "{'[1, 1, 2, 2, 3, 6, 0, 1, 28, 6, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.101618}", "{'[1, 1, 2, 2, 3, 6, 0, 1, 28, 6, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.101198}", "{'[1, 1, 2, 2, 3, 6, 0, 1, 28, 6, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.101352}", "{'[1, 1, 2, 2, 3, 6, 0, 1, 28, 6, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.101169}", "{'[1, 1, 2, 2, 3, 6, 0, 1, 28, 6, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.10107}", "{'[1, 1, 2, 2, 3, 6, 0, 1, 28, 6, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.100855}", "{'[1, 1, 2, 2, 3, 6, 0, 1, 28, 6, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.101223}", "{'[1, 1, 2, 2, 3, 6, 0, 1, 28, 6, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.100914}", "{'[1, 1, 2, 2, 3, 6, 0, 1, 28, 6, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.10065}", "{'[1, 1, 2, 2, 3, 6, 0, 1, 28, 6, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.101022}", "{'[1, 1, 2, 2, 3, 6, 0, 1, 28, 6, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.101405}", "{'[1, 1, 2, 2, 3, 6, 0, 1, 28, 6, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.102961}", "{'[1, 1, 2, 2, 3, 6, 0, 1, 28, 6, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.103136}", "{'[1, 1, 2, 2, 3, 6, 0, 1, 28, 6, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.103032}", "{'[1, 1, 2, 2, 3, 6, 0, 1, 28, 6, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.102909}", "{'[1, 1, 2, 2, 3, 6, 0, 1, 28, 6, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.103117}", "{'[1, 1, 2, 2, 3, 6, 0, 1, 28, 6, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.103153}", "{'[1, 1, 2, 2, 3, 6, 0, 1, 28, 6, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.103054}", "{'[1, 1, 2, 2, 3, 6, 0, 1, 28, 6, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.103251}", "{'[1, 1, 2, 2, 3, 6, 0, 1, 28, 6, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.103114}"]
returning from 'run': {'[1, 1, 2, 2, 3, 6, 0, 1, 28, 6, 0, 5, 1, 0, 1, 1, 0, 1]': ([0.112403, 0.11253, 0.112261, 0.11218, 0.102475, 0.101209, 0.101055, 0.101049, 0.100953, 0.101003, 0.101618, 0.101198, 0.101352, 0.101169, 0.10107, 0.100855, 0.101223, 0.100914, 0.10065, 0.101022, 0.101405, 0.102961, 0.103136, 0.103032, 0.102909, 0.103117, 0.103153, 0.103054, 0.103251, 0.103114], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 1, 2, 2, 3, 6, 0, 1, 28, 6, 0, 5, 1, 0, 1, 1, 0, 1]': ([0.112403, 0.11253, 0.112261, 0.11218, 0.102475, 0.101209, 0.101055, 0.101049, 0.100953, 0.101003, 0.101618, 0.101198, 0.101352, 0.101169, 0.10107, 0.100855, 0.101223, 0.100914, 0.10065, 0.101022, 0.101405, 0.102961, 0.103136, 0.103032, 0.102909, 0.103117, 0.103153, 0.103054, 0.103251, 0.103114], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = jjj
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		220
        Multiplications: 	54
        Divisions: 		0
        Logical: 		0
        Reads: 			474
        Writes: 		115
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest80.exe __orio_perftest80.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest80.exe  
Program Test Output: 
{'[0, 5, 2, 6, 3, 1, 0, 1, 28, 0, 6, 9, 0, 1, 0, 1, 1, 0]' : 0.270581}
{'[0, 5, 2, 6, 3, 1, 0, 1, 28, 0, 6, 9, 0, 1, 0, 1, 1, 0]' : 0.266796}
{'[0, 5, 2, 6, 3, 1, 0, 1, 28, 0, 6, 9, 0, 1, 0, 1, 1, 0]' : 0.239564}
{'[0, 5, 2, 6, 3, 1, 0, 1, 28, 0, 6, 9, 0, 1, 0, 1, 1, 0]' : 0.239533}
{'[0, 5, 2, 6, 3, 1, 0, 1, 28, 0, 6, 9, 0, 1, 0, 1, 1, 0]' : 0.230377}
{'[0, 5, 2, 6, 3, 1, 0, 1, 28, 0, 6, 9, 0, 1, 0, 1, 1, 0]' : 0.234782}
{'[0, 5, 2, 6, 3, 1, 0, 1, 28, 0, 6, 9, 0, 1, 0, 1, 1, 0]' : 0.225988}
{'[0, 5, 2, 6, 3, 1, 0, 1, 28, 0, 6, 9, 0, 1, 0, 1, 1, 0]' : 0.238316}
{'[0, 5, 2, 6, 3, 1, 0, 1, 28, 0, 6, 9, 0, 1, 0, 1, 1, 0]' : 0.239493}
{'[0, 5, 2, 6, 3, 1, 0, 1, 28, 0, 6, 9, 0, 1, 0, 1, 1, 0]' : 0.234782}
{'[0, 5, 2, 6, 3, 1, 0, 1, 28, 0, 6, 9, 0, 1, 0, 1, 1, 0]' : 0.233274}
{'[0, 5, 2, 6, 3, 1, 0, 1, 28, 0, 6, 9, 0, 1, 0, 1, 1, 0]' : 0.237303}
{'[0, 5, 2, 6, 3, 1, 0, 1, 28, 0, 6, 9, 0, 1, 0, 1, 1, 0]' : 0.239561}
{'[0, 5, 2, 6, 3, 1, 0, 1, 28, 0, 6, 9, 0, 1, 0, 1, 1, 0]' : 0.237967}
{'[0, 5, 2, 6, 3, 1, 0, 1, 28, 0, 6, 9, 0, 1, 0, 1, 1, 0]' : 0.230034}
{'[0, 5, 2, 6, 3, 1, 0, 1, 28, 0, 6, 9, 0, 1, 0, 1, 1, 0]' : 0.228985}
{'[0, 5, 2, 6, 3, 1, 0, 1, 28, 0, 6, 9, 0, 1, 0, 1, 1, 0]' : 0.23334}
{'[0, 5, 2, 6, 3, 1, 0, 1, 28, 0, 6, 9, 0, 1, 0, 1, 1, 0]' : 0.234752}
{'[0, 5, 2, 6, 3, 1, 0, 1, 28, 0, 6, 9, 0, 1, 0, 1, 1, 0]' : 0.234221}
{'[0, 5, 2, 6, 3, 1, 0, 1, 28, 0, 6, 9, 0, 1, 0, 1, 1, 0]' : 0.234133}
{'[0, 5, 2, 6, 3, 1, 0, 1, 28, 0, 6, 9, 0, 1, 0, 1, 1, 0]' : 0.239634}
{'[0, 5, 2, 6, 3, 1, 0, 1, 28, 0, 6, 9, 0, 1, 0, 1, 1, 0]' : 0.237527}
{'[0, 5, 2, 6, 3, 1, 0, 1, 28, 0, 6, 9, 0, 1, 0, 1, 1, 0]' : 0.234987}
{'[0, 5, 2, 6, 3, 1, 0, 1, 28, 0, 6, 9, 0, 1, 0, 1, 1, 0]' : 0.227262}
{'[0, 5, 2, 6, 3, 1, 0, 1, 28, 0, 6, 9, 0, 1, 0, 1, 1, 0]' : 0.232669}
{'[0, 5, 2, 6, 3, 1, 0, 1, 28, 0, 6, 9, 0, 1, 0, 1, 1, 0]' : 0.233308}
{'[0, 5, 2, 6, 3, 1, 0, 1, 28, 0, 6, 9, 0, 1, 0, 1, 1, 0]' : 0.237809}
{'[0, 5, 2, 6, 3, 1, 0, 1, 28, 0, 6, 9, 0, 1, 0, 1, 1, 0]' : 0.239575}
{'[0, 5, 2, 6, 3, 1, 0, 1, 28, 0, 6, 9, 0, 1, 0, 1, 1, 0]' : 0.235623}
{'[0, 5, 2, 6, 3, 1, 0, 1, 28, 0, 6, 9, 0, 1, 0, 1, 1, 0]' : 0.233284}

out:
 ["{'[0, 5, 2, 6, 3, 1, 0, 1, 28, 0, 6, 9, 0, 1, 0, 1, 1, 0]' : 0.270581}", "{'[0, 5, 2, 6, 3, 1, 0, 1, 28, 0, 6, 9, 0, 1, 0, 1, 1, 0]' : 0.266796}", "{'[0, 5, 2, 6, 3, 1, 0, 1, 28, 0, 6, 9, 0, 1, 0, 1, 1, 0]' : 0.239564}", "{'[0, 5, 2, 6, 3, 1, 0, 1, 28, 0, 6, 9, 0, 1, 0, 1, 1, 0]' : 0.239533}", "{'[0, 5, 2, 6, 3, 1, 0, 1, 28, 0, 6, 9, 0, 1, 0, 1, 1, 0]' : 0.230377}", "{'[0, 5, 2, 6, 3, 1, 0, 1, 28, 0, 6, 9, 0, 1, 0, 1, 1, 0]' : 0.234782}", "{'[0, 5, 2, 6, 3, 1, 0, 1, 28, 0, 6, 9, 0, 1, 0, 1, 1, 0]' : 0.225988}", "{'[0, 5, 2, 6, 3, 1, 0, 1, 28, 0, 6, 9, 0, 1, 0, 1, 1, 0]' : 0.238316}", "{'[0, 5, 2, 6, 3, 1, 0, 1, 28, 0, 6, 9, 0, 1, 0, 1, 1, 0]' : 0.239493}", "{'[0, 5, 2, 6, 3, 1, 0, 1, 28, 0, 6, 9, 0, 1, 0, 1, 1, 0]' : 0.234782}", "{'[0, 5, 2, 6, 3, 1, 0, 1, 28, 0, 6, 9, 0, 1, 0, 1, 1, 0]' : 0.233274}", "{'[0, 5, 2, 6, 3, 1, 0, 1, 28, 0, 6, 9, 0, 1, 0, 1, 1, 0]' : 0.237303}", "{'[0, 5, 2, 6, 3, 1, 0, 1, 28, 0, 6, 9, 0, 1, 0, 1, 1, 0]' : 0.239561}", "{'[0, 5, 2, 6, 3, 1, 0, 1, 28, 0, 6, 9, 0, 1, 0, 1, 1, 0]' : 0.237967}", "{'[0, 5, 2, 6, 3, 1, 0, 1, 28, 0, 6, 9, 0, 1, 0, 1, 1, 0]' : 0.230034}", "{'[0, 5, 2, 6, 3, 1, 0, 1, 28, 0, 6, 9, 0, 1, 0, 1, 1, 0]' : 0.228985}", "{'[0, 5, 2, 6, 3, 1, 0, 1, 28, 0, 6, 9, 0, 1, 0, 1, 1, 0]' : 0.23334}", "{'[0, 5, 2, 6, 3, 1, 0, 1, 28, 0, 6, 9, 0, 1, 0, 1, 1, 0]' : 0.234752}", "{'[0, 5, 2, 6, 3, 1, 0, 1, 28, 0, 6, 9, 0, 1, 0, 1, 1, 0]' : 0.234221}", "{'[0, 5, 2, 6, 3, 1, 0, 1, 28, 0, 6, 9, 0, 1, 0, 1, 1, 0]' : 0.234133}", "{'[0, 5, 2, 6, 3, 1, 0, 1, 28, 0, 6, 9, 0, 1, 0, 1, 1, 0]' : 0.239634}", "{'[0, 5, 2, 6, 3, 1, 0, 1, 28, 0, 6, 9, 0, 1, 0, 1, 1, 0]' : 0.237527}", "{'[0, 5, 2, 6, 3, 1, 0, 1, 28, 0, 6, 9, 0, 1, 0, 1, 1, 0]' : 0.234987}", "{'[0, 5, 2, 6, 3, 1, 0, 1, 28, 0, 6, 9, 0, 1, 0, 1, 1, 0]' : 0.227262}", "{'[0, 5, 2, 6, 3, 1, 0, 1, 28, 0, 6, 9, 0, 1, 0, 1, 1, 0]' : 0.232669}", "{'[0, 5, 2, 6, 3, 1, 0, 1, 28, 0, 6, 9, 0, 1, 0, 1, 1, 0]' : 0.233308}", "{'[0, 5, 2, 6, 3, 1, 0, 1, 28, 0, 6, 9, 0, 1, 0, 1, 1, 0]' : 0.237809}", "{'[0, 5, 2, 6, 3, 1, 0, 1, 28, 0, 6, 9, 0, 1, 0, 1, 1, 0]' : 0.239575}", "{'[0, 5, 2, 6, 3, 1, 0, 1, 28, 0, 6, 9, 0, 1, 0, 1, 1, 0]' : 0.235623}", "{'[0, 5, 2, 6, 3, 1, 0, 1, 28, 0, 6, 9, 0, 1, 0, 1, 1, 0]' : 0.233284}"]
returning from 'run': {'[0, 5, 2, 6, 3, 1, 0, 1, 28, 0, 6, 9, 0, 1, 0, 1, 1, 0]': ([0.270581, 0.266796, 0.239564, 0.239533, 0.230377, 0.234782, 0.225988, 0.238316, 0.239493, 0.234782, 0.233274, 0.237303, 0.239561, 0.237967, 0.230034, 0.228985, 0.23334, 0.234752, 0.234221, 0.234133, 0.239634, 0.237527, 0.234987, 0.227262, 0.232669, 0.233308, 0.237809, 0.239575, 0.235623, 0.233284], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 5, 2, 6, 3, 1, 0, 1, 28, 0, 6, 9, 0, 1, 0, 1, 1, 0]': ([0.270581, 0.266796, 0.239564, 0.239533, 0.230377, 0.234782, 0.225988, 0.238316, 0.239493, 0.234782, 0.233274, 0.237303, 0.239561, 0.237967, 0.230034, 0.228985, 0.23334, 0.234752, 0.234221, 0.234133, 0.239634, 0.237527, 0.234987, 0.227262, 0.232669, 0.233308, 0.237809, 0.239575, 0.235623, 0.233284], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	6
        Additions: 		280
        Multiplications: 	90
        Divisions: 		0
        Logical: 		0
        Reads: 			610
        Writes: 		134
        Comparisons:		15
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest81.exe __orio_perftest81.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest81.exe  
Program Test Output: 
{'[5, 4, 6, 4, 3, 5, 0, 1, 28, 0, 27, 26, 0, 1, 1, 1, 1, 1]' : 0.228509}
{'[5, 4, 6, 4, 3, 5, 0, 1, 28, 0, 27, 26, 0, 1, 1, 1, 1, 1]' : 0.228146}
{'[5, 4, 6, 4, 3, 5, 0, 1, 28, 0, 27, 26, 0, 1, 1, 1, 1, 1]' : 0.226373}
{'[5, 4, 6, 4, 3, 5, 0, 1, 28, 0, 27, 26, 0, 1, 1, 1, 1, 1]' : 0.192222}
{'[5, 4, 6, 4, 3, 5, 0, 1, 28, 0, 27, 26, 0, 1, 1, 1, 1, 1]' : 0.190795}
{'[5, 4, 6, 4, 3, 5, 0, 1, 28, 0, 27, 26, 0, 1, 1, 1, 1, 1]' : 0.197293}
{'[5, 4, 6, 4, 3, 5, 0, 1, 28, 0, 27, 26, 0, 1, 1, 1, 1, 1]' : 0.193519}
{'[5, 4, 6, 4, 3, 5, 0, 1, 28, 0, 27, 26, 0, 1, 1, 1, 1, 1]' : 0.195538}
{'[5, 4, 6, 4, 3, 5, 0, 1, 28, 0, 27, 26, 0, 1, 1, 1, 1, 1]' : 0.192903}
{'[5, 4, 6, 4, 3, 5, 0, 1, 28, 0, 27, 26, 0, 1, 1, 1, 1, 1]' : 0.190896}
{'[5, 4, 6, 4, 3, 5, 0, 1, 28, 0, 27, 26, 0, 1, 1, 1, 1, 1]' : 0.197339}
{'[5, 4, 6, 4, 3, 5, 0, 1, 28, 0, 27, 26, 0, 1, 1, 1, 1, 1]' : 0.200326}
{'[5, 4, 6, 4, 3, 5, 0, 1, 28, 0, 27, 26, 0, 1, 1, 1, 1, 1]' : 0.198907}
{'[5, 4, 6, 4, 3, 5, 0, 1, 28, 0, 27, 26, 0, 1, 1, 1, 1, 1]' : 0.193951}
{'[5, 4, 6, 4, 3, 5, 0, 1, 28, 0, 27, 26, 0, 1, 1, 1, 1, 1]' : 0.190607}
{'[5, 4, 6, 4, 3, 5, 0, 1, 28, 0, 27, 26, 0, 1, 1, 1, 1, 1]' : 0.195495}
{'[5, 4, 6, 4, 3, 5, 0, 1, 28, 0, 27, 26, 0, 1, 1, 1, 1, 1]' : 0.200224}
{'[5, 4, 6, 4, 3, 5, 0, 1, 28, 0, 27, 26, 0, 1, 1, 1, 1, 1]' : 0.198607}
{'[5, 4, 6, 4, 3, 5, 0, 1, 28, 0, 27, 26, 0, 1, 1, 1, 1, 1]' : 0.195089}
{'[5, 4, 6, 4, 3, 5, 0, 1, 28, 0, 27, 26, 0, 1, 1, 1, 1, 1]' : 0.190818}
{'[5, 4, 6, 4, 3, 5, 0, 1, 28, 0, 27, 26, 0, 1, 1, 1, 1, 1]' : 0.195076}
{'[5, 4, 6, 4, 3, 5, 0, 1, 28, 0, 27, 26, 0, 1, 1, 1, 1, 1]' : 0.192758}
{'[5, 4, 6, 4, 3, 5, 0, 1, 28, 0, 27, 26, 0, 1, 1, 1, 1, 1]' : 0.191628}
{'[5, 4, 6, 4, 3, 5, 0, 1, 28, 0, 27, 26, 0, 1, 1, 1, 1, 1]' : 0.195441}
{'[5, 4, 6, 4, 3, 5, 0, 1, 28, 0, 27, 26, 0, 1, 1, 1, 1, 1]' : 0.190844}
{'[5, 4, 6, 4, 3, 5, 0, 1, 28, 0, 27, 26, 0, 1, 1, 1, 1, 1]' : 0.193886}
{'[5, 4, 6, 4, 3, 5, 0, 1, 28, 0, 27, 26, 0, 1, 1, 1, 1, 1]' : 0.202086}
{'[5, 4, 6, 4, 3, 5, 0, 1, 28, 0, 27, 26, 0, 1, 1, 1, 1, 1]' : 0.190628}
{'[5, 4, 6, 4, 3, 5, 0, 1, 28, 0, 27, 26, 0, 1, 1, 1, 1, 1]' : 0.198146}
{'[5, 4, 6, 4, 3, 5, 0, 1, 28, 0, 27, 26, 0, 1, 1, 1, 1, 1]' : 0.190569}

out:
 ["{'[5, 4, 6, 4, 3, 5, 0, 1, 28, 0, 27, 26, 0, 1, 1, 1, 1, 1]' : 0.228509}", "{'[5, 4, 6, 4, 3, 5, 0, 1, 28, 0, 27, 26, 0, 1, 1, 1, 1, 1]' : 0.228146}", "{'[5, 4, 6, 4, 3, 5, 0, 1, 28, 0, 27, 26, 0, 1, 1, 1, 1, 1]' : 0.226373}", "{'[5, 4, 6, 4, 3, 5, 0, 1, 28, 0, 27, 26, 0, 1, 1, 1, 1, 1]' : 0.192222}", "{'[5, 4, 6, 4, 3, 5, 0, 1, 28, 0, 27, 26, 0, 1, 1, 1, 1, 1]' : 0.190795}", "{'[5, 4, 6, 4, 3, 5, 0, 1, 28, 0, 27, 26, 0, 1, 1, 1, 1, 1]' : 0.197293}", "{'[5, 4, 6, 4, 3, 5, 0, 1, 28, 0, 27, 26, 0, 1, 1, 1, 1, 1]' : 0.193519}", "{'[5, 4, 6, 4, 3, 5, 0, 1, 28, 0, 27, 26, 0, 1, 1, 1, 1, 1]' : 0.195538}", "{'[5, 4, 6, 4, 3, 5, 0, 1, 28, 0, 27, 26, 0, 1, 1, 1, 1, 1]' : 0.192903}", "{'[5, 4, 6, 4, 3, 5, 0, 1, 28, 0, 27, 26, 0, 1, 1, 1, 1, 1]' : 0.190896}", "{'[5, 4, 6, 4, 3, 5, 0, 1, 28, 0, 27, 26, 0, 1, 1, 1, 1, 1]' : 0.197339}", "{'[5, 4, 6, 4, 3, 5, 0, 1, 28, 0, 27, 26, 0, 1, 1, 1, 1, 1]' : 0.200326}", "{'[5, 4, 6, 4, 3, 5, 0, 1, 28, 0, 27, 26, 0, 1, 1, 1, 1, 1]' : 0.198907}", "{'[5, 4, 6, 4, 3, 5, 0, 1, 28, 0, 27, 26, 0, 1, 1, 1, 1, 1]' : 0.193951}", "{'[5, 4, 6, 4, 3, 5, 0, 1, 28, 0, 27, 26, 0, 1, 1, 1, 1, 1]' : 0.190607}", "{'[5, 4, 6, 4, 3, 5, 0, 1, 28, 0, 27, 26, 0, 1, 1, 1, 1, 1]' : 0.195495}", "{'[5, 4, 6, 4, 3, 5, 0, 1, 28, 0, 27, 26, 0, 1, 1, 1, 1, 1]' : 0.200224}", "{'[5, 4, 6, 4, 3, 5, 0, 1, 28, 0, 27, 26, 0, 1, 1, 1, 1, 1]' : 0.198607}", "{'[5, 4, 6, 4, 3, 5, 0, 1, 28, 0, 27, 26, 0, 1, 1, 1, 1, 1]' : 0.195089}", "{'[5, 4, 6, 4, 3, 5, 0, 1, 28, 0, 27, 26, 0, 1, 1, 1, 1, 1]' : 0.190818}", "{'[5, 4, 6, 4, 3, 5, 0, 1, 28, 0, 27, 26, 0, 1, 1, 1, 1, 1]' : 0.195076}", "{'[5, 4, 6, 4, 3, 5, 0, 1, 28, 0, 27, 26, 0, 1, 1, 1, 1, 1]' : 0.192758}", "{'[5, 4, 6, 4, 3, 5, 0, 1, 28, 0, 27, 26, 0, 1, 1, 1, 1, 1]' : 0.191628}", "{'[5, 4, 6, 4, 3, 5, 0, 1, 28, 0, 27, 26, 0, 1, 1, 1, 1, 1]' : 0.195441}", "{'[5, 4, 6, 4, 3, 5, 0, 1, 28, 0, 27, 26, 0, 1, 1, 1, 1, 1]' : 0.190844}", "{'[5, 4, 6, 4, 3, 5, 0, 1, 28, 0, 27, 26, 0, 1, 1, 1, 1, 1]' : 0.193886}", "{'[5, 4, 6, 4, 3, 5, 0, 1, 28, 0, 27, 26, 0, 1, 1, 1, 1, 1]' : 0.202086}", "{'[5, 4, 6, 4, 3, 5, 0, 1, 28, 0, 27, 26, 0, 1, 1, 1, 1, 1]' : 0.190628}", "{'[5, 4, 6, 4, 3, 5, 0, 1, 28, 0, 27, 26, 0, 1, 1, 1, 1, 1]' : 0.198146}", "{'[5, 4, 6, 4, 3, 5, 0, 1, 28, 0, 27, 26, 0, 1, 1, 1, 1, 1]' : 0.190569}"]
returning from 'run': {'[5, 4, 6, 4, 3, 5, 0, 1, 28, 0, 27, 26, 0, 1, 1, 1, 1, 1]': ([0.228509, 0.228146, 0.226373, 0.192222, 0.190795, 0.197293, 0.193519, 0.195538, 0.192903, 0.190896, 0.197339, 0.200326, 0.198907, 0.193951, 0.190607, 0.195495, 0.200224, 0.198607, 0.195089, 0.190818, 0.195076, 0.192758, 0.191628, 0.195441, 0.190844, 0.193886, 0.202086, 0.190628, 0.198146, 0.190569], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 4, 6, 4, 3, 5, 0, 1, 28, 0, 27, 26, 0, 1, 1, 1, 1, 1]': ([0.228509, 0.228146, 0.226373, 0.192222, 0.190795, 0.197293, 0.193519, 0.195538, 0.192903, 0.190896, 0.197339, 0.200326, 0.198907, 0.193951, 0.190607, 0.195495, 0.200224, 0.198607, 0.195089, 0.190818, 0.195076, 0.192758, 0.191628, 0.195441, 0.190844, 0.193886, 0.202086, 0.190628, 0.198146, 0.190569], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = jjj
Code stats:
        Number of loops: 	37
        Max loop nest depth: 	5
        Additions: 		1080
        Multiplications: 	450
        Divisions: 		0
        Logical: 		0
        Reads: 			2254
        Writes: 		445
        Comparisons:		37
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest82.exe __orio_perftest82.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest82.exe  
Program Test Output: 
{'[3, 5, 0, 2, 3, 0, 1, 1, 28, 23, 4, 0, 0, 1, 0, 1, 0, 1]' : 0.160214}
{'[3, 5, 0, 2, 3, 0, 1, 1, 28, 23, 4, 0, 0, 1, 0, 1, 0, 1]' : 0.158387}
{'[3, 5, 0, 2, 3, 0, 1, 1, 28, 23, 4, 0, 0, 1, 0, 1, 0, 1]' : 0.157308}
{'[3, 5, 0, 2, 3, 0, 1, 1, 28, 23, 4, 0, 0, 1, 0, 1, 0, 1]' : 0.157349}
{'[3, 5, 0, 2, 3, 0, 1, 1, 28, 23, 4, 0, 0, 1, 0, 1, 0, 1]' : 0.157009}
{'[3, 5, 0, 2, 3, 0, 1, 1, 28, 23, 4, 0, 0, 1, 0, 1, 0, 1]' : 0.157231}
{'[3, 5, 0, 2, 3, 0, 1, 1, 28, 23, 4, 0, 0, 1, 0, 1, 0, 1]' : 0.157103}
{'[3, 5, 0, 2, 3, 0, 1, 1, 28, 23, 4, 0, 0, 1, 0, 1, 0, 1]' : 0.157126}
{'[3, 5, 0, 2, 3, 0, 1, 1, 28, 23, 4, 0, 0, 1, 0, 1, 0, 1]' : 0.156886}
{'[3, 5, 0, 2, 3, 0, 1, 1, 28, 23, 4, 0, 0, 1, 0, 1, 0, 1]' : 0.157113}
{'[3, 5, 0, 2, 3, 0, 1, 1, 28, 23, 4, 0, 0, 1, 0, 1, 0, 1]' : 0.156927}
{'[3, 5, 0, 2, 3, 0, 1, 1, 28, 23, 4, 0, 0, 1, 0, 1, 0, 1]' : 0.157209}
{'[3, 5, 0, 2, 3, 0, 1, 1, 28, 23, 4, 0, 0, 1, 0, 1, 0, 1]' : 0.157062}
{'[3, 5, 0, 2, 3, 0, 1, 1, 28, 23, 4, 0, 0, 1, 0, 1, 0, 1]' : 0.160737}
{'[3, 5, 0, 2, 3, 0, 1, 1, 28, 23, 4, 0, 0, 1, 0, 1, 0, 1]' : 0.157153}
{'[3, 5, 0, 2, 3, 0, 1, 1, 28, 23, 4, 0, 0, 1, 0, 1, 0, 1]' : 0.157146}
{'[3, 5, 0, 2, 3, 0, 1, 1, 28, 23, 4, 0, 0, 1, 0, 1, 0, 1]' : 0.161289}
{'[3, 5, 0, 2, 3, 0, 1, 1, 28, 23, 4, 0, 0, 1, 0, 1, 0, 1]' : 0.161102}
{'[3, 5, 0, 2, 3, 0, 1, 1, 28, 23, 4, 0, 0, 1, 0, 1, 0, 1]' : 0.161086}
{'[3, 5, 0, 2, 3, 0, 1, 1, 28, 23, 4, 0, 0, 1, 0, 1, 0, 1]' : 0.160012}
{'[3, 5, 0, 2, 3, 0, 1, 1, 28, 23, 4, 0, 0, 1, 0, 1, 0, 1]' : 0.156983}
{'[3, 5, 0, 2, 3, 0, 1, 1, 28, 23, 4, 0, 0, 1, 0, 1, 0, 1]' : 0.15676}
{'[3, 5, 0, 2, 3, 0, 1, 1, 28, 23, 4, 0, 0, 1, 0, 1, 0, 1]' : 0.154403}
{'[3, 5, 0, 2, 3, 0, 1, 1, 28, 23, 4, 0, 0, 1, 0, 1, 0, 1]' : 0.152834}
{'[3, 5, 0, 2, 3, 0, 1, 1, 28, 23, 4, 0, 0, 1, 0, 1, 0, 1]' : 0.153027}
{'[3, 5, 0, 2, 3, 0, 1, 1, 28, 23, 4, 0, 0, 1, 0, 1, 0, 1]' : 0.154674}
{'[3, 5, 0, 2, 3, 0, 1, 1, 28, 23, 4, 0, 0, 1, 0, 1, 0, 1]' : 0.153413}
{'[3, 5, 0, 2, 3, 0, 1, 1, 28, 23, 4, 0, 0, 1, 0, 1, 0, 1]' : 0.152563}
{'[3, 5, 0, 2, 3, 0, 1, 1, 28, 23, 4, 0, 0, 1, 0, 1, 0, 1]' : 0.154614}
{'[3, 5, 0, 2, 3, 0, 1, 1, 28, 23, 4, 0, 0, 1, 0, 1, 0, 1]' : 0.161211}

out:
 ["{'[3, 5, 0, 2, 3, 0, 1, 1, 28, 23, 4, 0, 0, 1, 0, 1, 0, 1]' : 0.160214}", "{'[3, 5, 0, 2, 3, 0, 1, 1, 28, 23, 4, 0, 0, 1, 0, 1, 0, 1]' : 0.158387}", "{'[3, 5, 0, 2, 3, 0, 1, 1, 28, 23, 4, 0, 0, 1, 0, 1, 0, 1]' : 0.157308}", "{'[3, 5, 0, 2, 3, 0, 1, 1, 28, 23, 4, 0, 0, 1, 0, 1, 0, 1]' : 0.157349}", "{'[3, 5, 0, 2, 3, 0, 1, 1, 28, 23, 4, 0, 0, 1, 0, 1, 0, 1]' : 0.157009}", "{'[3, 5, 0, 2, 3, 0, 1, 1, 28, 23, 4, 0, 0, 1, 0, 1, 0, 1]' : 0.157231}", "{'[3, 5, 0, 2, 3, 0, 1, 1, 28, 23, 4, 0, 0, 1, 0, 1, 0, 1]' : 0.157103}", "{'[3, 5, 0, 2, 3, 0, 1, 1, 28, 23, 4, 0, 0, 1, 0, 1, 0, 1]' : 0.157126}", "{'[3, 5, 0, 2, 3, 0, 1, 1, 28, 23, 4, 0, 0, 1, 0, 1, 0, 1]' : 0.156886}", "{'[3, 5, 0, 2, 3, 0, 1, 1, 28, 23, 4, 0, 0, 1, 0, 1, 0, 1]' : 0.157113}", "{'[3, 5, 0, 2, 3, 0, 1, 1, 28, 23, 4, 0, 0, 1, 0, 1, 0, 1]' : 0.156927}", "{'[3, 5, 0, 2, 3, 0, 1, 1, 28, 23, 4, 0, 0, 1, 0, 1, 0, 1]' : 0.157209}", "{'[3, 5, 0, 2, 3, 0, 1, 1, 28, 23, 4, 0, 0, 1, 0, 1, 0, 1]' : 0.157062}", "{'[3, 5, 0, 2, 3, 0, 1, 1, 28, 23, 4, 0, 0, 1, 0, 1, 0, 1]' : 0.160737}", "{'[3, 5, 0, 2, 3, 0, 1, 1, 28, 23, 4, 0, 0, 1, 0, 1, 0, 1]' : 0.157153}", "{'[3, 5, 0, 2, 3, 0, 1, 1, 28, 23, 4, 0, 0, 1, 0, 1, 0, 1]' : 0.157146}", "{'[3, 5, 0, 2, 3, 0, 1, 1, 28, 23, 4, 0, 0, 1, 0, 1, 0, 1]' : 0.161289}", "{'[3, 5, 0, 2, 3, 0, 1, 1, 28, 23, 4, 0, 0, 1, 0, 1, 0, 1]' : 0.161102}", "{'[3, 5, 0, 2, 3, 0, 1, 1, 28, 23, 4, 0, 0, 1, 0, 1, 0, 1]' : 0.161086}", "{'[3, 5, 0, 2, 3, 0, 1, 1, 28, 23, 4, 0, 0, 1, 0, 1, 0, 1]' : 0.160012}", "{'[3, 5, 0, 2, 3, 0, 1, 1, 28, 23, 4, 0, 0, 1, 0, 1, 0, 1]' : 0.156983}", "{'[3, 5, 0, 2, 3, 0, 1, 1, 28, 23, 4, 0, 0, 1, 0, 1, 0, 1]' : 0.15676}", "{'[3, 5, 0, 2, 3, 0, 1, 1, 28, 23, 4, 0, 0, 1, 0, 1, 0, 1]' : 0.154403}", "{'[3, 5, 0, 2, 3, 0, 1, 1, 28, 23, 4, 0, 0, 1, 0, 1, 0, 1]' : 0.152834}", "{'[3, 5, 0, 2, 3, 0, 1, 1, 28, 23, 4, 0, 0, 1, 0, 1, 0, 1]' : 0.153027}", "{'[3, 5, 0, 2, 3, 0, 1, 1, 28, 23, 4, 0, 0, 1, 0, 1, 0, 1]' : 0.154674}", "{'[3, 5, 0, 2, 3, 0, 1, 1, 28, 23, 4, 0, 0, 1, 0, 1, 0, 1]' : 0.153413}", "{'[3, 5, 0, 2, 3, 0, 1, 1, 28, 23, 4, 0, 0, 1, 0, 1, 0, 1]' : 0.152563}", "{'[3, 5, 0, 2, 3, 0, 1, 1, 28, 23, 4, 0, 0, 1, 0, 1, 0, 1]' : 0.154614}", "{'[3, 5, 0, 2, 3, 0, 1, 1, 28, 23, 4, 0, 0, 1, 0, 1, 0, 1]' : 0.161211}"]
returning from 'run': {'[3, 5, 0, 2, 3, 0, 1, 1, 28, 23, 4, 0, 0, 1, 0, 1, 0, 1]': ([0.160214, 0.158387, 0.157308, 0.157349, 0.157009, 0.157231, 0.157103, 0.157126, 0.156886, 0.157113, 0.156927, 0.157209, 0.157062, 0.160737, 0.157153, 0.157146, 0.161289, 0.161102, 0.161086, 0.160012, 0.156983, 0.15676, 0.154403, 0.152834, 0.153027, 0.154674, 0.153413, 0.152563, 0.154614, 0.161211], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 5, 0, 2, 3, 0, 1, 1, 28, 23, 4, 0, 0, 1, 0, 1, 0, 1]': ([0.160214, 0.158387, 0.157308, 0.157349, 0.157009, 0.157231, 0.157103, 0.157126, 0.156886, 0.157113, 0.156927, 0.157209, 0.157062, 0.160737, 0.157153, 0.157146, 0.161289, 0.161102, 0.161086, 0.160012, 0.156983, 0.15676, 0.154403, 0.152834, 0.153027, 0.154674, 0.153413, 0.152563, 0.154614, 0.161211], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = jjj
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		251
        Multiplications: 	88
        Divisions: 		0
        Logical: 		0
        Reads: 			530
        Writes: 		109
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest83.exe __orio_perftest83.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest83.exe  
Program Test Output: 
{'[6, 5, 6, 6, 3, 6, 0, 1, 28, 0, 9, 0, 0, 2, 0, 1, 0, 0]' : 0.243135}
{'[6, 5, 6, 6, 3, 6, 0, 1, 28, 0, 9, 0, 0, 2, 0, 1, 0, 0]' : 0.242998}
{'[6, 5, 6, 6, 3, 6, 0, 1, 28, 0, 9, 0, 0, 2, 0, 1, 0, 0]' : 0.229445}
{'[6, 5, 6, 6, 3, 6, 0, 1, 28, 0, 9, 0, 0, 2, 0, 1, 0, 0]' : 0.209361}
{'[6, 5, 6, 6, 3, 6, 0, 1, 28, 0, 9, 0, 0, 2, 0, 1, 0, 0]' : 0.209371}
{'[6, 5, 6, 6, 3, 6, 0, 1, 28, 0, 9, 0, 0, 2, 0, 1, 0, 0]' : 0.20951}
{'[6, 5, 6, 6, 3, 6, 0, 1, 28, 0, 9, 0, 0, 2, 0, 1, 0, 0]' : 0.209518}
{'[6, 5, 6, 6, 3, 6, 0, 1, 28, 0, 9, 0, 0, 2, 0, 1, 0, 0]' : 0.209412}
{'[6, 5, 6, 6, 3, 6, 0, 1, 28, 0, 9, 0, 0, 2, 0, 1, 0, 0]' : 0.209454}
{'[6, 5, 6, 6, 3, 6, 0, 1, 28, 0, 9, 0, 0, 2, 0, 1, 0, 0]' : 0.209329}
{'[6, 5, 6, 6, 3, 6, 0, 1, 28, 0, 9, 0, 0, 2, 0, 1, 0, 0]' : 0.212332}
{'[6, 5, 6, 6, 3, 6, 0, 1, 28, 0, 9, 0, 0, 2, 0, 1, 0, 0]' : 0.215576}
{'[6, 5, 6, 6, 3, 6, 0, 1, 28, 0, 9, 0, 0, 2, 0, 1, 0, 0]' : 0.214961}
{'[6, 5, 6, 6, 3, 6, 0, 1, 28, 0, 9, 0, 0, 2, 0, 1, 0, 0]' : 0.209479}
{'[6, 5, 6, 6, 3, 6, 0, 1, 28, 0, 9, 0, 0, 2, 0, 1, 0, 0]' : 0.209544}
{'[6, 5, 6, 6, 3, 6, 0, 1, 28, 0, 9, 0, 0, 2, 0, 1, 0, 0]' : 0.209407}
{'[6, 5, 6, 6, 3, 6, 0, 1, 28, 0, 9, 0, 0, 2, 0, 1, 0, 0]' : 0.20935}
{'[6, 5, 6, 6, 3, 6, 0, 1, 28, 0, 9, 0, 0, 2, 0, 1, 0, 0]' : 0.209628}
{'[6, 5, 6, 6, 3, 6, 0, 1, 28, 0, 9, 0, 0, 2, 0, 1, 0, 0]' : 0.209396}
{'[6, 5, 6, 6, 3, 6, 0, 1, 28, 0, 9, 0, 0, 2, 0, 1, 0, 0]' : 0.208121}
{'[6, 5, 6, 6, 3, 6, 0, 1, 28, 0, 9, 0, 0, 2, 0, 1, 0, 0]' : 0.215039}
{'[6, 5, 6, 6, 3, 6, 0, 1, 28, 0, 9, 0, 0, 2, 0, 1, 0, 0]' : 0.209377}
{'[6, 5, 6, 6, 3, 6, 0, 1, 28, 0, 9, 0, 0, 2, 0, 1, 0, 0]' : 0.209461}
{'[6, 5, 6, 6, 3, 6, 0, 1, 28, 0, 9, 0, 0, 2, 0, 1, 0, 0]' : 0.209264}
{'[6, 5, 6, 6, 3, 6, 0, 1, 28, 0, 9, 0, 0, 2, 0, 1, 0, 0]' : 0.210008}
{'[6, 5, 6, 6, 3, 6, 0, 1, 28, 0, 9, 0, 0, 2, 0, 1, 0, 0]' : 0.209432}
{'[6, 5, 6, 6, 3, 6, 0, 1, 28, 0, 9, 0, 0, 2, 0, 1, 0, 0]' : 0.209719}
{'[6, 5, 6, 6, 3, 6, 0, 1, 28, 0, 9, 0, 0, 2, 0, 1, 0, 0]' : 0.209867}
{'[6, 5, 6, 6, 3, 6, 0, 1, 28, 0, 9, 0, 0, 2, 0, 1, 0, 0]' : 0.209384}
{'[6, 5, 6, 6, 3, 6, 0, 1, 28, 0, 9, 0, 0, 2, 0, 1, 0, 0]' : 0.209661}

out:
 ["{'[6, 5, 6, 6, 3, 6, 0, 1, 28, 0, 9, 0, 0, 2, 0, 1, 0, 0]' : 0.243135}", "{'[6, 5, 6, 6, 3, 6, 0, 1, 28, 0, 9, 0, 0, 2, 0, 1, 0, 0]' : 0.242998}", "{'[6, 5, 6, 6, 3, 6, 0, 1, 28, 0, 9, 0, 0, 2, 0, 1, 0, 0]' : 0.229445}", "{'[6, 5, 6, 6, 3, 6, 0, 1, 28, 0, 9, 0, 0, 2, 0, 1, 0, 0]' : 0.209361}", "{'[6, 5, 6, 6, 3, 6, 0, 1, 28, 0, 9, 0, 0, 2, 0, 1, 0, 0]' : 0.209371}", "{'[6, 5, 6, 6, 3, 6, 0, 1, 28, 0, 9, 0, 0, 2, 0, 1, 0, 0]' : 0.20951}", "{'[6, 5, 6, 6, 3, 6, 0, 1, 28, 0, 9, 0, 0, 2, 0, 1, 0, 0]' : 0.209518}", "{'[6, 5, 6, 6, 3, 6, 0, 1, 28, 0, 9, 0, 0, 2, 0, 1, 0, 0]' : 0.209412}", "{'[6, 5, 6, 6, 3, 6, 0, 1, 28, 0, 9, 0, 0, 2, 0, 1, 0, 0]' : 0.209454}", "{'[6, 5, 6, 6, 3, 6, 0, 1, 28, 0, 9, 0, 0, 2, 0, 1, 0, 0]' : 0.209329}", "{'[6, 5, 6, 6, 3, 6, 0, 1, 28, 0, 9, 0, 0, 2, 0, 1, 0, 0]' : 0.212332}", "{'[6, 5, 6, 6, 3, 6, 0, 1, 28, 0, 9, 0, 0, 2, 0, 1, 0, 0]' : 0.215576}", "{'[6, 5, 6, 6, 3, 6, 0, 1, 28, 0, 9, 0, 0, 2, 0, 1, 0, 0]' : 0.214961}", "{'[6, 5, 6, 6, 3, 6, 0, 1, 28, 0, 9, 0, 0, 2, 0, 1, 0, 0]' : 0.209479}", "{'[6, 5, 6, 6, 3, 6, 0, 1, 28, 0, 9, 0, 0, 2, 0, 1, 0, 0]' : 0.209544}", "{'[6, 5, 6, 6, 3, 6, 0, 1, 28, 0, 9, 0, 0, 2, 0, 1, 0, 0]' : 0.209407}", "{'[6, 5, 6, 6, 3, 6, 0, 1, 28, 0, 9, 0, 0, 2, 0, 1, 0, 0]' : 0.20935}", "{'[6, 5, 6, 6, 3, 6, 0, 1, 28, 0, 9, 0, 0, 2, 0, 1, 0, 0]' : 0.209628}", "{'[6, 5, 6, 6, 3, 6, 0, 1, 28, 0, 9, 0, 0, 2, 0, 1, 0, 0]' : 0.209396}", "{'[6, 5, 6, 6, 3, 6, 0, 1, 28, 0, 9, 0, 0, 2, 0, 1, 0, 0]' : 0.208121}", "{'[6, 5, 6, 6, 3, 6, 0, 1, 28, 0, 9, 0, 0, 2, 0, 1, 0, 0]' : 0.215039}", "{'[6, 5, 6, 6, 3, 6, 0, 1, 28, 0, 9, 0, 0, 2, 0, 1, 0, 0]' : 0.209377}", "{'[6, 5, 6, 6, 3, 6, 0, 1, 28, 0, 9, 0, 0, 2, 0, 1, 0, 0]' : 0.209461}", "{'[6, 5, 6, 6, 3, 6, 0, 1, 28, 0, 9, 0, 0, 2, 0, 1, 0, 0]' : 0.209264}", "{'[6, 5, 6, 6, 3, 6, 0, 1, 28, 0, 9, 0, 0, 2, 0, 1, 0, 0]' : 0.210008}", "{'[6, 5, 6, 6, 3, 6, 0, 1, 28, 0, 9, 0, 0, 2, 0, 1, 0, 0]' : 0.209432}", "{'[6, 5, 6, 6, 3, 6, 0, 1, 28, 0, 9, 0, 0, 2, 0, 1, 0, 0]' : 0.209719}", "{'[6, 5, 6, 6, 3, 6, 0, 1, 28, 0, 9, 0, 0, 2, 0, 1, 0, 0]' : 0.209867}", "{'[6, 5, 6, 6, 3, 6, 0, 1, 28, 0, 9, 0, 0, 2, 0, 1, 0, 0]' : 0.209384}", "{'[6, 5, 6, 6, 3, 6, 0, 1, 28, 0, 9, 0, 0, 2, 0, 1, 0, 0]' : 0.209661}"]
returning from 'run': {'[6, 5, 6, 6, 3, 6, 0, 1, 28, 0, 9, 0, 0, 2, 0, 1, 0, 0]': ([0.243135, 0.242998, 0.229445, 0.209361, 0.209371, 0.20951, 0.209518, 0.209412, 0.209454, 0.209329, 0.212332, 0.215576, 0.214961, 0.209479, 0.209544, 0.209407, 0.20935, 0.209628, 0.209396, 0.208121, 0.215039, 0.209377, 0.209461, 0.209264, 0.210008, 0.209432, 0.209719, 0.209867, 0.209384, 0.209661], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 5, 6, 6, 3, 6, 0, 1, 28, 0, 9, 0, 0, 2, 0, 1, 0, 0]': ([0.243135, 0.242998, 0.229445, 0.209361, 0.209371, 0.20951, 0.209518, 0.209412, 0.209454, 0.209329, 0.212332, 0.215576, 0.214961, 0.209479, 0.209544, 0.209407, 0.20935, 0.209628, 0.209396, 0.208121, 0.215039, 0.209377, 0.209461, 0.209264, 0.210008, 0.209432, 0.209719, 0.209867, 0.209384, 0.209661], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	3
        Additions: 		4349
        Multiplications: 	2176
        Divisions: 		0
        Logical: 		0
        Reads: 			8056
        Writes: 		1246
        Comparisons:		8
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest84.exe __orio_perftest84.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest84.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest84.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest84.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest84.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Complete design, with measurements:
     T1_I T1_J T1_K T2_I T2_K ACOPY_x U_I U_J U_K RT_I RT_J RT_K VEC1 VEC2
80      6    2    2    5    0       0   2   4   0    2    0    0    0    0
295     6    0    2    0    5       1  18   0  25    0    0    0    1    0
305     6    0    0    5    1       0   3   0   0    1    0    1    1    1
873     2    4    3    6    2       1  29   0  29    1    0    1    0    0
955     2    1    1    3    0       1   0   0   0    1    0    0    1    0
1044    1    0    0    6    6       1   0   6   7    0    0    0    1    1
1213    3    5    6    0    0       0  22  29   0    0    0    0    0    0
1376    0    4    0    1    6       0   0  26  14    2    0    0    0    1
1440    1    0    6    0    6       0  25  29   0    0    1    0    0    0
1727    1    2    0    0    6       1   0  15  22    1    0    0    1    0
1745    0    2    6    1    0       1   0   7   3    0    1    1    1    0
1898    0    1    3    1    1       1   0  20  28    1    0    0    0    1
2508    2    2    4    0    6       0   0   1   0    0    1    1    0    1
2559    4    0    6    6    0       1  15   0  14    2    0    0    0    1
2730    5    4    2    5    6       0  27   0   7    0    2    0    1    1
2861    0    0    5    2    5       0  29  23   0    0    0    1    0    0
2895    2    2    0    5    2       1  29   3   0    2    0    0    1    1
3141    6    5    0    4    1       1   0  29  10    0    0    1    0    1
3152    2    2    6    4    6       1  11   8   0    0    0    0    1    0
3184    0    4    6    5    5       0   2   0  28    2    0    0    1    0
3189    3    2    2    6    0       1   0  29  29    0    1    1    0    0
3265    3    5    1    0    1       0   3   5   0    1    0    1    1    1
3292    6    1    0    6    2       0  29  27   0    1    1    0    1    0
3422    4    0    0    6    2       0   1   0  22    0    0    0    0    1
3444    1    1    2    2    6       0   6   0   5    1    0    1    0    1
3474    0    5    2    6    1       0   0   6   9    0    1    0    1    0
3520    5    4    6    4    5       0   0  27  26    0    1    1    1    1
3521    3    5    0    2    0       1  23   4   0    0    1    0    0    1
3665    6    5    6    6    6       0   0   9   0    0    2    0    0    0
      cost_mean
80   0.15601697
295  0.21113063
305  0.09965203
873  0.09681664
955  0.10019930
1044 0.25143870
1213 0.17601247
1376 0.17638103
1440 0.22982520
1727 0.11508747
1745 0.20899910
1898 0.10275650
2508 0.19903207
2559 0.14113513
2730 0.19461813
2861 0.19566663
2895 0.15164737
3141 0.22300613
3152 0.20897940
3184 0.17749480
3189 0.23119260
3265 0.10693760
3292 0.11572210
3422 0.18019257
3444 0.10324403
3474 0.23718200
3520 0.19795397
3521 0.15719770
3665 0.21301797

Heteroscedasticity Test p-value: 0.15795621549
Regression Step:                Df   Sum Sq  Mean Sq F value   Pr(>F)    
T1_I             1 0.000062 0.000062   0.491 0.522260    
T1_J             1 0.000773 0.000773   6.108 0.068847 .  
T1_K             1 0.005636 0.005636  44.554 0.002618 ** 
T2_I             1 0.001306 0.001306  10.329 0.032470 *  
T2_K             1 0.005332 0.005332  42.152 0.002902 ** 
ACOPY_x          1 0.000872 0.000872   6.893 0.058460 .  
U_I              1 0.001253 0.001253   9.905 0.034607 *  
U_J              1 0.005229 0.005229  41.337 0.003009 ** 
U_K              1 0.002078 0.002078  16.424 0.015441 *  
RT_I             1 0.014325 0.014325 113.255 0.000441 ***
RT_J             1 0.000033 0.000033   0.263 0.635235    
RT_K             1 0.002149 0.002149  16.991 0.014588 *  
VEC1             1 0.000038 0.000038   0.301 0.612459    
VEC2             1 0.000032 0.000032   0.253 0.641387    
I(1/(1 + T1_I))  1 0.001809 0.001809  14.301 0.019408 *  
I(1/(1 + T1_J))  1 0.001482 0.001482  11.720 0.026696 *  
I(1/(1 + T1_K))  1 0.000215 0.000215   1.700 0.262203    
I(1/(1 + T2_I))  1 0.002416 0.002416  19.098 0.011967 *  
I(1/(1 + T2_K))  1 0.004920 0.004920  38.899 0.003367 ** 
I(1/(1 + U_I))   1 0.000115 0.000115   0.910 0.394233    
I(1/(1 + U_J))   1 0.000261 0.000261   2.066 0.223949    
I(1/(1 + U_K))   1 0.000003 0.000003   0.022 0.888175    
I(1/(1 + RT_I))  1 0.015620 0.015620 123.492 0.000373 ***
I(1/(1 + RT_J))  1 0.000117 0.000117   0.923 0.390989    
Residuals        4 0.000506 0.000126                     
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Predicting Best
Generating valid search space of size 3700 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Valid coordinates: 740
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Valid coordinates: 1480
Tested coordinates: 70000
Tested coordinates: 80000
Tested coordinates: 90000
Valid coordinates: 2220
Tested coordinates: 100000
Tested coordinates: 110000
Tested coordinates: 120000
Valid coordinates: 2960
Tested coordinates: 130000
Tested coordinates: 140000
Tested coordinates: 150000
Valid coordinates: 3700
Valid/Tested configurations: 3700/157952
Generated Search Space:
NULL
Identical predictions (tol = 1e-5): 1
Getting Best from Design
Response: ['cost_mean']
Design Names:  [1] "T1_I"      "T1_J"      "T1_K"      "T2_I"      "T2_K"      "ACOPY_x"  
 [7] "U_I"       "U_J"       "U_K"       "RT_I"      "RT_J"      "RT_K"     
[13] "VEC1"      "VEC2"      "cost_mean"

Design Response:       cost_mean
80   0.15601697
295  0.21113063
305  0.09965203
873  0.09681664
955  0.10019930
1044 0.25143870
1213 0.17601247
1376 0.17638103
1440 0.22982520
1727 0.11508747
1745 0.20899910
1898 0.10275650
2508 0.19903207
2559 0.14113513
2730 0.19461813
2861 0.19566663
2895 0.15164737
3141 0.22300613
3152 0.20897940
3184 0.17749480
3189 0.23119260
3265 0.10693760
3292 0.11572210
3422 0.18019257
3444 0.10324403
3474 0.23718200
3520 0.19795397
3521 0.15719770
3665 0.21301797

Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_K', 'ACOPY_x', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Getting fixed variables
Pruning Model
Best Predicted:     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
481    1    0    6    2    3    0       0       1   28  29   0  24    1    0
    RT_K SCR VEC1 VEC2
481    1   1    0    1

Best From Design: [2, 4, 3, 6, 3, 2, 1, 1, 28, 29, 0, 29, 1, 0, 1, 1, 0, 0]
Pruned Factors: ['T1_I', 'T1_J', 'ACOPY_x', 'U_I', 'RT_J', 'VEC1', 'VEC2']
Fixed Factors: {'ACOPY_y': 1, 'RT_K': 1, 'RT_I': 1, 'T1_K': 6, 'U_K': 24, 'U_J': 0, 'T2_I': 2, 'T2_K': 0, 'T2_J': 3, 'U1_I': 28, 'SCR': 1}
Length of requested configs: 1
Result was on Database, Returning Now
Starting Point (-O3):
0.16283083333333334
Predicted Best Point:
[1, 0, 6, 2, 3, 0, 0, 1, 28, 29, 0, 24, 1, 0, 1, 1, 0, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	83
        Max loop nest depth: 	5
        Additions: 		1810
        Multiplications: 	702
        Divisions: 		0
        Logical: 		0
        Reads: 			3883
        Writes: 		777
        Comparisons:		83
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest85.exe __orio_perftest85.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest85.exe  
Program Test Output: 
{'[1, 0, 6, 2, 3, 0, 0, 1, 28, 29, 0, 24, 1, 0, 1, 1, 0, 1]' : 0.114095}
{'[1, 0, 6, 2, 3, 0, 0, 1, 28, 29, 0, 24, 1, 0, 1, 1, 0, 1]' : 0.113958}
{'[1, 0, 6, 2, 3, 0, 0, 1, 28, 29, 0, 24, 1, 0, 1, 1, 0, 1]' : 0.112489}
{'[1, 0, 6, 2, 3, 0, 0, 1, 28, 29, 0, 24, 1, 0, 1, 1, 0, 1]' : 0.101045}
{'[1, 0, 6, 2, 3, 0, 0, 1, 28, 29, 0, 24, 1, 0, 1, 1, 0, 1]' : 0.100943}
{'[1, 0, 6, 2, 3, 0, 0, 1, 28, 29, 0, 24, 1, 0, 1, 1, 0, 1]' : 0.10027}
{'[1, 0, 6, 2, 3, 0, 0, 1, 28, 29, 0, 24, 1, 0, 1, 1, 0, 1]' : 0.100329}
{'[1, 0, 6, 2, 3, 0, 0, 1, 28, 29, 0, 24, 1, 0, 1, 1, 0, 1]' : 0.100514}
{'[1, 0, 6, 2, 3, 0, 0, 1, 28, 29, 0, 24, 1, 0, 1, 1, 0, 1]' : 0.100547}
{'[1, 0, 6, 2, 3, 0, 0, 1, 28, 29, 0, 24, 1, 0, 1, 1, 0, 1]' : 0.100479}
{'[1, 0, 6, 2, 3, 0, 0, 1, 28, 29, 0, 24, 1, 0, 1, 1, 0, 1]' : 0.10048}
{'[1, 0, 6, 2, 3, 0, 0, 1, 28, 29, 0, 24, 1, 0, 1, 1, 0, 1]' : 0.100472}
{'[1, 0, 6, 2, 3, 0, 0, 1, 28, 29, 0, 24, 1, 0, 1, 1, 0, 1]' : 0.100514}
{'[1, 0, 6, 2, 3, 0, 0, 1, 28, 29, 0, 24, 1, 0, 1, 1, 0, 1]' : 0.100278}
{'[1, 0, 6, 2, 3, 0, 0, 1, 28, 29, 0, 24, 1, 0, 1, 1, 0, 1]' : 0.100229}
{'[1, 0, 6, 2, 3, 0, 0, 1, 28, 29, 0, 24, 1, 0, 1, 1, 0, 1]' : 0.100274}
{'[1, 0, 6, 2, 3, 0, 0, 1, 28, 29, 0, 24, 1, 0, 1, 1, 0, 1]' : 0.10028}
{'[1, 0, 6, 2, 3, 0, 0, 1, 28, 29, 0, 24, 1, 0, 1, 1, 0, 1]' : 0.10033}
{'[1, 0, 6, 2, 3, 0, 0, 1, 28, 29, 0, 24, 1, 0, 1, 1, 0, 1]' : 0.100297}
{'[1, 0, 6, 2, 3, 0, 0, 1, 28, 29, 0, 24, 1, 0, 1, 1, 0, 1]' : 0.101117}
{'[1, 0, 6, 2, 3, 0, 0, 1, 28, 29, 0, 24, 1, 0, 1, 1, 0, 1]' : 0.100207}
{'[1, 0, 6, 2, 3, 0, 0, 1, 28, 29, 0, 24, 1, 0, 1, 1, 0, 1]' : 0.100271}
{'[1, 0, 6, 2, 3, 0, 0, 1, 28, 29, 0, 24, 1, 0, 1, 1, 0, 1]' : 0.100274}
{'[1, 0, 6, 2, 3, 0, 0, 1, 28, 29, 0, 24, 1, 0, 1, 1, 0, 1]' : 0.100284}
{'[1, 0, 6, 2, 3, 0, 0, 1, 28, 29, 0, 24, 1, 0, 1, 1, 0, 1]' : 0.100298}
{'[1, 0, 6, 2, 3, 0, 0, 1, 28, 29, 0, 24, 1, 0, 1, 1, 0, 1]' : 0.100234}
{'[1, 0, 6, 2, 3, 0, 0, 1, 28, 29, 0, 24, 1, 0, 1, 1, 0, 1]' : 0.100178}
{'[1, 0, 6, 2, 3, 0, 0, 1, 28, 29, 0, 24, 1, 0, 1, 1, 0, 1]' : 0.100294}
{'[1, 0, 6, 2, 3, 0, 0, 1, 28, 29, 0, 24, 1, 0, 1, 1, 0, 1]' : 0.100261}
{'[1, 0, 6, 2, 3, 0, 0, 1, 28, 29, 0, 24, 1, 0, 1, 1, 0, 1]' : 0.100276}

out:
 ["{'[1, 0, 6, 2, 3, 0, 0, 1, 28, 29, 0, 24, 1, 0, 1, 1, 0, 1]' : 0.114095}", "{'[1, 0, 6, 2, 3, 0, 0, 1, 28, 29, 0, 24, 1, 0, 1, 1, 0, 1]' : 0.113958}", "{'[1, 0, 6, 2, 3, 0, 0, 1, 28, 29, 0, 24, 1, 0, 1, 1, 0, 1]' : 0.112489}", "{'[1, 0, 6, 2, 3, 0, 0, 1, 28, 29, 0, 24, 1, 0, 1, 1, 0, 1]' : 0.101045}", "{'[1, 0, 6, 2, 3, 0, 0, 1, 28, 29, 0, 24, 1, 0, 1, 1, 0, 1]' : 0.100943}", "{'[1, 0, 6, 2, 3, 0, 0, 1, 28, 29, 0, 24, 1, 0, 1, 1, 0, 1]' : 0.10027}", "{'[1, 0, 6, 2, 3, 0, 0, 1, 28, 29, 0, 24, 1, 0, 1, 1, 0, 1]' : 0.100329}", "{'[1, 0, 6, 2, 3, 0, 0, 1, 28, 29, 0, 24, 1, 0, 1, 1, 0, 1]' : 0.100514}", "{'[1, 0, 6, 2, 3, 0, 0, 1, 28, 29, 0, 24, 1, 0, 1, 1, 0, 1]' : 0.100547}", "{'[1, 0, 6, 2, 3, 0, 0, 1, 28, 29, 0, 24, 1, 0, 1, 1, 0, 1]' : 0.100479}", "{'[1, 0, 6, 2, 3, 0, 0, 1, 28, 29, 0, 24, 1, 0, 1, 1, 0, 1]' : 0.10048}", "{'[1, 0, 6, 2, 3, 0, 0, 1, 28, 29, 0, 24, 1, 0, 1, 1, 0, 1]' : 0.100472}", "{'[1, 0, 6, 2, 3, 0, 0, 1, 28, 29, 0, 24, 1, 0, 1, 1, 0, 1]' : 0.100514}", "{'[1, 0, 6, 2, 3, 0, 0, 1, 28, 29, 0, 24, 1, 0, 1, 1, 0, 1]' : 0.100278}", "{'[1, 0, 6, 2, 3, 0, 0, 1, 28, 29, 0, 24, 1, 0, 1, 1, 0, 1]' : 0.100229}", "{'[1, 0, 6, 2, 3, 0, 0, 1, 28, 29, 0, 24, 1, 0, 1, 1, 0, 1]' : 0.100274}", "{'[1, 0, 6, 2, 3, 0, 0, 1, 28, 29, 0, 24, 1, 0, 1, 1, 0, 1]' : 0.10028}", "{'[1, 0, 6, 2, 3, 0, 0, 1, 28, 29, 0, 24, 1, 0, 1, 1, 0, 1]' : 0.10033}", "{'[1, 0, 6, 2, 3, 0, 0, 1, 28, 29, 0, 24, 1, 0, 1, 1, 0, 1]' : 0.100297}", "{'[1, 0, 6, 2, 3, 0, 0, 1, 28, 29, 0, 24, 1, 0, 1, 1, 0, 1]' : 0.101117}", "{'[1, 0, 6, 2, 3, 0, 0, 1, 28, 29, 0, 24, 1, 0, 1, 1, 0, 1]' : 0.100207}", "{'[1, 0, 6, 2, 3, 0, 0, 1, 28, 29, 0, 24, 1, 0, 1, 1, 0, 1]' : 0.100271}", "{'[1, 0, 6, 2, 3, 0, 0, 1, 28, 29, 0, 24, 1, 0, 1, 1, 0, 1]' : 0.100274}", "{'[1, 0, 6, 2, 3, 0, 0, 1, 28, 29, 0, 24, 1, 0, 1, 1, 0, 1]' : 0.100284}", "{'[1, 0, 6, 2, 3, 0, 0, 1, 28, 29, 0, 24, 1, 0, 1, 1, 0, 1]' : 0.100298}", "{'[1, 0, 6, 2, 3, 0, 0, 1, 28, 29, 0, 24, 1, 0, 1, 1, 0, 1]' : 0.100234}", "{'[1, 0, 6, 2, 3, 0, 0, 1, 28, 29, 0, 24, 1, 0, 1, 1, 0, 1]' : 0.100178}", "{'[1, 0, 6, 2, 3, 0, 0, 1, 28, 29, 0, 24, 1, 0, 1, 1, 0, 1]' : 0.100294}", "{'[1, 0, 6, 2, 3, 0, 0, 1, 28, 29, 0, 24, 1, 0, 1, 1, 0, 1]' : 0.100261}", "{'[1, 0, 6, 2, 3, 0, 0, 1, 28, 29, 0, 24, 1, 0, 1, 1, 0, 1]' : 0.100276}"]
returning from 'run': {'[1, 0, 6, 2, 3, 0, 0, 1, 28, 29, 0, 24, 1, 0, 1, 1, 0, 1]': ([0.114095, 0.113958, 0.112489, 0.101045, 0.100943, 0.10027, 0.100329, 0.100514, 0.100547, 0.100479, 0.10048, 0.100472, 0.100514, 0.100278, 0.100229, 0.100274, 0.10028, 0.10033, 0.100297, 0.101117, 0.100207, 0.100271, 0.100274, 0.100284, 0.100298, 0.100234, 0.100178, 0.100294, 0.100261, 0.100276], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 6, 2, 3, 0, 0, 1, 28, 29, 0, 24, 1, 0, 1, 1, 0, 1]': ([0.114095, 0.113958, 0.112489, 0.101045, 0.100943, 0.10027, 0.100329, 0.100514, 0.100547, 0.100479, 0.10048, 0.100472, 0.100514, 0.100278, 0.100229, 0.100274, 0.10028, 0.10033, 0.100297, 0.101117, 0.100207, 0.100271, 0.100274, 0.100284, 0.100298, 0.100234, 0.100178, 0.100294, 0.100261, 0.100276], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Design Best Point:
[2, 4, 3, 6, 3, 2, 1, 1, 28, 29, 0, 29, 1, 0, 1, 1, 0, 0]
Length of requested configs: 1
Result was on Database, Returning Now
Fixed Factors: {'ACOPY_y': 1, 'RT_K': 1, 'RT_I': 1, 'T1_K': 6, 'U_K': 24, 'U_J': 0, 'T2_I': 2, 'T2_K': 0, 'T2_J': 3, 'U1_I': 28, 'SCR': 1}
Slowdown (Design Best): 0.5945842157249086
Slowdown (Predicted Best): 0.6246804198631505
Budget: 69/180
Current Best Point: 
[3, 6, 6, 1, 5, 0, 0, 0, 0, 0, 10, 1, 1, 1, 0, 1, 0, 1]
Final Best Point: 
[3, 6, 6, 1, 5, 0, 0, 0, 0, 0, 10, 1, 1, 1, 0, 1, 0, 1]
Ending DOPT-ANOVA
Best Point: [3, 6, 6, 1, 5, 0, 0, 0, 0, 0, 10, 1, 1, 1, 0, 1, 0, 1]
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Speedup: 1.8551071123392278
----- end random search -----
----- begin random search summary -----
 total completed runs: 0
 total successful runs: 0
 total failed runs: 0
 speedup: 1.8551071123392278
----- end random search summary -----
----- begin summary -----
 best coordinate: [3, 6, 6, 1, 5, 0, 0, 0, 0, 0, 10, 1, 1, 1, 0, 1, 0, 1]={'ACOPY_x': False, 'ACOPY_y': False, 'RT_K': 1, 'T1_I': 64, 'T1_J': 512, 'T1_K': 512, 'U_K': 2, 'U_J': 11, 'U_I': 1, 'U1_I': 1, 'T2_K': 1, 'T2_J': 1024, 'T2_I': 64, 'VEC2': True, 'VEC1': False, 'RT_I': 8, 'SCR': True, 'RT_J': 8}, cost=8.777436e-02, transfer_time=inf, inputs=[('N', 10000)], search_time=-884.86, runs=69
----- end summary -----
Length of requested configs: 1
Result was on Database, Returning Now
----- the obtained best performance parameters -----
 ACOPY_x = False
 ACOPY_y = False
 RT_I = 8
 RT_J = 8
 RT_K = 1
 SCR = True
 T1_I = 64
 T1_J = 512
 T1_K = 512
 T2_I = 64
 T2_J = 1024
 T2_K = 1
 U1_I = 1
 U_I = 1
 U_J = 11
 U_K = 2
 VEC1 = False
 VEC2 = True
 cost_mean = 0.08777435666666661
 points = 69
 speedup_O3 = 1.8551071123392278
 technique = DLMT
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	5
        Additions: 		886
        Multiplications: 	414
        Divisions: 		0
        Logical: 		0
        Reads: 			1795
        Writes: 		314
        Comparisons:		20
        Gotos: 			0
        
----- finish optimizations -----

----- begin removing annotations from output-----
----- finished removing annotations from output-----

----- begin writing the output file(s) -----
--> writing output to: _atax2.src1.c
----- finished writing the output file(s) -----

====== END ORIO ======
