
====== START ORIO ======

----- begin reading the source file: atax2.src1.c -----
----- finished reading the source file -----

----- begin parsing annotations -----
----- finished parsing annotations -----

----- begin optimizations -----
Search_Space         = 8.234e+13
Number_of_Parameters = 18
Numeric_Parameters   = 13
Binary_Parameters    = 05
['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
[[1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [False, True], [False, True], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 8, 32], [1, 8, 32], [1, 8, 32], [False, True], [False, True], [False, True]]

----- begin empirical tuning for problem size -----
 N = 10000
Parameters: {'ACOPY_x': [0, 2], 'ACOPY_y': [0, 2], 'RT_K': [0, 3], 'T1_I': [0, 7], 'T1_J': [0, 7], 'T1_K': [0, 7], 'U_K': [0, 30], 'U_J': [0, 30], 'U_I': [0, 30], 'U1_I': [0, 30], 'T2_K': [0, 7], 'T2_J': [0, 7], 'T2_I': [0, 7], 'VEC2': [0, 2], 'VEC1': [0, 2], 'RT_I': [0, 3], 'SCR': [0, 2], 'RT_J': [0, 3]}
Parameter Range Values: {'ACOPY_x': [False, True], 'ACOPY_y': [False, True], 'RT_K': [1, 8, 32], 'T1_I': [1, 16, 32, 64, 128, 256, 512], 'T1_J': [1, 16, 32, 64, 128, 256, 512], 'T1_K': [1, 16, 32, 64, 128, 256, 512], 'U_K': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_J': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U1_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'T2_K': [1, 64, 128, 256, 512, 1024, 2048], 'T2_J': [1, 64, 128, 256, 512, 1024, 2048], 'T2_I': [1, 64, 128, 256, 512, 1024, 2048], 'VEC2': [False, True], 'VEC1': [False, True], 'RT_I': [1, 8, 32], 'SCR': [False, True], 'RT_J': [1, 8, 32]}

----- begin random search -----
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Inverse Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Starting DOPT-anova
Step 0
Generating valid search space of size 4600 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Valid coordinates: 920
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Valid coordinates: 1840
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Valid coordinates: 2760
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Tested coordinates: 150000
Valid coordinates: 3680
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Tested coordinates: 190000
Valid coordinates: 4600
Valid/Tested configurations: 4600/191214
Generated Search Space:
NULL
Clean Info:
Removed Factors: character(0)

Removed Inverse Factors: [1] "ACOPY_x" "ACOPY_y" "SCR"     "VEC1"    "VEC2"   

New Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
New Inverse Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
New Fixed Factors: {}
Full Model:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Fixed Factors: {}
Computing D-Optimal Design
Computing D-Optimal Design with 46 experiments
Design Formula:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Starting "optFederov" run
Using Search Space:
NULL
Data Dimensions: [1] 4600   18

     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
31      0    0    2    1    2    0       1       0    4  13   7   0    0    1
437     5    0    1    6    0    0       0       0   18  23   0  22    0    0
491     3    1    6    5    0    6       1       1   21   8   0   0    1    0
630     2    0    0    4    6    3       1       1    5   5  17   0    1    0
977     3    0    0    6    0    3       0       0    6   6   0  25    0    0
1013    5    0    0    3    0    6       1       1   11   0  28  28    0    0
1053    4    1    0    6    1    0       1       1   26  29   5   0    0    0
1093    0    0    5    6    2    5       1       0   14  28   0   4    2    0
1208    6    4    0    0    4    4       1       1    5  28  10   0    0    0
1246    2    0    0    3    6    6       0       0   13   0   3   4    1    1
1258    2    4    4    1    6    3       1       0   28  29   0  26    0    2
1273    2    6    0    6    6    5       0       1    2  15  25   0    0    1
1288    0    1    2    6    6    2       1       1    1  29  29   0    1    0
1290    3    1    5    1    3    6       1       0    6  28   0   4    0    0
1321    1    6    6    2    4    0       0       1   17   0   2  26    0    0
1497    3    1    1    0    1    1       0       0    0  27   0  23    0    1
1549    6    0    1    0    1    5       0       1    2   0   4   4    0    2
1691    0    2    0    6    1    4       1       0   24   0   9  27    0    1
1737    1    6    1    1    0    6       1       0   27  18  29   0    1    1
1970    0    0    6    1    0    4       0       1    0  28   6   0    2    0
2124    5    0    3    0    4    0       0       1   27   5  29   0    1    0
2271    5    0    5    3    6    4       1       1   25  10  26   0    0    1
2438    0    3    1    1    0    6       0       1   12   0   0  13    2    0
2505    2    4    2    0    0    1       1       0    7  19   0  21    0    2
2621    1    4    2    5    0    0       1       0    0   2  14   0    0    2
2747    0    0    0    2    5    1       1       0   11   4   0   9    0    0
2759    6    3    6    6    6    6       0       1    3   0   7  28    2    0
2790    4    6    6    0    0    5       1       0    0   0  15  28    0    0
2795    5    5    6    3    0    6       0       0   12  27  18   0    2    0
2907    4    1    6    0    3    5       0       0    3   3   0  14    1    0
3107    6    3    3    6    2    1       1       0    4   0  29   0    2    0
3263    6    2    4    0    6    2       0       0    7  25  11   0    0    0
3288    6    6    0    4    4    1       0       0   29   7   0  23    1    0
3472    4    4    3    2    0    2       1       1    4  20   0  23    1    1
3643    5    6    5    6    5    0       1       0    4  15   0   1    0    2
3646    2    0    5    0    0    6       0       0    8   0  25  28    0    2
3649    0    1    0    0    6    0       1       1    4  11   0  26    0    0
3660    1    1    6    0    0    0       0       1    4   0  26   5    2    0
3731    0    0    3    1    0    5       0       1    1   0   0   0    0    1
3854    0    2    3    6    2    1       0       1   27   0   7   3    0    0
3933    1    4    1    6    2    6       0       1    0  12   0  27    0    0
3975    4    6    0    3    6    1       1       1    0   0   0   2    1    0
4000    2    6    2    5    4    5       1       1   26   0  29  29    1    0
4032    4    6    4    6    5    6       0       1   29   2   0   0    0    0
4210    6    1    6    6    0    6       0       0   19   0  20   6    0    0
4407    3    3    0    6    3    1       0       1   15  22  15   0    0    2
     RT_K SCR VEC1 VEC2
31      1   1    1    1
437     1   0    1    0
491     0   1    0    1
630     0   1    1    0
977     2   1    1    1
1013    1   1    0    0
1053    1   1    0    0
1093    0   0    1    1
1208    2   1    0    1
1246    0   0    0    1
1258    0   1    0    0
1273    1   0    1    0
1288    1   1    1    0
1290    0   0    1    1
1321    2   0    1    1
1497    1   0    0    1
1549    0   0    0    0
1691    0   1    1    0
1737    0   1    0    0
1970    0   0    1    0
2124    0   1    1    0
2271    0   0    0    1
2438    0   1    1    1
2505    0   0    1    0
2621    0   0    1    1
2747    1   1    0    0
2759    0   0    1    0
2790    1   1    1    1
2795    0   0    0    0
2907    1   0    0    1
3107    0   1    0    1
3263    0   1    0    1
3288    1   0    0    0
3472    0   0    1    0
3643    0   1    0    0
3646    0   0    0    0
3649    2   0    0    1
3660    0   1    0    0
3731    1   1    0    0
3854    0   0    0    0
3933    0   1    0    0
3975    0   1    1    1
4000    0   0    1    1
4032    2   0    1    0
4210    2   1    0    1
4407    0   0    1    1

D-Efficiency Approximation: [1] 0.363

Measuring design of size 46
Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Length of requested configs: 1
Code stats:
        Number of loops: 	30
        Max loop nest depth: 	4
        Additions: 		1144
        Multiplications: 	510
        Divisions: 		0
        Logical: 		0
        Reads: 			2353
        Writes: 		434
        Comparisons:		30
        Gotos: 			0
        
 building the original code:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -DORIGINAL -o __orio_perftest_original.exe __orio_perftest1.c timer_cpu.o -lm
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest1.exe __orio_perftest1.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest1.exe  
Program Test Output: 
{'[0, 0, 2, 1, 2, 0, 1, 0, 4, 13, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.14293}
{'[0, 0, 2, 1, 2, 0, 1, 0, 4, 13, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.136676}
{'[0, 0, 2, 1, 2, 0, 1, 0, 4, 13, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.120633}
{'[0, 0, 2, 1, 2, 0, 1, 0, 4, 13, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.120398}
{'[0, 0, 2, 1, 2, 0, 1, 0, 4, 13, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.120364}
{'[0, 0, 2, 1, 2, 0, 1, 0, 4, 13, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.120454}
{'[0, 0, 2, 1, 2, 0, 1, 0, 4, 13, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.120488}
{'[0, 0, 2, 1, 2, 0, 1, 0, 4, 13, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.12035}
{'[0, 0, 2, 1, 2, 0, 1, 0, 4, 13, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.120352}
{'[0, 0, 2, 1, 2, 0, 1, 0, 4, 13, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.120243}
{'[0, 0, 2, 1, 2, 0, 1, 0, 4, 13, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.120556}
{'[0, 0, 2, 1, 2, 0, 1, 0, 4, 13, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.120458}
{'[0, 0, 2, 1, 2, 0, 1, 0, 4, 13, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.120349}
{'[0, 0, 2, 1, 2, 0, 1, 0, 4, 13, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.120306}
{'[0, 0, 2, 1, 2, 0, 1, 0, 4, 13, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.120939}
{'[0, 0, 2, 1, 2, 0, 1, 0, 4, 13, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.120277}
{'[0, 0, 2, 1, 2, 0, 1, 0, 4, 13, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.120456}
{'[0, 0, 2, 1, 2, 0, 1, 0, 4, 13, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.120314}
{'[0, 0, 2, 1, 2, 0, 1, 0, 4, 13, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.120296}
{'[0, 0, 2, 1, 2, 0, 1, 0, 4, 13, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.120441}
{'[0, 0, 2, 1, 2, 0, 1, 0, 4, 13, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.120287}
{'[0, 0, 2, 1, 2, 0, 1, 0, 4, 13, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.120345}
{'[0, 0, 2, 1, 2, 0, 1, 0, 4, 13, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.120333}
{'[0, 0, 2, 1, 2, 0, 1, 0, 4, 13, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.120645}
{'[0, 0, 2, 1, 2, 0, 1, 0, 4, 13, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.120355}
{'[0, 0, 2, 1, 2, 0, 1, 0, 4, 13, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.120685}
{'[0, 0, 2, 1, 2, 0, 1, 0, 4, 13, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.120254}
{'[0, 0, 2, 1, 2, 0, 1, 0, 4, 13, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.121233}
{'[0, 0, 2, 1, 2, 0, 1, 0, 4, 13, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.120294}
{'[0, 0, 2, 1, 2, 0, 1, 0, 4, 13, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.120295}

out:
 ["{'[0, 0, 2, 1, 2, 0, 1, 0, 4, 13, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.14293}", "{'[0, 0, 2, 1, 2, 0, 1, 0, 4, 13, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.136676}", "{'[0, 0, 2, 1, 2, 0, 1, 0, 4, 13, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.120633}", "{'[0, 0, 2, 1, 2, 0, 1, 0, 4, 13, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.120398}", "{'[0, 0, 2, 1, 2, 0, 1, 0, 4, 13, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.120364}", "{'[0, 0, 2, 1, 2, 0, 1, 0, 4, 13, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.120454}", "{'[0, 0, 2, 1, 2, 0, 1, 0, 4, 13, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.120488}", "{'[0, 0, 2, 1, 2, 0, 1, 0, 4, 13, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.12035}", "{'[0, 0, 2, 1, 2, 0, 1, 0, 4, 13, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.120352}", "{'[0, 0, 2, 1, 2, 0, 1, 0, 4, 13, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.120243}", "{'[0, 0, 2, 1, 2, 0, 1, 0, 4, 13, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.120556}", "{'[0, 0, 2, 1, 2, 0, 1, 0, 4, 13, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.120458}", "{'[0, 0, 2, 1, 2, 0, 1, 0, 4, 13, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.120349}", "{'[0, 0, 2, 1, 2, 0, 1, 0, 4, 13, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.120306}", "{'[0, 0, 2, 1, 2, 0, 1, 0, 4, 13, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.120939}", "{'[0, 0, 2, 1, 2, 0, 1, 0, 4, 13, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.120277}", "{'[0, 0, 2, 1, 2, 0, 1, 0, 4, 13, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.120456}", "{'[0, 0, 2, 1, 2, 0, 1, 0, 4, 13, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.120314}", "{'[0, 0, 2, 1, 2, 0, 1, 0, 4, 13, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.120296}", "{'[0, 0, 2, 1, 2, 0, 1, 0, 4, 13, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.120441}", "{'[0, 0, 2, 1, 2, 0, 1, 0, 4, 13, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.120287}", "{'[0, 0, 2, 1, 2, 0, 1, 0, 4, 13, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.120345}", "{'[0, 0, 2, 1, 2, 0, 1, 0, 4, 13, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.120333}", "{'[0, 0, 2, 1, 2, 0, 1, 0, 4, 13, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.120645}", "{'[0, 0, 2, 1, 2, 0, 1, 0, 4, 13, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.120355}", "{'[0, 0, 2, 1, 2, 0, 1, 0, 4, 13, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.120685}", "{'[0, 0, 2, 1, 2, 0, 1, 0, 4, 13, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.120254}", "{'[0, 0, 2, 1, 2, 0, 1, 0, 4, 13, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.121233}", "{'[0, 0, 2, 1, 2, 0, 1, 0, 4, 13, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.120294}", "{'[0, 0, 2, 1, 2, 0, 1, 0, 4, 13, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.120295}"]
returning from 'run': {'[0, 0, 2, 1, 2, 0, 1, 0, 4, 13, 7, 0, 0, 1, 1, 1, 1, 1]': ([0.14293, 0.136676, 0.120633, 0.120398, 0.120364, 0.120454, 0.120488, 0.12035, 0.120352, 0.120243, 0.120556, 0.120458, 0.120349, 0.120306, 0.120939, 0.120277, 0.120456, 0.120314, 0.120296, 0.120441, 0.120287, 0.120345, 0.120333, 0.120645, 0.120355, 0.120685, 0.120254, 0.121233, 0.120294, 0.120295], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 2, 1, 2, 0, 1, 0, 4, 13, 7, 0, 0, 1, 1, 1, 1, 1]': ([0.14293, 0.136676, 0.120633, 0.120398, 0.120364, 0.120454, 0.120488, 0.12035, 0.120352, 0.120243, 0.120556, 0.120458, 0.120349, 0.120306, 0.120939, 0.120277, 0.120456, 0.120314, 0.120296, 0.120441, 0.120287, 0.120345, 0.120333, 0.120645, 0.120355, 0.120685, 0.120254, 0.121233, 0.120294, 0.120295], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	62
        Max loop nest depth: 	5
        Additions: 		5851
        Multiplications: 	1650
        Divisions: 		0
        Logical: 		0
        Reads: 			8872
        Writes: 		997
        Comparisons:		62
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest2.exe __orio_perftest2.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest2.exe  
Program Test Output: 
{'[5, 0, 1, 6, 0, 0, 0, 0, 18, 23, 0, 22, 0, 0, 1, 0, 1, 0]' : 0.147893}
{'[5, 0, 1, 6, 0, 0, 0, 0, 18, 23, 0, 22, 0, 0, 1, 0, 1, 0]' : 0.147841}
{'[5, 0, 1, 6, 0, 0, 0, 0, 18, 23, 0, 22, 0, 0, 1, 0, 1, 0]' : 0.147493}
{'[5, 0, 1, 6, 0, 0, 0, 0, 18, 23, 0, 22, 0, 0, 1, 0, 1, 0]' : 0.147631}
{'[5, 0, 1, 6, 0, 0, 0, 0, 18, 23, 0, 22, 0, 0, 1, 0, 1, 0]' : 0.148105}
{'[5, 0, 1, 6, 0, 0, 0, 0, 18, 23, 0, 22, 0, 0, 1, 0, 1, 0]' : 0.147966}
{'[5, 0, 1, 6, 0, 0, 0, 0, 18, 23, 0, 22, 0, 0, 1, 0, 1, 0]' : 0.14748}
{'[5, 0, 1, 6, 0, 0, 0, 0, 18, 23, 0, 22, 0, 0, 1, 0, 1, 0]' : 0.147859}
{'[5, 0, 1, 6, 0, 0, 0, 0, 18, 23, 0, 22, 0, 0, 1, 0, 1, 0]' : 0.147682}
{'[5, 0, 1, 6, 0, 0, 0, 0, 18, 23, 0, 22, 0, 0, 1, 0, 1, 0]' : 0.147703}
{'[5, 0, 1, 6, 0, 0, 0, 0, 18, 23, 0, 22, 0, 0, 1, 0, 1, 0]' : 0.147559}
{'[5, 0, 1, 6, 0, 0, 0, 0, 18, 23, 0, 22, 0, 0, 1, 0, 1, 0]' : 0.147876}
{'[5, 0, 1, 6, 0, 0, 0, 0, 18, 23, 0, 22, 0, 0, 1, 0, 1, 0]' : 0.14775}
{'[5, 0, 1, 6, 0, 0, 0, 0, 18, 23, 0, 22, 0, 0, 1, 0, 1, 0]' : 0.1479}
{'[5, 0, 1, 6, 0, 0, 0, 0, 18, 23, 0, 22, 0, 0, 1, 0, 1, 0]' : 0.147754}
{'[5, 0, 1, 6, 0, 0, 0, 0, 18, 23, 0, 22, 0, 0, 1, 0, 1, 0]' : 0.147669}
{'[5, 0, 1, 6, 0, 0, 0, 0, 18, 23, 0, 22, 0, 0, 1, 0, 1, 0]' : 0.147616}
{'[5, 0, 1, 6, 0, 0, 0, 0, 18, 23, 0, 22, 0, 0, 1, 0, 1, 0]' : 0.14779}
{'[5, 0, 1, 6, 0, 0, 0, 0, 18, 23, 0, 22, 0, 0, 1, 0, 1, 0]' : 0.147725}
{'[5, 0, 1, 6, 0, 0, 0, 0, 18, 23, 0, 22, 0, 0, 1, 0, 1, 0]' : 0.147731}
{'[5, 0, 1, 6, 0, 0, 0, 0, 18, 23, 0, 22, 0, 0, 1, 0, 1, 0]' : 0.147973}
{'[5, 0, 1, 6, 0, 0, 0, 0, 18, 23, 0, 22, 0, 0, 1, 0, 1, 0]' : 0.148151}
{'[5, 0, 1, 6, 0, 0, 0, 0, 18, 23, 0, 22, 0, 0, 1, 0, 1, 0]' : 0.147612}
{'[5, 0, 1, 6, 0, 0, 0, 0, 18, 23, 0, 22, 0, 0, 1, 0, 1, 0]' : 0.147571}
{'[5, 0, 1, 6, 0, 0, 0, 0, 18, 23, 0, 22, 0, 0, 1, 0, 1, 0]' : 0.147634}
{'[5, 0, 1, 6, 0, 0, 0, 0, 18, 23, 0, 22, 0, 0, 1, 0, 1, 0]' : 0.14774}
{'[5, 0, 1, 6, 0, 0, 0, 0, 18, 23, 0, 22, 0, 0, 1, 0, 1, 0]' : 0.147596}
{'[5, 0, 1, 6, 0, 0, 0, 0, 18, 23, 0, 22, 0, 0, 1, 0, 1, 0]' : 0.147889}
{'[5, 0, 1, 6, 0, 0, 0, 0, 18, 23, 0, 22, 0, 0, 1, 0, 1, 0]' : 0.147772}
{'[5, 0, 1, 6, 0, 0, 0, 0, 18, 23, 0, 22, 0, 0, 1, 0, 1, 0]' : 0.14766}

out:
 ["{'[5, 0, 1, 6, 0, 0, 0, 0, 18, 23, 0, 22, 0, 0, 1, 0, 1, 0]' : 0.147893}", "{'[5, 0, 1, 6, 0, 0, 0, 0, 18, 23, 0, 22, 0, 0, 1, 0, 1, 0]' : 0.147841}", "{'[5, 0, 1, 6, 0, 0, 0, 0, 18, 23, 0, 22, 0, 0, 1, 0, 1, 0]' : 0.147493}", "{'[5, 0, 1, 6, 0, 0, 0, 0, 18, 23, 0, 22, 0, 0, 1, 0, 1, 0]' : 0.147631}", "{'[5, 0, 1, 6, 0, 0, 0, 0, 18, 23, 0, 22, 0, 0, 1, 0, 1, 0]' : 0.148105}", "{'[5, 0, 1, 6, 0, 0, 0, 0, 18, 23, 0, 22, 0, 0, 1, 0, 1, 0]' : 0.147966}", "{'[5, 0, 1, 6, 0, 0, 0, 0, 18, 23, 0, 22, 0, 0, 1, 0, 1, 0]' : 0.14748}", "{'[5, 0, 1, 6, 0, 0, 0, 0, 18, 23, 0, 22, 0, 0, 1, 0, 1, 0]' : 0.147859}", "{'[5, 0, 1, 6, 0, 0, 0, 0, 18, 23, 0, 22, 0, 0, 1, 0, 1, 0]' : 0.147682}", "{'[5, 0, 1, 6, 0, 0, 0, 0, 18, 23, 0, 22, 0, 0, 1, 0, 1, 0]' : 0.147703}", "{'[5, 0, 1, 6, 0, 0, 0, 0, 18, 23, 0, 22, 0, 0, 1, 0, 1, 0]' : 0.147559}", "{'[5, 0, 1, 6, 0, 0, 0, 0, 18, 23, 0, 22, 0, 0, 1, 0, 1, 0]' : 0.147876}", "{'[5, 0, 1, 6, 0, 0, 0, 0, 18, 23, 0, 22, 0, 0, 1, 0, 1, 0]' : 0.14775}", "{'[5, 0, 1, 6, 0, 0, 0, 0, 18, 23, 0, 22, 0, 0, 1, 0, 1, 0]' : 0.1479}", "{'[5, 0, 1, 6, 0, 0, 0, 0, 18, 23, 0, 22, 0, 0, 1, 0, 1, 0]' : 0.147754}", "{'[5, 0, 1, 6, 0, 0, 0, 0, 18, 23, 0, 22, 0, 0, 1, 0, 1, 0]' : 0.147669}", "{'[5, 0, 1, 6, 0, 0, 0, 0, 18, 23, 0, 22, 0, 0, 1, 0, 1, 0]' : 0.147616}", "{'[5, 0, 1, 6, 0, 0, 0, 0, 18, 23, 0, 22, 0, 0, 1, 0, 1, 0]' : 0.14779}", "{'[5, 0, 1, 6, 0, 0, 0, 0, 18, 23, 0, 22, 0, 0, 1, 0, 1, 0]' : 0.147725}", "{'[5, 0, 1, 6, 0, 0, 0, 0, 18, 23, 0, 22, 0, 0, 1, 0, 1, 0]' : 0.147731}", "{'[5, 0, 1, 6, 0, 0, 0, 0, 18, 23, 0, 22, 0, 0, 1, 0, 1, 0]' : 0.147973}", "{'[5, 0, 1, 6, 0, 0, 0, 0, 18, 23, 0, 22, 0, 0, 1, 0, 1, 0]' : 0.148151}", "{'[5, 0, 1, 6, 0, 0, 0, 0, 18, 23, 0, 22, 0, 0, 1, 0, 1, 0]' : 0.147612}", "{'[5, 0, 1, 6, 0, 0, 0, 0, 18, 23, 0, 22, 0, 0, 1, 0, 1, 0]' : 0.147571}", "{'[5, 0, 1, 6, 0, 0, 0, 0, 18, 23, 0, 22, 0, 0, 1, 0, 1, 0]' : 0.147634}", "{'[5, 0, 1, 6, 0, 0, 0, 0, 18, 23, 0, 22, 0, 0, 1, 0, 1, 0]' : 0.14774}", "{'[5, 0, 1, 6, 0, 0, 0, 0, 18, 23, 0, 22, 0, 0, 1, 0, 1, 0]' : 0.147596}", "{'[5, 0, 1, 6, 0, 0, 0, 0, 18, 23, 0, 22, 0, 0, 1, 0, 1, 0]' : 0.147889}", "{'[5, 0, 1, 6, 0, 0, 0, 0, 18, 23, 0, 22, 0, 0, 1, 0, 1, 0]' : 0.147772}", "{'[5, 0, 1, 6, 0, 0, 0, 0, 18, 23, 0, 22, 0, 0, 1, 0, 1, 0]' : 0.14766}"]
returning from 'run': {'[5, 0, 1, 6, 0, 0, 0, 0, 18, 23, 0, 22, 0, 0, 1, 0, 1, 0]': ([0.147893, 0.147841, 0.147493, 0.147631, 0.148105, 0.147966, 0.14748, 0.147859, 0.147682, 0.147703, 0.147559, 0.147876, 0.14775, 0.1479, 0.147754, 0.147669, 0.147616, 0.14779, 0.147725, 0.147731, 0.147973, 0.148151, 0.147612, 0.147571, 0.147634, 0.14774, 0.147596, 0.147889, 0.147772, 0.14766], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 0, 1, 6, 0, 0, 0, 0, 18, 23, 0, 22, 0, 0, 1, 0, 1, 0]': ([0.147893, 0.147841, 0.147493, 0.147631, 0.148105, 0.147966, 0.14748, 0.147859, 0.147682, 0.147703, 0.147559, 0.147876, 0.14775, 0.1479, 0.147754, 0.147669, 0.147616, 0.14779, 0.147725, 0.147731, 0.147973, 0.148151, 0.147612, 0.147571, 0.147634, 0.14774, 0.147596, 0.147889, 0.147772, 0.14766], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	55
        Max loop nest depth: 	6
        Additions: 		365
        Multiplications: 	72
        Divisions: 		0
        Logical: 		0
        Reads: 			1001
        Writes: 		263
        Comparisons:		55
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest3.exe __orio_perftest3.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest3.exe  
Program Test Output: 
{'[3, 1, 6, 5, 0, 6, 1, 1, 21, 8, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.112761}
{'[3, 1, 6, 5, 0, 6, 1, 1, 21, 8, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.11278}
{'[3, 1, 6, 5, 0, 6, 1, 1, 21, 8, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.112602}
{'[3, 1, 6, 5, 0, 6, 1, 1, 21, 8, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.112584}
{'[3, 1, 6, 5, 0, 6, 1, 1, 21, 8, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.105542}
{'[3, 1, 6, 5, 0, 6, 1, 1, 21, 8, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0971889}
{'[3, 1, 6, 5, 0, 6, 1, 1, 21, 8, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0995331}
{'[3, 1, 6, 5, 0, 6, 1, 1, 21, 8, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0999599}
{'[3, 1, 6, 5, 0, 6, 1, 1, 21, 8, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0998042}
{'[3, 1, 6, 5, 0, 6, 1, 1, 21, 8, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0974169}
{'[3, 1, 6, 5, 0, 6, 1, 1, 21, 8, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0972371}
{'[3, 1, 6, 5, 0, 6, 1, 1, 21, 8, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.100189}
{'[3, 1, 6, 5, 0, 6, 1, 1, 21, 8, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0997031}
{'[3, 1, 6, 5, 0, 6, 1, 1, 21, 8, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.098031}
{'[3, 1, 6, 5, 0, 6, 1, 1, 21, 8, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.097295}
{'[3, 1, 6, 5, 0, 6, 1, 1, 21, 8, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0973198}
{'[3, 1, 6, 5, 0, 6, 1, 1, 21, 8, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0992}
{'[3, 1, 6, 5, 0, 6, 1, 1, 21, 8, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.099638}
{'[3, 1, 6, 5, 0, 6, 1, 1, 21, 8, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.100028}
{'[3, 1, 6, 5, 0, 6, 1, 1, 21, 8, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.098525}
{'[3, 1, 6, 5, 0, 6, 1, 1, 21, 8, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.097352}
{'[3, 1, 6, 5, 0, 6, 1, 1, 21, 8, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0990341}
{'[3, 1, 6, 5, 0, 6, 1, 1, 21, 8, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.099802}
{'[3, 1, 6, 5, 0, 6, 1, 1, 21, 8, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.099654}
{'[3, 1, 6, 5, 0, 6, 1, 1, 21, 8, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0987661}
{'[3, 1, 6, 5, 0, 6, 1, 1, 21, 8, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0973089}
{'[3, 1, 6, 5, 0, 6, 1, 1, 21, 8, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.100441}
{'[3, 1, 6, 5, 0, 6, 1, 1, 21, 8, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.101901}
{'[3, 1, 6, 5, 0, 6, 1, 1, 21, 8, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.101865}
{'[3, 1, 6, 5, 0, 6, 1, 1, 21, 8, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.100667}

out:
 ["{'[3, 1, 6, 5, 0, 6, 1, 1, 21, 8, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.112761}", "{'[3, 1, 6, 5, 0, 6, 1, 1, 21, 8, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.11278}", "{'[3, 1, 6, 5, 0, 6, 1, 1, 21, 8, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.112602}", "{'[3, 1, 6, 5, 0, 6, 1, 1, 21, 8, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.112584}", "{'[3, 1, 6, 5, 0, 6, 1, 1, 21, 8, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.105542}", "{'[3, 1, 6, 5, 0, 6, 1, 1, 21, 8, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0971889}", "{'[3, 1, 6, 5, 0, 6, 1, 1, 21, 8, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0995331}", "{'[3, 1, 6, 5, 0, 6, 1, 1, 21, 8, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0999599}", "{'[3, 1, 6, 5, 0, 6, 1, 1, 21, 8, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0998042}", "{'[3, 1, 6, 5, 0, 6, 1, 1, 21, 8, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0974169}", "{'[3, 1, 6, 5, 0, 6, 1, 1, 21, 8, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0972371}", "{'[3, 1, 6, 5, 0, 6, 1, 1, 21, 8, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.100189}", "{'[3, 1, 6, 5, 0, 6, 1, 1, 21, 8, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0997031}", "{'[3, 1, 6, 5, 0, 6, 1, 1, 21, 8, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.098031}", "{'[3, 1, 6, 5, 0, 6, 1, 1, 21, 8, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.097295}", "{'[3, 1, 6, 5, 0, 6, 1, 1, 21, 8, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0973198}", "{'[3, 1, 6, 5, 0, 6, 1, 1, 21, 8, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0992}", "{'[3, 1, 6, 5, 0, 6, 1, 1, 21, 8, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.099638}", "{'[3, 1, 6, 5, 0, 6, 1, 1, 21, 8, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.100028}", "{'[3, 1, 6, 5, 0, 6, 1, 1, 21, 8, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.098525}", "{'[3, 1, 6, 5, 0, 6, 1, 1, 21, 8, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.097352}", "{'[3, 1, 6, 5, 0, 6, 1, 1, 21, 8, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0990341}", "{'[3, 1, 6, 5, 0, 6, 1, 1, 21, 8, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.099802}", "{'[3, 1, 6, 5, 0, 6, 1, 1, 21, 8, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.099654}", "{'[3, 1, 6, 5, 0, 6, 1, 1, 21, 8, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0987661}", "{'[3, 1, 6, 5, 0, 6, 1, 1, 21, 8, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0973089}", "{'[3, 1, 6, 5, 0, 6, 1, 1, 21, 8, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.100441}", "{'[3, 1, 6, 5, 0, 6, 1, 1, 21, 8, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.101901}", "{'[3, 1, 6, 5, 0, 6, 1, 1, 21, 8, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.101865}", "{'[3, 1, 6, 5, 0, 6, 1, 1, 21, 8, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.100667}"]
returning from 'run': {'[3, 1, 6, 5, 0, 6, 1, 1, 21, 8, 0, 0, 1, 0, 0, 1, 0, 1]': ([0.112761, 0.11278, 0.112602, 0.112584, 0.105542, 0.0971889, 0.0995331, 0.0999599, 0.0998042, 0.0974169, 0.0972371, 0.100189, 0.0997031, 0.098031, 0.097295, 0.0973198, 0.0992, 0.099638, 0.100028, 0.098525, 0.097352, 0.0990341, 0.099802, 0.099654, 0.0987661, 0.0973089, 0.100441, 0.101901, 0.101865, 0.100667], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 1, 6, 5, 0, 6, 1, 1, 21, 8, 0, 0, 1, 0, 0, 1, 0, 1]': ([0.112761, 0.11278, 0.112602, 0.112584, 0.105542, 0.0971889, 0.0995331, 0.0999599, 0.0998042, 0.0974169, 0.0972371, 0.100189, 0.0997031, 0.098031, 0.097295, 0.0973198, 0.0992, 0.099638, 0.100028, 0.098525, 0.097352, 0.0990341, 0.099802, 0.099654, 0.0987661, 0.0973089, 0.100441, 0.101901, 0.101865, 0.100667], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	56
        Max loop nest depth: 	5
        Additions: 		1695
        Multiplications: 	600
        Divisions: 		0
        Logical: 		0
        Reads: 			3116
        Writes: 		509
        Comparisons:		56
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest4.exe __orio_perftest4.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest4.exe  
Program Test Output: 
{'[2, 0, 0, 4, 6, 3, 1, 1, 5, 5, 17, 0, 1, 0, 0, 1, 1, 0]' : 0.125033}
{'[2, 0, 0, 4, 6, 3, 1, 1, 5, 5, 17, 0, 1, 0, 0, 1, 1, 0]' : 0.124589}
{'[2, 0, 0, 4, 6, 3, 1, 1, 5, 5, 17, 0, 1, 0, 0, 1, 1, 0]' : 0.117604}
{'[2, 0, 0, 4, 6, 3, 1, 1, 5, 5, 17, 0, 1, 0, 0, 1, 1, 0]' : 0.107862}
{'[2, 0, 0, 4, 6, 3, 1, 1, 5, 5, 17, 0, 1, 0, 0, 1, 1, 0]' : 0.108143}
{'[2, 0, 0, 4, 6, 3, 1, 1, 5, 5, 17, 0, 1, 0, 0, 1, 1, 0]' : 0.108583}
{'[2, 0, 0, 4, 6, 3, 1, 1, 5, 5, 17, 0, 1, 0, 0, 1, 1, 0]' : 0.108642}
{'[2, 0, 0, 4, 6, 3, 1, 1, 5, 5, 17, 0, 1, 0, 0, 1, 1, 0]' : 0.108188}
{'[2, 0, 0, 4, 6, 3, 1, 1, 5, 5, 17, 0, 1, 0, 0, 1, 1, 0]' : 0.108513}
{'[2, 0, 0, 4, 6, 3, 1, 1, 5, 5, 17, 0, 1, 0, 0, 1, 1, 0]' : 0.108518}
{'[2, 0, 0, 4, 6, 3, 1, 1, 5, 5, 17, 0, 1, 0, 0, 1, 1, 0]' : 0.108165}
{'[2, 0, 0, 4, 6, 3, 1, 1, 5, 5, 17, 0, 1, 0, 0, 1, 1, 0]' : 0.108272}
{'[2, 0, 0, 4, 6, 3, 1, 1, 5, 5, 17, 0, 1, 0, 0, 1, 1, 0]' : 0.108267}
{'[2, 0, 0, 4, 6, 3, 1, 1, 5, 5, 17, 0, 1, 0, 0, 1, 1, 0]' : 0.109057}
{'[2, 0, 0, 4, 6, 3, 1, 1, 5, 5, 17, 0, 1, 0, 0, 1, 1, 0]' : 0.108196}
{'[2, 0, 0, 4, 6, 3, 1, 1, 5, 5, 17, 0, 1, 0, 0, 1, 1, 0]' : 0.10819}
{'[2, 0, 0, 4, 6, 3, 1, 1, 5, 5, 17, 0, 1, 0, 0, 1, 1, 0]' : 0.1085}
{'[2, 0, 0, 4, 6, 3, 1, 1, 5, 5, 17, 0, 1, 0, 0, 1, 1, 0]' : 0.108736}
{'[2, 0, 0, 4, 6, 3, 1, 1, 5, 5, 17, 0, 1, 0, 0, 1, 1, 0]' : 0.108526}
{'[2, 0, 0, 4, 6, 3, 1, 1, 5, 5, 17, 0, 1, 0, 0, 1, 1, 0]' : 0.108653}
{'[2, 0, 0, 4, 6, 3, 1, 1, 5, 5, 17, 0, 1, 0, 0, 1, 1, 0]' : 0.108435}
{'[2, 0, 0, 4, 6, 3, 1, 1, 5, 5, 17, 0, 1, 0, 0, 1, 1, 0]' : 0.107764}
{'[2, 0, 0, 4, 6, 3, 1, 1, 5, 5, 17, 0, 1, 0, 0, 1, 1, 0]' : 0.108109}
{'[2, 0, 0, 4, 6, 3, 1, 1, 5, 5, 17, 0, 1, 0, 0, 1, 1, 0]' : 0.108233}
{'[2, 0, 0, 4, 6, 3, 1, 1, 5, 5, 17, 0, 1, 0, 0, 1, 1, 0]' : 0.108127}
{'[2, 0, 0, 4, 6, 3, 1, 1, 5, 5, 17, 0, 1, 0, 0, 1, 1, 0]' : 0.108139}
{'[2, 0, 0, 4, 6, 3, 1, 1, 5, 5, 17, 0, 1, 0, 0, 1, 1, 0]' : 0.108181}
{'[2, 0, 0, 4, 6, 3, 1, 1, 5, 5, 17, 0, 1, 0, 0, 1, 1, 0]' : 0.108583}
{'[2, 0, 0, 4, 6, 3, 1, 1, 5, 5, 17, 0, 1, 0, 0, 1, 1, 0]' : 0.108568}
{'[2, 0, 0, 4, 6, 3, 1, 1, 5, 5, 17, 0, 1, 0, 0, 1, 1, 0]' : 0.108559}

out:
 ["{'[2, 0, 0, 4, 6, 3, 1, 1, 5, 5, 17, 0, 1, 0, 0, 1, 1, 0]' : 0.125033}", "{'[2, 0, 0, 4, 6, 3, 1, 1, 5, 5, 17, 0, 1, 0, 0, 1, 1, 0]' : 0.124589}", "{'[2, 0, 0, 4, 6, 3, 1, 1, 5, 5, 17, 0, 1, 0, 0, 1, 1, 0]' : 0.117604}", "{'[2, 0, 0, 4, 6, 3, 1, 1, 5, 5, 17, 0, 1, 0, 0, 1, 1, 0]' : 0.107862}", "{'[2, 0, 0, 4, 6, 3, 1, 1, 5, 5, 17, 0, 1, 0, 0, 1, 1, 0]' : 0.108143}", "{'[2, 0, 0, 4, 6, 3, 1, 1, 5, 5, 17, 0, 1, 0, 0, 1, 1, 0]' : 0.108583}", "{'[2, 0, 0, 4, 6, 3, 1, 1, 5, 5, 17, 0, 1, 0, 0, 1, 1, 0]' : 0.108642}", "{'[2, 0, 0, 4, 6, 3, 1, 1, 5, 5, 17, 0, 1, 0, 0, 1, 1, 0]' : 0.108188}", "{'[2, 0, 0, 4, 6, 3, 1, 1, 5, 5, 17, 0, 1, 0, 0, 1, 1, 0]' : 0.108513}", "{'[2, 0, 0, 4, 6, 3, 1, 1, 5, 5, 17, 0, 1, 0, 0, 1, 1, 0]' : 0.108518}", "{'[2, 0, 0, 4, 6, 3, 1, 1, 5, 5, 17, 0, 1, 0, 0, 1, 1, 0]' : 0.108165}", "{'[2, 0, 0, 4, 6, 3, 1, 1, 5, 5, 17, 0, 1, 0, 0, 1, 1, 0]' : 0.108272}", "{'[2, 0, 0, 4, 6, 3, 1, 1, 5, 5, 17, 0, 1, 0, 0, 1, 1, 0]' : 0.108267}", "{'[2, 0, 0, 4, 6, 3, 1, 1, 5, 5, 17, 0, 1, 0, 0, 1, 1, 0]' : 0.109057}", "{'[2, 0, 0, 4, 6, 3, 1, 1, 5, 5, 17, 0, 1, 0, 0, 1, 1, 0]' : 0.108196}", "{'[2, 0, 0, 4, 6, 3, 1, 1, 5, 5, 17, 0, 1, 0, 0, 1, 1, 0]' : 0.10819}", "{'[2, 0, 0, 4, 6, 3, 1, 1, 5, 5, 17, 0, 1, 0, 0, 1, 1, 0]' : 0.1085}", "{'[2, 0, 0, 4, 6, 3, 1, 1, 5, 5, 17, 0, 1, 0, 0, 1, 1, 0]' : 0.108736}", "{'[2, 0, 0, 4, 6, 3, 1, 1, 5, 5, 17, 0, 1, 0, 0, 1, 1, 0]' : 0.108526}", "{'[2, 0, 0, 4, 6, 3, 1, 1, 5, 5, 17, 0, 1, 0, 0, 1, 1, 0]' : 0.108653}", "{'[2, 0, 0, 4, 6, 3, 1, 1, 5, 5, 17, 0, 1, 0, 0, 1, 1, 0]' : 0.108435}", "{'[2, 0, 0, 4, 6, 3, 1, 1, 5, 5, 17, 0, 1, 0, 0, 1, 1, 0]' : 0.107764}", "{'[2, 0, 0, 4, 6, 3, 1, 1, 5, 5, 17, 0, 1, 0, 0, 1, 1, 0]' : 0.108109}", "{'[2, 0, 0, 4, 6, 3, 1, 1, 5, 5, 17, 0, 1, 0, 0, 1, 1, 0]' : 0.108233}", "{'[2, 0, 0, 4, 6, 3, 1, 1, 5, 5, 17, 0, 1, 0, 0, 1, 1, 0]' : 0.108127}", "{'[2, 0, 0, 4, 6, 3, 1, 1, 5, 5, 17, 0, 1, 0, 0, 1, 1, 0]' : 0.108139}", "{'[2, 0, 0, 4, 6, 3, 1, 1, 5, 5, 17, 0, 1, 0, 0, 1, 1, 0]' : 0.108181}", "{'[2, 0, 0, 4, 6, 3, 1, 1, 5, 5, 17, 0, 1, 0, 0, 1, 1, 0]' : 0.108583}", "{'[2, 0, 0, 4, 6, 3, 1, 1, 5, 5, 17, 0, 1, 0, 0, 1, 1, 0]' : 0.108568}", "{'[2, 0, 0, 4, 6, 3, 1, 1, 5, 5, 17, 0, 1, 0, 0, 1, 1, 0]' : 0.108559}"]
returning from 'run': {'[2, 0, 0, 4, 6, 3, 1, 1, 5, 5, 17, 0, 1, 0, 0, 1, 1, 0]': ([0.125033, 0.124589, 0.117604, 0.107862, 0.108143, 0.108583, 0.108642, 0.108188, 0.108513, 0.108518, 0.108165, 0.108272, 0.108267, 0.109057, 0.108196, 0.10819, 0.1085, 0.108736, 0.108526, 0.108653, 0.108435, 0.107764, 0.108109, 0.108233, 0.108127, 0.108139, 0.108181, 0.108583, 0.108568, 0.108559], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 0, 4, 6, 3, 1, 1, 5, 5, 17, 0, 1, 0, 0, 1, 1, 0]': ([0.125033, 0.124589, 0.117604, 0.107862, 0.108143, 0.108583, 0.108642, 0.108188, 0.108513, 0.108518, 0.108165, 0.108272, 0.108267, 0.109057, 0.108196, 0.10819, 0.1085, 0.108736, 0.108526, 0.108653, 0.108435, 0.107764, 0.108109, 0.108233, 0.108127, 0.108139, 0.108181, 0.108583, 0.108568, 0.108559], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	28
        Max loop nest depth: 	5
        Additions: 		2482
        Multiplications: 	960
        Divisions: 		0
        Logical: 		0
        Reads: 			5398
        Writes: 		1160
        Comparisons:		28
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest5.exe __orio_perftest5.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest5.exe  
Program Test Output: 
{'[3, 0, 0, 6, 0, 3, 0, 0, 6, 6, 0, 25, 0, 0, 2, 1, 1, 1]' : 0.116002}
{'[3, 0, 0, 6, 0, 3, 0, 0, 6, 6, 0, 25, 0, 0, 2, 1, 1, 1]' : 0.113473}
{'[3, 0, 0, 6, 0, 3, 0, 0, 6, 6, 0, 25, 0, 0, 2, 1, 1, 1]' : 0.113333}
{'[3, 0, 0, 6, 0, 3, 0, 0, 6, 6, 0, 25, 0, 0, 2, 1, 1, 1]' : 0.114854}
{'[3, 0, 0, 6, 0, 3, 0, 0, 6, 6, 0, 25, 0, 0, 2, 1, 1, 1]' : 0.117622}
{'[3, 0, 0, 6, 0, 3, 0, 0, 6, 6, 0, 25, 0, 0, 2, 1, 1, 1]' : 0.117132}
{'[3, 0, 0, 6, 0, 3, 0, 0, 6, 6, 0, 25, 0, 0, 2, 1, 1, 1]' : 0.116257}
{'[3, 0, 0, 6, 0, 3, 0, 0, 6, 6, 0, 25, 0, 0, 2, 1, 1, 1]' : 0.113622}
{'[3, 0, 0, 6, 0, 3, 0, 0, 6, 6, 0, 25, 0, 0, 2, 1, 1, 1]' : 0.113817}
{'[3, 0, 0, 6, 0, 3, 0, 0, 6, 6, 0, 25, 0, 0, 2, 1, 1, 1]' : 0.11654}
{'[3, 0, 0, 6, 0, 3, 0, 0, 6, 6, 0, 25, 0, 0, 2, 1, 1, 1]' : 0.116616}
{'[3, 0, 0, 6, 0, 3, 0, 0, 6, 6, 0, 25, 0, 0, 2, 1, 1, 1]' : 0.116149}
{'[3, 0, 0, 6, 0, 3, 0, 0, 6, 6, 0, 25, 0, 0, 2, 1, 1, 1]' : 0.113394}
{'[3, 0, 0, 6, 0, 3, 0, 0, 6, 6, 0, 25, 0, 0, 2, 1, 1, 1]' : 0.115769}
{'[3, 0, 0, 6, 0, 3, 0, 0, 6, 6, 0, 25, 0, 0, 2, 1, 1, 1]' : 0.116344}
{'[3, 0, 0, 6, 0, 3, 0, 0, 6, 6, 0, 25, 0, 0, 2, 1, 1, 1]' : 0.116204}
{'[3, 0, 0, 6, 0, 3, 0, 0, 6, 6, 0, 25, 0, 0, 2, 1, 1, 1]' : 0.114101}
{'[3, 0, 0, 6, 0, 3, 0, 0, 6, 6, 0, 25, 0, 0, 2, 1, 1, 1]' : 0.114917}
{'[3, 0, 0, 6, 0, 3, 0, 0, 6, 6, 0, 25, 0, 0, 2, 1, 1, 1]' : 0.116408}
{'[3, 0, 0, 6, 0, 3, 0, 0, 6, 6, 0, 25, 0, 0, 2, 1, 1, 1]' : 0.116506}
{'[3, 0, 0, 6, 0, 3, 0, 0, 6, 6, 0, 25, 0, 0, 2, 1, 1, 1]' : 0.115716}
{'[3, 0, 0, 6, 0, 3, 0, 0, 6, 6, 0, 25, 0, 0, 2, 1, 1, 1]' : 0.113776}
{'[3, 0, 0, 6, 0, 3, 0, 0, 6, 6, 0, 25, 0, 0, 2, 1, 1, 1]' : 0.113309}
{'[3, 0, 0, 6, 0, 3, 0, 0, 6, 6, 0, 25, 0, 0, 2, 1, 1, 1]' : 0.113491}
{'[3, 0, 0, 6, 0, 3, 0, 0, 6, 6, 0, 25, 0, 0, 2, 1, 1, 1]' : 0.114894}
{'[3, 0, 0, 6, 0, 3, 0, 0, 6, 6, 0, 25, 0, 0, 2, 1, 1, 1]' : 0.116325}
{'[3, 0, 0, 6, 0, 3, 0, 0, 6, 6, 0, 25, 0, 0, 2, 1, 1, 1]' : 0.116515}
{'[3, 0, 0, 6, 0, 3, 0, 0, 6, 6, 0, 25, 0, 0, 2, 1, 1, 1]' : 0.116272}
{'[3, 0, 0, 6, 0, 3, 0, 0, 6, 6, 0, 25, 0, 0, 2, 1, 1, 1]' : 0.114813}
{'[3, 0, 0, 6, 0, 3, 0, 0, 6, 6, 0, 25, 0, 0, 2, 1, 1, 1]' : 0.11382}

out:
 ["{'[3, 0, 0, 6, 0, 3, 0, 0, 6, 6, 0, 25, 0, 0, 2, 1, 1, 1]' : 0.116002}", "{'[3, 0, 0, 6, 0, 3, 0, 0, 6, 6, 0, 25, 0, 0, 2, 1, 1, 1]' : 0.113473}", "{'[3, 0, 0, 6, 0, 3, 0, 0, 6, 6, 0, 25, 0, 0, 2, 1, 1, 1]' : 0.113333}", "{'[3, 0, 0, 6, 0, 3, 0, 0, 6, 6, 0, 25, 0, 0, 2, 1, 1, 1]' : 0.114854}", "{'[3, 0, 0, 6, 0, 3, 0, 0, 6, 6, 0, 25, 0, 0, 2, 1, 1, 1]' : 0.117622}", "{'[3, 0, 0, 6, 0, 3, 0, 0, 6, 6, 0, 25, 0, 0, 2, 1, 1, 1]' : 0.117132}", "{'[3, 0, 0, 6, 0, 3, 0, 0, 6, 6, 0, 25, 0, 0, 2, 1, 1, 1]' : 0.116257}", "{'[3, 0, 0, 6, 0, 3, 0, 0, 6, 6, 0, 25, 0, 0, 2, 1, 1, 1]' : 0.113622}", "{'[3, 0, 0, 6, 0, 3, 0, 0, 6, 6, 0, 25, 0, 0, 2, 1, 1, 1]' : 0.113817}", "{'[3, 0, 0, 6, 0, 3, 0, 0, 6, 6, 0, 25, 0, 0, 2, 1, 1, 1]' : 0.11654}", "{'[3, 0, 0, 6, 0, 3, 0, 0, 6, 6, 0, 25, 0, 0, 2, 1, 1, 1]' : 0.116616}", "{'[3, 0, 0, 6, 0, 3, 0, 0, 6, 6, 0, 25, 0, 0, 2, 1, 1, 1]' : 0.116149}", "{'[3, 0, 0, 6, 0, 3, 0, 0, 6, 6, 0, 25, 0, 0, 2, 1, 1, 1]' : 0.113394}", "{'[3, 0, 0, 6, 0, 3, 0, 0, 6, 6, 0, 25, 0, 0, 2, 1, 1, 1]' : 0.115769}", "{'[3, 0, 0, 6, 0, 3, 0, 0, 6, 6, 0, 25, 0, 0, 2, 1, 1, 1]' : 0.116344}", "{'[3, 0, 0, 6, 0, 3, 0, 0, 6, 6, 0, 25, 0, 0, 2, 1, 1, 1]' : 0.116204}", "{'[3, 0, 0, 6, 0, 3, 0, 0, 6, 6, 0, 25, 0, 0, 2, 1, 1, 1]' : 0.114101}", "{'[3, 0, 0, 6, 0, 3, 0, 0, 6, 6, 0, 25, 0, 0, 2, 1, 1, 1]' : 0.114917}", "{'[3, 0, 0, 6, 0, 3, 0, 0, 6, 6, 0, 25, 0, 0, 2, 1, 1, 1]' : 0.116408}", "{'[3, 0, 0, 6, 0, 3, 0, 0, 6, 6, 0, 25, 0, 0, 2, 1, 1, 1]' : 0.116506}", "{'[3, 0, 0, 6, 0, 3, 0, 0, 6, 6, 0, 25, 0, 0, 2, 1, 1, 1]' : 0.115716}", "{'[3, 0, 0, 6, 0, 3, 0, 0, 6, 6, 0, 25, 0, 0, 2, 1, 1, 1]' : 0.113776}", "{'[3, 0, 0, 6, 0, 3, 0, 0, 6, 6, 0, 25, 0, 0, 2, 1, 1, 1]' : 0.113309}", "{'[3, 0, 0, 6, 0, 3, 0, 0, 6, 6, 0, 25, 0, 0, 2, 1, 1, 1]' : 0.113491}", "{'[3, 0, 0, 6, 0, 3, 0, 0, 6, 6, 0, 25, 0, 0, 2, 1, 1, 1]' : 0.114894}", "{'[3, 0, 0, 6, 0, 3, 0, 0, 6, 6, 0, 25, 0, 0, 2, 1, 1, 1]' : 0.116325}", "{'[3, 0, 0, 6, 0, 3, 0, 0, 6, 6, 0, 25, 0, 0, 2, 1, 1, 1]' : 0.116515}", "{'[3, 0, 0, 6, 0, 3, 0, 0, 6, 6, 0, 25, 0, 0, 2, 1, 1, 1]' : 0.116272}", "{'[3, 0, 0, 6, 0, 3, 0, 0, 6, 6, 0, 25, 0, 0, 2, 1, 1, 1]' : 0.114813}", "{'[3, 0, 0, 6, 0, 3, 0, 0, 6, 6, 0, 25, 0, 0, 2, 1, 1, 1]' : 0.11382}"]
returning from 'run': {'[3, 0, 0, 6, 0, 3, 0, 0, 6, 6, 0, 25, 0, 0, 2, 1, 1, 1]': ([0.116002, 0.113473, 0.113333, 0.114854, 0.117622, 0.117132, 0.116257, 0.113622, 0.113817, 0.11654, 0.116616, 0.116149, 0.113394, 0.115769, 0.116344, 0.116204, 0.114101, 0.114917, 0.116408, 0.116506, 0.115716, 0.113776, 0.113309, 0.113491, 0.114894, 0.116325, 0.116515, 0.116272, 0.114813, 0.11382], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 0, 0, 6, 0, 3, 0, 0, 6, 6, 0, 25, 0, 0, 2, 1, 1, 1]': ([0.116002, 0.113473, 0.113333, 0.114854, 0.117622, 0.117132, 0.116257, 0.113622, 0.113817, 0.11654, 0.116616, 0.116149, 0.113394, 0.115769, 0.116344, 0.116204, 0.114101, 0.114917, 0.116408, 0.116506, 0.115716, 0.113776, 0.113309, 0.113491, 0.114894, 0.116325, 0.116515, 0.116272, 0.114813, 0.11382], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = iii
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	4
        Additions: 		213
        Multiplications: 	76
        Divisions: 		0
        Logical: 		0
        Reads: 			465
        Writes: 		92
        Comparisons:		10
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest6.exe __orio_perftest6.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest6.exe  
Program Test Output: 
{'[5, 0, 0, 3, 0, 6, 1, 1, 11, 0, 28, 28, 0, 0, 1, 1, 0, 0]' : 0.251299}
{'[5, 0, 0, 3, 0, 6, 1, 1, 11, 0, 28, 28, 0, 0, 1, 1, 0, 0]' : 0.251079}
{'[5, 0, 0, 3, 0, 6, 1, 1, 11, 0, 28, 28, 0, 0, 1, 1, 0, 0]' : 0.251425}
{'[5, 0, 0, 3, 0, 6, 1, 1, 11, 0, 28, 28, 0, 0, 1, 1, 0, 0]' : 0.238789}
{'[5, 0, 0, 3, 0, 6, 1, 1, 11, 0, 28, 28, 0, 0, 1, 1, 0, 0]' : 0.216647}
{'[5, 0, 0, 3, 0, 6, 1, 1, 11, 0, 28, 28, 0, 0, 1, 1, 0, 0]' : 0.222465}
{'[5, 0, 0, 3, 0, 6, 1, 1, 11, 0, 28, 28, 0, 0, 1, 1, 0, 0]' : 0.221891}
{'[5, 0, 0, 3, 0, 6, 1, 1, 11, 0, 28, 28, 0, 0, 1, 1, 0, 0]' : 0.216915}
{'[5, 0, 0, 3, 0, 6, 1, 1, 11, 0, 28, 28, 0, 0, 1, 1, 0, 0]' : 0.216826}
{'[5, 0, 0, 3, 0, 6, 1, 1, 11, 0, 28, 28, 0, 0, 1, 1, 0, 0]' : 0.216796}
{'[5, 0, 0, 3, 0, 6, 1, 1, 11, 0, 28, 28, 0, 0, 1, 1, 0, 0]' : 0.216736}
{'[5, 0, 0, 3, 0, 6, 1, 1, 11, 0, 28, 28, 0, 0, 1, 1, 0, 0]' : 0.217082}
{'[5, 0, 0, 3, 0, 6, 1, 1, 11, 0, 28, 28, 0, 0, 1, 1, 0, 0]' : 0.216883}
{'[5, 0, 0, 3, 0, 6, 1, 1, 11, 0, 28, 28, 0, 0, 1, 1, 0, 0]' : 0.216875}
{'[5, 0, 0, 3, 0, 6, 1, 1, 11, 0, 28, 28, 0, 0, 1, 1, 0, 0]' : 0.216945}
{'[5, 0, 0, 3, 0, 6, 1, 1, 11, 0, 28, 28, 0, 0, 1, 1, 0, 0]' : 0.216645}
{'[5, 0, 0, 3, 0, 6, 1, 1, 11, 0, 28, 28, 0, 0, 1, 1, 0, 0]' : 0.216837}
{'[5, 0, 0, 3, 0, 6, 1, 1, 11, 0, 28, 28, 0, 0, 1, 1, 0, 0]' : 0.217074}
{'[5, 0, 0, 3, 0, 6, 1, 1, 11, 0, 28, 28, 0, 0, 1, 1, 0, 0]' : 0.217173}
{'[5, 0, 0, 3, 0, 6, 1, 1, 11, 0, 28, 28, 0, 0, 1, 1, 0, 0]' : 0.216749}
{'[5, 0, 0, 3, 0, 6, 1, 1, 11, 0, 28, 28, 0, 0, 1, 1, 0, 0]' : 0.216889}
{'[5, 0, 0, 3, 0, 6, 1, 1, 11, 0, 28, 28, 0, 0, 1, 1, 0, 0]' : 0.216947}
{'[5, 0, 0, 3, 0, 6, 1, 1, 11, 0, 28, 28, 0, 0, 1, 1, 0, 0]' : 0.21686}
{'[5, 0, 0, 3, 0, 6, 1, 1, 11, 0, 28, 28, 0, 0, 1, 1, 0, 0]' : 0.21698}
{'[5, 0, 0, 3, 0, 6, 1, 1, 11, 0, 28, 28, 0, 0, 1, 1, 0, 0]' : 0.216825}
{'[5, 0, 0, 3, 0, 6, 1, 1, 11, 0, 28, 28, 0, 0, 1, 1, 0, 0]' : 0.216942}
{'[5, 0, 0, 3, 0, 6, 1, 1, 11, 0, 28, 28, 0, 0, 1, 1, 0, 0]' : 0.216656}
{'[5, 0, 0, 3, 0, 6, 1, 1, 11, 0, 28, 28, 0, 0, 1, 1, 0, 0]' : 0.216794}
{'[5, 0, 0, 3, 0, 6, 1, 1, 11, 0, 28, 28, 0, 0, 1, 1, 0, 0]' : 0.216927}
{'[5, 0, 0, 3, 0, 6, 1, 1, 11, 0, 28, 28, 0, 0, 1, 1, 0, 0]' : 0.217046}

out:
 ["{'[5, 0, 0, 3, 0, 6, 1, 1, 11, 0, 28, 28, 0, 0, 1, 1, 0, 0]' : 0.251299}", "{'[5, 0, 0, 3, 0, 6, 1, 1, 11, 0, 28, 28, 0, 0, 1, 1, 0, 0]' : 0.251079}", "{'[5, 0, 0, 3, 0, 6, 1, 1, 11, 0, 28, 28, 0, 0, 1, 1, 0, 0]' : 0.251425}", "{'[5, 0, 0, 3, 0, 6, 1, 1, 11, 0, 28, 28, 0, 0, 1, 1, 0, 0]' : 0.238789}", "{'[5, 0, 0, 3, 0, 6, 1, 1, 11, 0, 28, 28, 0, 0, 1, 1, 0, 0]' : 0.216647}", "{'[5, 0, 0, 3, 0, 6, 1, 1, 11, 0, 28, 28, 0, 0, 1, 1, 0, 0]' : 0.222465}", "{'[5, 0, 0, 3, 0, 6, 1, 1, 11, 0, 28, 28, 0, 0, 1, 1, 0, 0]' : 0.221891}", "{'[5, 0, 0, 3, 0, 6, 1, 1, 11, 0, 28, 28, 0, 0, 1, 1, 0, 0]' : 0.216915}", "{'[5, 0, 0, 3, 0, 6, 1, 1, 11, 0, 28, 28, 0, 0, 1, 1, 0, 0]' : 0.216826}", "{'[5, 0, 0, 3, 0, 6, 1, 1, 11, 0, 28, 28, 0, 0, 1, 1, 0, 0]' : 0.216796}", "{'[5, 0, 0, 3, 0, 6, 1, 1, 11, 0, 28, 28, 0, 0, 1, 1, 0, 0]' : 0.216736}", "{'[5, 0, 0, 3, 0, 6, 1, 1, 11, 0, 28, 28, 0, 0, 1, 1, 0, 0]' : 0.217082}", "{'[5, 0, 0, 3, 0, 6, 1, 1, 11, 0, 28, 28, 0, 0, 1, 1, 0, 0]' : 0.216883}", "{'[5, 0, 0, 3, 0, 6, 1, 1, 11, 0, 28, 28, 0, 0, 1, 1, 0, 0]' : 0.216875}", "{'[5, 0, 0, 3, 0, 6, 1, 1, 11, 0, 28, 28, 0, 0, 1, 1, 0, 0]' : 0.216945}", "{'[5, 0, 0, 3, 0, 6, 1, 1, 11, 0, 28, 28, 0, 0, 1, 1, 0, 0]' : 0.216645}", "{'[5, 0, 0, 3, 0, 6, 1, 1, 11, 0, 28, 28, 0, 0, 1, 1, 0, 0]' : 0.216837}", "{'[5, 0, 0, 3, 0, 6, 1, 1, 11, 0, 28, 28, 0, 0, 1, 1, 0, 0]' : 0.217074}", "{'[5, 0, 0, 3, 0, 6, 1, 1, 11, 0, 28, 28, 0, 0, 1, 1, 0, 0]' : 0.217173}", "{'[5, 0, 0, 3, 0, 6, 1, 1, 11, 0, 28, 28, 0, 0, 1, 1, 0, 0]' : 0.216749}", "{'[5, 0, 0, 3, 0, 6, 1, 1, 11, 0, 28, 28, 0, 0, 1, 1, 0, 0]' : 0.216889}", "{'[5, 0, 0, 3, 0, 6, 1, 1, 11, 0, 28, 28, 0, 0, 1, 1, 0, 0]' : 0.216947}", "{'[5, 0, 0, 3, 0, 6, 1, 1, 11, 0, 28, 28, 0, 0, 1, 1, 0, 0]' : 0.21686}", "{'[5, 0, 0, 3, 0, 6, 1, 1, 11, 0, 28, 28, 0, 0, 1, 1, 0, 0]' : 0.21698}", "{'[5, 0, 0, 3, 0, 6, 1, 1, 11, 0, 28, 28, 0, 0, 1, 1, 0, 0]' : 0.216825}", "{'[5, 0, 0, 3, 0, 6, 1, 1, 11, 0, 28, 28, 0, 0, 1, 1, 0, 0]' : 0.216942}", "{'[5, 0, 0, 3, 0, 6, 1, 1, 11, 0, 28, 28, 0, 0, 1, 1, 0, 0]' : 0.216656}", "{'[5, 0, 0, 3, 0, 6, 1, 1, 11, 0, 28, 28, 0, 0, 1, 1, 0, 0]' : 0.216794}", "{'[5, 0, 0, 3, 0, 6, 1, 1, 11, 0, 28, 28, 0, 0, 1, 1, 0, 0]' : 0.216927}", "{'[5, 0, 0, 3, 0, 6, 1, 1, 11, 0, 28, 28, 0, 0, 1, 1, 0, 0]' : 0.217046}"]
returning from 'run': {'[5, 0, 0, 3, 0, 6, 1, 1, 11, 0, 28, 28, 0, 0, 1, 1, 0, 0]': ([0.251299, 0.251079, 0.251425, 0.238789, 0.216647, 0.222465, 0.221891, 0.216915, 0.216826, 0.216796, 0.216736, 0.217082, 0.216883, 0.216875, 0.216945, 0.216645, 0.216837, 0.217074, 0.217173, 0.216749, 0.216889, 0.216947, 0.21686, 0.21698, 0.216825, 0.216942, 0.216656, 0.216794, 0.216927, 0.217046], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 0, 0, 3, 0, 6, 1, 1, 11, 0, 28, 28, 0, 0, 1, 1, 0, 0]': ([0.251299, 0.251079, 0.251425, 0.238789, 0.216647, 0.222465, 0.221891, 0.216915, 0.216826, 0.216796, 0.216736, 0.217082, 0.216883, 0.216875, 0.216945, 0.216645, 0.216837, 0.217074, 0.217173, 0.216749, 0.216889, 0.216947, 0.21686, 0.21698, 0.216825, 0.216942, 0.216656, 0.216794, 0.216927, 0.217046], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	105
        Max loop nest depth: 	6
        Additions: 		2883
        Multiplications: 	930
        Divisions: 		0
        Logical: 		0
        Reads: 			5064
        Writes: 		859
        Comparisons:		105
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest7.exe __orio_perftest7.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest7.exe  
Program Test Output: 
{'[4, 1, 0, 6, 1, 0, 1, 1, 26, 29, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.304349}
{'[4, 1, 0, 6, 1, 0, 1, 1, 26, 29, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.304405}
{'[4, 1, 0, 6, 1, 0, 1, 1, 26, 29, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.305347}
{'[4, 1, 0, 6, 1, 0, 1, 1, 26, 29, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.304685}
{'[4, 1, 0, 6, 1, 0, 1, 1, 26, 29, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.304407}
{'[4, 1, 0, 6, 1, 0, 1, 1, 26, 29, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.304101}
{'[4, 1, 0, 6, 1, 0, 1, 1, 26, 29, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.305412}
{'[4, 1, 0, 6, 1, 0, 1, 1, 26, 29, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.304811}
{'[4, 1, 0, 6, 1, 0, 1, 1, 26, 29, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.305775}
{'[4, 1, 0, 6, 1, 0, 1, 1, 26, 29, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.304663}
{'[4, 1, 0, 6, 1, 0, 1, 1, 26, 29, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.304336}
{'[4, 1, 0, 6, 1, 0, 1, 1, 26, 29, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.305193}
{'[4, 1, 0, 6, 1, 0, 1, 1, 26, 29, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.304335}
{'[4, 1, 0, 6, 1, 0, 1, 1, 26, 29, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.31216}
{'[4, 1, 0, 6, 1, 0, 1, 1, 26, 29, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.306966}
{'[4, 1, 0, 6, 1, 0, 1, 1, 26, 29, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.305072}
{'[4, 1, 0, 6, 1, 0, 1, 1, 26, 29, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.299892}
{'[4, 1, 0, 6, 1, 0, 1, 1, 26, 29, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.29496}
{'[4, 1, 0, 6, 1, 0, 1, 1, 26, 29, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.305796}
{'[4, 1, 0, 6, 1, 0, 1, 1, 26, 29, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.304211}
{'[4, 1, 0, 6, 1, 0, 1, 1, 26, 29, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.303786}
{'[4, 1, 0, 6, 1, 0, 1, 1, 26, 29, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.305287}
{'[4, 1, 0, 6, 1, 0, 1, 1, 26, 29, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.305925}
{'[4, 1, 0, 6, 1, 0, 1, 1, 26, 29, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.304488}
{'[4, 1, 0, 6, 1, 0, 1, 1, 26, 29, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.304725}
{'[4, 1, 0, 6, 1, 0, 1, 1, 26, 29, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.304428}
{'[4, 1, 0, 6, 1, 0, 1, 1, 26, 29, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.305665}
{'[4, 1, 0, 6, 1, 0, 1, 1, 26, 29, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.305108}
{'[4, 1, 0, 6, 1, 0, 1, 1, 26, 29, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.304133}
{'[4, 1, 0, 6, 1, 0, 1, 1, 26, 29, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.305506}

out:
 ["{'[4, 1, 0, 6, 1, 0, 1, 1, 26, 29, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.304349}", "{'[4, 1, 0, 6, 1, 0, 1, 1, 26, 29, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.304405}", "{'[4, 1, 0, 6, 1, 0, 1, 1, 26, 29, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.305347}", "{'[4, 1, 0, 6, 1, 0, 1, 1, 26, 29, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.304685}", "{'[4, 1, 0, 6, 1, 0, 1, 1, 26, 29, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.304407}", "{'[4, 1, 0, 6, 1, 0, 1, 1, 26, 29, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.304101}", "{'[4, 1, 0, 6, 1, 0, 1, 1, 26, 29, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.305412}", "{'[4, 1, 0, 6, 1, 0, 1, 1, 26, 29, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.304811}", "{'[4, 1, 0, 6, 1, 0, 1, 1, 26, 29, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.305775}", "{'[4, 1, 0, 6, 1, 0, 1, 1, 26, 29, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.304663}", "{'[4, 1, 0, 6, 1, 0, 1, 1, 26, 29, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.304336}", "{'[4, 1, 0, 6, 1, 0, 1, 1, 26, 29, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.305193}", "{'[4, 1, 0, 6, 1, 0, 1, 1, 26, 29, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.304335}", "{'[4, 1, 0, 6, 1, 0, 1, 1, 26, 29, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.31216}", "{'[4, 1, 0, 6, 1, 0, 1, 1, 26, 29, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.306966}", "{'[4, 1, 0, 6, 1, 0, 1, 1, 26, 29, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.305072}", "{'[4, 1, 0, 6, 1, 0, 1, 1, 26, 29, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.299892}", "{'[4, 1, 0, 6, 1, 0, 1, 1, 26, 29, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.29496}", "{'[4, 1, 0, 6, 1, 0, 1, 1, 26, 29, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.305796}", "{'[4, 1, 0, 6, 1, 0, 1, 1, 26, 29, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.304211}", "{'[4, 1, 0, 6, 1, 0, 1, 1, 26, 29, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.303786}", "{'[4, 1, 0, 6, 1, 0, 1, 1, 26, 29, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.305287}", "{'[4, 1, 0, 6, 1, 0, 1, 1, 26, 29, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.305925}", "{'[4, 1, 0, 6, 1, 0, 1, 1, 26, 29, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.304488}", "{'[4, 1, 0, 6, 1, 0, 1, 1, 26, 29, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.304725}", "{'[4, 1, 0, 6, 1, 0, 1, 1, 26, 29, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.304428}", "{'[4, 1, 0, 6, 1, 0, 1, 1, 26, 29, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.305665}", "{'[4, 1, 0, 6, 1, 0, 1, 1, 26, 29, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.305108}", "{'[4, 1, 0, 6, 1, 0, 1, 1, 26, 29, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.304133}", "{'[4, 1, 0, 6, 1, 0, 1, 1, 26, 29, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.305506}"]
returning from 'run': {'[4, 1, 0, 6, 1, 0, 1, 1, 26, 29, 5, 0, 0, 0, 1, 1, 0, 0]': ([0.304349, 0.304405, 0.305347, 0.304685, 0.304407, 0.304101, 0.305412, 0.304811, 0.305775, 0.304663, 0.304336, 0.305193, 0.304335, 0.31216, 0.306966, 0.305072, 0.299892, 0.29496, 0.305796, 0.304211, 0.303786, 0.305287, 0.305925, 0.304488, 0.304725, 0.304428, 0.305665, 0.305108, 0.304133, 0.305506], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 1, 0, 6, 1, 0, 1, 1, 26, 29, 5, 0, 0, 0, 1, 1, 0, 0]': ([0.304349, 0.304405, 0.305347, 0.304685, 0.304407, 0.304101, 0.305412, 0.304811, 0.305775, 0.304663, 0.304336, 0.305193, 0.304335, 0.31216, 0.306966, 0.305072, 0.299892, 0.29496, 0.305796, 0.304211, 0.303786, 0.305287, 0.305925, 0.304488, 0.304725, 0.304428, 0.305665, 0.305108, 0.304133, 0.305506], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	55
        Max loop nest depth: 	5
        Additions: 		2832
        Multiplications: 	868
        Divisions: 		0
        Logical: 		0
        Reads: 			5066
        Writes: 		637
        Comparisons:		55
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest8.exe __orio_perftest8.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest8.exe  
Program Test Output: 
{'[0, 0, 5, 6, 2, 5, 1, 0, 14, 28, 0, 4, 2, 0, 0, 0, 1, 1]' : 0.176653}
{'[0, 0, 5, 6, 2, 5, 1, 0, 14, 28, 0, 4, 2, 0, 0, 0, 1, 1]' : 0.177788}
{'[0, 0, 5, 6, 2, 5, 1, 0, 14, 28, 0, 4, 2, 0, 0, 0, 1, 1]' : 0.177609}
{'[0, 0, 5, 6, 2, 5, 1, 0, 14, 28, 0, 4, 2, 0, 0, 0, 1, 1]' : 0.179047}
{'[0, 0, 5, 6, 2, 5, 1, 0, 14, 28, 0, 4, 2, 0, 0, 0, 1, 1]' : 0.177276}
{'[0, 0, 5, 6, 2, 5, 1, 0, 14, 28, 0, 4, 2, 0, 0, 0, 1, 1]' : 0.177205}
{'[0, 0, 5, 6, 2, 5, 1, 0, 14, 28, 0, 4, 2, 0, 0, 0, 1, 1]' : 0.177435}
{'[0, 0, 5, 6, 2, 5, 1, 0, 14, 28, 0, 4, 2, 0, 0, 0, 1, 1]' : 0.177484}
{'[0, 0, 5, 6, 2, 5, 1, 0, 14, 28, 0, 4, 2, 0, 0, 0, 1, 1]' : 0.178189}
{'[0, 0, 5, 6, 2, 5, 1, 0, 14, 28, 0, 4, 2, 0, 0, 0, 1, 1]' : 0.177974}
{'[0, 0, 5, 6, 2, 5, 1, 0, 14, 28, 0, 4, 2, 0, 0, 0, 1, 1]' : 0.177402}
{'[0, 0, 5, 6, 2, 5, 1, 0, 14, 28, 0, 4, 2, 0, 0, 0, 1, 1]' : 0.176753}
{'[0, 0, 5, 6, 2, 5, 1, 0, 14, 28, 0, 4, 2, 0, 0, 0, 1, 1]' : 0.177654}
{'[0, 0, 5, 6, 2, 5, 1, 0, 14, 28, 0, 4, 2, 0, 0, 0, 1, 1]' : 0.178282}
{'[0, 0, 5, 6, 2, 5, 1, 0, 14, 28, 0, 4, 2, 0, 0, 0, 1, 1]' : 0.178216}
{'[0, 0, 5, 6, 2, 5, 1, 0, 14, 28, 0, 4, 2, 0, 0, 0, 1, 1]' : 0.177086}
{'[0, 0, 5, 6, 2, 5, 1, 0, 14, 28, 0, 4, 2, 0, 0, 0, 1, 1]' : 0.17731}
{'[0, 0, 5, 6, 2, 5, 1, 0, 14, 28, 0, 4, 2, 0, 0, 0, 1, 1]' : 0.17748}
{'[0, 0, 5, 6, 2, 5, 1, 0, 14, 28, 0, 4, 2, 0, 0, 0, 1, 1]' : 0.177832}
{'[0, 0, 5, 6, 2, 5, 1, 0, 14, 28, 0, 4, 2, 0, 0, 0, 1, 1]' : 0.177773}
{'[0, 0, 5, 6, 2, 5, 1, 0, 14, 28, 0, 4, 2, 0, 0, 0, 1, 1]' : 0.178268}
{'[0, 0, 5, 6, 2, 5, 1, 0, 14, 28, 0, 4, 2, 0, 0, 0, 1, 1]' : 0.177752}
{'[0, 0, 5, 6, 2, 5, 1, 0, 14, 28, 0, 4, 2, 0, 0, 0, 1, 1]' : 0.177217}
{'[0, 0, 5, 6, 2, 5, 1, 0, 14, 28, 0, 4, 2, 0, 0, 0, 1, 1]' : 0.177248}
{'[0, 0, 5, 6, 2, 5, 1, 0, 14, 28, 0, 4, 2, 0, 0, 0, 1, 1]' : 0.17697}
{'[0, 0, 5, 6, 2, 5, 1, 0, 14, 28, 0, 4, 2, 0, 0, 0, 1, 1]' : 0.177702}
{'[0, 0, 5, 6, 2, 5, 1, 0, 14, 28, 0, 4, 2, 0, 0, 0, 1, 1]' : 0.178267}
{'[0, 0, 5, 6, 2, 5, 1, 0, 14, 28, 0, 4, 2, 0, 0, 0, 1, 1]' : 0.177166}
{'[0, 0, 5, 6, 2, 5, 1, 0, 14, 28, 0, 4, 2, 0, 0, 0, 1, 1]' : 0.177596}
{'[0, 0, 5, 6, 2, 5, 1, 0, 14, 28, 0, 4, 2, 0, 0, 0, 1, 1]' : 0.181671}

out:
 ["{'[0, 0, 5, 6, 2, 5, 1, 0, 14, 28, 0, 4, 2, 0, 0, 0, 1, 1]' : 0.176653}", "{'[0, 0, 5, 6, 2, 5, 1, 0, 14, 28, 0, 4, 2, 0, 0, 0, 1, 1]' : 0.177788}", "{'[0, 0, 5, 6, 2, 5, 1, 0, 14, 28, 0, 4, 2, 0, 0, 0, 1, 1]' : 0.177609}", "{'[0, 0, 5, 6, 2, 5, 1, 0, 14, 28, 0, 4, 2, 0, 0, 0, 1, 1]' : 0.179047}", "{'[0, 0, 5, 6, 2, 5, 1, 0, 14, 28, 0, 4, 2, 0, 0, 0, 1, 1]' : 0.177276}", "{'[0, 0, 5, 6, 2, 5, 1, 0, 14, 28, 0, 4, 2, 0, 0, 0, 1, 1]' : 0.177205}", "{'[0, 0, 5, 6, 2, 5, 1, 0, 14, 28, 0, 4, 2, 0, 0, 0, 1, 1]' : 0.177435}", "{'[0, 0, 5, 6, 2, 5, 1, 0, 14, 28, 0, 4, 2, 0, 0, 0, 1, 1]' : 0.177484}", "{'[0, 0, 5, 6, 2, 5, 1, 0, 14, 28, 0, 4, 2, 0, 0, 0, 1, 1]' : 0.178189}", "{'[0, 0, 5, 6, 2, 5, 1, 0, 14, 28, 0, 4, 2, 0, 0, 0, 1, 1]' : 0.177974}", "{'[0, 0, 5, 6, 2, 5, 1, 0, 14, 28, 0, 4, 2, 0, 0, 0, 1, 1]' : 0.177402}", "{'[0, 0, 5, 6, 2, 5, 1, 0, 14, 28, 0, 4, 2, 0, 0, 0, 1, 1]' : 0.176753}", "{'[0, 0, 5, 6, 2, 5, 1, 0, 14, 28, 0, 4, 2, 0, 0, 0, 1, 1]' : 0.177654}", "{'[0, 0, 5, 6, 2, 5, 1, 0, 14, 28, 0, 4, 2, 0, 0, 0, 1, 1]' : 0.178282}", "{'[0, 0, 5, 6, 2, 5, 1, 0, 14, 28, 0, 4, 2, 0, 0, 0, 1, 1]' : 0.178216}", "{'[0, 0, 5, 6, 2, 5, 1, 0, 14, 28, 0, 4, 2, 0, 0, 0, 1, 1]' : 0.177086}", "{'[0, 0, 5, 6, 2, 5, 1, 0, 14, 28, 0, 4, 2, 0, 0, 0, 1, 1]' : 0.17731}", "{'[0, 0, 5, 6, 2, 5, 1, 0, 14, 28, 0, 4, 2, 0, 0, 0, 1, 1]' : 0.17748}", "{'[0, 0, 5, 6, 2, 5, 1, 0, 14, 28, 0, 4, 2, 0, 0, 0, 1, 1]' : 0.177832}", "{'[0, 0, 5, 6, 2, 5, 1, 0, 14, 28, 0, 4, 2, 0, 0, 0, 1, 1]' : 0.177773}", "{'[0, 0, 5, 6, 2, 5, 1, 0, 14, 28, 0, 4, 2, 0, 0, 0, 1, 1]' : 0.178268}", "{'[0, 0, 5, 6, 2, 5, 1, 0, 14, 28, 0, 4, 2, 0, 0, 0, 1, 1]' : 0.177752}", "{'[0, 0, 5, 6, 2, 5, 1, 0, 14, 28, 0, 4, 2, 0, 0, 0, 1, 1]' : 0.177217}", "{'[0, 0, 5, 6, 2, 5, 1, 0, 14, 28, 0, 4, 2, 0, 0, 0, 1, 1]' : 0.177248}", "{'[0, 0, 5, 6, 2, 5, 1, 0, 14, 28, 0, 4, 2, 0, 0, 0, 1, 1]' : 0.17697}", "{'[0, 0, 5, 6, 2, 5, 1, 0, 14, 28, 0, 4, 2, 0, 0, 0, 1, 1]' : 0.177702}", "{'[0, 0, 5, 6, 2, 5, 1, 0, 14, 28, 0, 4, 2, 0, 0, 0, 1, 1]' : 0.178267}", "{'[0, 0, 5, 6, 2, 5, 1, 0, 14, 28, 0, 4, 2, 0, 0, 0, 1, 1]' : 0.177166}", "{'[0, 0, 5, 6, 2, 5, 1, 0, 14, 28, 0, 4, 2, 0, 0, 0, 1, 1]' : 0.177596}", "{'[0, 0, 5, 6, 2, 5, 1, 0, 14, 28, 0, 4, 2, 0, 0, 0, 1, 1]' : 0.181671}"]
returning from 'run': {'[0, 0, 5, 6, 2, 5, 1, 0, 14, 28, 0, 4, 2, 0, 0, 0, 1, 1]': ([0.176653, 0.177788, 0.177609, 0.179047, 0.177276, 0.177205, 0.177435, 0.177484, 0.178189, 0.177974, 0.177402, 0.176753, 0.177654, 0.178282, 0.178216, 0.177086, 0.17731, 0.17748, 0.177832, 0.177773, 0.178268, 0.177752, 0.177217, 0.177248, 0.17697, 0.177702, 0.178267, 0.177166, 0.177596, 0.181671], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 5, 6, 2, 5, 1, 0, 14, 28, 0, 4, 2, 0, 0, 0, 1, 1]': ([0.176653, 0.177788, 0.177609, 0.179047, 0.177276, 0.177205, 0.177435, 0.177484, 0.178189, 0.177974, 0.177402, 0.176753, 0.177654, 0.178282, 0.178216, 0.177086, 0.17731, 0.17748, 0.177832, 0.177773, 0.178268, 0.177752, 0.177217, 0.177248, 0.17697, 0.177702, 0.178267, 0.177166, 0.177596, 0.181671], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	163
        Max loop nest depth: 	5
        Additions: 		6962
        Multiplications: 	2640
        Divisions: 		0
        Logical: 		0
        Reads: 			12583
        Writes: 		2053
        Comparisons:		163
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest9.exe __orio_perftest9.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest9.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest9.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest9.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest9.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	5
        Additions: 		1099
        Multiplications: 	342
        Divisions: 		0
        Logical: 		0
        Reads: 			1916
        Writes: 		242
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest10.exe __orio_perftest10.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest10.exe  
Program Test Output: 
{'[2, 0, 0, 3, 6, 6, 0, 0, 13, 0, 3, 4, 1, 1, 0, 0, 0, 1]' : 0.111008}
{'[2, 0, 0, 3, 6, 6, 0, 0, 13, 0, 3, 4, 1, 1, 0, 0, 0, 1]' : 0.111082}
{'[2, 0, 0, 3, 6, 6, 0, 0, 13, 0, 3, 4, 1, 1, 0, 0, 0, 1]' : 0.110625}
{'[2, 0, 0, 3, 6, 6, 0, 0, 13, 0, 3, 4, 1, 1, 0, 0, 0, 1]' : 0.110954}
{'[2, 0, 0, 3, 6, 6, 0, 0, 13, 0, 3, 4, 1, 1, 0, 0, 0, 1]' : 0.111195}
{'[2, 0, 0, 3, 6, 6, 0, 0, 13, 0, 3, 4, 1, 1, 0, 0, 0, 1]' : 0.111323}
{'[2, 0, 0, 3, 6, 6, 0, 0, 13, 0, 3, 4, 1, 1, 0, 0, 0, 1]' : 0.110924}
{'[2, 0, 0, 3, 6, 6, 0, 0, 13, 0, 3, 4, 1, 1, 0, 0, 0, 1]' : 0.110919}
{'[2, 0, 0, 3, 6, 6, 0, 0, 13, 0, 3, 4, 1, 1, 0, 0, 0, 1]' : 0.110834}
{'[2, 0, 0, 3, 6, 6, 0, 0, 13, 0, 3, 4, 1, 1, 0, 0, 0, 1]' : 0.110989}
{'[2, 0, 0, 3, 6, 6, 0, 0, 13, 0, 3, 4, 1, 1, 0, 0, 0, 1]' : 0.110878}
{'[2, 0, 0, 3, 6, 6, 0, 0, 13, 0, 3, 4, 1, 1, 0, 0, 0, 1]' : 0.111144}
{'[2, 0, 0, 3, 6, 6, 0, 0, 13, 0, 3, 4, 1, 1, 0, 0, 0, 1]' : 0.110991}
{'[2, 0, 0, 3, 6, 6, 0, 0, 13, 0, 3, 4, 1, 1, 0, 0, 0, 1]' : 0.110948}
{'[2, 0, 0, 3, 6, 6, 0, 0, 13, 0, 3, 4, 1, 1, 0, 0, 0, 1]' : 0.110906}
{'[2, 0, 0, 3, 6, 6, 0, 0, 13, 0, 3, 4, 1, 1, 0, 0, 0, 1]' : 0.111341}
{'[2, 0, 0, 3, 6, 6, 0, 0, 13, 0, 3, 4, 1, 1, 0, 0, 0, 1]' : 0.110952}
{'[2, 0, 0, 3, 6, 6, 0, 0, 13, 0, 3, 4, 1, 1, 0, 0, 0, 1]' : 0.110874}
{'[2, 0, 0, 3, 6, 6, 0, 0, 13, 0, 3, 4, 1, 1, 0, 0, 0, 1]' : 0.110894}
{'[2, 0, 0, 3, 6, 6, 0, 0, 13, 0, 3, 4, 1, 1, 0, 0, 0, 1]' : 0.111084}
{'[2, 0, 0, 3, 6, 6, 0, 0, 13, 0, 3, 4, 1, 1, 0, 0, 0, 1]' : 0.110887}
{'[2, 0, 0, 3, 6, 6, 0, 0, 13, 0, 3, 4, 1, 1, 0, 0, 0, 1]' : 0.110966}
{'[2, 0, 0, 3, 6, 6, 0, 0, 13, 0, 3, 4, 1, 1, 0, 0, 0, 1]' : 0.110648}
{'[2, 0, 0, 3, 6, 6, 0, 0, 13, 0, 3, 4, 1, 1, 0, 0, 0, 1]' : 0.111024}
{'[2, 0, 0, 3, 6, 6, 0, 0, 13, 0, 3, 4, 1, 1, 0, 0, 0, 1]' : 0.112789}
{'[2, 0, 0, 3, 6, 6, 0, 0, 13, 0, 3, 4, 1, 1, 0, 0, 0, 1]' : 0.113809}
{'[2, 0, 0, 3, 6, 6, 0, 0, 13, 0, 3, 4, 1, 1, 0, 0, 0, 1]' : 0.113507}
{'[2, 0, 0, 3, 6, 6, 0, 0, 13, 0, 3, 4, 1, 1, 0, 0, 0, 1]' : 0.114103}
{'[2, 0, 0, 3, 6, 6, 0, 0, 13, 0, 3, 4, 1, 1, 0, 0, 0, 1]' : 0.114088}
{'[2, 0, 0, 3, 6, 6, 0, 0, 13, 0, 3, 4, 1, 1, 0, 0, 0, 1]' : 0.113812}

out:
 ["{'[2, 0, 0, 3, 6, 6, 0, 0, 13, 0, 3, 4, 1, 1, 0, 0, 0, 1]' : 0.111008}", "{'[2, 0, 0, 3, 6, 6, 0, 0, 13, 0, 3, 4, 1, 1, 0, 0, 0, 1]' : 0.111082}", "{'[2, 0, 0, 3, 6, 6, 0, 0, 13, 0, 3, 4, 1, 1, 0, 0, 0, 1]' : 0.110625}", "{'[2, 0, 0, 3, 6, 6, 0, 0, 13, 0, 3, 4, 1, 1, 0, 0, 0, 1]' : 0.110954}", "{'[2, 0, 0, 3, 6, 6, 0, 0, 13, 0, 3, 4, 1, 1, 0, 0, 0, 1]' : 0.111195}", "{'[2, 0, 0, 3, 6, 6, 0, 0, 13, 0, 3, 4, 1, 1, 0, 0, 0, 1]' : 0.111323}", "{'[2, 0, 0, 3, 6, 6, 0, 0, 13, 0, 3, 4, 1, 1, 0, 0, 0, 1]' : 0.110924}", "{'[2, 0, 0, 3, 6, 6, 0, 0, 13, 0, 3, 4, 1, 1, 0, 0, 0, 1]' : 0.110919}", "{'[2, 0, 0, 3, 6, 6, 0, 0, 13, 0, 3, 4, 1, 1, 0, 0, 0, 1]' : 0.110834}", "{'[2, 0, 0, 3, 6, 6, 0, 0, 13, 0, 3, 4, 1, 1, 0, 0, 0, 1]' : 0.110989}", "{'[2, 0, 0, 3, 6, 6, 0, 0, 13, 0, 3, 4, 1, 1, 0, 0, 0, 1]' : 0.110878}", "{'[2, 0, 0, 3, 6, 6, 0, 0, 13, 0, 3, 4, 1, 1, 0, 0, 0, 1]' : 0.111144}", "{'[2, 0, 0, 3, 6, 6, 0, 0, 13, 0, 3, 4, 1, 1, 0, 0, 0, 1]' : 0.110991}", "{'[2, 0, 0, 3, 6, 6, 0, 0, 13, 0, 3, 4, 1, 1, 0, 0, 0, 1]' : 0.110948}", "{'[2, 0, 0, 3, 6, 6, 0, 0, 13, 0, 3, 4, 1, 1, 0, 0, 0, 1]' : 0.110906}", "{'[2, 0, 0, 3, 6, 6, 0, 0, 13, 0, 3, 4, 1, 1, 0, 0, 0, 1]' : 0.111341}", "{'[2, 0, 0, 3, 6, 6, 0, 0, 13, 0, 3, 4, 1, 1, 0, 0, 0, 1]' : 0.110952}", "{'[2, 0, 0, 3, 6, 6, 0, 0, 13, 0, 3, 4, 1, 1, 0, 0, 0, 1]' : 0.110874}", "{'[2, 0, 0, 3, 6, 6, 0, 0, 13, 0, 3, 4, 1, 1, 0, 0, 0, 1]' : 0.110894}", "{'[2, 0, 0, 3, 6, 6, 0, 0, 13, 0, 3, 4, 1, 1, 0, 0, 0, 1]' : 0.111084}", "{'[2, 0, 0, 3, 6, 6, 0, 0, 13, 0, 3, 4, 1, 1, 0, 0, 0, 1]' : 0.110887}", "{'[2, 0, 0, 3, 6, 6, 0, 0, 13, 0, 3, 4, 1, 1, 0, 0, 0, 1]' : 0.110966}", "{'[2, 0, 0, 3, 6, 6, 0, 0, 13, 0, 3, 4, 1, 1, 0, 0, 0, 1]' : 0.110648}", "{'[2, 0, 0, 3, 6, 6, 0, 0, 13, 0, 3, 4, 1, 1, 0, 0, 0, 1]' : 0.111024}", "{'[2, 0, 0, 3, 6, 6, 0, 0, 13, 0, 3, 4, 1, 1, 0, 0, 0, 1]' : 0.112789}", "{'[2, 0, 0, 3, 6, 6, 0, 0, 13, 0, 3, 4, 1, 1, 0, 0, 0, 1]' : 0.113809}", "{'[2, 0, 0, 3, 6, 6, 0, 0, 13, 0, 3, 4, 1, 1, 0, 0, 0, 1]' : 0.113507}", "{'[2, 0, 0, 3, 6, 6, 0, 0, 13, 0, 3, 4, 1, 1, 0, 0, 0, 1]' : 0.114103}", "{'[2, 0, 0, 3, 6, 6, 0, 0, 13, 0, 3, 4, 1, 1, 0, 0, 0, 1]' : 0.114088}", "{'[2, 0, 0, 3, 6, 6, 0, 0, 13, 0, 3, 4, 1, 1, 0, 0, 0, 1]' : 0.113812}"]
returning from 'run': {'[2, 0, 0, 3, 6, 6, 0, 0, 13, 0, 3, 4, 1, 1, 0, 0, 0, 1]': ([0.111008, 0.111082, 0.110625, 0.110954, 0.111195, 0.111323, 0.110924, 0.110919, 0.110834, 0.110989, 0.110878, 0.111144, 0.110991, 0.110948, 0.110906, 0.111341, 0.110952, 0.110874, 0.110894, 0.111084, 0.110887, 0.110966, 0.110648, 0.111024, 0.112789, 0.113809, 0.113507, 0.114103, 0.114088, 0.113812], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 0, 3, 6, 6, 0, 0, 13, 0, 3, 4, 1, 1, 0, 0, 0, 1]': ([0.111008, 0.111082, 0.110625, 0.110954, 0.111195, 0.111323, 0.110924, 0.110919, 0.110834, 0.110989, 0.110878, 0.111144, 0.110991, 0.110948, 0.110906, 0.111341, 0.110952, 0.110874, 0.110894, 0.111084, 0.110887, 0.110966, 0.110648, 0.111024, 0.112789, 0.113809, 0.113507, 0.114103, 0.114088, 0.113812], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	51
        Max loop nest depth: 	6
        Additions: 		7755
        Multiplications: 	3720
        Divisions: 		0
        Logical: 		0
        Reads: 			14337
        Writes: 		2260
        Comparisons:		51
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest11.exe __orio_perftest11.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest11.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest11.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest11.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest11.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	84
        Max loop nest depth: 	6
        Additions: 		5477
        Multiplications: 	1462
        Divisions: 		0
        Logical: 		0
        Reads: 			8448
        Writes: 		957
        Comparisons:		84
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest12.exe __orio_perftest12.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest12.exe  
Program Test Output: 
{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 15, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.139368}
{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 15, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.139527}
{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 15, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.139694}
{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 15, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.139031}
{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 15, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.139036}
{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 15, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.139119}
{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 15, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.139508}
{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 15, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.139146}
{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 15, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.139309}
{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 15, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.139135}
{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 15, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.139276}
{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 15, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.13913}
{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 15, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.139154}
{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 15, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.139915}
{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 15, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.139247}
{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 15, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.145372}
{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 15, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.145649}
{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 15, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.145789}
{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 15, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.145569}
{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 15, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.145611}
{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 15, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.145643}
{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 15, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.145767}
{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 15, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.145875}
{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 15, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.14607}
{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 15, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.14605}
{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 15, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.145781}
{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 15, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.145613}
{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 15, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.145551}
{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 15, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.145708}
{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 15, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.145651}

out:
 ["{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 15, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.139368}", "{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 15, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.139527}", "{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 15, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.139694}", "{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 15, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.139031}", "{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 15, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.139036}", "{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 15, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.139119}", "{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 15, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.139508}", "{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 15, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.139146}", "{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 15, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.139309}", "{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 15, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.139135}", "{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 15, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.139276}", "{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 15, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.13913}", "{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 15, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.139154}", "{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 15, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.139915}", "{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 15, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.139247}", "{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 15, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.145372}", "{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 15, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.145649}", "{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 15, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.145789}", "{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 15, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.145569}", "{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 15, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.145611}", "{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 15, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.145643}", "{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 15, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.145767}", "{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 15, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.145875}", "{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 15, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.14607}", "{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 15, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.14605}", "{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 15, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.145781}", "{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 15, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.145613}", "{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 15, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.145551}", "{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 15, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.145708}", "{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 15, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.145651}"]
returning from 'run': {'[2, 6, 0, 6, 6, 5, 0, 1, 2, 15, 25, 0, 0, 1, 1, 0, 1, 0]': ([0.139368, 0.139527, 0.139694, 0.139031, 0.139036, 0.139119, 0.139508, 0.139146, 0.139309, 0.139135, 0.139276, 0.13913, 0.139154, 0.139915, 0.139247, 0.145372, 0.145649, 0.145789, 0.145569, 0.145611, 0.145643, 0.145767, 0.145875, 0.14607, 0.14605, 0.145781, 0.145613, 0.145551, 0.145708, 0.145651], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 6, 0, 6, 6, 5, 0, 1, 2, 15, 25, 0, 0, 1, 1, 0, 1, 0]': ([0.139368, 0.139527, 0.139694, 0.139031, 0.139036, 0.139119, 0.139508, 0.139146, 0.139309, 0.139135, 0.139276, 0.13913, 0.139154, 0.139915, 0.139247, 0.145372, 0.145649, 0.145789, 0.145569, 0.145611, 0.145643, 0.145767, 0.145875, 0.14607, 0.14605, 0.145781, 0.145613, 0.145551, 0.145708, 0.145651], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	181
        Max loop nest depth: 	5
        Additions: 		8900
        Multiplications: 	3042
        Divisions: 		0
        Logical: 		0
        Reads: 			15026
        Writes: 		2174
        Comparisons:		181
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest13.exe __orio_perftest13.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest13.exe  
Program Test Output: 
{'[0, 1, 2, 6, 6, 2, 1, 1, 1, 29, 29, 0, 1, 0, 1, 1, 1, 0]' : 0.107679}
{'[0, 1, 2, 6, 6, 2, 1, 1, 1, 29, 29, 0, 1, 0, 1, 1, 1, 0]' : 0.107405}
{'[0, 1, 2, 6, 6, 2, 1, 1, 1, 29, 29, 0, 1, 0, 1, 1, 1, 0]' : 0.107566}
{'[0, 1, 2, 6, 6, 2, 1, 1, 1, 29, 29, 0, 1, 0, 1, 1, 1, 0]' : 0.107687}
{'[0, 1, 2, 6, 6, 2, 1, 1, 1, 29, 29, 0, 1, 0, 1, 1, 1, 0]' : 0.104113}
{'[0, 1, 2, 6, 6, 2, 1, 1, 1, 29, 29, 0, 1, 0, 1, 1, 1, 0]' : 0.0948341}
{'[0, 1, 2, 6, 6, 2, 1, 1, 1, 29, 29, 0, 1, 0, 1, 1, 1, 0]' : 0.0947599}
{'[0, 1, 2, 6, 6, 2, 1, 1, 1, 29, 29, 0, 1, 0, 1, 1, 1, 0]' : 0.096529}
{'[0, 1, 2, 6, 6, 2, 1, 1, 1, 29, 29, 0, 1, 0, 1, 1, 1, 0]' : 0.0969231}
{'[0, 1, 2, 6, 6, 2, 1, 1, 1, 29, 29, 0, 1, 0, 1, 1, 1, 0]' : 0.0969601}
{'[0, 1, 2, 6, 6, 2, 1, 1, 1, 29, 29, 0, 1, 0, 1, 1, 1, 0]' : 0.097039}
{'[0, 1, 2, 6, 6, 2, 1, 1, 1, 29, 29, 0, 1, 0, 1, 1, 1, 0]' : 0.0970471}
{'[0, 1, 2, 6, 6, 2, 1, 1, 1, 29, 29, 0, 1, 0, 1, 1, 1, 0]' : 0.0972149}
{'[0, 1, 2, 6, 6, 2, 1, 1, 1, 29, 29, 0, 1, 0, 1, 1, 1, 0]' : 0.0969348}
{'[0, 1, 2, 6, 6, 2, 1, 1, 1, 29, 29, 0, 1, 0, 1, 1, 1, 0]' : 0.096982}
{'[0, 1, 2, 6, 6, 2, 1, 1, 1, 29, 29, 0, 1, 0, 1, 1, 1, 0]' : 0.096981}
{'[0, 1, 2, 6, 6, 2, 1, 1, 1, 29, 29, 0, 1, 0, 1, 1, 1, 0]' : 0.0969779}
{'[0, 1, 2, 6, 6, 2, 1, 1, 1, 29, 29, 0, 1, 0, 1, 1, 1, 0]' : 0.097307}
{'[0, 1, 2, 6, 6, 2, 1, 1, 1, 29, 29, 0, 1, 0, 1, 1, 1, 0]' : 0.0972178}
{'[0, 1, 2, 6, 6, 2, 1, 1, 1, 29, 29, 0, 1, 0, 1, 1, 1, 0]' : 0.0969839}
{'[0, 1, 2, 6, 6, 2, 1, 1, 1, 29, 29, 0, 1, 0, 1, 1, 1, 0]' : 0.096981}
{'[0, 1, 2, 6, 6, 2, 1, 1, 1, 29, 29, 0, 1, 0, 1, 1, 1, 0]' : 0.097172}
{'[0, 1, 2, 6, 6, 2, 1, 1, 1, 29, 29, 0, 1, 0, 1, 1, 1, 0]' : 0.0970922}
{'[0, 1, 2, 6, 6, 2, 1, 1, 1, 29, 29, 0, 1, 0, 1, 1, 1, 0]' : 0.096987}
{'[0, 1, 2, 6, 6, 2, 1, 1, 1, 29, 29, 0, 1, 0, 1, 1, 1, 0]' : 0.096992}
{'[0, 1, 2, 6, 6, 2, 1, 1, 1, 29, 29, 0, 1, 0, 1, 1, 1, 0]' : 0.0970778}
{'[0, 1, 2, 6, 6, 2, 1, 1, 1, 29, 29, 0, 1, 0, 1, 1, 1, 0]' : 0.0969679}
{'[0, 1, 2, 6, 6, 2, 1, 1, 1, 29, 29, 0, 1, 0, 1, 1, 1, 0]' : 0.0970359}
{'[0, 1, 2, 6, 6, 2, 1, 1, 1, 29, 29, 0, 1, 0, 1, 1, 1, 0]' : 0.092598}
{'[0, 1, 2, 6, 6, 2, 1, 1, 1, 29, 29, 0, 1, 0, 1, 1, 1, 0]' : 0.0922878}

out:
 ["{'[0, 1, 2, 6, 6, 2, 1, 1, 1, 29, 29, 0, 1, 0, 1, 1, 1, 0]' : 0.107679}", "{'[0, 1, 2, 6, 6, 2, 1, 1, 1, 29, 29, 0, 1, 0, 1, 1, 1, 0]' : 0.107405}", "{'[0, 1, 2, 6, 6, 2, 1, 1, 1, 29, 29, 0, 1, 0, 1, 1, 1, 0]' : 0.107566}", "{'[0, 1, 2, 6, 6, 2, 1, 1, 1, 29, 29, 0, 1, 0, 1, 1, 1, 0]' : 0.107687}", "{'[0, 1, 2, 6, 6, 2, 1, 1, 1, 29, 29, 0, 1, 0, 1, 1, 1, 0]' : 0.104113}", "{'[0, 1, 2, 6, 6, 2, 1, 1, 1, 29, 29, 0, 1, 0, 1, 1, 1, 0]' : 0.0948341}", "{'[0, 1, 2, 6, 6, 2, 1, 1, 1, 29, 29, 0, 1, 0, 1, 1, 1, 0]' : 0.0947599}", "{'[0, 1, 2, 6, 6, 2, 1, 1, 1, 29, 29, 0, 1, 0, 1, 1, 1, 0]' : 0.096529}", "{'[0, 1, 2, 6, 6, 2, 1, 1, 1, 29, 29, 0, 1, 0, 1, 1, 1, 0]' : 0.0969231}", "{'[0, 1, 2, 6, 6, 2, 1, 1, 1, 29, 29, 0, 1, 0, 1, 1, 1, 0]' : 0.0969601}", "{'[0, 1, 2, 6, 6, 2, 1, 1, 1, 29, 29, 0, 1, 0, 1, 1, 1, 0]' : 0.097039}", "{'[0, 1, 2, 6, 6, 2, 1, 1, 1, 29, 29, 0, 1, 0, 1, 1, 1, 0]' : 0.0970471}", "{'[0, 1, 2, 6, 6, 2, 1, 1, 1, 29, 29, 0, 1, 0, 1, 1, 1, 0]' : 0.0972149}", "{'[0, 1, 2, 6, 6, 2, 1, 1, 1, 29, 29, 0, 1, 0, 1, 1, 1, 0]' : 0.0969348}", "{'[0, 1, 2, 6, 6, 2, 1, 1, 1, 29, 29, 0, 1, 0, 1, 1, 1, 0]' : 0.096982}", "{'[0, 1, 2, 6, 6, 2, 1, 1, 1, 29, 29, 0, 1, 0, 1, 1, 1, 0]' : 0.096981}", "{'[0, 1, 2, 6, 6, 2, 1, 1, 1, 29, 29, 0, 1, 0, 1, 1, 1, 0]' : 0.0969779}", "{'[0, 1, 2, 6, 6, 2, 1, 1, 1, 29, 29, 0, 1, 0, 1, 1, 1, 0]' : 0.097307}", "{'[0, 1, 2, 6, 6, 2, 1, 1, 1, 29, 29, 0, 1, 0, 1, 1, 1, 0]' : 0.0972178}", "{'[0, 1, 2, 6, 6, 2, 1, 1, 1, 29, 29, 0, 1, 0, 1, 1, 1, 0]' : 0.0969839}", "{'[0, 1, 2, 6, 6, 2, 1, 1, 1, 29, 29, 0, 1, 0, 1, 1, 1, 0]' : 0.096981}", "{'[0, 1, 2, 6, 6, 2, 1, 1, 1, 29, 29, 0, 1, 0, 1, 1, 1, 0]' : 0.097172}", "{'[0, 1, 2, 6, 6, 2, 1, 1, 1, 29, 29, 0, 1, 0, 1, 1, 1, 0]' : 0.0970922}", "{'[0, 1, 2, 6, 6, 2, 1, 1, 1, 29, 29, 0, 1, 0, 1, 1, 1, 0]' : 0.096987}", "{'[0, 1, 2, 6, 6, 2, 1, 1, 1, 29, 29, 0, 1, 0, 1, 1, 1, 0]' : 0.096992}", "{'[0, 1, 2, 6, 6, 2, 1, 1, 1, 29, 29, 0, 1, 0, 1, 1, 1, 0]' : 0.0970778}", "{'[0, 1, 2, 6, 6, 2, 1, 1, 1, 29, 29, 0, 1, 0, 1, 1, 1, 0]' : 0.0969679}", "{'[0, 1, 2, 6, 6, 2, 1, 1, 1, 29, 29, 0, 1, 0, 1, 1, 1, 0]' : 0.0970359}", "{'[0, 1, 2, 6, 6, 2, 1, 1, 1, 29, 29, 0, 1, 0, 1, 1, 1, 0]' : 0.092598}", "{'[0, 1, 2, 6, 6, 2, 1, 1, 1, 29, 29, 0, 1, 0, 1, 1, 1, 0]' : 0.0922878}"]
returning from 'run': {'[0, 1, 2, 6, 6, 2, 1, 1, 1, 29, 29, 0, 1, 0, 1, 1, 1, 0]': ([0.107679, 0.107405, 0.107566, 0.107687, 0.104113, 0.0948341, 0.0947599, 0.096529, 0.0969231, 0.0969601, 0.097039, 0.0970471, 0.0972149, 0.0969348, 0.096982, 0.096981, 0.0969779, 0.097307, 0.0972178, 0.0969839, 0.096981, 0.097172, 0.0970922, 0.096987, 0.096992, 0.0970778, 0.0969679, 0.0970359, 0.092598, 0.0922878], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 2, 6, 6, 2, 1, 1, 1, 29, 29, 0, 1, 0, 1, 1, 1, 0]': ([0.107679, 0.107405, 0.107566, 0.107687, 0.104113, 0.0948341, 0.0947599, 0.096529, 0.0969231, 0.0969601, 0.097039, 0.0970471, 0.0972149, 0.0969348, 0.096982, 0.096981, 0.0969779, 0.097307, 0.0972178, 0.0969839, 0.096981, 0.097172, 0.0970922, 0.096987, 0.096992, 0.0970778, 0.0969679, 0.0970359, 0.092598, 0.0922878], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
Code stats:
        Number of loops: 	49
        Max loop nest depth: 	5
        Additions: 		1467
        Multiplications: 	420
        Divisions: 		0
        Logical: 		0
        Reads: 			2721
        Writes: 		387
        Comparisons:		49
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest14.exe __orio_perftest14.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest14.exe  
Program Test Output: 
{'[3, 1, 5, 1, 3, 6, 1, 0, 6, 28, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.182532}
{'[3, 1, 5, 1, 3, 6, 1, 0, 6, 28, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.183042}
{'[3, 1, 5, 1, 3, 6, 1, 0, 6, 28, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.183675}
{'[3, 1, 5, 1, 3, 6, 1, 0, 6, 28, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.182801}
{'[3, 1, 5, 1, 3, 6, 1, 0, 6, 28, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.1856}
{'[3, 1, 5, 1, 3, 6, 1, 0, 6, 28, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.187165}
{'[3, 1, 5, 1, 3, 6, 1, 0, 6, 28, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.18735}
{'[3, 1, 5, 1, 3, 6, 1, 0, 6, 28, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.187301}
{'[3, 1, 5, 1, 3, 6, 1, 0, 6, 28, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.186824}
{'[3, 1, 5, 1, 3, 6, 1, 0, 6, 28, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.182248}
{'[3, 1, 5, 1, 3, 6, 1, 0, 6, 28, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.182084}
{'[3, 1, 5, 1, 3, 6, 1, 0, 6, 28, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.181919}
{'[3, 1, 5, 1, 3, 6, 1, 0, 6, 28, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.184071}
{'[3, 1, 5, 1, 3, 6, 1, 0, 6, 28, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.1864}
{'[3, 1, 5, 1, 3, 6, 1, 0, 6, 28, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.186359}
{'[3, 1, 5, 1, 3, 6, 1, 0, 6, 28, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.186427}
{'[3, 1, 5, 1, 3, 6, 1, 0, 6, 28, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.186209}
{'[3, 1, 5, 1, 3, 6, 1, 0, 6, 28, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.187201}
{'[3, 1, 5, 1, 3, 6, 1, 0, 6, 28, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.187356}
{'[3, 1, 5, 1, 3, 6, 1, 0, 6, 28, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.187492}
{'[3, 1, 5, 1, 3, 6, 1, 0, 6, 28, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.187162}
{'[3, 1, 5, 1, 3, 6, 1, 0, 6, 28, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.186743}
{'[3, 1, 5, 1, 3, 6, 1, 0, 6, 28, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.182738}
{'[3, 1, 5, 1, 3, 6, 1, 0, 6, 28, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.18194}
{'[3, 1, 5, 1, 3, 6, 1, 0, 6, 28, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.18462}
{'[3, 1, 5, 1, 3, 6, 1, 0, 6, 28, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.186198}
{'[3, 1, 5, 1, 3, 6, 1, 0, 6, 28, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.181694}
{'[3, 1, 5, 1, 3, 6, 1, 0, 6, 28, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.182022}
{'[3, 1, 5, 1, 3, 6, 1, 0, 6, 28, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.183293}
{'[3, 1, 5, 1, 3, 6, 1, 0, 6, 28, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.186376}

out:
 ["{'[3, 1, 5, 1, 3, 6, 1, 0, 6, 28, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.182532}", "{'[3, 1, 5, 1, 3, 6, 1, 0, 6, 28, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.183042}", "{'[3, 1, 5, 1, 3, 6, 1, 0, 6, 28, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.183675}", "{'[3, 1, 5, 1, 3, 6, 1, 0, 6, 28, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.182801}", "{'[3, 1, 5, 1, 3, 6, 1, 0, 6, 28, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.1856}", "{'[3, 1, 5, 1, 3, 6, 1, 0, 6, 28, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.187165}", "{'[3, 1, 5, 1, 3, 6, 1, 0, 6, 28, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.18735}", "{'[3, 1, 5, 1, 3, 6, 1, 0, 6, 28, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.187301}", "{'[3, 1, 5, 1, 3, 6, 1, 0, 6, 28, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.186824}", "{'[3, 1, 5, 1, 3, 6, 1, 0, 6, 28, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.182248}", "{'[3, 1, 5, 1, 3, 6, 1, 0, 6, 28, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.182084}", "{'[3, 1, 5, 1, 3, 6, 1, 0, 6, 28, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.181919}", "{'[3, 1, 5, 1, 3, 6, 1, 0, 6, 28, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.184071}", "{'[3, 1, 5, 1, 3, 6, 1, 0, 6, 28, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.1864}", "{'[3, 1, 5, 1, 3, 6, 1, 0, 6, 28, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.186359}", "{'[3, 1, 5, 1, 3, 6, 1, 0, 6, 28, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.186427}", "{'[3, 1, 5, 1, 3, 6, 1, 0, 6, 28, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.186209}", "{'[3, 1, 5, 1, 3, 6, 1, 0, 6, 28, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.187201}", "{'[3, 1, 5, 1, 3, 6, 1, 0, 6, 28, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.187356}", "{'[3, 1, 5, 1, 3, 6, 1, 0, 6, 28, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.187492}", "{'[3, 1, 5, 1, 3, 6, 1, 0, 6, 28, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.187162}", "{'[3, 1, 5, 1, 3, 6, 1, 0, 6, 28, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.186743}", "{'[3, 1, 5, 1, 3, 6, 1, 0, 6, 28, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.182738}", "{'[3, 1, 5, 1, 3, 6, 1, 0, 6, 28, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.18194}", "{'[3, 1, 5, 1, 3, 6, 1, 0, 6, 28, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.18462}", "{'[3, 1, 5, 1, 3, 6, 1, 0, 6, 28, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.186198}", "{'[3, 1, 5, 1, 3, 6, 1, 0, 6, 28, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.181694}", "{'[3, 1, 5, 1, 3, 6, 1, 0, 6, 28, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.182022}", "{'[3, 1, 5, 1, 3, 6, 1, 0, 6, 28, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.183293}", "{'[3, 1, 5, 1, 3, 6, 1, 0, 6, 28, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.186376}"]
returning from 'run': {'[3, 1, 5, 1, 3, 6, 1, 0, 6, 28, 0, 4, 0, 0, 0, 0, 1, 1]': ([0.182532, 0.183042, 0.183675, 0.182801, 0.1856, 0.187165, 0.18735, 0.187301, 0.186824, 0.182248, 0.182084, 0.181919, 0.184071, 0.1864, 0.186359, 0.186427, 0.186209, 0.187201, 0.187356, 0.187492, 0.187162, 0.186743, 0.182738, 0.18194, 0.18462, 0.186198, 0.181694, 0.182022, 0.183293, 0.186376], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 1, 5, 1, 3, 6, 1, 0, 6, 28, 0, 4, 0, 0, 0, 0, 1, 1]': ([0.182532, 0.183042, 0.183675, 0.182801, 0.1856, 0.187165, 0.18735, 0.187301, 0.186824, 0.182248, 0.182084, 0.181919, 0.184071, 0.1864, 0.186359, 0.186427, 0.186209, 0.187201, 0.187356, 0.187492, 0.187162, 0.186743, 0.182738, 0.18194, 0.18462, 0.186198, 0.181694, 0.182022, 0.183293, 0.186376], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		297
        Multiplications: 	72
        Divisions: 		0
        Logical: 		0
        Reads: 			568
        Writes: 		89
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest15.exe __orio_perftest15.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest15.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest15.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest15.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest15.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	76
        Max loop nest depth: 	5
        Additions: 		8516
        Multiplications: 	2436
        Divisions: 		0
        Logical: 		0
        Reads: 			13066
        Writes: 		1493
        Comparisons:		76
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest16.exe __orio_perftest16.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest16.exe  
Program Test Output: 
{'[3, 1, 1, 0, 1, 1, 0, 0, 0, 27, 0, 23, 0, 1, 1, 0, 0, 1]' : 0.195568}
{'[3, 1, 1, 0, 1, 1, 0, 0, 0, 27, 0, 23, 0, 1, 1, 0, 0, 1]' : 0.195512}
{'[3, 1, 1, 0, 1, 1, 0, 0, 0, 27, 0, 23, 0, 1, 1, 0, 0, 1]' : 0.186611}
{'[3, 1, 1, 0, 1, 1, 0, 0, 0, 27, 0, 23, 0, 1, 1, 0, 0, 1]' : 0.176072}
{'[3, 1, 1, 0, 1, 1, 0, 0, 0, 27, 0, 23, 0, 1, 1, 0, 0, 1]' : 0.17815}
{'[3, 1, 1, 0, 1, 1, 0, 0, 0, 27, 0, 23, 0, 1, 1, 0, 0, 1]' : 0.177535}
{'[3, 1, 1, 0, 1, 1, 0, 0, 0, 27, 0, 23, 0, 1, 1, 0, 0, 1]' : 0.174307}
{'[3, 1, 1, 0, 1, 1, 0, 0, 0, 27, 0, 23, 0, 1, 1, 0, 0, 1]' : 0.178026}
{'[3, 1, 1, 0, 1, 1, 0, 0, 0, 27, 0, 23, 0, 1, 1, 0, 0, 1]' : 0.178819}
{'[3, 1, 1, 0, 1, 1, 0, 0, 0, 27, 0, 23, 0, 1, 1, 0, 0, 1]' : 0.178921}
{'[3, 1, 1, 0, 1, 1, 0, 0, 0, 27, 0, 23, 0, 1, 1, 0, 0, 1]' : 0.178263}
{'[3, 1, 1, 0, 1, 1, 0, 0, 0, 27, 0, 23, 0, 1, 1, 0, 0, 1]' : 0.178894}
{'[3, 1, 1, 0, 1, 1, 0, 0, 0, 27, 0, 23, 0, 1, 1, 0, 0, 1]' : 0.178718}
{'[3, 1, 1, 0, 1, 1, 0, 0, 0, 27, 0, 23, 0, 1, 1, 0, 0, 1]' : 0.178896}
{'[3, 1, 1, 0, 1, 1, 0, 0, 0, 27, 0, 23, 0, 1, 1, 0, 0, 1]' : 0.178636}
{'[3, 1, 1, 0, 1, 1, 0, 0, 0, 27, 0, 23, 0, 1, 1, 0, 0, 1]' : 0.178544}
{'[3, 1, 1, 0, 1, 1, 0, 0, 0, 27, 0, 23, 0, 1, 1, 0, 0, 1]' : 0.178741}
{'[3, 1, 1, 0, 1, 1, 0, 0, 0, 27, 0, 23, 0, 1, 1, 0, 0, 1]' : 0.178957}
{'[3, 1, 1, 0, 1, 1, 0, 0, 0, 27, 0, 23, 0, 1, 1, 0, 0, 1]' : 0.178724}
{'[3, 1, 1, 0, 1, 1, 0, 0, 0, 27, 0, 23, 0, 1, 1, 0, 0, 1]' : 0.178956}
{'[3, 1, 1, 0, 1, 1, 0, 0, 0, 27, 0, 23, 0, 1, 1, 0, 0, 1]' : 0.17873}
{'[3, 1, 1, 0, 1, 1, 0, 0, 0, 27, 0, 23, 0, 1, 1, 0, 0, 1]' : 0.17836}
{'[3, 1, 1, 0, 1, 1, 0, 0, 0, 27, 0, 23, 0, 1, 1, 0, 0, 1]' : 0.176007}
{'[3, 1, 1, 0, 1, 1, 0, 0, 0, 27, 0, 23, 0, 1, 1, 0, 0, 1]' : 0.178223}
{'[3, 1, 1, 0, 1, 1, 0, 0, 0, 27, 0, 23, 0, 1, 1, 0, 0, 1]' : 0.177207}
{'[3, 1, 1, 0, 1, 1, 0, 0, 0, 27, 0, 23, 0, 1, 1, 0, 0, 1]' : 0.175101}
{'[3, 1, 1, 0, 1, 1, 0, 0, 0, 27, 0, 23, 0, 1, 1, 0, 0, 1]' : 0.176925}
{'[3, 1, 1, 0, 1, 1, 0, 0, 0, 27, 0, 23, 0, 1, 1, 0, 0, 1]' : 0.174398}
{'[3, 1, 1, 0, 1, 1, 0, 0, 0, 27, 0, 23, 0, 1, 1, 0, 0, 1]' : 0.175142}
{'[3, 1, 1, 0, 1, 1, 0, 0, 0, 27, 0, 23, 0, 1, 1, 0, 0, 1]' : 0.17843}

out:
 ["{'[3, 1, 1, 0, 1, 1, 0, 0, 0, 27, 0, 23, 0, 1, 1, 0, 0, 1]' : 0.195568}", "{'[3, 1, 1, 0, 1, 1, 0, 0, 0, 27, 0, 23, 0, 1, 1, 0, 0, 1]' : 0.195512}", "{'[3, 1, 1, 0, 1, 1, 0, 0, 0, 27, 0, 23, 0, 1, 1, 0, 0, 1]' : 0.186611}", "{'[3, 1, 1, 0, 1, 1, 0, 0, 0, 27, 0, 23, 0, 1, 1, 0, 0, 1]' : 0.176072}", "{'[3, 1, 1, 0, 1, 1, 0, 0, 0, 27, 0, 23, 0, 1, 1, 0, 0, 1]' : 0.17815}", "{'[3, 1, 1, 0, 1, 1, 0, 0, 0, 27, 0, 23, 0, 1, 1, 0, 0, 1]' : 0.177535}", "{'[3, 1, 1, 0, 1, 1, 0, 0, 0, 27, 0, 23, 0, 1, 1, 0, 0, 1]' : 0.174307}", "{'[3, 1, 1, 0, 1, 1, 0, 0, 0, 27, 0, 23, 0, 1, 1, 0, 0, 1]' : 0.178026}", "{'[3, 1, 1, 0, 1, 1, 0, 0, 0, 27, 0, 23, 0, 1, 1, 0, 0, 1]' : 0.178819}", "{'[3, 1, 1, 0, 1, 1, 0, 0, 0, 27, 0, 23, 0, 1, 1, 0, 0, 1]' : 0.178921}", "{'[3, 1, 1, 0, 1, 1, 0, 0, 0, 27, 0, 23, 0, 1, 1, 0, 0, 1]' : 0.178263}", "{'[3, 1, 1, 0, 1, 1, 0, 0, 0, 27, 0, 23, 0, 1, 1, 0, 0, 1]' : 0.178894}", "{'[3, 1, 1, 0, 1, 1, 0, 0, 0, 27, 0, 23, 0, 1, 1, 0, 0, 1]' : 0.178718}", "{'[3, 1, 1, 0, 1, 1, 0, 0, 0, 27, 0, 23, 0, 1, 1, 0, 0, 1]' : 0.178896}", "{'[3, 1, 1, 0, 1, 1, 0, 0, 0, 27, 0, 23, 0, 1, 1, 0, 0, 1]' : 0.178636}", "{'[3, 1, 1, 0, 1, 1, 0, 0, 0, 27, 0, 23, 0, 1, 1, 0, 0, 1]' : 0.178544}", "{'[3, 1, 1, 0, 1, 1, 0, 0, 0, 27, 0, 23, 0, 1, 1, 0, 0, 1]' : 0.178741}", "{'[3, 1, 1, 0, 1, 1, 0, 0, 0, 27, 0, 23, 0, 1, 1, 0, 0, 1]' : 0.178957}", "{'[3, 1, 1, 0, 1, 1, 0, 0, 0, 27, 0, 23, 0, 1, 1, 0, 0, 1]' : 0.178724}", "{'[3, 1, 1, 0, 1, 1, 0, 0, 0, 27, 0, 23, 0, 1, 1, 0, 0, 1]' : 0.178956}", "{'[3, 1, 1, 0, 1, 1, 0, 0, 0, 27, 0, 23, 0, 1, 1, 0, 0, 1]' : 0.17873}", "{'[3, 1, 1, 0, 1, 1, 0, 0, 0, 27, 0, 23, 0, 1, 1, 0, 0, 1]' : 0.17836}", "{'[3, 1, 1, 0, 1, 1, 0, 0, 0, 27, 0, 23, 0, 1, 1, 0, 0, 1]' : 0.176007}", "{'[3, 1, 1, 0, 1, 1, 0, 0, 0, 27, 0, 23, 0, 1, 1, 0, 0, 1]' : 0.178223}", "{'[3, 1, 1, 0, 1, 1, 0, 0, 0, 27, 0, 23, 0, 1, 1, 0, 0, 1]' : 0.177207}", "{'[3, 1, 1, 0, 1, 1, 0, 0, 0, 27, 0, 23, 0, 1, 1, 0, 0, 1]' : 0.175101}", "{'[3, 1, 1, 0, 1, 1, 0, 0, 0, 27, 0, 23, 0, 1, 1, 0, 0, 1]' : 0.176925}", "{'[3, 1, 1, 0, 1, 1, 0, 0, 0, 27, 0, 23, 0, 1, 1, 0, 0, 1]' : 0.174398}", "{'[3, 1, 1, 0, 1, 1, 0, 0, 0, 27, 0, 23, 0, 1, 1, 0, 0, 1]' : 0.175142}", "{'[3, 1, 1, 0, 1, 1, 0, 0, 0, 27, 0, 23, 0, 1, 1, 0, 0, 1]' : 0.17843}"]
returning from 'run': {'[3, 1, 1, 0, 1, 1, 0, 0, 0, 27, 0, 23, 0, 1, 1, 0, 0, 1]': ([0.195568, 0.195512, 0.186611, 0.176072, 0.17815, 0.177535, 0.174307, 0.178026, 0.178819, 0.178921, 0.178263, 0.178894, 0.178718, 0.178896, 0.178636, 0.178544, 0.178741, 0.178957, 0.178724, 0.178956, 0.17873, 0.17836, 0.176007, 0.178223, 0.177207, 0.175101, 0.176925, 0.174398, 0.175142, 0.17843], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 1, 1, 0, 1, 1, 0, 0, 0, 27, 0, 23, 0, 1, 1, 0, 0, 1]': ([0.195568, 0.195512, 0.186611, 0.176072, 0.17815, 0.177535, 0.174307, 0.178026, 0.178819, 0.178921, 0.178263, 0.178894, 0.178718, 0.178896, 0.178636, 0.178544, 0.178741, 0.178957, 0.178724, 0.178956, 0.17873, 0.17836, 0.176007, 0.178223, 0.177207, 0.175101, 0.176925, 0.174398, 0.175142, 0.17843], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		247
        Multiplications: 	88
        Divisions: 		0
        Logical: 		0
        Reads: 			570
        Writes: 		79
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest17.exe __orio_perftest17.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest17.exe  
Program Test Output: 
{'[6, 0, 1, 0, 1, 5, 0, 1, 2, 0, 4, 4, 0, 2, 0, 0, 0, 0]' : 0.348307}
{'[6, 0, 1, 0, 1, 5, 0, 1, 2, 0, 4, 4, 0, 2, 0, 0, 0, 0]' : 0.329748}
{'[6, 0, 1, 0, 1, 5, 0, 1, 2, 0, 4, 4, 0, 2, 0, 0, 0, 0]' : 0.309833}
{'[6, 0, 1, 0, 1, 5, 0, 1, 2, 0, 4, 4, 0, 2, 0, 0, 0, 0]' : 0.309825}
{'[6, 0, 1, 0, 1, 5, 0, 1, 2, 0, 4, 4, 0, 2, 0, 0, 0, 0]' : 0.301418}
{'[6, 0, 1, 0, 1, 5, 0, 1, 2, 0, 4, 4, 0, 2, 0, 0, 0, 0]' : 0.298987}
{'[6, 0, 1, 0, 1, 5, 0, 1, 2, 0, 4, 4, 0, 2, 0, 0, 0, 0]' : 0.291759}
{'[6, 0, 1, 0, 1, 5, 0, 1, 2, 0, 4, 4, 0, 2, 0, 0, 0, 0]' : 0.297508}
{'[6, 0, 1, 0, 1, 5, 0, 1, 2, 0, 4, 4, 0, 2, 0, 0, 0, 0]' : 0.300794}
{'[6, 0, 1, 0, 1, 5, 0, 1, 2, 0, 4, 4, 0, 2, 0, 0, 0, 0]' : 0.308976}
{'[6, 0, 1, 0, 1, 5, 0, 1, 2, 0, 4, 4, 0, 2, 0, 0, 0, 0]' : 0.309822}
{'[6, 0, 1, 0, 1, 5, 0, 1, 2, 0, 4, 4, 0, 2, 0, 0, 0, 0]' : 0.309828}
{'[6, 0, 1, 0, 1, 5, 0, 1, 2, 0, 4, 4, 0, 2, 0, 0, 0, 0]' : 0.310114}
{'[6, 0, 1, 0, 1, 5, 0, 1, 2, 0, 4, 4, 0, 2, 0, 0, 0, 0]' : 0.309877}
{'[6, 0, 1, 0, 1, 5, 0, 1, 2, 0, 4, 4, 0, 2, 0, 0, 0, 0]' : 0.30977}
{'[6, 0, 1, 0, 1, 5, 0, 1, 2, 0, 4, 4, 0, 2, 0, 0, 0, 0]' : 0.305012}
{'[6, 0, 1, 0, 1, 5, 0, 1, 2, 0, 4, 4, 0, 2, 0, 0, 0, 0]' : 0.309833}
{'[6, 0, 1, 0, 1, 5, 0, 1, 2, 0, 4, 4, 0, 2, 0, 0, 0, 0]' : 0.310035}
{'[6, 0, 1, 0, 1, 5, 0, 1, 2, 0, 4, 4, 0, 2, 0, 0, 0, 0]' : 0.310031}
{'[6, 0, 1, 0, 1, 5, 0, 1, 2, 0, 4, 4, 0, 2, 0, 0, 0, 0]' : 0.309796}
{'[6, 0, 1, 0, 1, 5, 0, 1, 2, 0, 4, 4, 0, 2, 0, 0, 0, 0]' : 0.30978}
{'[6, 0, 1, 0, 1, 5, 0, 1, 2, 0, 4, 4, 0, 2, 0, 0, 0, 0]' : 0.309831}
{'[6, 0, 1, 0, 1, 5, 0, 1, 2, 0, 4, 4, 0, 2, 0, 0, 0, 0]' : 0.309954}
{'[6, 0, 1, 0, 1, 5, 0, 1, 2, 0, 4, 4, 0, 2, 0, 0, 0, 0]' : 0.309848}
{'[6, 0, 1, 0, 1, 5, 0, 1, 2, 0, 4, 4, 0, 2, 0, 0, 0, 0]' : 0.30983}
{'[6, 0, 1, 0, 1, 5, 0, 1, 2, 0, 4, 4, 0, 2, 0, 0, 0, 0]' : 0.310026}
{'[6, 0, 1, 0, 1, 5, 0, 1, 2, 0, 4, 4, 0, 2, 0, 0, 0, 0]' : 0.309934}
{'[6, 0, 1, 0, 1, 5, 0, 1, 2, 0, 4, 4, 0, 2, 0, 0, 0, 0]' : 0.309822}
{'[6, 0, 1, 0, 1, 5, 0, 1, 2, 0, 4, 4, 0, 2, 0, 0, 0, 0]' : 0.309862}
{'[6, 0, 1, 0, 1, 5, 0, 1, 2, 0, 4, 4, 0, 2, 0, 0, 0, 0]' : 0.309807}

out:
 ["{'[6, 0, 1, 0, 1, 5, 0, 1, 2, 0, 4, 4, 0, 2, 0, 0, 0, 0]' : 0.348307}", "{'[6, 0, 1, 0, 1, 5, 0, 1, 2, 0, 4, 4, 0, 2, 0, 0, 0, 0]' : 0.329748}", "{'[6, 0, 1, 0, 1, 5, 0, 1, 2, 0, 4, 4, 0, 2, 0, 0, 0, 0]' : 0.309833}", "{'[6, 0, 1, 0, 1, 5, 0, 1, 2, 0, 4, 4, 0, 2, 0, 0, 0, 0]' : 0.309825}", "{'[6, 0, 1, 0, 1, 5, 0, 1, 2, 0, 4, 4, 0, 2, 0, 0, 0, 0]' : 0.301418}", "{'[6, 0, 1, 0, 1, 5, 0, 1, 2, 0, 4, 4, 0, 2, 0, 0, 0, 0]' : 0.298987}", "{'[6, 0, 1, 0, 1, 5, 0, 1, 2, 0, 4, 4, 0, 2, 0, 0, 0, 0]' : 0.291759}", "{'[6, 0, 1, 0, 1, 5, 0, 1, 2, 0, 4, 4, 0, 2, 0, 0, 0, 0]' : 0.297508}", "{'[6, 0, 1, 0, 1, 5, 0, 1, 2, 0, 4, 4, 0, 2, 0, 0, 0, 0]' : 0.300794}", "{'[6, 0, 1, 0, 1, 5, 0, 1, 2, 0, 4, 4, 0, 2, 0, 0, 0, 0]' : 0.308976}", "{'[6, 0, 1, 0, 1, 5, 0, 1, 2, 0, 4, 4, 0, 2, 0, 0, 0, 0]' : 0.309822}", "{'[6, 0, 1, 0, 1, 5, 0, 1, 2, 0, 4, 4, 0, 2, 0, 0, 0, 0]' : 0.309828}", "{'[6, 0, 1, 0, 1, 5, 0, 1, 2, 0, 4, 4, 0, 2, 0, 0, 0, 0]' : 0.310114}", "{'[6, 0, 1, 0, 1, 5, 0, 1, 2, 0, 4, 4, 0, 2, 0, 0, 0, 0]' : 0.309877}", "{'[6, 0, 1, 0, 1, 5, 0, 1, 2, 0, 4, 4, 0, 2, 0, 0, 0, 0]' : 0.30977}", "{'[6, 0, 1, 0, 1, 5, 0, 1, 2, 0, 4, 4, 0, 2, 0, 0, 0, 0]' : 0.305012}", "{'[6, 0, 1, 0, 1, 5, 0, 1, 2, 0, 4, 4, 0, 2, 0, 0, 0, 0]' : 0.309833}", "{'[6, 0, 1, 0, 1, 5, 0, 1, 2, 0, 4, 4, 0, 2, 0, 0, 0, 0]' : 0.310035}", "{'[6, 0, 1, 0, 1, 5, 0, 1, 2, 0, 4, 4, 0, 2, 0, 0, 0, 0]' : 0.310031}", "{'[6, 0, 1, 0, 1, 5, 0, 1, 2, 0, 4, 4, 0, 2, 0, 0, 0, 0]' : 0.309796}", "{'[6, 0, 1, 0, 1, 5, 0, 1, 2, 0, 4, 4, 0, 2, 0, 0, 0, 0]' : 0.30978}", "{'[6, 0, 1, 0, 1, 5, 0, 1, 2, 0, 4, 4, 0, 2, 0, 0, 0, 0]' : 0.309831}", "{'[6, 0, 1, 0, 1, 5, 0, 1, 2, 0, 4, 4, 0, 2, 0, 0, 0, 0]' : 0.309954}", "{'[6, 0, 1, 0, 1, 5, 0, 1, 2, 0, 4, 4, 0, 2, 0, 0, 0, 0]' : 0.309848}", "{'[6, 0, 1, 0, 1, 5, 0, 1, 2, 0, 4, 4, 0, 2, 0, 0, 0, 0]' : 0.30983}", "{'[6, 0, 1, 0, 1, 5, 0, 1, 2, 0, 4, 4, 0, 2, 0, 0, 0, 0]' : 0.310026}", "{'[6, 0, 1, 0, 1, 5, 0, 1, 2, 0, 4, 4, 0, 2, 0, 0, 0, 0]' : 0.309934}", "{'[6, 0, 1, 0, 1, 5, 0, 1, 2, 0, 4, 4, 0, 2, 0, 0, 0, 0]' : 0.309822}", "{'[6, 0, 1, 0, 1, 5, 0, 1, 2, 0, 4, 4, 0, 2, 0, 0, 0, 0]' : 0.309862}", "{'[6, 0, 1, 0, 1, 5, 0, 1, 2, 0, 4, 4, 0, 2, 0, 0, 0, 0]' : 0.309807}"]
returning from 'run': {'[6, 0, 1, 0, 1, 5, 0, 1, 2, 0, 4, 4, 0, 2, 0, 0, 0, 0]': ([0.348307, 0.329748, 0.309833, 0.309825, 0.301418, 0.298987, 0.291759, 0.297508, 0.300794, 0.308976, 0.309822, 0.309828, 0.310114, 0.309877, 0.30977, 0.305012, 0.309833, 0.310035, 0.310031, 0.309796, 0.30978, 0.309831, 0.309954, 0.309848, 0.30983, 0.310026, 0.309934, 0.309822, 0.309862, 0.309807], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 1, 0, 1, 5, 0, 1, 2, 0, 4, 4, 0, 2, 0, 0, 0, 0]': ([0.348307, 0.329748, 0.309833, 0.309825, 0.301418, 0.298987, 0.291759, 0.297508, 0.300794, 0.308976, 0.309822, 0.309828, 0.310114, 0.309877, 0.30977, 0.305012, 0.309833, 0.310035, 0.310031, 0.309796, 0.30978, 0.309831, 0.309954, 0.309848, 0.30983, 0.310026, 0.309934, 0.309822, 0.309862, 0.309807], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	5
        Additions: 		244
        Multiplications: 	74
        Divisions: 		0
        Logical: 		0
        Reads: 			592
        Writes: 		150
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest18.exe __orio_perftest18.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest18.exe  
Program Test Output: 
{'[0, 2, 0, 6, 1, 4, 1, 0, 24, 0, 9, 27, 0, 1, 0, 1, 1, 0]' : 0.192098}
{'[0, 2, 0, 6, 1, 4, 1, 0, 24, 0, 9, 27, 0, 1, 0, 1, 1, 0]' : 0.191933}
{'[0, 2, 0, 6, 1, 4, 1, 0, 24, 0, 9, 27, 0, 1, 0, 1, 1, 0]' : 0.174277}
{'[0, 2, 0, 6, 1, 4, 1, 0, 24, 0, 9, 27, 0, 1, 0, 1, 1, 0]' : 0.170617}
{'[0, 2, 0, 6, 1, 4, 1, 0, 24, 0, 9, 27, 0, 1, 0, 1, 1, 0]' : 0.170499}
{'[0, 2, 0, 6, 1, 4, 1, 0, 24, 0, 9, 27, 0, 1, 0, 1, 1, 0]' : 0.170562}
{'[0, 2, 0, 6, 1, 4, 1, 0, 24, 0, 9, 27, 0, 1, 0, 1, 1, 0]' : 0.170803}
{'[0, 2, 0, 6, 1, 4, 1, 0, 24, 0, 9, 27, 0, 1, 0, 1, 1, 0]' : 0.170586}
{'[0, 2, 0, 6, 1, 4, 1, 0, 24, 0, 9, 27, 0, 1, 0, 1, 1, 0]' : 0.170627}
{'[0, 2, 0, 6, 1, 4, 1, 0, 24, 0, 9, 27, 0, 1, 0, 1, 1, 0]' : 0.170735}
{'[0, 2, 0, 6, 1, 4, 1, 0, 24, 0, 9, 27, 0, 1, 0, 1, 1, 0]' : 0.170513}
{'[0, 2, 0, 6, 1, 4, 1, 0, 24, 0, 9, 27, 0, 1, 0, 1, 1, 0]' : 0.170614}
{'[0, 2, 0, 6, 1, 4, 1, 0, 24, 0, 9, 27, 0, 1, 0, 1, 1, 0]' : 0.170819}
{'[0, 2, 0, 6, 1, 4, 1, 0, 24, 0, 9, 27, 0, 1, 0, 1, 1, 0]' : 0.170556}
{'[0, 2, 0, 6, 1, 4, 1, 0, 24, 0, 9, 27, 0, 1, 0, 1, 1, 0]' : 0.170629}
{'[0, 2, 0, 6, 1, 4, 1, 0, 24, 0, 9, 27, 0, 1, 0, 1, 1, 0]' : 0.170534}
{'[0, 2, 0, 6, 1, 4, 1, 0, 24, 0, 9, 27, 0, 1, 0, 1, 1, 0]' : 0.165797}
{'[0, 2, 0, 6, 1, 4, 1, 0, 24, 0, 9, 27, 0, 1, 0, 1, 1, 0]' : 0.16585}
{'[0, 2, 0, 6, 1, 4, 1, 0, 24, 0, 9, 27, 0, 1, 0, 1, 1, 0]' : 0.166096}
{'[0, 2, 0, 6, 1, 4, 1, 0, 24, 0, 9, 27, 0, 1, 0, 1, 1, 0]' : 0.165897}
{'[0, 2, 0, 6, 1, 4, 1, 0, 24, 0, 9, 27, 0, 1, 0, 1, 1, 0]' : 0.165789}
{'[0, 2, 0, 6, 1, 4, 1, 0, 24, 0, 9, 27, 0, 1, 0, 1, 1, 0]' : 0.170173}
{'[0, 2, 0, 6, 1, 4, 1, 0, 24, 0, 9, 27, 0, 1, 0, 1, 1, 0]' : 0.17077}
{'[0, 2, 0, 6, 1, 4, 1, 0, 24, 0, 9, 27, 0, 1, 0, 1, 1, 0]' : 0.170573}
{'[0, 2, 0, 6, 1, 4, 1, 0, 24, 0, 9, 27, 0, 1, 0, 1, 1, 0]' : 0.170697}
{'[0, 2, 0, 6, 1, 4, 1, 0, 24, 0, 9, 27, 0, 1, 0, 1, 1, 0]' : 0.170062}
{'[0, 2, 0, 6, 1, 4, 1, 0, 24, 0, 9, 27, 0, 1, 0, 1, 1, 0]' : 0.166075}
{'[0, 2, 0, 6, 1, 4, 1, 0, 24, 0, 9, 27, 0, 1, 0, 1, 1, 0]' : 0.170552}
{'[0, 2, 0, 6, 1, 4, 1, 0, 24, 0, 9, 27, 0, 1, 0, 1, 1, 0]' : 0.170564}
{'[0, 2, 0, 6, 1, 4, 1, 0, 24, 0, 9, 27, 0, 1, 0, 1, 1, 0]' : 0.170671}

out:
 ["{'[0, 2, 0, 6, 1, 4, 1, 0, 24, 0, 9, 27, 0, 1, 0, 1, 1, 0]' : 0.192098}", "{'[0, 2, 0, 6, 1, 4, 1, 0, 24, 0, 9, 27, 0, 1, 0, 1, 1, 0]' : 0.191933}", "{'[0, 2, 0, 6, 1, 4, 1, 0, 24, 0, 9, 27, 0, 1, 0, 1, 1, 0]' : 0.174277}", "{'[0, 2, 0, 6, 1, 4, 1, 0, 24, 0, 9, 27, 0, 1, 0, 1, 1, 0]' : 0.170617}", "{'[0, 2, 0, 6, 1, 4, 1, 0, 24, 0, 9, 27, 0, 1, 0, 1, 1, 0]' : 0.170499}", "{'[0, 2, 0, 6, 1, 4, 1, 0, 24, 0, 9, 27, 0, 1, 0, 1, 1, 0]' : 0.170562}", "{'[0, 2, 0, 6, 1, 4, 1, 0, 24, 0, 9, 27, 0, 1, 0, 1, 1, 0]' : 0.170803}", "{'[0, 2, 0, 6, 1, 4, 1, 0, 24, 0, 9, 27, 0, 1, 0, 1, 1, 0]' : 0.170586}", "{'[0, 2, 0, 6, 1, 4, 1, 0, 24, 0, 9, 27, 0, 1, 0, 1, 1, 0]' : 0.170627}", "{'[0, 2, 0, 6, 1, 4, 1, 0, 24, 0, 9, 27, 0, 1, 0, 1, 1, 0]' : 0.170735}", "{'[0, 2, 0, 6, 1, 4, 1, 0, 24, 0, 9, 27, 0, 1, 0, 1, 1, 0]' : 0.170513}", "{'[0, 2, 0, 6, 1, 4, 1, 0, 24, 0, 9, 27, 0, 1, 0, 1, 1, 0]' : 0.170614}", "{'[0, 2, 0, 6, 1, 4, 1, 0, 24, 0, 9, 27, 0, 1, 0, 1, 1, 0]' : 0.170819}", "{'[0, 2, 0, 6, 1, 4, 1, 0, 24, 0, 9, 27, 0, 1, 0, 1, 1, 0]' : 0.170556}", "{'[0, 2, 0, 6, 1, 4, 1, 0, 24, 0, 9, 27, 0, 1, 0, 1, 1, 0]' : 0.170629}", "{'[0, 2, 0, 6, 1, 4, 1, 0, 24, 0, 9, 27, 0, 1, 0, 1, 1, 0]' : 0.170534}", "{'[0, 2, 0, 6, 1, 4, 1, 0, 24, 0, 9, 27, 0, 1, 0, 1, 1, 0]' : 0.165797}", "{'[0, 2, 0, 6, 1, 4, 1, 0, 24, 0, 9, 27, 0, 1, 0, 1, 1, 0]' : 0.16585}", "{'[0, 2, 0, 6, 1, 4, 1, 0, 24, 0, 9, 27, 0, 1, 0, 1, 1, 0]' : 0.166096}", "{'[0, 2, 0, 6, 1, 4, 1, 0, 24, 0, 9, 27, 0, 1, 0, 1, 1, 0]' : 0.165897}", "{'[0, 2, 0, 6, 1, 4, 1, 0, 24, 0, 9, 27, 0, 1, 0, 1, 1, 0]' : 0.165789}", "{'[0, 2, 0, 6, 1, 4, 1, 0, 24, 0, 9, 27, 0, 1, 0, 1, 1, 0]' : 0.170173}", "{'[0, 2, 0, 6, 1, 4, 1, 0, 24, 0, 9, 27, 0, 1, 0, 1, 1, 0]' : 0.17077}", "{'[0, 2, 0, 6, 1, 4, 1, 0, 24, 0, 9, 27, 0, 1, 0, 1, 1, 0]' : 0.170573}", "{'[0, 2, 0, 6, 1, 4, 1, 0, 24, 0, 9, 27, 0, 1, 0, 1, 1, 0]' : 0.170697}", "{'[0, 2, 0, 6, 1, 4, 1, 0, 24, 0, 9, 27, 0, 1, 0, 1, 1, 0]' : 0.170062}", "{'[0, 2, 0, 6, 1, 4, 1, 0, 24, 0, 9, 27, 0, 1, 0, 1, 1, 0]' : 0.166075}", "{'[0, 2, 0, 6, 1, 4, 1, 0, 24, 0, 9, 27, 0, 1, 0, 1, 1, 0]' : 0.170552}", "{'[0, 2, 0, 6, 1, 4, 1, 0, 24, 0, 9, 27, 0, 1, 0, 1, 1, 0]' : 0.170564}", "{'[0, 2, 0, 6, 1, 4, 1, 0, 24, 0, 9, 27, 0, 1, 0, 1, 1, 0]' : 0.170671}"]
returning from 'run': {'[0, 2, 0, 6, 1, 4, 1, 0, 24, 0, 9, 27, 0, 1, 0, 1, 1, 0]': ([0.192098, 0.191933, 0.174277, 0.170617, 0.170499, 0.170562, 0.170803, 0.170586, 0.170627, 0.170735, 0.170513, 0.170614, 0.170819, 0.170556, 0.170629, 0.170534, 0.165797, 0.16585, 0.166096, 0.165897, 0.165789, 0.170173, 0.17077, 0.170573, 0.170697, 0.170062, 0.166075, 0.170552, 0.170564, 0.170671], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 0, 6, 1, 4, 1, 0, 24, 0, 9, 27, 0, 1, 0, 1, 1, 0]': ([0.192098, 0.191933, 0.174277, 0.170617, 0.170499, 0.170562, 0.170803, 0.170586, 0.170627, 0.170735, 0.170513, 0.170614, 0.170819, 0.170556, 0.170629, 0.170534, 0.165797, 0.16585, 0.166096, 0.165897, 0.165789, 0.170173, 0.17077, 0.170573, 0.170697, 0.170062, 0.166075, 0.170552, 0.170564, 0.170671], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	43
        Max loop nest depth: 	6
        Additions: 		1205
        Multiplications: 	504
        Divisions: 		0
        Logical: 		0
        Reads: 			2503
        Writes: 		487
        Comparisons:		43
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest19.exe __orio_perftest19.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest19.exe  
Program Test Output: 
{'[1, 6, 1, 1, 0, 6, 1, 0, 27, 18, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.107367}
{'[1, 6, 1, 1, 0, 6, 1, 0, 27, 18, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.107332}
{'[1, 6, 1, 1, 0, 6, 1, 0, 27, 18, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.107229}
{'[1, 6, 1, 1, 0, 6, 1, 0, 27, 18, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.107272}
{'[1, 6, 1, 1, 0, 6, 1, 0, 27, 18, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.108919}
{'[1, 6, 1, 1, 0, 6, 1, 0, 27, 18, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.110144}
{'[1, 6, 1, 1, 0, 6, 1, 0, 27, 18, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.110157}
{'[1, 6, 1, 1, 0, 6, 1, 0, 27, 18, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.109658}
{'[1, 6, 1, 1, 0, 6, 1, 0, 27, 18, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.107342}
{'[1, 6, 1, 1, 0, 6, 1, 0, 27, 18, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.110245}
{'[1, 6, 1, 1, 0, 6, 1, 0, 27, 18, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.11014}
{'[1, 6, 1, 1, 0, 6, 1, 0, 27, 18, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.110189}
{'[1, 6, 1, 1, 0, 6, 1, 0, 27, 18, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.110159}
{'[1, 6, 1, 1, 0, 6, 1, 0, 27, 18, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.107851}
{'[1, 6, 1, 1, 0, 6, 1, 0, 27, 18, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.107287}
{'[1, 6, 1, 1, 0, 6, 1, 0, 27, 18, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.106138}
{'[1, 6, 1, 1, 0, 6, 1, 0, 27, 18, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.104603}
{'[1, 6, 1, 1, 0, 6, 1, 0, 27, 18, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.104462}
{'[1, 6, 1, 1, 0, 6, 1, 0, 27, 18, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.108717}
{'[1, 6, 1, 1, 0, 6, 1, 0, 27, 18, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.110221}
{'[1, 6, 1, 1, 0, 6, 1, 0, 27, 18, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.110192}
{'[1, 6, 1, 1, 0, 6, 1, 0, 27, 18, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.110206}
{'[1, 6, 1, 1, 0, 6, 1, 0, 27, 18, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.107778}
{'[1, 6, 1, 1, 0, 6, 1, 0, 27, 18, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.107245}
{'[1, 6, 1, 1, 0, 6, 1, 0, 27, 18, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.107264}
{'[1, 6, 1, 1, 0, 6, 1, 0, 27, 18, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.107262}
{'[1, 6, 1, 1, 0, 6, 1, 0, 27, 18, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.107359}
{'[1, 6, 1, 1, 0, 6, 1, 0, 27, 18, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.109755}
{'[1, 6, 1, 1, 0, 6, 1, 0, 27, 18, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.110218}
{'[1, 6, 1, 1, 0, 6, 1, 0, 27, 18, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.110238}

out:
 ["{'[1, 6, 1, 1, 0, 6, 1, 0, 27, 18, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.107367}", "{'[1, 6, 1, 1, 0, 6, 1, 0, 27, 18, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.107332}", "{'[1, 6, 1, 1, 0, 6, 1, 0, 27, 18, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.107229}", "{'[1, 6, 1, 1, 0, 6, 1, 0, 27, 18, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.107272}", "{'[1, 6, 1, 1, 0, 6, 1, 0, 27, 18, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.108919}", "{'[1, 6, 1, 1, 0, 6, 1, 0, 27, 18, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.110144}", "{'[1, 6, 1, 1, 0, 6, 1, 0, 27, 18, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.110157}", "{'[1, 6, 1, 1, 0, 6, 1, 0, 27, 18, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.109658}", "{'[1, 6, 1, 1, 0, 6, 1, 0, 27, 18, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.107342}", "{'[1, 6, 1, 1, 0, 6, 1, 0, 27, 18, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.110245}", "{'[1, 6, 1, 1, 0, 6, 1, 0, 27, 18, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.11014}", "{'[1, 6, 1, 1, 0, 6, 1, 0, 27, 18, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.110189}", "{'[1, 6, 1, 1, 0, 6, 1, 0, 27, 18, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.110159}", "{'[1, 6, 1, 1, 0, 6, 1, 0, 27, 18, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.107851}", "{'[1, 6, 1, 1, 0, 6, 1, 0, 27, 18, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.107287}", "{'[1, 6, 1, 1, 0, 6, 1, 0, 27, 18, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.106138}", "{'[1, 6, 1, 1, 0, 6, 1, 0, 27, 18, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.104603}", "{'[1, 6, 1, 1, 0, 6, 1, 0, 27, 18, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.104462}", "{'[1, 6, 1, 1, 0, 6, 1, 0, 27, 18, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.108717}", "{'[1, 6, 1, 1, 0, 6, 1, 0, 27, 18, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.110221}", "{'[1, 6, 1, 1, 0, 6, 1, 0, 27, 18, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.110192}", "{'[1, 6, 1, 1, 0, 6, 1, 0, 27, 18, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.110206}", "{'[1, 6, 1, 1, 0, 6, 1, 0, 27, 18, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.107778}", "{'[1, 6, 1, 1, 0, 6, 1, 0, 27, 18, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.107245}", "{'[1, 6, 1, 1, 0, 6, 1, 0, 27, 18, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.107264}", "{'[1, 6, 1, 1, 0, 6, 1, 0, 27, 18, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.107262}", "{'[1, 6, 1, 1, 0, 6, 1, 0, 27, 18, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.107359}", "{'[1, 6, 1, 1, 0, 6, 1, 0, 27, 18, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.109755}", "{'[1, 6, 1, 1, 0, 6, 1, 0, 27, 18, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.110218}", "{'[1, 6, 1, 1, 0, 6, 1, 0, 27, 18, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.110238}"]
returning from 'run': {'[1, 6, 1, 1, 0, 6, 1, 0, 27, 18, 29, 0, 1, 1, 0, 1, 0, 0]': ([0.107367, 0.107332, 0.107229, 0.107272, 0.108919, 0.110144, 0.110157, 0.109658, 0.107342, 0.110245, 0.11014, 0.110189, 0.110159, 0.107851, 0.107287, 0.106138, 0.104603, 0.104462, 0.108717, 0.110221, 0.110192, 0.110206, 0.107778, 0.107245, 0.107264, 0.107262, 0.107359, 0.109755, 0.110218, 0.110238], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 6, 1, 1, 0, 6, 1, 0, 27, 18, 29, 0, 1, 1, 0, 1, 0, 0]': ([0.107367, 0.107332, 0.107229, 0.107272, 0.108919, 0.110144, 0.110157, 0.109658, 0.107342, 0.110245, 0.11014, 0.110189, 0.110159, 0.107851, 0.107287, 0.106138, 0.104603, 0.104462, 0.108717, 0.110221, 0.110192, 0.110206, 0.107778, 0.107245, 0.107264, 0.107262, 0.107359, 0.109755, 0.110218, 0.110238], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	135
        Max loop nest depth: 	4
        Additions: 		4050
        Multiplications: 	1116
        Divisions: 		0
        Logical: 		0
        Reads: 			6957
        Writes: 		923
        Comparisons:		135
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest20.exe __orio_perftest20.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest20.exe  
Program Test Output: 
{'[0, 0, 6, 1, 0, 4, 0, 1, 0, 28, 6, 0, 2, 0, 0, 0, 1, 0]' : 0.224198}
{'[0, 0, 6, 1, 0, 4, 0, 1, 0, 28, 6, 0, 2, 0, 0, 0, 1, 0]' : 0.221156}
{'[0, 0, 6, 1, 0, 4, 0, 1, 0, 28, 6, 0, 2, 0, 0, 0, 1, 0]' : 0.218078}
{'[0, 0, 6, 1, 0, 4, 0, 1, 0, 28, 6, 0, 2, 0, 0, 0, 1, 0]' : 0.222434}
{'[0, 0, 6, 1, 0, 4, 0, 1, 0, 28, 6, 0, 2, 0, 0, 0, 1, 0]' : 0.225054}
{'[0, 0, 6, 1, 0, 4, 0, 1, 0, 28, 6, 0, 2, 0, 0, 0, 1, 0]' : 0.223438}
{'[0, 0, 6, 1, 0, 4, 0, 1, 0, 28, 6, 0, 2, 0, 0, 0, 1, 0]' : 0.222155}
{'[0, 0, 6, 1, 0, 4, 0, 1, 0, 28, 6, 0, 2, 0, 0, 0, 1, 0]' : 0.222487}
{'[0, 0, 6, 1, 0, 4, 0, 1, 0, 28, 6, 0, 2, 0, 0, 0, 1, 0]' : 0.226031}
{'[0, 0, 6, 1, 0, 4, 0, 1, 0, 28, 6, 0, 2, 0, 0, 0, 1, 0]' : 0.225763}
{'[0, 0, 6, 1, 0, 4, 0, 1, 0, 28, 6, 0, 2, 0, 0, 0, 1, 0]' : 0.227086}
{'[0, 0, 6, 1, 0, 4, 0, 1, 0, 28, 6, 0, 2, 0, 0, 0, 1, 0]' : 0.225388}
{'[0, 0, 6, 1, 0, 4, 0, 1, 0, 28, 6, 0, 2, 0, 0, 0, 1, 0]' : 0.224849}
{'[0, 0, 6, 1, 0, 4, 0, 1, 0, 28, 6, 0, 2, 0, 0, 0, 1, 0]' : 0.225007}
{'[0, 0, 6, 1, 0, 4, 0, 1, 0, 28, 6, 0, 2, 0, 0, 0, 1, 0]' : 0.224032}
{'[0, 0, 6, 1, 0, 4, 0, 1, 0, 28, 6, 0, 2, 0, 0, 0, 1, 0]' : 0.225055}
{'[0, 0, 6, 1, 0, 4, 0, 1, 0, 28, 6, 0, 2, 0, 0, 0, 1, 0]' : 0.223651}
{'[0, 0, 6, 1, 0, 4, 0, 1, 0, 28, 6, 0, 2, 0, 0, 0, 1, 0]' : 0.224669}
{'[0, 0, 6, 1, 0, 4, 0, 1, 0, 28, 6, 0, 2, 0, 0, 0, 1, 0]' : 0.222285}
{'[0, 0, 6, 1, 0, 4, 0, 1, 0, 28, 6, 0, 2, 0, 0, 0, 1, 0]' : 0.224865}
{'[0, 0, 6, 1, 0, 4, 0, 1, 0, 28, 6, 0, 2, 0, 0, 0, 1, 0]' : 0.221939}
{'[0, 0, 6, 1, 0, 4, 0, 1, 0, 28, 6, 0, 2, 0, 0, 0, 1, 0]' : 0.224043}
{'[0, 0, 6, 1, 0, 4, 0, 1, 0, 28, 6, 0, 2, 0, 0, 0, 1, 0]' : 0.22239}
{'[0, 0, 6, 1, 0, 4, 0, 1, 0, 28, 6, 0, 2, 0, 0, 0, 1, 0]' : 0.223017}
{'[0, 0, 6, 1, 0, 4, 0, 1, 0, 28, 6, 0, 2, 0, 0, 0, 1, 0]' : 0.222172}
{'[0, 0, 6, 1, 0, 4, 0, 1, 0, 28, 6, 0, 2, 0, 0, 0, 1, 0]' : 0.22214}
{'[0, 0, 6, 1, 0, 4, 0, 1, 0, 28, 6, 0, 2, 0, 0, 0, 1, 0]' : 0.222227}
{'[0, 0, 6, 1, 0, 4, 0, 1, 0, 28, 6, 0, 2, 0, 0, 0, 1, 0]' : 0.222656}
{'[0, 0, 6, 1, 0, 4, 0, 1, 0, 28, 6, 0, 2, 0, 0, 0, 1, 0]' : 0.225311}
{'[0, 0, 6, 1, 0, 4, 0, 1, 0, 28, 6, 0, 2, 0, 0, 0, 1, 0]' : 0.223567}

out:
 ["{'[0, 0, 6, 1, 0, 4, 0, 1, 0, 28, 6, 0, 2, 0, 0, 0, 1, 0]' : 0.224198}", "{'[0, 0, 6, 1, 0, 4, 0, 1, 0, 28, 6, 0, 2, 0, 0, 0, 1, 0]' : 0.221156}", "{'[0, 0, 6, 1, 0, 4, 0, 1, 0, 28, 6, 0, 2, 0, 0, 0, 1, 0]' : 0.218078}", "{'[0, 0, 6, 1, 0, 4, 0, 1, 0, 28, 6, 0, 2, 0, 0, 0, 1, 0]' : 0.222434}", "{'[0, 0, 6, 1, 0, 4, 0, 1, 0, 28, 6, 0, 2, 0, 0, 0, 1, 0]' : 0.225054}", "{'[0, 0, 6, 1, 0, 4, 0, 1, 0, 28, 6, 0, 2, 0, 0, 0, 1, 0]' : 0.223438}", "{'[0, 0, 6, 1, 0, 4, 0, 1, 0, 28, 6, 0, 2, 0, 0, 0, 1, 0]' : 0.222155}", "{'[0, 0, 6, 1, 0, 4, 0, 1, 0, 28, 6, 0, 2, 0, 0, 0, 1, 0]' : 0.222487}", "{'[0, 0, 6, 1, 0, 4, 0, 1, 0, 28, 6, 0, 2, 0, 0, 0, 1, 0]' : 0.226031}", "{'[0, 0, 6, 1, 0, 4, 0, 1, 0, 28, 6, 0, 2, 0, 0, 0, 1, 0]' : 0.225763}", "{'[0, 0, 6, 1, 0, 4, 0, 1, 0, 28, 6, 0, 2, 0, 0, 0, 1, 0]' : 0.227086}", "{'[0, 0, 6, 1, 0, 4, 0, 1, 0, 28, 6, 0, 2, 0, 0, 0, 1, 0]' : 0.225388}", "{'[0, 0, 6, 1, 0, 4, 0, 1, 0, 28, 6, 0, 2, 0, 0, 0, 1, 0]' : 0.224849}", "{'[0, 0, 6, 1, 0, 4, 0, 1, 0, 28, 6, 0, 2, 0, 0, 0, 1, 0]' : 0.225007}", "{'[0, 0, 6, 1, 0, 4, 0, 1, 0, 28, 6, 0, 2, 0, 0, 0, 1, 0]' : 0.224032}", "{'[0, 0, 6, 1, 0, 4, 0, 1, 0, 28, 6, 0, 2, 0, 0, 0, 1, 0]' : 0.225055}", "{'[0, 0, 6, 1, 0, 4, 0, 1, 0, 28, 6, 0, 2, 0, 0, 0, 1, 0]' : 0.223651}", "{'[0, 0, 6, 1, 0, 4, 0, 1, 0, 28, 6, 0, 2, 0, 0, 0, 1, 0]' : 0.224669}", "{'[0, 0, 6, 1, 0, 4, 0, 1, 0, 28, 6, 0, 2, 0, 0, 0, 1, 0]' : 0.222285}", "{'[0, 0, 6, 1, 0, 4, 0, 1, 0, 28, 6, 0, 2, 0, 0, 0, 1, 0]' : 0.224865}", "{'[0, 0, 6, 1, 0, 4, 0, 1, 0, 28, 6, 0, 2, 0, 0, 0, 1, 0]' : 0.221939}", "{'[0, 0, 6, 1, 0, 4, 0, 1, 0, 28, 6, 0, 2, 0, 0, 0, 1, 0]' : 0.224043}", "{'[0, 0, 6, 1, 0, 4, 0, 1, 0, 28, 6, 0, 2, 0, 0, 0, 1, 0]' : 0.22239}", "{'[0, 0, 6, 1, 0, 4, 0, 1, 0, 28, 6, 0, 2, 0, 0, 0, 1, 0]' : 0.223017}", "{'[0, 0, 6, 1, 0, 4, 0, 1, 0, 28, 6, 0, 2, 0, 0, 0, 1, 0]' : 0.222172}", "{'[0, 0, 6, 1, 0, 4, 0, 1, 0, 28, 6, 0, 2, 0, 0, 0, 1, 0]' : 0.22214}", "{'[0, 0, 6, 1, 0, 4, 0, 1, 0, 28, 6, 0, 2, 0, 0, 0, 1, 0]' : 0.222227}", "{'[0, 0, 6, 1, 0, 4, 0, 1, 0, 28, 6, 0, 2, 0, 0, 0, 1, 0]' : 0.222656}", "{'[0, 0, 6, 1, 0, 4, 0, 1, 0, 28, 6, 0, 2, 0, 0, 0, 1, 0]' : 0.225311}", "{'[0, 0, 6, 1, 0, 4, 0, 1, 0, 28, 6, 0, 2, 0, 0, 0, 1, 0]' : 0.223567}"]
returning from 'run': {'[0, 0, 6, 1, 0, 4, 0, 1, 0, 28, 6, 0, 2, 0, 0, 0, 1, 0]': ([0.224198, 0.221156, 0.218078, 0.222434, 0.225054, 0.223438, 0.222155, 0.222487, 0.226031, 0.225763, 0.227086, 0.225388, 0.224849, 0.225007, 0.224032, 0.225055, 0.223651, 0.224669, 0.222285, 0.224865, 0.221939, 0.224043, 0.22239, 0.223017, 0.222172, 0.22214, 0.222227, 0.222656, 0.225311, 0.223567], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 6, 1, 0, 4, 0, 1, 0, 28, 6, 0, 2, 0, 0, 0, 1, 0]': ([0.224198, 0.221156, 0.218078, 0.222434, 0.225054, 0.223438, 0.222155, 0.222487, 0.226031, 0.225763, 0.227086, 0.225388, 0.224849, 0.225007, 0.224032, 0.225055, 0.223651, 0.224669, 0.222285, 0.224865, 0.221939, 0.224043, 0.22239, 0.223017, 0.222172, 0.22214, 0.222227, 0.222656, 0.225311, 0.223567], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	37
        Max loop nest depth: 	4
        Additions: 		2085
        Multiplications: 	960
        Divisions: 		0
        Logical: 		0
        Reads: 			4102
        Writes: 		708
        Comparisons:		37
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest21.exe __orio_perftest21.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest21.exe  
Program Test Output: 
{'[5, 0, 3, 0, 4, 0, 0, 1, 27, 5, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.105734}
{'[5, 0, 3, 0, 4, 0, 0, 1, 27, 5, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.103404}
{'[5, 0, 3, 0, 4, 0, 0, 1, 27, 5, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.103375}
{'[5, 0, 3, 0, 4, 0, 0, 1, 27, 5, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.103134}
{'[5, 0, 3, 0, 4, 0, 0, 1, 27, 5, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.102111}
{'[5, 0, 3, 0, 4, 0, 0, 1, 27, 5, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.100415}
{'[5, 0, 3, 0, 4, 0, 0, 1, 27, 5, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.100831}
{'[5, 0, 3, 0, 4, 0, 0, 1, 27, 5, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.10311}
{'[5, 0, 3, 0, 4, 0, 0, 1, 27, 5, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.103119}
{'[5, 0, 3, 0, 4, 0, 0, 1, 27, 5, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.103143}
{'[5, 0, 3, 0, 4, 0, 0, 1, 27, 5, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.103086}
{'[5, 0, 3, 0, 4, 0, 0, 1, 27, 5, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.103463}
{'[5, 0, 3, 0, 4, 0, 0, 1, 27, 5, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.103327}
{'[5, 0, 3, 0, 4, 0, 0, 1, 27, 5, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.103198}
{'[5, 0, 3, 0, 4, 0, 0, 1, 27, 5, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.102901}
{'[5, 0, 3, 0, 4, 0, 0, 1, 27, 5, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.100625}
{'[5, 0, 3, 0, 4, 0, 0, 1, 27, 5, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.102157}
{'[5, 0, 3, 0, 4, 0, 0, 1, 27, 5, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.105913}
{'[5, 0, 3, 0, 4, 0, 0, 1, 27, 5, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.105545}
{'[5, 0, 3, 0, 4, 0, 0, 1, 27, 5, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.105584}
{'[5, 0, 3, 0, 4, 0, 0, 1, 27, 5, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.105589}
{'[5, 0, 3, 0, 4, 0, 0, 1, 27, 5, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.104228}
{'[5, 0, 3, 0, 4, 0, 0, 1, 27, 5, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.103361}
{'[5, 0, 3, 0, 4, 0, 0, 1, 27, 5, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.10339}
{'[5, 0, 3, 0, 4, 0, 0, 1, 27, 5, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.103187}
{'[5, 0, 3, 0, 4, 0, 0, 1, 27, 5, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.103167}
{'[5, 0, 3, 0, 4, 0, 0, 1, 27, 5, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.105194}
{'[5, 0, 3, 0, 4, 0, 0, 1, 27, 5, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.103914}
{'[5, 0, 3, 0, 4, 0, 0, 1, 27, 5, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.103401}
{'[5, 0, 3, 0, 4, 0, 0, 1, 27, 5, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.103113}

out:
 ["{'[5, 0, 3, 0, 4, 0, 0, 1, 27, 5, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.105734}", "{'[5, 0, 3, 0, 4, 0, 0, 1, 27, 5, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.103404}", "{'[5, 0, 3, 0, 4, 0, 0, 1, 27, 5, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.103375}", "{'[5, 0, 3, 0, 4, 0, 0, 1, 27, 5, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.103134}", "{'[5, 0, 3, 0, 4, 0, 0, 1, 27, 5, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.102111}", "{'[5, 0, 3, 0, 4, 0, 0, 1, 27, 5, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.100415}", "{'[5, 0, 3, 0, 4, 0, 0, 1, 27, 5, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.100831}", "{'[5, 0, 3, 0, 4, 0, 0, 1, 27, 5, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.10311}", "{'[5, 0, 3, 0, 4, 0, 0, 1, 27, 5, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.103119}", "{'[5, 0, 3, 0, 4, 0, 0, 1, 27, 5, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.103143}", "{'[5, 0, 3, 0, 4, 0, 0, 1, 27, 5, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.103086}", "{'[5, 0, 3, 0, 4, 0, 0, 1, 27, 5, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.103463}", "{'[5, 0, 3, 0, 4, 0, 0, 1, 27, 5, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.103327}", "{'[5, 0, 3, 0, 4, 0, 0, 1, 27, 5, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.103198}", "{'[5, 0, 3, 0, 4, 0, 0, 1, 27, 5, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.102901}", "{'[5, 0, 3, 0, 4, 0, 0, 1, 27, 5, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.100625}", "{'[5, 0, 3, 0, 4, 0, 0, 1, 27, 5, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.102157}", "{'[5, 0, 3, 0, 4, 0, 0, 1, 27, 5, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.105913}", "{'[5, 0, 3, 0, 4, 0, 0, 1, 27, 5, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.105545}", "{'[5, 0, 3, 0, 4, 0, 0, 1, 27, 5, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.105584}", "{'[5, 0, 3, 0, 4, 0, 0, 1, 27, 5, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.105589}", "{'[5, 0, 3, 0, 4, 0, 0, 1, 27, 5, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.104228}", "{'[5, 0, 3, 0, 4, 0, 0, 1, 27, 5, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.103361}", "{'[5, 0, 3, 0, 4, 0, 0, 1, 27, 5, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.10339}", "{'[5, 0, 3, 0, 4, 0, 0, 1, 27, 5, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.103187}", "{'[5, 0, 3, 0, 4, 0, 0, 1, 27, 5, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.103167}", "{'[5, 0, 3, 0, 4, 0, 0, 1, 27, 5, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.105194}", "{'[5, 0, 3, 0, 4, 0, 0, 1, 27, 5, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.103914}", "{'[5, 0, 3, 0, 4, 0, 0, 1, 27, 5, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.103401}", "{'[5, 0, 3, 0, 4, 0, 0, 1, 27, 5, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.103113}"]
returning from 'run': {'[5, 0, 3, 0, 4, 0, 0, 1, 27, 5, 29, 0, 1, 0, 0, 1, 1, 0]': ([0.105734, 0.103404, 0.103375, 0.103134, 0.102111, 0.100415, 0.100831, 0.10311, 0.103119, 0.103143, 0.103086, 0.103463, 0.103327, 0.103198, 0.102901, 0.100625, 0.102157, 0.105913, 0.105545, 0.105584, 0.105589, 0.104228, 0.103361, 0.10339, 0.103187, 0.103167, 0.105194, 0.103914, 0.103401, 0.103113], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 0, 3, 0, 4, 0, 0, 1, 27, 5, 29, 0, 1, 0, 0, 1, 1, 0]': ([0.105734, 0.103404, 0.103375, 0.103134, 0.102111, 0.100415, 0.100831, 0.10311, 0.103119, 0.103143, 0.103086, 0.103463, 0.103327, 0.103198, 0.102901, 0.100625, 0.102157, 0.105913, 0.105545, 0.105584, 0.105589, 0.104228, 0.103361, 0.10339, 0.103187, 0.103167, 0.105194, 0.103914, 0.103401, 0.103113], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = iii
Code stats:
        Number of loops: 	51
        Max loop nest depth: 	5
        Additions: 		996
        Multiplications: 	216
        Divisions: 		0
        Logical: 		0
        Reads: 			1815
        Writes: 		289
        Comparisons:		51
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest22.exe __orio_perftest22.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest22.exe  
Program Test Output: 
{'[5, 0, 5, 3, 6, 4, 1, 1, 25, 10, 26, 0, 0, 1, 0, 0, 0, 1]' : 0.178026}
{'[5, 0, 5, 3, 6, 4, 1, 1, 25, 10, 26, 0, 0, 1, 0, 0, 0, 1]' : 0.178125}
{'[5, 0, 5, 3, 6, 4, 1, 1, 25, 10, 26, 0, 0, 1, 0, 0, 0, 1]' : 0.155251}
{'[5, 0, 5, 3, 6, 4, 1, 1, 25, 10, 26, 0, 0, 1, 0, 0, 0, 1]' : 0.149988}
{'[5, 0, 5, 3, 6, 4, 1, 1, 25, 10, 26, 0, 0, 1, 0, 0, 0, 1]' : 0.149997}
{'[5, 0, 5, 3, 6, 4, 1, 1, 25, 10, 26, 0, 0, 1, 0, 0, 0, 1]' : 0.15001}
{'[5, 0, 5, 3, 6, 4, 1, 1, 25, 10, 26, 0, 0, 1, 0, 0, 0, 1]' : 0.151244}
{'[5, 0, 5, 3, 6, 4, 1, 1, 25, 10, 26, 0, 0, 1, 0, 0, 0, 1]' : 0.150042}
{'[5, 0, 5, 3, 6, 4, 1, 1, 25, 10, 26, 0, 0, 1, 0, 0, 0, 1]' : 0.150492}
{'[5, 0, 5, 3, 6, 4, 1, 1, 25, 10, 26, 0, 0, 1, 0, 0, 0, 1]' : 0.149985}
{'[5, 0, 5, 3, 6, 4, 1, 1, 25, 10, 26, 0, 0, 1, 0, 0, 0, 1]' : 0.14999}
{'[5, 0, 5, 3, 6, 4, 1, 1, 25, 10, 26, 0, 0, 1, 0, 0, 0, 1]' : 0.150339}
{'[5, 0, 5, 3, 6, 4, 1, 1, 25, 10, 26, 0, 0, 1, 0, 0, 0, 1]' : 0.150124}
{'[5, 0, 5, 3, 6, 4, 1, 1, 25, 10, 26, 0, 0, 1, 0, 0, 0, 1]' : 0.150052}
{'[5, 0, 5, 3, 6, 4, 1, 1, 25, 10, 26, 0, 0, 1, 0, 0, 0, 1]' : 0.150025}
{'[5, 0, 5, 3, 6, 4, 1, 1, 25, 10, 26, 0, 0, 1, 0, 0, 0, 1]' : 0.14994}
{'[5, 0, 5, 3, 6, 4, 1, 1, 25, 10, 26, 0, 0, 1, 0, 0, 0, 1]' : 0.150655}
{'[5, 0, 5, 3, 6, 4, 1, 1, 25, 10, 26, 0, 0, 1, 0, 0, 0, 1]' : 0.150027}
{'[5, 0, 5, 3, 6, 4, 1, 1, 25, 10, 26, 0, 0, 1, 0, 0, 0, 1]' : 0.149945}
{'[5, 0, 5, 3, 6, 4, 1, 1, 25, 10, 26, 0, 0, 1, 0, 0, 0, 1]' : 0.150131}
{'[5, 0, 5, 3, 6, 4, 1, 1, 25, 10, 26, 0, 0, 1, 0, 0, 0, 1]' : 0.150183}
{'[5, 0, 5, 3, 6, 4, 1, 1, 25, 10, 26, 0, 0, 1, 0, 0, 0, 1]' : 0.150082}
{'[5, 0, 5, 3, 6, 4, 1, 1, 25, 10, 26, 0, 0, 1, 0, 0, 0, 1]' : 0.149898}
{'[5, 0, 5, 3, 6, 4, 1, 1, 25, 10, 26, 0, 0, 1, 0, 0, 0, 1]' : 0.150288}
{'[5, 0, 5, 3, 6, 4, 1, 1, 25, 10, 26, 0, 0, 1, 0, 0, 0, 1]' : 0.14985}
{'[5, 0, 5, 3, 6, 4, 1, 1, 25, 10, 26, 0, 0, 1, 0, 0, 0, 1]' : 0.149994}
{'[5, 0, 5, 3, 6, 4, 1, 1, 25, 10, 26, 0, 0, 1, 0, 0, 0, 1]' : 0.1507}
{'[5, 0, 5, 3, 6, 4, 1, 1, 25, 10, 26, 0, 0, 1, 0, 0, 0, 1]' : 0.14998}
{'[5, 0, 5, 3, 6, 4, 1, 1, 25, 10, 26, 0, 0, 1, 0, 0, 0, 1]' : 0.150471}
{'[5, 0, 5, 3, 6, 4, 1, 1, 25, 10, 26, 0, 0, 1, 0, 0, 0, 1]' : 0.15016}

out:
 ["{'[5, 0, 5, 3, 6, 4, 1, 1, 25, 10, 26, 0, 0, 1, 0, 0, 0, 1]' : 0.178026}", "{'[5, 0, 5, 3, 6, 4, 1, 1, 25, 10, 26, 0, 0, 1, 0, 0, 0, 1]' : 0.178125}", "{'[5, 0, 5, 3, 6, 4, 1, 1, 25, 10, 26, 0, 0, 1, 0, 0, 0, 1]' : 0.155251}", "{'[5, 0, 5, 3, 6, 4, 1, 1, 25, 10, 26, 0, 0, 1, 0, 0, 0, 1]' : 0.149988}", "{'[5, 0, 5, 3, 6, 4, 1, 1, 25, 10, 26, 0, 0, 1, 0, 0, 0, 1]' : 0.149997}", "{'[5, 0, 5, 3, 6, 4, 1, 1, 25, 10, 26, 0, 0, 1, 0, 0, 0, 1]' : 0.15001}", "{'[5, 0, 5, 3, 6, 4, 1, 1, 25, 10, 26, 0, 0, 1, 0, 0, 0, 1]' : 0.151244}", "{'[5, 0, 5, 3, 6, 4, 1, 1, 25, 10, 26, 0, 0, 1, 0, 0, 0, 1]' : 0.150042}", "{'[5, 0, 5, 3, 6, 4, 1, 1, 25, 10, 26, 0, 0, 1, 0, 0, 0, 1]' : 0.150492}", "{'[5, 0, 5, 3, 6, 4, 1, 1, 25, 10, 26, 0, 0, 1, 0, 0, 0, 1]' : 0.149985}", "{'[5, 0, 5, 3, 6, 4, 1, 1, 25, 10, 26, 0, 0, 1, 0, 0, 0, 1]' : 0.14999}", "{'[5, 0, 5, 3, 6, 4, 1, 1, 25, 10, 26, 0, 0, 1, 0, 0, 0, 1]' : 0.150339}", "{'[5, 0, 5, 3, 6, 4, 1, 1, 25, 10, 26, 0, 0, 1, 0, 0, 0, 1]' : 0.150124}", "{'[5, 0, 5, 3, 6, 4, 1, 1, 25, 10, 26, 0, 0, 1, 0, 0, 0, 1]' : 0.150052}", "{'[5, 0, 5, 3, 6, 4, 1, 1, 25, 10, 26, 0, 0, 1, 0, 0, 0, 1]' : 0.150025}", "{'[5, 0, 5, 3, 6, 4, 1, 1, 25, 10, 26, 0, 0, 1, 0, 0, 0, 1]' : 0.14994}", "{'[5, 0, 5, 3, 6, 4, 1, 1, 25, 10, 26, 0, 0, 1, 0, 0, 0, 1]' : 0.150655}", "{'[5, 0, 5, 3, 6, 4, 1, 1, 25, 10, 26, 0, 0, 1, 0, 0, 0, 1]' : 0.150027}", "{'[5, 0, 5, 3, 6, 4, 1, 1, 25, 10, 26, 0, 0, 1, 0, 0, 0, 1]' : 0.149945}", "{'[5, 0, 5, 3, 6, 4, 1, 1, 25, 10, 26, 0, 0, 1, 0, 0, 0, 1]' : 0.150131}", "{'[5, 0, 5, 3, 6, 4, 1, 1, 25, 10, 26, 0, 0, 1, 0, 0, 0, 1]' : 0.150183}", "{'[5, 0, 5, 3, 6, 4, 1, 1, 25, 10, 26, 0, 0, 1, 0, 0, 0, 1]' : 0.150082}", "{'[5, 0, 5, 3, 6, 4, 1, 1, 25, 10, 26, 0, 0, 1, 0, 0, 0, 1]' : 0.149898}", "{'[5, 0, 5, 3, 6, 4, 1, 1, 25, 10, 26, 0, 0, 1, 0, 0, 0, 1]' : 0.150288}", "{'[5, 0, 5, 3, 6, 4, 1, 1, 25, 10, 26, 0, 0, 1, 0, 0, 0, 1]' : 0.14985}", "{'[5, 0, 5, 3, 6, 4, 1, 1, 25, 10, 26, 0, 0, 1, 0, 0, 0, 1]' : 0.149994}", "{'[5, 0, 5, 3, 6, 4, 1, 1, 25, 10, 26, 0, 0, 1, 0, 0, 0, 1]' : 0.1507}", "{'[5, 0, 5, 3, 6, 4, 1, 1, 25, 10, 26, 0, 0, 1, 0, 0, 0, 1]' : 0.14998}", "{'[5, 0, 5, 3, 6, 4, 1, 1, 25, 10, 26, 0, 0, 1, 0, 0, 0, 1]' : 0.150471}", "{'[5, 0, 5, 3, 6, 4, 1, 1, 25, 10, 26, 0, 0, 1, 0, 0, 0, 1]' : 0.15016}"]
returning from 'run': {'[5, 0, 5, 3, 6, 4, 1, 1, 25, 10, 26, 0, 0, 1, 0, 0, 0, 1]': ([0.178026, 0.178125, 0.155251, 0.149988, 0.149997, 0.15001, 0.151244, 0.150042, 0.150492, 0.149985, 0.14999, 0.150339, 0.150124, 0.150052, 0.150025, 0.14994, 0.150655, 0.150027, 0.149945, 0.150131, 0.150183, 0.150082, 0.149898, 0.150288, 0.14985, 0.149994, 0.1507, 0.14998, 0.150471, 0.15016], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 0, 5, 3, 6, 4, 1, 1, 25, 10, 26, 0, 0, 1, 0, 0, 0, 1]': ([0.178026, 0.178125, 0.155251, 0.149988, 0.149997, 0.15001, 0.151244, 0.150042, 0.150492, 0.149985, 0.14999, 0.150339, 0.150124, 0.150052, 0.150025, 0.14994, 0.150655, 0.150027, 0.149945, 0.150131, 0.150183, 0.150082, 0.149898, 0.150288, 0.14985, 0.149994, 0.1507, 0.14998, 0.150471, 0.15016], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	5
        Additions: 		2251
        Multiplications: 	1056
        Divisions: 		0
        Logical: 		0
        Reads: 			4353
        Writes: 		728
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest23.exe __orio_perftest23.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest23.exe  
Program Test Output: 
{'[0, 3, 1, 1, 0, 6, 0, 1, 12, 0, 0, 13, 2, 0, 0, 1, 1, 1]' : 0.182911}
{'[0, 3, 1, 1, 0, 6, 0, 1, 12, 0, 0, 13, 2, 0, 0, 1, 1, 1]' : 0.183658}
{'[0, 3, 1, 1, 0, 6, 0, 1, 12, 0, 0, 13, 2, 0, 0, 1, 1, 1]' : 0.181394}
{'[0, 3, 1, 1, 0, 6, 0, 1, 12, 0, 0, 13, 2, 0, 0, 1, 1, 1]' : 0.178829}
{'[0, 3, 1, 1, 0, 6, 0, 1, 12, 0, 0, 13, 2, 0, 0, 1, 1, 1]' : 0.181692}
{'[0, 3, 1, 1, 0, 6, 0, 1, 12, 0, 0, 13, 2, 0, 0, 1, 1, 1]' : 0.182662}
{'[0, 3, 1, 1, 0, 6, 0, 1, 12, 0, 0, 13, 2, 0, 0, 1, 1, 1]' : 0.183888}
{'[0, 3, 1, 1, 0, 6, 0, 1, 12, 0, 0, 13, 2, 0, 0, 1, 1, 1]' : 0.183348}
{'[0, 3, 1, 1, 0, 6, 0, 1, 12, 0, 0, 13, 2, 0, 0, 1, 1, 1]' : 0.183341}
{'[0, 3, 1, 1, 0, 6, 0, 1, 12, 0, 0, 13, 2, 0, 0, 1, 1, 1]' : 0.179658}
{'[0, 3, 1, 1, 0, 6, 0, 1, 12, 0, 0, 13, 2, 0, 0, 1, 1, 1]' : 0.183501}
{'[0, 3, 1, 1, 0, 6, 0, 1, 12, 0, 0, 13, 2, 0, 0, 1, 1, 1]' : 0.183347}
{'[0, 3, 1, 1, 0, 6, 0, 1, 12, 0, 0, 13, 2, 0, 0, 1, 1, 1]' : 0.183763}
{'[0, 3, 1, 1, 0, 6, 0, 1, 12, 0, 0, 13, 2, 0, 0, 1, 1, 1]' : 0.182853}
{'[0, 3, 1, 1, 0, 6, 0, 1, 12, 0, 0, 13, 2, 0, 0, 1, 1, 1]' : 0.182676}
{'[0, 3, 1, 1, 0, 6, 0, 1, 12, 0, 0, 13, 2, 0, 0, 1, 1, 1]' : 0.183373}
{'[0, 3, 1, 1, 0, 6, 0, 1, 12, 0, 0, 13, 2, 0, 0, 1, 1, 1]' : 0.183766}
{'[0, 3, 1, 1, 0, 6, 0, 1, 12, 0, 0, 13, 2, 0, 0, 1, 1, 1]' : 0.183891}
{'[0, 3, 1, 1, 0, 6, 0, 1, 12, 0, 0, 13, 2, 0, 0, 1, 1, 1]' : 0.182987}
{'[0, 3, 1, 1, 0, 6, 0, 1, 12, 0, 0, 13, 2, 0, 0, 1, 1, 1]' : 0.182847}
{'[0, 3, 1, 1, 0, 6, 0, 1, 12, 0, 0, 13, 2, 0, 0, 1, 1, 1]' : 0.183444}
{'[0, 3, 1, 1, 0, 6, 0, 1, 12, 0, 0, 13, 2, 0, 0, 1, 1, 1]' : 0.183086}
{'[0, 3, 1, 1, 0, 6, 0, 1, 12, 0, 0, 13, 2, 0, 0, 1, 1, 1]' : 0.182998}
{'[0, 3, 1, 1, 0, 6, 0, 1, 12, 0, 0, 13, 2, 0, 0, 1, 1, 1]' : 0.184517}
{'[0, 3, 1, 1, 0, 6, 0, 1, 12, 0, 0, 13, 2, 0, 0, 1, 1, 1]' : 0.182483}
{'[0, 3, 1, 1, 0, 6, 0, 1, 12, 0, 0, 13, 2, 0, 0, 1, 1, 1]' : 0.183141}
{'[0, 3, 1, 1, 0, 6, 0, 1, 12, 0, 0, 13, 2, 0, 0, 1, 1, 1]' : 0.18275}
{'[0, 3, 1, 1, 0, 6, 0, 1, 12, 0, 0, 13, 2, 0, 0, 1, 1, 1]' : 0.183245}
{'[0, 3, 1, 1, 0, 6, 0, 1, 12, 0, 0, 13, 2, 0, 0, 1, 1, 1]' : 0.183108}
{'[0, 3, 1, 1, 0, 6, 0, 1, 12, 0, 0, 13, 2, 0, 0, 1, 1, 1]' : 0.183133}

out:
 ["{'[0, 3, 1, 1, 0, 6, 0, 1, 12, 0, 0, 13, 2, 0, 0, 1, 1, 1]' : 0.182911}", "{'[0, 3, 1, 1, 0, 6, 0, 1, 12, 0, 0, 13, 2, 0, 0, 1, 1, 1]' : 0.183658}", "{'[0, 3, 1, 1, 0, 6, 0, 1, 12, 0, 0, 13, 2, 0, 0, 1, 1, 1]' : 0.181394}", "{'[0, 3, 1, 1, 0, 6, 0, 1, 12, 0, 0, 13, 2, 0, 0, 1, 1, 1]' : 0.178829}", "{'[0, 3, 1, 1, 0, 6, 0, 1, 12, 0, 0, 13, 2, 0, 0, 1, 1, 1]' : 0.181692}", "{'[0, 3, 1, 1, 0, 6, 0, 1, 12, 0, 0, 13, 2, 0, 0, 1, 1, 1]' : 0.182662}", "{'[0, 3, 1, 1, 0, 6, 0, 1, 12, 0, 0, 13, 2, 0, 0, 1, 1, 1]' : 0.183888}", "{'[0, 3, 1, 1, 0, 6, 0, 1, 12, 0, 0, 13, 2, 0, 0, 1, 1, 1]' : 0.183348}", "{'[0, 3, 1, 1, 0, 6, 0, 1, 12, 0, 0, 13, 2, 0, 0, 1, 1, 1]' : 0.183341}", "{'[0, 3, 1, 1, 0, 6, 0, 1, 12, 0, 0, 13, 2, 0, 0, 1, 1, 1]' : 0.179658}", "{'[0, 3, 1, 1, 0, 6, 0, 1, 12, 0, 0, 13, 2, 0, 0, 1, 1, 1]' : 0.183501}", "{'[0, 3, 1, 1, 0, 6, 0, 1, 12, 0, 0, 13, 2, 0, 0, 1, 1, 1]' : 0.183347}", "{'[0, 3, 1, 1, 0, 6, 0, 1, 12, 0, 0, 13, 2, 0, 0, 1, 1, 1]' : 0.183763}", "{'[0, 3, 1, 1, 0, 6, 0, 1, 12, 0, 0, 13, 2, 0, 0, 1, 1, 1]' : 0.182853}", "{'[0, 3, 1, 1, 0, 6, 0, 1, 12, 0, 0, 13, 2, 0, 0, 1, 1, 1]' : 0.182676}", "{'[0, 3, 1, 1, 0, 6, 0, 1, 12, 0, 0, 13, 2, 0, 0, 1, 1, 1]' : 0.183373}", "{'[0, 3, 1, 1, 0, 6, 0, 1, 12, 0, 0, 13, 2, 0, 0, 1, 1, 1]' : 0.183766}", "{'[0, 3, 1, 1, 0, 6, 0, 1, 12, 0, 0, 13, 2, 0, 0, 1, 1, 1]' : 0.183891}", "{'[0, 3, 1, 1, 0, 6, 0, 1, 12, 0, 0, 13, 2, 0, 0, 1, 1, 1]' : 0.182987}", "{'[0, 3, 1, 1, 0, 6, 0, 1, 12, 0, 0, 13, 2, 0, 0, 1, 1, 1]' : 0.182847}", "{'[0, 3, 1, 1, 0, 6, 0, 1, 12, 0, 0, 13, 2, 0, 0, 1, 1, 1]' : 0.183444}", "{'[0, 3, 1, 1, 0, 6, 0, 1, 12, 0, 0, 13, 2, 0, 0, 1, 1, 1]' : 0.183086}", "{'[0, 3, 1, 1, 0, 6, 0, 1, 12, 0, 0, 13, 2, 0, 0, 1, 1, 1]' : 0.182998}", "{'[0, 3, 1, 1, 0, 6, 0, 1, 12, 0, 0, 13, 2, 0, 0, 1, 1, 1]' : 0.184517}", "{'[0, 3, 1, 1, 0, 6, 0, 1, 12, 0, 0, 13, 2, 0, 0, 1, 1, 1]' : 0.182483}", "{'[0, 3, 1, 1, 0, 6, 0, 1, 12, 0, 0, 13, 2, 0, 0, 1, 1, 1]' : 0.183141}", "{'[0, 3, 1, 1, 0, 6, 0, 1, 12, 0, 0, 13, 2, 0, 0, 1, 1, 1]' : 0.18275}", "{'[0, 3, 1, 1, 0, 6, 0, 1, 12, 0, 0, 13, 2, 0, 0, 1, 1, 1]' : 0.183245}", "{'[0, 3, 1, 1, 0, 6, 0, 1, 12, 0, 0, 13, 2, 0, 0, 1, 1, 1]' : 0.183108}", "{'[0, 3, 1, 1, 0, 6, 0, 1, 12, 0, 0, 13, 2, 0, 0, 1, 1, 1]' : 0.183133}"]
returning from 'run': {'[0, 3, 1, 1, 0, 6, 0, 1, 12, 0, 0, 13, 2, 0, 0, 1, 1, 1]': ([0.182911, 0.183658, 0.181394, 0.178829, 0.181692, 0.182662, 0.183888, 0.183348, 0.183341, 0.179658, 0.183501, 0.183347, 0.183763, 0.182853, 0.182676, 0.183373, 0.183766, 0.183891, 0.182987, 0.182847, 0.183444, 0.183086, 0.182998, 0.184517, 0.182483, 0.183141, 0.18275, 0.183245, 0.183108, 0.183133], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 3, 1, 1, 0, 6, 0, 1, 12, 0, 0, 13, 2, 0, 0, 1, 1, 1]': ([0.182911, 0.183658, 0.181394, 0.178829, 0.181692, 0.182662, 0.183888, 0.183348, 0.183341, 0.179658, 0.183501, 0.183347, 0.183763, 0.182853, 0.182676, 0.183373, 0.183766, 0.183891, 0.182987, 0.182847, 0.183444, 0.183086, 0.182998, 0.184517, 0.182483, 0.183141, 0.18275, 0.183245, 0.183108, 0.183133], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	38
        Max loop nest depth: 	5
        Additions: 		8494
        Multiplications: 	2310
        Divisions: 		0
        Logical: 		0
        Reads: 			12659
        Writes: 		1285
        Comparisons:		38
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest24.exe __orio_perftest24.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest24.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest24.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest24.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest24.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	17
        Max loop nest depth: 	5
        Additions: 		899
        Multiplications: 	264
        Divisions: 		0
        Logical: 		0
        Reads: 			1599
        Writes: 		180
        Comparisons:		17
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest25.exe __orio_perftest25.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest25.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest25.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest25.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest25.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	31
        Max loop nest depth: 	4
        Additions: 		740
        Multiplications: 	240
        Divisions: 		0
        Logical: 		0
        Reads: 			1669
        Writes: 		384
        Comparisons:		31
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest26.exe __orio_perftest26.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest26.exe  
Program Test Output: 
{'[0, 0, 0, 2, 5, 1, 1, 0, 11, 4, 0, 9, 0, 0, 1, 1, 0, 0]' : 0.149103}
{'[0, 0, 0, 2, 5, 1, 1, 0, 11, 4, 0, 9, 0, 0, 1, 1, 0, 0]' : 0.149162}
{'[0, 0, 0, 2, 5, 1, 1, 0, 11, 4, 0, 9, 0, 0, 1, 1, 0, 0]' : 0.142305}
{'[0, 0, 0, 2, 5, 1, 1, 0, 11, 4, 0, 9, 0, 0, 1, 1, 0, 0]' : 0.127438}
{'[0, 0, 0, 2, 5, 1, 1, 0, 11, 4, 0, 9, 0, 0, 1, 1, 0, 0]' : 0.12954}
{'[0, 0, 0, 2, 5, 1, 1, 0, 11, 4, 0, 9, 0, 0, 1, 1, 0, 0]' : 0.129356}
{'[0, 0, 0, 2, 5, 1, 1, 0, 11, 4, 0, 9, 0, 0, 1, 1, 0, 0]' : 0.127228}
{'[0, 0, 0, 2, 5, 1, 1, 0, 11, 4, 0, 9, 0, 0, 1, 1, 0, 0]' : 0.128164}
{'[0, 0, 0, 2, 5, 1, 1, 0, 11, 4, 0, 9, 0, 0, 1, 1, 0, 0]' : 0.130203}
{'[0, 0, 0, 2, 5, 1, 1, 0, 11, 4, 0, 9, 0, 0, 1, 1, 0, 0]' : 0.129967}
{'[0, 0, 0, 2, 5, 1, 1, 0, 11, 4, 0, 9, 0, 0, 1, 1, 0, 0]' : 0.129362}
{'[0, 0, 0, 2, 5, 1, 1, 0, 11, 4, 0, 9, 0, 0, 1, 1, 0, 0]' : 0.128235}
{'[0, 0, 0, 2, 5, 1, 1, 0, 11, 4, 0, 9, 0, 0, 1, 1, 0, 0]' : 0.129642}
{'[0, 0, 0, 2, 5, 1, 1, 0, 11, 4, 0, 9, 0, 0, 1, 1, 0, 0]' : 0.12953}
{'[0, 0, 0, 2, 5, 1, 1, 0, 11, 4, 0, 9, 0, 0, 1, 1, 0, 0]' : 0.129557}
{'[0, 0, 0, 2, 5, 1, 1, 0, 11, 4, 0, 9, 0, 0, 1, 1, 0, 0]' : 0.129928}
{'[0, 0, 0, 2, 5, 1, 1, 0, 11, 4, 0, 9, 0, 0, 1, 1, 0, 0]' : 0.130301}
{'[0, 0, 0, 2, 5, 1, 1, 0, 11, 4, 0, 9, 0, 0, 1, 1, 0, 0]' : 0.130332}
{'[0, 0, 0, 2, 5, 1, 1, 0, 11, 4, 0, 9, 0, 0, 1, 1, 0, 0]' : 0.130239}
{'[0, 0, 0, 2, 5, 1, 1, 0, 11, 4, 0, 9, 0, 0, 1, 1, 0, 0]' : 0.130048}
{'[0, 0, 0, 2, 5, 1, 1, 0, 11, 4, 0, 9, 0, 0, 1, 1, 0, 0]' : 0.130004}
{'[0, 0, 0, 2, 5, 1, 1, 0, 11, 4, 0, 9, 0, 0, 1, 1, 0, 0]' : 0.130122}
{'[0, 0, 0, 2, 5, 1, 1, 0, 11, 4, 0, 9, 0, 0, 1, 1, 0, 0]' : 0.127993}
{'[0, 0, 0, 2, 5, 1, 1, 0, 11, 4, 0, 9, 0, 0, 1, 1, 0, 0]' : 0.129994}
{'[0, 0, 0, 2, 5, 1, 1, 0, 11, 4, 0, 9, 0, 0, 1, 1, 0, 0]' : 0.130029}
{'[0, 0, 0, 2, 5, 1, 1, 0, 11, 4, 0, 9, 0, 0, 1, 1, 0, 0]' : 0.130005}
{'[0, 0, 0, 2, 5, 1, 1, 0, 11, 4, 0, 9, 0, 0, 1, 1, 0, 0]' : 0.128269}
{'[0, 0, 0, 2, 5, 1, 1, 0, 11, 4, 0, 9, 0, 0, 1, 1, 0, 0]' : 0.133644}
{'[0, 0, 0, 2, 5, 1, 1, 0, 11, 4, 0, 9, 0, 0, 1, 1, 0, 0]' : 0.130703}
{'[0, 0, 0, 2, 5, 1, 1, 0, 11, 4, 0, 9, 0, 0, 1, 1, 0, 0]' : 0.130023}

out:
 ["{'[0, 0, 0, 2, 5, 1, 1, 0, 11, 4, 0, 9, 0, 0, 1, 1, 0, 0]' : 0.149103}", "{'[0, 0, 0, 2, 5, 1, 1, 0, 11, 4, 0, 9, 0, 0, 1, 1, 0, 0]' : 0.149162}", "{'[0, 0, 0, 2, 5, 1, 1, 0, 11, 4, 0, 9, 0, 0, 1, 1, 0, 0]' : 0.142305}", "{'[0, 0, 0, 2, 5, 1, 1, 0, 11, 4, 0, 9, 0, 0, 1, 1, 0, 0]' : 0.127438}", "{'[0, 0, 0, 2, 5, 1, 1, 0, 11, 4, 0, 9, 0, 0, 1, 1, 0, 0]' : 0.12954}", "{'[0, 0, 0, 2, 5, 1, 1, 0, 11, 4, 0, 9, 0, 0, 1, 1, 0, 0]' : 0.129356}", "{'[0, 0, 0, 2, 5, 1, 1, 0, 11, 4, 0, 9, 0, 0, 1, 1, 0, 0]' : 0.127228}", "{'[0, 0, 0, 2, 5, 1, 1, 0, 11, 4, 0, 9, 0, 0, 1, 1, 0, 0]' : 0.128164}", "{'[0, 0, 0, 2, 5, 1, 1, 0, 11, 4, 0, 9, 0, 0, 1, 1, 0, 0]' : 0.130203}", "{'[0, 0, 0, 2, 5, 1, 1, 0, 11, 4, 0, 9, 0, 0, 1, 1, 0, 0]' : 0.129967}", "{'[0, 0, 0, 2, 5, 1, 1, 0, 11, 4, 0, 9, 0, 0, 1, 1, 0, 0]' : 0.129362}", "{'[0, 0, 0, 2, 5, 1, 1, 0, 11, 4, 0, 9, 0, 0, 1, 1, 0, 0]' : 0.128235}", "{'[0, 0, 0, 2, 5, 1, 1, 0, 11, 4, 0, 9, 0, 0, 1, 1, 0, 0]' : 0.129642}", "{'[0, 0, 0, 2, 5, 1, 1, 0, 11, 4, 0, 9, 0, 0, 1, 1, 0, 0]' : 0.12953}", "{'[0, 0, 0, 2, 5, 1, 1, 0, 11, 4, 0, 9, 0, 0, 1, 1, 0, 0]' : 0.129557}", "{'[0, 0, 0, 2, 5, 1, 1, 0, 11, 4, 0, 9, 0, 0, 1, 1, 0, 0]' : 0.129928}", "{'[0, 0, 0, 2, 5, 1, 1, 0, 11, 4, 0, 9, 0, 0, 1, 1, 0, 0]' : 0.130301}", "{'[0, 0, 0, 2, 5, 1, 1, 0, 11, 4, 0, 9, 0, 0, 1, 1, 0, 0]' : 0.130332}", "{'[0, 0, 0, 2, 5, 1, 1, 0, 11, 4, 0, 9, 0, 0, 1, 1, 0, 0]' : 0.130239}", "{'[0, 0, 0, 2, 5, 1, 1, 0, 11, 4, 0, 9, 0, 0, 1, 1, 0, 0]' : 0.130048}", "{'[0, 0, 0, 2, 5, 1, 1, 0, 11, 4, 0, 9, 0, 0, 1, 1, 0, 0]' : 0.130004}", "{'[0, 0, 0, 2, 5, 1, 1, 0, 11, 4, 0, 9, 0, 0, 1, 1, 0, 0]' : 0.130122}", "{'[0, 0, 0, 2, 5, 1, 1, 0, 11, 4, 0, 9, 0, 0, 1, 1, 0, 0]' : 0.127993}", "{'[0, 0, 0, 2, 5, 1, 1, 0, 11, 4, 0, 9, 0, 0, 1, 1, 0, 0]' : 0.129994}", "{'[0, 0, 0, 2, 5, 1, 1, 0, 11, 4, 0, 9, 0, 0, 1, 1, 0, 0]' : 0.130029}", "{'[0, 0, 0, 2, 5, 1, 1, 0, 11, 4, 0, 9, 0, 0, 1, 1, 0, 0]' : 0.130005}", "{'[0, 0, 0, 2, 5, 1, 1, 0, 11, 4, 0, 9, 0, 0, 1, 1, 0, 0]' : 0.128269}", "{'[0, 0, 0, 2, 5, 1, 1, 0, 11, 4, 0, 9, 0, 0, 1, 1, 0, 0]' : 0.133644}", "{'[0, 0, 0, 2, 5, 1, 1, 0, 11, 4, 0, 9, 0, 0, 1, 1, 0, 0]' : 0.130703}", "{'[0, 0, 0, 2, 5, 1, 1, 0, 11, 4, 0, 9, 0, 0, 1, 1, 0, 0]' : 0.130023}"]
returning from 'run': {'[0, 0, 0, 2, 5, 1, 1, 0, 11, 4, 0, 9, 0, 0, 1, 1, 0, 0]': ([0.149103, 0.149162, 0.142305, 0.127438, 0.12954, 0.129356, 0.127228, 0.128164, 0.130203, 0.129967, 0.129362, 0.128235, 0.129642, 0.12953, 0.129557, 0.129928, 0.130301, 0.130332, 0.130239, 0.130048, 0.130004, 0.130122, 0.127993, 0.129994, 0.130029, 0.130005, 0.128269, 0.133644, 0.130703, 0.130023], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 0, 2, 5, 1, 1, 0, 11, 4, 0, 9, 0, 0, 1, 1, 0, 0]': ([0.149103, 0.149162, 0.142305, 0.127438, 0.12954, 0.129356, 0.127228, 0.128164, 0.130203, 0.129967, 0.129362, 0.128235, 0.129642, 0.12953, 0.129557, 0.129928, 0.130301, 0.130332, 0.130239, 0.130048, 0.130004, 0.130122, 0.127993, 0.129994, 0.130029, 0.130005, 0.128269, 0.133644, 0.130703, 0.130023], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	26
        Max loop nest depth: 	6
        Additions: 		10607
        Multiplications: 	2574
        Divisions: 		0
        Logical: 		0
        Reads: 			15076
        Writes: 		1353
        Comparisons:		26
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest27.exe __orio_perftest27.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest27.exe  
Program Test Output: 
{'[6, 3, 6, 6, 6, 6, 0, 1, 3, 0, 7, 28, 2, 0, 0, 0, 1, 0]' : 0.313999}
{'[6, 3, 6, 6, 6, 6, 0, 1, 3, 0, 7, 28, 2, 0, 0, 0, 1, 0]' : 0.301466}
{'[6, 3, 6, 6, 6, 6, 0, 1, 3, 0, 7, 28, 2, 0, 0, 0, 1, 0]' : 0.28836}
{'[6, 3, 6, 6, 6, 6, 0, 1, 3, 0, 7, 28, 2, 0, 0, 0, 1, 0]' : 0.290005}
{'[6, 3, 6, 6, 6, 6, 0, 1, 3, 0, 7, 28, 2, 0, 0, 0, 1, 0]' : 0.283311}
{'[6, 3, 6, 6, 6, 6, 0, 1, 3, 0, 7, 28, 2, 0, 0, 0, 1, 0]' : 0.286204}
{'[6, 3, 6, 6, 6, 6, 0, 1, 3, 0, 7, 28, 2, 0, 0, 0, 1, 0]' : 0.287373}
{'[6, 3, 6, 6, 6, 6, 0, 1, 3, 0, 7, 28, 2, 0, 0, 0, 1, 0]' : 0.286699}
{'[6, 3, 6, 6, 6, 6, 0, 1, 3, 0, 7, 28, 2, 0, 0, 0, 1, 0]' : 0.283969}
{'[6, 3, 6, 6, 6, 6, 0, 1, 3, 0, 7, 28, 2, 0, 0, 0, 1, 0]' : 0.286145}
{'[6, 3, 6, 6, 6, 6, 0, 1, 3, 0, 7, 28, 2, 0, 0, 0, 1, 0]' : 0.291302}
{'[6, 3, 6, 6, 6, 6, 0, 1, 3, 0, 7, 28, 2, 0, 0, 0, 1, 0]' : 0.283518}
{'[6, 3, 6, 6, 6, 6, 0, 1, 3, 0, 7, 28, 2, 0, 0, 0, 1, 0]' : 0.288078}
{'[6, 3, 6, 6, 6, 6, 0, 1, 3, 0, 7, 28, 2, 0, 0, 0, 1, 0]' : 0.288636}
{'[6, 3, 6, 6, 6, 6, 0, 1, 3, 0, 7, 28, 2, 0, 0, 0, 1, 0]' : 0.288204}
{'[6, 3, 6, 6, 6, 6, 0, 1, 3, 0, 7, 28, 2, 0, 0, 0, 1, 0]' : 0.284128}
{'[6, 3, 6, 6, 6, 6, 0, 1, 3, 0, 7, 28, 2, 0, 0, 0, 1, 0]' : 0.286371}
{'[6, 3, 6, 6, 6, 6, 0, 1, 3, 0, 7, 28, 2, 0, 0, 0, 1, 0]' : 0.287886}
{'[6, 3, 6, 6, 6, 6, 0, 1, 3, 0, 7, 28, 2, 0, 0, 0, 1, 0]' : 0.283907}
{'[6, 3, 6, 6, 6, 6, 0, 1, 3, 0, 7, 28, 2, 0, 0, 0, 1, 0]' : 0.28666}
{'[6, 3, 6, 6, 6, 6, 0, 1, 3, 0, 7, 28, 2, 0, 0, 0, 1, 0]' : 0.284779}
{'[6, 3, 6, 6, 6, 6, 0, 1, 3, 0, 7, 28, 2, 0, 0, 0, 1, 0]' : 0.28776}
{'[6, 3, 6, 6, 6, 6, 0, 1, 3, 0, 7, 28, 2, 0, 0, 0, 1, 0]' : 0.28445}
{'[6, 3, 6, 6, 6, 6, 0, 1, 3, 0, 7, 28, 2, 0, 0, 0, 1, 0]' : 0.288444}
{'[6, 3, 6, 6, 6, 6, 0, 1, 3, 0, 7, 28, 2, 0, 0, 0, 1, 0]' : 0.287429}
{'[6, 3, 6, 6, 6, 6, 0, 1, 3, 0, 7, 28, 2, 0, 0, 0, 1, 0]' : 0.284834}
{'[6, 3, 6, 6, 6, 6, 0, 1, 3, 0, 7, 28, 2, 0, 0, 0, 1, 0]' : 0.289297}
{'[6, 3, 6, 6, 6, 6, 0, 1, 3, 0, 7, 28, 2, 0, 0, 0, 1, 0]' : 0.288418}
{'[6, 3, 6, 6, 6, 6, 0, 1, 3, 0, 7, 28, 2, 0, 0, 0, 1, 0]' : 0.287898}
{'[6, 3, 6, 6, 6, 6, 0, 1, 3, 0, 7, 28, 2, 0, 0, 0, 1, 0]' : 0.28352}

out:
 ["{'[6, 3, 6, 6, 6, 6, 0, 1, 3, 0, 7, 28, 2, 0, 0, 0, 1, 0]' : 0.313999}", "{'[6, 3, 6, 6, 6, 6, 0, 1, 3, 0, 7, 28, 2, 0, 0, 0, 1, 0]' : 0.301466}", "{'[6, 3, 6, 6, 6, 6, 0, 1, 3, 0, 7, 28, 2, 0, 0, 0, 1, 0]' : 0.28836}", "{'[6, 3, 6, 6, 6, 6, 0, 1, 3, 0, 7, 28, 2, 0, 0, 0, 1, 0]' : 0.290005}", "{'[6, 3, 6, 6, 6, 6, 0, 1, 3, 0, 7, 28, 2, 0, 0, 0, 1, 0]' : 0.283311}", "{'[6, 3, 6, 6, 6, 6, 0, 1, 3, 0, 7, 28, 2, 0, 0, 0, 1, 0]' : 0.286204}", "{'[6, 3, 6, 6, 6, 6, 0, 1, 3, 0, 7, 28, 2, 0, 0, 0, 1, 0]' : 0.287373}", "{'[6, 3, 6, 6, 6, 6, 0, 1, 3, 0, 7, 28, 2, 0, 0, 0, 1, 0]' : 0.286699}", "{'[6, 3, 6, 6, 6, 6, 0, 1, 3, 0, 7, 28, 2, 0, 0, 0, 1, 0]' : 0.283969}", "{'[6, 3, 6, 6, 6, 6, 0, 1, 3, 0, 7, 28, 2, 0, 0, 0, 1, 0]' : 0.286145}", "{'[6, 3, 6, 6, 6, 6, 0, 1, 3, 0, 7, 28, 2, 0, 0, 0, 1, 0]' : 0.291302}", "{'[6, 3, 6, 6, 6, 6, 0, 1, 3, 0, 7, 28, 2, 0, 0, 0, 1, 0]' : 0.283518}", "{'[6, 3, 6, 6, 6, 6, 0, 1, 3, 0, 7, 28, 2, 0, 0, 0, 1, 0]' : 0.288078}", "{'[6, 3, 6, 6, 6, 6, 0, 1, 3, 0, 7, 28, 2, 0, 0, 0, 1, 0]' : 0.288636}", "{'[6, 3, 6, 6, 6, 6, 0, 1, 3, 0, 7, 28, 2, 0, 0, 0, 1, 0]' : 0.288204}", "{'[6, 3, 6, 6, 6, 6, 0, 1, 3, 0, 7, 28, 2, 0, 0, 0, 1, 0]' : 0.284128}", "{'[6, 3, 6, 6, 6, 6, 0, 1, 3, 0, 7, 28, 2, 0, 0, 0, 1, 0]' : 0.286371}", "{'[6, 3, 6, 6, 6, 6, 0, 1, 3, 0, 7, 28, 2, 0, 0, 0, 1, 0]' : 0.287886}", "{'[6, 3, 6, 6, 6, 6, 0, 1, 3, 0, 7, 28, 2, 0, 0, 0, 1, 0]' : 0.283907}", "{'[6, 3, 6, 6, 6, 6, 0, 1, 3, 0, 7, 28, 2, 0, 0, 0, 1, 0]' : 0.28666}", "{'[6, 3, 6, 6, 6, 6, 0, 1, 3, 0, 7, 28, 2, 0, 0, 0, 1, 0]' : 0.284779}", "{'[6, 3, 6, 6, 6, 6, 0, 1, 3, 0, 7, 28, 2, 0, 0, 0, 1, 0]' : 0.28776}", "{'[6, 3, 6, 6, 6, 6, 0, 1, 3, 0, 7, 28, 2, 0, 0, 0, 1, 0]' : 0.28445}", "{'[6, 3, 6, 6, 6, 6, 0, 1, 3, 0, 7, 28, 2, 0, 0, 0, 1, 0]' : 0.288444}", "{'[6, 3, 6, 6, 6, 6, 0, 1, 3, 0, 7, 28, 2, 0, 0, 0, 1, 0]' : 0.287429}", "{'[6, 3, 6, 6, 6, 6, 0, 1, 3, 0, 7, 28, 2, 0, 0, 0, 1, 0]' : 0.284834}", "{'[6, 3, 6, 6, 6, 6, 0, 1, 3, 0, 7, 28, 2, 0, 0, 0, 1, 0]' : 0.289297}", "{'[6, 3, 6, 6, 6, 6, 0, 1, 3, 0, 7, 28, 2, 0, 0, 0, 1, 0]' : 0.288418}", "{'[6, 3, 6, 6, 6, 6, 0, 1, 3, 0, 7, 28, 2, 0, 0, 0, 1, 0]' : 0.287898}", "{'[6, 3, 6, 6, 6, 6, 0, 1, 3, 0, 7, 28, 2, 0, 0, 0, 1, 0]' : 0.28352}"]
returning from 'run': {'[6, 3, 6, 6, 6, 6, 0, 1, 3, 0, 7, 28, 2, 0, 0, 0, 1, 0]': ([0.313999, 0.301466, 0.28836, 0.290005, 0.283311, 0.286204, 0.287373, 0.286699, 0.283969, 0.286145, 0.291302, 0.283518, 0.288078, 0.288636, 0.288204, 0.284128, 0.286371, 0.287886, 0.283907, 0.28666, 0.284779, 0.28776, 0.28445, 0.288444, 0.287429, 0.284834, 0.289297, 0.288418, 0.287898, 0.28352], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 3, 6, 6, 6, 6, 0, 1, 3, 0, 7, 28, 2, 0, 0, 0, 1, 0]': ([0.313999, 0.301466, 0.28836, 0.290005, 0.283311, 0.286204, 0.287373, 0.286699, 0.283969, 0.286145, 0.291302, 0.283518, 0.288078, 0.288636, 0.288204, 0.284128, 0.286371, 0.287886, 0.283907, 0.28666, 0.284779, 0.28776, 0.28445, 0.288444, 0.287429, 0.284834, 0.289297, 0.288418, 0.287898, 0.28352], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		316
        Multiplications: 	110
        Divisions: 		0
        Logical: 		0
        Reads: 			761
        Writes: 		168
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest28.exe __orio_perftest28.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest28.exe  
Program Test Output: 
{'[4, 6, 6, 0, 0, 5, 1, 0, 0, 0, 15, 28, 0, 0, 1, 1, 1, 1]' : 0.185528}
{'[4, 6, 6, 0, 0, 5, 1, 0, 0, 0, 15, 28, 0, 0, 1, 1, 1, 1]' : 0.185783}
{'[4, 6, 6, 0, 0, 5, 1, 0, 0, 0, 15, 28, 0, 0, 1, 1, 1, 1]' : 0.185646}
{'[4, 6, 6, 0, 0, 5, 1, 0, 0, 0, 15, 28, 0, 0, 1, 1, 1, 1]' : 0.185374}
{'[4, 6, 6, 0, 0, 5, 1, 0, 0, 0, 15, 28, 0, 0, 1, 1, 1, 1]' : 0.186551}
{'[4, 6, 6, 0, 0, 5, 1, 0, 0, 0, 15, 28, 0, 0, 1, 1, 1, 1]' : 0.190555}
{'[4, 6, 6, 0, 0, 5, 1, 0, 0, 0, 15, 28, 0, 0, 1, 1, 1, 1]' : 0.190769}
{'[4, 6, 6, 0, 0, 5, 1, 0, 0, 0, 15, 28, 0, 0, 1, 1, 1, 1]' : 0.190923}
{'[4, 6, 6, 0, 0, 5, 1, 0, 0, 0, 15, 28, 0, 0, 1, 1, 1, 1]' : 0.190626}
{'[4, 6, 6, 0, 0, 5, 1, 0, 0, 0, 15, 28, 0, 0, 1, 1, 1, 1]' : 0.190617}
{'[4, 6, 6, 0, 0, 5, 1, 0, 0, 0, 15, 28, 0, 0, 1, 1, 1, 1]' : 0.190743}
{'[4, 6, 6, 0, 0, 5, 1, 0, 0, 0, 15, 28, 0, 0, 1, 1, 1, 1]' : 0.191199}
{'[4, 6, 6, 0, 0, 5, 1, 0, 0, 0, 15, 28, 0, 0, 1, 1, 1, 1]' : 0.189288}
{'[4, 6, 6, 0, 0, 5, 1, 0, 0, 0, 15, 28, 0, 0, 1, 1, 1, 1]' : 0.190636}
{'[4, 6, 6, 0, 0, 5, 1, 0, 0, 0, 15, 28, 0, 0, 1, 1, 1, 1]' : 0.190564}
{'[4, 6, 6, 0, 0, 5, 1, 0, 0, 0, 15, 28, 0, 0, 1, 1, 1, 1]' : 0.185992}
{'[4, 6, 6, 0, 0, 5, 1, 0, 0, 0, 15, 28, 0, 0, 1, 1, 1, 1]' : 0.185621}
{'[4, 6, 6, 0, 0, 5, 1, 0, 0, 0, 15, 28, 0, 0, 1, 1, 1, 1]' : 0.185783}
{'[4, 6, 6, 0, 0, 5, 1, 0, 0, 0, 15, 28, 0, 0, 1, 1, 1, 1]' : 0.186268}
{'[4, 6, 6, 0, 0, 5, 1, 0, 0, 0, 15, 28, 0, 0, 1, 1, 1, 1]' : 0.185467}
{'[4, 6, 6, 0, 0, 5, 1, 0, 0, 0, 15, 28, 0, 0, 1, 1, 1, 1]' : 0.186254}
{'[4, 6, 6, 0, 0, 5, 1, 0, 0, 0, 15, 28, 0, 0, 1, 1, 1, 1]' : 0.185491}
{'[4, 6, 6, 0, 0, 5, 1, 0, 0, 0, 15, 28, 0, 0, 1, 1, 1, 1]' : 0.185719}
{'[4, 6, 6, 0, 0, 5, 1, 0, 0, 0, 15, 28, 0, 0, 1, 1, 1, 1]' : 0.186667}
{'[4, 6, 6, 0, 0, 5, 1, 0, 0, 0, 15, 28, 0, 0, 1, 1, 1, 1]' : 0.188371}
{'[4, 6, 6, 0, 0, 5, 1, 0, 0, 0, 15, 28, 0, 0, 1, 1, 1, 1]' : 0.190645}
{'[4, 6, 6, 0, 0, 5, 1, 0, 0, 0, 15, 28, 0, 0, 1, 1, 1, 1]' : 0.190618}
{'[4, 6, 6, 0, 0, 5, 1, 0, 0, 0, 15, 28, 0, 0, 1, 1, 1, 1]' : 0.190583}
{'[4, 6, 6, 0, 0, 5, 1, 0, 0, 0, 15, 28, 0, 0, 1, 1, 1, 1]' : 0.190378}
{'[4, 6, 6, 0, 0, 5, 1, 0, 0, 0, 15, 28, 0, 0, 1, 1, 1, 1]' : 0.185385}

out:
 ["{'[4, 6, 6, 0, 0, 5, 1, 0, 0, 0, 15, 28, 0, 0, 1, 1, 1, 1]' : 0.185528}", "{'[4, 6, 6, 0, 0, 5, 1, 0, 0, 0, 15, 28, 0, 0, 1, 1, 1, 1]' : 0.185783}", "{'[4, 6, 6, 0, 0, 5, 1, 0, 0, 0, 15, 28, 0, 0, 1, 1, 1, 1]' : 0.185646}", "{'[4, 6, 6, 0, 0, 5, 1, 0, 0, 0, 15, 28, 0, 0, 1, 1, 1, 1]' : 0.185374}", "{'[4, 6, 6, 0, 0, 5, 1, 0, 0, 0, 15, 28, 0, 0, 1, 1, 1, 1]' : 0.186551}", "{'[4, 6, 6, 0, 0, 5, 1, 0, 0, 0, 15, 28, 0, 0, 1, 1, 1, 1]' : 0.190555}", "{'[4, 6, 6, 0, 0, 5, 1, 0, 0, 0, 15, 28, 0, 0, 1, 1, 1, 1]' : 0.190769}", "{'[4, 6, 6, 0, 0, 5, 1, 0, 0, 0, 15, 28, 0, 0, 1, 1, 1, 1]' : 0.190923}", "{'[4, 6, 6, 0, 0, 5, 1, 0, 0, 0, 15, 28, 0, 0, 1, 1, 1, 1]' : 0.190626}", "{'[4, 6, 6, 0, 0, 5, 1, 0, 0, 0, 15, 28, 0, 0, 1, 1, 1, 1]' : 0.190617}", "{'[4, 6, 6, 0, 0, 5, 1, 0, 0, 0, 15, 28, 0, 0, 1, 1, 1, 1]' : 0.190743}", "{'[4, 6, 6, 0, 0, 5, 1, 0, 0, 0, 15, 28, 0, 0, 1, 1, 1, 1]' : 0.191199}", "{'[4, 6, 6, 0, 0, 5, 1, 0, 0, 0, 15, 28, 0, 0, 1, 1, 1, 1]' : 0.189288}", "{'[4, 6, 6, 0, 0, 5, 1, 0, 0, 0, 15, 28, 0, 0, 1, 1, 1, 1]' : 0.190636}", "{'[4, 6, 6, 0, 0, 5, 1, 0, 0, 0, 15, 28, 0, 0, 1, 1, 1, 1]' : 0.190564}", "{'[4, 6, 6, 0, 0, 5, 1, 0, 0, 0, 15, 28, 0, 0, 1, 1, 1, 1]' : 0.185992}", "{'[4, 6, 6, 0, 0, 5, 1, 0, 0, 0, 15, 28, 0, 0, 1, 1, 1, 1]' : 0.185621}", "{'[4, 6, 6, 0, 0, 5, 1, 0, 0, 0, 15, 28, 0, 0, 1, 1, 1, 1]' : 0.185783}", "{'[4, 6, 6, 0, 0, 5, 1, 0, 0, 0, 15, 28, 0, 0, 1, 1, 1, 1]' : 0.186268}", "{'[4, 6, 6, 0, 0, 5, 1, 0, 0, 0, 15, 28, 0, 0, 1, 1, 1, 1]' : 0.185467}", "{'[4, 6, 6, 0, 0, 5, 1, 0, 0, 0, 15, 28, 0, 0, 1, 1, 1, 1]' : 0.186254}", "{'[4, 6, 6, 0, 0, 5, 1, 0, 0, 0, 15, 28, 0, 0, 1, 1, 1, 1]' : 0.185491}", "{'[4, 6, 6, 0, 0, 5, 1, 0, 0, 0, 15, 28, 0, 0, 1, 1, 1, 1]' : 0.185719}", "{'[4, 6, 6, 0, 0, 5, 1, 0, 0, 0, 15, 28, 0, 0, 1, 1, 1, 1]' : 0.186667}", "{'[4, 6, 6, 0, 0, 5, 1, 0, 0, 0, 15, 28, 0, 0, 1, 1, 1, 1]' : 0.188371}", "{'[4, 6, 6, 0, 0, 5, 1, 0, 0, 0, 15, 28, 0, 0, 1, 1, 1, 1]' : 0.190645}", "{'[4, 6, 6, 0, 0, 5, 1, 0, 0, 0, 15, 28, 0, 0, 1, 1, 1, 1]' : 0.190618}", "{'[4, 6, 6, 0, 0, 5, 1, 0, 0, 0, 15, 28, 0, 0, 1, 1, 1, 1]' : 0.190583}", "{'[4, 6, 6, 0, 0, 5, 1, 0, 0, 0, 15, 28, 0, 0, 1, 1, 1, 1]' : 0.190378}", "{'[4, 6, 6, 0, 0, 5, 1, 0, 0, 0, 15, 28, 0, 0, 1, 1, 1, 1]' : 0.185385}"]
returning from 'run': {'[4, 6, 6, 0, 0, 5, 1, 0, 0, 0, 15, 28, 0, 0, 1, 1, 1, 1]': ([0.185528, 0.185783, 0.185646, 0.185374, 0.186551, 0.190555, 0.190769, 0.190923, 0.190626, 0.190617, 0.190743, 0.191199, 0.189288, 0.190636, 0.190564, 0.185992, 0.185621, 0.185783, 0.186268, 0.185467, 0.186254, 0.185491, 0.185719, 0.186667, 0.188371, 0.190645, 0.190618, 0.190583, 0.190378, 0.185385], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 6, 6, 0, 0, 5, 1, 0, 0, 0, 15, 28, 0, 0, 1, 1, 1, 1]': ([0.185528, 0.185783, 0.185646, 0.185374, 0.186551, 0.190555, 0.190769, 0.190923, 0.190626, 0.190617, 0.190743, 0.191199, 0.189288, 0.190636, 0.190564, 0.185992, 0.185621, 0.185783, 0.186268, 0.185467, 0.186254, 0.185491, 0.185719, 0.186667, 0.188371, 0.190645, 0.190618, 0.190583, 0.190378, 0.185385], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = iii
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	5
        Additions: 		8500
        Multiplications: 	2562
        Divisions: 		0
        Logical: 		0
        Reads: 			13066
        Writes: 		1373
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest29.exe __orio_perftest29.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest29.exe  
Program Test Output: 
{'[5, 5, 6, 3, 0, 6, 0, 0, 12, 27, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.280051}
{'[5, 5, 6, 3, 0, 6, 0, 0, 12, 27, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.28128}
{'[5, 5, 6, 3, 0, 6, 0, 0, 12, 27, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.280765}
{'[5, 5, 6, 3, 0, 6, 0, 0, 12, 27, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.278825}
{'[5, 5, 6, 3, 0, 6, 0, 0, 12, 27, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.280769}
{'[5, 5, 6, 3, 0, 6, 0, 0, 12, 27, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.281098}
{'[5, 5, 6, 3, 0, 6, 0, 0, 12, 27, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.281316}
{'[5, 5, 6, 3, 0, 6, 0, 0, 12, 27, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.284191}
{'[5, 5, 6, 3, 0, 6, 0, 0, 12, 27, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.283021}
{'[5, 5, 6, 3, 0, 6, 0, 0, 12, 27, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.281558}
{'[5, 5, 6, 3, 0, 6, 0, 0, 12, 27, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.279807}
{'[5, 5, 6, 3, 0, 6, 0, 0, 12, 27, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.27607}
{'[5, 5, 6, 3, 0, 6, 0, 0, 12, 27, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.277067}
{'[5, 5, 6, 3, 0, 6, 0, 0, 12, 27, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.28158}
{'[5, 5, 6, 3, 0, 6, 0, 0, 12, 27, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.281038}
{'[5, 5, 6, 3, 0, 6, 0, 0, 12, 27, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.281966}
{'[5, 5, 6, 3, 0, 6, 0, 0, 12, 27, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.281562}
{'[5, 5, 6, 3, 0, 6, 0, 0, 12, 27, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.280228}
{'[5, 5, 6, 3, 0, 6, 0, 0, 12, 27, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.276866}
{'[5, 5, 6, 3, 0, 6, 0, 0, 12, 27, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.275362}
{'[5, 5, 6, 3, 0, 6, 0, 0, 12, 27, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.275235}
{'[5, 5, 6, 3, 0, 6, 0, 0, 12, 27, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.276424}
{'[5, 5, 6, 3, 0, 6, 0, 0, 12, 27, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.275381}
{'[5, 5, 6, 3, 0, 6, 0, 0, 12, 27, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.275846}
{'[5, 5, 6, 3, 0, 6, 0, 0, 12, 27, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.275315}
{'[5, 5, 6, 3, 0, 6, 0, 0, 12, 27, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.280225}
{'[5, 5, 6, 3, 0, 6, 0, 0, 12, 27, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.275459}
{'[5, 5, 6, 3, 0, 6, 0, 0, 12, 27, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.275688}
{'[5, 5, 6, 3, 0, 6, 0, 0, 12, 27, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.27685}
{'[5, 5, 6, 3, 0, 6, 0, 0, 12, 27, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.278923}

out:
 ["{'[5, 5, 6, 3, 0, 6, 0, 0, 12, 27, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.280051}", "{'[5, 5, 6, 3, 0, 6, 0, 0, 12, 27, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.28128}", "{'[5, 5, 6, 3, 0, 6, 0, 0, 12, 27, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.280765}", "{'[5, 5, 6, 3, 0, 6, 0, 0, 12, 27, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.278825}", "{'[5, 5, 6, 3, 0, 6, 0, 0, 12, 27, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.280769}", "{'[5, 5, 6, 3, 0, 6, 0, 0, 12, 27, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.281098}", "{'[5, 5, 6, 3, 0, 6, 0, 0, 12, 27, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.281316}", "{'[5, 5, 6, 3, 0, 6, 0, 0, 12, 27, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.284191}", "{'[5, 5, 6, 3, 0, 6, 0, 0, 12, 27, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.283021}", "{'[5, 5, 6, 3, 0, 6, 0, 0, 12, 27, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.281558}", "{'[5, 5, 6, 3, 0, 6, 0, 0, 12, 27, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.279807}", "{'[5, 5, 6, 3, 0, 6, 0, 0, 12, 27, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.27607}", "{'[5, 5, 6, 3, 0, 6, 0, 0, 12, 27, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.277067}", "{'[5, 5, 6, 3, 0, 6, 0, 0, 12, 27, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.28158}", "{'[5, 5, 6, 3, 0, 6, 0, 0, 12, 27, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.281038}", "{'[5, 5, 6, 3, 0, 6, 0, 0, 12, 27, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.281966}", "{'[5, 5, 6, 3, 0, 6, 0, 0, 12, 27, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.281562}", "{'[5, 5, 6, 3, 0, 6, 0, 0, 12, 27, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.280228}", "{'[5, 5, 6, 3, 0, 6, 0, 0, 12, 27, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.276866}", "{'[5, 5, 6, 3, 0, 6, 0, 0, 12, 27, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.275362}", "{'[5, 5, 6, 3, 0, 6, 0, 0, 12, 27, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.275235}", "{'[5, 5, 6, 3, 0, 6, 0, 0, 12, 27, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.276424}", "{'[5, 5, 6, 3, 0, 6, 0, 0, 12, 27, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.275381}", "{'[5, 5, 6, 3, 0, 6, 0, 0, 12, 27, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.275846}", "{'[5, 5, 6, 3, 0, 6, 0, 0, 12, 27, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.275315}", "{'[5, 5, 6, 3, 0, 6, 0, 0, 12, 27, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.280225}", "{'[5, 5, 6, 3, 0, 6, 0, 0, 12, 27, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.275459}", "{'[5, 5, 6, 3, 0, 6, 0, 0, 12, 27, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.275688}", "{'[5, 5, 6, 3, 0, 6, 0, 0, 12, 27, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.27685}", "{'[5, 5, 6, 3, 0, 6, 0, 0, 12, 27, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.278923}"]
returning from 'run': {'[5, 5, 6, 3, 0, 6, 0, 0, 12, 27, 18, 0, 2, 0, 0, 0, 0, 0]': ([0.280051, 0.28128, 0.280765, 0.278825, 0.280769, 0.281098, 0.281316, 0.284191, 0.283021, 0.281558, 0.279807, 0.27607, 0.277067, 0.28158, 0.281038, 0.281966, 0.281562, 0.280228, 0.276866, 0.275362, 0.275235, 0.276424, 0.275381, 0.275846, 0.275315, 0.280225, 0.275459, 0.275688, 0.27685, 0.278923], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 5, 6, 3, 0, 6, 0, 0, 12, 27, 18, 0, 2, 0, 0, 0, 0, 0]': ([0.280051, 0.28128, 0.280765, 0.278825, 0.280769, 0.281098, 0.281316, 0.284191, 0.283021, 0.281558, 0.279807, 0.27607, 0.277067, 0.28158, 0.281038, 0.281966, 0.281562, 0.280228, 0.276866, 0.275362, 0.275235, 0.276424, 0.275381, 0.275846, 0.275315, 0.280225, 0.275459, 0.275688, 0.27685, 0.278923], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	36
        Max loop nest depth: 	5
        Additions: 		2161
        Multiplications: 	650
        Divisions: 		0
        Logical: 		0
        Reads: 			3584
        Writes: 		432
        Comparisons:		36
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest30.exe __orio_perftest30.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest30.exe  
Program Test Output: 
{'[4, 1, 6, 0, 3, 5, 0, 0, 3, 3, 0, 14, 1, 0, 1, 0, 0, 1]' : 0.123494}
{'[4, 1, 6, 0, 3, 5, 0, 0, 3, 3, 0, 14, 1, 0, 1, 0, 0, 1]' : 0.12348}
{'[4, 1, 6, 0, 3, 5, 0, 0, 3, 3, 0, 14, 1, 0, 1, 0, 0, 1]' : 0.123366}
{'[4, 1, 6, 0, 3, 5, 0, 0, 3, 3, 0, 14, 1, 0, 1, 0, 0, 1]' : 0.119484}
{'[4, 1, 6, 0, 3, 5, 0, 0, 3, 3, 0, 14, 1, 0, 1, 0, 0, 1]' : 0.109674}
{'[4, 1, 6, 0, 3, 5, 0, 0, 3, 3, 0, 14, 1, 0, 1, 0, 0, 1]' : 0.109784}
{'[4, 1, 6, 0, 3, 5, 0, 0, 3, 3, 0, 14, 1, 0, 1, 0, 0, 1]' : 0.109288}
{'[4, 1, 6, 0, 3, 5, 0, 0, 3, 3, 0, 14, 1, 0, 1, 0, 0, 1]' : 0.110074}
{'[4, 1, 6, 0, 3, 5, 0, 0, 3, 3, 0, 14, 1, 0, 1, 0, 0, 1]' : 0.109402}
{'[4, 1, 6, 0, 3, 5, 0, 0, 3, 3, 0, 14, 1, 0, 1, 0, 0, 1]' : 0.10949}
{'[4, 1, 6, 0, 3, 5, 0, 0, 3, 3, 0, 14, 1, 0, 1, 0, 0, 1]' : 0.109879}
{'[4, 1, 6, 0, 3, 5, 0, 0, 3, 3, 0, 14, 1, 0, 1, 0, 0, 1]' : 0.109916}
{'[4, 1, 6, 0, 3, 5, 0, 0, 3, 3, 0, 14, 1, 0, 1, 0, 0, 1]' : 0.11045}
{'[4, 1, 6, 0, 3, 5, 0, 0, 3, 3, 0, 14, 1, 0, 1, 0, 0, 1]' : 0.109889}
{'[4, 1, 6, 0, 3, 5, 0, 0, 3, 3, 0, 14, 1, 0, 1, 0, 0, 1]' : 0.109441}
{'[4, 1, 6, 0, 3, 5, 0, 0, 3, 3, 0, 14, 1, 0, 1, 0, 0, 1]' : 0.107067}
{'[4, 1, 6, 0, 3, 5, 0, 0, 3, 3, 0, 14, 1, 0, 1, 0, 0, 1]' : 0.107532}
{'[4, 1, 6, 0, 3, 5, 0, 0, 3, 3, 0, 14, 1, 0, 1, 0, 0, 1]' : 0.107486}
{'[4, 1, 6, 0, 3, 5, 0, 0, 3, 3, 0, 14, 1, 0, 1, 0, 0, 1]' : 0.107216}
{'[4, 1, 6, 0, 3, 5, 0, 0, 3, 3, 0, 14, 1, 0, 1, 0, 0, 1]' : 0.107388}
{'[4, 1, 6, 0, 3, 5, 0, 0, 3, 3, 0, 14, 1, 0, 1, 0, 0, 1]' : 0.107495}
{'[4, 1, 6, 0, 3, 5, 0, 0, 3, 3, 0, 14, 1, 0, 1, 0, 0, 1]' : 0.10861}
{'[4, 1, 6, 0, 3, 5, 0, 0, 3, 3, 0, 14, 1, 0, 1, 0, 0, 1]' : 0.109968}
{'[4, 1, 6, 0, 3, 5, 0, 0, 3, 3, 0, 14, 1, 0, 1, 0, 0, 1]' : 0.109771}
{'[4, 1, 6, 0, 3, 5, 0, 0, 3, 3, 0, 14, 1, 0, 1, 0, 0, 1]' : 0.10993}
{'[4, 1, 6, 0, 3, 5, 0, 0, 3, 3, 0, 14, 1, 0, 1, 0, 0, 1]' : 0.107946}
{'[4, 1, 6, 0, 3, 5, 0, 0, 3, 3, 0, 14, 1, 0, 1, 0, 0, 1]' : 0.110138}
{'[4, 1, 6, 0, 3, 5, 0, 0, 3, 3, 0, 14, 1, 0, 1, 0, 0, 1]' : 0.109881}
{'[4, 1, 6, 0, 3, 5, 0, 0, 3, 3, 0, 14, 1, 0, 1, 0, 0, 1]' : 0.109979}
{'[4, 1, 6, 0, 3, 5, 0, 0, 3, 3, 0, 14, 1, 0, 1, 0, 0, 1]' : 0.110051}

out:
 ["{'[4, 1, 6, 0, 3, 5, 0, 0, 3, 3, 0, 14, 1, 0, 1, 0, 0, 1]' : 0.123494}", "{'[4, 1, 6, 0, 3, 5, 0, 0, 3, 3, 0, 14, 1, 0, 1, 0, 0, 1]' : 0.12348}", "{'[4, 1, 6, 0, 3, 5, 0, 0, 3, 3, 0, 14, 1, 0, 1, 0, 0, 1]' : 0.123366}", "{'[4, 1, 6, 0, 3, 5, 0, 0, 3, 3, 0, 14, 1, 0, 1, 0, 0, 1]' : 0.119484}", "{'[4, 1, 6, 0, 3, 5, 0, 0, 3, 3, 0, 14, 1, 0, 1, 0, 0, 1]' : 0.109674}", "{'[4, 1, 6, 0, 3, 5, 0, 0, 3, 3, 0, 14, 1, 0, 1, 0, 0, 1]' : 0.109784}", "{'[4, 1, 6, 0, 3, 5, 0, 0, 3, 3, 0, 14, 1, 0, 1, 0, 0, 1]' : 0.109288}", "{'[4, 1, 6, 0, 3, 5, 0, 0, 3, 3, 0, 14, 1, 0, 1, 0, 0, 1]' : 0.110074}", "{'[4, 1, 6, 0, 3, 5, 0, 0, 3, 3, 0, 14, 1, 0, 1, 0, 0, 1]' : 0.109402}", "{'[4, 1, 6, 0, 3, 5, 0, 0, 3, 3, 0, 14, 1, 0, 1, 0, 0, 1]' : 0.10949}", "{'[4, 1, 6, 0, 3, 5, 0, 0, 3, 3, 0, 14, 1, 0, 1, 0, 0, 1]' : 0.109879}", "{'[4, 1, 6, 0, 3, 5, 0, 0, 3, 3, 0, 14, 1, 0, 1, 0, 0, 1]' : 0.109916}", "{'[4, 1, 6, 0, 3, 5, 0, 0, 3, 3, 0, 14, 1, 0, 1, 0, 0, 1]' : 0.11045}", "{'[4, 1, 6, 0, 3, 5, 0, 0, 3, 3, 0, 14, 1, 0, 1, 0, 0, 1]' : 0.109889}", "{'[4, 1, 6, 0, 3, 5, 0, 0, 3, 3, 0, 14, 1, 0, 1, 0, 0, 1]' : 0.109441}", "{'[4, 1, 6, 0, 3, 5, 0, 0, 3, 3, 0, 14, 1, 0, 1, 0, 0, 1]' : 0.107067}", "{'[4, 1, 6, 0, 3, 5, 0, 0, 3, 3, 0, 14, 1, 0, 1, 0, 0, 1]' : 0.107532}", "{'[4, 1, 6, 0, 3, 5, 0, 0, 3, 3, 0, 14, 1, 0, 1, 0, 0, 1]' : 0.107486}", "{'[4, 1, 6, 0, 3, 5, 0, 0, 3, 3, 0, 14, 1, 0, 1, 0, 0, 1]' : 0.107216}", "{'[4, 1, 6, 0, 3, 5, 0, 0, 3, 3, 0, 14, 1, 0, 1, 0, 0, 1]' : 0.107388}", "{'[4, 1, 6, 0, 3, 5, 0, 0, 3, 3, 0, 14, 1, 0, 1, 0, 0, 1]' : 0.107495}", "{'[4, 1, 6, 0, 3, 5, 0, 0, 3, 3, 0, 14, 1, 0, 1, 0, 0, 1]' : 0.10861}", "{'[4, 1, 6, 0, 3, 5, 0, 0, 3, 3, 0, 14, 1, 0, 1, 0, 0, 1]' : 0.109968}", "{'[4, 1, 6, 0, 3, 5, 0, 0, 3, 3, 0, 14, 1, 0, 1, 0, 0, 1]' : 0.109771}", "{'[4, 1, 6, 0, 3, 5, 0, 0, 3, 3, 0, 14, 1, 0, 1, 0, 0, 1]' : 0.10993}", "{'[4, 1, 6, 0, 3, 5, 0, 0, 3, 3, 0, 14, 1, 0, 1, 0, 0, 1]' : 0.107946}", "{'[4, 1, 6, 0, 3, 5, 0, 0, 3, 3, 0, 14, 1, 0, 1, 0, 0, 1]' : 0.110138}", "{'[4, 1, 6, 0, 3, 5, 0, 0, 3, 3, 0, 14, 1, 0, 1, 0, 0, 1]' : 0.109881}", "{'[4, 1, 6, 0, 3, 5, 0, 0, 3, 3, 0, 14, 1, 0, 1, 0, 0, 1]' : 0.109979}", "{'[4, 1, 6, 0, 3, 5, 0, 0, 3, 3, 0, 14, 1, 0, 1, 0, 0, 1]' : 0.110051}"]
returning from 'run': {'[4, 1, 6, 0, 3, 5, 0, 0, 3, 3, 0, 14, 1, 0, 1, 0, 0, 1]': ([0.123494, 0.12348, 0.123366, 0.119484, 0.109674, 0.109784, 0.109288, 0.110074, 0.109402, 0.10949, 0.109879, 0.109916, 0.11045, 0.109889, 0.109441, 0.107067, 0.107532, 0.107486, 0.107216, 0.107388, 0.107495, 0.10861, 0.109968, 0.109771, 0.10993, 0.107946, 0.110138, 0.109881, 0.109979, 0.110051], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 1, 6, 0, 3, 5, 0, 0, 3, 3, 0, 14, 1, 0, 1, 0, 0, 1]': ([0.123494, 0.12348, 0.123366, 0.119484, 0.109674, 0.109784, 0.109288, 0.110074, 0.109402, 0.10949, 0.109879, 0.109916, 0.11045, 0.109889, 0.109441, 0.107067, 0.107532, 0.107486, 0.107216, 0.107388, 0.107495, 0.10861, 0.109968, 0.109771, 0.10993, 0.107946, 0.110138, 0.109881, 0.109979, 0.110051], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = kkk
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	6
        Additions: 		4326
        Multiplications: 	2112
        Divisions: 		0
        Logical: 		0
        Reads: 			7964
        Writes: 		1215
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest31.exe __orio_perftest31.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest31.exe  
Program Test Output: 
{'[6, 3, 3, 6, 2, 1, 1, 0, 4, 0, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.293919}
{'[6, 3, 3, 6, 2, 1, 1, 0, 4, 0, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.282505}
{'[6, 3, 3, 6, 2, 1, 1, 0, 4, 0, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.259941}
{'[6, 3, 3, 6, 2, 1, 1, 0, 4, 0, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.260334}
{'[6, 3, 3, 6, 2, 1, 1, 0, 4, 0, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.258512}
{'[6, 3, 3, 6, 2, 1, 1, 0, 4, 0, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.261327}
{'[6, 3, 3, 6, 2, 1, 1, 0, 4, 0, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.25693}
{'[6, 3, 3, 6, 2, 1, 1, 0, 4, 0, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.262791}
{'[6, 3, 3, 6, 2, 1, 1, 0, 4, 0, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.259209}
{'[6, 3, 3, 6, 2, 1, 1, 0, 4, 0, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.26274}
{'[6, 3, 3, 6, 2, 1, 1, 0, 4, 0, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.258778}
{'[6, 3, 3, 6, 2, 1, 1, 0, 4, 0, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.261803}
{'[6, 3, 3, 6, 2, 1, 1, 0, 4, 0, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.25735}
{'[6, 3, 3, 6, 2, 1, 1, 0, 4, 0, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.259267}
{'[6, 3, 3, 6, 2, 1, 1, 0, 4, 0, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.259623}
{'[6, 3, 3, 6, 2, 1, 1, 0, 4, 0, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.260139}
{'[6, 3, 3, 6, 2, 1, 1, 0, 4, 0, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.261467}
{'[6, 3, 3, 6, 2, 1, 1, 0, 4, 0, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.257961}
{'[6, 3, 3, 6, 2, 1, 1, 0, 4, 0, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.259071}
{'[6, 3, 3, 6, 2, 1, 1, 0, 4, 0, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.263457}
{'[6, 3, 3, 6, 2, 1, 1, 0, 4, 0, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.261915}
{'[6, 3, 3, 6, 2, 1, 1, 0, 4, 0, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.258804}
{'[6, 3, 3, 6, 2, 1, 1, 0, 4, 0, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.261337}
{'[6, 3, 3, 6, 2, 1, 1, 0, 4, 0, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.25905}
{'[6, 3, 3, 6, 2, 1, 1, 0, 4, 0, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.260134}
{'[6, 3, 3, 6, 2, 1, 1, 0, 4, 0, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.256519}
{'[6, 3, 3, 6, 2, 1, 1, 0, 4, 0, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.261535}
{'[6, 3, 3, 6, 2, 1, 1, 0, 4, 0, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.258977}
{'[6, 3, 3, 6, 2, 1, 1, 0, 4, 0, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.262023}
{'[6, 3, 3, 6, 2, 1, 1, 0, 4, 0, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.257473}

out:
 ["{'[6, 3, 3, 6, 2, 1, 1, 0, 4, 0, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.293919}", "{'[6, 3, 3, 6, 2, 1, 1, 0, 4, 0, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.282505}", "{'[6, 3, 3, 6, 2, 1, 1, 0, 4, 0, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.259941}", "{'[6, 3, 3, 6, 2, 1, 1, 0, 4, 0, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.260334}", "{'[6, 3, 3, 6, 2, 1, 1, 0, 4, 0, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.258512}", "{'[6, 3, 3, 6, 2, 1, 1, 0, 4, 0, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.261327}", "{'[6, 3, 3, 6, 2, 1, 1, 0, 4, 0, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.25693}", "{'[6, 3, 3, 6, 2, 1, 1, 0, 4, 0, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.262791}", "{'[6, 3, 3, 6, 2, 1, 1, 0, 4, 0, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.259209}", "{'[6, 3, 3, 6, 2, 1, 1, 0, 4, 0, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.26274}", "{'[6, 3, 3, 6, 2, 1, 1, 0, 4, 0, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.258778}", "{'[6, 3, 3, 6, 2, 1, 1, 0, 4, 0, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.261803}", "{'[6, 3, 3, 6, 2, 1, 1, 0, 4, 0, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.25735}", "{'[6, 3, 3, 6, 2, 1, 1, 0, 4, 0, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.259267}", "{'[6, 3, 3, 6, 2, 1, 1, 0, 4, 0, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.259623}", "{'[6, 3, 3, 6, 2, 1, 1, 0, 4, 0, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.260139}", "{'[6, 3, 3, 6, 2, 1, 1, 0, 4, 0, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.261467}", "{'[6, 3, 3, 6, 2, 1, 1, 0, 4, 0, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.257961}", "{'[6, 3, 3, 6, 2, 1, 1, 0, 4, 0, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.259071}", "{'[6, 3, 3, 6, 2, 1, 1, 0, 4, 0, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.263457}", "{'[6, 3, 3, 6, 2, 1, 1, 0, 4, 0, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.261915}", "{'[6, 3, 3, 6, 2, 1, 1, 0, 4, 0, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.258804}", "{'[6, 3, 3, 6, 2, 1, 1, 0, 4, 0, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.261337}", "{'[6, 3, 3, 6, 2, 1, 1, 0, 4, 0, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.25905}", "{'[6, 3, 3, 6, 2, 1, 1, 0, 4, 0, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.260134}", "{'[6, 3, 3, 6, 2, 1, 1, 0, 4, 0, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.256519}", "{'[6, 3, 3, 6, 2, 1, 1, 0, 4, 0, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.261535}", "{'[6, 3, 3, 6, 2, 1, 1, 0, 4, 0, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.258977}", "{'[6, 3, 3, 6, 2, 1, 1, 0, 4, 0, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.262023}", "{'[6, 3, 3, 6, 2, 1, 1, 0, 4, 0, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.257473}"]
returning from 'run': {'[6, 3, 3, 6, 2, 1, 1, 0, 4, 0, 29, 0, 2, 0, 0, 1, 0, 1]': ([0.293919, 0.282505, 0.259941, 0.260334, 0.258512, 0.261327, 0.25693, 0.262791, 0.259209, 0.26274, 0.258778, 0.261803, 0.25735, 0.259267, 0.259623, 0.260139, 0.261467, 0.257961, 0.259071, 0.263457, 0.261915, 0.258804, 0.261337, 0.25905, 0.260134, 0.256519, 0.261535, 0.258977, 0.262023, 0.257473], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 3, 3, 6, 2, 1, 1, 0, 4, 0, 29, 0, 2, 0, 0, 1, 0, 1]': ([0.293919, 0.282505, 0.259941, 0.260334, 0.258512, 0.261327, 0.25693, 0.262791, 0.259209, 0.26274, 0.258778, 0.261803, 0.25735, 0.259267, 0.259623, 0.260139, 0.261467, 0.257961, 0.259071, 0.263457, 0.261915, 0.258804, 0.261337, 0.25905, 0.260134, 0.256519, 0.261535, 0.258977, 0.262023, 0.257473], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = kkk
Code stats:
        Number of loops: 	17
        Max loop nest depth: 	5
        Additions: 		1559
        Multiplications: 	756
        Divisions: 		0
        Logical: 		0
        Reads: 			3052
        Writes: 		527
        Comparisons:		17
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest32.exe __orio_perftest32.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest32.exe  
Program Test Output: 
{'[6, 2, 4, 0, 6, 2, 0, 0, 7, 25, 11, 0, 0, 0, 0, 1, 0, 1]' : 0.167804}
{'[6, 2, 4, 0, 6, 2, 0, 0, 7, 25, 11, 0, 0, 0, 0, 1, 0, 1]' : 0.167734}
{'[6, 2, 4, 0, 6, 2, 0, 0, 7, 25, 11, 0, 0, 0, 0, 1, 0, 1]' : 0.160303}
{'[6, 2, 4, 0, 6, 2, 0, 0, 7, 25, 11, 0, 0, 0, 0, 1, 0, 1]' : 0.147218}
{'[6, 2, 4, 0, 6, 2, 0, 0, 7, 25, 11, 0, 0, 0, 0, 1, 0, 1]' : 0.144902}
{'[6, 2, 4, 0, 6, 2, 0, 0, 7, 25, 11, 0, 0, 0, 0, 1, 0, 1]' : 0.14549}
{'[6, 2, 4, 0, 6, 2, 0, 0, 7, 25, 11, 0, 0, 0, 0, 1, 0, 1]' : 0.145055}
{'[6, 2, 4, 0, 6, 2, 0, 0, 7, 25, 11, 0, 0, 0, 0, 1, 0, 1]' : 0.145165}
{'[6, 2, 4, 0, 6, 2, 0, 0, 7, 25, 11, 0, 0, 0, 0, 1, 0, 1]' : 0.146194}
{'[6, 2, 4, 0, 6, 2, 0, 0, 7, 25, 11, 0, 0, 0, 0, 1, 0, 1]' : 0.149271}
{'[6, 2, 4, 0, 6, 2, 0, 0, 7, 25, 11, 0, 0, 0, 0, 1, 0, 1]' : 0.148992}
{'[6, 2, 4, 0, 6, 2, 0, 0, 7, 25, 11, 0, 0, 0, 0, 1, 0, 1]' : 0.149161}
{'[6, 2, 4, 0, 6, 2, 0, 0, 7, 25, 11, 0, 0, 0, 0, 1, 0, 1]' : 0.148888}
{'[6, 2, 4, 0, 6, 2, 0, 0, 7, 25, 11, 0, 0, 0, 0, 1, 0, 1]' : 0.146107}
{'[6, 2, 4, 0, 6, 2, 0, 0, 7, 25, 11, 0, 0, 0, 0, 1, 0, 1]' : 0.145306}
{'[6, 2, 4, 0, 6, 2, 0, 0, 7, 25, 11, 0, 0, 0, 0, 1, 0, 1]' : 0.147399}
{'[6, 2, 4, 0, 6, 2, 0, 0, 7, 25, 11, 0, 0, 0, 0, 1, 0, 1]' : 0.149024}
{'[6, 2, 4, 0, 6, 2, 0, 0, 7, 25, 11, 0, 0, 0, 0, 1, 0, 1]' : 0.146406}
{'[6, 2, 4, 0, 6, 2, 0, 0, 7, 25, 11, 0, 0, 0, 0, 1, 0, 1]' : 0.145694}
{'[6, 2, 4, 0, 6, 2, 0, 0, 7, 25, 11, 0, 0, 0, 0, 1, 0, 1]' : 0.147269}
{'[6, 2, 4, 0, 6, 2, 0, 0, 7, 25, 11, 0, 0, 0, 0, 1, 0, 1]' : 0.14491}
{'[6, 2, 4, 0, 6, 2, 0, 0, 7, 25, 11, 0, 0, 0, 0, 1, 0, 1]' : 0.144952}
{'[6, 2, 4, 0, 6, 2, 0, 0, 7, 25, 11, 0, 0, 0, 0, 1, 0, 1]' : 0.147982}
{'[6, 2, 4, 0, 6, 2, 0, 0, 7, 25, 11, 0, 0, 0, 0, 1, 0, 1]' : 0.149063}
{'[6, 2, 4, 0, 6, 2, 0, 0, 7, 25, 11, 0, 0, 0, 0, 1, 0, 1]' : 0.149328}
{'[6, 2, 4, 0, 6, 2, 0, 0, 7, 25, 11, 0, 0, 0, 0, 1, 0, 1]' : 0.148987}
{'[6, 2, 4, 0, 6, 2, 0, 0, 7, 25, 11, 0, 0, 0, 0, 1, 0, 1]' : 0.148983}
{'[6, 2, 4, 0, 6, 2, 0, 0, 7, 25, 11, 0, 0, 0, 0, 1, 0, 1]' : 0.147344}
{'[6, 2, 4, 0, 6, 2, 0, 0, 7, 25, 11, 0, 0, 0, 0, 1, 0, 1]' : 0.144945}
{'[6, 2, 4, 0, 6, 2, 0, 0, 7, 25, 11, 0, 0, 0, 0, 1, 0, 1]' : 0.152098}

out:
 ["{'[6, 2, 4, 0, 6, 2, 0, 0, 7, 25, 11, 0, 0, 0, 0, 1, 0, 1]' : 0.167804}", "{'[6, 2, 4, 0, 6, 2, 0, 0, 7, 25, 11, 0, 0, 0, 0, 1, 0, 1]' : 0.167734}", "{'[6, 2, 4, 0, 6, 2, 0, 0, 7, 25, 11, 0, 0, 0, 0, 1, 0, 1]' : 0.160303}", "{'[6, 2, 4, 0, 6, 2, 0, 0, 7, 25, 11, 0, 0, 0, 0, 1, 0, 1]' : 0.147218}", "{'[6, 2, 4, 0, 6, 2, 0, 0, 7, 25, 11, 0, 0, 0, 0, 1, 0, 1]' : 0.144902}", "{'[6, 2, 4, 0, 6, 2, 0, 0, 7, 25, 11, 0, 0, 0, 0, 1, 0, 1]' : 0.14549}", "{'[6, 2, 4, 0, 6, 2, 0, 0, 7, 25, 11, 0, 0, 0, 0, 1, 0, 1]' : 0.145055}", "{'[6, 2, 4, 0, 6, 2, 0, 0, 7, 25, 11, 0, 0, 0, 0, 1, 0, 1]' : 0.145165}", "{'[6, 2, 4, 0, 6, 2, 0, 0, 7, 25, 11, 0, 0, 0, 0, 1, 0, 1]' : 0.146194}", "{'[6, 2, 4, 0, 6, 2, 0, 0, 7, 25, 11, 0, 0, 0, 0, 1, 0, 1]' : 0.149271}", "{'[6, 2, 4, 0, 6, 2, 0, 0, 7, 25, 11, 0, 0, 0, 0, 1, 0, 1]' : 0.148992}", "{'[6, 2, 4, 0, 6, 2, 0, 0, 7, 25, 11, 0, 0, 0, 0, 1, 0, 1]' : 0.149161}", "{'[6, 2, 4, 0, 6, 2, 0, 0, 7, 25, 11, 0, 0, 0, 0, 1, 0, 1]' : 0.148888}", "{'[6, 2, 4, 0, 6, 2, 0, 0, 7, 25, 11, 0, 0, 0, 0, 1, 0, 1]' : 0.146107}", "{'[6, 2, 4, 0, 6, 2, 0, 0, 7, 25, 11, 0, 0, 0, 0, 1, 0, 1]' : 0.145306}", "{'[6, 2, 4, 0, 6, 2, 0, 0, 7, 25, 11, 0, 0, 0, 0, 1, 0, 1]' : 0.147399}", "{'[6, 2, 4, 0, 6, 2, 0, 0, 7, 25, 11, 0, 0, 0, 0, 1, 0, 1]' : 0.149024}", "{'[6, 2, 4, 0, 6, 2, 0, 0, 7, 25, 11, 0, 0, 0, 0, 1, 0, 1]' : 0.146406}", "{'[6, 2, 4, 0, 6, 2, 0, 0, 7, 25, 11, 0, 0, 0, 0, 1, 0, 1]' : 0.145694}", "{'[6, 2, 4, 0, 6, 2, 0, 0, 7, 25, 11, 0, 0, 0, 0, 1, 0, 1]' : 0.147269}", "{'[6, 2, 4, 0, 6, 2, 0, 0, 7, 25, 11, 0, 0, 0, 0, 1, 0, 1]' : 0.14491}", "{'[6, 2, 4, 0, 6, 2, 0, 0, 7, 25, 11, 0, 0, 0, 0, 1, 0, 1]' : 0.144952}", "{'[6, 2, 4, 0, 6, 2, 0, 0, 7, 25, 11, 0, 0, 0, 0, 1, 0, 1]' : 0.147982}", "{'[6, 2, 4, 0, 6, 2, 0, 0, 7, 25, 11, 0, 0, 0, 0, 1, 0, 1]' : 0.149063}", "{'[6, 2, 4, 0, 6, 2, 0, 0, 7, 25, 11, 0, 0, 0, 0, 1, 0, 1]' : 0.149328}", "{'[6, 2, 4, 0, 6, 2, 0, 0, 7, 25, 11, 0, 0, 0, 0, 1, 0, 1]' : 0.148987}", "{'[6, 2, 4, 0, 6, 2, 0, 0, 7, 25, 11, 0, 0, 0, 0, 1, 0, 1]' : 0.148983}", "{'[6, 2, 4, 0, 6, 2, 0, 0, 7, 25, 11, 0, 0, 0, 0, 1, 0, 1]' : 0.147344}", "{'[6, 2, 4, 0, 6, 2, 0, 0, 7, 25, 11, 0, 0, 0, 0, 1, 0, 1]' : 0.144945}", "{'[6, 2, 4, 0, 6, 2, 0, 0, 7, 25, 11, 0, 0, 0, 0, 1, 0, 1]' : 0.152098}"]
returning from 'run': {'[6, 2, 4, 0, 6, 2, 0, 0, 7, 25, 11, 0, 0, 0, 0, 1, 0, 1]': ([0.167804, 0.167734, 0.160303, 0.147218, 0.144902, 0.14549, 0.145055, 0.145165, 0.146194, 0.149271, 0.148992, 0.149161, 0.148888, 0.146107, 0.145306, 0.147399, 0.149024, 0.146406, 0.145694, 0.147269, 0.14491, 0.144952, 0.147982, 0.149063, 0.149328, 0.148987, 0.148983, 0.147344, 0.144945, 0.152098], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 2, 4, 0, 6, 2, 0, 0, 7, 25, 11, 0, 0, 0, 0, 1, 0, 1]': ([0.167804, 0.167734, 0.160303, 0.147218, 0.144902, 0.14549, 0.145055, 0.145165, 0.146194, 0.149271, 0.148992, 0.149161, 0.148888, 0.146107, 0.145306, 0.147399, 0.149024, 0.146406, 0.145694, 0.147269, 0.14491, 0.144952, 0.147982, 0.149063, 0.149328, 0.148987, 0.148983, 0.147344, 0.144945, 0.152098], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	38
        Max loop nest depth: 	4
        Additions: 		3910
        Multiplications: 	1156
        Divisions: 		0
        Logical: 		0
        Reads: 			6156
        Writes: 		695
        Comparisons:		38
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest33.exe __orio_perftest33.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest33.exe  
Program Test Output: 
{'[6, 6, 0, 4, 4, 1, 0, 0, 29, 7, 0, 23, 1, 0, 1, 0, 0, 0]' : 0.134721}
{'[6, 6, 0, 4, 4, 1, 0, 0, 29, 7, 0, 23, 1, 0, 1, 0, 0, 0]' : 0.134854}
{'[6, 6, 0, 4, 4, 1, 0, 0, 29, 7, 0, 23, 1, 0, 1, 0, 0, 0]' : 0.130611}
{'[6, 6, 0, 4, 4, 1, 0, 0, 29, 7, 0, 23, 1, 0, 1, 0, 0, 0]' : 0.116585}
{'[6, 6, 0, 4, 4, 1, 0, 0, 29, 7, 0, 23, 1, 0, 1, 0, 0, 0]' : 0.117059}
{'[6, 6, 0, 4, 4, 1, 0, 0, 29, 7, 0, 23, 1, 0, 1, 0, 0, 0]' : 0.117022}
{'[6, 6, 0, 4, 4, 1, 0, 0, 29, 7, 0, 23, 1, 0, 1, 0, 0, 0]' : 0.1165}
{'[6, 6, 0, 4, 4, 1, 0, 0, 29, 7, 0, 23, 1, 0, 1, 0, 0, 0]' : 0.1166}
{'[6, 6, 0, 4, 4, 1, 0, 0, 29, 7, 0, 23, 1, 0, 1, 0, 0, 0]' : 0.116677}
{'[6, 6, 0, 4, 4, 1, 0, 0, 29, 7, 0, 23, 1, 0, 1, 0, 0, 0]' : 0.116761}
{'[6, 6, 0, 4, 4, 1, 0, 0, 29, 7, 0, 23, 1, 0, 1, 0, 0, 0]' : 0.116649}
{'[6, 6, 0, 4, 4, 1, 0, 0, 29, 7, 0, 23, 1, 0, 1, 0, 0, 0]' : 0.11699}
{'[6, 6, 0, 4, 4, 1, 0, 0, 29, 7, 0, 23, 1, 0, 1, 0, 0, 0]' : 0.116966}
{'[6, 6, 0, 4, 4, 1, 0, 0, 29, 7, 0, 23, 1, 0, 1, 0, 0, 0]' : 0.117444}
{'[6, 6, 0, 4, 4, 1, 0, 0, 29, 7, 0, 23, 1, 0, 1, 0, 0, 0]' : 0.117056}
{'[6, 6, 0, 4, 4, 1, 0, 0, 29, 7, 0, 23, 1, 0, 1, 0, 0, 0]' : 0.117213}
{'[6, 6, 0, 4, 4, 1, 0, 0, 29, 7, 0, 23, 1, 0, 1, 0, 0, 0]' : 0.117074}
{'[6, 6, 0, 4, 4, 1, 0, 0, 29, 7, 0, 23, 1, 0, 1, 0, 0, 0]' : 0.117263}
{'[6, 6, 0, 4, 4, 1, 0, 0, 29, 7, 0, 23, 1, 0, 1, 0, 0, 0]' : 0.116836}
{'[6, 6, 0, 4, 4, 1, 0, 0, 29, 7, 0, 23, 1, 0, 1, 0, 0, 0]' : 0.117008}
{'[6, 6, 0, 4, 4, 1, 0, 0, 29, 7, 0, 23, 1, 0, 1, 0, 0, 0]' : 0.116931}
{'[6, 6, 0, 4, 4, 1, 0, 0, 29, 7, 0, 23, 1, 0, 1, 0, 0, 0]' : 0.118007}
{'[6, 6, 0, 4, 4, 1, 0, 0, 29, 7, 0, 23, 1, 0, 1, 0, 0, 0]' : 0.120105}
{'[6, 6, 0, 4, 4, 1, 0, 0, 29, 7, 0, 23, 1, 0, 1, 0, 0, 0]' : 0.120253}
{'[6, 6, 0, 4, 4, 1, 0, 0, 29, 7, 0, 23, 1, 0, 1, 0, 0, 0]' : 0.120251}
{'[6, 6, 0, 4, 4, 1, 0, 0, 29, 7, 0, 23, 1, 0, 1, 0, 0, 0]' : 0.12048}
{'[6, 6, 0, 4, 4, 1, 0, 0, 29, 7, 0, 23, 1, 0, 1, 0, 0, 0]' : 0.120148}
{'[6, 6, 0, 4, 4, 1, 0, 0, 29, 7, 0, 23, 1, 0, 1, 0, 0, 0]' : 0.120329}
{'[6, 6, 0, 4, 4, 1, 0, 0, 29, 7, 0, 23, 1, 0, 1, 0, 0, 0]' : 0.120483}
{'[6, 6, 0, 4, 4, 1, 0, 0, 29, 7, 0, 23, 1, 0, 1, 0, 0, 0]' : 0.118967}

out:
 ["{'[6, 6, 0, 4, 4, 1, 0, 0, 29, 7, 0, 23, 1, 0, 1, 0, 0, 0]' : 0.134721}", "{'[6, 6, 0, 4, 4, 1, 0, 0, 29, 7, 0, 23, 1, 0, 1, 0, 0, 0]' : 0.134854}", "{'[6, 6, 0, 4, 4, 1, 0, 0, 29, 7, 0, 23, 1, 0, 1, 0, 0, 0]' : 0.130611}", "{'[6, 6, 0, 4, 4, 1, 0, 0, 29, 7, 0, 23, 1, 0, 1, 0, 0, 0]' : 0.116585}", "{'[6, 6, 0, 4, 4, 1, 0, 0, 29, 7, 0, 23, 1, 0, 1, 0, 0, 0]' : 0.117059}", "{'[6, 6, 0, 4, 4, 1, 0, 0, 29, 7, 0, 23, 1, 0, 1, 0, 0, 0]' : 0.117022}", "{'[6, 6, 0, 4, 4, 1, 0, 0, 29, 7, 0, 23, 1, 0, 1, 0, 0, 0]' : 0.1165}", "{'[6, 6, 0, 4, 4, 1, 0, 0, 29, 7, 0, 23, 1, 0, 1, 0, 0, 0]' : 0.1166}", "{'[6, 6, 0, 4, 4, 1, 0, 0, 29, 7, 0, 23, 1, 0, 1, 0, 0, 0]' : 0.116677}", "{'[6, 6, 0, 4, 4, 1, 0, 0, 29, 7, 0, 23, 1, 0, 1, 0, 0, 0]' : 0.116761}", "{'[6, 6, 0, 4, 4, 1, 0, 0, 29, 7, 0, 23, 1, 0, 1, 0, 0, 0]' : 0.116649}", "{'[6, 6, 0, 4, 4, 1, 0, 0, 29, 7, 0, 23, 1, 0, 1, 0, 0, 0]' : 0.11699}", "{'[6, 6, 0, 4, 4, 1, 0, 0, 29, 7, 0, 23, 1, 0, 1, 0, 0, 0]' : 0.116966}", "{'[6, 6, 0, 4, 4, 1, 0, 0, 29, 7, 0, 23, 1, 0, 1, 0, 0, 0]' : 0.117444}", "{'[6, 6, 0, 4, 4, 1, 0, 0, 29, 7, 0, 23, 1, 0, 1, 0, 0, 0]' : 0.117056}", "{'[6, 6, 0, 4, 4, 1, 0, 0, 29, 7, 0, 23, 1, 0, 1, 0, 0, 0]' : 0.117213}", "{'[6, 6, 0, 4, 4, 1, 0, 0, 29, 7, 0, 23, 1, 0, 1, 0, 0, 0]' : 0.117074}", "{'[6, 6, 0, 4, 4, 1, 0, 0, 29, 7, 0, 23, 1, 0, 1, 0, 0, 0]' : 0.117263}", "{'[6, 6, 0, 4, 4, 1, 0, 0, 29, 7, 0, 23, 1, 0, 1, 0, 0, 0]' : 0.116836}", "{'[6, 6, 0, 4, 4, 1, 0, 0, 29, 7, 0, 23, 1, 0, 1, 0, 0, 0]' : 0.117008}", "{'[6, 6, 0, 4, 4, 1, 0, 0, 29, 7, 0, 23, 1, 0, 1, 0, 0, 0]' : 0.116931}", "{'[6, 6, 0, 4, 4, 1, 0, 0, 29, 7, 0, 23, 1, 0, 1, 0, 0, 0]' : 0.118007}", "{'[6, 6, 0, 4, 4, 1, 0, 0, 29, 7, 0, 23, 1, 0, 1, 0, 0, 0]' : 0.120105}", "{'[6, 6, 0, 4, 4, 1, 0, 0, 29, 7, 0, 23, 1, 0, 1, 0, 0, 0]' : 0.120253}", "{'[6, 6, 0, 4, 4, 1, 0, 0, 29, 7, 0, 23, 1, 0, 1, 0, 0, 0]' : 0.120251}", "{'[6, 6, 0, 4, 4, 1, 0, 0, 29, 7, 0, 23, 1, 0, 1, 0, 0, 0]' : 0.12048}", "{'[6, 6, 0, 4, 4, 1, 0, 0, 29, 7, 0, 23, 1, 0, 1, 0, 0, 0]' : 0.120148}", "{'[6, 6, 0, 4, 4, 1, 0, 0, 29, 7, 0, 23, 1, 0, 1, 0, 0, 0]' : 0.120329}", "{'[6, 6, 0, 4, 4, 1, 0, 0, 29, 7, 0, 23, 1, 0, 1, 0, 0, 0]' : 0.120483}", "{'[6, 6, 0, 4, 4, 1, 0, 0, 29, 7, 0, 23, 1, 0, 1, 0, 0, 0]' : 0.118967}"]
returning from 'run': {'[6, 6, 0, 4, 4, 1, 0, 0, 29, 7, 0, 23, 1, 0, 1, 0, 0, 0]': ([0.134721, 0.134854, 0.130611, 0.116585, 0.117059, 0.117022, 0.1165, 0.1166, 0.116677, 0.116761, 0.116649, 0.11699, 0.116966, 0.117444, 0.117056, 0.117213, 0.117074, 0.117263, 0.116836, 0.117008, 0.116931, 0.118007, 0.120105, 0.120253, 0.120251, 0.12048, 0.120148, 0.120329, 0.120483, 0.118967], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 0, 4, 4, 1, 0, 0, 29, 7, 0, 23, 1, 0, 1, 0, 0, 0]': ([0.134721, 0.134854, 0.130611, 0.116585, 0.117059, 0.117022, 0.1165, 0.1166, 0.116677, 0.116761, 0.116649, 0.11699, 0.116966, 0.117444, 0.117056, 0.117213, 0.117074, 0.117263, 0.116836, 0.117008, 0.116931, 0.118007, 0.120105, 0.120253, 0.120251, 0.12048, 0.120148, 0.120329, 0.120483, 0.118967], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = iii
Code stats:
        Number of loops: 	133
        Max loop nest depth: 	5
        Additions: 		8938
        Multiplications: 	1980
        Divisions: 		0
        Logical: 		0
        Reads: 			13060
        Writes: 		1357
        Comparisons:		133
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest34.exe __orio_perftest34.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest34.exe  
Program Test Output: 
{'[4, 4, 3, 2, 0, 2, 1, 1, 4, 20, 0, 23, 1, 1, 0, 0, 1, 0]' : 0.134046}
{'[4, 4, 3, 2, 0, 2, 1, 1, 4, 20, 0, 23, 1, 1, 0, 0, 1, 0]' : 0.133897}
{'[4, 4, 3, 2, 0, 2, 1, 1, 4, 20, 0, 23, 1, 1, 0, 0, 1, 0]' : 0.133748}
{'[4, 4, 3, 2, 0, 2, 1, 1, 4, 20, 0, 23, 1, 1, 0, 0, 1, 0]' : 0.133959}
{'[4, 4, 3, 2, 0, 2, 1, 1, 4, 20, 0, 23, 1, 1, 0, 0, 1, 0]' : 0.122445}
{'[4, 4, 3, 2, 0, 2, 1, 1, 4, 20, 0, 23, 1, 1, 0, 0, 1, 0]' : 0.119791}
{'[4, 4, 3, 2, 0, 2, 1, 1, 4, 20, 0, 23, 1, 1, 0, 0, 1, 0]' : 0.119579}
{'[4, 4, 3, 2, 0, 2, 1, 1, 4, 20, 0, 23, 1, 1, 0, 0, 1, 0]' : 0.119787}
{'[4, 4, 3, 2, 0, 2, 1, 1, 4, 20, 0, 23, 1, 1, 0, 0, 1, 0]' : 0.11977}
{'[4, 4, 3, 2, 0, 2, 1, 1, 4, 20, 0, 23, 1, 1, 0, 0, 1, 0]' : 0.119389}
{'[4, 4, 3, 2, 0, 2, 1, 1, 4, 20, 0, 23, 1, 1, 0, 0, 1, 0]' : 0.116768}
{'[4, 4, 3, 2, 0, 2, 1, 1, 4, 20, 0, 23, 1, 1, 0, 0, 1, 0]' : 0.116797}
{'[4, 4, 3, 2, 0, 2, 1, 1, 4, 20, 0, 23, 1, 1, 0, 0, 1, 0]' : 0.116695}
{'[4, 4, 3, 2, 0, 2, 1, 1, 4, 20, 0, 23, 1, 1, 0, 0, 1, 0]' : 0.116809}
{'[4, 4, 3, 2, 0, 2, 1, 1, 4, 20, 0, 23, 1, 1, 0, 0, 1, 0]' : 0.116896}
{'[4, 4, 3, 2, 0, 2, 1, 1, 4, 20, 0, 23, 1, 1, 0, 0, 1, 0]' : 0.114935}
{'[4, 4, 3, 2, 0, 2, 1, 1, 4, 20, 0, 23, 1, 1, 0, 0, 1, 0]' : 0.1135}
{'[4, 4, 3, 2, 0, 2, 1, 1, 4, 20, 0, 23, 1, 1, 0, 0, 1, 0]' : 0.113341}
{'[4, 4, 3, 2, 0, 2, 1, 1, 4, 20, 0, 23, 1, 1, 0, 0, 1, 0]' : 0.115139}
{'[4, 4, 3, 2, 0, 2, 1, 1, 4, 20, 0, 23, 1, 1, 0, 0, 1, 0]' : 0.116623}
{'[4, 4, 3, 2, 0, 2, 1, 1, 4, 20, 0, 23, 1, 1, 0, 0, 1, 0]' : 0.116664}
{'[4, 4, 3, 2, 0, 2, 1, 1, 4, 20, 0, 23, 1, 1, 0, 0, 1, 0]' : 0.116638}
{'[4, 4, 3, 2, 0, 2, 1, 1, 4, 20, 0, 23, 1, 1, 0, 0, 1, 0]' : 0.116858}
{'[4, 4, 3, 2, 0, 2, 1, 1, 4, 20, 0, 23, 1, 1, 0, 0, 1, 0]' : 0.116618}
{'[4, 4, 3, 2, 0, 2, 1, 1, 4, 20, 0, 23, 1, 1, 0, 0, 1, 0]' : 0.1165}
{'[4, 4, 3, 2, 0, 2, 1, 1, 4, 20, 0, 23, 1, 1, 0, 0, 1, 0]' : 0.113783}
{'[4, 4, 3, 2, 0, 2, 1, 1, 4, 20, 0, 23, 1, 1, 0, 0, 1, 0]' : 0.113507}
{'[4, 4, 3, 2, 0, 2, 1, 1, 4, 20, 0, 23, 1, 1, 0, 0, 1, 0]' : 0.116584}
{'[4, 4, 3, 2, 0, 2, 1, 1, 4, 20, 0, 23, 1, 1, 0, 0, 1, 0]' : 0.116677}
{'[4, 4, 3, 2, 0, 2, 1, 1, 4, 20, 0, 23, 1, 1, 0, 0, 1, 0]' : 0.116746}

out:
 ["{'[4, 4, 3, 2, 0, 2, 1, 1, 4, 20, 0, 23, 1, 1, 0, 0, 1, 0]' : 0.134046}", "{'[4, 4, 3, 2, 0, 2, 1, 1, 4, 20, 0, 23, 1, 1, 0, 0, 1, 0]' : 0.133897}", "{'[4, 4, 3, 2, 0, 2, 1, 1, 4, 20, 0, 23, 1, 1, 0, 0, 1, 0]' : 0.133748}", "{'[4, 4, 3, 2, 0, 2, 1, 1, 4, 20, 0, 23, 1, 1, 0, 0, 1, 0]' : 0.133959}", "{'[4, 4, 3, 2, 0, 2, 1, 1, 4, 20, 0, 23, 1, 1, 0, 0, 1, 0]' : 0.122445}", "{'[4, 4, 3, 2, 0, 2, 1, 1, 4, 20, 0, 23, 1, 1, 0, 0, 1, 0]' : 0.119791}", "{'[4, 4, 3, 2, 0, 2, 1, 1, 4, 20, 0, 23, 1, 1, 0, 0, 1, 0]' : 0.119579}", "{'[4, 4, 3, 2, 0, 2, 1, 1, 4, 20, 0, 23, 1, 1, 0, 0, 1, 0]' : 0.119787}", "{'[4, 4, 3, 2, 0, 2, 1, 1, 4, 20, 0, 23, 1, 1, 0, 0, 1, 0]' : 0.11977}", "{'[4, 4, 3, 2, 0, 2, 1, 1, 4, 20, 0, 23, 1, 1, 0, 0, 1, 0]' : 0.119389}", "{'[4, 4, 3, 2, 0, 2, 1, 1, 4, 20, 0, 23, 1, 1, 0, 0, 1, 0]' : 0.116768}", "{'[4, 4, 3, 2, 0, 2, 1, 1, 4, 20, 0, 23, 1, 1, 0, 0, 1, 0]' : 0.116797}", "{'[4, 4, 3, 2, 0, 2, 1, 1, 4, 20, 0, 23, 1, 1, 0, 0, 1, 0]' : 0.116695}", "{'[4, 4, 3, 2, 0, 2, 1, 1, 4, 20, 0, 23, 1, 1, 0, 0, 1, 0]' : 0.116809}", "{'[4, 4, 3, 2, 0, 2, 1, 1, 4, 20, 0, 23, 1, 1, 0, 0, 1, 0]' : 0.116896}", "{'[4, 4, 3, 2, 0, 2, 1, 1, 4, 20, 0, 23, 1, 1, 0, 0, 1, 0]' : 0.114935}", "{'[4, 4, 3, 2, 0, 2, 1, 1, 4, 20, 0, 23, 1, 1, 0, 0, 1, 0]' : 0.1135}", "{'[4, 4, 3, 2, 0, 2, 1, 1, 4, 20, 0, 23, 1, 1, 0, 0, 1, 0]' : 0.113341}", "{'[4, 4, 3, 2, 0, 2, 1, 1, 4, 20, 0, 23, 1, 1, 0, 0, 1, 0]' : 0.115139}", "{'[4, 4, 3, 2, 0, 2, 1, 1, 4, 20, 0, 23, 1, 1, 0, 0, 1, 0]' : 0.116623}", "{'[4, 4, 3, 2, 0, 2, 1, 1, 4, 20, 0, 23, 1, 1, 0, 0, 1, 0]' : 0.116664}", "{'[4, 4, 3, 2, 0, 2, 1, 1, 4, 20, 0, 23, 1, 1, 0, 0, 1, 0]' : 0.116638}", "{'[4, 4, 3, 2, 0, 2, 1, 1, 4, 20, 0, 23, 1, 1, 0, 0, 1, 0]' : 0.116858}", "{'[4, 4, 3, 2, 0, 2, 1, 1, 4, 20, 0, 23, 1, 1, 0, 0, 1, 0]' : 0.116618}", "{'[4, 4, 3, 2, 0, 2, 1, 1, 4, 20, 0, 23, 1, 1, 0, 0, 1, 0]' : 0.1165}", "{'[4, 4, 3, 2, 0, 2, 1, 1, 4, 20, 0, 23, 1, 1, 0, 0, 1, 0]' : 0.113783}", "{'[4, 4, 3, 2, 0, 2, 1, 1, 4, 20, 0, 23, 1, 1, 0, 0, 1, 0]' : 0.113507}", "{'[4, 4, 3, 2, 0, 2, 1, 1, 4, 20, 0, 23, 1, 1, 0, 0, 1, 0]' : 0.116584}", "{'[4, 4, 3, 2, 0, 2, 1, 1, 4, 20, 0, 23, 1, 1, 0, 0, 1, 0]' : 0.116677}", "{'[4, 4, 3, 2, 0, 2, 1, 1, 4, 20, 0, 23, 1, 1, 0, 0, 1, 0]' : 0.116746}"]
returning from 'run': {'[4, 4, 3, 2, 0, 2, 1, 1, 4, 20, 0, 23, 1, 1, 0, 0, 1, 0]': ([0.134046, 0.133897, 0.133748, 0.133959, 0.122445, 0.119791, 0.119579, 0.119787, 0.11977, 0.119389, 0.116768, 0.116797, 0.116695, 0.116809, 0.116896, 0.114935, 0.1135, 0.113341, 0.115139, 0.116623, 0.116664, 0.116638, 0.116858, 0.116618, 0.1165, 0.113783, 0.113507, 0.116584, 0.116677, 0.116746], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 4, 3, 2, 0, 2, 1, 1, 4, 20, 0, 23, 1, 1, 0, 0, 1, 0]': ([0.134046, 0.133897, 0.133748, 0.133959, 0.122445, 0.119791, 0.119579, 0.119787, 0.11977, 0.119389, 0.116768, 0.116797, 0.116695, 0.116809, 0.116896, 0.114935, 0.1135, 0.113341, 0.115139, 0.116623, 0.116664, 0.116638, 0.116858, 0.116618, 0.1165, 0.113783, 0.113507, 0.116584, 0.116677, 0.116746], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	35
        Max loop nest depth: 	6
        Additions: 		2573
        Multiplications: 	1190
        Divisions: 		0
        Logical: 		0
        Reads: 			4854
        Writes: 		783
        Comparisons:		35
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest35.exe __orio_perftest35.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest35.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest35.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest35.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest35.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	5
        Additions: 		313
        Multiplications: 	124
        Divisions: 		0
        Logical: 		0
        Reads: 			701
        Writes: 		91
        Comparisons:		9
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest36.exe __orio_perftest36.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest36.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest36.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest36.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest36.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	4
        Additions: 		2918
        Multiplications: 	858
        Divisions: 		0
        Logical: 		0
        Reads: 			4577
        Writes: 		515
        Comparisons:		25
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest37.exe __orio_perftest37.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest37.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest37.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest37.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest37.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	4
        Additions: 		4688
        Multiplications: 	2310
        Divisions: 		0
        Logical: 		0
        Reads: 			8692
        Writes: 		1331
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest38.exe __orio_perftest38.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest38.exe  
Program Test Output: 
{'[1, 1, 6, 0, 0, 0, 0, 1, 4, 0, 26, 5, 2, 0, 0, 1, 0, 0]' : 0.197988}
{'[1, 1, 6, 0, 0, 0, 0, 1, 4, 0, 26, 5, 2, 0, 0, 1, 0, 0]' : 0.198983}
{'[1, 1, 6, 0, 0, 0, 0, 1, 4, 0, 26, 5, 2, 0, 0, 1, 0, 0]' : 0.190298}
{'[1, 1, 6, 0, 0, 0, 0, 1, 4, 0, 26, 5, 2, 0, 0, 1, 0, 0]' : 0.194462}
{'[1, 1, 6, 0, 0, 0, 0, 1, 4, 0, 26, 5, 2, 0, 0, 1, 0, 0]' : 0.190286}
{'[1, 1, 6, 0, 0, 0, 0, 1, 4, 0, 26, 5, 2, 0, 0, 1, 0, 0]' : 0.194481}
{'[1, 1, 6, 0, 0, 0, 0, 1, 4, 0, 26, 5, 2, 0, 0, 1, 0, 0]' : 0.194061}
{'[1, 1, 6, 0, 0, 0, 0, 1, 4, 0, 26, 5, 2, 0, 0, 1, 0, 0]' : 0.188859}
{'[1, 1, 6, 0, 0, 0, 0, 1, 4, 0, 26, 5, 2, 0, 0, 1, 0, 0]' : 0.193116}
{'[1, 1, 6, 0, 0, 0, 0, 1, 4, 0, 26, 5, 2, 0, 0, 1, 0, 0]' : 0.191828}
{'[1, 1, 6, 0, 0, 0, 0, 1, 4, 0, 26, 5, 2, 0, 0, 1, 0, 0]' : 0.191549}
{'[1, 1, 6, 0, 0, 0, 0, 1, 4, 0, 26, 5, 2, 0, 0, 1, 0, 0]' : 0.198262}
{'[1, 1, 6, 0, 0, 0, 0, 1, 4, 0, 26, 5, 2, 0, 0, 1, 0, 0]' : 0.194941}
{'[1, 1, 6, 0, 0, 0, 0, 1, 4, 0, 26, 5, 2, 0, 0, 1, 0, 0]' : 0.198276}
{'[1, 1, 6, 0, 0, 0, 0, 1, 4, 0, 26, 5, 2, 0, 0, 1, 0, 0]' : 0.19712}
{'[1, 1, 6, 0, 0, 0, 0, 1, 4, 0, 26, 5, 2, 0, 0, 1, 0, 0]' : 0.195022}
{'[1, 1, 6, 0, 0, 0, 0, 1, 4, 0, 26, 5, 2, 0, 0, 1, 0, 0]' : 0.195727}
{'[1, 1, 6, 0, 0, 0, 0, 1, 4, 0, 26, 5, 2, 0, 0, 1, 0, 0]' : 0.189627}
{'[1, 1, 6, 0, 0, 0, 0, 1, 4, 0, 26, 5, 2, 0, 0, 1, 0, 0]' : 0.191277}
{'[1, 1, 6, 0, 0, 0, 0, 1, 4, 0, 26, 5, 2, 0, 0, 1, 0, 0]' : 0.194908}
{'[1, 1, 6, 0, 0, 0, 0, 1, 4, 0, 26, 5, 2, 0, 0, 1, 0, 0]' : 0.194056}
{'[1, 1, 6, 0, 0, 0, 0, 1, 4, 0, 26, 5, 2, 0, 0, 1, 0, 0]' : 0.199042}
{'[1, 1, 6, 0, 0, 0, 0, 1, 4, 0, 26, 5, 2, 0, 0, 1, 0, 0]' : 0.199898}
{'[1, 1, 6, 0, 0, 0, 0, 1, 4, 0, 26, 5, 2, 0, 0, 1, 0, 0]' : 0.195463}
{'[1, 1, 6, 0, 0, 0, 0, 1, 4, 0, 26, 5, 2, 0, 0, 1, 0, 0]' : 0.194017}
{'[1, 1, 6, 0, 0, 0, 0, 1, 4, 0, 26, 5, 2, 0, 0, 1, 0, 0]' : 0.189028}
{'[1, 1, 6, 0, 0, 0, 0, 1, 4, 0, 26, 5, 2, 0, 0, 1, 0, 0]' : 0.194152}
{'[1, 1, 6, 0, 0, 0, 0, 1, 4, 0, 26, 5, 2, 0, 0, 1, 0, 0]' : 0.197569}
{'[1, 1, 6, 0, 0, 0, 0, 1, 4, 0, 26, 5, 2, 0, 0, 1, 0, 0]' : 0.194867}
{'[1, 1, 6, 0, 0, 0, 0, 1, 4, 0, 26, 5, 2, 0, 0, 1, 0, 0]' : 0.194857}

out:
 ["{'[1, 1, 6, 0, 0, 0, 0, 1, 4, 0, 26, 5, 2, 0, 0, 1, 0, 0]' : 0.197988}", "{'[1, 1, 6, 0, 0, 0, 0, 1, 4, 0, 26, 5, 2, 0, 0, 1, 0, 0]' : 0.198983}", "{'[1, 1, 6, 0, 0, 0, 0, 1, 4, 0, 26, 5, 2, 0, 0, 1, 0, 0]' : 0.190298}", "{'[1, 1, 6, 0, 0, 0, 0, 1, 4, 0, 26, 5, 2, 0, 0, 1, 0, 0]' : 0.194462}", "{'[1, 1, 6, 0, 0, 0, 0, 1, 4, 0, 26, 5, 2, 0, 0, 1, 0, 0]' : 0.190286}", "{'[1, 1, 6, 0, 0, 0, 0, 1, 4, 0, 26, 5, 2, 0, 0, 1, 0, 0]' : 0.194481}", "{'[1, 1, 6, 0, 0, 0, 0, 1, 4, 0, 26, 5, 2, 0, 0, 1, 0, 0]' : 0.194061}", "{'[1, 1, 6, 0, 0, 0, 0, 1, 4, 0, 26, 5, 2, 0, 0, 1, 0, 0]' : 0.188859}", "{'[1, 1, 6, 0, 0, 0, 0, 1, 4, 0, 26, 5, 2, 0, 0, 1, 0, 0]' : 0.193116}", "{'[1, 1, 6, 0, 0, 0, 0, 1, 4, 0, 26, 5, 2, 0, 0, 1, 0, 0]' : 0.191828}", "{'[1, 1, 6, 0, 0, 0, 0, 1, 4, 0, 26, 5, 2, 0, 0, 1, 0, 0]' : 0.191549}", "{'[1, 1, 6, 0, 0, 0, 0, 1, 4, 0, 26, 5, 2, 0, 0, 1, 0, 0]' : 0.198262}", "{'[1, 1, 6, 0, 0, 0, 0, 1, 4, 0, 26, 5, 2, 0, 0, 1, 0, 0]' : 0.194941}", "{'[1, 1, 6, 0, 0, 0, 0, 1, 4, 0, 26, 5, 2, 0, 0, 1, 0, 0]' : 0.198276}", "{'[1, 1, 6, 0, 0, 0, 0, 1, 4, 0, 26, 5, 2, 0, 0, 1, 0, 0]' : 0.19712}", "{'[1, 1, 6, 0, 0, 0, 0, 1, 4, 0, 26, 5, 2, 0, 0, 1, 0, 0]' : 0.195022}", "{'[1, 1, 6, 0, 0, 0, 0, 1, 4, 0, 26, 5, 2, 0, 0, 1, 0, 0]' : 0.195727}", "{'[1, 1, 6, 0, 0, 0, 0, 1, 4, 0, 26, 5, 2, 0, 0, 1, 0, 0]' : 0.189627}", "{'[1, 1, 6, 0, 0, 0, 0, 1, 4, 0, 26, 5, 2, 0, 0, 1, 0, 0]' : 0.191277}", "{'[1, 1, 6, 0, 0, 0, 0, 1, 4, 0, 26, 5, 2, 0, 0, 1, 0, 0]' : 0.194908}", "{'[1, 1, 6, 0, 0, 0, 0, 1, 4, 0, 26, 5, 2, 0, 0, 1, 0, 0]' : 0.194056}", "{'[1, 1, 6, 0, 0, 0, 0, 1, 4, 0, 26, 5, 2, 0, 0, 1, 0, 0]' : 0.199042}", "{'[1, 1, 6, 0, 0, 0, 0, 1, 4, 0, 26, 5, 2, 0, 0, 1, 0, 0]' : 0.199898}", "{'[1, 1, 6, 0, 0, 0, 0, 1, 4, 0, 26, 5, 2, 0, 0, 1, 0, 0]' : 0.195463}", "{'[1, 1, 6, 0, 0, 0, 0, 1, 4, 0, 26, 5, 2, 0, 0, 1, 0, 0]' : 0.194017}", "{'[1, 1, 6, 0, 0, 0, 0, 1, 4, 0, 26, 5, 2, 0, 0, 1, 0, 0]' : 0.189028}", "{'[1, 1, 6, 0, 0, 0, 0, 1, 4, 0, 26, 5, 2, 0, 0, 1, 0, 0]' : 0.194152}", "{'[1, 1, 6, 0, 0, 0, 0, 1, 4, 0, 26, 5, 2, 0, 0, 1, 0, 0]' : 0.197569}", "{'[1, 1, 6, 0, 0, 0, 0, 1, 4, 0, 26, 5, 2, 0, 0, 1, 0, 0]' : 0.194867}", "{'[1, 1, 6, 0, 0, 0, 0, 1, 4, 0, 26, 5, 2, 0, 0, 1, 0, 0]' : 0.194857}"]
returning from 'run': {'[1, 1, 6, 0, 0, 0, 0, 1, 4, 0, 26, 5, 2, 0, 0, 1, 0, 0]': ([0.197988, 0.198983, 0.190298, 0.194462, 0.190286, 0.194481, 0.194061, 0.188859, 0.193116, 0.191828, 0.191549, 0.198262, 0.194941, 0.198276, 0.19712, 0.195022, 0.195727, 0.189627, 0.191277, 0.194908, 0.194056, 0.199042, 0.199898, 0.195463, 0.194017, 0.189028, 0.194152, 0.197569, 0.194867, 0.194857], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 1, 6, 0, 0, 0, 0, 1, 4, 0, 26, 5, 2, 0, 0, 1, 0, 0]': ([0.197988, 0.198983, 0.190298, 0.194462, 0.190286, 0.194481, 0.194061, 0.188859, 0.193116, 0.191828, 0.191549, 0.198262, 0.194941, 0.198276, 0.19712, 0.195022, 0.195727, 0.189627, 0.191277, 0.194908, 0.194056, 0.199042, 0.199898, 0.195463, 0.194017, 0.189028, 0.194152, 0.197569, 0.194867, 0.194857], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	5
        Additions: 		115
        Multiplications: 	32
        Divisions: 		0
        Logical: 		0
        Reads: 			269
        Writes: 		60
        Comparisons:		10
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest39.exe __orio_perftest39.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest39.exe  
Program Test Output: 
{'[0, 0, 3, 1, 0, 5, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.257419}
{'[0, 0, 3, 1, 0, 5, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.256747}
{'[0, 0, 3, 1, 0, 5, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.223528}
{'[0, 0, 3, 1, 0, 5, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.215049}
{'[0, 0, 3, 1, 0, 5, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.220111}
{'[0, 0, 3, 1, 0, 5, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.215906}
{'[0, 0, 3, 1, 0, 5, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.218211}
{'[0, 0, 3, 1, 0, 5, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.218882}
{'[0, 0, 3, 1, 0, 5, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.216514}
{'[0, 0, 3, 1, 0, 5, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.219847}
{'[0, 0, 3, 1, 0, 5, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.215553}
{'[0, 0, 3, 1, 0, 5, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.227399}
{'[0, 0, 3, 1, 0, 5, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.226049}
{'[0, 0, 3, 1, 0, 5, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.226794}
{'[0, 0, 3, 1, 0, 5, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.228034}
{'[0, 0, 3, 1, 0, 5, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.225516}
{'[0, 0, 3, 1, 0, 5, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.229445}
{'[0, 0, 3, 1, 0, 5, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.221875}
{'[0, 0, 3, 1, 0, 5, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.219208}
{'[0, 0, 3, 1, 0, 5, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.217239}
{'[0, 0, 3, 1, 0, 5, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.229043}
{'[0, 0, 3, 1, 0, 5, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.229028}
{'[0, 0, 3, 1, 0, 5, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.227602}
{'[0, 0, 3, 1, 0, 5, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.225148}
{'[0, 0, 3, 1, 0, 5, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.226107}
{'[0, 0, 3, 1, 0, 5, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.229381}
{'[0, 0, 3, 1, 0, 5, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.229245}
{'[0, 0, 3, 1, 0, 5, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.226926}
{'[0, 0, 3, 1, 0, 5, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.222075}
{'[0, 0, 3, 1, 0, 5, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.229189}

out:
 ["{'[0, 0, 3, 1, 0, 5, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.257419}", "{'[0, 0, 3, 1, 0, 5, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.256747}", "{'[0, 0, 3, 1, 0, 5, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.223528}", "{'[0, 0, 3, 1, 0, 5, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.215049}", "{'[0, 0, 3, 1, 0, 5, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.220111}", "{'[0, 0, 3, 1, 0, 5, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.215906}", "{'[0, 0, 3, 1, 0, 5, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.218211}", "{'[0, 0, 3, 1, 0, 5, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.218882}", "{'[0, 0, 3, 1, 0, 5, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.216514}", "{'[0, 0, 3, 1, 0, 5, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.219847}", "{'[0, 0, 3, 1, 0, 5, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.215553}", "{'[0, 0, 3, 1, 0, 5, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.227399}", "{'[0, 0, 3, 1, 0, 5, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.226049}", "{'[0, 0, 3, 1, 0, 5, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.226794}", "{'[0, 0, 3, 1, 0, 5, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.228034}", "{'[0, 0, 3, 1, 0, 5, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.225516}", "{'[0, 0, 3, 1, 0, 5, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.229445}", "{'[0, 0, 3, 1, 0, 5, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.221875}", "{'[0, 0, 3, 1, 0, 5, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.219208}", "{'[0, 0, 3, 1, 0, 5, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.217239}", "{'[0, 0, 3, 1, 0, 5, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.229043}", "{'[0, 0, 3, 1, 0, 5, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.229028}", "{'[0, 0, 3, 1, 0, 5, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.227602}", "{'[0, 0, 3, 1, 0, 5, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.225148}", "{'[0, 0, 3, 1, 0, 5, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.226107}", "{'[0, 0, 3, 1, 0, 5, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.229381}", "{'[0, 0, 3, 1, 0, 5, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.229245}", "{'[0, 0, 3, 1, 0, 5, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.226926}", "{'[0, 0, 3, 1, 0, 5, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.222075}", "{'[0, 0, 3, 1, 0, 5, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.229189}"]
returning from 'run': {'[0, 0, 3, 1, 0, 5, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]': ([0.257419, 0.256747, 0.223528, 0.215049, 0.220111, 0.215906, 0.218211, 0.218882, 0.216514, 0.219847, 0.215553, 0.227399, 0.226049, 0.226794, 0.228034, 0.225516, 0.229445, 0.221875, 0.219208, 0.217239, 0.229043, 0.229028, 0.227602, 0.225148, 0.226107, 0.229381, 0.229245, 0.226926, 0.222075, 0.229189], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 3, 1, 0, 5, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]': ([0.257419, 0.256747, 0.223528, 0.215049, 0.220111, 0.215906, 0.218211, 0.218882, 0.216514, 0.219847, 0.215553, 0.227399, 0.226049, 0.226794, 0.228034, 0.225516, 0.229445, 0.221875, 0.219208, 0.217239, 0.229043, 0.229028, 0.227602, 0.225148, 0.226107, 0.229381, 0.229245, 0.226926, 0.222075, 0.229189], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = kkk
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		147
        Multiplications: 	28
        Divisions: 		0
        Logical: 		0
        Reads: 			311
        Writes: 		72
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest40.exe __orio_perftest40.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest40.exe  
Program Test Output: 
{'[0, 2, 3, 6, 2, 1, 0, 1, 27, 0, 7, 3, 0, 0, 0, 0, 0, 0]' : 0.248767}
{'[0, 2, 3, 6, 2, 1, 0, 1, 27, 0, 7, 3, 0, 0, 0, 0, 0, 0]' : 0.244768}
{'[0, 2, 3, 6, 2, 1, 0, 1, 27, 0, 7, 3, 0, 0, 0, 0, 0, 0]' : 0.247055}
{'[0, 2, 3, 6, 2, 1, 0, 1, 27, 0, 7, 3, 0, 0, 0, 0, 0, 0]' : 0.258278}
{'[0, 2, 3, 6, 2, 1, 0, 1, 27, 0, 7, 3, 0, 0, 0, 0, 0, 0]' : 0.259855}
{'[0, 2, 3, 6, 2, 1, 0, 1, 27, 0, 7, 3, 0, 0, 0, 0, 0, 0]' : 0.259716}
{'[0, 2, 3, 6, 2, 1, 0, 1, 27, 0, 7, 3, 0, 0, 0, 0, 0, 0]' : 0.254402}
{'[0, 2, 3, 6, 2, 1, 0, 1, 27, 0, 7, 3, 0, 0, 0, 0, 0, 0]' : 0.252522}
{'[0, 2, 3, 6, 2, 1, 0, 1, 27, 0, 7, 3, 0, 0, 0, 0, 0, 0]' : 0.252885}
{'[0, 2, 3, 6, 2, 1, 0, 1, 27, 0, 7, 3, 0, 0, 0, 0, 0, 0]' : 0.250936}
{'[0, 2, 3, 6, 2, 1, 0, 1, 27, 0, 7, 3, 0, 0, 0, 0, 0, 0]' : 0.251839}
{'[0, 2, 3, 6, 2, 1, 0, 1, 27, 0, 7, 3, 0, 0, 0, 0, 0, 0]' : 0.255631}
{'[0, 2, 3, 6, 2, 1, 0, 1, 27, 0, 7, 3, 0, 0, 0, 0, 0, 0]' : 0.252587}
{'[0, 2, 3, 6, 2, 1, 0, 1, 27, 0, 7, 3, 0, 0, 0, 0, 0, 0]' : 0.25267}
{'[0, 2, 3, 6, 2, 1, 0, 1, 27, 0, 7, 3, 0, 0, 0, 0, 0, 0]' : 0.256563}
{'[0, 2, 3, 6, 2, 1, 0, 1, 27, 0, 7, 3, 0, 0, 0, 0, 0, 0]' : 0.260036}
{'[0, 2, 3, 6, 2, 1, 0, 1, 27, 0, 7, 3, 0, 0, 0, 0, 0, 0]' : 0.257302}
{'[0, 2, 3, 6, 2, 1, 0, 1, 27, 0, 7, 3, 0, 0, 0, 0, 0, 0]' : 0.244779}
{'[0, 2, 3, 6, 2, 1, 0, 1, 27, 0, 7, 3, 0, 0, 0, 0, 0, 0]' : 0.249323}
{'[0, 2, 3, 6, 2, 1, 0, 1, 27, 0, 7, 3, 0, 0, 0, 0, 0, 0]' : 0.253488}
{'[0, 2, 3, 6, 2, 1, 0, 1, 27, 0, 7, 3, 0, 0, 0, 0, 0, 0]' : 0.255243}
{'[0, 2, 3, 6, 2, 1, 0, 1, 27, 0, 7, 3, 0, 0, 0, 0, 0, 0]' : 0.257384}
{'[0, 2, 3, 6, 2, 1, 0, 1, 27, 0, 7, 3, 0, 0, 0, 0, 0, 0]' : 0.252435}
{'[0, 2, 3, 6, 2, 1, 0, 1, 27, 0, 7, 3, 0, 0, 0, 0, 0, 0]' : 0.253334}
{'[0, 2, 3, 6, 2, 1, 0, 1, 27, 0, 7, 3, 0, 0, 0, 0, 0, 0]' : 0.254481}
{'[0, 2, 3, 6, 2, 1, 0, 1, 27, 0, 7, 3, 0, 0, 0, 0, 0, 0]' : 0.252593}
{'[0, 2, 3, 6, 2, 1, 0, 1, 27, 0, 7, 3, 0, 0, 0, 0, 0, 0]' : 0.252444}
{'[0, 2, 3, 6, 2, 1, 0, 1, 27, 0, 7, 3, 0, 0, 0, 0, 0, 0]' : 0.252253}
{'[0, 2, 3, 6, 2, 1, 0, 1, 27, 0, 7, 3, 0, 0, 0, 0, 0, 0]' : 0.25951}
{'[0, 2, 3, 6, 2, 1, 0, 1, 27, 0, 7, 3, 0, 0, 0, 0, 0, 0]' : 0.259675}

out:
 ["{'[0, 2, 3, 6, 2, 1, 0, 1, 27, 0, 7, 3, 0, 0, 0, 0, 0, 0]' : 0.248767}", "{'[0, 2, 3, 6, 2, 1, 0, 1, 27, 0, 7, 3, 0, 0, 0, 0, 0, 0]' : 0.244768}", "{'[0, 2, 3, 6, 2, 1, 0, 1, 27, 0, 7, 3, 0, 0, 0, 0, 0, 0]' : 0.247055}", "{'[0, 2, 3, 6, 2, 1, 0, 1, 27, 0, 7, 3, 0, 0, 0, 0, 0, 0]' : 0.258278}", "{'[0, 2, 3, 6, 2, 1, 0, 1, 27, 0, 7, 3, 0, 0, 0, 0, 0, 0]' : 0.259855}", "{'[0, 2, 3, 6, 2, 1, 0, 1, 27, 0, 7, 3, 0, 0, 0, 0, 0, 0]' : 0.259716}", "{'[0, 2, 3, 6, 2, 1, 0, 1, 27, 0, 7, 3, 0, 0, 0, 0, 0, 0]' : 0.254402}", "{'[0, 2, 3, 6, 2, 1, 0, 1, 27, 0, 7, 3, 0, 0, 0, 0, 0, 0]' : 0.252522}", "{'[0, 2, 3, 6, 2, 1, 0, 1, 27, 0, 7, 3, 0, 0, 0, 0, 0, 0]' : 0.252885}", "{'[0, 2, 3, 6, 2, 1, 0, 1, 27, 0, 7, 3, 0, 0, 0, 0, 0, 0]' : 0.250936}", "{'[0, 2, 3, 6, 2, 1, 0, 1, 27, 0, 7, 3, 0, 0, 0, 0, 0, 0]' : 0.251839}", "{'[0, 2, 3, 6, 2, 1, 0, 1, 27, 0, 7, 3, 0, 0, 0, 0, 0, 0]' : 0.255631}", "{'[0, 2, 3, 6, 2, 1, 0, 1, 27, 0, 7, 3, 0, 0, 0, 0, 0, 0]' : 0.252587}", "{'[0, 2, 3, 6, 2, 1, 0, 1, 27, 0, 7, 3, 0, 0, 0, 0, 0, 0]' : 0.25267}", "{'[0, 2, 3, 6, 2, 1, 0, 1, 27, 0, 7, 3, 0, 0, 0, 0, 0, 0]' : 0.256563}", "{'[0, 2, 3, 6, 2, 1, 0, 1, 27, 0, 7, 3, 0, 0, 0, 0, 0, 0]' : 0.260036}", "{'[0, 2, 3, 6, 2, 1, 0, 1, 27, 0, 7, 3, 0, 0, 0, 0, 0, 0]' : 0.257302}", "{'[0, 2, 3, 6, 2, 1, 0, 1, 27, 0, 7, 3, 0, 0, 0, 0, 0, 0]' : 0.244779}", "{'[0, 2, 3, 6, 2, 1, 0, 1, 27, 0, 7, 3, 0, 0, 0, 0, 0, 0]' : 0.249323}", "{'[0, 2, 3, 6, 2, 1, 0, 1, 27, 0, 7, 3, 0, 0, 0, 0, 0, 0]' : 0.253488}", "{'[0, 2, 3, 6, 2, 1, 0, 1, 27, 0, 7, 3, 0, 0, 0, 0, 0, 0]' : 0.255243}", "{'[0, 2, 3, 6, 2, 1, 0, 1, 27, 0, 7, 3, 0, 0, 0, 0, 0, 0]' : 0.257384}", "{'[0, 2, 3, 6, 2, 1, 0, 1, 27, 0, 7, 3, 0, 0, 0, 0, 0, 0]' : 0.252435}", "{'[0, 2, 3, 6, 2, 1, 0, 1, 27, 0, 7, 3, 0, 0, 0, 0, 0, 0]' : 0.253334}", "{'[0, 2, 3, 6, 2, 1, 0, 1, 27, 0, 7, 3, 0, 0, 0, 0, 0, 0]' : 0.254481}", "{'[0, 2, 3, 6, 2, 1, 0, 1, 27, 0, 7, 3, 0, 0, 0, 0, 0, 0]' : 0.252593}", "{'[0, 2, 3, 6, 2, 1, 0, 1, 27, 0, 7, 3, 0, 0, 0, 0, 0, 0]' : 0.252444}", "{'[0, 2, 3, 6, 2, 1, 0, 1, 27, 0, 7, 3, 0, 0, 0, 0, 0, 0]' : 0.252253}", "{'[0, 2, 3, 6, 2, 1, 0, 1, 27, 0, 7, 3, 0, 0, 0, 0, 0, 0]' : 0.25951}", "{'[0, 2, 3, 6, 2, 1, 0, 1, 27, 0, 7, 3, 0, 0, 0, 0, 0, 0]' : 0.259675}"]
returning from 'run': {'[0, 2, 3, 6, 2, 1, 0, 1, 27, 0, 7, 3, 0, 0, 0, 0, 0, 0]': ([0.248767, 0.244768, 0.247055, 0.258278, 0.259855, 0.259716, 0.254402, 0.252522, 0.252885, 0.250936, 0.251839, 0.255631, 0.252587, 0.25267, 0.256563, 0.260036, 0.257302, 0.244779, 0.249323, 0.253488, 0.255243, 0.257384, 0.252435, 0.253334, 0.254481, 0.252593, 0.252444, 0.252253, 0.25951, 0.259675], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 3, 6, 2, 1, 0, 1, 27, 0, 7, 3, 0, 0, 0, 0, 0, 0]': ([0.248767, 0.244768, 0.247055, 0.258278, 0.259855, 0.259716, 0.254402, 0.252522, 0.252885, 0.250936, 0.251839, 0.255631, 0.252587, 0.25267, 0.256563, 0.260036, 0.257302, 0.244779, 0.249323, 0.253488, 0.255243, 0.257384, 0.252435, 0.253334, 0.254481, 0.252593, 0.252444, 0.252253, 0.25951, 0.259675], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = jjj
Code stats:
        Number of loops: 	69
        Max loop nest depth: 	6
        Additions: 		3549
        Multiplications: 	840
        Divisions: 		0
        Logical: 		0
        Reads: 			6963
        Writes: 		1442
        Comparisons:		69
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest41.exe __orio_perftest41.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest41.exe  
Program Test Output: 
{'[1, 4, 1, 6, 2, 6, 0, 1, 0, 12, 0, 27, 0, 0, 0, 1, 0, 0]' : 0.345173}
{'[1, 4, 1, 6, 2, 6, 0, 1, 0, 12, 0, 27, 0, 0, 0, 1, 0, 0]' : 0.320659}
{'[1, 4, 1, 6, 2, 6, 0, 1, 0, 12, 0, 27, 0, 0, 0, 1, 0, 0]' : 0.310672}
{'[1, 4, 1, 6, 2, 6, 0, 1, 0, 12, 0, 27, 0, 0, 0, 1, 0, 0]' : 0.310979}
{'[1, 4, 1, 6, 2, 6, 0, 1, 0, 12, 0, 27, 0, 0, 0, 1, 0, 0]' : 0.309499}
{'[1, 4, 1, 6, 2, 6, 0, 1, 0, 12, 0, 27, 0, 0, 0, 1, 0, 0]' : 0.302437}
{'[1, 4, 1, 6, 2, 6, 0, 1, 0, 12, 0, 27, 0, 0, 0, 1, 0, 0]' : 0.305499}
{'[1, 4, 1, 6, 2, 6, 0, 1, 0, 12, 0, 27, 0, 0, 0, 1, 0, 0]' : 0.310502}
{'[1, 4, 1, 6, 2, 6, 0, 1, 0, 12, 0, 27, 0, 0, 0, 1, 0, 0]' : 0.309051}
{'[1, 4, 1, 6, 2, 6, 0, 1, 0, 12, 0, 27, 0, 0, 0, 1, 0, 0]' : 0.302971}
{'[1, 4, 1, 6, 2, 6, 0, 1, 0, 12, 0, 27, 0, 0, 0, 1, 0, 0]' : 0.300482}
{'[1, 4, 1, 6, 2, 6, 0, 1, 0, 12, 0, 27, 0, 0, 0, 1, 0, 0]' : 0.300601}
{'[1, 4, 1, 6, 2, 6, 0, 1, 0, 12, 0, 27, 0, 0, 0, 1, 0, 0]' : 0.310234}
{'[1, 4, 1, 6, 2, 6, 0, 1, 0, 12, 0, 27, 0, 0, 0, 1, 0, 0]' : 0.30447}
{'[1, 4, 1, 6, 2, 6, 0, 1, 0, 12, 0, 27, 0, 0, 0, 1, 0, 0]' : 0.3028}
{'[1, 4, 1, 6, 2, 6, 0, 1, 0, 12, 0, 27, 0, 0, 0, 1, 0, 0]' : 0.296884}
{'[1, 4, 1, 6, 2, 6, 0, 1, 0, 12, 0, 27, 0, 0, 0, 1, 0, 0]' : 0.299272}
{'[1, 4, 1, 6, 2, 6, 0, 1, 0, 12, 0, 27, 0, 0, 0, 1, 0, 0]' : 0.305428}
{'[1, 4, 1, 6, 2, 6, 0, 1, 0, 12, 0, 27, 0, 0, 0, 1, 0, 0]' : 0.303067}
{'[1, 4, 1, 6, 2, 6, 0, 1, 0, 12, 0, 27, 0, 0, 0, 1, 0, 0]' : 0.30377}
{'[1, 4, 1, 6, 2, 6, 0, 1, 0, 12, 0, 27, 0, 0, 0, 1, 0, 0]' : 0.307932}
{'[1, 4, 1, 6, 2, 6, 0, 1, 0, 12, 0, 27, 0, 0, 0, 1, 0, 0]' : 0.306746}
{'[1, 4, 1, 6, 2, 6, 0, 1, 0, 12, 0, 27, 0, 0, 0, 1, 0, 0]' : 0.303643}
{'[1, 4, 1, 6, 2, 6, 0, 1, 0, 12, 0, 27, 0, 0, 0, 1, 0, 0]' : 0.304445}
{'[1, 4, 1, 6, 2, 6, 0, 1, 0, 12, 0, 27, 0, 0, 0, 1, 0, 0]' : 0.304942}
{'[1, 4, 1, 6, 2, 6, 0, 1, 0, 12, 0, 27, 0, 0, 0, 1, 0, 0]' : 0.302702}
{'[1, 4, 1, 6, 2, 6, 0, 1, 0, 12, 0, 27, 0, 0, 0, 1, 0, 0]' : 0.307491}
{'[1, 4, 1, 6, 2, 6, 0, 1, 0, 12, 0, 27, 0, 0, 0, 1, 0, 0]' : 0.304606}
{'[1, 4, 1, 6, 2, 6, 0, 1, 0, 12, 0, 27, 0, 0, 0, 1, 0, 0]' : 0.306488}
{'[1, 4, 1, 6, 2, 6, 0, 1, 0, 12, 0, 27, 0, 0, 0, 1, 0, 0]' : 0.301241}

out:
 ["{'[1, 4, 1, 6, 2, 6, 0, 1, 0, 12, 0, 27, 0, 0, 0, 1, 0, 0]' : 0.345173}", "{'[1, 4, 1, 6, 2, 6, 0, 1, 0, 12, 0, 27, 0, 0, 0, 1, 0, 0]' : 0.320659}", "{'[1, 4, 1, 6, 2, 6, 0, 1, 0, 12, 0, 27, 0, 0, 0, 1, 0, 0]' : 0.310672}", "{'[1, 4, 1, 6, 2, 6, 0, 1, 0, 12, 0, 27, 0, 0, 0, 1, 0, 0]' : 0.310979}", "{'[1, 4, 1, 6, 2, 6, 0, 1, 0, 12, 0, 27, 0, 0, 0, 1, 0, 0]' : 0.309499}", "{'[1, 4, 1, 6, 2, 6, 0, 1, 0, 12, 0, 27, 0, 0, 0, 1, 0, 0]' : 0.302437}", "{'[1, 4, 1, 6, 2, 6, 0, 1, 0, 12, 0, 27, 0, 0, 0, 1, 0, 0]' : 0.305499}", "{'[1, 4, 1, 6, 2, 6, 0, 1, 0, 12, 0, 27, 0, 0, 0, 1, 0, 0]' : 0.310502}", "{'[1, 4, 1, 6, 2, 6, 0, 1, 0, 12, 0, 27, 0, 0, 0, 1, 0, 0]' : 0.309051}", "{'[1, 4, 1, 6, 2, 6, 0, 1, 0, 12, 0, 27, 0, 0, 0, 1, 0, 0]' : 0.302971}", "{'[1, 4, 1, 6, 2, 6, 0, 1, 0, 12, 0, 27, 0, 0, 0, 1, 0, 0]' : 0.300482}", "{'[1, 4, 1, 6, 2, 6, 0, 1, 0, 12, 0, 27, 0, 0, 0, 1, 0, 0]' : 0.300601}", "{'[1, 4, 1, 6, 2, 6, 0, 1, 0, 12, 0, 27, 0, 0, 0, 1, 0, 0]' : 0.310234}", "{'[1, 4, 1, 6, 2, 6, 0, 1, 0, 12, 0, 27, 0, 0, 0, 1, 0, 0]' : 0.30447}", "{'[1, 4, 1, 6, 2, 6, 0, 1, 0, 12, 0, 27, 0, 0, 0, 1, 0, 0]' : 0.3028}", "{'[1, 4, 1, 6, 2, 6, 0, 1, 0, 12, 0, 27, 0, 0, 0, 1, 0, 0]' : 0.296884}", "{'[1, 4, 1, 6, 2, 6, 0, 1, 0, 12, 0, 27, 0, 0, 0, 1, 0, 0]' : 0.299272}", "{'[1, 4, 1, 6, 2, 6, 0, 1, 0, 12, 0, 27, 0, 0, 0, 1, 0, 0]' : 0.305428}", "{'[1, 4, 1, 6, 2, 6, 0, 1, 0, 12, 0, 27, 0, 0, 0, 1, 0, 0]' : 0.303067}", "{'[1, 4, 1, 6, 2, 6, 0, 1, 0, 12, 0, 27, 0, 0, 0, 1, 0, 0]' : 0.30377}", "{'[1, 4, 1, 6, 2, 6, 0, 1, 0, 12, 0, 27, 0, 0, 0, 1, 0, 0]' : 0.307932}", "{'[1, 4, 1, 6, 2, 6, 0, 1, 0, 12, 0, 27, 0, 0, 0, 1, 0, 0]' : 0.306746}", "{'[1, 4, 1, 6, 2, 6, 0, 1, 0, 12, 0, 27, 0, 0, 0, 1, 0, 0]' : 0.303643}", "{'[1, 4, 1, 6, 2, 6, 0, 1, 0, 12, 0, 27, 0, 0, 0, 1, 0, 0]' : 0.304445}", "{'[1, 4, 1, 6, 2, 6, 0, 1, 0, 12, 0, 27, 0, 0, 0, 1, 0, 0]' : 0.304942}", "{'[1, 4, 1, 6, 2, 6, 0, 1, 0, 12, 0, 27, 0, 0, 0, 1, 0, 0]' : 0.302702}", "{'[1, 4, 1, 6, 2, 6, 0, 1, 0, 12, 0, 27, 0, 0, 0, 1, 0, 0]' : 0.307491}", "{'[1, 4, 1, 6, 2, 6, 0, 1, 0, 12, 0, 27, 0, 0, 0, 1, 0, 0]' : 0.304606}", "{'[1, 4, 1, 6, 2, 6, 0, 1, 0, 12, 0, 27, 0, 0, 0, 1, 0, 0]' : 0.306488}", "{'[1, 4, 1, 6, 2, 6, 0, 1, 0, 12, 0, 27, 0, 0, 0, 1, 0, 0]' : 0.301241}"]
returning from 'run': {'[1, 4, 1, 6, 2, 6, 0, 1, 0, 12, 0, 27, 0, 0, 0, 1, 0, 0]': ([0.345173, 0.320659, 0.310672, 0.310979, 0.309499, 0.302437, 0.305499, 0.310502, 0.309051, 0.302971, 0.300482, 0.300601, 0.310234, 0.30447, 0.3028, 0.296884, 0.299272, 0.305428, 0.303067, 0.30377, 0.307932, 0.306746, 0.303643, 0.304445, 0.304942, 0.302702, 0.307491, 0.304606, 0.306488, 0.301241], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 4, 1, 6, 2, 6, 0, 1, 0, 12, 0, 27, 0, 0, 0, 1, 0, 0]': ([0.345173, 0.320659, 0.310672, 0.310979, 0.309499, 0.302437, 0.305499, 0.310502, 0.309051, 0.302971, 0.300482, 0.300601, 0.310234, 0.30447, 0.3028, 0.296884, 0.299272, 0.305428, 0.303067, 0.30377, 0.307932, 0.306746, 0.303643, 0.304445, 0.304942, 0.302702, 0.307491, 0.304606, 0.306488, 0.301241], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	23
        Max loop nest depth: 	6
        Additions: 		273
        Multiplications: 	90
        Divisions: 		0
        Logical: 		0
        Reads: 			648
        Writes: 		144
        Comparisons:		23
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest42.exe __orio_perftest42.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest42.exe  
Program Test Output: 
{'[4, 6, 0, 3, 6, 1, 1, 1, 0, 0, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.122696}
{'[4, 6, 0, 3, 6, 1, 1, 1, 0, 0, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.122658}
{'[4, 6, 0, 3, 6, 1, 1, 1, 0, 0, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.122531}
{'[4, 6, 0, 3, 6, 1, 1, 1, 0, 0, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.120158}
{'[4, 6, 0, 3, 6, 1, 1, 1, 0, 0, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.105473}
{'[4, 6, 0, 3, 6, 1, 1, 1, 0, 0, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.104993}
{'[4, 6, 0, 3, 6, 1, 1, 1, 0, 0, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.104665}
{'[4, 6, 0, 3, 6, 1, 1, 1, 0, 0, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.105064}
{'[4, 6, 0, 3, 6, 1, 1, 1, 0, 0, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.104886}
{'[4, 6, 0, 3, 6, 1, 1, 1, 0, 0, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.104584}
{'[4, 6, 0, 3, 6, 1, 1, 1, 0, 0, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.107057}
{'[4, 6, 0, 3, 6, 1, 1, 1, 0, 0, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.10758}
{'[4, 6, 0, 3, 6, 1, 1, 1, 0, 0, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.107777}
{'[4, 6, 0, 3, 6, 1, 1, 1, 0, 0, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.107501}
{'[4, 6, 0, 3, 6, 1, 1, 1, 0, 0, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.109616}
{'[4, 6, 0, 3, 6, 1, 1, 1, 0, 0, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.110296}
{'[4, 6, 0, 3, 6, 1, 1, 1, 0, 0, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.110327}
{'[4, 6, 0, 3, 6, 1, 1, 1, 0, 0, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.11041}
{'[4, 6, 0, 3, 6, 1, 1, 1, 0, 0, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.110273}
{'[4, 6, 0, 3, 6, 1, 1, 1, 0, 0, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.110339}
{'[4, 6, 0, 3, 6, 1, 1, 1, 0, 0, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.11037}
{'[4, 6, 0, 3, 6, 1, 1, 1, 0, 0, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.110228}
{'[4, 6, 0, 3, 6, 1, 1, 1, 0, 0, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.110329}
{'[4, 6, 0, 3, 6, 1, 1, 1, 0, 0, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.109929}
{'[4, 6, 0, 3, 6, 1, 1, 1, 0, 0, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.107293}
{'[4, 6, 0, 3, 6, 1, 1, 1, 0, 0, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.107241}
{'[4, 6, 0, 3, 6, 1, 1, 1, 0, 0, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.107176}
{'[4, 6, 0, 3, 6, 1, 1, 1, 0, 0, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.107405}
{'[4, 6, 0, 3, 6, 1, 1, 1, 0, 0, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.108623}
{'[4, 6, 0, 3, 6, 1, 1, 1, 0, 0, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.110397}

out:
 ["{'[4, 6, 0, 3, 6, 1, 1, 1, 0, 0, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.122696}", "{'[4, 6, 0, 3, 6, 1, 1, 1, 0, 0, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.122658}", "{'[4, 6, 0, 3, 6, 1, 1, 1, 0, 0, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.122531}", "{'[4, 6, 0, 3, 6, 1, 1, 1, 0, 0, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.120158}", "{'[4, 6, 0, 3, 6, 1, 1, 1, 0, 0, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.105473}", "{'[4, 6, 0, 3, 6, 1, 1, 1, 0, 0, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.104993}", "{'[4, 6, 0, 3, 6, 1, 1, 1, 0, 0, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.104665}", "{'[4, 6, 0, 3, 6, 1, 1, 1, 0, 0, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.105064}", "{'[4, 6, 0, 3, 6, 1, 1, 1, 0, 0, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.104886}", "{'[4, 6, 0, 3, 6, 1, 1, 1, 0, 0, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.104584}", "{'[4, 6, 0, 3, 6, 1, 1, 1, 0, 0, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.107057}", "{'[4, 6, 0, 3, 6, 1, 1, 1, 0, 0, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.10758}", "{'[4, 6, 0, 3, 6, 1, 1, 1, 0, 0, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.107777}", "{'[4, 6, 0, 3, 6, 1, 1, 1, 0, 0, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.107501}", "{'[4, 6, 0, 3, 6, 1, 1, 1, 0, 0, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.109616}", "{'[4, 6, 0, 3, 6, 1, 1, 1, 0, 0, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.110296}", "{'[4, 6, 0, 3, 6, 1, 1, 1, 0, 0, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.110327}", "{'[4, 6, 0, 3, 6, 1, 1, 1, 0, 0, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.11041}", "{'[4, 6, 0, 3, 6, 1, 1, 1, 0, 0, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.110273}", "{'[4, 6, 0, 3, 6, 1, 1, 1, 0, 0, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.110339}", "{'[4, 6, 0, 3, 6, 1, 1, 1, 0, 0, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.11037}", "{'[4, 6, 0, 3, 6, 1, 1, 1, 0, 0, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.110228}", "{'[4, 6, 0, 3, 6, 1, 1, 1, 0, 0, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.110329}", "{'[4, 6, 0, 3, 6, 1, 1, 1, 0, 0, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.109929}", "{'[4, 6, 0, 3, 6, 1, 1, 1, 0, 0, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.107293}", "{'[4, 6, 0, 3, 6, 1, 1, 1, 0, 0, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.107241}", "{'[4, 6, 0, 3, 6, 1, 1, 1, 0, 0, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.107176}", "{'[4, 6, 0, 3, 6, 1, 1, 1, 0, 0, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.107405}", "{'[4, 6, 0, 3, 6, 1, 1, 1, 0, 0, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.108623}", "{'[4, 6, 0, 3, 6, 1, 1, 1, 0, 0, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.110397}"]
returning from 'run': {'[4, 6, 0, 3, 6, 1, 1, 1, 0, 0, 0, 2, 1, 0, 0, 1, 1, 1]': ([0.122696, 0.122658, 0.122531, 0.120158, 0.105473, 0.104993, 0.104665, 0.105064, 0.104886, 0.104584, 0.107057, 0.10758, 0.107777, 0.107501, 0.109616, 0.110296, 0.110327, 0.11041, 0.110273, 0.110339, 0.11037, 0.110228, 0.110329, 0.109929, 0.107293, 0.107241, 0.107176, 0.107405, 0.108623, 0.110397], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 6, 0, 3, 6, 1, 1, 1, 0, 0, 0, 2, 1, 0, 0, 1, 1, 1]': ([0.122696, 0.122658, 0.122531, 0.120158, 0.105473, 0.104993, 0.104665, 0.105064, 0.104886, 0.104584, 0.107057, 0.10758, 0.107777, 0.107501, 0.109616, 0.110296, 0.110327, 0.11041, 0.110273, 0.110339, 0.11037, 0.110228, 0.110329, 0.109929, 0.107293, 0.107241, 0.107176, 0.107405, 0.108623, 0.110397], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	26
        Max loop nest depth: 	6
        Additions: 		4490
        Multiplications: 	1116
        Divisions: 		0
        Logical: 		0
        Reads: 			6723
        Writes: 		661
        Comparisons:		26
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest43.exe __orio_perftest43.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest43.exe  
Program Test Output: 
{'[2, 6, 2, 5, 4, 5, 1, 1, 26, 0, 29, 29, 1, 0, 0, 0, 1, 1]' : 0.130433}
{'[2, 6, 2, 5, 4, 5, 1, 1, 26, 0, 29, 29, 1, 0, 0, 0, 1, 1]' : 0.12991}
{'[2, 6, 2, 5, 4, 5, 1, 1, 26, 0, 29, 29, 1, 0, 0, 0, 1, 1]' : 0.129536}
{'[2, 6, 2, 5, 4, 5, 1, 1, 26, 0, 29, 29, 1, 0, 0, 0, 1, 1]' : 0.129736}
{'[2, 6, 2, 5, 4, 5, 1, 1, 26, 0, 29, 29, 1, 0, 0, 0, 1, 1]' : 0.130744}
{'[2, 6, 2, 5, 4, 5, 1, 1, 26, 0, 29, 29, 1, 0, 0, 0, 1, 1]' : 0.134493}
{'[2, 6, 2, 5, 4, 5, 1, 1, 26, 0, 29, 29, 1, 0, 0, 0, 1, 1]' : 0.134352}
{'[2, 6, 2, 5, 4, 5, 1, 1, 26, 0, 29, 29, 1, 0, 0, 0, 1, 1]' : 0.134505}
{'[2, 6, 2, 5, 4, 5, 1, 1, 26, 0, 29, 29, 1, 0, 0, 0, 1, 1]' : 0.134418}
{'[2, 6, 2, 5, 4, 5, 1, 1, 26, 0, 29, 29, 1, 0, 0, 0, 1, 1]' : 0.133926}
{'[2, 6, 2, 5, 4, 5, 1, 1, 26, 0, 29, 29, 1, 0, 0, 0, 1, 1]' : 0.133728}
{'[2, 6, 2, 5, 4, 5, 1, 1, 26, 0, 29, 29, 1, 0, 0, 0, 1, 1]' : 0.133938}
{'[2, 6, 2, 5, 4, 5, 1, 1, 26, 0, 29, 29, 1, 0, 0, 0, 1, 1]' : 0.134014}
{'[2, 6, 2, 5, 4, 5, 1, 1, 26, 0, 29, 29, 1, 0, 0, 0, 1, 1]' : 0.133893}
{'[2, 6, 2, 5, 4, 5, 1, 1, 26, 0, 29, 29, 1, 0, 0, 0, 1, 1]' : 0.133937}
{'[2, 6, 2, 5, 4, 5, 1, 1, 26, 0, 29, 29, 1, 0, 0, 0, 1, 1]' : 0.13085}
{'[2, 6, 2, 5, 4, 5, 1, 1, 26, 0, 29, 29, 1, 0, 0, 0, 1, 1]' : 0.133969}
{'[2, 6, 2, 5, 4, 5, 1, 1, 26, 0, 29, 29, 1, 0, 0, 0, 1, 1]' : 0.13445}
{'[2, 6, 2, 5, 4, 5, 1, 1, 26, 0, 29, 29, 1, 0, 0, 0, 1, 1]' : 0.134354}
{'[2, 6, 2, 5, 4, 5, 1, 1, 26, 0, 29, 29, 1, 0, 0, 0, 1, 1]' : 0.134868}
{'[2, 6, 2, 5, 4, 5, 1, 1, 26, 0, 29, 29, 1, 0, 0, 0, 1, 1]' : 0.134473}
{'[2, 6, 2, 5, 4, 5, 1, 1, 26, 0, 29, 29, 1, 0, 0, 0, 1, 1]' : 0.134368}
{'[2, 6, 2, 5, 4, 5, 1, 1, 26, 0, 29, 29, 1, 0, 0, 0, 1, 1]' : 0.13394}
{'[2, 6, 2, 5, 4, 5, 1, 1, 26, 0, 29, 29, 1, 0, 0, 0, 1, 1]' : 0.131666}
{'[2, 6, 2, 5, 4, 5, 1, 1, 26, 0, 29, 29, 1, 0, 0, 0, 1, 1]' : 0.134511}
{'[2, 6, 2, 5, 4, 5, 1, 1, 26, 0, 29, 29, 1, 0, 0, 0, 1, 1]' : 0.134381}
{'[2, 6, 2, 5, 4, 5, 1, 1, 26, 0, 29, 29, 1, 0, 0, 0, 1, 1]' : 0.134376}
{'[2, 6, 2, 5, 4, 5, 1, 1, 26, 0, 29, 29, 1, 0, 0, 0, 1, 1]' : 0.13402}
{'[2, 6, 2, 5, 4, 5, 1, 1, 26, 0, 29, 29, 1, 0, 0, 0, 1, 1]' : 0.134057}
{'[2, 6, 2, 5, 4, 5, 1, 1, 26, 0, 29, 29, 1, 0, 0, 0, 1, 1]' : 0.134461}

out:
 ["{'[2, 6, 2, 5, 4, 5, 1, 1, 26, 0, 29, 29, 1, 0, 0, 0, 1, 1]' : 0.130433}", "{'[2, 6, 2, 5, 4, 5, 1, 1, 26, 0, 29, 29, 1, 0, 0, 0, 1, 1]' : 0.12991}", "{'[2, 6, 2, 5, 4, 5, 1, 1, 26, 0, 29, 29, 1, 0, 0, 0, 1, 1]' : 0.129536}", "{'[2, 6, 2, 5, 4, 5, 1, 1, 26, 0, 29, 29, 1, 0, 0, 0, 1, 1]' : 0.129736}", "{'[2, 6, 2, 5, 4, 5, 1, 1, 26, 0, 29, 29, 1, 0, 0, 0, 1, 1]' : 0.130744}", "{'[2, 6, 2, 5, 4, 5, 1, 1, 26, 0, 29, 29, 1, 0, 0, 0, 1, 1]' : 0.134493}", "{'[2, 6, 2, 5, 4, 5, 1, 1, 26, 0, 29, 29, 1, 0, 0, 0, 1, 1]' : 0.134352}", "{'[2, 6, 2, 5, 4, 5, 1, 1, 26, 0, 29, 29, 1, 0, 0, 0, 1, 1]' : 0.134505}", "{'[2, 6, 2, 5, 4, 5, 1, 1, 26, 0, 29, 29, 1, 0, 0, 0, 1, 1]' : 0.134418}", "{'[2, 6, 2, 5, 4, 5, 1, 1, 26, 0, 29, 29, 1, 0, 0, 0, 1, 1]' : 0.133926}", "{'[2, 6, 2, 5, 4, 5, 1, 1, 26, 0, 29, 29, 1, 0, 0, 0, 1, 1]' : 0.133728}", "{'[2, 6, 2, 5, 4, 5, 1, 1, 26, 0, 29, 29, 1, 0, 0, 0, 1, 1]' : 0.133938}", "{'[2, 6, 2, 5, 4, 5, 1, 1, 26, 0, 29, 29, 1, 0, 0, 0, 1, 1]' : 0.134014}", "{'[2, 6, 2, 5, 4, 5, 1, 1, 26, 0, 29, 29, 1, 0, 0, 0, 1, 1]' : 0.133893}", "{'[2, 6, 2, 5, 4, 5, 1, 1, 26, 0, 29, 29, 1, 0, 0, 0, 1, 1]' : 0.133937}", "{'[2, 6, 2, 5, 4, 5, 1, 1, 26, 0, 29, 29, 1, 0, 0, 0, 1, 1]' : 0.13085}", "{'[2, 6, 2, 5, 4, 5, 1, 1, 26, 0, 29, 29, 1, 0, 0, 0, 1, 1]' : 0.133969}", "{'[2, 6, 2, 5, 4, 5, 1, 1, 26, 0, 29, 29, 1, 0, 0, 0, 1, 1]' : 0.13445}", "{'[2, 6, 2, 5, 4, 5, 1, 1, 26, 0, 29, 29, 1, 0, 0, 0, 1, 1]' : 0.134354}", "{'[2, 6, 2, 5, 4, 5, 1, 1, 26, 0, 29, 29, 1, 0, 0, 0, 1, 1]' : 0.134868}", "{'[2, 6, 2, 5, 4, 5, 1, 1, 26, 0, 29, 29, 1, 0, 0, 0, 1, 1]' : 0.134473}", "{'[2, 6, 2, 5, 4, 5, 1, 1, 26, 0, 29, 29, 1, 0, 0, 0, 1, 1]' : 0.134368}", "{'[2, 6, 2, 5, 4, 5, 1, 1, 26, 0, 29, 29, 1, 0, 0, 0, 1, 1]' : 0.13394}", "{'[2, 6, 2, 5, 4, 5, 1, 1, 26, 0, 29, 29, 1, 0, 0, 0, 1, 1]' : 0.131666}", "{'[2, 6, 2, 5, 4, 5, 1, 1, 26, 0, 29, 29, 1, 0, 0, 0, 1, 1]' : 0.134511}", "{'[2, 6, 2, 5, 4, 5, 1, 1, 26, 0, 29, 29, 1, 0, 0, 0, 1, 1]' : 0.134381}", "{'[2, 6, 2, 5, 4, 5, 1, 1, 26, 0, 29, 29, 1, 0, 0, 0, 1, 1]' : 0.134376}", "{'[2, 6, 2, 5, 4, 5, 1, 1, 26, 0, 29, 29, 1, 0, 0, 0, 1, 1]' : 0.13402}", "{'[2, 6, 2, 5, 4, 5, 1, 1, 26, 0, 29, 29, 1, 0, 0, 0, 1, 1]' : 0.134057}", "{'[2, 6, 2, 5, 4, 5, 1, 1, 26, 0, 29, 29, 1, 0, 0, 0, 1, 1]' : 0.134461}"]
returning from 'run': {'[2, 6, 2, 5, 4, 5, 1, 1, 26, 0, 29, 29, 1, 0, 0, 0, 1, 1]': ([0.130433, 0.12991, 0.129536, 0.129736, 0.130744, 0.134493, 0.134352, 0.134505, 0.134418, 0.133926, 0.133728, 0.133938, 0.134014, 0.133893, 0.133937, 0.13085, 0.133969, 0.13445, 0.134354, 0.134868, 0.134473, 0.134368, 0.13394, 0.131666, 0.134511, 0.134381, 0.134376, 0.13402, 0.134057, 0.134461], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 6, 2, 5, 4, 5, 1, 1, 26, 0, 29, 29, 1, 0, 0, 0, 1, 1]': ([0.130433, 0.12991, 0.129536, 0.129736, 0.130744, 0.134493, 0.134352, 0.134505, 0.134418, 0.133926, 0.133728, 0.133938, 0.134014, 0.133893, 0.133937, 0.13085, 0.133969, 0.13445, 0.134354, 0.134868, 0.134473, 0.134368, 0.13394, 0.131666, 0.134511, 0.134381, 0.134376, 0.13402, 0.134057, 0.134461], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	26
        Max loop nest depth: 	6
        Additions: 		1151
        Multiplications: 	264
        Divisions: 		0
        Logical: 		0
        Reads: 			1866
        Writes: 		230
        Comparisons:		26
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest44.exe __orio_perftest44.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest44.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest44.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest44.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest44.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	6
        Additions: 		352
        Multiplications: 	124
        Divisions: 		0
        Logical: 		0
        Reads: 			850
        Writes: 		199
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest45.exe __orio_perftest45.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest45.exe  
Program Test Output: 
{'[6, 1, 6, 6, 0, 6, 0, 0, 19, 0, 20, 6, 0, 0, 2, 1, 0, 1]' : 0.180688}
{'[6, 1, 6, 6, 0, 6, 0, 0, 19, 0, 20, 6, 0, 0, 2, 1, 0, 1]' : 0.180524}
{'[6, 1, 6, 6, 0, 6, 0, 0, 19, 0, 20, 6, 0, 0, 2, 1, 0, 1]' : 0.172814}
{'[6, 1, 6, 6, 0, 6, 0, 0, 19, 0, 20, 6, 0, 0, 2, 1, 0, 1]' : 0.160327}
{'[6, 1, 6, 6, 0, 6, 0, 0, 19, 0, 20, 6, 0, 0, 2, 1, 0, 1]' : 0.160353}
{'[6, 1, 6, 6, 0, 6, 0, 0, 19, 0, 20, 6, 0, 0, 2, 1, 0, 1]' : 0.160391}
{'[6, 1, 6, 6, 0, 6, 0, 0, 19, 0, 20, 6, 0, 0, 2, 1, 0, 1]' : 0.160325}
{'[6, 1, 6, 6, 0, 6, 0, 0, 19, 0, 20, 6, 0, 0, 2, 1, 0, 1]' : 0.160332}
{'[6, 1, 6, 6, 0, 6, 0, 0, 19, 0, 20, 6, 0, 0, 2, 1, 0, 1]' : 0.160321}
{'[6, 1, 6, 6, 0, 6, 0, 0, 19, 0, 20, 6, 0, 0, 2, 1, 0, 1]' : 0.160316}
{'[6, 1, 6, 6, 0, 6, 0, 0, 19, 0, 20, 6, 0, 0, 2, 1, 0, 1]' : 0.160351}
{'[6, 1, 6, 6, 0, 6, 0, 0, 19, 0, 20, 6, 0, 0, 2, 1, 0, 1]' : 0.160619}
{'[6, 1, 6, 6, 0, 6, 0, 0, 19, 0, 20, 6, 0, 0, 2, 1, 0, 1]' : 0.160461}
{'[6, 1, 6, 6, 0, 6, 0, 0, 19, 0, 20, 6, 0, 0, 2, 1, 0, 1]' : 0.160418}
{'[6, 1, 6, 6, 0, 6, 0, 0, 19, 0, 20, 6, 0, 0, 2, 1, 0, 1]' : 0.160393}
{'[6, 1, 6, 6, 0, 6, 0, 0, 19, 0, 20, 6, 0, 0, 2, 1, 0, 1]' : 0.160368}
{'[6, 1, 6, 6, 0, 6, 0, 0, 19, 0, 20, 6, 0, 0, 2, 1, 0, 1]' : 0.160391}
{'[6, 1, 6, 6, 0, 6, 0, 0, 19, 0, 20, 6, 0, 0, 2, 1, 0, 1]' : 0.160455}
{'[6, 1, 6, 6, 0, 6, 0, 0, 19, 0, 20, 6, 0, 0, 2, 1, 0, 1]' : 0.160394}
{'[6, 1, 6, 6, 0, 6, 0, 0, 19, 0, 20, 6, 0, 0, 2, 1, 0, 1]' : 0.160354}
{'[6, 1, 6, 6, 0, 6, 0, 0, 19, 0, 20, 6, 0, 0, 2, 1, 0, 1]' : 0.158526}
{'[6, 1, 6, 6, 0, 6, 0, 0, 19, 0, 20, 6, 0, 0, 2, 1, 0, 1]' : 0.156903}
{'[6, 1, 6, 6, 0, 6, 0, 0, 19, 0, 20, 6, 0, 0, 2, 1, 0, 1]' : 0.156763}
{'[6, 1, 6, 6, 0, 6, 0, 0, 19, 0, 20, 6, 0, 0, 2, 1, 0, 1]' : 0.156797}
{'[6, 1, 6, 6, 0, 6, 0, 0, 19, 0, 20, 6, 0, 0, 2, 1, 0, 1]' : 0.158039}
{'[6, 1, 6, 6, 0, 6, 0, 0, 19, 0, 20, 6, 0, 0, 2, 1, 0, 1]' : 0.160332}
{'[6, 1, 6, 6, 0, 6, 0, 0, 19, 0, 20, 6, 0, 0, 2, 1, 0, 1]' : 0.16044}
{'[6, 1, 6, 6, 0, 6, 0, 0, 19, 0, 20, 6, 0, 0, 2, 1, 0, 1]' : 0.160409}
{'[6, 1, 6, 6, 0, 6, 0, 0, 19, 0, 20, 6, 0, 0, 2, 1, 0, 1]' : 0.160405}
{'[6, 1, 6, 6, 0, 6, 0, 0, 19, 0, 20, 6, 0, 0, 2, 1, 0, 1]' : 0.160372}

out:
 ["{'[6, 1, 6, 6, 0, 6, 0, 0, 19, 0, 20, 6, 0, 0, 2, 1, 0, 1]' : 0.180688}", "{'[6, 1, 6, 6, 0, 6, 0, 0, 19, 0, 20, 6, 0, 0, 2, 1, 0, 1]' : 0.180524}", "{'[6, 1, 6, 6, 0, 6, 0, 0, 19, 0, 20, 6, 0, 0, 2, 1, 0, 1]' : 0.172814}", "{'[6, 1, 6, 6, 0, 6, 0, 0, 19, 0, 20, 6, 0, 0, 2, 1, 0, 1]' : 0.160327}", "{'[6, 1, 6, 6, 0, 6, 0, 0, 19, 0, 20, 6, 0, 0, 2, 1, 0, 1]' : 0.160353}", "{'[6, 1, 6, 6, 0, 6, 0, 0, 19, 0, 20, 6, 0, 0, 2, 1, 0, 1]' : 0.160391}", "{'[6, 1, 6, 6, 0, 6, 0, 0, 19, 0, 20, 6, 0, 0, 2, 1, 0, 1]' : 0.160325}", "{'[6, 1, 6, 6, 0, 6, 0, 0, 19, 0, 20, 6, 0, 0, 2, 1, 0, 1]' : 0.160332}", "{'[6, 1, 6, 6, 0, 6, 0, 0, 19, 0, 20, 6, 0, 0, 2, 1, 0, 1]' : 0.160321}", "{'[6, 1, 6, 6, 0, 6, 0, 0, 19, 0, 20, 6, 0, 0, 2, 1, 0, 1]' : 0.160316}", "{'[6, 1, 6, 6, 0, 6, 0, 0, 19, 0, 20, 6, 0, 0, 2, 1, 0, 1]' : 0.160351}", "{'[6, 1, 6, 6, 0, 6, 0, 0, 19, 0, 20, 6, 0, 0, 2, 1, 0, 1]' : 0.160619}", "{'[6, 1, 6, 6, 0, 6, 0, 0, 19, 0, 20, 6, 0, 0, 2, 1, 0, 1]' : 0.160461}", "{'[6, 1, 6, 6, 0, 6, 0, 0, 19, 0, 20, 6, 0, 0, 2, 1, 0, 1]' : 0.160418}", "{'[6, 1, 6, 6, 0, 6, 0, 0, 19, 0, 20, 6, 0, 0, 2, 1, 0, 1]' : 0.160393}", "{'[6, 1, 6, 6, 0, 6, 0, 0, 19, 0, 20, 6, 0, 0, 2, 1, 0, 1]' : 0.160368}", "{'[6, 1, 6, 6, 0, 6, 0, 0, 19, 0, 20, 6, 0, 0, 2, 1, 0, 1]' : 0.160391}", "{'[6, 1, 6, 6, 0, 6, 0, 0, 19, 0, 20, 6, 0, 0, 2, 1, 0, 1]' : 0.160455}", "{'[6, 1, 6, 6, 0, 6, 0, 0, 19, 0, 20, 6, 0, 0, 2, 1, 0, 1]' : 0.160394}", "{'[6, 1, 6, 6, 0, 6, 0, 0, 19, 0, 20, 6, 0, 0, 2, 1, 0, 1]' : 0.160354}", "{'[6, 1, 6, 6, 0, 6, 0, 0, 19, 0, 20, 6, 0, 0, 2, 1, 0, 1]' : 0.158526}", "{'[6, 1, 6, 6, 0, 6, 0, 0, 19, 0, 20, 6, 0, 0, 2, 1, 0, 1]' : 0.156903}", "{'[6, 1, 6, 6, 0, 6, 0, 0, 19, 0, 20, 6, 0, 0, 2, 1, 0, 1]' : 0.156763}", "{'[6, 1, 6, 6, 0, 6, 0, 0, 19, 0, 20, 6, 0, 0, 2, 1, 0, 1]' : 0.156797}", "{'[6, 1, 6, 6, 0, 6, 0, 0, 19, 0, 20, 6, 0, 0, 2, 1, 0, 1]' : 0.158039}", "{'[6, 1, 6, 6, 0, 6, 0, 0, 19, 0, 20, 6, 0, 0, 2, 1, 0, 1]' : 0.160332}", "{'[6, 1, 6, 6, 0, 6, 0, 0, 19, 0, 20, 6, 0, 0, 2, 1, 0, 1]' : 0.16044}", "{'[6, 1, 6, 6, 0, 6, 0, 0, 19, 0, 20, 6, 0, 0, 2, 1, 0, 1]' : 0.160409}", "{'[6, 1, 6, 6, 0, 6, 0, 0, 19, 0, 20, 6, 0, 0, 2, 1, 0, 1]' : 0.160405}", "{'[6, 1, 6, 6, 0, 6, 0, 0, 19, 0, 20, 6, 0, 0, 2, 1, 0, 1]' : 0.160372}"]
returning from 'run': {'[6, 1, 6, 6, 0, 6, 0, 0, 19, 0, 20, 6, 0, 0, 2, 1, 0, 1]': ([0.180688, 0.180524, 0.172814, 0.160327, 0.160353, 0.160391, 0.160325, 0.160332, 0.160321, 0.160316, 0.160351, 0.160619, 0.160461, 0.160418, 0.160393, 0.160368, 0.160391, 0.160455, 0.160394, 0.160354, 0.158526, 0.156903, 0.156763, 0.156797, 0.158039, 0.160332, 0.16044, 0.160409, 0.160405, 0.160372], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 1, 6, 6, 0, 6, 0, 0, 19, 0, 20, 6, 0, 0, 2, 1, 0, 1]': ([0.180688, 0.180524, 0.172814, 0.160327, 0.160353, 0.160391, 0.160325, 0.160332, 0.160321, 0.160316, 0.160351, 0.160619, 0.160461, 0.160418, 0.160393, 0.160368, 0.160391, 0.160455, 0.160394, 0.160354, 0.158526, 0.156903, 0.156763, 0.156797, 0.158039, 0.160332, 0.16044, 0.160409, 0.160405, 0.160372], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	112
        Max loop nest depth: 	6
        Additions: 		8603
        Multiplications: 	2400
        Divisions: 		0
        Logical: 		0
        Reads: 			13400
        Writes: 		1592
        Comparisons:		112
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest46.exe __orio_perftest46.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest46.exe  
Program Test Output: 
{'[3, 3, 0, 6, 3, 1, 0, 1, 15, 22, 15, 0, 0, 2, 0, 0, 1, 1]' : 0.203572}
{'[3, 3, 0, 6, 3, 1, 0, 1, 15, 22, 15, 0, 0, 2, 0, 0, 1, 1]' : 0.202487}
{'[3, 3, 0, 6, 3, 1, 0, 1, 15, 22, 15, 0, 0, 2, 0, 0, 1, 1]' : 0.203765}
{'[3, 3, 0, 6, 3, 1, 0, 1, 15, 22, 15, 0, 0, 2, 0, 0, 1, 1]' : 0.203628}
{'[3, 3, 0, 6, 3, 1, 0, 1, 15, 22, 15, 0, 0, 2, 0, 0, 1, 1]' : 0.198327}
{'[3, 3, 0, 6, 3, 1, 0, 1, 15, 22, 15, 0, 0, 2, 0, 0, 1, 1]' : 0.195532}
{'[3, 3, 0, 6, 3, 1, 0, 1, 15, 22, 15, 0, 0, 2, 0, 0, 1, 1]' : 0.196363}
{'[3, 3, 0, 6, 3, 1, 0, 1, 15, 22, 15, 0, 0, 2, 0, 0, 1, 1]' : 0.197438}
{'[3, 3, 0, 6, 3, 1, 0, 1, 15, 22, 15, 0, 0, 2, 0, 0, 1, 1]' : 0.197532}
{'[3, 3, 0, 6, 3, 1, 0, 1, 15, 22, 15, 0, 0, 2, 0, 0, 1, 1]' : 0.197628}
{'[3, 3, 0, 6, 3, 1, 0, 1, 15, 22, 15, 0, 0, 2, 0, 0, 1, 1]' : 0.200879}
{'[3, 3, 0, 6, 3, 1, 0, 1, 15, 22, 15, 0, 0, 2, 0, 0, 1, 1]' : 0.201511}
{'[3, 3, 0, 6, 3, 1, 0, 1, 15, 22, 15, 0, 0, 2, 0, 0, 1, 1]' : 0.202698}
{'[3, 3, 0, 6, 3, 1, 0, 1, 15, 22, 15, 0, 0, 2, 0, 0, 1, 1]' : 0.203095}
{'[3, 3, 0, 6, 3, 1, 0, 1, 15, 22, 15, 0, 0, 2, 0, 0, 1, 1]' : 0.201706}
{'[3, 3, 0, 6, 3, 1, 0, 1, 15, 22, 15, 0, 0, 2, 0, 0, 1, 1]' : 0.201159}
{'[3, 3, 0, 6, 3, 1, 0, 1, 15, 22, 15, 0, 0, 2, 0, 0, 1, 1]' : 0.201425}
{'[3, 3, 0, 6, 3, 1, 0, 1, 15, 22, 15, 0, 0, 2, 0, 0, 1, 1]' : 0.20279}
{'[3, 3, 0, 6, 3, 1, 0, 1, 15, 22, 15, 0, 0, 2, 0, 0, 1, 1]' : 0.202722}
{'[3, 3, 0, 6, 3, 1, 0, 1, 15, 22, 15, 0, 0, 2, 0, 0, 1, 1]' : 0.201796}
{'[3, 3, 0, 6, 3, 1, 0, 1, 15, 22, 15, 0, 0, 2, 0, 0, 1, 1]' : 0.20103}
{'[3, 3, 0, 6, 3, 1, 0, 1, 15, 22, 15, 0, 0, 2, 0, 0, 1, 1]' : 0.201512}
{'[3, 3, 0, 6, 3, 1, 0, 1, 15, 22, 15, 0, 0, 2, 0, 0, 1, 1]' : 0.202735}
{'[3, 3, 0, 6, 3, 1, 0, 1, 15, 22, 15, 0, 0, 2, 0, 0, 1, 1]' : 0.202666}
{'[3, 3, 0, 6, 3, 1, 0, 1, 15, 22, 15, 0, 0, 2, 0, 0, 1, 1]' : 0.201316}
{'[3, 3, 0, 6, 3, 1, 0, 1, 15, 22, 15, 0, 0, 2, 0, 0, 1, 1]' : 0.201315}
{'[3, 3, 0, 6, 3, 1, 0, 1, 15, 22, 15, 0, 0, 2, 0, 0, 1, 1]' : 0.201026}
{'[3, 3, 0, 6, 3, 1, 0, 1, 15, 22, 15, 0, 0, 2, 0, 0, 1, 1]' : 0.197309}
{'[3, 3, 0, 6, 3, 1, 0, 1, 15, 22, 15, 0, 0, 2, 0, 0, 1, 1]' : 0.19715}
{'[3, 3, 0, 6, 3, 1, 0, 1, 15, 22, 15, 0, 0, 2, 0, 0, 1, 1]' : 0.19578}

out:
 ["{'[3, 3, 0, 6, 3, 1, 0, 1, 15, 22, 15, 0, 0, 2, 0, 0, 1, 1]' : 0.203572}", "{'[3, 3, 0, 6, 3, 1, 0, 1, 15, 22, 15, 0, 0, 2, 0, 0, 1, 1]' : 0.202487}", "{'[3, 3, 0, 6, 3, 1, 0, 1, 15, 22, 15, 0, 0, 2, 0, 0, 1, 1]' : 0.203765}", "{'[3, 3, 0, 6, 3, 1, 0, 1, 15, 22, 15, 0, 0, 2, 0, 0, 1, 1]' : 0.203628}", "{'[3, 3, 0, 6, 3, 1, 0, 1, 15, 22, 15, 0, 0, 2, 0, 0, 1, 1]' : 0.198327}", "{'[3, 3, 0, 6, 3, 1, 0, 1, 15, 22, 15, 0, 0, 2, 0, 0, 1, 1]' : 0.195532}", "{'[3, 3, 0, 6, 3, 1, 0, 1, 15, 22, 15, 0, 0, 2, 0, 0, 1, 1]' : 0.196363}", "{'[3, 3, 0, 6, 3, 1, 0, 1, 15, 22, 15, 0, 0, 2, 0, 0, 1, 1]' : 0.197438}", "{'[3, 3, 0, 6, 3, 1, 0, 1, 15, 22, 15, 0, 0, 2, 0, 0, 1, 1]' : 0.197532}", "{'[3, 3, 0, 6, 3, 1, 0, 1, 15, 22, 15, 0, 0, 2, 0, 0, 1, 1]' : 0.197628}", "{'[3, 3, 0, 6, 3, 1, 0, 1, 15, 22, 15, 0, 0, 2, 0, 0, 1, 1]' : 0.200879}", "{'[3, 3, 0, 6, 3, 1, 0, 1, 15, 22, 15, 0, 0, 2, 0, 0, 1, 1]' : 0.201511}", "{'[3, 3, 0, 6, 3, 1, 0, 1, 15, 22, 15, 0, 0, 2, 0, 0, 1, 1]' : 0.202698}", "{'[3, 3, 0, 6, 3, 1, 0, 1, 15, 22, 15, 0, 0, 2, 0, 0, 1, 1]' : 0.203095}", "{'[3, 3, 0, 6, 3, 1, 0, 1, 15, 22, 15, 0, 0, 2, 0, 0, 1, 1]' : 0.201706}", "{'[3, 3, 0, 6, 3, 1, 0, 1, 15, 22, 15, 0, 0, 2, 0, 0, 1, 1]' : 0.201159}", "{'[3, 3, 0, 6, 3, 1, 0, 1, 15, 22, 15, 0, 0, 2, 0, 0, 1, 1]' : 0.201425}", "{'[3, 3, 0, 6, 3, 1, 0, 1, 15, 22, 15, 0, 0, 2, 0, 0, 1, 1]' : 0.20279}", "{'[3, 3, 0, 6, 3, 1, 0, 1, 15, 22, 15, 0, 0, 2, 0, 0, 1, 1]' : 0.202722}", "{'[3, 3, 0, 6, 3, 1, 0, 1, 15, 22, 15, 0, 0, 2, 0, 0, 1, 1]' : 0.201796}", "{'[3, 3, 0, 6, 3, 1, 0, 1, 15, 22, 15, 0, 0, 2, 0, 0, 1, 1]' : 0.20103}", "{'[3, 3, 0, 6, 3, 1, 0, 1, 15, 22, 15, 0, 0, 2, 0, 0, 1, 1]' : 0.201512}", "{'[3, 3, 0, 6, 3, 1, 0, 1, 15, 22, 15, 0, 0, 2, 0, 0, 1, 1]' : 0.202735}", "{'[3, 3, 0, 6, 3, 1, 0, 1, 15, 22, 15, 0, 0, 2, 0, 0, 1, 1]' : 0.202666}", "{'[3, 3, 0, 6, 3, 1, 0, 1, 15, 22, 15, 0, 0, 2, 0, 0, 1, 1]' : 0.201316}", "{'[3, 3, 0, 6, 3, 1, 0, 1, 15, 22, 15, 0, 0, 2, 0, 0, 1, 1]' : 0.201315}", "{'[3, 3, 0, 6, 3, 1, 0, 1, 15, 22, 15, 0, 0, 2, 0, 0, 1, 1]' : 0.201026}", "{'[3, 3, 0, 6, 3, 1, 0, 1, 15, 22, 15, 0, 0, 2, 0, 0, 1, 1]' : 0.197309}", "{'[3, 3, 0, 6, 3, 1, 0, 1, 15, 22, 15, 0, 0, 2, 0, 0, 1, 1]' : 0.19715}", "{'[3, 3, 0, 6, 3, 1, 0, 1, 15, 22, 15, 0, 0, 2, 0, 0, 1, 1]' : 0.19578}"]
returning from 'run': {'[3, 3, 0, 6, 3, 1, 0, 1, 15, 22, 15, 0, 0, 2, 0, 0, 1, 1]': ([0.203572, 0.202487, 0.203765, 0.203628, 0.198327, 0.195532, 0.196363, 0.197438, 0.197532, 0.197628, 0.200879, 0.201511, 0.202698, 0.203095, 0.201706, 0.201159, 0.201425, 0.20279, 0.202722, 0.201796, 0.20103, 0.201512, 0.202735, 0.202666, 0.201316, 0.201315, 0.201026, 0.197309, 0.19715, 0.19578], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 3, 0, 6, 3, 1, 0, 1, 15, 22, 15, 0, 0, 2, 0, 0, 1, 1]': ([0.203572, 0.202487, 0.203765, 0.203628, 0.198327, 0.195532, 0.196363, 0.197438, 0.197532, 0.197628, 0.200879, 0.201511, 0.202698, 0.203095, 0.201706, 0.201159, 0.201425, 0.20279, 0.202722, 0.201796, 0.20103, 0.201512, 0.202735, 0.202666, 0.201316, 0.201315, 0.201026, 0.197309, 0.19715, 0.19578], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Complete design, with measurements:
     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
31      0    0    2    1    2    0       1       0    4  13   7   0    0    1
437     5    0    1    6    0    0       0       0   18  23   0  22    0    0
491     3    1    6    5    0    6       1       1   21   8   0   0    1    0
630     2    0    0    4    6    3       1       1    5   5  17   0    1    0
977     3    0    0    6    0    3       0       0    6   6   0  25    0    0
1013    5    0    0    3    0    6       1       1   11   0  28  28    0    0
1053    4    1    0    6    1    0       1       1   26  29   5   0    0    0
1093    0    0    5    6    2    5       1       0   14  28   0   4    2    0
1246    2    0    0    3    6    6       0       0   13   0   3   4    1    1
1273    2    6    0    6    6    5       0       1    2  15  25   0    0    1
1288    0    1    2    6    6    2       1       1    1  29  29   0    1    0
1290    3    1    5    1    3    6       1       0    6  28   0   4    0    0
1497    3    1    1    0    1    1       0       0    0  27   0  23    0    1
1549    6    0    1    0    1    5       0       1    2   0   4   4    0    2
1691    0    2    0    6    1    4       1       0   24   0   9  27    0    1
1737    1    6    1    1    0    6       1       0   27  18  29   0    1    1
1970    0    0    6    1    0    4       0       1    0  28   6   0    2    0
2124    5    0    3    0    4    0       0       1   27   5  29   0    1    0
2271    5    0    5    3    6    4       1       1   25  10  26   0    0    1
2438    0    3    1    1    0    6       0       1   12   0   0  13    2    0
2747    0    0    0    2    5    1       1       0   11   4   0   9    0    0
2759    6    3    6    6    6    6       0       1    3   0   7  28    2    0
2790    4    6    6    0    0    5       1       0    0   0  15  28    0    0
2795    5    5    6    3    0    6       0       0   12  27  18   0    2    0
2907    4    1    6    0    3    5       0       0    3   3   0  14    1    0
3107    6    3    3    6    2    1       1       0    4   0  29   0    2    0
3263    6    2    4    0    6    2       0       0    7  25  11   0    0    0
3288    6    6    0    4    4    1       0       0   29   7   0  23    1    0
3472    4    4    3    2    0    2       1       1    4  20   0  23    1    1
3660    1    1    6    0    0    0       0       1    4   0  26   5    2    0
3731    0    0    3    1    0    5       0       1    1   0   0   0    0    1
3854    0    2    3    6    2    1       0       1   27   0   7   3    0    0
3933    1    4    1    6    2    6       0       1    0  12   0  27    0    0
3975    4    6    0    3    6    1       1       1    0   0   0   2    1    0
4000    2    6    2    5    4    5       1       1   26   0  29  29    1    0
4210    6    1    6    6    0    6       0       0   19   0  20   6    0    0
4407    3    3    0    6    3    1       0       1   15  22  15   0    0    2
     RT_K SCR VEC1 VEC2  cost_mean
31      1   1    1    1 0.12173353
437     1   0    1    0 0.14775403
491     0   1    0    1 0.10113764
630     0   1    1    0 0.10976450
977     2   1    1    1 0.11526637
1013    1   1    0    0 0.22139990
1053    1   1    0    0 0.30466423
1093    0   0    1    1 0.17774350
1246    0   0    0    1 0.11151660
1273    1   0    1    0 0.14250980
1288    1   1    1    0 0.09821111
1290    0   0    1    1 0.18489473
1497    1   0    0    1 0.17917910
1549    0   0    0    0 0.30966557
1691    0   1    1    0 0.17119893
1737    0   1    0    0 0.10843163
1970    0   0    1    0 0.22357143
2124    0   1    1    0 0.10342397
2271    0   0    0    1 0.15219980
2438    0   1    1    1 0.18287633
2747    1   1    0    0 0.13134753
2759    0   0    1    0 0.28810167
2790    1   1    1    1 0.18813480
2795    0   0    0    0 0.27899220
2907    1   0    0    1 0.11091897
3107    0   1    0    1 0.26182970
3263    0   1    0    1 0.14906580
3288    1   0    0    0 0.11946143
3472    0   0    1    0 0.11914963
3660    0   1    0    0 0.19446733
3731    1   1    0    0 0.22576900
3854    0   0    0    0 0.25375847
3933    0   1    0    0 0.30682287
3975    0   1    1    1 0.10992917
4000    0   0    1    1 0.13334357
4210    2   1    0    1 0.16165270
4407    0   0    1    1 0.20059640

Heteroscedasticity Test p-value: 0.222195156276
Regression Step:                Df   Sum Sq  Mean Sq F value  Pr(>F)   
T1_I             1 0.003096 0.003096   6.562 0.05054 . 
T1_J             1 0.000037 0.000037   0.079 0.78971   
T1_K             1 0.002036 0.002036   4.316 0.09235 . 
T2_I             1 0.004489 0.004489   9.517 0.02732 * 
T2_J             1 0.015618 0.015618  33.108 0.00222 **
T2_K             1 0.001408 0.001408   2.985 0.14464   
ACOPY_x          1 0.006722 0.006722  14.250 0.01296 * 
ACOPY_y          1 0.010631 0.010631  22.535 0.00512 **
U1_I             1 0.006093 0.006093  12.917 0.01564 * 
U_I              1 0.000571 0.000571   1.210 0.32145   
U_J              1 0.000092 0.000092   0.196 0.67652   
U_K              1 0.000493 0.000493   1.046 0.35332   
RT_I             1 0.000240 0.000240   0.509 0.50738   
RT_J             1 0.000179 0.000179   0.380 0.56476   
RT_K             1 0.018922 0.018922  40.112 0.00145 **
SCR              1 0.000949 0.000949   2.012 0.21523   
VEC1             1 0.012508 0.012508  26.515 0.00362 **
VEC2             1 0.003890 0.003890   8.246 0.03493 * 
I(1/(1 + T1_I))  1 0.012942 0.012942  27.435 0.00336 **
I(1/(1 + T1_J))  1 0.000104 0.000104   0.220 0.65884   
I(1/(1 + T1_K))  1 0.001944 0.001944   4.122 0.09809 . 
I(1/(1 + T2_I))  1 0.002627 0.002627   5.569 0.06476 . 
I(1/(1 + T2_J))  1 0.013356 0.013356  28.313 0.00314 **
I(1/(1 + T2_K))  1 0.006378 0.006378  13.521 0.01434 * 
I(1/(1 + U1_I))  1 0.000043 0.000043   0.091 0.77478   
I(1/(1 + U_I))   1 0.007080 0.007080  15.009 0.01171 * 
I(1/(1 + U_J))   1 0.002652 0.002652   5.623 0.06386 . 
I(1/(1 + U_K))   1 0.000276 0.000276   0.586 0.47849   
I(1/(1 + RT_I))  1 0.015245 0.015245  32.318 0.00235 **
I(1/(1 + RT_J))  1 0.001885 0.001885   3.995 0.10210   
I(1/(1 + RT_K))  1 0.000237 0.000237   0.503 0.50996   
Residuals        5 0.002359 0.000472                   
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Predicting Best
Generating valid search space of size 4600 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Valid coordinates: 920
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Valid coordinates: 1840
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Valid coordinates: 2760
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Valid coordinates: 3680
Tested coordinates: 150000
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Valid coordinates: 4600
Valid/Tested configurations: 4600/184599
Generated Search Space:
NULL
Identical predictions (tol = 1e-5): 1
Getting Best from Design
Response: ['cost_mean']
Design Names:  [1] "T1_I"      "T1_J"      "T1_K"      "T2_I"      "T2_J"      "T2_K"     
 [7] "ACOPY_x"   "ACOPY_y"   "U1_I"      "U_I"       "U_J"       "U_K"      
[13] "RT_I"      "RT_J"      "RT_K"      "SCR"       "VEC1"      "VEC2"     
[19] "cost_mean"

Design Response:       cost_mean
31   0.12173353
437  0.14775403
491  0.10113764
630  0.10976450
977  0.11526637
1013 0.22139990
1053 0.30466423
1093 0.17774350
1246 0.11151660
1273 0.14250980
1288 0.09821111
1290 0.18489473
1497 0.17917910
1549 0.30966557
1691 0.17119893
1737 0.10843163
1970 0.22357143
2124 0.10342397
2271 0.15219980
2438 0.18287633
2747 0.13134753
2759 0.28810167
2790 0.18813480
2795 0.27899220
2907 0.11091897
3107 0.26182970
3263 0.14906580
3288 0.11946143
3472 0.11914963
3660 0.19446733
3731 0.22576900
3854 0.25375847
3933 0.30682287
3975 0.10992917
4000 0.13334357
4210 0.16165270
4407 0.20059640

Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Getting fixed variables
Pruning Model
Best Predicted:      T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
4234    0    0    5    0    6    0       1       0    3  29  23   0    1    1
     RT_K SCR VEC1 VEC2
4234    0   0    1    1

Best From Design: [0, 1, 2, 6, 6, 2, 1, 1, 1, 29, 29, 0, 1, 0, 1, 1, 1, 0]
Pruned Factors: ['T1_J', 'T1_K', 'T2_I', 'T2_K', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'SCR', 'VEC2']
Fixed Factors: {'ACOPY_x': 1, 'ACOPY_y': 0, 'RT_K': 0, 'T1_I': 0, 'T2_J': 6, 'U1_I': 3, 'VEC1': 1}
Length of requested configs: 1
Result was on Database, Returning Now
Starting Point (-O3):
0.16283083333333334
Predicted Best Point:
[0, 0, 5, 0, 6, 0, 1, 0, 3, 29, 23, 0, 1, 1, 0, 0, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	3
        Additions: 		529
        Multiplications: 	144
        Divisions: 		0
        Logical: 		0
        Reads: 			859
        Writes: 		100
        Comparisons:		8
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest47.exe __orio_perftest47.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest47.exe  
Program Test Output: 
{'[0, 0, 5, 0, 6, 0, 1, 0, 3, 29, 23, 0, 1, 1, 0, 0, 1, 1]' : 0.113795}
{'[0, 0, 5, 0, 6, 0, 1, 0, 3, 29, 23, 0, 1, 1, 0, 0, 1, 1]' : 0.113917}
{'[0, 0, 5, 0, 6, 0, 1, 0, 3, 29, 23, 0, 1, 1, 0, 0, 1, 1]' : 0.113419}
{'[0, 0, 5, 0, 6, 0, 1, 0, 3, 29, 23, 0, 1, 1, 0, 0, 1, 1]' : 0.101914}
{'[0, 0, 5, 0, 6, 0, 1, 0, 3, 29, 23, 0, 1, 1, 0, 0, 1, 1]' : 0.0964899}
{'[0, 0, 5, 0, 6, 0, 1, 0, 3, 29, 23, 0, 1, 1, 0, 0, 1, 1]' : 0.0967751}
{'[0, 0, 5, 0, 6, 0, 1, 0, 3, 29, 23, 0, 1, 1, 0, 0, 1, 1]' : 0.0962789}
{'[0, 0, 5, 0, 6, 0, 1, 0, 3, 29, 23, 0, 1, 1, 0, 0, 1, 1]' : 0.096874}
{'[0, 0, 5, 0, 6, 0, 1, 0, 3, 29, 23, 0, 1, 1, 0, 0, 1, 1]' : 0.0960059}
{'[0, 0, 5, 0, 6, 0, 1, 0, 3, 29, 23, 0, 1, 1, 0, 0, 1, 1]' : 0.0960851}
{'[0, 0, 5, 0, 6, 0, 1, 0, 3, 29, 23, 0, 1, 1, 0, 0, 1, 1]' : 0.09571}
{'[0, 0, 5, 0, 6, 0, 1, 0, 3, 29, 23, 0, 1, 1, 0, 0, 1, 1]' : 0.096555}
{'[0, 0, 5, 0, 6, 0, 1, 0, 3, 29, 23, 0, 1, 1, 0, 0, 1, 1]' : 0.096225}
{'[0, 0, 5, 0, 6, 0, 1, 0, 3, 29, 23, 0, 1, 1, 0, 0, 1, 1]' : 0.096071}
{'[0, 0, 5, 0, 6, 0, 1, 0, 3, 29, 23, 0, 1, 1, 0, 0, 1, 1]' : 0.095825}
{'[0, 0, 5, 0, 6, 0, 1, 0, 3, 29, 23, 0, 1, 1, 0, 0, 1, 1]' : 0.0960791}
{'[0, 0, 5, 0, 6, 0, 1, 0, 3, 29, 23, 0, 1, 1, 0, 0, 1, 1]' : 0.0961211}
{'[0, 0, 5, 0, 6, 0, 1, 0, 3, 29, 23, 0, 1, 1, 0, 0, 1, 1]' : 0.096663}
{'[0, 0, 5, 0, 6, 0, 1, 0, 3, 29, 23, 0, 1, 1, 0, 0, 1, 1]' : 0.0959721}
{'[0, 0, 5, 0, 6, 0, 1, 0, 3, 29, 23, 0, 1, 1, 0, 0, 1, 1]' : 0.096348}
{'[0, 0, 5, 0, 6, 0, 1, 0, 3, 29, 23, 0, 1, 1, 0, 0, 1, 1]' : 0.0963762}
{'[0, 0, 5, 0, 6, 0, 1, 0, 3, 29, 23, 0, 1, 1, 0, 0, 1, 1]' : 0.096277}
{'[0, 0, 5, 0, 6, 0, 1, 0, 3, 29, 23, 0, 1, 1, 0, 0, 1, 1]' : 0.096468}
{'[0, 0, 5, 0, 6, 0, 1, 0, 3, 29, 23, 0, 1, 1, 0, 0, 1, 1]' : 0.096118}
{'[0, 0, 5, 0, 6, 0, 1, 0, 3, 29, 23, 0, 1, 1, 0, 0, 1, 1]' : 0.0960641}
{'[0, 0, 5, 0, 6, 0, 1, 0, 3, 29, 23, 0, 1, 1, 0, 0, 1, 1]' : 0.0961301}
{'[0, 0, 5, 0, 6, 0, 1, 0, 3, 29, 23, 0, 1, 1, 0, 0, 1, 1]' : 0.095768}
{'[0, 0, 5, 0, 6, 0, 1, 0, 3, 29, 23, 0, 1, 1, 0, 0, 1, 1]' : 0.0968039}
{'[0, 0, 5, 0, 6, 0, 1, 0, 3, 29, 23, 0, 1, 1, 0, 0, 1, 1]' : 0.096091}
{'[0, 0, 5, 0, 6, 0, 1, 0, 3, 29, 23, 0, 1, 1, 0, 0, 1, 1]' : 0.0962551}

out:
 ["{'[0, 0, 5, 0, 6, 0, 1, 0, 3, 29, 23, 0, 1, 1, 0, 0, 1, 1]' : 0.113795}", "{'[0, 0, 5, 0, 6, 0, 1, 0, 3, 29, 23, 0, 1, 1, 0, 0, 1, 1]' : 0.113917}", "{'[0, 0, 5, 0, 6, 0, 1, 0, 3, 29, 23, 0, 1, 1, 0, 0, 1, 1]' : 0.113419}", "{'[0, 0, 5, 0, 6, 0, 1, 0, 3, 29, 23, 0, 1, 1, 0, 0, 1, 1]' : 0.101914}", "{'[0, 0, 5, 0, 6, 0, 1, 0, 3, 29, 23, 0, 1, 1, 0, 0, 1, 1]' : 0.0964899}", "{'[0, 0, 5, 0, 6, 0, 1, 0, 3, 29, 23, 0, 1, 1, 0, 0, 1, 1]' : 0.0967751}", "{'[0, 0, 5, 0, 6, 0, 1, 0, 3, 29, 23, 0, 1, 1, 0, 0, 1, 1]' : 0.0962789}", "{'[0, 0, 5, 0, 6, 0, 1, 0, 3, 29, 23, 0, 1, 1, 0, 0, 1, 1]' : 0.096874}", "{'[0, 0, 5, 0, 6, 0, 1, 0, 3, 29, 23, 0, 1, 1, 0, 0, 1, 1]' : 0.0960059}", "{'[0, 0, 5, 0, 6, 0, 1, 0, 3, 29, 23, 0, 1, 1, 0, 0, 1, 1]' : 0.0960851}", "{'[0, 0, 5, 0, 6, 0, 1, 0, 3, 29, 23, 0, 1, 1, 0, 0, 1, 1]' : 0.09571}", "{'[0, 0, 5, 0, 6, 0, 1, 0, 3, 29, 23, 0, 1, 1, 0, 0, 1, 1]' : 0.096555}", "{'[0, 0, 5, 0, 6, 0, 1, 0, 3, 29, 23, 0, 1, 1, 0, 0, 1, 1]' : 0.096225}", "{'[0, 0, 5, 0, 6, 0, 1, 0, 3, 29, 23, 0, 1, 1, 0, 0, 1, 1]' : 0.096071}", "{'[0, 0, 5, 0, 6, 0, 1, 0, 3, 29, 23, 0, 1, 1, 0, 0, 1, 1]' : 0.095825}", "{'[0, 0, 5, 0, 6, 0, 1, 0, 3, 29, 23, 0, 1, 1, 0, 0, 1, 1]' : 0.0960791}", "{'[0, 0, 5, 0, 6, 0, 1, 0, 3, 29, 23, 0, 1, 1, 0, 0, 1, 1]' : 0.0961211}", "{'[0, 0, 5, 0, 6, 0, 1, 0, 3, 29, 23, 0, 1, 1, 0, 0, 1, 1]' : 0.096663}", "{'[0, 0, 5, 0, 6, 0, 1, 0, 3, 29, 23, 0, 1, 1, 0, 0, 1, 1]' : 0.0959721}", "{'[0, 0, 5, 0, 6, 0, 1, 0, 3, 29, 23, 0, 1, 1, 0, 0, 1, 1]' : 0.096348}", "{'[0, 0, 5, 0, 6, 0, 1, 0, 3, 29, 23, 0, 1, 1, 0, 0, 1, 1]' : 0.0963762}", "{'[0, 0, 5, 0, 6, 0, 1, 0, 3, 29, 23, 0, 1, 1, 0, 0, 1, 1]' : 0.096277}", "{'[0, 0, 5, 0, 6, 0, 1, 0, 3, 29, 23, 0, 1, 1, 0, 0, 1, 1]' : 0.096468}", "{'[0, 0, 5, 0, 6, 0, 1, 0, 3, 29, 23, 0, 1, 1, 0, 0, 1, 1]' : 0.096118}", "{'[0, 0, 5, 0, 6, 0, 1, 0, 3, 29, 23, 0, 1, 1, 0, 0, 1, 1]' : 0.0960641}", "{'[0, 0, 5, 0, 6, 0, 1, 0, 3, 29, 23, 0, 1, 1, 0, 0, 1, 1]' : 0.0961301}", "{'[0, 0, 5, 0, 6, 0, 1, 0, 3, 29, 23, 0, 1, 1, 0, 0, 1, 1]' : 0.095768}", "{'[0, 0, 5, 0, 6, 0, 1, 0, 3, 29, 23, 0, 1, 1, 0, 0, 1, 1]' : 0.0968039}", "{'[0, 0, 5, 0, 6, 0, 1, 0, 3, 29, 23, 0, 1, 1, 0, 0, 1, 1]' : 0.096091}", "{'[0, 0, 5, 0, 6, 0, 1, 0, 3, 29, 23, 0, 1, 1, 0, 0, 1, 1]' : 0.0962551}"]
returning from 'run': {'[0, 0, 5, 0, 6, 0, 1, 0, 3, 29, 23, 0, 1, 1, 0, 0, 1, 1]': ([0.113795, 0.113917, 0.113419, 0.101914, 0.0964899, 0.0967751, 0.0962789, 0.096874, 0.0960059, 0.0960851, 0.09571, 0.096555, 0.096225, 0.096071, 0.095825, 0.0960791, 0.0961211, 0.096663, 0.0959721, 0.096348, 0.0963762, 0.096277, 0.096468, 0.096118, 0.0960641, 0.0961301, 0.095768, 0.0968039, 0.096091, 0.0962551], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 5, 0, 6, 0, 1, 0, 3, 29, 23, 0, 1, 1, 0, 0, 1, 1]': ([0.113795, 0.113917, 0.113419, 0.101914, 0.0964899, 0.0967751, 0.0962789, 0.096874, 0.0960059, 0.0960851, 0.09571, 0.096555, 0.096225, 0.096071, 0.095825, 0.0960791, 0.0961211, 0.096663, 0.0959721, 0.096348, 0.0963762, 0.096277, 0.096468, 0.096118, 0.0960641, 0.0961301, 0.095768, 0.0968039, 0.096091, 0.0962551], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Design Best Point:
[0, 1, 2, 6, 6, 2, 1, 1, 1, 29, 29, 0, 1, 0, 1, 1, 1, 0]
Length of requested configs: 1
Result was on Database, Returning Now
Fixed Factors: {'ACOPY_x': 1, 'ACOPY_y': 0, 'RT_K': 0, 'T1_I': 0, 'T2_J': 6, 'U1_I': 3, 'VEC1': 1}
Slowdown (Design Best): 0.6031480933688849
Slowdown (Predicted Best): 0.602972328131957
Budget: 37/180
Updating Global Best: 0.09818248666666667
Current Best Point: 
[0, 0, 5, 0, 6, 0, 1, 0, 3, 29, 23, 0, 1, 1, 0, 0, 1, 1]
Step 1
Generating valid search space of size 3000 (does not spend evaluations)
Tested coordinates: 10000
Valid coordinates: 600
Tested coordinates: 20000
Valid coordinates: 1200
Tested coordinates: 30000
Valid coordinates: 1800
Tested coordinates: 40000
Valid coordinates: 2400
Tested coordinates: 50000
Valid coordinates: 3000
Valid/Tested configurations: 3000/52160
Generated Search Space:
NULL
Clean Info:
Removed Factors: character(0)

Removed Inverse Factors: [1] "SCR"  "VEC2"

New Factors: ['T1_J', 'T1_K', 'T2_I', 'T2_K', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'SCR', 'VEC2']
New Inverse Factors: ['T1_J', 'T1_K', 'T2_I', 'T2_K', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J']
New Fixed Factors: {'ACOPY_x': 1, 'ACOPY_y': 0, 'RT_K': 0, 'T1_I': 0, 'T2_J': 6, 'U1_I': 3, 'VEC1': 1}
Full Model:  ~ T1_J + T1_K + T2_I + T2_K + U_I + U_J + U_K + RT_I + RT_J + SCR + VEC2 + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_K)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J))
Fixed Factors: {'ACOPY_x': 1, 'ACOPY_y': 0, 'RT_K': 0, 'T1_I': 0, 'T2_J': 6, 'U1_I': 3, 'VEC1': 1}
Computing D-Optimal Design
Computing D-Optimal Design with 30 experiments
Design Formula:  ~ T1_J + T1_K + T2_I + T2_K + U_I + U_J + U_K + RT_I + RT_J + SCR + VEC2 + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_K)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J))
Starting "optFederov" run
Using Search Space:
NULL
Data Dimensions: [1] 3000   11

     T1_J T1_K T2_I T2_K U_I U_J U_K RT_I RT_J SCR VEC2
48      2    0    3    2   0   0  29    0    2   1    0
118     6    2    0    0   0  27   3    0    2   1    0
149     2    3    6    2   0  11   4    1    1   1    0
215     5    0    2    0   7   8   0    1    0   0    0
277     5    6    0    6   8   0  27    2    0   1    1
369     0    1    6    5   5  16   0    0    2   1    1
430     0    0    6    5   0  26   5    1    0   0    1
570     6    3    0    0  27  24   0    1    1   1    0
658     0    6    6    0  13   8   0    0    0   1    1
908     4    0    4    5   0   1   0    2    0   0    1
922     0    2    2    0  29   0   9    0    1   0    1
1016    5    0    6    1  15   0   4    1    0   1    1
1167    6    4    1    3   3  26   0    2    0   0    0
1390    6    6    5    6   0  13   1    0    1   0    0
1450    0    0    0    2   0  15  25    0    1   1    0
1625    2    1    6    3  16   0   0    0    0   0    0
1662    1    5    1    6   0   0   0    1    0   0    1
1766    3    0    6    5  29  28   0    0    1   0    0
1988    6    4    0    0  22   0  29    0    1   0    1
2117    3    4    6    0   0  15  21    2    0   0    0
2142    2    2    3    5   0  29  29    0    0   1    1
2192    2    3    0    1   8   9   0    0    2   0    0
2360    6    0    1    2  29   0   6    0    2   0    1
2373    3    0    2    6   3   0   3    0    0   1    0
2577    1    4    1    4  11   3   0    1    1   1    1
2623    1    6    6    5  23  29   0    0    2   1    1
2634    3    1    0    3  29   7   0    0    0   1    1
2814    6    4    5    5  29   0  29    1    0   1    0
2818    0    6    0    6  26   0  15    1    0   1    0
2953    0    2    2    6  24   3   0    2    0   1    0

D-Efficiency Approximation: [1] 0.472

Measuring design of size 30
Current Design Names: ['T1_J', 'T1_K', 'T2_I', 'T2_K', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'SCR', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	5
        Additions: 		353
        Multiplications: 	126
        Divisions: 		0
        Logical: 		0
        Reads: 			792
        Writes: 		159
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest48.exe __orio_perftest48.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest48.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest48.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest48.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest48.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	4
        Additions: 		220
        Multiplications: 	74
        Divisions: 		0
        Logical: 		0
        Reads: 			447
        Writes: 		79
        Comparisons:		10
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest49.exe __orio_perftest49.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest49.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest49.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest49.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest49.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	5
        Additions: 		596
        Multiplications: 	252
        Divisions: 		0
        Logical: 		0
        Reads: 			1227
        Writes: 		230
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest50.exe __orio_perftest50.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest50.exe  
Program Test Output: 
{'[0, 2, 3, 6, 6, 2, 1, 0, 3, 0, 11, 4, 1, 1, 0, 1, 1, 0]' : 0.103705}
{'[0, 2, 3, 6, 6, 2, 1, 0, 3, 0, 11, 4, 1, 1, 0, 1, 1, 0]' : 0.103593}
{'[0, 2, 3, 6, 6, 2, 1, 0, 3, 0, 11, 4, 1, 1, 0, 1, 1, 0]' : 0.103834}
{'[0, 2, 3, 6, 6, 2, 1, 0, 3, 0, 11, 4, 1, 1, 0, 1, 1, 0]' : 0.103317}
{'[0, 2, 3, 6, 6, 2, 1, 0, 3, 0, 11, 4, 1, 1, 0, 1, 1, 0]' : 0.100957}
{'[0, 2, 3, 6, 6, 2, 1, 0, 3, 0, 11, 4, 1, 1, 0, 1, 1, 0]' : 0.100997}
{'[0, 2, 3, 6, 6, 2, 1, 0, 3, 0, 11, 4, 1, 1, 0, 1, 1, 0]' : 0.100906}
{'[0, 2, 3, 6, 6, 2, 1, 0, 3, 0, 11, 4, 1, 1, 0, 1, 1, 0]' : 0.098603}
{'[0, 2, 3, 6, 6, 2, 1, 0, 3, 0, 11, 4, 1, 1, 0, 1, 1, 0]' : 0.098757}
{'[0, 2, 3, 6, 6, 2, 1, 0, 3, 0, 11, 4, 1, 1, 0, 1, 1, 0]' : 0.101091}
{'[0, 2, 3, 6, 6, 2, 1, 0, 3, 0, 11, 4, 1, 1, 0, 1, 1, 0]' : 0.101035}
{'[0, 2, 3, 6, 6, 2, 1, 0, 3, 0, 11, 4, 1, 1, 0, 1, 1, 0]' : 0.100893}
{'[0, 2, 3, 6, 6, 2, 1, 0, 3, 0, 11, 4, 1, 1, 0, 1, 1, 0]' : 0.101021}
{'[0, 2, 3, 6, 6, 2, 1, 0, 3, 0, 11, 4, 1, 1, 0, 1, 1, 0]' : 0.100263}
{'[0, 2, 3, 6, 6, 2, 1, 0, 3, 0, 11, 4, 1, 1, 0, 1, 1, 0]' : 0.10112}
{'[0, 2, 3, 6, 6, 2, 1, 0, 3, 0, 11, 4, 1, 1, 0, 1, 1, 0]' : 0.100938}
{'[0, 2, 3, 6, 6, 2, 1, 0, 3, 0, 11, 4, 1, 1, 0, 1, 1, 0]' : 0.100891}
{'[0, 2, 3, 6, 6, 2, 1, 0, 3, 0, 11, 4, 1, 1, 0, 1, 1, 0]' : 0.100947}
{'[0, 2, 3, 6, 6, 2, 1, 0, 3, 0, 11, 4, 1, 1, 0, 1, 1, 0]' : 0.10108}
{'[0, 2, 3, 6, 6, 2, 1, 0, 3, 0, 11, 4, 1, 1, 0, 1, 1, 0]' : 0.101079}
{'[0, 2, 3, 6, 6, 2, 1, 0, 3, 0, 11, 4, 1, 1, 0, 1, 1, 0]' : 0.100905}
{'[0, 2, 3, 6, 6, 2, 1, 0, 3, 0, 11, 4, 1, 1, 0, 1, 1, 0]' : 0.101076}
{'[0, 2, 3, 6, 6, 2, 1, 0, 3, 0, 11, 4, 1, 1, 0, 1, 1, 0]' : 0.100965}
{'[0, 2, 3, 6, 6, 2, 1, 0, 3, 0, 11, 4, 1, 1, 0, 1, 1, 0]' : 0.100114}
{'[0, 2, 3, 6, 6, 2, 1, 0, 3, 0, 11, 4, 1, 1, 0, 1, 1, 0]' : 0.101272}
{'[0, 2, 3, 6, 6, 2, 1, 0, 3, 0, 11, 4, 1, 1, 0, 1, 1, 0]' : 0.100954}
{'[0, 2, 3, 6, 6, 2, 1, 0, 3, 0, 11, 4, 1, 1, 0, 1, 1, 0]' : 0.100908}
{'[0, 2, 3, 6, 6, 2, 1, 0, 3, 0, 11, 4, 1, 1, 0, 1, 1, 0]' : 0.100904}
{'[0, 2, 3, 6, 6, 2, 1, 0, 3, 0, 11, 4, 1, 1, 0, 1, 1, 0]' : 0.101958}
{'[0, 2, 3, 6, 6, 2, 1, 0, 3, 0, 11, 4, 1, 1, 0, 1, 1, 0]' : 0.103633}

out:
 ["{'[0, 2, 3, 6, 6, 2, 1, 0, 3, 0, 11, 4, 1, 1, 0, 1, 1, 0]' : 0.103705}", "{'[0, 2, 3, 6, 6, 2, 1, 0, 3, 0, 11, 4, 1, 1, 0, 1, 1, 0]' : 0.103593}", "{'[0, 2, 3, 6, 6, 2, 1, 0, 3, 0, 11, 4, 1, 1, 0, 1, 1, 0]' : 0.103834}", "{'[0, 2, 3, 6, 6, 2, 1, 0, 3, 0, 11, 4, 1, 1, 0, 1, 1, 0]' : 0.103317}", "{'[0, 2, 3, 6, 6, 2, 1, 0, 3, 0, 11, 4, 1, 1, 0, 1, 1, 0]' : 0.100957}", "{'[0, 2, 3, 6, 6, 2, 1, 0, 3, 0, 11, 4, 1, 1, 0, 1, 1, 0]' : 0.100997}", "{'[0, 2, 3, 6, 6, 2, 1, 0, 3, 0, 11, 4, 1, 1, 0, 1, 1, 0]' : 0.100906}", "{'[0, 2, 3, 6, 6, 2, 1, 0, 3, 0, 11, 4, 1, 1, 0, 1, 1, 0]' : 0.098603}", "{'[0, 2, 3, 6, 6, 2, 1, 0, 3, 0, 11, 4, 1, 1, 0, 1, 1, 0]' : 0.098757}", "{'[0, 2, 3, 6, 6, 2, 1, 0, 3, 0, 11, 4, 1, 1, 0, 1, 1, 0]' : 0.101091}", "{'[0, 2, 3, 6, 6, 2, 1, 0, 3, 0, 11, 4, 1, 1, 0, 1, 1, 0]' : 0.101035}", "{'[0, 2, 3, 6, 6, 2, 1, 0, 3, 0, 11, 4, 1, 1, 0, 1, 1, 0]' : 0.100893}", "{'[0, 2, 3, 6, 6, 2, 1, 0, 3, 0, 11, 4, 1, 1, 0, 1, 1, 0]' : 0.101021}", "{'[0, 2, 3, 6, 6, 2, 1, 0, 3, 0, 11, 4, 1, 1, 0, 1, 1, 0]' : 0.100263}", "{'[0, 2, 3, 6, 6, 2, 1, 0, 3, 0, 11, 4, 1, 1, 0, 1, 1, 0]' : 0.10112}", "{'[0, 2, 3, 6, 6, 2, 1, 0, 3, 0, 11, 4, 1, 1, 0, 1, 1, 0]' : 0.100938}", "{'[0, 2, 3, 6, 6, 2, 1, 0, 3, 0, 11, 4, 1, 1, 0, 1, 1, 0]' : 0.100891}", "{'[0, 2, 3, 6, 6, 2, 1, 0, 3, 0, 11, 4, 1, 1, 0, 1, 1, 0]' : 0.100947}", "{'[0, 2, 3, 6, 6, 2, 1, 0, 3, 0, 11, 4, 1, 1, 0, 1, 1, 0]' : 0.10108}", "{'[0, 2, 3, 6, 6, 2, 1, 0, 3, 0, 11, 4, 1, 1, 0, 1, 1, 0]' : 0.101079}", "{'[0, 2, 3, 6, 6, 2, 1, 0, 3, 0, 11, 4, 1, 1, 0, 1, 1, 0]' : 0.100905}", "{'[0, 2, 3, 6, 6, 2, 1, 0, 3, 0, 11, 4, 1, 1, 0, 1, 1, 0]' : 0.101076}", "{'[0, 2, 3, 6, 6, 2, 1, 0, 3, 0, 11, 4, 1, 1, 0, 1, 1, 0]' : 0.100965}", "{'[0, 2, 3, 6, 6, 2, 1, 0, 3, 0, 11, 4, 1, 1, 0, 1, 1, 0]' : 0.100114}", "{'[0, 2, 3, 6, 6, 2, 1, 0, 3, 0, 11, 4, 1, 1, 0, 1, 1, 0]' : 0.101272}", "{'[0, 2, 3, 6, 6, 2, 1, 0, 3, 0, 11, 4, 1, 1, 0, 1, 1, 0]' : 0.100954}", "{'[0, 2, 3, 6, 6, 2, 1, 0, 3, 0, 11, 4, 1, 1, 0, 1, 1, 0]' : 0.100908}", "{'[0, 2, 3, 6, 6, 2, 1, 0, 3, 0, 11, 4, 1, 1, 0, 1, 1, 0]' : 0.100904}", "{'[0, 2, 3, 6, 6, 2, 1, 0, 3, 0, 11, 4, 1, 1, 0, 1, 1, 0]' : 0.101958}", "{'[0, 2, 3, 6, 6, 2, 1, 0, 3, 0, 11, 4, 1, 1, 0, 1, 1, 0]' : 0.103633}"]
returning from 'run': {'[0, 2, 3, 6, 6, 2, 1, 0, 3, 0, 11, 4, 1, 1, 0, 1, 1, 0]': ([0.103705, 0.103593, 0.103834, 0.103317, 0.100957, 0.100997, 0.100906, 0.098603, 0.098757, 0.101091, 0.101035, 0.100893, 0.101021, 0.100263, 0.10112, 0.100938, 0.100891, 0.100947, 0.10108, 0.101079, 0.100905, 0.101076, 0.100965, 0.100114, 0.101272, 0.100954, 0.100908, 0.100904, 0.101958, 0.103633], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 3, 6, 6, 2, 1, 0, 3, 0, 11, 4, 1, 1, 0, 1, 1, 0]': ([0.103705, 0.103593, 0.103834, 0.103317, 0.100957, 0.100997, 0.100906, 0.098603, 0.098757, 0.101091, 0.101035, 0.100893, 0.101021, 0.100263, 0.10112, 0.100938, 0.100891, 0.100947, 0.10108, 0.101079, 0.100905, 0.101076, 0.100965, 0.100114, 0.101272, 0.100954, 0.100908, 0.100904, 0.101958, 0.103633], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	45
        Max loop nest depth: 	5
        Additions: 		1524
        Multiplications: 	374
        Divisions: 		0
        Logical: 		0
        Reads: 			2469
        Writes: 		305
        Comparisons:		45
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest51.exe __orio_perftest51.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest51.exe  
Program Test Output: 
{'[0, 5, 0, 2, 6, 0, 1, 0, 3, 7, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.104153}
{'[0, 5, 0, 2, 6, 0, 1, 0, 3, 7, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.10422}
{'[0, 5, 0, 2, 6, 0, 1, 0, 3, 7, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.103914}
{'[0, 5, 0, 2, 6, 0, 1, 0, 3, 7, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.104145}
{'[0, 5, 0, 2, 6, 0, 1, 0, 3, 7, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.104041}
{'[0, 5, 0, 2, 6, 0, 1, 0, 3, 7, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.101401}
{'[0, 5, 0, 2, 6, 0, 1, 0, 3, 7, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.09374}
{'[0, 5, 0, 2, 6, 0, 1, 0, 3, 7, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.0938809}
{'[0, 5, 0, 2, 6, 0, 1, 0, 3, 7, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.093966}
{'[0, 5, 0, 2, 6, 0, 1, 0, 3, 7, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.0938389}
{'[0, 5, 0, 2, 6, 0, 1, 0, 3, 7, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.093765}
{'[0, 5, 0, 2, 6, 0, 1, 0, 3, 7, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.0940671}
{'[0, 5, 0, 2, 6, 0, 1, 0, 3, 7, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.0939529}
{'[0, 5, 0, 2, 6, 0, 1, 0, 3, 7, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.0940292}
{'[0, 5, 0, 2, 6, 0, 1, 0, 3, 7, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.0937669}
{'[0, 5, 0, 2, 6, 0, 1, 0, 3, 7, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.0938621}
{'[0, 5, 0, 2, 6, 0, 1, 0, 3, 7, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.0938859}
{'[0, 5, 0, 2, 6, 0, 1, 0, 3, 7, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.093879}
{'[0, 5, 0, 2, 6, 0, 1, 0, 3, 7, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.0938811}
{'[0, 5, 0, 2, 6, 0, 1, 0, 3, 7, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.0937929}
{'[0, 5, 0, 2, 6, 0, 1, 0, 3, 7, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.093955}
{'[0, 5, 0, 2, 6, 0, 1, 0, 3, 7, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.0939081}
{'[0, 5, 0, 2, 6, 0, 1, 0, 3, 7, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.0937719}
{'[0, 5, 0, 2, 6, 0, 1, 0, 3, 7, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.0938802}
{'[0, 5, 0, 2, 6, 0, 1, 0, 3, 7, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.0940518}
{'[0, 5, 0, 2, 6, 0, 1, 0, 3, 7, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.0939188}
{'[0, 5, 0, 2, 6, 0, 1, 0, 3, 7, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.0937331}
{'[0, 5, 0, 2, 6, 0, 1, 0, 3, 7, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.093838}
{'[0, 5, 0, 2, 6, 0, 1, 0, 3, 7, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.093848}
{'[0, 5, 0, 2, 6, 0, 1, 0, 3, 7, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.0940211}

out:
 ["{'[0, 5, 0, 2, 6, 0, 1, 0, 3, 7, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.104153}", "{'[0, 5, 0, 2, 6, 0, 1, 0, 3, 7, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.10422}", "{'[0, 5, 0, 2, 6, 0, 1, 0, 3, 7, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.103914}", "{'[0, 5, 0, 2, 6, 0, 1, 0, 3, 7, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.104145}", "{'[0, 5, 0, 2, 6, 0, 1, 0, 3, 7, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.104041}", "{'[0, 5, 0, 2, 6, 0, 1, 0, 3, 7, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.101401}", "{'[0, 5, 0, 2, 6, 0, 1, 0, 3, 7, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.09374}", "{'[0, 5, 0, 2, 6, 0, 1, 0, 3, 7, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.0938809}", "{'[0, 5, 0, 2, 6, 0, 1, 0, 3, 7, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.093966}", "{'[0, 5, 0, 2, 6, 0, 1, 0, 3, 7, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.0938389}", "{'[0, 5, 0, 2, 6, 0, 1, 0, 3, 7, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.093765}", "{'[0, 5, 0, 2, 6, 0, 1, 0, 3, 7, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.0940671}", "{'[0, 5, 0, 2, 6, 0, 1, 0, 3, 7, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.0939529}", "{'[0, 5, 0, 2, 6, 0, 1, 0, 3, 7, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.0940292}", "{'[0, 5, 0, 2, 6, 0, 1, 0, 3, 7, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.0937669}", "{'[0, 5, 0, 2, 6, 0, 1, 0, 3, 7, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.0938621}", "{'[0, 5, 0, 2, 6, 0, 1, 0, 3, 7, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.0938859}", "{'[0, 5, 0, 2, 6, 0, 1, 0, 3, 7, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.093879}", "{'[0, 5, 0, 2, 6, 0, 1, 0, 3, 7, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.0938811}", "{'[0, 5, 0, 2, 6, 0, 1, 0, 3, 7, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.0937929}", "{'[0, 5, 0, 2, 6, 0, 1, 0, 3, 7, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.093955}", "{'[0, 5, 0, 2, 6, 0, 1, 0, 3, 7, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.0939081}", "{'[0, 5, 0, 2, 6, 0, 1, 0, 3, 7, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.0937719}", "{'[0, 5, 0, 2, 6, 0, 1, 0, 3, 7, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.0938802}", "{'[0, 5, 0, 2, 6, 0, 1, 0, 3, 7, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.0940518}", "{'[0, 5, 0, 2, 6, 0, 1, 0, 3, 7, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.0939188}", "{'[0, 5, 0, 2, 6, 0, 1, 0, 3, 7, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.0937331}", "{'[0, 5, 0, 2, 6, 0, 1, 0, 3, 7, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.093838}", "{'[0, 5, 0, 2, 6, 0, 1, 0, 3, 7, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.093848}", "{'[0, 5, 0, 2, 6, 0, 1, 0, 3, 7, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.0940211}"]
returning from 'run': {'[0, 5, 0, 2, 6, 0, 1, 0, 3, 7, 8, 0, 1, 0, 0, 0, 1, 0]': ([0.104153, 0.10422, 0.103914, 0.104145, 0.104041, 0.101401, 0.09374, 0.0938809, 0.093966, 0.0938389, 0.093765, 0.0940671, 0.0939529, 0.0940292, 0.0937669, 0.0938621, 0.0938859, 0.093879, 0.0938811, 0.0937929, 0.093955, 0.0939081, 0.0937719, 0.0938802, 0.0940518, 0.0939188, 0.0937331, 0.093838, 0.093848, 0.0940211], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 5, 0, 2, 6, 0, 1, 0, 3, 7, 8, 0, 1, 0, 0, 0, 1, 0]': ([0.104153, 0.10422, 0.103914, 0.104145, 0.104041, 0.101401, 0.09374, 0.0938809, 0.093966, 0.0938389, 0.093765, 0.0940671, 0.0939529, 0.0940292, 0.0937669, 0.0938621, 0.0938859, 0.093879, 0.0938811, 0.0937929, 0.093955, 0.0939081, 0.0937719, 0.0938802, 0.0940518, 0.0939188, 0.0937331, 0.093838, 0.093848, 0.0940211], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		3876
        Multiplications: 	1920
        Divisions: 		0
        Logical: 		0
        Reads: 			7193
        Writes: 		1119
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest52.exe __orio_perftest52.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest52.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest52.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest52.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest52.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	5
        Additions: 		1064
        Multiplications: 	462
        Divisions: 		0
        Logical: 		0
        Reads: 			2075
        Writes: 		351
        Comparisons:		22
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest53.exe __orio_perftest53.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest53.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest53.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest53.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest53.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	4
        Additions: 		2270
        Multiplications: 	630
        Divisions: 		0
        Logical: 		0
        Reads: 			3593
        Writes: 		377
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest54.exe __orio_perftest54.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest54.exe  
Program Test Output: 
{'[0, 0, 0, 6, 6, 5, 1, 0, 3, 0, 26, 5, 1, 0, 0, 0, 1, 1]' : 0.124181}
{'[0, 0, 0, 6, 6, 5, 1, 0, 3, 0, 26, 5, 1, 0, 0, 0, 1, 1]' : 0.123652}
{'[0, 0, 0, 6, 6, 5, 1, 0, 3, 0, 26, 5, 1, 0, 0, 0, 1, 1]' : 0.123433}
{'[0, 0, 0, 6, 6, 5, 1, 0, 3, 0, 26, 5, 1, 0, 0, 0, 1, 1]' : 0.124056}
{'[0, 0, 0, 6, 6, 5, 1, 0, 3, 0, 26, 5, 1, 0, 0, 0, 1, 1]' : 0.127159}
{'[0, 0, 0, 6, 6, 5, 1, 0, 3, 0, 26, 5, 1, 0, 0, 0, 1, 1]' : 0.127207}
{'[0, 0, 0, 6, 6, 5, 1, 0, 3, 0, 26, 5, 1, 0, 0, 0, 1, 1]' : 0.127056}
{'[0, 0, 0, 6, 6, 5, 1, 0, 3, 0, 26, 5, 1, 0, 0, 0, 1, 1]' : 0.127093}
{'[0, 0, 0, 6, 6, 5, 1, 0, 3, 0, 26, 5, 1, 0, 0, 0, 1, 1]' : 0.123976}
{'[0, 0, 0, 6, 6, 5, 1, 0, 3, 0, 26, 5, 1, 0, 0, 0, 1, 1]' : 0.125404}
{'[0, 0, 0, 6, 6, 5, 1, 0, 3, 0, 26, 5, 1, 0, 0, 0, 1, 1]' : 0.126938}
{'[0, 0, 0, 6, 6, 5, 1, 0, 3, 0, 26, 5, 1, 0, 0, 0, 1, 1]' : 0.125006}
{'[0, 0, 0, 6, 6, 5, 1, 0, 3, 0, 26, 5, 1, 0, 0, 0, 1, 1]' : 0.127179}
{'[0, 0, 0, 6, 6, 5, 1, 0, 3, 0, 26, 5, 1, 0, 0, 0, 1, 1]' : 0.127179}
{'[0, 0, 0, 6, 6, 5, 1, 0, 3, 0, 26, 5, 1, 0, 0, 0, 1, 1]' : 0.127014}
{'[0, 0, 0, 6, 6, 5, 1, 0, 3, 0, 26, 5, 1, 0, 0, 0, 1, 1]' : 0.129891}
{'[0, 0, 0, 6, 6, 5, 1, 0, 3, 0, 26, 5, 1, 0, 0, 0, 1, 1]' : 0.130871}
{'[0, 0, 0, 6, 6, 5, 1, 0, 3, 0, 26, 5, 1, 0, 0, 0, 1, 1]' : 0.130804}
{'[0, 0, 0, 6, 6, 5, 1, 0, 3, 0, 26, 5, 1, 0, 0, 0, 1, 1]' : 0.130638}
{'[0, 0, 0, 6, 6, 5, 1, 0, 3, 0, 26, 5, 1, 0, 0, 0, 1, 1]' : 0.130853}
{'[0, 0, 0, 6, 6, 5, 1, 0, 3, 0, 26, 5, 1, 0, 0, 0, 1, 1]' : 0.130819}
{'[0, 0, 0, 6, 6, 5, 1, 0, 3, 0, 26, 5, 1, 0, 0, 0, 1, 1]' : 0.130788}
{'[0, 0, 0, 6, 6, 5, 1, 0, 3, 0, 26, 5, 1, 0, 0, 0, 1, 1]' : 0.131032}
{'[0, 0, 0, 6, 6, 5, 1, 0, 3, 0, 26, 5, 1, 0, 0, 0, 1, 1]' : 0.130797}
{'[0, 0, 0, 6, 6, 5, 1, 0, 3, 0, 26, 5, 1, 0, 0, 0, 1, 1]' : 0.130798}
{'[0, 0, 0, 6, 6, 5, 1, 0, 3, 0, 26, 5, 1, 0, 0, 0, 1, 1]' : 0.130785}
{'[0, 0, 0, 6, 6, 5, 1, 0, 3, 0, 26, 5, 1, 0, 0, 0, 1, 1]' : 0.130654}
{'[0, 0, 0, 6, 6, 5, 1, 0, 3, 0, 26, 5, 1, 0, 0, 0, 1, 1]' : 0.130845}
{'[0, 0, 0, 6, 6, 5, 1, 0, 3, 0, 26, 5, 1, 0, 0, 0, 1, 1]' : 0.130855}
{'[0, 0, 0, 6, 6, 5, 1, 0, 3, 0, 26, 5, 1, 0, 0, 0, 1, 1]' : 0.13088}

out:
 ["{'[0, 0, 0, 6, 6, 5, 1, 0, 3, 0, 26, 5, 1, 0, 0, 0, 1, 1]' : 0.124181}", "{'[0, 0, 0, 6, 6, 5, 1, 0, 3, 0, 26, 5, 1, 0, 0, 0, 1, 1]' : 0.123652}", "{'[0, 0, 0, 6, 6, 5, 1, 0, 3, 0, 26, 5, 1, 0, 0, 0, 1, 1]' : 0.123433}", "{'[0, 0, 0, 6, 6, 5, 1, 0, 3, 0, 26, 5, 1, 0, 0, 0, 1, 1]' : 0.124056}", "{'[0, 0, 0, 6, 6, 5, 1, 0, 3, 0, 26, 5, 1, 0, 0, 0, 1, 1]' : 0.127159}", "{'[0, 0, 0, 6, 6, 5, 1, 0, 3, 0, 26, 5, 1, 0, 0, 0, 1, 1]' : 0.127207}", "{'[0, 0, 0, 6, 6, 5, 1, 0, 3, 0, 26, 5, 1, 0, 0, 0, 1, 1]' : 0.127056}", "{'[0, 0, 0, 6, 6, 5, 1, 0, 3, 0, 26, 5, 1, 0, 0, 0, 1, 1]' : 0.127093}", "{'[0, 0, 0, 6, 6, 5, 1, 0, 3, 0, 26, 5, 1, 0, 0, 0, 1, 1]' : 0.123976}", "{'[0, 0, 0, 6, 6, 5, 1, 0, 3, 0, 26, 5, 1, 0, 0, 0, 1, 1]' : 0.125404}", "{'[0, 0, 0, 6, 6, 5, 1, 0, 3, 0, 26, 5, 1, 0, 0, 0, 1, 1]' : 0.126938}", "{'[0, 0, 0, 6, 6, 5, 1, 0, 3, 0, 26, 5, 1, 0, 0, 0, 1, 1]' : 0.125006}", "{'[0, 0, 0, 6, 6, 5, 1, 0, 3, 0, 26, 5, 1, 0, 0, 0, 1, 1]' : 0.127179}", "{'[0, 0, 0, 6, 6, 5, 1, 0, 3, 0, 26, 5, 1, 0, 0, 0, 1, 1]' : 0.127179}", "{'[0, 0, 0, 6, 6, 5, 1, 0, 3, 0, 26, 5, 1, 0, 0, 0, 1, 1]' : 0.127014}", "{'[0, 0, 0, 6, 6, 5, 1, 0, 3, 0, 26, 5, 1, 0, 0, 0, 1, 1]' : 0.129891}", "{'[0, 0, 0, 6, 6, 5, 1, 0, 3, 0, 26, 5, 1, 0, 0, 0, 1, 1]' : 0.130871}", "{'[0, 0, 0, 6, 6, 5, 1, 0, 3, 0, 26, 5, 1, 0, 0, 0, 1, 1]' : 0.130804}", "{'[0, 0, 0, 6, 6, 5, 1, 0, 3, 0, 26, 5, 1, 0, 0, 0, 1, 1]' : 0.130638}", "{'[0, 0, 0, 6, 6, 5, 1, 0, 3, 0, 26, 5, 1, 0, 0, 0, 1, 1]' : 0.130853}", "{'[0, 0, 0, 6, 6, 5, 1, 0, 3, 0, 26, 5, 1, 0, 0, 0, 1, 1]' : 0.130819}", "{'[0, 0, 0, 6, 6, 5, 1, 0, 3, 0, 26, 5, 1, 0, 0, 0, 1, 1]' : 0.130788}", "{'[0, 0, 0, 6, 6, 5, 1, 0, 3, 0, 26, 5, 1, 0, 0, 0, 1, 1]' : 0.131032}", "{'[0, 0, 0, 6, 6, 5, 1, 0, 3, 0, 26, 5, 1, 0, 0, 0, 1, 1]' : 0.130797}", "{'[0, 0, 0, 6, 6, 5, 1, 0, 3, 0, 26, 5, 1, 0, 0, 0, 1, 1]' : 0.130798}", "{'[0, 0, 0, 6, 6, 5, 1, 0, 3, 0, 26, 5, 1, 0, 0, 0, 1, 1]' : 0.130785}", "{'[0, 0, 0, 6, 6, 5, 1, 0, 3, 0, 26, 5, 1, 0, 0, 0, 1, 1]' : 0.130654}", "{'[0, 0, 0, 6, 6, 5, 1, 0, 3, 0, 26, 5, 1, 0, 0, 0, 1, 1]' : 0.130845}", "{'[0, 0, 0, 6, 6, 5, 1, 0, 3, 0, 26, 5, 1, 0, 0, 0, 1, 1]' : 0.130855}", "{'[0, 0, 0, 6, 6, 5, 1, 0, 3, 0, 26, 5, 1, 0, 0, 0, 1, 1]' : 0.13088}"]
returning from 'run': {'[0, 0, 0, 6, 6, 5, 1, 0, 3, 0, 26, 5, 1, 0, 0, 0, 1, 1]': ([0.124181, 0.123652, 0.123433, 0.124056, 0.127159, 0.127207, 0.127056, 0.127093, 0.123976, 0.125404, 0.126938, 0.125006, 0.127179, 0.127179, 0.127014, 0.129891, 0.130871, 0.130804, 0.130638, 0.130853, 0.130819, 0.130788, 0.131032, 0.130797, 0.130798, 0.130785, 0.130654, 0.130845, 0.130855, 0.13088], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 0, 6, 6, 5, 1, 0, 3, 0, 26, 5, 1, 0, 0, 0, 1, 1]': ([0.124181, 0.123652, 0.123433, 0.124056, 0.127159, 0.127207, 0.127056, 0.127093, 0.123976, 0.125404, 0.126938, 0.125006, 0.127179, 0.127179, 0.127014, 0.129891, 0.130871, 0.130804, 0.130638, 0.130853, 0.130819, 0.130788, 0.131032, 0.130797, 0.130798, 0.130785, 0.130654, 0.130845, 0.130855, 0.13088], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	4
        Additions: 		322
        Multiplications: 	144
        Divisions: 		0
        Logical: 		0
        Reads: 			667
        Writes: 		126
        Comparisons:		9
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest55.exe __orio_perftest55.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest55.exe  
Program Test Output: 
{'[0, 6, 3, 0, 6, 0, 1, 0, 3, 27, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.103301}
{'[0, 6, 3, 0, 6, 0, 1, 0, 3, 27, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.10357}
{'[0, 6, 3, 0, 6, 0, 1, 0, 3, 27, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.103575}
{'[0, 6, 3, 0, 6, 0, 1, 0, 3, 27, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.103568}
{'[0, 6, 3, 0, 6, 0, 1, 0, 3, 27, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.103545}
{'[0, 6, 3, 0, 6, 0, 1, 0, 3, 27, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.103584}
{'[0, 6, 3, 0, 6, 0, 1, 0, 3, 27, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.103207}
{'[0, 6, 3, 0, 6, 0, 1, 0, 3, 27, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.103372}
{'[0, 6, 3, 0, 6, 0, 1, 0, 3, 27, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.103336}
{'[0, 6, 3, 0, 6, 0, 1, 0, 3, 27, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.104034}
{'[0, 6, 3, 0, 6, 0, 1, 0, 3, 27, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.105781}
{'[0, 6, 3, 0, 6, 0, 1, 0, 3, 27, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.105718}
{'[0, 6, 3, 0, 6, 0, 1, 0, 3, 27, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.105741}
{'[0, 6, 3, 0, 6, 0, 1, 0, 3, 27, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.105913}
{'[0, 6, 3, 0, 6, 0, 1, 0, 3, 27, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.105906}
{'[0, 6, 3, 0, 6, 0, 1, 0, 3, 27, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.105966}
{'[0, 6, 3, 0, 6, 0, 1, 0, 3, 27, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.103722}
{'[0, 6, 3, 0, 6, 0, 1, 0, 3, 27, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.103526}
{'[0, 6, 3, 0, 6, 0, 1, 0, 3, 27, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.103509}
{'[0, 6, 3, 0, 6, 0, 1, 0, 3, 27, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.104609}
{'[0, 6, 3, 0, 6, 0, 1, 0, 3, 27, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.105739}
{'[0, 6, 3, 0, 6, 0, 1, 0, 3, 27, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.105771}
{'[0, 6, 3, 0, 6, 0, 1, 0, 3, 27, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.105695}
{'[0, 6, 3, 0, 6, 0, 1, 0, 3, 27, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.105695}
{'[0, 6, 3, 0, 6, 0, 1, 0, 3, 27, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.105933}
{'[0, 6, 3, 0, 6, 0, 1, 0, 3, 27, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.105749}
{'[0, 6, 3, 0, 6, 0, 1, 0, 3, 27, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.105738}
{'[0, 6, 3, 0, 6, 0, 1, 0, 3, 27, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.10574}
{'[0, 6, 3, 0, 6, 0, 1, 0, 3, 27, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.103527}
{'[0, 6, 3, 0, 6, 0, 1, 0, 3, 27, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.103961}

out:
 ["{'[0, 6, 3, 0, 6, 0, 1, 0, 3, 27, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.103301}", "{'[0, 6, 3, 0, 6, 0, 1, 0, 3, 27, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.10357}", "{'[0, 6, 3, 0, 6, 0, 1, 0, 3, 27, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.103575}", "{'[0, 6, 3, 0, 6, 0, 1, 0, 3, 27, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.103568}", "{'[0, 6, 3, 0, 6, 0, 1, 0, 3, 27, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.103545}", "{'[0, 6, 3, 0, 6, 0, 1, 0, 3, 27, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.103584}", "{'[0, 6, 3, 0, 6, 0, 1, 0, 3, 27, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.103207}", "{'[0, 6, 3, 0, 6, 0, 1, 0, 3, 27, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.103372}", "{'[0, 6, 3, 0, 6, 0, 1, 0, 3, 27, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.103336}", "{'[0, 6, 3, 0, 6, 0, 1, 0, 3, 27, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.104034}", "{'[0, 6, 3, 0, 6, 0, 1, 0, 3, 27, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.105781}", "{'[0, 6, 3, 0, 6, 0, 1, 0, 3, 27, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.105718}", "{'[0, 6, 3, 0, 6, 0, 1, 0, 3, 27, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.105741}", "{'[0, 6, 3, 0, 6, 0, 1, 0, 3, 27, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.105913}", "{'[0, 6, 3, 0, 6, 0, 1, 0, 3, 27, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.105906}", "{'[0, 6, 3, 0, 6, 0, 1, 0, 3, 27, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.105966}", "{'[0, 6, 3, 0, 6, 0, 1, 0, 3, 27, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.103722}", "{'[0, 6, 3, 0, 6, 0, 1, 0, 3, 27, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.103526}", "{'[0, 6, 3, 0, 6, 0, 1, 0, 3, 27, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.103509}", "{'[0, 6, 3, 0, 6, 0, 1, 0, 3, 27, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.104609}", "{'[0, 6, 3, 0, 6, 0, 1, 0, 3, 27, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.105739}", "{'[0, 6, 3, 0, 6, 0, 1, 0, 3, 27, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.105771}", "{'[0, 6, 3, 0, 6, 0, 1, 0, 3, 27, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.105695}", "{'[0, 6, 3, 0, 6, 0, 1, 0, 3, 27, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.105695}", "{'[0, 6, 3, 0, 6, 0, 1, 0, 3, 27, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.105933}", "{'[0, 6, 3, 0, 6, 0, 1, 0, 3, 27, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.105749}", "{'[0, 6, 3, 0, 6, 0, 1, 0, 3, 27, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.105738}", "{'[0, 6, 3, 0, 6, 0, 1, 0, 3, 27, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.10574}", "{'[0, 6, 3, 0, 6, 0, 1, 0, 3, 27, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.103527}", "{'[0, 6, 3, 0, 6, 0, 1, 0, 3, 27, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.103961}"]
returning from 'run': {'[0, 6, 3, 0, 6, 0, 1, 0, 3, 27, 24, 0, 1, 1, 0, 1, 1, 0]': ([0.103301, 0.10357, 0.103575, 0.103568, 0.103545, 0.103584, 0.103207, 0.103372, 0.103336, 0.104034, 0.105781, 0.105718, 0.105741, 0.105913, 0.105906, 0.105966, 0.103722, 0.103526, 0.103509, 0.104609, 0.105739, 0.105771, 0.105695, 0.105695, 0.105933, 0.105749, 0.105738, 0.10574, 0.103527, 0.103961], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 3, 0, 6, 0, 1, 0, 3, 27, 24, 0, 1, 1, 0, 1, 1, 0]': ([0.103301, 0.10357, 0.103575, 0.103568, 0.103545, 0.103584, 0.103207, 0.103372, 0.103336, 0.104034, 0.105781, 0.105718, 0.105741, 0.105913, 0.105906, 0.105966, 0.103722, 0.103526, 0.103509, 0.104609, 0.105739, 0.105771, 0.105695, 0.105695, 0.105933, 0.105749, 0.105738, 0.10574, 0.103527, 0.103961], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	56
        Max loop nest depth: 	4
        Additions: 		1231
        Multiplications: 	330
        Divisions: 		0
        Logical: 		0
        Reads: 			2201
        Writes: 		396
        Comparisons:		56
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest56.exe __orio_perftest56.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest56.exe  
Program Test Output: 
{'[0, 0, 6, 6, 6, 0, 1, 0, 3, 13, 8, 0, 0, 0, 0, 1, 1, 1]' : 0.180018}
{'[0, 0, 6, 6, 6, 0, 1, 0, 3, 13, 8, 0, 0, 0, 0, 1, 1, 1]' : 0.185107}
{'[0, 0, 6, 6, 6, 0, 1, 0, 3, 13, 8, 0, 0, 0, 0, 1, 1, 1]' : 0.185121}
{'[0, 0, 6, 6, 6, 0, 1, 0, 3, 13, 8, 0, 0, 0, 0, 1, 1, 1]' : 0.185201}
{'[0, 0, 6, 6, 6, 0, 1, 0, 3, 13, 8, 0, 0, 0, 0, 1, 1, 1]' : 0.184553}
{'[0, 0, 6, 6, 6, 0, 1, 0, 3, 13, 8, 0, 0, 0, 0, 1, 1, 1]' : 0.180202}
{'[0, 0, 6, 6, 6, 0, 1, 0, 3, 13, 8, 0, 0, 0, 0, 1, 1, 1]' : 0.180989}
{'[0, 0, 6, 6, 6, 0, 1, 0, 3, 13, 8, 0, 0, 0, 0, 1, 1, 1]' : 0.180316}
{'[0, 0, 6, 6, 6, 0, 1, 0, 3, 13, 8, 0, 0, 0, 0, 1, 1, 1]' : 0.180145}
{'[0, 0, 6, 6, 6, 0, 1, 0, 3, 13, 8, 0, 0, 0, 0, 1, 1, 1]' : 0.180345}
{'[0, 0, 6, 6, 6, 0, 1, 0, 3, 13, 8, 0, 0, 0, 0, 1, 1, 1]' : 0.181753}
{'[0, 0, 6, 6, 6, 0, 1, 0, 3, 13, 8, 0, 0, 0, 0, 1, 1, 1]' : 0.184321}
{'[0, 0, 6, 6, 6, 0, 1, 0, 3, 13, 8, 0, 0, 0, 0, 1, 1, 1]' : 0.185151}
{'[0, 0, 6, 6, 6, 0, 1, 0, 3, 13, 8, 0, 0, 0, 0, 1, 1, 1]' : 0.185131}
{'[0, 0, 6, 6, 6, 0, 1, 0, 3, 13, 8, 0, 0, 0, 0, 1, 1, 1]' : 0.180927}
{'[0, 0, 6, 6, 6, 0, 1, 0, 3, 13, 8, 0, 0, 0, 0, 1, 1, 1]' : 0.180163}
{'[0, 0, 6, 6, 6, 0, 1, 0, 3, 13, 8, 0, 0, 0, 0, 1, 1, 1]' : 0.18029}
{'[0, 0, 6, 6, 6, 0, 1, 0, 3, 13, 8, 0, 0, 0, 0, 1, 1, 1]' : 0.179562}
{'[0, 0, 6, 6, 6, 0, 1, 0, 3, 13, 8, 0, 0, 0, 0, 1, 1, 1]' : 0.180315}
{'[0, 0, 6, 6, 6, 0, 1, 0, 3, 13, 8, 0, 0, 0, 0, 1, 1, 1]' : 0.180289}
{'[0, 0, 6, 6, 6, 0, 1, 0, 3, 13, 8, 0, 0, 0, 0, 1, 1, 1]' : 0.18461}
{'[0, 0, 6, 6, 6, 0, 1, 0, 3, 13, 8, 0, 0, 0, 0, 1, 1, 1]' : 0.185168}
{'[0, 0, 6, 6, 6, 0, 1, 0, 3, 13, 8, 0, 0, 0, 0, 1, 1, 1]' : 0.182224}
{'[0, 0, 6, 6, 6, 0, 1, 0, 3, 13, 8, 0, 0, 0, 0, 1, 1, 1]' : 0.18511}
{'[0, 0, 6, 6, 6, 0, 1, 0, 3, 13, 8, 0, 0, 0, 0, 1, 1, 1]' : 0.185116}
{'[0, 0, 6, 6, 6, 0, 1, 0, 3, 13, 8, 0, 0, 0, 0, 1, 1, 1]' : 0.18529}
{'[0, 0, 6, 6, 6, 0, 1, 0, 3, 13, 8, 0, 0, 0, 0, 1, 1, 1]' : 0.18529}
{'[0, 0, 6, 6, 6, 0, 1, 0, 3, 13, 8, 0, 0, 0, 0, 1, 1, 1]' : 0.185064}
{'[0, 0, 6, 6, 6, 0, 1, 0, 3, 13, 8, 0, 0, 0, 0, 1, 1, 1]' : 0.179309}
{'[0, 0, 6, 6, 6, 0, 1, 0, 3, 13, 8, 0, 0, 0, 0, 1, 1, 1]' : 0.18012}

out:
 ["{'[0, 0, 6, 6, 6, 0, 1, 0, 3, 13, 8, 0, 0, 0, 0, 1, 1, 1]' : 0.180018}", "{'[0, 0, 6, 6, 6, 0, 1, 0, 3, 13, 8, 0, 0, 0, 0, 1, 1, 1]' : 0.185107}", "{'[0, 0, 6, 6, 6, 0, 1, 0, 3, 13, 8, 0, 0, 0, 0, 1, 1, 1]' : 0.185121}", "{'[0, 0, 6, 6, 6, 0, 1, 0, 3, 13, 8, 0, 0, 0, 0, 1, 1, 1]' : 0.185201}", "{'[0, 0, 6, 6, 6, 0, 1, 0, 3, 13, 8, 0, 0, 0, 0, 1, 1, 1]' : 0.184553}", "{'[0, 0, 6, 6, 6, 0, 1, 0, 3, 13, 8, 0, 0, 0, 0, 1, 1, 1]' : 0.180202}", "{'[0, 0, 6, 6, 6, 0, 1, 0, 3, 13, 8, 0, 0, 0, 0, 1, 1, 1]' : 0.180989}", "{'[0, 0, 6, 6, 6, 0, 1, 0, 3, 13, 8, 0, 0, 0, 0, 1, 1, 1]' : 0.180316}", "{'[0, 0, 6, 6, 6, 0, 1, 0, 3, 13, 8, 0, 0, 0, 0, 1, 1, 1]' : 0.180145}", "{'[0, 0, 6, 6, 6, 0, 1, 0, 3, 13, 8, 0, 0, 0, 0, 1, 1, 1]' : 0.180345}", "{'[0, 0, 6, 6, 6, 0, 1, 0, 3, 13, 8, 0, 0, 0, 0, 1, 1, 1]' : 0.181753}", "{'[0, 0, 6, 6, 6, 0, 1, 0, 3, 13, 8, 0, 0, 0, 0, 1, 1, 1]' : 0.184321}", "{'[0, 0, 6, 6, 6, 0, 1, 0, 3, 13, 8, 0, 0, 0, 0, 1, 1, 1]' : 0.185151}", "{'[0, 0, 6, 6, 6, 0, 1, 0, 3, 13, 8, 0, 0, 0, 0, 1, 1, 1]' : 0.185131}", "{'[0, 0, 6, 6, 6, 0, 1, 0, 3, 13, 8, 0, 0, 0, 0, 1, 1, 1]' : 0.180927}", "{'[0, 0, 6, 6, 6, 0, 1, 0, 3, 13, 8, 0, 0, 0, 0, 1, 1, 1]' : 0.180163}", "{'[0, 0, 6, 6, 6, 0, 1, 0, 3, 13, 8, 0, 0, 0, 0, 1, 1, 1]' : 0.18029}", "{'[0, 0, 6, 6, 6, 0, 1, 0, 3, 13, 8, 0, 0, 0, 0, 1, 1, 1]' : 0.179562}", "{'[0, 0, 6, 6, 6, 0, 1, 0, 3, 13, 8, 0, 0, 0, 0, 1, 1, 1]' : 0.180315}", "{'[0, 0, 6, 6, 6, 0, 1, 0, 3, 13, 8, 0, 0, 0, 0, 1, 1, 1]' : 0.180289}", "{'[0, 0, 6, 6, 6, 0, 1, 0, 3, 13, 8, 0, 0, 0, 0, 1, 1, 1]' : 0.18461}", "{'[0, 0, 6, 6, 6, 0, 1, 0, 3, 13, 8, 0, 0, 0, 0, 1, 1, 1]' : 0.185168}", "{'[0, 0, 6, 6, 6, 0, 1, 0, 3, 13, 8, 0, 0, 0, 0, 1, 1, 1]' : 0.182224}", "{'[0, 0, 6, 6, 6, 0, 1, 0, 3, 13, 8, 0, 0, 0, 0, 1, 1, 1]' : 0.18511}", "{'[0, 0, 6, 6, 6, 0, 1, 0, 3, 13, 8, 0, 0, 0, 0, 1, 1, 1]' : 0.185116}", "{'[0, 0, 6, 6, 6, 0, 1, 0, 3, 13, 8, 0, 0, 0, 0, 1, 1, 1]' : 0.18529}", "{'[0, 0, 6, 6, 6, 0, 1, 0, 3, 13, 8, 0, 0, 0, 0, 1, 1, 1]' : 0.18529}", "{'[0, 0, 6, 6, 6, 0, 1, 0, 3, 13, 8, 0, 0, 0, 0, 1, 1, 1]' : 0.185064}", "{'[0, 0, 6, 6, 6, 0, 1, 0, 3, 13, 8, 0, 0, 0, 0, 1, 1, 1]' : 0.179309}", "{'[0, 0, 6, 6, 6, 0, 1, 0, 3, 13, 8, 0, 0, 0, 0, 1, 1, 1]' : 0.18012}"]
returning from 'run': {'[0, 0, 6, 6, 6, 0, 1, 0, 3, 13, 8, 0, 0, 0, 0, 1, 1, 1]': ([0.180018, 0.185107, 0.185121, 0.185201, 0.184553, 0.180202, 0.180989, 0.180316, 0.180145, 0.180345, 0.181753, 0.184321, 0.185151, 0.185131, 0.180927, 0.180163, 0.18029, 0.179562, 0.180315, 0.180289, 0.18461, 0.185168, 0.182224, 0.18511, 0.185116, 0.18529, 0.18529, 0.185064, 0.179309, 0.18012], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 6, 6, 6, 0, 1, 0, 3, 13, 8, 0, 0, 0, 0, 1, 1, 1]': ([0.180018, 0.185107, 0.185121, 0.185201, 0.184553, 0.180202, 0.180989, 0.180316, 0.180145, 0.180345, 0.181753, 0.184321, 0.185151, 0.185131, 0.180927, 0.180163, 0.18029, 0.179562, 0.180315, 0.180289, 0.18461, 0.185168, 0.182224, 0.18511, 0.185116, 0.18529, 0.18529, 0.185064, 0.179309, 0.18012], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	5
        Additions: 		849
        Multiplications: 	264
        Divisions: 		0
        Logical: 		0
        Reads: 			1594
        Writes: 		190
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest57.exe __orio_perftest57.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest57.exe  
Program Test Output: 
{'[0, 4, 0, 4, 6, 5, 1, 0, 3, 0, 1, 0, 2, 0, 0, 0, 1, 1]' : 0.200641}
{'[0, 4, 0, 4, 6, 5, 1, 0, 3, 0, 1, 0, 2, 0, 0, 0, 1, 1]' : 0.201902}
{'[0, 4, 0, 4, 6, 5, 1, 0, 3, 0, 1, 0, 2, 0, 0, 0, 1, 1]' : 0.20169}
{'[0, 4, 0, 4, 6, 5, 1, 0, 3, 0, 1, 0, 2, 0, 0, 0, 1, 1]' : 0.202615}
{'[0, 4, 0, 4, 6, 5, 1, 0, 3, 0, 1, 0, 2, 0, 0, 0, 1, 1]' : 0.203325}
{'[0, 4, 0, 4, 6, 5, 1, 0, 3, 0, 1, 0, 2, 0, 0, 0, 1, 1]' : 0.204272}
{'[0, 4, 0, 4, 6, 5, 1, 0, 3, 0, 1, 0, 2, 0, 0, 0, 1, 1]' : 0.204692}
{'[0, 4, 0, 4, 6, 5, 1, 0, 3, 0, 1, 0, 2, 0, 0, 0, 1, 1]' : 0.2043}
{'[0, 4, 0, 4, 6, 5, 1, 0, 3, 0, 1, 0, 2, 0, 0, 0, 1, 1]' : 0.204288}
{'[0, 4, 0, 4, 6, 5, 1, 0, 3, 0, 1, 0, 2, 0, 0, 0, 1, 1]' : 0.205005}
{'[0, 4, 0, 4, 6, 5, 1, 0, 3, 0, 1, 0, 2, 0, 0, 0, 1, 1]' : 0.204587}
{'[0, 4, 0, 4, 6, 5, 1, 0, 3, 0, 1, 0, 2, 0, 0, 0, 1, 1]' : 0.203484}
{'[0, 4, 0, 4, 6, 5, 1, 0, 3, 0, 1, 0, 2, 0, 0, 0, 1, 1]' : 0.203527}
{'[0, 4, 0, 4, 6, 5, 1, 0, 3, 0, 1, 0, 2, 0, 0, 0, 1, 1]' : 0.204576}
{'[0, 4, 0, 4, 6, 5, 1, 0, 3, 0, 1, 0, 2, 0, 0, 0, 1, 1]' : 0.20485}
{'[0, 4, 0, 4, 6, 5, 1, 0, 3, 0, 1, 0, 2, 0, 0, 0, 1, 1]' : 0.204055}
{'[0, 4, 0, 4, 6, 5, 1, 0, 3, 0, 1, 0, 2, 0, 0, 0, 1, 1]' : 0.20414}
{'[0, 4, 0, 4, 6, 5, 1, 0, 3, 0, 1, 0, 2, 0, 0, 0, 1, 1]' : 0.205084}
{'[0, 4, 0, 4, 6, 5, 1, 0, 3, 0, 1, 0, 2, 0, 0, 0, 1, 1]' : 0.203985}
{'[0, 4, 0, 4, 6, 5, 1, 0, 3, 0, 1, 0, 2, 0, 0, 0, 1, 1]' : 0.203593}
{'[0, 4, 0, 4, 6, 5, 1, 0, 3, 0, 1, 0, 2, 0, 0, 0, 1, 1]' : 0.203816}
{'[0, 4, 0, 4, 6, 5, 1, 0, 3, 0, 1, 0, 2, 0, 0, 0, 1, 1]' : 0.201215}
{'[0, 4, 0, 4, 6, 5, 1, 0, 3, 0, 1, 0, 2, 0, 0, 0, 1, 1]' : 0.201883}
{'[0, 4, 0, 4, 6, 5, 1, 0, 3, 0, 1, 0, 2, 0, 0, 0, 1, 1]' : 0.205267}
{'[0, 4, 0, 4, 6, 5, 1, 0, 3, 0, 1, 0, 2, 0, 0, 0, 1, 1]' : 0.202604}
{'[0, 4, 0, 4, 6, 5, 1, 0, 3, 0, 1, 0, 2, 0, 0, 0, 1, 1]' : 0.200666}
{'[0, 4, 0, 4, 6, 5, 1, 0, 3, 0, 1, 0, 2, 0, 0, 0, 1, 1]' : 0.201144}
{'[0, 4, 0, 4, 6, 5, 1, 0, 3, 0, 1, 0, 2, 0, 0, 0, 1, 1]' : 0.201191}
{'[0, 4, 0, 4, 6, 5, 1, 0, 3, 0, 1, 0, 2, 0, 0, 0, 1, 1]' : 0.205159}
{'[0, 4, 0, 4, 6, 5, 1, 0, 3, 0, 1, 0, 2, 0, 0, 0, 1, 1]' : 0.205024}

out:
 ["{'[0, 4, 0, 4, 6, 5, 1, 0, 3, 0, 1, 0, 2, 0, 0, 0, 1, 1]' : 0.200641}", "{'[0, 4, 0, 4, 6, 5, 1, 0, 3, 0, 1, 0, 2, 0, 0, 0, 1, 1]' : 0.201902}", "{'[0, 4, 0, 4, 6, 5, 1, 0, 3, 0, 1, 0, 2, 0, 0, 0, 1, 1]' : 0.20169}", "{'[0, 4, 0, 4, 6, 5, 1, 0, 3, 0, 1, 0, 2, 0, 0, 0, 1, 1]' : 0.202615}", "{'[0, 4, 0, 4, 6, 5, 1, 0, 3, 0, 1, 0, 2, 0, 0, 0, 1, 1]' : 0.203325}", "{'[0, 4, 0, 4, 6, 5, 1, 0, 3, 0, 1, 0, 2, 0, 0, 0, 1, 1]' : 0.204272}", "{'[0, 4, 0, 4, 6, 5, 1, 0, 3, 0, 1, 0, 2, 0, 0, 0, 1, 1]' : 0.204692}", "{'[0, 4, 0, 4, 6, 5, 1, 0, 3, 0, 1, 0, 2, 0, 0, 0, 1, 1]' : 0.2043}", "{'[0, 4, 0, 4, 6, 5, 1, 0, 3, 0, 1, 0, 2, 0, 0, 0, 1, 1]' : 0.204288}", "{'[0, 4, 0, 4, 6, 5, 1, 0, 3, 0, 1, 0, 2, 0, 0, 0, 1, 1]' : 0.205005}", "{'[0, 4, 0, 4, 6, 5, 1, 0, 3, 0, 1, 0, 2, 0, 0, 0, 1, 1]' : 0.204587}", "{'[0, 4, 0, 4, 6, 5, 1, 0, 3, 0, 1, 0, 2, 0, 0, 0, 1, 1]' : 0.203484}", "{'[0, 4, 0, 4, 6, 5, 1, 0, 3, 0, 1, 0, 2, 0, 0, 0, 1, 1]' : 0.203527}", "{'[0, 4, 0, 4, 6, 5, 1, 0, 3, 0, 1, 0, 2, 0, 0, 0, 1, 1]' : 0.204576}", "{'[0, 4, 0, 4, 6, 5, 1, 0, 3, 0, 1, 0, 2, 0, 0, 0, 1, 1]' : 0.20485}", "{'[0, 4, 0, 4, 6, 5, 1, 0, 3, 0, 1, 0, 2, 0, 0, 0, 1, 1]' : 0.204055}", "{'[0, 4, 0, 4, 6, 5, 1, 0, 3, 0, 1, 0, 2, 0, 0, 0, 1, 1]' : 0.20414}", "{'[0, 4, 0, 4, 6, 5, 1, 0, 3, 0, 1, 0, 2, 0, 0, 0, 1, 1]' : 0.205084}", "{'[0, 4, 0, 4, 6, 5, 1, 0, 3, 0, 1, 0, 2, 0, 0, 0, 1, 1]' : 0.203985}", "{'[0, 4, 0, 4, 6, 5, 1, 0, 3, 0, 1, 0, 2, 0, 0, 0, 1, 1]' : 0.203593}", "{'[0, 4, 0, 4, 6, 5, 1, 0, 3, 0, 1, 0, 2, 0, 0, 0, 1, 1]' : 0.203816}", "{'[0, 4, 0, 4, 6, 5, 1, 0, 3, 0, 1, 0, 2, 0, 0, 0, 1, 1]' : 0.201215}", "{'[0, 4, 0, 4, 6, 5, 1, 0, 3, 0, 1, 0, 2, 0, 0, 0, 1, 1]' : 0.201883}", "{'[0, 4, 0, 4, 6, 5, 1, 0, 3, 0, 1, 0, 2, 0, 0, 0, 1, 1]' : 0.205267}", "{'[0, 4, 0, 4, 6, 5, 1, 0, 3, 0, 1, 0, 2, 0, 0, 0, 1, 1]' : 0.202604}", "{'[0, 4, 0, 4, 6, 5, 1, 0, 3, 0, 1, 0, 2, 0, 0, 0, 1, 1]' : 0.200666}", "{'[0, 4, 0, 4, 6, 5, 1, 0, 3, 0, 1, 0, 2, 0, 0, 0, 1, 1]' : 0.201144}", "{'[0, 4, 0, 4, 6, 5, 1, 0, 3, 0, 1, 0, 2, 0, 0, 0, 1, 1]' : 0.201191}", "{'[0, 4, 0, 4, 6, 5, 1, 0, 3, 0, 1, 0, 2, 0, 0, 0, 1, 1]' : 0.205159}", "{'[0, 4, 0, 4, 6, 5, 1, 0, 3, 0, 1, 0, 2, 0, 0, 0, 1, 1]' : 0.205024}"]
returning from 'run': {'[0, 4, 0, 4, 6, 5, 1, 0, 3, 0, 1, 0, 2, 0, 0, 0, 1, 1]': ([0.200641, 0.201902, 0.20169, 0.202615, 0.203325, 0.204272, 0.204692, 0.2043, 0.204288, 0.205005, 0.204587, 0.203484, 0.203527, 0.204576, 0.20485, 0.204055, 0.20414, 0.205084, 0.203985, 0.203593, 0.203816, 0.201215, 0.201883, 0.205267, 0.202604, 0.200666, 0.201144, 0.201191, 0.205159, 0.205024], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 4, 0, 4, 6, 5, 1, 0, 3, 0, 1, 0, 2, 0, 0, 0, 1, 1]': ([0.200641, 0.201902, 0.20169, 0.202615, 0.203325, 0.204272, 0.204692, 0.2043, 0.204288, 0.205005, 0.204587, 0.203484, 0.203527, 0.204576, 0.20485, 0.204055, 0.20414, 0.205084, 0.203985, 0.203593, 0.203816, 0.201215, 0.201883, 0.205267, 0.202604, 0.200666, 0.201144, 0.201191, 0.205159, 0.205024], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	46
        Max loop nest depth: 	4
        Additions: 		4260
        Multiplications: 	1178
        Divisions: 		0
        Logical: 		0
        Reads: 			6709
        Writes: 		759
        Comparisons:		46
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest58.exe __orio_perftest58.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest58.exe  
Program Test Output: 
{'[0, 0, 2, 2, 6, 0, 1, 0, 3, 29, 0, 9, 0, 1, 0, 0, 1, 1]' : 0.211276}
{'[0, 0, 2, 2, 6, 0, 1, 0, 3, 29, 0, 9, 0, 1, 0, 0, 1, 1]' : 0.212563}
{'[0, 0, 2, 2, 6, 0, 1, 0, 3, 29, 0, 9, 0, 1, 0, 0, 1, 1]' : 0.193889}
{'[0, 0, 2, 2, 6, 0, 1, 0, 3, 29, 0, 9, 0, 1, 0, 0, 1, 1]' : 0.192975}
{'[0, 0, 2, 2, 6, 0, 1, 0, 3, 29, 0, 9, 0, 1, 0, 0, 1, 1]' : 0.19498}
{'[0, 0, 2, 2, 6, 0, 1, 0, 3, 29, 0, 9, 0, 1, 0, 0, 1, 1]' : 0.194707}
{'[0, 0, 2, 2, 6, 0, 1, 0, 3, 29, 0, 9, 0, 1, 0, 0, 1, 1]' : 0.192554}
{'[0, 0, 2, 2, 6, 0, 1, 0, 3, 29, 0, 9, 0, 1, 0, 0, 1, 1]' : 0.191697}
{'[0, 0, 2, 2, 6, 0, 1, 0, 3, 29, 0, 9, 0, 1, 0, 0, 1, 1]' : 0.191642}
{'[0, 0, 2, 2, 6, 0, 1, 0, 3, 29, 0, 9, 0, 1, 0, 0, 1, 1]' : 0.192234}
{'[0, 0, 2, 2, 6, 0, 1, 0, 3, 29, 0, 9, 0, 1, 0, 0, 1, 1]' : 0.192862}
{'[0, 0, 2, 2, 6, 0, 1, 0, 3, 29, 0, 9, 0, 1, 0, 0, 1, 1]' : 0.192859}
{'[0, 0, 2, 2, 6, 0, 1, 0, 3, 29, 0, 9, 0, 1, 0, 0, 1, 1]' : 0.191718}
{'[0, 0, 2, 2, 6, 0, 1, 0, 3, 29, 0, 9, 0, 1, 0, 0, 1, 1]' : 0.191992}
{'[0, 0, 2, 2, 6, 0, 1, 0, 3, 29, 0, 9, 0, 1, 0, 0, 1, 1]' : 0.1918}
{'[0, 0, 2, 2, 6, 0, 1, 0, 3, 29, 0, 9, 0, 1, 0, 0, 1, 1]' : 0.191218}
{'[0, 0, 2, 2, 6, 0, 1, 0, 3, 29, 0, 9, 0, 1, 0, 0, 1, 1]' : 0.193346}
{'[0, 0, 2, 2, 6, 0, 1, 0, 3, 29, 0, 9, 0, 1, 0, 0, 1, 1]' : 0.191849}
{'[0, 0, 2, 2, 6, 0, 1, 0, 3, 29, 0, 9, 0, 1, 0, 0, 1, 1]' : 0.194263}
{'[0, 0, 2, 2, 6, 0, 1, 0, 3, 29, 0, 9, 0, 1, 0, 0, 1, 1]' : 0.191289}
{'[0, 0, 2, 2, 6, 0, 1, 0, 3, 29, 0, 9, 0, 1, 0, 0, 1, 1]' : 0.191924}
{'[0, 0, 2, 2, 6, 0, 1, 0, 3, 29, 0, 9, 0, 1, 0, 0, 1, 1]' : 0.191982}
{'[0, 0, 2, 2, 6, 0, 1, 0, 3, 29, 0, 9, 0, 1, 0, 0, 1, 1]' : 0.192379}
{'[0, 0, 2, 2, 6, 0, 1, 0, 3, 29, 0, 9, 0, 1, 0, 0, 1, 1]' : 0.191484}
{'[0, 0, 2, 2, 6, 0, 1, 0, 3, 29, 0, 9, 0, 1, 0, 0, 1, 1]' : 0.192298}
{'[0, 0, 2, 2, 6, 0, 1, 0, 3, 29, 0, 9, 0, 1, 0, 0, 1, 1]' : 0.191901}
{'[0, 0, 2, 2, 6, 0, 1, 0, 3, 29, 0, 9, 0, 1, 0, 0, 1, 1]' : 0.191761}
{'[0, 0, 2, 2, 6, 0, 1, 0, 3, 29, 0, 9, 0, 1, 0, 0, 1, 1]' : 0.192137}
{'[0, 0, 2, 2, 6, 0, 1, 0, 3, 29, 0, 9, 0, 1, 0, 0, 1, 1]' : 0.192584}
{'[0, 0, 2, 2, 6, 0, 1, 0, 3, 29, 0, 9, 0, 1, 0, 0, 1, 1]' : 0.191867}

out:
 ["{'[0, 0, 2, 2, 6, 0, 1, 0, 3, 29, 0, 9, 0, 1, 0, 0, 1, 1]' : 0.211276}", "{'[0, 0, 2, 2, 6, 0, 1, 0, 3, 29, 0, 9, 0, 1, 0, 0, 1, 1]' : 0.212563}", "{'[0, 0, 2, 2, 6, 0, 1, 0, 3, 29, 0, 9, 0, 1, 0, 0, 1, 1]' : 0.193889}", "{'[0, 0, 2, 2, 6, 0, 1, 0, 3, 29, 0, 9, 0, 1, 0, 0, 1, 1]' : 0.192975}", "{'[0, 0, 2, 2, 6, 0, 1, 0, 3, 29, 0, 9, 0, 1, 0, 0, 1, 1]' : 0.19498}", "{'[0, 0, 2, 2, 6, 0, 1, 0, 3, 29, 0, 9, 0, 1, 0, 0, 1, 1]' : 0.194707}", "{'[0, 0, 2, 2, 6, 0, 1, 0, 3, 29, 0, 9, 0, 1, 0, 0, 1, 1]' : 0.192554}", "{'[0, 0, 2, 2, 6, 0, 1, 0, 3, 29, 0, 9, 0, 1, 0, 0, 1, 1]' : 0.191697}", "{'[0, 0, 2, 2, 6, 0, 1, 0, 3, 29, 0, 9, 0, 1, 0, 0, 1, 1]' : 0.191642}", "{'[0, 0, 2, 2, 6, 0, 1, 0, 3, 29, 0, 9, 0, 1, 0, 0, 1, 1]' : 0.192234}", "{'[0, 0, 2, 2, 6, 0, 1, 0, 3, 29, 0, 9, 0, 1, 0, 0, 1, 1]' : 0.192862}", "{'[0, 0, 2, 2, 6, 0, 1, 0, 3, 29, 0, 9, 0, 1, 0, 0, 1, 1]' : 0.192859}", "{'[0, 0, 2, 2, 6, 0, 1, 0, 3, 29, 0, 9, 0, 1, 0, 0, 1, 1]' : 0.191718}", "{'[0, 0, 2, 2, 6, 0, 1, 0, 3, 29, 0, 9, 0, 1, 0, 0, 1, 1]' : 0.191992}", "{'[0, 0, 2, 2, 6, 0, 1, 0, 3, 29, 0, 9, 0, 1, 0, 0, 1, 1]' : 0.1918}", "{'[0, 0, 2, 2, 6, 0, 1, 0, 3, 29, 0, 9, 0, 1, 0, 0, 1, 1]' : 0.191218}", "{'[0, 0, 2, 2, 6, 0, 1, 0, 3, 29, 0, 9, 0, 1, 0, 0, 1, 1]' : 0.193346}", "{'[0, 0, 2, 2, 6, 0, 1, 0, 3, 29, 0, 9, 0, 1, 0, 0, 1, 1]' : 0.191849}", "{'[0, 0, 2, 2, 6, 0, 1, 0, 3, 29, 0, 9, 0, 1, 0, 0, 1, 1]' : 0.194263}", "{'[0, 0, 2, 2, 6, 0, 1, 0, 3, 29, 0, 9, 0, 1, 0, 0, 1, 1]' : 0.191289}", "{'[0, 0, 2, 2, 6, 0, 1, 0, 3, 29, 0, 9, 0, 1, 0, 0, 1, 1]' : 0.191924}", "{'[0, 0, 2, 2, 6, 0, 1, 0, 3, 29, 0, 9, 0, 1, 0, 0, 1, 1]' : 0.191982}", "{'[0, 0, 2, 2, 6, 0, 1, 0, 3, 29, 0, 9, 0, 1, 0, 0, 1, 1]' : 0.192379}", "{'[0, 0, 2, 2, 6, 0, 1, 0, 3, 29, 0, 9, 0, 1, 0, 0, 1, 1]' : 0.191484}", "{'[0, 0, 2, 2, 6, 0, 1, 0, 3, 29, 0, 9, 0, 1, 0, 0, 1, 1]' : 0.192298}", "{'[0, 0, 2, 2, 6, 0, 1, 0, 3, 29, 0, 9, 0, 1, 0, 0, 1, 1]' : 0.191901}", "{'[0, 0, 2, 2, 6, 0, 1, 0, 3, 29, 0, 9, 0, 1, 0, 0, 1, 1]' : 0.191761}", "{'[0, 0, 2, 2, 6, 0, 1, 0, 3, 29, 0, 9, 0, 1, 0, 0, 1, 1]' : 0.192137}", "{'[0, 0, 2, 2, 6, 0, 1, 0, 3, 29, 0, 9, 0, 1, 0, 0, 1, 1]' : 0.192584}", "{'[0, 0, 2, 2, 6, 0, 1, 0, 3, 29, 0, 9, 0, 1, 0, 0, 1, 1]' : 0.191867}"]
returning from 'run': {'[0, 0, 2, 2, 6, 0, 1, 0, 3, 29, 0, 9, 0, 1, 0, 0, 1, 1]': ([0.211276, 0.212563, 0.193889, 0.192975, 0.19498, 0.194707, 0.192554, 0.191697, 0.191642, 0.192234, 0.192862, 0.192859, 0.191718, 0.191992, 0.1918, 0.191218, 0.193346, 0.191849, 0.194263, 0.191289, 0.191924, 0.191982, 0.192379, 0.191484, 0.192298, 0.191901, 0.191761, 0.192137, 0.192584, 0.191867], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 2, 2, 6, 0, 1, 0, 3, 29, 0, 9, 0, 1, 0, 0, 1, 1]': ([0.211276, 0.212563, 0.193889, 0.192975, 0.19498, 0.194707, 0.192554, 0.191697, 0.191642, 0.192234, 0.192862, 0.192859, 0.191718, 0.191992, 0.1918, 0.191218, 0.193346, 0.191849, 0.194263, 0.191289, 0.191924, 0.191982, 0.192379, 0.191484, 0.192298, 0.191901, 0.191761, 0.192137, 0.192584, 0.191867], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	42
        Max loop nest depth: 	5
        Additions: 		857
        Multiplications: 	350
        Divisions: 		0
        Logical: 		0
        Reads: 			1935
        Writes: 		403
        Comparisons:		42
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest59.exe __orio_perftest59.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest59.exe  
Program Test Output: 
{'[0, 5, 0, 6, 6, 1, 1, 0, 3, 15, 0, 4, 1, 0, 0, 1, 1, 1]' : 0.110426}
{'[0, 5, 0, 6, 6, 1, 1, 0, 3, 15, 0, 4, 1, 0, 0, 1, 1, 1]' : 0.110258}
{'[0, 5, 0, 6, 6, 1, 1, 0, 3, 15, 0, 4, 1, 0, 0, 1, 1, 1]' : 0.110307}
{'[0, 5, 0, 6, 6, 1, 1, 0, 3, 15, 0, 4, 1, 0, 0, 1, 1, 1]' : 0.10707}
{'[0, 5, 0, 6, 6, 1, 1, 0, 3, 15, 0, 4, 1, 0, 0, 1, 1, 1]' : 0.0966952}
{'[0, 5, 0, 6, 6, 1, 1, 0, 3, 15, 0, 4, 1, 0, 0, 1, 1, 1]' : 0.0965531}
{'[0, 5, 0, 6, 6, 1, 1, 0, 3, 15, 0, 4, 1, 0, 0, 1, 1, 1]' : 0.0968921}
{'[0, 5, 0, 6, 6, 1, 1, 0, 3, 15, 0, 4, 1, 0, 0, 1, 1, 1]' : 0.0964899}
{'[0, 5, 0, 6, 6, 1, 1, 0, 3, 15, 0, 4, 1, 0, 0, 1, 1, 1]' : 0.0964551}
{'[0, 5, 0, 6, 6, 1, 1, 0, 3, 15, 0, 4, 1, 0, 0, 1, 1, 1]' : 0.096472}
{'[0, 5, 0, 6, 6, 1, 1, 0, 3, 15, 0, 4, 1, 0, 0, 1, 1, 1]' : 0.0964859}
{'[0, 5, 0, 6, 6, 1, 1, 0, 3, 15, 0, 4, 1, 0, 0, 1, 1, 1]' : 0.0965021}
{'[0, 5, 0, 6, 6, 1, 1, 0, 3, 15, 0, 4, 1, 0, 0, 1, 1, 1]' : 0.0965021}
{'[0, 5, 0, 6, 6, 1, 1, 0, 3, 15, 0, 4, 1, 0, 0, 1, 1, 1]' : 0.096513}
{'[0, 5, 0, 6, 6, 1, 1, 0, 3, 15, 0, 4, 1, 0, 0, 1, 1, 1]' : 0.096487}
{'[0, 5, 0, 6, 6, 1, 1, 0, 3, 15, 0, 4, 1, 0, 0, 1, 1, 1]' : 0.0966148}
{'[0, 5, 0, 6, 6, 1, 1, 0, 3, 15, 0, 4, 1, 0, 0, 1, 1, 1]' : 0.096482}
{'[0, 5, 0, 6, 6, 1, 1, 0, 3, 15, 0, 4, 1, 0, 0, 1, 1, 1]' : 0.0968959}
{'[0, 5, 0, 6, 6, 1, 1, 0, 3, 15, 0, 4, 1, 0, 0, 1, 1, 1]' : 0.0966401}
{'[0, 5, 0, 6, 6, 1, 1, 0, 3, 15, 0, 4, 1, 0, 0, 1, 1, 1]' : 0.096482}
{'[0, 5, 0, 6, 6, 1, 1, 0, 3, 15, 0, 4, 1, 0, 0, 1, 1, 1]' : 0.0966671}
{'[0, 5, 0, 6, 6, 1, 1, 0, 3, 15, 0, 4, 1, 0, 0, 1, 1, 1]' : 0.0964129}
{'[0, 5, 0, 6, 6, 1, 1, 0, 3, 15, 0, 4, 1, 0, 0, 1, 1, 1]' : 0.096498}
{'[0, 5, 0, 6, 6, 1, 1, 0, 3, 15, 0, 4, 1, 0, 0, 1, 1, 1]' : 0.0967441}
{'[0, 5, 0, 6, 6, 1, 1, 0, 3, 15, 0, 4, 1, 0, 0, 1, 1, 1]' : 0.0967052}
{'[0, 5, 0, 6, 6, 1, 1, 0, 3, 15, 0, 4, 1, 0, 0, 1, 1, 1]' : 0.096488}
{'[0, 5, 0, 6, 6, 1, 1, 0, 3, 15, 0, 4, 1, 0, 0, 1, 1, 1]' : 0.096868}
{'[0, 5, 0, 6, 6, 1, 1, 0, 3, 15, 0, 4, 1, 0, 0, 1, 1, 1]' : 0.097136}
{'[0, 5, 0, 6, 6, 1, 1, 0, 3, 15, 0, 4, 1, 0, 0, 1, 1, 1]' : 0.0968521}
{'[0, 5, 0, 6, 6, 1, 1, 0, 3, 15, 0, 4, 1, 0, 0, 1, 1, 1]' : 0.0968471}

out:
 ["{'[0, 5, 0, 6, 6, 1, 1, 0, 3, 15, 0, 4, 1, 0, 0, 1, 1, 1]' : 0.110426}", "{'[0, 5, 0, 6, 6, 1, 1, 0, 3, 15, 0, 4, 1, 0, 0, 1, 1, 1]' : 0.110258}", "{'[0, 5, 0, 6, 6, 1, 1, 0, 3, 15, 0, 4, 1, 0, 0, 1, 1, 1]' : 0.110307}", "{'[0, 5, 0, 6, 6, 1, 1, 0, 3, 15, 0, 4, 1, 0, 0, 1, 1, 1]' : 0.10707}", "{'[0, 5, 0, 6, 6, 1, 1, 0, 3, 15, 0, 4, 1, 0, 0, 1, 1, 1]' : 0.0966952}", "{'[0, 5, 0, 6, 6, 1, 1, 0, 3, 15, 0, 4, 1, 0, 0, 1, 1, 1]' : 0.0965531}", "{'[0, 5, 0, 6, 6, 1, 1, 0, 3, 15, 0, 4, 1, 0, 0, 1, 1, 1]' : 0.0968921}", "{'[0, 5, 0, 6, 6, 1, 1, 0, 3, 15, 0, 4, 1, 0, 0, 1, 1, 1]' : 0.0964899}", "{'[0, 5, 0, 6, 6, 1, 1, 0, 3, 15, 0, 4, 1, 0, 0, 1, 1, 1]' : 0.0964551}", "{'[0, 5, 0, 6, 6, 1, 1, 0, 3, 15, 0, 4, 1, 0, 0, 1, 1, 1]' : 0.096472}", "{'[0, 5, 0, 6, 6, 1, 1, 0, 3, 15, 0, 4, 1, 0, 0, 1, 1, 1]' : 0.0964859}", "{'[0, 5, 0, 6, 6, 1, 1, 0, 3, 15, 0, 4, 1, 0, 0, 1, 1, 1]' : 0.0965021}", "{'[0, 5, 0, 6, 6, 1, 1, 0, 3, 15, 0, 4, 1, 0, 0, 1, 1, 1]' : 0.0965021}", "{'[0, 5, 0, 6, 6, 1, 1, 0, 3, 15, 0, 4, 1, 0, 0, 1, 1, 1]' : 0.096513}", "{'[0, 5, 0, 6, 6, 1, 1, 0, 3, 15, 0, 4, 1, 0, 0, 1, 1, 1]' : 0.096487}", "{'[0, 5, 0, 6, 6, 1, 1, 0, 3, 15, 0, 4, 1, 0, 0, 1, 1, 1]' : 0.0966148}", "{'[0, 5, 0, 6, 6, 1, 1, 0, 3, 15, 0, 4, 1, 0, 0, 1, 1, 1]' : 0.096482}", "{'[0, 5, 0, 6, 6, 1, 1, 0, 3, 15, 0, 4, 1, 0, 0, 1, 1, 1]' : 0.0968959}", "{'[0, 5, 0, 6, 6, 1, 1, 0, 3, 15, 0, 4, 1, 0, 0, 1, 1, 1]' : 0.0966401}", "{'[0, 5, 0, 6, 6, 1, 1, 0, 3, 15, 0, 4, 1, 0, 0, 1, 1, 1]' : 0.096482}", "{'[0, 5, 0, 6, 6, 1, 1, 0, 3, 15, 0, 4, 1, 0, 0, 1, 1, 1]' : 0.0966671}", "{'[0, 5, 0, 6, 6, 1, 1, 0, 3, 15, 0, 4, 1, 0, 0, 1, 1, 1]' : 0.0964129}", "{'[0, 5, 0, 6, 6, 1, 1, 0, 3, 15, 0, 4, 1, 0, 0, 1, 1, 1]' : 0.096498}", "{'[0, 5, 0, 6, 6, 1, 1, 0, 3, 15, 0, 4, 1, 0, 0, 1, 1, 1]' : 0.0967441}", "{'[0, 5, 0, 6, 6, 1, 1, 0, 3, 15, 0, 4, 1, 0, 0, 1, 1, 1]' : 0.0967052}", "{'[0, 5, 0, 6, 6, 1, 1, 0, 3, 15, 0, 4, 1, 0, 0, 1, 1, 1]' : 0.096488}", "{'[0, 5, 0, 6, 6, 1, 1, 0, 3, 15, 0, 4, 1, 0, 0, 1, 1, 1]' : 0.096868}", "{'[0, 5, 0, 6, 6, 1, 1, 0, 3, 15, 0, 4, 1, 0, 0, 1, 1, 1]' : 0.097136}", "{'[0, 5, 0, 6, 6, 1, 1, 0, 3, 15, 0, 4, 1, 0, 0, 1, 1, 1]' : 0.0968521}", "{'[0, 5, 0, 6, 6, 1, 1, 0, 3, 15, 0, 4, 1, 0, 0, 1, 1, 1]' : 0.0968471}"]
returning from 'run': {'[0, 5, 0, 6, 6, 1, 1, 0, 3, 15, 0, 4, 1, 0, 0, 1, 1, 1]': ([0.110426, 0.110258, 0.110307, 0.10707, 0.0966952, 0.0965531, 0.0968921, 0.0964899, 0.0964551, 0.096472, 0.0964859, 0.0965021, 0.0965021, 0.096513, 0.096487, 0.0966148, 0.096482, 0.0968959, 0.0966401, 0.096482, 0.0966671, 0.0964129, 0.096498, 0.0967441, 0.0967052, 0.096488, 0.096868, 0.097136, 0.0968521, 0.0968471], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 5, 0, 6, 6, 1, 1, 0, 3, 15, 0, 4, 1, 0, 0, 1, 1, 1]': ([0.110426, 0.110258, 0.110307, 0.10707, 0.0966952, 0.0965531, 0.0968921, 0.0964899, 0.0964551, 0.096472, 0.0964859, 0.0965021, 0.0965021, 0.096513, 0.096487, 0.0966148, 0.096482, 0.0968959, 0.0966401, 0.096482, 0.0966671, 0.0964129, 0.096498, 0.0967441, 0.0967052, 0.096488, 0.096868, 0.097136, 0.0968521, 0.0968471], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	39
        Max loop nest depth: 	5
        Additions: 		8224
        Multiplications: 	2146
        Divisions: 		0
        Logical: 		0
        Reads: 			12109
        Writes: 		1171
        Comparisons:		39
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest60.exe __orio_perftest60.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest60.exe  
Program Test Output: 
{'[0, 6, 4, 1, 6, 3, 1, 0, 3, 3, 26, 0, 2, 0, 0, 0, 1, 0]' : 0.282009}
{'[0, 6, 4, 1, 6, 3, 1, 0, 3, 3, 26, 0, 2, 0, 0, 0, 1, 0]' : 0.256713}
{'[0, 6, 4, 1, 6, 3, 1, 0, 3, 3, 26, 0, 2, 0, 0, 0, 1, 0]' : 0.246009}
{'[0, 6, 4, 1, 6, 3, 1, 0, 3, 3, 26, 0, 2, 0, 0, 0, 1, 0]' : 0.242207}
{'[0, 6, 4, 1, 6, 3, 1, 0, 3, 3, 26, 0, 2, 0, 0, 0, 1, 0]' : 0.245233}
{'[0, 6, 4, 1, 6, 3, 1, 0, 3, 3, 26, 0, 2, 0, 0, 0, 1, 0]' : 0.244668}
{'[0, 6, 4, 1, 6, 3, 1, 0, 3, 3, 26, 0, 2, 0, 0, 0, 1, 0]' : 0.245936}
{'[0, 6, 4, 1, 6, 3, 1, 0, 3, 3, 26, 0, 2, 0, 0, 0, 1, 0]' : 0.243205}
{'[0, 6, 4, 1, 6, 3, 1, 0, 3, 3, 26, 0, 2, 0, 0, 0, 1, 0]' : 0.244213}
{'[0, 6, 4, 1, 6, 3, 1, 0, 3, 3, 26, 0, 2, 0, 0, 0, 1, 0]' : 0.24507}
{'[0, 6, 4, 1, 6, 3, 1, 0, 3, 3, 26, 0, 2, 0, 0, 0, 1, 0]' : 0.243138}
{'[0, 6, 4, 1, 6, 3, 1, 0, 3, 3, 26, 0, 2, 0, 0, 0, 1, 0]' : 0.244211}
{'[0, 6, 4, 1, 6, 3, 1, 0, 3, 3, 26, 0, 2, 0, 0, 0, 1, 0]' : 0.242618}
{'[0, 6, 4, 1, 6, 3, 1, 0, 3, 3, 26, 0, 2, 0, 0, 0, 1, 0]' : 0.247229}
{'[0, 6, 4, 1, 6, 3, 1, 0, 3, 3, 26, 0, 2, 0, 0, 0, 1, 0]' : 0.2437}
{'[0, 6, 4, 1, 6, 3, 1, 0, 3, 3, 26, 0, 2, 0, 0, 0, 1, 0]' : 0.24483}
{'[0, 6, 4, 1, 6, 3, 1, 0, 3, 3, 26, 0, 2, 0, 0, 0, 1, 0]' : 0.243131}
{'[0, 6, 4, 1, 6, 3, 1, 0, 3, 3, 26, 0, 2, 0, 0, 0, 1, 0]' : 0.244682}
{'[0, 6, 4, 1, 6, 3, 1, 0, 3, 3, 26, 0, 2, 0, 0, 0, 1, 0]' : 0.244848}
{'[0, 6, 4, 1, 6, 3, 1, 0, 3, 3, 26, 0, 2, 0, 0, 0, 1, 0]' : 0.242367}
{'[0, 6, 4, 1, 6, 3, 1, 0, 3, 3, 26, 0, 2, 0, 0, 0, 1, 0]' : 0.244417}
{'[0, 6, 4, 1, 6, 3, 1, 0, 3, 3, 26, 0, 2, 0, 0, 0, 1, 0]' : 0.24515}
{'[0, 6, 4, 1, 6, 3, 1, 0, 3, 3, 26, 0, 2, 0, 0, 0, 1, 0]' : 0.245665}
{'[0, 6, 4, 1, 6, 3, 1, 0, 3, 3, 26, 0, 2, 0, 0, 0, 1, 0]' : 0.242782}
{'[0, 6, 4, 1, 6, 3, 1, 0, 3, 3, 26, 0, 2, 0, 0, 0, 1, 0]' : 0.243359}
{'[0, 6, 4, 1, 6, 3, 1, 0, 3, 3, 26, 0, 2, 0, 0, 0, 1, 0]' : 0.245887}
{'[0, 6, 4, 1, 6, 3, 1, 0, 3, 3, 26, 0, 2, 0, 0, 0, 1, 0]' : 0.241896}
{'[0, 6, 4, 1, 6, 3, 1, 0, 3, 3, 26, 0, 2, 0, 0, 0, 1, 0]' : 0.245121}
{'[0, 6, 4, 1, 6, 3, 1, 0, 3, 3, 26, 0, 2, 0, 0, 0, 1, 0]' : 0.242075}
{'[0, 6, 4, 1, 6, 3, 1, 0, 3, 3, 26, 0, 2, 0, 0, 0, 1, 0]' : 0.247162}

out:
 ["{'[0, 6, 4, 1, 6, 3, 1, 0, 3, 3, 26, 0, 2, 0, 0, 0, 1, 0]' : 0.282009}", "{'[0, 6, 4, 1, 6, 3, 1, 0, 3, 3, 26, 0, 2, 0, 0, 0, 1, 0]' : 0.256713}", "{'[0, 6, 4, 1, 6, 3, 1, 0, 3, 3, 26, 0, 2, 0, 0, 0, 1, 0]' : 0.246009}", "{'[0, 6, 4, 1, 6, 3, 1, 0, 3, 3, 26, 0, 2, 0, 0, 0, 1, 0]' : 0.242207}", "{'[0, 6, 4, 1, 6, 3, 1, 0, 3, 3, 26, 0, 2, 0, 0, 0, 1, 0]' : 0.245233}", "{'[0, 6, 4, 1, 6, 3, 1, 0, 3, 3, 26, 0, 2, 0, 0, 0, 1, 0]' : 0.244668}", "{'[0, 6, 4, 1, 6, 3, 1, 0, 3, 3, 26, 0, 2, 0, 0, 0, 1, 0]' : 0.245936}", "{'[0, 6, 4, 1, 6, 3, 1, 0, 3, 3, 26, 0, 2, 0, 0, 0, 1, 0]' : 0.243205}", "{'[0, 6, 4, 1, 6, 3, 1, 0, 3, 3, 26, 0, 2, 0, 0, 0, 1, 0]' : 0.244213}", "{'[0, 6, 4, 1, 6, 3, 1, 0, 3, 3, 26, 0, 2, 0, 0, 0, 1, 0]' : 0.24507}", "{'[0, 6, 4, 1, 6, 3, 1, 0, 3, 3, 26, 0, 2, 0, 0, 0, 1, 0]' : 0.243138}", "{'[0, 6, 4, 1, 6, 3, 1, 0, 3, 3, 26, 0, 2, 0, 0, 0, 1, 0]' : 0.244211}", "{'[0, 6, 4, 1, 6, 3, 1, 0, 3, 3, 26, 0, 2, 0, 0, 0, 1, 0]' : 0.242618}", "{'[0, 6, 4, 1, 6, 3, 1, 0, 3, 3, 26, 0, 2, 0, 0, 0, 1, 0]' : 0.247229}", "{'[0, 6, 4, 1, 6, 3, 1, 0, 3, 3, 26, 0, 2, 0, 0, 0, 1, 0]' : 0.2437}", "{'[0, 6, 4, 1, 6, 3, 1, 0, 3, 3, 26, 0, 2, 0, 0, 0, 1, 0]' : 0.24483}", "{'[0, 6, 4, 1, 6, 3, 1, 0, 3, 3, 26, 0, 2, 0, 0, 0, 1, 0]' : 0.243131}", "{'[0, 6, 4, 1, 6, 3, 1, 0, 3, 3, 26, 0, 2, 0, 0, 0, 1, 0]' : 0.244682}", "{'[0, 6, 4, 1, 6, 3, 1, 0, 3, 3, 26, 0, 2, 0, 0, 0, 1, 0]' : 0.244848}", "{'[0, 6, 4, 1, 6, 3, 1, 0, 3, 3, 26, 0, 2, 0, 0, 0, 1, 0]' : 0.242367}", "{'[0, 6, 4, 1, 6, 3, 1, 0, 3, 3, 26, 0, 2, 0, 0, 0, 1, 0]' : 0.244417}", "{'[0, 6, 4, 1, 6, 3, 1, 0, 3, 3, 26, 0, 2, 0, 0, 0, 1, 0]' : 0.24515}", "{'[0, 6, 4, 1, 6, 3, 1, 0, 3, 3, 26, 0, 2, 0, 0, 0, 1, 0]' : 0.245665}", "{'[0, 6, 4, 1, 6, 3, 1, 0, 3, 3, 26, 0, 2, 0, 0, 0, 1, 0]' : 0.242782}", "{'[0, 6, 4, 1, 6, 3, 1, 0, 3, 3, 26, 0, 2, 0, 0, 0, 1, 0]' : 0.243359}", "{'[0, 6, 4, 1, 6, 3, 1, 0, 3, 3, 26, 0, 2, 0, 0, 0, 1, 0]' : 0.245887}", "{'[0, 6, 4, 1, 6, 3, 1, 0, 3, 3, 26, 0, 2, 0, 0, 0, 1, 0]' : 0.241896}", "{'[0, 6, 4, 1, 6, 3, 1, 0, 3, 3, 26, 0, 2, 0, 0, 0, 1, 0]' : 0.245121}", "{'[0, 6, 4, 1, 6, 3, 1, 0, 3, 3, 26, 0, 2, 0, 0, 0, 1, 0]' : 0.242075}", "{'[0, 6, 4, 1, 6, 3, 1, 0, 3, 3, 26, 0, 2, 0, 0, 0, 1, 0]' : 0.247162}"]
returning from 'run': {'[0, 6, 4, 1, 6, 3, 1, 0, 3, 3, 26, 0, 2, 0, 0, 0, 1, 0]': ([0.282009, 0.256713, 0.246009, 0.242207, 0.245233, 0.244668, 0.245936, 0.243205, 0.244213, 0.24507, 0.243138, 0.244211, 0.242618, 0.247229, 0.2437, 0.24483, 0.243131, 0.244682, 0.244848, 0.242367, 0.244417, 0.24515, 0.245665, 0.242782, 0.243359, 0.245887, 0.241896, 0.245121, 0.242075, 0.247162], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 4, 1, 6, 3, 1, 0, 3, 3, 26, 0, 2, 0, 0, 0, 1, 0]': ([0.282009, 0.256713, 0.246009, 0.242207, 0.245233, 0.244668, 0.245936, 0.243205, 0.244213, 0.24507, 0.243138, 0.244211, 0.242618, 0.247229, 0.2437, 0.24483, 0.243131, 0.244682, 0.244848, 0.242367, 0.244417, 0.24515, 0.245665, 0.242782, 0.243359, 0.245887, 0.241896, 0.245121, 0.242075, 0.247162], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		96
        Multiplications: 	22
        Divisions: 		0
        Logical: 		0
        Reads: 			221
        Writes: 		45
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest61.exe __orio_perftest61.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest61.exe  
Program Test Output: 
{'[0, 6, 6, 5, 6, 6, 1, 0, 3, 0, 13, 1, 0, 1, 0, 0, 1, 0]' : 0.264985}
{'[0, 6, 6, 5, 6, 6, 1, 0, 3, 0, 13, 1, 0, 1, 0, 0, 1, 0]' : 0.264919}
{'[0, 6, 6, 5, 6, 6, 1, 0, 3, 0, 13, 1, 0, 1, 0, 0, 1, 0]' : 0.241708}
{'[0, 6, 6, 5, 6, 6, 1, 0, 3, 0, 13, 1, 0, 1, 0, 0, 1, 0]' : 0.236988}
{'[0, 6, 6, 5, 6, 6, 1, 0, 3, 0, 13, 1, 0, 1, 0, 0, 1, 0]' : 0.233156}
{'[0, 6, 6, 5, 6, 6, 1, 0, 3, 0, 13, 1, 0, 1, 0, 0, 1, 0]' : 0.229706}
{'[0, 6, 6, 5, 6, 6, 1, 0, 3, 0, 13, 1, 0, 1, 0, 0, 1, 0]' : 0.229659}
{'[0, 6, 6, 5, 6, 6, 1, 0, 3, 0, 13, 1, 0, 1, 0, 0, 1, 0]' : 0.229667}
{'[0, 6, 6, 5, 6, 6, 1, 0, 3, 0, 13, 1, 0, 1, 0, 0, 1, 0]' : 0.230153}
{'[0, 6, 6, 5, 6, 6, 1, 0, 3, 0, 13, 1, 0, 1, 0, 0, 1, 0]' : 0.229738}
{'[0, 6, 6, 5, 6, 6, 1, 0, 3, 0, 13, 1, 0, 1, 0, 0, 1, 0]' : 0.227804}
{'[0, 6, 6, 5, 6, 6, 1, 0, 3, 0, 13, 1, 0, 1, 0, 0, 1, 0]' : 0.229659}
{'[0, 6, 6, 5, 6, 6, 1, 0, 3, 0, 13, 1, 0, 1, 0, 0, 1, 0]' : 0.229798}
{'[0, 6, 6, 5, 6, 6, 1, 0, 3, 0, 13, 1, 0, 1, 0, 0, 1, 0]' : 0.230073}
{'[0, 6, 6, 5, 6, 6, 1, 0, 3, 0, 13, 1, 0, 1, 0, 0, 1, 0]' : 0.229734}
{'[0, 6, 6, 5, 6, 6, 1, 0, 3, 0, 13, 1, 0, 1, 0, 0, 1, 0]' : 0.229644}
{'[0, 6, 6, 5, 6, 6, 1, 0, 3, 0, 13, 1, 0, 1, 0, 0, 1, 0]' : 0.229675}
{'[0, 6, 6, 5, 6, 6, 1, 0, 3, 0, 13, 1, 0, 1, 0, 0, 1, 0]' : 0.228263}
{'[0, 6, 6, 5, 6, 6, 1, 0, 3, 0, 13, 1, 0, 1, 0, 0, 1, 0]' : 0.230206}
{'[0, 6, 6, 5, 6, 6, 1, 0, 3, 0, 13, 1, 0, 1, 0, 0, 1, 0]' : 0.230112}
{'[0, 6, 6, 5, 6, 6, 1, 0, 3, 0, 13, 1, 0, 1, 0, 0, 1, 0]' : 0.229662}
{'[0, 6, 6, 5, 6, 6, 1, 0, 3, 0, 13, 1, 0, 1, 0, 0, 1, 0]' : 0.23086}
{'[0, 6, 6, 5, 6, 6, 1, 0, 3, 0, 13, 1, 0, 1, 0, 0, 1, 0]' : 0.229895}
{'[0, 6, 6, 5, 6, 6, 1, 0, 3, 0, 13, 1, 0, 1, 0, 0, 1, 0]' : 0.229777}
{'[0, 6, 6, 5, 6, 6, 1, 0, 3, 0, 13, 1, 0, 1, 0, 0, 1, 0]' : 0.229877}
{'[0, 6, 6, 5, 6, 6, 1, 0, 3, 0, 13, 1, 0, 1, 0, 0, 1, 0]' : 0.229668}
{'[0, 6, 6, 5, 6, 6, 1, 0, 3, 0, 13, 1, 0, 1, 0, 0, 1, 0]' : 0.229665}
{'[0, 6, 6, 5, 6, 6, 1, 0, 3, 0, 13, 1, 0, 1, 0, 0, 1, 0]' : 0.230046}
{'[0, 6, 6, 5, 6, 6, 1, 0, 3, 0, 13, 1, 0, 1, 0, 0, 1, 0]' : 0.228052}
{'[0, 6, 6, 5, 6, 6, 1, 0, 3, 0, 13, 1, 0, 1, 0, 0, 1, 0]' : 0.22973}

out:
 ["{'[0, 6, 6, 5, 6, 6, 1, 0, 3, 0, 13, 1, 0, 1, 0, 0, 1, 0]' : 0.264985}", "{'[0, 6, 6, 5, 6, 6, 1, 0, 3, 0, 13, 1, 0, 1, 0, 0, 1, 0]' : 0.264919}", "{'[0, 6, 6, 5, 6, 6, 1, 0, 3, 0, 13, 1, 0, 1, 0, 0, 1, 0]' : 0.241708}", "{'[0, 6, 6, 5, 6, 6, 1, 0, 3, 0, 13, 1, 0, 1, 0, 0, 1, 0]' : 0.236988}", "{'[0, 6, 6, 5, 6, 6, 1, 0, 3, 0, 13, 1, 0, 1, 0, 0, 1, 0]' : 0.233156}", "{'[0, 6, 6, 5, 6, 6, 1, 0, 3, 0, 13, 1, 0, 1, 0, 0, 1, 0]' : 0.229706}", "{'[0, 6, 6, 5, 6, 6, 1, 0, 3, 0, 13, 1, 0, 1, 0, 0, 1, 0]' : 0.229659}", "{'[0, 6, 6, 5, 6, 6, 1, 0, 3, 0, 13, 1, 0, 1, 0, 0, 1, 0]' : 0.229667}", "{'[0, 6, 6, 5, 6, 6, 1, 0, 3, 0, 13, 1, 0, 1, 0, 0, 1, 0]' : 0.230153}", "{'[0, 6, 6, 5, 6, 6, 1, 0, 3, 0, 13, 1, 0, 1, 0, 0, 1, 0]' : 0.229738}", "{'[0, 6, 6, 5, 6, 6, 1, 0, 3, 0, 13, 1, 0, 1, 0, 0, 1, 0]' : 0.227804}", "{'[0, 6, 6, 5, 6, 6, 1, 0, 3, 0, 13, 1, 0, 1, 0, 0, 1, 0]' : 0.229659}", "{'[0, 6, 6, 5, 6, 6, 1, 0, 3, 0, 13, 1, 0, 1, 0, 0, 1, 0]' : 0.229798}", "{'[0, 6, 6, 5, 6, 6, 1, 0, 3, 0, 13, 1, 0, 1, 0, 0, 1, 0]' : 0.230073}", "{'[0, 6, 6, 5, 6, 6, 1, 0, 3, 0, 13, 1, 0, 1, 0, 0, 1, 0]' : 0.229734}", "{'[0, 6, 6, 5, 6, 6, 1, 0, 3, 0, 13, 1, 0, 1, 0, 0, 1, 0]' : 0.229644}", "{'[0, 6, 6, 5, 6, 6, 1, 0, 3, 0, 13, 1, 0, 1, 0, 0, 1, 0]' : 0.229675}", "{'[0, 6, 6, 5, 6, 6, 1, 0, 3, 0, 13, 1, 0, 1, 0, 0, 1, 0]' : 0.228263}", "{'[0, 6, 6, 5, 6, 6, 1, 0, 3, 0, 13, 1, 0, 1, 0, 0, 1, 0]' : 0.230206}", "{'[0, 6, 6, 5, 6, 6, 1, 0, 3, 0, 13, 1, 0, 1, 0, 0, 1, 0]' : 0.230112}", "{'[0, 6, 6, 5, 6, 6, 1, 0, 3, 0, 13, 1, 0, 1, 0, 0, 1, 0]' : 0.229662}", "{'[0, 6, 6, 5, 6, 6, 1, 0, 3, 0, 13, 1, 0, 1, 0, 0, 1, 0]' : 0.23086}", "{'[0, 6, 6, 5, 6, 6, 1, 0, 3, 0, 13, 1, 0, 1, 0, 0, 1, 0]' : 0.229895}", "{'[0, 6, 6, 5, 6, 6, 1, 0, 3, 0, 13, 1, 0, 1, 0, 0, 1, 0]' : 0.229777}", "{'[0, 6, 6, 5, 6, 6, 1, 0, 3, 0, 13, 1, 0, 1, 0, 0, 1, 0]' : 0.229877}", "{'[0, 6, 6, 5, 6, 6, 1, 0, 3, 0, 13, 1, 0, 1, 0, 0, 1, 0]' : 0.229668}", "{'[0, 6, 6, 5, 6, 6, 1, 0, 3, 0, 13, 1, 0, 1, 0, 0, 1, 0]' : 0.229665}", "{'[0, 6, 6, 5, 6, 6, 1, 0, 3, 0, 13, 1, 0, 1, 0, 0, 1, 0]' : 0.230046}", "{'[0, 6, 6, 5, 6, 6, 1, 0, 3, 0, 13, 1, 0, 1, 0, 0, 1, 0]' : 0.228052}", "{'[0, 6, 6, 5, 6, 6, 1, 0, 3, 0, 13, 1, 0, 1, 0, 0, 1, 0]' : 0.22973}"]
returning from 'run': {'[0, 6, 6, 5, 6, 6, 1, 0, 3, 0, 13, 1, 0, 1, 0, 0, 1, 0]': ([0.264985, 0.264919, 0.241708, 0.236988, 0.233156, 0.229706, 0.229659, 0.229667, 0.230153, 0.229738, 0.227804, 0.229659, 0.229798, 0.230073, 0.229734, 0.229644, 0.229675, 0.228263, 0.230206, 0.230112, 0.229662, 0.23086, 0.229895, 0.229777, 0.229877, 0.229668, 0.229665, 0.230046, 0.228052, 0.22973], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 6, 5, 6, 6, 1, 0, 3, 0, 13, 1, 0, 1, 0, 0, 1, 0]': ([0.264985, 0.264919, 0.241708, 0.236988, 0.233156, 0.229706, 0.229659, 0.229667, 0.230153, 0.229738, 0.227804, 0.229659, 0.229798, 0.230073, 0.229734, 0.229644, 0.229675, 0.228263, 0.230206, 0.230112, 0.229662, 0.23086, 0.229895, 0.229777, 0.229877, 0.229668, 0.229665, 0.230046, 0.228052, 0.22973], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	3
        Additions: 		207
        Multiplications: 	70
        Divisions: 		0
        Logical: 		0
        Reads: 			510
        Writes: 		119
        Comparisons:		9
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest62.exe __orio_perftest62.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest62.exe  
Program Test Output: 
{'[0, 0, 0, 0, 6, 2, 1, 0, 3, 0, 15, 25, 0, 1, 0, 1, 1, 0]' : 0.187826}
{'[0, 0, 0, 0, 6, 2, 1, 0, 3, 0, 15, 25, 0, 1, 0, 1, 1, 0]' : 0.187769}
{'[0, 0, 0, 0, 6, 2, 1, 0, 3, 0, 15, 25, 0, 1, 0, 1, 1, 0]' : 0.189647}
{'[0, 0, 0, 0, 6, 2, 1, 0, 3, 0, 15, 25, 0, 1, 0, 1, 1, 0]' : 0.193836}
{'[0, 0, 0, 0, 6, 2, 1, 0, 3, 0, 15, 25, 0, 1, 0, 1, 1, 0]' : 0.193981}
{'[0, 0, 0, 0, 6, 2, 1, 0, 3, 0, 15, 25, 0, 1, 0, 1, 1, 0]' : 0.18928}
{'[0, 0, 0, 0, 6, 2, 1, 0, 3, 0, 15, 25, 0, 1, 0, 1, 1, 0]' : 0.184717}
{'[0, 0, 0, 0, 6, 2, 1, 0, 3, 0, 15, 25, 0, 1, 0, 1, 1, 0]' : 0.183082}
{'[0, 0, 0, 0, 6, 2, 1, 0, 3, 0, 15, 25, 0, 1, 0, 1, 1, 0]' : 0.193774}
{'[0, 0, 0, 0, 6, 2, 1, 0, 3, 0, 15, 25, 0, 1, 0, 1, 1, 0]' : 0.19139}
{'[0, 0, 0, 0, 6, 2, 1, 0, 3, 0, 15, 25, 0, 1, 0, 1, 1, 0]' : 0.190325}
{'[0, 0, 0, 0, 6, 2, 1, 0, 3, 0, 15, 25, 0, 1, 0, 1, 1, 0]' : 0.193796}
{'[0, 0, 0, 0, 6, 2, 1, 0, 3, 0, 15, 25, 0, 1, 0, 1, 1, 0]' : 0.188455}
{'[0, 0, 0, 0, 6, 2, 1, 0, 3, 0, 15, 25, 0, 1, 0, 1, 1, 0]' : 0.18664}
{'[0, 0, 0, 0, 6, 2, 1, 0, 3, 0, 15, 25, 0, 1, 0, 1, 1, 0]' : 0.188837}
{'[0, 0, 0, 0, 6, 2, 1, 0, 3, 0, 15, 25, 0, 1, 0, 1, 1, 0]' : 0.188818}
{'[0, 0, 0, 0, 6, 2, 1, 0, 3, 0, 15, 25, 0, 1, 0, 1, 1, 0]' : 0.19388}
{'[0, 0, 0, 0, 6, 2, 1, 0, 3, 0, 15, 25, 0, 1, 0, 1, 1, 0]' : 0.191753}
{'[0, 0, 0, 0, 6, 2, 1, 0, 3, 0, 15, 25, 0, 1, 0, 1, 1, 0]' : 0.191125}
{'[0, 0, 0, 0, 6, 2, 1, 0, 3, 0, 15, 25, 0, 1, 0, 1, 1, 0]' : 0.193776}
{'[0, 0, 0, 0, 6, 2, 1, 0, 3, 0, 15, 25, 0, 1, 0, 1, 1, 0]' : 0.189982}
{'[0, 0, 0, 0, 6, 2, 1, 0, 3, 0, 15, 25, 0, 1, 0, 1, 1, 0]' : 0.193521}
{'[0, 0, 0, 0, 6, 2, 1, 0, 3, 0, 15, 25, 0, 1, 0, 1, 1, 0]' : 0.193775}
{'[0, 0, 0, 0, 6, 2, 1, 0, 3, 0, 15, 25, 0, 1, 0, 1, 1, 0]' : 0.1898}
{'[0, 0, 0, 0, 6, 2, 1, 0, 3, 0, 15, 25, 0, 1, 0, 1, 1, 0]' : 0.193762}
{'[0, 0, 0, 0, 6, 2, 1, 0, 3, 0, 15, 25, 0, 1, 0, 1, 1, 0]' : 0.188109}
{'[0, 0, 0, 0, 6, 2, 1, 0, 3, 0, 15, 25, 0, 1, 0, 1, 1, 0]' : 0.19221}
{'[0, 0, 0, 0, 6, 2, 1, 0, 3, 0, 15, 25, 0, 1, 0, 1, 1, 0]' : 0.191926}
{'[0, 0, 0, 0, 6, 2, 1, 0, 3, 0, 15, 25, 0, 1, 0, 1, 1, 0]' : 0.188488}
{'[0, 0, 0, 0, 6, 2, 1, 0, 3, 0, 15, 25, 0, 1, 0, 1, 1, 0]' : 0.192048}

out:
 ["{'[0, 0, 0, 0, 6, 2, 1, 0, 3, 0, 15, 25, 0, 1, 0, 1, 1, 0]' : 0.187826}", "{'[0, 0, 0, 0, 6, 2, 1, 0, 3, 0, 15, 25, 0, 1, 0, 1, 1, 0]' : 0.187769}", "{'[0, 0, 0, 0, 6, 2, 1, 0, 3, 0, 15, 25, 0, 1, 0, 1, 1, 0]' : 0.189647}", "{'[0, 0, 0, 0, 6, 2, 1, 0, 3, 0, 15, 25, 0, 1, 0, 1, 1, 0]' : 0.193836}", "{'[0, 0, 0, 0, 6, 2, 1, 0, 3, 0, 15, 25, 0, 1, 0, 1, 1, 0]' : 0.193981}", "{'[0, 0, 0, 0, 6, 2, 1, 0, 3, 0, 15, 25, 0, 1, 0, 1, 1, 0]' : 0.18928}", "{'[0, 0, 0, 0, 6, 2, 1, 0, 3, 0, 15, 25, 0, 1, 0, 1, 1, 0]' : 0.184717}", "{'[0, 0, 0, 0, 6, 2, 1, 0, 3, 0, 15, 25, 0, 1, 0, 1, 1, 0]' : 0.183082}", "{'[0, 0, 0, 0, 6, 2, 1, 0, 3, 0, 15, 25, 0, 1, 0, 1, 1, 0]' : 0.193774}", "{'[0, 0, 0, 0, 6, 2, 1, 0, 3, 0, 15, 25, 0, 1, 0, 1, 1, 0]' : 0.19139}", "{'[0, 0, 0, 0, 6, 2, 1, 0, 3, 0, 15, 25, 0, 1, 0, 1, 1, 0]' : 0.190325}", "{'[0, 0, 0, 0, 6, 2, 1, 0, 3, 0, 15, 25, 0, 1, 0, 1, 1, 0]' : 0.193796}", "{'[0, 0, 0, 0, 6, 2, 1, 0, 3, 0, 15, 25, 0, 1, 0, 1, 1, 0]' : 0.188455}", "{'[0, 0, 0, 0, 6, 2, 1, 0, 3, 0, 15, 25, 0, 1, 0, 1, 1, 0]' : 0.18664}", "{'[0, 0, 0, 0, 6, 2, 1, 0, 3, 0, 15, 25, 0, 1, 0, 1, 1, 0]' : 0.188837}", "{'[0, 0, 0, 0, 6, 2, 1, 0, 3, 0, 15, 25, 0, 1, 0, 1, 1, 0]' : 0.188818}", "{'[0, 0, 0, 0, 6, 2, 1, 0, 3, 0, 15, 25, 0, 1, 0, 1, 1, 0]' : 0.19388}", "{'[0, 0, 0, 0, 6, 2, 1, 0, 3, 0, 15, 25, 0, 1, 0, 1, 1, 0]' : 0.191753}", "{'[0, 0, 0, 0, 6, 2, 1, 0, 3, 0, 15, 25, 0, 1, 0, 1, 1, 0]' : 0.191125}", "{'[0, 0, 0, 0, 6, 2, 1, 0, 3, 0, 15, 25, 0, 1, 0, 1, 1, 0]' : 0.193776}", "{'[0, 0, 0, 0, 6, 2, 1, 0, 3, 0, 15, 25, 0, 1, 0, 1, 1, 0]' : 0.189982}", "{'[0, 0, 0, 0, 6, 2, 1, 0, 3, 0, 15, 25, 0, 1, 0, 1, 1, 0]' : 0.193521}", "{'[0, 0, 0, 0, 6, 2, 1, 0, 3, 0, 15, 25, 0, 1, 0, 1, 1, 0]' : 0.193775}", "{'[0, 0, 0, 0, 6, 2, 1, 0, 3, 0, 15, 25, 0, 1, 0, 1, 1, 0]' : 0.1898}", "{'[0, 0, 0, 0, 6, 2, 1, 0, 3, 0, 15, 25, 0, 1, 0, 1, 1, 0]' : 0.193762}", "{'[0, 0, 0, 0, 6, 2, 1, 0, 3, 0, 15, 25, 0, 1, 0, 1, 1, 0]' : 0.188109}", "{'[0, 0, 0, 0, 6, 2, 1, 0, 3, 0, 15, 25, 0, 1, 0, 1, 1, 0]' : 0.19221}", "{'[0, 0, 0, 0, 6, 2, 1, 0, 3, 0, 15, 25, 0, 1, 0, 1, 1, 0]' : 0.191926}", "{'[0, 0, 0, 0, 6, 2, 1, 0, 3, 0, 15, 25, 0, 1, 0, 1, 1, 0]' : 0.188488}", "{'[0, 0, 0, 0, 6, 2, 1, 0, 3, 0, 15, 25, 0, 1, 0, 1, 1, 0]' : 0.192048}"]
returning from 'run': {'[0, 0, 0, 0, 6, 2, 1, 0, 3, 0, 15, 25, 0, 1, 0, 1, 1, 0]': ([0.187826, 0.187769, 0.189647, 0.193836, 0.193981, 0.18928, 0.184717, 0.183082, 0.193774, 0.19139, 0.190325, 0.193796, 0.188455, 0.18664, 0.188837, 0.188818, 0.19388, 0.191753, 0.191125, 0.193776, 0.189982, 0.193521, 0.193775, 0.1898, 0.193762, 0.188109, 0.19221, 0.191926, 0.188488, 0.192048], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 0, 0, 6, 2, 1, 0, 3, 0, 15, 25, 0, 1, 0, 1, 1, 0]': ([0.187826, 0.187769, 0.189647, 0.193836, 0.193981, 0.18928, 0.184717, 0.183082, 0.193774, 0.19139, 0.190325, 0.193796, 0.188455, 0.18664, 0.188837, 0.188818, 0.19388, 0.191753, 0.191125, 0.193776, 0.189982, 0.193521, 0.193775, 0.1898, 0.193762, 0.188109, 0.19221, 0.191926, 0.188488, 0.192048], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	35
        Max loop nest depth: 	5
        Additions: 		318
        Multiplications: 	72
        Divisions: 		0
        Logical: 		0
        Reads: 			757
        Writes: 		150
        Comparisons:		35
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest63.exe __orio_perftest63.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest63.exe  
Program Test Output: 
{'[0, 2, 1, 6, 6, 3, 1, 0, 3, 16, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.206761}
{'[0, 2, 1, 6, 6, 3, 1, 0, 3, 16, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.207074}
{'[0, 2, 1, 6, 6, 3, 1, 0, 3, 16, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.195007}
{'[0, 2, 1, 6, 6, 3, 1, 0, 3, 16, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.175829}
{'[0, 2, 1, 6, 6, 3, 1, 0, 3, 16, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.178016}
{'[0, 2, 1, 6, 6, 3, 1, 0, 3, 16, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.181348}
{'[0, 2, 1, 6, 6, 3, 1, 0, 3, 16, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.178893}
{'[0, 2, 1, 6, 6, 3, 1, 0, 3, 16, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.179011}
{'[0, 2, 1, 6, 6, 3, 1, 0, 3, 16, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.181237}
{'[0, 2, 1, 6, 6, 3, 1, 0, 3, 16, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.177822}
{'[0, 2, 1, 6, 6, 3, 1, 0, 3, 16, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.180996}
{'[0, 2, 1, 6, 6, 3, 1, 0, 3, 16, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.181282}
{'[0, 2, 1, 6, 6, 3, 1, 0, 3, 16, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.177845}
{'[0, 2, 1, 6, 6, 3, 1, 0, 3, 16, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.18119}
{'[0, 2, 1, 6, 6, 3, 1, 0, 3, 16, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.181096}
{'[0, 2, 1, 6, 6, 3, 1, 0, 3, 16, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.177793}
{'[0, 2, 1, 6, 6, 3, 1, 0, 3, 16, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.181286}
{'[0, 2, 1, 6, 6, 3, 1, 0, 3, 16, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.177407}
{'[0, 2, 1, 6, 6, 3, 1, 0, 3, 16, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.17915}
{'[0, 2, 1, 6, 6, 3, 1, 0, 3, 16, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.181152}
{'[0, 2, 1, 6, 6, 3, 1, 0, 3, 16, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.176099}
{'[0, 2, 1, 6, 6, 3, 1, 0, 3, 16, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.180006}
{'[0, 2, 1, 6, 6, 3, 1, 0, 3, 16, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.180938}
{'[0, 2, 1, 6, 6, 3, 1, 0, 3, 16, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.175882}
{'[0, 2, 1, 6, 6, 3, 1, 0, 3, 16, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.18091}
{'[0, 2, 1, 6, 6, 3, 1, 0, 3, 16, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.179968}
{'[0, 2, 1, 6, 6, 3, 1, 0, 3, 16, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.176971}
{'[0, 2, 1, 6, 6, 3, 1, 0, 3, 16, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.186309}
{'[0, 2, 1, 6, 6, 3, 1, 0, 3, 16, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.180327}
{'[0, 2, 1, 6, 6, 3, 1, 0, 3, 16, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.179383}

out:
 ["{'[0, 2, 1, 6, 6, 3, 1, 0, 3, 16, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.206761}", "{'[0, 2, 1, 6, 6, 3, 1, 0, 3, 16, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.207074}", "{'[0, 2, 1, 6, 6, 3, 1, 0, 3, 16, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.195007}", "{'[0, 2, 1, 6, 6, 3, 1, 0, 3, 16, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.175829}", "{'[0, 2, 1, 6, 6, 3, 1, 0, 3, 16, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.178016}", "{'[0, 2, 1, 6, 6, 3, 1, 0, 3, 16, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.181348}", "{'[0, 2, 1, 6, 6, 3, 1, 0, 3, 16, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.178893}", "{'[0, 2, 1, 6, 6, 3, 1, 0, 3, 16, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.179011}", "{'[0, 2, 1, 6, 6, 3, 1, 0, 3, 16, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.181237}", "{'[0, 2, 1, 6, 6, 3, 1, 0, 3, 16, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.177822}", "{'[0, 2, 1, 6, 6, 3, 1, 0, 3, 16, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.180996}", "{'[0, 2, 1, 6, 6, 3, 1, 0, 3, 16, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.181282}", "{'[0, 2, 1, 6, 6, 3, 1, 0, 3, 16, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.177845}", "{'[0, 2, 1, 6, 6, 3, 1, 0, 3, 16, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.18119}", "{'[0, 2, 1, 6, 6, 3, 1, 0, 3, 16, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.181096}", "{'[0, 2, 1, 6, 6, 3, 1, 0, 3, 16, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.177793}", "{'[0, 2, 1, 6, 6, 3, 1, 0, 3, 16, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.181286}", "{'[0, 2, 1, 6, 6, 3, 1, 0, 3, 16, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.177407}", "{'[0, 2, 1, 6, 6, 3, 1, 0, 3, 16, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.17915}", "{'[0, 2, 1, 6, 6, 3, 1, 0, 3, 16, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.181152}", "{'[0, 2, 1, 6, 6, 3, 1, 0, 3, 16, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.176099}", "{'[0, 2, 1, 6, 6, 3, 1, 0, 3, 16, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.180006}", "{'[0, 2, 1, 6, 6, 3, 1, 0, 3, 16, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.180938}", "{'[0, 2, 1, 6, 6, 3, 1, 0, 3, 16, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.175882}", "{'[0, 2, 1, 6, 6, 3, 1, 0, 3, 16, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.18091}", "{'[0, 2, 1, 6, 6, 3, 1, 0, 3, 16, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.179968}", "{'[0, 2, 1, 6, 6, 3, 1, 0, 3, 16, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.176971}", "{'[0, 2, 1, 6, 6, 3, 1, 0, 3, 16, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.186309}", "{'[0, 2, 1, 6, 6, 3, 1, 0, 3, 16, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.180327}", "{'[0, 2, 1, 6, 6, 3, 1, 0, 3, 16, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.179383}"]
returning from 'run': {'[0, 2, 1, 6, 6, 3, 1, 0, 3, 16, 0, 0, 0, 0, 0, 0, 1, 0]': ([0.206761, 0.207074, 0.195007, 0.175829, 0.178016, 0.181348, 0.178893, 0.179011, 0.181237, 0.177822, 0.180996, 0.181282, 0.177845, 0.18119, 0.181096, 0.177793, 0.181286, 0.177407, 0.17915, 0.181152, 0.176099, 0.180006, 0.180938, 0.175882, 0.18091, 0.179968, 0.176971, 0.186309, 0.180327, 0.179383], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 1, 6, 6, 3, 1, 0, 3, 16, 0, 0, 0, 0, 0, 0, 1, 0]': ([0.206761, 0.207074, 0.195007, 0.175829, 0.178016, 0.181348, 0.178893, 0.179011, 0.181237, 0.177822, 0.180996, 0.181282, 0.177845, 0.18119, 0.181096, 0.177793, 0.181286, 0.177407, 0.17915, 0.181152, 0.176099, 0.180006, 0.180938, 0.175882, 0.18091, 0.179968, 0.176971, 0.186309, 0.180327, 0.179383], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	5
        Additions: 		139
        Multiplications: 	36
        Divisions: 		0
        Logical: 		0
        Reads: 			348
        Writes: 		72
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest64.exe __orio_perftest64.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest64.exe  
Program Test Output: 
{'[0, 1, 5, 1, 6, 6, 1, 0, 3, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.109053}
{'[0, 1, 5, 1, 6, 6, 1, 0, 3, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.108955}
{'[0, 1, 5, 1, 6, 6, 1, 0, 3, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.10881}
{'[0, 1, 5, 1, 6, 6, 1, 0, 3, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.108857}
{'[0, 1, 5, 1, 6, 6, 1, 0, 3, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.109092}
{'[0, 1, 5, 1, 6, 6, 1, 0, 3, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.102372}
{'[0, 1, 5, 1, 6, 6, 1, 0, 3, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.0979221}
{'[0, 1, 5, 1, 6, 6, 1, 0, 3, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.097976}
{'[0, 1, 5, 1, 6, 6, 1, 0, 3, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.096828}
{'[0, 1, 5, 1, 6, 6, 1, 0, 3, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.0968001}
{'[0, 1, 5, 1, 6, 6, 1, 0, 3, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.0971861}
{'[0, 1, 5, 1, 6, 6, 1, 0, 3, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.0957091}
{'[0, 1, 5, 1, 6, 6, 1, 0, 3, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.0957279}
{'[0, 1, 5, 1, 6, 6, 1, 0, 3, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.095612}
{'[0, 1, 5, 1, 6, 6, 1, 0, 3, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.095799}
{'[0, 1, 5, 1, 6, 6, 1, 0, 3, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.097918}
{'[0, 1, 5, 1, 6, 6, 1, 0, 3, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.0980051}
{'[0, 1, 5, 1, 6, 6, 1, 0, 3, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.0959649}
{'[0, 1, 5, 1, 6, 6, 1, 0, 3, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.0958109}
{'[0, 1, 5, 1, 6, 6, 1, 0, 3, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.0961261}
{'[0, 1, 5, 1, 6, 6, 1, 0, 3, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.0977521}
{'[0, 1, 5, 1, 6, 6, 1, 0, 3, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.0980229}
{'[0, 1, 5, 1, 6, 6, 1, 0, 3, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.0978951}
{'[0, 1, 5, 1, 6, 6, 1, 0, 3, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.095613}
{'[0, 1, 5, 1, 6, 6, 1, 0, 3, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.09571}
{'[0, 1, 5, 1, 6, 6, 1, 0, 3, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.0974}
{'[0, 1, 5, 1, 6, 6, 1, 0, 3, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.0979111}
{'[0, 1, 5, 1, 6, 6, 1, 0, 3, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.097918}
{'[0, 1, 5, 1, 6, 6, 1, 0, 3, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.097873}
{'[0, 1, 5, 1, 6, 6, 1, 0, 3, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.0957952}

out:
 ["{'[0, 1, 5, 1, 6, 6, 1, 0, 3, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.109053}", "{'[0, 1, 5, 1, 6, 6, 1, 0, 3, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.108955}", "{'[0, 1, 5, 1, 6, 6, 1, 0, 3, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.10881}", "{'[0, 1, 5, 1, 6, 6, 1, 0, 3, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.108857}", "{'[0, 1, 5, 1, 6, 6, 1, 0, 3, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.109092}", "{'[0, 1, 5, 1, 6, 6, 1, 0, 3, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.102372}", "{'[0, 1, 5, 1, 6, 6, 1, 0, 3, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.0979221}", "{'[0, 1, 5, 1, 6, 6, 1, 0, 3, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.097976}", "{'[0, 1, 5, 1, 6, 6, 1, 0, 3, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.096828}", "{'[0, 1, 5, 1, 6, 6, 1, 0, 3, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.0968001}", "{'[0, 1, 5, 1, 6, 6, 1, 0, 3, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.0971861}", "{'[0, 1, 5, 1, 6, 6, 1, 0, 3, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.0957091}", "{'[0, 1, 5, 1, 6, 6, 1, 0, 3, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.0957279}", "{'[0, 1, 5, 1, 6, 6, 1, 0, 3, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.095612}", "{'[0, 1, 5, 1, 6, 6, 1, 0, 3, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.095799}", "{'[0, 1, 5, 1, 6, 6, 1, 0, 3, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.097918}", "{'[0, 1, 5, 1, 6, 6, 1, 0, 3, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.0980051}", "{'[0, 1, 5, 1, 6, 6, 1, 0, 3, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.0959649}", "{'[0, 1, 5, 1, 6, 6, 1, 0, 3, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.0958109}", "{'[0, 1, 5, 1, 6, 6, 1, 0, 3, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.0961261}", "{'[0, 1, 5, 1, 6, 6, 1, 0, 3, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.0977521}", "{'[0, 1, 5, 1, 6, 6, 1, 0, 3, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.0980229}", "{'[0, 1, 5, 1, 6, 6, 1, 0, 3, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.0978951}", "{'[0, 1, 5, 1, 6, 6, 1, 0, 3, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.095613}", "{'[0, 1, 5, 1, 6, 6, 1, 0, 3, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.09571}", "{'[0, 1, 5, 1, 6, 6, 1, 0, 3, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.0974}", "{'[0, 1, 5, 1, 6, 6, 1, 0, 3, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.0979111}", "{'[0, 1, 5, 1, 6, 6, 1, 0, 3, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.097918}", "{'[0, 1, 5, 1, 6, 6, 1, 0, 3, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.097873}", "{'[0, 1, 5, 1, 6, 6, 1, 0, 3, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.0957952}"]
returning from 'run': {'[0, 1, 5, 1, 6, 6, 1, 0, 3, 0, 0, 0, 1, 0, 0, 0, 1, 1]': ([0.109053, 0.108955, 0.10881, 0.108857, 0.109092, 0.102372, 0.0979221, 0.097976, 0.096828, 0.0968001, 0.0971861, 0.0957091, 0.0957279, 0.095612, 0.095799, 0.097918, 0.0980051, 0.0959649, 0.0958109, 0.0961261, 0.0977521, 0.0980229, 0.0978951, 0.095613, 0.09571, 0.0974, 0.0979111, 0.097918, 0.097873, 0.0957952], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 5, 1, 6, 6, 1, 0, 3, 0, 0, 0, 1, 0, 0, 0, 1, 1]': ([0.109053, 0.108955, 0.10881, 0.108857, 0.109092, 0.102372, 0.0979221, 0.097976, 0.096828, 0.0968001, 0.0971861, 0.0957091, 0.0957279, 0.095612, 0.095799, 0.097918, 0.0980051, 0.0959649, 0.0958109, 0.0961261, 0.0977521, 0.0980229, 0.0978951, 0.095613, 0.09571, 0.0974, 0.0979111, 0.097918, 0.097873, 0.0957952], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	46
        Max loop nest depth: 	5
        Additions: 		2203
        Multiplications: 	558
        Divisions: 		0
        Logical: 		0
        Reads: 			3585
        Writes: 		441
        Comparisons:		46
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest65.exe __orio_perftest65.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest65.exe  
Program Test Output: 
{'[0, 3, 0, 6, 6, 5, 1, 0, 3, 29, 28, 0, 0, 1, 0, 0, 1, 0]' : 0.258186}
{'[0, 3, 0, 6, 6, 5, 1, 0, 3, 29, 28, 0, 0, 1, 0, 0, 1, 0]' : 0.256918}
{'[0, 3, 0, 6, 6, 5, 1, 0, 3, 29, 28, 0, 0, 1, 0, 0, 1, 0]' : 0.259056}
{'[0, 3, 0, 6, 6, 5, 1, 0, 3, 29, 28, 0, 0, 1, 0, 0, 1, 0]' : 0.263022}
{'[0, 3, 0, 6, 6, 5, 1, 0, 3, 29, 28, 0, 0, 1, 0, 0, 1, 0]' : 0.262441}
{'[0, 3, 0, 6, 6, 5, 1, 0, 3, 29, 28, 0, 0, 1, 0, 0, 1, 0]' : 0.258624}
{'[0, 3, 0, 6, 6, 5, 1, 0, 3, 29, 28, 0, 0, 1, 0, 0, 1, 0]' : 0.259755}
{'[0, 3, 0, 6, 6, 5, 1, 0, 3, 29, 28, 0, 0, 1, 0, 0, 1, 0]' : 0.264735}
{'[0, 3, 0, 6, 6, 5, 1, 0, 3, 29, 28, 0, 0, 1, 0, 0, 1, 0]' : 0.257971}
{'[0, 3, 0, 6, 6, 5, 1, 0, 3, 29, 28, 0, 0, 1, 0, 0, 1, 0]' : 0.263115}
{'[0, 3, 0, 6, 6, 5, 1, 0, 3, 29, 28, 0, 0, 1, 0, 0, 1, 0]' : 0.257165}
{'[0, 3, 0, 6, 6, 5, 1, 0, 3, 29, 28, 0, 0, 1, 0, 0, 1, 0]' : 0.257418}
{'[0, 3, 0, 6, 6, 5, 1, 0, 3, 29, 28, 0, 0, 1, 0, 0, 1, 0]' : 0.259897}
{'[0, 3, 0, 6, 6, 5, 1, 0, 3, 29, 28, 0, 0, 1, 0, 0, 1, 0]' : 0.264414}
{'[0, 3, 0, 6, 6, 5, 1, 0, 3, 29, 28, 0, 0, 1, 0, 0, 1, 0]' : 0.258552}
{'[0, 3, 0, 6, 6, 5, 1, 0, 3, 29, 28, 0, 0, 1, 0, 0, 1, 0]' : 0.264684}
{'[0, 3, 0, 6, 6, 5, 1, 0, 3, 29, 28, 0, 0, 1, 0, 0, 1, 0]' : 0.265764}
{'[0, 3, 0, 6, 6, 5, 1, 0, 3, 29, 28, 0, 0, 1, 0, 0, 1, 0]' : 0.261512}
{'[0, 3, 0, 6, 6, 5, 1, 0, 3, 29, 28, 0, 0, 1, 0, 0, 1, 0]' : 0.262311}
{'[0, 3, 0, 6, 6, 5, 1, 0, 3, 29, 28, 0, 0, 1, 0, 0, 1, 0]' : 0.265336}
{'[0, 3, 0, 6, 6, 5, 1, 0, 3, 29, 28, 0, 0, 1, 0, 0, 1, 0]' : 0.264455}
{'[0, 3, 0, 6, 6, 5, 1, 0, 3, 29, 28, 0, 0, 1, 0, 0, 1, 0]' : 0.263589}
{'[0, 3, 0, 6, 6, 5, 1, 0, 3, 29, 28, 0, 0, 1, 0, 0, 1, 0]' : 0.263099}
{'[0, 3, 0, 6, 6, 5, 1, 0, 3, 29, 28, 0, 0, 1, 0, 0, 1, 0]' : 0.260847}
{'[0, 3, 0, 6, 6, 5, 1, 0, 3, 29, 28, 0, 0, 1, 0, 0, 1, 0]' : 0.263281}
{'[0, 3, 0, 6, 6, 5, 1, 0, 3, 29, 28, 0, 0, 1, 0, 0, 1, 0]' : 0.262181}
{'[0, 3, 0, 6, 6, 5, 1, 0, 3, 29, 28, 0, 0, 1, 0, 0, 1, 0]' : 0.262099}
{'[0, 3, 0, 6, 6, 5, 1, 0, 3, 29, 28, 0, 0, 1, 0, 0, 1, 0]' : 0.26256}
{'[0, 3, 0, 6, 6, 5, 1, 0, 3, 29, 28, 0, 0, 1, 0, 0, 1, 0]' : 0.262877}
{'[0, 3, 0, 6, 6, 5, 1, 0, 3, 29, 28, 0, 0, 1, 0, 0, 1, 0]' : 0.263164}

out:
 ["{'[0, 3, 0, 6, 6, 5, 1, 0, 3, 29, 28, 0, 0, 1, 0, 0, 1, 0]' : 0.258186}", "{'[0, 3, 0, 6, 6, 5, 1, 0, 3, 29, 28, 0, 0, 1, 0, 0, 1, 0]' : 0.256918}", "{'[0, 3, 0, 6, 6, 5, 1, 0, 3, 29, 28, 0, 0, 1, 0, 0, 1, 0]' : 0.259056}", "{'[0, 3, 0, 6, 6, 5, 1, 0, 3, 29, 28, 0, 0, 1, 0, 0, 1, 0]' : 0.263022}", "{'[0, 3, 0, 6, 6, 5, 1, 0, 3, 29, 28, 0, 0, 1, 0, 0, 1, 0]' : 0.262441}", "{'[0, 3, 0, 6, 6, 5, 1, 0, 3, 29, 28, 0, 0, 1, 0, 0, 1, 0]' : 0.258624}", "{'[0, 3, 0, 6, 6, 5, 1, 0, 3, 29, 28, 0, 0, 1, 0, 0, 1, 0]' : 0.259755}", "{'[0, 3, 0, 6, 6, 5, 1, 0, 3, 29, 28, 0, 0, 1, 0, 0, 1, 0]' : 0.264735}", "{'[0, 3, 0, 6, 6, 5, 1, 0, 3, 29, 28, 0, 0, 1, 0, 0, 1, 0]' : 0.257971}", "{'[0, 3, 0, 6, 6, 5, 1, 0, 3, 29, 28, 0, 0, 1, 0, 0, 1, 0]' : 0.263115}", "{'[0, 3, 0, 6, 6, 5, 1, 0, 3, 29, 28, 0, 0, 1, 0, 0, 1, 0]' : 0.257165}", "{'[0, 3, 0, 6, 6, 5, 1, 0, 3, 29, 28, 0, 0, 1, 0, 0, 1, 0]' : 0.257418}", "{'[0, 3, 0, 6, 6, 5, 1, 0, 3, 29, 28, 0, 0, 1, 0, 0, 1, 0]' : 0.259897}", "{'[0, 3, 0, 6, 6, 5, 1, 0, 3, 29, 28, 0, 0, 1, 0, 0, 1, 0]' : 0.264414}", "{'[0, 3, 0, 6, 6, 5, 1, 0, 3, 29, 28, 0, 0, 1, 0, 0, 1, 0]' : 0.258552}", "{'[0, 3, 0, 6, 6, 5, 1, 0, 3, 29, 28, 0, 0, 1, 0, 0, 1, 0]' : 0.264684}", "{'[0, 3, 0, 6, 6, 5, 1, 0, 3, 29, 28, 0, 0, 1, 0, 0, 1, 0]' : 0.265764}", "{'[0, 3, 0, 6, 6, 5, 1, 0, 3, 29, 28, 0, 0, 1, 0, 0, 1, 0]' : 0.261512}", "{'[0, 3, 0, 6, 6, 5, 1, 0, 3, 29, 28, 0, 0, 1, 0, 0, 1, 0]' : 0.262311}", "{'[0, 3, 0, 6, 6, 5, 1, 0, 3, 29, 28, 0, 0, 1, 0, 0, 1, 0]' : 0.265336}", "{'[0, 3, 0, 6, 6, 5, 1, 0, 3, 29, 28, 0, 0, 1, 0, 0, 1, 0]' : 0.264455}", "{'[0, 3, 0, 6, 6, 5, 1, 0, 3, 29, 28, 0, 0, 1, 0, 0, 1, 0]' : 0.263589}", "{'[0, 3, 0, 6, 6, 5, 1, 0, 3, 29, 28, 0, 0, 1, 0, 0, 1, 0]' : 0.263099}", "{'[0, 3, 0, 6, 6, 5, 1, 0, 3, 29, 28, 0, 0, 1, 0, 0, 1, 0]' : 0.260847}", "{'[0, 3, 0, 6, 6, 5, 1, 0, 3, 29, 28, 0, 0, 1, 0, 0, 1, 0]' : 0.263281}", "{'[0, 3, 0, 6, 6, 5, 1, 0, 3, 29, 28, 0, 0, 1, 0, 0, 1, 0]' : 0.262181}", "{'[0, 3, 0, 6, 6, 5, 1, 0, 3, 29, 28, 0, 0, 1, 0, 0, 1, 0]' : 0.262099}", "{'[0, 3, 0, 6, 6, 5, 1, 0, 3, 29, 28, 0, 0, 1, 0, 0, 1, 0]' : 0.26256}", "{'[0, 3, 0, 6, 6, 5, 1, 0, 3, 29, 28, 0, 0, 1, 0, 0, 1, 0]' : 0.262877}", "{'[0, 3, 0, 6, 6, 5, 1, 0, 3, 29, 28, 0, 0, 1, 0, 0, 1, 0]' : 0.263164}"]
returning from 'run': {'[0, 3, 0, 6, 6, 5, 1, 0, 3, 29, 28, 0, 0, 1, 0, 0, 1, 0]': ([0.258186, 0.256918, 0.259056, 0.263022, 0.262441, 0.258624, 0.259755, 0.264735, 0.257971, 0.263115, 0.257165, 0.257418, 0.259897, 0.264414, 0.258552, 0.264684, 0.265764, 0.261512, 0.262311, 0.265336, 0.264455, 0.263589, 0.263099, 0.260847, 0.263281, 0.262181, 0.262099, 0.26256, 0.262877, 0.263164], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 3, 0, 6, 6, 5, 1, 0, 3, 29, 28, 0, 0, 1, 0, 0, 1, 0]': ([0.258186, 0.256918, 0.259056, 0.263022, 0.262441, 0.258624, 0.259755, 0.264735, 0.257971, 0.263115, 0.257165, 0.257418, 0.259897, 0.264414, 0.258552, 0.264684, 0.265764, 0.261512, 0.262311, 0.265336, 0.264455, 0.263589, 0.263099, 0.260847, 0.263281, 0.262181, 0.262099, 0.26256, 0.262877, 0.263164], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	40
        Max loop nest depth: 	4
        Additions: 		6569
        Multiplications: 	1872
        Divisions: 		0
        Logical: 		0
        Reads: 			10028
        Writes: 		1080
        Comparisons:		40
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest66.exe __orio_perftest66.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest66.exe  
Program Test Output: 
{'[0, 6, 4, 0, 6, 0, 1, 0, 3, 22, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.179749}
{'[0, 6, 4, 0, 6, 0, 1, 0, 3, 22, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.180074}
{'[0, 6, 4, 0, 6, 0, 1, 0, 3, 22, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.166973}
{'[0, 6, 4, 0, 6, 0, 1, 0, 3, 22, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.156592}
{'[0, 6, 4, 0, 6, 0, 1, 0, 3, 22, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.156682}
{'[0, 6, 4, 0, 6, 0, 1, 0, 3, 22, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.156747}
{'[0, 6, 4, 0, 6, 0, 1, 0, 3, 22, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.156259}
{'[0, 6, 4, 0, 6, 0, 1, 0, 3, 22, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.156285}
{'[0, 6, 4, 0, 6, 0, 1, 0, 3, 22, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.157096}
{'[0, 6, 4, 0, 6, 0, 1, 0, 3, 22, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.156863}
{'[0, 6, 4, 0, 6, 0, 1, 0, 3, 22, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.15667}
{'[0, 6, 4, 0, 6, 0, 1, 0, 3, 22, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.156424}
{'[0, 6, 4, 0, 6, 0, 1, 0, 3, 22, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.156829}
{'[0, 6, 4, 0, 6, 0, 1, 0, 3, 22, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.156372}
{'[0, 6, 4, 0, 6, 0, 1, 0, 3, 22, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.156332}
{'[0, 6, 4, 0, 6, 0, 1, 0, 3, 22, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.157851}
{'[0, 6, 4, 0, 6, 0, 1, 0, 3, 22, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.156612}
{'[0, 6, 4, 0, 6, 0, 1, 0, 3, 22, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.156822}
{'[0, 6, 4, 0, 6, 0, 1, 0, 3, 22, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.157526}
{'[0, 6, 4, 0, 6, 0, 1, 0, 3, 22, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.15661}
{'[0, 6, 4, 0, 6, 0, 1, 0, 3, 22, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.156585}
{'[0, 6, 4, 0, 6, 0, 1, 0, 3, 22, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.157084}
{'[0, 6, 4, 0, 6, 0, 1, 0, 3, 22, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.156721}
{'[0, 6, 4, 0, 6, 0, 1, 0, 3, 22, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.156724}
{'[0, 6, 4, 0, 6, 0, 1, 0, 3, 22, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.156584}
{'[0, 6, 4, 0, 6, 0, 1, 0, 3, 22, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.157624}
{'[0, 6, 4, 0, 6, 0, 1, 0, 3, 22, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.15678}
{'[0, 6, 4, 0, 6, 0, 1, 0, 3, 22, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.156635}
{'[0, 6, 4, 0, 6, 0, 1, 0, 3, 22, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.160221}
{'[0, 6, 4, 0, 6, 0, 1, 0, 3, 22, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.16041}

out:
 ["{'[0, 6, 4, 0, 6, 0, 1, 0, 3, 22, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.179749}", "{'[0, 6, 4, 0, 6, 0, 1, 0, 3, 22, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.180074}", "{'[0, 6, 4, 0, 6, 0, 1, 0, 3, 22, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.166973}", "{'[0, 6, 4, 0, 6, 0, 1, 0, 3, 22, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.156592}", "{'[0, 6, 4, 0, 6, 0, 1, 0, 3, 22, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.156682}", "{'[0, 6, 4, 0, 6, 0, 1, 0, 3, 22, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.156747}", "{'[0, 6, 4, 0, 6, 0, 1, 0, 3, 22, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.156259}", "{'[0, 6, 4, 0, 6, 0, 1, 0, 3, 22, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.156285}", "{'[0, 6, 4, 0, 6, 0, 1, 0, 3, 22, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.157096}", "{'[0, 6, 4, 0, 6, 0, 1, 0, 3, 22, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.156863}", "{'[0, 6, 4, 0, 6, 0, 1, 0, 3, 22, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.15667}", "{'[0, 6, 4, 0, 6, 0, 1, 0, 3, 22, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.156424}", "{'[0, 6, 4, 0, 6, 0, 1, 0, 3, 22, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.156829}", "{'[0, 6, 4, 0, 6, 0, 1, 0, 3, 22, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.156372}", "{'[0, 6, 4, 0, 6, 0, 1, 0, 3, 22, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.156332}", "{'[0, 6, 4, 0, 6, 0, 1, 0, 3, 22, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.157851}", "{'[0, 6, 4, 0, 6, 0, 1, 0, 3, 22, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.156612}", "{'[0, 6, 4, 0, 6, 0, 1, 0, 3, 22, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.156822}", "{'[0, 6, 4, 0, 6, 0, 1, 0, 3, 22, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.157526}", "{'[0, 6, 4, 0, 6, 0, 1, 0, 3, 22, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.15661}", "{'[0, 6, 4, 0, 6, 0, 1, 0, 3, 22, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.156585}", "{'[0, 6, 4, 0, 6, 0, 1, 0, 3, 22, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.157084}", "{'[0, 6, 4, 0, 6, 0, 1, 0, 3, 22, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.156721}", "{'[0, 6, 4, 0, 6, 0, 1, 0, 3, 22, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.156724}", "{'[0, 6, 4, 0, 6, 0, 1, 0, 3, 22, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.156584}", "{'[0, 6, 4, 0, 6, 0, 1, 0, 3, 22, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.157624}", "{'[0, 6, 4, 0, 6, 0, 1, 0, 3, 22, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.15678}", "{'[0, 6, 4, 0, 6, 0, 1, 0, 3, 22, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.156635}", "{'[0, 6, 4, 0, 6, 0, 1, 0, 3, 22, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.160221}", "{'[0, 6, 4, 0, 6, 0, 1, 0, 3, 22, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.16041}"]
returning from 'run': {'[0, 6, 4, 0, 6, 0, 1, 0, 3, 22, 0, 29, 0, 1, 0, 0, 1, 1]': ([0.179749, 0.180074, 0.166973, 0.156592, 0.156682, 0.156747, 0.156259, 0.156285, 0.157096, 0.156863, 0.15667, 0.156424, 0.156829, 0.156372, 0.156332, 0.157851, 0.156612, 0.156822, 0.157526, 0.15661, 0.156585, 0.157084, 0.156721, 0.156724, 0.156584, 0.157624, 0.15678, 0.156635, 0.160221, 0.16041], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 4, 0, 6, 0, 1, 0, 3, 22, 0, 29, 0, 1, 0, 0, 1, 1]': ([0.179749, 0.180074, 0.166973, 0.156592, 0.156682, 0.156747, 0.156259, 0.156285, 0.157096, 0.156863, 0.15667, 0.156424, 0.156829, 0.156372, 0.156332, 0.157851, 0.156612, 0.156822, 0.157526, 0.15661, 0.156585, 0.157084, 0.156721, 0.156724, 0.156584, 0.157624, 0.15678, 0.156635, 0.160221, 0.16041], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	5
        Additions: 		9382
        Multiplications: 	2640
        Divisions: 		0
        Logical: 		0
        Reads: 			13942
        Writes: 		1374
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest67.exe __orio_perftest67.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest67.exe  
Program Test Output: 
{'[0, 3, 4, 6, 6, 0, 1, 0, 3, 0, 15, 21, 2, 0, 0, 0, 1, 0]' : 0.300549}
{'[0, 3, 4, 6, 6, 0, 1, 0, 3, 0, 15, 21, 2, 0, 0, 0, 1, 0]' : 0.299748}
{'[0, 3, 4, 6, 6, 0, 1, 0, 3, 0, 15, 21, 2, 0, 0, 0, 1, 0]' : 0.299601}
{'[0, 3, 4, 6, 6, 0, 1, 0, 3, 0, 15, 21, 2, 0, 0, 0, 1, 0]' : 0.302853}
{'[0, 3, 4, 6, 6, 0, 1, 0, 3, 0, 15, 21, 2, 0, 0, 0, 1, 0]' : 0.306394}
{'[0, 3, 4, 6, 6, 0, 1, 0, 3, 0, 15, 21, 2, 0, 0, 0, 1, 0]' : 0.298526}
{'[0, 3, 4, 6, 6, 0, 1, 0, 3, 0, 15, 21, 2, 0, 0, 0, 1, 0]' : 0.30614}
{'[0, 3, 4, 6, 6, 0, 1, 0, 3, 0, 15, 21, 2, 0, 0, 0, 1, 0]' : 0.30754}
{'[0, 3, 4, 6, 6, 0, 1, 0, 3, 0, 15, 21, 2, 0, 0, 0, 1, 0]' : 0.303505}
{'[0, 3, 4, 6, 6, 0, 1, 0, 3, 0, 15, 21, 2, 0, 0, 0, 1, 0]' : 0.303822}
{'[0, 3, 4, 6, 6, 0, 1, 0, 3, 0, 15, 21, 2, 0, 0, 0, 1, 0]' : 0.303052}
{'[0, 3, 4, 6, 6, 0, 1, 0, 3, 0, 15, 21, 2, 0, 0, 0, 1, 0]' : 0.307144}
{'[0, 3, 4, 6, 6, 0, 1, 0, 3, 0, 15, 21, 2, 0, 0, 0, 1, 0]' : 0.308272}
{'[0, 3, 4, 6, 6, 0, 1, 0, 3, 0, 15, 21, 2, 0, 0, 0, 1, 0]' : 0.304683}
{'[0, 3, 4, 6, 6, 0, 1, 0, 3, 0, 15, 21, 2, 0, 0, 0, 1, 0]' : 0.310017}
{'[0, 3, 4, 6, 6, 0, 1, 0, 3, 0, 15, 21, 2, 0, 0, 0, 1, 0]' : 0.3045}
{'[0, 3, 4, 6, 6, 0, 1, 0, 3, 0, 15, 21, 2, 0, 0, 0, 1, 0]' : 0.30565}
{'[0, 3, 4, 6, 6, 0, 1, 0, 3, 0, 15, 21, 2, 0, 0, 0, 1, 0]' : 0.306054}
{'[0, 3, 4, 6, 6, 0, 1, 0, 3, 0, 15, 21, 2, 0, 0, 0, 1, 0]' : 0.307007}
{'[0, 3, 4, 6, 6, 0, 1, 0, 3, 0, 15, 21, 2, 0, 0, 0, 1, 0]' : 0.308308}
{'[0, 3, 4, 6, 6, 0, 1, 0, 3, 0, 15, 21, 2, 0, 0, 0, 1, 0]' : 0.304995}
{'[0, 3, 4, 6, 6, 0, 1, 0, 3, 0, 15, 21, 2, 0, 0, 0, 1, 0]' : 0.30843}
{'[0, 3, 4, 6, 6, 0, 1, 0, 3, 0, 15, 21, 2, 0, 0, 0, 1, 0]' : 0.307746}
{'[0, 3, 4, 6, 6, 0, 1, 0, 3, 0, 15, 21, 2, 0, 0, 0, 1, 0]' : 0.307399}
{'[0, 3, 4, 6, 6, 0, 1, 0, 3, 0, 15, 21, 2, 0, 0, 0, 1, 0]' : 0.305898}
{'[0, 3, 4, 6, 6, 0, 1, 0, 3, 0, 15, 21, 2, 0, 0, 0, 1, 0]' : 0.30546}
{'[0, 3, 4, 6, 6, 0, 1, 0, 3, 0, 15, 21, 2, 0, 0, 0, 1, 0]' : 0.305069}
{'[0, 3, 4, 6, 6, 0, 1, 0, 3, 0, 15, 21, 2, 0, 0, 0, 1, 0]' : 0.309693}
{'[0, 3, 4, 6, 6, 0, 1, 0, 3, 0, 15, 21, 2, 0, 0, 0, 1, 0]' : 0.306813}
{'[0, 3, 4, 6, 6, 0, 1, 0, 3, 0, 15, 21, 2, 0, 0, 0, 1, 0]' : 0.305508}

out:
 ["{'[0, 3, 4, 6, 6, 0, 1, 0, 3, 0, 15, 21, 2, 0, 0, 0, 1, 0]' : 0.300549}", "{'[0, 3, 4, 6, 6, 0, 1, 0, 3, 0, 15, 21, 2, 0, 0, 0, 1, 0]' : 0.299748}", "{'[0, 3, 4, 6, 6, 0, 1, 0, 3, 0, 15, 21, 2, 0, 0, 0, 1, 0]' : 0.299601}", "{'[0, 3, 4, 6, 6, 0, 1, 0, 3, 0, 15, 21, 2, 0, 0, 0, 1, 0]' : 0.302853}", "{'[0, 3, 4, 6, 6, 0, 1, 0, 3, 0, 15, 21, 2, 0, 0, 0, 1, 0]' : 0.306394}", "{'[0, 3, 4, 6, 6, 0, 1, 0, 3, 0, 15, 21, 2, 0, 0, 0, 1, 0]' : 0.298526}", "{'[0, 3, 4, 6, 6, 0, 1, 0, 3, 0, 15, 21, 2, 0, 0, 0, 1, 0]' : 0.30614}", "{'[0, 3, 4, 6, 6, 0, 1, 0, 3, 0, 15, 21, 2, 0, 0, 0, 1, 0]' : 0.30754}", "{'[0, 3, 4, 6, 6, 0, 1, 0, 3, 0, 15, 21, 2, 0, 0, 0, 1, 0]' : 0.303505}", "{'[0, 3, 4, 6, 6, 0, 1, 0, 3, 0, 15, 21, 2, 0, 0, 0, 1, 0]' : 0.303822}", "{'[0, 3, 4, 6, 6, 0, 1, 0, 3, 0, 15, 21, 2, 0, 0, 0, 1, 0]' : 0.303052}", "{'[0, 3, 4, 6, 6, 0, 1, 0, 3, 0, 15, 21, 2, 0, 0, 0, 1, 0]' : 0.307144}", "{'[0, 3, 4, 6, 6, 0, 1, 0, 3, 0, 15, 21, 2, 0, 0, 0, 1, 0]' : 0.308272}", "{'[0, 3, 4, 6, 6, 0, 1, 0, 3, 0, 15, 21, 2, 0, 0, 0, 1, 0]' : 0.304683}", "{'[0, 3, 4, 6, 6, 0, 1, 0, 3, 0, 15, 21, 2, 0, 0, 0, 1, 0]' : 0.310017}", "{'[0, 3, 4, 6, 6, 0, 1, 0, 3, 0, 15, 21, 2, 0, 0, 0, 1, 0]' : 0.3045}", "{'[0, 3, 4, 6, 6, 0, 1, 0, 3, 0, 15, 21, 2, 0, 0, 0, 1, 0]' : 0.30565}", "{'[0, 3, 4, 6, 6, 0, 1, 0, 3, 0, 15, 21, 2, 0, 0, 0, 1, 0]' : 0.306054}", "{'[0, 3, 4, 6, 6, 0, 1, 0, 3, 0, 15, 21, 2, 0, 0, 0, 1, 0]' : 0.307007}", "{'[0, 3, 4, 6, 6, 0, 1, 0, 3, 0, 15, 21, 2, 0, 0, 0, 1, 0]' : 0.308308}", "{'[0, 3, 4, 6, 6, 0, 1, 0, 3, 0, 15, 21, 2, 0, 0, 0, 1, 0]' : 0.304995}", "{'[0, 3, 4, 6, 6, 0, 1, 0, 3, 0, 15, 21, 2, 0, 0, 0, 1, 0]' : 0.30843}", "{'[0, 3, 4, 6, 6, 0, 1, 0, 3, 0, 15, 21, 2, 0, 0, 0, 1, 0]' : 0.307746}", "{'[0, 3, 4, 6, 6, 0, 1, 0, 3, 0, 15, 21, 2, 0, 0, 0, 1, 0]' : 0.307399}", "{'[0, 3, 4, 6, 6, 0, 1, 0, 3, 0, 15, 21, 2, 0, 0, 0, 1, 0]' : 0.305898}", "{'[0, 3, 4, 6, 6, 0, 1, 0, 3, 0, 15, 21, 2, 0, 0, 0, 1, 0]' : 0.30546}", "{'[0, 3, 4, 6, 6, 0, 1, 0, 3, 0, 15, 21, 2, 0, 0, 0, 1, 0]' : 0.305069}", "{'[0, 3, 4, 6, 6, 0, 1, 0, 3, 0, 15, 21, 2, 0, 0, 0, 1, 0]' : 0.309693}", "{'[0, 3, 4, 6, 6, 0, 1, 0, 3, 0, 15, 21, 2, 0, 0, 0, 1, 0]' : 0.306813}", "{'[0, 3, 4, 6, 6, 0, 1, 0, 3, 0, 15, 21, 2, 0, 0, 0, 1, 0]' : 0.305508}"]
returning from 'run': {'[0, 3, 4, 6, 6, 0, 1, 0, 3, 0, 15, 21, 2, 0, 0, 0, 1, 0]': ([0.300549, 0.299748, 0.299601, 0.302853, 0.306394, 0.298526, 0.30614, 0.30754, 0.303505, 0.303822, 0.303052, 0.307144, 0.308272, 0.304683, 0.310017, 0.3045, 0.30565, 0.306054, 0.307007, 0.308308, 0.304995, 0.30843, 0.307746, 0.307399, 0.305898, 0.30546, 0.305069, 0.309693, 0.306813, 0.305508], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 3, 4, 6, 6, 0, 1, 0, 3, 0, 15, 21, 2, 0, 0, 0, 1, 0]': ([0.300549, 0.299748, 0.299601, 0.302853, 0.306394, 0.298526, 0.30614, 0.30754, 0.303505, 0.303822, 0.303052, 0.307144, 0.308272, 0.304683, 0.310017, 0.3045, 0.30565, 0.306054, 0.307007, 0.308308, 0.304995, 0.30843, 0.307746, 0.307399, 0.305898, 0.30546, 0.305069, 0.309693, 0.306813, 0.305508], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		361
        Multiplications: 	124
        Divisions: 		0
        Logical: 		0
        Reads: 			813
        Writes: 		168
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest68.exe __orio_perftest68.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest68.exe  
Program Test Output: 
{'[0, 2, 2, 3, 6, 5, 1, 0, 3, 0, 29, 29, 0, 0, 0, 1, 1, 1]' : 0.19937}
{'[0, 2, 2, 3, 6, 5, 1, 0, 3, 0, 29, 29, 0, 0, 0, 1, 1, 1]' : 0.188224}
{'[0, 2, 2, 3, 6, 5, 1, 0, 3, 0, 29, 29, 0, 0, 0, 1, 1, 1]' : 0.165732}
{'[0, 2, 2, 3, 6, 5, 1, 0, 3, 0, 29, 29, 0, 0, 0, 1, 1, 1]' : 0.165452}
{'[0, 2, 2, 3, 6, 5, 1, 0, 3, 0, 29, 29, 0, 0, 0, 1, 1, 1]' : 0.165864}
{'[0, 2, 2, 3, 6, 5, 1, 0, 3, 0, 29, 29, 0, 0, 0, 1, 1, 1]' : 0.166033}
{'[0, 2, 2, 3, 6, 5, 1, 0, 3, 0, 29, 29, 0, 0, 0, 1, 1, 1]' : 0.165628}
{'[0, 2, 2, 3, 6, 5, 1, 0, 3, 0, 29, 29, 0, 0, 0, 1, 1, 1]' : 0.165475}
{'[0, 2, 2, 3, 6, 5, 1, 0, 3, 0, 29, 29, 0, 0, 0, 1, 1, 1]' : 0.165448}
{'[0, 2, 2, 3, 6, 5, 1, 0, 3, 0, 29, 29, 0, 0, 0, 1, 1, 1]' : 0.165481}
{'[0, 2, 2, 3, 6, 5, 1, 0, 3, 0, 29, 29, 0, 0, 0, 1, 1, 1]' : 0.165479}
{'[0, 2, 2, 3, 6, 5, 1, 0, 3, 0, 29, 29, 0, 0, 0, 1, 1, 1]' : 0.16557}
{'[0, 2, 2, 3, 6, 5, 1, 0, 3, 0, 29, 29, 0, 0, 0, 1, 1, 1]' : 0.165639}
{'[0, 2, 2, 3, 6, 5, 1, 0, 3, 0, 29, 29, 0, 0, 0, 1, 1, 1]' : 0.165498}
{'[0, 2, 2, 3, 6, 5, 1, 0, 3, 0, 29, 29, 0, 0, 0, 1, 1, 1]' : 0.16594}
{'[0, 2, 2, 3, 6, 5, 1, 0, 3, 0, 29, 29, 0, 0, 0, 1, 1, 1]' : 0.166047}
{'[0, 2, 2, 3, 6, 5, 1, 0, 3, 0, 29, 29, 0, 0, 0, 1, 1, 1]' : 0.16555}
{'[0, 2, 2, 3, 6, 5, 1, 0, 3, 0, 29, 29, 0, 0, 0, 1, 1, 1]' : 0.165525}
{'[0, 2, 2, 3, 6, 5, 1, 0, 3, 0, 29, 29, 0, 0, 0, 1, 1, 1]' : 0.165492}
{'[0, 2, 2, 3, 6, 5, 1, 0, 3, 0, 29, 29, 0, 0, 0, 1, 1, 1]' : 0.165548}
{'[0, 2, 2, 3, 6, 5, 1, 0, 3, 0, 29, 29, 0, 0, 0, 1, 1, 1]' : 0.16549}
{'[0, 2, 2, 3, 6, 5, 1, 0, 3, 0, 29, 29, 0, 0, 0, 1, 1, 1]' : 0.165508}
{'[0, 2, 2, 3, 6, 5, 1, 0, 3, 0, 29, 29, 0, 0, 0, 1, 1, 1]' : 0.165826}
{'[0, 2, 2, 3, 6, 5, 1, 0, 3, 0, 29, 29, 0, 0, 0, 1, 1, 1]' : 0.165833}
{'[0, 2, 2, 3, 6, 5, 1, 0, 3, 0, 29, 29, 0, 0, 0, 1, 1, 1]' : 0.166197}
{'[0, 2, 2, 3, 6, 5, 1, 0, 3, 0, 29, 29, 0, 0, 0, 1, 1, 1]' : 0.165525}
{'[0, 2, 2, 3, 6, 5, 1, 0, 3, 0, 29, 29, 0, 0, 0, 1, 1, 1]' : 0.165585}
{'[0, 2, 2, 3, 6, 5, 1, 0, 3, 0, 29, 29, 0, 0, 0, 1, 1, 1]' : 0.165771}
{'[0, 2, 2, 3, 6, 5, 1, 0, 3, 0, 29, 29, 0, 0, 0, 1, 1, 1]' : 0.165552}
{'[0, 2, 2, 3, 6, 5, 1, 0, 3, 0, 29, 29, 0, 0, 0, 1, 1, 1]' : 0.165525}

out:
 ["{'[0, 2, 2, 3, 6, 5, 1, 0, 3, 0, 29, 29, 0, 0, 0, 1, 1, 1]' : 0.19937}", "{'[0, 2, 2, 3, 6, 5, 1, 0, 3, 0, 29, 29, 0, 0, 0, 1, 1, 1]' : 0.188224}", "{'[0, 2, 2, 3, 6, 5, 1, 0, 3, 0, 29, 29, 0, 0, 0, 1, 1, 1]' : 0.165732}", "{'[0, 2, 2, 3, 6, 5, 1, 0, 3, 0, 29, 29, 0, 0, 0, 1, 1, 1]' : 0.165452}", "{'[0, 2, 2, 3, 6, 5, 1, 0, 3, 0, 29, 29, 0, 0, 0, 1, 1, 1]' : 0.165864}", "{'[0, 2, 2, 3, 6, 5, 1, 0, 3, 0, 29, 29, 0, 0, 0, 1, 1, 1]' : 0.166033}", "{'[0, 2, 2, 3, 6, 5, 1, 0, 3, 0, 29, 29, 0, 0, 0, 1, 1, 1]' : 0.165628}", "{'[0, 2, 2, 3, 6, 5, 1, 0, 3, 0, 29, 29, 0, 0, 0, 1, 1, 1]' : 0.165475}", "{'[0, 2, 2, 3, 6, 5, 1, 0, 3, 0, 29, 29, 0, 0, 0, 1, 1, 1]' : 0.165448}", "{'[0, 2, 2, 3, 6, 5, 1, 0, 3, 0, 29, 29, 0, 0, 0, 1, 1, 1]' : 0.165481}", "{'[0, 2, 2, 3, 6, 5, 1, 0, 3, 0, 29, 29, 0, 0, 0, 1, 1, 1]' : 0.165479}", "{'[0, 2, 2, 3, 6, 5, 1, 0, 3, 0, 29, 29, 0, 0, 0, 1, 1, 1]' : 0.16557}", "{'[0, 2, 2, 3, 6, 5, 1, 0, 3, 0, 29, 29, 0, 0, 0, 1, 1, 1]' : 0.165639}", "{'[0, 2, 2, 3, 6, 5, 1, 0, 3, 0, 29, 29, 0, 0, 0, 1, 1, 1]' : 0.165498}", "{'[0, 2, 2, 3, 6, 5, 1, 0, 3, 0, 29, 29, 0, 0, 0, 1, 1, 1]' : 0.16594}", "{'[0, 2, 2, 3, 6, 5, 1, 0, 3, 0, 29, 29, 0, 0, 0, 1, 1, 1]' : 0.166047}", "{'[0, 2, 2, 3, 6, 5, 1, 0, 3, 0, 29, 29, 0, 0, 0, 1, 1, 1]' : 0.16555}", "{'[0, 2, 2, 3, 6, 5, 1, 0, 3, 0, 29, 29, 0, 0, 0, 1, 1, 1]' : 0.165525}", "{'[0, 2, 2, 3, 6, 5, 1, 0, 3, 0, 29, 29, 0, 0, 0, 1, 1, 1]' : 0.165492}", "{'[0, 2, 2, 3, 6, 5, 1, 0, 3, 0, 29, 29, 0, 0, 0, 1, 1, 1]' : 0.165548}", "{'[0, 2, 2, 3, 6, 5, 1, 0, 3, 0, 29, 29, 0, 0, 0, 1, 1, 1]' : 0.16549}", "{'[0, 2, 2, 3, 6, 5, 1, 0, 3, 0, 29, 29, 0, 0, 0, 1, 1, 1]' : 0.165508}", "{'[0, 2, 2, 3, 6, 5, 1, 0, 3, 0, 29, 29, 0, 0, 0, 1, 1, 1]' : 0.165826}", "{'[0, 2, 2, 3, 6, 5, 1, 0, 3, 0, 29, 29, 0, 0, 0, 1, 1, 1]' : 0.165833}", "{'[0, 2, 2, 3, 6, 5, 1, 0, 3, 0, 29, 29, 0, 0, 0, 1, 1, 1]' : 0.166197}", "{'[0, 2, 2, 3, 6, 5, 1, 0, 3, 0, 29, 29, 0, 0, 0, 1, 1, 1]' : 0.165525}", "{'[0, 2, 2, 3, 6, 5, 1, 0, 3, 0, 29, 29, 0, 0, 0, 1, 1, 1]' : 0.165585}", "{'[0, 2, 2, 3, 6, 5, 1, 0, 3, 0, 29, 29, 0, 0, 0, 1, 1, 1]' : 0.165771}", "{'[0, 2, 2, 3, 6, 5, 1, 0, 3, 0, 29, 29, 0, 0, 0, 1, 1, 1]' : 0.165552}", "{'[0, 2, 2, 3, 6, 5, 1, 0, 3, 0, 29, 29, 0, 0, 0, 1, 1, 1]' : 0.165525}"]
returning from 'run': {'[0, 2, 2, 3, 6, 5, 1, 0, 3, 0, 29, 29, 0, 0, 0, 1, 1, 1]': ([0.19937, 0.188224, 0.165732, 0.165452, 0.165864, 0.166033, 0.165628, 0.165475, 0.165448, 0.165481, 0.165479, 0.16557, 0.165639, 0.165498, 0.16594, 0.166047, 0.16555, 0.165525, 0.165492, 0.165548, 0.16549, 0.165508, 0.165826, 0.165833, 0.166197, 0.165525, 0.165585, 0.165771, 0.165552, 0.165525], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 2, 3, 6, 5, 1, 0, 3, 0, 29, 29, 0, 0, 0, 1, 1, 1]': ([0.19937, 0.188224, 0.165732, 0.165452, 0.165864, 0.166033, 0.165628, 0.165475, 0.165448, 0.165481, 0.165479, 0.16557, 0.165639, 0.165498, 0.16594, 0.166047, 0.16555, 0.165525, 0.165492, 0.165548, 0.16549, 0.165508, 0.165826, 0.165833, 0.166197, 0.165525, 0.165585, 0.165771, 0.165552, 0.165525], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = kkk
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	4
        Additions: 		2477
        Multiplications: 	660
        Divisions: 		0
        Logical: 		0
        Reads: 			3862
        Writes: 		406
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest69.exe __orio_perftest69.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest69.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest69.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest69.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest69.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	48
        Max loop nest depth: 	5
        Additions: 		9435
        Multiplications: 	2480
        Divisions: 		0
        Logical: 		0
        Reads: 			13977
        Writes: 		1414
        Comparisons:		48
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest70.exe __orio_perftest70.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest70.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest70.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest70.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest70.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	5
        Additions: 		213
        Multiplications: 	60
        Divisions: 		0
        Logical: 		0
        Reads: 			506
        Writes: 		123
        Comparisons:		22
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest71.exe __orio_perftest71.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest71.exe  
Program Test Output: 
{'[0, 3, 0, 2, 6, 6, 1, 0, 3, 3, 0, 3, 0, 0, 0, 1, 1, 0]' : 0.132223}
{'[0, 3, 0, 2, 6, 6, 1, 0, 3, 3, 0, 3, 0, 0, 0, 1, 1, 0]' : 0.132296}
{'[0, 3, 0, 2, 6, 6, 1, 0, 3, 3, 0, 3, 0, 0, 0, 1, 1, 0]' : 0.1323}
{'[0, 3, 0, 2, 6, 6, 1, 0, 3, 3, 0, 3, 0, 0, 0, 1, 1, 0]' : 0.132255}
{'[0, 3, 0, 2, 6, 6, 1, 0, 3, 3, 0, 3, 0, 0, 0, 1, 1, 0]' : 0.120187}
{'[0, 3, 0, 2, 6, 6, 1, 0, 3, 3, 0, 3, 0, 0, 0, 1, 1, 0]' : 0.114584}
{'[0, 3, 0, 2, 6, 6, 1, 0, 3, 3, 0, 3, 0, 0, 0, 1, 1, 0]' : 0.114583}
{'[0, 3, 0, 2, 6, 6, 1, 0, 3, 3, 0, 3, 0, 0, 0, 1, 1, 0]' : 0.114715}
{'[0, 3, 0, 2, 6, 6, 1, 0, 3, 3, 0, 3, 0, 0, 0, 1, 1, 0]' : 0.114599}
{'[0, 3, 0, 2, 6, 6, 1, 0, 3, 3, 0, 3, 0, 0, 0, 1, 1, 0]' : 0.114908}
{'[0, 3, 0, 2, 6, 6, 1, 0, 3, 3, 0, 3, 0, 0, 0, 1, 1, 0]' : 0.114681}
{'[0, 3, 0, 2, 6, 6, 1, 0, 3, 3, 0, 3, 0, 0, 0, 1, 1, 0]' : 0.114669}
{'[0, 3, 0, 2, 6, 6, 1, 0, 3, 3, 0, 3, 0, 0, 0, 1, 1, 0]' : 0.114535}
{'[0, 3, 0, 2, 6, 6, 1, 0, 3, 3, 0, 3, 0, 0, 0, 1, 1, 0]' : 0.114589}
{'[0, 3, 0, 2, 6, 6, 1, 0, 3, 3, 0, 3, 0, 0, 0, 1, 1, 0]' : 0.1148}
{'[0, 3, 0, 2, 6, 6, 1, 0, 3, 3, 0, 3, 0, 0, 0, 1, 1, 0]' : 0.114986}
{'[0, 3, 0, 2, 6, 6, 1, 0, 3, 3, 0, 3, 0, 0, 0, 1, 1, 0]' : 0.114517}
{'[0, 3, 0, 2, 6, 6, 1, 0, 3, 3, 0, 3, 0, 0, 0, 1, 1, 0]' : 0.114602}
{'[0, 3, 0, 2, 6, 6, 1, 0, 3, 3, 0, 3, 0, 0, 0, 1, 1, 0]' : 0.114827}
{'[0, 3, 0, 2, 6, 6, 1, 0, 3, 3, 0, 3, 0, 0, 0, 1, 1, 0]' : 0.114757}
{'[0, 3, 0, 2, 6, 6, 1, 0, 3, 3, 0, 3, 0, 0, 0, 1, 1, 0]' : 0.114653}
{'[0, 3, 0, 2, 6, 6, 1, 0, 3, 3, 0, 3, 0, 0, 0, 1, 1, 0]' : 0.114763}
{'[0, 3, 0, 2, 6, 6, 1, 0, 3, 3, 0, 3, 0, 0, 0, 1, 1, 0]' : 0.114558}
{'[0, 3, 0, 2, 6, 6, 1, 0, 3, 3, 0, 3, 0, 0, 0, 1, 1, 0]' : 0.114664}
{'[0, 3, 0, 2, 6, 6, 1, 0, 3, 3, 0, 3, 0, 0, 0, 1, 1, 0]' : 0.114772}
{'[0, 3, 0, 2, 6, 6, 1, 0, 3, 3, 0, 3, 0, 0, 0, 1, 1, 0]' : 0.114522}
{'[0, 3, 0, 2, 6, 6, 1, 0, 3, 3, 0, 3, 0, 0, 0, 1, 1, 0]' : 0.11451}
{'[0, 3, 0, 2, 6, 6, 1, 0, 3, 3, 0, 3, 0, 0, 0, 1, 1, 0]' : 0.114782}
{'[0, 3, 0, 2, 6, 6, 1, 0, 3, 3, 0, 3, 0, 0, 0, 1, 1, 0]' : 0.11496}
{'[0, 3, 0, 2, 6, 6, 1, 0, 3, 3, 0, 3, 0, 0, 0, 1, 1, 0]' : 0.114753}

out:
 ["{'[0, 3, 0, 2, 6, 6, 1, 0, 3, 3, 0, 3, 0, 0, 0, 1, 1, 0]' : 0.132223}", "{'[0, 3, 0, 2, 6, 6, 1, 0, 3, 3, 0, 3, 0, 0, 0, 1, 1, 0]' : 0.132296}", "{'[0, 3, 0, 2, 6, 6, 1, 0, 3, 3, 0, 3, 0, 0, 0, 1, 1, 0]' : 0.1323}", "{'[0, 3, 0, 2, 6, 6, 1, 0, 3, 3, 0, 3, 0, 0, 0, 1, 1, 0]' : 0.132255}", "{'[0, 3, 0, 2, 6, 6, 1, 0, 3, 3, 0, 3, 0, 0, 0, 1, 1, 0]' : 0.120187}", "{'[0, 3, 0, 2, 6, 6, 1, 0, 3, 3, 0, 3, 0, 0, 0, 1, 1, 0]' : 0.114584}", "{'[0, 3, 0, 2, 6, 6, 1, 0, 3, 3, 0, 3, 0, 0, 0, 1, 1, 0]' : 0.114583}", "{'[0, 3, 0, 2, 6, 6, 1, 0, 3, 3, 0, 3, 0, 0, 0, 1, 1, 0]' : 0.114715}", "{'[0, 3, 0, 2, 6, 6, 1, 0, 3, 3, 0, 3, 0, 0, 0, 1, 1, 0]' : 0.114599}", "{'[0, 3, 0, 2, 6, 6, 1, 0, 3, 3, 0, 3, 0, 0, 0, 1, 1, 0]' : 0.114908}", "{'[0, 3, 0, 2, 6, 6, 1, 0, 3, 3, 0, 3, 0, 0, 0, 1, 1, 0]' : 0.114681}", "{'[0, 3, 0, 2, 6, 6, 1, 0, 3, 3, 0, 3, 0, 0, 0, 1, 1, 0]' : 0.114669}", "{'[0, 3, 0, 2, 6, 6, 1, 0, 3, 3, 0, 3, 0, 0, 0, 1, 1, 0]' : 0.114535}", "{'[0, 3, 0, 2, 6, 6, 1, 0, 3, 3, 0, 3, 0, 0, 0, 1, 1, 0]' : 0.114589}", "{'[0, 3, 0, 2, 6, 6, 1, 0, 3, 3, 0, 3, 0, 0, 0, 1, 1, 0]' : 0.1148}", "{'[0, 3, 0, 2, 6, 6, 1, 0, 3, 3, 0, 3, 0, 0, 0, 1, 1, 0]' : 0.114986}", "{'[0, 3, 0, 2, 6, 6, 1, 0, 3, 3, 0, 3, 0, 0, 0, 1, 1, 0]' : 0.114517}", "{'[0, 3, 0, 2, 6, 6, 1, 0, 3, 3, 0, 3, 0, 0, 0, 1, 1, 0]' : 0.114602}", "{'[0, 3, 0, 2, 6, 6, 1, 0, 3, 3, 0, 3, 0, 0, 0, 1, 1, 0]' : 0.114827}", "{'[0, 3, 0, 2, 6, 6, 1, 0, 3, 3, 0, 3, 0, 0, 0, 1, 1, 0]' : 0.114757}", "{'[0, 3, 0, 2, 6, 6, 1, 0, 3, 3, 0, 3, 0, 0, 0, 1, 1, 0]' : 0.114653}", "{'[0, 3, 0, 2, 6, 6, 1, 0, 3, 3, 0, 3, 0, 0, 0, 1, 1, 0]' : 0.114763}", "{'[0, 3, 0, 2, 6, 6, 1, 0, 3, 3, 0, 3, 0, 0, 0, 1, 1, 0]' : 0.114558}", "{'[0, 3, 0, 2, 6, 6, 1, 0, 3, 3, 0, 3, 0, 0, 0, 1, 1, 0]' : 0.114664}", "{'[0, 3, 0, 2, 6, 6, 1, 0, 3, 3, 0, 3, 0, 0, 0, 1, 1, 0]' : 0.114772}", "{'[0, 3, 0, 2, 6, 6, 1, 0, 3, 3, 0, 3, 0, 0, 0, 1, 1, 0]' : 0.114522}", "{'[0, 3, 0, 2, 6, 6, 1, 0, 3, 3, 0, 3, 0, 0, 0, 1, 1, 0]' : 0.11451}", "{'[0, 3, 0, 2, 6, 6, 1, 0, 3, 3, 0, 3, 0, 0, 0, 1, 1, 0]' : 0.114782}", "{'[0, 3, 0, 2, 6, 6, 1, 0, 3, 3, 0, 3, 0, 0, 0, 1, 1, 0]' : 0.11496}", "{'[0, 3, 0, 2, 6, 6, 1, 0, 3, 3, 0, 3, 0, 0, 0, 1, 1, 0]' : 0.114753}"]
returning from 'run': {'[0, 3, 0, 2, 6, 6, 1, 0, 3, 3, 0, 3, 0, 0, 0, 1, 1, 0]': ([0.132223, 0.132296, 0.1323, 0.132255, 0.120187, 0.114584, 0.114583, 0.114715, 0.114599, 0.114908, 0.114681, 0.114669, 0.114535, 0.114589, 0.1148, 0.114986, 0.114517, 0.114602, 0.114827, 0.114757, 0.114653, 0.114763, 0.114558, 0.114664, 0.114772, 0.114522, 0.11451, 0.114782, 0.11496, 0.114753], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 3, 0, 2, 6, 6, 1, 0, 3, 3, 0, 3, 0, 0, 0, 1, 1, 0]': ([0.132223, 0.132296, 0.1323, 0.132255, 0.120187, 0.114584, 0.114583, 0.114715, 0.114599, 0.114908, 0.114681, 0.114669, 0.114535, 0.114589, 0.1148, 0.114986, 0.114517, 0.114602, 0.114827, 0.114757, 0.114653, 0.114763, 0.114558, 0.114664, 0.114772, 0.114522, 0.11451, 0.114782, 0.11496, 0.114753], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	38
        Max loop nest depth: 	5
        Additions: 		907
        Multiplications: 	378
        Divisions: 		0
        Logical: 		0
        Reads: 			1913
        Writes: 		371
        Comparisons:		38
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest72.exe __orio_perftest72.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest72.exe  
Program Test Output: 
{'[0, 1, 4, 1, 6, 4, 1, 0, 3, 11, 3, 0, 1, 1, 0, 1, 1, 1]' : 0.101356}
{'[0, 1, 4, 1, 6, 4, 1, 0, 3, 11, 3, 0, 1, 1, 0, 1, 1, 1]' : 0.101301}
{'[0, 1, 4, 1, 6, 4, 1, 0, 3, 11, 3, 0, 1, 1, 0, 1, 1, 1]' : 0.101097}
{'[0, 1, 4, 1, 6, 4, 1, 0, 3, 11, 3, 0, 1, 1, 0, 1, 1, 1]' : 0.101195}
{'[0, 1, 4, 1, 6, 4, 1, 0, 3, 11, 3, 0, 1, 1, 0, 1, 1, 1]' : 0.101006}
{'[0, 1, 4, 1, 6, 4, 1, 0, 3, 11, 3, 0, 1, 1, 0, 1, 1, 1]' : 0.098635}
{'[0, 1, 4, 1, 6, 4, 1, 0, 3, 11, 3, 0, 1, 1, 0, 1, 1, 1]' : 0.0986979}
{'[0, 1, 4, 1, 6, 4, 1, 0, 3, 11, 3, 0, 1, 1, 0, 1, 1, 1]' : 0.098521}
{'[0, 1, 4, 1, 6, 4, 1, 0, 3, 11, 3, 0, 1, 1, 0, 1, 1, 1]' : 0.0985019}
{'[0, 1, 4, 1, 6, 4, 1, 0, 3, 11, 3, 0, 1, 1, 0, 1, 1, 1]' : 0.098465}
{'[0, 1, 4, 1, 6, 4, 1, 0, 3, 11, 3, 0, 1, 1, 0, 1, 1, 1]' : 0.098639}
{'[0, 1, 4, 1, 6, 4, 1, 0, 3, 11, 3, 0, 1, 1, 0, 1, 1, 1]' : 0.098922}
{'[0, 1, 4, 1, 6, 4, 1, 0, 3, 11, 3, 0, 1, 1, 0, 1, 1, 1]' : 0.098386}
{'[0, 1, 4, 1, 6, 4, 1, 0, 3, 11, 3, 0, 1, 1, 0, 1, 1, 1]' : 0.098346}
{'[0, 1, 4, 1, 6, 4, 1, 0, 3, 11, 3, 0, 1, 1, 0, 1, 1, 1]' : 0.0983441}
{'[0, 1, 4, 1, 6, 4, 1, 0, 3, 11, 3, 0, 1, 1, 0, 1, 1, 1]' : 0.098356}
{'[0, 1, 4, 1, 6, 4, 1, 0, 3, 11, 3, 0, 1, 1, 0, 1, 1, 1]' : 0.098398}
{'[0, 1, 4, 1, 6, 4, 1, 0, 3, 11, 3, 0, 1, 1, 0, 1, 1, 1]' : 0.0982761}
{'[0, 1, 4, 1, 6, 4, 1, 0, 3, 11, 3, 0, 1, 1, 0, 1, 1, 1]' : 0.0984361}
{'[0, 1, 4, 1, 6, 4, 1, 0, 3, 11, 3, 0, 1, 1, 0, 1, 1, 1]' : 0.0984421}
{'[0, 1, 4, 1, 6, 4, 1, 0, 3, 11, 3, 0, 1, 1, 0, 1, 1, 1]' : 0.0985038}
{'[0, 1, 4, 1, 6, 4, 1, 0, 3, 11, 3, 0, 1, 1, 0, 1, 1, 1]' : 0.0986261}
{'[0, 1, 4, 1, 6, 4, 1, 0, 3, 11, 3, 0, 1, 1, 0, 1, 1, 1]' : 0.098675}
{'[0, 1, 4, 1, 6, 4, 1, 0, 3, 11, 3, 0, 1, 1, 0, 1, 1, 1]' : 0.098593}
{'[0, 1, 4, 1, 6, 4, 1, 0, 3, 11, 3, 0, 1, 1, 0, 1, 1, 1]' : 0.0987301}
{'[0, 1, 4, 1, 6, 4, 1, 0, 3, 11, 3, 0, 1, 1, 0, 1, 1, 1]' : 0.098511}
{'[0, 1, 4, 1, 6, 4, 1, 0, 3, 11, 3, 0, 1, 1, 0, 1, 1, 1]' : 0.0985651}
{'[0, 1, 4, 1, 6, 4, 1, 0, 3, 11, 3, 0, 1, 1, 0, 1, 1, 1]' : 0.0985439}
{'[0, 1, 4, 1, 6, 4, 1, 0, 3, 11, 3, 0, 1, 1, 0, 1, 1, 1]' : 0.0985148}
{'[0, 1, 4, 1, 6, 4, 1, 0, 3, 11, 3, 0, 1, 1, 0, 1, 1, 1]' : 0.0984969}

out:
 ["{'[0, 1, 4, 1, 6, 4, 1, 0, 3, 11, 3, 0, 1, 1, 0, 1, 1, 1]' : 0.101356}", "{'[0, 1, 4, 1, 6, 4, 1, 0, 3, 11, 3, 0, 1, 1, 0, 1, 1, 1]' : 0.101301}", "{'[0, 1, 4, 1, 6, 4, 1, 0, 3, 11, 3, 0, 1, 1, 0, 1, 1, 1]' : 0.101097}", "{'[0, 1, 4, 1, 6, 4, 1, 0, 3, 11, 3, 0, 1, 1, 0, 1, 1, 1]' : 0.101195}", "{'[0, 1, 4, 1, 6, 4, 1, 0, 3, 11, 3, 0, 1, 1, 0, 1, 1, 1]' : 0.101006}", "{'[0, 1, 4, 1, 6, 4, 1, 0, 3, 11, 3, 0, 1, 1, 0, 1, 1, 1]' : 0.098635}", "{'[0, 1, 4, 1, 6, 4, 1, 0, 3, 11, 3, 0, 1, 1, 0, 1, 1, 1]' : 0.0986979}", "{'[0, 1, 4, 1, 6, 4, 1, 0, 3, 11, 3, 0, 1, 1, 0, 1, 1, 1]' : 0.098521}", "{'[0, 1, 4, 1, 6, 4, 1, 0, 3, 11, 3, 0, 1, 1, 0, 1, 1, 1]' : 0.0985019}", "{'[0, 1, 4, 1, 6, 4, 1, 0, 3, 11, 3, 0, 1, 1, 0, 1, 1, 1]' : 0.098465}", "{'[0, 1, 4, 1, 6, 4, 1, 0, 3, 11, 3, 0, 1, 1, 0, 1, 1, 1]' : 0.098639}", "{'[0, 1, 4, 1, 6, 4, 1, 0, 3, 11, 3, 0, 1, 1, 0, 1, 1, 1]' : 0.098922}", "{'[0, 1, 4, 1, 6, 4, 1, 0, 3, 11, 3, 0, 1, 1, 0, 1, 1, 1]' : 0.098386}", "{'[0, 1, 4, 1, 6, 4, 1, 0, 3, 11, 3, 0, 1, 1, 0, 1, 1, 1]' : 0.098346}", "{'[0, 1, 4, 1, 6, 4, 1, 0, 3, 11, 3, 0, 1, 1, 0, 1, 1, 1]' : 0.0983441}", "{'[0, 1, 4, 1, 6, 4, 1, 0, 3, 11, 3, 0, 1, 1, 0, 1, 1, 1]' : 0.098356}", "{'[0, 1, 4, 1, 6, 4, 1, 0, 3, 11, 3, 0, 1, 1, 0, 1, 1, 1]' : 0.098398}", "{'[0, 1, 4, 1, 6, 4, 1, 0, 3, 11, 3, 0, 1, 1, 0, 1, 1, 1]' : 0.0982761}", "{'[0, 1, 4, 1, 6, 4, 1, 0, 3, 11, 3, 0, 1, 1, 0, 1, 1, 1]' : 0.0984361}", "{'[0, 1, 4, 1, 6, 4, 1, 0, 3, 11, 3, 0, 1, 1, 0, 1, 1, 1]' : 0.0984421}", "{'[0, 1, 4, 1, 6, 4, 1, 0, 3, 11, 3, 0, 1, 1, 0, 1, 1, 1]' : 0.0985038}", "{'[0, 1, 4, 1, 6, 4, 1, 0, 3, 11, 3, 0, 1, 1, 0, 1, 1, 1]' : 0.0986261}", "{'[0, 1, 4, 1, 6, 4, 1, 0, 3, 11, 3, 0, 1, 1, 0, 1, 1, 1]' : 0.098675}", "{'[0, 1, 4, 1, 6, 4, 1, 0, 3, 11, 3, 0, 1, 1, 0, 1, 1, 1]' : 0.098593}", "{'[0, 1, 4, 1, 6, 4, 1, 0, 3, 11, 3, 0, 1, 1, 0, 1, 1, 1]' : 0.0987301}", "{'[0, 1, 4, 1, 6, 4, 1, 0, 3, 11, 3, 0, 1, 1, 0, 1, 1, 1]' : 0.098511}", "{'[0, 1, 4, 1, 6, 4, 1, 0, 3, 11, 3, 0, 1, 1, 0, 1, 1, 1]' : 0.0985651}", "{'[0, 1, 4, 1, 6, 4, 1, 0, 3, 11, 3, 0, 1, 1, 0, 1, 1, 1]' : 0.0985439}", "{'[0, 1, 4, 1, 6, 4, 1, 0, 3, 11, 3, 0, 1, 1, 0, 1, 1, 1]' : 0.0985148}", "{'[0, 1, 4, 1, 6, 4, 1, 0, 3, 11, 3, 0, 1, 1, 0, 1, 1, 1]' : 0.0984969}"]
returning from 'run': {'[0, 1, 4, 1, 6, 4, 1, 0, 3, 11, 3, 0, 1, 1, 0, 1, 1, 1]': ([0.101356, 0.101301, 0.101097, 0.101195, 0.101006, 0.098635, 0.0986979, 0.098521, 0.0985019, 0.098465, 0.098639, 0.098922, 0.098386, 0.098346, 0.0983441, 0.098356, 0.098398, 0.0982761, 0.0984361, 0.0984421, 0.0985038, 0.0986261, 0.098675, 0.098593, 0.0987301, 0.098511, 0.0985651, 0.0985439, 0.0985148, 0.0984969], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 4, 1, 6, 4, 1, 0, 3, 11, 3, 0, 1, 1, 0, 1, 1, 1]': ([0.101356, 0.101301, 0.101097, 0.101195, 0.101006, 0.098635, 0.0986979, 0.098521, 0.0985019, 0.098465, 0.098639, 0.098922, 0.098386, 0.098346, 0.0983441, 0.098356, 0.098398, 0.0982761, 0.0984361, 0.0984421, 0.0985038, 0.0986261, 0.098675, 0.098593, 0.0987301, 0.098511, 0.0985651, 0.0985439, 0.0985148, 0.0984969], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	42
        Max loop nest depth: 	5
        Additions: 		3518
        Multiplications: 	1650
        Divisions: 		0
        Logical: 		0
        Reads: 			6589
        Writes: 		1057
        Comparisons:		42
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest73.exe __orio_perftest73.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest73.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest73.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest73.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest73.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	107
        Max loop nest depth: 	4
        Additions: 		2344
        Multiplications: 	620
        Divisions: 		0
        Logical: 		0
        Reads: 			4179
        Writes: 		755
        Comparisons:		107
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest74.exe __orio_perftest74.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest74.exe  
Program Test Output: 
{'[0, 3, 1, 0, 6, 3, 1, 0, 3, 29, 7, 0, 0, 0, 0, 1, 1, 1]' : 0.247311}
{'[0, 3, 1, 0, 6, 3, 1, 0, 3, 29, 7, 0, 0, 0, 0, 1, 1, 1]' : 0.250964}
{'[0, 3, 1, 0, 6, 3, 1, 0, 3, 29, 7, 0, 0, 0, 0, 1, 1, 1]' : 0.254126}
{'[0, 3, 1, 0, 6, 3, 1, 0, 3, 29, 7, 0, 0, 0, 0, 1, 1, 1]' : 0.251876}
{'[0, 3, 1, 0, 6, 3, 1, 0, 3, 29, 7, 0, 0, 0, 0, 1, 1, 1]' : 0.252829}
{'[0, 3, 1, 0, 6, 3, 1, 0, 3, 29, 7, 0, 0, 0, 0, 1, 1, 1]' : 0.25352}
{'[0, 3, 1, 0, 6, 3, 1, 0, 3, 29, 7, 0, 0, 0, 0, 1, 1, 1]' : 0.261227}
{'[0, 3, 1, 0, 6, 3, 1, 0, 3, 29, 7, 0, 0, 0, 0, 1, 1, 1]' : 0.258669}
{'[0, 3, 1, 0, 6, 3, 1, 0, 3, 29, 7, 0, 0, 0, 0, 1, 1, 1]' : 0.244668}
{'[0, 3, 1, 0, 6, 3, 1, 0, 3, 29, 7, 0, 0, 0, 0, 1, 1, 1]' : 0.256633}
{'[0, 3, 1, 0, 6, 3, 1, 0, 3, 29, 7, 0, 0, 0, 0, 1, 1, 1]' : 0.258985}
{'[0, 3, 1, 0, 6, 3, 1, 0, 3, 29, 7, 0, 0, 0, 0, 1, 1, 1]' : 0.253536}
{'[0, 3, 1, 0, 6, 3, 1, 0, 3, 29, 7, 0, 0, 0, 0, 1, 1, 1]' : 0.255336}
{'[0, 3, 1, 0, 6, 3, 1, 0, 3, 29, 7, 0, 0, 0, 0, 1, 1, 1]' : 0.257255}
{'[0, 3, 1, 0, 6, 3, 1, 0, 3, 29, 7, 0, 0, 0, 0, 1, 1, 1]' : 0.25919}
{'[0, 3, 1, 0, 6, 3, 1, 0, 3, 29, 7, 0, 0, 0, 0, 1, 1, 1]' : 0.259426}
{'[0, 3, 1, 0, 6, 3, 1, 0, 3, 29, 7, 0, 0, 0, 0, 1, 1, 1]' : 0.255279}
{'[0, 3, 1, 0, 6, 3, 1, 0, 3, 29, 7, 0, 0, 0, 0, 1, 1, 1]' : 0.259634}
{'[0, 3, 1, 0, 6, 3, 1, 0, 3, 29, 7, 0, 0, 0, 0, 1, 1, 1]' : 0.253163}
{'[0, 3, 1, 0, 6, 3, 1, 0, 3, 29, 7, 0, 0, 0, 0, 1, 1, 1]' : 0.258175}
{'[0, 3, 1, 0, 6, 3, 1, 0, 3, 29, 7, 0, 0, 0, 0, 1, 1, 1]' : 0.261468}
{'[0, 3, 1, 0, 6, 3, 1, 0, 3, 29, 7, 0, 0, 0, 0, 1, 1, 1]' : 0.260551}
{'[0, 3, 1, 0, 6, 3, 1, 0, 3, 29, 7, 0, 0, 0, 0, 1, 1, 1]' : 0.256741}
{'[0, 3, 1, 0, 6, 3, 1, 0, 3, 29, 7, 0, 0, 0, 0, 1, 1, 1]' : 0.255226}
{'[0, 3, 1, 0, 6, 3, 1, 0, 3, 29, 7, 0, 0, 0, 0, 1, 1, 1]' : 0.26259}
{'[0, 3, 1, 0, 6, 3, 1, 0, 3, 29, 7, 0, 0, 0, 0, 1, 1, 1]' : 0.260804}
{'[0, 3, 1, 0, 6, 3, 1, 0, 3, 29, 7, 0, 0, 0, 0, 1, 1, 1]' : 0.25394}
{'[0, 3, 1, 0, 6, 3, 1, 0, 3, 29, 7, 0, 0, 0, 0, 1, 1, 1]' : 0.261538}
{'[0, 3, 1, 0, 6, 3, 1, 0, 3, 29, 7, 0, 0, 0, 0, 1, 1, 1]' : 0.25477}
{'[0, 3, 1, 0, 6, 3, 1, 0, 3, 29, 7, 0, 0, 0, 0, 1, 1, 1]' : 0.259024}

out:
 ["{'[0, 3, 1, 0, 6, 3, 1, 0, 3, 29, 7, 0, 0, 0, 0, 1, 1, 1]' : 0.247311}", "{'[0, 3, 1, 0, 6, 3, 1, 0, 3, 29, 7, 0, 0, 0, 0, 1, 1, 1]' : 0.250964}", "{'[0, 3, 1, 0, 6, 3, 1, 0, 3, 29, 7, 0, 0, 0, 0, 1, 1, 1]' : 0.254126}", "{'[0, 3, 1, 0, 6, 3, 1, 0, 3, 29, 7, 0, 0, 0, 0, 1, 1, 1]' : 0.251876}", "{'[0, 3, 1, 0, 6, 3, 1, 0, 3, 29, 7, 0, 0, 0, 0, 1, 1, 1]' : 0.252829}", "{'[0, 3, 1, 0, 6, 3, 1, 0, 3, 29, 7, 0, 0, 0, 0, 1, 1, 1]' : 0.25352}", "{'[0, 3, 1, 0, 6, 3, 1, 0, 3, 29, 7, 0, 0, 0, 0, 1, 1, 1]' : 0.261227}", "{'[0, 3, 1, 0, 6, 3, 1, 0, 3, 29, 7, 0, 0, 0, 0, 1, 1, 1]' : 0.258669}", "{'[0, 3, 1, 0, 6, 3, 1, 0, 3, 29, 7, 0, 0, 0, 0, 1, 1, 1]' : 0.244668}", "{'[0, 3, 1, 0, 6, 3, 1, 0, 3, 29, 7, 0, 0, 0, 0, 1, 1, 1]' : 0.256633}", "{'[0, 3, 1, 0, 6, 3, 1, 0, 3, 29, 7, 0, 0, 0, 0, 1, 1, 1]' : 0.258985}", "{'[0, 3, 1, 0, 6, 3, 1, 0, 3, 29, 7, 0, 0, 0, 0, 1, 1, 1]' : 0.253536}", "{'[0, 3, 1, 0, 6, 3, 1, 0, 3, 29, 7, 0, 0, 0, 0, 1, 1, 1]' : 0.255336}", "{'[0, 3, 1, 0, 6, 3, 1, 0, 3, 29, 7, 0, 0, 0, 0, 1, 1, 1]' : 0.257255}", "{'[0, 3, 1, 0, 6, 3, 1, 0, 3, 29, 7, 0, 0, 0, 0, 1, 1, 1]' : 0.25919}", "{'[0, 3, 1, 0, 6, 3, 1, 0, 3, 29, 7, 0, 0, 0, 0, 1, 1, 1]' : 0.259426}", "{'[0, 3, 1, 0, 6, 3, 1, 0, 3, 29, 7, 0, 0, 0, 0, 1, 1, 1]' : 0.255279}", "{'[0, 3, 1, 0, 6, 3, 1, 0, 3, 29, 7, 0, 0, 0, 0, 1, 1, 1]' : 0.259634}", "{'[0, 3, 1, 0, 6, 3, 1, 0, 3, 29, 7, 0, 0, 0, 0, 1, 1, 1]' : 0.253163}", "{'[0, 3, 1, 0, 6, 3, 1, 0, 3, 29, 7, 0, 0, 0, 0, 1, 1, 1]' : 0.258175}", "{'[0, 3, 1, 0, 6, 3, 1, 0, 3, 29, 7, 0, 0, 0, 0, 1, 1, 1]' : 0.261468}", "{'[0, 3, 1, 0, 6, 3, 1, 0, 3, 29, 7, 0, 0, 0, 0, 1, 1, 1]' : 0.260551}", "{'[0, 3, 1, 0, 6, 3, 1, 0, 3, 29, 7, 0, 0, 0, 0, 1, 1, 1]' : 0.256741}", "{'[0, 3, 1, 0, 6, 3, 1, 0, 3, 29, 7, 0, 0, 0, 0, 1, 1, 1]' : 0.255226}", "{'[0, 3, 1, 0, 6, 3, 1, 0, 3, 29, 7, 0, 0, 0, 0, 1, 1, 1]' : 0.26259}", "{'[0, 3, 1, 0, 6, 3, 1, 0, 3, 29, 7, 0, 0, 0, 0, 1, 1, 1]' : 0.260804}", "{'[0, 3, 1, 0, 6, 3, 1, 0, 3, 29, 7, 0, 0, 0, 0, 1, 1, 1]' : 0.25394}", "{'[0, 3, 1, 0, 6, 3, 1, 0, 3, 29, 7, 0, 0, 0, 0, 1, 1, 1]' : 0.261538}", "{'[0, 3, 1, 0, 6, 3, 1, 0, 3, 29, 7, 0, 0, 0, 0, 1, 1, 1]' : 0.25477}", "{'[0, 3, 1, 0, 6, 3, 1, 0, 3, 29, 7, 0, 0, 0, 0, 1, 1, 1]' : 0.259024}"]
returning from 'run': {'[0, 3, 1, 0, 6, 3, 1, 0, 3, 29, 7, 0, 0, 0, 0, 1, 1, 1]': ([0.247311, 0.250964, 0.254126, 0.251876, 0.252829, 0.25352, 0.261227, 0.258669, 0.244668, 0.256633, 0.258985, 0.253536, 0.255336, 0.257255, 0.25919, 0.259426, 0.255279, 0.259634, 0.253163, 0.258175, 0.261468, 0.260551, 0.256741, 0.255226, 0.26259, 0.260804, 0.25394, 0.261538, 0.25477, 0.259024], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 3, 1, 0, 6, 3, 1, 0, 3, 29, 7, 0, 0, 0, 0, 1, 1, 1]': ([0.247311, 0.250964, 0.254126, 0.251876, 0.252829, 0.25352, 0.261227, 0.258669, 0.244668, 0.256633, 0.258985, 0.253536, 0.255336, 0.257255, 0.25919, 0.259426, 0.255279, 0.259634, 0.253163, 0.258175, 0.261468, 0.260551, 0.256741, 0.255226, 0.26259, 0.260804, 0.25394, 0.261538, 0.25477, 0.259024], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	59
        Max loop nest depth: 	5
        Additions: 		5275
        Multiplications: 	2496
        Divisions: 		0
        Logical: 		0
        Reads: 			10159
        Writes: 		1704
        Comparisons:		59
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest75.exe __orio_perftest75.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest75.exe  
Program Test Output: 
{'[0, 6, 4, 5, 6, 5, 1, 0, 3, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.131299}
{'[0, 6, 4, 5, 6, 5, 1, 0, 3, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.131099}
{'[0, 6, 4, 5, 6, 5, 1, 0, 3, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.121318}
{'[0, 6, 4, 5, 6, 5, 1, 0, 3, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.117841}
{'[0, 6, 4, 5, 6, 5, 1, 0, 3, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.118103}
{'[0, 6, 4, 5, 6, 5, 1, 0, 3, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.118381}
{'[0, 6, 4, 5, 6, 5, 1, 0, 3, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.118284}
{'[0, 6, 4, 5, 6, 5, 1, 0, 3, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.118557}
{'[0, 6, 4, 5, 6, 5, 1, 0, 3, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.118383}
{'[0, 6, 4, 5, 6, 5, 1, 0, 3, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.118321}
{'[0, 6, 4, 5, 6, 5, 1, 0, 3, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.118335}
{'[0, 6, 4, 5, 6, 5, 1, 0, 3, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.118247}
{'[0, 6, 4, 5, 6, 5, 1, 0, 3, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.117982}
{'[0, 6, 4, 5, 6, 5, 1, 0, 3, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.117916}
{'[0, 6, 4, 5, 6, 5, 1, 0, 3, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.117946}
{'[0, 6, 4, 5, 6, 5, 1, 0, 3, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.118175}
{'[0, 6, 4, 5, 6, 5, 1, 0, 3, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.118008}
{'[0, 6, 4, 5, 6, 5, 1, 0, 3, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.117922}
{'[0, 6, 4, 5, 6, 5, 1, 0, 3, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.118059}
{'[0, 6, 4, 5, 6, 5, 1, 0, 3, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.118069}
{'[0, 6, 4, 5, 6, 5, 1, 0, 3, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.11812}
{'[0, 6, 4, 5, 6, 5, 1, 0, 3, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.117958}
{'[0, 6, 4, 5, 6, 5, 1, 0, 3, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.117902}
{'[0, 6, 4, 5, 6, 5, 1, 0, 3, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.117972}
{'[0, 6, 4, 5, 6, 5, 1, 0, 3, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.11826}
{'[0, 6, 4, 5, 6, 5, 1, 0, 3, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.118348}
{'[0, 6, 4, 5, 6, 5, 1, 0, 3, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.118236}
{'[0, 6, 4, 5, 6, 5, 1, 0, 3, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.118269}
{'[0, 6, 4, 5, 6, 5, 1, 0, 3, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.118194}
{'[0, 6, 4, 5, 6, 5, 1, 0, 3, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.117863}

out:
 ["{'[0, 6, 4, 5, 6, 5, 1, 0, 3, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.131299}", "{'[0, 6, 4, 5, 6, 5, 1, 0, 3, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.131099}", "{'[0, 6, 4, 5, 6, 5, 1, 0, 3, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.121318}", "{'[0, 6, 4, 5, 6, 5, 1, 0, 3, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.117841}", "{'[0, 6, 4, 5, 6, 5, 1, 0, 3, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.118103}", "{'[0, 6, 4, 5, 6, 5, 1, 0, 3, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.118381}", "{'[0, 6, 4, 5, 6, 5, 1, 0, 3, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.118284}", "{'[0, 6, 4, 5, 6, 5, 1, 0, 3, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.118557}", "{'[0, 6, 4, 5, 6, 5, 1, 0, 3, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.118383}", "{'[0, 6, 4, 5, 6, 5, 1, 0, 3, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.118321}", "{'[0, 6, 4, 5, 6, 5, 1, 0, 3, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.118335}", "{'[0, 6, 4, 5, 6, 5, 1, 0, 3, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.118247}", "{'[0, 6, 4, 5, 6, 5, 1, 0, 3, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.117982}", "{'[0, 6, 4, 5, 6, 5, 1, 0, 3, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.117916}", "{'[0, 6, 4, 5, 6, 5, 1, 0, 3, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.117946}", "{'[0, 6, 4, 5, 6, 5, 1, 0, 3, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.118175}", "{'[0, 6, 4, 5, 6, 5, 1, 0, 3, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.118008}", "{'[0, 6, 4, 5, 6, 5, 1, 0, 3, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.117922}", "{'[0, 6, 4, 5, 6, 5, 1, 0, 3, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.118059}", "{'[0, 6, 4, 5, 6, 5, 1, 0, 3, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.118069}", "{'[0, 6, 4, 5, 6, 5, 1, 0, 3, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.11812}", "{'[0, 6, 4, 5, 6, 5, 1, 0, 3, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.117958}", "{'[0, 6, 4, 5, 6, 5, 1, 0, 3, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.117902}", "{'[0, 6, 4, 5, 6, 5, 1, 0, 3, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.117972}", "{'[0, 6, 4, 5, 6, 5, 1, 0, 3, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.11826}", "{'[0, 6, 4, 5, 6, 5, 1, 0, 3, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.118348}", "{'[0, 6, 4, 5, 6, 5, 1, 0, 3, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.118236}", "{'[0, 6, 4, 5, 6, 5, 1, 0, 3, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.118269}", "{'[0, 6, 4, 5, 6, 5, 1, 0, 3, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.118194}", "{'[0, 6, 4, 5, 6, 5, 1, 0, 3, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.117863}"]
returning from 'run': {'[0, 6, 4, 5, 6, 5, 1, 0, 3, 29, 0, 29, 1, 0, 0, 1, 1, 0]': ([0.131299, 0.131099, 0.121318, 0.117841, 0.118103, 0.118381, 0.118284, 0.118557, 0.118383, 0.118321, 0.118335, 0.118247, 0.117982, 0.117916, 0.117946, 0.118175, 0.118008, 0.117922, 0.118059, 0.118069, 0.11812, 0.117958, 0.117902, 0.117972, 0.11826, 0.118348, 0.118236, 0.118269, 0.118194, 0.117863], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 4, 5, 6, 5, 1, 0, 3, 29, 0, 29, 1, 0, 0, 1, 1, 0]': ([0.131299, 0.131099, 0.121318, 0.117841, 0.118103, 0.118381, 0.118284, 0.118557, 0.118383, 0.118321, 0.118335, 0.118247, 0.117982, 0.117916, 0.117946, 0.118175, 0.118008, 0.117922, 0.118059, 0.118069, 0.11812, 0.117958, 0.117902, 0.117972, 0.11826, 0.118348, 0.118236, 0.118269, 0.118194, 0.117863], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	4
        Additions: 		621
        Multiplications: 	288
        Divisions: 		0
        Logical: 		0
        Reads: 			1250
        Writes: 		225
        Comparisons:		10
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest76.exe __orio_perftest76.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest76.exe  
Program Test Output: 
{'[0, 0, 6, 0, 6, 6, 1, 0, 3, 26, 0, 15, 1, 0, 0, 1, 1, 0]' : 0.0991521}
{'[0, 0, 6, 0, 6, 6, 1, 0, 3, 26, 0, 15, 1, 0, 0, 1, 1, 0]' : 0.0990002}
{'[0, 0, 6, 0, 6, 6, 1, 0, 3, 26, 0, 15, 1, 0, 0, 1, 1, 0]' : 0.0989349}
{'[0, 0, 6, 0, 6, 6, 1, 0, 3, 26, 0, 15, 1, 0, 0, 1, 1, 0]' : 0.099061}
{'[0, 0, 6, 0, 6, 6, 1, 0, 3, 26, 0, 15, 1, 0, 0, 1, 1, 0]' : 0.0989029}
{'[0, 0, 6, 0, 6, 6, 1, 0, 3, 26, 0, 15, 1, 0, 0, 1, 1, 0]' : 0.100077}
{'[0, 0, 6, 0, 6, 6, 1, 0, 3, 26, 0, 15, 1, 0, 0, 1, 1, 0]' : 0.101915}
{'[0, 0, 6, 0, 6, 6, 1, 0, 3, 26, 0, 15, 1, 0, 0, 1, 1, 0]' : 0.101702}
{'[0, 0, 6, 0, 6, 6, 1, 0, 3, 26, 0, 15, 1, 0, 0, 1, 1, 0]' : 0.10182}
{'[0, 0, 6, 0, 6, 6, 1, 0, 3, 26, 0, 15, 1, 0, 0, 1, 1, 0]' : 0.101895}
{'[0, 0, 6, 0, 6, 6, 1, 0, 3, 26, 0, 15, 1, 0, 0, 1, 1, 0]' : 0.101837}
{'[0, 0, 6, 0, 6, 6, 1, 0, 3, 26, 0, 15, 1, 0, 0, 1, 1, 0]' : 0.101788}
{'[0, 0, 6, 0, 6, 6, 1, 0, 3, 26, 0, 15, 1, 0, 0, 1, 1, 0]' : 0.103784}
{'[0, 0, 6, 0, 6, 6, 1, 0, 3, 26, 0, 15, 1, 0, 0, 1, 1, 0]' : 0.103733}
{'[0, 0, 6, 0, 6, 6, 1, 0, 3, 26, 0, 15, 1, 0, 0, 1, 1, 0]' : 0.103702}
{'[0, 0, 6, 0, 6, 6, 1, 0, 3, 26, 0, 15, 1, 0, 0, 1, 1, 0]' : 0.102462}
{'[0, 0, 6, 0, 6, 6, 1, 0, 3, 26, 0, 15, 1, 0, 0, 1, 1, 0]' : 0.101729}
{'[0, 0, 6, 0, 6, 6, 1, 0, 3, 26, 0, 15, 1, 0, 0, 1, 1, 0]' : 0.101763}
{'[0, 0, 6, 0, 6, 6, 1, 0, 3, 26, 0, 15, 1, 0, 0, 1, 1, 0]' : 0.100984}
{'[0, 0, 6, 0, 6, 6, 1, 0, 3, 26, 0, 15, 1, 0, 0, 1, 1, 0]' : 0.0993619}
{'[0, 0, 6, 0, 6, 6, 1, 0, 3, 26, 0, 15, 1, 0, 0, 1, 1, 0]' : 0.0996251}
{'[0, 0, 6, 0, 6, 6, 1, 0, 3, 26, 0, 15, 1, 0, 0, 1, 1, 0]' : 0.0993669}
{'[0, 0, 6, 0, 6, 6, 1, 0, 3, 26, 0, 15, 1, 0, 0, 1, 1, 0]' : 0.099303}
{'[0, 0, 6, 0, 6, 6, 1, 0, 3, 26, 0, 15, 1, 0, 0, 1, 1, 0]' : 0.099268}
{'[0, 0, 6, 0, 6, 6, 1, 0, 3, 26, 0, 15, 1, 0, 0, 1, 1, 0]' : 0.0995378}
{'[0, 0, 6, 0, 6, 6, 1, 0, 3, 26, 0, 15, 1, 0, 0, 1, 1, 0]' : 0.099427}
{'[0, 0, 6, 0, 6, 6, 1, 0, 3, 26, 0, 15, 1, 0, 0, 1, 1, 0]' : 0.0992808}
{'[0, 0, 6, 0, 6, 6, 1, 0, 3, 26, 0, 15, 1, 0, 0, 1, 1, 0]' : 0.0995271}
{'[0, 0, 6, 0, 6, 6, 1, 0, 3, 26, 0, 15, 1, 0, 0, 1, 1, 0]' : 0.099488}
{'[0, 0, 6, 0, 6, 6, 1, 0, 3, 26, 0, 15, 1, 0, 0, 1, 1, 0]' : 0.0992649}

out:
 ["{'[0, 0, 6, 0, 6, 6, 1, 0, 3, 26, 0, 15, 1, 0, 0, 1, 1, 0]' : 0.0991521}", "{'[0, 0, 6, 0, 6, 6, 1, 0, 3, 26, 0, 15, 1, 0, 0, 1, 1, 0]' : 0.0990002}", "{'[0, 0, 6, 0, 6, 6, 1, 0, 3, 26, 0, 15, 1, 0, 0, 1, 1, 0]' : 0.0989349}", "{'[0, 0, 6, 0, 6, 6, 1, 0, 3, 26, 0, 15, 1, 0, 0, 1, 1, 0]' : 0.099061}", "{'[0, 0, 6, 0, 6, 6, 1, 0, 3, 26, 0, 15, 1, 0, 0, 1, 1, 0]' : 0.0989029}", "{'[0, 0, 6, 0, 6, 6, 1, 0, 3, 26, 0, 15, 1, 0, 0, 1, 1, 0]' : 0.100077}", "{'[0, 0, 6, 0, 6, 6, 1, 0, 3, 26, 0, 15, 1, 0, 0, 1, 1, 0]' : 0.101915}", "{'[0, 0, 6, 0, 6, 6, 1, 0, 3, 26, 0, 15, 1, 0, 0, 1, 1, 0]' : 0.101702}", "{'[0, 0, 6, 0, 6, 6, 1, 0, 3, 26, 0, 15, 1, 0, 0, 1, 1, 0]' : 0.10182}", "{'[0, 0, 6, 0, 6, 6, 1, 0, 3, 26, 0, 15, 1, 0, 0, 1, 1, 0]' : 0.101895}", "{'[0, 0, 6, 0, 6, 6, 1, 0, 3, 26, 0, 15, 1, 0, 0, 1, 1, 0]' : 0.101837}", "{'[0, 0, 6, 0, 6, 6, 1, 0, 3, 26, 0, 15, 1, 0, 0, 1, 1, 0]' : 0.101788}", "{'[0, 0, 6, 0, 6, 6, 1, 0, 3, 26, 0, 15, 1, 0, 0, 1, 1, 0]' : 0.103784}", "{'[0, 0, 6, 0, 6, 6, 1, 0, 3, 26, 0, 15, 1, 0, 0, 1, 1, 0]' : 0.103733}", "{'[0, 0, 6, 0, 6, 6, 1, 0, 3, 26, 0, 15, 1, 0, 0, 1, 1, 0]' : 0.103702}", "{'[0, 0, 6, 0, 6, 6, 1, 0, 3, 26, 0, 15, 1, 0, 0, 1, 1, 0]' : 0.102462}", "{'[0, 0, 6, 0, 6, 6, 1, 0, 3, 26, 0, 15, 1, 0, 0, 1, 1, 0]' : 0.101729}", "{'[0, 0, 6, 0, 6, 6, 1, 0, 3, 26, 0, 15, 1, 0, 0, 1, 1, 0]' : 0.101763}", "{'[0, 0, 6, 0, 6, 6, 1, 0, 3, 26, 0, 15, 1, 0, 0, 1, 1, 0]' : 0.100984}", "{'[0, 0, 6, 0, 6, 6, 1, 0, 3, 26, 0, 15, 1, 0, 0, 1, 1, 0]' : 0.0993619}", "{'[0, 0, 6, 0, 6, 6, 1, 0, 3, 26, 0, 15, 1, 0, 0, 1, 1, 0]' : 0.0996251}", "{'[0, 0, 6, 0, 6, 6, 1, 0, 3, 26, 0, 15, 1, 0, 0, 1, 1, 0]' : 0.0993669}", "{'[0, 0, 6, 0, 6, 6, 1, 0, 3, 26, 0, 15, 1, 0, 0, 1, 1, 0]' : 0.099303}", "{'[0, 0, 6, 0, 6, 6, 1, 0, 3, 26, 0, 15, 1, 0, 0, 1, 1, 0]' : 0.099268}", "{'[0, 0, 6, 0, 6, 6, 1, 0, 3, 26, 0, 15, 1, 0, 0, 1, 1, 0]' : 0.0995378}", "{'[0, 0, 6, 0, 6, 6, 1, 0, 3, 26, 0, 15, 1, 0, 0, 1, 1, 0]' : 0.099427}", "{'[0, 0, 6, 0, 6, 6, 1, 0, 3, 26, 0, 15, 1, 0, 0, 1, 1, 0]' : 0.0992808}", "{'[0, 0, 6, 0, 6, 6, 1, 0, 3, 26, 0, 15, 1, 0, 0, 1, 1, 0]' : 0.0995271}", "{'[0, 0, 6, 0, 6, 6, 1, 0, 3, 26, 0, 15, 1, 0, 0, 1, 1, 0]' : 0.099488}", "{'[0, 0, 6, 0, 6, 6, 1, 0, 3, 26, 0, 15, 1, 0, 0, 1, 1, 0]' : 0.0992649}"]
returning from 'run': {'[0, 0, 6, 0, 6, 6, 1, 0, 3, 26, 0, 15, 1, 0, 0, 1, 1, 0]': ([0.0991521, 0.0990002, 0.0989349, 0.099061, 0.0989029, 0.100077, 0.101915, 0.101702, 0.10182, 0.101895, 0.101837, 0.101788, 0.103784, 0.103733, 0.103702, 0.102462, 0.101729, 0.101763, 0.100984, 0.0993619, 0.0996251, 0.0993669, 0.099303, 0.099268, 0.0995378, 0.099427, 0.0992808, 0.0995271, 0.099488, 0.0992649], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 6, 0, 6, 6, 1, 0, 3, 26, 0, 15, 1, 0, 0, 1, 1, 0]': ([0.0991521, 0.0990002, 0.0989349, 0.099061, 0.0989029, 0.100077, 0.101915, 0.101702, 0.10182, 0.101895, 0.101837, 0.101788, 0.103784, 0.103733, 0.103702, 0.102462, 0.101729, 0.101763, 0.100984, 0.0993619, 0.0996251, 0.0993669, 0.099303, 0.099268, 0.0995378, 0.099427, 0.0992808, 0.0995271, 0.099488, 0.0992649], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	99
        Max loop nest depth: 	5
        Additions: 		2128
        Multiplications: 	696
        Divisions: 		0
        Logical: 		0
        Reads: 			4049
        Writes: 		735
        Comparisons:		99
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest77.exe __orio_perftest77.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest77.exe  
Program Test Output: 
{'[0, 0, 2, 2, 6, 6, 1, 0, 3, 24, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.174299}
{'[0, 0, 2, 2, 6, 6, 1, 0, 3, 24, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.180096}
{'[0, 0, 2, 2, 6, 6, 1, 0, 3, 24, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.178753}
{'[0, 0, 2, 2, 6, 6, 1, 0, 3, 24, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.177545}
{'[0, 0, 2, 2, 6, 6, 1, 0, 3, 24, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.177857}
{'[0, 0, 2, 2, 6, 6, 1, 0, 3, 24, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.177231}
{'[0, 0, 2, 2, 6, 6, 1, 0, 3, 24, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.178033}
{'[0, 0, 2, 2, 6, 6, 1, 0, 3, 24, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.177301}
{'[0, 0, 2, 2, 6, 6, 1, 0, 3, 24, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.177253}
{'[0, 0, 2, 2, 6, 6, 1, 0, 3, 24, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.175909}
{'[0, 0, 2, 2, 6, 6, 1, 0, 3, 24, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.173621}
{'[0, 0, 2, 2, 6, 6, 1, 0, 3, 24, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.173305}
{'[0, 0, 2, 2, 6, 6, 1, 0, 3, 24, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.176805}
{'[0, 0, 2, 2, 6, 6, 1, 0, 3, 24, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.177773}
{'[0, 0, 2, 2, 6, 6, 1, 0, 3, 24, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.177081}
{'[0, 0, 2, 2, 6, 6, 1, 0, 3, 24, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.177538}
{'[0, 0, 2, 2, 6, 6, 1, 0, 3, 24, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.17702}
{'[0, 0, 2, 2, 6, 6, 1, 0, 3, 24, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.177524}
{'[0, 0, 2, 2, 6, 6, 1, 0, 3, 24, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.177476}
{'[0, 0, 2, 2, 6, 6, 1, 0, 3, 24, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.177545}
{'[0, 0, 2, 2, 6, 6, 1, 0, 3, 24, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.177863}
{'[0, 0, 2, 2, 6, 6, 1, 0, 3, 24, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.176934}
{'[0, 0, 2, 2, 6, 6, 1, 0, 3, 24, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.17766}
{'[0, 0, 2, 2, 6, 6, 1, 0, 3, 24, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.177125}
{'[0, 0, 2, 2, 6, 6, 1, 0, 3, 24, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.176958}
{'[0, 0, 2, 2, 6, 6, 1, 0, 3, 24, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.177474}
{'[0, 0, 2, 2, 6, 6, 1, 0, 3, 24, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.17745}
{'[0, 0, 2, 2, 6, 6, 1, 0, 3, 24, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.176809}
{'[0, 0, 2, 2, 6, 6, 1, 0, 3, 24, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.17365}
{'[0, 0, 2, 2, 6, 6, 1, 0, 3, 24, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.177427}

out:
 ["{'[0, 0, 2, 2, 6, 6, 1, 0, 3, 24, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.174299}", "{'[0, 0, 2, 2, 6, 6, 1, 0, 3, 24, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.180096}", "{'[0, 0, 2, 2, 6, 6, 1, 0, 3, 24, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.178753}", "{'[0, 0, 2, 2, 6, 6, 1, 0, 3, 24, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.177545}", "{'[0, 0, 2, 2, 6, 6, 1, 0, 3, 24, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.177857}", "{'[0, 0, 2, 2, 6, 6, 1, 0, 3, 24, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.177231}", "{'[0, 0, 2, 2, 6, 6, 1, 0, 3, 24, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.178033}", "{'[0, 0, 2, 2, 6, 6, 1, 0, 3, 24, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.177301}", "{'[0, 0, 2, 2, 6, 6, 1, 0, 3, 24, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.177253}", "{'[0, 0, 2, 2, 6, 6, 1, 0, 3, 24, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.175909}", "{'[0, 0, 2, 2, 6, 6, 1, 0, 3, 24, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.173621}", "{'[0, 0, 2, 2, 6, 6, 1, 0, 3, 24, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.173305}", "{'[0, 0, 2, 2, 6, 6, 1, 0, 3, 24, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.176805}", "{'[0, 0, 2, 2, 6, 6, 1, 0, 3, 24, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.177773}", "{'[0, 0, 2, 2, 6, 6, 1, 0, 3, 24, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.177081}", "{'[0, 0, 2, 2, 6, 6, 1, 0, 3, 24, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.177538}", "{'[0, 0, 2, 2, 6, 6, 1, 0, 3, 24, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.17702}", "{'[0, 0, 2, 2, 6, 6, 1, 0, 3, 24, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.177524}", "{'[0, 0, 2, 2, 6, 6, 1, 0, 3, 24, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.177476}", "{'[0, 0, 2, 2, 6, 6, 1, 0, 3, 24, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.177545}", "{'[0, 0, 2, 2, 6, 6, 1, 0, 3, 24, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.177863}", "{'[0, 0, 2, 2, 6, 6, 1, 0, 3, 24, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.176934}", "{'[0, 0, 2, 2, 6, 6, 1, 0, 3, 24, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.17766}", "{'[0, 0, 2, 2, 6, 6, 1, 0, 3, 24, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.177125}", "{'[0, 0, 2, 2, 6, 6, 1, 0, 3, 24, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.176958}", "{'[0, 0, 2, 2, 6, 6, 1, 0, 3, 24, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.177474}", "{'[0, 0, 2, 2, 6, 6, 1, 0, 3, 24, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.17745}", "{'[0, 0, 2, 2, 6, 6, 1, 0, 3, 24, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.176809}", "{'[0, 0, 2, 2, 6, 6, 1, 0, 3, 24, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.17365}", "{'[0, 0, 2, 2, 6, 6, 1, 0, 3, 24, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.177427}"]
returning from 'run': {'[0, 0, 2, 2, 6, 6, 1, 0, 3, 24, 3, 0, 2, 0, 0, 1, 1, 0]': ([0.174299, 0.180096, 0.178753, 0.177545, 0.177857, 0.177231, 0.178033, 0.177301, 0.177253, 0.175909, 0.173621, 0.173305, 0.176805, 0.177773, 0.177081, 0.177538, 0.17702, 0.177524, 0.177476, 0.177545, 0.177863, 0.176934, 0.17766, 0.177125, 0.176958, 0.177474, 0.17745, 0.176809, 0.17365, 0.177427], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 2, 2, 6, 6, 1, 0, 3, 24, 3, 0, 2, 0, 0, 1, 1, 0]': ([0.174299, 0.180096, 0.178753, 0.177545, 0.177857, 0.177231, 0.178033, 0.177301, 0.177253, 0.175909, 0.173621, 0.173305, 0.176805, 0.177773, 0.177081, 0.177538, 0.17702, 0.177524, 0.177476, 0.177545, 0.177863, 0.176934, 0.17766, 0.177125, 0.176958, 0.177474, 0.17745, 0.176809, 0.17365, 0.177427], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Complete design, with measurements:
     T1_J T1_K T2_I T2_K U_I U_J U_K RT_I RT_J SCR VEC2  cost_mean
149     2    3    6    2   0  11   4    1    1   1    0 0.10125720
215     5    0    2    0   7   8   0    1    0   0    0 0.09583693
430     0    0    6    5   0  26   5    1    0   0    1 0.12826143
570     6    3    0    0  27  24   0    1    1   1    0 0.10463437
658     0    6    6    0  13   8   0    0    0   1    1 0.18257333
908     4    0    4    5   0   1   0    2    0   0    1 0.20341933
922     0    2    2    0  29   0   9    0    1   0    1 0.19373433
1016    5    0    6    1  15   0   4    1    0   1    1 0.09834806
1167    6    4    1    3   3  26   0    2    0   0    0 0.24598437
1390    6    6    5    6   0  13   1    0    1   0    0 0.23276263
1450    0    0    0    2   0  15  25    0    1   1    0 0.19054427
1625    2    1    6    3  16   0   0    0    0   0    0 0.18189960
1662    1    5    1    6   0   0   0    1    0   0    1 0.09908049
1766    3    0    6    5  29  28   0    0    1   0    0 0.26163427
1988    6    4    0    0  22   0  29    0    1   0    1 0.15889120
2117    3    4    6    0   0  15  21    2    0   0    0 0.30534587
2142    2    2    3    5   0  29  29    0    0   1    1 0.16752690
2373    3    0    2    6   3   0   3    0    0   1    0 0.11721833
2577    1    4    1    4  11   3   0    1    1   1    1 0.09896936
2634    3    1    0    3  29   7   0    0    0   1    1 0.25628180
2814    6    4    5    5  29   0  29    1    0   1    0 0.11911223
2818    0    6    0    6  26   0  15    1    0   1    0 0.10058975
2953    0    2    2    6  24   3   0    2    0   1    0 0.17697717

Heteroscedasticity Test p-value: 0.768833981353
Regression Step:                Df  Sum Sq Mean Sq F value Pr(>F)  
T1_J             1 0.00050 0.00050   0.439 0.5549  
T1_K             1 0.00002 0.00002   0.013 0.9151  
T2_I             1 0.00280 0.00280   2.484 0.2131  
T2_K             1 0.00032 0.00032   0.285 0.6302  
U_I              1 0.00003 0.00003   0.028 0.8783  
U_J              1 0.00963 0.00963   8.531 0.0615 .
U_K              1 0.00005 0.00005   0.045 0.8461  
RT_I             1 0.00000 0.00000   0.000 0.9946  
RT_J             1 0.00023 0.00023   0.205 0.6813  
SCR              1 0.01231 0.01231  10.908 0.0456 *
VEC2             1 0.00064 0.00064   0.569 0.5053  
I(1/(1 + T1_J))  1 0.00154 0.00154   1.365 0.3271  
I(1/(1 + T1_K))  1 0.00064 0.00064   0.565 0.5070  
I(1/(1 + T2_I))  1 0.00124 0.00124   1.101 0.3711  
I(1/(1 + T2_K))  1 0.00093 0.00093   0.821 0.4316  
I(1/(1 + U_I))   1 0.00236 0.00236   2.090 0.2440  
I(1/(1 + U_J))   1 0.01416 0.01416  12.546 0.0383 *
I(1/(1 + U_K))   1 0.00035 0.00035   0.308 0.6179  
I(1/(1 + RT_I))  1 0.03662 0.03662  32.446 0.0107 *
Residuals        3 0.00339 0.00113                 
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Predicting Best
Generating valid search space of size 3000 (does not spend evaluations)
Tested coordinates: 10000
Valid coordinates: 600
Tested coordinates: 20000
Valid coordinates: 1200
Tested coordinates: 30000
Valid coordinates: 1800
Tested coordinates: 40000
Valid coordinates: 2400
Tested coordinates: 50000
Valid coordinates: 3000
Valid/Tested configurations: 3000/53002
Generated Search Space:
NULL
Identical predictions (tol = 1e-5): 1
Getting Best from Design
Response: ['cost_mean']
Design Names:  [1] "T1_J"      "T1_K"      "T2_I"      "T2_K"      "U_I"       "U_J"      
 [7] "U_K"       "RT_I"      "RT_J"      "SCR"       "VEC2"      "cost_mean"

Design Response:       cost_mean
149  0.10125720
215  0.09583693
430  0.12826143
570  0.10463437
658  0.18257333
908  0.20341933
922  0.19373433
1016 0.09834806
1167 0.24598437
1390 0.23276263
1450 0.19054427
1625 0.18189960
1662 0.09908049
1766 0.26163427
1988 0.15889120
2117 0.30534587
2142 0.16752690
2373 0.11721833
2577 0.09896936
2634 0.25628180
2814 0.11911223
2818 0.10058975
2953 0.17697717

Current Design Names: ['T1_J', 'T1_K', 'T2_I', 'T2_K', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'SCR', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Getting fixed variables
Pruning Model
Best Predicted:      T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
2847    0    0    1    0    6    6       1       0    3   5   6   0    1    1
     RT_K SCR VEC1 VEC2
2847    0   1    1    0

Best From Design: [0, 5, 0, 2, 6, 0, 1, 0, 3, 7, 8, 0, 1, 0, 0, 0, 1, 0]
Pruned Factors: ['T1_J', 'T1_K', 'T2_I', 'T2_K', 'U_I', 'U_K', 'RT_I', 'RT_J', 'VEC2']
Fixed Factors: {'ACOPY_x': 1, 'ACOPY_y': 0, 'RT_K': 0, 'T1_I': 0, 'U_J': 6, 'T2_J': 6, 'U1_I': 3, 'VEC1': 1, 'SCR': 1}
Length of requested configs: 1
Result was on Database, Returning Now
Starting Point (-O3):
0.16283083333333334
Predicted Best Point:
[0, 0, 1, 0, 6, 6, 1, 0, 3, 5, 6, 0, 1, 1, 0, 1, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	4
        Additions: 		322
        Multiplications: 	144
        Divisions: 		0
        Logical: 		0
        Reads: 			667
        Writes: 		126
        Comparisons:		9
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest78.exe __orio_perftest78.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest78.exe  
Program Test Output: 
{'[0, 0, 1, 0, 6, 6, 1, 0, 3, 5, 6, 0, 1, 1, 0, 1, 1, 0]' : 0.119583}
{'[0, 0, 1, 0, 6, 6, 1, 0, 3, 5, 6, 0, 1, 1, 0, 1, 1, 0]' : 0.119508}
{'[0, 0, 1, 0, 6, 6, 1, 0, 3, 5, 6, 0, 1, 1, 0, 1, 1, 0]' : 0.118994}
{'[0, 0, 1, 0, 6, 6, 1, 0, 3, 5, 6, 0, 1, 1, 0, 1, 1, 0]' : 0.112543}
{'[0, 0, 1, 0, 6, 6, 1, 0, 3, 5, 6, 0, 1, 1, 0, 1, 1, 0]' : 0.106971}
{'[0, 0, 1, 0, 6, 6, 1, 0, 3, 5, 6, 0, 1, 1, 0, 1, 1, 0]' : 0.10641}
{'[0, 0, 1, 0, 6, 6, 1, 0, 3, 5, 6, 0, 1, 1, 0, 1, 1, 0]' : 0.106943}
{'[0, 0, 1, 0, 6, 6, 1, 0, 3, 5, 6, 0, 1, 1, 0, 1, 1, 0]' : 0.107239}
{'[0, 0, 1, 0, 6, 6, 1, 0, 3, 5, 6, 0, 1, 1, 0, 1, 1, 0]' : 0.107195}
{'[0, 0, 1, 0, 6, 6, 1, 0, 3, 5, 6, 0, 1, 1, 0, 1, 1, 0]' : 0.107201}
{'[0, 0, 1, 0, 6, 6, 1, 0, 3, 5, 6, 0, 1, 1, 0, 1, 1, 0]' : 0.106772}
{'[0, 0, 1, 0, 6, 6, 1, 0, 3, 5, 6, 0, 1, 1, 0, 1, 1, 0]' : 0.106939}
{'[0, 0, 1, 0, 6, 6, 1, 0, 3, 5, 6, 0, 1, 1, 0, 1, 1, 0]' : 0.106977}
{'[0, 0, 1, 0, 6, 6, 1, 0, 3, 5, 6, 0, 1, 1, 0, 1, 1, 0]' : 0.106954}
{'[0, 0, 1, 0, 6, 6, 1, 0, 3, 5, 6, 0, 1, 1, 0, 1, 1, 0]' : 0.107875}
{'[0, 0, 1, 0, 6, 6, 1, 0, 3, 5, 6, 0, 1, 1, 0, 1, 1, 0]' : 0.105745}
{'[0, 0, 1, 0, 6, 6, 1, 0, 3, 5, 6, 0, 1, 1, 0, 1, 1, 0]' : 0.1063}
{'[0, 0, 1, 0, 6, 6, 1, 0, 3, 5, 6, 0, 1, 1, 0, 1, 1, 0]' : 0.106368}
{'[0, 0, 1, 0, 6, 6, 1, 0, 3, 5, 6, 0, 1, 1, 0, 1, 1, 0]' : 0.106391}
{'[0, 0, 1, 0, 6, 6, 1, 0, 3, 5, 6, 0, 1, 1, 0, 1, 1, 0]' : 0.106411}
{'[0, 0, 1, 0, 6, 6, 1, 0, 3, 5, 6, 0, 1, 1, 0, 1, 1, 0]' : 0.10487}
{'[0, 0, 1, 0, 6, 6, 1, 0, 3, 5, 6, 0, 1, 1, 0, 1, 1, 0]' : 0.104236}
{'[0, 0, 1, 0, 6, 6, 1, 0, 3, 5, 6, 0, 1, 1, 0, 1, 1, 0]' : 0.104363}
{'[0, 0, 1, 0, 6, 6, 1, 0, 3, 5, 6, 0, 1, 1, 0, 1, 1, 0]' : 0.105094}
{'[0, 0, 1, 0, 6, 6, 1, 0, 3, 5, 6, 0, 1, 1, 0, 1, 1, 0]' : 0.109164}
{'[0, 0, 1, 0, 6, 6, 1, 0, 3, 5, 6, 0, 1, 1, 0, 1, 1, 0]' : 0.106922}
{'[0, 0, 1, 0, 6, 6, 1, 0, 3, 5, 6, 0, 1, 1, 0, 1, 1, 0]' : 0.106391}
{'[0, 0, 1, 0, 6, 6, 1, 0, 3, 5, 6, 0, 1, 1, 0, 1, 1, 0]' : 0.106431}
{'[0, 0, 1, 0, 6, 6, 1, 0, 3, 5, 6, 0, 1, 1, 0, 1, 1, 0]' : 0.10637}
{'[0, 0, 1, 0, 6, 6, 1, 0, 3, 5, 6, 0, 1, 1, 0, 1, 1, 0]' : 0.10669}

out:
 ["{'[0, 0, 1, 0, 6, 6, 1, 0, 3, 5, 6, 0, 1, 1, 0, 1, 1, 0]' : 0.119583}", "{'[0, 0, 1, 0, 6, 6, 1, 0, 3, 5, 6, 0, 1, 1, 0, 1, 1, 0]' : 0.119508}", "{'[0, 0, 1, 0, 6, 6, 1, 0, 3, 5, 6, 0, 1, 1, 0, 1, 1, 0]' : 0.118994}", "{'[0, 0, 1, 0, 6, 6, 1, 0, 3, 5, 6, 0, 1, 1, 0, 1, 1, 0]' : 0.112543}", "{'[0, 0, 1, 0, 6, 6, 1, 0, 3, 5, 6, 0, 1, 1, 0, 1, 1, 0]' : 0.106971}", "{'[0, 0, 1, 0, 6, 6, 1, 0, 3, 5, 6, 0, 1, 1, 0, 1, 1, 0]' : 0.10641}", "{'[0, 0, 1, 0, 6, 6, 1, 0, 3, 5, 6, 0, 1, 1, 0, 1, 1, 0]' : 0.106943}", "{'[0, 0, 1, 0, 6, 6, 1, 0, 3, 5, 6, 0, 1, 1, 0, 1, 1, 0]' : 0.107239}", "{'[0, 0, 1, 0, 6, 6, 1, 0, 3, 5, 6, 0, 1, 1, 0, 1, 1, 0]' : 0.107195}", "{'[0, 0, 1, 0, 6, 6, 1, 0, 3, 5, 6, 0, 1, 1, 0, 1, 1, 0]' : 0.107201}", "{'[0, 0, 1, 0, 6, 6, 1, 0, 3, 5, 6, 0, 1, 1, 0, 1, 1, 0]' : 0.106772}", "{'[0, 0, 1, 0, 6, 6, 1, 0, 3, 5, 6, 0, 1, 1, 0, 1, 1, 0]' : 0.106939}", "{'[0, 0, 1, 0, 6, 6, 1, 0, 3, 5, 6, 0, 1, 1, 0, 1, 1, 0]' : 0.106977}", "{'[0, 0, 1, 0, 6, 6, 1, 0, 3, 5, 6, 0, 1, 1, 0, 1, 1, 0]' : 0.106954}", "{'[0, 0, 1, 0, 6, 6, 1, 0, 3, 5, 6, 0, 1, 1, 0, 1, 1, 0]' : 0.107875}", "{'[0, 0, 1, 0, 6, 6, 1, 0, 3, 5, 6, 0, 1, 1, 0, 1, 1, 0]' : 0.105745}", "{'[0, 0, 1, 0, 6, 6, 1, 0, 3, 5, 6, 0, 1, 1, 0, 1, 1, 0]' : 0.1063}", "{'[0, 0, 1, 0, 6, 6, 1, 0, 3, 5, 6, 0, 1, 1, 0, 1, 1, 0]' : 0.106368}", "{'[0, 0, 1, 0, 6, 6, 1, 0, 3, 5, 6, 0, 1, 1, 0, 1, 1, 0]' : 0.106391}", "{'[0, 0, 1, 0, 6, 6, 1, 0, 3, 5, 6, 0, 1, 1, 0, 1, 1, 0]' : 0.106411}", "{'[0, 0, 1, 0, 6, 6, 1, 0, 3, 5, 6, 0, 1, 1, 0, 1, 1, 0]' : 0.10487}", "{'[0, 0, 1, 0, 6, 6, 1, 0, 3, 5, 6, 0, 1, 1, 0, 1, 1, 0]' : 0.104236}", "{'[0, 0, 1, 0, 6, 6, 1, 0, 3, 5, 6, 0, 1, 1, 0, 1, 1, 0]' : 0.104363}", "{'[0, 0, 1, 0, 6, 6, 1, 0, 3, 5, 6, 0, 1, 1, 0, 1, 1, 0]' : 0.105094}", "{'[0, 0, 1, 0, 6, 6, 1, 0, 3, 5, 6, 0, 1, 1, 0, 1, 1, 0]' : 0.109164}", "{'[0, 0, 1, 0, 6, 6, 1, 0, 3, 5, 6, 0, 1, 1, 0, 1, 1, 0]' : 0.106922}", "{'[0, 0, 1, 0, 6, 6, 1, 0, 3, 5, 6, 0, 1, 1, 0, 1, 1, 0]' : 0.106391}", "{'[0, 0, 1, 0, 6, 6, 1, 0, 3, 5, 6, 0, 1, 1, 0, 1, 1, 0]' : 0.106431}", "{'[0, 0, 1, 0, 6, 6, 1, 0, 3, 5, 6, 0, 1, 1, 0, 1, 1, 0]' : 0.10637}", "{'[0, 0, 1, 0, 6, 6, 1, 0, 3, 5, 6, 0, 1, 1, 0, 1, 1, 0]' : 0.10669}"]
returning from 'run': {'[0, 0, 1, 0, 6, 6, 1, 0, 3, 5, 6, 0, 1, 1, 0, 1, 1, 0]': ([0.119583, 0.119508, 0.118994, 0.112543, 0.106971, 0.10641, 0.106943, 0.107239, 0.107195, 0.107201, 0.106772, 0.106939, 0.106977, 0.106954, 0.107875, 0.105745, 0.1063, 0.106368, 0.106391, 0.106411, 0.10487, 0.104236, 0.104363, 0.105094, 0.109164, 0.106922, 0.106391, 0.106431, 0.10637, 0.10669], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 1, 0, 6, 6, 1, 0, 3, 5, 6, 0, 1, 1, 0, 1, 1, 0]': ([0.119583, 0.119508, 0.118994, 0.112543, 0.106971, 0.10641, 0.106943, 0.107239, 0.107195, 0.107201, 0.106772, 0.106939, 0.106977, 0.106954, 0.107875, 0.105745, 0.1063, 0.106368, 0.106391, 0.106411, 0.10487, 0.104236, 0.104363, 0.105094, 0.109164, 0.106922, 0.106391, 0.106431, 0.10637, 0.10669], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Design Best Point:
[0, 5, 0, 2, 6, 0, 1, 0, 3, 7, 8, 0, 1, 0, 0, 0, 1, 0]
Length of requested configs: 1
Result was on Database, Returning Now
Fixed Factors: {'ACOPY_x': 1, 'ACOPY_y': 0, 'RT_K': 0, 'T1_I': 0, 'U_J': 6, 'T2_J': 6, 'U1_I': 3, 'VEC1': 1, 'SCR': 1}
Slowdown (Design Best): 0.5885674600940647
Slowdown (Predicted Best): 0.6632343382958796
Budget: 60/180
Updating Global Best: 0.09583692999999997
Current Best Point: 
[0, 5, 0, 2, 6, 0, 1, 0, 3, 7, 8, 0, 1, 0, 0, 0, 1, 0]
Final Best Point: 
[0, 5, 0, 2, 6, 0, 1, 0, 3, 7, 8, 0, 1, 0, 0, 0, 1, 0]
Ending DOPT-ANOVA
Best Point: [0, 5, 0, 2, 6, 0, 1, 0, 3, 7, 8, 0, 1, 0, 0, 0, 1, 0]
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Speedup: 1.6990405820943282
----- end random search -----
----- begin random search summary -----
 total completed runs: 0
 total successful runs: 0
 total failed runs: 0
 speedup: 1.6990405820943282
----- end random search summary -----
----- begin summary -----
 best coordinate: [0, 5, 0, 2, 6, 0, 1, 0, 3, 7, 8, 0, 1, 0, 0, 0, 1, 0]={'ACOPY_x': True, 'ACOPY_y': False, 'RT_K': 1, 'T1_I': 1, 'T1_J': 256, 'T1_K': 1, 'U_K': 1, 'U_J': 9, 'U_I': 8, 'U1_I': 4, 'T2_K': 1, 'T2_J': 2048, 'T2_I': 128, 'VEC2': False, 'VEC1': True, 'RT_I': 8, 'SCR': False, 'RT_J': 1}, cost=9.583693e-02, transfer_time=inf, inputs=[('N', 10000)], search_time=-770.91, runs=60
----- end summary -----
Length of requested configs: 1
Result was on Database, Returning Now
----- the obtained best performance parameters -----
 ACOPY_x = True
 ACOPY_y = False
 RT_I = 8
 RT_J = 1
 RT_K = 1
 SCR = False
 T1_I = 1
 T1_J = 256
 T1_K = 1
 T2_I = 128
 T2_J = 2048
 T2_K = 1
 U1_I = 4
 U_I = 8
 U_J = 9
 U_K = 1
 VEC1 = True
 VEC2 = False
 cost_mean = 0.09583692999999997
 points = 60
 speedup_O3 = 1.6990405820943282
 technique = DLMT
Code stats:
        Number of loops: 	45
        Max loop nest depth: 	5
        Additions: 		1524
        Multiplications: 	374
        Divisions: 		0
        Logical: 		0
        Reads: 			2469
        Writes: 		305
        Comparisons:		45
        Gotos: 			0
        
----- finish optimizations -----

----- begin removing annotations from output-----
----- finished removing annotations from output-----

----- begin writing the output file(s) -----
--> writing output to: _atax2.src1.c
----- finished writing the output file(s) -----

====== END ORIO ======
