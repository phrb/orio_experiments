
====== START ORIO ======

----- begin reading the source file: atax2.src0.c -----
----- finished reading the source file -----

----- begin parsing annotations -----
----- finished parsing annotations -----

----- begin optimizations -----
Search_Space         = 2.573e+12
Number_of_Parameters = 13
Numeric_Parameters   = 13
Binary_Parameters    = 00
['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
[[1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 8, 32], [1, 8, 32], [1, 8, 32]]

----- begin empirical tuning for problem size -----
 N = 10000
Parameters: {'RT_K': [0, 3], 'T1_I': [0, 7], 'T1_J': [0, 7], 'T1_K': [0, 7], 'U_K': [0, 30], 'U_J': [0, 30], 'U_I': [0, 30], 'U1_I': [0, 30], 'T2_K': [0, 7], 'T2_J': [0, 7], 'T2_I': [0, 7], 'RT_I': [0, 3], 'RT_J': [0, 3]}
Parameter Range Values: {'RT_K': [1, 8, 32], 'T1_I': [1, 16, 32, 64, 128, 256, 512], 'T1_J': [1, 16, 32, 64, 128, 256, 512], 'T1_K': [1, 16, 32, 64, 128, 256, 512], 'U_K': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_J': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U1_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'T2_K': [1, 64, 128, 256, 512, 1024, 2048], 'T2_J': [1, 64, 128, 256, 512, 1024, 2048], 'T2_I': [1, 64, 128, 256, 512, 1024, 2048], 'RT_I': [1, 8, 32], 'RT_J': [1, 8, 32]}

----- begin DLMT -----
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Initial Inverse Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Initial Interactions: []
Starting DLMT
Step 0
Generating valid search space of size 1500 (does not spend evaluations)
Valid coordinates: 300/1500
Valid coordinates: 600/1500
Valid coordinates: 900/1500
Valid coordinates: 1200/1500
Valid coordinates: 1500/1500
Valid/Tested configurations: 1500/61605
Generated Search Space:
NULL
Full Model:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Clean Info:
Removed Factors: character(0)

Removed Inverse Factors: character(0)

Removed Interactions: [1] "(Intercept)"

New Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
New Inverse Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
New Interactions: []
New Fixed Factors: {}
Updated Full Model:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Fixed Factors: {}
Computing D-Optimal Design
Computing D-Optimal Design with 30 experiments
Design Formula:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Starting "optFederov" run
Using Search Space:
NULL
Data Dimensions: [1] 1500   13

     T1_I T1_J T1_K T2_I T2_J T2_K U1_I U_I U_J U_K RT_I RT_J RT_K
50      4    1    2    0    6    5    0   6   5   0    0    2    0
85      6    4    6    5    3    5   12   1   0   3    0    2    0
98      1    2    4    6    2    2   29   2  29   0    0    1    0
154     0    0    3    0    2    2   28  29   0  16    0    1    1
191     1    0    1    1    2    5    6   0  12   2    1    1    0
198     1    6    5    0    4    0   11  27   8   0    1    0    0
212     3    2    6    2    0    0   26   0   8  29    0    0    2
229     1    5    2    4    6    6   29  28   0  28    1    0    1
281     6    2    6    0    2    0   16   0  24  24    1    1    0
347     6    6    1    0    0    3   27   0  23   9    1    0    0
465     2    2    1    6    0    6   22   4   0   0    0    0    2
545     0    6    3    3    5    3   19   0  21   0    0    0    2
573     1    1    3    0    0    0   26   8   0   0    0    0    1
587     3    0    0    5    6    0   22   6   0  28    1    0    1
674     0    1    3    6    0    1    0   0   8   8    1    0    1
737     5    3    0    4    3    2   16   2  10   0    2    0    0
768     6    1    1    6    1    6   22   4  27   0    0    0    2
810     0    3    6    2    2    5   10  27   0  27    0    0    0
821     4    1    0    5    5    0   11  28   0   1    2    0    0
856     6    6    5    4    6    4   29  11   6   0    0    0    1
906     4    5    4    0    6    4    3   7  25   0    0    0    2
1033    5    0    2    4    2    1    1  29  26   0    0    2    0
1049    2    2    0    0    2    5   24   0  14   3    1    0    1
1088    1    5    0    4    6    0    0  12   6   0    0    1    0
1158    0    2    0    0    4    1   20   3   0  10    0    2    0
1162    1    6    1    5    6    6    7   0  26  28    2    0    0
1183    6    0    5    6    3    3    0   5   0  26    0    0    2
1295    5    2    3    6    6    0   29   0   6  19    0    0    0
1339    1    0    5    1    6    6   26   7  19   0    2    0    0
1484    3    1    3    3    4    0    0   9   0  22    2    0    0

D-Efficiency Approximation: [1] 0.125

Measuring design of size 30
Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Length of requested configs: 1
Code stats:
        Number of loops: 	32
        Max loop nest depth: 	5
        Additions: 		2118
        Multiplications: 	640
        Divisions: 		0
        Logical: 		0
        Reads: 			3466
        Writes: 		393
        Comparisons:		32
        Gotos: 			0
        
 building the original code:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -DORIGINAL -o __orio_perftest_original.exe __orio_perftest1.c timer_cpu.o -lm
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest1.exe __orio_perftest1.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest1.exe  
Program Test Output: 
{'[4, 1, 2, 0, 6, 5, 0, 6, 5, 0, 0, 2, 0]' : 0.167036}
{'[4, 1, 2, 0, 6, 5, 0, 6, 5, 0, 0, 2, 0]' : 0.167167}
{'[4, 1, 2, 0, 6, 5, 0, 6, 5, 0, 0, 2, 0]' : 0.153405}
{'[4, 1, 2, 0, 6, 5, 0, 6, 5, 0, 0, 2, 0]' : 0.143953}
{'[4, 1, 2, 0, 6, 5, 0, 6, 5, 0, 0, 2, 0]' : 0.143989}
{'[4, 1, 2, 0, 6, 5, 0, 6, 5, 0, 0, 2, 0]' : 0.144223}
{'[4, 1, 2, 0, 6, 5, 0, 6, 5, 0, 0, 2, 0]' : 0.14935}
{'[4, 1, 2, 0, 6, 5, 0, 6, 5, 0, 0, 2, 0]' : 0.149606}
{'[4, 1, 2, 0, 6, 5, 0, 6, 5, 0, 0, 2, 0]' : 0.149644}
{'[4, 1, 2, 0, 6, 5, 0, 6, 5, 0, 0, 2, 0]' : 0.149649}
{'[4, 1, 2, 0, 6, 5, 0, 6, 5, 0, 0, 2, 0]' : 0.149159}
{'[4, 1, 2, 0, 6, 5, 0, 6, 5, 0, 0, 2, 0]' : 0.149139}
{'[4, 1, 2, 0, 6, 5, 0, 6, 5, 0, 0, 2, 0]' : 0.149217}
{'[4, 1, 2, 0, 6, 5, 0, 6, 5, 0, 0, 2, 0]' : 0.149879}
{'[4, 1, 2, 0, 6, 5, 0, 6, 5, 0, 0, 2, 0]' : 0.14954}
{'[4, 1, 2, 0, 6, 5, 0, 6, 5, 0, 0, 2, 0]' : 0.149589}
{'[4, 1, 2, 0, 6, 5, 0, 6, 5, 0, 0, 2, 0]' : 0.149291}
{'[4, 1, 2, 0, 6, 5, 0, 6, 5, 0, 0, 2, 0]' : 0.149185}
{'[4, 1, 2, 0, 6, 5, 0, 6, 5, 0, 0, 2, 0]' : 0.149121}
{'[4, 1, 2, 0, 6, 5, 0, 6, 5, 0, 0, 2, 0]' : 0.149821}
{'[4, 1, 2, 0, 6, 5, 0, 6, 5, 0, 0, 2, 0]' : 0.149504}
{'[4, 1, 2, 0, 6, 5, 0, 6, 5, 0, 0, 2, 0]' : 0.145383}
{'[4, 1, 2, 0, 6, 5, 0, 6, 5, 0, 0, 2, 0]' : 0.146202}
{'[4, 1, 2, 0, 6, 5, 0, 6, 5, 0, 0, 2, 0]' : 0.1493}
{'[4, 1, 2, 0, 6, 5, 0, 6, 5, 0, 0, 2, 0]' : 0.149383}
{'[4, 1, 2, 0, 6, 5, 0, 6, 5, 0, 0, 2, 0]' : 0.149221}
{'[4, 1, 2, 0, 6, 5, 0, 6, 5, 0, 0, 2, 0]' : 0.149463}
{'[4, 1, 2, 0, 6, 5, 0, 6, 5, 0, 0, 2, 0]' : 0.149487}
{'[4, 1, 2, 0, 6, 5, 0, 6, 5, 0, 0, 2, 0]' : 0.149729}
{'[4, 1, 2, 0, 6, 5, 0, 6, 5, 0, 0, 2, 0]' : 0.143256}

out:
 ["{'[4, 1, 2, 0, 6, 5, 0, 6, 5, 0, 0, 2, 0]' : 0.167036}", "{'[4, 1, 2, 0, 6, 5, 0, 6, 5, 0, 0, 2, 0]' : 0.167167}", "{'[4, 1, 2, 0, 6, 5, 0, 6, 5, 0, 0, 2, 0]' : 0.153405}", "{'[4, 1, 2, 0, 6, 5, 0, 6, 5, 0, 0, 2, 0]' : 0.143953}", "{'[4, 1, 2, 0, 6, 5, 0, 6, 5, 0, 0, 2, 0]' : 0.143989}", "{'[4, 1, 2, 0, 6, 5, 0, 6, 5, 0, 0, 2, 0]' : 0.144223}", "{'[4, 1, 2, 0, 6, 5, 0, 6, 5, 0, 0, 2, 0]' : 0.14935}", "{'[4, 1, 2, 0, 6, 5, 0, 6, 5, 0, 0, 2, 0]' : 0.149606}", "{'[4, 1, 2, 0, 6, 5, 0, 6, 5, 0, 0, 2, 0]' : 0.149644}", "{'[4, 1, 2, 0, 6, 5, 0, 6, 5, 0, 0, 2, 0]' : 0.149649}", "{'[4, 1, 2, 0, 6, 5, 0, 6, 5, 0, 0, 2, 0]' : 0.149159}", "{'[4, 1, 2, 0, 6, 5, 0, 6, 5, 0, 0, 2, 0]' : 0.149139}", "{'[4, 1, 2, 0, 6, 5, 0, 6, 5, 0, 0, 2, 0]' : 0.149217}", "{'[4, 1, 2, 0, 6, 5, 0, 6, 5, 0, 0, 2, 0]' : 0.149879}", "{'[4, 1, 2, 0, 6, 5, 0, 6, 5, 0, 0, 2, 0]' : 0.14954}", "{'[4, 1, 2, 0, 6, 5, 0, 6, 5, 0, 0, 2, 0]' : 0.149589}", "{'[4, 1, 2, 0, 6, 5, 0, 6, 5, 0, 0, 2, 0]' : 0.149291}", "{'[4, 1, 2, 0, 6, 5, 0, 6, 5, 0, 0, 2, 0]' : 0.149185}", "{'[4, 1, 2, 0, 6, 5, 0, 6, 5, 0, 0, 2, 0]' : 0.149121}", "{'[4, 1, 2, 0, 6, 5, 0, 6, 5, 0, 0, 2, 0]' : 0.149821}", "{'[4, 1, 2, 0, 6, 5, 0, 6, 5, 0, 0, 2, 0]' : 0.149504}", "{'[4, 1, 2, 0, 6, 5, 0, 6, 5, 0, 0, 2, 0]' : 0.145383}", "{'[4, 1, 2, 0, 6, 5, 0, 6, 5, 0, 0, 2, 0]' : 0.146202}", "{'[4, 1, 2, 0, 6, 5, 0, 6, 5, 0, 0, 2, 0]' : 0.1493}", "{'[4, 1, 2, 0, 6, 5, 0, 6, 5, 0, 0, 2, 0]' : 0.149383}", "{'[4, 1, 2, 0, 6, 5, 0, 6, 5, 0, 0, 2, 0]' : 0.149221}", "{'[4, 1, 2, 0, 6, 5, 0, 6, 5, 0, 0, 2, 0]' : 0.149463}", "{'[4, 1, 2, 0, 6, 5, 0, 6, 5, 0, 0, 2, 0]' : 0.149487}", "{'[4, 1, 2, 0, 6, 5, 0, 6, 5, 0, 0, 2, 0]' : 0.149729}", "{'[4, 1, 2, 0, 6, 5, 0, 6, 5, 0, 0, 2, 0]' : 0.143256}"]
returning from 'run': {'[4, 1, 2, 0, 6, 5, 0, 6, 5, 0, 0, 2, 0]': ([0.167036, 0.167167, 0.153405, 0.143953, 0.143989, 0.144223, 0.14935, 0.149606, 0.149644, 0.149649, 0.149159, 0.149139, 0.149217, 0.149879, 0.14954, 0.149589, 0.149291, 0.149185, 0.149121, 0.149821, 0.149504, 0.145383, 0.146202, 0.1493, 0.149383, 0.149221, 0.149463, 0.149487, 0.149729, 0.143256], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 1, 2, 0, 6, 5, 0, 6, 5, 0, 0, 2, 0]': ([0.167036, 0.167167, 0.153405, 0.143953, 0.143989, 0.144223, 0.14935, 0.149606, 0.149644, 0.149649, 0.149159, 0.149139, 0.149217, 0.149879, 0.14954, 0.149589, 0.149291, 0.149185, 0.149121, 0.149821, 0.149504, 0.145383, 0.146202, 0.1493, 0.149383, 0.149221, 0.149463, 0.149487, 0.149729, 0.143256], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	6
        Additions: 		657
        Multiplications: 	228
        Divisions: 		0
        Logical: 		0
        Reads: 			1328
        Writes: 		175
        Comparisons:		22
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest2.exe __orio_perftest2.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest2.exe  
Program Test Output: 
{'[6, 4, 6, 5, 3, 5, 12, 1, 0, 3, 0, 2, 0]' : 0.151793}
{'[6, 4, 6, 5, 3, 5, 12, 1, 0, 3, 0, 2, 0]' : 0.151687}
{'[6, 4, 6, 5, 3, 5, 12, 1, 0, 3, 0, 2, 0]' : 0.143586}
{'[6, 4, 6, 5, 3, 5, 12, 1, 0, 3, 0, 2, 0]' : 0.126575}
{'[6, 4, 6, 5, 3, 5, 12, 1, 0, 3, 0, 2, 0]' : 0.131732}
{'[6, 4, 6, 5, 3, 5, 12, 1, 0, 3, 0, 2, 0]' : 0.135363}
{'[6, 4, 6, 5, 3, 5, 12, 1, 0, 3, 0, 2, 0]' : 0.135418}
{'[6, 4, 6, 5, 3, 5, 12, 1, 0, 3, 0, 2, 0]' : 0.135342}
{'[6, 4, 6, 5, 3, 5, 12, 1, 0, 3, 0, 2, 0]' : 0.132134}
{'[6, 4, 6, 5, 3, 5, 12, 1, 0, 3, 0, 2, 0]' : 0.131747}
{'[6, 4, 6, 5, 3, 5, 12, 1, 0, 3, 0, 2, 0]' : 0.129627}
{'[6, 4, 6, 5, 3, 5, 12, 1, 0, 3, 0, 2, 0]' : 0.129826}
{'[6, 4, 6, 5, 3, 5, 12, 1, 0, 3, 0, 2, 0]' : 0.133836}
{'[6, 4, 6, 5, 3, 5, 12, 1, 0, 3, 0, 2, 0]' : 0.13337}
{'[6, 4, 6, 5, 3, 5, 12, 1, 0, 3, 0, 2, 0]' : 0.133357}
{'[6, 4, 6, 5, 3, 5, 12, 1, 0, 3, 0, 2, 0]' : 0.131763}
{'[6, 4, 6, 5, 3, 5, 12, 1, 0, 3, 0, 2, 0]' : 0.135171}
{'[6, 4, 6, 5, 3, 5, 12, 1, 0, 3, 0, 2, 0]' : 0.135141}
{'[6, 4, 6, 5, 3, 5, 12, 1, 0, 3, 0, 2, 0]' : 0.132849}
{'[6, 4, 6, 5, 3, 5, 12, 1, 0, 3, 0, 2, 0]' : 0.131756}
{'[6, 4, 6, 5, 3, 5, 12, 1, 0, 3, 0, 2, 0]' : 0.13033}
{'[6, 4, 6, 5, 3, 5, 12, 1, 0, 3, 0, 2, 0]' : 0.131292}
{'[6, 4, 6, 5, 3, 5, 12, 1, 0, 3, 0, 2, 0]' : 0.131785}
{'[6, 4, 6, 5, 3, 5, 12, 1, 0, 3, 0, 2, 0]' : 0.134684}
{'[6, 4, 6, 5, 3, 5, 12, 1, 0, 3, 0, 2, 0]' : 0.135372}
{'[6, 4, 6, 5, 3, 5, 12, 1, 0, 3, 0, 2, 0]' : 0.135615}
{'[6, 4, 6, 5, 3, 5, 12, 1, 0, 3, 0, 2, 0]' : 0.135497}
{'[6, 4, 6, 5, 3, 5, 12, 1, 0, 3, 0, 2, 0]' : 0.135326}
{'[6, 4, 6, 5, 3, 5, 12, 1, 0, 3, 0, 2, 0]' : 0.133667}
{'[6, 4, 6, 5, 3, 5, 12, 1, 0, 3, 0, 2, 0]' : 0.133323}

out:
 ["{'[6, 4, 6, 5, 3, 5, 12, 1, 0, 3, 0, 2, 0]' : 0.151793}", "{'[6, 4, 6, 5, 3, 5, 12, 1, 0, 3, 0, 2, 0]' : 0.151687}", "{'[6, 4, 6, 5, 3, 5, 12, 1, 0, 3, 0, 2, 0]' : 0.143586}", "{'[6, 4, 6, 5, 3, 5, 12, 1, 0, 3, 0, 2, 0]' : 0.126575}", "{'[6, 4, 6, 5, 3, 5, 12, 1, 0, 3, 0, 2, 0]' : 0.131732}", "{'[6, 4, 6, 5, 3, 5, 12, 1, 0, 3, 0, 2, 0]' : 0.135363}", "{'[6, 4, 6, 5, 3, 5, 12, 1, 0, 3, 0, 2, 0]' : 0.135418}", "{'[6, 4, 6, 5, 3, 5, 12, 1, 0, 3, 0, 2, 0]' : 0.135342}", "{'[6, 4, 6, 5, 3, 5, 12, 1, 0, 3, 0, 2, 0]' : 0.132134}", "{'[6, 4, 6, 5, 3, 5, 12, 1, 0, 3, 0, 2, 0]' : 0.131747}", "{'[6, 4, 6, 5, 3, 5, 12, 1, 0, 3, 0, 2, 0]' : 0.129627}", "{'[6, 4, 6, 5, 3, 5, 12, 1, 0, 3, 0, 2, 0]' : 0.129826}", "{'[6, 4, 6, 5, 3, 5, 12, 1, 0, 3, 0, 2, 0]' : 0.133836}", "{'[6, 4, 6, 5, 3, 5, 12, 1, 0, 3, 0, 2, 0]' : 0.13337}", "{'[6, 4, 6, 5, 3, 5, 12, 1, 0, 3, 0, 2, 0]' : 0.133357}", "{'[6, 4, 6, 5, 3, 5, 12, 1, 0, 3, 0, 2, 0]' : 0.131763}", "{'[6, 4, 6, 5, 3, 5, 12, 1, 0, 3, 0, 2, 0]' : 0.135171}", "{'[6, 4, 6, 5, 3, 5, 12, 1, 0, 3, 0, 2, 0]' : 0.135141}", "{'[6, 4, 6, 5, 3, 5, 12, 1, 0, 3, 0, 2, 0]' : 0.132849}", "{'[6, 4, 6, 5, 3, 5, 12, 1, 0, 3, 0, 2, 0]' : 0.131756}", "{'[6, 4, 6, 5, 3, 5, 12, 1, 0, 3, 0, 2, 0]' : 0.13033}", "{'[6, 4, 6, 5, 3, 5, 12, 1, 0, 3, 0, 2, 0]' : 0.131292}", "{'[6, 4, 6, 5, 3, 5, 12, 1, 0, 3, 0, 2, 0]' : 0.131785}", "{'[6, 4, 6, 5, 3, 5, 12, 1, 0, 3, 0, 2, 0]' : 0.134684}", "{'[6, 4, 6, 5, 3, 5, 12, 1, 0, 3, 0, 2, 0]' : 0.135372}", "{'[6, 4, 6, 5, 3, 5, 12, 1, 0, 3, 0, 2, 0]' : 0.135615}", "{'[6, 4, 6, 5, 3, 5, 12, 1, 0, 3, 0, 2, 0]' : 0.135497}", "{'[6, 4, 6, 5, 3, 5, 12, 1, 0, 3, 0, 2, 0]' : 0.135326}", "{'[6, 4, 6, 5, 3, 5, 12, 1, 0, 3, 0, 2, 0]' : 0.133667}", "{'[6, 4, 6, 5, 3, 5, 12, 1, 0, 3, 0, 2, 0]' : 0.133323}"]
returning from 'run': {'[6, 4, 6, 5, 3, 5, 12, 1, 0, 3, 0, 2, 0]': ([0.151793, 0.151687, 0.143586, 0.126575, 0.131732, 0.135363, 0.135418, 0.135342, 0.132134, 0.131747, 0.129627, 0.129826, 0.133836, 0.13337, 0.133357, 0.131763, 0.135171, 0.135141, 0.132849, 0.131756, 0.13033, 0.131292, 0.131785, 0.134684, 0.135372, 0.135615, 0.135497, 0.135326, 0.133667, 0.133323], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 4, 6, 5, 3, 5, 12, 1, 0, 3, 0, 2, 0]': ([0.151793, 0.151687, 0.143586, 0.126575, 0.131732, 0.135363, 0.135418, 0.135342, 0.132134, 0.131747, 0.129627, 0.129826, 0.133836, 0.13337, 0.133357, 0.131763, 0.135171, 0.135141, 0.132849, 0.131756, 0.13033, 0.131292, 0.131785, 0.134684, 0.135372, 0.135615, 0.135497, 0.135326, 0.133667, 0.133323], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = kkk
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	6
        Additions: 		997
        Multiplications: 	320
        Divisions: 		0
        Logical: 		0
        Reads: 			1846
        Writes: 		243
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest3.exe __orio_perftest3.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest3.exe  
Program Test Output: 
{'[1, 2, 4, 6, 2, 2, 29, 2, 29, 0, 0, 1, 0]' : 0.152977}
{'[1, 2, 4, 6, 2, 2, 29, 2, 29, 0, 0, 1, 0]' : 0.152814}
{'[1, 2, 4, 6, 2, 2, 29, 2, 29, 0, 0, 1, 0]' : 0.140646}
{'[1, 2, 4, 6, 2, 2, 29, 2, 29, 0, 0, 1, 0]' : 0.136481}
{'[1, 2, 4, 6, 2, 2, 29, 2, 29, 0, 0, 1, 0]' : 0.13672}
{'[1, 2, 4, 6, 2, 2, 29, 2, 29, 0, 0, 1, 0]' : 0.136142}
{'[1, 2, 4, 6, 2, 2, 29, 2, 29, 0, 0, 1, 0]' : 0.132413}
{'[1, 2, 4, 6, 2, 2, 29, 2, 29, 0, 0, 1, 0]' : 0.133173}
{'[1, 2, 4, 6, 2, 2, 29, 2, 29, 0, 0, 1, 0]' : 0.136453}
{'[1, 2, 4, 6, 2, 2, 29, 2, 29, 0, 0, 1, 0]' : 0.136439}
{'[1, 2, 4, 6, 2, 2, 29, 2, 29, 0, 0, 1, 0]' : 0.136487}
{'[1, 2, 4, 6, 2, 2, 29, 2, 29, 0, 0, 1, 0]' : 0.13653}
{'[1, 2, 4, 6, 2, 2, 29, 2, 29, 0, 0, 1, 0]' : 0.136458}
{'[1, 2, 4, 6, 2, 2, 29, 2, 29, 0, 0, 1, 0]' : 0.133611}
{'[1, 2, 4, 6, 2, 2, 29, 2, 29, 0, 0, 1, 0]' : 0.132384}
{'[1, 2, 4, 6, 2, 2, 29, 2, 29, 0, 0, 1, 0]' : 0.135523}
{'[1, 2, 4, 6, 2, 2, 29, 2, 29, 0, 0, 1, 0]' : 0.136417}
{'[1, 2, 4, 6, 2, 2, 29, 2, 29, 0, 0, 1, 0]' : 0.136464}
{'[1, 2, 4, 6, 2, 2, 29, 2, 29, 0, 0, 1, 0]' : 0.136765}
{'[1, 2, 4, 6, 2, 2, 29, 2, 29, 0, 0, 1, 0]' : 0.136461}
{'[1, 2, 4, 6, 2, 2, 29, 2, 29, 0, 0, 1, 0]' : 0.135148}
{'[1, 2, 4, 6, 2, 2, 29, 2, 29, 0, 0, 1, 0]' : 0.132289}
{'[1, 2, 4, 6, 2, 2, 29, 2, 29, 0, 0, 1, 0]' : 0.134065}
{'[1, 2, 4, 6, 2, 2, 29, 2, 29, 0, 0, 1, 0]' : 0.136468}
{'[1, 2, 4, 6, 2, 2, 29, 2, 29, 0, 0, 1, 0]' : 0.136474}
{'[1, 2, 4, 6, 2, 2, 29, 2, 29, 0, 0, 1, 0]' : 0.136384}
{'[1, 2, 4, 6, 2, 2, 29, 2, 29, 0, 0, 1, 0]' : 0.136538}
{'[1, 2, 4, 6, 2, 2, 29, 2, 29, 0, 0, 1, 0]' : 0.13647}
{'[1, 2, 4, 6, 2, 2, 29, 2, 29, 0, 0, 1, 0]' : 0.132601}
{'[1, 2, 4, 6, 2, 2, 29, 2, 29, 0, 0, 1, 0]' : 0.13257}

out:
 ["{'[1, 2, 4, 6, 2, 2, 29, 2, 29, 0, 0, 1, 0]' : 0.152977}", "{'[1, 2, 4, 6, 2, 2, 29, 2, 29, 0, 0, 1, 0]' : 0.152814}", "{'[1, 2, 4, 6, 2, 2, 29, 2, 29, 0, 0, 1, 0]' : 0.140646}", "{'[1, 2, 4, 6, 2, 2, 29, 2, 29, 0, 0, 1, 0]' : 0.136481}", "{'[1, 2, 4, 6, 2, 2, 29, 2, 29, 0, 0, 1, 0]' : 0.13672}", "{'[1, 2, 4, 6, 2, 2, 29, 2, 29, 0, 0, 1, 0]' : 0.136142}", "{'[1, 2, 4, 6, 2, 2, 29, 2, 29, 0, 0, 1, 0]' : 0.132413}", "{'[1, 2, 4, 6, 2, 2, 29, 2, 29, 0, 0, 1, 0]' : 0.133173}", "{'[1, 2, 4, 6, 2, 2, 29, 2, 29, 0, 0, 1, 0]' : 0.136453}", "{'[1, 2, 4, 6, 2, 2, 29, 2, 29, 0, 0, 1, 0]' : 0.136439}", "{'[1, 2, 4, 6, 2, 2, 29, 2, 29, 0, 0, 1, 0]' : 0.136487}", "{'[1, 2, 4, 6, 2, 2, 29, 2, 29, 0, 0, 1, 0]' : 0.13653}", "{'[1, 2, 4, 6, 2, 2, 29, 2, 29, 0, 0, 1, 0]' : 0.136458}", "{'[1, 2, 4, 6, 2, 2, 29, 2, 29, 0, 0, 1, 0]' : 0.133611}", "{'[1, 2, 4, 6, 2, 2, 29, 2, 29, 0, 0, 1, 0]' : 0.132384}", "{'[1, 2, 4, 6, 2, 2, 29, 2, 29, 0, 0, 1, 0]' : 0.135523}", "{'[1, 2, 4, 6, 2, 2, 29, 2, 29, 0, 0, 1, 0]' : 0.136417}", "{'[1, 2, 4, 6, 2, 2, 29, 2, 29, 0, 0, 1, 0]' : 0.136464}", "{'[1, 2, 4, 6, 2, 2, 29, 2, 29, 0, 0, 1, 0]' : 0.136765}", "{'[1, 2, 4, 6, 2, 2, 29, 2, 29, 0, 0, 1, 0]' : 0.136461}", "{'[1, 2, 4, 6, 2, 2, 29, 2, 29, 0, 0, 1, 0]' : 0.135148}", "{'[1, 2, 4, 6, 2, 2, 29, 2, 29, 0, 0, 1, 0]' : 0.132289}", "{'[1, 2, 4, 6, 2, 2, 29, 2, 29, 0, 0, 1, 0]' : 0.134065}", "{'[1, 2, 4, 6, 2, 2, 29, 2, 29, 0, 0, 1, 0]' : 0.136468}", "{'[1, 2, 4, 6, 2, 2, 29, 2, 29, 0, 0, 1, 0]' : 0.136474}", "{'[1, 2, 4, 6, 2, 2, 29, 2, 29, 0, 0, 1, 0]' : 0.136384}", "{'[1, 2, 4, 6, 2, 2, 29, 2, 29, 0, 0, 1, 0]' : 0.136538}", "{'[1, 2, 4, 6, 2, 2, 29, 2, 29, 0, 0, 1, 0]' : 0.13647}", "{'[1, 2, 4, 6, 2, 2, 29, 2, 29, 0, 0, 1, 0]' : 0.132601}", "{'[1, 2, 4, 6, 2, 2, 29, 2, 29, 0, 0, 1, 0]' : 0.13257}"]
returning from 'run': {'[1, 2, 4, 6, 2, 2, 29, 2, 29, 0, 0, 1, 0]': ([0.152977, 0.152814, 0.140646, 0.136481, 0.13672, 0.136142, 0.132413, 0.133173, 0.136453, 0.136439, 0.136487, 0.13653, 0.136458, 0.133611, 0.132384, 0.135523, 0.136417, 0.136464, 0.136765, 0.136461, 0.135148, 0.132289, 0.134065, 0.136468, 0.136474, 0.136384, 0.136538, 0.13647, 0.132601, 0.13257], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 2, 4, 6, 2, 2, 29, 2, 29, 0, 0, 1, 0]': ([0.152977, 0.152814, 0.140646, 0.136481, 0.13672, 0.136142, 0.132413, 0.133173, 0.136453, 0.136439, 0.136487, 0.13653, 0.136458, 0.133611, 0.132384, 0.135523, 0.136417, 0.136464, 0.136765, 0.136461, 0.135148, 0.132289, 0.134065, 0.136468, 0.136474, 0.136384, 0.136538, 0.13647, 0.132601, 0.13257], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	78
        Max loop nest depth: 	4
        Additions: 		7637
        Multiplications: 	2170
        Divisions: 		0
        Logical: 		0
        Reads: 			11630
        Writes: 		1302
        Comparisons:		78
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest4.exe __orio_perftest4.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest4.exe  
Program Test Output: 
{'[0, 0, 3, 0, 2, 2, 28, 29, 0, 16, 0, 1, 1]' : 0.231797}
{'[0, 0, 3, 0, 2, 2, 28, 29, 0, 16, 0, 1, 1]' : 0.227752}
{'[0, 0, 3, 0, 2, 2, 28, 29, 0, 16, 0, 1, 1]' : 0.208912}
{'[0, 0, 3, 0, 2, 2, 28, 29, 0, 16, 0, 1, 1]' : 0.21188}
{'[0, 0, 3, 0, 2, 2, 28, 29, 0, 16, 0, 1, 1]' : 0.215163}
{'[0, 0, 3, 0, 2, 2, 28, 29, 0, 16, 0, 1, 1]' : 0.212802}
{'[0, 0, 3, 0, 2, 2, 28, 29, 0, 16, 0, 1, 1]' : 0.213821}
{'[0, 0, 3, 0, 2, 2, 28, 29, 0, 16, 0, 1, 1]' : 0.217716}
{'[0, 0, 3, 0, 2, 2, 28, 29, 0, 16, 0, 1, 1]' : 0.215128}
{'[0, 0, 3, 0, 2, 2, 28, 29, 0, 16, 0, 1, 1]' : 0.210486}
{'[0, 0, 3, 0, 2, 2, 28, 29, 0, 16, 0, 1, 1]' : 0.218706}
{'[0, 0, 3, 0, 2, 2, 28, 29, 0, 16, 0, 1, 1]' : 0.209776}
{'[0, 0, 3, 0, 2, 2, 28, 29, 0, 16, 0, 1, 1]' : 0.211083}
{'[0, 0, 3, 0, 2, 2, 28, 29, 0, 16, 0, 1, 1]' : 0.209733}
{'[0, 0, 3, 0, 2, 2, 28, 29, 0, 16, 0, 1, 1]' : 0.214329}
{'[0, 0, 3, 0, 2, 2, 28, 29, 0, 16, 0, 1, 1]' : 0.215019}
{'[0, 0, 3, 0, 2, 2, 28, 29, 0, 16, 0, 1, 1]' : 0.211494}
{'[0, 0, 3, 0, 2, 2, 28, 29, 0, 16, 0, 1, 1]' : 0.211895}
{'[0, 0, 3, 0, 2, 2, 28, 29, 0, 16, 0, 1, 1]' : 0.213746}
{'[0, 0, 3, 0, 2, 2, 28, 29, 0, 16, 0, 1, 1]' : 0.209522}
{'[0, 0, 3, 0, 2, 2, 28, 29, 0, 16, 0, 1, 1]' : 0.215781}
{'[0, 0, 3, 0, 2, 2, 28, 29, 0, 16, 0, 1, 1]' : 0.214445}
{'[0, 0, 3, 0, 2, 2, 28, 29, 0, 16, 0, 1, 1]' : 0.211894}
{'[0, 0, 3, 0, 2, 2, 28, 29, 0, 16, 0, 1, 1]' : 0.210773}
{'[0, 0, 3, 0, 2, 2, 28, 29, 0, 16, 0, 1, 1]' : 0.215455}
{'[0, 0, 3, 0, 2, 2, 28, 29, 0, 16, 0, 1, 1]' : 0.215894}
{'[0, 0, 3, 0, 2, 2, 28, 29, 0, 16, 0, 1, 1]' : 0.212529}
{'[0, 0, 3, 0, 2, 2, 28, 29, 0, 16, 0, 1, 1]' : 0.211508}
{'[0, 0, 3, 0, 2, 2, 28, 29, 0, 16, 0, 1, 1]' : 0.208968}
{'[0, 0, 3, 0, 2, 2, 28, 29, 0, 16, 0, 1, 1]' : 0.213045}

out:
 ["{'[0, 0, 3, 0, 2, 2, 28, 29, 0, 16, 0, 1, 1]' : 0.231797}", "{'[0, 0, 3, 0, 2, 2, 28, 29, 0, 16, 0, 1, 1]' : 0.227752}", "{'[0, 0, 3, 0, 2, 2, 28, 29, 0, 16, 0, 1, 1]' : 0.208912}", "{'[0, 0, 3, 0, 2, 2, 28, 29, 0, 16, 0, 1, 1]' : 0.21188}", "{'[0, 0, 3, 0, 2, 2, 28, 29, 0, 16, 0, 1, 1]' : 0.215163}", "{'[0, 0, 3, 0, 2, 2, 28, 29, 0, 16, 0, 1, 1]' : 0.212802}", "{'[0, 0, 3, 0, 2, 2, 28, 29, 0, 16, 0, 1, 1]' : 0.213821}", "{'[0, 0, 3, 0, 2, 2, 28, 29, 0, 16, 0, 1, 1]' : 0.217716}", "{'[0, 0, 3, 0, 2, 2, 28, 29, 0, 16, 0, 1, 1]' : 0.215128}", "{'[0, 0, 3, 0, 2, 2, 28, 29, 0, 16, 0, 1, 1]' : 0.210486}", "{'[0, 0, 3, 0, 2, 2, 28, 29, 0, 16, 0, 1, 1]' : 0.218706}", "{'[0, 0, 3, 0, 2, 2, 28, 29, 0, 16, 0, 1, 1]' : 0.209776}", "{'[0, 0, 3, 0, 2, 2, 28, 29, 0, 16, 0, 1, 1]' : 0.211083}", "{'[0, 0, 3, 0, 2, 2, 28, 29, 0, 16, 0, 1, 1]' : 0.209733}", "{'[0, 0, 3, 0, 2, 2, 28, 29, 0, 16, 0, 1, 1]' : 0.214329}", "{'[0, 0, 3, 0, 2, 2, 28, 29, 0, 16, 0, 1, 1]' : 0.215019}", "{'[0, 0, 3, 0, 2, 2, 28, 29, 0, 16, 0, 1, 1]' : 0.211494}", "{'[0, 0, 3, 0, 2, 2, 28, 29, 0, 16, 0, 1, 1]' : 0.211895}", "{'[0, 0, 3, 0, 2, 2, 28, 29, 0, 16, 0, 1, 1]' : 0.213746}", "{'[0, 0, 3, 0, 2, 2, 28, 29, 0, 16, 0, 1, 1]' : 0.209522}", "{'[0, 0, 3, 0, 2, 2, 28, 29, 0, 16, 0, 1, 1]' : 0.215781}", "{'[0, 0, 3, 0, 2, 2, 28, 29, 0, 16, 0, 1, 1]' : 0.214445}", "{'[0, 0, 3, 0, 2, 2, 28, 29, 0, 16, 0, 1, 1]' : 0.211894}", "{'[0, 0, 3, 0, 2, 2, 28, 29, 0, 16, 0, 1, 1]' : 0.210773}", "{'[0, 0, 3, 0, 2, 2, 28, 29, 0, 16, 0, 1, 1]' : 0.215455}", "{'[0, 0, 3, 0, 2, 2, 28, 29, 0, 16, 0, 1, 1]' : 0.215894}", "{'[0, 0, 3, 0, 2, 2, 28, 29, 0, 16, 0, 1, 1]' : 0.212529}", "{'[0, 0, 3, 0, 2, 2, 28, 29, 0, 16, 0, 1, 1]' : 0.211508}", "{'[0, 0, 3, 0, 2, 2, 28, 29, 0, 16, 0, 1, 1]' : 0.208968}", "{'[0, 0, 3, 0, 2, 2, 28, 29, 0, 16, 0, 1, 1]' : 0.213045}"]
returning from 'run': {'[0, 0, 3, 0, 2, 2, 28, 29, 0, 16, 0, 1, 1]': ([0.231797, 0.227752, 0.208912, 0.21188, 0.215163, 0.212802, 0.213821, 0.217716, 0.215128, 0.210486, 0.218706, 0.209776, 0.211083, 0.209733, 0.214329, 0.215019, 0.211494, 0.211895, 0.213746, 0.209522, 0.215781, 0.214445, 0.211894, 0.210773, 0.215455, 0.215894, 0.212529, 0.211508, 0.208968, 0.213045], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 3, 0, 2, 2, 28, 29, 0, 16, 0, 1, 1]': ([0.231797, 0.227752, 0.208912, 0.21188, 0.215163, 0.212802, 0.213821, 0.217716, 0.215128, 0.210486, 0.218706, 0.209776, 0.211083, 0.209733, 0.214329, 0.215019, 0.211494, 0.211895, 0.213746, 0.209522, 0.215781, 0.214445, 0.211894, 0.210773, 0.215455, 0.215894, 0.212529, 0.211508, 0.208968, 0.213045], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	6
        Additions: 		1493
        Multiplications: 	468
        Divisions: 		0
        Logical: 		0
        Reads: 			2518
        Writes: 		288
        Comparisons:		22
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest5.exe __orio_perftest5.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest5.exe  
Program Test Output: 
{'[1, 0, 1, 1, 2, 5, 6, 0, 12, 2, 1, 1, 0]' : 0.145132}
{'[1, 0, 1, 1, 2, 5, 6, 0, 12, 2, 1, 1, 0]' : 0.142247}
{'[1, 0, 1, 1, 2, 5, 6, 0, 12, 2, 1, 1, 0]' : 0.130055}
{'[1, 0, 1, 1, 2, 5, 6, 0, 12, 2, 1, 1, 0]' : 0.129933}
{'[1, 0, 1, 1, 2, 5, 6, 0, 12, 2, 1, 1, 0]' : 0.129877}
{'[1, 0, 1, 1, 2, 5, 6, 0, 12, 2, 1, 1, 0]' : 0.129869}
{'[1, 0, 1, 1, 2, 5, 6, 0, 12, 2, 1, 1, 0]' : 0.127863}
{'[1, 0, 1, 1, 2, 5, 6, 0, 12, 2, 1, 1, 0]' : 0.126915}
{'[1, 0, 1, 1, 2, 5, 6, 0, 12, 2, 1, 1, 0]' : 0.126818}
{'[1, 0, 1, 1, 2, 5, 6, 0, 12, 2, 1, 1, 0]' : 0.126968}
{'[1, 0, 1, 1, 2, 5, 6, 0, 12, 2, 1, 1, 0]' : 0.127235}
{'[1, 0, 1, 1, 2, 5, 6, 0, 12, 2, 1, 1, 0]' : 0.126825}
{'[1, 0, 1, 1, 2, 5, 6, 0, 12, 2, 1, 1, 0]' : 0.129909}
{'[1, 0, 1, 1, 2, 5, 6, 0, 12, 2, 1, 1, 0]' : 0.129895}
{'[1, 0, 1, 1, 2, 5, 6, 0, 12, 2, 1, 1, 0]' : 0.130121}
{'[1, 0, 1, 1, 2, 5, 6, 0, 12, 2, 1, 1, 0]' : 0.129963}
{'[1, 0, 1, 1, 2, 5, 6, 0, 12, 2, 1, 1, 0]' : 0.129918}
{'[1, 0, 1, 1, 2, 5, 6, 0, 12, 2, 1, 1, 0]' : 0.129914}
{'[1, 0, 1, 1, 2, 5, 6, 0, 12, 2, 1, 1, 0]' : 0.130059}
{'[1, 0, 1, 1, 2, 5, 6, 0, 12, 2, 1, 1, 0]' : 0.129982}
{'[1, 0, 1, 1, 2, 5, 6, 0, 12, 2, 1, 1, 0]' : 0.130219}
{'[1, 0, 1, 1, 2, 5, 6, 0, 12, 2, 1, 1, 0]' : 0.130008}
{'[1, 0, 1, 1, 2, 5, 6, 0, 12, 2, 1, 1, 0]' : 0.130108}
{'[1, 0, 1, 1, 2, 5, 6, 0, 12, 2, 1, 1, 0]' : 0.129962}
{'[1, 0, 1, 1, 2, 5, 6, 0, 12, 2, 1, 1, 0]' : 0.129924}
{'[1, 0, 1, 1, 2, 5, 6, 0, 12, 2, 1, 1, 0]' : 0.129929}
{'[1, 0, 1, 1, 2, 5, 6, 0, 12, 2, 1, 1, 0]' : 0.127438}
{'[1, 0, 1, 1, 2, 5, 6, 0, 12, 2, 1, 1, 0]' : 0.127084}
{'[1, 0, 1, 1, 2, 5, 6, 0, 12, 2, 1, 1, 0]' : 0.126936}
{'[1, 0, 1, 1, 2, 5, 6, 0, 12, 2, 1, 1, 0]' : 0.126906}

out:
 ["{'[1, 0, 1, 1, 2, 5, 6, 0, 12, 2, 1, 1, 0]' : 0.145132}", "{'[1, 0, 1, 1, 2, 5, 6, 0, 12, 2, 1, 1, 0]' : 0.142247}", "{'[1, 0, 1, 1, 2, 5, 6, 0, 12, 2, 1, 1, 0]' : 0.130055}", "{'[1, 0, 1, 1, 2, 5, 6, 0, 12, 2, 1, 1, 0]' : 0.129933}", "{'[1, 0, 1, 1, 2, 5, 6, 0, 12, 2, 1, 1, 0]' : 0.129877}", "{'[1, 0, 1, 1, 2, 5, 6, 0, 12, 2, 1, 1, 0]' : 0.129869}", "{'[1, 0, 1, 1, 2, 5, 6, 0, 12, 2, 1, 1, 0]' : 0.127863}", "{'[1, 0, 1, 1, 2, 5, 6, 0, 12, 2, 1, 1, 0]' : 0.126915}", "{'[1, 0, 1, 1, 2, 5, 6, 0, 12, 2, 1, 1, 0]' : 0.126818}", "{'[1, 0, 1, 1, 2, 5, 6, 0, 12, 2, 1, 1, 0]' : 0.126968}", "{'[1, 0, 1, 1, 2, 5, 6, 0, 12, 2, 1, 1, 0]' : 0.127235}", "{'[1, 0, 1, 1, 2, 5, 6, 0, 12, 2, 1, 1, 0]' : 0.126825}", "{'[1, 0, 1, 1, 2, 5, 6, 0, 12, 2, 1, 1, 0]' : 0.129909}", "{'[1, 0, 1, 1, 2, 5, 6, 0, 12, 2, 1, 1, 0]' : 0.129895}", "{'[1, 0, 1, 1, 2, 5, 6, 0, 12, 2, 1, 1, 0]' : 0.130121}", "{'[1, 0, 1, 1, 2, 5, 6, 0, 12, 2, 1, 1, 0]' : 0.129963}", "{'[1, 0, 1, 1, 2, 5, 6, 0, 12, 2, 1, 1, 0]' : 0.129918}", "{'[1, 0, 1, 1, 2, 5, 6, 0, 12, 2, 1, 1, 0]' : 0.129914}", "{'[1, 0, 1, 1, 2, 5, 6, 0, 12, 2, 1, 1, 0]' : 0.130059}", "{'[1, 0, 1, 1, 2, 5, 6, 0, 12, 2, 1, 1, 0]' : 0.129982}", "{'[1, 0, 1, 1, 2, 5, 6, 0, 12, 2, 1, 1, 0]' : 0.130219}", "{'[1, 0, 1, 1, 2, 5, 6, 0, 12, 2, 1, 1, 0]' : 0.130008}", "{'[1, 0, 1, 1, 2, 5, 6, 0, 12, 2, 1, 1, 0]' : 0.130108}", "{'[1, 0, 1, 1, 2, 5, 6, 0, 12, 2, 1, 1, 0]' : 0.129962}", "{'[1, 0, 1, 1, 2, 5, 6, 0, 12, 2, 1, 1, 0]' : 0.129924}", "{'[1, 0, 1, 1, 2, 5, 6, 0, 12, 2, 1, 1, 0]' : 0.129929}", "{'[1, 0, 1, 1, 2, 5, 6, 0, 12, 2, 1, 1, 0]' : 0.127438}", "{'[1, 0, 1, 1, 2, 5, 6, 0, 12, 2, 1, 1, 0]' : 0.127084}", "{'[1, 0, 1, 1, 2, 5, 6, 0, 12, 2, 1, 1, 0]' : 0.126936}", "{'[1, 0, 1, 1, 2, 5, 6, 0, 12, 2, 1, 1, 0]' : 0.126906}"]
returning from 'run': {'[1, 0, 1, 1, 2, 5, 6, 0, 12, 2, 1, 1, 0]': ([0.145132, 0.142247, 0.130055, 0.129933, 0.129877, 0.129869, 0.127863, 0.126915, 0.126818, 0.126968, 0.127235, 0.126825, 0.129909, 0.129895, 0.130121, 0.129963, 0.129918, 0.129914, 0.130059, 0.129982, 0.130219, 0.130008, 0.130108, 0.129962, 0.129924, 0.129929, 0.127438, 0.127084, 0.126936, 0.126906], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 1, 1, 2, 5, 6, 0, 12, 2, 1, 1, 0]': ([0.145132, 0.142247, 0.130055, 0.129933, 0.129877, 0.129869, 0.127863, 0.126915, 0.126818, 0.126968, 0.127235, 0.126825, 0.129909, 0.129895, 0.130121, 0.129963, 0.129918, 0.129914, 0.130059, 0.129982, 0.130219, 0.130008, 0.130108, 0.129962, 0.129924, 0.129929, 0.127438, 0.127084, 0.126936, 0.126906], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	4
        Additions: 		2630
        Multiplications: 	814
        Divisions: 		0
        Logical: 		0
        Reads: 			4303
        Writes: 		492
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest6.exe __orio_perftest6.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest6.exe  
Program Test Output: 
{'[1, 6, 5, 0, 4, 0, 11, 27, 8, 0, 1, 0, 0]' : 0.136174}
{'[1, 6, 5, 0, 4, 0, 11, 27, 8, 0, 1, 0, 0]' : 0.135837}
{'[1, 6, 5, 0, 4, 0, 11, 27, 8, 0, 1, 0, 0]' : 0.135911}
{'[1, 6, 5, 0, 4, 0, 11, 27, 8, 0, 1, 0, 0]' : 0.130406}
{'[1, 6, 5, 0, 4, 0, 11, 27, 8, 0, 1, 0, 0]' : 0.122245}
{'[1, 6, 5, 0, 4, 0, 11, 27, 8, 0, 1, 0, 0]' : 0.122272}
{'[1, 6, 5, 0, 4, 0, 11, 27, 8, 0, 1, 0, 0]' : 0.122183}
{'[1, 6, 5, 0, 4, 0, 11, 27, 8, 0, 1, 0, 0]' : 0.12236}
{'[1, 6, 5, 0, 4, 0, 11, 27, 8, 0, 1, 0, 0]' : 0.122225}
{'[1, 6, 5, 0, 4, 0, 11, 27, 8, 0, 1, 0, 0]' : 0.122278}
{'[1, 6, 5, 0, 4, 0, 11, 27, 8, 0, 1, 0, 0]' : 0.122517}
{'[1, 6, 5, 0, 4, 0, 11, 27, 8, 0, 1, 0, 0]' : 0.123088}
{'[1, 6, 5, 0, 4, 0, 11, 27, 8, 0, 1, 0, 0]' : 0.122634}
{'[1, 6, 5, 0, 4, 0, 11, 27, 8, 0, 1, 0, 0]' : 0.122632}
{'[1, 6, 5, 0, 4, 0, 11, 27, 8, 0, 1, 0, 0]' : 0.121973}
{'[1, 6, 5, 0, 4, 0, 11, 27, 8, 0, 1, 0, 0]' : 0.121685}
{'[1, 6, 5, 0, 4, 0, 11, 27, 8, 0, 1, 0, 0]' : 0.122522}
{'[1, 6, 5, 0, 4, 0, 11, 27, 8, 0, 1, 0, 0]' : 0.120097}
{'[1, 6, 5, 0, 4, 0, 11, 27, 8, 0, 1, 0, 0]' : 0.11976}
{'[1, 6, 5, 0, 4, 0, 11, 27, 8, 0, 1, 0, 0]' : 0.120524}
{'[1, 6, 5, 0, 4, 0, 11, 27, 8, 0, 1, 0, 0]' : 0.120025}
{'[1, 6, 5, 0, 4, 0, 11, 27, 8, 0, 1, 0, 0]' : 0.117007}
{'[1, 6, 5, 0, 4, 0, 11, 27, 8, 0, 1, 0, 0]' : 0.116775}
{'[1, 6, 5, 0, 4, 0, 11, 27, 8, 0, 1, 0, 0]' : 0.117834}
{'[1, 6, 5, 0, 4, 0, 11, 27, 8, 0, 1, 0, 0]' : 0.11977}
{'[1, 6, 5, 0, 4, 0, 11, 27, 8, 0, 1, 0, 0]' : 0.11977}
{'[1, 6, 5, 0, 4, 0, 11, 27, 8, 0, 1, 0, 0]' : 0.119837}
{'[1, 6, 5, 0, 4, 0, 11, 27, 8, 0, 1, 0, 0]' : 0.120481}
{'[1, 6, 5, 0, 4, 0, 11, 27, 8, 0, 1, 0, 0]' : 0.122652}
{'[1, 6, 5, 0, 4, 0, 11, 27, 8, 0, 1, 0, 0]' : 0.122498}

out:
 ["{'[1, 6, 5, 0, 4, 0, 11, 27, 8, 0, 1, 0, 0]' : 0.136174}", "{'[1, 6, 5, 0, 4, 0, 11, 27, 8, 0, 1, 0, 0]' : 0.135837}", "{'[1, 6, 5, 0, 4, 0, 11, 27, 8, 0, 1, 0, 0]' : 0.135911}", "{'[1, 6, 5, 0, 4, 0, 11, 27, 8, 0, 1, 0, 0]' : 0.130406}", "{'[1, 6, 5, 0, 4, 0, 11, 27, 8, 0, 1, 0, 0]' : 0.122245}", "{'[1, 6, 5, 0, 4, 0, 11, 27, 8, 0, 1, 0, 0]' : 0.122272}", "{'[1, 6, 5, 0, 4, 0, 11, 27, 8, 0, 1, 0, 0]' : 0.122183}", "{'[1, 6, 5, 0, 4, 0, 11, 27, 8, 0, 1, 0, 0]' : 0.12236}", "{'[1, 6, 5, 0, 4, 0, 11, 27, 8, 0, 1, 0, 0]' : 0.122225}", "{'[1, 6, 5, 0, 4, 0, 11, 27, 8, 0, 1, 0, 0]' : 0.122278}", "{'[1, 6, 5, 0, 4, 0, 11, 27, 8, 0, 1, 0, 0]' : 0.122517}", "{'[1, 6, 5, 0, 4, 0, 11, 27, 8, 0, 1, 0, 0]' : 0.123088}", "{'[1, 6, 5, 0, 4, 0, 11, 27, 8, 0, 1, 0, 0]' : 0.122634}", "{'[1, 6, 5, 0, 4, 0, 11, 27, 8, 0, 1, 0, 0]' : 0.122632}", "{'[1, 6, 5, 0, 4, 0, 11, 27, 8, 0, 1, 0, 0]' : 0.121973}", "{'[1, 6, 5, 0, 4, 0, 11, 27, 8, 0, 1, 0, 0]' : 0.121685}", "{'[1, 6, 5, 0, 4, 0, 11, 27, 8, 0, 1, 0, 0]' : 0.122522}", "{'[1, 6, 5, 0, 4, 0, 11, 27, 8, 0, 1, 0, 0]' : 0.120097}", "{'[1, 6, 5, 0, 4, 0, 11, 27, 8, 0, 1, 0, 0]' : 0.11976}", "{'[1, 6, 5, 0, 4, 0, 11, 27, 8, 0, 1, 0, 0]' : 0.120524}", "{'[1, 6, 5, 0, 4, 0, 11, 27, 8, 0, 1, 0, 0]' : 0.120025}", "{'[1, 6, 5, 0, 4, 0, 11, 27, 8, 0, 1, 0, 0]' : 0.117007}", "{'[1, 6, 5, 0, 4, 0, 11, 27, 8, 0, 1, 0, 0]' : 0.116775}", "{'[1, 6, 5, 0, 4, 0, 11, 27, 8, 0, 1, 0, 0]' : 0.117834}", "{'[1, 6, 5, 0, 4, 0, 11, 27, 8, 0, 1, 0, 0]' : 0.11977}", "{'[1, 6, 5, 0, 4, 0, 11, 27, 8, 0, 1, 0, 0]' : 0.11977}", "{'[1, 6, 5, 0, 4, 0, 11, 27, 8, 0, 1, 0, 0]' : 0.119837}", "{'[1, 6, 5, 0, 4, 0, 11, 27, 8, 0, 1, 0, 0]' : 0.120481}", "{'[1, 6, 5, 0, 4, 0, 11, 27, 8, 0, 1, 0, 0]' : 0.122652}", "{'[1, 6, 5, 0, 4, 0, 11, 27, 8, 0, 1, 0, 0]' : 0.122498}"]
returning from 'run': {'[1, 6, 5, 0, 4, 0, 11, 27, 8, 0, 1, 0, 0]': ([0.136174, 0.135837, 0.135911, 0.130406, 0.122245, 0.122272, 0.122183, 0.12236, 0.122225, 0.122278, 0.122517, 0.123088, 0.122634, 0.122632, 0.121973, 0.121685, 0.122522, 0.120097, 0.11976, 0.120524, 0.120025, 0.117007, 0.116775, 0.117834, 0.11977, 0.11977, 0.119837, 0.120481, 0.122652, 0.122498], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 6, 5, 0, 4, 0, 11, 27, 8, 0, 1, 0, 0]': ([0.136174, 0.135837, 0.135911, 0.130406, 0.122245, 0.122272, 0.122183, 0.12236, 0.122225, 0.122278, 0.122517, 0.123088, 0.122634, 0.122632, 0.121973, 0.121685, 0.122522, 0.120097, 0.11976, 0.120524, 0.120025, 0.117007, 0.116775, 0.117834, 0.11977, 0.11977, 0.119837, 0.120481, 0.122652, 0.122498], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		423
        Multiplications: 	146
        Divisions: 		0
        Logical: 		0
        Reads: 			872
        Writes: 		126
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest7.exe __orio_perftest7.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest7.exe  
Program Test Output: 
{'[3, 2, 6, 2, 0, 0, 26, 0, 8, 29, 0, 0, 2]' : 0.229802}
{'[3, 2, 6, 2, 0, 0, 26, 0, 8, 29, 0, 0, 2]' : 0.215155}
{'[3, 2, 6, 2, 0, 0, 26, 0, 8, 29, 0, 0, 2]' : 0.199168}
{'[3, 2, 6, 2, 0, 0, 26, 0, 8, 29, 0, 0, 2]' : 0.198028}
{'[3, 2, 6, 2, 0, 0, 26, 0, 8, 29, 0, 0, 2]' : 0.199564}
{'[3, 2, 6, 2, 0, 0, 26, 0, 8, 29, 0, 0, 2]' : 0.19961}
{'[3, 2, 6, 2, 0, 0, 26, 0, 8, 29, 0, 0, 2]' : 0.199863}
{'[3, 2, 6, 2, 0, 0, 26, 0, 8, 29, 0, 0, 2]' : 0.19974}
{'[3, 2, 6, 2, 0, 0, 26, 0, 8, 29, 0, 0, 2]' : 0.203803}
{'[3, 2, 6, 2, 0, 0, 26, 0, 8, 29, 0, 0, 2]' : 0.204972}
{'[3, 2, 6, 2, 0, 0, 26, 0, 8, 29, 0, 0, 2]' : 0.204874}
{'[3, 2, 6, 2, 0, 0, 26, 0, 8, 29, 0, 0, 2]' : 0.200802}
{'[3, 2, 6, 2, 0, 0, 26, 0, 8, 29, 0, 0, 2]' : 0.204906}
{'[3, 2, 6, 2, 0, 0, 26, 0, 8, 29, 0, 0, 2]' : 0.200538}
{'[3, 2, 6, 2, 0, 0, 26, 0, 8, 29, 0, 0, 2]' : 0.203253}
{'[3, 2, 6, 2, 0, 0, 26, 0, 8, 29, 0, 0, 2]' : 0.203324}
{'[3, 2, 6, 2, 0, 0, 26, 0, 8, 29, 0, 0, 2]' : 0.198854}
{'[3, 2, 6, 2, 0, 0, 26, 0, 8, 29, 0, 0, 2]' : 0.193338}
{'[3, 2, 6, 2, 0, 0, 26, 0, 8, 29, 0, 0, 2]' : 0.200984}
{'[3, 2, 6, 2, 0, 0, 26, 0, 8, 29, 0, 0, 2]' : 0.1998}
{'[3, 2, 6, 2, 0, 0, 26, 0, 8, 29, 0, 0, 2]' : 0.199561}
{'[3, 2, 6, 2, 0, 0, 26, 0, 8, 29, 0, 0, 2]' : 0.199785}
{'[3, 2, 6, 2, 0, 0, 26, 0, 8, 29, 0, 0, 2]' : 0.198274}
{'[3, 2, 6, 2, 0, 0, 26, 0, 8, 29, 0, 0, 2]' : 0.203107}
{'[3, 2, 6, 2, 0, 0, 26, 0, 8, 29, 0, 0, 2]' : 0.200689}
{'[3, 2, 6, 2, 0, 0, 26, 0, 8, 29, 0, 0, 2]' : 0.199642}
{'[3, 2, 6, 2, 0, 0, 26, 0, 8, 29, 0, 0, 2]' : 0.198985}
{'[3, 2, 6, 2, 0, 0, 26, 0, 8, 29, 0, 0, 2]' : 0.193287}
{'[3, 2, 6, 2, 0, 0, 26, 0, 8, 29, 0, 0, 2]' : 0.202744}
{'[3, 2, 6, 2, 0, 0, 26, 0, 8, 29, 0, 0, 2]' : 0.203067}

out:
 ["{'[3, 2, 6, 2, 0, 0, 26, 0, 8, 29, 0, 0, 2]' : 0.229802}", "{'[3, 2, 6, 2, 0, 0, 26, 0, 8, 29, 0, 0, 2]' : 0.215155}", "{'[3, 2, 6, 2, 0, 0, 26, 0, 8, 29, 0, 0, 2]' : 0.199168}", "{'[3, 2, 6, 2, 0, 0, 26, 0, 8, 29, 0, 0, 2]' : 0.198028}", "{'[3, 2, 6, 2, 0, 0, 26, 0, 8, 29, 0, 0, 2]' : 0.199564}", "{'[3, 2, 6, 2, 0, 0, 26, 0, 8, 29, 0, 0, 2]' : 0.19961}", "{'[3, 2, 6, 2, 0, 0, 26, 0, 8, 29, 0, 0, 2]' : 0.199863}", "{'[3, 2, 6, 2, 0, 0, 26, 0, 8, 29, 0, 0, 2]' : 0.19974}", "{'[3, 2, 6, 2, 0, 0, 26, 0, 8, 29, 0, 0, 2]' : 0.203803}", "{'[3, 2, 6, 2, 0, 0, 26, 0, 8, 29, 0, 0, 2]' : 0.204972}", "{'[3, 2, 6, 2, 0, 0, 26, 0, 8, 29, 0, 0, 2]' : 0.204874}", "{'[3, 2, 6, 2, 0, 0, 26, 0, 8, 29, 0, 0, 2]' : 0.200802}", "{'[3, 2, 6, 2, 0, 0, 26, 0, 8, 29, 0, 0, 2]' : 0.204906}", "{'[3, 2, 6, 2, 0, 0, 26, 0, 8, 29, 0, 0, 2]' : 0.200538}", "{'[3, 2, 6, 2, 0, 0, 26, 0, 8, 29, 0, 0, 2]' : 0.203253}", "{'[3, 2, 6, 2, 0, 0, 26, 0, 8, 29, 0, 0, 2]' : 0.203324}", "{'[3, 2, 6, 2, 0, 0, 26, 0, 8, 29, 0, 0, 2]' : 0.198854}", "{'[3, 2, 6, 2, 0, 0, 26, 0, 8, 29, 0, 0, 2]' : 0.193338}", "{'[3, 2, 6, 2, 0, 0, 26, 0, 8, 29, 0, 0, 2]' : 0.200984}", "{'[3, 2, 6, 2, 0, 0, 26, 0, 8, 29, 0, 0, 2]' : 0.1998}", "{'[3, 2, 6, 2, 0, 0, 26, 0, 8, 29, 0, 0, 2]' : 0.199561}", "{'[3, 2, 6, 2, 0, 0, 26, 0, 8, 29, 0, 0, 2]' : 0.199785}", "{'[3, 2, 6, 2, 0, 0, 26, 0, 8, 29, 0, 0, 2]' : 0.198274}", "{'[3, 2, 6, 2, 0, 0, 26, 0, 8, 29, 0, 0, 2]' : 0.203107}", "{'[3, 2, 6, 2, 0, 0, 26, 0, 8, 29, 0, 0, 2]' : 0.200689}", "{'[3, 2, 6, 2, 0, 0, 26, 0, 8, 29, 0, 0, 2]' : 0.199642}", "{'[3, 2, 6, 2, 0, 0, 26, 0, 8, 29, 0, 0, 2]' : 0.198985}", "{'[3, 2, 6, 2, 0, 0, 26, 0, 8, 29, 0, 0, 2]' : 0.193287}", "{'[3, 2, 6, 2, 0, 0, 26, 0, 8, 29, 0, 0, 2]' : 0.202744}", "{'[3, 2, 6, 2, 0, 0, 26, 0, 8, 29, 0, 0, 2]' : 0.203067}"]
returning from 'run': {'[3, 2, 6, 2, 0, 0, 26, 0, 8, 29, 0, 0, 2]': ([0.229802, 0.215155, 0.199168, 0.198028, 0.199564, 0.19961, 0.199863, 0.19974, 0.203803, 0.204972, 0.204874, 0.200802, 0.204906, 0.200538, 0.203253, 0.203324, 0.198854, 0.193338, 0.200984, 0.1998, 0.199561, 0.199785, 0.198274, 0.203107, 0.200689, 0.199642, 0.198985, 0.193287, 0.202744, 0.203067], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 2, 6, 2, 0, 0, 26, 0, 8, 29, 0, 0, 2]': ([0.229802, 0.215155, 0.199168, 0.198028, 0.199564, 0.19961, 0.199863, 0.19974, 0.203803, 0.204972, 0.204874, 0.200802, 0.204906, 0.200538, 0.203253, 0.203324, 0.198854, 0.193338, 0.200984, 0.1998, 0.199561, 0.199785, 0.198274, 0.203107, 0.200689, 0.199642, 0.198985, 0.193287, 0.202744, 0.203067], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	87
        Max loop nest depth: 	6
        Additions: 		10355
        Multiplications: 	2964
        Divisions: 		0
        Logical: 		0
        Reads: 			15665
        Writes: 		1718
        Comparisons:		87
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest8.exe __orio_perftest8.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest8.exe  
Program Test Output: 
{'[1, 5, 2, 4, 6, 6, 29, 28, 0, 28, 1, 0, 1]' : 0.136607}
{'[1, 5, 2, 4, 6, 6, 29, 28, 0, 28, 1, 0, 1]' : 0.135595}
{'[1, 5, 2, 4, 6, 6, 29, 28, 0, 28, 1, 0, 1]' : 0.122142}
{'[1, 5, 2, 4, 6, 6, 29, 28, 0, 28, 1, 0, 1]' : 0.121761}
{'[1, 5, 2, 4, 6, 6, 29, 28, 0, 28, 1, 0, 1]' : 0.120424}
{'[1, 5, 2, 4, 6, 6, 29, 28, 0, 28, 1, 0, 1]' : 0.122314}
{'[1, 5, 2, 4, 6, 6, 29, 28, 0, 28, 1, 0, 1]' : 0.122028}
{'[1, 5, 2, 4, 6, 6, 29, 28, 0, 28, 1, 0, 1]' : 0.122047}
{'[1, 5, 2, 4, 6, 6, 29, 28, 0, 28, 1, 0, 1]' : 0.122236}
{'[1, 5, 2, 4, 6, 6, 29, 28, 0, 28, 1, 0, 1]' : 0.122321}
{'[1, 5, 2, 4, 6, 6, 29, 28, 0, 28, 1, 0, 1]' : 0.122002}
{'[1, 5, 2, 4, 6, 6, 29, 28, 0, 28, 1, 0, 1]' : 0.12202}
{'[1, 5, 2, 4, 6, 6, 29, 28, 0, 28, 1, 0, 1]' : 0.122156}
{'[1, 5, 2, 4, 6, 6, 29, 28, 0, 28, 1, 0, 1]' : 0.122357}
{'[1, 5, 2, 4, 6, 6, 29, 28, 0, 28, 1, 0, 1]' : 0.121966}
{'[1, 5, 2, 4, 6, 6, 29, 28, 0, 28, 1, 0, 1]' : 0.122046}
{'[1, 5, 2, 4, 6, 6, 29, 28, 0, 28, 1, 0, 1]' : 0.122354}
{'[1, 5, 2, 4, 6, 6, 29, 28, 0, 28, 1, 0, 1]' : 0.122344}
{'[1, 5, 2, 4, 6, 6, 29, 28, 0, 28, 1, 0, 1]' : 0.121986}
{'[1, 5, 2, 4, 6, 6, 29, 28, 0, 28, 1, 0, 1]' : 0.122106}
{'[1, 5, 2, 4, 6, 6, 29, 28, 0, 28, 1, 0, 1]' : 0.122201}
{'[1, 5, 2, 4, 6, 6, 29, 28, 0, 28, 1, 0, 1]' : 0.122359}
{'[1, 5, 2, 4, 6, 6, 29, 28, 0, 28, 1, 0, 1]' : 0.122042}
{'[1, 5, 2, 4, 6, 6, 29, 28, 0, 28, 1, 0, 1]' : 0.121996}
{'[1, 5, 2, 4, 6, 6, 29, 28, 0, 28, 1, 0, 1]' : 0.122147}
{'[1, 5, 2, 4, 6, 6, 29, 28, 0, 28, 1, 0, 1]' : 0.122328}
{'[1, 5, 2, 4, 6, 6, 29, 28, 0, 28, 1, 0, 1]' : 0.122032}
{'[1, 5, 2, 4, 6, 6, 29, 28, 0, 28, 1, 0, 1]' : 0.122032}
{'[1, 5, 2, 4, 6, 6, 29, 28, 0, 28, 1, 0, 1]' : 0.122061}
{'[1, 5, 2, 4, 6, 6, 29, 28, 0, 28, 1, 0, 1]' : 0.122507}

out:
 ["{'[1, 5, 2, 4, 6, 6, 29, 28, 0, 28, 1, 0, 1]' : 0.136607}", "{'[1, 5, 2, 4, 6, 6, 29, 28, 0, 28, 1, 0, 1]' : 0.135595}", "{'[1, 5, 2, 4, 6, 6, 29, 28, 0, 28, 1, 0, 1]' : 0.122142}", "{'[1, 5, 2, 4, 6, 6, 29, 28, 0, 28, 1, 0, 1]' : 0.121761}", "{'[1, 5, 2, 4, 6, 6, 29, 28, 0, 28, 1, 0, 1]' : 0.120424}", "{'[1, 5, 2, 4, 6, 6, 29, 28, 0, 28, 1, 0, 1]' : 0.122314}", "{'[1, 5, 2, 4, 6, 6, 29, 28, 0, 28, 1, 0, 1]' : 0.122028}", "{'[1, 5, 2, 4, 6, 6, 29, 28, 0, 28, 1, 0, 1]' : 0.122047}", "{'[1, 5, 2, 4, 6, 6, 29, 28, 0, 28, 1, 0, 1]' : 0.122236}", "{'[1, 5, 2, 4, 6, 6, 29, 28, 0, 28, 1, 0, 1]' : 0.122321}", "{'[1, 5, 2, 4, 6, 6, 29, 28, 0, 28, 1, 0, 1]' : 0.122002}", "{'[1, 5, 2, 4, 6, 6, 29, 28, 0, 28, 1, 0, 1]' : 0.12202}", "{'[1, 5, 2, 4, 6, 6, 29, 28, 0, 28, 1, 0, 1]' : 0.122156}", "{'[1, 5, 2, 4, 6, 6, 29, 28, 0, 28, 1, 0, 1]' : 0.122357}", "{'[1, 5, 2, 4, 6, 6, 29, 28, 0, 28, 1, 0, 1]' : 0.121966}", "{'[1, 5, 2, 4, 6, 6, 29, 28, 0, 28, 1, 0, 1]' : 0.122046}", "{'[1, 5, 2, 4, 6, 6, 29, 28, 0, 28, 1, 0, 1]' : 0.122354}", "{'[1, 5, 2, 4, 6, 6, 29, 28, 0, 28, 1, 0, 1]' : 0.122344}", "{'[1, 5, 2, 4, 6, 6, 29, 28, 0, 28, 1, 0, 1]' : 0.121986}", "{'[1, 5, 2, 4, 6, 6, 29, 28, 0, 28, 1, 0, 1]' : 0.122106}", "{'[1, 5, 2, 4, 6, 6, 29, 28, 0, 28, 1, 0, 1]' : 0.122201}", "{'[1, 5, 2, 4, 6, 6, 29, 28, 0, 28, 1, 0, 1]' : 0.122359}", "{'[1, 5, 2, 4, 6, 6, 29, 28, 0, 28, 1, 0, 1]' : 0.122042}", "{'[1, 5, 2, 4, 6, 6, 29, 28, 0, 28, 1, 0, 1]' : 0.121996}", "{'[1, 5, 2, 4, 6, 6, 29, 28, 0, 28, 1, 0, 1]' : 0.122147}", "{'[1, 5, 2, 4, 6, 6, 29, 28, 0, 28, 1, 0, 1]' : 0.122328}", "{'[1, 5, 2, 4, 6, 6, 29, 28, 0, 28, 1, 0, 1]' : 0.122032}", "{'[1, 5, 2, 4, 6, 6, 29, 28, 0, 28, 1, 0, 1]' : 0.122032}", "{'[1, 5, 2, 4, 6, 6, 29, 28, 0, 28, 1, 0, 1]' : 0.122061}", "{'[1, 5, 2, 4, 6, 6, 29, 28, 0, 28, 1, 0, 1]' : 0.122507}"]
returning from 'run': {'[1, 5, 2, 4, 6, 6, 29, 28, 0, 28, 1, 0, 1]': ([0.136607, 0.135595, 0.122142, 0.121761, 0.120424, 0.122314, 0.122028, 0.122047, 0.122236, 0.122321, 0.122002, 0.12202, 0.122156, 0.122357, 0.121966, 0.122046, 0.122354, 0.122344, 0.121986, 0.122106, 0.122201, 0.122359, 0.122042, 0.121996, 0.122147, 0.122328, 0.122032, 0.122032, 0.122061, 0.122507], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 5, 2, 4, 6, 6, 29, 28, 0, 28, 1, 0, 1]': ([0.136607, 0.135595, 0.122142, 0.121761, 0.120424, 0.122314, 0.122028, 0.122047, 0.122236, 0.122321, 0.122002, 0.12202, 0.122156, 0.122357, 0.121966, 0.122046, 0.122354, 0.122344, 0.121986, 0.122106, 0.122201, 0.122359, 0.122042, 0.121996, 0.122147, 0.122328, 0.122032, 0.122032, 0.122061, 0.122507], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	5
        Additions: 		3482
        Multiplications: 	1080
        Divisions: 		0
        Logical: 		0
        Reads: 			5591
        Writes: 		602
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest9.exe __orio_perftest9.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest9.exe  
Program Test Output: 
{'[6, 2, 6, 0, 2, 0, 16, 0, 24, 24, 1, 1, 0]' : 0.114319}
{'[6, 2, 6, 0, 2, 0, 16, 0, 24, 24, 1, 1, 0]' : 0.114221}
{'[6, 2, 6, 0, 2, 0, 16, 0, 24, 24, 1, 1, 0]' : 0.113661}
{'[6, 2, 6, 0, 2, 0, 16, 0, 24, 24, 1, 1, 0]' : 0.110329}
{'[6, 2, 6, 0, 2, 0, 16, 0, 24, 24, 1, 1, 0]' : 0.111828}
{'[6, 2, 6, 0, 2, 0, 16, 0, 24, 24, 1, 1, 0]' : 0.11408}
{'[6, 2, 6, 0, 2, 0, 16, 0, 24, 24, 1, 1, 0]' : 0.113946}
{'[6, 2, 6, 0, 2, 0, 16, 0, 24, 24, 1, 1, 0]' : 0.114097}
{'[6, 2, 6, 0, 2, 0, 16, 0, 24, 24, 1, 1, 0]' : 0.114337}
{'[6, 2, 6, 0, 2, 0, 16, 0, 24, 24, 1, 1, 0]' : 0.114248}
{'[6, 2, 6, 0, 2, 0, 16, 0, 24, 24, 1, 1, 0]' : 0.114094}
{'[6, 2, 6, 0, 2, 0, 16, 0, 24, 24, 1, 1, 0]' : 0.114193}
{'[6, 2, 6, 0, 2, 0, 16, 0, 24, 24, 1, 1, 0]' : 0.11421}
{'[6, 2, 6, 0, 2, 0, 16, 0, 24, 24, 1, 1, 0]' : 0.114215}
{'[6, 2, 6, 0, 2, 0, 16, 0, 24, 24, 1, 1, 0]' : 0.113954}
{'[6, 2, 6, 0, 2, 0, 16, 0, 24, 24, 1, 1, 0]' : 0.114387}
{'[6, 2, 6, 0, 2, 0, 16, 0, 24, 24, 1, 1, 0]' : 0.114019}
{'[6, 2, 6, 0, 2, 0, 16, 0, 24, 24, 1, 1, 0]' : 0.114117}
{'[6, 2, 6, 0, 2, 0, 16, 0, 24, 24, 1, 1, 0]' : 0.113946}
{'[6, 2, 6, 0, 2, 0, 16, 0, 24, 24, 1, 1, 0]' : 0.114092}
{'[6, 2, 6, 0, 2, 0, 16, 0, 24, 24, 1, 1, 0]' : 0.114073}
{'[6, 2, 6, 0, 2, 0, 16, 0, 24, 24, 1, 1, 0]' : 0.114316}
{'[6, 2, 6, 0, 2, 0, 16, 0, 24, 24, 1, 1, 0]' : 0.114126}
{'[6, 2, 6, 0, 2, 0, 16, 0, 24, 24, 1, 1, 0]' : 0.114351}
{'[6, 2, 6, 0, 2, 0, 16, 0, 24, 24, 1, 1, 0]' : 0.114281}
{'[6, 2, 6, 0, 2, 0, 16, 0, 24, 24, 1, 1, 0]' : 0.114205}
{'[6, 2, 6, 0, 2, 0, 16, 0, 24, 24, 1, 1, 0]' : 0.114189}
{'[6, 2, 6, 0, 2, 0, 16, 0, 24, 24, 1, 1, 0]' : 0.114093}
{'[6, 2, 6, 0, 2, 0, 16, 0, 24, 24, 1, 1, 0]' : 0.114052}
{'[6, 2, 6, 0, 2, 0, 16, 0, 24, 24, 1, 1, 0]' : 0.114115}

out:
 ["{'[6, 2, 6, 0, 2, 0, 16, 0, 24, 24, 1, 1, 0]' : 0.114319}", "{'[6, 2, 6, 0, 2, 0, 16, 0, 24, 24, 1, 1, 0]' : 0.114221}", "{'[6, 2, 6, 0, 2, 0, 16, 0, 24, 24, 1, 1, 0]' : 0.113661}", "{'[6, 2, 6, 0, 2, 0, 16, 0, 24, 24, 1, 1, 0]' : 0.110329}", "{'[6, 2, 6, 0, 2, 0, 16, 0, 24, 24, 1, 1, 0]' : 0.111828}", "{'[6, 2, 6, 0, 2, 0, 16, 0, 24, 24, 1, 1, 0]' : 0.11408}", "{'[6, 2, 6, 0, 2, 0, 16, 0, 24, 24, 1, 1, 0]' : 0.113946}", "{'[6, 2, 6, 0, 2, 0, 16, 0, 24, 24, 1, 1, 0]' : 0.114097}", "{'[6, 2, 6, 0, 2, 0, 16, 0, 24, 24, 1, 1, 0]' : 0.114337}", "{'[6, 2, 6, 0, 2, 0, 16, 0, 24, 24, 1, 1, 0]' : 0.114248}", "{'[6, 2, 6, 0, 2, 0, 16, 0, 24, 24, 1, 1, 0]' : 0.114094}", "{'[6, 2, 6, 0, 2, 0, 16, 0, 24, 24, 1, 1, 0]' : 0.114193}", "{'[6, 2, 6, 0, 2, 0, 16, 0, 24, 24, 1, 1, 0]' : 0.11421}", "{'[6, 2, 6, 0, 2, 0, 16, 0, 24, 24, 1, 1, 0]' : 0.114215}", "{'[6, 2, 6, 0, 2, 0, 16, 0, 24, 24, 1, 1, 0]' : 0.113954}", "{'[6, 2, 6, 0, 2, 0, 16, 0, 24, 24, 1, 1, 0]' : 0.114387}", "{'[6, 2, 6, 0, 2, 0, 16, 0, 24, 24, 1, 1, 0]' : 0.114019}", "{'[6, 2, 6, 0, 2, 0, 16, 0, 24, 24, 1, 1, 0]' : 0.114117}", "{'[6, 2, 6, 0, 2, 0, 16, 0, 24, 24, 1, 1, 0]' : 0.113946}", "{'[6, 2, 6, 0, 2, 0, 16, 0, 24, 24, 1, 1, 0]' : 0.114092}", "{'[6, 2, 6, 0, 2, 0, 16, 0, 24, 24, 1, 1, 0]' : 0.114073}", "{'[6, 2, 6, 0, 2, 0, 16, 0, 24, 24, 1, 1, 0]' : 0.114316}", "{'[6, 2, 6, 0, 2, 0, 16, 0, 24, 24, 1, 1, 0]' : 0.114126}", "{'[6, 2, 6, 0, 2, 0, 16, 0, 24, 24, 1, 1, 0]' : 0.114351}", "{'[6, 2, 6, 0, 2, 0, 16, 0, 24, 24, 1, 1, 0]' : 0.114281}", "{'[6, 2, 6, 0, 2, 0, 16, 0, 24, 24, 1, 1, 0]' : 0.114205}", "{'[6, 2, 6, 0, 2, 0, 16, 0, 24, 24, 1, 1, 0]' : 0.114189}", "{'[6, 2, 6, 0, 2, 0, 16, 0, 24, 24, 1, 1, 0]' : 0.114093}", "{'[6, 2, 6, 0, 2, 0, 16, 0, 24, 24, 1, 1, 0]' : 0.114052}", "{'[6, 2, 6, 0, 2, 0, 16, 0, 24, 24, 1, 1, 0]' : 0.114115}"]
returning from 'run': {'[6, 2, 6, 0, 2, 0, 16, 0, 24, 24, 1, 1, 0]': ([0.114319, 0.114221, 0.113661, 0.110329, 0.111828, 0.11408, 0.113946, 0.114097, 0.114337, 0.114248, 0.114094, 0.114193, 0.11421, 0.114215, 0.113954, 0.114387, 0.114019, 0.114117, 0.113946, 0.114092, 0.114073, 0.114316, 0.114126, 0.114351, 0.114281, 0.114205, 0.114189, 0.114093, 0.114052, 0.114115], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 2, 6, 0, 2, 0, 16, 0, 24, 24, 1, 1, 0]': ([0.114319, 0.114221, 0.113661, 0.110329, 0.111828, 0.11408, 0.113946, 0.114097, 0.114337, 0.114248, 0.114094, 0.114193, 0.11421, 0.114215, 0.113954, 0.114387, 0.114019, 0.114117, 0.113946, 0.114092, 0.114073, 0.114316, 0.114126, 0.114351, 0.114281, 0.114205, 0.114189, 0.114093, 0.114052, 0.114115], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	5
        Additions: 		2105
        Multiplications: 	648
        Divisions: 		0
        Logical: 		0
        Reads: 			3439
        Writes: 		393
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest10.exe __orio_perftest10.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest10.exe  
Program Test Output: 
{'[6, 6, 1, 0, 0, 3, 27, 0, 23, 9, 1, 0, 0]' : 0.132437}
{'[6, 6, 1, 0, 0, 3, 27, 0, 23, 9, 1, 0, 0]' : 0.132487}
{'[6, 6, 1, 0, 0, 3, 27, 0, 23, 9, 1, 0, 0]' : 0.132529}
{'[6, 6, 1, 0, 0, 3, 27, 0, 23, 9, 1, 0, 0]' : 0.132407}
{'[6, 6, 1, 0, 0, 3, 27, 0, 23, 9, 1, 0, 0]' : 0.13246}
{'[6, 6, 1, 0, 0, 3, 27, 0, 23, 9, 1, 0, 0]' : 0.132512}
{'[6, 6, 1, 0, 0, 3, 27, 0, 23, 9, 1, 0, 0]' : 0.132491}
{'[6, 6, 1, 0, 0, 3, 27, 0, 23, 9, 1, 0, 0]' : 0.132412}
{'[6, 6, 1, 0, 0, 3, 27, 0, 23, 9, 1, 0, 0]' : 0.132528}
{'[6, 6, 1, 0, 0, 3, 27, 0, 23, 9, 1, 0, 0]' : 0.132446}
{'[6, 6, 1, 0, 0, 3, 27, 0, 23, 9, 1, 0, 0]' : 0.132408}
{'[6, 6, 1, 0, 0, 3, 27, 0, 23, 9, 1, 0, 0]' : 0.132402}
{'[6, 6, 1, 0, 0, 3, 27, 0, 23, 9, 1, 0, 0]' : 0.132432}
{'[6, 6, 1, 0, 0, 3, 27, 0, 23, 9, 1, 0, 0]' : 0.132389}
{'[6, 6, 1, 0, 0, 3, 27, 0, 23, 9, 1, 0, 0]' : 0.132428}
{'[6, 6, 1, 0, 0, 3, 27, 0, 23, 9, 1, 0, 0]' : 0.132434}
{'[6, 6, 1, 0, 0, 3, 27, 0, 23, 9, 1, 0, 0]' : 0.132455}
{'[6, 6, 1, 0, 0, 3, 27, 0, 23, 9, 1, 0, 0]' : 0.130127}
{'[6, 6, 1, 0, 0, 3, 27, 0, 23, 9, 1, 0, 0]' : 0.132442}
{'[6, 6, 1, 0, 0, 3, 27, 0, 23, 9, 1, 0, 0]' : 0.132394}
{'[6, 6, 1, 0, 0, 3, 27, 0, 23, 9, 1, 0, 0]' : 0.132408}
{'[6, 6, 1, 0, 0, 3, 27, 0, 23, 9, 1, 0, 0]' : 0.132715}
{'[6, 6, 1, 0, 0, 3, 27, 0, 23, 9, 1, 0, 0]' : 0.132423}
{'[6, 6, 1, 0, 0, 3, 27, 0, 23, 9, 1, 0, 0]' : 0.13247}
{'[6, 6, 1, 0, 0, 3, 27, 0, 23, 9, 1, 0, 0]' : 0.13234}
{'[6, 6, 1, 0, 0, 3, 27, 0, 23, 9, 1, 0, 0]' : 0.132496}
{'[6, 6, 1, 0, 0, 3, 27, 0, 23, 9, 1, 0, 0]' : 0.132433}
{'[6, 6, 1, 0, 0, 3, 27, 0, 23, 9, 1, 0, 0]' : 0.132431}
{'[6, 6, 1, 0, 0, 3, 27, 0, 23, 9, 1, 0, 0]' : 0.132358}
{'[6, 6, 1, 0, 0, 3, 27, 0, 23, 9, 1, 0, 0]' : 0.132466}

out:
 ["{'[6, 6, 1, 0, 0, 3, 27, 0, 23, 9, 1, 0, 0]' : 0.132437}", "{'[6, 6, 1, 0, 0, 3, 27, 0, 23, 9, 1, 0, 0]' : 0.132487}", "{'[6, 6, 1, 0, 0, 3, 27, 0, 23, 9, 1, 0, 0]' : 0.132529}", "{'[6, 6, 1, 0, 0, 3, 27, 0, 23, 9, 1, 0, 0]' : 0.132407}", "{'[6, 6, 1, 0, 0, 3, 27, 0, 23, 9, 1, 0, 0]' : 0.13246}", "{'[6, 6, 1, 0, 0, 3, 27, 0, 23, 9, 1, 0, 0]' : 0.132512}", "{'[6, 6, 1, 0, 0, 3, 27, 0, 23, 9, 1, 0, 0]' : 0.132491}", "{'[6, 6, 1, 0, 0, 3, 27, 0, 23, 9, 1, 0, 0]' : 0.132412}", "{'[6, 6, 1, 0, 0, 3, 27, 0, 23, 9, 1, 0, 0]' : 0.132528}", "{'[6, 6, 1, 0, 0, 3, 27, 0, 23, 9, 1, 0, 0]' : 0.132446}", "{'[6, 6, 1, 0, 0, 3, 27, 0, 23, 9, 1, 0, 0]' : 0.132408}", "{'[6, 6, 1, 0, 0, 3, 27, 0, 23, 9, 1, 0, 0]' : 0.132402}", "{'[6, 6, 1, 0, 0, 3, 27, 0, 23, 9, 1, 0, 0]' : 0.132432}", "{'[6, 6, 1, 0, 0, 3, 27, 0, 23, 9, 1, 0, 0]' : 0.132389}", "{'[6, 6, 1, 0, 0, 3, 27, 0, 23, 9, 1, 0, 0]' : 0.132428}", "{'[6, 6, 1, 0, 0, 3, 27, 0, 23, 9, 1, 0, 0]' : 0.132434}", "{'[6, 6, 1, 0, 0, 3, 27, 0, 23, 9, 1, 0, 0]' : 0.132455}", "{'[6, 6, 1, 0, 0, 3, 27, 0, 23, 9, 1, 0, 0]' : 0.130127}", "{'[6, 6, 1, 0, 0, 3, 27, 0, 23, 9, 1, 0, 0]' : 0.132442}", "{'[6, 6, 1, 0, 0, 3, 27, 0, 23, 9, 1, 0, 0]' : 0.132394}", "{'[6, 6, 1, 0, 0, 3, 27, 0, 23, 9, 1, 0, 0]' : 0.132408}", "{'[6, 6, 1, 0, 0, 3, 27, 0, 23, 9, 1, 0, 0]' : 0.132715}", "{'[6, 6, 1, 0, 0, 3, 27, 0, 23, 9, 1, 0, 0]' : 0.132423}", "{'[6, 6, 1, 0, 0, 3, 27, 0, 23, 9, 1, 0, 0]' : 0.13247}", "{'[6, 6, 1, 0, 0, 3, 27, 0, 23, 9, 1, 0, 0]' : 0.13234}", "{'[6, 6, 1, 0, 0, 3, 27, 0, 23, 9, 1, 0, 0]' : 0.132496}", "{'[6, 6, 1, 0, 0, 3, 27, 0, 23, 9, 1, 0, 0]' : 0.132433}", "{'[6, 6, 1, 0, 0, 3, 27, 0, 23, 9, 1, 0, 0]' : 0.132431}", "{'[6, 6, 1, 0, 0, 3, 27, 0, 23, 9, 1, 0, 0]' : 0.132358}", "{'[6, 6, 1, 0, 0, 3, 27, 0, 23, 9, 1, 0, 0]' : 0.132466}"]
returning from 'run': {'[6, 6, 1, 0, 0, 3, 27, 0, 23, 9, 1, 0, 0]': ([0.132437, 0.132487, 0.132529, 0.132407, 0.13246, 0.132512, 0.132491, 0.132412, 0.132528, 0.132446, 0.132408, 0.132402, 0.132432, 0.132389, 0.132428, 0.132434, 0.132455, 0.130127, 0.132442, 0.132394, 0.132408, 0.132715, 0.132423, 0.13247, 0.13234, 0.132496, 0.132433, 0.132431, 0.132358, 0.132466], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 1, 0, 0, 3, 27, 0, 23, 9, 1, 0, 0]': ([0.132437, 0.132487, 0.132529, 0.132407, 0.13246, 0.132512, 0.132491, 0.132412, 0.132528, 0.132446, 0.132408, 0.132402, 0.132432, 0.132389, 0.132428, 0.132434, 0.132455, 0.130127, 0.132442, 0.132394, 0.132408, 0.132715, 0.132423, 0.13247, 0.13234, 0.132496, 0.132433, 0.132431, 0.132358, 0.132466], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	6
        Additions: 		1330
        Multiplications: 	408
        Divisions: 		0
        Logical: 		0
        Reads: 			2218
        Writes: 		270
        Comparisons:		18
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest11.exe __orio_perftest11.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest11.exe  
Program Test Output: 
{'[2, 2, 1, 6, 0, 6, 22, 4, 0, 0, 0, 0, 2]' : 0.156738}
{'[2, 2, 1, 6, 0, 6, 22, 4, 0, 0, 0, 0, 2]' : 0.153137}
{'[2, 2, 1, 6, 0, 6, 22, 4, 0, 0, 0, 0, 2]' : 0.152864}
{'[2, 2, 1, 6, 0, 6, 22, 4, 0, 0, 0, 0, 2]' : 0.153922}
{'[2, 2, 1, 6, 0, 6, 22, 4, 0, 0, 0, 0, 2]' : 0.153085}
{'[2, 2, 1, 6, 0, 6, 22, 4, 0, 0, 0, 0, 2]' : 0.15289}
{'[2, 2, 1, 6, 0, 6, 22, 4, 0, 0, 0, 0, 2]' : 0.1567}
{'[2, 2, 1, 6, 0, 6, 22, 4, 0, 0, 0, 0, 2]' : 0.157375}
{'[2, 2, 1, 6, 0, 6, 22, 4, 0, 0, 0, 0, 2]' : 0.153308}
{'[2, 2, 1, 6, 0, 6, 22, 4, 0, 0, 0, 0, 2]' : 0.154947}
{'[2, 2, 1, 6, 0, 6, 22, 4, 0, 0, 0, 0, 2]' : 0.157727}
{'[2, 2, 1, 6, 0, 6, 22, 4, 0, 0, 0, 0, 2]' : 0.157872}
{'[2, 2, 1, 6, 0, 6, 22, 4, 0, 0, 0, 0, 2]' : 0.158812}
{'[2, 2, 1, 6, 0, 6, 22, 4, 0, 0, 0, 0, 2]' : 0.162214}
{'[2, 2, 1, 6, 0, 6, 22, 4, 0, 0, 0, 0, 2]' : 0.161608}
{'[2, 2, 1, 6, 0, 6, 22, 4, 0, 0, 0, 0, 2]' : 0.156622}
{'[2, 2, 1, 6, 0, 6, 22, 4, 0, 0, 0, 0, 2]' : 0.157745}
{'[2, 2, 1, 6, 0, 6, 22, 4, 0, 0, 0, 0, 2]' : 0.15785}
{'[2, 2, 1, 6, 0, 6, 22, 4, 0, 0, 0, 0, 2]' : 0.157682}
{'[2, 2, 1, 6, 0, 6, 22, 4, 0, 0, 0, 0, 2]' : 0.161949}
{'[2, 2, 1, 6, 0, 6, 22, 4, 0, 0, 0, 0, 2]' : 0.162413}
{'[2, 2, 1, 6, 0, 6, 22, 4, 0, 0, 0, 0, 2]' : 0.161436}
{'[2, 2, 1, 6, 0, 6, 22, 4, 0, 0, 0, 0, 2]' : 0.161664}
{'[2, 2, 1, 6, 0, 6, 22, 4, 0, 0, 0, 0, 2]' : 0.162159}
{'[2, 2, 1, 6, 0, 6, 22, 4, 0, 0, 0, 0, 2]' : 0.160378}
{'[2, 2, 1, 6, 0, 6, 22, 4, 0, 0, 0, 0, 2]' : 0.156596}
{'[2, 2, 1, 6, 0, 6, 22, 4, 0, 0, 0, 0, 2]' : 0.157753}
{'[2, 2, 1, 6, 0, 6, 22, 4, 0, 0, 0, 0, 2]' : 0.157774}
{'[2, 2, 1, 6, 0, 6, 22, 4, 0, 0, 0, 0, 2]' : 0.159119}
{'[2, 2, 1, 6, 0, 6, 22, 4, 0, 0, 0, 0, 2]' : 0.158007}

out:
 ["{'[2, 2, 1, 6, 0, 6, 22, 4, 0, 0, 0, 0, 2]' : 0.156738}", "{'[2, 2, 1, 6, 0, 6, 22, 4, 0, 0, 0, 0, 2]' : 0.153137}", "{'[2, 2, 1, 6, 0, 6, 22, 4, 0, 0, 0, 0, 2]' : 0.152864}", "{'[2, 2, 1, 6, 0, 6, 22, 4, 0, 0, 0, 0, 2]' : 0.153922}", "{'[2, 2, 1, 6, 0, 6, 22, 4, 0, 0, 0, 0, 2]' : 0.153085}", "{'[2, 2, 1, 6, 0, 6, 22, 4, 0, 0, 0, 0, 2]' : 0.15289}", "{'[2, 2, 1, 6, 0, 6, 22, 4, 0, 0, 0, 0, 2]' : 0.1567}", "{'[2, 2, 1, 6, 0, 6, 22, 4, 0, 0, 0, 0, 2]' : 0.157375}", "{'[2, 2, 1, 6, 0, 6, 22, 4, 0, 0, 0, 0, 2]' : 0.153308}", "{'[2, 2, 1, 6, 0, 6, 22, 4, 0, 0, 0, 0, 2]' : 0.154947}", "{'[2, 2, 1, 6, 0, 6, 22, 4, 0, 0, 0, 0, 2]' : 0.157727}", "{'[2, 2, 1, 6, 0, 6, 22, 4, 0, 0, 0, 0, 2]' : 0.157872}", "{'[2, 2, 1, 6, 0, 6, 22, 4, 0, 0, 0, 0, 2]' : 0.158812}", "{'[2, 2, 1, 6, 0, 6, 22, 4, 0, 0, 0, 0, 2]' : 0.162214}", "{'[2, 2, 1, 6, 0, 6, 22, 4, 0, 0, 0, 0, 2]' : 0.161608}", "{'[2, 2, 1, 6, 0, 6, 22, 4, 0, 0, 0, 0, 2]' : 0.156622}", "{'[2, 2, 1, 6, 0, 6, 22, 4, 0, 0, 0, 0, 2]' : 0.157745}", "{'[2, 2, 1, 6, 0, 6, 22, 4, 0, 0, 0, 0, 2]' : 0.15785}", "{'[2, 2, 1, 6, 0, 6, 22, 4, 0, 0, 0, 0, 2]' : 0.157682}", "{'[2, 2, 1, 6, 0, 6, 22, 4, 0, 0, 0, 0, 2]' : 0.161949}", "{'[2, 2, 1, 6, 0, 6, 22, 4, 0, 0, 0, 0, 2]' : 0.162413}", "{'[2, 2, 1, 6, 0, 6, 22, 4, 0, 0, 0, 0, 2]' : 0.161436}", "{'[2, 2, 1, 6, 0, 6, 22, 4, 0, 0, 0, 0, 2]' : 0.161664}", "{'[2, 2, 1, 6, 0, 6, 22, 4, 0, 0, 0, 0, 2]' : 0.162159}", "{'[2, 2, 1, 6, 0, 6, 22, 4, 0, 0, 0, 0, 2]' : 0.160378}", "{'[2, 2, 1, 6, 0, 6, 22, 4, 0, 0, 0, 0, 2]' : 0.156596}", "{'[2, 2, 1, 6, 0, 6, 22, 4, 0, 0, 0, 0, 2]' : 0.157753}", "{'[2, 2, 1, 6, 0, 6, 22, 4, 0, 0, 0, 0, 2]' : 0.157774}", "{'[2, 2, 1, 6, 0, 6, 22, 4, 0, 0, 0, 0, 2]' : 0.159119}", "{'[2, 2, 1, 6, 0, 6, 22, 4, 0, 0, 0, 0, 2]' : 0.158007}"]
returning from 'run': {'[2, 2, 1, 6, 0, 6, 22, 4, 0, 0, 0, 0, 2]': ([0.156738, 0.153137, 0.152864, 0.153922, 0.153085, 0.15289, 0.1567, 0.157375, 0.153308, 0.154947, 0.157727, 0.157872, 0.158812, 0.162214, 0.161608, 0.156622, 0.157745, 0.15785, 0.157682, 0.161949, 0.162413, 0.161436, 0.161664, 0.162159, 0.160378, 0.156596, 0.157753, 0.157774, 0.159119, 0.158007], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 2, 1, 6, 0, 6, 22, 4, 0, 0, 0, 0, 2]': ([0.156738, 0.153137, 0.152864, 0.153922, 0.153085, 0.15289, 0.1567, 0.157375, 0.153308, 0.154947, 0.157727, 0.157872, 0.158812, 0.162214, 0.161608, 0.156622, 0.157745, 0.15785, 0.157682, 0.161949, 0.162413, 0.161436, 0.161664, 0.162159, 0.160378, 0.156596, 0.157753, 0.157774, 0.159119, 0.158007], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		311
        Multiplications: 	112
        Divisions: 		0
        Logical: 		0
        Reads: 			684
        Writes: 		102
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest12.exe __orio_perftest12.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest12.exe  
Program Test Output: 
{'[0, 6, 3, 3, 5, 3, 19, 0, 21, 0, 0, 0, 2]' : 0.18706}
{'[0, 6, 3, 3, 5, 3, 19, 0, 21, 0, 0, 0, 2]' : 0.186995}
{'[0, 6, 3, 3, 5, 3, 19, 0, 21, 0, 0, 0, 2]' : 0.190212}
{'[0, 6, 3, 3, 5, 3, 19, 0, 21, 0, 0, 0, 2]' : 0.191145}
{'[0, 6, 3, 3, 5, 3, 19, 0, 21, 0, 0, 0, 2]' : 0.187069}
{'[0, 6, 3, 3, 5, 3, 19, 0, 21, 0, 0, 0, 2]' : 0.186976}
{'[0, 6, 3, 3, 5, 3, 19, 0, 21, 0, 0, 0, 2]' : 0.189761}
{'[0, 6, 3, 3, 5, 3, 19, 0, 21, 0, 0, 0, 2]' : 0.192806}
{'[0, 6, 3, 3, 5, 3, 19, 0, 21, 0, 0, 0, 2]' : 0.187553}
{'[0, 6, 3, 3, 5, 3, 19, 0, 21, 0, 0, 0, 2]' : 0.187036}
{'[0, 6, 3, 3, 5, 3, 19, 0, 21, 0, 0, 0, 2]' : 0.184754}
{'[0, 6, 3, 3, 5, 3, 19, 0, 21, 0, 0, 0, 2]' : 0.18686}
{'[0, 6, 3, 3, 5, 3, 19, 0, 21, 0, 0, 0, 2]' : 0.187055}
{'[0, 6, 3, 3, 5, 3, 19, 0, 21, 0, 0, 0, 2]' : 0.192479}
{'[0, 6, 3, 3, 5, 3, 19, 0, 21, 0, 0, 0, 2]' : 0.192854}
{'[0, 6, 3, 3, 5, 3, 19, 0, 21, 0, 0, 0, 2]' : 0.189357}
{'[0, 6, 3, 3, 5, 3, 19, 0, 21, 0, 0, 0, 2]' : 0.186918}
{'[0, 6, 3, 3, 5, 3, 19, 0, 21, 0, 0, 0, 2]' : 0.187551}
{'[0, 6, 3, 3, 5, 3, 19, 0, 21, 0, 0, 0, 2]' : 0.19088}
{'[0, 6, 3, 3, 5, 3, 19, 0, 21, 0, 0, 0, 2]' : 0.192825}
{'[0, 6, 3, 3, 5, 3, 19, 0, 21, 0, 0, 0, 2]' : 0.192823}
{'[0, 6, 3, 3, 5, 3, 19, 0, 21, 0, 0, 0, 2]' : 0.188109}
{'[0, 6, 3, 3, 5, 3, 19, 0, 21, 0, 0, 0, 2]' : 0.187032}
{'[0, 6, 3, 3, 5, 3, 19, 0, 21, 0, 0, 0, 2]' : 0.18715}
{'[0, 6, 3, 3, 5, 3, 19, 0, 21, 0, 0, 0, 2]' : 0.187094}
{'[0, 6, 3, 3, 5, 3, 19, 0, 21, 0, 0, 0, 2]' : 0.186875}
{'[0, 6, 3, 3, 5, 3, 19, 0, 21, 0, 0, 0, 2]' : 0.191316}
{'[0, 6, 3, 3, 5, 3, 19, 0, 21, 0, 0, 0, 2]' : 0.187453}
{'[0, 6, 3, 3, 5, 3, 19, 0, 21, 0, 0, 0, 2]' : 0.187714}
{'[0, 6, 3, 3, 5, 3, 19, 0, 21, 0, 0, 0, 2]' : 0.192838}

out:
 ["{'[0, 6, 3, 3, 5, 3, 19, 0, 21, 0, 0, 0, 2]' : 0.18706}", "{'[0, 6, 3, 3, 5, 3, 19, 0, 21, 0, 0, 0, 2]' : 0.186995}", "{'[0, 6, 3, 3, 5, 3, 19, 0, 21, 0, 0, 0, 2]' : 0.190212}", "{'[0, 6, 3, 3, 5, 3, 19, 0, 21, 0, 0, 0, 2]' : 0.191145}", "{'[0, 6, 3, 3, 5, 3, 19, 0, 21, 0, 0, 0, 2]' : 0.187069}", "{'[0, 6, 3, 3, 5, 3, 19, 0, 21, 0, 0, 0, 2]' : 0.186976}", "{'[0, 6, 3, 3, 5, 3, 19, 0, 21, 0, 0, 0, 2]' : 0.189761}", "{'[0, 6, 3, 3, 5, 3, 19, 0, 21, 0, 0, 0, 2]' : 0.192806}", "{'[0, 6, 3, 3, 5, 3, 19, 0, 21, 0, 0, 0, 2]' : 0.187553}", "{'[0, 6, 3, 3, 5, 3, 19, 0, 21, 0, 0, 0, 2]' : 0.187036}", "{'[0, 6, 3, 3, 5, 3, 19, 0, 21, 0, 0, 0, 2]' : 0.184754}", "{'[0, 6, 3, 3, 5, 3, 19, 0, 21, 0, 0, 0, 2]' : 0.18686}", "{'[0, 6, 3, 3, 5, 3, 19, 0, 21, 0, 0, 0, 2]' : 0.187055}", "{'[0, 6, 3, 3, 5, 3, 19, 0, 21, 0, 0, 0, 2]' : 0.192479}", "{'[0, 6, 3, 3, 5, 3, 19, 0, 21, 0, 0, 0, 2]' : 0.192854}", "{'[0, 6, 3, 3, 5, 3, 19, 0, 21, 0, 0, 0, 2]' : 0.189357}", "{'[0, 6, 3, 3, 5, 3, 19, 0, 21, 0, 0, 0, 2]' : 0.186918}", "{'[0, 6, 3, 3, 5, 3, 19, 0, 21, 0, 0, 0, 2]' : 0.187551}", "{'[0, 6, 3, 3, 5, 3, 19, 0, 21, 0, 0, 0, 2]' : 0.19088}", "{'[0, 6, 3, 3, 5, 3, 19, 0, 21, 0, 0, 0, 2]' : 0.192825}", "{'[0, 6, 3, 3, 5, 3, 19, 0, 21, 0, 0, 0, 2]' : 0.192823}", "{'[0, 6, 3, 3, 5, 3, 19, 0, 21, 0, 0, 0, 2]' : 0.188109}", "{'[0, 6, 3, 3, 5, 3, 19, 0, 21, 0, 0, 0, 2]' : 0.187032}", "{'[0, 6, 3, 3, 5, 3, 19, 0, 21, 0, 0, 0, 2]' : 0.18715}", "{'[0, 6, 3, 3, 5, 3, 19, 0, 21, 0, 0, 0, 2]' : 0.187094}", "{'[0, 6, 3, 3, 5, 3, 19, 0, 21, 0, 0, 0, 2]' : 0.186875}", "{'[0, 6, 3, 3, 5, 3, 19, 0, 21, 0, 0, 0, 2]' : 0.191316}", "{'[0, 6, 3, 3, 5, 3, 19, 0, 21, 0, 0, 0, 2]' : 0.187453}", "{'[0, 6, 3, 3, 5, 3, 19, 0, 21, 0, 0, 0, 2]' : 0.187714}", "{'[0, 6, 3, 3, 5, 3, 19, 0, 21, 0, 0, 0, 2]' : 0.192838}"]
returning from 'run': {'[0, 6, 3, 3, 5, 3, 19, 0, 21, 0, 0, 0, 2]': ([0.18706, 0.186995, 0.190212, 0.191145, 0.187069, 0.186976, 0.189761, 0.192806, 0.187553, 0.187036, 0.184754, 0.18686, 0.187055, 0.192479, 0.192854, 0.189357, 0.186918, 0.187551, 0.19088, 0.192825, 0.192823, 0.188109, 0.187032, 0.18715, 0.187094, 0.186875, 0.191316, 0.187453, 0.187714, 0.192838], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 3, 3, 5, 3, 19, 0, 21, 0, 0, 0, 2]': ([0.18706, 0.186995, 0.190212, 0.191145, 0.187069, 0.186976, 0.189761, 0.192806, 0.187553, 0.187036, 0.184754, 0.18686, 0.187055, 0.192479, 0.192854, 0.189357, 0.186918, 0.187551, 0.19088, 0.192825, 0.192823, 0.188109, 0.187032, 0.18715, 0.187094, 0.186875, 0.191316, 0.187453, 0.187714, 0.192838], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		665
        Multiplications: 	200
        Divisions: 		0
        Logical: 		0
        Reads: 			1173
        Writes: 		168
        Comparisons:		15
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest13.exe __orio_perftest13.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest13.exe  
Program Test Output: 
{'[1, 1, 3, 0, 0, 0, 26, 8, 0, 0, 0, 0, 1]' : 0.236147}
{'[1, 1, 3, 0, 0, 0, 26, 8, 0, 0, 0, 0, 1]' : 0.236098}
{'[1, 1, 3, 0, 0, 0, 26, 8, 0, 0, 0, 0, 1]' : 0.236231}
{'[1, 1, 3, 0, 0, 0, 26, 8, 0, 0, 0, 0, 1]' : 0.236137}
{'[1, 1, 3, 0, 0, 0, 26, 8, 0, 0, 0, 0, 1]' : 0.236107}
{'[1, 1, 3, 0, 0, 0, 26, 8, 0, 0, 0, 0, 1]' : 0.235958}
{'[1, 1, 3, 0, 0, 0, 26, 8, 0, 0, 0, 0, 1]' : 0.236182}
{'[1, 1, 3, 0, 0, 0, 26, 8, 0, 0, 0, 0, 1]' : 0.236189}
{'[1, 1, 3, 0, 0, 0, 26, 8, 0, 0, 0, 0, 1]' : 0.23615}
{'[1, 1, 3, 0, 0, 0, 26, 8, 0, 0, 0, 0, 1]' : 0.23522}
{'[1, 1, 3, 0, 0, 0, 26, 8, 0, 0, 0, 0, 1]' : 0.230155}
{'[1, 1, 3, 0, 0, 0, 26, 8, 0, 0, 0, 0, 1]' : 0.22987}
{'[1, 1, 3, 0, 0, 0, 26, 8, 0, 0, 0, 0, 1]' : 0.236108}
{'[1, 1, 3, 0, 0, 0, 26, 8, 0, 0, 0, 0, 1]' : 0.236015}
{'[1, 1, 3, 0, 0, 0, 26, 8, 0, 0, 0, 0, 1]' : 0.236246}
{'[1, 1, 3, 0, 0, 0, 26, 8, 0, 0, 0, 0, 1]' : 0.236109}
{'[1, 1, 3, 0, 0, 0, 26, 8, 0, 0, 0, 0, 1]' : 0.236113}
{'[1, 1, 3, 0, 0, 0, 26, 8, 0, 0, 0, 0, 1]' : 0.236383}
{'[1, 1, 3, 0, 0, 0, 26, 8, 0, 0, 0, 0, 1]' : 0.233469}
{'[1, 1, 3, 0, 0, 0, 26, 8, 0, 0, 0, 0, 1]' : 0.230073}
{'[1, 1, 3, 0, 0, 0, 26, 8, 0, 0, 0, 0, 1]' : 0.232996}
{'[1, 1, 3, 0, 0, 0, 26, 8, 0, 0, 0, 0, 1]' : 0.236007}
{'[1, 1, 3, 0, 0, 0, 26, 8, 0, 0, 0, 0, 1]' : 0.236142}
{'[1, 1, 3, 0, 0, 0, 26, 8, 0, 0, 0, 0, 1]' : 0.236191}
{'[1, 1, 3, 0, 0, 0, 26, 8, 0, 0, 0, 0, 1]' : 0.236163}
{'[1, 1, 3, 0, 0, 0, 26, 8, 0, 0, 0, 0, 1]' : 0.236241}
{'[1, 1, 3, 0, 0, 0, 26, 8, 0, 0, 0, 0, 1]' : 0.236543}
{'[1, 1, 3, 0, 0, 0, 26, 8, 0, 0, 0, 0, 1]' : 0.236246}
{'[1, 1, 3, 0, 0, 0, 26, 8, 0, 0, 0, 0, 1]' : 0.231744}
{'[1, 1, 3, 0, 0, 0, 26, 8, 0, 0, 0, 0, 1]' : 0.235989}

out:
 ["{'[1, 1, 3, 0, 0, 0, 26, 8, 0, 0, 0, 0, 1]' : 0.236147}", "{'[1, 1, 3, 0, 0, 0, 26, 8, 0, 0, 0, 0, 1]' : 0.236098}", "{'[1, 1, 3, 0, 0, 0, 26, 8, 0, 0, 0, 0, 1]' : 0.236231}", "{'[1, 1, 3, 0, 0, 0, 26, 8, 0, 0, 0, 0, 1]' : 0.236137}", "{'[1, 1, 3, 0, 0, 0, 26, 8, 0, 0, 0, 0, 1]' : 0.236107}", "{'[1, 1, 3, 0, 0, 0, 26, 8, 0, 0, 0, 0, 1]' : 0.235958}", "{'[1, 1, 3, 0, 0, 0, 26, 8, 0, 0, 0, 0, 1]' : 0.236182}", "{'[1, 1, 3, 0, 0, 0, 26, 8, 0, 0, 0, 0, 1]' : 0.236189}", "{'[1, 1, 3, 0, 0, 0, 26, 8, 0, 0, 0, 0, 1]' : 0.23615}", "{'[1, 1, 3, 0, 0, 0, 26, 8, 0, 0, 0, 0, 1]' : 0.23522}", "{'[1, 1, 3, 0, 0, 0, 26, 8, 0, 0, 0, 0, 1]' : 0.230155}", "{'[1, 1, 3, 0, 0, 0, 26, 8, 0, 0, 0, 0, 1]' : 0.22987}", "{'[1, 1, 3, 0, 0, 0, 26, 8, 0, 0, 0, 0, 1]' : 0.236108}", "{'[1, 1, 3, 0, 0, 0, 26, 8, 0, 0, 0, 0, 1]' : 0.236015}", "{'[1, 1, 3, 0, 0, 0, 26, 8, 0, 0, 0, 0, 1]' : 0.236246}", "{'[1, 1, 3, 0, 0, 0, 26, 8, 0, 0, 0, 0, 1]' : 0.236109}", "{'[1, 1, 3, 0, 0, 0, 26, 8, 0, 0, 0, 0, 1]' : 0.236113}", "{'[1, 1, 3, 0, 0, 0, 26, 8, 0, 0, 0, 0, 1]' : 0.236383}", "{'[1, 1, 3, 0, 0, 0, 26, 8, 0, 0, 0, 0, 1]' : 0.233469}", "{'[1, 1, 3, 0, 0, 0, 26, 8, 0, 0, 0, 0, 1]' : 0.230073}", "{'[1, 1, 3, 0, 0, 0, 26, 8, 0, 0, 0, 0, 1]' : 0.232996}", "{'[1, 1, 3, 0, 0, 0, 26, 8, 0, 0, 0, 0, 1]' : 0.236007}", "{'[1, 1, 3, 0, 0, 0, 26, 8, 0, 0, 0, 0, 1]' : 0.236142}", "{'[1, 1, 3, 0, 0, 0, 26, 8, 0, 0, 0, 0, 1]' : 0.236191}", "{'[1, 1, 3, 0, 0, 0, 26, 8, 0, 0, 0, 0, 1]' : 0.236163}", "{'[1, 1, 3, 0, 0, 0, 26, 8, 0, 0, 0, 0, 1]' : 0.236241}", "{'[1, 1, 3, 0, 0, 0, 26, 8, 0, 0, 0, 0, 1]' : 0.236543}", "{'[1, 1, 3, 0, 0, 0, 26, 8, 0, 0, 0, 0, 1]' : 0.236246}", "{'[1, 1, 3, 0, 0, 0, 26, 8, 0, 0, 0, 0, 1]' : 0.231744}", "{'[1, 1, 3, 0, 0, 0, 26, 8, 0, 0, 0, 0, 1]' : 0.235989}"]
returning from 'run': {'[1, 1, 3, 0, 0, 0, 26, 8, 0, 0, 0, 0, 1]': ([0.236147, 0.236098, 0.236231, 0.236137, 0.236107, 0.235958, 0.236182, 0.236189, 0.23615, 0.23522, 0.230155, 0.22987, 0.236108, 0.236015, 0.236246, 0.236109, 0.236113, 0.236383, 0.233469, 0.230073, 0.232996, 0.236007, 0.236142, 0.236191, 0.236163, 0.236241, 0.236543, 0.236246, 0.231744, 0.235989], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 1, 3, 0, 0, 0, 26, 8, 0, 0, 0, 0, 1]': ([0.236147, 0.236098, 0.236231, 0.236137, 0.236107, 0.235958, 0.236182, 0.236189, 0.23615, 0.23522, 0.230155, 0.22987, 0.236108, 0.236015, 0.236246, 0.236109, 0.236113, 0.236383, 0.233469, 0.230073, 0.232996, 0.236007, 0.236142, 0.236191, 0.236163, 0.236241, 0.236543, 0.236246, 0.231744, 0.235989], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	5
        Additions: 		952
        Multiplications: 	288
        Divisions: 		0
        Logical: 		0
        Reads: 			1606
        Writes: 		209
        Comparisons:		16
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest14.exe __orio_perftest14.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest14.exe  
Program Test Output: 
{'[3, 0, 0, 5, 6, 0, 22, 6, 0, 28, 1, 0, 1]' : 0.118456}
{'[3, 0, 0, 5, 6, 0, 22, 6, 0, 28, 1, 0, 1]' : 0.118751}
{'[3, 0, 0, 5, 6, 0, 22, 6, 0, 28, 1, 0, 1]' : 0.118183}
{'[3, 0, 0, 5, 6, 0, 22, 6, 0, 28, 1, 0, 1]' : 0.116908}
{'[3, 0, 0, 5, 6, 0, 22, 6, 0, 28, 1, 0, 1]' : 0.115174}
{'[3, 0, 0, 5, 6, 0, 22, 6, 0, 28, 1, 0, 1]' : 0.111867}
{'[3, 0, 0, 5, 6, 0, 22, 6, 0, 28, 1, 0, 1]' : 0.111559}
{'[3, 0, 0, 5, 6, 0, 22, 6, 0, 28, 1, 0, 1]' : 0.112268}
{'[3, 0, 0, 5, 6, 0, 22, 6, 0, 28, 1, 0, 1]' : 0.115213}
{'[3, 0, 0, 5, 6, 0, 22, 6, 0, 28, 1, 0, 1]' : 0.115173}
{'[3, 0, 0, 5, 6, 0, 22, 6, 0, 28, 1, 0, 1]' : 0.115259}
{'[3, 0, 0, 5, 6, 0, 22, 6, 0, 28, 1, 0, 1]' : 0.115353}
{'[3, 0, 0, 5, 6, 0, 22, 6, 0, 28, 1, 0, 1]' : 0.115323}
{'[3, 0, 0, 5, 6, 0, 22, 6, 0, 28, 1, 0, 1]' : 0.115304}
{'[3, 0, 0, 5, 6, 0, 22, 6, 0, 28, 1, 0, 1]' : 0.115584}
{'[3, 0, 0, 5, 6, 0, 22, 6, 0, 28, 1, 0, 1]' : 0.112487}
{'[3, 0, 0, 5, 6, 0, 22, 6, 0, 28, 1, 0, 1]' : 0.113223}
{'[3, 0, 0, 5, 6, 0, 22, 6, 0, 28, 1, 0, 1]' : 0.115201}
{'[3, 0, 0, 5, 6, 0, 22, 6, 0, 28, 1, 0, 1]' : 0.114974}
{'[3, 0, 0, 5, 6, 0, 22, 6, 0, 28, 1, 0, 1]' : 0.115527}
{'[3, 0, 0, 5, 6, 0, 22, 6, 0, 28, 1, 0, 1]' : 0.115639}
{'[3, 0, 0, 5, 6, 0, 22, 6, 0, 28, 1, 0, 1]' : 0.11846}
{'[3, 0, 0, 5, 6, 0, 22, 6, 0, 28, 1, 0, 1]' : 0.118251}
{'[3, 0, 0, 5, 6, 0, 22, 6, 0, 28, 1, 0, 1]' : 0.118358}
{'[3, 0, 0, 5, 6, 0, 22, 6, 0, 28, 1, 0, 1]' : 0.118514}
{'[3, 0, 0, 5, 6, 0, 22, 6, 0, 28, 1, 0, 1]' : 0.118494}
{'[3, 0, 0, 5, 6, 0, 22, 6, 0, 28, 1, 0, 1]' : 0.118268}
{'[3, 0, 0, 5, 6, 0, 22, 6, 0, 28, 1, 0, 1]' : 0.118465}
{'[3, 0, 0, 5, 6, 0, 22, 6, 0, 28, 1, 0, 1]' : 0.118456}
{'[3, 0, 0, 5, 6, 0, 22, 6, 0, 28, 1, 0, 1]' : 0.118689}

out:
 ["{'[3, 0, 0, 5, 6, 0, 22, 6, 0, 28, 1, 0, 1]' : 0.118456}", "{'[3, 0, 0, 5, 6, 0, 22, 6, 0, 28, 1, 0, 1]' : 0.118751}", "{'[3, 0, 0, 5, 6, 0, 22, 6, 0, 28, 1, 0, 1]' : 0.118183}", "{'[3, 0, 0, 5, 6, 0, 22, 6, 0, 28, 1, 0, 1]' : 0.116908}", "{'[3, 0, 0, 5, 6, 0, 22, 6, 0, 28, 1, 0, 1]' : 0.115174}", "{'[3, 0, 0, 5, 6, 0, 22, 6, 0, 28, 1, 0, 1]' : 0.111867}", "{'[3, 0, 0, 5, 6, 0, 22, 6, 0, 28, 1, 0, 1]' : 0.111559}", "{'[3, 0, 0, 5, 6, 0, 22, 6, 0, 28, 1, 0, 1]' : 0.112268}", "{'[3, 0, 0, 5, 6, 0, 22, 6, 0, 28, 1, 0, 1]' : 0.115213}", "{'[3, 0, 0, 5, 6, 0, 22, 6, 0, 28, 1, 0, 1]' : 0.115173}", "{'[3, 0, 0, 5, 6, 0, 22, 6, 0, 28, 1, 0, 1]' : 0.115259}", "{'[3, 0, 0, 5, 6, 0, 22, 6, 0, 28, 1, 0, 1]' : 0.115353}", "{'[3, 0, 0, 5, 6, 0, 22, 6, 0, 28, 1, 0, 1]' : 0.115323}", "{'[3, 0, 0, 5, 6, 0, 22, 6, 0, 28, 1, 0, 1]' : 0.115304}", "{'[3, 0, 0, 5, 6, 0, 22, 6, 0, 28, 1, 0, 1]' : 0.115584}", "{'[3, 0, 0, 5, 6, 0, 22, 6, 0, 28, 1, 0, 1]' : 0.112487}", "{'[3, 0, 0, 5, 6, 0, 22, 6, 0, 28, 1, 0, 1]' : 0.113223}", "{'[3, 0, 0, 5, 6, 0, 22, 6, 0, 28, 1, 0, 1]' : 0.115201}", "{'[3, 0, 0, 5, 6, 0, 22, 6, 0, 28, 1, 0, 1]' : 0.114974}", "{'[3, 0, 0, 5, 6, 0, 22, 6, 0, 28, 1, 0, 1]' : 0.115527}", "{'[3, 0, 0, 5, 6, 0, 22, 6, 0, 28, 1, 0, 1]' : 0.115639}", "{'[3, 0, 0, 5, 6, 0, 22, 6, 0, 28, 1, 0, 1]' : 0.11846}", "{'[3, 0, 0, 5, 6, 0, 22, 6, 0, 28, 1, 0, 1]' : 0.118251}", "{'[3, 0, 0, 5, 6, 0, 22, 6, 0, 28, 1, 0, 1]' : 0.118358}", "{'[3, 0, 0, 5, 6, 0, 22, 6, 0, 28, 1, 0, 1]' : 0.118514}", "{'[3, 0, 0, 5, 6, 0, 22, 6, 0, 28, 1, 0, 1]' : 0.118494}", "{'[3, 0, 0, 5, 6, 0, 22, 6, 0, 28, 1, 0, 1]' : 0.118268}", "{'[3, 0, 0, 5, 6, 0, 22, 6, 0, 28, 1, 0, 1]' : 0.118465}", "{'[3, 0, 0, 5, 6, 0, 22, 6, 0, 28, 1, 0, 1]' : 0.118456}", "{'[3, 0, 0, 5, 6, 0, 22, 6, 0, 28, 1, 0, 1]' : 0.118689}"]
returning from 'run': {'[3, 0, 0, 5, 6, 0, 22, 6, 0, 28, 1, 0, 1]': ([0.118456, 0.118751, 0.118183, 0.116908, 0.115174, 0.111867, 0.111559, 0.112268, 0.115213, 0.115173, 0.115259, 0.115353, 0.115323, 0.115304, 0.115584, 0.112487, 0.113223, 0.115201, 0.114974, 0.115527, 0.115639, 0.11846, 0.118251, 0.118358, 0.118514, 0.118494, 0.118268, 0.118465, 0.118456, 0.118689], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 0, 0, 5, 6, 0, 22, 6, 0, 28, 1, 0, 1]': ([0.118456, 0.118751, 0.118183, 0.116908, 0.115174, 0.111867, 0.111559, 0.112268, 0.115213, 0.115173, 0.115259, 0.115353, 0.115323, 0.115304, 0.115584, 0.112487, 0.113223, 0.115201, 0.114974, 0.115527, 0.115639, 0.11846, 0.118251, 0.118358, 0.118514, 0.118494, 0.118268, 0.118465, 0.118456, 0.118689], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = kkk
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	4
        Additions: 		1606
        Multiplications: 	504
        Divisions: 		0
        Logical: 		0
        Reads: 			2656
        Writes: 		291
        Comparisons:		18
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest15.exe __orio_perftest15.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest15.exe  
Program Test Output: 
{'[0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]' : 0.107241}
{'[0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]' : 0.111174}
{'[0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]' : 0.11102}
{'[0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]' : 0.111386}
{'[0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]' : 0.111414}
{'[0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]' : 0.11168}
{'[0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]' : 0.11102}
{'[0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]' : 0.111018}
{'[0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]' : 0.10894}
{'[0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]' : 0.108882}
{'[0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]' : 0.110997}
{'[0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]' : 0.111371}
{'[0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]' : 0.111525}
{'[0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]' : 0.111166}
{'[0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]' : 0.111211}
{'[0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]' : 0.111395}
{'[0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]' : 0.111429}
{'[0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]' : 0.111173}
{'[0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]' : 0.11119}
{'[0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]' : 0.111458}
{'[0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]' : 0.111442}
{'[0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]' : 0.111135}
{'[0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]' : 0.111304}
{'[0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]' : 0.111529}
{'[0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]' : 0.11139}
{'[0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]' : 0.111184}
{'[0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]' : 0.111026}
{'[0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]' : 0.111478}
{'[0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]' : 0.111422}
{'[0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]' : 0.111187}

out:
 ["{'[0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]' : 0.107241}", "{'[0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]' : 0.111174}", "{'[0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]' : 0.11102}", "{'[0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]' : 0.111386}", "{'[0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]' : 0.111414}", "{'[0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]' : 0.11168}", "{'[0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]' : 0.11102}", "{'[0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]' : 0.111018}", "{'[0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]' : 0.10894}", "{'[0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]' : 0.108882}", "{'[0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]' : 0.110997}", "{'[0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]' : 0.111371}", "{'[0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]' : 0.111525}", "{'[0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]' : 0.111166}", "{'[0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]' : 0.111211}", "{'[0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]' : 0.111395}", "{'[0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]' : 0.111429}", "{'[0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]' : 0.111173}", "{'[0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]' : 0.11119}", "{'[0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]' : 0.111458}", "{'[0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]' : 0.111442}", "{'[0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]' : 0.111135}", "{'[0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]' : 0.111304}", "{'[0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]' : 0.111529}", "{'[0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]' : 0.11139}", "{'[0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]' : 0.111184}", "{'[0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]' : 0.111026}", "{'[0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]' : 0.111478}", "{'[0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]' : 0.111422}", "{'[0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]' : 0.111187}"]
returning from 'run': {'[0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]': ([0.107241, 0.111174, 0.11102, 0.111386, 0.111414, 0.11168, 0.11102, 0.111018, 0.10894, 0.108882, 0.110997, 0.111371, 0.111525, 0.111166, 0.111211, 0.111395, 0.111429, 0.111173, 0.11119, 0.111458, 0.111442, 0.111135, 0.111304, 0.111529, 0.11139, 0.111184, 0.111026, 0.111478, 0.111422, 0.111187], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]': ([0.107241, 0.111174, 0.11102, 0.111386, 0.111414, 0.11168, 0.11102, 0.111018, 0.10894, 0.108882, 0.110997, 0.111371, 0.111525, 0.111166, 0.111211, 0.111395, 0.111429, 0.111173, 0.11119, 0.111458, 0.111442, 0.111135, 0.111304, 0.111529, 0.11139, 0.111184, 0.111026, 0.111478, 0.111422, 0.111187], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	6
        Additions: 		3038
        Multiplications: 	936
        Divisions: 		0
        Logical: 		0
        Reads: 			4901
        Writes: 		541
        Comparisons:		25
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest16.exe __orio_perftest16.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest16.exe  
Program Test Output: 
{'[5, 3, 0, 4, 3, 2, 16, 2, 10, 0, 2, 0, 0]' : 0.266208}
{'[5, 3, 0, 4, 3, 2, 16, 2, 10, 0, 2, 0, 0]' : 0.237506}
{'[5, 3, 0, 4, 3, 2, 16, 2, 10, 0, 2, 0, 0]' : 0.235316}
{'[5, 3, 0, 4, 3, 2, 16, 2, 10, 0, 2, 0, 0]' : 0.235382}
{'[5, 3, 0, 4, 3, 2, 16, 2, 10, 0, 2, 0, 0]' : 0.235804}
{'[5, 3, 0, 4, 3, 2, 16, 2, 10, 0, 2, 0, 0]' : 0.235092}
{'[5, 3, 0, 4, 3, 2, 16, 2, 10, 0, 2, 0, 0]' : 0.235245}
{'[5, 3, 0, 4, 3, 2, 16, 2, 10, 0, 2, 0, 0]' : 0.236715}
{'[5, 3, 0, 4, 3, 2, 16, 2, 10, 0, 2, 0, 0]' : 0.235286}
{'[5, 3, 0, 4, 3, 2, 16, 2, 10, 0, 2, 0, 0]' : 0.234472}
{'[5, 3, 0, 4, 3, 2, 16, 2, 10, 0, 2, 0, 0]' : 0.236924}
{'[5, 3, 0, 4, 3, 2, 16, 2, 10, 0, 2, 0, 0]' : 0.23587}
{'[5, 3, 0, 4, 3, 2, 16, 2, 10, 0, 2, 0, 0]' : 0.234769}
{'[5, 3, 0, 4, 3, 2, 16, 2, 10, 0, 2, 0, 0]' : 0.233863}
{'[5, 3, 0, 4, 3, 2, 16, 2, 10, 0, 2, 0, 0]' : 0.2365}
{'[5, 3, 0, 4, 3, 2, 16, 2, 10, 0, 2, 0, 0]' : 0.235023}
{'[5, 3, 0, 4, 3, 2, 16, 2, 10, 0, 2, 0, 0]' : 0.236798}
{'[5, 3, 0, 4, 3, 2, 16, 2, 10, 0, 2, 0, 0]' : 0.234631}
{'[5, 3, 0, 4, 3, 2, 16, 2, 10, 0, 2, 0, 0]' : 0.236176}
{'[5, 3, 0, 4, 3, 2, 16, 2, 10, 0, 2, 0, 0]' : 0.236245}
{'[5, 3, 0, 4, 3, 2, 16, 2, 10, 0, 2, 0, 0]' : 0.234741}
{'[5, 3, 0, 4, 3, 2, 16, 2, 10, 0, 2, 0, 0]' : 0.236189}
{'[5, 3, 0, 4, 3, 2, 16, 2, 10, 0, 2, 0, 0]' : 0.237831}
{'[5, 3, 0, 4, 3, 2, 16, 2, 10, 0, 2, 0, 0]' : 0.23786}
{'[5, 3, 0, 4, 3, 2, 16, 2, 10, 0, 2, 0, 0]' : 0.235125}
{'[5, 3, 0, 4, 3, 2, 16, 2, 10, 0, 2, 0, 0]' : 0.236481}
{'[5, 3, 0, 4, 3, 2, 16, 2, 10, 0, 2, 0, 0]' : 0.237155}
{'[5, 3, 0, 4, 3, 2, 16, 2, 10, 0, 2, 0, 0]' : 0.237257}
{'[5, 3, 0, 4, 3, 2, 16, 2, 10, 0, 2, 0, 0]' : 0.233891}
{'[5, 3, 0, 4, 3, 2, 16, 2, 10, 0, 2, 0, 0]' : 0.234252}

out:
 ["{'[5, 3, 0, 4, 3, 2, 16, 2, 10, 0, 2, 0, 0]' : 0.266208}", "{'[5, 3, 0, 4, 3, 2, 16, 2, 10, 0, 2, 0, 0]' : 0.237506}", "{'[5, 3, 0, 4, 3, 2, 16, 2, 10, 0, 2, 0, 0]' : 0.235316}", "{'[5, 3, 0, 4, 3, 2, 16, 2, 10, 0, 2, 0, 0]' : 0.235382}", "{'[5, 3, 0, 4, 3, 2, 16, 2, 10, 0, 2, 0, 0]' : 0.235804}", "{'[5, 3, 0, 4, 3, 2, 16, 2, 10, 0, 2, 0, 0]' : 0.235092}", "{'[5, 3, 0, 4, 3, 2, 16, 2, 10, 0, 2, 0, 0]' : 0.235245}", "{'[5, 3, 0, 4, 3, 2, 16, 2, 10, 0, 2, 0, 0]' : 0.236715}", "{'[5, 3, 0, 4, 3, 2, 16, 2, 10, 0, 2, 0, 0]' : 0.235286}", "{'[5, 3, 0, 4, 3, 2, 16, 2, 10, 0, 2, 0, 0]' : 0.234472}", "{'[5, 3, 0, 4, 3, 2, 16, 2, 10, 0, 2, 0, 0]' : 0.236924}", "{'[5, 3, 0, 4, 3, 2, 16, 2, 10, 0, 2, 0, 0]' : 0.23587}", "{'[5, 3, 0, 4, 3, 2, 16, 2, 10, 0, 2, 0, 0]' : 0.234769}", "{'[5, 3, 0, 4, 3, 2, 16, 2, 10, 0, 2, 0, 0]' : 0.233863}", "{'[5, 3, 0, 4, 3, 2, 16, 2, 10, 0, 2, 0, 0]' : 0.2365}", "{'[5, 3, 0, 4, 3, 2, 16, 2, 10, 0, 2, 0, 0]' : 0.235023}", "{'[5, 3, 0, 4, 3, 2, 16, 2, 10, 0, 2, 0, 0]' : 0.236798}", "{'[5, 3, 0, 4, 3, 2, 16, 2, 10, 0, 2, 0, 0]' : 0.234631}", "{'[5, 3, 0, 4, 3, 2, 16, 2, 10, 0, 2, 0, 0]' : 0.236176}", "{'[5, 3, 0, 4, 3, 2, 16, 2, 10, 0, 2, 0, 0]' : 0.236245}", "{'[5, 3, 0, 4, 3, 2, 16, 2, 10, 0, 2, 0, 0]' : 0.234741}", "{'[5, 3, 0, 4, 3, 2, 16, 2, 10, 0, 2, 0, 0]' : 0.236189}", "{'[5, 3, 0, 4, 3, 2, 16, 2, 10, 0, 2, 0, 0]' : 0.237831}", "{'[5, 3, 0, 4, 3, 2, 16, 2, 10, 0, 2, 0, 0]' : 0.23786}", "{'[5, 3, 0, 4, 3, 2, 16, 2, 10, 0, 2, 0, 0]' : 0.235125}", "{'[5, 3, 0, 4, 3, 2, 16, 2, 10, 0, 2, 0, 0]' : 0.236481}", "{'[5, 3, 0, 4, 3, 2, 16, 2, 10, 0, 2, 0, 0]' : 0.237155}", "{'[5, 3, 0, 4, 3, 2, 16, 2, 10, 0, 2, 0, 0]' : 0.237257}", "{'[5, 3, 0, 4, 3, 2, 16, 2, 10, 0, 2, 0, 0]' : 0.233891}", "{'[5, 3, 0, 4, 3, 2, 16, 2, 10, 0, 2, 0, 0]' : 0.234252}"]
returning from 'run': {'[5, 3, 0, 4, 3, 2, 16, 2, 10, 0, 2, 0, 0]': ([0.266208, 0.237506, 0.235316, 0.235382, 0.235804, 0.235092, 0.235245, 0.236715, 0.235286, 0.234472, 0.236924, 0.23587, 0.234769, 0.233863, 0.2365, 0.235023, 0.236798, 0.234631, 0.236176, 0.236245, 0.234741, 0.236189, 0.237831, 0.23786, 0.235125, 0.236481, 0.237155, 0.237257, 0.233891, 0.234252], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 3, 0, 4, 3, 2, 16, 2, 10, 0, 2, 0, 0]': ([0.266208, 0.237506, 0.235316, 0.235382, 0.235804, 0.235092, 0.235245, 0.236715, 0.235286, 0.234472, 0.236924, 0.23587, 0.234769, 0.233863, 0.2365, 0.235023, 0.236798, 0.234631, 0.236176, 0.236245, 0.234741, 0.236189, 0.237831, 0.23786, 0.235125, 0.236481, 0.237155, 0.237257, 0.233891, 0.234252], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	6
        Additions: 		2358
        Multiplications: 	744
        Divisions: 		0
        Logical: 		0
        Reads: 			3934
        Writes: 		446
        Comparisons:		22
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest17.exe __orio_perftest17.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest17.exe  
Program Test Output: 
{'[6, 1, 1, 6, 1, 6, 22, 4, 27, 0, 0, 0, 2]' : 0.128326}
{'[6, 1, 1, 6, 1, 6, 22, 4, 27, 0, 0, 0, 2]' : 0.128159}
{'[6, 1, 1, 6, 1, 6, 22, 4, 27, 0, 0, 0, 2]' : 0.128286}
{'[6, 1, 1, 6, 1, 6, 22, 4, 27, 0, 0, 0, 2]' : 0.128096}
{'[6, 1, 1, 6, 1, 6, 22, 4, 27, 0, 0, 0, 2]' : 0.128418}
{'[6, 1, 1, 6, 1, 6, 22, 4, 27, 0, 0, 0, 2]' : 0.128208}
{'[6, 1, 1, 6, 1, 6, 22, 4, 27, 0, 0, 0, 2]' : 0.126869}
{'[6, 1, 1, 6, 1, 6, 22, 4, 27, 0, 0, 0, 2]' : 0.125037}
{'[6, 1, 1, 6, 1, 6, 22, 4, 27, 0, 0, 0, 2]' : 0.12655}
{'[6, 1, 1, 6, 1, 6, 22, 4, 27, 0, 0, 0, 2]' : 0.127941}
{'[6, 1, 1, 6, 1, 6, 22, 4, 27, 0, 0, 0, 2]' : 0.128202}
{'[6, 1, 1, 6, 1, 6, 22, 4, 27, 0, 0, 0, 2]' : 0.128128}
{'[6, 1, 1, 6, 1, 6, 22, 4, 27, 0, 0, 0, 2]' : 0.128289}
{'[6, 1, 1, 6, 1, 6, 22, 4, 27, 0, 0, 0, 2]' : 0.128182}
{'[6, 1, 1, 6, 1, 6, 22, 4, 27, 0, 0, 0, 2]' : 0.126421}
{'[6, 1, 1, 6, 1, 6, 22, 4, 27, 0, 0, 0, 2]' : 0.124782}
{'[6, 1, 1, 6, 1, 6, 22, 4, 27, 0, 0, 0, 2]' : 0.126937}
{'[6, 1, 1, 6, 1, 6, 22, 4, 27, 0, 0, 0, 2]' : 0.127909}
{'[6, 1, 1, 6, 1, 6, 22, 4, 27, 0, 0, 0, 2]' : 0.128193}
{'[6, 1, 1, 6, 1, 6, 22, 4, 27, 0, 0, 0, 2]' : 0.127853}
{'[6, 1, 1, 6, 1, 6, 22, 4, 27, 0, 0, 0, 2]' : 0.128109}
{'[6, 1, 1, 6, 1, 6, 22, 4, 27, 0, 0, 0, 2]' : 0.128357}
{'[6, 1, 1, 6, 1, 6, 22, 4, 27, 0, 0, 0, 2]' : 0.127357}
{'[6, 1, 1, 6, 1, 6, 22, 4, 27, 0, 0, 0, 2]' : 0.124863}
{'[6, 1, 1, 6, 1, 6, 22, 4, 27, 0, 0, 0, 2]' : 0.127537}
{'[6, 1, 1, 6, 1, 6, 22, 4, 27, 0, 0, 0, 2]' : 0.128117}
{'[6, 1, 1, 6, 1, 6, 22, 4, 27, 0, 0, 0, 2]' : 0.127876}
{'[6, 1, 1, 6, 1, 6, 22, 4, 27, 0, 0, 0, 2]' : 0.127863}
{'[6, 1, 1, 6, 1, 6, 22, 4, 27, 0, 0, 0, 2]' : 0.128105}
{'[6, 1, 1, 6, 1, 6, 22, 4, 27, 0, 0, 0, 2]' : 0.127932}

out:
 ["{'[6, 1, 1, 6, 1, 6, 22, 4, 27, 0, 0, 0, 2]' : 0.128326}", "{'[6, 1, 1, 6, 1, 6, 22, 4, 27, 0, 0, 0, 2]' : 0.128159}", "{'[6, 1, 1, 6, 1, 6, 22, 4, 27, 0, 0, 0, 2]' : 0.128286}", "{'[6, 1, 1, 6, 1, 6, 22, 4, 27, 0, 0, 0, 2]' : 0.128096}", "{'[6, 1, 1, 6, 1, 6, 22, 4, 27, 0, 0, 0, 2]' : 0.128418}", "{'[6, 1, 1, 6, 1, 6, 22, 4, 27, 0, 0, 0, 2]' : 0.128208}", "{'[6, 1, 1, 6, 1, 6, 22, 4, 27, 0, 0, 0, 2]' : 0.126869}", "{'[6, 1, 1, 6, 1, 6, 22, 4, 27, 0, 0, 0, 2]' : 0.125037}", "{'[6, 1, 1, 6, 1, 6, 22, 4, 27, 0, 0, 0, 2]' : 0.12655}", "{'[6, 1, 1, 6, 1, 6, 22, 4, 27, 0, 0, 0, 2]' : 0.127941}", "{'[6, 1, 1, 6, 1, 6, 22, 4, 27, 0, 0, 0, 2]' : 0.128202}", "{'[6, 1, 1, 6, 1, 6, 22, 4, 27, 0, 0, 0, 2]' : 0.128128}", "{'[6, 1, 1, 6, 1, 6, 22, 4, 27, 0, 0, 0, 2]' : 0.128289}", "{'[6, 1, 1, 6, 1, 6, 22, 4, 27, 0, 0, 0, 2]' : 0.128182}", "{'[6, 1, 1, 6, 1, 6, 22, 4, 27, 0, 0, 0, 2]' : 0.126421}", "{'[6, 1, 1, 6, 1, 6, 22, 4, 27, 0, 0, 0, 2]' : 0.124782}", "{'[6, 1, 1, 6, 1, 6, 22, 4, 27, 0, 0, 0, 2]' : 0.126937}", "{'[6, 1, 1, 6, 1, 6, 22, 4, 27, 0, 0, 0, 2]' : 0.127909}", "{'[6, 1, 1, 6, 1, 6, 22, 4, 27, 0, 0, 0, 2]' : 0.128193}", "{'[6, 1, 1, 6, 1, 6, 22, 4, 27, 0, 0, 0, 2]' : 0.127853}", "{'[6, 1, 1, 6, 1, 6, 22, 4, 27, 0, 0, 0, 2]' : 0.128109}", "{'[6, 1, 1, 6, 1, 6, 22, 4, 27, 0, 0, 0, 2]' : 0.128357}", "{'[6, 1, 1, 6, 1, 6, 22, 4, 27, 0, 0, 0, 2]' : 0.127357}", "{'[6, 1, 1, 6, 1, 6, 22, 4, 27, 0, 0, 0, 2]' : 0.124863}", "{'[6, 1, 1, 6, 1, 6, 22, 4, 27, 0, 0, 0, 2]' : 0.127537}", "{'[6, 1, 1, 6, 1, 6, 22, 4, 27, 0, 0, 0, 2]' : 0.128117}", "{'[6, 1, 1, 6, 1, 6, 22, 4, 27, 0, 0, 0, 2]' : 0.127876}", "{'[6, 1, 1, 6, 1, 6, 22, 4, 27, 0, 0, 0, 2]' : 0.127863}", "{'[6, 1, 1, 6, 1, 6, 22, 4, 27, 0, 0, 0, 2]' : 0.128105}", "{'[6, 1, 1, 6, 1, 6, 22, 4, 27, 0, 0, 0, 2]' : 0.127932}"]
returning from 'run': {'[6, 1, 1, 6, 1, 6, 22, 4, 27, 0, 0, 0, 2]': ([0.128326, 0.128159, 0.128286, 0.128096, 0.128418, 0.128208, 0.126869, 0.125037, 0.12655, 0.127941, 0.128202, 0.128128, 0.128289, 0.128182, 0.126421, 0.124782, 0.126937, 0.127909, 0.128193, 0.127853, 0.128109, 0.128357, 0.127357, 0.124863, 0.127537, 0.128117, 0.127876, 0.127863, 0.128105, 0.127932], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 1, 1, 6, 1, 6, 22, 4, 27, 0, 0, 0, 2]': ([0.128326, 0.128159, 0.128286, 0.128096, 0.128418, 0.128208, 0.126869, 0.125037, 0.12655, 0.127941, 0.128202, 0.128128, 0.128289, 0.128182, 0.126421, 0.124782, 0.126937, 0.127909, 0.128193, 0.127853, 0.128109, 0.128357, 0.127357, 0.124863, 0.127537, 0.128117, 0.127876, 0.127863, 0.128105, 0.127932], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	5
        Additions: 		5856
        Multiplications: 	1740
        Divisions: 		0
        Logical: 		0
        Reads: 			8915
        Writes: 		949
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest18.exe __orio_perftest18.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest18.exe  
Program Test Output: 
{'[0, 3, 6, 2, 2, 5, 10, 27, 0, 27, 0, 0, 0]' : 0.21757}
{'[0, 3, 6, 2, 2, 5, 10, 27, 0, 27, 0, 0, 0]' : 0.217023}
{'[0, 3, 6, 2, 2, 5, 10, 27, 0, 27, 0, 0, 0]' : 0.1991}
{'[0, 3, 6, 2, 2, 5, 10, 27, 0, 27, 0, 0, 0]' : 0.197964}
{'[0, 3, 6, 2, 2, 5, 10, 27, 0, 27, 0, 0, 0]' : 0.195715}
{'[0, 3, 6, 2, 2, 5, 10, 27, 0, 27, 0, 0, 0]' : 0.194633}
{'[0, 3, 6, 2, 2, 5, 10, 27, 0, 27, 0, 0, 0]' : 0.19783}
{'[0, 3, 6, 2, 2, 5, 10, 27, 0, 27, 0, 0, 0]' : 0.198205}
{'[0, 3, 6, 2, 2, 5, 10, 27, 0, 27, 0, 0, 0]' : 0.19836}
{'[0, 3, 6, 2, 2, 5, 10, 27, 0, 27, 0, 0, 0]' : 0.196511}
{'[0, 3, 6, 2, 2, 5, 10, 27, 0, 27, 0, 0, 0]' : 0.194599}
{'[0, 3, 6, 2, 2, 5, 10, 27, 0, 27, 0, 0, 0]' : 0.193682}
{'[0, 3, 6, 2, 2, 5, 10, 27, 0, 27, 0, 0, 0]' : 0.193536}
{'[0, 3, 6, 2, 2, 5, 10, 27, 0, 27, 0, 0, 0]' : 0.19384}
{'[0, 3, 6, 2, 2, 5, 10, 27, 0, 27, 0, 0, 0]' : 0.193701}
{'[0, 3, 6, 2, 2, 5, 10, 27, 0, 27, 0, 0, 0]' : 0.189521}
{'[0, 3, 6, 2, 2, 5, 10, 27, 0, 27, 0, 0, 0]' : 0.194195}
{'[0, 3, 6, 2, 2, 5, 10, 27, 0, 27, 0, 0, 0]' : 0.193421}
{'[0, 3, 6, 2, 2, 5, 10, 27, 0, 27, 0, 0, 0]' : 0.194153}
{'[0, 3, 6, 2, 2, 5, 10, 27, 0, 27, 0, 0, 0]' : 0.193565}
{'[0, 3, 6, 2, 2, 5, 10, 27, 0, 27, 0, 0, 0]' : 0.188674}
{'[0, 3, 6, 2, 2, 5, 10, 27, 0, 27, 0, 0, 0]' : 0.192989}
{'[0, 3, 6, 2, 2, 5, 10, 27, 0, 27, 0, 0, 0]' : 0.19378}
{'[0, 3, 6, 2, 2, 5, 10, 27, 0, 27, 0, 0, 0]' : 0.194067}
{'[0, 3, 6, 2, 2, 5, 10, 27, 0, 27, 0, 0, 0]' : 0.193462}
{'[0, 3, 6, 2, 2, 5, 10, 27, 0, 27, 0, 0, 0]' : 0.193737}
{'[0, 3, 6, 2, 2, 5, 10, 27, 0, 27, 0, 0, 0]' : 0.193682}
{'[0, 3, 6, 2, 2, 5, 10, 27, 0, 27, 0, 0, 0]' : 0.193919}
{'[0, 3, 6, 2, 2, 5, 10, 27, 0, 27, 0, 0, 0]' : 0.193911}
{'[0, 3, 6, 2, 2, 5, 10, 27, 0, 27, 0, 0, 0]' : 0.193756}

out:
 ["{'[0, 3, 6, 2, 2, 5, 10, 27, 0, 27, 0, 0, 0]' : 0.21757}", "{'[0, 3, 6, 2, 2, 5, 10, 27, 0, 27, 0, 0, 0]' : 0.217023}", "{'[0, 3, 6, 2, 2, 5, 10, 27, 0, 27, 0, 0, 0]' : 0.1991}", "{'[0, 3, 6, 2, 2, 5, 10, 27, 0, 27, 0, 0, 0]' : 0.197964}", "{'[0, 3, 6, 2, 2, 5, 10, 27, 0, 27, 0, 0, 0]' : 0.195715}", "{'[0, 3, 6, 2, 2, 5, 10, 27, 0, 27, 0, 0, 0]' : 0.194633}", "{'[0, 3, 6, 2, 2, 5, 10, 27, 0, 27, 0, 0, 0]' : 0.19783}", "{'[0, 3, 6, 2, 2, 5, 10, 27, 0, 27, 0, 0, 0]' : 0.198205}", "{'[0, 3, 6, 2, 2, 5, 10, 27, 0, 27, 0, 0, 0]' : 0.19836}", "{'[0, 3, 6, 2, 2, 5, 10, 27, 0, 27, 0, 0, 0]' : 0.196511}", "{'[0, 3, 6, 2, 2, 5, 10, 27, 0, 27, 0, 0, 0]' : 0.194599}", "{'[0, 3, 6, 2, 2, 5, 10, 27, 0, 27, 0, 0, 0]' : 0.193682}", "{'[0, 3, 6, 2, 2, 5, 10, 27, 0, 27, 0, 0, 0]' : 0.193536}", "{'[0, 3, 6, 2, 2, 5, 10, 27, 0, 27, 0, 0, 0]' : 0.19384}", "{'[0, 3, 6, 2, 2, 5, 10, 27, 0, 27, 0, 0, 0]' : 0.193701}", "{'[0, 3, 6, 2, 2, 5, 10, 27, 0, 27, 0, 0, 0]' : 0.189521}", "{'[0, 3, 6, 2, 2, 5, 10, 27, 0, 27, 0, 0, 0]' : 0.194195}", "{'[0, 3, 6, 2, 2, 5, 10, 27, 0, 27, 0, 0, 0]' : 0.193421}", "{'[0, 3, 6, 2, 2, 5, 10, 27, 0, 27, 0, 0, 0]' : 0.194153}", "{'[0, 3, 6, 2, 2, 5, 10, 27, 0, 27, 0, 0, 0]' : 0.193565}", "{'[0, 3, 6, 2, 2, 5, 10, 27, 0, 27, 0, 0, 0]' : 0.188674}", "{'[0, 3, 6, 2, 2, 5, 10, 27, 0, 27, 0, 0, 0]' : 0.192989}", "{'[0, 3, 6, 2, 2, 5, 10, 27, 0, 27, 0, 0, 0]' : 0.19378}", "{'[0, 3, 6, 2, 2, 5, 10, 27, 0, 27, 0, 0, 0]' : 0.194067}", "{'[0, 3, 6, 2, 2, 5, 10, 27, 0, 27, 0, 0, 0]' : 0.193462}", "{'[0, 3, 6, 2, 2, 5, 10, 27, 0, 27, 0, 0, 0]' : 0.193737}", "{'[0, 3, 6, 2, 2, 5, 10, 27, 0, 27, 0, 0, 0]' : 0.193682}", "{'[0, 3, 6, 2, 2, 5, 10, 27, 0, 27, 0, 0, 0]' : 0.193919}", "{'[0, 3, 6, 2, 2, 5, 10, 27, 0, 27, 0, 0, 0]' : 0.193911}", "{'[0, 3, 6, 2, 2, 5, 10, 27, 0, 27, 0, 0, 0]' : 0.193756}"]
returning from 'run': {'[0, 3, 6, 2, 2, 5, 10, 27, 0, 27, 0, 0, 0]': ([0.21757, 0.217023, 0.1991, 0.197964, 0.195715, 0.194633, 0.19783, 0.198205, 0.19836, 0.196511, 0.194599, 0.193682, 0.193536, 0.19384, 0.193701, 0.189521, 0.194195, 0.193421, 0.194153, 0.193565, 0.188674, 0.192989, 0.19378, 0.194067, 0.193462, 0.193737, 0.193682, 0.193919, 0.193911, 0.193756], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 3, 6, 2, 2, 5, 10, 27, 0, 27, 0, 0, 0]': ([0.21757, 0.217023, 0.1991, 0.197964, 0.195715, 0.194633, 0.19783, 0.198205, 0.19836, 0.196511, 0.194599, 0.193682, 0.193536, 0.19384, 0.193701, 0.189521, 0.194195, 0.193421, 0.194153, 0.193565, 0.188674, 0.192989, 0.19378, 0.194067, 0.193462, 0.193737, 0.193682, 0.193919, 0.193911, 0.193756], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	78
        Max loop nest depth: 	6
        Additions: 		1525
        Multiplications: 	496
        Divisions: 		0
        Logical: 		0
        Reads: 			3046
        Writes: 		448
        Comparisons:		78
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest19.exe __orio_perftest19.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest19.exe  
Program Test Output: 
{'[4, 1, 0, 5, 5, 0, 11, 28, 0, 1, 2, 0, 0]' : 0.232118}
{'[4, 1, 0, 5, 5, 0, 11, 28, 0, 1, 2, 0, 0]' : 0.229047}
{'[4, 1, 0, 5, 5, 0, 11, 28, 0, 1, 2, 0, 0]' : 0.212699}
{'[4, 1, 0, 5, 5, 0, 11, 28, 0, 1, 2, 0, 0]' : 0.21278}
{'[4, 1, 0, 5, 5, 0, 11, 28, 0, 1, 2, 0, 0]' : 0.213192}
{'[4, 1, 0, 5, 5, 0, 11, 28, 0, 1, 2, 0, 0]' : 0.212944}
{'[4, 1, 0, 5, 5, 0, 11, 28, 0, 1, 2, 0, 0]' : 0.212273}
{'[4, 1, 0, 5, 5, 0, 11, 28, 0, 1, 2, 0, 0]' : 0.206862}
{'[4, 1, 0, 5, 5, 0, 11, 28, 0, 1, 2, 0, 0]' : 0.208842}
{'[4, 1, 0, 5, 5, 0, 11, 28, 0, 1, 2, 0, 0]' : 0.208055}
{'[4, 1, 0, 5, 5, 0, 11, 28, 0, 1, 2, 0, 0]' : 0.213441}
{'[4, 1, 0, 5, 5, 0, 11, 28, 0, 1, 2, 0, 0]' : 0.208731}
{'[4, 1, 0, 5, 5, 0, 11, 28, 0, 1, 2, 0, 0]' : 0.209491}
{'[4, 1, 0, 5, 5, 0, 11, 28, 0, 1, 2, 0, 0]' : 0.207823}
{'[4, 1, 0, 5, 5, 0, 11, 28, 0, 1, 2, 0, 0]' : 0.20946}
{'[4, 1, 0, 5, 5, 0, 11, 28, 0, 1, 2, 0, 0]' : 0.213054}
{'[4, 1, 0, 5, 5, 0, 11, 28, 0, 1, 2, 0, 0]' : 0.212944}
{'[4, 1, 0, 5, 5, 0, 11, 28, 0, 1, 2, 0, 0]' : 0.213379}
{'[4, 1, 0, 5, 5, 0, 11, 28, 0, 1, 2, 0, 0]' : 0.212804}
{'[4, 1, 0, 5, 5, 0, 11, 28, 0, 1, 2, 0, 0]' : 0.212431}
{'[4, 1, 0, 5, 5, 0, 11, 28, 0, 1, 2, 0, 0]' : 0.212718}
{'[4, 1, 0, 5, 5, 0, 11, 28, 0, 1, 2, 0, 0]' : 0.212779}
{'[4, 1, 0, 5, 5, 0, 11, 28, 0, 1, 2, 0, 0]' : 0.21325}
{'[4, 1, 0, 5, 5, 0, 11, 28, 0, 1, 2, 0, 0]' : 0.212687}
{'[4, 1, 0, 5, 5, 0, 11, 28, 0, 1, 2, 0, 0]' : 0.212276}
{'[4, 1, 0, 5, 5, 0, 11, 28, 0, 1, 2, 0, 0]' : 0.212045}
{'[4, 1, 0, 5, 5, 0, 11, 28, 0, 1, 2, 0, 0]' : 0.207014}
{'[4, 1, 0, 5, 5, 0, 11, 28, 0, 1, 2, 0, 0]' : 0.208477}
{'[4, 1, 0, 5, 5, 0, 11, 28, 0, 1, 2, 0, 0]' : 0.208894}
{'[4, 1, 0, 5, 5, 0, 11, 28, 0, 1, 2, 0, 0]' : 0.213143}

out:
 ["{'[4, 1, 0, 5, 5, 0, 11, 28, 0, 1, 2, 0, 0]' : 0.232118}", "{'[4, 1, 0, 5, 5, 0, 11, 28, 0, 1, 2, 0, 0]' : 0.229047}", "{'[4, 1, 0, 5, 5, 0, 11, 28, 0, 1, 2, 0, 0]' : 0.212699}", "{'[4, 1, 0, 5, 5, 0, 11, 28, 0, 1, 2, 0, 0]' : 0.21278}", "{'[4, 1, 0, 5, 5, 0, 11, 28, 0, 1, 2, 0, 0]' : 0.213192}", "{'[4, 1, 0, 5, 5, 0, 11, 28, 0, 1, 2, 0, 0]' : 0.212944}", "{'[4, 1, 0, 5, 5, 0, 11, 28, 0, 1, 2, 0, 0]' : 0.212273}", "{'[4, 1, 0, 5, 5, 0, 11, 28, 0, 1, 2, 0, 0]' : 0.206862}", "{'[4, 1, 0, 5, 5, 0, 11, 28, 0, 1, 2, 0, 0]' : 0.208842}", "{'[4, 1, 0, 5, 5, 0, 11, 28, 0, 1, 2, 0, 0]' : 0.208055}", "{'[4, 1, 0, 5, 5, 0, 11, 28, 0, 1, 2, 0, 0]' : 0.213441}", "{'[4, 1, 0, 5, 5, 0, 11, 28, 0, 1, 2, 0, 0]' : 0.208731}", "{'[4, 1, 0, 5, 5, 0, 11, 28, 0, 1, 2, 0, 0]' : 0.209491}", "{'[4, 1, 0, 5, 5, 0, 11, 28, 0, 1, 2, 0, 0]' : 0.207823}", "{'[4, 1, 0, 5, 5, 0, 11, 28, 0, 1, 2, 0, 0]' : 0.20946}", "{'[4, 1, 0, 5, 5, 0, 11, 28, 0, 1, 2, 0, 0]' : 0.213054}", "{'[4, 1, 0, 5, 5, 0, 11, 28, 0, 1, 2, 0, 0]' : 0.212944}", "{'[4, 1, 0, 5, 5, 0, 11, 28, 0, 1, 2, 0, 0]' : 0.213379}", "{'[4, 1, 0, 5, 5, 0, 11, 28, 0, 1, 2, 0, 0]' : 0.212804}", "{'[4, 1, 0, 5, 5, 0, 11, 28, 0, 1, 2, 0, 0]' : 0.212431}", "{'[4, 1, 0, 5, 5, 0, 11, 28, 0, 1, 2, 0, 0]' : 0.212718}", "{'[4, 1, 0, 5, 5, 0, 11, 28, 0, 1, 2, 0, 0]' : 0.212779}", "{'[4, 1, 0, 5, 5, 0, 11, 28, 0, 1, 2, 0, 0]' : 0.21325}", "{'[4, 1, 0, 5, 5, 0, 11, 28, 0, 1, 2, 0, 0]' : 0.212687}", "{'[4, 1, 0, 5, 5, 0, 11, 28, 0, 1, 2, 0, 0]' : 0.212276}", "{'[4, 1, 0, 5, 5, 0, 11, 28, 0, 1, 2, 0, 0]' : 0.212045}", "{'[4, 1, 0, 5, 5, 0, 11, 28, 0, 1, 2, 0, 0]' : 0.207014}", "{'[4, 1, 0, 5, 5, 0, 11, 28, 0, 1, 2, 0, 0]' : 0.208477}", "{'[4, 1, 0, 5, 5, 0, 11, 28, 0, 1, 2, 0, 0]' : 0.208894}", "{'[4, 1, 0, 5, 5, 0, 11, 28, 0, 1, 2, 0, 0]' : 0.213143}"]
returning from 'run': {'[4, 1, 0, 5, 5, 0, 11, 28, 0, 1, 2, 0, 0]': ([0.232118, 0.229047, 0.212699, 0.21278, 0.213192, 0.212944, 0.212273, 0.206862, 0.208842, 0.208055, 0.213441, 0.208731, 0.209491, 0.207823, 0.20946, 0.213054, 0.212944, 0.213379, 0.212804, 0.212431, 0.212718, 0.212779, 0.21325, 0.212687, 0.212276, 0.212045, 0.207014, 0.208477, 0.208894, 0.213143], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 1, 0, 5, 5, 0, 11, 28, 0, 1, 2, 0, 0]': ([0.232118, 0.229047, 0.212699, 0.21278, 0.213192, 0.212944, 0.212273, 0.206862, 0.208842, 0.208055, 0.213441, 0.208731, 0.209491, 0.207823, 0.20946, 0.213054, 0.212944, 0.213379, 0.212804, 0.212431, 0.212718, 0.212779, 0.21325, 0.212687, 0.212276, 0.212045, 0.207014, 0.208477, 0.208894, 0.213143], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	5
        Additions: 		1464
        Multiplications: 	442
        Divisions: 		0
        Logical: 		0
        Reads: 			2445
        Writes: 		307
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest20.exe __orio_perftest20.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest20.exe  
Program Test Output: 
{'[6, 6, 5, 4, 6, 4, 29, 11, 6, 0, 0, 0, 1]' : 0.123927}
{'[6, 6, 5, 4, 6, 4, 29, 11, 6, 0, 0, 0, 1]' : 0.123646}
{'[6, 6, 5, 4, 6, 4, 29, 11, 6, 0, 0, 0, 1]' : 0.123331}
{'[6, 6, 5, 4, 6, 4, 29, 11, 6, 0, 0, 0, 1]' : 0.113815}
{'[6, 6, 5, 4, 6, 4, 29, 11, 6, 0, 0, 0, 1]' : 0.112913}
{'[6, 6, 5, 4, 6, 4, 29, 11, 6, 0, 0, 0, 1]' : 0.112972}
{'[6, 6, 5, 4, 6, 4, 29, 11, 6, 0, 0, 0, 1]' : 0.112753}
{'[6, 6, 5, 4, 6, 4, 29, 11, 6, 0, 0, 0, 1]' : 0.112337}
{'[6, 6, 5, 4, 6, 4, 29, 11, 6, 0, 0, 0, 1]' : 0.109775}
{'[6, 6, 5, 4, 6, 4, 29, 11, 6, 0, 0, 0, 1]' : 0.113609}
{'[6, 6, 5, 4, 6, 4, 29, 11, 6, 0, 0, 0, 1]' : 0.113521}
{'[6, 6, 5, 4, 6, 4, 29, 11, 6, 0, 0, 0, 1]' : 0.113726}
{'[6, 6, 5, 4, 6, 4, 29, 11, 6, 0, 0, 0, 1]' : 0.113427}
{'[6, 6, 5, 4, 6, 4, 29, 11, 6, 0, 0, 0, 1]' : 0.113998}
{'[6, 6, 5, 4, 6, 4, 29, 11, 6, 0, 0, 0, 1]' : 0.113502}
{'[6, 6, 5, 4, 6, 4, 29, 11, 6, 0, 0, 0, 1]' : 0.113603}
{'[6, 6, 5, 4, 6, 4, 29, 11, 6, 0, 0, 0, 1]' : 0.1134}
{'[6, 6, 5, 4, 6, 4, 29, 11, 6, 0, 0, 0, 1]' : 0.113625}
{'[6, 6, 5, 4, 6, 4, 29, 11, 6, 0, 0, 0, 1]' : 0.11333}
{'[6, 6, 5, 4, 6, 4, 29, 11, 6, 0, 0, 0, 1]' : 0.113528}
{'[6, 6, 5, 4, 6, 4, 29, 11, 6, 0, 0, 0, 1]' : 0.113474}
{'[6, 6, 5, 4, 6, 4, 29, 11, 6, 0, 0, 0, 1]' : 0.113691}
{'[6, 6, 5, 4, 6, 4, 29, 11, 6, 0, 0, 0, 1]' : 0.113638}
{'[6, 6, 5, 4, 6, 4, 29, 11, 6, 0, 0, 0, 1]' : 0.113858}
{'[6, 6, 5, 4, 6, 4, 29, 11, 6, 0, 0, 0, 1]' : 0.113343}
{'[6, 6, 5, 4, 6, 4, 29, 11, 6, 0, 0, 0, 1]' : 0.112185}
{'[6, 6, 5, 4, 6, 4, 29, 11, 6, 0, 0, 0, 1]' : 0.111351}
{'[6, 6, 5, 4, 6, 4, 29, 11, 6, 0, 0, 0, 1]' : 0.111385}
{'[6, 6, 5, 4, 6, 4, 29, 11, 6, 0, 0, 0, 1]' : 0.111072}
{'[6, 6, 5, 4, 6, 4, 29, 11, 6, 0, 0, 0, 1]' : 0.111356}

out:
 ["{'[6, 6, 5, 4, 6, 4, 29, 11, 6, 0, 0, 0, 1]' : 0.123927}", "{'[6, 6, 5, 4, 6, 4, 29, 11, 6, 0, 0, 0, 1]' : 0.123646}", "{'[6, 6, 5, 4, 6, 4, 29, 11, 6, 0, 0, 0, 1]' : 0.123331}", "{'[6, 6, 5, 4, 6, 4, 29, 11, 6, 0, 0, 0, 1]' : 0.113815}", "{'[6, 6, 5, 4, 6, 4, 29, 11, 6, 0, 0, 0, 1]' : 0.112913}", "{'[6, 6, 5, 4, 6, 4, 29, 11, 6, 0, 0, 0, 1]' : 0.112972}", "{'[6, 6, 5, 4, 6, 4, 29, 11, 6, 0, 0, 0, 1]' : 0.112753}", "{'[6, 6, 5, 4, 6, 4, 29, 11, 6, 0, 0, 0, 1]' : 0.112337}", "{'[6, 6, 5, 4, 6, 4, 29, 11, 6, 0, 0, 0, 1]' : 0.109775}", "{'[6, 6, 5, 4, 6, 4, 29, 11, 6, 0, 0, 0, 1]' : 0.113609}", "{'[6, 6, 5, 4, 6, 4, 29, 11, 6, 0, 0, 0, 1]' : 0.113521}", "{'[6, 6, 5, 4, 6, 4, 29, 11, 6, 0, 0, 0, 1]' : 0.113726}", "{'[6, 6, 5, 4, 6, 4, 29, 11, 6, 0, 0, 0, 1]' : 0.113427}", "{'[6, 6, 5, 4, 6, 4, 29, 11, 6, 0, 0, 0, 1]' : 0.113998}", "{'[6, 6, 5, 4, 6, 4, 29, 11, 6, 0, 0, 0, 1]' : 0.113502}", "{'[6, 6, 5, 4, 6, 4, 29, 11, 6, 0, 0, 0, 1]' : 0.113603}", "{'[6, 6, 5, 4, 6, 4, 29, 11, 6, 0, 0, 0, 1]' : 0.1134}", "{'[6, 6, 5, 4, 6, 4, 29, 11, 6, 0, 0, 0, 1]' : 0.113625}", "{'[6, 6, 5, 4, 6, 4, 29, 11, 6, 0, 0, 0, 1]' : 0.11333}", "{'[6, 6, 5, 4, 6, 4, 29, 11, 6, 0, 0, 0, 1]' : 0.113528}", "{'[6, 6, 5, 4, 6, 4, 29, 11, 6, 0, 0, 0, 1]' : 0.113474}", "{'[6, 6, 5, 4, 6, 4, 29, 11, 6, 0, 0, 0, 1]' : 0.113691}", "{'[6, 6, 5, 4, 6, 4, 29, 11, 6, 0, 0, 0, 1]' : 0.113638}", "{'[6, 6, 5, 4, 6, 4, 29, 11, 6, 0, 0, 0, 1]' : 0.113858}", "{'[6, 6, 5, 4, 6, 4, 29, 11, 6, 0, 0, 0, 1]' : 0.113343}", "{'[6, 6, 5, 4, 6, 4, 29, 11, 6, 0, 0, 0, 1]' : 0.112185}", "{'[6, 6, 5, 4, 6, 4, 29, 11, 6, 0, 0, 0, 1]' : 0.111351}", "{'[6, 6, 5, 4, 6, 4, 29, 11, 6, 0, 0, 0, 1]' : 0.111385}", "{'[6, 6, 5, 4, 6, 4, 29, 11, 6, 0, 0, 0, 1]' : 0.111072}", "{'[6, 6, 5, 4, 6, 4, 29, 11, 6, 0, 0, 0, 1]' : 0.111356}"]
returning from 'run': {'[6, 6, 5, 4, 6, 4, 29, 11, 6, 0, 0, 0, 1]': ([0.123927, 0.123646, 0.123331, 0.113815, 0.112913, 0.112972, 0.112753, 0.112337, 0.109775, 0.113609, 0.113521, 0.113726, 0.113427, 0.113998, 0.113502, 0.113603, 0.1134, 0.113625, 0.11333, 0.113528, 0.113474, 0.113691, 0.113638, 0.113858, 0.113343, 0.112185, 0.111351, 0.111385, 0.111072, 0.111356], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 5, 4, 6, 4, 29, 11, 6, 0, 0, 0, 1]': ([0.123927, 0.123646, 0.123331, 0.113815, 0.112913, 0.112972, 0.112753, 0.112337, 0.109775, 0.113609, 0.113521, 0.113726, 0.113427, 0.113998, 0.113502, 0.113603, 0.1134, 0.113625, 0.11333, 0.113528, 0.113474, 0.113691, 0.113638, 0.113858, 0.113343, 0.112185, 0.111351, 0.111385, 0.111072, 0.111356], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	5
        Additions: 		3497
        Multiplications: 	1080
        Divisions: 		0
        Logical: 		0
        Reads: 			5575
        Writes: 		596
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest21.exe __orio_perftest21.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest21.exe  
Program Test Output: 
{'[4, 5, 4, 0, 6, 4, 3, 7, 25, 0, 0, 0, 2]' : 0.128464}
{'[4, 5, 4, 0, 6, 4, 3, 7, 25, 0, 0, 0, 2]' : 0.128861}
{'[4, 5, 4, 0, 6, 4, 3, 7, 25, 0, 0, 0, 2]' : 0.1284}
{'[4, 5, 4, 0, 6, 4, 3, 7, 25, 0, 0, 0, 2]' : 0.128499}
{'[4, 5, 4, 0, 6, 4, 3, 7, 25, 0, 0, 0, 2]' : 0.128431}
{'[4, 5, 4, 0, 6, 4, 3, 7, 25, 0, 0, 0, 2]' : 0.128539}
{'[4, 5, 4, 0, 6, 4, 3, 7, 25, 0, 0, 0, 2]' : 0.128722}
{'[4, 5, 4, 0, 6, 4, 3, 7, 25, 0, 0, 0, 2]' : 0.128427}
{'[4, 5, 4, 0, 6, 4, 3, 7, 25, 0, 0, 0, 2]' : 0.128422}
{'[4, 5, 4, 0, 6, 4, 3, 7, 25, 0, 0, 0, 2]' : 0.12862}
{'[4, 5, 4, 0, 6, 4, 3, 7, 25, 0, 0, 0, 2]' : 0.128704}
{'[4, 5, 4, 0, 6, 4, 3, 7, 25, 0, 0, 0, 2]' : 0.128391}
{'[4, 5, 4, 0, 6, 4, 3, 7, 25, 0, 0, 0, 2]' : 0.128419}
{'[4, 5, 4, 0, 6, 4, 3, 7, 25, 0, 0, 0, 2]' : 0.128497}
{'[4, 5, 4, 0, 6, 4, 3, 7, 25, 0, 0, 0, 2]' : 0.1284}
{'[4, 5, 4, 0, 6, 4, 3, 7, 25, 0, 0, 0, 2]' : 0.128349}
{'[4, 5, 4, 0, 6, 4, 3, 7, 25, 0, 0, 0, 2]' : 0.128448}
{'[4, 5, 4, 0, 6, 4, 3, 7, 25, 0, 0, 0, 2]' : 0.128585}
{'[4, 5, 4, 0, 6, 4, 3, 7, 25, 0, 0, 0, 2]' : 0.129176}
{'[4, 5, 4, 0, 6, 4, 3, 7, 25, 0, 0, 0, 2]' : 0.129065}
{'[4, 5, 4, 0, 6, 4, 3, 7, 25, 0, 0, 0, 2]' : 0.128994}
{'[4, 5, 4, 0, 6, 4, 3, 7, 25, 0, 0, 0, 2]' : 0.129149}
{'[4, 5, 4, 0, 6, 4, 3, 7, 25, 0, 0, 0, 2]' : 0.128836}
{'[4, 5, 4, 0, 6, 4, 3, 7, 25, 0, 0, 0, 2]' : 0.128403}
{'[4, 5, 4, 0, 6, 4, 3, 7, 25, 0, 0, 0, 2]' : 0.128427}
{'[4, 5, 4, 0, 6, 4, 3, 7, 25, 0, 0, 0, 2]' : 0.129046}
{'[4, 5, 4, 0, 6, 4, 3, 7, 25, 0, 0, 0, 2]' : 0.128426}
{'[4, 5, 4, 0, 6, 4, 3, 7, 25, 0, 0, 0, 2]' : 0.128641}
{'[4, 5, 4, 0, 6, 4, 3, 7, 25, 0, 0, 0, 2]' : 0.128488}
{'[4, 5, 4, 0, 6, 4, 3, 7, 25, 0, 0, 0, 2]' : 0.128489}

out:
 ["{'[4, 5, 4, 0, 6, 4, 3, 7, 25, 0, 0, 0, 2]' : 0.128464}", "{'[4, 5, 4, 0, 6, 4, 3, 7, 25, 0, 0, 0, 2]' : 0.128861}", "{'[4, 5, 4, 0, 6, 4, 3, 7, 25, 0, 0, 0, 2]' : 0.1284}", "{'[4, 5, 4, 0, 6, 4, 3, 7, 25, 0, 0, 0, 2]' : 0.128499}", "{'[4, 5, 4, 0, 6, 4, 3, 7, 25, 0, 0, 0, 2]' : 0.128431}", "{'[4, 5, 4, 0, 6, 4, 3, 7, 25, 0, 0, 0, 2]' : 0.128539}", "{'[4, 5, 4, 0, 6, 4, 3, 7, 25, 0, 0, 0, 2]' : 0.128722}", "{'[4, 5, 4, 0, 6, 4, 3, 7, 25, 0, 0, 0, 2]' : 0.128427}", "{'[4, 5, 4, 0, 6, 4, 3, 7, 25, 0, 0, 0, 2]' : 0.128422}", "{'[4, 5, 4, 0, 6, 4, 3, 7, 25, 0, 0, 0, 2]' : 0.12862}", "{'[4, 5, 4, 0, 6, 4, 3, 7, 25, 0, 0, 0, 2]' : 0.128704}", "{'[4, 5, 4, 0, 6, 4, 3, 7, 25, 0, 0, 0, 2]' : 0.128391}", "{'[4, 5, 4, 0, 6, 4, 3, 7, 25, 0, 0, 0, 2]' : 0.128419}", "{'[4, 5, 4, 0, 6, 4, 3, 7, 25, 0, 0, 0, 2]' : 0.128497}", "{'[4, 5, 4, 0, 6, 4, 3, 7, 25, 0, 0, 0, 2]' : 0.1284}", "{'[4, 5, 4, 0, 6, 4, 3, 7, 25, 0, 0, 0, 2]' : 0.128349}", "{'[4, 5, 4, 0, 6, 4, 3, 7, 25, 0, 0, 0, 2]' : 0.128448}", "{'[4, 5, 4, 0, 6, 4, 3, 7, 25, 0, 0, 0, 2]' : 0.128585}", "{'[4, 5, 4, 0, 6, 4, 3, 7, 25, 0, 0, 0, 2]' : 0.129176}", "{'[4, 5, 4, 0, 6, 4, 3, 7, 25, 0, 0, 0, 2]' : 0.129065}", "{'[4, 5, 4, 0, 6, 4, 3, 7, 25, 0, 0, 0, 2]' : 0.128994}", "{'[4, 5, 4, 0, 6, 4, 3, 7, 25, 0, 0, 0, 2]' : 0.129149}", "{'[4, 5, 4, 0, 6, 4, 3, 7, 25, 0, 0, 0, 2]' : 0.128836}", "{'[4, 5, 4, 0, 6, 4, 3, 7, 25, 0, 0, 0, 2]' : 0.128403}", "{'[4, 5, 4, 0, 6, 4, 3, 7, 25, 0, 0, 0, 2]' : 0.128427}", "{'[4, 5, 4, 0, 6, 4, 3, 7, 25, 0, 0, 0, 2]' : 0.129046}", "{'[4, 5, 4, 0, 6, 4, 3, 7, 25, 0, 0, 0, 2]' : 0.128426}", "{'[4, 5, 4, 0, 6, 4, 3, 7, 25, 0, 0, 0, 2]' : 0.128641}", "{'[4, 5, 4, 0, 6, 4, 3, 7, 25, 0, 0, 0, 2]' : 0.128488}", "{'[4, 5, 4, 0, 6, 4, 3, 7, 25, 0, 0, 0, 2]' : 0.128489}"]
returning from 'run': {'[4, 5, 4, 0, 6, 4, 3, 7, 25, 0, 0, 0, 2]': ([0.128464, 0.128861, 0.1284, 0.128499, 0.128431, 0.128539, 0.128722, 0.128427, 0.128422, 0.12862, 0.128704, 0.128391, 0.128419, 0.128497, 0.1284, 0.128349, 0.128448, 0.128585, 0.129176, 0.129065, 0.128994, 0.129149, 0.128836, 0.128403, 0.128427, 0.129046, 0.128426, 0.128641, 0.128488, 0.128489], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 5, 4, 0, 6, 4, 3, 7, 25, 0, 0, 0, 2]': ([0.128464, 0.128861, 0.1284, 0.128499, 0.128431, 0.128539, 0.128722, 0.128427, 0.128422, 0.12862, 0.128704, 0.128391, 0.128419, 0.128497, 0.1284, 0.128349, 0.128448, 0.128585, 0.129176, 0.129065, 0.128994, 0.129149, 0.128836, 0.128403, 0.128427, 0.129046, 0.128426, 0.128641, 0.128488, 0.128489], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	78
        Max loop nest depth: 	6
        Additions: 		13176
        Multiplications: 	3782
        Divisions: 		0
        Logical: 		0
        Reads: 			19640
        Writes: 		2081
        Comparisons:		78
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest22.exe __orio_perftest22.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest22.exe  
Program Test Output: 
{'[5, 0, 2, 4, 2, 1, 1, 29, 26, 0, 0, 2, 0]' : 0.282644}
{'[5, 0, 2, 4, 2, 1, 1, 29, 26, 0, 0, 2, 0]' : 0.273927}
{'[5, 0, 2, 4, 2, 1, 1, 29, 26, 0, 0, 2, 0]' : 0.256278}
{'[5, 0, 2, 4, 2, 1, 1, 29, 26, 0, 0, 2, 0]' : 0.257665}
{'[5, 0, 2, 4, 2, 1, 1, 29, 26, 0, 0, 2, 0]' : 0.257527}
{'[5, 0, 2, 4, 2, 1, 1, 29, 26, 0, 0, 2, 0]' : 0.254499}
{'[5, 0, 2, 4, 2, 1, 1, 29, 26, 0, 0, 2, 0]' : 0.253527}
{'[5, 0, 2, 4, 2, 1, 1, 29, 26, 0, 0, 2, 0]' : 0.257369}
{'[5, 0, 2, 4, 2, 1, 1, 29, 26, 0, 0, 2, 0]' : 0.256964}
{'[5, 0, 2, 4, 2, 1, 1, 29, 26, 0, 0, 2, 0]' : 0.256988}
{'[5, 0, 2, 4, 2, 1, 1, 29, 26, 0, 0, 2, 0]' : 0.256936}
{'[5, 0, 2, 4, 2, 1, 1, 29, 26, 0, 0, 2, 0]' : 0.259975}
{'[5, 0, 2, 4, 2, 1, 1, 29, 26, 0, 0, 2, 0]' : 0.252097}
{'[5, 0, 2, 4, 2, 1, 1, 29, 26, 0, 0, 2, 0]' : 0.255093}
{'[5, 0, 2, 4, 2, 1, 1, 29, 26, 0, 0, 2, 0]' : 0.254851}
{'[5, 0, 2, 4, 2, 1, 1, 29, 26, 0, 0, 2, 0]' : 0.259238}
{'[5, 0, 2, 4, 2, 1, 1, 29, 26, 0, 0, 2, 0]' : 0.253653}
{'[5, 0, 2, 4, 2, 1, 1, 29, 26, 0, 0, 2, 0]' : 0.253019}
{'[5, 0, 2, 4, 2, 1, 1, 29, 26, 0, 0, 2, 0]' : 0.251979}
{'[5, 0, 2, 4, 2, 1, 1, 29, 26, 0, 0, 2, 0]' : 0.25913}
{'[5, 0, 2, 4, 2, 1, 1, 29, 26, 0, 0, 2, 0]' : 0.25598}
{'[5, 0, 2, 4, 2, 1, 1, 29, 26, 0, 0, 2, 0]' : 0.253545}
{'[5, 0, 2, 4, 2, 1, 1, 29, 26, 0, 0, 2, 0]' : 0.258094}
{'[5, 0, 2, 4, 2, 1, 1, 29, 26, 0, 0, 2, 0]' : 0.254341}
{'[5, 0, 2, 4, 2, 1, 1, 29, 26, 0, 0, 2, 0]' : 0.256435}
{'[5, 0, 2, 4, 2, 1, 1, 29, 26, 0, 0, 2, 0]' : 0.258767}
{'[5, 0, 2, 4, 2, 1, 1, 29, 26, 0, 0, 2, 0]' : 0.262566}
{'[5, 0, 2, 4, 2, 1, 1, 29, 26, 0, 0, 2, 0]' : 0.256783}
{'[5, 0, 2, 4, 2, 1, 1, 29, 26, 0, 0, 2, 0]' : 0.257605}
{'[5, 0, 2, 4, 2, 1, 1, 29, 26, 0, 0, 2, 0]' : 0.257865}

out:
 ["{'[5, 0, 2, 4, 2, 1, 1, 29, 26, 0, 0, 2, 0]' : 0.282644}", "{'[5, 0, 2, 4, 2, 1, 1, 29, 26, 0, 0, 2, 0]' : 0.273927}", "{'[5, 0, 2, 4, 2, 1, 1, 29, 26, 0, 0, 2, 0]' : 0.256278}", "{'[5, 0, 2, 4, 2, 1, 1, 29, 26, 0, 0, 2, 0]' : 0.257665}", "{'[5, 0, 2, 4, 2, 1, 1, 29, 26, 0, 0, 2, 0]' : 0.257527}", "{'[5, 0, 2, 4, 2, 1, 1, 29, 26, 0, 0, 2, 0]' : 0.254499}", "{'[5, 0, 2, 4, 2, 1, 1, 29, 26, 0, 0, 2, 0]' : 0.253527}", "{'[5, 0, 2, 4, 2, 1, 1, 29, 26, 0, 0, 2, 0]' : 0.257369}", "{'[5, 0, 2, 4, 2, 1, 1, 29, 26, 0, 0, 2, 0]' : 0.256964}", "{'[5, 0, 2, 4, 2, 1, 1, 29, 26, 0, 0, 2, 0]' : 0.256988}", "{'[5, 0, 2, 4, 2, 1, 1, 29, 26, 0, 0, 2, 0]' : 0.256936}", "{'[5, 0, 2, 4, 2, 1, 1, 29, 26, 0, 0, 2, 0]' : 0.259975}", "{'[5, 0, 2, 4, 2, 1, 1, 29, 26, 0, 0, 2, 0]' : 0.252097}", "{'[5, 0, 2, 4, 2, 1, 1, 29, 26, 0, 0, 2, 0]' : 0.255093}", "{'[5, 0, 2, 4, 2, 1, 1, 29, 26, 0, 0, 2, 0]' : 0.254851}", "{'[5, 0, 2, 4, 2, 1, 1, 29, 26, 0, 0, 2, 0]' : 0.259238}", "{'[5, 0, 2, 4, 2, 1, 1, 29, 26, 0, 0, 2, 0]' : 0.253653}", "{'[5, 0, 2, 4, 2, 1, 1, 29, 26, 0, 0, 2, 0]' : 0.253019}", "{'[5, 0, 2, 4, 2, 1, 1, 29, 26, 0, 0, 2, 0]' : 0.251979}", "{'[5, 0, 2, 4, 2, 1, 1, 29, 26, 0, 0, 2, 0]' : 0.25913}", "{'[5, 0, 2, 4, 2, 1, 1, 29, 26, 0, 0, 2, 0]' : 0.25598}", "{'[5, 0, 2, 4, 2, 1, 1, 29, 26, 0, 0, 2, 0]' : 0.253545}", "{'[5, 0, 2, 4, 2, 1, 1, 29, 26, 0, 0, 2, 0]' : 0.258094}", "{'[5, 0, 2, 4, 2, 1, 1, 29, 26, 0, 0, 2, 0]' : 0.254341}", "{'[5, 0, 2, 4, 2, 1, 1, 29, 26, 0, 0, 2, 0]' : 0.256435}", "{'[5, 0, 2, 4, 2, 1, 1, 29, 26, 0, 0, 2, 0]' : 0.258767}", "{'[5, 0, 2, 4, 2, 1, 1, 29, 26, 0, 0, 2, 0]' : 0.262566}", "{'[5, 0, 2, 4, 2, 1, 1, 29, 26, 0, 0, 2, 0]' : 0.256783}", "{'[5, 0, 2, 4, 2, 1, 1, 29, 26, 0, 0, 2, 0]' : 0.257605}", "{'[5, 0, 2, 4, 2, 1, 1, 29, 26, 0, 0, 2, 0]' : 0.257865}"]
returning from 'run': {'[5, 0, 2, 4, 2, 1, 1, 29, 26, 0, 0, 2, 0]': ([0.282644, 0.273927, 0.256278, 0.257665, 0.257527, 0.254499, 0.253527, 0.257369, 0.256964, 0.256988, 0.256936, 0.259975, 0.252097, 0.255093, 0.254851, 0.259238, 0.253653, 0.253019, 0.251979, 0.25913, 0.25598, 0.253545, 0.258094, 0.254341, 0.256435, 0.258767, 0.262566, 0.256783, 0.257605, 0.257865], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 0, 2, 4, 2, 1, 1, 29, 26, 0, 0, 2, 0]': ([0.282644, 0.273927, 0.256278, 0.257665, 0.257527, 0.254499, 0.253527, 0.257369, 0.256964, 0.256988, 0.256936, 0.259975, 0.252097, 0.255093, 0.254851, 0.259238, 0.253653, 0.253019, 0.251979, 0.25913, 0.25598, 0.253545, 0.258094, 0.254341, 0.256435, 0.258767, 0.262566, 0.256783, 0.257605, 0.257865], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	5
        Additions: 		1688
        Multiplications: 	522
        Divisions: 		0
        Logical: 		0
        Reads: 			2817
        Writes: 		331
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest23.exe __orio_perftest23.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest23.exe  
Program Test Output: 
{'[2, 2, 0, 0, 2, 5, 24, 0, 14, 3, 1, 0, 1]' : 0.134243}
{'[2, 2, 0, 0, 2, 5, 24, 0, 14, 3, 1, 0, 1]' : 0.134347}
{'[2, 2, 0, 0, 2, 5, 24, 0, 14, 3, 1, 0, 1]' : 0.133495}
{'[2, 2, 0, 0, 2, 5, 24, 0, 14, 3, 1, 0, 1]' : 0.120384}
{'[2, 2, 0, 0, 2, 5, 24, 0, 14, 3, 1, 0, 1]' : 0.120109}
{'[2, 2, 0, 0, 2, 5, 24, 0, 14, 3, 1, 0, 1]' : 0.120311}
{'[2, 2, 0, 0, 2, 5, 24, 0, 14, 3, 1, 0, 1]' : 0.119957}
{'[2, 2, 0, 0, 2, 5, 24, 0, 14, 3, 1, 0, 1]' : 0.120159}
{'[2, 2, 0, 0, 2, 5, 24, 0, 14, 3, 1, 0, 1]' : 0.120161}
{'[2, 2, 0, 0, 2, 5, 24, 0, 14, 3, 1, 0, 1]' : 0.120895}
{'[2, 2, 0, 0, 2, 5, 24, 0, 14, 3, 1, 0, 1]' : 0.115047}
{'[2, 2, 0, 0, 2, 5, 24, 0, 14, 3, 1, 0, 1]' : 0.114185}
{'[2, 2, 0, 0, 2, 5, 24, 0, 14, 3, 1, 0, 1]' : 0.117572}
{'[2, 2, 0, 0, 2, 5, 24, 0, 14, 3, 1, 0, 1]' : 0.117721}
{'[2, 2, 0, 0, 2, 5, 24, 0, 14, 3, 1, 0, 1]' : 0.117369}
{'[2, 2, 0, 0, 2, 5, 24, 0, 14, 3, 1, 0, 1]' : 0.117508}
{'[2, 2, 0, 0, 2, 5, 24, 0, 14, 3, 1, 0, 1]' : 0.119969}
{'[2, 2, 0, 0, 2, 5, 24, 0, 14, 3, 1, 0, 1]' : 0.12105}
{'[2, 2, 0, 0, 2, 5, 24, 0, 14, 3, 1, 0, 1]' : 0.120552}
{'[2, 2, 0, 0, 2, 5, 24, 0, 14, 3, 1, 0, 1]' : 0.118825}
{'[2, 2, 0, 0, 2, 5, 24, 0, 14, 3, 1, 0, 1]' : 0.119539}
{'[2, 2, 0, 0, 2, 5, 24, 0, 14, 3, 1, 0, 1]' : 0.120908}
{'[2, 2, 0, 0, 2, 5, 24, 0, 14, 3, 1, 0, 1]' : 0.1206}
{'[2, 2, 0, 0, 2, 5, 24, 0, 14, 3, 1, 0, 1]' : 0.120735}
{'[2, 2, 0, 0, 2, 5, 24, 0, 14, 3, 1, 0, 1]' : 0.12067}
{'[2, 2, 0, 0, 2, 5, 24, 0, 14, 3, 1, 0, 1]' : 0.120886}
{'[2, 2, 0, 0, 2, 5, 24, 0, 14, 3, 1, 0, 1]' : 0.120533}
{'[2, 2, 0, 0, 2, 5, 24, 0, 14, 3, 1, 0, 1]' : 0.12075}
{'[2, 2, 0, 0, 2, 5, 24, 0, 14, 3, 1, 0, 1]' : 0.120347}
{'[2, 2, 0, 0, 2, 5, 24, 0, 14, 3, 1, 0, 1]' : 0.119112}

out:
 ["{'[2, 2, 0, 0, 2, 5, 24, 0, 14, 3, 1, 0, 1]' : 0.134243}", "{'[2, 2, 0, 0, 2, 5, 24, 0, 14, 3, 1, 0, 1]' : 0.134347}", "{'[2, 2, 0, 0, 2, 5, 24, 0, 14, 3, 1, 0, 1]' : 0.133495}", "{'[2, 2, 0, 0, 2, 5, 24, 0, 14, 3, 1, 0, 1]' : 0.120384}", "{'[2, 2, 0, 0, 2, 5, 24, 0, 14, 3, 1, 0, 1]' : 0.120109}", "{'[2, 2, 0, 0, 2, 5, 24, 0, 14, 3, 1, 0, 1]' : 0.120311}", "{'[2, 2, 0, 0, 2, 5, 24, 0, 14, 3, 1, 0, 1]' : 0.119957}", "{'[2, 2, 0, 0, 2, 5, 24, 0, 14, 3, 1, 0, 1]' : 0.120159}", "{'[2, 2, 0, 0, 2, 5, 24, 0, 14, 3, 1, 0, 1]' : 0.120161}", "{'[2, 2, 0, 0, 2, 5, 24, 0, 14, 3, 1, 0, 1]' : 0.120895}", "{'[2, 2, 0, 0, 2, 5, 24, 0, 14, 3, 1, 0, 1]' : 0.115047}", "{'[2, 2, 0, 0, 2, 5, 24, 0, 14, 3, 1, 0, 1]' : 0.114185}", "{'[2, 2, 0, 0, 2, 5, 24, 0, 14, 3, 1, 0, 1]' : 0.117572}", "{'[2, 2, 0, 0, 2, 5, 24, 0, 14, 3, 1, 0, 1]' : 0.117721}", "{'[2, 2, 0, 0, 2, 5, 24, 0, 14, 3, 1, 0, 1]' : 0.117369}", "{'[2, 2, 0, 0, 2, 5, 24, 0, 14, 3, 1, 0, 1]' : 0.117508}", "{'[2, 2, 0, 0, 2, 5, 24, 0, 14, 3, 1, 0, 1]' : 0.119969}", "{'[2, 2, 0, 0, 2, 5, 24, 0, 14, 3, 1, 0, 1]' : 0.12105}", "{'[2, 2, 0, 0, 2, 5, 24, 0, 14, 3, 1, 0, 1]' : 0.120552}", "{'[2, 2, 0, 0, 2, 5, 24, 0, 14, 3, 1, 0, 1]' : 0.118825}", "{'[2, 2, 0, 0, 2, 5, 24, 0, 14, 3, 1, 0, 1]' : 0.119539}", "{'[2, 2, 0, 0, 2, 5, 24, 0, 14, 3, 1, 0, 1]' : 0.120908}", "{'[2, 2, 0, 0, 2, 5, 24, 0, 14, 3, 1, 0, 1]' : 0.1206}", "{'[2, 2, 0, 0, 2, 5, 24, 0, 14, 3, 1, 0, 1]' : 0.120735}", "{'[2, 2, 0, 0, 2, 5, 24, 0, 14, 3, 1, 0, 1]' : 0.12067}", "{'[2, 2, 0, 0, 2, 5, 24, 0, 14, 3, 1, 0, 1]' : 0.120886}", "{'[2, 2, 0, 0, 2, 5, 24, 0, 14, 3, 1, 0, 1]' : 0.120533}", "{'[2, 2, 0, 0, 2, 5, 24, 0, 14, 3, 1, 0, 1]' : 0.12075}", "{'[2, 2, 0, 0, 2, 5, 24, 0, 14, 3, 1, 0, 1]' : 0.120347}", "{'[2, 2, 0, 0, 2, 5, 24, 0, 14, 3, 1, 0, 1]' : 0.119112}"]
returning from 'run': {'[2, 2, 0, 0, 2, 5, 24, 0, 14, 3, 1, 0, 1]': ([0.134243, 0.134347, 0.133495, 0.120384, 0.120109, 0.120311, 0.119957, 0.120159, 0.120161, 0.120895, 0.115047, 0.114185, 0.117572, 0.117721, 0.117369, 0.117508, 0.119969, 0.12105, 0.120552, 0.118825, 0.119539, 0.120908, 0.1206, 0.120735, 0.12067, 0.120886, 0.120533, 0.12075, 0.120347, 0.119112], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 2, 0, 0, 2, 5, 24, 0, 14, 3, 1, 0, 1]': ([0.134243, 0.134347, 0.133495, 0.120384, 0.120109, 0.120311, 0.119957, 0.120159, 0.120161, 0.120895, 0.115047, 0.114185, 0.117572, 0.117721, 0.117369, 0.117508, 0.119969, 0.12105, 0.120552, 0.118825, 0.119539, 0.120908, 0.1206, 0.120735, 0.12067, 0.120886, 0.120533, 0.12075, 0.120347, 0.119112], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	41
        Max loop nest depth: 	6
        Additions: 		1721
        Multiplications: 	476
        Divisions: 		0
        Logical: 		0
        Reads: 			2745
        Writes: 		335
        Comparisons:		41
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest24.exe __orio_perftest24.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest24.exe  
Program Test Output: 
{'[1, 5, 0, 4, 6, 0, 0, 12, 6, 0, 0, 1, 0]' : 0.143092}
{'[1, 5, 0, 4, 6, 0, 0, 12, 6, 0, 0, 1, 0]' : 0.143003}
{'[1, 5, 0, 4, 6, 0, 0, 12, 6, 0, 0, 1, 0]' : 0.14302}
{'[1, 5, 0, 4, 6, 0, 0, 12, 6, 0, 0, 1, 0]' : 0.13322}
{'[1, 5, 0, 4, 6, 0, 0, 12, 6, 0, 0, 1, 0]' : 0.127723}
{'[1, 5, 0, 4, 6, 0, 0, 12, 6, 0, 0, 1, 0]' : 0.125486}
{'[1, 5, 0, 4, 6, 0, 0, 12, 6, 0, 0, 1, 0]' : 0.125348}
{'[1, 5, 0, 4, 6, 0, 0, 12, 6, 0, 0, 1, 0]' : 0.125479}
{'[1, 5, 0, 4, 6, 0, 0, 12, 6, 0, 0, 1, 0]' : 0.125468}
{'[1, 5, 0, 4, 6, 0, 0, 12, 6, 0, 0, 1, 0]' : 0.125357}
{'[1, 5, 0, 4, 6, 0, 0, 12, 6, 0, 0, 1, 0]' : 0.122306}
{'[1, 5, 0, 4, 6, 0, 0, 12, 6, 0, 0, 1, 0]' : 0.122483}
{'[1, 5, 0, 4, 6, 0, 0, 12, 6, 0, 0, 1, 0]' : 0.122993}
{'[1, 5, 0, 4, 6, 0, 0, 12, 6, 0, 0, 1, 0]' : 0.124161}
{'[1, 5, 0, 4, 6, 0, 0, 12, 6, 0, 0, 1, 0]' : 0.125858}
{'[1, 5, 0, 4, 6, 0, 0, 12, 6, 0, 0, 1, 0]' : 0.125806}
{'[1, 5, 0, 4, 6, 0, 0, 12, 6, 0, 0, 1, 0]' : 0.125823}
{'[1, 5, 0, 4, 6, 0, 0, 12, 6, 0, 0, 1, 0]' : 0.125946}
{'[1, 5, 0, 4, 6, 0, 0, 12, 6, 0, 0, 1, 0]' : 0.125829}
{'[1, 5, 0, 4, 6, 0, 0, 12, 6, 0, 0, 1, 0]' : 0.125772}
{'[1, 5, 0, 4, 6, 0, 0, 12, 6, 0, 0, 1, 0]' : 0.126007}
{'[1, 5, 0, 4, 6, 0, 0, 12, 6, 0, 0, 1, 0]' : 0.127136}
{'[1, 5, 0, 4, 6, 0, 0, 12, 6, 0, 0, 1, 0]' : 0.12601}
{'[1, 5, 0, 4, 6, 0, 0, 12, 6, 0, 0, 1, 0]' : 0.124039}
{'[1, 5, 0, 4, 6, 0, 0, 12, 6, 0, 0, 1, 0]' : 0.122517}
{'[1, 5, 0, 4, 6, 0, 0, 12, 6, 0, 0, 1, 0]' : 0.124155}
{'[1, 5, 0, 4, 6, 0, 0, 12, 6, 0, 0, 1, 0]' : 0.128903}
{'[1, 5, 0, 4, 6, 0, 0, 12, 6, 0, 0, 1, 0]' : 0.129273}
{'[1, 5, 0, 4, 6, 0, 0, 12, 6, 0, 0, 1, 0]' : 0.12938}
{'[1, 5, 0, 4, 6, 0, 0, 12, 6, 0, 0, 1, 0]' : 0.127273}

out:
 ["{'[1, 5, 0, 4, 6, 0, 0, 12, 6, 0, 0, 1, 0]' : 0.143092}", "{'[1, 5, 0, 4, 6, 0, 0, 12, 6, 0, 0, 1, 0]' : 0.143003}", "{'[1, 5, 0, 4, 6, 0, 0, 12, 6, 0, 0, 1, 0]' : 0.14302}", "{'[1, 5, 0, 4, 6, 0, 0, 12, 6, 0, 0, 1, 0]' : 0.13322}", "{'[1, 5, 0, 4, 6, 0, 0, 12, 6, 0, 0, 1, 0]' : 0.127723}", "{'[1, 5, 0, 4, 6, 0, 0, 12, 6, 0, 0, 1, 0]' : 0.125486}", "{'[1, 5, 0, 4, 6, 0, 0, 12, 6, 0, 0, 1, 0]' : 0.125348}", "{'[1, 5, 0, 4, 6, 0, 0, 12, 6, 0, 0, 1, 0]' : 0.125479}", "{'[1, 5, 0, 4, 6, 0, 0, 12, 6, 0, 0, 1, 0]' : 0.125468}", "{'[1, 5, 0, 4, 6, 0, 0, 12, 6, 0, 0, 1, 0]' : 0.125357}", "{'[1, 5, 0, 4, 6, 0, 0, 12, 6, 0, 0, 1, 0]' : 0.122306}", "{'[1, 5, 0, 4, 6, 0, 0, 12, 6, 0, 0, 1, 0]' : 0.122483}", "{'[1, 5, 0, 4, 6, 0, 0, 12, 6, 0, 0, 1, 0]' : 0.122993}", "{'[1, 5, 0, 4, 6, 0, 0, 12, 6, 0, 0, 1, 0]' : 0.124161}", "{'[1, 5, 0, 4, 6, 0, 0, 12, 6, 0, 0, 1, 0]' : 0.125858}", "{'[1, 5, 0, 4, 6, 0, 0, 12, 6, 0, 0, 1, 0]' : 0.125806}", "{'[1, 5, 0, 4, 6, 0, 0, 12, 6, 0, 0, 1, 0]' : 0.125823}", "{'[1, 5, 0, 4, 6, 0, 0, 12, 6, 0, 0, 1, 0]' : 0.125946}", "{'[1, 5, 0, 4, 6, 0, 0, 12, 6, 0, 0, 1, 0]' : 0.125829}", "{'[1, 5, 0, 4, 6, 0, 0, 12, 6, 0, 0, 1, 0]' : 0.125772}", "{'[1, 5, 0, 4, 6, 0, 0, 12, 6, 0, 0, 1, 0]' : 0.126007}", "{'[1, 5, 0, 4, 6, 0, 0, 12, 6, 0, 0, 1, 0]' : 0.127136}", "{'[1, 5, 0, 4, 6, 0, 0, 12, 6, 0, 0, 1, 0]' : 0.12601}", "{'[1, 5, 0, 4, 6, 0, 0, 12, 6, 0, 0, 1, 0]' : 0.124039}", "{'[1, 5, 0, 4, 6, 0, 0, 12, 6, 0, 0, 1, 0]' : 0.122517}", "{'[1, 5, 0, 4, 6, 0, 0, 12, 6, 0, 0, 1, 0]' : 0.124155}", "{'[1, 5, 0, 4, 6, 0, 0, 12, 6, 0, 0, 1, 0]' : 0.128903}", "{'[1, 5, 0, 4, 6, 0, 0, 12, 6, 0, 0, 1, 0]' : 0.129273}", "{'[1, 5, 0, 4, 6, 0, 0, 12, 6, 0, 0, 1, 0]' : 0.12938}", "{'[1, 5, 0, 4, 6, 0, 0, 12, 6, 0, 0, 1, 0]' : 0.127273}"]
returning from 'run': {'[1, 5, 0, 4, 6, 0, 0, 12, 6, 0, 0, 1, 0]': ([0.143092, 0.143003, 0.14302, 0.13322, 0.127723, 0.125486, 0.125348, 0.125479, 0.125468, 0.125357, 0.122306, 0.122483, 0.122993, 0.124161, 0.125858, 0.125806, 0.125823, 0.125946, 0.125829, 0.125772, 0.126007, 0.127136, 0.12601, 0.124039, 0.122517, 0.124155, 0.128903, 0.129273, 0.12938, 0.127273], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 5, 0, 4, 6, 0, 0, 12, 6, 0, 0, 1, 0]': ([0.143092, 0.143003, 0.14302, 0.13322, 0.127723, 0.125486, 0.125348, 0.125479, 0.125468, 0.125357, 0.122306, 0.122483, 0.122993, 0.124161, 0.125858, 0.125806, 0.125823, 0.125946, 0.125829, 0.125772, 0.126007, 0.127136, 0.12601, 0.124039, 0.122517, 0.124155, 0.128903, 0.129273, 0.12938, 0.127273], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	4
        Additions: 		1376
        Multiplications: 	450
        Divisions: 		0
        Logical: 		0
        Reads: 			2426
        Writes: 		288
        Comparisons:		18
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest25.exe __orio_perftest25.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest25.exe  
Program Test Output: 
{'[0, 2, 0, 0, 4, 1, 20, 3, 0, 10, 0, 2, 0]' : 0.146809}
{'[0, 2, 0, 0, 4, 1, 20, 3, 0, 10, 0, 2, 0]' : 0.146746}
{'[0, 2, 0, 0, 4, 1, 20, 3, 0, 10, 0, 2, 0]' : 0.146914}
{'[0, 2, 0, 0, 4, 1, 20, 3, 0, 10, 0, 2, 0]' : 0.13271}
{'[0, 2, 0, 0, 4, 1, 20, 3, 0, 10, 0, 2, 0]' : 0.130132}
{'[0, 2, 0, 0, 4, 1, 20, 3, 0, 10, 0, 2, 0]' : 0.127198}
{'[0, 2, 0, 0, 4, 1, 20, 3, 0, 10, 0, 2, 0]' : 0.130614}
{'[0, 2, 0, 0, 4, 1, 20, 3, 0, 10, 0, 2, 0]' : 0.130991}
{'[0, 2, 0, 0, 4, 1, 20, 3, 0, 10, 0, 2, 0]' : 0.124546}
{'[0, 2, 0, 0, 4, 1, 20, 3, 0, 10, 0, 2, 0]' : 0.124045}
{'[0, 2, 0, 0, 4, 1, 20, 3, 0, 10, 0, 2, 0]' : 0.126715}
{'[0, 2, 0, 0, 4, 1, 20, 3, 0, 10, 0, 2, 0]' : 0.126579}
{'[0, 2, 0, 0, 4, 1, 20, 3, 0, 10, 0, 2, 0]' : 0.12924}
{'[0, 2, 0, 0, 4, 1, 20, 3, 0, 10, 0, 2, 0]' : 0.12754}
{'[0, 2, 0, 0, 4, 1, 20, 3, 0, 10, 0, 2, 0]' : 0.126926}
{'[0, 2, 0, 0, 4, 1, 20, 3, 0, 10, 0, 2, 0]' : 0.1269}
{'[0, 2, 0, 0, 4, 1, 20, 3, 0, 10, 0, 2, 0]' : 0.124252}
{'[0, 2, 0, 0, 4, 1, 20, 3, 0, 10, 0, 2, 0]' : 0.123803}
{'[0, 2, 0, 0, 4, 1, 20, 3, 0, 10, 0, 2, 0]' : 0.127055}
{'[0, 2, 0, 0, 4, 1, 20, 3, 0, 10, 0, 2, 0]' : 0.126611}
{'[0, 2, 0, 0, 4, 1, 20, 3, 0, 10, 0, 2, 0]' : 0.124864}
{'[0, 2, 0, 0, 4, 1, 20, 3, 0, 10, 0, 2, 0]' : 0.127661}
{'[0, 2, 0, 0, 4, 1, 20, 3, 0, 10, 0, 2, 0]' : 0.130709}
{'[0, 2, 0, 0, 4, 1, 20, 3, 0, 10, 0, 2, 0]' : 0.130592}
{'[0, 2, 0, 0, 4, 1, 20, 3, 0, 10, 0, 2, 0]' : 0.127062}
{'[0, 2, 0, 0, 4, 1, 20, 3, 0, 10, 0, 2, 0]' : 0.128025}
{'[0, 2, 0, 0, 4, 1, 20, 3, 0, 10, 0, 2, 0]' : 0.130656}
{'[0, 2, 0, 0, 4, 1, 20, 3, 0, 10, 0, 2, 0]' : 0.129561}
{'[0, 2, 0, 0, 4, 1, 20, 3, 0, 10, 0, 2, 0]' : 0.124064}
{'[0, 2, 0, 0, 4, 1, 20, 3, 0, 10, 0, 2, 0]' : 0.129105}

out:
 ["{'[0, 2, 0, 0, 4, 1, 20, 3, 0, 10, 0, 2, 0]' : 0.146809}", "{'[0, 2, 0, 0, 4, 1, 20, 3, 0, 10, 0, 2, 0]' : 0.146746}", "{'[0, 2, 0, 0, 4, 1, 20, 3, 0, 10, 0, 2, 0]' : 0.146914}", "{'[0, 2, 0, 0, 4, 1, 20, 3, 0, 10, 0, 2, 0]' : 0.13271}", "{'[0, 2, 0, 0, 4, 1, 20, 3, 0, 10, 0, 2, 0]' : 0.130132}", "{'[0, 2, 0, 0, 4, 1, 20, 3, 0, 10, 0, 2, 0]' : 0.127198}", "{'[0, 2, 0, 0, 4, 1, 20, 3, 0, 10, 0, 2, 0]' : 0.130614}", "{'[0, 2, 0, 0, 4, 1, 20, 3, 0, 10, 0, 2, 0]' : 0.130991}", "{'[0, 2, 0, 0, 4, 1, 20, 3, 0, 10, 0, 2, 0]' : 0.124546}", "{'[0, 2, 0, 0, 4, 1, 20, 3, 0, 10, 0, 2, 0]' : 0.124045}", "{'[0, 2, 0, 0, 4, 1, 20, 3, 0, 10, 0, 2, 0]' : 0.126715}", "{'[0, 2, 0, 0, 4, 1, 20, 3, 0, 10, 0, 2, 0]' : 0.126579}", "{'[0, 2, 0, 0, 4, 1, 20, 3, 0, 10, 0, 2, 0]' : 0.12924}", "{'[0, 2, 0, 0, 4, 1, 20, 3, 0, 10, 0, 2, 0]' : 0.12754}", "{'[0, 2, 0, 0, 4, 1, 20, 3, 0, 10, 0, 2, 0]' : 0.126926}", "{'[0, 2, 0, 0, 4, 1, 20, 3, 0, 10, 0, 2, 0]' : 0.1269}", "{'[0, 2, 0, 0, 4, 1, 20, 3, 0, 10, 0, 2, 0]' : 0.124252}", "{'[0, 2, 0, 0, 4, 1, 20, 3, 0, 10, 0, 2, 0]' : 0.123803}", "{'[0, 2, 0, 0, 4, 1, 20, 3, 0, 10, 0, 2, 0]' : 0.127055}", "{'[0, 2, 0, 0, 4, 1, 20, 3, 0, 10, 0, 2, 0]' : 0.126611}", "{'[0, 2, 0, 0, 4, 1, 20, 3, 0, 10, 0, 2, 0]' : 0.124864}", "{'[0, 2, 0, 0, 4, 1, 20, 3, 0, 10, 0, 2, 0]' : 0.127661}", "{'[0, 2, 0, 0, 4, 1, 20, 3, 0, 10, 0, 2, 0]' : 0.130709}", "{'[0, 2, 0, 0, 4, 1, 20, 3, 0, 10, 0, 2, 0]' : 0.130592}", "{'[0, 2, 0, 0, 4, 1, 20, 3, 0, 10, 0, 2, 0]' : 0.127062}", "{'[0, 2, 0, 0, 4, 1, 20, 3, 0, 10, 0, 2, 0]' : 0.128025}", "{'[0, 2, 0, 0, 4, 1, 20, 3, 0, 10, 0, 2, 0]' : 0.130656}", "{'[0, 2, 0, 0, 4, 1, 20, 3, 0, 10, 0, 2, 0]' : 0.129561}", "{'[0, 2, 0, 0, 4, 1, 20, 3, 0, 10, 0, 2, 0]' : 0.124064}", "{'[0, 2, 0, 0, 4, 1, 20, 3, 0, 10, 0, 2, 0]' : 0.129105}"]
returning from 'run': {'[0, 2, 0, 0, 4, 1, 20, 3, 0, 10, 0, 2, 0]': ([0.146809, 0.146746, 0.146914, 0.13271, 0.130132, 0.127198, 0.130614, 0.130991, 0.124546, 0.124045, 0.126715, 0.126579, 0.12924, 0.12754, 0.126926, 0.1269, 0.124252, 0.123803, 0.127055, 0.126611, 0.124864, 0.127661, 0.130709, 0.130592, 0.127062, 0.128025, 0.130656, 0.129561, 0.124064, 0.129105], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 0, 0, 4, 1, 20, 3, 0, 10, 0, 2, 0]': ([0.146809, 0.146746, 0.146914, 0.13271, 0.130132, 0.127198, 0.130614, 0.130991, 0.124546, 0.124045, 0.126715, 0.126579, 0.12924, 0.12754, 0.126926, 0.1269, 0.124252, 0.123803, 0.127055, 0.126611, 0.124864, 0.127661, 0.130709, 0.130592, 0.127062, 0.128025, 0.130656, 0.129561, 0.124064, 0.129105], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	6
        Additions: 		12890
        Multiplications: 	3828
        Divisions: 		0
        Logical: 		0
        Reads: 			19320
        Writes: 		1969
        Comparisons:		22
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest26.exe __orio_perftest26.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest26.exe  
Program Test Output: 
{'[1, 6, 1, 5, 6, 6, 7, 0, 26, 28, 2, 0, 0]' : 0.226951}
{'[1, 6, 1, 5, 6, 6, 7, 0, 26, 28, 2, 0, 0]' : 0.22685}
{'[1, 6, 1, 5, 6, 6, 7, 0, 26, 28, 2, 0, 0]' : 0.224457}
{'[1, 6, 1, 5, 6, 6, 7, 0, 26, 28, 2, 0, 0]' : 0.223167}
{'[1, 6, 1, 5, 6, 6, 7, 0, 26, 28, 2, 0, 0]' : 0.226649}
{'[1, 6, 1, 5, 6, 6, 7, 0, 26, 28, 2, 0, 0]' : 0.22697}
{'[1, 6, 1, 5, 6, 6, 7, 0, 26, 28, 2, 0, 0]' : 0.226893}
{'[1, 6, 1, 5, 6, 6, 7, 0, 26, 28, 2, 0, 0]' : 0.226909}
{'[1, 6, 1, 5, 6, 6, 7, 0, 26, 28, 2, 0, 0]' : 0.226891}
{'[1, 6, 1, 5, 6, 6, 7, 0, 26, 28, 2, 0, 0]' : 0.226856}
{'[1, 6, 1, 5, 6, 6, 7, 0, 26, 28, 2, 0, 0]' : 0.233655}
{'[1, 6, 1, 5, 6, 6, 7, 0, 26, 28, 2, 0, 0]' : 0.231997}
{'[1, 6, 1, 5, 6, 6, 7, 0, 26, 28, 2, 0, 0]' : 0.22466}
{'[1, 6, 1, 5, 6, 6, 7, 0, 26, 28, 2, 0, 0]' : 0.226691}
{'[1, 6, 1, 5, 6, 6, 7, 0, 26, 28, 2, 0, 0]' : 0.226982}
{'[1, 6, 1, 5, 6, 6, 7, 0, 26, 28, 2, 0, 0]' : 0.226935}
{'[1, 6, 1, 5, 6, 6, 7, 0, 26, 28, 2, 0, 0]' : 0.221704}
{'[1, 6, 1, 5, 6, 6, 7, 0, 26, 28, 2, 0, 0]' : 0.226721}
{'[1, 6, 1, 5, 6, 6, 7, 0, 26, 28, 2, 0, 0]' : 0.227192}
{'[1, 6, 1, 5, 6, 6, 7, 0, 26, 28, 2, 0, 0]' : 0.226801}
{'[1, 6, 1, 5, 6, 6, 7, 0, 26, 28, 2, 0, 0]' : 0.221953}
{'[1, 6, 1, 5, 6, 6, 7, 0, 26, 28, 2, 0, 0]' : 0.225451}
{'[1, 6, 1, 5, 6, 6, 7, 0, 26, 28, 2, 0, 0]' : 0.226913}
{'[1, 6, 1, 5, 6, 6, 7, 0, 26, 28, 2, 0, 0]' : 0.225408}
{'[1, 6, 1, 5, 6, 6, 7, 0, 26, 28, 2, 0, 0]' : 0.223548}
{'[1, 6, 1, 5, 6, 6, 7, 0, 26, 28, 2, 0, 0]' : 0.222607}
{'[1, 6, 1, 5, 6, 6, 7, 0, 26, 28, 2, 0, 0]' : 0.226681}
{'[1, 6, 1, 5, 6, 6, 7, 0, 26, 28, 2, 0, 0]' : 0.227146}
{'[1, 6, 1, 5, 6, 6, 7, 0, 26, 28, 2, 0, 0]' : 0.226817}
{'[1, 6, 1, 5, 6, 6, 7, 0, 26, 28, 2, 0, 0]' : 0.222485}

out:
 ["{'[1, 6, 1, 5, 6, 6, 7, 0, 26, 28, 2, 0, 0]' : 0.226951}", "{'[1, 6, 1, 5, 6, 6, 7, 0, 26, 28, 2, 0, 0]' : 0.22685}", "{'[1, 6, 1, 5, 6, 6, 7, 0, 26, 28, 2, 0, 0]' : 0.224457}", "{'[1, 6, 1, 5, 6, 6, 7, 0, 26, 28, 2, 0, 0]' : 0.223167}", "{'[1, 6, 1, 5, 6, 6, 7, 0, 26, 28, 2, 0, 0]' : 0.226649}", "{'[1, 6, 1, 5, 6, 6, 7, 0, 26, 28, 2, 0, 0]' : 0.22697}", "{'[1, 6, 1, 5, 6, 6, 7, 0, 26, 28, 2, 0, 0]' : 0.226893}", "{'[1, 6, 1, 5, 6, 6, 7, 0, 26, 28, 2, 0, 0]' : 0.226909}", "{'[1, 6, 1, 5, 6, 6, 7, 0, 26, 28, 2, 0, 0]' : 0.226891}", "{'[1, 6, 1, 5, 6, 6, 7, 0, 26, 28, 2, 0, 0]' : 0.226856}", "{'[1, 6, 1, 5, 6, 6, 7, 0, 26, 28, 2, 0, 0]' : 0.233655}", "{'[1, 6, 1, 5, 6, 6, 7, 0, 26, 28, 2, 0, 0]' : 0.231997}", "{'[1, 6, 1, 5, 6, 6, 7, 0, 26, 28, 2, 0, 0]' : 0.22466}", "{'[1, 6, 1, 5, 6, 6, 7, 0, 26, 28, 2, 0, 0]' : 0.226691}", "{'[1, 6, 1, 5, 6, 6, 7, 0, 26, 28, 2, 0, 0]' : 0.226982}", "{'[1, 6, 1, 5, 6, 6, 7, 0, 26, 28, 2, 0, 0]' : 0.226935}", "{'[1, 6, 1, 5, 6, 6, 7, 0, 26, 28, 2, 0, 0]' : 0.221704}", "{'[1, 6, 1, 5, 6, 6, 7, 0, 26, 28, 2, 0, 0]' : 0.226721}", "{'[1, 6, 1, 5, 6, 6, 7, 0, 26, 28, 2, 0, 0]' : 0.227192}", "{'[1, 6, 1, 5, 6, 6, 7, 0, 26, 28, 2, 0, 0]' : 0.226801}", "{'[1, 6, 1, 5, 6, 6, 7, 0, 26, 28, 2, 0, 0]' : 0.221953}", "{'[1, 6, 1, 5, 6, 6, 7, 0, 26, 28, 2, 0, 0]' : 0.225451}", "{'[1, 6, 1, 5, 6, 6, 7, 0, 26, 28, 2, 0, 0]' : 0.226913}", "{'[1, 6, 1, 5, 6, 6, 7, 0, 26, 28, 2, 0, 0]' : 0.225408}", "{'[1, 6, 1, 5, 6, 6, 7, 0, 26, 28, 2, 0, 0]' : 0.223548}", "{'[1, 6, 1, 5, 6, 6, 7, 0, 26, 28, 2, 0, 0]' : 0.222607}", "{'[1, 6, 1, 5, 6, 6, 7, 0, 26, 28, 2, 0, 0]' : 0.226681}", "{'[1, 6, 1, 5, 6, 6, 7, 0, 26, 28, 2, 0, 0]' : 0.227146}", "{'[1, 6, 1, 5, 6, 6, 7, 0, 26, 28, 2, 0, 0]' : 0.226817}", "{'[1, 6, 1, 5, 6, 6, 7, 0, 26, 28, 2, 0, 0]' : 0.222485}"]
returning from 'run': {'[1, 6, 1, 5, 6, 6, 7, 0, 26, 28, 2, 0, 0]': ([0.226951, 0.22685, 0.224457, 0.223167, 0.226649, 0.22697, 0.226893, 0.226909, 0.226891, 0.226856, 0.233655, 0.231997, 0.22466, 0.226691, 0.226982, 0.226935, 0.221704, 0.226721, 0.227192, 0.226801, 0.221953, 0.225451, 0.226913, 0.225408, 0.223548, 0.222607, 0.226681, 0.227146, 0.226817, 0.222485], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 6, 1, 5, 6, 6, 7, 0, 26, 28, 2, 0, 0]': ([0.226951, 0.22685, 0.224457, 0.223167, 0.226649, 0.22697, 0.226893, 0.226909, 0.226891, 0.226856, 0.233655, 0.231997, 0.22466, 0.226691, 0.226982, 0.226935, 0.221704, 0.226721, 0.227192, 0.226801, 0.221953, 0.225451, 0.226913, 0.225408, 0.223548, 0.222607, 0.226681, 0.227146, 0.226817, 0.222485], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = kkk
Code stats:
        Number of loops: 	27
        Max loop nest depth: 	5
        Additions: 		2828
        Multiplications: 	854
        Divisions: 		0
        Logical: 		0
        Reads: 			4495
        Writes: 		489
        Comparisons:		27
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest27.exe __orio_perftest27.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest27.exe  
Program Test Output: 
{'[6, 0, 5, 6, 3, 3, 0, 5, 0, 26, 0, 0, 2]' : 0.136658}
{'[6, 0, 5, 6, 3, 3, 0, 5, 0, 26, 0, 0, 2]' : 0.13598}
{'[6, 0, 5, 6, 3, 3, 0, 5, 0, 26, 0, 0, 2]' : 0.135261}
{'[6, 0, 5, 6, 3, 3, 0, 5, 0, 26, 0, 0, 2]' : 0.135379}
{'[6, 0, 5, 6, 3, 3, 0, 5, 0, 26, 0, 0, 2]' : 0.1354}
{'[6, 0, 5, 6, 3, 3, 0, 5, 0, 26, 0, 0, 2]' : 0.13543}
{'[6, 0, 5, 6, 3, 3, 0, 5, 0, 26, 0, 0, 2]' : 0.133535}
{'[6, 0, 5, 6, 3, 3, 0, 5, 0, 26, 0, 0, 2]' : 0.133529}
{'[6, 0, 5, 6, 3, 3, 0, 5, 0, 26, 0, 0, 2]' : 0.139702}
{'[6, 0, 5, 6, 3, 3, 0, 5, 0, 26, 0, 0, 2]' : 0.138152}
{'[6, 0, 5, 6, 3, 3, 0, 5, 0, 26, 0, 0, 2]' : 0.135508}
{'[6, 0, 5, 6, 3, 3, 0, 5, 0, 26, 0, 0, 2]' : 0.135414}
{'[6, 0, 5, 6, 3, 3, 0, 5, 0, 26, 0, 0, 2]' : 0.135397}
{'[6, 0, 5, 6, 3, 3, 0, 5, 0, 26, 0, 0, 2]' : 0.135395}
{'[6, 0, 5, 6, 3, 3, 0, 5, 0, 26, 0, 0, 2]' : 0.135322}
{'[6, 0, 5, 6, 3, 3, 0, 5, 0, 26, 0, 0, 2]' : 0.139214}
{'[6, 0, 5, 6, 3, 3, 0, 5, 0, 26, 0, 0, 2]' : 0.139633}
{'[6, 0, 5, 6, 3, 3, 0, 5, 0, 26, 0, 0, 2]' : 0.13595}
{'[6, 0, 5, 6, 3, 3, 0, 5, 0, 26, 0, 0, 2]' : 0.135343}
{'[6, 0, 5, 6, 3, 3, 0, 5, 0, 26, 0, 0, 2]' : 0.131631}
{'[6, 0, 5, 6, 3, 3, 0, 5, 0, 26, 0, 0, 2]' : 0.131868}
{'[6, 0, 5, 6, 3, 3, 0, 5, 0, 26, 0, 0, 2]' : 0.131629}
{'[6, 0, 5, 6, 3, 3, 0, 5, 0, 26, 0, 0, 2]' : 0.135328}
{'[6, 0, 5, 6, 3, 3, 0, 5, 0, 26, 0, 0, 2]' : 0.138881}
{'[6, 0, 5, 6, 3, 3, 0, 5, 0, 26, 0, 0, 2]' : 0.135493}
{'[6, 0, 5, 6, 3, 3, 0, 5, 0, 26, 0, 0, 2]' : 0.135569}
{'[6, 0, 5, 6, 3, 3, 0, 5, 0, 26, 0, 0, 2]' : 0.137293}
{'[6, 0, 5, 6, 3, 3, 0, 5, 0, 26, 0, 0, 2]' : 0.134938}
{'[6, 0, 5, 6, 3, 3, 0, 5, 0, 26, 0, 0, 2]' : 0.132134}
{'[6, 0, 5, 6, 3, 3, 0, 5, 0, 26, 0, 0, 2]' : 0.132133}

out:
 ["{'[6, 0, 5, 6, 3, 3, 0, 5, 0, 26, 0, 0, 2]' : 0.136658}", "{'[6, 0, 5, 6, 3, 3, 0, 5, 0, 26, 0, 0, 2]' : 0.13598}", "{'[6, 0, 5, 6, 3, 3, 0, 5, 0, 26, 0, 0, 2]' : 0.135261}", "{'[6, 0, 5, 6, 3, 3, 0, 5, 0, 26, 0, 0, 2]' : 0.135379}", "{'[6, 0, 5, 6, 3, 3, 0, 5, 0, 26, 0, 0, 2]' : 0.1354}", "{'[6, 0, 5, 6, 3, 3, 0, 5, 0, 26, 0, 0, 2]' : 0.13543}", "{'[6, 0, 5, 6, 3, 3, 0, 5, 0, 26, 0, 0, 2]' : 0.133535}", "{'[6, 0, 5, 6, 3, 3, 0, 5, 0, 26, 0, 0, 2]' : 0.133529}", "{'[6, 0, 5, 6, 3, 3, 0, 5, 0, 26, 0, 0, 2]' : 0.139702}", "{'[6, 0, 5, 6, 3, 3, 0, 5, 0, 26, 0, 0, 2]' : 0.138152}", "{'[6, 0, 5, 6, 3, 3, 0, 5, 0, 26, 0, 0, 2]' : 0.135508}", "{'[6, 0, 5, 6, 3, 3, 0, 5, 0, 26, 0, 0, 2]' : 0.135414}", "{'[6, 0, 5, 6, 3, 3, 0, 5, 0, 26, 0, 0, 2]' : 0.135397}", "{'[6, 0, 5, 6, 3, 3, 0, 5, 0, 26, 0, 0, 2]' : 0.135395}", "{'[6, 0, 5, 6, 3, 3, 0, 5, 0, 26, 0, 0, 2]' : 0.135322}", "{'[6, 0, 5, 6, 3, 3, 0, 5, 0, 26, 0, 0, 2]' : 0.139214}", "{'[6, 0, 5, 6, 3, 3, 0, 5, 0, 26, 0, 0, 2]' : 0.139633}", "{'[6, 0, 5, 6, 3, 3, 0, 5, 0, 26, 0, 0, 2]' : 0.13595}", "{'[6, 0, 5, 6, 3, 3, 0, 5, 0, 26, 0, 0, 2]' : 0.135343}", "{'[6, 0, 5, 6, 3, 3, 0, 5, 0, 26, 0, 0, 2]' : 0.131631}", "{'[6, 0, 5, 6, 3, 3, 0, 5, 0, 26, 0, 0, 2]' : 0.131868}", "{'[6, 0, 5, 6, 3, 3, 0, 5, 0, 26, 0, 0, 2]' : 0.131629}", "{'[6, 0, 5, 6, 3, 3, 0, 5, 0, 26, 0, 0, 2]' : 0.135328}", "{'[6, 0, 5, 6, 3, 3, 0, 5, 0, 26, 0, 0, 2]' : 0.138881}", "{'[6, 0, 5, 6, 3, 3, 0, 5, 0, 26, 0, 0, 2]' : 0.135493}", "{'[6, 0, 5, 6, 3, 3, 0, 5, 0, 26, 0, 0, 2]' : 0.135569}", "{'[6, 0, 5, 6, 3, 3, 0, 5, 0, 26, 0, 0, 2]' : 0.137293}", "{'[6, 0, 5, 6, 3, 3, 0, 5, 0, 26, 0, 0, 2]' : 0.134938}", "{'[6, 0, 5, 6, 3, 3, 0, 5, 0, 26, 0, 0, 2]' : 0.132134}", "{'[6, 0, 5, 6, 3, 3, 0, 5, 0, 26, 0, 0, 2]' : 0.132133}"]
returning from 'run': {'[6, 0, 5, 6, 3, 3, 0, 5, 0, 26, 0, 0, 2]': ([0.136658, 0.13598, 0.135261, 0.135379, 0.1354, 0.13543, 0.133535, 0.133529, 0.139702, 0.138152, 0.135508, 0.135414, 0.135397, 0.135395, 0.135322, 0.139214, 0.139633, 0.13595, 0.135343, 0.131631, 0.131868, 0.131629, 0.135328, 0.138881, 0.135493, 0.135569, 0.137293, 0.134938, 0.132134, 0.132133], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 5, 6, 3, 3, 0, 5, 0, 26, 0, 0, 2]': ([0.136658, 0.13598, 0.135261, 0.135379, 0.1354, 0.13543, 0.133535, 0.133529, 0.139702, 0.138152, 0.135508, 0.135414, 0.135397, 0.135395, 0.135322, 0.139214, 0.139633, 0.13595, 0.135343, 0.131631, 0.131868, 0.131629, 0.135328, 0.138881, 0.135493, 0.135569, 0.137293, 0.134938, 0.132134, 0.132133], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	6
        Additions: 		210
        Multiplications: 	58
        Divisions: 		0
        Logical: 		0
        Reads: 			438
        Writes: 		85
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest28.exe __orio_perftest28.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest28.exe  
Program Test Output: 
{'[5, 2, 3, 6, 6, 0, 29, 0, 6, 19, 0, 0, 0]' : 0.244157}
{'[5, 2, 3, 6, 6, 0, 29, 0, 6, 19, 0, 0, 0]' : 0.230293}
{'[5, 2, 3, 6, 6, 0, 29, 0, 6, 19, 0, 0, 0]' : 0.211625}
{'[5, 2, 3, 6, 6, 0, 29, 0, 6, 19, 0, 0, 0]' : 0.211583}
{'[5, 2, 3, 6, 6, 0, 29, 0, 6, 19, 0, 0, 0]' : 0.21163}
{'[5, 2, 3, 6, 6, 0, 29, 0, 6, 19, 0, 0, 0]' : 0.211825}
{'[5, 2, 3, 6, 6, 0, 29, 0, 6, 19, 0, 0, 0]' : 0.211626}
{'[5, 2, 3, 6, 6, 0, 29, 0, 6, 19, 0, 0, 0]' : 0.211844}
{'[5, 2, 3, 6, 6, 0, 29, 0, 6, 19, 0, 0, 0]' : 0.211888}
{'[5, 2, 3, 6, 6, 0, 29, 0, 6, 19, 0, 0, 0]' : 0.211897}
{'[5, 2, 3, 6, 6, 0, 29, 0, 6, 19, 0, 0, 0]' : 0.209572}
{'[5, 2, 3, 6, 6, 0, 29, 0, 6, 19, 0, 0, 0]' : 0.205798}
{'[5, 2, 3, 6, 6, 0, 29, 0, 6, 19, 0, 0, 0]' : 0.208439}
{'[5, 2, 3, 6, 6, 0, 29, 0, 6, 19, 0, 0, 0]' : 0.217915}
{'[5, 2, 3, 6, 6, 0, 29, 0, 6, 19, 0, 0, 0]' : 0.213695}
{'[5, 2, 3, 6, 6, 0, 29, 0, 6, 19, 0, 0, 0]' : 0.211845}
{'[5, 2, 3, 6, 6, 0, 29, 0, 6, 19, 0, 0, 0]' : 0.21166}
{'[5, 2, 3, 6, 6, 0, 29, 0, 6, 19, 0, 0, 0]' : 0.211638}
{'[5, 2, 3, 6, 6, 0, 29, 0, 6, 19, 0, 0, 0]' : 0.212011}
{'[5, 2, 3, 6, 6, 0, 29, 0, 6, 19, 0, 0, 0]' : 0.213186}
{'[5, 2, 3, 6, 6, 0, 29, 0, 6, 19, 0, 0, 0]' : 0.214475}
{'[5, 2, 3, 6, 6, 0, 29, 0, 6, 19, 0, 0, 0]' : 0.211954}
{'[5, 2, 3, 6, 6, 0, 29, 0, 6, 19, 0, 0, 0]' : 0.211664}
{'[5, 2, 3, 6, 6, 0, 29, 0, 6, 19, 0, 0, 0]' : 0.211628}
{'[5, 2, 3, 6, 6, 0, 29, 0, 6, 19, 0, 0, 0]' : 0.211829}
{'[5, 2, 3, 6, 6, 0, 29, 0, 6, 19, 0, 0, 0]' : 0.211668}
{'[5, 2, 3, 6, 6, 0, 29, 0, 6, 19, 0, 0, 0]' : 0.211618}
{'[5, 2, 3, 6, 6, 0, 29, 0, 6, 19, 0, 0, 0]' : 0.211547}
{'[5, 2, 3, 6, 6, 0, 29, 0, 6, 19, 0, 0, 0]' : 0.211841}
{'[5, 2, 3, 6, 6, 0, 29, 0, 6, 19, 0, 0, 0]' : 0.211641}

out:
 ["{'[5, 2, 3, 6, 6, 0, 29, 0, 6, 19, 0, 0, 0]' : 0.244157}", "{'[5, 2, 3, 6, 6, 0, 29, 0, 6, 19, 0, 0, 0]' : 0.230293}", "{'[5, 2, 3, 6, 6, 0, 29, 0, 6, 19, 0, 0, 0]' : 0.211625}", "{'[5, 2, 3, 6, 6, 0, 29, 0, 6, 19, 0, 0, 0]' : 0.211583}", "{'[5, 2, 3, 6, 6, 0, 29, 0, 6, 19, 0, 0, 0]' : 0.21163}", "{'[5, 2, 3, 6, 6, 0, 29, 0, 6, 19, 0, 0, 0]' : 0.211825}", "{'[5, 2, 3, 6, 6, 0, 29, 0, 6, 19, 0, 0, 0]' : 0.211626}", "{'[5, 2, 3, 6, 6, 0, 29, 0, 6, 19, 0, 0, 0]' : 0.211844}", "{'[5, 2, 3, 6, 6, 0, 29, 0, 6, 19, 0, 0, 0]' : 0.211888}", "{'[5, 2, 3, 6, 6, 0, 29, 0, 6, 19, 0, 0, 0]' : 0.211897}", "{'[5, 2, 3, 6, 6, 0, 29, 0, 6, 19, 0, 0, 0]' : 0.209572}", "{'[5, 2, 3, 6, 6, 0, 29, 0, 6, 19, 0, 0, 0]' : 0.205798}", "{'[5, 2, 3, 6, 6, 0, 29, 0, 6, 19, 0, 0, 0]' : 0.208439}", "{'[5, 2, 3, 6, 6, 0, 29, 0, 6, 19, 0, 0, 0]' : 0.217915}", "{'[5, 2, 3, 6, 6, 0, 29, 0, 6, 19, 0, 0, 0]' : 0.213695}", "{'[5, 2, 3, 6, 6, 0, 29, 0, 6, 19, 0, 0, 0]' : 0.211845}", "{'[5, 2, 3, 6, 6, 0, 29, 0, 6, 19, 0, 0, 0]' : 0.21166}", "{'[5, 2, 3, 6, 6, 0, 29, 0, 6, 19, 0, 0, 0]' : 0.211638}", "{'[5, 2, 3, 6, 6, 0, 29, 0, 6, 19, 0, 0, 0]' : 0.212011}", "{'[5, 2, 3, 6, 6, 0, 29, 0, 6, 19, 0, 0, 0]' : 0.213186}", "{'[5, 2, 3, 6, 6, 0, 29, 0, 6, 19, 0, 0, 0]' : 0.214475}", "{'[5, 2, 3, 6, 6, 0, 29, 0, 6, 19, 0, 0, 0]' : 0.211954}", "{'[5, 2, 3, 6, 6, 0, 29, 0, 6, 19, 0, 0, 0]' : 0.211664}", "{'[5, 2, 3, 6, 6, 0, 29, 0, 6, 19, 0, 0, 0]' : 0.211628}", "{'[5, 2, 3, 6, 6, 0, 29, 0, 6, 19, 0, 0, 0]' : 0.211829}", "{'[5, 2, 3, 6, 6, 0, 29, 0, 6, 19, 0, 0, 0]' : 0.211668}", "{'[5, 2, 3, 6, 6, 0, 29, 0, 6, 19, 0, 0, 0]' : 0.211618}", "{'[5, 2, 3, 6, 6, 0, 29, 0, 6, 19, 0, 0, 0]' : 0.211547}", "{'[5, 2, 3, 6, 6, 0, 29, 0, 6, 19, 0, 0, 0]' : 0.211841}", "{'[5, 2, 3, 6, 6, 0, 29, 0, 6, 19, 0, 0, 0]' : 0.211641}"]
returning from 'run': {'[5, 2, 3, 6, 6, 0, 29, 0, 6, 19, 0, 0, 0]': ([0.244157, 0.230293, 0.211625, 0.211583, 0.21163, 0.211825, 0.211626, 0.211844, 0.211888, 0.211897, 0.209572, 0.205798, 0.208439, 0.217915, 0.213695, 0.211845, 0.21166, 0.211638, 0.212011, 0.213186, 0.214475, 0.211954, 0.211664, 0.211628, 0.211829, 0.211668, 0.211618, 0.211547, 0.211841, 0.211641], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 2, 3, 6, 6, 0, 29, 0, 6, 19, 0, 0, 0]': ([0.244157, 0.230293, 0.211625, 0.211583, 0.21163, 0.211825, 0.211626, 0.211844, 0.211888, 0.211897, 0.209572, 0.205798, 0.208439, 0.217915, 0.213695, 0.211845, 0.21166, 0.211638, 0.212011, 0.213186, 0.214475, 0.211954, 0.211664, 0.211628, 0.211829, 0.211668, 0.211618, 0.211547, 0.211841, 0.211641], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	6
        Additions: 		5975
        Multiplications: 	1804
        Divisions: 		0
        Logical: 		0
        Reads: 			9271
        Writes: 		990
        Comparisons:		25
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest29.exe __orio_perftest29.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest29.exe  
Program Test Output: 
{'[1, 0, 5, 1, 6, 6, 26, 7, 19, 0, 2, 0, 0]' : 0.118166}
{'[1, 0, 5, 1, 6, 6, 26, 7, 19, 0, 2, 0, 0]' : 0.118071}
{'[1, 0, 5, 1, 6, 6, 26, 7, 19, 0, 2, 0, 0]' : 0.118069}
{'[1, 0, 5, 1, 6, 6, 26, 7, 19, 0, 2, 0, 0]' : 0.118112}
{'[1, 0, 5, 1, 6, 6, 26, 7, 19, 0, 2, 0, 0]' : 0.11801}
{'[1, 0, 5, 1, 6, 6, 26, 7, 19, 0, 2, 0, 0]' : 0.118033}
{'[1, 0, 5, 1, 6, 6, 26, 7, 19, 0, 2, 0, 0]' : 0.118096}
{'[1, 0, 5, 1, 6, 6, 26, 7, 19, 0, 2, 0, 0]' : 0.118145}
{'[1, 0, 5, 1, 6, 6, 26, 7, 19, 0, 2, 0, 0]' : 0.118217}
{'[1, 0, 5, 1, 6, 6, 26, 7, 19, 0, 2, 0, 0]' : 0.118649}
{'[1, 0, 5, 1, 6, 6, 26, 7, 19, 0, 2, 0, 0]' : 0.118452}
{'[1, 0, 5, 1, 6, 6, 26, 7, 19, 0, 2, 0, 0]' : 0.118425}
{'[1, 0, 5, 1, 6, 6, 26, 7, 19, 0, 2, 0, 0]' : 0.118754}
{'[1, 0, 5, 1, 6, 6, 26, 7, 19, 0, 2, 0, 0]' : 0.118749}
{'[1, 0, 5, 1, 6, 6, 26, 7, 19, 0, 2, 0, 0]' : 0.118166}
{'[1, 0, 5, 1, 6, 6, 26, 7, 19, 0, 2, 0, 0]' : 0.118253}
{'[1, 0, 5, 1, 6, 6, 26, 7, 19, 0, 2, 0, 0]' : 0.118074}
{'[1, 0, 5, 1, 6, 6, 26, 7, 19, 0, 2, 0, 0]' : 0.118076}
{'[1, 0, 5, 1, 6, 6, 26, 7, 19, 0, 2, 0, 0]' : 0.118065}
{'[1, 0, 5, 1, 6, 6, 26, 7, 19, 0, 2, 0, 0]' : 0.118066}
{'[1, 0, 5, 1, 6, 6, 26, 7, 19, 0, 2, 0, 0]' : 0.118088}
{'[1, 0, 5, 1, 6, 6, 26, 7, 19, 0, 2, 0, 0]' : 0.11804}
{'[1, 0, 5, 1, 6, 6, 26, 7, 19, 0, 2, 0, 0]' : 0.118091}
{'[1, 0, 5, 1, 6, 6, 26, 7, 19, 0, 2, 0, 0]' : 0.118095}
{'[1, 0, 5, 1, 6, 6, 26, 7, 19, 0, 2, 0, 0]' : 0.118045}
{'[1, 0, 5, 1, 6, 6, 26, 7, 19, 0, 2, 0, 0]' : 0.118061}
{'[1, 0, 5, 1, 6, 6, 26, 7, 19, 0, 2, 0, 0]' : 0.118117}
{'[1, 0, 5, 1, 6, 6, 26, 7, 19, 0, 2, 0, 0]' : 0.118039}
{'[1, 0, 5, 1, 6, 6, 26, 7, 19, 0, 2, 0, 0]' : 0.118013}
{'[1, 0, 5, 1, 6, 6, 26, 7, 19, 0, 2, 0, 0]' : 0.118258}

out:
 ["{'[1, 0, 5, 1, 6, 6, 26, 7, 19, 0, 2, 0, 0]' : 0.118166}", "{'[1, 0, 5, 1, 6, 6, 26, 7, 19, 0, 2, 0, 0]' : 0.118071}", "{'[1, 0, 5, 1, 6, 6, 26, 7, 19, 0, 2, 0, 0]' : 0.118069}", "{'[1, 0, 5, 1, 6, 6, 26, 7, 19, 0, 2, 0, 0]' : 0.118112}", "{'[1, 0, 5, 1, 6, 6, 26, 7, 19, 0, 2, 0, 0]' : 0.11801}", "{'[1, 0, 5, 1, 6, 6, 26, 7, 19, 0, 2, 0, 0]' : 0.118033}", "{'[1, 0, 5, 1, 6, 6, 26, 7, 19, 0, 2, 0, 0]' : 0.118096}", "{'[1, 0, 5, 1, 6, 6, 26, 7, 19, 0, 2, 0, 0]' : 0.118145}", "{'[1, 0, 5, 1, 6, 6, 26, 7, 19, 0, 2, 0, 0]' : 0.118217}", "{'[1, 0, 5, 1, 6, 6, 26, 7, 19, 0, 2, 0, 0]' : 0.118649}", "{'[1, 0, 5, 1, 6, 6, 26, 7, 19, 0, 2, 0, 0]' : 0.118452}", "{'[1, 0, 5, 1, 6, 6, 26, 7, 19, 0, 2, 0, 0]' : 0.118425}", "{'[1, 0, 5, 1, 6, 6, 26, 7, 19, 0, 2, 0, 0]' : 0.118754}", "{'[1, 0, 5, 1, 6, 6, 26, 7, 19, 0, 2, 0, 0]' : 0.118749}", "{'[1, 0, 5, 1, 6, 6, 26, 7, 19, 0, 2, 0, 0]' : 0.118166}", "{'[1, 0, 5, 1, 6, 6, 26, 7, 19, 0, 2, 0, 0]' : 0.118253}", "{'[1, 0, 5, 1, 6, 6, 26, 7, 19, 0, 2, 0, 0]' : 0.118074}", "{'[1, 0, 5, 1, 6, 6, 26, 7, 19, 0, 2, 0, 0]' : 0.118076}", "{'[1, 0, 5, 1, 6, 6, 26, 7, 19, 0, 2, 0, 0]' : 0.118065}", "{'[1, 0, 5, 1, 6, 6, 26, 7, 19, 0, 2, 0, 0]' : 0.118066}", "{'[1, 0, 5, 1, 6, 6, 26, 7, 19, 0, 2, 0, 0]' : 0.118088}", "{'[1, 0, 5, 1, 6, 6, 26, 7, 19, 0, 2, 0, 0]' : 0.11804}", "{'[1, 0, 5, 1, 6, 6, 26, 7, 19, 0, 2, 0, 0]' : 0.118091}", "{'[1, 0, 5, 1, 6, 6, 26, 7, 19, 0, 2, 0, 0]' : 0.118095}", "{'[1, 0, 5, 1, 6, 6, 26, 7, 19, 0, 2, 0, 0]' : 0.118045}", "{'[1, 0, 5, 1, 6, 6, 26, 7, 19, 0, 2, 0, 0]' : 0.118061}", "{'[1, 0, 5, 1, 6, 6, 26, 7, 19, 0, 2, 0, 0]' : 0.118117}", "{'[1, 0, 5, 1, 6, 6, 26, 7, 19, 0, 2, 0, 0]' : 0.118039}", "{'[1, 0, 5, 1, 6, 6, 26, 7, 19, 0, 2, 0, 0]' : 0.118013}", "{'[1, 0, 5, 1, 6, 6, 26, 7, 19, 0, 2, 0, 0]' : 0.118258}"]
returning from 'run': {'[1, 0, 5, 1, 6, 6, 26, 7, 19, 0, 2, 0, 0]': ([0.118166, 0.118071, 0.118069, 0.118112, 0.11801, 0.118033, 0.118096, 0.118145, 0.118217, 0.118649, 0.118452, 0.118425, 0.118754, 0.118749, 0.118166, 0.118253, 0.118074, 0.118076, 0.118065, 0.118066, 0.118088, 0.11804, 0.118091, 0.118095, 0.118045, 0.118061, 0.118117, 0.118039, 0.118013, 0.118258], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 5, 1, 6, 6, 26, 7, 19, 0, 2, 0, 0]': ([0.118166, 0.118071, 0.118069, 0.118112, 0.11801, 0.118033, 0.118096, 0.118145, 0.118217, 0.118649, 0.118452, 0.118425, 0.118754, 0.118749, 0.118166, 0.118253, 0.118074, 0.118076, 0.118065, 0.118066, 0.118088, 0.11804, 0.118091, 0.118095, 0.118045, 0.118061, 0.118117, 0.118039, 0.118013, 0.118258], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	6
        Additions: 		7142
        Multiplications: 	2150
        Divisions: 		0
        Logical: 		0
        Reads: 			10944
        Writes: 		1136
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest30.exe __orio_perftest30.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest30.exe  
Program Test Output: 
{'[3, 1, 3, 3, 4, 0, 0, 9, 0, 22, 2, 0, 0]' : 0.227897}
{'[3, 1, 3, 3, 4, 0, 0, 9, 0, 22, 2, 0, 0]' : 0.227082}
{'[3, 1, 3, 3, 4, 0, 0, 9, 0, 22, 2, 0, 0]' : 0.204865}
{'[3, 1, 3, 3, 4, 0, 0, 9, 0, 22, 2, 0, 0]' : 0.203215}
{'[3, 1, 3, 3, 4, 0, 0, 9, 0, 22, 2, 0, 0]' : 0.205837}
{'[3, 1, 3, 3, 4, 0, 0, 9, 0, 22, 2, 0, 0]' : 0.207919}
{'[3, 1, 3, 3, 4, 0, 0, 9, 0, 22, 2, 0, 0]' : 0.204507}
{'[3, 1, 3, 3, 4, 0, 0, 9, 0, 22, 2, 0, 0]' : 0.202473}
{'[3, 1, 3, 3, 4, 0, 0, 9, 0, 22, 2, 0, 0]' : 0.203778}
{'[3, 1, 3, 3, 4, 0, 0, 9, 0, 22, 2, 0, 0]' : 0.207142}
{'[3, 1, 3, 3, 4, 0, 0, 9, 0, 22, 2, 0, 0]' : 0.204373}
{'[3, 1, 3, 3, 4, 0, 0, 9, 0, 22, 2, 0, 0]' : 0.203618}
{'[3, 1, 3, 3, 4, 0, 0, 9, 0, 22, 2, 0, 0]' : 0.202831}
{'[3, 1, 3, 3, 4, 0, 0, 9, 0, 22, 2, 0, 0]' : 0.204852}
{'[3, 1, 3, 3, 4, 0, 0, 9, 0, 22, 2, 0, 0]' : 0.208359}
{'[3, 1, 3, 3, 4, 0, 0, 9, 0, 22, 2, 0, 0]' : 0.202153}
{'[3, 1, 3, 3, 4, 0, 0, 9, 0, 22, 2, 0, 0]' : 0.202677}
{'[3, 1, 3, 3, 4, 0, 0, 9, 0, 22, 2, 0, 0]' : 0.203539}
{'[3, 1, 3, 3, 4, 0, 0, 9, 0, 22, 2, 0, 0]' : 0.20416}
{'[3, 1, 3, 3, 4, 0, 0, 9, 0, 22, 2, 0, 0]' : 0.207588}
{'[3, 1, 3, 3, 4, 0, 0, 9, 0, 22, 2, 0, 0]' : 0.203427}
{'[3, 1, 3, 3, 4, 0, 0, 9, 0, 22, 2, 0, 0]' : 0.203494}
{'[3, 1, 3, 3, 4, 0, 0, 9, 0, 22, 2, 0, 0]' : 0.203759}
{'[3, 1, 3, 3, 4, 0, 0, 9, 0, 22, 2, 0, 0]' : 0.203791}
{'[3, 1, 3, 3, 4, 0, 0, 9, 0, 22, 2, 0, 0]' : 0.204522}
{'[3, 1, 3, 3, 4, 0, 0, 9, 0, 22, 2, 0, 0]' : 0.207659}
{'[3, 1, 3, 3, 4, 0, 0, 9, 0, 22, 2, 0, 0]' : 0.202685}
{'[3, 1, 3, 3, 4, 0, 0, 9, 0, 22, 2, 0, 0]' : 0.203045}
{'[3, 1, 3, 3, 4, 0, 0, 9, 0, 22, 2, 0, 0]' : 0.206231}
{'[3, 1, 3, 3, 4, 0, 0, 9, 0, 22, 2, 0, 0]' : 0.206634}

out:
 ["{'[3, 1, 3, 3, 4, 0, 0, 9, 0, 22, 2, 0, 0]' : 0.227897}", "{'[3, 1, 3, 3, 4, 0, 0, 9, 0, 22, 2, 0, 0]' : 0.227082}", "{'[3, 1, 3, 3, 4, 0, 0, 9, 0, 22, 2, 0, 0]' : 0.204865}", "{'[3, 1, 3, 3, 4, 0, 0, 9, 0, 22, 2, 0, 0]' : 0.203215}", "{'[3, 1, 3, 3, 4, 0, 0, 9, 0, 22, 2, 0, 0]' : 0.205837}", "{'[3, 1, 3, 3, 4, 0, 0, 9, 0, 22, 2, 0, 0]' : 0.207919}", "{'[3, 1, 3, 3, 4, 0, 0, 9, 0, 22, 2, 0, 0]' : 0.204507}", "{'[3, 1, 3, 3, 4, 0, 0, 9, 0, 22, 2, 0, 0]' : 0.202473}", "{'[3, 1, 3, 3, 4, 0, 0, 9, 0, 22, 2, 0, 0]' : 0.203778}", "{'[3, 1, 3, 3, 4, 0, 0, 9, 0, 22, 2, 0, 0]' : 0.207142}", "{'[3, 1, 3, 3, 4, 0, 0, 9, 0, 22, 2, 0, 0]' : 0.204373}", "{'[3, 1, 3, 3, 4, 0, 0, 9, 0, 22, 2, 0, 0]' : 0.203618}", "{'[3, 1, 3, 3, 4, 0, 0, 9, 0, 22, 2, 0, 0]' : 0.202831}", "{'[3, 1, 3, 3, 4, 0, 0, 9, 0, 22, 2, 0, 0]' : 0.204852}", "{'[3, 1, 3, 3, 4, 0, 0, 9, 0, 22, 2, 0, 0]' : 0.208359}", "{'[3, 1, 3, 3, 4, 0, 0, 9, 0, 22, 2, 0, 0]' : 0.202153}", "{'[3, 1, 3, 3, 4, 0, 0, 9, 0, 22, 2, 0, 0]' : 0.202677}", "{'[3, 1, 3, 3, 4, 0, 0, 9, 0, 22, 2, 0, 0]' : 0.203539}", "{'[3, 1, 3, 3, 4, 0, 0, 9, 0, 22, 2, 0, 0]' : 0.20416}", "{'[3, 1, 3, 3, 4, 0, 0, 9, 0, 22, 2, 0, 0]' : 0.207588}", "{'[3, 1, 3, 3, 4, 0, 0, 9, 0, 22, 2, 0, 0]' : 0.203427}", "{'[3, 1, 3, 3, 4, 0, 0, 9, 0, 22, 2, 0, 0]' : 0.203494}", "{'[3, 1, 3, 3, 4, 0, 0, 9, 0, 22, 2, 0, 0]' : 0.203759}", "{'[3, 1, 3, 3, 4, 0, 0, 9, 0, 22, 2, 0, 0]' : 0.203791}", "{'[3, 1, 3, 3, 4, 0, 0, 9, 0, 22, 2, 0, 0]' : 0.204522}", "{'[3, 1, 3, 3, 4, 0, 0, 9, 0, 22, 2, 0, 0]' : 0.207659}", "{'[3, 1, 3, 3, 4, 0, 0, 9, 0, 22, 2, 0, 0]' : 0.202685}", "{'[3, 1, 3, 3, 4, 0, 0, 9, 0, 22, 2, 0, 0]' : 0.203045}", "{'[3, 1, 3, 3, 4, 0, 0, 9, 0, 22, 2, 0, 0]' : 0.206231}", "{'[3, 1, 3, 3, 4, 0, 0, 9, 0, 22, 2, 0, 0]' : 0.206634}"]
returning from 'run': {'[3, 1, 3, 3, 4, 0, 0, 9, 0, 22, 2, 0, 0]': ([0.227897, 0.227082, 0.204865, 0.203215, 0.205837, 0.207919, 0.204507, 0.202473, 0.203778, 0.207142, 0.204373, 0.203618, 0.202831, 0.204852, 0.208359, 0.202153, 0.202677, 0.203539, 0.20416, 0.207588, 0.203427, 0.203494, 0.203759, 0.203791, 0.204522, 0.207659, 0.202685, 0.203045, 0.206231, 0.206634], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 1, 3, 3, 4, 0, 0, 9, 0, 22, 2, 0, 0]': ([0.227897, 0.227082, 0.204865, 0.203215, 0.205837, 0.207919, 0.204507, 0.202473, 0.203778, 0.207142, 0.204373, 0.203618, 0.202831, 0.204852, 0.208359, 0.202153, 0.202677, 0.203539, 0.20416, 0.207588, 0.203427, 0.203494, 0.203759, 0.203791, 0.204522, 0.207659, 0.202685, 0.203045, 0.206231, 0.206634], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Complete design, with measurements:
     T1_I T1_J T1_K T2_I T2_J T2_K U1_I U_I U_J U_K RT_I RT_J RT_K cost_mean
50      4    1    2    0    6    5    0   6   5   0    0    2    0 0.1497630
85      6    4    6    5    3    5   12   1   0   3    0    2    0 0.1346321
98      1    2    4    6    2    2   29   2  29   0    0    1    0 0.1366788
154     0    0    3    0    2    2   28  29   0  16    0    1    1 0.2140351
191     1    0    1    1    2    5    6   0  12   2    1    1    0 0.1299337
198     1    6    5    0    4    0   11  27   8   0    1    0    0 0.1228657
212     3    2    6    2    0    0   26   0   8  29    0    0    2 0.2019840
229     1    5    2    4    6    6   29  28   0  28    1    0    1 0.1230172
281     6    2    6    0    2    0   16   0  24  24    1    1    0 0.1139365
347     6    6    1    0    0    3   27   0  23   9    1    0    0 0.1323720
465     2    2    1    6    0    6   22   4   0   0    0    0    2 0.1577449
545     0    6    3    3    5    3   19   0  21   0    0    0    2 0.1888850
573     1    1    3    0    0    0   26   8   0   0    0    0    1 0.2351741
587     3    0    0    5    6    0   22   6   0  28    1    0    1 0.1161127
674     0    1    3    6    0    1    0   0   8   8    1    0    1 0.1109929
737     5    3    0    4    3    2   16   2  10   0    2    0    0 0.2368202
768     6    1    1    6    1    6   22   4  27   0    0    0    2 0.1275634
810     0    3    6    2    2    5   10  27   0  27    0    0    0 0.1959700
821     4    1    0    5    5    0   11  28   0   1    2    0    0 0.2125218
856     6    6    5    4    6    4   29  11   6   0    0    0    1 0.1140030
906     4    5    4    0    6    4    3   7  25   0    0    0    2 0.1286106
1033    5    0    2    4    2    1    1  29  26   0    0    2    0 0.2578447
1049    2    2    0    0    2    5   24   0  14   3    1    0    1 0.1209313
1088    1    5    0    4    6    0    0  12   6   0    0    1    0 0.1276289
1158    0    2    0    0    4    1   20   3   0  10    0    2    0 0.1296208
1162    1    6    1    5    6    6    7   0  26  28    2    0    0 0.2261647
1183    6    0    5    6    3    3    0   5   0  26    0    0    2 0.1354366
1295    5    2    3    6    6    0   29   0   6  19    0    0    0 0.2134664
1339    1    0    5    1    6    6   26   7  19   0    2    0    0 0.1181832
1484    3    1    3    3    4    0    0   9   0  22    2    0    0 0.2061371

Heteroscedasticity Test p-value: 0.670404017439
Regression Step:                Df   Sum Sq  Mean Sq F value  Pr(>F)   
T1_I             1 0.000057 0.000057   0.138 0.73472   
T1_J             1 0.001292 0.001292   3.120 0.17552   
T1_K             1 0.000427 0.000427   1.032 0.38456   
T2_I             1 0.000322 0.000322   0.778 0.44270   
T2_J             1 0.000493 0.000493   1.189 0.35520   
T2_K             1 0.003784 0.003784   9.138 0.05663 . 
U1_I             1 0.000088 0.000088   0.211 0.67689   
U_I              1 0.004293 0.004293  10.366 0.04860 * 
U_J              1 0.000322 0.000322   0.777 0.44309   
U_K              1 0.000738 0.000738   1.781 0.27423   
RT_I             1 0.000117 0.000117   0.282 0.63194   
RT_J             1 0.000001 0.000001   0.003 0.95976   
RT_K             1 0.000606 0.000606   1.463 0.31314   
I(1/(1 + T1_I))  1 0.000003 0.000003   0.007 0.93826   
I(1/(1 + T1_J))  1 0.000527 0.000527   1.272 0.34142   
I(1/(1 + T1_K))  1 0.003831 0.003831   9.250 0.05581 . 
I(1/(1 + T2_I))  1 0.007178 0.007178  17.333 0.02521 * 
I(1/(1 + T2_J))  1 0.000358 0.000358   0.865 0.42086   
I(1/(1 + T2_K))  1 0.001024 0.001024   2.473 0.21383   
I(1/(1 + U1_I))  1 0.007534 0.007534  18.192 0.02364 * 
I(1/(1 + U_I))   1 0.000000 0.000000   0.001 0.97487   
I(1/(1 + U_J))   1 0.000270 0.000270   0.653 0.47816   
I(1/(1 + U_K))   1 0.007618 0.007618  18.396 0.02330 * 
I(1/(1 + RT_I))  1 0.017315 0.017315  41.810 0.00751 **
I(1/(1 + RT_J))  1 0.000898 0.000898   2.168 0.23731   
I(1/(1 + RT_K))  1 0.001872 0.001872   4.520 0.12347   
Residuals        3 0.001242 0.000414                   
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Getting fixed Model Terms
Prf Values: 
{'I(1/(1 + U_J))': 0.47816081267546096, 'I(1/(1 + U_K))': 0.023297855225454765, 'I(1/(1 + T1_J))': 0.34141789782614035, 'I(1/(1 + U1_I))': 0.023644997360391985, 'I(1/(1 + T1_K))': 0.05580970325343835, 'T2_K': 0.05663138177396978, 'T2_J': 0.35520337028742444, 'T2_I': 0.4427038694480331, 'I(1/(1 + T1_I))': 0.9382590725088878, 'RT_K': 0.3131378321525852, 'T1_I': 0.7347183375922702, 'T1_J': 0.17552265882724802, 'T1_K': 0.38455707859272964, 'I(1/(1 + U_I))': 0.9748656234935258, 'I(1/(1 + RT_J))': 0.2373108235084014, 'I(1/(1 + RT_I))': 0.0075052350124613105, 'I(1/(1 + T2_I))': 0.02521057451475483, 'U1_I': 0.6768916102486406, 'I(1/(1 + RT_K))': 0.12347160553599797, 'RT_J': 0.9597621303424732, 'RT_I': 0.6319438676272733, 'U_K': 0.27423302306371045, 'U_J': 0.44308534309783487, 'U_I': 0.0485965631381419, 'I(1/(1 + T2_J))': 0.42085549575861975, 'I(1/(1 + T2_K))': 0.2138344498476117}
Ordered Keys: 
['I(1/(1 + RT_I))', 'I(1/(1 + U_K))', 'I(1/(1 + U1_I))', 'I(1/(1 + T2_I))', 'U_I', 'I(1/(1 + T1_K))', 'T2_K', 'I(1/(1 + RT_K))', 'T1_J', 'I(1/(1 + T2_K))', 'I(1/(1 + RT_J))', 'U_K', 'RT_K', 'I(1/(1 + T1_J))', 'T2_J', 'T1_K', 'I(1/(1 + T2_J))', 'T2_I', 'U_J', 'I(1/(1 + U_J))', 'RT_I', 'U1_I', 'T1_I', 'I(1/(1 + T1_I))', 'RT_J', 'I(1/(1 + U_I))']
Variables within threshold: ['I(1/(1 + RT_I))', 'I(1/(1 + U_K))', 'I(1/(1 + U1_I))', 'I(1/(1 + T2_I))']
Predicting Best Values for: ['I(1/(1 + RT_I))', 'I(1/(1 + U_K))', 'I(1/(1 + U1_I))', 'I(1/(1 + T2_I))']
Using Model: . ~ I(1/(1 + RT_I)) + I(1/(1 + U_K)) + I(1/(1 + U1_I)) + I(1/(1 + T2_I))
Prediction Regression Step:                Df  Sum Sq   Mean Sq F value Pr(>F)
I(1/(1 + RT_I))  1 0.00029 0.0002858   0.120  0.732
I(1/(1 + U_K))   1 0.00000 0.0000009   0.000  0.985
I(1/(1 + U1_I))  1 0.00023 0.0002349   0.098  0.756
I(1/(1 + T2_I))  1 0.00195 0.0019508   0.816  0.375
Residuals       25 0.05974 0.0023896               

Generating valid search space of size 4500 (does not spend evaluations)
Valid coordinates: 900/4500
Valid coordinates: 1800/4500
Valid coordinates: 2700/4500
Valid coordinates: 3600/4500
Valid coordinates: 4500/4500
Valid/Tested configurations: 4500/187640
Generated Search Space:
NULL
Getting Best from Design
Response: ['cost_mean']
Design Names:  [1] "T1_I"      "T1_J"      "T1_K"      "T2_I"      "T2_J"      "T2_K"     
 [7] "U1_I"      "U_I"       "U_J"       "U_K"       "RT_I"      "RT_J"     
[13] "RT_K"      "cost_mean"

Design Response:      cost_mean
50   0.1497630
85   0.1346321
98   0.1366788
154  0.2140351
191  0.1299337
198  0.1228657
212  0.2019840
229  0.1230172
281  0.1139365
347  0.1323720
465  0.1577449
545  0.1888850
573  0.2351741
587  0.1161127
674  0.1109929
737  0.2368202
768  0.1275634
810  0.1959700
821  0.2125218
856  0.1140030
906  0.1286106
1033 0.2578447
1049 0.1209313
1088 0.1276289
1158 0.1296208
1162 0.2261647
1183 0.1354366
1295 0.2134664
1339 0.1181832
1484 0.2061371

Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Getting fixed variables
Getting fixed variables
Prf Values: 
{'I(1/(1 + U_J))': 0.47816081267546096, 'I(1/(1 + U_K))': 0.023297855225454765, 'I(1/(1 + T1_J))': 0.34141789782614035, 'I(1/(1 + U1_I))': 0.023644997360391985, 'I(1/(1 + T1_K))': 0.05580970325343835, 'T2_K': 0.05663138177396978, 'T2_J': 0.35520337028742444, 'T2_I': 0.4427038694480331, 'I(1/(1 + T1_I))': 0.9382590725088878, 'RT_K': 0.3131378321525852, 'T1_I': 0.7347183375922702, 'T1_J': 0.17552265882724802, 'T1_K': 0.38455707859272964, 'I(1/(1 + U_I))': 0.9748656234935258, 'I(1/(1 + RT_J))': 0.2373108235084014, 'I(1/(1 + RT_I))': 0.0075052350124613105, 'I(1/(1 + T2_I))': 0.02521057451475483, 'U1_I': 0.6768916102486406, 'I(1/(1 + RT_K))': 0.12347160553599797, 'RT_J': 0.9597621303424732, 'RT_I': 0.6319438676272733, 'U_K': 0.27423302306371045, 'U_J': 0.44308534309783487, 'U_I': 0.0485965631381419, 'I(1/(1 + T2_J))': 0.42085549575861975, 'I(1/(1 + T2_K))': 0.2138344498476117}
Ordered Keys: 
['I(1/(1 + RT_I))', 'I(1/(1 + U_K))', 'I(1/(1 + U1_I))', 'I(1/(1 + T2_I))', 'U_I', 'I(1/(1 + T1_K))', 'T2_K', 'I(1/(1 + RT_K))', 'T1_J', 'I(1/(1 + T2_K))', 'I(1/(1 + RT_J))', 'U_K', 'RT_K', 'I(1/(1 + T1_J))', 'T2_J', 'T1_K', 'I(1/(1 + T2_J))', 'T2_I', 'U_J', 'I(1/(1 + U_J))', 'RT_I', 'U1_I', 'T1_I', 'I(1/(1 + T1_I))', 'RT_J', 'I(1/(1 + U_I))']
Variables within threshold: ['RT_I', 'U_K', 'U1_I', 'T2_I']
Fixed Variables: {}
Unique Variables: ['RT_I', 'U_K', 'U1_I', 'T2_I']
Pruning Model
Getting fixed variables
Prf Values: 
{'I(1/(1 + U_J))': 0.47816081267546096, 'I(1/(1 + U_K))': 0.023297855225454765, 'I(1/(1 + T1_J))': 0.34141789782614035, 'I(1/(1 + U1_I))': 0.023644997360391985, 'I(1/(1 + T1_K))': 0.05580970325343835, 'T2_K': 0.05663138177396978, 'T2_J': 0.35520337028742444, 'T2_I': 0.4427038694480331, 'I(1/(1 + T1_I))': 0.9382590725088878, 'RT_K': 0.3131378321525852, 'T1_I': 0.7347183375922702, 'T1_J': 0.17552265882724802, 'T1_K': 0.38455707859272964, 'I(1/(1 + U_I))': 0.9748656234935258, 'I(1/(1 + RT_J))': 0.2373108235084014, 'I(1/(1 + RT_I))': 0.0075052350124613105, 'I(1/(1 + T2_I))': 0.02521057451475483, 'U1_I': 0.6768916102486406, 'I(1/(1 + RT_K))': 0.12347160553599797, 'RT_J': 0.9597621303424732, 'RT_I': 0.6319438676272733, 'U_K': 0.27423302306371045, 'U_J': 0.44308534309783487, 'U_I': 0.0485965631381419, 'I(1/(1 + T2_J))': 0.42085549575861975, 'I(1/(1 + T2_K))': 0.2138344498476117}
Ordered Keys: 
['I(1/(1 + RT_I))', 'I(1/(1 + U_K))', 'I(1/(1 + U1_I))', 'I(1/(1 + T2_I))', 'U_I', 'I(1/(1 + T1_K))', 'T2_K', 'I(1/(1 + RT_K))', 'T1_J', 'I(1/(1 + T2_K))', 'I(1/(1 + RT_J))', 'U_K', 'RT_K', 'I(1/(1 + T1_J))', 'T2_J', 'T1_K', 'I(1/(1 + T2_J))', 'T2_I', 'U_J', 'I(1/(1 + U_J))', 'RT_I', 'U1_I', 'T1_I', 'I(1/(1 + T1_I))', 'RT_J', 'I(1/(1 + U_I))']
Variables within threshold: ['RT_I', 'U_K', 'U1_I', 'T2_I']
Best Predicted:      T1_I T1_J T1_K T2_I T2_J T2_K U1_I U_I U_J U_K RT_I RT_J RT_K
2844    6    2    0    0    2    1    0   8   0   1    2    0    0

Best From Design: [0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]
Pruned Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_J', 'T2_K', 'U_I', 'U_J', 'RT_J', 'RT_K']
Pruned Inverse Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_J', 'T2_K', 'U_I', 'U_J', 'RT_J', 'RT_K']
Pruned Interactions: []
Fixed Factors: {'U_K': 1, 'U1_I': 0, 'T2_I': 0, 'RT_I': 2}
Length of requested configs: 1
Result was on Database, Returning Now
Starting Point (-O3):
0.16059526666666663
Predicted Best Point:
[6, 2, 0, 0, 2, 1, 0, 8, 0, 1, 2, 0, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	23
        Max loop nest depth: 	5
        Additions: 		923
        Multiplications: 	336
        Divisions: 		0
        Logical: 		0
        Reads: 			1865
        Writes: 		226
        Comparisons:		23
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest31.exe __orio_perftest31.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest31.exe  
Program Test Output: 
{'[6, 2, 0, 0, 2, 1, 0, 8, 0, 1, 2, 0, 0]' : 0.248297}
{'[6, 2, 0, 0, 2, 1, 0, 8, 0, 1, 2, 0, 0]' : 0.223778}
{'[6, 2, 0, 0, 2, 1, 0, 8, 0, 1, 2, 0, 0]' : 0.215851}
{'[6, 2, 0, 0, 2, 1, 0, 8, 0, 1, 2, 0, 0]' : 0.215023}
{'[6, 2, 0, 0, 2, 1, 0, 8, 0, 1, 2, 0, 0]' : 0.214659}
{'[6, 2, 0, 0, 2, 1, 0, 8, 0, 1, 2, 0, 0]' : 0.214914}
{'[6, 2, 0, 0, 2, 1, 0, 8, 0, 1, 2, 0, 0]' : 0.215159}
{'[6, 2, 0, 0, 2, 1, 0, 8, 0, 1, 2, 0, 0]' : 0.216932}
{'[6, 2, 0, 0, 2, 1, 0, 8, 0, 1, 2, 0, 0]' : 0.214871}
{'[6, 2, 0, 0, 2, 1, 0, 8, 0, 1, 2, 0, 0]' : 0.215533}
{'[6, 2, 0, 0, 2, 1, 0, 8, 0, 1, 2, 0, 0]' : 0.215282}
{'[6, 2, 0, 0, 2, 1, 0, 8, 0, 1, 2, 0, 0]' : 0.215311}
{'[6, 2, 0, 0, 2, 1, 0, 8, 0, 1, 2, 0, 0]' : 0.215397}
{'[6, 2, 0, 0, 2, 1, 0, 8, 0, 1, 2, 0, 0]' : 0.214339}
{'[6, 2, 0, 0, 2, 1, 0, 8, 0, 1, 2, 0, 0]' : 0.21495}
{'[6, 2, 0, 0, 2, 1, 0, 8, 0, 1, 2, 0, 0]' : 0.215254}
{'[6, 2, 0, 0, 2, 1, 0, 8, 0, 1, 2, 0, 0]' : 0.215234}
{'[6, 2, 0, 0, 2, 1, 0, 8, 0, 1, 2, 0, 0]' : 0.214484}
{'[6, 2, 0, 0, 2, 1, 0, 8, 0, 1, 2, 0, 0]' : 0.215358}
{'[6, 2, 0, 0, 2, 1, 0, 8, 0, 1, 2, 0, 0]' : 0.214889}
{'[6, 2, 0, 0, 2, 1, 0, 8, 0, 1, 2, 0, 0]' : 0.214045}
{'[6, 2, 0, 0, 2, 1, 0, 8, 0, 1, 2, 0, 0]' : 0.214736}
{'[6, 2, 0, 0, 2, 1, 0, 8, 0, 1, 2, 0, 0]' : 0.215893}
{'[6, 2, 0, 0, 2, 1, 0, 8, 0, 1, 2, 0, 0]' : 0.216347}
{'[6, 2, 0, 0, 2, 1, 0, 8, 0, 1, 2, 0, 0]' : 0.214669}
{'[6, 2, 0, 0, 2, 1, 0, 8, 0, 1, 2, 0, 0]' : 0.214814}
{'[6, 2, 0, 0, 2, 1, 0, 8, 0, 1, 2, 0, 0]' : 0.215101}
{'[6, 2, 0, 0, 2, 1, 0, 8, 0, 1, 2, 0, 0]' : 0.215686}
{'[6, 2, 0, 0, 2, 1, 0, 8, 0, 1, 2, 0, 0]' : 0.214508}
{'[6, 2, 0, 0, 2, 1, 0, 8, 0, 1, 2, 0, 0]' : 0.215144}

out:
 ["{'[6, 2, 0, 0, 2, 1, 0, 8, 0, 1, 2, 0, 0]' : 0.248297}", "{'[6, 2, 0, 0, 2, 1, 0, 8, 0, 1, 2, 0, 0]' : 0.223778}", "{'[6, 2, 0, 0, 2, 1, 0, 8, 0, 1, 2, 0, 0]' : 0.215851}", "{'[6, 2, 0, 0, 2, 1, 0, 8, 0, 1, 2, 0, 0]' : 0.215023}", "{'[6, 2, 0, 0, 2, 1, 0, 8, 0, 1, 2, 0, 0]' : 0.214659}", "{'[6, 2, 0, 0, 2, 1, 0, 8, 0, 1, 2, 0, 0]' : 0.214914}", "{'[6, 2, 0, 0, 2, 1, 0, 8, 0, 1, 2, 0, 0]' : 0.215159}", "{'[6, 2, 0, 0, 2, 1, 0, 8, 0, 1, 2, 0, 0]' : 0.216932}", "{'[6, 2, 0, 0, 2, 1, 0, 8, 0, 1, 2, 0, 0]' : 0.214871}", "{'[6, 2, 0, 0, 2, 1, 0, 8, 0, 1, 2, 0, 0]' : 0.215533}", "{'[6, 2, 0, 0, 2, 1, 0, 8, 0, 1, 2, 0, 0]' : 0.215282}", "{'[6, 2, 0, 0, 2, 1, 0, 8, 0, 1, 2, 0, 0]' : 0.215311}", "{'[6, 2, 0, 0, 2, 1, 0, 8, 0, 1, 2, 0, 0]' : 0.215397}", "{'[6, 2, 0, 0, 2, 1, 0, 8, 0, 1, 2, 0, 0]' : 0.214339}", "{'[6, 2, 0, 0, 2, 1, 0, 8, 0, 1, 2, 0, 0]' : 0.21495}", "{'[6, 2, 0, 0, 2, 1, 0, 8, 0, 1, 2, 0, 0]' : 0.215254}", "{'[6, 2, 0, 0, 2, 1, 0, 8, 0, 1, 2, 0, 0]' : 0.215234}", "{'[6, 2, 0, 0, 2, 1, 0, 8, 0, 1, 2, 0, 0]' : 0.214484}", "{'[6, 2, 0, 0, 2, 1, 0, 8, 0, 1, 2, 0, 0]' : 0.215358}", "{'[6, 2, 0, 0, 2, 1, 0, 8, 0, 1, 2, 0, 0]' : 0.214889}", "{'[6, 2, 0, 0, 2, 1, 0, 8, 0, 1, 2, 0, 0]' : 0.214045}", "{'[6, 2, 0, 0, 2, 1, 0, 8, 0, 1, 2, 0, 0]' : 0.214736}", "{'[6, 2, 0, 0, 2, 1, 0, 8, 0, 1, 2, 0, 0]' : 0.215893}", "{'[6, 2, 0, 0, 2, 1, 0, 8, 0, 1, 2, 0, 0]' : 0.216347}", "{'[6, 2, 0, 0, 2, 1, 0, 8, 0, 1, 2, 0, 0]' : 0.214669}", "{'[6, 2, 0, 0, 2, 1, 0, 8, 0, 1, 2, 0, 0]' : 0.214814}", "{'[6, 2, 0, 0, 2, 1, 0, 8, 0, 1, 2, 0, 0]' : 0.215101}", "{'[6, 2, 0, 0, 2, 1, 0, 8, 0, 1, 2, 0, 0]' : 0.215686}", "{'[6, 2, 0, 0, 2, 1, 0, 8, 0, 1, 2, 0, 0]' : 0.214508}", "{'[6, 2, 0, 0, 2, 1, 0, 8, 0, 1, 2, 0, 0]' : 0.215144}"]
returning from 'run': {'[6, 2, 0, 0, 2, 1, 0, 8, 0, 1, 2, 0, 0]': ([0.248297, 0.223778, 0.215851, 0.215023, 0.214659, 0.214914, 0.215159, 0.216932, 0.214871, 0.215533, 0.215282, 0.215311, 0.215397, 0.214339, 0.21495, 0.215254, 0.215234, 0.214484, 0.215358, 0.214889, 0.214045, 0.214736, 0.215893, 0.216347, 0.214669, 0.214814, 0.215101, 0.215686, 0.214508, 0.215144], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 2, 0, 0, 2, 1, 0, 8, 0, 1, 2, 0, 0]': ([0.248297, 0.223778, 0.215851, 0.215023, 0.214659, 0.214914, 0.215159, 0.216932, 0.214871, 0.215533, 0.215282, 0.215311, 0.215397, 0.214339, 0.21495, 0.215254, 0.215234, 0.214484, 0.215358, 0.214889, 0.214045, 0.214736, 0.215893, 0.216347, 0.214669, 0.214814, 0.215101, 0.215686, 0.214508, 0.215144], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Design Best Point:
[0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]
Length of requested configs: 1
Result was on Database, Returning Now
Fixed Factors: {'U_K': 1, 'U1_I': 0, 'T2_I': 0, 'RT_I': 2}
Slowdown (Design Best): 0.6911343173667635
Slowdown (Predicted Best): 1.3484120951676035
Budget: 30/180
Updating Global Best: 0.11099289999999998
Current Best Point: 
[0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]
Step 1
Generating valid search space of size 1100 (does not spend evaluations)
Valid coordinates: 220/1100
Valid coordinates: 440/1100
Valid coordinates: 660/1100
Valid coordinates: 880/1100
Valid coordinates: 1100/1100
Valid/Tested configurations: 1100/192216
Generated Search Space:
NULL
Full Model:  ~ T1_I + T1_J + T1_K + T2_J + T2_K + U_I + U_J + RT_J + RT_K + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Clean Info:
Removed Factors: [1] "RT_J" "RT_K"

Removed Inverse Factors: character(0)

Removed Interactions: [1] "(Intercept)"     "RT_J"            "RT_K"            "I(1/(1 + RT_J))"
[5] "I(1/(1 + RT_K))"

New Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_J', 'T2_K', 'U_I', 'U_J']
New Inverse Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_J', 'T2_K', 'U_I', 'U_J']
New Interactions: []
New Fixed Factors: {'RT_K': 0, 'RT_J': 0, 'RT_I': 2, 'U_K': 1, 'T2_I': 0, 'U1_I': 0}
Updated Full Model:  ~ T1_I + T1_J + T1_K + T2_J + T2_K + U_I + U_J + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J))
Fixed Factors: {'RT_K': 0, 'RT_J': 0, 'RT_I': 2, 'U_K': 1, 'T2_I': 0, 'U1_I': 0}
Computing D-Optimal Design
Computing D-Optimal Design with 22 experiments
Design Formula:  ~ T1_I + T1_J + T1_K + T2_J + T2_K + U_I + U_J + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J))
Starting "optFederov" run
Using Search Space:
NULL
Data Dimensions: [1] 1100    7

     T1_I T1_J T1_K T2_J T2_K U_I U_J
14      0    3    1    0    3   0   0
78      0    3    6    2    0   0   5
98      2    0    6    6    5   0   3
125     5    0    0    6    0  27   0
153     0    2    0    0    2   4   0
175     0    0    6    5    6   0  28
204     6    2    3    6    6   0   0
266     5    6    1    0    6   0  25
380     0    6    5    5    0   8   0
460     1    2    1    3    0   0  23
580     1    0    1    0    1  23   0
613     2    3    0    6    6   5   0
624     6    0    1    3    2   0   5
700     5    3    5    1    4   0   0
771     0    1    2    6    6   0  12
894     5    0    3    1    6   3   0
907     0    6    0    4    6  27   0
983     5    0    0    0    0   0  10
1077    5    2    6    0    6  29   0
1084    5    6    3    6    3   0  29
1085    3    2    0    1    3   0  27
1091    0    6    4    0    0   0  29

D-Efficiency Approximation: [1] 0.475

Measuring design of size 22
Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_J', 'T2_K', 'U_I', 'U_J']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		700
        Multiplications: 	264
        Divisions: 		0
        Logical: 		0
        Reads: 			1426
        Writes: 		165
        Comparisons:		15
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest32.exe __orio_perftest32.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest32.exe  
Program Test Output: 
{'[0, 3, 1, 0, 0, 3, 0, 0, 0, 1, 2, 0, 0]' : 0.239625}
{'[0, 3, 1, 0, 0, 3, 0, 0, 0, 1, 2, 0, 0]' : 0.238659}
{'[0, 3, 1, 0, 0, 3, 0, 0, 0, 1, 2, 0, 0]' : 0.22611}
{'[0, 3, 1, 0, 0, 3, 0, 0, 0, 1, 2, 0, 0]' : 0.214062}
{'[0, 3, 1, 0, 0, 3, 0, 0, 0, 1, 2, 0, 0]' : 0.212753}
{'[0, 3, 1, 0, 0, 3, 0, 0, 0, 1, 2, 0, 0]' : 0.214418}
{'[0, 3, 1, 0, 0, 3, 0, 0, 0, 1, 2, 0, 0]' : 0.213189}
{'[0, 3, 1, 0, 0, 3, 0, 0, 0, 1, 2, 0, 0]' : 0.214022}
{'[0, 3, 1, 0, 0, 3, 0, 0, 0, 1, 2, 0, 0]' : 0.213426}
{'[0, 3, 1, 0, 0, 3, 0, 0, 0, 1, 2, 0, 0]' : 0.213745}
{'[0, 3, 1, 0, 0, 3, 0, 0, 0, 1, 2, 0, 0]' : 0.213557}
{'[0, 3, 1, 0, 0, 3, 0, 0, 0, 1, 2, 0, 0]' : 0.213237}
{'[0, 3, 1, 0, 0, 3, 0, 0, 0, 1, 2, 0, 0]' : 0.214636}
{'[0, 3, 1, 0, 0, 3, 0, 0, 0, 1, 2, 0, 0]' : 0.212538}
{'[0, 3, 1, 0, 0, 3, 0, 0, 0, 1, 2, 0, 0]' : 0.213534}
{'[0, 3, 1, 0, 0, 3, 0, 0, 0, 1, 2, 0, 0]' : 0.212898}
{'[0, 3, 1, 0, 0, 3, 0, 0, 0, 1, 2, 0, 0]' : 0.213864}
{'[0, 3, 1, 0, 0, 3, 0, 0, 0, 1, 2, 0, 0]' : 0.215955}
{'[0, 3, 1, 0, 0, 3, 0, 0, 0, 1, 2, 0, 0]' : 0.218087}
{'[0, 3, 1, 0, 0, 3, 0, 0, 0, 1, 2, 0, 0]' : 0.218199}
{'[0, 3, 1, 0, 0, 3, 0, 0, 0, 1, 2, 0, 0]' : 0.217275}
{'[0, 3, 1, 0, 0, 3, 0, 0, 0, 1, 2, 0, 0]' : 0.214237}
{'[0, 3, 1, 0, 0, 3, 0, 0, 0, 1, 2, 0, 0]' : 0.217281}
{'[0, 3, 1, 0, 0, 3, 0, 0, 0, 1, 2, 0, 0]' : 0.217909}
{'[0, 3, 1, 0, 0, 3, 0, 0, 0, 1, 2, 0, 0]' : 0.218137}
{'[0, 3, 1, 0, 0, 3, 0, 0, 0, 1, 2, 0, 0]' : 0.217462}
{'[0, 3, 1, 0, 0, 3, 0, 0, 0, 1, 2, 0, 0]' : 0.217551}
{'[0, 3, 1, 0, 0, 3, 0, 0, 0, 1, 2, 0, 0]' : 0.217523}
{'[0, 3, 1, 0, 0, 3, 0, 0, 0, 1, 2, 0, 0]' : 0.218413}
{'[0, 3, 1, 0, 0, 3, 0, 0, 0, 1, 2, 0, 0]' : 0.217502}

out:
 ["{'[0, 3, 1, 0, 0, 3, 0, 0, 0, 1, 2, 0, 0]' : 0.239625}", "{'[0, 3, 1, 0, 0, 3, 0, 0, 0, 1, 2, 0, 0]' : 0.238659}", "{'[0, 3, 1, 0, 0, 3, 0, 0, 0, 1, 2, 0, 0]' : 0.22611}", "{'[0, 3, 1, 0, 0, 3, 0, 0, 0, 1, 2, 0, 0]' : 0.214062}", "{'[0, 3, 1, 0, 0, 3, 0, 0, 0, 1, 2, 0, 0]' : 0.212753}", "{'[0, 3, 1, 0, 0, 3, 0, 0, 0, 1, 2, 0, 0]' : 0.214418}", "{'[0, 3, 1, 0, 0, 3, 0, 0, 0, 1, 2, 0, 0]' : 0.213189}", "{'[0, 3, 1, 0, 0, 3, 0, 0, 0, 1, 2, 0, 0]' : 0.214022}", "{'[0, 3, 1, 0, 0, 3, 0, 0, 0, 1, 2, 0, 0]' : 0.213426}", "{'[0, 3, 1, 0, 0, 3, 0, 0, 0, 1, 2, 0, 0]' : 0.213745}", "{'[0, 3, 1, 0, 0, 3, 0, 0, 0, 1, 2, 0, 0]' : 0.213557}", "{'[0, 3, 1, 0, 0, 3, 0, 0, 0, 1, 2, 0, 0]' : 0.213237}", "{'[0, 3, 1, 0, 0, 3, 0, 0, 0, 1, 2, 0, 0]' : 0.214636}", "{'[0, 3, 1, 0, 0, 3, 0, 0, 0, 1, 2, 0, 0]' : 0.212538}", "{'[0, 3, 1, 0, 0, 3, 0, 0, 0, 1, 2, 0, 0]' : 0.213534}", "{'[0, 3, 1, 0, 0, 3, 0, 0, 0, 1, 2, 0, 0]' : 0.212898}", "{'[0, 3, 1, 0, 0, 3, 0, 0, 0, 1, 2, 0, 0]' : 0.213864}", "{'[0, 3, 1, 0, 0, 3, 0, 0, 0, 1, 2, 0, 0]' : 0.215955}", "{'[0, 3, 1, 0, 0, 3, 0, 0, 0, 1, 2, 0, 0]' : 0.218087}", "{'[0, 3, 1, 0, 0, 3, 0, 0, 0, 1, 2, 0, 0]' : 0.218199}", "{'[0, 3, 1, 0, 0, 3, 0, 0, 0, 1, 2, 0, 0]' : 0.217275}", "{'[0, 3, 1, 0, 0, 3, 0, 0, 0, 1, 2, 0, 0]' : 0.214237}", "{'[0, 3, 1, 0, 0, 3, 0, 0, 0, 1, 2, 0, 0]' : 0.217281}", "{'[0, 3, 1, 0, 0, 3, 0, 0, 0, 1, 2, 0, 0]' : 0.217909}", "{'[0, 3, 1, 0, 0, 3, 0, 0, 0, 1, 2, 0, 0]' : 0.218137}", "{'[0, 3, 1, 0, 0, 3, 0, 0, 0, 1, 2, 0, 0]' : 0.217462}", "{'[0, 3, 1, 0, 0, 3, 0, 0, 0, 1, 2, 0, 0]' : 0.217551}", "{'[0, 3, 1, 0, 0, 3, 0, 0, 0, 1, 2, 0, 0]' : 0.217523}", "{'[0, 3, 1, 0, 0, 3, 0, 0, 0, 1, 2, 0, 0]' : 0.218413}", "{'[0, 3, 1, 0, 0, 3, 0, 0, 0, 1, 2, 0, 0]' : 0.217502}"]
returning from 'run': {'[0, 3, 1, 0, 0, 3, 0, 0, 0, 1, 2, 0, 0]': ([0.239625, 0.238659, 0.22611, 0.214062, 0.212753, 0.214418, 0.213189, 0.214022, 0.213426, 0.213745, 0.213557, 0.213237, 0.214636, 0.212538, 0.213534, 0.212898, 0.213864, 0.215955, 0.218087, 0.218199, 0.217275, 0.214237, 0.217281, 0.217909, 0.218137, 0.217462, 0.217551, 0.217523, 0.218413, 0.217502], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 3, 1, 0, 0, 3, 0, 0, 0, 1, 2, 0, 0]': ([0.239625, 0.238659, 0.22611, 0.214062, 0.212753, 0.214418, 0.213189, 0.214022, 0.213426, 0.213745, 0.213557, 0.213237, 0.214636, 0.212538, 0.213534, 0.212898, 0.213864, 0.215955, 0.218087, 0.218199, 0.217275, 0.214237, 0.217281, 0.217909, 0.218137, 0.217462, 0.217551, 0.217523, 0.218413, 0.217502], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	17
        Max loop nest depth: 	4
        Additions: 		2010
        Multiplications: 	660
        Divisions: 		0
        Logical: 		0
        Reads: 			3428
        Writes: 		367
        Comparisons:		17
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest33.exe __orio_perftest33.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest33.exe  
Program Test Output: 
{'[0, 3, 6, 0, 2, 0, 0, 0, 5, 1, 2, 0, 0]' : 0.301271}
{'[0, 3, 6, 0, 2, 0, 0, 0, 5, 1, 2, 0, 0]' : 0.28156}
{'[0, 3, 6, 0, 2, 0, 0, 0, 5, 1, 2, 0, 0]' : 0.271124}
{'[0, 3, 6, 0, 2, 0, 0, 0, 5, 1, 2, 0, 0]' : 0.271933}
{'[0, 3, 6, 0, 2, 0, 0, 0, 5, 1, 2, 0, 0]' : 0.273147}
{'[0, 3, 6, 0, 2, 0, 0, 0, 5, 1, 2, 0, 0]' : 0.273277}
{'[0, 3, 6, 0, 2, 0, 0, 0, 5, 1, 2, 0, 0]' : 0.273398}
{'[0, 3, 6, 0, 2, 0, 0, 0, 5, 1, 2, 0, 0]' : 0.273106}
{'[0, 3, 6, 0, 2, 0, 0, 0, 5, 1, 2, 0, 0]' : 0.273251}
{'[0, 3, 6, 0, 2, 0, 0, 0, 5, 1, 2, 0, 0]' : 0.27349}
{'[0, 3, 6, 0, 2, 0, 0, 0, 5, 1, 2, 0, 0]' : 0.271598}
{'[0, 3, 6, 0, 2, 0, 0, 0, 5, 1, 2, 0, 0]' : 0.271317}
{'[0, 3, 6, 0, 2, 0, 0, 0, 5, 1, 2, 0, 0]' : 0.272976}
{'[0, 3, 6, 0, 2, 0, 0, 0, 5, 1, 2, 0, 0]' : 0.273745}
{'[0, 3, 6, 0, 2, 0, 0, 0, 5, 1, 2, 0, 0]' : 0.273449}
{'[0, 3, 6, 0, 2, 0, 0, 0, 5, 1, 2, 0, 0]' : 0.272867}
{'[0, 3, 6, 0, 2, 0, 0, 0, 5, 1, 2, 0, 0]' : 0.273138}
{'[0, 3, 6, 0, 2, 0, 0, 0, 5, 1, 2, 0, 0]' : 0.272996}
{'[0, 3, 6, 0, 2, 0, 0, 0, 5, 1, 2, 0, 0]' : 0.273601}
{'[0, 3, 6, 0, 2, 0, 0, 0, 5, 1, 2, 0, 0]' : 0.272922}
{'[0, 3, 6, 0, 2, 0, 0, 0, 5, 1, 2, 0, 0]' : 0.273651}
{'[0, 3, 6, 0, 2, 0, 0, 0, 5, 1, 2, 0, 0]' : 0.27307}
{'[0, 3, 6, 0, 2, 0, 0, 0, 5, 1, 2, 0, 0]' : 0.273031}
{'[0, 3, 6, 0, 2, 0, 0, 0, 5, 1, 2, 0, 0]' : 0.273003}
{'[0, 3, 6, 0, 2, 0, 0, 0, 5, 1, 2, 0, 0]' : 0.273161}
{'[0, 3, 6, 0, 2, 0, 0, 0, 5, 1, 2, 0, 0]' : 0.273439}
{'[0, 3, 6, 0, 2, 0, 0, 0, 5, 1, 2, 0, 0]' : 0.273204}
{'[0, 3, 6, 0, 2, 0, 0, 0, 5, 1, 2, 0, 0]' : 0.273448}
{'[0, 3, 6, 0, 2, 0, 0, 0, 5, 1, 2, 0, 0]' : 0.273554}
{'[0, 3, 6, 0, 2, 0, 0, 0, 5, 1, 2, 0, 0]' : 0.273079}

out:
 ["{'[0, 3, 6, 0, 2, 0, 0, 0, 5, 1, 2, 0, 0]' : 0.301271}", "{'[0, 3, 6, 0, 2, 0, 0, 0, 5, 1, 2, 0, 0]' : 0.28156}", "{'[0, 3, 6, 0, 2, 0, 0, 0, 5, 1, 2, 0, 0]' : 0.271124}", "{'[0, 3, 6, 0, 2, 0, 0, 0, 5, 1, 2, 0, 0]' : 0.271933}", "{'[0, 3, 6, 0, 2, 0, 0, 0, 5, 1, 2, 0, 0]' : 0.273147}", "{'[0, 3, 6, 0, 2, 0, 0, 0, 5, 1, 2, 0, 0]' : 0.273277}", "{'[0, 3, 6, 0, 2, 0, 0, 0, 5, 1, 2, 0, 0]' : 0.273398}", "{'[0, 3, 6, 0, 2, 0, 0, 0, 5, 1, 2, 0, 0]' : 0.273106}", "{'[0, 3, 6, 0, 2, 0, 0, 0, 5, 1, 2, 0, 0]' : 0.273251}", "{'[0, 3, 6, 0, 2, 0, 0, 0, 5, 1, 2, 0, 0]' : 0.27349}", "{'[0, 3, 6, 0, 2, 0, 0, 0, 5, 1, 2, 0, 0]' : 0.271598}", "{'[0, 3, 6, 0, 2, 0, 0, 0, 5, 1, 2, 0, 0]' : 0.271317}", "{'[0, 3, 6, 0, 2, 0, 0, 0, 5, 1, 2, 0, 0]' : 0.272976}", "{'[0, 3, 6, 0, 2, 0, 0, 0, 5, 1, 2, 0, 0]' : 0.273745}", "{'[0, 3, 6, 0, 2, 0, 0, 0, 5, 1, 2, 0, 0]' : 0.273449}", "{'[0, 3, 6, 0, 2, 0, 0, 0, 5, 1, 2, 0, 0]' : 0.272867}", "{'[0, 3, 6, 0, 2, 0, 0, 0, 5, 1, 2, 0, 0]' : 0.273138}", "{'[0, 3, 6, 0, 2, 0, 0, 0, 5, 1, 2, 0, 0]' : 0.272996}", "{'[0, 3, 6, 0, 2, 0, 0, 0, 5, 1, 2, 0, 0]' : 0.273601}", "{'[0, 3, 6, 0, 2, 0, 0, 0, 5, 1, 2, 0, 0]' : 0.272922}", "{'[0, 3, 6, 0, 2, 0, 0, 0, 5, 1, 2, 0, 0]' : 0.273651}", "{'[0, 3, 6, 0, 2, 0, 0, 0, 5, 1, 2, 0, 0]' : 0.27307}", "{'[0, 3, 6, 0, 2, 0, 0, 0, 5, 1, 2, 0, 0]' : 0.273031}", "{'[0, 3, 6, 0, 2, 0, 0, 0, 5, 1, 2, 0, 0]' : 0.273003}", "{'[0, 3, 6, 0, 2, 0, 0, 0, 5, 1, 2, 0, 0]' : 0.273161}", "{'[0, 3, 6, 0, 2, 0, 0, 0, 5, 1, 2, 0, 0]' : 0.273439}", "{'[0, 3, 6, 0, 2, 0, 0, 0, 5, 1, 2, 0, 0]' : 0.273204}", "{'[0, 3, 6, 0, 2, 0, 0, 0, 5, 1, 2, 0, 0]' : 0.273448}", "{'[0, 3, 6, 0, 2, 0, 0, 0, 5, 1, 2, 0, 0]' : 0.273554}", "{'[0, 3, 6, 0, 2, 0, 0, 0, 5, 1, 2, 0, 0]' : 0.273079}"]
returning from 'run': {'[0, 3, 6, 0, 2, 0, 0, 0, 5, 1, 2, 0, 0]': ([0.301271, 0.28156, 0.271124, 0.271933, 0.273147, 0.273277, 0.273398, 0.273106, 0.273251, 0.27349, 0.271598, 0.271317, 0.272976, 0.273745, 0.273449, 0.272867, 0.273138, 0.272996, 0.273601, 0.272922, 0.273651, 0.27307, 0.273031, 0.273003, 0.273161, 0.273439, 0.273204, 0.273448, 0.273554, 0.273079], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 3, 6, 0, 2, 0, 0, 0, 5, 1, 2, 0, 0]': ([0.301271, 0.28156, 0.271124, 0.271933, 0.273147, 0.273277, 0.273398, 0.273106, 0.273251, 0.27349, 0.271598, 0.271317, 0.272976, 0.273745, 0.273449, 0.272867, 0.273138, 0.272996, 0.273601, 0.272922, 0.273651, 0.27307, 0.273031, 0.273003, 0.273161, 0.273439, 0.273204, 0.273448, 0.273554, 0.273079], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	5
        Additions: 		1565
        Multiplications: 	528
        Divisions: 		0
        Logical: 		0
        Reads: 			2776
        Writes: 		303
        Comparisons:		18
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest34.exe __orio_perftest34.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest34.exe  
Program Test Output: 
{'[2, 0, 6, 0, 6, 5, 0, 0, 3, 1, 2, 0, 0]' : 0.296805}
{'[2, 0, 6, 0, 6, 5, 0, 0, 3, 1, 2, 0, 0]' : 0.294872}
{'[2, 0, 6, 0, 6, 5, 0, 0, 3, 1, 2, 0, 0]' : 0.297015}
{'[2, 0, 6, 0, 6, 5, 0, 0, 3, 1, 2, 0, 0]' : 0.29643}
{'[2, 0, 6, 0, 6, 5, 0, 0, 3, 1, 2, 0, 0]' : 0.295154}
{'[2, 0, 6, 0, 6, 5, 0, 0, 3, 1, 2, 0, 0]' : 0.2965}
{'[2, 0, 6, 0, 6, 5, 0, 0, 3, 1, 2, 0, 0]' : 0.296528}
{'[2, 0, 6, 0, 6, 5, 0, 0, 3, 1, 2, 0, 0]' : 0.297346}
{'[2, 0, 6, 0, 6, 5, 0, 0, 3, 1, 2, 0, 0]' : 0.295785}
{'[2, 0, 6, 0, 6, 5, 0, 0, 3, 1, 2, 0, 0]' : 0.296227}
{'[2, 0, 6, 0, 6, 5, 0, 0, 3, 1, 2, 0, 0]' : 0.296433}
{'[2, 0, 6, 0, 6, 5, 0, 0, 3, 1, 2, 0, 0]' : 0.295285}
{'[2, 0, 6, 0, 6, 5, 0, 0, 3, 1, 2, 0, 0]' : 0.296725}
{'[2, 0, 6, 0, 6, 5, 0, 0, 3, 1, 2, 0, 0]' : 0.289243}
{'[2, 0, 6, 0, 6, 5, 0, 0, 3, 1, 2, 0, 0]' : 0.292651}
{'[2, 0, 6, 0, 6, 5, 0, 0, 3, 1, 2, 0, 0]' : 0.288609}
{'[2, 0, 6, 0, 6, 5, 0, 0, 3, 1, 2, 0, 0]' : 0.291659}
{'[2, 0, 6, 0, 6, 5, 0, 0, 3, 1, 2, 0, 0]' : 0.28843}
{'[2, 0, 6, 0, 6, 5, 0, 0, 3, 1, 2, 0, 0]' : 0.290357}
{'[2, 0, 6, 0, 6, 5, 0, 0, 3, 1, 2, 0, 0]' : 0.289673}
{'[2, 0, 6, 0, 6, 5, 0, 0, 3, 1, 2, 0, 0]' : 0.288929}
{'[2, 0, 6, 0, 6, 5, 0, 0, 3, 1, 2, 0, 0]' : 0.290767}
{'[2, 0, 6, 0, 6, 5, 0, 0, 3, 1, 2, 0, 0]' : 0.288802}
{'[2, 0, 6, 0, 6, 5, 0, 0, 3, 1, 2, 0, 0]' : 0.289545}
{'[2, 0, 6, 0, 6, 5, 0, 0, 3, 1, 2, 0, 0]' : 0.288174}
{'[2, 0, 6, 0, 6, 5, 0, 0, 3, 1, 2, 0, 0]' : 0.289792}
{'[2, 0, 6, 0, 6, 5, 0, 0, 3, 1, 2, 0, 0]' : 0.290431}
{'[2, 0, 6, 0, 6, 5, 0, 0, 3, 1, 2, 0, 0]' : 0.290356}
{'[2, 0, 6, 0, 6, 5, 0, 0, 3, 1, 2, 0, 0]' : 0.293729}
{'[2, 0, 6, 0, 6, 5, 0, 0, 3, 1, 2, 0, 0]' : 0.294783}

out:
 ["{'[2, 0, 6, 0, 6, 5, 0, 0, 3, 1, 2, 0, 0]' : 0.296805}", "{'[2, 0, 6, 0, 6, 5, 0, 0, 3, 1, 2, 0, 0]' : 0.294872}", "{'[2, 0, 6, 0, 6, 5, 0, 0, 3, 1, 2, 0, 0]' : 0.297015}", "{'[2, 0, 6, 0, 6, 5, 0, 0, 3, 1, 2, 0, 0]' : 0.29643}", "{'[2, 0, 6, 0, 6, 5, 0, 0, 3, 1, 2, 0, 0]' : 0.295154}", "{'[2, 0, 6, 0, 6, 5, 0, 0, 3, 1, 2, 0, 0]' : 0.2965}", "{'[2, 0, 6, 0, 6, 5, 0, 0, 3, 1, 2, 0, 0]' : 0.296528}", "{'[2, 0, 6, 0, 6, 5, 0, 0, 3, 1, 2, 0, 0]' : 0.297346}", "{'[2, 0, 6, 0, 6, 5, 0, 0, 3, 1, 2, 0, 0]' : 0.295785}", "{'[2, 0, 6, 0, 6, 5, 0, 0, 3, 1, 2, 0, 0]' : 0.296227}", "{'[2, 0, 6, 0, 6, 5, 0, 0, 3, 1, 2, 0, 0]' : 0.296433}", "{'[2, 0, 6, 0, 6, 5, 0, 0, 3, 1, 2, 0, 0]' : 0.295285}", "{'[2, 0, 6, 0, 6, 5, 0, 0, 3, 1, 2, 0, 0]' : 0.296725}", "{'[2, 0, 6, 0, 6, 5, 0, 0, 3, 1, 2, 0, 0]' : 0.289243}", "{'[2, 0, 6, 0, 6, 5, 0, 0, 3, 1, 2, 0, 0]' : 0.292651}", "{'[2, 0, 6, 0, 6, 5, 0, 0, 3, 1, 2, 0, 0]' : 0.288609}", "{'[2, 0, 6, 0, 6, 5, 0, 0, 3, 1, 2, 0, 0]' : 0.291659}", "{'[2, 0, 6, 0, 6, 5, 0, 0, 3, 1, 2, 0, 0]' : 0.28843}", "{'[2, 0, 6, 0, 6, 5, 0, 0, 3, 1, 2, 0, 0]' : 0.290357}", "{'[2, 0, 6, 0, 6, 5, 0, 0, 3, 1, 2, 0, 0]' : 0.289673}", "{'[2, 0, 6, 0, 6, 5, 0, 0, 3, 1, 2, 0, 0]' : 0.288929}", "{'[2, 0, 6, 0, 6, 5, 0, 0, 3, 1, 2, 0, 0]' : 0.290767}", "{'[2, 0, 6, 0, 6, 5, 0, 0, 3, 1, 2, 0, 0]' : 0.288802}", "{'[2, 0, 6, 0, 6, 5, 0, 0, 3, 1, 2, 0, 0]' : 0.289545}", "{'[2, 0, 6, 0, 6, 5, 0, 0, 3, 1, 2, 0, 0]' : 0.288174}", "{'[2, 0, 6, 0, 6, 5, 0, 0, 3, 1, 2, 0, 0]' : 0.289792}", "{'[2, 0, 6, 0, 6, 5, 0, 0, 3, 1, 2, 0, 0]' : 0.290431}", "{'[2, 0, 6, 0, 6, 5, 0, 0, 3, 1, 2, 0, 0]' : 0.290356}", "{'[2, 0, 6, 0, 6, 5, 0, 0, 3, 1, 2, 0, 0]' : 0.293729}", "{'[2, 0, 6, 0, 6, 5, 0, 0, 3, 1, 2, 0, 0]' : 0.294783}"]
returning from 'run': {'[2, 0, 6, 0, 6, 5, 0, 0, 3, 1, 2, 0, 0]': ([0.296805, 0.294872, 0.297015, 0.29643, 0.295154, 0.2965, 0.296528, 0.297346, 0.295785, 0.296227, 0.296433, 0.295285, 0.296725, 0.289243, 0.292651, 0.288609, 0.291659, 0.28843, 0.290357, 0.289673, 0.288929, 0.290767, 0.288802, 0.289545, 0.288174, 0.289792, 0.290431, 0.290356, 0.293729, 0.294783], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 6, 0, 6, 5, 0, 0, 3, 1, 2, 0, 0]': ([0.296805, 0.294872, 0.297015, 0.29643, 0.295154, 0.2965, 0.296528, 0.297346, 0.295785, 0.296227, 0.296433, 0.295285, 0.296725, 0.289243, 0.292651, 0.288609, 0.291659, 0.28843, 0.290357, 0.289673, 0.288929, 0.290767, 0.288802, 0.289545, 0.288174, 0.289792, 0.290431, 0.290356, 0.293729, 0.294783], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	71
        Max loop nest depth: 	4
        Additions: 		1469
        Multiplications: 	488
        Divisions: 		0
        Logical: 		0
        Reads: 			2933
        Writes: 		417
        Comparisons:		71
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest35.exe __orio_perftest35.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest35.exe  
Program Test Output: 
{'[5, 0, 0, 0, 6, 0, 0, 27, 0, 1, 2, 0, 0]' : 0.205965}
{'[5, 0, 0, 0, 6, 0, 0, 27, 0, 1, 2, 0, 0]' : 0.205287}
{'[5, 0, 0, 0, 6, 0, 0, 27, 0, 1, 2, 0, 0]' : 0.205623}
{'[5, 0, 0, 0, 6, 0, 0, 27, 0, 1, 2, 0, 0]' : 0.205496}
{'[5, 0, 0, 0, 6, 0, 0, 27, 0, 1, 2, 0, 0]' : 0.205065}
{'[5, 0, 0, 0, 6, 0, 0, 27, 0, 1, 2, 0, 0]' : 0.20485}
{'[5, 0, 0, 0, 6, 0, 0, 27, 0, 1, 2, 0, 0]' : 0.204824}
{'[5, 0, 0, 0, 6, 0, 0, 27, 0, 1, 2, 0, 0]' : 0.205854}
{'[5, 0, 0, 0, 6, 0, 0, 27, 0, 1, 2, 0, 0]' : 0.204654}
{'[5, 0, 0, 0, 6, 0, 0, 27, 0, 1, 2, 0, 0]' : 0.205306}
{'[5, 0, 0, 0, 6, 0, 0, 27, 0, 1, 2, 0, 0]' : 0.205636}
{'[5, 0, 0, 0, 6, 0, 0, 27, 0, 1, 2, 0, 0]' : 0.205826}
{'[5, 0, 0, 0, 6, 0, 0, 27, 0, 1, 2, 0, 0]' : 0.205462}
{'[5, 0, 0, 0, 6, 0, 0, 27, 0, 1, 2, 0, 0]' : 0.204963}
{'[5, 0, 0, 0, 6, 0, 0, 27, 0, 1, 2, 0, 0]' : 0.20534}
{'[5, 0, 0, 0, 6, 0, 0, 27, 0, 1, 2, 0, 0]' : 0.204414}
{'[5, 0, 0, 0, 6, 0, 0, 27, 0, 1, 2, 0, 0]' : 0.205359}
{'[5, 0, 0, 0, 6, 0, 0, 27, 0, 1, 2, 0, 0]' : 0.206333}
{'[5, 0, 0, 0, 6, 0, 0, 27, 0, 1, 2, 0, 0]' : 0.204822}
{'[5, 0, 0, 0, 6, 0, 0, 27, 0, 1, 2, 0, 0]' : 0.206067}
{'[5, 0, 0, 0, 6, 0, 0, 27, 0, 1, 2, 0, 0]' : 0.204916}
{'[5, 0, 0, 0, 6, 0, 0, 27, 0, 1, 2, 0, 0]' : 0.205449}
{'[5, 0, 0, 0, 6, 0, 0, 27, 0, 1, 2, 0, 0]' : 0.205628}
{'[5, 0, 0, 0, 6, 0, 0, 27, 0, 1, 2, 0, 0]' : 0.204479}
{'[5, 0, 0, 0, 6, 0, 0, 27, 0, 1, 2, 0, 0]' : 0.205904}
{'[5, 0, 0, 0, 6, 0, 0, 27, 0, 1, 2, 0, 0]' : 0.20476}
{'[5, 0, 0, 0, 6, 0, 0, 27, 0, 1, 2, 0, 0]' : 0.205586}
{'[5, 0, 0, 0, 6, 0, 0, 27, 0, 1, 2, 0, 0]' : 0.205713}
{'[5, 0, 0, 0, 6, 0, 0, 27, 0, 1, 2, 0, 0]' : 0.205083}
{'[5, 0, 0, 0, 6, 0, 0, 27, 0, 1, 2, 0, 0]' : 0.205292}

out:
 ["{'[5, 0, 0, 0, 6, 0, 0, 27, 0, 1, 2, 0, 0]' : 0.205965}", "{'[5, 0, 0, 0, 6, 0, 0, 27, 0, 1, 2, 0, 0]' : 0.205287}", "{'[5, 0, 0, 0, 6, 0, 0, 27, 0, 1, 2, 0, 0]' : 0.205623}", "{'[5, 0, 0, 0, 6, 0, 0, 27, 0, 1, 2, 0, 0]' : 0.205496}", "{'[5, 0, 0, 0, 6, 0, 0, 27, 0, 1, 2, 0, 0]' : 0.205065}", "{'[5, 0, 0, 0, 6, 0, 0, 27, 0, 1, 2, 0, 0]' : 0.20485}", "{'[5, 0, 0, 0, 6, 0, 0, 27, 0, 1, 2, 0, 0]' : 0.204824}", "{'[5, 0, 0, 0, 6, 0, 0, 27, 0, 1, 2, 0, 0]' : 0.205854}", "{'[5, 0, 0, 0, 6, 0, 0, 27, 0, 1, 2, 0, 0]' : 0.204654}", "{'[5, 0, 0, 0, 6, 0, 0, 27, 0, 1, 2, 0, 0]' : 0.205306}", "{'[5, 0, 0, 0, 6, 0, 0, 27, 0, 1, 2, 0, 0]' : 0.205636}", "{'[5, 0, 0, 0, 6, 0, 0, 27, 0, 1, 2, 0, 0]' : 0.205826}", "{'[5, 0, 0, 0, 6, 0, 0, 27, 0, 1, 2, 0, 0]' : 0.205462}", "{'[5, 0, 0, 0, 6, 0, 0, 27, 0, 1, 2, 0, 0]' : 0.204963}", "{'[5, 0, 0, 0, 6, 0, 0, 27, 0, 1, 2, 0, 0]' : 0.20534}", "{'[5, 0, 0, 0, 6, 0, 0, 27, 0, 1, 2, 0, 0]' : 0.204414}", "{'[5, 0, 0, 0, 6, 0, 0, 27, 0, 1, 2, 0, 0]' : 0.205359}", "{'[5, 0, 0, 0, 6, 0, 0, 27, 0, 1, 2, 0, 0]' : 0.206333}", "{'[5, 0, 0, 0, 6, 0, 0, 27, 0, 1, 2, 0, 0]' : 0.204822}", "{'[5, 0, 0, 0, 6, 0, 0, 27, 0, 1, 2, 0, 0]' : 0.206067}", "{'[5, 0, 0, 0, 6, 0, 0, 27, 0, 1, 2, 0, 0]' : 0.204916}", "{'[5, 0, 0, 0, 6, 0, 0, 27, 0, 1, 2, 0, 0]' : 0.205449}", "{'[5, 0, 0, 0, 6, 0, 0, 27, 0, 1, 2, 0, 0]' : 0.205628}", "{'[5, 0, 0, 0, 6, 0, 0, 27, 0, 1, 2, 0, 0]' : 0.204479}", "{'[5, 0, 0, 0, 6, 0, 0, 27, 0, 1, 2, 0, 0]' : 0.205904}", "{'[5, 0, 0, 0, 6, 0, 0, 27, 0, 1, 2, 0, 0]' : 0.20476}", "{'[5, 0, 0, 0, 6, 0, 0, 27, 0, 1, 2, 0, 0]' : 0.205586}", "{'[5, 0, 0, 0, 6, 0, 0, 27, 0, 1, 2, 0, 0]' : 0.205713}", "{'[5, 0, 0, 0, 6, 0, 0, 27, 0, 1, 2, 0, 0]' : 0.205083}", "{'[5, 0, 0, 0, 6, 0, 0, 27, 0, 1, 2, 0, 0]' : 0.205292}"]
returning from 'run': {'[5, 0, 0, 0, 6, 0, 0, 27, 0, 1, 2, 0, 0]': ([0.205965, 0.205287, 0.205623, 0.205496, 0.205065, 0.20485, 0.204824, 0.205854, 0.204654, 0.205306, 0.205636, 0.205826, 0.205462, 0.204963, 0.20534, 0.204414, 0.205359, 0.206333, 0.204822, 0.206067, 0.204916, 0.205449, 0.205628, 0.204479, 0.205904, 0.20476, 0.205586, 0.205713, 0.205083, 0.205292], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 0, 0, 0, 6, 0, 0, 27, 0, 1, 2, 0, 0]': ([0.205965, 0.205287, 0.205623, 0.205496, 0.205065, 0.20485, 0.204824, 0.205854, 0.204654, 0.205306, 0.205636, 0.205826, 0.205462, 0.204963, 0.20534, 0.204414, 0.205359, 0.206333, 0.204822, 0.206067, 0.204916, 0.205449, 0.205628, 0.204479, 0.205904, 0.20476, 0.205586, 0.205713, 0.205083, 0.205292], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	3
        Additions: 		817
        Multiplications: 	304
        Divisions: 		0
        Logical: 		0
        Reads: 			1665
        Writes: 		198
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest36.exe __orio_perftest36.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest36.exe  
Program Test Output: 
{'[0, 2, 0, 0, 0, 2, 0, 4, 0, 1, 2, 0, 0]' : 0.236225}
{'[0, 2, 0, 0, 0, 2, 0, 4, 0, 1, 2, 0, 0]' : 0.236774}
{'[0, 2, 0, 0, 0, 2, 0, 4, 0, 1, 2, 0, 0]' : 0.214663}
{'[0, 2, 0, 0, 0, 2, 0, 4, 0, 1, 2, 0, 0]' : 0.211309}
{'[0, 2, 0, 0, 0, 2, 0, 4, 0, 1, 2, 0, 0]' : 0.214211}
{'[0, 2, 0, 0, 0, 2, 0, 4, 0, 1, 2, 0, 0]' : 0.212983}
{'[0, 2, 0, 0, 0, 2, 0, 4, 0, 1, 2, 0, 0]' : 0.208046}
{'[0, 2, 0, 0, 0, 2, 0, 4, 0, 1, 2, 0, 0]' : 0.211216}
{'[0, 2, 0, 0, 0, 2, 0, 4, 0, 1, 2, 0, 0]' : 0.212427}
{'[0, 2, 0, 0, 0, 2, 0, 4, 0, 1, 2, 0, 0]' : 0.215305}
{'[0, 2, 0, 0, 0, 2, 0, 4, 0, 1, 2, 0, 0]' : 0.213012}
{'[0, 2, 0, 0, 0, 2, 0, 4, 0, 1, 2, 0, 0]' : 0.213166}
{'[0, 2, 0, 0, 0, 2, 0, 4, 0, 1, 2, 0, 0]' : 0.215841}
{'[0, 2, 0, 0, 0, 2, 0, 4, 0, 1, 2, 0, 0]' : 0.216459}
{'[0, 2, 0, 0, 0, 2, 0, 4, 0, 1, 2, 0, 0]' : 0.214025}
{'[0, 2, 0, 0, 0, 2, 0, 4, 0, 1, 2, 0, 0]' : 0.212319}
{'[0, 2, 0, 0, 0, 2, 0, 4, 0, 1, 2, 0, 0]' : 0.215301}
{'[0, 2, 0, 0, 0, 2, 0, 4, 0, 1, 2, 0, 0]' : 0.216595}
{'[0, 2, 0, 0, 0, 2, 0, 4, 0, 1, 2, 0, 0]' : 0.217146}
{'[0, 2, 0, 0, 0, 2, 0, 4, 0, 1, 2, 0, 0]' : 0.216107}
{'[0, 2, 0, 0, 0, 2, 0, 4, 0, 1, 2, 0, 0]' : 0.21354}
{'[0, 2, 0, 0, 0, 2, 0, 4, 0, 1, 2, 0, 0]' : 0.215379}
{'[0, 2, 0, 0, 0, 2, 0, 4, 0, 1, 2, 0, 0]' : 0.216383}
{'[0, 2, 0, 0, 0, 2, 0, 4, 0, 1, 2, 0, 0]' : 0.216391}
{'[0, 2, 0, 0, 0, 2, 0, 4, 0, 1, 2, 0, 0]' : 0.217128}
{'[0, 2, 0, 0, 0, 2, 0, 4, 0, 1, 2, 0, 0]' : 0.216174}
{'[0, 2, 0, 0, 0, 2, 0, 4, 0, 1, 2, 0, 0]' : 0.21622}
{'[0, 2, 0, 0, 0, 2, 0, 4, 0, 1, 2, 0, 0]' : 0.215235}
{'[0, 2, 0, 0, 0, 2, 0, 4, 0, 1, 2, 0, 0]' : 0.216429}
{'[0, 2, 0, 0, 0, 2, 0, 4, 0, 1, 2, 0, 0]' : 0.213447}

out:
 ["{'[0, 2, 0, 0, 0, 2, 0, 4, 0, 1, 2, 0, 0]' : 0.236225}", "{'[0, 2, 0, 0, 0, 2, 0, 4, 0, 1, 2, 0, 0]' : 0.236774}", "{'[0, 2, 0, 0, 0, 2, 0, 4, 0, 1, 2, 0, 0]' : 0.214663}", "{'[0, 2, 0, 0, 0, 2, 0, 4, 0, 1, 2, 0, 0]' : 0.211309}", "{'[0, 2, 0, 0, 0, 2, 0, 4, 0, 1, 2, 0, 0]' : 0.214211}", "{'[0, 2, 0, 0, 0, 2, 0, 4, 0, 1, 2, 0, 0]' : 0.212983}", "{'[0, 2, 0, 0, 0, 2, 0, 4, 0, 1, 2, 0, 0]' : 0.208046}", "{'[0, 2, 0, 0, 0, 2, 0, 4, 0, 1, 2, 0, 0]' : 0.211216}", "{'[0, 2, 0, 0, 0, 2, 0, 4, 0, 1, 2, 0, 0]' : 0.212427}", "{'[0, 2, 0, 0, 0, 2, 0, 4, 0, 1, 2, 0, 0]' : 0.215305}", "{'[0, 2, 0, 0, 0, 2, 0, 4, 0, 1, 2, 0, 0]' : 0.213012}", "{'[0, 2, 0, 0, 0, 2, 0, 4, 0, 1, 2, 0, 0]' : 0.213166}", "{'[0, 2, 0, 0, 0, 2, 0, 4, 0, 1, 2, 0, 0]' : 0.215841}", "{'[0, 2, 0, 0, 0, 2, 0, 4, 0, 1, 2, 0, 0]' : 0.216459}", "{'[0, 2, 0, 0, 0, 2, 0, 4, 0, 1, 2, 0, 0]' : 0.214025}", "{'[0, 2, 0, 0, 0, 2, 0, 4, 0, 1, 2, 0, 0]' : 0.212319}", "{'[0, 2, 0, 0, 0, 2, 0, 4, 0, 1, 2, 0, 0]' : 0.215301}", "{'[0, 2, 0, 0, 0, 2, 0, 4, 0, 1, 2, 0, 0]' : 0.216595}", "{'[0, 2, 0, 0, 0, 2, 0, 4, 0, 1, 2, 0, 0]' : 0.217146}", "{'[0, 2, 0, 0, 0, 2, 0, 4, 0, 1, 2, 0, 0]' : 0.216107}", "{'[0, 2, 0, 0, 0, 2, 0, 4, 0, 1, 2, 0, 0]' : 0.21354}", "{'[0, 2, 0, 0, 0, 2, 0, 4, 0, 1, 2, 0, 0]' : 0.215379}", "{'[0, 2, 0, 0, 0, 2, 0, 4, 0, 1, 2, 0, 0]' : 0.216383}", "{'[0, 2, 0, 0, 0, 2, 0, 4, 0, 1, 2, 0, 0]' : 0.216391}", "{'[0, 2, 0, 0, 0, 2, 0, 4, 0, 1, 2, 0, 0]' : 0.217128}", "{'[0, 2, 0, 0, 0, 2, 0, 4, 0, 1, 2, 0, 0]' : 0.216174}", "{'[0, 2, 0, 0, 0, 2, 0, 4, 0, 1, 2, 0, 0]' : 0.21622}", "{'[0, 2, 0, 0, 0, 2, 0, 4, 0, 1, 2, 0, 0]' : 0.215235}", "{'[0, 2, 0, 0, 0, 2, 0, 4, 0, 1, 2, 0, 0]' : 0.216429}", "{'[0, 2, 0, 0, 0, 2, 0, 4, 0, 1, 2, 0, 0]' : 0.213447}"]
returning from 'run': {'[0, 2, 0, 0, 0, 2, 0, 4, 0, 1, 2, 0, 0]': ([0.236225, 0.236774, 0.214663, 0.211309, 0.214211, 0.212983, 0.208046, 0.211216, 0.212427, 0.215305, 0.213012, 0.213166, 0.215841, 0.216459, 0.214025, 0.212319, 0.215301, 0.216595, 0.217146, 0.216107, 0.21354, 0.215379, 0.216383, 0.216391, 0.217128, 0.216174, 0.21622, 0.215235, 0.216429, 0.213447], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 0, 0, 0, 2, 0, 4, 0, 1, 2, 0, 0]': ([0.236225, 0.236774, 0.214663, 0.211309, 0.214211, 0.212983, 0.208046, 0.211216, 0.212427, 0.215305, 0.213012, 0.213166, 0.215841, 0.216459, 0.214025, 0.212319, 0.215301, 0.216595, 0.217146, 0.216107, 0.21354, 0.215379, 0.216383, 0.216391, 0.217128, 0.216174, 0.21622, 0.215235, 0.216429, 0.213447], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	17
        Max loop nest depth: 	4
        Additions: 		7185
        Multiplications: 	2178
        Divisions: 		0
        Logical: 		0
        Reads: 			11018
        Writes: 		1126
        Comparisons:		17
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest37.exe __orio_perftest37.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest37.exe  
Program Test Output: 
{'[0, 0, 6, 0, 5, 6, 0, 0, 28, 1, 2, 0, 0]' : 0.360549}
{'[0, 0, 6, 0, 5, 6, 0, 0, 28, 1, 2, 0, 0]' : 0.335044}
{'[0, 0, 6, 0, 5, 6, 0, 0, 28, 1, 2, 0, 0]' : 0.327925}
{'[0, 0, 6, 0, 5, 6, 0, 0, 28, 1, 2, 0, 0]' : 0.327929}
{'[0, 0, 6, 0, 5, 6, 0, 0, 28, 1, 2, 0, 0]' : 0.329534}
{'[0, 0, 6, 0, 5, 6, 0, 0, 28, 1, 2, 0, 0]' : 0.320901}
{'[0, 0, 6, 0, 5, 6, 0, 0, 28, 1, 2, 0, 0]' : 0.329031}
{'[0, 0, 6, 0, 5, 6, 0, 0, 28, 1, 2, 0, 0]' : 0.325484}
{'[0, 0, 6, 0, 5, 6, 0, 0, 28, 1, 2, 0, 0]' : 0.333893}
{'[0, 0, 6, 0, 5, 6, 0, 0, 28, 1, 2, 0, 0]' : 0.330591}
{'[0, 0, 6, 0, 5, 6, 0, 0, 28, 1, 2, 0, 0]' : 0.327105}
{'[0, 0, 6, 0, 5, 6, 0, 0, 28, 1, 2, 0, 0]' : 0.32837}
{'[0, 0, 6, 0, 5, 6, 0, 0, 28, 1, 2, 0, 0]' : 0.330859}
{'[0, 0, 6, 0, 5, 6, 0, 0, 28, 1, 2, 0, 0]' : 0.329418}
{'[0, 0, 6, 0, 5, 6, 0, 0, 28, 1, 2, 0, 0]' : 0.325431}
{'[0, 0, 6, 0, 5, 6, 0, 0, 28, 1, 2, 0, 0]' : 0.325062}
{'[0, 0, 6, 0, 5, 6, 0, 0, 28, 1, 2, 0, 0]' : 0.324917}
{'[0, 0, 6, 0, 5, 6, 0, 0, 28, 1, 2, 0, 0]' : 0.324535}
{'[0, 0, 6, 0, 5, 6, 0, 0, 28, 1, 2, 0, 0]' : 0.325462}
{'[0, 0, 6, 0, 5, 6, 0, 0, 28, 1, 2, 0, 0]' : 0.330187}
{'[0, 0, 6, 0, 5, 6, 0, 0, 28, 1, 2, 0, 0]' : 0.333231}
{'[0, 0, 6, 0, 5, 6, 0, 0, 28, 1, 2, 0, 0]' : 0.329485}
{'[0, 0, 6, 0, 5, 6, 0, 0, 28, 1, 2, 0, 0]' : 0.33128}
{'[0, 0, 6, 0, 5, 6, 0, 0, 28, 1, 2, 0, 0]' : 0.329589}
{'[0, 0, 6, 0, 5, 6, 0, 0, 28, 1, 2, 0, 0]' : 0.333575}
{'[0, 0, 6, 0, 5, 6, 0, 0, 28, 1, 2, 0, 0]' : 0.322433}
{'[0, 0, 6, 0, 5, 6, 0, 0, 28, 1, 2, 0, 0]' : 0.324001}
{'[0, 0, 6, 0, 5, 6, 0, 0, 28, 1, 2, 0, 0]' : 0.323147}
{'[0, 0, 6, 0, 5, 6, 0, 0, 28, 1, 2, 0, 0]' : 0.32538}
{'[0, 0, 6, 0, 5, 6, 0, 0, 28, 1, 2, 0, 0]' : 0.317891}

out:
 ["{'[0, 0, 6, 0, 5, 6, 0, 0, 28, 1, 2, 0, 0]' : 0.360549}", "{'[0, 0, 6, 0, 5, 6, 0, 0, 28, 1, 2, 0, 0]' : 0.335044}", "{'[0, 0, 6, 0, 5, 6, 0, 0, 28, 1, 2, 0, 0]' : 0.327925}", "{'[0, 0, 6, 0, 5, 6, 0, 0, 28, 1, 2, 0, 0]' : 0.327929}", "{'[0, 0, 6, 0, 5, 6, 0, 0, 28, 1, 2, 0, 0]' : 0.329534}", "{'[0, 0, 6, 0, 5, 6, 0, 0, 28, 1, 2, 0, 0]' : 0.320901}", "{'[0, 0, 6, 0, 5, 6, 0, 0, 28, 1, 2, 0, 0]' : 0.329031}", "{'[0, 0, 6, 0, 5, 6, 0, 0, 28, 1, 2, 0, 0]' : 0.325484}", "{'[0, 0, 6, 0, 5, 6, 0, 0, 28, 1, 2, 0, 0]' : 0.333893}", "{'[0, 0, 6, 0, 5, 6, 0, 0, 28, 1, 2, 0, 0]' : 0.330591}", "{'[0, 0, 6, 0, 5, 6, 0, 0, 28, 1, 2, 0, 0]' : 0.327105}", "{'[0, 0, 6, 0, 5, 6, 0, 0, 28, 1, 2, 0, 0]' : 0.32837}", "{'[0, 0, 6, 0, 5, 6, 0, 0, 28, 1, 2, 0, 0]' : 0.330859}", "{'[0, 0, 6, 0, 5, 6, 0, 0, 28, 1, 2, 0, 0]' : 0.329418}", "{'[0, 0, 6, 0, 5, 6, 0, 0, 28, 1, 2, 0, 0]' : 0.325431}", "{'[0, 0, 6, 0, 5, 6, 0, 0, 28, 1, 2, 0, 0]' : 0.325062}", "{'[0, 0, 6, 0, 5, 6, 0, 0, 28, 1, 2, 0, 0]' : 0.324917}", "{'[0, 0, 6, 0, 5, 6, 0, 0, 28, 1, 2, 0, 0]' : 0.324535}", "{'[0, 0, 6, 0, 5, 6, 0, 0, 28, 1, 2, 0, 0]' : 0.325462}", "{'[0, 0, 6, 0, 5, 6, 0, 0, 28, 1, 2, 0, 0]' : 0.330187}", "{'[0, 0, 6, 0, 5, 6, 0, 0, 28, 1, 2, 0, 0]' : 0.333231}", "{'[0, 0, 6, 0, 5, 6, 0, 0, 28, 1, 2, 0, 0]' : 0.329485}", "{'[0, 0, 6, 0, 5, 6, 0, 0, 28, 1, 2, 0, 0]' : 0.33128}", "{'[0, 0, 6, 0, 5, 6, 0, 0, 28, 1, 2, 0, 0]' : 0.329589}", "{'[0, 0, 6, 0, 5, 6, 0, 0, 28, 1, 2, 0, 0]' : 0.333575}", "{'[0, 0, 6, 0, 5, 6, 0, 0, 28, 1, 2, 0, 0]' : 0.322433}", "{'[0, 0, 6, 0, 5, 6, 0, 0, 28, 1, 2, 0, 0]' : 0.324001}", "{'[0, 0, 6, 0, 5, 6, 0, 0, 28, 1, 2, 0, 0]' : 0.323147}", "{'[0, 0, 6, 0, 5, 6, 0, 0, 28, 1, 2, 0, 0]' : 0.32538}", "{'[0, 0, 6, 0, 5, 6, 0, 0, 28, 1, 2, 0, 0]' : 0.317891}"]
returning from 'run': {'[0, 0, 6, 0, 5, 6, 0, 0, 28, 1, 2, 0, 0]': ([0.360549, 0.335044, 0.327925, 0.327929, 0.329534, 0.320901, 0.329031, 0.325484, 0.333893, 0.330591, 0.327105, 0.32837, 0.330859, 0.329418, 0.325431, 0.325062, 0.324917, 0.324535, 0.325462, 0.330187, 0.333231, 0.329485, 0.33128, 0.329589, 0.333575, 0.322433, 0.324001, 0.323147, 0.32538, 0.317891], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 6, 0, 5, 6, 0, 0, 28, 1, 2, 0, 0]': ([0.360549, 0.335044, 0.327925, 0.327929, 0.329534, 0.320901, 0.329031, 0.325484, 0.333893, 0.330591, 0.327105, 0.32837, 0.330859, 0.329418, 0.325431, 0.325062, 0.324917, 0.324535, 0.325462, 0.330187, 0.333231, 0.329485, 0.33128, 0.329589, 0.333575, 0.322433, 0.324001, 0.323147, 0.32538, 0.317891], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	5
        Additions: 		711
        Multiplications: 	264
        Divisions: 		0
        Logical: 		0
        Reads: 			1448
        Writes: 		171
        Comparisons:		18
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest38.exe __orio_perftest38.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest38.exe  
Program Test Output: 
{'[6, 2, 3, 0, 6, 6, 0, 0, 0, 1, 2, 0, 0]' : 0.244809}
{'[6, 2, 3, 0, 6, 6, 0, 0, 0, 1, 2, 0, 0]' : 0.23566}
{'[6, 2, 3, 0, 6, 6, 0, 0, 0, 1, 2, 0, 0]' : 0.217527}
{'[6, 2, 3, 0, 6, 6, 0, 0, 0, 1, 2, 0, 0]' : 0.217892}
{'[6, 2, 3, 0, 6, 6, 0, 0, 0, 1, 2, 0, 0]' : 0.21612}
{'[6, 2, 3, 0, 6, 6, 0, 0, 0, 1, 2, 0, 0]' : 0.217168}
{'[6, 2, 3, 0, 6, 6, 0, 0, 0, 1, 2, 0, 0]' : 0.216676}
{'[6, 2, 3, 0, 6, 6, 0, 0, 0, 1, 2, 0, 0]' : 0.215735}
{'[6, 2, 3, 0, 6, 6, 0, 0, 0, 1, 2, 0, 0]' : 0.212081}
{'[6, 2, 3, 0, 6, 6, 0, 0, 0, 1, 2, 0, 0]' : 0.211509}
{'[6, 2, 3, 0, 6, 6, 0, 0, 0, 1, 2, 0, 0]' : 0.215456}
{'[6, 2, 3, 0, 6, 6, 0, 0, 0, 1, 2, 0, 0]' : 0.214754}
{'[6, 2, 3, 0, 6, 6, 0, 0, 0, 1, 2, 0, 0]' : 0.213315}
{'[6, 2, 3, 0, 6, 6, 0, 0, 0, 1, 2, 0, 0]' : 0.217218}
{'[6, 2, 3, 0, 6, 6, 0, 0, 0, 1, 2, 0, 0]' : 0.21682}
{'[6, 2, 3, 0, 6, 6, 0, 0, 0, 1, 2, 0, 0]' : 0.222095}
{'[6, 2, 3, 0, 6, 6, 0, 0, 0, 1, 2, 0, 0]' : 0.217894}
{'[6, 2, 3, 0, 6, 6, 0, 0, 0, 1, 2, 0, 0]' : 0.220362}
{'[6, 2, 3, 0, 6, 6, 0, 0, 0, 1, 2, 0, 0]' : 0.217844}
{'[6, 2, 3, 0, 6, 6, 0, 0, 0, 1, 2, 0, 0]' : 0.217611}
{'[6, 2, 3, 0, 6, 6, 0, 0, 0, 1, 2, 0, 0]' : 0.214235}
{'[6, 2, 3, 0, 6, 6, 0, 0, 0, 1, 2, 0, 0]' : 0.211555}
{'[6, 2, 3, 0, 6, 6, 0, 0, 0, 1, 2, 0, 0]' : 0.216639}
{'[6, 2, 3, 0, 6, 6, 0, 0, 0, 1, 2, 0, 0]' : 0.213363}
{'[6, 2, 3, 0, 6, 6, 0, 0, 0, 1, 2, 0, 0]' : 0.21918}
{'[6, 2, 3, 0, 6, 6, 0, 0, 0, 1, 2, 0, 0]' : 0.21437}
{'[6, 2, 3, 0, 6, 6, 0, 0, 0, 1, 2, 0, 0]' : 0.214034}
{'[6, 2, 3, 0, 6, 6, 0, 0, 0, 1, 2, 0, 0]' : 0.2201}
{'[6, 2, 3, 0, 6, 6, 0, 0, 0, 1, 2, 0, 0]' : 0.217163}
{'[6, 2, 3, 0, 6, 6, 0, 0, 0, 1, 2, 0, 0]' : 0.217364}

out:
 ["{'[6, 2, 3, 0, 6, 6, 0, 0, 0, 1, 2, 0, 0]' : 0.244809}", "{'[6, 2, 3, 0, 6, 6, 0, 0, 0, 1, 2, 0, 0]' : 0.23566}", "{'[6, 2, 3, 0, 6, 6, 0, 0, 0, 1, 2, 0, 0]' : 0.217527}", "{'[6, 2, 3, 0, 6, 6, 0, 0, 0, 1, 2, 0, 0]' : 0.217892}", "{'[6, 2, 3, 0, 6, 6, 0, 0, 0, 1, 2, 0, 0]' : 0.21612}", "{'[6, 2, 3, 0, 6, 6, 0, 0, 0, 1, 2, 0, 0]' : 0.217168}", "{'[6, 2, 3, 0, 6, 6, 0, 0, 0, 1, 2, 0, 0]' : 0.216676}", "{'[6, 2, 3, 0, 6, 6, 0, 0, 0, 1, 2, 0, 0]' : 0.215735}", "{'[6, 2, 3, 0, 6, 6, 0, 0, 0, 1, 2, 0, 0]' : 0.212081}", "{'[6, 2, 3, 0, 6, 6, 0, 0, 0, 1, 2, 0, 0]' : 0.211509}", "{'[6, 2, 3, 0, 6, 6, 0, 0, 0, 1, 2, 0, 0]' : 0.215456}", "{'[6, 2, 3, 0, 6, 6, 0, 0, 0, 1, 2, 0, 0]' : 0.214754}", "{'[6, 2, 3, 0, 6, 6, 0, 0, 0, 1, 2, 0, 0]' : 0.213315}", "{'[6, 2, 3, 0, 6, 6, 0, 0, 0, 1, 2, 0, 0]' : 0.217218}", "{'[6, 2, 3, 0, 6, 6, 0, 0, 0, 1, 2, 0, 0]' : 0.21682}", "{'[6, 2, 3, 0, 6, 6, 0, 0, 0, 1, 2, 0, 0]' : 0.222095}", "{'[6, 2, 3, 0, 6, 6, 0, 0, 0, 1, 2, 0, 0]' : 0.217894}", "{'[6, 2, 3, 0, 6, 6, 0, 0, 0, 1, 2, 0, 0]' : 0.220362}", "{'[6, 2, 3, 0, 6, 6, 0, 0, 0, 1, 2, 0, 0]' : 0.217844}", "{'[6, 2, 3, 0, 6, 6, 0, 0, 0, 1, 2, 0, 0]' : 0.217611}", "{'[6, 2, 3, 0, 6, 6, 0, 0, 0, 1, 2, 0, 0]' : 0.214235}", "{'[6, 2, 3, 0, 6, 6, 0, 0, 0, 1, 2, 0, 0]' : 0.211555}", "{'[6, 2, 3, 0, 6, 6, 0, 0, 0, 1, 2, 0, 0]' : 0.216639}", "{'[6, 2, 3, 0, 6, 6, 0, 0, 0, 1, 2, 0, 0]' : 0.213363}", "{'[6, 2, 3, 0, 6, 6, 0, 0, 0, 1, 2, 0, 0]' : 0.21918}", "{'[6, 2, 3, 0, 6, 6, 0, 0, 0, 1, 2, 0, 0]' : 0.21437}", "{'[6, 2, 3, 0, 6, 6, 0, 0, 0, 1, 2, 0, 0]' : 0.214034}", "{'[6, 2, 3, 0, 6, 6, 0, 0, 0, 1, 2, 0, 0]' : 0.2201}", "{'[6, 2, 3, 0, 6, 6, 0, 0, 0, 1, 2, 0, 0]' : 0.217163}", "{'[6, 2, 3, 0, 6, 6, 0, 0, 0, 1, 2, 0, 0]' : 0.217364}"]
returning from 'run': {'[6, 2, 3, 0, 6, 6, 0, 0, 0, 1, 2, 0, 0]': ([0.244809, 0.23566, 0.217527, 0.217892, 0.21612, 0.217168, 0.216676, 0.215735, 0.212081, 0.211509, 0.215456, 0.214754, 0.213315, 0.217218, 0.21682, 0.222095, 0.217894, 0.220362, 0.217844, 0.217611, 0.214235, 0.211555, 0.216639, 0.213363, 0.21918, 0.21437, 0.214034, 0.2201, 0.217163, 0.217364], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 2, 3, 0, 6, 6, 0, 0, 0, 1, 2, 0, 0]': ([0.244809, 0.23566, 0.217527, 0.217892, 0.21612, 0.217168, 0.216676, 0.215735, 0.212081, 0.211509, 0.215456, 0.214754, 0.213315, 0.217218, 0.21682, 0.222095, 0.217894, 0.220362, 0.217844, 0.217611, 0.214235, 0.211555, 0.216639, 0.213363, 0.21918, 0.21437, 0.214034, 0.2201, 0.217163, 0.217364], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	5
        Additions: 		6515
        Multiplications: 	1980
        Divisions: 		0
        Logical: 		0
        Reads: 			10036
        Writes: 		1029
        Comparisons:		18
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest39.exe __orio_perftest39.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest39.exe  
Program Test Output: 
{'[5, 6, 1, 0, 0, 6, 0, 0, 25, 1, 2, 0, 0]' : 0.297948}
{'[5, 6, 1, 0, 0, 6, 0, 0, 25, 1, 2, 0, 0]' : 0.29885}
{'[5, 6, 1, 0, 0, 6, 0, 0, 25, 1, 2, 0, 0]' : 0.300012}
{'[5, 6, 1, 0, 0, 6, 0, 0, 25, 1, 2, 0, 0]' : 0.303332}
{'[5, 6, 1, 0, 0, 6, 0, 0, 25, 1, 2, 0, 0]' : 0.303932}
{'[5, 6, 1, 0, 0, 6, 0, 0, 25, 1, 2, 0, 0]' : 0.304101}
{'[5, 6, 1, 0, 0, 6, 0, 0, 25, 1, 2, 0, 0]' : 0.303808}
{'[5, 6, 1, 0, 0, 6, 0, 0, 25, 1, 2, 0, 0]' : 0.303453}
{'[5, 6, 1, 0, 0, 6, 0, 0, 25, 1, 2, 0, 0]' : 0.303618}
{'[5, 6, 1, 0, 0, 6, 0, 0, 25, 1, 2, 0, 0]' : 0.303825}
{'[5, 6, 1, 0, 0, 6, 0, 0, 25, 1, 2, 0, 0]' : 0.302014}
{'[5, 6, 1, 0, 0, 6, 0, 0, 25, 1, 2, 0, 0]' : 0.303792}
{'[5, 6, 1, 0, 0, 6, 0, 0, 25, 1, 2, 0, 0]' : 0.3034}
{'[5, 6, 1, 0, 0, 6, 0, 0, 25, 1, 2, 0, 0]' : 0.302406}
{'[5, 6, 1, 0, 0, 6, 0, 0, 25, 1, 2, 0, 0]' : 0.298551}
{'[5, 6, 1, 0, 0, 6, 0, 0, 25, 1, 2, 0, 0]' : 0.298046}
{'[5, 6, 1, 0, 0, 6, 0, 0, 25, 1, 2, 0, 0]' : 0.302984}
{'[5, 6, 1, 0, 0, 6, 0, 0, 25, 1, 2, 0, 0]' : 0.303839}
{'[5, 6, 1, 0, 0, 6, 0, 0, 25, 1, 2, 0, 0]' : 0.303657}
{'[5, 6, 1, 0, 0, 6, 0, 0, 25, 1, 2, 0, 0]' : 0.303214}
{'[5, 6, 1, 0, 0, 6, 0, 0, 25, 1, 2, 0, 0]' : 0.30377}
{'[5, 6, 1, 0, 0, 6, 0, 0, 25, 1, 2, 0, 0]' : 0.303766}
{'[5, 6, 1, 0, 0, 6, 0, 0, 25, 1, 2, 0, 0]' : 0.303521}
{'[5, 6, 1, 0, 0, 6, 0, 0, 25, 1, 2, 0, 0]' : 0.302705}
{'[5, 6, 1, 0, 0, 6, 0, 0, 25, 1, 2, 0, 0]' : 0.301611}
{'[5, 6, 1, 0, 0, 6, 0, 0, 25, 1, 2, 0, 0]' : 0.303425}
{'[5, 6, 1, 0, 0, 6, 0, 0, 25, 1, 2, 0, 0]' : 0.30336}
{'[5, 6, 1, 0, 0, 6, 0, 0, 25, 1, 2, 0, 0]' : 0.304268}
{'[5, 6, 1, 0, 0, 6, 0, 0, 25, 1, 2, 0, 0]' : 0.299146}
{'[5, 6, 1, 0, 0, 6, 0, 0, 25, 1, 2, 0, 0]' : 0.302666}

out:
 ["{'[5, 6, 1, 0, 0, 6, 0, 0, 25, 1, 2, 0, 0]' : 0.297948}", "{'[5, 6, 1, 0, 0, 6, 0, 0, 25, 1, 2, 0, 0]' : 0.29885}", "{'[5, 6, 1, 0, 0, 6, 0, 0, 25, 1, 2, 0, 0]' : 0.300012}", "{'[5, 6, 1, 0, 0, 6, 0, 0, 25, 1, 2, 0, 0]' : 0.303332}", "{'[5, 6, 1, 0, 0, 6, 0, 0, 25, 1, 2, 0, 0]' : 0.303932}", "{'[5, 6, 1, 0, 0, 6, 0, 0, 25, 1, 2, 0, 0]' : 0.304101}", "{'[5, 6, 1, 0, 0, 6, 0, 0, 25, 1, 2, 0, 0]' : 0.303808}", "{'[5, 6, 1, 0, 0, 6, 0, 0, 25, 1, 2, 0, 0]' : 0.303453}", "{'[5, 6, 1, 0, 0, 6, 0, 0, 25, 1, 2, 0, 0]' : 0.303618}", "{'[5, 6, 1, 0, 0, 6, 0, 0, 25, 1, 2, 0, 0]' : 0.303825}", "{'[5, 6, 1, 0, 0, 6, 0, 0, 25, 1, 2, 0, 0]' : 0.302014}", "{'[5, 6, 1, 0, 0, 6, 0, 0, 25, 1, 2, 0, 0]' : 0.303792}", "{'[5, 6, 1, 0, 0, 6, 0, 0, 25, 1, 2, 0, 0]' : 0.3034}", "{'[5, 6, 1, 0, 0, 6, 0, 0, 25, 1, 2, 0, 0]' : 0.302406}", "{'[5, 6, 1, 0, 0, 6, 0, 0, 25, 1, 2, 0, 0]' : 0.298551}", "{'[5, 6, 1, 0, 0, 6, 0, 0, 25, 1, 2, 0, 0]' : 0.298046}", "{'[5, 6, 1, 0, 0, 6, 0, 0, 25, 1, 2, 0, 0]' : 0.302984}", "{'[5, 6, 1, 0, 0, 6, 0, 0, 25, 1, 2, 0, 0]' : 0.303839}", "{'[5, 6, 1, 0, 0, 6, 0, 0, 25, 1, 2, 0, 0]' : 0.303657}", "{'[5, 6, 1, 0, 0, 6, 0, 0, 25, 1, 2, 0, 0]' : 0.303214}", "{'[5, 6, 1, 0, 0, 6, 0, 0, 25, 1, 2, 0, 0]' : 0.30377}", "{'[5, 6, 1, 0, 0, 6, 0, 0, 25, 1, 2, 0, 0]' : 0.303766}", "{'[5, 6, 1, 0, 0, 6, 0, 0, 25, 1, 2, 0, 0]' : 0.303521}", "{'[5, 6, 1, 0, 0, 6, 0, 0, 25, 1, 2, 0, 0]' : 0.302705}", "{'[5, 6, 1, 0, 0, 6, 0, 0, 25, 1, 2, 0, 0]' : 0.301611}", "{'[5, 6, 1, 0, 0, 6, 0, 0, 25, 1, 2, 0, 0]' : 0.303425}", "{'[5, 6, 1, 0, 0, 6, 0, 0, 25, 1, 2, 0, 0]' : 0.30336}", "{'[5, 6, 1, 0, 0, 6, 0, 0, 25, 1, 2, 0, 0]' : 0.304268}", "{'[5, 6, 1, 0, 0, 6, 0, 0, 25, 1, 2, 0, 0]' : 0.299146}", "{'[5, 6, 1, 0, 0, 6, 0, 0, 25, 1, 2, 0, 0]' : 0.302666}"]
returning from 'run': {'[5, 6, 1, 0, 0, 6, 0, 0, 25, 1, 2, 0, 0]': ([0.297948, 0.29885, 0.300012, 0.303332, 0.303932, 0.304101, 0.303808, 0.303453, 0.303618, 0.303825, 0.302014, 0.303792, 0.3034, 0.302406, 0.298551, 0.298046, 0.302984, 0.303839, 0.303657, 0.303214, 0.30377, 0.303766, 0.303521, 0.302705, 0.301611, 0.303425, 0.30336, 0.304268, 0.299146, 0.302666], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 6, 1, 0, 0, 6, 0, 0, 25, 1, 2, 0, 0]': ([0.297948, 0.29885, 0.300012, 0.303332, 0.303932, 0.304101, 0.303808, 0.303453, 0.303618, 0.303825, 0.302014, 0.303792, 0.3034, 0.302406, 0.298551, 0.298046, 0.302984, 0.303839, 0.303657, 0.303214, 0.30377, 0.303766, 0.303521, 0.302705, 0.301611, 0.303425, 0.30336, 0.304268, 0.299146, 0.302666], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	4
        Additions: 		910
        Multiplications: 	336
        Divisions: 		0
        Logical: 		0
        Reads: 			1854
        Writes: 		224
        Comparisons:		22
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest40.exe __orio_perftest40.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest40.exe  
Program Test Output: 
{'[0, 6, 5, 0, 5, 0, 0, 8, 0, 1, 2, 0, 0]' : 0.248206}
{'[0, 6, 5, 0, 5, 0, 0, 8, 0, 1, 2, 0, 0]' : 0.245933}
{'[0, 6, 5, 0, 5, 0, 0, 8, 0, 1, 2, 0, 0]' : 0.226663}
{'[0, 6, 5, 0, 5, 0, 0, 8, 0, 1, 2, 0, 0]' : 0.226371}
{'[0, 6, 5, 0, 5, 0, 0, 8, 0, 1, 2, 0, 0]' : 0.222954}
{'[0, 6, 5, 0, 5, 0, 0, 8, 0, 1, 2, 0, 0]' : 0.224853}
{'[0, 6, 5, 0, 5, 0, 0, 8, 0, 1, 2, 0, 0]' : 0.225901}
{'[0, 6, 5, 0, 5, 0, 0, 8, 0, 1, 2, 0, 0]' : 0.225837}
{'[0, 6, 5, 0, 5, 0, 0, 8, 0, 1, 2, 0, 0]' : 0.224657}
{'[0, 6, 5, 0, 5, 0, 0, 8, 0, 1, 2, 0, 0]' : 0.223666}
{'[0, 6, 5, 0, 5, 0, 0, 8, 0, 1, 2, 0, 0]' : 0.225748}
{'[0, 6, 5, 0, 5, 0, 0, 8, 0, 1, 2, 0, 0]' : 0.223299}
{'[0, 6, 5, 0, 5, 0, 0, 8, 0, 1, 2, 0, 0]' : 0.226051}
{'[0, 6, 5, 0, 5, 0, 0, 8, 0, 1, 2, 0, 0]' : 0.225042}
{'[0, 6, 5, 0, 5, 0, 0, 8, 0, 1, 2, 0, 0]' : 0.225383}
{'[0, 6, 5, 0, 5, 0, 0, 8, 0, 1, 2, 0, 0]' : 0.226375}
{'[0, 6, 5, 0, 5, 0, 0, 8, 0, 1, 2, 0, 0]' : 0.226416}
{'[0, 6, 5, 0, 5, 0, 0, 8, 0, 1, 2, 0, 0]' : 0.222061}
{'[0, 6, 5, 0, 5, 0, 0, 8, 0, 1, 2, 0, 0]' : 0.224561}
{'[0, 6, 5, 0, 5, 0, 0, 8, 0, 1, 2, 0, 0]' : 0.224775}
{'[0, 6, 5, 0, 5, 0, 0, 8, 0, 1, 2, 0, 0]' : 0.225221}
{'[0, 6, 5, 0, 5, 0, 0, 8, 0, 1, 2, 0, 0]' : 0.225054}
{'[0, 6, 5, 0, 5, 0, 0, 8, 0, 1, 2, 0, 0]' : 0.221356}
{'[0, 6, 5, 0, 5, 0, 0, 8, 0, 1, 2, 0, 0]' : 0.226423}
{'[0, 6, 5, 0, 5, 0, 0, 8, 0, 1, 2, 0, 0]' : 0.226955}
{'[0, 6, 5, 0, 5, 0, 0, 8, 0, 1, 2, 0, 0]' : 0.224903}
{'[0, 6, 5, 0, 5, 0, 0, 8, 0, 1, 2, 0, 0]' : 0.222582}
{'[0, 6, 5, 0, 5, 0, 0, 8, 0, 1, 2, 0, 0]' : 0.223584}
{'[0, 6, 5, 0, 5, 0, 0, 8, 0, 1, 2, 0, 0]' : 0.224463}
{'[0, 6, 5, 0, 5, 0, 0, 8, 0, 1, 2, 0, 0]' : 0.224337}

out:
 ["{'[0, 6, 5, 0, 5, 0, 0, 8, 0, 1, 2, 0, 0]' : 0.248206}", "{'[0, 6, 5, 0, 5, 0, 0, 8, 0, 1, 2, 0, 0]' : 0.245933}", "{'[0, 6, 5, 0, 5, 0, 0, 8, 0, 1, 2, 0, 0]' : 0.226663}", "{'[0, 6, 5, 0, 5, 0, 0, 8, 0, 1, 2, 0, 0]' : 0.226371}", "{'[0, 6, 5, 0, 5, 0, 0, 8, 0, 1, 2, 0, 0]' : 0.222954}", "{'[0, 6, 5, 0, 5, 0, 0, 8, 0, 1, 2, 0, 0]' : 0.224853}", "{'[0, 6, 5, 0, 5, 0, 0, 8, 0, 1, 2, 0, 0]' : 0.225901}", "{'[0, 6, 5, 0, 5, 0, 0, 8, 0, 1, 2, 0, 0]' : 0.225837}", "{'[0, 6, 5, 0, 5, 0, 0, 8, 0, 1, 2, 0, 0]' : 0.224657}", "{'[0, 6, 5, 0, 5, 0, 0, 8, 0, 1, 2, 0, 0]' : 0.223666}", "{'[0, 6, 5, 0, 5, 0, 0, 8, 0, 1, 2, 0, 0]' : 0.225748}", "{'[0, 6, 5, 0, 5, 0, 0, 8, 0, 1, 2, 0, 0]' : 0.223299}", "{'[0, 6, 5, 0, 5, 0, 0, 8, 0, 1, 2, 0, 0]' : 0.226051}", "{'[0, 6, 5, 0, 5, 0, 0, 8, 0, 1, 2, 0, 0]' : 0.225042}", "{'[0, 6, 5, 0, 5, 0, 0, 8, 0, 1, 2, 0, 0]' : 0.225383}", "{'[0, 6, 5, 0, 5, 0, 0, 8, 0, 1, 2, 0, 0]' : 0.226375}", "{'[0, 6, 5, 0, 5, 0, 0, 8, 0, 1, 2, 0, 0]' : 0.226416}", "{'[0, 6, 5, 0, 5, 0, 0, 8, 0, 1, 2, 0, 0]' : 0.222061}", "{'[0, 6, 5, 0, 5, 0, 0, 8, 0, 1, 2, 0, 0]' : 0.224561}", "{'[0, 6, 5, 0, 5, 0, 0, 8, 0, 1, 2, 0, 0]' : 0.224775}", "{'[0, 6, 5, 0, 5, 0, 0, 8, 0, 1, 2, 0, 0]' : 0.225221}", "{'[0, 6, 5, 0, 5, 0, 0, 8, 0, 1, 2, 0, 0]' : 0.225054}", "{'[0, 6, 5, 0, 5, 0, 0, 8, 0, 1, 2, 0, 0]' : 0.221356}", "{'[0, 6, 5, 0, 5, 0, 0, 8, 0, 1, 2, 0, 0]' : 0.226423}", "{'[0, 6, 5, 0, 5, 0, 0, 8, 0, 1, 2, 0, 0]' : 0.226955}", "{'[0, 6, 5, 0, 5, 0, 0, 8, 0, 1, 2, 0, 0]' : 0.224903}", "{'[0, 6, 5, 0, 5, 0, 0, 8, 0, 1, 2, 0, 0]' : 0.222582}", "{'[0, 6, 5, 0, 5, 0, 0, 8, 0, 1, 2, 0, 0]' : 0.223584}", "{'[0, 6, 5, 0, 5, 0, 0, 8, 0, 1, 2, 0, 0]' : 0.224463}", "{'[0, 6, 5, 0, 5, 0, 0, 8, 0, 1, 2, 0, 0]' : 0.224337}"]
returning from 'run': {'[0, 6, 5, 0, 5, 0, 0, 8, 0, 1, 2, 0, 0]': ([0.248206, 0.245933, 0.226663, 0.226371, 0.222954, 0.224853, 0.225901, 0.225837, 0.224657, 0.223666, 0.225748, 0.223299, 0.226051, 0.225042, 0.225383, 0.226375, 0.226416, 0.222061, 0.224561, 0.224775, 0.225221, 0.225054, 0.221356, 0.226423, 0.226955, 0.224903, 0.222582, 0.223584, 0.224463, 0.224337], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 5, 0, 5, 0, 0, 8, 0, 1, 2, 0, 0]': ([0.248206, 0.245933, 0.226663, 0.226371, 0.222954, 0.224853, 0.225901, 0.225837, 0.224657, 0.223666, 0.225748, 0.223299, 0.226051, 0.225042, 0.225383, 0.226375, 0.226416, 0.222061, 0.224561, 0.224775, 0.225221, 0.225054, 0.221356, 0.226423, 0.226955, 0.224903, 0.222582, 0.223584, 0.224463, 0.224337], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	5
        Additions: 		6065
        Multiplications: 	1848
        Divisions: 		0
        Logical: 		0
        Reads: 			9376
        Writes: 		963
        Comparisons:		18
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest41.exe __orio_perftest41.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest41.exe  
Program Test Output: 
{'[1, 2, 1, 0, 3, 0, 0, 0, 23, 1, 2, 0, 0]' : 0.26103}
{'[1, 2, 1, 0, 3, 0, 0, 0, 23, 1, 2, 0, 0]' : 0.258974}
{'[1, 2, 1, 0, 3, 0, 0, 0, 23, 1, 2, 0, 0]' : 0.260964}
{'[1, 2, 1, 0, 3, 0, 0, 0, 23, 1, 2, 0, 0]' : 0.261049}
{'[1, 2, 1, 0, 3, 0, 0, 0, 23, 1, 2, 0, 0]' : 0.258569}
{'[1, 2, 1, 0, 3, 0, 0, 0, 23, 1, 2, 0, 0]' : 0.258166}
{'[1, 2, 1, 0, 3, 0, 0, 0, 23, 1, 2, 0, 0]' : 0.260981}
{'[1, 2, 1, 0, 3, 0, 0, 0, 23, 1, 2, 0, 0]' : 0.257039}
{'[1, 2, 1, 0, 3, 0, 0, 0, 23, 1, 2, 0, 0]' : 0.24554}
{'[1, 2, 1, 0, 3, 0, 0, 0, 23, 1, 2, 0, 0]' : 0.250509}
{'[1, 2, 1, 0, 3, 0, 0, 0, 23, 1, 2, 0, 0]' : 0.253641}
{'[1, 2, 1, 0, 3, 0, 0, 0, 23, 1, 2, 0, 0]' : 0.258305}
{'[1, 2, 1, 0, 3, 0, 0, 0, 23, 1, 2, 0, 0]' : 0.261038}
{'[1, 2, 1, 0, 3, 0, 0, 0, 23, 1, 2, 0, 0]' : 0.260251}
{'[1, 2, 1, 0, 3, 0, 0, 0, 23, 1, 2, 0, 0]' : 0.261254}
{'[1, 2, 1, 0, 3, 0, 0, 0, 23, 1, 2, 0, 0]' : 0.261002}
{'[1, 2, 1, 0, 3, 0, 0, 0, 23, 1, 2, 0, 0]' : 0.260958}
{'[1, 2, 1, 0, 3, 0, 0, 0, 23, 1, 2, 0, 0]' : 0.261031}
{'[1, 2, 1, 0, 3, 0, 0, 0, 23, 1, 2, 0, 0]' : 0.260975}
{'[1, 2, 1, 0, 3, 0, 0, 0, 23, 1, 2, 0, 0]' : 0.261009}
{'[1, 2, 1, 0, 3, 0, 0, 0, 23, 1, 2, 0, 0]' : 0.256537}
{'[1, 2, 1, 0, 3, 0, 0, 0, 23, 1, 2, 0, 0]' : 0.260982}
{'[1, 2, 1, 0, 3, 0, 0, 0, 23, 1, 2, 0, 0]' : 0.261177}
{'[1, 2, 1, 0, 3, 0, 0, 0, 23, 1, 2, 0, 0]' : 0.260965}
{'[1, 2, 1, 0, 3, 0, 0, 0, 23, 1, 2, 0, 0]' : 0.261015}
{'[1, 2, 1, 0, 3, 0, 0, 0, 23, 1, 2, 0, 0]' : 0.261013}
{'[1, 2, 1, 0, 3, 0, 0, 0, 23, 1, 2, 0, 0]' : 0.260999}
{'[1, 2, 1, 0, 3, 0, 0, 0, 23, 1, 2, 0, 0]' : 0.260609}
{'[1, 2, 1, 0, 3, 0, 0, 0, 23, 1, 2, 0, 0]' : 0.257107}
{'[1, 2, 1, 0, 3, 0, 0, 0, 23, 1, 2, 0, 0]' : 0.260968}

out:
 ["{'[1, 2, 1, 0, 3, 0, 0, 0, 23, 1, 2, 0, 0]' : 0.26103}", "{'[1, 2, 1, 0, 3, 0, 0, 0, 23, 1, 2, 0, 0]' : 0.258974}", "{'[1, 2, 1, 0, 3, 0, 0, 0, 23, 1, 2, 0, 0]' : 0.260964}", "{'[1, 2, 1, 0, 3, 0, 0, 0, 23, 1, 2, 0, 0]' : 0.261049}", "{'[1, 2, 1, 0, 3, 0, 0, 0, 23, 1, 2, 0, 0]' : 0.258569}", "{'[1, 2, 1, 0, 3, 0, 0, 0, 23, 1, 2, 0, 0]' : 0.258166}", "{'[1, 2, 1, 0, 3, 0, 0, 0, 23, 1, 2, 0, 0]' : 0.260981}", "{'[1, 2, 1, 0, 3, 0, 0, 0, 23, 1, 2, 0, 0]' : 0.257039}", "{'[1, 2, 1, 0, 3, 0, 0, 0, 23, 1, 2, 0, 0]' : 0.24554}", "{'[1, 2, 1, 0, 3, 0, 0, 0, 23, 1, 2, 0, 0]' : 0.250509}", "{'[1, 2, 1, 0, 3, 0, 0, 0, 23, 1, 2, 0, 0]' : 0.253641}", "{'[1, 2, 1, 0, 3, 0, 0, 0, 23, 1, 2, 0, 0]' : 0.258305}", "{'[1, 2, 1, 0, 3, 0, 0, 0, 23, 1, 2, 0, 0]' : 0.261038}", "{'[1, 2, 1, 0, 3, 0, 0, 0, 23, 1, 2, 0, 0]' : 0.260251}", "{'[1, 2, 1, 0, 3, 0, 0, 0, 23, 1, 2, 0, 0]' : 0.261254}", "{'[1, 2, 1, 0, 3, 0, 0, 0, 23, 1, 2, 0, 0]' : 0.261002}", "{'[1, 2, 1, 0, 3, 0, 0, 0, 23, 1, 2, 0, 0]' : 0.260958}", "{'[1, 2, 1, 0, 3, 0, 0, 0, 23, 1, 2, 0, 0]' : 0.261031}", "{'[1, 2, 1, 0, 3, 0, 0, 0, 23, 1, 2, 0, 0]' : 0.260975}", "{'[1, 2, 1, 0, 3, 0, 0, 0, 23, 1, 2, 0, 0]' : 0.261009}", "{'[1, 2, 1, 0, 3, 0, 0, 0, 23, 1, 2, 0, 0]' : 0.256537}", "{'[1, 2, 1, 0, 3, 0, 0, 0, 23, 1, 2, 0, 0]' : 0.260982}", "{'[1, 2, 1, 0, 3, 0, 0, 0, 23, 1, 2, 0, 0]' : 0.261177}", "{'[1, 2, 1, 0, 3, 0, 0, 0, 23, 1, 2, 0, 0]' : 0.260965}", "{'[1, 2, 1, 0, 3, 0, 0, 0, 23, 1, 2, 0, 0]' : 0.261015}", "{'[1, 2, 1, 0, 3, 0, 0, 0, 23, 1, 2, 0, 0]' : 0.261013}", "{'[1, 2, 1, 0, 3, 0, 0, 0, 23, 1, 2, 0, 0]' : 0.260999}", "{'[1, 2, 1, 0, 3, 0, 0, 0, 23, 1, 2, 0, 0]' : 0.260609}", "{'[1, 2, 1, 0, 3, 0, 0, 0, 23, 1, 2, 0, 0]' : 0.257107}", "{'[1, 2, 1, 0, 3, 0, 0, 0, 23, 1, 2, 0, 0]' : 0.260968}"]
returning from 'run': {'[1, 2, 1, 0, 3, 0, 0, 0, 23, 1, 2, 0, 0]': ([0.26103, 0.258974, 0.260964, 0.261049, 0.258569, 0.258166, 0.260981, 0.257039, 0.24554, 0.250509, 0.253641, 0.258305, 0.261038, 0.260251, 0.261254, 0.261002, 0.260958, 0.261031, 0.260975, 0.261009, 0.256537, 0.260982, 0.261177, 0.260965, 0.261015, 0.261013, 0.260999, 0.260609, 0.257107, 0.260968], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 2, 1, 0, 3, 0, 0, 0, 23, 1, 2, 0, 0]': ([0.26103, 0.258974, 0.260964, 0.261049, 0.258569, 0.258166, 0.260981, 0.257039, 0.24554, 0.250509, 0.253641, 0.258305, 0.261038, 0.260251, 0.261254, 0.261002, 0.260958, 0.261031, 0.260975, 0.261009, 0.256537, 0.260982, 0.261177, 0.260965, 0.261015, 0.261013, 0.260999, 0.260609, 0.257107, 0.260968], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	5
        Additions: 		1229
        Multiplications: 	456
        Divisions: 		0
        Logical: 		0
        Reads: 			2474
        Writes: 		295
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest42.exe __orio_perftest42.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest42.exe  
Program Test Output: 
{'[1, 0, 1, 0, 0, 1, 0, 23, 0, 1, 2, 0, 0]' : 0.189765}
{'[1, 0, 1, 0, 0, 1, 0, 23, 0, 1, 2, 0, 0]' : 0.190017}
{'[1, 0, 1, 0, 0, 1, 0, 23, 0, 1, 2, 0, 0]' : 0.189865}
{'[1, 0, 1, 0, 0, 1, 0, 23, 0, 1, 2, 0, 0]' : 0.189554}
{'[1, 0, 1, 0, 0, 1, 0, 23, 0, 1, 2, 0, 0]' : 0.184587}
{'[1, 0, 1, 0, 0, 1, 0, 23, 0, 1, 2, 0, 0]' : 0.184371}
{'[1, 0, 1, 0, 0, 1, 0, 23, 0, 1, 2, 0, 0]' : 0.18553}
{'[1, 0, 1, 0, 0, 1, 0, 23, 0, 1, 2, 0, 0]' : 0.189562}
{'[1, 0, 1, 0, 0, 1, 0, 23, 0, 1, 2, 0, 0]' : 0.189531}
{'[1, 0, 1, 0, 0, 1, 0, 23, 0, 1, 2, 0, 0]' : 0.189544}
{'[1, 0, 1, 0, 0, 1, 0, 23, 0, 1, 2, 0, 0]' : 0.189511}
{'[1, 0, 1, 0, 0, 1, 0, 23, 0, 1, 2, 0, 0]' : 0.189511}
{'[1, 0, 1, 0, 0, 1, 0, 23, 0, 1, 2, 0, 0]' : 0.189601}
{'[1, 0, 1, 0, 0, 1, 0, 23, 0, 1, 2, 0, 0]' : 0.189737}
{'[1, 0, 1, 0, 0, 1, 0, 23, 0, 1, 2, 0, 0]' : 0.18916}
{'[1, 0, 1, 0, 0, 1, 0, 23, 0, 1, 2, 0, 0]' : 0.184334}
{'[1, 0, 1, 0, 0, 1, 0, 23, 0, 1, 2, 0, 0]' : 0.181182}
{'[1, 0, 1, 0, 0, 1, 0, 23, 0, 1, 2, 0, 0]' : 0.185364}
{'[1, 0, 1, 0, 0, 1, 0, 23, 0, 1, 2, 0, 0]' : 0.189811}
{'[1, 0, 1, 0, 0, 1, 0, 23, 0, 1, 2, 0, 0]' : 0.18956}
{'[1, 0, 1, 0, 0, 1, 0, 23, 0, 1, 2, 0, 0]' : 0.18968}
{'[1, 0, 1, 0, 0, 1, 0, 23, 0, 1, 2, 0, 0]' : 0.188135}
{'[1, 0, 1, 0, 0, 1, 0, 23, 0, 1, 2, 0, 0]' : 0.185956}
{'[1, 0, 1, 0, 0, 1, 0, 23, 0, 1, 2, 0, 0]' : 0.189542}
{'[1, 0, 1, 0, 0, 1, 0, 23, 0, 1, 2, 0, 0]' : 0.189742}
{'[1, 0, 1, 0, 0, 1, 0, 23, 0, 1, 2, 0, 0]' : 0.189547}
{'[1, 0, 1, 0, 0, 1, 0, 23, 0, 1, 2, 0, 0]' : 0.189558}
{'[1, 0, 1, 0, 0, 1, 0, 23, 0, 1, 2, 0, 0]' : 0.184461}
{'[1, 0, 1, 0, 0, 1, 0, 23, 0, 1, 2, 0, 0]' : 0.189514}
{'[1, 0, 1, 0, 0, 1, 0, 23, 0, 1, 2, 0, 0]' : 0.189564}

out:
 ["{'[1, 0, 1, 0, 0, 1, 0, 23, 0, 1, 2, 0, 0]' : 0.189765}", "{'[1, 0, 1, 0, 0, 1, 0, 23, 0, 1, 2, 0, 0]' : 0.190017}", "{'[1, 0, 1, 0, 0, 1, 0, 23, 0, 1, 2, 0, 0]' : 0.189865}", "{'[1, 0, 1, 0, 0, 1, 0, 23, 0, 1, 2, 0, 0]' : 0.189554}", "{'[1, 0, 1, 0, 0, 1, 0, 23, 0, 1, 2, 0, 0]' : 0.184587}", "{'[1, 0, 1, 0, 0, 1, 0, 23, 0, 1, 2, 0, 0]' : 0.184371}", "{'[1, 0, 1, 0, 0, 1, 0, 23, 0, 1, 2, 0, 0]' : 0.18553}", "{'[1, 0, 1, 0, 0, 1, 0, 23, 0, 1, 2, 0, 0]' : 0.189562}", "{'[1, 0, 1, 0, 0, 1, 0, 23, 0, 1, 2, 0, 0]' : 0.189531}", "{'[1, 0, 1, 0, 0, 1, 0, 23, 0, 1, 2, 0, 0]' : 0.189544}", "{'[1, 0, 1, 0, 0, 1, 0, 23, 0, 1, 2, 0, 0]' : 0.189511}", "{'[1, 0, 1, 0, 0, 1, 0, 23, 0, 1, 2, 0, 0]' : 0.189511}", "{'[1, 0, 1, 0, 0, 1, 0, 23, 0, 1, 2, 0, 0]' : 0.189601}", "{'[1, 0, 1, 0, 0, 1, 0, 23, 0, 1, 2, 0, 0]' : 0.189737}", "{'[1, 0, 1, 0, 0, 1, 0, 23, 0, 1, 2, 0, 0]' : 0.18916}", "{'[1, 0, 1, 0, 0, 1, 0, 23, 0, 1, 2, 0, 0]' : 0.184334}", "{'[1, 0, 1, 0, 0, 1, 0, 23, 0, 1, 2, 0, 0]' : 0.181182}", "{'[1, 0, 1, 0, 0, 1, 0, 23, 0, 1, 2, 0, 0]' : 0.185364}", "{'[1, 0, 1, 0, 0, 1, 0, 23, 0, 1, 2, 0, 0]' : 0.189811}", "{'[1, 0, 1, 0, 0, 1, 0, 23, 0, 1, 2, 0, 0]' : 0.18956}", "{'[1, 0, 1, 0, 0, 1, 0, 23, 0, 1, 2, 0, 0]' : 0.18968}", "{'[1, 0, 1, 0, 0, 1, 0, 23, 0, 1, 2, 0, 0]' : 0.188135}", "{'[1, 0, 1, 0, 0, 1, 0, 23, 0, 1, 2, 0, 0]' : 0.185956}", "{'[1, 0, 1, 0, 0, 1, 0, 23, 0, 1, 2, 0, 0]' : 0.189542}", "{'[1, 0, 1, 0, 0, 1, 0, 23, 0, 1, 2, 0, 0]' : 0.189742}", "{'[1, 0, 1, 0, 0, 1, 0, 23, 0, 1, 2, 0, 0]' : 0.189547}", "{'[1, 0, 1, 0, 0, 1, 0, 23, 0, 1, 2, 0, 0]' : 0.189558}", "{'[1, 0, 1, 0, 0, 1, 0, 23, 0, 1, 2, 0, 0]' : 0.184461}", "{'[1, 0, 1, 0, 0, 1, 0, 23, 0, 1, 2, 0, 0]' : 0.189514}", "{'[1, 0, 1, 0, 0, 1, 0, 23, 0, 1, 2, 0, 0]' : 0.189564}"]
returning from 'run': {'[1, 0, 1, 0, 0, 1, 0, 23, 0, 1, 2, 0, 0]': ([0.189765, 0.190017, 0.189865, 0.189554, 0.184587, 0.184371, 0.18553, 0.189562, 0.189531, 0.189544, 0.189511, 0.189511, 0.189601, 0.189737, 0.18916, 0.184334, 0.181182, 0.185364, 0.189811, 0.18956, 0.18968, 0.188135, 0.185956, 0.189542, 0.189742, 0.189547, 0.189558, 0.184461, 0.189514, 0.189564], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 1, 0, 0, 1, 0, 23, 0, 1, 2, 0, 0]': ([0.189765, 0.190017, 0.189865, 0.189554, 0.184587, 0.184371, 0.18553, 0.189562, 0.189531, 0.189544, 0.189511, 0.189511, 0.189601, 0.189737, 0.18916, 0.184334, 0.181182, 0.185364, 0.189811, 0.18956, 0.18968, 0.188135, 0.185956, 0.189542, 0.189742, 0.189547, 0.189558, 0.184461, 0.189514, 0.189564], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	23
        Max loop nest depth: 	5
        Additions: 		860
        Multiplications: 	312
        Divisions: 		0
        Logical: 		0
        Reads: 			1739
        Writes: 		211
        Comparisons:		23
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest43.exe __orio_perftest43.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest43.exe  
Program Test Output: 
{'[2, 3, 0, 0, 6, 6, 0, 5, 0, 1, 2, 0, 0]' : 0.225835}
{'[2, 3, 0, 0, 6, 6, 0, 5, 0, 1, 2, 0, 0]' : 0.225482}
{'[2, 3, 0, 0, 6, 6, 0, 5, 0, 1, 2, 0, 0]' : 0.216582}
{'[2, 3, 0, 0, 6, 6, 0, 5, 0, 1, 2, 0, 0]' : 0.221005}
{'[2, 3, 0, 0, 6, 6, 0, 5, 0, 1, 2, 0, 0]' : 0.21997}
{'[2, 3, 0, 0, 6, 6, 0, 5, 0, 1, 2, 0, 0]' : 0.224726}
{'[2, 3, 0, 0, 6, 6, 0, 5, 0, 1, 2, 0, 0]' : 0.224973}
{'[2, 3, 0, 0, 6, 6, 0, 5, 0, 1, 2, 0, 0]' : 0.226465}
{'[2, 3, 0, 0, 6, 6, 0, 5, 0, 1, 2, 0, 0]' : 0.224311}
{'[2, 3, 0, 0, 6, 6, 0, 5, 0, 1, 2, 0, 0]' : 0.225657}
{'[2, 3, 0, 0, 6, 6, 0, 5, 0, 1, 2, 0, 0]' : 0.225599}
{'[2, 3, 0, 0, 6, 6, 0, 5, 0, 1, 2, 0, 0]' : 0.221515}
{'[2, 3, 0, 0, 6, 6, 0, 5, 0, 1, 2, 0, 0]' : 0.225708}
{'[2, 3, 0, 0, 6, 6, 0, 5, 0, 1, 2, 0, 0]' : 0.22613}
{'[2, 3, 0, 0, 6, 6, 0, 5, 0, 1, 2, 0, 0]' : 0.22626}
{'[2, 3, 0, 0, 6, 6, 0, 5, 0, 1, 2, 0, 0]' : 0.225813}
{'[2, 3, 0, 0, 6, 6, 0, 5, 0, 1, 2, 0, 0]' : 0.221206}
{'[2, 3, 0, 0, 6, 6, 0, 5, 0, 1, 2, 0, 0]' : 0.225767}
{'[2, 3, 0, 0, 6, 6, 0, 5, 0, 1, 2, 0, 0]' : 0.226847}
{'[2, 3, 0, 0, 6, 6, 0, 5, 0, 1, 2, 0, 0]' : 0.225641}
{'[2, 3, 0, 0, 6, 6, 0, 5, 0, 1, 2, 0, 0]' : 0.2203}
{'[2, 3, 0, 0, 6, 6, 0, 5, 0, 1, 2, 0, 0]' : 0.225559}
{'[2, 3, 0, 0, 6, 6, 0, 5, 0, 1, 2, 0, 0]' : 0.22697}
{'[2, 3, 0, 0, 6, 6, 0, 5, 0, 1, 2, 0, 0]' : 0.226413}
{'[2, 3, 0, 0, 6, 6, 0, 5, 0, 1, 2, 0, 0]' : 0.22164}
{'[2, 3, 0, 0, 6, 6, 0, 5, 0, 1, 2, 0, 0]' : 0.223083}
{'[2, 3, 0, 0, 6, 6, 0, 5, 0, 1, 2, 0, 0]' : 0.225622}
{'[2, 3, 0, 0, 6, 6, 0, 5, 0, 1, 2, 0, 0]' : 0.226702}
{'[2, 3, 0, 0, 6, 6, 0, 5, 0, 1, 2, 0, 0]' : 0.224074}
{'[2, 3, 0, 0, 6, 6, 0, 5, 0, 1, 2, 0, 0]' : 0.221417}

out:
 ["{'[2, 3, 0, 0, 6, 6, 0, 5, 0, 1, 2, 0, 0]' : 0.225835}", "{'[2, 3, 0, 0, 6, 6, 0, 5, 0, 1, 2, 0, 0]' : 0.225482}", "{'[2, 3, 0, 0, 6, 6, 0, 5, 0, 1, 2, 0, 0]' : 0.216582}", "{'[2, 3, 0, 0, 6, 6, 0, 5, 0, 1, 2, 0, 0]' : 0.221005}", "{'[2, 3, 0, 0, 6, 6, 0, 5, 0, 1, 2, 0, 0]' : 0.21997}", "{'[2, 3, 0, 0, 6, 6, 0, 5, 0, 1, 2, 0, 0]' : 0.224726}", "{'[2, 3, 0, 0, 6, 6, 0, 5, 0, 1, 2, 0, 0]' : 0.224973}", "{'[2, 3, 0, 0, 6, 6, 0, 5, 0, 1, 2, 0, 0]' : 0.226465}", "{'[2, 3, 0, 0, 6, 6, 0, 5, 0, 1, 2, 0, 0]' : 0.224311}", "{'[2, 3, 0, 0, 6, 6, 0, 5, 0, 1, 2, 0, 0]' : 0.225657}", "{'[2, 3, 0, 0, 6, 6, 0, 5, 0, 1, 2, 0, 0]' : 0.225599}", "{'[2, 3, 0, 0, 6, 6, 0, 5, 0, 1, 2, 0, 0]' : 0.221515}", "{'[2, 3, 0, 0, 6, 6, 0, 5, 0, 1, 2, 0, 0]' : 0.225708}", "{'[2, 3, 0, 0, 6, 6, 0, 5, 0, 1, 2, 0, 0]' : 0.22613}", "{'[2, 3, 0, 0, 6, 6, 0, 5, 0, 1, 2, 0, 0]' : 0.22626}", "{'[2, 3, 0, 0, 6, 6, 0, 5, 0, 1, 2, 0, 0]' : 0.225813}", "{'[2, 3, 0, 0, 6, 6, 0, 5, 0, 1, 2, 0, 0]' : 0.221206}", "{'[2, 3, 0, 0, 6, 6, 0, 5, 0, 1, 2, 0, 0]' : 0.225767}", "{'[2, 3, 0, 0, 6, 6, 0, 5, 0, 1, 2, 0, 0]' : 0.226847}", "{'[2, 3, 0, 0, 6, 6, 0, 5, 0, 1, 2, 0, 0]' : 0.225641}", "{'[2, 3, 0, 0, 6, 6, 0, 5, 0, 1, 2, 0, 0]' : 0.2203}", "{'[2, 3, 0, 0, 6, 6, 0, 5, 0, 1, 2, 0, 0]' : 0.225559}", "{'[2, 3, 0, 0, 6, 6, 0, 5, 0, 1, 2, 0, 0]' : 0.22697}", "{'[2, 3, 0, 0, 6, 6, 0, 5, 0, 1, 2, 0, 0]' : 0.226413}", "{'[2, 3, 0, 0, 6, 6, 0, 5, 0, 1, 2, 0, 0]' : 0.22164}", "{'[2, 3, 0, 0, 6, 6, 0, 5, 0, 1, 2, 0, 0]' : 0.223083}", "{'[2, 3, 0, 0, 6, 6, 0, 5, 0, 1, 2, 0, 0]' : 0.225622}", "{'[2, 3, 0, 0, 6, 6, 0, 5, 0, 1, 2, 0, 0]' : 0.226702}", "{'[2, 3, 0, 0, 6, 6, 0, 5, 0, 1, 2, 0, 0]' : 0.224074}", "{'[2, 3, 0, 0, 6, 6, 0, 5, 0, 1, 2, 0, 0]' : 0.221417}"]
returning from 'run': {'[2, 3, 0, 0, 6, 6, 0, 5, 0, 1, 2, 0, 0]': ([0.225835, 0.225482, 0.216582, 0.221005, 0.21997, 0.224726, 0.224973, 0.226465, 0.224311, 0.225657, 0.225599, 0.221515, 0.225708, 0.22613, 0.22626, 0.225813, 0.221206, 0.225767, 0.226847, 0.225641, 0.2203, 0.225559, 0.22697, 0.226413, 0.22164, 0.223083, 0.225622, 0.226702, 0.224074, 0.221417], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 3, 0, 0, 6, 6, 0, 5, 0, 1, 2, 0, 0]': ([0.225835, 0.225482, 0.216582, 0.221005, 0.21997, 0.224726, 0.224973, 0.226465, 0.224311, 0.225657, 0.225599, 0.221515, 0.225708, 0.22613, 0.22626, 0.225813, 0.221206, 0.225767, 0.226847, 0.225641, 0.2203, 0.225559, 0.22697, 0.226413, 0.22164, 0.223083, 0.225622, 0.226702, 0.224074, 0.221417], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	5
        Additions: 		2015
        Multiplications: 	660
        Divisions: 		0
        Logical: 		0
        Reads: 			3436
        Writes: 		369
        Comparisons:		18
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest44.exe __orio_perftest44.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest44.exe  
Program Test Output: 
{'[6, 0, 1, 0, 3, 2, 0, 0, 5, 1, 2, 0, 0]' : 0.275671}
{'[6, 0, 1, 0, 3, 2, 0, 0, 5, 1, 2, 0, 0]' : 0.274234}
{'[6, 0, 1, 0, 3, 2, 0, 0, 5, 1, 2, 0, 0]' : 0.272375}
{'[6, 0, 1, 0, 3, 2, 0, 0, 5, 1, 2, 0, 0]' : 0.268804}
{'[6, 0, 1, 0, 3, 2, 0, 0, 5, 1, 2, 0, 0]' : 0.273587}
{'[6, 0, 1, 0, 3, 2, 0, 0, 5, 1, 2, 0, 0]' : 0.273354}
{'[6, 0, 1, 0, 3, 2, 0, 0, 5, 1, 2, 0, 0]' : 0.26948}
{'[6, 0, 1, 0, 3, 2, 0, 0, 5, 1, 2, 0, 0]' : 0.268392}
{'[6, 0, 1, 0, 3, 2, 0, 0, 5, 1, 2, 0, 0]' : 0.270136}
{'[6, 0, 1, 0, 3, 2, 0, 0, 5, 1, 2, 0, 0]' : 0.275803}
{'[6, 0, 1, 0, 3, 2, 0, 0, 5, 1, 2, 0, 0]' : 0.270229}
{'[6, 0, 1, 0, 3, 2, 0, 0, 5, 1, 2, 0, 0]' : 0.27447}
{'[6, 0, 1, 0, 3, 2, 0, 0, 5, 1, 2, 0, 0]' : 0.275291}
{'[6, 0, 1, 0, 3, 2, 0, 0, 5, 1, 2, 0, 0]' : 0.275864}
{'[6, 0, 1, 0, 3, 2, 0, 0, 5, 1, 2, 0, 0]' : 0.272252}
{'[6, 0, 1, 0, 3, 2, 0, 0, 5, 1, 2, 0, 0]' : 0.274693}
{'[6, 0, 1, 0, 3, 2, 0, 0, 5, 1, 2, 0, 0]' : 0.274037}
{'[6, 0, 1, 0, 3, 2, 0, 0, 5, 1, 2, 0, 0]' : 0.269783}
{'[6, 0, 1, 0, 3, 2, 0, 0, 5, 1, 2, 0, 0]' : 0.273136}
{'[6, 0, 1, 0, 3, 2, 0, 0, 5, 1, 2, 0, 0]' : 0.275473}
{'[6, 0, 1, 0, 3, 2, 0, 0, 5, 1, 2, 0, 0]' : 0.275097}
{'[6, 0, 1, 0, 3, 2, 0, 0, 5, 1, 2, 0, 0]' : 0.269506}
{'[6, 0, 1, 0, 3, 2, 0, 0, 5, 1, 2, 0, 0]' : 0.269905}
{'[6, 0, 1, 0, 3, 2, 0, 0, 5, 1, 2, 0, 0]' : 0.271306}
{'[6, 0, 1, 0, 3, 2, 0, 0, 5, 1, 2, 0, 0]' : 0.272418}
{'[6, 0, 1, 0, 3, 2, 0, 0, 5, 1, 2, 0, 0]' : 0.266426}
{'[6, 0, 1, 0, 3, 2, 0, 0, 5, 1, 2, 0, 0]' : 0.269644}
{'[6, 0, 1, 0, 3, 2, 0, 0, 5, 1, 2, 0, 0]' : 0.272911}
{'[6, 0, 1, 0, 3, 2, 0, 0, 5, 1, 2, 0, 0]' : 0.26986}
{'[6, 0, 1, 0, 3, 2, 0, 0, 5, 1, 2, 0, 0]' : 0.26911}

out:
 ["{'[6, 0, 1, 0, 3, 2, 0, 0, 5, 1, 2, 0, 0]' : 0.275671}", "{'[6, 0, 1, 0, 3, 2, 0, 0, 5, 1, 2, 0, 0]' : 0.274234}", "{'[6, 0, 1, 0, 3, 2, 0, 0, 5, 1, 2, 0, 0]' : 0.272375}", "{'[6, 0, 1, 0, 3, 2, 0, 0, 5, 1, 2, 0, 0]' : 0.268804}", "{'[6, 0, 1, 0, 3, 2, 0, 0, 5, 1, 2, 0, 0]' : 0.273587}", "{'[6, 0, 1, 0, 3, 2, 0, 0, 5, 1, 2, 0, 0]' : 0.273354}", "{'[6, 0, 1, 0, 3, 2, 0, 0, 5, 1, 2, 0, 0]' : 0.26948}", "{'[6, 0, 1, 0, 3, 2, 0, 0, 5, 1, 2, 0, 0]' : 0.268392}", "{'[6, 0, 1, 0, 3, 2, 0, 0, 5, 1, 2, 0, 0]' : 0.270136}", "{'[6, 0, 1, 0, 3, 2, 0, 0, 5, 1, 2, 0, 0]' : 0.275803}", "{'[6, 0, 1, 0, 3, 2, 0, 0, 5, 1, 2, 0, 0]' : 0.270229}", "{'[6, 0, 1, 0, 3, 2, 0, 0, 5, 1, 2, 0, 0]' : 0.27447}", "{'[6, 0, 1, 0, 3, 2, 0, 0, 5, 1, 2, 0, 0]' : 0.275291}", "{'[6, 0, 1, 0, 3, 2, 0, 0, 5, 1, 2, 0, 0]' : 0.275864}", "{'[6, 0, 1, 0, 3, 2, 0, 0, 5, 1, 2, 0, 0]' : 0.272252}", "{'[6, 0, 1, 0, 3, 2, 0, 0, 5, 1, 2, 0, 0]' : 0.274693}", "{'[6, 0, 1, 0, 3, 2, 0, 0, 5, 1, 2, 0, 0]' : 0.274037}", "{'[6, 0, 1, 0, 3, 2, 0, 0, 5, 1, 2, 0, 0]' : 0.269783}", "{'[6, 0, 1, 0, 3, 2, 0, 0, 5, 1, 2, 0, 0]' : 0.273136}", "{'[6, 0, 1, 0, 3, 2, 0, 0, 5, 1, 2, 0, 0]' : 0.275473}", "{'[6, 0, 1, 0, 3, 2, 0, 0, 5, 1, 2, 0, 0]' : 0.275097}", "{'[6, 0, 1, 0, 3, 2, 0, 0, 5, 1, 2, 0, 0]' : 0.269506}", "{'[6, 0, 1, 0, 3, 2, 0, 0, 5, 1, 2, 0, 0]' : 0.269905}", "{'[6, 0, 1, 0, 3, 2, 0, 0, 5, 1, 2, 0, 0]' : 0.271306}", "{'[6, 0, 1, 0, 3, 2, 0, 0, 5, 1, 2, 0, 0]' : 0.272418}", "{'[6, 0, 1, 0, 3, 2, 0, 0, 5, 1, 2, 0, 0]' : 0.266426}", "{'[6, 0, 1, 0, 3, 2, 0, 0, 5, 1, 2, 0, 0]' : 0.269644}", "{'[6, 0, 1, 0, 3, 2, 0, 0, 5, 1, 2, 0, 0]' : 0.272911}", "{'[6, 0, 1, 0, 3, 2, 0, 0, 5, 1, 2, 0, 0]' : 0.26986}", "{'[6, 0, 1, 0, 3, 2, 0, 0, 5, 1, 2, 0, 0]' : 0.26911}"]
returning from 'run': {'[6, 0, 1, 0, 3, 2, 0, 0, 5, 1, 2, 0, 0]': ([0.275671, 0.274234, 0.272375, 0.268804, 0.273587, 0.273354, 0.26948, 0.268392, 0.270136, 0.275803, 0.270229, 0.27447, 0.275291, 0.275864, 0.272252, 0.274693, 0.274037, 0.269783, 0.273136, 0.275473, 0.275097, 0.269506, 0.269905, 0.271306, 0.272418, 0.266426, 0.269644, 0.272911, 0.26986, 0.26911], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 1, 0, 3, 2, 0, 0, 5, 1, 2, 0, 0]': ([0.275671, 0.274234, 0.272375, 0.268804, 0.273587, 0.273354, 0.26948, 0.268392, 0.270136, 0.275803, 0.270229, 0.27447, 0.275291, 0.275864, 0.272252, 0.274693, 0.274037, 0.269783, 0.273136, 0.275473, 0.275097, 0.269506, 0.269905, 0.271306, 0.272418, 0.266426, 0.269644, 0.272911, 0.26986, 0.26911], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	5
        Additions: 		705
        Multiplications: 	264
        Divisions: 		0
        Logical: 		0
        Reads: 			1434
        Writes: 		167
        Comparisons:		16
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest45.exe __orio_perftest45.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest45.exe  
Program Test Output: 
{'[5, 3, 5, 0, 1, 4, 0, 0, 0, 1, 2, 0, 0]' : 0.211486}
{'[5, 3, 5, 0, 1, 4, 0, 0, 0, 1, 2, 0, 0]' : 0.214893}
{'[5, 3, 5, 0, 1, 4, 0, 0, 0, 1, 2, 0, 0]' : 0.212174}
{'[5, 3, 5, 0, 1, 4, 0, 0, 0, 1, 2, 0, 0]' : 0.214034}
{'[5, 3, 5, 0, 1, 4, 0, 0, 0, 1, 2, 0, 0]' : 0.205548}
{'[5, 3, 5, 0, 1, 4, 0, 0, 0, 1, 2, 0, 0]' : 0.210129}
{'[5, 3, 5, 0, 1, 4, 0, 0, 0, 1, 2, 0, 0]' : 0.210218}
{'[5, 3, 5, 0, 1, 4, 0, 0, 0, 1, 2, 0, 0]' : 0.213161}
{'[5, 3, 5, 0, 1, 4, 0, 0, 0, 1, 2, 0, 0]' : 0.214026}
{'[5, 3, 5, 0, 1, 4, 0, 0, 0, 1, 2, 0, 0]' : 0.205974}
{'[5, 3, 5, 0, 1, 4, 0, 0, 0, 1, 2, 0, 0]' : 0.210348}
{'[5, 3, 5, 0, 1, 4, 0, 0, 0, 1, 2, 0, 0]' : 0.209571}
{'[5, 3, 5, 0, 1, 4, 0, 0, 0, 1, 2, 0, 0]' : 0.213731}
{'[5, 3, 5, 0, 1, 4, 0, 0, 0, 1, 2, 0, 0]' : 0.212359}
{'[5, 3, 5, 0, 1, 4, 0, 0, 0, 1, 2, 0, 0]' : 0.210361}
{'[5, 3, 5, 0, 1, 4, 0, 0, 0, 1, 2, 0, 0]' : 0.214634}
{'[5, 3, 5, 0, 1, 4, 0, 0, 0, 1, 2, 0, 0]' : 0.214845}
{'[5, 3, 5, 0, 1, 4, 0, 0, 0, 1, 2, 0, 0]' : 0.215277}
{'[5, 3, 5, 0, 1, 4, 0, 0, 0, 1, 2, 0, 0]' : 0.210298}
{'[5, 3, 5, 0, 1, 4, 0, 0, 0, 1, 2, 0, 0]' : 0.209557}
{'[5, 3, 5, 0, 1, 4, 0, 0, 0, 1, 2, 0, 0]' : 0.209865}
{'[5, 3, 5, 0, 1, 4, 0, 0, 0, 1, 2, 0, 0]' : 0.21217}
{'[5, 3, 5, 0, 1, 4, 0, 0, 0, 1, 2, 0, 0]' : 0.213029}
{'[5, 3, 5, 0, 1, 4, 0, 0, 0, 1, 2, 0, 0]' : 0.210545}
{'[5, 3, 5, 0, 1, 4, 0, 0, 0, 1, 2, 0, 0]' : 0.211035}
{'[5, 3, 5, 0, 1, 4, 0, 0, 0, 1, 2, 0, 0]' : 0.209524}
{'[5, 3, 5, 0, 1, 4, 0, 0, 0, 1, 2, 0, 0]' : 0.213834}
{'[5, 3, 5, 0, 1, 4, 0, 0, 0, 1, 2, 0, 0]' : 0.210566}
{'[5, 3, 5, 0, 1, 4, 0, 0, 0, 1, 2, 0, 0]' : 0.208433}
{'[5, 3, 5, 0, 1, 4, 0, 0, 0, 1, 2, 0, 0]' : 0.214591}

out:
 ["{'[5, 3, 5, 0, 1, 4, 0, 0, 0, 1, 2, 0, 0]' : 0.211486}", "{'[5, 3, 5, 0, 1, 4, 0, 0, 0, 1, 2, 0, 0]' : 0.214893}", "{'[5, 3, 5, 0, 1, 4, 0, 0, 0, 1, 2, 0, 0]' : 0.212174}", "{'[5, 3, 5, 0, 1, 4, 0, 0, 0, 1, 2, 0, 0]' : 0.214034}", "{'[5, 3, 5, 0, 1, 4, 0, 0, 0, 1, 2, 0, 0]' : 0.205548}", "{'[5, 3, 5, 0, 1, 4, 0, 0, 0, 1, 2, 0, 0]' : 0.210129}", "{'[5, 3, 5, 0, 1, 4, 0, 0, 0, 1, 2, 0, 0]' : 0.210218}", "{'[5, 3, 5, 0, 1, 4, 0, 0, 0, 1, 2, 0, 0]' : 0.213161}", "{'[5, 3, 5, 0, 1, 4, 0, 0, 0, 1, 2, 0, 0]' : 0.214026}", "{'[5, 3, 5, 0, 1, 4, 0, 0, 0, 1, 2, 0, 0]' : 0.205974}", "{'[5, 3, 5, 0, 1, 4, 0, 0, 0, 1, 2, 0, 0]' : 0.210348}", "{'[5, 3, 5, 0, 1, 4, 0, 0, 0, 1, 2, 0, 0]' : 0.209571}", "{'[5, 3, 5, 0, 1, 4, 0, 0, 0, 1, 2, 0, 0]' : 0.213731}", "{'[5, 3, 5, 0, 1, 4, 0, 0, 0, 1, 2, 0, 0]' : 0.212359}", "{'[5, 3, 5, 0, 1, 4, 0, 0, 0, 1, 2, 0, 0]' : 0.210361}", "{'[5, 3, 5, 0, 1, 4, 0, 0, 0, 1, 2, 0, 0]' : 0.214634}", "{'[5, 3, 5, 0, 1, 4, 0, 0, 0, 1, 2, 0, 0]' : 0.214845}", "{'[5, 3, 5, 0, 1, 4, 0, 0, 0, 1, 2, 0, 0]' : 0.215277}", "{'[5, 3, 5, 0, 1, 4, 0, 0, 0, 1, 2, 0, 0]' : 0.210298}", "{'[5, 3, 5, 0, 1, 4, 0, 0, 0, 1, 2, 0, 0]' : 0.209557}", "{'[5, 3, 5, 0, 1, 4, 0, 0, 0, 1, 2, 0, 0]' : 0.209865}", "{'[5, 3, 5, 0, 1, 4, 0, 0, 0, 1, 2, 0, 0]' : 0.21217}", "{'[5, 3, 5, 0, 1, 4, 0, 0, 0, 1, 2, 0, 0]' : 0.213029}", "{'[5, 3, 5, 0, 1, 4, 0, 0, 0, 1, 2, 0, 0]' : 0.210545}", "{'[5, 3, 5, 0, 1, 4, 0, 0, 0, 1, 2, 0, 0]' : 0.211035}", "{'[5, 3, 5, 0, 1, 4, 0, 0, 0, 1, 2, 0, 0]' : 0.209524}", "{'[5, 3, 5, 0, 1, 4, 0, 0, 0, 1, 2, 0, 0]' : 0.213834}", "{'[5, 3, 5, 0, 1, 4, 0, 0, 0, 1, 2, 0, 0]' : 0.210566}", "{'[5, 3, 5, 0, 1, 4, 0, 0, 0, 1, 2, 0, 0]' : 0.208433}", "{'[5, 3, 5, 0, 1, 4, 0, 0, 0, 1, 2, 0, 0]' : 0.214591}"]
returning from 'run': {'[5, 3, 5, 0, 1, 4, 0, 0, 0, 1, 2, 0, 0]': ([0.211486, 0.214893, 0.212174, 0.214034, 0.205548, 0.210129, 0.210218, 0.213161, 0.214026, 0.205974, 0.210348, 0.209571, 0.213731, 0.212359, 0.210361, 0.214634, 0.214845, 0.215277, 0.210298, 0.209557, 0.209865, 0.21217, 0.213029, 0.210545, 0.211035, 0.209524, 0.213834, 0.210566, 0.208433, 0.214591], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 3, 5, 0, 1, 4, 0, 0, 0, 1, 2, 0, 0]': ([0.211486, 0.214893, 0.212174, 0.214034, 0.205548, 0.210129, 0.210218, 0.213161, 0.214026, 0.205974, 0.210348, 0.209571, 0.213731, 0.212359, 0.210361, 0.214634, 0.214845, 0.215277, 0.210298, 0.209557, 0.209865, 0.21217, 0.213029, 0.210545, 0.211035, 0.209524, 0.213834, 0.210566, 0.208433, 0.214591], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	4
        Additions: 		3591
        Multiplications: 	1122
        Divisions: 		0
        Logical: 		0
        Reads: 			5752
        Writes: 		602
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest46.exe __orio_perftest46.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest46.exe  
Program Test Output: 
{'[0, 1, 2, 0, 6, 6, 0, 0, 12, 1, 2, 0, 0]' : 0.319813}
{'[0, 1, 2, 0, 6, 6, 0, 0, 12, 1, 2, 0, 0]' : 0.321966}
{'[0, 1, 2, 0, 6, 6, 0, 0, 12, 1, 2, 0, 0]' : 0.325562}
{'[0, 1, 2, 0, 6, 6, 0, 0, 12, 1, 2, 0, 0]' : 0.325577}
{'[0, 1, 2, 0, 6, 6, 0, 0, 12, 1, 2, 0, 0]' : 0.327612}
{'[0, 1, 2, 0, 6, 6, 0, 0, 12, 1, 2, 0, 0]' : 0.330014}
{'[0, 1, 2, 0, 6, 6, 0, 0, 12, 1, 2, 0, 0]' : 0.325764}
{'[0, 1, 2, 0, 6, 6, 0, 0, 12, 1, 2, 0, 0]' : 0.32853}
{'[0, 1, 2, 0, 6, 6, 0, 0, 12, 1, 2, 0, 0]' : 0.32787}
{'[0, 1, 2, 0, 6, 6, 0, 0, 12, 1, 2, 0, 0]' : 0.329304}
{'[0, 1, 2, 0, 6, 6, 0, 0, 12, 1, 2, 0, 0]' : 0.33015}
{'[0, 1, 2, 0, 6, 6, 0, 0, 12, 1, 2, 0, 0]' : 0.328995}
{'[0, 1, 2, 0, 6, 6, 0, 0, 12, 1, 2, 0, 0]' : 0.32599}
{'[0, 1, 2, 0, 6, 6, 0, 0, 12, 1, 2, 0, 0]' : 0.320506}
{'[0, 1, 2, 0, 6, 6, 0, 0, 12, 1, 2, 0, 0]' : 0.325381}
{'[0, 1, 2, 0, 6, 6, 0, 0, 12, 1, 2, 0, 0]' : 0.32712}
{'[0, 1, 2, 0, 6, 6, 0, 0, 12, 1, 2, 0, 0]' : 0.326803}
{'[0, 1, 2, 0, 6, 6, 0, 0, 12, 1, 2, 0, 0]' : 0.328371}
{'[0, 1, 2, 0, 6, 6, 0, 0, 12, 1, 2, 0, 0]' : 0.328066}
{'[0, 1, 2, 0, 6, 6, 0, 0, 12, 1, 2, 0, 0]' : 0.327003}
{'[0, 1, 2, 0, 6, 6, 0, 0, 12, 1, 2, 0, 0]' : 0.328516}
{'[0, 1, 2, 0, 6, 6, 0, 0, 12, 1, 2, 0, 0]' : 0.328486}
{'[0, 1, 2, 0, 6, 6, 0, 0, 12, 1, 2, 0, 0]' : 0.326604}
{'[0, 1, 2, 0, 6, 6, 0, 0, 12, 1, 2, 0, 0]' : 0.329083}
{'[0, 1, 2, 0, 6, 6, 0, 0, 12, 1, 2, 0, 0]' : 0.326351}
{'[0, 1, 2, 0, 6, 6, 0, 0, 12, 1, 2, 0, 0]' : 0.325809}
{'[0, 1, 2, 0, 6, 6, 0, 0, 12, 1, 2, 0, 0]' : 0.330829}
{'[0, 1, 2, 0, 6, 6, 0, 0, 12, 1, 2, 0, 0]' : 0.327777}
{'[0, 1, 2, 0, 6, 6, 0, 0, 12, 1, 2, 0, 0]' : 0.321361}
{'[0, 1, 2, 0, 6, 6, 0, 0, 12, 1, 2, 0, 0]' : 0.32858}

out:
 ["{'[0, 1, 2, 0, 6, 6, 0, 0, 12, 1, 2, 0, 0]' : 0.319813}", "{'[0, 1, 2, 0, 6, 6, 0, 0, 12, 1, 2, 0, 0]' : 0.321966}", "{'[0, 1, 2, 0, 6, 6, 0, 0, 12, 1, 2, 0, 0]' : 0.325562}", "{'[0, 1, 2, 0, 6, 6, 0, 0, 12, 1, 2, 0, 0]' : 0.325577}", "{'[0, 1, 2, 0, 6, 6, 0, 0, 12, 1, 2, 0, 0]' : 0.327612}", "{'[0, 1, 2, 0, 6, 6, 0, 0, 12, 1, 2, 0, 0]' : 0.330014}", "{'[0, 1, 2, 0, 6, 6, 0, 0, 12, 1, 2, 0, 0]' : 0.325764}", "{'[0, 1, 2, 0, 6, 6, 0, 0, 12, 1, 2, 0, 0]' : 0.32853}", "{'[0, 1, 2, 0, 6, 6, 0, 0, 12, 1, 2, 0, 0]' : 0.32787}", "{'[0, 1, 2, 0, 6, 6, 0, 0, 12, 1, 2, 0, 0]' : 0.329304}", "{'[0, 1, 2, 0, 6, 6, 0, 0, 12, 1, 2, 0, 0]' : 0.33015}", "{'[0, 1, 2, 0, 6, 6, 0, 0, 12, 1, 2, 0, 0]' : 0.328995}", "{'[0, 1, 2, 0, 6, 6, 0, 0, 12, 1, 2, 0, 0]' : 0.32599}", "{'[0, 1, 2, 0, 6, 6, 0, 0, 12, 1, 2, 0, 0]' : 0.320506}", "{'[0, 1, 2, 0, 6, 6, 0, 0, 12, 1, 2, 0, 0]' : 0.325381}", "{'[0, 1, 2, 0, 6, 6, 0, 0, 12, 1, 2, 0, 0]' : 0.32712}", "{'[0, 1, 2, 0, 6, 6, 0, 0, 12, 1, 2, 0, 0]' : 0.326803}", "{'[0, 1, 2, 0, 6, 6, 0, 0, 12, 1, 2, 0, 0]' : 0.328371}", "{'[0, 1, 2, 0, 6, 6, 0, 0, 12, 1, 2, 0, 0]' : 0.328066}", "{'[0, 1, 2, 0, 6, 6, 0, 0, 12, 1, 2, 0, 0]' : 0.327003}", "{'[0, 1, 2, 0, 6, 6, 0, 0, 12, 1, 2, 0, 0]' : 0.328516}", "{'[0, 1, 2, 0, 6, 6, 0, 0, 12, 1, 2, 0, 0]' : 0.328486}", "{'[0, 1, 2, 0, 6, 6, 0, 0, 12, 1, 2, 0, 0]' : 0.326604}", "{'[0, 1, 2, 0, 6, 6, 0, 0, 12, 1, 2, 0, 0]' : 0.329083}", "{'[0, 1, 2, 0, 6, 6, 0, 0, 12, 1, 2, 0, 0]' : 0.326351}", "{'[0, 1, 2, 0, 6, 6, 0, 0, 12, 1, 2, 0, 0]' : 0.325809}", "{'[0, 1, 2, 0, 6, 6, 0, 0, 12, 1, 2, 0, 0]' : 0.330829}", "{'[0, 1, 2, 0, 6, 6, 0, 0, 12, 1, 2, 0, 0]' : 0.327777}", "{'[0, 1, 2, 0, 6, 6, 0, 0, 12, 1, 2, 0, 0]' : 0.321361}", "{'[0, 1, 2, 0, 6, 6, 0, 0, 12, 1, 2, 0, 0]' : 0.32858}"]
returning from 'run': {'[0, 1, 2, 0, 6, 6, 0, 0, 12, 1, 2, 0, 0]': ([0.319813, 0.321966, 0.325562, 0.325577, 0.327612, 0.330014, 0.325764, 0.32853, 0.32787, 0.329304, 0.33015, 0.328995, 0.32599, 0.320506, 0.325381, 0.32712, 0.326803, 0.328371, 0.328066, 0.327003, 0.328516, 0.328486, 0.326604, 0.329083, 0.326351, 0.325809, 0.330829, 0.327777, 0.321361, 0.32858], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 2, 0, 6, 6, 0, 0, 12, 1, 2, 0, 0]': ([0.319813, 0.321966, 0.325562, 0.325577, 0.327612, 0.330014, 0.325764, 0.32853, 0.32787, 0.329304, 0.33015, 0.328995, 0.32599, 0.320506, 0.325381, 0.32712, 0.326803, 0.328371, 0.328066, 0.327003, 0.328516, 0.328486, 0.326604, 0.329083, 0.326351, 0.325809, 0.330829, 0.327777, 0.321361, 0.32858], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	23
        Max loop nest depth: 	5
        Additions: 		818
        Multiplications: 	296
        Divisions: 		0
        Logical: 		0
        Reads: 			1655
        Writes: 		201
        Comparisons:		23
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest47.exe __orio_perftest47.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest47.exe  
Program Test Output: 
{'[5, 0, 3, 0, 1, 6, 0, 3, 0, 1, 2, 0, 0]' : 0.212379}
{'[5, 0, 3, 0, 1, 6, 0, 3, 0, 1, 2, 0, 0]' : 0.210941}
{'[5, 0, 3, 0, 1, 6, 0, 3, 0, 1, 2, 0, 0]' : 0.210652}
{'[5, 0, 3, 0, 1, 6, 0, 3, 0, 1, 2, 0, 0]' : 0.212304}
{'[5, 0, 3, 0, 1, 6, 0, 3, 0, 1, 2, 0, 0]' : 0.212323}
{'[5, 0, 3, 0, 1, 6, 0, 3, 0, 1, 2, 0, 0]' : 0.21202}
{'[5, 0, 3, 0, 1, 6, 0, 3, 0, 1, 2, 0, 0]' : 0.207624}
{'[5, 0, 3, 0, 1, 6, 0, 3, 0, 1, 2, 0, 0]' : 0.212498}
{'[5, 0, 3, 0, 1, 6, 0, 3, 0, 1, 2, 0, 0]' : 0.211831}
{'[5, 0, 3, 0, 1, 6, 0, 3, 0, 1, 2, 0, 0]' : 0.214589}
{'[5, 0, 3, 0, 1, 6, 0, 3, 0, 1, 2, 0, 0]' : 0.214122}
{'[5, 0, 3, 0, 1, 6, 0, 3, 0, 1, 2, 0, 0]' : 0.213167}
{'[5, 0, 3, 0, 1, 6, 0, 3, 0, 1, 2, 0, 0]' : 0.216591}
{'[5, 0, 3, 0, 1, 6, 0, 3, 0, 1, 2, 0, 0]' : 0.216617}
{'[5, 0, 3, 0, 1, 6, 0, 3, 0, 1, 2, 0, 0]' : 0.215956}
{'[5, 0, 3, 0, 1, 6, 0, 3, 0, 1, 2, 0, 0]' : 0.212177}
{'[5, 0, 3, 0, 1, 6, 0, 3, 0, 1, 2, 0, 0]' : 0.215536}
{'[5, 0, 3, 0, 1, 6, 0, 3, 0, 1, 2, 0, 0]' : 0.216228}
{'[5, 0, 3, 0, 1, 6, 0, 3, 0, 1, 2, 0, 0]' : 0.215545}
{'[5, 0, 3, 0, 1, 6, 0, 3, 0, 1, 2, 0, 0]' : 0.21743}
{'[5, 0, 3, 0, 1, 6, 0, 3, 0, 1, 2, 0, 0]' : 0.212256}
{'[5, 0, 3, 0, 1, 6, 0, 3, 0, 1, 2, 0, 0]' : 0.216004}
{'[5, 0, 3, 0, 1, 6, 0, 3, 0, 1, 2, 0, 0]' : 0.215763}
{'[5, 0, 3, 0, 1, 6, 0, 3, 0, 1, 2, 0, 0]' : 0.217437}
{'[5, 0, 3, 0, 1, 6, 0, 3, 0, 1, 2, 0, 0]' : 0.214611}
{'[5, 0, 3, 0, 1, 6, 0, 3, 0, 1, 2, 0, 0]' : 0.213698}
{'[5, 0, 3, 0, 1, 6, 0, 3, 0, 1, 2, 0, 0]' : 0.21522}
{'[5, 0, 3, 0, 1, 6, 0, 3, 0, 1, 2, 0, 0]' : 0.21674}
{'[5, 0, 3, 0, 1, 6, 0, 3, 0, 1, 2, 0, 0]' : 0.216651}
{'[5, 0, 3, 0, 1, 6, 0, 3, 0, 1, 2, 0, 0]' : 0.212997}

out:
 ["{'[5, 0, 3, 0, 1, 6, 0, 3, 0, 1, 2, 0, 0]' : 0.212379}", "{'[5, 0, 3, 0, 1, 6, 0, 3, 0, 1, 2, 0, 0]' : 0.210941}", "{'[5, 0, 3, 0, 1, 6, 0, 3, 0, 1, 2, 0, 0]' : 0.210652}", "{'[5, 0, 3, 0, 1, 6, 0, 3, 0, 1, 2, 0, 0]' : 0.212304}", "{'[5, 0, 3, 0, 1, 6, 0, 3, 0, 1, 2, 0, 0]' : 0.212323}", "{'[5, 0, 3, 0, 1, 6, 0, 3, 0, 1, 2, 0, 0]' : 0.21202}", "{'[5, 0, 3, 0, 1, 6, 0, 3, 0, 1, 2, 0, 0]' : 0.207624}", "{'[5, 0, 3, 0, 1, 6, 0, 3, 0, 1, 2, 0, 0]' : 0.212498}", "{'[5, 0, 3, 0, 1, 6, 0, 3, 0, 1, 2, 0, 0]' : 0.211831}", "{'[5, 0, 3, 0, 1, 6, 0, 3, 0, 1, 2, 0, 0]' : 0.214589}", "{'[5, 0, 3, 0, 1, 6, 0, 3, 0, 1, 2, 0, 0]' : 0.214122}", "{'[5, 0, 3, 0, 1, 6, 0, 3, 0, 1, 2, 0, 0]' : 0.213167}", "{'[5, 0, 3, 0, 1, 6, 0, 3, 0, 1, 2, 0, 0]' : 0.216591}", "{'[5, 0, 3, 0, 1, 6, 0, 3, 0, 1, 2, 0, 0]' : 0.216617}", "{'[5, 0, 3, 0, 1, 6, 0, 3, 0, 1, 2, 0, 0]' : 0.215956}", "{'[5, 0, 3, 0, 1, 6, 0, 3, 0, 1, 2, 0, 0]' : 0.212177}", "{'[5, 0, 3, 0, 1, 6, 0, 3, 0, 1, 2, 0, 0]' : 0.215536}", "{'[5, 0, 3, 0, 1, 6, 0, 3, 0, 1, 2, 0, 0]' : 0.216228}", "{'[5, 0, 3, 0, 1, 6, 0, 3, 0, 1, 2, 0, 0]' : 0.215545}", "{'[5, 0, 3, 0, 1, 6, 0, 3, 0, 1, 2, 0, 0]' : 0.21743}", "{'[5, 0, 3, 0, 1, 6, 0, 3, 0, 1, 2, 0, 0]' : 0.212256}", "{'[5, 0, 3, 0, 1, 6, 0, 3, 0, 1, 2, 0, 0]' : 0.216004}", "{'[5, 0, 3, 0, 1, 6, 0, 3, 0, 1, 2, 0, 0]' : 0.215763}", "{'[5, 0, 3, 0, 1, 6, 0, 3, 0, 1, 2, 0, 0]' : 0.217437}", "{'[5, 0, 3, 0, 1, 6, 0, 3, 0, 1, 2, 0, 0]' : 0.214611}", "{'[5, 0, 3, 0, 1, 6, 0, 3, 0, 1, 2, 0, 0]' : 0.213698}", "{'[5, 0, 3, 0, 1, 6, 0, 3, 0, 1, 2, 0, 0]' : 0.21522}", "{'[5, 0, 3, 0, 1, 6, 0, 3, 0, 1, 2, 0, 0]' : 0.21674}", "{'[5, 0, 3, 0, 1, 6, 0, 3, 0, 1, 2, 0, 0]' : 0.216651}", "{'[5, 0, 3, 0, 1, 6, 0, 3, 0, 1, 2, 0, 0]' : 0.212997}"]
returning from 'run': {'[5, 0, 3, 0, 1, 6, 0, 3, 0, 1, 2, 0, 0]': ([0.212379, 0.210941, 0.210652, 0.212304, 0.212323, 0.21202, 0.207624, 0.212498, 0.211831, 0.214589, 0.214122, 0.213167, 0.216591, 0.216617, 0.215956, 0.212177, 0.215536, 0.216228, 0.215545, 0.21743, 0.212256, 0.216004, 0.215763, 0.217437, 0.214611, 0.213698, 0.21522, 0.21674, 0.216651, 0.212997], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 0, 3, 0, 1, 6, 0, 3, 0, 1, 2, 0, 0]': ([0.212379, 0.210941, 0.210652, 0.212304, 0.212323, 0.21202, 0.207624, 0.212498, 0.211831, 0.214589, 0.214122, 0.213167, 0.216591, 0.216617, 0.215956, 0.212177, 0.215536, 0.216228, 0.215545, 0.21743, 0.212256, 0.216004, 0.215763, 0.217437, 0.214611, 0.213698, 0.21522, 0.21674, 0.216651, 0.212997], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	3
        Additions: 		1300
        Multiplications: 	488
        Divisions: 		0
        Logical: 		0
        Reads: 			2631
        Writes: 		313
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest48.exe __orio_perftest48.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest48.exe  
Program Test Output: 
{'[0, 6, 0, 0, 4, 6, 0, 27, 0, 1, 2, 0, 0]' : 0.236329}
{'[0, 6, 0, 0, 4, 6, 0, 27, 0, 1, 2, 0, 0]' : 0.229325}
{'[0, 6, 0, 0, 4, 6, 0, 27, 0, 1, 2, 0, 0]' : 0.204954}
{'[0, 6, 0, 0, 4, 6, 0, 27, 0, 1, 2, 0, 0]' : 0.206077}
{'[0, 6, 0, 0, 4, 6, 0, 27, 0, 1, 2, 0, 0]' : 0.205684}
{'[0, 6, 0, 0, 4, 6, 0, 27, 0, 1, 2, 0, 0]' : 0.205265}
{'[0, 6, 0, 0, 4, 6, 0, 27, 0, 1, 2, 0, 0]' : 0.205891}
{'[0, 6, 0, 0, 4, 6, 0, 27, 0, 1, 2, 0, 0]' : 0.205536}
{'[0, 6, 0, 0, 4, 6, 0, 27, 0, 1, 2, 0, 0]' : 0.205839}
{'[0, 6, 0, 0, 4, 6, 0, 27, 0, 1, 2, 0, 0]' : 0.205317}
{'[0, 6, 0, 0, 4, 6, 0, 27, 0, 1, 2, 0, 0]' : 0.20585}
{'[0, 6, 0, 0, 4, 6, 0, 27, 0, 1, 2, 0, 0]' : 0.205516}
{'[0, 6, 0, 0, 4, 6, 0, 27, 0, 1, 2, 0, 0]' : 0.206125}
{'[0, 6, 0, 0, 4, 6, 0, 27, 0, 1, 2, 0, 0]' : 0.20536}
{'[0, 6, 0, 0, 4, 6, 0, 27, 0, 1, 2, 0, 0]' : 0.206115}
{'[0, 6, 0, 0, 4, 6, 0, 27, 0, 1, 2, 0, 0]' : 0.206029}
{'[0, 6, 0, 0, 4, 6, 0, 27, 0, 1, 2, 0, 0]' : 0.205887}
{'[0, 6, 0, 0, 4, 6, 0, 27, 0, 1, 2, 0, 0]' : 0.20631}
{'[0, 6, 0, 0, 4, 6, 0, 27, 0, 1, 2, 0, 0]' : 0.205944}
{'[0, 6, 0, 0, 4, 6, 0, 27, 0, 1, 2, 0, 0]' : 0.207078}
{'[0, 6, 0, 0, 4, 6, 0, 27, 0, 1, 2, 0, 0]' : 0.205126}
{'[0, 6, 0, 0, 4, 6, 0, 27, 0, 1, 2, 0, 0]' : 0.205712}
{'[0, 6, 0, 0, 4, 6, 0, 27, 0, 1, 2, 0, 0]' : 0.205859}
{'[0, 6, 0, 0, 4, 6, 0, 27, 0, 1, 2, 0, 0]' : 0.205803}
{'[0, 6, 0, 0, 4, 6, 0, 27, 0, 1, 2, 0, 0]' : 0.205464}
{'[0, 6, 0, 0, 4, 6, 0, 27, 0, 1, 2, 0, 0]' : 0.205739}
{'[0, 6, 0, 0, 4, 6, 0, 27, 0, 1, 2, 0, 0]' : 0.205846}
{'[0, 6, 0, 0, 4, 6, 0, 27, 0, 1, 2, 0, 0]' : 0.205736}
{'[0, 6, 0, 0, 4, 6, 0, 27, 0, 1, 2, 0, 0]' : 0.20577}
{'[0, 6, 0, 0, 4, 6, 0, 27, 0, 1, 2, 0, 0]' : 0.20545}

out:
 ["{'[0, 6, 0, 0, 4, 6, 0, 27, 0, 1, 2, 0, 0]' : 0.236329}", "{'[0, 6, 0, 0, 4, 6, 0, 27, 0, 1, 2, 0, 0]' : 0.229325}", "{'[0, 6, 0, 0, 4, 6, 0, 27, 0, 1, 2, 0, 0]' : 0.204954}", "{'[0, 6, 0, 0, 4, 6, 0, 27, 0, 1, 2, 0, 0]' : 0.206077}", "{'[0, 6, 0, 0, 4, 6, 0, 27, 0, 1, 2, 0, 0]' : 0.205684}", "{'[0, 6, 0, 0, 4, 6, 0, 27, 0, 1, 2, 0, 0]' : 0.205265}", "{'[0, 6, 0, 0, 4, 6, 0, 27, 0, 1, 2, 0, 0]' : 0.205891}", "{'[0, 6, 0, 0, 4, 6, 0, 27, 0, 1, 2, 0, 0]' : 0.205536}", "{'[0, 6, 0, 0, 4, 6, 0, 27, 0, 1, 2, 0, 0]' : 0.205839}", "{'[0, 6, 0, 0, 4, 6, 0, 27, 0, 1, 2, 0, 0]' : 0.205317}", "{'[0, 6, 0, 0, 4, 6, 0, 27, 0, 1, 2, 0, 0]' : 0.20585}", "{'[0, 6, 0, 0, 4, 6, 0, 27, 0, 1, 2, 0, 0]' : 0.205516}", "{'[0, 6, 0, 0, 4, 6, 0, 27, 0, 1, 2, 0, 0]' : 0.206125}", "{'[0, 6, 0, 0, 4, 6, 0, 27, 0, 1, 2, 0, 0]' : 0.20536}", "{'[0, 6, 0, 0, 4, 6, 0, 27, 0, 1, 2, 0, 0]' : 0.206115}", "{'[0, 6, 0, 0, 4, 6, 0, 27, 0, 1, 2, 0, 0]' : 0.206029}", "{'[0, 6, 0, 0, 4, 6, 0, 27, 0, 1, 2, 0, 0]' : 0.205887}", "{'[0, 6, 0, 0, 4, 6, 0, 27, 0, 1, 2, 0, 0]' : 0.20631}", "{'[0, 6, 0, 0, 4, 6, 0, 27, 0, 1, 2, 0, 0]' : 0.205944}", "{'[0, 6, 0, 0, 4, 6, 0, 27, 0, 1, 2, 0, 0]' : 0.207078}", "{'[0, 6, 0, 0, 4, 6, 0, 27, 0, 1, 2, 0, 0]' : 0.205126}", "{'[0, 6, 0, 0, 4, 6, 0, 27, 0, 1, 2, 0, 0]' : 0.205712}", "{'[0, 6, 0, 0, 4, 6, 0, 27, 0, 1, 2, 0, 0]' : 0.205859}", "{'[0, 6, 0, 0, 4, 6, 0, 27, 0, 1, 2, 0, 0]' : 0.205803}", "{'[0, 6, 0, 0, 4, 6, 0, 27, 0, 1, 2, 0, 0]' : 0.205464}", "{'[0, 6, 0, 0, 4, 6, 0, 27, 0, 1, 2, 0, 0]' : 0.205739}", "{'[0, 6, 0, 0, 4, 6, 0, 27, 0, 1, 2, 0, 0]' : 0.205846}", "{'[0, 6, 0, 0, 4, 6, 0, 27, 0, 1, 2, 0, 0]' : 0.205736}", "{'[0, 6, 0, 0, 4, 6, 0, 27, 0, 1, 2, 0, 0]' : 0.20577}", "{'[0, 6, 0, 0, 4, 6, 0, 27, 0, 1, 2, 0, 0]' : 0.20545}"]
returning from 'run': {'[0, 6, 0, 0, 4, 6, 0, 27, 0, 1, 2, 0, 0]': ([0.236329, 0.229325, 0.204954, 0.206077, 0.205684, 0.205265, 0.205891, 0.205536, 0.205839, 0.205317, 0.20585, 0.205516, 0.206125, 0.20536, 0.206115, 0.206029, 0.205887, 0.20631, 0.205944, 0.207078, 0.205126, 0.205712, 0.205859, 0.205803, 0.205464, 0.205739, 0.205846, 0.205736, 0.20577, 0.20545], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 0, 0, 4, 6, 0, 27, 0, 1, 2, 0, 0]': ([0.236329, 0.229325, 0.204954, 0.206077, 0.205684, 0.205265, 0.205891, 0.205536, 0.205839, 0.205317, 0.20585, 0.205516, 0.206125, 0.20536, 0.206115, 0.206029, 0.205887, 0.20631, 0.205944, 0.207078, 0.205126, 0.205712, 0.205859, 0.205803, 0.205464, 0.205739, 0.205846, 0.205736, 0.20577, 0.20545], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	3
        Additions: 		3090
        Multiplications: 	990
        Divisions: 		0
        Logical: 		0
        Reads: 			5028
        Writes: 		522
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest49.exe __orio_perftest49.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest49.exe  
Program Test Output: 
{'[5, 0, 0, 0, 0, 0, 0, 0, 10, 1, 2, 0, 0]' : 0.299867}
{'[5, 0, 0, 0, 0, 0, 0, 0, 10, 1, 2, 0, 0]' : 0.299266}
{'[5, 0, 0, 0, 0, 0, 0, 0, 10, 1, 2, 0, 0]' : 0.298022}
{'[5, 0, 0, 0, 0, 0, 0, 0, 10, 1, 2, 0, 0]' : 0.298261}
{'[5, 0, 0, 0, 0, 0, 0, 0, 10, 1, 2, 0, 0]' : 0.29932}
{'[5, 0, 0, 0, 0, 0, 0, 0, 10, 1, 2, 0, 0]' : 0.299517}
{'[5, 0, 0, 0, 0, 0, 0, 0, 10, 1, 2, 0, 0]' : 0.297016}
{'[5, 0, 0, 0, 0, 0, 0, 0, 10, 1, 2, 0, 0]' : 0.29944}
{'[5, 0, 0, 0, 0, 0, 0, 0, 10, 1, 2, 0, 0]' : 0.299595}
{'[5, 0, 0, 0, 0, 0, 0, 0, 10, 1, 2, 0, 0]' : 0.296787}
{'[5, 0, 0, 0, 0, 0, 0, 0, 10, 1, 2, 0, 0]' : 0.298895}
{'[5, 0, 0, 0, 0, 0, 0, 0, 10, 1, 2, 0, 0]' : 0.300296}
{'[5, 0, 0, 0, 0, 0, 0, 0, 10, 1, 2, 0, 0]' : 0.297737}
{'[5, 0, 0, 0, 0, 0, 0, 0, 10, 1, 2, 0, 0]' : 0.298236}
{'[5, 0, 0, 0, 0, 0, 0, 0, 10, 1, 2, 0, 0]' : 0.299371}
{'[5, 0, 0, 0, 0, 0, 0, 0, 10, 1, 2, 0, 0]' : 0.299431}
{'[5, 0, 0, 0, 0, 0, 0, 0, 10, 1, 2, 0, 0]' : 0.296889}
{'[5, 0, 0, 0, 0, 0, 0, 0, 10, 1, 2, 0, 0]' : 0.29945}
{'[5, 0, 0, 0, 0, 0, 0, 0, 10, 1, 2, 0, 0]' : 0.300027}
{'[5, 0, 0, 0, 0, 0, 0, 0, 10, 1, 2, 0, 0]' : 0.296572}
{'[5, 0, 0, 0, 0, 0, 0, 0, 10, 1, 2, 0, 0]' : 0.299049}
{'[5, 0, 0, 0, 0, 0, 0, 0, 10, 1, 2, 0, 0]' : 0.299666}
{'[5, 0, 0, 0, 0, 0, 0, 0, 10, 1, 2, 0, 0]' : 0.299149}
{'[5, 0, 0, 0, 0, 0, 0, 0, 10, 1, 2, 0, 0]' : 0.299672}
{'[5, 0, 0, 0, 0, 0, 0, 0, 10, 1, 2, 0, 0]' : 0.299544}
{'[5, 0, 0, 0, 0, 0, 0, 0, 10, 1, 2, 0, 0]' : 0.299647}
{'[5, 0, 0, 0, 0, 0, 0, 0, 10, 1, 2, 0, 0]' : 0.299726}
{'[5, 0, 0, 0, 0, 0, 0, 0, 10, 1, 2, 0, 0]' : 0.299474}
{'[5, 0, 0, 0, 0, 0, 0, 0, 10, 1, 2, 0, 0]' : 0.29944}
{'[5, 0, 0, 0, 0, 0, 0, 0, 10, 1, 2, 0, 0]' : 0.296856}

out:
 ["{'[5, 0, 0, 0, 0, 0, 0, 0, 10, 1, 2, 0, 0]' : 0.299867}", "{'[5, 0, 0, 0, 0, 0, 0, 0, 10, 1, 2, 0, 0]' : 0.299266}", "{'[5, 0, 0, 0, 0, 0, 0, 0, 10, 1, 2, 0, 0]' : 0.298022}", "{'[5, 0, 0, 0, 0, 0, 0, 0, 10, 1, 2, 0, 0]' : 0.298261}", "{'[5, 0, 0, 0, 0, 0, 0, 0, 10, 1, 2, 0, 0]' : 0.29932}", "{'[5, 0, 0, 0, 0, 0, 0, 0, 10, 1, 2, 0, 0]' : 0.299517}", "{'[5, 0, 0, 0, 0, 0, 0, 0, 10, 1, 2, 0, 0]' : 0.297016}", "{'[5, 0, 0, 0, 0, 0, 0, 0, 10, 1, 2, 0, 0]' : 0.29944}", "{'[5, 0, 0, 0, 0, 0, 0, 0, 10, 1, 2, 0, 0]' : 0.299595}", "{'[5, 0, 0, 0, 0, 0, 0, 0, 10, 1, 2, 0, 0]' : 0.296787}", "{'[5, 0, 0, 0, 0, 0, 0, 0, 10, 1, 2, 0, 0]' : 0.298895}", "{'[5, 0, 0, 0, 0, 0, 0, 0, 10, 1, 2, 0, 0]' : 0.300296}", "{'[5, 0, 0, 0, 0, 0, 0, 0, 10, 1, 2, 0, 0]' : 0.297737}", "{'[5, 0, 0, 0, 0, 0, 0, 0, 10, 1, 2, 0, 0]' : 0.298236}", "{'[5, 0, 0, 0, 0, 0, 0, 0, 10, 1, 2, 0, 0]' : 0.299371}", "{'[5, 0, 0, 0, 0, 0, 0, 0, 10, 1, 2, 0, 0]' : 0.299431}", "{'[5, 0, 0, 0, 0, 0, 0, 0, 10, 1, 2, 0, 0]' : 0.296889}", "{'[5, 0, 0, 0, 0, 0, 0, 0, 10, 1, 2, 0, 0]' : 0.29945}", "{'[5, 0, 0, 0, 0, 0, 0, 0, 10, 1, 2, 0, 0]' : 0.300027}", "{'[5, 0, 0, 0, 0, 0, 0, 0, 10, 1, 2, 0, 0]' : 0.296572}", "{'[5, 0, 0, 0, 0, 0, 0, 0, 10, 1, 2, 0, 0]' : 0.299049}", "{'[5, 0, 0, 0, 0, 0, 0, 0, 10, 1, 2, 0, 0]' : 0.299666}", "{'[5, 0, 0, 0, 0, 0, 0, 0, 10, 1, 2, 0, 0]' : 0.299149}", "{'[5, 0, 0, 0, 0, 0, 0, 0, 10, 1, 2, 0, 0]' : 0.299672}", "{'[5, 0, 0, 0, 0, 0, 0, 0, 10, 1, 2, 0, 0]' : 0.299544}", "{'[5, 0, 0, 0, 0, 0, 0, 0, 10, 1, 2, 0, 0]' : 0.299647}", "{'[5, 0, 0, 0, 0, 0, 0, 0, 10, 1, 2, 0, 0]' : 0.299726}", "{'[5, 0, 0, 0, 0, 0, 0, 0, 10, 1, 2, 0, 0]' : 0.299474}", "{'[5, 0, 0, 0, 0, 0, 0, 0, 10, 1, 2, 0, 0]' : 0.29944}", "{'[5, 0, 0, 0, 0, 0, 0, 0, 10, 1, 2, 0, 0]' : 0.296856}"]
returning from 'run': {'[5, 0, 0, 0, 0, 0, 0, 0, 10, 1, 2, 0, 0]': ([0.299867, 0.299266, 0.298022, 0.298261, 0.29932, 0.299517, 0.297016, 0.29944, 0.299595, 0.296787, 0.298895, 0.300296, 0.297737, 0.298236, 0.299371, 0.299431, 0.296889, 0.29945, 0.300027, 0.296572, 0.299049, 0.299666, 0.299149, 0.299672, 0.299544, 0.299647, 0.299726, 0.299474, 0.29944, 0.296856], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 0, 0, 0, 0, 0, 0, 0, 10, 1, 2, 0, 0]': ([0.299867, 0.299266, 0.298022, 0.298261, 0.29932, 0.299517, 0.297016, 0.29944, 0.299595, 0.296787, 0.298895, 0.300296, 0.297737, 0.298236, 0.299371, 0.299431, 0.296889, 0.29945, 0.300027, 0.296572, 0.299049, 0.299666, 0.299149, 0.299672, 0.299544, 0.299647, 0.299726, 0.299474, 0.29944, 0.296856], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	23
        Max loop nest depth: 	5
        Additions: 		1364
        Multiplications: 	504
        Divisions: 		0
        Logical: 		0
        Reads: 			2747
        Writes: 		331
        Comparisons:		23
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest50.exe __orio_perftest50.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest50.exe  
Program Test Output: 
{'[5, 2, 6, 0, 0, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.207388}
{'[5, 2, 6, 0, 0, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.211304}
{'[5, 2, 6, 0, 0, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.211215}
{'[5, 2, 6, 0, 0, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.211576}
{'[5, 2, 6, 0, 0, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.211153}
{'[5, 2, 6, 0, 0, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.210996}
{'[5, 2, 6, 0, 0, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.211669}
{'[5, 2, 6, 0, 0, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.211446}
{'[5, 2, 6, 0, 0, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.214576}
{'[5, 2, 6, 0, 0, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.215983}
{'[5, 2, 6, 0, 0, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.214321}
{'[5, 2, 6, 0, 0, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.216199}
{'[5, 2, 6, 0, 0, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.214906}
{'[5, 2, 6, 0, 0, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.215402}
{'[5, 2, 6, 0, 0, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.213341}
{'[5, 2, 6, 0, 0, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.215093}
{'[5, 2, 6, 0, 0, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.215877}
{'[5, 2, 6, 0, 0, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.215683}
{'[5, 2, 6, 0, 0, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.215877}
{'[5, 2, 6, 0, 0, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.212612}
{'[5, 2, 6, 0, 0, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.215312}
{'[5, 2, 6, 0, 0, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.215628}
{'[5, 2, 6, 0, 0, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.216702}
{'[5, 2, 6, 0, 0, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.21134}
{'[5, 2, 6, 0, 0, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.212888}
{'[5, 2, 6, 0, 0, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.215829}
{'[5, 2, 6, 0, 0, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.216641}
{'[5, 2, 6, 0, 0, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.215976}
{'[5, 2, 6, 0, 0, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.213666}
{'[5, 2, 6, 0, 0, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.209746}

out:
 ["{'[5, 2, 6, 0, 0, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.207388}", "{'[5, 2, 6, 0, 0, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.211304}", "{'[5, 2, 6, 0, 0, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.211215}", "{'[5, 2, 6, 0, 0, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.211576}", "{'[5, 2, 6, 0, 0, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.211153}", "{'[5, 2, 6, 0, 0, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.210996}", "{'[5, 2, 6, 0, 0, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.211669}", "{'[5, 2, 6, 0, 0, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.211446}", "{'[5, 2, 6, 0, 0, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.214576}", "{'[5, 2, 6, 0, 0, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.215983}", "{'[5, 2, 6, 0, 0, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.214321}", "{'[5, 2, 6, 0, 0, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.216199}", "{'[5, 2, 6, 0, 0, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.214906}", "{'[5, 2, 6, 0, 0, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.215402}", "{'[5, 2, 6, 0, 0, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.213341}", "{'[5, 2, 6, 0, 0, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.215093}", "{'[5, 2, 6, 0, 0, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.215877}", "{'[5, 2, 6, 0, 0, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.215683}", "{'[5, 2, 6, 0, 0, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.215877}", "{'[5, 2, 6, 0, 0, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.212612}", "{'[5, 2, 6, 0, 0, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.215312}", "{'[5, 2, 6, 0, 0, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.215628}", "{'[5, 2, 6, 0, 0, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.216702}", "{'[5, 2, 6, 0, 0, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.21134}", "{'[5, 2, 6, 0, 0, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.212888}", "{'[5, 2, 6, 0, 0, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.215829}", "{'[5, 2, 6, 0, 0, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.216641}", "{'[5, 2, 6, 0, 0, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.215976}", "{'[5, 2, 6, 0, 0, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.213666}", "{'[5, 2, 6, 0, 0, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.209746}"]
returning from 'run': {'[5, 2, 6, 0, 0, 6, 0, 29, 0, 1, 2, 0, 0]': ([0.207388, 0.211304, 0.211215, 0.211576, 0.211153, 0.210996, 0.211669, 0.211446, 0.214576, 0.215983, 0.214321, 0.216199, 0.214906, 0.215402, 0.213341, 0.215093, 0.215877, 0.215683, 0.215877, 0.212612, 0.215312, 0.215628, 0.216702, 0.21134, 0.212888, 0.215829, 0.216641, 0.215976, 0.213666, 0.209746], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 2, 6, 0, 0, 6, 0, 29, 0, 1, 2, 0, 0]': ([0.207388, 0.211304, 0.211215, 0.211576, 0.211153, 0.210996, 0.211669, 0.211446, 0.214576, 0.215983, 0.214321, 0.216199, 0.214906, 0.215402, 0.213341, 0.215093, 0.215877, 0.215683, 0.215877, 0.212612, 0.215312, 0.215628, 0.216702, 0.21134, 0.212888, 0.215829, 0.216641, 0.215976, 0.213666, 0.209746], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	5
        Additions: 		7421
        Multiplications: 	2244
        Divisions: 		0
        Logical: 		0
        Reads: 			11370
        Writes: 		1165
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest51.exe __orio_perftest51.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest51.exe  
Program Test Output: 
{'[5, 6, 3, 0, 6, 3, 0, 0, 29, 1, 2, 0, 0]' : 0.365393}
{'[5, 6, 3, 0, 6, 3, 0, 0, 29, 1, 2, 0, 0]' : 0.341152}
{'[5, 6, 3, 0, 6, 3, 0, 0, 29, 1, 2, 0, 0]' : 0.331503}
{'[5, 6, 3, 0, 6, 3, 0, 0, 29, 1, 2, 0, 0]' : 0.323194}
{'[5, 6, 3, 0, 6, 3, 0, 0, 29, 1, 2, 0, 0]' : 0.325763}
{'[5, 6, 3, 0, 6, 3, 0, 0, 29, 1, 2, 0, 0]' : 0.323127}
{'[5, 6, 3, 0, 6, 3, 0, 0, 29, 1, 2, 0, 0]' : 0.323124}
{'[5, 6, 3, 0, 6, 3, 0, 0, 29, 1, 2, 0, 0]' : 0.327512}
{'[5, 6, 3, 0, 6, 3, 0, 0, 29, 1, 2, 0, 0]' : 0.329736}
{'[5, 6, 3, 0, 6, 3, 0, 0, 29, 1, 2, 0, 0]' : 0.329701}
{'[5, 6, 3, 0, 6, 3, 0, 0, 29, 1, 2, 0, 0]' : 0.3341}
{'[5, 6, 3, 0, 6, 3, 0, 0, 29, 1, 2, 0, 0]' : 0.328155}
{'[5, 6, 3, 0, 6, 3, 0, 0, 29, 1, 2, 0, 0]' : 0.322327}
{'[5, 6, 3, 0, 6, 3, 0, 0, 29, 1, 2, 0, 0]' : 0.323831}
{'[5, 6, 3, 0, 6, 3, 0, 0, 29, 1, 2, 0, 0]' : 0.329576}
{'[5, 6, 3, 0, 6, 3, 0, 0, 29, 1, 2, 0, 0]' : 0.327001}
{'[5, 6, 3, 0, 6, 3, 0, 0, 29, 1, 2, 0, 0]' : 0.326215}
{'[5, 6, 3, 0, 6, 3, 0, 0, 29, 1, 2, 0, 0]' : 0.326964}
{'[5, 6, 3, 0, 6, 3, 0, 0, 29, 1, 2, 0, 0]' : 0.32402}
{'[5, 6, 3, 0, 6, 3, 0, 0, 29, 1, 2, 0, 0]' : 0.332996}
{'[5, 6, 3, 0, 6, 3, 0, 0, 29, 1, 2, 0, 0]' : 0.329616}
{'[5, 6, 3, 0, 6, 3, 0, 0, 29, 1, 2, 0, 0]' : 0.331537}
{'[5, 6, 3, 0, 6, 3, 0, 0, 29, 1, 2, 0, 0]' : 0.334118}
{'[5, 6, 3, 0, 6, 3, 0, 0, 29, 1, 2, 0, 0]' : 0.326864}
{'[5, 6, 3, 0, 6, 3, 0, 0, 29, 1, 2, 0, 0]' : 0.32905}
{'[5, 6, 3, 0, 6, 3, 0, 0, 29, 1, 2, 0, 0]' : 0.322993}
{'[5, 6, 3, 0, 6, 3, 0, 0, 29, 1, 2, 0, 0]' : 0.330011}
{'[5, 6, 3, 0, 6, 3, 0, 0, 29, 1, 2, 0, 0]' : 0.325484}
{'[5, 6, 3, 0, 6, 3, 0, 0, 29, 1, 2, 0, 0]' : 0.321632}
{'[5, 6, 3, 0, 6, 3, 0, 0, 29, 1, 2, 0, 0]' : 0.323359}

out:
 ["{'[5, 6, 3, 0, 6, 3, 0, 0, 29, 1, 2, 0, 0]' : 0.365393}", "{'[5, 6, 3, 0, 6, 3, 0, 0, 29, 1, 2, 0, 0]' : 0.341152}", "{'[5, 6, 3, 0, 6, 3, 0, 0, 29, 1, 2, 0, 0]' : 0.331503}", "{'[5, 6, 3, 0, 6, 3, 0, 0, 29, 1, 2, 0, 0]' : 0.323194}", "{'[5, 6, 3, 0, 6, 3, 0, 0, 29, 1, 2, 0, 0]' : 0.325763}", "{'[5, 6, 3, 0, 6, 3, 0, 0, 29, 1, 2, 0, 0]' : 0.323127}", "{'[5, 6, 3, 0, 6, 3, 0, 0, 29, 1, 2, 0, 0]' : 0.323124}", "{'[5, 6, 3, 0, 6, 3, 0, 0, 29, 1, 2, 0, 0]' : 0.327512}", "{'[5, 6, 3, 0, 6, 3, 0, 0, 29, 1, 2, 0, 0]' : 0.329736}", "{'[5, 6, 3, 0, 6, 3, 0, 0, 29, 1, 2, 0, 0]' : 0.329701}", "{'[5, 6, 3, 0, 6, 3, 0, 0, 29, 1, 2, 0, 0]' : 0.3341}", "{'[5, 6, 3, 0, 6, 3, 0, 0, 29, 1, 2, 0, 0]' : 0.328155}", "{'[5, 6, 3, 0, 6, 3, 0, 0, 29, 1, 2, 0, 0]' : 0.322327}", "{'[5, 6, 3, 0, 6, 3, 0, 0, 29, 1, 2, 0, 0]' : 0.323831}", "{'[5, 6, 3, 0, 6, 3, 0, 0, 29, 1, 2, 0, 0]' : 0.329576}", "{'[5, 6, 3, 0, 6, 3, 0, 0, 29, 1, 2, 0, 0]' : 0.327001}", "{'[5, 6, 3, 0, 6, 3, 0, 0, 29, 1, 2, 0, 0]' : 0.326215}", "{'[5, 6, 3, 0, 6, 3, 0, 0, 29, 1, 2, 0, 0]' : 0.326964}", "{'[5, 6, 3, 0, 6, 3, 0, 0, 29, 1, 2, 0, 0]' : 0.32402}", "{'[5, 6, 3, 0, 6, 3, 0, 0, 29, 1, 2, 0, 0]' : 0.332996}", "{'[5, 6, 3, 0, 6, 3, 0, 0, 29, 1, 2, 0, 0]' : 0.329616}", "{'[5, 6, 3, 0, 6, 3, 0, 0, 29, 1, 2, 0, 0]' : 0.331537}", "{'[5, 6, 3, 0, 6, 3, 0, 0, 29, 1, 2, 0, 0]' : 0.334118}", "{'[5, 6, 3, 0, 6, 3, 0, 0, 29, 1, 2, 0, 0]' : 0.326864}", "{'[5, 6, 3, 0, 6, 3, 0, 0, 29, 1, 2, 0, 0]' : 0.32905}", "{'[5, 6, 3, 0, 6, 3, 0, 0, 29, 1, 2, 0, 0]' : 0.322993}", "{'[5, 6, 3, 0, 6, 3, 0, 0, 29, 1, 2, 0, 0]' : 0.330011}", "{'[5, 6, 3, 0, 6, 3, 0, 0, 29, 1, 2, 0, 0]' : 0.325484}", "{'[5, 6, 3, 0, 6, 3, 0, 0, 29, 1, 2, 0, 0]' : 0.321632}", "{'[5, 6, 3, 0, 6, 3, 0, 0, 29, 1, 2, 0, 0]' : 0.323359}"]
returning from 'run': {'[5, 6, 3, 0, 6, 3, 0, 0, 29, 1, 2, 0, 0]': ([0.365393, 0.341152, 0.331503, 0.323194, 0.325763, 0.323127, 0.323124, 0.327512, 0.329736, 0.329701, 0.3341, 0.328155, 0.322327, 0.323831, 0.329576, 0.327001, 0.326215, 0.326964, 0.32402, 0.332996, 0.329616, 0.331537, 0.334118, 0.326864, 0.32905, 0.322993, 0.330011, 0.325484, 0.321632, 0.323359], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 6, 3, 0, 6, 3, 0, 0, 29, 1, 2, 0, 0]': ([0.365393, 0.341152, 0.331503, 0.323194, 0.325763, 0.323127, 0.323124, 0.327512, 0.329736, 0.329701, 0.3341, 0.328155, 0.322327, 0.323831, 0.329576, 0.327001, 0.326215, 0.326964, 0.32402, 0.332996, 0.329616, 0.331537, 0.334118, 0.326864, 0.32905, 0.322993, 0.330011, 0.325484, 0.321632, 0.323359], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	5
        Additions: 		6965
        Multiplications: 	2112
        Divisions: 		0
        Logical: 		0
        Reads: 			10696
        Writes: 		1095
        Comparisons:		18
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest52.exe __orio_perftest52.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest52.exe  
Program Test Output: 
{'[3, 2, 0, 0, 1, 3, 0, 0, 27, 1, 2, 0, 0]' : 0.331798}
{'[3, 2, 0, 0, 1, 3, 0, 0, 27, 1, 2, 0, 0]' : 0.29149}
{'[3, 2, 0, 0, 1, 3, 0, 0, 27, 1, 2, 0, 0]' : 0.284545}
{'[3, 2, 0, 0, 1, 3, 0, 0, 27, 1, 2, 0, 0]' : 0.283651}
{'[3, 2, 0, 0, 1, 3, 0, 0, 27, 1, 2, 0, 0]' : 0.288268}
{'[3, 2, 0, 0, 1, 3, 0, 0, 27, 1, 2, 0, 0]' : 0.284674}
{'[3, 2, 0, 0, 1, 3, 0, 0, 27, 1, 2, 0, 0]' : 0.283285}
{'[3, 2, 0, 0, 1, 3, 0, 0, 27, 1, 2, 0, 0]' : 0.282248}
{'[3, 2, 0, 0, 1, 3, 0, 0, 27, 1, 2, 0, 0]' : 0.284239}
{'[3, 2, 0, 0, 1, 3, 0, 0, 27, 1, 2, 0, 0]' : 0.286183}
{'[3, 2, 0, 0, 1, 3, 0, 0, 27, 1, 2, 0, 0]' : 0.286587}
{'[3, 2, 0, 0, 1, 3, 0, 0, 27, 1, 2, 0, 0]' : 0.288745}
{'[3, 2, 0, 0, 1, 3, 0, 0, 27, 1, 2, 0, 0]' : 0.282919}
{'[3, 2, 0, 0, 1, 3, 0, 0, 27, 1, 2, 0, 0]' : 0.284907}
{'[3, 2, 0, 0, 1, 3, 0, 0, 27, 1, 2, 0, 0]' : 0.284123}
{'[3, 2, 0, 0, 1, 3, 0, 0, 27, 1, 2, 0, 0]' : 0.286321}
{'[3, 2, 0, 0, 1, 3, 0, 0, 27, 1, 2, 0, 0]' : 0.283699}
{'[3, 2, 0, 0, 1, 3, 0, 0, 27, 1, 2, 0, 0]' : 0.28721}
{'[3, 2, 0, 0, 1, 3, 0, 0, 27, 1, 2, 0, 0]' : 0.284856}
{'[3, 2, 0, 0, 1, 3, 0, 0, 27, 1, 2, 0, 0]' : 0.284595}
{'[3, 2, 0, 0, 1, 3, 0, 0, 27, 1, 2, 0, 0]' : 0.287474}
{'[3, 2, 0, 0, 1, 3, 0, 0, 27, 1, 2, 0, 0]' : 0.284161}
{'[3, 2, 0, 0, 1, 3, 0, 0, 27, 1, 2, 0, 0]' : 0.291426}
{'[3, 2, 0, 0, 1, 3, 0, 0, 27, 1, 2, 0, 0]' : 0.282784}
{'[3, 2, 0, 0, 1, 3, 0, 0, 27, 1, 2, 0, 0]' : 0.285351}
{'[3, 2, 0, 0, 1, 3, 0, 0, 27, 1, 2, 0, 0]' : 0.283821}
{'[3, 2, 0, 0, 1, 3, 0, 0, 27, 1, 2, 0, 0]' : 0.290278}
{'[3, 2, 0, 0, 1, 3, 0, 0, 27, 1, 2, 0, 0]' : 0.286123}
{'[3, 2, 0, 0, 1, 3, 0, 0, 27, 1, 2, 0, 0]' : 0.286149}
{'[3, 2, 0, 0, 1, 3, 0, 0, 27, 1, 2, 0, 0]' : 0.286259}

out:
 ["{'[3, 2, 0, 0, 1, 3, 0, 0, 27, 1, 2, 0, 0]' : 0.331798}", "{'[3, 2, 0, 0, 1, 3, 0, 0, 27, 1, 2, 0, 0]' : 0.29149}", "{'[3, 2, 0, 0, 1, 3, 0, 0, 27, 1, 2, 0, 0]' : 0.284545}", "{'[3, 2, 0, 0, 1, 3, 0, 0, 27, 1, 2, 0, 0]' : 0.283651}", "{'[3, 2, 0, 0, 1, 3, 0, 0, 27, 1, 2, 0, 0]' : 0.288268}", "{'[3, 2, 0, 0, 1, 3, 0, 0, 27, 1, 2, 0, 0]' : 0.284674}", "{'[3, 2, 0, 0, 1, 3, 0, 0, 27, 1, 2, 0, 0]' : 0.283285}", "{'[3, 2, 0, 0, 1, 3, 0, 0, 27, 1, 2, 0, 0]' : 0.282248}", "{'[3, 2, 0, 0, 1, 3, 0, 0, 27, 1, 2, 0, 0]' : 0.284239}", "{'[3, 2, 0, 0, 1, 3, 0, 0, 27, 1, 2, 0, 0]' : 0.286183}", "{'[3, 2, 0, 0, 1, 3, 0, 0, 27, 1, 2, 0, 0]' : 0.286587}", "{'[3, 2, 0, 0, 1, 3, 0, 0, 27, 1, 2, 0, 0]' : 0.288745}", "{'[3, 2, 0, 0, 1, 3, 0, 0, 27, 1, 2, 0, 0]' : 0.282919}", "{'[3, 2, 0, 0, 1, 3, 0, 0, 27, 1, 2, 0, 0]' : 0.284907}", "{'[3, 2, 0, 0, 1, 3, 0, 0, 27, 1, 2, 0, 0]' : 0.284123}", "{'[3, 2, 0, 0, 1, 3, 0, 0, 27, 1, 2, 0, 0]' : 0.286321}", "{'[3, 2, 0, 0, 1, 3, 0, 0, 27, 1, 2, 0, 0]' : 0.283699}", "{'[3, 2, 0, 0, 1, 3, 0, 0, 27, 1, 2, 0, 0]' : 0.28721}", "{'[3, 2, 0, 0, 1, 3, 0, 0, 27, 1, 2, 0, 0]' : 0.284856}", "{'[3, 2, 0, 0, 1, 3, 0, 0, 27, 1, 2, 0, 0]' : 0.284595}", "{'[3, 2, 0, 0, 1, 3, 0, 0, 27, 1, 2, 0, 0]' : 0.287474}", "{'[3, 2, 0, 0, 1, 3, 0, 0, 27, 1, 2, 0, 0]' : 0.284161}", "{'[3, 2, 0, 0, 1, 3, 0, 0, 27, 1, 2, 0, 0]' : 0.291426}", "{'[3, 2, 0, 0, 1, 3, 0, 0, 27, 1, 2, 0, 0]' : 0.282784}", "{'[3, 2, 0, 0, 1, 3, 0, 0, 27, 1, 2, 0, 0]' : 0.285351}", "{'[3, 2, 0, 0, 1, 3, 0, 0, 27, 1, 2, 0, 0]' : 0.283821}", "{'[3, 2, 0, 0, 1, 3, 0, 0, 27, 1, 2, 0, 0]' : 0.290278}", "{'[3, 2, 0, 0, 1, 3, 0, 0, 27, 1, 2, 0, 0]' : 0.286123}", "{'[3, 2, 0, 0, 1, 3, 0, 0, 27, 1, 2, 0, 0]' : 0.286149}", "{'[3, 2, 0, 0, 1, 3, 0, 0, 27, 1, 2, 0, 0]' : 0.286259}"]
returning from 'run': {'[3, 2, 0, 0, 1, 3, 0, 0, 27, 1, 2, 0, 0]': ([0.331798, 0.29149, 0.284545, 0.283651, 0.288268, 0.284674, 0.283285, 0.282248, 0.284239, 0.286183, 0.286587, 0.288745, 0.282919, 0.284907, 0.284123, 0.286321, 0.283699, 0.28721, 0.284856, 0.284595, 0.287474, 0.284161, 0.291426, 0.282784, 0.285351, 0.283821, 0.290278, 0.286123, 0.286149, 0.286259], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 2, 0, 0, 1, 3, 0, 0, 27, 1, 2, 0, 0]': ([0.331798, 0.29149, 0.284545, 0.283651, 0.288268, 0.284674, 0.283285, 0.282248, 0.284239, 0.286183, 0.286587, 0.288745, 0.282919, 0.284907, 0.284123, 0.286321, 0.283699, 0.28721, 0.284856, 0.284595, 0.287474, 0.284161, 0.291426, 0.282784, 0.285351, 0.283821, 0.290278, 0.286123, 0.286149, 0.286259], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	3
        Additions: 		7404
        Multiplications: 	2244
        Divisions: 		0
        Logical: 		0
        Reads: 			11334
        Writes: 		1155
        Comparisons:		15
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest53.exe __orio_perftest53.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest53.exe  
Program Test Output: 
{'[0, 6, 4, 0, 0, 0, 0, 0, 29, 1, 2, 0, 0]' : 0.303694}
{'[0, 6, 4, 0, 0, 0, 0, 0, 29, 1, 2, 0, 0]' : 0.301487}
{'[0, 6, 4, 0, 0, 0, 0, 0, 29, 1, 2, 0, 0]' : 0.298448}
{'[0, 6, 4, 0, 0, 0, 0, 0, 29, 1, 2, 0, 0]' : 0.298653}
{'[0, 6, 4, 0, 0, 0, 0, 0, 29, 1, 2, 0, 0]' : 0.298307}
{'[0, 6, 4, 0, 0, 0, 0, 0, 29, 1, 2, 0, 0]' : 0.303906}
{'[0, 6, 4, 0, 0, 0, 0, 0, 29, 1, 2, 0, 0]' : 0.303659}
{'[0, 6, 4, 0, 0, 0, 0, 0, 29, 1, 2, 0, 0]' : 0.303111}
{'[0, 6, 4, 0, 0, 0, 0, 0, 29, 1, 2, 0, 0]' : 0.303576}
{'[0, 6, 4, 0, 0, 0, 0, 0, 29, 1, 2, 0, 0]' : 0.303131}
{'[0, 6, 4, 0, 0, 0, 0, 0, 29, 1, 2, 0, 0]' : 0.303212}
{'[0, 6, 4, 0, 0, 0, 0, 0, 29, 1, 2, 0, 0]' : 0.303572}
{'[0, 6, 4, 0, 0, 0, 0, 0, 29, 1, 2, 0, 0]' : 0.301954}
{'[0, 6, 4, 0, 0, 0, 0, 0, 29, 1, 2, 0, 0]' : 0.30195}
{'[0, 6, 4, 0, 0, 0, 0, 0, 29, 1, 2, 0, 0]' : 0.303499}
{'[0, 6, 4, 0, 0, 0, 0, 0, 29, 1, 2, 0, 0]' : 0.303092}
{'[0, 6, 4, 0, 0, 0, 0, 0, 29, 1, 2, 0, 0]' : 0.299222}
{'[0, 6, 4, 0, 0, 0, 0, 0, 29, 1, 2, 0, 0]' : 0.29985}
{'[0, 6, 4, 0, 0, 0, 0, 0, 29, 1, 2, 0, 0]' : 0.303221}
{'[0, 6, 4, 0, 0, 0, 0, 0, 29, 1, 2, 0, 0]' : 0.30068}
{'[0, 6, 4, 0, 0, 0, 0, 0, 29, 1, 2, 0, 0]' : 0.303376}
{'[0, 6, 4, 0, 0, 0, 0, 0, 29, 1, 2, 0, 0]' : 0.303319}
{'[0, 6, 4, 0, 0, 0, 0, 0, 29, 1, 2, 0, 0]' : 0.299931}
{'[0, 6, 4, 0, 0, 0, 0, 0, 29, 1, 2, 0, 0]' : 0.298162}
{'[0, 6, 4, 0, 0, 0, 0, 0, 29, 1, 2, 0, 0]' : 0.298924}
{'[0, 6, 4, 0, 0, 0, 0, 0, 29, 1, 2, 0, 0]' : 0.298204}
{'[0, 6, 4, 0, 0, 0, 0, 0, 29, 1, 2, 0, 0]' : 0.29819}
{'[0, 6, 4, 0, 0, 0, 0, 0, 29, 1, 2, 0, 0]' : 0.298242}
{'[0, 6, 4, 0, 0, 0, 0, 0, 29, 1, 2, 0, 0]' : 0.298362}
{'[0, 6, 4, 0, 0, 0, 0, 0, 29, 1, 2, 0, 0]' : 0.298501}

out:
 ["{'[0, 6, 4, 0, 0, 0, 0, 0, 29, 1, 2, 0, 0]' : 0.303694}", "{'[0, 6, 4, 0, 0, 0, 0, 0, 29, 1, 2, 0, 0]' : 0.301487}", "{'[0, 6, 4, 0, 0, 0, 0, 0, 29, 1, 2, 0, 0]' : 0.298448}", "{'[0, 6, 4, 0, 0, 0, 0, 0, 29, 1, 2, 0, 0]' : 0.298653}", "{'[0, 6, 4, 0, 0, 0, 0, 0, 29, 1, 2, 0, 0]' : 0.298307}", "{'[0, 6, 4, 0, 0, 0, 0, 0, 29, 1, 2, 0, 0]' : 0.303906}", "{'[0, 6, 4, 0, 0, 0, 0, 0, 29, 1, 2, 0, 0]' : 0.303659}", "{'[0, 6, 4, 0, 0, 0, 0, 0, 29, 1, 2, 0, 0]' : 0.303111}", "{'[0, 6, 4, 0, 0, 0, 0, 0, 29, 1, 2, 0, 0]' : 0.303576}", "{'[0, 6, 4, 0, 0, 0, 0, 0, 29, 1, 2, 0, 0]' : 0.303131}", "{'[0, 6, 4, 0, 0, 0, 0, 0, 29, 1, 2, 0, 0]' : 0.303212}", "{'[0, 6, 4, 0, 0, 0, 0, 0, 29, 1, 2, 0, 0]' : 0.303572}", "{'[0, 6, 4, 0, 0, 0, 0, 0, 29, 1, 2, 0, 0]' : 0.301954}", "{'[0, 6, 4, 0, 0, 0, 0, 0, 29, 1, 2, 0, 0]' : 0.30195}", "{'[0, 6, 4, 0, 0, 0, 0, 0, 29, 1, 2, 0, 0]' : 0.303499}", "{'[0, 6, 4, 0, 0, 0, 0, 0, 29, 1, 2, 0, 0]' : 0.303092}", "{'[0, 6, 4, 0, 0, 0, 0, 0, 29, 1, 2, 0, 0]' : 0.299222}", "{'[0, 6, 4, 0, 0, 0, 0, 0, 29, 1, 2, 0, 0]' : 0.29985}", "{'[0, 6, 4, 0, 0, 0, 0, 0, 29, 1, 2, 0, 0]' : 0.303221}", "{'[0, 6, 4, 0, 0, 0, 0, 0, 29, 1, 2, 0, 0]' : 0.30068}", "{'[0, 6, 4, 0, 0, 0, 0, 0, 29, 1, 2, 0, 0]' : 0.303376}", "{'[0, 6, 4, 0, 0, 0, 0, 0, 29, 1, 2, 0, 0]' : 0.303319}", "{'[0, 6, 4, 0, 0, 0, 0, 0, 29, 1, 2, 0, 0]' : 0.299931}", "{'[0, 6, 4, 0, 0, 0, 0, 0, 29, 1, 2, 0, 0]' : 0.298162}", "{'[0, 6, 4, 0, 0, 0, 0, 0, 29, 1, 2, 0, 0]' : 0.298924}", "{'[0, 6, 4, 0, 0, 0, 0, 0, 29, 1, 2, 0, 0]' : 0.298204}", "{'[0, 6, 4, 0, 0, 0, 0, 0, 29, 1, 2, 0, 0]' : 0.29819}", "{'[0, 6, 4, 0, 0, 0, 0, 0, 29, 1, 2, 0, 0]' : 0.298242}", "{'[0, 6, 4, 0, 0, 0, 0, 0, 29, 1, 2, 0, 0]' : 0.298362}", "{'[0, 6, 4, 0, 0, 0, 0, 0, 29, 1, 2, 0, 0]' : 0.298501}"]
returning from 'run': {'[0, 6, 4, 0, 0, 0, 0, 0, 29, 1, 2, 0, 0]': ([0.303694, 0.301487, 0.298448, 0.298653, 0.298307, 0.303906, 0.303659, 0.303111, 0.303576, 0.303131, 0.303212, 0.303572, 0.301954, 0.30195, 0.303499, 0.303092, 0.299222, 0.29985, 0.303221, 0.30068, 0.303376, 0.303319, 0.299931, 0.298162, 0.298924, 0.298204, 0.29819, 0.298242, 0.298362, 0.298501], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 4, 0, 0, 0, 0, 0, 29, 1, 2, 0, 0]': ([0.303694, 0.301487, 0.298448, 0.298653, 0.298307, 0.303906, 0.303659, 0.303111, 0.303576, 0.303131, 0.303212, 0.303572, 0.301954, 0.30195, 0.303499, 0.303092, 0.299222, 0.29985, 0.303221, 0.30068, 0.303376, 0.303319, 0.299931, 0.298162, 0.298924, 0.298204, 0.29819, 0.298242, 0.298362, 0.298501], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Complete design, with measurements:
     T1_I T1_J T1_K T2_J T2_K U_I U_J cost_mean
14      0    3    1    0    3   0   0 0.2173268
78      0    3    6    2    0   0   5 0.2742269
98      2    0    6    6    5   0   3 0.2929012
125     5    0    0    6    0  27   0 0.2053319
153     0    2    0    0    2   4   0 0.2159819
175     0    0    6    5    6   0  28 0.3287413
204     6    2    3    6    6   0   0 0.2178850
266     5    6    1    0    6   0  25 0.3024340
380     0    6    5    5    0   8   0 0.2263210
460     1    2    1    3    0   0  23 0.2591219
580     1    0    1    0    1  23   0 0.1881932
613     2    3    0    6    6   5   0 0.2242424
624     6    0    1    3    2   0   5 0.2721082
700     5    3    5    1    4   0   0 0.2115405
771     0    1    2    6    6   0  12 0.3267931
894     5    0    3    1    6   3   0 0.2140636
907     0    6    0    4    6  27   0 0.2075645
983     5    0    0    0    0   0  10 0.2988739
1077    5    2    6    0    6  29   0 0.2136782
1084    5    6    3    6    3   0  29 0.3290018
1085    3    2    0    1    3   0  27 0.2872723
1091    0    6    4    0    0   0  29 0.3011145

Heteroscedasticity Test p-value: 0.301255694234
Regression Step:                Df   Sum Sq  Mean Sq F value   Pr(>F)    
T1_I             1 0.000145 0.000145   1.174 0.314483    
T1_J             1 0.000195 0.000195   1.576 0.249636    
T1_K             1 0.001637 0.001637  13.210 0.008347 ** 
T2_J             1 0.001272 0.001272  10.266 0.014982 *  
T2_K             1 0.000042 0.000042   0.340 0.577959    
U_I              1 0.015315 0.015315 123.594 1.06e-05 ***
U_J              1 0.017539 0.017539 141.546 6.74e-06 ***
I(1/(1 + T1_I))  1 0.000809 0.000809   6.527 0.037836 *  
I(1/(1 + T1_J))  1 0.000699 0.000699   5.640 0.049259 *  
I(1/(1 + T1_K))  1 0.000506 0.000506   4.086 0.082951 .  
I(1/(1 + T2_J))  1 0.000705 0.000705   5.688 0.048533 *  
I(1/(1 + T2_K))  1 0.000005 0.000005   0.040 0.847854    
I(1/(1 + U_I))   1 0.001101 0.001101   8.886 0.020489 *  
I(1/(1 + U_J))   1 0.005229 0.005229  42.197 0.000335 ***
Residuals        7 0.000867 0.000124                     
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Getting fixed Model Terms
Prf Values: 
{'I(1/(1 + U_J))': 0.0003354208874213613, 'T1_I': 0.314483319101165, 'T1_J': 0.24963590749762546, 'T1_K': 0.008347268358511916, 'I(1/(1 + T1_J))': 0.04925927930047108, 'U_J': 6.735731541392221e-06, 'U_I': 1.0600129719615304e-05, 'I(1/(1 + T1_K))': 0.0829508505318629, 'I(1/(1 + T2_J))': 0.048532728898839944, 'T2_K': 0.5779594895950209, 'T2_J': 0.014981672904574212, 'I(1/(1 + U_I))': 0.020489026396350578, 'I(1/(1 + T1_I))': 0.037836487010508936, 'I(1/(1 + T2_K))': 0.847854438748021}
Ordered Keys: 
['U_J', 'U_I', 'I(1/(1 + U_J))', 'T1_K', 'T2_J', 'I(1/(1 + U_I))', 'I(1/(1 + T1_I))', 'I(1/(1 + T2_J))', 'I(1/(1 + T1_J))', 'I(1/(1 + T1_K))', 'T1_J', 'T1_I', 'T2_K', 'I(1/(1 + T2_K))']
Variables within threshold: ['U_J', 'U_I', 'I(1/(1 + U_J))', 'T1_K']
Predicting Best Values for: ['U_J', 'U_I', 'I(1/(1 + U_J))', 'T1_K']
Using Model: . ~ U_J + U_I + I(1/(1 + U_J)) + T1_K
Prediction Regression Step:               Df   Sum Sq  Mean Sq F value   Pr(>F)    
U_J             1 0.029469 0.029469  99.852 1.57e-08 ***
U_I             1 0.003417 0.003417  11.579  0.00339 ** 
I(1/(1 + U_J))  1 0.007613 0.007613  25.796 9.29e-05 ***
T1_K            1 0.000549 0.000549   1.862  0.19022    
Residuals      17 0.005017 0.000295                     
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Generating valid search space of size 3300 (does not spend evaluations)
Valid coordinates: 660/3300
Valid coordinates: 1320/3300
Valid coordinates: 1980/3300
Valid coordinates: 2640/3300
Valid coordinates: 3300/3300
Valid/Tested configurations: 3300/64717
Generated Search Space:
NULL
Getting Best from Design
Response: ['cost_mean']
Design Names: [1] "T1_I"      "T1_J"      "T1_K"      "T2_J"      "T2_K"      "U_I"      
[7] "U_J"       "cost_mean"

Design Response:      cost_mean
14   0.2173268
78   0.2742269
98   0.2929012
125  0.2053319
153  0.2159819
175  0.3287413
204  0.2178850
266  0.3024340
380  0.2263210
460  0.2591219
580  0.1881932
613  0.2242424
624  0.2721082
700  0.2115405
771  0.3267931
894  0.2140636
907  0.2075645
983  0.2988739
1077 0.2136782
1084 0.3290018
1085 0.2872723
1091 0.3011145

Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_J', 'T2_K', 'U_I', 'U_J']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Getting fixed variables
Getting fixed variables
Prf Values: 
{'I(1/(1 + U_J))': 0.0003354208874213613, 'T1_I': 0.314483319101165, 'T1_J': 0.24963590749762546, 'T1_K': 0.008347268358511916, 'I(1/(1 + T1_J))': 0.04925927930047108, 'U_J': 6.735731541392221e-06, 'U_I': 1.0600129719615304e-05, 'I(1/(1 + T1_K))': 0.0829508505318629, 'I(1/(1 + T2_J))': 0.048532728898839944, 'T2_K': 0.5779594895950209, 'T2_J': 0.014981672904574212, 'I(1/(1 + U_I))': 0.020489026396350578, 'I(1/(1 + T1_I))': 0.037836487010508936, 'I(1/(1 + T2_K))': 0.847854438748021}
Ordered Keys: 
['U_J', 'U_I', 'I(1/(1 + U_J))', 'T1_K', 'T2_J', 'I(1/(1 + U_I))', 'I(1/(1 + T1_I))', 'I(1/(1 + T2_J))', 'I(1/(1 + T1_J))', 'I(1/(1 + T1_K))', 'T1_J', 'T1_I', 'T2_K', 'I(1/(1 + T2_K))']
Variables within threshold: ['U_J', 'U_I', 'T1_K', 'T2_J']
Fixed Variables: {'RT_K': 0, 'RT_J': 0, 'RT_I': 2, 'U_K': 1, 'T2_I': 0, 'U1_I': 0}
Unique Variables: ['U_J', 'U_I', 'T1_K', 'T2_J']
Pruning Model
Getting fixed variables
Prf Values: 
{'I(1/(1 + U_J))': 0.0003354208874213613, 'T1_I': 0.314483319101165, 'T1_J': 0.24963590749762546, 'T1_K': 0.008347268358511916, 'I(1/(1 + T1_J))': 0.04925927930047108, 'U_J': 6.735731541392221e-06, 'U_I': 1.0600129719615304e-05, 'I(1/(1 + T1_K))': 0.0829508505318629, 'I(1/(1 + T2_J))': 0.048532728898839944, 'T2_K': 0.5779594895950209, 'T2_J': 0.014981672904574212, 'I(1/(1 + U_I))': 0.020489026396350578, 'I(1/(1 + T1_I))': 0.037836487010508936, 'I(1/(1 + T2_K))': 0.847854438748021}
Ordered Keys: 
['U_J', 'U_I', 'I(1/(1 + U_J))', 'T1_K', 'T2_J', 'I(1/(1 + U_I))', 'I(1/(1 + T1_I))', 'I(1/(1 + T2_J))', 'I(1/(1 + T1_J))', 'I(1/(1 + T1_K))', 'T1_J', 'T1_I', 'T2_K', 'I(1/(1 + T2_K))']
Variables within threshold: ['U_J', 'U_I', 'T1_K', 'T2_J']
Best Predicted:     T1_I T1_J T1_K T2_I T2_J T2_K U1_I U_I U_J U_K RT_I RT_J RT_K
465    6    1    0    0    1    1    0  29   0   1    2    0    0

Best From Design: [1, 0, 1, 0, 0, 1, 0, 23, 0, 1, 2, 0, 0]
Pruned Factors: ['T1_I', 'T1_J', 'T2_K']
Pruned Inverse Factors: ['T1_I', 'T1_J', 'T2_K']
Pruned Interactions: []
Fixed Factors: {'RT_K': 0, 'RT_J': 0, 'RT_I': 2, 'T1_K': 0, 'U_K': 1, 'U_J': 0, 'U_I': 29, 'T2_I': 0, 'T2_J': 1, 'U1_I': 0}
Length of requested configs: 1
Result was on Database, Returning Now
Starting Point (-O3):
0.16059526666666663
Predicted Best Point:
[6, 1, 0, 0, 1, 1, 0, 29, 0, 1, 2, 0, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	23
        Max loop nest depth: 	5
        Additions: 		1364
        Multiplications: 	504
        Divisions: 		0
        Logical: 		0
        Reads: 			2747
        Writes: 		331
        Comparisons:		23
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest54.exe __orio_perftest54.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest54.exe  
Program Test Output: 
{'[6, 1, 0, 0, 1, 1, 0, 29, 0, 1, 2, 0, 0]' : 0.245639}
{'[6, 1, 0, 0, 1, 1, 0, 29, 0, 1, 2, 0, 0]' : 0.223532}
{'[6, 1, 0, 0, 1, 1, 0, 29, 0, 1, 2, 0, 0]' : 0.212767}
{'[6, 1, 0, 0, 1, 1, 0, 29, 0, 1, 2, 0, 0]' : 0.212396}
{'[6, 1, 0, 0, 1, 1, 0, 29, 0, 1, 2, 0, 0]' : 0.213948}
{'[6, 1, 0, 0, 1, 1, 0, 29, 0, 1, 2, 0, 0]' : 0.212545}
{'[6, 1, 0, 0, 1, 1, 0, 29, 0, 1, 2, 0, 0]' : 0.212435}
{'[6, 1, 0, 0, 1, 1, 0, 29, 0, 1, 2, 0, 0]' : 0.213296}
{'[6, 1, 0, 0, 1, 1, 0, 29, 0, 1, 2, 0, 0]' : 0.213477}
{'[6, 1, 0, 0, 1, 1, 0, 29, 0, 1, 2, 0, 0]' : 0.213077}
{'[6, 1, 0, 0, 1, 1, 0, 29, 0, 1, 2, 0, 0]' : 0.212997}
{'[6, 1, 0, 0, 1, 1, 0, 29, 0, 1, 2, 0, 0]' : 0.212163}
{'[6, 1, 0, 0, 1, 1, 0, 29, 0, 1, 2, 0, 0]' : 0.213184}
{'[6, 1, 0, 0, 1, 1, 0, 29, 0, 1, 2, 0, 0]' : 0.212296}
{'[6, 1, 0, 0, 1, 1, 0, 29, 0, 1, 2, 0, 0]' : 0.212308}
{'[6, 1, 0, 0, 1, 1, 0, 29, 0, 1, 2, 0, 0]' : 0.212846}
{'[6, 1, 0, 0, 1, 1, 0, 29, 0, 1, 2, 0, 0]' : 0.21393}
{'[6, 1, 0, 0, 1, 1, 0, 29, 0, 1, 2, 0, 0]' : 0.212187}
{'[6, 1, 0, 0, 1, 1, 0, 29, 0, 1, 2, 0, 0]' : 0.21316}
{'[6, 1, 0, 0, 1, 1, 0, 29, 0, 1, 2, 0, 0]' : 0.212756}
{'[6, 1, 0, 0, 1, 1, 0, 29, 0, 1, 2, 0, 0]' : 0.213385}
{'[6, 1, 0, 0, 1, 1, 0, 29, 0, 1, 2, 0, 0]' : 0.212618}
{'[6, 1, 0, 0, 1, 1, 0, 29, 0, 1, 2, 0, 0]' : 0.213072}
{'[6, 1, 0, 0, 1, 1, 0, 29, 0, 1, 2, 0, 0]' : 0.212711}
{'[6, 1, 0, 0, 1, 1, 0, 29, 0, 1, 2, 0, 0]' : 0.213108}
{'[6, 1, 0, 0, 1, 1, 0, 29, 0, 1, 2, 0, 0]' : 0.212996}
{'[6, 1, 0, 0, 1, 1, 0, 29, 0, 1, 2, 0, 0]' : 0.21252}
{'[6, 1, 0, 0, 1, 1, 0, 29, 0, 1, 2, 0, 0]' : 0.212426}
{'[6, 1, 0, 0, 1, 1, 0, 29, 0, 1, 2, 0, 0]' : 0.212827}
{'[6, 1, 0, 0, 1, 1, 0, 29, 0, 1, 2, 0, 0]' : 0.212591}

out:
 ["{'[6, 1, 0, 0, 1, 1, 0, 29, 0, 1, 2, 0, 0]' : 0.245639}", "{'[6, 1, 0, 0, 1, 1, 0, 29, 0, 1, 2, 0, 0]' : 0.223532}", "{'[6, 1, 0, 0, 1, 1, 0, 29, 0, 1, 2, 0, 0]' : 0.212767}", "{'[6, 1, 0, 0, 1, 1, 0, 29, 0, 1, 2, 0, 0]' : 0.212396}", "{'[6, 1, 0, 0, 1, 1, 0, 29, 0, 1, 2, 0, 0]' : 0.213948}", "{'[6, 1, 0, 0, 1, 1, 0, 29, 0, 1, 2, 0, 0]' : 0.212545}", "{'[6, 1, 0, 0, 1, 1, 0, 29, 0, 1, 2, 0, 0]' : 0.212435}", "{'[6, 1, 0, 0, 1, 1, 0, 29, 0, 1, 2, 0, 0]' : 0.213296}", "{'[6, 1, 0, 0, 1, 1, 0, 29, 0, 1, 2, 0, 0]' : 0.213477}", "{'[6, 1, 0, 0, 1, 1, 0, 29, 0, 1, 2, 0, 0]' : 0.213077}", "{'[6, 1, 0, 0, 1, 1, 0, 29, 0, 1, 2, 0, 0]' : 0.212997}", "{'[6, 1, 0, 0, 1, 1, 0, 29, 0, 1, 2, 0, 0]' : 0.212163}", "{'[6, 1, 0, 0, 1, 1, 0, 29, 0, 1, 2, 0, 0]' : 0.213184}", "{'[6, 1, 0, 0, 1, 1, 0, 29, 0, 1, 2, 0, 0]' : 0.212296}", "{'[6, 1, 0, 0, 1, 1, 0, 29, 0, 1, 2, 0, 0]' : 0.212308}", "{'[6, 1, 0, 0, 1, 1, 0, 29, 0, 1, 2, 0, 0]' : 0.212846}", "{'[6, 1, 0, 0, 1, 1, 0, 29, 0, 1, 2, 0, 0]' : 0.21393}", "{'[6, 1, 0, 0, 1, 1, 0, 29, 0, 1, 2, 0, 0]' : 0.212187}", "{'[6, 1, 0, 0, 1, 1, 0, 29, 0, 1, 2, 0, 0]' : 0.21316}", "{'[6, 1, 0, 0, 1, 1, 0, 29, 0, 1, 2, 0, 0]' : 0.212756}", "{'[6, 1, 0, 0, 1, 1, 0, 29, 0, 1, 2, 0, 0]' : 0.213385}", "{'[6, 1, 0, 0, 1, 1, 0, 29, 0, 1, 2, 0, 0]' : 0.212618}", "{'[6, 1, 0, 0, 1, 1, 0, 29, 0, 1, 2, 0, 0]' : 0.213072}", "{'[6, 1, 0, 0, 1, 1, 0, 29, 0, 1, 2, 0, 0]' : 0.212711}", "{'[6, 1, 0, 0, 1, 1, 0, 29, 0, 1, 2, 0, 0]' : 0.213108}", "{'[6, 1, 0, 0, 1, 1, 0, 29, 0, 1, 2, 0, 0]' : 0.212996}", "{'[6, 1, 0, 0, 1, 1, 0, 29, 0, 1, 2, 0, 0]' : 0.21252}", "{'[6, 1, 0, 0, 1, 1, 0, 29, 0, 1, 2, 0, 0]' : 0.212426}", "{'[6, 1, 0, 0, 1, 1, 0, 29, 0, 1, 2, 0, 0]' : 0.212827}", "{'[6, 1, 0, 0, 1, 1, 0, 29, 0, 1, 2, 0, 0]' : 0.212591}"]
returning from 'run': {'[6, 1, 0, 0, 1, 1, 0, 29, 0, 1, 2, 0, 0]': ([0.245639, 0.223532, 0.212767, 0.212396, 0.213948, 0.212545, 0.212435, 0.213296, 0.213477, 0.213077, 0.212997, 0.212163, 0.213184, 0.212296, 0.212308, 0.212846, 0.21393, 0.212187, 0.21316, 0.212756, 0.213385, 0.212618, 0.213072, 0.212711, 0.213108, 0.212996, 0.21252, 0.212426, 0.212827, 0.212591], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 1, 0, 0, 1, 1, 0, 29, 0, 1, 2, 0, 0]': ([0.245639, 0.223532, 0.212767, 0.212396, 0.213948, 0.212545, 0.212435, 0.213296, 0.213477, 0.213077, 0.212997, 0.212163, 0.213184, 0.212296, 0.212308, 0.212846, 0.21393, 0.212187, 0.21316, 0.212756, 0.213385, 0.212618, 0.213072, 0.212711, 0.213108, 0.212996, 0.21252, 0.212426, 0.212827, 0.212591], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Design Best Point:
[1, 0, 1, 0, 0, 1, 0, 23, 0, 1, 2, 0, 0]
Length of requested configs: 1
Result was on Database, Returning Now
Fixed Factors: {'RT_K': 0, 'RT_J': 0, 'RT_I': 2, 'T1_K': 0, 'U_K': 1, 'U_J': 0, 'U_I': 29, 'T2_I': 0, 'T2_J': 1, 'U1_I': 0}
Slowdown (Design Best): 1.1718477381442125
Slowdown (Predicted Best): 1.334450496465442
Budget: 52/180
Current Best Point: 
[0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]
Step 2
Generating valid search space of size 500 (does not spend evaluations)
Valid coordinates: 100/500
Valid coordinates: 200/500
Valid coordinates: 300/500
Valid coordinates: 400/500
Valid coordinates: 500/500
Valid/Tested configurations: 500/847
Generated Search Space:
NULL
Full Model:  ~ T1_I + T1_J + T2_K + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T2_K))
Clean Info:
Removed Factors: character(0)

Removed Inverse Factors: character(0)

Removed Interactions: [1] "(Intercept)"

New Factors: ['T1_I', 'T1_J', 'T2_K']
New Inverse Factors: ['T1_I', 'T1_J', 'T2_K']
New Interactions: []
New Fixed Factors: {'RT_K': 0, 'RT_J': 0, 'RT_I': 2, 'T1_K': 0, 'U_K': 1, 'U_J': 0, 'U_I': 29, 'T2_I': 0, 'T2_J': 1, 'U1_I': 0}
Updated Full Model:  ~ T1_I + T1_J + T2_K + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T2_K))
Fixed Factors: {'RT_K': 0, 'RT_J': 0, 'RT_I': 2, 'T1_K': 0, 'U_K': 1, 'U_J': 0, 'U_I': 29, 'T2_I': 0, 'T2_J': 1, 'U1_I': 0}
Computing D-Optimal Design
Computing D-Optimal Design with 10 experiments
Design Formula:  ~ T1_I + T1_J + T2_K + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T2_K))
Starting "optFederov" run
Using Search Space:
NULL
Data Dimensions: [1] 500   3

    T1_I T1_J T2_K
18     2    0    2
26     0    1    2
28     2    1    6
48     0    0    6
69     0    3    0
82     2    3    2
128    6    3    6
147    6    0    0
390    6    1    2
447    2    1    0

D-Efficiency Approximation: [1] 0.904

Measuring design of size 10
Current Design Names: ['T1_I', 'T1_J', 'T2_K']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Length of requested configs: 1
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	4
        Additions: 		1355
        Multiplications: 	504
        Divisions: 		0
        Logical: 		0
        Reads: 			2726
        Writes: 		325
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest55.exe __orio_perftest55.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest55.exe  
Program Test Output: 
{'[2, 0, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.236918}
{'[2, 0, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.236904}
{'[2, 0, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.213605}
{'[2, 0, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.212236}
{'[2, 0, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.212036}
{'[2, 0, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.213794}
{'[2, 0, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.21252}
{'[2, 0, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.2117}
{'[2, 0, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.213236}
{'[2, 0, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.211868}
{'[2, 0, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.214801}
{'[2, 0, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.216299}
{'[2, 0, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.213319}
{'[2, 0, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.216737}
{'[2, 0, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.216974}
{'[2, 0, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.21657}
{'[2, 0, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.214924}
{'[2, 0, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.210389}
{'[2, 0, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.211852}
{'[2, 0, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.2121}
{'[2, 0, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.212669}
{'[2, 0, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.210512}
{'[2, 0, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.211854}
{'[2, 0, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.211977}
{'[2, 0, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.212577}
{'[2, 0, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.211277}
{'[2, 0, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.21138}
{'[2, 0, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.207101}
{'[2, 0, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.206878}
{'[2, 0, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.210493}

out:
 ["{'[2, 0, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.236918}", "{'[2, 0, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.236904}", "{'[2, 0, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.213605}", "{'[2, 0, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.212236}", "{'[2, 0, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.212036}", "{'[2, 0, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.213794}", "{'[2, 0, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.21252}", "{'[2, 0, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.2117}", "{'[2, 0, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.213236}", "{'[2, 0, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.211868}", "{'[2, 0, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.214801}", "{'[2, 0, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.216299}", "{'[2, 0, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.213319}", "{'[2, 0, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.216737}", "{'[2, 0, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.216974}", "{'[2, 0, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.21657}", "{'[2, 0, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.214924}", "{'[2, 0, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.210389}", "{'[2, 0, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.211852}", "{'[2, 0, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.2121}", "{'[2, 0, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.212669}", "{'[2, 0, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.210512}", "{'[2, 0, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.211854}", "{'[2, 0, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.211977}", "{'[2, 0, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.212577}", "{'[2, 0, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.211277}", "{'[2, 0, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.21138}", "{'[2, 0, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.207101}", "{'[2, 0, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.206878}", "{'[2, 0, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.210493}"]
returning from 'run': {'[2, 0, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]': ([0.236918, 0.236904, 0.213605, 0.212236, 0.212036, 0.213794, 0.21252, 0.2117, 0.213236, 0.211868, 0.214801, 0.216299, 0.213319, 0.216737, 0.216974, 0.21657, 0.214924, 0.210389, 0.211852, 0.2121, 0.212669, 0.210512, 0.211854, 0.211977, 0.212577, 0.211277, 0.21138, 0.207101, 0.206878, 0.210493], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]': ([0.236918, 0.236904, 0.213605, 0.212236, 0.212036, 0.213794, 0.21252, 0.2117, 0.213236, 0.211868, 0.214801, 0.216299, 0.213319, 0.216737, 0.216974, 0.21657, 0.214924, 0.210389, 0.211852, 0.2121, 0.212669, 0.210512, 0.211854, 0.211977, 0.212577, 0.211277, 0.21138, 0.207101, 0.206878, 0.210493], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	4
        Additions: 		1351
        Multiplications: 	504
        Divisions: 		0
        Logical: 		0
        Reads: 			2736
        Writes: 		329
        Comparisons:		22
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest56.exe __orio_perftest56.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest56.exe  
Program Test Output: 
{'[0, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.217646}
{'[0, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.212532}
{'[0, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.217202}
{'[0, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.217453}
{'[0, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.217218}
{'[0, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.217546}
{'[0, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.213688}
{'[0, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.212197}
{'[0, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.213002}
{'[0, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.216829}
{'[0, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.217129}
{'[0, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.214134}
{'[0, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.212652}
{'[0, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.21467}
{'[0, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.215136}
{'[0, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.212708}
{'[0, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.214456}
{'[0, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.211758}
{'[0, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.216585}
{'[0, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.217615}
{'[0, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.216756}
{'[0, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.214799}
{'[0, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.213382}
{'[0, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.217895}
{'[0, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.216998}
{'[0, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.221416}
{'[0, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.21983}
{'[0, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.220349}
{'[0, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.222069}
{'[0, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.222233}

out:
 ["{'[0, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.217646}", "{'[0, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.212532}", "{'[0, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.217202}", "{'[0, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.217453}", "{'[0, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.217218}", "{'[0, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.217546}", "{'[0, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.213688}", "{'[0, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.212197}", "{'[0, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.213002}", "{'[0, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.216829}", "{'[0, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.217129}", "{'[0, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.214134}", "{'[0, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.212652}", "{'[0, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.21467}", "{'[0, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.215136}", "{'[0, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.212708}", "{'[0, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.214456}", "{'[0, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.211758}", "{'[0, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.216585}", "{'[0, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.217615}", "{'[0, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.216756}", "{'[0, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.214799}", "{'[0, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.213382}", "{'[0, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.217895}", "{'[0, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.216998}", "{'[0, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.221416}", "{'[0, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.21983}", "{'[0, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.220349}", "{'[0, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.222069}", "{'[0, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.222233}"]
returning from 'run': {'[0, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]': ([0.217646, 0.212532, 0.217202, 0.217453, 0.217218, 0.217546, 0.213688, 0.212197, 0.213002, 0.216829, 0.217129, 0.214134, 0.212652, 0.21467, 0.215136, 0.212708, 0.214456, 0.211758, 0.216585, 0.217615, 0.216756, 0.214799, 0.213382, 0.217895, 0.216998, 0.221416, 0.21983, 0.220349, 0.222069, 0.222233], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]': ([0.217646, 0.212532, 0.217202, 0.217453, 0.217218, 0.217546, 0.213688, 0.212197, 0.213002, 0.216829, 0.217129, 0.214134, 0.212652, 0.21467, 0.215136, 0.212708, 0.214456, 0.211758, 0.216585, 0.217615, 0.216756, 0.214799, 0.213382, 0.217895, 0.216998, 0.221416, 0.21983, 0.220349, 0.222069, 0.222233], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	23
        Max loop nest depth: 	5
        Additions: 		1364
        Multiplications: 	504
        Divisions: 		0
        Logical: 		0
        Reads: 			2747
        Writes: 		331
        Comparisons:		23
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest57.exe __orio_perftest57.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest57.exe  
Program Test Output: 
{'[2, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.244433}
{'[2, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.244702}
{'[2, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.220501}
{'[2, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.21567}
{'[2, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.215975}
{'[2, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.223306}
{'[2, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.220723}
{'[2, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.21784}
{'[2, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.214493}
{'[2, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.220445}
{'[2, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.222261}
{'[2, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.220187}
{'[2, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.217774}
{'[2, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.216946}
{'[2, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.212623}
{'[2, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.212682}
{'[2, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.212594}
{'[2, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.212274}
{'[2, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.216623}
{'[2, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.218761}
{'[2, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.215355}
{'[2, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.222498}
{'[2, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.222561}
{'[2, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.222125}
{'[2, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.218012}
{'[2, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.221166}
{'[2, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.222387}
{'[2, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.223355}
{'[2, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.218924}
{'[2, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.214225}

out:
 ["{'[2, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.244433}", "{'[2, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.244702}", "{'[2, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.220501}", "{'[2, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.21567}", "{'[2, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.215975}", "{'[2, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.223306}", "{'[2, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.220723}", "{'[2, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.21784}", "{'[2, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.214493}", "{'[2, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.220445}", "{'[2, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.222261}", "{'[2, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.220187}", "{'[2, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.217774}", "{'[2, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.216946}", "{'[2, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.212623}", "{'[2, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.212682}", "{'[2, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.212594}", "{'[2, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.212274}", "{'[2, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.216623}", "{'[2, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.218761}", "{'[2, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.215355}", "{'[2, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.222498}", "{'[2, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.222561}", "{'[2, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.222125}", "{'[2, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.218012}", "{'[2, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.221166}", "{'[2, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.222387}", "{'[2, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.223355}", "{'[2, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.218924}", "{'[2, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.214225}"]
returning from 'run': {'[2, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]': ([0.244433, 0.244702, 0.220501, 0.21567, 0.215975, 0.223306, 0.220723, 0.21784, 0.214493, 0.220445, 0.222261, 0.220187, 0.217774, 0.216946, 0.212623, 0.212682, 0.212594, 0.212274, 0.216623, 0.218761, 0.215355, 0.222498, 0.222561, 0.222125, 0.218012, 0.221166, 0.222387, 0.223355, 0.218924, 0.214225], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]': ([0.244433, 0.244702, 0.220501, 0.21567, 0.215975, 0.223306, 0.220723, 0.21784, 0.214493, 0.220445, 0.222261, 0.220187, 0.217774, 0.216946, 0.212623, 0.212682, 0.212594, 0.212274, 0.216623, 0.218761, 0.215355, 0.222498, 0.222561, 0.222125, 0.218012, 0.221166, 0.222387, 0.223355, 0.218924, 0.214225], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	3
        Additions: 		1342
        Multiplications: 	504
        Divisions: 		0
        Logical: 		0
        Reads: 			2715
        Writes: 		323
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest58.exe __orio_perftest58.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest58.exe  
Program Test Output: 
{'[0, 0, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.235987}
{'[0, 0, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.235596}
{'[0, 0, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.214706}
{'[0, 0, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.215467}
{'[0, 0, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.214923}
{'[0, 0, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.211838}
{'[0, 0, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.213431}
{'[0, 0, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.213459}
{'[0, 0, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.212127}
{'[0, 0, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.216033}
{'[0, 0, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.215993}
{'[0, 0, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.215787}
{'[0, 0, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.214858}
{'[0, 0, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.214051}
{'[0, 0, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.212928}
{'[0, 0, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.212604}
{'[0, 0, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.211861}
{'[0, 0, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.210034}
{'[0, 0, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.213415}
{'[0, 0, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.215366}
{'[0, 0, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.211326}
{'[0, 0, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.21523}
{'[0, 0, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.215547}
{'[0, 0, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.216395}
{'[0, 0, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.216317}
{'[0, 0, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.215556}
{'[0, 0, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.215542}
{'[0, 0, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.214935}
{'[0, 0, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.211534}
{'[0, 0, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.212387}

out:
 ["{'[0, 0, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.235987}", "{'[0, 0, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.235596}", "{'[0, 0, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.214706}", "{'[0, 0, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.215467}", "{'[0, 0, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.214923}", "{'[0, 0, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.211838}", "{'[0, 0, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.213431}", "{'[0, 0, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.213459}", "{'[0, 0, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.212127}", "{'[0, 0, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.216033}", "{'[0, 0, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.215993}", "{'[0, 0, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.215787}", "{'[0, 0, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.214858}", "{'[0, 0, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.214051}", "{'[0, 0, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.212928}", "{'[0, 0, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.212604}", "{'[0, 0, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.211861}", "{'[0, 0, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.210034}", "{'[0, 0, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.213415}", "{'[0, 0, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.215366}", "{'[0, 0, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.211326}", "{'[0, 0, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.21523}", "{'[0, 0, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.215547}", "{'[0, 0, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.216395}", "{'[0, 0, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.216317}", "{'[0, 0, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.215556}", "{'[0, 0, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.215542}", "{'[0, 0, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.214935}", "{'[0, 0, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.211534}", "{'[0, 0, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.212387}"]
returning from 'run': {'[0, 0, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]': ([0.235987, 0.235596, 0.214706, 0.215467, 0.214923, 0.211838, 0.213431, 0.213459, 0.212127, 0.216033, 0.215993, 0.215787, 0.214858, 0.214051, 0.212928, 0.212604, 0.211861, 0.210034, 0.213415, 0.215366, 0.211326, 0.21523, 0.215547, 0.216395, 0.216317, 0.215556, 0.215542, 0.214935, 0.211534, 0.212387], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]': ([0.235987, 0.235596, 0.214706, 0.215467, 0.214923, 0.211838, 0.213431, 0.213459, 0.212127, 0.216033, 0.215993, 0.215787, 0.214858, 0.214051, 0.212928, 0.212604, 0.211861, 0.210034, 0.213415, 0.215366, 0.211326, 0.21523, 0.215547, 0.216395, 0.216317, 0.215556, 0.215542, 0.214935, 0.211534, 0.212387], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	74
        Max loop nest depth: 	3
        Additions: 		1512
        Multiplications: 	504
        Divisions: 		0
        Logical: 		0
        Reads: 			3030
        Writes: 		433
        Comparisons:		74
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest59.exe __orio_perftest59.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest59.exe  
Program Test Output: 
{'[0, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.211122}
{'[0, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.210906}
{'[0, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.21111}
{'[0, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.210562}
{'[0, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.205084}
{'[0, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.208871}
{'[0, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.211118}
{'[0, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.211241}
{'[0, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.209836}
{'[0, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.204147}
{'[0, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.210976}
{'[0, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.211555}
{'[0, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.212075}
{'[0, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.208913}
{'[0, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.204896}
{'[0, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.210781}
{'[0, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.21031}
{'[0, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.210763}
{'[0, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.210858}
{'[0, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.211392}
{'[0, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.211346}
{'[0, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.210688}
{'[0, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.210755}
{'[0, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.20732}
{'[0, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.205701}
{'[0, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.207196}
{'[0, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.208727}
{'[0, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.211695}
{'[0, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.208155}
{'[0, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.210984}

out:
 ["{'[0, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.211122}", "{'[0, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.210906}", "{'[0, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.21111}", "{'[0, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.210562}", "{'[0, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.205084}", "{'[0, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.208871}", "{'[0, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.211118}", "{'[0, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.211241}", "{'[0, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.209836}", "{'[0, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.204147}", "{'[0, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.210976}", "{'[0, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.211555}", "{'[0, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.212075}", "{'[0, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.208913}", "{'[0, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.204896}", "{'[0, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.210781}", "{'[0, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.21031}", "{'[0, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.210763}", "{'[0, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.210858}", "{'[0, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.211392}", "{'[0, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.211346}", "{'[0, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.210688}", "{'[0, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.210755}", "{'[0, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.20732}", "{'[0, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.205701}", "{'[0, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.207196}", "{'[0, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.208727}", "{'[0, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.211695}", "{'[0, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.208155}", "{'[0, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.210984}"]
returning from 'run': {'[0, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]': ([0.211122, 0.210906, 0.21111, 0.210562, 0.205084, 0.208871, 0.211118, 0.211241, 0.209836, 0.204147, 0.210976, 0.211555, 0.212075, 0.208913, 0.204896, 0.210781, 0.21031, 0.210763, 0.210858, 0.211392, 0.211346, 0.210688, 0.210755, 0.20732, 0.205701, 0.207196, 0.208727, 0.211695, 0.208155, 0.210984], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]': ([0.211122, 0.210906, 0.21111, 0.210562, 0.205084, 0.208871, 0.211118, 0.211241, 0.209836, 0.204147, 0.210976, 0.211555, 0.212075, 0.208913, 0.204896, 0.210781, 0.21031, 0.210763, 0.210858, 0.211392, 0.211346, 0.210688, 0.210755, 0.20732, 0.205701, 0.207196, 0.208727, 0.211695, 0.208155, 0.210984], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	4
        Additions: 		1355
        Multiplications: 	504
        Divisions: 		0
        Logical: 		0
        Reads: 			2726
        Writes: 		325
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest60.exe __orio_perftest60.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest60.exe  
Program Test Output: 
{'[2, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.235256}
{'[2, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.234384}
{'[2, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.215841}
{'[2, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.21385}
{'[2, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.209981}
{'[2, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.21463}
{'[2, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.215213}
{'[2, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.215177}
{'[2, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.212619}
{'[2, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.210455}
{'[2, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.214277}
{'[2, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.215217}
{'[2, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.214386}
{'[2, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.212883}
{'[2, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.213795}
{'[2, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.215171}
{'[2, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.214652}
{'[2, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.214104}
{'[2, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.210065}
{'[2, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.213918}
{'[2, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.214065}
{'[2, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.214973}
{'[2, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.211871}
{'[2, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.210946}
{'[2, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.215046}
{'[2, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.215233}
{'[2, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.214317}
{'[2, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.21428}
{'[2, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.210014}
{'[2, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.210491}

out:
 ["{'[2, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.235256}", "{'[2, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.234384}", "{'[2, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.215841}", "{'[2, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.21385}", "{'[2, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.209981}", "{'[2, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.21463}", "{'[2, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.215213}", "{'[2, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.215177}", "{'[2, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.212619}", "{'[2, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.210455}", "{'[2, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.214277}", "{'[2, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.215217}", "{'[2, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.214386}", "{'[2, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.212883}", "{'[2, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.213795}", "{'[2, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.215171}", "{'[2, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.214652}", "{'[2, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.214104}", "{'[2, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.210065}", "{'[2, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.213918}", "{'[2, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.214065}", "{'[2, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.214973}", "{'[2, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.211871}", "{'[2, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.210946}", "{'[2, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.215046}", "{'[2, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.215233}", "{'[2, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.214317}", "{'[2, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.21428}", "{'[2, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.210014}", "{'[2, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.210491}"]
returning from 'run': {'[2, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]': ([0.235256, 0.234384, 0.215841, 0.21385, 0.209981, 0.21463, 0.215213, 0.215177, 0.212619, 0.210455, 0.214277, 0.215217, 0.214386, 0.212883, 0.213795, 0.215171, 0.214652, 0.214104, 0.210065, 0.213918, 0.214065, 0.214973, 0.211871, 0.210946, 0.215046, 0.215233, 0.214317, 0.21428, 0.210014, 0.210491], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]': ([0.235256, 0.234384, 0.215841, 0.21385, 0.209981, 0.21463, 0.215213, 0.215177, 0.212619, 0.210455, 0.214277, 0.215217, 0.214386, 0.212883, 0.213795, 0.215171, 0.214652, 0.214104, 0.210065, 0.213918, 0.214065, 0.214973, 0.211871, 0.210946, 0.215046, 0.215233, 0.214317, 0.21428, 0.210014, 0.210491], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	4
        Additions: 		1355
        Multiplications: 	504
        Divisions: 		0
        Logical: 		0
        Reads: 			2726
        Writes: 		325
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest61.exe __orio_perftest61.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest61.exe  
Program Test Output: 
{'[6, 3, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.21038}
{'[6, 3, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.210757}
{'[6, 3, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.210696}
{'[6, 3, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.212693}
{'[6, 3, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.214136}
{'[6, 3, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.209168}
{'[6, 3, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.210213}
{'[6, 3, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.210918}
{'[6, 3, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.210782}
{'[6, 3, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.211224}
{'[6, 3, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.211063}
{'[6, 3, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.21001}
{'[6, 3, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.210762}
{'[6, 3, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.211115}
{'[6, 3, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.211303}
{'[6, 3, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.209426}
{'[6, 3, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.210166}
{'[6, 3, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.210711}
{'[6, 3, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.210372}
{'[6, 3, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.207471}
{'[6, 3, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.210005}
{'[6, 3, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.212273}
{'[6, 3, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.211001}
{'[6, 3, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.210025}
{'[6, 3, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.21212}
{'[6, 3, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.210254}
{'[6, 3, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.209769}
{'[6, 3, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.21082}
{'[6, 3, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.210547}
{'[6, 3, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.207895}

out:
 ["{'[6, 3, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.21038}", "{'[6, 3, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.210757}", "{'[6, 3, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.210696}", "{'[6, 3, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.212693}", "{'[6, 3, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.214136}", "{'[6, 3, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.209168}", "{'[6, 3, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.210213}", "{'[6, 3, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.210918}", "{'[6, 3, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.210782}", "{'[6, 3, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.211224}", "{'[6, 3, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.211063}", "{'[6, 3, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.21001}", "{'[6, 3, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.210762}", "{'[6, 3, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.211115}", "{'[6, 3, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.211303}", "{'[6, 3, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.209426}", "{'[6, 3, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.210166}", "{'[6, 3, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.210711}", "{'[6, 3, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.210372}", "{'[6, 3, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.207471}", "{'[6, 3, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.210005}", "{'[6, 3, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.212273}", "{'[6, 3, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.211001}", "{'[6, 3, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.210025}", "{'[6, 3, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.21212}", "{'[6, 3, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.210254}", "{'[6, 3, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.209769}", "{'[6, 3, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.21082}", "{'[6, 3, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.210547}", "{'[6, 3, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.207895}"]
returning from 'run': {'[6, 3, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]': ([0.21038, 0.210757, 0.210696, 0.212693, 0.214136, 0.209168, 0.210213, 0.210918, 0.210782, 0.211224, 0.211063, 0.21001, 0.210762, 0.211115, 0.211303, 0.209426, 0.210166, 0.210711, 0.210372, 0.207471, 0.210005, 0.212273, 0.211001, 0.210025, 0.21212, 0.210254, 0.209769, 0.21082, 0.210547, 0.207895], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 3, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]': ([0.21038, 0.210757, 0.210696, 0.212693, 0.214136, 0.209168, 0.210213, 0.210918, 0.210782, 0.211224, 0.211063, 0.21001, 0.210762, 0.211115, 0.211303, 0.209426, 0.210166, 0.210711, 0.210372, 0.207471, 0.210005, 0.212273, 0.211001, 0.210025, 0.21212, 0.210254, 0.209769, 0.21082, 0.210547, 0.207895], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	75
        Max loop nest depth: 	4
        Additions: 		1525
        Multiplications: 	504
        Divisions: 		0
        Logical: 		0
        Reads: 			3041
        Writes: 		435
        Comparisons:		75
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest62.exe __orio_perftest62.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest62.exe  
Program Test Output: 
{'[6, 0, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.210651}
{'[6, 0, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.212138}
{'[6, 0, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.212488}
{'[6, 0, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.20681}
{'[6, 0, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.207452}
{'[6, 0, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.211247}
{'[6, 0, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.211978}
{'[6, 0, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.212459}
{'[6, 0, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.212642}
{'[6, 0, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.212555}
{'[6, 0, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.211035}
{'[6, 0, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.208522}
{'[6, 0, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.207532}
{'[6, 0, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.207078}
{'[6, 0, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.209006}
{'[6, 0, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.213203}
{'[6, 0, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.211594}
{'[6, 0, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.210921}
{'[6, 0, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.21264}
{'[6, 0, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.213113}
{'[6, 0, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.212575}
{'[6, 0, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.212587}
{'[6, 0, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.212385}
{'[6, 0, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.213381}
{'[6, 0, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.212531}
{'[6, 0, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.212257}
{'[6, 0, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.208443}
{'[6, 0, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.207279}
{'[6, 0, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.208128}
{'[6, 0, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.212748}

out:
 ["{'[6, 0, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.210651}", "{'[6, 0, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.212138}", "{'[6, 0, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.212488}", "{'[6, 0, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.20681}", "{'[6, 0, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.207452}", "{'[6, 0, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.211247}", "{'[6, 0, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.211978}", "{'[6, 0, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.212459}", "{'[6, 0, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.212642}", "{'[6, 0, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.212555}", "{'[6, 0, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.211035}", "{'[6, 0, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.208522}", "{'[6, 0, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.207532}", "{'[6, 0, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.207078}", "{'[6, 0, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.209006}", "{'[6, 0, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.213203}", "{'[6, 0, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.211594}", "{'[6, 0, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.210921}", "{'[6, 0, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.21264}", "{'[6, 0, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.213113}", "{'[6, 0, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.212575}", "{'[6, 0, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.212587}", "{'[6, 0, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.212385}", "{'[6, 0, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.213381}", "{'[6, 0, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.212531}", "{'[6, 0, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.212257}", "{'[6, 0, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.208443}", "{'[6, 0, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.207279}", "{'[6, 0, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.208128}", "{'[6, 0, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.212748}"]
returning from 'run': {'[6, 0, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]': ([0.210651, 0.212138, 0.212488, 0.20681, 0.207452, 0.211247, 0.211978, 0.212459, 0.212642, 0.212555, 0.211035, 0.208522, 0.207532, 0.207078, 0.209006, 0.213203, 0.211594, 0.210921, 0.21264, 0.213113, 0.212575, 0.212587, 0.212385, 0.213381, 0.212531, 0.212257, 0.208443, 0.207279, 0.208128, 0.212748], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]': ([0.210651, 0.212138, 0.212488, 0.20681, 0.207452, 0.211247, 0.211978, 0.212459, 0.212642, 0.212555, 0.211035, 0.208522, 0.207532, 0.207078, 0.209006, 0.213203, 0.211594, 0.210921, 0.21264, 0.213113, 0.212575, 0.212587, 0.212385, 0.213381, 0.212531, 0.212257, 0.208443, 0.207279, 0.208128, 0.212748], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	23
        Max loop nest depth: 	5
        Additions: 		1364
        Multiplications: 	504
        Divisions: 		0
        Logical: 		0
        Reads: 			2747
        Writes: 		331
        Comparisons:		23
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest63.exe __orio_perftest63.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest63.exe  
Program Test Output: 
{'[6, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.223584}
{'[6, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.221969}
{'[6, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.222353}
{'[6, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.222989}
{'[6, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.222852}
{'[6, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.2225}
{'[6, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.223212}
{'[6, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.222195}
{'[6, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.223077}
{'[6, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.222687}
{'[6, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.218469}
{'[6, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.217382}
{'[6, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.216926}
{'[6, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.216745}
{'[6, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.220326}
{'[6, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.221414}
{'[6, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.218821}
{'[6, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.222206}
{'[6, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.222943}
{'[6, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.216046}
{'[6, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.21361}
{'[6, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.219403}
{'[6, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.223023}
{'[6, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.22216}
{'[6, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.223171}
{'[6, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.222059}
{'[6, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.221903}
{'[6, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.218308}
{'[6, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.222642}
{'[6, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.223107}

out:
 ["{'[6, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.223584}", "{'[6, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.221969}", "{'[6, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.222353}", "{'[6, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.222989}", "{'[6, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.222852}", "{'[6, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.2225}", "{'[6, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.223212}", "{'[6, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.222195}", "{'[6, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.223077}", "{'[6, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.222687}", "{'[6, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.218469}", "{'[6, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.217382}", "{'[6, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.216926}", "{'[6, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.216745}", "{'[6, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.220326}", "{'[6, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.221414}", "{'[6, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.218821}", "{'[6, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.222206}", "{'[6, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.222943}", "{'[6, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.216046}", "{'[6, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.21361}", "{'[6, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.219403}", "{'[6, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.223023}", "{'[6, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.22216}", "{'[6, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.223171}", "{'[6, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.222059}", "{'[6, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.221903}", "{'[6, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.218308}", "{'[6, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.222642}", "{'[6, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.223107}"]
returning from 'run': {'[6, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]': ([0.223584, 0.221969, 0.222353, 0.222989, 0.222852, 0.2225, 0.223212, 0.222195, 0.223077, 0.222687, 0.218469, 0.217382, 0.216926, 0.216745, 0.220326, 0.221414, 0.218821, 0.222206, 0.222943, 0.216046, 0.21361, 0.219403, 0.223023, 0.22216, 0.223171, 0.222059, 0.221903, 0.218308, 0.222642, 0.223107], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 1, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]': ([0.223584, 0.221969, 0.222353, 0.222989, 0.222852, 0.2225, 0.223212, 0.222195, 0.223077, 0.222687, 0.218469, 0.217382, 0.216926, 0.216745, 0.220326, 0.221414, 0.218821, 0.222206, 0.222943, 0.216046, 0.21361, 0.219403, 0.223023, 0.22216, 0.223171, 0.222059, 0.221903, 0.218308, 0.222642, 0.223107], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	78
        Max loop nest depth: 	5
        Additions: 		1534
        Multiplications: 	504
        Divisions: 		0
        Logical: 		0
        Reads: 			3062
        Writes: 		441
        Comparisons:		78
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest64.exe __orio_perftest64.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest64.exe  
Program Test Output: 
{'[2, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.209278}
{'[2, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.209658}
{'[2, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.209213}
{'[2, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.206642}
{'[2, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.209914}
{'[2, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.209866}
{'[2, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.209816}
{'[2, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.207525}
{'[2, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.208272}
{'[2, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.210128}
{'[2, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.210389}
{'[2, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.209148}
{'[2, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.208039}
{'[2, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.210559}
{'[2, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.209759}
{'[2, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.210094}
{'[2, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.209047}
{'[2, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.208152}
{'[2, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.210075}
{'[2, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.208847}
{'[2, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.209819}
{'[2, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.210158}
{'[2, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.207052}
{'[2, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.209523}
{'[2, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.209872}
{'[2, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.21104}
{'[2, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.208787}
{'[2, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.208606}
{'[2, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.209325}
{'[2, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.211433}

out:
 ["{'[2, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.209278}", "{'[2, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.209658}", "{'[2, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.209213}", "{'[2, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.206642}", "{'[2, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.209914}", "{'[2, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.209866}", "{'[2, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.209816}", "{'[2, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.207525}", "{'[2, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.208272}", "{'[2, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.210128}", "{'[2, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.210389}", "{'[2, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.209148}", "{'[2, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.208039}", "{'[2, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.210559}", "{'[2, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.209759}", "{'[2, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.210094}", "{'[2, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.209047}", "{'[2, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.208152}", "{'[2, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.210075}", "{'[2, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.208847}", "{'[2, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.209819}", "{'[2, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.210158}", "{'[2, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.207052}", "{'[2, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.209523}", "{'[2, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.209872}", "{'[2, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.21104}", "{'[2, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.208787}", "{'[2, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.208606}", "{'[2, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.209325}", "{'[2, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.211433}"]
returning from 'run': {'[2, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]': ([0.209278, 0.209658, 0.209213, 0.206642, 0.209914, 0.209866, 0.209816, 0.207525, 0.208272, 0.210128, 0.210389, 0.209148, 0.208039, 0.210559, 0.209759, 0.210094, 0.209047, 0.208152, 0.210075, 0.208847, 0.209819, 0.210158, 0.207052, 0.209523, 0.209872, 0.21104, 0.208787, 0.208606, 0.209325, 0.211433], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]': ([0.209278, 0.209658, 0.209213, 0.206642, 0.209914, 0.209866, 0.209816, 0.207525, 0.208272, 0.210128, 0.210389, 0.209148, 0.208039, 0.210559, 0.209759, 0.210094, 0.209047, 0.208152, 0.210075, 0.208847, 0.209819, 0.210158, 0.207052, 0.209523, 0.209872, 0.21104, 0.208787, 0.208606, 0.209325, 0.211433], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Complete design, with measurements:
    T1_I T1_J T2_K cost_mean
18     2    0    2 0.2141833
26     0    1    2 0.2162628
28     2    1    6 0.2200474
48     0    0    6 0.2155078
69     0    3    0 0.2096361
82     2    3    2 0.2149037
128    6    3    6 0.2106025
147    6    0    0 0.2109126
390    6    1    2 0.2209361
447    2    1    0 0.2093345

Heteroscedasticity Test p-value: 0.742377930139
Regression Step:                Df    Sum Sq   Mean Sq F value Pr(>F)
T1_I             1 5.000e-08 5.000e-08   0.003  0.957
T1_J             1 1.203e-05 1.203e-05   0.906  0.411
T2_K             1 2.786e-05 2.786e-05   2.098  0.243
I(1/(1 + T1_I))  1 1.260e-06 1.260e-06   0.095  0.779
I(1/(1 + T1_J))  1 3.273e-05 3.273e-05   2.464  0.214
I(1/(1 + T2_K))  1 4.050e-05 4.050e-05   3.050  0.179
Residuals        3 3.984e-05 1.328e-05               

Getting fixed Model Terms
Prf Values: 
{'T1_I': 0.9571822314748661, 'T1_J': 0.41147492870898617, 'I(1/(1 + T1_J))': 0.21449593330120756, 'I(1/(1 + T2_K))': 0.1790868437526158, 'T2_K': 0.24333585621037088, 'I(1/(1 + T1_I))': 0.7786117484904469}
Ordered Keys: 
['I(1/(1 + T2_K))', 'I(1/(1 + T1_J))', 'T2_K', 'T1_J', 'I(1/(1 + T1_I))', 'T1_I']
No variables within acceptable threshold
Predicting Best Values for: []
Using Model: . ~ .
Prediction Regression Step:                Df    Sum Sq   Mean Sq F value Pr(>F)
T1_I             1 5.000e-08 5.000e-08   0.003  0.957
T1_J             1 1.203e-05 1.203e-05   0.906  0.411
T2_K             1 2.786e-05 2.786e-05   2.098  0.243
I(1/(1 + T1_I))  1 1.260e-06 1.260e-06   0.095  0.779
I(1/(1 + T1_J))  1 3.273e-05 3.273e-05   2.464  0.214
I(1/(1 + T2_K))  1 4.050e-05 4.050e-05   3.050  0.179
Residuals        3 3.984e-05 1.328e-05               

Generating valid search space of size 1500 (does not spend evaluations)
Valid coordinates: 300/1500
Valid coordinates: 600/1500
Valid coordinates: 900/1500
Valid coordinates: 1200/1500
Valid coordinates: 1500/1500
Valid/Tested configurations: 1500/2698
Generated Search Space:
NULL
Getting Best from Design
Response: ['cost_mean']
Design Names: [1] "T1_I"      "T1_J"      "T2_K"      "cost_mean"

Design Response:     cost_mean
18  0.2141833
26  0.2162628
28  0.2200474
48  0.2155078
69  0.2096361
82  0.2149037
128 0.2106025
147 0.2109126
390 0.2209361
447 0.2093345

Current Design Names: ['T1_I', 'T1_J', 'T2_K']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Getting fixed variables
Getting fixed variables
Prf Values: 
{'T1_I': 0.9571822314748661, 'T1_J': 0.41147492870898617, 'I(1/(1 + T1_J))': 0.21449593330120756, 'I(1/(1 + T2_K))': 0.1790868437526158, 'T2_K': 0.24333585621037088, 'I(1/(1 + T1_I))': 0.7786117484904469}
Ordered Keys: 
['I(1/(1 + T2_K))', 'I(1/(1 + T1_J))', 'T2_K', 'T1_J', 'I(1/(1 + T1_I))', 'T1_I']
No variables within acceptable threshold
Fixed Variables: {'RT_K': 0, 'RT_J': 0, 'RT_I': 2, 'T1_K': 0, 'U_K': 1, 'U_J': 0, 'U_I': 29, 'T2_I': 0, 'T2_J': 1, 'U1_I': 0}
Unique Variables: []
Pruning Model
Getting fixed variables
Prf Values: 
{'T1_I': 0.9571822314748661, 'T1_J': 0.41147492870898617, 'I(1/(1 + T1_J))': 0.21449593330120756, 'I(1/(1 + T2_K))': 0.1790868437526158, 'T2_K': 0.24333585621037088, 'I(1/(1 + T1_I))': 0.7786117484904469}
Ordered Keys: 
['I(1/(1 + T2_K))', 'I(1/(1 + T1_J))', 'T2_K', 'T1_J', 'I(1/(1 + T1_I))', 'T1_I']
No variables within acceptable threshold
Best Predicted:     T1_I T1_J T1_K T2_I T2_J T2_K U1_I U_I U_J U_K RT_I RT_J RT_K
655    1    3    0    0    1    0    0  29   0   1    2    0    0

Best From Design: [2, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]
Pruned Factors: ['T1_I', 'T1_J', 'T2_K']
Pruned Inverse Factors: ['T1_I', 'T1_J', 'T2_K']
Pruned Interactions: []
Fixed Factors: {'RT_K': 0, 'RT_J': 0, 'RT_I': 2, 'T1_K': 0, 'U_K': 1, 'U_J': 0, 'U_I': 29, 'T2_I': 0, 'T2_J': 1, 'U1_I': 0}
Length of requested configs: 1
Result was on Database, Returning Now
Starting Point (-O3):
0.16059526666666663
Predicted Best Point:
[1, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	75
        Max loop nest depth: 	4
        Additions: 		1525
        Multiplications: 	504
        Divisions: 		0
        Logical: 		0
        Reads: 			3041
        Writes: 		435
        Comparisons:		75
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest65.exe __orio_perftest65.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest65.exe  
Program Test Output: 
{'[1, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.410725}
{'[1, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.364093}
{'[1, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.36027}
{'[1, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.367412}
{'[1, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.363135}
{'[1, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.363427}
{'[1, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.356206}
{'[1, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.355328}
{'[1, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.362523}
{'[1, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.36447}
{'[1, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.368354}
{'[1, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.361742}
{'[1, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.356713}
{'[1, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.358074}
{'[1, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.358251}
{'[1, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.357619}
{'[1, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.357937}
{'[1, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.357913}
{'[1, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.35379}
{'[1, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.35598}
{'[1, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.346644}
{'[1, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.355542}
{'[1, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.362134}
{'[1, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.363603}
{'[1, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.365882}
{'[1, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.362009}
{'[1, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.364696}
{'[1, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.368323}
{'[1, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.365228}
{'[1, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.363731}

out:
 ["{'[1, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.410725}", "{'[1, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.364093}", "{'[1, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.36027}", "{'[1, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.367412}", "{'[1, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.363135}", "{'[1, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.363427}", "{'[1, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.356206}", "{'[1, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.355328}", "{'[1, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.362523}", "{'[1, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.36447}", "{'[1, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.368354}", "{'[1, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.361742}", "{'[1, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.356713}", "{'[1, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.358074}", "{'[1, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.358251}", "{'[1, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.357619}", "{'[1, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.357937}", "{'[1, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.357913}", "{'[1, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.35379}", "{'[1, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.35598}", "{'[1, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.346644}", "{'[1, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.355542}", "{'[1, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.362134}", "{'[1, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.363603}", "{'[1, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.365882}", "{'[1, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.362009}", "{'[1, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.364696}", "{'[1, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.368323}", "{'[1, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.365228}", "{'[1, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.363731}"]
returning from 'run': {'[1, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]': ([0.410725, 0.364093, 0.36027, 0.367412, 0.363135, 0.363427, 0.356206, 0.355328, 0.362523, 0.36447, 0.368354, 0.361742, 0.356713, 0.358074, 0.358251, 0.357619, 0.357937, 0.357913, 0.35379, 0.35598, 0.346644, 0.355542, 0.362134, 0.363603, 0.365882, 0.362009, 0.364696, 0.368323, 0.365228, 0.363731], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]': ([0.410725, 0.364093, 0.36027, 0.367412, 0.363135, 0.363427, 0.356206, 0.355328, 0.362523, 0.36447, 0.368354, 0.361742, 0.356713, 0.358074, 0.358251, 0.357619, 0.357937, 0.357913, 0.35379, 0.35598, 0.346644, 0.355542, 0.362134, 0.363603, 0.365882, 0.362009, 0.364696, 0.368323, 0.365228, 0.363731], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Design Best Point:
[2, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]
Length of requested configs: 1
Result was on Database, Returning Now
Fixed Factors: {'RT_K': 0, 'RT_J': 0, 'RT_I': 2, 'T1_K': 0, 'U_K': 1, 'U_J': 0, 'U_I': 29, 'T2_I': 0, 'T2_J': 1, 'U1_I': 0}
Slowdown (Design Best): 1.30349130256641
Slowdown (Predicted Best): 2.2565534310060618
Budget: 62/180
Current Best Point: 
[0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]
Step 3
Generating valid search space of size 500 (does not spend evaluations)
Valid coordinates: 100/500
Valid coordinates: 200/500
Valid coordinates: 300/500
Valid coordinates: 400/500
Valid coordinates: 500/500
Valid/Tested configurations: 500/854
Generated Search Space:
NULL
Full Model:  ~ T1_I + T1_J + T2_K + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T2_K))
Clean Info:
Removed Factors: character(0)

Removed Inverse Factors: character(0)

Removed Interactions: [1] "(Intercept)"

New Factors: ['T1_I', 'T1_J', 'T2_K']
New Inverse Factors: ['T1_I', 'T1_J', 'T2_K']
New Interactions: []
New Fixed Factors: {'RT_K': 0, 'RT_J': 0, 'RT_I': 2, 'T1_K': 0, 'U_K': 1, 'U_J': 0, 'U_I': 29, 'T2_I': 0, 'T2_J': 1, 'U1_I': 0}
Updated Full Model:  ~ T1_I + T1_J + T2_K + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T2_K))
Fixed Factors: {'RT_K': 0, 'RT_J': 0, 'RT_I': 2, 'T1_K': 0, 'U_K': 1, 'U_J': 0, 'U_I': 29, 'T2_I': 0, 'T2_J': 1, 'U1_I': 0}
Computing D-Optimal Design
Computing D-Optimal Design with 10 experiments
Design Formula:  ~ T1_I + T1_J + T2_K + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T2_K))
Starting "optFederov" run
Using Search Space:
NULL
Data Dimensions: [1] 500   3

    T1_I T1_J T2_K
17     6    0    0
48     0    0    6
54     0    3    2
84     6    1    2
86     2    0    2
90     2    1    6
132    1    3    0
136    0    1    0
258    6    3    6
361    6    0    0

D-Efficiency Approximation: [1] 0.904

Measuring design of size 10
Current Design Names: ['T1_I', 'T1_J', 'T2_K']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	3
        Additions: 		1342
        Multiplications: 	504
        Divisions: 		0
        Logical: 		0
        Reads: 			2715
        Writes: 		323
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest66.exe __orio_perftest66.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest66.exe  
Program Test Output: 
{'[0, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.212183}
{'[0, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.212137}
{'[0, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.215292}
{'[0, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.216155}
{'[0, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.215879}
{'[0, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.213909}
{'[0, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.21322}
{'[0, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.216233}
{'[0, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.209772}
{'[0, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.211104}
{'[0, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.210728}
{'[0, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.214513}
{'[0, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.215539}
{'[0, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.215487}
{'[0, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.214417}
{'[0, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.215613}
{'[0, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.215615}
{'[0, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.215768}
{'[0, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.215962}
{'[0, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.21614}
{'[0, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.215508}
{'[0, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.215215}
{'[0, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.214507}
{'[0, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.215963}
{'[0, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.212841}
{'[0, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.215581}
{'[0, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.214472}
{'[0, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.210838}
{'[0, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.210726}
{'[0, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.21223}

out:
 ["{'[0, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.212183}", "{'[0, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.212137}", "{'[0, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.215292}", "{'[0, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.216155}", "{'[0, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.215879}", "{'[0, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.213909}", "{'[0, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.21322}", "{'[0, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.216233}", "{'[0, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.209772}", "{'[0, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.211104}", "{'[0, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.210728}", "{'[0, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.214513}", "{'[0, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.215539}", "{'[0, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.215487}", "{'[0, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.214417}", "{'[0, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.215613}", "{'[0, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.215615}", "{'[0, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.215768}", "{'[0, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.215962}", "{'[0, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.21614}", "{'[0, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.215508}", "{'[0, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.215215}", "{'[0, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.214507}", "{'[0, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.215963}", "{'[0, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.212841}", "{'[0, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.215581}", "{'[0, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.214472}", "{'[0, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.210838}", "{'[0, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.210726}", "{'[0, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]' : 0.21223}"]
returning from 'run': {'[0, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]': ([0.212183, 0.212137, 0.215292, 0.216155, 0.215879, 0.213909, 0.21322, 0.216233, 0.209772, 0.211104, 0.210728, 0.214513, 0.215539, 0.215487, 0.214417, 0.215613, 0.215615, 0.215768, 0.215962, 0.21614, 0.215508, 0.215215, 0.214507, 0.215963, 0.212841, 0.215581, 0.214472, 0.210838, 0.210726, 0.21223], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 3, 0, 0, 1, 2, 0, 29, 0, 1, 2, 0, 0]': ([0.212183, 0.212137, 0.215292, 0.216155, 0.215879, 0.213909, 0.21322, 0.216233, 0.209772, 0.211104, 0.210728, 0.214513, 0.215539, 0.215487, 0.214417, 0.215613, 0.215615, 0.215768, 0.215962, 0.21614, 0.215508, 0.215215, 0.214507, 0.215963, 0.212841, 0.215581, 0.214472, 0.210838, 0.210726, 0.21223], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Code stats:
        Number of loops: 	77
        Max loop nest depth: 	4
        Additions: 		1521
        Multiplications: 	504
        Divisions: 		0
        Logical: 		0
        Reads: 			3051
        Writes: 		439
        Comparisons:		77
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest67.exe __orio_perftest67.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest67.exe  
Program Test Output: 
{'[0, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.233439}
{'[0, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.233252}
{'[0, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.211353}
{'[0, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.211942}
{'[0, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.213389}
{'[0, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.209649}
{'[0, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.208926}
{'[0, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.209311}
{'[0, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.213058}
{'[0, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.212865}
{'[0, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.208863}
{'[0, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.20867}
{'[0, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.206603}
{'[0, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.213728}
{'[0, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.213278}
{'[0, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.213707}
{'[0, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.210478}
{'[0, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.206987}
{'[0, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.207216}
{'[0, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.210402}
{'[0, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.21356}
{'[0, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.21237}
{'[0, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.212979}
{'[0, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.213517}
{'[0, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.213875}
{'[0, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.21348}
{'[0, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.212966}
{'[0, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.213682}
{'[0, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.213287}
{'[0, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.210951}

out:
 ["{'[0, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.233439}", "{'[0, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.233252}", "{'[0, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.211353}", "{'[0, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.211942}", "{'[0, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.213389}", "{'[0, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.209649}", "{'[0, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.208926}", "{'[0, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.209311}", "{'[0, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.213058}", "{'[0, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.212865}", "{'[0, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.208863}", "{'[0, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.20867}", "{'[0, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.206603}", "{'[0, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.213728}", "{'[0, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.213278}", "{'[0, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.213707}", "{'[0, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.210478}", "{'[0, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.206987}", "{'[0, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.207216}", "{'[0, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.210402}", "{'[0, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.21356}", "{'[0, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.21237}", "{'[0, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.212979}", "{'[0, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.213517}", "{'[0, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.213875}", "{'[0, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.21348}", "{'[0, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.212966}", "{'[0, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.213682}", "{'[0, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.213287}", "{'[0, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.210951}"]
returning from 'run': {'[0, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]': ([0.233439, 0.233252, 0.211353, 0.211942, 0.213389, 0.209649, 0.208926, 0.209311, 0.213058, 0.212865, 0.208863, 0.20867, 0.206603, 0.213728, 0.213278, 0.213707, 0.210478, 0.206987, 0.207216, 0.210402, 0.21356, 0.21237, 0.212979, 0.213517, 0.213875, 0.21348, 0.212966, 0.213682, 0.213287, 0.210951], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]': ([0.233439, 0.233252, 0.211353, 0.211942, 0.213389, 0.209649, 0.208926, 0.209311, 0.213058, 0.212865, 0.208863, 0.20867, 0.206603, 0.213728, 0.213278, 0.213707, 0.210478, 0.206987, 0.207216, 0.210402, 0.21356, 0.21237, 0.212979, 0.213517, 0.213875, 0.21348, 0.212966, 0.213682, 0.213287, 0.210951], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Complete design, with measurements:
    T1_I T1_J T2_K cost_mean
17     6    0    0 0.2109126
48     0    0    6 0.2155078
54     0    3    2 0.2141182
84     6    1    2 0.2209361
86     2    0    2 0.2141833
90     2    1    6 0.2200474
132    1    3    0 0.3623918
136    0    1    0 0.2129261
258    6    3    6 0.2106025
361    6    0    0 0.2109126

Heteroscedasticity Test p-value: 0.869697188729
Regression Step:                Df   Sum Sq  Mean Sq F value Pr(>F)
T1_I             1 0.001283 0.001283   0.659  0.476
T1_J             1 0.003785 0.003785   1.944  0.258
T2_K             1 0.002526 0.002526   1.298  0.337
I(1/(1 + T1_I))  1 0.004399 0.004399   2.260  0.230
I(1/(1 + T1_J))  1 0.000292 0.000292   0.150  0.724
I(1/(1 + T2_K))  1 0.001685 0.001685   0.866  0.421
Residuals        3 0.005841 0.001947               

Getting fixed Model Terms
Prf Values: 
{'T1_I': 0.4763305677751704, 'T1_J': 0.2575181789573161, 'I(1/(1 + T1_J))': 0.7242240632167677, 'I(1/(1 + T2_K))': 0.42082405519416966, 'T2_K': 0.3373613462648232, 'I(1/(1 + T1_I))': 0.229808847195212}
Ordered Keys: 
['I(1/(1 + T1_I))', 'T1_J', 'T2_K', 'I(1/(1 + T2_K))', 'T1_I', 'I(1/(1 + T1_J))']
No variables within acceptable threshold
Predicting Best Values for: []
Using Model: . ~ .
Prediction Regression Step:                Df   Sum Sq  Mean Sq F value Pr(>F)
T1_I             1 0.001283 0.001283   0.659  0.476
T1_J             1 0.003785 0.003785   1.944  0.258
T2_K             1 0.002526 0.002526   1.298  0.337
I(1/(1 + T1_I))  1 0.004399 0.004399   2.260  0.230
I(1/(1 + T1_J))  1 0.000292 0.000292   0.150  0.724
I(1/(1 + T2_K))  1 0.001685 0.001685   0.866  0.421
Residuals        3 0.005841 0.001947               

Generating valid search space of size 1500 (does not spend evaluations)
Valid coordinates: 300/1500
Valid coordinates: 600/1500
Valid coordinates: 900/1500
Valid coordinates: 1200/1500
Valid coordinates: 1500/1500
Valid/Tested configurations: 1500/2542
Generated Search Space:
NULL
Getting Best from Design
Response: ['cost_mean']
Design Names: [1] "T1_I"      "T1_J"      "T2_K"      "cost_mean"

Design Response:     cost_mean
17  0.2109126
48  0.2155078
54  0.2141182
84  0.2209361
86  0.2141833
90  0.2200474
132 0.3623918
136 0.2129261
258 0.2106025
361 0.2109126

Current Design Names: ['T1_I', 'T1_J', 'T2_K']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Getting fixed variables
Getting fixed variables
Prf Values: 
{'T1_I': 0.4763305677751704, 'T1_J': 0.2575181789573161, 'I(1/(1 + T1_J))': 0.7242240632167677, 'I(1/(1 + T2_K))': 0.42082405519416966, 'T2_K': 0.3373613462648232, 'I(1/(1 + T1_I))': 0.229808847195212}
Ordered Keys: 
['I(1/(1 + T1_I))', 'T1_J', 'T2_K', 'I(1/(1 + T2_K))', 'T1_I', 'I(1/(1 + T1_J))']
No variables within acceptable threshold
Fixed Variables: {'RT_K': 0, 'RT_J': 0, 'RT_I': 2, 'T1_K': 0, 'U_K': 1, 'U_J': 0, 'U_I': 29, 'T2_I': 0, 'T2_J': 1, 'U1_I': 0}
Unique Variables: []
Pruning Model
Getting fixed variables
Prf Values: 
{'T1_I': 0.4763305677751704, 'T1_J': 0.2575181789573161, 'I(1/(1 + T1_J))': 0.7242240632167677, 'I(1/(1 + T2_K))': 0.42082405519416966, 'T2_K': 0.3373613462648232, 'I(1/(1 + T1_I))': 0.229808847195212}
Ordered Keys: 
['I(1/(1 + T1_I))', 'T1_J', 'T2_K', 'I(1/(1 + T2_K))', 'T1_I', 'I(1/(1 + T1_J))']
No variables within acceptable threshold
Best Predicted:     T1_I T1_J T1_K T2_I T2_J T2_K U1_I U_I U_J U_K RT_I RT_J RT_K
341    6    0    0    0    1    4    0  29   0   1    2    0    0

Best From Design: [6, 3, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]
Pruned Factors: ['T1_I', 'T1_J', 'T2_K']
Pruned Inverse Factors: ['T1_I', 'T1_J', 'T2_K']
Pruned Interactions: []
Fixed Factors: {'RT_K': 0, 'RT_J': 0, 'RT_I': 2, 'T1_K': 0, 'U_K': 1, 'U_J': 0, 'U_I': 29, 'T2_I': 0, 'T2_J': 1, 'U1_I': 0}
Length of requested configs: 1
Result was on Database, Returning Now
Starting Point (-O3):
0.16059526666666663
Predicted Best Point:
[6, 0, 0, 0, 1, 4, 0, 29, 0, 1, 2, 0, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	4
        Additions: 		1355
        Multiplications: 	504
        Divisions: 		0
        Logical: 		0
        Reads: 			2726
        Writes: 		325
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest68.exe __orio_perftest68.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest68.exe  
Program Test Output: 
{'[6, 0, 0, 0, 1, 4, 0, 29, 0, 1, 2, 0, 0]' : 0.210592}
{'[6, 0, 0, 0, 1, 4, 0, 29, 0, 1, 2, 0, 0]' : 0.214614}
{'[6, 0, 0, 0, 1, 4, 0, 29, 0, 1, 2, 0, 0]' : 0.211137}
{'[6, 0, 0, 0, 1, 4, 0, 29, 0, 1, 2, 0, 0]' : 0.209239}
{'[6, 0, 0, 0, 1, 4, 0, 29, 0, 1, 2, 0, 0]' : 0.209544}
{'[6, 0, 0, 0, 1, 4, 0, 29, 0, 1, 2, 0, 0]' : 0.211354}
{'[6, 0, 0, 0, 1, 4, 0, 29, 0, 1, 2, 0, 0]' : 0.21474}
{'[6, 0, 0, 0, 1, 4, 0, 29, 0, 1, 2, 0, 0]' : 0.211886}
{'[6, 0, 0, 0, 1, 4, 0, 29, 0, 1, 2, 0, 0]' : 0.208989}
{'[6, 0, 0, 0, 1, 4, 0, 29, 0, 1, 2, 0, 0]' : 0.214436}
{'[6, 0, 0, 0, 1, 4, 0, 29, 0, 1, 2, 0, 0]' : 0.214522}
{'[6, 0, 0, 0, 1, 4, 0, 29, 0, 1, 2, 0, 0]' : 0.214549}
{'[6, 0, 0, 0, 1, 4, 0, 29, 0, 1, 2, 0, 0]' : 0.213324}
{'[6, 0, 0, 0, 1, 4, 0, 29, 0, 1, 2, 0, 0]' : 0.211314}
{'[6, 0, 0, 0, 1, 4, 0, 29, 0, 1, 2, 0, 0]' : 0.214833}
{'[6, 0, 0, 0, 1, 4, 0, 29, 0, 1, 2, 0, 0]' : 0.214362}
{'[6, 0, 0, 0, 1, 4, 0, 29, 0, 1, 2, 0, 0]' : 0.214142}
{'[6, 0, 0, 0, 1, 4, 0, 29, 0, 1, 2, 0, 0]' : 0.213353}
{'[6, 0, 0, 0, 1, 4, 0, 29, 0, 1, 2, 0, 0]' : 0.210975}
{'[6, 0, 0, 0, 1, 4, 0, 29, 0, 1, 2, 0, 0]' : 0.21009}
{'[6, 0, 0, 0, 1, 4, 0, 29, 0, 1, 2, 0, 0]' : 0.212077}
{'[6, 0, 0, 0, 1, 4, 0, 29, 0, 1, 2, 0, 0]' : 0.214404}
{'[6, 0, 0, 0, 1, 4, 0, 29, 0, 1, 2, 0, 0]' : 0.214554}
{'[6, 0, 0, 0, 1, 4, 0, 29, 0, 1, 2, 0, 0]' : 0.209026}
{'[6, 0, 0, 0, 1, 4, 0, 29, 0, 1, 2, 0, 0]' : 0.204785}
{'[6, 0, 0, 0, 1, 4, 0, 29, 0, 1, 2, 0, 0]' : 0.207059}
{'[6, 0, 0, 0, 1, 4, 0, 29, 0, 1, 2, 0, 0]' : 0.210749}
{'[6, 0, 0, 0, 1, 4, 0, 29, 0, 1, 2, 0, 0]' : 0.210831}
{'[6, 0, 0, 0, 1, 4, 0, 29, 0, 1, 2, 0, 0]' : 0.211023}
{'[6, 0, 0, 0, 1, 4, 0, 29, 0, 1, 2, 0, 0]' : 0.207889}

out:
 ["{'[6, 0, 0, 0, 1, 4, 0, 29, 0, 1, 2, 0, 0]' : 0.210592}", "{'[6, 0, 0, 0, 1, 4, 0, 29, 0, 1, 2, 0, 0]' : 0.214614}", "{'[6, 0, 0, 0, 1, 4, 0, 29, 0, 1, 2, 0, 0]' : 0.211137}", "{'[6, 0, 0, 0, 1, 4, 0, 29, 0, 1, 2, 0, 0]' : 0.209239}", "{'[6, 0, 0, 0, 1, 4, 0, 29, 0, 1, 2, 0, 0]' : 0.209544}", "{'[6, 0, 0, 0, 1, 4, 0, 29, 0, 1, 2, 0, 0]' : 0.211354}", "{'[6, 0, 0, 0, 1, 4, 0, 29, 0, 1, 2, 0, 0]' : 0.21474}", "{'[6, 0, 0, 0, 1, 4, 0, 29, 0, 1, 2, 0, 0]' : 0.211886}", "{'[6, 0, 0, 0, 1, 4, 0, 29, 0, 1, 2, 0, 0]' : 0.208989}", "{'[6, 0, 0, 0, 1, 4, 0, 29, 0, 1, 2, 0, 0]' : 0.214436}", "{'[6, 0, 0, 0, 1, 4, 0, 29, 0, 1, 2, 0, 0]' : 0.214522}", "{'[6, 0, 0, 0, 1, 4, 0, 29, 0, 1, 2, 0, 0]' : 0.214549}", "{'[6, 0, 0, 0, 1, 4, 0, 29, 0, 1, 2, 0, 0]' : 0.213324}", "{'[6, 0, 0, 0, 1, 4, 0, 29, 0, 1, 2, 0, 0]' : 0.211314}", "{'[6, 0, 0, 0, 1, 4, 0, 29, 0, 1, 2, 0, 0]' : 0.214833}", "{'[6, 0, 0, 0, 1, 4, 0, 29, 0, 1, 2, 0, 0]' : 0.214362}", "{'[6, 0, 0, 0, 1, 4, 0, 29, 0, 1, 2, 0, 0]' : 0.214142}", "{'[6, 0, 0, 0, 1, 4, 0, 29, 0, 1, 2, 0, 0]' : 0.213353}", "{'[6, 0, 0, 0, 1, 4, 0, 29, 0, 1, 2, 0, 0]' : 0.210975}", "{'[6, 0, 0, 0, 1, 4, 0, 29, 0, 1, 2, 0, 0]' : 0.21009}", "{'[6, 0, 0, 0, 1, 4, 0, 29, 0, 1, 2, 0, 0]' : 0.212077}", "{'[6, 0, 0, 0, 1, 4, 0, 29, 0, 1, 2, 0, 0]' : 0.214404}", "{'[6, 0, 0, 0, 1, 4, 0, 29, 0, 1, 2, 0, 0]' : 0.214554}", "{'[6, 0, 0, 0, 1, 4, 0, 29, 0, 1, 2, 0, 0]' : 0.209026}", "{'[6, 0, 0, 0, 1, 4, 0, 29, 0, 1, 2, 0, 0]' : 0.204785}", "{'[6, 0, 0, 0, 1, 4, 0, 29, 0, 1, 2, 0, 0]' : 0.207059}", "{'[6, 0, 0, 0, 1, 4, 0, 29, 0, 1, 2, 0, 0]' : 0.210749}", "{'[6, 0, 0, 0, 1, 4, 0, 29, 0, 1, 2, 0, 0]' : 0.210831}", "{'[6, 0, 0, 0, 1, 4, 0, 29, 0, 1, 2, 0, 0]' : 0.211023}", "{'[6, 0, 0, 0, 1, 4, 0, 29, 0, 1, 2, 0, 0]' : 0.207889}"]
returning from 'run': {'[6, 0, 0, 0, 1, 4, 0, 29, 0, 1, 2, 0, 0]': ([0.210592, 0.214614, 0.211137, 0.209239, 0.209544, 0.211354, 0.21474, 0.211886, 0.208989, 0.214436, 0.214522, 0.214549, 0.213324, 0.211314, 0.214833, 0.214362, 0.214142, 0.213353, 0.210975, 0.21009, 0.212077, 0.214404, 0.214554, 0.209026, 0.204785, 0.207059, 0.210749, 0.210831, 0.211023, 0.207889], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 0, 0, 1, 4, 0, 29, 0, 1, 2, 0, 0]': ([0.210592, 0.214614, 0.211137, 0.209239, 0.209544, 0.211354, 0.21474, 0.211886, 0.208989, 0.214436, 0.214522, 0.214549, 0.213324, 0.211314, 0.214833, 0.214362, 0.214142, 0.213353, 0.210975, 0.21009, 0.212077, 0.214404, 0.214554, 0.209026, 0.204785, 0.207059, 0.210749, 0.210831, 0.211023, 0.207889], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Design Best Point:
[6, 3, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]
Length of requested configs: 1
Result was on Database, Returning Now
Fixed Factors: {'RT_K': 0, 'RT_J': 0, 'RT_I': 2, 'T1_K': 0, 'U_K': 1, 'U_J': 0, 'U_I': 29, 'T2_I': 0, 'T2_J': 1, 'U1_I': 0}
Slowdown (Design Best): 1.3113867199905023
Slowdown (Predicted Best): 1.3180944726889006
Budget: 72/180
Current Best Point: 
[0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]
Step 4
Generating valid search space of size 500 (does not spend evaluations)
Valid coordinates: 100/500
Valid coordinates: 200/500
Valid coordinates: 300/500
Valid coordinates: 400/500
Valid coordinates: 500/500
Valid/Tested configurations: 500/830
Generated Search Space:
NULL
Full Model:  ~ T1_I + T1_J + T2_K + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T2_K))
Clean Info:
Removed Factors: character(0)

Removed Inverse Factors: character(0)

Removed Interactions: [1] "(Intercept)"

New Factors: ['T1_I', 'T1_J', 'T2_K']
New Inverse Factors: ['T1_I', 'T1_J', 'T2_K']
New Interactions: []
New Fixed Factors: {'RT_K': 0, 'RT_J': 0, 'RT_I': 2, 'T1_K': 0, 'U_K': 1, 'U_J': 0, 'U_I': 29, 'T2_I': 0, 'T2_J': 1, 'U1_I': 0}
Updated Full Model:  ~ T1_I + T1_J + T2_K + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T2_K))
Fixed Factors: {'RT_K': 0, 'RT_J': 0, 'RT_I': 2, 'T1_K': 0, 'U_K': 1, 'U_J': 0, 'U_I': 29, 'T2_I': 0, 'T2_J': 1, 'U1_I': 0}
Computing D-Optimal Design
Computing D-Optimal Design with 10 experiments
Design Formula:  ~ T1_I + T1_J + T2_K + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T2_K))
Starting "optFederov" run
Using Search Space:
NULL
Data Dimensions: [1] 500   3

    T1_I T1_J T2_K
10     0    3    0
45     0    0    6
67     2    1    0
75     1    1    6
78     6    3    6
136    6    0    0
143    2    3    2
221    2    0    2
305    6    1    2
376    0    1    2

D-Efficiency Approximation: [1] 0.859

Measuring design of size 10
Current Design Names: ['T1_I', 'T1_J', 'T2_K']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Code stats:
        Number of loops: 	23
        Max loop nest depth: 	5
        Additions: 		1364
        Multiplications: 	504
        Divisions: 		0
        Logical: 		0
        Reads: 			2747
        Writes: 		331
        Comparisons:		23
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest69.exe __orio_perftest69.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest69.exe  
Program Test Output: 
{'[1, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.380785}
{'[1, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.381487}
{'[1, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.3828}
{'[1, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.373219}
{'[1, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.371307}
{'[1, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.384316}
{'[1, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.376634}
{'[1, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.375171}
{'[1, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.378866}
{'[1, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.372351}
{'[1, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.382797}
{'[1, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.383138}
{'[1, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.380468}
{'[1, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.380796}
{'[1, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.373517}
{'[1, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.380409}
{'[1, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.38433}
{'[1, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.38398}
{'[1, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.374909}
{'[1, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.381364}
{'[1, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.381955}
{'[1, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.374506}
{'[1, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.384468}
{'[1, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.384243}
{'[1, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.378734}
{'[1, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.375135}
{'[1, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.379938}
{'[1, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.382781}
{'[1, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.378324}
{'[1, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.380207}

out:
 ["{'[1, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.380785}", "{'[1, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.381487}", "{'[1, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.3828}", "{'[1, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.373219}", "{'[1, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.371307}", "{'[1, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.384316}", "{'[1, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.376634}", "{'[1, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.375171}", "{'[1, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.378866}", "{'[1, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.372351}", "{'[1, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.382797}", "{'[1, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.383138}", "{'[1, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.380468}", "{'[1, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.380796}", "{'[1, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.373517}", "{'[1, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.380409}", "{'[1, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.38433}", "{'[1, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.38398}", "{'[1, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.374909}", "{'[1, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.381364}", "{'[1, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.381955}", "{'[1, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.374506}", "{'[1, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.384468}", "{'[1, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.384243}", "{'[1, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.378734}", "{'[1, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.375135}", "{'[1, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.379938}", "{'[1, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.382781}", "{'[1, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.378324}", "{'[1, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]' : 0.380207}"]
returning from 'run': {'[1, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]': ([0.380785, 0.381487, 0.3828, 0.373219, 0.371307, 0.384316, 0.376634, 0.375171, 0.378866, 0.372351, 0.382797, 0.383138, 0.380468, 0.380796, 0.373517, 0.380409, 0.38433, 0.38398, 0.374909, 0.381364, 0.381955, 0.374506, 0.384468, 0.384243, 0.378734, 0.375135, 0.379938, 0.382781, 0.378324, 0.380207], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 1, 0, 0, 1, 6, 0, 29, 0, 1, 2, 0, 0]': ([0.380785, 0.381487, 0.3828, 0.373219, 0.371307, 0.384316, 0.376634, 0.375171, 0.378866, 0.372351, 0.382797, 0.383138, 0.380468, 0.380796, 0.373517, 0.380409, 0.38433, 0.38398, 0.374909, 0.381364, 0.381955, 0.374506, 0.384468, 0.384243, 0.378734, 0.375135, 0.379938, 0.382781, 0.378324, 0.380207], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Complete design, with measurements:
    T1_I T1_J T2_K cost_mean
10     0    3    0 0.2096361
45     0    0    6 0.2155078
67     2    1    0 0.2093345
75     1    1    6 0.3794312
78     6    3    6 0.2106025
136    6    0    0 0.2109126
143    2    3    2 0.2149037
221    2    0    2 0.2141833
305    6    1    2 0.2209361
376    0    1    2 0.2162628

Heteroscedasticity Test p-value: 0.0363585887817
Power Transform Step:
Heteroscedasticity Test p-value: 0.448085065495
Regression Step:                Df    Sum Sq   Mean Sq F value Pr(>F)
T1_I             1 3.117e+14 3.117e+14   0.226  0.667
T1_J             1 6.316e+14 6.316e+14   0.458  0.547
T2_K             1 3.352e+15 3.352e+15   2.429  0.217
I(1/(1 + T1_I))  1 7.074e+14 7.074e+14   0.512  0.526
I(1/(1 + T1_J))  1 2.310e+15 2.310e+15   1.674  0.286
I(1/(1 + T2_K))  1 4.555e+14 4.555e+14   0.330  0.606
Residuals        3 4.141e+15 1.380e+15               

Getting fixed Model Terms
Prf Values: 
{'T1_I': 0.6670790117005234, 'T1_J': 0.5472196621666017, 'I(1/(1 + T1_J))': 0.2863745657940646, 'I(1/(1 + T2_K))': 0.6059056408969098, 'T2_K': 0.2170029857224899, 'I(1/(1 + T1_I))': 0.5257568362470656}
Ordered Keys: 
['T2_K', 'I(1/(1 + T1_J))', 'I(1/(1 + T1_I))', 'T1_J', 'I(1/(1 + T2_K))', 'T1_I']
No variables within acceptable threshold
Predicting Best Values for: []
Using Model: . ~ .
Prediction Regression Step:                Df    Sum Sq   Mean Sq F value Pr(>F)
T1_I             1 3.117e+14 3.117e+14   0.226  0.667
T1_J             1 6.316e+14 6.316e+14   0.458  0.547
T2_K             1 3.352e+15 3.352e+15   2.429  0.217
I(1/(1 + T1_I))  1 7.074e+14 7.074e+14   0.512  0.526
I(1/(1 + T1_J))  1 2.310e+15 2.310e+15   1.674  0.286
I(1/(1 + T2_K))  1 4.555e+14 4.555e+14   0.330  0.606
Residuals        3 4.141e+15 1.380e+15               

Generating valid search space of size 1500 (does not spend evaluations)
Valid coordinates: 300/1500
Valid coordinates: 600/1500
Valid coordinates: 900/1500
Valid coordinates: 1200/1500
Valid coordinates: 1500/1500
Valid/Tested configurations: 1500/2623
Generated Search Space:
NULL
Getting Best from Design
Response: ['cost_mean']
Design Names: [1] "T1_I"      "T1_J"      "T2_K"      "cost_mean"

Design Response:     cost_mean
10  0.2096361
45  0.2155078
67  0.2093345
75  0.3794312
78  0.2106025
136 0.2109126
143 0.2149037
221 0.2141833
305 0.2209361
376 0.2162628

Current Design Names: ['T1_I', 'T1_J', 'T2_K']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Getting fixed variables
Getting fixed variables
Prf Values: 
{'T1_I': 0.6670790117005234, 'T1_J': 0.5472196621666017, 'I(1/(1 + T1_J))': 0.2863745657940646, 'I(1/(1 + T2_K))': 0.6059056408969098, 'T2_K': 0.2170029857224899, 'I(1/(1 + T1_I))': 0.5257568362470656}
Ordered Keys: 
['T2_K', 'I(1/(1 + T1_J))', 'I(1/(1 + T1_I))', 'T1_J', 'I(1/(1 + T2_K))', 'T1_I']
No variables within acceptable threshold
Fixed Variables: {'RT_K': 0, 'RT_J': 0, 'RT_I': 2, 'T1_K': 0, 'U_K': 1, 'U_J': 0, 'U_I': 29, 'T2_I': 0, 'T2_J': 1, 'U1_I': 0}
Unique Variables: []
Pruning Model
Getting fixed variables
Prf Values: 
{'T1_I': 0.6670790117005234, 'T1_J': 0.5472196621666017, 'I(1/(1 + T1_J))': 0.2863745657940646, 'I(1/(1 + T2_K))': 0.6059056408969098, 'T2_K': 0.2170029857224899, 'I(1/(1 + T1_I))': 0.5257568362470656}
Ordered Keys: 
['T2_K', 'I(1/(1 + T1_J))', 'I(1/(1 + T1_I))', 'T1_J', 'I(1/(1 + T2_K))', 'T1_I']
No variables within acceptable threshold
Best Predicted:    T1_I T1_J T1_K T2_I T2_J T2_K U1_I U_I U_J U_K RT_I RT_J RT_K
30    6    3    0    0    1    0    0  29   0   1    2    0    0

Best From Design: [2, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]
Pruned Factors: ['T1_I', 'T1_J', 'T2_K']
Pruned Inverse Factors: ['T1_I', 'T1_J', 'T2_K']
Pruned Interactions: []
Fixed Factors: {'RT_K': 0, 'RT_J': 0, 'RT_I': 2, 'T1_K': 0, 'U_K': 1, 'U_J': 0, 'U_I': 29, 'T2_I': 0, 'T2_J': 1, 'U1_I': 0}
Length of requested configs: 1
Result was on Database, Returning Now
Starting Point (-O3):
0.16059526666666663
Predicted Best Point:
[6, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	75
        Max loop nest depth: 	4
        Additions: 		1525
        Multiplications: 	504
        Divisions: 		0
        Logical: 		0
        Reads: 			3041
        Writes: 		435
        Comparisons:		75
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest70.exe __orio_perftest70.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest70.exe  
Program Test Output: 
{'[6, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.232493}
{'[6, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.232482}
{'[6, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.208998}
{'[6, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.213821}
{'[6, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.212826}
{'[6, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.209102}
{'[6, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.208832}
{'[6, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.206026}
{'[6, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.203626}
{'[6, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.205504}
{'[6, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.212804}
{'[6, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.212182}
{'[6, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.21014}
{'[6, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.208676}
{'[6, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.210249}
{'[6, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.21338}
{'[6, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.211105}
{'[6, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.210733}
{'[6, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.208874}
{'[6, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.211217}
{'[6, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.212824}
{'[6, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.210876}
{'[6, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.212682}
{'[6, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.209311}
{'[6, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.212596}
{'[6, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.213476}
{'[6, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.210822}
{'[6, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.2131}
{'[6, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.209886}
{'[6, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.208586}

out:
 ["{'[6, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.232493}", "{'[6, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.232482}", "{'[6, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.208998}", "{'[6, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.213821}", "{'[6, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.212826}", "{'[6, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.209102}", "{'[6, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.208832}", "{'[6, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.206026}", "{'[6, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.203626}", "{'[6, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.205504}", "{'[6, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.212804}", "{'[6, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.212182}", "{'[6, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.21014}", "{'[6, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.208676}", "{'[6, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.210249}", "{'[6, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.21338}", "{'[6, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.211105}", "{'[6, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.210733}", "{'[6, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.208874}", "{'[6, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.211217}", "{'[6, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.212824}", "{'[6, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.210876}", "{'[6, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.212682}", "{'[6, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.209311}", "{'[6, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.212596}", "{'[6, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.213476}", "{'[6, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.210822}", "{'[6, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.2131}", "{'[6, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.209886}", "{'[6, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]' : 0.208586}"]
returning from 'run': {'[6, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]': ([0.232493, 0.232482, 0.208998, 0.213821, 0.212826, 0.209102, 0.208832, 0.206026, 0.203626, 0.205504, 0.212804, 0.212182, 0.21014, 0.208676, 0.210249, 0.21338, 0.211105, 0.210733, 0.208874, 0.211217, 0.212824, 0.210876, 0.212682, 0.209311, 0.212596, 0.213476, 0.210822, 0.2131, 0.209886, 0.208586], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]': ([0.232493, 0.232482, 0.208998, 0.213821, 0.212826, 0.209102, 0.208832, 0.206026, 0.203626, 0.205504, 0.212804, 0.212182, 0.21014, 0.208676, 0.210249, 0.21338, 0.211105, 0.210733, 0.208874, 0.211217, 0.212824, 0.210876, 0.212682, 0.209311, 0.212596, 0.213476, 0.210822, 0.2131, 0.209886, 0.208586], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Design Best Point:
[2, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]
Length of requested configs: 1
Result was on Database, Returning Now
Fixed Factors: {'RT_K': 0, 'RT_J': 0, 'RT_I': 2, 'T1_K': 0, 'U_K': 1, 'U_J': 0, 'U_I': 29, 'T2_I': 0, 'T2_J': 1, 'U1_I': 0}
Slowdown (Design Best): 1.30349130256641
Slowdown (Predicted Best): 1.31951356806282
Budget: 82/180
Current Best Point: 
[0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]
Step 5
Generating valid search space of size 500 (does not spend evaluations)
Valid coordinates: 100/500
Valid coordinates: 200/500
Valid coordinates: 300/500
Valid coordinates: 400/500
Valid coordinates: 500/500
Valid/Tested configurations: 500/831
Generated Search Space:
NULL
Full Model:  ~ T1_I + T1_J + T2_K + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T2_K))
Clean Info:
Removed Factors: character(0)

Removed Inverse Factors: character(0)

Removed Interactions: [1] "(Intercept)"

New Factors: ['T1_I', 'T1_J', 'T2_K']
New Inverse Factors: ['T1_I', 'T1_J', 'T2_K']
New Interactions: []
New Fixed Factors: {'RT_K': 0, 'RT_J': 0, 'RT_I': 2, 'T1_K': 0, 'U_K': 1, 'U_J': 0, 'U_I': 29, 'T2_I': 0, 'T2_J': 1, 'U1_I': 0}
Updated Full Model:  ~ T1_I + T1_J + T2_K + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T2_K))
Fixed Factors: {'RT_K': 0, 'RT_J': 0, 'RT_I': 2, 'T1_K': 0, 'U_K': 1, 'U_J': 0, 'U_I': 29, 'T2_I': 0, 'T2_J': 1, 'U1_I': 0}
Computing D-Optimal Design
Computing D-Optimal Design with 10 experiments
Design Formula:  ~ T1_I + T1_J + T2_K + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T2_K))
Starting "optFederov" run
Using Search Space:
NULL
Data Dimensions: [1] 500   3

    T1_I T1_J T2_K
57     6    3    6
62     6    1    2
64     0    1    2
80     0    3    0
223    0    0    6
254    6    0    0
264    2    1    0
295    2    1    6
388    2    3    2
477    2    0    2

D-Efficiency Approximation: [1] 0.904

Measuring design of size 10
Current Design Names: ['T1_I', 'T1_J', 'T2_K']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Complete design, with measurements:
    T1_I T1_J T2_K cost_mean
57     6    3    6 0.2106025
62     6    1    2 0.2209361
64     0    1    2 0.2162628
80     0    3    0 0.2096361
223    0    0    6 0.2155078
254    6    0    0 0.2109126
264    2    1    0 0.2093345
295    2    1    6 0.2200474
388    2    3    2 0.2149037
477    2    0    2 0.2141833

Heteroscedasticity Test p-value: 0.742377930139
Regression Step:                Df    Sum Sq   Mean Sq F value Pr(>F)
T1_I             1 5.000e-08 5.000e-08   0.003  0.957
T1_J             1 1.203e-05 1.203e-05   0.906  0.411
T2_K             1 2.786e-05 2.786e-05   2.098  0.243
I(1/(1 + T1_I))  1 1.260e-06 1.260e-06   0.095  0.779
I(1/(1 + T1_J))  1 3.273e-05 3.273e-05   2.464  0.214
I(1/(1 + T2_K))  1 4.050e-05 4.050e-05   3.050  0.179
Residuals        3 3.984e-05 1.328e-05               

Getting fixed Model Terms
Prf Values: 
{'T1_I': 0.9571822314748596, 'T1_J': 0.4114749287089767, 'I(1/(1 + T1_J))': 0.21449593330121253, 'I(1/(1 + T2_K))': 0.17908684375261716, 'T2_K': 0.24333585621037487, 'I(1/(1 + T1_I))': 0.7786117484904433}
Ordered Keys: 
['I(1/(1 + T2_K))', 'I(1/(1 + T1_J))', 'T2_K', 'T1_J', 'I(1/(1 + T1_I))', 'T1_I']
No variables within acceptable threshold
Predicting Best Values for: []
Using Model: . ~ .
Prediction Regression Step:                Df    Sum Sq   Mean Sq F value Pr(>F)
T1_I             1 5.000e-08 5.000e-08   0.003  0.957
T1_J             1 1.203e-05 1.203e-05   0.906  0.411
T2_K             1 2.786e-05 2.786e-05   2.098  0.243
I(1/(1 + T1_I))  1 1.260e-06 1.260e-06   0.095  0.779
I(1/(1 + T1_J))  1 3.273e-05 3.273e-05   2.464  0.214
I(1/(1 + T2_K))  1 4.050e-05 4.050e-05   3.050  0.179
Residuals        3 3.984e-05 1.328e-05               

Generating valid search space of size 1500 (does not spend evaluations)
Valid coordinates: 300/1500
Valid coordinates: 600/1500
Valid coordinates: 900/1500
Valid coordinates: 1200/1500
Valid coordinates: 1500/1500
Valid/Tested configurations: 1500/2591
Generated Search Space:
NULL
Getting Best from Design
Response: ['cost_mean']
Design Names: [1] "T1_I"      "T1_J"      "T2_K"      "cost_mean"

Design Response:     cost_mean
57  0.2106025
62  0.2209361
64  0.2162628
80  0.2096361
223 0.2155078
254 0.2109126
264 0.2093345
295 0.2200474
388 0.2149037
477 0.2141833

Current Design Names: ['T1_I', 'T1_J', 'T2_K']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Getting fixed variables
Getting fixed variables
Prf Values: 
{'T1_I': 0.9571822314748596, 'T1_J': 0.4114749287089767, 'I(1/(1 + T1_J))': 0.21449593330121253, 'I(1/(1 + T2_K))': 0.17908684375261716, 'T2_K': 0.24333585621037487, 'I(1/(1 + T1_I))': 0.7786117484904433}
Ordered Keys: 
['I(1/(1 + T2_K))', 'I(1/(1 + T1_J))', 'T2_K', 'T1_J', 'I(1/(1 + T1_I))', 'T1_I']
No variables within acceptable threshold
Fixed Variables: {'RT_K': 0, 'RT_J': 0, 'RT_I': 2, 'T1_K': 0, 'U_K': 1, 'U_J': 0, 'U_I': 29, 'T2_I': 0, 'T2_J': 1, 'U1_I': 0}
Unique Variables: []
Pruning Model
Getting fixed variables
Prf Values: 
{'T1_I': 0.9571822314748596, 'T1_J': 0.4114749287089767, 'I(1/(1 + T1_J))': 0.21449593330121253, 'I(1/(1 + T2_K))': 0.17908684375261716, 'T2_K': 0.24333585621037487, 'I(1/(1 + T1_I))': 0.7786117484904433}
Ordered Keys: 
['I(1/(1 + T2_K))', 'I(1/(1 + T1_J))', 'T2_K', 'T1_J', 'I(1/(1 + T1_I))', 'T1_I']
No variables within acceptable threshold
Best Predicted:    T1_I T1_J T1_K T2_I T2_J T2_K U1_I U_I U_J U_K RT_I RT_J RT_K
58    1    3    0    0    1    0    0  29   0   1    2    0    0

Best From Design: [2, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]
Pruned Factors: ['T1_I', 'T1_J', 'T2_K']
Pruned Inverse Factors: ['T1_I', 'T1_J', 'T2_K']
Pruned Interactions: []
Fixed Factors: {'RT_K': 0, 'RT_J': 0, 'RT_I': 2, 'T1_K': 0, 'U_K': 1, 'U_J': 0, 'U_I': 29, 'T2_I': 0, 'T2_J': 1, 'U1_I': 0}
Length of requested configs: 1
Result was on Database, Returning Now
Starting Point (-O3):
0.16059526666666663
Predicted Best Point:
[1, 3, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]
Length of requested configs: 1
Result was on Database, Returning Now
Design Best Point:
[2, 1, 0, 0, 1, 0, 0, 29, 0, 1, 2, 0, 0]
Length of requested configs: 1
Result was on Database, Returning Now
Fixed Factors: {'RT_K': 0, 'RT_J': 0, 'RT_I': 2, 'T1_K': 0, 'U_K': 1, 'U_J': 0, 'U_I': 29, 'T2_I': 0, 'T2_J': 1, 'U1_I': 0}
Slowdown (Design Best): 1.30349130256641
Slowdown (Predicted Best): 2.256553431006061
Budget: 92/180
Current Best Point: 
[0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]
Final Best Point: 
[0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]
Ending DLMT
Best Point: [0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Speedup: 1.4468967534560018
----- end DLMT -----
----- begin DLMT summary -----
 total completed runs: 0
 total successful runs: 0
 total failed runs: 0
 speedup: 1.4468967534560018
----- end DLMT summary -----
----- begin summary -----
 best coordinate: [0, 1, 3, 6, 0, 1, 0, 0, 8, 8, 1, 0, 1]={'RT_K': 8, 'T1_I': 1, 'T1_J': 16, 'T1_K': 64, 'U_K': 9, 'U_J': 9, 'U_I': 1, 'U1_I': 1, 'T2_K': 64, 'T2_J': 1, 'T2_I': 2048, 'RT_I': 8, 'RT_J': 1}, cost=1.109929e-01, transfer_time=inf, inputs=[('N', 10000)], search_time=-785.45, runs=92
----- end summary -----
Length of requested configs: 1
Result was on Database, Returning Now
----- the obtained best performance parameters -----
 RT_I = 8
 RT_J = 1
 RT_K = 8
 T1_I = 1
 T1_J = 16
 T1_K = 64
 T2_I = 2048
 T2_J = 1
 T2_K = 64
 U1_I = 1
 U_I = 1
 U_J = 9
 U_K = 9
 cost_mean = 0.11099289999999998
 points = 92
 speedup_O3 = 1.4468967534560018
 technique = DLMT_update_model
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = kkk
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	4
        Additions: 		1606
        Multiplications: 	504
        Divisions: 		0
        Logical: 		0
        Reads: 			2656
        Writes: 		291
        Comparisons:		18
        Gotos: 			0
        
----- finish optimizations -----

----- begin removing annotations from output-----
----- finished removing annotations from output-----

----- begin writing the output file(s) -----
--> writing output to: _atax2.src0.c
----- finished writing the output file(s) -----

====== END ORIO ======
