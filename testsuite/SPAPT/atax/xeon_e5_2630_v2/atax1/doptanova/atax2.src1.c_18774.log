
====== START ORIO ======

----- begin reading the source file: atax2.src1.c -----
----- finished reading the source file -----

----- begin parsing annotations -----
----- finished parsing annotations -----

----- begin optimizations -----
Search_Space         = 8.234e+13
Number_of_Parameters = 18
Numeric_Parameters   = 13
Binary_Parameters    = 05
['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
[[1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [False, True], [False, True], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 8, 32], [1, 8, 32], [1, 8, 32], [False, True], [False, True], [False, True]]

----- begin empirical tuning for problem size -----
 N = 10000
Parameters: {'ACOPY_x': [0, 2], 'ACOPY_y': [0, 2], 'RT_K': [0, 3], 'T1_I': [0, 7], 'T1_J': [0, 7], 'T1_K': [0, 7], 'U_K': [0, 30], 'U_J': [0, 30], 'U_I': [0, 30], 'U1_I': [0, 30], 'T2_K': [0, 7], 'T2_J': [0, 7], 'T2_I': [0, 7], 'VEC2': [0, 2], 'VEC1': [0, 2], 'RT_I': [0, 3], 'SCR': [0, 2], 'RT_J': [0, 3]}
Parameter Range Values: {'ACOPY_x': [False, True], 'ACOPY_y': [False, True], 'RT_K': [1, 8, 32], 'T1_I': [1, 16, 32, 64, 128, 256, 512], 'T1_J': [1, 16, 32, 64, 128, 256, 512], 'T1_K': [1, 16, 32, 64, 128, 256, 512], 'U_K': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_J': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U1_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'T2_K': [1, 64, 128, 256, 512, 1024, 2048], 'T2_J': [1, 64, 128, 256, 512, 1024, 2048], 'T2_I': [1, 64, 128, 256, 512, 1024, 2048], 'VEC2': [False, True], 'VEC1': [False, True], 'RT_I': [1, 8, 32], 'SCR': [False, True], 'RT_J': [1, 8, 32]}

----- begin random search -----
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Inverse Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Starting DOPT-anova
Step 0
Generating valid search space of size 4600 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Valid coordinates: 920
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Valid coordinates: 1840
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Valid coordinates: 2760
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Valid coordinates: 3680
Tested coordinates: 150000
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Valid coordinates: 4600
Valid/Tested configurations: 4600/184560
Generated Search Space:
NULL
Clean Info:
Removed Factors: character(0)

Removed Inverse Factors: [1] "ACOPY_x" "ACOPY_y" "SCR"     "VEC1"    "VEC2"   

New Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
New Inverse Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
New Fixed Factors: {}
Full Model:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Fixed Factors: {}
Computing D-Optimal Design
Computing D-Optimal Design with 46 experiments
Design Formula:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Starting "optFederov" run
Using Search Space:
NULL
Data Dimensions: [1] 4600   18

     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
36      3    4    6    0    6    5       0       0    1  29   0  29    0    0
243     3    6    5    6    5    3       1       0   19   0   0   0    1    0
339     3    1    2    2    4    2       1       0    5   0  10  16    2    0
362     1    5    0    0    5    1       0       0    4  19  17   0    1    1
438     1    6    4    6    6    6       1       0   21   7  24   0    0    1
801     2    3    1    0    6    0       1       0    0   0  22   6    0    0
812     5    6    4    0    5    6       0       1   29   0   7   3    1    0
921     1    4    3    0    3    3       1       0    8   0  18   0    0    2
970     1    4    0    4    5    4       0       1   19   5   0   5    0    0
1463    0    3    1    2    1    6       0       0    1  26   0  16    0    0
1592    2    1    1    6    1    0       0       1   11  22   6   0    2    0
1675    0    2    4    0    1    0       1       1    4   1   0   0    0    0
1682    2    0    3    3    5    6       1       0   27  24   0   4    0    0
1692    0    4    1    4    0    4       1       1   27  14   0  26    0    0
1700    0    2    4    6    6    2       1       1    0   7   0  12    1    0
2322    0    1    4    3    0    2       1       0    2   9   6   0    0    2
2560    3    4    6    0    2    5       1       1    0  20   0   4    2    0
2647    5    0    3    0    0    1       0       0   10  12   0  26    0    0
2689    1    2    6    4    1    6       0       1   11   0   0  14    0    1
2702    1    4    3    1    6    1       0       1   26  27  29   0    0    0
2703    0    0    4    1    6    5       1       1    2  11   0   9    0    2
2724    1    6    1    6    0    6       0       0    0  11  17   0    0    2
2806    6    1    0    5    2    0       0       0    8   8   0   7    0    0
2820    3    0    0    6    2    1       1       1    0  18   0  16    0    1
2836    0    4    0    3    6    0       0       0    9  25   0   0    2    0
2930    3    6    1    1    4    2       0       0    2   4   0   0    0    1
2951    2    2    3    0    5    1       1       1    3  26  11   0    1    0
3094    3    2    6    0    5    6       1       0   27   1   9   0    0    0
3236    4    6    0    3    0    0       1       1    3   0  29  27    0    0
3308    6    1    3    4    6    5       0       0   27   9   0  26    2    0
3361    6    0    5    0    0    5       1       1    5  22   0  26    1    0
3384    2    2    5    6    5    4       0       0   28  29   0  27    0    2
3422    0    3    2    0    0    2       0       1   28   2  16   0    2    0
3809    1    0    0    2    0    2       1       1   22  11  28   0    0    0
3872    6    1    0    5    0    4       1       0   25  27  26   0    0    1
3893    5    5    2    6    6    0       1       1   28   0  20  28    1    1
4072    6    6    6    6    0    0       0       0    1  13   3   0    0    0
4109    0    0    6    6    4    5       0       0    4   0  27  18    1    0
4131    6    0    1    6    5    0       1       1   15   0   3  25    0    0
4243    2    1    6    5    2    0       1       0   27  26   0  29    2    0
4252    5    0    4    0    1    0       1       0   26   4   0  20    1    0
4342    4    5    3    5    6    6       1       1    1  25   0   0    1    0
4393    2    0    0    2    2    3       0       1    0  16  14   0    1    0
4520    2    5    0    0    6    5       1       1   21   0   2  29    0    2
4535    6    2    0    0    1    2       1       1    0   0  10   0    0    0
4538    4    5    2    2    4    0       0       0   20   0   2  25    1    1
     RT_K SCR VEC1 VEC2
36      2   0    0    1
243     0   0    1    1
339     0   0    0    0
362     0   0    1    1
438     0   0    0    0
801     2   1    1    0
812     0   1    0    0
921     0   0    1    1
970     1   1    1    0
1463    1   0    1    0
1592    0   0    0    1
1675    1   1    0    1
1682    0   0    1    1
1692    2   0    1    1
1700    0   0    0    0
2322    0   1    1    0
2560    0   1    1    1
2647    0   1    0    0
2689    1   0    0    0
2702    0   1    1    1
2703    0   1    0    1
2724    0   1    0    0
2806    2   1    1    1
2820    0   1    1    1
2836    0   0    0    1
2930    0   1    0    0
2951    1   1    0    0
3094    0   1    1    0
3236    0   0    1    1
3308    0   0    1    1
3361    1   0    1    0
3384    0   1    1    0
3422    0   1    0    0
3809    2   1    0    1
3872    1   1    0    1
3893    0   1    1    1
4072    1   0    0    1
4109    1   1    1    0
4131    1   0    1    0
4243    0   1    0    1
4252    1   0    0    0
4342    1   1    1    0
4393    0   0    0    0
4520    0   1    0    0
4535    2   1    1    0
4538    0   1    1    1

D-Efficiency Approximation: [1] 0.399

Measuring design of size 46
Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Length of requested configs: 1
Code stats:
        Number of loops: 	79
        Max loop nest depth: 	5
        Additions: 		13874
        Multiplications: 	3968
        Divisions: 		0
        Logical: 		0
        Reads: 			20771
        Writes: 		2273
        Comparisons:		79
        Gotos: 			0
        
 building the original code:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -DORIGINAL -o __orio_perftest_original.exe __orio_perftest1.c timer_cpu.o -lm
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest1.exe __orio_perftest1.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest1.exe  
Program Test Output: 
{'[3, 4, 6, 0, 6, 5, 0, 0, 1, 29, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.252118}
{'[3, 4, 6, 0, 6, 5, 0, 0, 1, 29, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.235712}
{'[3, 4, 6, 0, 6, 5, 0, 0, 1, 29, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.224789}
{'[3, 4, 6, 0, 6, 5, 0, 0, 1, 29, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.224328}
{'[3, 4, 6, 0, 6, 5, 0, 0, 1, 29, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.22367}
{'[3, 4, 6, 0, 6, 5, 0, 0, 1, 29, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.229007}
{'[3, 4, 6, 0, 6, 5, 0, 0, 1, 29, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.229179}
{'[3, 4, 6, 0, 6, 5, 0, 0, 1, 29, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.22916}
{'[3, 4, 6, 0, 6, 5, 0, 0, 1, 29, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.229089}
{'[3, 4, 6, 0, 6, 5, 0, 0, 1, 29, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.225833}
{'[3, 4, 6, 0, 6, 5, 0, 0, 1, 29, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.229026}
{'[3, 4, 6, 0, 6, 5, 0, 0, 1, 29, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.229122}
{'[3, 4, 6, 0, 6, 5, 0, 0, 1, 29, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.227295}
{'[3, 4, 6, 0, 6, 5, 0, 0, 1, 29, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.223696}
{'[3, 4, 6, 0, 6, 5, 0, 0, 1, 29, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.229269}
{'[3, 4, 6, 0, 6, 5, 0, 0, 1, 29, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.223018}
{'[3, 4, 6, 0, 6, 5, 0, 0, 1, 29, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.21962}
{'[3, 4, 6, 0, 6, 5, 0, 0, 1, 29, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.221589}
{'[3, 4, 6, 0, 6, 5, 0, 0, 1, 29, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.228052}
{'[3, 4, 6, 0, 6, 5, 0, 0, 1, 29, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.229125}
{'[3, 4, 6, 0, 6, 5, 0, 0, 1, 29, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.229112}
{'[3, 4, 6, 0, 6, 5, 0, 0, 1, 29, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.227413}
{'[3, 4, 6, 0, 6, 5, 0, 0, 1, 29, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.223155}
{'[3, 4, 6, 0, 6, 5, 0, 0, 1, 29, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.222921}
{'[3, 4, 6, 0, 6, 5, 0, 0, 1, 29, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.224187}
{'[3, 4, 6, 0, 6, 5, 0, 0, 1, 29, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.229017}
{'[3, 4, 6, 0, 6, 5, 0, 0, 1, 29, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.226289}
{'[3, 4, 6, 0, 6, 5, 0, 0, 1, 29, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.229286}
{'[3, 4, 6, 0, 6, 5, 0, 0, 1, 29, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.229118}
{'[3, 4, 6, 0, 6, 5, 0, 0, 1, 29, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.227444}

out:
 ["{'[3, 4, 6, 0, 6, 5, 0, 0, 1, 29, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.252118}", "{'[3, 4, 6, 0, 6, 5, 0, 0, 1, 29, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.235712}", "{'[3, 4, 6, 0, 6, 5, 0, 0, 1, 29, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.224789}", "{'[3, 4, 6, 0, 6, 5, 0, 0, 1, 29, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.224328}", "{'[3, 4, 6, 0, 6, 5, 0, 0, 1, 29, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.22367}", "{'[3, 4, 6, 0, 6, 5, 0, 0, 1, 29, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.229007}", "{'[3, 4, 6, 0, 6, 5, 0, 0, 1, 29, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.229179}", "{'[3, 4, 6, 0, 6, 5, 0, 0, 1, 29, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.22916}", "{'[3, 4, 6, 0, 6, 5, 0, 0, 1, 29, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.229089}", "{'[3, 4, 6, 0, 6, 5, 0, 0, 1, 29, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.225833}", "{'[3, 4, 6, 0, 6, 5, 0, 0, 1, 29, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.229026}", "{'[3, 4, 6, 0, 6, 5, 0, 0, 1, 29, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.229122}", "{'[3, 4, 6, 0, 6, 5, 0, 0, 1, 29, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.227295}", "{'[3, 4, 6, 0, 6, 5, 0, 0, 1, 29, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.223696}", "{'[3, 4, 6, 0, 6, 5, 0, 0, 1, 29, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.229269}", "{'[3, 4, 6, 0, 6, 5, 0, 0, 1, 29, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.223018}", "{'[3, 4, 6, 0, 6, 5, 0, 0, 1, 29, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.21962}", "{'[3, 4, 6, 0, 6, 5, 0, 0, 1, 29, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.221589}", "{'[3, 4, 6, 0, 6, 5, 0, 0, 1, 29, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.228052}", "{'[3, 4, 6, 0, 6, 5, 0, 0, 1, 29, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.229125}", "{'[3, 4, 6, 0, 6, 5, 0, 0, 1, 29, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.229112}", "{'[3, 4, 6, 0, 6, 5, 0, 0, 1, 29, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.227413}", "{'[3, 4, 6, 0, 6, 5, 0, 0, 1, 29, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.223155}", "{'[3, 4, 6, 0, 6, 5, 0, 0, 1, 29, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.222921}", "{'[3, 4, 6, 0, 6, 5, 0, 0, 1, 29, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.224187}", "{'[3, 4, 6, 0, 6, 5, 0, 0, 1, 29, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.229017}", "{'[3, 4, 6, 0, 6, 5, 0, 0, 1, 29, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.226289}", "{'[3, 4, 6, 0, 6, 5, 0, 0, 1, 29, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.229286}", "{'[3, 4, 6, 0, 6, 5, 0, 0, 1, 29, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.229118}", "{'[3, 4, 6, 0, 6, 5, 0, 0, 1, 29, 0, 29, 0, 0, 2, 0, 0, 1]' : 0.227444}"]
returning from 'run': {'[3, 4, 6, 0, 6, 5, 0, 0, 1, 29, 0, 29, 0, 0, 2, 0, 0, 1]': ([0.252118, 0.235712, 0.224789, 0.224328, 0.22367, 0.229007, 0.229179, 0.22916, 0.229089, 0.225833, 0.229026, 0.229122, 0.227295, 0.223696, 0.229269, 0.223018, 0.21962, 0.221589, 0.228052, 0.229125, 0.229112, 0.227413, 0.223155, 0.222921, 0.224187, 0.229017, 0.226289, 0.229286, 0.229118, 0.227444], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 4, 6, 0, 6, 5, 0, 0, 1, 29, 0, 29, 0, 0, 2, 0, 0, 1]': ([0.252118, 0.235712, 0.224789, 0.224328, 0.22367, 0.229007, 0.229179, 0.22916, 0.229089, 0.225833, 0.229026, 0.229122, 0.227295, 0.223696, 0.229269, 0.223018, 0.21962, 0.221589, 0.228052, 0.229125, 0.229112, 0.227413, 0.223155, 0.222921, 0.224187, 0.229017, 0.226289, 0.229286, 0.229118, 0.227444], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = kkk
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	6
        Additions: 		152
        Multiplications: 	36
        Divisions: 		0
        Logical: 		0
        Reads: 			373
        Writes: 		86
        Comparisons:		18
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest2.exe __orio_perftest2.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest2.exe  
Program Test Output: 
{'[3, 6, 5, 6, 5, 3, 1, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.126813}
{'[3, 6, 5, 6, 5, 3, 1, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.126767}
{'[3, 6, 5, 6, 5, 3, 1, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.126674}
{'[3, 6, 5, 6, 5, 3, 1, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.126817}
{'[3, 6, 5, 6, 5, 3, 1, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.126809}
{'[3, 6, 5, 6, 5, 3, 1, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.114132}
{'[3, 6, 5, 6, 5, 3, 1, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.108083}
{'[3, 6, 5, 6, 5, 3, 1, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.108193}
{'[3, 6, 5, 6, 5, 3, 1, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.108133}
{'[3, 6, 5, 6, 5, 3, 1, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.108167}
{'[3, 6, 5, 6, 5, 3, 1, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.108466}
{'[3, 6, 5, 6, 5, 3, 1, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.108231}
{'[3, 6, 5, 6, 5, 3, 1, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.108191}
{'[3, 6, 5, 6, 5, 3, 1, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.108606}
{'[3, 6, 5, 6, 5, 3, 1, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.108433}
{'[3, 6, 5, 6, 5, 3, 1, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.108558}
{'[3, 6, 5, 6, 5, 3, 1, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.108137}
{'[3, 6, 5, 6, 5, 3, 1, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.108166}
{'[3, 6, 5, 6, 5, 3, 1, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.10814}
{'[3, 6, 5, 6, 5, 3, 1, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.108164}
{'[3, 6, 5, 6, 5, 3, 1, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.108349}
{'[3, 6, 5, 6, 5, 3, 1, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.10826}
{'[3, 6, 5, 6, 5, 3, 1, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.108308}
{'[3, 6, 5, 6, 5, 3, 1, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.108226}
{'[3, 6, 5, 6, 5, 3, 1, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.108643}
{'[3, 6, 5, 6, 5, 3, 1, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.108632}
{'[3, 6, 5, 6, 5, 3, 1, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.108126}
{'[3, 6, 5, 6, 5, 3, 1, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.108219}
{'[3, 6, 5, 6, 5, 3, 1, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.108275}
{'[3, 6, 5, 6, 5, 3, 1, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.108311}

out:
 ["{'[3, 6, 5, 6, 5, 3, 1, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.126813}", "{'[3, 6, 5, 6, 5, 3, 1, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.126767}", "{'[3, 6, 5, 6, 5, 3, 1, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.126674}", "{'[3, 6, 5, 6, 5, 3, 1, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.126817}", "{'[3, 6, 5, 6, 5, 3, 1, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.126809}", "{'[3, 6, 5, 6, 5, 3, 1, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.114132}", "{'[3, 6, 5, 6, 5, 3, 1, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.108083}", "{'[3, 6, 5, 6, 5, 3, 1, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.108193}", "{'[3, 6, 5, 6, 5, 3, 1, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.108133}", "{'[3, 6, 5, 6, 5, 3, 1, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.108167}", "{'[3, 6, 5, 6, 5, 3, 1, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.108466}", "{'[3, 6, 5, 6, 5, 3, 1, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.108231}", "{'[3, 6, 5, 6, 5, 3, 1, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.108191}", "{'[3, 6, 5, 6, 5, 3, 1, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.108606}", "{'[3, 6, 5, 6, 5, 3, 1, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.108433}", "{'[3, 6, 5, 6, 5, 3, 1, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.108558}", "{'[3, 6, 5, 6, 5, 3, 1, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.108137}", "{'[3, 6, 5, 6, 5, 3, 1, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.108166}", "{'[3, 6, 5, 6, 5, 3, 1, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.10814}", "{'[3, 6, 5, 6, 5, 3, 1, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.108164}", "{'[3, 6, 5, 6, 5, 3, 1, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.108349}", "{'[3, 6, 5, 6, 5, 3, 1, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.10826}", "{'[3, 6, 5, 6, 5, 3, 1, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.108308}", "{'[3, 6, 5, 6, 5, 3, 1, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.108226}", "{'[3, 6, 5, 6, 5, 3, 1, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.108643}", "{'[3, 6, 5, 6, 5, 3, 1, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.108632}", "{'[3, 6, 5, 6, 5, 3, 1, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.108126}", "{'[3, 6, 5, 6, 5, 3, 1, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.108219}", "{'[3, 6, 5, 6, 5, 3, 1, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.108275}", "{'[3, 6, 5, 6, 5, 3, 1, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 1]' : 0.108311}"]
returning from 'run': {'[3, 6, 5, 6, 5, 3, 1, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 1]': ([0.126813, 0.126767, 0.126674, 0.126817, 0.126809, 0.114132, 0.108083, 0.108193, 0.108133, 0.108167, 0.108466, 0.108231, 0.108191, 0.108606, 0.108433, 0.108558, 0.108137, 0.108166, 0.10814, 0.108164, 0.108349, 0.10826, 0.108308, 0.108226, 0.108643, 0.108632, 0.108126, 0.108219, 0.108275, 0.108311], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 6, 5, 6, 5, 3, 1, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 1]': ([0.126813, 0.126767, 0.126674, 0.126817, 0.126809, 0.114132, 0.108083, 0.108193, 0.108133, 0.108167, 0.108466, 0.108231, 0.108191, 0.108606, 0.108433, 0.108558, 0.108137, 0.108166, 0.10814, 0.108164, 0.108349, 0.10826, 0.108308, 0.108226, 0.108643, 0.108632, 0.108126, 0.108219, 0.108275, 0.108311], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	6
        Additions: 		6968
        Multiplications: 	1980
        Divisions: 		0
        Logical: 		0
        Reads: 			10496
        Writes: 		1049
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest3.exe __orio_perftest3.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest3.exe  
Program Test Output: 
{'[3, 1, 2, 2, 4, 2, 1, 0, 5, 0, 10, 16, 2, 0, 0, 0, 0, 0]' : 0.311459}
{'[3, 1, 2, 2, 4, 2, 1, 0, 5, 0, 10, 16, 2, 0, 0, 0, 0, 0]' : 0.311056}
{'[3, 1, 2, 2, 4, 2, 1, 0, 5, 0, 10, 16, 2, 0, 0, 0, 0, 0]' : 0.273469}
{'[3, 1, 2, 2, 4, 2, 1, 0, 5, 0, 10, 16, 2, 0, 0, 0, 0, 0]' : 0.271942}
{'[3, 1, 2, 2, 4, 2, 1, 0, 5, 0, 10, 16, 2, 0, 0, 0, 0, 0]' : 0.274898}
{'[3, 1, 2, 2, 4, 2, 1, 0, 5, 0, 10, 16, 2, 0, 0, 0, 0, 0]' : 0.270609}
{'[3, 1, 2, 2, 4, 2, 1, 0, 5, 0, 10, 16, 2, 0, 0, 0, 0, 0]' : 0.273089}
{'[3, 1, 2, 2, 4, 2, 1, 0, 5, 0, 10, 16, 2, 0, 0, 0, 0, 0]' : 0.270003}
{'[3, 1, 2, 2, 4, 2, 1, 0, 5, 0, 10, 16, 2, 0, 0, 0, 0, 0]' : 0.273791}
{'[3, 1, 2, 2, 4, 2, 1, 0, 5, 0, 10, 16, 2, 0, 0, 0, 0, 0]' : 0.273543}
{'[3, 1, 2, 2, 4, 2, 1, 0, 5, 0, 10, 16, 2, 0, 0, 0, 0, 0]' : 0.269977}
{'[3, 1, 2, 2, 4, 2, 1, 0, 5, 0, 10, 16, 2, 0, 0, 0, 0, 0]' : 0.273228}
{'[3, 1, 2, 2, 4, 2, 1, 0, 5, 0, 10, 16, 2, 0, 0, 0, 0, 0]' : 0.271598}
{'[3, 1, 2, 2, 4, 2, 1, 0, 5, 0, 10, 16, 2, 0, 0, 0, 0, 0]' : 0.273057}
{'[3, 1, 2, 2, 4, 2, 1, 0, 5, 0, 10, 16, 2, 0, 0, 0, 0, 0]' : 0.273515}
{'[3, 1, 2, 2, 4, 2, 1, 0, 5, 0, 10, 16, 2, 0, 0, 0, 0, 0]' : 0.270742}
{'[3, 1, 2, 2, 4, 2, 1, 0, 5, 0, 10, 16, 2, 0, 0, 0, 0, 0]' : 0.274868}
{'[3, 1, 2, 2, 4, 2, 1, 0, 5, 0, 10, 16, 2, 0, 0, 0, 0, 0]' : 0.272479}
{'[3, 1, 2, 2, 4, 2, 1, 0, 5, 0, 10, 16, 2, 0, 0, 0, 0, 0]' : 0.273365}
{'[3, 1, 2, 2, 4, 2, 1, 0, 5, 0, 10, 16, 2, 0, 0, 0, 0, 0]' : 0.272622}
{'[3, 1, 2, 2, 4, 2, 1, 0, 5, 0, 10, 16, 2, 0, 0, 0, 0, 0]' : 0.274559}
{'[3, 1, 2, 2, 4, 2, 1, 0, 5, 0, 10, 16, 2, 0, 0, 0, 0, 0]' : 0.270023}
{'[3, 1, 2, 2, 4, 2, 1, 0, 5, 0, 10, 16, 2, 0, 0, 0, 0, 0]' : 0.272462}
{'[3, 1, 2, 2, 4, 2, 1, 0, 5, 0, 10, 16, 2, 0, 0, 0, 0, 0]' : 0.269935}
{'[3, 1, 2, 2, 4, 2, 1, 0, 5, 0, 10, 16, 2, 0, 0, 0, 0, 0]' : 0.273427}
{'[3, 1, 2, 2, 4, 2, 1, 0, 5, 0, 10, 16, 2, 0, 0, 0, 0, 0]' : 0.272732}
{'[3, 1, 2, 2, 4, 2, 1, 0, 5, 0, 10, 16, 2, 0, 0, 0, 0, 0]' : 0.271264}
{'[3, 1, 2, 2, 4, 2, 1, 0, 5, 0, 10, 16, 2, 0, 0, 0, 0, 0]' : 0.273052}
{'[3, 1, 2, 2, 4, 2, 1, 0, 5, 0, 10, 16, 2, 0, 0, 0, 0, 0]' : 0.271333}
{'[3, 1, 2, 2, 4, 2, 1, 0, 5, 0, 10, 16, 2, 0, 0, 0, 0, 0]' : 0.273582}

out:
 ["{'[3, 1, 2, 2, 4, 2, 1, 0, 5, 0, 10, 16, 2, 0, 0, 0, 0, 0]' : 0.311459}", "{'[3, 1, 2, 2, 4, 2, 1, 0, 5, 0, 10, 16, 2, 0, 0, 0, 0, 0]' : 0.311056}", "{'[3, 1, 2, 2, 4, 2, 1, 0, 5, 0, 10, 16, 2, 0, 0, 0, 0, 0]' : 0.273469}", "{'[3, 1, 2, 2, 4, 2, 1, 0, 5, 0, 10, 16, 2, 0, 0, 0, 0, 0]' : 0.271942}", "{'[3, 1, 2, 2, 4, 2, 1, 0, 5, 0, 10, 16, 2, 0, 0, 0, 0, 0]' : 0.274898}", "{'[3, 1, 2, 2, 4, 2, 1, 0, 5, 0, 10, 16, 2, 0, 0, 0, 0, 0]' : 0.270609}", "{'[3, 1, 2, 2, 4, 2, 1, 0, 5, 0, 10, 16, 2, 0, 0, 0, 0, 0]' : 0.273089}", "{'[3, 1, 2, 2, 4, 2, 1, 0, 5, 0, 10, 16, 2, 0, 0, 0, 0, 0]' : 0.270003}", "{'[3, 1, 2, 2, 4, 2, 1, 0, 5, 0, 10, 16, 2, 0, 0, 0, 0, 0]' : 0.273791}", "{'[3, 1, 2, 2, 4, 2, 1, 0, 5, 0, 10, 16, 2, 0, 0, 0, 0, 0]' : 0.273543}", "{'[3, 1, 2, 2, 4, 2, 1, 0, 5, 0, 10, 16, 2, 0, 0, 0, 0, 0]' : 0.269977}", "{'[3, 1, 2, 2, 4, 2, 1, 0, 5, 0, 10, 16, 2, 0, 0, 0, 0, 0]' : 0.273228}", "{'[3, 1, 2, 2, 4, 2, 1, 0, 5, 0, 10, 16, 2, 0, 0, 0, 0, 0]' : 0.271598}", "{'[3, 1, 2, 2, 4, 2, 1, 0, 5, 0, 10, 16, 2, 0, 0, 0, 0, 0]' : 0.273057}", "{'[3, 1, 2, 2, 4, 2, 1, 0, 5, 0, 10, 16, 2, 0, 0, 0, 0, 0]' : 0.273515}", "{'[3, 1, 2, 2, 4, 2, 1, 0, 5, 0, 10, 16, 2, 0, 0, 0, 0, 0]' : 0.270742}", "{'[3, 1, 2, 2, 4, 2, 1, 0, 5, 0, 10, 16, 2, 0, 0, 0, 0, 0]' : 0.274868}", "{'[3, 1, 2, 2, 4, 2, 1, 0, 5, 0, 10, 16, 2, 0, 0, 0, 0, 0]' : 0.272479}", "{'[3, 1, 2, 2, 4, 2, 1, 0, 5, 0, 10, 16, 2, 0, 0, 0, 0, 0]' : 0.273365}", "{'[3, 1, 2, 2, 4, 2, 1, 0, 5, 0, 10, 16, 2, 0, 0, 0, 0, 0]' : 0.272622}", "{'[3, 1, 2, 2, 4, 2, 1, 0, 5, 0, 10, 16, 2, 0, 0, 0, 0, 0]' : 0.274559}", "{'[3, 1, 2, 2, 4, 2, 1, 0, 5, 0, 10, 16, 2, 0, 0, 0, 0, 0]' : 0.270023}", "{'[3, 1, 2, 2, 4, 2, 1, 0, 5, 0, 10, 16, 2, 0, 0, 0, 0, 0]' : 0.272462}", "{'[3, 1, 2, 2, 4, 2, 1, 0, 5, 0, 10, 16, 2, 0, 0, 0, 0, 0]' : 0.269935}", "{'[3, 1, 2, 2, 4, 2, 1, 0, 5, 0, 10, 16, 2, 0, 0, 0, 0, 0]' : 0.273427}", "{'[3, 1, 2, 2, 4, 2, 1, 0, 5, 0, 10, 16, 2, 0, 0, 0, 0, 0]' : 0.272732}", "{'[3, 1, 2, 2, 4, 2, 1, 0, 5, 0, 10, 16, 2, 0, 0, 0, 0, 0]' : 0.271264}", "{'[3, 1, 2, 2, 4, 2, 1, 0, 5, 0, 10, 16, 2, 0, 0, 0, 0, 0]' : 0.273052}", "{'[3, 1, 2, 2, 4, 2, 1, 0, 5, 0, 10, 16, 2, 0, 0, 0, 0, 0]' : 0.271333}", "{'[3, 1, 2, 2, 4, 2, 1, 0, 5, 0, 10, 16, 2, 0, 0, 0, 0, 0]' : 0.273582}"]
returning from 'run': {'[3, 1, 2, 2, 4, 2, 1, 0, 5, 0, 10, 16, 2, 0, 0, 0, 0, 0]': ([0.311459, 0.311056, 0.273469, 0.271942, 0.274898, 0.270609, 0.273089, 0.270003, 0.273791, 0.273543, 0.269977, 0.273228, 0.271598, 0.273057, 0.273515, 0.270742, 0.274868, 0.272479, 0.273365, 0.272622, 0.274559, 0.270023, 0.272462, 0.269935, 0.273427, 0.272732, 0.271264, 0.273052, 0.271333, 0.273582], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 1, 2, 2, 4, 2, 1, 0, 5, 0, 10, 16, 2, 0, 0, 0, 0, 0]': ([0.311459, 0.311056, 0.273469, 0.271942, 0.274898, 0.270609, 0.273089, 0.270003, 0.273791, 0.273543, 0.269977, 0.273228, 0.271598, 0.273057, 0.273515, 0.270742, 0.274868, 0.272479, 0.273365, 0.272622, 0.274559, 0.270023, 0.272462, 0.269935, 0.273427, 0.272732, 0.271264, 0.273052, 0.271333, 0.273582], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	65
        Max loop nest depth: 	5
        Additions: 		5620
        Multiplications: 	1624
        Divisions: 		0
        Logical: 		0
        Reads: 			8857
        Writes: 		1045
        Comparisons:		65
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest4.exe __orio_perftest4.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest4.exe  
Program Test Output: 
{'[1, 5, 0, 0, 5, 1, 0, 0, 4, 19, 17, 0, 1, 1, 0, 0, 1, 1]' : 0.0930939}
{'[1, 5, 0, 0, 5, 1, 0, 0, 4, 19, 17, 0, 1, 1, 0, 0, 1, 1]' : 0.0931821}
{'[1, 5, 0, 0, 5, 1, 0, 0, 4, 19, 17, 0, 1, 1, 0, 0, 1, 1]' : 0.093224}
{'[1, 5, 0, 0, 5, 1, 0, 0, 4, 19, 17, 0, 1, 1, 0, 0, 1, 1]' : 0.0932961}
{'[1, 5, 0, 0, 5, 1, 0, 0, 4, 19, 17, 0, 1, 1, 0, 0, 1, 1]' : 0.093529}
{'[1, 5, 0, 0, 5, 1, 0, 0, 4, 19, 17, 0, 1, 1, 0, 0, 1, 1]' : 0.0936229}
{'[1, 5, 0, 0, 5, 1, 0, 0, 4, 19, 17, 0, 1, 1, 0, 0, 1, 1]' : 0.093257}
{'[1, 5, 0, 0, 5, 1, 0, 0, 4, 19, 17, 0, 1, 1, 0, 0, 1, 1]' : 0.0928769}
{'[1, 5, 0, 0, 5, 1, 0, 0, 4, 19, 17, 0, 1, 1, 0, 0, 1, 1]' : 0.0929031}
{'[1, 5, 0, 0, 5, 1, 0, 0, 4, 19, 17, 0, 1, 1, 0, 0, 1, 1]' : 0.092941}
{'[1, 5, 0, 0, 5, 1, 0, 0, 4, 19, 17, 0, 1, 1, 0, 0, 1, 1]' : 0.0927761}
{'[1, 5, 0, 0, 5, 1, 0, 0, 4, 19, 17, 0, 1, 1, 0, 0, 1, 1]' : 0.092957}
{'[1, 5, 0, 0, 5, 1, 0, 0, 4, 19, 17, 0, 1, 1, 0, 0, 1, 1]' : 0.0930541}
{'[1, 5, 0, 0, 5, 1, 0, 0, 4, 19, 17, 0, 1, 1, 0, 0, 1, 1]' : 0.0933049}
{'[1, 5, 0, 0, 5, 1, 0, 0, 4, 19, 17, 0, 1, 1, 0, 0, 1, 1]' : 0.093245}
{'[1, 5, 0, 0, 5, 1, 0, 0, 4, 19, 17, 0, 1, 1, 0, 0, 1, 1]' : 0.093339}
{'[1, 5, 0, 0, 5, 1, 0, 0, 4, 19, 17, 0, 1, 1, 0, 0, 1, 1]' : 0.0934539}
{'[1, 5, 0, 0, 5, 1, 0, 0, 4, 19, 17, 0, 1, 1, 0, 0, 1, 1]' : 0.093497}
{'[1, 5, 0, 0, 5, 1, 0, 0, 4, 19, 17, 0, 1, 1, 0, 0, 1, 1]' : 0.092792}
{'[1, 5, 0, 0, 5, 1, 0, 0, 4, 19, 17, 0, 1, 1, 0, 0, 1, 1]' : 0.0933731}
{'[1, 5, 0, 0, 5, 1, 0, 0, 4, 19, 17, 0, 1, 1, 0, 0, 1, 1]' : 0.093154}
{'[1, 5, 0, 0, 5, 1, 0, 0, 4, 19, 17, 0, 1, 1, 0, 0, 1, 1]' : 0.093014}
{'[1, 5, 0, 0, 5, 1, 0, 0, 4, 19, 17, 0, 1, 1, 0, 0, 1, 1]' : 0.092792}
{'[1, 5, 0, 0, 5, 1, 0, 0, 4, 19, 17, 0, 1, 1, 0, 0, 1, 1]' : 0.0930798}
{'[1, 5, 0, 0, 5, 1, 0, 0, 4, 19, 17, 0, 1, 1, 0, 0, 1, 1]' : 0.0933778}
{'[1, 5, 0, 0, 5, 1, 0, 0, 4, 19, 17, 0, 1, 1, 0, 0, 1, 1]' : 0.0932271}
{'[1, 5, 0, 0, 5, 1, 0, 0, 4, 19, 17, 0, 1, 1, 0, 0, 1, 1]' : 0.093262}
{'[1, 5, 0, 0, 5, 1, 0, 0, 4, 19, 17, 0, 1, 1, 0, 0, 1, 1]' : 0.093405}
{'[1, 5, 0, 0, 5, 1, 0, 0, 4, 19, 17, 0, 1, 1, 0, 0, 1, 1]' : 0.093756}
{'[1, 5, 0, 0, 5, 1, 0, 0, 4, 19, 17, 0, 1, 1, 0, 0, 1, 1]' : 0.0930631}

out:
 ["{'[1, 5, 0, 0, 5, 1, 0, 0, 4, 19, 17, 0, 1, 1, 0, 0, 1, 1]' : 0.0930939}", "{'[1, 5, 0, 0, 5, 1, 0, 0, 4, 19, 17, 0, 1, 1, 0, 0, 1, 1]' : 0.0931821}", "{'[1, 5, 0, 0, 5, 1, 0, 0, 4, 19, 17, 0, 1, 1, 0, 0, 1, 1]' : 0.093224}", "{'[1, 5, 0, 0, 5, 1, 0, 0, 4, 19, 17, 0, 1, 1, 0, 0, 1, 1]' : 0.0932961}", "{'[1, 5, 0, 0, 5, 1, 0, 0, 4, 19, 17, 0, 1, 1, 0, 0, 1, 1]' : 0.093529}", "{'[1, 5, 0, 0, 5, 1, 0, 0, 4, 19, 17, 0, 1, 1, 0, 0, 1, 1]' : 0.0936229}", "{'[1, 5, 0, 0, 5, 1, 0, 0, 4, 19, 17, 0, 1, 1, 0, 0, 1, 1]' : 0.093257}", "{'[1, 5, 0, 0, 5, 1, 0, 0, 4, 19, 17, 0, 1, 1, 0, 0, 1, 1]' : 0.0928769}", "{'[1, 5, 0, 0, 5, 1, 0, 0, 4, 19, 17, 0, 1, 1, 0, 0, 1, 1]' : 0.0929031}", "{'[1, 5, 0, 0, 5, 1, 0, 0, 4, 19, 17, 0, 1, 1, 0, 0, 1, 1]' : 0.092941}", "{'[1, 5, 0, 0, 5, 1, 0, 0, 4, 19, 17, 0, 1, 1, 0, 0, 1, 1]' : 0.0927761}", "{'[1, 5, 0, 0, 5, 1, 0, 0, 4, 19, 17, 0, 1, 1, 0, 0, 1, 1]' : 0.092957}", "{'[1, 5, 0, 0, 5, 1, 0, 0, 4, 19, 17, 0, 1, 1, 0, 0, 1, 1]' : 0.0930541}", "{'[1, 5, 0, 0, 5, 1, 0, 0, 4, 19, 17, 0, 1, 1, 0, 0, 1, 1]' : 0.0933049}", "{'[1, 5, 0, 0, 5, 1, 0, 0, 4, 19, 17, 0, 1, 1, 0, 0, 1, 1]' : 0.093245}", "{'[1, 5, 0, 0, 5, 1, 0, 0, 4, 19, 17, 0, 1, 1, 0, 0, 1, 1]' : 0.093339}", "{'[1, 5, 0, 0, 5, 1, 0, 0, 4, 19, 17, 0, 1, 1, 0, 0, 1, 1]' : 0.0934539}", "{'[1, 5, 0, 0, 5, 1, 0, 0, 4, 19, 17, 0, 1, 1, 0, 0, 1, 1]' : 0.093497}", "{'[1, 5, 0, 0, 5, 1, 0, 0, 4, 19, 17, 0, 1, 1, 0, 0, 1, 1]' : 0.092792}", "{'[1, 5, 0, 0, 5, 1, 0, 0, 4, 19, 17, 0, 1, 1, 0, 0, 1, 1]' : 0.0933731}", "{'[1, 5, 0, 0, 5, 1, 0, 0, 4, 19, 17, 0, 1, 1, 0, 0, 1, 1]' : 0.093154}", "{'[1, 5, 0, 0, 5, 1, 0, 0, 4, 19, 17, 0, 1, 1, 0, 0, 1, 1]' : 0.093014}", "{'[1, 5, 0, 0, 5, 1, 0, 0, 4, 19, 17, 0, 1, 1, 0, 0, 1, 1]' : 0.092792}", "{'[1, 5, 0, 0, 5, 1, 0, 0, 4, 19, 17, 0, 1, 1, 0, 0, 1, 1]' : 0.0930798}", "{'[1, 5, 0, 0, 5, 1, 0, 0, 4, 19, 17, 0, 1, 1, 0, 0, 1, 1]' : 0.0933778}", "{'[1, 5, 0, 0, 5, 1, 0, 0, 4, 19, 17, 0, 1, 1, 0, 0, 1, 1]' : 0.0932271}", "{'[1, 5, 0, 0, 5, 1, 0, 0, 4, 19, 17, 0, 1, 1, 0, 0, 1, 1]' : 0.093262}", "{'[1, 5, 0, 0, 5, 1, 0, 0, 4, 19, 17, 0, 1, 1, 0, 0, 1, 1]' : 0.093405}", "{'[1, 5, 0, 0, 5, 1, 0, 0, 4, 19, 17, 0, 1, 1, 0, 0, 1, 1]' : 0.093756}", "{'[1, 5, 0, 0, 5, 1, 0, 0, 4, 19, 17, 0, 1, 1, 0, 0, 1, 1]' : 0.0930631}"]
returning from 'run': {'[1, 5, 0, 0, 5, 1, 0, 0, 4, 19, 17, 0, 1, 1, 0, 0, 1, 1]': ([0.0930939, 0.0931821, 0.093224, 0.0932961, 0.093529, 0.0936229, 0.093257, 0.0928769, 0.0929031, 0.092941, 0.0927761, 0.092957, 0.0930541, 0.0933049, 0.093245, 0.093339, 0.0934539, 0.093497, 0.092792, 0.0933731, 0.093154, 0.093014, 0.092792, 0.0930798, 0.0933778, 0.0932271, 0.093262, 0.093405, 0.093756, 0.0930631], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 5, 0, 0, 5, 1, 0, 0, 4, 19, 17, 0, 1, 1, 0, 0, 1, 1]': ([0.0930939, 0.0931821, 0.093224, 0.0932961, 0.093529, 0.0936229, 0.093257, 0.0928769, 0.0929031, 0.092941, 0.0927761, 0.092957, 0.0930541, 0.0933049, 0.093245, 0.093339, 0.0934539, 0.093497, 0.092792, 0.0933731, 0.093154, 0.093014, 0.092792, 0.0930798, 0.0933778, 0.0932271, 0.093262, 0.093405, 0.093756, 0.0930631], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	27
        Max loop nest depth: 	6
        Additions: 		668
        Multiplications: 	162
        Divisions: 		0
        Logical: 		0
        Reads: 			1172
        Writes: 		176
        Comparisons:		27
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest5.exe __orio_perftest5.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest5.exe  
Program Test Output: 
{'[1, 6, 4, 6, 6, 6, 1, 0, 21, 7, 24, 0, 0, 1, 0, 0, 0, 0]' : 0.156893}
{'[1, 6, 4, 6, 6, 6, 1, 0, 21, 7, 24, 0, 0, 1, 0, 0, 0, 0]' : 0.156519}
{'[1, 6, 4, 6, 6, 6, 1, 0, 21, 7, 24, 0, 0, 1, 0, 0, 0, 0]' : 0.156547}
{'[1, 6, 4, 6, 6, 6, 1, 0, 21, 7, 24, 0, 0, 1, 0, 0, 0, 0]' : 0.155643}
{'[1, 6, 4, 6, 6, 6, 1, 0, 21, 7, 24, 0, 0, 1, 0, 0, 0, 0]' : 0.134904}
{'[1, 6, 4, 6, 6, 6, 1, 0, 21, 7, 24, 0, 0, 1, 0, 0, 0, 0]' : 0.132597}
{'[1, 6, 4, 6, 6, 6, 1, 0, 21, 7, 24, 0, 0, 1, 0, 0, 0, 0]' : 0.132572}
{'[1, 6, 4, 6, 6, 6, 1, 0, 21, 7, 24, 0, 0, 1, 0, 0, 0, 0]' : 0.132758}
{'[1, 6, 4, 6, 6, 6, 1, 0, 21, 7, 24, 0, 0, 1, 0, 0, 0, 0]' : 0.132867}
{'[1, 6, 4, 6, 6, 6, 1, 0, 21, 7, 24, 0, 0, 1, 0, 0, 0, 0]' : 0.132672}
{'[1, 6, 4, 6, 6, 6, 1, 0, 21, 7, 24, 0, 0, 1, 0, 0, 0, 0]' : 0.132934}
{'[1, 6, 4, 6, 6, 6, 1, 0, 21, 7, 24, 0, 0, 1, 0, 0, 0, 0]' : 0.132899}
{'[1, 6, 4, 6, 6, 6, 1, 0, 21, 7, 24, 0, 0, 1, 0, 0, 0, 0]' : 0.133155}
{'[1, 6, 4, 6, 6, 6, 1, 0, 21, 7, 24, 0, 0, 1, 0, 0, 0, 0]' : 0.132566}
{'[1, 6, 4, 6, 6, 6, 1, 0, 21, 7, 24, 0, 0, 1, 0, 0, 0, 0]' : 0.132734}
{'[1, 6, 4, 6, 6, 6, 1, 0, 21, 7, 24, 0, 0, 1, 0, 0, 0, 0]' : 0.132756}
{'[1, 6, 4, 6, 6, 6, 1, 0, 21, 7, 24, 0, 0, 1, 0, 0, 0, 0]' : 0.132644}
{'[1, 6, 4, 6, 6, 6, 1, 0, 21, 7, 24, 0, 0, 1, 0, 0, 0, 0]' : 0.132671}
{'[1, 6, 4, 6, 6, 6, 1, 0, 21, 7, 24, 0, 0, 1, 0, 0, 0, 0]' : 0.13283}
{'[1, 6, 4, 6, 6, 6, 1, 0, 21, 7, 24, 0, 0, 1, 0, 0, 0, 0]' : 0.133285}
{'[1, 6, 4, 6, 6, 6, 1, 0, 21, 7, 24, 0, 0, 1, 0, 0, 0, 0]' : 0.132593}
{'[1, 6, 4, 6, 6, 6, 1, 0, 21, 7, 24, 0, 0, 1, 0, 0, 0, 0]' : 0.132556}
{'[1, 6, 4, 6, 6, 6, 1, 0, 21, 7, 24, 0, 0, 1, 0, 0, 0, 0]' : 0.13256}
{'[1, 6, 4, 6, 6, 6, 1, 0, 21, 7, 24, 0, 0, 1, 0, 0, 0, 0]' : 0.133087}
{'[1, 6, 4, 6, 6, 6, 1, 0, 21, 7, 24, 0, 0, 1, 0, 0, 0, 0]' : 0.132738}
{'[1, 6, 4, 6, 6, 6, 1, 0, 21, 7, 24, 0, 0, 1, 0, 0, 0, 0]' : 0.132901}
{'[1, 6, 4, 6, 6, 6, 1, 0, 21, 7, 24, 0, 0, 1, 0, 0, 0, 0]' : 0.132822}
{'[1, 6, 4, 6, 6, 6, 1, 0, 21, 7, 24, 0, 0, 1, 0, 0, 0, 0]' : 0.133211}
{'[1, 6, 4, 6, 6, 6, 1, 0, 21, 7, 24, 0, 0, 1, 0, 0, 0, 0]' : 0.132559}
{'[1, 6, 4, 6, 6, 6, 1, 0, 21, 7, 24, 0, 0, 1, 0, 0, 0, 0]' : 0.132541}

out:
 ["{'[1, 6, 4, 6, 6, 6, 1, 0, 21, 7, 24, 0, 0, 1, 0, 0, 0, 0]' : 0.156893}", "{'[1, 6, 4, 6, 6, 6, 1, 0, 21, 7, 24, 0, 0, 1, 0, 0, 0, 0]' : 0.156519}", "{'[1, 6, 4, 6, 6, 6, 1, 0, 21, 7, 24, 0, 0, 1, 0, 0, 0, 0]' : 0.156547}", "{'[1, 6, 4, 6, 6, 6, 1, 0, 21, 7, 24, 0, 0, 1, 0, 0, 0, 0]' : 0.155643}", "{'[1, 6, 4, 6, 6, 6, 1, 0, 21, 7, 24, 0, 0, 1, 0, 0, 0, 0]' : 0.134904}", "{'[1, 6, 4, 6, 6, 6, 1, 0, 21, 7, 24, 0, 0, 1, 0, 0, 0, 0]' : 0.132597}", "{'[1, 6, 4, 6, 6, 6, 1, 0, 21, 7, 24, 0, 0, 1, 0, 0, 0, 0]' : 0.132572}", "{'[1, 6, 4, 6, 6, 6, 1, 0, 21, 7, 24, 0, 0, 1, 0, 0, 0, 0]' : 0.132758}", "{'[1, 6, 4, 6, 6, 6, 1, 0, 21, 7, 24, 0, 0, 1, 0, 0, 0, 0]' : 0.132867}", "{'[1, 6, 4, 6, 6, 6, 1, 0, 21, 7, 24, 0, 0, 1, 0, 0, 0, 0]' : 0.132672}", "{'[1, 6, 4, 6, 6, 6, 1, 0, 21, 7, 24, 0, 0, 1, 0, 0, 0, 0]' : 0.132934}", "{'[1, 6, 4, 6, 6, 6, 1, 0, 21, 7, 24, 0, 0, 1, 0, 0, 0, 0]' : 0.132899}", "{'[1, 6, 4, 6, 6, 6, 1, 0, 21, 7, 24, 0, 0, 1, 0, 0, 0, 0]' : 0.133155}", "{'[1, 6, 4, 6, 6, 6, 1, 0, 21, 7, 24, 0, 0, 1, 0, 0, 0, 0]' : 0.132566}", "{'[1, 6, 4, 6, 6, 6, 1, 0, 21, 7, 24, 0, 0, 1, 0, 0, 0, 0]' : 0.132734}", "{'[1, 6, 4, 6, 6, 6, 1, 0, 21, 7, 24, 0, 0, 1, 0, 0, 0, 0]' : 0.132756}", "{'[1, 6, 4, 6, 6, 6, 1, 0, 21, 7, 24, 0, 0, 1, 0, 0, 0, 0]' : 0.132644}", "{'[1, 6, 4, 6, 6, 6, 1, 0, 21, 7, 24, 0, 0, 1, 0, 0, 0, 0]' : 0.132671}", "{'[1, 6, 4, 6, 6, 6, 1, 0, 21, 7, 24, 0, 0, 1, 0, 0, 0, 0]' : 0.13283}", "{'[1, 6, 4, 6, 6, 6, 1, 0, 21, 7, 24, 0, 0, 1, 0, 0, 0, 0]' : 0.133285}", "{'[1, 6, 4, 6, 6, 6, 1, 0, 21, 7, 24, 0, 0, 1, 0, 0, 0, 0]' : 0.132593}", "{'[1, 6, 4, 6, 6, 6, 1, 0, 21, 7, 24, 0, 0, 1, 0, 0, 0, 0]' : 0.132556}", "{'[1, 6, 4, 6, 6, 6, 1, 0, 21, 7, 24, 0, 0, 1, 0, 0, 0, 0]' : 0.13256}", "{'[1, 6, 4, 6, 6, 6, 1, 0, 21, 7, 24, 0, 0, 1, 0, 0, 0, 0]' : 0.133087}", "{'[1, 6, 4, 6, 6, 6, 1, 0, 21, 7, 24, 0, 0, 1, 0, 0, 0, 0]' : 0.132738}", "{'[1, 6, 4, 6, 6, 6, 1, 0, 21, 7, 24, 0, 0, 1, 0, 0, 0, 0]' : 0.132901}", "{'[1, 6, 4, 6, 6, 6, 1, 0, 21, 7, 24, 0, 0, 1, 0, 0, 0, 0]' : 0.132822}", "{'[1, 6, 4, 6, 6, 6, 1, 0, 21, 7, 24, 0, 0, 1, 0, 0, 0, 0]' : 0.133211}", "{'[1, 6, 4, 6, 6, 6, 1, 0, 21, 7, 24, 0, 0, 1, 0, 0, 0, 0]' : 0.132559}", "{'[1, 6, 4, 6, 6, 6, 1, 0, 21, 7, 24, 0, 0, 1, 0, 0, 0, 0]' : 0.132541}"]
returning from 'run': {'[1, 6, 4, 6, 6, 6, 1, 0, 21, 7, 24, 0, 0, 1, 0, 0, 0, 0]': ([0.156893, 0.156519, 0.156547, 0.155643, 0.134904, 0.132597, 0.132572, 0.132758, 0.132867, 0.132672, 0.132934, 0.132899, 0.133155, 0.132566, 0.132734, 0.132756, 0.132644, 0.132671, 0.13283, 0.133285, 0.132593, 0.132556, 0.13256, 0.133087, 0.132738, 0.132901, 0.132822, 0.133211, 0.132559, 0.132541], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 6, 4, 6, 6, 6, 1, 0, 21, 7, 24, 0, 0, 1, 0, 0, 0, 0]': ([0.156893, 0.156519, 0.156547, 0.155643, 0.134904, 0.132597, 0.132572, 0.132758, 0.132867, 0.132672, 0.132934, 0.132899, 0.133155, 0.132566, 0.132734, 0.132756, 0.132644, 0.132671, 0.13283, 0.133285, 0.132593, 0.132556, 0.13256, 0.133087, 0.132738, 0.132901, 0.132822, 0.133211, 0.132559, 0.132541], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		361
        Multiplications: 	128
        Divisions: 		0
        Logical: 		0
        Reads: 			836
        Writes: 		174
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest6.exe __orio_perftest6.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest6.exe  
Program Test Output: 
{'[2, 3, 1, 0, 6, 0, 1, 0, 0, 0, 22, 6, 0, 0, 2, 1, 1, 0]' : 0.30109}
{'[2, 3, 1, 0, 6, 0, 1, 0, 0, 0, 22, 6, 0, 0, 2, 1, 1, 0]' : 0.300289}
{'[2, 3, 1, 0, 6, 0, 1, 0, 0, 0, 22, 6, 0, 0, 2, 1, 1, 0]' : 0.254168}
{'[2, 3, 1, 0, 6, 0, 1, 0, 0, 0, 22, 6, 0, 0, 2, 1, 1, 0]' : 0.251899}
{'[2, 3, 1, 0, 6, 0, 1, 0, 0, 0, 22, 6, 0, 0, 2, 1, 1, 0]' : 0.251674}
{'[2, 3, 1, 0, 6, 0, 1, 0, 0, 0, 22, 6, 0, 0, 2, 1, 1, 0]' : 0.251863}
{'[2, 3, 1, 0, 6, 0, 1, 0, 0, 0, 22, 6, 0, 0, 2, 1, 1, 0]' : 0.251693}
{'[2, 3, 1, 0, 6, 0, 1, 0, 0, 0, 22, 6, 0, 0, 2, 1, 1, 0]' : 0.251799}
{'[2, 3, 1, 0, 6, 0, 1, 0, 0, 0, 22, 6, 0, 0, 2, 1, 1, 0]' : 0.251462}
{'[2, 3, 1, 0, 6, 0, 1, 0, 0, 0, 22, 6, 0, 0, 2, 1, 1, 0]' : 0.251901}
{'[2, 3, 1, 0, 6, 0, 1, 0, 0, 0, 22, 6, 0, 0, 2, 1, 1, 0]' : 0.251498}
{'[2, 3, 1, 0, 6, 0, 1, 0, 0, 0, 22, 6, 0, 0, 2, 1, 1, 0]' : 0.251677}
{'[2, 3, 1, 0, 6, 0, 1, 0, 0, 0, 22, 6, 0, 0, 2, 1, 1, 0]' : 0.251485}
{'[2, 3, 1, 0, 6, 0, 1, 0, 0, 0, 22, 6, 0, 0, 2, 1, 1, 0]' : 0.252043}
{'[2, 3, 1, 0, 6, 0, 1, 0, 0, 0, 22, 6, 0, 0, 2, 1, 1, 0]' : 0.251804}
{'[2, 3, 1, 0, 6, 0, 1, 0, 0, 0, 22, 6, 0, 0, 2, 1, 1, 0]' : 0.251722}
{'[2, 3, 1, 0, 6, 0, 1, 0, 0, 0, 22, 6, 0, 0, 2, 1, 1, 0]' : 0.251504}
{'[2, 3, 1, 0, 6, 0, 1, 0, 0, 0, 22, 6, 0, 0, 2, 1, 1, 0]' : 0.251919}
{'[2, 3, 1, 0, 6, 0, 1, 0, 0, 0, 22, 6, 0, 0, 2, 1, 1, 0]' : 0.251989}
{'[2, 3, 1, 0, 6, 0, 1, 0, 0, 0, 22, 6, 0, 0, 2, 1, 1, 0]' : 0.251931}
{'[2, 3, 1, 0, 6, 0, 1, 0, 0, 0, 22, 6, 0, 0, 2, 1, 1, 0]' : 0.251561}
{'[2, 3, 1, 0, 6, 0, 1, 0, 0, 0, 22, 6, 0, 0, 2, 1, 1, 0]' : 0.251973}
{'[2, 3, 1, 0, 6, 0, 1, 0, 0, 0, 22, 6, 0, 0, 2, 1, 1, 0]' : 0.252146}
{'[2, 3, 1, 0, 6, 0, 1, 0, 0, 0, 22, 6, 0, 0, 2, 1, 1, 0]' : 0.251981}
{'[2, 3, 1, 0, 6, 0, 1, 0, 0, 0, 22, 6, 0, 0, 2, 1, 1, 0]' : 0.255933}
{'[2, 3, 1, 0, 6, 0, 1, 0, 0, 0, 22, 6, 0, 0, 2, 1, 1, 0]' : 0.259298}
{'[2, 3, 1, 0, 6, 0, 1, 0, 0, 0, 22, 6, 0, 0, 2, 1, 1, 0]' : 0.257565}
{'[2, 3, 1, 0, 6, 0, 1, 0, 0, 0, 22, 6, 0, 0, 2, 1, 1, 0]' : 0.251923}
{'[2, 3, 1, 0, 6, 0, 1, 0, 0, 0, 22, 6, 0, 0, 2, 1, 1, 0]' : 0.251515}
{'[2, 3, 1, 0, 6, 0, 1, 0, 0, 0, 22, 6, 0, 0, 2, 1, 1, 0]' : 0.251793}

out:
 ["{'[2, 3, 1, 0, 6, 0, 1, 0, 0, 0, 22, 6, 0, 0, 2, 1, 1, 0]' : 0.30109}", "{'[2, 3, 1, 0, 6, 0, 1, 0, 0, 0, 22, 6, 0, 0, 2, 1, 1, 0]' : 0.300289}", "{'[2, 3, 1, 0, 6, 0, 1, 0, 0, 0, 22, 6, 0, 0, 2, 1, 1, 0]' : 0.254168}", "{'[2, 3, 1, 0, 6, 0, 1, 0, 0, 0, 22, 6, 0, 0, 2, 1, 1, 0]' : 0.251899}", "{'[2, 3, 1, 0, 6, 0, 1, 0, 0, 0, 22, 6, 0, 0, 2, 1, 1, 0]' : 0.251674}", "{'[2, 3, 1, 0, 6, 0, 1, 0, 0, 0, 22, 6, 0, 0, 2, 1, 1, 0]' : 0.251863}", "{'[2, 3, 1, 0, 6, 0, 1, 0, 0, 0, 22, 6, 0, 0, 2, 1, 1, 0]' : 0.251693}", "{'[2, 3, 1, 0, 6, 0, 1, 0, 0, 0, 22, 6, 0, 0, 2, 1, 1, 0]' : 0.251799}", "{'[2, 3, 1, 0, 6, 0, 1, 0, 0, 0, 22, 6, 0, 0, 2, 1, 1, 0]' : 0.251462}", "{'[2, 3, 1, 0, 6, 0, 1, 0, 0, 0, 22, 6, 0, 0, 2, 1, 1, 0]' : 0.251901}", "{'[2, 3, 1, 0, 6, 0, 1, 0, 0, 0, 22, 6, 0, 0, 2, 1, 1, 0]' : 0.251498}", "{'[2, 3, 1, 0, 6, 0, 1, 0, 0, 0, 22, 6, 0, 0, 2, 1, 1, 0]' : 0.251677}", "{'[2, 3, 1, 0, 6, 0, 1, 0, 0, 0, 22, 6, 0, 0, 2, 1, 1, 0]' : 0.251485}", "{'[2, 3, 1, 0, 6, 0, 1, 0, 0, 0, 22, 6, 0, 0, 2, 1, 1, 0]' : 0.252043}", "{'[2, 3, 1, 0, 6, 0, 1, 0, 0, 0, 22, 6, 0, 0, 2, 1, 1, 0]' : 0.251804}", "{'[2, 3, 1, 0, 6, 0, 1, 0, 0, 0, 22, 6, 0, 0, 2, 1, 1, 0]' : 0.251722}", "{'[2, 3, 1, 0, 6, 0, 1, 0, 0, 0, 22, 6, 0, 0, 2, 1, 1, 0]' : 0.251504}", "{'[2, 3, 1, 0, 6, 0, 1, 0, 0, 0, 22, 6, 0, 0, 2, 1, 1, 0]' : 0.251919}", "{'[2, 3, 1, 0, 6, 0, 1, 0, 0, 0, 22, 6, 0, 0, 2, 1, 1, 0]' : 0.251989}", "{'[2, 3, 1, 0, 6, 0, 1, 0, 0, 0, 22, 6, 0, 0, 2, 1, 1, 0]' : 0.251931}", "{'[2, 3, 1, 0, 6, 0, 1, 0, 0, 0, 22, 6, 0, 0, 2, 1, 1, 0]' : 0.251561}", "{'[2, 3, 1, 0, 6, 0, 1, 0, 0, 0, 22, 6, 0, 0, 2, 1, 1, 0]' : 0.251973}", "{'[2, 3, 1, 0, 6, 0, 1, 0, 0, 0, 22, 6, 0, 0, 2, 1, 1, 0]' : 0.252146}", "{'[2, 3, 1, 0, 6, 0, 1, 0, 0, 0, 22, 6, 0, 0, 2, 1, 1, 0]' : 0.251981}", "{'[2, 3, 1, 0, 6, 0, 1, 0, 0, 0, 22, 6, 0, 0, 2, 1, 1, 0]' : 0.255933}", "{'[2, 3, 1, 0, 6, 0, 1, 0, 0, 0, 22, 6, 0, 0, 2, 1, 1, 0]' : 0.259298}", "{'[2, 3, 1, 0, 6, 0, 1, 0, 0, 0, 22, 6, 0, 0, 2, 1, 1, 0]' : 0.257565}", "{'[2, 3, 1, 0, 6, 0, 1, 0, 0, 0, 22, 6, 0, 0, 2, 1, 1, 0]' : 0.251923}", "{'[2, 3, 1, 0, 6, 0, 1, 0, 0, 0, 22, 6, 0, 0, 2, 1, 1, 0]' : 0.251515}", "{'[2, 3, 1, 0, 6, 0, 1, 0, 0, 0, 22, 6, 0, 0, 2, 1, 1, 0]' : 0.251793}"]
returning from 'run': {'[2, 3, 1, 0, 6, 0, 1, 0, 0, 0, 22, 6, 0, 0, 2, 1, 1, 0]': ([0.30109, 0.300289, 0.254168, 0.251899, 0.251674, 0.251863, 0.251693, 0.251799, 0.251462, 0.251901, 0.251498, 0.251677, 0.251485, 0.252043, 0.251804, 0.251722, 0.251504, 0.251919, 0.251989, 0.251931, 0.251561, 0.251973, 0.252146, 0.251981, 0.255933, 0.259298, 0.257565, 0.251923, 0.251515, 0.251793], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 3, 1, 0, 6, 0, 1, 0, 0, 0, 22, 6, 0, 0, 2, 1, 1, 0]': ([0.30109, 0.300289, 0.254168, 0.251899, 0.251674, 0.251863, 0.251693, 0.251799, 0.251462, 0.251901, 0.251498, 0.251677, 0.251485, 0.252043, 0.251804, 0.251722, 0.251504, 0.251919, 0.251989, 0.251931, 0.251561, 0.251973, 0.252146, 0.251981, 0.255933, 0.259298, 0.257565, 0.251923, 0.251515, 0.251793], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	5
        Additions: 		645
        Multiplications: 	252
        Divisions: 		0
        Logical: 		0
        Reads: 			1315
        Writes: 		260
        Comparisons:		25
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest7.exe __orio_perftest7.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest7.exe  
Program Test Output: 
{'[5, 6, 4, 0, 5, 6, 0, 1, 29, 0, 7, 3, 1, 0, 0, 1, 0, 0]' : 0.105678}
{'[5, 6, 4, 0, 5, 6, 0, 1, 29, 0, 7, 3, 1, 0, 0, 1, 0, 0]' : 0.106314}
{'[5, 6, 4, 0, 5, 6, 0, 1, 29, 0, 7, 3, 1, 0, 0, 1, 0, 0]' : 0.106134}
{'[5, 6, 4, 0, 5, 6, 0, 1, 29, 0, 7, 3, 1, 0, 0, 1, 0, 0]' : 0.106274}
{'[5, 6, 4, 0, 5, 6, 0, 1, 29, 0, 7, 3, 1, 0, 0, 1, 0, 0]' : 0.10466}
{'[5, 6, 4, 0, 5, 6, 0, 1, 29, 0, 7, 3, 1, 0, 0, 1, 0, 0]' : 0.093909}
{'[5, 6, 4, 0, 5, 6, 0, 1, 29, 0, 7, 3, 1, 0, 0, 1, 0, 0]' : 0.0929909}
{'[5, 6, 4, 0, 5, 6, 0, 1, 29, 0, 7, 3, 1, 0, 0, 1, 0, 0]' : 0.09304}
{'[5, 6, 4, 0, 5, 6, 0, 1, 29, 0, 7, 3, 1, 0, 0, 1, 0, 0]' : 0.09337}
{'[5, 6, 4, 0, 5, 6, 0, 1, 29, 0, 7, 3, 1, 0, 0, 1, 0, 0]' : 0.0930228}
{'[5, 6, 4, 0, 5, 6, 0, 1, 29, 0, 7, 3, 1, 0, 0, 1, 0, 0]' : 0.0929539}
{'[5, 6, 4, 0, 5, 6, 0, 1, 29, 0, 7, 3, 1, 0, 0, 1, 0, 0]' : 0.0930111}
{'[5, 6, 4, 0, 5, 6, 0, 1, 29, 0, 7, 3, 1, 0, 0, 1, 0, 0]' : 0.0930889}
{'[5, 6, 4, 0, 5, 6, 0, 1, 29, 0, 7, 3, 1, 0, 0, 1, 0, 0]' : 0.0929761}
{'[5, 6, 4, 0, 5, 6, 0, 1, 29, 0, 7, 3, 1, 0, 0, 1, 0, 0]' : 0.093271}
{'[5, 6, 4, 0, 5, 6, 0, 1, 29, 0, 7, 3, 1, 0, 0, 1, 0, 0]' : 0.0931859}
{'[5, 6, 4, 0, 5, 6, 0, 1, 29, 0, 7, 3, 1, 0, 0, 1, 0, 0]' : 0.093008}
{'[5, 6, 4, 0, 5, 6, 0, 1, 29, 0, 7, 3, 1, 0, 0, 1, 0, 0]' : 0.093035}
{'[5, 6, 4, 0, 5, 6, 0, 1, 29, 0, 7, 3, 1, 0, 0, 1, 0, 0]' : 0.093168}
{'[5, 6, 4, 0, 5, 6, 0, 1, 29, 0, 7, 3, 1, 0, 0, 1, 0, 0]' : 0.0930872}
{'[5, 6, 4, 0, 5, 6, 0, 1, 29, 0, 7, 3, 1, 0, 0, 1, 0, 0]' : 0.092983}
{'[5, 6, 4, 0, 5, 6, 0, 1, 29, 0, 7, 3, 1, 0, 0, 1, 0, 0]' : 0.093019}
{'[5, 6, 4, 0, 5, 6, 0, 1, 29, 0, 7, 3, 1, 0, 0, 1, 0, 0]' : 0.093015}
{'[5, 6, 4, 0, 5, 6, 0, 1, 29, 0, 7, 3, 1, 0, 0, 1, 0, 0]' : 0.0930099}
{'[5, 6, 4, 0, 5, 6, 0, 1, 29, 0, 7, 3, 1, 0, 0, 1, 0, 0]' : 0.0929902}
{'[5, 6, 4, 0, 5, 6, 0, 1, 29, 0, 7, 3, 1, 0, 0, 1, 0, 0]' : 0.0929389}
{'[5, 6, 4, 0, 5, 6, 0, 1, 29, 0, 7, 3, 1, 0, 0, 1, 0, 0]' : 0.093183}
{'[5, 6, 4, 0, 5, 6, 0, 1, 29, 0, 7, 3, 1, 0, 0, 1, 0, 0]' : 0.0932069}
{'[5, 6, 4, 0, 5, 6, 0, 1, 29, 0, 7, 3, 1, 0, 0, 1, 0, 0]' : 0.093282}
{'[5, 6, 4, 0, 5, 6, 0, 1, 29, 0, 7, 3, 1, 0, 0, 1, 0, 0]' : 0.0929551}

out:
 ["{'[5, 6, 4, 0, 5, 6, 0, 1, 29, 0, 7, 3, 1, 0, 0, 1, 0, 0]' : 0.105678}", "{'[5, 6, 4, 0, 5, 6, 0, 1, 29, 0, 7, 3, 1, 0, 0, 1, 0, 0]' : 0.106314}", "{'[5, 6, 4, 0, 5, 6, 0, 1, 29, 0, 7, 3, 1, 0, 0, 1, 0, 0]' : 0.106134}", "{'[5, 6, 4, 0, 5, 6, 0, 1, 29, 0, 7, 3, 1, 0, 0, 1, 0, 0]' : 0.106274}", "{'[5, 6, 4, 0, 5, 6, 0, 1, 29, 0, 7, 3, 1, 0, 0, 1, 0, 0]' : 0.10466}", "{'[5, 6, 4, 0, 5, 6, 0, 1, 29, 0, 7, 3, 1, 0, 0, 1, 0, 0]' : 0.093909}", "{'[5, 6, 4, 0, 5, 6, 0, 1, 29, 0, 7, 3, 1, 0, 0, 1, 0, 0]' : 0.0929909}", "{'[5, 6, 4, 0, 5, 6, 0, 1, 29, 0, 7, 3, 1, 0, 0, 1, 0, 0]' : 0.09304}", "{'[5, 6, 4, 0, 5, 6, 0, 1, 29, 0, 7, 3, 1, 0, 0, 1, 0, 0]' : 0.09337}", "{'[5, 6, 4, 0, 5, 6, 0, 1, 29, 0, 7, 3, 1, 0, 0, 1, 0, 0]' : 0.0930228}", "{'[5, 6, 4, 0, 5, 6, 0, 1, 29, 0, 7, 3, 1, 0, 0, 1, 0, 0]' : 0.0929539}", "{'[5, 6, 4, 0, 5, 6, 0, 1, 29, 0, 7, 3, 1, 0, 0, 1, 0, 0]' : 0.0930111}", "{'[5, 6, 4, 0, 5, 6, 0, 1, 29, 0, 7, 3, 1, 0, 0, 1, 0, 0]' : 0.0930889}", "{'[5, 6, 4, 0, 5, 6, 0, 1, 29, 0, 7, 3, 1, 0, 0, 1, 0, 0]' : 0.0929761}", "{'[5, 6, 4, 0, 5, 6, 0, 1, 29, 0, 7, 3, 1, 0, 0, 1, 0, 0]' : 0.093271}", "{'[5, 6, 4, 0, 5, 6, 0, 1, 29, 0, 7, 3, 1, 0, 0, 1, 0, 0]' : 0.0931859}", "{'[5, 6, 4, 0, 5, 6, 0, 1, 29, 0, 7, 3, 1, 0, 0, 1, 0, 0]' : 0.093008}", "{'[5, 6, 4, 0, 5, 6, 0, 1, 29, 0, 7, 3, 1, 0, 0, 1, 0, 0]' : 0.093035}", "{'[5, 6, 4, 0, 5, 6, 0, 1, 29, 0, 7, 3, 1, 0, 0, 1, 0, 0]' : 0.093168}", "{'[5, 6, 4, 0, 5, 6, 0, 1, 29, 0, 7, 3, 1, 0, 0, 1, 0, 0]' : 0.0930872}", "{'[5, 6, 4, 0, 5, 6, 0, 1, 29, 0, 7, 3, 1, 0, 0, 1, 0, 0]' : 0.092983}", "{'[5, 6, 4, 0, 5, 6, 0, 1, 29, 0, 7, 3, 1, 0, 0, 1, 0, 0]' : 0.093019}", "{'[5, 6, 4, 0, 5, 6, 0, 1, 29, 0, 7, 3, 1, 0, 0, 1, 0, 0]' : 0.093015}", "{'[5, 6, 4, 0, 5, 6, 0, 1, 29, 0, 7, 3, 1, 0, 0, 1, 0, 0]' : 0.0930099}", "{'[5, 6, 4, 0, 5, 6, 0, 1, 29, 0, 7, 3, 1, 0, 0, 1, 0, 0]' : 0.0929902}", "{'[5, 6, 4, 0, 5, 6, 0, 1, 29, 0, 7, 3, 1, 0, 0, 1, 0, 0]' : 0.0929389}", "{'[5, 6, 4, 0, 5, 6, 0, 1, 29, 0, 7, 3, 1, 0, 0, 1, 0, 0]' : 0.093183}", "{'[5, 6, 4, 0, 5, 6, 0, 1, 29, 0, 7, 3, 1, 0, 0, 1, 0, 0]' : 0.0932069}", "{'[5, 6, 4, 0, 5, 6, 0, 1, 29, 0, 7, 3, 1, 0, 0, 1, 0, 0]' : 0.093282}", "{'[5, 6, 4, 0, 5, 6, 0, 1, 29, 0, 7, 3, 1, 0, 0, 1, 0, 0]' : 0.0929551}"]
returning from 'run': {'[5, 6, 4, 0, 5, 6, 0, 1, 29, 0, 7, 3, 1, 0, 0, 1, 0, 0]': ([0.105678, 0.106314, 0.106134, 0.106274, 0.10466, 0.093909, 0.0929909, 0.09304, 0.09337, 0.0930228, 0.0929539, 0.0930111, 0.0930889, 0.0929761, 0.093271, 0.0931859, 0.093008, 0.093035, 0.093168, 0.0930872, 0.092983, 0.093019, 0.093015, 0.0930099, 0.0929902, 0.0929389, 0.093183, 0.0932069, 0.093282, 0.0929551], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 6, 4, 0, 5, 6, 0, 1, 29, 0, 7, 3, 1, 0, 0, 1, 0, 0]': ([0.105678, 0.106314, 0.106134, 0.106274, 0.10466, 0.093909, 0.0929909, 0.09304, 0.09337, 0.0930228, 0.0929539, 0.0930111, 0.0930889, 0.0929761, 0.093271, 0.0931859, 0.093008, 0.093035, 0.093168, 0.0930872, 0.092983, 0.093019, 0.093015, 0.0930099, 0.0929902, 0.0929389, 0.093183, 0.0932069, 0.093282, 0.0929551], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	5
        Additions: 		201
        Multiplications: 	66
        Divisions: 		0
        Logical: 		0
        Reads: 			468
        Writes: 		72
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest8.exe __orio_perftest8.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest8.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest8.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest8.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest8.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	30
        Max loop nest depth: 	6
        Additions: 		421
        Multiplications: 	126
        Divisions: 		0
        Logical: 		0
        Reads: 			942
        Writes: 		215
        Comparisons:		30
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest9.exe __orio_perftest9.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest9.exe  
Program Test Output: 
{'[1, 4, 0, 4, 5, 4, 0, 1, 19, 5, 0, 5, 0, 0, 1, 1, 1, 0]' : 0.171708}
{'[1, 4, 0, 4, 5, 4, 0, 1, 19, 5, 0, 5, 0, 0, 1, 1, 1, 0]' : 0.171742}
{'[1, 4, 0, 4, 5, 4, 0, 1, 19, 5, 0, 5, 0, 0, 1, 1, 1, 0]' : 0.171733}
{'[1, 4, 0, 4, 5, 4, 0, 1, 19, 5, 0, 5, 0, 0, 1, 1, 1, 0]' : 0.159599}
{'[1, 4, 0, 4, 5, 4, 0, 1, 19, 5, 0, 5, 0, 0, 1, 1, 1, 0]' : 0.1471}
{'[1, 4, 0, 4, 5, 4, 0, 1, 19, 5, 0, 5, 0, 0, 1, 1, 1, 0]' : 0.146723}
{'[1, 4, 0, 4, 5, 4, 0, 1, 19, 5, 0, 5, 0, 0, 1, 1, 1, 0]' : 0.146962}
{'[1, 4, 0, 4, 5, 4, 0, 1, 19, 5, 0, 5, 0, 0, 1, 1, 1, 0]' : 0.146604}
{'[1, 4, 0, 4, 5, 4, 0, 1, 19, 5, 0, 5, 0, 0, 1, 1, 1, 0]' : 0.146528}
{'[1, 4, 0, 4, 5, 4, 0, 1, 19, 5, 0, 5, 0, 0, 1, 1, 1, 0]' : 0.14659}
{'[1, 4, 0, 4, 5, 4, 0, 1, 19, 5, 0, 5, 0, 0, 1, 1, 1, 0]' : 0.146953}
{'[1, 4, 0, 4, 5, 4, 0, 1, 19, 5, 0, 5, 0, 0, 1, 1, 1, 0]' : 0.146974}
{'[1, 4, 0, 4, 5, 4, 0, 1, 19, 5, 0, 5, 0, 0, 1, 1, 1, 0]' : 0.147244}
{'[1, 4, 0, 4, 5, 4, 0, 1, 19, 5, 0, 5, 0, 0, 1, 1, 1, 0]' : 0.146858}
{'[1, 4, 0, 4, 5, 4, 0, 1, 19, 5, 0, 5, 0, 0, 1, 1, 1, 0]' : 0.146534}
{'[1, 4, 0, 4, 5, 4, 0, 1, 19, 5, 0, 5, 0, 0, 1, 1, 1, 0]' : 0.146723}
{'[1, 4, 0, 4, 5, 4, 0, 1, 19, 5, 0, 5, 0, 0, 1, 1, 1, 0]' : 0.146655}
{'[1, 4, 0, 4, 5, 4, 0, 1, 19, 5, 0, 5, 0, 0, 1, 1, 1, 0]' : 0.146635}
{'[1, 4, 0, 4, 5, 4, 0, 1, 19, 5, 0, 5, 0, 0, 1, 1, 1, 0]' : 0.146677}
{'[1, 4, 0, 4, 5, 4, 0, 1, 19, 5, 0, 5, 0, 0, 1, 1, 1, 0]' : 0.14708}
{'[1, 4, 0, 4, 5, 4, 0, 1, 19, 5, 0, 5, 0, 0, 1, 1, 1, 0]' : 0.14688}
{'[1, 4, 0, 4, 5, 4, 0, 1, 19, 5, 0, 5, 0, 0, 1, 1, 1, 0]' : 0.146692}
{'[1, 4, 0, 4, 5, 4, 0, 1, 19, 5, 0, 5, 0, 0, 1, 1, 1, 0]' : 0.14656}
{'[1, 4, 0, 4, 5, 4, 0, 1, 19, 5, 0, 5, 0, 0, 1, 1, 1, 0]' : 0.146868}
{'[1, 4, 0, 4, 5, 4, 0, 1, 19, 5, 0, 5, 0, 0, 1, 1, 1, 0]' : 0.146725}
{'[1, 4, 0, 4, 5, 4, 0, 1, 19, 5, 0, 5, 0, 0, 1, 1, 1, 0]' : 0.146754}
{'[1, 4, 0, 4, 5, 4, 0, 1, 19, 5, 0, 5, 0, 0, 1, 1, 1, 0]' : 0.146875}
{'[1, 4, 0, 4, 5, 4, 0, 1, 19, 5, 0, 5, 0, 0, 1, 1, 1, 0]' : 0.146965}
{'[1, 4, 0, 4, 5, 4, 0, 1, 19, 5, 0, 5, 0, 0, 1, 1, 1, 0]' : 0.146581}
{'[1, 4, 0, 4, 5, 4, 0, 1, 19, 5, 0, 5, 0, 0, 1, 1, 1, 0]' : 0.146514}

out:
 ["{'[1, 4, 0, 4, 5, 4, 0, 1, 19, 5, 0, 5, 0, 0, 1, 1, 1, 0]' : 0.171708}", "{'[1, 4, 0, 4, 5, 4, 0, 1, 19, 5, 0, 5, 0, 0, 1, 1, 1, 0]' : 0.171742}", "{'[1, 4, 0, 4, 5, 4, 0, 1, 19, 5, 0, 5, 0, 0, 1, 1, 1, 0]' : 0.171733}", "{'[1, 4, 0, 4, 5, 4, 0, 1, 19, 5, 0, 5, 0, 0, 1, 1, 1, 0]' : 0.159599}", "{'[1, 4, 0, 4, 5, 4, 0, 1, 19, 5, 0, 5, 0, 0, 1, 1, 1, 0]' : 0.1471}", "{'[1, 4, 0, 4, 5, 4, 0, 1, 19, 5, 0, 5, 0, 0, 1, 1, 1, 0]' : 0.146723}", "{'[1, 4, 0, 4, 5, 4, 0, 1, 19, 5, 0, 5, 0, 0, 1, 1, 1, 0]' : 0.146962}", "{'[1, 4, 0, 4, 5, 4, 0, 1, 19, 5, 0, 5, 0, 0, 1, 1, 1, 0]' : 0.146604}", "{'[1, 4, 0, 4, 5, 4, 0, 1, 19, 5, 0, 5, 0, 0, 1, 1, 1, 0]' : 0.146528}", "{'[1, 4, 0, 4, 5, 4, 0, 1, 19, 5, 0, 5, 0, 0, 1, 1, 1, 0]' : 0.14659}", "{'[1, 4, 0, 4, 5, 4, 0, 1, 19, 5, 0, 5, 0, 0, 1, 1, 1, 0]' : 0.146953}", "{'[1, 4, 0, 4, 5, 4, 0, 1, 19, 5, 0, 5, 0, 0, 1, 1, 1, 0]' : 0.146974}", "{'[1, 4, 0, 4, 5, 4, 0, 1, 19, 5, 0, 5, 0, 0, 1, 1, 1, 0]' : 0.147244}", "{'[1, 4, 0, 4, 5, 4, 0, 1, 19, 5, 0, 5, 0, 0, 1, 1, 1, 0]' : 0.146858}", "{'[1, 4, 0, 4, 5, 4, 0, 1, 19, 5, 0, 5, 0, 0, 1, 1, 1, 0]' : 0.146534}", "{'[1, 4, 0, 4, 5, 4, 0, 1, 19, 5, 0, 5, 0, 0, 1, 1, 1, 0]' : 0.146723}", "{'[1, 4, 0, 4, 5, 4, 0, 1, 19, 5, 0, 5, 0, 0, 1, 1, 1, 0]' : 0.146655}", "{'[1, 4, 0, 4, 5, 4, 0, 1, 19, 5, 0, 5, 0, 0, 1, 1, 1, 0]' : 0.146635}", "{'[1, 4, 0, 4, 5, 4, 0, 1, 19, 5, 0, 5, 0, 0, 1, 1, 1, 0]' : 0.146677}", "{'[1, 4, 0, 4, 5, 4, 0, 1, 19, 5, 0, 5, 0, 0, 1, 1, 1, 0]' : 0.14708}", "{'[1, 4, 0, 4, 5, 4, 0, 1, 19, 5, 0, 5, 0, 0, 1, 1, 1, 0]' : 0.14688}", "{'[1, 4, 0, 4, 5, 4, 0, 1, 19, 5, 0, 5, 0, 0, 1, 1, 1, 0]' : 0.146692}", "{'[1, 4, 0, 4, 5, 4, 0, 1, 19, 5, 0, 5, 0, 0, 1, 1, 1, 0]' : 0.14656}", "{'[1, 4, 0, 4, 5, 4, 0, 1, 19, 5, 0, 5, 0, 0, 1, 1, 1, 0]' : 0.146868}", "{'[1, 4, 0, 4, 5, 4, 0, 1, 19, 5, 0, 5, 0, 0, 1, 1, 1, 0]' : 0.146725}", "{'[1, 4, 0, 4, 5, 4, 0, 1, 19, 5, 0, 5, 0, 0, 1, 1, 1, 0]' : 0.146754}", "{'[1, 4, 0, 4, 5, 4, 0, 1, 19, 5, 0, 5, 0, 0, 1, 1, 1, 0]' : 0.146875}", "{'[1, 4, 0, 4, 5, 4, 0, 1, 19, 5, 0, 5, 0, 0, 1, 1, 1, 0]' : 0.146965}", "{'[1, 4, 0, 4, 5, 4, 0, 1, 19, 5, 0, 5, 0, 0, 1, 1, 1, 0]' : 0.146581}", "{'[1, 4, 0, 4, 5, 4, 0, 1, 19, 5, 0, 5, 0, 0, 1, 1, 1, 0]' : 0.146514}"]
returning from 'run': {'[1, 4, 0, 4, 5, 4, 0, 1, 19, 5, 0, 5, 0, 0, 1, 1, 1, 0]': ([0.171708, 0.171742, 0.171733, 0.159599, 0.1471, 0.146723, 0.146962, 0.146604, 0.146528, 0.14659, 0.146953, 0.146974, 0.147244, 0.146858, 0.146534, 0.146723, 0.146655, 0.146635, 0.146677, 0.14708, 0.14688, 0.146692, 0.14656, 0.146868, 0.146725, 0.146754, 0.146875, 0.146965, 0.146581, 0.146514], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 4, 0, 4, 5, 4, 0, 1, 19, 5, 0, 5, 0, 0, 1, 1, 1, 0]': ([0.171708, 0.171742, 0.171733, 0.159599, 0.1471, 0.146723, 0.146962, 0.146604, 0.146528, 0.14659, 0.146953, 0.146974, 0.147244, 0.146858, 0.146534, 0.146723, 0.146655, 0.146635, 0.146677, 0.14708, 0.14688, 0.146692, 0.14656, 0.146868, 0.146725, 0.146754, 0.146875, 0.146965, 0.146581, 0.146514], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	71
        Max loop nest depth: 	5
        Additions: 		5402
        Multiplications: 	1512
        Divisions: 		0
        Logical: 		0
        Reads: 			8229
        Writes: 		932
        Comparisons:		71
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest10.exe __orio_perftest10.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest10.exe  
Program Test Output: 
{'[0, 3, 1, 2, 1, 6, 0, 0, 1, 26, 0, 16, 0, 0, 1, 0, 1, 0]' : 0.197476}
{'[0, 3, 1, 2, 1, 6, 0, 0, 1, 26, 0, 16, 0, 0, 1, 0, 1, 0]' : 0.198443}
{'[0, 3, 1, 2, 1, 6, 0, 0, 1, 26, 0, 16, 0, 0, 1, 0, 1, 0]' : 0.196566}
{'[0, 3, 1, 2, 1, 6, 0, 0, 1, 26, 0, 16, 0, 0, 1, 0, 1, 0]' : 0.196944}
{'[0, 3, 1, 2, 1, 6, 0, 0, 1, 26, 0, 16, 0, 0, 1, 0, 1, 0]' : 0.197002}
{'[0, 3, 1, 2, 1, 6, 0, 0, 1, 26, 0, 16, 0, 0, 1, 0, 1, 0]' : 0.196862}
{'[0, 3, 1, 2, 1, 6, 0, 0, 1, 26, 0, 16, 0, 0, 1, 0, 1, 0]' : 0.196994}
{'[0, 3, 1, 2, 1, 6, 0, 0, 1, 26, 0, 16, 0, 0, 1, 0, 1, 0]' : 0.196753}
{'[0, 3, 1, 2, 1, 6, 0, 0, 1, 26, 0, 16, 0, 0, 1, 0, 1, 0]' : 0.197252}
{'[0, 3, 1, 2, 1, 6, 0, 0, 1, 26, 0, 16, 0, 0, 1, 0, 1, 0]' : 0.196837}
{'[0, 3, 1, 2, 1, 6, 0, 0, 1, 26, 0, 16, 0, 0, 1, 0, 1, 0]' : 0.197051}
{'[0, 3, 1, 2, 1, 6, 0, 0, 1, 26, 0, 16, 0, 0, 1, 0, 1, 0]' : 0.197159}
{'[0, 3, 1, 2, 1, 6, 0, 0, 1, 26, 0, 16, 0, 0, 1, 0, 1, 0]' : 0.196895}
{'[0, 3, 1, 2, 1, 6, 0, 0, 1, 26, 0, 16, 0, 0, 1, 0, 1, 0]' : 0.196876}
{'[0, 3, 1, 2, 1, 6, 0, 0, 1, 26, 0, 16, 0, 0, 1, 0, 1, 0]' : 0.197345}
{'[0, 3, 1, 2, 1, 6, 0, 0, 1, 26, 0, 16, 0, 0, 1, 0, 1, 0]' : 0.197683}
{'[0, 3, 1, 2, 1, 6, 0, 0, 1, 26, 0, 16, 0, 0, 1, 0, 1, 0]' : 0.197522}
{'[0, 3, 1, 2, 1, 6, 0, 0, 1, 26, 0, 16, 0, 0, 1, 0, 1, 0]' : 0.198035}
{'[0, 3, 1, 2, 1, 6, 0, 0, 1, 26, 0, 16, 0, 0, 1, 0, 1, 0]' : 0.197723}
{'[0, 3, 1, 2, 1, 6, 0, 0, 1, 26, 0, 16, 0, 0, 1, 0, 1, 0]' : 0.197049}
{'[0, 3, 1, 2, 1, 6, 0, 0, 1, 26, 0, 16, 0, 0, 1, 0, 1, 0]' : 0.197409}
{'[0, 3, 1, 2, 1, 6, 0, 0, 1, 26, 0, 16, 0, 0, 1, 0, 1, 0]' : 0.197682}
{'[0, 3, 1, 2, 1, 6, 0, 0, 1, 26, 0, 16, 0, 0, 1, 0, 1, 0]' : 0.197489}
{'[0, 3, 1, 2, 1, 6, 0, 0, 1, 26, 0, 16, 0, 0, 1, 0, 1, 0]' : 0.197497}
{'[0, 3, 1, 2, 1, 6, 0, 0, 1, 26, 0, 16, 0, 0, 1, 0, 1, 0]' : 0.197514}
{'[0, 3, 1, 2, 1, 6, 0, 0, 1, 26, 0, 16, 0, 0, 1, 0, 1, 0]' : 0.197424}
{'[0, 3, 1, 2, 1, 6, 0, 0, 1, 26, 0, 16, 0, 0, 1, 0, 1, 0]' : 0.197488}
{'[0, 3, 1, 2, 1, 6, 0, 0, 1, 26, 0, 16, 0, 0, 1, 0, 1, 0]' : 0.197176}
{'[0, 3, 1, 2, 1, 6, 0, 0, 1, 26, 0, 16, 0, 0, 1, 0, 1, 0]' : 0.197925}
{'[0, 3, 1, 2, 1, 6, 0, 0, 1, 26, 0, 16, 0, 0, 1, 0, 1, 0]' : 0.197664}

out:
 ["{'[0, 3, 1, 2, 1, 6, 0, 0, 1, 26, 0, 16, 0, 0, 1, 0, 1, 0]' : 0.197476}", "{'[0, 3, 1, 2, 1, 6, 0, 0, 1, 26, 0, 16, 0, 0, 1, 0, 1, 0]' : 0.198443}", "{'[0, 3, 1, 2, 1, 6, 0, 0, 1, 26, 0, 16, 0, 0, 1, 0, 1, 0]' : 0.196566}", "{'[0, 3, 1, 2, 1, 6, 0, 0, 1, 26, 0, 16, 0, 0, 1, 0, 1, 0]' : 0.196944}", "{'[0, 3, 1, 2, 1, 6, 0, 0, 1, 26, 0, 16, 0, 0, 1, 0, 1, 0]' : 0.197002}", "{'[0, 3, 1, 2, 1, 6, 0, 0, 1, 26, 0, 16, 0, 0, 1, 0, 1, 0]' : 0.196862}", "{'[0, 3, 1, 2, 1, 6, 0, 0, 1, 26, 0, 16, 0, 0, 1, 0, 1, 0]' : 0.196994}", "{'[0, 3, 1, 2, 1, 6, 0, 0, 1, 26, 0, 16, 0, 0, 1, 0, 1, 0]' : 0.196753}", "{'[0, 3, 1, 2, 1, 6, 0, 0, 1, 26, 0, 16, 0, 0, 1, 0, 1, 0]' : 0.197252}", "{'[0, 3, 1, 2, 1, 6, 0, 0, 1, 26, 0, 16, 0, 0, 1, 0, 1, 0]' : 0.196837}", "{'[0, 3, 1, 2, 1, 6, 0, 0, 1, 26, 0, 16, 0, 0, 1, 0, 1, 0]' : 0.197051}", "{'[0, 3, 1, 2, 1, 6, 0, 0, 1, 26, 0, 16, 0, 0, 1, 0, 1, 0]' : 0.197159}", "{'[0, 3, 1, 2, 1, 6, 0, 0, 1, 26, 0, 16, 0, 0, 1, 0, 1, 0]' : 0.196895}", "{'[0, 3, 1, 2, 1, 6, 0, 0, 1, 26, 0, 16, 0, 0, 1, 0, 1, 0]' : 0.196876}", "{'[0, 3, 1, 2, 1, 6, 0, 0, 1, 26, 0, 16, 0, 0, 1, 0, 1, 0]' : 0.197345}", "{'[0, 3, 1, 2, 1, 6, 0, 0, 1, 26, 0, 16, 0, 0, 1, 0, 1, 0]' : 0.197683}", "{'[0, 3, 1, 2, 1, 6, 0, 0, 1, 26, 0, 16, 0, 0, 1, 0, 1, 0]' : 0.197522}", "{'[0, 3, 1, 2, 1, 6, 0, 0, 1, 26, 0, 16, 0, 0, 1, 0, 1, 0]' : 0.198035}", "{'[0, 3, 1, 2, 1, 6, 0, 0, 1, 26, 0, 16, 0, 0, 1, 0, 1, 0]' : 0.197723}", "{'[0, 3, 1, 2, 1, 6, 0, 0, 1, 26, 0, 16, 0, 0, 1, 0, 1, 0]' : 0.197049}", "{'[0, 3, 1, 2, 1, 6, 0, 0, 1, 26, 0, 16, 0, 0, 1, 0, 1, 0]' : 0.197409}", "{'[0, 3, 1, 2, 1, 6, 0, 0, 1, 26, 0, 16, 0, 0, 1, 0, 1, 0]' : 0.197682}", "{'[0, 3, 1, 2, 1, 6, 0, 0, 1, 26, 0, 16, 0, 0, 1, 0, 1, 0]' : 0.197489}", "{'[0, 3, 1, 2, 1, 6, 0, 0, 1, 26, 0, 16, 0, 0, 1, 0, 1, 0]' : 0.197497}", "{'[0, 3, 1, 2, 1, 6, 0, 0, 1, 26, 0, 16, 0, 0, 1, 0, 1, 0]' : 0.197514}", "{'[0, 3, 1, 2, 1, 6, 0, 0, 1, 26, 0, 16, 0, 0, 1, 0, 1, 0]' : 0.197424}", "{'[0, 3, 1, 2, 1, 6, 0, 0, 1, 26, 0, 16, 0, 0, 1, 0, 1, 0]' : 0.197488}", "{'[0, 3, 1, 2, 1, 6, 0, 0, 1, 26, 0, 16, 0, 0, 1, 0, 1, 0]' : 0.197176}", "{'[0, 3, 1, 2, 1, 6, 0, 0, 1, 26, 0, 16, 0, 0, 1, 0, 1, 0]' : 0.197925}", "{'[0, 3, 1, 2, 1, 6, 0, 0, 1, 26, 0, 16, 0, 0, 1, 0, 1, 0]' : 0.197664}"]
returning from 'run': {'[0, 3, 1, 2, 1, 6, 0, 0, 1, 26, 0, 16, 0, 0, 1, 0, 1, 0]': ([0.197476, 0.198443, 0.196566, 0.196944, 0.197002, 0.196862, 0.196994, 0.196753, 0.197252, 0.196837, 0.197051, 0.197159, 0.196895, 0.196876, 0.197345, 0.197683, 0.197522, 0.198035, 0.197723, 0.197049, 0.197409, 0.197682, 0.197489, 0.197497, 0.197514, 0.197424, 0.197488, 0.197176, 0.197925, 0.197664], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 3, 1, 2, 1, 6, 0, 0, 1, 26, 0, 16, 0, 0, 1, 0, 1, 0]': ([0.197476, 0.198443, 0.196566, 0.196944, 0.197002, 0.196862, 0.196994, 0.196753, 0.197252, 0.196837, 0.197051, 0.197159, 0.196895, 0.196876, 0.197345, 0.197683, 0.197522, 0.198035, 0.197723, 0.197049, 0.197409, 0.197682, 0.197489, 0.197497, 0.197514, 0.197424, 0.197488, 0.197176, 0.197925, 0.197664], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	75
        Max loop nest depth: 	6
        Additions: 		3513
        Multiplications: 	1008
        Divisions: 		0
        Logical: 		0
        Reads: 			6027
        Writes: 		754
        Comparisons:		75
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest11.exe __orio_perftest11.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest11.exe  
Program Test Output: 
{'[2, 1, 1, 6, 1, 0, 0, 1, 11, 22, 6, 0, 2, 0, 0, 0, 0, 1]' : 0.27837}
{'[2, 1, 1, 6, 1, 0, 0, 1, 11, 22, 6, 0, 2, 0, 0, 0, 0, 1]' : 0.274695}
{'[2, 1, 1, 6, 1, 0, 0, 1, 11, 22, 6, 0, 2, 0, 0, 0, 0, 1]' : 0.265515}
{'[2, 1, 1, 6, 1, 0, 0, 1, 11, 22, 6, 0, 2, 0, 0, 0, 0, 1]' : 0.265973}
{'[2, 1, 1, 6, 1, 0, 0, 1, 11, 22, 6, 0, 2, 0, 0, 0, 0, 1]' : 0.265643}
{'[2, 1, 1, 6, 1, 0, 0, 1, 11, 22, 6, 0, 2, 0, 0, 0, 0, 1]' : 0.265977}
{'[2, 1, 1, 6, 1, 0, 0, 1, 11, 22, 6, 0, 2, 0, 0, 0, 0, 1]' : 0.26581}
{'[2, 1, 1, 6, 1, 0, 0, 1, 11, 22, 6, 0, 2, 0, 0, 0, 0, 1]' : 0.266459}
{'[2, 1, 1, 6, 1, 0, 0, 1, 11, 22, 6, 0, 2, 0, 0, 0, 0, 1]' : 0.265702}
{'[2, 1, 1, 6, 1, 0, 0, 1, 11, 22, 6, 0, 2, 0, 0, 0, 0, 1]' : 0.265773}
{'[2, 1, 1, 6, 1, 0, 0, 1, 11, 22, 6, 0, 2, 0, 0, 0, 0, 1]' : 0.265697}
{'[2, 1, 1, 6, 1, 0, 0, 1, 11, 22, 6, 0, 2, 0, 0, 0, 0, 1]' : 0.266537}
{'[2, 1, 1, 6, 1, 0, 0, 1, 11, 22, 6, 0, 2, 0, 0, 0, 0, 1]' : 0.265799}
{'[2, 1, 1, 6, 1, 0, 0, 1, 11, 22, 6, 0, 2, 0, 0, 0, 0, 1]' : 0.265858}
{'[2, 1, 1, 6, 1, 0, 0, 1, 11, 22, 6, 0, 2, 0, 0, 0, 0, 1]' : 0.265951}
{'[2, 1, 1, 6, 1, 0, 0, 1, 11, 22, 6, 0, 2, 0, 0, 0, 0, 1]' : 0.265969}
{'[2, 1, 1, 6, 1, 0, 0, 1, 11, 22, 6, 0, 2, 0, 0, 0, 0, 1]' : 0.265757}
{'[2, 1, 1, 6, 1, 0, 0, 1, 11, 22, 6, 0, 2, 0, 0, 0, 0, 1]' : 0.265815}
{'[2, 1, 1, 6, 1, 0, 0, 1, 11, 22, 6, 0, 2, 0, 0, 0, 0, 1]' : 0.265526}
{'[2, 1, 1, 6, 1, 0, 0, 1, 11, 22, 6, 0, 2, 0, 0, 0, 0, 1]' : 0.265861}
{'[2, 1, 1, 6, 1, 0, 0, 1, 11, 22, 6, 0, 2, 0, 0, 0, 0, 1]' : 0.265937}
{'[2, 1, 1, 6, 1, 0, 0, 1, 11, 22, 6, 0, 2, 0, 0, 0, 0, 1]' : 0.266189}
{'[2, 1, 1, 6, 1, 0, 0, 1, 11, 22, 6, 0, 2, 0, 0, 0, 0, 1]' : 0.265975}
{'[2, 1, 1, 6, 1, 0, 0, 1, 11, 22, 6, 0, 2, 0, 0, 0, 0, 1]' : 0.266034}
{'[2, 1, 1, 6, 1, 0, 0, 1, 11, 22, 6, 0, 2, 0, 0, 0, 0, 1]' : 0.267122}
{'[2, 1, 1, 6, 1, 0, 0, 1, 11, 22, 6, 0, 2, 0, 0, 0, 0, 1]' : 0.26598}
{'[2, 1, 1, 6, 1, 0, 0, 1, 11, 22, 6, 0, 2, 0, 0, 0, 0, 1]' : 0.266152}
{'[2, 1, 1, 6, 1, 0, 0, 1, 11, 22, 6, 0, 2, 0, 0, 0, 0, 1]' : 0.265768}
{'[2, 1, 1, 6, 1, 0, 0, 1, 11, 22, 6, 0, 2, 0, 0, 0, 0, 1]' : 0.266097}
{'[2, 1, 1, 6, 1, 0, 0, 1, 11, 22, 6, 0, 2, 0, 0, 0, 0, 1]' : 0.265897}

out:
 ["{'[2, 1, 1, 6, 1, 0, 0, 1, 11, 22, 6, 0, 2, 0, 0, 0, 0, 1]' : 0.27837}", "{'[2, 1, 1, 6, 1, 0, 0, 1, 11, 22, 6, 0, 2, 0, 0, 0, 0, 1]' : 0.274695}", "{'[2, 1, 1, 6, 1, 0, 0, 1, 11, 22, 6, 0, 2, 0, 0, 0, 0, 1]' : 0.265515}", "{'[2, 1, 1, 6, 1, 0, 0, 1, 11, 22, 6, 0, 2, 0, 0, 0, 0, 1]' : 0.265973}", "{'[2, 1, 1, 6, 1, 0, 0, 1, 11, 22, 6, 0, 2, 0, 0, 0, 0, 1]' : 0.265643}", "{'[2, 1, 1, 6, 1, 0, 0, 1, 11, 22, 6, 0, 2, 0, 0, 0, 0, 1]' : 0.265977}", "{'[2, 1, 1, 6, 1, 0, 0, 1, 11, 22, 6, 0, 2, 0, 0, 0, 0, 1]' : 0.26581}", "{'[2, 1, 1, 6, 1, 0, 0, 1, 11, 22, 6, 0, 2, 0, 0, 0, 0, 1]' : 0.266459}", "{'[2, 1, 1, 6, 1, 0, 0, 1, 11, 22, 6, 0, 2, 0, 0, 0, 0, 1]' : 0.265702}", "{'[2, 1, 1, 6, 1, 0, 0, 1, 11, 22, 6, 0, 2, 0, 0, 0, 0, 1]' : 0.265773}", "{'[2, 1, 1, 6, 1, 0, 0, 1, 11, 22, 6, 0, 2, 0, 0, 0, 0, 1]' : 0.265697}", "{'[2, 1, 1, 6, 1, 0, 0, 1, 11, 22, 6, 0, 2, 0, 0, 0, 0, 1]' : 0.266537}", "{'[2, 1, 1, 6, 1, 0, 0, 1, 11, 22, 6, 0, 2, 0, 0, 0, 0, 1]' : 0.265799}", "{'[2, 1, 1, 6, 1, 0, 0, 1, 11, 22, 6, 0, 2, 0, 0, 0, 0, 1]' : 0.265858}", "{'[2, 1, 1, 6, 1, 0, 0, 1, 11, 22, 6, 0, 2, 0, 0, 0, 0, 1]' : 0.265951}", "{'[2, 1, 1, 6, 1, 0, 0, 1, 11, 22, 6, 0, 2, 0, 0, 0, 0, 1]' : 0.265969}", "{'[2, 1, 1, 6, 1, 0, 0, 1, 11, 22, 6, 0, 2, 0, 0, 0, 0, 1]' : 0.265757}", "{'[2, 1, 1, 6, 1, 0, 0, 1, 11, 22, 6, 0, 2, 0, 0, 0, 0, 1]' : 0.265815}", "{'[2, 1, 1, 6, 1, 0, 0, 1, 11, 22, 6, 0, 2, 0, 0, 0, 0, 1]' : 0.265526}", "{'[2, 1, 1, 6, 1, 0, 0, 1, 11, 22, 6, 0, 2, 0, 0, 0, 0, 1]' : 0.265861}", "{'[2, 1, 1, 6, 1, 0, 0, 1, 11, 22, 6, 0, 2, 0, 0, 0, 0, 1]' : 0.265937}", "{'[2, 1, 1, 6, 1, 0, 0, 1, 11, 22, 6, 0, 2, 0, 0, 0, 0, 1]' : 0.266189}", "{'[2, 1, 1, 6, 1, 0, 0, 1, 11, 22, 6, 0, 2, 0, 0, 0, 0, 1]' : 0.265975}", "{'[2, 1, 1, 6, 1, 0, 0, 1, 11, 22, 6, 0, 2, 0, 0, 0, 0, 1]' : 0.266034}", "{'[2, 1, 1, 6, 1, 0, 0, 1, 11, 22, 6, 0, 2, 0, 0, 0, 0, 1]' : 0.267122}", "{'[2, 1, 1, 6, 1, 0, 0, 1, 11, 22, 6, 0, 2, 0, 0, 0, 0, 1]' : 0.26598}", "{'[2, 1, 1, 6, 1, 0, 0, 1, 11, 22, 6, 0, 2, 0, 0, 0, 0, 1]' : 0.266152}", "{'[2, 1, 1, 6, 1, 0, 0, 1, 11, 22, 6, 0, 2, 0, 0, 0, 0, 1]' : 0.265768}", "{'[2, 1, 1, 6, 1, 0, 0, 1, 11, 22, 6, 0, 2, 0, 0, 0, 0, 1]' : 0.266097}", "{'[2, 1, 1, 6, 1, 0, 0, 1, 11, 22, 6, 0, 2, 0, 0, 0, 0, 1]' : 0.265897}"]
returning from 'run': {'[2, 1, 1, 6, 1, 0, 0, 1, 11, 22, 6, 0, 2, 0, 0, 0, 0, 1]': ([0.27837, 0.274695, 0.265515, 0.265973, 0.265643, 0.265977, 0.26581, 0.266459, 0.265702, 0.265773, 0.265697, 0.266537, 0.265799, 0.265858, 0.265951, 0.265969, 0.265757, 0.265815, 0.265526, 0.265861, 0.265937, 0.266189, 0.265975, 0.266034, 0.267122, 0.26598, 0.266152, 0.265768, 0.266097, 0.265897], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 1, 1, 6, 1, 0, 0, 1, 11, 22, 6, 0, 2, 0, 0, 0, 0, 1]': ([0.27837, 0.274695, 0.265515, 0.265973, 0.265643, 0.265977, 0.26581, 0.266459, 0.265702, 0.265773, 0.265697, 0.266537, 0.265799, 0.265858, 0.265951, 0.265969, 0.265757, 0.265815, 0.265526, 0.265861, 0.265937, 0.266189, 0.265975, 0.266034, 0.267122, 0.26598, 0.266152, 0.265768, 0.266097, 0.265897], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	23
        Max loop nest depth: 	4
        Additions: 		230
        Multiplications: 	54
        Divisions: 		0
        Logical: 		0
        Reads: 			558
        Writes: 		134
        Comparisons:		23
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest12.exe __orio_perftest12.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest12.exe  
Program Test Output: 
{'[0, 2, 4, 0, 1, 0, 1, 1, 4, 1, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.199829}
{'[0, 2, 4, 0, 1, 0, 1, 1, 4, 1, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.199836}
{'[0, 2, 4, 0, 1, 0, 1, 1, 4, 1, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.19963}
{'[0, 2, 4, 0, 1, 0, 1, 1, 4, 1, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.178726}
{'[0, 2, 4, 0, 1, 0, 1, 1, 4, 1, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.168182}
{'[0, 2, 4, 0, 1, 0, 1, 1, 4, 1, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.168015}
{'[0, 2, 4, 0, 1, 0, 1, 1, 4, 1, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.168393}
{'[0, 2, 4, 0, 1, 0, 1, 1, 4, 1, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.168283}
{'[0, 2, 4, 0, 1, 0, 1, 1, 4, 1, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.16848}
{'[0, 2, 4, 0, 1, 0, 1, 1, 4, 1, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.168163}
{'[0, 2, 4, 0, 1, 0, 1, 1, 4, 1, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.168148}
{'[0, 2, 4, 0, 1, 0, 1, 1, 4, 1, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.16814}
{'[0, 2, 4, 0, 1, 0, 1, 1, 4, 1, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.168283}
{'[0, 2, 4, 0, 1, 0, 1, 1, 4, 1, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.168094}
{'[0, 2, 4, 0, 1, 0, 1, 1, 4, 1, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.168449}
{'[0, 2, 4, 0, 1, 0, 1, 1, 4, 1, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.168536}
{'[0, 2, 4, 0, 1, 0, 1, 1, 4, 1, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.168104}
{'[0, 2, 4, 0, 1, 0, 1, 1, 4, 1, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.167981}
{'[0, 2, 4, 0, 1, 0, 1, 1, 4, 1, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.168187}
{'[0, 2, 4, 0, 1, 0, 1, 1, 4, 1, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.16813}
{'[0, 2, 4, 0, 1, 0, 1, 1, 4, 1, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.168249}
{'[0, 2, 4, 0, 1, 0, 1, 1, 4, 1, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.168501}
{'[0, 2, 4, 0, 1, 0, 1, 1, 4, 1, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.16815}
{'[0, 2, 4, 0, 1, 0, 1, 1, 4, 1, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.168425}
{'[0, 2, 4, 0, 1, 0, 1, 1, 4, 1, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.168278}
{'[0, 2, 4, 0, 1, 0, 1, 1, 4, 1, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.168827}
{'[0, 2, 4, 0, 1, 0, 1, 1, 4, 1, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.168175}
{'[0, 2, 4, 0, 1, 0, 1, 1, 4, 1, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.168715}
{'[0, 2, 4, 0, 1, 0, 1, 1, 4, 1, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.168322}
{'[0, 2, 4, 0, 1, 0, 1, 1, 4, 1, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.168048}

out:
 ["{'[0, 2, 4, 0, 1, 0, 1, 1, 4, 1, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.199829}", "{'[0, 2, 4, 0, 1, 0, 1, 1, 4, 1, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.199836}", "{'[0, 2, 4, 0, 1, 0, 1, 1, 4, 1, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.19963}", "{'[0, 2, 4, 0, 1, 0, 1, 1, 4, 1, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.178726}", "{'[0, 2, 4, 0, 1, 0, 1, 1, 4, 1, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.168182}", "{'[0, 2, 4, 0, 1, 0, 1, 1, 4, 1, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.168015}", "{'[0, 2, 4, 0, 1, 0, 1, 1, 4, 1, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.168393}", "{'[0, 2, 4, 0, 1, 0, 1, 1, 4, 1, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.168283}", "{'[0, 2, 4, 0, 1, 0, 1, 1, 4, 1, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.16848}", "{'[0, 2, 4, 0, 1, 0, 1, 1, 4, 1, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.168163}", "{'[0, 2, 4, 0, 1, 0, 1, 1, 4, 1, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.168148}", "{'[0, 2, 4, 0, 1, 0, 1, 1, 4, 1, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.16814}", "{'[0, 2, 4, 0, 1, 0, 1, 1, 4, 1, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.168283}", "{'[0, 2, 4, 0, 1, 0, 1, 1, 4, 1, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.168094}", "{'[0, 2, 4, 0, 1, 0, 1, 1, 4, 1, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.168449}", "{'[0, 2, 4, 0, 1, 0, 1, 1, 4, 1, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.168536}", "{'[0, 2, 4, 0, 1, 0, 1, 1, 4, 1, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.168104}", "{'[0, 2, 4, 0, 1, 0, 1, 1, 4, 1, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.167981}", "{'[0, 2, 4, 0, 1, 0, 1, 1, 4, 1, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.168187}", "{'[0, 2, 4, 0, 1, 0, 1, 1, 4, 1, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.16813}", "{'[0, 2, 4, 0, 1, 0, 1, 1, 4, 1, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.168249}", "{'[0, 2, 4, 0, 1, 0, 1, 1, 4, 1, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.168501}", "{'[0, 2, 4, 0, 1, 0, 1, 1, 4, 1, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.16815}", "{'[0, 2, 4, 0, 1, 0, 1, 1, 4, 1, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.168425}", "{'[0, 2, 4, 0, 1, 0, 1, 1, 4, 1, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.168278}", "{'[0, 2, 4, 0, 1, 0, 1, 1, 4, 1, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.168827}", "{'[0, 2, 4, 0, 1, 0, 1, 1, 4, 1, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.168175}", "{'[0, 2, 4, 0, 1, 0, 1, 1, 4, 1, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.168715}", "{'[0, 2, 4, 0, 1, 0, 1, 1, 4, 1, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.168322}", "{'[0, 2, 4, 0, 1, 0, 1, 1, 4, 1, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.168048}"]
returning from 'run': {'[0, 2, 4, 0, 1, 0, 1, 1, 4, 1, 0, 0, 0, 0, 1, 1, 0, 1]': ([0.199829, 0.199836, 0.19963, 0.178726, 0.168182, 0.168015, 0.168393, 0.168283, 0.16848, 0.168163, 0.168148, 0.16814, 0.168283, 0.168094, 0.168449, 0.168536, 0.168104, 0.167981, 0.168187, 0.16813, 0.168249, 0.168501, 0.16815, 0.168425, 0.168278, 0.168827, 0.168175, 0.168715, 0.168322, 0.168048], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 4, 0, 1, 0, 1, 1, 4, 1, 0, 0, 0, 0, 1, 1, 0, 1]': ([0.199829, 0.199836, 0.19963, 0.178726, 0.168182, 0.168015, 0.168393, 0.168283, 0.16848, 0.168163, 0.168148, 0.16814, 0.168283, 0.168094, 0.168449, 0.168536, 0.168104, 0.167981, 0.168187, 0.16813, 0.168249, 0.168501, 0.16815, 0.168425, 0.168278, 0.168827, 0.168175, 0.168715, 0.168322, 0.168048], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	44
        Max loop nest depth: 	6
        Additions: 		1297
        Multiplications: 	364
        Divisions: 		0
        Logical: 		0
        Reads: 			2416
        Writes: 		362
        Comparisons:		44
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest13.exe __orio_perftest13.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest13.exe  
Program Test Output: 
{'[2, 0, 3, 3, 5, 6, 1, 0, 27, 24, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.180597}
{'[2, 0, 3, 3, 5, 6, 1, 0, 27, 24, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.180645}
{'[2, 0, 3, 3, 5, 6, 1, 0, 27, 24, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.180543}
{'[2, 0, 3, 3, 5, 6, 1, 0, 27, 24, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.175035}
{'[2, 0, 3, 3, 5, 6, 1, 0, 27, 24, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.155216}
{'[2, 0, 3, 3, 5, 6, 1, 0, 27, 24, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.155676}
{'[2, 0, 3, 3, 5, 6, 1, 0, 27, 24, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.155577}
{'[2, 0, 3, 3, 5, 6, 1, 0, 27, 24, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.155197}
{'[2, 0, 3, 3, 5, 6, 1, 0, 27, 24, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.155467}
{'[2, 0, 3, 3, 5, 6, 1, 0, 27, 24, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.155859}
{'[2, 0, 3, 3, 5, 6, 1, 0, 27, 24, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.155321}
{'[2, 0, 3, 3, 5, 6, 1, 0, 27, 24, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.155234}
{'[2, 0, 3, 3, 5, 6, 1, 0, 27, 24, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.155383}
{'[2, 0, 3, 3, 5, 6, 1, 0, 27, 24, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.15519}
{'[2, 0, 3, 3, 5, 6, 1, 0, 27, 24, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.155115}
{'[2, 0, 3, 3, 5, 6, 1, 0, 27, 24, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.155687}
{'[2, 0, 3, 3, 5, 6, 1, 0, 27, 24, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.155584}
{'[2, 0, 3, 3, 5, 6, 1, 0, 27, 24, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.155232}
{'[2, 0, 3, 3, 5, 6, 1, 0, 27, 24, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.155137}
{'[2, 0, 3, 3, 5, 6, 1, 0, 27, 24, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.155212}
{'[2, 0, 3, 3, 5, 6, 1, 0, 27, 24, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.155217}
{'[2, 0, 3, 3, 5, 6, 1, 0, 27, 24, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.155579}
{'[2, 0, 3, 3, 5, 6, 1, 0, 27, 24, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.156003}
{'[2, 0, 3, 3, 5, 6, 1, 0, 27, 24, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.15566}
{'[2, 0, 3, 3, 5, 6, 1, 0, 27, 24, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.155553}
{'[2, 0, 3, 3, 5, 6, 1, 0, 27, 24, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.15558}
{'[2, 0, 3, 3, 5, 6, 1, 0, 27, 24, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.155258}
{'[2, 0, 3, 3, 5, 6, 1, 0, 27, 24, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.155422}
{'[2, 0, 3, 3, 5, 6, 1, 0, 27, 24, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.155301}
{'[2, 0, 3, 3, 5, 6, 1, 0, 27, 24, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.155305}

out:
 ["{'[2, 0, 3, 3, 5, 6, 1, 0, 27, 24, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.180597}", "{'[2, 0, 3, 3, 5, 6, 1, 0, 27, 24, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.180645}", "{'[2, 0, 3, 3, 5, 6, 1, 0, 27, 24, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.180543}", "{'[2, 0, 3, 3, 5, 6, 1, 0, 27, 24, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.175035}", "{'[2, 0, 3, 3, 5, 6, 1, 0, 27, 24, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.155216}", "{'[2, 0, 3, 3, 5, 6, 1, 0, 27, 24, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.155676}", "{'[2, 0, 3, 3, 5, 6, 1, 0, 27, 24, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.155577}", "{'[2, 0, 3, 3, 5, 6, 1, 0, 27, 24, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.155197}", "{'[2, 0, 3, 3, 5, 6, 1, 0, 27, 24, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.155467}", "{'[2, 0, 3, 3, 5, 6, 1, 0, 27, 24, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.155859}", "{'[2, 0, 3, 3, 5, 6, 1, 0, 27, 24, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.155321}", "{'[2, 0, 3, 3, 5, 6, 1, 0, 27, 24, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.155234}", "{'[2, 0, 3, 3, 5, 6, 1, 0, 27, 24, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.155383}", "{'[2, 0, 3, 3, 5, 6, 1, 0, 27, 24, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.15519}", "{'[2, 0, 3, 3, 5, 6, 1, 0, 27, 24, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.155115}", "{'[2, 0, 3, 3, 5, 6, 1, 0, 27, 24, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.155687}", "{'[2, 0, 3, 3, 5, 6, 1, 0, 27, 24, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.155584}", "{'[2, 0, 3, 3, 5, 6, 1, 0, 27, 24, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.155232}", "{'[2, 0, 3, 3, 5, 6, 1, 0, 27, 24, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.155137}", "{'[2, 0, 3, 3, 5, 6, 1, 0, 27, 24, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.155212}", "{'[2, 0, 3, 3, 5, 6, 1, 0, 27, 24, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.155217}", "{'[2, 0, 3, 3, 5, 6, 1, 0, 27, 24, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.155579}", "{'[2, 0, 3, 3, 5, 6, 1, 0, 27, 24, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.156003}", "{'[2, 0, 3, 3, 5, 6, 1, 0, 27, 24, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.15566}", "{'[2, 0, 3, 3, 5, 6, 1, 0, 27, 24, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.155553}", "{'[2, 0, 3, 3, 5, 6, 1, 0, 27, 24, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.15558}", "{'[2, 0, 3, 3, 5, 6, 1, 0, 27, 24, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.155258}", "{'[2, 0, 3, 3, 5, 6, 1, 0, 27, 24, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.155422}", "{'[2, 0, 3, 3, 5, 6, 1, 0, 27, 24, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.155301}", "{'[2, 0, 3, 3, 5, 6, 1, 0, 27, 24, 0, 4, 0, 0, 0, 0, 1, 1]' : 0.155305}"]
returning from 'run': {'[2, 0, 3, 3, 5, 6, 1, 0, 27, 24, 0, 4, 0, 0, 0, 0, 1, 1]': ([0.180597, 0.180645, 0.180543, 0.175035, 0.155216, 0.155676, 0.155577, 0.155197, 0.155467, 0.155859, 0.155321, 0.155234, 0.155383, 0.15519, 0.155115, 0.155687, 0.155584, 0.155232, 0.155137, 0.155212, 0.155217, 0.155579, 0.156003, 0.15566, 0.155553, 0.15558, 0.155258, 0.155422, 0.155301, 0.155305], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 3, 3, 5, 6, 1, 0, 27, 24, 0, 4, 0, 0, 0, 0, 1, 1]': ([0.180597, 0.180645, 0.180543, 0.175035, 0.155216, 0.155676, 0.155577, 0.155197, 0.155467, 0.155859, 0.155321, 0.155234, 0.155383, 0.15519, 0.155115, 0.155687, 0.155584, 0.155232, 0.155137, 0.155212, 0.155217, 0.155579, 0.156003, 0.15566, 0.155553, 0.15558, 0.155258, 0.155422, 0.155301, 0.155305], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	63
        Max loop nest depth: 	5
        Additions: 		4808
        Multiplications: 	1056
        Divisions: 		0
        Logical: 		0
        Reads: 			7097
        Writes: 		754
        Comparisons:		63
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest14.exe __orio_perftest14.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest14.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest14.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest14.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest14.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = kkk
Code stats:
        Number of loops: 	67
        Max loop nest depth: 	5
        Additions: 		2390
        Multiplications: 	510
        Divisions: 		0
        Logical: 		0
        Reads: 			3712
        Writes: 		430
        Comparisons:		67
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest15.exe __orio_perftest15.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest15.exe  
Program Test Output: 
{'[0, 2, 4, 6, 6, 2, 1, 1, 0, 7, 0, 12, 1, 0, 0, 0, 0, 0]' : 0.12571}
{'[0, 2, 4, 6, 6, 2, 1, 1, 0, 7, 0, 12, 1, 0, 0, 0, 0, 0]' : 0.125605}
{'[0, 2, 4, 6, 6, 2, 1, 1, 0, 7, 0, 12, 1, 0, 0, 0, 0, 0]' : 0.1254}
{'[0, 2, 4, 6, 6, 2, 1, 1, 0, 7, 0, 12, 1, 0, 0, 0, 0, 0]' : 0.125541}
{'[0, 2, 4, 6, 6, 2, 1, 1, 0, 7, 0, 12, 1, 0, 0, 0, 0, 0]' : 0.113904}
{'[0, 2, 4, 6, 6, 2, 1, 1, 0, 7, 0, 12, 1, 0, 0, 0, 0, 0]' : 0.107138}
{'[0, 2, 4, 6, 6, 2, 1, 1, 0, 7, 0, 12, 1, 0, 0, 0, 0, 0]' : 0.107026}
{'[0, 2, 4, 6, 6, 2, 1, 1, 0, 7, 0, 12, 1, 0, 0, 0, 0, 0]' : 0.10705}
{'[0, 2, 4, 6, 6, 2, 1, 1, 0, 7, 0, 12, 1, 0, 0, 0, 0, 0]' : 0.107162}
{'[0, 2, 4, 6, 6, 2, 1, 1, 0, 7, 0, 12, 1, 0, 0, 0, 0, 0]' : 0.107243}
{'[0, 2, 4, 6, 6, 2, 1, 1, 0, 7, 0, 12, 1, 0, 0, 0, 0, 0]' : 0.107162}
{'[0, 2, 4, 6, 6, 2, 1, 1, 0, 7, 0, 12, 1, 0, 0, 0, 0, 0]' : 0.107643}
{'[0, 2, 4, 6, 6, 2, 1, 1, 0, 7, 0, 12, 1, 0, 0, 0, 0, 0]' : 0.107103}
{'[0, 2, 4, 6, 6, 2, 1, 1, 0, 7, 0, 12, 1, 0, 0, 0, 0, 0]' : 0.107142}
{'[0, 2, 4, 6, 6, 2, 1, 1, 0, 7, 0, 12, 1, 0, 0, 0, 0, 0]' : 0.107096}
{'[0, 2, 4, 6, 6, 2, 1, 1, 0, 7, 0, 12, 1, 0, 0, 0, 0, 0]' : 0.107013}
{'[0, 2, 4, 6, 6, 2, 1, 1, 0, 7, 0, 12, 1, 0, 0, 0, 0, 0]' : 0.107154}
{'[0, 2, 4, 6, 6, 2, 1, 1, 0, 7, 0, 12, 1, 0, 0, 0, 0, 0]' : 0.107018}
{'[0, 2, 4, 6, 6, 2, 1, 1, 0, 7, 0, 12, 1, 0, 0, 0, 0, 0]' : 0.107142}
{'[0, 2, 4, 6, 6, 2, 1, 1, 0, 7, 0, 12, 1, 0, 0, 0, 0, 0]' : 0.107128}
{'[0, 2, 4, 6, 6, 2, 1, 1, 0, 7, 0, 12, 1, 0, 0, 0, 0, 0]' : 0.107346}
{'[0, 2, 4, 6, 6, 2, 1, 1, 0, 7, 0, 12, 1, 0, 0, 0, 0, 0]' : 0.107365}
{'[0, 2, 4, 6, 6, 2, 1, 1, 0, 7, 0, 12, 1, 0, 0, 0, 0, 0]' : 0.106997}
{'[0, 2, 4, 6, 6, 2, 1, 1, 0, 7, 0, 12, 1, 0, 0, 0, 0, 0]' : 0.107191}
{'[0, 2, 4, 6, 6, 2, 1, 1, 0, 7, 0, 12, 1, 0, 0, 0, 0, 0]' : 0.107029}
{'[0, 2, 4, 6, 6, 2, 1, 1, 0, 7, 0, 12, 1, 0, 0, 0, 0, 0]' : 0.107331}
{'[0, 2, 4, 6, 6, 2, 1, 1, 0, 7, 0, 12, 1, 0, 0, 0, 0, 0]' : 0.10703}
{'[0, 2, 4, 6, 6, 2, 1, 1, 0, 7, 0, 12, 1, 0, 0, 0, 0, 0]' : 0.10718}
{'[0, 2, 4, 6, 6, 2, 1, 1, 0, 7, 0, 12, 1, 0, 0, 0, 0, 0]' : 0.107557}
{'[0, 2, 4, 6, 6, 2, 1, 1, 0, 7, 0, 12, 1, 0, 0, 0, 0, 0]' : 0.107157}

out:
 ["{'[0, 2, 4, 6, 6, 2, 1, 1, 0, 7, 0, 12, 1, 0, 0, 0, 0, 0]' : 0.12571}", "{'[0, 2, 4, 6, 6, 2, 1, 1, 0, 7, 0, 12, 1, 0, 0, 0, 0, 0]' : 0.125605}", "{'[0, 2, 4, 6, 6, 2, 1, 1, 0, 7, 0, 12, 1, 0, 0, 0, 0, 0]' : 0.1254}", "{'[0, 2, 4, 6, 6, 2, 1, 1, 0, 7, 0, 12, 1, 0, 0, 0, 0, 0]' : 0.125541}", "{'[0, 2, 4, 6, 6, 2, 1, 1, 0, 7, 0, 12, 1, 0, 0, 0, 0, 0]' : 0.113904}", "{'[0, 2, 4, 6, 6, 2, 1, 1, 0, 7, 0, 12, 1, 0, 0, 0, 0, 0]' : 0.107138}", "{'[0, 2, 4, 6, 6, 2, 1, 1, 0, 7, 0, 12, 1, 0, 0, 0, 0, 0]' : 0.107026}", "{'[0, 2, 4, 6, 6, 2, 1, 1, 0, 7, 0, 12, 1, 0, 0, 0, 0, 0]' : 0.10705}", "{'[0, 2, 4, 6, 6, 2, 1, 1, 0, 7, 0, 12, 1, 0, 0, 0, 0, 0]' : 0.107162}", "{'[0, 2, 4, 6, 6, 2, 1, 1, 0, 7, 0, 12, 1, 0, 0, 0, 0, 0]' : 0.107243}", "{'[0, 2, 4, 6, 6, 2, 1, 1, 0, 7, 0, 12, 1, 0, 0, 0, 0, 0]' : 0.107162}", "{'[0, 2, 4, 6, 6, 2, 1, 1, 0, 7, 0, 12, 1, 0, 0, 0, 0, 0]' : 0.107643}", "{'[0, 2, 4, 6, 6, 2, 1, 1, 0, 7, 0, 12, 1, 0, 0, 0, 0, 0]' : 0.107103}", "{'[0, 2, 4, 6, 6, 2, 1, 1, 0, 7, 0, 12, 1, 0, 0, 0, 0, 0]' : 0.107142}", "{'[0, 2, 4, 6, 6, 2, 1, 1, 0, 7, 0, 12, 1, 0, 0, 0, 0, 0]' : 0.107096}", "{'[0, 2, 4, 6, 6, 2, 1, 1, 0, 7, 0, 12, 1, 0, 0, 0, 0, 0]' : 0.107013}", "{'[0, 2, 4, 6, 6, 2, 1, 1, 0, 7, 0, 12, 1, 0, 0, 0, 0, 0]' : 0.107154}", "{'[0, 2, 4, 6, 6, 2, 1, 1, 0, 7, 0, 12, 1, 0, 0, 0, 0, 0]' : 0.107018}", "{'[0, 2, 4, 6, 6, 2, 1, 1, 0, 7, 0, 12, 1, 0, 0, 0, 0, 0]' : 0.107142}", "{'[0, 2, 4, 6, 6, 2, 1, 1, 0, 7, 0, 12, 1, 0, 0, 0, 0, 0]' : 0.107128}", "{'[0, 2, 4, 6, 6, 2, 1, 1, 0, 7, 0, 12, 1, 0, 0, 0, 0, 0]' : 0.107346}", "{'[0, 2, 4, 6, 6, 2, 1, 1, 0, 7, 0, 12, 1, 0, 0, 0, 0, 0]' : 0.107365}", "{'[0, 2, 4, 6, 6, 2, 1, 1, 0, 7, 0, 12, 1, 0, 0, 0, 0, 0]' : 0.106997}", "{'[0, 2, 4, 6, 6, 2, 1, 1, 0, 7, 0, 12, 1, 0, 0, 0, 0, 0]' : 0.107191}", "{'[0, 2, 4, 6, 6, 2, 1, 1, 0, 7, 0, 12, 1, 0, 0, 0, 0, 0]' : 0.107029}", "{'[0, 2, 4, 6, 6, 2, 1, 1, 0, 7, 0, 12, 1, 0, 0, 0, 0, 0]' : 0.107331}", "{'[0, 2, 4, 6, 6, 2, 1, 1, 0, 7, 0, 12, 1, 0, 0, 0, 0, 0]' : 0.10703}", "{'[0, 2, 4, 6, 6, 2, 1, 1, 0, 7, 0, 12, 1, 0, 0, 0, 0, 0]' : 0.10718}", "{'[0, 2, 4, 6, 6, 2, 1, 1, 0, 7, 0, 12, 1, 0, 0, 0, 0, 0]' : 0.107557}", "{'[0, 2, 4, 6, 6, 2, 1, 1, 0, 7, 0, 12, 1, 0, 0, 0, 0, 0]' : 0.107157}"]
returning from 'run': {'[0, 2, 4, 6, 6, 2, 1, 1, 0, 7, 0, 12, 1, 0, 0, 0, 0, 0]': ([0.12571, 0.125605, 0.1254, 0.125541, 0.113904, 0.107138, 0.107026, 0.10705, 0.107162, 0.107243, 0.107162, 0.107643, 0.107103, 0.107142, 0.107096, 0.107013, 0.107154, 0.107018, 0.107142, 0.107128, 0.107346, 0.107365, 0.106997, 0.107191, 0.107029, 0.107331, 0.10703, 0.10718, 0.107557, 0.107157], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 4, 6, 6, 2, 1, 1, 0, 7, 0, 12, 1, 0, 0, 0, 0, 0]': ([0.12571, 0.125605, 0.1254, 0.125541, 0.113904, 0.107138, 0.107026, 0.10705, 0.107162, 0.107243, 0.107162, 0.107643, 0.107103, 0.107142, 0.107096, 0.107013, 0.107154, 0.107018, 0.107142, 0.107128, 0.107346, 0.107365, 0.106997, 0.107191, 0.107029, 0.107331, 0.10703, 0.10718, 0.107557, 0.107157], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = kkk
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	4
        Additions: 		1601
        Multiplications: 	726
        Divisions: 		0
        Logical: 		0
        Reads: 			3051
        Writes: 		498
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest16.exe __orio_perftest16.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest16.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest16.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest16.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest16.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = jjj
Code stats:
        Number of loops: 	132
        Max loop nest depth: 	5
        Additions: 		2592
        Multiplications: 	756
        Divisions: 		0
        Logical: 		0
        Reads: 			5604
        Writes: 		1194
        Comparisons:		132
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest17.exe __orio_perftest17.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest17.exe  
Program Test Output: 
{'[3, 4, 6, 0, 2, 5, 1, 1, 0, 20, 0, 4, 2, 0, 0, 1, 1, 1]' : 0.141871}
{'[3, 4, 6, 0, 2, 5, 1, 1, 0, 20, 0, 4, 2, 0, 0, 1, 1, 1]' : 0.142231}
{'[3, 4, 6, 0, 2, 5, 1, 1, 0, 20, 0, 4, 2, 0, 0, 1, 1, 1]' : 0.142086}
{'[3, 4, 6, 0, 2, 5, 1, 1, 0, 20, 0, 4, 2, 0, 0, 1, 1, 1]' : 0.142304}
{'[3, 4, 6, 0, 2, 5, 1, 1, 0, 20, 0, 4, 2, 0, 0, 1, 1, 1]' : 0.143444}
{'[3, 4, 6, 0, 2, 5, 1, 1, 0, 20, 0, 4, 2, 0, 0, 1, 1, 1]' : 0.142546}
{'[3, 4, 6, 0, 2, 5, 1, 1, 0, 20, 0, 4, 2, 0, 0, 1, 1, 1]' : 0.141994}
{'[3, 4, 6, 0, 2, 5, 1, 1, 0, 20, 0, 4, 2, 0, 0, 1, 1, 1]' : 0.142205}
{'[3, 4, 6, 0, 2, 5, 1, 1, 0, 20, 0, 4, 2, 0, 0, 1, 1, 1]' : 0.141963}
{'[3, 4, 6, 0, 2, 5, 1, 1, 0, 20, 0, 4, 2, 0, 0, 1, 1, 1]' : 0.141878}
{'[3, 4, 6, 0, 2, 5, 1, 1, 0, 20, 0, 4, 2, 0, 0, 1, 1, 1]' : 0.142263}
{'[3, 4, 6, 0, 2, 5, 1, 1, 0, 20, 0, 4, 2, 0, 0, 1, 1, 1]' : 0.142153}
{'[3, 4, 6, 0, 2, 5, 1, 1, 0, 20, 0, 4, 2, 0, 0, 1, 1, 1]' : 0.142347}
{'[3, 4, 6, 0, 2, 5, 1, 1, 0, 20, 0, 4, 2, 0, 0, 1, 1, 1]' : 0.142774}
{'[3, 4, 6, 0, 2, 5, 1, 1, 0, 20, 0, 4, 2, 0, 0, 1, 1, 1]' : 0.142176}
{'[3, 4, 6, 0, 2, 5, 1, 1, 0, 20, 0, 4, 2, 0, 0, 1, 1, 1]' : 0.142201}
{'[3, 4, 6, 0, 2, 5, 1, 1, 0, 20, 0, 4, 2, 0, 0, 1, 1, 1]' : 0.142636}
{'[3, 4, 6, 0, 2, 5, 1, 1, 0, 20, 0, 4, 2, 0, 0, 1, 1, 1]' : 0.142622}
{'[3, 4, 6, 0, 2, 5, 1, 1, 0, 20, 0, 4, 2, 0, 0, 1, 1, 1]' : 0.14282}
{'[3, 4, 6, 0, 2, 5, 1, 1, 0, 20, 0, 4, 2, 0, 0, 1, 1, 1]' : 0.142275}
{'[3, 4, 6, 0, 2, 5, 1, 1, 0, 20, 0, 4, 2, 0, 0, 1, 1, 1]' : 0.14276}
{'[3, 4, 6, 0, 2, 5, 1, 1, 0, 20, 0, 4, 2, 0, 0, 1, 1, 1]' : 0.14218}
{'[3, 4, 6, 0, 2, 5, 1, 1, 0, 20, 0, 4, 2, 0, 0, 1, 1, 1]' : 0.141868}
{'[3, 4, 6, 0, 2, 5, 1, 1, 0, 20, 0, 4, 2, 0, 0, 1, 1, 1]' : 0.141923}
{'[3, 4, 6, 0, 2, 5, 1, 1, 0, 20, 0, 4, 2, 0, 0, 1, 1, 1]' : 0.142492}
{'[3, 4, 6, 0, 2, 5, 1, 1, 0, 20, 0, 4, 2, 0, 0, 1, 1, 1]' : 0.142095}
{'[3, 4, 6, 0, 2, 5, 1, 1, 0, 20, 0, 4, 2, 0, 0, 1, 1, 1]' : 0.142332}
{'[3, 4, 6, 0, 2, 5, 1, 1, 0, 20, 0, 4, 2, 0, 0, 1, 1, 1]' : 0.143257}
{'[3, 4, 6, 0, 2, 5, 1, 1, 0, 20, 0, 4, 2, 0, 0, 1, 1, 1]' : 0.142466}
{'[3, 4, 6, 0, 2, 5, 1, 1, 0, 20, 0, 4, 2, 0, 0, 1, 1, 1]' : 0.142166}

out:
 ["{'[3, 4, 6, 0, 2, 5, 1, 1, 0, 20, 0, 4, 2, 0, 0, 1, 1, 1]' : 0.141871}", "{'[3, 4, 6, 0, 2, 5, 1, 1, 0, 20, 0, 4, 2, 0, 0, 1, 1, 1]' : 0.142231}", "{'[3, 4, 6, 0, 2, 5, 1, 1, 0, 20, 0, 4, 2, 0, 0, 1, 1, 1]' : 0.142086}", "{'[3, 4, 6, 0, 2, 5, 1, 1, 0, 20, 0, 4, 2, 0, 0, 1, 1, 1]' : 0.142304}", "{'[3, 4, 6, 0, 2, 5, 1, 1, 0, 20, 0, 4, 2, 0, 0, 1, 1, 1]' : 0.143444}", "{'[3, 4, 6, 0, 2, 5, 1, 1, 0, 20, 0, 4, 2, 0, 0, 1, 1, 1]' : 0.142546}", "{'[3, 4, 6, 0, 2, 5, 1, 1, 0, 20, 0, 4, 2, 0, 0, 1, 1, 1]' : 0.141994}", "{'[3, 4, 6, 0, 2, 5, 1, 1, 0, 20, 0, 4, 2, 0, 0, 1, 1, 1]' : 0.142205}", "{'[3, 4, 6, 0, 2, 5, 1, 1, 0, 20, 0, 4, 2, 0, 0, 1, 1, 1]' : 0.141963}", "{'[3, 4, 6, 0, 2, 5, 1, 1, 0, 20, 0, 4, 2, 0, 0, 1, 1, 1]' : 0.141878}", "{'[3, 4, 6, 0, 2, 5, 1, 1, 0, 20, 0, 4, 2, 0, 0, 1, 1, 1]' : 0.142263}", "{'[3, 4, 6, 0, 2, 5, 1, 1, 0, 20, 0, 4, 2, 0, 0, 1, 1, 1]' : 0.142153}", "{'[3, 4, 6, 0, 2, 5, 1, 1, 0, 20, 0, 4, 2, 0, 0, 1, 1, 1]' : 0.142347}", "{'[3, 4, 6, 0, 2, 5, 1, 1, 0, 20, 0, 4, 2, 0, 0, 1, 1, 1]' : 0.142774}", "{'[3, 4, 6, 0, 2, 5, 1, 1, 0, 20, 0, 4, 2, 0, 0, 1, 1, 1]' : 0.142176}", "{'[3, 4, 6, 0, 2, 5, 1, 1, 0, 20, 0, 4, 2, 0, 0, 1, 1, 1]' : 0.142201}", "{'[3, 4, 6, 0, 2, 5, 1, 1, 0, 20, 0, 4, 2, 0, 0, 1, 1, 1]' : 0.142636}", "{'[3, 4, 6, 0, 2, 5, 1, 1, 0, 20, 0, 4, 2, 0, 0, 1, 1, 1]' : 0.142622}", "{'[3, 4, 6, 0, 2, 5, 1, 1, 0, 20, 0, 4, 2, 0, 0, 1, 1, 1]' : 0.14282}", "{'[3, 4, 6, 0, 2, 5, 1, 1, 0, 20, 0, 4, 2, 0, 0, 1, 1, 1]' : 0.142275}", "{'[3, 4, 6, 0, 2, 5, 1, 1, 0, 20, 0, 4, 2, 0, 0, 1, 1, 1]' : 0.14276}", "{'[3, 4, 6, 0, 2, 5, 1, 1, 0, 20, 0, 4, 2, 0, 0, 1, 1, 1]' : 0.14218}", "{'[3, 4, 6, 0, 2, 5, 1, 1, 0, 20, 0, 4, 2, 0, 0, 1, 1, 1]' : 0.141868}", "{'[3, 4, 6, 0, 2, 5, 1, 1, 0, 20, 0, 4, 2, 0, 0, 1, 1, 1]' : 0.141923}", "{'[3, 4, 6, 0, 2, 5, 1, 1, 0, 20, 0, 4, 2, 0, 0, 1, 1, 1]' : 0.142492}", "{'[3, 4, 6, 0, 2, 5, 1, 1, 0, 20, 0, 4, 2, 0, 0, 1, 1, 1]' : 0.142095}", "{'[3, 4, 6, 0, 2, 5, 1, 1, 0, 20, 0, 4, 2, 0, 0, 1, 1, 1]' : 0.142332}", "{'[3, 4, 6, 0, 2, 5, 1, 1, 0, 20, 0, 4, 2, 0, 0, 1, 1, 1]' : 0.143257}", "{'[3, 4, 6, 0, 2, 5, 1, 1, 0, 20, 0, 4, 2, 0, 0, 1, 1, 1]' : 0.142466}", "{'[3, 4, 6, 0, 2, 5, 1, 1, 0, 20, 0, 4, 2, 0, 0, 1, 1, 1]' : 0.142166}"]
returning from 'run': {'[3, 4, 6, 0, 2, 5, 1, 1, 0, 20, 0, 4, 2, 0, 0, 1, 1, 1]': ([0.141871, 0.142231, 0.142086, 0.142304, 0.143444, 0.142546, 0.141994, 0.142205, 0.141963, 0.141878, 0.142263, 0.142153, 0.142347, 0.142774, 0.142176, 0.142201, 0.142636, 0.142622, 0.14282, 0.142275, 0.14276, 0.14218, 0.141868, 0.141923, 0.142492, 0.142095, 0.142332, 0.143257, 0.142466, 0.142166], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 4, 6, 0, 2, 5, 1, 1, 0, 20, 0, 4, 2, 0, 0, 1, 1, 1]': ([0.141871, 0.142231, 0.142086, 0.142304, 0.143444, 0.142546, 0.141994, 0.142205, 0.141963, 0.141878, 0.142263, 0.142153, 0.142347, 0.142774, 0.142176, 0.142201, 0.142636, 0.142622, 0.14282, 0.142275, 0.14276, 0.14218, 0.141868, 0.141923, 0.142492, 0.142095, 0.142332, 0.143257, 0.142466, 0.142166], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = kkk
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		1727
        Multiplications: 	812
        Divisions: 		0
        Logical: 		0
        Reads: 			3395
        Writes: 		599
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest18.exe __orio_perftest18.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest18.exe  
Program Test Output: 
{'[5, 0, 3, 0, 0, 1, 0, 0, 10, 12, 0, 26, 0, 0, 0, 1, 0, 0]' : 0.119859}
{'[5, 0, 3, 0, 0, 1, 0, 0, 10, 12, 0, 26, 0, 0, 0, 1, 0, 0]' : 0.11936}
{'[5, 0, 3, 0, 0, 1, 0, 0, 10, 12, 0, 26, 0, 0, 0, 1, 0, 0]' : 0.119206}
{'[5, 0, 3, 0, 0, 1, 0, 0, 10, 12, 0, 26, 0, 0, 0, 1, 0, 0]' : 0.119261}
{'[5, 0, 3, 0, 0, 1, 0, 0, 10, 12, 0, 26, 0, 0, 0, 1, 0, 0]' : 0.119528}
{'[5, 0, 3, 0, 0, 1, 0, 0, 10, 12, 0, 26, 0, 0, 0, 1, 0, 0]' : 0.119249}
{'[5, 0, 3, 0, 0, 1, 0, 0, 10, 12, 0, 26, 0, 0, 0, 1, 0, 0]' : 0.119209}
{'[5, 0, 3, 0, 0, 1, 0, 0, 10, 12, 0, 26, 0, 0, 0, 1, 0, 0]' : 0.119629}
{'[5, 0, 3, 0, 0, 1, 0, 0, 10, 12, 0, 26, 0, 0, 0, 1, 0, 0]' : 0.119581}
{'[5, 0, 3, 0, 0, 1, 0, 0, 10, 12, 0, 26, 0, 0, 0, 1, 0, 0]' : 0.119557}
{'[5, 0, 3, 0, 0, 1, 0, 0, 10, 12, 0, 26, 0, 0, 0, 1, 0, 0]' : 0.119304}
{'[5, 0, 3, 0, 0, 1, 0, 0, 10, 12, 0, 26, 0, 0, 0, 1, 0, 0]' : 0.119202}
{'[5, 0, 3, 0, 0, 1, 0, 0, 10, 12, 0, 26, 0, 0, 0, 1, 0, 0]' : 0.119191}
{'[5, 0, 3, 0, 0, 1, 0, 0, 10, 12, 0, 26, 0, 0, 0, 1, 0, 0]' : 0.119128}
{'[5, 0, 3, 0, 0, 1, 0, 0, 10, 12, 0, 26, 0, 0, 0, 1, 0, 0]' : 0.119219}
{'[5, 0, 3, 0, 0, 1, 0, 0, 10, 12, 0, 26, 0, 0, 0, 1, 0, 0]' : 0.119185}
{'[5, 0, 3, 0, 0, 1, 0, 0, 10, 12, 0, 26, 0, 0, 0, 1, 0, 0]' : 0.119132}
{'[5, 0, 3, 0, 0, 1, 0, 0, 10, 12, 0, 26, 0, 0, 0, 1, 0, 0]' : 0.119763}
{'[5, 0, 3, 0, 0, 1, 0, 0, 10, 12, 0, 26, 0, 0, 0, 1, 0, 0]' : 0.119316}
{'[5, 0, 3, 0, 0, 1, 0, 0, 10, 12, 0, 26, 0, 0, 0, 1, 0, 0]' : 0.119159}
{'[5, 0, 3, 0, 0, 1, 0, 0, 10, 12, 0, 26, 0, 0, 0, 1, 0, 0]' : 0.119433}
{'[5, 0, 3, 0, 0, 1, 0, 0, 10, 12, 0, 26, 0, 0, 0, 1, 0, 0]' : 0.119196}
{'[5, 0, 3, 0, 0, 1, 0, 0, 10, 12, 0, 26, 0, 0, 0, 1, 0, 0]' : 0.119136}
{'[5, 0, 3, 0, 0, 1, 0, 0, 10, 12, 0, 26, 0, 0, 0, 1, 0, 0]' : 0.119056}
{'[5, 0, 3, 0, 0, 1, 0, 0, 10, 12, 0, 26, 0, 0, 0, 1, 0, 0]' : 0.11974}
{'[5, 0, 3, 0, 0, 1, 0, 0, 10, 12, 0, 26, 0, 0, 0, 1, 0, 0]' : 0.119266}
{'[5, 0, 3, 0, 0, 1, 0, 0, 10, 12, 0, 26, 0, 0, 0, 1, 0, 0]' : 0.119341}
{'[5, 0, 3, 0, 0, 1, 0, 0, 10, 12, 0, 26, 0, 0, 0, 1, 0, 0]' : 0.119659}
{'[5, 0, 3, 0, 0, 1, 0, 0, 10, 12, 0, 26, 0, 0, 0, 1, 0, 0]' : 0.119208}
{'[5, 0, 3, 0, 0, 1, 0, 0, 10, 12, 0, 26, 0, 0, 0, 1, 0, 0]' : 0.119311}

out:
 ["{'[5, 0, 3, 0, 0, 1, 0, 0, 10, 12, 0, 26, 0, 0, 0, 1, 0, 0]' : 0.119859}", "{'[5, 0, 3, 0, 0, 1, 0, 0, 10, 12, 0, 26, 0, 0, 0, 1, 0, 0]' : 0.11936}", "{'[5, 0, 3, 0, 0, 1, 0, 0, 10, 12, 0, 26, 0, 0, 0, 1, 0, 0]' : 0.119206}", "{'[5, 0, 3, 0, 0, 1, 0, 0, 10, 12, 0, 26, 0, 0, 0, 1, 0, 0]' : 0.119261}", "{'[5, 0, 3, 0, 0, 1, 0, 0, 10, 12, 0, 26, 0, 0, 0, 1, 0, 0]' : 0.119528}", "{'[5, 0, 3, 0, 0, 1, 0, 0, 10, 12, 0, 26, 0, 0, 0, 1, 0, 0]' : 0.119249}", "{'[5, 0, 3, 0, 0, 1, 0, 0, 10, 12, 0, 26, 0, 0, 0, 1, 0, 0]' : 0.119209}", "{'[5, 0, 3, 0, 0, 1, 0, 0, 10, 12, 0, 26, 0, 0, 0, 1, 0, 0]' : 0.119629}", "{'[5, 0, 3, 0, 0, 1, 0, 0, 10, 12, 0, 26, 0, 0, 0, 1, 0, 0]' : 0.119581}", "{'[5, 0, 3, 0, 0, 1, 0, 0, 10, 12, 0, 26, 0, 0, 0, 1, 0, 0]' : 0.119557}", "{'[5, 0, 3, 0, 0, 1, 0, 0, 10, 12, 0, 26, 0, 0, 0, 1, 0, 0]' : 0.119304}", "{'[5, 0, 3, 0, 0, 1, 0, 0, 10, 12, 0, 26, 0, 0, 0, 1, 0, 0]' : 0.119202}", "{'[5, 0, 3, 0, 0, 1, 0, 0, 10, 12, 0, 26, 0, 0, 0, 1, 0, 0]' : 0.119191}", "{'[5, 0, 3, 0, 0, 1, 0, 0, 10, 12, 0, 26, 0, 0, 0, 1, 0, 0]' : 0.119128}", "{'[5, 0, 3, 0, 0, 1, 0, 0, 10, 12, 0, 26, 0, 0, 0, 1, 0, 0]' : 0.119219}", "{'[5, 0, 3, 0, 0, 1, 0, 0, 10, 12, 0, 26, 0, 0, 0, 1, 0, 0]' : 0.119185}", "{'[5, 0, 3, 0, 0, 1, 0, 0, 10, 12, 0, 26, 0, 0, 0, 1, 0, 0]' : 0.119132}", "{'[5, 0, 3, 0, 0, 1, 0, 0, 10, 12, 0, 26, 0, 0, 0, 1, 0, 0]' : 0.119763}", "{'[5, 0, 3, 0, 0, 1, 0, 0, 10, 12, 0, 26, 0, 0, 0, 1, 0, 0]' : 0.119316}", "{'[5, 0, 3, 0, 0, 1, 0, 0, 10, 12, 0, 26, 0, 0, 0, 1, 0, 0]' : 0.119159}", "{'[5, 0, 3, 0, 0, 1, 0, 0, 10, 12, 0, 26, 0, 0, 0, 1, 0, 0]' : 0.119433}", "{'[5, 0, 3, 0, 0, 1, 0, 0, 10, 12, 0, 26, 0, 0, 0, 1, 0, 0]' : 0.119196}", "{'[5, 0, 3, 0, 0, 1, 0, 0, 10, 12, 0, 26, 0, 0, 0, 1, 0, 0]' : 0.119136}", "{'[5, 0, 3, 0, 0, 1, 0, 0, 10, 12, 0, 26, 0, 0, 0, 1, 0, 0]' : 0.119056}", "{'[5, 0, 3, 0, 0, 1, 0, 0, 10, 12, 0, 26, 0, 0, 0, 1, 0, 0]' : 0.11974}", "{'[5, 0, 3, 0, 0, 1, 0, 0, 10, 12, 0, 26, 0, 0, 0, 1, 0, 0]' : 0.119266}", "{'[5, 0, 3, 0, 0, 1, 0, 0, 10, 12, 0, 26, 0, 0, 0, 1, 0, 0]' : 0.119341}", "{'[5, 0, 3, 0, 0, 1, 0, 0, 10, 12, 0, 26, 0, 0, 0, 1, 0, 0]' : 0.119659}", "{'[5, 0, 3, 0, 0, 1, 0, 0, 10, 12, 0, 26, 0, 0, 0, 1, 0, 0]' : 0.119208}", "{'[5, 0, 3, 0, 0, 1, 0, 0, 10, 12, 0, 26, 0, 0, 0, 1, 0, 0]' : 0.119311}"]
returning from 'run': {'[5, 0, 3, 0, 0, 1, 0, 0, 10, 12, 0, 26, 0, 0, 0, 1, 0, 0]': ([0.119859, 0.11936, 0.119206, 0.119261, 0.119528, 0.119249, 0.119209, 0.119629, 0.119581, 0.119557, 0.119304, 0.119202, 0.119191, 0.119128, 0.119219, 0.119185, 0.119132, 0.119763, 0.119316, 0.119159, 0.119433, 0.119196, 0.119136, 0.119056, 0.11974, 0.119266, 0.119341, 0.119659, 0.119208, 0.119311], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 0, 3, 0, 0, 1, 0, 0, 10, 12, 0, 26, 0, 0, 0, 1, 0, 0]': ([0.119859, 0.11936, 0.119206, 0.119261, 0.119528, 0.119249, 0.119209, 0.119629, 0.119581, 0.119557, 0.119304, 0.119202, 0.119191, 0.119128, 0.119219, 0.119185, 0.119132, 0.119763, 0.119316, 0.119159, 0.119433, 0.119196, 0.119136, 0.119056, 0.11974, 0.119266, 0.119341, 0.119659, 0.119208, 0.119311], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		140
        Multiplications: 	34
        Divisions: 		0
        Logical: 		0
        Reads: 			314
        Writes: 		61
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest19.exe __orio_perftest19.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest19.exe  
Program Test Output: 
{'[1, 2, 6, 4, 1, 6, 0, 1, 11, 0, 0, 14, 0, 1, 1, 0, 0, 0]' : 0.293141}
{'[1, 2, 6, 4, 1, 6, 0, 1, 11, 0, 0, 14, 0, 1, 1, 0, 0, 0]' : 0.293055}
{'[1, 2, 6, 4, 1, 6, 0, 1, 11, 0, 0, 14, 0, 1, 1, 0, 0, 0]' : 0.257796}
{'[1, 2, 6, 4, 1, 6, 0, 1, 11, 0, 0, 14, 0, 1, 1, 0, 0, 0]' : 0.245841}
{'[1, 2, 6, 4, 1, 6, 0, 1, 11, 0, 0, 14, 0, 1, 1, 0, 0, 0]' : 0.24584}
{'[1, 2, 6, 4, 1, 6, 0, 1, 11, 0, 0, 14, 0, 1, 1, 0, 0, 0]' : 0.245963}
{'[1, 2, 6, 4, 1, 6, 0, 1, 11, 0, 0, 14, 0, 1, 1, 0, 0, 0]' : 0.246108}
{'[1, 2, 6, 4, 1, 6, 0, 1, 11, 0, 0, 14, 0, 1, 1, 0, 0, 0]' : 0.245871}
{'[1, 2, 6, 4, 1, 6, 0, 1, 11, 0, 0, 14, 0, 1, 1, 0, 0, 0]' : 0.246077}
{'[1, 2, 6, 4, 1, 6, 0, 1, 11, 0, 0, 14, 0, 1, 1, 0, 0, 0]' : 0.246139}
{'[1, 2, 6, 4, 1, 6, 0, 1, 11, 0, 0, 14, 0, 1, 1, 0, 0, 0]' : 0.246075}
{'[1, 2, 6, 4, 1, 6, 0, 1, 11, 0, 0, 14, 0, 1, 1, 0, 0, 0]' : 0.245891}
{'[1, 2, 6, 4, 1, 6, 0, 1, 11, 0, 0, 14, 0, 1, 1, 0, 0, 0]' : 0.245921}
{'[1, 2, 6, 4, 1, 6, 0, 1, 11, 0, 0, 14, 0, 1, 1, 0, 0, 0]' : 0.245977}
{'[1, 2, 6, 4, 1, 6, 0, 1, 11, 0, 0, 14, 0, 1, 1, 0, 0, 0]' : 0.246032}
{'[1, 2, 6, 4, 1, 6, 0, 1, 11, 0, 0, 14, 0, 1, 1, 0, 0, 0]' : 0.246435}
{'[1, 2, 6, 4, 1, 6, 0, 1, 11, 0, 0, 14, 0, 1, 1, 0, 0, 0]' : 0.246336}
{'[1, 2, 6, 4, 1, 6, 0, 1, 11, 0, 0, 14, 0, 1, 1, 0, 0, 0]' : 0.245886}
{'[1, 2, 6, 4, 1, 6, 0, 1, 11, 0, 0, 14, 0, 1, 1, 0, 0, 0]' : 0.245876}
{'[1, 2, 6, 4, 1, 6, 0, 1, 11, 0, 0, 14, 0, 1, 1, 0, 0, 0]' : 0.245891}
{'[1, 2, 6, 4, 1, 6, 0, 1, 11, 0, 0, 14, 0, 1, 1, 0, 0, 0]' : 0.246026}
{'[1, 2, 6, 4, 1, 6, 0, 1, 11, 0, 0, 14, 0, 1, 1, 0, 0, 0]' : 0.245914}
{'[1, 2, 6, 4, 1, 6, 0, 1, 11, 0, 0, 14, 0, 1, 1, 0, 0, 0]' : 0.245936}
{'[1, 2, 6, 4, 1, 6, 0, 1, 11, 0, 0, 14, 0, 1, 1, 0, 0, 0]' : 0.245859}
{'[1, 2, 6, 4, 1, 6, 0, 1, 11, 0, 0, 14, 0, 1, 1, 0, 0, 0]' : 0.246126}
{'[1, 2, 6, 4, 1, 6, 0, 1, 11, 0, 0, 14, 0, 1, 1, 0, 0, 0]' : 0.24592}
{'[1, 2, 6, 4, 1, 6, 0, 1, 11, 0, 0, 14, 0, 1, 1, 0, 0, 0]' : 0.246325}
{'[1, 2, 6, 4, 1, 6, 0, 1, 11, 0, 0, 14, 0, 1, 1, 0, 0, 0]' : 0.245814}
{'[1, 2, 6, 4, 1, 6, 0, 1, 11, 0, 0, 14, 0, 1, 1, 0, 0, 0]' : 0.24612}
{'[1, 2, 6, 4, 1, 6, 0, 1, 11, 0, 0, 14, 0, 1, 1, 0, 0, 0]' : 0.245946}

out:
 ["{'[1, 2, 6, 4, 1, 6, 0, 1, 11, 0, 0, 14, 0, 1, 1, 0, 0, 0]' : 0.293141}", "{'[1, 2, 6, 4, 1, 6, 0, 1, 11, 0, 0, 14, 0, 1, 1, 0, 0, 0]' : 0.293055}", "{'[1, 2, 6, 4, 1, 6, 0, 1, 11, 0, 0, 14, 0, 1, 1, 0, 0, 0]' : 0.257796}", "{'[1, 2, 6, 4, 1, 6, 0, 1, 11, 0, 0, 14, 0, 1, 1, 0, 0, 0]' : 0.245841}", "{'[1, 2, 6, 4, 1, 6, 0, 1, 11, 0, 0, 14, 0, 1, 1, 0, 0, 0]' : 0.24584}", "{'[1, 2, 6, 4, 1, 6, 0, 1, 11, 0, 0, 14, 0, 1, 1, 0, 0, 0]' : 0.245963}", "{'[1, 2, 6, 4, 1, 6, 0, 1, 11, 0, 0, 14, 0, 1, 1, 0, 0, 0]' : 0.246108}", "{'[1, 2, 6, 4, 1, 6, 0, 1, 11, 0, 0, 14, 0, 1, 1, 0, 0, 0]' : 0.245871}", "{'[1, 2, 6, 4, 1, 6, 0, 1, 11, 0, 0, 14, 0, 1, 1, 0, 0, 0]' : 0.246077}", "{'[1, 2, 6, 4, 1, 6, 0, 1, 11, 0, 0, 14, 0, 1, 1, 0, 0, 0]' : 0.246139}", "{'[1, 2, 6, 4, 1, 6, 0, 1, 11, 0, 0, 14, 0, 1, 1, 0, 0, 0]' : 0.246075}", "{'[1, 2, 6, 4, 1, 6, 0, 1, 11, 0, 0, 14, 0, 1, 1, 0, 0, 0]' : 0.245891}", "{'[1, 2, 6, 4, 1, 6, 0, 1, 11, 0, 0, 14, 0, 1, 1, 0, 0, 0]' : 0.245921}", "{'[1, 2, 6, 4, 1, 6, 0, 1, 11, 0, 0, 14, 0, 1, 1, 0, 0, 0]' : 0.245977}", "{'[1, 2, 6, 4, 1, 6, 0, 1, 11, 0, 0, 14, 0, 1, 1, 0, 0, 0]' : 0.246032}", "{'[1, 2, 6, 4, 1, 6, 0, 1, 11, 0, 0, 14, 0, 1, 1, 0, 0, 0]' : 0.246435}", "{'[1, 2, 6, 4, 1, 6, 0, 1, 11, 0, 0, 14, 0, 1, 1, 0, 0, 0]' : 0.246336}", "{'[1, 2, 6, 4, 1, 6, 0, 1, 11, 0, 0, 14, 0, 1, 1, 0, 0, 0]' : 0.245886}", "{'[1, 2, 6, 4, 1, 6, 0, 1, 11, 0, 0, 14, 0, 1, 1, 0, 0, 0]' : 0.245876}", "{'[1, 2, 6, 4, 1, 6, 0, 1, 11, 0, 0, 14, 0, 1, 1, 0, 0, 0]' : 0.245891}", "{'[1, 2, 6, 4, 1, 6, 0, 1, 11, 0, 0, 14, 0, 1, 1, 0, 0, 0]' : 0.246026}", "{'[1, 2, 6, 4, 1, 6, 0, 1, 11, 0, 0, 14, 0, 1, 1, 0, 0, 0]' : 0.245914}", "{'[1, 2, 6, 4, 1, 6, 0, 1, 11, 0, 0, 14, 0, 1, 1, 0, 0, 0]' : 0.245936}", "{'[1, 2, 6, 4, 1, 6, 0, 1, 11, 0, 0, 14, 0, 1, 1, 0, 0, 0]' : 0.245859}", "{'[1, 2, 6, 4, 1, 6, 0, 1, 11, 0, 0, 14, 0, 1, 1, 0, 0, 0]' : 0.246126}", "{'[1, 2, 6, 4, 1, 6, 0, 1, 11, 0, 0, 14, 0, 1, 1, 0, 0, 0]' : 0.24592}", "{'[1, 2, 6, 4, 1, 6, 0, 1, 11, 0, 0, 14, 0, 1, 1, 0, 0, 0]' : 0.246325}", "{'[1, 2, 6, 4, 1, 6, 0, 1, 11, 0, 0, 14, 0, 1, 1, 0, 0, 0]' : 0.245814}", "{'[1, 2, 6, 4, 1, 6, 0, 1, 11, 0, 0, 14, 0, 1, 1, 0, 0, 0]' : 0.24612}", "{'[1, 2, 6, 4, 1, 6, 0, 1, 11, 0, 0, 14, 0, 1, 1, 0, 0, 0]' : 0.245946}"]
returning from 'run': {'[1, 2, 6, 4, 1, 6, 0, 1, 11, 0, 0, 14, 0, 1, 1, 0, 0, 0]': ([0.293141, 0.293055, 0.257796, 0.245841, 0.24584, 0.245963, 0.246108, 0.245871, 0.246077, 0.246139, 0.246075, 0.245891, 0.245921, 0.245977, 0.246032, 0.246435, 0.246336, 0.245886, 0.245876, 0.245891, 0.246026, 0.245914, 0.245936, 0.245859, 0.246126, 0.24592, 0.246325, 0.245814, 0.24612, 0.245946], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 2, 6, 4, 1, 6, 0, 1, 11, 0, 0, 14, 0, 1, 1, 0, 0, 0]': ([0.293141, 0.293055, 0.257796, 0.245841, 0.24584, 0.245963, 0.246108, 0.245871, 0.246077, 0.246139, 0.246075, 0.245891, 0.245921, 0.245977, 0.246032, 0.246435, 0.246336, 0.245886, 0.245876, 0.245891, 0.246026, 0.245914, 0.245936, 0.245859, 0.246126, 0.24592, 0.246325, 0.245814, 0.24612, 0.245946], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = kkk
Code stats:
        Number of loops: 	76
        Max loop nest depth: 	6
        Additions: 		4015
        Multiplications: 	1856
        Divisions: 		0
        Logical: 		0
        Reads: 			7739
        Writes: 		1299
        Comparisons:		76
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest20.exe __orio_perftest20.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest20.exe  
Program Test Output: 
{'[1, 4, 3, 1, 6, 1, 0, 1, 26, 27, 29, 0, 0, 0, 0, 1, 1, 1]' : 0.267041}
{'[1, 4, 3, 1, 6, 1, 0, 1, 26, 27, 29, 0, 0, 0, 0, 1, 1, 1]' : 0.23504}
{'[1, 4, 3, 1, 6, 1, 0, 1, 26, 27, 29, 0, 0, 0, 0, 1, 1, 1]' : 0.230116}
{'[1, 4, 3, 1, 6, 1, 0, 1, 26, 27, 29, 0, 0, 0, 0, 1, 1, 1]' : 0.230169}
{'[1, 4, 3, 1, 6, 1, 0, 1, 26, 27, 29, 0, 0, 0, 0, 1, 1, 1]' : 0.230162}
{'[1, 4, 3, 1, 6, 1, 0, 1, 26, 27, 29, 0, 0, 0, 0, 1, 1, 1]' : 0.230131}
{'[1, 4, 3, 1, 6, 1, 0, 1, 26, 27, 29, 0, 0, 0, 0, 1, 1, 1]' : 0.227851}
{'[1, 4, 3, 1, 6, 1, 0, 1, 26, 27, 29, 0, 0, 0, 0, 1, 1, 1]' : 0.221921}
{'[1, 4, 3, 1, 6, 1, 0, 1, 26, 27, 29, 0, 0, 0, 0, 1, 1, 1]' : 0.222283}
{'[1, 4, 3, 1, 6, 1, 0, 1, 26, 27, 29, 0, 0, 0, 0, 1, 1, 1]' : 0.226926}
{'[1, 4, 3, 1, 6, 1, 0, 1, 26, 27, 29, 0, 0, 0, 0, 1, 1, 1]' : 0.230076}
{'[1, 4, 3, 1, 6, 1, 0, 1, 26, 27, 29, 0, 0, 0, 0, 1, 1, 1]' : 0.230071}
{'[1, 4, 3, 1, 6, 1, 0, 1, 26, 27, 29, 0, 0, 0, 0, 1, 1, 1]' : 0.230133}
{'[1, 4, 3, 1, 6, 1, 0, 1, 26, 27, 29, 0, 0, 0, 0, 1, 1, 1]' : 0.230012}
{'[1, 4, 3, 1, 6, 1, 0, 1, 26, 27, 29, 0, 0, 0, 0, 1, 1, 1]' : 0.230113}
{'[1, 4, 3, 1, 6, 1, 0, 1, 26, 27, 29, 0, 0, 0, 0, 1, 1, 1]' : 0.230079}
{'[1, 4, 3, 1, 6, 1, 0, 1, 26, 27, 29, 0, 0, 0, 0, 1, 1, 1]' : 0.230178}
{'[1, 4, 3, 1, 6, 1, 0, 1, 26, 27, 29, 0, 0, 0, 0, 1, 1, 1]' : 0.230392}
{'[1, 4, 3, 1, 6, 1, 0, 1, 26, 27, 29, 0, 0, 0, 0, 1, 1, 1]' : 0.217918}
{'[1, 4, 3, 1, 6, 1, 0, 1, 26, 27, 29, 0, 0, 0, 0, 1, 1, 1]' : 0.215722}
{'[1, 4, 3, 1, 6, 1, 0, 1, 26, 27, 29, 0, 0, 0, 0, 1, 1, 1]' : 0.223693}
{'[1, 4, 3, 1, 6, 1, 0, 1, 26, 27, 29, 0, 0, 0, 0, 1, 1, 1]' : 0.2302}
{'[1, 4, 3, 1, 6, 1, 0, 1, 26, 27, 29, 0, 0, 0, 0, 1, 1, 1]' : 0.230276}
{'[1, 4, 3, 1, 6, 1, 0, 1, 26, 27, 29, 0, 0, 0, 0, 1, 1, 1]' : 0.230182}
{'[1, 4, 3, 1, 6, 1, 0, 1, 26, 27, 29, 0, 0, 0, 0, 1, 1, 1]' : 0.226294}
{'[1, 4, 3, 1, 6, 1, 0, 1, 26, 27, 29, 0, 0, 0, 0, 1, 1, 1]' : 0.22261}
{'[1, 4, 3, 1, 6, 1, 0, 1, 26, 27, 29, 0, 0, 0, 0, 1, 1, 1]' : 0.22236}
{'[1, 4, 3, 1, 6, 1, 0, 1, 26, 27, 29, 0, 0, 0, 0, 1, 1, 1]' : 0.229897}
{'[1, 4, 3, 1, 6, 1, 0, 1, 26, 27, 29, 0, 0, 0, 0, 1, 1, 1]' : 0.230191}
{'[1, 4, 3, 1, 6, 1, 0, 1, 26, 27, 29, 0, 0, 0, 0, 1, 1, 1]' : 0.230254}

out:
 ["{'[1, 4, 3, 1, 6, 1, 0, 1, 26, 27, 29, 0, 0, 0, 0, 1, 1, 1]' : 0.267041}", "{'[1, 4, 3, 1, 6, 1, 0, 1, 26, 27, 29, 0, 0, 0, 0, 1, 1, 1]' : 0.23504}", "{'[1, 4, 3, 1, 6, 1, 0, 1, 26, 27, 29, 0, 0, 0, 0, 1, 1, 1]' : 0.230116}", "{'[1, 4, 3, 1, 6, 1, 0, 1, 26, 27, 29, 0, 0, 0, 0, 1, 1, 1]' : 0.230169}", "{'[1, 4, 3, 1, 6, 1, 0, 1, 26, 27, 29, 0, 0, 0, 0, 1, 1, 1]' : 0.230162}", "{'[1, 4, 3, 1, 6, 1, 0, 1, 26, 27, 29, 0, 0, 0, 0, 1, 1, 1]' : 0.230131}", "{'[1, 4, 3, 1, 6, 1, 0, 1, 26, 27, 29, 0, 0, 0, 0, 1, 1, 1]' : 0.227851}", "{'[1, 4, 3, 1, 6, 1, 0, 1, 26, 27, 29, 0, 0, 0, 0, 1, 1, 1]' : 0.221921}", "{'[1, 4, 3, 1, 6, 1, 0, 1, 26, 27, 29, 0, 0, 0, 0, 1, 1, 1]' : 0.222283}", "{'[1, 4, 3, 1, 6, 1, 0, 1, 26, 27, 29, 0, 0, 0, 0, 1, 1, 1]' : 0.226926}", "{'[1, 4, 3, 1, 6, 1, 0, 1, 26, 27, 29, 0, 0, 0, 0, 1, 1, 1]' : 0.230076}", "{'[1, 4, 3, 1, 6, 1, 0, 1, 26, 27, 29, 0, 0, 0, 0, 1, 1, 1]' : 0.230071}", "{'[1, 4, 3, 1, 6, 1, 0, 1, 26, 27, 29, 0, 0, 0, 0, 1, 1, 1]' : 0.230133}", "{'[1, 4, 3, 1, 6, 1, 0, 1, 26, 27, 29, 0, 0, 0, 0, 1, 1, 1]' : 0.230012}", "{'[1, 4, 3, 1, 6, 1, 0, 1, 26, 27, 29, 0, 0, 0, 0, 1, 1, 1]' : 0.230113}", "{'[1, 4, 3, 1, 6, 1, 0, 1, 26, 27, 29, 0, 0, 0, 0, 1, 1, 1]' : 0.230079}", "{'[1, 4, 3, 1, 6, 1, 0, 1, 26, 27, 29, 0, 0, 0, 0, 1, 1, 1]' : 0.230178}", "{'[1, 4, 3, 1, 6, 1, 0, 1, 26, 27, 29, 0, 0, 0, 0, 1, 1, 1]' : 0.230392}", "{'[1, 4, 3, 1, 6, 1, 0, 1, 26, 27, 29, 0, 0, 0, 0, 1, 1, 1]' : 0.217918}", "{'[1, 4, 3, 1, 6, 1, 0, 1, 26, 27, 29, 0, 0, 0, 0, 1, 1, 1]' : 0.215722}", "{'[1, 4, 3, 1, 6, 1, 0, 1, 26, 27, 29, 0, 0, 0, 0, 1, 1, 1]' : 0.223693}", "{'[1, 4, 3, 1, 6, 1, 0, 1, 26, 27, 29, 0, 0, 0, 0, 1, 1, 1]' : 0.2302}", "{'[1, 4, 3, 1, 6, 1, 0, 1, 26, 27, 29, 0, 0, 0, 0, 1, 1, 1]' : 0.230276}", "{'[1, 4, 3, 1, 6, 1, 0, 1, 26, 27, 29, 0, 0, 0, 0, 1, 1, 1]' : 0.230182}", "{'[1, 4, 3, 1, 6, 1, 0, 1, 26, 27, 29, 0, 0, 0, 0, 1, 1, 1]' : 0.226294}", "{'[1, 4, 3, 1, 6, 1, 0, 1, 26, 27, 29, 0, 0, 0, 0, 1, 1, 1]' : 0.22261}", "{'[1, 4, 3, 1, 6, 1, 0, 1, 26, 27, 29, 0, 0, 0, 0, 1, 1, 1]' : 0.22236}", "{'[1, 4, 3, 1, 6, 1, 0, 1, 26, 27, 29, 0, 0, 0, 0, 1, 1, 1]' : 0.229897}", "{'[1, 4, 3, 1, 6, 1, 0, 1, 26, 27, 29, 0, 0, 0, 0, 1, 1, 1]' : 0.230191}", "{'[1, 4, 3, 1, 6, 1, 0, 1, 26, 27, 29, 0, 0, 0, 0, 1, 1, 1]' : 0.230254}"]
returning from 'run': {'[1, 4, 3, 1, 6, 1, 0, 1, 26, 27, 29, 0, 0, 0, 0, 1, 1, 1]': ([0.267041, 0.23504, 0.230116, 0.230169, 0.230162, 0.230131, 0.227851, 0.221921, 0.222283, 0.226926, 0.230076, 0.230071, 0.230133, 0.230012, 0.230113, 0.230079, 0.230178, 0.230392, 0.217918, 0.215722, 0.223693, 0.2302, 0.230276, 0.230182, 0.226294, 0.22261, 0.22236, 0.229897, 0.230191, 0.230254], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 4, 3, 1, 6, 1, 0, 1, 26, 27, 29, 0, 0, 0, 0, 1, 1, 1]': ([0.267041, 0.23504, 0.230116, 0.230169, 0.230162, 0.230131, 0.227851, 0.221921, 0.222283, 0.226926, 0.230076, 0.230071, 0.230133, 0.230012, 0.230113, 0.230079, 0.230178, 0.230392, 0.217918, 0.215722, 0.223693, 0.2302, 0.230276, 0.230182, 0.226294, 0.22261, 0.22236, 0.229897, 0.230191, 0.230254], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	78
        Max loop nest depth: 	5
        Additions: 		3192
        Multiplications: 	1118
        Divisions: 		0
        Logical: 		0
        Reads: 			6215
        Writes: 		1156
        Comparisons:		78
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest21.exe __orio_perftest21.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest21.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest21.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest21.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest21.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	41
        Max loop nest depth: 	6
        Additions: 		3112
        Multiplications: 	1352
        Divisions: 		0
        Logical: 		0
        Reads: 			5543
        Writes: 		834
        Comparisons:		41
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest22.exe __orio_perftest22.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest22.exe  
Program Test Output: 
{'[1, 6, 1, 6, 0, 6, 0, 0, 0, 11, 17, 0, 0, 2, 0, 1, 0, 0]' : 0.170392}
{'[1, 6, 1, 6, 0, 6, 0, 0, 0, 11, 17, 0, 0, 2, 0, 1, 0, 0]' : 0.170366}
{'[1, 6, 1, 6, 0, 6, 0, 0, 0, 11, 17, 0, 0, 2, 0, 1, 0, 0]' : 0.170242}
{'[1, 6, 1, 6, 0, 6, 0, 0, 0, 11, 17, 0, 0, 2, 0, 1, 0, 0]' : 0.152309}
{'[1, 6, 1, 6, 0, 6, 0, 0, 0, 11, 17, 0, 0, 2, 0, 1, 0, 0]' : 0.143792}
{'[1, 6, 1, 6, 0, 6, 0, 0, 0, 11, 17, 0, 0, 2, 0, 1, 0, 0]' : 0.143798}
{'[1, 6, 1, 6, 0, 6, 0, 0, 0, 11, 17, 0, 0, 2, 0, 1, 0, 0]' : 0.143898}
{'[1, 6, 1, 6, 0, 6, 0, 0, 0, 11, 17, 0, 0, 2, 0, 1, 0, 0]' : 0.143758}
{'[1, 6, 1, 6, 0, 6, 0, 0, 0, 11, 17, 0, 0, 2, 0, 1, 0, 0]' : 0.143937}
{'[1, 6, 1, 6, 0, 6, 0, 0, 0, 11, 17, 0, 0, 2, 0, 1, 0, 0]' : 0.143912}
{'[1, 6, 1, 6, 0, 6, 0, 0, 0, 11, 17, 0, 0, 2, 0, 1, 0, 0]' : 0.14406}
{'[1, 6, 1, 6, 0, 6, 0, 0, 0, 11, 17, 0, 0, 2, 0, 1, 0, 0]' : 0.144043}
{'[1, 6, 1, 6, 0, 6, 0, 0, 0, 11, 17, 0, 0, 2, 0, 1, 0, 0]' : 0.14422}
{'[1, 6, 1, 6, 0, 6, 0, 0, 0, 11, 17, 0, 0, 2, 0, 1, 0, 0]' : 0.14391}
{'[1, 6, 1, 6, 0, 6, 0, 0, 0, 11, 17, 0, 0, 2, 0, 1, 0, 0]' : 0.143844}
{'[1, 6, 1, 6, 0, 6, 0, 0, 0, 11, 17, 0, 0, 2, 0, 1, 0, 0]' : 0.143836}
{'[1, 6, 1, 6, 0, 6, 0, 0, 0, 11, 17, 0, 0, 2, 0, 1, 0, 0]' : 0.143869}
{'[1, 6, 1, 6, 0, 6, 0, 0, 0, 11, 17, 0, 0, 2, 0, 1, 0, 0]' : 0.143818}
{'[1, 6, 1, 6, 0, 6, 0, 0, 0, 11, 17, 0, 0, 2, 0, 1, 0, 0]' : 0.144119}
{'[1, 6, 1, 6, 0, 6, 0, 0, 0, 11, 17, 0, 0, 2, 0, 1, 0, 0]' : 0.14403}
{'[1, 6, 1, 6, 0, 6, 0, 0, 0, 11, 17, 0, 0, 2, 0, 1, 0, 0]' : 0.143759}
{'[1, 6, 1, 6, 0, 6, 0, 0, 0, 11, 17, 0, 0, 2, 0, 1, 0, 0]' : 0.143934}
{'[1, 6, 1, 6, 0, 6, 0, 0, 0, 11, 17, 0, 0, 2, 0, 1, 0, 0]' : 0.144016}
{'[1, 6, 1, 6, 0, 6, 0, 0, 0, 11, 17, 0, 0, 2, 0, 1, 0, 0]' : 0.144008}
{'[1, 6, 1, 6, 0, 6, 0, 0, 0, 11, 17, 0, 0, 2, 0, 1, 0, 0]' : 0.143868}
{'[1, 6, 1, 6, 0, 6, 0, 0, 0, 11, 17, 0, 0, 2, 0, 1, 0, 0]' : 0.143822}
{'[1, 6, 1, 6, 0, 6, 0, 0, 0, 11, 17, 0, 0, 2, 0, 1, 0, 0]' : 0.144458}
{'[1, 6, 1, 6, 0, 6, 0, 0, 0, 11, 17, 0, 0, 2, 0, 1, 0, 0]' : 0.143979}
{'[1, 6, 1, 6, 0, 6, 0, 0, 0, 11, 17, 0, 0, 2, 0, 1, 0, 0]' : 0.143893}
{'[1, 6, 1, 6, 0, 6, 0, 0, 0, 11, 17, 0, 0, 2, 0, 1, 0, 0]' : 0.143867}

out:
 ["{'[1, 6, 1, 6, 0, 6, 0, 0, 0, 11, 17, 0, 0, 2, 0, 1, 0, 0]' : 0.170392}", "{'[1, 6, 1, 6, 0, 6, 0, 0, 0, 11, 17, 0, 0, 2, 0, 1, 0, 0]' : 0.170366}", "{'[1, 6, 1, 6, 0, 6, 0, 0, 0, 11, 17, 0, 0, 2, 0, 1, 0, 0]' : 0.170242}", "{'[1, 6, 1, 6, 0, 6, 0, 0, 0, 11, 17, 0, 0, 2, 0, 1, 0, 0]' : 0.152309}", "{'[1, 6, 1, 6, 0, 6, 0, 0, 0, 11, 17, 0, 0, 2, 0, 1, 0, 0]' : 0.143792}", "{'[1, 6, 1, 6, 0, 6, 0, 0, 0, 11, 17, 0, 0, 2, 0, 1, 0, 0]' : 0.143798}", "{'[1, 6, 1, 6, 0, 6, 0, 0, 0, 11, 17, 0, 0, 2, 0, 1, 0, 0]' : 0.143898}", "{'[1, 6, 1, 6, 0, 6, 0, 0, 0, 11, 17, 0, 0, 2, 0, 1, 0, 0]' : 0.143758}", "{'[1, 6, 1, 6, 0, 6, 0, 0, 0, 11, 17, 0, 0, 2, 0, 1, 0, 0]' : 0.143937}", "{'[1, 6, 1, 6, 0, 6, 0, 0, 0, 11, 17, 0, 0, 2, 0, 1, 0, 0]' : 0.143912}", "{'[1, 6, 1, 6, 0, 6, 0, 0, 0, 11, 17, 0, 0, 2, 0, 1, 0, 0]' : 0.14406}", "{'[1, 6, 1, 6, 0, 6, 0, 0, 0, 11, 17, 0, 0, 2, 0, 1, 0, 0]' : 0.144043}", "{'[1, 6, 1, 6, 0, 6, 0, 0, 0, 11, 17, 0, 0, 2, 0, 1, 0, 0]' : 0.14422}", "{'[1, 6, 1, 6, 0, 6, 0, 0, 0, 11, 17, 0, 0, 2, 0, 1, 0, 0]' : 0.14391}", "{'[1, 6, 1, 6, 0, 6, 0, 0, 0, 11, 17, 0, 0, 2, 0, 1, 0, 0]' : 0.143844}", "{'[1, 6, 1, 6, 0, 6, 0, 0, 0, 11, 17, 0, 0, 2, 0, 1, 0, 0]' : 0.143836}", "{'[1, 6, 1, 6, 0, 6, 0, 0, 0, 11, 17, 0, 0, 2, 0, 1, 0, 0]' : 0.143869}", "{'[1, 6, 1, 6, 0, 6, 0, 0, 0, 11, 17, 0, 0, 2, 0, 1, 0, 0]' : 0.143818}", "{'[1, 6, 1, 6, 0, 6, 0, 0, 0, 11, 17, 0, 0, 2, 0, 1, 0, 0]' : 0.144119}", "{'[1, 6, 1, 6, 0, 6, 0, 0, 0, 11, 17, 0, 0, 2, 0, 1, 0, 0]' : 0.14403}", "{'[1, 6, 1, 6, 0, 6, 0, 0, 0, 11, 17, 0, 0, 2, 0, 1, 0, 0]' : 0.143759}", "{'[1, 6, 1, 6, 0, 6, 0, 0, 0, 11, 17, 0, 0, 2, 0, 1, 0, 0]' : 0.143934}", "{'[1, 6, 1, 6, 0, 6, 0, 0, 0, 11, 17, 0, 0, 2, 0, 1, 0, 0]' : 0.144016}", "{'[1, 6, 1, 6, 0, 6, 0, 0, 0, 11, 17, 0, 0, 2, 0, 1, 0, 0]' : 0.144008}", "{'[1, 6, 1, 6, 0, 6, 0, 0, 0, 11, 17, 0, 0, 2, 0, 1, 0, 0]' : 0.143868}", "{'[1, 6, 1, 6, 0, 6, 0, 0, 0, 11, 17, 0, 0, 2, 0, 1, 0, 0]' : 0.143822}", "{'[1, 6, 1, 6, 0, 6, 0, 0, 0, 11, 17, 0, 0, 2, 0, 1, 0, 0]' : 0.144458}", "{'[1, 6, 1, 6, 0, 6, 0, 0, 0, 11, 17, 0, 0, 2, 0, 1, 0, 0]' : 0.143979}", "{'[1, 6, 1, 6, 0, 6, 0, 0, 0, 11, 17, 0, 0, 2, 0, 1, 0, 0]' : 0.143893}", "{'[1, 6, 1, 6, 0, 6, 0, 0, 0, 11, 17, 0, 0, 2, 0, 1, 0, 0]' : 0.143867}"]
returning from 'run': {'[1, 6, 1, 6, 0, 6, 0, 0, 0, 11, 17, 0, 0, 2, 0, 1, 0, 0]': ([0.170392, 0.170366, 0.170242, 0.152309, 0.143792, 0.143798, 0.143898, 0.143758, 0.143937, 0.143912, 0.14406, 0.144043, 0.14422, 0.14391, 0.143844, 0.143836, 0.143869, 0.143818, 0.144119, 0.14403, 0.143759, 0.143934, 0.144016, 0.144008, 0.143868, 0.143822, 0.144458, 0.143979, 0.143893, 0.143867], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 6, 1, 6, 0, 6, 0, 0, 0, 11, 17, 0, 0, 2, 0, 1, 0, 0]': ([0.170392, 0.170366, 0.170242, 0.152309, 0.143792, 0.143798, 0.143898, 0.143758, 0.143937, 0.143912, 0.14406, 0.144043, 0.14422, 0.14391, 0.143844, 0.143836, 0.143869, 0.143818, 0.144119, 0.14403, 0.143759, 0.143934, 0.144016, 0.144008, 0.143868, 0.143822, 0.144458, 0.143979, 0.143893, 0.143867], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		1430
        Multiplications: 	660
        Divisions: 		0
        Logical: 		0
        Reads: 			2892
        Writes: 		534
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest23.exe __orio_perftest23.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest23.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest23.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest23.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest23.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	111
        Max loop nest depth: 	5
        Additions: 		3993
        Multiplications: 	1040
        Divisions: 		0
        Logical: 		0
        Reads: 			7985
        Writes: 		1654
        Comparisons:		111
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest24.exe __orio_perftest24.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest24.exe  
Program Test Output: 
{'[3, 0, 0, 6, 2, 1, 1, 1, 0, 18, 0, 16, 0, 1, 0, 1, 1, 1]' : 0.311336}
{'[3, 0, 0, 6, 2, 1, 1, 1, 0, 18, 0, 16, 0, 1, 0, 1, 1, 1]' : 0.301901}
{'[3, 0, 0, 6, 2, 1, 1, 1, 0, 18, 0, 16, 0, 1, 0, 1, 1, 1]' : 0.264445}
{'[3, 0, 0, 6, 2, 1, 1, 1, 0, 18, 0, 16, 0, 1, 0, 1, 1, 1]' : 0.266604}
{'[3, 0, 0, 6, 2, 1, 1, 1, 0, 18, 0, 16, 0, 1, 0, 1, 1, 1]' : 0.266826}
{'[3, 0, 0, 6, 2, 1, 1, 1, 0, 18, 0, 16, 0, 1, 0, 1, 1, 1]' : 0.263605}
{'[3, 0, 0, 6, 2, 1, 1, 1, 0, 18, 0, 16, 0, 1, 0, 1, 1, 1]' : 0.265056}
{'[3, 0, 0, 6, 2, 1, 1, 1, 0, 18, 0, 16, 0, 1, 0, 1, 1, 1]' : 0.266055}
{'[3, 0, 0, 6, 2, 1, 1, 1, 0, 18, 0, 16, 0, 1, 0, 1, 1, 1]' : 0.264353}
{'[3, 0, 0, 6, 2, 1, 1, 1, 0, 18, 0, 16, 0, 1, 0, 1, 1, 1]' : 0.264127}
{'[3, 0, 0, 6, 2, 1, 1, 1, 0, 18, 0, 16, 0, 1, 0, 1, 1, 1]' : 0.265188}
{'[3, 0, 0, 6, 2, 1, 1, 1, 0, 18, 0, 16, 0, 1, 0, 1, 1, 1]' : 0.265292}
{'[3, 0, 0, 6, 2, 1, 1, 1, 0, 18, 0, 16, 0, 1, 0, 1, 1, 1]' : 0.265138}
{'[3, 0, 0, 6, 2, 1, 1, 1, 0, 18, 0, 16, 0, 1, 0, 1, 1, 1]' : 0.264752}
{'[3, 0, 0, 6, 2, 1, 1, 1, 0, 18, 0, 16, 0, 1, 0, 1, 1, 1]' : 0.265634}
{'[3, 0, 0, 6, 2, 1, 1, 1, 0, 18, 0, 16, 0, 1, 0, 1, 1, 1]' : 0.265871}
{'[3, 0, 0, 6, 2, 1, 1, 1, 0, 18, 0, 16, 0, 1, 0, 1, 1, 1]' : 0.265588}
{'[3, 0, 0, 6, 2, 1, 1, 1, 0, 18, 0, 16, 0, 1, 0, 1, 1, 1]' : 0.264498}
{'[3, 0, 0, 6, 2, 1, 1, 1, 0, 18, 0, 16, 0, 1, 0, 1, 1, 1]' : 0.265806}
{'[3, 0, 0, 6, 2, 1, 1, 1, 0, 18, 0, 16, 0, 1, 0, 1, 1, 1]' : 0.264604}
{'[3, 0, 0, 6, 2, 1, 1, 1, 0, 18, 0, 16, 0, 1, 0, 1, 1, 1]' : 0.263779}
{'[3, 0, 0, 6, 2, 1, 1, 1, 0, 18, 0, 16, 0, 1, 0, 1, 1, 1]' : 0.263937}
{'[3, 0, 0, 6, 2, 1, 1, 1, 0, 18, 0, 16, 0, 1, 0, 1, 1, 1]' : 0.26505}
{'[3, 0, 0, 6, 2, 1, 1, 1, 0, 18, 0, 16, 0, 1, 0, 1, 1, 1]' : 0.26544}
{'[3, 0, 0, 6, 2, 1, 1, 1, 0, 18, 0, 16, 0, 1, 0, 1, 1, 1]' : 0.265465}
{'[3, 0, 0, 6, 2, 1, 1, 1, 0, 18, 0, 16, 0, 1, 0, 1, 1, 1]' : 0.265163}
{'[3, 0, 0, 6, 2, 1, 1, 1, 0, 18, 0, 16, 0, 1, 0, 1, 1, 1]' : 0.263954}
{'[3, 0, 0, 6, 2, 1, 1, 1, 0, 18, 0, 16, 0, 1, 0, 1, 1, 1]' : 0.265372}
{'[3, 0, 0, 6, 2, 1, 1, 1, 0, 18, 0, 16, 0, 1, 0, 1, 1, 1]' : 0.265291}
{'[3, 0, 0, 6, 2, 1, 1, 1, 0, 18, 0, 16, 0, 1, 0, 1, 1, 1]' : 0.265146}

out:
 ["{'[3, 0, 0, 6, 2, 1, 1, 1, 0, 18, 0, 16, 0, 1, 0, 1, 1, 1]' : 0.311336}", "{'[3, 0, 0, 6, 2, 1, 1, 1, 0, 18, 0, 16, 0, 1, 0, 1, 1, 1]' : 0.301901}", "{'[3, 0, 0, 6, 2, 1, 1, 1, 0, 18, 0, 16, 0, 1, 0, 1, 1, 1]' : 0.264445}", "{'[3, 0, 0, 6, 2, 1, 1, 1, 0, 18, 0, 16, 0, 1, 0, 1, 1, 1]' : 0.266604}", "{'[3, 0, 0, 6, 2, 1, 1, 1, 0, 18, 0, 16, 0, 1, 0, 1, 1, 1]' : 0.266826}", "{'[3, 0, 0, 6, 2, 1, 1, 1, 0, 18, 0, 16, 0, 1, 0, 1, 1, 1]' : 0.263605}", "{'[3, 0, 0, 6, 2, 1, 1, 1, 0, 18, 0, 16, 0, 1, 0, 1, 1, 1]' : 0.265056}", "{'[3, 0, 0, 6, 2, 1, 1, 1, 0, 18, 0, 16, 0, 1, 0, 1, 1, 1]' : 0.266055}", "{'[3, 0, 0, 6, 2, 1, 1, 1, 0, 18, 0, 16, 0, 1, 0, 1, 1, 1]' : 0.264353}", "{'[3, 0, 0, 6, 2, 1, 1, 1, 0, 18, 0, 16, 0, 1, 0, 1, 1, 1]' : 0.264127}", "{'[3, 0, 0, 6, 2, 1, 1, 1, 0, 18, 0, 16, 0, 1, 0, 1, 1, 1]' : 0.265188}", "{'[3, 0, 0, 6, 2, 1, 1, 1, 0, 18, 0, 16, 0, 1, 0, 1, 1, 1]' : 0.265292}", "{'[3, 0, 0, 6, 2, 1, 1, 1, 0, 18, 0, 16, 0, 1, 0, 1, 1, 1]' : 0.265138}", "{'[3, 0, 0, 6, 2, 1, 1, 1, 0, 18, 0, 16, 0, 1, 0, 1, 1, 1]' : 0.264752}", "{'[3, 0, 0, 6, 2, 1, 1, 1, 0, 18, 0, 16, 0, 1, 0, 1, 1, 1]' : 0.265634}", "{'[3, 0, 0, 6, 2, 1, 1, 1, 0, 18, 0, 16, 0, 1, 0, 1, 1, 1]' : 0.265871}", "{'[3, 0, 0, 6, 2, 1, 1, 1, 0, 18, 0, 16, 0, 1, 0, 1, 1, 1]' : 0.265588}", "{'[3, 0, 0, 6, 2, 1, 1, 1, 0, 18, 0, 16, 0, 1, 0, 1, 1, 1]' : 0.264498}", "{'[3, 0, 0, 6, 2, 1, 1, 1, 0, 18, 0, 16, 0, 1, 0, 1, 1, 1]' : 0.265806}", "{'[3, 0, 0, 6, 2, 1, 1, 1, 0, 18, 0, 16, 0, 1, 0, 1, 1, 1]' : 0.264604}", "{'[3, 0, 0, 6, 2, 1, 1, 1, 0, 18, 0, 16, 0, 1, 0, 1, 1, 1]' : 0.263779}", "{'[3, 0, 0, 6, 2, 1, 1, 1, 0, 18, 0, 16, 0, 1, 0, 1, 1, 1]' : 0.263937}", "{'[3, 0, 0, 6, 2, 1, 1, 1, 0, 18, 0, 16, 0, 1, 0, 1, 1, 1]' : 0.26505}", "{'[3, 0, 0, 6, 2, 1, 1, 1, 0, 18, 0, 16, 0, 1, 0, 1, 1, 1]' : 0.26544}", "{'[3, 0, 0, 6, 2, 1, 1, 1, 0, 18, 0, 16, 0, 1, 0, 1, 1, 1]' : 0.265465}", "{'[3, 0, 0, 6, 2, 1, 1, 1, 0, 18, 0, 16, 0, 1, 0, 1, 1, 1]' : 0.265163}", "{'[3, 0, 0, 6, 2, 1, 1, 1, 0, 18, 0, 16, 0, 1, 0, 1, 1, 1]' : 0.263954}", "{'[3, 0, 0, 6, 2, 1, 1, 1, 0, 18, 0, 16, 0, 1, 0, 1, 1, 1]' : 0.265372}", "{'[3, 0, 0, 6, 2, 1, 1, 1, 0, 18, 0, 16, 0, 1, 0, 1, 1, 1]' : 0.265291}", "{'[3, 0, 0, 6, 2, 1, 1, 1, 0, 18, 0, 16, 0, 1, 0, 1, 1, 1]' : 0.265146}"]
returning from 'run': {'[3, 0, 0, 6, 2, 1, 1, 1, 0, 18, 0, 16, 0, 1, 0, 1, 1, 1]': ([0.311336, 0.301901, 0.264445, 0.266604, 0.266826, 0.263605, 0.265056, 0.266055, 0.264353, 0.264127, 0.265188, 0.265292, 0.265138, 0.264752, 0.265634, 0.265871, 0.265588, 0.264498, 0.265806, 0.264604, 0.263779, 0.263937, 0.26505, 0.26544, 0.265465, 0.265163, 0.263954, 0.265372, 0.265291, 0.265146], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 0, 0, 6, 2, 1, 1, 1, 0, 18, 0, 16, 0, 1, 0, 1, 1, 1]': ([0.311336, 0.301901, 0.264445, 0.266604, 0.266826, 0.263605, 0.265056, 0.266055, 0.264353, 0.264127, 0.265188, 0.265292, 0.265138, 0.264752, 0.265634, 0.265871, 0.265588, 0.264498, 0.265806, 0.264604, 0.263779, 0.263937, 0.26505, 0.26544, 0.265465, 0.265163, 0.263954, 0.265372, 0.265291, 0.265146], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	5
        Additions: 		609
        Multiplications: 	236
        Divisions: 		0
        Logical: 		0
        Reads: 			1384
        Writes: 		199
        Comparisons:		18
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest25.exe __orio_perftest25.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest25.exe  
Program Test Output: 
{'[0, 4, 0, 3, 6, 0, 0, 0, 9, 25, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.197361}
{'[0, 4, 0, 3, 6, 0, 0, 0, 9, 25, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.196606}
{'[0, 4, 0, 3, 6, 0, 0, 0, 9, 25, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.197048}
{'[0, 4, 0, 3, 6, 0, 0, 0, 9, 25, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.177676}
{'[0, 4, 0, 3, 6, 0, 0, 0, 9, 25, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.174253}
{'[0, 4, 0, 3, 6, 0, 0, 0, 9, 25, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.174358}
{'[0, 4, 0, 3, 6, 0, 0, 0, 9, 25, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.173754}
{'[0, 4, 0, 3, 6, 0, 0, 0, 9, 25, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.174025}
{'[0, 4, 0, 3, 6, 0, 0, 0, 9, 25, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.173605}
{'[0, 4, 0, 3, 6, 0, 0, 0, 9, 25, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.173809}
{'[0, 4, 0, 3, 6, 0, 0, 0, 9, 25, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.174247}
{'[0, 4, 0, 3, 6, 0, 0, 0, 9, 25, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.174265}
{'[0, 4, 0, 3, 6, 0, 0, 0, 9, 25, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.174228}
{'[0, 4, 0, 3, 6, 0, 0, 0, 9, 25, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.174643}
{'[0, 4, 0, 3, 6, 0, 0, 0, 9, 25, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.173775}
{'[0, 4, 0, 3, 6, 0, 0, 0, 9, 25, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.174018}
{'[0, 4, 0, 3, 6, 0, 0, 0, 9, 25, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.174117}
{'[0, 4, 0, 3, 6, 0, 0, 0, 9, 25, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.174015}
{'[0, 4, 0, 3, 6, 0, 0, 0, 9, 25, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.174151}
{'[0, 4, 0, 3, 6, 0, 0, 0, 9, 25, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.174201}
{'[0, 4, 0, 3, 6, 0, 0, 0, 9, 25, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.173982}
{'[0, 4, 0, 3, 6, 0, 0, 0, 9, 25, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.17453}
{'[0, 4, 0, 3, 6, 0, 0, 0, 9, 25, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.173678}
{'[0, 4, 0, 3, 6, 0, 0, 0, 9, 25, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.175297}
{'[0, 4, 0, 3, 6, 0, 0, 0, 9, 25, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.174141}
{'[0, 4, 0, 3, 6, 0, 0, 0, 9, 25, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.173502}
{'[0, 4, 0, 3, 6, 0, 0, 0, 9, 25, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.173572}
{'[0, 4, 0, 3, 6, 0, 0, 0, 9, 25, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.174257}
{'[0, 4, 0, 3, 6, 0, 0, 0, 9, 25, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.173737}
{'[0, 4, 0, 3, 6, 0, 0, 0, 9, 25, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.174242}

out:
 ["{'[0, 4, 0, 3, 6, 0, 0, 0, 9, 25, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.197361}", "{'[0, 4, 0, 3, 6, 0, 0, 0, 9, 25, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.196606}", "{'[0, 4, 0, 3, 6, 0, 0, 0, 9, 25, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.197048}", "{'[0, 4, 0, 3, 6, 0, 0, 0, 9, 25, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.177676}", "{'[0, 4, 0, 3, 6, 0, 0, 0, 9, 25, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.174253}", "{'[0, 4, 0, 3, 6, 0, 0, 0, 9, 25, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.174358}", "{'[0, 4, 0, 3, 6, 0, 0, 0, 9, 25, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.173754}", "{'[0, 4, 0, 3, 6, 0, 0, 0, 9, 25, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.174025}", "{'[0, 4, 0, 3, 6, 0, 0, 0, 9, 25, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.173605}", "{'[0, 4, 0, 3, 6, 0, 0, 0, 9, 25, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.173809}", "{'[0, 4, 0, 3, 6, 0, 0, 0, 9, 25, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.174247}", "{'[0, 4, 0, 3, 6, 0, 0, 0, 9, 25, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.174265}", "{'[0, 4, 0, 3, 6, 0, 0, 0, 9, 25, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.174228}", "{'[0, 4, 0, 3, 6, 0, 0, 0, 9, 25, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.174643}", "{'[0, 4, 0, 3, 6, 0, 0, 0, 9, 25, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.173775}", "{'[0, 4, 0, 3, 6, 0, 0, 0, 9, 25, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.174018}", "{'[0, 4, 0, 3, 6, 0, 0, 0, 9, 25, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.174117}", "{'[0, 4, 0, 3, 6, 0, 0, 0, 9, 25, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.174015}", "{'[0, 4, 0, 3, 6, 0, 0, 0, 9, 25, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.174151}", "{'[0, 4, 0, 3, 6, 0, 0, 0, 9, 25, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.174201}", "{'[0, 4, 0, 3, 6, 0, 0, 0, 9, 25, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.173982}", "{'[0, 4, 0, 3, 6, 0, 0, 0, 9, 25, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.17453}", "{'[0, 4, 0, 3, 6, 0, 0, 0, 9, 25, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.173678}", "{'[0, 4, 0, 3, 6, 0, 0, 0, 9, 25, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.175297}", "{'[0, 4, 0, 3, 6, 0, 0, 0, 9, 25, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.174141}", "{'[0, 4, 0, 3, 6, 0, 0, 0, 9, 25, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.173502}", "{'[0, 4, 0, 3, 6, 0, 0, 0, 9, 25, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.173572}", "{'[0, 4, 0, 3, 6, 0, 0, 0, 9, 25, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.174257}", "{'[0, 4, 0, 3, 6, 0, 0, 0, 9, 25, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.173737}", "{'[0, 4, 0, 3, 6, 0, 0, 0, 9, 25, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.174242}"]
returning from 'run': {'[0, 4, 0, 3, 6, 0, 0, 0, 9, 25, 0, 0, 2, 0, 0, 0, 0, 1]': ([0.197361, 0.196606, 0.197048, 0.177676, 0.174253, 0.174358, 0.173754, 0.174025, 0.173605, 0.173809, 0.174247, 0.174265, 0.174228, 0.174643, 0.173775, 0.174018, 0.174117, 0.174015, 0.174151, 0.174201, 0.173982, 0.17453, 0.173678, 0.175297, 0.174141, 0.173502, 0.173572, 0.174257, 0.173737, 0.174242], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 4, 0, 3, 6, 0, 0, 0, 9, 25, 0, 0, 2, 0, 0, 0, 0, 1]': ([0.197361, 0.196606, 0.197048, 0.177676, 0.174253, 0.174358, 0.173754, 0.174025, 0.173605, 0.173809, 0.174247, 0.174265, 0.174228, 0.174643, 0.173775, 0.174018, 0.174117, 0.174015, 0.174151, 0.174201, 0.173982, 0.17453, 0.173678, 0.175297, 0.174141, 0.173502, 0.173572, 0.174257, 0.173737, 0.174242], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	17
        Max loop nest depth: 	5
        Additions: 		285
        Multiplications: 	120
        Divisions: 		0
        Logical: 		0
        Reads: 			629
        Writes: 		129
        Comparisons:		17
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest26.exe __orio_perftest26.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest26.exe  
Program Test Output: 
{'[3, 6, 1, 1, 4, 2, 0, 0, 2, 4, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.131565}
{'[3, 6, 1, 1, 4, 2, 0, 0, 2, 4, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.131544}
{'[3, 6, 1, 1, 4, 2, 0, 0, 2, 4, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.131507}
{'[3, 6, 1, 1, 4, 2, 0, 0, 2, 4, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.131472}
{'[3, 6, 1, 1, 4, 2, 0, 0, 2, 4, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.13147}
{'[3, 6, 1, 1, 4, 2, 0, 0, 2, 4, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.115606}
{'[3, 6, 1, 1, 4, 2, 0, 0, 2, 4, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.112426}
{'[3, 6, 1, 1, 4, 2, 0, 0, 2, 4, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.11212}
{'[3, 6, 1, 1, 4, 2, 0, 0, 2, 4, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.112261}
{'[3, 6, 1, 1, 4, 2, 0, 0, 2, 4, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.112267}
{'[3, 6, 1, 1, 4, 2, 0, 0, 2, 4, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.112186}
{'[3, 6, 1, 1, 4, 2, 0, 0, 2, 4, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.112151}
{'[3, 6, 1, 1, 4, 2, 0, 0, 2, 4, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.112116}
{'[3, 6, 1, 1, 4, 2, 0, 0, 2, 4, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.112154}
{'[3, 6, 1, 1, 4, 2, 0, 0, 2, 4, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.112308}
{'[3, 6, 1, 1, 4, 2, 0, 0, 2, 4, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.112618}
{'[3, 6, 1, 1, 4, 2, 0, 0, 2, 4, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.112454}
{'[3, 6, 1, 1, 4, 2, 0, 0, 2, 4, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.11214}
{'[3, 6, 1, 1, 4, 2, 0, 0, 2, 4, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.112093}
{'[3, 6, 1, 1, 4, 2, 0, 0, 2, 4, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.11218}
{'[3, 6, 1, 1, 4, 2, 0, 0, 2, 4, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.112219}
{'[3, 6, 1, 1, 4, 2, 0, 0, 2, 4, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.112217}
{'[3, 6, 1, 1, 4, 2, 0, 0, 2, 4, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.112256}
{'[3, 6, 1, 1, 4, 2, 0, 0, 2, 4, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.112076}
{'[3, 6, 1, 1, 4, 2, 0, 0, 2, 4, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.112394}
{'[3, 6, 1, 1, 4, 2, 0, 0, 2, 4, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.112323}
{'[3, 6, 1, 1, 4, 2, 0, 0, 2, 4, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.112138}
{'[3, 6, 1, 1, 4, 2, 0, 0, 2, 4, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.112379}
{'[3, 6, 1, 1, 4, 2, 0, 0, 2, 4, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.112157}
{'[3, 6, 1, 1, 4, 2, 0, 0, 2, 4, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.112828}

out:
 ["{'[3, 6, 1, 1, 4, 2, 0, 0, 2, 4, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.131565}", "{'[3, 6, 1, 1, 4, 2, 0, 0, 2, 4, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.131544}", "{'[3, 6, 1, 1, 4, 2, 0, 0, 2, 4, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.131507}", "{'[3, 6, 1, 1, 4, 2, 0, 0, 2, 4, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.131472}", "{'[3, 6, 1, 1, 4, 2, 0, 0, 2, 4, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.13147}", "{'[3, 6, 1, 1, 4, 2, 0, 0, 2, 4, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.115606}", "{'[3, 6, 1, 1, 4, 2, 0, 0, 2, 4, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.112426}", "{'[3, 6, 1, 1, 4, 2, 0, 0, 2, 4, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.11212}", "{'[3, 6, 1, 1, 4, 2, 0, 0, 2, 4, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.112261}", "{'[3, 6, 1, 1, 4, 2, 0, 0, 2, 4, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.112267}", "{'[3, 6, 1, 1, 4, 2, 0, 0, 2, 4, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.112186}", "{'[3, 6, 1, 1, 4, 2, 0, 0, 2, 4, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.112151}", "{'[3, 6, 1, 1, 4, 2, 0, 0, 2, 4, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.112116}", "{'[3, 6, 1, 1, 4, 2, 0, 0, 2, 4, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.112154}", "{'[3, 6, 1, 1, 4, 2, 0, 0, 2, 4, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.112308}", "{'[3, 6, 1, 1, 4, 2, 0, 0, 2, 4, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.112618}", "{'[3, 6, 1, 1, 4, 2, 0, 0, 2, 4, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.112454}", "{'[3, 6, 1, 1, 4, 2, 0, 0, 2, 4, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.11214}", "{'[3, 6, 1, 1, 4, 2, 0, 0, 2, 4, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.112093}", "{'[3, 6, 1, 1, 4, 2, 0, 0, 2, 4, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.11218}", "{'[3, 6, 1, 1, 4, 2, 0, 0, 2, 4, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.112219}", "{'[3, 6, 1, 1, 4, 2, 0, 0, 2, 4, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.112217}", "{'[3, 6, 1, 1, 4, 2, 0, 0, 2, 4, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.112256}", "{'[3, 6, 1, 1, 4, 2, 0, 0, 2, 4, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.112076}", "{'[3, 6, 1, 1, 4, 2, 0, 0, 2, 4, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.112394}", "{'[3, 6, 1, 1, 4, 2, 0, 0, 2, 4, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.112323}", "{'[3, 6, 1, 1, 4, 2, 0, 0, 2, 4, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.112138}", "{'[3, 6, 1, 1, 4, 2, 0, 0, 2, 4, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.112379}", "{'[3, 6, 1, 1, 4, 2, 0, 0, 2, 4, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.112157}", "{'[3, 6, 1, 1, 4, 2, 0, 0, 2, 4, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.112828}"]
returning from 'run': {'[3, 6, 1, 1, 4, 2, 0, 0, 2, 4, 0, 0, 0, 1, 0, 1, 0, 0]': ([0.131565, 0.131544, 0.131507, 0.131472, 0.13147, 0.115606, 0.112426, 0.11212, 0.112261, 0.112267, 0.112186, 0.112151, 0.112116, 0.112154, 0.112308, 0.112618, 0.112454, 0.11214, 0.112093, 0.11218, 0.112219, 0.112217, 0.112256, 0.112076, 0.112394, 0.112323, 0.112138, 0.112379, 0.112157, 0.112828], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 6, 1, 1, 4, 2, 0, 0, 2, 4, 0, 0, 0, 1, 0, 1, 0, 0]': ([0.131565, 0.131544, 0.131507, 0.131472, 0.13147, 0.115606, 0.112426, 0.11212, 0.112261, 0.112267, 0.112186, 0.112151, 0.112116, 0.112154, 0.112308, 0.112618, 0.112454, 0.11214, 0.112093, 0.11218, 0.112219, 0.112217, 0.112256, 0.112076, 0.112394, 0.112323, 0.112138, 0.112379, 0.112157, 0.112828], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = kkk
Code stats:
        Number of loops: 	163
        Max loop nest depth: 	5
        Additions: 		4582
        Multiplications: 	1512
        Divisions: 		0
        Logical: 		0
        Reads: 			8199
        Writes: 		1336
        Comparisons:		163
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest27.exe __orio_perftest27.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest27.exe  
Program Test Output: 
{'[2, 2, 3, 0, 5, 1, 1, 1, 3, 26, 11, 0, 1, 0, 1, 1, 0, 0]' : 0.11194}
{'[2, 2, 3, 0, 5, 1, 1, 1, 3, 26, 11, 0, 1, 0, 1, 1, 0, 0]' : 0.11191}
{'[2, 2, 3, 0, 5, 1, 1, 1, 3, 26, 11, 0, 1, 0, 1, 1, 0, 0]' : 0.111883}
{'[2, 2, 3, 0, 5, 1, 1, 1, 3, 26, 11, 0, 1, 0, 1, 1, 0, 0]' : 0.1119}
{'[2, 2, 3, 0, 5, 1, 1, 1, 3, 26, 11, 0, 1, 0, 1, 1, 0, 0]' : 0.109169}
{'[2, 2, 3, 0, 5, 1, 1, 1, 3, 26, 11, 0, 1, 0, 1, 1, 0, 0]' : 0.0965991}
{'[2, 2, 3, 0, 5, 1, 1, 1, 3, 26, 11, 0, 1, 0, 1, 1, 0, 0]' : 0.0963039}
{'[2, 2, 3, 0, 5, 1, 1, 1, 3, 26, 11, 0, 1, 0, 1, 1, 0, 0]' : 0.0963581}
{'[2, 2, 3, 0, 5, 1, 1, 1, 3, 26, 11, 0, 1, 0, 1, 1, 0, 0]' : 0.096391}
{'[2, 2, 3, 0, 5, 1, 1, 1, 3, 26, 11, 0, 1, 0, 1, 1, 0, 0]' : 0.0965731}
{'[2, 2, 3, 0, 5, 1, 1, 1, 3, 26, 11, 0, 1, 0, 1, 1, 0, 0]' : 0.096092}
{'[2, 2, 3, 0, 5, 1, 1, 1, 3, 26, 11, 0, 1, 0, 1, 1, 0, 0]' : 0.0961571}
{'[2, 2, 3, 0, 5, 1, 1, 1, 3, 26, 11, 0, 1, 0, 1, 1, 0, 0]' : 0.0963399}
{'[2, 2, 3, 0, 5, 1, 1, 1, 3, 26, 11, 0, 1, 0, 1, 1, 0, 0]' : 0.0962589}
{'[2, 2, 3, 0, 5, 1, 1, 1, 3, 26, 11, 0, 1, 0, 1, 1, 0, 0]' : 0.0961628}
{'[2, 2, 3, 0, 5, 1, 1, 1, 3, 26, 11, 0, 1, 0, 1, 1, 0, 0]' : 0.096209}
{'[2, 2, 3, 0, 5, 1, 1, 1, 3, 26, 11, 0, 1, 0, 1, 1, 0, 0]' : 0.096184}
{'[2, 2, 3, 0, 5, 1, 1, 1, 3, 26, 11, 0, 1, 0, 1, 1, 0, 0]' : 0.0963922}
{'[2, 2, 3, 0, 5, 1, 1, 1, 3, 26, 11, 0, 1, 0, 1, 1, 0, 0]' : 0.096092}
{'[2, 2, 3, 0, 5, 1, 1, 1, 3, 26, 11, 0, 1, 0, 1, 1, 0, 0]' : 0.0966609}
{'[2, 2, 3, 0, 5, 1, 1, 1, 3, 26, 11, 0, 1, 0, 1, 1, 0, 0]' : 0.0962641}
{'[2, 2, 3, 0, 5, 1, 1, 1, 3, 26, 11, 0, 1, 0, 1, 1, 0, 0]' : 0.096365}
{'[2, 2, 3, 0, 5, 1, 1, 1, 3, 26, 11, 0, 1, 0, 1, 1, 0, 0]' : 0.0961661}
{'[2, 2, 3, 0, 5, 1, 1, 1, 3, 26, 11, 0, 1, 0, 1, 1, 0, 0]' : 0.0961308}
{'[2, 2, 3, 0, 5, 1, 1, 1, 3, 26, 11, 0, 1, 0, 1, 1, 0, 0]' : 0.0960732}
{'[2, 2, 3, 0, 5, 1, 1, 1, 3, 26, 11, 0, 1, 0, 1, 1, 0, 0]' : 0.0964799}
{'[2, 2, 3, 0, 5, 1, 1, 1, 3, 26, 11, 0, 1, 0, 1, 1, 0, 0]' : 0.096148}
{'[2, 2, 3, 0, 5, 1, 1, 1, 3, 26, 11, 0, 1, 0, 1, 1, 0, 0]' : 0.0963221}
{'[2, 2, 3, 0, 5, 1, 1, 1, 3, 26, 11, 0, 1, 0, 1, 1, 0, 0]' : 0.0960801}
{'[2, 2, 3, 0, 5, 1, 1, 1, 3, 26, 11, 0, 1, 0, 1, 1, 0, 0]' : 0.0964348}

out:
 ["{'[2, 2, 3, 0, 5, 1, 1, 1, 3, 26, 11, 0, 1, 0, 1, 1, 0, 0]' : 0.11194}", "{'[2, 2, 3, 0, 5, 1, 1, 1, 3, 26, 11, 0, 1, 0, 1, 1, 0, 0]' : 0.11191}", "{'[2, 2, 3, 0, 5, 1, 1, 1, 3, 26, 11, 0, 1, 0, 1, 1, 0, 0]' : 0.111883}", "{'[2, 2, 3, 0, 5, 1, 1, 1, 3, 26, 11, 0, 1, 0, 1, 1, 0, 0]' : 0.1119}", "{'[2, 2, 3, 0, 5, 1, 1, 1, 3, 26, 11, 0, 1, 0, 1, 1, 0, 0]' : 0.109169}", "{'[2, 2, 3, 0, 5, 1, 1, 1, 3, 26, 11, 0, 1, 0, 1, 1, 0, 0]' : 0.0965991}", "{'[2, 2, 3, 0, 5, 1, 1, 1, 3, 26, 11, 0, 1, 0, 1, 1, 0, 0]' : 0.0963039}", "{'[2, 2, 3, 0, 5, 1, 1, 1, 3, 26, 11, 0, 1, 0, 1, 1, 0, 0]' : 0.0963581}", "{'[2, 2, 3, 0, 5, 1, 1, 1, 3, 26, 11, 0, 1, 0, 1, 1, 0, 0]' : 0.096391}", "{'[2, 2, 3, 0, 5, 1, 1, 1, 3, 26, 11, 0, 1, 0, 1, 1, 0, 0]' : 0.0965731}", "{'[2, 2, 3, 0, 5, 1, 1, 1, 3, 26, 11, 0, 1, 0, 1, 1, 0, 0]' : 0.096092}", "{'[2, 2, 3, 0, 5, 1, 1, 1, 3, 26, 11, 0, 1, 0, 1, 1, 0, 0]' : 0.0961571}", "{'[2, 2, 3, 0, 5, 1, 1, 1, 3, 26, 11, 0, 1, 0, 1, 1, 0, 0]' : 0.0963399}", "{'[2, 2, 3, 0, 5, 1, 1, 1, 3, 26, 11, 0, 1, 0, 1, 1, 0, 0]' : 0.0962589}", "{'[2, 2, 3, 0, 5, 1, 1, 1, 3, 26, 11, 0, 1, 0, 1, 1, 0, 0]' : 0.0961628}", "{'[2, 2, 3, 0, 5, 1, 1, 1, 3, 26, 11, 0, 1, 0, 1, 1, 0, 0]' : 0.096209}", "{'[2, 2, 3, 0, 5, 1, 1, 1, 3, 26, 11, 0, 1, 0, 1, 1, 0, 0]' : 0.096184}", "{'[2, 2, 3, 0, 5, 1, 1, 1, 3, 26, 11, 0, 1, 0, 1, 1, 0, 0]' : 0.0963922}", "{'[2, 2, 3, 0, 5, 1, 1, 1, 3, 26, 11, 0, 1, 0, 1, 1, 0, 0]' : 0.096092}", "{'[2, 2, 3, 0, 5, 1, 1, 1, 3, 26, 11, 0, 1, 0, 1, 1, 0, 0]' : 0.0966609}", "{'[2, 2, 3, 0, 5, 1, 1, 1, 3, 26, 11, 0, 1, 0, 1, 1, 0, 0]' : 0.0962641}", "{'[2, 2, 3, 0, 5, 1, 1, 1, 3, 26, 11, 0, 1, 0, 1, 1, 0, 0]' : 0.096365}", "{'[2, 2, 3, 0, 5, 1, 1, 1, 3, 26, 11, 0, 1, 0, 1, 1, 0, 0]' : 0.0961661}", "{'[2, 2, 3, 0, 5, 1, 1, 1, 3, 26, 11, 0, 1, 0, 1, 1, 0, 0]' : 0.0961308}", "{'[2, 2, 3, 0, 5, 1, 1, 1, 3, 26, 11, 0, 1, 0, 1, 1, 0, 0]' : 0.0960732}", "{'[2, 2, 3, 0, 5, 1, 1, 1, 3, 26, 11, 0, 1, 0, 1, 1, 0, 0]' : 0.0964799}", "{'[2, 2, 3, 0, 5, 1, 1, 1, 3, 26, 11, 0, 1, 0, 1, 1, 0, 0]' : 0.096148}", "{'[2, 2, 3, 0, 5, 1, 1, 1, 3, 26, 11, 0, 1, 0, 1, 1, 0, 0]' : 0.0963221}", "{'[2, 2, 3, 0, 5, 1, 1, 1, 3, 26, 11, 0, 1, 0, 1, 1, 0, 0]' : 0.0960801}", "{'[2, 2, 3, 0, 5, 1, 1, 1, 3, 26, 11, 0, 1, 0, 1, 1, 0, 0]' : 0.0964348}"]
returning from 'run': {'[2, 2, 3, 0, 5, 1, 1, 1, 3, 26, 11, 0, 1, 0, 1, 1, 0, 0]': ([0.11194, 0.11191, 0.111883, 0.1119, 0.109169, 0.0965991, 0.0963039, 0.0963581, 0.096391, 0.0965731, 0.096092, 0.0961571, 0.0963399, 0.0962589, 0.0961628, 0.096209, 0.096184, 0.0963922, 0.096092, 0.0966609, 0.0962641, 0.096365, 0.0961661, 0.0961308, 0.0960732, 0.0964799, 0.096148, 0.0963221, 0.0960801, 0.0964348], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 2, 3, 0, 5, 1, 1, 1, 3, 26, 11, 0, 1, 0, 1, 1, 0, 0]': ([0.11194, 0.11191, 0.111883, 0.1119, 0.109169, 0.0965991, 0.0963039, 0.0963581, 0.096391, 0.0965731, 0.096092, 0.0961571, 0.0963399, 0.0962589, 0.0961628, 0.096209, 0.096184, 0.0963922, 0.096092, 0.0966609, 0.0962641, 0.096365, 0.0961661, 0.0961308, 0.0960732, 0.0964799, 0.096148, 0.0963221, 0.0960801, 0.0964348], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	5
        Additions: 		311
        Multiplications: 	72
        Divisions: 		0
        Logical: 		0
        Reads: 			602
        Writes: 		132
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest28.exe __orio_perftest28.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest28.exe  
Program Test Output: 
{'[3, 2, 6, 0, 5, 6, 1, 0, 27, 1, 9, 0, 0, 0, 0, 1, 1, 0]' : 0.200501}
{'[3, 2, 6, 0, 5, 6, 1, 0, 27, 1, 9, 0, 0, 0, 0, 1, 1, 0]' : 0.200717}
{'[3, 2, 6, 0, 5, 6, 1, 0, 27, 1, 9, 0, 0, 0, 0, 1, 1, 0]' : 0.187336}
{'[3, 2, 6, 0, 5, 6, 1, 0, 27, 1, 9, 0, 0, 0, 0, 1, 1, 0]' : 0.169479}
{'[3, 2, 6, 0, 5, 6, 1, 0, 27, 1, 9, 0, 0, 0, 0, 1, 1, 0]' : 0.170078}
{'[3, 2, 6, 0, 5, 6, 1, 0, 27, 1, 9, 0, 0, 0, 0, 1, 1, 0]' : 0.169507}
{'[3, 2, 6, 0, 5, 6, 1, 0, 27, 1, 9, 0, 0, 0, 0, 1, 1, 0]' : 0.169474}
{'[3, 2, 6, 0, 5, 6, 1, 0, 27, 1, 9, 0, 0, 0, 0, 1, 1, 0]' : 0.169531}
{'[3, 2, 6, 0, 5, 6, 1, 0, 27, 1, 9, 0, 0, 0, 0, 1, 1, 0]' : 0.169411}
{'[3, 2, 6, 0, 5, 6, 1, 0, 27, 1, 9, 0, 0, 0, 0, 1, 1, 0]' : 0.169455}
{'[3, 2, 6, 0, 5, 6, 1, 0, 27, 1, 9, 0, 0, 0, 0, 1, 1, 0]' : 0.169546}
{'[3, 2, 6, 0, 5, 6, 1, 0, 27, 1, 9, 0, 0, 0, 0, 1, 1, 0]' : 0.169844}
{'[3, 2, 6, 0, 5, 6, 1, 0, 27, 1, 9, 0, 0, 0, 0, 1, 1, 0]' : 0.169453}
{'[3, 2, 6, 0, 5, 6, 1, 0, 27, 1, 9, 0, 0, 0, 0, 1, 1, 0]' : 0.169381}
{'[3, 2, 6, 0, 5, 6, 1, 0, 27, 1, 9, 0, 0, 0, 0, 1, 1, 0]' : 0.169513}
{'[3, 2, 6, 0, 5, 6, 1, 0, 27, 1, 9, 0, 0, 0, 0, 1, 1, 0]' : 0.169391}
{'[3, 2, 6, 0, 5, 6, 1, 0, 27, 1, 9, 0, 0, 0, 0, 1, 1, 0]' : 0.169399}
{'[3, 2, 6, 0, 5, 6, 1, 0, 27, 1, 9, 0, 0, 0, 0, 1, 1, 0]' : 0.169702}
{'[3, 2, 6, 0, 5, 6, 1, 0, 27, 1, 9, 0, 0, 0, 0, 1, 1, 0]' : 0.169384}
{'[3, 2, 6, 0, 5, 6, 1, 0, 27, 1, 9, 0, 0, 0, 0, 1, 1, 0]' : 0.169567}
{'[3, 2, 6, 0, 5, 6, 1, 0, 27, 1, 9, 0, 0, 0, 0, 1, 1, 0]' : 0.169548}
{'[3, 2, 6, 0, 5, 6, 1, 0, 27, 1, 9, 0, 0, 0, 0, 1, 1, 0]' : 0.169348}
{'[3, 2, 6, 0, 5, 6, 1, 0, 27, 1, 9, 0, 0, 0, 0, 1, 1, 0]' : 0.169706}
{'[3, 2, 6, 0, 5, 6, 1, 0, 27, 1, 9, 0, 0, 0, 0, 1, 1, 0]' : 0.16968}
{'[3, 2, 6, 0, 5, 6, 1, 0, 27, 1, 9, 0, 0, 0, 0, 1, 1, 0]' : 0.169737}
{'[3, 2, 6, 0, 5, 6, 1, 0, 27, 1, 9, 0, 0, 0, 0, 1, 1, 0]' : 0.169571}
{'[3, 2, 6, 0, 5, 6, 1, 0, 27, 1, 9, 0, 0, 0, 0, 1, 1, 0]' : 0.169558}
{'[3, 2, 6, 0, 5, 6, 1, 0, 27, 1, 9, 0, 0, 0, 0, 1, 1, 0]' : 0.169425}
{'[3, 2, 6, 0, 5, 6, 1, 0, 27, 1, 9, 0, 0, 0, 0, 1, 1, 0]' : 0.169678}
{'[3, 2, 6, 0, 5, 6, 1, 0, 27, 1, 9, 0, 0, 0, 0, 1, 1, 0]' : 0.169439}

out:
 ["{'[3, 2, 6, 0, 5, 6, 1, 0, 27, 1, 9, 0, 0, 0, 0, 1, 1, 0]' : 0.200501}", "{'[3, 2, 6, 0, 5, 6, 1, 0, 27, 1, 9, 0, 0, 0, 0, 1, 1, 0]' : 0.200717}", "{'[3, 2, 6, 0, 5, 6, 1, 0, 27, 1, 9, 0, 0, 0, 0, 1, 1, 0]' : 0.187336}", "{'[3, 2, 6, 0, 5, 6, 1, 0, 27, 1, 9, 0, 0, 0, 0, 1, 1, 0]' : 0.169479}", "{'[3, 2, 6, 0, 5, 6, 1, 0, 27, 1, 9, 0, 0, 0, 0, 1, 1, 0]' : 0.170078}", "{'[3, 2, 6, 0, 5, 6, 1, 0, 27, 1, 9, 0, 0, 0, 0, 1, 1, 0]' : 0.169507}", "{'[3, 2, 6, 0, 5, 6, 1, 0, 27, 1, 9, 0, 0, 0, 0, 1, 1, 0]' : 0.169474}", "{'[3, 2, 6, 0, 5, 6, 1, 0, 27, 1, 9, 0, 0, 0, 0, 1, 1, 0]' : 0.169531}", "{'[3, 2, 6, 0, 5, 6, 1, 0, 27, 1, 9, 0, 0, 0, 0, 1, 1, 0]' : 0.169411}", "{'[3, 2, 6, 0, 5, 6, 1, 0, 27, 1, 9, 0, 0, 0, 0, 1, 1, 0]' : 0.169455}", "{'[3, 2, 6, 0, 5, 6, 1, 0, 27, 1, 9, 0, 0, 0, 0, 1, 1, 0]' : 0.169546}", "{'[3, 2, 6, 0, 5, 6, 1, 0, 27, 1, 9, 0, 0, 0, 0, 1, 1, 0]' : 0.169844}", "{'[3, 2, 6, 0, 5, 6, 1, 0, 27, 1, 9, 0, 0, 0, 0, 1, 1, 0]' : 0.169453}", "{'[3, 2, 6, 0, 5, 6, 1, 0, 27, 1, 9, 0, 0, 0, 0, 1, 1, 0]' : 0.169381}", "{'[3, 2, 6, 0, 5, 6, 1, 0, 27, 1, 9, 0, 0, 0, 0, 1, 1, 0]' : 0.169513}", "{'[3, 2, 6, 0, 5, 6, 1, 0, 27, 1, 9, 0, 0, 0, 0, 1, 1, 0]' : 0.169391}", "{'[3, 2, 6, 0, 5, 6, 1, 0, 27, 1, 9, 0, 0, 0, 0, 1, 1, 0]' : 0.169399}", "{'[3, 2, 6, 0, 5, 6, 1, 0, 27, 1, 9, 0, 0, 0, 0, 1, 1, 0]' : 0.169702}", "{'[3, 2, 6, 0, 5, 6, 1, 0, 27, 1, 9, 0, 0, 0, 0, 1, 1, 0]' : 0.169384}", "{'[3, 2, 6, 0, 5, 6, 1, 0, 27, 1, 9, 0, 0, 0, 0, 1, 1, 0]' : 0.169567}", "{'[3, 2, 6, 0, 5, 6, 1, 0, 27, 1, 9, 0, 0, 0, 0, 1, 1, 0]' : 0.169548}", "{'[3, 2, 6, 0, 5, 6, 1, 0, 27, 1, 9, 0, 0, 0, 0, 1, 1, 0]' : 0.169348}", "{'[3, 2, 6, 0, 5, 6, 1, 0, 27, 1, 9, 0, 0, 0, 0, 1, 1, 0]' : 0.169706}", "{'[3, 2, 6, 0, 5, 6, 1, 0, 27, 1, 9, 0, 0, 0, 0, 1, 1, 0]' : 0.16968}", "{'[3, 2, 6, 0, 5, 6, 1, 0, 27, 1, 9, 0, 0, 0, 0, 1, 1, 0]' : 0.169737}", "{'[3, 2, 6, 0, 5, 6, 1, 0, 27, 1, 9, 0, 0, 0, 0, 1, 1, 0]' : 0.169571}", "{'[3, 2, 6, 0, 5, 6, 1, 0, 27, 1, 9, 0, 0, 0, 0, 1, 1, 0]' : 0.169558}", "{'[3, 2, 6, 0, 5, 6, 1, 0, 27, 1, 9, 0, 0, 0, 0, 1, 1, 0]' : 0.169425}", "{'[3, 2, 6, 0, 5, 6, 1, 0, 27, 1, 9, 0, 0, 0, 0, 1, 1, 0]' : 0.169678}", "{'[3, 2, 6, 0, 5, 6, 1, 0, 27, 1, 9, 0, 0, 0, 0, 1, 1, 0]' : 0.169439}"]
returning from 'run': {'[3, 2, 6, 0, 5, 6, 1, 0, 27, 1, 9, 0, 0, 0, 0, 1, 1, 0]': ([0.200501, 0.200717, 0.187336, 0.169479, 0.170078, 0.169507, 0.169474, 0.169531, 0.169411, 0.169455, 0.169546, 0.169844, 0.169453, 0.169381, 0.169513, 0.169391, 0.169399, 0.169702, 0.169384, 0.169567, 0.169548, 0.169348, 0.169706, 0.16968, 0.169737, 0.169571, 0.169558, 0.169425, 0.169678, 0.169439], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 2, 6, 0, 5, 6, 1, 0, 27, 1, 9, 0, 0, 0, 0, 1, 1, 0]': ([0.200501, 0.200717, 0.187336, 0.169479, 0.170078, 0.169507, 0.169474, 0.169531, 0.169411, 0.169455, 0.169546, 0.169844, 0.169453, 0.169381, 0.169513, 0.169391, 0.169399, 0.169702, 0.169384, 0.169567, 0.169548, 0.169348, 0.169706, 0.16968, 0.169737, 0.169571, 0.169558, 0.169425, 0.169678, 0.169439], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	5
        Additions: 		337
        Multiplications: 	120
        Divisions: 		0
        Logical: 		0
        Reads: 			739
        Writes: 		98
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest29.exe __orio_perftest29.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest29.exe  
Program Test Output: 
{'[4, 6, 0, 3, 0, 0, 1, 1, 3, 0, 29, 27, 0, 0, 0, 0, 1, 1]' : 0.209571}
{'[4, 6, 0, 3, 0, 0, 1, 1, 3, 0, 29, 27, 0, 0, 0, 0, 1, 1]' : 0.211395}
{'[4, 6, 0, 3, 0, 0, 1, 1, 3, 0, 29, 27, 0, 0, 0, 0, 1, 1]' : 0.211128}
{'[4, 6, 0, 3, 0, 0, 1, 1, 3, 0, 29, 27, 0, 0, 0, 0, 1, 1]' : 0.181008}
{'[4, 6, 0, 3, 0, 0, 1, 1, 3, 0, 29, 27, 0, 0, 0, 0, 1, 1]' : 0.177612}
{'[4, 6, 0, 3, 0, 0, 1, 1, 3, 0, 29, 27, 0, 0, 0, 0, 1, 1]' : 0.177372}
{'[4, 6, 0, 3, 0, 0, 1, 1, 3, 0, 29, 27, 0, 0, 0, 0, 1, 1]' : 0.177807}
{'[4, 6, 0, 3, 0, 0, 1, 1, 3, 0, 29, 27, 0, 0, 0, 0, 1, 1]' : 0.177787}
{'[4, 6, 0, 3, 0, 0, 1, 1, 3, 0, 29, 27, 0, 0, 0, 0, 1, 1]' : 0.177795}
{'[4, 6, 0, 3, 0, 0, 1, 1, 3, 0, 29, 27, 0, 0, 0, 0, 1, 1]' : 0.177868}
{'[4, 6, 0, 3, 0, 0, 1, 1, 3, 0, 29, 27, 0, 0, 0, 0, 1, 1]' : 0.177738}
{'[4, 6, 0, 3, 0, 0, 1, 1, 3, 0, 29, 27, 0, 0, 0, 0, 1, 1]' : 0.177631}
{'[4, 6, 0, 3, 0, 0, 1, 1, 3, 0, 29, 27, 0, 0, 0, 0, 1, 1]' : 0.17776}
{'[4, 6, 0, 3, 0, 0, 1, 1, 3, 0, 29, 27, 0, 0, 0, 0, 1, 1]' : 0.177822}
{'[4, 6, 0, 3, 0, 0, 1, 1, 3, 0, 29, 27, 0, 0, 0, 0, 1, 1]' : 0.177914}
{'[4, 6, 0, 3, 0, 0, 1, 1, 3, 0, 29, 27, 0, 0, 0, 0, 1, 1]' : 0.177929}
{'[4, 6, 0, 3, 0, 0, 1, 1, 3, 0, 29, 27, 0, 0, 0, 0, 1, 1]' : 0.177967}
{'[4, 6, 0, 3, 0, 0, 1, 1, 3, 0, 29, 27, 0, 0, 0, 0, 1, 1]' : 0.177732}
{'[4, 6, 0, 3, 0, 0, 1, 1, 3, 0, 29, 27, 0, 0, 0, 0, 1, 1]' : 0.177785}
{'[4, 6, 0, 3, 0, 0, 1, 1, 3, 0, 29, 27, 0, 0, 0, 0, 1, 1]' : 0.177761}
{'[4, 6, 0, 3, 0, 0, 1, 1, 3, 0, 29, 27, 0, 0, 0, 0, 1, 1]' : 0.177659}
{'[4, 6, 0, 3, 0, 0, 1, 1, 3, 0, 29, 27, 0, 0, 0, 0, 1, 1]' : 0.177839}
{'[4, 6, 0, 3, 0, 0, 1, 1, 3, 0, 29, 27, 0, 0, 0, 0, 1, 1]' : 0.178463}
{'[4, 6, 0, 3, 0, 0, 1, 1, 3, 0, 29, 27, 0, 0, 0, 0, 1, 1]' : 0.177848}
{'[4, 6, 0, 3, 0, 0, 1, 1, 3, 0, 29, 27, 0, 0, 0, 0, 1, 1]' : 0.177752}
{'[4, 6, 0, 3, 0, 0, 1, 1, 3, 0, 29, 27, 0, 0, 0, 0, 1, 1]' : 0.177701}
{'[4, 6, 0, 3, 0, 0, 1, 1, 3, 0, 29, 27, 0, 0, 0, 0, 1, 1]' : 0.177748}
{'[4, 6, 0, 3, 0, 0, 1, 1, 3, 0, 29, 27, 0, 0, 0, 0, 1, 1]' : 0.177801}
{'[4, 6, 0, 3, 0, 0, 1, 1, 3, 0, 29, 27, 0, 0, 0, 0, 1, 1]' : 0.178025}
{'[4, 6, 0, 3, 0, 0, 1, 1, 3, 0, 29, 27, 0, 0, 0, 0, 1, 1]' : 0.177699}

out:
 ["{'[4, 6, 0, 3, 0, 0, 1, 1, 3, 0, 29, 27, 0, 0, 0, 0, 1, 1]' : 0.209571}", "{'[4, 6, 0, 3, 0, 0, 1, 1, 3, 0, 29, 27, 0, 0, 0, 0, 1, 1]' : 0.211395}", "{'[4, 6, 0, 3, 0, 0, 1, 1, 3, 0, 29, 27, 0, 0, 0, 0, 1, 1]' : 0.211128}", "{'[4, 6, 0, 3, 0, 0, 1, 1, 3, 0, 29, 27, 0, 0, 0, 0, 1, 1]' : 0.181008}", "{'[4, 6, 0, 3, 0, 0, 1, 1, 3, 0, 29, 27, 0, 0, 0, 0, 1, 1]' : 0.177612}", "{'[4, 6, 0, 3, 0, 0, 1, 1, 3, 0, 29, 27, 0, 0, 0, 0, 1, 1]' : 0.177372}", "{'[4, 6, 0, 3, 0, 0, 1, 1, 3, 0, 29, 27, 0, 0, 0, 0, 1, 1]' : 0.177807}", "{'[4, 6, 0, 3, 0, 0, 1, 1, 3, 0, 29, 27, 0, 0, 0, 0, 1, 1]' : 0.177787}", "{'[4, 6, 0, 3, 0, 0, 1, 1, 3, 0, 29, 27, 0, 0, 0, 0, 1, 1]' : 0.177795}", "{'[4, 6, 0, 3, 0, 0, 1, 1, 3, 0, 29, 27, 0, 0, 0, 0, 1, 1]' : 0.177868}", "{'[4, 6, 0, 3, 0, 0, 1, 1, 3, 0, 29, 27, 0, 0, 0, 0, 1, 1]' : 0.177738}", "{'[4, 6, 0, 3, 0, 0, 1, 1, 3, 0, 29, 27, 0, 0, 0, 0, 1, 1]' : 0.177631}", "{'[4, 6, 0, 3, 0, 0, 1, 1, 3, 0, 29, 27, 0, 0, 0, 0, 1, 1]' : 0.17776}", "{'[4, 6, 0, 3, 0, 0, 1, 1, 3, 0, 29, 27, 0, 0, 0, 0, 1, 1]' : 0.177822}", "{'[4, 6, 0, 3, 0, 0, 1, 1, 3, 0, 29, 27, 0, 0, 0, 0, 1, 1]' : 0.177914}", "{'[4, 6, 0, 3, 0, 0, 1, 1, 3, 0, 29, 27, 0, 0, 0, 0, 1, 1]' : 0.177929}", "{'[4, 6, 0, 3, 0, 0, 1, 1, 3, 0, 29, 27, 0, 0, 0, 0, 1, 1]' : 0.177967}", "{'[4, 6, 0, 3, 0, 0, 1, 1, 3, 0, 29, 27, 0, 0, 0, 0, 1, 1]' : 0.177732}", "{'[4, 6, 0, 3, 0, 0, 1, 1, 3, 0, 29, 27, 0, 0, 0, 0, 1, 1]' : 0.177785}", "{'[4, 6, 0, 3, 0, 0, 1, 1, 3, 0, 29, 27, 0, 0, 0, 0, 1, 1]' : 0.177761}", "{'[4, 6, 0, 3, 0, 0, 1, 1, 3, 0, 29, 27, 0, 0, 0, 0, 1, 1]' : 0.177659}", "{'[4, 6, 0, 3, 0, 0, 1, 1, 3, 0, 29, 27, 0, 0, 0, 0, 1, 1]' : 0.177839}", "{'[4, 6, 0, 3, 0, 0, 1, 1, 3, 0, 29, 27, 0, 0, 0, 0, 1, 1]' : 0.178463}", "{'[4, 6, 0, 3, 0, 0, 1, 1, 3, 0, 29, 27, 0, 0, 0, 0, 1, 1]' : 0.177848}", "{'[4, 6, 0, 3, 0, 0, 1, 1, 3, 0, 29, 27, 0, 0, 0, 0, 1, 1]' : 0.177752}", "{'[4, 6, 0, 3, 0, 0, 1, 1, 3, 0, 29, 27, 0, 0, 0, 0, 1, 1]' : 0.177701}", "{'[4, 6, 0, 3, 0, 0, 1, 1, 3, 0, 29, 27, 0, 0, 0, 0, 1, 1]' : 0.177748}", "{'[4, 6, 0, 3, 0, 0, 1, 1, 3, 0, 29, 27, 0, 0, 0, 0, 1, 1]' : 0.177801}", "{'[4, 6, 0, 3, 0, 0, 1, 1, 3, 0, 29, 27, 0, 0, 0, 0, 1, 1]' : 0.178025}", "{'[4, 6, 0, 3, 0, 0, 1, 1, 3, 0, 29, 27, 0, 0, 0, 0, 1, 1]' : 0.177699}"]
returning from 'run': {'[4, 6, 0, 3, 0, 0, 1, 1, 3, 0, 29, 27, 0, 0, 0, 0, 1, 1]': ([0.209571, 0.211395, 0.211128, 0.181008, 0.177612, 0.177372, 0.177807, 0.177787, 0.177795, 0.177868, 0.177738, 0.177631, 0.17776, 0.177822, 0.177914, 0.177929, 0.177967, 0.177732, 0.177785, 0.177761, 0.177659, 0.177839, 0.178463, 0.177848, 0.177752, 0.177701, 0.177748, 0.177801, 0.178025, 0.177699], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 6, 0, 3, 0, 0, 1, 1, 3, 0, 29, 27, 0, 0, 0, 0, 1, 1]': ([0.209571, 0.211395, 0.211128, 0.181008, 0.177612, 0.177372, 0.177807, 0.177787, 0.177795, 0.177868, 0.177738, 0.177631, 0.17776, 0.177822, 0.177914, 0.177929, 0.177967, 0.177732, 0.177785, 0.177761, 0.177659, 0.177839, 0.178463, 0.177848, 0.177752, 0.177701, 0.177748, 0.177801, 0.178025, 0.177699], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
Code stats:
        Number of loops: 	27
        Max loop nest depth: 	5
        Additions: 		8360
        Multiplications: 	2494
        Divisions: 		0
        Logical: 		0
        Reads: 			12771
        Writes: 		1357
        Comparisons:		27
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest30.exe __orio_perftest30.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest30.exe  
Program Test Output: 
{'[6, 1, 3, 4, 6, 5, 0, 0, 27, 9, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.187183}
{'[6, 1, 3, 4, 6, 5, 0, 0, 27, 9, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.187221}
{'[6, 1, 3, 4, 6, 5, 0, 0, 27, 9, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.186872}
{'[6, 1, 3, 4, 6, 5, 0, 0, 27, 9, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.187533}
{'[6, 1, 3, 4, 6, 5, 0, 0, 27, 9, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.187893}
{'[6, 1, 3, 4, 6, 5, 0, 0, 27, 9, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.187566}
{'[6, 1, 3, 4, 6, 5, 0, 0, 27, 9, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.187366}
{'[6, 1, 3, 4, 6, 5, 0, 0, 27, 9, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.187099}
{'[6, 1, 3, 4, 6, 5, 0, 0, 27, 9, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.187827}
{'[6, 1, 3, 4, 6, 5, 0, 0, 27, 9, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.187779}
{'[6, 1, 3, 4, 6, 5, 0, 0, 27, 9, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.18791}
{'[6, 1, 3, 4, 6, 5, 0, 0, 27, 9, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.187962}
{'[6, 1, 3, 4, 6, 5, 0, 0, 27, 9, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.187885}
{'[6, 1, 3, 4, 6, 5, 0, 0, 27, 9, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.187345}
{'[6, 1, 3, 4, 6, 5, 0, 0, 27, 9, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.187123}
{'[6, 1, 3, 4, 6, 5, 0, 0, 27, 9, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.1879}
{'[6, 1, 3, 4, 6, 5, 0, 0, 27, 9, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.187643}
{'[6, 1, 3, 4, 6, 5, 0, 0, 27, 9, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.18809}
{'[6, 1, 3, 4, 6, 5, 0, 0, 27, 9, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.187141}
{'[6, 1, 3, 4, 6, 5, 0, 0, 27, 9, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.187522}
{'[6, 1, 3, 4, 6, 5, 0, 0, 27, 9, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.188255}
{'[6, 1, 3, 4, 6, 5, 0, 0, 27, 9, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.188264}
{'[6, 1, 3, 4, 6, 5, 0, 0, 27, 9, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.188029}
{'[6, 1, 3, 4, 6, 5, 0, 0, 27, 9, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.1886}
{'[6, 1, 3, 4, 6, 5, 0, 0, 27, 9, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.189045}
{'[6, 1, 3, 4, 6, 5, 0, 0, 27, 9, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.187439}
{'[6, 1, 3, 4, 6, 5, 0, 0, 27, 9, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.188477}
{'[6, 1, 3, 4, 6, 5, 0, 0, 27, 9, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.187422}
{'[6, 1, 3, 4, 6, 5, 0, 0, 27, 9, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.188299}
{'[6, 1, 3, 4, 6, 5, 0, 0, 27, 9, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.188302}

out:
 ["{'[6, 1, 3, 4, 6, 5, 0, 0, 27, 9, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.187183}", "{'[6, 1, 3, 4, 6, 5, 0, 0, 27, 9, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.187221}", "{'[6, 1, 3, 4, 6, 5, 0, 0, 27, 9, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.186872}", "{'[6, 1, 3, 4, 6, 5, 0, 0, 27, 9, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.187533}", "{'[6, 1, 3, 4, 6, 5, 0, 0, 27, 9, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.187893}", "{'[6, 1, 3, 4, 6, 5, 0, 0, 27, 9, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.187566}", "{'[6, 1, 3, 4, 6, 5, 0, 0, 27, 9, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.187366}", "{'[6, 1, 3, 4, 6, 5, 0, 0, 27, 9, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.187099}", "{'[6, 1, 3, 4, 6, 5, 0, 0, 27, 9, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.187827}", "{'[6, 1, 3, 4, 6, 5, 0, 0, 27, 9, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.187779}", "{'[6, 1, 3, 4, 6, 5, 0, 0, 27, 9, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.18791}", "{'[6, 1, 3, 4, 6, 5, 0, 0, 27, 9, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.187962}", "{'[6, 1, 3, 4, 6, 5, 0, 0, 27, 9, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.187885}", "{'[6, 1, 3, 4, 6, 5, 0, 0, 27, 9, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.187345}", "{'[6, 1, 3, 4, 6, 5, 0, 0, 27, 9, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.187123}", "{'[6, 1, 3, 4, 6, 5, 0, 0, 27, 9, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.1879}", "{'[6, 1, 3, 4, 6, 5, 0, 0, 27, 9, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.187643}", "{'[6, 1, 3, 4, 6, 5, 0, 0, 27, 9, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.18809}", "{'[6, 1, 3, 4, 6, 5, 0, 0, 27, 9, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.187141}", "{'[6, 1, 3, 4, 6, 5, 0, 0, 27, 9, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.187522}", "{'[6, 1, 3, 4, 6, 5, 0, 0, 27, 9, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.188255}", "{'[6, 1, 3, 4, 6, 5, 0, 0, 27, 9, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.188264}", "{'[6, 1, 3, 4, 6, 5, 0, 0, 27, 9, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.188029}", "{'[6, 1, 3, 4, 6, 5, 0, 0, 27, 9, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.1886}", "{'[6, 1, 3, 4, 6, 5, 0, 0, 27, 9, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.189045}", "{'[6, 1, 3, 4, 6, 5, 0, 0, 27, 9, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.187439}", "{'[6, 1, 3, 4, 6, 5, 0, 0, 27, 9, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.188477}", "{'[6, 1, 3, 4, 6, 5, 0, 0, 27, 9, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.187422}", "{'[6, 1, 3, 4, 6, 5, 0, 0, 27, 9, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.188299}", "{'[6, 1, 3, 4, 6, 5, 0, 0, 27, 9, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.188302}"]
returning from 'run': {'[6, 1, 3, 4, 6, 5, 0, 0, 27, 9, 0, 26, 2, 0, 0, 0, 1, 1]': ([0.187183, 0.187221, 0.186872, 0.187533, 0.187893, 0.187566, 0.187366, 0.187099, 0.187827, 0.187779, 0.18791, 0.187962, 0.187885, 0.187345, 0.187123, 0.1879, 0.187643, 0.18809, 0.187141, 0.187522, 0.188255, 0.188264, 0.188029, 0.1886, 0.189045, 0.187439, 0.188477, 0.187422, 0.188299, 0.188302], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 1, 3, 4, 6, 5, 0, 0, 27, 9, 0, 26, 2, 0, 0, 0, 1, 1]': ([0.187183, 0.187221, 0.186872, 0.187533, 0.187893, 0.187566, 0.187366, 0.187099, 0.187827, 0.187779, 0.18791, 0.187962, 0.187885, 0.187345, 0.187123, 0.1879, 0.187643, 0.18809, 0.187141, 0.187522, 0.188255, 0.188264, 0.188029, 0.1886, 0.189045, 0.187439, 0.188477, 0.187422, 0.188299, 0.188302], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	68
        Max loop nest depth: 	5
        Additions: 		2600
        Multiplications: 	576
        Divisions: 		0
        Logical: 		0
        Reads: 			4176
        Writes: 		509
        Comparisons:		68
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest31.exe __orio_perftest31.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest31.exe  
Program Test Output: 
{'[6, 0, 5, 0, 0, 5, 1, 1, 5, 22, 0, 26, 1, 0, 1, 0, 1, 0]' : 0.107567}
{'[6, 0, 5, 0, 0, 5, 1, 1, 5, 22, 0, 26, 1, 0, 1, 0, 1, 0]' : 0.107649}
{'[6, 0, 5, 0, 0, 5, 1, 1, 5, 22, 0, 26, 1, 0, 1, 0, 1, 0]' : 0.107309}
{'[6, 0, 5, 0, 0, 5, 1, 1, 5, 22, 0, 26, 1, 0, 1, 0, 1, 0]' : 0.107327}
{'[6, 0, 5, 0, 0, 5, 1, 1, 5, 22, 0, 26, 1, 0, 1, 0, 1, 0]' : 0.107454}
{'[6, 0, 5, 0, 0, 5, 1, 1, 5, 22, 0, 26, 1, 0, 1, 0, 1, 0]' : 0.107187}
{'[6, 0, 5, 0, 0, 5, 1, 1, 5, 22, 0, 26, 1, 0, 1, 0, 1, 0]' : 0.107101}
{'[6, 0, 5, 0, 0, 5, 1, 1, 5, 22, 0, 26, 1, 0, 1, 0, 1, 0]' : 0.107282}
{'[6, 0, 5, 0, 0, 5, 1, 1, 5, 22, 0, 26, 1, 0, 1, 0, 1, 0]' : 0.107121}
{'[6, 0, 5, 0, 0, 5, 1, 1, 5, 22, 0, 26, 1, 0, 1, 0, 1, 0]' : 0.107178}
{'[6, 0, 5, 0, 0, 5, 1, 1, 5, 22, 0, 26, 1, 0, 1, 0, 1, 0]' : 0.107271}
{'[6, 0, 5, 0, 0, 5, 1, 1, 5, 22, 0, 26, 1, 0, 1, 0, 1, 0]' : 0.107207}
{'[6, 0, 5, 0, 0, 5, 1, 1, 5, 22, 0, 26, 1, 0, 1, 0, 1, 0]' : 0.107264}
{'[6, 0, 5, 0, 0, 5, 1, 1, 5, 22, 0, 26, 1, 0, 1, 0, 1, 0]' : 0.107755}
{'[6, 0, 5, 0, 0, 5, 1, 1, 5, 22, 0, 26, 1, 0, 1, 0, 1, 0]' : 0.107281}
{'[6, 0, 5, 0, 0, 5, 1, 1, 5, 22, 0, 26, 1, 0, 1, 0, 1, 0]' : 0.107423}
{'[6, 0, 5, 0, 0, 5, 1, 1, 5, 22, 0, 26, 1, 0, 1, 0, 1, 0]' : 0.107369}
{'[6, 0, 5, 0, 0, 5, 1, 1, 5, 22, 0, 26, 1, 0, 1, 0, 1, 0]' : 0.107302}
{'[6, 0, 5, 0, 0, 5, 1, 1, 5, 22, 0, 26, 1, 0, 1, 0, 1, 0]' : 0.107247}
{'[6, 0, 5, 0, 0, 5, 1, 1, 5, 22, 0, 26, 1, 0, 1, 0, 1, 0]' : 0.107487}
{'[6, 0, 5, 0, 0, 5, 1, 1, 5, 22, 0, 26, 1, 0, 1, 0, 1, 0]' : 0.107639}
{'[6, 0, 5, 0, 0, 5, 1, 1, 5, 22, 0, 26, 1, 0, 1, 0, 1, 0]' : 0.107132}
{'[6, 0, 5, 0, 0, 5, 1, 1, 5, 22, 0, 26, 1, 0, 1, 0, 1, 0]' : 0.107442}
{'[6, 0, 5, 0, 0, 5, 1, 1, 5, 22, 0, 26, 1, 0, 1, 0, 1, 0]' : 0.107516}
{'[6, 0, 5, 0, 0, 5, 1, 1, 5, 22, 0, 26, 1, 0, 1, 0, 1, 0]' : 0.107173}
{'[6, 0, 5, 0, 0, 5, 1, 1, 5, 22, 0, 26, 1, 0, 1, 0, 1, 0]' : 0.107222}
{'[6, 0, 5, 0, 0, 5, 1, 1, 5, 22, 0, 26, 1, 0, 1, 0, 1, 0]' : 0.107153}
{'[6, 0, 5, 0, 0, 5, 1, 1, 5, 22, 0, 26, 1, 0, 1, 0, 1, 0]' : 0.107296}
{'[6, 0, 5, 0, 0, 5, 1, 1, 5, 22, 0, 26, 1, 0, 1, 0, 1, 0]' : 0.107288}
{'[6, 0, 5, 0, 0, 5, 1, 1, 5, 22, 0, 26, 1, 0, 1, 0, 1, 0]' : 0.10722}

out:
 ["{'[6, 0, 5, 0, 0, 5, 1, 1, 5, 22, 0, 26, 1, 0, 1, 0, 1, 0]' : 0.107567}", "{'[6, 0, 5, 0, 0, 5, 1, 1, 5, 22, 0, 26, 1, 0, 1, 0, 1, 0]' : 0.107649}", "{'[6, 0, 5, 0, 0, 5, 1, 1, 5, 22, 0, 26, 1, 0, 1, 0, 1, 0]' : 0.107309}", "{'[6, 0, 5, 0, 0, 5, 1, 1, 5, 22, 0, 26, 1, 0, 1, 0, 1, 0]' : 0.107327}", "{'[6, 0, 5, 0, 0, 5, 1, 1, 5, 22, 0, 26, 1, 0, 1, 0, 1, 0]' : 0.107454}", "{'[6, 0, 5, 0, 0, 5, 1, 1, 5, 22, 0, 26, 1, 0, 1, 0, 1, 0]' : 0.107187}", "{'[6, 0, 5, 0, 0, 5, 1, 1, 5, 22, 0, 26, 1, 0, 1, 0, 1, 0]' : 0.107101}", "{'[6, 0, 5, 0, 0, 5, 1, 1, 5, 22, 0, 26, 1, 0, 1, 0, 1, 0]' : 0.107282}", "{'[6, 0, 5, 0, 0, 5, 1, 1, 5, 22, 0, 26, 1, 0, 1, 0, 1, 0]' : 0.107121}", "{'[6, 0, 5, 0, 0, 5, 1, 1, 5, 22, 0, 26, 1, 0, 1, 0, 1, 0]' : 0.107178}", "{'[6, 0, 5, 0, 0, 5, 1, 1, 5, 22, 0, 26, 1, 0, 1, 0, 1, 0]' : 0.107271}", "{'[6, 0, 5, 0, 0, 5, 1, 1, 5, 22, 0, 26, 1, 0, 1, 0, 1, 0]' : 0.107207}", "{'[6, 0, 5, 0, 0, 5, 1, 1, 5, 22, 0, 26, 1, 0, 1, 0, 1, 0]' : 0.107264}", "{'[6, 0, 5, 0, 0, 5, 1, 1, 5, 22, 0, 26, 1, 0, 1, 0, 1, 0]' : 0.107755}", "{'[6, 0, 5, 0, 0, 5, 1, 1, 5, 22, 0, 26, 1, 0, 1, 0, 1, 0]' : 0.107281}", "{'[6, 0, 5, 0, 0, 5, 1, 1, 5, 22, 0, 26, 1, 0, 1, 0, 1, 0]' : 0.107423}", "{'[6, 0, 5, 0, 0, 5, 1, 1, 5, 22, 0, 26, 1, 0, 1, 0, 1, 0]' : 0.107369}", "{'[6, 0, 5, 0, 0, 5, 1, 1, 5, 22, 0, 26, 1, 0, 1, 0, 1, 0]' : 0.107302}", "{'[6, 0, 5, 0, 0, 5, 1, 1, 5, 22, 0, 26, 1, 0, 1, 0, 1, 0]' : 0.107247}", "{'[6, 0, 5, 0, 0, 5, 1, 1, 5, 22, 0, 26, 1, 0, 1, 0, 1, 0]' : 0.107487}", "{'[6, 0, 5, 0, 0, 5, 1, 1, 5, 22, 0, 26, 1, 0, 1, 0, 1, 0]' : 0.107639}", "{'[6, 0, 5, 0, 0, 5, 1, 1, 5, 22, 0, 26, 1, 0, 1, 0, 1, 0]' : 0.107132}", "{'[6, 0, 5, 0, 0, 5, 1, 1, 5, 22, 0, 26, 1, 0, 1, 0, 1, 0]' : 0.107442}", "{'[6, 0, 5, 0, 0, 5, 1, 1, 5, 22, 0, 26, 1, 0, 1, 0, 1, 0]' : 0.107516}", "{'[6, 0, 5, 0, 0, 5, 1, 1, 5, 22, 0, 26, 1, 0, 1, 0, 1, 0]' : 0.107173}", "{'[6, 0, 5, 0, 0, 5, 1, 1, 5, 22, 0, 26, 1, 0, 1, 0, 1, 0]' : 0.107222}", "{'[6, 0, 5, 0, 0, 5, 1, 1, 5, 22, 0, 26, 1, 0, 1, 0, 1, 0]' : 0.107153}", "{'[6, 0, 5, 0, 0, 5, 1, 1, 5, 22, 0, 26, 1, 0, 1, 0, 1, 0]' : 0.107296}", "{'[6, 0, 5, 0, 0, 5, 1, 1, 5, 22, 0, 26, 1, 0, 1, 0, 1, 0]' : 0.107288}", "{'[6, 0, 5, 0, 0, 5, 1, 1, 5, 22, 0, 26, 1, 0, 1, 0, 1, 0]' : 0.10722}"]
returning from 'run': {'[6, 0, 5, 0, 0, 5, 1, 1, 5, 22, 0, 26, 1, 0, 1, 0, 1, 0]': ([0.107567, 0.107649, 0.107309, 0.107327, 0.107454, 0.107187, 0.107101, 0.107282, 0.107121, 0.107178, 0.107271, 0.107207, 0.107264, 0.107755, 0.107281, 0.107423, 0.107369, 0.107302, 0.107247, 0.107487, 0.107639, 0.107132, 0.107442, 0.107516, 0.107173, 0.107222, 0.107153, 0.107296, 0.107288, 0.10722], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 5, 0, 0, 5, 1, 1, 5, 22, 0, 26, 1, 0, 1, 0, 1, 0]': ([0.107567, 0.107649, 0.107309, 0.107327, 0.107454, 0.107187, 0.107101, 0.107282, 0.107121, 0.107178, 0.107271, 0.107207, 0.107264, 0.107755, 0.107281, 0.107423, 0.107369, 0.107302, 0.107247, 0.107487, 0.107639, 0.107132, 0.107442, 0.107516, 0.107173, 0.107222, 0.107153, 0.107296, 0.107288, 0.10722], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	6
        Additions: 		7790
        Multiplications: 	3844
        Divisions: 		0
        Logical: 		0
        Reads: 			14371
        Writes: 		2241
        Comparisons:		22
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest32.exe __orio_perftest32.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest32.exe  
Program Test Output: 
{'[2, 2, 5, 6, 5, 4, 0, 0, 28, 29, 0, 27, 0, 2, 0, 1, 1, 0]' : 0.171048}
{'[2, 2, 5, 6, 5, 4, 0, 0, 28, 29, 0, 27, 0, 2, 0, 1, 1, 0]' : 0.171521}
{'[2, 2, 5, 6, 5, 4, 0, 0, 28, 29, 0, 27, 0, 2, 0, 1, 1, 0]' : 0.165606}
{'[2, 2, 5, 6, 5, 4, 0, 0, 28, 29, 0, 27, 0, 2, 0, 1, 1, 0]' : 0.150299}
{'[2, 2, 5, 6, 5, 4, 0, 0, 28, 29, 0, 27, 0, 2, 0, 1, 1, 0]' : 0.149663}
{'[2, 2, 5, 6, 5, 4, 0, 0, 28, 29, 0, 27, 0, 2, 0, 1, 1, 0]' : 0.151241}
{'[2, 2, 5, 6, 5, 4, 0, 0, 28, 29, 0, 27, 0, 2, 0, 1, 1, 0]' : 0.149973}
{'[2, 2, 5, 6, 5, 4, 0, 0, 28, 29, 0, 27, 0, 2, 0, 1, 1, 0]' : 0.149491}
{'[2, 2, 5, 6, 5, 4, 0, 0, 28, 29, 0, 27, 0, 2, 0, 1, 1, 0]' : 0.150025}
{'[2, 2, 5, 6, 5, 4, 0, 0, 28, 29, 0, 27, 0, 2, 0, 1, 1, 0]' : 0.150385}
{'[2, 2, 5, 6, 5, 4, 0, 0, 28, 29, 0, 27, 0, 2, 0, 1, 1, 0]' : 0.150224}
{'[2, 2, 5, 6, 5, 4, 0, 0, 28, 29, 0, 27, 0, 2, 0, 1, 1, 0]' : 0.150043}
{'[2, 2, 5, 6, 5, 4, 0, 0, 28, 29, 0, 27, 0, 2, 0, 1, 1, 0]' : 0.153138}
{'[2, 2, 5, 6, 5, 4, 0, 0, 28, 29, 0, 27, 0, 2, 0, 1, 1, 0]' : 0.153863}
{'[2, 2, 5, 6, 5, 4, 0, 0, 28, 29, 0, 27, 0, 2, 0, 1, 1, 0]' : 0.154089}
{'[2, 2, 5, 6, 5, 4, 0, 0, 28, 29, 0, 27, 0, 2, 0, 1, 1, 0]' : 0.153808}
{'[2, 2, 5, 6, 5, 4, 0, 0, 28, 29, 0, 27, 0, 2, 0, 1, 1, 0]' : 0.153793}
{'[2, 2, 5, 6, 5, 4, 0, 0, 28, 29, 0, 27, 0, 2, 0, 1, 1, 0]' : 0.153453}
{'[2, 2, 5, 6, 5, 4, 0, 0, 28, 29, 0, 27, 0, 2, 0, 1, 1, 0]' : 0.153821}
{'[2, 2, 5, 6, 5, 4, 0, 0, 28, 29, 0, 27, 0, 2, 0, 1, 1, 0]' : 0.154153}
{'[2, 2, 5, 6, 5, 4, 0, 0, 28, 29, 0, 27, 0, 2, 0, 1, 1, 0]' : 0.153496}
{'[2, 2, 5, 6, 5, 4, 0, 0, 28, 29, 0, 27, 0, 2, 0, 1, 1, 0]' : 0.153692}
{'[2, 2, 5, 6, 5, 4, 0, 0, 28, 29, 0, 27, 0, 2, 0, 1, 1, 0]' : 0.153841}
{'[2, 2, 5, 6, 5, 4, 0, 0, 28, 29, 0, 27, 0, 2, 0, 1, 1, 0]' : 0.154258}
{'[2, 2, 5, 6, 5, 4, 0, 0, 28, 29, 0, 27, 0, 2, 0, 1, 1, 0]' : 0.153858}
{'[2, 2, 5, 6, 5, 4, 0, 0, 28, 29, 0, 27, 0, 2, 0, 1, 1, 0]' : 0.153945}
{'[2, 2, 5, 6, 5, 4, 0, 0, 28, 29, 0, 27, 0, 2, 0, 1, 1, 0]' : 0.15418}
{'[2, 2, 5, 6, 5, 4, 0, 0, 28, 29, 0, 27, 0, 2, 0, 1, 1, 0]' : 0.153363}
{'[2, 2, 5, 6, 5, 4, 0, 0, 28, 29, 0, 27, 0, 2, 0, 1, 1, 0]' : 0.154164}
{'[2, 2, 5, 6, 5, 4, 0, 0, 28, 29, 0, 27, 0, 2, 0, 1, 1, 0]' : 0.154511}

out:
 ["{'[2, 2, 5, 6, 5, 4, 0, 0, 28, 29, 0, 27, 0, 2, 0, 1, 1, 0]' : 0.171048}", "{'[2, 2, 5, 6, 5, 4, 0, 0, 28, 29, 0, 27, 0, 2, 0, 1, 1, 0]' : 0.171521}", "{'[2, 2, 5, 6, 5, 4, 0, 0, 28, 29, 0, 27, 0, 2, 0, 1, 1, 0]' : 0.165606}", "{'[2, 2, 5, 6, 5, 4, 0, 0, 28, 29, 0, 27, 0, 2, 0, 1, 1, 0]' : 0.150299}", "{'[2, 2, 5, 6, 5, 4, 0, 0, 28, 29, 0, 27, 0, 2, 0, 1, 1, 0]' : 0.149663}", "{'[2, 2, 5, 6, 5, 4, 0, 0, 28, 29, 0, 27, 0, 2, 0, 1, 1, 0]' : 0.151241}", "{'[2, 2, 5, 6, 5, 4, 0, 0, 28, 29, 0, 27, 0, 2, 0, 1, 1, 0]' : 0.149973}", "{'[2, 2, 5, 6, 5, 4, 0, 0, 28, 29, 0, 27, 0, 2, 0, 1, 1, 0]' : 0.149491}", "{'[2, 2, 5, 6, 5, 4, 0, 0, 28, 29, 0, 27, 0, 2, 0, 1, 1, 0]' : 0.150025}", "{'[2, 2, 5, 6, 5, 4, 0, 0, 28, 29, 0, 27, 0, 2, 0, 1, 1, 0]' : 0.150385}", "{'[2, 2, 5, 6, 5, 4, 0, 0, 28, 29, 0, 27, 0, 2, 0, 1, 1, 0]' : 0.150224}", "{'[2, 2, 5, 6, 5, 4, 0, 0, 28, 29, 0, 27, 0, 2, 0, 1, 1, 0]' : 0.150043}", "{'[2, 2, 5, 6, 5, 4, 0, 0, 28, 29, 0, 27, 0, 2, 0, 1, 1, 0]' : 0.153138}", "{'[2, 2, 5, 6, 5, 4, 0, 0, 28, 29, 0, 27, 0, 2, 0, 1, 1, 0]' : 0.153863}", "{'[2, 2, 5, 6, 5, 4, 0, 0, 28, 29, 0, 27, 0, 2, 0, 1, 1, 0]' : 0.154089}", "{'[2, 2, 5, 6, 5, 4, 0, 0, 28, 29, 0, 27, 0, 2, 0, 1, 1, 0]' : 0.153808}", "{'[2, 2, 5, 6, 5, 4, 0, 0, 28, 29, 0, 27, 0, 2, 0, 1, 1, 0]' : 0.153793}", "{'[2, 2, 5, 6, 5, 4, 0, 0, 28, 29, 0, 27, 0, 2, 0, 1, 1, 0]' : 0.153453}", "{'[2, 2, 5, 6, 5, 4, 0, 0, 28, 29, 0, 27, 0, 2, 0, 1, 1, 0]' : 0.153821}", "{'[2, 2, 5, 6, 5, 4, 0, 0, 28, 29, 0, 27, 0, 2, 0, 1, 1, 0]' : 0.154153}", "{'[2, 2, 5, 6, 5, 4, 0, 0, 28, 29, 0, 27, 0, 2, 0, 1, 1, 0]' : 0.153496}", "{'[2, 2, 5, 6, 5, 4, 0, 0, 28, 29, 0, 27, 0, 2, 0, 1, 1, 0]' : 0.153692}", "{'[2, 2, 5, 6, 5, 4, 0, 0, 28, 29, 0, 27, 0, 2, 0, 1, 1, 0]' : 0.153841}", "{'[2, 2, 5, 6, 5, 4, 0, 0, 28, 29, 0, 27, 0, 2, 0, 1, 1, 0]' : 0.154258}", "{'[2, 2, 5, 6, 5, 4, 0, 0, 28, 29, 0, 27, 0, 2, 0, 1, 1, 0]' : 0.153858}", "{'[2, 2, 5, 6, 5, 4, 0, 0, 28, 29, 0, 27, 0, 2, 0, 1, 1, 0]' : 0.153945}", "{'[2, 2, 5, 6, 5, 4, 0, 0, 28, 29, 0, 27, 0, 2, 0, 1, 1, 0]' : 0.15418}", "{'[2, 2, 5, 6, 5, 4, 0, 0, 28, 29, 0, 27, 0, 2, 0, 1, 1, 0]' : 0.153363}", "{'[2, 2, 5, 6, 5, 4, 0, 0, 28, 29, 0, 27, 0, 2, 0, 1, 1, 0]' : 0.154164}", "{'[2, 2, 5, 6, 5, 4, 0, 0, 28, 29, 0, 27, 0, 2, 0, 1, 1, 0]' : 0.154511}"]
returning from 'run': {'[2, 2, 5, 6, 5, 4, 0, 0, 28, 29, 0, 27, 0, 2, 0, 1, 1, 0]': ([0.171048, 0.171521, 0.165606, 0.150299, 0.149663, 0.151241, 0.149973, 0.149491, 0.150025, 0.150385, 0.150224, 0.150043, 0.153138, 0.153863, 0.154089, 0.153808, 0.153793, 0.153453, 0.153821, 0.154153, 0.153496, 0.153692, 0.153841, 0.154258, 0.153858, 0.153945, 0.15418, 0.153363, 0.154164, 0.154511], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 2, 5, 6, 5, 4, 0, 0, 28, 29, 0, 27, 0, 2, 0, 1, 1, 0]': ([0.171048, 0.171521, 0.165606, 0.150299, 0.149663, 0.151241, 0.149973, 0.149491, 0.150025, 0.150385, 0.150224, 0.150043, 0.153138, 0.153863, 0.154089, 0.153808, 0.153793, 0.153453, 0.153821, 0.154153, 0.153496, 0.153692, 0.153841, 0.154258, 0.153858, 0.153945, 0.15418, 0.153363, 0.154164, 0.154511], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		2468
        Multiplications: 	1216
        Divisions: 		0
        Logical: 		0
        Reads: 			4654
        Writes: 		747
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest33.exe __orio_perftest33.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest33.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest33.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest33.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest33.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	62
        Max loop nest depth: 	5
        Additions: 		3956
        Multiplications: 	1612
        Divisions: 		0
        Logical: 		0
        Reads: 			7299
        Writes: 		1188
        Comparisons:		62
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest34.exe __orio_perftest34.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest34.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest34.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest34.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest34.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	45
        Max loop nest depth: 	5
        Additions: 		2162
        Multiplications: 	986
        Divisions: 		0
        Logical: 		0
        Reads: 			4328
        Writes: 		776
        Comparisons:		45
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest35.exe __orio_perftest35.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest35.exe  
Program Test Output: 
{'[6, 1, 0, 5, 0, 4, 1, 0, 25, 27, 26, 0, 0, 1, 1, 1, 0, 1]' : 0.203889}
{'[6, 1, 0, 5, 0, 4, 1, 0, 25, 27, 26, 0, 0, 1, 1, 1, 0, 1]' : 0.192566}
{'[6, 1, 0, 5, 0, 4, 1, 0, 25, 27, 26, 0, 0, 1, 1, 1, 0, 1]' : 0.185864}
{'[6, 1, 0, 5, 0, 4, 1, 0, 25, 27, 26, 0, 0, 1, 1, 1, 0, 1]' : 0.186518}
{'[6, 1, 0, 5, 0, 4, 1, 0, 25, 27, 26, 0, 0, 1, 1, 1, 0, 1]' : 0.186031}
{'[6, 1, 0, 5, 0, 4, 1, 0, 25, 27, 26, 0, 0, 1, 1, 1, 0, 1]' : 0.182106}
{'[6, 1, 0, 5, 0, 4, 1, 0, 25, 27, 26, 0, 0, 1, 1, 1, 0, 1]' : 0.183073}
{'[6, 1, 0, 5, 0, 4, 1, 0, 25, 27, 26, 0, 0, 1, 1, 1, 0, 1]' : 0.182444}
{'[6, 1, 0, 5, 0, 4, 1, 0, 25, 27, 26, 0, 0, 1, 1, 1, 0, 1]' : 0.181958}
{'[6, 1, 0, 5, 0, 4, 1, 0, 25, 27, 26, 0, 0, 1, 1, 1, 0, 1]' : 0.181997}
{'[6, 1, 0, 5, 0, 4, 1, 0, 25, 27, 26, 0, 0, 1, 1, 1, 0, 1]' : 0.184871}
{'[6, 1, 0, 5, 0, 4, 1, 0, 25, 27, 26, 0, 0, 1, 1, 1, 0, 1]' : 0.184097}
{'[6, 1, 0, 5, 0, 4, 1, 0, 25, 27, 26, 0, 0, 1, 1, 1, 0, 1]' : 0.183956}
{'[6, 1, 0, 5, 0, 4, 1, 0, 25, 27, 26, 0, 0, 1, 1, 1, 0, 1]' : 0.18649}
{'[6, 1, 0, 5, 0, 4, 1, 0, 25, 27, 26, 0, 0, 1, 1, 1, 0, 1]' : 0.186531}
{'[6, 1, 0, 5, 0, 4, 1, 0, 25, 27, 26, 0, 0, 1, 1, 1, 0, 1]' : 0.185626}
{'[6, 1, 0, 5, 0, 4, 1, 0, 25, 27, 26, 0, 0, 1, 1, 1, 0, 1]' : 0.181994}
{'[6, 1, 0, 5, 0, 4, 1, 0, 25, 27, 26, 0, 0, 1, 1, 1, 0, 1]' : 0.182378}
{'[6, 1, 0, 5, 0, 4, 1, 0, 25, 27, 26, 0, 0, 1, 1, 1, 0, 1]' : 0.184615}
{'[6, 1, 0, 5, 0, 4, 1, 0, 25, 27, 26, 0, 0, 1, 1, 1, 0, 1]' : 0.186586}
{'[6, 1, 0, 5, 0, 4, 1, 0, 25, 27, 26, 0, 0, 1, 1, 1, 0, 1]' : 0.186719}
{'[6, 1, 0, 5, 0, 4, 1, 0, 25, 27, 26, 0, 0, 1, 1, 1, 0, 1]' : 0.182853}
{'[6, 1, 0, 5, 0, 4, 1, 0, 25, 27, 26, 0, 0, 1, 1, 1, 0, 1]' : 0.180388}
{'[6, 1, 0, 5, 0, 4, 1, 0, 25, 27, 26, 0, 0, 1, 1, 1, 0, 1]' : 0.181041}
{'[6, 1, 0, 5, 0, 4, 1, 0, 25, 27, 26, 0, 0, 1, 1, 1, 0, 1]' : 0.18642}
{'[6, 1, 0, 5, 0, 4, 1, 0, 25, 27, 26, 0, 0, 1, 1, 1, 0, 1]' : 0.186078}
{'[6, 1, 0, 5, 0, 4, 1, 0, 25, 27, 26, 0, 0, 1, 1, 1, 0, 1]' : 0.183753}
{'[6, 1, 0, 5, 0, 4, 1, 0, 25, 27, 26, 0, 0, 1, 1, 1, 0, 1]' : 0.186368}
{'[6, 1, 0, 5, 0, 4, 1, 0, 25, 27, 26, 0, 0, 1, 1, 1, 0, 1]' : 0.186558}
{'[6, 1, 0, 5, 0, 4, 1, 0, 25, 27, 26, 0, 0, 1, 1, 1, 0, 1]' : 0.186905}

out:
 ["{'[6, 1, 0, 5, 0, 4, 1, 0, 25, 27, 26, 0, 0, 1, 1, 1, 0, 1]' : 0.203889}", "{'[6, 1, 0, 5, 0, 4, 1, 0, 25, 27, 26, 0, 0, 1, 1, 1, 0, 1]' : 0.192566}", "{'[6, 1, 0, 5, 0, 4, 1, 0, 25, 27, 26, 0, 0, 1, 1, 1, 0, 1]' : 0.185864}", "{'[6, 1, 0, 5, 0, 4, 1, 0, 25, 27, 26, 0, 0, 1, 1, 1, 0, 1]' : 0.186518}", "{'[6, 1, 0, 5, 0, 4, 1, 0, 25, 27, 26, 0, 0, 1, 1, 1, 0, 1]' : 0.186031}", "{'[6, 1, 0, 5, 0, 4, 1, 0, 25, 27, 26, 0, 0, 1, 1, 1, 0, 1]' : 0.182106}", "{'[6, 1, 0, 5, 0, 4, 1, 0, 25, 27, 26, 0, 0, 1, 1, 1, 0, 1]' : 0.183073}", "{'[6, 1, 0, 5, 0, 4, 1, 0, 25, 27, 26, 0, 0, 1, 1, 1, 0, 1]' : 0.182444}", "{'[6, 1, 0, 5, 0, 4, 1, 0, 25, 27, 26, 0, 0, 1, 1, 1, 0, 1]' : 0.181958}", "{'[6, 1, 0, 5, 0, 4, 1, 0, 25, 27, 26, 0, 0, 1, 1, 1, 0, 1]' : 0.181997}", "{'[6, 1, 0, 5, 0, 4, 1, 0, 25, 27, 26, 0, 0, 1, 1, 1, 0, 1]' : 0.184871}", "{'[6, 1, 0, 5, 0, 4, 1, 0, 25, 27, 26, 0, 0, 1, 1, 1, 0, 1]' : 0.184097}", "{'[6, 1, 0, 5, 0, 4, 1, 0, 25, 27, 26, 0, 0, 1, 1, 1, 0, 1]' : 0.183956}", "{'[6, 1, 0, 5, 0, 4, 1, 0, 25, 27, 26, 0, 0, 1, 1, 1, 0, 1]' : 0.18649}", "{'[6, 1, 0, 5, 0, 4, 1, 0, 25, 27, 26, 0, 0, 1, 1, 1, 0, 1]' : 0.186531}", "{'[6, 1, 0, 5, 0, 4, 1, 0, 25, 27, 26, 0, 0, 1, 1, 1, 0, 1]' : 0.185626}", "{'[6, 1, 0, 5, 0, 4, 1, 0, 25, 27, 26, 0, 0, 1, 1, 1, 0, 1]' : 0.181994}", "{'[6, 1, 0, 5, 0, 4, 1, 0, 25, 27, 26, 0, 0, 1, 1, 1, 0, 1]' : 0.182378}", "{'[6, 1, 0, 5, 0, 4, 1, 0, 25, 27, 26, 0, 0, 1, 1, 1, 0, 1]' : 0.184615}", "{'[6, 1, 0, 5, 0, 4, 1, 0, 25, 27, 26, 0, 0, 1, 1, 1, 0, 1]' : 0.186586}", "{'[6, 1, 0, 5, 0, 4, 1, 0, 25, 27, 26, 0, 0, 1, 1, 1, 0, 1]' : 0.186719}", "{'[6, 1, 0, 5, 0, 4, 1, 0, 25, 27, 26, 0, 0, 1, 1, 1, 0, 1]' : 0.182853}", "{'[6, 1, 0, 5, 0, 4, 1, 0, 25, 27, 26, 0, 0, 1, 1, 1, 0, 1]' : 0.180388}", "{'[6, 1, 0, 5, 0, 4, 1, 0, 25, 27, 26, 0, 0, 1, 1, 1, 0, 1]' : 0.181041}", "{'[6, 1, 0, 5, 0, 4, 1, 0, 25, 27, 26, 0, 0, 1, 1, 1, 0, 1]' : 0.18642}", "{'[6, 1, 0, 5, 0, 4, 1, 0, 25, 27, 26, 0, 0, 1, 1, 1, 0, 1]' : 0.186078}", "{'[6, 1, 0, 5, 0, 4, 1, 0, 25, 27, 26, 0, 0, 1, 1, 1, 0, 1]' : 0.183753}", "{'[6, 1, 0, 5, 0, 4, 1, 0, 25, 27, 26, 0, 0, 1, 1, 1, 0, 1]' : 0.186368}", "{'[6, 1, 0, 5, 0, 4, 1, 0, 25, 27, 26, 0, 0, 1, 1, 1, 0, 1]' : 0.186558}", "{'[6, 1, 0, 5, 0, 4, 1, 0, 25, 27, 26, 0, 0, 1, 1, 1, 0, 1]' : 0.186905}"]
returning from 'run': {'[6, 1, 0, 5, 0, 4, 1, 0, 25, 27, 26, 0, 0, 1, 1, 1, 0, 1]': ([0.203889, 0.192566, 0.185864, 0.186518, 0.186031, 0.182106, 0.183073, 0.182444, 0.181958, 0.181997, 0.184871, 0.184097, 0.183956, 0.18649, 0.186531, 0.185626, 0.181994, 0.182378, 0.184615, 0.186586, 0.186719, 0.182853, 0.180388, 0.181041, 0.18642, 0.186078, 0.183753, 0.186368, 0.186558, 0.186905], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 1, 0, 5, 0, 4, 1, 0, 25, 27, 26, 0, 0, 1, 1, 1, 0, 1]': ([0.203889, 0.192566, 0.185864, 0.186518, 0.186031, 0.182106, 0.183073, 0.182444, 0.181958, 0.181997, 0.184871, 0.184097, 0.183956, 0.18649, 0.186531, 0.185626, 0.181994, 0.182378, 0.184615, 0.186586, 0.186719, 0.182853, 0.180388, 0.181041, 0.18642, 0.186078, 0.183753, 0.186368, 0.186558, 0.186905], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	6
        Additions: 		1666
        Multiplications: 	684
        Divisions: 		0
        Logical: 		0
        Reads: 			3254
        Writes: 		585
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest36.exe __orio_perftest36.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest36.exe  
Program Test Output: 
{'[5, 5, 2, 6, 6, 0, 1, 1, 28, 0, 20, 28, 1, 1, 0, 1, 1, 1]' : 0.114574}
{'[5, 5, 2, 6, 6, 0, 1, 1, 28, 0, 20, 28, 1, 1, 0, 1, 1, 1]' : 0.114621}
{'[5, 5, 2, 6, 6, 0, 1, 1, 28, 0, 20, 28, 1, 1, 0, 1, 1, 1]' : 0.115245}
{'[5, 5, 2, 6, 6, 0, 1, 1, 28, 0, 20, 28, 1, 1, 0, 1, 1, 1]' : 0.11455}
{'[5, 5, 2, 6, 6, 0, 1, 1, 28, 0, 20, 28, 1, 1, 0, 1, 1, 1]' : 0.114611}
{'[5, 5, 2, 6, 6, 0, 1, 1, 28, 0, 20, 28, 1, 1, 0, 1, 1, 1]' : 0.114686}
{'[5, 5, 2, 6, 6, 0, 1, 1, 28, 0, 20, 28, 1, 1, 0, 1, 1, 1]' : 0.114664}
{'[5, 5, 2, 6, 6, 0, 1, 1, 28, 0, 20, 28, 1, 1, 0, 1, 1, 1]' : 0.114401}
{'[5, 5, 2, 6, 6, 0, 1, 1, 28, 0, 20, 28, 1, 1, 0, 1, 1, 1]' : 0.1144}
{'[5, 5, 2, 6, 6, 0, 1, 1, 28, 0, 20, 28, 1, 1, 0, 1, 1, 1]' : 0.114361}
{'[5, 5, 2, 6, 6, 0, 1, 1, 28, 0, 20, 28, 1, 1, 0, 1, 1, 1]' : 0.114578}
{'[5, 5, 2, 6, 6, 0, 1, 1, 28, 0, 20, 28, 1, 1, 0, 1, 1, 1]' : 0.114536}
{'[5, 5, 2, 6, 6, 0, 1, 1, 28, 0, 20, 28, 1, 1, 0, 1, 1, 1]' : 0.114587}
{'[5, 5, 2, 6, 6, 0, 1, 1, 28, 0, 20, 28, 1, 1, 0, 1, 1, 1]' : 0.114425}
{'[5, 5, 2, 6, 6, 0, 1, 1, 28, 0, 20, 28, 1, 1, 0, 1, 1, 1]' : 0.114863}
{'[5, 5, 2, 6, 6, 0, 1, 1, 28, 0, 20, 28, 1, 1, 0, 1, 1, 1]' : 0.114457}
{'[5, 5, 2, 6, 6, 0, 1, 1, 28, 0, 20, 28, 1, 1, 0, 1, 1, 1]' : 0.114445}
{'[5, 5, 2, 6, 6, 0, 1, 1, 28, 0, 20, 28, 1, 1, 0, 1, 1, 1]' : 0.114598}
{'[5, 5, 2, 6, 6, 0, 1, 1, 28, 0, 20, 28, 1, 1, 0, 1, 1, 1]' : 0.114566}
{'[5, 5, 2, 6, 6, 0, 1, 1, 28, 0, 20, 28, 1, 1, 0, 1, 1, 1]' : 0.114455}
{'[5, 5, 2, 6, 6, 0, 1, 1, 28, 0, 20, 28, 1, 1, 0, 1, 1, 1]' : 0.11433}
{'[5, 5, 2, 6, 6, 0, 1, 1, 28, 0, 20, 28, 1, 1, 0, 1, 1, 1]' : 0.114542}
{'[5, 5, 2, 6, 6, 0, 1, 1, 28, 0, 20, 28, 1, 1, 0, 1, 1, 1]' : 0.1147}
{'[5, 5, 2, 6, 6, 0, 1, 1, 28, 0, 20, 28, 1, 1, 0, 1, 1, 1]' : 0.114287}
{'[5, 5, 2, 6, 6, 0, 1, 1, 28, 0, 20, 28, 1, 1, 0, 1, 1, 1]' : 0.11441}
{'[5, 5, 2, 6, 6, 0, 1, 1, 28, 0, 20, 28, 1, 1, 0, 1, 1, 1]' : 0.114478}
{'[5, 5, 2, 6, 6, 0, 1, 1, 28, 0, 20, 28, 1, 1, 0, 1, 1, 1]' : 0.114348}
{'[5, 5, 2, 6, 6, 0, 1, 1, 28, 0, 20, 28, 1, 1, 0, 1, 1, 1]' : 0.114456}
{'[5, 5, 2, 6, 6, 0, 1, 1, 28, 0, 20, 28, 1, 1, 0, 1, 1, 1]' : 0.114419}
{'[5, 5, 2, 6, 6, 0, 1, 1, 28, 0, 20, 28, 1, 1, 0, 1, 1, 1]' : 0.114352}

out:
 ["{'[5, 5, 2, 6, 6, 0, 1, 1, 28, 0, 20, 28, 1, 1, 0, 1, 1, 1]' : 0.114574}", "{'[5, 5, 2, 6, 6, 0, 1, 1, 28, 0, 20, 28, 1, 1, 0, 1, 1, 1]' : 0.114621}", "{'[5, 5, 2, 6, 6, 0, 1, 1, 28, 0, 20, 28, 1, 1, 0, 1, 1, 1]' : 0.115245}", "{'[5, 5, 2, 6, 6, 0, 1, 1, 28, 0, 20, 28, 1, 1, 0, 1, 1, 1]' : 0.11455}", "{'[5, 5, 2, 6, 6, 0, 1, 1, 28, 0, 20, 28, 1, 1, 0, 1, 1, 1]' : 0.114611}", "{'[5, 5, 2, 6, 6, 0, 1, 1, 28, 0, 20, 28, 1, 1, 0, 1, 1, 1]' : 0.114686}", "{'[5, 5, 2, 6, 6, 0, 1, 1, 28, 0, 20, 28, 1, 1, 0, 1, 1, 1]' : 0.114664}", "{'[5, 5, 2, 6, 6, 0, 1, 1, 28, 0, 20, 28, 1, 1, 0, 1, 1, 1]' : 0.114401}", "{'[5, 5, 2, 6, 6, 0, 1, 1, 28, 0, 20, 28, 1, 1, 0, 1, 1, 1]' : 0.1144}", "{'[5, 5, 2, 6, 6, 0, 1, 1, 28, 0, 20, 28, 1, 1, 0, 1, 1, 1]' : 0.114361}", "{'[5, 5, 2, 6, 6, 0, 1, 1, 28, 0, 20, 28, 1, 1, 0, 1, 1, 1]' : 0.114578}", "{'[5, 5, 2, 6, 6, 0, 1, 1, 28, 0, 20, 28, 1, 1, 0, 1, 1, 1]' : 0.114536}", "{'[5, 5, 2, 6, 6, 0, 1, 1, 28, 0, 20, 28, 1, 1, 0, 1, 1, 1]' : 0.114587}", "{'[5, 5, 2, 6, 6, 0, 1, 1, 28, 0, 20, 28, 1, 1, 0, 1, 1, 1]' : 0.114425}", "{'[5, 5, 2, 6, 6, 0, 1, 1, 28, 0, 20, 28, 1, 1, 0, 1, 1, 1]' : 0.114863}", "{'[5, 5, 2, 6, 6, 0, 1, 1, 28, 0, 20, 28, 1, 1, 0, 1, 1, 1]' : 0.114457}", "{'[5, 5, 2, 6, 6, 0, 1, 1, 28, 0, 20, 28, 1, 1, 0, 1, 1, 1]' : 0.114445}", "{'[5, 5, 2, 6, 6, 0, 1, 1, 28, 0, 20, 28, 1, 1, 0, 1, 1, 1]' : 0.114598}", "{'[5, 5, 2, 6, 6, 0, 1, 1, 28, 0, 20, 28, 1, 1, 0, 1, 1, 1]' : 0.114566}", "{'[5, 5, 2, 6, 6, 0, 1, 1, 28, 0, 20, 28, 1, 1, 0, 1, 1, 1]' : 0.114455}", "{'[5, 5, 2, 6, 6, 0, 1, 1, 28, 0, 20, 28, 1, 1, 0, 1, 1, 1]' : 0.11433}", "{'[5, 5, 2, 6, 6, 0, 1, 1, 28, 0, 20, 28, 1, 1, 0, 1, 1, 1]' : 0.114542}", "{'[5, 5, 2, 6, 6, 0, 1, 1, 28, 0, 20, 28, 1, 1, 0, 1, 1, 1]' : 0.1147}", "{'[5, 5, 2, 6, 6, 0, 1, 1, 28, 0, 20, 28, 1, 1, 0, 1, 1, 1]' : 0.114287}", "{'[5, 5, 2, 6, 6, 0, 1, 1, 28, 0, 20, 28, 1, 1, 0, 1, 1, 1]' : 0.11441}", "{'[5, 5, 2, 6, 6, 0, 1, 1, 28, 0, 20, 28, 1, 1, 0, 1, 1, 1]' : 0.114478}", "{'[5, 5, 2, 6, 6, 0, 1, 1, 28, 0, 20, 28, 1, 1, 0, 1, 1, 1]' : 0.114348}", "{'[5, 5, 2, 6, 6, 0, 1, 1, 28, 0, 20, 28, 1, 1, 0, 1, 1, 1]' : 0.114456}", "{'[5, 5, 2, 6, 6, 0, 1, 1, 28, 0, 20, 28, 1, 1, 0, 1, 1, 1]' : 0.114419}", "{'[5, 5, 2, 6, 6, 0, 1, 1, 28, 0, 20, 28, 1, 1, 0, 1, 1, 1]' : 0.114352}"]
returning from 'run': {'[5, 5, 2, 6, 6, 0, 1, 1, 28, 0, 20, 28, 1, 1, 0, 1, 1, 1]': ([0.114574, 0.114621, 0.115245, 0.11455, 0.114611, 0.114686, 0.114664, 0.114401, 0.1144, 0.114361, 0.114578, 0.114536, 0.114587, 0.114425, 0.114863, 0.114457, 0.114445, 0.114598, 0.114566, 0.114455, 0.11433, 0.114542, 0.1147, 0.114287, 0.11441, 0.114478, 0.114348, 0.114456, 0.114419, 0.114352], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 5, 2, 6, 6, 0, 1, 1, 28, 0, 20, 28, 1, 1, 0, 1, 1, 1]': ([0.114574, 0.114621, 0.115245, 0.11455, 0.114611, 0.114686, 0.114664, 0.114401, 0.1144, 0.114361, 0.114578, 0.114536, 0.114587, 0.114425, 0.114863, 0.114457, 0.114445, 0.114598, 0.114566, 0.114455, 0.11433, 0.114542, 0.1147, 0.114287, 0.11441, 0.114478, 0.114348, 0.114456, 0.114419, 0.114352], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	5
        Additions: 		1350
        Multiplications: 	420
        Divisions: 		0
        Logical: 		0
        Reads: 			2282
        Writes: 		274
        Comparisons:		18
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest37.exe __orio_perftest37.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest37.exe  
Program Test Output: 
{'[6, 6, 6, 6, 0, 0, 0, 0, 1, 13, 3, 0, 0, 0, 1, 0, 0, 1]' : 0.13172}
{'[6, 6, 6, 6, 0, 0, 0, 0, 1, 13, 3, 0, 0, 0, 1, 0, 0, 1]' : 0.131589}
{'[6, 6, 6, 6, 0, 0, 0, 0, 1, 13, 3, 0, 0, 0, 1, 0, 0, 1]' : 0.131587}
{'[6, 6, 6, 6, 0, 0, 0, 0, 1, 13, 3, 0, 0, 0, 1, 0, 0, 1]' : 0.129706}
{'[6, 6, 6, 6, 0, 0, 0, 0, 1, 13, 3, 0, 0, 0, 1, 0, 0, 1]' : 0.116554}
{'[6, 6, 6, 6, 0, 0, 0, 0, 1, 13, 3, 0, 0, 0, 1, 0, 0, 1]' : 0.11605}
{'[6, 6, 6, 6, 0, 0, 0, 0, 1, 13, 3, 0, 0, 0, 1, 0, 0, 1]' : 0.116103}
{'[6, 6, 6, 6, 0, 0, 0, 0, 1, 13, 3, 0, 0, 0, 1, 0, 0, 1]' : 0.115971}
{'[6, 6, 6, 6, 0, 0, 0, 0, 1, 13, 3, 0, 0, 0, 1, 0, 0, 1]' : 0.116091}
{'[6, 6, 6, 6, 0, 0, 0, 0, 1, 13, 3, 0, 0, 0, 1, 0, 0, 1]' : 0.116138}
{'[6, 6, 6, 6, 0, 0, 0, 0, 1, 13, 3, 0, 0, 0, 1, 0, 0, 1]' : 0.116309}
{'[6, 6, 6, 6, 0, 0, 0, 0, 1, 13, 3, 0, 0, 0, 1, 0, 0, 1]' : 0.11601}
{'[6, 6, 6, 6, 0, 0, 0, 0, 1, 13, 3, 0, 0, 0, 1, 0, 0, 1]' : 0.116351}
{'[6, 6, 6, 6, 0, 0, 0, 0, 1, 13, 3, 0, 0, 0, 1, 0, 0, 1]' : 0.116198}
{'[6, 6, 6, 6, 0, 0, 0, 0, 1, 13, 3, 0, 0, 0, 1, 0, 0, 1]' : 0.11603}
{'[6, 6, 6, 6, 0, 0, 0, 0, 1, 13, 3, 0, 0, 0, 1, 0, 0, 1]' : 0.116227}
{'[6, 6, 6, 6, 0, 0, 0, 0, 1, 13, 3, 0, 0, 0, 1, 0, 0, 1]' : 0.116307}
{'[6, 6, 6, 6, 0, 0, 0, 0, 1, 13, 3, 0, 0, 0, 1, 0, 0, 1]' : 0.11606}
{'[6, 6, 6, 6, 0, 0, 0, 0, 1, 13, 3, 0, 0, 0, 1, 0, 0, 1]' : 0.116114}
{'[6, 6, 6, 6, 0, 0, 0, 0, 1, 13, 3, 0, 0, 0, 1, 0, 0, 1]' : 0.116282}
{'[6, 6, 6, 6, 0, 0, 0, 0, 1, 13, 3, 0, 0, 0, 1, 0, 0, 1]' : 0.116222}
{'[6, 6, 6, 6, 0, 0, 0, 0, 1, 13, 3, 0, 0, 0, 1, 0, 0, 1]' : 0.116132}
{'[6, 6, 6, 6, 0, 0, 0, 0, 1, 13, 3, 0, 0, 0, 1, 0, 0, 1]' : 0.116087}
{'[6, 6, 6, 6, 0, 0, 0, 0, 1, 13, 3, 0, 0, 0, 1, 0, 0, 1]' : 0.116244}
{'[6, 6, 6, 6, 0, 0, 0, 0, 1, 13, 3, 0, 0, 0, 1, 0, 0, 1]' : 0.116138}
{'[6, 6, 6, 6, 0, 0, 0, 0, 1, 13, 3, 0, 0, 0, 1, 0, 0, 1]' : 0.116148}
{'[6, 6, 6, 6, 0, 0, 0, 0, 1, 13, 3, 0, 0, 0, 1, 0, 0, 1]' : 0.115995}
{'[6, 6, 6, 6, 0, 0, 0, 0, 1, 13, 3, 0, 0, 0, 1, 0, 0, 1]' : 0.11604}
{'[6, 6, 6, 6, 0, 0, 0, 0, 1, 13, 3, 0, 0, 0, 1, 0, 0, 1]' : 0.116186}
{'[6, 6, 6, 6, 0, 0, 0, 0, 1, 13, 3, 0, 0, 0, 1, 0, 0, 1]' : 0.116593}

out:
 ["{'[6, 6, 6, 6, 0, 0, 0, 0, 1, 13, 3, 0, 0, 0, 1, 0, 0, 1]' : 0.13172}", "{'[6, 6, 6, 6, 0, 0, 0, 0, 1, 13, 3, 0, 0, 0, 1, 0, 0, 1]' : 0.131589}", "{'[6, 6, 6, 6, 0, 0, 0, 0, 1, 13, 3, 0, 0, 0, 1, 0, 0, 1]' : 0.131587}", "{'[6, 6, 6, 6, 0, 0, 0, 0, 1, 13, 3, 0, 0, 0, 1, 0, 0, 1]' : 0.129706}", "{'[6, 6, 6, 6, 0, 0, 0, 0, 1, 13, 3, 0, 0, 0, 1, 0, 0, 1]' : 0.116554}", "{'[6, 6, 6, 6, 0, 0, 0, 0, 1, 13, 3, 0, 0, 0, 1, 0, 0, 1]' : 0.11605}", "{'[6, 6, 6, 6, 0, 0, 0, 0, 1, 13, 3, 0, 0, 0, 1, 0, 0, 1]' : 0.116103}", "{'[6, 6, 6, 6, 0, 0, 0, 0, 1, 13, 3, 0, 0, 0, 1, 0, 0, 1]' : 0.115971}", "{'[6, 6, 6, 6, 0, 0, 0, 0, 1, 13, 3, 0, 0, 0, 1, 0, 0, 1]' : 0.116091}", "{'[6, 6, 6, 6, 0, 0, 0, 0, 1, 13, 3, 0, 0, 0, 1, 0, 0, 1]' : 0.116138}", "{'[6, 6, 6, 6, 0, 0, 0, 0, 1, 13, 3, 0, 0, 0, 1, 0, 0, 1]' : 0.116309}", "{'[6, 6, 6, 6, 0, 0, 0, 0, 1, 13, 3, 0, 0, 0, 1, 0, 0, 1]' : 0.11601}", "{'[6, 6, 6, 6, 0, 0, 0, 0, 1, 13, 3, 0, 0, 0, 1, 0, 0, 1]' : 0.116351}", "{'[6, 6, 6, 6, 0, 0, 0, 0, 1, 13, 3, 0, 0, 0, 1, 0, 0, 1]' : 0.116198}", "{'[6, 6, 6, 6, 0, 0, 0, 0, 1, 13, 3, 0, 0, 0, 1, 0, 0, 1]' : 0.11603}", "{'[6, 6, 6, 6, 0, 0, 0, 0, 1, 13, 3, 0, 0, 0, 1, 0, 0, 1]' : 0.116227}", "{'[6, 6, 6, 6, 0, 0, 0, 0, 1, 13, 3, 0, 0, 0, 1, 0, 0, 1]' : 0.116307}", "{'[6, 6, 6, 6, 0, 0, 0, 0, 1, 13, 3, 0, 0, 0, 1, 0, 0, 1]' : 0.11606}", "{'[6, 6, 6, 6, 0, 0, 0, 0, 1, 13, 3, 0, 0, 0, 1, 0, 0, 1]' : 0.116114}", "{'[6, 6, 6, 6, 0, 0, 0, 0, 1, 13, 3, 0, 0, 0, 1, 0, 0, 1]' : 0.116282}", "{'[6, 6, 6, 6, 0, 0, 0, 0, 1, 13, 3, 0, 0, 0, 1, 0, 0, 1]' : 0.116222}", "{'[6, 6, 6, 6, 0, 0, 0, 0, 1, 13, 3, 0, 0, 0, 1, 0, 0, 1]' : 0.116132}", "{'[6, 6, 6, 6, 0, 0, 0, 0, 1, 13, 3, 0, 0, 0, 1, 0, 0, 1]' : 0.116087}", "{'[6, 6, 6, 6, 0, 0, 0, 0, 1, 13, 3, 0, 0, 0, 1, 0, 0, 1]' : 0.116244}", "{'[6, 6, 6, 6, 0, 0, 0, 0, 1, 13, 3, 0, 0, 0, 1, 0, 0, 1]' : 0.116138}", "{'[6, 6, 6, 6, 0, 0, 0, 0, 1, 13, 3, 0, 0, 0, 1, 0, 0, 1]' : 0.116148}", "{'[6, 6, 6, 6, 0, 0, 0, 0, 1, 13, 3, 0, 0, 0, 1, 0, 0, 1]' : 0.115995}", "{'[6, 6, 6, 6, 0, 0, 0, 0, 1, 13, 3, 0, 0, 0, 1, 0, 0, 1]' : 0.11604}", "{'[6, 6, 6, 6, 0, 0, 0, 0, 1, 13, 3, 0, 0, 0, 1, 0, 0, 1]' : 0.116186}", "{'[6, 6, 6, 6, 0, 0, 0, 0, 1, 13, 3, 0, 0, 0, 1, 0, 0, 1]' : 0.116593}"]
returning from 'run': {'[6, 6, 6, 6, 0, 0, 0, 0, 1, 13, 3, 0, 0, 0, 1, 0, 0, 1]': ([0.13172, 0.131589, 0.131587, 0.129706, 0.116554, 0.11605, 0.116103, 0.115971, 0.116091, 0.116138, 0.116309, 0.11601, 0.116351, 0.116198, 0.11603, 0.116227, 0.116307, 0.11606, 0.116114, 0.116282, 0.116222, 0.116132, 0.116087, 0.116244, 0.116138, 0.116148, 0.115995, 0.11604, 0.116186, 0.116593], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 6, 6, 0, 0, 0, 0, 1, 13, 3, 0, 0, 0, 1, 0, 0, 1]': ([0.13172, 0.131589, 0.131587, 0.129706, 0.116554, 0.11605, 0.116103, 0.115971, 0.116091, 0.116138, 0.116309, 0.11601, 0.116351, 0.116198, 0.11603, 0.116227, 0.116307, 0.11606, 0.116114, 0.116282, 0.116222, 0.116132, 0.116087, 0.116244, 0.116138, 0.116148, 0.115995, 0.11604, 0.116186, 0.116593], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	5
        Additions: 		2167
        Multiplications: 	1026
        Divisions: 		0
        Logical: 		0
        Reads: 			4268
        Writes: 		725
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest38.exe __orio_perftest38.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest38.exe  
Program Test Output: 
{'[0, 0, 6, 6, 4, 5, 0, 0, 4, 0, 27, 18, 1, 0, 1, 1, 1, 0]' : 0.086225}
{'[0, 0, 6, 6, 4, 5, 0, 0, 4, 0, 27, 18, 1, 0, 1, 1, 1, 0]' : 0.086318}
{'[0, 0, 6, 6, 4, 5, 0, 0, 4, 0, 27, 18, 1, 0, 1, 1, 1, 0]' : 0.086133}
{'[0, 0, 6, 6, 4, 5, 0, 0, 4, 0, 27, 18, 1, 0, 1, 1, 1, 0]' : 0.0863841}
{'[0, 0, 6, 6, 4, 5, 0, 0, 4, 0, 27, 18, 1, 0, 1, 1, 1, 0]' : 0.0861471}
{'[0, 0, 6, 6, 4, 5, 0, 0, 4, 0, 27, 18, 1, 0, 1, 1, 1, 0]' : 0.0860772}
{'[0, 0, 6, 6, 4, 5, 0, 0, 4, 0, 27, 18, 1, 0, 1, 1, 1, 0]' : 0.086118}
{'[0, 0, 6, 6, 4, 5, 0, 0, 4, 0, 27, 18, 1, 0, 1, 1, 1, 0]' : 0.0861759}
{'[0, 0, 6, 6, 4, 5, 0, 0, 4, 0, 27, 18, 1, 0, 1, 1, 1, 0]' : 0.0859759}
{'[0, 0, 6, 6, 4, 5, 0, 0, 4, 0, 27, 18, 1, 0, 1, 1, 1, 0]' : 0.086165}
{'[0, 0, 6, 6, 4, 5, 0, 0, 4, 0, 27, 18, 1, 0, 1, 1, 1, 0]' : 0.0860879}
{'[0, 0, 6, 6, 4, 5, 0, 0, 4, 0, 27, 18, 1, 0, 1, 1, 1, 0]' : 0.0862849}
{'[0, 0, 6, 6, 4, 5, 0, 0, 4, 0, 27, 18, 1, 0, 1, 1, 1, 0]' : 0.0861521}
{'[0, 0, 6, 6, 4, 5, 0, 0, 4, 0, 27, 18, 1, 0, 1, 1, 1, 0]' : 0.0861151}
{'[0, 0, 6, 6, 4, 5, 0, 0, 4, 0, 27, 18, 1, 0, 1, 1, 1, 0]' : 0.0861919}
{'[0, 0, 6, 6, 4, 5, 0, 0, 4, 0, 27, 18, 1, 0, 1, 1, 1, 0]' : 0.086256}
{'[0, 0, 6, 6, 4, 5, 0, 0, 4, 0, 27, 18, 1, 0, 1, 1, 1, 0]' : 0.086267}
{'[0, 0, 6, 6, 4, 5, 0, 0, 4, 0, 27, 18, 1, 0, 1, 1, 1, 0]' : 0.0860839}
{'[0, 0, 6, 6, 4, 5, 0, 0, 4, 0, 27, 18, 1, 0, 1, 1, 1, 0]' : 0.08621}
{'[0, 0, 6, 6, 4, 5, 0, 0, 4, 0, 27, 18, 1, 0, 1, 1, 1, 0]' : 0.0862072}
{'[0, 0, 6, 6, 4, 5, 0, 0, 4, 0, 27, 18, 1, 0, 1, 1, 1, 0]' : 0.086374}
{'[0, 0, 6, 6, 4, 5, 0, 0, 4, 0, 27, 18, 1, 0, 1, 1, 1, 0]' : 0.0861192}
{'[0, 0, 6, 6, 4, 5, 0, 0, 4, 0, 27, 18, 1, 0, 1, 1, 1, 0]' : 0.08602}
{'[0, 0, 6, 6, 4, 5, 0, 0, 4, 0, 27, 18, 1, 0, 1, 1, 1, 0]' : 0.0861969}
{'[0, 0, 6, 6, 4, 5, 0, 0, 4, 0, 27, 18, 1, 0, 1, 1, 1, 0]' : 0.0860941}
{'[0, 0, 6, 6, 4, 5, 0, 0, 4, 0, 27, 18, 1, 0, 1, 1, 1, 0]' : 0.086133}
{'[0, 0, 6, 6, 4, 5, 0, 0, 4, 0, 27, 18, 1, 0, 1, 1, 1, 0]' : 0.0862989}
{'[0, 0, 6, 6, 4, 5, 0, 0, 4, 0, 27, 18, 1, 0, 1, 1, 1, 0]' : 0.087157}
{'[0, 0, 6, 6, 4, 5, 0, 0, 4, 0, 27, 18, 1, 0, 1, 1, 1, 0]' : 0.08693}
{'[0, 0, 6, 6, 4, 5, 0, 0, 4, 0, 27, 18, 1, 0, 1, 1, 1, 0]' : 0.0867531}

out:
 ["{'[0, 0, 6, 6, 4, 5, 0, 0, 4, 0, 27, 18, 1, 0, 1, 1, 1, 0]' : 0.086225}", "{'[0, 0, 6, 6, 4, 5, 0, 0, 4, 0, 27, 18, 1, 0, 1, 1, 1, 0]' : 0.086318}", "{'[0, 0, 6, 6, 4, 5, 0, 0, 4, 0, 27, 18, 1, 0, 1, 1, 1, 0]' : 0.086133}", "{'[0, 0, 6, 6, 4, 5, 0, 0, 4, 0, 27, 18, 1, 0, 1, 1, 1, 0]' : 0.0863841}", "{'[0, 0, 6, 6, 4, 5, 0, 0, 4, 0, 27, 18, 1, 0, 1, 1, 1, 0]' : 0.0861471}", "{'[0, 0, 6, 6, 4, 5, 0, 0, 4, 0, 27, 18, 1, 0, 1, 1, 1, 0]' : 0.0860772}", "{'[0, 0, 6, 6, 4, 5, 0, 0, 4, 0, 27, 18, 1, 0, 1, 1, 1, 0]' : 0.086118}", "{'[0, 0, 6, 6, 4, 5, 0, 0, 4, 0, 27, 18, 1, 0, 1, 1, 1, 0]' : 0.0861759}", "{'[0, 0, 6, 6, 4, 5, 0, 0, 4, 0, 27, 18, 1, 0, 1, 1, 1, 0]' : 0.0859759}", "{'[0, 0, 6, 6, 4, 5, 0, 0, 4, 0, 27, 18, 1, 0, 1, 1, 1, 0]' : 0.086165}", "{'[0, 0, 6, 6, 4, 5, 0, 0, 4, 0, 27, 18, 1, 0, 1, 1, 1, 0]' : 0.0860879}", "{'[0, 0, 6, 6, 4, 5, 0, 0, 4, 0, 27, 18, 1, 0, 1, 1, 1, 0]' : 0.0862849}", "{'[0, 0, 6, 6, 4, 5, 0, 0, 4, 0, 27, 18, 1, 0, 1, 1, 1, 0]' : 0.0861521}", "{'[0, 0, 6, 6, 4, 5, 0, 0, 4, 0, 27, 18, 1, 0, 1, 1, 1, 0]' : 0.0861151}", "{'[0, 0, 6, 6, 4, 5, 0, 0, 4, 0, 27, 18, 1, 0, 1, 1, 1, 0]' : 0.0861919}", "{'[0, 0, 6, 6, 4, 5, 0, 0, 4, 0, 27, 18, 1, 0, 1, 1, 1, 0]' : 0.086256}", "{'[0, 0, 6, 6, 4, 5, 0, 0, 4, 0, 27, 18, 1, 0, 1, 1, 1, 0]' : 0.086267}", "{'[0, 0, 6, 6, 4, 5, 0, 0, 4, 0, 27, 18, 1, 0, 1, 1, 1, 0]' : 0.0860839}", "{'[0, 0, 6, 6, 4, 5, 0, 0, 4, 0, 27, 18, 1, 0, 1, 1, 1, 0]' : 0.08621}", "{'[0, 0, 6, 6, 4, 5, 0, 0, 4, 0, 27, 18, 1, 0, 1, 1, 1, 0]' : 0.0862072}", "{'[0, 0, 6, 6, 4, 5, 0, 0, 4, 0, 27, 18, 1, 0, 1, 1, 1, 0]' : 0.086374}", "{'[0, 0, 6, 6, 4, 5, 0, 0, 4, 0, 27, 18, 1, 0, 1, 1, 1, 0]' : 0.0861192}", "{'[0, 0, 6, 6, 4, 5, 0, 0, 4, 0, 27, 18, 1, 0, 1, 1, 1, 0]' : 0.08602}", "{'[0, 0, 6, 6, 4, 5, 0, 0, 4, 0, 27, 18, 1, 0, 1, 1, 1, 0]' : 0.0861969}", "{'[0, 0, 6, 6, 4, 5, 0, 0, 4, 0, 27, 18, 1, 0, 1, 1, 1, 0]' : 0.0860941}", "{'[0, 0, 6, 6, 4, 5, 0, 0, 4, 0, 27, 18, 1, 0, 1, 1, 1, 0]' : 0.086133}", "{'[0, 0, 6, 6, 4, 5, 0, 0, 4, 0, 27, 18, 1, 0, 1, 1, 1, 0]' : 0.0862989}", "{'[0, 0, 6, 6, 4, 5, 0, 0, 4, 0, 27, 18, 1, 0, 1, 1, 1, 0]' : 0.087157}", "{'[0, 0, 6, 6, 4, 5, 0, 0, 4, 0, 27, 18, 1, 0, 1, 1, 1, 0]' : 0.08693}", "{'[0, 0, 6, 6, 4, 5, 0, 0, 4, 0, 27, 18, 1, 0, 1, 1, 1, 0]' : 0.0867531}"]
returning from 'run': {'[0, 0, 6, 6, 4, 5, 0, 0, 4, 0, 27, 18, 1, 0, 1, 1, 1, 0]': ([0.086225, 0.086318, 0.086133, 0.0863841, 0.0861471, 0.0860772, 0.086118, 0.0861759, 0.0859759, 0.086165, 0.0860879, 0.0862849, 0.0861521, 0.0861151, 0.0861919, 0.086256, 0.086267, 0.0860839, 0.08621, 0.0862072, 0.086374, 0.0861192, 0.08602, 0.0861969, 0.0860941, 0.086133, 0.0862989, 0.087157, 0.08693, 0.0867531], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 6, 6, 4, 5, 0, 0, 4, 0, 27, 18, 1, 0, 1, 1, 1, 0]': ([0.086225, 0.086318, 0.086133, 0.0863841, 0.0861471, 0.0860772, 0.086118, 0.0861759, 0.0859759, 0.086165, 0.0860879, 0.0862849, 0.0861521, 0.0861151, 0.0861919, 0.086256, 0.086267, 0.0860839, 0.08621, 0.0862072, 0.086374, 0.0861192, 0.08602, 0.0861969, 0.0860941, 0.086133, 0.0862989, 0.087157, 0.08693, 0.0867531], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		140
        Multiplications: 	26
        Divisions: 		0
        Logical: 		0
        Reads: 			295
        Writes: 		63
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest39.exe __orio_perftest39.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest39.exe  
Program Test Output: 
{'[6, 0, 1, 6, 5, 0, 1, 1, 15, 0, 3, 25, 0, 0, 1, 0, 1, 0]' : 0.35886}
{'[6, 0, 1, 6, 5, 0, 1, 1, 15, 0, 3, 25, 0, 0, 1, 0, 1, 0]' : 0.335106}
{'[6, 0, 1, 6, 5, 0, 1, 1, 15, 0, 3, 25, 0, 0, 1, 0, 1, 0]' : 0.30185}
{'[6, 0, 1, 6, 5, 0, 1, 1, 15, 0, 3, 25, 0, 0, 1, 0, 1, 0]' : 0.301579}
{'[6, 0, 1, 6, 5, 0, 1, 1, 15, 0, 3, 25, 0, 0, 1, 0, 1, 0]' : 0.301671}
{'[6, 0, 1, 6, 5, 0, 1, 1, 15, 0, 3, 25, 0, 0, 1, 0, 1, 0]' : 0.301934}
{'[6, 0, 1, 6, 5, 0, 1, 1, 15, 0, 3, 25, 0, 0, 1, 0, 1, 0]' : 0.302143}
{'[6, 0, 1, 6, 5, 0, 1, 1, 15, 0, 3, 25, 0, 0, 1, 0, 1, 0]' : 0.301913}
{'[6, 0, 1, 6, 5, 0, 1, 1, 15, 0, 3, 25, 0, 0, 1, 0, 1, 0]' : 0.30157}
{'[6, 0, 1, 6, 5, 0, 1, 1, 15, 0, 3, 25, 0, 0, 1, 0, 1, 0]' : 0.302021}
{'[6, 0, 1, 6, 5, 0, 1, 1, 15, 0, 3, 25, 0, 0, 1, 0, 1, 0]' : 0.301664}
{'[6, 0, 1, 6, 5, 0, 1, 1, 15, 0, 3, 25, 0, 0, 1, 0, 1, 0]' : 0.302133}
{'[6, 0, 1, 6, 5, 0, 1, 1, 15, 0, 3, 25, 0, 0, 1, 0, 1, 0]' : 0.302052}
{'[6, 0, 1, 6, 5, 0, 1, 1, 15, 0, 3, 25, 0, 0, 1, 0, 1, 0]' : 0.302023}
{'[6, 0, 1, 6, 5, 0, 1, 1, 15, 0, 3, 25, 0, 0, 1, 0, 1, 0]' : 0.301586}
{'[6, 0, 1, 6, 5, 0, 1, 1, 15, 0, 3, 25, 0, 0, 1, 0, 1, 0]' : 0.301665}
{'[6, 0, 1, 6, 5, 0, 1, 1, 15, 0, 3, 25, 0, 0, 1, 0, 1, 0]' : 0.302224}
{'[6, 0, 1, 6, 5, 0, 1, 1, 15, 0, 3, 25, 0, 0, 1, 0, 1, 0]' : 0.30193}
{'[6, 0, 1, 6, 5, 0, 1, 1, 15, 0, 3, 25, 0, 0, 1, 0, 1, 0]' : 0.301718}
{'[6, 0, 1, 6, 5, 0, 1, 1, 15, 0, 3, 25, 0, 0, 1, 0, 1, 0]' : 0.301835}
{'[6, 0, 1, 6, 5, 0, 1, 1, 15, 0, 3, 25, 0, 0, 1, 0, 1, 0]' : 0.302085}
{'[6, 0, 1, 6, 5, 0, 1, 1, 15, 0, 3, 25, 0, 0, 1, 0, 1, 0]' : 0.301753}
{'[6, 0, 1, 6, 5, 0, 1, 1, 15, 0, 3, 25, 0, 0, 1, 0, 1, 0]' : 0.301739}
{'[6, 0, 1, 6, 5, 0, 1, 1, 15, 0, 3, 25, 0, 0, 1, 0, 1, 0]' : 0.301757}
{'[6, 0, 1, 6, 5, 0, 1, 1, 15, 0, 3, 25, 0, 0, 1, 0, 1, 0]' : 0.301952}
{'[6, 0, 1, 6, 5, 0, 1, 1, 15, 0, 3, 25, 0, 0, 1, 0, 1, 0]' : 0.301782}
{'[6, 0, 1, 6, 5, 0, 1, 1, 15, 0, 3, 25, 0, 0, 1, 0, 1, 0]' : 0.30154}
{'[6, 0, 1, 6, 5, 0, 1, 1, 15, 0, 3, 25, 0, 0, 1, 0, 1, 0]' : 0.302152}
{'[6, 0, 1, 6, 5, 0, 1, 1, 15, 0, 3, 25, 0, 0, 1, 0, 1, 0]' : 0.30156}
{'[6, 0, 1, 6, 5, 0, 1, 1, 15, 0, 3, 25, 0, 0, 1, 0, 1, 0]' : 0.301722}

out:
 ["{'[6, 0, 1, 6, 5, 0, 1, 1, 15, 0, 3, 25, 0, 0, 1, 0, 1, 0]' : 0.35886}", "{'[6, 0, 1, 6, 5, 0, 1, 1, 15, 0, 3, 25, 0, 0, 1, 0, 1, 0]' : 0.335106}", "{'[6, 0, 1, 6, 5, 0, 1, 1, 15, 0, 3, 25, 0, 0, 1, 0, 1, 0]' : 0.30185}", "{'[6, 0, 1, 6, 5, 0, 1, 1, 15, 0, 3, 25, 0, 0, 1, 0, 1, 0]' : 0.301579}", "{'[6, 0, 1, 6, 5, 0, 1, 1, 15, 0, 3, 25, 0, 0, 1, 0, 1, 0]' : 0.301671}", "{'[6, 0, 1, 6, 5, 0, 1, 1, 15, 0, 3, 25, 0, 0, 1, 0, 1, 0]' : 0.301934}", "{'[6, 0, 1, 6, 5, 0, 1, 1, 15, 0, 3, 25, 0, 0, 1, 0, 1, 0]' : 0.302143}", "{'[6, 0, 1, 6, 5, 0, 1, 1, 15, 0, 3, 25, 0, 0, 1, 0, 1, 0]' : 0.301913}", "{'[6, 0, 1, 6, 5, 0, 1, 1, 15, 0, 3, 25, 0, 0, 1, 0, 1, 0]' : 0.30157}", "{'[6, 0, 1, 6, 5, 0, 1, 1, 15, 0, 3, 25, 0, 0, 1, 0, 1, 0]' : 0.302021}", "{'[6, 0, 1, 6, 5, 0, 1, 1, 15, 0, 3, 25, 0, 0, 1, 0, 1, 0]' : 0.301664}", "{'[6, 0, 1, 6, 5, 0, 1, 1, 15, 0, 3, 25, 0, 0, 1, 0, 1, 0]' : 0.302133}", "{'[6, 0, 1, 6, 5, 0, 1, 1, 15, 0, 3, 25, 0, 0, 1, 0, 1, 0]' : 0.302052}", "{'[6, 0, 1, 6, 5, 0, 1, 1, 15, 0, 3, 25, 0, 0, 1, 0, 1, 0]' : 0.302023}", "{'[6, 0, 1, 6, 5, 0, 1, 1, 15, 0, 3, 25, 0, 0, 1, 0, 1, 0]' : 0.301586}", "{'[6, 0, 1, 6, 5, 0, 1, 1, 15, 0, 3, 25, 0, 0, 1, 0, 1, 0]' : 0.301665}", "{'[6, 0, 1, 6, 5, 0, 1, 1, 15, 0, 3, 25, 0, 0, 1, 0, 1, 0]' : 0.302224}", "{'[6, 0, 1, 6, 5, 0, 1, 1, 15, 0, 3, 25, 0, 0, 1, 0, 1, 0]' : 0.30193}", "{'[6, 0, 1, 6, 5, 0, 1, 1, 15, 0, 3, 25, 0, 0, 1, 0, 1, 0]' : 0.301718}", "{'[6, 0, 1, 6, 5, 0, 1, 1, 15, 0, 3, 25, 0, 0, 1, 0, 1, 0]' : 0.301835}", "{'[6, 0, 1, 6, 5, 0, 1, 1, 15, 0, 3, 25, 0, 0, 1, 0, 1, 0]' : 0.302085}", "{'[6, 0, 1, 6, 5, 0, 1, 1, 15, 0, 3, 25, 0, 0, 1, 0, 1, 0]' : 0.301753}", "{'[6, 0, 1, 6, 5, 0, 1, 1, 15, 0, 3, 25, 0, 0, 1, 0, 1, 0]' : 0.301739}", "{'[6, 0, 1, 6, 5, 0, 1, 1, 15, 0, 3, 25, 0, 0, 1, 0, 1, 0]' : 0.301757}", "{'[6, 0, 1, 6, 5, 0, 1, 1, 15, 0, 3, 25, 0, 0, 1, 0, 1, 0]' : 0.301952}", "{'[6, 0, 1, 6, 5, 0, 1, 1, 15, 0, 3, 25, 0, 0, 1, 0, 1, 0]' : 0.301782}", "{'[6, 0, 1, 6, 5, 0, 1, 1, 15, 0, 3, 25, 0, 0, 1, 0, 1, 0]' : 0.30154}", "{'[6, 0, 1, 6, 5, 0, 1, 1, 15, 0, 3, 25, 0, 0, 1, 0, 1, 0]' : 0.302152}", "{'[6, 0, 1, 6, 5, 0, 1, 1, 15, 0, 3, 25, 0, 0, 1, 0, 1, 0]' : 0.30156}", "{'[6, 0, 1, 6, 5, 0, 1, 1, 15, 0, 3, 25, 0, 0, 1, 0, 1, 0]' : 0.301722}"]
returning from 'run': {'[6, 0, 1, 6, 5, 0, 1, 1, 15, 0, 3, 25, 0, 0, 1, 0, 1, 0]': ([0.35886, 0.335106, 0.30185, 0.301579, 0.301671, 0.301934, 0.302143, 0.301913, 0.30157, 0.302021, 0.301664, 0.302133, 0.302052, 0.302023, 0.301586, 0.301665, 0.302224, 0.30193, 0.301718, 0.301835, 0.302085, 0.301753, 0.301739, 0.301757, 0.301952, 0.301782, 0.30154, 0.302152, 0.30156, 0.301722], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 1, 6, 5, 0, 1, 1, 15, 0, 3, 25, 0, 0, 1, 0, 1, 0]': ([0.35886, 0.335106, 0.30185, 0.301579, 0.301671, 0.301934, 0.302143, 0.301913, 0.30157, 0.302021, 0.301664, 0.302133, 0.302052, 0.302023, 0.301586, 0.301665, 0.302224, 0.30193, 0.301718, 0.301835, 0.302085, 0.301753, 0.301739, 0.301757, 0.301952, 0.301782, 0.30154, 0.302152, 0.30156, 0.301722], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	54
        Max loop nest depth: 	6
        Additions: 		7948
        Multiplications: 	3840
        Divisions: 		0
        Logical: 		0
        Reads: 			15002
        Writes: 		2435
        Comparisons:		54
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest40.exe __orio_perftest40.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest40.exe  
Program Test Output: 
{'[2, 1, 6, 5, 2, 0, 1, 0, 27, 26, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.19726}
{'[2, 1, 6, 5, 2, 0, 1, 0, 27, 26, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.196794}
{'[2, 1, 6, 5, 2, 0, 1, 0, 27, 26, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.183466}
{'[2, 1, 6, 5, 2, 0, 1, 0, 27, 26, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.174804}
{'[2, 1, 6, 5, 2, 0, 1, 0, 27, 26, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.173923}
{'[2, 1, 6, 5, 2, 0, 1, 0, 27, 26, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.173526}
{'[2, 1, 6, 5, 2, 0, 1, 0, 27, 26, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.174035}
{'[2, 1, 6, 5, 2, 0, 1, 0, 27, 26, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.173531}
{'[2, 1, 6, 5, 2, 0, 1, 0, 27, 26, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.173115}
{'[2, 1, 6, 5, 2, 0, 1, 0, 27, 26, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.174095}
{'[2, 1, 6, 5, 2, 0, 1, 0, 27, 26, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.173827}
{'[2, 1, 6, 5, 2, 0, 1, 0, 27, 26, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.173955}
{'[2, 1, 6, 5, 2, 0, 1, 0, 27, 26, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.173574}
{'[2, 1, 6, 5, 2, 0, 1, 0, 27, 26, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.173983}
{'[2, 1, 6, 5, 2, 0, 1, 0, 27, 26, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.174666}
{'[2, 1, 6, 5, 2, 0, 1, 0, 27, 26, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.173647}
{'[2, 1, 6, 5, 2, 0, 1, 0, 27, 26, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.173771}
{'[2, 1, 6, 5, 2, 0, 1, 0, 27, 26, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.173367}
{'[2, 1, 6, 5, 2, 0, 1, 0, 27, 26, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.173941}
{'[2, 1, 6, 5, 2, 0, 1, 0, 27, 26, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.174184}
{'[2, 1, 6, 5, 2, 0, 1, 0, 27, 26, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.173758}
{'[2, 1, 6, 5, 2, 0, 1, 0, 27, 26, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.1738}
{'[2, 1, 6, 5, 2, 0, 1, 0, 27, 26, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.174097}
{'[2, 1, 6, 5, 2, 0, 1, 0, 27, 26, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.174039}
{'[2, 1, 6, 5, 2, 0, 1, 0, 27, 26, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.174169}
{'[2, 1, 6, 5, 2, 0, 1, 0, 27, 26, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.174527}
{'[2, 1, 6, 5, 2, 0, 1, 0, 27, 26, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.172685}
{'[2, 1, 6, 5, 2, 0, 1, 0, 27, 26, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.174013}
{'[2, 1, 6, 5, 2, 0, 1, 0, 27, 26, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.173323}
{'[2, 1, 6, 5, 2, 0, 1, 0, 27, 26, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.173566}

out:
 ["{'[2, 1, 6, 5, 2, 0, 1, 0, 27, 26, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.19726}", "{'[2, 1, 6, 5, 2, 0, 1, 0, 27, 26, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.196794}", "{'[2, 1, 6, 5, 2, 0, 1, 0, 27, 26, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.183466}", "{'[2, 1, 6, 5, 2, 0, 1, 0, 27, 26, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.174804}", "{'[2, 1, 6, 5, 2, 0, 1, 0, 27, 26, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.173923}", "{'[2, 1, 6, 5, 2, 0, 1, 0, 27, 26, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.173526}", "{'[2, 1, 6, 5, 2, 0, 1, 0, 27, 26, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.174035}", "{'[2, 1, 6, 5, 2, 0, 1, 0, 27, 26, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.173531}", "{'[2, 1, 6, 5, 2, 0, 1, 0, 27, 26, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.173115}", "{'[2, 1, 6, 5, 2, 0, 1, 0, 27, 26, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.174095}", "{'[2, 1, 6, 5, 2, 0, 1, 0, 27, 26, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.173827}", "{'[2, 1, 6, 5, 2, 0, 1, 0, 27, 26, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.173955}", "{'[2, 1, 6, 5, 2, 0, 1, 0, 27, 26, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.173574}", "{'[2, 1, 6, 5, 2, 0, 1, 0, 27, 26, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.173983}", "{'[2, 1, 6, 5, 2, 0, 1, 0, 27, 26, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.174666}", "{'[2, 1, 6, 5, 2, 0, 1, 0, 27, 26, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.173647}", "{'[2, 1, 6, 5, 2, 0, 1, 0, 27, 26, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.173771}", "{'[2, 1, 6, 5, 2, 0, 1, 0, 27, 26, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.173367}", "{'[2, 1, 6, 5, 2, 0, 1, 0, 27, 26, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.173941}", "{'[2, 1, 6, 5, 2, 0, 1, 0, 27, 26, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.174184}", "{'[2, 1, 6, 5, 2, 0, 1, 0, 27, 26, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.173758}", "{'[2, 1, 6, 5, 2, 0, 1, 0, 27, 26, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.1738}", "{'[2, 1, 6, 5, 2, 0, 1, 0, 27, 26, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.174097}", "{'[2, 1, 6, 5, 2, 0, 1, 0, 27, 26, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.174039}", "{'[2, 1, 6, 5, 2, 0, 1, 0, 27, 26, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.174169}", "{'[2, 1, 6, 5, 2, 0, 1, 0, 27, 26, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.174527}", "{'[2, 1, 6, 5, 2, 0, 1, 0, 27, 26, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.172685}", "{'[2, 1, 6, 5, 2, 0, 1, 0, 27, 26, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.174013}", "{'[2, 1, 6, 5, 2, 0, 1, 0, 27, 26, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.173323}", "{'[2, 1, 6, 5, 2, 0, 1, 0, 27, 26, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.173566}"]
returning from 'run': {'[2, 1, 6, 5, 2, 0, 1, 0, 27, 26, 0, 29, 2, 0, 0, 1, 0, 1]': ([0.19726, 0.196794, 0.183466, 0.174804, 0.173923, 0.173526, 0.174035, 0.173531, 0.173115, 0.174095, 0.173827, 0.173955, 0.173574, 0.173983, 0.174666, 0.173647, 0.173771, 0.173367, 0.173941, 0.174184, 0.173758, 0.1738, 0.174097, 0.174039, 0.174169, 0.174527, 0.172685, 0.174013, 0.173323, 0.173566], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 1, 6, 5, 2, 0, 1, 0, 27, 26, 0, 29, 2, 0, 0, 1, 0, 1]': ([0.19726, 0.196794, 0.183466, 0.174804, 0.173923, 0.173526, 0.174035, 0.173531, 0.173115, 0.174095, 0.173827, 0.173955, 0.173574, 0.173983, 0.174666, 0.173647, 0.173771, 0.173367, 0.173941, 0.174184, 0.173758, 0.1738, 0.174097, 0.174039, 0.174169, 0.174527, 0.172685, 0.174013, 0.173323, 0.173566], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	39
        Max loop nest depth: 	4
        Additions: 		2941
        Multiplications: 	868
        Divisions: 		0
        Logical: 		0
        Reads: 			4748
        Writes: 		554
        Comparisons:		39
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest41.exe __orio_perftest41.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest41.exe  
Program Test Output: 
{'[5, 0, 4, 0, 1, 0, 1, 0, 26, 4, 0, 20, 1, 0, 1, 0, 0, 0]' : 0.107518}
{'[5, 0, 4, 0, 1, 0, 1, 0, 26, 4, 0, 20, 1, 0, 1, 0, 0, 0]' : 0.107724}
{'[5, 0, 4, 0, 1, 0, 1, 0, 26, 4, 0, 20, 1, 0, 1, 0, 0, 0]' : 0.107271}
{'[5, 0, 4, 0, 1, 0, 1, 0, 26, 4, 0, 20, 1, 0, 1, 0, 0, 0]' : 0.107474}
{'[5, 0, 4, 0, 1, 0, 1, 0, 26, 4, 0, 20, 1, 0, 1, 0, 0, 0]' : 0.107384}
{'[5, 0, 4, 0, 1, 0, 1, 0, 26, 4, 0, 20, 1, 0, 1, 0, 0, 0]' : 0.107856}
{'[5, 0, 4, 0, 1, 0, 1, 0, 26, 4, 0, 20, 1, 0, 1, 0, 0, 0]' : 0.107195}
{'[5, 0, 4, 0, 1, 0, 1, 0, 26, 4, 0, 20, 1, 0, 1, 0, 0, 0]' : 0.107407}
{'[5, 0, 4, 0, 1, 0, 1, 0, 26, 4, 0, 20, 1, 0, 1, 0, 0, 0]' : 0.107474}
{'[5, 0, 4, 0, 1, 0, 1, 0, 26, 4, 0, 20, 1, 0, 1, 0, 0, 0]' : 0.107755}
{'[5, 0, 4, 0, 1, 0, 1, 0, 26, 4, 0, 20, 1, 0, 1, 0, 0, 0]' : 0.107236}
{'[5, 0, 4, 0, 1, 0, 1, 0, 26, 4, 0, 20, 1, 0, 1, 0, 0, 0]' : 0.107759}
{'[5, 0, 4, 0, 1, 0, 1, 0, 26, 4, 0, 20, 1, 0, 1, 0, 0, 0]' : 0.107675}
{'[5, 0, 4, 0, 1, 0, 1, 0, 26, 4, 0, 20, 1, 0, 1, 0, 0, 0]' : 0.107635}
{'[5, 0, 4, 0, 1, 0, 1, 0, 26, 4, 0, 20, 1, 0, 1, 0, 0, 0]' : 0.107189}
{'[5, 0, 4, 0, 1, 0, 1, 0, 26, 4, 0, 20, 1, 0, 1, 0, 0, 0]' : 0.108332}
{'[5, 0, 4, 0, 1, 0, 1, 0, 26, 4, 0, 20, 1, 0, 1, 0, 0, 0]' : 0.108134}
{'[5, 0, 4, 0, 1, 0, 1, 0, 26, 4, 0, 20, 1, 0, 1, 0, 0, 0]' : 0.108224}
{'[5, 0, 4, 0, 1, 0, 1, 0, 26, 4, 0, 20, 1, 0, 1, 0, 0, 0]' : 0.107819}
{'[5, 0, 4, 0, 1, 0, 1, 0, 26, 4, 0, 20, 1, 0, 1, 0, 0, 0]' : 0.10758}
{'[5, 0, 4, 0, 1, 0, 1, 0, 26, 4, 0, 20, 1, 0, 1, 0, 0, 0]' : 0.107396}
{'[5, 0, 4, 0, 1, 0, 1, 0, 26, 4, 0, 20, 1, 0, 1, 0, 0, 0]' : 0.107625}
{'[5, 0, 4, 0, 1, 0, 1, 0, 26, 4, 0, 20, 1, 0, 1, 0, 0, 0]' : 0.107279}
{'[5, 0, 4, 0, 1, 0, 1, 0, 26, 4, 0, 20, 1, 0, 1, 0, 0, 0]' : 0.107508}
{'[5, 0, 4, 0, 1, 0, 1, 0, 26, 4, 0, 20, 1, 0, 1, 0, 0, 0]' : 0.107771}
{'[5, 0, 4, 0, 1, 0, 1, 0, 26, 4, 0, 20, 1, 0, 1, 0, 0, 0]' : 0.107849}
{'[5, 0, 4, 0, 1, 0, 1, 0, 26, 4, 0, 20, 1, 0, 1, 0, 0, 0]' : 0.107276}
{'[5, 0, 4, 0, 1, 0, 1, 0, 26, 4, 0, 20, 1, 0, 1, 0, 0, 0]' : 0.107755}
{'[5, 0, 4, 0, 1, 0, 1, 0, 26, 4, 0, 20, 1, 0, 1, 0, 0, 0]' : 0.107413}
{'[5, 0, 4, 0, 1, 0, 1, 0, 26, 4, 0, 20, 1, 0, 1, 0, 0, 0]' : 0.107806}

out:
 ["{'[5, 0, 4, 0, 1, 0, 1, 0, 26, 4, 0, 20, 1, 0, 1, 0, 0, 0]' : 0.107518}", "{'[5, 0, 4, 0, 1, 0, 1, 0, 26, 4, 0, 20, 1, 0, 1, 0, 0, 0]' : 0.107724}", "{'[5, 0, 4, 0, 1, 0, 1, 0, 26, 4, 0, 20, 1, 0, 1, 0, 0, 0]' : 0.107271}", "{'[5, 0, 4, 0, 1, 0, 1, 0, 26, 4, 0, 20, 1, 0, 1, 0, 0, 0]' : 0.107474}", "{'[5, 0, 4, 0, 1, 0, 1, 0, 26, 4, 0, 20, 1, 0, 1, 0, 0, 0]' : 0.107384}", "{'[5, 0, 4, 0, 1, 0, 1, 0, 26, 4, 0, 20, 1, 0, 1, 0, 0, 0]' : 0.107856}", "{'[5, 0, 4, 0, 1, 0, 1, 0, 26, 4, 0, 20, 1, 0, 1, 0, 0, 0]' : 0.107195}", "{'[5, 0, 4, 0, 1, 0, 1, 0, 26, 4, 0, 20, 1, 0, 1, 0, 0, 0]' : 0.107407}", "{'[5, 0, 4, 0, 1, 0, 1, 0, 26, 4, 0, 20, 1, 0, 1, 0, 0, 0]' : 0.107474}", "{'[5, 0, 4, 0, 1, 0, 1, 0, 26, 4, 0, 20, 1, 0, 1, 0, 0, 0]' : 0.107755}", "{'[5, 0, 4, 0, 1, 0, 1, 0, 26, 4, 0, 20, 1, 0, 1, 0, 0, 0]' : 0.107236}", "{'[5, 0, 4, 0, 1, 0, 1, 0, 26, 4, 0, 20, 1, 0, 1, 0, 0, 0]' : 0.107759}", "{'[5, 0, 4, 0, 1, 0, 1, 0, 26, 4, 0, 20, 1, 0, 1, 0, 0, 0]' : 0.107675}", "{'[5, 0, 4, 0, 1, 0, 1, 0, 26, 4, 0, 20, 1, 0, 1, 0, 0, 0]' : 0.107635}", "{'[5, 0, 4, 0, 1, 0, 1, 0, 26, 4, 0, 20, 1, 0, 1, 0, 0, 0]' : 0.107189}", "{'[5, 0, 4, 0, 1, 0, 1, 0, 26, 4, 0, 20, 1, 0, 1, 0, 0, 0]' : 0.108332}", "{'[5, 0, 4, 0, 1, 0, 1, 0, 26, 4, 0, 20, 1, 0, 1, 0, 0, 0]' : 0.108134}", "{'[5, 0, 4, 0, 1, 0, 1, 0, 26, 4, 0, 20, 1, 0, 1, 0, 0, 0]' : 0.108224}", "{'[5, 0, 4, 0, 1, 0, 1, 0, 26, 4, 0, 20, 1, 0, 1, 0, 0, 0]' : 0.107819}", "{'[5, 0, 4, 0, 1, 0, 1, 0, 26, 4, 0, 20, 1, 0, 1, 0, 0, 0]' : 0.10758}", "{'[5, 0, 4, 0, 1, 0, 1, 0, 26, 4, 0, 20, 1, 0, 1, 0, 0, 0]' : 0.107396}", "{'[5, 0, 4, 0, 1, 0, 1, 0, 26, 4, 0, 20, 1, 0, 1, 0, 0, 0]' : 0.107625}", "{'[5, 0, 4, 0, 1, 0, 1, 0, 26, 4, 0, 20, 1, 0, 1, 0, 0, 0]' : 0.107279}", "{'[5, 0, 4, 0, 1, 0, 1, 0, 26, 4, 0, 20, 1, 0, 1, 0, 0, 0]' : 0.107508}", "{'[5, 0, 4, 0, 1, 0, 1, 0, 26, 4, 0, 20, 1, 0, 1, 0, 0, 0]' : 0.107771}", "{'[5, 0, 4, 0, 1, 0, 1, 0, 26, 4, 0, 20, 1, 0, 1, 0, 0, 0]' : 0.107849}", "{'[5, 0, 4, 0, 1, 0, 1, 0, 26, 4, 0, 20, 1, 0, 1, 0, 0, 0]' : 0.107276}", "{'[5, 0, 4, 0, 1, 0, 1, 0, 26, 4, 0, 20, 1, 0, 1, 0, 0, 0]' : 0.107755}", "{'[5, 0, 4, 0, 1, 0, 1, 0, 26, 4, 0, 20, 1, 0, 1, 0, 0, 0]' : 0.107413}", "{'[5, 0, 4, 0, 1, 0, 1, 0, 26, 4, 0, 20, 1, 0, 1, 0, 0, 0]' : 0.107806}"]
returning from 'run': {'[5, 0, 4, 0, 1, 0, 1, 0, 26, 4, 0, 20, 1, 0, 1, 0, 0, 0]': ([0.107518, 0.107724, 0.107271, 0.107474, 0.107384, 0.107856, 0.107195, 0.107407, 0.107474, 0.107755, 0.107236, 0.107759, 0.107675, 0.107635, 0.107189, 0.108332, 0.108134, 0.108224, 0.107819, 0.10758, 0.107396, 0.107625, 0.107279, 0.107508, 0.107771, 0.107849, 0.107276, 0.107755, 0.107413, 0.107806], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 0, 4, 0, 1, 0, 1, 0, 26, 4, 0, 20, 1, 0, 1, 0, 0, 0]': ([0.107518, 0.107724, 0.107271, 0.107474, 0.107384, 0.107856, 0.107195, 0.107407, 0.107474, 0.107755, 0.107236, 0.107759, 0.107675, 0.107635, 0.107189, 0.108332, 0.108134, 0.108224, 0.107819, 0.10758, 0.107396, 0.107625, 0.107279, 0.107508, 0.107771, 0.107849, 0.107276, 0.107755, 0.107413, 0.107806], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	109
        Max loop nest depth: 	6
        Additions: 		1740
        Multiplications: 	630
        Divisions: 		0
        Logical: 		0
        Reads: 			3828
        Writes: 		771
        Comparisons:		109
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest42.exe __orio_perftest42.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest42.exe  
Program Test Output: 
{'[4, 5, 3, 5, 6, 6, 1, 1, 1, 25, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.108499}
{'[4, 5, 3, 5, 6, 6, 1, 1, 1, 25, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.108671}
{'[4, 5, 3, 5, 6, 6, 1, 1, 1, 25, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.108381}
{'[4, 5, 3, 5, 6, 6, 1, 1, 1, 25, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.108441}
{'[4, 5, 3, 5, 6, 6, 1, 1, 1, 25, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.107339}
{'[4, 5, 3, 5, 6, 6, 1, 1, 1, 25, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.096096}
{'[4, 5, 3, 5, 6, 6, 1, 1, 1, 25, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0949728}
{'[4, 5, 3, 5, 6, 6, 1, 1, 1, 25, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0949581}
{'[4, 5, 3, 5, 6, 6, 1, 1, 1, 25, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0952611}
{'[4, 5, 3, 5, 6, 6, 1, 1, 1, 25, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.095062}
{'[4, 5, 3, 5, 6, 6, 1, 1, 1, 25, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.095227}
{'[4, 5, 3, 5, 6, 6, 1, 1, 1, 25, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0950859}
{'[4, 5, 3, 5, 6, 6, 1, 1, 1, 25, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0949411}
{'[4, 5, 3, 5, 6, 6, 1, 1, 1, 25, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.094852}
{'[4, 5, 3, 5, 6, 6, 1, 1, 1, 25, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0949512}
{'[4, 5, 3, 5, 6, 6, 1, 1, 1, 25, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0949068}
{'[4, 5, 3, 5, 6, 6, 1, 1, 1, 25, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.09496}
{'[4, 5, 3, 5, 6, 6, 1, 1, 1, 25, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0950959}
{'[4, 5, 3, 5, 6, 6, 1, 1, 1, 25, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0949528}
{'[4, 5, 3, 5, 6, 6, 1, 1, 1, 25, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0952611}
{'[4, 5, 3, 5, 6, 6, 1, 1, 1, 25, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0950639}
{'[4, 5, 3, 5, 6, 6, 1, 1, 1, 25, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.095063}
{'[4, 5, 3, 5, 6, 6, 1, 1, 1, 25, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0951879}
{'[4, 5, 3, 5, 6, 6, 1, 1, 1, 25, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0949869}
{'[4, 5, 3, 5, 6, 6, 1, 1, 1, 25, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.094934}
{'[4, 5, 3, 5, 6, 6, 1, 1, 1, 25, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.094914}
{'[4, 5, 3, 5, 6, 6, 1, 1, 1, 25, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0949242}
{'[4, 5, 3, 5, 6, 6, 1, 1, 1, 25, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.095047}
{'[4, 5, 3, 5, 6, 6, 1, 1, 1, 25, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0949459}
{'[4, 5, 3, 5, 6, 6, 1, 1, 1, 25, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0950081}

out:
 ["{'[4, 5, 3, 5, 6, 6, 1, 1, 1, 25, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.108499}", "{'[4, 5, 3, 5, 6, 6, 1, 1, 1, 25, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.108671}", "{'[4, 5, 3, 5, 6, 6, 1, 1, 1, 25, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.108381}", "{'[4, 5, 3, 5, 6, 6, 1, 1, 1, 25, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.108441}", "{'[4, 5, 3, 5, 6, 6, 1, 1, 1, 25, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.107339}", "{'[4, 5, 3, 5, 6, 6, 1, 1, 1, 25, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.096096}", "{'[4, 5, 3, 5, 6, 6, 1, 1, 1, 25, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0949728}", "{'[4, 5, 3, 5, 6, 6, 1, 1, 1, 25, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0949581}", "{'[4, 5, 3, 5, 6, 6, 1, 1, 1, 25, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0952611}", "{'[4, 5, 3, 5, 6, 6, 1, 1, 1, 25, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.095062}", "{'[4, 5, 3, 5, 6, 6, 1, 1, 1, 25, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.095227}", "{'[4, 5, 3, 5, 6, 6, 1, 1, 1, 25, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0950859}", "{'[4, 5, 3, 5, 6, 6, 1, 1, 1, 25, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0949411}", "{'[4, 5, 3, 5, 6, 6, 1, 1, 1, 25, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.094852}", "{'[4, 5, 3, 5, 6, 6, 1, 1, 1, 25, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0949512}", "{'[4, 5, 3, 5, 6, 6, 1, 1, 1, 25, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0949068}", "{'[4, 5, 3, 5, 6, 6, 1, 1, 1, 25, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.09496}", "{'[4, 5, 3, 5, 6, 6, 1, 1, 1, 25, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0950959}", "{'[4, 5, 3, 5, 6, 6, 1, 1, 1, 25, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0949528}", "{'[4, 5, 3, 5, 6, 6, 1, 1, 1, 25, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0952611}", "{'[4, 5, 3, 5, 6, 6, 1, 1, 1, 25, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0950639}", "{'[4, 5, 3, 5, 6, 6, 1, 1, 1, 25, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.095063}", "{'[4, 5, 3, 5, 6, 6, 1, 1, 1, 25, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0951879}", "{'[4, 5, 3, 5, 6, 6, 1, 1, 1, 25, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0949869}", "{'[4, 5, 3, 5, 6, 6, 1, 1, 1, 25, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.094934}", "{'[4, 5, 3, 5, 6, 6, 1, 1, 1, 25, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.094914}", "{'[4, 5, 3, 5, 6, 6, 1, 1, 1, 25, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0949242}", "{'[4, 5, 3, 5, 6, 6, 1, 1, 1, 25, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.095047}", "{'[4, 5, 3, 5, 6, 6, 1, 1, 1, 25, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0949459}", "{'[4, 5, 3, 5, 6, 6, 1, 1, 1, 25, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0950081}"]
returning from 'run': {'[4, 5, 3, 5, 6, 6, 1, 1, 1, 25, 0, 0, 1, 0, 1, 1, 1, 0]': ([0.108499, 0.108671, 0.108381, 0.108441, 0.107339, 0.096096, 0.0949728, 0.0949581, 0.0952611, 0.095062, 0.095227, 0.0950859, 0.0949411, 0.094852, 0.0949512, 0.0949068, 0.09496, 0.0950959, 0.0949528, 0.0952611, 0.0950639, 0.095063, 0.0951879, 0.0949869, 0.094934, 0.094914, 0.0949242, 0.095047, 0.0949459, 0.0950081], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 5, 3, 5, 6, 6, 1, 1, 1, 25, 0, 0, 1, 0, 1, 1, 1, 0]': ([0.108499, 0.108671, 0.108381, 0.108441, 0.107339, 0.096096, 0.0949728, 0.0949581, 0.0952611, 0.095062, 0.095227, 0.0950859, 0.0949411, 0.094852, 0.0949512, 0.0949068, 0.09496, 0.0950959, 0.0949528, 0.0952611, 0.0950639, 0.095063, 0.0951879, 0.0949869, 0.094934, 0.094914, 0.0949242, 0.095047, 0.0949459, 0.0950081], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	59
        Max loop nest depth: 	5
        Additions: 		3078
        Multiplications: 	884
        Divisions: 		0
        Logical: 		0
        Reads: 			5115
        Writes: 		618
        Comparisons:		59
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest43.exe __orio_perftest43.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest43.exe  
Program Test Output: 
{'[2, 0, 0, 2, 2, 3, 0, 1, 0, 16, 14, 0, 1, 0, 0, 0, 0, 0]' : 0.116178}
{'[2, 0, 0, 2, 2, 3, 0, 1, 0, 16, 14, 0, 1, 0, 0, 0, 0, 0]' : 0.116381}
{'[2, 0, 0, 2, 2, 3, 0, 1, 0, 16, 14, 0, 1, 0, 0, 0, 0, 0]' : 0.116144}
{'[2, 0, 0, 2, 2, 3, 0, 1, 0, 16, 14, 0, 1, 0, 0, 0, 0, 0]' : 0.11619}
{'[2, 0, 0, 2, 2, 3, 0, 1, 0, 16, 14, 0, 1, 0, 0, 0, 0, 0]' : 0.108091}
{'[2, 0, 0, 2, 2, 3, 0, 1, 0, 16, 14, 0, 1, 0, 0, 0, 0, 0]' : 0.0985031}
{'[2, 0, 0, 2, 2, 3, 0, 1, 0, 16, 14, 0, 1, 0, 0, 0, 0, 0]' : 0.0975549}
{'[2, 0, 0, 2, 2, 3, 0, 1, 0, 16, 14, 0, 1, 0, 0, 0, 0, 0]' : 0.0981688}
{'[2, 0, 0, 2, 2, 3, 0, 1, 0, 16, 14, 0, 1, 0, 0, 0, 0, 0]' : 0.098181}
{'[2, 0, 0, 2, 2, 3, 0, 1, 0, 16, 14, 0, 1, 0, 0, 0, 0, 0]' : 0.0984359}
{'[2, 0, 0, 2, 2, 3, 0, 1, 0, 16, 14, 0, 1, 0, 0, 0, 0, 0]' : 0.098151}
{'[2, 0, 0, 2, 2, 3, 0, 1, 0, 16, 14, 0, 1, 0, 0, 0, 0, 0]' : 0.098232}
{'[2, 0, 0, 2, 2, 3, 0, 1, 0, 16, 14, 0, 1, 0, 0, 0, 0, 0]' : 0.0982039}
{'[2, 0, 0, 2, 2, 3, 0, 1, 0, 16, 14, 0, 1, 0, 0, 0, 0, 0]' : 0.098273}
{'[2, 0, 0, 2, 2, 3, 0, 1, 0, 16, 14, 0, 1, 0, 0, 0, 0, 0]' : 0.0981181}
{'[2, 0, 0, 2, 2, 3, 0, 1, 0, 16, 14, 0, 1, 0, 0, 0, 0, 0]' : 0.0981472}
{'[2, 0, 0, 2, 2, 3, 0, 1, 0, 16, 14, 0, 1, 0, 0, 0, 0, 0]' : 0.0982988}
{'[2, 0, 0, 2, 2, 3, 0, 1, 0, 16, 14, 0, 1, 0, 0, 0, 0, 0]' : 0.098248}
{'[2, 0, 0, 2, 2, 3, 0, 1, 0, 16, 14, 0, 1, 0, 0, 0, 0, 0]' : 0.0981269}
{'[2, 0, 0, 2, 2, 3, 0, 1, 0, 16, 14, 0, 1, 0, 0, 0, 0, 0]' : 0.0981491}
{'[2, 0, 0, 2, 2, 3, 0, 1, 0, 16, 14, 0, 1, 0, 0, 0, 0, 0]' : 0.0987389}
{'[2, 0, 0, 2, 2, 3, 0, 1, 0, 16, 14, 0, 1, 0, 0, 0, 0, 0]' : 0.0985351}
{'[2, 0, 0, 2, 2, 3, 0, 1, 0, 16, 14, 0, 1, 0, 0, 0, 0, 0]' : 0.097713}
{'[2, 0, 0, 2, 2, 3, 0, 1, 0, 16, 14, 0, 1, 0, 0, 0, 0, 0]' : 0.0981801}
{'[2, 0, 0, 2, 2, 3, 0, 1, 0, 16, 14, 0, 1, 0, 0, 0, 0, 0]' : 0.0983579}
{'[2, 0, 0, 2, 2, 3, 0, 1, 0, 16, 14, 0, 1, 0, 0, 0, 0, 0]' : 0.0983009}
{'[2, 0, 0, 2, 2, 3, 0, 1, 0, 16, 14, 0, 1, 0, 0, 0, 0, 0]' : 0.0978451}
{'[2, 0, 0, 2, 2, 3, 0, 1, 0, 16, 14, 0, 1, 0, 0, 0, 0, 0]' : 0.0982981}
{'[2, 0, 0, 2, 2, 3, 0, 1, 0, 16, 14, 0, 1, 0, 0, 0, 0, 0]' : 0.098073}
{'[2, 0, 0, 2, 2, 3, 0, 1, 0, 16, 14, 0, 1, 0, 0, 0, 0, 0]' : 0.0982559}

out:
 ["{'[2, 0, 0, 2, 2, 3, 0, 1, 0, 16, 14, 0, 1, 0, 0, 0, 0, 0]' : 0.116178}", "{'[2, 0, 0, 2, 2, 3, 0, 1, 0, 16, 14, 0, 1, 0, 0, 0, 0, 0]' : 0.116381}", "{'[2, 0, 0, 2, 2, 3, 0, 1, 0, 16, 14, 0, 1, 0, 0, 0, 0, 0]' : 0.116144}", "{'[2, 0, 0, 2, 2, 3, 0, 1, 0, 16, 14, 0, 1, 0, 0, 0, 0, 0]' : 0.11619}", "{'[2, 0, 0, 2, 2, 3, 0, 1, 0, 16, 14, 0, 1, 0, 0, 0, 0, 0]' : 0.108091}", "{'[2, 0, 0, 2, 2, 3, 0, 1, 0, 16, 14, 0, 1, 0, 0, 0, 0, 0]' : 0.0985031}", "{'[2, 0, 0, 2, 2, 3, 0, 1, 0, 16, 14, 0, 1, 0, 0, 0, 0, 0]' : 0.0975549}", "{'[2, 0, 0, 2, 2, 3, 0, 1, 0, 16, 14, 0, 1, 0, 0, 0, 0, 0]' : 0.0981688}", "{'[2, 0, 0, 2, 2, 3, 0, 1, 0, 16, 14, 0, 1, 0, 0, 0, 0, 0]' : 0.098181}", "{'[2, 0, 0, 2, 2, 3, 0, 1, 0, 16, 14, 0, 1, 0, 0, 0, 0, 0]' : 0.0984359}", "{'[2, 0, 0, 2, 2, 3, 0, 1, 0, 16, 14, 0, 1, 0, 0, 0, 0, 0]' : 0.098151}", "{'[2, 0, 0, 2, 2, 3, 0, 1, 0, 16, 14, 0, 1, 0, 0, 0, 0, 0]' : 0.098232}", "{'[2, 0, 0, 2, 2, 3, 0, 1, 0, 16, 14, 0, 1, 0, 0, 0, 0, 0]' : 0.0982039}", "{'[2, 0, 0, 2, 2, 3, 0, 1, 0, 16, 14, 0, 1, 0, 0, 0, 0, 0]' : 0.098273}", "{'[2, 0, 0, 2, 2, 3, 0, 1, 0, 16, 14, 0, 1, 0, 0, 0, 0, 0]' : 0.0981181}", "{'[2, 0, 0, 2, 2, 3, 0, 1, 0, 16, 14, 0, 1, 0, 0, 0, 0, 0]' : 0.0981472}", "{'[2, 0, 0, 2, 2, 3, 0, 1, 0, 16, 14, 0, 1, 0, 0, 0, 0, 0]' : 0.0982988}", "{'[2, 0, 0, 2, 2, 3, 0, 1, 0, 16, 14, 0, 1, 0, 0, 0, 0, 0]' : 0.098248}", "{'[2, 0, 0, 2, 2, 3, 0, 1, 0, 16, 14, 0, 1, 0, 0, 0, 0, 0]' : 0.0981269}", "{'[2, 0, 0, 2, 2, 3, 0, 1, 0, 16, 14, 0, 1, 0, 0, 0, 0, 0]' : 0.0981491}", "{'[2, 0, 0, 2, 2, 3, 0, 1, 0, 16, 14, 0, 1, 0, 0, 0, 0, 0]' : 0.0987389}", "{'[2, 0, 0, 2, 2, 3, 0, 1, 0, 16, 14, 0, 1, 0, 0, 0, 0, 0]' : 0.0985351}", "{'[2, 0, 0, 2, 2, 3, 0, 1, 0, 16, 14, 0, 1, 0, 0, 0, 0, 0]' : 0.097713}", "{'[2, 0, 0, 2, 2, 3, 0, 1, 0, 16, 14, 0, 1, 0, 0, 0, 0, 0]' : 0.0981801}", "{'[2, 0, 0, 2, 2, 3, 0, 1, 0, 16, 14, 0, 1, 0, 0, 0, 0, 0]' : 0.0983579}", "{'[2, 0, 0, 2, 2, 3, 0, 1, 0, 16, 14, 0, 1, 0, 0, 0, 0, 0]' : 0.0983009}", "{'[2, 0, 0, 2, 2, 3, 0, 1, 0, 16, 14, 0, 1, 0, 0, 0, 0, 0]' : 0.0978451}", "{'[2, 0, 0, 2, 2, 3, 0, 1, 0, 16, 14, 0, 1, 0, 0, 0, 0, 0]' : 0.0982981}", "{'[2, 0, 0, 2, 2, 3, 0, 1, 0, 16, 14, 0, 1, 0, 0, 0, 0, 0]' : 0.098073}", "{'[2, 0, 0, 2, 2, 3, 0, 1, 0, 16, 14, 0, 1, 0, 0, 0, 0, 0]' : 0.0982559}"]
returning from 'run': {'[2, 0, 0, 2, 2, 3, 0, 1, 0, 16, 14, 0, 1, 0, 0, 0, 0, 0]': ([0.116178, 0.116381, 0.116144, 0.11619, 0.108091, 0.0985031, 0.0975549, 0.0981688, 0.098181, 0.0984359, 0.098151, 0.098232, 0.0982039, 0.098273, 0.0981181, 0.0981472, 0.0982988, 0.098248, 0.0981269, 0.0981491, 0.0987389, 0.0985351, 0.097713, 0.0981801, 0.0983579, 0.0983009, 0.0978451, 0.0982981, 0.098073, 0.0982559], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 0, 2, 2, 3, 0, 1, 0, 16, 14, 0, 1, 0, 0, 0, 0, 0]': ([0.116178, 0.116381, 0.116144, 0.11619, 0.108091, 0.0985031, 0.0975549, 0.0981688, 0.098181, 0.0984359, 0.098151, 0.098232, 0.0982039, 0.098273, 0.0981181, 0.0981472, 0.0982988, 0.098248, 0.0981269, 0.0981491, 0.0987389, 0.0985351, 0.097713, 0.0981801, 0.0983579, 0.0983009, 0.0978451, 0.0982981, 0.098073, 0.0982559], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		441
        Multiplications: 	126
        Divisions: 		0
        Logical: 		0
        Reads: 			908
        Writes: 		180
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest44.exe __orio_perftest44.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest44.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest44.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest44.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest44.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		323
        Multiplications: 	88
        Divisions: 		0
        Logical: 		0
        Reads: 			694
        Writes: 		140
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest45.exe __orio_perftest45.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest45.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest45.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest45.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest45.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = iii
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	5
        Additions: 		1535
        Multiplications: 	702
        Divisions: 		0
        Logical: 		0
        Reads: 			3114
        Writes: 		572
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest46.exe __orio_perftest46.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest46.exe  
Program Test Output: 
{'[4, 5, 2, 2, 4, 0, 0, 0, 20, 0, 2, 25, 1, 1, 0, 1, 1, 1]' : 0.0972879}
{'[4, 5, 2, 2, 4, 0, 0, 0, 20, 0, 2, 25, 1, 1, 0, 1, 1, 1]' : 0.0971491}
{'[4, 5, 2, 2, 4, 0, 0, 0, 20, 0, 2, 25, 1, 1, 0, 1, 1, 1]' : 0.097059}
{'[4, 5, 2, 2, 4, 0, 0, 0, 20, 0, 2, 25, 1, 1, 0, 1, 1, 1]' : 0.0971091}
{'[4, 5, 2, 2, 4, 0, 0, 0, 20, 0, 2, 25, 1, 1, 0, 1, 1, 1]' : 0.0972099}
{'[4, 5, 2, 2, 4, 0, 0, 0, 20, 0, 2, 25, 1, 1, 0, 1, 1, 1]' : 0.097357}
{'[4, 5, 2, 2, 4, 0, 0, 0, 20, 0, 2, 25, 1, 1, 0, 1, 1, 1]' : 0.0973041}
{'[4, 5, 2, 2, 4, 0, 0, 0, 20, 0, 2, 25, 1, 1, 0, 1, 1, 1]' : 0.097317}
{'[4, 5, 2, 2, 4, 0, 0, 0, 20, 0, 2, 25, 1, 1, 0, 1, 1, 1]' : 0.097316}
{'[4, 5, 2, 2, 4, 0, 0, 0, 20, 0, 2, 25, 1, 1, 0, 1, 1, 1]' : 0.0971892}
{'[4, 5, 2, 2, 4, 0, 0, 0, 20, 0, 2, 25, 1, 1, 0, 1, 1, 1]' : 0.097122}
{'[4, 5, 2, 2, 4, 0, 0, 0, 20, 0, 2, 25, 1, 1, 0, 1, 1, 1]' : 0.097388}
{'[4, 5, 2, 2, 4, 0, 0, 0, 20, 0, 2, 25, 1, 1, 0, 1, 1, 1]' : 0.0971971}
{'[4, 5, 2, 2, 4, 0, 0, 0, 20, 0, 2, 25, 1, 1, 0, 1, 1, 1]' : 0.0971332}
{'[4, 5, 2, 2, 4, 0, 0, 0, 20, 0, 2, 25, 1, 1, 0, 1, 1, 1]' : 0.0971479}
{'[4, 5, 2, 2, 4, 0, 0, 0, 20, 0, 2, 25, 1, 1, 0, 1, 1, 1]' : 0.097357}
{'[4, 5, 2, 2, 4, 0, 0, 0, 20, 0, 2, 25, 1, 1, 0, 1, 1, 1]' : 0.097321}
{'[4, 5, 2, 2, 4, 0, 0, 0, 20, 0, 2, 25, 1, 1, 0, 1, 1, 1]' : 0.0972931}
{'[4, 5, 2, 2, 4, 0, 0, 0, 20, 0, 2, 25, 1, 1, 0, 1, 1, 1]' : 0.0974109}
{'[4, 5, 2, 2, 4, 0, 0, 0, 20, 0, 2, 25, 1, 1, 0, 1, 1, 1]' : 0.0971491}
{'[4, 5, 2, 2, 4, 0, 0, 0, 20, 0, 2, 25, 1, 1, 0, 1, 1, 1]' : 0.097374}
{'[4, 5, 2, 2, 4, 0, 0, 0, 20, 0, 2, 25, 1, 1, 0, 1, 1, 1]' : 0.0971341}
{'[4, 5, 2, 2, 4, 0, 0, 0, 20, 0, 2, 25, 1, 1, 0, 1, 1, 1]' : 0.0971298}
{'[4, 5, 2, 2, 4, 0, 0, 0, 20, 0, 2, 25, 1, 1, 0, 1, 1, 1]' : 0.0974009}
{'[4, 5, 2, 2, 4, 0, 0, 0, 20, 0, 2, 25, 1, 1, 0, 1, 1, 1]' : 0.0970891}
{'[4, 5, 2, 2, 4, 0, 0, 0, 20, 0, 2, 25, 1, 1, 0, 1, 1, 1]' : 0.0971739}
{'[4, 5, 2, 2, 4, 0, 0, 0, 20, 0, 2, 25, 1, 1, 0, 1, 1, 1]' : 0.097296}
{'[4, 5, 2, 2, 4, 0, 0, 0, 20, 0, 2, 25, 1, 1, 0, 1, 1, 1]' : 0.097445}
{'[4, 5, 2, 2, 4, 0, 0, 0, 20, 0, 2, 25, 1, 1, 0, 1, 1, 1]' : 0.0972009}
{'[4, 5, 2, 2, 4, 0, 0, 0, 20, 0, 2, 25, 1, 1, 0, 1, 1, 1]' : 0.0971339}

out:
 ["{'[4, 5, 2, 2, 4, 0, 0, 0, 20, 0, 2, 25, 1, 1, 0, 1, 1, 1]' : 0.0972879}", "{'[4, 5, 2, 2, 4, 0, 0, 0, 20, 0, 2, 25, 1, 1, 0, 1, 1, 1]' : 0.0971491}", "{'[4, 5, 2, 2, 4, 0, 0, 0, 20, 0, 2, 25, 1, 1, 0, 1, 1, 1]' : 0.097059}", "{'[4, 5, 2, 2, 4, 0, 0, 0, 20, 0, 2, 25, 1, 1, 0, 1, 1, 1]' : 0.0971091}", "{'[4, 5, 2, 2, 4, 0, 0, 0, 20, 0, 2, 25, 1, 1, 0, 1, 1, 1]' : 0.0972099}", "{'[4, 5, 2, 2, 4, 0, 0, 0, 20, 0, 2, 25, 1, 1, 0, 1, 1, 1]' : 0.097357}", "{'[4, 5, 2, 2, 4, 0, 0, 0, 20, 0, 2, 25, 1, 1, 0, 1, 1, 1]' : 0.0973041}", "{'[4, 5, 2, 2, 4, 0, 0, 0, 20, 0, 2, 25, 1, 1, 0, 1, 1, 1]' : 0.097317}", "{'[4, 5, 2, 2, 4, 0, 0, 0, 20, 0, 2, 25, 1, 1, 0, 1, 1, 1]' : 0.097316}", "{'[4, 5, 2, 2, 4, 0, 0, 0, 20, 0, 2, 25, 1, 1, 0, 1, 1, 1]' : 0.0971892}", "{'[4, 5, 2, 2, 4, 0, 0, 0, 20, 0, 2, 25, 1, 1, 0, 1, 1, 1]' : 0.097122}", "{'[4, 5, 2, 2, 4, 0, 0, 0, 20, 0, 2, 25, 1, 1, 0, 1, 1, 1]' : 0.097388}", "{'[4, 5, 2, 2, 4, 0, 0, 0, 20, 0, 2, 25, 1, 1, 0, 1, 1, 1]' : 0.0971971}", "{'[4, 5, 2, 2, 4, 0, 0, 0, 20, 0, 2, 25, 1, 1, 0, 1, 1, 1]' : 0.0971332}", "{'[4, 5, 2, 2, 4, 0, 0, 0, 20, 0, 2, 25, 1, 1, 0, 1, 1, 1]' : 0.0971479}", "{'[4, 5, 2, 2, 4, 0, 0, 0, 20, 0, 2, 25, 1, 1, 0, 1, 1, 1]' : 0.097357}", "{'[4, 5, 2, 2, 4, 0, 0, 0, 20, 0, 2, 25, 1, 1, 0, 1, 1, 1]' : 0.097321}", "{'[4, 5, 2, 2, 4, 0, 0, 0, 20, 0, 2, 25, 1, 1, 0, 1, 1, 1]' : 0.0972931}", "{'[4, 5, 2, 2, 4, 0, 0, 0, 20, 0, 2, 25, 1, 1, 0, 1, 1, 1]' : 0.0974109}", "{'[4, 5, 2, 2, 4, 0, 0, 0, 20, 0, 2, 25, 1, 1, 0, 1, 1, 1]' : 0.0971491}", "{'[4, 5, 2, 2, 4, 0, 0, 0, 20, 0, 2, 25, 1, 1, 0, 1, 1, 1]' : 0.097374}", "{'[4, 5, 2, 2, 4, 0, 0, 0, 20, 0, 2, 25, 1, 1, 0, 1, 1, 1]' : 0.0971341}", "{'[4, 5, 2, 2, 4, 0, 0, 0, 20, 0, 2, 25, 1, 1, 0, 1, 1, 1]' : 0.0971298}", "{'[4, 5, 2, 2, 4, 0, 0, 0, 20, 0, 2, 25, 1, 1, 0, 1, 1, 1]' : 0.0974009}", "{'[4, 5, 2, 2, 4, 0, 0, 0, 20, 0, 2, 25, 1, 1, 0, 1, 1, 1]' : 0.0970891}", "{'[4, 5, 2, 2, 4, 0, 0, 0, 20, 0, 2, 25, 1, 1, 0, 1, 1, 1]' : 0.0971739}", "{'[4, 5, 2, 2, 4, 0, 0, 0, 20, 0, 2, 25, 1, 1, 0, 1, 1, 1]' : 0.097296}", "{'[4, 5, 2, 2, 4, 0, 0, 0, 20, 0, 2, 25, 1, 1, 0, 1, 1, 1]' : 0.097445}", "{'[4, 5, 2, 2, 4, 0, 0, 0, 20, 0, 2, 25, 1, 1, 0, 1, 1, 1]' : 0.0972009}", "{'[4, 5, 2, 2, 4, 0, 0, 0, 20, 0, 2, 25, 1, 1, 0, 1, 1, 1]' : 0.0971339}"]
returning from 'run': {'[4, 5, 2, 2, 4, 0, 0, 0, 20, 0, 2, 25, 1, 1, 0, 1, 1, 1]': ([0.0972879, 0.0971491, 0.097059, 0.0971091, 0.0972099, 0.097357, 0.0973041, 0.097317, 0.097316, 0.0971892, 0.097122, 0.097388, 0.0971971, 0.0971332, 0.0971479, 0.097357, 0.097321, 0.0972931, 0.0974109, 0.0971491, 0.097374, 0.0971341, 0.0971298, 0.0974009, 0.0970891, 0.0971739, 0.097296, 0.097445, 0.0972009, 0.0971339], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 5, 2, 2, 4, 0, 0, 0, 20, 0, 2, 25, 1, 1, 0, 1, 1, 1]': ([0.0972879, 0.0971491, 0.097059, 0.0971091, 0.0972099, 0.097357, 0.0973041, 0.097317, 0.097316, 0.0971892, 0.097122, 0.097388, 0.0971971, 0.0971332, 0.0971479, 0.097357, 0.097321, 0.0972931, 0.0974109, 0.0971491, 0.097374, 0.0971341, 0.0971298, 0.0974009, 0.0970891, 0.0971739, 0.097296, 0.097445, 0.0972009, 0.0971339], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Complete design, with measurements:
     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
36      3    4    6    0    6    5       0       0    1  29   0  29    0    0
243     3    6    5    6    5    3       1       0   19   0   0   0    1    0
339     3    1    2    2    4    2       1       0    5   0  10  16    2    0
362     1    5    0    0    5    1       0       0    4  19  17   0    1    1
438     1    6    4    6    6    6       1       0   21   7  24   0    0    1
801     2    3    1    0    6    0       1       0    0   0  22   6    0    0
812     5    6    4    0    5    6       0       1   29   0   7   3    1    0
970     1    4    0    4    5    4       0       1   19   5   0   5    0    0
1463    0    3    1    2    1    6       0       0    1  26   0  16    0    0
1592    2    1    1    6    1    0       0       1   11  22   6   0    2    0
1675    0    2    4    0    1    0       1       1    4   1   0   0    0    0
1682    2    0    3    3    5    6       1       0   27  24   0   4    0    0
1700    0    2    4    6    6    2       1       1    0   7   0  12    1    0
2560    3    4    6    0    2    5       1       1    0  20   0   4    2    0
2647    5    0    3    0    0    1       0       0   10  12   0  26    0    0
2689    1    2    6    4    1    6       0       1   11   0   0  14    0    1
2702    1    4    3    1    6    1       0       1   26  27  29   0    0    0
2724    1    6    1    6    0    6       0       0    0  11  17   0    0    2
2820    3    0    0    6    2    1       1       1    0  18   0  16    0    1
2836    0    4    0    3    6    0       0       0    9  25   0   0    2    0
2930    3    6    1    1    4    2       0       0    2   4   0   0    0    1
2951    2    2    3    0    5    1       1       1    3  26  11   0    1    0
3094    3    2    6    0    5    6       1       0   27   1   9   0    0    0
3236    4    6    0    3    0    0       1       1    3   0  29  27    0    0
3308    6    1    3    4    6    5       0       0   27   9   0  26    2    0
3361    6    0    5    0    0    5       1       1    5  22   0  26    1    0
3384    2    2    5    6    5    4       0       0   28  29   0  27    0    2
3872    6    1    0    5    0    4       1       0   25  27  26   0    0    1
3893    5    5    2    6    6    0       1       1   28   0  20  28    1    1
4072    6    6    6    6    0    0       0       0    1  13   3   0    0    0
4109    0    0    6    6    4    5       0       0    4   0  27  18    1    0
4131    6    0    1    6    5    0       1       1   15   0   3  25    0    0
4243    2    1    6    5    2    0       1       0   27  26   0  29    2    0
4252    5    0    4    0    1    0       1       0   26   4   0  20    1    0
4342    4    5    3    5    6    6       1       1    1  25   0   0    1    0
4393    2    0    0    2    2    3       0       1    0  16  14   0    1    0
4538    4    5    2    2    4    0       0       0   20   0   2  25    1    1
     RT_K SCR VEC1 VEC2  cost_mean
36      2   0    0    1 0.22768797
243     0   0    1    1 0.11156763
339     0   0    0    0 0.27505597
362     0   0    1    1 0.09319496
438     0   0    0    0 0.13600047
801     2   1    1    0 0.25570327
812     0   1    0    0 0.09522536
970     1   1    1    0 0.14970120
1463    1   0    1    0 0.19732450
1592    0   0    0    1 0.26666127
1675    1   1    0    1 0.17177597
1682    0   0    1    1 0.15859283
1700    0   0    0    0 0.10985210
2560    0   1    1    1 0.14234427
2647    0   1    0    0 0.11934613
2689    1   0    0    0 0.24953790
2702    0   1    1    1 0.22907637
2724    0   1    0    0 0.14685857
2820    0   1    1    1 0.26784253
2836    0   0    0    1 0.17650310
2930    0   1    0    0 0.11558750
2951    1   1    0    0 0.09880134
3094    0   1    1    0 0.17221197
3236    0   0    1    1 0.18119723
3308    0   0    1    1 0.18776640
3361    1   0    1    0 0.10732873
3384    0   1    1    0 0.15429817
3872    1   1    0    1 0.18535577
3893    0   1    1    1 0.11453150
4072    1   0    0    1 0.11817273
4109    1   1    1    0 0.08625505
4131    1   0    1    0 0.30485063
4243    0   1    0    1 0.17571470
4252    1   0    0    0 0.10761063
4342    1   1    1    0 0.09726632
4393    0   0    0    0 0.10093579
4538    0   1    1    1 0.09723984

Heteroscedasticity Test p-value: 0.89781118541
Regression Step:                Df  Sum Sq Mean Sq F value  Pr(>F)   
T1_I             1 0.00026 0.00026   0.129 0.73385   
T1_J             1 0.01245 0.01245   6.102 0.05651 . 
T1_K             1 0.00656 0.00656   3.216 0.13288   
T2_I             1 0.00188 0.00188   0.921 0.38128   
T2_J             1 0.00019 0.00019   0.092 0.77380   
T2_K             1 0.00091 0.00091   0.444 0.53466   
ACOPY_x          1 0.00026 0.00026   0.130 0.73356   
ACOPY_y          1 0.00017 0.00017   0.083 0.78482   
U1_I             1 0.00006 0.00006   0.031 0.86769   
U_I              1 0.00001 0.00001   0.003 0.95571   
U_J              1 0.00000 0.00000   0.001 0.97466   
U_K              1 0.00163 0.00163   0.798 0.41270   
RT_I             1 0.00450 0.00450   2.204 0.19779   
RT_J             1 0.00144 0.00144   0.706 0.43923   
RT_K             1 0.00243 0.00243   1.189 0.32521   
SCR              1 0.00299 0.00299   1.466 0.28012   
VEC1             1 0.00002 0.00002   0.008 0.93221   
VEC2             1 0.00788 0.00788   3.861 0.10662   
I(1/(1 + T1_I))  1 0.01078 0.01078   5.284 0.06989 . 
I(1/(1 + T1_J))  1 0.02014 0.02014   9.871 0.02561 * 
I(1/(1 + T1_K))  1 0.00227 0.00227   1.113 0.33972   
I(1/(1 + T2_I))  1 0.00002 0.00002   0.010 0.92379   
I(1/(1 + T2_J))  1 0.00189 0.00189   0.929 0.37949   
I(1/(1 + T2_K))  1 0.00414 0.00414   2.032 0.21338   
I(1/(1 + U1_I))  1 0.00018 0.00018   0.087 0.77952   
I(1/(1 + U_I))   1 0.00403 0.00403   1.977 0.21869   
I(1/(1 + U_J))   1 0.00233 0.00233   1.143 0.33383   
I(1/(1 + U_K))   1 0.00105 0.00105   0.515 0.50518   
I(1/(1 + RT_I))  1 0.03388 0.03388  16.606 0.00959 **
I(1/(1 + RT_J))  1 0.00139 0.00139   0.680 0.44717   
I(1/(1 + RT_K))  1 0.00000 0.00000   0.002 0.96517   
Residuals        5 0.01020 0.00204                   
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Predicting Best
Generating valid search space of size 4600 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Valid coordinates: 920
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Valid coordinates: 1840
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Valid coordinates: 2760
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Tested coordinates: 150000
Valid coordinates: 3680
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Tested coordinates: 190000
Valid coordinates: 4600
Valid/Tested configurations: 4600/191528
Generated Search Space:
NULL
Identical predictions (tol = 1e-5): 1
Getting Best from Design
Response: ['cost_mean']
Design Names:  [1] "T1_I"      "T1_J"      "T1_K"      "T2_I"      "T2_J"      "T2_K"     
 [7] "ACOPY_x"   "ACOPY_y"   "U1_I"      "U_I"       "U_J"       "U_K"      
[13] "RT_I"      "RT_J"      "RT_K"      "SCR"       "VEC1"      "VEC2"     
[19] "cost_mean"

Design Response:       cost_mean
36   0.22768797
243  0.11156763
339  0.27505597
362  0.09319496
438  0.13600047
801  0.25570327
812  0.09522536
970  0.14970120
1463 0.19732450
1592 0.26666127
1675 0.17177597
1682 0.15859283
1700 0.10985210
2560 0.14234427
2647 0.11934613
2689 0.24953790
2702 0.22907637
2724 0.14685857
2820 0.26784253
2836 0.17650310
2930 0.11558750
2951 0.09880134
3094 0.17221197
3236 0.18119723
3308 0.18776640
3361 0.10732873
3384 0.15429817
3872 0.18535577
3893 0.11453150
4072 0.11817273
4109 0.08625505
4131 0.30485063
4243 0.17571470
4252 0.10761063
4342 0.09726632
4393 0.10093579
4538 0.09723984

Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Getting fixed variables
Pruning Model
Best Predicted:      T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
4483    5    5    5    4    6    5       1       0    8   3  28   0    1    0
     RT_K SCR VEC1 VEC2
4483    0   1    0    1

Best From Design: [0, 0, 6, 6, 4, 5, 0, 0, 4, 0, 27, 18, 1, 0, 1, 1, 1, 0]
Pruned Factors: ['T1_I', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Fixed Factors: {'T1_J': 5}
Length of requested configs: 1
Result was on Database, Returning Now
Starting Point (-O3):
0.16283083333333334
Predicted Best Point:
[5, 5, 5, 4, 6, 5, 1, 0, 8, 3, 28, 0, 1, 0, 0, 1, 0, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	40
        Max loop nest depth: 	6
        Additions: 		2047
        Multiplications: 	806
        Divisions: 		0
        Logical: 		0
        Reads: 			3727
        Writes: 		588
        Comparisons:		40
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest47.exe __orio_perftest47.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest47.exe  
Program Test Output: 
{'[5, 5, 5, 4, 6, 5, 1, 0, 8, 3, 28, 0, 1, 0, 0, 1, 0, 1]' : 0.104877}
{'[5, 5, 5, 4, 6, 5, 1, 0, 8, 3, 28, 0, 1, 0, 0, 1, 0, 1]' : 0.104905}
{'[5, 5, 5, 4, 6, 5, 1, 0, 8, 3, 28, 0, 1, 0, 0, 1, 0, 1]' : 0.104735}
{'[5, 5, 5, 4, 6, 5, 1, 0, 8, 3, 28, 0, 1, 0, 0, 1, 0, 1]' : 0.0958059}
{'[5, 5, 5, 4, 6, 5, 1, 0, 8, 3, 28, 0, 1, 0, 0, 1, 0, 1]' : 0.08902}
{'[5, 5, 5, 4, 6, 5, 1, 0, 8, 3, 28, 0, 1, 0, 0, 1, 0, 1]' : 0.0891061}
{'[5, 5, 5, 4, 6, 5, 1, 0, 8, 3, 28, 0, 1, 0, 0, 1, 0, 1]' : 0.0894599}
{'[5, 5, 5, 4, 6, 5, 1, 0, 8, 3, 28, 0, 1, 0, 0, 1, 0, 1]' : 0.0892322}
{'[5, 5, 5, 4, 6, 5, 1, 0, 8, 3, 28, 0, 1, 0, 0, 1, 0, 1]' : 0.089231}
{'[5, 5, 5, 4, 6, 5, 1, 0, 8, 3, 28, 0, 1, 0, 0, 1, 0, 1]' : 0.08969}
{'[5, 5, 5, 4, 6, 5, 1, 0, 8, 3, 28, 0, 1, 0, 0, 1, 0, 1]' : 0.0892189}
{'[5, 5, 5, 4, 6, 5, 1, 0, 8, 3, 28, 0, 1, 0, 0, 1, 0, 1]' : 0.089417}
{'[5, 5, 5, 4, 6, 5, 1, 0, 8, 3, 28, 0, 1, 0, 0, 1, 0, 1]' : 0.0894511}
{'[5, 5, 5, 4, 6, 5, 1, 0, 8, 3, 28, 0, 1, 0, 0, 1, 0, 1]' : 0.0894351}
{'[5, 5, 5, 4, 6, 5, 1, 0, 8, 3, 28, 0, 1, 0, 0, 1, 0, 1]' : 0.0892649}
{'[5, 5, 5, 4, 6, 5, 1, 0, 8, 3, 28, 0, 1, 0, 0, 1, 0, 1]' : 0.0895529}
{'[5, 5, 5, 4, 6, 5, 1, 0, 8, 3, 28, 0, 1, 0, 0, 1, 0, 1]' : 0.089195}
{'[5, 5, 5, 4, 6, 5, 1, 0, 8, 3, 28, 0, 1, 0, 0, 1, 0, 1]' : 0.089242}
{'[5, 5, 5, 4, 6, 5, 1, 0, 8, 3, 28, 0, 1, 0, 0, 1, 0, 1]' : 0.0886841}
{'[5, 5, 5, 4, 6, 5, 1, 0, 8, 3, 28, 0, 1, 0, 0, 1, 0, 1]' : 0.0878761}
{'[5, 5, 5, 4, 6, 5, 1, 0, 8, 3, 28, 0, 1, 0, 0, 1, 0, 1]' : 0.0878549}
{'[5, 5, 5, 4, 6, 5, 1, 0, 8, 3, 28, 0, 1, 0, 0, 1, 0, 1]' : 0.0878532}
{'[5, 5, 5, 4, 6, 5, 1, 0, 8, 3, 28, 0, 1, 0, 0, 1, 0, 1]' : 0.0876958}
{'[5, 5, 5, 4, 6, 5, 1, 0, 8, 3, 28, 0, 1, 0, 0, 1, 0, 1]' : 0.0878408}
{'[5, 5, 5, 4, 6, 5, 1, 0, 8, 3, 28, 0, 1, 0, 0, 1, 0, 1]' : 0.0879159}
{'[5, 5, 5, 4, 6, 5, 1, 0, 8, 3, 28, 0, 1, 0, 0, 1, 0, 1]' : 0.0880592}
{'[5, 5, 5, 4, 6, 5, 1, 0, 8, 3, 28, 0, 1, 0, 0, 1, 0, 1]' : 0.0877769}
{'[5, 5, 5, 4, 6, 5, 1, 0, 8, 3, 28, 0, 1, 0, 0, 1, 0, 1]' : 0.08779}
{'[5, 5, 5, 4, 6, 5, 1, 0, 8, 3, 28, 0, 1, 0, 0, 1, 0, 1]' : 0.088402}
{'[5, 5, 5, 4, 6, 5, 1, 0, 8, 3, 28, 0, 1, 0, 0, 1, 0, 1]' : 0.0878358}

out:
 ["{'[5, 5, 5, 4, 6, 5, 1, 0, 8, 3, 28, 0, 1, 0, 0, 1, 0, 1]' : 0.104877}", "{'[5, 5, 5, 4, 6, 5, 1, 0, 8, 3, 28, 0, 1, 0, 0, 1, 0, 1]' : 0.104905}", "{'[5, 5, 5, 4, 6, 5, 1, 0, 8, 3, 28, 0, 1, 0, 0, 1, 0, 1]' : 0.104735}", "{'[5, 5, 5, 4, 6, 5, 1, 0, 8, 3, 28, 0, 1, 0, 0, 1, 0, 1]' : 0.0958059}", "{'[5, 5, 5, 4, 6, 5, 1, 0, 8, 3, 28, 0, 1, 0, 0, 1, 0, 1]' : 0.08902}", "{'[5, 5, 5, 4, 6, 5, 1, 0, 8, 3, 28, 0, 1, 0, 0, 1, 0, 1]' : 0.0891061}", "{'[5, 5, 5, 4, 6, 5, 1, 0, 8, 3, 28, 0, 1, 0, 0, 1, 0, 1]' : 0.0894599}", "{'[5, 5, 5, 4, 6, 5, 1, 0, 8, 3, 28, 0, 1, 0, 0, 1, 0, 1]' : 0.0892322}", "{'[5, 5, 5, 4, 6, 5, 1, 0, 8, 3, 28, 0, 1, 0, 0, 1, 0, 1]' : 0.089231}", "{'[5, 5, 5, 4, 6, 5, 1, 0, 8, 3, 28, 0, 1, 0, 0, 1, 0, 1]' : 0.08969}", "{'[5, 5, 5, 4, 6, 5, 1, 0, 8, 3, 28, 0, 1, 0, 0, 1, 0, 1]' : 0.0892189}", "{'[5, 5, 5, 4, 6, 5, 1, 0, 8, 3, 28, 0, 1, 0, 0, 1, 0, 1]' : 0.089417}", "{'[5, 5, 5, 4, 6, 5, 1, 0, 8, 3, 28, 0, 1, 0, 0, 1, 0, 1]' : 0.0894511}", "{'[5, 5, 5, 4, 6, 5, 1, 0, 8, 3, 28, 0, 1, 0, 0, 1, 0, 1]' : 0.0894351}", "{'[5, 5, 5, 4, 6, 5, 1, 0, 8, 3, 28, 0, 1, 0, 0, 1, 0, 1]' : 0.0892649}", "{'[5, 5, 5, 4, 6, 5, 1, 0, 8, 3, 28, 0, 1, 0, 0, 1, 0, 1]' : 0.0895529}", "{'[5, 5, 5, 4, 6, 5, 1, 0, 8, 3, 28, 0, 1, 0, 0, 1, 0, 1]' : 0.089195}", "{'[5, 5, 5, 4, 6, 5, 1, 0, 8, 3, 28, 0, 1, 0, 0, 1, 0, 1]' : 0.089242}", "{'[5, 5, 5, 4, 6, 5, 1, 0, 8, 3, 28, 0, 1, 0, 0, 1, 0, 1]' : 0.0886841}", "{'[5, 5, 5, 4, 6, 5, 1, 0, 8, 3, 28, 0, 1, 0, 0, 1, 0, 1]' : 0.0878761}", "{'[5, 5, 5, 4, 6, 5, 1, 0, 8, 3, 28, 0, 1, 0, 0, 1, 0, 1]' : 0.0878549}", "{'[5, 5, 5, 4, 6, 5, 1, 0, 8, 3, 28, 0, 1, 0, 0, 1, 0, 1]' : 0.0878532}", "{'[5, 5, 5, 4, 6, 5, 1, 0, 8, 3, 28, 0, 1, 0, 0, 1, 0, 1]' : 0.0876958}", "{'[5, 5, 5, 4, 6, 5, 1, 0, 8, 3, 28, 0, 1, 0, 0, 1, 0, 1]' : 0.0878408}", "{'[5, 5, 5, 4, 6, 5, 1, 0, 8, 3, 28, 0, 1, 0, 0, 1, 0, 1]' : 0.0879159}", "{'[5, 5, 5, 4, 6, 5, 1, 0, 8, 3, 28, 0, 1, 0, 0, 1, 0, 1]' : 0.0880592}", "{'[5, 5, 5, 4, 6, 5, 1, 0, 8, 3, 28, 0, 1, 0, 0, 1, 0, 1]' : 0.0877769}", "{'[5, 5, 5, 4, 6, 5, 1, 0, 8, 3, 28, 0, 1, 0, 0, 1, 0, 1]' : 0.08779}", "{'[5, 5, 5, 4, 6, 5, 1, 0, 8, 3, 28, 0, 1, 0, 0, 1, 0, 1]' : 0.088402}", "{'[5, 5, 5, 4, 6, 5, 1, 0, 8, 3, 28, 0, 1, 0, 0, 1, 0, 1]' : 0.0878358}"]
returning from 'run': {'[5, 5, 5, 4, 6, 5, 1, 0, 8, 3, 28, 0, 1, 0, 0, 1, 0, 1]': ([0.104877, 0.104905, 0.104735, 0.0958059, 0.08902, 0.0891061, 0.0894599, 0.0892322, 0.089231, 0.08969, 0.0892189, 0.089417, 0.0894511, 0.0894351, 0.0892649, 0.0895529, 0.089195, 0.089242, 0.0886841, 0.0878761, 0.0878549, 0.0878532, 0.0876958, 0.0878408, 0.0879159, 0.0880592, 0.0877769, 0.08779, 0.088402, 0.0878358], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 5, 5, 4, 6, 5, 1, 0, 8, 3, 28, 0, 1, 0, 0, 1, 0, 1]': ([0.104877, 0.104905, 0.104735, 0.0958059, 0.08902, 0.0891061, 0.0894599, 0.0892322, 0.089231, 0.08969, 0.0892189, 0.089417, 0.0894511, 0.0894351, 0.0892649, 0.0895529, 0.089195, 0.089242, 0.0886841, 0.0878761, 0.0878549, 0.0878532, 0.0876958, 0.0878408, 0.0879159, 0.0880592, 0.0877769, 0.08779, 0.088402, 0.0878358], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Design Best Point:
[0, 0, 6, 6, 4, 5, 0, 0, 4, 0, 27, 18, 1, 0, 1, 1, 1, 0]
Length of requested configs: 1
Result was on Database, Returning Now
Fixed Factors: {'T1_J': 5}
Slowdown (Design Best): 0.529721827868391
Slowdown (Predicted Best): 0.5560829900151998
Budget: 37/180
Updating Global Best: 0.08625504666666665
Current Best Point: 
[0, 0, 6, 6, 4, 5, 0, 0, 4, 0, 27, 18, 1, 0, 1, 1, 1, 0]
Step 1
Generating valid search space of size 4300 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Tested coordinates: 40000
Valid coordinates: 860
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Tested coordinates: 80000
Tested coordinates: 90000
Valid coordinates: 1720
Tested coordinates: 100000
Tested coordinates: 110000
Tested coordinates: 120000
Tested coordinates: 130000
Valid coordinates: 2580
Tested coordinates: 140000
Tested coordinates: 150000
Tested coordinates: 160000
Tested coordinates: 170000
Valid coordinates: 3440
Tested coordinates: 180000
Tested coordinates: 190000
Tested coordinates: 200000
Tested coordinates: 210000
Valid coordinates: 4300
Valid/Tested configurations: 4300/219815
Generated Search Space:
NULL
Clean Info:
Removed Factors: character(0)

Removed Inverse Factors: [1] "ACOPY_x" "ACOPY_y" "SCR"     "VEC1"    "VEC2"   

New Factors: ['T1_I', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
New Inverse Factors: ['T1_I', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
New Fixed Factors: {'T1_J': 5}
Full Model:  ~ T1_I + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Fixed Factors: {'T1_J': 5}
Computing D-Optimal Design
Computing D-Optimal Design with 43 experiments
Design Formula:  ~ T1_I + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Starting "optFederov" run
Using Search Space:
NULL
Data Dimensions: [1] 4300   17

     T1_I T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J RT_K
96      1    0    5    6    0       1       1    0   0  15   6    0    1    1
251     4    6    2    4    5       1       0    9   0   5   5    0    2    0
291     5    1    6    4    0       1       0    2   0  28   0    0    2    0
471     2    1    0    4    4       1       0   26   9   0  25    1    0    1
578     2    0    0    5    0       0       0   21  28   0  17    2    0    0
642     6    2    6    6    6       0       0    0  28  21   0    0    0    0
805     0    3    6    5    2       0       1   29  12  24   0    0    1    1
1121    6    6    0    6    6       0       1   28   0   1  26    2    0    0
1323    1    6    2    4    5       0       1   19  26   0   8    0    2    0
1444    1    5    0    0    0       0       1    2  29   3   0    0    1    1
1478    2    2    2    6    0       0       0   15   0  26   7    1    1    0
1492    1    0    2    6    2       0       0    0  20  24   0    0    1    1
1499    6    2    6    6    0       1       0   26   0   3  29    1    1    0
1705    0    6    3    0    0       1       0   27   0  27  21    1    1    0
1777    2    3    1    0    0       1       1    0   3   0  11    0    0    1
1787    0    1    1    3    6       1       0   10  23   0  24    0    1    1
2011    4    0    0    0    6       0       0    9   3   3   0    0    1    1
2158    6    3    4    3    1       1       0   11  16  27   0    0    1    0
2172    2    3    1    0    2       0       0   21  15  12   0    0    0    2
2266    3    1    0    0    5       1       1    0   0   4   9    2    0    0
2368    0    4    0    4    2       1       0    4   0  15   8    0    2    0
2372    2    0    6    0    3       1       0    3   0  29  10    0    0    0
2552    5    3    0    0    3       0       1   29  25  29   0    1    0    0
2654    6    0    6    4    6       1       1   21   3   2   0    2    0    0
2768    0    2    2    6    2       0       0   11   0   8  28    1    0    1
2924    2    4    2    3    4       0       1   27   0   3  27    0    0    0
2952    2    6    3    0    0       1       0    0   3   0   0    0    1    1
3025    2    3    3    6    4       1       1   19  27   0   0    2    0    0
3048    5    4    6    3    5       1       0   29  28   0  29    0    0    2
3221    0    0    1    5    1       1       1    6  27   0  13    0    0    2
3225    1    5    2    5    3       1       1    3  26   0  27    0    2    0
3261    0    6    4    5    5       0       1    0   0  29  29    2    0    0
3518    6    0    0    5    6       0       1    9   0   0   1    1    1    0
3527    3    5    0    6    0       1       0    9  13  24   0    0    0    2
3540    6    6    4    3    0       0       0    0  18   4   0    1    0    1
3650    6    0    6    4    1       0       1   28   0  28  23    0    2    0
3720    4    6    6    0    0       0       1    3  20   0   2    1    0    1
3740    3    3    6    3    6       0       1    0   2   0  17    1    1    0
3912    0    5    5    6    5       1       0   29   0   8   0    1    0    0
3931    6    4    5    0    6       0       0   26   0   0   2    0    0    1
3934    0    0    5    4    0       0       1    8   0   0  22    0    0    0
3938    0    3    0    5    0       0       0    0  28   0   5    1    0    0
3971    4    0    0    4    6       1       1    1  28  27   0    0    0    2
     SCR VEC1 VEC2
96     0    1    1
251    0    0    0
291    0    0    1
471    0    0    1
578    1    1    0
642    1    0    1
805    1    1    1
1121   1    0    1
1323   0    0    0
1444   1    0    0
1478   0    0    0
1492   0    0    0
1499   0    1    0
1705   1    0    1
1777   1    1    0
1787   0    1    1
2011   0    1    0
2158   0    1    0
2172   1    0    1
2266   0    1    0
2368   1    0    1
2372   1    1    1
2552   0    1    1
2654   0    0    1
2768   1    1    0
2924   0    0    0
2952   0    0    1
3025   0    0    1
3048   0    1    1
3221   0    0    0
3225   1    1    1
3261   0    0    1
3518   1    0    1
3527   0    1    1
3540   0    1    1
3650   0    0    0
3720   1    1    0
3740   1    0    0
3912   1    1    0
3931   0    0    0
3934   1    0    1
3938   0    0    1
3971   1    0    0

D-Efficiency Approximation: [1] 0.363

Measuring design of size 43
Current Design Names: ['T1_I', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	6
        Additions: 		100
        Multiplications: 	32
        Divisions: 		0
        Logical: 		0
        Reads: 			238
        Writes: 		40
        Comparisons:		9
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest48.exe __orio_perftest48.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest48.exe  
Program Test Output: 
{'[1, 5, 0, 5, 6, 0, 1, 1, 0, 0, 15, 6, 0, 1, 1, 0, 1, 1]' : 0.207427}
{'[1, 5, 0, 5, 6, 0, 1, 1, 0, 0, 15, 6, 0, 1, 1, 0, 1, 1]' : 0.207272}
{'[1, 5, 0, 5, 6, 0, 1, 1, 0, 0, 15, 6, 0, 1, 1, 0, 1, 1]' : 0.208082}
{'[1, 5, 0, 5, 6, 0, 1, 1, 0, 0, 15, 6, 0, 1, 1, 0, 1, 1]' : 0.178902}
{'[1, 5, 0, 5, 6, 0, 1, 1, 0, 0, 15, 6, 0, 1, 1, 0, 1, 1]' : 0.17483}
{'[1, 5, 0, 5, 6, 0, 1, 1, 0, 0, 15, 6, 0, 1, 1, 0, 1, 1]' : 0.175257}
{'[1, 5, 0, 5, 6, 0, 1, 1, 0, 0, 15, 6, 0, 1, 1, 0, 1, 1]' : 0.175262}
{'[1, 5, 0, 5, 6, 0, 1, 1, 0, 0, 15, 6, 0, 1, 1, 0, 1, 1]' : 0.17502}
{'[1, 5, 0, 5, 6, 0, 1, 1, 0, 0, 15, 6, 0, 1, 1, 0, 1, 1]' : 0.175191}
{'[1, 5, 0, 5, 6, 0, 1, 1, 0, 0, 15, 6, 0, 1, 1, 0, 1, 1]' : 0.175012}
{'[1, 5, 0, 5, 6, 0, 1, 1, 0, 0, 15, 6, 0, 1, 1, 0, 1, 1]' : 0.174862}
{'[1, 5, 0, 5, 6, 0, 1, 1, 0, 0, 15, 6, 0, 1, 1, 0, 1, 1]' : 0.175061}
{'[1, 5, 0, 5, 6, 0, 1, 1, 0, 0, 15, 6, 0, 1, 1, 0, 1, 1]' : 0.175679}
{'[1, 5, 0, 5, 6, 0, 1, 1, 0, 0, 15, 6, 0, 1, 1, 0, 1, 1]' : 0.175359}
{'[1, 5, 0, 5, 6, 0, 1, 1, 0, 0, 15, 6, 0, 1, 1, 0, 1, 1]' : 0.174964}
{'[1, 5, 0, 5, 6, 0, 1, 1, 0, 0, 15, 6, 0, 1, 1, 0, 1, 1]' : 0.175003}
{'[1, 5, 0, 5, 6, 0, 1, 1, 0, 0, 15, 6, 0, 1, 1, 0, 1, 1]' : 0.175146}
{'[1, 5, 0, 5, 6, 0, 1, 1, 0, 0, 15, 6, 0, 1, 1, 0, 1, 1]' : 0.174978}
{'[1, 5, 0, 5, 6, 0, 1, 1, 0, 0, 15, 6, 0, 1, 1, 0, 1, 1]' : 0.175308}
{'[1, 5, 0, 5, 6, 0, 1, 1, 0, 0, 15, 6, 0, 1, 1, 0, 1, 1]' : 0.174953}
{'[1, 5, 0, 5, 6, 0, 1, 1, 0, 0, 15, 6, 0, 1, 1, 0, 1, 1]' : 0.174924}
{'[1, 5, 0, 5, 6, 0, 1, 1, 0, 0, 15, 6, 0, 1, 1, 0, 1, 1]' : 0.174897}
{'[1, 5, 0, 5, 6, 0, 1, 1, 0, 0, 15, 6, 0, 1, 1, 0, 1, 1]' : 0.174978}
{'[1, 5, 0, 5, 6, 0, 1, 1, 0, 0, 15, 6, 0, 1, 1, 0, 1, 1]' : 0.175056}
{'[1, 5, 0, 5, 6, 0, 1, 1, 0, 0, 15, 6, 0, 1, 1, 0, 1, 1]' : 0.17516}
{'[1, 5, 0, 5, 6, 0, 1, 1, 0, 0, 15, 6, 0, 1, 1, 0, 1, 1]' : 0.175291}
{'[1, 5, 0, 5, 6, 0, 1, 1, 0, 0, 15, 6, 0, 1, 1, 0, 1, 1]' : 0.174903}
{'[1, 5, 0, 5, 6, 0, 1, 1, 0, 0, 15, 6, 0, 1, 1, 0, 1, 1]' : 0.17491}
{'[1, 5, 0, 5, 6, 0, 1, 1, 0, 0, 15, 6, 0, 1, 1, 0, 1, 1]' : 0.175174}
{'[1, 5, 0, 5, 6, 0, 1, 1, 0, 0, 15, 6, 0, 1, 1, 0, 1, 1]' : 0.174909}

out:
 ["{'[1, 5, 0, 5, 6, 0, 1, 1, 0, 0, 15, 6, 0, 1, 1, 0, 1, 1]' : 0.207427}", "{'[1, 5, 0, 5, 6, 0, 1, 1, 0, 0, 15, 6, 0, 1, 1, 0, 1, 1]' : 0.207272}", "{'[1, 5, 0, 5, 6, 0, 1, 1, 0, 0, 15, 6, 0, 1, 1, 0, 1, 1]' : 0.208082}", "{'[1, 5, 0, 5, 6, 0, 1, 1, 0, 0, 15, 6, 0, 1, 1, 0, 1, 1]' : 0.178902}", "{'[1, 5, 0, 5, 6, 0, 1, 1, 0, 0, 15, 6, 0, 1, 1, 0, 1, 1]' : 0.17483}", "{'[1, 5, 0, 5, 6, 0, 1, 1, 0, 0, 15, 6, 0, 1, 1, 0, 1, 1]' : 0.175257}", "{'[1, 5, 0, 5, 6, 0, 1, 1, 0, 0, 15, 6, 0, 1, 1, 0, 1, 1]' : 0.175262}", "{'[1, 5, 0, 5, 6, 0, 1, 1, 0, 0, 15, 6, 0, 1, 1, 0, 1, 1]' : 0.17502}", "{'[1, 5, 0, 5, 6, 0, 1, 1, 0, 0, 15, 6, 0, 1, 1, 0, 1, 1]' : 0.175191}", "{'[1, 5, 0, 5, 6, 0, 1, 1, 0, 0, 15, 6, 0, 1, 1, 0, 1, 1]' : 0.175012}", "{'[1, 5, 0, 5, 6, 0, 1, 1, 0, 0, 15, 6, 0, 1, 1, 0, 1, 1]' : 0.174862}", "{'[1, 5, 0, 5, 6, 0, 1, 1, 0, 0, 15, 6, 0, 1, 1, 0, 1, 1]' : 0.175061}", "{'[1, 5, 0, 5, 6, 0, 1, 1, 0, 0, 15, 6, 0, 1, 1, 0, 1, 1]' : 0.175679}", "{'[1, 5, 0, 5, 6, 0, 1, 1, 0, 0, 15, 6, 0, 1, 1, 0, 1, 1]' : 0.175359}", "{'[1, 5, 0, 5, 6, 0, 1, 1, 0, 0, 15, 6, 0, 1, 1, 0, 1, 1]' : 0.174964}", "{'[1, 5, 0, 5, 6, 0, 1, 1, 0, 0, 15, 6, 0, 1, 1, 0, 1, 1]' : 0.175003}", "{'[1, 5, 0, 5, 6, 0, 1, 1, 0, 0, 15, 6, 0, 1, 1, 0, 1, 1]' : 0.175146}", "{'[1, 5, 0, 5, 6, 0, 1, 1, 0, 0, 15, 6, 0, 1, 1, 0, 1, 1]' : 0.174978}", "{'[1, 5, 0, 5, 6, 0, 1, 1, 0, 0, 15, 6, 0, 1, 1, 0, 1, 1]' : 0.175308}", "{'[1, 5, 0, 5, 6, 0, 1, 1, 0, 0, 15, 6, 0, 1, 1, 0, 1, 1]' : 0.174953}", "{'[1, 5, 0, 5, 6, 0, 1, 1, 0, 0, 15, 6, 0, 1, 1, 0, 1, 1]' : 0.174924}", "{'[1, 5, 0, 5, 6, 0, 1, 1, 0, 0, 15, 6, 0, 1, 1, 0, 1, 1]' : 0.174897}", "{'[1, 5, 0, 5, 6, 0, 1, 1, 0, 0, 15, 6, 0, 1, 1, 0, 1, 1]' : 0.174978}", "{'[1, 5, 0, 5, 6, 0, 1, 1, 0, 0, 15, 6, 0, 1, 1, 0, 1, 1]' : 0.175056}", "{'[1, 5, 0, 5, 6, 0, 1, 1, 0, 0, 15, 6, 0, 1, 1, 0, 1, 1]' : 0.17516}", "{'[1, 5, 0, 5, 6, 0, 1, 1, 0, 0, 15, 6, 0, 1, 1, 0, 1, 1]' : 0.175291}", "{'[1, 5, 0, 5, 6, 0, 1, 1, 0, 0, 15, 6, 0, 1, 1, 0, 1, 1]' : 0.174903}", "{'[1, 5, 0, 5, 6, 0, 1, 1, 0, 0, 15, 6, 0, 1, 1, 0, 1, 1]' : 0.17491}", "{'[1, 5, 0, 5, 6, 0, 1, 1, 0, 0, 15, 6, 0, 1, 1, 0, 1, 1]' : 0.175174}", "{'[1, 5, 0, 5, 6, 0, 1, 1, 0, 0, 15, 6, 0, 1, 1, 0, 1, 1]' : 0.174909}"]
returning from 'run': {'[1, 5, 0, 5, 6, 0, 1, 1, 0, 0, 15, 6, 0, 1, 1, 0, 1, 1]': ([0.207427, 0.207272, 0.208082, 0.178902, 0.17483, 0.175257, 0.175262, 0.17502, 0.175191, 0.175012, 0.174862, 0.175061, 0.175679, 0.175359, 0.174964, 0.175003, 0.175146, 0.174978, 0.175308, 0.174953, 0.174924, 0.174897, 0.174978, 0.175056, 0.17516, 0.175291, 0.174903, 0.17491, 0.175174, 0.174909], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 5, 0, 5, 6, 0, 1, 1, 0, 0, 15, 6, 0, 1, 1, 0, 1, 1]': ([0.207427, 0.207272, 0.208082, 0.178902, 0.17483, 0.175257, 0.175262, 0.17502, 0.175191, 0.175012, 0.174862, 0.175061, 0.175679, 0.175359, 0.174964, 0.175003, 0.175146, 0.174978, 0.175308, 0.174953, 0.174924, 0.174897, 0.174978, 0.175056, 0.17516, 0.175291, 0.174903, 0.17491, 0.175174, 0.174909], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = iii
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		242
        Multiplications: 	78
        Divisions: 		0
        Logical: 		0
        Reads: 			531
        Writes: 		76
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest49.exe __orio_perftest49.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest49.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest49.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest49.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest49.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	6
        Additions: 		195
        Multiplications: 	66
        Divisions: 		0
        Logical: 		0
        Reads: 			450
        Writes: 		63
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest50.exe __orio_perftest50.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest50.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest50.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest50.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest50.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	60
        Max loop nest depth: 	5
        Additions: 		4734
        Multiplications: 	1368
        Divisions: 		0
        Logical: 		0
        Reads: 			7539
        Writes: 		898
        Comparisons:		60
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest51.exe __orio_perftest51.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest51.exe  
Program Test Output: 
{'[2, 5, 1, 0, 4, 4, 1, 0, 26, 9, 0, 25, 1, 0, 1, 0, 0, 1]' : 0.112082}
{'[2, 5, 1, 0, 4, 4, 1, 0, 26, 9, 0, 25, 1, 0, 1, 0, 0, 1]' : 0.112198}
{'[2, 5, 1, 0, 4, 4, 1, 0, 26, 9, 0, 25, 1, 0, 1, 0, 0, 1]' : 0.112075}
{'[2, 5, 1, 0, 4, 4, 1, 0, 26, 9, 0, 25, 1, 0, 1, 0, 0, 1]' : 0.112076}
{'[2, 5, 1, 0, 4, 4, 1, 0, 26, 9, 0, 25, 1, 0, 1, 0, 0, 1]' : 0.11209}
{'[2, 5, 1, 0, 4, 4, 1, 0, 26, 9, 0, 25, 1, 0, 1, 0, 0, 1]' : 0.112358}
{'[2, 5, 1, 0, 4, 4, 1, 0, 26, 9, 0, 25, 1, 0, 1, 0, 0, 1]' : 0.112039}
{'[2, 5, 1, 0, 4, 4, 1, 0, 26, 9, 0, 25, 1, 0, 1, 0, 0, 1]' : 0.112126}
{'[2, 5, 1, 0, 4, 4, 1, 0, 26, 9, 0, 25, 1, 0, 1, 0, 0, 1]' : 0.112289}
{'[2, 5, 1, 0, 4, 4, 1, 0, 26, 9, 0, 25, 1, 0, 1, 0, 0, 1]' : 0.112324}
{'[2, 5, 1, 0, 4, 4, 1, 0, 26, 9, 0, 25, 1, 0, 1, 0, 0, 1]' : 0.111958}
{'[2, 5, 1, 0, 4, 4, 1, 0, 26, 9, 0, 25, 1, 0, 1, 0, 0, 1]' : 0.112212}
{'[2, 5, 1, 0, 4, 4, 1, 0, 26, 9, 0, 25, 1, 0, 1, 0, 0, 1]' : 0.112179}
{'[2, 5, 1, 0, 4, 4, 1, 0, 26, 9, 0, 25, 1, 0, 1, 0, 0, 1]' : 0.11209}
{'[2, 5, 1, 0, 4, 4, 1, 0, 26, 9, 0, 25, 1, 0, 1, 0, 0, 1]' : 0.11232}
{'[2, 5, 1, 0, 4, 4, 1, 0, 26, 9, 0, 25, 1, 0, 1, 0, 0, 1]' : 0.112312}
{'[2, 5, 1, 0, 4, 4, 1, 0, 26, 9, 0, 25, 1, 0, 1, 0, 0, 1]' : 0.112257}
{'[2, 5, 1, 0, 4, 4, 1, 0, 26, 9, 0, 25, 1, 0, 1, 0, 0, 1]' : 0.112174}
{'[2, 5, 1, 0, 4, 4, 1, 0, 26, 9, 0, 25, 1, 0, 1, 0, 0, 1]' : 0.112287}
{'[2, 5, 1, 0, 4, 4, 1, 0, 26, 9, 0, 25, 1, 0, 1, 0, 0, 1]' : 0.112387}
{'[2, 5, 1, 0, 4, 4, 1, 0, 26, 9, 0, 25, 1, 0, 1, 0, 0, 1]' : 0.112147}
{'[2, 5, 1, 0, 4, 4, 1, 0, 26, 9, 0, 25, 1, 0, 1, 0, 0, 1]' : 0.112143}
{'[2, 5, 1, 0, 4, 4, 1, 0, 26, 9, 0, 25, 1, 0, 1, 0, 0, 1]' : 0.112048}
{'[2, 5, 1, 0, 4, 4, 1, 0, 26, 9, 0, 25, 1, 0, 1, 0, 0, 1]' : 0.112208}
{'[2, 5, 1, 0, 4, 4, 1, 0, 26, 9, 0, 25, 1, 0, 1, 0, 0, 1]' : 0.112124}
{'[2, 5, 1, 0, 4, 4, 1, 0, 26, 9, 0, 25, 1, 0, 1, 0, 0, 1]' : 0.112179}
{'[2, 5, 1, 0, 4, 4, 1, 0, 26, 9, 0, 25, 1, 0, 1, 0, 0, 1]' : 0.112115}
{'[2, 5, 1, 0, 4, 4, 1, 0, 26, 9, 0, 25, 1, 0, 1, 0, 0, 1]' : 0.112606}
{'[2, 5, 1, 0, 4, 4, 1, 0, 26, 9, 0, 25, 1, 0, 1, 0, 0, 1]' : 0.112427}
{'[2, 5, 1, 0, 4, 4, 1, 0, 26, 9, 0, 25, 1, 0, 1, 0, 0, 1]' : 0.112182}

out:
 ["{'[2, 5, 1, 0, 4, 4, 1, 0, 26, 9, 0, 25, 1, 0, 1, 0, 0, 1]' : 0.112082}", "{'[2, 5, 1, 0, 4, 4, 1, 0, 26, 9, 0, 25, 1, 0, 1, 0, 0, 1]' : 0.112198}", "{'[2, 5, 1, 0, 4, 4, 1, 0, 26, 9, 0, 25, 1, 0, 1, 0, 0, 1]' : 0.112075}", "{'[2, 5, 1, 0, 4, 4, 1, 0, 26, 9, 0, 25, 1, 0, 1, 0, 0, 1]' : 0.112076}", "{'[2, 5, 1, 0, 4, 4, 1, 0, 26, 9, 0, 25, 1, 0, 1, 0, 0, 1]' : 0.11209}", "{'[2, 5, 1, 0, 4, 4, 1, 0, 26, 9, 0, 25, 1, 0, 1, 0, 0, 1]' : 0.112358}", "{'[2, 5, 1, 0, 4, 4, 1, 0, 26, 9, 0, 25, 1, 0, 1, 0, 0, 1]' : 0.112039}", "{'[2, 5, 1, 0, 4, 4, 1, 0, 26, 9, 0, 25, 1, 0, 1, 0, 0, 1]' : 0.112126}", "{'[2, 5, 1, 0, 4, 4, 1, 0, 26, 9, 0, 25, 1, 0, 1, 0, 0, 1]' : 0.112289}", "{'[2, 5, 1, 0, 4, 4, 1, 0, 26, 9, 0, 25, 1, 0, 1, 0, 0, 1]' : 0.112324}", "{'[2, 5, 1, 0, 4, 4, 1, 0, 26, 9, 0, 25, 1, 0, 1, 0, 0, 1]' : 0.111958}", "{'[2, 5, 1, 0, 4, 4, 1, 0, 26, 9, 0, 25, 1, 0, 1, 0, 0, 1]' : 0.112212}", "{'[2, 5, 1, 0, 4, 4, 1, 0, 26, 9, 0, 25, 1, 0, 1, 0, 0, 1]' : 0.112179}", "{'[2, 5, 1, 0, 4, 4, 1, 0, 26, 9, 0, 25, 1, 0, 1, 0, 0, 1]' : 0.11209}", "{'[2, 5, 1, 0, 4, 4, 1, 0, 26, 9, 0, 25, 1, 0, 1, 0, 0, 1]' : 0.11232}", "{'[2, 5, 1, 0, 4, 4, 1, 0, 26, 9, 0, 25, 1, 0, 1, 0, 0, 1]' : 0.112312}", "{'[2, 5, 1, 0, 4, 4, 1, 0, 26, 9, 0, 25, 1, 0, 1, 0, 0, 1]' : 0.112257}", "{'[2, 5, 1, 0, 4, 4, 1, 0, 26, 9, 0, 25, 1, 0, 1, 0, 0, 1]' : 0.112174}", "{'[2, 5, 1, 0, 4, 4, 1, 0, 26, 9, 0, 25, 1, 0, 1, 0, 0, 1]' : 0.112287}", "{'[2, 5, 1, 0, 4, 4, 1, 0, 26, 9, 0, 25, 1, 0, 1, 0, 0, 1]' : 0.112387}", "{'[2, 5, 1, 0, 4, 4, 1, 0, 26, 9, 0, 25, 1, 0, 1, 0, 0, 1]' : 0.112147}", "{'[2, 5, 1, 0, 4, 4, 1, 0, 26, 9, 0, 25, 1, 0, 1, 0, 0, 1]' : 0.112143}", "{'[2, 5, 1, 0, 4, 4, 1, 0, 26, 9, 0, 25, 1, 0, 1, 0, 0, 1]' : 0.112048}", "{'[2, 5, 1, 0, 4, 4, 1, 0, 26, 9, 0, 25, 1, 0, 1, 0, 0, 1]' : 0.112208}", "{'[2, 5, 1, 0, 4, 4, 1, 0, 26, 9, 0, 25, 1, 0, 1, 0, 0, 1]' : 0.112124}", "{'[2, 5, 1, 0, 4, 4, 1, 0, 26, 9, 0, 25, 1, 0, 1, 0, 0, 1]' : 0.112179}", "{'[2, 5, 1, 0, 4, 4, 1, 0, 26, 9, 0, 25, 1, 0, 1, 0, 0, 1]' : 0.112115}", "{'[2, 5, 1, 0, 4, 4, 1, 0, 26, 9, 0, 25, 1, 0, 1, 0, 0, 1]' : 0.112606}", "{'[2, 5, 1, 0, 4, 4, 1, 0, 26, 9, 0, 25, 1, 0, 1, 0, 0, 1]' : 0.112427}", "{'[2, 5, 1, 0, 4, 4, 1, 0, 26, 9, 0, 25, 1, 0, 1, 0, 0, 1]' : 0.112182}"]
returning from 'run': {'[2, 5, 1, 0, 4, 4, 1, 0, 26, 9, 0, 25, 1, 0, 1, 0, 0, 1]': ([0.112082, 0.112198, 0.112075, 0.112076, 0.11209, 0.112358, 0.112039, 0.112126, 0.112289, 0.112324, 0.111958, 0.112212, 0.112179, 0.11209, 0.11232, 0.112312, 0.112257, 0.112174, 0.112287, 0.112387, 0.112147, 0.112143, 0.112048, 0.112208, 0.112124, 0.112179, 0.112115, 0.112606, 0.112427, 0.112182], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 5, 1, 0, 4, 4, 1, 0, 26, 9, 0, 25, 1, 0, 1, 0, 0, 1]': ([0.112082, 0.112198, 0.112075, 0.112076, 0.11209, 0.112358, 0.112039, 0.112126, 0.112289, 0.112324, 0.111958, 0.112212, 0.112179, 0.11209, 0.11232, 0.112312, 0.112257, 0.112174, 0.112287, 0.112387, 0.112147, 0.112143, 0.112048, 0.112208, 0.112124, 0.112179, 0.112115, 0.112606, 0.112427, 0.112182], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	77
        Max loop nest depth: 	5
        Additions: 		6177
        Multiplications: 	2480
        Divisions: 		0
        Logical: 		0
        Reads: 			13147
        Writes: 		2755
        Comparisons:		77
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest52.exe __orio_perftest52.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest52.exe  
Program Test Output: 
{'[2, 5, 0, 0, 5, 0, 0, 0, 21, 28, 0, 17, 2, 0, 0, 1, 1, 0]' : 0.174852}
{'[2, 5, 0, 0, 5, 0, 0, 0, 21, 28, 0, 17, 2, 0, 0, 1, 1, 0]' : 0.174988}
{'[2, 5, 0, 0, 5, 0, 0, 0, 21, 28, 0, 17, 2, 0, 0, 1, 1, 0]' : 0.175037}
{'[2, 5, 0, 0, 5, 0, 0, 0, 21, 28, 0, 17, 2, 0, 0, 1, 1, 0]' : 0.174803}
{'[2, 5, 0, 0, 5, 0, 0, 0, 21, 28, 0, 17, 2, 0, 0, 1, 1, 0]' : 0.174852}
{'[2, 5, 0, 0, 5, 0, 0, 0, 21, 28, 0, 17, 2, 0, 0, 1, 1, 0]' : 0.174657}
{'[2, 5, 0, 0, 5, 0, 0, 0, 21, 28, 0, 17, 2, 0, 0, 1, 1, 0]' : 0.1747}
{'[2, 5, 0, 0, 5, 0, 0, 0, 21, 28, 0, 17, 2, 0, 0, 1, 1, 0]' : 0.174724}
{'[2, 5, 0, 0, 5, 0, 0, 0, 21, 28, 0, 17, 2, 0, 0, 1, 1, 0]' : 0.175221}
{'[2, 5, 0, 0, 5, 0, 0, 0, 21, 28, 0, 17, 2, 0, 0, 1, 1, 0]' : 0.175043}
{'[2, 5, 0, 0, 5, 0, 0, 0, 21, 28, 0, 17, 2, 0, 0, 1, 1, 0]' : 0.174412}
{'[2, 5, 0, 0, 5, 0, 0, 0, 21, 28, 0, 17, 2, 0, 0, 1, 1, 0]' : 0.17473}
{'[2, 5, 0, 0, 5, 0, 0, 0, 21, 28, 0, 17, 2, 0, 0, 1, 1, 0]' : 0.174921}
{'[2, 5, 0, 0, 5, 0, 0, 0, 21, 28, 0, 17, 2, 0, 0, 1, 1, 0]' : 0.174944}
{'[2, 5, 0, 0, 5, 0, 0, 0, 21, 28, 0, 17, 2, 0, 0, 1, 1, 0]' : 0.17518}
{'[2, 5, 0, 0, 5, 0, 0, 0, 21, 28, 0, 17, 2, 0, 0, 1, 1, 0]' : 0.175351}
{'[2, 5, 0, 0, 5, 0, 0, 0, 21, 28, 0, 17, 2, 0, 0, 1, 1, 0]' : 0.174965}
{'[2, 5, 0, 0, 5, 0, 0, 0, 21, 28, 0, 17, 2, 0, 0, 1, 1, 0]' : 0.175108}
{'[2, 5, 0, 0, 5, 0, 0, 0, 21, 28, 0, 17, 2, 0, 0, 1, 1, 0]' : 0.174875}
{'[2, 5, 0, 0, 5, 0, 0, 0, 21, 28, 0, 17, 2, 0, 0, 1, 1, 0]' : 0.175051}
{'[2, 5, 0, 0, 5, 0, 0, 0, 21, 28, 0, 17, 2, 0, 0, 1, 1, 0]' : 0.175929}
{'[2, 5, 0, 0, 5, 0, 0, 0, 21, 28, 0, 17, 2, 0, 0, 1, 1, 0]' : 0.17469}
{'[2, 5, 0, 0, 5, 0, 0, 0, 21, 28, 0, 17, 2, 0, 0, 1, 1, 0]' : 0.175341}
{'[2, 5, 0, 0, 5, 0, 0, 0, 21, 28, 0, 17, 2, 0, 0, 1, 1, 0]' : 0.17414}
{'[2, 5, 0, 0, 5, 0, 0, 0, 21, 28, 0, 17, 2, 0, 0, 1, 1, 0]' : 0.175168}
{'[2, 5, 0, 0, 5, 0, 0, 0, 21, 28, 0, 17, 2, 0, 0, 1, 1, 0]' : 0.174865}
{'[2, 5, 0, 0, 5, 0, 0, 0, 21, 28, 0, 17, 2, 0, 0, 1, 1, 0]' : 0.175431}
{'[2, 5, 0, 0, 5, 0, 0, 0, 21, 28, 0, 17, 2, 0, 0, 1, 1, 0]' : 0.175727}
{'[2, 5, 0, 0, 5, 0, 0, 0, 21, 28, 0, 17, 2, 0, 0, 1, 1, 0]' : 0.175311}
{'[2, 5, 0, 0, 5, 0, 0, 0, 21, 28, 0, 17, 2, 0, 0, 1, 1, 0]' : 0.175149}

out:
 ["{'[2, 5, 0, 0, 5, 0, 0, 0, 21, 28, 0, 17, 2, 0, 0, 1, 1, 0]' : 0.174852}", "{'[2, 5, 0, 0, 5, 0, 0, 0, 21, 28, 0, 17, 2, 0, 0, 1, 1, 0]' : 0.174988}", "{'[2, 5, 0, 0, 5, 0, 0, 0, 21, 28, 0, 17, 2, 0, 0, 1, 1, 0]' : 0.175037}", "{'[2, 5, 0, 0, 5, 0, 0, 0, 21, 28, 0, 17, 2, 0, 0, 1, 1, 0]' : 0.174803}", "{'[2, 5, 0, 0, 5, 0, 0, 0, 21, 28, 0, 17, 2, 0, 0, 1, 1, 0]' : 0.174852}", "{'[2, 5, 0, 0, 5, 0, 0, 0, 21, 28, 0, 17, 2, 0, 0, 1, 1, 0]' : 0.174657}", "{'[2, 5, 0, 0, 5, 0, 0, 0, 21, 28, 0, 17, 2, 0, 0, 1, 1, 0]' : 0.1747}", "{'[2, 5, 0, 0, 5, 0, 0, 0, 21, 28, 0, 17, 2, 0, 0, 1, 1, 0]' : 0.174724}", "{'[2, 5, 0, 0, 5, 0, 0, 0, 21, 28, 0, 17, 2, 0, 0, 1, 1, 0]' : 0.175221}", "{'[2, 5, 0, 0, 5, 0, 0, 0, 21, 28, 0, 17, 2, 0, 0, 1, 1, 0]' : 0.175043}", "{'[2, 5, 0, 0, 5, 0, 0, 0, 21, 28, 0, 17, 2, 0, 0, 1, 1, 0]' : 0.174412}", "{'[2, 5, 0, 0, 5, 0, 0, 0, 21, 28, 0, 17, 2, 0, 0, 1, 1, 0]' : 0.17473}", "{'[2, 5, 0, 0, 5, 0, 0, 0, 21, 28, 0, 17, 2, 0, 0, 1, 1, 0]' : 0.174921}", "{'[2, 5, 0, 0, 5, 0, 0, 0, 21, 28, 0, 17, 2, 0, 0, 1, 1, 0]' : 0.174944}", "{'[2, 5, 0, 0, 5, 0, 0, 0, 21, 28, 0, 17, 2, 0, 0, 1, 1, 0]' : 0.17518}", "{'[2, 5, 0, 0, 5, 0, 0, 0, 21, 28, 0, 17, 2, 0, 0, 1, 1, 0]' : 0.175351}", "{'[2, 5, 0, 0, 5, 0, 0, 0, 21, 28, 0, 17, 2, 0, 0, 1, 1, 0]' : 0.174965}", "{'[2, 5, 0, 0, 5, 0, 0, 0, 21, 28, 0, 17, 2, 0, 0, 1, 1, 0]' : 0.175108}", "{'[2, 5, 0, 0, 5, 0, 0, 0, 21, 28, 0, 17, 2, 0, 0, 1, 1, 0]' : 0.174875}", "{'[2, 5, 0, 0, 5, 0, 0, 0, 21, 28, 0, 17, 2, 0, 0, 1, 1, 0]' : 0.175051}", "{'[2, 5, 0, 0, 5, 0, 0, 0, 21, 28, 0, 17, 2, 0, 0, 1, 1, 0]' : 0.175929}", "{'[2, 5, 0, 0, 5, 0, 0, 0, 21, 28, 0, 17, 2, 0, 0, 1, 1, 0]' : 0.17469}", "{'[2, 5, 0, 0, 5, 0, 0, 0, 21, 28, 0, 17, 2, 0, 0, 1, 1, 0]' : 0.175341}", "{'[2, 5, 0, 0, 5, 0, 0, 0, 21, 28, 0, 17, 2, 0, 0, 1, 1, 0]' : 0.17414}", "{'[2, 5, 0, 0, 5, 0, 0, 0, 21, 28, 0, 17, 2, 0, 0, 1, 1, 0]' : 0.175168}", "{'[2, 5, 0, 0, 5, 0, 0, 0, 21, 28, 0, 17, 2, 0, 0, 1, 1, 0]' : 0.174865}", "{'[2, 5, 0, 0, 5, 0, 0, 0, 21, 28, 0, 17, 2, 0, 0, 1, 1, 0]' : 0.175431}", "{'[2, 5, 0, 0, 5, 0, 0, 0, 21, 28, 0, 17, 2, 0, 0, 1, 1, 0]' : 0.175727}", "{'[2, 5, 0, 0, 5, 0, 0, 0, 21, 28, 0, 17, 2, 0, 0, 1, 1, 0]' : 0.175311}", "{'[2, 5, 0, 0, 5, 0, 0, 0, 21, 28, 0, 17, 2, 0, 0, 1, 1, 0]' : 0.175149}"]
returning from 'run': {'[2, 5, 0, 0, 5, 0, 0, 0, 21, 28, 0, 17, 2, 0, 0, 1, 1, 0]': ([0.174852, 0.174988, 0.175037, 0.174803, 0.174852, 0.174657, 0.1747, 0.174724, 0.175221, 0.175043, 0.174412, 0.17473, 0.174921, 0.174944, 0.17518, 0.175351, 0.174965, 0.175108, 0.174875, 0.175051, 0.175929, 0.17469, 0.175341, 0.17414, 0.175168, 0.174865, 0.175431, 0.175727, 0.175311, 0.175149], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 5, 0, 0, 5, 0, 0, 0, 21, 28, 0, 17, 2, 0, 0, 1, 1, 0]': ([0.174852, 0.174988, 0.175037, 0.174803, 0.174852, 0.174657, 0.1747, 0.174724, 0.175221, 0.175043, 0.174412, 0.17473, 0.174921, 0.174944, 0.17518, 0.175351, 0.174965, 0.175108, 0.174875, 0.175051, 0.175929, 0.17469, 0.175341, 0.17414, 0.175168, 0.174865, 0.175431, 0.175727, 0.175311, 0.175149], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	6
        Additions: 		2921
        Multiplications: 	1440
        Divisions: 		0
        Logical: 		0
        Reads: 			5505
        Writes: 		884
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest53.exe __orio_perftest53.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest53.exe  
Program Test Output: 
{'[6, 5, 2, 6, 6, 6, 0, 0, 0, 28, 21, 0, 0, 0, 0, 1, 0, 1]' : 0.186265}
{'[6, 5, 2, 6, 6, 6, 0, 0, 0, 28, 21, 0, 0, 0, 0, 1, 0, 1]' : 0.185455}
{'[6, 5, 2, 6, 6, 6, 0, 0, 0, 28, 21, 0, 0, 0, 0, 1, 0, 1]' : 0.171686}
{'[6, 5, 2, 6, 6, 6, 0, 0, 0, 28, 21, 0, 0, 0, 0, 1, 0, 1]' : 0.172231}
{'[6, 5, 2, 6, 6, 6, 0, 0, 0, 28, 21, 0, 0, 0, 0, 1, 0, 1]' : 0.171953}
{'[6, 5, 2, 6, 6, 6, 0, 0, 0, 28, 21, 0, 0, 0, 0, 1, 0, 1]' : 0.171847}
{'[6, 5, 2, 6, 6, 6, 0, 0, 0, 28, 21, 0, 0, 0, 0, 1, 0, 1]' : 0.171656}
{'[6, 5, 2, 6, 6, 6, 0, 0, 0, 28, 21, 0, 0, 0, 0, 1, 0, 1]' : 0.171392}
{'[6, 5, 2, 6, 6, 6, 0, 0, 0, 28, 21, 0, 0, 0, 0, 1, 0, 1]' : 0.171608}
{'[6, 5, 2, 6, 6, 6, 0, 0, 0, 28, 21, 0, 0, 0, 0, 1, 0, 1]' : 0.17152}
{'[6, 5, 2, 6, 6, 6, 0, 0, 0, 28, 21, 0, 0, 0, 0, 1, 0, 1]' : 0.172004}
{'[6, 5, 2, 6, 6, 6, 0, 0, 0, 28, 21, 0, 0, 0, 0, 1, 0, 1]' : 0.171919}
{'[6, 5, 2, 6, 6, 6, 0, 0, 0, 28, 21, 0, 0, 0, 0, 1, 0, 1]' : 0.171718}
{'[6, 5, 2, 6, 6, 6, 0, 0, 0, 28, 21, 0, 0, 0, 0, 1, 0, 1]' : 0.16855}
{'[6, 5, 2, 6, 6, 6, 0, 0, 0, 28, 21, 0, 0, 0, 0, 1, 0, 1]' : 0.167897}
{'[6, 5, 2, 6, 6, 6, 0, 0, 0, 28, 21, 0, 0, 0, 0, 1, 0, 1]' : 0.168347}
{'[6, 5, 2, 6, 6, 6, 0, 0, 0, 28, 21, 0, 0, 0, 0, 1, 0, 1]' : 0.168308}
{'[6, 5, 2, 6, 6, 6, 0, 0, 0, 28, 21, 0, 0, 0, 0, 1, 0, 1]' : 0.171992}
{'[6, 5, 2, 6, 6, 6, 0, 0, 0, 28, 21, 0, 0, 0, 0, 1, 0, 1]' : 0.17203}
{'[6, 5, 2, 6, 6, 6, 0, 0, 0, 28, 21, 0, 0, 0, 0, 1, 0, 1]' : 0.172168}
{'[6, 5, 2, 6, 6, 6, 0, 0, 0, 28, 21, 0, 0, 0, 0, 1, 0, 1]' : 0.171702}
{'[6, 5, 2, 6, 6, 6, 0, 0, 0, 28, 21, 0, 0, 0, 0, 1, 0, 1]' : 0.171863}
{'[6, 5, 2, 6, 6, 6, 0, 0, 0, 28, 21, 0, 0, 0, 0, 1, 0, 1]' : 0.171859}
{'[6, 5, 2, 6, 6, 6, 0, 0, 0, 28, 21, 0, 0, 0, 0, 1, 0, 1]' : 0.172071}
{'[6, 5, 2, 6, 6, 6, 0, 0, 0, 28, 21, 0, 0, 0, 0, 1, 0, 1]' : 0.172149}
{'[6, 5, 2, 6, 6, 6, 0, 0, 0, 28, 21, 0, 0, 0, 0, 1, 0, 1]' : 0.172288}
{'[6, 5, 2, 6, 6, 6, 0, 0, 0, 28, 21, 0, 0, 0, 0, 1, 0, 1]' : 0.17214}
{'[6, 5, 2, 6, 6, 6, 0, 0, 0, 28, 21, 0, 0, 0, 0, 1, 0, 1]' : 0.172648}
{'[6, 5, 2, 6, 6, 6, 0, 0, 0, 28, 21, 0, 0, 0, 0, 1, 0, 1]' : 0.171508}
{'[6, 5, 2, 6, 6, 6, 0, 0, 0, 28, 21, 0, 0, 0, 0, 1, 0, 1]' : 0.171845}

out:
 ["{'[6, 5, 2, 6, 6, 6, 0, 0, 0, 28, 21, 0, 0, 0, 0, 1, 0, 1]' : 0.186265}", "{'[6, 5, 2, 6, 6, 6, 0, 0, 0, 28, 21, 0, 0, 0, 0, 1, 0, 1]' : 0.185455}", "{'[6, 5, 2, 6, 6, 6, 0, 0, 0, 28, 21, 0, 0, 0, 0, 1, 0, 1]' : 0.171686}", "{'[6, 5, 2, 6, 6, 6, 0, 0, 0, 28, 21, 0, 0, 0, 0, 1, 0, 1]' : 0.172231}", "{'[6, 5, 2, 6, 6, 6, 0, 0, 0, 28, 21, 0, 0, 0, 0, 1, 0, 1]' : 0.171953}", "{'[6, 5, 2, 6, 6, 6, 0, 0, 0, 28, 21, 0, 0, 0, 0, 1, 0, 1]' : 0.171847}", "{'[6, 5, 2, 6, 6, 6, 0, 0, 0, 28, 21, 0, 0, 0, 0, 1, 0, 1]' : 0.171656}", "{'[6, 5, 2, 6, 6, 6, 0, 0, 0, 28, 21, 0, 0, 0, 0, 1, 0, 1]' : 0.171392}", "{'[6, 5, 2, 6, 6, 6, 0, 0, 0, 28, 21, 0, 0, 0, 0, 1, 0, 1]' : 0.171608}", "{'[6, 5, 2, 6, 6, 6, 0, 0, 0, 28, 21, 0, 0, 0, 0, 1, 0, 1]' : 0.17152}", "{'[6, 5, 2, 6, 6, 6, 0, 0, 0, 28, 21, 0, 0, 0, 0, 1, 0, 1]' : 0.172004}", "{'[6, 5, 2, 6, 6, 6, 0, 0, 0, 28, 21, 0, 0, 0, 0, 1, 0, 1]' : 0.171919}", "{'[6, 5, 2, 6, 6, 6, 0, 0, 0, 28, 21, 0, 0, 0, 0, 1, 0, 1]' : 0.171718}", "{'[6, 5, 2, 6, 6, 6, 0, 0, 0, 28, 21, 0, 0, 0, 0, 1, 0, 1]' : 0.16855}", "{'[6, 5, 2, 6, 6, 6, 0, 0, 0, 28, 21, 0, 0, 0, 0, 1, 0, 1]' : 0.167897}", "{'[6, 5, 2, 6, 6, 6, 0, 0, 0, 28, 21, 0, 0, 0, 0, 1, 0, 1]' : 0.168347}", "{'[6, 5, 2, 6, 6, 6, 0, 0, 0, 28, 21, 0, 0, 0, 0, 1, 0, 1]' : 0.168308}", "{'[6, 5, 2, 6, 6, 6, 0, 0, 0, 28, 21, 0, 0, 0, 0, 1, 0, 1]' : 0.171992}", "{'[6, 5, 2, 6, 6, 6, 0, 0, 0, 28, 21, 0, 0, 0, 0, 1, 0, 1]' : 0.17203}", "{'[6, 5, 2, 6, 6, 6, 0, 0, 0, 28, 21, 0, 0, 0, 0, 1, 0, 1]' : 0.172168}", "{'[6, 5, 2, 6, 6, 6, 0, 0, 0, 28, 21, 0, 0, 0, 0, 1, 0, 1]' : 0.171702}", "{'[6, 5, 2, 6, 6, 6, 0, 0, 0, 28, 21, 0, 0, 0, 0, 1, 0, 1]' : 0.171863}", "{'[6, 5, 2, 6, 6, 6, 0, 0, 0, 28, 21, 0, 0, 0, 0, 1, 0, 1]' : 0.171859}", "{'[6, 5, 2, 6, 6, 6, 0, 0, 0, 28, 21, 0, 0, 0, 0, 1, 0, 1]' : 0.172071}", "{'[6, 5, 2, 6, 6, 6, 0, 0, 0, 28, 21, 0, 0, 0, 0, 1, 0, 1]' : 0.172149}", "{'[6, 5, 2, 6, 6, 6, 0, 0, 0, 28, 21, 0, 0, 0, 0, 1, 0, 1]' : 0.172288}", "{'[6, 5, 2, 6, 6, 6, 0, 0, 0, 28, 21, 0, 0, 0, 0, 1, 0, 1]' : 0.17214}", "{'[6, 5, 2, 6, 6, 6, 0, 0, 0, 28, 21, 0, 0, 0, 0, 1, 0, 1]' : 0.172648}", "{'[6, 5, 2, 6, 6, 6, 0, 0, 0, 28, 21, 0, 0, 0, 0, 1, 0, 1]' : 0.171508}", "{'[6, 5, 2, 6, 6, 6, 0, 0, 0, 28, 21, 0, 0, 0, 0, 1, 0, 1]' : 0.171845}"]
returning from 'run': {'[6, 5, 2, 6, 6, 6, 0, 0, 0, 28, 21, 0, 0, 0, 0, 1, 0, 1]': ([0.186265, 0.185455, 0.171686, 0.172231, 0.171953, 0.171847, 0.171656, 0.171392, 0.171608, 0.17152, 0.172004, 0.171919, 0.171718, 0.16855, 0.167897, 0.168347, 0.168308, 0.171992, 0.17203, 0.172168, 0.171702, 0.171863, 0.171859, 0.172071, 0.172149, 0.172288, 0.17214, 0.172648, 0.171508, 0.171845], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 5, 2, 6, 6, 6, 0, 0, 0, 28, 21, 0, 0, 0, 0, 1, 0, 1]': ([0.186265, 0.185455, 0.171686, 0.172231, 0.171953, 0.171847, 0.171656, 0.171392, 0.171608, 0.17152, 0.172004, 0.171919, 0.171718, 0.16855, 0.167897, 0.168347, 0.168308, 0.171992, 0.17203, 0.172168, 0.171702, 0.171863, 0.171859, 0.172071, 0.172149, 0.172288, 0.17214, 0.172648, 0.171508, 0.171845], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	73
        Max loop nest depth: 	5
        Additions: 		3072
        Multiplications: 	1176
        Divisions: 		0
        Logical: 		0
        Reads: 			5597
        Writes: 		924
        Comparisons:		73
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest54.exe __orio_perftest54.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest54.exe  
Program Test Output: 
{'[0, 5, 3, 6, 5, 2, 0, 1, 29, 12, 24, 0, 0, 1, 1, 1, 1, 1]' : 0.17511}
{'[0, 5, 3, 6, 5, 2, 0, 1, 29, 12, 24, 0, 0, 1, 1, 1, 1, 1]' : 0.175773}
{'[0, 5, 3, 6, 5, 2, 0, 1, 29, 12, 24, 0, 0, 1, 1, 1, 1, 1]' : 0.174088}
{'[0, 5, 3, 6, 5, 2, 0, 1, 29, 12, 24, 0, 0, 1, 1, 1, 1, 1]' : 0.150976}
{'[0, 5, 3, 6, 5, 2, 0, 1, 29, 12, 24, 0, 0, 1, 1, 1, 1, 1]' : 0.149794}
{'[0, 5, 3, 6, 5, 2, 0, 1, 29, 12, 24, 0, 0, 1, 1, 1, 1, 1]' : 0.149854}
{'[0, 5, 3, 6, 5, 2, 0, 1, 29, 12, 24, 0, 0, 1, 1, 1, 1, 1]' : 0.150084}
{'[0, 5, 3, 6, 5, 2, 0, 1, 29, 12, 24, 0, 0, 1, 1, 1, 1, 1]' : 0.149763}
{'[0, 5, 3, 6, 5, 2, 0, 1, 29, 12, 24, 0, 0, 1, 1, 1, 1, 1]' : 0.149622}
{'[0, 5, 3, 6, 5, 2, 0, 1, 29, 12, 24, 0, 0, 1, 1, 1, 1, 1]' : 0.149797}
{'[0, 5, 3, 6, 5, 2, 0, 1, 29, 12, 24, 0, 0, 1, 1, 1, 1, 1]' : 0.149636}
{'[0, 5, 3, 6, 5, 2, 0, 1, 29, 12, 24, 0, 0, 1, 1, 1, 1, 1]' : 0.149681}
{'[0, 5, 3, 6, 5, 2, 0, 1, 29, 12, 24, 0, 0, 1, 1, 1, 1, 1]' : 0.149941}
{'[0, 5, 3, 6, 5, 2, 0, 1, 29, 12, 24, 0, 0, 1, 1, 1, 1, 1]' : 0.1498}
{'[0, 5, 3, 6, 5, 2, 0, 1, 29, 12, 24, 0, 0, 1, 1, 1, 1, 1]' : 0.149795}
{'[0, 5, 3, 6, 5, 2, 0, 1, 29, 12, 24, 0, 0, 1, 1, 1, 1, 1]' : 0.149576}
{'[0, 5, 3, 6, 5, 2, 0, 1, 29, 12, 24, 0, 0, 1, 1, 1, 1, 1]' : 0.149878}
{'[0, 5, 3, 6, 5, 2, 0, 1, 29, 12, 24, 0, 0, 1, 1, 1, 1, 1]' : 0.149733}
{'[0, 5, 3, 6, 5, 2, 0, 1, 29, 12, 24, 0, 0, 1, 1, 1, 1, 1]' : 0.149598}
{'[0, 5, 3, 6, 5, 2, 0, 1, 29, 12, 24, 0, 0, 1, 1, 1, 1, 1]' : 0.149608}
{'[0, 5, 3, 6, 5, 2, 0, 1, 29, 12, 24, 0, 0, 1, 1, 1, 1, 1]' : 0.153685}
{'[0, 5, 3, 6, 5, 2, 0, 1, 29, 12, 24, 0, 0, 1, 1, 1, 1, 1]' : 0.154368}
{'[0, 5, 3, 6, 5, 2, 0, 1, 29, 12, 24, 0, 0, 1, 1, 1, 1, 1]' : 0.154445}
{'[0, 5, 3, 6, 5, 2, 0, 1, 29, 12, 24, 0, 0, 1, 1, 1, 1, 1]' : 0.15399}
{'[0, 5, 3, 6, 5, 2, 0, 1, 29, 12, 24, 0, 0, 1, 1, 1, 1, 1]' : 0.153859}
{'[0, 5, 3, 6, 5, 2, 0, 1, 29, 12, 24, 0, 0, 1, 1, 1, 1, 1]' : 0.154218}
{'[0, 5, 3, 6, 5, 2, 0, 1, 29, 12, 24, 0, 0, 1, 1, 1, 1, 1]' : 0.154049}
{'[0, 5, 3, 6, 5, 2, 0, 1, 29, 12, 24, 0, 0, 1, 1, 1, 1, 1]' : 0.154165}
{'[0, 5, 3, 6, 5, 2, 0, 1, 29, 12, 24, 0, 0, 1, 1, 1, 1, 1]' : 0.154004}
{'[0, 5, 3, 6, 5, 2, 0, 1, 29, 12, 24, 0, 0, 1, 1, 1, 1, 1]' : 0.154429}

out:
 ["{'[0, 5, 3, 6, 5, 2, 0, 1, 29, 12, 24, 0, 0, 1, 1, 1, 1, 1]' : 0.17511}", "{'[0, 5, 3, 6, 5, 2, 0, 1, 29, 12, 24, 0, 0, 1, 1, 1, 1, 1]' : 0.175773}", "{'[0, 5, 3, 6, 5, 2, 0, 1, 29, 12, 24, 0, 0, 1, 1, 1, 1, 1]' : 0.174088}", "{'[0, 5, 3, 6, 5, 2, 0, 1, 29, 12, 24, 0, 0, 1, 1, 1, 1, 1]' : 0.150976}", "{'[0, 5, 3, 6, 5, 2, 0, 1, 29, 12, 24, 0, 0, 1, 1, 1, 1, 1]' : 0.149794}", "{'[0, 5, 3, 6, 5, 2, 0, 1, 29, 12, 24, 0, 0, 1, 1, 1, 1, 1]' : 0.149854}", "{'[0, 5, 3, 6, 5, 2, 0, 1, 29, 12, 24, 0, 0, 1, 1, 1, 1, 1]' : 0.150084}", "{'[0, 5, 3, 6, 5, 2, 0, 1, 29, 12, 24, 0, 0, 1, 1, 1, 1, 1]' : 0.149763}", "{'[0, 5, 3, 6, 5, 2, 0, 1, 29, 12, 24, 0, 0, 1, 1, 1, 1, 1]' : 0.149622}", "{'[0, 5, 3, 6, 5, 2, 0, 1, 29, 12, 24, 0, 0, 1, 1, 1, 1, 1]' : 0.149797}", "{'[0, 5, 3, 6, 5, 2, 0, 1, 29, 12, 24, 0, 0, 1, 1, 1, 1, 1]' : 0.149636}", "{'[0, 5, 3, 6, 5, 2, 0, 1, 29, 12, 24, 0, 0, 1, 1, 1, 1, 1]' : 0.149681}", "{'[0, 5, 3, 6, 5, 2, 0, 1, 29, 12, 24, 0, 0, 1, 1, 1, 1, 1]' : 0.149941}", "{'[0, 5, 3, 6, 5, 2, 0, 1, 29, 12, 24, 0, 0, 1, 1, 1, 1, 1]' : 0.1498}", "{'[0, 5, 3, 6, 5, 2, 0, 1, 29, 12, 24, 0, 0, 1, 1, 1, 1, 1]' : 0.149795}", "{'[0, 5, 3, 6, 5, 2, 0, 1, 29, 12, 24, 0, 0, 1, 1, 1, 1, 1]' : 0.149576}", "{'[0, 5, 3, 6, 5, 2, 0, 1, 29, 12, 24, 0, 0, 1, 1, 1, 1, 1]' : 0.149878}", "{'[0, 5, 3, 6, 5, 2, 0, 1, 29, 12, 24, 0, 0, 1, 1, 1, 1, 1]' : 0.149733}", "{'[0, 5, 3, 6, 5, 2, 0, 1, 29, 12, 24, 0, 0, 1, 1, 1, 1, 1]' : 0.149598}", "{'[0, 5, 3, 6, 5, 2, 0, 1, 29, 12, 24, 0, 0, 1, 1, 1, 1, 1]' : 0.149608}", "{'[0, 5, 3, 6, 5, 2, 0, 1, 29, 12, 24, 0, 0, 1, 1, 1, 1, 1]' : 0.153685}", "{'[0, 5, 3, 6, 5, 2, 0, 1, 29, 12, 24, 0, 0, 1, 1, 1, 1, 1]' : 0.154368}", "{'[0, 5, 3, 6, 5, 2, 0, 1, 29, 12, 24, 0, 0, 1, 1, 1, 1, 1]' : 0.154445}", "{'[0, 5, 3, 6, 5, 2, 0, 1, 29, 12, 24, 0, 0, 1, 1, 1, 1, 1]' : 0.15399}", "{'[0, 5, 3, 6, 5, 2, 0, 1, 29, 12, 24, 0, 0, 1, 1, 1, 1, 1]' : 0.153859}", "{'[0, 5, 3, 6, 5, 2, 0, 1, 29, 12, 24, 0, 0, 1, 1, 1, 1, 1]' : 0.154218}", "{'[0, 5, 3, 6, 5, 2, 0, 1, 29, 12, 24, 0, 0, 1, 1, 1, 1, 1]' : 0.154049}", "{'[0, 5, 3, 6, 5, 2, 0, 1, 29, 12, 24, 0, 0, 1, 1, 1, 1, 1]' : 0.154165}", "{'[0, 5, 3, 6, 5, 2, 0, 1, 29, 12, 24, 0, 0, 1, 1, 1, 1, 1]' : 0.154004}", "{'[0, 5, 3, 6, 5, 2, 0, 1, 29, 12, 24, 0, 0, 1, 1, 1, 1, 1]' : 0.154429}"]
returning from 'run': {'[0, 5, 3, 6, 5, 2, 0, 1, 29, 12, 24, 0, 0, 1, 1, 1, 1, 1]': ([0.17511, 0.175773, 0.174088, 0.150976, 0.149794, 0.149854, 0.150084, 0.149763, 0.149622, 0.149797, 0.149636, 0.149681, 0.149941, 0.1498, 0.149795, 0.149576, 0.149878, 0.149733, 0.149598, 0.149608, 0.153685, 0.154368, 0.154445, 0.15399, 0.153859, 0.154218, 0.154049, 0.154165, 0.154004, 0.154429], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 5, 3, 6, 5, 2, 0, 1, 29, 12, 24, 0, 0, 1, 1, 1, 1, 1]': ([0.17511, 0.175773, 0.174088, 0.150976, 0.149794, 0.149854, 0.150084, 0.149763, 0.149622, 0.149797, 0.149636, 0.149681, 0.149941, 0.1498, 0.149795, 0.149576, 0.149878, 0.149733, 0.149598, 0.149608, 0.153685, 0.154368, 0.154445, 0.15399, 0.153859, 0.154218, 0.154049, 0.154165, 0.154004, 0.154429], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	5
        Additions: 		4322
        Multiplications: 	2046
        Divisions: 		0
        Logical: 		0
        Reads: 			8104
        Writes: 		1302
        Comparisons:		25
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest55.exe __orio_perftest55.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest55.exe  
Program Test Output: 
{'[6, 5, 6, 0, 6, 6, 0, 1, 28, 0, 1, 26, 2, 0, 0, 1, 0, 1]' : 0.165972}
{'[6, 5, 6, 0, 6, 6, 0, 1, 28, 0, 1, 26, 2, 0, 0, 1, 0, 1]' : 0.166539}
{'[6, 5, 6, 0, 6, 6, 0, 1, 28, 0, 1, 26, 2, 0, 0, 1, 0, 1]' : 0.164488}
{'[6, 5, 6, 0, 6, 6, 0, 1, 28, 0, 1, 26, 2, 0, 0, 1, 0, 1]' : 0.146036}
{'[6, 5, 6, 0, 6, 6, 0, 1, 28, 0, 1, 26, 2, 0, 0, 1, 0, 1]' : 0.14515}
{'[6, 5, 6, 0, 6, 6, 0, 1, 28, 0, 1, 26, 2, 0, 0, 1, 0, 1]' : 0.146158}
{'[6, 5, 6, 0, 6, 6, 0, 1, 28, 0, 1, 26, 2, 0, 0, 1, 0, 1]' : 0.145418}
{'[6, 5, 6, 0, 6, 6, 0, 1, 28, 0, 1, 26, 2, 0, 0, 1, 0, 1]' : 0.145996}
{'[6, 5, 6, 0, 6, 6, 0, 1, 28, 0, 1, 26, 2, 0, 0, 1, 0, 1]' : 0.145948}
{'[6, 5, 6, 0, 6, 6, 0, 1, 28, 0, 1, 26, 2, 0, 0, 1, 0, 1]' : 0.146147}
{'[6, 5, 6, 0, 6, 6, 0, 1, 28, 0, 1, 26, 2, 0, 0, 1, 0, 1]' : 0.145337}
{'[6, 5, 6, 0, 6, 6, 0, 1, 28, 0, 1, 26, 2, 0, 0, 1, 0, 1]' : 0.145521}
{'[6, 5, 6, 0, 6, 6, 0, 1, 28, 0, 1, 26, 2, 0, 0, 1, 0, 1]' : 0.145406}
{'[6, 5, 6, 0, 6, 6, 0, 1, 28, 0, 1, 26, 2, 0, 0, 1, 0, 1]' : 0.145412}
{'[6, 5, 6, 0, 6, 6, 0, 1, 28, 0, 1, 26, 2, 0, 0, 1, 0, 1]' : 0.145523}
{'[6, 5, 6, 0, 6, 6, 0, 1, 28, 0, 1, 26, 2, 0, 0, 1, 0, 1]' : 0.145734}
{'[6, 5, 6, 0, 6, 6, 0, 1, 28, 0, 1, 26, 2, 0, 0, 1, 0, 1]' : 0.14611}
{'[6, 5, 6, 0, 6, 6, 0, 1, 28, 0, 1, 26, 2, 0, 0, 1, 0, 1]' : 0.146198}
{'[6, 5, 6, 0, 6, 6, 0, 1, 28, 0, 1, 26, 2, 0, 0, 1, 0, 1]' : 0.145333}
{'[6, 5, 6, 0, 6, 6, 0, 1, 28, 0, 1, 26, 2, 0, 0, 1, 0, 1]' : 0.145901}
{'[6, 5, 6, 0, 6, 6, 0, 1, 28, 0, 1, 26, 2, 0, 0, 1, 0, 1]' : 0.145624}
{'[6, 5, 6, 0, 6, 6, 0, 1, 28, 0, 1, 26, 2, 0, 0, 1, 0, 1]' : 0.145461}
{'[6, 5, 6, 0, 6, 6, 0, 1, 28, 0, 1, 26, 2, 0, 0, 1, 0, 1]' : 0.14625}
{'[6, 5, 6, 0, 6, 6, 0, 1, 28, 0, 1, 26, 2, 0, 0, 1, 0, 1]' : 0.145736}
{'[6, 5, 6, 0, 6, 6, 0, 1, 28, 0, 1, 26, 2, 0, 0, 1, 0, 1]' : 0.145443}
{'[6, 5, 6, 0, 6, 6, 0, 1, 28, 0, 1, 26, 2, 0, 0, 1, 0, 1]' : 0.145438}
{'[6, 5, 6, 0, 6, 6, 0, 1, 28, 0, 1, 26, 2, 0, 0, 1, 0, 1]' : 0.145435}
{'[6, 5, 6, 0, 6, 6, 0, 1, 28, 0, 1, 26, 2, 0, 0, 1, 0, 1]' : 0.14544}
{'[6, 5, 6, 0, 6, 6, 0, 1, 28, 0, 1, 26, 2, 0, 0, 1, 0, 1]' : 0.145171}
{'[6, 5, 6, 0, 6, 6, 0, 1, 28, 0, 1, 26, 2, 0, 0, 1, 0, 1]' : 0.145706}

out:
 ["{'[6, 5, 6, 0, 6, 6, 0, 1, 28, 0, 1, 26, 2, 0, 0, 1, 0, 1]' : 0.165972}", "{'[6, 5, 6, 0, 6, 6, 0, 1, 28, 0, 1, 26, 2, 0, 0, 1, 0, 1]' : 0.166539}", "{'[6, 5, 6, 0, 6, 6, 0, 1, 28, 0, 1, 26, 2, 0, 0, 1, 0, 1]' : 0.164488}", "{'[6, 5, 6, 0, 6, 6, 0, 1, 28, 0, 1, 26, 2, 0, 0, 1, 0, 1]' : 0.146036}", "{'[6, 5, 6, 0, 6, 6, 0, 1, 28, 0, 1, 26, 2, 0, 0, 1, 0, 1]' : 0.14515}", "{'[6, 5, 6, 0, 6, 6, 0, 1, 28, 0, 1, 26, 2, 0, 0, 1, 0, 1]' : 0.146158}", "{'[6, 5, 6, 0, 6, 6, 0, 1, 28, 0, 1, 26, 2, 0, 0, 1, 0, 1]' : 0.145418}", "{'[6, 5, 6, 0, 6, 6, 0, 1, 28, 0, 1, 26, 2, 0, 0, 1, 0, 1]' : 0.145996}", "{'[6, 5, 6, 0, 6, 6, 0, 1, 28, 0, 1, 26, 2, 0, 0, 1, 0, 1]' : 0.145948}", "{'[6, 5, 6, 0, 6, 6, 0, 1, 28, 0, 1, 26, 2, 0, 0, 1, 0, 1]' : 0.146147}", "{'[6, 5, 6, 0, 6, 6, 0, 1, 28, 0, 1, 26, 2, 0, 0, 1, 0, 1]' : 0.145337}", "{'[6, 5, 6, 0, 6, 6, 0, 1, 28, 0, 1, 26, 2, 0, 0, 1, 0, 1]' : 0.145521}", "{'[6, 5, 6, 0, 6, 6, 0, 1, 28, 0, 1, 26, 2, 0, 0, 1, 0, 1]' : 0.145406}", "{'[6, 5, 6, 0, 6, 6, 0, 1, 28, 0, 1, 26, 2, 0, 0, 1, 0, 1]' : 0.145412}", "{'[6, 5, 6, 0, 6, 6, 0, 1, 28, 0, 1, 26, 2, 0, 0, 1, 0, 1]' : 0.145523}", "{'[6, 5, 6, 0, 6, 6, 0, 1, 28, 0, 1, 26, 2, 0, 0, 1, 0, 1]' : 0.145734}", "{'[6, 5, 6, 0, 6, 6, 0, 1, 28, 0, 1, 26, 2, 0, 0, 1, 0, 1]' : 0.14611}", "{'[6, 5, 6, 0, 6, 6, 0, 1, 28, 0, 1, 26, 2, 0, 0, 1, 0, 1]' : 0.146198}", "{'[6, 5, 6, 0, 6, 6, 0, 1, 28, 0, 1, 26, 2, 0, 0, 1, 0, 1]' : 0.145333}", "{'[6, 5, 6, 0, 6, 6, 0, 1, 28, 0, 1, 26, 2, 0, 0, 1, 0, 1]' : 0.145901}", "{'[6, 5, 6, 0, 6, 6, 0, 1, 28, 0, 1, 26, 2, 0, 0, 1, 0, 1]' : 0.145624}", "{'[6, 5, 6, 0, 6, 6, 0, 1, 28, 0, 1, 26, 2, 0, 0, 1, 0, 1]' : 0.145461}", "{'[6, 5, 6, 0, 6, 6, 0, 1, 28, 0, 1, 26, 2, 0, 0, 1, 0, 1]' : 0.14625}", "{'[6, 5, 6, 0, 6, 6, 0, 1, 28, 0, 1, 26, 2, 0, 0, 1, 0, 1]' : 0.145736}", "{'[6, 5, 6, 0, 6, 6, 0, 1, 28, 0, 1, 26, 2, 0, 0, 1, 0, 1]' : 0.145443}", "{'[6, 5, 6, 0, 6, 6, 0, 1, 28, 0, 1, 26, 2, 0, 0, 1, 0, 1]' : 0.145438}", "{'[6, 5, 6, 0, 6, 6, 0, 1, 28, 0, 1, 26, 2, 0, 0, 1, 0, 1]' : 0.145435}", "{'[6, 5, 6, 0, 6, 6, 0, 1, 28, 0, 1, 26, 2, 0, 0, 1, 0, 1]' : 0.14544}", "{'[6, 5, 6, 0, 6, 6, 0, 1, 28, 0, 1, 26, 2, 0, 0, 1, 0, 1]' : 0.145171}", "{'[6, 5, 6, 0, 6, 6, 0, 1, 28, 0, 1, 26, 2, 0, 0, 1, 0, 1]' : 0.145706}"]
returning from 'run': {'[6, 5, 6, 0, 6, 6, 0, 1, 28, 0, 1, 26, 2, 0, 0, 1, 0, 1]': ([0.165972, 0.166539, 0.164488, 0.146036, 0.14515, 0.146158, 0.145418, 0.145996, 0.145948, 0.146147, 0.145337, 0.145521, 0.145406, 0.145412, 0.145523, 0.145734, 0.14611, 0.146198, 0.145333, 0.145901, 0.145624, 0.145461, 0.14625, 0.145736, 0.145443, 0.145438, 0.145435, 0.14544, 0.145171, 0.145706], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 5, 6, 0, 6, 6, 0, 1, 28, 0, 1, 26, 2, 0, 0, 1, 0, 1]': ([0.165972, 0.166539, 0.164488, 0.146036, 0.14515, 0.146158, 0.145418, 0.145996, 0.145948, 0.146147, 0.145337, 0.145521, 0.145406, 0.145412, 0.145523, 0.145734, 0.14611, 0.146198, 0.145333, 0.145901, 0.145624, 0.145461, 0.14625, 0.145736, 0.145443, 0.145438, 0.145435, 0.14544, 0.145171, 0.145706], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	130
        Max loop nest depth: 	6
        Additions: 		9249
        Multiplications: 	2408
        Divisions: 		0
        Logical: 		0
        Reads: 			13992
        Writes: 		1569
        Comparisons:		130
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest56.exe __orio_perftest56.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest56.exe  
Program Test Output: 
{'[1, 5, 6, 2, 4, 5, 0, 1, 19, 26, 0, 8, 0, 2, 0, 0, 0, 0]' : 0.234921}
{'[1, 5, 6, 2, 4, 5, 0, 1, 19, 26, 0, 8, 0, 2, 0, 0, 0, 0]' : 0.234986}
{'[1, 5, 6, 2, 4, 5, 0, 1, 19, 26, 0, 8, 0, 2, 0, 0, 0, 0]' : 0.235047}
{'[1, 5, 6, 2, 4, 5, 0, 1, 19, 26, 0, 8, 0, 2, 0, 0, 0, 0]' : 0.23478}
{'[1, 5, 6, 2, 4, 5, 0, 1, 19, 26, 0, 8, 0, 2, 0, 0, 0, 0]' : 0.234703}
{'[1, 5, 6, 2, 4, 5, 0, 1, 19, 26, 0, 8, 0, 2, 0, 0, 0, 0]' : 0.234842}
{'[1, 5, 6, 2, 4, 5, 0, 1, 19, 26, 0, 8, 0, 2, 0, 0, 0, 0]' : 0.235323}
{'[1, 5, 6, 2, 4, 5, 0, 1, 19, 26, 0, 8, 0, 2, 0, 0, 0, 0]' : 0.234936}
{'[1, 5, 6, 2, 4, 5, 0, 1, 19, 26, 0, 8, 0, 2, 0, 0, 0, 0]' : 0.234662}
{'[1, 5, 6, 2, 4, 5, 0, 1, 19, 26, 0, 8, 0, 2, 0, 0, 0, 0]' : 0.234976}
{'[1, 5, 6, 2, 4, 5, 0, 1, 19, 26, 0, 8, 0, 2, 0, 0, 0, 0]' : 0.234736}
{'[1, 5, 6, 2, 4, 5, 0, 1, 19, 26, 0, 8, 0, 2, 0, 0, 0, 0]' : 0.235268}
{'[1, 5, 6, 2, 4, 5, 0, 1, 19, 26, 0, 8, 0, 2, 0, 0, 0, 0]' : 0.235013}
{'[1, 5, 6, 2, 4, 5, 0, 1, 19, 26, 0, 8, 0, 2, 0, 0, 0, 0]' : 0.234783}
{'[1, 5, 6, 2, 4, 5, 0, 1, 19, 26, 0, 8, 0, 2, 0, 0, 0, 0]' : 0.234931}
{'[1, 5, 6, 2, 4, 5, 0, 1, 19, 26, 0, 8, 0, 2, 0, 0, 0, 0]' : 0.234924}
{'[1, 5, 6, 2, 4, 5, 0, 1, 19, 26, 0, 8, 0, 2, 0, 0, 0, 0]' : 0.234901}
{'[1, 5, 6, 2, 4, 5, 0, 1, 19, 26, 0, 8, 0, 2, 0, 0, 0, 0]' : 0.234864}
{'[1, 5, 6, 2, 4, 5, 0, 1, 19, 26, 0, 8, 0, 2, 0, 0, 0, 0]' : 0.234872}
{'[1, 5, 6, 2, 4, 5, 0, 1, 19, 26, 0, 8, 0, 2, 0, 0, 0, 0]' : 0.234716}
{'[1, 5, 6, 2, 4, 5, 0, 1, 19, 26, 0, 8, 0, 2, 0, 0, 0, 0]' : 0.235131}
{'[1, 5, 6, 2, 4, 5, 0, 1, 19, 26, 0, 8, 0, 2, 0, 0, 0, 0]' : 0.234723}
{'[1, 5, 6, 2, 4, 5, 0, 1, 19, 26, 0, 8, 0, 2, 0, 0, 0, 0]' : 0.234912}
{'[1, 5, 6, 2, 4, 5, 0, 1, 19, 26, 0, 8, 0, 2, 0, 0, 0, 0]' : 0.234815}
{'[1, 5, 6, 2, 4, 5, 0, 1, 19, 26, 0, 8, 0, 2, 0, 0, 0, 0]' : 0.234755}
{'[1, 5, 6, 2, 4, 5, 0, 1, 19, 26, 0, 8, 0, 2, 0, 0, 0, 0]' : 0.235111}
{'[1, 5, 6, 2, 4, 5, 0, 1, 19, 26, 0, 8, 0, 2, 0, 0, 0, 0]' : 0.234956}
{'[1, 5, 6, 2, 4, 5, 0, 1, 19, 26, 0, 8, 0, 2, 0, 0, 0, 0]' : 0.23476}
{'[1, 5, 6, 2, 4, 5, 0, 1, 19, 26, 0, 8, 0, 2, 0, 0, 0, 0]' : 0.235013}
{'[1, 5, 6, 2, 4, 5, 0, 1, 19, 26, 0, 8, 0, 2, 0, 0, 0, 0]' : 0.234945}

out:
 ["{'[1, 5, 6, 2, 4, 5, 0, 1, 19, 26, 0, 8, 0, 2, 0, 0, 0, 0]' : 0.234921}", "{'[1, 5, 6, 2, 4, 5, 0, 1, 19, 26, 0, 8, 0, 2, 0, 0, 0, 0]' : 0.234986}", "{'[1, 5, 6, 2, 4, 5, 0, 1, 19, 26, 0, 8, 0, 2, 0, 0, 0, 0]' : 0.235047}", "{'[1, 5, 6, 2, 4, 5, 0, 1, 19, 26, 0, 8, 0, 2, 0, 0, 0, 0]' : 0.23478}", "{'[1, 5, 6, 2, 4, 5, 0, 1, 19, 26, 0, 8, 0, 2, 0, 0, 0, 0]' : 0.234703}", "{'[1, 5, 6, 2, 4, 5, 0, 1, 19, 26, 0, 8, 0, 2, 0, 0, 0, 0]' : 0.234842}", "{'[1, 5, 6, 2, 4, 5, 0, 1, 19, 26, 0, 8, 0, 2, 0, 0, 0, 0]' : 0.235323}", "{'[1, 5, 6, 2, 4, 5, 0, 1, 19, 26, 0, 8, 0, 2, 0, 0, 0, 0]' : 0.234936}", "{'[1, 5, 6, 2, 4, 5, 0, 1, 19, 26, 0, 8, 0, 2, 0, 0, 0, 0]' : 0.234662}", "{'[1, 5, 6, 2, 4, 5, 0, 1, 19, 26, 0, 8, 0, 2, 0, 0, 0, 0]' : 0.234976}", "{'[1, 5, 6, 2, 4, 5, 0, 1, 19, 26, 0, 8, 0, 2, 0, 0, 0, 0]' : 0.234736}", "{'[1, 5, 6, 2, 4, 5, 0, 1, 19, 26, 0, 8, 0, 2, 0, 0, 0, 0]' : 0.235268}", "{'[1, 5, 6, 2, 4, 5, 0, 1, 19, 26, 0, 8, 0, 2, 0, 0, 0, 0]' : 0.235013}", "{'[1, 5, 6, 2, 4, 5, 0, 1, 19, 26, 0, 8, 0, 2, 0, 0, 0, 0]' : 0.234783}", "{'[1, 5, 6, 2, 4, 5, 0, 1, 19, 26, 0, 8, 0, 2, 0, 0, 0, 0]' : 0.234931}", "{'[1, 5, 6, 2, 4, 5, 0, 1, 19, 26, 0, 8, 0, 2, 0, 0, 0, 0]' : 0.234924}", "{'[1, 5, 6, 2, 4, 5, 0, 1, 19, 26, 0, 8, 0, 2, 0, 0, 0, 0]' : 0.234901}", "{'[1, 5, 6, 2, 4, 5, 0, 1, 19, 26, 0, 8, 0, 2, 0, 0, 0, 0]' : 0.234864}", "{'[1, 5, 6, 2, 4, 5, 0, 1, 19, 26, 0, 8, 0, 2, 0, 0, 0, 0]' : 0.234872}", "{'[1, 5, 6, 2, 4, 5, 0, 1, 19, 26, 0, 8, 0, 2, 0, 0, 0, 0]' : 0.234716}", "{'[1, 5, 6, 2, 4, 5, 0, 1, 19, 26, 0, 8, 0, 2, 0, 0, 0, 0]' : 0.235131}", "{'[1, 5, 6, 2, 4, 5, 0, 1, 19, 26, 0, 8, 0, 2, 0, 0, 0, 0]' : 0.234723}", "{'[1, 5, 6, 2, 4, 5, 0, 1, 19, 26, 0, 8, 0, 2, 0, 0, 0, 0]' : 0.234912}", "{'[1, 5, 6, 2, 4, 5, 0, 1, 19, 26, 0, 8, 0, 2, 0, 0, 0, 0]' : 0.234815}", "{'[1, 5, 6, 2, 4, 5, 0, 1, 19, 26, 0, 8, 0, 2, 0, 0, 0, 0]' : 0.234755}", "{'[1, 5, 6, 2, 4, 5, 0, 1, 19, 26, 0, 8, 0, 2, 0, 0, 0, 0]' : 0.235111}", "{'[1, 5, 6, 2, 4, 5, 0, 1, 19, 26, 0, 8, 0, 2, 0, 0, 0, 0]' : 0.234956}", "{'[1, 5, 6, 2, 4, 5, 0, 1, 19, 26, 0, 8, 0, 2, 0, 0, 0, 0]' : 0.23476}", "{'[1, 5, 6, 2, 4, 5, 0, 1, 19, 26, 0, 8, 0, 2, 0, 0, 0, 0]' : 0.235013}", "{'[1, 5, 6, 2, 4, 5, 0, 1, 19, 26, 0, 8, 0, 2, 0, 0, 0, 0]' : 0.234945}"]
returning from 'run': {'[1, 5, 6, 2, 4, 5, 0, 1, 19, 26, 0, 8, 0, 2, 0, 0, 0, 0]': ([0.234921, 0.234986, 0.235047, 0.23478, 0.234703, 0.234842, 0.235323, 0.234936, 0.234662, 0.234976, 0.234736, 0.235268, 0.235013, 0.234783, 0.234931, 0.234924, 0.234901, 0.234864, 0.234872, 0.234716, 0.235131, 0.234723, 0.234912, 0.234815, 0.234755, 0.235111, 0.234956, 0.23476, 0.235013, 0.234945], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 5, 6, 2, 4, 5, 0, 1, 19, 26, 0, 8, 0, 2, 0, 0, 0, 0]': ([0.234921, 0.234986, 0.235047, 0.23478, 0.234703, 0.234842, 0.235323, 0.234936, 0.234662, 0.234976, 0.234736, 0.235268, 0.235013, 0.234783, 0.234931, 0.234924, 0.234901, 0.234864, 0.234872, 0.234716, 0.235131, 0.234723, 0.234912, 0.234815, 0.234755, 0.235111, 0.234956, 0.23476, 0.235013, 0.234945], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	137
        Max loop nest depth: 	4
        Additions: 		3458
        Multiplications: 	1302
        Divisions: 		0
        Logical: 		0
        Reads: 			6482
        Writes: 		1124
        Comparisons:		137
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest57.exe __orio_perftest57.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest57.exe  
Program Test Output: 
{'[1, 5, 5, 0, 0, 0, 0, 1, 2, 29, 3, 0, 0, 1, 1, 1, 0, 0]' : 0.218769}
{'[1, 5, 5, 0, 0, 0, 0, 1, 2, 29, 3, 0, 0, 1, 1, 1, 0, 0]' : 0.216289}
{'[1, 5, 5, 0, 0, 0, 0, 1, 2, 29, 3, 0, 0, 1, 1, 1, 0, 0]' : 0.194118}
{'[1, 5, 5, 0, 0, 0, 0, 1, 2, 29, 3, 0, 0, 1, 1, 1, 0, 0]' : 0.194148}
{'[1, 5, 5, 0, 0, 0, 0, 1, 2, 29, 3, 0, 0, 1, 1, 1, 0, 0]' : 0.19413}
{'[1, 5, 5, 0, 0, 0, 0, 1, 2, 29, 3, 0, 0, 1, 1, 1, 0, 0]' : 0.194612}
{'[1, 5, 5, 0, 0, 0, 0, 1, 2, 29, 3, 0, 0, 1, 1, 1, 0, 0]' : 0.191386}
{'[1, 5, 5, 0, 0, 0, 0, 1, 2, 29, 3, 0, 0, 1, 1, 1, 0, 0]' : 0.188536}
{'[1, 5, 5, 0, 0, 0, 0, 1, 2, 29, 3, 0, 0, 1, 1, 1, 0, 0]' : 0.194496}
{'[1, 5, 5, 0, 0, 0, 0, 1, 2, 29, 3, 0, 0, 1, 1, 1, 0, 0]' : 0.188832}
{'[1, 5, 5, 0, 0, 0, 0, 1, 2, 29, 3, 0, 0, 1, 1, 1, 0, 0]' : 0.187686}
{'[1, 5, 5, 0, 0, 0, 0, 1, 2, 29, 3, 0, 0, 1, 1, 1, 0, 0]' : 0.187254}
{'[1, 5, 5, 0, 0, 0, 0, 1, 2, 29, 3, 0, 0, 1, 1, 1, 0, 0]' : 0.194098}
{'[1, 5, 5, 0, 0, 0, 0, 1, 2, 29, 3, 0, 0, 1, 1, 1, 0, 0]' : 0.194137}
{'[1, 5, 5, 0, 0, 0, 0, 1, 2, 29, 3, 0, 0, 1, 1, 1, 0, 0]' : 0.194089}
{'[1, 5, 5, 0, 0, 0, 0, 1, 2, 29, 3, 0, 0, 1, 1, 1, 0, 0]' : 0.194097}
{'[1, 5, 5, 0, 0, 0, 0, 1, 2, 29, 3, 0, 0, 1, 1, 1, 0, 0]' : 0.194091}
{'[1, 5, 5, 0, 0, 0, 0, 1, 2, 29, 3, 0, 0, 1, 1, 1, 0, 0]' : 0.194114}
{'[1, 5, 5, 0, 0, 0, 0, 1, 2, 29, 3, 0, 0, 1, 1, 1, 0, 0]' : 0.194234}
{'[1, 5, 5, 0, 0, 0, 0, 1, 2, 29, 3, 0, 0, 1, 1, 1, 0, 0]' : 0.194136}
{'[1, 5, 5, 0, 0, 0, 0, 1, 2, 29, 3, 0, 0, 1, 1, 1, 0, 0]' : 0.194072}
{'[1, 5, 5, 0, 0, 0, 0, 1, 2, 29, 3, 0, 0, 1, 1, 1, 0, 0]' : 0.194533}
{'[1, 5, 5, 0, 0, 0, 0, 1, 2, 29, 3, 0, 0, 1, 1, 1, 0, 0]' : 0.188671}
{'[1, 5, 5, 0, 0, 0, 0, 1, 2, 29, 3, 0, 0, 1, 1, 1, 0, 0]' : 0.187707}
{'[1, 5, 5, 0, 0, 0, 0, 1, 2, 29, 3, 0, 0, 1, 1, 1, 0, 0]' : 0.189082}
{'[1, 5, 5, 0, 0, 0, 0, 1, 2, 29, 3, 0, 0, 1, 1, 1, 0, 0]' : 0.194102}
{'[1, 5, 5, 0, 0, 0, 0, 1, 2, 29, 3, 0, 0, 1, 1, 1, 0, 0]' : 0.194097}
{'[1, 5, 5, 0, 0, 0, 0, 1, 2, 29, 3, 0, 0, 1, 1, 1, 0, 0]' : 0.19414}
{'[1, 5, 5, 0, 0, 0, 0, 1, 2, 29, 3, 0, 0, 1, 1, 1, 0, 0]' : 0.194126}
{'[1, 5, 5, 0, 0, 0, 0, 1, 2, 29, 3, 0, 0, 1, 1, 1, 0, 0]' : 0.194437}

out:
 ["{'[1, 5, 5, 0, 0, 0, 0, 1, 2, 29, 3, 0, 0, 1, 1, 1, 0, 0]' : 0.218769}", "{'[1, 5, 5, 0, 0, 0, 0, 1, 2, 29, 3, 0, 0, 1, 1, 1, 0, 0]' : 0.216289}", "{'[1, 5, 5, 0, 0, 0, 0, 1, 2, 29, 3, 0, 0, 1, 1, 1, 0, 0]' : 0.194118}", "{'[1, 5, 5, 0, 0, 0, 0, 1, 2, 29, 3, 0, 0, 1, 1, 1, 0, 0]' : 0.194148}", "{'[1, 5, 5, 0, 0, 0, 0, 1, 2, 29, 3, 0, 0, 1, 1, 1, 0, 0]' : 0.19413}", "{'[1, 5, 5, 0, 0, 0, 0, 1, 2, 29, 3, 0, 0, 1, 1, 1, 0, 0]' : 0.194612}", "{'[1, 5, 5, 0, 0, 0, 0, 1, 2, 29, 3, 0, 0, 1, 1, 1, 0, 0]' : 0.191386}", "{'[1, 5, 5, 0, 0, 0, 0, 1, 2, 29, 3, 0, 0, 1, 1, 1, 0, 0]' : 0.188536}", "{'[1, 5, 5, 0, 0, 0, 0, 1, 2, 29, 3, 0, 0, 1, 1, 1, 0, 0]' : 0.194496}", "{'[1, 5, 5, 0, 0, 0, 0, 1, 2, 29, 3, 0, 0, 1, 1, 1, 0, 0]' : 0.188832}", "{'[1, 5, 5, 0, 0, 0, 0, 1, 2, 29, 3, 0, 0, 1, 1, 1, 0, 0]' : 0.187686}", "{'[1, 5, 5, 0, 0, 0, 0, 1, 2, 29, 3, 0, 0, 1, 1, 1, 0, 0]' : 0.187254}", "{'[1, 5, 5, 0, 0, 0, 0, 1, 2, 29, 3, 0, 0, 1, 1, 1, 0, 0]' : 0.194098}", "{'[1, 5, 5, 0, 0, 0, 0, 1, 2, 29, 3, 0, 0, 1, 1, 1, 0, 0]' : 0.194137}", "{'[1, 5, 5, 0, 0, 0, 0, 1, 2, 29, 3, 0, 0, 1, 1, 1, 0, 0]' : 0.194089}", "{'[1, 5, 5, 0, 0, 0, 0, 1, 2, 29, 3, 0, 0, 1, 1, 1, 0, 0]' : 0.194097}", "{'[1, 5, 5, 0, 0, 0, 0, 1, 2, 29, 3, 0, 0, 1, 1, 1, 0, 0]' : 0.194091}", "{'[1, 5, 5, 0, 0, 0, 0, 1, 2, 29, 3, 0, 0, 1, 1, 1, 0, 0]' : 0.194114}", "{'[1, 5, 5, 0, 0, 0, 0, 1, 2, 29, 3, 0, 0, 1, 1, 1, 0, 0]' : 0.194234}", "{'[1, 5, 5, 0, 0, 0, 0, 1, 2, 29, 3, 0, 0, 1, 1, 1, 0, 0]' : 0.194136}", "{'[1, 5, 5, 0, 0, 0, 0, 1, 2, 29, 3, 0, 0, 1, 1, 1, 0, 0]' : 0.194072}", "{'[1, 5, 5, 0, 0, 0, 0, 1, 2, 29, 3, 0, 0, 1, 1, 1, 0, 0]' : 0.194533}", "{'[1, 5, 5, 0, 0, 0, 0, 1, 2, 29, 3, 0, 0, 1, 1, 1, 0, 0]' : 0.188671}", "{'[1, 5, 5, 0, 0, 0, 0, 1, 2, 29, 3, 0, 0, 1, 1, 1, 0, 0]' : 0.187707}", "{'[1, 5, 5, 0, 0, 0, 0, 1, 2, 29, 3, 0, 0, 1, 1, 1, 0, 0]' : 0.189082}", "{'[1, 5, 5, 0, 0, 0, 0, 1, 2, 29, 3, 0, 0, 1, 1, 1, 0, 0]' : 0.194102}", "{'[1, 5, 5, 0, 0, 0, 0, 1, 2, 29, 3, 0, 0, 1, 1, 1, 0, 0]' : 0.194097}", "{'[1, 5, 5, 0, 0, 0, 0, 1, 2, 29, 3, 0, 0, 1, 1, 1, 0, 0]' : 0.19414}", "{'[1, 5, 5, 0, 0, 0, 0, 1, 2, 29, 3, 0, 0, 1, 1, 1, 0, 0]' : 0.194126}", "{'[1, 5, 5, 0, 0, 0, 0, 1, 2, 29, 3, 0, 0, 1, 1, 1, 0, 0]' : 0.194437}"]
returning from 'run': {'[1, 5, 5, 0, 0, 0, 0, 1, 2, 29, 3, 0, 0, 1, 1, 1, 0, 0]': ([0.218769, 0.216289, 0.194118, 0.194148, 0.19413, 0.194612, 0.191386, 0.188536, 0.194496, 0.188832, 0.187686, 0.187254, 0.194098, 0.194137, 0.194089, 0.194097, 0.194091, 0.194114, 0.194234, 0.194136, 0.194072, 0.194533, 0.188671, 0.187707, 0.189082, 0.194102, 0.194097, 0.19414, 0.194126, 0.194437], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 5, 5, 0, 0, 0, 0, 1, 2, 29, 3, 0, 0, 1, 1, 1, 0, 0]': ([0.218769, 0.216289, 0.194118, 0.194148, 0.19413, 0.194612, 0.191386, 0.188536, 0.194496, 0.188832, 0.187686, 0.187254, 0.194098, 0.194137, 0.194089, 0.194097, 0.194091, 0.194114, 0.194234, 0.194136, 0.194072, 0.194533, 0.188671, 0.187707, 0.189082, 0.194102, 0.194097, 0.19414, 0.194126, 0.194437], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	6
        Additions: 		2595
        Multiplications: 	810
        Divisions: 		0
        Logical: 		0
        Reads: 			4246
        Writes: 		468
        Comparisons:		22
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest58.exe __orio_perftest58.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest58.exe  
Program Test Output: 
{'[2, 5, 2, 2, 6, 0, 0, 0, 15, 0, 26, 7, 1, 1, 0, 0, 0, 0]' : 0.109833}
{'[2, 5, 2, 2, 6, 0, 0, 0, 15, 0, 26, 7, 1, 1, 0, 0, 0, 0]' : 0.109615}
{'[2, 5, 2, 2, 6, 0, 0, 0, 15, 0, 26, 7, 1, 1, 0, 0, 0, 0]' : 0.109243}
{'[2, 5, 2, 2, 6, 0, 0, 0, 15, 0, 26, 7, 1, 1, 0, 0, 0, 0]' : 0.109408}
{'[2, 5, 2, 2, 6, 0, 0, 0, 15, 0, 26, 7, 1, 1, 0, 0, 0, 0]' : 0.109449}
{'[2, 5, 2, 2, 6, 0, 0, 0, 15, 0, 26, 7, 1, 1, 0, 0, 0, 0]' : 0.109337}
{'[2, 5, 2, 2, 6, 0, 0, 0, 15, 0, 26, 7, 1, 1, 0, 0, 0, 0]' : 0.109013}
{'[2, 5, 2, 2, 6, 0, 0, 0, 15, 0, 26, 7, 1, 1, 0, 0, 0, 0]' : 0.109217}
{'[2, 5, 2, 2, 6, 0, 0, 0, 15, 0, 26, 7, 1, 1, 0, 0, 0, 0]' : 0.109578}
{'[2, 5, 2, 2, 6, 0, 0, 0, 15, 0, 26, 7, 1, 1, 0, 0, 0, 0]' : 0.109314}
{'[2, 5, 2, 2, 6, 0, 0, 0, 15, 0, 26, 7, 1, 1, 0, 0, 0, 0]' : 0.109186}
{'[2, 5, 2, 2, 6, 0, 0, 0, 15, 0, 26, 7, 1, 1, 0, 0, 0, 0]' : 0.109503}
{'[2, 5, 2, 2, 6, 0, 0, 0, 15, 0, 26, 7, 1, 1, 0, 0, 0, 0]' : 0.109623}
{'[2, 5, 2, 2, 6, 0, 0, 0, 15, 0, 26, 7, 1, 1, 0, 0, 0, 0]' : 0.109237}
{'[2, 5, 2, 2, 6, 0, 0, 0, 15, 0, 26, 7, 1, 1, 0, 0, 0, 0]' : 0.109051}
{'[2, 5, 2, 2, 6, 0, 0, 0, 15, 0, 26, 7, 1, 1, 0, 0, 0, 0]' : 0.109272}
{'[2, 5, 2, 2, 6, 0, 0, 0, 15, 0, 26, 7, 1, 1, 0, 0, 0, 0]' : 0.109487}
{'[2, 5, 2, 2, 6, 0, 0, 0, 15, 0, 26, 7, 1, 1, 0, 0, 0, 0]' : 0.109547}
{'[2, 5, 2, 2, 6, 0, 0, 0, 15, 0, 26, 7, 1, 1, 0, 0, 0, 0]' : 0.108977}
{'[2, 5, 2, 2, 6, 0, 0, 0, 15, 0, 26, 7, 1, 1, 0, 0, 0, 0]' : 0.109309}
{'[2, 5, 2, 2, 6, 0, 0, 0, 15, 0, 26, 7, 1, 1, 0, 0, 0, 0]' : 0.109653}
{'[2, 5, 2, 2, 6, 0, 0, 0, 15, 0, 26, 7, 1, 1, 0, 0, 0, 0]' : 0.109355}
{'[2, 5, 2, 2, 6, 0, 0, 0, 15, 0, 26, 7, 1, 1, 0, 0, 0, 0]' : 0.109036}
{'[2, 5, 2, 2, 6, 0, 0, 0, 15, 0, 26, 7, 1, 1, 0, 0, 0, 0]' : 0.109319}
{'[2, 5, 2, 2, 6, 0, 0, 0, 15, 0, 26, 7, 1, 1, 0, 0, 0, 0]' : 0.109449}
{'[2, 5, 2, 2, 6, 0, 0, 0, 15, 0, 26, 7, 1, 1, 0, 0, 0, 0]' : 0.109304}
{'[2, 5, 2, 2, 6, 0, 0, 0, 15, 0, 26, 7, 1, 1, 0, 0, 0, 0]' : 0.109294}
{'[2, 5, 2, 2, 6, 0, 0, 0, 15, 0, 26, 7, 1, 1, 0, 0, 0, 0]' : 0.109441}
{'[2, 5, 2, 2, 6, 0, 0, 0, 15, 0, 26, 7, 1, 1, 0, 0, 0, 0]' : 0.10953}
{'[2, 5, 2, 2, 6, 0, 0, 0, 15, 0, 26, 7, 1, 1, 0, 0, 0, 0]' : 0.109272}

out:
 ["{'[2, 5, 2, 2, 6, 0, 0, 0, 15, 0, 26, 7, 1, 1, 0, 0, 0, 0]' : 0.109833}", "{'[2, 5, 2, 2, 6, 0, 0, 0, 15, 0, 26, 7, 1, 1, 0, 0, 0, 0]' : 0.109615}", "{'[2, 5, 2, 2, 6, 0, 0, 0, 15, 0, 26, 7, 1, 1, 0, 0, 0, 0]' : 0.109243}", "{'[2, 5, 2, 2, 6, 0, 0, 0, 15, 0, 26, 7, 1, 1, 0, 0, 0, 0]' : 0.109408}", "{'[2, 5, 2, 2, 6, 0, 0, 0, 15, 0, 26, 7, 1, 1, 0, 0, 0, 0]' : 0.109449}", "{'[2, 5, 2, 2, 6, 0, 0, 0, 15, 0, 26, 7, 1, 1, 0, 0, 0, 0]' : 0.109337}", "{'[2, 5, 2, 2, 6, 0, 0, 0, 15, 0, 26, 7, 1, 1, 0, 0, 0, 0]' : 0.109013}", "{'[2, 5, 2, 2, 6, 0, 0, 0, 15, 0, 26, 7, 1, 1, 0, 0, 0, 0]' : 0.109217}", "{'[2, 5, 2, 2, 6, 0, 0, 0, 15, 0, 26, 7, 1, 1, 0, 0, 0, 0]' : 0.109578}", "{'[2, 5, 2, 2, 6, 0, 0, 0, 15, 0, 26, 7, 1, 1, 0, 0, 0, 0]' : 0.109314}", "{'[2, 5, 2, 2, 6, 0, 0, 0, 15, 0, 26, 7, 1, 1, 0, 0, 0, 0]' : 0.109186}", "{'[2, 5, 2, 2, 6, 0, 0, 0, 15, 0, 26, 7, 1, 1, 0, 0, 0, 0]' : 0.109503}", "{'[2, 5, 2, 2, 6, 0, 0, 0, 15, 0, 26, 7, 1, 1, 0, 0, 0, 0]' : 0.109623}", "{'[2, 5, 2, 2, 6, 0, 0, 0, 15, 0, 26, 7, 1, 1, 0, 0, 0, 0]' : 0.109237}", "{'[2, 5, 2, 2, 6, 0, 0, 0, 15, 0, 26, 7, 1, 1, 0, 0, 0, 0]' : 0.109051}", "{'[2, 5, 2, 2, 6, 0, 0, 0, 15, 0, 26, 7, 1, 1, 0, 0, 0, 0]' : 0.109272}", "{'[2, 5, 2, 2, 6, 0, 0, 0, 15, 0, 26, 7, 1, 1, 0, 0, 0, 0]' : 0.109487}", "{'[2, 5, 2, 2, 6, 0, 0, 0, 15, 0, 26, 7, 1, 1, 0, 0, 0, 0]' : 0.109547}", "{'[2, 5, 2, 2, 6, 0, 0, 0, 15, 0, 26, 7, 1, 1, 0, 0, 0, 0]' : 0.108977}", "{'[2, 5, 2, 2, 6, 0, 0, 0, 15, 0, 26, 7, 1, 1, 0, 0, 0, 0]' : 0.109309}", "{'[2, 5, 2, 2, 6, 0, 0, 0, 15, 0, 26, 7, 1, 1, 0, 0, 0, 0]' : 0.109653}", "{'[2, 5, 2, 2, 6, 0, 0, 0, 15, 0, 26, 7, 1, 1, 0, 0, 0, 0]' : 0.109355}", "{'[2, 5, 2, 2, 6, 0, 0, 0, 15, 0, 26, 7, 1, 1, 0, 0, 0, 0]' : 0.109036}", "{'[2, 5, 2, 2, 6, 0, 0, 0, 15, 0, 26, 7, 1, 1, 0, 0, 0, 0]' : 0.109319}", "{'[2, 5, 2, 2, 6, 0, 0, 0, 15, 0, 26, 7, 1, 1, 0, 0, 0, 0]' : 0.109449}", "{'[2, 5, 2, 2, 6, 0, 0, 0, 15, 0, 26, 7, 1, 1, 0, 0, 0, 0]' : 0.109304}", "{'[2, 5, 2, 2, 6, 0, 0, 0, 15, 0, 26, 7, 1, 1, 0, 0, 0, 0]' : 0.109294}", "{'[2, 5, 2, 2, 6, 0, 0, 0, 15, 0, 26, 7, 1, 1, 0, 0, 0, 0]' : 0.109441}", "{'[2, 5, 2, 2, 6, 0, 0, 0, 15, 0, 26, 7, 1, 1, 0, 0, 0, 0]' : 0.10953}", "{'[2, 5, 2, 2, 6, 0, 0, 0, 15, 0, 26, 7, 1, 1, 0, 0, 0, 0]' : 0.109272}"]
returning from 'run': {'[2, 5, 2, 2, 6, 0, 0, 0, 15, 0, 26, 7, 1, 1, 0, 0, 0, 0]': ([0.109833, 0.109615, 0.109243, 0.109408, 0.109449, 0.109337, 0.109013, 0.109217, 0.109578, 0.109314, 0.109186, 0.109503, 0.109623, 0.109237, 0.109051, 0.109272, 0.109487, 0.109547, 0.108977, 0.109309, 0.109653, 0.109355, 0.109036, 0.109319, 0.109449, 0.109304, 0.109294, 0.109441, 0.10953, 0.109272], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 5, 2, 2, 6, 0, 0, 0, 15, 0, 26, 7, 1, 1, 0, 0, 0, 0]': ([0.109833, 0.109615, 0.109243, 0.109408, 0.109449, 0.109337, 0.109013, 0.109217, 0.109578, 0.109314, 0.109186, 0.109503, 0.109623, 0.109237, 0.109051, 0.109272, 0.109487, 0.109547, 0.108977, 0.109309, 0.109653, 0.109355, 0.109036, 0.109319, 0.109449, 0.109304, 0.109294, 0.109441, 0.10953, 0.109272], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	61
        Max loop nest depth: 	6
        Additions: 		6549
        Multiplications: 	1892
        Divisions: 		0
        Logical: 		0
        Reads: 			10013
        Writes: 		1091
        Comparisons:		61
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest59.exe __orio_perftest59.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest59.exe  
Program Test Output: 
{'[1, 5, 0, 2, 6, 2, 0, 0, 0, 20, 24, 0, 0, 1, 1, 0, 0, 0]' : 0.196608}
{'[1, 5, 0, 2, 6, 2, 0, 0, 0, 20, 24, 0, 0, 1, 1, 0, 0, 0]' : 0.196105}
{'[1, 5, 0, 2, 6, 2, 0, 0, 0, 20, 24, 0, 0, 1, 1, 0, 0, 0]' : 0.196105}
{'[1, 5, 0, 2, 6, 2, 0, 0, 0, 20, 24, 0, 0, 1, 1, 0, 0, 0]' : 0.196193}
{'[1, 5, 0, 2, 6, 2, 0, 0, 0, 20, 24, 0, 0, 1, 1, 0, 0, 0]' : 0.196065}
{'[1, 5, 0, 2, 6, 2, 0, 0, 0, 20, 24, 0, 0, 1, 1, 0, 0, 0]' : 0.196103}
{'[1, 5, 0, 2, 6, 2, 0, 0, 0, 20, 24, 0, 0, 1, 1, 0, 0, 0]' : 0.196166}
{'[1, 5, 0, 2, 6, 2, 0, 0, 0, 20, 24, 0, 0, 1, 1, 0, 0, 0]' : 0.196046}
{'[1, 5, 0, 2, 6, 2, 0, 0, 0, 20, 24, 0, 0, 1, 1, 0, 0, 0]' : 0.195913}
{'[1, 5, 0, 2, 6, 2, 0, 0, 0, 20, 24, 0, 0, 1, 1, 0, 0, 0]' : 0.196028}
{'[1, 5, 0, 2, 6, 2, 0, 0, 0, 20, 24, 0, 0, 1, 1, 0, 0, 0]' : 0.196108}
{'[1, 5, 0, 2, 6, 2, 0, 0, 0, 20, 24, 0, 0, 1, 1, 0, 0, 0]' : 0.196435}
{'[1, 5, 0, 2, 6, 2, 0, 0, 0, 20, 24, 0, 0, 1, 1, 0, 0, 0]' : 0.196102}
{'[1, 5, 0, 2, 6, 2, 0, 0, 0, 20, 24, 0, 0, 1, 1, 0, 0, 0]' : 0.19598}
{'[1, 5, 0, 2, 6, 2, 0, 0, 0, 20, 24, 0, 0, 1, 1, 0, 0, 0]' : 0.196248}
{'[1, 5, 0, 2, 6, 2, 0, 0, 0, 20, 24, 0, 0, 1, 1, 0, 0, 0]' : 0.196058}
{'[1, 5, 0, 2, 6, 2, 0, 0, 0, 20, 24, 0, 0, 1, 1, 0, 0, 0]' : 0.19605}
{'[1, 5, 0, 2, 6, 2, 0, 0, 0, 20, 24, 0, 0, 1, 1, 0, 0, 0]' : 0.196474}
{'[1, 5, 0, 2, 6, 2, 0, 0, 0, 20, 24, 0, 0, 1, 1, 0, 0, 0]' : 0.196146}
{'[1, 5, 0, 2, 6, 2, 0, 0, 0, 20, 24, 0, 0, 1, 1, 0, 0, 0]' : 0.195978}
{'[1, 5, 0, 2, 6, 2, 0, 0, 0, 20, 24, 0, 0, 1, 1, 0, 0, 0]' : 0.195919}
{'[1, 5, 0, 2, 6, 2, 0, 0, 0, 20, 24, 0, 0, 1, 1, 0, 0, 0]' : 0.196086}
{'[1, 5, 0, 2, 6, 2, 0, 0, 0, 20, 24, 0, 0, 1, 1, 0, 0, 0]' : 0.196183}
{'[1, 5, 0, 2, 6, 2, 0, 0, 0, 20, 24, 0, 0, 1, 1, 0, 0, 0]' : 0.200049}
{'[1, 5, 0, 2, 6, 2, 0, 0, 0, 20, 24, 0, 0, 1, 1, 0, 0, 0]' : 0.201725}
{'[1, 5, 0, 2, 6, 2, 0, 0, 0, 20, 24, 0, 0, 1, 1, 0, 0, 0]' : 0.20185}
{'[1, 5, 0, 2, 6, 2, 0, 0, 0, 20, 24, 0, 0, 1, 1, 0, 0, 0]' : 0.201733}
{'[1, 5, 0, 2, 6, 2, 0, 0, 0, 20, 24, 0, 0, 1, 1, 0, 0, 0]' : 0.201648}
{'[1, 5, 0, 2, 6, 2, 0, 0, 0, 20, 24, 0, 0, 1, 1, 0, 0, 0]' : 0.202002}
{'[1, 5, 0, 2, 6, 2, 0, 0, 0, 20, 24, 0, 0, 1, 1, 0, 0, 0]' : 0.201714}

out:
 ["{'[1, 5, 0, 2, 6, 2, 0, 0, 0, 20, 24, 0, 0, 1, 1, 0, 0, 0]' : 0.196608}", "{'[1, 5, 0, 2, 6, 2, 0, 0, 0, 20, 24, 0, 0, 1, 1, 0, 0, 0]' : 0.196105}", "{'[1, 5, 0, 2, 6, 2, 0, 0, 0, 20, 24, 0, 0, 1, 1, 0, 0, 0]' : 0.196105}", "{'[1, 5, 0, 2, 6, 2, 0, 0, 0, 20, 24, 0, 0, 1, 1, 0, 0, 0]' : 0.196193}", "{'[1, 5, 0, 2, 6, 2, 0, 0, 0, 20, 24, 0, 0, 1, 1, 0, 0, 0]' : 0.196065}", "{'[1, 5, 0, 2, 6, 2, 0, 0, 0, 20, 24, 0, 0, 1, 1, 0, 0, 0]' : 0.196103}", "{'[1, 5, 0, 2, 6, 2, 0, 0, 0, 20, 24, 0, 0, 1, 1, 0, 0, 0]' : 0.196166}", "{'[1, 5, 0, 2, 6, 2, 0, 0, 0, 20, 24, 0, 0, 1, 1, 0, 0, 0]' : 0.196046}", "{'[1, 5, 0, 2, 6, 2, 0, 0, 0, 20, 24, 0, 0, 1, 1, 0, 0, 0]' : 0.195913}", "{'[1, 5, 0, 2, 6, 2, 0, 0, 0, 20, 24, 0, 0, 1, 1, 0, 0, 0]' : 0.196028}", "{'[1, 5, 0, 2, 6, 2, 0, 0, 0, 20, 24, 0, 0, 1, 1, 0, 0, 0]' : 0.196108}", "{'[1, 5, 0, 2, 6, 2, 0, 0, 0, 20, 24, 0, 0, 1, 1, 0, 0, 0]' : 0.196435}", "{'[1, 5, 0, 2, 6, 2, 0, 0, 0, 20, 24, 0, 0, 1, 1, 0, 0, 0]' : 0.196102}", "{'[1, 5, 0, 2, 6, 2, 0, 0, 0, 20, 24, 0, 0, 1, 1, 0, 0, 0]' : 0.19598}", "{'[1, 5, 0, 2, 6, 2, 0, 0, 0, 20, 24, 0, 0, 1, 1, 0, 0, 0]' : 0.196248}", "{'[1, 5, 0, 2, 6, 2, 0, 0, 0, 20, 24, 0, 0, 1, 1, 0, 0, 0]' : 0.196058}", "{'[1, 5, 0, 2, 6, 2, 0, 0, 0, 20, 24, 0, 0, 1, 1, 0, 0, 0]' : 0.19605}", "{'[1, 5, 0, 2, 6, 2, 0, 0, 0, 20, 24, 0, 0, 1, 1, 0, 0, 0]' : 0.196474}", "{'[1, 5, 0, 2, 6, 2, 0, 0, 0, 20, 24, 0, 0, 1, 1, 0, 0, 0]' : 0.196146}", "{'[1, 5, 0, 2, 6, 2, 0, 0, 0, 20, 24, 0, 0, 1, 1, 0, 0, 0]' : 0.195978}", "{'[1, 5, 0, 2, 6, 2, 0, 0, 0, 20, 24, 0, 0, 1, 1, 0, 0, 0]' : 0.195919}", "{'[1, 5, 0, 2, 6, 2, 0, 0, 0, 20, 24, 0, 0, 1, 1, 0, 0, 0]' : 0.196086}", "{'[1, 5, 0, 2, 6, 2, 0, 0, 0, 20, 24, 0, 0, 1, 1, 0, 0, 0]' : 0.196183}", "{'[1, 5, 0, 2, 6, 2, 0, 0, 0, 20, 24, 0, 0, 1, 1, 0, 0, 0]' : 0.200049}", "{'[1, 5, 0, 2, 6, 2, 0, 0, 0, 20, 24, 0, 0, 1, 1, 0, 0, 0]' : 0.201725}", "{'[1, 5, 0, 2, 6, 2, 0, 0, 0, 20, 24, 0, 0, 1, 1, 0, 0, 0]' : 0.20185}", "{'[1, 5, 0, 2, 6, 2, 0, 0, 0, 20, 24, 0, 0, 1, 1, 0, 0, 0]' : 0.201733}", "{'[1, 5, 0, 2, 6, 2, 0, 0, 0, 20, 24, 0, 0, 1, 1, 0, 0, 0]' : 0.201648}", "{'[1, 5, 0, 2, 6, 2, 0, 0, 0, 20, 24, 0, 0, 1, 1, 0, 0, 0]' : 0.202002}", "{'[1, 5, 0, 2, 6, 2, 0, 0, 0, 20, 24, 0, 0, 1, 1, 0, 0, 0]' : 0.201714}"]
returning from 'run': {'[1, 5, 0, 2, 6, 2, 0, 0, 0, 20, 24, 0, 0, 1, 1, 0, 0, 0]': ([0.196608, 0.196105, 0.196105, 0.196193, 0.196065, 0.196103, 0.196166, 0.196046, 0.195913, 0.196028, 0.196108, 0.196435, 0.196102, 0.19598, 0.196248, 0.196058, 0.19605, 0.196474, 0.196146, 0.195978, 0.195919, 0.196086, 0.196183, 0.200049, 0.201725, 0.20185, 0.201733, 0.201648, 0.202002, 0.201714], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 5, 0, 2, 6, 2, 0, 0, 0, 20, 24, 0, 0, 1, 1, 0, 0, 0]': ([0.196608, 0.196105, 0.196105, 0.196193, 0.196065, 0.196103, 0.196166, 0.196046, 0.195913, 0.196028, 0.196108, 0.196435, 0.196102, 0.19598, 0.196248, 0.196058, 0.19605, 0.196474, 0.196146, 0.195978, 0.195919, 0.196086, 0.196183, 0.200049, 0.201725, 0.20185, 0.201733, 0.201648, 0.202002, 0.201714], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	6
        Additions: 		2392
        Multiplications: 	702
        Divisions: 		0
        Logical: 		0
        Reads: 			3794
        Writes: 		426
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest60.exe __orio_perftest60.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest60.exe  
Program Test Output: 
{'[6, 5, 2, 6, 6, 0, 1, 0, 26, 0, 3, 29, 1, 1, 0, 0, 1, 0]' : 0.141216}
{'[6, 5, 2, 6, 6, 0, 1, 0, 26, 0, 3, 29, 1, 1, 0, 0, 1, 0]' : 0.140731}
{'[6, 5, 2, 6, 6, 0, 1, 0, 26, 0, 3, 29, 1, 1, 0, 0, 1, 0]' : 0.140508}
{'[6, 5, 2, 6, 6, 0, 1, 0, 26, 0, 3, 29, 1, 1, 0, 0, 1, 0]' : 0.139354}
{'[6, 5, 2, 6, 6, 0, 1, 0, 26, 0, 3, 29, 1, 1, 0, 0, 1, 0]' : 0.120793}
{'[6, 5, 2, 6, 6, 0, 1, 0, 26, 0, 3, 29, 1, 1, 0, 0, 1, 0]' : 0.119285}
{'[6, 5, 2, 6, 6, 0, 1, 0, 26, 0, 3, 29, 1, 1, 0, 0, 1, 0]' : 0.119416}
{'[6, 5, 2, 6, 6, 0, 1, 0, 26, 0, 3, 29, 1, 1, 0, 0, 1, 0]' : 0.119236}
{'[6, 5, 2, 6, 6, 0, 1, 0, 26, 0, 3, 29, 1, 1, 0, 0, 1, 0]' : 0.119178}
{'[6, 5, 2, 6, 6, 0, 1, 0, 26, 0, 3, 29, 1, 1, 0, 0, 1, 0]' : 0.119426}
{'[6, 5, 2, 6, 6, 0, 1, 0, 26, 0, 3, 29, 1, 1, 0, 0, 1, 0]' : 0.119428}
{'[6, 5, 2, 6, 6, 0, 1, 0, 26, 0, 3, 29, 1, 1, 0, 0, 1, 0]' : 0.119903}
{'[6, 5, 2, 6, 6, 0, 1, 0, 26, 0, 3, 29, 1, 1, 0, 0, 1, 0]' : 0.119522}
{'[6, 5, 2, 6, 6, 0, 1, 0, 26, 0, 3, 29, 1, 1, 0, 0, 1, 0]' : 0.119318}
{'[6, 5, 2, 6, 6, 0, 1, 0, 26, 0, 3, 29, 1, 1, 0, 0, 1, 0]' : 0.119354}
{'[6, 5, 2, 6, 6, 0, 1, 0, 26, 0, 3, 29, 1, 1, 0, 0, 1, 0]' : 0.119304}
{'[6, 5, 2, 6, 6, 0, 1, 0, 26, 0, 3, 29, 1, 1, 0, 0, 1, 0]' : 0.119267}
{'[6, 5, 2, 6, 6, 0, 1, 0, 26, 0, 3, 29, 1, 1, 0, 0, 1, 0]' : 0.119242}
{'[6, 5, 2, 6, 6, 0, 1, 0, 26, 0, 3, 29, 1, 1, 0, 0, 1, 0]' : 0.119137}
{'[6, 5, 2, 6, 6, 0, 1, 0, 26, 0, 3, 29, 1, 1, 0, 0, 1, 0]' : 0.119689}
{'[6, 5, 2, 6, 6, 0, 1, 0, 26, 0, 3, 29, 1, 1, 0, 0, 1, 0]' : 0.119586}
{'[6, 5, 2, 6, 6, 0, 1, 0, 26, 0, 3, 29, 1, 1, 0, 0, 1, 0]' : 0.119216}
{'[6, 5, 2, 6, 6, 0, 1, 0, 26, 0, 3, 29, 1, 1, 0, 0, 1, 0]' : 0.119448}
{'[6, 5, 2, 6, 6, 0, 1, 0, 26, 0, 3, 29, 1, 1, 0, 0, 1, 0]' : 0.119289}
{'[6, 5, 2, 6, 6, 0, 1, 0, 26, 0, 3, 29, 1, 1, 0, 0, 1, 0]' : 0.119263}
{'[6, 5, 2, 6, 6, 0, 1, 0, 26, 0, 3, 29, 1, 1, 0, 0, 1, 0]' : 0.119281}
{'[6, 5, 2, 6, 6, 0, 1, 0, 26, 0, 3, 29, 1, 1, 0, 0, 1, 0]' : 0.119309}
{'[6, 5, 2, 6, 6, 0, 1, 0, 26, 0, 3, 29, 1, 1, 0, 0, 1, 0]' : 0.11933}
{'[6, 5, 2, 6, 6, 0, 1, 0, 26, 0, 3, 29, 1, 1, 0, 0, 1, 0]' : 0.119404}
{'[6, 5, 2, 6, 6, 0, 1, 0, 26, 0, 3, 29, 1, 1, 0, 0, 1, 0]' : 0.119462}

out:
 ["{'[6, 5, 2, 6, 6, 0, 1, 0, 26, 0, 3, 29, 1, 1, 0, 0, 1, 0]' : 0.141216}", "{'[6, 5, 2, 6, 6, 0, 1, 0, 26, 0, 3, 29, 1, 1, 0, 0, 1, 0]' : 0.140731}", "{'[6, 5, 2, 6, 6, 0, 1, 0, 26, 0, 3, 29, 1, 1, 0, 0, 1, 0]' : 0.140508}", "{'[6, 5, 2, 6, 6, 0, 1, 0, 26, 0, 3, 29, 1, 1, 0, 0, 1, 0]' : 0.139354}", "{'[6, 5, 2, 6, 6, 0, 1, 0, 26, 0, 3, 29, 1, 1, 0, 0, 1, 0]' : 0.120793}", "{'[6, 5, 2, 6, 6, 0, 1, 0, 26, 0, 3, 29, 1, 1, 0, 0, 1, 0]' : 0.119285}", "{'[6, 5, 2, 6, 6, 0, 1, 0, 26, 0, 3, 29, 1, 1, 0, 0, 1, 0]' : 0.119416}", "{'[6, 5, 2, 6, 6, 0, 1, 0, 26, 0, 3, 29, 1, 1, 0, 0, 1, 0]' : 0.119236}", "{'[6, 5, 2, 6, 6, 0, 1, 0, 26, 0, 3, 29, 1, 1, 0, 0, 1, 0]' : 0.119178}", "{'[6, 5, 2, 6, 6, 0, 1, 0, 26, 0, 3, 29, 1, 1, 0, 0, 1, 0]' : 0.119426}", "{'[6, 5, 2, 6, 6, 0, 1, 0, 26, 0, 3, 29, 1, 1, 0, 0, 1, 0]' : 0.119428}", "{'[6, 5, 2, 6, 6, 0, 1, 0, 26, 0, 3, 29, 1, 1, 0, 0, 1, 0]' : 0.119903}", "{'[6, 5, 2, 6, 6, 0, 1, 0, 26, 0, 3, 29, 1, 1, 0, 0, 1, 0]' : 0.119522}", "{'[6, 5, 2, 6, 6, 0, 1, 0, 26, 0, 3, 29, 1, 1, 0, 0, 1, 0]' : 0.119318}", "{'[6, 5, 2, 6, 6, 0, 1, 0, 26, 0, 3, 29, 1, 1, 0, 0, 1, 0]' : 0.119354}", "{'[6, 5, 2, 6, 6, 0, 1, 0, 26, 0, 3, 29, 1, 1, 0, 0, 1, 0]' : 0.119304}", "{'[6, 5, 2, 6, 6, 0, 1, 0, 26, 0, 3, 29, 1, 1, 0, 0, 1, 0]' : 0.119267}", "{'[6, 5, 2, 6, 6, 0, 1, 0, 26, 0, 3, 29, 1, 1, 0, 0, 1, 0]' : 0.119242}", "{'[6, 5, 2, 6, 6, 0, 1, 0, 26, 0, 3, 29, 1, 1, 0, 0, 1, 0]' : 0.119137}", "{'[6, 5, 2, 6, 6, 0, 1, 0, 26, 0, 3, 29, 1, 1, 0, 0, 1, 0]' : 0.119689}", "{'[6, 5, 2, 6, 6, 0, 1, 0, 26, 0, 3, 29, 1, 1, 0, 0, 1, 0]' : 0.119586}", "{'[6, 5, 2, 6, 6, 0, 1, 0, 26, 0, 3, 29, 1, 1, 0, 0, 1, 0]' : 0.119216}", "{'[6, 5, 2, 6, 6, 0, 1, 0, 26, 0, 3, 29, 1, 1, 0, 0, 1, 0]' : 0.119448}", "{'[6, 5, 2, 6, 6, 0, 1, 0, 26, 0, 3, 29, 1, 1, 0, 0, 1, 0]' : 0.119289}", "{'[6, 5, 2, 6, 6, 0, 1, 0, 26, 0, 3, 29, 1, 1, 0, 0, 1, 0]' : 0.119263}", "{'[6, 5, 2, 6, 6, 0, 1, 0, 26, 0, 3, 29, 1, 1, 0, 0, 1, 0]' : 0.119281}", "{'[6, 5, 2, 6, 6, 0, 1, 0, 26, 0, 3, 29, 1, 1, 0, 0, 1, 0]' : 0.119309}", "{'[6, 5, 2, 6, 6, 0, 1, 0, 26, 0, 3, 29, 1, 1, 0, 0, 1, 0]' : 0.11933}", "{'[6, 5, 2, 6, 6, 0, 1, 0, 26, 0, 3, 29, 1, 1, 0, 0, 1, 0]' : 0.119404}", "{'[6, 5, 2, 6, 6, 0, 1, 0, 26, 0, 3, 29, 1, 1, 0, 0, 1, 0]' : 0.119462}"]
returning from 'run': {'[6, 5, 2, 6, 6, 0, 1, 0, 26, 0, 3, 29, 1, 1, 0, 0, 1, 0]': ([0.141216, 0.140731, 0.140508, 0.139354, 0.120793, 0.119285, 0.119416, 0.119236, 0.119178, 0.119426, 0.119428, 0.119903, 0.119522, 0.119318, 0.119354, 0.119304, 0.119267, 0.119242, 0.119137, 0.119689, 0.119586, 0.119216, 0.119448, 0.119289, 0.119263, 0.119281, 0.119309, 0.11933, 0.119404, 0.119462], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 5, 2, 6, 6, 0, 1, 0, 26, 0, 3, 29, 1, 1, 0, 0, 1, 0]': ([0.141216, 0.140731, 0.140508, 0.139354, 0.120793, 0.119285, 0.119416, 0.119236, 0.119178, 0.119426, 0.119428, 0.119903, 0.119522, 0.119318, 0.119354, 0.119304, 0.119267, 0.119242, 0.119137, 0.119689, 0.119586, 0.119216, 0.119448, 0.119289, 0.119263, 0.119281, 0.119309, 0.11933, 0.119404, 0.119462], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	17
        Max loop nest depth: 	4
        Additions: 		1254
        Multiplications: 	558
        Divisions: 		0
        Logical: 		0
        Reads: 			2532
        Writes: 		472
        Comparisons:		17
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest61.exe __orio_perftest61.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest61.exe  
Program Test Output: 
{'[0, 5, 6, 3, 0, 0, 1, 0, 27, 0, 27, 21, 1, 1, 0, 1, 0, 1]' : 0.100467}
{'[0, 5, 6, 3, 0, 0, 1, 0, 27, 0, 27, 21, 1, 1, 0, 1, 0, 1]' : 0.100434}
{'[0, 5, 6, 3, 0, 0, 1, 0, 27, 0, 27, 21, 1, 1, 0, 1, 0, 1]' : 0.10037}
{'[0, 5, 6, 3, 0, 0, 1, 0, 27, 0, 27, 21, 1, 1, 0, 1, 0, 1]' : 0.099926}
{'[0, 5, 6, 3, 0, 0, 1, 0, 27, 0, 27, 21, 1, 1, 0, 1, 0, 1]' : 0.0917251}
{'[0, 5, 6, 3, 0, 0, 1, 0, 27, 0, 27, 21, 1, 1, 0, 1, 0, 1]' : 0.0911741}
{'[0, 5, 6, 3, 0, 0, 1, 0, 27, 0, 27, 21, 1, 1, 0, 1, 0, 1]' : 0.0911582}
{'[0, 5, 6, 3, 0, 0, 1, 0, 27, 0, 27, 21, 1, 1, 0, 1, 0, 1]' : 0.0912552}
{'[0, 5, 6, 3, 0, 0, 1, 0, 27, 0, 27, 21, 1, 1, 0, 1, 0, 1]' : 0.0911369}
{'[0, 5, 6, 3, 0, 0, 1, 0, 27, 0, 27, 21, 1, 1, 0, 1, 0, 1]' : 0.0911589}
{'[0, 5, 6, 3, 0, 0, 1, 0, 27, 0, 27, 21, 1, 1, 0, 1, 0, 1]' : 0.0911469}
{'[0, 5, 6, 3, 0, 0, 1, 0, 27, 0, 27, 21, 1, 1, 0, 1, 0, 1]' : 0.091171}
{'[0, 5, 6, 3, 0, 0, 1, 0, 27, 0, 27, 21, 1, 1, 0, 1, 0, 1]' : 0.091218}
{'[0, 5, 6, 3, 0, 0, 1, 0, 27, 0, 27, 21, 1, 1, 0, 1, 0, 1]' : 0.0912361}
{'[0, 5, 6, 3, 0, 0, 1, 0, 27, 0, 27, 21, 1, 1, 0, 1, 0, 1]' : 0.09023}
{'[0, 5, 6, 3, 0, 0, 1, 0, 27, 0, 27, 21, 1, 1, 0, 1, 0, 1]' : 0.088943}
{'[0, 5, 6, 3, 0, 0, 1, 0, 27, 0, 27, 21, 1, 1, 0, 1, 0, 1]' : 0.088959}
{'[0, 5, 6, 3, 0, 0, 1, 0, 27, 0, 27, 21, 1, 1, 0, 1, 0, 1]' : 0.0889511}
{'[0, 5, 6, 3, 0, 0, 1, 0, 27, 0, 27, 21, 1, 1, 0, 1, 0, 1]' : 0.0893452}
{'[0, 5, 6, 3, 0, 0, 1, 0, 27, 0, 27, 21, 1, 1, 0, 1, 0, 1]' : 0.0912011}
{'[0, 5, 6, 3, 0, 0, 1, 0, 27, 0, 27, 21, 1, 1, 0, 1, 0, 1]' : 0.0911748}
{'[0, 5, 6, 3, 0, 0, 1, 0, 27, 0, 27, 21, 1, 1, 0, 1, 0, 1]' : 0.09113}
{'[0, 5, 6, 3, 0, 0, 1, 0, 27, 0, 27, 21, 1, 1, 0, 1, 0, 1]' : 0.09113}
{'[0, 5, 6, 3, 0, 0, 1, 0, 27, 0, 27, 21, 1, 1, 0, 1, 0, 1]' : 0.0902331}
{'[0, 5, 6, 3, 0, 0, 1, 0, 27, 0, 27, 21, 1, 1, 0, 1, 0, 1]' : 0.0896351}
{'[0, 5, 6, 3, 0, 0, 1, 0, 27, 0, 27, 21, 1, 1, 0, 1, 0, 1]' : 0.0910881}
{'[0, 5, 6, 3, 0, 0, 1, 0, 27, 0, 27, 21, 1, 1, 0, 1, 0, 1]' : 0.09126}
{'[0, 5, 6, 3, 0, 0, 1, 0, 27, 0, 27, 21, 1, 1, 0, 1, 0, 1]' : 0.0911698}
{'[0, 5, 6, 3, 0, 0, 1, 0, 27, 0, 27, 21, 1, 1, 0, 1, 0, 1]' : 0.0911629}
{'[0, 5, 6, 3, 0, 0, 1, 0, 27, 0, 27, 21, 1, 1, 0, 1, 0, 1]' : 0.091218}

out:
 ["{'[0, 5, 6, 3, 0, 0, 1, 0, 27, 0, 27, 21, 1, 1, 0, 1, 0, 1]' : 0.100467}", "{'[0, 5, 6, 3, 0, 0, 1, 0, 27, 0, 27, 21, 1, 1, 0, 1, 0, 1]' : 0.100434}", "{'[0, 5, 6, 3, 0, 0, 1, 0, 27, 0, 27, 21, 1, 1, 0, 1, 0, 1]' : 0.10037}", "{'[0, 5, 6, 3, 0, 0, 1, 0, 27, 0, 27, 21, 1, 1, 0, 1, 0, 1]' : 0.099926}", "{'[0, 5, 6, 3, 0, 0, 1, 0, 27, 0, 27, 21, 1, 1, 0, 1, 0, 1]' : 0.0917251}", "{'[0, 5, 6, 3, 0, 0, 1, 0, 27, 0, 27, 21, 1, 1, 0, 1, 0, 1]' : 0.0911741}", "{'[0, 5, 6, 3, 0, 0, 1, 0, 27, 0, 27, 21, 1, 1, 0, 1, 0, 1]' : 0.0911582}", "{'[0, 5, 6, 3, 0, 0, 1, 0, 27, 0, 27, 21, 1, 1, 0, 1, 0, 1]' : 0.0912552}", "{'[0, 5, 6, 3, 0, 0, 1, 0, 27, 0, 27, 21, 1, 1, 0, 1, 0, 1]' : 0.0911369}", "{'[0, 5, 6, 3, 0, 0, 1, 0, 27, 0, 27, 21, 1, 1, 0, 1, 0, 1]' : 0.0911589}", "{'[0, 5, 6, 3, 0, 0, 1, 0, 27, 0, 27, 21, 1, 1, 0, 1, 0, 1]' : 0.0911469}", "{'[0, 5, 6, 3, 0, 0, 1, 0, 27, 0, 27, 21, 1, 1, 0, 1, 0, 1]' : 0.091171}", "{'[0, 5, 6, 3, 0, 0, 1, 0, 27, 0, 27, 21, 1, 1, 0, 1, 0, 1]' : 0.091218}", "{'[0, 5, 6, 3, 0, 0, 1, 0, 27, 0, 27, 21, 1, 1, 0, 1, 0, 1]' : 0.0912361}", "{'[0, 5, 6, 3, 0, 0, 1, 0, 27, 0, 27, 21, 1, 1, 0, 1, 0, 1]' : 0.09023}", "{'[0, 5, 6, 3, 0, 0, 1, 0, 27, 0, 27, 21, 1, 1, 0, 1, 0, 1]' : 0.088943}", "{'[0, 5, 6, 3, 0, 0, 1, 0, 27, 0, 27, 21, 1, 1, 0, 1, 0, 1]' : 0.088959}", "{'[0, 5, 6, 3, 0, 0, 1, 0, 27, 0, 27, 21, 1, 1, 0, 1, 0, 1]' : 0.0889511}", "{'[0, 5, 6, 3, 0, 0, 1, 0, 27, 0, 27, 21, 1, 1, 0, 1, 0, 1]' : 0.0893452}", "{'[0, 5, 6, 3, 0, 0, 1, 0, 27, 0, 27, 21, 1, 1, 0, 1, 0, 1]' : 0.0912011}", "{'[0, 5, 6, 3, 0, 0, 1, 0, 27, 0, 27, 21, 1, 1, 0, 1, 0, 1]' : 0.0911748}", "{'[0, 5, 6, 3, 0, 0, 1, 0, 27, 0, 27, 21, 1, 1, 0, 1, 0, 1]' : 0.09113}", "{'[0, 5, 6, 3, 0, 0, 1, 0, 27, 0, 27, 21, 1, 1, 0, 1, 0, 1]' : 0.09113}", "{'[0, 5, 6, 3, 0, 0, 1, 0, 27, 0, 27, 21, 1, 1, 0, 1, 0, 1]' : 0.0902331}", "{'[0, 5, 6, 3, 0, 0, 1, 0, 27, 0, 27, 21, 1, 1, 0, 1, 0, 1]' : 0.0896351}", "{'[0, 5, 6, 3, 0, 0, 1, 0, 27, 0, 27, 21, 1, 1, 0, 1, 0, 1]' : 0.0910881}", "{'[0, 5, 6, 3, 0, 0, 1, 0, 27, 0, 27, 21, 1, 1, 0, 1, 0, 1]' : 0.09126}", "{'[0, 5, 6, 3, 0, 0, 1, 0, 27, 0, 27, 21, 1, 1, 0, 1, 0, 1]' : 0.0911698}", "{'[0, 5, 6, 3, 0, 0, 1, 0, 27, 0, 27, 21, 1, 1, 0, 1, 0, 1]' : 0.0911629}", "{'[0, 5, 6, 3, 0, 0, 1, 0, 27, 0, 27, 21, 1, 1, 0, 1, 0, 1]' : 0.091218}"]
returning from 'run': {'[0, 5, 6, 3, 0, 0, 1, 0, 27, 0, 27, 21, 1, 1, 0, 1, 0, 1]': ([0.100467, 0.100434, 0.10037, 0.099926, 0.0917251, 0.0911741, 0.0911582, 0.0912552, 0.0911369, 0.0911589, 0.0911469, 0.091171, 0.091218, 0.0912361, 0.09023, 0.088943, 0.088959, 0.0889511, 0.0893452, 0.0912011, 0.0911748, 0.09113, 0.09113, 0.0902331, 0.0896351, 0.0910881, 0.09126, 0.0911698, 0.0911629, 0.091218], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 5, 6, 3, 0, 0, 1, 0, 27, 0, 27, 21, 1, 1, 0, 1, 0, 1]': ([0.100467, 0.100434, 0.10037, 0.099926, 0.0917251, 0.0911741, 0.0911582, 0.0912552, 0.0911369, 0.0911589, 0.0911469, 0.091171, 0.091218, 0.0912361, 0.09023, 0.088943, 0.088959, 0.0889511, 0.0893452, 0.0912011, 0.0911748, 0.09113, 0.09113, 0.0902331, 0.0896351, 0.0910881, 0.09126, 0.0911698, 0.0911629, 0.091218], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	28
        Max loop nest depth: 	5
        Additions: 		325
        Multiplications: 	90
        Divisions: 		0
        Logical: 		0
        Reads: 			751
        Writes: 		166
        Comparisons:		28
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest62.exe __orio_perftest62.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest62.exe  
Program Test Output: 
{'[2, 5, 3, 1, 0, 0, 1, 1, 0, 3, 0, 11, 0, 0, 1, 1, 1, 0]' : 0.18218}
{'[2, 5, 3, 1, 0, 0, 1, 1, 0, 3, 0, 11, 0, 0, 1, 1, 1, 0]' : 0.174113}
{'[2, 5, 3, 1, 0, 0, 1, 1, 0, 3, 0, 11, 0, 0, 1, 1, 1, 0]' : 0.162622}
{'[2, 5, 3, 1, 0, 0, 1, 1, 0, 3, 0, 11, 0, 0, 1, 1, 1, 0]' : 0.157937}
{'[2, 5, 3, 1, 0, 0, 1, 1, 0, 3, 0, 11, 0, 0, 1, 1, 1, 0]' : 0.158098}
{'[2, 5, 3, 1, 0, 0, 1, 1, 0, 3, 0, 11, 0, 0, 1, 1, 1, 0]' : 0.158158}
{'[2, 5, 3, 1, 0, 0, 1, 1, 0, 3, 0, 11, 0, 0, 1, 1, 1, 0]' : 0.159618}
{'[2, 5, 3, 1, 0, 0, 1, 1, 0, 3, 0, 11, 0, 0, 1, 1, 1, 0]' : 0.162717}
{'[2, 5, 3, 1, 0, 0, 1, 1, 0, 3, 0, 11, 0, 0, 1, 1, 1, 0]' : 0.162868}
{'[2, 5, 3, 1, 0, 0, 1, 1, 0, 3, 0, 11, 0, 0, 1, 1, 1, 0]' : 0.162803}
{'[2, 5, 3, 1, 0, 0, 1, 1, 0, 3, 0, 11, 0, 0, 1, 1, 1, 0]' : 0.162709}
{'[2, 5, 3, 1, 0, 0, 1, 1, 0, 3, 0, 11, 0, 0, 1, 1, 1, 0]' : 0.162686}
{'[2, 5, 3, 1, 0, 0, 1, 1, 0, 3, 0, 11, 0, 0, 1, 1, 1, 0]' : 0.159832}
{'[2, 5, 3, 1, 0, 0, 1, 1, 0, 3, 0, 11, 0, 0, 1, 1, 1, 0]' : 0.158029}
{'[2, 5, 3, 1, 0, 0, 1, 1, 0, 3, 0, 11, 0, 0, 1, 1, 1, 0]' : 0.158265}
{'[2, 5, 3, 1, 0, 0, 1, 1, 0, 3, 0, 11, 0, 0, 1, 1, 1, 0]' : 0.157963}
{'[2, 5, 3, 1, 0, 0, 1, 1, 0, 3, 0, 11, 0, 0, 1, 1, 1, 0]' : 0.158449}
{'[2, 5, 3, 1, 0, 0, 1, 1, 0, 3, 0, 11, 0, 0, 1, 1, 1, 0]' : 0.156386}
{'[2, 5, 3, 1, 0, 0, 1, 1, 0, 3, 0, 11, 0, 0, 1, 1, 1, 0]' : 0.162756}
{'[2, 5, 3, 1, 0, 0, 1, 1, 0, 3, 0, 11, 0, 0, 1, 1, 1, 0]' : 0.161609}
{'[2, 5, 3, 1, 0, 0, 1, 1, 0, 3, 0, 11, 0, 0, 1, 1, 1, 0]' : 0.15798}
{'[2, 5, 3, 1, 0, 0, 1, 1, 0, 3, 0, 11, 0, 0, 1, 1, 1, 0]' : 0.162433}
{'[2, 5, 3, 1, 0, 0, 1, 1, 0, 3, 0, 11, 0, 0, 1, 1, 1, 0]' : 0.162696}
{'[2, 5, 3, 1, 0, 0, 1, 1, 0, 3, 0, 11, 0, 0, 1, 1, 1, 0]' : 0.161148}
{'[2, 5, 3, 1, 0, 0, 1, 1, 0, 3, 0, 11, 0, 0, 1, 1, 1, 0]' : 0.158005}
{'[2, 5, 3, 1, 0, 0, 1, 1, 0, 3, 0, 11, 0, 0, 1, 1, 1, 0]' : 0.157938}
{'[2, 5, 3, 1, 0, 0, 1, 1, 0, 3, 0, 11, 0, 0, 1, 1, 1, 0]' : 0.158824}
{'[2, 5, 3, 1, 0, 0, 1, 1, 0, 3, 0, 11, 0, 0, 1, 1, 1, 0]' : 0.161178}
{'[2, 5, 3, 1, 0, 0, 1, 1, 0, 3, 0, 11, 0, 0, 1, 1, 1, 0]' : 0.162691}
{'[2, 5, 3, 1, 0, 0, 1, 1, 0, 3, 0, 11, 0, 0, 1, 1, 1, 0]' : 0.162675}

out:
 ["{'[2, 5, 3, 1, 0, 0, 1, 1, 0, 3, 0, 11, 0, 0, 1, 1, 1, 0]' : 0.18218}", "{'[2, 5, 3, 1, 0, 0, 1, 1, 0, 3, 0, 11, 0, 0, 1, 1, 1, 0]' : 0.174113}", "{'[2, 5, 3, 1, 0, 0, 1, 1, 0, 3, 0, 11, 0, 0, 1, 1, 1, 0]' : 0.162622}", "{'[2, 5, 3, 1, 0, 0, 1, 1, 0, 3, 0, 11, 0, 0, 1, 1, 1, 0]' : 0.157937}", "{'[2, 5, 3, 1, 0, 0, 1, 1, 0, 3, 0, 11, 0, 0, 1, 1, 1, 0]' : 0.158098}", "{'[2, 5, 3, 1, 0, 0, 1, 1, 0, 3, 0, 11, 0, 0, 1, 1, 1, 0]' : 0.158158}", "{'[2, 5, 3, 1, 0, 0, 1, 1, 0, 3, 0, 11, 0, 0, 1, 1, 1, 0]' : 0.159618}", "{'[2, 5, 3, 1, 0, 0, 1, 1, 0, 3, 0, 11, 0, 0, 1, 1, 1, 0]' : 0.162717}", "{'[2, 5, 3, 1, 0, 0, 1, 1, 0, 3, 0, 11, 0, 0, 1, 1, 1, 0]' : 0.162868}", "{'[2, 5, 3, 1, 0, 0, 1, 1, 0, 3, 0, 11, 0, 0, 1, 1, 1, 0]' : 0.162803}", "{'[2, 5, 3, 1, 0, 0, 1, 1, 0, 3, 0, 11, 0, 0, 1, 1, 1, 0]' : 0.162709}", "{'[2, 5, 3, 1, 0, 0, 1, 1, 0, 3, 0, 11, 0, 0, 1, 1, 1, 0]' : 0.162686}", "{'[2, 5, 3, 1, 0, 0, 1, 1, 0, 3, 0, 11, 0, 0, 1, 1, 1, 0]' : 0.159832}", "{'[2, 5, 3, 1, 0, 0, 1, 1, 0, 3, 0, 11, 0, 0, 1, 1, 1, 0]' : 0.158029}", "{'[2, 5, 3, 1, 0, 0, 1, 1, 0, 3, 0, 11, 0, 0, 1, 1, 1, 0]' : 0.158265}", "{'[2, 5, 3, 1, 0, 0, 1, 1, 0, 3, 0, 11, 0, 0, 1, 1, 1, 0]' : 0.157963}", "{'[2, 5, 3, 1, 0, 0, 1, 1, 0, 3, 0, 11, 0, 0, 1, 1, 1, 0]' : 0.158449}", "{'[2, 5, 3, 1, 0, 0, 1, 1, 0, 3, 0, 11, 0, 0, 1, 1, 1, 0]' : 0.156386}", "{'[2, 5, 3, 1, 0, 0, 1, 1, 0, 3, 0, 11, 0, 0, 1, 1, 1, 0]' : 0.162756}", "{'[2, 5, 3, 1, 0, 0, 1, 1, 0, 3, 0, 11, 0, 0, 1, 1, 1, 0]' : 0.161609}", "{'[2, 5, 3, 1, 0, 0, 1, 1, 0, 3, 0, 11, 0, 0, 1, 1, 1, 0]' : 0.15798}", "{'[2, 5, 3, 1, 0, 0, 1, 1, 0, 3, 0, 11, 0, 0, 1, 1, 1, 0]' : 0.162433}", "{'[2, 5, 3, 1, 0, 0, 1, 1, 0, 3, 0, 11, 0, 0, 1, 1, 1, 0]' : 0.162696}", "{'[2, 5, 3, 1, 0, 0, 1, 1, 0, 3, 0, 11, 0, 0, 1, 1, 1, 0]' : 0.161148}", "{'[2, 5, 3, 1, 0, 0, 1, 1, 0, 3, 0, 11, 0, 0, 1, 1, 1, 0]' : 0.158005}", "{'[2, 5, 3, 1, 0, 0, 1, 1, 0, 3, 0, 11, 0, 0, 1, 1, 1, 0]' : 0.157938}", "{'[2, 5, 3, 1, 0, 0, 1, 1, 0, 3, 0, 11, 0, 0, 1, 1, 1, 0]' : 0.158824}", "{'[2, 5, 3, 1, 0, 0, 1, 1, 0, 3, 0, 11, 0, 0, 1, 1, 1, 0]' : 0.161178}", "{'[2, 5, 3, 1, 0, 0, 1, 1, 0, 3, 0, 11, 0, 0, 1, 1, 1, 0]' : 0.162691}", "{'[2, 5, 3, 1, 0, 0, 1, 1, 0, 3, 0, 11, 0, 0, 1, 1, 1, 0]' : 0.162675}"]
returning from 'run': {'[2, 5, 3, 1, 0, 0, 1, 1, 0, 3, 0, 11, 0, 0, 1, 1, 1, 0]': ([0.18218, 0.174113, 0.162622, 0.157937, 0.158098, 0.158158, 0.159618, 0.162717, 0.162868, 0.162803, 0.162709, 0.162686, 0.159832, 0.158029, 0.158265, 0.157963, 0.158449, 0.156386, 0.162756, 0.161609, 0.15798, 0.162433, 0.162696, 0.161148, 0.158005, 0.157938, 0.158824, 0.161178, 0.162691, 0.162675], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 5, 3, 1, 0, 0, 1, 1, 0, 3, 0, 11, 0, 0, 1, 1, 1, 0]': ([0.18218, 0.174113, 0.162622, 0.157937, 0.158098, 0.158158, 0.159618, 0.162717, 0.162868, 0.162803, 0.162709, 0.162686, 0.159832, 0.158029, 0.158265, 0.157963, 0.158449, 0.156386, 0.162756, 0.161609, 0.15798, 0.162433, 0.162696, 0.161148, 0.158005, 0.157938, 0.158824, 0.161178, 0.162691, 0.162675], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = jjj
Code stats:
        Number of loops: 	90
        Max loop nest depth: 	5
        Additions: 		7679
        Multiplications: 	2100
        Divisions: 		0
        Logical: 		0
        Reads: 			11785
        Writes: 		1374
        Comparisons:		90
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest63.exe __orio_perftest63.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest63.exe  
Program Test Output: 
{'[0, 5, 1, 1, 3, 6, 1, 0, 10, 23, 0, 24, 0, 1, 1, 0, 1, 1]' : 0.174388}
{'[0, 5, 1, 1, 3, 6, 1, 0, 10, 23, 0, 24, 0, 1, 1, 0, 1, 1]' : 0.173785}
{'[0, 5, 1, 1, 3, 6, 1, 0, 10, 23, 0, 24, 0, 1, 1, 0, 1, 1]' : 0.173846}
{'[0, 5, 1, 1, 3, 6, 1, 0, 10, 23, 0, 24, 0, 1, 1, 0, 1, 1]' : 0.173763}
{'[0, 5, 1, 1, 3, 6, 1, 0, 10, 23, 0, 24, 0, 1, 1, 0, 1, 1]' : 0.173775}
{'[0, 5, 1, 1, 3, 6, 1, 0, 10, 23, 0, 24, 0, 1, 1, 0, 1, 1]' : 0.173727}
{'[0, 5, 1, 1, 3, 6, 1, 0, 10, 23, 0, 24, 0, 1, 1, 0, 1, 1]' : 0.173798}
{'[0, 5, 1, 1, 3, 6, 1, 0, 10, 23, 0, 24, 0, 1, 1, 0, 1, 1]' : 0.173735}
{'[0, 5, 1, 1, 3, 6, 1, 0, 10, 23, 0, 24, 0, 1, 1, 0, 1, 1]' : 0.173764}
{'[0, 5, 1, 1, 3, 6, 1, 0, 10, 23, 0, 24, 0, 1, 1, 0, 1, 1]' : 0.173673}
{'[0, 5, 1, 1, 3, 6, 1, 0, 10, 23, 0, 24, 0, 1, 1, 0, 1, 1]' : 0.17467}
{'[0, 5, 1, 1, 3, 6, 1, 0, 10, 23, 0, 24, 0, 1, 1, 0, 1, 1]' : 0.173948}
{'[0, 5, 1, 1, 3, 6, 1, 0, 10, 23, 0, 24, 0, 1, 1, 0, 1, 1]' : 0.173873}
{'[0, 5, 1, 1, 3, 6, 1, 0, 10, 23, 0, 24, 0, 1, 1, 0, 1, 1]' : 0.173808}
{'[0, 5, 1, 1, 3, 6, 1, 0, 10, 23, 0, 24, 0, 1, 1, 0, 1, 1]' : 0.173856}
{'[0, 5, 1, 1, 3, 6, 1, 0, 10, 23, 0, 24, 0, 1, 1, 0, 1, 1]' : 0.173852}
{'[0, 5, 1, 1, 3, 6, 1, 0, 10, 23, 0, 24, 0, 1, 1, 0, 1, 1]' : 0.173721}
{'[0, 5, 1, 1, 3, 6, 1, 0, 10, 23, 0, 24, 0, 1, 1, 0, 1, 1]' : 0.17361}
{'[0, 5, 1, 1, 3, 6, 1, 0, 10, 23, 0, 24, 0, 1, 1, 0, 1, 1]' : 0.173912}
{'[0, 5, 1, 1, 3, 6, 1, 0, 10, 23, 0, 24, 0, 1, 1, 0, 1, 1]' : 0.173635}
{'[0, 5, 1, 1, 3, 6, 1, 0, 10, 23, 0, 24, 0, 1, 1, 0, 1, 1]' : 0.173689}
{'[0, 5, 1, 1, 3, 6, 1, 0, 10, 23, 0, 24, 0, 1, 1, 0, 1, 1]' : 0.173784}
{'[0, 5, 1, 1, 3, 6, 1, 0, 10, 23, 0, 24, 0, 1, 1, 0, 1, 1]' : 0.173981}
{'[0, 5, 1, 1, 3, 6, 1, 0, 10, 23, 0, 24, 0, 1, 1, 0, 1, 1]' : 0.173786}
{'[0, 5, 1, 1, 3, 6, 1, 0, 10, 23, 0, 24, 0, 1, 1, 0, 1, 1]' : 0.173674}
{'[0, 5, 1, 1, 3, 6, 1, 0, 10, 23, 0, 24, 0, 1, 1, 0, 1, 1]' : 0.173803}
{'[0, 5, 1, 1, 3, 6, 1, 0, 10, 23, 0, 24, 0, 1, 1, 0, 1, 1]' : 0.174125}
{'[0, 5, 1, 1, 3, 6, 1, 0, 10, 23, 0, 24, 0, 1, 1, 0, 1, 1]' : 0.174198}
{'[0, 5, 1, 1, 3, 6, 1, 0, 10, 23, 0, 24, 0, 1, 1, 0, 1, 1]' : 0.173731}
{'[0, 5, 1, 1, 3, 6, 1, 0, 10, 23, 0, 24, 0, 1, 1, 0, 1, 1]' : 0.173834}

out:
 ["{'[0, 5, 1, 1, 3, 6, 1, 0, 10, 23, 0, 24, 0, 1, 1, 0, 1, 1]' : 0.174388}", "{'[0, 5, 1, 1, 3, 6, 1, 0, 10, 23, 0, 24, 0, 1, 1, 0, 1, 1]' : 0.173785}", "{'[0, 5, 1, 1, 3, 6, 1, 0, 10, 23, 0, 24, 0, 1, 1, 0, 1, 1]' : 0.173846}", "{'[0, 5, 1, 1, 3, 6, 1, 0, 10, 23, 0, 24, 0, 1, 1, 0, 1, 1]' : 0.173763}", "{'[0, 5, 1, 1, 3, 6, 1, 0, 10, 23, 0, 24, 0, 1, 1, 0, 1, 1]' : 0.173775}", "{'[0, 5, 1, 1, 3, 6, 1, 0, 10, 23, 0, 24, 0, 1, 1, 0, 1, 1]' : 0.173727}", "{'[0, 5, 1, 1, 3, 6, 1, 0, 10, 23, 0, 24, 0, 1, 1, 0, 1, 1]' : 0.173798}", "{'[0, 5, 1, 1, 3, 6, 1, 0, 10, 23, 0, 24, 0, 1, 1, 0, 1, 1]' : 0.173735}", "{'[0, 5, 1, 1, 3, 6, 1, 0, 10, 23, 0, 24, 0, 1, 1, 0, 1, 1]' : 0.173764}", "{'[0, 5, 1, 1, 3, 6, 1, 0, 10, 23, 0, 24, 0, 1, 1, 0, 1, 1]' : 0.173673}", "{'[0, 5, 1, 1, 3, 6, 1, 0, 10, 23, 0, 24, 0, 1, 1, 0, 1, 1]' : 0.17467}", "{'[0, 5, 1, 1, 3, 6, 1, 0, 10, 23, 0, 24, 0, 1, 1, 0, 1, 1]' : 0.173948}", "{'[0, 5, 1, 1, 3, 6, 1, 0, 10, 23, 0, 24, 0, 1, 1, 0, 1, 1]' : 0.173873}", "{'[0, 5, 1, 1, 3, 6, 1, 0, 10, 23, 0, 24, 0, 1, 1, 0, 1, 1]' : 0.173808}", "{'[0, 5, 1, 1, 3, 6, 1, 0, 10, 23, 0, 24, 0, 1, 1, 0, 1, 1]' : 0.173856}", "{'[0, 5, 1, 1, 3, 6, 1, 0, 10, 23, 0, 24, 0, 1, 1, 0, 1, 1]' : 0.173852}", "{'[0, 5, 1, 1, 3, 6, 1, 0, 10, 23, 0, 24, 0, 1, 1, 0, 1, 1]' : 0.173721}", "{'[0, 5, 1, 1, 3, 6, 1, 0, 10, 23, 0, 24, 0, 1, 1, 0, 1, 1]' : 0.17361}", "{'[0, 5, 1, 1, 3, 6, 1, 0, 10, 23, 0, 24, 0, 1, 1, 0, 1, 1]' : 0.173912}", "{'[0, 5, 1, 1, 3, 6, 1, 0, 10, 23, 0, 24, 0, 1, 1, 0, 1, 1]' : 0.173635}", "{'[0, 5, 1, 1, 3, 6, 1, 0, 10, 23, 0, 24, 0, 1, 1, 0, 1, 1]' : 0.173689}", "{'[0, 5, 1, 1, 3, 6, 1, 0, 10, 23, 0, 24, 0, 1, 1, 0, 1, 1]' : 0.173784}", "{'[0, 5, 1, 1, 3, 6, 1, 0, 10, 23, 0, 24, 0, 1, 1, 0, 1, 1]' : 0.173981}", "{'[0, 5, 1, 1, 3, 6, 1, 0, 10, 23, 0, 24, 0, 1, 1, 0, 1, 1]' : 0.173786}", "{'[0, 5, 1, 1, 3, 6, 1, 0, 10, 23, 0, 24, 0, 1, 1, 0, 1, 1]' : 0.173674}", "{'[0, 5, 1, 1, 3, 6, 1, 0, 10, 23, 0, 24, 0, 1, 1, 0, 1, 1]' : 0.173803}", "{'[0, 5, 1, 1, 3, 6, 1, 0, 10, 23, 0, 24, 0, 1, 1, 0, 1, 1]' : 0.174125}", "{'[0, 5, 1, 1, 3, 6, 1, 0, 10, 23, 0, 24, 0, 1, 1, 0, 1, 1]' : 0.174198}", "{'[0, 5, 1, 1, 3, 6, 1, 0, 10, 23, 0, 24, 0, 1, 1, 0, 1, 1]' : 0.173731}", "{'[0, 5, 1, 1, 3, 6, 1, 0, 10, 23, 0, 24, 0, 1, 1, 0, 1, 1]' : 0.173834}"]
returning from 'run': {'[0, 5, 1, 1, 3, 6, 1, 0, 10, 23, 0, 24, 0, 1, 1, 0, 1, 1]': ([0.174388, 0.173785, 0.173846, 0.173763, 0.173775, 0.173727, 0.173798, 0.173735, 0.173764, 0.173673, 0.17467, 0.173948, 0.173873, 0.173808, 0.173856, 0.173852, 0.173721, 0.17361, 0.173912, 0.173635, 0.173689, 0.173784, 0.173981, 0.173786, 0.173674, 0.173803, 0.174125, 0.174198, 0.173731, 0.173834], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 5, 1, 1, 3, 6, 1, 0, 10, 23, 0, 24, 0, 1, 1, 0, 1, 1]': ([0.174388, 0.173785, 0.173846, 0.173763, 0.173775, 0.173727, 0.173798, 0.173735, 0.173764, 0.173673, 0.17467, 0.173948, 0.173873, 0.173808, 0.173856, 0.173852, 0.173721, 0.17361, 0.173912, 0.173635, 0.173689, 0.173784, 0.173981, 0.173786, 0.173674, 0.173803, 0.174125, 0.174198, 0.173731, 0.173834], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	4
        Additions: 		743
        Multiplications: 	220
        Divisions: 		0
        Logical: 		0
        Reads: 			1325
        Writes: 		179
        Comparisons:		25
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest64.exe __orio_perftest64.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest64.exe  
Program Test Output: 
{'[4, 5, 0, 0, 0, 6, 0, 0, 9, 3, 3, 0, 0, 1, 1, 0, 1, 0]' : 0.130084}
{'[4, 5, 0, 0, 0, 6, 0, 0, 9, 3, 3, 0, 0, 1, 1, 0, 1, 0]' : 0.129938}
{'[4, 5, 0, 0, 0, 6, 0, 0, 9, 3, 3, 0, 0, 1, 1, 0, 1, 0]' : 0.129555}
{'[4, 5, 0, 0, 0, 6, 0, 0, 9, 3, 3, 0, 0, 1, 1, 0, 1, 0]' : 0.129968}
{'[4, 5, 0, 0, 0, 6, 0, 0, 9, 3, 3, 0, 0, 1, 1, 0, 1, 0]' : 0.12841}
{'[4, 5, 0, 0, 0, 6, 0, 0, 9, 3, 3, 0, 0, 1, 1, 0, 1, 0]' : 0.112765}
{'[4, 5, 0, 0, 0, 6, 0, 0, 9, 3, 3, 0, 0, 1, 1, 0, 1, 0]' : 0.111358}
{'[4, 5, 0, 0, 0, 6, 0, 0, 9, 3, 3, 0, 0, 1, 1, 0, 1, 0]' : 0.111323}
{'[4, 5, 0, 0, 0, 6, 0, 0, 9, 3, 3, 0, 0, 1, 1, 0, 1, 0]' : 0.11085}
{'[4, 5, 0, 0, 0, 6, 0, 0, 9, 3, 3, 0, 0, 1, 1, 0, 1, 0]' : 0.111401}
{'[4, 5, 0, 0, 0, 6, 0, 0, 9, 3, 3, 0, 0, 1, 1, 0, 1, 0]' : 0.111042}
{'[4, 5, 0, 0, 0, 6, 0, 0, 9, 3, 3, 0, 0, 1, 1, 0, 1, 0]' : 0.111231}
{'[4, 5, 0, 0, 0, 6, 0, 0, 9, 3, 3, 0, 0, 1, 1, 0, 1, 0]' : 0.111055}
{'[4, 5, 0, 0, 0, 6, 0, 0, 9, 3, 3, 0, 0, 1, 1, 0, 1, 0]' : 0.111092}
{'[4, 5, 0, 0, 0, 6, 0, 0, 9, 3, 3, 0, 0, 1, 1, 0, 1, 0]' : 0.110874}
{'[4, 5, 0, 0, 0, 6, 0, 0, 9, 3, 3, 0, 0, 1, 1, 0, 1, 0]' : 0.111467}
{'[4, 5, 0, 0, 0, 6, 0, 0, 9, 3, 3, 0, 0, 1, 1, 0, 1, 0]' : 0.111126}
{'[4, 5, 0, 0, 0, 6, 0, 0, 9, 3, 3, 0, 0, 1, 1, 0, 1, 0]' : 0.111084}
{'[4, 5, 0, 0, 0, 6, 0, 0, 9, 3, 3, 0, 0, 1, 1, 0, 1, 0]' : 0.110825}
{'[4, 5, 0, 0, 0, 6, 0, 0, 9, 3, 3, 0, 0, 1, 1, 0, 1, 0]' : 0.11114}
{'[4, 5, 0, 0, 0, 6, 0, 0, 9, 3, 3, 0, 0, 1, 1, 0, 1, 0]' : 0.110979}
{'[4, 5, 0, 0, 0, 6, 0, 0, 9, 3, 3, 0, 0, 1, 1, 0, 1, 0]' : 0.111114}
{'[4, 5, 0, 0, 0, 6, 0, 0, 9, 3, 3, 0, 0, 1, 1, 0, 1, 0]' : 0.110912}
{'[4, 5, 0, 0, 0, 6, 0, 0, 9, 3, 3, 0, 0, 1, 1, 0, 1, 0]' : 0.111127}
{'[4, 5, 0, 0, 0, 6, 0, 0, 9, 3, 3, 0, 0, 1, 1, 0, 1, 0]' : 0.111105}
{'[4, 5, 0, 0, 0, 6, 0, 0, 9, 3, 3, 0, 0, 1, 1, 0, 1, 0]' : 0.111549}
{'[4, 5, 0, 0, 0, 6, 0, 0, 9, 3, 3, 0, 0, 1, 1, 0, 1, 0]' : 0.110961}
{'[4, 5, 0, 0, 0, 6, 0, 0, 9, 3, 3, 0, 0, 1, 1, 0, 1, 0]' : 0.111092}
{'[4, 5, 0, 0, 0, 6, 0, 0, 9, 3, 3, 0, 0, 1, 1, 0, 1, 0]' : 0.111131}
{'[4, 5, 0, 0, 0, 6, 0, 0, 9, 3, 3, 0, 0, 1, 1, 0, 1, 0]' : 0.111144}

out:
 ["{'[4, 5, 0, 0, 0, 6, 0, 0, 9, 3, 3, 0, 0, 1, 1, 0, 1, 0]' : 0.130084}", "{'[4, 5, 0, 0, 0, 6, 0, 0, 9, 3, 3, 0, 0, 1, 1, 0, 1, 0]' : 0.129938}", "{'[4, 5, 0, 0, 0, 6, 0, 0, 9, 3, 3, 0, 0, 1, 1, 0, 1, 0]' : 0.129555}", "{'[4, 5, 0, 0, 0, 6, 0, 0, 9, 3, 3, 0, 0, 1, 1, 0, 1, 0]' : 0.129968}", "{'[4, 5, 0, 0, 0, 6, 0, 0, 9, 3, 3, 0, 0, 1, 1, 0, 1, 0]' : 0.12841}", "{'[4, 5, 0, 0, 0, 6, 0, 0, 9, 3, 3, 0, 0, 1, 1, 0, 1, 0]' : 0.112765}", "{'[4, 5, 0, 0, 0, 6, 0, 0, 9, 3, 3, 0, 0, 1, 1, 0, 1, 0]' : 0.111358}", "{'[4, 5, 0, 0, 0, 6, 0, 0, 9, 3, 3, 0, 0, 1, 1, 0, 1, 0]' : 0.111323}", "{'[4, 5, 0, 0, 0, 6, 0, 0, 9, 3, 3, 0, 0, 1, 1, 0, 1, 0]' : 0.11085}", "{'[4, 5, 0, 0, 0, 6, 0, 0, 9, 3, 3, 0, 0, 1, 1, 0, 1, 0]' : 0.111401}", "{'[4, 5, 0, 0, 0, 6, 0, 0, 9, 3, 3, 0, 0, 1, 1, 0, 1, 0]' : 0.111042}", "{'[4, 5, 0, 0, 0, 6, 0, 0, 9, 3, 3, 0, 0, 1, 1, 0, 1, 0]' : 0.111231}", "{'[4, 5, 0, 0, 0, 6, 0, 0, 9, 3, 3, 0, 0, 1, 1, 0, 1, 0]' : 0.111055}", "{'[4, 5, 0, 0, 0, 6, 0, 0, 9, 3, 3, 0, 0, 1, 1, 0, 1, 0]' : 0.111092}", "{'[4, 5, 0, 0, 0, 6, 0, 0, 9, 3, 3, 0, 0, 1, 1, 0, 1, 0]' : 0.110874}", "{'[4, 5, 0, 0, 0, 6, 0, 0, 9, 3, 3, 0, 0, 1, 1, 0, 1, 0]' : 0.111467}", "{'[4, 5, 0, 0, 0, 6, 0, 0, 9, 3, 3, 0, 0, 1, 1, 0, 1, 0]' : 0.111126}", "{'[4, 5, 0, 0, 0, 6, 0, 0, 9, 3, 3, 0, 0, 1, 1, 0, 1, 0]' : 0.111084}", "{'[4, 5, 0, 0, 0, 6, 0, 0, 9, 3, 3, 0, 0, 1, 1, 0, 1, 0]' : 0.110825}", "{'[4, 5, 0, 0, 0, 6, 0, 0, 9, 3, 3, 0, 0, 1, 1, 0, 1, 0]' : 0.11114}", "{'[4, 5, 0, 0, 0, 6, 0, 0, 9, 3, 3, 0, 0, 1, 1, 0, 1, 0]' : 0.110979}", "{'[4, 5, 0, 0, 0, 6, 0, 0, 9, 3, 3, 0, 0, 1, 1, 0, 1, 0]' : 0.111114}", "{'[4, 5, 0, 0, 0, 6, 0, 0, 9, 3, 3, 0, 0, 1, 1, 0, 1, 0]' : 0.110912}", "{'[4, 5, 0, 0, 0, 6, 0, 0, 9, 3, 3, 0, 0, 1, 1, 0, 1, 0]' : 0.111127}", "{'[4, 5, 0, 0, 0, 6, 0, 0, 9, 3, 3, 0, 0, 1, 1, 0, 1, 0]' : 0.111105}", "{'[4, 5, 0, 0, 0, 6, 0, 0, 9, 3, 3, 0, 0, 1, 1, 0, 1, 0]' : 0.111549}", "{'[4, 5, 0, 0, 0, 6, 0, 0, 9, 3, 3, 0, 0, 1, 1, 0, 1, 0]' : 0.110961}", "{'[4, 5, 0, 0, 0, 6, 0, 0, 9, 3, 3, 0, 0, 1, 1, 0, 1, 0]' : 0.111092}", "{'[4, 5, 0, 0, 0, 6, 0, 0, 9, 3, 3, 0, 0, 1, 1, 0, 1, 0]' : 0.111131}", "{'[4, 5, 0, 0, 0, 6, 0, 0, 9, 3, 3, 0, 0, 1, 1, 0, 1, 0]' : 0.111144}"]
returning from 'run': {'[4, 5, 0, 0, 0, 6, 0, 0, 9, 3, 3, 0, 0, 1, 1, 0, 1, 0]': ([0.130084, 0.129938, 0.129555, 0.129968, 0.12841, 0.112765, 0.111358, 0.111323, 0.11085, 0.111401, 0.111042, 0.111231, 0.111055, 0.111092, 0.110874, 0.111467, 0.111126, 0.111084, 0.110825, 0.11114, 0.110979, 0.111114, 0.110912, 0.111127, 0.111105, 0.111549, 0.110961, 0.111092, 0.111131, 0.111144], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 5, 0, 0, 0, 6, 0, 0, 9, 3, 3, 0, 0, 1, 1, 0, 1, 0]': ([0.130084, 0.129938, 0.129555, 0.129968, 0.12841, 0.112765, 0.111358, 0.111323, 0.11085, 0.111401, 0.111042, 0.111231, 0.111055, 0.111092, 0.110874, 0.111467, 0.111126, 0.111084, 0.110825, 0.11114, 0.110979, 0.111114, 0.110912, 0.111127, 0.111105, 0.111549, 0.110961, 0.111092, 0.111131, 0.111144], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = jjj
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = kkk
Code stats:
        Number of loops: 	31
        Max loop nest depth: 	4
        Additions: 		1282
        Multiplications: 	324
        Divisions: 		0
        Logical: 		0
        Reads: 			2131
        Writes: 		276
        Comparisons:		31
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest65.exe __orio_perftest65.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest65.exe  
Program Test Output: 
{'[6, 5, 3, 4, 3, 1, 1, 0, 11, 16, 27, 0, 0, 1, 0, 0, 1, 0]' : 0.180481}
{'[6, 5, 3, 4, 3, 1, 1, 0, 11, 16, 27, 0, 0, 1, 0, 0, 1, 0]' : 0.180427}
{'[6, 5, 3, 4, 3, 1, 1, 0, 11, 16, 27, 0, 0, 1, 0, 0, 1, 0]' : 0.180406}
{'[6, 5, 3, 4, 3, 1, 1, 0, 11, 16, 27, 0, 0, 1, 0, 0, 1, 0]' : 0.164119}
{'[6, 5, 3, 4, 3, 1, 1, 0, 11, 16, 27, 0, 0, 1, 0, 0, 1, 0]' : 0.15306}
{'[6, 5, 3, 4, 3, 1, 1, 0, 11, 16, 27, 0, 0, 1, 0, 0, 1, 0]' : 0.152991}
{'[6, 5, 3, 4, 3, 1, 1, 0, 11, 16, 27, 0, 0, 1, 0, 0, 1, 0]' : 0.152841}
{'[6, 5, 3, 4, 3, 1, 1, 0, 11, 16, 27, 0, 0, 1, 0, 0, 1, 0]' : 0.152847}
{'[6, 5, 3, 4, 3, 1, 1, 0, 11, 16, 27, 0, 0, 1, 0, 0, 1, 0]' : 0.152969}
{'[6, 5, 3, 4, 3, 1, 1, 0, 11, 16, 27, 0, 0, 1, 0, 0, 1, 0]' : 0.153793}
{'[6, 5, 3, 4, 3, 1, 1, 0, 11, 16, 27, 0, 0, 1, 0, 0, 1, 0]' : 0.153102}
{'[6, 5, 3, 4, 3, 1, 1, 0, 11, 16, 27, 0, 0, 1, 0, 0, 1, 0]' : 0.153222}
{'[6, 5, 3, 4, 3, 1, 1, 0, 11, 16, 27, 0, 0, 1, 0, 0, 1, 0]' : 0.153215}
{'[6, 5, 3, 4, 3, 1, 1, 0, 11, 16, 27, 0, 0, 1, 0, 0, 1, 0]' : 0.15307}
{'[6, 5, 3, 4, 3, 1, 1, 0, 11, 16, 27, 0, 0, 1, 0, 0, 1, 0]' : 0.152968}
{'[6, 5, 3, 4, 3, 1, 1, 0, 11, 16, 27, 0, 0, 1, 0, 0, 1, 0]' : 0.153071}
{'[6, 5, 3, 4, 3, 1, 1, 0, 11, 16, 27, 0, 0, 1, 0, 0, 1, 0]' : 0.152981}
{'[6, 5, 3, 4, 3, 1, 1, 0, 11, 16, 27, 0, 0, 1, 0, 0, 1, 0]' : 0.153039}
{'[6, 5, 3, 4, 3, 1, 1, 0, 11, 16, 27, 0, 0, 1, 0, 0, 1, 0]' : 0.153446}
{'[6, 5, 3, 4, 3, 1, 1, 0, 11, 16, 27, 0, 0, 1, 0, 0, 1, 0]' : 0.15327}
{'[6, 5, 3, 4, 3, 1, 1, 0, 11, 16, 27, 0, 0, 1, 0, 0, 1, 0]' : 0.153068}
{'[6, 5, 3, 4, 3, 1, 1, 0, 11, 16, 27, 0, 0, 1, 0, 0, 1, 0]' : 0.153147}
{'[6, 5, 3, 4, 3, 1, 1, 0, 11, 16, 27, 0, 0, 1, 0, 0, 1, 0]' : 0.153044}
{'[6, 5, 3, 4, 3, 1, 1, 0, 11, 16, 27, 0, 0, 1, 0, 0, 1, 0]' : 0.153156}
{'[6, 5, 3, 4, 3, 1, 1, 0, 11, 16, 27, 0, 0, 1, 0, 0, 1, 0]' : 0.153168}
{'[6, 5, 3, 4, 3, 1, 1, 0, 11, 16, 27, 0, 0, 1, 0, 0, 1, 0]' : 0.152903}
{'[6, 5, 3, 4, 3, 1, 1, 0, 11, 16, 27, 0, 0, 1, 0, 0, 1, 0]' : 0.153385}
{'[6, 5, 3, 4, 3, 1, 1, 0, 11, 16, 27, 0, 0, 1, 0, 0, 1, 0]' : 0.152885}
{'[6, 5, 3, 4, 3, 1, 1, 0, 11, 16, 27, 0, 0, 1, 0, 0, 1, 0]' : 0.153586}
{'[6, 5, 3, 4, 3, 1, 1, 0, 11, 16, 27, 0, 0, 1, 0, 0, 1, 0]' : 0.153216}

out:
 ["{'[6, 5, 3, 4, 3, 1, 1, 0, 11, 16, 27, 0, 0, 1, 0, 0, 1, 0]' : 0.180481}", "{'[6, 5, 3, 4, 3, 1, 1, 0, 11, 16, 27, 0, 0, 1, 0, 0, 1, 0]' : 0.180427}", "{'[6, 5, 3, 4, 3, 1, 1, 0, 11, 16, 27, 0, 0, 1, 0, 0, 1, 0]' : 0.180406}", "{'[6, 5, 3, 4, 3, 1, 1, 0, 11, 16, 27, 0, 0, 1, 0, 0, 1, 0]' : 0.164119}", "{'[6, 5, 3, 4, 3, 1, 1, 0, 11, 16, 27, 0, 0, 1, 0, 0, 1, 0]' : 0.15306}", "{'[6, 5, 3, 4, 3, 1, 1, 0, 11, 16, 27, 0, 0, 1, 0, 0, 1, 0]' : 0.152991}", "{'[6, 5, 3, 4, 3, 1, 1, 0, 11, 16, 27, 0, 0, 1, 0, 0, 1, 0]' : 0.152841}", "{'[6, 5, 3, 4, 3, 1, 1, 0, 11, 16, 27, 0, 0, 1, 0, 0, 1, 0]' : 0.152847}", "{'[6, 5, 3, 4, 3, 1, 1, 0, 11, 16, 27, 0, 0, 1, 0, 0, 1, 0]' : 0.152969}", "{'[6, 5, 3, 4, 3, 1, 1, 0, 11, 16, 27, 0, 0, 1, 0, 0, 1, 0]' : 0.153793}", "{'[6, 5, 3, 4, 3, 1, 1, 0, 11, 16, 27, 0, 0, 1, 0, 0, 1, 0]' : 0.153102}", "{'[6, 5, 3, 4, 3, 1, 1, 0, 11, 16, 27, 0, 0, 1, 0, 0, 1, 0]' : 0.153222}", "{'[6, 5, 3, 4, 3, 1, 1, 0, 11, 16, 27, 0, 0, 1, 0, 0, 1, 0]' : 0.153215}", "{'[6, 5, 3, 4, 3, 1, 1, 0, 11, 16, 27, 0, 0, 1, 0, 0, 1, 0]' : 0.15307}", "{'[6, 5, 3, 4, 3, 1, 1, 0, 11, 16, 27, 0, 0, 1, 0, 0, 1, 0]' : 0.152968}", "{'[6, 5, 3, 4, 3, 1, 1, 0, 11, 16, 27, 0, 0, 1, 0, 0, 1, 0]' : 0.153071}", "{'[6, 5, 3, 4, 3, 1, 1, 0, 11, 16, 27, 0, 0, 1, 0, 0, 1, 0]' : 0.152981}", "{'[6, 5, 3, 4, 3, 1, 1, 0, 11, 16, 27, 0, 0, 1, 0, 0, 1, 0]' : 0.153039}", "{'[6, 5, 3, 4, 3, 1, 1, 0, 11, 16, 27, 0, 0, 1, 0, 0, 1, 0]' : 0.153446}", "{'[6, 5, 3, 4, 3, 1, 1, 0, 11, 16, 27, 0, 0, 1, 0, 0, 1, 0]' : 0.15327}", "{'[6, 5, 3, 4, 3, 1, 1, 0, 11, 16, 27, 0, 0, 1, 0, 0, 1, 0]' : 0.153068}", "{'[6, 5, 3, 4, 3, 1, 1, 0, 11, 16, 27, 0, 0, 1, 0, 0, 1, 0]' : 0.153147}", "{'[6, 5, 3, 4, 3, 1, 1, 0, 11, 16, 27, 0, 0, 1, 0, 0, 1, 0]' : 0.153044}", "{'[6, 5, 3, 4, 3, 1, 1, 0, 11, 16, 27, 0, 0, 1, 0, 0, 1, 0]' : 0.153156}", "{'[6, 5, 3, 4, 3, 1, 1, 0, 11, 16, 27, 0, 0, 1, 0, 0, 1, 0]' : 0.153168}", "{'[6, 5, 3, 4, 3, 1, 1, 0, 11, 16, 27, 0, 0, 1, 0, 0, 1, 0]' : 0.152903}", "{'[6, 5, 3, 4, 3, 1, 1, 0, 11, 16, 27, 0, 0, 1, 0, 0, 1, 0]' : 0.153385}", "{'[6, 5, 3, 4, 3, 1, 1, 0, 11, 16, 27, 0, 0, 1, 0, 0, 1, 0]' : 0.152885}", "{'[6, 5, 3, 4, 3, 1, 1, 0, 11, 16, 27, 0, 0, 1, 0, 0, 1, 0]' : 0.153586}", "{'[6, 5, 3, 4, 3, 1, 1, 0, 11, 16, 27, 0, 0, 1, 0, 0, 1, 0]' : 0.153216}"]
returning from 'run': {'[6, 5, 3, 4, 3, 1, 1, 0, 11, 16, 27, 0, 0, 1, 0, 0, 1, 0]': ([0.180481, 0.180427, 0.180406, 0.164119, 0.15306, 0.152991, 0.152841, 0.152847, 0.152969, 0.153793, 0.153102, 0.153222, 0.153215, 0.15307, 0.152968, 0.153071, 0.152981, 0.153039, 0.153446, 0.15327, 0.153068, 0.153147, 0.153044, 0.153156, 0.153168, 0.152903, 0.153385, 0.152885, 0.153586, 0.153216], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 5, 3, 4, 3, 1, 1, 0, 11, 16, 27, 0, 0, 1, 0, 0, 1, 0]': ([0.180481, 0.180427, 0.180406, 0.164119, 0.15306, 0.152991, 0.152841, 0.152847, 0.152969, 0.153793, 0.153102, 0.153222, 0.153215, 0.15307, 0.152968, 0.153071, 0.152981, 0.153039, 0.153446, 0.15327, 0.153068, 0.153147, 0.153044, 0.153156, 0.153168, 0.152903, 0.153385, 0.152885, 0.153586, 0.153216], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	6
        Additions: 		3321
        Multiplications: 	1598
        Divisions: 		0
        Logical: 		0
        Reads: 			6370
        Writes: 		1069
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest66.exe __orio_perftest66.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest66.exe  
Program Test Output: 
{'[2, 5, 3, 1, 0, 2, 0, 0, 21, 15, 12, 0, 0, 0, 2, 1, 0, 1]' : 0.110223}
{'[2, 5, 3, 1, 0, 2, 0, 0, 21, 15, 12, 0, 0, 0, 2, 1, 0, 1]' : 0.110185}
{'[2, 5, 3, 1, 0, 2, 0, 0, 21, 15, 12, 0, 0, 0, 2, 1, 0, 1]' : 0.110273}
{'[2, 5, 3, 1, 0, 2, 0, 0, 21, 15, 12, 0, 0, 0, 2, 1, 0, 1]' : 0.11033}
{'[2, 5, 3, 1, 0, 2, 0, 0, 21, 15, 12, 0, 0, 0, 2, 1, 0, 1]' : 0.110391}
{'[2, 5, 3, 1, 0, 2, 0, 0, 21, 15, 12, 0, 0, 0, 2, 1, 0, 1]' : 0.110172}
{'[2, 5, 3, 1, 0, 2, 0, 0, 21, 15, 12, 0, 0, 0, 2, 1, 0, 1]' : 0.110233}
{'[2, 5, 3, 1, 0, 2, 0, 0, 21, 15, 12, 0, 0, 0, 2, 1, 0, 1]' : 0.110094}
{'[2, 5, 3, 1, 0, 2, 0, 0, 21, 15, 12, 0, 0, 0, 2, 1, 0, 1]' : 0.110143}
{'[2, 5, 3, 1, 0, 2, 0, 0, 21, 15, 12, 0, 0, 0, 2, 1, 0, 1]' : 0.110184}
{'[2, 5, 3, 1, 0, 2, 0, 0, 21, 15, 12, 0, 0, 0, 2, 1, 0, 1]' : 0.110208}
{'[2, 5, 3, 1, 0, 2, 0, 0, 21, 15, 12, 0, 0, 0, 2, 1, 0, 1]' : 0.110102}
{'[2, 5, 3, 1, 0, 2, 0, 0, 21, 15, 12, 0, 0, 0, 2, 1, 0, 1]' : 0.110161}
{'[2, 5, 3, 1, 0, 2, 0, 0, 21, 15, 12, 0, 0, 0, 2, 1, 0, 1]' : 0.110359}
{'[2, 5, 3, 1, 0, 2, 0, 0, 21, 15, 12, 0, 0, 0, 2, 1, 0, 1]' : 0.110365}
{'[2, 5, 3, 1, 0, 2, 0, 0, 21, 15, 12, 0, 0, 0, 2, 1, 0, 1]' : 0.110083}
{'[2, 5, 3, 1, 0, 2, 0, 0, 21, 15, 12, 0, 0, 0, 2, 1, 0, 1]' : 0.110263}
{'[2, 5, 3, 1, 0, 2, 0, 0, 21, 15, 12, 0, 0, 0, 2, 1, 0, 1]' : 0.110655}
{'[2, 5, 3, 1, 0, 2, 0, 0, 21, 15, 12, 0, 0, 0, 2, 1, 0, 1]' : 0.110179}
{'[2, 5, 3, 1, 0, 2, 0, 0, 21, 15, 12, 0, 0, 0, 2, 1, 0, 1]' : 0.110185}
{'[2, 5, 3, 1, 0, 2, 0, 0, 21, 15, 12, 0, 0, 0, 2, 1, 0, 1]' : 0.110133}
{'[2, 5, 3, 1, 0, 2, 0, 0, 21, 15, 12, 0, 0, 0, 2, 1, 0, 1]' : 0.110087}
{'[2, 5, 3, 1, 0, 2, 0, 0, 21, 15, 12, 0, 0, 0, 2, 1, 0, 1]' : 0.110152}
{'[2, 5, 3, 1, 0, 2, 0, 0, 21, 15, 12, 0, 0, 0, 2, 1, 0, 1]' : 0.110435}
{'[2, 5, 3, 1, 0, 2, 0, 0, 21, 15, 12, 0, 0, 0, 2, 1, 0, 1]' : 0.110526}
{'[2, 5, 3, 1, 0, 2, 0, 0, 21, 15, 12, 0, 0, 0, 2, 1, 0, 1]' : 0.110222}
{'[2, 5, 3, 1, 0, 2, 0, 0, 21, 15, 12, 0, 0, 0, 2, 1, 0, 1]' : 0.110158}
{'[2, 5, 3, 1, 0, 2, 0, 0, 21, 15, 12, 0, 0, 0, 2, 1, 0, 1]' : 0.110106}
{'[2, 5, 3, 1, 0, 2, 0, 0, 21, 15, 12, 0, 0, 0, 2, 1, 0, 1]' : 0.110146}
{'[2, 5, 3, 1, 0, 2, 0, 0, 21, 15, 12, 0, 0, 0, 2, 1, 0, 1]' : 0.110372}

out:
 ["{'[2, 5, 3, 1, 0, 2, 0, 0, 21, 15, 12, 0, 0, 0, 2, 1, 0, 1]' : 0.110223}", "{'[2, 5, 3, 1, 0, 2, 0, 0, 21, 15, 12, 0, 0, 0, 2, 1, 0, 1]' : 0.110185}", "{'[2, 5, 3, 1, 0, 2, 0, 0, 21, 15, 12, 0, 0, 0, 2, 1, 0, 1]' : 0.110273}", "{'[2, 5, 3, 1, 0, 2, 0, 0, 21, 15, 12, 0, 0, 0, 2, 1, 0, 1]' : 0.11033}", "{'[2, 5, 3, 1, 0, 2, 0, 0, 21, 15, 12, 0, 0, 0, 2, 1, 0, 1]' : 0.110391}", "{'[2, 5, 3, 1, 0, 2, 0, 0, 21, 15, 12, 0, 0, 0, 2, 1, 0, 1]' : 0.110172}", "{'[2, 5, 3, 1, 0, 2, 0, 0, 21, 15, 12, 0, 0, 0, 2, 1, 0, 1]' : 0.110233}", "{'[2, 5, 3, 1, 0, 2, 0, 0, 21, 15, 12, 0, 0, 0, 2, 1, 0, 1]' : 0.110094}", "{'[2, 5, 3, 1, 0, 2, 0, 0, 21, 15, 12, 0, 0, 0, 2, 1, 0, 1]' : 0.110143}", "{'[2, 5, 3, 1, 0, 2, 0, 0, 21, 15, 12, 0, 0, 0, 2, 1, 0, 1]' : 0.110184}", "{'[2, 5, 3, 1, 0, 2, 0, 0, 21, 15, 12, 0, 0, 0, 2, 1, 0, 1]' : 0.110208}", "{'[2, 5, 3, 1, 0, 2, 0, 0, 21, 15, 12, 0, 0, 0, 2, 1, 0, 1]' : 0.110102}", "{'[2, 5, 3, 1, 0, 2, 0, 0, 21, 15, 12, 0, 0, 0, 2, 1, 0, 1]' : 0.110161}", "{'[2, 5, 3, 1, 0, 2, 0, 0, 21, 15, 12, 0, 0, 0, 2, 1, 0, 1]' : 0.110359}", "{'[2, 5, 3, 1, 0, 2, 0, 0, 21, 15, 12, 0, 0, 0, 2, 1, 0, 1]' : 0.110365}", "{'[2, 5, 3, 1, 0, 2, 0, 0, 21, 15, 12, 0, 0, 0, 2, 1, 0, 1]' : 0.110083}", "{'[2, 5, 3, 1, 0, 2, 0, 0, 21, 15, 12, 0, 0, 0, 2, 1, 0, 1]' : 0.110263}", "{'[2, 5, 3, 1, 0, 2, 0, 0, 21, 15, 12, 0, 0, 0, 2, 1, 0, 1]' : 0.110655}", "{'[2, 5, 3, 1, 0, 2, 0, 0, 21, 15, 12, 0, 0, 0, 2, 1, 0, 1]' : 0.110179}", "{'[2, 5, 3, 1, 0, 2, 0, 0, 21, 15, 12, 0, 0, 0, 2, 1, 0, 1]' : 0.110185}", "{'[2, 5, 3, 1, 0, 2, 0, 0, 21, 15, 12, 0, 0, 0, 2, 1, 0, 1]' : 0.110133}", "{'[2, 5, 3, 1, 0, 2, 0, 0, 21, 15, 12, 0, 0, 0, 2, 1, 0, 1]' : 0.110087}", "{'[2, 5, 3, 1, 0, 2, 0, 0, 21, 15, 12, 0, 0, 0, 2, 1, 0, 1]' : 0.110152}", "{'[2, 5, 3, 1, 0, 2, 0, 0, 21, 15, 12, 0, 0, 0, 2, 1, 0, 1]' : 0.110435}", "{'[2, 5, 3, 1, 0, 2, 0, 0, 21, 15, 12, 0, 0, 0, 2, 1, 0, 1]' : 0.110526}", "{'[2, 5, 3, 1, 0, 2, 0, 0, 21, 15, 12, 0, 0, 0, 2, 1, 0, 1]' : 0.110222}", "{'[2, 5, 3, 1, 0, 2, 0, 0, 21, 15, 12, 0, 0, 0, 2, 1, 0, 1]' : 0.110158}", "{'[2, 5, 3, 1, 0, 2, 0, 0, 21, 15, 12, 0, 0, 0, 2, 1, 0, 1]' : 0.110106}", "{'[2, 5, 3, 1, 0, 2, 0, 0, 21, 15, 12, 0, 0, 0, 2, 1, 0, 1]' : 0.110146}", "{'[2, 5, 3, 1, 0, 2, 0, 0, 21, 15, 12, 0, 0, 0, 2, 1, 0, 1]' : 0.110372}"]
returning from 'run': {'[2, 5, 3, 1, 0, 2, 0, 0, 21, 15, 12, 0, 0, 0, 2, 1, 0, 1]': ([0.110223, 0.110185, 0.110273, 0.11033, 0.110391, 0.110172, 0.110233, 0.110094, 0.110143, 0.110184, 0.110208, 0.110102, 0.110161, 0.110359, 0.110365, 0.110083, 0.110263, 0.110655, 0.110179, 0.110185, 0.110133, 0.110087, 0.110152, 0.110435, 0.110526, 0.110222, 0.110158, 0.110106, 0.110146, 0.110372], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 5, 3, 1, 0, 2, 0, 0, 21, 15, 12, 0, 0, 0, 2, 1, 0, 1]': ([0.110223, 0.110185, 0.110273, 0.11033, 0.110391, 0.110172, 0.110233, 0.110094, 0.110143, 0.110184, 0.110208, 0.110102, 0.110161, 0.110359, 0.110365, 0.110083, 0.110263, 0.110655, 0.110179, 0.110185, 0.110133, 0.110087, 0.110152, 0.110435, 0.110526, 0.110222, 0.110158, 0.110106, 0.110146, 0.110372], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	5
        Additions: 		4554
        Multiplications: 	1122
        Divisions: 		0
        Logical: 		0
        Reads: 			6744
        Writes: 		619
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest67.exe __orio_perftest67.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest67.exe  
Program Test Output: 
{'[3, 5, 1, 0, 0, 5, 1, 1, 0, 0, 4, 9, 2, 0, 0, 0, 1, 0]' : 0.249433}
{'[3, 5, 1, 0, 0, 5, 1, 1, 0, 0, 4, 9, 2, 0, 0, 0, 1, 0]' : 0.242375}
{'[3, 5, 1, 0, 0, 5, 1, 1, 0, 0, 4, 9, 2, 0, 0, 0, 1, 0]' : 0.214573}
{'[3, 5, 1, 0, 0, 5, 1, 1, 0, 0, 4, 9, 2, 0, 0, 0, 1, 0]' : 0.214248}
{'[3, 5, 1, 0, 0, 5, 1, 1, 0, 0, 4, 9, 2, 0, 0, 0, 1, 0]' : 0.214117}
{'[3, 5, 1, 0, 0, 5, 1, 1, 0, 0, 4, 9, 2, 0, 0, 0, 1, 0]' : 0.2144}
{'[3, 5, 1, 0, 0, 5, 1, 1, 0, 0, 4, 9, 2, 0, 0, 0, 1, 0]' : 0.215293}
{'[3, 5, 1, 0, 0, 5, 1, 1, 0, 0, 4, 9, 2, 0, 0, 0, 1, 0]' : 0.213761}
{'[3, 5, 1, 0, 0, 5, 1, 1, 0, 0, 4, 9, 2, 0, 0, 0, 1, 0]' : 0.216416}
{'[3, 5, 1, 0, 0, 5, 1, 1, 0, 0, 4, 9, 2, 0, 0, 0, 1, 0]' : 0.21456}
{'[3, 5, 1, 0, 0, 5, 1, 1, 0, 0, 4, 9, 2, 0, 0, 0, 1, 0]' : 0.213841}
{'[3, 5, 1, 0, 0, 5, 1, 1, 0, 0, 4, 9, 2, 0, 0, 0, 1, 0]' : 0.213811}
{'[3, 5, 1, 0, 0, 5, 1, 1, 0, 0, 4, 9, 2, 0, 0, 0, 1, 0]' : 0.214674}
{'[3, 5, 1, 0, 0, 5, 1, 1, 0, 0, 4, 9, 2, 0, 0, 0, 1, 0]' : 0.216226}
{'[3, 5, 1, 0, 0, 5, 1, 1, 0, 0, 4, 9, 2, 0, 0, 0, 1, 0]' : 0.213725}
{'[3, 5, 1, 0, 0, 5, 1, 1, 0, 0, 4, 9, 2, 0, 0, 0, 1, 0]' : 0.215547}
{'[3, 5, 1, 0, 0, 5, 1, 1, 0, 0, 4, 9, 2, 0, 0, 0, 1, 0]' : 0.213946}
{'[3, 5, 1, 0, 0, 5, 1, 1, 0, 0, 4, 9, 2, 0, 0, 0, 1, 0]' : 0.214776}
{'[3, 5, 1, 0, 0, 5, 1, 1, 0, 0, 4, 9, 2, 0, 0, 0, 1, 0]' : 0.213896}
{'[3, 5, 1, 0, 0, 5, 1, 1, 0, 0, 4, 9, 2, 0, 0, 0, 1, 0]' : 0.214028}
{'[3, 5, 1, 0, 0, 5, 1, 1, 0, 0, 4, 9, 2, 0, 0, 0, 1, 0]' : 0.214111}
{'[3, 5, 1, 0, 0, 5, 1, 1, 0, 0, 4, 9, 2, 0, 0, 0, 1, 0]' : 0.214244}
{'[3, 5, 1, 0, 0, 5, 1, 1, 0, 0, 4, 9, 2, 0, 0, 0, 1, 0]' : 0.215181}
{'[3, 5, 1, 0, 0, 5, 1, 1, 0, 0, 4, 9, 2, 0, 0, 0, 1, 0]' : 0.214933}
{'[3, 5, 1, 0, 0, 5, 1, 1, 0, 0, 4, 9, 2, 0, 0, 0, 1, 0]' : 0.21525}
{'[3, 5, 1, 0, 0, 5, 1, 1, 0, 0, 4, 9, 2, 0, 0, 0, 1, 0]' : 0.214855}
{'[3, 5, 1, 0, 0, 5, 1, 1, 0, 0, 4, 9, 2, 0, 0, 0, 1, 0]' : 0.213842}
{'[3, 5, 1, 0, 0, 5, 1, 1, 0, 0, 4, 9, 2, 0, 0, 0, 1, 0]' : 0.21435}
{'[3, 5, 1, 0, 0, 5, 1, 1, 0, 0, 4, 9, 2, 0, 0, 0, 1, 0]' : 0.219717}
{'[3, 5, 1, 0, 0, 5, 1, 1, 0, 0, 4, 9, 2, 0, 0, 0, 1, 0]' : 0.221831}

out:
 ["{'[3, 5, 1, 0, 0, 5, 1, 1, 0, 0, 4, 9, 2, 0, 0, 0, 1, 0]' : 0.249433}", "{'[3, 5, 1, 0, 0, 5, 1, 1, 0, 0, 4, 9, 2, 0, 0, 0, 1, 0]' : 0.242375}", "{'[3, 5, 1, 0, 0, 5, 1, 1, 0, 0, 4, 9, 2, 0, 0, 0, 1, 0]' : 0.214573}", "{'[3, 5, 1, 0, 0, 5, 1, 1, 0, 0, 4, 9, 2, 0, 0, 0, 1, 0]' : 0.214248}", "{'[3, 5, 1, 0, 0, 5, 1, 1, 0, 0, 4, 9, 2, 0, 0, 0, 1, 0]' : 0.214117}", "{'[3, 5, 1, 0, 0, 5, 1, 1, 0, 0, 4, 9, 2, 0, 0, 0, 1, 0]' : 0.2144}", "{'[3, 5, 1, 0, 0, 5, 1, 1, 0, 0, 4, 9, 2, 0, 0, 0, 1, 0]' : 0.215293}", "{'[3, 5, 1, 0, 0, 5, 1, 1, 0, 0, 4, 9, 2, 0, 0, 0, 1, 0]' : 0.213761}", "{'[3, 5, 1, 0, 0, 5, 1, 1, 0, 0, 4, 9, 2, 0, 0, 0, 1, 0]' : 0.216416}", "{'[3, 5, 1, 0, 0, 5, 1, 1, 0, 0, 4, 9, 2, 0, 0, 0, 1, 0]' : 0.21456}", "{'[3, 5, 1, 0, 0, 5, 1, 1, 0, 0, 4, 9, 2, 0, 0, 0, 1, 0]' : 0.213841}", "{'[3, 5, 1, 0, 0, 5, 1, 1, 0, 0, 4, 9, 2, 0, 0, 0, 1, 0]' : 0.213811}", "{'[3, 5, 1, 0, 0, 5, 1, 1, 0, 0, 4, 9, 2, 0, 0, 0, 1, 0]' : 0.214674}", "{'[3, 5, 1, 0, 0, 5, 1, 1, 0, 0, 4, 9, 2, 0, 0, 0, 1, 0]' : 0.216226}", "{'[3, 5, 1, 0, 0, 5, 1, 1, 0, 0, 4, 9, 2, 0, 0, 0, 1, 0]' : 0.213725}", "{'[3, 5, 1, 0, 0, 5, 1, 1, 0, 0, 4, 9, 2, 0, 0, 0, 1, 0]' : 0.215547}", "{'[3, 5, 1, 0, 0, 5, 1, 1, 0, 0, 4, 9, 2, 0, 0, 0, 1, 0]' : 0.213946}", "{'[3, 5, 1, 0, 0, 5, 1, 1, 0, 0, 4, 9, 2, 0, 0, 0, 1, 0]' : 0.214776}", "{'[3, 5, 1, 0, 0, 5, 1, 1, 0, 0, 4, 9, 2, 0, 0, 0, 1, 0]' : 0.213896}", "{'[3, 5, 1, 0, 0, 5, 1, 1, 0, 0, 4, 9, 2, 0, 0, 0, 1, 0]' : 0.214028}", "{'[3, 5, 1, 0, 0, 5, 1, 1, 0, 0, 4, 9, 2, 0, 0, 0, 1, 0]' : 0.214111}", "{'[3, 5, 1, 0, 0, 5, 1, 1, 0, 0, 4, 9, 2, 0, 0, 0, 1, 0]' : 0.214244}", "{'[3, 5, 1, 0, 0, 5, 1, 1, 0, 0, 4, 9, 2, 0, 0, 0, 1, 0]' : 0.215181}", "{'[3, 5, 1, 0, 0, 5, 1, 1, 0, 0, 4, 9, 2, 0, 0, 0, 1, 0]' : 0.214933}", "{'[3, 5, 1, 0, 0, 5, 1, 1, 0, 0, 4, 9, 2, 0, 0, 0, 1, 0]' : 0.21525}", "{'[3, 5, 1, 0, 0, 5, 1, 1, 0, 0, 4, 9, 2, 0, 0, 0, 1, 0]' : 0.214855}", "{'[3, 5, 1, 0, 0, 5, 1, 1, 0, 0, 4, 9, 2, 0, 0, 0, 1, 0]' : 0.213842}", "{'[3, 5, 1, 0, 0, 5, 1, 1, 0, 0, 4, 9, 2, 0, 0, 0, 1, 0]' : 0.21435}", "{'[3, 5, 1, 0, 0, 5, 1, 1, 0, 0, 4, 9, 2, 0, 0, 0, 1, 0]' : 0.219717}", "{'[3, 5, 1, 0, 0, 5, 1, 1, 0, 0, 4, 9, 2, 0, 0, 0, 1, 0]' : 0.221831}"]
returning from 'run': {'[3, 5, 1, 0, 0, 5, 1, 1, 0, 0, 4, 9, 2, 0, 0, 0, 1, 0]': ([0.249433, 0.242375, 0.214573, 0.214248, 0.214117, 0.2144, 0.215293, 0.213761, 0.216416, 0.21456, 0.213841, 0.213811, 0.214674, 0.216226, 0.213725, 0.215547, 0.213946, 0.214776, 0.213896, 0.214028, 0.214111, 0.214244, 0.215181, 0.214933, 0.21525, 0.214855, 0.213842, 0.21435, 0.219717, 0.221831], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 5, 1, 0, 0, 5, 1, 1, 0, 0, 4, 9, 2, 0, 0, 0, 1, 0]': ([0.249433, 0.242375, 0.214573, 0.214248, 0.214117, 0.2144, 0.215293, 0.213761, 0.216416, 0.21456, 0.213841, 0.213811, 0.214674, 0.216226, 0.213725, 0.215547, 0.213946, 0.214776, 0.213896, 0.214028, 0.214111, 0.214244, 0.215181, 0.214933, 0.21525, 0.214855, 0.213842, 0.21435, 0.219717, 0.221831], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = kkk
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	4
        Additions: 		246
        Multiplications: 	84
        Divisions: 		0
        Logical: 		0
        Reads: 			516
        Writes: 		96
        Comparisons:		10
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest68.exe __orio_perftest68.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest68.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest68.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest68.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest68.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		263
        Multiplications: 	86
        Divisions: 		0
        Logical: 		0
        Reads: 			559
        Writes: 		109
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest69.exe __orio_perftest69.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest69.exe  
Program Test Output: 
{'[2, 5, 0, 6, 0, 3, 1, 0, 3, 0, 29, 10, 0, 0, 0, 1, 1, 1]' : 0.208264}
{'[2, 5, 0, 6, 0, 3, 1, 0, 3, 0, 29, 10, 0, 0, 0, 1, 1, 1]' : 0.208152}
{'[2, 5, 0, 6, 0, 3, 1, 0, 3, 0, 29, 10, 0, 0, 0, 1, 1, 1]' : 0.207853}
{'[2, 5, 0, 6, 0, 3, 1, 0, 3, 0, 29, 10, 0, 0, 0, 1, 1, 1]' : 0.178135}
{'[2, 5, 0, 6, 0, 3, 1, 0, 3, 0, 29, 10, 0, 0, 0, 1, 1, 1]' : 0.175416}
{'[2, 5, 0, 6, 0, 3, 1, 0, 3, 0, 29, 10, 0, 0, 0, 1, 1, 1]' : 0.175302}
{'[2, 5, 0, 6, 0, 3, 1, 0, 3, 0, 29, 10, 0, 0, 0, 1, 1, 1]' : 0.180841}
{'[2, 5, 0, 6, 0, 3, 1, 0, 3, 0, 29, 10, 0, 0, 0, 1, 1, 1]' : 0.180665}
{'[2, 5, 0, 6, 0, 3, 1, 0, 3, 0, 29, 10, 0, 0, 0, 1, 1, 1]' : 0.180641}
{'[2, 5, 0, 6, 0, 3, 1, 0, 3, 0, 29, 10, 0, 0, 0, 1, 1, 1]' : 0.18063}
{'[2, 5, 0, 6, 0, 3, 1, 0, 3, 0, 29, 10, 0, 0, 0, 1, 1, 1]' : 0.18088}
{'[2, 5, 0, 6, 0, 3, 1, 0, 3, 0, 29, 10, 0, 0, 0, 1, 1, 1]' : 0.180831}
{'[2, 5, 0, 6, 0, 3, 1, 0, 3, 0, 29, 10, 0, 0, 0, 1, 1, 1]' : 0.180579}
{'[2, 5, 0, 6, 0, 3, 1, 0, 3, 0, 29, 10, 0, 0, 0, 1, 1, 1]' : 0.18066}
{'[2, 5, 0, 6, 0, 3, 1, 0, 3, 0, 29, 10, 0, 0, 0, 1, 1, 1]' : 0.181246}
{'[2, 5, 0, 6, 0, 3, 1, 0, 3, 0, 29, 10, 0, 0, 0, 1, 1, 1]' : 0.180688}
{'[2, 5, 0, 6, 0, 3, 1, 0, 3, 0, 29, 10, 0, 0, 0, 1, 1, 1]' : 0.180573}
{'[2, 5, 0, 6, 0, 3, 1, 0, 3, 0, 29, 10, 0, 0, 0, 1, 1, 1]' : 0.181001}
{'[2, 5, 0, 6, 0, 3, 1, 0, 3, 0, 29, 10, 0, 0, 0, 1, 1, 1]' : 0.180551}
{'[2, 5, 0, 6, 0, 3, 1, 0, 3, 0, 29, 10, 0, 0, 0, 1, 1, 1]' : 0.180771}
{'[2, 5, 0, 6, 0, 3, 1, 0, 3, 0, 29, 10, 0, 0, 0, 1, 1, 1]' : 0.180695}
{'[2, 5, 0, 6, 0, 3, 1, 0, 3, 0, 29, 10, 0, 0, 0, 1, 1, 1]' : 0.180573}
{'[2, 5, 0, 6, 0, 3, 1, 0, 3, 0, 29, 10, 0, 0, 0, 1, 1, 1]' : 0.180634}
{'[2, 5, 0, 6, 0, 3, 1, 0, 3, 0, 29, 10, 0, 0, 0, 1, 1, 1]' : 0.181005}
{'[2, 5, 0, 6, 0, 3, 1, 0, 3, 0, 29, 10, 0, 0, 0, 1, 1, 1]' : 0.180627}
{'[2, 5, 0, 6, 0, 3, 1, 0, 3, 0, 29, 10, 0, 0, 0, 1, 1, 1]' : 0.180498}
{'[2, 5, 0, 6, 0, 3, 1, 0, 3, 0, 29, 10, 0, 0, 0, 1, 1, 1]' : 0.180708}
{'[2, 5, 0, 6, 0, 3, 1, 0, 3, 0, 29, 10, 0, 0, 0, 1, 1, 1]' : 0.180636}
{'[2, 5, 0, 6, 0, 3, 1, 0, 3, 0, 29, 10, 0, 0, 0, 1, 1, 1]' : 0.180695}
{'[2, 5, 0, 6, 0, 3, 1, 0, 3, 0, 29, 10, 0, 0, 0, 1, 1, 1]' : 0.180941}

out:
 ["{'[2, 5, 0, 6, 0, 3, 1, 0, 3, 0, 29, 10, 0, 0, 0, 1, 1, 1]' : 0.208264}", "{'[2, 5, 0, 6, 0, 3, 1, 0, 3, 0, 29, 10, 0, 0, 0, 1, 1, 1]' : 0.208152}", "{'[2, 5, 0, 6, 0, 3, 1, 0, 3, 0, 29, 10, 0, 0, 0, 1, 1, 1]' : 0.207853}", "{'[2, 5, 0, 6, 0, 3, 1, 0, 3, 0, 29, 10, 0, 0, 0, 1, 1, 1]' : 0.178135}", "{'[2, 5, 0, 6, 0, 3, 1, 0, 3, 0, 29, 10, 0, 0, 0, 1, 1, 1]' : 0.175416}", "{'[2, 5, 0, 6, 0, 3, 1, 0, 3, 0, 29, 10, 0, 0, 0, 1, 1, 1]' : 0.175302}", "{'[2, 5, 0, 6, 0, 3, 1, 0, 3, 0, 29, 10, 0, 0, 0, 1, 1, 1]' : 0.180841}", "{'[2, 5, 0, 6, 0, 3, 1, 0, 3, 0, 29, 10, 0, 0, 0, 1, 1, 1]' : 0.180665}", "{'[2, 5, 0, 6, 0, 3, 1, 0, 3, 0, 29, 10, 0, 0, 0, 1, 1, 1]' : 0.180641}", "{'[2, 5, 0, 6, 0, 3, 1, 0, 3, 0, 29, 10, 0, 0, 0, 1, 1, 1]' : 0.18063}", "{'[2, 5, 0, 6, 0, 3, 1, 0, 3, 0, 29, 10, 0, 0, 0, 1, 1, 1]' : 0.18088}", "{'[2, 5, 0, 6, 0, 3, 1, 0, 3, 0, 29, 10, 0, 0, 0, 1, 1, 1]' : 0.180831}", "{'[2, 5, 0, 6, 0, 3, 1, 0, 3, 0, 29, 10, 0, 0, 0, 1, 1, 1]' : 0.180579}", "{'[2, 5, 0, 6, 0, 3, 1, 0, 3, 0, 29, 10, 0, 0, 0, 1, 1, 1]' : 0.18066}", "{'[2, 5, 0, 6, 0, 3, 1, 0, 3, 0, 29, 10, 0, 0, 0, 1, 1, 1]' : 0.181246}", "{'[2, 5, 0, 6, 0, 3, 1, 0, 3, 0, 29, 10, 0, 0, 0, 1, 1, 1]' : 0.180688}", "{'[2, 5, 0, 6, 0, 3, 1, 0, 3, 0, 29, 10, 0, 0, 0, 1, 1, 1]' : 0.180573}", "{'[2, 5, 0, 6, 0, 3, 1, 0, 3, 0, 29, 10, 0, 0, 0, 1, 1, 1]' : 0.181001}", "{'[2, 5, 0, 6, 0, 3, 1, 0, 3, 0, 29, 10, 0, 0, 0, 1, 1, 1]' : 0.180551}", "{'[2, 5, 0, 6, 0, 3, 1, 0, 3, 0, 29, 10, 0, 0, 0, 1, 1, 1]' : 0.180771}", "{'[2, 5, 0, 6, 0, 3, 1, 0, 3, 0, 29, 10, 0, 0, 0, 1, 1, 1]' : 0.180695}", "{'[2, 5, 0, 6, 0, 3, 1, 0, 3, 0, 29, 10, 0, 0, 0, 1, 1, 1]' : 0.180573}", "{'[2, 5, 0, 6, 0, 3, 1, 0, 3, 0, 29, 10, 0, 0, 0, 1, 1, 1]' : 0.180634}", "{'[2, 5, 0, 6, 0, 3, 1, 0, 3, 0, 29, 10, 0, 0, 0, 1, 1, 1]' : 0.181005}", "{'[2, 5, 0, 6, 0, 3, 1, 0, 3, 0, 29, 10, 0, 0, 0, 1, 1, 1]' : 0.180627}", "{'[2, 5, 0, 6, 0, 3, 1, 0, 3, 0, 29, 10, 0, 0, 0, 1, 1, 1]' : 0.180498}", "{'[2, 5, 0, 6, 0, 3, 1, 0, 3, 0, 29, 10, 0, 0, 0, 1, 1, 1]' : 0.180708}", "{'[2, 5, 0, 6, 0, 3, 1, 0, 3, 0, 29, 10, 0, 0, 0, 1, 1, 1]' : 0.180636}", "{'[2, 5, 0, 6, 0, 3, 1, 0, 3, 0, 29, 10, 0, 0, 0, 1, 1, 1]' : 0.180695}", "{'[2, 5, 0, 6, 0, 3, 1, 0, 3, 0, 29, 10, 0, 0, 0, 1, 1, 1]' : 0.180941}"]
returning from 'run': {'[2, 5, 0, 6, 0, 3, 1, 0, 3, 0, 29, 10, 0, 0, 0, 1, 1, 1]': ([0.208264, 0.208152, 0.207853, 0.178135, 0.175416, 0.175302, 0.180841, 0.180665, 0.180641, 0.18063, 0.18088, 0.180831, 0.180579, 0.18066, 0.181246, 0.180688, 0.180573, 0.181001, 0.180551, 0.180771, 0.180695, 0.180573, 0.180634, 0.181005, 0.180627, 0.180498, 0.180708, 0.180636, 0.180695, 0.180941], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 5, 0, 6, 0, 3, 1, 0, 3, 0, 29, 10, 0, 0, 0, 1, 1, 1]': ([0.208264, 0.208152, 0.207853, 0.178135, 0.175416, 0.175302, 0.180841, 0.180665, 0.180641, 0.18063, 0.18088, 0.180831, 0.180579, 0.18066, 0.181246, 0.180688, 0.180573, 0.181001, 0.180551, 0.180771, 0.180695, 0.180573, 0.180634, 0.181005, 0.180627, 0.180498, 0.180708, 0.180636, 0.180695, 0.180941], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	80
        Max loop nest depth: 	5
        Additions: 		7765
        Multiplications: 	2240
        Divisions: 		0
        Logical: 		0
        Reads: 			12258
        Writes: 		1410
        Comparisons:		80
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest70.exe __orio_perftest70.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest70.exe  
Program Test Output: 
{'[5, 5, 3, 0, 0, 3, 0, 1, 29, 25, 29, 0, 1, 0, 0, 0, 1, 1]' : 0.103695}
{'[5, 5, 3, 0, 0, 3, 0, 1, 29, 25, 29, 0, 1, 0, 0, 0, 1, 1]' : 0.103774}
{'[5, 5, 3, 0, 0, 3, 0, 1, 29, 25, 29, 0, 1, 0, 0, 0, 1, 1]' : 0.103562}
{'[5, 5, 3, 0, 0, 3, 0, 1, 29, 25, 29, 0, 1, 0, 0, 0, 1, 1]' : 0.103688}
{'[5, 5, 3, 0, 0, 3, 0, 1, 29, 25, 29, 0, 1, 0, 0, 0, 1, 1]' : 0.103702}
{'[5, 5, 3, 0, 0, 3, 0, 1, 29, 25, 29, 0, 1, 0, 0, 0, 1, 1]' : 0.103686}
{'[5, 5, 3, 0, 0, 3, 0, 1, 29, 25, 29, 0, 1, 0, 0, 0, 1, 1]' : 0.103565}
{'[5, 5, 3, 0, 0, 3, 0, 1, 29, 25, 29, 0, 1, 0, 0, 0, 1, 1]' : 0.104084}
{'[5, 5, 3, 0, 0, 3, 0, 1, 29, 25, 29, 0, 1, 0, 0, 0, 1, 1]' : 0.104384}
{'[5, 5, 3, 0, 0, 3, 0, 1, 29, 25, 29, 0, 1, 0, 0, 0, 1, 1]' : 0.104727}
{'[5, 5, 3, 0, 0, 3, 0, 1, 29, 25, 29, 0, 1, 0, 0, 0, 1, 1]' : 0.103838}
{'[5, 5, 3, 0, 0, 3, 0, 1, 29, 25, 29, 0, 1, 0, 0, 0, 1, 1]' : 0.103672}
{'[5, 5, 3, 0, 0, 3, 0, 1, 29, 25, 29, 0, 1, 0, 0, 0, 1, 1]' : 0.103458}
{'[5, 5, 3, 0, 0, 3, 0, 1, 29, 25, 29, 0, 1, 0, 0, 0, 1, 1]' : 0.103467}
{'[5, 5, 3, 0, 0, 3, 0, 1, 29, 25, 29, 0, 1, 0, 0, 0, 1, 1]' : 0.103572}
{'[5, 5, 3, 0, 0, 3, 0, 1, 29, 25, 29, 0, 1, 0, 0, 0, 1, 1]' : 0.10371}
{'[5, 5, 3, 0, 0, 3, 0, 1, 29, 25, 29, 0, 1, 0, 0, 0, 1, 1]' : 0.103676}
{'[5, 5, 3, 0, 0, 3, 0, 1, 29, 25, 29, 0, 1, 0, 0, 0, 1, 1]' : 0.103749}
{'[5, 5, 3, 0, 0, 3, 0, 1, 29, 25, 29, 0, 1, 0, 0, 0, 1, 1]' : 0.1053}
{'[5, 5, 3, 0, 0, 3, 0, 1, 29, 25, 29, 0, 1, 0, 0, 0, 1, 1]' : 0.103654}
{'[5, 5, 3, 0, 0, 3, 0, 1, 29, 25, 29, 0, 1, 0, 0, 0, 1, 1]' : 0.103631}
{'[5, 5, 3, 0, 0, 3, 0, 1, 29, 25, 29, 0, 1, 0, 0, 0, 1, 1]' : 0.103711}
{'[5, 5, 3, 0, 0, 3, 0, 1, 29, 25, 29, 0, 1, 0, 0, 0, 1, 1]' : 0.103486}
{'[5, 5, 3, 0, 0, 3, 0, 1, 29, 25, 29, 0, 1, 0, 0, 0, 1, 1]' : 0.103397}
{'[5, 5, 3, 0, 0, 3, 0, 1, 29, 25, 29, 0, 1, 0, 0, 0, 1, 1]' : 0.103691}
{'[5, 5, 3, 0, 0, 3, 0, 1, 29, 25, 29, 0, 1, 0, 0, 0, 1, 1]' : 0.103806}
{'[5, 5, 3, 0, 0, 3, 0, 1, 29, 25, 29, 0, 1, 0, 0, 0, 1, 1]' : 0.103533}
{'[5, 5, 3, 0, 0, 3, 0, 1, 29, 25, 29, 0, 1, 0, 0, 0, 1, 1]' : 0.103692}
{'[5, 5, 3, 0, 0, 3, 0, 1, 29, 25, 29, 0, 1, 0, 0, 0, 1, 1]' : 0.105198}
{'[5, 5, 3, 0, 0, 3, 0, 1, 29, 25, 29, 0, 1, 0, 0, 0, 1, 1]' : 0.103673}

out:
 ["{'[5, 5, 3, 0, 0, 3, 0, 1, 29, 25, 29, 0, 1, 0, 0, 0, 1, 1]' : 0.103695}", "{'[5, 5, 3, 0, 0, 3, 0, 1, 29, 25, 29, 0, 1, 0, 0, 0, 1, 1]' : 0.103774}", "{'[5, 5, 3, 0, 0, 3, 0, 1, 29, 25, 29, 0, 1, 0, 0, 0, 1, 1]' : 0.103562}", "{'[5, 5, 3, 0, 0, 3, 0, 1, 29, 25, 29, 0, 1, 0, 0, 0, 1, 1]' : 0.103688}", "{'[5, 5, 3, 0, 0, 3, 0, 1, 29, 25, 29, 0, 1, 0, 0, 0, 1, 1]' : 0.103702}", "{'[5, 5, 3, 0, 0, 3, 0, 1, 29, 25, 29, 0, 1, 0, 0, 0, 1, 1]' : 0.103686}", "{'[5, 5, 3, 0, 0, 3, 0, 1, 29, 25, 29, 0, 1, 0, 0, 0, 1, 1]' : 0.103565}", "{'[5, 5, 3, 0, 0, 3, 0, 1, 29, 25, 29, 0, 1, 0, 0, 0, 1, 1]' : 0.104084}", "{'[5, 5, 3, 0, 0, 3, 0, 1, 29, 25, 29, 0, 1, 0, 0, 0, 1, 1]' : 0.104384}", "{'[5, 5, 3, 0, 0, 3, 0, 1, 29, 25, 29, 0, 1, 0, 0, 0, 1, 1]' : 0.104727}", "{'[5, 5, 3, 0, 0, 3, 0, 1, 29, 25, 29, 0, 1, 0, 0, 0, 1, 1]' : 0.103838}", "{'[5, 5, 3, 0, 0, 3, 0, 1, 29, 25, 29, 0, 1, 0, 0, 0, 1, 1]' : 0.103672}", "{'[5, 5, 3, 0, 0, 3, 0, 1, 29, 25, 29, 0, 1, 0, 0, 0, 1, 1]' : 0.103458}", "{'[5, 5, 3, 0, 0, 3, 0, 1, 29, 25, 29, 0, 1, 0, 0, 0, 1, 1]' : 0.103467}", "{'[5, 5, 3, 0, 0, 3, 0, 1, 29, 25, 29, 0, 1, 0, 0, 0, 1, 1]' : 0.103572}", "{'[5, 5, 3, 0, 0, 3, 0, 1, 29, 25, 29, 0, 1, 0, 0, 0, 1, 1]' : 0.10371}", "{'[5, 5, 3, 0, 0, 3, 0, 1, 29, 25, 29, 0, 1, 0, 0, 0, 1, 1]' : 0.103676}", "{'[5, 5, 3, 0, 0, 3, 0, 1, 29, 25, 29, 0, 1, 0, 0, 0, 1, 1]' : 0.103749}", "{'[5, 5, 3, 0, 0, 3, 0, 1, 29, 25, 29, 0, 1, 0, 0, 0, 1, 1]' : 0.1053}", "{'[5, 5, 3, 0, 0, 3, 0, 1, 29, 25, 29, 0, 1, 0, 0, 0, 1, 1]' : 0.103654}", "{'[5, 5, 3, 0, 0, 3, 0, 1, 29, 25, 29, 0, 1, 0, 0, 0, 1, 1]' : 0.103631}", "{'[5, 5, 3, 0, 0, 3, 0, 1, 29, 25, 29, 0, 1, 0, 0, 0, 1, 1]' : 0.103711}", "{'[5, 5, 3, 0, 0, 3, 0, 1, 29, 25, 29, 0, 1, 0, 0, 0, 1, 1]' : 0.103486}", "{'[5, 5, 3, 0, 0, 3, 0, 1, 29, 25, 29, 0, 1, 0, 0, 0, 1, 1]' : 0.103397}", "{'[5, 5, 3, 0, 0, 3, 0, 1, 29, 25, 29, 0, 1, 0, 0, 0, 1, 1]' : 0.103691}", "{'[5, 5, 3, 0, 0, 3, 0, 1, 29, 25, 29, 0, 1, 0, 0, 0, 1, 1]' : 0.103806}", "{'[5, 5, 3, 0, 0, 3, 0, 1, 29, 25, 29, 0, 1, 0, 0, 0, 1, 1]' : 0.103533}", "{'[5, 5, 3, 0, 0, 3, 0, 1, 29, 25, 29, 0, 1, 0, 0, 0, 1, 1]' : 0.103692}", "{'[5, 5, 3, 0, 0, 3, 0, 1, 29, 25, 29, 0, 1, 0, 0, 0, 1, 1]' : 0.105198}", "{'[5, 5, 3, 0, 0, 3, 0, 1, 29, 25, 29, 0, 1, 0, 0, 0, 1, 1]' : 0.103673}"]
returning from 'run': {'[5, 5, 3, 0, 0, 3, 0, 1, 29, 25, 29, 0, 1, 0, 0, 0, 1, 1]': ([0.103695, 0.103774, 0.103562, 0.103688, 0.103702, 0.103686, 0.103565, 0.104084, 0.104384, 0.104727, 0.103838, 0.103672, 0.103458, 0.103467, 0.103572, 0.10371, 0.103676, 0.103749, 0.1053, 0.103654, 0.103631, 0.103711, 0.103486, 0.103397, 0.103691, 0.103806, 0.103533, 0.103692, 0.105198, 0.103673], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 5, 3, 0, 0, 3, 0, 1, 29, 25, 29, 0, 1, 0, 0, 0, 1, 1]': ([0.103695, 0.103774, 0.103562, 0.103688, 0.103702, 0.103686, 0.103565, 0.104084, 0.104384, 0.104727, 0.103838, 0.103672, 0.103458, 0.103467, 0.103572, 0.10371, 0.103676, 0.103749, 0.1053, 0.103654, 0.103631, 0.103711, 0.103486, 0.103397, 0.103691, 0.103806, 0.103533, 0.103692, 0.105198, 0.103673], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	49
        Max loop nest depth: 	6
        Additions: 		1470
        Multiplications: 	370
        Divisions: 		0
        Logical: 		0
        Reads: 			2617
        Writes: 		351
        Comparisons:		49
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest71.exe __orio_perftest71.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest71.exe  
Program Test Output: 
{'[6, 5, 0, 6, 4, 6, 1, 1, 21, 3, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.172531}
{'[6, 5, 0, 6, 4, 6, 1, 1, 21, 3, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.171651}
{'[6, 5, 0, 6, 4, 6, 1, 1, 21, 3, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.172447}
{'[6, 5, 0, 6, 4, 6, 1, 1, 21, 3, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.158534}
{'[6, 5, 0, 6, 4, 6, 1, 1, 21, 3, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.15565}
{'[6, 5, 0, 6, 4, 6, 1, 1, 21, 3, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.156017}
{'[6, 5, 0, 6, 4, 6, 1, 1, 21, 3, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.156124}
{'[6, 5, 0, 6, 4, 6, 1, 1, 21, 3, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.155744}
{'[6, 5, 0, 6, 4, 6, 1, 1, 21, 3, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.155141}
{'[6, 5, 0, 6, 4, 6, 1, 1, 21, 3, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.155337}
{'[6, 5, 0, 6, 4, 6, 1, 1, 21, 3, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.155773}
{'[6, 5, 0, 6, 4, 6, 1, 1, 21, 3, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.155954}
{'[6, 5, 0, 6, 4, 6, 1, 1, 21, 3, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.155603}
{'[6, 5, 0, 6, 4, 6, 1, 1, 21, 3, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.156257}
{'[6, 5, 0, 6, 4, 6, 1, 1, 21, 3, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.155436}
{'[6, 5, 0, 6, 4, 6, 1, 1, 21, 3, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.154998}
{'[6, 5, 0, 6, 4, 6, 1, 1, 21, 3, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.155066}
{'[6, 5, 0, 6, 4, 6, 1, 1, 21, 3, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.154781}
{'[6, 5, 0, 6, 4, 6, 1, 1, 21, 3, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.155591}
{'[6, 5, 0, 6, 4, 6, 1, 1, 21, 3, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.156124}
{'[6, 5, 0, 6, 4, 6, 1, 1, 21, 3, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.155798}
{'[6, 5, 0, 6, 4, 6, 1, 1, 21, 3, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.156204}
{'[6, 5, 0, 6, 4, 6, 1, 1, 21, 3, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.155688}
{'[6, 5, 0, 6, 4, 6, 1, 1, 21, 3, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.155939}
{'[6, 5, 0, 6, 4, 6, 1, 1, 21, 3, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.156018}
{'[6, 5, 0, 6, 4, 6, 1, 1, 21, 3, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.155595}
{'[6, 5, 0, 6, 4, 6, 1, 1, 21, 3, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.155852}
{'[6, 5, 0, 6, 4, 6, 1, 1, 21, 3, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.155959}
{'[6, 5, 0, 6, 4, 6, 1, 1, 21, 3, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.155242}
{'[6, 5, 0, 6, 4, 6, 1, 1, 21, 3, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.155646}

out:
 ["{'[6, 5, 0, 6, 4, 6, 1, 1, 21, 3, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.172531}", "{'[6, 5, 0, 6, 4, 6, 1, 1, 21, 3, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.171651}", "{'[6, 5, 0, 6, 4, 6, 1, 1, 21, 3, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.172447}", "{'[6, 5, 0, 6, 4, 6, 1, 1, 21, 3, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.158534}", "{'[6, 5, 0, 6, 4, 6, 1, 1, 21, 3, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.15565}", "{'[6, 5, 0, 6, 4, 6, 1, 1, 21, 3, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.156017}", "{'[6, 5, 0, 6, 4, 6, 1, 1, 21, 3, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.156124}", "{'[6, 5, 0, 6, 4, 6, 1, 1, 21, 3, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.155744}", "{'[6, 5, 0, 6, 4, 6, 1, 1, 21, 3, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.155141}", "{'[6, 5, 0, 6, 4, 6, 1, 1, 21, 3, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.155337}", "{'[6, 5, 0, 6, 4, 6, 1, 1, 21, 3, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.155773}", "{'[6, 5, 0, 6, 4, 6, 1, 1, 21, 3, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.155954}", "{'[6, 5, 0, 6, 4, 6, 1, 1, 21, 3, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.155603}", "{'[6, 5, 0, 6, 4, 6, 1, 1, 21, 3, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.156257}", "{'[6, 5, 0, 6, 4, 6, 1, 1, 21, 3, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.155436}", "{'[6, 5, 0, 6, 4, 6, 1, 1, 21, 3, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.154998}", "{'[6, 5, 0, 6, 4, 6, 1, 1, 21, 3, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.155066}", "{'[6, 5, 0, 6, 4, 6, 1, 1, 21, 3, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.154781}", "{'[6, 5, 0, 6, 4, 6, 1, 1, 21, 3, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.155591}", "{'[6, 5, 0, 6, 4, 6, 1, 1, 21, 3, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.156124}", "{'[6, 5, 0, 6, 4, 6, 1, 1, 21, 3, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.155798}", "{'[6, 5, 0, 6, 4, 6, 1, 1, 21, 3, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.156204}", "{'[6, 5, 0, 6, 4, 6, 1, 1, 21, 3, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.155688}", "{'[6, 5, 0, 6, 4, 6, 1, 1, 21, 3, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.155939}", "{'[6, 5, 0, 6, 4, 6, 1, 1, 21, 3, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.156018}", "{'[6, 5, 0, 6, 4, 6, 1, 1, 21, 3, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.155595}", "{'[6, 5, 0, 6, 4, 6, 1, 1, 21, 3, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.155852}", "{'[6, 5, 0, 6, 4, 6, 1, 1, 21, 3, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.155959}", "{'[6, 5, 0, 6, 4, 6, 1, 1, 21, 3, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.155242}", "{'[6, 5, 0, 6, 4, 6, 1, 1, 21, 3, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.155646}"]
returning from 'run': {'[6, 5, 0, 6, 4, 6, 1, 1, 21, 3, 2, 0, 2, 0, 0, 0, 0, 1]': ([0.172531, 0.171651, 0.172447, 0.158534, 0.15565, 0.156017, 0.156124, 0.155744, 0.155141, 0.155337, 0.155773, 0.155954, 0.155603, 0.156257, 0.155436, 0.154998, 0.155066, 0.154781, 0.155591, 0.156124, 0.155798, 0.156204, 0.155688, 0.155939, 0.156018, 0.155595, 0.155852, 0.155959, 0.155242, 0.155646], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 5, 0, 6, 4, 6, 1, 1, 21, 3, 2, 0, 2, 0, 0, 0, 0, 1]': ([0.172531, 0.171651, 0.172447, 0.158534, 0.15565, 0.156017, 0.156124, 0.155744, 0.155141, 0.155337, 0.155773, 0.155954, 0.155603, 0.156257, 0.155436, 0.154998, 0.155066, 0.154781, 0.155591, 0.156124, 0.155798, 0.156204, 0.155688, 0.155939, 0.156018, 0.155595, 0.155852, 0.155959, 0.155242, 0.155646], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	23
        Max loop nest depth: 	5
        Additions: 		1876
        Multiplications: 	864
        Divisions: 		0
        Logical: 		0
        Reads: 			3773
        Writes: 		676
        Comparisons:		23
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest72.exe __orio_perftest72.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest72.exe  
Program Test Output: 
{'[0, 5, 2, 2, 6, 2, 0, 0, 11, 0, 8, 28, 1, 0, 1, 1, 1, 0]' : 0.107193}
{'[0, 5, 2, 2, 6, 2, 0, 0, 11, 0, 8, 28, 1, 0, 1, 1, 1, 0]' : 0.107435}
{'[0, 5, 2, 2, 6, 2, 0, 0, 11, 0, 8, 28, 1, 0, 1, 1, 1, 0]' : 0.107133}
{'[0, 5, 2, 2, 6, 2, 0, 0, 11, 0, 8, 28, 1, 0, 1, 1, 1, 0]' : 0.107236}
{'[0, 5, 2, 2, 6, 2, 0, 0, 11, 0, 8, 28, 1, 0, 1, 1, 1, 0]' : 0.10619}
{'[0, 5, 2, 2, 6, 2, 0, 0, 11, 0, 8, 28, 1, 0, 1, 1, 1, 0]' : 0.0956371}
{'[0, 5, 2, 2, 6, 2, 0, 0, 11, 0, 8, 28, 1, 0, 1, 1, 1, 0]' : 0.094331}
{'[0, 5, 2, 2, 6, 2, 0, 0, 11, 0, 8, 28, 1, 0, 1, 1, 1, 0]' : 0.0943851}
{'[0, 5, 2, 2, 6, 2, 0, 0, 11, 0, 8, 28, 1, 0, 1, 1, 1, 0]' : 0.094384}
{'[0, 5, 2, 2, 6, 2, 0, 0, 11, 0, 8, 28, 1, 0, 1, 1, 1, 0]' : 0.0942931}
{'[0, 5, 2, 2, 6, 2, 0, 0, 11, 0, 8, 28, 1, 0, 1, 1, 1, 0]' : 0.094625}
{'[0, 5, 2, 2, 6, 2, 0, 0, 11, 0, 8, 28, 1, 0, 1, 1, 1, 0]' : 0.0947649}
{'[0, 5, 2, 2, 6, 2, 0, 0, 11, 0, 8, 28, 1, 0, 1, 1, 1, 0]' : 0.0943952}
{'[0, 5, 2, 2, 6, 2, 0, 0, 11, 0, 8, 28, 1, 0, 1, 1, 1, 0]' : 0.094532}
{'[0, 5, 2, 2, 6, 2, 0, 0, 11, 0, 8, 28, 1, 0, 1, 1, 1, 0]' : 0.0952749}
{'[0, 5, 2, 2, 6, 2, 0, 0, 11, 0, 8, 28, 1, 0, 1, 1, 1, 0]' : 0.094974}
{'[0, 5, 2, 2, 6, 2, 0, 0, 11, 0, 8, 28, 1, 0, 1, 1, 1, 0]' : 0.0950181}
{'[0, 5, 2, 2, 6, 2, 0, 0, 11, 0, 8, 28, 1, 0, 1, 1, 1, 0]' : 0.095042}
{'[0, 5, 2, 2, 6, 2, 0, 0, 11, 0, 8, 28, 1, 0, 1, 1, 1, 0]' : 0.094979}
{'[0, 5, 2, 2, 6, 2, 0, 0, 11, 0, 8, 28, 1, 0, 1, 1, 1, 0]' : 0.094851}
{'[0, 5, 2, 2, 6, 2, 0, 0, 11, 0, 8, 28, 1, 0, 1, 1, 1, 0]' : 0.0948191}
{'[0, 5, 2, 2, 6, 2, 0, 0, 11, 0, 8, 28, 1, 0, 1, 1, 1, 0]' : 0.0951121}
{'[0, 5, 2, 2, 6, 2, 0, 0, 11, 0, 8, 28, 1, 0, 1, 1, 1, 0]' : 0.095047}
{'[0, 5, 2, 2, 6, 2, 0, 0, 11, 0, 8, 28, 1, 0, 1, 1, 1, 0]' : 0.0952139}
{'[0, 5, 2, 2, 6, 2, 0, 0, 11, 0, 8, 28, 1, 0, 1, 1, 1, 0]' : 0.094892}
{'[0, 5, 2, 2, 6, 2, 0, 0, 11, 0, 8, 28, 1, 0, 1, 1, 1, 0]' : 0.094955}
{'[0, 5, 2, 2, 6, 2, 0, 0, 11, 0, 8, 28, 1, 0, 1, 1, 1, 0]' : 0.094945}
{'[0, 5, 2, 2, 6, 2, 0, 0, 11, 0, 8, 28, 1, 0, 1, 1, 1, 0]' : 0.0951428}
{'[0, 5, 2, 2, 6, 2, 0, 0, 11, 0, 8, 28, 1, 0, 1, 1, 1, 0]' : 0.0948379}
{'[0, 5, 2, 2, 6, 2, 0, 0, 11, 0, 8, 28, 1, 0, 1, 1, 1, 0]' : 0.094943}

out:
 ["{'[0, 5, 2, 2, 6, 2, 0, 0, 11, 0, 8, 28, 1, 0, 1, 1, 1, 0]' : 0.107193}", "{'[0, 5, 2, 2, 6, 2, 0, 0, 11, 0, 8, 28, 1, 0, 1, 1, 1, 0]' : 0.107435}", "{'[0, 5, 2, 2, 6, 2, 0, 0, 11, 0, 8, 28, 1, 0, 1, 1, 1, 0]' : 0.107133}", "{'[0, 5, 2, 2, 6, 2, 0, 0, 11, 0, 8, 28, 1, 0, 1, 1, 1, 0]' : 0.107236}", "{'[0, 5, 2, 2, 6, 2, 0, 0, 11, 0, 8, 28, 1, 0, 1, 1, 1, 0]' : 0.10619}", "{'[0, 5, 2, 2, 6, 2, 0, 0, 11, 0, 8, 28, 1, 0, 1, 1, 1, 0]' : 0.0956371}", "{'[0, 5, 2, 2, 6, 2, 0, 0, 11, 0, 8, 28, 1, 0, 1, 1, 1, 0]' : 0.094331}", "{'[0, 5, 2, 2, 6, 2, 0, 0, 11, 0, 8, 28, 1, 0, 1, 1, 1, 0]' : 0.0943851}", "{'[0, 5, 2, 2, 6, 2, 0, 0, 11, 0, 8, 28, 1, 0, 1, 1, 1, 0]' : 0.094384}", "{'[0, 5, 2, 2, 6, 2, 0, 0, 11, 0, 8, 28, 1, 0, 1, 1, 1, 0]' : 0.0942931}", "{'[0, 5, 2, 2, 6, 2, 0, 0, 11, 0, 8, 28, 1, 0, 1, 1, 1, 0]' : 0.094625}", "{'[0, 5, 2, 2, 6, 2, 0, 0, 11, 0, 8, 28, 1, 0, 1, 1, 1, 0]' : 0.0947649}", "{'[0, 5, 2, 2, 6, 2, 0, 0, 11, 0, 8, 28, 1, 0, 1, 1, 1, 0]' : 0.0943952}", "{'[0, 5, 2, 2, 6, 2, 0, 0, 11, 0, 8, 28, 1, 0, 1, 1, 1, 0]' : 0.094532}", "{'[0, 5, 2, 2, 6, 2, 0, 0, 11, 0, 8, 28, 1, 0, 1, 1, 1, 0]' : 0.0952749}", "{'[0, 5, 2, 2, 6, 2, 0, 0, 11, 0, 8, 28, 1, 0, 1, 1, 1, 0]' : 0.094974}", "{'[0, 5, 2, 2, 6, 2, 0, 0, 11, 0, 8, 28, 1, 0, 1, 1, 1, 0]' : 0.0950181}", "{'[0, 5, 2, 2, 6, 2, 0, 0, 11, 0, 8, 28, 1, 0, 1, 1, 1, 0]' : 0.095042}", "{'[0, 5, 2, 2, 6, 2, 0, 0, 11, 0, 8, 28, 1, 0, 1, 1, 1, 0]' : 0.094979}", "{'[0, 5, 2, 2, 6, 2, 0, 0, 11, 0, 8, 28, 1, 0, 1, 1, 1, 0]' : 0.094851}", "{'[0, 5, 2, 2, 6, 2, 0, 0, 11, 0, 8, 28, 1, 0, 1, 1, 1, 0]' : 0.0948191}", "{'[0, 5, 2, 2, 6, 2, 0, 0, 11, 0, 8, 28, 1, 0, 1, 1, 1, 0]' : 0.0951121}", "{'[0, 5, 2, 2, 6, 2, 0, 0, 11, 0, 8, 28, 1, 0, 1, 1, 1, 0]' : 0.095047}", "{'[0, 5, 2, 2, 6, 2, 0, 0, 11, 0, 8, 28, 1, 0, 1, 1, 1, 0]' : 0.0952139}", "{'[0, 5, 2, 2, 6, 2, 0, 0, 11, 0, 8, 28, 1, 0, 1, 1, 1, 0]' : 0.094892}", "{'[0, 5, 2, 2, 6, 2, 0, 0, 11, 0, 8, 28, 1, 0, 1, 1, 1, 0]' : 0.094955}", "{'[0, 5, 2, 2, 6, 2, 0, 0, 11, 0, 8, 28, 1, 0, 1, 1, 1, 0]' : 0.094945}", "{'[0, 5, 2, 2, 6, 2, 0, 0, 11, 0, 8, 28, 1, 0, 1, 1, 1, 0]' : 0.0951428}", "{'[0, 5, 2, 2, 6, 2, 0, 0, 11, 0, 8, 28, 1, 0, 1, 1, 1, 0]' : 0.0948379}", "{'[0, 5, 2, 2, 6, 2, 0, 0, 11, 0, 8, 28, 1, 0, 1, 1, 1, 0]' : 0.094943}"]
returning from 'run': {'[0, 5, 2, 2, 6, 2, 0, 0, 11, 0, 8, 28, 1, 0, 1, 1, 1, 0]': ([0.107193, 0.107435, 0.107133, 0.107236, 0.10619, 0.0956371, 0.094331, 0.0943851, 0.094384, 0.0942931, 0.094625, 0.0947649, 0.0943952, 0.094532, 0.0952749, 0.094974, 0.0950181, 0.095042, 0.094979, 0.094851, 0.0948191, 0.0951121, 0.095047, 0.0952139, 0.094892, 0.094955, 0.094945, 0.0951428, 0.0948379, 0.094943], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 5, 2, 2, 6, 2, 0, 0, 11, 0, 8, 28, 1, 0, 1, 1, 1, 0]': ([0.107193, 0.107435, 0.107133, 0.107236, 0.10619, 0.0956371, 0.094331, 0.0943851, 0.094384, 0.0942931, 0.094625, 0.0947649, 0.0943952, 0.094532, 0.0952749, 0.094974, 0.0950181, 0.095042, 0.094979, 0.094851, 0.0948191, 0.0951121, 0.095047, 0.0952139, 0.094892, 0.094955, 0.094945, 0.0951428, 0.0948379, 0.094943], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = jjj
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		302
        Multiplications: 	68
        Divisions: 		0
        Logical: 		0
        Reads: 			566
        Writes: 		94
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest73.exe __orio_perftest73.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest73.exe  
Program Test Output: 
{'[2, 5, 4, 2, 3, 4, 0, 1, 27, 0, 3, 27, 0, 0, 0, 0, 0, 0]' : 0.310561}
{'[2, 5, 4, 2, 3, 4, 0, 1, 27, 0, 3, 27, 0, 0, 0, 0, 0, 0]' : 0.300324}
{'[2, 5, 4, 2, 3, 4, 0, 1, 27, 0, 3, 27, 0, 0, 0, 0, 0, 0]' : 0.261971}
{'[2, 5, 4, 2, 3, 4, 0, 1, 27, 0, 3, 27, 0, 0, 0, 0, 0, 0]' : 0.262289}
{'[2, 5, 4, 2, 3, 4, 0, 1, 27, 0, 3, 27, 0, 0, 0, 0, 0, 0]' : 0.262935}
{'[2, 5, 4, 2, 3, 4, 0, 1, 27, 0, 3, 27, 0, 0, 0, 0, 0, 0]' : 0.262392}
{'[2, 5, 4, 2, 3, 4, 0, 1, 27, 0, 3, 27, 0, 0, 0, 0, 0, 0]' : 0.262595}
{'[2, 5, 4, 2, 3, 4, 0, 1, 27, 0, 3, 27, 0, 0, 0, 0, 0, 0]' : 0.262558}
{'[2, 5, 4, 2, 3, 4, 0, 1, 27, 0, 3, 27, 0, 0, 0, 0, 0, 0]' : 0.262798}
{'[2, 5, 4, 2, 3, 4, 0, 1, 27, 0, 3, 27, 0, 0, 0, 0, 0, 0]' : 0.262415}
{'[2, 5, 4, 2, 3, 4, 0, 1, 27, 0, 3, 27, 0, 0, 0, 0, 0, 0]' : 0.262418}
{'[2, 5, 4, 2, 3, 4, 0, 1, 27, 0, 3, 27, 0, 0, 0, 0, 0, 0]' : 0.262529}
{'[2, 5, 4, 2, 3, 4, 0, 1, 27, 0, 3, 27, 0, 0, 0, 0, 0, 0]' : 0.262822}
{'[2, 5, 4, 2, 3, 4, 0, 1, 27, 0, 3, 27, 0, 0, 0, 0, 0, 0]' : 0.262394}
{'[2, 5, 4, 2, 3, 4, 0, 1, 27, 0, 3, 27, 0, 0, 0, 0, 0, 0]' : 0.262786}
{'[2, 5, 4, 2, 3, 4, 0, 1, 27, 0, 3, 27, 0, 0, 0, 0, 0, 0]' : 0.262491}
{'[2, 5, 4, 2, 3, 4, 0, 1, 27, 0, 3, 27, 0, 0, 0, 0, 0, 0]' : 0.262837}
{'[2, 5, 4, 2, 3, 4, 0, 1, 27, 0, 3, 27, 0, 0, 0, 0, 0, 0]' : 0.262381}
{'[2, 5, 4, 2, 3, 4, 0, 1, 27, 0, 3, 27, 0, 0, 0, 0, 0, 0]' : 0.262482}
{'[2, 5, 4, 2, 3, 4, 0, 1, 27, 0, 3, 27, 0, 0, 0, 0, 0, 0]' : 0.262585}
{'[2, 5, 4, 2, 3, 4, 0, 1, 27, 0, 3, 27, 0, 0, 0, 0, 0, 0]' : 0.270507}
{'[2, 5, 4, 2, 3, 4, 0, 1, 27, 0, 3, 27, 0, 0, 0, 0, 0, 0]' : 0.271536}
{'[2, 5, 4, 2, 3, 4, 0, 1, 27, 0, 3, 27, 0, 0, 0, 0, 0, 0]' : 0.271153}
{'[2, 5, 4, 2, 3, 4, 0, 1, 27, 0, 3, 27, 0, 0, 0, 0, 0, 0]' : 0.27106}
{'[2, 5, 4, 2, 3, 4, 0, 1, 27, 0, 3, 27, 0, 0, 0, 0, 0, 0]' : 0.271232}
{'[2, 5, 4, 2, 3, 4, 0, 1, 27, 0, 3, 27, 0, 0, 0, 0, 0, 0]' : 0.271261}
{'[2, 5, 4, 2, 3, 4, 0, 1, 27, 0, 3, 27, 0, 0, 0, 0, 0, 0]' : 0.265746}
{'[2, 5, 4, 2, 3, 4, 0, 1, 27, 0, 3, 27, 0, 0, 0, 0, 0, 0]' : 0.262557}
{'[2, 5, 4, 2, 3, 4, 0, 1, 27, 0, 3, 27, 0, 0, 0, 0, 0, 0]' : 0.262632}
{'[2, 5, 4, 2, 3, 4, 0, 1, 27, 0, 3, 27, 0, 0, 0, 0, 0, 0]' : 0.262835}

out:
 ["{'[2, 5, 4, 2, 3, 4, 0, 1, 27, 0, 3, 27, 0, 0, 0, 0, 0, 0]' : 0.310561}", "{'[2, 5, 4, 2, 3, 4, 0, 1, 27, 0, 3, 27, 0, 0, 0, 0, 0, 0]' : 0.300324}", "{'[2, 5, 4, 2, 3, 4, 0, 1, 27, 0, 3, 27, 0, 0, 0, 0, 0, 0]' : 0.261971}", "{'[2, 5, 4, 2, 3, 4, 0, 1, 27, 0, 3, 27, 0, 0, 0, 0, 0, 0]' : 0.262289}", "{'[2, 5, 4, 2, 3, 4, 0, 1, 27, 0, 3, 27, 0, 0, 0, 0, 0, 0]' : 0.262935}", "{'[2, 5, 4, 2, 3, 4, 0, 1, 27, 0, 3, 27, 0, 0, 0, 0, 0, 0]' : 0.262392}", "{'[2, 5, 4, 2, 3, 4, 0, 1, 27, 0, 3, 27, 0, 0, 0, 0, 0, 0]' : 0.262595}", "{'[2, 5, 4, 2, 3, 4, 0, 1, 27, 0, 3, 27, 0, 0, 0, 0, 0, 0]' : 0.262558}", "{'[2, 5, 4, 2, 3, 4, 0, 1, 27, 0, 3, 27, 0, 0, 0, 0, 0, 0]' : 0.262798}", "{'[2, 5, 4, 2, 3, 4, 0, 1, 27, 0, 3, 27, 0, 0, 0, 0, 0, 0]' : 0.262415}", "{'[2, 5, 4, 2, 3, 4, 0, 1, 27, 0, 3, 27, 0, 0, 0, 0, 0, 0]' : 0.262418}", "{'[2, 5, 4, 2, 3, 4, 0, 1, 27, 0, 3, 27, 0, 0, 0, 0, 0, 0]' : 0.262529}", "{'[2, 5, 4, 2, 3, 4, 0, 1, 27, 0, 3, 27, 0, 0, 0, 0, 0, 0]' : 0.262822}", "{'[2, 5, 4, 2, 3, 4, 0, 1, 27, 0, 3, 27, 0, 0, 0, 0, 0, 0]' : 0.262394}", "{'[2, 5, 4, 2, 3, 4, 0, 1, 27, 0, 3, 27, 0, 0, 0, 0, 0, 0]' : 0.262786}", "{'[2, 5, 4, 2, 3, 4, 0, 1, 27, 0, 3, 27, 0, 0, 0, 0, 0, 0]' : 0.262491}", "{'[2, 5, 4, 2, 3, 4, 0, 1, 27, 0, 3, 27, 0, 0, 0, 0, 0, 0]' : 0.262837}", "{'[2, 5, 4, 2, 3, 4, 0, 1, 27, 0, 3, 27, 0, 0, 0, 0, 0, 0]' : 0.262381}", "{'[2, 5, 4, 2, 3, 4, 0, 1, 27, 0, 3, 27, 0, 0, 0, 0, 0, 0]' : 0.262482}", "{'[2, 5, 4, 2, 3, 4, 0, 1, 27, 0, 3, 27, 0, 0, 0, 0, 0, 0]' : 0.262585}", "{'[2, 5, 4, 2, 3, 4, 0, 1, 27, 0, 3, 27, 0, 0, 0, 0, 0, 0]' : 0.270507}", "{'[2, 5, 4, 2, 3, 4, 0, 1, 27, 0, 3, 27, 0, 0, 0, 0, 0, 0]' : 0.271536}", "{'[2, 5, 4, 2, 3, 4, 0, 1, 27, 0, 3, 27, 0, 0, 0, 0, 0, 0]' : 0.271153}", "{'[2, 5, 4, 2, 3, 4, 0, 1, 27, 0, 3, 27, 0, 0, 0, 0, 0, 0]' : 0.27106}", "{'[2, 5, 4, 2, 3, 4, 0, 1, 27, 0, 3, 27, 0, 0, 0, 0, 0, 0]' : 0.271232}", "{'[2, 5, 4, 2, 3, 4, 0, 1, 27, 0, 3, 27, 0, 0, 0, 0, 0, 0]' : 0.271261}", "{'[2, 5, 4, 2, 3, 4, 0, 1, 27, 0, 3, 27, 0, 0, 0, 0, 0, 0]' : 0.265746}", "{'[2, 5, 4, 2, 3, 4, 0, 1, 27, 0, 3, 27, 0, 0, 0, 0, 0, 0]' : 0.262557}", "{'[2, 5, 4, 2, 3, 4, 0, 1, 27, 0, 3, 27, 0, 0, 0, 0, 0, 0]' : 0.262632}", "{'[2, 5, 4, 2, 3, 4, 0, 1, 27, 0, 3, 27, 0, 0, 0, 0, 0, 0]' : 0.262835}"]
returning from 'run': {'[2, 5, 4, 2, 3, 4, 0, 1, 27, 0, 3, 27, 0, 0, 0, 0, 0, 0]': ([0.310561, 0.300324, 0.261971, 0.262289, 0.262935, 0.262392, 0.262595, 0.262558, 0.262798, 0.262415, 0.262418, 0.262529, 0.262822, 0.262394, 0.262786, 0.262491, 0.262837, 0.262381, 0.262482, 0.262585, 0.270507, 0.271536, 0.271153, 0.27106, 0.271232, 0.271261, 0.265746, 0.262557, 0.262632, 0.262835], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 5, 4, 2, 3, 4, 0, 1, 27, 0, 3, 27, 0, 0, 0, 0, 0, 0]': ([0.310561, 0.300324, 0.261971, 0.262289, 0.262935, 0.262392, 0.262595, 0.262558, 0.262798, 0.262415, 0.262418, 0.262529, 0.262822, 0.262394, 0.262786, 0.262491, 0.262837, 0.262381, 0.262482, 0.262585, 0.270507, 0.271536, 0.271153, 0.27106, 0.271232, 0.271261, 0.265746, 0.262557, 0.262632, 0.262835], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	5
        Additions: 		587
        Multiplications: 	170
        Divisions: 		0
        Logical: 		0
        Reads: 			1071
        Writes: 		142
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest74.exe __orio_perftest74.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest74.exe  
Program Test Output: 
{'[2, 5, 6, 3, 0, 0, 1, 0, 0, 3, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.152193}
{'[2, 5, 6, 3, 0, 0, 1, 0, 0, 3, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.152143}
{'[2, 5, 6, 3, 0, 0, 1, 0, 0, 3, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.152011}
{'[2, 5, 6, 3, 0, 0, 1, 0, 0, 3, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.135949}
{'[2, 5, 6, 3, 0, 0, 1, 0, 0, 3, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.128156}
{'[2, 5, 6, 3, 0, 0, 1, 0, 0, 3, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.128047}
{'[2, 5, 6, 3, 0, 0, 1, 0, 0, 3, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.127943}
{'[2, 5, 6, 3, 0, 0, 1, 0, 0, 3, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.127939}
{'[2, 5, 6, 3, 0, 0, 1, 0, 0, 3, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.127858}
{'[2, 5, 6, 3, 0, 0, 1, 0, 0, 3, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.128174}
{'[2, 5, 6, 3, 0, 0, 1, 0, 0, 3, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.128224}
{'[2, 5, 6, 3, 0, 0, 1, 0, 0, 3, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.127882}
{'[2, 5, 6, 3, 0, 0, 1, 0, 0, 3, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.127992}
{'[2, 5, 6, 3, 0, 0, 1, 0, 0, 3, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.127876}
{'[2, 5, 6, 3, 0, 0, 1, 0, 0, 3, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.127845}
{'[2, 5, 6, 3, 0, 0, 1, 0, 0, 3, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.128105}
{'[2, 5, 6, 3, 0, 0, 1, 0, 0, 3, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.128065}
{'[2, 5, 6, 3, 0, 0, 1, 0, 0, 3, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.128}
{'[2, 5, 6, 3, 0, 0, 1, 0, 0, 3, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.128172}
{'[2, 5, 6, 3, 0, 0, 1, 0, 0, 3, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.128535}
{'[2, 5, 6, 3, 0, 0, 1, 0, 0, 3, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.128163}
{'[2, 5, 6, 3, 0, 0, 1, 0, 0, 3, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.128102}
{'[2, 5, 6, 3, 0, 0, 1, 0, 0, 3, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.128033}
{'[2, 5, 6, 3, 0, 0, 1, 0, 0, 3, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.128166}
{'[2, 5, 6, 3, 0, 0, 1, 0, 0, 3, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.128168}
{'[2, 5, 6, 3, 0, 0, 1, 0, 0, 3, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.128142}
{'[2, 5, 6, 3, 0, 0, 1, 0, 0, 3, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.128153}
{'[2, 5, 6, 3, 0, 0, 1, 0, 0, 3, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.128656}
{'[2, 5, 6, 3, 0, 0, 1, 0, 0, 3, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.128168}
{'[2, 5, 6, 3, 0, 0, 1, 0, 0, 3, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.128119}

out:
 ["{'[2, 5, 6, 3, 0, 0, 1, 0, 0, 3, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.152193}", "{'[2, 5, 6, 3, 0, 0, 1, 0, 0, 3, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.152143}", "{'[2, 5, 6, 3, 0, 0, 1, 0, 0, 3, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.152011}", "{'[2, 5, 6, 3, 0, 0, 1, 0, 0, 3, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.135949}", "{'[2, 5, 6, 3, 0, 0, 1, 0, 0, 3, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.128156}", "{'[2, 5, 6, 3, 0, 0, 1, 0, 0, 3, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.128047}", "{'[2, 5, 6, 3, 0, 0, 1, 0, 0, 3, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.127943}", "{'[2, 5, 6, 3, 0, 0, 1, 0, 0, 3, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.127939}", "{'[2, 5, 6, 3, 0, 0, 1, 0, 0, 3, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.127858}", "{'[2, 5, 6, 3, 0, 0, 1, 0, 0, 3, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.128174}", "{'[2, 5, 6, 3, 0, 0, 1, 0, 0, 3, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.128224}", "{'[2, 5, 6, 3, 0, 0, 1, 0, 0, 3, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.127882}", "{'[2, 5, 6, 3, 0, 0, 1, 0, 0, 3, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.127992}", "{'[2, 5, 6, 3, 0, 0, 1, 0, 0, 3, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.127876}", "{'[2, 5, 6, 3, 0, 0, 1, 0, 0, 3, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.127845}", "{'[2, 5, 6, 3, 0, 0, 1, 0, 0, 3, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.128105}", "{'[2, 5, 6, 3, 0, 0, 1, 0, 0, 3, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.128065}", "{'[2, 5, 6, 3, 0, 0, 1, 0, 0, 3, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.128}", "{'[2, 5, 6, 3, 0, 0, 1, 0, 0, 3, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.128172}", "{'[2, 5, 6, 3, 0, 0, 1, 0, 0, 3, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.128535}", "{'[2, 5, 6, 3, 0, 0, 1, 0, 0, 3, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.128163}", "{'[2, 5, 6, 3, 0, 0, 1, 0, 0, 3, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.128102}", "{'[2, 5, 6, 3, 0, 0, 1, 0, 0, 3, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.128033}", "{'[2, 5, 6, 3, 0, 0, 1, 0, 0, 3, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.128166}", "{'[2, 5, 6, 3, 0, 0, 1, 0, 0, 3, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.128168}", "{'[2, 5, 6, 3, 0, 0, 1, 0, 0, 3, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.128142}", "{'[2, 5, 6, 3, 0, 0, 1, 0, 0, 3, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.128153}", "{'[2, 5, 6, 3, 0, 0, 1, 0, 0, 3, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.128656}", "{'[2, 5, 6, 3, 0, 0, 1, 0, 0, 3, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.128168}", "{'[2, 5, 6, 3, 0, 0, 1, 0, 0, 3, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.128119}"]
returning from 'run': {'[2, 5, 6, 3, 0, 0, 1, 0, 0, 3, 0, 0, 0, 1, 1, 0, 0, 1]': ([0.152193, 0.152143, 0.152011, 0.135949, 0.128156, 0.128047, 0.127943, 0.127939, 0.127858, 0.128174, 0.128224, 0.127882, 0.127992, 0.127876, 0.127845, 0.128105, 0.128065, 0.128, 0.128172, 0.128535, 0.128163, 0.128102, 0.128033, 0.128166, 0.128168, 0.128142, 0.128153, 0.128656, 0.128168, 0.128119], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 5, 6, 3, 0, 0, 1, 0, 0, 3, 0, 0, 0, 1, 1, 0, 0, 1]': ([0.152193, 0.152143, 0.152011, 0.135949, 0.128156, 0.128047, 0.127943, 0.127939, 0.127858, 0.128174, 0.128224, 0.127882, 0.127992, 0.127876, 0.127845, 0.128105, 0.128065, 0.128, 0.128172, 0.128535, 0.128163, 0.128102, 0.128033, 0.128166, 0.128168, 0.128142, 0.128153, 0.128656, 0.128168, 0.128119], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	115
        Max loop nest depth: 	6
        Additions: 		1203
        Multiplications: 	244
        Divisions: 		0
        Logical: 		0
        Reads: 			2760
        Writes: 		499
        Comparisons:		115
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest75.exe __orio_perftest75.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest75.exe  
Program Test Output: 
{'[2, 5, 3, 3, 6, 4, 1, 1, 19, 27, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.140293}
{'[2, 5, 3, 3, 6, 4, 1, 1, 19, 27, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.141044}
{'[2, 5, 3, 3, 6, 4, 1, 1, 19, 27, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.140601}
{'[2, 5, 3, 3, 6, 4, 1, 1, 19, 27, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.140118}
{'[2, 5, 3, 3, 6, 4, 1, 1, 19, 27, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.14132}
{'[2, 5, 3, 3, 6, 4, 1, 1, 19, 27, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.141227}
{'[2, 5, 3, 3, 6, 4, 1, 1, 19, 27, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.141102}
{'[2, 5, 3, 3, 6, 4, 1, 1, 19, 27, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.140569}
{'[2, 5, 3, 3, 6, 4, 1, 1, 19, 27, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.140727}
{'[2, 5, 3, 3, 6, 4, 1, 1, 19, 27, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.14102}
{'[2, 5, 3, 3, 6, 4, 1, 1, 19, 27, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.140205}
{'[2, 5, 3, 3, 6, 4, 1, 1, 19, 27, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.140708}
{'[2, 5, 3, 3, 6, 4, 1, 1, 19, 27, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.140457}
{'[2, 5, 3, 3, 6, 4, 1, 1, 19, 27, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.140681}
{'[2, 5, 3, 3, 6, 4, 1, 1, 19, 27, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.14046}
{'[2, 5, 3, 3, 6, 4, 1, 1, 19, 27, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.140316}
{'[2, 5, 3, 3, 6, 4, 1, 1, 19, 27, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.140523}
{'[2, 5, 3, 3, 6, 4, 1, 1, 19, 27, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.140463}
{'[2, 5, 3, 3, 6, 4, 1, 1, 19, 27, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.14061}
{'[2, 5, 3, 3, 6, 4, 1, 1, 19, 27, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.140538}
{'[2, 5, 3, 3, 6, 4, 1, 1, 19, 27, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.140381}
{'[2, 5, 3, 3, 6, 4, 1, 1, 19, 27, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.140025}
{'[2, 5, 3, 3, 6, 4, 1, 1, 19, 27, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.14029}
{'[2, 5, 3, 3, 6, 4, 1, 1, 19, 27, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.140226}
{'[2, 5, 3, 3, 6, 4, 1, 1, 19, 27, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.141086}
{'[2, 5, 3, 3, 6, 4, 1, 1, 19, 27, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.140656}
{'[2, 5, 3, 3, 6, 4, 1, 1, 19, 27, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.140272}
{'[2, 5, 3, 3, 6, 4, 1, 1, 19, 27, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.139991}
{'[2, 5, 3, 3, 6, 4, 1, 1, 19, 27, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.140638}
{'[2, 5, 3, 3, 6, 4, 1, 1, 19, 27, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.14056}

out:
 ["{'[2, 5, 3, 3, 6, 4, 1, 1, 19, 27, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.140293}", "{'[2, 5, 3, 3, 6, 4, 1, 1, 19, 27, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.141044}", "{'[2, 5, 3, 3, 6, 4, 1, 1, 19, 27, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.140601}", "{'[2, 5, 3, 3, 6, 4, 1, 1, 19, 27, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.140118}", "{'[2, 5, 3, 3, 6, 4, 1, 1, 19, 27, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.14132}", "{'[2, 5, 3, 3, 6, 4, 1, 1, 19, 27, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.141227}", "{'[2, 5, 3, 3, 6, 4, 1, 1, 19, 27, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.141102}", "{'[2, 5, 3, 3, 6, 4, 1, 1, 19, 27, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.140569}", "{'[2, 5, 3, 3, 6, 4, 1, 1, 19, 27, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.140727}", "{'[2, 5, 3, 3, 6, 4, 1, 1, 19, 27, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.14102}", "{'[2, 5, 3, 3, 6, 4, 1, 1, 19, 27, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.140205}", "{'[2, 5, 3, 3, 6, 4, 1, 1, 19, 27, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.140708}", "{'[2, 5, 3, 3, 6, 4, 1, 1, 19, 27, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.140457}", "{'[2, 5, 3, 3, 6, 4, 1, 1, 19, 27, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.140681}", "{'[2, 5, 3, 3, 6, 4, 1, 1, 19, 27, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.14046}", "{'[2, 5, 3, 3, 6, 4, 1, 1, 19, 27, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.140316}", "{'[2, 5, 3, 3, 6, 4, 1, 1, 19, 27, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.140523}", "{'[2, 5, 3, 3, 6, 4, 1, 1, 19, 27, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.140463}", "{'[2, 5, 3, 3, 6, 4, 1, 1, 19, 27, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.14061}", "{'[2, 5, 3, 3, 6, 4, 1, 1, 19, 27, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.140538}", "{'[2, 5, 3, 3, 6, 4, 1, 1, 19, 27, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.140381}", "{'[2, 5, 3, 3, 6, 4, 1, 1, 19, 27, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.140025}", "{'[2, 5, 3, 3, 6, 4, 1, 1, 19, 27, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.14029}", "{'[2, 5, 3, 3, 6, 4, 1, 1, 19, 27, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.140226}", "{'[2, 5, 3, 3, 6, 4, 1, 1, 19, 27, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.141086}", "{'[2, 5, 3, 3, 6, 4, 1, 1, 19, 27, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.140656}", "{'[2, 5, 3, 3, 6, 4, 1, 1, 19, 27, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.140272}", "{'[2, 5, 3, 3, 6, 4, 1, 1, 19, 27, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.139991}", "{'[2, 5, 3, 3, 6, 4, 1, 1, 19, 27, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.140638}", "{'[2, 5, 3, 3, 6, 4, 1, 1, 19, 27, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.14056}"]
returning from 'run': {'[2, 5, 3, 3, 6, 4, 1, 1, 19, 27, 0, 0, 2, 0, 0, 0, 0, 1]': ([0.140293, 0.141044, 0.140601, 0.140118, 0.14132, 0.141227, 0.141102, 0.140569, 0.140727, 0.14102, 0.140205, 0.140708, 0.140457, 0.140681, 0.14046, 0.140316, 0.140523, 0.140463, 0.14061, 0.140538, 0.140381, 0.140025, 0.14029, 0.140226, 0.141086, 0.140656, 0.140272, 0.139991, 0.140638, 0.14056], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 5, 3, 3, 6, 4, 1, 1, 19, 27, 0, 0, 2, 0, 0, 0, 0, 1]': ([0.140293, 0.141044, 0.140601, 0.140118, 0.14132, 0.141227, 0.141102, 0.140569, 0.140727, 0.14102, 0.140205, 0.140708, 0.140457, 0.140681, 0.14046, 0.140316, 0.140523, 0.140463, 0.14061, 0.140538, 0.140381, 0.140025, 0.14029, 0.140226, 0.141086, 0.140656, 0.140272, 0.139991, 0.140638, 0.14056], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = jjj
Code stats:
        Number of loops: 	106
        Max loop nest depth: 	6
        Additions: 		13595
        Multiplications: 	3840
        Divisions: 		0
        Logical: 		0
        Reads: 			20550
        Writes: 		2320
        Comparisons:		106
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest76.exe __orio_perftest76.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest76.exe  
Program Test Output: 
{'[5, 5, 4, 6, 3, 5, 1, 0, 29, 28, 0, 29, 0, 0, 2, 0, 1, 1]' : 0.236426}
{'[5, 5, 4, 6, 3, 5, 1, 0, 29, 28, 0, 29, 0, 0, 2, 0, 1, 1]' : 0.248281}
{'[5, 5, 4, 6, 3, 5, 1, 0, 29, 28, 0, 29, 0, 0, 2, 0, 1, 1]' : 0.242163}
{'[5, 5, 4, 6, 3, 5, 1, 0, 29, 28, 0, 29, 0, 0, 2, 0, 1, 1]' : 0.242246}
{'[5, 5, 4, 6, 3, 5, 1, 0, 29, 28, 0, 29, 0, 0, 2, 0, 1, 1]' : 0.242137}
{'[5, 5, 4, 6, 3, 5, 1, 0, 29, 28, 0, 29, 0, 0, 2, 0, 1, 1]' : 0.239256}
{'[5, 5, 4, 6, 3, 5, 1, 0, 29, 28, 0, 29, 0, 0, 2, 0, 1, 1]' : 0.235927}
{'[5, 5, 4, 6, 3, 5, 1, 0, 29, 28, 0, 29, 0, 0, 2, 0, 1, 1]' : 0.246249}
{'[5, 5, 4, 6, 3, 5, 1, 0, 29, 28, 0, 29, 0, 0, 2, 0, 1, 1]' : 0.242136}
{'[5, 5, 4, 6, 3, 5, 1, 0, 29, 28, 0, 29, 0, 0, 2, 0, 1, 1]' : 0.242407}
{'[5, 5, 4, 6, 3, 5, 1, 0, 29, 28, 0, 29, 0, 0, 2, 0, 1, 1]' : 0.242325}
{'[5, 5, 4, 6, 3, 5, 1, 0, 29, 28, 0, 29, 0, 0, 2, 0, 1, 1]' : 0.242312}
{'[5, 5, 4, 6, 3, 5, 1, 0, 29, 28, 0, 29, 0, 0, 2, 0, 1, 1]' : 0.242253}
{'[5, 5, 4, 6, 3, 5, 1, 0, 29, 28, 0, 29, 0, 0, 2, 0, 1, 1]' : 0.250795}
{'[5, 5, 4, 6, 3, 5, 1, 0, 29, 28, 0, 29, 0, 0, 2, 0, 1, 1]' : 0.242443}
{'[5, 5, 4, 6, 3, 5, 1, 0, 29, 28, 0, 29, 0, 0, 2, 0, 1, 1]' : 0.242131}
{'[5, 5, 4, 6, 3, 5, 1, 0, 29, 28, 0, 29, 0, 0, 2, 0, 1, 1]' : 0.242167}
{'[5, 5, 4, 6, 3, 5, 1, 0, 29, 28, 0, 29, 0, 0, 2, 0, 1, 1]' : 0.241687}
{'[5, 5, 4, 6, 3, 5, 1, 0, 29, 28, 0, 29, 0, 0, 2, 0, 1, 1]' : 0.235919}
{'[5, 5, 4, 6, 3, 5, 1, 0, 29, 28, 0, 29, 0, 0, 2, 0, 1, 1]' : 0.242121}
{'[5, 5, 4, 6, 3, 5, 1, 0, 29, 28, 0, 29, 0, 0, 2, 0, 1, 1]' : 0.242345}
{'[5, 5, 4, 6, 3, 5, 1, 0, 29, 28, 0, 29, 0, 0, 2, 0, 1, 1]' : 0.239441}
{'[5, 5, 4, 6, 3, 5, 1, 0, 29, 28, 0, 29, 0, 0, 2, 0, 1, 1]' : 0.241329}
{'[5, 5, 4, 6, 3, 5, 1, 0, 29, 28, 0, 29, 0, 0, 2, 0, 1, 1]' : 0.242359}
{'[5, 5, 4, 6, 3, 5, 1, 0, 29, 28, 0, 29, 0, 0, 2, 0, 1, 1]' : 0.242372}
{'[5, 5, 4, 6, 3, 5, 1, 0, 29, 28, 0, 29, 0, 0, 2, 0, 1, 1]' : 0.24222}
{'[5, 5, 4, 6, 3, 5, 1, 0, 29, 28, 0, 29, 0, 0, 2, 0, 1, 1]' : 0.242647}
{'[5, 5, 4, 6, 3, 5, 1, 0, 29, 28, 0, 29, 0, 0, 2, 0, 1, 1]' : 0.238036}
{'[5, 5, 4, 6, 3, 5, 1, 0, 29, 28, 0, 29, 0, 0, 2, 0, 1, 1]' : 0.240454}
{'[5, 5, 4, 6, 3, 5, 1, 0, 29, 28, 0, 29, 0, 0, 2, 0, 1, 1]' : 0.242197}

out:
 ["{'[5, 5, 4, 6, 3, 5, 1, 0, 29, 28, 0, 29, 0, 0, 2, 0, 1, 1]' : 0.236426}", "{'[5, 5, 4, 6, 3, 5, 1, 0, 29, 28, 0, 29, 0, 0, 2, 0, 1, 1]' : 0.248281}", "{'[5, 5, 4, 6, 3, 5, 1, 0, 29, 28, 0, 29, 0, 0, 2, 0, 1, 1]' : 0.242163}", "{'[5, 5, 4, 6, 3, 5, 1, 0, 29, 28, 0, 29, 0, 0, 2, 0, 1, 1]' : 0.242246}", "{'[5, 5, 4, 6, 3, 5, 1, 0, 29, 28, 0, 29, 0, 0, 2, 0, 1, 1]' : 0.242137}", "{'[5, 5, 4, 6, 3, 5, 1, 0, 29, 28, 0, 29, 0, 0, 2, 0, 1, 1]' : 0.239256}", "{'[5, 5, 4, 6, 3, 5, 1, 0, 29, 28, 0, 29, 0, 0, 2, 0, 1, 1]' : 0.235927}", "{'[5, 5, 4, 6, 3, 5, 1, 0, 29, 28, 0, 29, 0, 0, 2, 0, 1, 1]' : 0.246249}", "{'[5, 5, 4, 6, 3, 5, 1, 0, 29, 28, 0, 29, 0, 0, 2, 0, 1, 1]' : 0.242136}", "{'[5, 5, 4, 6, 3, 5, 1, 0, 29, 28, 0, 29, 0, 0, 2, 0, 1, 1]' : 0.242407}", "{'[5, 5, 4, 6, 3, 5, 1, 0, 29, 28, 0, 29, 0, 0, 2, 0, 1, 1]' : 0.242325}", "{'[5, 5, 4, 6, 3, 5, 1, 0, 29, 28, 0, 29, 0, 0, 2, 0, 1, 1]' : 0.242312}", "{'[5, 5, 4, 6, 3, 5, 1, 0, 29, 28, 0, 29, 0, 0, 2, 0, 1, 1]' : 0.242253}", "{'[5, 5, 4, 6, 3, 5, 1, 0, 29, 28, 0, 29, 0, 0, 2, 0, 1, 1]' : 0.250795}", "{'[5, 5, 4, 6, 3, 5, 1, 0, 29, 28, 0, 29, 0, 0, 2, 0, 1, 1]' : 0.242443}", "{'[5, 5, 4, 6, 3, 5, 1, 0, 29, 28, 0, 29, 0, 0, 2, 0, 1, 1]' : 0.242131}", "{'[5, 5, 4, 6, 3, 5, 1, 0, 29, 28, 0, 29, 0, 0, 2, 0, 1, 1]' : 0.242167}", "{'[5, 5, 4, 6, 3, 5, 1, 0, 29, 28, 0, 29, 0, 0, 2, 0, 1, 1]' : 0.241687}", "{'[5, 5, 4, 6, 3, 5, 1, 0, 29, 28, 0, 29, 0, 0, 2, 0, 1, 1]' : 0.235919}", "{'[5, 5, 4, 6, 3, 5, 1, 0, 29, 28, 0, 29, 0, 0, 2, 0, 1, 1]' : 0.242121}", "{'[5, 5, 4, 6, 3, 5, 1, 0, 29, 28, 0, 29, 0, 0, 2, 0, 1, 1]' : 0.242345}", "{'[5, 5, 4, 6, 3, 5, 1, 0, 29, 28, 0, 29, 0, 0, 2, 0, 1, 1]' : 0.239441}", "{'[5, 5, 4, 6, 3, 5, 1, 0, 29, 28, 0, 29, 0, 0, 2, 0, 1, 1]' : 0.241329}", "{'[5, 5, 4, 6, 3, 5, 1, 0, 29, 28, 0, 29, 0, 0, 2, 0, 1, 1]' : 0.242359}", "{'[5, 5, 4, 6, 3, 5, 1, 0, 29, 28, 0, 29, 0, 0, 2, 0, 1, 1]' : 0.242372}", "{'[5, 5, 4, 6, 3, 5, 1, 0, 29, 28, 0, 29, 0, 0, 2, 0, 1, 1]' : 0.24222}", "{'[5, 5, 4, 6, 3, 5, 1, 0, 29, 28, 0, 29, 0, 0, 2, 0, 1, 1]' : 0.242647}", "{'[5, 5, 4, 6, 3, 5, 1, 0, 29, 28, 0, 29, 0, 0, 2, 0, 1, 1]' : 0.238036}", "{'[5, 5, 4, 6, 3, 5, 1, 0, 29, 28, 0, 29, 0, 0, 2, 0, 1, 1]' : 0.240454}", "{'[5, 5, 4, 6, 3, 5, 1, 0, 29, 28, 0, 29, 0, 0, 2, 0, 1, 1]' : 0.242197}"]
returning from 'run': {'[5, 5, 4, 6, 3, 5, 1, 0, 29, 28, 0, 29, 0, 0, 2, 0, 1, 1]': ([0.236426, 0.248281, 0.242163, 0.242246, 0.242137, 0.239256, 0.235927, 0.246249, 0.242136, 0.242407, 0.242325, 0.242312, 0.242253, 0.250795, 0.242443, 0.242131, 0.242167, 0.241687, 0.235919, 0.242121, 0.242345, 0.239441, 0.241329, 0.242359, 0.242372, 0.24222, 0.242647, 0.238036, 0.240454, 0.242197], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 5, 4, 6, 3, 5, 1, 0, 29, 28, 0, 29, 0, 0, 2, 0, 1, 1]': ([0.236426, 0.248281, 0.242163, 0.242246, 0.242137, 0.239256, 0.235927, 0.246249, 0.242136, 0.242407, 0.242325, 0.242312, 0.242253, 0.250795, 0.242443, 0.242131, 0.242167, 0.241687, 0.235919, 0.242121, 0.242345, 0.239441, 0.241329, 0.242359, 0.242372, 0.24222, 0.242647, 0.238036, 0.240454, 0.242197], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	102
        Max loop nest depth: 	5
        Additions: 		8739
        Multiplications: 	1914
        Divisions: 		0
        Logical: 		0
        Reads: 			12670
        Writes: 		1285
        Comparisons:		102
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest77.exe __orio_perftest77.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest77.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest77.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest77.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest77.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = kkk
Code stats:
        Number of loops: 	154
        Max loop nest depth: 	6
        Additions: 		10777
        Multiplications: 	3416
        Divisions: 		0
        Logical: 		0
        Reads: 			20630
        Writes: 		3934
        Comparisons:		154
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest78.exe __orio_perftest78.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest78.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest78.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest78.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest78.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	5
        Additions: 		15839
        Multiplications: 	4092
        Divisions: 		0
        Logical: 		0
        Reads: 			22728
        Writes: 		2113
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest79.exe __orio_perftest79.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest79.exe  
Program Test Output: 
{'[0, 5, 6, 4, 5, 5, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 0, 1]' : 0.279644}
{'[0, 5, 6, 4, 5, 5, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 0, 1]' : 0.272357}
{'[0, 5, 6, 4, 5, 5, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 0, 1]' : 0.248951}
{'[0, 5, 6, 4, 5, 5, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 0, 1]' : 0.250844}
{'[0, 5, 6, 4, 5, 5, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 0, 1]' : 0.252404}
{'[0, 5, 6, 4, 5, 5, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 0, 1]' : 0.25192}
{'[0, 5, 6, 4, 5, 5, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 0, 1]' : 0.25291}
{'[0, 5, 6, 4, 5, 5, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 0, 1]' : 0.250949}
{'[0, 5, 6, 4, 5, 5, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 0, 1]' : 0.25346}
{'[0, 5, 6, 4, 5, 5, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 0, 1]' : 0.255827}
{'[0, 5, 6, 4, 5, 5, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 0, 1]' : 0.251702}
{'[0, 5, 6, 4, 5, 5, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 0, 1]' : 0.253633}
{'[0, 5, 6, 4, 5, 5, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 0, 1]' : 0.258901}
{'[0, 5, 6, 4, 5, 5, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 0, 1]' : 0.251214}
{'[0, 5, 6, 4, 5, 5, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 0, 1]' : 0.252554}
{'[0, 5, 6, 4, 5, 5, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 0, 1]' : 0.253394}
{'[0, 5, 6, 4, 5, 5, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 0, 1]' : 0.252519}
{'[0, 5, 6, 4, 5, 5, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 0, 1]' : 0.25036}
{'[0, 5, 6, 4, 5, 5, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 0, 1]' : 0.252285}
{'[0, 5, 6, 4, 5, 5, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 0, 1]' : 0.249282}
{'[0, 5, 6, 4, 5, 5, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 0, 1]' : 0.251193}
{'[0, 5, 6, 4, 5, 5, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 0, 1]' : 0.250361}
{'[0, 5, 6, 4, 5, 5, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 0, 1]' : 0.255283}
{'[0, 5, 6, 4, 5, 5, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 0, 1]' : 0.247764}
{'[0, 5, 6, 4, 5, 5, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 0, 1]' : 0.248489}
{'[0, 5, 6, 4, 5, 5, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 0, 1]' : 0.251561}
{'[0, 5, 6, 4, 5, 5, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 0, 1]' : 0.252869}
{'[0, 5, 6, 4, 5, 5, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 0, 1]' : 0.254397}
{'[0, 5, 6, 4, 5, 5, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 0, 1]' : 0.254452}
{'[0, 5, 6, 4, 5, 5, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 0, 1]' : 0.249769}

out:
 ["{'[0, 5, 6, 4, 5, 5, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 0, 1]' : 0.279644}", "{'[0, 5, 6, 4, 5, 5, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 0, 1]' : 0.272357}", "{'[0, 5, 6, 4, 5, 5, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 0, 1]' : 0.248951}", "{'[0, 5, 6, 4, 5, 5, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 0, 1]' : 0.250844}", "{'[0, 5, 6, 4, 5, 5, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 0, 1]' : 0.252404}", "{'[0, 5, 6, 4, 5, 5, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 0, 1]' : 0.25192}", "{'[0, 5, 6, 4, 5, 5, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 0, 1]' : 0.25291}", "{'[0, 5, 6, 4, 5, 5, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 0, 1]' : 0.250949}", "{'[0, 5, 6, 4, 5, 5, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 0, 1]' : 0.25346}", "{'[0, 5, 6, 4, 5, 5, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 0, 1]' : 0.255827}", "{'[0, 5, 6, 4, 5, 5, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 0, 1]' : 0.251702}", "{'[0, 5, 6, 4, 5, 5, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 0, 1]' : 0.253633}", "{'[0, 5, 6, 4, 5, 5, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 0, 1]' : 0.258901}", "{'[0, 5, 6, 4, 5, 5, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 0, 1]' : 0.251214}", "{'[0, 5, 6, 4, 5, 5, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 0, 1]' : 0.252554}", "{'[0, 5, 6, 4, 5, 5, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 0, 1]' : 0.253394}", "{'[0, 5, 6, 4, 5, 5, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 0, 1]' : 0.252519}", "{'[0, 5, 6, 4, 5, 5, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 0, 1]' : 0.25036}", "{'[0, 5, 6, 4, 5, 5, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 0, 1]' : 0.252285}", "{'[0, 5, 6, 4, 5, 5, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 0, 1]' : 0.249282}", "{'[0, 5, 6, 4, 5, 5, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 0, 1]' : 0.251193}", "{'[0, 5, 6, 4, 5, 5, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 0, 1]' : 0.250361}", "{'[0, 5, 6, 4, 5, 5, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 0, 1]' : 0.255283}", "{'[0, 5, 6, 4, 5, 5, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 0, 1]' : 0.247764}", "{'[0, 5, 6, 4, 5, 5, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 0, 1]' : 0.248489}", "{'[0, 5, 6, 4, 5, 5, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 0, 1]' : 0.251561}", "{'[0, 5, 6, 4, 5, 5, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 0, 1]' : 0.252869}", "{'[0, 5, 6, 4, 5, 5, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 0, 1]' : 0.254397}", "{'[0, 5, 6, 4, 5, 5, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 0, 1]' : 0.254452}", "{'[0, 5, 6, 4, 5, 5, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 0, 1]' : 0.249769}"]
returning from 'run': {'[0, 5, 6, 4, 5, 5, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 0, 1]': ([0.279644, 0.272357, 0.248951, 0.250844, 0.252404, 0.25192, 0.25291, 0.250949, 0.25346, 0.255827, 0.251702, 0.253633, 0.258901, 0.251214, 0.252554, 0.253394, 0.252519, 0.25036, 0.252285, 0.249282, 0.251193, 0.250361, 0.255283, 0.247764, 0.248489, 0.251561, 0.252869, 0.254397, 0.254452, 0.249769], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 5, 6, 4, 5, 5, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 0, 1]': ([0.279644, 0.272357, 0.248951, 0.250844, 0.252404, 0.25192, 0.25291, 0.250949, 0.25346, 0.255827, 0.251702, 0.253633, 0.258901, 0.251214, 0.252554, 0.253394, 0.252519, 0.25036, 0.252285, 0.249282, 0.251193, 0.250361, 0.255283, 0.247764, 0.248489, 0.251561, 0.252869, 0.254397, 0.254452, 0.249769], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	23
        Max loop nest depth: 	5
        Additions: 		517
        Multiplications: 	216
        Divisions: 		0
        Logical: 		0
        Reads: 			1115
        Writes: 		220
        Comparisons:		23
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest80.exe __orio_perftest80.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest80.exe  
Program Test Output: 
{'[6, 5, 0, 0, 5, 6, 0, 1, 9, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.109341}
{'[6, 5, 0, 0, 5, 6, 0, 1, 9, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.111406}
{'[6, 5, 0, 0, 5, 6, 0, 1, 9, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.111435}
{'[6, 5, 0, 0, 5, 6, 0, 1, 9, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.11149}
{'[6, 5, 0, 0, 5, 6, 0, 1, 9, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.111297}
{'[6, 5, 0, 0, 5, 6, 0, 1, 9, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.098135}
{'[6, 5, 0, 0, 5, 6, 0, 1, 9, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0946538}
{'[6, 5, 0, 0, 5, 6, 0, 1, 9, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0946341}
{'[6, 5, 0, 0, 5, 6, 0, 1, 9, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0947659}
{'[6, 5, 0, 0, 5, 6, 0, 1, 9, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0950272}
{'[6, 5, 0, 0, 5, 6, 0, 1, 9, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0945199}
{'[6, 5, 0, 0, 5, 6, 0, 1, 9, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0948222}
{'[6, 5, 0, 0, 5, 6, 0, 1, 9, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.094811}
{'[6, 5, 0, 0, 5, 6, 0, 1, 9, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0946591}
{'[6, 5, 0, 0, 5, 6, 0, 1, 9, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.094789}
{'[6, 5, 0, 0, 5, 6, 0, 1, 9, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0945759}
{'[6, 5, 0, 0, 5, 6, 0, 1, 9, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0947082}
{'[6, 5, 0, 0, 5, 6, 0, 1, 9, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0951762}
{'[6, 5, 0, 0, 5, 6, 0, 1, 9, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.094681}
{'[6, 5, 0, 0, 5, 6, 0, 1, 9, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.094754}
{'[6, 5, 0, 0, 5, 6, 0, 1, 9, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0949991}
{'[6, 5, 0, 0, 5, 6, 0, 1, 9, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0947809}
{'[6, 5, 0, 0, 5, 6, 0, 1, 9, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.094681}
{'[6, 5, 0, 0, 5, 6, 0, 1, 9, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0946882}
{'[6, 5, 0, 0, 5, 6, 0, 1, 9, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0949428}
{'[6, 5, 0, 0, 5, 6, 0, 1, 9, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0947618}
{'[6, 5, 0, 0, 5, 6, 0, 1, 9, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.09465}
{'[6, 5, 0, 0, 5, 6, 0, 1, 9, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0946879}
{'[6, 5, 0, 0, 5, 6, 0, 1, 9, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0946188}
{'[6, 5, 0, 0, 5, 6, 0, 1, 9, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0946131}

out:
 ["{'[6, 5, 0, 0, 5, 6, 0, 1, 9, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.109341}", "{'[6, 5, 0, 0, 5, 6, 0, 1, 9, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.111406}", "{'[6, 5, 0, 0, 5, 6, 0, 1, 9, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.111435}", "{'[6, 5, 0, 0, 5, 6, 0, 1, 9, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.11149}", "{'[6, 5, 0, 0, 5, 6, 0, 1, 9, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.111297}", "{'[6, 5, 0, 0, 5, 6, 0, 1, 9, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.098135}", "{'[6, 5, 0, 0, 5, 6, 0, 1, 9, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0946538}", "{'[6, 5, 0, 0, 5, 6, 0, 1, 9, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0946341}", "{'[6, 5, 0, 0, 5, 6, 0, 1, 9, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0947659}", "{'[6, 5, 0, 0, 5, 6, 0, 1, 9, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0950272}", "{'[6, 5, 0, 0, 5, 6, 0, 1, 9, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0945199}", "{'[6, 5, 0, 0, 5, 6, 0, 1, 9, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0948222}", "{'[6, 5, 0, 0, 5, 6, 0, 1, 9, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.094811}", "{'[6, 5, 0, 0, 5, 6, 0, 1, 9, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0946591}", "{'[6, 5, 0, 0, 5, 6, 0, 1, 9, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.094789}", "{'[6, 5, 0, 0, 5, 6, 0, 1, 9, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0945759}", "{'[6, 5, 0, 0, 5, 6, 0, 1, 9, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0947082}", "{'[6, 5, 0, 0, 5, 6, 0, 1, 9, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0951762}", "{'[6, 5, 0, 0, 5, 6, 0, 1, 9, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.094681}", "{'[6, 5, 0, 0, 5, 6, 0, 1, 9, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.094754}", "{'[6, 5, 0, 0, 5, 6, 0, 1, 9, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0949991}", "{'[6, 5, 0, 0, 5, 6, 0, 1, 9, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0947809}", "{'[6, 5, 0, 0, 5, 6, 0, 1, 9, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.094681}", "{'[6, 5, 0, 0, 5, 6, 0, 1, 9, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0946882}", "{'[6, 5, 0, 0, 5, 6, 0, 1, 9, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0949428}", "{'[6, 5, 0, 0, 5, 6, 0, 1, 9, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0947618}", "{'[6, 5, 0, 0, 5, 6, 0, 1, 9, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.09465}", "{'[6, 5, 0, 0, 5, 6, 0, 1, 9, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0946879}", "{'[6, 5, 0, 0, 5, 6, 0, 1, 9, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0946188}", "{'[6, 5, 0, 0, 5, 6, 0, 1, 9, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0946131}"]
returning from 'run': {'[6, 5, 0, 0, 5, 6, 0, 1, 9, 0, 0, 1, 1, 1, 0, 1, 0, 1]': ([0.109341, 0.111406, 0.111435, 0.11149, 0.111297, 0.098135, 0.0946538, 0.0946341, 0.0947659, 0.0950272, 0.0945199, 0.0948222, 0.094811, 0.0946591, 0.094789, 0.0945759, 0.0947082, 0.0951762, 0.094681, 0.094754, 0.0949991, 0.0947809, 0.094681, 0.0946882, 0.0949428, 0.0947618, 0.09465, 0.0946879, 0.0946188, 0.0946131], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 5, 0, 0, 5, 6, 0, 1, 9, 0, 0, 1, 1, 1, 0, 1, 0, 1]': ([0.109341, 0.111406, 0.111435, 0.11149, 0.111297, 0.098135, 0.0946538, 0.0946341, 0.0947659, 0.0950272, 0.0945199, 0.0948222, 0.094811, 0.0946591, 0.094789, 0.0945759, 0.0947082, 0.0951762, 0.094681, 0.094754, 0.0949991, 0.0947809, 0.094681, 0.0946882, 0.0949428, 0.0947618, 0.09465, 0.0946879, 0.0946188, 0.0946131], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	60
        Max loop nest depth: 	5
        Additions: 		6522
        Multiplications: 	1770
        Divisions: 		0
        Logical: 		0
        Reads: 			9943
        Writes: 		1098
        Comparisons:		60
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest81.exe __orio_perftest81.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest81.exe  
Program Test Output: 
{'[3, 5, 5, 0, 6, 0, 1, 0, 9, 13, 24, 0, 0, 0, 2, 0, 1, 1]' : 0.23167}
{'[3, 5, 5, 0, 6, 0, 1, 0, 9, 13, 24, 0, 0, 0, 2, 0, 1, 1]' : 0.23165}
{'[3, 5, 5, 0, 6, 0, 1, 0, 9, 13, 24, 0, 0, 0, 2, 0, 1, 1]' : 0.214}
{'[3, 5, 5, 0, 6, 0, 1, 0, 9, 13, 24, 0, 0, 0, 2, 0, 1, 1]' : 0.195546}
{'[3, 5, 5, 0, 6, 0, 1, 0, 9, 13, 24, 0, 0, 0, 2, 0, 1, 1]' : 0.195523}
{'[3, 5, 5, 0, 6, 0, 1, 0, 9, 13, 24, 0, 0, 0, 2, 0, 1, 1]' : 0.195708}
{'[3, 5, 5, 0, 6, 0, 1, 0, 9, 13, 24, 0, 0, 0, 2, 0, 1, 1]' : 0.195899}
{'[3, 5, 5, 0, 6, 0, 1, 0, 9, 13, 24, 0, 0, 0, 2, 0, 1, 1]' : 0.195676}
{'[3, 5, 5, 0, 6, 0, 1, 0, 9, 13, 24, 0, 0, 0, 2, 0, 1, 1]' : 0.19575}
{'[3, 5, 5, 0, 6, 0, 1, 0, 9, 13, 24, 0, 0, 0, 2, 0, 1, 1]' : 0.195688}
{'[3, 5, 5, 0, 6, 0, 1, 0, 9, 13, 24, 0, 0, 0, 2, 0, 1, 1]' : 0.195695}
{'[3, 5, 5, 0, 6, 0, 1, 0, 9, 13, 24, 0, 0, 0, 2, 0, 1, 1]' : 0.195745}
{'[3, 5, 5, 0, 6, 0, 1, 0, 9, 13, 24, 0, 0, 0, 2, 0, 1, 1]' : 0.196117}
{'[3, 5, 5, 0, 6, 0, 1, 0, 9, 13, 24, 0, 0, 0, 2, 0, 1, 1]' : 0.195884}
{'[3, 5, 5, 0, 6, 0, 1, 0, 9, 13, 24, 0, 0, 0, 2, 0, 1, 1]' : 0.195914}
{'[3, 5, 5, 0, 6, 0, 1, 0, 9, 13, 24, 0, 0, 0, 2, 0, 1, 1]' : 0.195914}
{'[3, 5, 5, 0, 6, 0, 1, 0, 9, 13, 24, 0, 0, 0, 2, 0, 1, 1]' : 0.196355}
{'[3, 5, 5, 0, 6, 0, 1, 0, 9, 13, 24, 0, 0, 0, 2, 0, 1, 1]' : 0.196174}
{'[3, 5, 5, 0, 6, 0, 1, 0, 9, 13, 24, 0, 0, 0, 2, 0, 1, 1]' : 0.196294}
{'[3, 5, 5, 0, 6, 0, 1, 0, 9, 13, 24, 0, 0, 0, 2, 0, 1, 1]' : 0.19587}
{'[3, 5, 5, 0, 6, 0, 1, 0, 9, 13, 24, 0, 0, 0, 2, 0, 1, 1]' : 0.195893}
{'[3, 5, 5, 0, 6, 0, 1, 0, 9, 13, 24, 0, 0, 0, 2, 0, 1, 1]' : 0.195916}
{'[3, 5, 5, 0, 6, 0, 1, 0, 9, 13, 24, 0, 0, 0, 2, 0, 1, 1]' : 0.195909}
{'[3, 5, 5, 0, 6, 0, 1, 0, 9, 13, 24, 0, 0, 0, 2, 0, 1, 1]' : 0.196292}
{'[3, 5, 5, 0, 6, 0, 1, 0, 9, 13, 24, 0, 0, 0, 2, 0, 1, 1]' : 0.196068}
{'[3, 5, 5, 0, 6, 0, 1, 0, 9, 13, 24, 0, 0, 0, 2, 0, 1, 1]' : 0.195688}
{'[3, 5, 5, 0, 6, 0, 1, 0, 9, 13, 24, 0, 0, 0, 2, 0, 1, 1]' : 0.196083}
{'[3, 5, 5, 0, 6, 0, 1, 0, 9, 13, 24, 0, 0, 0, 2, 0, 1, 1]' : 0.197912}
{'[3, 5, 5, 0, 6, 0, 1, 0, 9, 13, 24, 0, 0, 0, 2, 0, 1, 1]' : 0.201897}
{'[3, 5, 5, 0, 6, 0, 1, 0, 9, 13, 24, 0, 0, 0, 2, 0, 1, 1]' : 0.196051}

out:
 ["{'[3, 5, 5, 0, 6, 0, 1, 0, 9, 13, 24, 0, 0, 0, 2, 0, 1, 1]' : 0.23167}", "{'[3, 5, 5, 0, 6, 0, 1, 0, 9, 13, 24, 0, 0, 0, 2, 0, 1, 1]' : 0.23165}", "{'[3, 5, 5, 0, 6, 0, 1, 0, 9, 13, 24, 0, 0, 0, 2, 0, 1, 1]' : 0.214}", "{'[3, 5, 5, 0, 6, 0, 1, 0, 9, 13, 24, 0, 0, 0, 2, 0, 1, 1]' : 0.195546}", "{'[3, 5, 5, 0, 6, 0, 1, 0, 9, 13, 24, 0, 0, 0, 2, 0, 1, 1]' : 0.195523}", "{'[3, 5, 5, 0, 6, 0, 1, 0, 9, 13, 24, 0, 0, 0, 2, 0, 1, 1]' : 0.195708}", "{'[3, 5, 5, 0, 6, 0, 1, 0, 9, 13, 24, 0, 0, 0, 2, 0, 1, 1]' : 0.195899}", "{'[3, 5, 5, 0, 6, 0, 1, 0, 9, 13, 24, 0, 0, 0, 2, 0, 1, 1]' : 0.195676}", "{'[3, 5, 5, 0, 6, 0, 1, 0, 9, 13, 24, 0, 0, 0, 2, 0, 1, 1]' : 0.19575}", "{'[3, 5, 5, 0, 6, 0, 1, 0, 9, 13, 24, 0, 0, 0, 2, 0, 1, 1]' : 0.195688}", "{'[3, 5, 5, 0, 6, 0, 1, 0, 9, 13, 24, 0, 0, 0, 2, 0, 1, 1]' : 0.195695}", "{'[3, 5, 5, 0, 6, 0, 1, 0, 9, 13, 24, 0, 0, 0, 2, 0, 1, 1]' : 0.195745}", "{'[3, 5, 5, 0, 6, 0, 1, 0, 9, 13, 24, 0, 0, 0, 2, 0, 1, 1]' : 0.196117}", "{'[3, 5, 5, 0, 6, 0, 1, 0, 9, 13, 24, 0, 0, 0, 2, 0, 1, 1]' : 0.195884}", "{'[3, 5, 5, 0, 6, 0, 1, 0, 9, 13, 24, 0, 0, 0, 2, 0, 1, 1]' : 0.195914}", "{'[3, 5, 5, 0, 6, 0, 1, 0, 9, 13, 24, 0, 0, 0, 2, 0, 1, 1]' : 0.195914}", "{'[3, 5, 5, 0, 6, 0, 1, 0, 9, 13, 24, 0, 0, 0, 2, 0, 1, 1]' : 0.196355}", "{'[3, 5, 5, 0, 6, 0, 1, 0, 9, 13, 24, 0, 0, 0, 2, 0, 1, 1]' : 0.196174}", "{'[3, 5, 5, 0, 6, 0, 1, 0, 9, 13, 24, 0, 0, 0, 2, 0, 1, 1]' : 0.196294}", "{'[3, 5, 5, 0, 6, 0, 1, 0, 9, 13, 24, 0, 0, 0, 2, 0, 1, 1]' : 0.19587}", "{'[3, 5, 5, 0, 6, 0, 1, 0, 9, 13, 24, 0, 0, 0, 2, 0, 1, 1]' : 0.195893}", "{'[3, 5, 5, 0, 6, 0, 1, 0, 9, 13, 24, 0, 0, 0, 2, 0, 1, 1]' : 0.195916}", "{'[3, 5, 5, 0, 6, 0, 1, 0, 9, 13, 24, 0, 0, 0, 2, 0, 1, 1]' : 0.195909}", "{'[3, 5, 5, 0, 6, 0, 1, 0, 9, 13, 24, 0, 0, 0, 2, 0, 1, 1]' : 0.196292}", "{'[3, 5, 5, 0, 6, 0, 1, 0, 9, 13, 24, 0, 0, 0, 2, 0, 1, 1]' : 0.196068}", "{'[3, 5, 5, 0, 6, 0, 1, 0, 9, 13, 24, 0, 0, 0, 2, 0, 1, 1]' : 0.195688}", "{'[3, 5, 5, 0, 6, 0, 1, 0, 9, 13, 24, 0, 0, 0, 2, 0, 1, 1]' : 0.196083}", "{'[3, 5, 5, 0, 6, 0, 1, 0, 9, 13, 24, 0, 0, 0, 2, 0, 1, 1]' : 0.197912}", "{'[3, 5, 5, 0, 6, 0, 1, 0, 9, 13, 24, 0, 0, 0, 2, 0, 1, 1]' : 0.201897}", "{'[3, 5, 5, 0, 6, 0, 1, 0, 9, 13, 24, 0, 0, 0, 2, 0, 1, 1]' : 0.196051}"]
returning from 'run': {'[3, 5, 5, 0, 6, 0, 1, 0, 9, 13, 24, 0, 0, 0, 2, 0, 1, 1]': ([0.23167, 0.23165, 0.214, 0.195546, 0.195523, 0.195708, 0.195899, 0.195676, 0.19575, 0.195688, 0.195695, 0.195745, 0.196117, 0.195884, 0.195914, 0.195914, 0.196355, 0.196174, 0.196294, 0.19587, 0.195893, 0.195916, 0.195909, 0.196292, 0.196068, 0.195688, 0.196083, 0.197912, 0.201897, 0.196051], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 5, 5, 0, 6, 0, 1, 0, 9, 13, 24, 0, 0, 0, 2, 0, 1, 1]': ([0.23167, 0.23165, 0.214, 0.195546, 0.195523, 0.195708, 0.195899, 0.195676, 0.19575, 0.195688, 0.195695, 0.195745, 0.196117, 0.195884, 0.195914, 0.195914, 0.196355, 0.196174, 0.196294, 0.19587, 0.195893, 0.195916, 0.195909, 0.196292, 0.196068, 0.195688, 0.196083, 0.197912, 0.201897, 0.196051], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = jjj
Code stats:
        Number of loops: 	23
        Max loop nest depth: 	4
        Additions: 		2675
        Multiplications: 	840
        Divisions: 		0
        Logical: 		0
        Reads: 			4437
        Writes: 		504
        Comparisons:		23
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest82.exe __orio_perftest82.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest82.exe  
Program Test Output: 
{'[6, 5, 6, 4, 3, 0, 0, 0, 0, 18, 4, 0, 1, 0, 1, 0, 1, 1]' : 0.111379}
{'[6, 5, 6, 4, 3, 0, 0, 0, 0, 18, 4, 0, 1, 0, 1, 0, 1, 1]' : 0.111209}
{'[6, 5, 6, 4, 3, 0, 0, 0, 0, 18, 4, 0, 1, 0, 1, 0, 1, 1]' : 0.110957}
{'[6, 5, 6, 4, 3, 0, 0, 0, 0, 18, 4, 0, 1, 0, 1, 0, 1, 1]' : 0.111012}
{'[6, 5, 6, 4, 3, 0, 0, 0, 0, 18, 4, 0, 1, 0, 1, 0, 1, 1]' : 0.111063}
{'[6, 5, 6, 4, 3, 0, 0, 0, 0, 18, 4, 0, 1, 0, 1, 0, 1, 1]' : 0.111123}
{'[6, 5, 6, 4, 3, 0, 0, 0, 0, 18, 4, 0, 1, 0, 1, 0, 1, 1]' : 0.111008}
{'[6, 5, 6, 4, 3, 0, 0, 0, 0, 18, 4, 0, 1, 0, 1, 0, 1, 1]' : 0.111326}
{'[6, 5, 6, 4, 3, 0, 0, 0, 0, 18, 4, 0, 1, 0, 1, 0, 1, 1]' : 0.111398}
{'[6, 5, 6, 4, 3, 0, 0, 0, 0, 18, 4, 0, 1, 0, 1, 0, 1, 1]' : 0.11113}
{'[6, 5, 6, 4, 3, 0, 0, 0, 0, 18, 4, 0, 1, 0, 1, 0, 1, 1]' : 0.110968}
{'[6, 5, 6, 4, 3, 0, 0, 0, 0, 18, 4, 0, 1, 0, 1, 0, 1, 1]' : 0.111494}
{'[6, 5, 6, 4, 3, 0, 0, 0, 0, 18, 4, 0, 1, 0, 1, 0, 1, 1]' : 0.111262}
{'[6, 5, 6, 4, 3, 0, 0, 0, 0, 18, 4, 0, 1, 0, 1, 0, 1, 1]' : 0.111155}
{'[6, 5, 6, 4, 3, 0, 0, 0, 0, 18, 4, 0, 1, 0, 1, 0, 1, 1]' : 0.110985}
{'[6, 5, 6, 4, 3, 0, 0, 0, 0, 18, 4, 0, 1, 0, 1, 0, 1, 1]' : 0.111028}
{'[6, 5, 6, 4, 3, 0, 0, 0, 0, 18, 4, 0, 1, 0, 1, 0, 1, 1]' : 0.111241}
{'[6, 5, 6, 4, 3, 0, 0, 0, 0, 18, 4, 0, 1, 0, 1, 0, 1, 1]' : 0.111624}
{'[6, 5, 6, 4, 3, 0, 0, 0, 0, 18, 4, 0, 1, 0, 1, 0, 1, 1]' : 0.1118}
{'[6, 5, 6, 4, 3, 0, 0, 0, 0, 18, 4, 0, 1, 0, 1, 0, 1, 1]' : 0.111027}
{'[6, 5, 6, 4, 3, 0, 0, 0, 0, 18, 4, 0, 1, 0, 1, 0, 1, 1]' : 0.111051}
{'[6, 5, 6, 4, 3, 0, 0, 0, 0, 18, 4, 0, 1, 0, 1, 0, 1, 1]' : 0.110969}
{'[6, 5, 6, 4, 3, 0, 0, 0, 0, 18, 4, 0, 1, 0, 1, 0, 1, 1]' : 0.111278}
{'[6, 5, 6, 4, 3, 0, 0, 0, 0, 18, 4, 0, 1, 0, 1, 0, 1, 1]' : 0.111066}
{'[6, 5, 6, 4, 3, 0, 0, 0, 0, 18, 4, 0, 1, 0, 1, 0, 1, 1]' : 0.111078}
{'[6, 5, 6, 4, 3, 0, 0, 0, 0, 18, 4, 0, 1, 0, 1, 0, 1, 1]' : 0.111009}
{'[6, 5, 6, 4, 3, 0, 0, 0, 0, 18, 4, 0, 1, 0, 1, 0, 1, 1]' : 0.111361}
{'[6, 5, 6, 4, 3, 0, 0, 0, 0, 18, 4, 0, 1, 0, 1, 0, 1, 1]' : 0.112297}
{'[6, 5, 6, 4, 3, 0, 0, 0, 0, 18, 4, 0, 1, 0, 1, 0, 1, 1]' : 0.111037}
{'[6, 5, 6, 4, 3, 0, 0, 0, 0, 18, 4, 0, 1, 0, 1, 0, 1, 1]' : 0.11101}

out:
 ["{'[6, 5, 6, 4, 3, 0, 0, 0, 0, 18, 4, 0, 1, 0, 1, 0, 1, 1]' : 0.111379}", "{'[6, 5, 6, 4, 3, 0, 0, 0, 0, 18, 4, 0, 1, 0, 1, 0, 1, 1]' : 0.111209}", "{'[6, 5, 6, 4, 3, 0, 0, 0, 0, 18, 4, 0, 1, 0, 1, 0, 1, 1]' : 0.110957}", "{'[6, 5, 6, 4, 3, 0, 0, 0, 0, 18, 4, 0, 1, 0, 1, 0, 1, 1]' : 0.111012}", "{'[6, 5, 6, 4, 3, 0, 0, 0, 0, 18, 4, 0, 1, 0, 1, 0, 1, 1]' : 0.111063}", "{'[6, 5, 6, 4, 3, 0, 0, 0, 0, 18, 4, 0, 1, 0, 1, 0, 1, 1]' : 0.111123}", "{'[6, 5, 6, 4, 3, 0, 0, 0, 0, 18, 4, 0, 1, 0, 1, 0, 1, 1]' : 0.111008}", "{'[6, 5, 6, 4, 3, 0, 0, 0, 0, 18, 4, 0, 1, 0, 1, 0, 1, 1]' : 0.111326}", "{'[6, 5, 6, 4, 3, 0, 0, 0, 0, 18, 4, 0, 1, 0, 1, 0, 1, 1]' : 0.111398}", "{'[6, 5, 6, 4, 3, 0, 0, 0, 0, 18, 4, 0, 1, 0, 1, 0, 1, 1]' : 0.11113}", "{'[6, 5, 6, 4, 3, 0, 0, 0, 0, 18, 4, 0, 1, 0, 1, 0, 1, 1]' : 0.110968}", "{'[6, 5, 6, 4, 3, 0, 0, 0, 0, 18, 4, 0, 1, 0, 1, 0, 1, 1]' : 0.111494}", "{'[6, 5, 6, 4, 3, 0, 0, 0, 0, 18, 4, 0, 1, 0, 1, 0, 1, 1]' : 0.111262}", "{'[6, 5, 6, 4, 3, 0, 0, 0, 0, 18, 4, 0, 1, 0, 1, 0, 1, 1]' : 0.111155}", "{'[6, 5, 6, 4, 3, 0, 0, 0, 0, 18, 4, 0, 1, 0, 1, 0, 1, 1]' : 0.110985}", "{'[6, 5, 6, 4, 3, 0, 0, 0, 0, 18, 4, 0, 1, 0, 1, 0, 1, 1]' : 0.111028}", "{'[6, 5, 6, 4, 3, 0, 0, 0, 0, 18, 4, 0, 1, 0, 1, 0, 1, 1]' : 0.111241}", "{'[6, 5, 6, 4, 3, 0, 0, 0, 0, 18, 4, 0, 1, 0, 1, 0, 1, 1]' : 0.111624}", "{'[6, 5, 6, 4, 3, 0, 0, 0, 0, 18, 4, 0, 1, 0, 1, 0, 1, 1]' : 0.1118}", "{'[6, 5, 6, 4, 3, 0, 0, 0, 0, 18, 4, 0, 1, 0, 1, 0, 1, 1]' : 0.111027}", "{'[6, 5, 6, 4, 3, 0, 0, 0, 0, 18, 4, 0, 1, 0, 1, 0, 1, 1]' : 0.111051}", "{'[6, 5, 6, 4, 3, 0, 0, 0, 0, 18, 4, 0, 1, 0, 1, 0, 1, 1]' : 0.110969}", "{'[6, 5, 6, 4, 3, 0, 0, 0, 0, 18, 4, 0, 1, 0, 1, 0, 1, 1]' : 0.111278}", "{'[6, 5, 6, 4, 3, 0, 0, 0, 0, 18, 4, 0, 1, 0, 1, 0, 1, 1]' : 0.111066}", "{'[6, 5, 6, 4, 3, 0, 0, 0, 0, 18, 4, 0, 1, 0, 1, 0, 1, 1]' : 0.111078}", "{'[6, 5, 6, 4, 3, 0, 0, 0, 0, 18, 4, 0, 1, 0, 1, 0, 1, 1]' : 0.111009}", "{'[6, 5, 6, 4, 3, 0, 0, 0, 0, 18, 4, 0, 1, 0, 1, 0, 1, 1]' : 0.111361}", "{'[6, 5, 6, 4, 3, 0, 0, 0, 0, 18, 4, 0, 1, 0, 1, 0, 1, 1]' : 0.112297}", "{'[6, 5, 6, 4, 3, 0, 0, 0, 0, 18, 4, 0, 1, 0, 1, 0, 1, 1]' : 0.111037}", "{'[6, 5, 6, 4, 3, 0, 0, 0, 0, 18, 4, 0, 1, 0, 1, 0, 1, 1]' : 0.11101}"]
returning from 'run': {'[6, 5, 6, 4, 3, 0, 0, 0, 0, 18, 4, 0, 1, 0, 1, 0, 1, 1]': ([0.111379, 0.111209, 0.110957, 0.111012, 0.111063, 0.111123, 0.111008, 0.111326, 0.111398, 0.11113, 0.110968, 0.111494, 0.111262, 0.111155, 0.110985, 0.111028, 0.111241, 0.111624, 0.1118, 0.111027, 0.111051, 0.110969, 0.111278, 0.111066, 0.111078, 0.111009, 0.111361, 0.112297, 0.111037, 0.11101], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 5, 6, 4, 3, 0, 0, 0, 0, 18, 4, 0, 1, 0, 1, 0, 1, 1]': ([0.111379, 0.111209, 0.110957, 0.111012, 0.111063, 0.111123, 0.111008, 0.111326, 0.111398, 0.11113, 0.110968, 0.111494, 0.111262, 0.111155, 0.110985, 0.111028, 0.111241, 0.111624, 0.1118, 0.111027, 0.111051, 0.110969, 0.111278, 0.111066, 0.111078, 0.111009, 0.111361, 0.112297, 0.111037, 0.11101], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	6
        Additions: 		505
        Multiplications: 	174
        Divisions: 		0
        Logical: 		0
        Reads: 			1097
        Writes: 		150
        Comparisons:		15
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest83.exe __orio_perftest83.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest83.exe  
Program Test Output: 
{'[6, 5, 0, 6, 4, 1, 0, 1, 28, 0, 28, 23, 0, 2, 0, 0, 0, 0]' : 0.26896}
{'[6, 5, 0, 6, 4, 1, 0, 1, 28, 0, 28, 23, 0, 2, 0, 0, 0, 0]' : 0.238414}
{'[6, 5, 0, 6, 4, 1, 0, 1, 28, 0, 28, 23, 0, 2, 0, 0, 0, 0]' : 0.236096}
{'[6, 5, 0, 6, 4, 1, 0, 1, 28, 0, 28, 23, 0, 2, 0, 0, 0, 0]' : 0.237265}
{'[6, 5, 0, 6, 4, 1, 0, 1, 28, 0, 28, 23, 0, 2, 0, 0, 0, 0]' : 0.2432}
{'[6, 5, 0, 6, 4, 1, 0, 1, 28, 0, 28, 23, 0, 2, 0, 0, 0, 0]' : 0.241692}
{'[6, 5, 0, 6, 4, 1, 0, 1, 28, 0, 28, 23, 0, 2, 0, 0, 0, 0]' : 0.235251}
{'[6, 5, 0, 6, 4, 1, 0, 1, 28, 0, 28, 23, 0, 2, 0, 0, 0, 0]' : 0.235303}
{'[6, 5, 0, 6, 4, 1, 0, 1, 28, 0, 28, 23, 0, 2, 0, 0, 0, 0]' : 0.235232}
{'[6, 5, 0, 6, 4, 1, 0, 1, 28, 0, 28, 23, 0, 2, 0, 0, 0, 0]' : 0.235226}
{'[6, 5, 0, 6, 4, 1, 0, 1, 28, 0, 28, 23, 0, 2, 0, 0, 0, 0]' : 0.239088}
{'[6, 5, 0, 6, 4, 1, 0, 1, 28, 0, 28, 23, 0, 2, 0, 0, 0, 0]' : 0.235475}
{'[6, 5, 0, 6, 4, 1, 0, 1, 28, 0, 28, 23, 0, 2, 0, 0, 0, 0]' : 0.235271}
{'[6, 5, 0, 6, 4, 1, 0, 1, 28, 0, 28, 23, 0, 2, 0, 0, 0, 0]' : 0.235185}
{'[6, 5, 0, 6, 4, 1, 0, 1, 28, 0, 28, 23, 0, 2, 0, 0, 0, 0]' : 0.241042}
{'[6, 5, 0, 6, 4, 1, 0, 1, 28, 0, 28, 23, 0, 2, 0, 0, 0, 0]' : 0.243299}
{'[6, 5, 0, 6, 4, 1, 0, 1, 28, 0, 28, 23, 0, 2, 0, 0, 0, 0]' : 0.238568}
{'[6, 5, 0, 6, 4, 1, 0, 1, 28, 0, 28, 23, 0, 2, 0, 0, 0, 0]' : 0.235231}
{'[6, 5, 0, 6, 4, 1, 0, 1, 28, 0, 28, 23, 0, 2, 0, 0, 0, 0]' : 0.235509}
{'[6, 5, 0, 6, 4, 1, 0, 1, 28, 0, 28, 23, 0, 2, 0, 0, 0, 0]' : 0.235414}
{'[6, 5, 0, 6, 4, 1, 0, 1, 28, 0, 28, 23, 0, 2, 0, 0, 0, 0]' : 0.238865}
{'[6, 5, 0, 6, 4, 1, 0, 1, 28, 0, 28, 23, 0, 2, 0, 0, 0, 0]' : 0.243375}
{'[6, 5, 0, 6, 4, 1, 0, 1, 28, 0, 28, 23, 0, 2, 0, 0, 0, 0]' : 0.240517}
{'[6, 5, 0, 6, 4, 1, 0, 1, 28, 0, 28, 23, 0, 2, 0, 0, 0, 0]' : 0.235848}
{'[6, 5, 0, 6, 4, 1, 0, 1, 28, 0, 28, 23, 0, 2, 0, 0, 0, 0]' : 0.235489}
{'[6, 5, 0, 6, 4, 1, 0, 1, 28, 0, 28, 23, 0, 2, 0, 0, 0, 0]' : 0.235233}
{'[6, 5, 0, 6, 4, 1, 0, 1, 28, 0, 28, 23, 0, 2, 0, 0, 0, 0]' : 0.2362}
{'[6, 5, 0, 6, 4, 1, 0, 1, 28, 0, 28, 23, 0, 2, 0, 0, 0, 0]' : 0.243651}
{'[6, 5, 0, 6, 4, 1, 0, 1, 28, 0, 28, 23, 0, 2, 0, 0, 0, 0]' : 0.242908}
{'[6, 5, 0, 6, 4, 1, 0, 1, 28, 0, 28, 23, 0, 2, 0, 0, 0, 0]' : 0.235785}

out:
 ["{'[6, 5, 0, 6, 4, 1, 0, 1, 28, 0, 28, 23, 0, 2, 0, 0, 0, 0]' : 0.26896}", "{'[6, 5, 0, 6, 4, 1, 0, 1, 28, 0, 28, 23, 0, 2, 0, 0, 0, 0]' : 0.238414}", "{'[6, 5, 0, 6, 4, 1, 0, 1, 28, 0, 28, 23, 0, 2, 0, 0, 0, 0]' : 0.236096}", "{'[6, 5, 0, 6, 4, 1, 0, 1, 28, 0, 28, 23, 0, 2, 0, 0, 0, 0]' : 0.237265}", "{'[6, 5, 0, 6, 4, 1, 0, 1, 28, 0, 28, 23, 0, 2, 0, 0, 0, 0]' : 0.2432}", "{'[6, 5, 0, 6, 4, 1, 0, 1, 28, 0, 28, 23, 0, 2, 0, 0, 0, 0]' : 0.241692}", "{'[6, 5, 0, 6, 4, 1, 0, 1, 28, 0, 28, 23, 0, 2, 0, 0, 0, 0]' : 0.235251}", "{'[6, 5, 0, 6, 4, 1, 0, 1, 28, 0, 28, 23, 0, 2, 0, 0, 0, 0]' : 0.235303}", "{'[6, 5, 0, 6, 4, 1, 0, 1, 28, 0, 28, 23, 0, 2, 0, 0, 0, 0]' : 0.235232}", "{'[6, 5, 0, 6, 4, 1, 0, 1, 28, 0, 28, 23, 0, 2, 0, 0, 0, 0]' : 0.235226}", "{'[6, 5, 0, 6, 4, 1, 0, 1, 28, 0, 28, 23, 0, 2, 0, 0, 0, 0]' : 0.239088}", "{'[6, 5, 0, 6, 4, 1, 0, 1, 28, 0, 28, 23, 0, 2, 0, 0, 0, 0]' : 0.235475}", "{'[6, 5, 0, 6, 4, 1, 0, 1, 28, 0, 28, 23, 0, 2, 0, 0, 0, 0]' : 0.235271}", "{'[6, 5, 0, 6, 4, 1, 0, 1, 28, 0, 28, 23, 0, 2, 0, 0, 0, 0]' : 0.235185}", "{'[6, 5, 0, 6, 4, 1, 0, 1, 28, 0, 28, 23, 0, 2, 0, 0, 0, 0]' : 0.241042}", "{'[6, 5, 0, 6, 4, 1, 0, 1, 28, 0, 28, 23, 0, 2, 0, 0, 0, 0]' : 0.243299}", "{'[6, 5, 0, 6, 4, 1, 0, 1, 28, 0, 28, 23, 0, 2, 0, 0, 0, 0]' : 0.238568}", "{'[6, 5, 0, 6, 4, 1, 0, 1, 28, 0, 28, 23, 0, 2, 0, 0, 0, 0]' : 0.235231}", "{'[6, 5, 0, 6, 4, 1, 0, 1, 28, 0, 28, 23, 0, 2, 0, 0, 0, 0]' : 0.235509}", "{'[6, 5, 0, 6, 4, 1, 0, 1, 28, 0, 28, 23, 0, 2, 0, 0, 0, 0]' : 0.235414}", "{'[6, 5, 0, 6, 4, 1, 0, 1, 28, 0, 28, 23, 0, 2, 0, 0, 0, 0]' : 0.238865}", "{'[6, 5, 0, 6, 4, 1, 0, 1, 28, 0, 28, 23, 0, 2, 0, 0, 0, 0]' : 0.243375}", "{'[6, 5, 0, 6, 4, 1, 0, 1, 28, 0, 28, 23, 0, 2, 0, 0, 0, 0]' : 0.240517}", "{'[6, 5, 0, 6, 4, 1, 0, 1, 28, 0, 28, 23, 0, 2, 0, 0, 0, 0]' : 0.235848}", "{'[6, 5, 0, 6, 4, 1, 0, 1, 28, 0, 28, 23, 0, 2, 0, 0, 0, 0]' : 0.235489}", "{'[6, 5, 0, 6, 4, 1, 0, 1, 28, 0, 28, 23, 0, 2, 0, 0, 0, 0]' : 0.235233}", "{'[6, 5, 0, 6, 4, 1, 0, 1, 28, 0, 28, 23, 0, 2, 0, 0, 0, 0]' : 0.2362}", "{'[6, 5, 0, 6, 4, 1, 0, 1, 28, 0, 28, 23, 0, 2, 0, 0, 0, 0]' : 0.243651}", "{'[6, 5, 0, 6, 4, 1, 0, 1, 28, 0, 28, 23, 0, 2, 0, 0, 0, 0]' : 0.242908}", "{'[6, 5, 0, 6, 4, 1, 0, 1, 28, 0, 28, 23, 0, 2, 0, 0, 0, 0]' : 0.235785}"]
returning from 'run': {'[6, 5, 0, 6, 4, 1, 0, 1, 28, 0, 28, 23, 0, 2, 0, 0, 0, 0]': ([0.26896, 0.238414, 0.236096, 0.237265, 0.2432, 0.241692, 0.235251, 0.235303, 0.235232, 0.235226, 0.239088, 0.235475, 0.235271, 0.235185, 0.241042, 0.243299, 0.238568, 0.235231, 0.235509, 0.235414, 0.238865, 0.243375, 0.240517, 0.235848, 0.235489, 0.235233, 0.2362, 0.243651, 0.242908, 0.235785], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 5, 0, 6, 4, 1, 0, 1, 28, 0, 28, 23, 0, 2, 0, 0, 0, 0]': ([0.26896, 0.238414, 0.236096, 0.237265, 0.2432, 0.241692, 0.235251, 0.235303, 0.235232, 0.235226, 0.239088, 0.235475, 0.235271, 0.235185, 0.241042, 0.243299, 0.238568, 0.235231, 0.235509, 0.235414, 0.238865, 0.243375, 0.240517, 0.235848, 0.235489, 0.235233, 0.2362, 0.243651, 0.242908, 0.235785], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	65
        Max loop nest depth: 	5
        Additions: 		1389
        Multiplications: 	540
        Divisions: 		0
        Logical: 		0
        Reads: 			2981
        Writes: 		587
        Comparisons:		65
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest84.exe __orio_perftest84.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest84.exe  
Program Test Output: 
{'[4, 5, 6, 6, 0, 0, 0, 1, 3, 20, 0, 2, 1, 0, 1, 1, 1, 0]' : 0.0990989}
{'[4, 5, 6, 6, 0, 0, 0, 1, 3, 20, 0, 2, 1, 0, 1, 1, 1, 0]' : 0.0990489}
{'[4, 5, 6, 6, 0, 0, 0, 1, 3, 20, 0, 2, 1, 0, 1, 1, 1, 0]' : 0.0989332}
{'[4, 5, 6, 6, 0, 0, 0, 1, 3, 20, 0, 2, 1, 0, 1, 1, 1, 0]' : 0.098593}
{'[4, 5, 6, 6, 0, 0, 0, 1, 3, 20, 0, 2, 1, 0, 1, 1, 1, 0]' : 0.098907}
{'[4, 5, 6, 6, 0, 0, 0, 1, 3, 20, 0, 2, 1, 0, 1, 1, 1, 0]' : 0.0986669}
{'[4, 5, 6, 6, 0, 0, 0, 1, 3, 20, 0, 2, 1, 0, 1, 1, 1, 0]' : 0.0984581}
{'[4, 5, 6, 6, 0, 0, 0, 1, 3, 20, 0, 2, 1, 0, 1, 1, 1, 0]' : 0.098537}
{'[4, 5, 6, 6, 0, 0, 0, 1, 3, 20, 0, 2, 1, 0, 1, 1, 1, 0]' : 0.0985029}
{'[4, 5, 6, 6, 0, 0, 0, 1, 3, 20, 0, 2, 1, 0, 1, 1, 1, 0]' : 0.098839}
{'[4, 5, 6, 6, 0, 0, 0, 1, 3, 20, 0, 2, 1, 0, 1, 1, 1, 0]' : 0.098536}
{'[4, 5, 6, 6, 0, 0, 0, 1, 3, 20, 0, 2, 1, 0, 1, 1, 1, 0]' : 0.098603}
{'[4, 5, 6, 6, 0, 0, 0, 1, 3, 20, 0, 2, 1, 0, 1, 1, 1, 0]' : 0.0985279}
{'[4, 5, 6, 6, 0, 0, 0, 1, 3, 20, 0, 2, 1, 0, 1, 1, 1, 0]' : 0.0986159}
{'[4, 5, 6, 6, 0, 0, 0, 1, 3, 20, 0, 2, 1, 0, 1, 1, 1, 0]' : 0.098465}
{'[4, 5, 6, 6, 0, 0, 0, 1, 3, 20, 0, 2, 1, 0, 1, 1, 1, 0]' : 0.098696}
{'[4, 5, 6, 6, 0, 0, 0, 1, 3, 20, 0, 2, 1, 0, 1, 1, 1, 0]' : 0.09905}
{'[4, 5, 6, 6, 0, 0, 0, 1, 3, 20, 0, 2, 1, 0, 1, 1, 1, 0]' : 0.0986311}
{'[4, 5, 6, 6, 0, 0, 0, 1, 3, 20, 0, 2, 1, 0, 1, 1, 1, 0]' : 0.0984309}
{'[4, 5, 6, 6, 0, 0, 0, 1, 3, 20, 0, 2, 1, 0, 1, 1, 1, 0]' : 0.0984881}
{'[4, 5, 6, 6, 0, 0, 0, 1, 3, 20, 0, 2, 1, 0, 1, 1, 1, 0]' : 0.0985579}
{'[4, 5, 6, 6, 0, 0, 0, 1, 3, 20, 0, 2, 1, 0, 1, 1, 1, 0]' : 0.0984881}
{'[4, 5, 6, 6, 0, 0, 0, 1, 3, 20, 0, 2, 1, 0, 1, 1, 1, 0]' : 0.0985739}
{'[4, 5, 6, 6, 0, 0, 0, 1, 3, 20, 0, 2, 1, 0, 1, 1, 1, 0]' : 0.0985658}
{'[4, 5, 6, 6, 0, 0, 0, 1, 3, 20, 0, 2, 1, 0, 1, 1, 1, 0]' : 0.0992301}
{'[4, 5, 6, 6, 0, 0, 0, 1, 3, 20, 0, 2, 1, 0, 1, 1, 1, 0]' : 0.0986052}
{'[4, 5, 6, 6, 0, 0, 0, 1, 3, 20, 0, 2, 1, 0, 1, 1, 1, 0]' : 0.0985799}
{'[4, 5, 6, 6, 0, 0, 0, 1, 3, 20, 0, 2, 1, 0, 1, 1, 1, 0]' : 0.098665}
{'[4, 5, 6, 6, 0, 0, 0, 1, 3, 20, 0, 2, 1, 0, 1, 1, 1, 0]' : 0.0986218}
{'[4, 5, 6, 6, 0, 0, 0, 1, 3, 20, 0, 2, 1, 0, 1, 1, 1, 0]' : 0.0985072}

out:
 ["{'[4, 5, 6, 6, 0, 0, 0, 1, 3, 20, 0, 2, 1, 0, 1, 1, 1, 0]' : 0.0990989}", "{'[4, 5, 6, 6, 0, 0, 0, 1, 3, 20, 0, 2, 1, 0, 1, 1, 1, 0]' : 0.0990489}", "{'[4, 5, 6, 6, 0, 0, 0, 1, 3, 20, 0, 2, 1, 0, 1, 1, 1, 0]' : 0.0989332}", "{'[4, 5, 6, 6, 0, 0, 0, 1, 3, 20, 0, 2, 1, 0, 1, 1, 1, 0]' : 0.098593}", "{'[4, 5, 6, 6, 0, 0, 0, 1, 3, 20, 0, 2, 1, 0, 1, 1, 1, 0]' : 0.098907}", "{'[4, 5, 6, 6, 0, 0, 0, 1, 3, 20, 0, 2, 1, 0, 1, 1, 1, 0]' : 0.0986669}", "{'[4, 5, 6, 6, 0, 0, 0, 1, 3, 20, 0, 2, 1, 0, 1, 1, 1, 0]' : 0.0984581}", "{'[4, 5, 6, 6, 0, 0, 0, 1, 3, 20, 0, 2, 1, 0, 1, 1, 1, 0]' : 0.098537}", "{'[4, 5, 6, 6, 0, 0, 0, 1, 3, 20, 0, 2, 1, 0, 1, 1, 1, 0]' : 0.0985029}", "{'[4, 5, 6, 6, 0, 0, 0, 1, 3, 20, 0, 2, 1, 0, 1, 1, 1, 0]' : 0.098839}", "{'[4, 5, 6, 6, 0, 0, 0, 1, 3, 20, 0, 2, 1, 0, 1, 1, 1, 0]' : 0.098536}", "{'[4, 5, 6, 6, 0, 0, 0, 1, 3, 20, 0, 2, 1, 0, 1, 1, 1, 0]' : 0.098603}", "{'[4, 5, 6, 6, 0, 0, 0, 1, 3, 20, 0, 2, 1, 0, 1, 1, 1, 0]' : 0.0985279}", "{'[4, 5, 6, 6, 0, 0, 0, 1, 3, 20, 0, 2, 1, 0, 1, 1, 1, 0]' : 0.0986159}", "{'[4, 5, 6, 6, 0, 0, 0, 1, 3, 20, 0, 2, 1, 0, 1, 1, 1, 0]' : 0.098465}", "{'[4, 5, 6, 6, 0, 0, 0, 1, 3, 20, 0, 2, 1, 0, 1, 1, 1, 0]' : 0.098696}", "{'[4, 5, 6, 6, 0, 0, 0, 1, 3, 20, 0, 2, 1, 0, 1, 1, 1, 0]' : 0.09905}", "{'[4, 5, 6, 6, 0, 0, 0, 1, 3, 20, 0, 2, 1, 0, 1, 1, 1, 0]' : 0.0986311}", "{'[4, 5, 6, 6, 0, 0, 0, 1, 3, 20, 0, 2, 1, 0, 1, 1, 1, 0]' : 0.0984309}", "{'[4, 5, 6, 6, 0, 0, 0, 1, 3, 20, 0, 2, 1, 0, 1, 1, 1, 0]' : 0.0984881}", "{'[4, 5, 6, 6, 0, 0, 0, 1, 3, 20, 0, 2, 1, 0, 1, 1, 1, 0]' : 0.0985579}", "{'[4, 5, 6, 6, 0, 0, 0, 1, 3, 20, 0, 2, 1, 0, 1, 1, 1, 0]' : 0.0984881}", "{'[4, 5, 6, 6, 0, 0, 0, 1, 3, 20, 0, 2, 1, 0, 1, 1, 1, 0]' : 0.0985739}", "{'[4, 5, 6, 6, 0, 0, 0, 1, 3, 20, 0, 2, 1, 0, 1, 1, 1, 0]' : 0.0985658}", "{'[4, 5, 6, 6, 0, 0, 0, 1, 3, 20, 0, 2, 1, 0, 1, 1, 1, 0]' : 0.0992301}", "{'[4, 5, 6, 6, 0, 0, 0, 1, 3, 20, 0, 2, 1, 0, 1, 1, 1, 0]' : 0.0986052}", "{'[4, 5, 6, 6, 0, 0, 0, 1, 3, 20, 0, 2, 1, 0, 1, 1, 1, 0]' : 0.0985799}", "{'[4, 5, 6, 6, 0, 0, 0, 1, 3, 20, 0, 2, 1, 0, 1, 1, 1, 0]' : 0.098665}", "{'[4, 5, 6, 6, 0, 0, 0, 1, 3, 20, 0, 2, 1, 0, 1, 1, 1, 0]' : 0.0986218}", "{'[4, 5, 6, 6, 0, 0, 0, 1, 3, 20, 0, 2, 1, 0, 1, 1, 1, 0]' : 0.0985072}"]
returning from 'run': {'[4, 5, 6, 6, 0, 0, 0, 1, 3, 20, 0, 2, 1, 0, 1, 1, 1, 0]': ([0.0990989, 0.0990489, 0.0989332, 0.098593, 0.098907, 0.0986669, 0.0984581, 0.098537, 0.0985029, 0.098839, 0.098536, 0.098603, 0.0985279, 0.0986159, 0.098465, 0.098696, 0.09905, 0.0986311, 0.0984309, 0.0984881, 0.0985579, 0.0984881, 0.0985739, 0.0985658, 0.0992301, 0.0986052, 0.0985799, 0.098665, 0.0986218, 0.0985072], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 5, 6, 6, 0, 0, 0, 1, 3, 20, 0, 2, 1, 0, 1, 1, 1, 0]': ([0.0990989, 0.0990489, 0.0989332, 0.098593, 0.098907, 0.0986669, 0.0984581, 0.098537, 0.0985029, 0.098839, 0.098536, 0.098603, 0.0985279, 0.0986159, 0.098465, 0.098696, 0.09905, 0.0986311, 0.0984309, 0.0984881, 0.0985579, 0.0984881, 0.0985739, 0.0985658, 0.0992301, 0.0986052, 0.0985799, 0.098665, 0.0986218, 0.0985072], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = jjj
Code stats:
        Number of loops: 	41
        Max loop nest depth: 	6
        Additions: 		1800
        Multiplications: 	672
        Divisions: 		0
        Logical: 		0
        Reads: 			3599
        Writes: 		666
        Comparisons:		41
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest85.exe __orio_perftest85.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest85.exe  
Program Test Output: 
{'[3, 5, 3, 6, 3, 6, 0, 1, 0, 2, 0, 17, 1, 1, 0, 1, 0, 0]' : 0.106269}
{'[3, 5, 3, 6, 3, 6, 0, 1, 0, 2, 0, 17, 1, 1, 0, 1, 0, 0]' : 0.106048}
{'[3, 5, 3, 6, 3, 6, 0, 1, 0, 2, 0, 17, 1, 1, 0, 1, 0, 0]' : 0.106105}
{'[3, 5, 3, 6, 3, 6, 0, 1, 0, 2, 0, 17, 1, 1, 0, 1, 0, 0]' : 0.10602}
{'[3, 5, 3, 6, 3, 6, 0, 1, 0, 2, 0, 17, 1, 1, 0, 1, 0, 0]' : 0.103735}
{'[3, 5, 3, 6, 3, 6, 0, 1, 0, 2, 0, 17, 1, 1, 0, 1, 0, 0]' : 0.0927112}
{'[3, 5, 3, 6, 3, 6, 0, 1, 0, 2, 0, 17, 1, 1, 0, 1, 0, 0]' : 0.092303}
{'[3, 5, 3, 6, 3, 6, 0, 1, 0, 2, 0, 17, 1, 1, 0, 1, 0, 0]' : 0.092344}
{'[3, 5, 3, 6, 3, 6, 0, 1, 0, 2, 0, 17, 1, 1, 0, 1, 0, 0]' : 0.0924182}
{'[3, 5, 3, 6, 3, 6, 0, 1, 0, 2, 0, 17, 1, 1, 0, 1, 0, 0]' : 0.092438}
{'[3, 5, 3, 6, 3, 6, 0, 1, 0, 2, 0, 17, 1, 1, 0, 1, 0, 0]' : 0.092428}
{'[3, 5, 3, 6, 3, 6, 0, 1, 0, 2, 0, 17, 1, 1, 0, 1, 0, 0]' : 0.0929179}
{'[3, 5, 3, 6, 3, 6, 0, 1, 0, 2, 0, 17, 1, 1, 0, 1, 0, 0]' : 0.0928431}
{'[3, 5, 3, 6, 3, 6, 0, 1, 0, 2, 0, 17, 1, 1, 0, 1, 0, 0]' : 0.0925128}
{'[3, 5, 3, 6, 3, 6, 0, 1, 0, 2, 0, 17, 1, 1, 0, 1, 0, 0]' : 0.0925319}
{'[3, 5, 3, 6, 3, 6, 0, 1, 0, 2, 0, 17, 1, 1, 0, 1, 0, 0]' : 0.0925391}
{'[3, 5, 3, 6, 3, 6, 0, 1, 0, 2, 0, 17, 1, 1, 0, 1, 0, 0]' : 0.0924909}
{'[3, 5, 3, 6, 3, 6, 0, 1, 0, 2, 0, 17, 1, 1, 0, 1, 0, 0]' : 0.0924962}
{'[3, 5, 3, 6, 3, 6, 0, 1, 0, 2, 0, 17, 1, 1, 0, 1, 0, 0]' : 0.0925119}
{'[3, 5, 3, 6, 3, 6, 0, 1, 0, 2, 0, 17, 1, 1, 0, 1, 0, 0]' : 0.092634}
{'[3, 5, 3, 6, 3, 6, 0, 1, 0, 2, 0, 17, 1, 1, 0, 1, 0, 0]' : 0.092556}
{'[3, 5, 3, 6, 3, 6, 0, 1, 0, 2, 0, 17, 1, 1, 0, 1, 0, 0]' : 0.092355}
{'[3, 5, 3, 6, 3, 6, 0, 1, 0, 2, 0, 17, 1, 1, 0, 1, 0, 0]' : 0.0924821}
{'[3, 5, 3, 6, 3, 6, 0, 1, 0, 2, 0, 17, 1, 1, 0, 1, 0, 0]' : 0.09273}
{'[3, 5, 3, 6, 3, 6, 0, 1, 0, 2, 0, 17, 1, 1, 0, 1, 0, 0]' : 0.092875}
{'[3, 5, 3, 6, 3, 6, 0, 1, 0, 2, 0, 17, 1, 1, 0, 1, 0, 0]' : 0.0925169}
{'[3, 5, 3, 6, 3, 6, 0, 1, 0, 2, 0, 17, 1, 1, 0, 1, 0, 0]' : 0.092612}
{'[3, 5, 3, 6, 3, 6, 0, 1, 0, 2, 0, 17, 1, 1, 0, 1, 0, 0]' : 0.0926111}
{'[3, 5, 3, 6, 3, 6, 0, 1, 0, 2, 0, 17, 1, 1, 0, 1, 0, 0]' : 0.0924301}
{'[3, 5, 3, 6, 3, 6, 0, 1, 0, 2, 0, 17, 1, 1, 0, 1, 0, 0]' : 0.09252}

out:
 ["{'[3, 5, 3, 6, 3, 6, 0, 1, 0, 2, 0, 17, 1, 1, 0, 1, 0, 0]' : 0.106269}", "{'[3, 5, 3, 6, 3, 6, 0, 1, 0, 2, 0, 17, 1, 1, 0, 1, 0, 0]' : 0.106048}", "{'[3, 5, 3, 6, 3, 6, 0, 1, 0, 2, 0, 17, 1, 1, 0, 1, 0, 0]' : 0.106105}", "{'[3, 5, 3, 6, 3, 6, 0, 1, 0, 2, 0, 17, 1, 1, 0, 1, 0, 0]' : 0.10602}", "{'[3, 5, 3, 6, 3, 6, 0, 1, 0, 2, 0, 17, 1, 1, 0, 1, 0, 0]' : 0.103735}", "{'[3, 5, 3, 6, 3, 6, 0, 1, 0, 2, 0, 17, 1, 1, 0, 1, 0, 0]' : 0.0927112}", "{'[3, 5, 3, 6, 3, 6, 0, 1, 0, 2, 0, 17, 1, 1, 0, 1, 0, 0]' : 0.092303}", "{'[3, 5, 3, 6, 3, 6, 0, 1, 0, 2, 0, 17, 1, 1, 0, 1, 0, 0]' : 0.092344}", "{'[3, 5, 3, 6, 3, 6, 0, 1, 0, 2, 0, 17, 1, 1, 0, 1, 0, 0]' : 0.0924182}", "{'[3, 5, 3, 6, 3, 6, 0, 1, 0, 2, 0, 17, 1, 1, 0, 1, 0, 0]' : 0.092438}", "{'[3, 5, 3, 6, 3, 6, 0, 1, 0, 2, 0, 17, 1, 1, 0, 1, 0, 0]' : 0.092428}", "{'[3, 5, 3, 6, 3, 6, 0, 1, 0, 2, 0, 17, 1, 1, 0, 1, 0, 0]' : 0.0929179}", "{'[3, 5, 3, 6, 3, 6, 0, 1, 0, 2, 0, 17, 1, 1, 0, 1, 0, 0]' : 0.0928431}", "{'[3, 5, 3, 6, 3, 6, 0, 1, 0, 2, 0, 17, 1, 1, 0, 1, 0, 0]' : 0.0925128}", "{'[3, 5, 3, 6, 3, 6, 0, 1, 0, 2, 0, 17, 1, 1, 0, 1, 0, 0]' : 0.0925319}", "{'[3, 5, 3, 6, 3, 6, 0, 1, 0, 2, 0, 17, 1, 1, 0, 1, 0, 0]' : 0.0925391}", "{'[3, 5, 3, 6, 3, 6, 0, 1, 0, 2, 0, 17, 1, 1, 0, 1, 0, 0]' : 0.0924909}", "{'[3, 5, 3, 6, 3, 6, 0, 1, 0, 2, 0, 17, 1, 1, 0, 1, 0, 0]' : 0.0924962}", "{'[3, 5, 3, 6, 3, 6, 0, 1, 0, 2, 0, 17, 1, 1, 0, 1, 0, 0]' : 0.0925119}", "{'[3, 5, 3, 6, 3, 6, 0, 1, 0, 2, 0, 17, 1, 1, 0, 1, 0, 0]' : 0.092634}", "{'[3, 5, 3, 6, 3, 6, 0, 1, 0, 2, 0, 17, 1, 1, 0, 1, 0, 0]' : 0.092556}", "{'[3, 5, 3, 6, 3, 6, 0, 1, 0, 2, 0, 17, 1, 1, 0, 1, 0, 0]' : 0.092355}", "{'[3, 5, 3, 6, 3, 6, 0, 1, 0, 2, 0, 17, 1, 1, 0, 1, 0, 0]' : 0.0924821}", "{'[3, 5, 3, 6, 3, 6, 0, 1, 0, 2, 0, 17, 1, 1, 0, 1, 0, 0]' : 0.09273}", "{'[3, 5, 3, 6, 3, 6, 0, 1, 0, 2, 0, 17, 1, 1, 0, 1, 0, 0]' : 0.092875}", "{'[3, 5, 3, 6, 3, 6, 0, 1, 0, 2, 0, 17, 1, 1, 0, 1, 0, 0]' : 0.0925169}", "{'[3, 5, 3, 6, 3, 6, 0, 1, 0, 2, 0, 17, 1, 1, 0, 1, 0, 0]' : 0.092612}", "{'[3, 5, 3, 6, 3, 6, 0, 1, 0, 2, 0, 17, 1, 1, 0, 1, 0, 0]' : 0.0926111}", "{'[3, 5, 3, 6, 3, 6, 0, 1, 0, 2, 0, 17, 1, 1, 0, 1, 0, 0]' : 0.0924301}", "{'[3, 5, 3, 6, 3, 6, 0, 1, 0, 2, 0, 17, 1, 1, 0, 1, 0, 0]' : 0.09252}"]
returning from 'run': {'[3, 5, 3, 6, 3, 6, 0, 1, 0, 2, 0, 17, 1, 1, 0, 1, 0, 0]': ([0.106269, 0.106048, 0.106105, 0.10602, 0.103735, 0.0927112, 0.092303, 0.092344, 0.0924182, 0.092438, 0.092428, 0.0929179, 0.0928431, 0.0925128, 0.0925319, 0.0925391, 0.0924909, 0.0924962, 0.0925119, 0.092634, 0.092556, 0.092355, 0.0924821, 0.09273, 0.092875, 0.0925169, 0.092612, 0.0926111, 0.0924301, 0.09252], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 5, 3, 6, 3, 6, 0, 1, 0, 2, 0, 17, 1, 1, 0, 1, 0, 0]': ([0.106269, 0.106048, 0.106105, 0.10602, 0.103735, 0.0927112, 0.092303, 0.092344, 0.0924182, 0.092438, 0.092428, 0.0929179, 0.0928431, 0.0925128, 0.0925319, 0.0925391, 0.0924909, 0.0924962, 0.0925119, 0.092634, 0.092556, 0.092355, 0.0924821, 0.09273, 0.092875, 0.0925169, 0.092612, 0.0926111, 0.0924301, 0.09252], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	5
        Additions: 		508
        Multiplications: 	198
        Divisions: 		0
        Logical: 		0
        Reads: 			1042
        Writes: 		211
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest86.exe __orio_perftest86.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest86.exe  
Program Test Output: 
{'[0, 5, 5, 5, 6, 5, 1, 0, 29, 0, 8, 0, 1, 0, 0, 1, 1, 0]' : 0.124436}
{'[0, 5, 5, 5, 6, 5, 1, 0, 29, 0, 8, 0, 1, 0, 0, 1, 1, 0]' : 0.124283}
{'[0, 5, 5, 5, 6, 5, 1, 0, 29, 0, 8, 0, 1, 0, 0, 1, 1, 0]' : 0.124198}
{'[0, 5, 5, 5, 6, 5, 1, 0, 29, 0, 8, 0, 1, 0, 0, 1, 1, 0]' : 0.123468}
{'[0, 5, 5, 5, 6, 5, 1, 0, 29, 0, 8, 0, 1, 0, 0, 1, 1, 0]' : 0.10979}
{'[0, 5, 5, 5, 6, 5, 1, 0, 29, 0, 8, 0, 1, 0, 0, 1, 1, 0]' : 0.107886}
{'[0, 5, 5, 5, 6, 5, 1, 0, 29, 0, 8, 0, 1, 0, 0, 1, 1, 0]' : 0.107939}
{'[0, 5, 5, 5, 6, 5, 1, 0, 29, 0, 8, 0, 1, 0, 0, 1, 1, 0]' : 0.108078}
{'[0, 5, 5, 5, 6, 5, 1, 0, 29, 0, 8, 0, 1, 0, 0, 1, 1, 0]' : 0.107879}
{'[0, 5, 5, 5, 6, 5, 1, 0, 29, 0, 8, 0, 1, 0, 0, 1, 1, 0]' : 0.107858}
{'[0, 5, 5, 5, 6, 5, 1, 0, 29, 0, 8, 0, 1, 0, 0, 1, 1, 0]' : 0.107844}
{'[0, 5, 5, 5, 6, 5, 1, 0, 29, 0, 8, 0, 1, 0, 0, 1, 1, 0]' : 0.107965}
{'[0, 5, 5, 5, 6, 5, 1, 0, 29, 0, 8, 0, 1, 0, 0, 1, 1, 0]' : 0.108007}
{'[0, 5, 5, 5, 6, 5, 1, 0, 29, 0, 8, 0, 1, 0, 0, 1, 1, 0]' : 0.107826}
{'[0, 5, 5, 5, 6, 5, 1, 0, 29, 0, 8, 0, 1, 0, 0, 1, 1, 0]' : 0.10799}
{'[0, 5, 5, 5, 6, 5, 1, 0, 29, 0, 8, 0, 1, 0, 0, 1, 1, 0]' : 0.10845}
{'[0, 5, 5, 5, 6, 5, 1, 0, 29, 0, 8, 0, 1, 0, 0, 1, 1, 0]' : 0.107999}
{'[0, 5, 5, 5, 6, 5, 1, 0, 29, 0, 8, 0, 1, 0, 0, 1, 1, 0]' : 0.10811}
{'[0, 5, 5, 5, 6, 5, 1, 0, 29, 0, 8, 0, 1, 0, 0, 1, 1, 0]' : 0.107946}
{'[0, 5, 5, 5, 6, 5, 1, 0, 29, 0, 8, 0, 1, 0, 0, 1, 1, 0]' : 0.10787}
{'[0, 5, 5, 5, 6, 5, 1, 0, 29, 0, 8, 0, 1, 0, 0, 1, 1, 0]' : 0.107817}
{'[0, 5, 5, 5, 6, 5, 1, 0, 29, 0, 8, 0, 1, 0, 0, 1, 1, 0]' : 0.10783}
{'[0, 5, 5, 5, 6, 5, 1, 0, 29, 0, 8, 0, 1, 0, 0, 1, 1, 0]' : 0.108019}
{'[0, 5, 5, 5, 6, 5, 1, 0, 29, 0, 8, 0, 1, 0, 0, 1, 1, 0]' : 0.107849}
{'[0, 5, 5, 5, 6, 5, 1, 0, 29, 0, 8, 0, 1, 0, 0, 1, 1, 0]' : 0.107928}
{'[0, 5, 5, 5, 6, 5, 1, 0, 29, 0, 8, 0, 1, 0, 0, 1, 1, 0]' : 0.107865}
{'[0, 5, 5, 5, 6, 5, 1, 0, 29, 0, 8, 0, 1, 0, 0, 1, 1, 0]' : 0.107772}
{'[0, 5, 5, 5, 6, 5, 1, 0, 29, 0, 8, 0, 1, 0, 0, 1, 1, 0]' : 0.10817}
{'[0, 5, 5, 5, 6, 5, 1, 0, 29, 0, 8, 0, 1, 0, 0, 1, 1, 0]' : 0.108039}
{'[0, 5, 5, 5, 6, 5, 1, 0, 29, 0, 8, 0, 1, 0, 0, 1, 1, 0]' : 0.107847}

out:
 ["{'[0, 5, 5, 5, 6, 5, 1, 0, 29, 0, 8, 0, 1, 0, 0, 1, 1, 0]' : 0.124436}", "{'[0, 5, 5, 5, 6, 5, 1, 0, 29, 0, 8, 0, 1, 0, 0, 1, 1, 0]' : 0.124283}", "{'[0, 5, 5, 5, 6, 5, 1, 0, 29, 0, 8, 0, 1, 0, 0, 1, 1, 0]' : 0.124198}", "{'[0, 5, 5, 5, 6, 5, 1, 0, 29, 0, 8, 0, 1, 0, 0, 1, 1, 0]' : 0.123468}", "{'[0, 5, 5, 5, 6, 5, 1, 0, 29, 0, 8, 0, 1, 0, 0, 1, 1, 0]' : 0.10979}", "{'[0, 5, 5, 5, 6, 5, 1, 0, 29, 0, 8, 0, 1, 0, 0, 1, 1, 0]' : 0.107886}", "{'[0, 5, 5, 5, 6, 5, 1, 0, 29, 0, 8, 0, 1, 0, 0, 1, 1, 0]' : 0.107939}", "{'[0, 5, 5, 5, 6, 5, 1, 0, 29, 0, 8, 0, 1, 0, 0, 1, 1, 0]' : 0.108078}", "{'[0, 5, 5, 5, 6, 5, 1, 0, 29, 0, 8, 0, 1, 0, 0, 1, 1, 0]' : 0.107879}", "{'[0, 5, 5, 5, 6, 5, 1, 0, 29, 0, 8, 0, 1, 0, 0, 1, 1, 0]' : 0.107858}", "{'[0, 5, 5, 5, 6, 5, 1, 0, 29, 0, 8, 0, 1, 0, 0, 1, 1, 0]' : 0.107844}", "{'[0, 5, 5, 5, 6, 5, 1, 0, 29, 0, 8, 0, 1, 0, 0, 1, 1, 0]' : 0.107965}", "{'[0, 5, 5, 5, 6, 5, 1, 0, 29, 0, 8, 0, 1, 0, 0, 1, 1, 0]' : 0.108007}", "{'[0, 5, 5, 5, 6, 5, 1, 0, 29, 0, 8, 0, 1, 0, 0, 1, 1, 0]' : 0.107826}", "{'[0, 5, 5, 5, 6, 5, 1, 0, 29, 0, 8, 0, 1, 0, 0, 1, 1, 0]' : 0.10799}", "{'[0, 5, 5, 5, 6, 5, 1, 0, 29, 0, 8, 0, 1, 0, 0, 1, 1, 0]' : 0.10845}", "{'[0, 5, 5, 5, 6, 5, 1, 0, 29, 0, 8, 0, 1, 0, 0, 1, 1, 0]' : 0.107999}", "{'[0, 5, 5, 5, 6, 5, 1, 0, 29, 0, 8, 0, 1, 0, 0, 1, 1, 0]' : 0.10811}", "{'[0, 5, 5, 5, 6, 5, 1, 0, 29, 0, 8, 0, 1, 0, 0, 1, 1, 0]' : 0.107946}", "{'[0, 5, 5, 5, 6, 5, 1, 0, 29, 0, 8, 0, 1, 0, 0, 1, 1, 0]' : 0.10787}", "{'[0, 5, 5, 5, 6, 5, 1, 0, 29, 0, 8, 0, 1, 0, 0, 1, 1, 0]' : 0.107817}", "{'[0, 5, 5, 5, 6, 5, 1, 0, 29, 0, 8, 0, 1, 0, 0, 1, 1, 0]' : 0.10783}", "{'[0, 5, 5, 5, 6, 5, 1, 0, 29, 0, 8, 0, 1, 0, 0, 1, 1, 0]' : 0.108019}", "{'[0, 5, 5, 5, 6, 5, 1, 0, 29, 0, 8, 0, 1, 0, 0, 1, 1, 0]' : 0.107849}", "{'[0, 5, 5, 5, 6, 5, 1, 0, 29, 0, 8, 0, 1, 0, 0, 1, 1, 0]' : 0.107928}", "{'[0, 5, 5, 5, 6, 5, 1, 0, 29, 0, 8, 0, 1, 0, 0, 1, 1, 0]' : 0.107865}", "{'[0, 5, 5, 5, 6, 5, 1, 0, 29, 0, 8, 0, 1, 0, 0, 1, 1, 0]' : 0.107772}", "{'[0, 5, 5, 5, 6, 5, 1, 0, 29, 0, 8, 0, 1, 0, 0, 1, 1, 0]' : 0.10817}", "{'[0, 5, 5, 5, 6, 5, 1, 0, 29, 0, 8, 0, 1, 0, 0, 1, 1, 0]' : 0.108039}", "{'[0, 5, 5, 5, 6, 5, 1, 0, 29, 0, 8, 0, 1, 0, 0, 1, 1, 0]' : 0.107847}"]
returning from 'run': {'[0, 5, 5, 5, 6, 5, 1, 0, 29, 0, 8, 0, 1, 0, 0, 1, 1, 0]': ([0.124436, 0.124283, 0.124198, 0.123468, 0.10979, 0.107886, 0.107939, 0.108078, 0.107879, 0.107858, 0.107844, 0.107965, 0.108007, 0.107826, 0.10799, 0.10845, 0.107999, 0.10811, 0.107946, 0.10787, 0.107817, 0.10783, 0.108019, 0.107849, 0.107928, 0.107865, 0.107772, 0.10817, 0.108039, 0.107847], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 5, 5, 5, 6, 5, 1, 0, 29, 0, 8, 0, 1, 0, 0, 1, 1, 0]': ([0.124436, 0.124283, 0.124198, 0.123468, 0.10979, 0.107886, 0.107939, 0.108078, 0.107879, 0.107858, 0.107844, 0.107965, 0.108007, 0.107826, 0.10799, 0.10845, 0.107999, 0.10811, 0.107946, 0.10787, 0.107817, 0.10783, 0.108019, 0.107849, 0.107928, 0.107865, 0.107772, 0.10817, 0.108039, 0.107847], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	6
        Additions: 		124
        Multiplications: 	26
        Divisions: 		0
        Logical: 		0
        Reads: 			268
        Writes: 		66
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest87.exe __orio_perftest87.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest87.exe  
Program Test Output: 
{'[6, 5, 4, 5, 0, 6, 0, 0, 26, 0, 0, 2, 0, 0, 1, 0, 0, 0]' : 0.434436}
{'[6, 5, 4, 5, 0, 6, 0, 0, 26, 0, 0, 2, 0, 0, 1, 0, 0, 0]' : 0.385745}
{'[6, 5, 4, 5, 0, 6, 0, 0, 26, 0, 0, 2, 0, 0, 1, 0, 0, 0]' : 0.366711}
{'[6, 5, 4, 5, 0, 6, 0, 0, 26, 0, 0, 2, 0, 0, 1, 0, 0, 0]' : 0.366782}
{'[6, 5, 4, 5, 0, 6, 0, 0, 26, 0, 0, 2, 0, 0, 1, 0, 0, 0]' : 0.366975}
{'[6, 5, 4, 5, 0, 6, 0, 0, 26, 0, 0, 2, 0, 0, 1, 0, 0, 0]' : 0.36673}
{'[6, 5, 4, 5, 0, 6, 0, 0, 26, 0, 0, 2, 0, 0, 1, 0, 0, 0]' : 0.366371}
{'[6, 5, 4, 5, 0, 6, 0, 0, 26, 0, 0, 2, 0, 0, 1, 0, 0, 0]' : 0.366949}
{'[6, 5, 4, 5, 0, 6, 0, 0, 26, 0, 0, 2, 0, 0, 1, 0, 0, 0]' : 0.366292}
{'[6, 5, 4, 5, 0, 6, 0, 0, 26, 0, 0, 2, 0, 0, 1, 0, 0, 0]' : 0.366437}
{'[6, 5, 4, 5, 0, 6, 0, 0, 26, 0, 0, 2, 0, 0, 1, 0, 0, 0]' : 0.366918}
{'[6, 5, 4, 5, 0, 6, 0, 0, 26, 0, 0, 2, 0, 0, 1, 0, 0, 0]' : 0.366518}
{'[6, 5, 4, 5, 0, 6, 0, 0, 26, 0, 0, 2, 0, 0, 1, 0, 0, 0]' : 0.366839}
{'[6, 5, 4, 5, 0, 6, 0, 0, 26, 0, 0, 2, 0, 0, 1, 0, 0, 0]' : 0.366932}
{'[6, 5, 4, 5, 0, 6, 0, 0, 26, 0, 0, 2, 0, 0, 1, 0, 0, 0]' : 0.366603}
{'[6, 5, 4, 5, 0, 6, 0, 0, 26, 0, 0, 2, 0, 0, 1, 0, 0, 0]' : 0.366463}
{'[6, 5, 4, 5, 0, 6, 0, 0, 26, 0, 0, 2, 0, 0, 1, 0, 0, 0]' : 0.366901}
{'[6, 5, 4, 5, 0, 6, 0, 0, 26, 0, 0, 2, 0, 0, 1, 0, 0, 0]' : 0.371151}
{'[6, 5, 4, 5, 0, 6, 0, 0, 26, 0, 0, 2, 0, 0, 1, 0, 0, 0]' : 0.378509}
{'[6, 5, 4, 5, 0, 6, 0, 0, 26, 0, 0, 2, 0, 0, 1, 0, 0, 0]' : 0.378731}
{'[6, 5, 4, 5, 0, 6, 0, 0, 26, 0, 0, 2, 0, 0, 1, 0, 0, 0]' : 0.378158}
{'[6, 5, 4, 5, 0, 6, 0, 0, 26, 0, 0, 2, 0, 0, 1, 0, 0, 0]' : 0.37832}
{'[6, 5, 4, 5, 0, 6, 0, 0, 26, 0, 0, 2, 0, 0, 1, 0, 0, 0]' : 0.378517}
{'[6, 5, 4, 5, 0, 6, 0, 0, 26, 0, 0, 2, 0, 0, 1, 0, 0, 0]' : 0.378406}
{'[6, 5, 4, 5, 0, 6, 0, 0, 26, 0, 0, 2, 0, 0, 1, 0, 0, 0]' : 0.378578}
{'[6, 5, 4, 5, 0, 6, 0, 0, 26, 0, 0, 2, 0, 0, 1, 0, 0, 0]' : 0.378603}
{'[6, 5, 4, 5, 0, 6, 0, 0, 26, 0, 0, 2, 0, 0, 1, 0, 0, 0]' : 0.385438}
{'[6, 5, 4, 5, 0, 6, 0, 0, 26, 0, 0, 2, 0, 0, 1, 0, 0, 0]' : 0.389566}
{'[6, 5, 4, 5, 0, 6, 0, 0, 26, 0, 0, 2, 0, 0, 1, 0, 0, 0]' : 0.389697}
{'[6, 5, 4, 5, 0, 6, 0, 0, 26, 0, 0, 2, 0, 0, 1, 0, 0, 0]' : 0.389568}

out:
 ["{'[6, 5, 4, 5, 0, 6, 0, 0, 26, 0, 0, 2, 0, 0, 1, 0, 0, 0]' : 0.434436}", "{'[6, 5, 4, 5, 0, 6, 0, 0, 26, 0, 0, 2, 0, 0, 1, 0, 0, 0]' : 0.385745}", "{'[6, 5, 4, 5, 0, 6, 0, 0, 26, 0, 0, 2, 0, 0, 1, 0, 0, 0]' : 0.366711}", "{'[6, 5, 4, 5, 0, 6, 0, 0, 26, 0, 0, 2, 0, 0, 1, 0, 0, 0]' : 0.366782}", "{'[6, 5, 4, 5, 0, 6, 0, 0, 26, 0, 0, 2, 0, 0, 1, 0, 0, 0]' : 0.366975}", "{'[6, 5, 4, 5, 0, 6, 0, 0, 26, 0, 0, 2, 0, 0, 1, 0, 0, 0]' : 0.36673}", "{'[6, 5, 4, 5, 0, 6, 0, 0, 26, 0, 0, 2, 0, 0, 1, 0, 0, 0]' : 0.366371}", "{'[6, 5, 4, 5, 0, 6, 0, 0, 26, 0, 0, 2, 0, 0, 1, 0, 0, 0]' : 0.366949}", "{'[6, 5, 4, 5, 0, 6, 0, 0, 26, 0, 0, 2, 0, 0, 1, 0, 0, 0]' : 0.366292}", "{'[6, 5, 4, 5, 0, 6, 0, 0, 26, 0, 0, 2, 0, 0, 1, 0, 0, 0]' : 0.366437}", "{'[6, 5, 4, 5, 0, 6, 0, 0, 26, 0, 0, 2, 0, 0, 1, 0, 0, 0]' : 0.366918}", "{'[6, 5, 4, 5, 0, 6, 0, 0, 26, 0, 0, 2, 0, 0, 1, 0, 0, 0]' : 0.366518}", "{'[6, 5, 4, 5, 0, 6, 0, 0, 26, 0, 0, 2, 0, 0, 1, 0, 0, 0]' : 0.366839}", "{'[6, 5, 4, 5, 0, 6, 0, 0, 26, 0, 0, 2, 0, 0, 1, 0, 0, 0]' : 0.366932}", "{'[6, 5, 4, 5, 0, 6, 0, 0, 26, 0, 0, 2, 0, 0, 1, 0, 0, 0]' : 0.366603}", "{'[6, 5, 4, 5, 0, 6, 0, 0, 26, 0, 0, 2, 0, 0, 1, 0, 0, 0]' : 0.366463}", "{'[6, 5, 4, 5, 0, 6, 0, 0, 26, 0, 0, 2, 0, 0, 1, 0, 0, 0]' : 0.366901}", "{'[6, 5, 4, 5, 0, 6, 0, 0, 26, 0, 0, 2, 0, 0, 1, 0, 0, 0]' : 0.371151}", "{'[6, 5, 4, 5, 0, 6, 0, 0, 26, 0, 0, 2, 0, 0, 1, 0, 0, 0]' : 0.378509}", "{'[6, 5, 4, 5, 0, 6, 0, 0, 26, 0, 0, 2, 0, 0, 1, 0, 0, 0]' : 0.378731}", "{'[6, 5, 4, 5, 0, 6, 0, 0, 26, 0, 0, 2, 0, 0, 1, 0, 0, 0]' : 0.378158}", "{'[6, 5, 4, 5, 0, 6, 0, 0, 26, 0, 0, 2, 0, 0, 1, 0, 0, 0]' : 0.37832}", "{'[6, 5, 4, 5, 0, 6, 0, 0, 26, 0, 0, 2, 0, 0, 1, 0, 0, 0]' : 0.378517}", "{'[6, 5, 4, 5, 0, 6, 0, 0, 26, 0, 0, 2, 0, 0, 1, 0, 0, 0]' : 0.378406}", "{'[6, 5, 4, 5, 0, 6, 0, 0, 26, 0, 0, 2, 0, 0, 1, 0, 0, 0]' : 0.378578}", "{'[6, 5, 4, 5, 0, 6, 0, 0, 26, 0, 0, 2, 0, 0, 1, 0, 0, 0]' : 0.378603}", "{'[6, 5, 4, 5, 0, 6, 0, 0, 26, 0, 0, 2, 0, 0, 1, 0, 0, 0]' : 0.385438}", "{'[6, 5, 4, 5, 0, 6, 0, 0, 26, 0, 0, 2, 0, 0, 1, 0, 0, 0]' : 0.389566}", "{'[6, 5, 4, 5, 0, 6, 0, 0, 26, 0, 0, 2, 0, 0, 1, 0, 0, 0]' : 0.389697}", "{'[6, 5, 4, 5, 0, 6, 0, 0, 26, 0, 0, 2, 0, 0, 1, 0, 0, 0]' : 0.389568}"]
returning from 'run': {'[6, 5, 4, 5, 0, 6, 0, 0, 26, 0, 0, 2, 0, 0, 1, 0, 0, 0]': ([0.434436, 0.385745, 0.366711, 0.366782, 0.366975, 0.36673, 0.366371, 0.366949, 0.366292, 0.366437, 0.366918, 0.366518, 0.366839, 0.366932, 0.366603, 0.366463, 0.366901, 0.371151, 0.378509, 0.378731, 0.378158, 0.37832, 0.378517, 0.378406, 0.378578, 0.378603, 0.385438, 0.389566, 0.389697, 0.389568], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 5, 4, 5, 0, 6, 0, 0, 26, 0, 0, 2, 0, 0, 1, 0, 0, 0]': ([0.434436, 0.385745, 0.366711, 0.366782, 0.366975, 0.36673, 0.366371, 0.366949, 0.366292, 0.366437, 0.366918, 0.366518, 0.366839, 0.366932, 0.366603, 0.366463, 0.366901, 0.371151, 0.378509, 0.378731, 0.378158, 0.37832, 0.378517, 0.378406, 0.378578, 0.378603, 0.385438, 0.389566, 0.389697, 0.389568], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	5
        Additions: 		151
        Multiplications: 	50
        Divisions: 		0
        Logical: 		0
        Reads: 			410
        Writes: 		108
        Comparisons:		9
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest88.exe __orio_perftest88.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest88.exe  
Program Test Output: 
{'[0, 5, 0, 5, 4, 0, 0, 1, 8, 0, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.178281}
{'[0, 5, 0, 5, 4, 0, 0, 1, 8, 0, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.178153}
{'[0, 5, 0, 5, 4, 0, 0, 1, 8, 0, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.172932}
{'[0, 5, 0, 5, 4, 0, 0, 1, 8, 0, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.149069}
{'[0, 5, 0, 5, 4, 0, 0, 1, 8, 0, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.149044}
{'[0, 5, 0, 5, 4, 0, 0, 1, 8, 0, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.148829}
{'[0, 5, 0, 5, 4, 0, 0, 1, 8, 0, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.148957}
{'[0, 5, 0, 5, 4, 0, 0, 1, 8, 0, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.149197}
{'[0, 5, 0, 5, 4, 0, 0, 1, 8, 0, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.149366}
{'[0, 5, 0, 5, 4, 0, 0, 1, 8, 0, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.148945}
{'[0, 5, 0, 5, 4, 0, 0, 1, 8, 0, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.148999}
{'[0, 5, 0, 5, 4, 0, 0, 1, 8, 0, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.148882}
{'[0, 5, 0, 5, 4, 0, 0, 1, 8, 0, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.149091}
{'[0, 5, 0, 5, 4, 0, 0, 1, 8, 0, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.149167}
{'[0, 5, 0, 5, 4, 0, 0, 1, 8, 0, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.149326}
{'[0, 5, 0, 5, 4, 0, 0, 1, 8, 0, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.149318}
{'[0, 5, 0, 5, 4, 0, 0, 1, 8, 0, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.149004}
{'[0, 5, 0, 5, 4, 0, 0, 1, 8, 0, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.148988}
{'[0, 5, 0, 5, 4, 0, 0, 1, 8, 0, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.148946}
{'[0, 5, 0, 5, 4, 0, 0, 1, 8, 0, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.149048}
{'[0, 5, 0, 5, 4, 0, 0, 1, 8, 0, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.149046}
{'[0, 5, 0, 5, 4, 0, 0, 1, 8, 0, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.149134}
{'[0, 5, 0, 5, 4, 0, 0, 1, 8, 0, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.149546}
{'[0, 5, 0, 5, 4, 0, 0, 1, 8, 0, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.149043}
{'[0, 5, 0, 5, 4, 0, 0, 1, 8, 0, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.148957}
{'[0, 5, 0, 5, 4, 0, 0, 1, 8, 0, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.149224}
{'[0, 5, 0, 5, 4, 0, 0, 1, 8, 0, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.149165}
{'[0, 5, 0, 5, 4, 0, 0, 1, 8, 0, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.148953}
{'[0, 5, 0, 5, 4, 0, 0, 1, 8, 0, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.149772}
{'[0, 5, 0, 5, 4, 0, 0, 1, 8, 0, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.149219}

out:
 ["{'[0, 5, 0, 5, 4, 0, 0, 1, 8, 0, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.178281}", "{'[0, 5, 0, 5, 4, 0, 0, 1, 8, 0, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.178153}", "{'[0, 5, 0, 5, 4, 0, 0, 1, 8, 0, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.172932}", "{'[0, 5, 0, 5, 4, 0, 0, 1, 8, 0, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.149069}", "{'[0, 5, 0, 5, 4, 0, 0, 1, 8, 0, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.149044}", "{'[0, 5, 0, 5, 4, 0, 0, 1, 8, 0, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.148829}", "{'[0, 5, 0, 5, 4, 0, 0, 1, 8, 0, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.148957}", "{'[0, 5, 0, 5, 4, 0, 0, 1, 8, 0, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.149197}", "{'[0, 5, 0, 5, 4, 0, 0, 1, 8, 0, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.149366}", "{'[0, 5, 0, 5, 4, 0, 0, 1, 8, 0, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.148945}", "{'[0, 5, 0, 5, 4, 0, 0, 1, 8, 0, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.148999}", "{'[0, 5, 0, 5, 4, 0, 0, 1, 8, 0, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.148882}", "{'[0, 5, 0, 5, 4, 0, 0, 1, 8, 0, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.149091}", "{'[0, 5, 0, 5, 4, 0, 0, 1, 8, 0, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.149167}", "{'[0, 5, 0, 5, 4, 0, 0, 1, 8, 0, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.149326}", "{'[0, 5, 0, 5, 4, 0, 0, 1, 8, 0, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.149318}", "{'[0, 5, 0, 5, 4, 0, 0, 1, 8, 0, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.149004}", "{'[0, 5, 0, 5, 4, 0, 0, 1, 8, 0, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.148988}", "{'[0, 5, 0, 5, 4, 0, 0, 1, 8, 0, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.148946}", "{'[0, 5, 0, 5, 4, 0, 0, 1, 8, 0, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.149048}", "{'[0, 5, 0, 5, 4, 0, 0, 1, 8, 0, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.149046}", "{'[0, 5, 0, 5, 4, 0, 0, 1, 8, 0, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.149134}", "{'[0, 5, 0, 5, 4, 0, 0, 1, 8, 0, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.149546}", "{'[0, 5, 0, 5, 4, 0, 0, 1, 8, 0, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.149043}", "{'[0, 5, 0, 5, 4, 0, 0, 1, 8, 0, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.148957}", "{'[0, 5, 0, 5, 4, 0, 0, 1, 8, 0, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.149224}", "{'[0, 5, 0, 5, 4, 0, 0, 1, 8, 0, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.149165}", "{'[0, 5, 0, 5, 4, 0, 0, 1, 8, 0, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.148953}", "{'[0, 5, 0, 5, 4, 0, 0, 1, 8, 0, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.149772}", "{'[0, 5, 0, 5, 4, 0, 0, 1, 8, 0, 0, 22, 0, 0, 0, 1, 0, 1]' : 0.149219}"]
returning from 'run': {'[0, 5, 0, 5, 4, 0, 0, 1, 8, 0, 0, 22, 0, 0, 0, 1, 0, 1]': ([0.178281, 0.178153, 0.172932, 0.149069, 0.149044, 0.148829, 0.148957, 0.149197, 0.149366, 0.148945, 0.148999, 0.148882, 0.149091, 0.149167, 0.149326, 0.149318, 0.149004, 0.148988, 0.148946, 0.149048, 0.149046, 0.149134, 0.149546, 0.149043, 0.148957, 0.149224, 0.149165, 0.148953, 0.149772, 0.149219], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 5, 0, 5, 4, 0, 0, 1, 8, 0, 0, 22, 0, 0, 0, 1, 0, 1]': ([0.178281, 0.178153, 0.172932, 0.149069, 0.149044, 0.148829, 0.148957, 0.149197, 0.149366, 0.148945, 0.148999, 0.148882, 0.149091, 0.149167, 0.149326, 0.149318, 0.149004, 0.148988, 0.148946, 0.149048, 0.149046, 0.149134, 0.149546, 0.149043, 0.148957, 0.149224, 0.149165, 0.148953, 0.149772, 0.149219], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	4
        Additions: 		397
        Multiplications: 	128
        Divisions: 		0
        Logical: 		0
        Reads: 			704
        Writes: 		86
        Comparisons:		8
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest89.exe __orio_perftest89.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest89.exe  
Program Test Output: 
{'[0, 5, 3, 0, 5, 0, 0, 0, 0, 28, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.136814}
{'[0, 5, 3, 0, 5, 0, 0, 0, 0, 28, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.136599}
{'[0, 5, 3, 0, 5, 0, 0, 0, 0, 28, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.135364}
{'[0, 5, 3, 0, 5, 0, 0, 0, 0, 28, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.119651}
{'[0, 5, 3, 0, 5, 0, 0, 0, 0, 28, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.118203}
{'[0, 5, 3, 0, 5, 0, 0, 0, 0, 28, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.118123}
{'[0, 5, 3, 0, 5, 0, 0, 0, 0, 28, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.118095}
{'[0, 5, 3, 0, 5, 0, 0, 0, 0, 28, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.117949}
{'[0, 5, 3, 0, 5, 0, 0, 0, 0, 28, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.11797}
{'[0, 5, 3, 0, 5, 0, 0, 0, 0, 28, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.117953}
{'[0, 5, 3, 0, 5, 0, 0, 0, 0, 28, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.118054}
{'[0, 5, 3, 0, 5, 0, 0, 0, 0, 28, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.118052}
{'[0, 5, 3, 0, 5, 0, 0, 0, 0, 28, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.118016}
{'[0, 5, 3, 0, 5, 0, 0, 0, 0, 28, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.118}
{'[0, 5, 3, 0, 5, 0, 0, 0, 0, 28, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.118058}
{'[0, 5, 3, 0, 5, 0, 0, 0, 0, 28, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.118119}
{'[0, 5, 3, 0, 5, 0, 0, 0, 0, 28, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.118211}
{'[0, 5, 3, 0, 5, 0, 0, 0, 0, 28, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.118235}
{'[0, 5, 3, 0, 5, 0, 0, 0, 0, 28, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.117979}
{'[0, 5, 3, 0, 5, 0, 0, 0, 0, 28, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.117907}
{'[0, 5, 3, 0, 5, 0, 0, 0, 0, 28, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.117982}
{'[0, 5, 3, 0, 5, 0, 0, 0, 0, 28, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.11811}
{'[0, 5, 3, 0, 5, 0, 0, 0, 0, 28, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.118052}
{'[0, 5, 3, 0, 5, 0, 0, 0, 0, 28, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.117929}
{'[0, 5, 3, 0, 5, 0, 0, 0, 0, 28, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.118156}
{'[0, 5, 3, 0, 5, 0, 0, 0, 0, 28, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.118185}
{'[0, 5, 3, 0, 5, 0, 0, 0, 0, 28, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.117819}
{'[0, 5, 3, 0, 5, 0, 0, 0, 0, 28, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.118234}
{'[0, 5, 3, 0, 5, 0, 0, 0, 0, 28, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.118016}
{'[0, 5, 3, 0, 5, 0, 0, 0, 0, 28, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.118071}

out:
 ["{'[0, 5, 3, 0, 5, 0, 0, 0, 0, 28, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.136814}", "{'[0, 5, 3, 0, 5, 0, 0, 0, 0, 28, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.136599}", "{'[0, 5, 3, 0, 5, 0, 0, 0, 0, 28, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.135364}", "{'[0, 5, 3, 0, 5, 0, 0, 0, 0, 28, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.119651}", "{'[0, 5, 3, 0, 5, 0, 0, 0, 0, 28, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.118203}", "{'[0, 5, 3, 0, 5, 0, 0, 0, 0, 28, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.118123}", "{'[0, 5, 3, 0, 5, 0, 0, 0, 0, 28, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.118095}", "{'[0, 5, 3, 0, 5, 0, 0, 0, 0, 28, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.117949}", "{'[0, 5, 3, 0, 5, 0, 0, 0, 0, 28, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.11797}", "{'[0, 5, 3, 0, 5, 0, 0, 0, 0, 28, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.117953}", "{'[0, 5, 3, 0, 5, 0, 0, 0, 0, 28, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.118054}", "{'[0, 5, 3, 0, 5, 0, 0, 0, 0, 28, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.118052}", "{'[0, 5, 3, 0, 5, 0, 0, 0, 0, 28, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.118016}", "{'[0, 5, 3, 0, 5, 0, 0, 0, 0, 28, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.118}", "{'[0, 5, 3, 0, 5, 0, 0, 0, 0, 28, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.118058}", "{'[0, 5, 3, 0, 5, 0, 0, 0, 0, 28, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.118119}", "{'[0, 5, 3, 0, 5, 0, 0, 0, 0, 28, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.118211}", "{'[0, 5, 3, 0, 5, 0, 0, 0, 0, 28, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.118235}", "{'[0, 5, 3, 0, 5, 0, 0, 0, 0, 28, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.117979}", "{'[0, 5, 3, 0, 5, 0, 0, 0, 0, 28, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.117907}", "{'[0, 5, 3, 0, 5, 0, 0, 0, 0, 28, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.117982}", "{'[0, 5, 3, 0, 5, 0, 0, 0, 0, 28, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.11811}", "{'[0, 5, 3, 0, 5, 0, 0, 0, 0, 28, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.118052}", "{'[0, 5, 3, 0, 5, 0, 0, 0, 0, 28, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.117929}", "{'[0, 5, 3, 0, 5, 0, 0, 0, 0, 28, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.118156}", "{'[0, 5, 3, 0, 5, 0, 0, 0, 0, 28, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.118185}", "{'[0, 5, 3, 0, 5, 0, 0, 0, 0, 28, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.117819}", "{'[0, 5, 3, 0, 5, 0, 0, 0, 0, 28, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.118234}", "{'[0, 5, 3, 0, 5, 0, 0, 0, 0, 28, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.118016}", "{'[0, 5, 3, 0, 5, 0, 0, 0, 0, 28, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.118071}"]
returning from 'run': {'[0, 5, 3, 0, 5, 0, 0, 0, 0, 28, 0, 5, 1, 0, 0, 0, 0, 1]': ([0.136814, 0.136599, 0.135364, 0.119651, 0.118203, 0.118123, 0.118095, 0.117949, 0.11797, 0.117953, 0.118054, 0.118052, 0.118016, 0.118, 0.118058, 0.118119, 0.118211, 0.118235, 0.117979, 0.117907, 0.117982, 0.11811, 0.118052, 0.117929, 0.118156, 0.118185, 0.117819, 0.118234, 0.118016, 0.118071], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 5, 3, 0, 5, 0, 0, 0, 0, 28, 0, 5, 1, 0, 0, 0, 0, 1]': ([0.136814, 0.136599, 0.135364, 0.119651, 0.118203, 0.118123, 0.118095, 0.117949, 0.11797, 0.117953, 0.118054, 0.118052, 0.118016, 0.118, 0.118058, 0.118119, 0.118211, 0.118235, 0.117979, 0.117907, 0.117982, 0.11811, 0.118052, 0.117929, 0.118156, 0.118185, 0.117819, 0.118234, 0.118016, 0.118071], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	163
        Max loop nest depth: 	5
        Additions: 		9984
        Multiplications: 	3660
        Divisions: 		0
        Logical: 		0
        Reads: 			16981
        Writes: 		2467
        Comparisons:		163
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest90.exe __orio_perftest90.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest90.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest90.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest90.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest90.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Complete design, with measurements:
     T1_I T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J RT_K
96      1    0    5    6    0       1       1    0   0  15   6    0    1    1
471     2    1    0    4    4       1       0   26   9   0  25    1    0    1
578     2    0    0    5    0       0       0   21  28   0  17    2    0    0
642     6    2    6    6    6       0       0    0  28  21   0    0    0    0
805     0    3    6    5    2       0       1   29  12  24   0    0    1    1
1121    6    6    0    6    6       0       1   28   0   1  26    2    0    0
1323    1    6    2    4    5       0       1   19  26   0   8    0    2    0
1444    1    5    0    0    0       0       1    2  29   3   0    0    1    1
1478    2    2    2    6    0       0       0   15   0  26   7    1    1    0
1492    1    0    2    6    2       0       0    0  20  24   0    0    1    1
1499    6    2    6    6    0       1       0   26   0   3  29    1    1    0
1705    0    6    3    0    0       1       0   27   0  27  21    1    1    0
1777    2    3    1    0    0       1       1    0   3   0  11    0    0    1
1787    0    1    1    3    6       1       0   10  23   0  24    0    1    1
2011    4    0    0    0    6       0       0    9   3   3   0    0    1    1
2158    6    3    4    3    1       1       0   11  16  27   0    0    1    0
2172    2    3    1    0    2       0       0   21  15  12   0    0    0    2
2266    3    1    0    0    5       1       1    0   0   4   9    2    0    0
2372    2    0    6    0    3       1       0    3   0  29  10    0    0    0
2552    5    3    0    0    3       0       1   29  25  29   0    1    0    0
2654    6    0    6    4    6       1       1   21   3   2   0    2    0    0
2768    0    2    2    6    2       0       0   11   0   8  28    1    0    1
2924    2    4    2    3    4       0       1   27   0   3  27    0    0    0
2952    2    6    3    0    0       1       0    0   3   0   0    0    1    1
3025    2    3    3    6    4       1       1   19  27   0   0    2    0    0
3048    5    4    6    3    5       1       0   29  28   0  29    0    0    2
3261    0    6    4    5    5       0       1    0   0  29  29    2    0    0
3518    6    0    0    5    6       0       1    9   0   0   1    1    1    0
3527    3    5    0    6    0       1       0    9  13  24   0    0    0    2
3540    6    6    4    3    0       0       0    0  18   4   0    1    0    1
3650    6    0    6    4    1       0       1   28   0  28  23    0    2    0
3720    4    6    6    0    0       0       1    3  20   0   2    1    0    1
3740    3    3    6    3    6       0       1    0   2   0  17    1    1    0
3912    0    5    5    6    5       1       0   29   0   8   0    1    0    0
3931    6    4    5    0    6       0       0   26   0   0   2    0    0    1
3934    0    0    5    4    0       0       1    8   0   0  22    0    0    0
3938    0    3    0    5    0       0       0    0  28   0   5    1    0    0
     SCR VEC1 VEC2  cost_mean
96     0    1    1 0.17845900
471    0    0    1 0.11220040
578    1    1    0 0.17500550
642    1    0    1 0.17235397
805    1    1    1 0.15377730
1121   1    0    1 0.14766770
1323   0    0    0 0.23491017
1444   1    0    0 0.19427397
1478   0    0    0 0.10936173
1492   0    0    0 0.19739400
1499   0    1    0 0.12222983
1705   1    0    1 0.09201362
1777   1    1    0 0.16151220
1787   0    1    1 0.17385813
2011   0    1    0 0.11425673
2158   0    1    0 0.15622920
2172   1    0    1 0.11023750
2266   0    1    0 0.21706533
2372   1    1    1 0.18302303
2552   0    1    1 0.10382603
2654   0    0    1 0.15742333
2768   1    1    0 0.09688604
2924   0    0    0 0.26723607
2952   0    0    1 0.13076597
3025   0    0    1 0.14057023
3048   0    1    1 0.24182603
3261   0    0    1 0.25370827
3518   1    0    1 0.09757017
3527   0    1    1 0.19915937
3540   0    1    1 0.11121150
3650   0    0    0 0.23895307
3720   1    1    0 0.09866746
3740   1    0    0 0.09473285
3912   1    1    0 0.11016527
3931   0    0    0 0.37579480
3934   1    0    1 0.15185337
3938   0    0    1 0.11993020

Heteroscedasticity Test p-value: 0.762239272597
Regression Step:                Df   Sum Sq  Mean Sq F value  Pr(>F)   
T1_I             1 0.001249 0.001249   0.869 0.38231   
T1_K             1 0.000426 0.000426   0.296 0.60304   
T2_I             1 0.002353 0.002353   1.637 0.24157   
T2_J             1 0.000684 0.000684   0.476 0.51253   
T2_K             1 0.008330 0.008330   5.792 0.04700 * 
ACOPY_x          1 0.000491 0.000491   0.342 0.57724   
ACOPY_y          1 0.000516 0.000516   0.359 0.56792   
U1_I             1 0.000456 0.000456   0.317 0.59073   
U_I              1 0.000353 0.000353   0.246 0.63526   
U_J              1 0.000938 0.000938   0.652 0.44588   
U_K              1 0.003977 0.003977   2.765 0.14027   
RT_I             1 0.014166 0.014166   9.851 0.01641 * 
RT_J             1 0.002349 0.002349   1.633 0.24198   
RT_K             1 0.000000 0.000000   0.000 0.99974   
SCR              1 0.021871 0.021871  15.209 0.00590 **
VEC1             1 0.000881 0.000881   0.612 0.45951   
VEC2             1 0.012436 0.012436   8.648 0.02169 * 
I(1/(1 + T1_I))  1 0.000330 0.000330   0.229 0.64660   
I(1/(1 + T1_K))  1 0.009780 0.009780   6.801 0.03503 * 
I(1/(1 + T2_I))  1 0.000776 0.000776   0.540 0.48649   
I(1/(1 + T2_J))  1 0.001451 0.001451   1.009 0.34857   
I(1/(1 + T2_K))  1 0.001284 0.001284   0.893 0.37625   
I(1/(1 + U1_I))  1 0.000797 0.000797   0.554 0.48074   
I(1/(1 + U_I))   1 0.009724 0.009724   6.762 0.03541 * 
I(1/(1 + U_J))   1 0.002680 0.002680   1.864 0.21443   
I(1/(1 + U_K))   1 0.000328 0.000328   0.228 0.64744   
I(1/(1 + RT_I))  1 0.025741 0.025741  17.899 0.00388 **
I(1/(1 + RT_J))  1 0.000009 0.000009   0.007 0.93758   
I(1/(1 + RT_K))  1 0.002097 0.002097   1.458 0.26640   
Residuals        7 0.010066 0.001438                   
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Predicting Best
Generating valid search space of size 4300 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Tested coordinates: 40000
Valid coordinates: 860
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Tested coordinates: 80000
Valid coordinates: 1720
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Tested coordinates: 120000
Valid coordinates: 2580
Tested coordinates: 130000
Tested coordinates: 140000
Tested coordinates: 150000
Tested coordinates: 160000
Tested coordinates: 170000
Valid coordinates: 3440
Tested coordinates: 180000
Tested coordinates: 190000
Tested coordinates: 200000
Tested coordinates: 210000
Valid coordinates: 4300
Valid/Tested configurations: 4300/217814
Generated Search Space:
NULL
Identical predictions (tol = 1e-5): 1
Getting Best from Design
Response: ['cost_mean']
Design Names:  [1] "T1_I"      "T1_K"      "T2_I"      "T2_J"      "T2_K"      "ACOPY_x"  
 [7] "ACOPY_y"   "U1_I"      "U_I"       "U_J"       "U_K"       "RT_I"     
[13] "RT_J"      "RT_K"      "SCR"       "VEC1"      "VEC2"      "cost_mean"

Design Response:       cost_mean
96   0.17845900
471  0.11220040
578  0.17500550
642  0.17235397
805  0.15377730
1121 0.14766770
1323 0.23491017
1444 0.19427397
1478 0.10936173
1492 0.19739400
1499 0.12222983
1705 0.09201362
1777 0.16151220
1787 0.17385813
2011 0.11425673
2158 0.15622920
2172 0.11023750
2266 0.21706533
2372 0.18302303
2552 0.10382603
2654 0.15742333
2768 0.09688604
2924 0.26723607
2952 0.13076597
3025 0.14057023
3048 0.24182603
3261 0.25370827
3518 0.09757017
3527 0.19915937
3540 0.11121150
3650 0.23895307
3720 0.09866746
3740 0.09473285
3912 0.11016527
3931 0.37579480
3934 0.15185337
3938 0.11993020

Current Design Names: ['T1_I', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Getting fixed variables
Pruning Model
Best Predicted:      T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
1061    3    5    3    3    6    2       1       0    3   2   0  25    1    1
     RT_K SCR VEC1 VEC2
1061    0   1    1    1

Best From Design: [0, 5, 6, 3, 0, 0, 1, 0, 27, 0, 27, 21, 1, 1, 0, 1, 0, 1]
Pruned Factors: ['T1_I', 'T1_K', 'T2_I', 'T2_J', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_J', 'RT_K', 'VEC1']
Fixed Factors: {'T2_K': 2, 'VEC2': 1, 'RT_I': 1, 'T1_J': 5, 'SCR': 1}
Length of requested configs: 1
Result was on Database, Returning Now
Starting Point (-O3):
0.16283083333333334
Predicted Best Point:
[3, 5, 3, 3, 6, 2, 1, 0, 3, 2, 0, 25, 1, 1, 0, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	33
        Max loop nest depth: 	6
        Additions: 		1897
        Multiplications: 	840
        Divisions: 		0
        Logical: 		0
        Reads: 			3879
        Writes: 		718
        Comparisons:		33
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest91.exe __orio_perftest91.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest91.exe  
Program Test Output: 
{'[3, 5, 3, 3, 6, 2, 1, 0, 3, 2, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0962379}
{'[3, 5, 3, 3, 6, 2, 1, 0, 3, 2, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.096096}
{'[3, 5, 3, 3, 6, 2, 1, 0, 3, 2, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.096143}
{'[3, 5, 3, 3, 6, 2, 1, 0, 3, 2, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0957811}
{'[3, 5, 3, 3, 6, 2, 1, 0, 3, 2, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0958879}
{'[3, 5, 3, 3, 6, 2, 1, 0, 3, 2, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.095762}
{'[3, 5, 3, 3, 6, 2, 1, 0, 3, 2, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0957379}
{'[3, 5, 3, 3, 6, 2, 1, 0, 3, 2, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0958271}
{'[3, 5, 3, 3, 6, 2, 1, 0, 3, 2, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0961168}
{'[3, 5, 3, 3, 6, 2, 1, 0, 3, 2, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0958071}
{'[3, 5, 3, 3, 6, 2, 1, 0, 3, 2, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.095875}
{'[3, 5, 3, 3, 6, 2, 1, 0, 3, 2, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0959029}
{'[3, 5, 3, 3, 6, 2, 1, 0, 3, 2, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0961192}
{'[3, 5, 3, 3, 6, 2, 1, 0, 3, 2, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0958838}
{'[3, 5, 3, 3, 6, 2, 1, 0, 3, 2, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0957789}
{'[3, 5, 3, 3, 6, 2, 1, 0, 3, 2, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0960541}
{'[3, 5, 3, 3, 6, 2, 1, 0, 3, 2, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.095768}
{'[3, 5, 3, 3, 6, 2, 1, 0, 3, 2, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0957501}
{'[3, 5, 3, 3, 6, 2, 1, 0, 3, 2, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0957968}
{'[3, 5, 3, 3, 6, 2, 1, 0, 3, 2, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.095912}
{'[3, 5, 3, 3, 6, 2, 1, 0, 3, 2, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0957561}
{'[3, 5, 3, 3, 6, 2, 1, 0, 3, 2, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.095804}
{'[3, 5, 3, 3, 6, 2, 1, 0, 3, 2, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.095751}
{'[3, 5, 3, 3, 6, 2, 1, 0, 3, 2, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0961459}
{'[3, 5, 3, 3, 6, 2, 1, 0, 3, 2, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0963151}
{'[3, 5, 3, 3, 6, 2, 1, 0, 3, 2, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0958378}
{'[3, 5, 3, 3, 6, 2, 1, 0, 3, 2, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0960171}
{'[3, 5, 3, 3, 6, 2, 1, 0, 3, 2, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.095932}
{'[3, 5, 3, 3, 6, 2, 1, 0, 3, 2, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0959182}
{'[3, 5, 3, 3, 6, 2, 1, 0, 3, 2, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.095772}

out:
 ["{'[3, 5, 3, 3, 6, 2, 1, 0, 3, 2, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0962379}", "{'[3, 5, 3, 3, 6, 2, 1, 0, 3, 2, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.096096}", "{'[3, 5, 3, 3, 6, 2, 1, 0, 3, 2, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.096143}", "{'[3, 5, 3, 3, 6, 2, 1, 0, 3, 2, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0957811}", "{'[3, 5, 3, 3, 6, 2, 1, 0, 3, 2, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0958879}", "{'[3, 5, 3, 3, 6, 2, 1, 0, 3, 2, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.095762}", "{'[3, 5, 3, 3, 6, 2, 1, 0, 3, 2, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0957379}", "{'[3, 5, 3, 3, 6, 2, 1, 0, 3, 2, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0958271}", "{'[3, 5, 3, 3, 6, 2, 1, 0, 3, 2, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0961168}", "{'[3, 5, 3, 3, 6, 2, 1, 0, 3, 2, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0958071}", "{'[3, 5, 3, 3, 6, 2, 1, 0, 3, 2, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.095875}", "{'[3, 5, 3, 3, 6, 2, 1, 0, 3, 2, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0959029}", "{'[3, 5, 3, 3, 6, 2, 1, 0, 3, 2, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0961192}", "{'[3, 5, 3, 3, 6, 2, 1, 0, 3, 2, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0958838}", "{'[3, 5, 3, 3, 6, 2, 1, 0, 3, 2, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0957789}", "{'[3, 5, 3, 3, 6, 2, 1, 0, 3, 2, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0960541}", "{'[3, 5, 3, 3, 6, 2, 1, 0, 3, 2, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.095768}", "{'[3, 5, 3, 3, 6, 2, 1, 0, 3, 2, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0957501}", "{'[3, 5, 3, 3, 6, 2, 1, 0, 3, 2, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0957968}", "{'[3, 5, 3, 3, 6, 2, 1, 0, 3, 2, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.095912}", "{'[3, 5, 3, 3, 6, 2, 1, 0, 3, 2, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0957561}", "{'[3, 5, 3, 3, 6, 2, 1, 0, 3, 2, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.095804}", "{'[3, 5, 3, 3, 6, 2, 1, 0, 3, 2, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.095751}", "{'[3, 5, 3, 3, 6, 2, 1, 0, 3, 2, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0961459}", "{'[3, 5, 3, 3, 6, 2, 1, 0, 3, 2, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0963151}", "{'[3, 5, 3, 3, 6, 2, 1, 0, 3, 2, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0958378}", "{'[3, 5, 3, 3, 6, 2, 1, 0, 3, 2, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0960171}", "{'[3, 5, 3, 3, 6, 2, 1, 0, 3, 2, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.095932}", "{'[3, 5, 3, 3, 6, 2, 1, 0, 3, 2, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0959182}", "{'[3, 5, 3, 3, 6, 2, 1, 0, 3, 2, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.095772}"]
returning from 'run': {'[3, 5, 3, 3, 6, 2, 1, 0, 3, 2, 0, 25, 1, 1, 0, 1, 1, 1]': ([0.0962379, 0.096096, 0.096143, 0.0957811, 0.0958879, 0.095762, 0.0957379, 0.0958271, 0.0961168, 0.0958071, 0.095875, 0.0959029, 0.0961192, 0.0958838, 0.0957789, 0.0960541, 0.095768, 0.0957501, 0.0957968, 0.095912, 0.0957561, 0.095804, 0.095751, 0.0961459, 0.0963151, 0.0958378, 0.0960171, 0.095932, 0.0959182, 0.095772], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 5, 3, 3, 6, 2, 1, 0, 3, 2, 0, 25, 1, 1, 0, 1, 1, 1]': ([0.0962379, 0.096096, 0.096143, 0.0957811, 0.0958879, 0.095762, 0.0957379, 0.0958271, 0.0961168, 0.0958071, 0.095875, 0.0959029, 0.0961192, 0.0958838, 0.0957789, 0.0960541, 0.095768, 0.0957501, 0.0957968, 0.095912, 0.0957561, 0.095804, 0.095751, 0.0961459, 0.0963151, 0.0958378, 0.0960171, 0.095932, 0.0959182, 0.095772], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Design Best Point:
[0, 5, 6, 3, 0, 0, 1, 0, 27, 0, 27, 21, 1, 1, 0, 1, 0, 1]
Length of requested configs: 1
Result was on Database, Returning Now
Fixed Factors: {'T2_K': 2, 'VEC2': 1, 'RT_I': 1, 'T1_J': 5, 'SCR': 1}
Slowdown (Design Best): 0.5650872019529469
Slowdown (Predicted Best): 0.5890544481235639
Budget: 74/180
Current Best Point: 
[0, 0, 6, 6, 4, 5, 0, 0, 4, 0, 27, 18, 1, 0, 1, 1, 1, 0]
Final Best Point: 
[0, 0, 6, 6, 4, 5, 0, 0, 4, 0, 27, 18, 1, 0, 1, 1, 1, 0]
Ending DOPT-ANOVA
Best Point: [0, 0, 6, 6, 4, 5, 0, 0, 4, 0, 27, 18, 1, 0, 1, 1, 1, 0]
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Speedup: 1.8877832616866401
----- end random search -----
----- begin random search summary -----
 total completed runs: 0
 total successful runs: 0
 total failed runs: 0
 speedup: 1.8877832616866401
----- end random search summary -----
----- begin summary -----
 best coordinate: [0, 0, 6, 6, 4, 5, 0, 0, 4, 0, 27, 18, 1, 0, 1, 1, 1, 0]={'ACOPY_x': False, 'ACOPY_y': False, 'RT_K': 8, 'T1_I': 1, 'T1_J': 1, 'T1_K': 512, 'U_K': 19, 'U_J': 28, 'U_I': 1, 'U1_I': 5, 'T2_K': 1024, 'T2_J': 512, 'T2_I': 2048, 'VEC2': False, 'VEC1': True, 'RT_I': 8, 'SCR': True, 'RT_J': 1}, cost=8.625505e-02, transfer_time=inf, inputs=[('N', 10000)], search_time=-1753.98, runs=74
----- end summary -----
Length of requested configs: 1
Result was on Database, Returning Now
----- the obtained best performance parameters -----
 ACOPY_x = False
 ACOPY_y = False
 RT_I = 8
 RT_J = 1
 RT_K = 8
 SCR = True
 T1_I = 1
 T1_J = 1
 T1_K = 512
 T2_I = 2048
 T2_J = 512
 T2_K = 1024
 U1_I = 5
 U_I = 1
 U_J = 28
 U_K = 19
 VEC1 = True
 VEC2 = False
 cost_mean = 0.08625504666666665
 points = 74
 speedup_O3 = 1.8877832616866401
 technique = DLMT
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	5
        Additions: 		2167
        Multiplications: 	1026
        Divisions: 		0
        Logical: 		0
        Reads: 			4268
        Writes: 		725
        Comparisons:		21
        Gotos: 			0
        
----- finish optimizations -----

----- begin removing annotations from output-----
----- finished removing annotations from output-----

----- begin writing the output file(s) -----
--> writing output to: _atax2.src1.c
----- finished writing the output file(s) -----

====== END ORIO ======
