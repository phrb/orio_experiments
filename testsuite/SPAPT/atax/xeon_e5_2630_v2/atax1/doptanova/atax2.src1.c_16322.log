
====== START ORIO ======

----- begin reading the source file: atax2.src1.c -----
----- finished reading the source file -----

----- begin parsing annotations -----
----- finished parsing annotations -----

----- begin optimizations -----
Search_Space         = 8.234e+13
Number_of_Parameters = 18
Numeric_Parameters   = 13
Binary_Parameters    = 05
['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
[[1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [False, True], [False, True], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 8, 32], [1, 8, 32], [1, 8, 32], [False, True], [False, True], [False, True]]

----- begin empirical tuning for problem size -----
 N = 10000
Parameters: {'ACOPY_x': [0, 2], 'ACOPY_y': [0, 2], 'RT_K': [0, 3], 'T1_I': [0, 7], 'T1_J': [0, 7], 'T1_K': [0, 7], 'U_K': [0, 30], 'U_J': [0, 30], 'U_I': [0, 30], 'U1_I': [0, 30], 'T2_K': [0, 7], 'T2_J': [0, 7], 'T2_I': [0, 7], 'VEC2': [0, 2], 'VEC1': [0, 2], 'RT_I': [0, 3], 'SCR': [0, 2], 'RT_J': [0, 3]}
Parameter Range Values: {'ACOPY_x': [False, True], 'ACOPY_y': [False, True], 'RT_K': [1, 8, 32], 'T1_I': [1, 16, 32, 64, 128, 256, 512], 'T1_J': [1, 16, 32, 64, 128, 256, 512], 'T1_K': [1, 16, 32, 64, 128, 256, 512], 'U_K': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_J': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U1_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'T2_K': [1, 64, 128, 256, 512, 1024, 2048], 'T2_J': [1, 64, 128, 256, 512, 1024, 2048], 'T2_I': [1, 64, 128, 256, 512, 1024, 2048], 'VEC2': [False, True], 'VEC1': [False, True], 'RT_I': [1, 8, 32], 'SCR': [False, True], 'RT_J': [1, 8, 32]}

----- begin random search -----
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Inverse Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Starting DOPT-anova
Step 0
Generating valid search space of size 4600 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Valid coordinates: 920
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Valid coordinates: 1840
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Valid coordinates: 2760
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Tested coordinates: 150000
Valid coordinates: 3680
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Tested coordinates: 190000
Valid coordinates: 4600
Valid/Tested configurations: 4600/193515
Generated Search Space:
NULL
Clean Info:
Removed Factors: character(0)

Removed Inverse Factors: [1] "ACOPY_x" "ACOPY_y" "SCR"     "VEC1"    "VEC2"   

New Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
New Inverse Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
New Fixed Factors: {}
Full Model:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Fixed Factors: {}
Computing D-Optimal Design
Computing D-Optimal Design with 46 experiments
Design Formula:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Starting "optFederov" run
Using Search Space:
NULL
Data Dimensions: [1] 4600   18

     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
72      2    5    2    2    6    0       0       0   28   0  25  19    0    1
87      3    4    6    1    6    5       1       1    2   1  29   0    1    0
544     6    5    0    4    0    1       1       0   21   6  26   0    0    2
653     0    2    3    5    6    2       1       1   28   0  29  28    0    0
802     5    6    3    3    6    3       0       1    1  29   0  29    0    0
863     4    0    3    6    2    2       0       0    7   7   0   0    1    0
946     0    1    4    1    0    6       1       0    0   4  11   0    1    0
982     4    6    6    0    5    0       1       0   27  10   8   0    2    0
1149    5    6    0    6    4    0       0       0   26   0   3   3    1    0
1205    5    3    5    0    3    0       0       1    1   0  19   4    1    0
1240    6    6    6    0    5    6       0       1   10   0   0  29    2    0
1352    2    4    0    2    6    0       1       1    4  23   0   4    1    0
1420    0    0    0    6    0    3       0       0   20   0   3  18    2    0
1470    0    3    6    6    1    4       1       1   23   0  17   8    0    0
1698    4    3    1    0    1    3       0       0    8   9   3   0    0    0
1741    0    1    0    0    1    2       0       1   13  16  20   0    0    0
1828    4    0    3    6    2    5       1       1   28  28  29   0    0    0
1971    0    5    0    0    5    6       1       0    3   0   2   0    0    2
2191    1    0    0    0    1    1       1       1   13   0  29  29    1    0
2276    0    1    2    6    4    6       1       0    5  27   0  26    1    1
2325    0    0    6    2    6    6       0       0   28  27   6   0    0    0
2440    2    4    3    4    5    2       0       0    0  29  25   0    2    0
2456    6    0    6    6    6    0       0       1   11   5   0   5    0    1
2486    6    1    5    4    4    4       1       0    0   0  20  28    0    0
2648    2    1    0    3    1    5       1       0   13   0  25  14    0    1
2727    1    0    1    0    5    2       1       0    3  19   0   2    0    0
2762    2    0    6    0    6    5       0       1   11  23  20   0    0    2
2795    6    6    0    4    0    1       1       1    0  23   0   9    0    0
3112    0    0    4    2    2    0       1       0   15  13   0   4    2    0
3215    0    5    3    1    6    0       1       0   28  26   6   0    0    1
3319    3    2    1    0    1    0       1       1   29  15   0  20    0    2
3444    4    0    1    2    3    2       1       1   12   0   5   0    1    1
3474    6    0    1    6    6    6       1       1    3   0  25   1    0    0
3538    2    1    6    1    0    0       0       0   16   3   0  28    0    0
3622    4    1    0    3    1    0       0       1    2   8   0  28    0    2
3702    0    2    6    6    4    0       0       0   19   0   0   1    0    2
3779    0    6    1    0    5    0       1       1    0   5  24   0    0    1
3981    6    2    3    0    4    0       1       1    6   0   3  27    2    0
4062    6    6    2    0    0    0       0       0   15   0  26  29    1    1
4257    2    0    2    0    3    6       0       1    0   0   9   6    0    2
4260    1    6    6    6    0    4       1       1   16   4   0  25    1    0
4270    3    3    5    0    5    0       0       0    0   0  18   0    0    1
4290    0    4    6    1    2    6       0       1   26  15   0  12    1    1
4436    1    0    1    1    0    0       1       1    2  13  21   0    2    0
4574    3    4    6    1    0    6       1       1   29   2   0   0    1    0
4577    6    0    0    0    6    3       0       0   26   4   0  11    1    1
     RT_K SCR VEC1 VEC2
72      1   1    1    1
87      0   1    1    0
544     0   0    1    1
653     2   0    1    0
802     1   0    0    1
863     1   1    1    1
946     1   1    1    0
982     0   0    0    1
1149    0   0    1    0
1205    1   0    0    1
1240    0   1    1    0
1352    1   1    0    1
1420    0   0    0    0
1470    0   1    1    1
1698    2   1    0    0
1741    0   1    1    1
1828    1   1    0    0
1971    0   1    0    1
2191    1   1    0    1
2276    0   1    1    0
2325    2   1    1    1
2440    0   1    0    1
2456    0   1    0    1
2486    0   1    0    0
2648    1   0    1    0
2727    2   0    1    1
2762    0   0    1    0
2795    2   1    1    0
3112    0   1    0    0
3215    0   1    1    0
3319    0   0    1    1
3444    0   0    0    1
3474    1   0    1    0
3538    0   0    1    0
3622    0   0    1    1
3702    0   0    0    0
3779    0   0    1    1
3981    0   0    1    1
4062    0   0    0    1
4257    0   1    1    1
4260    1   1    1    0
4270    1   0    0    0
4290    0   0    0    0
4436    0   0    0    0
4574    0   0    0    0
4577    0   1    1    0

D-Efficiency Approximation: [1] 0.392

Measuring design of size 46
Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		360
        Multiplications: 	128
        Divisions: 		0
        Logical: 		0
        Reads: 			844
        Writes: 		194
        Comparisons:		14
        Gotos: 			0
        
 building the original code:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -DORIGINAL -o __orio_perftest_original.exe __orio_perftest1.c timer_cpu.o -lm
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest1.exe __orio_perftest1.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest1.exe  
Program Test Output: 
{'[2, 5, 2, 2, 6, 0, 0, 0, 28, 0, 25, 19, 0, 1, 1, 1, 1, 1]' : 0.189119}
{'[2, 5, 2, 2, 6, 0, 0, 0, 28, 0, 25, 19, 0, 1, 1, 1, 1, 1]' : 0.188724}
{'[2, 5, 2, 2, 6, 0, 0, 0, 28, 0, 25, 19, 0, 1, 1, 1, 1, 1]' : 0.182676}
{'[2, 5, 2, 2, 6, 0, 0, 0, 28, 0, 25, 19, 0, 1, 1, 1, 1, 1]' : 0.168024}
{'[2, 5, 2, 2, 6, 0, 0, 0, 28, 0, 25, 19, 0, 1, 1, 1, 1, 1]' : 0.168023}
{'[2, 5, 2, 2, 6, 0, 0, 0, 28, 0, 25, 19, 0, 1, 1, 1, 1, 1]' : 0.168259}
{'[2, 5, 2, 2, 6, 0, 0, 0, 28, 0, 25, 19, 0, 1, 1, 1, 1, 1]' : 0.168141}
{'[2, 5, 2, 2, 6, 0, 0, 0, 28, 0, 25, 19, 0, 1, 1, 1, 1, 1]' : 0.166654}
{'[2, 5, 2, 2, 6, 0, 0, 0, 28, 0, 25, 19, 0, 1, 1, 1, 1, 1]' : 0.167277}
{'[2, 5, 2, 2, 6, 0, 0, 0, 28, 0, 25, 19, 0, 1, 1, 1, 1, 1]' : 0.164836}
{'[2, 5, 2, 2, 6, 0, 0, 0, 28, 0, 25, 19, 0, 1, 1, 1, 1, 1]' : 0.160889}
{'[2, 5, 2, 2, 6, 0, 0, 0, 28, 0, 25, 19, 0, 1, 1, 1, 1, 1]' : 0.162313}
{'[2, 5, 2, 2, 6, 0, 0, 0, 28, 0, 25, 19, 0, 1, 1, 1, 1, 1]' : 0.159116}
{'[2, 5, 2, 2, 6, 0, 0, 0, 28, 0, 25, 19, 0, 1, 1, 1, 1, 1]' : 0.158002}
{'[2, 5, 2, 2, 6, 0, 0, 0, 28, 0, 25, 19, 0, 1, 1, 1, 1, 1]' : 0.161453}
{'[2, 5, 2, 2, 6, 0, 0, 0, 28, 0, 25, 19, 0, 1, 1, 1, 1, 1]' : 0.163321}
{'[2, 5, 2, 2, 6, 0, 0, 0, 28, 0, 25, 19, 0, 1, 1, 1, 1, 1]' : 0.163292}
{'[2, 5, 2, 2, 6, 0, 0, 0, 28, 0, 25, 19, 0, 1, 1, 1, 1, 1]' : 0.166233}
{'[2, 5, 2, 2, 6, 0, 0, 0, 28, 0, 25, 19, 0, 1, 1, 1, 1, 1]' : 0.16133}
{'[2, 5, 2, 2, 6, 0, 0, 0, 28, 0, 25, 19, 0, 1, 1, 1, 1, 1]' : 0.157963}
{'[2, 5, 2, 2, 6, 0, 0, 0, 28, 0, 25, 19, 0, 1, 1, 1, 1, 1]' : 0.160542}
{'[2, 5, 2, 2, 6, 0, 0, 0, 28, 0, 25, 19, 0, 1, 1, 1, 1, 1]' : 0.163503}
{'[2, 5, 2, 2, 6, 0, 0, 0, 28, 0, 25, 19, 0, 1, 1, 1, 1, 1]' : 0.163312}
{'[2, 5, 2, 2, 6, 0, 0, 0, 28, 0, 25, 19, 0, 1, 1, 1, 1, 1]' : 0.161219}
{'[2, 5, 2, 2, 6, 0, 0, 0, 28, 0, 25, 19, 0, 1, 1, 1, 1, 1]' : 0.16281}
{'[2, 5, 2, 2, 6, 0, 0, 0, 28, 0, 25, 19, 0, 1, 1, 1, 1, 1]' : 0.157783}
{'[2, 5, 2, 2, 6, 0, 0, 0, 28, 0, 25, 19, 0, 1, 1, 1, 1, 1]' : 0.159476}
{'[2, 5, 2, 2, 6, 0, 0, 0, 28, 0, 25, 19, 0, 1, 1, 1, 1, 1]' : 0.163316}
{'[2, 5, 2, 2, 6, 0, 0, 0, 28, 0, 25, 19, 0, 1, 1, 1, 1, 1]' : 0.162558}
{'[2, 5, 2, 2, 6, 0, 0, 0, 28, 0, 25, 19, 0, 1, 1, 1, 1, 1]' : 0.159417}

out:
 ["{'[2, 5, 2, 2, 6, 0, 0, 0, 28, 0, 25, 19, 0, 1, 1, 1, 1, 1]' : 0.189119}", "{'[2, 5, 2, 2, 6, 0, 0, 0, 28, 0, 25, 19, 0, 1, 1, 1, 1, 1]' : 0.188724}", "{'[2, 5, 2, 2, 6, 0, 0, 0, 28, 0, 25, 19, 0, 1, 1, 1, 1, 1]' : 0.182676}", "{'[2, 5, 2, 2, 6, 0, 0, 0, 28, 0, 25, 19, 0, 1, 1, 1, 1, 1]' : 0.168024}", "{'[2, 5, 2, 2, 6, 0, 0, 0, 28, 0, 25, 19, 0, 1, 1, 1, 1, 1]' : 0.168023}", "{'[2, 5, 2, 2, 6, 0, 0, 0, 28, 0, 25, 19, 0, 1, 1, 1, 1, 1]' : 0.168259}", "{'[2, 5, 2, 2, 6, 0, 0, 0, 28, 0, 25, 19, 0, 1, 1, 1, 1, 1]' : 0.168141}", "{'[2, 5, 2, 2, 6, 0, 0, 0, 28, 0, 25, 19, 0, 1, 1, 1, 1, 1]' : 0.166654}", "{'[2, 5, 2, 2, 6, 0, 0, 0, 28, 0, 25, 19, 0, 1, 1, 1, 1, 1]' : 0.167277}", "{'[2, 5, 2, 2, 6, 0, 0, 0, 28, 0, 25, 19, 0, 1, 1, 1, 1, 1]' : 0.164836}", "{'[2, 5, 2, 2, 6, 0, 0, 0, 28, 0, 25, 19, 0, 1, 1, 1, 1, 1]' : 0.160889}", "{'[2, 5, 2, 2, 6, 0, 0, 0, 28, 0, 25, 19, 0, 1, 1, 1, 1, 1]' : 0.162313}", "{'[2, 5, 2, 2, 6, 0, 0, 0, 28, 0, 25, 19, 0, 1, 1, 1, 1, 1]' : 0.159116}", "{'[2, 5, 2, 2, 6, 0, 0, 0, 28, 0, 25, 19, 0, 1, 1, 1, 1, 1]' : 0.158002}", "{'[2, 5, 2, 2, 6, 0, 0, 0, 28, 0, 25, 19, 0, 1, 1, 1, 1, 1]' : 0.161453}", "{'[2, 5, 2, 2, 6, 0, 0, 0, 28, 0, 25, 19, 0, 1, 1, 1, 1, 1]' : 0.163321}", "{'[2, 5, 2, 2, 6, 0, 0, 0, 28, 0, 25, 19, 0, 1, 1, 1, 1, 1]' : 0.163292}", "{'[2, 5, 2, 2, 6, 0, 0, 0, 28, 0, 25, 19, 0, 1, 1, 1, 1, 1]' : 0.166233}", "{'[2, 5, 2, 2, 6, 0, 0, 0, 28, 0, 25, 19, 0, 1, 1, 1, 1, 1]' : 0.16133}", "{'[2, 5, 2, 2, 6, 0, 0, 0, 28, 0, 25, 19, 0, 1, 1, 1, 1, 1]' : 0.157963}", "{'[2, 5, 2, 2, 6, 0, 0, 0, 28, 0, 25, 19, 0, 1, 1, 1, 1, 1]' : 0.160542}", "{'[2, 5, 2, 2, 6, 0, 0, 0, 28, 0, 25, 19, 0, 1, 1, 1, 1, 1]' : 0.163503}", "{'[2, 5, 2, 2, 6, 0, 0, 0, 28, 0, 25, 19, 0, 1, 1, 1, 1, 1]' : 0.163312}", "{'[2, 5, 2, 2, 6, 0, 0, 0, 28, 0, 25, 19, 0, 1, 1, 1, 1, 1]' : 0.161219}", "{'[2, 5, 2, 2, 6, 0, 0, 0, 28, 0, 25, 19, 0, 1, 1, 1, 1, 1]' : 0.16281}", "{'[2, 5, 2, 2, 6, 0, 0, 0, 28, 0, 25, 19, 0, 1, 1, 1, 1, 1]' : 0.157783}", "{'[2, 5, 2, 2, 6, 0, 0, 0, 28, 0, 25, 19, 0, 1, 1, 1, 1, 1]' : 0.159476}", "{'[2, 5, 2, 2, 6, 0, 0, 0, 28, 0, 25, 19, 0, 1, 1, 1, 1, 1]' : 0.163316}", "{'[2, 5, 2, 2, 6, 0, 0, 0, 28, 0, 25, 19, 0, 1, 1, 1, 1, 1]' : 0.162558}", "{'[2, 5, 2, 2, 6, 0, 0, 0, 28, 0, 25, 19, 0, 1, 1, 1, 1, 1]' : 0.159417}"]
returning from 'run': {'[2, 5, 2, 2, 6, 0, 0, 0, 28, 0, 25, 19, 0, 1, 1, 1, 1, 1]': ([0.189119, 0.188724, 0.182676, 0.168024, 0.168023, 0.168259, 0.168141, 0.166654, 0.167277, 0.164836, 0.160889, 0.162313, 0.159116, 0.158002, 0.161453, 0.163321, 0.163292, 0.166233, 0.16133, 0.157963, 0.160542, 0.163503, 0.163312, 0.161219, 0.16281, 0.157783, 0.159476, 0.163316, 0.162558, 0.159417], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 5, 2, 2, 6, 0, 0, 0, 28, 0, 25, 19, 0, 1, 1, 1, 1, 1]': ([0.189119, 0.188724, 0.182676, 0.168024, 0.168023, 0.168259, 0.168141, 0.166654, 0.167277, 0.164836, 0.160889, 0.162313, 0.159116, 0.158002, 0.161453, 0.163321, 0.163292, 0.166233, 0.16133, 0.157963, 0.160542, 0.163503, 0.163312, 0.161219, 0.16281, 0.157783, 0.159476, 0.163316, 0.162558, 0.159417], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
Code stats:
        Number of loops: 	41
        Max loop nest depth: 	5
        Additions: 		1723
        Multiplications: 	704
        Divisions: 		0
        Logical: 		0
        Reads: 			3233
        Writes: 		516
        Comparisons:		41
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest2.exe __orio_perftest2.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest2.exe  
Program Test Output: 
{'[3, 4, 6, 1, 6, 5, 1, 1, 2, 1, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.100174}
{'[3, 4, 6, 1, 6, 5, 1, 1, 2, 1, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.100664}
{'[3, 4, 6, 1, 6, 5, 1, 1, 2, 1, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.100453}
{'[3, 4, 6, 1, 6, 5, 1, 1, 2, 1, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.100694}
{'[3, 4, 6, 1, 6, 5, 1, 1, 2, 1, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.100599}
{'[3, 4, 6, 1, 6, 5, 1, 1, 2, 1, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.0975261}
{'[3, 4, 6, 1, 6, 5, 1, 1, 2, 1, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.0974679}
{'[3, 4, 6, 1, 6, 5, 1, 1, 2, 1, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.09741}
{'[3, 4, 6, 1, 6, 5, 1, 1, 2, 1, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.097353}
{'[3, 4, 6, 1, 6, 5, 1, 1, 2, 1, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.0987949}
{'[3, 4, 6, 1, 6, 5, 1, 1, 2, 1, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.100121}
{'[3, 4, 6, 1, 6, 5, 1, 1, 2, 1, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.100071}
{'[3, 4, 6, 1, 6, 5, 1, 1, 2, 1, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.100234}
{'[3, 4, 6, 1, 6, 5, 1, 1, 2, 1, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.100186}
{'[3, 4, 6, 1, 6, 5, 1, 1, 2, 1, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.101157}
{'[3, 4, 6, 1, 6, 5, 1, 1, 2, 1, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.102696}
{'[3, 4, 6, 1, 6, 5, 1, 1, 2, 1, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.101193}
{'[3, 4, 6, 1, 6, 5, 1, 1, 2, 1, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.100075}
{'[3, 4, 6, 1, 6, 5, 1, 1, 2, 1, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.0975139}
{'[3, 4, 6, 1, 6, 5, 1, 1, 2, 1, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.098485}
{'[3, 4, 6, 1, 6, 5, 1, 1, 2, 1, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.100064}
{'[3, 4, 6, 1, 6, 5, 1, 1, 2, 1, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.100072}
{'[3, 4, 6, 1, 6, 5, 1, 1, 2, 1, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.100079}
{'[3, 4, 6, 1, 6, 5, 1, 1, 2, 1, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.0981131}
{'[3, 4, 6, 1, 6, 5, 1, 1, 2, 1, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.099834}
{'[3, 4, 6, 1, 6, 5, 1, 1, 2, 1, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.102138}
{'[3, 4, 6, 1, 6, 5, 1, 1, 2, 1, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.0992041}
{'[3, 4, 6, 1, 6, 5, 1, 1, 2, 1, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.0973818}
{'[3, 4, 6, 1, 6, 5, 1, 1, 2, 1, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.097445}
{'[3, 4, 6, 1, 6, 5, 1, 1, 2, 1, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.098516}

out:
 ["{'[3, 4, 6, 1, 6, 5, 1, 1, 2, 1, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.100174}", "{'[3, 4, 6, 1, 6, 5, 1, 1, 2, 1, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.100664}", "{'[3, 4, 6, 1, 6, 5, 1, 1, 2, 1, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.100453}", "{'[3, 4, 6, 1, 6, 5, 1, 1, 2, 1, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.100694}", "{'[3, 4, 6, 1, 6, 5, 1, 1, 2, 1, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.100599}", "{'[3, 4, 6, 1, 6, 5, 1, 1, 2, 1, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.0975261}", "{'[3, 4, 6, 1, 6, 5, 1, 1, 2, 1, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.0974679}", "{'[3, 4, 6, 1, 6, 5, 1, 1, 2, 1, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.09741}", "{'[3, 4, 6, 1, 6, 5, 1, 1, 2, 1, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.097353}", "{'[3, 4, 6, 1, 6, 5, 1, 1, 2, 1, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.0987949}", "{'[3, 4, 6, 1, 6, 5, 1, 1, 2, 1, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.100121}", "{'[3, 4, 6, 1, 6, 5, 1, 1, 2, 1, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.100071}", "{'[3, 4, 6, 1, 6, 5, 1, 1, 2, 1, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.100234}", "{'[3, 4, 6, 1, 6, 5, 1, 1, 2, 1, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.100186}", "{'[3, 4, 6, 1, 6, 5, 1, 1, 2, 1, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.101157}", "{'[3, 4, 6, 1, 6, 5, 1, 1, 2, 1, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.102696}", "{'[3, 4, 6, 1, 6, 5, 1, 1, 2, 1, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.101193}", "{'[3, 4, 6, 1, 6, 5, 1, 1, 2, 1, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.100075}", "{'[3, 4, 6, 1, 6, 5, 1, 1, 2, 1, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.0975139}", "{'[3, 4, 6, 1, 6, 5, 1, 1, 2, 1, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.098485}", "{'[3, 4, 6, 1, 6, 5, 1, 1, 2, 1, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.100064}", "{'[3, 4, 6, 1, 6, 5, 1, 1, 2, 1, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.100072}", "{'[3, 4, 6, 1, 6, 5, 1, 1, 2, 1, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.100079}", "{'[3, 4, 6, 1, 6, 5, 1, 1, 2, 1, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.0981131}", "{'[3, 4, 6, 1, 6, 5, 1, 1, 2, 1, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.099834}", "{'[3, 4, 6, 1, 6, 5, 1, 1, 2, 1, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.102138}", "{'[3, 4, 6, 1, 6, 5, 1, 1, 2, 1, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.0992041}", "{'[3, 4, 6, 1, 6, 5, 1, 1, 2, 1, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.0973818}", "{'[3, 4, 6, 1, 6, 5, 1, 1, 2, 1, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.097445}", "{'[3, 4, 6, 1, 6, 5, 1, 1, 2, 1, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.098516}"]
returning from 'run': {'[3, 4, 6, 1, 6, 5, 1, 1, 2, 1, 29, 0, 1, 0, 0, 1, 1, 0]': ([0.100174, 0.100664, 0.100453, 0.100694, 0.100599, 0.0975261, 0.0974679, 0.09741, 0.097353, 0.0987949, 0.100121, 0.100071, 0.100234, 0.100186, 0.101157, 0.102696, 0.101193, 0.100075, 0.0975139, 0.098485, 0.100064, 0.100072, 0.100079, 0.0981131, 0.099834, 0.102138, 0.0992041, 0.0973818, 0.097445, 0.098516], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 4, 6, 1, 6, 5, 1, 1, 2, 1, 29, 0, 1, 0, 0, 1, 1, 0]': ([0.100174, 0.100664, 0.100453, 0.100694, 0.100599, 0.0975261, 0.0974679, 0.09741, 0.097353, 0.0987949, 0.100121, 0.100071, 0.100234, 0.100186, 0.101157, 0.102696, 0.101193, 0.100075, 0.0975139, 0.098485, 0.100064, 0.100072, 0.100079, 0.0981131, 0.099834, 0.102138, 0.0992041, 0.0973818, 0.097445, 0.098516], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	4
        Additions: 		1974
        Multiplications: 	528
        Divisions: 		0
        Logical: 		0
        Reads: 			3151
        Writes: 		352
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest3.exe __orio_perftest3.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest3.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest3.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest3.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest3.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		454
        Multiplications: 	126
        Divisions: 		0
        Logical: 		0
        Reads: 			902
        Writes: 		128
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest4.exe __orio_perftest4.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest4.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest4.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest4.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest4.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = iii
Code stats:
        Number of loops: 	79
        Max loop nest depth: 	5
        Additions: 		2593
        Multiplications: 	558
        Divisions: 		0
        Logical: 		0
        Reads: 			4217
        Writes: 		537
        Comparisons:		79
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest5.exe __orio_perftest5.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest5.exe  
Program Test Output: 
{'[5, 6, 3, 3, 6, 3, 0, 1, 1, 29, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.230156}
{'[5, 6, 3, 3, 6, 3, 0, 1, 1, 29, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.230355}
{'[5, 6, 3, 3, 6, 3, 0, 1, 1, 29, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.232098}
{'[5, 6, 3, 3, 6, 3, 0, 1, 1, 29, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.232303}
{'[5, 6, 3, 3, 6, 3, 0, 1, 1, 29, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.235238}
{'[5, 6, 3, 3, 6, 3, 0, 1, 1, 29, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.235126}
{'[5, 6, 3, 3, 6, 3, 0, 1, 1, 29, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.235341}
{'[5, 6, 3, 3, 6, 3, 0, 1, 1, 29, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.231169}
{'[5, 6, 3, 3, 6, 3, 0, 1, 1, 29, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.233229}
{'[5, 6, 3, 3, 6, 3, 0, 1, 1, 29, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.23346}
{'[5, 6, 3, 3, 6, 3, 0, 1, 1, 29, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.226902}
{'[5, 6, 3, 3, 6, 3, 0, 1, 1, 29, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.228687}
{'[5, 6, 3, 3, 6, 3, 0, 1, 1, 29, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.231726}
{'[5, 6, 3, 3, 6, 3, 0, 1, 1, 29, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.231704}
{'[5, 6, 3, 3, 6, 3, 0, 1, 1, 29, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.225597}
{'[5, 6, 3, 3, 6, 3, 0, 1, 1, 29, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.233217}
{'[5, 6, 3, 3, 6, 3, 0, 1, 1, 29, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.23066}
{'[5, 6, 3, 3, 6, 3, 0, 1, 1, 29, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.233535}
{'[5, 6, 3, 3, 6, 3, 0, 1, 1, 29, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.230198}
{'[5, 6, 3, 3, 6, 3, 0, 1, 1, 29, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.234359}
{'[5, 6, 3, 3, 6, 3, 0, 1, 1, 29, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.231965}
{'[5, 6, 3, 3, 6, 3, 0, 1, 1, 29, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.233901}
{'[5, 6, 3, 3, 6, 3, 0, 1, 1, 29, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.230563}
{'[5, 6, 3, 3, 6, 3, 0, 1, 1, 29, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.231365}
{'[5, 6, 3, 3, 6, 3, 0, 1, 1, 29, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.22794}
{'[5, 6, 3, 3, 6, 3, 0, 1, 1, 29, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.229637}
{'[5, 6, 3, 3, 6, 3, 0, 1, 1, 29, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.232243}
{'[5, 6, 3, 3, 6, 3, 0, 1, 1, 29, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.225792}
{'[5, 6, 3, 3, 6, 3, 0, 1, 1, 29, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.230393}
{'[5, 6, 3, 3, 6, 3, 0, 1, 1, 29, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.224717}

out:
 ["{'[5, 6, 3, 3, 6, 3, 0, 1, 1, 29, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.230156}", "{'[5, 6, 3, 3, 6, 3, 0, 1, 1, 29, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.230355}", "{'[5, 6, 3, 3, 6, 3, 0, 1, 1, 29, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.232098}", "{'[5, 6, 3, 3, 6, 3, 0, 1, 1, 29, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.232303}", "{'[5, 6, 3, 3, 6, 3, 0, 1, 1, 29, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.235238}", "{'[5, 6, 3, 3, 6, 3, 0, 1, 1, 29, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.235126}", "{'[5, 6, 3, 3, 6, 3, 0, 1, 1, 29, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.235341}", "{'[5, 6, 3, 3, 6, 3, 0, 1, 1, 29, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.231169}", "{'[5, 6, 3, 3, 6, 3, 0, 1, 1, 29, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.233229}", "{'[5, 6, 3, 3, 6, 3, 0, 1, 1, 29, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.23346}", "{'[5, 6, 3, 3, 6, 3, 0, 1, 1, 29, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.226902}", "{'[5, 6, 3, 3, 6, 3, 0, 1, 1, 29, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.228687}", "{'[5, 6, 3, 3, 6, 3, 0, 1, 1, 29, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.231726}", "{'[5, 6, 3, 3, 6, 3, 0, 1, 1, 29, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.231704}", "{'[5, 6, 3, 3, 6, 3, 0, 1, 1, 29, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.225597}", "{'[5, 6, 3, 3, 6, 3, 0, 1, 1, 29, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.233217}", "{'[5, 6, 3, 3, 6, 3, 0, 1, 1, 29, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.23066}", "{'[5, 6, 3, 3, 6, 3, 0, 1, 1, 29, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.233535}", "{'[5, 6, 3, 3, 6, 3, 0, 1, 1, 29, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.230198}", "{'[5, 6, 3, 3, 6, 3, 0, 1, 1, 29, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.234359}", "{'[5, 6, 3, 3, 6, 3, 0, 1, 1, 29, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.231965}", "{'[5, 6, 3, 3, 6, 3, 0, 1, 1, 29, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.233901}", "{'[5, 6, 3, 3, 6, 3, 0, 1, 1, 29, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.230563}", "{'[5, 6, 3, 3, 6, 3, 0, 1, 1, 29, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.231365}", "{'[5, 6, 3, 3, 6, 3, 0, 1, 1, 29, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.22794}", "{'[5, 6, 3, 3, 6, 3, 0, 1, 1, 29, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.229637}", "{'[5, 6, 3, 3, 6, 3, 0, 1, 1, 29, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.232243}", "{'[5, 6, 3, 3, 6, 3, 0, 1, 1, 29, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.225792}", "{'[5, 6, 3, 3, 6, 3, 0, 1, 1, 29, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.230393}", "{'[5, 6, 3, 3, 6, 3, 0, 1, 1, 29, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.224717}"]
returning from 'run': {'[5, 6, 3, 3, 6, 3, 0, 1, 1, 29, 0, 29, 0, 0, 1, 0, 0, 1]': ([0.230156, 0.230355, 0.232098, 0.232303, 0.235238, 0.235126, 0.235341, 0.231169, 0.233229, 0.23346, 0.226902, 0.228687, 0.231726, 0.231704, 0.225597, 0.233217, 0.23066, 0.233535, 0.230198, 0.234359, 0.231965, 0.233901, 0.230563, 0.231365, 0.22794, 0.229637, 0.232243, 0.225792, 0.230393, 0.224717], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 6, 3, 3, 6, 3, 0, 1, 1, 29, 0, 29, 0, 0, 1, 0, 0, 1]': ([0.230156, 0.230355, 0.232098, 0.232303, 0.235238, 0.235126, 0.235341, 0.231169, 0.233229, 0.23346, 0.226902, 0.228687, 0.231726, 0.231704, 0.225597, 0.233217, 0.23066, 0.233535, 0.230198, 0.234359, 0.231965, 0.233901, 0.230563, 0.231365, 0.22794, 0.229637, 0.232243, 0.225792, 0.230393, 0.224717], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	6
        Additions: 		759
        Multiplications: 	340
        Divisions: 		0
        Logical: 		0
        Reads: 			1676
        Writes: 		341
        Comparisons:		25
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest6.exe __orio_perftest6.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest6.exe  
Program Test Output: 
{'[4, 0, 3, 6, 2, 2, 0, 0, 7, 7, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.092736}
{'[4, 0, 3, 6, 2, 2, 0, 0, 7, 7, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0927351}
{'[4, 0, 3, 6, 2, 2, 0, 0, 7, 7, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0922911}
{'[4, 0, 3, 6, 2, 2, 0, 0, 7, 7, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0923471}
{'[4, 0, 3, 6, 2, 2, 0, 0, 7, 7, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.092881}
{'[4, 0, 3, 6, 2, 2, 0, 0, 7, 7, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.092494}
{'[4, 0, 3, 6, 2, 2, 0, 0, 7, 7, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0928061}
{'[4, 0, 3, 6, 2, 2, 0, 0, 7, 7, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0943542}
{'[4, 0, 3, 6, 2, 2, 0, 0, 7, 7, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0929401}
{'[4, 0, 3, 6, 2, 2, 0, 0, 7, 7, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0923421}
{'[4, 0, 3, 6, 2, 2, 0, 0, 7, 7, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.091341}
{'[4, 0, 3, 6, 2, 2, 0, 0, 7, 7, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.090636}
{'[4, 0, 3, 6, 2, 2, 0, 0, 7, 7, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.092066}
{'[4, 0, 3, 6, 2, 2, 0, 0, 7, 7, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0924861}
{'[4, 0, 3, 6, 2, 2, 0, 0, 7, 7, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0923531}
{'[4, 0, 3, 6, 2, 2, 0, 0, 7, 7, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0925388}
{'[4, 0, 3, 6, 2, 2, 0, 0, 7, 7, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0928299}
{'[4, 0, 3, 6, 2, 2, 0, 0, 7, 7, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.093497}
{'[4, 0, 3, 6, 2, 2, 0, 0, 7, 7, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0943651}
{'[4, 0, 3, 6, 2, 2, 0, 0, 7, 7, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0926309}
{'[4, 0, 3, 6, 2, 2, 0, 0, 7, 7, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0924962}
{'[4, 0, 3, 6, 2, 2, 0, 0, 7, 7, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0923841}
{'[4, 0, 3, 6, 2, 2, 0, 0, 7, 7, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0922809}
{'[4, 0, 3, 6, 2, 2, 0, 0, 7, 7, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0941341}
{'[4, 0, 3, 6, 2, 2, 0, 0, 7, 7, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0933831}
{'[4, 0, 3, 6, 2, 2, 0, 0, 7, 7, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.092438}
{'[4, 0, 3, 6, 2, 2, 0, 0, 7, 7, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0927272}
{'[4, 0, 3, 6, 2, 2, 0, 0, 7, 7, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0923049}
{'[4, 0, 3, 6, 2, 2, 0, 0, 7, 7, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0934801}
{'[4, 0, 3, 6, 2, 2, 0, 0, 7, 7, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0941601}

out:
 ["{'[4, 0, 3, 6, 2, 2, 0, 0, 7, 7, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.092736}", "{'[4, 0, 3, 6, 2, 2, 0, 0, 7, 7, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0927351}", "{'[4, 0, 3, 6, 2, 2, 0, 0, 7, 7, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0922911}", "{'[4, 0, 3, 6, 2, 2, 0, 0, 7, 7, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0923471}", "{'[4, 0, 3, 6, 2, 2, 0, 0, 7, 7, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.092881}", "{'[4, 0, 3, 6, 2, 2, 0, 0, 7, 7, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.092494}", "{'[4, 0, 3, 6, 2, 2, 0, 0, 7, 7, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0928061}", "{'[4, 0, 3, 6, 2, 2, 0, 0, 7, 7, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0943542}", "{'[4, 0, 3, 6, 2, 2, 0, 0, 7, 7, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0929401}", "{'[4, 0, 3, 6, 2, 2, 0, 0, 7, 7, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0923421}", "{'[4, 0, 3, 6, 2, 2, 0, 0, 7, 7, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.091341}", "{'[4, 0, 3, 6, 2, 2, 0, 0, 7, 7, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.090636}", "{'[4, 0, 3, 6, 2, 2, 0, 0, 7, 7, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.092066}", "{'[4, 0, 3, 6, 2, 2, 0, 0, 7, 7, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0924861}", "{'[4, 0, 3, 6, 2, 2, 0, 0, 7, 7, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0923531}", "{'[4, 0, 3, 6, 2, 2, 0, 0, 7, 7, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0925388}", "{'[4, 0, 3, 6, 2, 2, 0, 0, 7, 7, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0928299}", "{'[4, 0, 3, 6, 2, 2, 0, 0, 7, 7, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.093497}", "{'[4, 0, 3, 6, 2, 2, 0, 0, 7, 7, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0943651}", "{'[4, 0, 3, 6, 2, 2, 0, 0, 7, 7, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0926309}", "{'[4, 0, 3, 6, 2, 2, 0, 0, 7, 7, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0924962}", "{'[4, 0, 3, 6, 2, 2, 0, 0, 7, 7, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0923841}", "{'[4, 0, 3, 6, 2, 2, 0, 0, 7, 7, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0922809}", "{'[4, 0, 3, 6, 2, 2, 0, 0, 7, 7, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0941341}", "{'[4, 0, 3, 6, 2, 2, 0, 0, 7, 7, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0933831}", "{'[4, 0, 3, 6, 2, 2, 0, 0, 7, 7, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.092438}", "{'[4, 0, 3, 6, 2, 2, 0, 0, 7, 7, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0927272}", "{'[4, 0, 3, 6, 2, 2, 0, 0, 7, 7, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0923049}", "{'[4, 0, 3, 6, 2, 2, 0, 0, 7, 7, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0934801}", "{'[4, 0, 3, 6, 2, 2, 0, 0, 7, 7, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0941601}"]
returning from 'run': {'[4, 0, 3, 6, 2, 2, 0, 0, 7, 7, 0, 0, 1, 0, 1, 1, 1, 1]': ([0.092736, 0.0927351, 0.0922911, 0.0923471, 0.092881, 0.092494, 0.0928061, 0.0943542, 0.0929401, 0.0923421, 0.091341, 0.090636, 0.092066, 0.0924861, 0.0923531, 0.0925388, 0.0928299, 0.093497, 0.0943651, 0.0926309, 0.0924962, 0.0923841, 0.0922809, 0.0941341, 0.0933831, 0.092438, 0.0927272, 0.0923049, 0.0934801, 0.0941601], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 0, 3, 6, 2, 2, 0, 0, 7, 7, 0, 0, 1, 0, 1, 1, 1, 1]': ([0.092736, 0.0927351, 0.0922911, 0.0923471, 0.092881, 0.092494, 0.0928061, 0.0943542, 0.0929401, 0.0923421, 0.091341, 0.090636, 0.092066, 0.0924861, 0.0923531, 0.0925388, 0.0928299, 0.093497, 0.0943651, 0.0926309, 0.0924962, 0.0923841, 0.0922809, 0.0941341, 0.0933831, 0.092438, 0.0927272, 0.0923049, 0.0934801, 0.0941601], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	41
        Max loop nest depth: 	5
        Additions: 		1548
        Multiplications: 	616
        Divisions: 		0
        Logical: 		0
        Reads: 			2959
        Writes: 		501
        Comparisons:		41
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest7.exe __orio_perftest7.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest7.exe  
Program Test Output: 
{'[0, 1, 4, 1, 0, 6, 1, 0, 0, 4, 11, 0, 1, 0, 1, 1, 1, 0]' : 0.102405}
{'[0, 1, 4, 1, 0, 6, 1, 0, 0, 4, 11, 0, 1, 0, 1, 1, 1, 0]' : 0.102566}
{'[0, 1, 4, 1, 0, 6, 1, 0, 0, 4, 11, 0, 1, 0, 1, 1, 1, 0]' : 0.102274}
{'[0, 1, 4, 1, 0, 6, 1, 0, 0, 4, 11, 0, 1, 0, 1, 1, 1, 0]' : 0.102317}
{'[0, 1, 4, 1, 0, 6, 1, 0, 0, 4, 11, 0, 1, 0, 1, 1, 1, 0]' : 0.101393}
{'[0, 1, 4, 1, 0, 6, 1, 0, 0, 4, 11, 0, 1, 0, 1, 1, 1, 0]' : 0.0913351}
{'[0, 1, 4, 1, 0, 6, 1, 0, 0, 4, 11, 0, 1, 0, 1, 1, 1, 0]' : 0.08991}
{'[0, 1, 4, 1, 0, 6, 1, 0, 0, 4, 11, 0, 1, 0, 1, 1, 1, 0]' : 0.089407}
{'[0, 1, 4, 1, 0, 6, 1, 0, 0, 4, 11, 0, 1, 0, 1, 1, 1, 0]' : 0.0894291}
{'[0, 1, 4, 1, 0, 6, 1, 0, 0, 4, 11, 0, 1, 0, 1, 1, 1, 0]' : 0.089422}
{'[0, 1, 4, 1, 0, 6, 1, 0, 0, 4, 11, 0, 1, 0, 1, 1, 1, 0]' : 0.0893981}
{'[0, 1, 4, 1, 0, 6, 1, 0, 0, 4, 11, 0, 1, 0, 1, 1, 1, 0]' : 0.0896959}
{'[0, 1, 4, 1, 0, 6, 1, 0, 0, 4, 11, 0, 1, 0, 1, 1, 1, 0]' : 0.089747}
{'[0, 1, 4, 1, 0, 6, 1, 0, 0, 4, 11, 0, 1, 0, 1, 1, 1, 0]' : 0.0895541}
{'[0, 1, 4, 1, 0, 6, 1, 0, 0, 4, 11, 0, 1, 0, 1, 1, 1, 0]' : 0.089288}
{'[0, 1, 4, 1, 0, 6, 1, 0, 0, 4, 11, 0, 1, 0, 1, 1, 1, 0]' : 0.089596}
{'[0, 1, 4, 1, 0, 6, 1, 0, 0, 4, 11, 0, 1, 0, 1, 1, 1, 0]' : 0.089359}
{'[0, 1, 4, 1, 0, 6, 1, 0, 0, 4, 11, 0, 1, 0, 1, 1, 1, 0]' : 0.0911531}
{'[0, 1, 4, 1, 0, 6, 1, 0, 0, 4, 11, 0, 1, 0, 1, 1, 1, 0]' : 0.09185}
{'[0, 1, 4, 1, 0, 6, 1, 0, 0, 4, 11, 0, 1, 0, 1, 1, 1, 0]' : 0.0918381}
{'[0, 1, 4, 1, 0, 6, 1, 0, 0, 4, 11, 0, 1, 0, 1, 1, 1, 0]' : 0.0918911}
{'[0, 1, 4, 1, 0, 6, 1, 0, 0, 4, 11, 0, 1, 0, 1, 1, 1, 0]' : 0.091855}
{'[0, 1, 4, 1, 0, 6, 1, 0, 0, 4, 11, 0, 1, 0, 1, 1, 1, 0]' : 0.0919249}
{'[0, 1, 4, 1, 0, 6, 1, 0, 0, 4, 11, 0, 1, 0, 1, 1, 1, 0]' : 0.091866}
{'[0, 1, 4, 1, 0, 6, 1, 0, 0, 4, 11, 0, 1, 0, 1, 1, 1, 0]' : 0.0917029}
{'[0, 1, 4, 1, 0, 6, 1, 0, 0, 4, 11, 0, 1, 0, 1, 1, 1, 0]' : 0.091665}
{'[0, 1, 4, 1, 0, 6, 1, 0, 0, 4, 11, 0, 1, 0, 1, 1, 1, 0]' : 0.0903361}
{'[0, 1, 4, 1, 0, 6, 1, 0, 0, 4, 11, 0, 1, 0, 1, 1, 1, 0]' : 0.087939}
{'[0, 1, 4, 1, 0, 6, 1, 0, 0, 4, 11, 0, 1, 0, 1, 1, 1, 0]' : 0.088712}
{'[0, 1, 4, 1, 0, 6, 1, 0, 0, 4, 11, 0, 1, 0, 1, 1, 1, 0]' : 0.0893931}

out:
 ["{'[0, 1, 4, 1, 0, 6, 1, 0, 0, 4, 11, 0, 1, 0, 1, 1, 1, 0]' : 0.102405}", "{'[0, 1, 4, 1, 0, 6, 1, 0, 0, 4, 11, 0, 1, 0, 1, 1, 1, 0]' : 0.102566}", "{'[0, 1, 4, 1, 0, 6, 1, 0, 0, 4, 11, 0, 1, 0, 1, 1, 1, 0]' : 0.102274}", "{'[0, 1, 4, 1, 0, 6, 1, 0, 0, 4, 11, 0, 1, 0, 1, 1, 1, 0]' : 0.102317}", "{'[0, 1, 4, 1, 0, 6, 1, 0, 0, 4, 11, 0, 1, 0, 1, 1, 1, 0]' : 0.101393}", "{'[0, 1, 4, 1, 0, 6, 1, 0, 0, 4, 11, 0, 1, 0, 1, 1, 1, 0]' : 0.0913351}", "{'[0, 1, 4, 1, 0, 6, 1, 0, 0, 4, 11, 0, 1, 0, 1, 1, 1, 0]' : 0.08991}", "{'[0, 1, 4, 1, 0, 6, 1, 0, 0, 4, 11, 0, 1, 0, 1, 1, 1, 0]' : 0.089407}", "{'[0, 1, 4, 1, 0, 6, 1, 0, 0, 4, 11, 0, 1, 0, 1, 1, 1, 0]' : 0.0894291}", "{'[0, 1, 4, 1, 0, 6, 1, 0, 0, 4, 11, 0, 1, 0, 1, 1, 1, 0]' : 0.089422}", "{'[0, 1, 4, 1, 0, 6, 1, 0, 0, 4, 11, 0, 1, 0, 1, 1, 1, 0]' : 0.0893981}", "{'[0, 1, 4, 1, 0, 6, 1, 0, 0, 4, 11, 0, 1, 0, 1, 1, 1, 0]' : 0.0896959}", "{'[0, 1, 4, 1, 0, 6, 1, 0, 0, 4, 11, 0, 1, 0, 1, 1, 1, 0]' : 0.089747}", "{'[0, 1, 4, 1, 0, 6, 1, 0, 0, 4, 11, 0, 1, 0, 1, 1, 1, 0]' : 0.0895541}", "{'[0, 1, 4, 1, 0, 6, 1, 0, 0, 4, 11, 0, 1, 0, 1, 1, 1, 0]' : 0.089288}", "{'[0, 1, 4, 1, 0, 6, 1, 0, 0, 4, 11, 0, 1, 0, 1, 1, 1, 0]' : 0.089596}", "{'[0, 1, 4, 1, 0, 6, 1, 0, 0, 4, 11, 0, 1, 0, 1, 1, 1, 0]' : 0.089359}", "{'[0, 1, 4, 1, 0, 6, 1, 0, 0, 4, 11, 0, 1, 0, 1, 1, 1, 0]' : 0.0911531}", "{'[0, 1, 4, 1, 0, 6, 1, 0, 0, 4, 11, 0, 1, 0, 1, 1, 1, 0]' : 0.09185}", "{'[0, 1, 4, 1, 0, 6, 1, 0, 0, 4, 11, 0, 1, 0, 1, 1, 1, 0]' : 0.0918381}", "{'[0, 1, 4, 1, 0, 6, 1, 0, 0, 4, 11, 0, 1, 0, 1, 1, 1, 0]' : 0.0918911}", "{'[0, 1, 4, 1, 0, 6, 1, 0, 0, 4, 11, 0, 1, 0, 1, 1, 1, 0]' : 0.091855}", "{'[0, 1, 4, 1, 0, 6, 1, 0, 0, 4, 11, 0, 1, 0, 1, 1, 1, 0]' : 0.0919249}", "{'[0, 1, 4, 1, 0, 6, 1, 0, 0, 4, 11, 0, 1, 0, 1, 1, 1, 0]' : 0.091866}", "{'[0, 1, 4, 1, 0, 6, 1, 0, 0, 4, 11, 0, 1, 0, 1, 1, 1, 0]' : 0.0917029}", "{'[0, 1, 4, 1, 0, 6, 1, 0, 0, 4, 11, 0, 1, 0, 1, 1, 1, 0]' : 0.091665}", "{'[0, 1, 4, 1, 0, 6, 1, 0, 0, 4, 11, 0, 1, 0, 1, 1, 1, 0]' : 0.0903361}", "{'[0, 1, 4, 1, 0, 6, 1, 0, 0, 4, 11, 0, 1, 0, 1, 1, 1, 0]' : 0.087939}", "{'[0, 1, 4, 1, 0, 6, 1, 0, 0, 4, 11, 0, 1, 0, 1, 1, 1, 0]' : 0.088712}", "{'[0, 1, 4, 1, 0, 6, 1, 0, 0, 4, 11, 0, 1, 0, 1, 1, 1, 0]' : 0.0893931}"]
returning from 'run': {'[0, 1, 4, 1, 0, 6, 1, 0, 0, 4, 11, 0, 1, 0, 1, 1, 1, 0]': ([0.102405, 0.102566, 0.102274, 0.102317, 0.101393, 0.0913351, 0.08991, 0.089407, 0.0894291, 0.089422, 0.0893981, 0.0896959, 0.089747, 0.0895541, 0.089288, 0.089596, 0.089359, 0.0911531, 0.09185, 0.0918381, 0.0918911, 0.091855, 0.0919249, 0.091866, 0.0917029, 0.091665, 0.0903361, 0.087939, 0.088712, 0.0893931], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 4, 1, 0, 6, 1, 0, 0, 4, 11, 0, 1, 0, 1, 1, 1, 0]': ([0.102405, 0.102566, 0.102274, 0.102317, 0.101393, 0.0913351, 0.08991, 0.089407, 0.0894291, 0.089422, 0.0893981, 0.0896959, 0.089747, 0.0895541, 0.089288, 0.089596, 0.089359, 0.0911531, 0.09185, 0.0918381, 0.0918911, 0.091855, 0.0919249, 0.091866, 0.0917029, 0.091665, 0.0903361, 0.087939, 0.088712, 0.0893931], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	57
        Max loop nest depth: 	5
        Additions: 		3780
        Multiplications: 	968
        Divisions: 		0
        Logical: 		0
        Reads: 			5952
        Writes: 		695
        Comparisons:		57
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest8.exe __orio_perftest8.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest8.exe  
Program Test Output: 
{'[4, 6, 6, 0, 5, 0, 1, 0, 27, 10, 8, 0, 2, 0, 0, 0, 0, 1]' : 0.260614}
{'[4, 6, 6, 0, 5, 0, 1, 0, 27, 10, 8, 0, 2, 0, 0, 0, 0, 1]' : 0.261617}
{'[4, 6, 6, 0, 5, 0, 1, 0, 27, 10, 8, 0, 2, 0, 0, 0, 0, 1]' : 0.261905}
{'[4, 6, 6, 0, 5, 0, 1, 0, 27, 10, 8, 0, 2, 0, 0, 0, 0, 1]' : 0.262305}
{'[4, 6, 6, 0, 5, 0, 1, 0, 27, 10, 8, 0, 2, 0, 0, 0, 0, 1]' : 0.265549}
{'[4, 6, 6, 0, 5, 0, 1, 0, 27, 10, 8, 0, 2, 0, 0, 0, 0, 1]' : 0.263589}
{'[4, 6, 6, 0, 5, 0, 1, 0, 27, 10, 8, 0, 2, 0, 0, 0, 0, 1]' : 0.264862}
{'[4, 6, 6, 0, 5, 0, 1, 0, 27, 10, 8, 0, 2, 0, 0, 0, 0, 1]' : 0.26291}
{'[4, 6, 6, 0, 5, 0, 1, 0, 27, 10, 8, 0, 2, 0, 0, 0, 0, 1]' : 0.263547}
{'[4, 6, 6, 0, 5, 0, 1, 0, 27, 10, 8, 0, 2, 0, 0, 0, 0, 1]' : 0.26377}
{'[4, 6, 6, 0, 5, 0, 1, 0, 27, 10, 8, 0, 2, 0, 0, 0, 0, 1]' : 0.267999}
{'[4, 6, 6, 0, 5, 0, 1, 0, 27, 10, 8, 0, 2, 0, 0, 0, 0, 1]' : 0.265373}
{'[4, 6, 6, 0, 5, 0, 1, 0, 27, 10, 8, 0, 2, 0, 0, 0, 0, 1]' : 0.267007}
{'[4, 6, 6, 0, 5, 0, 1, 0, 27, 10, 8, 0, 2, 0, 0, 0, 0, 1]' : 0.265242}
{'[4, 6, 6, 0, 5, 0, 1, 0, 27, 10, 8, 0, 2, 0, 0, 0, 0, 1]' : 0.261112}
{'[4, 6, 6, 0, 5, 0, 1, 0, 27, 10, 8, 0, 2, 0, 0, 0, 0, 1]' : 0.261585}
{'[4, 6, 6, 0, 5, 0, 1, 0, 27, 10, 8, 0, 2, 0, 0, 0, 0, 1]' : 0.26575}
{'[4, 6, 6, 0, 5, 0, 1, 0, 27, 10, 8, 0, 2, 0, 0, 0, 0, 1]' : 0.266388}
{'[4, 6, 6, 0, 5, 0, 1, 0, 27, 10, 8, 0, 2, 0, 0, 0, 0, 1]' : 0.265512}
{'[4, 6, 6, 0, 5, 0, 1, 0, 27, 10, 8, 0, 2, 0, 0, 0, 0, 1]' : 0.263829}
{'[4, 6, 6, 0, 5, 0, 1, 0, 27, 10, 8, 0, 2, 0, 0, 0, 0, 1]' : 0.265846}
{'[4, 6, 6, 0, 5, 0, 1, 0, 27, 10, 8, 0, 2, 0, 0, 0, 0, 1]' : 0.266635}
{'[4, 6, 6, 0, 5, 0, 1, 0, 27, 10, 8, 0, 2, 0, 0, 0, 0, 1]' : 0.261441}
{'[4, 6, 6, 0, 5, 0, 1, 0, 27, 10, 8, 0, 2, 0, 0, 0, 0, 1]' : 0.264728}
{'[4, 6, 6, 0, 5, 0, 1, 0, 27, 10, 8, 0, 2, 0, 0, 0, 0, 1]' : 0.263542}
{'[4, 6, 6, 0, 5, 0, 1, 0, 27, 10, 8, 0, 2, 0, 0, 0, 0, 1]' : 0.263276}
{'[4, 6, 6, 0, 5, 0, 1, 0, 27, 10, 8, 0, 2, 0, 0, 0, 0, 1]' : 0.26138}
{'[4, 6, 6, 0, 5, 0, 1, 0, 27, 10, 8, 0, 2, 0, 0, 0, 0, 1]' : 0.266309}
{'[4, 6, 6, 0, 5, 0, 1, 0, 27, 10, 8, 0, 2, 0, 0, 0, 0, 1]' : 0.266455}
{'[4, 6, 6, 0, 5, 0, 1, 0, 27, 10, 8, 0, 2, 0, 0, 0, 0, 1]' : 0.265521}

out:
 ["{'[4, 6, 6, 0, 5, 0, 1, 0, 27, 10, 8, 0, 2, 0, 0, 0, 0, 1]' : 0.260614}", "{'[4, 6, 6, 0, 5, 0, 1, 0, 27, 10, 8, 0, 2, 0, 0, 0, 0, 1]' : 0.261617}", "{'[4, 6, 6, 0, 5, 0, 1, 0, 27, 10, 8, 0, 2, 0, 0, 0, 0, 1]' : 0.261905}", "{'[4, 6, 6, 0, 5, 0, 1, 0, 27, 10, 8, 0, 2, 0, 0, 0, 0, 1]' : 0.262305}", "{'[4, 6, 6, 0, 5, 0, 1, 0, 27, 10, 8, 0, 2, 0, 0, 0, 0, 1]' : 0.265549}", "{'[4, 6, 6, 0, 5, 0, 1, 0, 27, 10, 8, 0, 2, 0, 0, 0, 0, 1]' : 0.263589}", "{'[4, 6, 6, 0, 5, 0, 1, 0, 27, 10, 8, 0, 2, 0, 0, 0, 0, 1]' : 0.264862}", "{'[4, 6, 6, 0, 5, 0, 1, 0, 27, 10, 8, 0, 2, 0, 0, 0, 0, 1]' : 0.26291}", "{'[4, 6, 6, 0, 5, 0, 1, 0, 27, 10, 8, 0, 2, 0, 0, 0, 0, 1]' : 0.263547}", "{'[4, 6, 6, 0, 5, 0, 1, 0, 27, 10, 8, 0, 2, 0, 0, 0, 0, 1]' : 0.26377}", "{'[4, 6, 6, 0, 5, 0, 1, 0, 27, 10, 8, 0, 2, 0, 0, 0, 0, 1]' : 0.267999}", "{'[4, 6, 6, 0, 5, 0, 1, 0, 27, 10, 8, 0, 2, 0, 0, 0, 0, 1]' : 0.265373}", "{'[4, 6, 6, 0, 5, 0, 1, 0, 27, 10, 8, 0, 2, 0, 0, 0, 0, 1]' : 0.267007}", "{'[4, 6, 6, 0, 5, 0, 1, 0, 27, 10, 8, 0, 2, 0, 0, 0, 0, 1]' : 0.265242}", "{'[4, 6, 6, 0, 5, 0, 1, 0, 27, 10, 8, 0, 2, 0, 0, 0, 0, 1]' : 0.261112}", "{'[4, 6, 6, 0, 5, 0, 1, 0, 27, 10, 8, 0, 2, 0, 0, 0, 0, 1]' : 0.261585}", "{'[4, 6, 6, 0, 5, 0, 1, 0, 27, 10, 8, 0, 2, 0, 0, 0, 0, 1]' : 0.26575}", "{'[4, 6, 6, 0, 5, 0, 1, 0, 27, 10, 8, 0, 2, 0, 0, 0, 0, 1]' : 0.266388}", "{'[4, 6, 6, 0, 5, 0, 1, 0, 27, 10, 8, 0, 2, 0, 0, 0, 0, 1]' : 0.265512}", "{'[4, 6, 6, 0, 5, 0, 1, 0, 27, 10, 8, 0, 2, 0, 0, 0, 0, 1]' : 0.263829}", "{'[4, 6, 6, 0, 5, 0, 1, 0, 27, 10, 8, 0, 2, 0, 0, 0, 0, 1]' : 0.265846}", "{'[4, 6, 6, 0, 5, 0, 1, 0, 27, 10, 8, 0, 2, 0, 0, 0, 0, 1]' : 0.266635}", "{'[4, 6, 6, 0, 5, 0, 1, 0, 27, 10, 8, 0, 2, 0, 0, 0, 0, 1]' : 0.261441}", "{'[4, 6, 6, 0, 5, 0, 1, 0, 27, 10, 8, 0, 2, 0, 0, 0, 0, 1]' : 0.264728}", "{'[4, 6, 6, 0, 5, 0, 1, 0, 27, 10, 8, 0, 2, 0, 0, 0, 0, 1]' : 0.263542}", "{'[4, 6, 6, 0, 5, 0, 1, 0, 27, 10, 8, 0, 2, 0, 0, 0, 0, 1]' : 0.263276}", "{'[4, 6, 6, 0, 5, 0, 1, 0, 27, 10, 8, 0, 2, 0, 0, 0, 0, 1]' : 0.26138}", "{'[4, 6, 6, 0, 5, 0, 1, 0, 27, 10, 8, 0, 2, 0, 0, 0, 0, 1]' : 0.266309}", "{'[4, 6, 6, 0, 5, 0, 1, 0, 27, 10, 8, 0, 2, 0, 0, 0, 0, 1]' : 0.266455}", "{'[4, 6, 6, 0, 5, 0, 1, 0, 27, 10, 8, 0, 2, 0, 0, 0, 0, 1]' : 0.265521}"]
returning from 'run': {'[4, 6, 6, 0, 5, 0, 1, 0, 27, 10, 8, 0, 2, 0, 0, 0, 0, 1]': ([0.260614, 0.261617, 0.261905, 0.262305, 0.265549, 0.263589, 0.264862, 0.26291, 0.263547, 0.26377, 0.267999, 0.265373, 0.267007, 0.265242, 0.261112, 0.261585, 0.26575, 0.266388, 0.265512, 0.263829, 0.265846, 0.266635, 0.261441, 0.264728, 0.263542, 0.263276, 0.26138, 0.266309, 0.266455, 0.265521], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 6, 6, 0, 5, 0, 1, 0, 27, 10, 8, 0, 2, 0, 0, 0, 0, 1]': ([0.260614, 0.261617, 0.261905, 0.262305, 0.265549, 0.263589, 0.264862, 0.26291, 0.263547, 0.26377, 0.267999, 0.265373, 0.267007, 0.265242, 0.261112, 0.261585, 0.26575, 0.266388, 0.265512, 0.263829, 0.265846, 0.266635, 0.261441, 0.264728, 0.263542, 0.263276, 0.26138, 0.266309, 0.266455, 0.265521], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	5
        Additions: 		585
        Multiplications: 	180
        Divisions: 		0
        Logical: 		0
        Reads: 			1074
        Writes: 		155
        Comparisons:		16
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest9.exe __orio_perftest9.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest9.exe  
Program Test Output: 
{'[5, 6, 0, 6, 4, 0, 0, 0, 26, 0, 3, 3, 1, 0, 0, 0, 1, 0]' : 0.114841}
{'[5, 6, 0, 6, 4, 0, 0, 0, 26, 0, 3, 3, 1, 0, 0, 0, 1, 0]' : 0.112917}
{'[5, 6, 0, 6, 4, 0, 0, 0, 26, 0, 3, 3, 1, 0, 0, 0, 1, 0]' : 0.111936}
{'[5, 6, 0, 6, 4, 0, 0, 0, 26, 0, 3, 3, 1, 0, 0, 0, 1, 0]' : 0.111667}
{'[5, 6, 0, 6, 4, 0, 0, 0, 26, 0, 3, 3, 1, 0, 0, 0, 1, 0]' : 0.114837}
{'[5, 6, 0, 6, 4, 0, 0, 0, 26, 0, 3, 3, 1, 0, 0, 0, 1, 0]' : 0.114984}
{'[5, 6, 0, 6, 4, 0, 0, 0, 26, 0, 3, 3, 1, 0, 0, 0, 1, 0]' : 0.114815}
{'[5, 6, 0, 6, 4, 0, 0, 0, 26, 0, 3, 3, 1, 0, 0, 0, 1, 0]' : 0.114666}
{'[5, 6, 0, 6, 4, 0, 0, 0, 26, 0, 3, 3, 1, 0, 0, 0, 1, 0]' : 0.115082}
{'[5, 6, 0, 6, 4, 0, 0, 0, 26, 0, 3, 3, 1, 0, 0, 0, 1, 0]' : 0.114675}
{'[5, 6, 0, 6, 4, 0, 0, 0, 26, 0, 3, 3, 1, 0, 0, 0, 1, 0]' : 0.115013}
{'[5, 6, 0, 6, 4, 0, 0, 0, 26, 0, 3, 3, 1, 0, 0, 0, 1, 0]' : 0.114158}
{'[5, 6, 0, 6, 4, 0, 0, 0, 26, 0, 3, 3, 1, 0, 0, 0, 1, 0]' : 0.113796}
{'[5, 6, 0, 6, 4, 0, 0, 0, 26, 0, 3, 3, 1, 0, 0, 0, 1, 0]' : 0.112498}
{'[5, 6, 0, 6, 4, 0, 0, 0, 26, 0, 3, 3, 1, 0, 0, 0, 1, 0]' : 0.113482}
{'[5, 6, 0, 6, 4, 0, 0, 0, 26, 0, 3, 3, 1, 0, 0, 0, 1, 0]' : 0.114623}
{'[5, 6, 0, 6, 4, 0, 0, 0, 26, 0, 3, 3, 1, 0, 0, 0, 1, 0]' : 0.114801}
{'[5, 6, 0, 6, 4, 0, 0, 0, 26, 0, 3, 3, 1, 0, 0, 0, 1, 0]' : 0.114659}
{'[5, 6, 0, 6, 4, 0, 0, 0, 26, 0, 3, 3, 1, 0, 0, 0, 1, 0]' : 0.114928}
{'[5, 6, 0, 6, 4, 0, 0, 0, 26, 0, 3, 3, 1, 0, 0, 0, 1, 0]' : 0.114656}
{'[5, 6, 0, 6, 4, 0, 0, 0, 26, 0, 3, 3, 1, 0, 0, 0, 1, 0]' : 0.113911}
{'[5, 6, 0, 6, 4, 0, 0, 0, 26, 0, 3, 3, 1, 0, 0, 0, 1, 0]' : 0.113741}
{'[5, 6, 0, 6, 4, 0, 0, 0, 26, 0, 3, 3, 1, 0, 0, 0, 1, 0]' : 0.114406}
{'[5, 6, 0, 6, 4, 0, 0, 0, 26, 0, 3, 3, 1, 0, 0, 0, 1, 0]' : 0.114941}
{'[5, 6, 0, 6, 4, 0, 0, 0, 26, 0, 3, 3, 1, 0, 0, 0, 1, 0]' : 0.114829}
{'[5, 6, 0, 6, 4, 0, 0, 0, 26, 0, 3, 3, 1, 0, 0, 0, 1, 0]' : 0.11501}
{'[5, 6, 0, 6, 4, 0, 0, 0, 26, 0, 3, 3, 1, 0, 0, 0, 1, 0]' : 0.114796}
{'[5, 6, 0, 6, 4, 0, 0, 0, 26, 0, 3, 3, 1, 0, 0, 0, 1, 0]' : 0.114517}
{'[5, 6, 0, 6, 4, 0, 0, 0, 26, 0, 3, 3, 1, 0, 0, 0, 1, 0]' : 0.113838}
{'[5, 6, 0, 6, 4, 0, 0, 0, 26, 0, 3, 3, 1, 0, 0, 0, 1, 0]' : 0.113937}

out:
 ["{'[5, 6, 0, 6, 4, 0, 0, 0, 26, 0, 3, 3, 1, 0, 0, 0, 1, 0]' : 0.114841}", "{'[5, 6, 0, 6, 4, 0, 0, 0, 26, 0, 3, 3, 1, 0, 0, 0, 1, 0]' : 0.112917}", "{'[5, 6, 0, 6, 4, 0, 0, 0, 26, 0, 3, 3, 1, 0, 0, 0, 1, 0]' : 0.111936}", "{'[5, 6, 0, 6, 4, 0, 0, 0, 26, 0, 3, 3, 1, 0, 0, 0, 1, 0]' : 0.111667}", "{'[5, 6, 0, 6, 4, 0, 0, 0, 26, 0, 3, 3, 1, 0, 0, 0, 1, 0]' : 0.114837}", "{'[5, 6, 0, 6, 4, 0, 0, 0, 26, 0, 3, 3, 1, 0, 0, 0, 1, 0]' : 0.114984}", "{'[5, 6, 0, 6, 4, 0, 0, 0, 26, 0, 3, 3, 1, 0, 0, 0, 1, 0]' : 0.114815}", "{'[5, 6, 0, 6, 4, 0, 0, 0, 26, 0, 3, 3, 1, 0, 0, 0, 1, 0]' : 0.114666}", "{'[5, 6, 0, 6, 4, 0, 0, 0, 26, 0, 3, 3, 1, 0, 0, 0, 1, 0]' : 0.115082}", "{'[5, 6, 0, 6, 4, 0, 0, 0, 26, 0, 3, 3, 1, 0, 0, 0, 1, 0]' : 0.114675}", "{'[5, 6, 0, 6, 4, 0, 0, 0, 26, 0, 3, 3, 1, 0, 0, 0, 1, 0]' : 0.115013}", "{'[5, 6, 0, 6, 4, 0, 0, 0, 26, 0, 3, 3, 1, 0, 0, 0, 1, 0]' : 0.114158}", "{'[5, 6, 0, 6, 4, 0, 0, 0, 26, 0, 3, 3, 1, 0, 0, 0, 1, 0]' : 0.113796}", "{'[5, 6, 0, 6, 4, 0, 0, 0, 26, 0, 3, 3, 1, 0, 0, 0, 1, 0]' : 0.112498}", "{'[5, 6, 0, 6, 4, 0, 0, 0, 26, 0, 3, 3, 1, 0, 0, 0, 1, 0]' : 0.113482}", "{'[5, 6, 0, 6, 4, 0, 0, 0, 26, 0, 3, 3, 1, 0, 0, 0, 1, 0]' : 0.114623}", "{'[5, 6, 0, 6, 4, 0, 0, 0, 26, 0, 3, 3, 1, 0, 0, 0, 1, 0]' : 0.114801}", "{'[5, 6, 0, 6, 4, 0, 0, 0, 26, 0, 3, 3, 1, 0, 0, 0, 1, 0]' : 0.114659}", "{'[5, 6, 0, 6, 4, 0, 0, 0, 26, 0, 3, 3, 1, 0, 0, 0, 1, 0]' : 0.114928}", "{'[5, 6, 0, 6, 4, 0, 0, 0, 26, 0, 3, 3, 1, 0, 0, 0, 1, 0]' : 0.114656}", "{'[5, 6, 0, 6, 4, 0, 0, 0, 26, 0, 3, 3, 1, 0, 0, 0, 1, 0]' : 0.113911}", "{'[5, 6, 0, 6, 4, 0, 0, 0, 26, 0, 3, 3, 1, 0, 0, 0, 1, 0]' : 0.113741}", "{'[5, 6, 0, 6, 4, 0, 0, 0, 26, 0, 3, 3, 1, 0, 0, 0, 1, 0]' : 0.114406}", "{'[5, 6, 0, 6, 4, 0, 0, 0, 26, 0, 3, 3, 1, 0, 0, 0, 1, 0]' : 0.114941}", "{'[5, 6, 0, 6, 4, 0, 0, 0, 26, 0, 3, 3, 1, 0, 0, 0, 1, 0]' : 0.114829}", "{'[5, 6, 0, 6, 4, 0, 0, 0, 26, 0, 3, 3, 1, 0, 0, 0, 1, 0]' : 0.11501}", "{'[5, 6, 0, 6, 4, 0, 0, 0, 26, 0, 3, 3, 1, 0, 0, 0, 1, 0]' : 0.114796}", "{'[5, 6, 0, 6, 4, 0, 0, 0, 26, 0, 3, 3, 1, 0, 0, 0, 1, 0]' : 0.114517}", "{'[5, 6, 0, 6, 4, 0, 0, 0, 26, 0, 3, 3, 1, 0, 0, 0, 1, 0]' : 0.113838}", "{'[5, 6, 0, 6, 4, 0, 0, 0, 26, 0, 3, 3, 1, 0, 0, 0, 1, 0]' : 0.113937}"]
returning from 'run': {'[5, 6, 0, 6, 4, 0, 0, 0, 26, 0, 3, 3, 1, 0, 0, 0, 1, 0]': ([0.114841, 0.112917, 0.111936, 0.111667, 0.114837, 0.114984, 0.114815, 0.114666, 0.115082, 0.114675, 0.115013, 0.114158, 0.113796, 0.112498, 0.113482, 0.114623, 0.114801, 0.114659, 0.114928, 0.114656, 0.113911, 0.113741, 0.114406, 0.114941, 0.114829, 0.11501, 0.114796, 0.114517, 0.113838, 0.113937], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 6, 0, 6, 4, 0, 0, 0, 26, 0, 3, 3, 1, 0, 0, 0, 1, 0]': ([0.114841, 0.112917, 0.111936, 0.111667, 0.114837, 0.114984, 0.114815, 0.114666, 0.115082, 0.114675, 0.115013, 0.114158, 0.113796, 0.112498, 0.113482, 0.114623, 0.114801, 0.114659, 0.114928, 0.114656, 0.113911, 0.113741, 0.114406, 0.114941, 0.114829, 0.11501, 0.114796, 0.114517, 0.113838, 0.113937], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	5
        Additions: 		1837
        Multiplications: 	522
        Divisions: 		0
        Logical: 		0
        Reads: 			2943
        Writes: 		320
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest10.exe __orio_perftest10.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest10.exe  
Program Test Output: 
{'[5, 3, 5, 0, 3, 0, 0, 1, 1, 0, 19, 4, 1, 0, 1, 0, 0, 1]' : 0.112103}
{'[5, 3, 5, 0, 3, 0, 0, 1, 1, 0, 19, 4, 1, 0, 1, 0, 0, 1]' : 0.111836}
{'[5, 3, 5, 0, 3, 0, 0, 1, 1, 0, 19, 4, 1, 0, 1, 0, 0, 1]' : 0.110496}
{'[5, 3, 5, 0, 3, 0, 0, 1, 1, 0, 19, 4, 1, 0, 1, 0, 0, 1]' : 0.110524}
{'[5, 3, 5, 0, 3, 0, 0, 1, 1, 0, 19, 4, 1, 0, 1, 0, 0, 1]' : 0.110428}
{'[5, 3, 5, 0, 3, 0, 0, 1, 1, 0, 19, 4, 1, 0, 1, 0, 0, 1]' : 0.110693}
{'[5, 3, 5, 0, 3, 0, 0, 1, 1, 0, 19, 4, 1, 0, 1, 0, 0, 1]' : 0.110488}
{'[5, 3, 5, 0, 3, 0, 0, 1, 1, 0, 19, 4, 1, 0, 1, 0, 0, 1]' : 0.110579}
{'[5, 3, 5, 0, 3, 0, 0, 1, 1, 0, 19, 4, 1, 0, 1, 0, 0, 1]' : 0.110526}
{'[5, 3, 5, 0, 3, 0, 0, 1, 1, 0, 19, 4, 1, 0, 1, 0, 0, 1]' : 0.112106}
{'[5, 3, 5, 0, 3, 0, 0, 1, 1, 0, 19, 4, 1, 0, 1, 0, 0, 1]' : 0.111625}
{'[5, 3, 5, 0, 3, 0, 0, 1, 1, 0, 19, 4, 1, 0, 1, 0, 0, 1]' : 0.110549}
{'[5, 3, 5, 0, 3, 0, 0, 1, 1, 0, 19, 4, 1, 0, 1, 0, 0, 1]' : 0.110601}
{'[5, 3, 5, 0, 3, 0, 0, 1, 1, 0, 19, 4, 1, 0, 1, 0, 0, 1]' : 0.110677}
{'[5, 3, 5, 0, 3, 0, 0, 1, 1, 0, 19, 4, 1, 0, 1, 0, 0, 1]' : 0.110535}
{'[5, 3, 5, 0, 3, 0, 0, 1, 1, 0, 19, 4, 1, 0, 1, 0, 0, 1]' : 0.110683}
{'[5, 3, 5, 0, 3, 0, 0, 1, 1, 0, 19, 4, 1, 0, 1, 0, 0, 1]' : 0.110655}
{'[5, 3, 5, 0, 3, 0, 0, 1, 1, 0, 19, 4, 1, 0, 1, 0, 0, 1]' : 0.110687}
{'[5, 3, 5, 0, 3, 0, 0, 1, 1, 0, 19, 4, 1, 0, 1, 0, 0, 1]' : 0.111974}
{'[5, 3, 5, 0, 3, 0, 0, 1, 1, 0, 19, 4, 1, 0, 1, 0, 0, 1]' : 0.111803}
{'[5, 3, 5, 0, 3, 0, 0, 1, 1, 0, 19, 4, 1, 0, 1, 0, 0, 1]' : 0.110551}
{'[5, 3, 5, 0, 3, 0, 0, 1, 1, 0, 19, 4, 1, 0, 1, 0, 0, 1]' : 0.110528}
{'[5, 3, 5, 0, 3, 0, 0, 1, 1, 0, 19, 4, 1, 0, 1, 0, 0, 1]' : 0.113035}
{'[5, 3, 5, 0, 3, 0, 0, 1, 1, 0, 19, 4, 1, 0, 1, 0, 0, 1]' : 0.11373}
{'[5, 3, 5, 0, 3, 0, 0, 1, 1, 0, 19, 4, 1, 0, 1, 0, 0, 1]' : 0.113682}
{'[5, 3, 5, 0, 3, 0, 0, 1, 1, 0, 19, 4, 1, 0, 1, 0, 0, 1]' : 0.113706}
{'[5, 3, 5, 0, 3, 0, 0, 1, 1, 0, 19, 4, 1, 0, 1, 0, 0, 1]' : 0.113524}
{'[5, 3, 5, 0, 3, 0, 0, 1, 1, 0, 19, 4, 1, 0, 1, 0, 0, 1]' : 0.11542}
{'[5, 3, 5, 0, 3, 0, 0, 1, 1, 0, 19, 4, 1, 0, 1, 0, 0, 1]' : 0.114476}
{'[5, 3, 5, 0, 3, 0, 0, 1, 1, 0, 19, 4, 1, 0, 1, 0, 0, 1]' : 0.113655}

out:
 ["{'[5, 3, 5, 0, 3, 0, 0, 1, 1, 0, 19, 4, 1, 0, 1, 0, 0, 1]' : 0.112103}", "{'[5, 3, 5, 0, 3, 0, 0, 1, 1, 0, 19, 4, 1, 0, 1, 0, 0, 1]' : 0.111836}", "{'[5, 3, 5, 0, 3, 0, 0, 1, 1, 0, 19, 4, 1, 0, 1, 0, 0, 1]' : 0.110496}", "{'[5, 3, 5, 0, 3, 0, 0, 1, 1, 0, 19, 4, 1, 0, 1, 0, 0, 1]' : 0.110524}", "{'[5, 3, 5, 0, 3, 0, 0, 1, 1, 0, 19, 4, 1, 0, 1, 0, 0, 1]' : 0.110428}", "{'[5, 3, 5, 0, 3, 0, 0, 1, 1, 0, 19, 4, 1, 0, 1, 0, 0, 1]' : 0.110693}", "{'[5, 3, 5, 0, 3, 0, 0, 1, 1, 0, 19, 4, 1, 0, 1, 0, 0, 1]' : 0.110488}", "{'[5, 3, 5, 0, 3, 0, 0, 1, 1, 0, 19, 4, 1, 0, 1, 0, 0, 1]' : 0.110579}", "{'[5, 3, 5, 0, 3, 0, 0, 1, 1, 0, 19, 4, 1, 0, 1, 0, 0, 1]' : 0.110526}", "{'[5, 3, 5, 0, 3, 0, 0, 1, 1, 0, 19, 4, 1, 0, 1, 0, 0, 1]' : 0.112106}", "{'[5, 3, 5, 0, 3, 0, 0, 1, 1, 0, 19, 4, 1, 0, 1, 0, 0, 1]' : 0.111625}", "{'[5, 3, 5, 0, 3, 0, 0, 1, 1, 0, 19, 4, 1, 0, 1, 0, 0, 1]' : 0.110549}", "{'[5, 3, 5, 0, 3, 0, 0, 1, 1, 0, 19, 4, 1, 0, 1, 0, 0, 1]' : 0.110601}", "{'[5, 3, 5, 0, 3, 0, 0, 1, 1, 0, 19, 4, 1, 0, 1, 0, 0, 1]' : 0.110677}", "{'[5, 3, 5, 0, 3, 0, 0, 1, 1, 0, 19, 4, 1, 0, 1, 0, 0, 1]' : 0.110535}", "{'[5, 3, 5, 0, 3, 0, 0, 1, 1, 0, 19, 4, 1, 0, 1, 0, 0, 1]' : 0.110683}", "{'[5, 3, 5, 0, 3, 0, 0, 1, 1, 0, 19, 4, 1, 0, 1, 0, 0, 1]' : 0.110655}", "{'[5, 3, 5, 0, 3, 0, 0, 1, 1, 0, 19, 4, 1, 0, 1, 0, 0, 1]' : 0.110687}", "{'[5, 3, 5, 0, 3, 0, 0, 1, 1, 0, 19, 4, 1, 0, 1, 0, 0, 1]' : 0.111974}", "{'[5, 3, 5, 0, 3, 0, 0, 1, 1, 0, 19, 4, 1, 0, 1, 0, 0, 1]' : 0.111803}", "{'[5, 3, 5, 0, 3, 0, 0, 1, 1, 0, 19, 4, 1, 0, 1, 0, 0, 1]' : 0.110551}", "{'[5, 3, 5, 0, 3, 0, 0, 1, 1, 0, 19, 4, 1, 0, 1, 0, 0, 1]' : 0.110528}", "{'[5, 3, 5, 0, 3, 0, 0, 1, 1, 0, 19, 4, 1, 0, 1, 0, 0, 1]' : 0.113035}", "{'[5, 3, 5, 0, 3, 0, 0, 1, 1, 0, 19, 4, 1, 0, 1, 0, 0, 1]' : 0.11373}", "{'[5, 3, 5, 0, 3, 0, 0, 1, 1, 0, 19, 4, 1, 0, 1, 0, 0, 1]' : 0.113682}", "{'[5, 3, 5, 0, 3, 0, 0, 1, 1, 0, 19, 4, 1, 0, 1, 0, 0, 1]' : 0.113706}", "{'[5, 3, 5, 0, 3, 0, 0, 1, 1, 0, 19, 4, 1, 0, 1, 0, 0, 1]' : 0.113524}", "{'[5, 3, 5, 0, 3, 0, 0, 1, 1, 0, 19, 4, 1, 0, 1, 0, 0, 1]' : 0.11542}", "{'[5, 3, 5, 0, 3, 0, 0, 1, 1, 0, 19, 4, 1, 0, 1, 0, 0, 1]' : 0.114476}", "{'[5, 3, 5, 0, 3, 0, 0, 1, 1, 0, 19, 4, 1, 0, 1, 0, 0, 1]' : 0.113655}"]
returning from 'run': {'[5, 3, 5, 0, 3, 0, 0, 1, 1, 0, 19, 4, 1, 0, 1, 0, 0, 1]': ([0.112103, 0.111836, 0.110496, 0.110524, 0.110428, 0.110693, 0.110488, 0.110579, 0.110526, 0.112106, 0.111625, 0.110549, 0.110601, 0.110677, 0.110535, 0.110683, 0.110655, 0.110687, 0.111974, 0.111803, 0.110551, 0.110528, 0.113035, 0.11373, 0.113682, 0.113706, 0.113524, 0.11542, 0.114476, 0.113655], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 3, 5, 0, 3, 0, 0, 1, 1, 0, 19, 4, 1, 0, 1, 0, 0, 1]': ([0.112103, 0.111836, 0.110496, 0.110524, 0.110428, 0.110693, 0.110488, 0.110579, 0.110526, 0.112106, 0.111625, 0.110549, 0.110601, 0.110677, 0.110535, 0.110683, 0.110655, 0.110687, 0.111974, 0.111803, 0.110551, 0.110528, 0.113035, 0.11373, 0.113682, 0.113706, 0.113524, 0.11542, 0.114476, 0.113655], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	23
        Max loop nest depth: 	5
        Additions: 		4463
        Multiplications: 	2112
        Divisions: 		0
        Logical: 		0
        Reads: 			8299
        Writes: 		1314
        Comparisons:		23
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest11.exe __orio_perftest11.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest11.exe  
Program Test Output: 
{'[6, 6, 6, 0, 5, 6, 0, 1, 10, 0, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.194449}
{'[6, 6, 6, 0, 5, 6, 0, 1, 10, 0, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.191672}
{'[6, 6, 6, 0, 5, 6, 0, 1, 10, 0, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.170658}
{'[6, 6, 6, 0, 5, 6, 0, 1, 10, 0, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.171101}
{'[6, 6, 6, 0, 5, 6, 0, 1, 10, 0, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.170306}
{'[6, 6, 6, 0, 5, 6, 0, 1, 10, 0, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.170988}
{'[6, 6, 6, 0, 5, 6, 0, 1, 10, 0, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.170134}
{'[6, 6, 6, 0, 5, 6, 0, 1, 10, 0, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.170246}
{'[6, 6, 6, 0, 5, 6, 0, 1, 10, 0, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.169966}
{'[6, 6, 6, 0, 5, 6, 0, 1, 10, 0, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.170285}
{'[6, 6, 6, 0, 5, 6, 0, 1, 10, 0, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.170534}
{'[6, 6, 6, 0, 5, 6, 0, 1, 10, 0, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.170295}
{'[6, 6, 6, 0, 5, 6, 0, 1, 10, 0, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.170253}
{'[6, 6, 6, 0, 5, 6, 0, 1, 10, 0, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.170314}
{'[6, 6, 6, 0, 5, 6, 0, 1, 10, 0, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.171384}
{'[6, 6, 6, 0, 5, 6, 0, 1, 10, 0, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.170475}
{'[6, 6, 6, 0, 5, 6, 0, 1, 10, 0, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.170403}
{'[6, 6, 6, 0, 5, 6, 0, 1, 10, 0, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.170474}
{'[6, 6, 6, 0, 5, 6, 0, 1, 10, 0, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.170554}
{'[6, 6, 6, 0, 5, 6, 0, 1, 10, 0, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.170599}
{'[6, 6, 6, 0, 5, 6, 0, 1, 10, 0, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.170546}
{'[6, 6, 6, 0, 5, 6, 0, 1, 10, 0, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.170611}
{'[6, 6, 6, 0, 5, 6, 0, 1, 10, 0, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.169811}
{'[6, 6, 6, 0, 5, 6, 0, 1, 10, 0, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.171073}
{'[6, 6, 6, 0, 5, 6, 0, 1, 10, 0, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.170414}
{'[6, 6, 6, 0, 5, 6, 0, 1, 10, 0, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.170146}
{'[6, 6, 6, 0, 5, 6, 0, 1, 10, 0, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.17042}
{'[6, 6, 6, 0, 5, 6, 0, 1, 10, 0, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.170248}
{'[6, 6, 6, 0, 5, 6, 0, 1, 10, 0, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.170398}
{'[6, 6, 6, 0, 5, 6, 0, 1, 10, 0, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.171015}

out:
 ["{'[6, 6, 6, 0, 5, 6, 0, 1, 10, 0, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.194449}", "{'[6, 6, 6, 0, 5, 6, 0, 1, 10, 0, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.191672}", "{'[6, 6, 6, 0, 5, 6, 0, 1, 10, 0, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.170658}", "{'[6, 6, 6, 0, 5, 6, 0, 1, 10, 0, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.171101}", "{'[6, 6, 6, 0, 5, 6, 0, 1, 10, 0, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.170306}", "{'[6, 6, 6, 0, 5, 6, 0, 1, 10, 0, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.170988}", "{'[6, 6, 6, 0, 5, 6, 0, 1, 10, 0, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.170134}", "{'[6, 6, 6, 0, 5, 6, 0, 1, 10, 0, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.170246}", "{'[6, 6, 6, 0, 5, 6, 0, 1, 10, 0, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.169966}", "{'[6, 6, 6, 0, 5, 6, 0, 1, 10, 0, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.170285}", "{'[6, 6, 6, 0, 5, 6, 0, 1, 10, 0, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.170534}", "{'[6, 6, 6, 0, 5, 6, 0, 1, 10, 0, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.170295}", "{'[6, 6, 6, 0, 5, 6, 0, 1, 10, 0, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.170253}", "{'[6, 6, 6, 0, 5, 6, 0, 1, 10, 0, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.170314}", "{'[6, 6, 6, 0, 5, 6, 0, 1, 10, 0, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.171384}", "{'[6, 6, 6, 0, 5, 6, 0, 1, 10, 0, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.170475}", "{'[6, 6, 6, 0, 5, 6, 0, 1, 10, 0, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.170403}", "{'[6, 6, 6, 0, 5, 6, 0, 1, 10, 0, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.170474}", "{'[6, 6, 6, 0, 5, 6, 0, 1, 10, 0, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.170554}", "{'[6, 6, 6, 0, 5, 6, 0, 1, 10, 0, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.170599}", "{'[6, 6, 6, 0, 5, 6, 0, 1, 10, 0, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.170546}", "{'[6, 6, 6, 0, 5, 6, 0, 1, 10, 0, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.170611}", "{'[6, 6, 6, 0, 5, 6, 0, 1, 10, 0, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.169811}", "{'[6, 6, 6, 0, 5, 6, 0, 1, 10, 0, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.171073}", "{'[6, 6, 6, 0, 5, 6, 0, 1, 10, 0, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.170414}", "{'[6, 6, 6, 0, 5, 6, 0, 1, 10, 0, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.170146}", "{'[6, 6, 6, 0, 5, 6, 0, 1, 10, 0, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.17042}", "{'[6, 6, 6, 0, 5, 6, 0, 1, 10, 0, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.170248}", "{'[6, 6, 6, 0, 5, 6, 0, 1, 10, 0, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.170398}", "{'[6, 6, 6, 0, 5, 6, 0, 1, 10, 0, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.171015}"]
returning from 'run': {'[6, 6, 6, 0, 5, 6, 0, 1, 10, 0, 0, 29, 2, 0, 0, 1, 1, 0]': ([0.194449, 0.191672, 0.170658, 0.171101, 0.170306, 0.170988, 0.170134, 0.170246, 0.169966, 0.170285, 0.170534, 0.170295, 0.170253, 0.170314, 0.171384, 0.170475, 0.170403, 0.170474, 0.170554, 0.170599, 0.170546, 0.170611, 0.169811, 0.171073, 0.170414, 0.170146, 0.17042, 0.170248, 0.170398, 0.171015], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 6, 0, 5, 6, 0, 1, 10, 0, 0, 29, 2, 0, 0, 1, 1, 0]': ([0.194449, 0.191672, 0.170658, 0.171101, 0.170306, 0.170988, 0.170134, 0.170246, 0.169966, 0.170285, 0.170534, 0.170295, 0.170253, 0.170314, 0.171384, 0.170475, 0.170403, 0.170474, 0.170554, 0.170599, 0.170546, 0.170611, 0.169811, 0.171073, 0.170414, 0.170146, 0.17042, 0.170248, 0.170398, 0.171015], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	45
        Max loop nest depth: 	6
        Additions: 		1370
        Multiplications: 	594
        Divisions: 		0
        Logical: 		0
        Reads: 			2914
        Writes: 		567
        Comparisons:		45
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest12.exe __orio_perftest12.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest12.exe  
Program Test Output: 
{'[2, 4, 0, 2, 6, 0, 1, 1, 4, 23, 0, 4, 1, 0, 1, 1, 0, 1]' : 0.090219}
{'[2, 4, 0, 2, 6, 0, 1, 1, 4, 23, 0, 4, 1, 0, 1, 1, 0, 1]' : 0.0896349}
{'[2, 4, 0, 2, 6, 0, 1, 1, 4, 23, 0, 4, 1, 0, 1, 1, 0, 1]' : 0.0877652}
{'[2, 4, 0, 2, 6, 0, 1, 1, 4, 23, 0, 4, 1, 0, 1, 1, 0, 1]' : 0.0871942}
{'[2, 4, 0, 2, 6, 0, 1, 1, 4, 23, 0, 4, 1, 0, 1, 1, 0, 1]' : 0.087323}
{'[2, 4, 0, 2, 6, 0, 1, 1, 4, 23, 0, 4, 1, 0, 1, 1, 0, 1]' : 0.0872331}
{'[2, 4, 0, 2, 6, 0, 1, 1, 4, 23, 0, 4, 1, 0, 1, 1, 0, 1]' : 0.0894229}
{'[2, 4, 0, 2, 6, 0, 1, 1, 4, 23, 0, 4, 1, 0, 1, 1, 0, 1]' : 0.091146}
{'[2, 4, 0, 2, 6, 0, 1, 1, 4, 23, 0, 4, 1, 0, 1, 1, 0, 1]' : 0.09113}
{'[2, 4, 0, 2, 6, 0, 1, 1, 4, 23, 0, 4, 1, 0, 1, 1, 0, 1]' : 0.0912149}
{'[2, 4, 0, 2, 6, 0, 1, 1, 4, 23, 0, 4, 1, 0, 1, 1, 0, 1]' : 0.0911419}
{'[2, 4, 0, 2, 6, 0, 1, 1, 4, 23, 0, 4, 1, 0, 1, 1, 0, 1]' : 0.091291}
{'[2, 4, 0, 2, 6, 0, 1, 1, 4, 23, 0, 4, 1, 0, 1, 1, 0, 1]' : 0.091187}
{'[2, 4, 0, 2, 6, 0, 1, 1, 4, 23, 0, 4, 1, 0, 1, 1, 0, 1]' : 0.091202}
{'[2, 4, 0, 2, 6, 0, 1, 1, 4, 23, 0, 4, 1, 0, 1, 1, 0, 1]' : 0.0910749}
{'[2, 4, 0, 2, 6, 0, 1, 1, 4, 23, 0, 4, 1, 0, 1, 1, 0, 1]' : 0.091172}
{'[2, 4, 0, 2, 6, 0, 1, 1, 4, 23, 0, 4, 1, 0, 1, 1, 0, 1]' : 0.0895331}
{'[2, 4, 0, 2, 6, 0, 1, 1, 4, 23, 0, 4, 1, 0, 1, 1, 0, 1]' : 0.0905621}
{'[2, 4, 0, 2, 6, 0, 1, 1, 4, 23, 0, 4, 1, 0, 1, 1, 0, 1]' : 0.091177}
{'[2, 4, 0, 2, 6, 0, 1, 1, 4, 23, 0, 4, 1, 0, 1, 1, 0, 1]' : 0.0910921}
{'[2, 4, 0, 2, 6, 0, 1, 1, 4, 23, 0, 4, 1, 0, 1, 1, 0, 1]' : 0.0912099}
{'[2, 4, 0, 2, 6, 0, 1, 1, 4, 23, 0, 4, 1, 0, 1, 1, 0, 1]' : 0.0911851}
{'[2, 4, 0, 2, 6, 0, 1, 1, 4, 23, 0, 4, 1, 0, 1, 1, 0, 1]' : 0.0916591}
{'[2, 4, 0, 2, 6, 0, 1, 1, 4, 23, 0, 4, 1, 0, 1, 1, 0, 1]' : 0.0912559}
{'[2, 4, 0, 2, 6, 0, 1, 1, 4, 23, 0, 4, 1, 0, 1, 1, 0, 1]' : 0.091146}
{'[2, 4, 0, 2, 6, 0, 1, 1, 4, 23, 0, 4, 1, 0, 1, 1, 0, 1]' : 0.0910978}
{'[2, 4, 0, 2, 6, 0, 1, 1, 4, 23, 0, 4, 1, 0, 1, 1, 0, 1]' : 0.0910721}
{'[2, 4, 0, 2, 6, 0, 1, 1, 4, 23, 0, 4, 1, 0, 1, 1, 0, 1]' : 0.0910571}
{'[2, 4, 0, 2, 6, 0, 1, 1, 4, 23, 0, 4, 1, 0, 1, 1, 0, 1]' : 0.091064}
{'[2, 4, 0, 2, 6, 0, 1, 1, 4, 23, 0, 4, 1, 0, 1, 1, 0, 1]' : 0.091099}

out:
 ["{'[2, 4, 0, 2, 6, 0, 1, 1, 4, 23, 0, 4, 1, 0, 1, 1, 0, 1]' : 0.090219}", "{'[2, 4, 0, 2, 6, 0, 1, 1, 4, 23, 0, 4, 1, 0, 1, 1, 0, 1]' : 0.0896349}", "{'[2, 4, 0, 2, 6, 0, 1, 1, 4, 23, 0, 4, 1, 0, 1, 1, 0, 1]' : 0.0877652}", "{'[2, 4, 0, 2, 6, 0, 1, 1, 4, 23, 0, 4, 1, 0, 1, 1, 0, 1]' : 0.0871942}", "{'[2, 4, 0, 2, 6, 0, 1, 1, 4, 23, 0, 4, 1, 0, 1, 1, 0, 1]' : 0.087323}", "{'[2, 4, 0, 2, 6, 0, 1, 1, 4, 23, 0, 4, 1, 0, 1, 1, 0, 1]' : 0.0872331}", "{'[2, 4, 0, 2, 6, 0, 1, 1, 4, 23, 0, 4, 1, 0, 1, 1, 0, 1]' : 0.0894229}", "{'[2, 4, 0, 2, 6, 0, 1, 1, 4, 23, 0, 4, 1, 0, 1, 1, 0, 1]' : 0.091146}", "{'[2, 4, 0, 2, 6, 0, 1, 1, 4, 23, 0, 4, 1, 0, 1, 1, 0, 1]' : 0.09113}", "{'[2, 4, 0, 2, 6, 0, 1, 1, 4, 23, 0, 4, 1, 0, 1, 1, 0, 1]' : 0.0912149}", "{'[2, 4, 0, 2, 6, 0, 1, 1, 4, 23, 0, 4, 1, 0, 1, 1, 0, 1]' : 0.0911419}", "{'[2, 4, 0, 2, 6, 0, 1, 1, 4, 23, 0, 4, 1, 0, 1, 1, 0, 1]' : 0.091291}", "{'[2, 4, 0, 2, 6, 0, 1, 1, 4, 23, 0, 4, 1, 0, 1, 1, 0, 1]' : 0.091187}", "{'[2, 4, 0, 2, 6, 0, 1, 1, 4, 23, 0, 4, 1, 0, 1, 1, 0, 1]' : 0.091202}", "{'[2, 4, 0, 2, 6, 0, 1, 1, 4, 23, 0, 4, 1, 0, 1, 1, 0, 1]' : 0.0910749}", "{'[2, 4, 0, 2, 6, 0, 1, 1, 4, 23, 0, 4, 1, 0, 1, 1, 0, 1]' : 0.091172}", "{'[2, 4, 0, 2, 6, 0, 1, 1, 4, 23, 0, 4, 1, 0, 1, 1, 0, 1]' : 0.0895331}", "{'[2, 4, 0, 2, 6, 0, 1, 1, 4, 23, 0, 4, 1, 0, 1, 1, 0, 1]' : 0.0905621}", "{'[2, 4, 0, 2, 6, 0, 1, 1, 4, 23, 0, 4, 1, 0, 1, 1, 0, 1]' : 0.091177}", "{'[2, 4, 0, 2, 6, 0, 1, 1, 4, 23, 0, 4, 1, 0, 1, 1, 0, 1]' : 0.0910921}", "{'[2, 4, 0, 2, 6, 0, 1, 1, 4, 23, 0, 4, 1, 0, 1, 1, 0, 1]' : 0.0912099}", "{'[2, 4, 0, 2, 6, 0, 1, 1, 4, 23, 0, 4, 1, 0, 1, 1, 0, 1]' : 0.0911851}", "{'[2, 4, 0, 2, 6, 0, 1, 1, 4, 23, 0, 4, 1, 0, 1, 1, 0, 1]' : 0.0916591}", "{'[2, 4, 0, 2, 6, 0, 1, 1, 4, 23, 0, 4, 1, 0, 1, 1, 0, 1]' : 0.0912559}", "{'[2, 4, 0, 2, 6, 0, 1, 1, 4, 23, 0, 4, 1, 0, 1, 1, 0, 1]' : 0.091146}", "{'[2, 4, 0, 2, 6, 0, 1, 1, 4, 23, 0, 4, 1, 0, 1, 1, 0, 1]' : 0.0910978}", "{'[2, 4, 0, 2, 6, 0, 1, 1, 4, 23, 0, 4, 1, 0, 1, 1, 0, 1]' : 0.0910721}", "{'[2, 4, 0, 2, 6, 0, 1, 1, 4, 23, 0, 4, 1, 0, 1, 1, 0, 1]' : 0.0910571}", "{'[2, 4, 0, 2, 6, 0, 1, 1, 4, 23, 0, 4, 1, 0, 1, 1, 0, 1]' : 0.091064}", "{'[2, 4, 0, 2, 6, 0, 1, 1, 4, 23, 0, 4, 1, 0, 1, 1, 0, 1]' : 0.091099}"]
returning from 'run': {'[2, 4, 0, 2, 6, 0, 1, 1, 4, 23, 0, 4, 1, 0, 1, 1, 0, 1]': ([0.090219, 0.0896349, 0.0877652, 0.0871942, 0.087323, 0.0872331, 0.0894229, 0.091146, 0.09113, 0.0912149, 0.0911419, 0.091291, 0.091187, 0.091202, 0.0910749, 0.091172, 0.0895331, 0.0905621, 0.091177, 0.0910921, 0.0912099, 0.0911851, 0.0916591, 0.0912559, 0.091146, 0.0910978, 0.0910721, 0.0910571, 0.091064, 0.091099], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 4, 0, 2, 6, 0, 1, 1, 4, 23, 0, 4, 1, 0, 1, 1, 0, 1]': ([0.090219, 0.0896349, 0.0877652, 0.0871942, 0.087323, 0.0872331, 0.0894229, 0.091146, 0.09113, 0.0912149, 0.0911419, 0.091291, 0.091187, 0.091202, 0.0910749, 0.091172, 0.0895331, 0.0905621, 0.091177, 0.0910921, 0.0912099, 0.0911851, 0.0916591, 0.0912559, 0.091146, 0.0910978, 0.0910721, 0.0910571, 0.091064, 0.091099], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		5421
        Multiplications: 	1650
        Divisions: 		0
        Logical: 		0
        Reads: 			8399
        Writes: 		879
        Comparisons:		15
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest13.exe __orio_perftest13.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest13.exe  
Program Test Output: 
{'[0, 0, 0, 6, 0, 3, 0, 0, 20, 0, 3, 18, 2, 0, 0, 0, 0, 0]' : 0.249159}
{'[0, 0, 0, 6, 0, 3, 0, 0, 20, 0, 3, 18, 2, 0, 0, 0, 0, 0]' : 0.230735}
{'[0, 0, 0, 6, 0, 3, 0, 0, 20, 0, 3, 18, 2, 0, 0, 0, 0, 0]' : 0.228768}
{'[0, 0, 0, 6, 0, 3, 0, 0, 20, 0, 3, 18, 2, 0, 0, 0, 0, 0]' : 0.225762}
{'[0, 0, 0, 6, 0, 3, 0, 0, 20, 0, 3, 18, 2, 0, 0, 0, 0, 0]' : 0.226259}
{'[0, 0, 0, 6, 0, 3, 0, 0, 20, 0, 3, 18, 2, 0, 0, 0, 0, 0]' : 0.230329}
{'[0, 0, 0, 6, 0, 3, 0, 0, 20, 0, 3, 18, 2, 0, 0, 0, 0, 0]' : 0.230336}
{'[0, 0, 0, 6, 0, 3, 0, 0, 20, 0, 3, 18, 2, 0, 0, 0, 0, 0]' : 0.229989}
{'[0, 0, 0, 6, 0, 3, 0, 0, 20, 0, 3, 18, 2, 0, 0, 0, 0, 0]' : 0.230678}
{'[0, 0, 0, 6, 0, 3, 0, 0, 20, 0, 3, 18, 2, 0, 0, 0, 0, 0]' : 0.229869}
{'[0, 0, 0, 6, 0, 3, 0, 0, 20, 0, 3, 18, 2, 0, 0, 0, 0, 0]' : 0.225593}
{'[0, 0, 0, 6, 0, 3, 0, 0, 20, 0, 3, 18, 2, 0, 0, 0, 0, 0]' : 0.227852}
{'[0, 0, 0, 6, 0, 3, 0, 0, 20, 0, 3, 18, 2, 0, 0, 0, 0, 0]' : 0.230465}
{'[0, 0, 0, 6, 0, 3, 0, 0, 20, 0, 3, 18, 2, 0, 0, 0, 0, 0]' : 0.230146}
{'[0, 0, 0, 6, 0, 3, 0, 0, 20, 0, 3, 18, 2, 0, 0, 0, 0, 0]' : 0.228226}
{'[0, 0, 0, 6, 0, 3, 0, 0, 20, 0, 3, 18, 2, 0, 0, 0, 0, 0]' : 0.226935}
{'[0, 0, 0, 6, 0, 3, 0, 0, 20, 0, 3, 18, 2, 0, 0, 0, 0, 0]' : 0.227074}
{'[0, 0, 0, 6, 0, 3, 0, 0, 20, 0, 3, 18, 2, 0, 0, 0, 0, 0]' : 0.22647}
{'[0, 0, 0, 6, 0, 3, 0, 0, 20, 0, 3, 18, 2, 0, 0, 0, 0, 0]' : 0.230103}
{'[0, 0, 0, 6, 0, 3, 0, 0, 20, 0, 3, 18, 2, 0, 0, 0, 0, 0]' : 0.228462}
{'[0, 0, 0, 6, 0, 3, 0, 0, 20, 0, 3, 18, 2, 0, 0, 0, 0, 0]' : 0.227465}
{'[0, 0, 0, 6, 0, 3, 0, 0, 20, 0, 3, 18, 2, 0, 0, 0, 0, 0]' : 0.226822}
{'[0, 0, 0, 6, 0, 3, 0, 0, 20, 0, 3, 18, 2, 0, 0, 0, 0, 0]' : 0.226213}
{'[0, 0, 0, 6, 0, 3, 0, 0, 20, 0, 3, 18, 2, 0, 0, 0, 0, 0]' : 0.224221}
{'[0, 0, 0, 6, 0, 3, 0, 0, 20, 0, 3, 18, 2, 0, 0, 0, 0, 0]' : 0.222757}
{'[0, 0, 0, 6, 0, 3, 0, 0, 20, 0, 3, 18, 2, 0, 0, 0, 0, 0]' : 0.22662}
{'[0, 0, 0, 6, 0, 3, 0, 0, 20, 0, 3, 18, 2, 0, 0, 0, 0, 0]' : 0.22675}
{'[0, 0, 0, 6, 0, 3, 0, 0, 20, 0, 3, 18, 2, 0, 0, 0, 0, 0]' : 0.226461}
{'[0, 0, 0, 6, 0, 3, 0, 0, 20, 0, 3, 18, 2, 0, 0, 0, 0, 0]' : 0.226696}
{'[0, 0, 0, 6, 0, 3, 0, 0, 20, 0, 3, 18, 2, 0, 0, 0, 0, 0]' : 0.227443}

out:
 ["{'[0, 0, 0, 6, 0, 3, 0, 0, 20, 0, 3, 18, 2, 0, 0, 0, 0, 0]' : 0.249159}", "{'[0, 0, 0, 6, 0, 3, 0, 0, 20, 0, 3, 18, 2, 0, 0, 0, 0, 0]' : 0.230735}", "{'[0, 0, 0, 6, 0, 3, 0, 0, 20, 0, 3, 18, 2, 0, 0, 0, 0, 0]' : 0.228768}", "{'[0, 0, 0, 6, 0, 3, 0, 0, 20, 0, 3, 18, 2, 0, 0, 0, 0, 0]' : 0.225762}", "{'[0, 0, 0, 6, 0, 3, 0, 0, 20, 0, 3, 18, 2, 0, 0, 0, 0, 0]' : 0.226259}", "{'[0, 0, 0, 6, 0, 3, 0, 0, 20, 0, 3, 18, 2, 0, 0, 0, 0, 0]' : 0.230329}", "{'[0, 0, 0, 6, 0, 3, 0, 0, 20, 0, 3, 18, 2, 0, 0, 0, 0, 0]' : 0.230336}", "{'[0, 0, 0, 6, 0, 3, 0, 0, 20, 0, 3, 18, 2, 0, 0, 0, 0, 0]' : 0.229989}", "{'[0, 0, 0, 6, 0, 3, 0, 0, 20, 0, 3, 18, 2, 0, 0, 0, 0, 0]' : 0.230678}", "{'[0, 0, 0, 6, 0, 3, 0, 0, 20, 0, 3, 18, 2, 0, 0, 0, 0, 0]' : 0.229869}", "{'[0, 0, 0, 6, 0, 3, 0, 0, 20, 0, 3, 18, 2, 0, 0, 0, 0, 0]' : 0.225593}", "{'[0, 0, 0, 6, 0, 3, 0, 0, 20, 0, 3, 18, 2, 0, 0, 0, 0, 0]' : 0.227852}", "{'[0, 0, 0, 6, 0, 3, 0, 0, 20, 0, 3, 18, 2, 0, 0, 0, 0, 0]' : 0.230465}", "{'[0, 0, 0, 6, 0, 3, 0, 0, 20, 0, 3, 18, 2, 0, 0, 0, 0, 0]' : 0.230146}", "{'[0, 0, 0, 6, 0, 3, 0, 0, 20, 0, 3, 18, 2, 0, 0, 0, 0, 0]' : 0.228226}", "{'[0, 0, 0, 6, 0, 3, 0, 0, 20, 0, 3, 18, 2, 0, 0, 0, 0, 0]' : 0.226935}", "{'[0, 0, 0, 6, 0, 3, 0, 0, 20, 0, 3, 18, 2, 0, 0, 0, 0, 0]' : 0.227074}", "{'[0, 0, 0, 6, 0, 3, 0, 0, 20, 0, 3, 18, 2, 0, 0, 0, 0, 0]' : 0.22647}", "{'[0, 0, 0, 6, 0, 3, 0, 0, 20, 0, 3, 18, 2, 0, 0, 0, 0, 0]' : 0.230103}", "{'[0, 0, 0, 6, 0, 3, 0, 0, 20, 0, 3, 18, 2, 0, 0, 0, 0, 0]' : 0.228462}", "{'[0, 0, 0, 6, 0, 3, 0, 0, 20, 0, 3, 18, 2, 0, 0, 0, 0, 0]' : 0.227465}", "{'[0, 0, 0, 6, 0, 3, 0, 0, 20, 0, 3, 18, 2, 0, 0, 0, 0, 0]' : 0.226822}", "{'[0, 0, 0, 6, 0, 3, 0, 0, 20, 0, 3, 18, 2, 0, 0, 0, 0, 0]' : 0.226213}", "{'[0, 0, 0, 6, 0, 3, 0, 0, 20, 0, 3, 18, 2, 0, 0, 0, 0, 0]' : 0.224221}", "{'[0, 0, 0, 6, 0, 3, 0, 0, 20, 0, 3, 18, 2, 0, 0, 0, 0, 0]' : 0.222757}", "{'[0, 0, 0, 6, 0, 3, 0, 0, 20, 0, 3, 18, 2, 0, 0, 0, 0, 0]' : 0.22662}", "{'[0, 0, 0, 6, 0, 3, 0, 0, 20, 0, 3, 18, 2, 0, 0, 0, 0, 0]' : 0.22675}", "{'[0, 0, 0, 6, 0, 3, 0, 0, 20, 0, 3, 18, 2, 0, 0, 0, 0, 0]' : 0.226461}", "{'[0, 0, 0, 6, 0, 3, 0, 0, 20, 0, 3, 18, 2, 0, 0, 0, 0, 0]' : 0.226696}", "{'[0, 0, 0, 6, 0, 3, 0, 0, 20, 0, 3, 18, 2, 0, 0, 0, 0, 0]' : 0.227443}"]
returning from 'run': {'[0, 0, 0, 6, 0, 3, 0, 0, 20, 0, 3, 18, 2, 0, 0, 0, 0, 0]': ([0.249159, 0.230735, 0.228768, 0.225762, 0.226259, 0.230329, 0.230336, 0.229989, 0.230678, 0.229869, 0.225593, 0.227852, 0.230465, 0.230146, 0.228226, 0.226935, 0.227074, 0.22647, 0.230103, 0.228462, 0.227465, 0.226822, 0.226213, 0.224221, 0.222757, 0.22662, 0.22675, 0.226461, 0.226696, 0.227443], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 0, 6, 0, 3, 0, 0, 20, 0, 3, 18, 2, 0, 0, 0, 0, 0]': ([0.249159, 0.230735, 0.228768, 0.225762, 0.226259, 0.230329, 0.230336, 0.229989, 0.230678, 0.229869, 0.225593, 0.227852, 0.230465, 0.230146, 0.228226, 0.226935, 0.227074, 0.22647, 0.230103, 0.228462, 0.227465, 0.226822, 0.226213, 0.224221, 0.222757, 0.22662, 0.22675, 0.226461, 0.226696, 0.227443], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		238
        Multiplications: 	58
        Divisions: 		0
        Logical: 		0
        Reads: 			502
        Writes: 		115
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest14.exe __orio_perftest14.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest14.exe  
Program Test Output: 
{'[0, 3, 6, 6, 1, 4, 1, 1, 23, 0, 17, 8, 0, 0, 0, 1, 1, 1]' : 0.239362}
{'[0, 3, 6, 6, 1, 4, 1, 1, 23, 0, 17, 8, 0, 0, 0, 1, 1, 1]' : 0.207841}
{'[0, 3, 6, 6, 1, 4, 1, 1, 23, 0, 17, 8, 0, 0, 0, 1, 1, 1]' : 0.214842}
{'[0, 3, 6, 6, 1, 4, 1, 1, 23, 0, 17, 8, 0, 0, 0, 1, 1, 1]' : 0.214876}
{'[0, 3, 6, 6, 1, 4, 1, 1, 23, 0, 17, 8, 0, 0, 0, 1, 1, 1]' : 0.214816}
{'[0, 3, 6, 6, 1, 4, 1, 1, 23, 0, 17, 8, 0, 0, 0, 1, 1, 1]' : 0.214809}
{'[0, 3, 6, 6, 1, 4, 1, 1, 23, 0, 17, 8, 0, 0, 0, 1, 1, 1]' : 0.214773}
{'[0, 3, 6, 6, 1, 4, 1, 1, 23, 0, 17, 8, 0, 0, 0, 1, 1, 1]' : 0.214869}
{'[0, 3, 6, 6, 1, 4, 1, 1, 23, 0, 17, 8, 0, 0, 0, 1, 1, 1]' : 0.215043}
{'[0, 3, 6, 6, 1, 4, 1, 1, 23, 0, 17, 8, 0, 0, 0, 1, 1, 1]' : 0.214853}
{'[0, 3, 6, 6, 1, 4, 1, 1, 23, 0, 17, 8, 0, 0, 0, 1, 1, 1]' : 0.214775}
{'[0, 3, 6, 6, 1, 4, 1, 1, 23, 0, 17, 8, 0, 0, 0, 1, 1, 1]' : 0.214916}
{'[0, 3, 6, 6, 1, 4, 1, 1, 23, 0, 17, 8, 0, 0, 0, 1, 1, 1]' : 0.214818}
{'[0, 3, 6, 6, 1, 4, 1, 1, 23, 0, 17, 8, 0, 0, 0, 1, 1, 1]' : 0.214854}
{'[0, 3, 6, 6, 1, 4, 1, 1, 23, 0, 17, 8, 0, 0, 0, 1, 1, 1]' : 0.210078}
{'[0, 3, 6, 6, 1, 4, 1, 1, 23, 0, 17, 8, 0, 0, 0, 1, 1, 1]' : 0.209366}
{'[0, 3, 6, 6, 1, 4, 1, 1, 23, 0, 17, 8, 0, 0, 0, 1, 1, 1]' : 0.214814}
{'[0, 3, 6, 6, 1, 4, 1, 1, 23, 0, 17, 8, 0, 0, 0, 1, 1, 1]' : 0.214968}
{'[0, 3, 6, 6, 1, 4, 1, 1, 23, 0, 17, 8, 0, 0, 0, 1, 1, 1]' : 0.211495}
{'[0, 3, 6, 6, 1, 4, 1, 1, 23, 0, 17, 8, 0, 0, 0, 1, 1, 1]' : 0.20482}
{'[0, 3, 6, 6, 1, 4, 1, 1, 23, 0, 17, 8, 0, 0, 0, 1, 1, 1]' : 0.206265}
{'[0, 3, 6, 6, 1, 4, 1, 1, 23, 0, 17, 8, 0, 0, 0, 1, 1, 1]' : 0.214866}
{'[0, 3, 6, 6, 1, 4, 1, 1, 23, 0, 17, 8, 0, 0, 0, 1, 1, 1]' : 0.214787}
{'[0, 3, 6, 6, 1, 4, 1, 1, 23, 0, 17, 8, 0, 0, 0, 1, 1, 1]' : 0.214962}
{'[0, 3, 6, 6, 1, 4, 1, 1, 23, 0, 17, 8, 0, 0, 0, 1, 1, 1]' : 0.214774}
{'[0, 3, 6, 6, 1, 4, 1, 1, 23, 0, 17, 8, 0, 0, 0, 1, 1, 1]' : 0.214896}
{'[0, 3, 6, 6, 1, 4, 1, 1, 23, 0, 17, 8, 0, 0, 0, 1, 1, 1]' : 0.214857}
{'[0, 3, 6, 6, 1, 4, 1, 1, 23, 0, 17, 8, 0, 0, 0, 1, 1, 1]' : 0.215075}
{'[0, 3, 6, 6, 1, 4, 1, 1, 23, 0, 17, 8, 0, 0, 0, 1, 1, 1]' : 0.214799}
{'[0, 3, 6, 6, 1, 4, 1, 1, 23, 0, 17, 8, 0, 0, 0, 1, 1, 1]' : 0.214823}

out:
 ["{'[0, 3, 6, 6, 1, 4, 1, 1, 23, 0, 17, 8, 0, 0, 0, 1, 1, 1]' : 0.239362}", "{'[0, 3, 6, 6, 1, 4, 1, 1, 23, 0, 17, 8, 0, 0, 0, 1, 1, 1]' : 0.207841}", "{'[0, 3, 6, 6, 1, 4, 1, 1, 23, 0, 17, 8, 0, 0, 0, 1, 1, 1]' : 0.214842}", "{'[0, 3, 6, 6, 1, 4, 1, 1, 23, 0, 17, 8, 0, 0, 0, 1, 1, 1]' : 0.214876}", "{'[0, 3, 6, 6, 1, 4, 1, 1, 23, 0, 17, 8, 0, 0, 0, 1, 1, 1]' : 0.214816}", "{'[0, 3, 6, 6, 1, 4, 1, 1, 23, 0, 17, 8, 0, 0, 0, 1, 1, 1]' : 0.214809}", "{'[0, 3, 6, 6, 1, 4, 1, 1, 23, 0, 17, 8, 0, 0, 0, 1, 1, 1]' : 0.214773}", "{'[0, 3, 6, 6, 1, 4, 1, 1, 23, 0, 17, 8, 0, 0, 0, 1, 1, 1]' : 0.214869}", "{'[0, 3, 6, 6, 1, 4, 1, 1, 23, 0, 17, 8, 0, 0, 0, 1, 1, 1]' : 0.215043}", "{'[0, 3, 6, 6, 1, 4, 1, 1, 23, 0, 17, 8, 0, 0, 0, 1, 1, 1]' : 0.214853}", "{'[0, 3, 6, 6, 1, 4, 1, 1, 23, 0, 17, 8, 0, 0, 0, 1, 1, 1]' : 0.214775}", "{'[0, 3, 6, 6, 1, 4, 1, 1, 23, 0, 17, 8, 0, 0, 0, 1, 1, 1]' : 0.214916}", "{'[0, 3, 6, 6, 1, 4, 1, 1, 23, 0, 17, 8, 0, 0, 0, 1, 1, 1]' : 0.214818}", "{'[0, 3, 6, 6, 1, 4, 1, 1, 23, 0, 17, 8, 0, 0, 0, 1, 1, 1]' : 0.214854}", "{'[0, 3, 6, 6, 1, 4, 1, 1, 23, 0, 17, 8, 0, 0, 0, 1, 1, 1]' : 0.210078}", "{'[0, 3, 6, 6, 1, 4, 1, 1, 23, 0, 17, 8, 0, 0, 0, 1, 1, 1]' : 0.209366}", "{'[0, 3, 6, 6, 1, 4, 1, 1, 23, 0, 17, 8, 0, 0, 0, 1, 1, 1]' : 0.214814}", "{'[0, 3, 6, 6, 1, 4, 1, 1, 23, 0, 17, 8, 0, 0, 0, 1, 1, 1]' : 0.214968}", "{'[0, 3, 6, 6, 1, 4, 1, 1, 23, 0, 17, 8, 0, 0, 0, 1, 1, 1]' : 0.211495}", "{'[0, 3, 6, 6, 1, 4, 1, 1, 23, 0, 17, 8, 0, 0, 0, 1, 1, 1]' : 0.20482}", "{'[0, 3, 6, 6, 1, 4, 1, 1, 23, 0, 17, 8, 0, 0, 0, 1, 1, 1]' : 0.206265}", "{'[0, 3, 6, 6, 1, 4, 1, 1, 23, 0, 17, 8, 0, 0, 0, 1, 1, 1]' : 0.214866}", "{'[0, 3, 6, 6, 1, 4, 1, 1, 23, 0, 17, 8, 0, 0, 0, 1, 1, 1]' : 0.214787}", "{'[0, 3, 6, 6, 1, 4, 1, 1, 23, 0, 17, 8, 0, 0, 0, 1, 1, 1]' : 0.214962}", "{'[0, 3, 6, 6, 1, 4, 1, 1, 23, 0, 17, 8, 0, 0, 0, 1, 1, 1]' : 0.214774}", "{'[0, 3, 6, 6, 1, 4, 1, 1, 23, 0, 17, 8, 0, 0, 0, 1, 1, 1]' : 0.214896}", "{'[0, 3, 6, 6, 1, 4, 1, 1, 23, 0, 17, 8, 0, 0, 0, 1, 1, 1]' : 0.214857}", "{'[0, 3, 6, 6, 1, 4, 1, 1, 23, 0, 17, 8, 0, 0, 0, 1, 1, 1]' : 0.215075}", "{'[0, 3, 6, 6, 1, 4, 1, 1, 23, 0, 17, 8, 0, 0, 0, 1, 1, 1]' : 0.214799}", "{'[0, 3, 6, 6, 1, 4, 1, 1, 23, 0, 17, 8, 0, 0, 0, 1, 1, 1]' : 0.214823}"]
returning from 'run': {'[0, 3, 6, 6, 1, 4, 1, 1, 23, 0, 17, 8, 0, 0, 0, 1, 1, 1]': ([0.239362, 0.207841, 0.214842, 0.214876, 0.214816, 0.214809, 0.214773, 0.214869, 0.215043, 0.214853, 0.214775, 0.214916, 0.214818, 0.214854, 0.210078, 0.209366, 0.214814, 0.214968, 0.211495, 0.20482, 0.206265, 0.214866, 0.214787, 0.214962, 0.214774, 0.214896, 0.214857, 0.215075, 0.214799, 0.214823], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 3, 6, 6, 1, 4, 1, 1, 23, 0, 17, 8, 0, 0, 0, 1, 1, 1]': ([0.239362, 0.207841, 0.214842, 0.214876, 0.214816, 0.214809, 0.214773, 0.214869, 0.215043, 0.214853, 0.214775, 0.214916, 0.214818, 0.214854, 0.210078, 0.209366, 0.214814, 0.214968, 0.211495, 0.20482, 0.206265, 0.214866, 0.214787, 0.214962, 0.214774, 0.214896, 0.214857, 0.215075, 0.214799, 0.214823], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	5
        Additions: 		1793
        Multiplications: 	836
        Divisions: 		0
        Logical: 		0
        Reads: 			3572
        Writes: 		636
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest15.exe __orio_perftest15.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest15.exe  
Program Test Output: 
{'[4, 3, 1, 0, 1, 3, 0, 0, 8, 9, 3, 0, 0, 0, 2, 1, 0, 0]' : 0.137234}
{'[4, 3, 1, 0, 1, 3, 0, 0, 8, 9, 3, 0, 0, 0, 2, 1, 0, 0]' : 0.137058}
{'[4, 3, 1, 0, 1, 3, 0, 0, 8, 9, 3, 0, 0, 0, 2, 1, 0, 0]' : 0.136978}
{'[4, 3, 1, 0, 1, 3, 0, 0, 8, 9, 3, 0, 0, 0, 2, 1, 0, 0]' : 0.137226}
{'[4, 3, 1, 0, 1, 3, 0, 0, 8, 9, 3, 0, 0, 0, 2, 1, 0, 0]' : 0.125507}
{'[4, 3, 1, 0, 1, 3, 0, 0, 8, 9, 3, 0, 0, 0, 2, 1, 0, 0]' : 0.125278}
{'[4, 3, 1, 0, 1, 3, 0, 0, 8, 9, 3, 0, 0, 0, 2, 1, 0, 0]' : 0.124616}
{'[4, 3, 1, 0, 1, 3, 0, 0, 8, 9, 3, 0, 0, 0, 2, 1, 0, 0]' : 0.124527}
{'[4, 3, 1, 0, 1, 3, 0, 0, 8, 9, 3, 0, 0, 0, 2, 1, 0, 0]' : 0.124408}
{'[4, 3, 1, 0, 1, 3, 0, 0, 8, 9, 3, 0, 0, 0, 2, 1, 0, 0]' : 0.124505}
{'[4, 3, 1, 0, 1, 3, 0, 0, 8, 9, 3, 0, 0, 0, 2, 1, 0, 0]' : 0.125098}
{'[4, 3, 1, 0, 1, 3, 0, 0, 8, 9, 3, 0, 0, 0, 2, 1, 0, 0]' : 0.12255}
{'[4, 3, 1, 0, 1, 3, 0, 0, 8, 9, 3, 0, 0, 0, 2, 1, 0, 0]' : 0.122047}
{'[4, 3, 1, 0, 1, 3, 0, 0, 8, 9, 3, 0, 0, 0, 2, 1, 0, 0]' : 0.122684}
{'[4, 3, 1, 0, 1, 3, 0, 0, 8, 9, 3, 0, 0, 0, 2, 1, 0, 0]' : 0.122026}
{'[4, 3, 1, 0, 1, 3, 0, 0, 8, 9, 3, 0, 0, 0, 2, 1, 0, 0]' : 0.1216}
{'[4, 3, 1, 0, 1, 3, 0, 0, 8, 9, 3, 0, 0, 0, 2, 1, 0, 0]' : 0.124305}
{'[4, 3, 1, 0, 1, 3, 0, 0, 8, 9, 3, 0, 0, 0, 2, 1, 0, 0]' : 0.124183}
{'[4, 3, 1, 0, 1, 3, 0, 0, 8, 9, 3, 0, 0, 0, 2, 1, 0, 0]' : 0.124531}
{'[4, 3, 1, 0, 1, 3, 0, 0, 8, 9, 3, 0, 0, 0, 2, 1, 0, 0]' : 0.124718}
{'[4, 3, 1, 0, 1, 3, 0, 0, 8, 9, 3, 0, 0, 0, 2, 1, 0, 0]' : 0.123788}
{'[4, 3, 1, 0, 1, 3, 0, 0, 8, 9, 3, 0, 0, 0, 2, 1, 0, 0]' : 0.12251}
{'[4, 3, 1, 0, 1, 3, 0, 0, 8, 9, 3, 0, 0, 0, 2, 1, 0, 0]' : 0.122325}
{'[4, 3, 1, 0, 1, 3, 0, 0, 8, 9, 3, 0, 0, 0, 2, 1, 0, 0]' : 0.123049}
{'[4, 3, 1, 0, 1, 3, 0, 0, 8, 9, 3, 0, 0, 0, 2, 1, 0, 0]' : 0.124654}
{'[4, 3, 1, 0, 1, 3, 0, 0, 8, 9, 3, 0, 0, 0, 2, 1, 0, 0]' : 0.124471}
{'[4, 3, 1, 0, 1, 3, 0, 0, 8, 9, 3, 0, 0, 0, 2, 1, 0, 0]' : 0.123956}
{'[4, 3, 1, 0, 1, 3, 0, 0, 8, 9, 3, 0, 0, 0, 2, 1, 0, 0]' : 0.123951}
{'[4, 3, 1, 0, 1, 3, 0, 0, 8, 9, 3, 0, 0, 0, 2, 1, 0, 0]' : 0.123747}
{'[4, 3, 1, 0, 1, 3, 0, 0, 8, 9, 3, 0, 0, 0, 2, 1, 0, 0]' : 0.124681}

out:
 ["{'[4, 3, 1, 0, 1, 3, 0, 0, 8, 9, 3, 0, 0, 0, 2, 1, 0, 0]' : 0.137234}", "{'[4, 3, 1, 0, 1, 3, 0, 0, 8, 9, 3, 0, 0, 0, 2, 1, 0, 0]' : 0.137058}", "{'[4, 3, 1, 0, 1, 3, 0, 0, 8, 9, 3, 0, 0, 0, 2, 1, 0, 0]' : 0.136978}", "{'[4, 3, 1, 0, 1, 3, 0, 0, 8, 9, 3, 0, 0, 0, 2, 1, 0, 0]' : 0.137226}", "{'[4, 3, 1, 0, 1, 3, 0, 0, 8, 9, 3, 0, 0, 0, 2, 1, 0, 0]' : 0.125507}", "{'[4, 3, 1, 0, 1, 3, 0, 0, 8, 9, 3, 0, 0, 0, 2, 1, 0, 0]' : 0.125278}", "{'[4, 3, 1, 0, 1, 3, 0, 0, 8, 9, 3, 0, 0, 0, 2, 1, 0, 0]' : 0.124616}", "{'[4, 3, 1, 0, 1, 3, 0, 0, 8, 9, 3, 0, 0, 0, 2, 1, 0, 0]' : 0.124527}", "{'[4, 3, 1, 0, 1, 3, 0, 0, 8, 9, 3, 0, 0, 0, 2, 1, 0, 0]' : 0.124408}", "{'[4, 3, 1, 0, 1, 3, 0, 0, 8, 9, 3, 0, 0, 0, 2, 1, 0, 0]' : 0.124505}", "{'[4, 3, 1, 0, 1, 3, 0, 0, 8, 9, 3, 0, 0, 0, 2, 1, 0, 0]' : 0.125098}", "{'[4, 3, 1, 0, 1, 3, 0, 0, 8, 9, 3, 0, 0, 0, 2, 1, 0, 0]' : 0.12255}", "{'[4, 3, 1, 0, 1, 3, 0, 0, 8, 9, 3, 0, 0, 0, 2, 1, 0, 0]' : 0.122047}", "{'[4, 3, 1, 0, 1, 3, 0, 0, 8, 9, 3, 0, 0, 0, 2, 1, 0, 0]' : 0.122684}", "{'[4, 3, 1, 0, 1, 3, 0, 0, 8, 9, 3, 0, 0, 0, 2, 1, 0, 0]' : 0.122026}", "{'[4, 3, 1, 0, 1, 3, 0, 0, 8, 9, 3, 0, 0, 0, 2, 1, 0, 0]' : 0.1216}", "{'[4, 3, 1, 0, 1, 3, 0, 0, 8, 9, 3, 0, 0, 0, 2, 1, 0, 0]' : 0.124305}", "{'[4, 3, 1, 0, 1, 3, 0, 0, 8, 9, 3, 0, 0, 0, 2, 1, 0, 0]' : 0.124183}", "{'[4, 3, 1, 0, 1, 3, 0, 0, 8, 9, 3, 0, 0, 0, 2, 1, 0, 0]' : 0.124531}", "{'[4, 3, 1, 0, 1, 3, 0, 0, 8, 9, 3, 0, 0, 0, 2, 1, 0, 0]' : 0.124718}", "{'[4, 3, 1, 0, 1, 3, 0, 0, 8, 9, 3, 0, 0, 0, 2, 1, 0, 0]' : 0.123788}", "{'[4, 3, 1, 0, 1, 3, 0, 0, 8, 9, 3, 0, 0, 0, 2, 1, 0, 0]' : 0.12251}", "{'[4, 3, 1, 0, 1, 3, 0, 0, 8, 9, 3, 0, 0, 0, 2, 1, 0, 0]' : 0.122325}", "{'[4, 3, 1, 0, 1, 3, 0, 0, 8, 9, 3, 0, 0, 0, 2, 1, 0, 0]' : 0.123049}", "{'[4, 3, 1, 0, 1, 3, 0, 0, 8, 9, 3, 0, 0, 0, 2, 1, 0, 0]' : 0.124654}", "{'[4, 3, 1, 0, 1, 3, 0, 0, 8, 9, 3, 0, 0, 0, 2, 1, 0, 0]' : 0.124471}", "{'[4, 3, 1, 0, 1, 3, 0, 0, 8, 9, 3, 0, 0, 0, 2, 1, 0, 0]' : 0.123956}", "{'[4, 3, 1, 0, 1, 3, 0, 0, 8, 9, 3, 0, 0, 0, 2, 1, 0, 0]' : 0.123951}", "{'[4, 3, 1, 0, 1, 3, 0, 0, 8, 9, 3, 0, 0, 0, 2, 1, 0, 0]' : 0.123747}", "{'[4, 3, 1, 0, 1, 3, 0, 0, 8, 9, 3, 0, 0, 0, 2, 1, 0, 0]' : 0.124681}"]
returning from 'run': {'[4, 3, 1, 0, 1, 3, 0, 0, 8, 9, 3, 0, 0, 0, 2, 1, 0, 0]': ([0.137234, 0.137058, 0.136978, 0.137226, 0.125507, 0.125278, 0.124616, 0.124527, 0.124408, 0.124505, 0.125098, 0.12255, 0.122047, 0.122684, 0.122026, 0.1216, 0.124305, 0.124183, 0.124531, 0.124718, 0.123788, 0.12251, 0.122325, 0.123049, 0.124654, 0.124471, 0.123956, 0.123951, 0.123747, 0.124681], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 3, 1, 0, 1, 3, 0, 0, 8, 9, 3, 0, 0, 0, 2, 1, 0, 0]': ([0.137234, 0.137058, 0.136978, 0.137226, 0.125507, 0.125278, 0.124616, 0.124527, 0.124408, 0.124505, 0.125098, 0.12255, 0.122047, 0.122684, 0.122026, 0.1216, 0.124305, 0.124183, 0.124531, 0.124718, 0.123788, 0.12251, 0.122325, 0.123049, 0.124654, 0.124471, 0.123956, 0.123951, 0.123747, 0.124681], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	52
        Max loop nest depth: 	4
        Additions: 		1855
        Multiplications: 	828
        Divisions: 		0
        Logical: 		0
        Reads: 			3720
        Writes: 		660
        Comparisons:		52
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest16.exe __orio_perftest16.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest16.exe  
Program Test Output: 
{'[0, 1, 0, 0, 1, 2, 0, 1, 13, 16, 20, 0, 0, 0, 0, 1, 1, 1]' : 0.167603}
{'[0, 1, 0, 0, 1, 2, 0, 1, 13, 16, 20, 0, 0, 0, 0, 1, 1, 1]' : 0.166949}
{'[0, 1, 0, 0, 1, 2, 0, 1, 13, 16, 20, 0, 0, 0, 0, 1, 1, 1]' : 0.165155}
{'[0, 1, 0, 0, 1, 2, 0, 1, 13, 16, 20, 0, 0, 0, 0, 1, 1, 1]' : 0.146715}
{'[0, 1, 0, 0, 1, 2, 0, 1, 13, 16, 20, 0, 0, 0, 0, 1, 1, 1]' : 0.146247}
{'[0, 1, 0, 0, 1, 2, 0, 1, 13, 16, 20, 0, 0, 0, 0, 1, 1, 1]' : 0.143079}
{'[0, 1, 0, 0, 1, 2, 0, 1, 13, 16, 20, 0, 0, 0, 0, 1, 1, 1]' : 0.142453}
{'[0, 1, 0, 0, 1, 2, 0, 1, 13, 16, 20, 0, 0, 0, 0, 1, 1, 1]' : 0.142692}
{'[0, 1, 0, 0, 1, 2, 0, 1, 13, 16, 20, 0, 0, 0, 0, 1, 1, 1]' : 0.142726}
{'[0, 1, 0, 0, 1, 2, 0, 1, 13, 16, 20, 0, 0, 0, 0, 1, 1, 1]' : 0.143579}
{'[0, 1, 0, 0, 1, 2, 0, 1, 13, 16, 20, 0, 0, 0, 0, 1, 1, 1]' : 0.146773}
{'[0, 1, 0, 0, 1, 2, 0, 1, 13, 16, 20, 0, 0, 0, 0, 1, 1, 1]' : 0.146711}
{'[0, 1, 0, 0, 1, 2, 0, 1, 13, 16, 20, 0, 0, 0, 0, 1, 1, 1]' : 0.145252}
{'[0, 1, 0, 0, 1, 2, 0, 1, 13, 16, 20, 0, 0, 0, 0, 1, 1, 1]' : 0.142756}
{'[0, 1, 0, 0, 1, 2, 0, 1, 13, 16, 20, 0, 0, 0, 0, 1, 1, 1]' : 0.143357}
{'[0, 1, 0, 0, 1, 2, 0, 1, 13, 16, 20, 0, 0, 0, 0, 1, 1, 1]' : 0.143092}
{'[0, 1, 0, 0, 1, 2, 0, 1, 13, 16, 20, 0, 0, 0, 0, 1, 1, 1]' : 0.14387}
{'[0, 1, 0, 0, 1, 2, 0, 1, 13, 16, 20, 0, 0, 0, 0, 1, 1, 1]' : 0.146748}
{'[0, 1, 0, 0, 1, 2, 0, 1, 13, 16, 20, 0, 0, 0, 0, 1, 1, 1]' : 0.146819}
{'[0, 1, 0, 0, 1, 2, 0, 1, 13, 16, 20, 0, 0, 0, 0, 1, 1, 1]' : 0.147116}
{'[0, 1, 0, 0, 1, 2, 0, 1, 13, 16, 20, 0, 0, 0, 0, 1, 1, 1]' : 0.146923}
{'[0, 1, 0, 0, 1, 2, 0, 1, 13, 16, 20, 0, 0, 0, 0, 1, 1, 1]' : 0.150694}
{'[0, 1, 0, 0, 1, 2, 0, 1, 13, 16, 20, 0, 0, 0, 0, 1, 1, 1]' : 0.150844}
{'[0, 1, 0, 0, 1, 2, 0, 1, 13, 16, 20, 0, 0, 0, 0, 1, 1, 1]' : 0.148855}
{'[0, 1, 0, 0, 1, 2, 0, 1, 13, 16, 20, 0, 0, 0, 0, 1, 1, 1]' : 0.146682}
{'[0, 1, 0, 0, 1, 2, 0, 1, 13, 16, 20, 0, 0, 0, 0, 1, 1, 1]' : 0.146801}
{'[0, 1, 0, 0, 1, 2, 0, 1, 13, 16, 20, 0, 0, 0, 0, 1, 1, 1]' : 0.146917}
{'[0, 1, 0, 0, 1, 2, 0, 1, 13, 16, 20, 0, 0, 0, 0, 1, 1, 1]' : 0.14677}
{'[0, 1, 0, 0, 1, 2, 0, 1, 13, 16, 20, 0, 0, 0, 0, 1, 1, 1]' : 0.147037}
{'[0, 1, 0, 0, 1, 2, 0, 1, 13, 16, 20, 0, 0, 0, 0, 1, 1, 1]' : 0.146862}

out:
 ["{'[0, 1, 0, 0, 1, 2, 0, 1, 13, 16, 20, 0, 0, 0, 0, 1, 1, 1]' : 0.167603}", "{'[0, 1, 0, 0, 1, 2, 0, 1, 13, 16, 20, 0, 0, 0, 0, 1, 1, 1]' : 0.166949}", "{'[0, 1, 0, 0, 1, 2, 0, 1, 13, 16, 20, 0, 0, 0, 0, 1, 1, 1]' : 0.165155}", "{'[0, 1, 0, 0, 1, 2, 0, 1, 13, 16, 20, 0, 0, 0, 0, 1, 1, 1]' : 0.146715}", "{'[0, 1, 0, 0, 1, 2, 0, 1, 13, 16, 20, 0, 0, 0, 0, 1, 1, 1]' : 0.146247}", "{'[0, 1, 0, 0, 1, 2, 0, 1, 13, 16, 20, 0, 0, 0, 0, 1, 1, 1]' : 0.143079}", "{'[0, 1, 0, 0, 1, 2, 0, 1, 13, 16, 20, 0, 0, 0, 0, 1, 1, 1]' : 0.142453}", "{'[0, 1, 0, 0, 1, 2, 0, 1, 13, 16, 20, 0, 0, 0, 0, 1, 1, 1]' : 0.142692}", "{'[0, 1, 0, 0, 1, 2, 0, 1, 13, 16, 20, 0, 0, 0, 0, 1, 1, 1]' : 0.142726}", "{'[0, 1, 0, 0, 1, 2, 0, 1, 13, 16, 20, 0, 0, 0, 0, 1, 1, 1]' : 0.143579}", "{'[0, 1, 0, 0, 1, 2, 0, 1, 13, 16, 20, 0, 0, 0, 0, 1, 1, 1]' : 0.146773}", "{'[0, 1, 0, 0, 1, 2, 0, 1, 13, 16, 20, 0, 0, 0, 0, 1, 1, 1]' : 0.146711}", "{'[0, 1, 0, 0, 1, 2, 0, 1, 13, 16, 20, 0, 0, 0, 0, 1, 1, 1]' : 0.145252}", "{'[0, 1, 0, 0, 1, 2, 0, 1, 13, 16, 20, 0, 0, 0, 0, 1, 1, 1]' : 0.142756}", "{'[0, 1, 0, 0, 1, 2, 0, 1, 13, 16, 20, 0, 0, 0, 0, 1, 1, 1]' : 0.143357}", "{'[0, 1, 0, 0, 1, 2, 0, 1, 13, 16, 20, 0, 0, 0, 0, 1, 1, 1]' : 0.143092}", "{'[0, 1, 0, 0, 1, 2, 0, 1, 13, 16, 20, 0, 0, 0, 0, 1, 1, 1]' : 0.14387}", "{'[0, 1, 0, 0, 1, 2, 0, 1, 13, 16, 20, 0, 0, 0, 0, 1, 1, 1]' : 0.146748}", "{'[0, 1, 0, 0, 1, 2, 0, 1, 13, 16, 20, 0, 0, 0, 0, 1, 1, 1]' : 0.146819}", "{'[0, 1, 0, 0, 1, 2, 0, 1, 13, 16, 20, 0, 0, 0, 0, 1, 1, 1]' : 0.147116}", "{'[0, 1, 0, 0, 1, 2, 0, 1, 13, 16, 20, 0, 0, 0, 0, 1, 1, 1]' : 0.146923}", "{'[0, 1, 0, 0, 1, 2, 0, 1, 13, 16, 20, 0, 0, 0, 0, 1, 1, 1]' : 0.150694}", "{'[0, 1, 0, 0, 1, 2, 0, 1, 13, 16, 20, 0, 0, 0, 0, 1, 1, 1]' : 0.150844}", "{'[0, 1, 0, 0, 1, 2, 0, 1, 13, 16, 20, 0, 0, 0, 0, 1, 1, 1]' : 0.148855}", "{'[0, 1, 0, 0, 1, 2, 0, 1, 13, 16, 20, 0, 0, 0, 0, 1, 1, 1]' : 0.146682}", "{'[0, 1, 0, 0, 1, 2, 0, 1, 13, 16, 20, 0, 0, 0, 0, 1, 1, 1]' : 0.146801}", "{'[0, 1, 0, 0, 1, 2, 0, 1, 13, 16, 20, 0, 0, 0, 0, 1, 1, 1]' : 0.146917}", "{'[0, 1, 0, 0, 1, 2, 0, 1, 13, 16, 20, 0, 0, 0, 0, 1, 1, 1]' : 0.14677}", "{'[0, 1, 0, 0, 1, 2, 0, 1, 13, 16, 20, 0, 0, 0, 0, 1, 1, 1]' : 0.147037}", "{'[0, 1, 0, 0, 1, 2, 0, 1, 13, 16, 20, 0, 0, 0, 0, 1, 1, 1]' : 0.146862}"]
returning from 'run': {'[0, 1, 0, 0, 1, 2, 0, 1, 13, 16, 20, 0, 0, 0, 0, 1, 1, 1]': ([0.167603, 0.166949, 0.165155, 0.146715, 0.146247, 0.143079, 0.142453, 0.142692, 0.142726, 0.143579, 0.146773, 0.146711, 0.145252, 0.142756, 0.143357, 0.143092, 0.14387, 0.146748, 0.146819, 0.147116, 0.146923, 0.150694, 0.150844, 0.148855, 0.146682, 0.146801, 0.146917, 0.14677, 0.147037, 0.146862], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 0, 0, 1, 2, 0, 1, 13, 16, 20, 0, 0, 0, 0, 1, 1, 1]': ([0.167603, 0.166949, 0.165155, 0.146715, 0.146247, 0.143079, 0.142453, 0.142692, 0.142726, 0.143579, 0.146773, 0.146711, 0.145252, 0.142756, 0.143357, 0.143092, 0.14387, 0.146748, 0.146819, 0.147116, 0.146923, 0.150694, 0.150844, 0.148855, 0.146682, 0.146801, 0.146917, 0.14677, 0.147037, 0.146862], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	164
        Max loop nest depth: 	6
        Additions: 		7346
        Multiplications: 	2340
        Divisions: 		0
        Logical: 		0
        Reads: 			12158
        Writes: 		1740
        Comparisons:		164
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest17.exe __orio_perftest17.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest17.exe  
Program Test Output: 
{'[4, 0, 3, 6, 2, 5, 1, 1, 28, 28, 29, 0, 0, 0, 1, 1, 0, 0]' : 0.290773}
{'[4, 0, 3, 6, 2, 5, 1, 1, 28, 28, 29, 0, 0, 0, 1, 1, 0, 0]' : 0.291807}
{'[4, 0, 3, 6, 2, 5, 1, 1, 28, 28, 29, 0, 0, 0, 1, 1, 0, 0]' : 0.289977}
{'[4, 0, 3, 6, 2, 5, 1, 1, 28, 28, 29, 0, 0, 0, 1, 1, 0, 0]' : 0.290066}
{'[4, 0, 3, 6, 2, 5, 1, 1, 28, 28, 29, 0, 0, 0, 1, 1, 0, 0]' : 0.290213}
{'[4, 0, 3, 6, 2, 5, 1, 1, 28, 28, 29, 0, 0, 0, 1, 1, 0, 0]' : 0.295763}
{'[4, 0, 3, 6, 2, 5, 1, 1, 28, 28, 29, 0, 0, 0, 1, 1, 0, 0]' : 0.29697}
{'[4, 0, 3, 6, 2, 5, 1, 1, 28, 28, 29, 0, 0, 0, 1, 1, 0, 0]' : 0.296495}
{'[4, 0, 3, 6, 2, 5, 1, 1, 28, 28, 29, 0, 0, 0, 1, 1, 0, 0]' : 0.296847}
{'[4, 0, 3, 6, 2, 5, 1, 1, 28, 28, 29, 0, 0, 0, 1, 1, 0, 0]' : 0.297195}
{'[4, 0, 3, 6, 2, 5, 1, 1, 28, 28, 29, 0, 0, 0, 1, 1, 0, 0]' : 0.297035}
{'[4, 0, 3, 6, 2, 5, 1, 1, 28, 28, 29, 0, 0, 0, 1, 1, 0, 0]' : 0.294852}
{'[4, 0, 3, 6, 2, 5, 1, 1, 28, 28, 29, 0, 0, 0, 1, 1, 0, 0]' : 0.294082}
{'[4, 0, 3, 6, 2, 5, 1, 1, 28, 28, 29, 0, 0, 0, 1, 1, 0, 0]' : 0.293048}
{'[4, 0, 3, 6, 2, 5, 1, 1, 28, 28, 29, 0, 0, 0, 1, 1, 0, 0]' : 0.296841}
{'[4, 0, 3, 6, 2, 5, 1, 1, 28, 28, 29, 0, 0, 0, 1, 1, 0, 0]' : 0.296863}
{'[4, 0, 3, 6, 2, 5, 1, 1, 28, 28, 29, 0, 0, 0, 1, 1, 0, 0]' : 0.297006}
{'[4, 0, 3, 6, 2, 5, 1, 1, 28, 28, 29, 0, 0, 0, 1, 1, 0, 0]' : 0.296045}
{'[4, 0, 3, 6, 2, 5, 1, 1, 28, 28, 29, 0, 0, 0, 1, 1, 0, 0]' : 0.296697}
{'[4, 0, 3, 6, 2, 5, 1, 1, 28, 28, 29, 0, 0, 0, 1, 1, 0, 0]' : 0.297144}
{'[4, 0, 3, 6, 2, 5, 1, 1, 28, 28, 29, 0, 0, 0, 1, 1, 0, 0]' : 0.295127}
{'[4, 0, 3, 6, 2, 5, 1, 1, 28, 28, 29, 0, 0, 0, 1, 1, 0, 0]' : 0.289852}
{'[4, 0, 3, 6, 2, 5, 1, 1, 28, 28, 29, 0, 0, 0, 1, 1, 0, 0]' : 0.295911}
{'[4, 0, 3, 6, 2, 5, 1, 1, 28, 28, 29, 0, 0, 0, 1, 1, 0, 0]' : 0.296543}
{'[4, 0, 3, 6, 2, 5, 1, 1, 28, 28, 29, 0, 0, 0, 1, 1, 0, 0]' : 0.295442}
{'[4, 0, 3, 6, 2, 5, 1, 1, 28, 28, 29, 0, 0, 0, 1, 1, 0, 0]' : 0.288202}
{'[4, 0, 3, 6, 2, 5, 1, 1, 28, 28, 29, 0, 0, 0, 1, 1, 0, 0]' : 0.290197}
{'[4, 0, 3, 6, 2, 5, 1, 1, 28, 28, 29, 0, 0, 0, 1, 1, 0, 0]' : 0.296743}
{'[4, 0, 3, 6, 2, 5, 1, 1, 28, 28, 29, 0, 0, 0, 1, 1, 0, 0]' : 0.293017}
{'[4, 0, 3, 6, 2, 5, 1, 1, 28, 28, 29, 0, 0, 0, 1, 1, 0, 0]' : 0.289748}

out:
 ["{'[4, 0, 3, 6, 2, 5, 1, 1, 28, 28, 29, 0, 0, 0, 1, 1, 0, 0]' : 0.290773}", "{'[4, 0, 3, 6, 2, 5, 1, 1, 28, 28, 29, 0, 0, 0, 1, 1, 0, 0]' : 0.291807}", "{'[4, 0, 3, 6, 2, 5, 1, 1, 28, 28, 29, 0, 0, 0, 1, 1, 0, 0]' : 0.289977}", "{'[4, 0, 3, 6, 2, 5, 1, 1, 28, 28, 29, 0, 0, 0, 1, 1, 0, 0]' : 0.290066}", "{'[4, 0, 3, 6, 2, 5, 1, 1, 28, 28, 29, 0, 0, 0, 1, 1, 0, 0]' : 0.290213}", "{'[4, 0, 3, 6, 2, 5, 1, 1, 28, 28, 29, 0, 0, 0, 1, 1, 0, 0]' : 0.295763}", "{'[4, 0, 3, 6, 2, 5, 1, 1, 28, 28, 29, 0, 0, 0, 1, 1, 0, 0]' : 0.29697}", "{'[4, 0, 3, 6, 2, 5, 1, 1, 28, 28, 29, 0, 0, 0, 1, 1, 0, 0]' : 0.296495}", "{'[4, 0, 3, 6, 2, 5, 1, 1, 28, 28, 29, 0, 0, 0, 1, 1, 0, 0]' : 0.296847}", "{'[4, 0, 3, 6, 2, 5, 1, 1, 28, 28, 29, 0, 0, 0, 1, 1, 0, 0]' : 0.297195}", "{'[4, 0, 3, 6, 2, 5, 1, 1, 28, 28, 29, 0, 0, 0, 1, 1, 0, 0]' : 0.297035}", "{'[4, 0, 3, 6, 2, 5, 1, 1, 28, 28, 29, 0, 0, 0, 1, 1, 0, 0]' : 0.294852}", "{'[4, 0, 3, 6, 2, 5, 1, 1, 28, 28, 29, 0, 0, 0, 1, 1, 0, 0]' : 0.294082}", "{'[4, 0, 3, 6, 2, 5, 1, 1, 28, 28, 29, 0, 0, 0, 1, 1, 0, 0]' : 0.293048}", "{'[4, 0, 3, 6, 2, 5, 1, 1, 28, 28, 29, 0, 0, 0, 1, 1, 0, 0]' : 0.296841}", "{'[4, 0, 3, 6, 2, 5, 1, 1, 28, 28, 29, 0, 0, 0, 1, 1, 0, 0]' : 0.296863}", "{'[4, 0, 3, 6, 2, 5, 1, 1, 28, 28, 29, 0, 0, 0, 1, 1, 0, 0]' : 0.297006}", "{'[4, 0, 3, 6, 2, 5, 1, 1, 28, 28, 29, 0, 0, 0, 1, 1, 0, 0]' : 0.296045}", "{'[4, 0, 3, 6, 2, 5, 1, 1, 28, 28, 29, 0, 0, 0, 1, 1, 0, 0]' : 0.296697}", "{'[4, 0, 3, 6, 2, 5, 1, 1, 28, 28, 29, 0, 0, 0, 1, 1, 0, 0]' : 0.297144}", "{'[4, 0, 3, 6, 2, 5, 1, 1, 28, 28, 29, 0, 0, 0, 1, 1, 0, 0]' : 0.295127}", "{'[4, 0, 3, 6, 2, 5, 1, 1, 28, 28, 29, 0, 0, 0, 1, 1, 0, 0]' : 0.289852}", "{'[4, 0, 3, 6, 2, 5, 1, 1, 28, 28, 29, 0, 0, 0, 1, 1, 0, 0]' : 0.295911}", "{'[4, 0, 3, 6, 2, 5, 1, 1, 28, 28, 29, 0, 0, 0, 1, 1, 0, 0]' : 0.296543}", "{'[4, 0, 3, 6, 2, 5, 1, 1, 28, 28, 29, 0, 0, 0, 1, 1, 0, 0]' : 0.295442}", "{'[4, 0, 3, 6, 2, 5, 1, 1, 28, 28, 29, 0, 0, 0, 1, 1, 0, 0]' : 0.288202}", "{'[4, 0, 3, 6, 2, 5, 1, 1, 28, 28, 29, 0, 0, 0, 1, 1, 0, 0]' : 0.290197}", "{'[4, 0, 3, 6, 2, 5, 1, 1, 28, 28, 29, 0, 0, 0, 1, 1, 0, 0]' : 0.296743}", "{'[4, 0, 3, 6, 2, 5, 1, 1, 28, 28, 29, 0, 0, 0, 1, 1, 0, 0]' : 0.293017}", "{'[4, 0, 3, 6, 2, 5, 1, 1, 28, 28, 29, 0, 0, 0, 1, 1, 0, 0]' : 0.289748}"]
returning from 'run': {'[4, 0, 3, 6, 2, 5, 1, 1, 28, 28, 29, 0, 0, 0, 1, 1, 0, 0]': ([0.290773, 0.291807, 0.289977, 0.290066, 0.290213, 0.295763, 0.29697, 0.296495, 0.296847, 0.297195, 0.297035, 0.294852, 0.294082, 0.293048, 0.296841, 0.296863, 0.297006, 0.296045, 0.296697, 0.297144, 0.295127, 0.289852, 0.295911, 0.296543, 0.295442, 0.288202, 0.290197, 0.296743, 0.293017, 0.289748], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 0, 3, 6, 2, 5, 1, 1, 28, 28, 29, 0, 0, 0, 1, 1, 0, 0]': ([0.290773, 0.291807, 0.289977, 0.290066, 0.290213, 0.295763, 0.29697, 0.296495, 0.296847, 0.297195, 0.297035, 0.294852, 0.294082, 0.293048, 0.296841, 0.296863, 0.297006, 0.296045, 0.296697, 0.297144, 0.295127, 0.289852, 0.295911, 0.296543, 0.295442, 0.288202, 0.290197, 0.296743, 0.293017, 0.289748], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	4
        Additions: 		190
        Multiplications: 	66
        Divisions: 		0
        Logical: 		0
        Reads: 			382
        Writes: 		64
        Comparisons:		9
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest18.exe __orio_perftest18.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest18.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest18.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest18.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest18.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	4
        Additions: 		1594
        Multiplications: 	702
        Divisions: 		0
        Logical: 		0
        Reads: 			3046
        Writes: 		505
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest19.exe __orio_perftest19.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest19.exe  
Program Test Output: 
{'[1, 0, 0, 0, 1, 1, 1, 1, 13, 0, 29, 29, 1, 0, 1, 1, 0, 1]' : 0.117352}
{'[1, 0, 0, 0, 1, 1, 1, 1, 13, 0, 29, 29, 1, 0, 1, 1, 0, 1]' : 0.117363}
{'[1, 0, 0, 0, 1, 1, 1, 1, 13, 0, 29, 29, 1, 0, 1, 1, 0, 1]' : 0.117344}
{'[1, 0, 0, 0, 1, 1, 1, 1, 13, 0, 29, 29, 1, 0, 1, 1, 0, 1]' : 0.103932}
{'[1, 0, 0, 0, 1, 1, 1, 1, 13, 0, 29, 29, 1, 0, 1, 1, 0, 1]' : 0.099685}
{'[1, 0, 0, 0, 1, 1, 1, 1, 13, 0, 29, 29, 1, 0, 1, 1, 0, 1]' : 0.099937}
{'[1, 0, 0, 0, 1, 1, 1, 1, 13, 0, 29, 29, 1, 0, 1, 1, 0, 1]' : 0.100051}
{'[1, 0, 0, 0, 1, 1, 1, 1, 13, 0, 29, 29, 1, 0, 1, 1, 0, 1]' : 0.100041}
{'[1, 0, 0, 0, 1, 1, 1, 1, 13, 0, 29, 29, 1, 0, 1, 1, 0, 1]' : 0.099586}
{'[1, 0, 0, 0, 1, 1, 1, 1, 13, 0, 29, 29, 1, 0, 1, 1, 0, 1]' : 0.0996201}
{'[1, 0, 0, 0, 1, 1, 1, 1, 13, 0, 29, 29, 1, 0, 1, 1, 0, 1]' : 0.09951}
{'[1, 0, 0, 0, 1, 1, 1, 1, 13, 0, 29, 29, 1, 0, 1, 1, 0, 1]' : 0.0996759}
{'[1, 0, 0, 0, 1, 1, 1, 1, 13, 0, 29, 29, 1, 0, 1, 1, 0, 1]' : 0.0999298}
{'[1, 0, 0, 0, 1, 1, 1, 1, 13, 0, 29, 29, 1, 0, 1, 1, 0, 1]' : 0.0995891}
{'[1, 0, 0, 0, 1, 1, 1, 1, 13, 0, 29, 29, 1, 0, 1, 1, 0, 1]' : 0.099582}
{'[1, 0, 0, 0, 1, 1, 1, 1, 13, 0, 29, 29, 1, 0, 1, 1, 0, 1]' : 0.100194}
{'[1, 0, 0, 0, 1, 1, 1, 1, 13, 0, 29, 29, 1, 0, 1, 1, 0, 1]' : 0.0995791}
{'[1, 0, 0, 0, 1, 1, 1, 1, 13, 0, 29, 29, 1, 0, 1, 1, 0, 1]' : 0.0999088}
{'[1, 0, 0, 0, 1, 1, 1, 1, 13, 0, 29, 29, 1, 0, 1, 1, 0, 1]' : 0.099606}
{'[1, 0, 0, 0, 1, 1, 1, 1, 13, 0, 29, 29, 1, 0, 1, 1, 0, 1]' : 0.099602}
{'[1, 0, 0, 0, 1, 1, 1, 1, 13, 0, 29, 29, 1, 0, 1, 1, 0, 1]' : 0.099591}
{'[1, 0, 0, 0, 1, 1, 1, 1, 13, 0, 29, 29, 1, 0, 1, 1, 0, 1]' : 0.0996361}
{'[1, 0, 0, 0, 1, 1, 1, 1, 13, 0, 29, 29, 1, 0, 1, 1, 0, 1]' : 0.0996811}
{'[1, 0, 0, 0, 1, 1, 1, 1, 13, 0, 29, 29, 1, 0, 1, 1, 0, 1]' : 0.099611}
{'[1, 0, 0, 0, 1, 1, 1, 1, 13, 0, 29, 29, 1, 0, 1, 1, 0, 1]' : 0.0996039}
{'[1, 0, 0, 0, 1, 1, 1, 1, 13, 0, 29, 29, 1, 0, 1, 1, 0, 1]' : 0.099577}
{'[1, 0, 0, 0, 1, 1, 1, 1, 13, 0, 29, 29, 1, 0, 1, 1, 0, 1]' : 0.099679}
{'[1, 0, 0, 0, 1, 1, 1, 1, 13, 0, 29, 29, 1, 0, 1, 1, 0, 1]' : 0.0999391}
{'[1, 0, 0, 0, 1, 1, 1, 1, 13, 0, 29, 29, 1, 0, 1, 1, 0, 1]' : 0.0995591}
{'[1, 0, 0, 0, 1, 1, 1, 1, 13, 0, 29, 29, 1, 0, 1, 1, 0, 1]' : 0.099628}

out:
 ["{'[1, 0, 0, 0, 1, 1, 1, 1, 13, 0, 29, 29, 1, 0, 1, 1, 0, 1]' : 0.117352}", "{'[1, 0, 0, 0, 1, 1, 1, 1, 13, 0, 29, 29, 1, 0, 1, 1, 0, 1]' : 0.117363}", "{'[1, 0, 0, 0, 1, 1, 1, 1, 13, 0, 29, 29, 1, 0, 1, 1, 0, 1]' : 0.117344}", "{'[1, 0, 0, 0, 1, 1, 1, 1, 13, 0, 29, 29, 1, 0, 1, 1, 0, 1]' : 0.103932}", "{'[1, 0, 0, 0, 1, 1, 1, 1, 13, 0, 29, 29, 1, 0, 1, 1, 0, 1]' : 0.099685}", "{'[1, 0, 0, 0, 1, 1, 1, 1, 13, 0, 29, 29, 1, 0, 1, 1, 0, 1]' : 0.099937}", "{'[1, 0, 0, 0, 1, 1, 1, 1, 13, 0, 29, 29, 1, 0, 1, 1, 0, 1]' : 0.100051}", "{'[1, 0, 0, 0, 1, 1, 1, 1, 13, 0, 29, 29, 1, 0, 1, 1, 0, 1]' : 0.100041}", "{'[1, 0, 0, 0, 1, 1, 1, 1, 13, 0, 29, 29, 1, 0, 1, 1, 0, 1]' : 0.099586}", "{'[1, 0, 0, 0, 1, 1, 1, 1, 13, 0, 29, 29, 1, 0, 1, 1, 0, 1]' : 0.0996201}", "{'[1, 0, 0, 0, 1, 1, 1, 1, 13, 0, 29, 29, 1, 0, 1, 1, 0, 1]' : 0.09951}", "{'[1, 0, 0, 0, 1, 1, 1, 1, 13, 0, 29, 29, 1, 0, 1, 1, 0, 1]' : 0.0996759}", "{'[1, 0, 0, 0, 1, 1, 1, 1, 13, 0, 29, 29, 1, 0, 1, 1, 0, 1]' : 0.0999298}", "{'[1, 0, 0, 0, 1, 1, 1, 1, 13, 0, 29, 29, 1, 0, 1, 1, 0, 1]' : 0.0995891}", "{'[1, 0, 0, 0, 1, 1, 1, 1, 13, 0, 29, 29, 1, 0, 1, 1, 0, 1]' : 0.099582}", "{'[1, 0, 0, 0, 1, 1, 1, 1, 13, 0, 29, 29, 1, 0, 1, 1, 0, 1]' : 0.100194}", "{'[1, 0, 0, 0, 1, 1, 1, 1, 13, 0, 29, 29, 1, 0, 1, 1, 0, 1]' : 0.0995791}", "{'[1, 0, 0, 0, 1, 1, 1, 1, 13, 0, 29, 29, 1, 0, 1, 1, 0, 1]' : 0.0999088}", "{'[1, 0, 0, 0, 1, 1, 1, 1, 13, 0, 29, 29, 1, 0, 1, 1, 0, 1]' : 0.099606}", "{'[1, 0, 0, 0, 1, 1, 1, 1, 13, 0, 29, 29, 1, 0, 1, 1, 0, 1]' : 0.099602}", "{'[1, 0, 0, 0, 1, 1, 1, 1, 13, 0, 29, 29, 1, 0, 1, 1, 0, 1]' : 0.099591}", "{'[1, 0, 0, 0, 1, 1, 1, 1, 13, 0, 29, 29, 1, 0, 1, 1, 0, 1]' : 0.0996361}", "{'[1, 0, 0, 0, 1, 1, 1, 1, 13, 0, 29, 29, 1, 0, 1, 1, 0, 1]' : 0.0996811}", "{'[1, 0, 0, 0, 1, 1, 1, 1, 13, 0, 29, 29, 1, 0, 1, 1, 0, 1]' : 0.099611}", "{'[1, 0, 0, 0, 1, 1, 1, 1, 13, 0, 29, 29, 1, 0, 1, 1, 0, 1]' : 0.0996039}", "{'[1, 0, 0, 0, 1, 1, 1, 1, 13, 0, 29, 29, 1, 0, 1, 1, 0, 1]' : 0.099577}", "{'[1, 0, 0, 0, 1, 1, 1, 1, 13, 0, 29, 29, 1, 0, 1, 1, 0, 1]' : 0.099679}", "{'[1, 0, 0, 0, 1, 1, 1, 1, 13, 0, 29, 29, 1, 0, 1, 1, 0, 1]' : 0.0999391}", "{'[1, 0, 0, 0, 1, 1, 1, 1, 13, 0, 29, 29, 1, 0, 1, 1, 0, 1]' : 0.0995591}", "{'[1, 0, 0, 0, 1, 1, 1, 1, 13, 0, 29, 29, 1, 0, 1, 1, 0, 1]' : 0.099628}"]
returning from 'run': {'[1, 0, 0, 0, 1, 1, 1, 1, 13, 0, 29, 29, 1, 0, 1, 1, 0, 1]': ([0.117352, 0.117363, 0.117344, 0.103932, 0.099685, 0.099937, 0.100051, 0.100041, 0.099586, 0.0996201, 0.09951, 0.0996759, 0.0999298, 0.0995891, 0.099582, 0.100194, 0.0995791, 0.0999088, 0.099606, 0.099602, 0.099591, 0.0996361, 0.0996811, 0.099611, 0.0996039, 0.099577, 0.099679, 0.0999391, 0.0995591, 0.099628], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 0, 0, 1, 1, 1, 1, 13, 0, 29, 29, 1, 0, 1, 1, 0, 1]': ([0.117352, 0.117363, 0.117344, 0.103932, 0.099685, 0.099937, 0.100051, 0.100041, 0.099586, 0.0996201, 0.09951, 0.0996759, 0.0999298, 0.0995891, 0.099582, 0.100194, 0.0995791, 0.0999088, 0.099606, 0.099602, 0.099591, 0.0996361, 0.0996811, 0.099611, 0.0996039, 0.099577, 0.099679, 0.0999391, 0.0995591, 0.099628], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	57
        Max loop nest depth: 	5
        Additions: 		5622
        Multiplications: 	2664
        Divisions: 		0
        Logical: 		0
        Reads: 			10729
        Writes: 		1774
        Comparisons:		57
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest20.exe __orio_perftest20.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest20.exe  
Program Test Output: 
{'[0, 1, 2, 6, 4, 6, 1, 0, 5, 27, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.114825}
{'[0, 1, 2, 6, 4, 6, 1, 0, 5, 27, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.112162}
{'[0, 1, 2, 6, 4, 6, 1, 0, 5, 27, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.110248}
{'[0, 1, 2, 6, 4, 6, 1, 0, 5, 27, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.111869}
{'[0, 1, 2, 6, 4, 6, 1, 0, 5, 27, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.11206}
{'[0, 1, 2, 6, 4, 6, 1, 0, 5, 27, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.112112}
{'[0, 1, 2, 6, 4, 6, 1, 0, 5, 27, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.112309}
{'[0, 1, 2, 6, 4, 6, 1, 0, 5, 27, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.111887}
{'[0, 1, 2, 6, 4, 6, 1, 0, 5, 27, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.111911}
{'[0, 1, 2, 6, 4, 6, 1, 0, 5, 27, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.114709}
{'[0, 1, 2, 6, 4, 6, 1, 0, 5, 27, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.112069}
{'[0, 1, 2, 6, 4, 6, 1, 0, 5, 27, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.112176}
{'[0, 1, 2, 6, 4, 6, 1, 0, 5, 27, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.111973}
{'[0, 1, 2, 6, 4, 6, 1, 0, 5, 27, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.112106}
{'[0, 1, 2, 6, 4, 6, 1, 0, 5, 27, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.112102}
{'[0, 1, 2, 6, 4, 6, 1, 0, 5, 27, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.112072}
{'[0, 1, 2, 6, 4, 6, 1, 0, 5, 27, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.112151}
{'[0, 1, 2, 6, 4, 6, 1, 0, 5, 27, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.112145}
{'[0, 1, 2, 6, 4, 6, 1, 0, 5, 27, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.114678}
{'[0, 1, 2, 6, 4, 6, 1, 0, 5, 27, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.112079}
{'[0, 1, 2, 6, 4, 6, 1, 0, 5, 27, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.112007}
{'[0, 1, 2, 6, 4, 6, 1, 0, 5, 27, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.111959}
{'[0, 1, 2, 6, 4, 6, 1, 0, 5, 27, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.112096}
{'[0, 1, 2, 6, 4, 6, 1, 0, 5, 27, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.112221}
{'[0, 1, 2, 6, 4, 6, 1, 0, 5, 27, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.112389}
{'[0, 1, 2, 6, 4, 6, 1, 0, 5, 27, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.112128}
{'[0, 1, 2, 6, 4, 6, 1, 0, 5, 27, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.112245}
{'[0, 1, 2, 6, 4, 6, 1, 0, 5, 27, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.11224}
{'[0, 1, 2, 6, 4, 6, 1, 0, 5, 27, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.112078}
{'[0, 1, 2, 6, 4, 6, 1, 0, 5, 27, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.112183}

out:
 ["{'[0, 1, 2, 6, 4, 6, 1, 0, 5, 27, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.114825}", "{'[0, 1, 2, 6, 4, 6, 1, 0, 5, 27, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.112162}", "{'[0, 1, 2, 6, 4, 6, 1, 0, 5, 27, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.110248}", "{'[0, 1, 2, 6, 4, 6, 1, 0, 5, 27, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.111869}", "{'[0, 1, 2, 6, 4, 6, 1, 0, 5, 27, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.11206}", "{'[0, 1, 2, 6, 4, 6, 1, 0, 5, 27, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.112112}", "{'[0, 1, 2, 6, 4, 6, 1, 0, 5, 27, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.112309}", "{'[0, 1, 2, 6, 4, 6, 1, 0, 5, 27, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.111887}", "{'[0, 1, 2, 6, 4, 6, 1, 0, 5, 27, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.111911}", "{'[0, 1, 2, 6, 4, 6, 1, 0, 5, 27, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.114709}", "{'[0, 1, 2, 6, 4, 6, 1, 0, 5, 27, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.112069}", "{'[0, 1, 2, 6, 4, 6, 1, 0, 5, 27, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.112176}", "{'[0, 1, 2, 6, 4, 6, 1, 0, 5, 27, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.111973}", "{'[0, 1, 2, 6, 4, 6, 1, 0, 5, 27, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.112106}", "{'[0, 1, 2, 6, 4, 6, 1, 0, 5, 27, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.112102}", "{'[0, 1, 2, 6, 4, 6, 1, 0, 5, 27, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.112072}", "{'[0, 1, 2, 6, 4, 6, 1, 0, 5, 27, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.112151}", "{'[0, 1, 2, 6, 4, 6, 1, 0, 5, 27, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.112145}", "{'[0, 1, 2, 6, 4, 6, 1, 0, 5, 27, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.114678}", "{'[0, 1, 2, 6, 4, 6, 1, 0, 5, 27, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.112079}", "{'[0, 1, 2, 6, 4, 6, 1, 0, 5, 27, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.112007}", "{'[0, 1, 2, 6, 4, 6, 1, 0, 5, 27, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.111959}", "{'[0, 1, 2, 6, 4, 6, 1, 0, 5, 27, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.112096}", "{'[0, 1, 2, 6, 4, 6, 1, 0, 5, 27, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.112221}", "{'[0, 1, 2, 6, 4, 6, 1, 0, 5, 27, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.112389}", "{'[0, 1, 2, 6, 4, 6, 1, 0, 5, 27, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.112128}", "{'[0, 1, 2, 6, 4, 6, 1, 0, 5, 27, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.112245}", "{'[0, 1, 2, 6, 4, 6, 1, 0, 5, 27, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.11224}", "{'[0, 1, 2, 6, 4, 6, 1, 0, 5, 27, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.112078}", "{'[0, 1, 2, 6, 4, 6, 1, 0, 5, 27, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.112183}"]
returning from 'run': {'[0, 1, 2, 6, 4, 6, 1, 0, 5, 27, 0, 26, 1, 1, 0, 1, 1, 0]': ([0.114825, 0.112162, 0.110248, 0.111869, 0.11206, 0.112112, 0.112309, 0.111887, 0.111911, 0.114709, 0.112069, 0.112176, 0.111973, 0.112106, 0.112102, 0.112072, 0.112151, 0.112145, 0.114678, 0.112079, 0.112007, 0.111959, 0.112096, 0.112221, 0.112389, 0.112128, 0.112245, 0.11224, 0.112078, 0.112183], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 2, 6, 4, 6, 1, 0, 5, 27, 0, 26, 1, 1, 0, 1, 1, 0]': ([0.114825, 0.112162, 0.110248, 0.111869, 0.11206, 0.112112, 0.112309, 0.111887, 0.111911, 0.114709, 0.112069, 0.112176, 0.111973, 0.112106, 0.112102, 0.112072, 0.112151, 0.112145, 0.114678, 0.112079, 0.112007, 0.111959, 0.112096, 0.112221, 0.112389, 0.112128, 0.112245, 0.11224, 0.112078, 0.112183], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	5
        Additions: 		4861
        Multiplications: 	2378
        Divisions: 		0
        Logical: 		0
        Reads: 			9173
        Writes: 		1497
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest21.exe __orio_perftest21.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest21.exe  
Program Test Output: 
{'[0, 0, 6, 2, 6, 6, 0, 0, 28, 27, 6, 0, 0, 0, 2, 1, 1, 1]' : 0.142545}
{'[0, 0, 6, 2, 6, 6, 0, 0, 28, 27, 6, 0, 0, 0, 2, 1, 1, 1]' : 0.142549}
{'[0, 0, 6, 2, 6, 6, 0, 0, 28, 27, 6, 0, 0, 0, 2, 1, 1, 1]' : 0.142546}
{'[0, 0, 6, 2, 6, 6, 0, 0, 28, 27, 6, 0, 0, 0, 2, 1, 1, 1]' : 0.142389}
{'[0, 0, 6, 2, 6, 6, 0, 0, 28, 27, 6, 0, 0, 0, 2, 1, 1, 1]' : 0.142308}
{'[0, 0, 6, 2, 6, 6, 0, 0, 28, 27, 6, 0, 0, 0, 2, 1, 1, 1]' : 0.142745}
{'[0, 0, 6, 2, 6, 6, 0, 0, 28, 27, 6, 0, 0, 0, 2, 1, 1, 1]' : 0.142379}
{'[0, 0, 6, 2, 6, 6, 0, 0, 28, 27, 6, 0, 0, 0, 2, 1, 1, 1]' : 0.142265}
{'[0, 0, 6, 2, 6, 6, 0, 0, 28, 27, 6, 0, 0, 0, 2, 1, 1, 1]' : 0.142178}
{'[0, 0, 6, 2, 6, 6, 0, 0, 28, 27, 6, 0, 0, 0, 2, 1, 1, 1]' : 0.142555}
{'[0, 0, 6, 2, 6, 6, 0, 0, 28, 27, 6, 0, 0, 0, 2, 1, 1, 1]' : 0.142267}
{'[0, 0, 6, 2, 6, 6, 0, 0, 28, 27, 6, 0, 0, 0, 2, 1, 1, 1]' : 0.142609}
{'[0, 0, 6, 2, 6, 6, 0, 0, 28, 27, 6, 0, 0, 0, 2, 1, 1, 1]' : 0.142698}
{'[0, 0, 6, 2, 6, 6, 0, 0, 28, 27, 6, 0, 0, 0, 2, 1, 1, 1]' : 0.1426}
{'[0, 0, 6, 2, 6, 6, 0, 0, 28, 27, 6, 0, 0, 0, 2, 1, 1, 1]' : 0.14235}
{'[0, 0, 6, 2, 6, 6, 0, 0, 28, 27, 6, 0, 0, 0, 2, 1, 1, 1]' : 0.142105}
{'[0, 0, 6, 2, 6, 6, 0, 0, 28, 27, 6, 0, 0, 0, 2, 1, 1, 1]' : 0.142472}
{'[0, 0, 6, 2, 6, 6, 0, 0, 28, 27, 6, 0, 0, 0, 2, 1, 1, 1]' : 0.142213}
{'[0, 0, 6, 2, 6, 6, 0, 0, 28, 27, 6, 0, 0, 0, 2, 1, 1, 1]' : 0.142432}
{'[0, 0, 6, 2, 6, 6, 0, 0, 28, 27, 6, 0, 0, 0, 2, 1, 1, 1]' : 0.143289}
{'[0, 0, 6, 2, 6, 6, 0, 0, 28, 27, 6, 0, 0, 0, 2, 1, 1, 1]' : 0.143929}
{'[0, 0, 6, 2, 6, 6, 0, 0, 28, 27, 6, 0, 0, 0, 2, 1, 1, 1]' : 0.142505}
{'[0, 0, 6, 2, 6, 6, 0, 0, 28, 27, 6, 0, 0, 0, 2, 1, 1, 1]' : 0.140899}
{'[0, 0, 6, 2, 6, 6, 0, 0, 28, 27, 6, 0, 0, 0, 2, 1, 1, 1]' : 0.141889}
{'[0, 0, 6, 2, 6, 6, 0, 0, 28, 27, 6, 0, 0, 0, 2, 1, 1, 1]' : 0.142474}
{'[0, 0, 6, 2, 6, 6, 0, 0, 28, 27, 6, 0, 0, 0, 2, 1, 1, 1]' : 0.142444}
{'[0, 0, 6, 2, 6, 6, 0, 0, 28, 27, 6, 0, 0, 0, 2, 1, 1, 1]' : 0.142572}
{'[0, 0, 6, 2, 6, 6, 0, 0, 28, 27, 6, 0, 0, 0, 2, 1, 1, 1]' : 0.142247}
{'[0, 0, 6, 2, 6, 6, 0, 0, 28, 27, 6, 0, 0, 0, 2, 1, 1, 1]' : 0.142731}
{'[0, 0, 6, 2, 6, 6, 0, 0, 28, 27, 6, 0, 0, 0, 2, 1, 1, 1]' : 0.142317}

out:
 ["{'[0, 0, 6, 2, 6, 6, 0, 0, 28, 27, 6, 0, 0, 0, 2, 1, 1, 1]' : 0.142545}", "{'[0, 0, 6, 2, 6, 6, 0, 0, 28, 27, 6, 0, 0, 0, 2, 1, 1, 1]' : 0.142549}", "{'[0, 0, 6, 2, 6, 6, 0, 0, 28, 27, 6, 0, 0, 0, 2, 1, 1, 1]' : 0.142546}", "{'[0, 0, 6, 2, 6, 6, 0, 0, 28, 27, 6, 0, 0, 0, 2, 1, 1, 1]' : 0.142389}", "{'[0, 0, 6, 2, 6, 6, 0, 0, 28, 27, 6, 0, 0, 0, 2, 1, 1, 1]' : 0.142308}", "{'[0, 0, 6, 2, 6, 6, 0, 0, 28, 27, 6, 0, 0, 0, 2, 1, 1, 1]' : 0.142745}", "{'[0, 0, 6, 2, 6, 6, 0, 0, 28, 27, 6, 0, 0, 0, 2, 1, 1, 1]' : 0.142379}", "{'[0, 0, 6, 2, 6, 6, 0, 0, 28, 27, 6, 0, 0, 0, 2, 1, 1, 1]' : 0.142265}", "{'[0, 0, 6, 2, 6, 6, 0, 0, 28, 27, 6, 0, 0, 0, 2, 1, 1, 1]' : 0.142178}", "{'[0, 0, 6, 2, 6, 6, 0, 0, 28, 27, 6, 0, 0, 0, 2, 1, 1, 1]' : 0.142555}", "{'[0, 0, 6, 2, 6, 6, 0, 0, 28, 27, 6, 0, 0, 0, 2, 1, 1, 1]' : 0.142267}", "{'[0, 0, 6, 2, 6, 6, 0, 0, 28, 27, 6, 0, 0, 0, 2, 1, 1, 1]' : 0.142609}", "{'[0, 0, 6, 2, 6, 6, 0, 0, 28, 27, 6, 0, 0, 0, 2, 1, 1, 1]' : 0.142698}", "{'[0, 0, 6, 2, 6, 6, 0, 0, 28, 27, 6, 0, 0, 0, 2, 1, 1, 1]' : 0.1426}", "{'[0, 0, 6, 2, 6, 6, 0, 0, 28, 27, 6, 0, 0, 0, 2, 1, 1, 1]' : 0.14235}", "{'[0, 0, 6, 2, 6, 6, 0, 0, 28, 27, 6, 0, 0, 0, 2, 1, 1, 1]' : 0.142105}", "{'[0, 0, 6, 2, 6, 6, 0, 0, 28, 27, 6, 0, 0, 0, 2, 1, 1, 1]' : 0.142472}", "{'[0, 0, 6, 2, 6, 6, 0, 0, 28, 27, 6, 0, 0, 0, 2, 1, 1, 1]' : 0.142213}", "{'[0, 0, 6, 2, 6, 6, 0, 0, 28, 27, 6, 0, 0, 0, 2, 1, 1, 1]' : 0.142432}", "{'[0, 0, 6, 2, 6, 6, 0, 0, 28, 27, 6, 0, 0, 0, 2, 1, 1, 1]' : 0.143289}", "{'[0, 0, 6, 2, 6, 6, 0, 0, 28, 27, 6, 0, 0, 0, 2, 1, 1, 1]' : 0.143929}", "{'[0, 0, 6, 2, 6, 6, 0, 0, 28, 27, 6, 0, 0, 0, 2, 1, 1, 1]' : 0.142505}", "{'[0, 0, 6, 2, 6, 6, 0, 0, 28, 27, 6, 0, 0, 0, 2, 1, 1, 1]' : 0.140899}", "{'[0, 0, 6, 2, 6, 6, 0, 0, 28, 27, 6, 0, 0, 0, 2, 1, 1, 1]' : 0.141889}", "{'[0, 0, 6, 2, 6, 6, 0, 0, 28, 27, 6, 0, 0, 0, 2, 1, 1, 1]' : 0.142474}", "{'[0, 0, 6, 2, 6, 6, 0, 0, 28, 27, 6, 0, 0, 0, 2, 1, 1, 1]' : 0.142444}", "{'[0, 0, 6, 2, 6, 6, 0, 0, 28, 27, 6, 0, 0, 0, 2, 1, 1, 1]' : 0.142572}", "{'[0, 0, 6, 2, 6, 6, 0, 0, 28, 27, 6, 0, 0, 0, 2, 1, 1, 1]' : 0.142247}", "{'[0, 0, 6, 2, 6, 6, 0, 0, 28, 27, 6, 0, 0, 0, 2, 1, 1, 1]' : 0.142731}", "{'[0, 0, 6, 2, 6, 6, 0, 0, 28, 27, 6, 0, 0, 0, 2, 1, 1, 1]' : 0.142317}"]
returning from 'run': {'[0, 0, 6, 2, 6, 6, 0, 0, 28, 27, 6, 0, 0, 0, 2, 1, 1, 1]': ([0.142545, 0.142549, 0.142546, 0.142389, 0.142308, 0.142745, 0.142379, 0.142265, 0.142178, 0.142555, 0.142267, 0.142609, 0.142698, 0.1426, 0.14235, 0.142105, 0.142472, 0.142213, 0.142432, 0.143289, 0.143929, 0.142505, 0.140899, 0.141889, 0.142474, 0.142444, 0.142572, 0.142247, 0.142731, 0.142317], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 6, 2, 6, 6, 0, 0, 28, 27, 6, 0, 0, 0, 2, 1, 1, 1]': ([0.142545, 0.142549, 0.142546, 0.142389, 0.142308, 0.142745, 0.142379, 0.142265, 0.142178, 0.142555, 0.142267, 0.142609, 0.142698, 0.1426, 0.14235, 0.142105, 0.142472, 0.142213, 0.142432, 0.143289, 0.143929, 0.142505, 0.140899, 0.141889, 0.142474, 0.142444, 0.142572, 0.142247, 0.142731, 0.142317], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	27
        Max loop nest depth: 	6
        Additions: 		7092
        Multiplications: 	3528
        Divisions: 		0
        Logical: 		0
        Reads: 			13180
        Writes: 		2049
        Comparisons:		27
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest22.exe __orio_perftest22.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest22.exe  
Program Test Output: 
{'[2, 4, 3, 4, 5, 2, 0, 0, 0, 29, 25, 0, 2, 0, 0, 1, 0, 1]' : 0.248902}
{'[2, 4, 3, 4, 5, 2, 0, 0, 0, 29, 25, 0, 2, 0, 0, 1, 0, 1]' : 0.244387}
{'[2, 4, 3, 4, 5, 2, 0, 0, 0, 29, 25, 0, 2, 0, 0, 1, 0, 1]' : 0.227491}
{'[2, 4, 3, 4, 5, 2, 0, 0, 0, 29, 25, 0, 2, 0, 0, 1, 0, 1]' : 0.216016}
{'[2, 4, 3, 4, 5, 2, 0, 0, 0, 29, 25, 0, 2, 0, 0, 1, 0, 1]' : 0.215557}
{'[2, 4, 3, 4, 5, 2, 0, 0, 0, 29, 25, 0, 2, 0, 0, 1, 0, 1]' : 0.21466}
{'[2, 4, 3, 4, 5, 2, 0, 0, 0, 29, 25, 0, 2, 0, 0, 1, 0, 1]' : 0.216161}
{'[2, 4, 3, 4, 5, 2, 0, 0, 0, 29, 25, 0, 2, 0, 0, 1, 0, 1]' : 0.216156}
{'[2, 4, 3, 4, 5, 2, 0, 0, 0, 29, 25, 0, 2, 0, 0, 1, 0, 1]' : 0.2163}
{'[2, 4, 3, 4, 5, 2, 0, 0, 0, 29, 25, 0, 2, 0, 0, 1, 0, 1]' : 0.214346}
{'[2, 4, 3, 4, 5, 2, 0, 0, 0, 29, 25, 0, 2, 0, 0, 1, 0, 1]' : 0.217034}
{'[2, 4, 3, 4, 5, 2, 0, 0, 0, 29, 25, 0, 2, 0, 0, 1, 0, 1]' : 0.216262}
{'[2, 4, 3, 4, 5, 2, 0, 0, 0, 29, 25, 0, 2, 0, 0, 1, 0, 1]' : 0.217834}
{'[2, 4, 3, 4, 5, 2, 0, 0, 0, 29, 25, 0, 2, 0, 0, 1, 0, 1]' : 0.21799}
{'[2, 4, 3, 4, 5, 2, 0, 0, 0, 29, 25, 0, 2, 0, 0, 1, 0, 1]' : 0.217}
{'[2, 4, 3, 4, 5, 2, 0, 0, 0, 29, 25, 0, 2, 0, 0, 1, 0, 1]' : 0.214684}
{'[2, 4, 3, 4, 5, 2, 0, 0, 0, 29, 25, 0, 2, 0, 0, 1, 0, 1]' : 0.215054}
{'[2, 4, 3, 4, 5, 2, 0, 0, 0, 29, 25, 0, 2, 0, 0, 1, 0, 1]' : 0.215881}
{'[2, 4, 3, 4, 5, 2, 0, 0, 0, 29, 25, 0, 2, 0, 0, 1, 0, 1]' : 0.217722}
{'[2, 4, 3, 4, 5, 2, 0, 0, 0, 29, 25, 0, 2, 0, 0, 1, 0, 1]' : 0.216321}
{'[2, 4, 3, 4, 5, 2, 0, 0, 0, 29, 25, 0, 2, 0, 0, 1, 0, 1]' : 0.216182}
{'[2, 4, 3, 4, 5, 2, 0, 0, 0, 29, 25, 0, 2, 0, 0, 1, 0, 1]' : 0.216628}
{'[2, 4, 3, 4, 5, 2, 0, 0, 0, 29, 25, 0, 2, 0, 0, 1, 0, 1]' : 0.215456}
{'[2, 4, 3, 4, 5, 2, 0, 0, 0, 29, 25, 0, 2, 0, 0, 1, 0, 1]' : 0.216538}
{'[2, 4, 3, 4, 5, 2, 0, 0, 0, 29, 25, 0, 2, 0, 0, 1, 0, 1]' : 0.217519}
{'[2, 4, 3, 4, 5, 2, 0, 0, 0, 29, 25, 0, 2, 0, 0, 1, 0, 1]' : 0.216919}
{'[2, 4, 3, 4, 5, 2, 0, 0, 0, 29, 25, 0, 2, 0, 0, 1, 0, 1]' : 0.216587}
{'[2, 4, 3, 4, 5, 2, 0, 0, 0, 29, 25, 0, 2, 0, 0, 1, 0, 1]' : 0.21663}
{'[2, 4, 3, 4, 5, 2, 0, 0, 0, 29, 25, 0, 2, 0, 0, 1, 0, 1]' : 0.217781}
{'[2, 4, 3, 4, 5, 2, 0, 0, 0, 29, 25, 0, 2, 0, 0, 1, 0, 1]' : 0.215736}

out:
 ["{'[2, 4, 3, 4, 5, 2, 0, 0, 0, 29, 25, 0, 2, 0, 0, 1, 0, 1]' : 0.248902}", "{'[2, 4, 3, 4, 5, 2, 0, 0, 0, 29, 25, 0, 2, 0, 0, 1, 0, 1]' : 0.244387}", "{'[2, 4, 3, 4, 5, 2, 0, 0, 0, 29, 25, 0, 2, 0, 0, 1, 0, 1]' : 0.227491}", "{'[2, 4, 3, 4, 5, 2, 0, 0, 0, 29, 25, 0, 2, 0, 0, 1, 0, 1]' : 0.216016}", "{'[2, 4, 3, 4, 5, 2, 0, 0, 0, 29, 25, 0, 2, 0, 0, 1, 0, 1]' : 0.215557}", "{'[2, 4, 3, 4, 5, 2, 0, 0, 0, 29, 25, 0, 2, 0, 0, 1, 0, 1]' : 0.21466}", "{'[2, 4, 3, 4, 5, 2, 0, 0, 0, 29, 25, 0, 2, 0, 0, 1, 0, 1]' : 0.216161}", "{'[2, 4, 3, 4, 5, 2, 0, 0, 0, 29, 25, 0, 2, 0, 0, 1, 0, 1]' : 0.216156}", "{'[2, 4, 3, 4, 5, 2, 0, 0, 0, 29, 25, 0, 2, 0, 0, 1, 0, 1]' : 0.2163}", "{'[2, 4, 3, 4, 5, 2, 0, 0, 0, 29, 25, 0, 2, 0, 0, 1, 0, 1]' : 0.214346}", "{'[2, 4, 3, 4, 5, 2, 0, 0, 0, 29, 25, 0, 2, 0, 0, 1, 0, 1]' : 0.217034}", "{'[2, 4, 3, 4, 5, 2, 0, 0, 0, 29, 25, 0, 2, 0, 0, 1, 0, 1]' : 0.216262}", "{'[2, 4, 3, 4, 5, 2, 0, 0, 0, 29, 25, 0, 2, 0, 0, 1, 0, 1]' : 0.217834}", "{'[2, 4, 3, 4, 5, 2, 0, 0, 0, 29, 25, 0, 2, 0, 0, 1, 0, 1]' : 0.21799}", "{'[2, 4, 3, 4, 5, 2, 0, 0, 0, 29, 25, 0, 2, 0, 0, 1, 0, 1]' : 0.217}", "{'[2, 4, 3, 4, 5, 2, 0, 0, 0, 29, 25, 0, 2, 0, 0, 1, 0, 1]' : 0.214684}", "{'[2, 4, 3, 4, 5, 2, 0, 0, 0, 29, 25, 0, 2, 0, 0, 1, 0, 1]' : 0.215054}", "{'[2, 4, 3, 4, 5, 2, 0, 0, 0, 29, 25, 0, 2, 0, 0, 1, 0, 1]' : 0.215881}", "{'[2, 4, 3, 4, 5, 2, 0, 0, 0, 29, 25, 0, 2, 0, 0, 1, 0, 1]' : 0.217722}", "{'[2, 4, 3, 4, 5, 2, 0, 0, 0, 29, 25, 0, 2, 0, 0, 1, 0, 1]' : 0.216321}", "{'[2, 4, 3, 4, 5, 2, 0, 0, 0, 29, 25, 0, 2, 0, 0, 1, 0, 1]' : 0.216182}", "{'[2, 4, 3, 4, 5, 2, 0, 0, 0, 29, 25, 0, 2, 0, 0, 1, 0, 1]' : 0.216628}", "{'[2, 4, 3, 4, 5, 2, 0, 0, 0, 29, 25, 0, 2, 0, 0, 1, 0, 1]' : 0.215456}", "{'[2, 4, 3, 4, 5, 2, 0, 0, 0, 29, 25, 0, 2, 0, 0, 1, 0, 1]' : 0.216538}", "{'[2, 4, 3, 4, 5, 2, 0, 0, 0, 29, 25, 0, 2, 0, 0, 1, 0, 1]' : 0.217519}", "{'[2, 4, 3, 4, 5, 2, 0, 0, 0, 29, 25, 0, 2, 0, 0, 1, 0, 1]' : 0.216919}", "{'[2, 4, 3, 4, 5, 2, 0, 0, 0, 29, 25, 0, 2, 0, 0, 1, 0, 1]' : 0.216587}", "{'[2, 4, 3, 4, 5, 2, 0, 0, 0, 29, 25, 0, 2, 0, 0, 1, 0, 1]' : 0.21663}", "{'[2, 4, 3, 4, 5, 2, 0, 0, 0, 29, 25, 0, 2, 0, 0, 1, 0, 1]' : 0.217781}", "{'[2, 4, 3, 4, 5, 2, 0, 0, 0, 29, 25, 0, 2, 0, 0, 1, 0, 1]' : 0.215736}"]
returning from 'run': {'[2, 4, 3, 4, 5, 2, 0, 0, 0, 29, 25, 0, 2, 0, 0, 1, 0, 1]': ([0.248902, 0.244387, 0.227491, 0.216016, 0.215557, 0.21466, 0.216161, 0.216156, 0.2163, 0.214346, 0.217034, 0.216262, 0.217834, 0.21799, 0.217, 0.214684, 0.215054, 0.215881, 0.217722, 0.216321, 0.216182, 0.216628, 0.215456, 0.216538, 0.217519, 0.216919, 0.216587, 0.21663, 0.217781, 0.215736], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 4, 3, 4, 5, 2, 0, 0, 0, 29, 25, 0, 2, 0, 0, 1, 0, 1]': ([0.248902, 0.244387, 0.227491, 0.216016, 0.215557, 0.21466, 0.216161, 0.216156, 0.2163, 0.214346, 0.217034, 0.216262, 0.217834, 0.21799, 0.217, 0.214684, 0.215054, 0.215881, 0.217722, 0.216321, 0.216182, 0.216628, 0.215456, 0.216538, 0.217519, 0.216919, 0.216587, 0.21663, 0.217781, 0.215736], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	42
        Max loop nest depth: 	5
        Additions: 		809
        Multiplications: 	224
        Divisions: 		0
        Logical: 		0
        Reads: 			1721
        Writes: 		376
        Comparisons:		42
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest23.exe __orio_perftest23.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest23.exe  
Program Test Output: 
{'[6, 0, 6, 6, 6, 0, 0, 1, 11, 5, 0, 5, 0, 1, 0, 1, 0, 1]' : 0.166317}
{'[6, 0, 6, 6, 6, 0, 0, 1, 11, 5, 0, 5, 0, 1, 0, 1, 0, 1]' : 0.164926}
{'[6, 0, 6, 6, 6, 0, 0, 1, 11, 5, 0, 5, 0, 1, 0, 1, 0, 1]' : 0.141805}
{'[6, 0, 6, 6, 6, 0, 0, 1, 11, 5, 0, 5, 0, 1, 0, 1, 0, 1]' : 0.142449}
{'[6, 0, 6, 6, 6, 0, 0, 1, 11, 5, 0, 5, 0, 1, 0, 1, 0, 1]' : 0.142283}
{'[6, 0, 6, 6, 6, 0, 0, 1, 11, 5, 0, 5, 0, 1, 0, 1, 0, 1]' : 0.142551}
{'[6, 0, 6, 6, 6, 0, 0, 1, 11, 5, 0, 5, 0, 1, 0, 1, 0, 1]' : 0.144697}
{'[6, 0, 6, 6, 6, 0, 0, 1, 11, 5, 0, 5, 0, 1, 0, 1, 0, 1]' : 0.146659}
{'[6, 0, 6, 6, 6, 0, 0, 1, 11, 5, 0, 5, 0, 1, 0, 1, 0, 1]' : 0.146696}
{'[6, 0, 6, 6, 6, 0, 0, 1, 11, 5, 0, 5, 0, 1, 0, 1, 0, 1]' : 0.146774}
{'[6, 0, 6, 6, 6, 0, 0, 1, 11, 5, 0, 5, 0, 1, 0, 1, 0, 1]' : 0.146632}
{'[6, 0, 6, 6, 6, 0, 0, 1, 11, 5, 0, 5, 0, 1, 0, 1, 0, 1]' : 0.1467}
{'[6, 0, 6, 6, 6, 0, 0, 1, 11, 5, 0, 5, 0, 1, 0, 1, 0, 1]' : 0.146848}
{'[6, 0, 6, 6, 6, 0, 0, 1, 11, 5, 0, 5, 0, 1, 0, 1, 0, 1]' : 0.146747}
{'[6, 0, 6, 6, 6, 0, 0, 1, 11, 5, 0, 5, 0, 1, 0, 1, 0, 1]' : 0.142652}
{'[6, 0, 6, 6, 6, 0, 0, 1, 11, 5, 0, 5, 0, 1, 0, 1, 0, 1]' : 0.142339}
{'[6, 0, 6, 6, 6, 0, 0, 1, 11, 5, 0, 5, 0, 1, 0, 1, 0, 1]' : 0.142362}
{'[6, 0, 6, 6, 6, 0, 0, 1, 11, 5, 0, 5, 0, 1, 0, 1, 0, 1]' : 0.143931}
{'[6, 0, 6, 6, 6, 0, 0, 1, 11, 5, 0, 5, 0, 1, 0, 1, 0, 1]' : 0.146778}
{'[6, 0, 6, 6, 6, 0, 0, 1, 11, 5, 0, 5, 0, 1, 0, 1, 0, 1]' : 0.143865}
{'[6, 0, 6, 6, 6, 0, 0, 1, 11, 5, 0, 5, 0, 1, 0, 1, 0, 1]' : 0.141396}
{'[6, 0, 6, 6, 6, 0, 0, 1, 11, 5, 0, 5, 0, 1, 0, 1, 0, 1]' : 0.142813}
{'[6, 0, 6, 6, 6, 0, 0, 1, 11, 5, 0, 5, 0, 1, 0, 1, 0, 1]' : 0.142386}
{'[6, 0, 6, 6, 6, 0, 0, 1, 11, 5, 0, 5, 0, 1, 0, 1, 0, 1]' : 0.142486}
{'[6, 0, 6, 6, 6, 0, 0, 1, 11, 5, 0, 5, 0, 1, 0, 1, 0, 1]' : 0.142274}
{'[6, 0, 6, 6, 6, 0, 0, 1, 11, 5, 0, 5, 0, 1, 0, 1, 0, 1]' : 0.142563}
{'[6, 0, 6, 6, 6, 0, 0, 1, 11, 5, 0, 5, 0, 1, 0, 1, 0, 1]' : 0.142581}
{'[6, 0, 6, 6, 6, 0, 0, 1, 11, 5, 0, 5, 0, 1, 0, 1, 0, 1]' : 0.142595}
{'[6, 0, 6, 6, 6, 0, 0, 1, 11, 5, 0, 5, 0, 1, 0, 1, 0, 1]' : 0.142571}
{'[6, 0, 6, 6, 6, 0, 0, 1, 11, 5, 0, 5, 0, 1, 0, 1, 0, 1]' : 0.142626}

out:
 ["{'[6, 0, 6, 6, 6, 0, 0, 1, 11, 5, 0, 5, 0, 1, 0, 1, 0, 1]' : 0.166317}", "{'[6, 0, 6, 6, 6, 0, 0, 1, 11, 5, 0, 5, 0, 1, 0, 1, 0, 1]' : 0.164926}", "{'[6, 0, 6, 6, 6, 0, 0, 1, 11, 5, 0, 5, 0, 1, 0, 1, 0, 1]' : 0.141805}", "{'[6, 0, 6, 6, 6, 0, 0, 1, 11, 5, 0, 5, 0, 1, 0, 1, 0, 1]' : 0.142449}", "{'[6, 0, 6, 6, 6, 0, 0, 1, 11, 5, 0, 5, 0, 1, 0, 1, 0, 1]' : 0.142283}", "{'[6, 0, 6, 6, 6, 0, 0, 1, 11, 5, 0, 5, 0, 1, 0, 1, 0, 1]' : 0.142551}", "{'[6, 0, 6, 6, 6, 0, 0, 1, 11, 5, 0, 5, 0, 1, 0, 1, 0, 1]' : 0.144697}", "{'[6, 0, 6, 6, 6, 0, 0, 1, 11, 5, 0, 5, 0, 1, 0, 1, 0, 1]' : 0.146659}", "{'[6, 0, 6, 6, 6, 0, 0, 1, 11, 5, 0, 5, 0, 1, 0, 1, 0, 1]' : 0.146696}", "{'[6, 0, 6, 6, 6, 0, 0, 1, 11, 5, 0, 5, 0, 1, 0, 1, 0, 1]' : 0.146774}", "{'[6, 0, 6, 6, 6, 0, 0, 1, 11, 5, 0, 5, 0, 1, 0, 1, 0, 1]' : 0.146632}", "{'[6, 0, 6, 6, 6, 0, 0, 1, 11, 5, 0, 5, 0, 1, 0, 1, 0, 1]' : 0.1467}", "{'[6, 0, 6, 6, 6, 0, 0, 1, 11, 5, 0, 5, 0, 1, 0, 1, 0, 1]' : 0.146848}", "{'[6, 0, 6, 6, 6, 0, 0, 1, 11, 5, 0, 5, 0, 1, 0, 1, 0, 1]' : 0.146747}", "{'[6, 0, 6, 6, 6, 0, 0, 1, 11, 5, 0, 5, 0, 1, 0, 1, 0, 1]' : 0.142652}", "{'[6, 0, 6, 6, 6, 0, 0, 1, 11, 5, 0, 5, 0, 1, 0, 1, 0, 1]' : 0.142339}", "{'[6, 0, 6, 6, 6, 0, 0, 1, 11, 5, 0, 5, 0, 1, 0, 1, 0, 1]' : 0.142362}", "{'[6, 0, 6, 6, 6, 0, 0, 1, 11, 5, 0, 5, 0, 1, 0, 1, 0, 1]' : 0.143931}", "{'[6, 0, 6, 6, 6, 0, 0, 1, 11, 5, 0, 5, 0, 1, 0, 1, 0, 1]' : 0.146778}", "{'[6, 0, 6, 6, 6, 0, 0, 1, 11, 5, 0, 5, 0, 1, 0, 1, 0, 1]' : 0.143865}", "{'[6, 0, 6, 6, 6, 0, 0, 1, 11, 5, 0, 5, 0, 1, 0, 1, 0, 1]' : 0.141396}", "{'[6, 0, 6, 6, 6, 0, 0, 1, 11, 5, 0, 5, 0, 1, 0, 1, 0, 1]' : 0.142813}", "{'[6, 0, 6, 6, 6, 0, 0, 1, 11, 5, 0, 5, 0, 1, 0, 1, 0, 1]' : 0.142386}", "{'[6, 0, 6, 6, 6, 0, 0, 1, 11, 5, 0, 5, 0, 1, 0, 1, 0, 1]' : 0.142486}", "{'[6, 0, 6, 6, 6, 0, 0, 1, 11, 5, 0, 5, 0, 1, 0, 1, 0, 1]' : 0.142274}", "{'[6, 0, 6, 6, 6, 0, 0, 1, 11, 5, 0, 5, 0, 1, 0, 1, 0, 1]' : 0.142563}", "{'[6, 0, 6, 6, 6, 0, 0, 1, 11, 5, 0, 5, 0, 1, 0, 1, 0, 1]' : 0.142581}", "{'[6, 0, 6, 6, 6, 0, 0, 1, 11, 5, 0, 5, 0, 1, 0, 1, 0, 1]' : 0.142595}", "{'[6, 0, 6, 6, 6, 0, 0, 1, 11, 5, 0, 5, 0, 1, 0, 1, 0, 1]' : 0.142571}", "{'[6, 0, 6, 6, 6, 0, 0, 1, 11, 5, 0, 5, 0, 1, 0, 1, 0, 1]' : 0.142626}"]
returning from 'run': {'[6, 0, 6, 6, 6, 0, 0, 1, 11, 5, 0, 5, 0, 1, 0, 1, 0, 1]': ([0.166317, 0.164926, 0.141805, 0.142449, 0.142283, 0.142551, 0.144697, 0.146659, 0.146696, 0.146774, 0.146632, 0.1467, 0.146848, 0.146747, 0.142652, 0.142339, 0.142362, 0.143931, 0.146778, 0.143865, 0.141396, 0.142813, 0.142386, 0.142486, 0.142274, 0.142563, 0.142581, 0.142595, 0.142571, 0.142626], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 6, 6, 6, 0, 0, 1, 11, 5, 0, 5, 0, 1, 0, 1, 0, 1]': ([0.166317, 0.164926, 0.141805, 0.142449, 0.142283, 0.142551, 0.144697, 0.146659, 0.146696, 0.146774, 0.146632, 0.1467, 0.146848, 0.146747, 0.142652, 0.142339, 0.142362, 0.143931, 0.146778, 0.143865, 0.141396, 0.142813, 0.142386, 0.142486, 0.142274, 0.142563, 0.142581, 0.142595, 0.142571, 0.142626], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		303
        Multiplications: 	104
        Divisions: 		0
        Logical: 		0
        Reads: 			686
        Writes: 		141
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest24.exe __orio_perftest24.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest24.exe  
Program Test Output: 
{'[6, 1, 5, 4, 4, 4, 1, 0, 0, 0, 20, 28, 0, 0, 0, 1, 0, 0]' : 0.256414}
{'[6, 1, 5, 4, 4, 4, 1, 0, 0, 0, 20, 28, 0, 0, 0, 1, 0, 0]' : 0.256139}
{'[6, 1, 5, 4, 4, 4, 1, 0, 0, 0, 20, 28, 0, 0, 0, 1, 0, 0]' : 0.256093}
{'[6, 1, 5, 4, 4, 4, 1, 0, 0, 0, 20, 28, 0, 0, 0, 1, 0, 0]' : 0.249246}
{'[6, 1, 5, 4, 4, 4, 1, 0, 0, 0, 20, 28, 0, 0, 0, 1, 0, 0]' : 0.251732}
{'[6, 1, 5, 4, 4, 4, 1, 0, 0, 0, 20, 28, 0, 0, 0, 1, 0, 0]' : 0.255707}
{'[6, 1, 5, 4, 4, 4, 1, 0, 0, 0, 20, 28, 0, 0, 0, 1, 0, 0]' : 0.244298}
{'[6, 1, 5, 4, 4, 4, 1, 0, 0, 0, 20, 28, 0, 0, 0, 1, 0, 0]' : 0.24934}
{'[6, 1, 5, 4, 4, 4, 1, 0, 0, 0, 20, 28, 0, 0, 0, 1, 0, 0]' : 0.252006}
{'[6, 1, 5, 4, 4, 4, 1, 0, 0, 0, 20, 28, 0, 0, 0, 1, 0, 0]' : 0.255742}
{'[6, 1, 5, 4, 4, 4, 1, 0, 0, 0, 20, 28, 0, 0, 0, 1, 0, 0]' : 0.25181}
{'[6, 1, 5, 4, 4, 4, 1, 0, 0, 0, 20, 28, 0, 0, 0, 1, 0, 0]' : 0.256153}
{'[6, 1, 5, 4, 4, 4, 1, 0, 0, 0, 20, 28, 0, 0, 0, 1, 0, 0]' : 0.256196}
{'[6, 1, 5, 4, 4, 4, 1, 0, 0, 0, 20, 28, 0, 0, 0, 1, 0, 0]' : 0.256202}
{'[6, 1, 5, 4, 4, 4, 1, 0, 0, 0, 20, 28, 0, 0, 0, 1, 0, 0]' : 0.256183}
{'[6, 1, 5, 4, 4, 4, 1, 0, 0, 0, 20, 28, 0, 0, 0, 1, 0, 0]' : 0.256319}
{'[6, 1, 5, 4, 4, 4, 1, 0, 0, 0, 20, 28, 0, 0, 0, 1, 0, 0]' : 0.253357}
{'[6, 1, 5, 4, 4, 4, 1, 0, 0, 0, 20, 28, 0, 0, 0, 1, 0, 0]' : 0.242023}
{'[6, 1, 5, 4, 4, 4, 1, 0, 0, 0, 20, 28, 0, 0, 0, 1, 0, 0]' : 0.245038}
{'[6, 1, 5, 4, 4, 4, 1, 0, 0, 0, 20, 28, 0, 0, 0, 1, 0, 0]' : 0.249375}
{'[6, 1, 5, 4, 4, 4, 1, 0, 0, 0, 20, 28, 0, 0, 0, 1, 0, 0]' : 0.252742}
{'[6, 1, 5, 4, 4, 4, 1, 0, 0, 0, 20, 28, 0, 0, 0, 1, 0, 0]' : 0.254115}
{'[6, 1, 5, 4, 4, 4, 1, 0, 0, 0, 20, 28, 0, 0, 0, 1, 0, 0]' : 0.245167}
{'[6, 1, 5, 4, 4, 4, 1, 0, 0, 0, 20, 28, 0, 0, 0, 1, 0, 0]' : 0.249416}
{'[6, 1, 5, 4, 4, 4, 1, 0, 0, 0, 20, 28, 0, 0, 0, 1, 0, 0]' : 0.252698}
{'[6, 1, 5, 4, 4, 4, 1, 0, 0, 0, 20, 28, 0, 0, 0, 1, 0, 0]' : 0.256158}
{'[6, 1, 5, 4, 4, 4, 1, 0, 0, 0, 20, 28, 0, 0, 0, 1, 0, 0]' : 0.256142}
{'[6, 1, 5, 4, 4, 4, 1, 0, 0, 0, 20, 28, 0, 0, 0, 1, 0, 0]' : 0.256183}
{'[6, 1, 5, 4, 4, 4, 1, 0, 0, 0, 20, 28, 0, 0, 0, 1, 0, 0]' : 0.256136}
{'[6, 1, 5, 4, 4, 4, 1, 0, 0, 0, 20, 28, 0, 0, 0, 1, 0, 0]' : 0.25622}

out:
 ["{'[6, 1, 5, 4, 4, 4, 1, 0, 0, 0, 20, 28, 0, 0, 0, 1, 0, 0]' : 0.256414}", "{'[6, 1, 5, 4, 4, 4, 1, 0, 0, 0, 20, 28, 0, 0, 0, 1, 0, 0]' : 0.256139}", "{'[6, 1, 5, 4, 4, 4, 1, 0, 0, 0, 20, 28, 0, 0, 0, 1, 0, 0]' : 0.256093}", "{'[6, 1, 5, 4, 4, 4, 1, 0, 0, 0, 20, 28, 0, 0, 0, 1, 0, 0]' : 0.249246}", "{'[6, 1, 5, 4, 4, 4, 1, 0, 0, 0, 20, 28, 0, 0, 0, 1, 0, 0]' : 0.251732}", "{'[6, 1, 5, 4, 4, 4, 1, 0, 0, 0, 20, 28, 0, 0, 0, 1, 0, 0]' : 0.255707}", "{'[6, 1, 5, 4, 4, 4, 1, 0, 0, 0, 20, 28, 0, 0, 0, 1, 0, 0]' : 0.244298}", "{'[6, 1, 5, 4, 4, 4, 1, 0, 0, 0, 20, 28, 0, 0, 0, 1, 0, 0]' : 0.24934}", "{'[6, 1, 5, 4, 4, 4, 1, 0, 0, 0, 20, 28, 0, 0, 0, 1, 0, 0]' : 0.252006}", "{'[6, 1, 5, 4, 4, 4, 1, 0, 0, 0, 20, 28, 0, 0, 0, 1, 0, 0]' : 0.255742}", "{'[6, 1, 5, 4, 4, 4, 1, 0, 0, 0, 20, 28, 0, 0, 0, 1, 0, 0]' : 0.25181}", "{'[6, 1, 5, 4, 4, 4, 1, 0, 0, 0, 20, 28, 0, 0, 0, 1, 0, 0]' : 0.256153}", "{'[6, 1, 5, 4, 4, 4, 1, 0, 0, 0, 20, 28, 0, 0, 0, 1, 0, 0]' : 0.256196}", "{'[6, 1, 5, 4, 4, 4, 1, 0, 0, 0, 20, 28, 0, 0, 0, 1, 0, 0]' : 0.256202}", "{'[6, 1, 5, 4, 4, 4, 1, 0, 0, 0, 20, 28, 0, 0, 0, 1, 0, 0]' : 0.256183}", "{'[6, 1, 5, 4, 4, 4, 1, 0, 0, 0, 20, 28, 0, 0, 0, 1, 0, 0]' : 0.256319}", "{'[6, 1, 5, 4, 4, 4, 1, 0, 0, 0, 20, 28, 0, 0, 0, 1, 0, 0]' : 0.253357}", "{'[6, 1, 5, 4, 4, 4, 1, 0, 0, 0, 20, 28, 0, 0, 0, 1, 0, 0]' : 0.242023}", "{'[6, 1, 5, 4, 4, 4, 1, 0, 0, 0, 20, 28, 0, 0, 0, 1, 0, 0]' : 0.245038}", "{'[6, 1, 5, 4, 4, 4, 1, 0, 0, 0, 20, 28, 0, 0, 0, 1, 0, 0]' : 0.249375}", "{'[6, 1, 5, 4, 4, 4, 1, 0, 0, 0, 20, 28, 0, 0, 0, 1, 0, 0]' : 0.252742}", "{'[6, 1, 5, 4, 4, 4, 1, 0, 0, 0, 20, 28, 0, 0, 0, 1, 0, 0]' : 0.254115}", "{'[6, 1, 5, 4, 4, 4, 1, 0, 0, 0, 20, 28, 0, 0, 0, 1, 0, 0]' : 0.245167}", "{'[6, 1, 5, 4, 4, 4, 1, 0, 0, 0, 20, 28, 0, 0, 0, 1, 0, 0]' : 0.249416}", "{'[6, 1, 5, 4, 4, 4, 1, 0, 0, 0, 20, 28, 0, 0, 0, 1, 0, 0]' : 0.252698}", "{'[6, 1, 5, 4, 4, 4, 1, 0, 0, 0, 20, 28, 0, 0, 0, 1, 0, 0]' : 0.256158}", "{'[6, 1, 5, 4, 4, 4, 1, 0, 0, 0, 20, 28, 0, 0, 0, 1, 0, 0]' : 0.256142}", "{'[6, 1, 5, 4, 4, 4, 1, 0, 0, 0, 20, 28, 0, 0, 0, 1, 0, 0]' : 0.256183}", "{'[6, 1, 5, 4, 4, 4, 1, 0, 0, 0, 20, 28, 0, 0, 0, 1, 0, 0]' : 0.256136}", "{'[6, 1, 5, 4, 4, 4, 1, 0, 0, 0, 20, 28, 0, 0, 0, 1, 0, 0]' : 0.25622}"]
returning from 'run': {'[6, 1, 5, 4, 4, 4, 1, 0, 0, 0, 20, 28, 0, 0, 0, 1, 0, 0]': ([0.256414, 0.256139, 0.256093, 0.249246, 0.251732, 0.255707, 0.244298, 0.24934, 0.252006, 0.255742, 0.25181, 0.256153, 0.256196, 0.256202, 0.256183, 0.256319, 0.253357, 0.242023, 0.245038, 0.249375, 0.252742, 0.254115, 0.245167, 0.249416, 0.252698, 0.256158, 0.256142, 0.256183, 0.256136, 0.25622], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 1, 5, 4, 4, 4, 1, 0, 0, 0, 20, 28, 0, 0, 0, 1, 0, 0]': ([0.256414, 0.256139, 0.256093, 0.249246, 0.251732, 0.255707, 0.244298, 0.24934, 0.252006, 0.255742, 0.25181, 0.256153, 0.256196, 0.256202, 0.256183, 0.256319, 0.253357, 0.242023, 0.245038, 0.249375, 0.252742, 0.254115, 0.245167, 0.249416, 0.252698, 0.256158, 0.256142, 0.256183, 0.256136, 0.25622], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	6
        Additions: 		212
        Multiplications: 	64
        Divisions: 		0
        Logical: 		0
        Reads: 			458
        Writes: 		78
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest25.exe __orio_perftest25.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest25.exe  
Program Test Output: 
{'[2, 1, 0, 3, 1, 5, 1, 0, 13, 0, 25, 14, 0, 1, 1, 0, 1, 0]' : 0.224698}
{'[2, 1, 0, 3, 1, 5, 1, 0, 13, 0, 25, 14, 0, 1, 1, 0, 1, 0]' : 0.224236}
{'[2, 1, 0, 3, 1, 5, 1, 0, 13, 0, 25, 14, 0, 1, 1, 0, 1, 0]' : 0.19349}
{'[2, 1, 0, 3, 1, 5, 1, 0, 13, 0, 25, 14, 0, 1, 1, 0, 1, 0]' : 0.189297}
{'[2, 1, 0, 3, 1, 5, 1, 0, 13, 0, 25, 14, 0, 1, 1, 0, 1, 0]' : 0.192989}
{'[2, 1, 0, 3, 1, 5, 1, 0, 13, 0, 25, 14, 0, 1, 1, 0, 1, 0]' : 0.192826}
{'[2, 1, 0, 3, 1, 5, 1, 0, 13, 0, 25, 14, 0, 1, 1, 0, 1, 0]' : 0.192934}
{'[2, 1, 0, 3, 1, 5, 1, 0, 13, 0, 25, 14, 0, 1, 1, 0, 1, 0]' : 0.193266}
{'[2, 1, 0, 3, 1, 5, 1, 0, 13, 0, 25, 14, 0, 1, 1, 0, 1, 0]' : 0.193222}
{'[2, 1, 0, 3, 1, 5, 1, 0, 13, 0, 25, 14, 0, 1, 1, 0, 1, 0]' : 0.192974}
{'[2, 1, 0, 3, 1, 5, 1, 0, 13, 0, 25, 14, 0, 1, 1, 0, 1, 0]' : 0.192784}
{'[2, 1, 0, 3, 1, 5, 1, 0, 13, 0, 25, 14, 0, 1, 1, 0, 1, 0]' : 0.193103}
{'[2, 1, 0, 3, 1, 5, 1, 0, 13, 0, 25, 14, 0, 1, 1, 0, 1, 0]' : 0.192907}
{'[2, 1, 0, 3, 1, 5, 1, 0, 13, 0, 25, 14, 0, 1, 1, 0, 1, 0]' : 0.193201}
{'[2, 1, 0, 3, 1, 5, 1, 0, 13, 0, 25, 14, 0, 1, 1, 0, 1, 0]' : 0.192981}
{'[2, 1, 0, 3, 1, 5, 1, 0, 13, 0, 25, 14, 0, 1, 1, 0, 1, 0]' : 0.192869}
{'[2, 1, 0, 3, 1, 5, 1, 0, 13, 0, 25, 14, 0, 1, 1, 0, 1, 0]' : 0.193154}
{'[2, 1, 0, 3, 1, 5, 1, 0, 13, 0, 25, 14, 0, 1, 1, 0, 1, 0]' : 0.192891}
{'[2, 1, 0, 3, 1, 5, 1, 0, 13, 0, 25, 14, 0, 1, 1, 0, 1, 0]' : 0.18728}
{'[2, 1, 0, 3, 1, 5, 1, 0, 13, 0, 25, 14, 0, 1, 1, 0, 1, 0]' : 0.19308}
{'[2, 1, 0, 3, 1, 5, 1, 0, 13, 0, 25, 14, 0, 1, 1, 0, 1, 0]' : 0.193226}
{'[2, 1, 0, 3, 1, 5, 1, 0, 13, 0, 25, 14, 0, 1, 1, 0, 1, 0]' : 0.194492}
{'[2, 1, 0, 3, 1, 5, 1, 0, 13, 0, 25, 14, 0, 1, 1, 0, 1, 0]' : 0.195725}
{'[2, 1, 0, 3, 1, 5, 1, 0, 13, 0, 25, 14, 0, 1, 1, 0, 1, 0]' : 0.192019}
{'[2, 1, 0, 3, 1, 5, 1, 0, 13, 0, 25, 14, 0, 1, 1, 0, 1, 0]' : 0.19484}
{'[2, 1, 0, 3, 1, 5, 1, 0, 13, 0, 25, 14, 0, 1, 1, 0, 1, 0]' : 0.198819}
{'[2, 1, 0, 3, 1, 5, 1, 0, 13, 0, 25, 14, 0, 1, 1, 0, 1, 0]' : 0.198845}
{'[2, 1, 0, 3, 1, 5, 1, 0, 13, 0, 25, 14, 0, 1, 1, 0, 1, 0]' : 0.198843}
{'[2, 1, 0, 3, 1, 5, 1, 0, 13, 0, 25, 14, 0, 1, 1, 0, 1, 0]' : 0.195142}
{'[2, 1, 0, 3, 1, 5, 1, 0, 13, 0, 25, 14, 0, 1, 1, 0, 1, 0]' : 0.196518}

out:
 ["{'[2, 1, 0, 3, 1, 5, 1, 0, 13, 0, 25, 14, 0, 1, 1, 0, 1, 0]' : 0.224698}", "{'[2, 1, 0, 3, 1, 5, 1, 0, 13, 0, 25, 14, 0, 1, 1, 0, 1, 0]' : 0.224236}", "{'[2, 1, 0, 3, 1, 5, 1, 0, 13, 0, 25, 14, 0, 1, 1, 0, 1, 0]' : 0.19349}", "{'[2, 1, 0, 3, 1, 5, 1, 0, 13, 0, 25, 14, 0, 1, 1, 0, 1, 0]' : 0.189297}", "{'[2, 1, 0, 3, 1, 5, 1, 0, 13, 0, 25, 14, 0, 1, 1, 0, 1, 0]' : 0.192989}", "{'[2, 1, 0, 3, 1, 5, 1, 0, 13, 0, 25, 14, 0, 1, 1, 0, 1, 0]' : 0.192826}", "{'[2, 1, 0, 3, 1, 5, 1, 0, 13, 0, 25, 14, 0, 1, 1, 0, 1, 0]' : 0.192934}", "{'[2, 1, 0, 3, 1, 5, 1, 0, 13, 0, 25, 14, 0, 1, 1, 0, 1, 0]' : 0.193266}", "{'[2, 1, 0, 3, 1, 5, 1, 0, 13, 0, 25, 14, 0, 1, 1, 0, 1, 0]' : 0.193222}", "{'[2, 1, 0, 3, 1, 5, 1, 0, 13, 0, 25, 14, 0, 1, 1, 0, 1, 0]' : 0.192974}", "{'[2, 1, 0, 3, 1, 5, 1, 0, 13, 0, 25, 14, 0, 1, 1, 0, 1, 0]' : 0.192784}", "{'[2, 1, 0, 3, 1, 5, 1, 0, 13, 0, 25, 14, 0, 1, 1, 0, 1, 0]' : 0.193103}", "{'[2, 1, 0, 3, 1, 5, 1, 0, 13, 0, 25, 14, 0, 1, 1, 0, 1, 0]' : 0.192907}", "{'[2, 1, 0, 3, 1, 5, 1, 0, 13, 0, 25, 14, 0, 1, 1, 0, 1, 0]' : 0.193201}", "{'[2, 1, 0, 3, 1, 5, 1, 0, 13, 0, 25, 14, 0, 1, 1, 0, 1, 0]' : 0.192981}", "{'[2, 1, 0, 3, 1, 5, 1, 0, 13, 0, 25, 14, 0, 1, 1, 0, 1, 0]' : 0.192869}", "{'[2, 1, 0, 3, 1, 5, 1, 0, 13, 0, 25, 14, 0, 1, 1, 0, 1, 0]' : 0.193154}", "{'[2, 1, 0, 3, 1, 5, 1, 0, 13, 0, 25, 14, 0, 1, 1, 0, 1, 0]' : 0.192891}", "{'[2, 1, 0, 3, 1, 5, 1, 0, 13, 0, 25, 14, 0, 1, 1, 0, 1, 0]' : 0.18728}", "{'[2, 1, 0, 3, 1, 5, 1, 0, 13, 0, 25, 14, 0, 1, 1, 0, 1, 0]' : 0.19308}", "{'[2, 1, 0, 3, 1, 5, 1, 0, 13, 0, 25, 14, 0, 1, 1, 0, 1, 0]' : 0.193226}", "{'[2, 1, 0, 3, 1, 5, 1, 0, 13, 0, 25, 14, 0, 1, 1, 0, 1, 0]' : 0.194492}", "{'[2, 1, 0, 3, 1, 5, 1, 0, 13, 0, 25, 14, 0, 1, 1, 0, 1, 0]' : 0.195725}", "{'[2, 1, 0, 3, 1, 5, 1, 0, 13, 0, 25, 14, 0, 1, 1, 0, 1, 0]' : 0.192019}", "{'[2, 1, 0, 3, 1, 5, 1, 0, 13, 0, 25, 14, 0, 1, 1, 0, 1, 0]' : 0.19484}", "{'[2, 1, 0, 3, 1, 5, 1, 0, 13, 0, 25, 14, 0, 1, 1, 0, 1, 0]' : 0.198819}", "{'[2, 1, 0, 3, 1, 5, 1, 0, 13, 0, 25, 14, 0, 1, 1, 0, 1, 0]' : 0.198845}", "{'[2, 1, 0, 3, 1, 5, 1, 0, 13, 0, 25, 14, 0, 1, 1, 0, 1, 0]' : 0.198843}", "{'[2, 1, 0, 3, 1, 5, 1, 0, 13, 0, 25, 14, 0, 1, 1, 0, 1, 0]' : 0.195142}", "{'[2, 1, 0, 3, 1, 5, 1, 0, 13, 0, 25, 14, 0, 1, 1, 0, 1, 0]' : 0.196518}"]
returning from 'run': {'[2, 1, 0, 3, 1, 5, 1, 0, 13, 0, 25, 14, 0, 1, 1, 0, 1, 0]': ([0.224698, 0.224236, 0.19349, 0.189297, 0.192989, 0.192826, 0.192934, 0.193266, 0.193222, 0.192974, 0.192784, 0.193103, 0.192907, 0.193201, 0.192981, 0.192869, 0.193154, 0.192891, 0.18728, 0.19308, 0.193226, 0.194492, 0.195725, 0.192019, 0.19484, 0.198819, 0.198845, 0.198843, 0.195142, 0.196518], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 1, 0, 3, 1, 5, 1, 0, 13, 0, 25, 14, 0, 1, 1, 0, 1, 0]': ([0.224698, 0.224236, 0.19349, 0.189297, 0.192989, 0.192826, 0.192934, 0.193266, 0.193222, 0.192974, 0.192784, 0.193103, 0.192907, 0.193201, 0.192981, 0.192869, 0.193154, 0.192891, 0.18728, 0.19308, 0.193226, 0.194492, 0.195725, 0.192019, 0.19484, 0.198819, 0.198845, 0.198843, 0.195142, 0.196518], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	78
        Max loop nest depth: 	5
        Additions: 		5574
        Multiplications: 	1554
        Divisions: 		0
        Logical: 		0
        Reads: 			8710
        Writes: 		1050
        Comparisons:		78
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest26.exe __orio_perftest26.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest26.exe  
Program Test Output: 
{'[1, 0, 1, 0, 5, 2, 1, 0, 3, 19, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.319303}
{'[1, 0, 1, 0, 5, 2, 1, 0, 3, 19, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.30429}
{'[1, 0, 1, 0, 5, 2, 1, 0, 3, 19, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.275575}
{'[1, 0, 1, 0, 5, 2, 1, 0, 3, 19, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.275717}
{'[1, 0, 1, 0, 5, 2, 1, 0, 3, 19, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.272875}
{'[1, 0, 1, 0, 5, 2, 1, 0, 3, 19, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.272509}
{'[1, 0, 1, 0, 5, 2, 1, 0, 3, 19, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.275569}
{'[1, 0, 1, 0, 5, 2, 1, 0, 3, 19, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.275883}
{'[1, 0, 1, 0, 5, 2, 1, 0, 3, 19, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.269596}
{'[1, 0, 1, 0, 5, 2, 1, 0, 3, 19, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.275563}
{'[1, 0, 1, 0, 5, 2, 1, 0, 3, 19, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.27716}
{'[1, 0, 1, 0, 5, 2, 1, 0, 3, 19, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.283145}
{'[1, 0, 1, 0, 5, 2, 1, 0, 3, 19, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.275731}
{'[1, 0, 1, 0, 5, 2, 1, 0, 3, 19, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.275881}
{'[1, 0, 1, 0, 5, 2, 1, 0, 3, 19, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.275714}
{'[1, 0, 1, 0, 5, 2, 1, 0, 3, 19, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.275503}
{'[1, 0, 1, 0, 5, 2, 1, 0, 3, 19, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.273465}
{'[1, 0, 1, 0, 5, 2, 1, 0, 3, 19, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.276054}
{'[1, 0, 1, 0, 5, 2, 1, 0, 3, 19, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.275801}
{'[1, 0, 1, 0, 5, 2, 1, 0, 3, 19, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.275742}
{'[1, 0, 1, 0, 5, 2, 1, 0, 3, 19, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.276104}
{'[1, 0, 1, 0, 5, 2, 1, 0, 3, 19, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.278249}
{'[1, 0, 1, 0, 5, 2, 1, 0, 3, 19, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.283547}
{'[1, 0, 1, 0, 5, 2, 1, 0, 3, 19, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.279569}
{'[1, 0, 1, 0, 5, 2, 1, 0, 3, 19, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.276477}
{'[1, 0, 1, 0, 5, 2, 1, 0, 3, 19, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.276347}
{'[1, 0, 1, 0, 5, 2, 1, 0, 3, 19, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.275727}
{'[1, 0, 1, 0, 5, 2, 1, 0, 3, 19, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.275696}
{'[1, 0, 1, 0, 5, 2, 1, 0, 3, 19, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.275724}
{'[1, 0, 1, 0, 5, 2, 1, 0, 3, 19, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.275731}

out:
 ["{'[1, 0, 1, 0, 5, 2, 1, 0, 3, 19, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.319303}", "{'[1, 0, 1, 0, 5, 2, 1, 0, 3, 19, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.30429}", "{'[1, 0, 1, 0, 5, 2, 1, 0, 3, 19, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.275575}", "{'[1, 0, 1, 0, 5, 2, 1, 0, 3, 19, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.275717}", "{'[1, 0, 1, 0, 5, 2, 1, 0, 3, 19, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.272875}", "{'[1, 0, 1, 0, 5, 2, 1, 0, 3, 19, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.272509}", "{'[1, 0, 1, 0, 5, 2, 1, 0, 3, 19, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.275569}", "{'[1, 0, 1, 0, 5, 2, 1, 0, 3, 19, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.275883}", "{'[1, 0, 1, 0, 5, 2, 1, 0, 3, 19, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.269596}", "{'[1, 0, 1, 0, 5, 2, 1, 0, 3, 19, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.275563}", "{'[1, 0, 1, 0, 5, 2, 1, 0, 3, 19, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.27716}", "{'[1, 0, 1, 0, 5, 2, 1, 0, 3, 19, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.283145}", "{'[1, 0, 1, 0, 5, 2, 1, 0, 3, 19, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.275731}", "{'[1, 0, 1, 0, 5, 2, 1, 0, 3, 19, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.275881}", "{'[1, 0, 1, 0, 5, 2, 1, 0, 3, 19, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.275714}", "{'[1, 0, 1, 0, 5, 2, 1, 0, 3, 19, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.275503}", "{'[1, 0, 1, 0, 5, 2, 1, 0, 3, 19, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.273465}", "{'[1, 0, 1, 0, 5, 2, 1, 0, 3, 19, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.276054}", "{'[1, 0, 1, 0, 5, 2, 1, 0, 3, 19, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.275801}", "{'[1, 0, 1, 0, 5, 2, 1, 0, 3, 19, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.275742}", "{'[1, 0, 1, 0, 5, 2, 1, 0, 3, 19, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.276104}", "{'[1, 0, 1, 0, 5, 2, 1, 0, 3, 19, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.278249}", "{'[1, 0, 1, 0, 5, 2, 1, 0, 3, 19, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.283547}", "{'[1, 0, 1, 0, 5, 2, 1, 0, 3, 19, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.279569}", "{'[1, 0, 1, 0, 5, 2, 1, 0, 3, 19, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.276477}", "{'[1, 0, 1, 0, 5, 2, 1, 0, 3, 19, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.276347}", "{'[1, 0, 1, 0, 5, 2, 1, 0, 3, 19, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.275727}", "{'[1, 0, 1, 0, 5, 2, 1, 0, 3, 19, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.275696}", "{'[1, 0, 1, 0, 5, 2, 1, 0, 3, 19, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.275724}", "{'[1, 0, 1, 0, 5, 2, 1, 0, 3, 19, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.275731}"]
returning from 'run': {'[1, 0, 1, 0, 5, 2, 1, 0, 3, 19, 0, 2, 0, 0, 2, 0, 1, 1]': ([0.319303, 0.30429, 0.275575, 0.275717, 0.272875, 0.272509, 0.275569, 0.275883, 0.269596, 0.275563, 0.27716, 0.283145, 0.275731, 0.275881, 0.275714, 0.275503, 0.273465, 0.276054, 0.275801, 0.275742, 0.276104, 0.278249, 0.283547, 0.279569, 0.276477, 0.276347, 0.275727, 0.275696, 0.275724, 0.275731], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 1, 0, 5, 2, 1, 0, 3, 19, 0, 2, 0, 0, 2, 0, 1, 1]': ([0.319303, 0.30429, 0.275575, 0.275717, 0.272875, 0.272509, 0.275569, 0.275883, 0.269596, 0.275563, 0.27716, 0.283145, 0.275731, 0.275881, 0.275714, 0.275503, 0.273465, 0.276054, 0.275801, 0.275742, 0.276104, 0.278249, 0.283547, 0.279569, 0.276477, 0.276347, 0.275727, 0.275696, 0.275724, 0.275731], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	115
        Max loop nest depth: 	5
        Additions: 		9809
        Multiplications: 	2750
        Divisions: 		0
        Logical: 		0
        Reads: 			15029
        Writes: 		1696
        Comparisons:		115
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest27.exe __orio_perftest27.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest27.exe  
Program Test Output: 
{'[2, 0, 6, 0, 6, 5, 0, 1, 11, 23, 20, 0, 0, 2, 0, 0, 1, 0]' : 0.238913}
{'[2, 0, 6, 0, 6, 5, 0, 1, 11, 23, 20, 0, 0, 2, 0, 0, 1, 0]' : 0.239685}
{'[2, 0, 6, 0, 6, 5, 0, 1, 11, 23, 20, 0, 0, 2, 0, 0, 1, 0]' : 0.215955}
{'[2, 0, 6, 0, 6, 5, 0, 1, 11, 23, 20, 0, 0, 2, 0, 0, 1, 0]' : 0.207766}
{'[2, 0, 6, 0, 6, 5, 0, 1, 11, 23, 20, 0, 0, 2, 0, 0, 1, 0]' : 0.208353}
{'[2, 0, 6, 0, 6, 5, 0, 1, 11, 23, 20, 0, 0, 2, 0, 0, 1, 0]' : 0.207702}
{'[2, 0, 6, 0, 6, 5, 0, 1, 11, 23, 20, 0, 0, 2, 0, 0, 1, 0]' : 0.210198}
{'[2, 0, 6, 0, 6, 5, 0, 1, 11, 23, 20, 0, 0, 2, 0, 0, 1, 0]' : 0.213693}
{'[2, 0, 6, 0, 6, 5, 0, 1, 11, 23, 20, 0, 0, 2, 0, 0, 1, 0]' : 0.21369}
{'[2, 0, 6, 0, 6, 5, 0, 1, 11, 23, 20, 0, 0, 2, 0, 0, 1, 0]' : 0.21432}
{'[2, 0, 6, 0, 6, 5, 0, 1, 11, 23, 20, 0, 0, 2, 0, 0, 1, 0]' : 0.214026}
{'[2, 0, 6, 0, 6, 5, 0, 1, 11, 23, 20, 0, 0, 2, 0, 0, 1, 0]' : 0.215713}
{'[2, 0, 6, 0, 6, 5, 0, 1, 11, 23, 20, 0, 0, 2, 0, 0, 1, 0]' : 0.213849}
{'[2, 0, 6, 0, 6, 5, 0, 1, 11, 23, 20, 0, 0, 2, 0, 0, 1, 0]' : 0.214083}
{'[2, 0, 6, 0, 6, 5, 0, 1, 11, 23, 20, 0, 0, 2, 0, 0, 1, 0]' : 0.213982}
{'[2, 0, 6, 0, 6, 5, 0, 1, 11, 23, 20, 0, 0, 2, 0, 0, 1, 0]' : 0.214619}
{'[2, 0, 6, 0, 6, 5, 0, 1, 11, 23, 20, 0, 0, 2, 0, 0, 1, 0]' : 0.214828}
{'[2, 0, 6, 0, 6, 5, 0, 1, 11, 23, 20, 0, 0, 2, 0, 0, 1, 0]' : 0.213651}
{'[2, 0, 6, 0, 6, 5, 0, 1, 11, 23, 20, 0, 0, 2, 0, 0, 1, 0]' : 0.211159}
{'[2, 0, 6, 0, 6, 5, 0, 1, 11, 23, 20, 0, 0, 2, 0, 0, 1, 0]' : 0.214547}
{'[2, 0, 6, 0, 6, 5, 0, 1, 11, 23, 20, 0, 0, 2, 0, 0, 1, 0]' : 0.215888}
{'[2, 0, 6, 0, 6, 5, 0, 1, 11, 23, 20, 0, 0, 2, 0, 0, 1, 0]' : 0.208805}
{'[2, 0, 6, 0, 6, 5, 0, 1, 11, 23, 20, 0, 0, 2, 0, 0, 1, 0]' : 0.207924}
{'[2, 0, 6, 0, 6, 5, 0, 1, 11, 23, 20, 0, 0, 2, 0, 0, 1, 0]' : 0.210804}
{'[2, 0, 6, 0, 6, 5, 0, 1, 11, 23, 20, 0, 0, 2, 0, 0, 1, 0]' : 0.207825}
{'[2, 0, 6, 0, 6, 5, 0, 1, 11, 23, 20, 0, 0, 2, 0, 0, 1, 0]' : 0.211633}
{'[2, 0, 6, 0, 6, 5, 0, 1, 11, 23, 20, 0, 0, 2, 0, 0, 1, 0]' : 0.208319}
{'[2, 0, 6, 0, 6, 5, 0, 1, 11, 23, 20, 0, 0, 2, 0, 0, 1, 0]' : 0.208165}
{'[2, 0, 6, 0, 6, 5, 0, 1, 11, 23, 20, 0, 0, 2, 0, 0, 1, 0]' : 0.2092}
{'[2, 0, 6, 0, 6, 5, 0, 1, 11, 23, 20, 0, 0, 2, 0, 0, 1, 0]' : 0.208592}

out:
 ["{'[2, 0, 6, 0, 6, 5, 0, 1, 11, 23, 20, 0, 0, 2, 0, 0, 1, 0]' : 0.238913}", "{'[2, 0, 6, 0, 6, 5, 0, 1, 11, 23, 20, 0, 0, 2, 0, 0, 1, 0]' : 0.239685}", "{'[2, 0, 6, 0, 6, 5, 0, 1, 11, 23, 20, 0, 0, 2, 0, 0, 1, 0]' : 0.215955}", "{'[2, 0, 6, 0, 6, 5, 0, 1, 11, 23, 20, 0, 0, 2, 0, 0, 1, 0]' : 0.207766}", "{'[2, 0, 6, 0, 6, 5, 0, 1, 11, 23, 20, 0, 0, 2, 0, 0, 1, 0]' : 0.208353}", "{'[2, 0, 6, 0, 6, 5, 0, 1, 11, 23, 20, 0, 0, 2, 0, 0, 1, 0]' : 0.207702}", "{'[2, 0, 6, 0, 6, 5, 0, 1, 11, 23, 20, 0, 0, 2, 0, 0, 1, 0]' : 0.210198}", "{'[2, 0, 6, 0, 6, 5, 0, 1, 11, 23, 20, 0, 0, 2, 0, 0, 1, 0]' : 0.213693}", "{'[2, 0, 6, 0, 6, 5, 0, 1, 11, 23, 20, 0, 0, 2, 0, 0, 1, 0]' : 0.21369}", "{'[2, 0, 6, 0, 6, 5, 0, 1, 11, 23, 20, 0, 0, 2, 0, 0, 1, 0]' : 0.21432}", "{'[2, 0, 6, 0, 6, 5, 0, 1, 11, 23, 20, 0, 0, 2, 0, 0, 1, 0]' : 0.214026}", "{'[2, 0, 6, 0, 6, 5, 0, 1, 11, 23, 20, 0, 0, 2, 0, 0, 1, 0]' : 0.215713}", "{'[2, 0, 6, 0, 6, 5, 0, 1, 11, 23, 20, 0, 0, 2, 0, 0, 1, 0]' : 0.213849}", "{'[2, 0, 6, 0, 6, 5, 0, 1, 11, 23, 20, 0, 0, 2, 0, 0, 1, 0]' : 0.214083}", "{'[2, 0, 6, 0, 6, 5, 0, 1, 11, 23, 20, 0, 0, 2, 0, 0, 1, 0]' : 0.213982}", "{'[2, 0, 6, 0, 6, 5, 0, 1, 11, 23, 20, 0, 0, 2, 0, 0, 1, 0]' : 0.214619}", "{'[2, 0, 6, 0, 6, 5, 0, 1, 11, 23, 20, 0, 0, 2, 0, 0, 1, 0]' : 0.214828}", "{'[2, 0, 6, 0, 6, 5, 0, 1, 11, 23, 20, 0, 0, 2, 0, 0, 1, 0]' : 0.213651}", "{'[2, 0, 6, 0, 6, 5, 0, 1, 11, 23, 20, 0, 0, 2, 0, 0, 1, 0]' : 0.211159}", "{'[2, 0, 6, 0, 6, 5, 0, 1, 11, 23, 20, 0, 0, 2, 0, 0, 1, 0]' : 0.214547}", "{'[2, 0, 6, 0, 6, 5, 0, 1, 11, 23, 20, 0, 0, 2, 0, 0, 1, 0]' : 0.215888}", "{'[2, 0, 6, 0, 6, 5, 0, 1, 11, 23, 20, 0, 0, 2, 0, 0, 1, 0]' : 0.208805}", "{'[2, 0, 6, 0, 6, 5, 0, 1, 11, 23, 20, 0, 0, 2, 0, 0, 1, 0]' : 0.207924}", "{'[2, 0, 6, 0, 6, 5, 0, 1, 11, 23, 20, 0, 0, 2, 0, 0, 1, 0]' : 0.210804}", "{'[2, 0, 6, 0, 6, 5, 0, 1, 11, 23, 20, 0, 0, 2, 0, 0, 1, 0]' : 0.207825}", "{'[2, 0, 6, 0, 6, 5, 0, 1, 11, 23, 20, 0, 0, 2, 0, 0, 1, 0]' : 0.211633}", "{'[2, 0, 6, 0, 6, 5, 0, 1, 11, 23, 20, 0, 0, 2, 0, 0, 1, 0]' : 0.208319}", "{'[2, 0, 6, 0, 6, 5, 0, 1, 11, 23, 20, 0, 0, 2, 0, 0, 1, 0]' : 0.208165}", "{'[2, 0, 6, 0, 6, 5, 0, 1, 11, 23, 20, 0, 0, 2, 0, 0, 1, 0]' : 0.2092}", "{'[2, 0, 6, 0, 6, 5, 0, 1, 11, 23, 20, 0, 0, 2, 0, 0, 1, 0]' : 0.208592}"]
returning from 'run': {'[2, 0, 6, 0, 6, 5, 0, 1, 11, 23, 20, 0, 0, 2, 0, 0, 1, 0]': ([0.238913, 0.239685, 0.215955, 0.207766, 0.208353, 0.207702, 0.210198, 0.213693, 0.21369, 0.21432, 0.214026, 0.215713, 0.213849, 0.214083, 0.213982, 0.214619, 0.214828, 0.213651, 0.211159, 0.214547, 0.215888, 0.208805, 0.207924, 0.210804, 0.207825, 0.211633, 0.208319, 0.208165, 0.2092, 0.208592], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 6, 0, 6, 5, 0, 1, 11, 23, 20, 0, 0, 2, 0, 0, 1, 0]': ([0.238913, 0.239685, 0.215955, 0.207766, 0.208353, 0.207702, 0.210198, 0.213693, 0.21369, 0.21432, 0.214026, 0.215713, 0.213849, 0.214083, 0.213982, 0.214619, 0.214828, 0.213651, 0.211159, 0.214547, 0.215888, 0.208805, 0.207924, 0.210804, 0.207825, 0.211633, 0.208319, 0.208165, 0.2092, 0.208592], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
Code stats:
        Number of loops: 	87
        Max loop nest depth: 	4
        Additions: 		3826
        Multiplications: 	1650
        Divisions: 		0
        Logical: 		0
        Reads: 			7448
        Writes: 		1280
        Comparisons:		87
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest28.exe __orio_perftest28.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest28.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest28.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest28.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest28.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	37
        Max loop nest depth: 	4
        Additions: 		1446
        Multiplications: 	658
        Divisions: 		0
        Logical: 		0
        Reads: 			3092
        Writes: 		584
        Comparisons:		37
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest29.exe __orio_perftest29.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest29.exe  
Program Test Output: 
{'[0, 0, 4, 2, 2, 0, 1, 0, 15, 13, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.194588}
{'[0, 0, 4, 2, 2, 0, 1, 0, 15, 13, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.19509}
{'[0, 0, 4, 2, 2, 0, 1, 0, 15, 13, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.19102}
{'[0, 0, 4, 2, 2, 0, 1, 0, 15, 13, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.17495}
{'[0, 0, 4, 2, 2, 0, 1, 0, 15, 13, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.17548}
{'[0, 0, 4, 2, 2, 0, 1, 0, 15, 13, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.177789}
{'[0, 0, 4, 2, 2, 0, 1, 0, 15, 13, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.178331}
{'[0, 0, 4, 2, 2, 0, 1, 0, 15, 13, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.175219}
{'[0, 0, 4, 2, 2, 0, 1, 0, 15, 13, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.174976}
{'[0, 0, 4, 2, 2, 0, 1, 0, 15, 13, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.175231}
{'[0, 0, 4, 2, 2, 0, 1, 0, 15, 13, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.174805}
{'[0, 0, 4, 2, 2, 0, 1, 0, 15, 13, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.174719}
{'[0, 0, 4, 2, 2, 0, 1, 0, 15, 13, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.175611}
{'[0, 0, 4, 2, 2, 0, 1, 0, 15, 13, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.173552}
{'[0, 0, 4, 2, 2, 0, 1, 0, 15, 13, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.171384}
{'[0, 0, 4, 2, 2, 0, 1, 0, 15, 13, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.173059}
{'[0, 0, 4, 2, 2, 0, 1, 0, 15, 13, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.174536}
{'[0, 0, 4, 2, 2, 0, 1, 0, 15, 13, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.174823}
{'[0, 0, 4, 2, 2, 0, 1, 0, 15, 13, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.175442}
{'[0, 0, 4, 2, 2, 0, 1, 0, 15, 13, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.174796}
{'[0, 0, 4, 2, 2, 0, 1, 0, 15, 13, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.174523}
{'[0, 0, 4, 2, 2, 0, 1, 0, 15, 13, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.173807}
{'[0, 0, 4, 2, 2, 0, 1, 0, 15, 13, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.174758}
{'[0, 0, 4, 2, 2, 0, 1, 0, 15, 13, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.174738}
{'[0, 0, 4, 2, 2, 0, 1, 0, 15, 13, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.175671}
{'[0, 0, 4, 2, 2, 0, 1, 0, 15, 13, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.17493}
{'[0, 0, 4, 2, 2, 0, 1, 0, 15, 13, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.172882}
{'[0, 0, 4, 2, 2, 0, 1, 0, 15, 13, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.175165}
{'[0, 0, 4, 2, 2, 0, 1, 0, 15, 13, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.174917}
{'[0, 0, 4, 2, 2, 0, 1, 0, 15, 13, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.175451}

out:
 ["{'[0, 0, 4, 2, 2, 0, 1, 0, 15, 13, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.194588}", "{'[0, 0, 4, 2, 2, 0, 1, 0, 15, 13, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.19509}", "{'[0, 0, 4, 2, 2, 0, 1, 0, 15, 13, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.19102}", "{'[0, 0, 4, 2, 2, 0, 1, 0, 15, 13, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.17495}", "{'[0, 0, 4, 2, 2, 0, 1, 0, 15, 13, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.17548}", "{'[0, 0, 4, 2, 2, 0, 1, 0, 15, 13, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.177789}", "{'[0, 0, 4, 2, 2, 0, 1, 0, 15, 13, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.178331}", "{'[0, 0, 4, 2, 2, 0, 1, 0, 15, 13, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.175219}", "{'[0, 0, 4, 2, 2, 0, 1, 0, 15, 13, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.174976}", "{'[0, 0, 4, 2, 2, 0, 1, 0, 15, 13, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.175231}", "{'[0, 0, 4, 2, 2, 0, 1, 0, 15, 13, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.174805}", "{'[0, 0, 4, 2, 2, 0, 1, 0, 15, 13, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.174719}", "{'[0, 0, 4, 2, 2, 0, 1, 0, 15, 13, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.175611}", "{'[0, 0, 4, 2, 2, 0, 1, 0, 15, 13, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.173552}", "{'[0, 0, 4, 2, 2, 0, 1, 0, 15, 13, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.171384}", "{'[0, 0, 4, 2, 2, 0, 1, 0, 15, 13, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.173059}", "{'[0, 0, 4, 2, 2, 0, 1, 0, 15, 13, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.174536}", "{'[0, 0, 4, 2, 2, 0, 1, 0, 15, 13, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.174823}", "{'[0, 0, 4, 2, 2, 0, 1, 0, 15, 13, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.175442}", "{'[0, 0, 4, 2, 2, 0, 1, 0, 15, 13, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.174796}", "{'[0, 0, 4, 2, 2, 0, 1, 0, 15, 13, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.174523}", "{'[0, 0, 4, 2, 2, 0, 1, 0, 15, 13, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.173807}", "{'[0, 0, 4, 2, 2, 0, 1, 0, 15, 13, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.174758}", "{'[0, 0, 4, 2, 2, 0, 1, 0, 15, 13, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.174738}", "{'[0, 0, 4, 2, 2, 0, 1, 0, 15, 13, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.175671}", "{'[0, 0, 4, 2, 2, 0, 1, 0, 15, 13, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.17493}", "{'[0, 0, 4, 2, 2, 0, 1, 0, 15, 13, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.172882}", "{'[0, 0, 4, 2, 2, 0, 1, 0, 15, 13, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.175165}", "{'[0, 0, 4, 2, 2, 0, 1, 0, 15, 13, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.174917}", "{'[0, 0, 4, 2, 2, 0, 1, 0, 15, 13, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.175451}"]
returning from 'run': {'[0, 0, 4, 2, 2, 0, 1, 0, 15, 13, 0, 4, 2, 0, 0, 1, 0, 0]': ([0.194588, 0.19509, 0.19102, 0.17495, 0.17548, 0.177789, 0.178331, 0.175219, 0.174976, 0.175231, 0.174805, 0.174719, 0.175611, 0.173552, 0.171384, 0.173059, 0.174536, 0.174823, 0.175442, 0.174796, 0.174523, 0.173807, 0.174758, 0.174738, 0.175671, 0.17493, 0.172882, 0.175165, 0.174917, 0.175451], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 4, 2, 2, 0, 1, 0, 15, 13, 0, 4, 2, 0, 0, 1, 0, 0]': ([0.194588, 0.19509, 0.19102, 0.17495, 0.17548, 0.177789, 0.178331, 0.175219, 0.174976, 0.175231, 0.174805, 0.174719, 0.175611, 0.173552, 0.171384, 0.173059, 0.174536, 0.174823, 0.175442, 0.174796, 0.174523, 0.173807, 0.174758, 0.174738, 0.175671, 0.17493, 0.172882, 0.175165, 0.174917, 0.175451], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	43
        Max loop nest depth: 	5
        Additions: 		1209
        Multiplications: 	504
        Divisions: 		0
        Logical: 		0
        Reads: 			2519
        Writes: 		495
        Comparisons:		43
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest30.exe __orio_perftest30.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest30.exe  
Program Test Output: 
{'[0, 5, 3, 1, 6, 0, 1, 0, 28, 26, 6, 0, 0, 1, 0, 1, 1, 0]' : 0.172208}
{'[0, 5, 3, 1, 6, 0, 1, 0, 28, 26, 6, 0, 0, 1, 0, 1, 1, 0]' : 0.175262}
{'[0, 5, 3, 1, 6, 0, 1, 0, 28, 26, 6, 0, 0, 1, 0, 1, 1, 0]' : 0.174615}
{'[0, 5, 3, 1, 6, 0, 1, 0, 28, 26, 6, 0, 0, 1, 0, 1, 1, 0]' : 0.174772}
{'[0, 5, 3, 1, 6, 0, 1, 0, 28, 26, 6, 0, 0, 1, 0, 1, 1, 0]' : 0.174669}
{'[0, 5, 3, 1, 6, 0, 1, 0, 28, 26, 6, 0, 0, 1, 0, 1, 1, 0]' : 0.174792}
{'[0, 5, 3, 1, 6, 0, 1, 0, 28, 26, 6, 0, 0, 1, 0, 1, 1, 0]' : 0.175051}
{'[0, 5, 3, 1, 6, 0, 1, 0, 28, 26, 6, 0, 0, 1, 0, 1, 1, 0]' : 0.174949}
{'[0, 5, 3, 1, 6, 0, 1, 0, 28, 26, 6, 0, 0, 1, 0, 1, 1, 0]' : 0.174945}
{'[0, 5, 3, 1, 6, 0, 1, 0, 28, 26, 6, 0, 0, 1, 0, 1, 1, 0]' : 0.178178}
{'[0, 5, 3, 1, 6, 0, 1, 0, 28, 26, 6, 0, 0, 1, 0, 1, 1, 0]' : 0.17893}
{'[0, 5, 3, 1, 6, 0, 1, 0, 28, 26, 6, 0, 0, 1, 0, 1, 1, 0]' : 0.179174}
{'[0, 5, 3, 1, 6, 0, 1, 0, 28, 26, 6, 0, 0, 1, 0, 1, 1, 0]' : 0.174954}
{'[0, 5, 3, 1, 6, 0, 1, 0, 28, 26, 6, 0, 0, 1, 0, 1, 1, 0]' : 0.176361}
{'[0, 5, 3, 1, 6, 0, 1, 0, 28, 26, 6, 0, 0, 1, 0, 1, 1, 0]' : 0.178517}
{'[0, 5, 3, 1, 6, 0, 1, 0, 28, 26, 6, 0, 0, 1, 0, 1, 1, 0]' : 0.174664}
{'[0, 5, 3, 1, 6, 0, 1, 0, 28, 26, 6, 0, 0, 1, 0, 1, 1, 0]' : 0.174972}
{'[0, 5, 3, 1, 6, 0, 1, 0, 28, 26, 6, 0, 0, 1, 0, 1, 1, 0]' : 0.176145}
{'[0, 5, 3, 1, 6, 0, 1, 0, 28, 26, 6, 0, 0, 1, 0, 1, 1, 0]' : 0.179073}
{'[0, 5, 3, 1, 6, 0, 1, 0, 28, 26, 6, 0, 0, 1, 0, 1, 1, 0]' : 0.178879}
{'[0, 5, 3, 1, 6, 0, 1, 0, 28, 26, 6, 0, 0, 1, 0, 1, 1, 0]' : 0.178977}
{'[0, 5, 3, 1, 6, 0, 1, 0, 28, 26, 6, 0, 0, 1, 0, 1, 1, 0]' : 0.179037}
{'[0, 5, 3, 1, 6, 0, 1, 0, 28, 26, 6, 0, 0, 1, 0, 1, 1, 0]' : 0.179156}
{'[0, 5, 3, 1, 6, 0, 1, 0, 28, 26, 6, 0, 0, 1, 0, 1, 1, 0]' : 0.179132}
{'[0, 5, 3, 1, 6, 0, 1, 0, 28, 26, 6, 0, 0, 1, 0, 1, 1, 0]' : 0.178928}
{'[0, 5, 3, 1, 6, 0, 1, 0, 28, 26, 6, 0, 0, 1, 0, 1, 1, 0]' : 0.176817}
{'[0, 5, 3, 1, 6, 0, 1, 0, 28, 26, 6, 0, 0, 1, 0, 1, 1, 0]' : 0.175158}
{'[0, 5, 3, 1, 6, 0, 1, 0, 28, 26, 6, 0, 0, 1, 0, 1, 1, 0]' : 0.17501}
{'[0, 5, 3, 1, 6, 0, 1, 0, 28, 26, 6, 0, 0, 1, 0, 1, 1, 0]' : 0.175061}
{'[0, 5, 3, 1, 6, 0, 1, 0, 28, 26, 6, 0, 0, 1, 0, 1, 1, 0]' : 0.175009}

out:
 ["{'[0, 5, 3, 1, 6, 0, 1, 0, 28, 26, 6, 0, 0, 1, 0, 1, 1, 0]' : 0.172208}", "{'[0, 5, 3, 1, 6, 0, 1, 0, 28, 26, 6, 0, 0, 1, 0, 1, 1, 0]' : 0.175262}", "{'[0, 5, 3, 1, 6, 0, 1, 0, 28, 26, 6, 0, 0, 1, 0, 1, 1, 0]' : 0.174615}", "{'[0, 5, 3, 1, 6, 0, 1, 0, 28, 26, 6, 0, 0, 1, 0, 1, 1, 0]' : 0.174772}", "{'[0, 5, 3, 1, 6, 0, 1, 0, 28, 26, 6, 0, 0, 1, 0, 1, 1, 0]' : 0.174669}", "{'[0, 5, 3, 1, 6, 0, 1, 0, 28, 26, 6, 0, 0, 1, 0, 1, 1, 0]' : 0.174792}", "{'[0, 5, 3, 1, 6, 0, 1, 0, 28, 26, 6, 0, 0, 1, 0, 1, 1, 0]' : 0.175051}", "{'[0, 5, 3, 1, 6, 0, 1, 0, 28, 26, 6, 0, 0, 1, 0, 1, 1, 0]' : 0.174949}", "{'[0, 5, 3, 1, 6, 0, 1, 0, 28, 26, 6, 0, 0, 1, 0, 1, 1, 0]' : 0.174945}", "{'[0, 5, 3, 1, 6, 0, 1, 0, 28, 26, 6, 0, 0, 1, 0, 1, 1, 0]' : 0.178178}", "{'[0, 5, 3, 1, 6, 0, 1, 0, 28, 26, 6, 0, 0, 1, 0, 1, 1, 0]' : 0.17893}", "{'[0, 5, 3, 1, 6, 0, 1, 0, 28, 26, 6, 0, 0, 1, 0, 1, 1, 0]' : 0.179174}", "{'[0, 5, 3, 1, 6, 0, 1, 0, 28, 26, 6, 0, 0, 1, 0, 1, 1, 0]' : 0.174954}", "{'[0, 5, 3, 1, 6, 0, 1, 0, 28, 26, 6, 0, 0, 1, 0, 1, 1, 0]' : 0.176361}", "{'[0, 5, 3, 1, 6, 0, 1, 0, 28, 26, 6, 0, 0, 1, 0, 1, 1, 0]' : 0.178517}", "{'[0, 5, 3, 1, 6, 0, 1, 0, 28, 26, 6, 0, 0, 1, 0, 1, 1, 0]' : 0.174664}", "{'[0, 5, 3, 1, 6, 0, 1, 0, 28, 26, 6, 0, 0, 1, 0, 1, 1, 0]' : 0.174972}", "{'[0, 5, 3, 1, 6, 0, 1, 0, 28, 26, 6, 0, 0, 1, 0, 1, 1, 0]' : 0.176145}", "{'[0, 5, 3, 1, 6, 0, 1, 0, 28, 26, 6, 0, 0, 1, 0, 1, 1, 0]' : 0.179073}", "{'[0, 5, 3, 1, 6, 0, 1, 0, 28, 26, 6, 0, 0, 1, 0, 1, 1, 0]' : 0.178879}", "{'[0, 5, 3, 1, 6, 0, 1, 0, 28, 26, 6, 0, 0, 1, 0, 1, 1, 0]' : 0.178977}", "{'[0, 5, 3, 1, 6, 0, 1, 0, 28, 26, 6, 0, 0, 1, 0, 1, 1, 0]' : 0.179037}", "{'[0, 5, 3, 1, 6, 0, 1, 0, 28, 26, 6, 0, 0, 1, 0, 1, 1, 0]' : 0.179156}", "{'[0, 5, 3, 1, 6, 0, 1, 0, 28, 26, 6, 0, 0, 1, 0, 1, 1, 0]' : 0.179132}", "{'[0, 5, 3, 1, 6, 0, 1, 0, 28, 26, 6, 0, 0, 1, 0, 1, 1, 0]' : 0.178928}", "{'[0, 5, 3, 1, 6, 0, 1, 0, 28, 26, 6, 0, 0, 1, 0, 1, 1, 0]' : 0.176817}", "{'[0, 5, 3, 1, 6, 0, 1, 0, 28, 26, 6, 0, 0, 1, 0, 1, 1, 0]' : 0.175158}", "{'[0, 5, 3, 1, 6, 0, 1, 0, 28, 26, 6, 0, 0, 1, 0, 1, 1, 0]' : 0.17501}", "{'[0, 5, 3, 1, 6, 0, 1, 0, 28, 26, 6, 0, 0, 1, 0, 1, 1, 0]' : 0.175061}", "{'[0, 5, 3, 1, 6, 0, 1, 0, 28, 26, 6, 0, 0, 1, 0, 1, 1, 0]' : 0.175009}"]
returning from 'run': {'[0, 5, 3, 1, 6, 0, 1, 0, 28, 26, 6, 0, 0, 1, 0, 1, 1, 0]': ([0.172208, 0.175262, 0.174615, 0.174772, 0.174669, 0.174792, 0.175051, 0.174949, 0.174945, 0.178178, 0.17893, 0.179174, 0.174954, 0.176361, 0.178517, 0.174664, 0.174972, 0.176145, 0.179073, 0.178879, 0.178977, 0.179037, 0.179156, 0.179132, 0.178928, 0.176817, 0.175158, 0.17501, 0.175061, 0.175009], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 5, 3, 1, 6, 0, 1, 0, 28, 26, 6, 0, 0, 1, 0, 1, 1, 0]': ([0.172208, 0.175262, 0.174615, 0.174772, 0.174669, 0.174792, 0.175051, 0.174949, 0.174945, 0.178178, 0.17893, 0.179174, 0.174954, 0.176361, 0.178517, 0.174664, 0.174972, 0.176145, 0.179073, 0.178879, 0.178977, 0.179037, 0.179156, 0.179132, 0.178928, 0.176817, 0.175158, 0.17501, 0.175061, 0.175009], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	98
        Max loop nest depth: 	5
        Additions: 		7869
        Multiplications: 	1836
        Divisions: 		0
        Logical: 		0
        Reads: 			11681
        Writes: 		1269
        Comparisons:		98
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest31.exe __orio_perftest31.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest31.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest31.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest31.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest31.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = iii
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	5
        Additions: 		640
        Multiplications: 	162
        Divisions: 		0
        Logical: 		0
        Reads: 			1105
        Writes: 		149
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest32.exe __orio_perftest32.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest32.exe  
Program Test Output: 
{'[4, 0, 1, 2, 3, 2, 1, 1, 12, 0, 5, 0, 1, 1, 0, 0, 0, 1]' : 0.104964}
{'[4, 0, 1, 2, 3, 2, 1, 1, 12, 0, 5, 0, 1, 1, 0, 0, 0, 1]' : 0.104862}
{'[4, 0, 1, 2, 3, 2, 1, 1, 12, 0, 5, 0, 1, 1, 0, 0, 0, 1]' : 0.10408}
{'[4, 0, 1, 2, 3, 2, 1, 1, 12, 0, 5, 0, 1, 1, 0, 0, 0, 1]' : 0.103807}
{'[4, 0, 1, 2, 3, 2, 1, 1, 12, 0, 5, 0, 1, 1, 0, 0, 0, 1]' : 0.102215}
{'[4, 0, 1, 2, 3, 2, 1, 1, 12, 0, 5, 0, 1, 1, 0, 0, 0, 1]' : 0.101757}
{'[4, 0, 1, 2, 3, 2, 1, 1, 12, 0, 5, 0, 1, 1, 0, 0, 0, 1]' : 0.101695}
{'[4, 0, 1, 2, 3, 2, 1, 1, 12, 0, 5, 0, 1, 1, 0, 0, 0, 1]' : 0.101591}
{'[4, 0, 1, 2, 3, 2, 1, 1, 12, 0, 5, 0, 1, 1, 0, 0, 0, 1]' : 0.101621}
{'[4, 0, 1, 2, 3, 2, 1, 1, 12, 0, 5, 0, 1, 1, 0, 0, 0, 1]' : 0.101632}
{'[4, 0, 1, 2, 3, 2, 1, 1, 12, 0, 5, 0, 1, 1, 0, 0, 0, 1]' : 0.101394}
{'[4, 0, 1, 2, 3, 2, 1, 1, 12, 0, 5, 0, 1, 1, 0, 0, 0, 1]' : 0.101517}
{'[4, 0, 1, 2, 3, 2, 1, 1, 12, 0, 5, 0, 1, 1, 0, 0, 0, 1]' : 0.101714}
{'[4, 0, 1, 2, 3, 2, 1, 1, 12, 0, 5, 0, 1, 1, 0, 0, 0, 1]' : 0.10177}
{'[4, 0, 1, 2, 3, 2, 1, 1, 12, 0, 5, 0, 1, 1, 0, 0, 0, 1]' : 0.104125}
{'[4, 0, 1, 2, 3, 2, 1, 1, 12, 0, 5, 0, 1, 1, 0, 0, 0, 1]' : 0.104173}
{'[4, 0, 1, 2, 3, 2, 1, 1, 12, 0, 5, 0, 1, 1, 0, 0, 0, 1]' : 0.104162}
{'[4, 0, 1, 2, 3, 2, 1, 1, 12, 0, 5, 0, 1, 1, 0, 0, 0, 1]' : 0.10416}
{'[4, 0, 1, 2, 3, 2, 1, 1, 12, 0, 5, 0, 1, 1, 0, 0, 0, 1]' : 0.10227}
{'[4, 0, 1, 2, 3, 2, 1, 1, 12, 0, 5, 0, 1, 1, 0, 0, 0, 1]' : 0.10425}
{'[4, 0, 1, 2, 3, 2, 1, 1, 12, 0, 5, 0, 1, 1, 0, 0, 0, 1]' : 0.10226}
{'[4, 0, 1, 2, 3, 2, 1, 1, 12, 0, 5, 0, 1, 1, 0, 0, 0, 1]' : 0.101595}
{'[4, 0, 1, 2, 3, 2, 1, 1, 12, 0, 5, 0, 1, 1, 0, 0, 0, 1]' : 0.101392}
{'[4, 0, 1, 2, 3, 2, 1, 1, 12, 0, 5, 0, 1, 1, 0, 0, 0, 1]' : 0.10171}
{'[4, 0, 1, 2, 3, 2, 1, 1, 12, 0, 5, 0, 1, 1, 0, 0, 0, 1]' : 0.101682}
{'[4, 0, 1, 2, 3, 2, 1, 1, 12, 0, 5, 0, 1, 1, 0, 0, 0, 1]' : 0.10161}
{'[4, 0, 1, 2, 3, 2, 1, 1, 12, 0, 5, 0, 1, 1, 0, 0, 0, 1]' : 0.101915}
{'[4, 0, 1, 2, 3, 2, 1, 1, 12, 0, 5, 0, 1, 1, 0, 0, 0, 1]' : 0.101842}
{'[4, 0, 1, 2, 3, 2, 1, 1, 12, 0, 5, 0, 1, 1, 0, 0, 0, 1]' : 0.101726}
{'[4, 0, 1, 2, 3, 2, 1, 1, 12, 0, 5, 0, 1, 1, 0, 0, 0, 1]' : 0.0996459}

out:
 ["{'[4, 0, 1, 2, 3, 2, 1, 1, 12, 0, 5, 0, 1, 1, 0, 0, 0, 1]' : 0.104964}", "{'[4, 0, 1, 2, 3, 2, 1, 1, 12, 0, 5, 0, 1, 1, 0, 0, 0, 1]' : 0.104862}", "{'[4, 0, 1, 2, 3, 2, 1, 1, 12, 0, 5, 0, 1, 1, 0, 0, 0, 1]' : 0.10408}", "{'[4, 0, 1, 2, 3, 2, 1, 1, 12, 0, 5, 0, 1, 1, 0, 0, 0, 1]' : 0.103807}", "{'[4, 0, 1, 2, 3, 2, 1, 1, 12, 0, 5, 0, 1, 1, 0, 0, 0, 1]' : 0.102215}", "{'[4, 0, 1, 2, 3, 2, 1, 1, 12, 0, 5, 0, 1, 1, 0, 0, 0, 1]' : 0.101757}", "{'[4, 0, 1, 2, 3, 2, 1, 1, 12, 0, 5, 0, 1, 1, 0, 0, 0, 1]' : 0.101695}", "{'[4, 0, 1, 2, 3, 2, 1, 1, 12, 0, 5, 0, 1, 1, 0, 0, 0, 1]' : 0.101591}", "{'[4, 0, 1, 2, 3, 2, 1, 1, 12, 0, 5, 0, 1, 1, 0, 0, 0, 1]' : 0.101621}", "{'[4, 0, 1, 2, 3, 2, 1, 1, 12, 0, 5, 0, 1, 1, 0, 0, 0, 1]' : 0.101632}", "{'[4, 0, 1, 2, 3, 2, 1, 1, 12, 0, 5, 0, 1, 1, 0, 0, 0, 1]' : 0.101394}", "{'[4, 0, 1, 2, 3, 2, 1, 1, 12, 0, 5, 0, 1, 1, 0, 0, 0, 1]' : 0.101517}", "{'[4, 0, 1, 2, 3, 2, 1, 1, 12, 0, 5, 0, 1, 1, 0, 0, 0, 1]' : 0.101714}", "{'[4, 0, 1, 2, 3, 2, 1, 1, 12, 0, 5, 0, 1, 1, 0, 0, 0, 1]' : 0.10177}", "{'[4, 0, 1, 2, 3, 2, 1, 1, 12, 0, 5, 0, 1, 1, 0, 0, 0, 1]' : 0.104125}", "{'[4, 0, 1, 2, 3, 2, 1, 1, 12, 0, 5, 0, 1, 1, 0, 0, 0, 1]' : 0.104173}", "{'[4, 0, 1, 2, 3, 2, 1, 1, 12, 0, 5, 0, 1, 1, 0, 0, 0, 1]' : 0.104162}", "{'[4, 0, 1, 2, 3, 2, 1, 1, 12, 0, 5, 0, 1, 1, 0, 0, 0, 1]' : 0.10416}", "{'[4, 0, 1, 2, 3, 2, 1, 1, 12, 0, 5, 0, 1, 1, 0, 0, 0, 1]' : 0.10227}", "{'[4, 0, 1, 2, 3, 2, 1, 1, 12, 0, 5, 0, 1, 1, 0, 0, 0, 1]' : 0.10425}", "{'[4, 0, 1, 2, 3, 2, 1, 1, 12, 0, 5, 0, 1, 1, 0, 0, 0, 1]' : 0.10226}", "{'[4, 0, 1, 2, 3, 2, 1, 1, 12, 0, 5, 0, 1, 1, 0, 0, 0, 1]' : 0.101595}", "{'[4, 0, 1, 2, 3, 2, 1, 1, 12, 0, 5, 0, 1, 1, 0, 0, 0, 1]' : 0.101392}", "{'[4, 0, 1, 2, 3, 2, 1, 1, 12, 0, 5, 0, 1, 1, 0, 0, 0, 1]' : 0.10171}", "{'[4, 0, 1, 2, 3, 2, 1, 1, 12, 0, 5, 0, 1, 1, 0, 0, 0, 1]' : 0.101682}", "{'[4, 0, 1, 2, 3, 2, 1, 1, 12, 0, 5, 0, 1, 1, 0, 0, 0, 1]' : 0.10161}", "{'[4, 0, 1, 2, 3, 2, 1, 1, 12, 0, 5, 0, 1, 1, 0, 0, 0, 1]' : 0.101915}", "{'[4, 0, 1, 2, 3, 2, 1, 1, 12, 0, 5, 0, 1, 1, 0, 0, 0, 1]' : 0.101842}", "{'[4, 0, 1, 2, 3, 2, 1, 1, 12, 0, 5, 0, 1, 1, 0, 0, 0, 1]' : 0.101726}", "{'[4, 0, 1, 2, 3, 2, 1, 1, 12, 0, 5, 0, 1, 1, 0, 0, 0, 1]' : 0.0996459}"]
returning from 'run': {'[4, 0, 1, 2, 3, 2, 1, 1, 12, 0, 5, 0, 1, 1, 0, 0, 0, 1]': ([0.104964, 0.104862, 0.10408, 0.103807, 0.102215, 0.101757, 0.101695, 0.101591, 0.101621, 0.101632, 0.101394, 0.101517, 0.101714, 0.10177, 0.104125, 0.104173, 0.104162, 0.10416, 0.10227, 0.10425, 0.10226, 0.101595, 0.101392, 0.10171, 0.101682, 0.10161, 0.101915, 0.101842, 0.101726, 0.0996459], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 0, 1, 2, 3, 2, 1, 1, 12, 0, 5, 0, 1, 1, 0, 0, 0, 1]': ([0.104964, 0.104862, 0.10408, 0.103807, 0.102215, 0.101757, 0.101695, 0.101591, 0.101621, 0.101632, 0.101394, 0.101517, 0.101714, 0.10177, 0.104125, 0.104173, 0.104162, 0.10416, 0.10227, 0.10425, 0.10226, 0.101595, 0.101392, 0.10171, 0.101682, 0.10161, 0.101915, 0.101842, 0.101726, 0.0996459], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		241
        Multiplications: 	70
        Divisions: 		0
        Logical: 		0
        Reads: 			520
        Writes: 		75
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest33.exe __orio_perftest33.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest33.exe  
Program Test Output: 
{'[6, 0, 1, 6, 6, 6, 1, 1, 3, 0, 25, 1, 0, 0, 1, 0, 1, 0]' : 0.339573}
{'[6, 0, 1, 6, 6, 6, 1, 1, 3, 0, 25, 1, 0, 0, 1, 0, 1, 0]' : 0.305423}
{'[6, 0, 1, 6, 6, 6, 1, 1, 3, 0, 25, 1, 0, 0, 1, 0, 1, 0]' : 0.301754}
{'[6, 0, 1, 6, 6, 6, 1, 1, 3, 0, 25, 1, 0, 0, 1, 0, 1, 0]' : 0.301884}
{'[6, 0, 1, 6, 6, 6, 1, 1, 3, 0, 25, 1, 0, 0, 1, 0, 1, 0]' : 0.295233}
{'[6, 0, 1, 6, 6, 6, 1, 1, 3, 0, 25, 1, 0, 0, 1, 0, 1, 0]' : 0.292583}
{'[6, 0, 1, 6, 6, 6, 1, 1, 3, 0, 25, 1, 0, 0, 1, 0, 1, 0]' : 0.297253}
{'[6, 0, 1, 6, 6, 6, 1, 1, 3, 0, 25, 1, 0, 0, 1, 0, 1, 0]' : 0.296462}
{'[6, 0, 1, 6, 6, 6, 1, 1, 3, 0, 25, 1, 0, 0, 1, 0, 1, 0]' : 0.300129}
{'[6, 0, 1, 6, 6, 6, 1, 1, 3, 0, 25, 1, 0, 0, 1, 0, 1, 0]' : 0.301737}
{'[6, 0, 1, 6, 6, 6, 1, 1, 3, 0, 25, 1, 0, 0, 1, 0, 1, 0]' : 0.301723}
{'[6, 0, 1, 6, 6, 6, 1, 1, 3, 0, 25, 1, 0, 0, 1, 0, 1, 0]' : 0.30009}
{'[6, 0, 1, 6, 6, 6, 1, 1, 3, 0, 25, 1, 0, 0, 1, 0, 1, 0]' : 0.293183}
{'[6, 0, 1, 6, 6, 6, 1, 1, 3, 0, 25, 1, 0, 0, 1, 0, 1, 0]' : 0.292986}
{'[6, 0, 1, 6, 6, 6, 1, 1, 3, 0, 25, 1, 0, 0, 1, 0, 1, 0]' : 0.297108}
{'[6, 0, 1, 6, 6, 6, 1, 1, 3, 0, 25, 1, 0, 0, 1, 0, 1, 0]' : 0.301707}
{'[6, 0, 1, 6, 6, 6, 1, 1, 3, 0, 25, 1, 0, 0, 1, 0, 1, 0]' : 0.294351}
{'[6, 0, 1, 6, 6, 6, 1, 1, 3, 0, 25, 1, 0, 0, 1, 0, 1, 0]' : 0.292567}
{'[6, 0, 1, 6, 6, 6, 1, 1, 3, 0, 25, 1, 0, 0, 1, 0, 1, 0]' : 0.289971}
{'[6, 0, 1, 6, 6, 6, 1, 1, 3, 0, 25, 1, 0, 0, 1, 0, 1, 0]' : 0.292517}
{'[6, 0, 1, 6, 6, 6, 1, 1, 3, 0, 25, 1, 0, 0, 1, 0, 1, 0]' : 0.292828}
{'[6, 0, 1, 6, 6, 6, 1, 1, 3, 0, 25, 1, 0, 0, 1, 0, 1, 0]' : 0.295574}
{'[6, 0, 1, 6, 6, 6, 1, 1, 3, 0, 25, 1, 0, 0, 1, 0, 1, 0]' : 0.301728}
{'[6, 0, 1, 6, 6, 6, 1, 1, 3, 0, 25, 1, 0, 0, 1, 0, 1, 0]' : 0.301596}
{'[6, 0, 1, 6, 6, 6, 1, 1, 3, 0, 25, 1, 0, 0, 1, 0, 1, 0]' : 0.301415}
{'[6, 0, 1, 6, 6, 6, 1, 1, 3, 0, 25, 1, 0, 0, 1, 0, 1, 0]' : 0.301416}
{'[6, 0, 1, 6, 6, 6, 1, 1, 3, 0, 25, 1, 0, 0, 1, 0, 1, 0]' : 0.301545}
{'[6, 0, 1, 6, 6, 6, 1, 1, 3, 0, 25, 1, 0, 0, 1, 0, 1, 0]' : 0.301381}
{'[6, 0, 1, 6, 6, 6, 1, 1, 3, 0, 25, 1, 0, 0, 1, 0, 1, 0]' : 0.301488}
{'[6, 0, 1, 6, 6, 6, 1, 1, 3, 0, 25, 1, 0, 0, 1, 0, 1, 0]' : 0.301449}

out:
 ["{'[6, 0, 1, 6, 6, 6, 1, 1, 3, 0, 25, 1, 0, 0, 1, 0, 1, 0]' : 0.339573}", "{'[6, 0, 1, 6, 6, 6, 1, 1, 3, 0, 25, 1, 0, 0, 1, 0, 1, 0]' : 0.305423}", "{'[6, 0, 1, 6, 6, 6, 1, 1, 3, 0, 25, 1, 0, 0, 1, 0, 1, 0]' : 0.301754}", "{'[6, 0, 1, 6, 6, 6, 1, 1, 3, 0, 25, 1, 0, 0, 1, 0, 1, 0]' : 0.301884}", "{'[6, 0, 1, 6, 6, 6, 1, 1, 3, 0, 25, 1, 0, 0, 1, 0, 1, 0]' : 0.295233}", "{'[6, 0, 1, 6, 6, 6, 1, 1, 3, 0, 25, 1, 0, 0, 1, 0, 1, 0]' : 0.292583}", "{'[6, 0, 1, 6, 6, 6, 1, 1, 3, 0, 25, 1, 0, 0, 1, 0, 1, 0]' : 0.297253}", "{'[6, 0, 1, 6, 6, 6, 1, 1, 3, 0, 25, 1, 0, 0, 1, 0, 1, 0]' : 0.296462}", "{'[6, 0, 1, 6, 6, 6, 1, 1, 3, 0, 25, 1, 0, 0, 1, 0, 1, 0]' : 0.300129}", "{'[6, 0, 1, 6, 6, 6, 1, 1, 3, 0, 25, 1, 0, 0, 1, 0, 1, 0]' : 0.301737}", "{'[6, 0, 1, 6, 6, 6, 1, 1, 3, 0, 25, 1, 0, 0, 1, 0, 1, 0]' : 0.301723}", "{'[6, 0, 1, 6, 6, 6, 1, 1, 3, 0, 25, 1, 0, 0, 1, 0, 1, 0]' : 0.30009}", "{'[6, 0, 1, 6, 6, 6, 1, 1, 3, 0, 25, 1, 0, 0, 1, 0, 1, 0]' : 0.293183}", "{'[6, 0, 1, 6, 6, 6, 1, 1, 3, 0, 25, 1, 0, 0, 1, 0, 1, 0]' : 0.292986}", "{'[6, 0, 1, 6, 6, 6, 1, 1, 3, 0, 25, 1, 0, 0, 1, 0, 1, 0]' : 0.297108}", "{'[6, 0, 1, 6, 6, 6, 1, 1, 3, 0, 25, 1, 0, 0, 1, 0, 1, 0]' : 0.301707}", "{'[6, 0, 1, 6, 6, 6, 1, 1, 3, 0, 25, 1, 0, 0, 1, 0, 1, 0]' : 0.294351}", "{'[6, 0, 1, 6, 6, 6, 1, 1, 3, 0, 25, 1, 0, 0, 1, 0, 1, 0]' : 0.292567}", "{'[6, 0, 1, 6, 6, 6, 1, 1, 3, 0, 25, 1, 0, 0, 1, 0, 1, 0]' : 0.289971}", "{'[6, 0, 1, 6, 6, 6, 1, 1, 3, 0, 25, 1, 0, 0, 1, 0, 1, 0]' : 0.292517}", "{'[6, 0, 1, 6, 6, 6, 1, 1, 3, 0, 25, 1, 0, 0, 1, 0, 1, 0]' : 0.292828}", "{'[6, 0, 1, 6, 6, 6, 1, 1, 3, 0, 25, 1, 0, 0, 1, 0, 1, 0]' : 0.295574}", "{'[6, 0, 1, 6, 6, 6, 1, 1, 3, 0, 25, 1, 0, 0, 1, 0, 1, 0]' : 0.301728}", "{'[6, 0, 1, 6, 6, 6, 1, 1, 3, 0, 25, 1, 0, 0, 1, 0, 1, 0]' : 0.301596}", "{'[6, 0, 1, 6, 6, 6, 1, 1, 3, 0, 25, 1, 0, 0, 1, 0, 1, 0]' : 0.301415}", "{'[6, 0, 1, 6, 6, 6, 1, 1, 3, 0, 25, 1, 0, 0, 1, 0, 1, 0]' : 0.301416}", "{'[6, 0, 1, 6, 6, 6, 1, 1, 3, 0, 25, 1, 0, 0, 1, 0, 1, 0]' : 0.301545}", "{'[6, 0, 1, 6, 6, 6, 1, 1, 3, 0, 25, 1, 0, 0, 1, 0, 1, 0]' : 0.301381}", "{'[6, 0, 1, 6, 6, 6, 1, 1, 3, 0, 25, 1, 0, 0, 1, 0, 1, 0]' : 0.301488}", "{'[6, 0, 1, 6, 6, 6, 1, 1, 3, 0, 25, 1, 0, 0, 1, 0, 1, 0]' : 0.301449}"]
returning from 'run': {'[6, 0, 1, 6, 6, 6, 1, 1, 3, 0, 25, 1, 0, 0, 1, 0, 1, 0]': ([0.339573, 0.305423, 0.301754, 0.301884, 0.295233, 0.292583, 0.297253, 0.296462, 0.300129, 0.301737, 0.301723, 0.30009, 0.293183, 0.292986, 0.297108, 0.301707, 0.294351, 0.292567, 0.289971, 0.292517, 0.292828, 0.295574, 0.301728, 0.301596, 0.301415, 0.301416, 0.301545, 0.301381, 0.301488, 0.301449], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 1, 6, 6, 6, 1, 1, 3, 0, 25, 1, 0, 0, 1, 0, 1, 0]': ([0.339573, 0.305423, 0.301754, 0.301884, 0.295233, 0.292583, 0.297253, 0.296462, 0.300129, 0.301737, 0.301723, 0.30009, 0.293183, 0.292986, 0.297108, 0.301707, 0.294351, 0.292567, 0.289971, 0.292517, 0.292828, 0.295574, 0.301728, 0.301596, 0.301415, 0.301416, 0.301545, 0.301381, 0.301488, 0.301449], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	5
        Additions: 		1012
        Multiplications: 	310
        Divisions: 		0
        Logical: 		0
        Reads: 			1714
        Writes: 		213
        Comparisons:		16
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest34.exe __orio_perftest34.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest34.exe  
Program Test Output: 
{'[2, 1, 6, 1, 0, 0, 0, 0, 16, 3, 0, 28, 0, 0, 0, 0, 1, 0]' : 0.148662}
{'[2, 1, 6, 1, 0, 0, 0, 0, 16, 3, 0, 28, 0, 0, 0, 0, 1, 0]' : 0.148519}
{'[2, 1, 6, 1, 0, 0, 0, 0, 16, 3, 0, 28, 0, 0, 0, 0, 1, 0]' : 0.148533}
{'[2, 1, 6, 1, 0, 0, 0, 0, 16, 3, 0, 28, 0, 0, 0, 0, 1, 0]' : 0.148524}
{'[2, 1, 6, 1, 0, 0, 0, 0, 16, 3, 0, 28, 0, 0, 0, 0, 1, 0]' : 0.148533}
{'[2, 1, 6, 1, 0, 0, 0, 0, 16, 3, 0, 28, 0, 0, 0, 0, 1, 0]' : 0.148545}
{'[2, 1, 6, 1, 0, 0, 0, 0, 16, 3, 0, 28, 0, 0, 0, 0, 1, 0]' : 0.148636}
{'[2, 1, 6, 1, 0, 0, 0, 0, 16, 3, 0, 28, 0, 0, 0, 0, 1, 0]' : 0.148545}
{'[2, 1, 6, 1, 0, 0, 0, 0, 16, 3, 0, 28, 0, 0, 0, 0, 1, 0]' : 0.148564}
{'[2, 1, 6, 1, 0, 0, 0, 0, 16, 3, 0, 28, 0, 0, 0, 0, 1, 0]' : 0.148576}
{'[2, 1, 6, 1, 0, 0, 0, 0, 16, 3, 0, 28, 0, 0, 0, 0, 1, 0]' : 0.14853}
{'[2, 1, 6, 1, 0, 0, 0, 0, 16, 3, 0, 28, 0, 0, 0, 0, 1, 0]' : 0.148552}
{'[2, 1, 6, 1, 0, 0, 0, 0, 16, 3, 0, 28, 0, 0, 0, 0, 1, 0]' : 0.148642}
{'[2, 1, 6, 1, 0, 0, 0, 0, 16, 3, 0, 28, 0, 0, 0, 0, 1, 0]' : 0.148758}
{'[2, 1, 6, 1, 0, 0, 0, 0, 16, 3, 0, 28, 0, 0, 0, 0, 1, 0]' : 0.145905}
{'[2, 1, 6, 1, 0, 0, 0, 0, 16, 3, 0, 28, 0, 0, 0, 0, 1, 0]' : 0.144305}
{'[2, 1, 6, 1, 0, 0, 0, 0, 16, 3, 0, 28, 0, 0, 0, 0, 1, 0]' : 0.144515}
{'[2, 1, 6, 1, 0, 0, 0, 0, 16, 3, 0, 28, 0, 0, 0, 0, 1, 0]' : 0.142049}
{'[2, 1, 6, 1, 0, 0, 0, 0, 16, 3, 0, 28, 0, 0, 0, 0, 1, 0]' : 0.144306}
{'[2, 1, 6, 1, 0, 0, 0, 0, 16, 3, 0, 28, 0, 0, 0, 0, 1, 0]' : 0.144769}
{'[2, 1, 6, 1, 0, 0, 0, 0, 16, 3, 0, 28, 0, 0, 0, 0, 1, 0]' : 0.148573}
{'[2, 1, 6, 1, 0, 0, 0, 0, 16, 3, 0, 28, 0, 0, 0, 0, 1, 0]' : 0.148536}
{'[2, 1, 6, 1, 0, 0, 0, 0, 16, 3, 0, 28, 0, 0, 0, 0, 1, 0]' : 0.148523}
{'[2, 1, 6, 1, 0, 0, 0, 0, 16, 3, 0, 28, 0, 0, 0, 0, 1, 0]' : 0.14852}
{'[2, 1, 6, 1, 0, 0, 0, 0, 16, 3, 0, 28, 0, 0, 0, 0, 1, 0]' : 0.148557}
{'[2, 1, 6, 1, 0, 0, 0, 0, 16, 3, 0, 28, 0, 0, 0, 0, 1, 0]' : 0.148556}
{'[2, 1, 6, 1, 0, 0, 0, 0, 16, 3, 0, 28, 0, 0, 0, 0, 1, 0]' : 0.14873}
{'[2, 1, 6, 1, 0, 0, 0, 0, 16, 3, 0, 28, 0, 0, 0, 0, 1, 0]' : 0.148752}
{'[2, 1, 6, 1, 0, 0, 0, 0, 16, 3, 0, 28, 0, 0, 0, 0, 1, 0]' : 0.148659}
{'[2, 1, 6, 1, 0, 0, 0, 0, 16, 3, 0, 28, 0, 0, 0, 0, 1, 0]' : 0.148576}

out:
 ["{'[2, 1, 6, 1, 0, 0, 0, 0, 16, 3, 0, 28, 0, 0, 0, 0, 1, 0]' : 0.148662}", "{'[2, 1, 6, 1, 0, 0, 0, 0, 16, 3, 0, 28, 0, 0, 0, 0, 1, 0]' : 0.148519}", "{'[2, 1, 6, 1, 0, 0, 0, 0, 16, 3, 0, 28, 0, 0, 0, 0, 1, 0]' : 0.148533}", "{'[2, 1, 6, 1, 0, 0, 0, 0, 16, 3, 0, 28, 0, 0, 0, 0, 1, 0]' : 0.148524}", "{'[2, 1, 6, 1, 0, 0, 0, 0, 16, 3, 0, 28, 0, 0, 0, 0, 1, 0]' : 0.148533}", "{'[2, 1, 6, 1, 0, 0, 0, 0, 16, 3, 0, 28, 0, 0, 0, 0, 1, 0]' : 0.148545}", "{'[2, 1, 6, 1, 0, 0, 0, 0, 16, 3, 0, 28, 0, 0, 0, 0, 1, 0]' : 0.148636}", "{'[2, 1, 6, 1, 0, 0, 0, 0, 16, 3, 0, 28, 0, 0, 0, 0, 1, 0]' : 0.148545}", "{'[2, 1, 6, 1, 0, 0, 0, 0, 16, 3, 0, 28, 0, 0, 0, 0, 1, 0]' : 0.148564}", "{'[2, 1, 6, 1, 0, 0, 0, 0, 16, 3, 0, 28, 0, 0, 0, 0, 1, 0]' : 0.148576}", "{'[2, 1, 6, 1, 0, 0, 0, 0, 16, 3, 0, 28, 0, 0, 0, 0, 1, 0]' : 0.14853}", "{'[2, 1, 6, 1, 0, 0, 0, 0, 16, 3, 0, 28, 0, 0, 0, 0, 1, 0]' : 0.148552}", "{'[2, 1, 6, 1, 0, 0, 0, 0, 16, 3, 0, 28, 0, 0, 0, 0, 1, 0]' : 0.148642}", "{'[2, 1, 6, 1, 0, 0, 0, 0, 16, 3, 0, 28, 0, 0, 0, 0, 1, 0]' : 0.148758}", "{'[2, 1, 6, 1, 0, 0, 0, 0, 16, 3, 0, 28, 0, 0, 0, 0, 1, 0]' : 0.145905}", "{'[2, 1, 6, 1, 0, 0, 0, 0, 16, 3, 0, 28, 0, 0, 0, 0, 1, 0]' : 0.144305}", "{'[2, 1, 6, 1, 0, 0, 0, 0, 16, 3, 0, 28, 0, 0, 0, 0, 1, 0]' : 0.144515}", "{'[2, 1, 6, 1, 0, 0, 0, 0, 16, 3, 0, 28, 0, 0, 0, 0, 1, 0]' : 0.142049}", "{'[2, 1, 6, 1, 0, 0, 0, 0, 16, 3, 0, 28, 0, 0, 0, 0, 1, 0]' : 0.144306}", "{'[2, 1, 6, 1, 0, 0, 0, 0, 16, 3, 0, 28, 0, 0, 0, 0, 1, 0]' : 0.144769}", "{'[2, 1, 6, 1, 0, 0, 0, 0, 16, 3, 0, 28, 0, 0, 0, 0, 1, 0]' : 0.148573}", "{'[2, 1, 6, 1, 0, 0, 0, 0, 16, 3, 0, 28, 0, 0, 0, 0, 1, 0]' : 0.148536}", "{'[2, 1, 6, 1, 0, 0, 0, 0, 16, 3, 0, 28, 0, 0, 0, 0, 1, 0]' : 0.148523}", "{'[2, 1, 6, 1, 0, 0, 0, 0, 16, 3, 0, 28, 0, 0, 0, 0, 1, 0]' : 0.14852}", "{'[2, 1, 6, 1, 0, 0, 0, 0, 16, 3, 0, 28, 0, 0, 0, 0, 1, 0]' : 0.148557}", "{'[2, 1, 6, 1, 0, 0, 0, 0, 16, 3, 0, 28, 0, 0, 0, 0, 1, 0]' : 0.148556}", "{'[2, 1, 6, 1, 0, 0, 0, 0, 16, 3, 0, 28, 0, 0, 0, 0, 1, 0]' : 0.14873}", "{'[2, 1, 6, 1, 0, 0, 0, 0, 16, 3, 0, 28, 0, 0, 0, 0, 1, 0]' : 0.148752}", "{'[2, 1, 6, 1, 0, 0, 0, 0, 16, 3, 0, 28, 0, 0, 0, 0, 1, 0]' : 0.148659}", "{'[2, 1, 6, 1, 0, 0, 0, 0, 16, 3, 0, 28, 0, 0, 0, 0, 1, 0]' : 0.148576}"]
returning from 'run': {'[2, 1, 6, 1, 0, 0, 0, 0, 16, 3, 0, 28, 0, 0, 0, 0, 1, 0]': ([0.148662, 0.148519, 0.148533, 0.148524, 0.148533, 0.148545, 0.148636, 0.148545, 0.148564, 0.148576, 0.14853, 0.148552, 0.148642, 0.148758, 0.145905, 0.144305, 0.144515, 0.142049, 0.144306, 0.144769, 0.148573, 0.148536, 0.148523, 0.14852, 0.148557, 0.148556, 0.14873, 0.148752, 0.148659, 0.148576], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 1, 6, 1, 0, 0, 0, 0, 16, 3, 0, 28, 0, 0, 0, 0, 1, 0]': ([0.148662, 0.148519, 0.148533, 0.148524, 0.148533, 0.148545, 0.148636, 0.148545, 0.148564, 0.148576, 0.14853, 0.148552, 0.148642, 0.148758, 0.145905, 0.144305, 0.144515, 0.142049, 0.144306, 0.144769, 0.148573, 0.148536, 0.148523, 0.14852, 0.148557, 0.148556, 0.14873, 0.148752, 0.148659, 0.148576], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	34
        Max loop nest depth: 	6
        Additions: 		4124
        Multiplications: 	1260
        Divisions: 		0
        Logical: 		0
        Reads: 			6616
        Writes: 		749
        Comparisons:		34
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest35.exe __orio_perftest35.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest35.exe  
Program Test Output: 
{'[4, 1, 0, 3, 1, 0, 0, 1, 2, 8, 0, 28, 0, 2, 0, 0, 1, 1]' : 0.12001}
{'[4, 1, 0, 3, 1, 0, 0, 1, 2, 8, 0, 28, 0, 2, 0, 0, 1, 1]' : 0.119948}
{'[4, 1, 0, 3, 1, 0, 0, 1, 2, 8, 0, 28, 0, 2, 0, 0, 1, 1]' : 0.118198}
{'[4, 1, 0, 3, 1, 0, 0, 1, 2, 8, 0, 28, 0, 2, 0, 0, 1, 1]' : 0.117278}
{'[4, 1, 0, 3, 1, 0, 0, 1, 2, 8, 0, 28, 0, 2, 0, 0, 1, 1]' : 0.117333}
{'[4, 1, 0, 3, 1, 0, 0, 1, 2, 8, 0, 28, 0, 2, 0, 0, 1, 1]' : 0.117745}
{'[4, 1, 0, 3, 1, 0, 0, 1, 2, 8, 0, 28, 0, 2, 0, 0, 1, 1]' : 0.1174}
{'[4, 1, 0, 3, 1, 0, 0, 1, 2, 8, 0, 28, 0, 2, 0, 0, 1, 1]' : 0.117143}
{'[4, 1, 0, 3, 1, 0, 0, 1, 2, 8, 0, 28, 0, 2, 0, 0, 1, 1]' : 0.117218}
{'[4, 1, 0, 3, 1, 0, 0, 1, 2, 8, 0, 28, 0, 2, 0, 0, 1, 1]' : 0.117281}
{'[4, 1, 0, 3, 1, 0, 0, 1, 2, 8, 0, 28, 0, 2, 0, 0, 1, 1]' : 0.118257}
{'[4, 1, 0, 3, 1, 0, 0, 1, 2, 8, 0, 28, 0, 2, 0, 0, 1, 1]' : 0.119786}
{'[4, 1, 0, 3, 1, 0, 0, 1, 2, 8, 0, 28, 0, 2, 0, 0, 1, 1]' : 0.119852}
{'[4, 1, 0, 3, 1, 0, 0, 1, 2, 8, 0, 28, 0, 2, 0, 0, 1, 1]' : 0.119883}
{'[4, 1, 0, 3, 1, 0, 0, 1, 2, 8, 0, 28, 0, 2, 0, 0, 1, 1]' : 0.11837}
{'[4, 1, 0, 3, 1, 0, 0, 1, 2, 8, 0, 28, 0, 2, 0, 0, 1, 1]' : 0.117436}
{'[4, 1, 0, 3, 1, 0, 0, 1, 2, 8, 0, 28, 0, 2, 0, 0, 1, 1]' : 0.117076}
{'[4, 1, 0, 3, 1, 0, 0, 1, 2, 8, 0, 28, 0, 2, 0, 0, 1, 1]' : 0.117323}
{'[4, 1, 0, 3, 1, 0, 0, 1, 2, 8, 0, 28, 0, 2, 0, 0, 1, 1]' : 0.11744}
{'[4, 1, 0, 3, 1, 0, 0, 1, 2, 8, 0, 28, 0, 2, 0, 0, 1, 1]' : 0.11992}
{'[4, 1, 0, 3, 1, 0, 0, 1, 2, 8, 0, 28, 0, 2, 0, 0, 1, 1]' : 0.119954}
{'[4, 1, 0, 3, 1, 0, 0, 1, 2, 8, 0, 28, 0, 2, 0, 0, 1, 1]' : 0.119995}
{'[4, 1, 0, 3, 1, 0, 0, 1, 2, 8, 0, 28, 0, 2, 0, 0, 1, 1]' : 0.119854}
{'[4, 1, 0, 3, 1, 0, 0, 1, 2, 8, 0, 28, 0, 2, 0, 0, 1, 1]' : 0.119917}
{'[4, 1, 0, 3, 1, 0, 0, 1, 2, 8, 0, 28, 0, 2, 0, 0, 1, 1]' : 0.119742}
{'[4, 1, 0, 3, 1, 0, 0, 1, 2, 8, 0, 28, 0, 2, 0, 0, 1, 1]' : 0.119731}
{'[4, 1, 0, 3, 1, 0, 0, 1, 2, 8, 0, 28, 0, 2, 0, 0, 1, 1]' : 0.12006}
{'[4, 1, 0, 3, 1, 0, 0, 1, 2, 8, 0, 28, 0, 2, 0, 0, 1, 1]' : 0.120031}
{'[4, 1, 0, 3, 1, 0, 0, 1, 2, 8, 0, 28, 0, 2, 0, 0, 1, 1]' : 0.119772}
{'[4, 1, 0, 3, 1, 0, 0, 1, 2, 8, 0, 28, 0, 2, 0, 0, 1, 1]' : 0.119876}

out:
 ["{'[4, 1, 0, 3, 1, 0, 0, 1, 2, 8, 0, 28, 0, 2, 0, 0, 1, 1]' : 0.12001}", "{'[4, 1, 0, 3, 1, 0, 0, 1, 2, 8, 0, 28, 0, 2, 0, 0, 1, 1]' : 0.119948}", "{'[4, 1, 0, 3, 1, 0, 0, 1, 2, 8, 0, 28, 0, 2, 0, 0, 1, 1]' : 0.118198}", "{'[4, 1, 0, 3, 1, 0, 0, 1, 2, 8, 0, 28, 0, 2, 0, 0, 1, 1]' : 0.117278}", "{'[4, 1, 0, 3, 1, 0, 0, 1, 2, 8, 0, 28, 0, 2, 0, 0, 1, 1]' : 0.117333}", "{'[4, 1, 0, 3, 1, 0, 0, 1, 2, 8, 0, 28, 0, 2, 0, 0, 1, 1]' : 0.117745}", "{'[4, 1, 0, 3, 1, 0, 0, 1, 2, 8, 0, 28, 0, 2, 0, 0, 1, 1]' : 0.1174}", "{'[4, 1, 0, 3, 1, 0, 0, 1, 2, 8, 0, 28, 0, 2, 0, 0, 1, 1]' : 0.117143}", "{'[4, 1, 0, 3, 1, 0, 0, 1, 2, 8, 0, 28, 0, 2, 0, 0, 1, 1]' : 0.117218}", "{'[4, 1, 0, 3, 1, 0, 0, 1, 2, 8, 0, 28, 0, 2, 0, 0, 1, 1]' : 0.117281}", "{'[4, 1, 0, 3, 1, 0, 0, 1, 2, 8, 0, 28, 0, 2, 0, 0, 1, 1]' : 0.118257}", "{'[4, 1, 0, 3, 1, 0, 0, 1, 2, 8, 0, 28, 0, 2, 0, 0, 1, 1]' : 0.119786}", "{'[4, 1, 0, 3, 1, 0, 0, 1, 2, 8, 0, 28, 0, 2, 0, 0, 1, 1]' : 0.119852}", "{'[4, 1, 0, 3, 1, 0, 0, 1, 2, 8, 0, 28, 0, 2, 0, 0, 1, 1]' : 0.119883}", "{'[4, 1, 0, 3, 1, 0, 0, 1, 2, 8, 0, 28, 0, 2, 0, 0, 1, 1]' : 0.11837}", "{'[4, 1, 0, 3, 1, 0, 0, 1, 2, 8, 0, 28, 0, 2, 0, 0, 1, 1]' : 0.117436}", "{'[4, 1, 0, 3, 1, 0, 0, 1, 2, 8, 0, 28, 0, 2, 0, 0, 1, 1]' : 0.117076}", "{'[4, 1, 0, 3, 1, 0, 0, 1, 2, 8, 0, 28, 0, 2, 0, 0, 1, 1]' : 0.117323}", "{'[4, 1, 0, 3, 1, 0, 0, 1, 2, 8, 0, 28, 0, 2, 0, 0, 1, 1]' : 0.11744}", "{'[4, 1, 0, 3, 1, 0, 0, 1, 2, 8, 0, 28, 0, 2, 0, 0, 1, 1]' : 0.11992}", "{'[4, 1, 0, 3, 1, 0, 0, 1, 2, 8, 0, 28, 0, 2, 0, 0, 1, 1]' : 0.119954}", "{'[4, 1, 0, 3, 1, 0, 0, 1, 2, 8, 0, 28, 0, 2, 0, 0, 1, 1]' : 0.119995}", "{'[4, 1, 0, 3, 1, 0, 0, 1, 2, 8, 0, 28, 0, 2, 0, 0, 1, 1]' : 0.119854}", "{'[4, 1, 0, 3, 1, 0, 0, 1, 2, 8, 0, 28, 0, 2, 0, 0, 1, 1]' : 0.119917}", "{'[4, 1, 0, 3, 1, 0, 0, 1, 2, 8, 0, 28, 0, 2, 0, 0, 1, 1]' : 0.119742}", "{'[4, 1, 0, 3, 1, 0, 0, 1, 2, 8, 0, 28, 0, 2, 0, 0, 1, 1]' : 0.119731}", "{'[4, 1, 0, 3, 1, 0, 0, 1, 2, 8, 0, 28, 0, 2, 0, 0, 1, 1]' : 0.12006}", "{'[4, 1, 0, 3, 1, 0, 0, 1, 2, 8, 0, 28, 0, 2, 0, 0, 1, 1]' : 0.120031}", "{'[4, 1, 0, 3, 1, 0, 0, 1, 2, 8, 0, 28, 0, 2, 0, 0, 1, 1]' : 0.119772}", "{'[4, 1, 0, 3, 1, 0, 0, 1, 2, 8, 0, 28, 0, 2, 0, 0, 1, 1]' : 0.119876}"]
returning from 'run': {'[4, 1, 0, 3, 1, 0, 0, 1, 2, 8, 0, 28, 0, 2, 0, 0, 1, 1]': ([0.12001, 0.119948, 0.118198, 0.117278, 0.117333, 0.117745, 0.1174, 0.117143, 0.117218, 0.117281, 0.118257, 0.119786, 0.119852, 0.119883, 0.11837, 0.117436, 0.117076, 0.117323, 0.11744, 0.11992, 0.119954, 0.119995, 0.119854, 0.119917, 0.119742, 0.119731, 0.12006, 0.120031, 0.119772, 0.119876], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 1, 0, 3, 1, 0, 0, 1, 2, 8, 0, 28, 0, 2, 0, 0, 1, 1]': ([0.12001, 0.119948, 0.118198, 0.117278, 0.117333, 0.117745, 0.1174, 0.117143, 0.117218, 0.117281, 0.118257, 0.119786, 0.119852, 0.119883, 0.11837, 0.117436, 0.117076, 0.117323, 0.11744, 0.11992, 0.119954, 0.119995, 0.119854, 0.119917, 0.119742, 0.119731, 0.12006, 0.120031, 0.119772, 0.119876], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	5
        Additions: 		198
        Multiplications: 	72
        Divisions: 		0
        Logical: 		0
        Reads: 			477
        Writes: 		80
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest36.exe __orio_perftest36.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest36.exe  
Program Test Output: 
{'[0, 2, 6, 6, 4, 0, 0, 0, 19, 0, 0, 1, 0, 2, 0, 0, 0, 0]' : 0.212042}
{'[0, 2, 6, 6, 4, 0, 0, 0, 19, 0, 0, 1, 0, 2, 0, 0, 0, 0]' : 0.191957}
{'[0, 2, 6, 6, 4, 0, 0, 0, 19, 0, 0, 1, 0, 2, 0, 0, 0, 0]' : 0.187995}
{'[0, 2, 6, 6, 4, 0, 0, 0, 19, 0, 0, 1, 0, 2, 0, 0, 0, 0]' : 0.185917}
{'[0, 2, 6, 6, 4, 0, 0, 0, 19, 0, 0, 1, 0, 2, 0, 0, 0, 0]' : 0.185382}
{'[0, 2, 6, 6, 4, 0, 0, 0, 19, 0, 0, 1, 0, 2, 0, 0, 0, 0]' : 0.187991}
{'[0, 2, 6, 6, 4, 0, 0, 0, 19, 0, 0, 1, 0, 2, 0, 0, 0, 0]' : 0.187922}
{'[0, 2, 6, 6, 4, 0, 0, 0, 19, 0, 0, 1, 0, 2, 0, 0, 0, 0]' : 0.187995}
{'[0, 2, 6, 6, 4, 0, 0, 0, 19, 0, 0, 1, 0, 2, 0, 0, 0, 0]' : 0.187979}
{'[0, 2, 6, 6, 4, 0, 0, 0, 19, 0, 0, 1, 0, 2, 0, 0, 0, 0]' : 0.188101}
{'[0, 2, 6, 6, 4, 0, 0, 0, 19, 0, 0, 1, 0, 2, 0, 0, 0, 0]' : 0.188047}
{'[0, 2, 6, 6, 4, 0, 0, 0, 19, 0, 0, 1, 0, 2, 0, 0, 0, 0]' : 0.188296}
{'[0, 2, 6, 6, 4, 0, 0, 0, 19, 0, 0, 1, 0, 2, 0, 0, 0, 0]' : 0.188029}
{'[0, 2, 6, 6, 4, 0, 0, 0, 19, 0, 0, 1, 0, 2, 0, 0, 0, 0]' : 0.18802}
{'[0, 2, 6, 6, 4, 0, 0, 0, 19, 0, 0, 1, 0, 2, 0, 0, 0, 0]' : 0.188009}
{'[0, 2, 6, 6, 4, 0, 0, 0, 19, 0, 0, 1, 0, 2, 0, 0, 0, 0]' : 0.188075}
{'[0, 2, 6, 6, 4, 0, 0, 0, 19, 0, 0, 1, 0, 2, 0, 0, 0, 0]' : 0.188033}
{'[0, 2, 6, 6, 4, 0, 0, 0, 19, 0, 0, 1, 0, 2, 0, 0, 0, 0]' : 0.188079}
{'[0, 2, 6, 6, 4, 0, 0, 0, 19, 0, 0, 1, 0, 2, 0, 0, 0, 0]' : 0.188015}
{'[0, 2, 6, 6, 4, 0, 0, 0, 19, 0, 0, 1, 0, 2, 0, 0, 0, 0]' : 0.188017}
{'[0, 2, 6, 6, 4, 0, 0, 0, 19, 0, 0, 1, 0, 2, 0, 0, 0, 0]' : 0.187115}
{'[0, 2, 6, 6, 4, 0, 0, 0, 19, 0, 0, 1, 0, 2, 0, 0, 0, 0]' : 0.182748}
{'[0, 2, 6, 6, 4, 0, 0, 0, 19, 0, 0, 1, 0, 2, 0, 0, 0, 0]' : 0.182981}
{'[0, 2, 6, 6, 4, 0, 0, 0, 19, 0, 0, 1, 0, 2, 0, 0, 0, 0]' : 0.182816}
{'[0, 2, 6, 6, 4, 0, 0, 0, 19, 0, 0, 1, 0, 2, 0, 0, 0, 0]' : 0.183169}
{'[0, 2, 6, 6, 4, 0, 0, 0, 19, 0, 0, 1, 0, 2, 0, 0, 0, 0]' : 0.178065}
{'[0, 2, 6, 6, 4, 0, 0, 0, 19, 0, 0, 1, 0, 2, 0, 0, 0, 0]' : 0.188037}
{'[0, 2, 6, 6, 4, 0, 0, 0, 19, 0, 0, 1, 0, 2, 0, 0, 0, 0]' : 0.18807}
{'[0, 2, 6, 6, 4, 0, 0, 0, 19, 0, 0, 1, 0, 2, 0, 0, 0, 0]' : 0.188064}
{'[0, 2, 6, 6, 4, 0, 0, 0, 19, 0, 0, 1, 0, 2, 0, 0, 0, 0]' : 0.188048}

out:
 ["{'[0, 2, 6, 6, 4, 0, 0, 0, 19, 0, 0, 1, 0, 2, 0, 0, 0, 0]' : 0.212042}", "{'[0, 2, 6, 6, 4, 0, 0, 0, 19, 0, 0, 1, 0, 2, 0, 0, 0, 0]' : 0.191957}", "{'[0, 2, 6, 6, 4, 0, 0, 0, 19, 0, 0, 1, 0, 2, 0, 0, 0, 0]' : 0.187995}", "{'[0, 2, 6, 6, 4, 0, 0, 0, 19, 0, 0, 1, 0, 2, 0, 0, 0, 0]' : 0.185917}", "{'[0, 2, 6, 6, 4, 0, 0, 0, 19, 0, 0, 1, 0, 2, 0, 0, 0, 0]' : 0.185382}", "{'[0, 2, 6, 6, 4, 0, 0, 0, 19, 0, 0, 1, 0, 2, 0, 0, 0, 0]' : 0.187991}", "{'[0, 2, 6, 6, 4, 0, 0, 0, 19, 0, 0, 1, 0, 2, 0, 0, 0, 0]' : 0.187922}", "{'[0, 2, 6, 6, 4, 0, 0, 0, 19, 0, 0, 1, 0, 2, 0, 0, 0, 0]' : 0.187995}", "{'[0, 2, 6, 6, 4, 0, 0, 0, 19, 0, 0, 1, 0, 2, 0, 0, 0, 0]' : 0.187979}", "{'[0, 2, 6, 6, 4, 0, 0, 0, 19, 0, 0, 1, 0, 2, 0, 0, 0, 0]' : 0.188101}", "{'[0, 2, 6, 6, 4, 0, 0, 0, 19, 0, 0, 1, 0, 2, 0, 0, 0, 0]' : 0.188047}", "{'[0, 2, 6, 6, 4, 0, 0, 0, 19, 0, 0, 1, 0, 2, 0, 0, 0, 0]' : 0.188296}", "{'[0, 2, 6, 6, 4, 0, 0, 0, 19, 0, 0, 1, 0, 2, 0, 0, 0, 0]' : 0.188029}", "{'[0, 2, 6, 6, 4, 0, 0, 0, 19, 0, 0, 1, 0, 2, 0, 0, 0, 0]' : 0.18802}", "{'[0, 2, 6, 6, 4, 0, 0, 0, 19, 0, 0, 1, 0, 2, 0, 0, 0, 0]' : 0.188009}", "{'[0, 2, 6, 6, 4, 0, 0, 0, 19, 0, 0, 1, 0, 2, 0, 0, 0, 0]' : 0.188075}", "{'[0, 2, 6, 6, 4, 0, 0, 0, 19, 0, 0, 1, 0, 2, 0, 0, 0, 0]' : 0.188033}", "{'[0, 2, 6, 6, 4, 0, 0, 0, 19, 0, 0, 1, 0, 2, 0, 0, 0, 0]' : 0.188079}", "{'[0, 2, 6, 6, 4, 0, 0, 0, 19, 0, 0, 1, 0, 2, 0, 0, 0, 0]' : 0.188015}", "{'[0, 2, 6, 6, 4, 0, 0, 0, 19, 0, 0, 1, 0, 2, 0, 0, 0, 0]' : 0.188017}", "{'[0, 2, 6, 6, 4, 0, 0, 0, 19, 0, 0, 1, 0, 2, 0, 0, 0, 0]' : 0.187115}", "{'[0, 2, 6, 6, 4, 0, 0, 0, 19, 0, 0, 1, 0, 2, 0, 0, 0, 0]' : 0.182748}", "{'[0, 2, 6, 6, 4, 0, 0, 0, 19, 0, 0, 1, 0, 2, 0, 0, 0, 0]' : 0.182981}", "{'[0, 2, 6, 6, 4, 0, 0, 0, 19, 0, 0, 1, 0, 2, 0, 0, 0, 0]' : 0.182816}", "{'[0, 2, 6, 6, 4, 0, 0, 0, 19, 0, 0, 1, 0, 2, 0, 0, 0, 0]' : 0.183169}", "{'[0, 2, 6, 6, 4, 0, 0, 0, 19, 0, 0, 1, 0, 2, 0, 0, 0, 0]' : 0.178065}", "{'[0, 2, 6, 6, 4, 0, 0, 0, 19, 0, 0, 1, 0, 2, 0, 0, 0, 0]' : 0.188037}", "{'[0, 2, 6, 6, 4, 0, 0, 0, 19, 0, 0, 1, 0, 2, 0, 0, 0, 0]' : 0.18807}", "{'[0, 2, 6, 6, 4, 0, 0, 0, 19, 0, 0, 1, 0, 2, 0, 0, 0, 0]' : 0.188064}", "{'[0, 2, 6, 6, 4, 0, 0, 0, 19, 0, 0, 1, 0, 2, 0, 0, 0, 0]' : 0.188048}"]
returning from 'run': {'[0, 2, 6, 6, 4, 0, 0, 0, 19, 0, 0, 1, 0, 2, 0, 0, 0, 0]': ([0.212042, 0.191957, 0.187995, 0.185917, 0.185382, 0.187991, 0.187922, 0.187995, 0.187979, 0.188101, 0.188047, 0.188296, 0.188029, 0.18802, 0.188009, 0.188075, 0.188033, 0.188079, 0.188015, 0.188017, 0.187115, 0.182748, 0.182981, 0.182816, 0.183169, 0.178065, 0.188037, 0.18807, 0.188064, 0.188048], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 6, 6, 4, 0, 0, 0, 19, 0, 0, 1, 0, 2, 0, 0, 0, 0]': ([0.212042, 0.191957, 0.187995, 0.185917, 0.185382, 0.187991, 0.187922, 0.187995, 0.187979, 0.188101, 0.188047, 0.188296, 0.188029, 0.18802, 0.188009, 0.188075, 0.188033, 0.188079, 0.188015, 0.188017, 0.187115, 0.182748, 0.182981, 0.182816, 0.183169, 0.178065, 0.188037, 0.18807, 0.188064, 0.188048], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	34
        Max loop nest depth: 	4
        Additions: 		550
        Multiplications: 	126
        Divisions: 		0
        Logical: 		0
        Reads: 			1057
        Writes: 		165
        Comparisons:		34
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest37.exe __orio_perftest37.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest37.exe  
Program Test Output: 
{'[0, 6, 1, 0, 5, 0, 1, 1, 0, 5, 24, 0, 0, 1, 0, 0, 1, 1]' : 0.211729}
{'[0, 6, 1, 0, 5, 0, 1, 1, 0, 5, 24, 0, 0, 1, 0, 0, 1, 1]' : 0.211804}
{'[0, 6, 1, 0, 5, 0, 1, 1, 0, 5, 24, 0, 0, 1, 0, 0, 1, 1]' : 0.212296}
{'[0, 6, 1, 0, 5, 0, 1, 1, 0, 5, 24, 0, 0, 1, 0, 0, 1, 1]' : 0.211519}
{'[0, 6, 1, 0, 5, 0, 1, 1, 0, 5, 24, 0, 0, 1, 0, 0, 1, 1]' : 0.20544}
{'[0, 6, 1, 0, 5, 0, 1, 1, 0, 5, 24, 0, 0, 1, 0, 0, 1, 1]' : 0.211477}
{'[0, 6, 1, 0, 5, 0, 1, 1, 0, 5, 24, 0, 0, 1, 0, 0, 1, 1]' : 0.209156}
{'[0, 6, 1, 0, 5, 0, 1, 1, 0, 5, 24, 0, 0, 1, 0, 0, 1, 1]' : 0.20916}
{'[0, 6, 1, 0, 5, 0, 1, 1, 0, 5, 24, 0, 0, 1, 0, 0, 1, 1]' : 0.211836}
{'[0, 6, 1, 0, 5, 0, 1, 1, 0, 5, 24, 0, 0, 1, 0, 0, 1, 1]' : 0.211988}
{'[0, 6, 1, 0, 5, 0, 1, 1, 0, 5, 24, 0, 0, 1, 0, 0, 1, 1]' : 0.211661}
{'[0, 6, 1, 0, 5, 0, 1, 1, 0, 5, 24, 0, 0, 1, 0, 0, 1, 1]' : 0.211672}
{'[0, 6, 1, 0, 5, 0, 1, 1, 0, 5, 24, 0, 0, 1, 0, 0, 1, 1]' : 0.211775}
{'[0, 6, 1, 0, 5, 0, 1, 1, 0, 5, 24, 0, 0, 1, 0, 0, 1, 1]' : 0.211771}
{'[0, 6, 1, 0, 5, 0, 1, 1, 0, 5, 24, 0, 0, 1, 0, 0, 1, 1]' : 0.211664}
{'[0, 6, 1, 0, 5, 0, 1, 1, 0, 5, 24, 0, 0, 1, 0, 0, 1, 1]' : 0.211625}
{'[0, 6, 1, 0, 5, 0, 1, 1, 0, 5, 24, 0, 0, 1, 0, 0, 1, 1]' : 0.211575}
{'[0, 6, 1, 0, 5, 0, 1, 1, 0, 5, 24, 0, 0, 1, 0, 0, 1, 1]' : 0.211483}
{'[0, 6, 1, 0, 5, 0, 1, 1, 0, 5, 24, 0, 0, 1, 0, 0, 1, 1]' : 0.211984}
{'[0, 6, 1, 0, 5, 0, 1, 1, 0, 5, 24, 0, 0, 1, 0, 0, 1, 1]' : 0.211939}
{'[0, 6, 1, 0, 5, 0, 1, 1, 0, 5, 24, 0, 0, 1, 0, 0, 1, 1]' : 0.205309}
{'[0, 6, 1, 0, 5, 0, 1, 1, 0, 5, 24, 0, 0, 1, 0, 0, 1, 1]' : 0.20751}
{'[0, 6, 1, 0, 5, 0, 1, 1, 0, 5, 24, 0, 0, 1, 0, 0, 1, 1]' : 0.21149}
{'[0, 6, 1, 0, 5, 0, 1, 1, 0, 5, 24, 0, 0, 1, 0, 0, 1, 1]' : 0.211838}
{'[0, 6, 1, 0, 5, 0, 1, 1, 0, 5, 24, 0, 0, 1, 0, 0, 1, 1]' : 0.211913}
{'[0, 6, 1, 0, 5, 0, 1, 1, 0, 5, 24, 0, 0, 1, 0, 0, 1, 1]' : 0.208866}
{'[0, 6, 1, 0, 5, 0, 1, 1, 0, 5, 24, 0, 0, 1, 0, 0, 1, 1]' : 0.209134}
{'[0, 6, 1, 0, 5, 0, 1, 1, 0, 5, 24, 0, 0, 1, 0, 0, 1, 1]' : 0.211631}
{'[0, 6, 1, 0, 5, 0, 1, 1, 0, 5, 24, 0, 0, 1, 0, 0, 1, 1]' : 0.21172}
{'[0, 6, 1, 0, 5, 0, 1, 1, 0, 5, 24, 0, 0, 1, 0, 0, 1, 1]' : 0.211841}

out:
 ["{'[0, 6, 1, 0, 5, 0, 1, 1, 0, 5, 24, 0, 0, 1, 0, 0, 1, 1]' : 0.211729}", "{'[0, 6, 1, 0, 5, 0, 1, 1, 0, 5, 24, 0, 0, 1, 0, 0, 1, 1]' : 0.211804}", "{'[0, 6, 1, 0, 5, 0, 1, 1, 0, 5, 24, 0, 0, 1, 0, 0, 1, 1]' : 0.212296}", "{'[0, 6, 1, 0, 5, 0, 1, 1, 0, 5, 24, 0, 0, 1, 0, 0, 1, 1]' : 0.211519}", "{'[0, 6, 1, 0, 5, 0, 1, 1, 0, 5, 24, 0, 0, 1, 0, 0, 1, 1]' : 0.20544}", "{'[0, 6, 1, 0, 5, 0, 1, 1, 0, 5, 24, 0, 0, 1, 0, 0, 1, 1]' : 0.211477}", "{'[0, 6, 1, 0, 5, 0, 1, 1, 0, 5, 24, 0, 0, 1, 0, 0, 1, 1]' : 0.209156}", "{'[0, 6, 1, 0, 5, 0, 1, 1, 0, 5, 24, 0, 0, 1, 0, 0, 1, 1]' : 0.20916}", "{'[0, 6, 1, 0, 5, 0, 1, 1, 0, 5, 24, 0, 0, 1, 0, 0, 1, 1]' : 0.211836}", "{'[0, 6, 1, 0, 5, 0, 1, 1, 0, 5, 24, 0, 0, 1, 0, 0, 1, 1]' : 0.211988}", "{'[0, 6, 1, 0, 5, 0, 1, 1, 0, 5, 24, 0, 0, 1, 0, 0, 1, 1]' : 0.211661}", "{'[0, 6, 1, 0, 5, 0, 1, 1, 0, 5, 24, 0, 0, 1, 0, 0, 1, 1]' : 0.211672}", "{'[0, 6, 1, 0, 5, 0, 1, 1, 0, 5, 24, 0, 0, 1, 0, 0, 1, 1]' : 0.211775}", "{'[0, 6, 1, 0, 5, 0, 1, 1, 0, 5, 24, 0, 0, 1, 0, 0, 1, 1]' : 0.211771}", "{'[0, 6, 1, 0, 5, 0, 1, 1, 0, 5, 24, 0, 0, 1, 0, 0, 1, 1]' : 0.211664}", "{'[0, 6, 1, 0, 5, 0, 1, 1, 0, 5, 24, 0, 0, 1, 0, 0, 1, 1]' : 0.211625}", "{'[0, 6, 1, 0, 5, 0, 1, 1, 0, 5, 24, 0, 0, 1, 0, 0, 1, 1]' : 0.211575}", "{'[0, 6, 1, 0, 5, 0, 1, 1, 0, 5, 24, 0, 0, 1, 0, 0, 1, 1]' : 0.211483}", "{'[0, 6, 1, 0, 5, 0, 1, 1, 0, 5, 24, 0, 0, 1, 0, 0, 1, 1]' : 0.211984}", "{'[0, 6, 1, 0, 5, 0, 1, 1, 0, 5, 24, 0, 0, 1, 0, 0, 1, 1]' : 0.211939}", "{'[0, 6, 1, 0, 5, 0, 1, 1, 0, 5, 24, 0, 0, 1, 0, 0, 1, 1]' : 0.205309}", "{'[0, 6, 1, 0, 5, 0, 1, 1, 0, 5, 24, 0, 0, 1, 0, 0, 1, 1]' : 0.20751}", "{'[0, 6, 1, 0, 5, 0, 1, 1, 0, 5, 24, 0, 0, 1, 0, 0, 1, 1]' : 0.21149}", "{'[0, 6, 1, 0, 5, 0, 1, 1, 0, 5, 24, 0, 0, 1, 0, 0, 1, 1]' : 0.211838}", "{'[0, 6, 1, 0, 5, 0, 1, 1, 0, 5, 24, 0, 0, 1, 0, 0, 1, 1]' : 0.211913}", "{'[0, 6, 1, 0, 5, 0, 1, 1, 0, 5, 24, 0, 0, 1, 0, 0, 1, 1]' : 0.208866}", "{'[0, 6, 1, 0, 5, 0, 1, 1, 0, 5, 24, 0, 0, 1, 0, 0, 1, 1]' : 0.209134}", "{'[0, 6, 1, 0, 5, 0, 1, 1, 0, 5, 24, 0, 0, 1, 0, 0, 1, 1]' : 0.211631}", "{'[0, 6, 1, 0, 5, 0, 1, 1, 0, 5, 24, 0, 0, 1, 0, 0, 1, 1]' : 0.21172}", "{'[0, 6, 1, 0, 5, 0, 1, 1, 0, 5, 24, 0, 0, 1, 0, 0, 1, 1]' : 0.211841}"]
returning from 'run': {'[0, 6, 1, 0, 5, 0, 1, 1, 0, 5, 24, 0, 0, 1, 0, 0, 1, 1]': ([0.211729, 0.211804, 0.212296, 0.211519, 0.20544, 0.211477, 0.209156, 0.20916, 0.211836, 0.211988, 0.211661, 0.211672, 0.211775, 0.211771, 0.211664, 0.211625, 0.211575, 0.211483, 0.211984, 0.211939, 0.205309, 0.20751, 0.21149, 0.211838, 0.211913, 0.208866, 0.209134, 0.211631, 0.21172, 0.211841], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 1, 0, 5, 0, 1, 1, 0, 5, 24, 0, 0, 1, 0, 0, 1, 1]': ([0.211729, 0.211804, 0.212296, 0.211519, 0.20544, 0.211477, 0.209156, 0.20916, 0.211836, 0.211988, 0.211661, 0.211672, 0.211775, 0.211771, 0.211664, 0.211625, 0.211575, 0.211483, 0.211984, 0.211939, 0.205309, 0.20751, 0.21149, 0.211838, 0.211913, 0.208866, 0.209134, 0.211631, 0.21172, 0.211841], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	5
        Additions: 		9581
        Multiplications: 	2244
        Divisions: 		0
        Logical: 		0
        Reads: 			13558
        Writes: 		1203
        Comparisons:		25
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest38.exe __orio_perftest38.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest38.exe  
Program Test Output: 
{'[6, 2, 3, 0, 4, 0, 1, 1, 6, 0, 3, 27, 2, 0, 0, 0, 1, 1]' : 0.215098}
{'[6, 2, 3, 0, 4, 0, 1, 1, 6, 0, 3, 27, 2, 0, 0, 0, 1, 1]' : 0.215665}
{'[6, 2, 3, 0, 4, 0, 1, 1, 6, 0, 3, 27, 2, 0, 0, 0, 1, 1]' : 0.216725}
{'[6, 2, 3, 0, 4, 0, 1, 1, 6, 0, 3, 27, 2, 0, 0, 0, 1, 1]' : 0.21508}
{'[6, 2, 3, 0, 4, 0, 1, 1, 6, 0, 3, 27, 2, 0, 0, 0, 1, 1]' : 0.213749}
{'[6, 2, 3, 0, 4, 0, 1, 1, 6, 0, 3, 27, 2, 0, 0, 0, 1, 1]' : 0.213383}
{'[6, 2, 3, 0, 4, 0, 1, 1, 6, 0, 3, 27, 2, 0, 0, 0, 1, 1]' : 0.216382}
{'[6, 2, 3, 0, 4, 0, 1, 1, 6, 0, 3, 27, 2, 0, 0, 0, 1, 1]' : 0.214814}
{'[6, 2, 3, 0, 4, 0, 1, 1, 6, 0, 3, 27, 2, 0, 0, 0, 1, 1]' : 0.21331}
{'[6, 2, 3, 0, 4, 0, 1, 1, 6, 0, 3, 27, 2, 0, 0, 0, 1, 1]' : 0.213239}
{'[6, 2, 3, 0, 4, 0, 1, 1, 6, 0, 3, 27, 2, 0, 0, 0, 1, 1]' : 0.214559}
{'[6, 2, 3, 0, 4, 0, 1, 1, 6, 0, 3, 27, 2, 0, 0, 0, 1, 1]' : 0.213506}
{'[6, 2, 3, 0, 4, 0, 1, 1, 6, 0, 3, 27, 2, 0, 0, 0, 1, 1]' : 0.212634}
{'[6, 2, 3, 0, 4, 0, 1, 1, 6, 0, 3, 27, 2, 0, 0, 0, 1, 1]' : 0.215671}
{'[6, 2, 3, 0, 4, 0, 1, 1, 6, 0, 3, 27, 2, 0, 0, 0, 1, 1]' : 0.214382}
{'[6, 2, 3, 0, 4, 0, 1, 1, 6, 0, 3, 27, 2, 0, 0, 0, 1, 1]' : 0.212965}
{'[6, 2, 3, 0, 4, 0, 1, 1, 6, 0, 3, 27, 2, 0, 0, 0, 1, 1]' : 0.212522}
{'[6, 2, 3, 0, 4, 0, 1, 1, 6, 0, 3, 27, 2, 0, 0, 0, 1, 1]' : 0.212233}
{'[6, 2, 3, 0, 4, 0, 1, 1, 6, 0, 3, 27, 2, 0, 0, 0, 1, 1]' : 0.212602}
{'[6, 2, 3, 0, 4, 0, 1, 1, 6, 0, 3, 27, 2, 0, 0, 0, 1, 1]' : 0.212618}
{'[6, 2, 3, 0, 4, 0, 1, 1, 6, 0, 3, 27, 2, 0, 0, 0, 1, 1]' : 0.213235}
{'[6, 2, 3, 0, 4, 0, 1, 1, 6, 0, 3, 27, 2, 0, 0, 0, 1, 1]' : 0.212594}
{'[6, 2, 3, 0, 4, 0, 1, 1, 6, 0, 3, 27, 2, 0, 0, 0, 1, 1]' : 0.211438}
{'[6, 2, 3, 0, 4, 0, 1, 1, 6, 0, 3, 27, 2, 0, 0, 0, 1, 1]' : 0.213464}
{'[6, 2, 3, 0, 4, 0, 1, 1, 6, 0, 3, 27, 2, 0, 0, 0, 1, 1]' : 0.21273}
{'[6, 2, 3, 0, 4, 0, 1, 1, 6, 0, 3, 27, 2, 0, 0, 0, 1, 1]' : 0.212499}
{'[6, 2, 3, 0, 4, 0, 1, 1, 6, 0, 3, 27, 2, 0, 0, 0, 1, 1]' : 0.21242}
{'[6, 2, 3, 0, 4, 0, 1, 1, 6, 0, 3, 27, 2, 0, 0, 0, 1, 1]' : 0.21229}
{'[6, 2, 3, 0, 4, 0, 1, 1, 6, 0, 3, 27, 2, 0, 0, 0, 1, 1]' : 0.215983}
{'[6, 2, 3, 0, 4, 0, 1, 1, 6, 0, 3, 27, 2, 0, 0, 0, 1, 1]' : 0.216315}

out:
 ["{'[6, 2, 3, 0, 4, 0, 1, 1, 6, 0, 3, 27, 2, 0, 0, 0, 1, 1]' : 0.215098}", "{'[6, 2, 3, 0, 4, 0, 1, 1, 6, 0, 3, 27, 2, 0, 0, 0, 1, 1]' : 0.215665}", "{'[6, 2, 3, 0, 4, 0, 1, 1, 6, 0, 3, 27, 2, 0, 0, 0, 1, 1]' : 0.216725}", "{'[6, 2, 3, 0, 4, 0, 1, 1, 6, 0, 3, 27, 2, 0, 0, 0, 1, 1]' : 0.21508}", "{'[6, 2, 3, 0, 4, 0, 1, 1, 6, 0, 3, 27, 2, 0, 0, 0, 1, 1]' : 0.213749}", "{'[6, 2, 3, 0, 4, 0, 1, 1, 6, 0, 3, 27, 2, 0, 0, 0, 1, 1]' : 0.213383}", "{'[6, 2, 3, 0, 4, 0, 1, 1, 6, 0, 3, 27, 2, 0, 0, 0, 1, 1]' : 0.216382}", "{'[6, 2, 3, 0, 4, 0, 1, 1, 6, 0, 3, 27, 2, 0, 0, 0, 1, 1]' : 0.214814}", "{'[6, 2, 3, 0, 4, 0, 1, 1, 6, 0, 3, 27, 2, 0, 0, 0, 1, 1]' : 0.21331}", "{'[6, 2, 3, 0, 4, 0, 1, 1, 6, 0, 3, 27, 2, 0, 0, 0, 1, 1]' : 0.213239}", "{'[6, 2, 3, 0, 4, 0, 1, 1, 6, 0, 3, 27, 2, 0, 0, 0, 1, 1]' : 0.214559}", "{'[6, 2, 3, 0, 4, 0, 1, 1, 6, 0, 3, 27, 2, 0, 0, 0, 1, 1]' : 0.213506}", "{'[6, 2, 3, 0, 4, 0, 1, 1, 6, 0, 3, 27, 2, 0, 0, 0, 1, 1]' : 0.212634}", "{'[6, 2, 3, 0, 4, 0, 1, 1, 6, 0, 3, 27, 2, 0, 0, 0, 1, 1]' : 0.215671}", "{'[6, 2, 3, 0, 4, 0, 1, 1, 6, 0, 3, 27, 2, 0, 0, 0, 1, 1]' : 0.214382}", "{'[6, 2, 3, 0, 4, 0, 1, 1, 6, 0, 3, 27, 2, 0, 0, 0, 1, 1]' : 0.212965}", "{'[6, 2, 3, 0, 4, 0, 1, 1, 6, 0, 3, 27, 2, 0, 0, 0, 1, 1]' : 0.212522}", "{'[6, 2, 3, 0, 4, 0, 1, 1, 6, 0, 3, 27, 2, 0, 0, 0, 1, 1]' : 0.212233}", "{'[6, 2, 3, 0, 4, 0, 1, 1, 6, 0, 3, 27, 2, 0, 0, 0, 1, 1]' : 0.212602}", "{'[6, 2, 3, 0, 4, 0, 1, 1, 6, 0, 3, 27, 2, 0, 0, 0, 1, 1]' : 0.212618}", "{'[6, 2, 3, 0, 4, 0, 1, 1, 6, 0, 3, 27, 2, 0, 0, 0, 1, 1]' : 0.213235}", "{'[6, 2, 3, 0, 4, 0, 1, 1, 6, 0, 3, 27, 2, 0, 0, 0, 1, 1]' : 0.212594}", "{'[6, 2, 3, 0, 4, 0, 1, 1, 6, 0, 3, 27, 2, 0, 0, 0, 1, 1]' : 0.211438}", "{'[6, 2, 3, 0, 4, 0, 1, 1, 6, 0, 3, 27, 2, 0, 0, 0, 1, 1]' : 0.213464}", "{'[6, 2, 3, 0, 4, 0, 1, 1, 6, 0, 3, 27, 2, 0, 0, 0, 1, 1]' : 0.21273}", "{'[6, 2, 3, 0, 4, 0, 1, 1, 6, 0, 3, 27, 2, 0, 0, 0, 1, 1]' : 0.212499}", "{'[6, 2, 3, 0, 4, 0, 1, 1, 6, 0, 3, 27, 2, 0, 0, 0, 1, 1]' : 0.21242}", "{'[6, 2, 3, 0, 4, 0, 1, 1, 6, 0, 3, 27, 2, 0, 0, 0, 1, 1]' : 0.21229}", "{'[6, 2, 3, 0, 4, 0, 1, 1, 6, 0, 3, 27, 2, 0, 0, 0, 1, 1]' : 0.215983}", "{'[6, 2, 3, 0, 4, 0, 1, 1, 6, 0, 3, 27, 2, 0, 0, 0, 1, 1]' : 0.216315}"]
returning from 'run': {'[6, 2, 3, 0, 4, 0, 1, 1, 6, 0, 3, 27, 2, 0, 0, 0, 1, 1]': ([0.215098, 0.215665, 0.216725, 0.21508, 0.213749, 0.213383, 0.216382, 0.214814, 0.21331, 0.213239, 0.214559, 0.213506, 0.212634, 0.215671, 0.214382, 0.212965, 0.212522, 0.212233, 0.212602, 0.212618, 0.213235, 0.212594, 0.211438, 0.213464, 0.21273, 0.212499, 0.21242, 0.21229, 0.215983, 0.216315], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 2, 3, 0, 4, 0, 1, 1, 6, 0, 3, 27, 2, 0, 0, 0, 1, 1]': ([0.215098, 0.215665, 0.216725, 0.21508, 0.213749, 0.213383, 0.216382, 0.214814, 0.21331, 0.213239, 0.214559, 0.213506, 0.212634, 0.215671, 0.214382, 0.212965, 0.212522, 0.212233, 0.212602, 0.212618, 0.213235, 0.212594, 0.211438, 0.213464, 0.21273, 0.212499, 0.21242, 0.21229, 0.215983, 0.216315], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	4
        Additions: 		3884
        Multiplications: 	1206
        Divisions: 		0
        Logical: 		0
        Reads: 			6233
        Writes: 		674
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest39.exe __orio_perftest39.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest39.exe  
Program Test Output: 
{'[6, 6, 2, 0, 0, 0, 0, 0, 15, 0, 26, 29, 1, 1, 0, 0, 0, 1]' : 0.123404}
{'[6, 6, 2, 0, 0, 0, 0, 0, 15, 0, 26, 29, 1, 1, 0, 0, 0, 1]' : 0.123366}
{'[6, 6, 2, 0, 0, 0, 0, 0, 15, 0, 26, 29, 1, 1, 0, 0, 0, 1]' : 0.12318}
{'[6, 6, 2, 0, 0, 0, 0, 0, 15, 0, 26, 29, 1, 1, 0, 0, 0, 1]' : 0.121607}
{'[6, 6, 2, 0, 0, 0, 0, 0, 15, 0, 26, 29, 1, 1, 0, 0, 0, 1]' : 0.119715}
{'[6, 6, 2, 0, 0, 0, 0, 0, 15, 0, 26, 29, 1, 1, 0, 0, 0, 1]' : 0.117543}
{'[6, 6, 2, 0, 0, 0, 0, 0, 15, 0, 26, 29, 1, 1, 0, 0, 0, 1]' : 0.117465}
{'[6, 6, 2, 0, 0, 0, 0, 0, 15, 0, 26, 29, 1, 1, 0, 0, 0, 1]' : 0.11781}
{'[6, 6, 2, 0, 0, 0, 0, 0, 15, 0, 26, 29, 1, 1, 0, 0, 0, 1]' : 0.116987}
{'[6, 6, 2, 0, 0, 0, 0, 0, 15, 0, 26, 29, 1, 1, 0, 0, 0, 1]' : 0.117324}
{'[6, 6, 2, 0, 0, 0, 0, 0, 15, 0, 26, 29, 1, 1, 0, 0, 0, 1]' : 0.117573}
{'[6, 6, 2, 0, 0, 0, 0, 0, 15, 0, 26, 29, 1, 1, 0, 0, 0, 1]' : 0.118624}
{'[6, 6, 2, 0, 0, 0, 0, 0, 15, 0, 26, 29, 1, 1, 0, 0, 0, 1]' : 0.123385}
{'[6, 6, 2, 0, 0, 0, 0, 0, 15, 0, 26, 29, 1, 1, 0, 0, 0, 1]' : 0.123994}
{'[6, 6, 2, 0, 0, 0, 0, 0, 15, 0, 26, 29, 1, 1, 0, 0, 0, 1]' : 0.121225}
{'[6, 6, 2, 0, 0, 0, 0, 0, 15, 0, 26, 29, 1, 1, 0, 0, 0, 1]' : 0.118378}
{'[6, 6, 2, 0, 0, 0, 0, 0, 15, 0, 26, 29, 1, 1, 0, 0, 0, 1]' : 0.123322}
{'[6, 6, 2, 0, 0, 0, 0, 0, 15, 0, 26, 29, 1, 1, 0, 0, 0, 1]' : 0.123341}
{'[6, 6, 2, 0, 0, 0, 0, 0, 15, 0, 26, 29, 1, 1, 0, 0, 0, 1]' : 0.123255}
{'[6, 6, 2, 0, 0, 0, 0, 0, 15, 0, 26, 29, 1, 1, 0, 0, 0, 1]' : 0.123599}
{'[6, 6, 2, 0, 0, 0, 0, 0, 15, 0, 26, 29, 1, 1, 0, 0, 0, 1]' : 0.117608}
{'[6, 6, 2, 0, 0, 0, 0, 0, 15, 0, 26, 29, 1, 1, 0, 0, 0, 1]' : 0.118747}
{'[6, 6, 2, 0, 0, 0, 0, 0, 15, 0, 26, 29, 1, 1, 0, 0, 0, 1]' : 0.120446}
{'[6, 6, 2, 0, 0, 0, 0, 0, 15, 0, 26, 29, 1, 1, 0, 0, 0, 1]' : 0.120463}
{'[6, 6, 2, 0, 0, 0, 0, 0, 15, 0, 26, 29, 1, 1, 0, 0, 0, 1]' : 0.123086}
{'[6, 6, 2, 0, 0, 0, 0, 0, 15, 0, 26, 29, 1, 1, 0, 0, 0, 1]' : 0.1202}
{'[6, 6, 2, 0, 0, 0, 0, 0, 15, 0, 26, 29, 1, 1, 0, 0, 0, 1]' : 0.120228}
{'[6, 6, 2, 0, 0, 0, 0, 0, 15, 0, 26, 29, 1, 1, 0, 0, 0, 1]' : 0.120976}
{'[6, 6, 2, 0, 0, 0, 0, 0, 15, 0, 26, 29, 1, 1, 0, 0, 0, 1]' : 0.122647}
{'[6, 6, 2, 0, 0, 0, 0, 0, 15, 0, 26, 29, 1, 1, 0, 0, 0, 1]' : 0.12346}

out:
 ["{'[6, 6, 2, 0, 0, 0, 0, 0, 15, 0, 26, 29, 1, 1, 0, 0, 0, 1]' : 0.123404}", "{'[6, 6, 2, 0, 0, 0, 0, 0, 15, 0, 26, 29, 1, 1, 0, 0, 0, 1]' : 0.123366}", "{'[6, 6, 2, 0, 0, 0, 0, 0, 15, 0, 26, 29, 1, 1, 0, 0, 0, 1]' : 0.12318}", "{'[6, 6, 2, 0, 0, 0, 0, 0, 15, 0, 26, 29, 1, 1, 0, 0, 0, 1]' : 0.121607}", "{'[6, 6, 2, 0, 0, 0, 0, 0, 15, 0, 26, 29, 1, 1, 0, 0, 0, 1]' : 0.119715}", "{'[6, 6, 2, 0, 0, 0, 0, 0, 15, 0, 26, 29, 1, 1, 0, 0, 0, 1]' : 0.117543}", "{'[6, 6, 2, 0, 0, 0, 0, 0, 15, 0, 26, 29, 1, 1, 0, 0, 0, 1]' : 0.117465}", "{'[6, 6, 2, 0, 0, 0, 0, 0, 15, 0, 26, 29, 1, 1, 0, 0, 0, 1]' : 0.11781}", "{'[6, 6, 2, 0, 0, 0, 0, 0, 15, 0, 26, 29, 1, 1, 0, 0, 0, 1]' : 0.116987}", "{'[6, 6, 2, 0, 0, 0, 0, 0, 15, 0, 26, 29, 1, 1, 0, 0, 0, 1]' : 0.117324}", "{'[6, 6, 2, 0, 0, 0, 0, 0, 15, 0, 26, 29, 1, 1, 0, 0, 0, 1]' : 0.117573}", "{'[6, 6, 2, 0, 0, 0, 0, 0, 15, 0, 26, 29, 1, 1, 0, 0, 0, 1]' : 0.118624}", "{'[6, 6, 2, 0, 0, 0, 0, 0, 15, 0, 26, 29, 1, 1, 0, 0, 0, 1]' : 0.123385}", "{'[6, 6, 2, 0, 0, 0, 0, 0, 15, 0, 26, 29, 1, 1, 0, 0, 0, 1]' : 0.123994}", "{'[6, 6, 2, 0, 0, 0, 0, 0, 15, 0, 26, 29, 1, 1, 0, 0, 0, 1]' : 0.121225}", "{'[6, 6, 2, 0, 0, 0, 0, 0, 15, 0, 26, 29, 1, 1, 0, 0, 0, 1]' : 0.118378}", "{'[6, 6, 2, 0, 0, 0, 0, 0, 15, 0, 26, 29, 1, 1, 0, 0, 0, 1]' : 0.123322}", "{'[6, 6, 2, 0, 0, 0, 0, 0, 15, 0, 26, 29, 1, 1, 0, 0, 0, 1]' : 0.123341}", "{'[6, 6, 2, 0, 0, 0, 0, 0, 15, 0, 26, 29, 1, 1, 0, 0, 0, 1]' : 0.123255}", "{'[6, 6, 2, 0, 0, 0, 0, 0, 15, 0, 26, 29, 1, 1, 0, 0, 0, 1]' : 0.123599}", "{'[6, 6, 2, 0, 0, 0, 0, 0, 15, 0, 26, 29, 1, 1, 0, 0, 0, 1]' : 0.117608}", "{'[6, 6, 2, 0, 0, 0, 0, 0, 15, 0, 26, 29, 1, 1, 0, 0, 0, 1]' : 0.118747}", "{'[6, 6, 2, 0, 0, 0, 0, 0, 15, 0, 26, 29, 1, 1, 0, 0, 0, 1]' : 0.120446}", "{'[6, 6, 2, 0, 0, 0, 0, 0, 15, 0, 26, 29, 1, 1, 0, 0, 0, 1]' : 0.120463}", "{'[6, 6, 2, 0, 0, 0, 0, 0, 15, 0, 26, 29, 1, 1, 0, 0, 0, 1]' : 0.123086}", "{'[6, 6, 2, 0, 0, 0, 0, 0, 15, 0, 26, 29, 1, 1, 0, 0, 0, 1]' : 0.1202}", "{'[6, 6, 2, 0, 0, 0, 0, 0, 15, 0, 26, 29, 1, 1, 0, 0, 0, 1]' : 0.120228}", "{'[6, 6, 2, 0, 0, 0, 0, 0, 15, 0, 26, 29, 1, 1, 0, 0, 0, 1]' : 0.120976}", "{'[6, 6, 2, 0, 0, 0, 0, 0, 15, 0, 26, 29, 1, 1, 0, 0, 0, 1]' : 0.122647}", "{'[6, 6, 2, 0, 0, 0, 0, 0, 15, 0, 26, 29, 1, 1, 0, 0, 0, 1]' : 0.12346}"]
returning from 'run': {'[6, 6, 2, 0, 0, 0, 0, 0, 15, 0, 26, 29, 1, 1, 0, 0, 0, 1]': ([0.123404, 0.123366, 0.12318, 0.121607, 0.119715, 0.117543, 0.117465, 0.11781, 0.116987, 0.117324, 0.117573, 0.118624, 0.123385, 0.123994, 0.121225, 0.118378, 0.123322, 0.123341, 0.123255, 0.123599, 0.117608, 0.118747, 0.120446, 0.120463, 0.123086, 0.1202, 0.120228, 0.120976, 0.122647, 0.12346], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 2, 0, 0, 0, 0, 0, 15, 0, 26, 29, 1, 1, 0, 0, 0, 1]': ([0.123404, 0.123366, 0.12318, 0.121607, 0.119715, 0.117543, 0.117465, 0.11781, 0.116987, 0.117324, 0.117573, 0.118624, 0.123385, 0.123994, 0.121225, 0.118378, 0.123322, 0.123341, 0.123255, 0.123599, 0.117608, 0.118747, 0.120446, 0.120463, 0.123086, 0.1202, 0.120228, 0.120976, 0.122647, 0.12346], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		274
        Multiplications: 	102
        Divisions: 		0
        Logical: 		0
        Reads: 			590
        Writes: 		107
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest40.exe __orio_perftest40.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest40.exe  
Program Test Output: 
{'[2, 0, 2, 0, 3, 6, 0, 1, 0, 0, 9, 6, 0, 2, 0, 1, 1, 1]' : 0.300364}
{'[2, 0, 2, 0, 3, 6, 0, 1, 0, 0, 9, 6, 0, 2, 0, 1, 1, 1]' : 0.29993}
{'[2, 0, 2, 0, 3, 6, 0, 1, 0, 0, 9, 6, 0, 2, 0, 1, 1, 1]' : 0.267653}
{'[2, 0, 2, 0, 3, 6, 0, 1, 0, 0, 9, 6, 0, 2, 0, 1, 1, 1]' : 0.266214}
{'[2, 0, 2, 0, 3, 6, 0, 1, 0, 0, 9, 6, 0, 2, 0, 1, 1, 1]' : 0.263347}
{'[2, 0, 2, 0, 3, 6, 0, 1, 0, 0, 9, 6, 0, 2, 0, 1, 1, 1]' : 0.253035}
{'[2, 0, 2, 0, 3, 6, 0, 1, 0, 0, 9, 6, 0, 2, 0, 1, 1, 1]' : 0.262787}
{'[2, 0, 2, 0, 3, 6, 0, 1, 0, 0, 9, 6, 0, 2, 0, 1, 1, 1]' : 0.266217}
{'[2, 0, 2, 0, 3, 6, 0, 1, 0, 0, 9, 6, 0, 2, 0, 1, 1, 1]' : 0.26261}
{'[2, 0, 2, 0, 3, 6, 0, 1, 0, 0, 9, 6, 0, 2, 0, 1, 1, 1]' : 0.263088}
{'[2, 0, 2, 0, 3, 6, 0, 1, 0, 0, 9, 6, 0, 2, 0, 1, 1, 1]' : 0.266106}
{'[2, 0, 2, 0, 3, 6, 0, 1, 0, 0, 9, 6, 0, 2, 0, 1, 1, 1]' : 0.266041}
{'[2, 0, 2, 0, 3, 6, 0, 1, 0, 0, 9, 6, 0, 2, 0, 1, 1, 1]' : 0.260455}
{'[2, 0, 2, 0, 3, 6, 0, 1, 0, 0, 9, 6, 0, 2, 0, 1, 1, 1]' : 0.260424}
{'[2, 0, 2, 0, 3, 6, 0, 1, 0, 0, 9, 6, 0, 2, 0, 1, 1, 1]' : 0.260516}
{'[2, 0, 2, 0, 3, 6, 0, 1, 0, 0, 9, 6, 0, 2, 0, 1, 1, 1]' : 0.258907}
{'[2, 0, 2, 0, 3, 6, 0, 1, 0, 0, 9, 6, 0, 2, 0, 1, 1, 1]' : 0.258843}
{'[2, 0, 2, 0, 3, 6, 0, 1, 0, 0, 9, 6, 0, 2, 0, 1, 1, 1]' : 0.256634}
{'[2, 0, 2, 0, 3, 6, 0, 1, 0, 0, 9, 6, 0, 2, 0, 1, 1, 1]' : 0.258798}
{'[2, 0, 2, 0, 3, 6, 0, 1, 0, 0, 9, 6, 0, 2, 0, 1, 1, 1]' : 0.259194}
{'[2, 0, 2, 0, 3, 6, 0, 1, 0, 0, 9, 6, 0, 2, 0, 1, 1, 1]' : 0.258789}
{'[2, 0, 2, 0, 3, 6, 0, 1, 0, 0, 9, 6, 0, 2, 0, 1, 1, 1]' : 0.258961}
{'[2, 0, 2, 0, 3, 6, 0, 1, 0, 0, 9, 6, 0, 2, 0, 1, 1, 1]' : 0.258817}
{'[2, 0, 2, 0, 3, 6, 0, 1, 0, 0, 9, 6, 0, 2, 0, 1, 1, 1]' : 0.258782}
{'[2, 0, 2, 0, 3, 6, 0, 1, 0, 0, 9, 6, 0, 2, 0, 1, 1, 1]' : 0.258833}
{'[2, 0, 2, 0, 3, 6, 0, 1, 0, 0, 9, 6, 0, 2, 0, 1, 1, 1]' : 0.258932}
{'[2, 0, 2, 0, 3, 6, 0, 1, 0, 0, 9, 6, 0, 2, 0, 1, 1, 1]' : 0.258969}
{'[2, 0, 2, 0, 3, 6, 0, 1, 0, 0, 9, 6, 0, 2, 0, 1, 1, 1]' : 0.259029}
{'[2, 0, 2, 0, 3, 6, 0, 1, 0, 0, 9, 6, 0, 2, 0, 1, 1, 1]' : 0.25879}
{'[2, 0, 2, 0, 3, 6, 0, 1, 0, 0, 9, 6, 0, 2, 0, 1, 1, 1]' : 0.258666}

out:
 ["{'[2, 0, 2, 0, 3, 6, 0, 1, 0, 0, 9, 6, 0, 2, 0, 1, 1, 1]' : 0.300364}", "{'[2, 0, 2, 0, 3, 6, 0, 1, 0, 0, 9, 6, 0, 2, 0, 1, 1, 1]' : 0.29993}", "{'[2, 0, 2, 0, 3, 6, 0, 1, 0, 0, 9, 6, 0, 2, 0, 1, 1, 1]' : 0.267653}", "{'[2, 0, 2, 0, 3, 6, 0, 1, 0, 0, 9, 6, 0, 2, 0, 1, 1, 1]' : 0.266214}", "{'[2, 0, 2, 0, 3, 6, 0, 1, 0, 0, 9, 6, 0, 2, 0, 1, 1, 1]' : 0.263347}", "{'[2, 0, 2, 0, 3, 6, 0, 1, 0, 0, 9, 6, 0, 2, 0, 1, 1, 1]' : 0.253035}", "{'[2, 0, 2, 0, 3, 6, 0, 1, 0, 0, 9, 6, 0, 2, 0, 1, 1, 1]' : 0.262787}", "{'[2, 0, 2, 0, 3, 6, 0, 1, 0, 0, 9, 6, 0, 2, 0, 1, 1, 1]' : 0.266217}", "{'[2, 0, 2, 0, 3, 6, 0, 1, 0, 0, 9, 6, 0, 2, 0, 1, 1, 1]' : 0.26261}", "{'[2, 0, 2, 0, 3, 6, 0, 1, 0, 0, 9, 6, 0, 2, 0, 1, 1, 1]' : 0.263088}", "{'[2, 0, 2, 0, 3, 6, 0, 1, 0, 0, 9, 6, 0, 2, 0, 1, 1, 1]' : 0.266106}", "{'[2, 0, 2, 0, 3, 6, 0, 1, 0, 0, 9, 6, 0, 2, 0, 1, 1, 1]' : 0.266041}", "{'[2, 0, 2, 0, 3, 6, 0, 1, 0, 0, 9, 6, 0, 2, 0, 1, 1, 1]' : 0.260455}", "{'[2, 0, 2, 0, 3, 6, 0, 1, 0, 0, 9, 6, 0, 2, 0, 1, 1, 1]' : 0.260424}", "{'[2, 0, 2, 0, 3, 6, 0, 1, 0, 0, 9, 6, 0, 2, 0, 1, 1, 1]' : 0.260516}", "{'[2, 0, 2, 0, 3, 6, 0, 1, 0, 0, 9, 6, 0, 2, 0, 1, 1, 1]' : 0.258907}", "{'[2, 0, 2, 0, 3, 6, 0, 1, 0, 0, 9, 6, 0, 2, 0, 1, 1, 1]' : 0.258843}", "{'[2, 0, 2, 0, 3, 6, 0, 1, 0, 0, 9, 6, 0, 2, 0, 1, 1, 1]' : 0.256634}", "{'[2, 0, 2, 0, 3, 6, 0, 1, 0, 0, 9, 6, 0, 2, 0, 1, 1, 1]' : 0.258798}", "{'[2, 0, 2, 0, 3, 6, 0, 1, 0, 0, 9, 6, 0, 2, 0, 1, 1, 1]' : 0.259194}", "{'[2, 0, 2, 0, 3, 6, 0, 1, 0, 0, 9, 6, 0, 2, 0, 1, 1, 1]' : 0.258789}", "{'[2, 0, 2, 0, 3, 6, 0, 1, 0, 0, 9, 6, 0, 2, 0, 1, 1, 1]' : 0.258961}", "{'[2, 0, 2, 0, 3, 6, 0, 1, 0, 0, 9, 6, 0, 2, 0, 1, 1, 1]' : 0.258817}", "{'[2, 0, 2, 0, 3, 6, 0, 1, 0, 0, 9, 6, 0, 2, 0, 1, 1, 1]' : 0.258782}", "{'[2, 0, 2, 0, 3, 6, 0, 1, 0, 0, 9, 6, 0, 2, 0, 1, 1, 1]' : 0.258833}", "{'[2, 0, 2, 0, 3, 6, 0, 1, 0, 0, 9, 6, 0, 2, 0, 1, 1, 1]' : 0.258932}", "{'[2, 0, 2, 0, 3, 6, 0, 1, 0, 0, 9, 6, 0, 2, 0, 1, 1, 1]' : 0.258969}", "{'[2, 0, 2, 0, 3, 6, 0, 1, 0, 0, 9, 6, 0, 2, 0, 1, 1, 1]' : 0.259029}", "{'[2, 0, 2, 0, 3, 6, 0, 1, 0, 0, 9, 6, 0, 2, 0, 1, 1, 1]' : 0.25879}", "{'[2, 0, 2, 0, 3, 6, 0, 1, 0, 0, 9, 6, 0, 2, 0, 1, 1, 1]' : 0.258666}"]
returning from 'run': {'[2, 0, 2, 0, 3, 6, 0, 1, 0, 0, 9, 6, 0, 2, 0, 1, 1, 1]': ([0.300364, 0.29993, 0.267653, 0.266214, 0.263347, 0.253035, 0.262787, 0.266217, 0.26261, 0.263088, 0.266106, 0.266041, 0.260455, 0.260424, 0.260516, 0.258907, 0.258843, 0.256634, 0.258798, 0.259194, 0.258789, 0.258961, 0.258817, 0.258782, 0.258833, 0.258932, 0.258969, 0.259029, 0.25879, 0.258666], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 2, 0, 3, 6, 0, 1, 0, 0, 9, 6, 0, 2, 0, 1, 1, 1]': ([0.300364, 0.29993, 0.267653, 0.266214, 0.263347, 0.253035, 0.262787, 0.266217, 0.26261, 0.263088, 0.266106, 0.266041, 0.260455, 0.260424, 0.260516, 0.258907, 0.258843, 0.256634, 0.258798, 0.259194, 0.258789, 0.258961, 0.258817, 0.258782, 0.258833, 0.258932, 0.258969, 0.259029, 0.25879, 0.258666], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	40
        Max loop nest depth: 	5
        Additions: 		729
        Multiplications: 	252
        Divisions: 		0
        Logical: 		0
        Reads: 			1590
        Writes: 		333
        Comparisons:		40
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest41.exe __orio_perftest41.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest41.exe  
Program Test Output: 
{'[1, 6, 6, 6, 0, 4, 1, 1, 16, 4, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.104941}
{'[1, 6, 6, 6, 0, 4, 1, 1, 16, 4, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.104853}
{'[1, 6, 6, 6, 0, 4, 1, 1, 16, 4, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.104636}
{'[1, 6, 6, 6, 0, 4, 1, 1, 16, 4, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.10472}
{'[1, 6, 6, 6, 0, 4, 1, 1, 16, 4, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.103157}
{'[1, 6, 6, 6, 0, 4, 1, 1, 16, 4, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.10196}
{'[1, 6, 6, 6, 0, 4, 1, 1, 16, 4, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.101706}
{'[1, 6, 6, 6, 0, 4, 1, 1, 16, 4, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.102234}
{'[1, 6, 6, 6, 0, 4, 1, 1, 16, 4, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.104407}
{'[1, 6, 6, 6, 0, 4, 1, 1, 16, 4, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.10453}
{'[1, 6, 6, 6, 0, 4, 1, 1, 16, 4, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.105106}
{'[1, 6, 6, 6, 0, 4, 1, 1, 16, 4, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.104722}
{'[1, 6, 6, 6, 0, 4, 1, 1, 16, 4, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.104917}
{'[1, 6, 6, 6, 0, 4, 1, 1, 16, 4, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.10449}
{'[1, 6, 6, 6, 0, 4, 1, 1, 16, 4, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.104383}
{'[1, 6, 6, 6, 0, 4, 1, 1, 16, 4, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.101825}
{'[1, 6, 6, 6, 0, 4, 1, 1, 16, 4, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.101729}
{'[1, 6, 6, 6, 0, 4, 1, 1, 16, 4, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.101899}
{'[1, 6, 6, 6, 0, 4, 1, 1, 16, 4, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.10453}
{'[1, 6, 6, 6, 0, 4, 1, 1, 16, 4, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.104621}
{'[1, 6, 6, 6, 0, 4, 1, 1, 16, 4, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.104577}
{'[1, 6, 6, 6, 0, 4, 1, 1, 16, 4, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.104607}
{'[1, 6, 6, 6, 0, 4, 1, 1, 16, 4, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.104915}
{'[1, 6, 6, 6, 0, 4, 1, 1, 16, 4, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.102519}
{'[1, 6, 6, 6, 0, 4, 1, 1, 16, 4, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.10222}
{'[1, 6, 6, 6, 0, 4, 1, 1, 16, 4, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.101794}
{'[1, 6, 6, 6, 0, 4, 1, 1, 16, 4, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.101739}
{'[1, 6, 6, 6, 0, 4, 1, 1, 16, 4, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.101744}
{'[1, 6, 6, 6, 0, 4, 1, 1, 16, 4, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.101718}
{'[1, 6, 6, 6, 0, 4, 1, 1, 16, 4, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.10281}

out:
 ["{'[1, 6, 6, 6, 0, 4, 1, 1, 16, 4, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.104941}", "{'[1, 6, 6, 6, 0, 4, 1, 1, 16, 4, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.104853}", "{'[1, 6, 6, 6, 0, 4, 1, 1, 16, 4, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.104636}", "{'[1, 6, 6, 6, 0, 4, 1, 1, 16, 4, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.10472}", "{'[1, 6, 6, 6, 0, 4, 1, 1, 16, 4, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.103157}", "{'[1, 6, 6, 6, 0, 4, 1, 1, 16, 4, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.10196}", "{'[1, 6, 6, 6, 0, 4, 1, 1, 16, 4, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.101706}", "{'[1, 6, 6, 6, 0, 4, 1, 1, 16, 4, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.102234}", "{'[1, 6, 6, 6, 0, 4, 1, 1, 16, 4, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.104407}", "{'[1, 6, 6, 6, 0, 4, 1, 1, 16, 4, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.10453}", "{'[1, 6, 6, 6, 0, 4, 1, 1, 16, 4, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.105106}", "{'[1, 6, 6, 6, 0, 4, 1, 1, 16, 4, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.104722}", "{'[1, 6, 6, 6, 0, 4, 1, 1, 16, 4, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.104917}", "{'[1, 6, 6, 6, 0, 4, 1, 1, 16, 4, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.10449}", "{'[1, 6, 6, 6, 0, 4, 1, 1, 16, 4, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.104383}", "{'[1, 6, 6, 6, 0, 4, 1, 1, 16, 4, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.101825}", "{'[1, 6, 6, 6, 0, 4, 1, 1, 16, 4, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.101729}", "{'[1, 6, 6, 6, 0, 4, 1, 1, 16, 4, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.101899}", "{'[1, 6, 6, 6, 0, 4, 1, 1, 16, 4, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.10453}", "{'[1, 6, 6, 6, 0, 4, 1, 1, 16, 4, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.104621}", "{'[1, 6, 6, 6, 0, 4, 1, 1, 16, 4, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.104577}", "{'[1, 6, 6, 6, 0, 4, 1, 1, 16, 4, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.104607}", "{'[1, 6, 6, 6, 0, 4, 1, 1, 16, 4, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.104915}", "{'[1, 6, 6, 6, 0, 4, 1, 1, 16, 4, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.102519}", "{'[1, 6, 6, 6, 0, 4, 1, 1, 16, 4, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.10222}", "{'[1, 6, 6, 6, 0, 4, 1, 1, 16, 4, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.101794}", "{'[1, 6, 6, 6, 0, 4, 1, 1, 16, 4, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.101739}", "{'[1, 6, 6, 6, 0, 4, 1, 1, 16, 4, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.101744}", "{'[1, 6, 6, 6, 0, 4, 1, 1, 16, 4, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.101718}", "{'[1, 6, 6, 6, 0, 4, 1, 1, 16, 4, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.10281}"]
returning from 'run': {'[1, 6, 6, 6, 0, 4, 1, 1, 16, 4, 0, 25, 1, 0, 1, 1, 1, 0]': ([0.104941, 0.104853, 0.104636, 0.10472, 0.103157, 0.10196, 0.101706, 0.102234, 0.104407, 0.10453, 0.105106, 0.104722, 0.104917, 0.10449, 0.104383, 0.101825, 0.101729, 0.101899, 0.10453, 0.104621, 0.104577, 0.104607, 0.104915, 0.102519, 0.10222, 0.101794, 0.101739, 0.101744, 0.101718, 0.10281], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 6, 6, 6, 0, 4, 1, 1, 16, 4, 0, 25, 1, 0, 1, 1, 1, 0]': ([0.104941, 0.104853, 0.104636, 0.10472, 0.103157, 0.10196, 0.101706, 0.102234, 0.104407, 0.10453, 0.105106, 0.104722, 0.104917, 0.10449, 0.104383, 0.101825, 0.101729, 0.101899, 0.10453, 0.104621, 0.104577, 0.104607, 0.104915, 0.102519, 0.10222, 0.101794, 0.101739, 0.101744, 0.101718, 0.10281], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	5
        Additions: 		186
        Multiplications: 	74
        Divisions: 		0
        Logical: 		0
        Reads: 			447
        Writes: 		61
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest42.exe __orio_perftest42.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest42.exe  
Program Test Output: 
{'[3, 3, 5, 0, 5, 0, 0, 0, 0, 0, 18, 0, 0, 1, 1, 0, 0, 0]' : 0.233546}
{'[3, 3, 5, 0, 5, 0, 0, 0, 0, 0, 18, 0, 0, 1, 1, 0, 0, 0]' : 0.209837}
{'[3, 3, 5, 0, 5, 0, 0, 0, 0, 0, 18, 0, 0, 1, 1, 0, 0, 0]' : 0.1958}
{'[3, 3, 5, 0, 5, 0, 0, 0, 0, 0, 18, 0, 0, 1, 1, 0, 0, 0]' : 0.195785}
{'[3, 3, 5, 0, 5, 0, 0, 0, 0, 0, 18, 0, 0, 1, 1, 0, 0, 0]' : 0.195773}
{'[3, 3, 5, 0, 5, 0, 0, 0, 0, 0, 18, 0, 0, 1, 1, 0, 0, 0]' : 0.195752}
{'[3, 3, 5, 0, 5, 0, 0, 0, 0, 0, 18, 0, 0, 1, 1, 0, 0, 0]' : 0.196351}
{'[3, 3, 5, 0, 5, 0, 0, 0, 0, 0, 18, 0, 0, 1, 1, 0, 0, 0]' : 0.196196}
{'[3, 3, 5, 0, 5, 0, 0, 0, 0, 0, 18, 0, 0, 1, 1, 0, 0, 0]' : 0.195799}
{'[3, 3, 5, 0, 5, 0, 0, 0, 0, 0, 18, 0, 0, 1, 1, 0, 0, 0]' : 0.195764}
{'[3, 3, 5, 0, 5, 0, 0, 0, 0, 0, 18, 0, 0, 1, 1, 0, 0, 0]' : 0.196277}
{'[3, 3, 5, 0, 5, 0, 0, 0, 0, 0, 18, 0, 0, 1, 1, 0, 0, 0]' : 0.19599}
{'[3, 3, 5, 0, 5, 0, 0, 0, 0, 0, 18, 0, 0, 1, 1, 0, 0, 0]' : 0.195975}
{'[3, 3, 5, 0, 5, 0, 0, 0, 0, 0, 18, 0, 0, 1, 1, 0, 0, 0]' : 0.195945}
{'[3, 3, 5, 0, 5, 0, 0, 0, 0, 0, 18, 0, 0, 1, 1, 0, 0, 0]' : 0.196539}
{'[3, 3, 5, 0, 5, 0, 0, 0, 0, 0, 18, 0, 0, 1, 1, 0, 0, 0]' : 0.195956}
{'[3, 3, 5, 0, 5, 0, 0, 0, 0, 0, 18, 0, 0, 1, 1, 0, 0, 0]' : 0.195958}
{'[3, 3, 5, 0, 5, 0, 0, 0, 0, 0, 18, 0, 0, 1, 1, 0, 0, 0]' : 0.196191}
{'[3, 3, 5, 0, 5, 0, 0, 0, 0, 0, 18, 0, 0, 1, 1, 0, 0, 0]' : 0.195997}
{'[3, 3, 5, 0, 5, 0, 0, 0, 0, 0, 18, 0, 0, 1, 1, 0, 0, 0]' : 0.195972}
{'[3, 3, 5, 0, 5, 0, 0, 0, 0, 0, 18, 0, 0, 1, 1, 0, 0, 0]' : 0.195997}
{'[3, 3, 5, 0, 5, 0, 0, 0, 0, 0, 18, 0, 0, 1, 1, 0, 0, 0]' : 0.196482}
{'[3, 3, 5, 0, 5, 0, 0, 0, 0, 0, 18, 0, 0, 1, 1, 0, 0, 0]' : 0.195998}
{'[3, 3, 5, 0, 5, 0, 0, 0, 0, 0, 18, 0, 0, 1, 1, 0, 0, 0]' : 0.195979}
{'[3, 3, 5, 0, 5, 0, 0, 0, 0, 0, 18, 0, 0, 1, 1, 0, 0, 0]' : 0.196262}
{'[3, 3, 5, 0, 5, 0, 0, 0, 0, 0, 18, 0, 0, 1, 1, 0, 0, 0]' : 0.196212}
{'[3, 3, 5, 0, 5, 0, 0, 0, 0, 0, 18, 0, 0, 1, 1, 0, 0, 0]' : 0.196029}
{'[3, 3, 5, 0, 5, 0, 0, 0, 0, 0, 18, 0, 0, 1, 1, 0, 0, 0]' : 0.196206}
{'[3, 3, 5, 0, 5, 0, 0, 0, 0, 0, 18, 0, 0, 1, 1, 0, 0, 0]' : 0.195979}
{'[3, 3, 5, 0, 5, 0, 0, 0, 0, 0, 18, 0, 0, 1, 1, 0, 0, 0]' : 0.196573}

out:
 ["{'[3, 3, 5, 0, 5, 0, 0, 0, 0, 0, 18, 0, 0, 1, 1, 0, 0, 0]' : 0.233546}", "{'[3, 3, 5, 0, 5, 0, 0, 0, 0, 0, 18, 0, 0, 1, 1, 0, 0, 0]' : 0.209837}", "{'[3, 3, 5, 0, 5, 0, 0, 0, 0, 0, 18, 0, 0, 1, 1, 0, 0, 0]' : 0.1958}", "{'[3, 3, 5, 0, 5, 0, 0, 0, 0, 0, 18, 0, 0, 1, 1, 0, 0, 0]' : 0.195785}", "{'[3, 3, 5, 0, 5, 0, 0, 0, 0, 0, 18, 0, 0, 1, 1, 0, 0, 0]' : 0.195773}", "{'[3, 3, 5, 0, 5, 0, 0, 0, 0, 0, 18, 0, 0, 1, 1, 0, 0, 0]' : 0.195752}", "{'[3, 3, 5, 0, 5, 0, 0, 0, 0, 0, 18, 0, 0, 1, 1, 0, 0, 0]' : 0.196351}", "{'[3, 3, 5, 0, 5, 0, 0, 0, 0, 0, 18, 0, 0, 1, 1, 0, 0, 0]' : 0.196196}", "{'[3, 3, 5, 0, 5, 0, 0, 0, 0, 0, 18, 0, 0, 1, 1, 0, 0, 0]' : 0.195799}", "{'[3, 3, 5, 0, 5, 0, 0, 0, 0, 0, 18, 0, 0, 1, 1, 0, 0, 0]' : 0.195764}", "{'[3, 3, 5, 0, 5, 0, 0, 0, 0, 0, 18, 0, 0, 1, 1, 0, 0, 0]' : 0.196277}", "{'[3, 3, 5, 0, 5, 0, 0, 0, 0, 0, 18, 0, 0, 1, 1, 0, 0, 0]' : 0.19599}", "{'[3, 3, 5, 0, 5, 0, 0, 0, 0, 0, 18, 0, 0, 1, 1, 0, 0, 0]' : 0.195975}", "{'[3, 3, 5, 0, 5, 0, 0, 0, 0, 0, 18, 0, 0, 1, 1, 0, 0, 0]' : 0.195945}", "{'[3, 3, 5, 0, 5, 0, 0, 0, 0, 0, 18, 0, 0, 1, 1, 0, 0, 0]' : 0.196539}", "{'[3, 3, 5, 0, 5, 0, 0, 0, 0, 0, 18, 0, 0, 1, 1, 0, 0, 0]' : 0.195956}", "{'[3, 3, 5, 0, 5, 0, 0, 0, 0, 0, 18, 0, 0, 1, 1, 0, 0, 0]' : 0.195958}", "{'[3, 3, 5, 0, 5, 0, 0, 0, 0, 0, 18, 0, 0, 1, 1, 0, 0, 0]' : 0.196191}", "{'[3, 3, 5, 0, 5, 0, 0, 0, 0, 0, 18, 0, 0, 1, 1, 0, 0, 0]' : 0.195997}", "{'[3, 3, 5, 0, 5, 0, 0, 0, 0, 0, 18, 0, 0, 1, 1, 0, 0, 0]' : 0.195972}", "{'[3, 3, 5, 0, 5, 0, 0, 0, 0, 0, 18, 0, 0, 1, 1, 0, 0, 0]' : 0.195997}", "{'[3, 3, 5, 0, 5, 0, 0, 0, 0, 0, 18, 0, 0, 1, 1, 0, 0, 0]' : 0.196482}", "{'[3, 3, 5, 0, 5, 0, 0, 0, 0, 0, 18, 0, 0, 1, 1, 0, 0, 0]' : 0.195998}", "{'[3, 3, 5, 0, 5, 0, 0, 0, 0, 0, 18, 0, 0, 1, 1, 0, 0, 0]' : 0.195979}", "{'[3, 3, 5, 0, 5, 0, 0, 0, 0, 0, 18, 0, 0, 1, 1, 0, 0, 0]' : 0.196262}", "{'[3, 3, 5, 0, 5, 0, 0, 0, 0, 0, 18, 0, 0, 1, 1, 0, 0, 0]' : 0.196212}", "{'[3, 3, 5, 0, 5, 0, 0, 0, 0, 0, 18, 0, 0, 1, 1, 0, 0, 0]' : 0.196029}", "{'[3, 3, 5, 0, 5, 0, 0, 0, 0, 0, 18, 0, 0, 1, 1, 0, 0, 0]' : 0.196206}", "{'[3, 3, 5, 0, 5, 0, 0, 0, 0, 0, 18, 0, 0, 1, 1, 0, 0, 0]' : 0.195979}", "{'[3, 3, 5, 0, 5, 0, 0, 0, 0, 0, 18, 0, 0, 1, 1, 0, 0, 0]' : 0.196573}"]
returning from 'run': {'[3, 3, 5, 0, 5, 0, 0, 0, 0, 0, 18, 0, 0, 1, 1, 0, 0, 0]': ([0.233546, 0.209837, 0.1958, 0.195785, 0.195773, 0.195752, 0.196351, 0.196196, 0.195799, 0.195764, 0.196277, 0.19599, 0.195975, 0.195945, 0.196539, 0.195956, 0.195958, 0.196191, 0.195997, 0.195972, 0.195997, 0.196482, 0.195998, 0.195979, 0.196262, 0.196212, 0.196029, 0.196206, 0.195979, 0.196573], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 3, 5, 0, 5, 0, 0, 0, 0, 0, 18, 0, 0, 1, 1, 0, 0, 0]': ([0.233546, 0.209837, 0.1958, 0.195785, 0.195773, 0.195752, 0.196351, 0.196196, 0.195799, 0.195764, 0.196277, 0.19599, 0.195975, 0.195945, 0.196539, 0.195956, 0.195958, 0.196191, 0.195997, 0.195972, 0.195997, 0.196482, 0.195998, 0.195979, 0.196262, 0.196212, 0.196029, 0.196206, 0.195979, 0.196573], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = jjj
Code stats:
        Number of loops: 	93
        Max loop nest depth: 	5
        Additions: 		4854
        Multiplications: 	1150
        Divisions: 		0
        Logical: 		0
        Reads: 			7433
        Writes: 		843
        Comparisons:		93
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest43.exe __orio_perftest43.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest43.exe  
Program Test Output: 
{'[0, 4, 6, 1, 2, 6, 0, 1, 26, 15, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.112686}
{'[0, 4, 6, 1, 2, 6, 0, 1, 26, 15, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.112406}
{'[0, 4, 6, 1, 2, 6, 0, 1, 26, 15, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.112338}
{'[0, 4, 6, 1, 2, 6, 0, 1, 26, 15, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.112397}
{'[0, 4, 6, 1, 2, 6, 0, 1, 26, 15, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.112641}
{'[0, 4, 6, 1, 2, 6, 0, 1, 26, 15, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.112421}
{'[0, 4, 6, 1, 2, 6, 0, 1, 26, 15, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.112393}
{'[0, 4, 6, 1, 2, 6, 0, 1, 26, 15, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.112412}
{'[0, 4, 6, 1, 2, 6, 0, 1, 26, 15, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.112442}
{'[0, 4, 6, 1, 2, 6, 0, 1, 26, 15, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.112444}
{'[0, 4, 6, 1, 2, 6, 0, 1, 26, 15, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.112349}
{'[0, 4, 6, 1, 2, 6, 0, 1, 26, 15, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.112385}
{'[0, 4, 6, 1, 2, 6, 0, 1, 26, 15, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.110999}
{'[0, 4, 6, 1, 2, 6, 0, 1, 26, 15, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.110547}
{'[0, 4, 6, 1, 2, 6, 0, 1, 26, 15, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.110566}
{'[0, 4, 6, 1, 2, 6, 0, 1, 26, 15, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.107247}
{'[0, 4, 6, 1, 2, 6, 0, 1, 26, 15, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.106412}
{'[0, 4, 6, 1, 2, 6, 0, 1, 26, 15, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.106478}
{'[0, 4, 6, 1, 2, 6, 0, 1, 26, 15, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.109169}
{'[0, 4, 6, 1, 2, 6, 0, 1, 26, 15, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.109059}
{'[0, 4, 6, 1, 2, 6, 0, 1, 26, 15, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.106914}
{'[0, 4, 6, 1, 2, 6, 0, 1, 26, 15, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.106624}
{'[0, 4, 6, 1, 2, 6, 0, 1, 26, 15, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.107251}
{'[0, 4, 6, 1, 2, 6, 0, 1, 26, 15, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.112402}
{'[0, 4, 6, 1, 2, 6, 0, 1, 26, 15, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.110954}
{'[0, 4, 6, 1, 2, 6, 0, 1, 26, 15, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.10919}
{'[0, 4, 6, 1, 2, 6, 0, 1, 26, 15, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.106502}
{'[0, 4, 6, 1, 2, 6, 0, 1, 26, 15, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.109746}
{'[0, 4, 6, 1, 2, 6, 0, 1, 26, 15, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.112391}
{'[0, 4, 6, 1, 2, 6, 0, 1, 26, 15, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.112514}

out:
 ["{'[0, 4, 6, 1, 2, 6, 0, 1, 26, 15, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.112686}", "{'[0, 4, 6, 1, 2, 6, 0, 1, 26, 15, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.112406}", "{'[0, 4, 6, 1, 2, 6, 0, 1, 26, 15, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.112338}", "{'[0, 4, 6, 1, 2, 6, 0, 1, 26, 15, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.112397}", "{'[0, 4, 6, 1, 2, 6, 0, 1, 26, 15, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.112641}", "{'[0, 4, 6, 1, 2, 6, 0, 1, 26, 15, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.112421}", "{'[0, 4, 6, 1, 2, 6, 0, 1, 26, 15, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.112393}", "{'[0, 4, 6, 1, 2, 6, 0, 1, 26, 15, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.112412}", "{'[0, 4, 6, 1, 2, 6, 0, 1, 26, 15, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.112442}", "{'[0, 4, 6, 1, 2, 6, 0, 1, 26, 15, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.112444}", "{'[0, 4, 6, 1, 2, 6, 0, 1, 26, 15, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.112349}", "{'[0, 4, 6, 1, 2, 6, 0, 1, 26, 15, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.112385}", "{'[0, 4, 6, 1, 2, 6, 0, 1, 26, 15, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.110999}", "{'[0, 4, 6, 1, 2, 6, 0, 1, 26, 15, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.110547}", "{'[0, 4, 6, 1, 2, 6, 0, 1, 26, 15, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.110566}", "{'[0, 4, 6, 1, 2, 6, 0, 1, 26, 15, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.107247}", "{'[0, 4, 6, 1, 2, 6, 0, 1, 26, 15, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.106412}", "{'[0, 4, 6, 1, 2, 6, 0, 1, 26, 15, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.106478}", "{'[0, 4, 6, 1, 2, 6, 0, 1, 26, 15, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.109169}", "{'[0, 4, 6, 1, 2, 6, 0, 1, 26, 15, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.109059}", "{'[0, 4, 6, 1, 2, 6, 0, 1, 26, 15, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.106914}", "{'[0, 4, 6, 1, 2, 6, 0, 1, 26, 15, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.106624}", "{'[0, 4, 6, 1, 2, 6, 0, 1, 26, 15, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.107251}", "{'[0, 4, 6, 1, 2, 6, 0, 1, 26, 15, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.112402}", "{'[0, 4, 6, 1, 2, 6, 0, 1, 26, 15, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.110954}", "{'[0, 4, 6, 1, 2, 6, 0, 1, 26, 15, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.10919}", "{'[0, 4, 6, 1, 2, 6, 0, 1, 26, 15, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.106502}", "{'[0, 4, 6, 1, 2, 6, 0, 1, 26, 15, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.109746}", "{'[0, 4, 6, 1, 2, 6, 0, 1, 26, 15, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.112391}", "{'[0, 4, 6, 1, 2, 6, 0, 1, 26, 15, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.112514}"]
returning from 'run': {'[0, 4, 6, 1, 2, 6, 0, 1, 26, 15, 0, 12, 1, 1, 0, 0, 0, 0]': ([0.112686, 0.112406, 0.112338, 0.112397, 0.112641, 0.112421, 0.112393, 0.112412, 0.112442, 0.112444, 0.112349, 0.112385, 0.110999, 0.110547, 0.110566, 0.107247, 0.106412, 0.106478, 0.109169, 0.109059, 0.106914, 0.106624, 0.107251, 0.112402, 0.110954, 0.10919, 0.106502, 0.109746, 0.112391, 0.112514], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 4, 6, 1, 2, 6, 0, 1, 26, 15, 0, 12, 1, 1, 0, 0, 0, 0]': ([0.112686, 0.112406, 0.112338, 0.112397, 0.112641, 0.112421, 0.112393, 0.112412, 0.112442, 0.112444, 0.112349, 0.112385, 0.110999, 0.110547, 0.110566, 0.107247, 0.106412, 0.106478, 0.109169, 0.109059, 0.106914, 0.106624, 0.107251, 0.112402, 0.110954, 0.10919, 0.106502, 0.109746, 0.112391, 0.112514], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	77
        Max loop nest depth: 	5
        Additions: 		7750
        Multiplications: 	2256
        Divisions: 		0
        Logical: 		0
        Reads: 			12075
        Writes: 		1334
        Comparisons:		77
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest44.exe __orio_perftest44.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest44.exe  
Program Test Output: 
{'[1, 0, 1, 1, 0, 0, 1, 1, 2, 13, 21, 0, 2, 0, 0, 0, 0, 0]' : 0.280543}
{'[1, 0, 1, 1, 0, 0, 1, 1, 2, 13, 21, 0, 2, 0, 0, 0, 0, 0]' : 0.277192}
{'[1, 0, 1, 1, 0, 0, 1, 1, 2, 13, 21, 0, 2, 0, 0, 0, 0, 0]' : 0.244341}
{'[1, 0, 1, 1, 0, 0, 1, 1, 2, 13, 21, 0, 2, 0, 0, 0, 0, 0]' : 0.243345}
{'[1, 0, 1, 1, 0, 0, 1, 1, 2, 13, 21, 0, 2, 0, 0, 0, 0, 0]' : 0.249553}
{'[1, 0, 1, 1, 0, 0, 1, 1, 2, 13, 21, 0, 2, 0, 0, 0, 0, 0]' : 0.250824}
{'[1, 0, 1, 1, 0, 0, 1, 1, 2, 13, 21, 0, 2, 0, 0, 0, 0, 0]' : 0.249948}
{'[1, 0, 1, 1, 0, 0, 1, 1, 2, 13, 21, 0, 2, 0, 0, 0, 0, 0]' : 0.240087}
{'[1, 0, 1, 1, 0, 0, 1, 1, 2, 13, 21, 0, 2, 0, 0, 0, 0, 0]' : 0.241856}
{'[1, 0, 1, 1, 0, 0, 1, 1, 2, 13, 21, 0, 2, 0, 0, 0, 0, 0]' : 0.243279}
{'[1, 0, 1, 1, 0, 0, 1, 1, 2, 13, 21, 0, 2, 0, 0, 0, 0, 0]' : 0.249093}
{'[1, 0, 1, 1, 0, 0, 1, 1, 2, 13, 21, 0, 2, 0, 0, 0, 0, 0]' : 0.250823}
{'[1, 0, 1, 1, 0, 0, 1, 1, 2, 13, 21, 0, 2, 0, 0, 0, 0, 0]' : 0.245166}
{'[1, 0, 1, 1, 0, 0, 1, 1, 2, 13, 21, 0, 2, 0, 0, 0, 0, 0]' : 0.243444}
{'[1, 0, 1, 1, 0, 0, 1, 1, 2, 13, 21, 0, 2, 0, 0, 0, 0, 0]' : 0.243888}
{'[1, 0, 1, 1, 0, 0, 1, 1, 2, 13, 21, 0, 2, 0, 0, 0, 0, 0]' : 0.243799}
{'[1, 0, 1, 1, 0, 0, 1, 1, 2, 13, 21, 0, 2, 0, 0, 0, 0, 0]' : 0.243357}
{'[1, 0, 1, 1, 0, 0, 1, 1, 2, 13, 21, 0, 2, 0, 0, 0, 0, 0]' : 0.243147}
{'[1, 0, 1, 1, 0, 0, 1, 1, 2, 13, 21, 0, 2, 0, 0, 0, 0, 0]' : 0.24366}
{'[1, 0, 1, 1, 0, 0, 1, 1, 2, 13, 21, 0, 2, 0, 0, 0, 0, 0]' : 0.243856}
{'[1, 0, 1, 1, 0, 0, 1, 1, 2, 13, 21, 0, 2, 0, 0, 0, 0, 0]' : 0.243397}
{'[1, 0, 1, 1, 0, 0, 1, 1, 2, 13, 21, 0, 2, 0, 0, 0, 0, 0]' : 0.243737}
{'[1, 0, 1, 1, 0, 0, 1, 1, 2, 13, 21, 0, 2, 0, 0, 0, 0, 0]' : 0.243531}
{'[1, 0, 1, 1, 0, 0, 1, 1, 2, 13, 21, 0, 2, 0, 0, 0, 0, 0]' : 0.244322}
{'[1, 0, 1, 1, 0, 0, 1, 1, 2, 13, 21, 0, 2, 0, 0, 0, 0, 0]' : 0.243529}
{'[1, 0, 1, 1, 0, 0, 1, 1, 2, 13, 21, 0, 2, 0, 0, 0, 0, 0]' : 0.245602}
{'[1, 0, 1, 1, 0, 0, 1, 1, 2, 13, 21, 0, 2, 0, 0, 0, 0, 0]' : 0.247643}
{'[1, 0, 1, 1, 0, 0, 1, 1, 2, 13, 21, 0, 2, 0, 0, 0, 0, 0]' : 0.243613}
{'[1, 0, 1, 1, 0, 0, 1, 1, 2, 13, 21, 0, 2, 0, 0, 0, 0, 0]' : 0.243637}
{'[1, 0, 1, 1, 0, 0, 1, 1, 2, 13, 21, 0, 2, 0, 0, 0, 0, 0]' : 0.243413}

out:
 ["{'[1, 0, 1, 1, 0, 0, 1, 1, 2, 13, 21, 0, 2, 0, 0, 0, 0, 0]' : 0.280543}", "{'[1, 0, 1, 1, 0, 0, 1, 1, 2, 13, 21, 0, 2, 0, 0, 0, 0, 0]' : 0.277192}", "{'[1, 0, 1, 1, 0, 0, 1, 1, 2, 13, 21, 0, 2, 0, 0, 0, 0, 0]' : 0.244341}", "{'[1, 0, 1, 1, 0, 0, 1, 1, 2, 13, 21, 0, 2, 0, 0, 0, 0, 0]' : 0.243345}", "{'[1, 0, 1, 1, 0, 0, 1, 1, 2, 13, 21, 0, 2, 0, 0, 0, 0, 0]' : 0.249553}", "{'[1, 0, 1, 1, 0, 0, 1, 1, 2, 13, 21, 0, 2, 0, 0, 0, 0, 0]' : 0.250824}", "{'[1, 0, 1, 1, 0, 0, 1, 1, 2, 13, 21, 0, 2, 0, 0, 0, 0, 0]' : 0.249948}", "{'[1, 0, 1, 1, 0, 0, 1, 1, 2, 13, 21, 0, 2, 0, 0, 0, 0, 0]' : 0.240087}", "{'[1, 0, 1, 1, 0, 0, 1, 1, 2, 13, 21, 0, 2, 0, 0, 0, 0, 0]' : 0.241856}", "{'[1, 0, 1, 1, 0, 0, 1, 1, 2, 13, 21, 0, 2, 0, 0, 0, 0, 0]' : 0.243279}", "{'[1, 0, 1, 1, 0, 0, 1, 1, 2, 13, 21, 0, 2, 0, 0, 0, 0, 0]' : 0.249093}", "{'[1, 0, 1, 1, 0, 0, 1, 1, 2, 13, 21, 0, 2, 0, 0, 0, 0, 0]' : 0.250823}", "{'[1, 0, 1, 1, 0, 0, 1, 1, 2, 13, 21, 0, 2, 0, 0, 0, 0, 0]' : 0.245166}", "{'[1, 0, 1, 1, 0, 0, 1, 1, 2, 13, 21, 0, 2, 0, 0, 0, 0, 0]' : 0.243444}", "{'[1, 0, 1, 1, 0, 0, 1, 1, 2, 13, 21, 0, 2, 0, 0, 0, 0, 0]' : 0.243888}", "{'[1, 0, 1, 1, 0, 0, 1, 1, 2, 13, 21, 0, 2, 0, 0, 0, 0, 0]' : 0.243799}", "{'[1, 0, 1, 1, 0, 0, 1, 1, 2, 13, 21, 0, 2, 0, 0, 0, 0, 0]' : 0.243357}", "{'[1, 0, 1, 1, 0, 0, 1, 1, 2, 13, 21, 0, 2, 0, 0, 0, 0, 0]' : 0.243147}", "{'[1, 0, 1, 1, 0, 0, 1, 1, 2, 13, 21, 0, 2, 0, 0, 0, 0, 0]' : 0.24366}", "{'[1, 0, 1, 1, 0, 0, 1, 1, 2, 13, 21, 0, 2, 0, 0, 0, 0, 0]' : 0.243856}", "{'[1, 0, 1, 1, 0, 0, 1, 1, 2, 13, 21, 0, 2, 0, 0, 0, 0, 0]' : 0.243397}", "{'[1, 0, 1, 1, 0, 0, 1, 1, 2, 13, 21, 0, 2, 0, 0, 0, 0, 0]' : 0.243737}", "{'[1, 0, 1, 1, 0, 0, 1, 1, 2, 13, 21, 0, 2, 0, 0, 0, 0, 0]' : 0.243531}", "{'[1, 0, 1, 1, 0, 0, 1, 1, 2, 13, 21, 0, 2, 0, 0, 0, 0, 0]' : 0.244322}", "{'[1, 0, 1, 1, 0, 0, 1, 1, 2, 13, 21, 0, 2, 0, 0, 0, 0, 0]' : 0.243529}", "{'[1, 0, 1, 1, 0, 0, 1, 1, 2, 13, 21, 0, 2, 0, 0, 0, 0, 0]' : 0.245602}", "{'[1, 0, 1, 1, 0, 0, 1, 1, 2, 13, 21, 0, 2, 0, 0, 0, 0, 0]' : 0.247643}", "{'[1, 0, 1, 1, 0, 0, 1, 1, 2, 13, 21, 0, 2, 0, 0, 0, 0, 0]' : 0.243613}", "{'[1, 0, 1, 1, 0, 0, 1, 1, 2, 13, 21, 0, 2, 0, 0, 0, 0, 0]' : 0.243637}", "{'[1, 0, 1, 1, 0, 0, 1, 1, 2, 13, 21, 0, 2, 0, 0, 0, 0, 0]' : 0.243413}"]
returning from 'run': {'[1, 0, 1, 1, 0, 0, 1, 1, 2, 13, 21, 0, 2, 0, 0, 0, 0, 0]': ([0.280543, 0.277192, 0.244341, 0.243345, 0.249553, 0.250824, 0.249948, 0.240087, 0.241856, 0.243279, 0.249093, 0.250823, 0.245166, 0.243444, 0.243888, 0.243799, 0.243357, 0.243147, 0.24366, 0.243856, 0.243397, 0.243737, 0.243531, 0.244322, 0.243529, 0.245602, 0.247643, 0.243613, 0.243637, 0.243413], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 1, 1, 0, 0, 1, 1, 2, 13, 21, 0, 2, 0, 0, 0, 0, 0]': ([0.280543, 0.277192, 0.244341, 0.243345, 0.249553, 0.250824, 0.249948, 0.240087, 0.241856, 0.243279, 0.249093, 0.250823, 0.245166, 0.243444, 0.243888, 0.243799, 0.243357, 0.243147, 0.24366, 0.243856, 0.243397, 0.243737, 0.243531, 0.244322, 0.243529, 0.245602, 0.247643, 0.243613, 0.243637, 0.243413], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
Code stats:
        Number of loops: 	36
        Max loop nest depth: 	5
        Additions: 		288
        Multiplications: 	48
        Divisions: 		0
        Logical: 		0
        Reads: 			663
        Writes: 		147
        Comparisons:		36
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest45.exe __orio_perftest45.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest45.exe  
Program Test Output: 
{'[3, 4, 6, 1, 0, 6, 1, 1, 29, 2, 0, 0, 1, 0, 0, 0, 0, 0]' : 0.109773}
{'[3, 4, 6, 1, 0, 6, 1, 1, 29, 2, 0, 0, 1, 0, 0, 0, 0, 0]' : 0.109873}
{'[3, 4, 6, 1, 0, 6, 1, 1, 29, 2, 0, 0, 1, 0, 0, 0, 0, 0]' : 0.109526}
{'[3, 4, 6, 1, 0, 6, 1, 1, 29, 2, 0, 0, 1, 0, 0, 0, 0, 0]' : 0.109609}
{'[3, 4, 6, 1, 0, 6, 1, 1, 29, 2, 0, 0, 1, 0, 0, 0, 0, 0]' : 0.10735}
{'[3, 4, 6, 1, 0, 6, 1, 1, 29, 2, 0, 0, 1, 0, 0, 0, 0, 0]' : 0.0976362}
{'[3, 4, 6, 1, 0, 6, 1, 1, 29, 2, 0, 0, 1, 0, 0, 0, 0, 0]' : 0.0977838}
{'[3, 4, 6, 1, 0, 6, 1, 1, 29, 2, 0, 0, 1, 0, 0, 0, 0, 0]' : 0.097579}
{'[3, 4, 6, 1, 0, 6, 1, 1, 29, 2, 0, 0, 1, 0, 0, 0, 0, 0]' : 0.0975149}
{'[3, 4, 6, 1, 0, 6, 1, 1, 29, 2, 0, 0, 1, 0, 0, 0, 0, 0]' : 0.09694}
{'[3, 4, 6, 1, 0, 6, 1, 1, 29, 2, 0, 0, 1, 0, 0, 0, 0, 0]' : 0.0956891}
{'[3, 4, 6, 1, 0, 6, 1, 1, 29, 2, 0, 0, 1, 0, 0, 0, 0, 0]' : 0.09694}
{'[3, 4, 6, 1, 0, 6, 1, 1, 29, 2, 0, 0, 1, 0, 0, 0, 0, 0]' : 0.0977011}
{'[3, 4, 6, 1, 0, 6, 1, 1, 29, 2, 0, 0, 1, 0, 0, 0, 0, 0]' : 0.097682}
{'[3, 4, 6, 1, 0, 6, 1, 1, 29, 2, 0, 0, 1, 0, 0, 0, 0, 0]' : 0.097276}
{'[3, 4, 6, 1, 0, 6, 1, 1, 29, 2, 0, 0, 1, 0, 0, 0, 0, 0]' : 0.0974021}
{'[3, 4, 6, 1, 0, 6, 1, 1, 29, 2, 0, 0, 1, 0, 0, 0, 0, 0]' : 0.097712}
{'[3, 4, 6, 1, 0, 6, 1, 1, 29, 2, 0, 0, 1, 0, 0, 0, 0, 0]' : 0.0980721}
{'[3, 4, 6, 1, 0, 6, 1, 1, 29, 2, 0, 0, 1, 0, 0, 0, 0, 0]' : 0.0974929}
{'[3, 4, 6, 1, 0, 6, 1, 1, 29, 2, 0, 0, 1, 0, 0, 0, 0, 0]' : 0.0975461}
{'[3, 4, 6, 1, 0, 6, 1, 1, 29, 2, 0, 0, 1, 0, 0, 0, 0, 0]' : 0.0974529}
{'[3, 4, 6, 1, 0, 6, 1, 1, 29, 2, 0, 0, 1, 0, 0, 0, 0, 0]' : 0.09763}
{'[3, 4, 6, 1, 0, 6, 1, 1, 29, 2, 0, 0, 1, 0, 0, 0, 0, 0]' : 0.0973241}
{'[3, 4, 6, 1, 0, 6, 1, 1, 29, 2, 0, 0, 1, 0, 0, 0, 0, 0]' : 0.0976069}
{'[3, 4, 6, 1, 0, 6, 1, 1, 29, 2, 0, 0, 1, 0, 0, 0, 0, 0]' : 0.0974159}
{'[3, 4, 6, 1, 0, 6, 1, 1, 29, 2, 0, 0, 1, 0, 0, 0, 0, 0]' : 0.0975678}
{'[3, 4, 6, 1, 0, 6, 1, 1, 29, 2, 0, 0, 1, 0, 0, 0, 0, 0]' : 0.0981569}
{'[3, 4, 6, 1, 0, 6, 1, 1, 29, 2, 0, 0, 1, 0, 0, 0, 0, 0]' : 0.099864}
{'[3, 4, 6, 1, 0, 6, 1, 1, 29, 2, 0, 0, 1, 0, 0, 0, 0, 0]' : 0.0999}
{'[3, 4, 6, 1, 0, 6, 1, 1, 29, 2, 0, 0, 1, 0, 0, 0, 0, 0]' : 0.0997391}

out:
 ["{'[3, 4, 6, 1, 0, 6, 1, 1, 29, 2, 0, 0, 1, 0, 0, 0, 0, 0]' : 0.109773}", "{'[3, 4, 6, 1, 0, 6, 1, 1, 29, 2, 0, 0, 1, 0, 0, 0, 0, 0]' : 0.109873}", "{'[3, 4, 6, 1, 0, 6, 1, 1, 29, 2, 0, 0, 1, 0, 0, 0, 0, 0]' : 0.109526}", "{'[3, 4, 6, 1, 0, 6, 1, 1, 29, 2, 0, 0, 1, 0, 0, 0, 0, 0]' : 0.109609}", "{'[3, 4, 6, 1, 0, 6, 1, 1, 29, 2, 0, 0, 1, 0, 0, 0, 0, 0]' : 0.10735}", "{'[3, 4, 6, 1, 0, 6, 1, 1, 29, 2, 0, 0, 1, 0, 0, 0, 0, 0]' : 0.0976362}", "{'[3, 4, 6, 1, 0, 6, 1, 1, 29, 2, 0, 0, 1, 0, 0, 0, 0, 0]' : 0.0977838}", "{'[3, 4, 6, 1, 0, 6, 1, 1, 29, 2, 0, 0, 1, 0, 0, 0, 0, 0]' : 0.097579}", "{'[3, 4, 6, 1, 0, 6, 1, 1, 29, 2, 0, 0, 1, 0, 0, 0, 0, 0]' : 0.0975149}", "{'[3, 4, 6, 1, 0, 6, 1, 1, 29, 2, 0, 0, 1, 0, 0, 0, 0, 0]' : 0.09694}", "{'[3, 4, 6, 1, 0, 6, 1, 1, 29, 2, 0, 0, 1, 0, 0, 0, 0, 0]' : 0.0956891}", "{'[3, 4, 6, 1, 0, 6, 1, 1, 29, 2, 0, 0, 1, 0, 0, 0, 0, 0]' : 0.09694}", "{'[3, 4, 6, 1, 0, 6, 1, 1, 29, 2, 0, 0, 1, 0, 0, 0, 0, 0]' : 0.0977011}", "{'[3, 4, 6, 1, 0, 6, 1, 1, 29, 2, 0, 0, 1, 0, 0, 0, 0, 0]' : 0.097682}", "{'[3, 4, 6, 1, 0, 6, 1, 1, 29, 2, 0, 0, 1, 0, 0, 0, 0, 0]' : 0.097276}", "{'[3, 4, 6, 1, 0, 6, 1, 1, 29, 2, 0, 0, 1, 0, 0, 0, 0, 0]' : 0.0974021}", "{'[3, 4, 6, 1, 0, 6, 1, 1, 29, 2, 0, 0, 1, 0, 0, 0, 0, 0]' : 0.097712}", "{'[3, 4, 6, 1, 0, 6, 1, 1, 29, 2, 0, 0, 1, 0, 0, 0, 0, 0]' : 0.0980721}", "{'[3, 4, 6, 1, 0, 6, 1, 1, 29, 2, 0, 0, 1, 0, 0, 0, 0, 0]' : 0.0974929}", "{'[3, 4, 6, 1, 0, 6, 1, 1, 29, 2, 0, 0, 1, 0, 0, 0, 0, 0]' : 0.0975461}", "{'[3, 4, 6, 1, 0, 6, 1, 1, 29, 2, 0, 0, 1, 0, 0, 0, 0, 0]' : 0.0974529}", "{'[3, 4, 6, 1, 0, 6, 1, 1, 29, 2, 0, 0, 1, 0, 0, 0, 0, 0]' : 0.09763}", "{'[3, 4, 6, 1, 0, 6, 1, 1, 29, 2, 0, 0, 1, 0, 0, 0, 0, 0]' : 0.0973241}", "{'[3, 4, 6, 1, 0, 6, 1, 1, 29, 2, 0, 0, 1, 0, 0, 0, 0, 0]' : 0.0976069}", "{'[3, 4, 6, 1, 0, 6, 1, 1, 29, 2, 0, 0, 1, 0, 0, 0, 0, 0]' : 0.0974159}", "{'[3, 4, 6, 1, 0, 6, 1, 1, 29, 2, 0, 0, 1, 0, 0, 0, 0, 0]' : 0.0975678}", "{'[3, 4, 6, 1, 0, 6, 1, 1, 29, 2, 0, 0, 1, 0, 0, 0, 0, 0]' : 0.0981569}", "{'[3, 4, 6, 1, 0, 6, 1, 1, 29, 2, 0, 0, 1, 0, 0, 0, 0, 0]' : 0.099864}", "{'[3, 4, 6, 1, 0, 6, 1, 1, 29, 2, 0, 0, 1, 0, 0, 0, 0, 0]' : 0.0999}", "{'[3, 4, 6, 1, 0, 6, 1, 1, 29, 2, 0, 0, 1, 0, 0, 0, 0, 0]' : 0.0997391}"]
returning from 'run': {'[3, 4, 6, 1, 0, 6, 1, 1, 29, 2, 0, 0, 1, 0, 0, 0, 0, 0]': ([0.109773, 0.109873, 0.109526, 0.109609, 0.10735, 0.0976362, 0.0977838, 0.097579, 0.0975149, 0.09694, 0.0956891, 0.09694, 0.0977011, 0.097682, 0.097276, 0.0974021, 0.097712, 0.0980721, 0.0974929, 0.0975461, 0.0974529, 0.09763, 0.0973241, 0.0976069, 0.0974159, 0.0975678, 0.0981569, 0.099864, 0.0999, 0.0997391], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 4, 6, 1, 0, 6, 1, 1, 29, 2, 0, 0, 1, 0, 0, 0, 0, 0]': ([0.109773, 0.109873, 0.109526, 0.109609, 0.10735, 0.0976362, 0.0977838, 0.097579, 0.0975149, 0.09694, 0.0956891, 0.09694, 0.0977011, 0.097682, 0.097276, 0.0974021, 0.097712, 0.0980721, 0.0974929, 0.0975461, 0.0974529, 0.09763, 0.0973241, 0.0976069, 0.0974159, 0.0975678, 0.0981569, 0.099864, 0.0999, 0.0997391], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	4
        Additions: 		1355
        Multiplications: 	616
        Divisions: 		0
        Logical: 		0
        Reads: 			2774
        Writes: 		518
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest46.exe __orio_perftest46.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest46.exe  
Program Test Output: 
{'[6, 0, 0, 0, 6, 3, 0, 0, 26, 4, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.100704}
{'[6, 0, 0, 0, 6, 3, 0, 0, 26, 4, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.100669}
{'[6, 0, 0, 0, 6, 3, 0, 0, 26, 4, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.096926}
{'[6, 0, 0, 0, 6, 3, 0, 0, 26, 4, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0874722}
{'[6, 0, 0, 0, 6, 3, 0, 0, 26, 4, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0873041}
{'[6, 0, 0, 0, 6, 3, 0, 0, 26, 4, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.087379}
{'[6, 0, 0, 0, 6, 3, 0, 0, 26, 4, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0873291}
{'[6, 0, 0, 0, 6, 3, 0, 0, 26, 4, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.087523}
{'[6, 0, 0, 0, 6, 3, 0, 0, 26, 4, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0874789}
{'[6, 0, 0, 0, 6, 3, 0, 0, 26, 4, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0874941}
{'[6, 0, 0, 0, 6, 3, 0, 0, 26, 4, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0877662}
{'[6, 0, 0, 0, 6, 3, 0, 0, 26, 4, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.087482}
{'[6, 0, 0, 0, 6, 3, 0, 0, 26, 4, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.087507}
{'[6, 0, 0, 0, 6, 3, 0, 0, 26, 4, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.087455}
{'[6, 0, 0, 0, 6, 3, 0, 0, 26, 4, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0875261}
{'[6, 0, 0, 0, 6, 3, 0, 0, 26, 4, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0874422}
{'[6, 0, 0, 0, 6, 3, 0, 0, 26, 4, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0874748}
{'[6, 0, 0, 0, 6, 3, 0, 0, 26, 4, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0874851}
{'[6, 0, 0, 0, 6, 3, 0, 0, 26, 4, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0874431}
{'[6, 0, 0, 0, 6, 3, 0, 0, 26, 4, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.087719}
{'[6, 0, 0, 0, 6, 3, 0, 0, 26, 4, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0874832}
{'[6, 0, 0, 0, 6, 3, 0, 0, 26, 4, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.087436}
{'[6, 0, 0, 0, 6, 3, 0, 0, 26, 4, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0875239}
{'[6, 0, 0, 0, 6, 3, 0, 0, 26, 4, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0877151}
{'[6, 0, 0, 0, 6, 3, 0, 0, 26, 4, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.087476}
{'[6, 0, 0, 0, 6, 3, 0, 0, 26, 4, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0874538}
{'[6, 0, 0, 0, 6, 3, 0, 0, 26, 4, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0874481}
{'[6, 0, 0, 0, 6, 3, 0, 0, 26, 4, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0874512}
{'[6, 0, 0, 0, 6, 3, 0, 0, 26, 4, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0873871}
{'[6, 0, 0, 0, 6, 3, 0, 0, 26, 4, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0874529}

out:
 ["{'[6, 0, 0, 0, 6, 3, 0, 0, 26, 4, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.100704}", "{'[6, 0, 0, 0, 6, 3, 0, 0, 26, 4, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.100669}", "{'[6, 0, 0, 0, 6, 3, 0, 0, 26, 4, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.096926}", "{'[6, 0, 0, 0, 6, 3, 0, 0, 26, 4, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0874722}", "{'[6, 0, 0, 0, 6, 3, 0, 0, 26, 4, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0873041}", "{'[6, 0, 0, 0, 6, 3, 0, 0, 26, 4, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.087379}", "{'[6, 0, 0, 0, 6, 3, 0, 0, 26, 4, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0873291}", "{'[6, 0, 0, 0, 6, 3, 0, 0, 26, 4, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.087523}", "{'[6, 0, 0, 0, 6, 3, 0, 0, 26, 4, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0874789}", "{'[6, 0, 0, 0, 6, 3, 0, 0, 26, 4, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0874941}", "{'[6, 0, 0, 0, 6, 3, 0, 0, 26, 4, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0877662}", "{'[6, 0, 0, 0, 6, 3, 0, 0, 26, 4, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.087482}", "{'[6, 0, 0, 0, 6, 3, 0, 0, 26, 4, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.087507}", "{'[6, 0, 0, 0, 6, 3, 0, 0, 26, 4, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.087455}", "{'[6, 0, 0, 0, 6, 3, 0, 0, 26, 4, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0875261}", "{'[6, 0, 0, 0, 6, 3, 0, 0, 26, 4, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0874422}", "{'[6, 0, 0, 0, 6, 3, 0, 0, 26, 4, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0874748}", "{'[6, 0, 0, 0, 6, 3, 0, 0, 26, 4, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0874851}", "{'[6, 0, 0, 0, 6, 3, 0, 0, 26, 4, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0874431}", "{'[6, 0, 0, 0, 6, 3, 0, 0, 26, 4, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.087719}", "{'[6, 0, 0, 0, 6, 3, 0, 0, 26, 4, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0874832}", "{'[6, 0, 0, 0, 6, 3, 0, 0, 26, 4, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.087436}", "{'[6, 0, 0, 0, 6, 3, 0, 0, 26, 4, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0875239}", "{'[6, 0, 0, 0, 6, 3, 0, 0, 26, 4, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0877151}", "{'[6, 0, 0, 0, 6, 3, 0, 0, 26, 4, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.087476}", "{'[6, 0, 0, 0, 6, 3, 0, 0, 26, 4, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0874538}", "{'[6, 0, 0, 0, 6, 3, 0, 0, 26, 4, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0874481}", "{'[6, 0, 0, 0, 6, 3, 0, 0, 26, 4, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0874512}", "{'[6, 0, 0, 0, 6, 3, 0, 0, 26, 4, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0873871}", "{'[6, 0, 0, 0, 6, 3, 0, 0, 26, 4, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0874529}"]
returning from 'run': {'[6, 0, 0, 0, 6, 3, 0, 0, 26, 4, 0, 11, 1, 1, 0, 1, 1, 0]': ([0.100704, 0.100669, 0.096926, 0.0874722, 0.0873041, 0.087379, 0.0873291, 0.087523, 0.0874789, 0.0874941, 0.0877662, 0.087482, 0.087507, 0.087455, 0.0875261, 0.0874422, 0.0874748, 0.0874851, 0.0874431, 0.087719, 0.0874832, 0.087436, 0.0875239, 0.0877151, 0.087476, 0.0874538, 0.0874481, 0.0874512, 0.0873871, 0.0874529], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 0, 0, 6, 3, 0, 0, 26, 4, 0, 11, 1, 1, 0, 1, 1, 0]': ([0.100704, 0.100669, 0.096926, 0.0874722, 0.0873041, 0.087379, 0.0873291, 0.087523, 0.0874789, 0.0874941, 0.0877662, 0.087482, 0.087507, 0.087455, 0.0875261, 0.0874422, 0.0874748, 0.0874851, 0.0874431, 0.087719, 0.0874832, 0.087436, 0.0875239, 0.0877151, 0.087476, 0.0874538, 0.0874481, 0.0874512, 0.0873871, 0.0874529], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Complete design, with measurements:
     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
72      2    5    2    2    6    0       0       0   28   0  25  19    0    1
87      3    4    6    1    6    5       1       1    2   1  29   0    1    0
802     5    6    3    3    6    3       0       1    1  29   0  29    0    0
863     4    0    3    6    2    2       0       0    7   7   0   0    1    0
946     0    1    4    1    0    6       1       0    0   4  11   0    1    0
982     4    6    6    0    5    0       1       0   27  10   8   0    2    0
1149    5    6    0    6    4    0       0       0   26   0   3   3    1    0
1205    5    3    5    0    3    0       0       1    1   0  19   4    1    0
1240    6    6    6    0    5    6       0       1   10   0   0  29    2    0
1352    2    4    0    2    6    0       1       1    4  23   0   4    1    0
1420    0    0    0    6    0    3       0       0   20   0   3  18    2    0
1470    0    3    6    6    1    4       1       1   23   0  17   8    0    0
1698    4    3    1    0    1    3       0       0    8   9   3   0    0    0
1741    0    1    0    0    1    2       0       1   13  16  20   0    0    0
1828    4    0    3    6    2    5       1       1   28  28  29   0    0    0
2191    1    0    0    0    1    1       1       1   13   0  29  29    1    0
2276    0    1    2    6    4    6       1       0    5  27   0  26    1    1
2325    0    0    6    2    6    6       0       0   28  27   6   0    0    0
2440    2    4    3    4    5    2       0       0    0  29  25   0    2    0
2456    6    0    6    6    6    0       0       1   11   5   0   5    0    1
2486    6    1    5    4    4    4       1       0    0   0  20  28    0    0
2648    2    1    0    3    1    5       1       0   13   0  25  14    0    1
2727    1    0    1    0    5    2       1       0    3  19   0   2    0    0
2762    2    0    6    0    6    5       0       1   11  23  20   0    0    2
3112    0    0    4    2    2    0       1       0   15  13   0   4    2    0
3215    0    5    3    1    6    0       1       0   28  26   6   0    0    1
3444    4    0    1    2    3    2       1       1   12   0   5   0    1    1
3474    6    0    1    6    6    6       1       1    3   0  25   1    0    0
3538    2    1    6    1    0    0       0       0   16   3   0  28    0    0
3622    4    1    0    3    1    0       0       1    2   8   0  28    0    2
3702    0    2    6    6    4    0       0       0   19   0   0   1    0    2
3779    0    6    1    0    5    0       1       1    0   5  24   0    0    1
3981    6    2    3    0    4    0       1       1    6   0   3  27    2    0
4062    6    6    2    0    0    0       0       0   15   0  26  29    1    1
4257    2    0    2    0    3    6       0       1    0   0   9   6    0    2
4260    1    6    6    6    0    4       1       1   16   4   0  25    1    0
4270    3    3    5    0    5    0       0       0    0   0  18   0    0    1
4290    0    4    6    1    2    6       0       1   26  15   0  12    1    1
4436    1    0    1    1    0    0       1       1    2  13  21   0    2    0
4574    3    4    6    1    0    6       1       1   29   2   0   0    1    0
4577    6    0    0    0    6    3       0       0   26   4   0  11    1    1
     RT_K SCR VEC1 VEC2  cost_mean
72      1   1    1    1 0.16531937
87      0   1    1    0 0.09952383
802     1   0    0    1 0.23111920
863     1   1    1    1 0.09274865
946     1   1    1    0 0.09230742
982     0   0    0    1 0.26418660
1149    0   0    1    0 0.11423200
1205    1   0    0    1 0.11172917
1240    0   1    1    0 0.17199240
1352    1   1    0    1 0.09045208
1420    0   0    0    0 0.22848860
1470    0   1    1    1 0.21436973
1698    2   1    0    0 0.12560703
1741    0   1    1    1 0.14793590
1828    1   1    0    0 0.29421670
2191    1   1    0    1 0.10161977
2276    0   1    1    0 0.11230630
2325    2   1    1    1 0.14245003
2440    0   1    0    1 0.21872447
2456    0   1    0    1 0.14527673
2486    0   1    0    0 0.25281167
2648    1   0    1    0 0.19575503
2727    2   0    1    1 0.27847490
2762    0   0    1    0 0.21359623
3112    0   1    0    0 0.17674143
3215    0   1    1    0 0.17644650
3444    0   0    0    1 0.10243790
3474    1   0    1    0 0.29962180
3538    0   0    1    0 0.14773167
3622    0   0    1    1 0.11879430
3702    0   0    0    0 0.18776713
3779    0   0    1    1 0.21082687
3981    0   0    1    1 0.21380350
4062    0   0    0    1 0.12076527
4257    0   1    1    1 0.26332437
4260    1   1    1    0 0.10346697
4270    1   0    0    0 0.19777067
4290    0   0    0    0 0.11047597
4436    0   0    0    0 0.24712083
4574    0   0    0    0 0.09965853
4577    0   1    1    0 0.08868024

Heteroscedasticity Test p-value: 0.637867455842
Regression Step:                Df  Sum Sq Mean Sq F value   Pr(>F)    
T1_I             1 0.00017 0.00017   0.284 0.606723    
T1_J             1 0.00361 0.00361   5.951 0.037400 *  
T1_K             1 0.00012 0.00012   0.194 0.670077    
T2_I             1 0.00110 0.00110   1.813 0.211025    
T2_J             1 0.00890 0.00890  14.661 0.004034 ** 
T2_K             1 0.00010 0.00010   0.167 0.691955    
ACOPY_x          1 0.00551 0.00551   9.086 0.014614 *  
ACOPY_y          1 0.00000 0.00000   0.003 0.958553    
U1_I             1 0.00134 0.00134   2.216 0.170791    
U_I              1 0.00141 0.00141   2.318 0.162252    
U_J              1 0.01382 0.01382  22.773 0.001012 ** 
U_K              1 0.00005 0.00005   0.083 0.779532    
RT_I             1 0.00051 0.00051   0.844 0.382284    
RT_J             1 0.00000 0.00000   0.006 0.942020    
RT_K             1 0.00192 0.00192   3.161 0.109117    
SCR              1 0.02119 0.02119  34.911 0.000227 ***
VEC1             1 0.00054 0.00054   0.895 0.368833    
VEC2             1 0.00049 0.00049   0.804 0.393208    
I(1/(1 + T1_I))  1 0.00007 0.00007   0.124 0.733302    
I(1/(1 + T1_J))  1 0.00872 0.00872  14.365 0.004281 ** 
I(1/(1 + T1_K))  1 0.00775 0.00775  12.773 0.005987 ** 
I(1/(1 + T2_I))  1 0.01226 0.01226  20.198 0.001501 ** 
I(1/(1 + T2_J))  1 0.00088 0.00088   1.448 0.259580    
I(1/(1 + T2_K))  1 0.00299 0.00299   4.931 0.053506 .  
I(1/(1 + U1_I))  1 0.00484 0.00484   7.974 0.019922 *  
I(1/(1 + U_I))   1 0.00175 0.00175   2.879 0.123999    
I(1/(1 + U_J))   1 0.00146 0.00146   2.401 0.155695    
I(1/(1 + U_K))   1 0.00271 0.00271   4.464 0.063767 .  
I(1/(1 + RT_I))  1 0.05254 0.05254  86.581  6.5e-06 ***
I(1/(1 + RT_J))  1 0.00159 0.00159   2.625 0.139616    
I(1/(1 + RT_K))  1 0.00071 0.00071   1.162 0.309070    
Residuals        9 0.00546 0.00061                     
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Predicting Best
Generating valid search space of size 4600 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Valid coordinates: 920
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Valid coordinates: 1840
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Valid coordinates: 2760
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Tested coordinates: 150000
Valid coordinates: 3680
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Tested coordinates: 190000
Valid coordinates: 4600
Valid/Tested configurations: 4600/191159
Generated Search Space:
NULL
Identical predictions (tol = 1e-5): 1
Getting Best from Design
Response: ['cost_mean']
Design Names:  [1] "T1_I"      "T1_J"      "T1_K"      "T2_I"      "T2_J"      "T2_K"     
 [7] "ACOPY_x"   "ACOPY_y"   "U1_I"      "U_I"       "U_J"       "U_K"      
[13] "RT_I"      "RT_J"      "RT_K"      "SCR"       "VEC1"      "VEC2"     
[19] "cost_mean"

Design Response:       cost_mean
72   0.16531937
87   0.09952383
802  0.23111920
863  0.09274865
946  0.09230742
982  0.26418660
1149 0.11423200
1205 0.11172917
1240 0.17199240
1352 0.09045208
1420 0.22848860
1470 0.21436973
1698 0.12560703
1741 0.14793590
1828 0.29421670
2191 0.10161977
2276 0.11230630
2325 0.14245003
2440 0.21872447
2456 0.14527673
2486 0.25281167
2648 0.19575503
2727 0.27847490
2762 0.21359623
3112 0.17674143
3215 0.17644650
3444 0.10243790
3474 0.29962180
3538 0.14773167
3622 0.11879430
3702 0.18776713
3779 0.21082687
3981 0.21380350
4062 0.12076527
4257 0.26332437
4260 0.10346697
4270 0.19777067
4290 0.11047597
4436 0.24712083
4574 0.09965853
4577 0.08868024

Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Getting fixed variables
Pruning Model
Best Predicted:      T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
2198    0    1    0    1    3    0       1       1   10   9   2   0    1    1
     RT_K SCR VEC1 VEC2
2198    0   1    0    0

Best From Design: [6, 0, 0, 0, 6, 3, 0, 0, 26, 4, 0, 11, 1, 1, 0, 1, 1, 0]
Pruned Factors: ['T1_I', 'T1_K', 'T2_I', 'T2_K', 'ACOPY_y', 'U1_I', 'U_I', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'VEC1', 'VEC2']
Fixed Factors: {'ACOPY_x': 1, 'U_J': 2, 'T2_J': 3, 'T1_J': 1, 'SCR': 1}
Length of requested configs: 1
Result was on Database, Returning Now
Starting Point (-O3):
0.16283083333333334
Predicted Best Point:
[0, 1, 0, 1, 3, 0, 1, 1, 10, 9, 2, 0, 1, 1, 0, 1, 0, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	30
        Max loop nest depth: 	5
        Additions: 		816
        Multiplications: 	342
        Divisions: 		0
        Logical: 		0
        Reads: 			1703
        Writes: 		327
        Comparisons:		30
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest47.exe __orio_perftest47.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest47.exe  
Program Test Output: 
{'[0, 1, 0, 1, 3, 0, 1, 1, 10, 9, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.103783}
{'[0, 1, 0, 1, 3, 0, 1, 1, 10, 9, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.10376}
{'[0, 1, 0, 1, 3, 0, 1, 1, 10, 9, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.10373}
{'[0, 1, 0, 1, 3, 0, 1, 1, 10, 9, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.103681}
{'[0, 1, 0, 1, 3, 0, 1, 1, 10, 9, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.092818}
{'[0, 1, 0, 1, 3, 0, 1, 1, 10, 9, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.0903621}
{'[0, 1, 0, 1, 3, 0, 1, 1, 10, 9, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.0903921}
{'[0, 1, 0, 1, 3, 0, 1, 1, 10, 9, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.0903862}
{'[0, 1, 0, 1, 3, 0, 1, 1, 10, 9, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.0903769}
{'[0, 1, 0, 1, 3, 0, 1, 1, 10, 9, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.089884}
{'[0, 1, 0, 1, 3, 0, 1, 1, 10, 9, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.088695}
{'[0, 1, 0, 1, 3, 0, 1, 1, 10, 9, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.090369}
{'[0, 1, 0, 1, 3, 0, 1, 1, 10, 9, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.090358}
{'[0, 1, 0, 1, 3, 0, 1, 1, 10, 9, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.0903561}
{'[0, 1, 0, 1, 3, 0, 1, 1, 10, 9, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.0904031}
{'[0, 1, 0, 1, 3, 0, 1, 1, 10, 9, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.090517}
{'[0, 1, 0, 1, 3, 0, 1, 1, 10, 9, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.0906599}
{'[0, 1, 0, 1, 3, 0, 1, 1, 10, 9, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.0903199}
{'[0, 1, 0, 1, 3, 0, 1, 1, 10, 9, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.092268}
{'[0, 1, 0, 1, 3, 0, 1, 1, 10, 9, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.0927851}
{'[0, 1, 0, 1, 3, 0, 1, 1, 10, 9, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.0925319}
{'[0, 1, 0, 1, 3, 0, 1, 1, 10, 9, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.091203}
{'[0, 1, 0, 1, 3, 0, 1, 1, 10, 9, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.0927629}
{'[0, 1, 0, 1, 3, 0, 1, 1, 10, 9, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.0927222}
{'[0, 1, 0, 1, 3, 0, 1, 1, 10, 9, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.0927401}
{'[0, 1, 0, 1, 3, 0, 1, 1, 10, 9, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.092787}
{'[0, 1, 0, 1, 3, 0, 1, 1, 10, 9, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.0928409}
{'[0, 1, 0, 1, 3, 0, 1, 1, 10, 9, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.0906992}
{'[0, 1, 0, 1, 3, 0, 1, 1, 10, 9, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.090507}
{'[0, 1, 0, 1, 3, 0, 1, 1, 10, 9, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.09041}

out:
 ["{'[0, 1, 0, 1, 3, 0, 1, 1, 10, 9, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.103783}", "{'[0, 1, 0, 1, 3, 0, 1, 1, 10, 9, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.10376}", "{'[0, 1, 0, 1, 3, 0, 1, 1, 10, 9, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.10373}", "{'[0, 1, 0, 1, 3, 0, 1, 1, 10, 9, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.103681}", "{'[0, 1, 0, 1, 3, 0, 1, 1, 10, 9, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.092818}", "{'[0, 1, 0, 1, 3, 0, 1, 1, 10, 9, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.0903621}", "{'[0, 1, 0, 1, 3, 0, 1, 1, 10, 9, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.0903921}", "{'[0, 1, 0, 1, 3, 0, 1, 1, 10, 9, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.0903862}", "{'[0, 1, 0, 1, 3, 0, 1, 1, 10, 9, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.0903769}", "{'[0, 1, 0, 1, 3, 0, 1, 1, 10, 9, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.089884}", "{'[0, 1, 0, 1, 3, 0, 1, 1, 10, 9, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.088695}", "{'[0, 1, 0, 1, 3, 0, 1, 1, 10, 9, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.090369}", "{'[0, 1, 0, 1, 3, 0, 1, 1, 10, 9, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.090358}", "{'[0, 1, 0, 1, 3, 0, 1, 1, 10, 9, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.0903561}", "{'[0, 1, 0, 1, 3, 0, 1, 1, 10, 9, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.0904031}", "{'[0, 1, 0, 1, 3, 0, 1, 1, 10, 9, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.090517}", "{'[0, 1, 0, 1, 3, 0, 1, 1, 10, 9, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.0906599}", "{'[0, 1, 0, 1, 3, 0, 1, 1, 10, 9, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.0903199}", "{'[0, 1, 0, 1, 3, 0, 1, 1, 10, 9, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.092268}", "{'[0, 1, 0, 1, 3, 0, 1, 1, 10, 9, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.0927851}", "{'[0, 1, 0, 1, 3, 0, 1, 1, 10, 9, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.0925319}", "{'[0, 1, 0, 1, 3, 0, 1, 1, 10, 9, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.091203}", "{'[0, 1, 0, 1, 3, 0, 1, 1, 10, 9, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.0927629}", "{'[0, 1, 0, 1, 3, 0, 1, 1, 10, 9, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.0927222}", "{'[0, 1, 0, 1, 3, 0, 1, 1, 10, 9, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.0927401}", "{'[0, 1, 0, 1, 3, 0, 1, 1, 10, 9, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.092787}", "{'[0, 1, 0, 1, 3, 0, 1, 1, 10, 9, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.0928409}", "{'[0, 1, 0, 1, 3, 0, 1, 1, 10, 9, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.0906992}", "{'[0, 1, 0, 1, 3, 0, 1, 1, 10, 9, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.090507}", "{'[0, 1, 0, 1, 3, 0, 1, 1, 10, 9, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.09041}"]
returning from 'run': {'[0, 1, 0, 1, 3, 0, 1, 1, 10, 9, 2, 0, 1, 1, 0, 1, 0, 0]': ([0.103783, 0.10376, 0.10373, 0.103681, 0.092818, 0.0903621, 0.0903921, 0.0903862, 0.0903769, 0.089884, 0.088695, 0.090369, 0.090358, 0.0903561, 0.0904031, 0.090517, 0.0906599, 0.0903199, 0.092268, 0.0927851, 0.0925319, 0.091203, 0.0927629, 0.0927222, 0.0927401, 0.092787, 0.0928409, 0.0906992, 0.090507, 0.09041], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 0, 1, 3, 0, 1, 1, 10, 9, 2, 0, 1, 1, 0, 1, 0, 0]': ([0.103783, 0.10376, 0.10373, 0.103681, 0.092818, 0.0903621, 0.0903921, 0.0903862, 0.0903769, 0.089884, 0.088695, 0.090369, 0.090358, 0.0903561, 0.0904031, 0.090517, 0.0906599, 0.0903199, 0.092268, 0.0927851, 0.0925319, 0.091203, 0.0927629, 0.0927222, 0.0927401, 0.092787, 0.0928409, 0.0906992, 0.090507, 0.09041], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Design Best Point:
[6, 0, 0, 0, 6, 3, 0, 0, 26, 4, 0, 11, 1, 1, 0, 1, 1, 0]
Length of requested configs: 1
Result was on Database, Returning Now
Fixed Factors: {'ACOPY_x': 1, 'U_J': 2, 'T2_J': 3, 'T1_J': 1, 'SCR': 1}
Slowdown (Design Best): 0.5446157719924052
Slowdown (Predicted Best): 0.5701435743639871
Budget: 41/180
Updating Global Best: 0.08868024
Current Best Point: 
[6, 0, 0, 0, 6, 3, 0, 0, 26, 4, 0, 11, 1, 1, 0, 1, 1, 0]
Step 1
Generating valid search space of size 3400 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Valid coordinates: 680
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Valid coordinates: 1360
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Valid coordinates: 2040
Tested coordinates: 110000
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Valid coordinates: 2720
Tested coordinates: 150000
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Valid coordinates: 3400
Valid/Tested configurations: 3400/182623
Generated Search Space:
NULL
Clean Info:
Removed Factors: character(0)

Removed Inverse Factors: [1] "ACOPY_y" "VEC1"    "VEC2"   

New Factors: ['T1_I', 'T1_K', 'T2_I', 'T2_K', 'ACOPY_y', 'U1_I', 'U_I', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'VEC1', 'VEC2']
New Inverse Factors: ['T1_I', 'T1_K', 'T2_I', 'T2_K', 'U1_I', 'U_I', 'U_K', 'RT_I', 'RT_J', 'RT_K']
New Fixed Factors: {'ACOPY_x': 1, 'U_J': 2, 'T2_J': 3, 'T1_J': 1, 'SCR': 1}
Full Model:  ~ T1_I + T1_K + T2_I + T2_K + ACOPY_y + U1_I + U_I + U_K + RT_I + RT_J + RT_K + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Fixed Factors: {'ACOPY_x': 1, 'U_J': 2, 'T2_J': 3, 'T1_J': 1, 'SCR': 1}
Computing D-Optimal Design
Computing D-Optimal Design with 34 experiments
Design Formula:  ~ T1_I + T1_K + T2_I + T2_K + ACOPY_y + U1_I + U_I + U_K + RT_I + RT_J + RT_K + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Starting "optFederov" run
Using Search Space:
NULL
Data Dimensions: [1] 3400   13

     T1_I T1_K T2_I T2_K ACOPY_y U1_I U_I U_K RT_I RT_J RT_K VEC1 VEC2
37      1    0    0    3       0   11   4   0    2    0    0    1    1
186     1    6    5    0       1    0   0  24    0    2    0    1    0
189     4    1    0    6       0    2  29   0    1    0    0    1    0
197     5    6    4    6       1   24   0   0    0    1    0    1    1
234     2    0    0    2       1    4  21   0    0    1    1    0    0
503     0    1    6    6       1    0   0  18    1    1    0    0    0
511     4    2    2    1       1   16  23   0    0    2    0    1    0
628     6    6    0    4       1   18  13   0    1    0    1    1    0
873     0    1    6    0       1   17   1   0    2    0    0    0    1
928     5    3    4    2       0    0   0  29    0    0    1    0    1
1050    0    0    6    2       0    1   0   7    0    0    2    1    1
1089    3    4    2    0       0    0   2   0    0    0    2    0    1
1427    6    0    0    0       1   20   0  25    0    2    0    1    1
1487    5    5    3    6       0    4   0  25    1    0    1    0    1
1526    1    0    3    0       0    0   0   0    0    0    0    0    0
1536    0    3    0    5       0    4   0   5    0    1    1    1    0
1741    6    1    0    2       0    7   0  29    1    1    0    0    1
1757    0    6    1    6       0    2  25   0    0    2    0    0    0
1925    2    2    6    6       1    2  28   0    2    0    0    1    0
2041    3    2    0    5       1    9   0   7    0    0    0    0    1
2289    0    4    0    0       0   12   0   0    0    0    2    0    0
2310    3    1    1    1       0   27   0  29    2    0    0    1    0
2318    6    0    6    0       0    1  27   0    0    0    0    1    0
2414    4    0    5    5       1   29   0  29    0    0    2    0    0
2434    6    1    5    1       1   24   4   0    0    1    1    0    0
2441    0    3    4    5       0   26   0  26    0    0    0    1    0
2580    2    1    5    4       0    3   3   0    1    1    0    0    0
2589    1    3    6    2       1   26   0   0    1    0    1    0    1
2597    6    0    6    4       0   28   0   1    2    0    0    0    0
2676    0    0    2    3       1    0   0  19    0    0    0    1    0
3106    1    6    5    0       0   29  29   0    0    1    0    0    1
3140    3    6    4    0       1    9   0   6    2    0    0    0    1
3396    2    0    3    0       1   29  21   0    1    0    1    1    1
3400    0    0    6    5       0   27  24   0    0    2    0    0    1

D-Efficiency Approximation: [1] 0.404

Measuring design of size 34
Current Design Names: ['T1_I', 'T1_K', 'T2_I', 'T2_K', 'ACOPY_y', 'U1_I', 'U_I', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Length of requested configs: 1
Code stats:
        Number of loops: 	39
        Max loop nest depth: 	5
        Additions: 		953
        Multiplications: 	380
        Divisions: 		0
        Logical: 		0
        Reads: 			2051
        Writes: 		408
        Comparisons:		39
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest48.exe __orio_perftest48.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest48.exe  
Program Test Output: 
{'[1, 1, 0, 0, 3, 3, 1, 0, 11, 4, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.17992}
{'[1, 1, 0, 0, 3, 3, 1, 0, 11, 4, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.180052}
{'[1, 1, 0, 0, 3, 3, 1, 0, 11, 4, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.179882}
{'[1, 1, 0, 0, 3, 3, 1, 0, 11, 4, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.177621}
{'[1, 1, 0, 0, 3, 3, 1, 0, 11, 4, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.179831}
{'[1, 1, 0, 0, 3, 3, 1, 0, 11, 4, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.179813}
{'[1, 1, 0, 0, 3, 3, 1, 0, 11, 4, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.179935}
{'[1, 1, 0, 0, 3, 3, 1, 0, 11, 4, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.179921}
{'[1, 1, 0, 0, 3, 3, 1, 0, 11, 4, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.179861}
{'[1, 1, 0, 0, 3, 3, 1, 0, 11, 4, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.179992}
{'[1, 1, 0, 0, 3, 3, 1, 0, 11, 4, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.179832}
{'[1, 1, 0, 0, 3, 3, 1, 0, 11, 4, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.179827}
{'[1, 1, 0, 0, 3, 3, 1, 0, 11, 4, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.179816}
{'[1, 1, 0, 0, 3, 3, 1, 0, 11, 4, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.179939}
{'[1, 1, 0, 0, 3, 3, 1, 0, 11, 4, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.180055}
{'[1, 1, 0, 0, 3, 3, 1, 0, 11, 4, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.179898}
{'[1, 1, 0, 0, 3, 3, 1, 0, 11, 4, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.180248}
{'[1, 1, 0, 0, 3, 3, 1, 0, 11, 4, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.180074}
{'[1, 1, 0, 0, 3, 3, 1, 0, 11, 4, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.179885}
{'[1, 1, 0, 0, 3, 3, 1, 0, 11, 4, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.175167}
{'[1, 1, 0, 0, 3, 3, 1, 0, 11, 4, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.176903}
{'[1, 1, 0, 0, 3, 3, 1, 0, 11, 4, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.179772}
{'[1, 1, 0, 0, 3, 3, 1, 0, 11, 4, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.179918}
{'[1, 1, 0, 0, 3, 3, 1, 0, 11, 4, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.179926}
{'[1, 1, 0, 0, 3, 3, 1, 0, 11, 4, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.179757}
{'[1, 1, 0, 0, 3, 3, 1, 0, 11, 4, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.174712}
{'[1, 1, 0, 0, 3, 3, 1, 0, 11, 4, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.174161}
{'[1, 1, 0, 0, 3, 3, 1, 0, 11, 4, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.174871}
{'[1, 1, 0, 0, 3, 3, 1, 0, 11, 4, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.174716}
{'[1, 1, 0, 0, 3, 3, 1, 0, 11, 4, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.179845}

out:
 ["{'[1, 1, 0, 0, 3, 3, 1, 0, 11, 4, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.17992}", "{'[1, 1, 0, 0, 3, 3, 1, 0, 11, 4, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.180052}", "{'[1, 1, 0, 0, 3, 3, 1, 0, 11, 4, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.179882}", "{'[1, 1, 0, 0, 3, 3, 1, 0, 11, 4, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.177621}", "{'[1, 1, 0, 0, 3, 3, 1, 0, 11, 4, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.179831}", "{'[1, 1, 0, 0, 3, 3, 1, 0, 11, 4, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.179813}", "{'[1, 1, 0, 0, 3, 3, 1, 0, 11, 4, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.179935}", "{'[1, 1, 0, 0, 3, 3, 1, 0, 11, 4, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.179921}", "{'[1, 1, 0, 0, 3, 3, 1, 0, 11, 4, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.179861}", "{'[1, 1, 0, 0, 3, 3, 1, 0, 11, 4, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.179992}", "{'[1, 1, 0, 0, 3, 3, 1, 0, 11, 4, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.179832}", "{'[1, 1, 0, 0, 3, 3, 1, 0, 11, 4, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.179827}", "{'[1, 1, 0, 0, 3, 3, 1, 0, 11, 4, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.179816}", "{'[1, 1, 0, 0, 3, 3, 1, 0, 11, 4, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.179939}", "{'[1, 1, 0, 0, 3, 3, 1, 0, 11, 4, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.180055}", "{'[1, 1, 0, 0, 3, 3, 1, 0, 11, 4, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.179898}", "{'[1, 1, 0, 0, 3, 3, 1, 0, 11, 4, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.180248}", "{'[1, 1, 0, 0, 3, 3, 1, 0, 11, 4, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.180074}", "{'[1, 1, 0, 0, 3, 3, 1, 0, 11, 4, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.179885}", "{'[1, 1, 0, 0, 3, 3, 1, 0, 11, 4, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.175167}", "{'[1, 1, 0, 0, 3, 3, 1, 0, 11, 4, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.176903}", "{'[1, 1, 0, 0, 3, 3, 1, 0, 11, 4, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.179772}", "{'[1, 1, 0, 0, 3, 3, 1, 0, 11, 4, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.179918}", "{'[1, 1, 0, 0, 3, 3, 1, 0, 11, 4, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.179926}", "{'[1, 1, 0, 0, 3, 3, 1, 0, 11, 4, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.179757}", "{'[1, 1, 0, 0, 3, 3, 1, 0, 11, 4, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.174712}", "{'[1, 1, 0, 0, 3, 3, 1, 0, 11, 4, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.174161}", "{'[1, 1, 0, 0, 3, 3, 1, 0, 11, 4, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.174871}", "{'[1, 1, 0, 0, 3, 3, 1, 0, 11, 4, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.174716}", "{'[1, 1, 0, 0, 3, 3, 1, 0, 11, 4, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.179845}"]
returning from 'run': {'[1, 1, 0, 0, 3, 3, 1, 0, 11, 4, 2, 0, 2, 0, 0, 1, 1, 1]': ([0.17992, 0.180052, 0.179882, 0.177621, 0.179831, 0.179813, 0.179935, 0.179921, 0.179861, 0.179992, 0.179832, 0.179827, 0.179816, 0.179939, 0.180055, 0.179898, 0.180248, 0.180074, 0.179885, 0.175167, 0.176903, 0.179772, 0.179918, 0.179926, 0.179757, 0.174712, 0.174161, 0.174871, 0.174716, 0.179845], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 1, 0, 0, 3, 3, 1, 0, 11, 4, 2, 0, 2, 0, 0, 1, 1, 1]': ([0.17992, 0.180052, 0.179882, 0.177621, 0.179831, 0.179813, 0.179935, 0.179921, 0.179861, 0.179992, 0.179832, 0.179827, 0.179816, 0.179939, 0.180055, 0.179898, 0.180248, 0.180074, 0.179885, 0.175167, 0.176903, 0.179772, 0.179918, 0.179926, 0.179757, 0.174712, 0.174161, 0.174871, 0.174716, 0.179845], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	6
        Additions: 		383
        Multiplications: 	116
        Divisions: 		0
        Logical: 		0
        Reads: 			791
        Writes: 		144
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest49.exe __orio_perftest49.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest49.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest49.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest49.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest49.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	117
        Max loop nest depth: 	5
        Additions: 		1622
        Multiplications: 	390
        Divisions: 		0
        Logical: 		0
        Reads: 			3022
        Writes: 		588
        Comparisons:		117
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest50.exe __orio_perftest50.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest50.exe  
Program Test Output: 
{'[4, 1, 1, 0, 3, 6, 1, 0, 2, 29, 2, 0, 1, 0, 0, 1, 1, 0]' : 0.122457}
{'[4, 1, 1, 0, 3, 6, 1, 0, 2, 29, 2, 0, 1, 0, 0, 1, 1, 0]' : 0.122458}
{'[4, 1, 1, 0, 3, 6, 1, 0, 2, 29, 2, 0, 1, 0, 0, 1, 1, 0]' : 0.121337}
{'[4, 1, 1, 0, 3, 6, 1, 0, 2, 29, 2, 0, 1, 0, 0, 1, 1, 0]' : 0.104816}
{'[4, 1, 1, 0, 3, 6, 1, 0, 2, 29, 2, 0, 1, 0, 0, 1, 1, 0]' : 0.103016}
{'[4, 1, 1, 0, 3, 6, 1, 0, 2, 29, 2, 0, 1, 0, 0, 1, 1, 0]' : 0.103021}
{'[4, 1, 1, 0, 3, 6, 1, 0, 2, 29, 2, 0, 1, 0, 0, 1, 1, 0]' : 0.10302}
{'[4, 1, 1, 0, 3, 6, 1, 0, 2, 29, 2, 0, 1, 0, 0, 1, 1, 0]' : 0.103073}
{'[4, 1, 1, 0, 3, 6, 1, 0, 2, 29, 2, 0, 1, 0, 0, 1, 1, 0]' : 0.103058}
{'[4, 1, 1, 0, 3, 6, 1, 0, 2, 29, 2, 0, 1, 0, 0, 1, 1, 0]' : 0.103054}
{'[4, 1, 1, 0, 3, 6, 1, 0, 2, 29, 2, 0, 1, 0, 0, 1, 1, 0]' : 0.103041}
{'[4, 1, 1, 0, 3, 6, 1, 0, 2, 29, 2, 0, 1, 0, 0, 1, 1, 0]' : 0.10324}
{'[4, 1, 1, 0, 3, 6, 1, 0, 2, 29, 2, 0, 1, 0, 0, 1, 1, 0]' : 0.103065}
{'[4, 1, 1, 0, 3, 6, 1, 0, 2, 29, 2, 0, 1, 0, 0, 1, 1, 0]' : 0.103}
{'[4, 1, 1, 0, 3, 6, 1, 0, 2, 29, 2, 0, 1, 0, 0, 1, 1, 0]' : 0.103374}
{'[4, 1, 1, 0, 3, 6, 1, 0, 2, 29, 2, 0, 1, 0, 0, 1, 1, 0]' : 0.103032}
{'[4, 1, 1, 0, 3, 6, 1, 0, 2, 29, 2, 0, 1, 0, 0, 1, 1, 0]' : 0.103003}
{'[4, 1, 1, 0, 3, 6, 1, 0, 2, 29, 2, 0, 1, 0, 0, 1, 1, 0]' : 0.102937}
{'[4, 1, 1, 0, 3, 6, 1, 0, 2, 29, 2, 0, 1, 0, 0, 1, 1, 0]' : 0.102849}
{'[4, 1, 1, 0, 3, 6, 1, 0, 2, 29, 2, 0, 1, 0, 0, 1, 1, 0]' : 0.102868}
{'[4, 1, 1, 0, 3, 6, 1, 0, 2, 29, 2, 0, 1, 0, 0, 1, 1, 0]' : 0.103002}
{'[4, 1, 1, 0, 3, 6, 1, 0, 2, 29, 2, 0, 1, 0, 0, 1, 1, 0]' : 0.103289}
{'[4, 1, 1, 0, 3, 6, 1, 0, 2, 29, 2, 0, 1, 0, 0, 1, 1, 0]' : 0.103008}
{'[4, 1, 1, 0, 3, 6, 1, 0, 2, 29, 2, 0, 1, 0, 0, 1, 1, 0]' : 0.103031}
{'[4, 1, 1, 0, 3, 6, 1, 0, 2, 29, 2, 0, 1, 0, 0, 1, 1, 0]' : 0.103012}
{'[4, 1, 1, 0, 3, 6, 1, 0, 2, 29, 2, 0, 1, 0, 0, 1, 1, 0]' : 0.103012}
{'[4, 1, 1, 0, 3, 6, 1, 0, 2, 29, 2, 0, 1, 0, 0, 1, 1, 0]' : 0.10298}
{'[4, 1, 1, 0, 3, 6, 1, 0, 2, 29, 2, 0, 1, 0, 0, 1, 1, 0]' : 0.103062}
{'[4, 1, 1, 0, 3, 6, 1, 0, 2, 29, 2, 0, 1, 0, 0, 1, 1, 0]' : 0.102977}
{'[4, 1, 1, 0, 3, 6, 1, 0, 2, 29, 2, 0, 1, 0, 0, 1, 1, 0]' : 0.103301}

out:
 ["{'[4, 1, 1, 0, 3, 6, 1, 0, 2, 29, 2, 0, 1, 0, 0, 1, 1, 0]' : 0.122457}", "{'[4, 1, 1, 0, 3, 6, 1, 0, 2, 29, 2, 0, 1, 0, 0, 1, 1, 0]' : 0.122458}", "{'[4, 1, 1, 0, 3, 6, 1, 0, 2, 29, 2, 0, 1, 0, 0, 1, 1, 0]' : 0.121337}", "{'[4, 1, 1, 0, 3, 6, 1, 0, 2, 29, 2, 0, 1, 0, 0, 1, 1, 0]' : 0.104816}", "{'[4, 1, 1, 0, 3, 6, 1, 0, 2, 29, 2, 0, 1, 0, 0, 1, 1, 0]' : 0.103016}", "{'[4, 1, 1, 0, 3, 6, 1, 0, 2, 29, 2, 0, 1, 0, 0, 1, 1, 0]' : 0.103021}", "{'[4, 1, 1, 0, 3, 6, 1, 0, 2, 29, 2, 0, 1, 0, 0, 1, 1, 0]' : 0.10302}", "{'[4, 1, 1, 0, 3, 6, 1, 0, 2, 29, 2, 0, 1, 0, 0, 1, 1, 0]' : 0.103073}", "{'[4, 1, 1, 0, 3, 6, 1, 0, 2, 29, 2, 0, 1, 0, 0, 1, 1, 0]' : 0.103058}", "{'[4, 1, 1, 0, 3, 6, 1, 0, 2, 29, 2, 0, 1, 0, 0, 1, 1, 0]' : 0.103054}", "{'[4, 1, 1, 0, 3, 6, 1, 0, 2, 29, 2, 0, 1, 0, 0, 1, 1, 0]' : 0.103041}", "{'[4, 1, 1, 0, 3, 6, 1, 0, 2, 29, 2, 0, 1, 0, 0, 1, 1, 0]' : 0.10324}", "{'[4, 1, 1, 0, 3, 6, 1, 0, 2, 29, 2, 0, 1, 0, 0, 1, 1, 0]' : 0.103065}", "{'[4, 1, 1, 0, 3, 6, 1, 0, 2, 29, 2, 0, 1, 0, 0, 1, 1, 0]' : 0.103}", "{'[4, 1, 1, 0, 3, 6, 1, 0, 2, 29, 2, 0, 1, 0, 0, 1, 1, 0]' : 0.103374}", "{'[4, 1, 1, 0, 3, 6, 1, 0, 2, 29, 2, 0, 1, 0, 0, 1, 1, 0]' : 0.103032}", "{'[4, 1, 1, 0, 3, 6, 1, 0, 2, 29, 2, 0, 1, 0, 0, 1, 1, 0]' : 0.103003}", "{'[4, 1, 1, 0, 3, 6, 1, 0, 2, 29, 2, 0, 1, 0, 0, 1, 1, 0]' : 0.102937}", "{'[4, 1, 1, 0, 3, 6, 1, 0, 2, 29, 2, 0, 1, 0, 0, 1, 1, 0]' : 0.102849}", "{'[4, 1, 1, 0, 3, 6, 1, 0, 2, 29, 2, 0, 1, 0, 0, 1, 1, 0]' : 0.102868}", "{'[4, 1, 1, 0, 3, 6, 1, 0, 2, 29, 2, 0, 1, 0, 0, 1, 1, 0]' : 0.103002}", "{'[4, 1, 1, 0, 3, 6, 1, 0, 2, 29, 2, 0, 1, 0, 0, 1, 1, 0]' : 0.103289}", "{'[4, 1, 1, 0, 3, 6, 1, 0, 2, 29, 2, 0, 1, 0, 0, 1, 1, 0]' : 0.103008}", "{'[4, 1, 1, 0, 3, 6, 1, 0, 2, 29, 2, 0, 1, 0, 0, 1, 1, 0]' : 0.103031}", "{'[4, 1, 1, 0, 3, 6, 1, 0, 2, 29, 2, 0, 1, 0, 0, 1, 1, 0]' : 0.103012}", "{'[4, 1, 1, 0, 3, 6, 1, 0, 2, 29, 2, 0, 1, 0, 0, 1, 1, 0]' : 0.103012}", "{'[4, 1, 1, 0, 3, 6, 1, 0, 2, 29, 2, 0, 1, 0, 0, 1, 1, 0]' : 0.10298}", "{'[4, 1, 1, 0, 3, 6, 1, 0, 2, 29, 2, 0, 1, 0, 0, 1, 1, 0]' : 0.103062}", "{'[4, 1, 1, 0, 3, 6, 1, 0, 2, 29, 2, 0, 1, 0, 0, 1, 1, 0]' : 0.102977}", "{'[4, 1, 1, 0, 3, 6, 1, 0, 2, 29, 2, 0, 1, 0, 0, 1, 1, 0]' : 0.103301}"]
returning from 'run': {'[4, 1, 1, 0, 3, 6, 1, 0, 2, 29, 2, 0, 1, 0, 0, 1, 1, 0]': ([0.122457, 0.122458, 0.121337, 0.104816, 0.103016, 0.103021, 0.10302, 0.103073, 0.103058, 0.103054, 0.103041, 0.10324, 0.103065, 0.103, 0.103374, 0.103032, 0.103003, 0.102937, 0.102849, 0.102868, 0.103002, 0.103289, 0.103008, 0.103031, 0.103012, 0.103012, 0.10298, 0.103062, 0.102977, 0.103301], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 1, 1, 0, 3, 6, 1, 0, 2, 29, 2, 0, 1, 0, 0, 1, 1, 0]': ([0.122457, 0.122458, 0.121337, 0.104816, 0.103016, 0.103021, 0.10302, 0.103073, 0.103058, 0.103054, 0.103041, 0.10324, 0.103065, 0.103, 0.103374, 0.103032, 0.103003, 0.102937, 0.102849, 0.102868, 0.103002, 0.103289, 0.103008, 0.103031, 0.103012, 0.103012, 0.10298, 0.103062, 0.102977, 0.103301], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		110
        Multiplications: 	18
        Divisions: 		0
        Logical: 		0
        Reads: 			261
        Writes: 		76
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest51.exe __orio_perftest51.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest51.exe  
Program Test Output: 
{'[5, 1, 6, 4, 3, 6, 1, 1, 24, 0, 2, 0, 0, 1, 0, 1, 1, 1]' : 0.257515}
{'[5, 1, 6, 4, 3, 6, 1, 1, 24, 0, 2, 0, 0, 1, 0, 1, 1, 1]' : 0.255576}
{'[5, 1, 6, 4, 3, 6, 1, 1, 24, 0, 2, 0, 0, 1, 0, 1, 1, 1]' : 0.226992}
{'[5, 1, 6, 4, 3, 6, 1, 1, 24, 0, 2, 0, 0, 1, 0, 1, 1, 1]' : 0.221419}
{'[5, 1, 6, 4, 3, 6, 1, 1, 24, 0, 2, 0, 0, 1, 0, 1, 1, 1]' : 0.21394}
{'[5, 1, 6, 4, 3, 6, 1, 1, 24, 0, 2, 0, 0, 1, 0, 1, 1, 1]' : 0.219007}
{'[5, 1, 6, 4, 3, 6, 1, 1, 24, 0, 2, 0, 0, 1, 0, 1, 1, 1]' : 0.223728}
{'[5, 1, 6, 4, 3, 6, 1, 1, 24, 0, 2, 0, 0, 1, 0, 1, 1, 1]' : 0.221711}
{'[5, 1, 6, 4, 3, 6, 1, 1, 24, 0, 2, 0, 0, 1, 0, 1, 1, 1]' : 0.224293}
{'[5, 1, 6, 4, 3, 6, 1, 1, 24, 0, 2, 0, 0, 1, 0, 1, 1, 1]' : 0.22115}
{'[5, 1, 6, 4, 3, 6, 1, 1, 24, 0, 2, 0, 0, 1, 0, 1, 1, 1]' : 0.226518}
{'[5, 1, 6, 4, 3, 6, 1, 1, 24, 0, 2, 0, 0, 1, 0, 1, 1, 1]' : 0.226872}
{'[5, 1, 6, 4, 3, 6, 1, 1, 24, 0, 2, 0, 0, 1, 0, 1, 1, 1]' : 0.226876}
{'[5, 1, 6, 4, 3, 6, 1, 1, 24, 0, 2, 0, 0, 1, 0, 1, 1, 1]' : 0.226802}
{'[5, 1, 6, 4, 3, 6, 1, 1, 24, 0, 2, 0, 0, 1, 0, 1, 1, 1]' : 0.226936}
{'[5, 1, 6, 4, 3, 6, 1, 1, 24, 0, 2, 0, 0, 1, 0, 1, 1, 1]' : 0.226855}
{'[5, 1, 6, 4, 3, 6, 1, 1, 24, 0, 2, 0, 0, 1, 0, 1, 1, 1]' : 0.226952}
{'[5, 1, 6, 4, 3, 6, 1, 1, 24, 0, 2, 0, 0, 1, 0, 1, 1, 1]' : 0.225436}
{'[5, 1, 6, 4, 3, 6, 1, 1, 24, 0, 2, 0, 0, 1, 0, 1, 1, 1]' : 0.221761}
{'[5, 1, 6, 4, 3, 6, 1, 1, 24, 0, 2, 0, 0, 1, 0, 1, 1, 1]' : 0.225925}
{'[5, 1, 6, 4, 3, 6, 1, 1, 24, 0, 2, 0, 0, 1, 0, 1, 1, 1]' : 0.220837}
{'[5, 1, 6, 4, 3, 6, 1, 1, 24, 0, 2, 0, 0, 1, 0, 1, 1, 1]' : 0.225866}
{'[5, 1, 6, 4, 3, 6, 1, 1, 24, 0, 2, 0, 0, 1, 0, 1, 1, 1]' : 0.22689}
{'[5, 1, 6, 4, 3, 6, 1, 1, 24, 0, 2, 0, 0, 1, 0, 1, 1, 1]' : 0.224684}
{'[5, 1, 6, 4, 3, 6, 1, 1, 24, 0, 2, 0, 0, 1, 0, 1, 1, 1]' : 0.220919}
{'[5, 1, 6, 4, 3, 6, 1, 1, 24, 0, 2, 0, 0, 1, 0, 1, 1, 1]' : 0.221209}
{'[5, 1, 6, 4, 3, 6, 1, 1, 24, 0, 2, 0, 0, 1, 0, 1, 1, 1]' : 0.220767}
{'[5, 1, 6, 4, 3, 6, 1, 1, 24, 0, 2, 0, 0, 1, 0, 1, 1, 1]' : 0.221573}
{'[5, 1, 6, 4, 3, 6, 1, 1, 24, 0, 2, 0, 0, 1, 0, 1, 1, 1]' : 0.222369}
{'[5, 1, 6, 4, 3, 6, 1, 1, 24, 0, 2, 0, 0, 1, 0, 1, 1, 1]' : 0.220978}

out:
 ["{'[5, 1, 6, 4, 3, 6, 1, 1, 24, 0, 2, 0, 0, 1, 0, 1, 1, 1]' : 0.257515}", "{'[5, 1, 6, 4, 3, 6, 1, 1, 24, 0, 2, 0, 0, 1, 0, 1, 1, 1]' : 0.255576}", "{'[5, 1, 6, 4, 3, 6, 1, 1, 24, 0, 2, 0, 0, 1, 0, 1, 1, 1]' : 0.226992}", "{'[5, 1, 6, 4, 3, 6, 1, 1, 24, 0, 2, 0, 0, 1, 0, 1, 1, 1]' : 0.221419}", "{'[5, 1, 6, 4, 3, 6, 1, 1, 24, 0, 2, 0, 0, 1, 0, 1, 1, 1]' : 0.21394}", "{'[5, 1, 6, 4, 3, 6, 1, 1, 24, 0, 2, 0, 0, 1, 0, 1, 1, 1]' : 0.219007}", "{'[5, 1, 6, 4, 3, 6, 1, 1, 24, 0, 2, 0, 0, 1, 0, 1, 1, 1]' : 0.223728}", "{'[5, 1, 6, 4, 3, 6, 1, 1, 24, 0, 2, 0, 0, 1, 0, 1, 1, 1]' : 0.221711}", "{'[5, 1, 6, 4, 3, 6, 1, 1, 24, 0, 2, 0, 0, 1, 0, 1, 1, 1]' : 0.224293}", "{'[5, 1, 6, 4, 3, 6, 1, 1, 24, 0, 2, 0, 0, 1, 0, 1, 1, 1]' : 0.22115}", "{'[5, 1, 6, 4, 3, 6, 1, 1, 24, 0, 2, 0, 0, 1, 0, 1, 1, 1]' : 0.226518}", "{'[5, 1, 6, 4, 3, 6, 1, 1, 24, 0, 2, 0, 0, 1, 0, 1, 1, 1]' : 0.226872}", "{'[5, 1, 6, 4, 3, 6, 1, 1, 24, 0, 2, 0, 0, 1, 0, 1, 1, 1]' : 0.226876}", "{'[5, 1, 6, 4, 3, 6, 1, 1, 24, 0, 2, 0, 0, 1, 0, 1, 1, 1]' : 0.226802}", "{'[5, 1, 6, 4, 3, 6, 1, 1, 24, 0, 2, 0, 0, 1, 0, 1, 1, 1]' : 0.226936}", "{'[5, 1, 6, 4, 3, 6, 1, 1, 24, 0, 2, 0, 0, 1, 0, 1, 1, 1]' : 0.226855}", "{'[5, 1, 6, 4, 3, 6, 1, 1, 24, 0, 2, 0, 0, 1, 0, 1, 1, 1]' : 0.226952}", "{'[5, 1, 6, 4, 3, 6, 1, 1, 24, 0, 2, 0, 0, 1, 0, 1, 1, 1]' : 0.225436}", "{'[5, 1, 6, 4, 3, 6, 1, 1, 24, 0, 2, 0, 0, 1, 0, 1, 1, 1]' : 0.221761}", "{'[5, 1, 6, 4, 3, 6, 1, 1, 24, 0, 2, 0, 0, 1, 0, 1, 1, 1]' : 0.225925}", "{'[5, 1, 6, 4, 3, 6, 1, 1, 24, 0, 2, 0, 0, 1, 0, 1, 1, 1]' : 0.220837}", "{'[5, 1, 6, 4, 3, 6, 1, 1, 24, 0, 2, 0, 0, 1, 0, 1, 1, 1]' : 0.225866}", "{'[5, 1, 6, 4, 3, 6, 1, 1, 24, 0, 2, 0, 0, 1, 0, 1, 1, 1]' : 0.22689}", "{'[5, 1, 6, 4, 3, 6, 1, 1, 24, 0, 2, 0, 0, 1, 0, 1, 1, 1]' : 0.224684}", "{'[5, 1, 6, 4, 3, 6, 1, 1, 24, 0, 2, 0, 0, 1, 0, 1, 1, 1]' : 0.220919}", "{'[5, 1, 6, 4, 3, 6, 1, 1, 24, 0, 2, 0, 0, 1, 0, 1, 1, 1]' : 0.221209}", "{'[5, 1, 6, 4, 3, 6, 1, 1, 24, 0, 2, 0, 0, 1, 0, 1, 1, 1]' : 0.220767}", "{'[5, 1, 6, 4, 3, 6, 1, 1, 24, 0, 2, 0, 0, 1, 0, 1, 1, 1]' : 0.221573}", "{'[5, 1, 6, 4, 3, 6, 1, 1, 24, 0, 2, 0, 0, 1, 0, 1, 1, 1]' : 0.222369}", "{'[5, 1, 6, 4, 3, 6, 1, 1, 24, 0, 2, 0, 0, 1, 0, 1, 1, 1]' : 0.220978}"]
returning from 'run': {'[5, 1, 6, 4, 3, 6, 1, 1, 24, 0, 2, 0, 0, 1, 0, 1, 1, 1]': ([0.257515, 0.255576, 0.226992, 0.221419, 0.21394, 0.219007, 0.223728, 0.221711, 0.224293, 0.22115, 0.226518, 0.226872, 0.226876, 0.226802, 0.226936, 0.226855, 0.226952, 0.225436, 0.221761, 0.225925, 0.220837, 0.225866, 0.22689, 0.224684, 0.220919, 0.221209, 0.220767, 0.221573, 0.222369, 0.220978], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 1, 6, 4, 3, 6, 1, 1, 24, 0, 2, 0, 0, 1, 0, 1, 1, 1]': ([0.257515, 0.255576, 0.226992, 0.221419, 0.21394, 0.219007, 0.223728, 0.221711, 0.224293, 0.22115, 0.226518, 0.226872, 0.226876, 0.226802, 0.226936, 0.226855, 0.226952, 0.225436, 0.221761, 0.225925, 0.220837, 0.225866, 0.22689, 0.224684, 0.220919, 0.221209, 0.220767, 0.221573, 0.222369, 0.220978], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	84
        Max loop nest depth: 	5
        Additions: 		1861
        Multiplications: 	736
        Divisions: 		0
        Logical: 		0
        Reads: 			3850
        Writes: 		720
        Comparisons:		84
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest52.exe __orio_perftest52.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest52.exe  
Program Test Output: 
{'[2, 1, 0, 0, 3, 2, 1, 1, 4, 21, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.208378}
{'[2, 1, 0, 0, 3, 2, 1, 1, 4, 21, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.209476}
{'[2, 1, 0, 0, 3, 2, 1, 1, 4, 21, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.208666}
{'[2, 1, 0, 0, 3, 2, 1, 1, 4, 21, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.208432}
{'[2, 1, 0, 0, 3, 2, 1, 1, 4, 21, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.208751}
{'[2, 1, 0, 0, 3, 2, 1, 1, 4, 21, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.208586}
{'[2, 1, 0, 0, 3, 2, 1, 1, 4, 21, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.209572}
{'[2, 1, 0, 0, 3, 2, 1, 1, 4, 21, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.20878}
{'[2, 1, 0, 0, 3, 2, 1, 1, 4, 21, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.209268}
{'[2, 1, 0, 0, 3, 2, 1, 1, 4, 21, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.208381}
{'[2, 1, 0, 0, 3, 2, 1, 1, 4, 21, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.208611}
{'[2, 1, 0, 0, 3, 2, 1, 1, 4, 21, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.209391}
{'[2, 1, 0, 0, 3, 2, 1, 1, 4, 21, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.208738}
{'[2, 1, 0, 0, 3, 2, 1, 1, 4, 21, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.209334}
{'[2, 1, 0, 0, 3, 2, 1, 1, 4, 21, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.208561}
{'[2, 1, 0, 0, 3, 2, 1, 1, 4, 21, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.208606}
{'[2, 1, 0, 0, 3, 2, 1, 1, 4, 21, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.213901}
{'[2, 1, 0, 0, 3, 2, 1, 1, 4, 21, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.213349}
{'[2, 1, 0, 0, 3, 2, 1, 1, 4, 21, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.21148}
{'[2, 1, 0, 0, 3, 2, 1, 1, 4, 21, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.214289}
{'[2, 1, 0, 0, 3, 2, 1, 1, 4, 21, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.214226}
{'[2, 1, 0, 0, 3, 2, 1, 1, 4, 21, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.214232}
{'[2, 1, 0, 0, 3, 2, 1, 1, 4, 21, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.214176}
{'[2, 1, 0, 0, 3, 2, 1, 1, 4, 21, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.210826}
{'[2, 1, 0, 0, 3, 2, 1, 1, 4, 21, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.208672}
{'[2, 1, 0, 0, 3, 2, 1, 1, 4, 21, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.211549}
{'[2, 1, 0, 0, 3, 2, 1, 1, 4, 21, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.214228}
{'[2, 1, 0, 0, 3, 2, 1, 1, 4, 21, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.214739}
{'[2, 1, 0, 0, 3, 2, 1, 1, 4, 21, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.209993}
{'[2, 1, 0, 0, 3, 2, 1, 1, 4, 21, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.208603}

out:
 ["{'[2, 1, 0, 0, 3, 2, 1, 1, 4, 21, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.208378}", "{'[2, 1, 0, 0, 3, 2, 1, 1, 4, 21, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.209476}", "{'[2, 1, 0, 0, 3, 2, 1, 1, 4, 21, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.208666}", "{'[2, 1, 0, 0, 3, 2, 1, 1, 4, 21, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.208432}", "{'[2, 1, 0, 0, 3, 2, 1, 1, 4, 21, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.208751}", "{'[2, 1, 0, 0, 3, 2, 1, 1, 4, 21, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.208586}", "{'[2, 1, 0, 0, 3, 2, 1, 1, 4, 21, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.209572}", "{'[2, 1, 0, 0, 3, 2, 1, 1, 4, 21, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.20878}", "{'[2, 1, 0, 0, 3, 2, 1, 1, 4, 21, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.209268}", "{'[2, 1, 0, 0, 3, 2, 1, 1, 4, 21, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.208381}", "{'[2, 1, 0, 0, 3, 2, 1, 1, 4, 21, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.208611}", "{'[2, 1, 0, 0, 3, 2, 1, 1, 4, 21, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.209391}", "{'[2, 1, 0, 0, 3, 2, 1, 1, 4, 21, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.208738}", "{'[2, 1, 0, 0, 3, 2, 1, 1, 4, 21, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.209334}", "{'[2, 1, 0, 0, 3, 2, 1, 1, 4, 21, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.208561}", "{'[2, 1, 0, 0, 3, 2, 1, 1, 4, 21, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.208606}", "{'[2, 1, 0, 0, 3, 2, 1, 1, 4, 21, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.213901}", "{'[2, 1, 0, 0, 3, 2, 1, 1, 4, 21, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.213349}", "{'[2, 1, 0, 0, 3, 2, 1, 1, 4, 21, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.21148}", "{'[2, 1, 0, 0, 3, 2, 1, 1, 4, 21, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.214289}", "{'[2, 1, 0, 0, 3, 2, 1, 1, 4, 21, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.214226}", "{'[2, 1, 0, 0, 3, 2, 1, 1, 4, 21, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.214232}", "{'[2, 1, 0, 0, 3, 2, 1, 1, 4, 21, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.214176}", "{'[2, 1, 0, 0, 3, 2, 1, 1, 4, 21, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.210826}", "{'[2, 1, 0, 0, 3, 2, 1, 1, 4, 21, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.208672}", "{'[2, 1, 0, 0, 3, 2, 1, 1, 4, 21, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.211549}", "{'[2, 1, 0, 0, 3, 2, 1, 1, 4, 21, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.214228}", "{'[2, 1, 0, 0, 3, 2, 1, 1, 4, 21, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.214739}", "{'[2, 1, 0, 0, 3, 2, 1, 1, 4, 21, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.209993}", "{'[2, 1, 0, 0, 3, 2, 1, 1, 4, 21, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.208603}"]
returning from 'run': {'[2, 1, 0, 0, 3, 2, 1, 1, 4, 21, 2, 0, 0, 1, 1, 1, 0, 0]': ([0.208378, 0.209476, 0.208666, 0.208432, 0.208751, 0.208586, 0.209572, 0.20878, 0.209268, 0.208381, 0.208611, 0.209391, 0.208738, 0.209334, 0.208561, 0.208606, 0.213901, 0.213349, 0.21148, 0.214289, 0.214226, 0.214232, 0.214176, 0.210826, 0.208672, 0.211549, 0.214228, 0.214739, 0.209993, 0.208603], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 1, 0, 0, 3, 2, 1, 1, 4, 21, 2, 0, 0, 1, 1, 1, 0, 0]': ([0.208378, 0.209476, 0.208666, 0.208432, 0.208751, 0.208586, 0.209572, 0.20878, 0.209268, 0.208381, 0.208611, 0.209391, 0.208738, 0.209334, 0.208561, 0.208606, 0.213901, 0.213349, 0.21148, 0.214289, 0.214226, 0.214232, 0.214176, 0.210826, 0.208672, 0.211549, 0.214228, 0.214739, 0.209993, 0.208603], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	5
        Additions: 		1216
        Multiplications: 	504
        Divisions: 		0
        Logical: 		0
        Reads: 			2384
        Writes: 		415
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest53.exe __orio_perftest53.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest53.exe  
Program Test Output: 
{'[0, 1, 1, 6, 3, 6, 1, 1, 0, 0, 2, 18, 1, 1, 0, 1, 0, 0]' : 0.124277}
{'[0, 1, 1, 6, 3, 6, 1, 1, 0, 0, 2, 18, 1, 1, 0, 1, 0, 0]' : 0.12412}
{'[0, 1, 1, 6, 3, 6, 1, 1, 0, 0, 2, 18, 1, 1, 0, 1, 0, 0]' : 0.124339}
{'[0, 1, 1, 6, 3, 6, 1, 1, 0, 0, 2, 18, 1, 1, 0, 1, 0, 0]' : 0.124403}
{'[0, 1, 1, 6, 3, 6, 1, 1, 0, 0, 2, 18, 1, 1, 0, 1, 0, 0]' : 0.122165}
{'[0, 1, 1, 6, 3, 6, 1, 1, 0, 0, 2, 18, 1, 1, 0, 1, 0, 0]' : 0.105764}
{'[0, 1, 1, 6, 3, 6, 1, 1, 0, 0, 2, 18, 1, 1, 0, 1, 0, 0]' : 0.104729}
{'[0, 1, 1, 6, 3, 6, 1, 1, 0, 0, 2, 18, 1, 1, 0, 1, 0, 0]' : 0.104733}
{'[0, 1, 1, 6, 3, 6, 1, 1, 0, 0, 2, 18, 1, 1, 0, 1, 0, 0]' : 0.10586}
{'[0, 1, 1, 6, 3, 6, 1, 1, 0, 0, 2, 18, 1, 1, 0, 1, 0, 0]' : 0.107884}
{'[0, 1, 1, 6, 3, 6, 1, 1, 0, 0, 2, 18, 1, 1, 0, 1, 0, 0]' : 0.104811}
{'[0, 1, 1, 6, 3, 6, 1, 1, 0, 0, 2, 18, 1, 1, 0, 1, 0, 0]' : 0.1049}
{'[0, 1, 1, 6, 3, 6, 1, 1, 0, 0, 2, 18, 1, 1, 0, 1, 0, 0]' : 0.105072}
{'[0, 1, 1, 6, 3, 6, 1, 1, 0, 0, 2, 18, 1, 1, 0, 1, 0, 0]' : 0.105083}
{'[0, 1, 1, 6, 3, 6, 1, 1, 0, 0, 2, 18, 1, 1, 0, 1, 0, 0]' : 0.105238}
{'[0, 1, 1, 6, 3, 6, 1, 1, 0, 0, 2, 18, 1, 1, 0, 1, 0, 0]' : 0.105128}
{'[0, 1, 1, 6, 3, 6, 1, 1, 0, 0, 2, 18, 1, 1, 0, 1, 0, 0]' : 0.104904}
{'[0, 1, 1, 6, 3, 6, 1, 1, 0, 0, 2, 18, 1, 1, 0, 1, 0, 0]' : 0.105177}
{'[0, 1, 1, 6, 3, 6, 1, 1, 0, 0, 2, 18, 1, 1, 0, 1, 0, 0]' : 0.108799}
{'[0, 1, 1, 6, 3, 6, 1, 1, 0, 0, 2, 18, 1, 1, 0, 1, 0, 0]' : 0.110822}
{'[0, 1, 1, 6, 3, 6, 1, 1, 0, 0, 2, 18, 1, 1, 0, 1, 0, 0]' : 0.106666}
{'[0, 1, 1, 6, 3, 6, 1, 1, 0, 0, 2, 18, 1, 1, 0, 1, 0, 0]' : 0.104938}
{'[0, 1, 1, 6, 3, 6, 1, 1, 0, 0, 2, 18, 1, 1, 0, 1, 0, 0]' : 0.105483}
{'[0, 1, 1, 6, 3, 6, 1, 1, 0, 0, 2, 18, 1, 1, 0, 1, 0, 0]' : 0.107841}
{'[0, 1, 1, 6, 3, 6, 1, 1, 0, 0, 2, 18, 1, 1, 0, 1, 0, 0]' : 0.108139}
{'[0, 1, 1, 6, 3, 6, 1, 1, 0, 0, 2, 18, 1, 1, 0, 1, 0, 0]' : 0.108284}
{'[0, 1, 1, 6, 3, 6, 1, 1, 0, 0, 2, 18, 1, 1, 0, 1, 0, 0]' : 0.107805}
{'[0, 1, 1, 6, 3, 6, 1, 1, 0, 0, 2, 18, 1, 1, 0, 1, 0, 0]' : 0.108186}
{'[0, 1, 1, 6, 3, 6, 1, 1, 0, 0, 2, 18, 1, 1, 0, 1, 0, 0]' : 0.110223}
{'[0, 1, 1, 6, 3, 6, 1, 1, 0, 0, 2, 18, 1, 1, 0, 1, 0, 0]' : 0.107751}

out:
 ["{'[0, 1, 1, 6, 3, 6, 1, 1, 0, 0, 2, 18, 1, 1, 0, 1, 0, 0]' : 0.124277}", "{'[0, 1, 1, 6, 3, 6, 1, 1, 0, 0, 2, 18, 1, 1, 0, 1, 0, 0]' : 0.12412}", "{'[0, 1, 1, 6, 3, 6, 1, 1, 0, 0, 2, 18, 1, 1, 0, 1, 0, 0]' : 0.124339}", "{'[0, 1, 1, 6, 3, 6, 1, 1, 0, 0, 2, 18, 1, 1, 0, 1, 0, 0]' : 0.124403}", "{'[0, 1, 1, 6, 3, 6, 1, 1, 0, 0, 2, 18, 1, 1, 0, 1, 0, 0]' : 0.122165}", "{'[0, 1, 1, 6, 3, 6, 1, 1, 0, 0, 2, 18, 1, 1, 0, 1, 0, 0]' : 0.105764}", "{'[0, 1, 1, 6, 3, 6, 1, 1, 0, 0, 2, 18, 1, 1, 0, 1, 0, 0]' : 0.104729}", "{'[0, 1, 1, 6, 3, 6, 1, 1, 0, 0, 2, 18, 1, 1, 0, 1, 0, 0]' : 0.104733}", "{'[0, 1, 1, 6, 3, 6, 1, 1, 0, 0, 2, 18, 1, 1, 0, 1, 0, 0]' : 0.10586}", "{'[0, 1, 1, 6, 3, 6, 1, 1, 0, 0, 2, 18, 1, 1, 0, 1, 0, 0]' : 0.107884}", "{'[0, 1, 1, 6, 3, 6, 1, 1, 0, 0, 2, 18, 1, 1, 0, 1, 0, 0]' : 0.104811}", "{'[0, 1, 1, 6, 3, 6, 1, 1, 0, 0, 2, 18, 1, 1, 0, 1, 0, 0]' : 0.1049}", "{'[0, 1, 1, 6, 3, 6, 1, 1, 0, 0, 2, 18, 1, 1, 0, 1, 0, 0]' : 0.105072}", "{'[0, 1, 1, 6, 3, 6, 1, 1, 0, 0, 2, 18, 1, 1, 0, 1, 0, 0]' : 0.105083}", "{'[0, 1, 1, 6, 3, 6, 1, 1, 0, 0, 2, 18, 1, 1, 0, 1, 0, 0]' : 0.105238}", "{'[0, 1, 1, 6, 3, 6, 1, 1, 0, 0, 2, 18, 1, 1, 0, 1, 0, 0]' : 0.105128}", "{'[0, 1, 1, 6, 3, 6, 1, 1, 0, 0, 2, 18, 1, 1, 0, 1, 0, 0]' : 0.104904}", "{'[0, 1, 1, 6, 3, 6, 1, 1, 0, 0, 2, 18, 1, 1, 0, 1, 0, 0]' : 0.105177}", "{'[0, 1, 1, 6, 3, 6, 1, 1, 0, 0, 2, 18, 1, 1, 0, 1, 0, 0]' : 0.108799}", "{'[0, 1, 1, 6, 3, 6, 1, 1, 0, 0, 2, 18, 1, 1, 0, 1, 0, 0]' : 0.110822}", "{'[0, 1, 1, 6, 3, 6, 1, 1, 0, 0, 2, 18, 1, 1, 0, 1, 0, 0]' : 0.106666}", "{'[0, 1, 1, 6, 3, 6, 1, 1, 0, 0, 2, 18, 1, 1, 0, 1, 0, 0]' : 0.104938}", "{'[0, 1, 1, 6, 3, 6, 1, 1, 0, 0, 2, 18, 1, 1, 0, 1, 0, 0]' : 0.105483}", "{'[0, 1, 1, 6, 3, 6, 1, 1, 0, 0, 2, 18, 1, 1, 0, 1, 0, 0]' : 0.107841}", "{'[0, 1, 1, 6, 3, 6, 1, 1, 0, 0, 2, 18, 1, 1, 0, 1, 0, 0]' : 0.108139}", "{'[0, 1, 1, 6, 3, 6, 1, 1, 0, 0, 2, 18, 1, 1, 0, 1, 0, 0]' : 0.108284}", "{'[0, 1, 1, 6, 3, 6, 1, 1, 0, 0, 2, 18, 1, 1, 0, 1, 0, 0]' : 0.107805}", "{'[0, 1, 1, 6, 3, 6, 1, 1, 0, 0, 2, 18, 1, 1, 0, 1, 0, 0]' : 0.108186}", "{'[0, 1, 1, 6, 3, 6, 1, 1, 0, 0, 2, 18, 1, 1, 0, 1, 0, 0]' : 0.110223}", "{'[0, 1, 1, 6, 3, 6, 1, 1, 0, 0, 2, 18, 1, 1, 0, 1, 0, 0]' : 0.107751}"]
returning from 'run': {'[0, 1, 1, 6, 3, 6, 1, 1, 0, 0, 2, 18, 1, 1, 0, 1, 0, 0]': ([0.124277, 0.12412, 0.124339, 0.124403, 0.122165, 0.105764, 0.104729, 0.104733, 0.10586, 0.107884, 0.104811, 0.1049, 0.105072, 0.105083, 0.105238, 0.105128, 0.104904, 0.105177, 0.108799, 0.110822, 0.106666, 0.104938, 0.105483, 0.107841, 0.108139, 0.108284, 0.107805, 0.108186, 0.110223, 0.107751], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 1, 6, 3, 6, 1, 1, 0, 0, 2, 18, 1, 1, 0, 1, 0, 0]': ([0.124277, 0.12412, 0.124339, 0.124403, 0.122165, 0.105764, 0.104729, 0.104733, 0.10586, 0.107884, 0.104811, 0.1049, 0.105072, 0.105083, 0.105238, 0.105128, 0.104904, 0.105177, 0.108799, 0.110822, 0.106666, 0.104938, 0.105483, 0.107841, 0.108139, 0.108284, 0.107805, 0.108186, 0.110223, 0.107751], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = iii
Code stats:
        Number of loops: 	92
        Max loop nest depth: 	5
        Additions: 		3735
        Multiplications: 	1650
        Divisions: 		0
        Logical: 		0
        Reads: 			7211
        Writes: 		1216
        Comparisons:		92
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest54.exe __orio_perftest54.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest54.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest54.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest54.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest54.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	98
        Max loop nest depth: 	5
        Additions: 		1753
        Multiplications: 	552
        Divisions: 		0
        Logical: 		0
        Reads: 			3438
        Writes: 		657
        Comparisons:		98
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest55.exe __orio_perftest55.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest55.exe  
Program Test Output: 
{'[6, 1, 6, 0, 3, 4, 1, 1, 18, 13, 2, 0, 1, 0, 1, 1, 1, 0]' : 0.120449}
{'[6, 1, 6, 0, 3, 4, 1, 1, 18, 13, 2, 0, 1, 0, 1, 1, 1, 0]' : 0.120551}
{'[6, 1, 6, 0, 3, 4, 1, 1, 18, 13, 2, 0, 1, 0, 1, 1, 1, 0]' : 0.120076}
{'[6, 1, 6, 0, 3, 4, 1, 1, 18, 13, 2, 0, 1, 0, 1, 1, 1, 0]' : 0.120006}
{'[6, 1, 6, 0, 3, 4, 1, 1, 18, 13, 2, 0, 1, 0, 1, 1, 1, 0]' : 0.115476}
{'[6, 1, 6, 0, 3, 4, 1, 1, 18, 13, 2, 0, 1, 0, 1, 1, 1, 0]' : 0.101613}
{'[6, 1, 6, 0, 3, 4, 1, 1, 18, 13, 2, 0, 1, 0, 1, 1, 1, 0]' : 0.103878}
{'[6, 1, 6, 0, 3, 4, 1, 1, 18, 13, 2, 0, 1, 0, 1, 1, 1, 0]' : 0.104517}
{'[6, 1, 6, 0, 3, 4, 1, 1, 18, 13, 2, 0, 1, 0, 1, 1, 1, 0]' : 0.104446}
{'[6, 1, 6, 0, 3, 4, 1, 1, 18, 13, 2, 0, 1, 0, 1, 1, 1, 0]' : 0.10451}
{'[6, 1, 6, 0, 3, 4, 1, 1, 18, 13, 2, 0, 1, 0, 1, 1, 1, 0]' : 0.10628}
{'[6, 1, 6, 0, 3, 4, 1, 1, 18, 13, 2, 0, 1, 0, 1, 1, 1, 0]' : 0.107413}
{'[6, 1, 6, 0, 3, 4, 1, 1, 18, 13, 2, 0, 1, 0, 1, 1, 1, 0]' : 0.107256}
{'[6, 1, 6, 0, 3, 4, 1, 1, 18, 13, 2, 0, 1, 0, 1, 1, 1, 0]' : 0.106243}
{'[6, 1, 6, 0, 3, 4, 1, 1, 18, 13, 2, 0, 1, 0, 1, 1, 1, 0]' : 0.102315}
{'[6, 1, 6, 0, 3, 4, 1, 1, 18, 13, 2, 0, 1, 0, 1, 1, 1, 0]' : 0.102315}
{'[6, 1, 6, 0, 3, 4, 1, 1, 18, 13, 2, 0, 1, 0, 1, 1, 1, 0]' : 0.104506}
{'[6, 1, 6, 0, 3, 4, 1, 1, 18, 13, 2, 0, 1, 0, 1, 1, 1, 0]' : 0.106414}
{'[6, 1, 6, 0, 3, 4, 1, 1, 18, 13, 2, 0, 1, 0, 1, 1, 1, 0]' : 0.107227}
{'[6, 1, 6, 0, 3, 4, 1, 1, 18, 13, 2, 0, 1, 0, 1, 1, 1, 0]' : 0.107599}
{'[6, 1, 6, 0, 3, 4, 1, 1, 18, 13, 2, 0, 1, 0, 1, 1, 1, 0]' : 0.107337}
{'[6, 1, 6, 0, 3, 4, 1, 1, 18, 13, 2, 0, 1, 0, 1, 1, 1, 0]' : 0.107276}
{'[6, 1, 6, 0, 3, 4, 1, 1, 18, 13, 2, 0, 1, 0, 1, 1, 1, 0]' : 0.106481}
{'[6, 1, 6, 0, 3, 4, 1, 1, 18, 13, 2, 0, 1, 0, 1, 1, 1, 0]' : 0.101748}
{'[6, 1, 6, 0, 3, 4, 1, 1, 18, 13, 2, 0, 1, 0, 1, 1, 1, 0]' : 0.101893}
{'[6, 1, 6, 0, 3, 4, 1, 1, 18, 13, 2, 0, 1, 0, 1, 1, 1, 0]' : 0.103898}
{'[6, 1, 6, 0, 3, 4, 1, 1, 18, 13, 2, 0, 1, 0, 1, 1, 1, 0]' : 0.104957}
{'[6, 1, 6, 0, 3, 4, 1, 1, 18, 13, 2, 0, 1, 0, 1, 1, 1, 0]' : 0.104526}
{'[6, 1, 6, 0, 3, 4, 1, 1, 18, 13, 2, 0, 1, 0, 1, 1, 1, 0]' : 0.104496}
{'[6, 1, 6, 0, 3, 4, 1, 1, 18, 13, 2, 0, 1, 0, 1, 1, 1, 0]' : 0.104578}

out:
 ["{'[6, 1, 6, 0, 3, 4, 1, 1, 18, 13, 2, 0, 1, 0, 1, 1, 1, 0]' : 0.120449}", "{'[6, 1, 6, 0, 3, 4, 1, 1, 18, 13, 2, 0, 1, 0, 1, 1, 1, 0]' : 0.120551}", "{'[6, 1, 6, 0, 3, 4, 1, 1, 18, 13, 2, 0, 1, 0, 1, 1, 1, 0]' : 0.120076}", "{'[6, 1, 6, 0, 3, 4, 1, 1, 18, 13, 2, 0, 1, 0, 1, 1, 1, 0]' : 0.120006}", "{'[6, 1, 6, 0, 3, 4, 1, 1, 18, 13, 2, 0, 1, 0, 1, 1, 1, 0]' : 0.115476}", "{'[6, 1, 6, 0, 3, 4, 1, 1, 18, 13, 2, 0, 1, 0, 1, 1, 1, 0]' : 0.101613}", "{'[6, 1, 6, 0, 3, 4, 1, 1, 18, 13, 2, 0, 1, 0, 1, 1, 1, 0]' : 0.103878}", "{'[6, 1, 6, 0, 3, 4, 1, 1, 18, 13, 2, 0, 1, 0, 1, 1, 1, 0]' : 0.104517}", "{'[6, 1, 6, 0, 3, 4, 1, 1, 18, 13, 2, 0, 1, 0, 1, 1, 1, 0]' : 0.104446}", "{'[6, 1, 6, 0, 3, 4, 1, 1, 18, 13, 2, 0, 1, 0, 1, 1, 1, 0]' : 0.10451}", "{'[6, 1, 6, 0, 3, 4, 1, 1, 18, 13, 2, 0, 1, 0, 1, 1, 1, 0]' : 0.10628}", "{'[6, 1, 6, 0, 3, 4, 1, 1, 18, 13, 2, 0, 1, 0, 1, 1, 1, 0]' : 0.107413}", "{'[6, 1, 6, 0, 3, 4, 1, 1, 18, 13, 2, 0, 1, 0, 1, 1, 1, 0]' : 0.107256}", "{'[6, 1, 6, 0, 3, 4, 1, 1, 18, 13, 2, 0, 1, 0, 1, 1, 1, 0]' : 0.106243}", "{'[6, 1, 6, 0, 3, 4, 1, 1, 18, 13, 2, 0, 1, 0, 1, 1, 1, 0]' : 0.102315}", "{'[6, 1, 6, 0, 3, 4, 1, 1, 18, 13, 2, 0, 1, 0, 1, 1, 1, 0]' : 0.102315}", "{'[6, 1, 6, 0, 3, 4, 1, 1, 18, 13, 2, 0, 1, 0, 1, 1, 1, 0]' : 0.104506}", "{'[6, 1, 6, 0, 3, 4, 1, 1, 18, 13, 2, 0, 1, 0, 1, 1, 1, 0]' : 0.106414}", "{'[6, 1, 6, 0, 3, 4, 1, 1, 18, 13, 2, 0, 1, 0, 1, 1, 1, 0]' : 0.107227}", "{'[6, 1, 6, 0, 3, 4, 1, 1, 18, 13, 2, 0, 1, 0, 1, 1, 1, 0]' : 0.107599}", "{'[6, 1, 6, 0, 3, 4, 1, 1, 18, 13, 2, 0, 1, 0, 1, 1, 1, 0]' : 0.107337}", "{'[6, 1, 6, 0, 3, 4, 1, 1, 18, 13, 2, 0, 1, 0, 1, 1, 1, 0]' : 0.107276}", "{'[6, 1, 6, 0, 3, 4, 1, 1, 18, 13, 2, 0, 1, 0, 1, 1, 1, 0]' : 0.106481}", "{'[6, 1, 6, 0, 3, 4, 1, 1, 18, 13, 2, 0, 1, 0, 1, 1, 1, 0]' : 0.101748}", "{'[6, 1, 6, 0, 3, 4, 1, 1, 18, 13, 2, 0, 1, 0, 1, 1, 1, 0]' : 0.101893}", "{'[6, 1, 6, 0, 3, 4, 1, 1, 18, 13, 2, 0, 1, 0, 1, 1, 1, 0]' : 0.103898}", "{'[6, 1, 6, 0, 3, 4, 1, 1, 18, 13, 2, 0, 1, 0, 1, 1, 1, 0]' : 0.104957}", "{'[6, 1, 6, 0, 3, 4, 1, 1, 18, 13, 2, 0, 1, 0, 1, 1, 1, 0]' : 0.104526}", "{'[6, 1, 6, 0, 3, 4, 1, 1, 18, 13, 2, 0, 1, 0, 1, 1, 1, 0]' : 0.104496}", "{'[6, 1, 6, 0, 3, 4, 1, 1, 18, 13, 2, 0, 1, 0, 1, 1, 1, 0]' : 0.104578}"]
returning from 'run': {'[6, 1, 6, 0, 3, 4, 1, 1, 18, 13, 2, 0, 1, 0, 1, 1, 1, 0]': ([0.120449, 0.120551, 0.120076, 0.120006, 0.115476, 0.101613, 0.103878, 0.104517, 0.104446, 0.10451, 0.10628, 0.107413, 0.107256, 0.106243, 0.102315, 0.102315, 0.104506, 0.106414, 0.107227, 0.107599, 0.107337, 0.107276, 0.106481, 0.101748, 0.101893, 0.103898, 0.104957, 0.104526, 0.104496, 0.104578], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 1, 6, 0, 3, 4, 1, 1, 18, 13, 2, 0, 1, 0, 1, 1, 1, 0]': ([0.120449, 0.120551, 0.120076, 0.120006, 0.115476, 0.101613, 0.103878, 0.104517, 0.104446, 0.10451, 0.10628, 0.107413, 0.107256, 0.106243, 0.102315, 0.102315, 0.104506, 0.106414, 0.107227, 0.107599, 0.107337, 0.107276, 0.106481, 0.101748, 0.101893, 0.103898, 0.104957, 0.104526, 0.104496, 0.104578], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	38
        Max loop nest depth: 	5
        Additions: 		862
        Multiplications: 	350
        Divisions: 		0
        Logical: 		0
        Reads: 			1901
        Writes: 		381
        Comparisons:		38
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest56.exe __orio_perftest56.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest56.exe  
Program Test Output: 
{'[0, 1, 1, 6, 3, 0, 1, 1, 17, 1, 2, 0, 2, 0, 0, 1, 0, 1]' : 0.167325}
{'[0, 1, 1, 6, 3, 0, 1, 1, 17, 1, 2, 0, 2, 0, 0, 1, 0, 1]' : 0.16604}
{'[0, 1, 1, 6, 3, 0, 1, 1, 17, 1, 2, 0, 2, 0, 0, 1, 0, 1]' : 0.148039}
{'[0, 1, 1, 6, 3, 0, 1, 1, 17, 1, 2, 0, 2, 0, 0, 1, 0, 1]' : 0.148643}
{'[0, 1, 1, 6, 3, 0, 1, 1, 17, 1, 2, 0, 2, 0, 0, 1, 0, 1]' : 0.148068}
{'[0, 1, 1, 6, 3, 0, 1, 1, 17, 1, 2, 0, 2, 0, 0, 1, 0, 1]' : 0.148712}
{'[0, 1, 1, 6, 3, 0, 1, 1, 17, 1, 2, 0, 2, 0, 0, 1, 0, 1]' : 0.148304}
{'[0, 1, 1, 6, 3, 0, 1, 1, 17, 1, 2, 0, 2, 0, 0, 1, 0, 1]' : 0.148475}
{'[0, 1, 1, 6, 3, 0, 1, 1, 17, 1, 2, 0, 2, 0, 0, 1, 0, 1]' : 0.148946}
{'[0, 1, 1, 6, 3, 0, 1, 1, 17, 1, 2, 0, 2, 0, 0, 1, 0, 1]' : 0.148251}
{'[0, 1, 1, 6, 3, 0, 1, 1, 17, 1, 2, 0, 2, 0, 0, 1, 0, 1]' : 0.148867}
{'[0, 1, 1, 6, 3, 0, 1, 1, 17, 1, 2, 0, 2, 0, 0, 1, 0, 1]' : 0.147952}
{'[0, 1, 1, 6, 3, 0, 1, 1, 17, 1, 2, 0, 2, 0, 0, 1, 0, 1]' : 0.148741}
{'[0, 1, 1, 6, 3, 0, 1, 1, 17, 1, 2, 0, 2, 0, 0, 1, 0, 1]' : 0.148386}
{'[0, 1, 1, 6, 3, 0, 1, 1, 17, 1, 2, 0, 2, 0, 0, 1, 0, 1]' : 0.148504}
{'[0, 1, 1, 6, 3, 0, 1, 1, 17, 1, 2, 0, 2, 0, 0, 1, 0, 1]' : 0.148349}
{'[0, 1, 1, 6, 3, 0, 1, 1, 17, 1, 2, 0, 2, 0, 0, 1, 0, 1]' : 0.148893}
{'[0, 1, 1, 6, 3, 0, 1, 1, 17, 1, 2, 0, 2, 0, 0, 1, 0, 1]' : 0.148397}
{'[0, 1, 1, 6, 3, 0, 1, 1, 17, 1, 2, 0, 2, 0, 0, 1, 0, 1]' : 0.148894}
{'[0, 1, 1, 6, 3, 0, 1, 1, 17, 1, 2, 0, 2, 0, 0, 1, 0, 1]' : 0.14817}
{'[0, 1, 1, 6, 3, 0, 1, 1, 17, 1, 2, 0, 2, 0, 0, 1, 0, 1]' : 0.149034}
{'[0, 1, 1, 6, 3, 0, 1, 1, 17, 1, 2, 0, 2, 0, 0, 1, 0, 1]' : 0.148899}
{'[0, 1, 1, 6, 3, 0, 1, 1, 17, 1, 2, 0, 2, 0, 0, 1, 0, 1]' : 0.148953}
{'[0, 1, 1, 6, 3, 0, 1, 1, 17, 1, 2, 0, 2, 0, 0, 1, 0, 1]' : 0.148976}
{'[0, 1, 1, 6, 3, 0, 1, 1, 17, 1, 2, 0, 2, 0, 0, 1, 0, 1]' : 0.148827}
{'[0, 1, 1, 6, 3, 0, 1, 1, 17, 1, 2, 0, 2, 0, 0, 1, 0, 1]' : 0.148412}
{'[0, 1, 1, 6, 3, 0, 1, 1, 17, 1, 2, 0, 2, 0, 0, 1, 0, 1]' : 0.148785}
{'[0, 1, 1, 6, 3, 0, 1, 1, 17, 1, 2, 0, 2, 0, 0, 1, 0, 1]' : 0.14834}
{'[0, 1, 1, 6, 3, 0, 1, 1, 17, 1, 2, 0, 2, 0, 0, 1, 0, 1]' : 0.149039}
{'[0, 1, 1, 6, 3, 0, 1, 1, 17, 1, 2, 0, 2, 0, 0, 1, 0, 1]' : 0.148685}

out:
 ["{'[0, 1, 1, 6, 3, 0, 1, 1, 17, 1, 2, 0, 2, 0, 0, 1, 0, 1]' : 0.167325}", "{'[0, 1, 1, 6, 3, 0, 1, 1, 17, 1, 2, 0, 2, 0, 0, 1, 0, 1]' : 0.16604}", "{'[0, 1, 1, 6, 3, 0, 1, 1, 17, 1, 2, 0, 2, 0, 0, 1, 0, 1]' : 0.148039}", "{'[0, 1, 1, 6, 3, 0, 1, 1, 17, 1, 2, 0, 2, 0, 0, 1, 0, 1]' : 0.148643}", "{'[0, 1, 1, 6, 3, 0, 1, 1, 17, 1, 2, 0, 2, 0, 0, 1, 0, 1]' : 0.148068}", "{'[0, 1, 1, 6, 3, 0, 1, 1, 17, 1, 2, 0, 2, 0, 0, 1, 0, 1]' : 0.148712}", "{'[0, 1, 1, 6, 3, 0, 1, 1, 17, 1, 2, 0, 2, 0, 0, 1, 0, 1]' : 0.148304}", "{'[0, 1, 1, 6, 3, 0, 1, 1, 17, 1, 2, 0, 2, 0, 0, 1, 0, 1]' : 0.148475}", "{'[0, 1, 1, 6, 3, 0, 1, 1, 17, 1, 2, 0, 2, 0, 0, 1, 0, 1]' : 0.148946}", "{'[0, 1, 1, 6, 3, 0, 1, 1, 17, 1, 2, 0, 2, 0, 0, 1, 0, 1]' : 0.148251}", "{'[0, 1, 1, 6, 3, 0, 1, 1, 17, 1, 2, 0, 2, 0, 0, 1, 0, 1]' : 0.148867}", "{'[0, 1, 1, 6, 3, 0, 1, 1, 17, 1, 2, 0, 2, 0, 0, 1, 0, 1]' : 0.147952}", "{'[0, 1, 1, 6, 3, 0, 1, 1, 17, 1, 2, 0, 2, 0, 0, 1, 0, 1]' : 0.148741}", "{'[0, 1, 1, 6, 3, 0, 1, 1, 17, 1, 2, 0, 2, 0, 0, 1, 0, 1]' : 0.148386}", "{'[0, 1, 1, 6, 3, 0, 1, 1, 17, 1, 2, 0, 2, 0, 0, 1, 0, 1]' : 0.148504}", "{'[0, 1, 1, 6, 3, 0, 1, 1, 17, 1, 2, 0, 2, 0, 0, 1, 0, 1]' : 0.148349}", "{'[0, 1, 1, 6, 3, 0, 1, 1, 17, 1, 2, 0, 2, 0, 0, 1, 0, 1]' : 0.148893}", "{'[0, 1, 1, 6, 3, 0, 1, 1, 17, 1, 2, 0, 2, 0, 0, 1, 0, 1]' : 0.148397}", "{'[0, 1, 1, 6, 3, 0, 1, 1, 17, 1, 2, 0, 2, 0, 0, 1, 0, 1]' : 0.148894}", "{'[0, 1, 1, 6, 3, 0, 1, 1, 17, 1, 2, 0, 2, 0, 0, 1, 0, 1]' : 0.14817}", "{'[0, 1, 1, 6, 3, 0, 1, 1, 17, 1, 2, 0, 2, 0, 0, 1, 0, 1]' : 0.149034}", "{'[0, 1, 1, 6, 3, 0, 1, 1, 17, 1, 2, 0, 2, 0, 0, 1, 0, 1]' : 0.148899}", "{'[0, 1, 1, 6, 3, 0, 1, 1, 17, 1, 2, 0, 2, 0, 0, 1, 0, 1]' : 0.148953}", "{'[0, 1, 1, 6, 3, 0, 1, 1, 17, 1, 2, 0, 2, 0, 0, 1, 0, 1]' : 0.148976}", "{'[0, 1, 1, 6, 3, 0, 1, 1, 17, 1, 2, 0, 2, 0, 0, 1, 0, 1]' : 0.148827}", "{'[0, 1, 1, 6, 3, 0, 1, 1, 17, 1, 2, 0, 2, 0, 0, 1, 0, 1]' : 0.148412}", "{'[0, 1, 1, 6, 3, 0, 1, 1, 17, 1, 2, 0, 2, 0, 0, 1, 0, 1]' : 0.148785}", "{'[0, 1, 1, 6, 3, 0, 1, 1, 17, 1, 2, 0, 2, 0, 0, 1, 0, 1]' : 0.14834}", "{'[0, 1, 1, 6, 3, 0, 1, 1, 17, 1, 2, 0, 2, 0, 0, 1, 0, 1]' : 0.149039}", "{'[0, 1, 1, 6, 3, 0, 1, 1, 17, 1, 2, 0, 2, 0, 0, 1, 0, 1]' : 0.148685}"]
returning from 'run': {'[0, 1, 1, 6, 3, 0, 1, 1, 17, 1, 2, 0, 2, 0, 0, 1, 0, 1]': ([0.167325, 0.16604, 0.148039, 0.148643, 0.148068, 0.148712, 0.148304, 0.148475, 0.148946, 0.148251, 0.148867, 0.147952, 0.148741, 0.148386, 0.148504, 0.148349, 0.148893, 0.148397, 0.148894, 0.14817, 0.149034, 0.148899, 0.148953, 0.148976, 0.148827, 0.148412, 0.148785, 0.14834, 0.149039, 0.148685], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 1, 6, 3, 0, 1, 1, 17, 1, 2, 0, 2, 0, 0, 1, 0, 1]': ([0.167325, 0.16604, 0.148039, 0.148643, 0.148068, 0.148712, 0.148304, 0.148475, 0.148946, 0.148251, 0.148867, 0.147952, 0.148741, 0.148386, 0.148504, 0.148349, 0.148893, 0.148397, 0.148894, 0.14817, 0.149034, 0.148899, 0.148953, 0.148976, 0.148827, 0.148412, 0.148785, 0.14834, 0.149039, 0.148685], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		262
        Multiplications: 	86
        Divisions: 		0
        Logical: 		0
        Reads: 			669
        Writes: 		161
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest57.exe __orio_perftest57.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest57.exe  
Program Test Output: 
{'[5, 1, 3, 4, 3, 2, 1, 0, 0, 0, 2, 29, 0, 0, 1, 1, 0, 1]' : 0.206773}
{'[5, 1, 3, 4, 3, 2, 1, 0, 0, 0, 2, 29, 0, 0, 1, 1, 0, 1]' : 0.206652}
{'[5, 1, 3, 4, 3, 2, 1, 0, 0, 0, 2, 29, 0, 0, 1, 1, 0, 1]' : 0.188455}
{'[5, 1, 3, 4, 3, 2, 1, 0, 0, 0, 2, 29, 0, 0, 1, 1, 0, 1]' : 0.177683}
{'[5, 1, 3, 4, 3, 2, 1, 0, 0, 0, 2, 29, 0, 0, 1, 1, 0, 1]' : 0.173733}
{'[5, 1, 3, 4, 3, 2, 1, 0, 0, 0, 2, 29, 0, 0, 1, 1, 0, 1]' : 0.172701}
{'[5, 1, 3, 4, 3, 2, 1, 0, 0, 0, 2, 29, 0, 0, 1, 1, 0, 1]' : 0.180348}
{'[5, 1, 3, 4, 3, 2, 1, 0, 0, 0, 2, 29, 0, 0, 1, 1, 0, 1]' : 0.177825}
{'[5, 1, 3, 4, 3, 2, 1, 0, 0, 0, 2, 29, 0, 0, 1, 1, 0, 1]' : 0.177996}
{'[5, 1, 3, 4, 3, 2, 1, 0, 0, 0, 2, 29, 0, 0, 1, 1, 0, 1]' : 0.177329}
{'[5, 1, 3, 4, 3, 2, 1, 0, 0, 0, 2, 29, 0, 0, 1, 1, 0, 1]' : 0.172132}
{'[5, 1, 3, 4, 3, 2, 1, 0, 0, 0, 2, 29, 0, 0, 1, 1, 0, 1]' : 0.174417}
{'[5, 1, 3, 4, 3, 2, 1, 0, 0, 0, 2, 29, 0, 0, 1, 1, 0, 1]' : 0.177938}
{'[5, 1, 3, 4, 3, 2, 1, 0, 0, 0, 2, 29, 0, 0, 1, 1, 0, 1]' : 0.17772}
{'[5, 1, 3, 4, 3, 2, 1, 0, 0, 0, 2, 29, 0, 0, 1, 1, 0, 1]' : 0.177716}
{'[5, 1, 3, 4, 3, 2, 1, 0, 0, 0, 2, 29, 0, 0, 1, 1, 0, 1]' : 0.177722}
{'[5, 1, 3, 4, 3, 2, 1, 0, 0, 0, 2, 29, 0, 0, 1, 1, 0, 1]' : 0.177783}
{'[5, 1, 3, 4, 3, 2, 1, 0, 0, 0, 2, 29, 0, 0, 1, 1, 0, 1]' : 0.177814}
{'[5, 1, 3, 4, 3, 2, 1, 0, 0, 0, 2, 29, 0, 0, 1, 1, 0, 1]' : 0.181052}
{'[5, 1, 3, 4, 3, 2, 1, 0, 0, 0, 2, 29, 0, 0, 1, 1, 0, 1]' : 0.177867}
{'[5, 1, 3, 4, 3, 2, 1, 0, 0, 0, 2, 29, 0, 0, 1, 1, 0, 1]' : 0.17313}
{'[5, 1, 3, 4, 3, 2, 1, 0, 0, 0, 2, 29, 0, 0, 1, 1, 0, 1]' : 0.172375}
{'[5, 1, 3, 4, 3, 2, 1, 0, 0, 0, 2, 29, 0, 0, 1, 1, 0, 1]' : 0.172765}
{'[5, 1, 3, 4, 3, 2, 1, 0, 0, 0, 2, 29, 0, 0, 1, 1, 0, 1]' : 0.177708}
{'[5, 1, 3, 4, 3, 2, 1, 0, 0, 0, 2, 29, 0, 0, 1, 1, 0, 1]' : 0.178327}
{'[5, 1, 3, 4, 3, 2, 1, 0, 0, 0, 2, 29, 0, 0, 1, 1, 0, 1]' : 0.177773}
{'[5, 1, 3, 4, 3, 2, 1, 0, 0, 0, 2, 29, 0, 0, 1, 1, 0, 1]' : 0.177639}
{'[5, 1, 3, 4, 3, 2, 1, 0, 0, 0, 2, 29, 0, 0, 1, 1, 0, 1]' : 0.175609}
{'[5, 1, 3, 4, 3, 2, 1, 0, 0, 0, 2, 29, 0, 0, 1, 1, 0, 1]' : 0.174653}
{'[5, 1, 3, 4, 3, 2, 1, 0, 0, 0, 2, 29, 0, 0, 1, 1, 0, 1]' : 0.177717}

out:
 ["{'[5, 1, 3, 4, 3, 2, 1, 0, 0, 0, 2, 29, 0, 0, 1, 1, 0, 1]' : 0.206773}", "{'[5, 1, 3, 4, 3, 2, 1, 0, 0, 0, 2, 29, 0, 0, 1, 1, 0, 1]' : 0.206652}", "{'[5, 1, 3, 4, 3, 2, 1, 0, 0, 0, 2, 29, 0, 0, 1, 1, 0, 1]' : 0.188455}", "{'[5, 1, 3, 4, 3, 2, 1, 0, 0, 0, 2, 29, 0, 0, 1, 1, 0, 1]' : 0.177683}", "{'[5, 1, 3, 4, 3, 2, 1, 0, 0, 0, 2, 29, 0, 0, 1, 1, 0, 1]' : 0.173733}", "{'[5, 1, 3, 4, 3, 2, 1, 0, 0, 0, 2, 29, 0, 0, 1, 1, 0, 1]' : 0.172701}", "{'[5, 1, 3, 4, 3, 2, 1, 0, 0, 0, 2, 29, 0, 0, 1, 1, 0, 1]' : 0.180348}", "{'[5, 1, 3, 4, 3, 2, 1, 0, 0, 0, 2, 29, 0, 0, 1, 1, 0, 1]' : 0.177825}", "{'[5, 1, 3, 4, 3, 2, 1, 0, 0, 0, 2, 29, 0, 0, 1, 1, 0, 1]' : 0.177996}", "{'[5, 1, 3, 4, 3, 2, 1, 0, 0, 0, 2, 29, 0, 0, 1, 1, 0, 1]' : 0.177329}", "{'[5, 1, 3, 4, 3, 2, 1, 0, 0, 0, 2, 29, 0, 0, 1, 1, 0, 1]' : 0.172132}", "{'[5, 1, 3, 4, 3, 2, 1, 0, 0, 0, 2, 29, 0, 0, 1, 1, 0, 1]' : 0.174417}", "{'[5, 1, 3, 4, 3, 2, 1, 0, 0, 0, 2, 29, 0, 0, 1, 1, 0, 1]' : 0.177938}", "{'[5, 1, 3, 4, 3, 2, 1, 0, 0, 0, 2, 29, 0, 0, 1, 1, 0, 1]' : 0.17772}", "{'[5, 1, 3, 4, 3, 2, 1, 0, 0, 0, 2, 29, 0, 0, 1, 1, 0, 1]' : 0.177716}", "{'[5, 1, 3, 4, 3, 2, 1, 0, 0, 0, 2, 29, 0, 0, 1, 1, 0, 1]' : 0.177722}", "{'[5, 1, 3, 4, 3, 2, 1, 0, 0, 0, 2, 29, 0, 0, 1, 1, 0, 1]' : 0.177783}", "{'[5, 1, 3, 4, 3, 2, 1, 0, 0, 0, 2, 29, 0, 0, 1, 1, 0, 1]' : 0.177814}", "{'[5, 1, 3, 4, 3, 2, 1, 0, 0, 0, 2, 29, 0, 0, 1, 1, 0, 1]' : 0.181052}", "{'[5, 1, 3, 4, 3, 2, 1, 0, 0, 0, 2, 29, 0, 0, 1, 1, 0, 1]' : 0.177867}", "{'[5, 1, 3, 4, 3, 2, 1, 0, 0, 0, 2, 29, 0, 0, 1, 1, 0, 1]' : 0.17313}", "{'[5, 1, 3, 4, 3, 2, 1, 0, 0, 0, 2, 29, 0, 0, 1, 1, 0, 1]' : 0.172375}", "{'[5, 1, 3, 4, 3, 2, 1, 0, 0, 0, 2, 29, 0, 0, 1, 1, 0, 1]' : 0.172765}", "{'[5, 1, 3, 4, 3, 2, 1, 0, 0, 0, 2, 29, 0, 0, 1, 1, 0, 1]' : 0.177708}", "{'[5, 1, 3, 4, 3, 2, 1, 0, 0, 0, 2, 29, 0, 0, 1, 1, 0, 1]' : 0.178327}", "{'[5, 1, 3, 4, 3, 2, 1, 0, 0, 0, 2, 29, 0, 0, 1, 1, 0, 1]' : 0.177773}", "{'[5, 1, 3, 4, 3, 2, 1, 0, 0, 0, 2, 29, 0, 0, 1, 1, 0, 1]' : 0.177639}", "{'[5, 1, 3, 4, 3, 2, 1, 0, 0, 0, 2, 29, 0, 0, 1, 1, 0, 1]' : 0.175609}", "{'[5, 1, 3, 4, 3, 2, 1, 0, 0, 0, 2, 29, 0, 0, 1, 1, 0, 1]' : 0.174653}", "{'[5, 1, 3, 4, 3, 2, 1, 0, 0, 0, 2, 29, 0, 0, 1, 1, 0, 1]' : 0.177717}"]
returning from 'run': {'[5, 1, 3, 4, 3, 2, 1, 0, 0, 0, 2, 29, 0, 0, 1, 1, 0, 1]': ([0.206773, 0.206652, 0.188455, 0.177683, 0.173733, 0.172701, 0.180348, 0.177825, 0.177996, 0.177329, 0.172132, 0.174417, 0.177938, 0.17772, 0.177716, 0.177722, 0.177783, 0.177814, 0.181052, 0.177867, 0.17313, 0.172375, 0.172765, 0.177708, 0.178327, 0.177773, 0.177639, 0.175609, 0.174653, 0.177717], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 1, 3, 4, 3, 2, 1, 0, 0, 0, 2, 29, 0, 0, 1, 1, 0, 1]': ([0.206773, 0.206652, 0.188455, 0.177683, 0.173733, 0.172701, 0.180348, 0.177825, 0.177996, 0.177329, 0.172132, 0.174417, 0.177938, 0.17772, 0.177716, 0.177722, 0.177783, 0.177814, 0.181052, 0.177867, 0.17313, 0.172375, 0.172765, 0.177708, 0.178327, 0.177773, 0.177639, 0.175609, 0.174653, 0.177717], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		272
        Multiplications: 	90
        Divisions: 		0
        Logical: 		0
        Reads: 			698
        Writes: 		170
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest58.exe __orio_perftest58.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest58.exe  
Program Test Output: 
{'[0, 1, 0, 6, 3, 2, 1, 0, 1, 0, 2, 7, 0, 0, 2, 1, 1, 1]' : 0.210447}
{'[0, 1, 0, 6, 3, 2, 1, 0, 1, 0, 2, 7, 0, 0, 2, 1, 1, 1]' : 0.211297}
{'[0, 1, 0, 6, 3, 2, 1, 0, 1, 0, 2, 7, 0, 0, 2, 1, 1, 1]' : 0.209158}
{'[0, 1, 0, 6, 3, 2, 1, 0, 1, 0, 2, 7, 0, 0, 2, 1, 1, 1]' : 0.183296}
{'[0, 1, 0, 6, 3, 2, 1, 0, 1, 0, 2, 7, 0, 0, 2, 1, 1, 1]' : 0.182668}
{'[0, 1, 0, 6, 3, 2, 1, 0, 1, 0, 2, 7, 0, 0, 2, 1, 1, 1]' : 0.18242}
{'[0, 1, 0, 6, 3, 2, 1, 0, 1, 0, 2, 7, 0, 0, 2, 1, 1, 1]' : 0.183402}
{'[0, 1, 0, 6, 3, 2, 1, 0, 1, 0, 2, 7, 0, 0, 2, 1, 1, 1]' : 0.182661}
{'[0, 1, 0, 6, 3, 2, 1, 0, 1, 0, 2, 7, 0, 0, 2, 1, 1, 1]' : 0.183985}
{'[0, 1, 0, 6, 3, 2, 1, 0, 1, 0, 2, 7, 0, 0, 2, 1, 1, 1]' : 0.183344}
{'[0, 1, 0, 6, 3, 2, 1, 0, 1, 0, 2, 7, 0, 0, 2, 1, 1, 1]' : 0.180128}
{'[0, 1, 0, 6, 3, 2, 1, 0, 1, 0, 2, 7, 0, 0, 2, 1, 1, 1]' : 0.179716}
{'[0, 1, 0, 6, 3, 2, 1, 0, 1, 0, 2, 7, 0, 0, 2, 1, 1, 1]' : 0.182545}
{'[0, 1, 0, 6, 3, 2, 1, 0, 1, 0, 2, 7, 0, 0, 2, 1, 1, 1]' : 0.182751}
{'[0, 1, 0, 6, 3, 2, 1, 0, 1, 0, 2, 7, 0, 0, 2, 1, 1, 1]' : 0.187004}
{'[0, 1, 0, 6, 3, 2, 1, 0, 1, 0, 2, 7, 0, 0, 2, 1, 1, 1]' : 0.181648}
{'[0, 1, 0, 6, 3, 2, 1, 0, 1, 0, 2, 7, 0, 0, 2, 1, 1, 1]' : 0.177014}
{'[0, 1, 0, 6, 3, 2, 1, 0, 1, 0, 2, 7, 0, 0, 2, 1, 1, 1]' : 0.182617}
{'[0, 1, 0, 6, 3, 2, 1, 0, 1, 0, 2, 7, 0, 0, 2, 1, 1, 1]' : 0.182613}
{'[0, 1, 0, 6, 3, 2, 1, 0, 1, 0, 2, 7, 0, 0, 2, 1, 1, 1]' : 0.18353}
{'[0, 1, 0, 6, 3, 2, 1, 0, 1, 0, 2, 7, 0, 0, 2, 1, 1, 1]' : 0.188393}
{'[0, 1, 0, 6, 3, 2, 1, 0, 1, 0, 2, 7, 0, 0, 2, 1, 1, 1]' : 0.177679}
{'[0, 1, 0, 6, 3, 2, 1, 0, 1, 0, 2, 7, 0, 0, 2, 1, 1, 1]' : 0.179961}
{'[0, 1, 0, 6, 3, 2, 1, 0, 1, 0, 2, 7, 0, 0, 2, 1, 1, 1]' : 0.183038}
{'[0, 1, 0, 6, 3, 2, 1, 0, 1, 0, 2, 7, 0, 0, 2, 1, 1, 1]' : 0.182698}
{'[0, 1, 0, 6, 3, 2, 1, 0, 1, 0, 2, 7, 0, 0, 2, 1, 1, 1]' : 0.184074}
{'[0, 1, 0, 6, 3, 2, 1, 0, 1, 0, 2, 7, 0, 0, 2, 1, 1, 1]' : 0.17763}
{'[0, 1, 0, 6, 3, 2, 1, 0, 1, 0, 2, 7, 0, 0, 2, 1, 1, 1]' : 0.176947}
{'[0, 1, 0, 6, 3, 2, 1, 0, 1, 0, 2, 7, 0, 0, 2, 1, 1, 1]' : 0.182699}
{'[0, 1, 0, 6, 3, 2, 1, 0, 1, 0, 2, 7, 0, 0, 2, 1, 1, 1]' : 0.182686}

out:
 ["{'[0, 1, 0, 6, 3, 2, 1, 0, 1, 0, 2, 7, 0, 0, 2, 1, 1, 1]' : 0.210447}", "{'[0, 1, 0, 6, 3, 2, 1, 0, 1, 0, 2, 7, 0, 0, 2, 1, 1, 1]' : 0.211297}", "{'[0, 1, 0, 6, 3, 2, 1, 0, 1, 0, 2, 7, 0, 0, 2, 1, 1, 1]' : 0.209158}", "{'[0, 1, 0, 6, 3, 2, 1, 0, 1, 0, 2, 7, 0, 0, 2, 1, 1, 1]' : 0.183296}", "{'[0, 1, 0, 6, 3, 2, 1, 0, 1, 0, 2, 7, 0, 0, 2, 1, 1, 1]' : 0.182668}", "{'[0, 1, 0, 6, 3, 2, 1, 0, 1, 0, 2, 7, 0, 0, 2, 1, 1, 1]' : 0.18242}", "{'[0, 1, 0, 6, 3, 2, 1, 0, 1, 0, 2, 7, 0, 0, 2, 1, 1, 1]' : 0.183402}", "{'[0, 1, 0, 6, 3, 2, 1, 0, 1, 0, 2, 7, 0, 0, 2, 1, 1, 1]' : 0.182661}", "{'[0, 1, 0, 6, 3, 2, 1, 0, 1, 0, 2, 7, 0, 0, 2, 1, 1, 1]' : 0.183985}", "{'[0, 1, 0, 6, 3, 2, 1, 0, 1, 0, 2, 7, 0, 0, 2, 1, 1, 1]' : 0.183344}", "{'[0, 1, 0, 6, 3, 2, 1, 0, 1, 0, 2, 7, 0, 0, 2, 1, 1, 1]' : 0.180128}", "{'[0, 1, 0, 6, 3, 2, 1, 0, 1, 0, 2, 7, 0, 0, 2, 1, 1, 1]' : 0.179716}", "{'[0, 1, 0, 6, 3, 2, 1, 0, 1, 0, 2, 7, 0, 0, 2, 1, 1, 1]' : 0.182545}", "{'[0, 1, 0, 6, 3, 2, 1, 0, 1, 0, 2, 7, 0, 0, 2, 1, 1, 1]' : 0.182751}", "{'[0, 1, 0, 6, 3, 2, 1, 0, 1, 0, 2, 7, 0, 0, 2, 1, 1, 1]' : 0.187004}", "{'[0, 1, 0, 6, 3, 2, 1, 0, 1, 0, 2, 7, 0, 0, 2, 1, 1, 1]' : 0.181648}", "{'[0, 1, 0, 6, 3, 2, 1, 0, 1, 0, 2, 7, 0, 0, 2, 1, 1, 1]' : 0.177014}", "{'[0, 1, 0, 6, 3, 2, 1, 0, 1, 0, 2, 7, 0, 0, 2, 1, 1, 1]' : 0.182617}", "{'[0, 1, 0, 6, 3, 2, 1, 0, 1, 0, 2, 7, 0, 0, 2, 1, 1, 1]' : 0.182613}", "{'[0, 1, 0, 6, 3, 2, 1, 0, 1, 0, 2, 7, 0, 0, 2, 1, 1, 1]' : 0.18353}", "{'[0, 1, 0, 6, 3, 2, 1, 0, 1, 0, 2, 7, 0, 0, 2, 1, 1, 1]' : 0.188393}", "{'[0, 1, 0, 6, 3, 2, 1, 0, 1, 0, 2, 7, 0, 0, 2, 1, 1, 1]' : 0.177679}", "{'[0, 1, 0, 6, 3, 2, 1, 0, 1, 0, 2, 7, 0, 0, 2, 1, 1, 1]' : 0.179961}", "{'[0, 1, 0, 6, 3, 2, 1, 0, 1, 0, 2, 7, 0, 0, 2, 1, 1, 1]' : 0.183038}", "{'[0, 1, 0, 6, 3, 2, 1, 0, 1, 0, 2, 7, 0, 0, 2, 1, 1, 1]' : 0.182698}", "{'[0, 1, 0, 6, 3, 2, 1, 0, 1, 0, 2, 7, 0, 0, 2, 1, 1, 1]' : 0.184074}", "{'[0, 1, 0, 6, 3, 2, 1, 0, 1, 0, 2, 7, 0, 0, 2, 1, 1, 1]' : 0.17763}", "{'[0, 1, 0, 6, 3, 2, 1, 0, 1, 0, 2, 7, 0, 0, 2, 1, 1, 1]' : 0.176947}", "{'[0, 1, 0, 6, 3, 2, 1, 0, 1, 0, 2, 7, 0, 0, 2, 1, 1, 1]' : 0.182699}", "{'[0, 1, 0, 6, 3, 2, 1, 0, 1, 0, 2, 7, 0, 0, 2, 1, 1, 1]' : 0.182686}"]
returning from 'run': {'[0, 1, 0, 6, 3, 2, 1, 0, 1, 0, 2, 7, 0, 0, 2, 1, 1, 1]': ([0.210447, 0.211297, 0.209158, 0.183296, 0.182668, 0.18242, 0.183402, 0.182661, 0.183985, 0.183344, 0.180128, 0.179716, 0.182545, 0.182751, 0.187004, 0.181648, 0.177014, 0.182617, 0.182613, 0.18353, 0.188393, 0.177679, 0.179961, 0.183038, 0.182698, 0.184074, 0.17763, 0.176947, 0.182699, 0.182686], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 0, 6, 3, 2, 1, 0, 1, 0, 2, 7, 0, 0, 2, 1, 1, 1]': ([0.210447, 0.211297, 0.209158, 0.183296, 0.182668, 0.18242, 0.183402, 0.182661, 0.183985, 0.183344, 0.180128, 0.179716, 0.182545, 0.182751, 0.187004, 0.181648, 0.177014, 0.182617, 0.182613, 0.18353, 0.188393, 0.177679, 0.179961, 0.183038, 0.182698, 0.184074, 0.17763, 0.176947, 0.182699, 0.182686], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	27
        Max loop nest depth: 	6
        Additions: 		785
        Multiplications: 	296
        Divisions: 		0
        Logical: 		0
        Reads: 			1743
        Writes: 		367
        Comparisons:		27
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest59.exe __orio_perftest59.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest59.exe  
Program Test Output: 
{'[3, 1, 4, 2, 3, 0, 1, 0, 0, 2, 2, 0, 0, 0, 2, 1, 0, 1]' : 0.194726}
{'[3, 1, 4, 2, 3, 0, 1, 0, 0, 2, 2, 0, 0, 0, 2, 1, 0, 1]' : 0.18309}
{'[3, 1, 4, 2, 3, 0, 1, 0, 0, 2, 2, 0, 0, 0, 2, 1, 0, 1]' : 0.163966}
{'[3, 1, 4, 2, 3, 0, 1, 0, 0, 2, 2, 0, 0, 0, 2, 1, 0, 1]' : 0.164063}
{'[3, 1, 4, 2, 3, 0, 1, 0, 0, 2, 2, 0, 0, 0, 2, 1, 0, 1]' : 0.164202}
{'[3, 1, 4, 2, 3, 0, 1, 0, 0, 2, 2, 0, 0, 0, 2, 1, 0, 1]' : 0.164284}
{'[3, 1, 4, 2, 3, 0, 1, 0, 0, 2, 2, 0, 0, 0, 2, 1, 0, 1]' : 0.164252}
{'[3, 1, 4, 2, 3, 0, 1, 0, 0, 2, 2, 0, 0, 0, 2, 1, 0, 1]' : 0.164595}
{'[3, 1, 4, 2, 3, 0, 1, 0, 0, 2, 2, 0, 0, 0, 2, 1, 0, 1]' : 0.164308}
{'[3, 1, 4, 2, 3, 0, 1, 0, 0, 2, 2, 0, 0, 0, 2, 1, 0, 1]' : 0.164692}
{'[3, 1, 4, 2, 3, 0, 1, 0, 0, 2, 2, 0, 0, 0, 2, 1, 0, 1]' : 0.164337}
{'[3, 1, 4, 2, 3, 0, 1, 0, 0, 2, 2, 0, 0, 0, 2, 1, 0, 1]' : 0.164626}
{'[3, 1, 4, 2, 3, 0, 1, 0, 0, 2, 2, 0, 0, 0, 2, 1, 0, 1]' : 0.164137}
{'[3, 1, 4, 2, 3, 0, 1, 0, 0, 2, 2, 0, 0, 0, 2, 1, 0, 1]' : 0.164235}
{'[3, 1, 4, 2, 3, 0, 1, 0, 0, 2, 2, 0, 0, 0, 2, 1, 0, 1]' : 0.164218}
{'[3, 1, 4, 2, 3, 0, 1, 0, 0, 2, 2, 0, 0, 0, 2, 1, 0, 1]' : 0.164282}
{'[3, 1, 4, 2, 3, 0, 1, 0, 0, 2, 2, 0, 0, 0, 2, 1, 0, 1]' : 0.164785}
{'[3, 1, 4, 2, 3, 0, 1, 0, 0, 2, 2, 0, 0, 0, 2, 1, 0, 1]' : 0.164375}
{'[3, 1, 4, 2, 3, 0, 1, 0, 0, 2, 2, 0, 0, 0, 2, 1, 0, 1]' : 0.164083}
{'[3, 1, 4, 2, 3, 0, 1, 0, 0, 2, 2, 0, 0, 0, 2, 1, 0, 1]' : 0.164004}
{'[3, 1, 4, 2, 3, 0, 1, 0, 0, 2, 2, 0, 0, 0, 2, 1, 0, 1]' : 0.164218}
{'[3, 1, 4, 2, 3, 0, 1, 0, 0, 2, 2, 0, 0, 0, 2, 1, 0, 1]' : 0.164274}
{'[3, 1, 4, 2, 3, 0, 1, 0, 0, 2, 2, 0, 0, 0, 2, 1, 0, 1]' : 0.164312}
{'[3, 1, 4, 2, 3, 0, 1, 0, 0, 2, 2, 0, 0, 0, 2, 1, 0, 1]' : 0.164288}
{'[3, 1, 4, 2, 3, 0, 1, 0, 0, 2, 2, 0, 0, 0, 2, 1, 0, 1]' : 0.164254}
{'[3, 1, 4, 2, 3, 0, 1, 0, 0, 2, 2, 0, 0, 0, 2, 1, 0, 1]' : 0.164279}
{'[3, 1, 4, 2, 3, 0, 1, 0, 0, 2, 2, 0, 0, 0, 2, 1, 0, 1]' : 0.164307}
{'[3, 1, 4, 2, 3, 0, 1, 0, 0, 2, 2, 0, 0, 0, 2, 1, 0, 1]' : 0.164323}
{'[3, 1, 4, 2, 3, 0, 1, 0, 0, 2, 2, 0, 0, 0, 2, 1, 0, 1]' : 0.164296}
{'[3, 1, 4, 2, 3, 0, 1, 0, 0, 2, 2, 0, 0, 0, 2, 1, 0, 1]' : 0.16432}

out:
 ["{'[3, 1, 4, 2, 3, 0, 1, 0, 0, 2, 2, 0, 0, 0, 2, 1, 0, 1]' : 0.194726}", "{'[3, 1, 4, 2, 3, 0, 1, 0, 0, 2, 2, 0, 0, 0, 2, 1, 0, 1]' : 0.18309}", "{'[3, 1, 4, 2, 3, 0, 1, 0, 0, 2, 2, 0, 0, 0, 2, 1, 0, 1]' : 0.163966}", "{'[3, 1, 4, 2, 3, 0, 1, 0, 0, 2, 2, 0, 0, 0, 2, 1, 0, 1]' : 0.164063}", "{'[3, 1, 4, 2, 3, 0, 1, 0, 0, 2, 2, 0, 0, 0, 2, 1, 0, 1]' : 0.164202}", "{'[3, 1, 4, 2, 3, 0, 1, 0, 0, 2, 2, 0, 0, 0, 2, 1, 0, 1]' : 0.164284}", "{'[3, 1, 4, 2, 3, 0, 1, 0, 0, 2, 2, 0, 0, 0, 2, 1, 0, 1]' : 0.164252}", "{'[3, 1, 4, 2, 3, 0, 1, 0, 0, 2, 2, 0, 0, 0, 2, 1, 0, 1]' : 0.164595}", "{'[3, 1, 4, 2, 3, 0, 1, 0, 0, 2, 2, 0, 0, 0, 2, 1, 0, 1]' : 0.164308}", "{'[3, 1, 4, 2, 3, 0, 1, 0, 0, 2, 2, 0, 0, 0, 2, 1, 0, 1]' : 0.164692}", "{'[3, 1, 4, 2, 3, 0, 1, 0, 0, 2, 2, 0, 0, 0, 2, 1, 0, 1]' : 0.164337}", "{'[3, 1, 4, 2, 3, 0, 1, 0, 0, 2, 2, 0, 0, 0, 2, 1, 0, 1]' : 0.164626}", "{'[3, 1, 4, 2, 3, 0, 1, 0, 0, 2, 2, 0, 0, 0, 2, 1, 0, 1]' : 0.164137}", "{'[3, 1, 4, 2, 3, 0, 1, 0, 0, 2, 2, 0, 0, 0, 2, 1, 0, 1]' : 0.164235}", "{'[3, 1, 4, 2, 3, 0, 1, 0, 0, 2, 2, 0, 0, 0, 2, 1, 0, 1]' : 0.164218}", "{'[3, 1, 4, 2, 3, 0, 1, 0, 0, 2, 2, 0, 0, 0, 2, 1, 0, 1]' : 0.164282}", "{'[3, 1, 4, 2, 3, 0, 1, 0, 0, 2, 2, 0, 0, 0, 2, 1, 0, 1]' : 0.164785}", "{'[3, 1, 4, 2, 3, 0, 1, 0, 0, 2, 2, 0, 0, 0, 2, 1, 0, 1]' : 0.164375}", "{'[3, 1, 4, 2, 3, 0, 1, 0, 0, 2, 2, 0, 0, 0, 2, 1, 0, 1]' : 0.164083}", "{'[3, 1, 4, 2, 3, 0, 1, 0, 0, 2, 2, 0, 0, 0, 2, 1, 0, 1]' : 0.164004}", "{'[3, 1, 4, 2, 3, 0, 1, 0, 0, 2, 2, 0, 0, 0, 2, 1, 0, 1]' : 0.164218}", "{'[3, 1, 4, 2, 3, 0, 1, 0, 0, 2, 2, 0, 0, 0, 2, 1, 0, 1]' : 0.164274}", "{'[3, 1, 4, 2, 3, 0, 1, 0, 0, 2, 2, 0, 0, 0, 2, 1, 0, 1]' : 0.164312}", "{'[3, 1, 4, 2, 3, 0, 1, 0, 0, 2, 2, 0, 0, 0, 2, 1, 0, 1]' : 0.164288}", "{'[3, 1, 4, 2, 3, 0, 1, 0, 0, 2, 2, 0, 0, 0, 2, 1, 0, 1]' : 0.164254}", "{'[3, 1, 4, 2, 3, 0, 1, 0, 0, 2, 2, 0, 0, 0, 2, 1, 0, 1]' : 0.164279}", "{'[3, 1, 4, 2, 3, 0, 1, 0, 0, 2, 2, 0, 0, 0, 2, 1, 0, 1]' : 0.164307}", "{'[3, 1, 4, 2, 3, 0, 1, 0, 0, 2, 2, 0, 0, 0, 2, 1, 0, 1]' : 0.164323}", "{'[3, 1, 4, 2, 3, 0, 1, 0, 0, 2, 2, 0, 0, 0, 2, 1, 0, 1]' : 0.164296}", "{'[3, 1, 4, 2, 3, 0, 1, 0, 0, 2, 2, 0, 0, 0, 2, 1, 0, 1]' : 0.16432}"]
returning from 'run': {'[3, 1, 4, 2, 3, 0, 1, 0, 0, 2, 2, 0, 0, 0, 2, 1, 0, 1]': ([0.194726, 0.18309, 0.163966, 0.164063, 0.164202, 0.164284, 0.164252, 0.164595, 0.164308, 0.164692, 0.164337, 0.164626, 0.164137, 0.164235, 0.164218, 0.164282, 0.164785, 0.164375, 0.164083, 0.164004, 0.164218, 0.164274, 0.164312, 0.164288, 0.164254, 0.164279, 0.164307, 0.164323, 0.164296, 0.16432], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 1, 4, 2, 3, 0, 1, 0, 0, 2, 2, 0, 0, 0, 2, 1, 0, 1]': ([0.194726, 0.18309, 0.163966, 0.164063, 0.164202, 0.164284, 0.164252, 0.164595, 0.164308, 0.164692, 0.164337, 0.164626, 0.164137, 0.164235, 0.164218, 0.164282, 0.164785, 0.164375, 0.164083, 0.164004, 0.164218, 0.164274, 0.164312, 0.164288, 0.164254, 0.164279, 0.164307, 0.164323, 0.164296, 0.16432], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	5
        Additions: 		339
        Multiplications: 	118
        Divisions: 		0
        Logical: 		0
        Reads: 			771
        Writes: 		166
        Comparisons:		10
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest60.exe __orio_perftest60.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest60.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest60.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest60.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest60.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = iii
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	5
        Additions: 		1555
        Multiplications: 	702
        Divisions: 		0
        Logical: 		0
        Reads: 			3186
        Writes: 		587
        Comparisons:		25
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest61.exe __orio_perftest61.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest61.exe  
Program Test Output: 
{'[5, 1, 5, 3, 3, 6, 1, 0, 4, 0, 2, 25, 1, 0, 1, 1, 0, 1]' : 0.0885491}
{'[5, 1, 5, 3, 3, 6, 1, 0, 4, 0, 2, 25, 1, 0, 1, 1, 0, 1]' : 0.090174}
{'[5, 1, 5, 3, 3, 6, 1, 0, 4, 0, 2, 25, 1, 0, 1, 1, 0, 1]' : 0.090688}
{'[5, 1, 5, 3, 3, 6, 1, 0, 4, 0, 2, 25, 1, 0, 1, 1, 0, 1]' : 0.090723}
{'[5, 1, 5, 3, 3, 6, 1, 0, 4, 0, 2, 25, 1, 0, 1, 1, 0, 1]' : 0.0889399}
{'[5, 1, 5, 3, 3, 6, 1, 0, 4, 0, 2, 25, 1, 0, 1, 1, 0, 1]' : 0.088685}
{'[5, 1, 5, 3, 3, 6, 1, 0, 4, 0, 2, 25, 1, 0, 1, 1, 0, 1]' : 0.0887301}
{'[5, 1, 5, 3, 3, 6, 1, 0, 4, 0, 2, 25, 1, 0, 1, 1, 0, 1]' : 0.090693}
{'[5, 1, 5, 3, 3, 6, 1, 0, 4, 0, 2, 25, 1, 0, 1, 1, 0, 1]' : 0.0906758}
{'[5, 1, 5, 3, 3, 6, 1, 0, 4, 0, 2, 25, 1, 0, 1, 1, 0, 1]' : 0.0889869}
{'[5, 1, 5, 3, 3, 6, 1, 0, 4, 0, 2, 25, 1, 0, 1, 1, 0, 1]' : 0.0884261}
{'[5, 1, 5, 3, 3, 6, 1, 0, 4, 0, 2, 25, 1, 0, 1, 1, 0, 1]' : 0.088511}
{'[5, 1, 5, 3, 3, 6, 1, 0, 4, 0, 2, 25, 1, 0, 1, 1, 0, 1]' : 0.089642}
{'[5, 1, 5, 3, 3, 6, 1, 0, 4, 0, 2, 25, 1, 0, 1, 1, 0, 1]' : 0.0906911}
{'[5, 1, 5, 3, 3, 6, 1, 0, 4, 0, 2, 25, 1, 0, 1, 1, 0, 1]' : 0.0907168}
{'[5, 1, 5, 3, 3, 6, 1, 0, 4, 0, 2, 25, 1, 0, 1, 1, 0, 1]' : 0.0903161}
{'[5, 1, 5, 3, 3, 6, 1, 0, 4, 0, 2, 25, 1, 0, 1, 1, 0, 1]' : 0.0887711}
{'[5, 1, 5, 3, 3, 6, 1, 0, 4, 0, 2, 25, 1, 0, 1, 1, 0, 1]' : 0.0887392}
{'[5, 1, 5, 3, 3, 6, 1, 0, 4, 0, 2, 25, 1, 0, 1, 1, 0, 1]' : 0.0908239}
{'[5, 1, 5, 3, 3, 6, 1, 0, 4, 0, 2, 25, 1, 0, 1, 1, 0, 1]' : 0.0907121}
{'[5, 1, 5, 3, 3, 6, 1, 0, 4, 0, 2, 25, 1, 0, 1, 1, 0, 1]' : 0.08793}
{'[5, 1, 5, 3, 3, 6, 1, 0, 4, 0, 2, 25, 1, 0, 1, 1, 0, 1]' : 0.0859361}
{'[5, 1, 5, 3, 3, 6, 1, 0, 4, 0, 2, 25, 1, 0, 1, 1, 0, 1]' : 0.0858779}
{'[5, 1, 5, 3, 3, 6, 1, 0, 4, 0, 2, 25, 1, 0, 1, 1, 0, 1]' : 0.0867498}
{'[5, 1, 5, 3, 3, 6, 1, 0, 4, 0, 2, 25, 1, 0, 1, 1, 0, 1]' : 0.088311}
{'[5, 1, 5, 3, 3, 6, 1, 0, 4, 0, 2, 25, 1, 0, 1, 1, 0, 1]' : 0.0884249}
{'[5, 1, 5, 3, 3, 6, 1, 0, 4, 0, 2, 25, 1, 0, 1, 1, 0, 1]' : 0.088372}
{'[5, 1, 5, 3, 3, 6, 1, 0, 4, 0, 2, 25, 1, 0, 1, 1, 0, 1]' : 0.087038}
{'[5, 1, 5, 3, 3, 6, 1, 0, 4, 0, 2, 25, 1, 0, 1, 1, 0, 1]' : 0.08775}
{'[5, 1, 5, 3, 3, 6, 1, 0, 4, 0, 2, 25, 1, 0, 1, 1, 0, 1]' : 0.0900819}

out:
 ["{'[5, 1, 5, 3, 3, 6, 1, 0, 4, 0, 2, 25, 1, 0, 1, 1, 0, 1]' : 0.0885491}", "{'[5, 1, 5, 3, 3, 6, 1, 0, 4, 0, 2, 25, 1, 0, 1, 1, 0, 1]' : 0.090174}", "{'[5, 1, 5, 3, 3, 6, 1, 0, 4, 0, 2, 25, 1, 0, 1, 1, 0, 1]' : 0.090688}", "{'[5, 1, 5, 3, 3, 6, 1, 0, 4, 0, 2, 25, 1, 0, 1, 1, 0, 1]' : 0.090723}", "{'[5, 1, 5, 3, 3, 6, 1, 0, 4, 0, 2, 25, 1, 0, 1, 1, 0, 1]' : 0.0889399}", "{'[5, 1, 5, 3, 3, 6, 1, 0, 4, 0, 2, 25, 1, 0, 1, 1, 0, 1]' : 0.088685}", "{'[5, 1, 5, 3, 3, 6, 1, 0, 4, 0, 2, 25, 1, 0, 1, 1, 0, 1]' : 0.0887301}", "{'[5, 1, 5, 3, 3, 6, 1, 0, 4, 0, 2, 25, 1, 0, 1, 1, 0, 1]' : 0.090693}", "{'[5, 1, 5, 3, 3, 6, 1, 0, 4, 0, 2, 25, 1, 0, 1, 1, 0, 1]' : 0.0906758}", "{'[5, 1, 5, 3, 3, 6, 1, 0, 4, 0, 2, 25, 1, 0, 1, 1, 0, 1]' : 0.0889869}", "{'[5, 1, 5, 3, 3, 6, 1, 0, 4, 0, 2, 25, 1, 0, 1, 1, 0, 1]' : 0.0884261}", "{'[5, 1, 5, 3, 3, 6, 1, 0, 4, 0, 2, 25, 1, 0, 1, 1, 0, 1]' : 0.088511}", "{'[5, 1, 5, 3, 3, 6, 1, 0, 4, 0, 2, 25, 1, 0, 1, 1, 0, 1]' : 0.089642}", "{'[5, 1, 5, 3, 3, 6, 1, 0, 4, 0, 2, 25, 1, 0, 1, 1, 0, 1]' : 0.0906911}", "{'[5, 1, 5, 3, 3, 6, 1, 0, 4, 0, 2, 25, 1, 0, 1, 1, 0, 1]' : 0.0907168}", "{'[5, 1, 5, 3, 3, 6, 1, 0, 4, 0, 2, 25, 1, 0, 1, 1, 0, 1]' : 0.0903161}", "{'[5, 1, 5, 3, 3, 6, 1, 0, 4, 0, 2, 25, 1, 0, 1, 1, 0, 1]' : 0.0887711}", "{'[5, 1, 5, 3, 3, 6, 1, 0, 4, 0, 2, 25, 1, 0, 1, 1, 0, 1]' : 0.0887392}", "{'[5, 1, 5, 3, 3, 6, 1, 0, 4, 0, 2, 25, 1, 0, 1, 1, 0, 1]' : 0.0908239}", "{'[5, 1, 5, 3, 3, 6, 1, 0, 4, 0, 2, 25, 1, 0, 1, 1, 0, 1]' : 0.0907121}", "{'[5, 1, 5, 3, 3, 6, 1, 0, 4, 0, 2, 25, 1, 0, 1, 1, 0, 1]' : 0.08793}", "{'[5, 1, 5, 3, 3, 6, 1, 0, 4, 0, 2, 25, 1, 0, 1, 1, 0, 1]' : 0.0859361}", "{'[5, 1, 5, 3, 3, 6, 1, 0, 4, 0, 2, 25, 1, 0, 1, 1, 0, 1]' : 0.0858779}", "{'[5, 1, 5, 3, 3, 6, 1, 0, 4, 0, 2, 25, 1, 0, 1, 1, 0, 1]' : 0.0867498}", "{'[5, 1, 5, 3, 3, 6, 1, 0, 4, 0, 2, 25, 1, 0, 1, 1, 0, 1]' : 0.088311}", "{'[5, 1, 5, 3, 3, 6, 1, 0, 4, 0, 2, 25, 1, 0, 1, 1, 0, 1]' : 0.0884249}", "{'[5, 1, 5, 3, 3, 6, 1, 0, 4, 0, 2, 25, 1, 0, 1, 1, 0, 1]' : 0.088372}", "{'[5, 1, 5, 3, 3, 6, 1, 0, 4, 0, 2, 25, 1, 0, 1, 1, 0, 1]' : 0.087038}", "{'[5, 1, 5, 3, 3, 6, 1, 0, 4, 0, 2, 25, 1, 0, 1, 1, 0, 1]' : 0.08775}", "{'[5, 1, 5, 3, 3, 6, 1, 0, 4, 0, 2, 25, 1, 0, 1, 1, 0, 1]' : 0.0900819}"]
returning from 'run': {'[5, 1, 5, 3, 3, 6, 1, 0, 4, 0, 2, 25, 1, 0, 1, 1, 0, 1]': ([0.0885491, 0.090174, 0.090688, 0.090723, 0.0889399, 0.088685, 0.0887301, 0.090693, 0.0906758, 0.0889869, 0.0884261, 0.088511, 0.089642, 0.0906911, 0.0907168, 0.0903161, 0.0887711, 0.0887392, 0.0908239, 0.0907121, 0.08793, 0.0859361, 0.0858779, 0.0867498, 0.088311, 0.0884249, 0.088372, 0.087038, 0.08775, 0.0900819], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 1, 5, 3, 3, 6, 1, 0, 4, 0, 2, 25, 1, 0, 1, 1, 0, 1]': ([0.0885491, 0.090174, 0.090688, 0.090723, 0.0889399, 0.088685, 0.0887301, 0.090693, 0.0906758, 0.0889869, 0.0884261, 0.088511, 0.089642, 0.0906911, 0.0907168, 0.0903161, 0.0887711, 0.0887392, 0.0908239, 0.0907121, 0.08793, 0.0859361, 0.0858779, 0.0867498, 0.088311, 0.0884249, 0.088372, 0.087038, 0.08775, 0.0900819], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	6
        Additions: 		55
        Multiplications: 	10
        Divisions: 		0
        Logical: 		0
        Reads: 			129
        Writes: 		32
        Comparisons:		10
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest62.exe __orio_perftest62.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest62.exe  
Program Test Output: 
{'[1, 1, 0, 3, 3, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.216038}
{'[1, 1, 0, 3, 3, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.21614}
{'[1, 1, 0, 3, 3, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.216053}
{'[1, 1, 0, 3, 3, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.195589}
{'[1, 1, 0, 3, 3, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.190576}
{'[1, 1, 0, 3, 3, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.190639}
{'[1, 1, 0, 3, 3, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.190599}
{'[1, 1, 0, 3, 3, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.190608}
{'[1, 1, 0, 3, 3, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.186942}
{'[1, 1, 0, 3, 3, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.185426}
{'[1, 1, 0, 3, 3, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.186647}
{'[1, 1, 0, 3, 3, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.19067}
{'[1, 1, 0, 3, 3, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.190836}
{'[1, 1, 0, 3, 3, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.190585}
{'[1, 1, 0, 3, 3, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.19064}
{'[1, 1, 0, 3, 3, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.186317}
{'[1, 1, 0, 3, 3, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.190452}
{'[1, 1, 0, 3, 3, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.190637}
{'[1, 1, 0, 3, 3, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.19068}
{'[1, 1, 0, 3, 3, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.190712}
{'[1, 1, 0, 3, 3, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.190588}
{'[1, 1, 0, 3, 3, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.190597}
{'[1, 1, 0, 3, 3, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.190904}
{'[1, 1, 0, 3, 3, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.190667}
{'[1, 1, 0, 3, 3, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.190675}
{'[1, 1, 0, 3, 3, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.190673}
{'[1, 1, 0, 3, 3, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.190591}
{'[1, 1, 0, 3, 3, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.190666}
{'[1, 1, 0, 3, 3, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.189743}
{'[1, 1, 0, 3, 3, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.185688}

out:
 ["{'[1, 1, 0, 3, 3, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.216038}", "{'[1, 1, 0, 3, 3, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.21614}", "{'[1, 1, 0, 3, 3, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.216053}", "{'[1, 1, 0, 3, 3, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.195589}", "{'[1, 1, 0, 3, 3, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.190576}", "{'[1, 1, 0, 3, 3, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.190639}", "{'[1, 1, 0, 3, 3, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.190599}", "{'[1, 1, 0, 3, 3, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.190608}", "{'[1, 1, 0, 3, 3, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.186942}", "{'[1, 1, 0, 3, 3, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.185426}", "{'[1, 1, 0, 3, 3, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.186647}", "{'[1, 1, 0, 3, 3, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.19067}", "{'[1, 1, 0, 3, 3, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.190836}", "{'[1, 1, 0, 3, 3, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.190585}", "{'[1, 1, 0, 3, 3, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.19064}", "{'[1, 1, 0, 3, 3, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.186317}", "{'[1, 1, 0, 3, 3, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.190452}", "{'[1, 1, 0, 3, 3, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.190637}", "{'[1, 1, 0, 3, 3, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.19068}", "{'[1, 1, 0, 3, 3, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.190712}", "{'[1, 1, 0, 3, 3, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.190588}", "{'[1, 1, 0, 3, 3, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.190597}", "{'[1, 1, 0, 3, 3, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.190904}", "{'[1, 1, 0, 3, 3, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.190667}", "{'[1, 1, 0, 3, 3, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.190675}", "{'[1, 1, 0, 3, 3, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.190673}", "{'[1, 1, 0, 3, 3, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.190591}", "{'[1, 1, 0, 3, 3, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.190666}", "{'[1, 1, 0, 3, 3, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.189743}", "{'[1, 1, 0, 3, 3, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.185688}"]
returning from 'run': {'[1, 1, 0, 3, 3, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0]': ([0.216038, 0.21614, 0.216053, 0.195589, 0.190576, 0.190639, 0.190599, 0.190608, 0.186942, 0.185426, 0.186647, 0.19067, 0.190836, 0.190585, 0.19064, 0.186317, 0.190452, 0.190637, 0.19068, 0.190712, 0.190588, 0.190597, 0.190904, 0.190667, 0.190675, 0.190673, 0.190591, 0.190666, 0.189743, 0.185688], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 1, 0, 3, 3, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0]': ([0.216038, 0.21614, 0.216053, 0.195589, 0.190576, 0.190639, 0.190599, 0.190608, 0.186942, 0.185426, 0.186647, 0.19067, 0.190836, 0.190585, 0.19064, 0.186317, 0.190452, 0.190637, 0.19068, 0.190712, 0.190588, 0.190597, 0.190904, 0.190667, 0.190675, 0.190673, 0.190591, 0.190666, 0.189743, 0.185688], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		155
        Multiplications: 	46
        Divisions: 		0
        Logical: 		0
        Reads: 			377
        Writes: 		90
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest63.exe __orio_perftest63.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest63.exe  
Program Test Output: 
{'[0, 1, 3, 0, 3, 5, 1, 0, 4, 0, 2, 5, 0, 1, 1, 1, 1, 0]' : 0.196523}
{'[0, 1, 3, 0, 3, 5, 1, 0, 4, 0, 2, 5, 0, 1, 1, 1, 1, 0]' : 0.19688}
{'[0, 1, 3, 0, 3, 5, 1, 0, 4, 0, 2, 5, 0, 1, 1, 1, 1, 0]' : 0.189622}
{'[0, 1, 3, 0, 3, 5, 1, 0, 4, 0, 2, 5, 0, 1, 1, 1, 1, 0]' : 0.173268}
{'[0, 1, 3, 0, 3, 5, 1, 0, 4, 0, 2, 5, 0, 1, 1, 1, 1, 0]' : 0.173274}
{'[0, 1, 3, 0, 3, 5, 1, 0, 4, 0, 2, 5, 0, 1, 1, 1, 1, 0]' : 0.173458}
{'[0, 1, 3, 0, 3, 5, 1, 0, 4, 0, 2, 5, 0, 1, 1, 1, 1, 0]' : 0.173317}
{'[0, 1, 3, 0, 3, 5, 1, 0, 4, 0, 2, 5, 0, 1, 1, 1, 1, 0]' : 0.173326}
{'[0, 1, 3, 0, 3, 5, 1, 0, 4, 0, 2, 5, 0, 1, 1, 1, 1, 0]' : 0.17336}
{'[0, 1, 3, 0, 3, 5, 1, 0, 4, 0, 2, 5, 0, 1, 1, 1, 1, 0]' : 0.173366}
{'[0, 1, 3, 0, 3, 5, 1, 0, 4, 0, 2, 5, 0, 1, 1, 1, 1, 0]' : 0.173388}
{'[0, 1, 3, 0, 3, 5, 1, 0, 4, 0, 2, 5, 0, 1, 1, 1, 1, 0]' : 0.173375}
{'[0, 1, 3, 0, 3, 5, 1, 0, 4, 0, 2, 5, 0, 1, 1, 1, 1, 0]' : 0.173369}
{'[0, 1, 3, 0, 3, 5, 1, 0, 4, 0, 2, 5, 0, 1, 1, 1, 1, 0]' : 0.173705}
{'[0, 1, 3, 0, 3, 5, 1, 0, 4, 0, 2, 5, 0, 1, 1, 1, 1, 0]' : 0.173327}
{'[0, 1, 3, 0, 3, 5, 1, 0, 4, 0, 2, 5, 0, 1, 1, 1, 1, 0]' : 0.17337}
{'[0, 1, 3, 0, 3, 5, 1, 0, 4, 0, 2, 5, 0, 1, 1, 1, 1, 0]' : 0.173392}
{'[0, 1, 3, 0, 3, 5, 1, 0, 4, 0, 2, 5, 0, 1, 1, 1, 1, 0]' : 0.173407}
{'[0, 1, 3, 0, 3, 5, 1, 0, 4, 0, 2, 5, 0, 1, 1, 1, 1, 0]' : 0.173392}
{'[0, 1, 3, 0, 3, 5, 1, 0, 4, 0, 2, 5, 0, 1, 1, 1, 1, 0]' : 0.173402}
{'[0, 1, 3, 0, 3, 5, 1, 0, 4, 0, 2, 5, 0, 1, 1, 1, 1, 0]' : 0.17334}
{'[0, 1, 3, 0, 3, 5, 1, 0, 4, 0, 2, 5, 0, 1, 1, 1, 1, 0]' : 0.173374}
{'[0, 1, 3, 0, 3, 5, 1, 0, 4, 0, 2, 5, 0, 1, 1, 1, 1, 0]' : 0.173423}
{'[0, 1, 3, 0, 3, 5, 1, 0, 4, 0, 2, 5, 0, 1, 1, 1, 1, 0]' : 0.173374}
{'[0, 1, 3, 0, 3, 5, 1, 0, 4, 0, 2, 5, 0, 1, 1, 1, 1, 0]' : 0.173374}
{'[0, 1, 3, 0, 3, 5, 1, 0, 4, 0, 2, 5, 0, 1, 1, 1, 1, 0]' : 0.173592}
{'[0, 1, 3, 0, 3, 5, 1, 0, 4, 0, 2, 5, 0, 1, 1, 1, 1, 0]' : 0.17335}
{'[0, 1, 3, 0, 3, 5, 1, 0, 4, 0, 2, 5, 0, 1, 1, 1, 1, 0]' : 0.173393}
{'[0, 1, 3, 0, 3, 5, 1, 0, 4, 0, 2, 5, 0, 1, 1, 1, 1, 0]' : 0.173378}
{'[0, 1, 3, 0, 3, 5, 1, 0, 4, 0, 2, 5, 0, 1, 1, 1, 1, 0]' : 0.173387}

out:
 ["{'[0, 1, 3, 0, 3, 5, 1, 0, 4, 0, 2, 5, 0, 1, 1, 1, 1, 0]' : 0.196523}", "{'[0, 1, 3, 0, 3, 5, 1, 0, 4, 0, 2, 5, 0, 1, 1, 1, 1, 0]' : 0.19688}", "{'[0, 1, 3, 0, 3, 5, 1, 0, 4, 0, 2, 5, 0, 1, 1, 1, 1, 0]' : 0.189622}", "{'[0, 1, 3, 0, 3, 5, 1, 0, 4, 0, 2, 5, 0, 1, 1, 1, 1, 0]' : 0.173268}", "{'[0, 1, 3, 0, 3, 5, 1, 0, 4, 0, 2, 5, 0, 1, 1, 1, 1, 0]' : 0.173274}", "{'[0, 1, 3, 0, 3, 5, 1, 0, 4, 0, 2, 5, 0, 1, 1, 1, 1, 0]' : 0.173458}", "{'[0, 1, 3, 0, 3, 5, 1, 0, 4, 0, 2, 5, 0, 1, 1, 1, 1, 0]' : 0.173317}", "{'[0, 1, 3, 0, 3, 5, 1, 0, 4, 0, 2, 5, 0, 1, 1, 1, 1, 0]' : 0.173326}", "{'[0, 1, 3, 0, 3, 5, 1, 0, 4, 0, 2, 5, 0, 1, 1, 1, 1, 0]' : 0.17336}", "{'[0, 1, 3, 0, 3, 5, 1, 0, 4, 0, 2, 5, 0, 1, 1, 1, 1, 0]' : 0.173366}", "{'[0, 1, 3, 0, 3, 5, 1, 0, 4, 0, 2, 5, 0, 1, 1, 1, 1, 0]' : 0.173388}", "{'[0, 1, 3, 0, 3, 5, 1, 0, 4, 0, 2, 5, 0, 1, 1, 1, 1, 0]' : 0.173375}", "{'[0, 1, 3, 0, 3, 5, 1, 0, 4, 0, 2, 5, 0, 1, 1, 1, 1, 0]' : 0.173369}", "{'[0, 1, 3, 0, 3, 5, 1, 0, 4, 0, 2, 5, 0, 1, 1, 1, 1, 0]' : 0.173705}", "{'[0, 1, 3, 0, 3, 5, 1, 0, 4, 0, 2, 5, 0, 1, 1, 1, 1, 0]' : 0.173327}", "{'[0, 1, 3, 0, 3, 5, 1, 0, 4, 0, 2, 5, 0, 1, 1, 1, 1, 0]' : 0.17337}", "{'[0, 1, 3, 0, 3, 5, 1, 0, 4, 0, 2, 5, 0, 1, 1, 1, 1, 0]' : 0.173392}", "{'[0, 1, 3, 0, 3, 5, 1, 0, 4, 0, 2, 5, 0, 1, 1, 1, 1, 0]' : 0.173407}", "{'[0, 1, 3, 0, 3, 5, 1, 0, 4, 0, 2, 5, 0, 1, 1, 1, 1, 0]' : 0.173392}", "{'[0, 1, 3, 0, 3, 5, 1, 0, 4, 0, 2, 5, 0, 1, 1, 1, 1, 0]' : 0.173402}", "{'[0, 1, 3, 0, 3, 5, 1, 0, 4, 0, 2, 5, 0, 1, 1, 1, 1, 0]' : 0.17334}", "{'[0, 1, 3, 0, 3, 5, 1, 0, 4, 0, 2, 5, 0, 1, 1, 1, 1, 0]' : 0.173374}", "{'[0, 1, 3, 0, 3, 5, 1, 0, 4, 0, 2, 5, 0, 1, 1, 1, 1, 0]' : 0.173423}", "{'[0, 1, 3, 0, 3, 5, 1, 0, 4, 0, 2, 5, 0, 1, 1, 1, 1, 0]' : 0.173374}", "{'[0, 1, 3, 0, 3, 5, 1, 0, 4, 0, 2, 5, 0, 1, 1, 1, 1, 0]' : 0.173374}", "{'[0, 1, 3, 0, 3, 5, 1, 0, 4, 0, 2, 5, 0, 1, 1, 1, 1, 0]' : 0.173592}", "{'[0, 1, 3, 0, 3, 5, 1, 0, 4, 0, 2, 5, 0, 1, 1, 1, 1, 0]' : 0.17335}", "{'[0, 1, 3, 0, 3, 5, 1, 0, 4, 0, 2, 5, 0, 1, 1, 1, 1, 0]' : 0.173393}", "{'[0, 1, 3, 0, 3, 5, 1, 0, 4, 0, 2, 5, 0, 1, 1, 1, 1, 0]' : 0.173378}", "{'[0, 1, 3, 0, 3, 5, 1, 0, 4, 0, 2, 5, 0, 1, 1, 1, 1, 0]' : 0.173387}"]
returning from 'run': {'[0, 1, 3, 0, 3, 5, 1, 0, 4, 0, 2, 5, 0, 1, 1, 1, 1, 0]': ([0.196523, 0.19688, 0.189622, 0.173268, 0.173274, 0.173458, 0.173317, 0.173326, 0.17336, 0.173366, 0.173388, 0.173375, 0.173369, 0.173705, 0.173327, 0.17337, 0.173392, 0.173407, 0.173392, 0.173402, 0.17334, 0.173374, 0.173423, 0.173374, 0.173374, 0.173592, 0.17335, 0.173393, 0.173378, 0.173387], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 3, 0, 3, 5, 1, 0, 4, 0, 2, 5, 0, 1, 1, 1, 1, 0]': ([0.196523, 0.19688, 0.189622, 0.173268, 0.173274, 0.173458, 0.173317, 0.173326, 0.17336, 0.173366, 0.173388, 0.173375, 0.173369, 0.173705, 0.173327, 0.17337, 0.173392, 0.173407, 0.173392, 0.173402, 0.17334, 0.173374, 0.173423, 0.173374, 0.173374, 0.173592, 0.17335, 0.173393, 0.173378, 0.173387], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	5
        Additions: 		1550
        Multiplications: 	702
        Divisions: 		0
        Logical: 		0
        Reads: 			3120
        Writes: 		564
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest64.exe __orio_perftest64.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest64.exe  
Program Test Output: 
{'[6, 1, 1, 0, 3, 2, 1, 0, 7, 0, 2, 29, 1, 1, 0, 1, 0, 1]' : 0.118424}
{'[6, 1, 1, 0, 3, 2, 1, 0, 7, 0, 2, 29, 1, 1, 0, 1, 0, 1]' : 0.118197}
{'[6, 1, 1, 0, 3, 2, 1, 0, 7, 0, 2, 29, 1, 1, 0, 1, 0, 1]' : 0.118147}
{'[6, 1, 1, 0, 3, 2, 1, 0, 7, 0, 2, 29, 1, 1, 0, 1, 0, 1]' : 0.114302}
{'[6, 1, 1, 0, 3, 2, 1, 0, 7, 0, 2, 29, 1, 1, 0, 1, 0, 1]' : 0.102795}
{'[6, 1, 1, 0, 3, 2, 1, 0, 7, 0, 2, 29, 1, 1, 0, 1, 0, 1]' : 0.102872}
{'[6, 1, 1, 0, 3, 2, 1, 0, 7, 0, 2, 29, 1, 1, 0, 1, 0, 1]' : 0.102972}
{'[6, 1, 1, 0, 3, 2, 1, 0, 7, 0, 2, 29, 1, 1, 0, 1, 0, 1]' : 0.103167}
{'[6, 1, 1, 0, 3, 2, 1, 0, 7, 0, 2, 29, 1, 1, 0, 1, 0, 1]' : 0.102751}
{'[6, 1, 1, 0, 3, 2, 1, 0, 7, 0, 2, 29, 1, 1, 0, 1, 0, 1]' : 0.102836}
{'[6, 1, 1, 0, 3, 2, 1, 0, 7, 0, 2, 29, 1, 1, 0, 1, 0, 1]' : 0.102809}
{'[6, 1, 1, 0, 3, 2, 1, 0, 7, 0, 2, 29, 1, 1, 0, 1, 0, 1]' : 0.102815}
{'[6, 1, 1, 0, 3, 2, 1, 0, 7, 0, 2, 29, 1, 1, 0, 1, 0, 1]' : 0.102938}
{'[6, 1, 1, 0, 3, 2, 1, 0, 7, 0, 2, 29, 1, 1, 0, 1, 0, 1]' : 0.103417}
{'[6, 1, 1, 0, 3, 2, 1, 0, 7, 0, 2, 29, 1, 1, 0, 1, 0, 1]' : 0.103513}
{'[6, 1, 1, 0, 3, 2, 1, 0, 7, 0, 2, 29, 1, 1, 0, 1, 0, 1]' : 0.103348}
{'[6, 1, 1, 0, 3, 2, 1, 0, 7, 0, 2, 29, 1, 1, 0, 1, 0, 1]' : 0.103297}
{'[6, 1, 1, 0, 3, 2, 1, 0, 7, 0, 2, 29, 1, 1, 0, 1, 0, 1]' : 0.10354}
{'[6, 1, 1, 0, 3, 2, 1, 0, 7, 0, 2, 29, 1, 1, 0, 1, 0, 1]' : 0.103536}
{'[6, 1, 1, 0, 3, 2, 1, 0, 7, 0, 2, 29, 1, 1, 0, 1, 0, 1]' : 0.103622}
{'[6, 1, 1, 0, 3, 2, 1, 0, 7, 0, 2, 29, 1, 1, 0, 1, 0, 1]' : 0.103351}
{'[6, 1, 1, 0, 3, 2, 1, 0, 7, 0, 2, 29, 1, 1, 0, 1, 0, 1]' : 0.103369}
{'[6, 1, 1, 0, 3, 2, 1, 0, 7, 0, 2, 29, 1, 1, 0, 1, 0, 1]' : 0.103447}
{'[6, 1, 1, 0, 3, 2, 1, 0, 7, 0, 2, 29, 1, 1, 0, 1, 0, 1]' : 0.103466}
{'[6, 1, 1, 0, 3, 2, 1, 0, 7, 0, 2, 29, 1, 1, 0, 1, 0, 1]' : 0.103451}
{'[6, 1, 1, 0, 3, 2, 1, 0, 7, 0, 2, 29, 1, 1, 0, 1, 0, 1]' : 0.103283}
{'[6, 1, 1, 0, 3, 2, 1, 0, 7, 0, 2, 29, 1, 1, 0, 1, 0, 1]' : 0.10333}
{'[6, 1, 1, 0, 3, 2, 1, 0, 7, 0, 2, 29, 1, 1, 0, 1, 0, 1]' : 0.103441}
{'[6, 1, 1, 0, 3, 2, 1, 0, 7, 0, 2, 29, 1, 1, 0, 1, 0, 1]' : 0.103504}
{'[6, 1, 1, 0, 3, 2, 1, 0, 7, 0, 2, 29, 1, 1, 0, 1, 0, 1]' : 0.103629}

out:
 ["{'[6, 1, 1, 0, 3, 2, 1, 0, 7, 0, 2, 29, 1, 1, 0, 1, 0, 1]' : 0.118424}", "{'[6, 1, 1, 0, 3, 2, 1, 0, 7, 0, 2, 29, 1, 1, 0, 1, 0, 1]' : 0.118197}", "{'[6, 1, 1, 0, 3, 2, 1, 0, 7, 0, 2, 29, 1, 1, 0, 1, 0, 1]' : 0.118147}", "{'[6, 1, 1, 0, 3, 2, 1, 0, 7, 0, 2, 29, 1, 1, 0, 1, 0, 1]' : 0.114302}", "{'[6, 1, 1, 0, 3, 2, 1, 0, 7, 0, 2, 29, 1, 1, 0, 1, 0, 1]' : 0.102795}", "{'[6, 1, 1, 0, 3, 2, 1, 0, 7, 0, 2, 29, 1, 1, 0, 1, 0, 1]' : 0.102872}", "{'[6, 1, 1, 0, 3, 2, 1, 0, 7, 0, 2, 29, 1, 1, 0, 1, 0, 1]' : 0.102972}", "{'[6, 1, 1, 0, 3, 2, 1, 0, 7, 0, 2, 29, 1, 1, 0, 1, 0, 1]' : 0.103167}", "{'[6, 1, 1, 0, 3, 2, 1, 0, 7, 0, 2, 29, 1, 1, 0, 1, 0, 1]' : 0.102751}", "{'[6, 1, 1, 0, 3, 2, 1, 0, 7, 0, 2, 29, 1, 1, 0, 1, 0, 1]' : 0.102836}", "{'[6, 1, 1, 0, 3, 2, 1, 0, 7, 0, 2, 29, 1, 1, 0, 1, 0, 1]' : 0.102809}", "{'[6, 1, 1, 0, 3, 2, 1, 0, 7, 0, 2, 29, 1, 1, 0, 1, 0, 1]' : 0.102815}", "{'[6, 1, 1, 0, 3, 2, 1, 0, 7, 0, 2, 29, 1, 1, 0, 1, 0, 1]' : 0.102938}", "{'[6, 1, 1, 0, 3, 2, 1, 0, 7, 0, 2, 29, 1, 1, 0, 1, 0, 1]' : 0.103417}", "{'[6, 1, 1, 0, 3, 2, 1, 0, 7, 0, 2, 29, 1, 1, 0, 1, 0, 1]' : 0.103513}", "{'[6, 1, 1, 0, 3, 2, 1, 0, 7, 0, 2, 29, 1, 1, 0, 1, 0, 1]' : 0.103348}", "{'[6, 1, 1, 0, 3, 2, 1, 0, 7, 0, 2, 29, 1, 1, 0, 1, 0, 1]' : 0.103297}", "{'[6, 1, 1, 0, 3, 2, 1, 0, 7, 0, 2, 29, 1, 1, 0, 1, 0, 1]' : 0.10354}", "{'[6, 1, 1, 0, 3, 2, 1, 0, 7, 0, 2, 29, 1, 1, 0, 1, 0, 1]' : 0.103536}", "{'[6, 1, 1, 0, 3, 2, 1, 0, 7, 0, 2, 29, 1, 1, 0, 1, 0, 1]' : 0.103622}", "{'[6, 1, 1, 0, 3, 2, 1, 0, 7, 0, 2, 29, 1, 1, 0, 1, 0, 1]' : 0.103351}", "{'[6, 1, 1, 0, 3, 2, 1, 0, 7, 0, 2, 29, 1, 1, 0, 1, 0, 1]' : 0.103369}", "{'[6, 1, 1, 0, 3, 2, 1, 0, 7, 0, 2, 29, 1, 1, 0, 1, 0, 1]' : 0.103447}", "{'[6, 1, 1, 0, 3, 2, 1, 0, 7, 0, 2, 29, 1, 1, 0, 1, 0, 1]' : 0.103466}", "{'[6, 1, 1, 0, 3, 2, 1, 0, 7, 0, 2, 29, 1, 1, 0, 1, 0, 1]' : 0.103451}", "{'[6, 1, 1, 0, 3, 2, 1, 0, 7, 0, 2, 29, 1, 1, 0, 1, 0, 1]' : 0.103283}", "{'[6, 1, 1, 0, 3, 2, 1, 0, 7, 0, 2, 29, 1, 1, 0, 1, 0, 1]' : 0.10333}", "{'[6, 1, 1, 0, 3, 2, 1, 0, 7, 0, 2, 29, 1, 1, 0, 1, 0, 1]' : 0.103441}", "{'[6, 1, 1, 0, 3, 2, 1, 0, 7, 0, 2, 29, 1, 1, 0, 1, 0, 1]' : 0.103504}", "{'[6, 1, 1, 0, 3, 2, 1, 0, 7, 0, 2, 29, 1, 1, 0, 1, 0, 1]' : 0.103629}"]
returning from 'run': {'[6, 1, 1, 0, 3, 2, 1, 0, 7, 0, 2, 29, 1, 1, 0, 1, 0, 1]': ([0.118424, 0.118197, 0.118147, 0.114302, 0.102795, 0.102872, 0.102972, 0.103167, 0.102751, 0.102836, 0.102809, 0.102815, 0.102938, 0.103417, 0.103513, 0.103348, 0.103297, 0.10354, 0.103536, 0.103622, 0.103351, 0.103369, 0.103447, 0.103466, 0.103451, 0.103283, 0.10333, 0.103441, 0.103504, 0.103629], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 1, 1, 0, 3, 2, 1, 0, 7, 0, 2, 29, 1, 1, 0, 1, 0, 1]': ([0.118424, 0.118197, 0.118147, 0.114302, 0.102795, 0.102872, 0.102972, 0.103167, 0.102751, 0.102836, 0.102809, 0.102815, 0.102938, 0.103417, 0.103513, 0.103348, 0.103297, 0.10354, 0.103536, 0.103622, 0.103351, 0.103369, 0.103447, 0.103466, 0.103451, 0.103283, 0.10333, 0.103441, 0.103504, 0.103629], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	44
        Max loop nest depth: 	5
        Additions: 		3789
        Multiplications: 	1782
        Divisions: 		0
        Logical: 		0
        Reads: 			7073
        Writes: 		1127
        Comparisons:		44
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest65.exe __orio_perftest65.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest65.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest65.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest65.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest65.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	177
        Max loop nest depth: 	6
        Additions: 		2290
        Multiplications: 	620
        Divisions: 		0
        Logical: 		0
        Reads: 			4683
        Writes: 		929
        Comparisons:		177
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest66.exe __orio_perftest66.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest66.exe  
Program Test Output: 
{'[2, 1, 2, 6, 3, 6, 1, 1, 2, 28, 2, 0, 2, 0, 0, 1, 1, 0]' : 0.169535}
{'[2, 1, 2, 6, 3, 6, 1, 1, 2, 28, 2, 0, 2, 0, 0, 1, 1, 0]' : 0.167578}
{'[2, 1, 2, 6, 3, 6, 1, 1, 2, 28, 2, 0, 2, 0, 0, 1, 1, 0]' : 0.156216}
{'[2, 1, 2, 6, 3, 6, 1, 1, 2, 28, 2, 0, 2, 0, 0, 1, 1, 0]' : 0.156398}
{'[2, 1, 2, 6, 3, 6, 1, 1, 2, 28, 2, 0, 2, 0, 0, 1, 1, 0]' : 0.156072}
{'[2, 1, 2, 6, 3, 6, 1, 1, 2, 28, 2, 0, 2, 0, 0, 1, 1, 0]' : 0.157312}
{'[2, 1, 2, 6, 3, 6, 1, 1, 2, 28, 2, 0, 2, 0, 0, 1, 1, 0]' : 0.157476}
{'[2, 1, 2, 6, 3, 6, 1, 1, 2, 28, 2, 0, 2, 0, 0, 1, 1, 0]' : 0.154167}
{'[2, 1, 2, 6, 3, 6, 1, 1, 2, 28, 2, 0, 2, 0, 0, 1, 1, 0]' : 0.155519}
{'[2, 1, 2, 6, 3, 6, 1, 1, 2, 28, 2, 0, 2, 0, 0, 1, 1, 0]' : 0.158222}
{'[2, 1, 2, 6, 3, 6, 1, 1, 2, 28, 2, 0, 2, 0, 0, 1, 1, 0]' : 0.158195}
{'[2, 1, 2, 6, 3, 6, 1, 1, 2, 28, 2, 0, 2, 0, 0, 1, 1, 0]' : 0.155696}
{'[2, 1, 2, 6, 3, 6, 1, 1, 2, 28, 2, 0, 2, 0, 0, 1, 1, 0]' : 0.158226}
{'[2, 1, 2, 6, 3, 6, 1, 1, 2, 28, 2, 0, 2, 0, 0, 1, 1, 0]' : 0.155227}
{'[2, 1, 2, 6, 3, 6, 1, 1, 2, 28, 2, 0, 2, 0, 0, 1, 1, 0]' : 0.154758}
{'[2, 1, 2, 6, 3, 6, 1, 1, 2, 28, 2, 0, 2, 0, 0, 1, 1, 0]' : 0.155429}
{'[2, 1, 2, 6, 3, 6, 1, 1, 2, 28, 2, 0, 2, 0, 0, 1, 1, 0]' : 0.155623}
{'[2, 1, 2, 6, 3, 6, 1, 1, 2, 28, 2, 0, 2, 0, 0, 1, 1, 0]' : 0.152705}
{'[2, 1, 2, 6, 3, 6, 1, 1, 2, 28, 2, 0, 2, 0, 0, 1, 1, 0]' : 0.156651}
{'[2, 1, 2, 6, 3, 6, 1, 1, 2, 28, 2, 0, 2, 0, 0, 1, 1, 0]' : 0.15788}
{'[2, 1, 2, 6, 3, 6, 1, 1, 2, 28, 2, 0, 2, 0, 0, 1, 1, 0]' : 0.155383}
{'[2, 1, 2, 6, 3, 6, 1, 1, 2, 28, 2, 0, 2, 0, 0, 1, 1, 0]' : 0.156391}
{'[2, 1, 2, 6, 3, 6, 1, 1, 2, 28, 2, 0, 2, 0, 0, 1, 1, 0]' : 0.15724}
{'[2, 1, 2, 6, 3, 6, 1, 1, 2, 28, 2, 0, 2, 0, 0, 1, 1, 0]' : 0.155235}
{'[2, 1, 2, 6, 3, 6, 1, 1, 2, 28, 2, 0, 2, 0, 0, 1, 1, 0]' : 0.155984}
{'[2, 1, 2, 6, 3, 6, 1, 1, 2, 28, 2, 0, 2, 0, 0, 1, 1, 0]' : 0.157865}
{'[2, 1, 2, 6, 3, 6, 1, 1, 2, 28, 2, 0, 2, 0, 0, 1, 1, 0]' : 0.156574}
{'[2, 1, 2, 6, 3, 6, 1, 1, 2, 28, 2, 0, 2, 0, 0, 1, 1, 0]' : 0.155626}
{'[2, 1, 2, 6, 3, 6, 1, 1, 2, 28, 2, 0, 2, 0, 0, 1, 1, 0]' : 0.158123}
{'[2, 1, 2, 6, 3, 6, 1, 1, 2, 28, 2, 0, 2, 0, 0, 1, 1, 0]' : 0.157796}

out:
 ["{'[2, 1, 2, 6, 3, 6, 1, 1, 2, 28, 2, 0, 2, 0, 0, 1, 1, 0]' : 0.169535}", "{'[2, 1, 2, 6, 3, 6, 1, 1, 2, 28, 2, 0, 2, 0, 0, 1, 1, 0]' : 0.167578}", "{'[2, 1, 2, 6, 3, 6, 1, 1, 2, 28, 2, 0, 2, 0, 0, 1, 1, 0]' : 0.156216}", "{'[2, 1, 2, 6, 3, 6, 1, 1, 2, 28, 2, 0, 2, 0, 0, 1, 1, 0]' : 0.156398}", "{'[2, 1, 2, 6, 3, 6, 1, 1, 2, 28, 2, 0, 2, 0, 0, 1, 1, 0]' : 0.156072}", "{'[2, 1, 2, 6, 3, 6, 1, 1, 2, 28, 2, 0, 2, 0, 0, 1, 1, 0]' : 0.157312}", "{'[2, 1, 2, 6, 3, 6, 1, 1, 2, 28, 2, 0, 2, 0, 0, 1, 1, 0]' : 0.157476}", "{'[2, 1, 2, 6, 3, 6, 1, 1, 2, 28, 2, 0, 2, 0, 0, 1, 1, 0]' : 0.154167}", "{'[2, 1, 2, 6, 3, 6, 1, 1, 2, 28, 2, 0, 2, 0, 0, 1, 1, 0]' : 0.155519}", "{'[2, 1, 2, 6, 3, 6, 1, 1, 2, 28, 2, 0, 2, 0, 0, 1, 1, 0]' : 0.158222}", "{'[2, 1, 2, 6, 3, 6, 1, 1, 2, 28, 2, 0, 2, 0, 0, 1, 1, 0]' : 0.158195}", "{'[2, 1, 2, 6, 3, 6, 1, 1, 2, 28, 2, 0, 2, 0, 0, 1, 1, 0]' : 0.155696}", "{'[2, 1, 2, 6, 3, 6, 1, 1, 2, 28, 2, 0, 2, 0, 0, 1, 1, 0]' : 0.158226}", "{'[2, 1, 2, 6, 3, 6, 1, 1, 2, 28, 2, 0, 2, 0, 0, 1, 1, 0]' : 0.155227}", "{'[2, 1, 2, 6, 3, 6, 1, 1, 2, 28, 2, 0, 2, 0, 0, 1, 1, 0]' : 0.154758}", "{'[2, 1, 2, 6, 3, 6, 1, 1, 2, 28, 2, 0, 2, 0, 0, 1, 1, 0]' : 0.155429}", "{'[2, 1, 2, 6, 3, 6, 1, 1, 2, 28, 2, 0, 2, 0, 0, 1, 1, 0]' : 0.155623}", "{'[2, 1, 2, 6, 3, 6, 1, 1, 2, 28, 2, 0, 2, 0, 0, 1, 1, 0]' : 0.152705}", "{'[2, 1, 2, 6, 3, 6, 1, 1, 2, 28, 2, 0, 2, 0, 0, 1, 1, 0]' : 0.156651}", "{'[2, 1, 2, 6, 3, 6, 1, 1, 2, 28, 2, 0, 2, 0, 0, 1, 1, 0]' : 0.15788}", "{'[2, 1, 2, 6, 3, 6, 1, 1, 2, 28, 2, 0, 2, 0, 0, 1, 1, 0]' : 0.155383}", "{'[2, 1, 2, 6, 3, 6, 1, 1, 2, 28, 2, 0, 2, 0, 0, 1, 1, 0]' : 0.156391}", "{'[2, 1, 2, 6, 3, 6, 1, 1, 2, 28, 2, 0, 2, 0, 0, 1, 1, 0]' : 0.15724}", "{'[2, 1, 2, 6, 3, 6, 1, 1, 2, 28, 2, 0, 2, 0, 0, 1, 1, 0]' : 0.155235}", "{'[2, 1, 2, 6, 3, 6, 1, 1, 2, 28, 2, 0, 2, 0, 0, 1, 1, 0]' : 0.155984}", "{'[2, 1, 2, 6, 3, 6, 1, 1, 2, 28, 2, 0, 2, 0, 0, 1, 1, 0]' : 0.157865}", "{'[2, 1, 2, 6, 3, 6, 1, 1, 2, 28, 2, 0, 2, 0, 0, 1, 1, 0]' : 0.156574}", "{'[2, 1, 2, 6, 3, 6, 1, 1, 2, 28, 2, 0, 2, 0, 0, 1, 1, 0]' : 0.155626}", "{'[2, 1, 2, 6, 3, 6, 1, 1, 2, 28, 2, 0, 2, 0, 0, 1, 1, 0]' : 0.158123}", "{'[2, 1, 2, 6, 3, 6, 1, 1, 2, 28, 2, 0, 2, 0, 0, 1, 1, 0]' : 0.157796}"]
returning from 'run': {'[2, 1, 2, 6, 3, 6, 1, 1, 2, 28, 2, 0, 2, 0, 0, 1, 1, 0]': ([0.169535, 0.167578, 0.156216, 0.156398, 0.156072, 0.157312, 0.157476, 0.154167, 0.155519, 0.158222, 0.158195, 0.155696, 0.158226, 0.155227, 0.154758, 0.155429, 0.155623, 0.152705, 0.156651, 0.15788, 0.155383, 0.156391, 0.15724, 0.155235, 0.155984, 0.157865, 0.156574, 0.155626, 0.158123, 0.157796], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 1, 2, 6, 3, 6, 1, 1, 2, 28, 2, 0, 2, 0, 0, 1, 1, 0]': ([0.169535, 0.167578, 0.156216, 0.156398, 0.156072, 0.157312, 0.157476, 0.154167, 0.155519, 0.158222, 0.158195, 0.155696, 0.158226, 0.155227, 0.154758, 0.155429, 0.155623, 0.152705, 0.156651, 0.15788, 0.155383, 0.156391, 0.15724, 0.155235, 0.155984, 0.157865, 0.156574, 0.155626, 0.158123, 0.157796], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		148
        Multiplications: 	26
        Divisions: 		0
        Logical: 		0
        Reads: 			332
        Writes: 		84
        Comparisons:		15
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest67.exe __orio_perftest67.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest67.exe  
Program Test Output: 
{'[3, 1, 2, 0, 3, 5, 1, 1, 9, 0, 2, 7, 0, 0, 0, 1, 0, 1]' : 0.271862}
{'[3, 1, 2, 0, 3, 5, 1, 1, 9, 0, 2, 7, 0, 0, 0, 1, 0, 1]' : 0.271657}
{'[3, 1, 2, 0, 3, 5, 1, 1, 9, 0, 2, 7, 0, 0, 0, 1, 0, 1]' : 0.241092}
{'[3, 1, 2, 0, 3, 5, 1, 1, 9, 0, 2, 7, 0, 0, 0, 1, 0, 1]' : 0.233431}
{'[3, 1, 2, 0, 3, 5, 1, 1, 9, 0, 2, 7, 0, 0, 0, 1, 0, 1]' : 0.227052}
{'[3, 1, 2, 0, 3, 5, 1, 1, 9, 0, 2, 7, 0, 0, 0, 1, 0, 1]' : 0.230576}
{'[3, 1, 2, 0, 3, 5, 1, 1, 9, 0, 2, 7, 0, 0, 0, 1, 0, 1]' : 0.226056}
{'[3, 1, 2, 0, 3, 5, 1, 1, 9, 0, 2, 7, 0, 0, 0, 1, 0, 1]' : 0.230809}
{'[3, 1, 2, 0, 3, 5, 1, 1, 9, 0, 2, 7, 0, 0, 0, 1, 0, 1]' : 0.228714}
{'[3, 1, 2, 0, 3, 5, 1, 1, 9, 0, 2, 7, 0, 0, 0, 1, 0, 1]' : 0.232164}
{'[3, 1, 2, 0, 3, 5, 1, 1, 9, 0, 2, 7, 0, 0, 0, 1, 0, 1]' : 0.235113}
{'[3, 1, 2, 0, 3, 5, 1, 1, 9, 0, 2, 7, 0, 0, 0, 1, 0, 1]' : 0.235483}
{'[3, 1, 2, 0, 3, 5, 1, 1, 9, 0, 2, 7, 0, 0, 0, 1, 0, 1]' : 0.237414}
{'[3, 1, 2, 0, 3, 5, 1, 1, 9, 0, 2, 7, 0, 0, 0, 1, 0, 1]' : 0.232422}
{'[3, 1, 2, 0, 3, 5, 1, 1, 9, 0, 2, 7, 0, 0, 0, 1, 0, 1]' : 0.228045}
{'[3, 1, 2, 0, 3, 5, 1, 1, 9, 0, 2, 7, 0, 0, 0, 1, 0, 1]' : 0.226339}
{'[3, 1, 2, 0, 3, 5, 1, 1, 9, 0, 2, 7, 0, 0, 0, 1, 0, 1]' : 0.232541}
{'[3, 1, 2, 0, 3, 5, 1, 1, 9, 0, 2, 7, 0, 0, 0, 1, 0, 1]' : 0.226471}
{'[3, 1, 2, 0, 3, 5, 1, 1, 9, 0, 2, 7, 0, 0, 0, 1, 0, 1]' : 0.232209}
{'[3, 1, 2, 0, 3, 5, 1, 1, 9, 0, 2, 7, 0, 0, 0, 1, 0, 1]' : 0.228058}
{'[3, 1, 2, 0, 3, 5, 1, 1, 9, 0, 2, 7, 0, 0, 0, 1, 0, 1]' : 0.226606}
{'[3, 1, 2, 0, 3, 5, 1, 1, 9, 0, 2, 7, 0, 0, 0, 1, 0, 1]' : 0.226522}
{'[3, 1, 2, 0, 3, 5, 1, 1, 9, 0, 2, 7, 0, 0, 0, 1, 0, 1]' : 0.229469}
{'[3, 1, 2, 0, 3, 5, 1, 1, 9, 0, 2, 7, 0, 0, 0, 1, 0, 1]' : 0.226901}
{'[3, 1, 2, 0, 3, 5, 1, 1, 9, 0, 2, 7, 0, 0, 0, 1, 0, 1]' : 0.228049}
{'[3, 1, 2, 0, 3, 5, 1, 1, 9, 0, 2, 7, 0, 0, 0, 1, 0, 1]' : 0.226117}
{'[3, 1, 2, 0, 3, 5, 1, 1, 9, 0, 2, 7, 0, 0, 0, 1, 0, 1]' : 0.226959}
{'[3, 1, 2, 0, 3, 5, 1, 1, 9, 0, 2, 7, 0, 0, 0, 1, 0, 1]' : 0.228748}
{'[3, 1, 2, 0, 3, 5, 1, 1, 9, 0, 2, 7, 0, 0, 0, 1, 0, 1]' : 0.226095}
{'[3, 1, 2, 0, 3, 5, 1, 1, 9, 0, 2, 7, 0, 0, 0, 1, 0, 1]' : 0.230232}

out:
 ["{'[3, 1, 2, 0, 3, 5, 1, 1, 9, 0, 2, 7, 0, 0, 0, 1, 0, 1]' : 0.271862}", "{'[3, 1, 2, 0, 3, 5, 1, 1, 9, 0, 2, 7, 0, 0, 0, 1, 0, 1]' : 0.271657}", "{'[3, 1, 2, 0, 3, 5, 1, 1, 9, 0, 2, 7, 0, 0, 0, 1, 0, 1]' : 0.241092}", "{'[3, 1, 2, 0, 3, 5, 1, 1, 9, 0, 2, 7, 0, 0, 0, 1, 0, 1]' : 0.233431}", "{'[3, 1, 2, 0, 3, 5, 1, 1, 9, 0, 2, 7, 0, 0, 0, 1, 0, 1]' : 0.227052}", "{'[3, 1, 2, 0, 3, 5, 1, 1, 9, 0, 2, 7, 0, 0, 0, 1, 0, 1]' : 0.230576}", "{'[3, 1, 2, 0, 3, 5, 1, 1, 9, 0, 2, 7, 0, 0, 0, 1, 0, 1]' : 0.226056}", "{'[3, 1, 2, 0, 3, 5, 1, 1, 9, 0, 2, 7, 0, 0, 0, 1, 0, 1]' : 0.230809}", "{'[3, 1, 2, 0, 3, 5, 1, 1, 9, 0, 2, 7, 0, 0, 0, 1, 0, 1]' : 0.228714}", "{'[3, 1, 2, 0, 3, 5, 1, 1, 9, 0, 2, 7, 0, 0, 0, 1, 0, 1]' : 0.232164}", "{'[3, 1, 2, 0, 3, 5, 1, 1, 9, 0, 2, 7, 0, 0, 0, 1, 0, 1]' : 0.235113}", "{'[3, 1, 2, 0, 3, 5, 1, 1, 9, 0, 2, 7, 0, 0, 0, 1, 0, 1]' : 0.235483}", "{'[3, 1, 2, 0, 3, 5, 1, 1, 9, 0, 2, 7, 0, 0, 0, 1, 0, 1]' : 0.237414}", "{'[3, 1, 2, 0, 3, 5, 1, 1, 9, 0, 2, 7, 0, 0, 0, 1, 0, 1]' : 0.232422}", "{'[3, 1, 2, 0, 3, 5, 1, 1, 9, 0, 2, 7, 0, 0, 0, 1, 0, 1]' : 0.228045}", "{'[3, 1, 2, 0, 3, 5, 1, 1, 9, 0, 2, 7, 0, 0, 0, 1, 0, 1]' : 0.226339}", "{'[3, 1, 2, 0, 3, 5, 1, 1, 9, 0, 2, 7, 0, 0, 0, 1, 0, 1]' : 0.232541}", "{'[3, 1, 2, 0, 3, 5, 1, 1, 9, 0, 2, 7, 0, 0, 0, 1, 0, 1]' : 0.226471}", "{'[3, 1, 2, 0, 3, 5, 1, 1, 9, 0, 2, 7, 0, 0, 0, 1, 0, 1]' : 0.232209}", "{'[3, 1, 2, 0, 3, 5, 1, 1, 9, 0, 2, 7, 0, 0, 0, 1, 0, 1]' : 0.228058}", "{'[3, 1, 2, 0, 3, 5, 1, 1, 9, 0, 2, 7, 0, 0, 0, 1, 0, 1]' : 0.226606}", "{'[3, 1, 2, 0, 3, 5, 1, 1, 9, 0, 2, 7, 0, 0, 0, 1, 0, 1]' : 0.226522}", "{'[3, 1, 2, 0, 3, 5, 1, 1, 9, 0, 2, 7, 0, 0, 0, 1, 0, 1]' : 0.229469}", "{'[3, 1, 2, 0, 3, 5, 1, 1, 9, 0, 2, 7, 0, 0, 0, 1, 0, 1]' : 0.226901}", "{'[3, 1, 2, 0, 3, 5, 1, 1, 9, 0, 2, 7, 0, 0, 0, 1, 0, 1]' : 0.228049}", "{'[3, 1, 2, 0, 3, 5, 1, 1, 9, 0, 2, 7, 0, 0, 0, 1, 0, 1]' : 0.226117}", "{'[3, 1, 2, 0, 3, 5, 1, 1, 9, 0, 2, 7, 0, 0, 0, 1, 0, 1]' : 0.226959}", "{'[3, 1, 2, 0, 3, 5, 1, 1, 9, 0, 2, 7, 0, 0, 0, 1, 0, 1]' : 0.228748}", "{'[3, 1, 2, 0, 3, 5, 1, 1, 9, 0, 2, 7, 0, 0, 0, 1, 0, 1]' : 0.226095}", "{'[3, 1, 2, 0, 3, 5, 1, 1, 9, 0, 2, 7, 0, 0, 0, 1, 0, 1]' : 0.230232}"]
returning from 'run': {'[3, 1, 2, 0, 3, 5, 1, 1, 9, 0, 2, 7, 0, 0, 0, 1, 0, 1]': ([0.271862, 0.271657, 0.241092, 0.233431, 0.227052, 0.230576, 0.226056, 0.230809, 0.228714, 0.232164, 0.235113, 0.235483, 0.237414, 0.232422, 0.228045, 0.226339, 0.232541, 0.226471, 0.232209, 0.228058, 0.226606, 0.226522, 0.229469, 0.226901, 0.228049, 0.226117, 0.226959, 0.228748, 0.226095, 0.230232], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 1, 2, 0, 3, 5, 1, 1, 9, 0, 2, 7, 0, 0, 0, 1, 0, 1]': ([0.271862, 0.271657, 0.241092, 0.233431, 0.227052, 0.230576, 0.226056, 0.230809, 0.228714, 0.232164, 0.235113, 0.235483, 0.237414, 0.232422, 0.228045, 0.226339, 0.232541, 0.226471, 0.232209, 0.228058, 0.226606, 0.226522, 0.229469, 0.226901, 0.228049, 0.226117, 0.226959, 0.228748, 0.226095, 0.230232], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		230
        Multiplications: 	74
        Divisions: 		0
        Logical: 		0
        Reads: 			578
        Writes: 		143
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest68.exe __orio_perftest68.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest68.exe  
Program Test Output: 
{'[0, 1, 4, 0, 3, 0, 1, 0, 12, 0, 2, 0, 0, 0, 2, 1, 0, 0]' : 0.206276}
{'[0, 1, 4, 0, 3, 0, 1, 0, 12, 0, 2, 0, 0, 0, 2, 1, 0, 0]' : 0.20614}
{'[0, 1, 4, 0, 3, 0, 1, 0, 12, 0, 2, 0, 0, 0, 2, 1, 0, 0]' : 0.189589}
{'[0, 1, 4, 0, 3, 0, 1, 0, 12, 0, 2, 0, 0, 0, 2, 1, 0, 0]' : 0.174586}
{'[0, 1, 4, 0, 3, 0, 1, 0, 12, 0, 2, 0, 0, 0, 2, 1, 0, 0]' : 0.173875}
{'[0, 1, 4, 0, 3, 0, 1, 0, 12, 0, 2, 0, 0, 0, 2, 1, 0, 0]' : 0.176625}
{'[0, 1, 4, 0, 3, 0, 1, 0, 12, 0, 2, 0, 0, 0, 2, 1, 0, 0]' : 0.181582}
{'[0, 1, 4, 0, 3, 0, 1, 0, 12, 0, 2, 0, 0, 0, 2, 1, 0, 0]' : 0.181841}
{'[0, 1, 4, 0, 3, 0, 1, 0, 12, 0, 2, 0, 0, 0, 2, 1, 0, 0]' : 0.179694}
{'[0, 1, 4, 0, 3, 0, 1, 0, 12, 0, 2, 0, 0, 0, 2, 1, 0, 0]' : 0.173063}
{'[0, 1, 4, 0, 3, 0, 1, 0, 12, 0, 2, 0, 0, 0, 2, 1, 0, 0]' : 0.176019}
{'[0, 1, 4, 0, 3, 0, 1, 0, 12, 0, 2, 0, 0, 0, 2, 1, 0, 0]' : 0.176757}
{'[0, 1, 4, 0, 3, 0, 1, 0, 12, 0, 2, 0, 0, 0, 2, 1, 0, 0]' : 0.181638}
{'[0, 1, 4, 0, 3, 0, 1, 0, 12, 0, 2, 0, 0, 0, 2, 1, 0, 0]' : 0.171907}
{'[0, 1, 4, 0, 3, 0, 1, 0, 12, 0, 2, 0, 0, 0, 2, 1, 0, 0]' : 0.171577}
{'[0, 1, 4, 0, 3, 0, 1, 0, 12, 0, 2, 0, 0, 0, 2, 1, 0, 0]' : 0.17257}
{'[0, 1, 4, 0, 3, 0, 1, 0, 12, 0, 2, 0, 0, 0, 2, 1, 0, 0]' : 0.17685}
{'[0, 1, 4, 0, 3, 0, 1, 0, 12, 0, 2, 0, 0, 0, 2, 1, 0, 0]' : 0.176925}
{'[0, 1, 4, 0, 3, 0, 1, 0, 12, 0, 2, 0, 0, 0, 2, 1, 0, 0]' : 0.178448}
{'[0, 1, 4, 0, 3, 0, 1, 0, 12, 0, 2, 0, 0, 0, 2, 1, 0, 0]' : 0.181894}
{'[0, 1, 4, 0, 3, 0, 1, 0, 12, 0, 2, 0, 0, 0, 2, 1, 0, 0]' : 0.177074}
{'[0, 1, 4, 0, 3, 0, 1, 0, 12, 0, 2, 0, 0, 0, 2, 1, 0, 0]' : 0.177074}
{'[0, 1, 4, 0, 3, 0, 1, 0, 12, 0, 2, 0, 0, 0, 2, 1, 0, 0]' : 0.181849}
{'[0, 1, 4, 0, 3, 0, 1, 0, 12, 0, 2, 0, 0, 0, 2, 1, 0, 0]' : 0.181208}
{'[0, 1, 4, 0, 3, 0, 1, 0, 12, 0, 2, 0, 0, 0, 2, 1, 0, 0]' : 0.180698}
{'[0, 1, 4, 0, 3, 0, 1, 0, 12, 0, 2, 0, 0, 0, 2, 1, 0, 0]' : 0.178413}
{'[0, 1, 4, 0, 3, 0, 1, 0, 12, 0, 2, 0, 0, 0, 2, 1, 0, 0]' : 0.171782}
{'[0, 1, 4, 0, 3, 0, 1, 0, 12, 0, 2, 0, 0, 0, 2, 1, 0, 0]' : 0.181228}
{'[0, 1, 4, 0, 3, 0, 1, 0, 12, 0, 2, 0, 0, 0, 2, 1, 0, 0]' : 0.182068}
{'[0, 1, 4, 0, 3, 0, 1, 0, 12, 0, 2, 0, 0, 0, 2, 1, 0, 0]' : 0.181498}

out:
 ["{'[0, 1, 4, 0, 3, 0, 1, 0, 12, 0, 2, 0, 0, 0, 2, 1, 0, 0]' : 0.206276}", "{'[0, 1, 4, 0, 3, 0, 1, 0, 12, 0, 2, 0, 0, 0, 2, 1, 0, 0]' : 0.20614}", "{'[0, 1, 4, 0, 3, 0, 1, 0, 12, 0, 2, 0, 0, 0, 2, 1, 0, 0]' : 0.189589}", "{'[0, 1, 4, 0, 3, 0, 1, 0, 12, 0, 2, 0, 0, 0, 2, 1, 0, 0]' : 0.174586}", "{'[0, 1, 4, 0, 3, 0, 1, 0, 12, 0, 2, 0, 0, 0, 2, 1, 0, 0]' : 0.173875}", "{'[0, 1, 4, 0, 3, 0, 1, 0, 12, 0, 2, 0, 0, 0, 2, 1, 0, 0]' : 0.176625}", "{'[0, 1, 4, 0, 3, 0, 1, 0, 12, 0, 2, 0, 0, 0, 2, 1, 0, 0]' : 0.181582}", "{'[0, 1, 4, 0, 3, 0, 1, 0, 12, 0, 2, 0, 0, 0, 2, 1, 0, 0]' : 0.181841}", "{'[0, 1, 4, 0, 3, 0, 1, 0, 12, 0, 2, 0, 0, 0, 2, 1, 0, 0]' : 0.179694}", "{'[0, 1, 4, 0, 3, 0, 1, 0, 12, 0, 2, 0, 0, 0, 2, 1, 0, 0]' : 0.173063}", "{'[0, 1, 4, 0, 3, 0, 1, 0, 12, 0, 2, 0, 0, 0, 2, 1, 0, 0]' : 0.176019}", "{'[0, 1, 4, 0, 3, 0, 1, 0, 12, 0, 2, 0, 0, 0, 2, 1, 0, 0]' : 0.176757}", "{'[0, 1, 4, 0, 3, 0, 1, 0, 12, 0, 2, 0, 0, 0, 2, 1, 0, 0]' : 0.181638}", "{'[0, 1, 4, 0, 3, 0, 1, 0, 12, 0, 2, 0, 0, 0, 2, 1, 0, 0]' : 0.171907}", "{'[0, 1, 4, 0, 3, 0, 1, 0, 12, 0, 2, 0, 0, 0, 2, 1, 0, 0]' : 0.171577}", "{'[0, 1, 4, 0, 3, 0, 1, 0, 12, 0, 2, 0, 0, 0, 2, 1, 0, 0]' : 0.17257}", "{'[0, 1, 4, 0, 3, 0, 1, 0, 12, 0, 2, 0, 0, 0, 2, 1, 0, 0]' : 0.17685}", "{'[0, 1, 4, 0, 3, 0, 1, 0, 12, 0, 2, 0, 0, 0, 2, 1, 0, 0]' : 0.176925}", "{'[0, 1, 4, 0, 3, 0, 1, 0, 12, 0, 2, 0, 0, 0, 2, 1, 0, 0]' : 0.178448}", "{'[0, 1, 4, 0, 3, 0, 1, 0, 12, 0, 2, 0, 0, 0, 2, 1, 0, 0]' : 0.181894}", "{'[0, 1, 4, 0, 3, 0, 1, 0, 12, 0, 2, 0, 0, 0, 2, 1, 0, 0]' : 0.177074}", "{'[0, 1, 4, 0, 3, 0, 1, 0, 12, 0, 2, 0, 0, 0, 2, 1, 0, 0]' : 0.177074}", "{'[0, 1, 4, 0, 3, 0, 1, 0, 12, 0, 2, 0, 0, 0, 2, 1, 0, 0]' : 0.181849}", "{'[0, 1, 4, 0, 3, 0, 1, 0, 12, 0, 2, 0, 0, 0, 2, 1, 0, 0]' : 0.181208}", "{'[0, 1, 4, 0, 3, 0, 1, 0, 12, 0, 2, 0, 0, 0, 2, 1, 0, 0]' : 0.180698}", "{'[0, 1, 4, 0, 3, 0, 1, 0, 12, 0, 2, 0, 0, 0, 2, 1, 0, 0]' : 0.178413}", "{'[0, 1, 4, 0, 3, 0, 1, 0, 12, 0, 2, 0, 0, 0, 2, 1, 0, 0]' : 0.171782}", "{'[0, 1, 4, 0, 3, 0, 1, 0, 12, 0, 2, 0, 0, 0, 2, 1, 0, 0]' : 0.181228}", "{'[0, 1, 4, 0, 3, 0, 1, 0, 12, 0, 2, 0, 0, 0, 2, 1, 0, 0]' : 0.182068}", "{'[0, 1, 4, 0, 3, 0, 1, 0, 12, 0, 2, 0, 0, 0, 2, 1, 0, 0]' : 0.181498}"]
returning from 'run': {'[0, 1, 4, 0, 3, 0, 1, 0, 12, 0, 2, 0, 0, 0, 2, 1, 0, 0]': ([0.206276, 0.20614, 0.189589, 0.174586, 0.173875, 0.176625, 0.181582, 0.181841, 0.179694, 0.173063, 0.176019, 0.176757, 0.181638, 0.171907, 0.171577, 0.17257, 0.17685, 0.176925, 0.178448, 0.181894, 0.177074, 0.177074, 0.181849, 0.181208, 0.180698, 0.178413, 0.171782, 0.181228, 0.182068, 0.181498], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 4, 0, 3, 0, 1, 0, 12, 0, 2, 0, 0, 0, 2, 1, 0, 0]': ([0.206276, 0.20614, 0.189589, 0.174586, 0.173875, 0.176625, 0.181582, 0.181841, 0.179694, 0.173063, 0.176019, 0.176757, 0.181638, 0.171907, 0.171577, 0.17257, 0.17685, 0.176925, 0.178448, 0.181894, 0.177074, 0.177074, 0.181849, 0.181208, 0.180698, 0.178413, 0.171782, 0.181228, 0.182068, 0.181498], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
Code stats:
        Number of loops: 	23
        Max loop nest depth: 	5
        Additions: 		4743
        Multiplications: 	2310
        Divisions: 		0
        Logical: 		0
        Reads: 			8920
        Writes: 		1431
        Comparisons:		23
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest69.exe __orio_perftest69.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest69.exe  
Program Test Output: 
{'[3, 1, 1, 1, 3, 1, 1, 0, 27, 0, 2, 29, 2, 0, 0, 1, 1, 0]' : 0.208361}
{'[3, 1, 1, 1, 3, 1, 1, 0, 27, 0, 2, 29, 2, 0, 0, 1, 1, 0]' : 0.208922}
{'[3, 1, 1, 1, 3, 1, 1, 0, 27, 0, 2, 29, 2, 0, 0, 1, 1, 0]' : 0.199101}
{'[3, 1, 1, 1, 3, 1, 1, 0, 27, 0, 2, 29, 2, 0, 0, 1, 1, 0]' : 0.1917}
{'[3, 1, 1, 1, 3, 1, 1, 0, 27, 0, 2, 29, 2, 0, 0, 1, 1, 0]' : 0.189556}
{'[3, 1, 1, 1, 3, 1, 1, 0, 27, 0, 2, 29, 2, 0, 0, 1, 1, 0]' : 0.189606}
{'[3, 1, 1, 1, 3, 1, 1, 0, 27, 0, 2, 29, 2, 0, 0, 1, 1, 0]' : 0.192058}
{'[3, 1, 1, 1, 3, 1, 1, 0, 27, 0, 2, 29, 2, 0, 0, 1, 1, 0]' : 0.192769}
{'[3, 1, 1, 1, 3, 1, 1, 0, 27, 0, 2, 29, 2, 0, 0, 1, 1, 0]' : 0.191708}
{'[3, 1, 1, 1, 3, 1, 1, 0, 27, 0, 2, 29, 2, 0, 0, 1, 1, 0]' : 0.191321}
{'[3, 1, 1, 1, 3, 1, 1, 0, 27, 0, 2, 29, 2, 0, 0, 1, 1, 0]' : 0.191893}
{'[3, 1, 1, 1, 3, 1, 1, 0, 27, 0, 2, 29, 2, 0, 0, 1, 1, 0]' : 0.191685}
{'[3, 1, 1, 1, 3, 1, 1, 0, 27, 0, 2, 29, 2, 0, 0, 1, 1, 0]' : 0.192693}
{'[3, 1, 1, 1, 3, 1, 1, 0, 27, 0, 2, 29, 2, 0, 0, 1, 1, 0]' : 0.192632}
{'[3, 1, 1, 1, 3, 1, 1, 0, 27, 0, 2, 29, 2, 0, 0, 1, 1, 0]' : 0.191705}
{'[3, 1, 1, 1, 3, 1, 1, 0, 27, 0, 2, 29, 2, 0, 0, 1, 1, 0]' : 0.191028}
{'[3, 1, 1, 1, 3, 1, 1, 0, 27, 0, 2, 29, 2, 0, 0, 1, 1, 0]' : 0.191804}
{'[3, 1, 1, 1, 3, 1, 1, 0, 27, 0, 2, 29, 2, 0, 0, 1, 1, 0]' : 0.191421}
{'[3, 1, 1, 1, 3, 1, 1, 0, 27, 0, 2, 29, 2, 0, 0, 1, 1, 0]' : 0.188757}
{'[3, 1, 1, 1, 3, 1, 1, 0, 27, 0, 2, 29, 2, 0, 0, 1, 1, 0]' : 0.188269}
{'[3, 1, 1, 1, 3, 1, 1, 0, 27, 0, 2, 29, 2, 0, 0, 1, 1, 0]' : 0.18746}
{'[3, 1, 1, 1, 3, 1, 1, 0, 27, 0, 2, 29, 2, 0, 0, 1, 1, 0]' : 0.186907}
{'[3, 1, 1, 1, 3, 1, 1, 0, 27, 0, 2, 29, 2, 0, 0, 1, 1, 0]' : 0.187914}
{'[3, 1, 1, 1, 3, 1, 1, 0, 27, 0, 2, 29, 2, 0, 0, 1, 1, 0]' : 0.189631}
{'[3, 1, 1, 1, 3, 1, 1, 0, 27, 0, 2, 29, 2, 0, 0, 1, 1, 0]' : 0.18943}
{'[3, 1, 1, 1, 3, 1, 1, 0, 27, 0, 2, 29, 2, 0, 0, 1, 1, 0]' : 0.188529}
{'[3, 1, 1, 1, 3, 1, 1, 0, 27, 0, 2, 29, 2, 0, 0, 1, 1, 0]' : 0.189071}
{'[3, 1, 1, 1, 3, 1, 1, 0, 27, 0, 2, 29, 2, 0, 0, 1, 1, 0]' : 0.188151}
{'[3, 1, 1, 1, 3, 1, 1, 0, 27, 0, 2, 29, 2, 0, 0, 1, 1, 0]' : 0.189197}
{'[3, 1, 1, 1, 3, 1, 1, 0, 27, 0, 2, 29, 2, 0, 0, 1, 1, 0]' : 0.188346}

out:
 ["{'[3, 1, 1, 1, 3, 1, 1, 0, 27, 0, 2, 29, 2, 0, 0, 1, 1, 0]' : 0.208361}", "{'[3, 1, 1, 1, 3, 1, 1, 0, 27, 0, 2, 29, 2, 0, 0, 1, 1, 0]' : 0.208922}", "{'[3, 1, 1, 1, 3, 1, 1, 0, 27, 0, 2, 29, 2, 0, 0, 1, 1, 0]' : 0.199101}", "{'[3, 1, 1, 1, 3, 1, 1, 0, 27, 0, 2, 29, 2, 0, 0, 1, 1, 0]' : 0.1917}", "{'[3, 1, 1, 1, 3, 1, 1, 0, 27, 0, 2, 29, 2, 0, 0, 1, 1, 0]' : 0.189556}", "{'[3, 1, 1, 1, 3, 1, 1, 0, 27, 0, 2, 29, 2, 0, 0, 1, 1, 0]' : 0.189606}", "{'[3, 1, 1, 1, 3, 1, 1, 0, 27, 0, 2, 29, 2, 0, 0, 1, 1, 0]' : 0.192058}", "{'[3, 1, 1, 1, 3, 1, 1, 0, 27, 0, 2, 29, 2, 0, 0, 1, 1, 0]' : 0.192769}", "{'[3, 1, 1, 1, 3, 1, 1, 0, 27, 0, 2, 29, 2, 0, 0, 1, 1, 0]' : 0.191708}", "{'[3, 1, 1, 1, 3, 1, 1, 0, 27, 0, 2, 29, 2, 0, 0, 1, 1, 0]' : 0.191321}", "{'[3, 1, 1, 1, 3, 1, 1, 0, 27, 0, 2, 29, 2, 0, 0, 1, 1, 0]' : 0.191893}", "{'[3, 1, 1, 1, 3, 1, 1, 0, 27, 0, 2, 29, 2, 0, 0, 1, 1, 0]' : 0.191685}", "{'[3, 1, 1, 1, 3, 1, 1, 0, 27, 0, 2, 29, 2, 0, 0, 1, 1, 0]' : 0.192693}", "{'[3, 1, 1, 1, 3, 1, 1, 0, 27, 0, 2, 29, 2, 0, 0, 1, 1, 0]' : 0.192632}", "{'[3, 1, 1, 1, 3, 1, 1, 0, 27, 0, 2, 29, 2, 0, 0, 1, 1, 0]' : 0.191705}", "{'[3, 1, 1, 1, 3, 1, 1, 0, 27, 0, 2, 29, 2, 0, 0, 1, 1, 0]' : 0.191028}", "{'[3, 1, 1, 1, 3, 1, 1, 0, 27, 0, 2, 29, 2, 0, 0, 1, 1, 0]' : 0.191804}", "{'[3, 1, 1, 1, 3, 1, 1, 0, 27, 0, 2, 29, 2, 0, 0, 1, 1, 0]' : 0.191421}", "{'[3, 1, 1, 1, 3, 1, 1, 0, 27, 0, 2, 29, 2, 0, 0, 1, 1, 0]' : 0.188757}", "{'[3, 1, 1, 1, 3, 1, 1, 0, 27, 0, 2, 29, 2, 0, 0, 1, 1, 0]' : 0.188269}", "{'[3, 1, 1, 1, 3, 1, 1, 0, 27, 0, 2, 29, 2, 0, 0, 1, 1, 0]' : 0.18746}", "{'[3, 1, 1, 1, 3, 1, 1, 0, 27, 0, 2, 29, 2, 0, 0, 1, 1, 0]' : 0.186907}", "{'[3, 1, 1, 1, 3, 1, 1, 0, 27, 0, 2, 29, 2, 0, 0, 1, 1, 0]' : 0.187914}", "{'[3, 1, 1, 1, 3, 1, 1, 0, 27, 0, 2, 29, 2, 0, 0, 1, 1, 0]' : 0.189631}", "{'[3, 1, 1, 1, 3, 1, 1, 0, 27, 0, 2, 29, 2, 0, 0, 1, 1, 0]' : 0.18943}", "{'[3, 1, 1, 1, 3, 1, 1, 0, 27, 0, 2, 29, 2, 0, 0, 1, 1, 0]' : 0.188529}", "{'[3, 1, 1, 1, 3, 1, 1, 0, 27, 0, 2, 29, 2, 0, 0, 1, 1, 0]' : 0.189071}", "{'[3, 1, 1, 1, 3, 1, 1, 0, 27, 0, 2, 29, 2, 0, 0, 1, 1, 0]' : 0.188151}", "{'[3, 1, 1, 1, 3, 1, 1, 0, 27, 0, 2, 29, 2, 0, 0, 1, 1, 0]' : 0.189197}", "{'[3, 1, 1, 1, 3, 1, 1, 0, 27, 0, 2, 29, 2, 0, 0, 1, 1, 0]' : 0.188346}"]
returning from 'run': {'[3, 1, 1, 1, 3, 1, 1, 0, 27, 0, 2, 29, 2, 0, 0, 1, 1, 0]': ([0.208361, 0.208922, 0.199101, 0.1917, 0.189556, 0.189606, 0.192058, 0.192769, 0.191708, 0.191321, 0.191893, 0.191685, 0.192693, 0.192632, 0.191705, 0.191028, 0.191804, 0.191421, 0.188757, 0.188269, 0.18746, 0.186907, 0.187914, 0.189631, 0.18943, 0.188529, 0.189071, 0.188151, 0.189197, 0.188346], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 1, 1, 1, 3, 1, 1, 0, 27, 0, 2, 29, 2, 0, 0, 1, 1, 0]': ([0.208361, 0.208922, 0.199101, 0.1917, 0.189556, 0.189606, 0.192058, 0.192769, 0.191708, 0.191321, 0.191893, 0.191685, 0.192693, 0.192632, 0.191705, 0.191028, 0.191804, 0.191421, 0.188757, 0.188269, 0.18746, 0.186907, 0.187914, 0.189631, 0.18943, 0.188529, 0.189071, 0.188151, 0.189197, 0.188346], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	99
        Max loop nest depth: 	6
        Additions: 		1334
        Multiplications: 	290
        Divisions: 		0
        Logical: 		0
        Reads: 			2420
        Writes: 		469
        Comparisons:		99
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest70.exe __orio_perftest70.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest70.exe  
Program Test Output: 
{'[6, 1, 0, 6, 3, 0, 1, 0, 1, 27, 2, 0, 0, 0, 0, 1, 1, 0]' : 0.284368}
{'[6, 1, 0, 6, 3, 0, 1, 0, 1, 27, 2, 0, 0, 0, 0, 1, 1, 0]' : 0.285991}
{'[6, 1, 0, 6, 3, 0, 1, 0, 1, 27, 2, 0, 0, 0, 0, 1, 1, 0]' : 0.286274}
{'[6, 1, 0, 6, 3, 0, 1, 0, 1, 27, 2, 0, 0, 0, 0, 1, 1, 0]' : 0.291416}
{'[6, 1, 0, 6, 3, 0, 1, 0, 1, 27, 2, 0, 0, 0, 0, 1, 1, 0]' : 0.290815}
{'[6, 1, 0, 6, 3, 0, 1, 0, 1, 27, 2, 0, 0, 0, 0, 1, 1, 0]' : 0.29191}
{'[6, 1, 0, 6, 3, 0, 1, 0, 1, 27, 2, 0, 0, 0, 0, 1, 1, 0]' : 0.290822}
{'[6, 1, 0, 6, 3, 0, 1, 0, 1, 27, 2, 0, 0, 0, 0, 1, 1, 0]' : 0.290867}
{'[6, 1, 0, 6, 3, 0, 1, 0, 1, 27, 2, 0, 0, 0, 0, 1, 1, 0]' : 0.291472}
{'[6, 1, 0, 6, 3, 0, 1, 0, 1, 27, 2, 0, 0, 0, 0, 1, 1, 0]' : 0.290626}
{'[6, 1, 0, 6, 3, 0, 1, 0, 1, 27, 2, 0, 0, 0, 0, 1, 1, 0]' : 0.291304}
{'[6, 1, 0, 6, 3, 0, 1, 0, 1, 27, 2, 0, 0, 0, 0, 1, 1, 0]' : 0.29105}
{'[6, 1, 0, 6, 3, 0, 1, 0, 1, 27, 2, 0, 0, 0, 0, 1, 1, 0]' : 0.287489}
{'[6, 1, 0, 6, 3, 0, 1, 0, 1, 27, 2, 0, 0, 0, 0, 1, 1, 0]' : 0.290641}
{'[6, 1, 0, 6, 3, 0, 1, 0, 1, 27, 2, 0, 0, 0, 0, 1, 1, 0]' : 0.285621}
{'[6, 1, 0, 6, 3, 0, 1, 0, 1, 27, 2, 0, 0, 0, 0, 1, 1, 0]' : 0.29256}
{'[6, 1, 0, 6, 3, 0, 1, 0, 1, 27, 2, 0, 0, 0, 0, 1, 1, 0]' : 0.290839}
{'[6, 1, 0, 6, 3, 0, 1, 0, 1, 27, 2, 0, 0, 0, 0, 1, 1, 0]' : 0.291093}
{'[6, 1, 0, 6, 3, 0, 1, 0, 1, 27, 2, 0, 0, 0, 0, 1, 1, 0]' : 0.288219}
{'[6, 1, 0, 6, 3, 0, 1, 0, 1, 27, 2, 0, 0, 0, 0, 1, 1, 0]' : 0.285631}
{'[6, 1, 0, 6, 3, 0, 1, 0, 1, 27, 2, 0, 0, 0, 0, 1, 1, 0]' : 0.290896}
{'[6, 1, 0, 6, 3, 0, 1, 0, 1, 27, 2, 0, 0, 0, 0, 1, 1, 0]' : 0.29155}
{'[6, 1, 0, 6, 3, 0, 1, 0, 1, 27, 2, 0, 0, 0, 0, 1, 1, 0]' : 0.292252}
{'[6, 1, 0, 6, 3, 0, 1, 0, 1, 27, 2, 0, 0, 0, 0, 1, 1, 0]' : 0.291131}
{'[6, 1, 0, 6, 3, 0, 1, 0, 1, 27, 2, 0, 0, 0, 0, 1, 1, 0]' : 0.290875}
{'[6, 1, 0, 6, 3, 0, 1, 0, 1, 27, 2, 0, 0, 0, 0, 1, 1, 0]' : 0.291845}
{'[6, 1, 0, 6, 3, 0, 1, 0, 1, 27, 2, 0, 0, 0, 0, 1, 1, 0]' : 0.284753}
{'[6, 1, 0, 6, 3, 0, 1, 0, 1, 27, 2, 0, 0, 0, 0, 1, 1, 0]' : 0.290696}
{'[6, 1, 0, 6, 3, 0, 1, 0, 1, 27, 2, 0, 0, 0, 0, 1, 1, 0]' : 0.291311}
{'[6, 1, 0, 6, 3, 0, 1, 0, 1, 27, 2, 0, 0, 0, 0, 1, 1, 0]' : 0.291827}

out:
 ["{'[6, 1, 0, 6, 3, 0, 1, 0, 1, 27, 2, 0, 0, 0, 0, 1, 1, 0]' : 0.284368}", "{'[6, 1, 0, 6, 3, 0, 1, 0, 1, 27, 2, 0, 0, 0, 0, 1, 1, 0]' : 0.285991}", "{'[6, 1, 0, 6, 3, 0, 1, 0, 1, 27, 2, 0, 0, 0, 0, 1, 1, 0]' : 0.286274}", "{'[6, 1, 0, 6, 3, 0, 1, 0, 1, 27, 2, 0, 0, 0, 0, 1, 1, 0]' : 0.291416}", "{'[6, 1, 0, 6, 3, 0, 1, 0, 1, 27, 2, 0, 0, 0, 0, 1, 1, 0]' : 0.290815}", "{'[6, 1, 0, 6, 3, 0, 1, 0, 1, 27, 2, 0, 0, 0, 0, 1, 1, 0]' : 0.29191}", "{'[6, 1, 0, 6, 3, 0, 1, 0, 1, 27, 2, 0, 0, 0, 0, 1, 1, 0]' : 0.290822}", "{'[6, 1, 0, 6, 3, 0, 1, 0, 1, 27, 2, 0, 0, 0, 0, 1, 1, 0]' : 0.290867}", "{'[6, 1, 0, 6, 3, 0, 1, 0, 1, 27, 2, 0, 0, 0, 0, 1, 1, 0]' : 0.291472}", "{'[6, 1, 0, 6, 3, 0, 1, 0, 1, 27, 2, 0, 0, 0, 0, 1, 1, 0]' : 0.290626}", "{'[6, 1, 0, 6, 3, 0, 1, 0, 1, 27, 2, 0, 0, 0, 0, 1, 1, 0]' : 0.291304}", "{'[6, 1, 0, 6, 3, 0, 1, 0, 1, 27, 2, 0, 0, 0, 0, 1, 1, 0]' : 0.29105}", "{'[6, 1, 0, 6, 3, 0, 1, 0, 1, 27, 2, 0, 0, 0, 0, 1, 1, 0]' : 0.287489}", "{'[6, 1, 0, 6, 3, 0, 1, 0, 1, 27, 2, 0, 0, 0, 0, 1, 1, 0]' : 0.290641}", "{'[6, 1, 0, 6, 3, 0, 1, 0, 1, 27, 2, 0, 0, 0, 0, 1, 1, 0]' : 0.285621}", "{'[6, 1, 0, 6, 3, 0, 1, 0, 1, 27, 2, 0, 0, 0, 0, 1, 1, 0]' : 0.29256}", "{'[6, 1, 0, 6, 3, 0, 1, 0, 1, 27, 2, 0, 0, 0, 0, 1, 1, 0]' : 0.290839}", "{'[6, 1, 0, 6, 3, 0, 1, 0, 1, 27, 2, 0, 0, 0, 0, 1, 1, 0]' : 0.291093}", "{'[6, 1, 0, 6, 3, 0, 1, 0, 1, 27, 2, 0, 0, 0, 0, 1, 1, 0]' : 0.288219}", "{'[6, 1, 0, 6, 3, 0, 1, 0, 1, 27, 2, 0, 0, 0, 0, 1, 1, 0]' : 0.285631}", "{'[6, 1, 0, 6, 3, 0, 1, 0, 1, 27, 2, 0, 0, 0, 0, 1, 1, 0]' : 0.290896}", "{'[6, 1, 0, 6, 3, 0, 1, 0, 1, 27, 2, 0, 0, 0, 0, 1, 1, 0]' : 0.29155}", "{'[6, 1, 0, 6, 3, 0, 1, 0, 1, 27, 2, 0, 0, 0, 0, 1, 1, 0]' : 0.292252}", "{'[6, 1, 0, 6, 3, 0, 1, 0, 1, 27, 2, 0, 0, 0, 0, 1, 1, 0]' : 0.291131}", "{'[6, 1, 0, 6, 3, 0, 1, 0, 1, 27, 2, 0, 0, 0, 0, 1, 1, 0]' : 0.290875}", "{'[6, 1, 0, 6, 3, 0, 1, 0, 1, 27, 2, 0, 0, 0, 0, 1, 1, 0]' : 0.291845}", "{'[6, 1, 0, 6, 3, 0, 1, 0, 1, 27, 2, 0, 0, 0, 0, 1, 1, 0]' : 0.284753}", "{'[6, 1, 0, 6, 3, 0, 1, 0, 1, 27, 2, 0, 0, 0, 0, 1, 1, 0]' : 0.290696}", "{'[6, 1, 0, 6, 3, 0, 1, 0, 1, 27, 2, 0, 0, 0, 0, 1, 1, 0]' : 0.291311}", "{'[6, 1, 0, 6, 3, 0, 1, 0, 1, 27, 2, 0, 0, 0, 0, 1, 1, 0]' : 0.291827}"]
returning from 'run': {'[6, 1, 0, 6, 3, 0, 1, 0, 1, 27, 2, 0, 0, 0, 0, 1, 1, 0]': ([0.284368, 0.285991, 0.286274, 0.291416, 0.290815, 0.29191, 0.290822, 0.290867, 0.291472, 0.290626, 0.291304, 0.29105, 0.287489, 0.290641, 0.285621, 0.29256, 0.290839, 0.291093, 0.288219, 0.285631, 0.290896, 0.29155, 0.292252, 0.291131, 0.290875, 0.291845, 0.284753, 0.290696, 0.291311, 0.291827], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 1, 0, 6, 3, 0, 1, 0, 1, 27, 2, 0, 0, 0, 0, 1, 1, 0]': ([0.284368, 0.285991, 0.286274, 0.291416, 0.290815, 0.29191, 0.290822, 0.290867, 0.291472, 0.290626, 0.291304, 0.29105, 0.287489, 0.290641, 0.285621, 0.29256, 0.290839, 0.291093, 0.288219, 0.285631, 0.290896, 0.29155, 0.292252, 0.291131, 0.290875, 0.291845, 0.284753, 0.290696, 0.291311, 0.291827], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		320
        Multiplications: 	72
        Divisions: 		0
        Logical: 		0
        Reads: 			694
        Writes: 		165
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest71.exe __orio_perftest71.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest71.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest71.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest71.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest71.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	36
        Max loop nest depth: 	6
        Additions: 		598
        Multiplications: 	192
        Divisions: 		0
        Logical: 		0
        Reads: 			1276
        Writes: 		270
        Comparisons:		36
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest72.exe __orio_perftest72.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest72.exe  
Program Test Output: 
{'[6, 1, 1, 5, 3, 1, 1, 1, 24, 4, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.251323}
{'[6, 1, 1, 5, 3, 1, 1, 1, 24, 4, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.240742}
{'[6, 1, 1, 5, 3, 1, 1, 1, 24, 4, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.218993}
{'[6, 1, 1, 5, 3, 1, 1, 1, 24, 4, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.219333}
{'[6, 1, 1, 5, 3, 1, 1, 1, 24, 4, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.219308}
{'[6, 1, 1, 5, 3, 1, 1, 1, 24, 4, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.21926}
{'[6, 1, 1, 5, 3, 1, 1, 1, 24, 4, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.213433}
{'[6, 1, 1, 5, 3, 1, 1, 1, 24, 4, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.213605}
{'[6, 1, 1, 5, 3, 1, 1, 1, 24, 4, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.219236}
{'[6, 1, 1, 5, 3, 1, 1, 1, 24, 4, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.21957}
{'[6, 1, 1, 5, 3, 1, 1, 1, 24, 4, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.219274}
{'[6, 1, 1, 5, 3, 1, 1, 1, 24, 4, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.219165}
{'[6, 1, 1, 5, 3, 1, 1, 1, 24, 4, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.219297}
{'[6, 1, 1, 5, 3, 1, 1, 1, 24, 4, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.219279}
{'[6, 1, 1, 5, 3, 1, 1, 1, 24, 4, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.219496}
{'[6, 1, 1, 5, 3, 1, 1, 1, 24, 4, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.219}
{'[6, 1, 1, 5, 3, 1, 1, 1, 24, 4, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.219417}
{'[6, 1, 1, 5, 3, 1, 1, 1, 24, 4, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.219066}
{'[6, 1, 1, 5, 3, 1, 1, 1, 24, 4, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.219352}
{'[6, 1, 1, 5, 3, 1, 1, 1, 24, 4, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.219262}
{'[6, 1, 1, 5, 3, 1, 1, 1, 24, 4, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.219434}
{'[6, 1, 1, 5, 3, 1, 1, 1, 24, 4, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.219571}
{'[6, 1, 1, 5, 3, 1, 1, 1, 24, 4, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.219089}
{'[6, 1, 1, 5, 3, 1, 1, 1, 24, 4, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.219468}
{'[6, 1, 1, 5, 3, 1, 1, 1, 24, 4, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.219204}
{'[6, 1, 1, 5, 3, 1, 1, 1, 24, 4, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.219108}
{'[6, 1, 1, 5, 3, 1, 1, 1, 24, 4, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.21941}
{'[6, 1, 1, 5, 3, 1, 1, 1, 24, 4, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.21927}
{'[6, 1, 1, 5, 3, 1, 1, 1, 24, 4, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.216996}
{'[6, 1, 1, 5, 3, 1, 1, 1, 24, 4, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.219439}

out:
 ["{'[6, 1, 1, 5, 3, 1, 1, 1, 24, 4, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.251323}", "{'[6, 1, 1, 5, 3, 1, 1, 1, 24, 4, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.240742}", "{'[6, 1, 1, 5, 3, 1, 1, 1, 24, 4, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.218993}", "{'[6, 1, 1, 5, 3, 1, 1, 1, 24, 4, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.219333}", "{'[6, 1, 1, 5, 3, 1, 1, 1, 24, 4, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.219308}", "{'[6, 1, 1, 5, 3, 1, 1, 1, 24, 4, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.21926}", "{'[6, 1, 1, 5, 3, 1, 1, 1, 24, 4, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.213433}", "{'[6, 1, 1, 5, 3, 1, 1, 1, 24, 4, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.213605}", "{'[6, 1, 1, 5, 3, 1, 1, 1, 24, 4, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.219236}", "{'[6, 1, 1, 5, 3, 1, 1, 1, 24, 4, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.21957}", "{'[6, 1, 1, 5, 3, 1, 1, 1, 24, 4, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.219274}", "{'[6, 1, 1, 5, 3, 1, 1, 1, 24, 4, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.219165}", "{'[6, 1, 1, 5, 3, 1, 1, 1, 24, 4, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.219297}", "{'[6, 1, 1, 5, 3, 1, 1, 1, 24, 4, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.219279}", "{'[6, 1, 1, 5, 3, 1, 1, 1, 24, 4, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.219496}", "{'[6, 1, 1, 5, 3, 1, 1, 1, 24, 4, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.219}", "{'[6, 1, 1, 5, 3, 1, 1, 1, 24, 4, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.219417}", "{'[6, 1, 1, 5, 3, 1, 1, 1, 24, 4, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.219066}", "{'[6, 1, 1, 5, 3, 1, 1, 1, 24, 4, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.219352}", "{'[6, 1, 1, 5, 3, 1, 1, 1, 24, 4, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.219262}", "{'[6, 1, 1, 5, 3, 1, 1, 1, 24, 4, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.219434}", "{'[6, 1, 1, 5, 3, 1, 1, 1, 24, 4, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.219571}", "{'[6, 1, 1, 5, 3, 1, 1, 1, 24, 4, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.219089}", "{'[6, 1, 1, 5, 3, 1, 1, 1, 24, 4, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.219468}", "{'[6, 1, 1, 5, 3, 1, 1, 1, 24, 4, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.219204}", "{'[6, 1, 1, 5, 3, 1, 1, 1, 24, 4, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.219108}", "{'[6, 1, 1, 5, 3, 1, 1, 1, 24, 4, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.21941}", "{'[6, 1, 1, 5, 3, 1, 1, 1, 24, 4, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.21927}", "{'[6, 1, 1, 5, 3, 1, 1, 1, 24, 4, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.216996}", "{'[6, 1, 1, 5, 3, 1, 1, 1, 24, 4, 2, 0, 0, 1, 1, 1, 0, 0]' : 0.219439}"]
returning from 'run': {'[6, 1, 1, 5, 3, 1, 1, 1, 24, 4, 2, 0, 0, 1, 1, 1, 0, 0]': ([0.251323, 0.240742, 0.218993, 0.219333, 0.219308, 0.21926, 0.213433, 0.213605, 0.219236, 0.21957, 0.219274, 0.219165, 0.219297, 0.219279, 0.219496, 0.219, 0.219417, 0.219066, 0.219352, 0.219262, 0.219434, 0.219571, 0.219089, 0.219468, 0.219204, 0.219108, 0.21941, 0.21927, 0.216996, 0.219439], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 1, 1, 5, 3, 1, 1, 1, 24, 4, 2, 0, 0, 1, 1, 1, 0, 0]': ([0.251323, 0.240742, 0.218993, 0.219333, 0.219308, 0.21926, 0.213433, 0.213605, 0.219236, 0.21957, 0.219274, 0.219165, 0.219297, 0.219279, 0.219496, 0.219, 0.219417, 0.219066, 0.219352, 0.219262, 0.219434, 0.219571, 0.219089, 0.219468, 0.219204, 0.219108, 0.21941, 0.21927, 0.216996, 0.219439], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		234
        Multiplications: 	64
        Divisions: 		0
        Logical: 		0
        Reads: 			565
        Writes: 		149
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest73.exe __orio_perftest73.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest73.exe  
Program Test Output: 
{'[0, 1, 3, 4, 3, 5, 1, 0, 26, 0, 2, 26, 0, 0, 0, 1, 1, 0]' : 0.242597}
{'[0, 1, 3, 4, 3, 5, 1, 0, 26, 0, 2, 26, 0, 0, 0, 1, 1, 0]' : 0.235466}
{'[0, 1, 3, 4, 3, 5, 1, 0, 26, 0, 2, 26, 0, 0, 0, 1, 1, 0]' : 0.214155}
{'[0, 1, 3, 4, 3, 5, 1, 0, 26, 0, 2, 26, 0, 0, 0, 1, 1, 0]' : 0.214236}
{'[0, 1, 3, 4, 3, 5, 1, 0, 26, 0, 2, 26, 0, 0, 0, 1, 1, 0]' : 0.214257}
{'[0, 1, 3, 4, 3, 5, 1, 0, 26, 0, 2, 26, 0, 0, 0, 1, 1, 0]' : 0.214427}
{'[0, 1, 3, 4, 3, 5, 1, 0, 26, 0, 2, 26, 0, 0, 0, 1, 1, 0]' : 0.214203}
{'[0, 1, 3, 4, 3, 5, 1, 0, 26, 0, 2, 26, 0, 0, 0, 1, 1, 0]' : 0.214422}
{'[0, 1, 3, 4, 3, 5, 1, 0, 26, 0, 2, 26, 0, 0, 0, 1, 1, 0]' : 0.214251}
{'[0, 1, 3, 4, 3, 5, 1, 0, 26, 0, 2, 26, 0, 0, 0, 1, 1, 0]' : 0.212268}
{'[0, 1, 3, 4, 3, 5, 1, 0, 26, 0, 2, 26, 0, 0, 0, 1, 1, 0]' : 0.214226}
{'[0, 1, 3, 4, 3, 5, 1, 0, 26, 0, 2, 26, 0, 0, 0, 1, 1, 0]' : 0.214257}
{'[0, 1, 3, 4, 3, 5, 1, 0, 26, 0, 2, 26, 0, 0, 0, 1, 1, 0]' : 0.214326}
{'[0, 1, 3, 4, 3, 5, 1, 0, 26, 0, 2, 26, 0, 0, 0, 1, 1, 0]' : 0.214223}
{'[0, 1, 3, 4, 3, 5, 1, 0, 26, 0, 2, 26, 0, 0, 0, 1, 1, 0]' : 0.214372}
{'[0, 1, 3, 4, 3, 5, 1, 0, 26, 0, 2, 26, 0, 0, 0, 1, 1, 0]' : 0.214214}
{'[0, 1, 3, 4, 3, 5, 1, 0, 26, 0, 2, 26, 0, 0, 0, 1, 1, 0]' : 0.20982}
{'[0, 1, 3, 4, 3, 5, 1, 0, 26, 0, 2, 26, 0, 0, 0, 1, 1, 0]' : 0.214208}
{'[0, 1, 3, 4, 3, 5, 1, 0, 26, 0, 2, 26, 0, 0, 0, 1, 1, 0]' : 0.214242}
{'[0, 1, 3, 4, 3, 5, 1, 0, 26, 0, 2, 26, 0, 0, 0, 1, 1, 0]' : 0.214352}
{'[0, 1, 3, 4, 3, 5, 1, 0, 26, 0, 2, 26, 0, 0, 0, 1, 1, 0]' : 0.214281}
{'[0, 1, 3, 4, 3, 5, 1, 0, 26, 0, 2, 26, 0, 0, 0, 1, 1, 0]' : 0.214267}
{'[0, 1, 3, 4, 3, 5, 1, 0, 26, 0, 2, 26, 0, 0, 0, 1, 1, 0]' : 0.214186}
{'[0, 1, 3, 4, 3, 5, 1, 0, 26, 0, 2, 26, 0, 0, 0, 1, 1, 0]' : 0.214269}
{'[0, 1, 3, 4, 3, 5, 1, 0, 26, 0, 2, 26, 0, 0, 0, 1, 1, 0]' : 0.214333}
{'[0, 1, 3, 4, 3, 5, 1, 0, 26, 0, 2, 26, 0, 0, 0, 1, 1, 0]' : 0.214448}
{'[0, 1, 3, 4, 3, 5, 1, 0, 26, 0, 2, 26, 0, 0, 0, 1, 1, 0]' : 0.214278}
{'[0, 1, 3, 4, 3, 5, 1, 0, 26, 0, 2, 26, 0, 0, 0, 1, 1, 0]' : 0.214267}
{'[0, 1, 3, 4, 3, 5, 1, 0, 26, 0, 2, 26, 0, 0, 0, 1, 1, 0]' : 0.212343}
{'[0, 1, 3, 4, 3, 5, 1, 0, 26, 0, 2, 26, 0, 0, 0, 1, 1, 0]' : 0.21427}

out:
 ["{'[0, 1, 3, 4, 3, 5, 1, 0, 26, 0, 2, 26, 0, 0, 0, 1, 1, 0]' : 0.242597}", "{'[0, 1, 3, 4, 3, 5, 1, 0, 26, 0, 2, 26, 0, 0, 0, 1, 1, 0]' : 0.235466}", "{'[0, 1, 3, 4, 3, 5, 1, 0, 26, 0, 2, 26, 0, 0, 0, 1, 1, 0]' : 0.214155}", "{'[0, 1, 3, 4, 3, 5, 1, 0, 26, 0, 2, 26, 0, 0, 0, 1, 1, 0]' : 0.214236}", "{'[0, 1, 3, 4, 3, 5, 1, 0, 26, 0, 2, 26, 0, 0, 0, 1, 1, 0]' : 0.214257}", "{'[0, 1, 3, 4, 3, 5, 1, 0, 26, 0, 2, 26, 0, 0, 0, 1, 1, 0]' : 0.214427}", "{'[0, 1, 3, 4, 3, 5, 1, 0, 26, 0, 2, 26, 0, 0, 0, 1, 1, 0]' : 0.214203}", "{'[0, 1, 3, 4, 3, 5, 1, 0, 26, 0, 2, 26, 0, 0, 0, 1, 1, 0]' : 0.214422}", "{'[0, 1, 3, 4, 3, 5, 1, 0, 26, 0, 2, 26, 0, 0, 0, 1, 1, 0]' : 0.214251}", "{'[0, 1, 3, 4, 3, 5, 1, 0, 26, 0, 2, 26, 0, 0, 0, 1, 1, 0]' : 0.212268}", "{'[0, 1, 3, 4, 3, 5, 1, 0, 26, 0, 2, 26, 0, 0, 0, 1, 1, 0]' : 0.214226}", "{'[0, 1, 3, 4, 3, 5, 1, 0, 26, 0, 2, 26, 0, 0, 0, 1, 1, 0]' : 0.214257}", "{'[0, 1, 3, 4, 3, 5, 1, 0, 26, 0, 2, 26, 0, 0, 0, 1, 1, 0]' : 0.214326}", "{'[0, 1, 3, 4, 3, 5, 1, 0, 26, 0, 2, 26, 0, 0, 0, 1, 1, 0]' : 0.214223}", "{'[0, 1, 3, 4, 3, 5, 1, 0, 26, 0, 2, 26, 0, 0, 0, 1, 1, 0]' : 0.214372}", "{'[0, 1, 3, 4, 3, 5, 1, 0, 26, 0, 2, 26, 0, 0, 0, 1, 1, 0]' : 0.214214}", "{'[0, 1, 3, 4, 3, 5, 1, 0, 26, 0, 2, 26, 0, 0, 0, 1, 1, 0]' : 0.20982}", "{'[0, 1, 3, 4, 3, 5, 1, 0, 26, 0, 2, 26, 0, 0, 0, 1, 1, 0]' : 0.214208}", "{'[0, 1, 3, 4, 3, 5, 1, 0, 26, 0, 2, 26, 0, 0, 0, 1, 1, 0]' : 0.214242}", "{'[0, 1, 3, 4, 3, 5, 1, 0, 26, 0, 2, 26, 0, 0, 0, 1, 1, 0]' : 0.214352}", "{'[0, 1, 3, 4, 3, 5, 1, 0, 26, 0, 2, 26, 0, 0, 0, 1, 1, 0]' : 0.214281}", "{'[0, 1, 3, 4, 3, 5, 1, 0, 26, 0, 2, 26, 0, 0, 0, 1, 1, 0]' : 0.214267}", "{'[0, 1, 3, 4, 3, 5, 1, 0, 26, 0, 2, 26, 0, 0, 0, 1, 1, 0]' : 0.214186}", "{'[0, 1, 3, 4, 3, 5, 1, 0, 26, 0, 2, 26, 0, 0, 0, 1, 1, 0]' : 0.214269}", "{'[0, 1, 3, 4, 3, 5, 1, 0, 26, 0, 2, 26, 0, 0, 0, 1, 1, 0]' : 0.214333}", "{'[0, 1, 3, 4, 3, 5, 1, 0, 26, 0, 2, 26, 0, 0, 0, 1, 1, 0]' : 0.214448}", "{'[0, 1, 3, 4, 3, 5, 1, 0, 26, 0, 2, 26, 0, 0, 0, 1, 1, 0]' : 0.214278}", "{'[0, 1, 3, 4, 3, 5, 1, 0, 26, 0, 2, 26, 0, 0, 0, 1, 1, 0]' : 0.214267}", "{'[0, 1, 3, 4, 3, 5, 1, 0, 26, 0, 2, 26, 0, 0, 0, 1, 1, 0]' : 0.212343}", "{'[0, 1, 3, 4, 3, 5, 1, 0, 26, 0, 2, 26, 0, 0, 0, 1, 1, 0]' : 0.21427}"]
returning from 'run': {'[0, 1, 3, 4, 3, 5, 1, 0, 26, 0, 2, 26, 0, 0, 0, 1, 1, 0]': ([0.242597, 0.235466, 0.214155, 0.214236, 0.214257, 0.214427, 0.214203, 0.214422, 0.214251, 0.212268, 0.214226, 0.214257, 0.214326, 0.214223, 0.214372, 0.214214, 0.20982, 0.214208, 0.214242, 0.214352, 0.214281, 0.214267, 0.214186, 0.214269, 0.214333, 0.214448, 0.214278, 0.214267, 0.212343, 0.21427], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 3, 4, 3, 5, 1, 0, 26, 0, 2, 26, 0, 0, 0, 1, 1, 0]': ([0.242597, 0.235466, 0.214155, 0.214236, 0.214257, 0.214427, 0.214203, 0.214422, 0.214251, 0.212268, 0.214226, 0.214257, 0.214326, 0.214223, 0.214372, 0.214214, 0.20982, 0.214208, 0.214242, 0.214352, 0.214281, 0.214267, 0.214186, 0.214269, 0.214333, 0.214448, 0.214278, 0.214267, 0.212343, 0.21427], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	31
        Max loop nest depth: 	6
        Additions: 		590
        Multiplications: 	234
        Divisions: 		0
        Logical: 		0
        Reads: 			1246
        Writes: 		244
        Comparisons:		31
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest74.exe __orio_perftest74.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest74.exe  
Program Test Output: 
{'[2, 1, 1, 5, 3, 4, 1, 0, 3, 3, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.117618}
{'[2, 1, 1, 5, 3, 4, 1, 0, 3, 3, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.117508}
{'[2, 1, 1, 5, 3, 4, 1, 0, 3, 3, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.117412}
{'[2, 1, 1, 5, 3, 4, 1, 0, 3, 3, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.117464}
{'[2, 1, 1, 5, 3, 4, 1, 0, 3, 3, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.109545}
{'[2, 1, 1, 5, 3, 4, 1, 0, 3, 3, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.104807}
{'[2, 1, 1, 5, 3, 4, 1, 0, 3, 3, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.104771}
{'[2, 1, 1, 5, 3, 4, 1, 0, 3, 3, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.102572}
{'[2, 1, 1, 5, 3, 4, 1, 0, 3, 3, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.10215}
{'[2, 1, 1, 5, 3, 4, 1, 0, 3, 3, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.102232}
{'[2, 1, 1, 5, 3, 4, 1, 0, 3, 3, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.101979}
{'[2, 1, 1, 5, 3, 4, 1, 0, 3, 3, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.10234}
{'[2, 1, 1, 5, 3, 4, 1, 0, 3, 3, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.102422}
{'[2, 1, 1, 5, 3, 4, 1, 0, 3, 3, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.102052}
{'[2, 1, 1, 5, 3, 4, 1, 0, 3, 3, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.102291}
{'[2, 1, 1, 5, 3, 4, 1, 0, 3, 3, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.10204}
{'[2, 1, 1, 5, 3, 4, 1, 0, 3, 3, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.102026}
{'[2, 1, 1, 5, 3, 4, 1, 0, 3, 3, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.0990891}
{'[2, 1, 1, 5, 3, 4, 1, 0, 3, 3, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.0990191}
{'[2, 1, 1, 5, 3, 4, 1, 0, 3, 3, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.100141}
{'[2, 1, 1, 5, 3, 4, 1, 0, 3, 3, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.102045}
{'[2, 1, 1, 5, 3, 4, 1, 0, 3, 3, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.102095}
{'[2, 1, 1, 5, 3, 4, 1, 0, 3, 3, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.10243}
{'[2, 1, 1, 5, 3, 4, 1, 0, 3, 3, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.102166}
{'[2, 1, 1, 5, 3, 4, 1, 0, 3, 3, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.102324}
{'[2, 1, 1, 5, 3, 4, 1, 0, 3, 3, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.102024}
{'[2, 1, 1, 5, 3, 4, 1, 0, 3, 3, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.101612}
{'[2, 1, 1, 5, 3, 4, 1, 0, 3, 3, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.0990798}
{'[2, 1, 1, 5, 3, 4, 1, 0, 3, 3, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.099102}
{'[2, 1, 1, 5, 3, 4, 1, 0, 3, 3, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.100531}

out:
 ["{'[2, 1, 1, 5, 3, 4, 1, 0, 3, 3, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.117618}", "{'[2, 1, 1, 5, 3, 4, 1, 0, 3, 3, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.117508}", "{'[2, 1, 1, 5, 3, 4, 1, 0, 3, 3, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.117412}", "{'[2, 1, 1, 5, 3, 4, 1, 0, 3, 3, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.117464}", "{'[2, 1, 1, 5, 3, 4, 1, 0, 3, 3, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.109545}", "{'[2, 1, 1, 5, 3, 4, 1, 0, 3, 3, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.104807}", "{'[2, 1, 1, 5, 3, 4, 1, 0, 3, 3, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.104771}", "{'[2, 1, 1, 5, 3, 4, 1, 0, 3, 3, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.102572}", "{'[2, 1, 1, 5, 3, 4, 1, 0, 3, 3, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.10215}", "{'[2, 1, 1, 5, 3, 4, 1, 0, 3, 3, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.102232}", "{'[2, 1, 1, 5, 3, 4, 1, 0, 3, 3, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.101979}", "{'[2, 1, 1, 5, 3, 4, 1, 0, 3, 3, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.10234}", "{'[2, 1, 1, 5, 3, 4, 1, 0, 3, 3, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.102422}", "{'[2, 1, 1, 5, 3, 4, 1, 0, 3, 3, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.102052}", "{'[2, 1, 1, 5, 3, 4, 1, 0, 3, 3, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.102291}", "{'[2, 1, 1, 5, 3, 4, 1, 0, 3, 3, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.10204}", "{'[2, 1, 1, 5, 3, 4, 1, 0, 3, 3, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.102026}", "{'[2, 1, 1, 5, 3, 4, 1, 0, 3, 3, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.0990891}", "{'[2, 1, 1, 5, 3, 4, 1, 0, 3, 3, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.0990191}", "{'[2, 1, 1, 5, 3, 4, 1, 0, 3, 3, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.100141}", "{'[2, 1, 1, 5, 3, 4, 1, 0, 3, 3, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.102045}", "{'[2, 1, 1, 5, 3, 4, 1, 0, 3, 3, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.102095}", "{'[2, 1, 1, 5, 3, 4, 1, 0, 3, 3, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.10243}", "{'[2, 1, 1, 5, 3, 4, 1, 0, 3, 3, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.102166}", "{'[2, 1, 1, 5, 3, 4, 1, 0, 3, 3, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.102324}", "{'[2, 1, 1, 5, 3, 4, 1, 0, 3, 3, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.102024}", "{'[2, 1, 1, 5, 3, 4, 1, 0, 3, 3, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.101612}", "{'[2, 1, 1, 5, 3, 4, 1, 0, 3, 3, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.0990798}", "{'[2, 1, 1, 5, 3, 4, 1, 0, 3, 3, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.099102}", "{'[2, 1, 1, 5, 3, 4, 1, 0, 3, 3, 2, 0, 1, 1, 0, 1, 0, 0]' : 0.100531}"]
returning from 'run': {'[2, 1, 1, 5, 3, 4, 1, 0, 3, 3, 2, 0, 1, 1, 0, 1, 0, 0]': ([0.117618, 0.117508, 0.117412, 0.117464, 0.109545, 0.104807, 0.104771, 0.102572, 0.10215, 0.102232, 0.101979, 0.10234, 0.102422, 0.102052, 0.102291, 0.10204, 0.102026, 0.0990891, 0.0990191, 0.100141, 0.102045, 0.102095, 0.10243, 0.102166, 0.102324, 0.102024, 0.101612, 0.0990798, 0.099102, 0.100531], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 1, 1, 5, 3, 4, 1, 0, 3, 3, 2, 0, 1, 1, 0, 1, 0, 0]': ([0.117618, 0.117508, 0.117412, 0.117464, 0.109545, 0.104807, 0.104771, 0.102572, 0.10215, 0.102232, 0.101979, 0.10234, 0.102422, 0.102052, 0.102291, 0.10204, 0.102026, 0.0990891, 0.0990191, 0.100141, 0.102045, 0.102095, 0.10243, 0.102166, 0.102324, 0.102024, 0.101612, 0.0990798, 0.099102, 0.100531], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	26
        Max loop nest depth: 	6
        Additions: 		596
        Multiplications: 	216
        Divisions: 		0
        Logical: 		0
        Reads: 			1244
        Writes: 		258
        Comparisons:		26
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest75.exe __orio_perftest75.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest75.exe  
Program Test Output: 
{'[1, 1, 3, 6, 3, 2, 1, 1, 26, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.10929}
{'[1, 1, 3, 6, 3, 2, 1, 1, 26, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.109381}
{'[1, 1, 3, 6, 3, 2, 1, 1, 26, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.109203}
{'[1, 1, 3, 6, 3, 2, 1, 1, 26, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.103812}
{'[1, 1, 3, 6, 3, 2, 1, 1, 26, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0954039}
{'[1, 1, 3, 6, 3, 2, 1, 1, 26, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.09548}
{'[1, 1, 3, 6, 3, 2, 1, 1, 26, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0955281}
{'[1, 1, 3, 6, 3, 2, 1, 1, 26, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0955179}
{'[1, 1, 3, 6, 3, 2, 1, 1, 26, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0955439}
{'[1, 1, 3, 6, 3, 2, 1, 1, 26, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0955329}
{'[1, 1, 3, 6, 3, 2, 1, 1, 26, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0955608}
{'[1, 1, 3, 6, 3, 2, 1, 1, 26, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0955448}
{'[1, 1, 3, 6, 3, 2, 1, 1, 26, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.095408}
{'[1, 1, 3, 6, 3, 2, 1, 1, 26, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0955272}
{'[1, 1, 3, 6, 3, 2, 1, 1, 26, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0954189}
{'[1, 1, 3, 6, 3, 2, 1, 1, 26, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0954409}
{'[1, 1, 3, 6, 3, 2, 1, 1, 26, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0955961}
{'[1, 1, 3, 6, 3, 2, 1, 1, 26, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0958691}
{'[1, 1, 3, 6, 3, 2, 1, 1, 26, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.095484}
{'[1, 1, 3, 6, 3, 2, 1, 1, 26, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0957069}
{'[1, 1, 3, 6, 3, 2, 1, 1, 26, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0954421}
{'[1, 1, 3, 6, 3, 2, 1, 1, 26, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0955009}
{'[1, 1, 3, 6, 3, 2, 1, 1, 26, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0954161}
{'[1, 1, 3, 6, 3, 2, 1, 1, 26, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.095525}
{'[1, 1, 3, 6, 3, 2, 1, 1, 26, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0971038}
{'[1, 1, 3, 6, 3, 2, 1, 1, 26, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.097892}
{'[1, 1, 3, 6, 3, 2, 1, 1, 26, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0954511}
{'[1, 1, 3, 6, 3, 2, 1, 1, 26, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.095578}
{'[1, 1, 3, 6, 3, 2, 1, 1, 26, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0956669}
{'[1, 1, 3, 6, 3, 2, 1, 1, 26, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.095583}

out:
 ["{'[1, 1, 3, 6, 3, 2, 1, 1, 26, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.10929}", "{'[1, 1, 3, 6, 3, 2, 1, 1, 26, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.109381}", "{'[1, 1, 3, 6, 3, 2, 1, 1, 26, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.109203}", "{'[1, 1, 3, 6, 3, 2, 1, 1, 26, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.103812}", "{'[1, 1, 3, 6, 3, 2, 1, 1, 26, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0954039}", "{'[1, 1, 3, 6, 3, 2, 1, 1, 26, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.09548}", "{'[1, 1, 3, 6, 3, 2, 1, 1, 26, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0955281}", "{'[1, 1, 3, 6, 3, 2, 1, 1, 26, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0955179}", "{'[1, 1, 3, 6, 3, 2, 1, 1, 26, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0955439}", "{'[1, 1, 3, 6, 3, 2, 1, 1, 26, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0955329}", "{'[1, 1, 3, 6, 3, 2, 1, 1, 26, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0955608}", "{'[1, 1, 3, 6, 3, 2, 1, 1, 26, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0955448}", "{'[1, 1, 3, 6, 3, 2, 1, 1, 26, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.095408}", "{'[1, 1, 3, 6, 3, 2, 1, 1, 26, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0955272}", "{'[1, 1, 3, 6, 3, 2, 1, 1, 26, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0954189}", "{'[1, 1, 3, 6, 3, 2, 1, 1, 26, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0954409}", "{'[1, 1, 3, 6, 3, 2, 1, 1, 26, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0955961}", "{'[1, 1, 3, 6, 3, 2, 1, 1, 26, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0958691}", "{'[1, 1, 3, 6, 3, 2, 1, 1, 26, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.095484}", "{'[1, 1, 3, 6, 3, 2, 1, 1, 26, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0957069}", "{'[1, 1, 3, 6, 3, 2, 1, 1, 26, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0954421}", "{'[1, 1, 3, 6, 3, 2, 1, 1, 26, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0955009}", "{'[1, 1, 3, 6, 3, 2, 1, 1, 26, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0954161}", "{'[1, 1, 3, 6, 3, 2, 1, 1, 26, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.095525}", "{'[1, 1, 3, 6, 3, 2, 1, 1, 26, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0971038}", "{'[1, 1, 3, 6, 3, 2, 1, 1, 26, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.097892}", "{'[1, 1, 3, 6, 3, 2, 1, 1, 26, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0954511}", "{'[1, 1, 3, 6, 3, 2, 1, 1, 26, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.095578}", "{'[1, 1, 3, 6, 3, 2, 1, 1, 26, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0956669}", "{'[1, 1, 3, 6, 3, 2, 1, 1, 26, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.095583}"]
returning from 'run': {'[1, 1, 3, 6, 3, 2, 1, 1, 26, 0, 2, 0, 1, 0, 1, 1, 0, 1]': ([0.10929, 0.109381, 0.109203, 0.103812, 0.0954039, 0.09548, 0.0955281, 0.0955179, 0.0955439, 0.0955329, 0.0955608, 0.0955448, 0.095408, 0.0955272, 0.0954189, 0.0954409, 0.0955961, 0.0958691, 0.095484, 0.0957069, 0.0954421, 0.0955009, 0.0954161, 0.095525, 0.0971038, 0.097892, 0.0954511, 0.095578, 0.0956669, 0.095583], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 1, 3, 6, 3, 2, 1, 1, 26, 0, 2, 0, 1, 0, 1, 1, 0, 1]': ([0.10929, 0.109381, 0.109203, 0.103812, 0.0954039, 0.09548, 0.0955281, 0.0955179, 0.0955439, 0.0955329, 0.0955608, 0.0955448, 0.095408, 0.0955272, 0.0954189, 0.0954409, 0.0955961, 0.0958691, 0.095484, 0.0957069, 0.0954421, 0.0955009, 0.0954161, 0.095525, 0.0971038, 0.097892, 0.0954511, 0.095578, 0.0956669, 0.095583], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	6
        Additions: 		989
        Multiplications: 	462
        Divisions: 		0
        Logical: 		0
        Reads: 			2105
        Writes: 		391
        Comparisons:		22
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest76.exe __orio_perftest76.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest76.exe  
Program Test Output: 
{'[6, 1, 0, 6, 3, 4, 1, 0, 28, 0, 2, 1, 2, 0, 0, 1, 0, 0]' : 0.163476}
{'[6, 1, 0, 6, 3, 4, 1, 0, 28, 0, 2, 1, 2, 0, 0, 1, 0, 0]' : 0.162185}
{'[6, 1, 0, 6, 3, 4, 1, 0, 28, 0, 2, 1, 2, 0, 0, 1, 0, 0]' : 0.160242}
{'[6, 1, 0, 6, 3, 4, 1, 0, 28, 0, 2, 1, 2, 0, 0, 1, 0, 0]' : 0.162936}
{'[6, 1, 0, 6, 3, 4, 1, 0, 28, 0, 2, 1, 2, 0, 0, 1, 0, 0]' : 0.163684}
{'[6, 1, 0, 6, 3, 4, 1, 0, 28, 0, 2, 1, 2, 0, 0, 1, 0, 0]' : 0.163767}
{'[6, 1, 0, 6, 3, 4, 1, 0, 28, 0, 2, 1, 2, 0, 0, 1, 0, 0]' : 0.162859}
{'[6, 1, 0, 6, 3, 4, 1, 0, 28, 0, 2, 1, 2, 0, 0, 1, 0, 0]' : 0.163131}
{'[6, 1, 0, 6, 3, 4, 1, 0, 28, 0, 2, 1, 2, 0, 0, 1, 0, 0]' : 0.15971}
{'[6, 1, 0, 6, 3, 4, 1, 0, 28, 0, 2, 1, 2, 0, 0, 1, 0, 0]' : 0.161526}
{'[6, 1, 0, 6, 3, 4, 1, 0, 28, 0, 2, 1, 2, 0, 0, 1, 0, 0]' : 0.16283}
{'[6, 1, 0, 6, 3, 4, 1, 0, 28, 0, 2, 1, 2, 0, 0, 1, 0, 0]' : 0.162972}
{'[6, 1, 0, 6, 3, 4, 1, 0, 28, 0, 2, 1, 2, 0, 0, 1, 0, 0]' : 0.163855}
{'[6, 1, 0, 6, 3, 4, 1, 0, 28, 0, 2, 1, 2, 0, 0, 1, 0, 0]' : 0.163404}
{'[6, 1, 0, 6, 3, 4, 1, 0, 28, 0, 2, 1, 2, 0, 0, 1, 0, 0]' : 0.162796}
{'[6, 1, 0, 6, 3, 4, 1, 0, 28, 0, 2, 1, 2, 0, 0, 1, 0, 0]' : 0.161474}
{'[6, 1, 0, 6, 3, 4, 1, 0, 28, 0, 2, 1, 2, 0, 0, 1, 0, 0]' : 0.160223}
{'[6, 1, 0, 6, 3, 4, 1, 0, 28, 0, 2, 1, 2, 0, 0, 1, 0, 0]' : 0.160189}
{'[6, 1, 0, 6, 3, 4, 1, 0, 28, 0, 2, 1, 2, 0, 0, 1, 0, 0]' : 0.161662}
{'[6, 1, 0, 6, 3, 4, 1, 0, 28, 0, 2, 1, 2, 0, 0, 1, 0, 0]' : 0.162689}
{'[6, 1, 0, 6, 3, 4, 1, 0, 28, 0, 2, 1, 2, 0, 0, 1, 0, 0]' : 0.162881}
{'[6, 1, 0, 6, 3, 4, 1, 0, 28, 0, 2, 1, 2, 0, 0, 1, 0, 0]' : 0.16165}
{'[6, 1, 0, 6, 3, 4, 1, 0, 28, 0, 2, 1, 2, 0, 0, 1, 0, 0]' : 0.163249}
{'[6, 1, 0, 6, 3, 4, 1, 0, 28, 0, 2, 1, 2, 0, 0, 1, 0, 0]' : 0.162973}
{'[6, 1, 0, 6, 3, 4, 1, 0, 28, 0, 2, 1, 2, 0, 0, 1, 0, 0]' : 0.164592}
{'[6, 1, 0, 6, 3, 4, 1, 0, 28, 0, 2, 1, 2, 0, 0, 1, 0, 0]' : 0.163591}
{'[6, 1, 0, 6, 3, 4, 1, 0, 28, 0, 2, 1, 2, 0, 0, 1, 0, 0]' : 0.163699}
{'[6, 1, 0, 6, 3, 4, 1, 0, 28, 0, 2, 1, 2, 0, 0, 1, 0, 0]' : 0.163677}
{'[6, 1, 0, 6, 3, 4, 1, 0, 28, 0, 2, 1, 2, 0, 0, 1, 0, 0]' : 0.162925}
{'[6, 1, 0, 6, 3, 4, 1, 0, 28, 0, 2, 1, 2, 0, 0, 1, 0, 0]' : 0.163216}

out:
 ["{'[6, 1, 0, 6, 3, 4, 1, 0, 28, 0, 2, 1, 2, 0, 0, 1, 0, 0]' : 0.163476}", "{'[6, 1, 0, 6, 3, 4, 1, 0, 28, 0, 2, 1, 2, 0, 0, 1, 0, 0]' : 0.162185}", "{'[6, 1, 0, 6, 3, 4, 1, 0, 28, 0, 2, 1, 2, 0, 0, 1, 0, 0]' : 0.160242}", "{'[6, 1, 0, 6, 3, 4, 1, 0, 28, 0, 2, 1, 2, 0, 0, 1, 0, 0]' : 0.162936}", "{'[6, 1, 0, 6, 3, 4, 1, 0, 28, 0, 2, 1, 2, 0, 0, 1, 0, 0]' : 0.163684}", "{'[6, 1, 0, 6, 3, 4, 1, 0, 28, 0, 2, 1, 2, 0, 0, 1, 0, 0]' : 0.163767}", "{'[6, 1, 0, 6, 3, 4, 1, 0, 28, 0, 2, 1, 2, 0, 0, 1, 0, 0]' : 0.162859}", "{'[6, 1, 0, 6, 3, 4, 1, 0, 28, 0, 2, 1, 2, 0, 0, 1, 0, 0]' : 0.163131}", "{'[6, 1, 0, 6, 3, 4, 1, 0, 28, 0, 2, 1, 2, 0, 0, 1, 0, 0]' : 0.15971}", "{'[6, 1, 0, 6, 3, 4, 1, 0, 28, 0, 2, 1, 2, 0, 0, 1, 0, 0]' : 0.161526}", "{'[6, 1, 0, 6, 3, 4, 1, 0, 28, 0, 2, 1, 2, 0, 0, 1, 0, 0]' : 0.16283}", "{'[6, 1, 0, 6, 3, 4, 1, 0, 28, 0, 2, 1, 2, 0, 0, 1, 0, 0]' : 0.162972}", "{'[6, 1, 0, 6, 3, 4, 1, 0, 28, 0, 2, 1, 2, 0, 0, 1, 0, 0]' : 0.163855}", "{'[6, 1, 0, 6, 3, 4, 1, 0, 28, 0, 2, 1, 2, 0, 0, 1, 0, 0]' : 0.163404}", "{'[6, 1, 0, 6, 3, 4, 1, 0, 28, 0, 2, 1, 2, 0, 0, 1, 0, 0]' : 0.162796}", "{'[6, 1, 0, 6, 3, 4, 1, 0, 28, 0, 2, 1, 2, 0, 0, 1, 0, 0]' : 0.161474}", "{'[6, 1, 0, 6, 3, 4, 1, 0, 28, 0, 2, 1, 2, 0, 0, 1, 0, 0]' : 0.160223}", "{'[6, 1, 0, 6, 3, 4, 1, 0, 28, 0, 2, 1, 2, 0, 0, 1, 0, 0]' : 0.160189}", "{'[6, 1, 0, 6, 3, 4, 1, 0, 28, 0, 2, 1, 2, 0, 0, 1, 0, 0]' : 0.161662}", "{'[6, 1, 0, 6, 3, 4, 1, 0, 28, 0, 2, 1, 2, 0, 0, 1, 0, 0]' : 0.162689}", "{'[6, 1, 0, 6, 3, 4, 1, 0, 28, 0, 2, 1, 2, 0, 0, 1, 0, 0]' : 0.162881}", "{'[6, 1, 0, 6, 3, 4, 1, 0, 28, 0, 2, 1, 2, 0, 0, 1, 0, 0]' : 0.16165}", "{'[6, 1, 0, 6, 3, 4, 1, 0, 28, 0, 2, 1, 2, 0, 0, 1, 0, 0]' : 0.163249}", "{'[6, 1, 0, 6, 3, 4, 1, 0, 28, 0, 2, 1, 2, 0, 0, 1, 0, 0]' : 0.162973}", "{'[6, 1, 0, 6, 3, 4, 1, 0, 28, 0, 2, 1, 2, 0, 0, 1, 0, 0]' : 0.164592}", "{'[6, 1, 0, 6, 3, 4, 1, 0, 28, 0, 2, 1, 2, 0, 0, 1, 0, 0]' : 0.163591}", "{'[6, 1, 0, 6, 3, 4, 1, 0, 28, 0, 2, 1, 2, 0, 0, 1, 0, 0]' : 0.163699}", "{'[6, 1, 0, 6, 3, 4, 1, 0, 28, 0, 2, 1, 2, 0, 0, 1, 0, 0]' : 0.163677}", "{'[6, 1, 0, 6, 3, 4, 1, 0, 28, 0, 2, 1, 2, 0, 0, 1, 0, 0]' : 0.162925}", "{'[6, 1, 0, 6, 3, 4, 1, 0, 28, 0, 2, 1, 2, 0, 0, 1, 0, 0]' : 0.163216}"]
returning from 'run': {'[6, 1, 0, 6, 3, 4, 1, 0, 28, 0, 2, 1, 2, 0, 0, 1, 0, 0]': ([0.163476, 0.162185, 0.160242, 0.162936, 0.163684, 0.163767, 0.162859, 0.163131, 0.15971, 0.161526, 0.16283, 0.162972, 0.163855, 0.163404, 0.162796, 0.161474, 0.160223, 0.160189, 0.161662, 0.162689, 0.162881, 0.16165, 0.163249, 0.162973, 0.164592, 0.163591, 0.163699, 0.163677, 0.162925, 0.163216], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 1, 0, 6, 3, 4, 1, 0, 28, 0, 2, 1, 2, 0, 0, 1, 0, 0]': ([0.163476, 0.162185, 0.160242, 0.162936, 0.163684, 0.163767, 0.162859, 0.163131, 0.15971, 0.161526, 0.16283, 0.162972, 0.163855, 0.163404, 0.162796, 0.161474, 0.160223, 0.160189, 0.161662, 0.162689, 0.162881, 0.16165, 0.163249, 0.162973, 0.164592, 0.163591, 0.163699, 0.163677, 0.162925, 0.163216], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		215
        Multiplications: 	50
        Divisions: 		0
        Logical: 		0
        Reads: 			468
        Writes: 		101
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest77.exe __orio_perftest77.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest77.exe  
Program Test Output: 
{'[0, 1, 0, 2, 3, 3, 1, 1, 0, 0, 2, 19, 0, 0, 0, 1, 1, 0]' : 0.22074}
{'[0, 1, 0, 2, 3, 3, 1, 1, 0, 0, 2, 19, 0, 0, 0, 1, 1, 0]' : 0.220662}
{'[0, 1, 0, 2, 3, 3, 1, 1, 0, 0, 2, 19, 0, 0, 0, 1, 1, 0]' : 0.220518}
{'[0, 1, 0, 2, 3, 3, 1, 1, 0, 0, 2, 19, 0, 0, 0, 1, 1, 0]' : 0.220807}
{'[0, 1, 0, 2, 3, 3, 1, 1, 0, 0, 2, 19, 0, 0, 0, 1, 1, 0]' : 0.220495}
{'[0, 1, 0, 2, 3, 3, 1, 1, 0, 0, 2, 19, 0, 0, 0, 1, 1, 0]' : 0.220539}
{'[0, 1, 0, 2, 3, 3, 1, 1, 0, 0, 2, 19, 0, 0, 0, 1, 1, 0]' : 0.220604}
{'[0, 1, 0, 2, 3, 3, 1, 1, 0, 0, 2, 19, 0, 0, 0, 1, 1, 0]' : 0.220537}
{'[0, 1, 0, 2, 3, 3, 1, 1, 0, 0, 2, 19, 0, 0, 0, 1, 1, 0]' : 0.219092}
{'[0, 1, 0, 2, 3, 3, 1, 1, 0, 0, 2, 19, 0, 0, 0, 1, 1, 0]' : 0.220506}
{'[0, 1, 0, 2, 3, 3, 1, 1, 0, 0, 2, 19, 0, 0, 0, 1, 1, 0]' : 0.220575}
{'[0, 1, 0, 2, 3, 3, 1, 1, 0, 0, 2, 19, 0, 0, 0, 1, 1, 0]' : 0.220616}
{'[0, 1, 0, 2, 3, 3, 1, 1, 0, 0, 2, 19, 0, 0, 0, 1, 1, 0]' : 0.220866}
{'[0, 1, 0, 2, 3, 3, 1, 1, 0, 0, 2, 19, 0, 0, 0, 1, 1, 0]' : 0.220562}
{'[0, 1, 0, 2, 3, 3, 1, 1, 0, 0, 2, 19, 0, 0, 0, 1, 1, 0]' : 0.217247}
{'[0, 1, 0, 2, 3, 3, 1, 1, 0, 0, 2, 19, 0, 0, 0, 1, 1, 0]' : 0.211096}
{'[0, 1, 0, 2, 3, 3, 1, 1, 0, 0, 2, 19, 0, 0, 0, 1, 1, 0]' : 0.218059}
{'[0, 1, 0, 2, 3, 3, 1, 1, 0, 0, 2, 19, 0, 0, 0, 1, 1, 0]' : 0.219705}
{'[0, 1, 0, 2, 3, 3, 1, 1, 0, 0, 2, 19, 0, 0, 0, 1, 1, 0]' : 0.220477}
{'[0, 1, 0, 2, 3, 3, 1, 1, 0, 0, 2, 19, 0, 0, 0, 1, 1, 0]' : 0.220486}
{'[0, 1, 0, 2, 3, 3, 1, 1, 0, 0, 2, 19, 0, 0, 0, 1, 1, 0]' : 0.220527}
{'[0, 1, 0, 2, 3, 3, 1, 1, 0, 0, 2, 19, 0, 0, 0, 1, 1, 0]' : 0.220959}
{'[0, 1, 0, 2, 3, 3, 1, 1, 0, 0, 2, 19, 0, 0, 0, 1, 1, 0]' : 0.216836}
{'[0, 1, 0, 2, 3, 3, 1, 1, 0, 0, 2, 19, 0, 0, 0, 1, 1, 0]' : 0.214115}
{'[0, 1, 0, 2, 3, 3, 1, 1, 0, 0, 2, 19, 0, 0, 0, 1, 1, 0]' : 0.216302}
{'[0, 1, 0, 2, 3, 3, 1, 1, 0, 0, 2, 19, 0, 0, 0, 1, 1, 0]' : 0.220516}
{'[0, 1, 0, 2, 3, 3, 1, 1, 0, 0, 2, 19, 0, 0, 0, 1, 1, 0]' : 0.214169}
{'[0, 1, 0, 2, 3, 3, 1, 1, 0, 0, 2, 19, 0, 0, 0, 1, 1, 0]' : 0.220503}
{'[0, 1, 0, 2, 3, 3, 1, 1, 0, 0, 2, 19, 0, 0, 0, 1, 1, 0]' : 0.220493}
{'[0, 1, 0, 2, 3, 3, 1, 1, 0, 0, 2, 19, 0, 0, 0, 1, 1, 0]' : 0.220504}

out:
 ["{'[0, 1, 0, 2, 3, 3, 1, 1, 0, 0, 2, 19, 0, 0, 0, 1, 1, 0]' : 0.22074}", "{'[0, 1, 0, 2, 3, 3, 1, 1, 0, 0, 2, 19, 0, 0, 0, 1, 1, 0]' : 0.220662}", "{'[0, 1, 0, 2, 3, 3, 1, 1, 0, 0, 2, 19, 0, 0, 0, 1, 1, 0]' : 0.220518}", "{'[0, 1, 0, 2, 3, 3, 1, 1, 0, 0, 2, 19, 0, 0, 0, 1, 1, 0]' : 0.220807}", "{'[0, 1, 0, 2, 3, 3, 1, 1, 0, 0, 2, 19, 0, 0, 0, 1, 1, 0]' : 0.220495}", "{'[0, 1, 0, 2, 3, 3, 1, 1, 0, 0, 2, 19, 0, 0, 0, 1, 1, 0]' : 0.220539}", "{'[0, 1, 0, 2, 3, 3, 1, 1, 0, 0, 2, 19, 0, 0, 0, 1, 1, 0]' : 0.220604}", "{'[0, 1, 0, 2, 3, 3, 1, 1, 0, 0, 2, 19, 0, 0, 0, 1, 1, 0]' : 0.220537}", "{'[0, 1, 0, 2, 3, 3, 1, 1, 0, 0, 2, 19, 0, 0, 0, 1, 1, 0]' : 0.219092}", "{'[0, 1, 0, 2, 3, 3, 1, 1, 0, 0, 2, 19, 0, 0, 0, 1, 1, 0]' : 0.220506}", "{'[0, 1, 0, 2, 3, 3, 1, 1, 0, 0, 2, 19, 0, 0, 0, 1, 1, 0]' : 0.220575}", "{'[0, 1, 0, 2, 3, 3, 1, 1, 0, 0, 2, 19, 0, 0, 0, 1, 1, 0]' : 0.220616}", "{'[0, 1, 0, 2, 3, 3, 1, 1, 0, 0, 2, 19, 0, 0, 0, 1, 1, 0]' : 0.220866}", "{'[0, 1, 0, 2, 3, 3, 1, 1, 0, 0, 2, 19, 0, 0, 0, 1, 1, 0]' : 0.220562}", "{'[0, 1, 0, 2, 3, 3, 1, 1, 0, 0, 2, 19, 0, 0, 0, 1, 1, 0]' : 0.217247}", "{'[0, 1, 0, 2, 3, 3, 1, 1, 0, 0, 2, 19, 0, 0, 0, 1, 1, 0]' : 0.211096}", "{'[0, 1, 0, 2, 3, 3, 1, 1, 0, 0, 2, 19, 0, 0, 0, 1, 1, 0]' : 0.218059}", "{'[0, 1, 0, 2, 3, 3, 1, 1, 0, 0, 2, 19, 0, 0, 0, 1, 1, 0]' : 0.219705}", "{'[0, 1, 0, 2, 3, 3, 1, 1, 0, 0, 2, 19, 0, 0, 0, 1, 1, 0]' : 0.220477}", "{'[0, 1, 0, 2, 3, 3, 1, 1, 0, 0, 2, 19, 0, 0, 0, 1, 1, 0]' : 0.220486}", "{'[0, 1, 0, 2, 3, 3, 1, 1, 0, 0, 2, 19, 0, 0, 0, 1, 1, 0]' : 0.220527}", "{'[0, 1, 0, 2, 3, 3, 1, 1, 0, 0, 2, 19, 0, 0, 0, 1, 1, 0]' : 0.220959}", "{'[0, 1, 0, 2, 3, 3, 1, 1, 0, 0, 2, 19, 0, 0, 0, 1, 1, 0]' : 0.216836}", "{'[0, 1, 0, 2, 3, 3, 1, 1, 0, 0, 2, 19, 0, 0, 0, 1, 1, 0]' : 0.214115}", "{'[0, 1, 0, 2, 3, 3, 1, 1, 0, 0, 2, 19, 0, 0, 0, 1, 1, 0]' : 0.216302}", "{'[0, 1, 0, 2, 3, 3, 1, 1, 0, 0, 2, 19, 0, 0, 0, 1, 1, 0]' : 0.220516}", "{'[0, 1, 0, 2, 3, 3, 1, 1, 0, 0, 2, 19, 0, 0, 0, 1, 1, 0]' : 0.214169}", "{'[0, 1, 0, 2, 3, 3, 1, 1, 0, 0, 2, 19, 0, 0, 0, 1, 1, 0]' : 0.220503}", "{'[0, 1, 0, 2, 3, 3, 1, 1, 0, 0, 2, 19, 0, 0, 0, 1, 1, 0]' : 0.220493}", "{'[0, 1, 0, 2, 3, 3, 1, 1, 0, 0, 2, 19, 0, 0, 0, 1, 1, 0]' : 0.220504}"]
returning from 'run': {'[0, 1, 0, 2, 3, 3, 1, 1, 0, 0, 2, 19, 0, 0, 0, 1, 1, 0]': ([0.22074, 0.220662, 0.220518, 0.220807, 0.220495, 0.220539, 0.220604, 0.220537, 0.219092, 0.220506, 0.220575, 0.220616, 0.220866, 0.220562, 0.217247, 0.211096, 0.218059, 0.219705, 0.220477, 0.220486, 0.220527, 0.220959, 0.216836, 0.214115, 0.216302, 0.220516, 0.214169, 0.220503, 0.220493, 0.220504], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 0, 2, 3, 3, 1, 1, 0, 0, 2, 19, 0, 0, 0, 1, 1, 0]': ([0.22074, 0.220662, 0.220518, 0.220807, 0.220495, 0.220539, 0.220604, 0.220537, 0.219092, 0.220506, 0.220575, 0.220616, 0.220866, 0.220562, 0.217247, 0.211096, 0.218059, 0.219705, 0.220477, 0.220486, 0.220527, 0.220959, 0.216836, 0.214115, 0.216302, 0.220516, 0.214169, 0.220503, 0.220493, 0.220504], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	47
        Max loop nest depth: 	6
        Additions: 		1333
        Multiplications: 	558
        Divisions: 		0
        Logical: 		0
        Reads: 			2776
        Writes: 		544
        Comparisons:		47
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest78.exe __orio_perftest78.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest78.exe  
Program Test Output: 
{'[1, 1, 6, 5, 3, 0, 1, 0, 29, 29, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.183618}
{'[1, 1, 6, 5, 3, 0, 1, 0, 29, 29, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.173835}
{'[1, 1, 6, 5, 3, 0, 1, 0, 29, 29, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.172969}
{'[1, 1, 6, 5, 3, 0, 1, 0, 29, 29, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.178605}
{'[1, 1, 6, 5, 3, 0, 1, 0, 29, 29, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.184078}
{'[1, 1, 6, 5, 3, 0, 1, 0, 29, 29, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.18411}
{'[1, 1, 6, 5, 3, 0, 1, 0, 29, 29, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.184206}
{'[1, 1, 6, 5, 3, 0, 1, 0, 29, 29, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.184085}
{'[1, 1, 6, 5, 3, 0, 1, 0, 29, 29, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.184109}
{'[1, 1, 6, 5, 3, 0, 1, 0, 29, 29, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.184069}
{'[1, 1, 6, 5, 3, 0, 1, 0, 29, 29, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.184217}
{'[1, 1, 6, 5, 3, 0, 1, 0, 29, 29, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.18364}
{'[1, 1, 6, 5, 3, 0, 1, 0, 29, 29, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.178343}
{'[1, 1, 6, 5, 3, 0, 1, 0, 29, 29, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.178299}
{'[1, 1, 6, 5, 3, 0, 1, 0, 29, 29, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.181512}
{'[1, 1, 6, 5, 3, 0, 1, 0, 29, 29, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.184074}
{'[1, 1, 6, 5, 3, 0, 1, 0, 29, 29, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.184122}
{'[1, 1, 6, 5, 3, 0, 1, 0, 29, 29, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.184216}
{'[1, 1, 6, 5, 3, 0, 1, 0, 29, 29, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.184024}
{'[1, 1, 6, 5, 3, 0, 1, 0, 29, 29, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.179019}
{'[1, 1, 6, 5, 3, 0, 1, 0, 29, 29, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.184142}
{'[1, 1, 6, 5, 3, 0, 1, 0, 29, 29, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.184237}
{'[1, 1, 6, 5, 3, 0, 1, 0, 29, 29, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.184161}
{'[1, 1, 6, 5, 3, 0, 1, 0, 29, 29, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.184133}
{'[1, 1, 6, 5, 3, 0, 1, 0, 29, 29, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.180421}
{'[1, 1, 6, 5, 3, 0, 1, 0, 29, 29, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.182098}
{'[1, 1, 6, 5, 3, 0, 1, 0, 29, 29, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.184074}
{'[1, 1, 6, 5, 3, 0, 1, 0, 29, 29, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.184023}
{'[1, 1, 6, 5, 3, 0, 1, 0, 29, 29, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.184189}
{'[1, 1, 6, 5, 3, 0, 1, 0, 29, 29, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.184126}

out:
 ["{'[1, 1, 6, 5, 3, 0, 1, 0, 29, 29, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.183618}", "{'[1, 1, 6, 5, 3, 0, 1, 0, 29, 29, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.173835}", "{'[1, 1, 6, 5, 3, 0, 1, 0, 29, 29, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.172969}", "{'[1, 1, 6, 5, 3, 0, 1, 0, 29, 29, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.178605}", "{'[1, 1, 6, 5, 3, 0, 1, 0, 29, 29, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.184078}", "{'[1, 1, 6, 5, 3, 0, 1, 0, 29, 29, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.18411}", "{'[1, 1, 6, 5, 3, 0, 1, 0, 29, 29, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.184206}", "{'[1, 1, 6, 5, 3, 0, 1, 0, 29, 29, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.184085}", "{'[1, 1, 6, 5, 3, 0, 1, 0, 29, 29, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.184109}", "{'[1, 1, 6, 5, 3, 0, 1, 0, 29, 29, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.184069}", "{'[1, 1, 6, 5, 3, 0, 1, 0, 29, 29, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.184217}", "{'[1, 1, 6, 5, 3, 0, 1, 0, 29, 29, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.18364}", "{'[1, 1, 6, 5, 3, 0, 1, 0, 29, 29, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.178343}", "{'[1, 1, 6, 5, 3, 0, 1, 0, 29, 29, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.178299}", "{'[1, 1, 6, 5, 3, 0, 1, 0, 29, 29, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.181512}", "{'[1, 1, 6, 5, 3, 0, 1, 0, 29, 29, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.184074}", "{'[1, 1, 6, 5, 3, 0, 1, 0, 29, 29, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.184122}", "{'[1, 1, 6, 5, 3, 0, 1, 0, 29, 29, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.184216}", "{'[1, 1, 6, 5, 3, 0, 1, 0, 29, 29, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.184024}", "{'[1, 1, 6, 5, 3, 0, 1, 0, 29, 29, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.179019}", "{'[1, 1, 6, 5, 3, 0, 1, 0, 29, 29, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.184142}", "{'[1, 1, 6, 5, 3, 0, 1, 0, 29, 29, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.184237}", "{'[1, 1, 6, 5, 3, 0, 1, 0, 29, 29, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.184161}", "{'[1, 1, 6, 5, 3, 0, 1, 0, 29, 29, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.184133}", "{'[1, 1, 6, 5, 3, 0, 1, 0, 29, 29, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.180421}", "{'[1, 1, 6, 5, 3, 0, 1, 0, 29, 29, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.182098}", "{'[1, 1, 6, 5, 3, 0, 1, 0, 29, 29, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.184074}", "{'[1, 1, 6, 5, 3, 0, 1, 0, 29, 29, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.184023}", "{'[1, 1, 6, 5, 3, 0, 1, 0, 29, 29, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.184189}", "{'[1, 1, 6, 5, 3, 0, 1, 0, 29, 29, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.184126}"]
returning from 'run': {'[1, 1, 6, 5, 3, 0, 1, 0, 29, 29, 2, 0, 0, 1, 0, 1, 0, 1]': ([0.183618, 0.173835, 0.172969, 0.178605, 0.184078, 0.18411, 0.184206, 0.184085, 0.184109, 0.184069, 0.184217, 0.18364, 0.178343, 0.178299, 0.181512, 0.184074, 0.184122, 0.184216, 0.184024, 0.179019, 0.184142, 0.184237, 0.184161, 0.184133, 0.180421, 0.182098, 0.184074, 0.184023, 0.184189, 0.184126], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 1, 6, 5, 3, 0, 1, 0, 29, 29, 2, 0, 0, 1, 0, 1, 0, 1]': ([0.183618, 0.173835, 0.172969, 0.178605, 0.184078, 0.18411, 0.184206, 0.184085, 0.184109, 0.184069, 0.184217, 0.18364, 0.178343, 0.178299, 0.181512, 0.184074, 0.184122, 0.184216, 0.184024, 0.179019, 0.184142, 0.184237, 0.184161, 0.184133, 0.180421, 0.182098, 0.184074, 0.184023, 0.184189, 0.184126], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	26
        Max loop nest depth: 	6
        Additions: 		1688
        Multiplications: 	792
        Divisions: 		0
        Logical: 		0
        Reads: 			3386
        Writes: 		581
        Comparisons:		26
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest79.exe __orio_perftest79.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest79.exe  
Program Test Output: 
{'[3, 1, 6, 4, 3, 0, 1, 1, 9, 0, 2, 6, 2, 0, 0, 1, 0, 1]' : 0.158253}
{'[3, 1, 6, 4, 3, 0, 1, 1, 9, 0, 2, 6, 2, 0, 0, 1, 0, 1]' : 0.158404}
{'[3, 1, 6, 4, 3, 0, 1, 1, 9, 0, 2, 6, 2, 0, 0, 1, 0, 1]' : 0.157366}
{'[3, 1, 6, 4, 3, 0, 1, 1, 9, 0, 2, 6, 2, 0, 0, 1, 0, 1]' : 0.155794}
{'[3, 1, 6, 4, 3, 0, 1, 1, 9, 0, 2, 6, 2, 0, 0, 1, 0, 1]' : 0.155973}
{'[3, 1, 6, 4, 3, 0, 1, 1, 9, 0, 2, 6, 2, 0, 0, 1, 0, 1]' : 0.157454}
{'[3, 1, 6, 4, 3, 0, 1, 1, 9, 0, 2, 6, 2, 0, 0, 1, 0, 1]' : 0.157392}
{'[3, 1, 6, 4, 3, 0, 1, 1, 9, 0, 2, 6, 2, 0, 0, 1, 0, 1]' : 0.157549}
{'[3, 1, 6, 4, 3, 0, 1, 1, 9, 0, 2, 6, 2, 0, 0, 1, 0, 1]' : 0.155234}
{'[3, 1, 6, 4, 3, 0, 1, 1, 9, 0, 2, 6, 2, 0, 0, 1, 0, 1]' : 0.15527}
{'[3, 1, 6, 4, 3, 0, 1, 1, 9, 0, 2, 6, 2, 0, 0, 1, 0, 1]' : 0.153979}
{'[3, 1, 6, 4, 3, 0, 1, 1, 9, 0, 2, 6, 2, 0, 0, 1, 0, 1]' : 0.153994}
{'[3, 1, 6, 4, 3, 0, 1, 1, 9, 0, 2, 6, 2, 0, 0, 1, 0, 1]' : 0.155311}
{'[3, 1, 6, 4, 3, 0, 1, 1, 9, 0, 2, 6, 2, 0, 0, 1, 0, 1]' : 0.155877}
{'[3, 1, 6, 4, 3, 0, 1, 1, 9, 0, 2, 6, 2, 0, 0, 1, 0, 1]' : 0.156833}
{'[3, 1, 6, 4, 3, 0, 1, 1, 9, 0, 2, 6, 2, 0, 0, 1, 0, 1]' : 0.156838}
{'[3, 1, 6, 4, 3, 0, 1, 1, 9, 0, 2, 6, 2, 0, 0, 1, 0, 1]' : 0.158557}
{'[3, 1, 6, 4, 3, 0, 1, 1, 9, 0, 2, 6, 2, 0, 0, 1, 0, 1]' : 0.157538}
{'[3, 1, 6, 4, 3, 0, 1, 1, 9, 0, 2, 6, 2, 0, 0, 1, 0, 1]' : 0.158204}
{'[3, 1, 6, 4, 3, 0, 1, 1, 9, 0, 2, 6, 2, 0, 0, 1, 0, 1]' : 0.156734}
{'[3, 1, 6, 4, 3, 0, 1, 1, 9, 0, 2, 6, 2, 0, 0, 1, 0, 1]' : 0.155427}
{'[3, 1, 6, 4, 3, 0, 1, 1, 9, 0, 2, 6, 2, 0, 0, 1, 0, 1]' : 0.157289}
{'[3, 1, 6, 4, 3, 0, 1, 1, 9, 0, 2, 6, 2, 0, 0, 1, 0, 1]' : 0.15723}
{'[3, 1, 6, 4, 3, 0, 1, 1, 9, 0, 2, 6, 2, 0, 0, 1, 0, 1]' : 0.155068}
{'[3, 1, 6, 4, 3, 0, 1, 1, 9, 0, 2, 6, 2, 0, 0, 1, 0, 1]' : 0.156149}
{'[3, 1, 6, 4, 3, 0, 1, 1, 9, 0, 2, 6, 2, 0, 0, 1, 0, 1]' : 0.155761}
{'[3, 1, 6, 4, 3, 0, 1, 1, 9, 0, 2, 6, 2, 0, 0, 1, 0, 1]' : 0.155448}
{'[3, 1, 6, 4, 3, 0, 1, 1, 9, 0, 2, 6, 2, 0, 0, 1, 0, 1]' : 0.156168}
{'[3, 1, 6, 4, 3, 0, 1, 1, 9, 0, 2, 6, 2, 0, 0, 1, 0, 1]' : 0.155729}
{'[3, 1, 6, 4, 3, 0, 1, 1, 9, 0, 2, 6, 2, 0, 0, 1, 0, 1]' : 0.152923}

out:
 ["{'[3, 1, 6, 4, 3, 0, 1, 1, 9, 0, 2, 6, 2, 0, 0, 1, 0, 1]' : 0.158253}", "{'[3, 1, 6, 4, 3, 0, 1, 1, 9, 0, 2, 6, 2, 0, 0, 1, 0, 1]' : 0.158404}", "{'[3, 1, 6, 4, 3, 0, 1, 1, 9, 0, 2, 6, 2, 0, 0, 1, 0, 1]' : 0.157366}", "{'[3, 1, 6, 4, 3, 0, 1, 1, 9, 0, 2, 6, 2, 0, 0, 1, 0, 1]' : 0.155794}", "{'[3, 1, 6, 4, 3, 0, 1, 1, 9, 0, 2, 6, 2, 0, 0, 1, 0, 1]' : 0.155973}", "{'[3, 1, 6, 4, 3, 0, 1, 1, 9, 0, 2, 6, 2, 0, 0, 1, 0, 1]' : 0.157454}", "{'[3, 1, 6, 4, 3, 0, 1, 1, 9, 0, 2, 6, 2, 0, 0, 1, 0, 1]' : 0.157392}", "{'[3, 1, 6, 4, 3, 0, 1, 1, 9, 0, 2, 6, 2, 0, 0, 1, 0, 1]' : 0.157549}", "{'[3, 1, 6, 4, 3, 0, 1, 1, 9, 0, 2, 6, 2, 0, 0, 1, 0, 1]' : 0.155234}", "{'[3, 1, 6, 4, 3, 0, 1, 1, 9, 0, 2, 6, 2, 0, 0, 1, 0, 1]' : 0.15527}", "{'[3, 1, 6, 4, 3, 0, 1, 1, 9, 0, 2, 6, 2, 0, 0, 1, 0, 1]' : 0.153979}", "{'[3, 1, 6, 4, 3, 0, 1, 1, 9, 0, 2, 6, 2, 0, 0, 1, 0, 1]' : 0.153994}", "{'[3, 1, 6, 4, 3, 0, 1, 1, 9, 0, 2, 6, 2, 0, 0, 1, 0, 1]' : 0.155311}", "{'[3, 1, 6, 4, 3, 0, 1, 1, 9, 0, 2, 6, 2, 0, 0, 1, 0, 1]' : 0.155877}", "{'[3, 1, 6, 4, 3, 0, 1, 1, 9, 0, 2, 6, 2, 0, 0, 1, 0, 1]' : 0.156833}", "{'[3, 1, 6, 4, 3, 0, 1, 1, 9, 0, 2, 6, 2, 0, 0, 1, 0, 1]' : 0.156838}", "{'[3, 1, 6, 4, 3, 0, 1, 1, 9, 0, 2, 6, 2, 0, 0, 1, 0, 1]' : 0.158557}", "{'[3, 1, 6, 4, 3, 0, 1, 1, 9, 0, 2, 6, 2, 0, 0, 1, 0, 1]' : 0.157538}", "{'[3, 1, 6, 4, 3, 0, 1, 1, 9, 0, 2, 6, 2, 0, 0, 1, 0, 1]' : 0.158204}", "{'[3, 1, 6, 4, 3, 0, 1, 1, 9, 0, 2, 6, 2, 0, 0, 1, 0, 1]' : 0.156734}", "{'[3, 1, 6, 4, 3, 0, 1, 1, 9, 0, 2, 6, 2, 0, 0, 1, 0, 1]' : 0.155427}", "{'[3, 1, 6, 4, 3, 0, 1, 1, 9, 0, 2, 6, 2, 0, 0, 1, 0, 1]' : 0.157289}", "{'[3, 1, 6, 4, 3, 0, 1, 1, 9, 0, 2, 6, 2, 0, 0, 1, 0, 1]' : 0.15723}", "{'[3, 1, 6, 4, 3, 0, 1, 1, 9, 0, 2, 6, 2, 0, 0, 1, 0, 1]' : 0.155068}", "{'[3, 1, 6, 4, 3, 0, 1, 1, 9, 0, 2, 6, 2, 0, 0, 1, 0, 1]' : 0.156149}", "{'[3, 1, 6, 4, 3, 0, 1, 1, 9, 0, 2, 6, 2, 0, 0, 1, 0, 1]' : 0.155761}", "{'[3, 1, 6, 4, 3, 0, 1, 1, 9, 0, 2, 6, 2, 0, 0, 1, 0, 1]' : 0.155448}", "{'[3, 1, 6, 4, 3, 0, 1, 1, 9, 0, 2, 6, 2, 0, 0, 1, 0, 1]' : 0.156168}", "{'[3, 1, 6, 4, 3, 0, 1, 1, 9, 0, 2, 6, 2, 0, 0, 1, 0, 1]' : 0.155729}", "{'[3, 1, 6, 4, 3, 0, 1, 1, 9, 0, 2, 6, 2, 0, 0, 1, 0, 1]' : 0.152923}"]
returning from 'run': {'[3, 1, 6, 4, 3, 0, 1, 1, 9, 0, 2, 6, 2, 0, 0, 1, 0, 1]': ([0.158253, 0.158404, 0.157366, 0.155794, 0.155973, 0.157454, 0.157392, 0.157549, 0.155234, 0.15527, 0.153979, 0.153994, 0.155311, 0.155877, 0.156833, 0.156838, 0.158557, 0.157538, 0.158204, 0.156734, 0.155427, 0.157289, 0.15723, 0.155068, 0.156149, 0.155761, 0.155448, 0.156168, 0.155729, 0.152923], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 1, 6, 4, 3, 0, 1, 1, 9, 0, 2, 6, 2, 0, 0, 1, 0, 1]': ([0.158253, 0.158404, 0.157366, 0.155794, 0.155973, 0.157454, 0.157392, 0.157549, 0.155234, 0.15527, 0.153979, 0.153994, 0.155311, 0.155877, 0.156833, 0.156838, 0.158557, 0.157538, 0.158204, 0.156734, 0.155427, 0.157289, 0.15723, 0.155068, 0.156149, 0.155761, 0.155448, 0.156168, 0.155729, 0.152923], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	88
        Max loop nest depth: 	6
        Additions: 		2163
        Multiplications: 	744
        Divisions: 		0
        Logical: 		0
        Reads: 			4196
        Writes: 		819
        Comparisons:		88
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest80.exe __orio_perftest80.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest80.exe  
Program Test Output: 
{'[2, 1, 0, 3, 3, 0, 1, 1, 29, 21, 2, 0, 1, 0, 1, 1, 1, 1]' : 0.099365}
{'[2, 1, 0, 3, 3, 0, 1, 1, 29, 21, 2, 0, 1, 0, 1, 1, 1, 1]' : 0.099443}
{'[2, 1, 0, 3, 3, 0, 1, 1, 29, 21, 2, 0, 1, 0, 1, 1, 1, 1]' : 0.0993211}
{'[2, 1, 0, 3, 3, 0, 1, 1, 29, 21, 2, 0, 1, 0, 1, 1, 1, 1]' : 0.0990481}
{'[2, 1, 0, 3, 3, 0, 1, 1, 29, 21, 2, 0, 1, 0, 1, 1, 1, 1]' : 0.0975101}
{'[2, 1, 0, 3, 3, 0, 1, 1, 29, 21, 2, 0, 1, 0, 1, 1, 1, 1]' : 0.0861042}
{'[2, 1, 0, 3, 3, 0, 1, 1, 29, 21, 2, 0, 1, 0, 1, 1, 1, 1]' : 0.0852799}
{'[2, 1, 0, 3, 3, 0, 1, 1, 29, 21, 2, 0, 1, 0, 1, 1, 1, 1]' : 0.085007}
{'[2, 1, 0, 3, 3, 0, 1, 1, 29, 21, 2, 0, 1, 0, 1, 1, 1, 1]' : 0.087729}
{'[2, 1, 0, 3, 3, 0, 1, 1, 29, 21, 2, 0, 1, 0, 1, 1, 1, 1]' : 0.087182}
{'[2, 1, 0, 3, 3, 0, 1, 1, 29, 21, 2, 0, 1, 0, 1, 1, 1, 1]' : 0.0879998}
{'[2, 1, 0, 3, 3, 0, 1, 1, 29, 21, 2, 0, 1, 0, 1, 1, 1, 1]' : 0.085021}
{'[2, 1, 0, 3, 3, 0, 1, 1, 29, 21, 2, 0, 1, 0, 1, 1, 1, 1]' : 0.085283}
{'[2, 1, 0, 3, 3, 0, 1, 1, 29, 21, 2, 0, 1, 0, 1, 1, 1, 1]' : 0.085701}
{'[2, 1, 0, 3, 3, 0, 1, 1, 29, 21, 2, 0, 1, 0, 1, 1, 1, 1]' : 0.087409}
{'[2, 1, 0, 3, 3, 0, 1, 1, 29, 21, 2, 0, 1, 0, 1, 1, 1, 1]' : 0.087486}
{'[2, 1, 0, 3, 3, 0, 1, 1, 29, 21, 2, 0, 1, 0, 1, 1, 1, 1]' : 0.0877969}
{'[2, 1, 0, 3, 3, 0, 1, 1, 29, 21, 2, 0, 1, 0, 1, 1, 1, 1]' : 0.0858591}
{'[2, 1, 0, 3, 3, 0, 1, 1, 29, 21, 2, 0, 1, 0, 1, 1, 1, 1]' : 0.085629}
{'[2, 1, 0, 3, 3, 0, 1, 1, 29, 21, 2, 0, 1, 0, 1, 1, 1, 1]' : 0.0874581}
{'[2, 1, 0, 3, 3, 0, 1, 1, 29, 21, 2, 0, 1, 0, 1, 1, 1, 1]' : 0.0898092}
{'[2, 1, 0, 3, 3, 0, 1, 1, 29, 21, 2, 0, 1, 0, 1, 1, 1, 1]' : 0.089746}
{'[2, 1, 0, 3, 3, 0, 1, 1, 29, 21, 2, 0, 1, 0, 1, 1, 1, 1]' : 0.0878749}
{'[2, 1, 0, 3, 3, 0, 1, 1, 29, 21, 2, 0, 1, 0, 1, 1, 1, 1]' : 0.0874958}
{'[2, 1, 0, 3, 3, 0, 1, 1, 29, 21, 2, 0, 1, 0, 1, 1, 1, 1]' : 0.0855839}
{'[2, 1, 0, 3, 3, 0, 1, 1, 29, 21, 2, 0, 1, 0, 1, 1, 1, 1]' : 0.08743}
{'[2, 1, 0, 3, 3, 0, 1, 1, 29, 21, 2, 0, 1, 0, 1, 1, 1, 1]' : 0.0878332}
{'[2, 1, 0, 3, 3, 0, 1, 1, 29, 21, 2, 0, 1, 0, 1, 1, 1, 1]' : 0.0877151}
{'[2, 1, 0, 3, 3, 0, 1, 1, 29, 21, 2, 0, 1, 0, 1, 1, 1, 1]' : 0.0866981}
{'[2, 1, 0, 3, 3, 0, 1, 1, 29, 21, 2, 0, 1, 0, 1, 1, 1, 1]' : 0.0857918}

out:
 ["{'[2, 1, 0, 3, 3, 0, 1, 1, 29, 21, 2, 0, 1, 0, 1, 1, 1, 1]' : 0.099365}", "{'[2, 1, 0, 3, 3, 0, 1, 1, 29, 21, 2, 0, 1, 0, 1, 1, 1, 1]' : 0.099443}", "{'[2, 1, 0, 3, 3, 0, 1, 1, 29, 21, 2, 0, 1, 0, 1, 1, 1, 1]' : 0.0993211}", "{'[2, 1, 0, 3, 3, 0, 1, 1, 29, 21, 2, 0, 1, 0, 1, 1, 1, 1]' : 0.0990481}", "{'[2, 1, 0, 3, 3, 0, 1, 1, 29, 21, 2, 0, 1, 0, 1, 1, 1, 1]' : 0.0975101}", "{'[2, 1, 0, 3, 3, 0, 1, 1, 29, 21, 2, 0, 1, 0, 1, 1, 1, 1]' : 0.0861042}", "{'[2, 1, 0, 3, 3, 0, 1, 1, 29, 21, 2, 0, 1, 0, 1, 1, 1, 1]' : 0.0852799}", "{'[2, 1, 0, 3, 3, 0, 1, 1, 29, 21, 2, 0, 1, 0, 1, 1, 1, 1]' : 0.085007}", "{'[2, 1, 0, 3, 3, 0, 1, 1, 29, 21, 2, 0, 1, 0, 1, 1, 1, 1]' : 0.087729}", "{'[2, 1, 0, 3, 3, 0, 1, 1, 29, 21, 2, 0, 1, 0, 1, 1, 1, 1]' : 0.087182}", "{'[2, 1, 0, 3, 3, 0, 1, 1, 29, 21, 2, 0, 1, 0, 1, 1, 1, 1]' : 0.0879998}", "{'[2, 1, 0, 3, 3, 0, 1, 1, 29, 21, 2, 0, 1, 0, 1, 1, 1, 1]' : 0.085021}", "{'[2, 1, 0, 3, 3, 0, 1, 1, 29, 21, 2, 0, 1, 0, 1, 1, 1, 1]' : 0.085283}", "{'[2, 1, 0, 3, 3, 0, 1, 1, 29, 21, 2, 0, 1, 0, 1, 1, 1, 1]' : 0.085701}", "{'[2, 1, 0, 3, 3, 0, 1, 1, 29, 21, 2, 0, 1, 0, 1, 1, 1, 1]' : 0.087409}", "{'[2, 1, 0, 3, 3, 0, 1, 1, 29, 21, 2, 0, 1, 0, 1, 1, 1, 1]' : 0.087486}", "{'[2, 1, 0, 3, 3, 0, 1, 1, 29, 21, 2, 0, 1, 0, 1, 1, 1, 1]' : 0.0877969}", "{'[2, 1, 0, 3, 3, 0, 1, 1, 29, 21, 2, 0, 1, 0, 1, 1, 1, 1]' : 0.0858591}", "{'[2, 1, 0, 3, 3, 0, 1, 1, 29, 21, 2, 0, 1, 0, 1, 1, 1, 1]' : 0.085629}", "{'[2, 1, 0, 3, 3, 0, 1, 1, 29, 21, 2, 0, 1, 0, 1, 1, 1, 1]' : 0.0874581}", "{'[2, 1, 0, 3, 3, 0, 1, 1, 29, 21, 2, 0, 1, 0, 1, 1, 1, 1]' : 0.0898092}", "{'[2, 1, 0, 3, 3, 0, 1, 1, 29, 21, 2, 0, 1, 0, 1, 1, 1, 1]' : 0.089746}", "{'[2, 1, 0, 3, 3, 0, 1, 1, 29, 21, 2, 0, 1, 0, 1, 1, 1, 1]' : 0.0878749}", "{'[2, 1, 0, 3, 3, 0, 1, 1, 29, 21, 2, 0, 1, 0, 1, 1, 1, 1]' : 0.0874958}", "{'[2, 1, 0, 3, 3, 0, 1, 1, 29, 21, 2, 0, 1, 0, 1, 1, 1, 1]' : 0.0855839}", "{'[2, 1, 0, 3, 3, 0, 1, 1, 29, 21, 2, 0, 1, 0, 1, 1, 1, 1]' : 0.08743}", "{'[2, 1, 0, 3, 3, 0, 1, 1, 29, 21, 2, 0, 1, 0, 1, 1, 1, 1]' : 0.0878332}", "{'[2, 1, 0, 3, 3, 0, 1, 1, 29, 21, 2, 0, 1, 0, 1, 1, 1, 1]' : 0.0877151}", "{'[2, 1, 0, 3, 3, 0, 1, 1, 29, 21, 2, 0, 1, 0, 1, 1, 1, 1]' : 0.0866981}", "{'[2, 1, 0, 3, 3, 0, 1, 1, 29, 21, 2, 0, 1, 0, 1, 1, 1, 1]' : 0.0857918}"]
returning from 'run': {'[2, 1, 0, 3, 3, 0, 1, 1, 29, 21, 2, 0, 1, 0, 1, 1, 1, 1]': ([0.099365, 0.099443, 0.0993211, 0.0990481, 0.0975101, 0.0861042, 0.0852799, 0.085007, 0.087729, 0.087182, 0.0879998, 0.085021, 0.085283, 0.085701, 0.087409, 0.087486, 0.0877969, 0.0858591, 0.085629, 0.0874581, 0.0898092, 0.089746, 0.0878749, 0.0874958, 0.0855839, 0.08743, 0.0878332, 0.0877151, 0.0866981, 0.0857918], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 1, 0, 3, 3, 0, 1, 1, 29, 21, 2, 0, 1, 0, 1, 1, 1, 1]': ([0.099365, 0.099443, 0.0993211, 0.0990481, 0.0975101, 0.0861042, 0.0852799, 0.085007, 0.087729, 0.087182, 0.0879998, 0.085021, 0.085283, 0.085701, 0.087409, 0.087486, 0.0877969, 0.0858591, 0.085629, 0.0874581, 0.0898092, 0.089746, 0.0878749, 0.0874958, 0.0855839, 0.08743, 0.0878332, 0.0877151, 0.0866981, 0.0857918], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	41
        Max loop nest depth: 	5
        Additions: 		3672
        Multiplications: 	1716
        Divisions: 		0
        Logical: 		0
        Reads: 			6867
        Writes: 		1113
        Comparisons:		41
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest81.exe __orio_perftest81.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest81.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest81.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest81.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest81.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Complete design, with measurements:
     T1_I T1_K T2_I T2_K ACOPY_y U1_I U_I U_K RT_I RT_J RT_K VEC1 VEC2
37      1    0    0    3       0   11   4   0    2    0    0    1    1
189     4    1    0    6       0    2  29   0    1    0    0    1    0
197     5    6    4    6       1   24   0   0    0    1    0    1    1
234     2    0    0    2       1    4  21   0    0    1    1    0    0
503     0    1    6    6       1    0   0  18    1    1    0    0    0
628     6    6    0    4       1   18  13   0    1    0    1    1    0
873     0    1    6    0       1   17   1   0    2    0    0    0    1
928     5    3    4    2       0    0   0  29    0    0    1    0    1
1050    0    0    6    2       0    1   0   7    0    0    2    1    1
1089    3    4    2    0       0    0   2   0    0    0    2    0    1
1487    5    5    3    6       0    4   0  25    1    0    1    0    1
1526    1    0    3    0       0    0   0   0    0    0    0    0    0
1536    0    3    0    5       0    4   0   5    0    1    1    1    0
1741    6    1    0    2       0    7   0  29    1    1    0    0    1
1925    2    2    6    6       1    2  28   0    2    0    0    1    0
2041    3    2    0    5       1    9   0   7    0    0    0    0    1
2289    0    4    0    0       0   12   0   0    0    0    2    0    0
2310    3    1    1    1       0   27   0  29    2    0    0    1    0
2318    6    0    6    0       0    1  27   0    0    0    0    1    0
2434    6    1    5    1       1   24   4   0    0    1    1    0    0
2441    0    3    4    5       0   26   0  26    0    0    0    1    0
2580    2    1    5    4       0    3   3   0    1    1    0    0    0
2589    1    3    6    2       1   26   0   0    1    0    1    0    1
2597    6    0    6    4       0   28   0   1    2    0    0    0    0
2676    0    0    2    3       1    0   0  19    0    0    0    1    0
3106    1    6    5    0       0   29  29   0    0    1    0    0    1
3140    3    6    4    0       1    9   0   6    2    0    0    0    1
3396    2    0    3    0       1   29  21   0    1    0    1    1    1
      cost_mean
37   0.17887167
189  0.10501310
197  0.22574520
234  0.21052647
503  0.10945080
628  0.10734267
873  0.14979687
928  0.17897840
1050 0.18493497
1089 0.16593770
1487 0.08902219
1526 0.19258593
1536 0.17548353
1741 0.10511897
1925 0.15717007
2041 0.23277353
2289 0.18002493
2310 0.19172083
2318 0.28987147
2434 0.22061333
2441 0.21564880
2580 0.10409623
2589 0.09731361
2597 0.16260210
2676 0.21930377
3106 0.18235847
3140 0.15632487
3396 0.08892034

Heteroscedasticity Test p-value: 0.825789814064
Regression Step:                Df   Sum Sq  Mean Sq F value  Pr(>F)   
T1_I             1 0.000003 0.000003   0.005 0.94426   
T1_K             1 0.001317 0.001317   2.467 0.17707   
T2_I             1 0.000027 0.000027   0.051 0.82988   
T2_K             1 0.002527 0.002527   4.733 0.08158 . 
ACOPY_y          1 0.000016 0.000016   0.029 0.87063   
U1_I             1 0.000106 0.000106   0.199 0.67394   
U_I              1 0.000001 0.000001   0.002 0.96868   
U_K              1 0.000099 0.000099   0.185 0.68470   
RT_I             1 0.017757 0.017757  33.254 0.00220 **
RT_J             1 0.001255 0.001255   2.351 0.18580   
RT_K             1 0.011119 0.011119  20.823 0.00604 **
VEC1             1 0.004589 0.004589   8.593 0.03258 * 
VEC2             1 0.000994 0.000994   1.862 0.23059   
I(1/(1 + T1_I))  1 0.000000 0.000000   0.000 0.98708   
I(1/(1 + T1_K))  1 0.000006 0.000006   0.011 0.91909   
I(1/(1 + T2_I))  1 0.002997 0.002997   5.613 0.06402 . 
I(1/(1 + T2_K))  1 0.000062 0.000062   0.117 0.74651   
I(1/(1 + U1_I))  1 0.001129 0.001129   2.114 0.20566   
I(1/(1 + U_I))   1 0.000124 0.000124   0.232 0.65016   
I(1/(1 + U_K))   1 0.000930 0.000930   1.742 0.24412   
I(1/(1 + RT_I))  1 0.023195 0.023195  43.439 0.00121 **
I(1/(1 + RT_K))  1 0.000232 0.000232   0.434 0.53929   
Residuals        5 0.002670 0.000534                   
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Predicting Best
Generating valid search space of size 3400 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Valid coordinates: 680
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Valid coordinates: 1360
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Valid coordinates: 2040
Tested coordinates: 110000
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Valid coordinates: 2720
Tested coordinates: 150000
Tested coordinates: 160000
Tested coordinates: 170000
Valid coordinates: 3400
Valid/Tested configurations: 3400/177681
Generated Search Space:
NULL
Identical predictions (tol = 1e-5): 1
Getting Best from Design
Response: ['cost_mean']
Design Names:  [1] "T1_I"      "T1_K"      "T2_I"      "T2_K"      "ACOPY_y"   "U1_I"     
 [7] "U_I"       "U_K"       "RT_I"      "RT_J"      "RT_K"      "VEC1"     
[13] "VEC2"      "cost_mean"

Design Response:       cost_mean
37   0.17887167
189  0.10501310
197  0.22574520
234  0.21052647
503  0.10945080
628  0.10734267
873  0.14979687
928  0.17897840
1050 0.18493497
1089 0.16593770
1487 0.08902219
1526 0.19258593
1536 0.17548353
1741 0.10511897
1925 0.15717007
2041 0.23277353
2289 0.18002493
2310 0.19172083
2318 0.28987147
2434 0.22061333
2441 0.21564880
2580 0.10409623
2589 0.09731361
2597 0.16260210
2676 0.21930377
3106 0.18235847
3140 0.15632487
3396 0.08892034

Current Design Names: ['T1_I', 'T1_K', 'T2_I', 'T2_K', 'ACOPY_y', 'U1_I', 'U_I', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Getting fixed variables
Pruning Model
Best Predicted:      T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
1028    0    1    2    2    3    3       1       0   12  29   2   0    1    0
     RT_K SCR VEC1 VEC2
1028    0   1    0    1

Best From Design: [2, 1, 0, 3, 3, 0, 1, 1, 29, 21, 2, 0, 1, 0, 1, 1, 1, 1]
Pruned Factors: ['T1_I', 'T1_K', 'T2_I', 'ACOPY_y', 'U1_I', 'U_I', 'U_K', 'RT_J', 'VEC2']
Fixed Factors: {'ACOPY_x': 1, 'RT_K': 0, 'T1_J': 1, 'RT_I': 1, 'U_J': 2, 'T2_K': 3, 'T2_J': 3, 'VEC1': 0, 'SCR': 1}
Length of requested configs: 1
Result was on Database, Returning Now
Starting Point (-O3):
0.16283083333333334
Predicted Best Point:
[0, 1, 2, 2, 3, 3, 1, 0, 12, 29, 2, 0, 1, 0, 0, 1, 0, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	117
        Max loop nest depth: 	5
        Additions: 		1632
        Multiplications: 	390
        Divisions: 		0
        Logical: 		0
        Reads: 			3234
        Writes: 		694
        Comparisons:		117
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest82.exe __orio_perftest82.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest82.exe  
Program Test Output: 
{'[0, 1, 2, 2, 3, 3, 1, 0, 12, 29, 2, 0, 1, 0, 0, 1, 0, 1]' : 0.107016}
{'[0, 1, 2, 2, 3, 3, 1, 0, 12, 29, 2, 0, 1, 0, 0, 1, 0, 1]' : 0.106876}
{'[0, 1, 2, 2, 3, 3, 1, 0, 12, 29, 2, 0, 1, 0, 0, 1, 0, 1]' : 0.105104}
{'[0, 1, 2, 2, 3, 3, 1, 0, 12, 29, 2, 0, 1, 0, 0, 1, 0, 1]' : 0.0934861}
{'[0, 1, 2, 2, 3, 3, 1, 0, 12, 29, 2, 0, 1, 0, 0, 1, 0, 1]' : 0.0927742}
{'[0, 1, 2, 2, 3, 3, 1, 0, 12, 29, 2, 0, 1, 0, 0, 1, 0, 1]' : 0.0928688}
{'[0, 1, 2, 2, 3, 3, 1, 0, 12, 29, 2, 0, 1, 0, 0, 1, 0, 1]' : 0.092943}
{'[0, 1, 2, 2, 3, 3, 1, 0, 12, 29, 2, 0, 1, 0, 0, 1, 0, 1]' : 0.092922}
{'[0, 1, 2, 2, 3, 3, 1, 0, 12, 29, 2, 0, 1, 0, 0, 1, 0, 1]' : 0.0928359}
{'[0, 1, 2, 2, 3, 3, 1, 0, 12, 29, 2, 0, 1, 0, 0, 1, 0, 1]' : 0.092917}
{'[0, 1, 2, 2, 3, 3, 1, 0, 12, 29, 2, 0, 1, 0, 0, 1, 0, 1]' : 0.0928731}
{'[0, 1, 2, 2, 3, 3, 1, 0, 12, 29, 2, 0, 1, 0, 0, 1, 0, 1]' : 0.0929382}
{'[0, 1, 2, 2, 3, 3, 1, 0, 12, 29, 2, 0, 1, 0, 0, 1, 0, 1]' : 0.093334}
{'[0, 1, 2, 2, 3, 3, 1, 0, 12, 29, 2, 0, 1, 0, 0, 1, 0, 1]' : 0.0928359}
{'[0, 1, 2, 2, 3, 3, 1, 0, 12, 29, 2, 0, 1, 0, 0, 1, 0, 1]' : 0.092977}
{'[0, 1, 2, 2, 3, 3, 1, 0, 12, 29, 2, 0, 1, 0, 0, 1, 0, 1]' : 0.0928559}
{'[0, 1, 2, 2, 3, 3, 1, 0, 12, 29, 2, 0, 1, 0, 0, 1, 0, 1]' : 0.0928512}
{'[0, 1, 2, 2, 3, 3, 1, 0, 12, 29, 2, 0, 1, 0, 0, 1, 0, 1]' : 0.092962}
{'[0, 1, 2, 2, 3, 3, 1, 0, 12, 29, 2, 0, 1, 0, 0, 1, 0, 1]' : 0.0929761}
{'[0, 1, 2, 2, 3, 3, 1, 0, 12, 29, 2, 0, 1, 0, 0, 1, 0, 1]' : 0.0929298}
{'[0, 1, 2, 2, 3, 3, 1, 0, 12, 29, 2, 0, 1, 0, 0, 1, 0, 1]' : 0.0928841}
{'[0, 1, 2, 2, 3, 3, 1, 0, 12, 29, 2, 0, 1, 0, 0, 1, 0, 1]' : 0.0928969}
{'[0, 1, 2, 2, 3, 3, 1, 0, 12, 29, 2, 0, 1, 0, 0, 1, 0, 1]' : 0.092957}
{'[0, 1, 2, 2, 3, 3, 1, 0, 12, 29, 2, 0, 1, 0, 0, 1, 0, 1]' : 0.0929182}
{'[0, 1, 2, 2, 3, 3, 1, 0, 12, 29, 2, 0, 1, 0, 0, 1, 0, 1]' : 0.0929}
{'[0, 1, 2, 2, 3, 3, 1, 0, 12, 29, 2, 0, 1, 0, 0, 1, 0, 1]' : 0.0929298}
{'[0, 1, 2, 2, 3, 3, 1, 0, 12, 29, 2, 0, 1, 0, 0, 1, 0, 1]' : 0.0929132}
{'[0, 1, 2, 2, 3, 3, 1, 0, 12, 29, 2, 0, 1, 0, 0, 1, 0, 1]' : 0.0929191}
{'[0, 1, 2, 2, 3, 3, 1, 0, 12, 29, 2, 0, 1, 0, 0, 1, 0, 1]' : 0.0928681}
{'[0, 1, 2, 2, 3, 3, 1, 0, 12, 29, 2, 0, 1, 0, 0, 1, 0, 1]' : 0.093503}

out:
 ["{'[0, 1, 2, 2, 3, 3, 1, 0, 12, 29, 2, 0, 1, 0, 0, 1, 0, 1]' : 0.107016}", "{'[0, 1, 2, 2, 3, 3, 1, 0, 12, 29, 2, 0, 1, 0, 0, 1, 0, 1]' : 0.106876}", "{'[0, 1, 2, 2, 3, 3, 1, 0, 12, 29, 2, 0, 1, 0, 0, 1, 0, 1]' : 0.105104}", "{'[0, 1, 2, 2, 3, 3, 1, 0, 12, 29, 2, 0, 1, 0, 0, 1, 0, 1]' : 0.0934861}", "{'[0, 1, 2, 2, 3, 3, 1, 0, 12, 29, 2, 0, 1, 0, 0, 1, 0, 1]' : 0.0927742}", "{'[0, 1, 2, 2, 3, 3, 1, 0, 12, 29, 2, 0, 1, 0, 0, 1, 0, 1]' : 0.0928688}", "{'[0, 1, 2, 2, 3, 3, 1, 0, 12, 29, 2, 0, 1, 0, 0, 1, 0, 1]' : 0.092943}", "{'[0, 1, 2, 2, 3, 3, 1, 0, 12, 29, 2, 0, 1, 0, 0, 1, 0, 1]' : 0.092922}", "{'[0, 1, 2, 2, 3, 3, 1, 0, 12, 29, 2, 0, 1, 0, 0, 1, 0, 1]' : 0.0928359}", "{'[0, 1, 2, 2, 3, 3, 1, 0, 12, 29, 2, 0, 1, 0, 0, 1, 0, 1]' : 0.092917}", "{'[0, 1, 2, 2, 3, 3, 1, 0, 12, 29, 2, 0, 1, 0, 0, 1, 0, 1]' : 0.0928731}", "{'[0, 1, 2, 2, 3, 3, 1, 0, 12, 29, 2, 0, 1, 0, 0, 1, 0, 1]' : 0.0929382}", "{'[0, 1, 2, 2, 3, 3, 1, 0, 12, 29, 2, 0, 1, 0, 0, 1, 0, 1]' : 0.093334}", "{'[0, 1, 2, 2, 3, 3, 1, 0, 12, 29, 2, 0, 1, 0, 0, 1, 0, 1]' : 0.0928359}", "{'[0, 1, 2, 2, 3, 3, 1, 0, 12, 29, 2, 0, 1, 0, 0, 1, 0, 1]' : 0.092977}", "{'[0, 1, 2, 2, 3, 3, 1, 0, 12, 29, 2, 0, 1, 0, 0, 1, 0, 1]' : 0.0928559}", "{'[0, 1, 2, 2, 3, 3, 1, 0, 12, 29, 2, 0, 1, 0, 0, 1, 0, 1]' : 0.0928512}", "{'[0, 1, 2, 2, 3, 3, 1, 0, 12, 29, 2, 0, 1, 0, 0, 1, 0, 1]' : 0.092962}", "{'[0, 1, 2, 2, 3, 3, 1, 0, 12, 29, 2, 0, 1, 0, 0, 1, 0, 1]' : 0.0929761}", "{'[0, 1, 2, 2, 3, 3, 1, 0, 12, 29, 2, 0, 1, 0, 0, 1, 0, 1]' : 0.0929298}", "{'[0, 1, 2, 2, 3, 3, 1, 0, 12, 29, 2, 0, 1, 0, 0, 1, 0, 1]' : 0.0928841}", "{'[0, 1, 2, 2, 3, 3, 1, 0, 12, 29, 2, 0, 1, 0, 0, 1, 0, 1]' : 0.0928969}", "{'[0, 1, 2, 2, 3, 3, 1, 0, 12, 29, 2, 0, 1, 0, 0, 1, 0, 1]' : 0.092957}", "{'[0, 1, 2, 2, 3, 3, 1, 0, 12, 29, 2, 0, 1, 0, 0, 1, 0, 1]' : 0.0929182}", "{'[0, 1, 2, 2, 3, 3, 1, 0, 12, 29, 2, 0, 1, 0, 0, 1, 0, 1]' : 0.0929}", "{'[0, 1, 2, 2, 3, 3, 1, 0, 12, 29, 2, 0, 1, 0, 0, 1, 0, 1]' : 0.0929298}", "{'[0, 1, 2, 2, 3, 3, 1, 0, 12, 29, 2, 0, 1, 0, 0, 1, 0, 1]' : 0.0929132}", "{'[0, 1, 2, 2, 3, 3, 1, 0, 12, 29, 2, 0, 1, 0, 0, 1, 0, 1]' : 0.0929191}", "{'[0, 1, 2, 2, 3, 3, 1, 0, 12, 29, 2, 0, 1, 0, 0, 1, 0, 1]' : 0.0928681}", "{'[0, 1, 2, 2, 3, 3, 1, 0, 12, 29, 2, 0, 1, 0, 0, 1, 0, 1]' : 0.093503}"]
returning from 'run': {'[0, 1, 2, 2, 3, 3, 1, 0, 12, 29, 2, 0, 1, 0, 0, 1, 0, 1]': ([0.107016, 0.106876, 0.105104, 0.0934861, 0.0927742, 0.0928688, 0.092943, 0.092922, 0.0928359, 0.092917, 0.0928731, 0.0929382, 0.093334, 0.0928359, 0.092977, 0.0928559, 0.0928512, 0.092962, 0.0929761, 0.0929298, 0.0928841, 0.0928969, 0.092957, 0.0929182, 0.0929, 0.0929298, 0.0929132, 0.0929191, 0.0928681, 0.093503], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 2, 2, 3, 3, 1, 0, 12, 29, 2, 0, 1, 0, 0, 1, 0, 1]': ([0.107016, 0.106876, 0.105104, 0.0934861, 0.0927742, 0.0928688, 0.092943, 0.092922, 0.0928359, 0.092917, 0.0928731, 0.0929382, 0.093334, 0.0928359, 0.092977, 0.0928559, 0.0928512, 0.092962, 0.0929761, 0.0929298, 0.0928841, 0.0928969, 0.092957, 0.0929182, 0.0929, 0.0929298, 0.0929132, 0.0929191, 0.0928681, 0.093503], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Design Best Point:
[2, 1, 0, 3, 3, 0, 1, 1, 29, 21, 2, 0, 1, 0, 1, 1, 1, 1]
Length of requested configs: 1
Result was on Database, Returning Now
Fixed Factors: {'ACOPY_x': 1, 'RT_K': 0, 'T1_J': 1, 'RT_I': 1, 'U_J': 2, 'T2_K': 3, 'T2_J': 3, 'VEC1': 0, 'SCR': 1}
Slowdown (Design Best): 0.5460903289200958
Slowdown (Predicted Best): 0.5791216037093712
Budget: 69/180
Current Best Point: 
[6, 0, 0, 0, 6, 3, 0, 0, 26, 4, 0, 11, 1, 1, 0, 1, 1, 0]
Final Best Point: 
[6, 0, 0, 0, 6, 3, 0, 0, 26, 4, 0, 11, 1, 1, 0, 1, 1, 0]
Ending DOPT-ANOVA
Best Point: [6, 0, 0, 0, 6, 3, 0, 0, 26, 4, 0, 11, 1, 1, 0, 1, 1, 0]
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Speedup: 1.8361568860586457
----- end random search -----
----- begin random search summary -----
 total completed runs: 0
 total successful runs: 0
 total failed runs: 0
 speedup: 1.8361568860586457
----- end random search summary -----
----- begin summary -----
 best coordinate: [6, 0, 0, 0, 6, 3, 0, 0, 26, 4, 0, 11, 1, 1, 0, 1, 1, 0]={'ACOPY_x': False, 'ACOPY_y': False, 'RT_K': 1, 'T1_I': 512, 'T1_J': 1, 'T1_K': 1, 'U_K': 12, 'U_J': 1, 'U_I': 5, 'U1_I': 27, 'T2_K': 256, 'T2_J': 2048, 'T2_I': 1, 'VEC2': False, 'VEC1': True, 'RT_I': 8, 'SCR': True, 'RT_J': 8}, cost=8.868024e-02, transfer_time=inf, inputs=[('N', 10000)], search_time=-836.24, runs=69
----- end summary -----
Length of requested configs: 1
Result was on Database, Returning Now
----- the obtained best performance parameters -----
 ACOPY_x = False
 ACOPY_y = False
 RT_I = 8
 RT_J = 8
 RT_K = 1
 SCR = True
 T1_I = 512
 T1_J = 1
 T1_K = 1
 T2_I = 1
 T2_J = 2048
 T2_K = 256
 U1_I = 27
 U_I = 5
 U_J = 1
 U_K = 12
 VEC1 = True
 VEC2 = False
 cost_mean = 0.08868024
 points = 69
 speedup_O3 = 1.8361568860586457
 technique = DLMT
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	4
        Additions: 		1355
        Multiplications: 	616
        Divisions: 		0
        Logical: 		0
        Reads: 			2774
        Writes: 		518
        Comparisons:		24
        Gotos: 			0
        
----- finish optimizations -----

----- begin removing annotations from output-----
----- finished removing annotations from output-----

----- begin writing the output file(s) -----
--> writing output to: _atax2.src1.c
----- finished writing the output file(s) -----

====== END ORIO ======
