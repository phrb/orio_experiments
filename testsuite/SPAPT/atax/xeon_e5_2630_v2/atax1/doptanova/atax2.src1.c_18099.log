
====== START ORIO ======

----- begin reading the source file: atax2.src1.c -----
----- finished reading the source file -----

----- begin parsing annotations -----
----- finished parsing annotations -----

----- begin optimizations -----
Search_Space         = 8.234e+13
Number_of_Parameters = 18
Numeric_Parameters   = 13
Binary_Parameters    = 05
['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
[[1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [False, True], [False, True], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 8, 32], [1, 8, 32], [1, 8, 32], [False, True], [False, True], [False, True]]

----- begin empirical tuning for problem size -----
 N = 10000
Parameters: {'ACOPY_x': [0, 2], 'ACOPY_y': [0, 2], 'RT_K': [0, 3], 'T1_I': [0, 7], 'T1_J': [0, 7], 'T1_K': [0, 7], 'U_K': [0, 30], 'U_J': [0, 30], 'U_I': [0, 30], 'U1_I': [0, 30], 'T2_K': [0, 7], 'T2_J': [0, 7], 'T2_I': [0, 7], 'VEC2': [0, 2], 'VEC1': [0, 2], 'RT_I': [0, 3], 'SCR': [0, 2], 'RT_J': [0, 3]}
Parameter Range Values: {'ACOPY_x': [False, True], 'ACOPY_y': [False, True], 'RT_K': [1, 8, 32], 'T1_I': [1, 16, 32, 64, 128, 256, 512], 'T1_J': [1, 16, 32, 64, 128, 256, 512], 'T1_K': [1, 16, 32, 64, 128, 256, 512], 'U_K': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_J': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U1_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'T2_K': [1, 64, 128, 256, 512, 1024, 2048], 'T2_J': [1, 64, 128, 256, 512, 1024, 2048], 'T2_I': [1, 64, 128, 256, 512, 1024, 2048], 'VEC2': [False, True], 'VEC1': [False, True], 'RT_I': [1, 8, 32], 'SCR': [False, True], 'RT_J': [1, 8, 32]}

----- begin random search -----
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Inverse Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Starting DOPT-anova
Step 0
Generating valid search space of size 4600 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Valid coordinates: 920
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Valid coordinates: 1840
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Valid coordinates: 2760
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Tested coordinates: 150000
Valid coordinates: 3680
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Valid coordinates: 4600
Valid/Tested configurations: 4600/188630
Generated Search Space:
NULL
Clean Info:
Removed Factors: character(0)

Removed Inverse Factors: [1] "ACOPY_x" "ACOPY_y" "SCR"     "VEC1"    "VEC2"   

New Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
New Inverse Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
New Fixed Factors: {}
Full Model:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Fixed Factors: {}
Computing D-Optimal Design
Computing D-Optimal Design with 46 experiments
Design Formula:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Starting "optFederov" run
Using Search Space:
NULL
Data Dimensions: [1] 4600   18

     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
13      1    0    6    5    0    5       0       0   19   0   4   0    2    0
20      3    3    3    2    0    6       1       0   18   0   2   2    1    0
61      0    6    2    3    0    6       1       0    0  19   0  14    2    0
159     6    0    0    5    0    3       1       0   27   2  28   0    0    0
182     1    6    3    6    6    3       1       0   26  18  12   0    0    2
197     0    3    4    4    6    0       0       1    0   0   0   3    0    2
659     0    6    6    1    6    6       1       1   26   2  22   0    0    0
704     3    0    0    0    5    5       1       0   19   7   6   0    0    1
705     6    1    2    4    6    6       0       0    8  11   0   1    0    1
761     0    2    0    0    3    1       0       1   23   0  27  16    1    0
770     3    6    0    6    0    6       0       1    2   0  29  22    0    0
1002    3    4    4    3    6    2       1       1   16   0   9  11    0    0
1087    6    1    0    0    6    0       1       1   16   7  24   0    0    2
1152    4    2    6    6    2    0       0       0   27   6   0   7    1    0
1298    3    3    0    0    3    5       1       0   23   0   0   0    2    0
1301    6    0    5    0    1    6       1       1   20   0  10  21    0    2
1591    6    3    2    6    2    0       0       1    0   3   3   0    1    1
1613    5    0    5    3    0    3       0       0    7  11   0   0    1    0
1720    0    0    0    6    6    6       1       1    5  23   0   6    1    0
1760    2    4    1    3    2    5       1       0    0   0  29  28    0    0
1849    6    6    6    0    0    0       1       0   29  25   0   8    0    2
2192    4    2    4    5    6    6       0       1   27  29  29   0    2    0
2258    0    5    0    4    0    6       1       0   21  29  10   0    0    2
2490    4    5    1    0    0    2       1       1   16  12   0  28    2    0
2494    5    1    0    4    0    1       0       0    0   0   2  11    0    1
2574    0    2    1    2    0    5       0       1   29   3   0   8    0    0
2647    0    4    1    5    4    3       1       1    3   0   5   0    0    0
2723    2    5    2    2    0    1       0       1    3   0  13   3    0    1
2929    0    6    0    1    0    0       1       0   28  22  29   0    1    1
2980    1    0    4    2    6    0       0       0   10   0  29  28    0    1
3065    1    6    0    2    4    1       0       1    8  24   0   1    0    2
3116    6    3    0    6    1    0       0       0   11   0   9   9    2    0
3117    3    6    4    4    0    0       0       1   28   0  29   0    0    1
3173    1    2    4    6    0    3       0       1   28  22   0  29    1    1
3205    5    0    0    3    5    4       0       0   27  27   6   0    0    0
3237    0    6    4    2    4    5       0       0   17   2   0  28    0    0
3382    0    1    1    0    0    0       0       0   14   8   7   0    0    0
3609    6    5    1    4    5    1       1       0   29   0   2  29    0    0
3623    3    1    6    2    2    0       1       1   27  28  12   0    0    0
3790    2    6    6    0    6    5       1       1    0   4   0  20    0    0
3820    3    3    6    5    1    4       0       0    3  29   0  29    1    1
3827    1    1    1    2    3    1       1       1    0  11  25   0    0    2
3978    6    0    5    6    6    5       0       1    0   3   3   0    1    0
4069    6    6    1    0    6    1       0       0    1  29  11   0    1    0
4127    4    0    4    0    1    0       1       0   18  22  21   0    0    0
4586    0    6    4    0    4    2       1       0   23   0  29   1    0    1
     RT_K SCR VEC1 VEC2
13      0   0    0    1
20      1   0    1    1
61      0   0    1    1
159     0   1    1    0
182     0   1    1    1
197     0   0    1    0
659     1   0    1    0
704     1   0    1    0
705     1   0    1    1
761     1   0    0    1
770     0   0    1    0
1002    2   1    0    0
1087    0   0    0    1
1152    0   1    1    0
1298    0   1    0    1
1301    0   1    0    1
1591    0   0    0    0
1613    1   1    0    0
1720    1   1    0    1
1760    1   0    0    0
1849    0   0    1    0
2192    0   0    0    0
2258    0   1    0    0
2490    0   1    1    0
2494    0   1    1    0
2574    0   0    0    1
2647    2   0    1    0
2723    1   0    0    0
2929    0   0    0    0
2980    0   1    1    0
3065    0   1    1    0
3116    0   0    0    0
3117    1   1    1    1
3173    0   1    1    0
3205    2   0    1    1
3237    2   1    1    1
3382    1   0    1    0
3609    1   0    0    0
3623    0   0    1    1
3790    2   0    0    0
3820    0   1    0    1
3827    0   1    1    1
3978    0   0    0    0
4069    0   1    0    1
4127    2   1    0    0
4586    0   1    0    0

D-Efficiency Approximation: [1] 0.339

Measuring design of size 46
Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Length of requested configs: 1
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	6
        Additions: 		1414
        Multiplications: 	462
        Divisions: 		0
        Logical: 		0
        Reads: 			2472
        Writes: 		294
        Comparisons:		16
        Gotos: 			0
        
 building the original code:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -DORIGINAL -o __orio_perftest_original.exe __orio_perftest1.c timer_cpu.o -lm
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest1.exe __orio_perftest1.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest1.exe  
Program Test Output: 
{'[1, 0, 6, 5, 0, 5, 0, 0, 19, 0, 4, 0, 2, 0, 0, 0, 0, 1]' : 0.193924}
{'[1, 0, 6, 5, 0, 5, 0, 0, 19, 0, 4, 0, 2, 0, 0, 0, 0, 1]' : 0.188084}
{'[1, 0, 6, 5, 0, 5, 0, 0, 19, 0, 4, 0, 2, 0, 0, 0, 0, 1]' : 0.161536}
{'[1, 0, 6, 5, 0, 5, 0, 0, 19, 0, 4, 0, 2, 0, 0, 0, 0, 1]' : 0.161575}
{'[1, 0, 6, 5, 0, 5, 0, 0, 19, 0, 4, 0, 2, 0, 0, 0, 0, 1]' : 0.161359}
{'[1, 0, 6, 5, 0, 5, 0, 0, 19, 0, 4, 0, 2, 0, 0, 0, 0, 1]' : 0.161377}
{'[1, 0, 6, 5, 0, 5, 0, 0, 19, 0, 4, 0, 2, 0, 0, 0, 0, 1]' : 0.161663}
{'[1, 0, 6, 5, 0, 5, 0, 0, 19, 0, 4, 0, 2, 0, 0, 0, 0, 1]' : 0.161408}
{'[1, 0, 6, 5, 0, 5, 0, 0, 19, 0, 4, 0, 2, 0, 0, 0, 0, 1]' : 0.161369}
{'[1, 0, 6, 5, 0, 5, 0, 0, 19, 0, 4, 0, 2, 0, 0, 0, 0, 1]' : 0.161417}
{'[1, 0, 6, 5, 0, 5, 0, 0, 19, 0, 4, 0, 2, 0, 0, 0, 0, 1]' : 0.161373}
{'[1, 0, 6, 5, 0, 5, 0, 0, 19, 0, 4, 0, 2, 0, 0, 0, 0, 1]' : 0.161357}
{'[1, 0, 6, 5, 0, 5, 0, 0, 19, 0, 4, 0, 2, 0, 0, 0, 0, 1]' : 0.1616}
{'[1, 0, 6, 5, 0, 5, 0, 0, 19, 0, 4, 0, 2, 0, 0, 0, 0, 1]' : 0.161431}
{'[1, 0, 6, 5, 0, 5, 0, 0, 19, 0, 4, 0, 2, 0, 0, 0, 0, 1]' : 0.161383}
{'[1, 0, 6, 5, 0, 5, 0, 0, 19, 0, 4, 0, 2, 0, 0, 0, 0, 1]' : 0.161589}
{'[1, 0, 6, 5, 0, 5, 0, 0, 19, 0, 4, 0, 2, 0, 0, 0, 0, 1]' : 0.161401}
{'[1, 0, 6, 5, 0, 5, 0, 0, 19, 0, 4, 0, 2, 0, 0, 0, 0, 1]' : 0.161384}
{'[1, 0, 6, 5, 0, 5, 0, 0, 19, 0, 4, 0, 2, 0, 0, 0, 0, 1]' : 0.16137}
{'[1, 0, 6, 5, 0, 5, 0, 0, 19, 0, 4, 0, 2, 0, 0, 0, 0, 1]' : 0.161371}
{'[1, 0, 6, 5, 0, 5, 0, 0, 19, 0, 4, 0, 2, 0, 0, 0, 0, 1]' : 0.16142}
{'[1, 0, 6, 5, 0, 5, 0, 0, 19, 0, 4, 0, 2, 0, 0, 0, 0, 1]' : 0.161376}
{'[1, 0, 6, 5, 0, 5, 0, 0, 19, 0, 4, 0, 2, 0, 0, 0, 0, 1]' : 0.16141}
{'[1, 0, 6, 5, 0, 5, 0, 0, 19, 0, 4, 0, 2, 0, 0, 0, 0, 1]' : 0.161412}
{'[1, 0, 6, 5, 0, 5, 0, 0, 19, 0, 4, 0, 2, 0, 0, 0, 0, 1]' : 0.16183}
{'[1, 0, 6, 5, 0, 5, 0, 0, 19, 0, 4, 0, 2, 0, 0, 0, 0, 1]' : 0.161622}
{'[1, 0, 6, 5, 0, 5, 0, 0, 19, 0, 4, 0, 2, 0, 0, 0, 0, 1]' : 0.161461}
{'[1, 0, 6, 5, 0, 5, 0, 0, 19, 0, 4, 0, 2, 0, 0, 0, 0, 1]' : 0.161758}
{'[1, 0, 6, 5, 0, 5, 0, 0, 19, 0, 4, 0, 2, 0, 0, 0, 0, 1]' : 0.161478}
{'[1, 0, 6, 5, 0, 5, 0, 0, 19, 0, 4, 0, 2, 0, 0, 0, 0, 1]' : 0.161478}

out:
 ["{'[1, 0, 6, 5, 0, 5, 0, 0, 19, 0, 4, 0, 2, 0, 0, 0, 0, 1]' : 0.193924}", "{'[1, 0, 6, 5, 0, 5, 0, 0, 19, 0, 4, 0, 2, 0, 0, 0, 0, 1]' : 0.188084}", "{'[1, 0, 6, 5, 0, 5, 0, 0, 19, 0, 4, 0, 2, 0, 0, 0, 0, 1]' : 0.161536}", "{'[1, 0, 6, 5, 0, 5, 0, 0, 19, 0, 4, 0, 2, 0, 0, 0, 0, 1]' : 0.161575}", "{'[1, 0, 6, 5, 0, 5, 0, 0, 19, 0, 4, 0, 2, 0, 0, 0, 0, 1]' : 0.161359}", "{'[1, 0, 6, 5, 0, 5, 0, 0, 19, 0, 4, 0, 2, 0, 0, 0, 0, 1]' : 0.161377}", "{'[1, 0, 6, 5, 0, 5, 0, 0, 19, 0, 4, 0, 2, 0, 0, 0, 0, 1]' : 0.161663}", "{'[1, 0, 6, 5, 0, 5, 0, 0, 19, 0, 4, 0, 2, 0, 0, 0, 0, 1]' : 0.161408}", "{'[1, 0, 6, 5, 0, 5, 0, 0, 19, 0, 4, 0, 2, 0, 0, 0, 0, 1]' : 0.161369}", "{'[1, 0, 6, 5, 0, 5, 0, 0, 19, 0, 4, 0, 2, 0, 0, 0, 0, 1]' : 0.161417}", "{'[1, 0, 6, 5, 0, 5, 0, 0, 19, 0, 4, 0, 2, 0, 0, 0, 0, 1]' : 0.161373}", "{'[1, 0, 6, 5, 0, 5, 0, 0, 19, 0, 4, 0, 2, 0, 0, 0, 0, 1]' : 0.161357}", "{'[1, 0, 6, 5, 0, 5, 0, 0, 19, 0, 4, 0, 2, 0, 0, 0, 0, 1]' : 0.1616}", "{'[1, 0, 6, 5, 0, 5, 0, 0, 19, 0, 4, 0, 2, 0, 0, 0, 0, 1]' : 0.161431}", "{'[1, 0, 6, 5, 0, 5, 0, 0, 19, 0, 4, 0, 2, 0, 0, 0, 0, 1]' : 0.161383}", "{'[1, 0, 6, 5, 0, 5, 0, 0, 19, 0, 4, 0, 2, 0, 0, 0, 0, 1]' : 0.161589}", "{'[1, 0, 6, 5, 0, 5, 0, 0, 19, 0, 4, 0, 2, 0, 0, 0, 0, 1]' : 0.161401}", "{'[1, 0, 6, 5, 0, 5, 0, 0, 19, 0, 4, 0, 2, 0, 0, 0, 0, 1]' : 0.161384}", "{'[1, 0, 6, 5, 0, 5, 0, 0, 19, 0, 4, 0, 2, 0, 0, 0, 0, 1]' : 0.16137}", "{'[1, 0, 6, 5, 0, 5, 0, 0, 19, 0, 4, 0, 2, 0, 0, 0, 0, 1]' : 0.161371}", "{'[1, 0, 6, 5, 0, 5, 0, 0, 19, 0, 4, 0, 2, 0, 0, 0, 0, 1]' : 0.16142}", "{'[1, 0, 6, 5, 0, 5, 0, 0, 19, 0, 4, 0, 2, 0, 0, 0, 0, 1]' : 0.161376}", "{'[1, 0, 6, 5, 0, 5, 0, 0, 19, 0, 4, 0, 2, 0, 0, 0, 0, 1]' : 0.16141}", "{'[1, 0, 6, 5, 0, 5, 0, 0, 19, 0, 4, 0, 2, 0, 0, 0, 0, 1]' : 0.161412}", "{'[1, 0, 6, 5, 0, 5, 0, 0, 19, 0, 4, 0, 2, 0, 0, 0, 0, 1]' : 0.16183}", "{'[1, 0, 6, 5, 0, 5, 0, 0, 19, 0, 4, 0, 2, 0, 0, 0, 0, 1]' : 0.161622}", "{'[1, 0, 6, 5, 0, 5, 0, 0, 19, 0, 4, 0, 2, 0, 0, 0, 0, 1]' : 0.161461}", "{'[1, 0, 6, 5, 0, 5, 0, 0, 19, 0, 4, 0, 2, 0, 0, 0, 0, 1]' : 0.161758}", "{'[1, 0, 6, 5, 0, 5, 0, 0, 19, 0, 4, 0, 2, 0, 0, 0, 0, 1]' : 0.161478}", "{'[1, 0, 6, 5, 0, 5, 0, 0, 19, 0, 4, 0, 2, 0, 0, 0, 0, 1]' : 0.161478}"]
returning from 'run': {'[1, 0, 6, 5, 0, 5, 0, 0, 19, 0, 4, 0, 2, 0, 0, 0, 0, 1]': ([0.193924, 0.188084, 0.161536, 0.161575, 0.161359, 0.161377, 0.161663, 0.161408, 0.161369, 0.161417, 0.161373, 0.161357, 0.1616, 0.161431, 0.161383, 0.161589, 0.161401, 0.161384, 0.16137, 0.161371, 0.16142, 0.161376, 0.16141, 0.161412, 0.16183, 0.161622, 0.161461, 0.161758, 0.161478, 0.161478], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 6, 5, 0, 5, 0, 0, 19, 0, 4, 0, 2, 0, 0, 0, 0, 1]': ([0.193924, 0.188084, 0.161536, 0.161575, 0.161359, 0.161377, 0.161663, 0.161408, 0.161369, 0.161417, 0.161373, 0.161357, 0.1616, 0.161431, 0.161383, 0.161589, 0.161401, 0.161384, 0.16137, 0.161371, 0.16142, 0.161376, 0.16141, 0.161412, 0.16183, 0.161622, 0.161461, 0.161758, 0.161478, 0.161478], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	6
        Additions: 		986
        Multiplications: 	288
        Divisions: 		0
        Logical: 		0
        Reads: 			1736
        Writes: 		233
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest2.exe __orio_perftest2.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest2.exe  
Program Test Output: 
{'[3, 3, 3, 2, 0, 6, 1, 0, 18, 0, 2, 2, 1, 0, 1, 0, 1, 1]' : 0.108924}
{'[3, 3, 3, 2, 0, 6, 1, 0, 18, 0, 2, 2, 1, 0, 1, 0, 1, 1]' : 0.106282}
{'[3, 3, 3, 2, 0, 6, 1, 0, 18, 0, 2, 2, 1, 0, 1, 0, 1, 1]' : 0.106033}
{'[3, 3, 3, 2, 0, 6, 1, 0, 18, 0, 2, 2, 1, 0, 1, 0, 1, 1]' : 0.110365}
{'[3, 3, 3, 2, 0, 6, 1, 0, 18, 0, 2, 2, 1, 0, 1, 0, 1, 1]' : 0.111352}
{'[3, 3, 3, 2, 0, 6, 1, 0, 18, 0, 2, 2, 1, 0, 1, 0, 1, 1]' : 0.111293}
{'[3, 3, 3, 2, 0, 6, 1, 0, 18, 0, 2, 2, 1, 0, 1, 0, 1, 1]' : 0.111328}
{'[3, 3, 3, 2, 0, 6, 1, 0, 18, 0, 2, 2, 1, 0, 1, 0, 1, 1]' : 0.111788}
{'[3, 3, 3, 2, 0, 6, 1, 0, 18, 0, 2, 2, 1, 0, 1, 0, 1, 1]' : 0.111358}
{'[3, 3, 3, 2, 0, 6, 1, 0, 18, 0, 2, 2, 1, 0, 1, 0, 1, 1]' : 0.11097}
{'[3, 3, 3, 2, 0, 6, 1, 0, 18, 0, 2, 2, 1, 0, 1, 0, 1, 1]' : 0.108799}
{'[3, 3, 3, 2, 0, 6, 1, 0, 18, 0, 2, 2, 1, 0, 1, 0, 1, 1]' : 0.107749}
{'[3, 3, 3, 2, 0, 6, 1, 0, 18, 0, 2, 2, 1, 0, 1, 0, 1, 1]' : 0.108413}
{'[3, 3, 3, 2, 0, 6, 1, 0, 18, 0, 2, 2, 1, 0, 1, 0, 1, 1]' : 0.108716}
{'[3, 3, 3, 2, 0, 6, 1, 0, 18, 0, 2, 2, 1, 0, 1, 0, 1, 1]' : 0.108751}
{'[3, 3, 3, 2, 0, 6, 1, 0, 18, 0, 2, 2, 1, 0, 1, 0, 1, 1]' : 0.108712}
{'[3, 3, 3, 2, 0, 6, 1, 0, 18, 0, 2, 2, 1, 0, 1, 0, 1, 1]' : 0.109049}
{'[3, 3, 3, 2, 0, 6, 1, 0, 18, 0, 2, 2, 1, 0, 1, 0, 1, 1]' : 0.109061}
{'[3, 3, 3, 2, 0, 6, 1, 0, 18, 0, 2, 2, 1, 0, 1, 0, 1, 1]' : 0.108833}
{'[3, 3, 3, 2, 0, 6, 1, 0, 18, 0, 2, 2, 1, 0, 1, 0, 1, 1]' : 0.10891}
{'[3, 3, 3, 2, 0, 6, 1, 0, 18, 0, 2, 2, 1, 0, 1, 0, 1, 1]' : 0.10879}
{'[3, 3, 3, 2, 0, 6, 1, 0, 18, 0, 2, 2, 1, 0, 1, 0, 1, 1]' : 0.110408}
{'[3, 3, 3, 2, 0, 6, 1, 0, 18, 0, 2, 2, 1, 0, 1, 0, 1, 1]' : 0.11124}
{'[3, 3, 3, 2, 0, 6, 1, 0, 18, 0, 2, 2, 1, 0, 1, 0, 1, 1]' : 0.111292}
{'[3, 3, 3, 2, 0, 6, 1, 0, 18, 0, 2, 2, 1, 0, 1, 0, 1, 1]' : 0.111528}
{'[3, 3, 3, 2, 0, 6, 1, 0, 18, 0, 2, 2, 1, 0, 1, 0, 1, 1]' : 0.111454}
{'[3, 3, 3, 2, 0, 6, 1, 0, 18, 0, 2, 2, 1, 0, 1, 0, 1, 1]' : 0.11138}
{'[3, 3, 3, 2, 0, 6, 1, 0, 18, 0, 2, 2, 1, 0, 1, 0, 1, 1]' : 0.111306}
{'[3, 3, 3, 2, 0, 6, 1, 0, 18, 0, 2, 2, 1, 0, 1, 0, 1, 1]' : 0.111394}
{'[3, 3, 3, 2, 0, 6, 1, 0, 18, 0, 2, 2, 1, 0, 1, 0, 1, 1]' : 0.111465}

out:
 ["{'[3, 3, 3, 2, 0, 6, 1, 0, 18, 0, 2, 2, 1, 0, 1, 0, 1, 1]' : 0.108924}", "{'[3, 3, 3, 2, 0, 6, 1, 0, 18, 0, 2, 2, 1, 0, 1, 0, 1, 1]' : 0.106282}", "{'[3, 3, 3, 2, 0, 6, 1, 0, 18, 0, 2, 2, 1, 0, 1, 0, 1, 1]' : 0.106033}", "{'[3, 3, 3, 2, 0, 6, 1, 0, 18, 0, 2, 2, 1, 0, 1, 0, 1, 1]' : 0.110365}", "{'[3, 3, 3, 2, 0, 6, 1, 0, 18, 0, 2, 2, 1, 0, 1, 0, 1, 1]' : 0.111352}", "{'[3, 3, 3, 2, 0, 6, 1, 0, 18, 0, 2, 2, 1, 0, 1, 0, 1, 1]' : 0.111293}", "{'[3, 3, 3, 2, 0, 6, 1, 0, 18, 0, 2, 2, 1, 0, 1, 0, 1, 1]' : 0.111328}", "{'[3, 3, 3, 2, 0, 6, 1, 0, 18, 0, 2, 2, 1, 0, 1, 0, 1, 1]' : 0.111788}", "{'[3, 3, 3, 2, 0, 6, 1, 0, 18, 0, 2, 2, 1, 0, 1, 0, 1, 1]' : 0.111358}", "{'[3, 3, 3, 2, 0, 6, 1, 0, 18, 0, 2, 2, 1, 0, 1, 0, 1, 1]' : 0.11097}", "{'[3, 3, 3, 2, 0, 6, 1, 0, 18, 0, 2, 2, 1, 0, 1, 0, 1, 1]' : 0.108799}", "{'[3, 3, 3, 2, 0, 6, 1, 0, 18, 0, 2, 2, 1, 0, 1, 0, 1, 1]' : 0.107749}", "{'[3, 3, 3, 2, 0, 6, 1, 0, 18, 0, 2, 2, 1, 0, 1, 0, 1, 1]' : 0.108413}", "{'[3, 3, 3, 2, 0, 6, 1, 0, 18, 0, 2, 2, 1, 0, 1, 0, 1, 1]' : 0.108716}", "{'[3, 3, 3, 2, 0, 6, 1, 0, 18, 0, 2, 2, 1, 0, 1, 0, 1, 1]' : 0.108751}", "{'[3, 3, 3, 2, 0, 6, 1, 0, 18, 0, 2, 2, 1, 0, 1, 0, 1, 1]' : 0.108712}", "{'[3, 3, 3, 2, 0, 6, 1, 0, 18, 0, 2, 2, 1, 0, 1, 0, 1, 1]' : 0.109049}", "{'[3, 3, 3, 2, 0, 6, 1, 0, 18, 0, 2, 2, 1, 0, 1, 0, 1, 1]' : 0.109061}", "{'[3, 3, 3, 2, 0, 6, 1, 0, 18, 0, 2, 2, 1, 0, 1, 0, 1, 1]' : 0.108833}", "{'[3, 3, 3, 2, 0, 6, 1, 0, 18, 0, 2, 2, 1, 0, 1, 0, 1, 1]' : 0.10891}", "{'[3, 3, 3, 2, 0, 6, 1, 0, 18, 0, 2, 2, 1, 0, 1, 0, 1, 1]' : 0.10879}", "{'[3, 3, 3, 2, 0, 6, 1, 0, 18, 0, 2, 2, 1, 0, 1, 0, 1, 1]' : 0.110408}", "{'[3, 3, 3, 2, 0, 6, 1, 0, 18, 0, 2, 2, 1, 0, 1, 0, 1, 1]' : 0.11124}", "{'[3, 3, 3, 2, 0, 6, 1, 0, 18, 0, 2, 2, 1, 0, 1, 0, 1, 1]' : 0.111292}", "{'[3, 3, 3, 2, 0, 6, 1, 0, 18, 0, 2, 2, 1, 0, 1, 0, 1, 1]' : 0.111528}", "{'[3, 3, 3, 2, 0, 6, 1, 0, 18, 0, 2, 2, 1, 0, 1, 0, 1, 1]' : 0.111454}", "{'[3, 3, 3, 2, 0, 6, 1, 0, 18, 0, 2, 2, 1, 0, 1, 0, 1, 1]' : 0.11138}", "{'[3, 3, 3, 2, 0, 6, 1, 0, 18, 0, 2, 2, 1, 0, 1, 0, 1, 1]' : 0.111306}", "{'[3, 3, 3, 2, 0, 6, 1, 0, 18, 0, 2, 2, 1, 0, 1, 0, 1, 1]' : 0.111394}", "{'[3, 3, 3, 2, 0, 6, 1, 0, 18, 0, 2, 2, 1, 0, 1, 0, 1, 1]' : 0.111465}"]
returning from 'run': {'[3, 3, 3, 2, 0, 6, 1, 0, 18, 0, 2, 2, 1, 0, 1, 0, 1, 1]': ([0.108924, 0.106282, 0.106033, 0.110365, 0.111352, 0.111293, 0.111328, 0.111788, 0.111358, 0.11097, 0.108799, 0.107749, 0.108413, 0.108716, 0.108751, 0.108712, 0.109049, 0.109061, 0.108833, 0.10891, 0.10879, 0.110408, 0.11124, 0.111292, 0.111528, 0.111454, 0.11138, 0.111306, 0.111394, 0.111465], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 3, 3, 2, 0, 6, 1, 0, 18, 0, 2, 2, 1, 0, 1, 0, 1, 1]': ([0.108924, 0.106282, 0.106033, 0.110365, 0.111352, 0.111293, 0.111328, 0.111788, 0.111358, 0.11097, 0.108799, 0.107749, 0.108413, 0.108716, 0.108751, 0.108712, 0.109049, 0.109061, 0.108833, 0.10891, 0.10879, 0.110408, 0.11124, 0.111292, 0.111528, 0.111454, 0.11138, 0.111306, 0.111394, 0.111465], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	45
        Max loop nest depth: 	5
        Additions: 		6040
        Multiplications: 	1802
        Divisions: 		0
        Logical: 		0
        Reads: 			9560
        Writes: 		1049
        Comparisons:		45
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest3.exe __orio_perftest3.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest3.exe  
Program Test Output: 
{'[0, 6, 2, 3, 0, 6, 1, 0, 0, 19, 0, 14, 2, 0, 0, 0, 1, 1]' : 0.21452}
{'[0, 6, 2, 3, 0, 6, 1, 0, 0, 19, 0, 14, 2, 0, 0, 0, 1, 1]' : 0.215314}
{'[0, 6, 2, 3, 0, 6, 1, 0, 0, 19, 0, 14, 2, 0, 0, 0, 1, 1]' : 0.202179}
{'[0, 6, 2, 3, 0, 6, 1, 0, 0, 19, 0, 14, 2, 0, 0, 0, 1, 1]' : 0.19259}
{'[0, 6, 2, 3, 0, 6, 1, 0, 0, 19, 0, 14, 2, 0, 0, 0, 1, 1]' : 0.192981}
{'[0, 6, 2, 3, 0, 6, 1, 0, 0, 19, 0, 14, 2, 0, 0, 0, 1, 1]' : 0.193133}
{'[0, 6, 2, 3, 0, 6, 1, 0, 0, 19, 0, 14, 2, 0, 0, 0, 1, 1]' : 0.193938}
{'[0, 6, 2, 3, 0, 6, 1, 0, 0, 19, 0, 14, 2, 0, 0, 0, 1, 1]' : 0.193466}
{'[0, 6, 2, 3, 0, 6, 1, 0, 0, 19, 0, 14, 2, 0, 0, 0, 1, 1]' : 0.193831}
{'[0, 6, 2, 3, 0, 6, 1, 0, 0, 19, 0, 14, 2, 0, 0, 0, 1, 1]' : 0.193842}
{'[0, 6, 2, 3, 0, 6, 1, 0, 0, 19, 0, 14, 2, 0, 0, 0, 1, 1]' : 0.193644}
{'[0, 6, 2, 3, 0, 6, 1, 0, 0, 19, 0, 14, 2, 0, 0, 0, 1, 1]' : 0.192169}
{'[0, 6, 2, 3, 0, 6, 1, 0, 0, 19, 0, 14, 2, 0, 0, 0, 1, 1]' : 0.193007}
{'[0, 6, 2, 3, 0, 6, 1, 0, 0, 19, 0, 14, 2, 0, 0, 0, 1, 1]' : 0.193654}
{'[0, 6, 2, 3, 0, 6, 1, 0, 0, 19, 0, 14, 2, 0, 0, 0, 1, 1]' : 0.193787}
{'[0, 6, 2, 3, 0, 6, 1, 0, 0, 19, 0, 14, 2, 0, 0, 0, 1, 1]' : 0.193665}
{'[0, 6, 2, 3, 0, 6, 1, 0, 0, 19, 0, 14, 2, 0, 0, 0, 1, 1]' : 0.193666}
{'[0, 6, 2, 3, 0, 6, 1, 0, 0, 19, 0, 14, 2, 0, 0, 0, 1, 1]' : 0.194689}
{'[0, 6, 2, 3, 0, 6, 1, 0, 0, 19, 0, 14, 2, 0, 0, 0, 1, 1]' : 0.1933}
{'[0, 6, 2, 3, 0, 6, 1, 0, 0, 19, 0, 14, 2, 0, 0, 0, 1, 1]' : 0.193376}
{'[0, 6, 2, 3, 0, 6, 1, 0, 0, 19, 0, 14, 2, 0, 0, 0, 1, 1]' : 0.189251}
{'[0, 6, 2, 3, 0, 6, 1, 0, 0, 19, 0, 14, 2, 0, 0, 0, 1, 1]' : 0.189189}
{'[0, 6, 2, 3, 0, 6, 1, 0, 0, 19, 0, 14, 2, 0, 0, 0, 1, 1]' : 0.192709}
{'[0, 6, 2, 3, 0, 6, 1, 0, 0, 19, 0, 14, 2, 0, 0, 0, 1, 1]' : 0.196966}
{'[0, 6, 2, 3, 0, 6, 1, 0, 0, 19, 0, 14, 2, 0, 0, 0, 1, 1]' : 0.197537}
{'[0, 6, 2, 3, 0, 6, 1, 0, 0, 19, 0, 14, 2, 0, 0, 0, 1, 1]' : 0.19857}
{'[0, 6, 2, 3, 0, 6, 1, 0, 0, 19, 0, 14, 2, 0, 0, 0, 1, 1]' : 0.196646}
{'[0, 6, 2, 3, 0, 6, 1, 0, 0, 19, 0, 14, 2, 0, 0, 0, 1, 1]' : 0.193933}
{'[0, 6, 2, 3, 0, 6, 1, 0, 0, 19, 0, 14, 2, 0, 0, 0, 1, 1]' : 0.192923}
{'[0, 6, 2, 3, 0, 6, 1, 0, 0, 19, 0, 14, 2, 0, 0, 0, 1, 1]' : 0.193855}

out:
 ["{'[0, 6, 2, 3, 0, 6, 1, 0, 0, 19, 0, 14, 2, 0, 0, 0, 1, 1]' : 0.21452}", "{'[0, 6, 2, 3, 0, 6, 1, 0, 0, 19, 0, 14, 2, 0, 0, 0, 1, 1]' : 0.215314}", "{'[0, 6, 2, 3, 0, 6, 1, 0, 0, 19, 0, 14, 2, 0, 0, 0, 1, 1]' : 0.202179}", "{'[0, 6, 2, 3, 0, 6, 1, 0, 0, 19, 0, 14, 2, 0, 0, 0, 1, 1]' : 0.19259}", "{'[0, 6, 2, 3, 0, 6, 1, 0, 0, 19, 0, 14, 2, 0, 0, 0, 1, 1]' : 0.192981}", "{'[0, 6, 2, 3, 0, 6, 1, 0, 0, 19, 0, 14, 2, 0, 0, 0, 1, 1]' : 0.193133}", "{'[0, 6, 2, 3, 0, 6, 1, 0, 0, 19, 0, 14, 2, 0, 0, 0, 1, 1]' : 0.193938}", "{'[0, 6, 2, 3, 0, 6, 1, 0, 0, 19, 0, 14, 2, 0, 0, 0, 1, 1]' : 0.193466}", "{'[0, 6, 2, 3, 0, 6, 1, 0, 0, 19, 0, 14, 2, 0, 0, 0, 1, 1]' : 0.193831}", "{'[0, 6, 2, 3, 0, 6, 1, 0, 0, 19, 0, 14, 2, 0, 0, 0, 1, 1]' : 0.193842}", "{'[0, 6, 2, 3, 0, 6, 1, 0, 0, 19, 0, 14, 2, 0, 0, 0, 1, 1]' : 0.193644}", "{'[0, 6, 2, 3, 0, 6, 1, 0, 0, 19, 0, 14, 2, 0, 0, 0, 1, 1]' : 0.192169}", "{'[0, 6, 2, 3, 0, 6, 1, 0, 0, 19, 0, 14, 2, 0, 0, 0, 1, 1]' : 0.193007}", "{'[0, 6, 2, 3, 0, 6, 1, 0, 0, 19, 0, 14, 2, 0, 0, 0, 1, 1]' : 0.193654}", "{'[0, 6, 2, 3, 0, 6, 1, 0, 0, 19, 0, 14, 2, 0, 0, 0, 1, 1]' : 0.193787}", "{'[0, 6, 2, 3, 0, 6, 1, 0, 0, 19, 0, 14, 2, 0, 0, 0, 1, 1]' : 0.193665}", "{'[0, 6, 2, 3, 0, 6, 1, 0, 0, 19, 0, 14, 2, 0, 0, 0, 1, 1]' : 0.193666}", "{'[0, 6, 2, 3, 0, 6, 1, 0, 0, 19, 0, 14, 2, 0, 0, 0, 1, 1]' : 0.194689}", "{'[0, 6, 2, 3, 0, 6, 1, 0, 0, 19, 0, 14, 2, 0, 0, 0, 1, 1]' : 0.1933}", "{'[0, 6, 2, 3, 0, 6, 1, 0, 0, 19, 0, 14, 2, 0, 0, 0, 1, 1]' : 0.193376}", "{'[0, 6, 2, 3, 0, 6, 1, 0, 0, 19, 0, 14, 2, 0, 0, 0, 1, 1]' : 0.189251}", "{'[0, 6, 2, 3, 0, 6, 1, 0, 0, 19, 0, 14, 2, 0, 0, 0, 1, 1]' : 0.189189}", "{'[0, 6, 2, 3, 0, 6, 1, 0, 0, 19, 0, 14, 2, 0, 0, 0, 1, 1]' : 0.192709}", "{'[0, 6, 2, 3, 0, 6, 1, 0, 0, 19, 0, 14, 2, 0, 0, 0, 1, 1]' : 0.196966}", "{'[0, 6, 2, 3, 0, 6, 1, 0, 0, 19, 0, 14, 2, 0, 0, 0, 1, 1]' : 0.197537}", "{'[0, 6, 2, 3, 0, 6, 1, 0, 0, 19, 0, 14, 2, 0, 0, 0, 1, 1]' : 0.19857}", "{'[0, 6, 2, 3, 0, 6, 1, 0, 0, 19, 0, 14, 2, 0, 0, 0, 1, 1]' : 0.196646}", "{'[0, 6, 2, 3, 0, 6, 1, 0, 0, 19, 0, 14, 2, 0, 0, 0, 1, 1]' : 0.193933}", "{'[0, 6, 2, 3, 0, 6, 1, 0, 0, 19, 0, 14, 2, 0, 0, 0, 1, 1]' : 0.192923}", "{'[0, 6, 2, 3, 0, 6, 1, 0, 0, 19, 0, 14, 2, 0, 0, 0, 1, 1]' : 0.193855}"]
returning from 'run': {'[0, 6, 2, 3, 0, 6, 1, 0, 0, 19, 0, 14, 2, 0, 0, 0, 1, 1]': ([0.21452, 0.215314, 0.202179, 0.19259, 0.192981, 0.193133, 0.193938, 0.193466, 0.193831, 0.193842, 0.193644, 0.192169, 0.193007, 0.193654, 0.193787, 0.193665, 0.193666, 0.194689, 0.1933, 0.193376, 0.189251, 0.189189, 0.192709, 0.196966, 0.197537, 0.19857, 0.196646, 0.193933, 0.192923, 0.193855], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 2, 3, 0, 6, 1, 0, 0, 19, 0, 14, 2, 0, 0, 0, 1, 1]': ([0.21452, 0.215314, 0.202179, 0.19259, 0.192981, 0.193133, 0.193938, 0.193466, 0.193831, 0.193842, 0.193644, 0.192169, 0.193007, 0.193654, 0.193787, 0.193665, 0.193666, 0.194689, 0.1933, 0.193376, 0.189251, 0.189189, 0.192709, 0.196966, 0.197537, 0.19857, 0.196646, 0.193933, 0.192923, 0.193855], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	5
        Additions: 		631
        Multiplications: 	248
        Divisions: 		0
        Logical: 		0
        Reads: 			1206
        Writes: 		208
        Comparisons:		18
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest4.exe __orio_perftest4.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest4.exe  
Program Test Output: 
{'[6, 0, 0, 5, 0, 3, 1, 0, 27, 2, 28, 0, 0, 0, 0, 1, 1, 0]' : 0.176124}
{'[6, 0, 0, 5, 0, 3, 1, 0, 27, 2, 28, 0, 0, 0, 0, 1, 1, 0]' : 0.176009}
{'[6, 0, 0, 5, 0, 3, 1, 0, 27, 2, 28, 0, 0, 0, 0, 1, 1, 0]' : 0.169056}
{'[6, 0, 0, 5, 0, 3, 1, 0, 27, 2, 28, 0, 0, 0, 0, 1, 1, 0]' : 0.157178}
{'[6, 0, 0, 5, 0, 3, 1, 0, 27, 2, 28, 0, 0, 0, 0, 1, 1, 0]' : 0.157317}
{'[6, 0, 0, 5, 0, 3, 1, 0, 27, 2, 28, 0, 0, 0, 0, 1, 1, 0]' : 0.157314}
{'[6, 0, 0, 5, 0, 3, 1, 0, 27, 2, 28, 0, 0, 0, 0, 1, 1, 0]' : 0.15718}
{'[6, 0, 0, 5, 0, 3, 1, 0, 27, 2, 28, 0, 0, 0, 0, 1, 1, 0]' : 0.156587}
{'[6, 0, 0, 5, 0, 3, 1, 0, 27, 2, 28, 0, 0, 0, 0, 1, 1, 0]' : 0.151988}
{'[6, 0, 0, 5, 0, 3, 1, 0, 27, 2, 28, 0, 0, 0, 0, 1, 1, 0]' : 0.157012}
{'[6, 0, 0, 5, 0, 3, 1, 0, 27, 2, 28, 0, 0, 0, 0, 1, 1, 0]' : 0.156954}
{'[6, 0, 0, 5, 0, 3, 1, 0, 27, 2, 28, 0, 0, 0, 0, 1, 1, 0]' : 0.155949}
{'[6, 0, 0, 5, 0, 3, 1, 0, 27, 2, 28, 0, 0, 0, 0, 1, 1, 0]' : 0.152058}
{'[6, 0, 0, 5, 0, 3, 1, 0, 27, 2, 28, 0, 0, 0, 0, 1, 1, 0]' : 0.152464}
{'[6, 0, 0, 5, 0, 3, 1, 0, 27, 2, 28, 0, 0, 0, 0, 1, 1, 0]' : 0.150348}
{'[6, 0, 0, 5, 0, 3, 1, 0, 27, 2, 28, 0, 0, 0, 0, 1, 1, 0]' : 0.151806}
{'[6, 0, 0, 5, 0, 3, 1, 0, 27, 2, 28, 0, 0, 0, 0, 1, 1, 0]' : 0.152106}
{'[6, 0, 0, 5, 0, 3, 1, 0, 27, 2, 28, 0, 0, 0, 0, 1, 1, 0]' : 0.15217}
{'[6, 0, 0, 5, 0, 3, 1, 0, 27, 2, 28, 0, 0, 0, 0, 1, 1, 0]' : 0.15557}
{'[6, 0, 0, 5, 0, 3, 1, 0, 27, 2, 28, 0, 0, 0, 0, 1, 1, 0]' : 0.156916}
{'[6, 0, 0, 5, 0, 3, 1, 0, 27, 2, 28, 0, 0, 0, 0, 1, 1, 0]' : 0.156934}
{'[6, 0, 0, 5, 0, 3, 1, 0, 27, 2, 28, 0, 0, 0, 0, 1, 1, 0]' : 0.151645}
{'[6, 0, 0, 5, 0, 3, 1, 0, 27, 2, 28, 0, 0, 0, 0, 1, 1, 0]' : 0.152086}
{'[6, 0, 0, 5, 0, 3, 1, 0, 27, 2, 28, 0, 0, 0, 0, 1, 1, 0]' : 0.152126}
{'[6, 0, 0, 5, 0, 3, 1, 0, 27, 2, 28, 0, 0, 0, 0, 1, 1, 0]' : 0.152598}
{'[6, 0, 0, 5, 0, 3, 1, 0, 27, 2, 28, 0, 0, 0, 0, 1, 1, 0]' : 0.152326}
{'[6, 0, 0, 5, 0, 3, 1, 0, 27, 2, 28, 0, 0, 0, 0, 1, 1, 0]' : 0.152284}
{'[6, 0, 0, 5, 0, 3, 1, 0, 27, 2, 28, 0, 0, 0, 0, 1, 1, 0]' : 0.149837}
{'[6, 0, 0, 5, 0, 3, 1, 0, 27, 2, 28, 0, 0, 0, 0, 1, 1, 0]' : 0.151447}
{'[6, 0, 0, 5, 0, 3, 1, 0, 27, 2, 28, 0, 0, 0, 0, 1, 1, 0]' : 0.152089}

out:
 ["{'[6, 0, 0, 5, 0, 3, 1, 0, 27, 2, 28, 0, 0, 0, 0, 1, 1, 0]' : 0.176124}", "{'[6, 0, 0, 5, 0, 3, 1, 0, 27, 2, 28, 0, 0, 0, 0, 1, 1, 0]' : 0.176009}", "{'[6, 0, 0, 5, 0, 3, 1, 0, 27, 2, 28, 0, 0, 0, 0, 1, 1, 0]' : 0.169056}", "{'[6, 0, 0, 5, 0, 3, 1, 0, 27, 2, 28, 0, 0, 0, 0, 1, 1, 0]' : 0.157178}", "{'[6, 0, 0, 5, 0, 3, 1, 0, 27, 2, 28, 0, 0, 0, 0, 1, 1, 0]' : 0.157317}", "{'[6, 0, 0, 5, 0, 3, 1, 0, 27, 2, 28, 0, 0, 0, 0, 1, 1, 0]' : 0.157314}", "{'[6, 0, 0, 5, 0, 3, 1, 0, 27, 2, 28, 0, 0, 0, 0, 1, 1, 0]' : 0.15718}", "{'[6, 0, 0, 5, 0, 3, 1, 0, 27, 2, 28, 0, 0, 0, 0, 1, 1, 0]' : 0.156587}", "{'[6, 0, 0, 5, 0, 3, 1, 0, 27, 2, 28, 0, 0, 0, 0, 1, 1, 0]' : 0.151988}", "{'[6, 0, 0, 5, 0, 3, 1, 0, 27, 2, 28, 0, 0, 0, 0, 1, 1, 0]' : 0.157012}", "{'[6, 0, 0, 5, 0, 3, 1, 0, 27, 2, 28, 0, 0, 0, 0, 1, 1, 0]' : 0.156954}", "{'[6, 0, 0, 5, 0, 3, 1, 0, 27, 2, 28, 0, 0, 0, 0, 1, 1, 0]' : 0.155949}", "{'[6, 0, 0, 5, 0, 3, 1, 0, 27, 2, 28, 0, 0, 0, 0, 1, 1, 0]' : 0.152058}", "{'[6, 0, 0, 5, 0, 3, 1, 0, 27, 2, 28, 0, 0, 0, 0, 1, 1, 0]' : 0.152464}", "{'[6, 0, 0, 5, 0, 3, 1, 0, 27, 2, 28, 0, 0, 0, 0, 1, 1, 0]' : 0.150348}", "{'[6, 0, 0, 5, 0, 3, 1, 0, 27, 2, 28, 0, 0, 0, 0, 1, 1, 0]' : 0.151806}", "{'[6, 0, 0, 5, 0, 3, 1, 0, 27, 2, 28, 0, 0, 0, 0, 1, 1, 0]' : 0.152106}", "{'[6, 0, 0, 5, 0, 3, 1, 0, 27, 2, 28, 0, 0, 0, 0, 1, 1, 0]' : 0.15217}", "{'[6, 0, 0, 5, 0, 3, 1, 0, 27, 2, 28, 0, 0, 0, 0, 1, 1, 0]' : 0.15557}", "{'[6, 0, 0, 5, 0, 3, 1, 0, 27, 2, 28, 0, 0, 0, 0, 1, 1, 0]' : 0.156916}", "{'[6, 0, 0, 5, 0, 3, 1, 0, 27, 2, 28, 0, 0, 0, 0, 1, 1, 0]' : 0.156934}", "{'[6, 0, 0, 5, 0, 3, 1, 0, 27, 2, 28, 0, 0, 0, 0, 1, 1, 0]' : 0.151645}", "{'[6, 0, 0, 5, 0, 3, 1, 0, 27, 2, 28, 0, 0, 0, 0, 1, 1, 0]' : 0.152086}", "{'[6, 0, 0, 5, 0, 3, 1, 0, 27, 2, 28, 0, 0, 0, 0, 1, 1, 0]' : 0.152126}", "{'[6, 0, 0, 5, 0, 3, 1, 0, 27, 2, 28, 0, 0, 0, 0, 1, 1, 0]' : 0.152598}", "{'[6, 0, 0, 5, 0, 3, 1, 0, 27, 2, 28, 0, 0, 0, 0, 1, 1, 0]' : 0.152326}", "{'[6, 0, 0, 5, 0, 3, 1, 0, 27, 2, 28, 0, 0, 0, 0, 1, 1, 0]' : 0.152284}", "{'[6, 0, 0, 5, 0, 3, 1, 0, 27, 2, 28, 0, 0, 0, 0, 1, 1, 0]' : 0.149837}", "{'[6, 0, 0, 5, 0, 3, 1, 0, 27, 2, 28, 0, 0, 0, 0, 1, 1, 0]' : 0.151447}", "{'[6, 0, 0, 5, 0, 3, 1, 0, 27, 2, 28, 0, 0, 0, 0, 1, 1, 0]' : 0.152089}"]
returning from 'run': {'[6, 0, 0, 5, 0, 3, 1, 0, 27, 2, 28, 0, 0, 0, 0, 1, 1, 0]': ([0.176124, 0.176009, 0.169056, 0.157178, 0.157317, 0.157314, 0.15718, 0.156587, 0.151988, 0.157012, 0.156954, 0.155949, 0.152058, 0.152464, 0.150348, 0.151806, 0.152106, 0.15217, 0.15557, 0.156916, 0.156934, 0.151645, 0.152086, 0.152126, 0.152598, 0.152326, 0.152284, 0.149837, 0.151447, 0.152089], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 0, 5, 0, 3, 1, 0, 27, 2, 28, 0, 0, 0, 0, 1, 1, 0]': ([0.176124, 0.176009, 0.169056, 0.157178, 0.157317, 0.157314, 0.15718, 0.156587, 0.151988, 0.157012, 0.156954, 0.155949, 0.152058, 0.152464, 0.150348, 0.151806, 0.152106, 0.15217, 0.15557, 0.156916, 0.156934, 0.151645, 0.152086, 0.152126, 0.152598, 0.152326, 0.152284, 0.149837, 0.151447, 0.152089], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	38
        Max loop nest depth: 	6
        Additions: 		2864
        Multiplications: 	1320
        Divisions: 		0
        Logical: 		0
        Reads: 			5392
        Writes: 		887
        Comparisons:		38
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest5.exe __orio_perftest5.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest5.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest5.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest5.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest5.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		202
        Multiplications: 	76
        Divisions: 		0
        Logical: 		0
        Reads: 			486
        Writes: 		67
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest6.exe __orio_perftest6.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest6.exe  
Program Test Output: 
{'[0, 3, 4, 4, 6, 0, 0, 1, 0, 0, 0, 3, 0, 2, 0, 0, 1, 0]' : 0.264611}
{'[0, 3, 4, 4, 6, 0, 0, 1, 0, 0, 0, 3, 0, 2, 0, 0, 1, 0]' : 0.26406}
{'[0, 3, 4, 4, 6, 0, 0, 1, 0, 0, 0, 3, 0, 2, 0, 0, 1, 0]' : 0.238601}
{'[0, 3, 4, 4, 6, 0, 0, 1, 0, 0, 0, 3, 0, 2, 0, 0, 1, 0]' : 0.234501}
{'[0, 3, 4, 4, 6, 0, 0, 1, 0, 0, 0, 3, 0, 2, 0, 0, 1, 0]' : 0.234495}
{'[0, 3, 4, 4, 6, 0, 0, 1, 0, 0, 0, 3, 0, 2, 0, 0, 1, 0]' : 0.234491}
{'[0, 3, 4, 4, 6, 0, 0, 1, 0, 0, 0, 3, 0, 2, 0, 0, 1, 0]' : 0.232841}
{'[0, 3, 4, 4, 6, 0, 0, 1, 0, 0, 0, 3, 0, 2, 0, 0, 1, 0]' : 0.234517}
{'[0, 3, 4, 4, 6, 0, 0, 1, 0, 0, 0, 3, 0, 2, 0, 0, 1, 0]' : 0.234711}
{'[0, 3, 4, 4, 6, 0, 0, 1, 0, 0, 0, 3, 0, 2, 0, 0, 1, 0]' : 0.23451}
{'[0, 3, 4, 4, 6, 0, 0, 1, 0, 0, 0, 3, 0, 2, 0, 0, 1, 0]' : 0.231418}
{'[0, 3, 4, 4, 6, 0, 0, 1, 0, 0, 0, 3, 0, 2, 0, 0, 1, 0]' : 0.234674}
{'[0, 3, 4, 4, 6, 0, 0, 1, 0, 0, 0, 3, 0, 2, 0, 0, 1, 0]' : 0.234608}
{'[0, 3, 4, 4, 6, 0, 0, 1, 0, 0, 0, 3, 0, 2, 0, 0, 1, 0]' : 0.234581}
{'[0, 3, 4, 4, 6, 0, 0, 1, 0, 0, 0, 3, 0, 2, 0, 0, 1, 0]' : 0.231674}
{'[0, 3, 4, 4, 6, 0, 0, 1, 0, 0, 0, 3, 0, 2, 0, 0, 1, 0]' : 0.234528}
{'[0, 3, 4, 4, 6, 0, 0, 1, 0, 0, 0, 3, 0, 2, 0, 0, 1, 0]' : 0.2348}
{'[0, 3, 4, 4, 6, 0, 0, 1, 0, 0, 0, 3, 0, 2, 0, 0, 1, 0]' : 0.234613}
{'[0, 3, 4, 4, 6, 0, 0, 1, 0, 0, 0, 3, 0, 2, 0, 0, 1, 0]' : 0.233883}
{'[0, 3, 4, 4, 6, 0, 0, 1, 0, 0, 0, 3, 0, 2, 0, 0, 1, 0]' : 0.231156}
{'[0, 3, 4, 4, 6, 0, 0, 1, 0, 0, 0, 3, 0, 2, 0, 0, 1, 0]' : 0.234346}
{'[0, 3, 4, 4, 6, 0, 0, 1, 0, 0, 0, 3, 0, 2, 0, 0, 1, 0]' : 0.231993}
{'[0, 3, 4, 4, 6, 0, 0, 1, 0, 0, 0, 3, 0, 2, 0, 0, 1, 0]' : 0.234542}
{'[0, 3, 4, 4, 6, 0, 0, 1, 0, 0, 0, 3, 0, 2, 0, 0, 1, 0]' : 0.231503}
{'[0, 3, 4, 4, 6, 0, 0, 1, 0, 0, 0, 3, 0, 2, 0, 0, 1, 0]' : 0.234541}
{'[0, 3, 4, 4, 6, 0, 0, 1, 0, 0, 0, 3, 0, 2, 0, 0, 1, 0]' : 0.234795}
{'[0, 3, 4, 4, 6, 0, 0, 1, 0, 0, 0, 3, 0, 2, 0, 0, 1, 0]' : 0.23455}
{'[0, 3, 4, 4, 6, 0, 0, 1, 0, 0, 0, 3, 0, 2, 0, 0, 1, 0]' : 0.231531}
{'[0, 3, 4, 4, 6, 0, 0, 1, 0, 0, 0, 3, 0, 2, 0, 0, 1, 0]' : 0.234503}
{'[0, 3, 4, 4, 6, 0, 0, 1, 0, 0, 0, 3, 0, 2, 0, 0, 1, 0]' : 0.234656}

out:
 ["{'[0, 3, 4, 4, 6, 0, 0, 1, 0, 0, 0, 3, 0, 2, 0, 0, 1, 0]' : 0.264611}", "{'[0, 3, 4, 4, 6, 0, 0, 1, 0, 0, 0, 3, 0, 2, 0, 0, 1, 0]' : 0.26406}", "{'[0, 3, 4, 4, 6, 0, 0, 1, 0, 0, 0, 3, 0, 2, 0, 0, 1, 0]' : 0.238601}", "{'[0, 3, 4, 4, 6, 0, 0, 1, 0, 0, 0, 3, 0, 2, 0, 0, 1, 0]' : 0.234501}", "{'[0, 3, 4, 4, 6, 0, 0, 1, 0, 0, 0, 3, 0, 2, 0, 0, 1, 0]' : 0.234495}", "{'[0, 3, 4, 4, 6, 0, 0, 1, 0, 0, 0, 3, 0, 2, 0, 0, 1, 0]' : 0.234491}", "{'[0, 3, 4, 4, 6, 0, 0, 1, 0, 0, 0, 3, 0, 2, 0, 0, 1, 0]' : 0.232841}", "{'[0, 3, 4, 4, 6, 0, 0, 1, 0, 0, 0, 3, 0, 2, 0, 0, 1, 0]' : 0.234517}", "{'[0, 3, 4, 4, 6, 0, 0, 1, 0, 0, 0, 3, 0, 2, 0, 0, 1, 0]' : 0.234711}", "{'[0, 3, 4, 4, 6, 0, 0, 1, 0, 0, 0, 3, 0, 2, 0, 0, 1, 0]' : 0.23451}", "{'[0, 3, 4, 4, 6, 0, 0, 1, 0, 0, 0, 3, 0, 2, 0, 0, 1, 0]' : 0.231418}", "{'[0, 3, 4, 4, 6, 0, 0, 1, 0, 0, 0, 3, 0, 2, 0, 0, 1, 0]' : 0.234674}", "{'[0, 3, 4, 4, 6, 0, 0, 1, 0, 0, 0, 3, 0, 2, 0, 0, 1, 0]' : 0.234608}", "{'[0, 3, 4, 4, 6, 0, 0, 1, 0, 0, 0, 3, 0, 2, 0, 0, 1, 0]' : 0.234581}", "{'[0, 3, 4, 4, 6, 0, 0, 1, 0, 0, 0, 3, 0, 2, 0, 0, 1, 0]' : 0.231674}", "{'[0, 3, 4, 4, 6, 0, 0, 1, 0, 0, 0, 3, 0, 2, 0, 0, 1, 0]' : 0.234528}", "{'[0, 3, 4, 4, 6, 0, 0, 1, 0, 0, 0, 3, 0, 2, 0, 0, 1, 0]' : 0.2348}", "{'[0, 3, 4, 4, 6, 0, 0, 1, 0, 0, 0, 3, 0, 2, 0, 0, 1, 0]' : 0.234613}", "{'[0, 3, 4, 4, 6, 0, 0, 1, 0, 0, 0, 3, 0, 2, 0, 0, 1, 0]' : 0.233883}", "{'[0, 3, 4, 4, 6, 0, 0, 1, 0, 0, 0, 3, 0, 2, 0, 0, 1, 0]' : 0.231156}", "{'[0, 3, 4, 4, 6, 0, 0, 1, 0, 0, 0, 3, 0, 2, 0, 0, 1, 0]' : 0.234346}", "{'[0, 3, 4, 4, 6, 0, 0, 1, 0, 0, 0, 3, 0, 2, 0, 0, 1, 0]' : 0.231993}", "{'[0, 3, 4, 4, 6, 0, 0, 1, 0, 0, 0, 3, 0, 2, 0, 0, 1, 0]' : 0.234542}", "{'[0, 3, 4, 4, 6, 0, 0, 1, 0, 0, 0, 3, 0, 2, 0, 0, 1, 0]' : 0.231503}", "{'[0, 3, 4, 4, 6, 0, 0, 1, 0, 0, 0, 3, 0, 2, 0, 0, 1, 0]' : 0.234541}", "{'[0, 3, 4, 4, 6, 0, 0, 1, 0, 0, 0, 3, 0, 2, 0, 0, 1, 0]' : 0.234795}", "{'[0, 3, 4, 4, 6, 0, 0, 1, 0, 0, 0, 3, 0, 2, 0, 0, 1, 0]' : 0.23455}", "{'[0, 3, 4, 4, 6, 0, 0, 1, 0, 0, 0, 3, 0, 2, 0, 0, 1, 0]' : 0.231531}", "{'[0, 3, 4, 4, 6, 0, 0, 1, 0, 0, 0, 3, 0, 2, 0, 0, 1, 0]' : 0.234503}", "{'[0, 3, 4, 4, 6, 0, 0, 1, 0, 0, 0, 3, 0, 2, 0, 0, 1, 0]' : 0.234656}"]
returning from 'run': {'[0, 3, 4, 4, 6, 0, 0, 1, 0, 0, 0, 3, 0, 2, 0, 0, 1, 0]': ([0.264611, 0.26406, 0.238601, 0.234501, 0.234495, 0.234491, 0.232841, 0.234517, 0.234711, 0.23451, 0.231418, 0.234674, 0.234608, 0.234581, 0.231674, 0.234528, 0.2348, 0.234613, 0.233883, 0.231156, 0.234346, 0.231993, 0.234542, 0.231503, 0.234541, 0.234795, 0.23455, 0.231531, 0.234503, 0.234656], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 3, 4, 4, 6, 0, 0, 1, 0, 0, 0, 3, 0, 2, 0, 0, 1, 0]': ([0.264611, 0.26406, 0.238601, 0.234501, 0.234495, 0.234491, 0.232841, 0.234517, 0.234711, 0.23451, 0.231418, 0.234674, 0.234608, 0.234581, 0.231674, 0.234528, 0.2348, 0.234613, 0.233883, 0.231156, 0.234346, 0.231993, 0.234542, 0.231503, 0.234541, 0.234795, 0.23455, 0.231531, 0.234503, 0.234656], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	35
        Max loop nest depth: 	5
        Additions: 		1045
        Multiplications: 	256
        Divisions: 		0
        Logical: 		0
        Reads: 			1823
        Writes: 		245
        Comparisons:		35
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest7.exe __orio_perftest7.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest7.exe  
Program Test Output: 
{'[0, 6, 6, 1, 6, 6, 1, 1, 26, 2, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.258929}
{'[0, 6, 6, 1, 6, 6, 1, 1, 26, 2, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.258069}
{'[0, 6, 6, 1, 6, 6, 1, 1, 26, 2, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.225465}
{'[0, 6, 6, 1, 6, 6, 1, 1, 26, 2, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.224449}
{'[0, 6, 6, 1, 6, 6, 1, 1, 26, 2, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.220289}
{'[0, 6, 6, 1, 6, 6, 1, 1, 26, 2, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.217332}
{'[0, 6, 6, 1, 6, 6, 1, 1, 26, 2, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.219757}
{'[0, 6, 6, 1, 6, 6, 1, 1, 26, 2, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.224506}
{'[0, 6, 6, 1, 6, 6, 1, 1, 26, 2, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.224987}
{'[0, 6, 6, 1, 6, 6, 1, 1, 26, 2, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.224948}
{'[0, 6, 6, 1, 6, 6, 1, 1, 26, 2, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.224668}
{'[0, 6, 6, 1, 6, 6, 1, 1, 26, 2, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.225374}
{'[0, 6, 6, 1, 6, 6, 1, 1, 26, 2, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.224831}
{'[0, 6, 6, 1, 6, 6, 1, 1, 26, 2, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.22503}
{'[0, 6, 6, 1, 6, 6, 1, 1, 26, 2, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.224799}
{'[0, 6, 6, 1, 6, 6, 1, 1, 26, 2, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.225251}
{'[0, 6, 6, 1, 6, 6, 1, 1, 26, 2, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.224623}
{'[0, 6, 6, 1, 6, 6, 1, 1, 26, 2, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.225484}
{'[0, 6, 6, 1, 6, 6, 1, 1, 26, 2, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.224946}
{'[0, 6, 6, 1, 6, 6, 1, 1, 26, 2, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.224818}
{'[0, 6, 6, 1, 6, 6, 1, 1, 26, 2, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.225526}
{'[0, 6, 6, 1, 6, 6, 1, 1, 26, 2, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.224749}
{'[0, 6, 6, 1, 6, 6, 1, 1, 26, 2, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.224703}
{'[0, 6, 6, 1, 6, 6, 1, 1, 26, 2, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.224716}
{'[0, 6, 6, 1, 6, 6, 1, 1, 26, 2, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.22787}
{'[0, 6, 6, 1, 6, 6, 1, 1, 26, 2, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.23048}
{'[0, 6, 6, 1, 6, 6, 1, 1, 26, 2, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.230554}
{'[0, 6, 6, 1, 6, 6, 1, 1, 26, 2, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.230598}
{'[0, 6, 6, 1, 6, 6, 1, 1, 26, 2, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.230635}
{'[0, 6, 6, 1, 6, 6, 1, 1, 26, 2, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.229884}

out:
 ["{'[0, 6, 6, 1, 6, 6, 1, 1, 26, 2, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.258929}", "{'[0, 6, 6, 1, 6, 6, 1, 1, 26, 2, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.258069}", "{'[0, 6, 6, 1, 6, 6, 1, 1, 26, 2, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.225465}", "{'[0, 6, 6, 1, 6, 6, 1, 1, 26, 2, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.224449}", "{'[0, 6, 6, 1, 6, 6, 1, 1, 26, 2, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.220289}", "{'[0, 6, 6, 1, 6, 6, 1, 1, 26, 2, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.217332}", "{'[0, 6, 6, 1, 6, 6, 1, 1, 26, 2, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.219757}", "{'[0, 6, 6, 1, 6, 6, 1, 1, 26, 2, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.224506}", "{'[0, 6, 6, 1, 6, 6, 1, 1, 26, 2, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.224987}", "{'[0, 6, 6, 1, 6, 6, 1, 1, 26, 2, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.224948}", "{'[0, 6, 6, 1, 6, 6, 1, 1, 26, 2, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.224668}", "{'[0, 6, 6, 1, 6, 6, 1, 1, 26, 2, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.225374}", "{'[0, 6, 6, 1, 6, 6, 1, 1, 26, 2, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.224831}", "{'[0, 6, 6, 1, 6, 6, 1, 1, 26, 2, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.22503}", "{'[0, 6, 6, 1, 6, 6, 1, 1, 26, 2, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.224799}", "{'[0, 6, 6, 1, 6, 6, 1, 1, 26, 2, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.225251}", "{'[0, 6, 6, 1, 6, 6, 1, 1, 26, 2, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.224623}", "{'[0, 6, 6, 1, 6, 6, 1, 1, 26, 2, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.225484}", "{'[0, 6, 6, 1, 6, 6, 1, 1, 26, 2, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.224946}", "{'[0, 6, 6, 1, 6, 6, 1, 1, 26, 2, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.224818}", "{'[0, 6, 6, 1, 6, 6, 1, 1, 26, 2, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.225526}", "{'[0, 6, 6, 1, 6, 6, 1, 1, 26, 2, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.224749}", "{'[0, 6, 6, 1, 6, 6, 1, 1, 26, 2, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.224703}", "{'[0, 6, 6, 1, 6, 6, 1, 1, 26, 2, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.224716}", "{'[0, 6, 6, 1, 6, 6, 1, 1, 26, 2, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.22787}", "{'[0, 6, 6, 1, 6, 6, 1, 1, 26, 2, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.23048}", "{'[0, 6, 6, 1, 6, 6, 1, 1, 26, 2, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.230554}", "{'[0, 6, 6, 1, 6, 6, 1, 1, 26, 2, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.230598}", "{'[0, 6, 6, 1, 6, 6, 1, 1, 26, 2, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.230635}", "{'[0, 6, 6, 1, 6, 6, 1, 1, 26, 2, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.229884}"]
returning from 'run': {'[0, 6, 6, 1, 6, 6, 1, 1, 26, 2, 22, 0, 0, 0, 1, 0, 1, 0]': ([0.258929, 0.258069, 0.225465, 0.224449, 0.220289, 0.217332, 0.219757, 0.224506, 0.224987, 0.224948, 0.224668, 0.225374, 0.224831, 0.22503, 0.224799, 0.225251, 0.224623, 0.225484, 0.224946, 0.224818, 0.225526, 0.224749, 0.224703, 0.224716, 0.22787, 0.23048, 0.230554, 0.230598, 0.230635, 0.229884], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 6, 1, 6, 6, 1, 1, 26, 2, 22, 0, 0, 0, 1, 0, 1, 0]': ([0.258929, 0.258069, 0.225465, 0.224449, 0.220289, 0.217332, 0.219757, 0.224506, 0.224987, 0.224948, 0.224668, 0.225374, 0.224831, 0.22503, 0.224799, 0.225251, 0.224623, 0.225484, 0.224946, 0.224818, 0.225526, 0.224749, 0.224703, 0.224716, 0.22787, 0.23048, 0.230554, 0.230598, 0.230635, 0.229884], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	4
        Additions: 		1104
        Multiplications: 	306
        Divisions: 		0
        Logical: 		0
        Reads: 			1873
        Writes: 		243
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest8.exe __orio_perftest8.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest8.exe  
Program Test Output: 
{'[3, 0, 0, 0, 5, 5, 1, 0, 19, 7, 6, 0, 0, 1, 1, 0, 1, 0]' : 0.12216}
{'[3, 0, 0, 0, 5, 5, 1, 0, 19, 7, 6, 0, 0, 1, 1, 0, 1, 0]' : 0.127287}
{'[3, 0, 0, 0, 5, 5, 1, 0, 19, 7, 6, 0, 0, 1, 1, 0, 1, 0]' : 0.128534}
{'[3, 0, 0, 0, 5, 5, 1, 0, 19, 7, 6, 0, 0, 1, 1, 0, 1, 0]' : 0.126027}
{'[3, 0, 0, 0, 5, 5, 1, 0, 19, 7, 6, 0, 0, 1, 1, 0, 1, 0]' : 0.122899}
{'[3, 0, 0, 0, 5, 5, 1, 0, 19, 7, 6, 0, 0, 1, 1, 0, 1, 0]' : 0.124703}
{'[3, 0, 0, 0, 5, 5, 1, 0, 19, 7, 6, 0, 0, 1, 1, 0, 1, 0]' : 0.124367}
{'[3, 0, 0, 0, 5, 5, 1, 0, 19, 7, 6, 0, 0, 1, 1, 0, 1, 0]' : 0.121851}
{'[3, 0, 0, 0, 5, 5, 1, 0, 19, 7, 6, 0, 0, 1, 1, 0, 1, 0]' : 0.121795}
{'[3, 0, 0, 0, 5, 5, 1, 0, 19, 7, 6, 0, 0, 1, 1, 0, 1, 0]' : 0.127023}
{'[3, 0, 0, 0, 5, 5, 1, 0, 19, 7, 6, 0, 0, 1, 1, 0, 1, 0]' : 0.128516}
{'[3, 0, 0, 0, 5, 5, 1, 0, 19, 7, 6, 0, 0, 1, 1, 0, 1, 0]' : 0.126342}
{'[3, 0, 0, 0, 5, 5, 1, 0, 19, 7, 6, 0, 0, 1, 1, 0, 1, 0]' : 0.125188}
{'[3, 0, 0, 0, 5, 5, 1, 0, 19, 7, 6, 0, 0, 1, 1, 0, 1, 0]' : 0.126925}
{'[3, 0, 0, 0, 5, 5, 1, 0, 19, 7, 6, 0, 0, 1, 1, 0, 1, 0]' : 0.125509}
{'[3, 0, 0, 0, 5, 5, 1, 0, 19, 7, 6, 0, 0, 1, 1, 0, 1, 0]' : 0.125392}
{'[3, 0, 0, 0, 5, 5, 1, 0, 19, 7, 6, 0, 0, 1, 1, 0, 1, 0]' : 0.125439}
{'[3, 0, 0, 0, 5, 5, 1, 0, 19, 7, 6, 0, 0, 1, 1, 0, 1, 0]' : 0.127979}
{'[3, 0, 0, 0, 5, 5, 1, 0, 19, 7, 6, 0, 0, 1, 1, 0, 1, 0]' : 0.128504}
{'[3, 0, 0, 0, 5, 5, 1, 0, 19, 7, 6, 0, 0, 1, 1, 0, 1, 0]' : 0.126168}
{'[3, 0, 0, 0, 5, 5, 1, 0, 19, 7, 6, 0, 0, 1, 1, 0, 1, 0]' : 0.125411}
{'[3, 0, 0, 0, 5, 5, 1, 0, 19, 7, 6, 0, 0, 1, 1, 0, 1, 0]' : 0.12825}
{'[3, 0, 0, 0, 5, 5, 1, 0, 19, 7, 6, 0, 0, 1, 1, 0, 1, 0]' : 0.128481}
{'[3, 0, 0, 0, 5, 5, 1, 0, 19, 7, 6, 0, 0, 1, 1, 0, 1, 0]' : 0.125824}
{'[3, 0, 0, 0, 5, 5, 1, 0, 19, 7, 6, 0, 0, 1, 1, 0, 1, 0]' : 0.125259}
{'[3, 0, 0, 0, 5, 5, 1, 0, 19, 7, 6, 0, 0, 1, 1, 0, 1, 0]' : 0.128417}
{'[3, 0, 0, 0, 5, 5, 1, 0, 19, 7, 6, 0, 0, 1, 1, 0, 1, 0]' : 0.126258}
{'[3, 0, 0, 0, 5, 5, 1, 0, 19, 7, 6, 0, 0, 1, 1, 0, 1, 0]' : 0.125365}
{'[3, 0, 0, 0, 5, 5, 1, 0, 19, 7, 6, 0, 0, 1, 1, 0, 1, 0]' : 0.125873}
{'[3, 0, 0, 0, 5, 5, 1, 0, 19, 7, 6, 0, 0, 1, 1, 0, 1, 0]' : 0.128426}

out:
 ["{'[3, 0, 0, 0, 5, 5, 1, 0, 19, 7, 6, 0, 0, 1, 1, 0, 1, 0]' : 0.12216}", "{'[3, 0, 0, 0, 5, 5, 1, 0, 19, 7, 6, 0, 0, 1, 1, 0, 1, 0]' : 0.127287}", "{'[3, 0, 0, 0, 5, 5, 1, 0, 19, 7, 6, 0, 0, 1, 1, 0, 1, 0]' : 0.128534}", "{'[3, 0, 0, 0, 5, 5, 1, 0, 19, 7, 6, 0, 0, 1, 1, 0, 1, 0]' : 0.126027}", "{'[3, 0, 0, 0, 5, 5, 1, 0, 19, 7, 6, 0, 0, 1, 1, 0, 1, 0]' : 0.122899}", "{'[3, 0, 0, 0, 5, 5, 1, 0, 19, 7, 6, 0, 0, 1, 1, 0, 1, 0]' : 0.124703}", "{'[3, 0, 0, 0, 5, 5, 1, 0, 19, 7, 6, 0, 0, 1, 1, 0, 1, 0]' : 0.124367}", "{'[3, 0, 0, 0, 5, 5, 1, 0, 19, 7, 6, 0, 0, 1, 1, 0, 1, 0]' : 0.121851}", "{'[3, 0, 0, 0, 5, 5, 1, 0, 19, 7, 6, 0, 0, 1, 1, 0, 1, 0]' : 0.121795}", "{'[3, 0, 0, 0, 5, 5, 1, 0, 19, 7, 6, 0, 0, 1, 1, 0, 1, 0]' : 0.127023}", "{'[3, 0, 0, 0, 5, 5, 1, 0, 19, 7, 6, 0, 0, 1, 1, 0, 1, 0]' : 0.128516}", "{'[3, 0, 0, 0, 5, 5, 1, 0, 19, 7, 6, 0, 0, 1, 1, 0, 1, 0]' : 0.126342}", "{'[3, 0, 0, 0, 5, 5, 1, 0, 19, 7, 6, 0, 0, 1, 1, 0, 1, 0]' : 0.125188}", "{'[3, 0, 0, 0, 5, 5, 1, 0, 19, 7, 6, 0, 0, 1, 1, 0, 1, 0]' : 0.126925}", "{'[3, 0, 0, 0, 5, 5, 1, 0, 19, 7, 6, 0, 0, 1, 1, 0, 1, 0]' : 0.125509}", "{'[3, 0, 0, 0, 5, 5, 1, 0, 19, 7, 6, 0, 0, 1, 1, 0, 1, 0]' : 0.125392}", "{'[3, 0, 0, 0, 5, 5, 1, 0, 19, 7, 6, 0, 0, 1, 1, 0, 1, 0]' : 0.125439}", "{'[3, 0, 0, 0, 5, 5, 1, 0, 19, 7, 6, 0, 0, 1, 1, 0, 1, 0]' : 0.127979}", "{'[3, 0, 0, 0, 5, 5, 1, 0, 19, 7, 6, 0, 0, 1, 1, 0, 1, 0]' : 0.128504}", "{'[3, 0, 0, 0, 5, 5, 1, 0, 19, 7, 6, 0, 0, 1, 1, 0, 1, 0]' : 0.126168}", "{'[3, 0, 0, 0, 5, 5, 1, 0, 19, 7, 6, 0, 0, 1, 1, 0, 1, 0]' : 0.125411}", "{'[3, 0, 0, 0, 5, 5, 1, 0, 19, 7, 6, 0, 0, 1, 1, 0, 1, 0]' : 0.12825}", "{'[3, 0, 0, 0, 5, 5, 1, 0, 19, 7, 6, 0, 0, 1, 1, 0, 1, 0]' : 0.128481}", "{'[3, 0, 0, 0, 5, 5, 1, 0, 19, 7, 6, 0, 0, 1, 1, 0, 1, 0]' : 0.125824}", "{'[3, 0, 0, 0, 5, 5, 1, 0, 19, 7, 6, 0, 0, 1, 1, 0, 1, 0]' : 0.125259}", "{'[3, 0, 0, 0, 5, 5, 1, 0, 19, 7, 6, 0, 0, 1, 1, 0, 1, 0]' : 0.128417}", "{'[3, 0, 0, 0, 5, 5, 1, 0, 19, 7, 6, 0, 0, 1, 1, 0, 1, 0]' : 0.126258}", "{'[3, 0, 0, 0, 5, 5, 1, 0, 19, 7, 6, 0, 0, 1, 1, 0, 1, 0]' : 0.125365}", "{'[3, 0, 0, 0, 5, 5, 1, 0, 19, 7, 6, 0, 0, 1, 1, 0, 1, 0]' : 0.125873}", "{'[3, 0, 0, 0, 5, 5, 1, 0, 19, 7, 6, 0, 0, 1, 1, 0, 1, 0]' : 0.128426}"]
returning from 'run': {'[3, 0, 0, 0, 5, 5, 1, 0, 19, 7, 6, 0, 0, 1, 1, 0, 1, 0]': ([0.12216, 0.127287, 0.128534, 0.126027, 0.122899, 0.124703, 0.124367, 0.121851, 0.121795, 0.127023, 0.128516, 0.126342, 0.125188, 0.126925, 0.125509, 0.125392, 0.125439, 0.127979, 0.128504, 0.126168, 0.125411, 0.12825, 0.128481, 0.125824, 0.125259, 0.128417, 0.126258, 0.125365, 0.125873, 0.128426], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 0, 0, 0, 5, 5, 1, 0, 19, 7, 6, 0, 0, 1, 1, 0, 1, 0]': ([0.12216, 0.127287, 0.128534, 0.126027, 0.122899, 0.124703, 0.124367, 0.121851, 0.121795, 0.127023, 0.128516, 0.126342, 0.125188, 0.126925, 0.125509, 0.125392, 0.125439, 0.127979, 0.128504, 0.126168, 0.125411, 0.12825, 0.128481, 0.125824, 0.125259, 0.128417, 0.126258, 0.125365, 0.125873, 0.128426], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
Code stats:
        Number of loops: 	45
        Max loop nest depth: 	5
        Additions: 		1847
        Multiplications: 	520
        Divisions: 		0
        Logical: 		0
        Reads: 			3101
        Writes: 		421
        Comparisons:		45
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest9.exe __orio_perftest9.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest9.exe  
Program Test Output: 
{'[6, 1, 2, 4, 6, 6, 0, 0, 8, 11, 0, 1, 0, 1, 1, 0, 1, 1]' : 0.134971}
{'[6, 1, 2, 4, 6, 6, 0, 0, 8, 11, 0, 1, 0, 1, 1, 0, 1, 1]' : 0.134938}
{'[6, 1, 2, 4, 6, 6, 0, 0, 8, 11, 0, 1, 0, 1, 1, 0, 1, 1]' : 0.121722}
{'[6, 1, 2, 4, 6, 6, 0, 0, 8, 11, 0, 1, 0, 1, 1, 0, 1, 1]' : 0.114155}
{'[6, 1, 2, 4, 6, 6, 0, 0, 8, 11, 0, 1, 0, 1, 1, 0, 1, 1]' : 0.114184}
{'[6, 1, 2, 4, 6, 6, 0, 0, 8, 11, 0, 1, 0, 1, 1, 0, 1, 1]' : 0.114537}
{'[6, 1, 2, 4, 6, 6, 0, 0, 8, 11, 0, 1, 0, 1, 1, 0, 1, 1]' : 0.114805}
{'[6, 1, 2, 4, 6, 6, 0, 0, 8, 11, 0, 1, 0, 1, 1, 0, 1, 1]' : 0.114682}
{'[6, 1, 2, 4, 6, 6, 0, 0, 8, 11, 0, 1, 0, 1, 1, 0, 1, 1]' : 0.114379}
{'[6, 1, 2, 4, 6, 6, 0, 0, 8, 11, 0, 1, 0, 1, 1, 0, 1, 1]' : 0.114413}
{'[6, 1, 2, 4, 6, 6, 0, 0, 8, 11, 0, 1, 0, 1, 1, 0, 1, 1]' : 0.114474}
{'[6, 1, 2, 4, 6, 6, 0, 0, 8, 11, 0, 1, 0, 1, 1, 0, 1, 1]' : 0.114378}
{'[6, 1, 2, 4, 6, 6, 0, 0, 8, 11, 0, 1, 0, 1, 1, 0, 1, 1]' : 0.1143}
{'[6, 1, 2, 4, 6, 6, 0, 0, 8, 11, 0, 1, 0, 1, 1, 0, 1, 1]' : 0.114347}
{'[6, 1, 2, 4, 6, 6, 0, 0, 8, 11, 0, 1, 0, 1, 1, 0, 1, 1]' : 0.114336}
{'[6, 1, 2, 4, 6, 6, 0, 0, 8, 11, 0, 1, 0, 1, 1, 0, 1, 1]' : 0.114368}
{'[6, 1, 2, 4, 6, 6, 0, 0, 8, 11, 0, 1, 0, 1, 1, 0, 1, 1]' : 0.114598}
{'[6, 1, 2, 4, 6, 6, 0, 0, 8, 11, 0, 1, 0, 1, 1, 0, 1, 1]' : 0.114536}
{'[6, 1, 2, 4, 6, 6, 0, 0, 8, 11, 0, 1, 0, 1, 1, 0, 1, 1]' : 0.114349}
{'[6, 1, 2, 4, 6, 6, 0, 0, 8, 11, 0, 1, 0, 1, 1, 0, 1, 1]' : 0.114326}
{'[6, 1, 2, 4, 6, 6, 0, 0, 8, 11, 0, 1, 0, 1, 1, 0, 1, 1]' : 0.114304}
{'[6, 1, 2, 4, 6, 6, 0, 0, 8, 11, 0, 1, 0, 1, 1, 0, 1, 1]' : 0.114341}
{'[6, 1, 2, 4, 6, 6, 0, 0, 8, 11, 0, 1, 0, 1, 1, 0, 1, 1]' : 0.114288}
{'[6, 1, 2, 4, 6, 6, 0, 0, 8, 11, 0, 1, 0, 1, 1, 0, 1, 1]' : 0.114347}
{'[6, 1, 2, 4, 6, 6, 0, 0, 8, 11, 0, 1, 0, 1, 1, 0, 1, 1]' : 0.114335}
{'[6, 1, 2, 4, 6, 6, 0, 0, 8, 11, 0, 1, 0, 1, 1, 0, 1, 1]' : 0.11458}
{'[6, 1, 2, 4, 6, 6, 0, 0, 8, 11, 0, 1, 0, 1, 1, 0, 1, 1]' : 0.11438}
{'[6, 1, 2, 4, 6, 6, 0, 0, 8, 11, 0, 1, 0, 1, 1, 0, 1, 1]' : 0.114423}
{'[6, 1, 2, 4, 6, 6, 0, 0, 8, 11, 0, 1, 0, 1, 1, 0, 1, 1]' : 0.114338}
{'[6, 1, 2, 4, 6, 6, 0, 0, 8, 11, 0, 1, 0, 1, 1, 0, 1, 1]' : 0.114527}

out:
 ["{'[6, 1, 2, 4, 6, 6, 0, 0, 8, 11, 0, 1, 0, 1, 1, 0, 1, 1]' : 0.134971}", "{'[6, 1, 2, 4, 6, 6, 0, 0, 8, 11, 0, 1, 0, 1, 1, 0, 1, 1]' : 0.134938}", "{'[6, 1, 2, 4, 6, 6, 0, 0, 8, 11, 0, 1, 0, 1, 1, 0, 1, 1]' : 0.121722}", "{'[6, 1, 2, 4, 6, 6, 0, 0, 8, 11, 0, 1, 0, 1, 1, 0, 1, 1]' : 0.114155}", "{'[6, 1, 2, 4, 6, 6, 0, 0, 8, 11, 0, 1, 0, 1, 1, 0, 1, 1]' : 0.114184}", "{'[6, 1, 2, 4, 6, 6, 0, 0, 8, 11, 0, 1, 0, 1, 1, 0, 1, 1]' : 0.114537}", "{'[6, 1, 2, 4, 6, 6, 0, 0, 8, 11, 0, 1, 0, 1, 1, 0, 1, 1]' : 0.114805}", "{'[6, 1, 2, 4, 6, 6, 0, 0, 8, 11, 0, 1, 0, 1, 1, 0, 1, 1]' : 0.114682}", "{'[6, 1, 2, 4, 6, 6, 0, 0, 8, 11, 0, 1, 0, 1, 1, 0, 1, 1]' : 0.114379}", "{'[6, 1, 2, 4, 6, 6, 0, 0, 8, 11, 0, 1, 0, 1, 1, 0, 1, 1]' : 0.114413}", "{'[6, 1, 2, 4, 6, 6, 0, 0, 8, 11, 0, 1, 0, 1, 1, 0, 1, 1]' : 0.114474}", "{'[6, 1, 2, 4, 6, 6, 0, 0, 8, 11, 0, 1, 0, 1, 1, 0, 1, 1]' : 0.114378}", "{'[6, 1, 2, 4, 6, 6, 0, 0, 8, 11, 0, 1, 0, 1, 1, 0, 1, 1]' : 0.1143}", "{'[6, 1, 2, 4, 6, 6, 0, 0, 8, 11, 0, 1, 0, 1, 1, 0, 1, 1]' : 0.114347}", "{'[6, 1, 2, 4, 6, 6, 0, 0, 8, 11, 0, 1, 0, 1, 1, 0, 1, 1]' : 0.114336}", "{'[6, 1, 2, 4, 6, 6, 0, 0, 8, 11, 0, 1, 0, 1, 1, 0, 1, 1]' : 0.114368}", "{'[6, 1, 2, 4, 6, 6, 0, 0, 8, 11, 0, 1, 0, 1, 1, 0, 1, 1]' : 0.114598}", "{'[6, 1, 2, 4, 6, 6, 0, 0, 8, 11, 0, 1, 0, 1, 1, 0, 1, 1]' : 0.114536}", "{'[6, 1, 2, 4, 6, 6, 0, 0, 8, 11, 0, 1, 0, 1, 1, 0, 1, 1]' : 0.114349}", "{'[6, 1, 2, 4, 6, 6, 0, 0, 8, 11, 0, 1, 0, 1, 1, 0, 1, 1]' : 0.114326}", "{'[6, 1, 2, 4, 6, 6, 0, 0, 8, 11, 0, 1, 0, 1, 1, 0, 1, 1]' : 0.114304}", "{'[6, 1, 2, 4, 6, 6, 0, 0, 8, 11, 0, 1, 0, 1, 1, 0, 1, 1]' : 0.114341}", "{'[6, 1, 2, 4, 6, 6, 0, 0, 8, 11, 0, 1, 0, 1, 1, 0, 1, 1]' : 0.114288}", "{'[6, 1, 2, 4, 6, 6, 0, 0, 8, 11, 0, 1, 0, 1, 1, 0, 1, 1]' : 0.114347}", "{'[6, 1, 2, 4, 6, 6, 0, 0, 8, 11, 0, 1, 0, 1, 1, 0, 1, 1]' : 0.114335}", "{'[6, 1, 2, 4, 6, 6, 0, 0, 8, 11, 0, 1, 0, 1, 1, 0, 1, 1]' : 0.11458}", "{'[6, 1, 2, 4, 6, 6, 0, 0, 8, 11, 0, 1, 0, 1, 1, 0, 1, 1]' : 0.11438}", "{'[6, 1, 2, 4, 6, 6, 0, 0, 8, 11, 0, 1, 0, 1, 1, 0, 1, 1]' : 0.114423}", "{'[6, 1, 2, 4, 6, 6, 0, 0, 8, 11, 0, 1, 0, 1, 1, 0, 1, 1]' : 0.114338}", "{'[6, 1, 2, 4, 6, 6, 0, 0, 8, 11, 0, 1, 0, 1, 1, 0, 1, 1]' : 0.114527}"]
returning from 'run': {'[6, 1, 2, 4, 6, 6, 0, 0, 8, 11, 0, 1, 0, 1, 1, 0, 1, 1]': ([0.134971, 0.134938, 0.121722, 0.114155, 0.114184, 0.114537, 0.114805, 0.114682, 0.114379, 0.114413, 0.114474, 0.114378, 0.1143, 0.114347, 0.114336, 0.114368, 0.114598, 0.114536, 0.114349, 0.114326, 0.114304, 0.114341, 0.114288, 0.114347, 0.114335, 0.11458, 0.11438, 0.114423, 0.114338, 0.114527], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 1, 2, 4, 6, 6, 0, 0, 8, 11, 0, 1, 0, 1, 1, 0, 1, 1]': ([0.134971, 0.134938, 0.121722, 0.114155, 0.114184, 0.114537, 0.114805, 0.114682, 0.114379, 0.114413, 0.114474, 0.114378, 0.1143, 0.114347, 0.114336, 0.114368, 0.114598, 0.114536, 0.114349, 0.114326, 0.114304, 0.114341, 0.114288, 0.114347, 0.114335, 0.11458, 0.11438, 0.114423, 0.114338, 0.114527], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		2108
        Multiplications: 	592
        Divisions: 		0
        Logical: 		0
        Reads: 			3231
        Writes: 		350
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest10.exe __orio_perftest10.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest10.exe  
Program Test Output: 
{'[0, 2, 0, 0, 3, 1, 0, 1, 23, 0, 27, 16, 1, 0, 1, 0, 0, 1]' : 0.121178}
{'[0, 2, 0, 0, 3, 1, 0, 1, 23, 0, 27, 16, 1, 0, 1, 0, 0, 1]' : 0.120327}
{'[0, 2, 0, 0, 3, 1, 0, 1, 23, 0, 27, 16, 1, 0, 1, 0, 0, 1]' : 0.119353}
{'[0, 2, 0, 0, 3, 1, 0, 1, 23, 0, 27, 16, 1, 0, 1, 0, 0, 1]' : 0.121728}
{'[0, 2, 0, 0, 3, 1, 0, 1, 23, 0, 27, 16, 1, 0, 1, 0, 0, 1]' : 0.121154}
{'[0, 2, 0, 0, 3, 1, 0, 1, 23, 0, 27, 16, 1, 0, 1, 0, 0, 1]' : 0.121198}
{'[0, 2, 0, 0, 3, 1, 0, 1, 23, 0, 27, 16, 1, 0, 1, 0, 0, 1]' : 0.121155}
{'[0, 2, 0, 0, 3, 1, 0, 1, 23, 0, 27, 16, 1, 0, 1, 0, 0, 1]' : 0.121585}
{'[0, 2, 0, 0, 3, 1, 0, 1, 23, 0, 27, 16, 1, 0, 1, 0, 0, 1]' : 0.121774}
{'[0, 2, 0, 0, 3, 1, 0, 1, 23, 0, 27, 16, 1, 0, 1, 0, 0, 1]' : 0.121777}
{'[0, 2, 0, 0, 3, 1, 0, 1, 23, 0, 27, 16, 1, 0, 1, 0, 0, 1]' : 0.121679}
{'[0, 2, 0, 0, 3, 1, 0, 1, 23, 0, 27, 16, 1, 0, 1, 0, 0, 1]' : 0.123622}
{'[0, 2, 0, 0, 3, 1, 0, 1, 23, 0, 27, 16, 1, 0, 1, 0, 0, 1]' : 0.121753}
{'[0, 2, 0, 0, 3, 1, 0, 1, 23, 0, 27, 16, 1, 0, 1, 0, 0, 1]' : 0.121731}
{'[0, 2, 0, 0, 3, 1, 0, 1, 23, 0, 27, 16, 1, 0, 1, 0, 0, 1]' : 0.120836}
{'[0, 2, 0, 0, 3, 1, 0, 1, 23, 0, 27, 16, 1, 0, 1, 0, 0, 1]' : 0.119905}
{'[0, 2, 0, 0, 3, 1, 0, 1, 23, 0, 27, 16, 1, 0, 1, 0, 0, 1]' : 0.121733}
{'[0, 2, 0, 0, 3, 1, 0, 1, 23, 0, 27, 16, 1, 0, 1, 0, 0, 1]' : 0.121758}
{'[0, 2, 0, 0, 3, 1, 0, 1, 23, 0, 27, 16, 1, 0, 1, 0, 0, 1]' : 0.121655}
{'[0, 2, 0, 0, 3, 1, 0, 1, 23, 0, 27, 16, 1, 0, 1, 0, 0, 1]' : 0.123822}
{'[0, 2, 0, 0, 3, 1, 0, 1, 23, 0, 27, 16, 1, 0, 1, 0, 0, 1]' : 0.121153}
{'[0, 2, 0, 0, 3, 1, 0, 1, 23, 0, 27, 16, 1, 0, 1, 0, 0, 1]' : 0.121135}
{'[0, 2, 0, 0, 3, 1, 0, 1, 23, 0, 27, 16, 1, 0, 1, 0, 0, 1]' : 0.121117}
{'[0, 2, 0, 0, 3, 1, 0, 1, 23, 0, 27, 16, 1, 0, 1, 0, 0, 1]' : 0.121212}
{'[0, 2, 0, 0, 3, 1, 0, 1, 23, 0, 27, 16, 1, 0, 1, 0, 0, 1]' : 0.12558}
{'[0, 2, 0, 0, 3, 1, 0, 1, 23, 0, 27, 16, 1, 0, 1, 0, 0, 1]' : 0.12598}
{'[0, 2, 0, 0, 3, 1, 0, 1, 23, 0, 27, 16, 1, 0, 1, 0, 0, 1]' : 0.12591}
{'[0, 2, 0, 0, 3, 1, 0, 1, 23, 0, 27, 16, 1, 0, 1, 0, 0, 1]' : 0.123866}
{'[0, 2, 0, 0, 3, 1, 0, 1, 23, 0, 27, 16, 1, 0, 1, 0, 0, 1]' : 0.121109}
{'[0, 2, 0, 0, 3, 1, 0, 1, 23, 0, 27, 16, 1, 0, 1, 0, 0, 1]' : 0.121131}

out:
 ["{'[0, 2, 0, 0, 3, 1, 0, 1, 23, 0, 27, 16, 1, 0, 1, 0, 0, 1]' : 0.121178}", "{'[0, 2, 0, 0, 3, 1, 0, 1, 23, 0, 27, 16, 1, 0, 1, 0, 0, 1]' : 0.120327}", "{'[0, 2, 0, 0, 3, 1, 0, 1, 23, 0, 27, 16, 1, 0, 1, 0, 0, 1]' : 0.119353}", "{'[0, 2, 0, 0, 3, 1, 0, 1, 23, 0, 27, 16, 1, 0, 1, 0, 0, 1]' : 0.121728}", "{'[0, 2, 0, 0, 3, 1, 0, 1, 23, 0, 27, 16, 1, 0, 1, 0, 0, 1]' : 0.121154}", "{'[0, 2, 0, 0, 3, 1, 0, 1, 23, 0, 27, 16, 1, 0, 1, 0, 0, 1]' : 0.121198}", "{'[0, 2, 0, 0, 3, 1, 0, 1, 23, 0, 27, 16, 1, 0, 1, 0, 0, 1]' : 0.121155}", "{'[0, 2, 0, 0, 3, 1, 0, 1, 23, 0, 27, 16, 1, 0, 1, 0, 0, 1]' : 0.121585}", "{'[0, 2, 0, 0, 3, 1, 0, 1, 23, 0, 27, 16, 1, 0, 1, 0, 0, 1]' : 0.121774}", "{'[0, 2, 0, 0, 3, 1, 0, 1, 23, 0, 27, 16, 1, 0, 1, 0, 0, 1]' : 0.121777}", "{'[0, 2, 0, 0, 3, 1, 0, 1, 23, 0, 27, 16, 1, 0, 1, 0, 0, 1]' : 0.121679}", "{'[0, 2, 0, 0, 3, 1, 0, 1, 23, 0, 27, 16, 1, 0, 1, 0, 0, 1]' : 0.123622}", "{'[0, 2, 0, 0, 3, 1, 0, 1, 23, 0, 27, 16, 1, 0, 1, 0, 0, 1]' : 0.121753}", "{'[0, 2, 0, 0, 3, 1, 0, 1, 23, 0, 27, 16, 1, 0, 1, 0, 0, 1]' : 0.121731}", "{'[0, 2, 0, 0, 3, 1, 0, 1, 23, 0, 27, 16, 1, 0, 1, 0, 0, 1]' : 0.120836}", "{'[0, 2, 0, 0, 3, 1, 0, 1, 23, 0, 27, 16, 1, 0, 1, 0, 0, 1]' : 0.119905}", "{'[0, 2, 0, 0, 3, 1, 0, 1, 23, 0, 27, 16, 1, 0, 1, 0, 0, 1]' : 0.121733}", "{'[0, 2, 0, 0, 3, 1, 0, 1, 23, 0, 27, 16, 1, 0, 1, 0, 0, 1]' : 0.121758}", "{'[0, 2, 0, 0, 3, 1, 0, 1, 23, 0, 27, 16, 1, 0, 1, 0, 0, 1]' : 0.121655}", "{'[0, 2, 0, 0, 3, 1, 0, 1, 23, 0, 27, 16, 1, 0, 1, 0, 0, 1]' : 0.123822}", "{'[0, 2, 0, 0, 3, 1, 0, 1, 23, 0, 27, 16, 1, 0, 1, 0, 0, 1]' : 0.121153}", "{'[0, 2, 0, 0, 3, 1, 0, 1, 23, 0, 27, 16, 1, 0, 1, 0, 0, 1]' : 0.121135}", "{'[0, 2, 0, 0, 3, 1, 0, 1, 23, 0, 27, 16, 1, 0, 1, 0, 0, 1]' : 0.121117}", "{'[0, 2, 0, 0, 3, 1, 0, 1, 23, 0, 27, 16, 1, 0, 1, 0, 0, 1]' : 0.121212}", "{'[0, 2, 0, 0, 3, 1, 0, 1, 23, 0, 27, 16, 1, 0, 1, 0, 0, 1]' : 0.12558}", "{'[0, 2, 0, 0, 3, 1, 0, 1, 23, 0, 27, 16, 1, 0, 1, 0, 0, 1]' : 0.12598}", "{'[0, 2, 0, 0, 3, 1, 0, 1, 23, 0, 27, 16, 1, 0, 1, 0, 0, 1]' : 0.12591}", "{'[0, 2, 0, 0, 3, 1, 0, 1, 23, 0, 27, 16, 1, 0, 1, 0, 0, 1]' : 0.123866}", "{'[0, 2, 0, 0, 3, 1, 0, 1, 23, 0, 27, 16, 1, 0, 1, 0, 0, 1]' : 0.121109}", "{'[0, 2, 0, 0, 3, 1, 0, 1, 23, 0, 27, 16, 1, 0, 1, 0, 0, 1]' : 0.121131}"]
returning from 'run': {'[0, 2, 0, 0, 3, 1, 0, 1, 23, 0, 27, 16, 1, 0, 1, 0, 0, 1]': ([0.121178, 0.120327, 0.119353, 0.121728, 0.121154, 0.121198, 0.121155, 0.121585, 0.121774, 0.121777, 0.121679, 0.123622, 0.121753, 0.121731, 0.120836, 0.119905, 0.121733, 0.121758, 0.121655, 0.123822, 0.121153, 0.121135, 0.121117, 0.121212, 0.12558, 0.12598, 0.12591, 0.123866, 0.121109, 0.121131], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 0, 0, 3, 1, 0, 1, 23, 0, 27, 16, 1, 0, 1, 0, 0, 1]': ([0.121178, 0.120327, 0.119353, 0.121728, 0.121154, 0.121198, 0.121155, 0.121585, 0.121774, 0.121777, 0.121679, 0.123622, 0.121753, 0.121731, 0.120836, 0.119905, 0.121733, 0.121758, 0.121655, 0.123822, 0.121153, 0.121135, 0.121117, 0.121212, 0.12558, 0.12598, 0.12591, 0.123866, 0.121109, 0.121131], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		343
        Multiplications: 	110
        Divisions: 		0
        Logical: 		0
        Reads: 			715
        Writes: 		91
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest11.exe __orio_perftest11.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest11.exe  
Program Test Output: 
{'[3, 6, 0, 6, 0, 6, 0, 1, 2, 0, 29, 22, 0, 0, 0, 0, 1, 0]' : 0.241084}
{'[3, 6, 0, 6, 0, 6, 0, 1, 2, 0, 29, 22, 0, 0, 0, 0, 1, 0]' : 0.24146}
{'[3, 6, 0, 6, 0, 6, 0, 1, 2, 0, 29, 22, 0, 0, 0, 0, 1, 0]' : 0.241242}
{'[3, 6, 0, 6, 0, 6, 0, 1, 2, 0, 29, 22, 0, 0, 0, 0, 1, 0]' : 0.241762}
{'[3, 6, 0, 6, 0, 6, 0, 1, 2, 0, 29, 22, 0, 0, 0, 0, 1, 0]' : 0.241074}
{'[3, 6, 0, 6, 0, 6, 0, 1, 2, 0, 29, 22, 0, 0, 0, 0, 1, 0]' : 0.24158}
{'[3, 6, 0, 6, 0, 6, 0, 1, 2, 0, 29, 22, 0, 0, 0, 0, 1, 0]' : 0.241209}
{'[3, 6, 0, 6, 0, 6, 0, 1, 2, 0, 29, 22, 0, 0, 0, 0, 1, 0]' : 0.24133}
{'[3, 6, 0, 6, 0, 6, 0, 1, 2, 0, 29, 22, 0, 0, 0, 0, 1, 0]' : 0.24137}
{'[3, 6, 0, 6, 0, 6, 0, 1, 2, 0, 29, 22, 0, 0, 0, 0, 1, 0]' : 0.241142}
{'[3, 6, 0, 6, 0, 6, 0, 1, 2, 0, 29, 22, 0, 0, 0, 0, 1, 0]' : 0.241336}
{'[3, 6, 0, 6, 0, 6, 0, 1, 2, 0, 29, 22, 0, 0, 0, 0, 1, 0]' : 0.241127}
{'[3, 6, 0, 6, 0, 6, 0, 1, 2, 0, 29, 22, 0, 0, 0, 0, 1, 0]' : 0.241543}
{'[3, 6, 0, 6, 0, 6, 0, 1, 2, 0, 29, 22, 0, 0, 0, 0, 1, 0]' : 0.241159}
{'[3, 6, 0, 6, 0, 6, 0, 1, 2, 0, 29, 22, 0, 0, 0, 0, 1, 0]' : 0.241552}
{'[3, 6, 0, 6, 0, 6, 0, 1, 2, 0, 29, 22, 0, 0, 0, 0, 1, 0]' : 0.241206}
{'[3, 6, 0, 6, 0, 6, 0, 1, 2, 0, 29, 22, 0, 0, 0, 0, 1, 0]' : 0.24129}
{'[3, 6, 0, 6, 0, 6, 0, 1, 2, 0, 29, 22, 0, 0, 0, 0, 1, 0]' : 0.241469}
{'[3, 6, 0, 6, 0, 6, 0, 1, 2, 0, 29, 22, 0, 0, 0, 0, 1, 0]' : 0.241489}
{'[3, 6, 0, 6, 0, 6, 0, 1, 2, 0, 29, 22, 0, 0, 0, 0, 1, 0]' : 0.241317}
{'[3, 6, 0, 6, 0, 6, 0, 1, 2, 0, 29, 22, 0, 0, 0, 0, 1, 0]' : 0.238296}
{'[3, 6, 0, 6, 0, 6, 0, 1, 2, 0, 29, 22, 0, 0, 0, 0, 1, 0]' : 0.241268}
{'[3, 6, 0, 6, 0, 6, 0, 1, 2, 0, 29, 22, 0, 0, 0, 0, 1, 0]' : 0.241617}
{'[3, 6, 0, 6, 0, 6, 0, 1, 2, 0, 29, 22, 0, 0, 0, 0, 1, 0]' : 0.241201}
{'[3, 6, 0, 6, 0, 6, 0, 1, 2, 0, 29, 22, 0, 0, 0, 0, 1, 0]' : 0.246445}
{'[3, 6, 0, 6, 0, 6, 0, 1, 2, 0, 29, 22, 0, 0, 0, 0, 1, 0]' : 0.248073}
{'[3, 6, 0, 6, 0, 6, 0, 1, 2, 0, 29, 22, 0, 0, 0, 0, 1, 0]' : 0.248099}
{'[3, 6, 0, 6, 0, 6, 0, 1, 2, 0, 29, 22, 0, 0, 0, 0, 1, 0]' : 0.248077}
{'[3, 6, 0, 6, 0, 6, 0, 1, 2, 0, 29, 22, 0, 0, 0, 0, 1, 0]' : 0.248191}
{'[3, 6, 0, 6, 0, 6, 0, 1, 2, 0, 29, 22, 0, 0, 0, 0, 1, 0]' : 0.248039}

out:
 ["{'[3, 6, 0, 6, 0, 6, 0, 1, 2, 0, 29, 22, 0, 0, 0, 0, 1, 0]' : 0.241084}", "{'[3, 6, 0, 6, 0, 6, 0, 1, 2, 0, 29, 22, 0, 0, 0, 0, 1, 0]' : 0.24146}", "{'[3, 6, 0, 6, 0, 6, 0, 1, 2, 0, 29, 22, 0, 0, 0, 0, 1, 0]' : 0.241242}", "{'[3, 6, 0, 6, 0, 6, 0, 1, 2, 0, 29, 22, 0, 0, 0, 0, 1, 0]' : 0.241762}", "{'[3, 6, 0, 6, 0, 6, 0, 1, 2, 0, 29, 22, 0, 0, 0, 0, 1, 0]' : 0.241074}", "{'[3, 6, 0, 6, 0, 6, 0, 1, 2, 0, 29, 22, 0, 0, 0, 0, 1, 0]' : 0.24158}", "{'[3, 6, 0, 6, 0, 6, 0, 1, 2, 0, 29, 22, 0, 0, 0, 0, 1, 0]' : 0.241209}", "{'[3, 6, 0, 6, 0, 6, 0, 1, 2, 0, 29, 22, 0, 0, 0, 0, 1, 0]' : 0.24133}", "{'[3, 6, 0, 6, 0, 6, 0, 1, 2, 0, 29, 22, 0, 0, 0, 0, 1, 0]' : 0.24137}", "{'[3, 6, 0, 6, 0, 6, 0, 1, 2, 0, 29, 22, 0, 0, 0, 0, 1, 0]' : 0.241142}", "{'[3, 6, 0, 6, 0, 6, 0, 1, 2, 0, 29, 22, 0, 0, 0, 0, 1, 0]' : 0.241336}", "{'[3, 6, 0, 6, 0, 6, 0, 1, 2, 0, 29, 22, 0, 0, 0, 0, 1, 0]' : 0.241127}", "{'[3, 6, 0, 6, 0, 6, 0, 1, 2, 0, 29, 22, 0, 0, 0, 0, 1, 0]' : 0.241543}", "{'[3, 6, 0, 6, 0, 6, 0, 1, 2, 0, 29, 22, 0, 0, 0, 0, 1, 0]' : 0.241159}", "{'[3, 6, 0, 6, 0, 6, 0, 1, 2, 0, 29, 22, 0, 0, 0, 0, 1, 0]' : 0.241552}", "{'[3, 6, 0, 6, 0, 6, 0, 1, 2, 0, 29, 22, 0, 0, 0, 0, 1, 0]' : 0.241206}", "{'[3, 6, 0, 6, 0, 6, 0, 1, 2, 0, 29, 22, 0, 0, 0, 0, 1, 0]' : 0.24129}", "{'[3, 6, 0, 6, 0, 6, 0, 1, 2, 0, 29, 22, 0, 0, 0, 0, 1, 0]' : 0.241469}", "{'[3, 6, 0, 6, 0, 6, 0, 1, 2, 0, 29, 22, 0, 0, 0, 0, 1, 0]' : 0.241489}", "{'[3, 6, 0, 6, 0, 6, 0, 1, 2, 0, 29, 22, 0, 0, 0, 0, 1, 0]' : 0.241317}", "{'[3, 6, 0, 6, 0, 6, 0, 1, 2, 0, 29, 22, 0, 0, 0, 0, 1, 0]' : 0.238296}", "{'[3, 6, 0, 6, 0, 6, 0, 1, 2, 0, 29, 22, 0, 0, 0, 0, 1, 0]' : 0.241268}", "{'[3, 6, 0, 6, 0, 6, 0, 1, 2, 0, 29, 22, 0, 0, 0, 0, 1, 0]' : 0.241617}", "{'[3, 6, 0, 6, 0, 6, 0, 1, 2, 0, 29, 22, 0, 0, 0, 0, 1, 0]' : 0.241201}", "{'[3, 6, 0, 6, 0, 6, 0, 1, 2, 0, 29, 22, 0, 0, 0, 0, 1, 0]' : 0.246445}", "{'[3, 6, 0, 6, 0, 6, 0, 1, 2, 0, 29, 22, 0, 0, 0, 0, 1, 0]' : 0.248073}", "{'[3, 6, 0, 6, 0, 6, 0, 1, 2, 0, 29, 22, 0, 0, 0, 0, 1, 0]' : 0.248099}", "{'[3, 6, 0, 6, 0, 6, 0, 1, 2, 0, 29, 22, 0, 0, 0, 0, 1, 0]' : 0.248077}", "{'[3, 6, 0, 6, 0, 6, 0, 1, 2, 0, 29, 22, 0, 0, 0, 0, 1, 0]' : 0.248191}", "{'[3, 6, 0, 6, 0, 6, 0, 1, 2, 0, 29, 22, 0, 0, 0, 0, 1, 0]' : 0.248039}"]
returning from 'run': {'[3, 6, 0, 6, 0, 6, 0, 1, 2, 0, 29, 22, 0, 0, 0, 0, 1, 0]': ([0.241084, 0.24146, 0.241242, 0.241762, 0.241074, 0.24158, 0.241209, 0.24133, 0.24137, 0.241142, 0.241336, 0.241127, 0.241543, 0.241159, 0.241552, 0.241206, 0.24129, 0.241469, 0.241489, 0.241317, 0.238296, 0.241268, 0.241617, 0.241201, 0.246445, 0.248073, 0.248099, 0.248077, 0.248191, 0.248039], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 6, 0, 6, 0, 6, 0, 1, 2, 0, 29, 22, 0, 0, 0, 0, 1, 0]': ([0.241084, 0.24146, 0.241242, 0.241762, 0.241074, 0.24158, 0.241209, 0.24133, 0.24137, 0.241142, 0.241336, 0.241127, 0.241543, 0.241159, 0.241552, 0.241206, 0.24129, 0.241469, 0.241489, 0.241317, 0.238296, 0.241268, 0.241617, 0.241201, 0.246445, 0.248073, 0.248099, 0.248077, 0.248191, 0.248039], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = kkk
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		342
        Multiplications: 	86
        Divisions: 		0
        Logical: 		0
        Reads: 			731
        Writes: 		159
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest12.exe __orio_perftest12.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest12.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest12.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest12.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest12.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	5
        Additions: 		2232
        Multiplications: 	594
        Divisions: 		0
        Logical: 		0
        Reads: 			3511
        Writes: 		381
        Comparisons:		22
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest13.exe __orio_perftest13.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest13.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest13.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest13.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest13.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	6
        Additions: 		767
        Multiplications: 	320
        Divisions: 		0
        Logical: 		0
        Reads: 			1633
        Writes: 		339
        Comparisons:		25
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest14.exe __orio_perftest14.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest14.exe  
Program Test Output: 
{'[4, 2, 6, 6, 2, 0, 0, 0, 27, 6, 0, 7, 1, 0, 0, 1, 1, 0]' : 0.0927801}
{'[4, 2, 6, 6, 2, 0, 0, 0, 27, 6, 0, 7, 1, 0, 0, 1, 1, 0]' : 0.0927801}
{'[4, 2, 6, 6, 2, 0, 0, 0, 27, 6, 0, 7, 1, 0, 0, 1, 1, 0]' : 0.0925858}
{'[4, 2, 6, 6, 2, 0, 0, 0, 27, 6, 0, 7, 1, 0, 0, 1, 1, 0]' : 0.092855}
{'[4, 2, 6, 6, 2, 0, 0, 0, 27, 6, 0, 7, 1, 0, 0, 1, 1, 0]' : 0.0925589}
{'[4, 2, 6, 6, 2, 0, 0, 0, 27, 6, 0, 7, 1, 0, 0, 1, 1, 0]' : 0.0927501}
{'[4, 2, 6, 6, 2, 0, 0, 0, 27, 6, 0, 7, 1, 0, 0, 1, 1, 0]' : 0.0927551}
{'[4, 2, 6, 6, 2, 0, 0, 0, 27, 6, 0, 7, 1, 0, 0, 1, 1, 0]' : 0.0929229}
{'[4, 2, 6, 6, 2, 0, 0, 0, 27, 6, 0, 7, 1, 0, 0, 1, 1, 0]' : 0.0931828}
{'[4, 2, 6, 6, 2, 0, 0, 0, 27, 6, 0, 7, 1, 0, 0, 1, 1, 0]' : 0.094286}
{'[4, 2, 6, 6, 2, 0, 0, 0, 27, 6, 0, 7, 1, 0, 0, 1, 1, 0]' : 0.09373}
{'[4, 2, 6, 6, 2, 0, 0, 0, 27, 6, 0, 7, 1, 0, 0, 1, 1, 0]' : 0.0925009}
{'[4, 2, 6, 6, 2, 0, 0, 0, 27, 6, 0, 7, 1, 0, 0, 1, 1, 0]' : 0.09251}
{'[4, 2, 6, 6, 2, 0, 0, 0, 27, 6, 0, 7, 1, 0, 0, 1, 1, 0]' : 0.0926039}
{'[4, 2, 6, 6, 2, 0, 0, 0, 27, 6, 0, 7, 1, 0, 0, 1, 1, 0]' : 0.0927529}
{'[4, 2, 6, 6, 2, 0, 0, 0, 27, 6, 0, 7, 1, 0, 0, 1, 1, 0]' : 0.0925539}
{'[4, 2, 6, 6, 2, 0, 0, 0, 27, 6, 0, 7, 1, 0, 0, 1, 1, 0]' : 0.092577}
{'[4, 2, 6, 6, 2, 0, 0, 0, 27, 6, 0, 7, 1, 0, 0, 1, 1, 0]' : 0.0929532}
{'[4, 2, 6, 6, 2, 0, 0, 0, 27, 6, 0, 7, 1, 0, 0, 1, 1, 0]' : 0.0929091}
{'[4, 2, 6, 6, 2, 0, 0, 0, 27, 6, 0, 7, 1, 0, 0, 1, 1, 0]' : 0.0928502}
{'[4, 2, 6, 6, 2, 0, 0, 0, 27, 6, 0, 7, 1, 0, 0, 1, 1, 0]' : 0.092618}
{'[4, 2, 6, 6, 2, 0, 0, 0, 27, 6, 0, 7, 1, 0, 0, 1, 1, 0]' : 0.0924721}
{'[4, 2, 6, 6, 2, 0, 0, 0, 27, 6, 0, 7, 1, 0, 0, 1, 1, 0]' : 0.0925901}
{'[4, 2, 6, 6, 2, 0, 0, 0, 27, 6, 0, 7, 1, 0, 0, 1, 1, 0]' : 0.092766}
{'[4, 2, 6, 6, 2, 0, 0, 0, 27, 6, 0, 7, 1, 0, 0, 1, 1, 0]' : 0.091316}
{'[4, 2, 6, 6, 2, 0, 0, 0, 27, 6, 0, 7, 1, 0, 0, 1, 1, 0]' : 0.0925791}
{'[4, 2, 6, 6, 2, 0, 0, 0, 27, 6, 0, 7, 1, 0, 0, 1, 1, 0]' : 0.092505}
{'[4, 2, 6, 6, 2, 0, 0, 0, 27, 6, 0, 7, 1, 0, 0, 1, 1, 0]' : 0.0926011}
{'[4, 2, 6, 6, 2, 0, 0, 0, 27, 6, 0, 7, 1, 0, 0, 1, 1, 0]' : 0.0927641}
{'[4, 2, 6, 6, 2, 0, 0, 0, 27, 6, 0, 7, 1, 0, 0, 1, 1, 0]' : 0.092767}

out:
 ["{'[4, 2, 6, 6, 2, 0, 0, 0, 27, 6, 0, 7, 1, 0, 0, 1, 1, 0]' : 0.0927801}", "{'[4, 2, 6, 6, 2, 0, 0, 0, 27, 6, 0, 7, 1, 0, 0, 1, 1, 0]' : 0.0927801}", "{'[4, 2, 6, 6, 2, 0, 0, 0, 27, 6, 0, 7, 1, 0, 0, 1, 1, 0]' : 0.0925858}", "{'[4, 2, 6, 6, 2, 0, 0, 0, 27, 6, 0, 7, 1, 0, 0, 1, 1, 0]' : 0.092855}", "{'[4, 2, 6, 6, 2, 0, 0, 0, 27, 6, 0, 7, 1, 0, 0, 1, 1, 0]' : 0.0925589}", "{'[4, 2, 6, 6, 2, 0, 0, 0, 27, 6, 0, 7, 1, 0, 0, 1, 1, 0]' : 0.0927501}", "{'[4, 2, 6, 6, 2, 0, 0, 0, 27, 6, 0, 7, 1, 0, 0, 1, 1, 0]' : 0.0927551}", "{'[4, 2, 6, 6, 2, 0, 0, 0, 27, 6, 0, 7, 1, 0, 0, 1, 1, 0]' : 0.0929229}", "{'[4, 2, 6, 6, 2, 0, 0, 0, 27, 6, 0, 7, 1, 0, 0, 1, 1, 0]' : 0.0931828}", "{'[4, 2, 6, 6, 2, 0, 0, 0, 27, 6, 0, 7, 1, 0, 0, 1, 1, 0]' : 0.094286}", "{'[4, 2, 6, 6, 2, 0, 0, 0, 27, 6, 0, 7, 1, 0, 0, 1, 1, 0]' : 0.09373}", "{'[4, 2, 6, 6, 2, 0, 0, 0, 27, 6, 0, 7, 1, 0, 0, 1, 1, 0]' : 0.0925009}", "{'[4, 2, 6, 6, 2, 0, 0, 0, 27, 6, 0, 7, 1, 0, 0, 1, 1, 0]' : 0.09251}", "{'[4, 2, 6, 6, 2, 0, 0, 0, 27, 6, 0, 7, 1, 0, 0, 1, 1, 0]' : 0.0926039}", "{'[4, 2, 6, 6, 2, 0, 0, 0, 27, 6, 0, 7, 1, 0, 0, 1, 1, 0]' : 0.0927529}", "{'[4, 2, 6, 6, 2, 0, 0, 0, 27, 6, 0, 7, 1, 0, 0, 1, 1, 0]' : 0.0925539}", "{'[4, 2, 6, 6, 2, 0, 0, 0, 27, 6, 0, 7, 1, 0, 0, 1, 1, 0]' : 0.092577}", "{'[4, 2, 6, 6, 2, 0, 0, 0, 27, 6, 0, 7, 1, 0, 0, 1, 1, 0]' : 0.0929532}", "{'[4, 2, 6, 6, 2, 0, 0, 0, 27, 6, 0, 7, 1, 0, 0, 1, 1, 0]' : 0.0929091}", "{'[4, 2, 6, 6, 2, 0, 0, 0, 27, 6, 0, 7, 1, 0, 0, 1, 1, 0]' : 0.0928502}", "{'[4, 2, 6, 6, 2, 0, 0, 0, 27, 6, 0, 7, 1, 0, 0, 1, 1, 0]' : 0.092618}", "{'[4, 2, 6, 6, 2, 0, 0, 0, 27, 6, 0, 7, 1, 0, 0, 1, 1, 0]' : 0.0924721}", "{'[4, 2, 6, 6, 2, 0, 0, 0, 27, 6, 0, 7, 1, 0, 0, 1, 1, 0]' : 0.0925901}", "{'[4, 2, 6, 6, 2, 0, 0, 0, 27, 6, 0, 7, 1, 0, 0, 1, 1, 0]' : 0.092766}", "{'[4, 2, 6, 6, 2, 0, 0, 0, 27, 6, 0, 7, 1, 0, 0, 1, 1, 0]' : 0.091316}", "{'[4, 2, 6, 6, 2, 0, 0, 0, 27, 6, 0, 7, 1, 0, 0, 1, 1, 0]' : 0.0925791}", "{'[4, 2, 6, 6, 2, 0, 0, 0, 27, 6, 0, 7, 1, 0, 0, 1, 1, 0]' : 0.092505}", "{'[4, 2, 6, 6, 2, 0, 0, 0, 27, 6, 0, 7, 1, 0, 0, 1, 1, 0]' : 0.0926011}", "{'[4, 2, 6, 6, 2, 0, 0, 0, 27, 6, 0, 7, 1, 0, 0, 1, 1, 0]' : 0.0927641}", "{'[4, 2, 6, 6, 2, 0, 0, 0, 27, 6, 0, 7, 1, 0, 0, 1, 1, 0]' : 0.092767}"]
returning from 'run': {'[4, 2, 6, 6, 2, 0, 0, 0, 27, 6, 0, 7, 1, 0, 0, 1, 1, 0]': ([0.0927801, 0.0927801, 0.0925858, 0.092855, 0.0925589, 0.0927501, 0.0927551, 0.0929229, 0.0931828, 0.094286, 0.09373, 0.0925009, 0.09251, 0.0926039, 0.0927529, 0.0925539, 0.092577, 0.0929532, 0.0929091, 0.0928502, 0.092618, 0.0924721, 0.0925901, 0.092766, 0.091316, 0.0925791, 0.092505, 0.0926011, 0.0927641, 0.092767], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 2, 6, 6, 2, 0, 0, 0, 27, 6, 0, 7, 1, 0, 0, 1, 1, 0]': ([0.0927801, 0.0927801, 0.0925858, 0.092855, 0.0925589, 0.0927501, 0.0927551, 0.0929229, 0.0931828, 0.094286, 0.09373, 0.0925009, 0.09251, 0.0926039, 0.0927529, 0.0925539, 0.092577, 0.0929532, 0.0929091, 0.0928502, 0.092618, 0.0924721, 0.0925901, 0.092766, 0.091316, 0.0925791, 0.092505, 0.0926011, 0.0927641, 0.092767], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	17
        Max loop nest depth: 	5
        Additions: 		331
        Multiplications: 	132
        Divisions: 		0
        Logical: 		0
        Reads: 			855
        Writes: 		204
        Comparisons:		17
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest15.exe __orio_perftest15.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest15.exe  
Program Test Output: 
{'[3, 3, 0, 0, 3, 5, 1, 0, 23, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.196211}
{'[3, 3, 0, 0, 3, 5, 1, 0, 23, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.196725}
{'[3, 3, 0, 0, 3, 5, 1, 0, 23, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.190766}
{'[3, 3, 0, 0, 3, 5, 1, 0, 23, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.180099}
{'[3, 3, 0, 0, 3, 5, 1, 0, 23, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.177776}
{'[3, 3, 0, 0, 3, 5, 1, 0, 23, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.176581}
{'[3, 3, 0, 0, 3, 5, 1, 0, 23, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.173365}
{'[3, 3, 0, 0, 3, 5, 1, 0, 23, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.176248}
{'[3, 3, 0, 0, 3, 5, 1, 0, 23, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.177847}
{'[3, 3, 0, 0, 3, 5, 1, 0, 23, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.175648}
{'[3, 3, 0, 0, 3, 5, 1, 0, 23, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.176126}
{'[3, 3, 0, 0, 3, 5, 1, 0, 23, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.172998}
{'[3, 3, 0, 0, 3, 5, 1, 0, 23, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.173765}
{'[3, 3, 0, 0, 3, 5, 1, 0, 23, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.180454}
{'[3, 3, 0, 0, 3, 5, 1, 0, 23, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.177855}
{'[3, 3, 0, 0, 3, 5, 1, 0, 23, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.17736}
{'[3, 3, 0, 0, 3, 5, 1, 0, 23, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.175303}
{'[3, 3, 0, 0, 3, 5, 1, 0, 23, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.173656}
{'[3, 3, 0, 0, 3, 5, 1, 0, 23, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.176398}
{'[3, 3, 0, 0, 3, 5, 1, 0, 23, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.1783}
{'[3, 3, 0, 0, 3, 5, 1, 0, 23, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.17797}
{'[3, 3, 0, 0, 3, 5, 1, 0, 23, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.177452}
{'[3, 3, 0, 0, 3, 5, 1, 0, 23, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.174001}
{'[3, 3, 0, 0, 3, 5, 1, 0, 23, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.174197}
{'[3, 3, 0, 0, 3, 5, 1, 0, 23, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.176052}
{'[3, 3, 0, 0, 3, 5, 1, 0, 23, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.175989}
{'[3, 3, 0, 0, 3, 5, 1, 0, 23, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.173019}
{'[3, 3, 0, 0, 3, 5, 1, 0, 23, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.175583}
{'[3, 3, 0, 0, 3, 5, 1, 0, 23, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.173324}
{'[3, 3, 0, 0, 3, 5, 1, 0, 23, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.174403}

out:
 ["{'[3, 3, 0, 0, 3, 5, 1, 0, 23, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.196211}", "{'[3, 3, 0, 0, 3, 5, 1, 0, 23, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.196725}", "{'[3, 3, 0, 0, 3, 5, 1, 0, 23, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.190766}", "{'[3, 3, 0, 0, 3, 5, 1, 0, 23, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.180099}", "{'[3, 3, 0, 0, 3, 5, 1, 0, 23, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.177776}", "{'[3, 3, 0, 0, 3, 5, 1, 0, 23, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.176581}", "{'[3, 3, 0, 0, 3, 5, 1, 0, 23, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.173365}", "{'[3, 3, 0, 0, 3, 5, 1, 0, 23, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.176248}", "{'[3, 3, 0, 0, 3, 5, 1, 0, 23, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.177847}", "{'[3, 3, 0, 0, 3, 5, 1, 0, 23, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.175648}", "{'[3, 3, 0, 0, 3, 5, 1, 0, 23, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.176126}", "{'[3, 3, 0, 0, 3, 5, 1, 0, 23, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.172998}", "{'[3, 3, 0, 0, 3, 5, 1, 0, 23, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.173765}", "{'[3, 3, 0, 0, 3, 5, 1, 0, 23, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.180454}", "{'[3, 3, 0, 0, 3, 5, 1, 0, 23, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.177855}", "{'[3, 3, 0, 0, 3, 5, 1, 0, 23, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.17736}", "{'[3, 3, 0, 0, 3, 5, 1, 0, 23, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.175303}", "{'[3, 3, 0, 0, 3, 5, 1, 0, 23, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.173656}", "{'[3, 3, 0, 0, 3, 5, 1, 0, 23, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.176398}", "{'[3, 3, 0, 0, 3, 5, 1, 0, 23, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.1783}", "{'[3, 3, 0, 0, 3, 5, 1, 0, 23, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.17797}", "{'[3, 3, 0, 0, 3, 5, 1, 0, 23, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.177452}", "{'[3, 3, 0, 0, 3, 5, 1, 0, 23, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.174001}", "{'[3, 3, 0, 0, 3, 5, 1, 0, 23, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.174197}", "{'[3, 3, 0, 0, 3, 5, 1, 0, 23, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.176052}", "{'[3, 3, 0, 0, 3, 5, 1, 0, 23, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.175989}", "{'[3, 3, 0, 0, 3, 5, 1, 0, 23, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.173019}", "{'[3, 3, 0, 0, 3, 5, 1, 0, 23, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.175583}", "{'[3, 3, 0, 0, 3, 5, 1, 0, 23, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.173324}", "{'[3, 3, 0, 0, 3, 5, 1, 0, 23, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.174403}"]
returning from 'run': {'[3, 3, 0, 0, 3, 5, 1, 0, 23, 0, 0, 0, 2, 0, 0, 1, 0, 1]': ([0.196211, 0.196725, 0.190766, 0.180099, 0.177776, 0.176581, 0.173365, 0.176248, 0.177847, 0.175648, 0.176126, 0.172998, 0.173765, 0.180454, 0.177855, 0.17736, 0.175303, 0.173656, 0.176398, 0.1783, 0.17797, 0.177452, 0.174001, 0.174197, 0.176052, 0.175989, 0.173019, 0.175583, 0.173324, 0.174403], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 3, 0, 0, 3, 5, 1, 0, 23, 0, 0, 0, 2, 0, 0, 1, 0, 1]': ([0.196211, 0.196725, 0.190766, 0.180099, 0.177776, 0.176581, 0.173365, 0.176248, 0.177847, 0.175648, 0.176126, 0.172998, 0.173765, 0.180454, 0.177855, 0.17736, 0.175303, 0.173656, 0.176398, 0.1783, 0.17797, 0.177452, 0.174001, 0.174197, 0.176052, 0.175989, 0.173019, 0.175583, 0.173324, 0.174403], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		384
        Multiplications: 	110
        Divisions: 		0
        Logical: 		0
        Reads: 			794
        Writes: 		159
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest16.exe __orio_perftest16.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest16.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest16.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest16.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest16.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	45
        Max loop nest depth: 	6
        Additions: 		1276
        Multiplications: 	364
        Divisions: 		0
        Logical: 		0
        Reads: 			2247
        Writes: 		291
        Comparisons:		45
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest17.exe __orio_perftest17.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest17.exe  
Program Test Output: 
{'[6, 3, 2, 6, 2, 0, 0, 1, 0, 3, 3, 0, 1, 1, 0, 0, 0, 0]' : 0.11596}
{'[6, 3, 2, 6, 2, 0, 0, 1, 0, 3, 3, 0, 1, 1, 0, 0, 0, 0]' : 0.115961}
{'[6, 3, 2, 6, 2, 0, 0, 1, 0, 3, 3, 0, 1, 1, 0, 0, 0, 0]' : 0.115729}
{'[6, 3, 2, 6, 2, 0, 0, 1, 0, 3, 3, 0, 1, 1, 0, 0, 0, 0]' : 0.115933}
{'[6, 3, 2, 6, 2, 0, 0, 1, 0, 3, 3, 0, 1, 1, 0, 0, 0, 0]' : 0.105536}
{'[6, 3, 2, 6, 2, 0, 0, 1, 0, 3, 3, 0, 1, 1, 0, 0, 0, 0]' : 0.101358}
{'[6, 3, 2, 6, 2, 0, 0, 1, 0, 3, 3, 0, 1, 1, 0, 0, 0, 0]' : 0.098798}
{'[6, 3, 2, 6, 2, 0, 0, 1, 0, 3, 3, 0, 1, 1, 0, 0, 0, 0]' : 0.098459}
{'[6, 3, 2, 6, 2, 0, 0, 1, 0, 3, 3, 0, 1, 1, 0, 0, 0, 0]' : 0.0986078}
{'[6, 3, 2, 6, 2, 0, 0, 1, 0, 3, 3, 0, 1, 1, 0, 0, 0, 0]' : 0.0984969}
{'[6, 3, 2, 6, 2, 0, 0, 1, 0, 3, 3, 0, 1, 1, 0, 0, 0, 0]' : 0.098556}
{'[6, 3, 2, 6, 2, 0, 0, 1, 0, 3, 3, 0, 1, 1, 0, 0, 0, 0]' : 0.101338}
{'[6, 3, 2, 6, 2, 0, 0, 1, 0, 3, 3, 0, 1, 1, 0, 0, 0, 0]' : 0.101302}
{'[6, 3, 2, 6, 2, 0, 0, 1, 0, 3, 3, 0, 1, 1, 0, 0, 0, 0]' : 0.10133}
{'[6, 3, 2, 6, 2, 0, 0, 1, 0, 3, 3, 0, 1, 1, 0, 0, 0, 0]' : 0.101147}
{'[6, 3, 2, 6, 2, 0, 0, 1, 0, 3, 3, 0, 1, 1, 0, 0, 0, 0]' : 0.101801}
{'[6, 3, 2, 6, 2, 0, 0, 1, 0, 3, 3, 0, 1, 1, 0, 0, 0, 0]' : 0.101958}
{'[6, 3, 2, 6, 2, 0, 0, 1, 0, 3, 3, 0, 1, 1, 0, 0, 0, 0]' : 0.101413}
{'[6, 3, 2, 6, 2, 0, 0, 1, 0, 3, 3, 0, 1, 1, 0, 0, 0, 0]' : 0.101221}
{'[6, 3, 2, 6, 2, 0, 0, 1, 0, 3, 3, 0, 1, 1, 0, 0, 0, 0]' : 0.101522}
{'[6, 3, 2, 6, 2, 0, 0, 1, 0, 3, 3, 0, 1, 1, 0, 0, 0, 0]' : 0.103363}
{'[6, 3, 2, 6, 2, 0, 0, 1, 0, 3, 3, 0, 1, 1, 0, 0, 0, 0]' : 0.10207}
{'[6, 3, 2, 6, 2, 0, 0, 1, 0, 3, 3, 0, 1, 1, 0, 0, 0, 0]' : 0.103775}
{'[6, 3, 2, 6, 2, 0, 0, 1, 0, 3, 3, 0, 1, 1, 0, 0, 0, 0]' : 0.103834}
{'[6, 3, 2, 6, 2, 0, 0, 1, 0, 3, 3, 0, 1, 1, 0, 0, 0, 0]' : 0.101724}
{'[6, 3, 2, 6, 2, 0, 0, 1, 0, 3, 3, 0, 1, 1, 0, 0, 0, 0]' : 0.101512}
{'[6, 3, 2, 6, 2, 0, 0, 1, 0, 3, 3, 0, 1, 1, 0, 0, 0, 0]' : 0.101237}
{'[6, 3, 2, 6, 2, 0, 0, 1, 0, 3, 3, 0, 1, 1, 0, 0, 0, 0]' : 0.101488}
{'[6, 3, 2, 6, 2, 0, 0, 1, 0, 3, 3, 0, 1, 1, 0, 0, 0, 0]' : 0.10141}
{'[6, 3, 2, 6, 2, 0, 0, 1, 0, 3, 3, 0, 1, 1, 0, 0, 0, 0]' : 0.100358}

out:
 ["{'[6, 3, 2, 6, 2, 0, 0, 1, 0, 3, 3, 0, 1, 1, 0, 0, 0, 0]' : 0.11596}", "{'[6, 3, 2, 6, 2, 0, 0, 1, 0, 3, 3, 0, 1, 1, 0, 0, 0, 0]' : 0.115961}", "{'[6, 3, 2, 6, 2, 0, 0, 1, 0, 3, 3, 0, 1, 1, 0, 0, 0, 0]' : 0.115729}", "{'[6, 3, 2, 6, 2, 0, 0, 1, 0, 3, 3, 0, 1, 1, 0, 0, 0, 0]' : 0.115933}", "{'[6, 3, 2, 6, 2, 0, 0, 1, 0, 3, 3, 0, 1, 1, 0, 0, 0, 0]' : 0.105536}", "{'[6, 3, 2, 6, 2, 0, 0, 1, 0, 3, 3, 0, 1, 1, 0, 0, 0, 0]' : 0.101358}", "{'[6, 3, 2, 6, 2, 0, 0, 1, 0, 3, 3, 0, 1, 1, 0, 0, 0, 0]' : 0.098798}", "{'[6, 3, 2, 6, 2, 0, 0, 1, 0, 3, 3, 0, 1, 1, 0, 0, 0, 0]' : 0.098459}", "{'[6, 3, 2, 6, 2, 0, 0, 1, 0, 3, 3, 0, 1, 1, 0, 0, 0, 0]' : 0.0986078}", "{'[6, 3, 2, 6, 2, 0, 0, 1, 0, 3, 3, 0, 1, 1, 0, 0, 0, 0]' : 0.0984969}", "{'[6, 3, 2, 6, 2, 0, 0, 1, 0, 3, 3, 0, 1, 1, 0, 0, 0, 0]' : 0.098556}", "{'[6, 3, 2, 6, 2, 0, 0, 1, 0, 3, 3, 0, 1, 1, 0, 0, 0, 0]' : 0.101338}", "{'[6, 3, 2, 6, 2, 0, 0, 1, 0, 3, 3, 0, 1, 1, 0, 0, 0, 0]' : 0.101302}", "{'[6, 3, 2, 6, 2, 0, 0, 1, 0, 3, 3, 0, 1, 1, 0, 0, 0, 0]' : 0.10133}", "{'[6, 3, 2, 6, 2, 0, 0, 1, 0, 3, 3, 0, 1, 1, 0, 0, 0, 0]' : 0.101147}", "{'[6, 3, 2, 6, 2, 0, 0, 1, 0, 3, 3, 0, 1, 1, 0, 0, 0, 0]' : 0.101801}", "{'[6, 3, 2, 6, 2, 0, 0, 1, 0, 3, 3, 0, 1, 1, 0, 0, 0, 0]' : 0.101958}", "{'[6, 3, 2, 6, 2, 0, 0, 1, 0, 3, 3, 0, 1, 1, 0, 0, 0, 0]' : 0.101413}", "{'[6, 3, 2, 6, 2, 0, 0, 1, 0, 3, 3, 0, 1, 1, 0, 0, 0, 0]' : 0.101221}", "{'[6, 3, 2, 6, 2, 0, 0, 1, 0, 3, 3, 0, 1, 1, 0, 0, 0, 0]' : 0.101522}", "{'[6, 3, 2, 6, 2, 0, 0, 1, 0, 3, 3, 0, 1, 1, 0, 0, 0, 0]' : 0.103363}", "{'[6, 3, 2, 6, 2, 0, 0, 1, 0, 3, 3, 0, 1, 1, 0, 0, 0, 0]' : 0.10207}", "{'[6, 3, 2, 6, 2, 0, 0, 1, 0, 3, 3, 0, 1, 1, 0, 0, 0, 0]' : 0.103775}", "{'[6, 3, 2, 6, 2, 0, 0, 1, 0, 3, 3, 0, 1, 1, 0, 0, 0, 0]' : 0.103834}", "{'[6, 3, 2, 6, 2, 0, 0, 1, 0, 3, 3, 0, 1, 1, 0, 0, 0, 0]' : 0.101724}", "{'[6, 3, 2, 6, 2, 0, 0, 1, 0, 3, 3, 0, 1, 1, 0, 0, 0, 0]' : 0.101512}", "{'[6, 3, 2, 6, 2, 0, 0, 1, 0, 3, 3, 0, 1, 1, 0, 0, 0, 0]' : 0.101237}", "{'[6, 3, 2, 6, 2, 0, 0, 1, 0, 3, 3, 0, 1, 1, 0, 0, 0, 0]' : 0.101488}", "{'[6, 3, 2, 6, 2, 0, 0, 1, 0, 3, 3, 0, 1, 1, 0, 0, 0, 0]' : 0.10141}", "{'[6, 3, 2, 6, 2, 0, 0, 1, 0, 3, 3, 0, 1, 1, 0, 0, 0, 0]' : 0.100358}"]
returning from 'run': {'[6, 3, 2, 6, 2, 0, 0, 1, 0, 3, 3, 0, 1, 1, 0, 0, 0, 0]': ([0.11596, 0.115961, 0.115729, 0.115933, 0.105536, 0.101358, 0.098798, 0.098459, 0.0986078, 0.0984969, 0.098556, 0.101338, 0.101302, 0.10133, 0.101147, 0.101801, 0.101958, 0.101413, 0.101221, 0.101522, 0.103363, 0.10207, 0.103775, 0.103834, 0.101724, 0.101512, 0.101237, 0.101488, 0.10141, 0.100358], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 3, 2, 6, 2, 0, 0, 1, 0, 3, 3, 0, 1, 1, 0, 0, 0, 0]': ([0.11596, 0.115961, 0.115729, 0.115933, 0.105536, 0.101358, 0.098798, 0.098459, 0.0986078, 0.0984969, 0.098556, 0.101338, 0.101302, 0.10133, 0.101147, 0.101801, 0.101958, 0.101413, 0.101221, 0.101522, 0.103363, 0.10207, 0.103775, 0.103834, 0.101724, 0.101512, 0.101237, 0.101488, 0.10141, 0.100358], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = kkk
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	4
        Additions: 		894
        Multiplications: 	420
        Divisions: 		0
        Logical: 		0
        Reads: 			1911
        Writes: 		367
        Comparisons:		18
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest18.exe __orio_perftest18.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest18.exe  
Program Test Output: 
{'[5, 0, 5, 3, 0, 3, 0, 0, 7, 11, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.103955}
{'[5, 0, 5, 3, 0, 3, 0, 0, 7, 11, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.104044}
{'[5, 0, 5, 3, 0, 3, 0, 0, 7, 11, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.103882}
{'[5, 0, 5, 3, 0, 3, 0, 0, 7, 11, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.10375}
{'[5, 0, 5, 3, 0, 3, 0, 0, 7, 11, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.103412}
{'[5, 0, 5, 3, 0, 3, 0, 0, 7, 11, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.094852}
{'[5, 0, 5, 3, 0, 3, 0, 0, 7, 11, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0933659}
{'[5, 0, 5, 3, 0, 3, 0, 0, 7, 11, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0936971}
{'[5, 0, 5, 3, 0, 3, 0, 0, 7, 11, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.093508}
{'[5, 0, 5, 3, 0, 3, 0, 0, 7, 11, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0933418}
{'[5, 0, 5, 3, 0, 3, 0, 0, 7, 11, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0933869}
{'[5, 0, 5, 3, 0, 3, 0, 0, 7, 11, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.09372}
{'[5, 0, 5, 3, 0, 3, 0, 0, 7, 11, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.093811}
{'[5, 0, 5, 3, 0, 3, 0, 0, 7, 11, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0934989}
{'[5, 0, 5, 3, 0, 3, 0, 0, 7, 11, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0935502}
{'[5, 0, 5, 3, 0, 3, 0, 0, 7, 11, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0933299}
{'[5, 0, 5, 3, 0, 3, 0, 0, 7, 11, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0933809}
{'[5, 0, 5, 3, 0, 3, 0, 0, 7, 11, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.093395}
{'[5, 0, 5, 3, 0, 3, 0, 0, 7, 11, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0935631}
{'[5, 0, 5, 3, 0, 3, 0, 0, 7, 11, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0935731}
{'[5, 0, 5, 3, 0, 3, 0, 0, 7, 11, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0935421}
{'[5, 0, 5, 3, 0, 3, 0, 0, 7, 11, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0934219}
{'[5, 0, 5, 3, 0, 3, 0, 0, 7, 11, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0934432}
{'[5, 0, 5, 3, 0, 3, 0, 0, 7, 11, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0935509}
{'[5, 0, 5, 3, 0, 3, 0, 0, 7, 11, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0933421}
{'[5, 0, 5, 3, 0, 3, 0, 0, 7, 11, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.093312}
{'[5, 0, 5, 3, 0, 3, 0, 0, 7, 11, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0933111}
{'[5, 0, 5, 3, 0, 3, 0, 0, 7, 11, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.093441}
{'[5, 0, 5, 3, 0, 3, 0, 0, 7, 11, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.09199}
{'[5, 0, 5, 3, 0, 3, 0, 0, 7, 11, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0933981}

out:
 ["{'[5, 0, 5, 3, 0, 3, 0, 0, 7, 11, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.103955}", "{'[5, 0, 5, 3, 0, 3, 0, 0, 7, 11, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.104044}", "{'[5, 0, 5, 3, 0, 3, 0, 0, 7, 11, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.103882}", "{'[5, 0, 5, 3, 0, 3, 0, 0, 7, 11, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.10375}", "{'[5, 0, 5, 3, 0, 3, 0, 0, 7, 11, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.103412}", "{'[5, 0, 5, 3, 0, 3, 0, 0, 7, 11, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.094852}", "{'[5, 0, 5, 3, 0, 3, 0, 0, 7, 11, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0933659}", "{'[5, 0, 5, 3, 0, 3, 0, 0, 7, 11, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0936971}", "{'[5, 0, 5, 3, 0, 3, 0, 0, 7, 11, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.093508}", "{'[5, 0, 5, 3, 0, 3, 0, 0, 7, 11, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0933418}", "{'[5, 0, 5, 3, 0, 3, 0, 0, 7, 11, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0933869}", "{'[5, 0, 5, 3, 0, 3, 0, 0, 7, 11, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.09372}", "{'[5, 0, 5, 3, 0, 3, 0, 0, 7, 11, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.093811}", "{'[5, 0, 5, 3, 0, 3, 0, 0, 7, 11, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0934989}", "{'[5, 0, 5, 3, 0, 3, 0, 0, 7, 11, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0935502}", "{'[5, 0, 5, 3, 0, 3, 0, 0, 7, 11, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0933299}", "{'[5, 0, 5, 3, 0, 3, 0, 0, 7, 11, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0933809}", "{'[5, 0, 5, 3, 0, 3, 0, 0, 7, 11, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.093395}", "{'[5, 0, 5, 3, 0, 3, 0, 0, 7, 11, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0935631}", "{'[5, 0, 5, 3, 0, 3, 0, 0, 7, 11, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0935731}", "{'[5, 0, 5, 3, 0, 3, 0, 0, 7, 11, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0935421}", "{'[5, 0, 5, 3, 0, 3, 0, 0, 7, 11, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0934219}", "{'[5, 0, 5, 3, 0, 3, 0, 0, 7, 11, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0934432}", "{'[5, 0, 5, 3, 0, 3, 0, 0, 7, 11, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0935509}", "{'[5, 0, 5, 3, 0, 3, 0, 0, 7, 11, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0933421}", "{'[5, 0, 5, 3, 0, 3, 0, 0, 7, 11, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.093312}", "{'[5, 0, 5, 3, 0, 3, 0, 0, 7, 11, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0933111}", "{'[5, 0, 5, 3, 0, 3, 0, 0, 7, 11, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.093441}", "{'[5, 0, 5, 3, 0, 3, 0, 0, 7, 11, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.09199}", "{'[5, 0, 5, 3, 0, 3, 0, 0, 7, 11, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0933981}"]
returning from 'run': {'[5, 0, 5, 3, 0, 3, 0, 0, 7, 11, 0, 0, 1, 0, 1, 1, 0, 0]': ([0.103955, 0.104044, 0.103882, 0.10375, 0.103412, 0.094852, 0.0933659, 0.0936971, 0.093508, 0.0933418, 0.0933869, 0.09372, 0.093811, 0.0934989, 0.0935502, 0.0933299, 0.0933809, 0.093395, 0.0935631, 0.0935731, 0.0935421, 0.0934219, 0.0934432, 0.0935509, 0.0933421, 0.093312, 0.0933111, 0.093441, 0.09199, 0.0933981], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 0, 5, 3, 0, 3, 0, 0, 7, 11, 0, 0, 1, 0, 1, 1, 0, 0]': ([0.103955, 0.104044, 0.103882, 0.10375, 0.103412, 0.094852, 0.0933659, 0.0936971, 0.093508, 0.0933418, 0.0933869, 0.09372, 0.093811, 0.0934989, 0.0935502, 0.0933299, 0.0933809, 0.093395, 0.0935631, 0.0935731, 0.0935421, 0.0934219, 0.0934432, 0.0935509, 0.0933421, 0.093312, 0.0933111, 0.093441, 0.09199, 0.0933981], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	96
        Max loop nest depth: 	4
        Additions: 		1627
        Multiplications: 	594
        Divisions: 		0
        Logical: 		0
        Reads: 			3581
        Writes: 		722
        Comparisons:		96
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest19.exe __orio_perftest19.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest19.exe  
Program Test Output: 
{'[0, 0, 0, 6, 6, 6, 1, 1, 5, 23, 0, 6, 1, 0, 1, 1, 0, 1]' : 0.111238}
{'[0, 0, 0, 6, 6, 6, 1, 1, 5, 23, 0, 6, 1, 0, 1, 1, 0, 1]' : 0.111474}
{'[0, 0, 0, 6, 6, 6, 1, 1, 5, 23, 0, 6, 1, 0, 1, 1, 0, 1]' : 0.111084}
{'[0, 0, 0, 6, 6, 6, 1, 1, 5, 23, 0, 6, 1, 0, 1, 1, 0, 1]' : 0.109703}
{'[0, 0, 0, 6, 6, 6, 1, 1, 5, 23, 0, 6, 1, 0, 1, 1, 0, 1]' : 0.108126}
{'[0, 0, 0, 6, 6, 6, 1, 1, 5, 23, 0, 6, 1, 0, 1, 1, 0, 1]' : 0.108483}
{'[0, 0, 0, 6, 6, 6, 1, 1, 5, 23, 0, 6, 1, 0, 1, 1, 0, 1]' : 0.111064}
{'[0, 0, 0, 6, 6, 6, 1, 1, 5, 23, 0, 6, 1, 0, 1, 1, 0, 1]' : 0.111109}
{'[0, 0, 0, 6, 6, 6, 1, 1, 5, 23, 0, 6, 1, 0, 1, 1, 0, 1]' : 0.111109}
{'[0, 0, 0, 6, 6, 6, 1, 1, 5, 23, 0, 6, 1, 0, 1, 1, 0, 1]' : 0.111128}
{'[0, 0, 0, 6, 6, 6, 1, 1, 5, 23, 0, 6, 1, 0, 1, 1, 0, 1]' : 0.111643}
{'[0, 0, 0, 6, 6, 6, 1, 1, 5, 23, 0, 6, 1, 0, 1, 1, 0, 1]' : 0.109744}
{'[0, 0, 0, 6, 6, 6, 1, 1, 5, 23, 0, 6, 1, 0, 1, 1, 0, 1]' : 0.108337}
{'[0, 0, 0, 6, 6, 6, 1, 1, 5, 23, 0, 6, 1, 0, 1, 1, 0, 1]' : 0.108042}
{'[0, 0, 0, 6, 6, 6, 1, 1, 5, 23, 0, 6, 1, 0, 1, 1, 0, 1]' : 0.108139}
{'[0, 0, 0, 6, 6, 6, 1, 1, 5, 23, 0, 6, 1, 0, 1, 1, 0, 1]' : 0.111068}
{'[0, 0, 0, 6, 6, 6, 1, 1, 5, 23, 0, 6, 1, 0, 1, 1, 0, 1]' : 0.111187}
{'[0, 0, 0, 6, 6, 6, 1, 1, 5, 23, 0, 6, 1, 0, 1, 1, 0, 1]' : 0.111082}
{'[0, 0, 0, 6, 6, 6, 1, 1, 5, 23, 0, 6, 1, 0, 1, 1, 0, 1]' : 0.111283}
{'[0, 0, 0, 6, 6, 6, 1, 1, 5, 23, 0, 6, 1, 0, 1, 1, 0, 1]' : 0.111346}
{'[0, 0, 0, 6, 6, 6, 1, 1, 5, 23, 0, 6, 1, 0, 1, 1, 0, 1]' : 0.111289}
{'[0, 0, 0, 6, 6, 6, 1, 1, 5, 23, 0, 6, 1, 0, 1, 1, 0, 1]' : 0.10846}
{'[0, 0, 0, 6, 6, 6, 1, 1, 5, 23, 0, 6, 1, 0, 1, 1, 0, 1]' : 0.108427}
{'[0, 0, 0, 6, 6, 6, 1, 1, 5, 23, 0, 6, 1, 0, 1, 1, 0, 1]' : 0.108145}
{'[0, 0, 0, 6, 6, 6, 1, 1, 5, 23, 0, 6, 1, 0, 1, 1, 0, 1]' : 0.110901}
{'[0, 0, 0, 6, 6, 6, 1, 1, 5, 23, 0, 6, 1, 0, 1, 1, 0, 1]' : 0.111092}
{'[0, 0, 0, 6, 6, 6, 1, 1, 5, 23, 0, 6, 1, 0, 1, 1, 0, 1]' : 0.111052}
{'[0, 0, 0, 6, 6, 6, 1, 1, 5, 23, 0, 6, 1, 0, 1, 1, 0, 1]' : 0.111454}
{'[0, 0, 0, 6, 6, 6, 1, 1, 5, 23, 0, 6, 1, 0, 1, 1, 0, 1]' : 0.111249}
{'[0, 0, 0, 6, 6, 6, 1, 1, 5, 23, 0, 6, 1, 0, 1, 1, 0, 1]' : 0.111234}

out:
 ["{'[0, 0, 0, 6, 6, 6, 1, 1, 5, 23, 0, 6, 1, 0, 1, 1, 0, 1]' : 0.111238}", "{'[0, 0, 0, 6, 6, 6, 1, 1, 5, 23, 0, 6, 1, 0, 1, 1, 0, 1]' : 0.111474}", "{'[0, 0, 0, 6, 6, 6, 1, 1, 5, 23, 0, 6, 1, 0, 1, 1, 0, 1]' : 0.111084}", "{'[0, 0, 0, 6, 6, 6, 1, 1, 5, 23, 0, 6, 1, 0, 1, 1, 0, 1]' : 0.109703}", "{'[0, 0, 0, 6, 6, 6, 1, 1, 5, 23, 0, 6, 1, 0, 1, 1, 0, 1]' : 0.108126}", "{'[0, 0, 0, 6, 6, 6, 1, 1, 5, 23, 0, 6, 1, 0, 1, 1, 0, 1]' : 0.108483}", "{'[0, 0, 0, 6, 6, 6, 1, 1, 5, 23, 0, 6, 1, 0, 1, 1, 0, 1]' : 0.111064}", "{'[0, 0, 0, 6, 6, 6, 1, 1, 5, 23, 0, 6, 1, 0, 1, 1, 0, 1]' : 0.111109}", "{'[0, 0, 0, 6, 6, 6, 1, 1, 5, 23, 0, 6, 1, 0, 1, 1, 0, 1]' : 0.111109}", "{'[0, 0, 0, 6, 6, 6, 1, 1, 5, 23, 0, 6, 1, 0, 1, 1, 0, 1]' : 0.111128}", "{'[0, 0, 0, 6, 6, 6, 1, 1, 5, 23, 0, 6, 1, 0, 1, 1, 0, 1]' : 0.111643}", "{'[0, 0, 0, 6, 6, 6, 1, 1, 5, 23, 0, 6, 1, 0, 1, 1, 0, 1]' : 0.109744}", "{'[0, 0, 0, 6, 6, 6, 1, 1, 5, 23, 0, 6, 1, 0, 1, 1, 0, 1]' : 0.108337}", "{'[0, 0, 0, 6, 6, 6, 1, 1, 5, 23, 0, 6, 1, 0, 1, 1, 0, 1]' : 0.108042}", "{'[0, 0, 0, 6, 6, 6, 1, 1, 5, 23, 0, 6, 1, 0, 1, 1, 0, 1]' : 0.108139}", "{'[0, 0, 0, 6, 6, 6, 1, 1, 5, 23, 0, 6, 1, 0, 1, 1, 0, 1]' : 0.111068}", "{'[0, 0, 0, 6, 6, 6, 1, 1, 5, 23, 0, 6, 1, 0, 1, 1, 0, 1]' : 0.111187}", "{'[0, 0, 0, 6, 6, 6, 1, 1, 5, 23, 0, 6, 1, 0, 1, 1, 0, 1]' : 0.111082}", "{'[0, 0, 0, 6, 6, 6, 1, 1, 5, 23, 0, 6, 1, 0, 1, 1, 0, 1]' : 0.111283}", "{'[0, 0, 0, 6, 6, 6, 1, 1, 5, 23, 0, 6, 1, 0, 1, 1, 0, 1]' : 0.111346}", "{'[0, 0, 0, 6, 6, 6, 1, 1, 5, 23, 0, 6, 1, 0, 1, 1, 0, 1]' : 0.111289}", "{'[0, 0, 0, 6, 6, 6, 1, 1, 5, 23, 0, 6, 1, 0, 1, 1, 0, 1]' : 0.10846}", "{'[0, 0, 0, 6, 6, 6, 1, 1, 5, 23, 0, 6, 1, 0, 1, 1, 0, 1]' : 0.108427}", "{'[0, 0, 0, 6, 6, 6, 1, 1, 5, 23, 0, 6, 1, 0, 1, 1, 0, 1]' : 0.108145}", "{'[0, 0, 0, 6, 6, 6, 1, 1, 5, 23, 0, 6, 1, 0, 1, 1, 0, 1]' : 0.110901}", "{'[0, 0, 0, 6, 6, 6, 1, 1, 5, 23, 0, 6, 1, 0, 1, 1, 0, 1]' : 0.111092}", "{'[0, 0, 0, 6, 6, 6, 1, 1, 5, 23, 0, 6, 1, 0, 1, 1, 0, 1]' : 0.111052}", "{'[0, 0, 0, 6, 6, 6, 1, 1, 5, 23, 0, 6, 1, 0, 1, 1, 0, 1]' : 0.111454}", "{'[0, 0, 0, 6, 6, 6, 1, 1, 5, 23, 0, 6, 1, 0, 1, 1, 0, 1]' : 0.111249}", "{'[0, 0, 0, 6, 6, 6, 1, 1, 5, 23, 0, 6, 1, 0, 1, 1, 0, 1]' : 0.111234}"]
returning from 'run': {'[0, 0, 0, 6, 6, 6, 1, 1, 5, 23, 0, 6, 1, 0, 1, 1, 0, 1]': ([0.111238, 0.111474, 0.111084, 0.109703, 0.108126, 0.108483, 0.111064, 0.111109, 0.111109, 0.111128, 0.111643, 0.109744, 0.108337, 0.108042, 0.108139, 0.111068, 0.111187, 0.111082, 0.111283, 0.111346, 0.111289, 0.10846, 0.108427, 0.108145, 0.110901, 0.111092, 0.111052, 0.111454, 0.111249, 0.111234], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 0, 6, 6, 6, 1, 1, 5, 23, 0, 6, 1, 0, 1, 1, 0, 1]': ([0.111238, 0.111474, 0.111084, 0.109703, 0.108126, 0.108483, 0.111064, 0.111109, 0.111109, 0.111128, 0.111643, 0.109744, 0.108337, 0.108042, 0.108139, 0.111068, 0.111187, 0.111082, 0.111283, 0.111346, 0.111289, 0.10846, 0.108427, 0.108145, 0.110901, 0.111092, 0.111052, 0.111454, 0.111249, 0.111234], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = jjj
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	6
        Additions: 		389
        Multiplications: 	138
        Divisions: 		0
        Logical: 		0
        Reads: 			821
        Writes: 		98
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest20.exe __orio_perftest20.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest20.exe  
Program Test Output: 
{'[2, 4, 1, 3, 2, 5, 1, 0, 0, 0, 29, 28, 0, 0, 1, 0, 0, 0]' : 0.288927}
{'[2, 4, 1, 3, 2, 5, 1, 0, 0, 0, 29, 28, 0, 0, 1, 0, 0, 0]' : 0.288119}
{'[2, 4, 1, 3, 2, 5, 1, 0, 0, 0, 29, 28, 0, 0, 1, 0, 0, 0]' : 0.257817}
{'[2, 4, 1, 3, 2, 5, 1, 0, 0, 0, 29, 28, 0, 0, 1, 0, 0, 0]' : 0.256525}
{'[2, 4, 1, 3, 2, 5, 1, 0, 0, 0, 29, 28, 0, 0, 1, 0, 0, 0]' : 0.250562}
{'[2, 4, 1, 3, 2, 5, 1, 0, 0, 0, 29, 28, 0, 0, 1, 0, 0, 0]' : 0.257483}
{'[2, 4, 1, 3, 2, 5, 1, 0, 0, 0, 29, 28, 0, 0, 1, 0, 0, 0]' : 0.257518}
{'[2, 4, 1, 3, 2, 5, 1, 0, 0, 0, 29, 28, 0, 0, 1, 0, 0, 0]' : 0.25246}
{'[2, 4, 1, 3, 2, 5, 1, 0, 0, 0, 29, 28, 0, 0, 1, 0, 0, 0]' : 0.249893}
{'[2, 4, 1, 3, 2, 5, 1, 0, 0, 0, 29, 28, 0, 0, 1, 0, 0, 0]' : 0.249825}
{'[2, 4, 1, 3, 2, 5, 1, 0, 0, 0, 29, 28, 0, 0, 1, 0, 0, 0]' : 0.250743}
{'[2, 4, 1, 3, 2, 5, 1, 0, 0, 0, 29, 28, 0, 0, 1, 0, 0, 0]' : 0.249796}
{'[2, 4, 1, 3, 2, 5, 1, 0, 0, 0, 29, 28, 0, 0, 1, 0, 0, 0]' : 0.250114}
{'[2, 4, 1, 3, 2, 5, 1, 0, 0, 0, 29, 28, 0, 0, 1, 0, 0, 0]' : 0.249686}
{'[2, 4, 1, 3, 2, 5, 1, 0, 0, 0, 29, 28, 0, 0, 1, 0, 0, 0]' : 0.248388}
{'[2, 4, 1, 3, 2, 5, 1, 0, 0, 0, 29, 28, 0, 0, 1, 0, 0, 0]' : 0.252371}
{'[2, 4, 1, 3, 2, 5, 1, 0, 0, 0, 29, 28, 0, 0, 1, 0, 0, 0]' : 0.250542}
{'[2, 4, 1, 3, 2, 5, 1, 0, 0, 0, 29, 28, 0, 0, 1, 0, 0, 0]' : 0.251697}
{'[2, 4, 1, 3, 2, 5, 1, 0, 0, 0, 29, 28, 0, 0, 1, 0, 0, 0]' : 0.251381}
{'[2, 4, 1, 3, 2, 5, 1, 0, 0, 0, 29, 28, 0, 0, 1, 0, 0, 0]' : 0.252739}
{'[2, 4, 1, 3, 2, 5, 1, 0, 0, 0, 29, 28, 0, 0, 1, 0, 0, 0]' : 0.250549}
{'[2, 4, 1, 3, 2, 5, 1, 0, 0, 0, 29, 28, 0, 0, 1, 0, 0, 0]' : 0.250148}
{'[2, 4, 1, 3, 2, 5, 1, 0, 0, 0, 29, 28, 0, 0, 1, 0, 0, 0]' : 0.249885}
{'[2, 4, 1, 3, 2, 5, 1, 0, 0, 0, 29, 28, 0, 0, 1, 0, 0, 0]' : 0.251184}
{'[2, 4, 1, 3, 2, 5, 1, 0, 0, 0, 29, 28, 0, 0, 1, 0, 0, 0]' : 0.251587}
{'[2, 4, 1, 3, 2, 5, 1, 0, 0, 0, 29, 28, 0, 0, 1, 0, 0, 0]' : 0.257445}
{'[2, 4, 1, 3, 2, 5, 1, 0, 0, 0, 29, 28, 0, 0, 1, 0, 0, 0]' : 0.25557}
{'[2, 4, 1, 3, 2, 5, 1, 0, 0, 0, 29, 28, 0, 0, 1, 0, 0, 0]' : 0.249698}
{'[2, 4, 1, 3, 2, 5, 1, 0, 0, 0, 29, 28, 0, 0, 1, 0, 0, 0]' : 0.250063}
{'[2, 4, 1, 3, 2, 5, 1, 0, 0, 0, 29, 28, 0, 0, 1, 0, 0, 0]' : 0.249978}

out:
 ["{'[2, 4, 1, 3, 2, 5, 1, 0, 0, 0, 29, 28, 0, 0, 1, 0, 0, 0]' : 0.288927}", "{'[2, 4, 1, 3, 2, 5, 1, 0, 0, 0, 29, 28, 0, 0, 1, 0, 0, 0]' : 0.288119}", "{'[2, 4, 1, 3, 2, 5, 1, 0, 0, 0, 29, 28, 0, 0, 1, 0, 0, 0]' : 0.257817}", "{'[2, 4, 1, 3, 2, 5, 1, 0, 0, 0, 29, 28, 0, 0, 1, 0, 0, 0]' : 0.256525}", "{'[2, 4, 1, 3, 2, 5, 1, 0, 0, 0, 29, 28, 0, 0, 1, 0, 0, 0]' : 0.250562}", "{'[2, 4, 1, 3, 2, 5, 1, 0, 0, 0, 29, 28, 0, 0, 1, 0, 0, 0]' : 0.257483}", "{'[2, 4, 1, 3, 2, 5, 1, 0, 0, 0, 29, 28, 0, 0, 1, 0, 0, 0]' : 0.257518}", "{'[2, 4, 1, 3, 2, 5, 1, 0, 0, 0, 29, 28, 0, 0, 1, 0, 0, 0]' : 0.25246}", "{'[2, 4, 1, 3, 2, 5, 1, 0, 0, 0, 29, 28, 0, 0, 1, 0, 0, 0]' : 0.249893}", "{'[2, 4, 1, 3, 2, 5, 1, 0, 0, 0, 29, 28, 0, 0, 1, 0, 0, 0]' : 0.249825}", "{'[2, 4, 1, 3, 2, 5, 1, 0, 0, 0, 29, 28, 0, 0, 1, 0, 0, 0]' : 0.250743}", "{'[2, 4, 1, 3, 2, 5, 1, 0, 0, 0, 29, 28, 0, 0, 1, 0, 0, 0]' : 0.249796}", "{'[2, 4, 1, 3, 2, 5, 1, 0, 0, 0, 29, 28, 0, 0, 1, 0, 0, 0]' : 0.250114}", "{'[2, 4, 1, 3, 2, 5, 1, 0, 0, 0, 29, 28, 0, 0, 1, 0, 0, 0]' : 0.249686}", "{'[2, 4, 1, 3, 2, 5, 1, 0, 0, 0, 29, 28, 0, 0, 1, 0, 0, 0]' : 0.248388}", "{'[2, 4, 1, 3, 2, 5, 1, 0, 0, 0, 29, 28, 0, 0, 1, 0, 0, 0]' : 0.252371}", "{'[2, 4, 1, 3, 2, 5, 1, 0, 0, 0, 29, 28, 0, 0, 1, 0, 0, 0]' : 0.250542}", "{'[2, 4, 1, 3, 2, 5, 1, 0, 0, 0, 29, 28, 0, 0, 1, 0, 0, 0]' : 0.251697}", "{'[2, 4, 1, 3, 2, 5, 1, 0, 0, 0, 29, 28, 0, 0, 1, 0, 0, 0]' : 0.251381}", "{'[2, 4, 1, 3, 2, 5, 1, 0, 0, 0, 29, 28, 0, 0, 1, 0, 0, 0]' : 0.252739}", "{'[2, 4, 1, 3, 2, 5, 1, 0, 0, 0, 29, 28, 0, 0, 1, 0, 0, 0]' : 0.250549}", "{'[2, 4, 1, 3, 2, 5, 1, 0, 0, 0, 29, 28, 0, 0, 1, 0, 0, 0]' : 0.250148}", "{'[2, 4, 1, 3, 2, 5, 1, 0, 0, 0, 29, 28, 0, 0, 1, 0, 0, 0]' : 0.249885}", "{'[2, 4, 1, 3, 2, 5, 1, 0, 0, 0, 29, 28, 0, 0, 1, 0, 0, 0]' : 0.251184}", "{'[2, 4, 1, 3, 2, 5, 1, 0, 0, 0, 29, 28, 0, 0, 1, 0, 0, 0]' : 0.251587}", "{'[2, 4, 1, 3, 2, 5, 1, 0, 0, 0, 29, 28, 0, 0, 1, 0, 0, 0]' : 0.257445}", "{'[2, 4, 1, 3, 2, 5, 1, 0, 0, 0, 29, 28, 0, 0, 1, 0, 0, 0]' : 0.25557}", "{'[2, 4, 1, 3, 2, 5, 1, 0, 0, 0, 29, 28, 0, 0, 1, 0, 0, 0]' : 0.249698}", "{'[2, 4, 1, 3, 2, 5, 1, 0, 0, 0, 29, 28, 0, 0, 1, 0, 0, 0]' : 0.250063}", "{'[2, 4, 1, 3, 2, 5, 1, 0, 0, 0, 29, 28, 0, 0, 1, 0, 0, 0]' : 0.249978}"]
returning from 'run': {'[2, 4, 1, 3, 2, 5, 1, 0, 0, 0, 29, 28, 0, 0, 1, 0, 0, 0]': ([0.288927, 0.288119, 0.257817, 0.256525, 0.250562, 0.257483, 0.257518, 0.25246, 0.249893, 0.249825, 0.250743, 0.249796, 0.250114, 0.249686, 0.248388, 0.252371, 0.250542, 0.251697, 0.251381, 0.252739, 0.250549, 0.250148, 0.249885, 0.251184, 0.251587, 0.257445, 0.25557, 0.249698, 0.250063, 0.249978], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 4, 1, 3, 2, 5, 1, 0, 0, 0, 29, 28, 0, 0, 1, 0, 0, 0]': ([0.288927, 0.288119, 0.257817, 0.256525, 0.250562, 0.257483, 0.257518, 0.25246, 0.249893, 0.249825, 0.250743, 0.249796, 0.250114, 0.249686, 0.248388, 0.252371, 0.250542, 0.251697, 0.251381, 0.252739, 0.250549, 0.250148, 0.249885, 0.251184, 0.251587, 0.257445, 0.25557, 0.249698, 0.250063, 0.249978], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	42
        Max loop nest depth: 	4
        Additions: 		8589
        Multiplications: 	2268
        Divisions: 		0
        Logical: 		0
        Reads: 			12755
        Writes: 		1306
        Comparisons:		42
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest21.exe __orio_perftest21.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest21.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest21.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest21.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest21.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	92
        Max loop nest depth: 	6
        Additions: 		13943
        Multiplications: 	4032
        Divisions: 		0
        Logical: 		0
        Reads: 			21372
        Writes: 		2325
        Comparisons:		92
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest22.exe __orio_perftest22.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest22.exe  
Program Test Output: 
{'[4, 2, 4, 5, 6, 6, 0, 1, 27, 29, 29, 0, 2, 0, 0, 0, 0, 0]' : 0.307119}
{'[4, 2, 4, 5, 6, 6, 0, 1, 27, 29, 29, 0, 2, 0, 0, 0, 0, 0]' : 0.306365}
{'[4, 2, 4, 5, 6, 6, 0, 1, 27, 29, 29, 0, 2, 0, 0, 0, 0, 0]' : 0.298752}
{'[4, 2, 4, 5, 6, 6, 0, 1, 27, 29, 29, 0, 2, 0, 0, 0, 0, 0]' : 0.277803}
{'[4, 2, 4, 5, 6, 6, 0, 1, 27, 29, 29, 0, 2, 0, 0, 0, 0, 0]' : 0.276266}
{'[4, 2, 4, 5, 6, 6, 0, 1, 27, 29, 29, 0, 2, 0, 0, 0, 0, 0]' : 0.276573}
{'[4, 2, 4, 5, 6, 6, 0, 1, 27, 29, 29, 0, 2, 0, 0, 0, 0, 0]' : 0.277288}
{'[4, 2, 4, 5, 6, 6, 0, 1, 27, 29, 29, 0, 2, 0, 0, 0, 0, 0]' : 0.276793}
{'[4, 2, 4, 5, 6, 6, 0, 1, 27, 29, 29, 0, 2, 0, 0, 0, 0, 0]' : 0.276586}
{'[4, 2, 4, 5, 6, 6, 0, 1, 27, 29, 29, 0, 2, 0, 0, 0, 0, 0]' : 0.276401}
{'[4, 2, 4, 5, 6, 6, 0, 1, 27, 29, 29, 0, 2, 0, 0, 0, 0, 0]' : 0.276769}
{'[4, 2, 4, 5, 6, 6, 0, 1, 27, 29, 29, 0, 2, 0, 0, 0, 0, 0]' : 0.276981}
{'[4, 2, 4, 5, 6, 6, 0, 1, 27, 29, 29, 0, 2, 0, 0, 0, 0, 0]' : 0.27758}
{'[4, 2, 4, 5, 6, 6, 0, 1, 27, 29, 29, 0, 2, 0, 0, 0, 0, 0]' : 0.281728}
{'[4, 2, 4, 5, 6, 6, 0, 1, 27, 29, 29, 0, 2, 0, 0, 0, 0, 0]' : 0.279776}
{'[4, 2, 4, 5, 6, 6, 0, 1, 27, 29, 29, 0, 2, 0, 0, 0, 0, 0]' : 0.277113}
{'[4, 2, 4, 5, 6, 6, 0, 1, 27, 29, 29, 0, 2, 0, 0, 0, 0, 0]' : 0.276891}
{'[4, 2, 4, 5, 6, 6, 0, 1, 27, 29, 29, 0, 2, 0, 0, 0, 0, 0]' : 0.27645}
{'[4, 2, 4, 5, 6, 6, 0, 1, 27, 29, 29, 0, 2, 0, 0, 0, 0, 0]' : 0.27693}
{'[4, 2, 4, 5, 6, 6, 0, 1, 27, 29, 29, 0, 2, 0, 0, 0, 0, 0]' : 0.276727}
{'[4, 2, 4, 5, 6, 6, 0, 1, 27, 29, 29, 0, 2, 0, 0, 0, 0, 0]' : 0.281436}
{'[4, 2, 4, 5, 6, 6, 0, 1, 27, 29, 29, 0, 2, 0, 0, 0, 0, 0]' : 0.281277}
{'[4, 2, 4, 5, 6, 6, 0, 1, 27, 29, 29, 0, 2, 0, 0, 0, 0, 0]' : 0.276734}
{'[4, 2, 4, 5, 6, 6, 0, 1, 27, 29, 29, 0, 2, 0, 0, 0, 0, 0]' : 0.276905}
{'[4, 2, 4, 5, 6, 6, 0, 1, 27, 29, 29, 0, 2, 0, 0, 0, 0, 0]' : 0.276326}
{'[4, 2, 4, 5, 6, 6, 0, 1, 27, 29, 29, 0, 2, 0, 0, 0, 0, 0]' : 0.279574}
{'[4, 2, 4, 5, 6, 6, 0, 1, 27, 29, 29, 0, 2, 0, 0, 0, 0, 0]' : 0.280429}
{'[4, 2, 4, 5, 6, 6, 0, 1, 27, 29, 29, 0, 2, 0, 0, 0, 0, 0]' : 0.276703}
{'[4, 2, 4, 5, 6, 6, 0, 1, 27, 29, 29, 0, 2, 0, 0, 0, 0, 0]' : 0.27649}
{'[4, 2, 4, 5, 6, 6, 0, 1, 27, 29, 29, 0, 2, 0, 0, 0, 0, 0]' : 0.276842}

out:
 ["{'[4, 2, 4, 5, 6, 6, 0, 1, 27, 29, 29, 0, 2, 0, 0, 0, 0, 0]' : 0.307119}", "{'[4, 2, 4, 5, 6, 6, 0, 1, 27, 29, 29, 0, 2, 0, 0, 0, 0, 0]' : 0.306365}", "{'[4, 2, 4, 5, 6, 6, 0, 1, 27, 29, 29, 0, 2, 0, 0, 0, 0, 0]' : 0.298752}", "{'[4, 2, 4, 5, 6, 6, 0, 1, 27, 29, 29, 0, 2, 0, 0, 0, 0, 0]' : 0.277803}", "{'[4, 2, 4, 5, 6, 6, 0, 1, 27, 29, 29, 0, 2, 0, 0, 0, 0, 0]' : 0.276266}", "{'[4, 2, 4, 5, 6, 6, 0, 1, 27, 29, 29, 0, 2, 0, 0, 0, 0, 0]' : 0.276573}", "{'[4, 2, 4, 5, 6, 6, 0, 1, 27, 29, 29, 0, 2, 0, 0, 0, 0, 0]' : 0.277288}", "{'[4, 2, 4, 5, 6, 6, 0, 1, 27, 29, 29, 0, 2, 0, 0, 0, 0, 0]' : 0.276793}", "{'[4, 2, 4, 5, 6, 6, 0, 1, 27, 29, 29, 0, 2, 0, 0, 0, 0, 0]' : 0.276586}", "{'[4, 2, 4, 5, 6, 6, 0, 1, 27, 29, 29, 0, 2, 0, 0, 0, 0, 0]' : 0.276401}", "{'[4, 2, 4, 5, 6, 6, 0, 1, 27, 29, 29, 0, 2, 0, 0, 0, 0, 0]' : 0.276769}", "{'[4, 2, 4, 5, 6, 6, 0, 1, 27, 29, 29, 0, 2, 0, 0, 0, 0, 0]' : 0.276981}", "{'[4, 2, 4, 5, 6, 6, 0, 1, 27, 29, 29, 0, 2, 0, 0, 0, 0, 0]' : 0.27758}", "{'[4, 2, 4, 5, 6, 6, 0, 1, 27, 29, 29, 0, 2, 0, 0, 0, 0, 0]' : 0.281728}", "{'[4, 2, 4, 5, 6, 6, 0, 1, 27, 29, 29, 0, 2, 0, 0, 0, 0, 0]' : 0.279776}", "{'[4, 2, 4, 5, 6, 6, 0, 1, 27, 29, 29, 0, 2, 0, 0, 0, 0, 0]' : 0.277113}", "{'[4, 2, 4, 5, 6, 6, 0, 1, 27, 29, 29, 0, 2, 0, 0, 0, 0, 0]' : 0.276891}", "{'[4, 2, 4, 5, 6, 6, 0, 1, 27, 29, 29, 0, 2, 0, 0, 0, 0, 0]' : 0.27645}", "{'[4, 2, 4, 5, 6, 6, 0, 1, 27, 29, 29, 0, 2, 0, 0, 0, 0, 0]' : 0.27693}", "{'[4, 2, 4, 5, 6, 6, 0, 1, 27, 29, 29, 0, 2, 0, 0, 0, 0, 0]' : 0.276727}", "{'[4, 2, 4, 5, 6, 6, 0, 1, 27, 29, 29, 0, 2, 0, 0, 0, 0, 0]' : 0.281436}", "{'[4, 2, 4, 5, 6, 6, 0, 1, 27, 29, 29, 0, 2, 0, 0, 0, 0, 0]' : 0.281277}", "{'[4, 2, 4, 5, 6, 6, 0, 1, 27, 29, 29, 0, 2, 0, 0, 0, 0, 0]' : 0.276734}", "{'[4, 2, 4, 5, 6, 6, 0, 1, 27, 29, 29, 0, 2, 0, 0, 0, 0, 0]' : 0.276905}", "{'[4, 2, 4, 5, 6, 6, 0, 1, 27, 29, 29, 0, 2, 0, 0, 0, 0, 0]' : 0.276326}", "{'[4, 2, 4, 5, 6, 6, 0, 1, 27, 29, 29, 0, 2, 0, 0, 0, 0, 0]' : 0.279574}", "{'[4, 2, 4, 5, 6, 6, 0, 1, 27, 29, 29, 0, 2, 0, 0, 0, 0, 0]' : 0.280429}", "{'[4, 2, 4, 5, 6, 6, 0, 1, 27, 29, 29, 0, 2, 0, 0, 0, 0, 0]' : 0.276703}", "{'[4, 2, 4, 5, 6, 6, 0, 1, 27, 29, 29, 0, 2, 0, 0, 0, 0, 0]' : 0.27649}", "{'[4, 2, 4, 5, 6, 6, 0, 1, 27, 29, 29, 0, 2, 0, 0, 0, 0, 0]' : 0.276842}"]
returning from 'run': {'[4, 2, 4, 5, 6, 6, 0, 1, 27, 29, 29, 0, 2, 0, 0, 0, 0, 0]': ([0.307119, 0.306365, 0.298752, 0.277803, 0.276266, 0.276573, 0.277288, 0.276793, 0.276586, 0.276401, 0.276769, 0.276981, 0.27758, 0.281728, 0.279776, 0.277113, 0.276891, 0.27645, 0.27693, 0.276727, 0.281436, 0.281277, 0.276734, 0.276905, 0.276326, 0.279574, 0.280429, 0.276703, 0.27649, 0.276842], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 2, 4, 5, 6, 6, 0, 1, 27, 29, 29, 0, 2, 0, 0, 0, 0, 0]': ([0.307119, 0.306365, 0.298752, 0.277803, 0.276266, 0.276573, 0.277288, 0.276793, 0.276586, 0.276401, 0.276769, 0.276981, 0.27758, 0.281728, 0.279776, 0.277113, 0.276891, 0.27645, 0.27693, 0.276727, 0.281436, 0.281277, 0.276734, 0.276905, 0.276326, 0.279574, 0.280429, 0.276703, 0.27649, 0.276842], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	44
        Max loop nest depth: 	4
        Additions: 		4340
        Multiplications: 	2046
        Divisions: 		0
        Logical: 		0
        Reads: 			8083
        Writes: 		1294
        Comparisons:		44
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest23.exe __orio_perftest23.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest23.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest23.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest23.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest23.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	93
        Max loop nest depth: 	5
        Additions: 		7797
        Multiplications: 	2852
        Divisions: 		0
        Logical: 		0
        Reads: 			14849
        Writes: 		2687
        Comparisons:		93
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest24.exe __orio_perftest24.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest24.exe  
Program Test Output: 
{'[4, 5, 1, 0, 0, 2, 1, 1, 16, 12, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.195649}
{'[4, 5, 1, 0, 0, 2, 1, 1, 16, 12, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.195713}
{'[4, 5, 1, 0, 0, 2, 1, 1, 16, 12, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.181834}
{'[4, 5, 1, 0, 0, 2, 1, 1, 16, 12, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.175802}
{'[4, 5, 1, 0, 0, 2, 1, 1, 16, 12, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.175997}
{'[4, 5, 1, 0, 0, 2, 1, 1, 16, 12, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.176253}
{'[4, 5, 1, 0, 0, 2, 1, 1, 16, 12, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.175959}
{'[4, 5, 1, 0, 0, 2, 1, 1, 16, 12, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.176542}
{'[4, 5, 1, 0, 0, 2, 1, 1, 16, 12, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.176544}
{'[4, 5, 1, 0, 0, 2, 1, 1, 16, 12, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.176291}
{'[4, 5, 1, 0, 0, 2, 1, 1, 16, 12, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.176655}
{'[4, 5, 1, 0, 0, 2, 1, 1, 16, 12, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.17658}
{'[4, 5, 1, 0, 0, 2, 1, 1, 16, 12, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.176482}
{'[4, 5, 1, 0, 0, 2, 1, 1, 16, 12, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.176709}
{'[4, 5, 1, 0, 0, 2, 1, 1, 16, 12, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.176202}
{'[4, 5, 1, 0, 0, 2, 1, 1, 16, 12, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.17622}
{'[4, 5, 1, 0, 0, 2, 1, 1, 16, 12, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.176632}
{'[4, 5, 1, 0, 0, 2, 1, 1, 16, 12, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.17672}
{'[4, 5, 1, 0, 0, 2, 1, 1, 16, 12, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.176839}
{'[4, 5, 1, 0, 0, 2, 1, 1, 16, 12, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.176779}
{'[4, 5, 1, 0, 0, 2, 1, 1, 16, 12, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.176396}
{'[4, 5, 1, 0, 0, 2, 1, 1, 16, 12, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.176494}
{'[4, 5, 1, 0, 0, 2, 1, 1, 16, 12, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.176318}
{'[4, 5, 1, 0, 0, 2, 1, 1, 16, 12, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.176004}
{'[4, 5, 1, 0, 0, 2, 1, 1, 16, 12, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.176773}
{'[4, 5, 1, 0, 0, 2, 1, 1, 16, 12, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.17715}
{'[4, 5, 1, 0, 0, 2, 1, 1, 16, 12, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.176604}
{'[4, 5, 1, 0, 0, 2, 1, 1, 16, 12, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.178865}
{'[4, 5, 1, 0, 0, 2, 1, 1, 16, 12, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.179821}
{'[4, 5, 1, 0, 0, 2, 1, 1, 16, 12, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.180027}

out:
 ["{'[4, 5, 1, 0, 0, 2, 1, 1, 16, 12, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.195649}", "{'[4, 5, 1, 0, 0, 2, 1, 1, 16, 12, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.195713}", "{'[4, 5, 1, 0, 0, 2, 1, 1, 16, 12, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.181834}", "{'[4, 5, 1, 0, 0, 2, 1, 1, 16, 12, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.175802}", "{'[4, 5, 1, 0, 0, 2, 1, 1, 16, 12, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.175997}", "{'[4, 5, 1, 0, 0, 2, 1, 1, 16, 12, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.176253}", "{'[4, 5, 1, 0, 0, 2, 1, 1, 16, 12, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.175959}", "{'[4, 5, 1, 0, 0, 2, 1, 1, 16, 12, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.176542}", "{'[4, 5, 1, 0, 0, 2, 1, 1, 16, 12, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.176544}", "{'[4, 5, 1, 0, 0, 2, 1, 1, 16, 12, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.176291}", "{'[4, 5, 1, 0, 0, 2, 1, 1, 16, 12, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.176655}", "{'[4, 5, 1, 0, 0, 2, 1, 1, 16, 12, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.17658}", "{'[4, 5, 1, 0, 0, 2, 1, 1, 16, 12, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.176482}", "{'[4, 5, 1, 0, 0, 2, 1, 1, 16, 12, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.176709}", "{'[4, 5, 1, 0, 0, 2, 1, 1, 16, 12, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.176202}", "{'[4, 5, 1, 0, 0, 2, 1, 1, 16, 12, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.17622}", "{'[4, 5, 1, 0, 0, 2, 1, 1, 16, 12, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.176632}", "{'[4, 5, 1, 0, 0, 2, 1, 1, 16, 12, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.17672}", "{'[4, 5, 1, 0, 0, 2, 1, 1, 16, 12, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.176839}", "{'[4, 5, 1, 0, 0, 2, 1, 1, 16, 12, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.176779}", "{'[4, 5, 1, 0, 0, 2, 1, 1, 16, 12, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.176396}", "{'[4, 5, 1, 0, 0, 2, 1, 1, 16, 12, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.176494}", "{'[4, 5, 1, 0, 0, 2, 1, 1, 16, 12, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.176318}", "{'[4, 5, 1, 0, 0, 2, 1, 1, 16, 12, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.176004}", "{'[4, 5, 1, 0, 0, 2, 1, 1, 16, 12, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.176773}", "{'[4, 5, 1, 0, 0, 2, 1, 1, 16, 12, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.17715}", "{'[4, 5, 1, 0, 0, 2, 1, 1, 16, 12, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.176604}", "{'[4, 5, 1, 0, 0, 2, 1, 1, 16, 12, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.178865}", "{'[4, 5, 1, 0, 0, 2, 1, 1, 16, 12, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.179821}", "{'[4, 5, 1, 0, 0, 2, 1, 1, 16, 12, 0, 28, 2, 0, 0, 1, 1, 0]' : 0.180027}"]
returning from 'run': {'[4, 5, 1, 0, 0, 2, 1, 1, 16, 12, 0, 28, 2, 0, 0, 1, 1, 0]': ([0.195649, 0.195713, 0.181834, 0.175802, 0.175997, 0.176253, 0.175959, 0.176542, 0.176544, 0.176291, 0.176655, 0.17658, 0.176482, 0.176709, 0.176202, 0.17622, 0.176632, 0.17672, 0.176839, 0.176779, 0.176396, 0.176494, 0.176318, 0.176004, 0.176773, 0.17715, 0.176604, 0.178865, 0.179821, 0.180027], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 5, 1, 0, 0, 2, 1, 1, 16, 12, 0, 28, 2, 0, 0, 1, 1, 0]': ([0.195649, 0.195713, 0.181834, 0.175802, 0.175997, 0.176253, 0.175959, 0.176542, 0.176544, 0.176291, 0.176655, 0.17658, 0.176482, 0.176709, 0.176202, 0.17622, 0.176632, 0.17672, 0.176839, 0.176779, 0.176396, 0.176494, 0.176318, 0.176004, 0.176773, 0.17715, 0.176604, 0.178865, 0.179821, 0.180027], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	5
        Additions: 		151
        Multiplications: 	50
        Divisions: 		0
        Logical: 		0
        Reads: 			353
        Writes: 		78
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest25.exe __orio_perftest25.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest25.exe  
Program Test Output: 
{'[5, 1, 0, 4, 0, 1, 0, 0, 0, 0, 2, 11, 0, 1, 0, 1, 1, 0]' : 0.18975}
{'[5, 1, 0, 4, 0, 1, 0, 0, 0, 0, 2, 11, 0, 1, 0, 1, 1, 0]' : 0.173759}
{'[5, 1, 0, 4, 0, 1, 0, 0, 0, 0, 2, 11, 0, 1, 0, 1, 1, 0]' : 0.157752}
{'[5, 1, 0, 4, 0, 1, 0, 0, 0, 0, 2, 11, 0, 1, 0, 1, 1, 0]' : 0.157706}
{'[5, 1, 0, 4, 0, 1, 0, 0, 0, 0, 2, 11, 0, 1, 0, 1, 1, 0]' : 0.157676}
{'[5, 1, 0, 4, 0, 1, 0, 0, 0, 0, 2, 11, 0, 1, 0, 1, 1, 0]' : 0.157687}
{'[5, 1, 0, 4, 0, 1, 0, 0, 0, 0, 2, 11, 0, 1, 0, 1, 1, 0]' : 0.157673}
{'[5, 1, 0, 4, 0, 1, 0, 0, 0, 0, 2, 11, 0, 1, 0, 1, 1, 0]' : 0.157876}
{'[5, 1, 0, 4, 0, 1, 0, 0, 0, 0, 2, 11, 0, 1, 0, 1, 1, 0]' : 0.15768}
{'[5, 1, 0, 4, 0, 1, 0, 0, 0, 0, 2, 11, 0, 1, 0, 1, 1, 0]' : 0.157701}
{'[5, 1, 0, 4, 0, 1, 0, 0, 0, 0, 2, 11, 0, 1, 0, 1, 1, 0]' : 0.157856}
{'[5, 1, 0, 4, 0, 1, 0, 0, 0, 0, 2, 11, 0, 1, 0, 1, 1, 0]' : 0.15774}
{'[5, 1, 0, 4, 0, 1, 0, 0, 0, 0, 2, 11, 0, 1, 0, 1, 1, 0]' : 0.157948}
{'[5, 1, 0, 4, 0, 1, 0, 0, 0, 0, 2, 11, 0, 1, 0, 1, 1, 0]' : 0.157661}
{'[5, 1, 0, 4, 0, 1, 0, 0, 0, 0, 2, 11, 0, 1, 0, 1, 1, 0]' : 0.157637}
{'[5, 1, 0, 4, 0, 1, 0, 0, 0, 0, 2, 11, 0, 1, 0, 1, 1, 0]' : 0.157653}
{'[5, 1, 0, 4, 0, 1, 0, 0, 0, 0, 2, 11, 0, 1, 0, 1, 1, 0]' : 0.157692}
{'[5, 1, 0, 4, 0, 1, 0, 0, 0, 0, 2, 11, 0, 1, 0, 1, 1, 0]' : 0.157715}
{'[5, 1, 0, 4, 0, 1, 0, 0, 0, 0, 2, 11, 0, 1, 0, 1, 1, 0]' : 0.157745}
{'[5, 1, 0, 4, 0, 1, 0, 0, 0, 0, 2, 11, 0, 1, 0, 1, 1, 0]' : 0.15772}
{'[5, 1, 0, 4, 0, 1, 0, 0, 0, 0, 2, 11, 0, 1, 0, 1, 1, 0]' : 0.157645}
{'[5, 1, 0, 4, 0, 1, 0, 0, 0, 0, 2, 11, 0, 1, 0, 1, 1, 0]' : 0.157679}
{'[5, 1, 0, 4, 0, 1, 0, 0, 0, 0, 2, 11, 0, 1, 0, 1, 1, 0]' : 0.158002}
{'[5, 1, 0, 4, 0, 1, 0, 0, 0, 0, 2, 11, 0, 1, 0, 1, 1, 0]' : 0.157666}
{'[5, 1, 0, 4, 0, 1, 0, 0, 0, 0, 2, 11, 0, 1, 0, 1, 1, 0]' : 0.157698}
{'[5, 1, 0, 4, 0, 1, 0, 0, 0, 0, 2, 11, 0, 1, 0, 1, 1, 0]' : 0.157706}
{'[5, 1, 0, 4, 0, 1, 0, 0, 0, 0, 2, 11, 0, 1, 0, 1, 1, 0]' : 0.157695}
{'[5, 1, 0, 4, 0, 1, 0, 0, 0, 0, 2, 11, 0, 1, 0, 1, 1, 0]' : 0.157843}
{'[5, 1, 0, 4, 0, 1, 0, 0, 0, 0, 2, 11, 0, 1, 0, 1, 1, 0]' : 0.157643}
{'[5, 1, 0, 4, 0, 1, 0, 0, 0, 0, 2, 11, 0, 1, 0, 1, 1, 0]' : 0.157733}

out:
 ["{'[5, 1, 0, 4, 0, 1, 0, 0, 0, 0, 2, 11, 0, 1, 0, 1, 1, 0]' : 0.18975}", "{'[5, 1, 0, 4, 0, 1, 0, 0, 0, 0, 2, 11, 0, 1, 0, 1, 1, 0]' : 0.173759}", "{'[5, 1, 0, 4, 0, 1, 0, 0, 0, 0, 2, 11, 0, 1, 0, 1, 1, 0]' : 0.157752}", "{'[5, 1, 0, 4, 0, 1, 0, 0, 0, 0, 2, 11, 0, 1, 0, 1, 1, 0]' : 0.157706}", "{'[5, 1, 0, 4, 0, 1, 0, 0, 0, 0, 2, 11, 0, 1, 0, 1, 1, 0]' : 0.157676}", "{'[5, 1, 0, 4, 0, 1, 0, 0, 0, 0, 2, 11, 0, 1, 0, 1, 1, 0]' : 0.157687}", "{'[5, 1, 0, 4, 0, 1, 0, 0, 0, 0, 2, 11, 0, 1, 0, 1, 1, 0]' : 0.157673}", "{'[5, 1, 0, 4, 0, 1, 0, 0, 0, 0, 2, 11, 0, 1, 0, 1, 1, 0]' : 0.157876}", "{'[5, 1, 0, 4, 0, 1, 0, 0, 0, 0, 2, 11, 0, 1, 0, 1, 1, 0]' : 0.15768}", "{'[5, 1, 0, 4, 0, 1, 0, 0, 0, 0, 2, 11, 0, 1, 0, 1, 1, 0]' : 0.157701}", "{'[5, 1, 0, 4, 0, 1, 0, 0, 0, 0, 2, 11, 0, 1, 0, 1, 1, 0]' : 0.157856}", "{'[5, 1, 0, 4, 0, 1, 0, 0, 0, 0, 2, 11, 0, 1, 0, 1, 1, 0]' : 0.15774}", "{'[5, 1, 0, 4, 0, 1, 0, 0, 0, 0, 2, 11, 0, 1, 0, 1, 1, 0]' : 0.157948}", "{'[5, 1, 0, 4, 0, 1, 0, 0, 0, 0, 2, 11, 0, 1, 0, 1, 1, 0]' : 0.157661}", "{'[5, 1, 0, 4, 0, 1, 0, 0, 0, 0, 2, 11, 0, 1, 0, 1, 1, 0]' : 0.157637}", "{'[5, 1, 0, 4, 0, 1, 0, 0, 0, 0, 2, 11, 0, 1, 0, 1, 1, 0]' : 0.157653}", "{'[5, 1, 0, 4, 0, 1, 0, 0, 0, 0, 2, 11, 0, 1, 0, 1, 1, 0]' : 0.157692}", "{'[5, 1, 0, 4, 0, 1, 0, 0, 0, 0, 2, 11, 0, 1, 0, 1, 1, 0]' : 0.157715}", "{'[5, 1, 0, 4, 0, 1, 0, 0, 0, 0, 2, 11, 0, 1, 0, 1, 1, 0]' : 0.157745}", "{'[5, 1, 0, 4, 0, 1, 0, 0, 0, 0, 2, 11, 0, 1, 0, 1, 1, 0]' : 0.15772}", "{'[5, 1, 0, 4, 0, 1, 0, 0, 0, 0, 2, 11, 0, 1, 0, 1, 1, 0]' : 0.157645}", "{'[5, 1, 0, 4, 0, 1, 0, 0, 0, 0, 2, 11, 0, 1, 0, 1, 1, 0]' : 0.157679}", "{'[5, 1, 0, 4, 0, 1, 0, 0, 0, 0, 2, 11, 0, 1, 0, 1, 1, 0]' : 0.158002}", "{'[5, 1, 0, 4, 0, 1, 0, 0, 0, 0, 2, 11, 0, 1, 0, 1, 1, 0]' : 0.157666}", "{'[5, 1, 0, 4, 0, 1, 0, 0, 0, 0, 2, 11, 0, 1, 0, 1, 1, 0]' : 0.157698}", "{'[5, 1, 0, 4, 0, 1, 0, 0, 0, 0, 2, 11, 0, 1, 0, 1, 1, 0]' : 0.157706}", "{'[5, 1, 0, 4, 0, 1, 0, 0, 0, 0, 2, 11, 0, 1, 0, 1, 1, 0]' : 0.157695}", "{'[5, 1, 0, 4, 0, 1, 0, 0, 0, 0, 2, 11, 0, 1, 0, 1, 1, 0]' : 0.157843}", "{'[5, 1, 0, 4, 0, 1, 0, 0, 0, 0, 2, 11, 0, 1, 0, 1, 1, 0]' : 0.157643}", "{'[5, 1, 0, 4, 0, 1, 0, 0, 0, 0, 2, 11, 0, 1, 0, 1, 1, 0]' : 0.157733}"]
returning from 'run': {'[5, 1, 0, 4, 0, 1, 0, 0, 0, 0, 2, 11, 0, 1, 0, 1, 1, 0]': ([0.18975, 0.173759, 0.157752, 0.157706, 0.157676, 0.157687, 0.157673, 0.157876, 0.15768, 0.157701, 0.157856, 0.15774, 0.157948, 0.157661, 0.157637, 0.157653, 0.157692, 0.157715, 0.157745, 0.15772, 0.157645, 0.157679, 0.158002, 0.157666, 0.157698, 0.157706, 0.157695, 0.157843, 0.157643, 0.157733], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 1, 0, 4, 0, 1, 0, 0, 0, 0, 2, 11, 0, 1, 0, 1, 1, 0]': ([0.18975, 0.173759, 0.157752, 0.157706, 0.157676, 0.157687, 0.157673, 0.157876, 0.15768, 0.157701, 0.157856, 0.15774, 0.157948, 0.157661, 0.157637, 0.157653, 0.157692, 0.157715, 0.157745, 0.15772, 0.157645, 0.157679, 0.158002, 0.157666, 0.157698, 0.157706, 0.157695, 0.157843, 0.157643, 0.157733], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	33
        Max loop nest depth: 	5
        Additions: 		596
        Multiplications: 	110
        Divisions: 		0
        Logical: 		0
        Reads: 			1049
        Writes: 		184
        Comparisons:		33
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest26.exe __orio_perftest26.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest26.exe  
Program Test Output: 
{'[0, 2, 1, 2, 0, 5, 0, 1, 29, 3, 0, 8, 0, 0, 0, 0, 0, 1]' : 0.309261}
{'[0, 2, 1, 2, 0, 5, 0, 1, 29, 3, 0, 8, 0, 0, 0, 0, 0, 1]' : 0.288632}
{'[0, 2, 1, 2, 0, 5, 0, 1, 29, 3, 0, 8, 0, 0, 0, 0, 0, 1]' : 0.281191}
{'[0, 2, 1, 2, 0, 5, 0, 1, 29, 3, 0, 8, 0, 0, 0, 0, 0, 1]' : 0.283158}
{'[0, 2, 1, 2, 0, 5, 0, 1, 29, 3, 0, 8, 0, 0, 0, 0, 0, 1]' : 0.281153}
{'[0, 2, 1, 2, 0, 5, 0, 1, 29, 3, 0, 8, 0, 0, 0, 0, 0, 1]' : 0.288916}
{'[0, 2, 1, 2, 0, 5, 0, 1, 29, 3, 0, 8, 0, 0, 0, 0, 0, 1]' : 0.2841}
{'[0, 2, 1, 2, 0, 5, 0, 1, 29, 3, 0, 8, 0, 0, 0, 0, 0, 1]' : 0.286993}
{'[0, 2, 1, 2, 0, 5, 0, 1, 29, 3, 0, 8, 0, 0, 0, 0, 0, 1]' : 0.28561}
{'[0, 2, 1, 2, 0, 5, 0, 1, 29, 3, 0, 8, 0, 0, 0, 0, 0, 1]' : 0.288028}
{'[0, 2, 1, 2, 0, 5, 0, 1, 29, 3, 0, 8, 0, 0, 0, 0, 0, 1]' : 0.281474}
{'[0, 2, 1, 2, 0, 5, 0, 1, 29, 3, 0, 8, 0, 0, 0, 0, 0, 1]' : 0.281027}
{'[0, 2, 1, 2, 0, 5, 0, 1, 29, 3, 0, 8, 0, 0, 0, 0, 0, 1]' : 0.289363}
{'[0, 2, 1, 2, 0, 5, 0, 1, 29, 3, 0, 8, 0, 0, 0, 0, 0, 1]' : 0.286116}
{'[0, 2, 1, 2, 0, 5, 0, 1, 29, 3, 0, 8, 0, 0, 0, 0, 0, 1]' : 0.27336}
{'[0, 2, 1, 2, 0, 5, 0, 1, 29, 3, 0, 8, 0, 0, 0, 0, 0, 1]' : 0.2775}
{'[0, 2, 1, 2, 0, 5, 0, 1, 29, 3, 0, 8, 0, 0, 0, 0, 0, 1]' : 0.281349}
{'[0, 2, 1, 2, 0, 5, 0, 1, 29, 3, 0, 8, 0, 0, 0, 0, 0, 1]' : 0.281698}
{'[0, 2, 1, 2, 0, 5, 0, 1, 29, 3, 0, 8, 0, 0, 0, 0, 0, 1]' : 0.280637}
{'[0, 2, 1, 2, 0, 5, 0, 1, 29, 3, 0, 8, 0, 0, 0, 0, 0, 1]' : 0.288763}
{'[0, 2, 1, 2, 0, 5, 0, 1, 29, 3, 0, 8, 0, 0, 0, 0, 0, 1]' : 0.288084}
{'[0, 2, 1, 2, 0, 5, 0, 1, 29, 3, 0, 8, 0, 0, 0, 0, 0, 1]' : 0.274507}
{'[0, 2, 1, 2, 0, 5, 0, 1, 29, 3, 0, 8, 0, 0, 0, 0, 0, 1]' : 0.279934}
{'[0, 2, 1, 2, 0, 5, 0, 1, 29, 3, 0, 8, 0, 0, 0, 0, 0, 1]' : 0.287874}
{'[0, 2, 1, 2, 0, 5, 0, 1, 29, 3, 0, 8, 0, 0, 0, 0, 0, 1]' : 0.2844}
{'[0, 2, 1, 2, 0, 5, 0, 1, 29, 3, 0, 8, 0, 0, 0, 0, 0, 1]' : 0.281095}
{'[0, 2, 1, 2, 0, 5, 0, 1, 29, 3, 0, 8, 0, 0, 0, 0, 0, 1]' : 0.288487}
{'[0, 2, 1, 2, 0, 5, 0, 1, 29, 3, 0, 8, 0, 0, 0, 0, 0, 1]' : 0.289009}
{'[0, 2, 1, 2, 0, 5, 0, 1, 29, 3, 0, 8, 0, 0, 0, 0, 0, 1]' : 0.282396}
{'[0, 2, 1, 2, 0, 5, 0, 1, 29, 3, 0, 8, 0, 0, 0, 0, 0, 1]' : 0.281589}

out:
 ["{'[0, 2, 1, 2, 0, 5, 0, 1, 29, 3, 0, 8, 0, 0, 0, 0, 0, 1]' : 0.309261}", "{'[0, 2, 1, 2, 0, 5, 0, 1, 29, 3, 0, 8, 0, 0, 0, 0, 0, 1]' : 0.288632}", "{'[0, 2, 1, 2, 0, 5, 0, 1, 29, 3, 0, 8, 0, 0, 0, 0, 0, 1]' : 0.281191}", "{'[0, 2, 1, 2, 0, 5, 0, 1, 29, 3, 0, 8, 0, 0, 0, 0, 0, 1]' : 0.283158}", "{'[0, 2, 1, 2, 0, 5, 0, 1, 29, 3, 0, 8, 0, 0, 0, 0, 0, 1]' : 0.281153}", "{'[0, 2, 1, 2, 0, 5, 0, 1, 29, 3, 0, 8, 0, 0, 0, 0, 0, 1]' : 0.288916}", "{'[0, 2, 1, 2, 0, 5, 0, 1, 29, 3, 0, 8, 0, 0, 0, 0, 0, 1]' : 0.2841}", "{'[0, 2, 1, 2, 0, 5, 0, 1, 29, 3, 0, 8, 0, 0, 0, 0, 0, 1]' : 0.286993}", "{'[0, 2, 1, 2, 0, 5, 0, 1, 29, 3, 0, 8, 0, 0, 0, 0, 0, 1]' : 0.28561}", "{'[0, 2, 1, 2, 0, 5, 0, 1, 29, 3, 0, 8, 0, 0, 0, 0, 0, 1]' : 0.288028}", "{'[0, 2, 1, 2, 0, 5, 0, 1, 29, 3, 0, 8, 0, 0, 0, 0, 0, 1]' : 0.281474}", "{'[0, 2, 1, 2, 0, 5, 0, 1, 29, 3, 0, 8, 0, 0, 0, 0, 0, 1]' : 0.281027}", "{'[0, 2, 1, 2, 0, 5, 0, 1, 29, 3, 0, 8, 0, 0, 0, 0, 0, 1]' : 0.289363}", "{'[0, 2, 1, 2, 0, 5, 0, 1, 29, 3, 0, 8, 0, 0, 0, 0, 0, 1]' : 0.286116}", "{'[0, 2, 1, 2, 0, 5, 0, 1, 29, 3, 0, 8, 0, 0, 0, 0, 0, 1]' : 0.27336}", "{'[0, 2, 1, 2, 0, 5, 0, 1, 29, 3, 0, 8, 0, 0, 0, 0, 0, 1]' : 0.2775}", "{'[0, 2, 1, 2, 0, 5, 0, 1, 29, 3, 0, 8, 0, 0, 0, 0, 0, 1]' : 0.281349}", "{'[0, 2, 1, 2, 0, 5, 0, 1, 29, 3, 0, 8, 0, 0, 0, 0, 0, 1]' : 0.281698}", "{'[0, 2, 1, 2, 0, 5, 0, 1, 29, 3, 0, 8, 0, 0, 0, 0, 0, 1]' : 0.280637}", "{'[0, 2, 1, 2, 0, 5, 0, 1, 29, 3, 0, 8, 0, 0, 0, 0, 0, 1]' : 0.288763}", "{'[0, 2, 1, 2, 0, 5, 0, 1, 29, 3, 0, 8, 0, 0, 0, 0, 0, 1]' : 0.288084}", "{'[0, 2, 1, 2, 0, 5, 0, 1, 29, 3, 0, 8, 0, 0, 0, 0, 0, 1]' : 0.274507}", "{'[0, 2, 1, 2, 0, 5, 0, 1, 29, 3, 0, 8, 0, 0, 0, 0, 0, 1]' : 0.279934}", "{'[0, 2, 1, 2, 0, 5, 0, 1, 29, 3, 0, 8, 0, 0, 0, 0, 0, 1]' : 0.287874}", "{'[0, 2, 1, 2, 0, 5, 0, 1, 29, 3, 0, 8, 0, 0, 0, 0, 0, 1]' : 0.2844}", "{'[0, 2, 1, 2, 0, 5, 0, 1, 29, 3, 0, 8, 0, 0, 0, 0, 0, 1]' : 0.281095}", "{'[0, 2, 1, 2, 0, 5, 0, 1, 29, 3, 0, 8, 0, 0, 0, 0, 0, 1]' : 0.288487}", "{'[0, 2, 1, 2, 0, 5, 0, 1, 29, 3, 0, 8, 0, 0, 0, 0, 0, 1]' : 0.289009}", "{'[0, 2, 1, 2, 0, 5, 0, 1, 29, 3, 0, 8, 0, 0, 0, 0, 0, 1]' : 0.282396}", "{'[0, 2, 1, 2, 0, 5, 0, 1, 29, 3, 0, 8, 0, 0, 0, 0, 0, 1]' : 0.281589}"]
returning from 'run': {'[0, 2, 1, 2, 0, 5, 0, 1, 29, 3, 0, 8, 0, 0, 0, 0, 0, 1]': ([0.309261, 0.288632, 0.281191, 0.283158, 0.281153, 0.288916, 0.2841, 0.286993, 0.28561, 0.288028, 0.281474, 0.281027, 0.289363, 0.286116, 0.27336, 0.2775, 0.281349, 0.281698, 0.280637, 0.288763, 0.288084, 0.274507, 0.279934, 0.287874, 0.2844, 0.281095, 0.288487, 0.289009, 0.282396, 0.281589], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 1, 2, 0, 5, 0, 1, 29, 3, 0, 8, 0, 0, 0, 0, 0, 1]': ([0.309261, 0.288632, 0.281191, 0.283158, 0.281153, 0.288916, 0.2841, 0.286993, 0.28561, 0.288028, 0.281474, 0.281027, 0.289363, 0.286116, 0.27336, 0.2775, 0.281349, 0.281698, 0.280637, 0.288763, 0.288084, 0.274507, 0.279934, 0.287874, 0.2844, 0.281095, 0.288487, 0.289009, 0.282396, 0.281589], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		309
        Multiplications: 	78
        Divisions: 		0
        Logical: 		0
        Reads: 			588
        Writes: 		79
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest27.exe __orio_perftest27.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest27.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest27.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest27.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest27.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		196
        Multiplications: 	62
        Divisions: 		0
        Logical: 		0
        Reads: 			442
        Writes: 		67
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest28.exe __orio_perftest28.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest28.exe  
Program Test Output: 
{'[2, 5, 2, 2, 0, 1, 0, 1, 3, 0, 13, 3, 0, 1, 1, 0, 0, 0]' : 0.333658}
{'[2, 5, 2, 2, 0, 1, 0, 1, 3, 0, 13, 3, 0, 1, 1, 0, 0, 0]' : 0.327726}
{'[2, 5, 2, 2, 0, 1, 0, 1, 3, 0, 13, 3, 0, 1, 1, 0, 0, 0]' : 0.296946}
{'[2, 5, 2, 2, 0, 1, 0, 1, 3, 0, 13, 3, 0, 1, 1, 0, 0, 0]' : 0.296902}
{'[2, 5, 2, 2, 0, 1, 0, 1, 3, 0, 13, 3, 0, 1, 1, 0, 0, 0]' : 0.297203}
{'[2, 5, 2, 2, 0, 1, 0, 1, 3, 0, 13, 3, 0, 1, 1, 0, 0, 0]' : 0.296974}
{'[2, 5, 2, 2, 0, 1, 0, 1, 3, 0, 13, 3, 0, 1, 1, 0, 0, 0]' : 0.297034}
{'[2, 5, 2, 2, 0, 1, 0, 1, 3, 0, 13, 3, 0, 1, 1, 0, 0, 0]' : 0.296957}
{'[2, 5, 2, 2, 0, 1, 0, 1, 3, 0, 13, 3, 0, 1, 1, 0, 0, 0]' : 0.295332}
{'[2, 5, 2, 2, 0, 1, 0, 1, 3, 0, 13, 3, 0, 1, 1, 0, 0, 0]' : 0.294021}
{'[2, 5, 2, 2, 0, 1, 0, 1, 3, 0, 13, 3, 0, 1, 1, 0, 0, 0]' : 0.297065}
{'[2, 5, 2, 2, 0, 1, 0, 1, 3, 0, 13, 3, 0, 1, 1, 0, 0, 0]' : 0.289931}
{'[2, 5, 2, 2, 0, 1, 0, 1, 3, 0, 13, 3, 0, 1, 1, 0, 0, 0]' : 0.290613}
{'[2, 5, 2, 2, 0, 1, 0, 1, 3, 0, 13, 3, 0, 1, 1, 0, 0, 0]' : 0.296574}
{'[2, 5, 2, 2, 0, 1, 0, 1, 3, 0, 13, 3, 0, 1, 1, 0, 0, 0]' : 0.289775}
{'[2, 5, 2, 2, 0, 1, 0, 1, 3, 0, 13, 3, 0, 1, 1, 0, 0, 0]' : 0.29702}
{'[2, 5, 2, 2, 0, 1, 0, 1, 3, 0, 13, 3, 0, 1, 1, 0, 0, 0]' : 0.29704}
{'[2, 5, 2, 2, 0, 1, 0, 1, 3, 0, 13, 3, 0, 1, 1, 0, 0, 0]' : 0.297175}
{'[2, 5, 2, 2, 0, 1, 0, 1, 3, 0, 13, 3, 0, 1, 1, 0, 0, 0]' : 0.297024}
{'[2, 5, 2, 2, 0, 1, 0, 1, 3, 0, 13, 3, 0, 1, 1, 0, 0, 0]' : 0.297006}
{'[2, 5, 2, 2, 0, 1, 0, 1, 3, 0, 13, 3, 0, 1, 1, 0, 0, 0]' : 0.296514}
{'[2, 5, 2, 2, 0, 1, 0, 1, 3, 0, 13, 3, 0, 1, 1, 0, 0, 0]' : 0.295279}
{'[2, 5, 2, 2, 0, 1, 0, 1, 3, 0, 13, 3, 0, 1, 1, 0, 0, 0]' : 0.29546}
{'[2, 5, 2, 2, 0, 1, 0, 1, 3, 0, 13, 3, 0, 1, 1, 0, 0, 0]' : 0.292823}
{'[2, 5, 2, 2, 0, 1, 0, 1, 3, 0, 13, 3, 0, 1, 1, 0, 0, 0]' : 0.292667}
{'[2, 5, 2, 2, 0, 1, 0, 1, 3, 0, 13, 3, 0, 1, 1, 0, 0, 0]' : 0.29709}
{'[2, 5, 2, 2, 0, 1, 0, 1, 3, 0, 13, 3, 0, 1, 1, 0, 0, 0]' : 0.296969}
{'[2, 5, 2, 2, 0, 1, 0, 1, 3, 0, 13, 3, 0, 1, 1, 0, 0, 0]' : 0.295272}
{'[2, 5, 2, 2, 0, 1, 0, 1, 3, 0, 13, 3, 0, 1, 1, 0, 0, 0]' : 0.289755}
{'[2, 5, 2, 2, 0, 1, 0, 1, 3, 0, 13, 3, 0, 1, 1, 0, 0, 0]' : 0.291611}

out:
 ["{'[2, 5, 2, 2, 0, 1, 0, 1, 3, 0, 13, 3, 0, 1, 1, 0, 0, 0]' : 0.333658}", "{'[2, 5, 2, 2, 0, 1, 0, 1, 3, 0, 13, 3, 0, 1, 1, 0, 0, 0]' : 0.327726}", "{'[2, 5, 2, 2, 0, 1, 0, 1, 3, 0, 13, 3, 0, 1, 1, 0, 0, 0]' : 0.296946}", "{'[2, 5, 2, 2, 0, 1, 0, 1, 3, 0, 13, 3, 0, 1, 1, 0, 0, 0]' : 0.296902}", "{'[2, 5, 2, 2, 0, 1, 0, 1, 3, 0, 13, 3, 0, 1, 1, 0, 0, 0]' : 0.297203}", "{'[2, 5, 2, 2, 0, 1, 0, 1, 3, 0, 13, 3, 0, 1, 1, 0, 0, 0]' : 0.296974}", "{'[2, 5, 2, 2, 0, 1, 0, 1, 3, 0, 13, 3, 0, 1, 1, 0, 0, 0]' : 0.297034}", "{'[2, 5, 2, 2, 0, 1, 0, 1, 3, 0, 13, 3, 0, 1, 1, 0, 0, 0]' : 0.296957}", "{'[2, 5, 2, 2, 0, 1, 0, 1, 3, 0, 13, 3, 0, 1, 1, 0, 0, 0]' : 0.295332}", "{'[2, 5, 2, 2, 0, 1, 0, 1, 3, 0, 13, 3, 0, 1, 1, 0, 0, 0]' : 0.294021}", "{'[2, 5, 2, 2, 0, 1, 0, 1, 3, 0, 13, 3, 0, 1, 1, 0, 0, 0]' : 0.297065}", "{'[2, 5, 2, 2, 0, 1, 0, 1, 3, 0, 13, 3, 0, 1, 1, 0, 0, 0]' : 0.289931}", "{'[2, 5, 2, 2, 0, 1, 0, 1, 3, 0, 13, 3, 0, 1, 1, 0, 0, 0]' : 0.290613}", "{'[2, 5, 2, 2, 0, 1, 0, 1, 3, 0, 13, 3, 0, 1, 1, 0, 0, 0]' : 0.296574}", "{'[2, 5, 2, 2, 0, 1, 0, 1, 3, 0, 13, 3, 0, 1, 1, 0, 0, 0]' : 0.289775}", "{'[2, 5, 2, 2, 0, 1, 0, 1, 3, 0, 13, 3, 0, 1, 1, 0, 0, 0]' : 0.29702}", "{'[2, 5, 2, 2, 0, 1, 0, 1, 3, 0, 13, 3, 0, 1, 1, 0, 0, 0]' : 0.29704}", "{'[2, 5, 2, 2, 0, 1, 0, 1, 3, 0, 13, 3, 0, 1, 1, 0, 0, 0]' : 0.297175}", "{'[2, 5, 2, 2, 0, 1, 0, 1, 3, 0, 13, 3, 0, 1, 1, 0, 0, 0]' : 0.297024}", "{'[2, 5, 2, 2, 0, 1, 0, 1, 3, 0, 13, 3, 0, 1, 1, 0, 0, 0]' : 0.297006}", "{'[2, 5, 2, 2, 0, 1, 0, 1, 3, 0, 13, 3, 0, 1, 1, 0, 0, 0]' : 0.296514}", "{'[2, 5, 2, 2, 0, 1, 0, 1, 3, 0, 13, 3, 0, 1, 1, 0, 0, 0]' : 0.295279}", "{'[2, 5, 2, 2, 0, 1, 0, 1, 3, 0, 13, 3, 0, 1, 1, 0, 0, 0]' : 0.29546}", "{'[2, 5, 2, 2, 0, 1, 0, 1, 3, 0, 13, 3, 0, 1, 1, 0, 0, 0]' : 0.292823}", "{'[2, 5, 2, 2, 0, 1, 0, 1, 3, 0, 13, 3, 0, 1, 1, 0, 0, 0]' : 0.292667}", "{'[2, 5, 2, 2, 0, 1, 0, 1, 3, 0, 13, 3, 0, 1, 1, 0, 0, 0]' : 0.29709}", "{'[2, 5, 2, 2, 0, 1, 0, 1, 3, 0, 13, 3, 0, 1, 1, 0, 0, 0]' : 0.296969}", "{'[2, 5, 2, 2, 0, 1, 0, 1, 3, 0, 13, 3, 0, 1, 1, 0, 0, 0]' : 0.295272}", "{'[2, 5, 2, 2, 0, 1, 0, 1, 3, 0, 13, 3, 0, 1, 1, 0, 0, 0]' : 0.289755}", "{'[2, 5, 2, 2, 0, 1, 0, 1, 3, 0, 13, 3, 0, 1, 1, 0, 0, 0]' : 0.291611}"]
returning from 'run': {'[2, 5, 2, 2, 0, 1, 0, 1, 3, 0, 13, 3, 0, 1, 1, 0, 0, 0]': ([0.333658, 0.327726, 0.296946, 0.296902, 0.297203, 0.296974, 0.297034, 0.296957, 0.295332, 0.294021, 0.297065, 0.289931, 0.290613, 0.296574, 0.289775, 0.29702, 0.29704, 0.297175, 0.297024, 0.297006, 0.296514, 0.295279, 0.29546, 0.292823, 0.292667, 0.29709, 0.296969, 0.295272, 0.289755, 0.291611], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 5, 2, 2, 0, 1, 0, 1, 3, 0, 13, 3, 0, 1, 1, 0, 0, 0]': ([0.333658, 0.327726, 0.296946, 0.296902, 0.297203, 0.296974, 0.297034, 0.296957, 0.295332, 0.294021, 0.297065, 0.289931, 0.290613, 0.296574, 0.289775, 0.29702, 0.29704, 0.297175, 0.297024, 0.297006, 0.296514, 0.295279, 0.29546, 0.292823, 0.292667, 0.29709, 0.296969, 0.295272, 0.289755, 0.291611], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	40
        Max loop nest depth: 	4
        Additions: 		2237
        Multiplications: 	576
        Divisions: 		0
        Logical: 		0
        Reads: 			3639
        Writes: 		448
        Comparisons:		40
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest29.exe __orio_perftest29.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest29.exe  
Program Test Output: 
{'[0, 6, 0, 1, 0, 0, 1, 0, 28, 22, 29, 0, 1, 1, 0, 0, 0, 0]' : 0.107386}
{'[0, 6, 0, 1, 0, 0, 1, 0, 28, 22, 29, 0, 1, 1, 0, 0, 0, 0]' : 0.108318}
{'[0, 6, 0, 1, 0, 0, 1, 0, 28, 22, 29, 0, 1, 1, 0, 0, 0, 0]' : 0.106578}
{'[0, 6, 0, 1, 0, 0, 1, 0, 28, 22, 29, 0, 1, 1, 0, 0, 0, 0]' : 0.106945}
{'[0, 6, 0, 1, 0, 0, 1, 0, 28, 22, 29, 0, 1, 1, 0, 0, 0, 0]' : 0.106757}
{'[0, 6, 0, 1, 0, 0, 1, 0, 28, 22, 29, 0, 1, 1, 0, 0, 0, 0]' : 0.0951109}
{'[0, 6, 0, 1, 0, 0, 1, 0, 28, 22, 29, 0, 1, 1, 0, 0, 0, 0]' : 0.0906739}
{'[0, 6, 0, 1, 0, 0, 1, 0, 28, 22, 29, 0, 1, 1, 0, 0, 0, 0]' : 0.0907931}
{'[0, 6, 0, 1, 0, 0, 1, 0, 28, 22, 29, 0, 1, 1, 0, 0, 0, 0]' : 0.090776}
{'[0, 6, 0, 1, 0, 0, 1, 0, 28, 22, 29, 0, 1, 1, 0, 0, 0, 0]' : 0.09076}
{'[0, 6, 0, 1, 0, 0, 1, 0, 28, 22, 29, 0, 1, 1, 0, 0, 0, 0]' : 0.0913141}
{'[0, 6, 0, 1, 0, 0, 1, 0, 28, 22, 29, 0, 1, 1, 0, 0, 0, 0]' : 0.0933709}
{'[0, 6, 0, 1, 0, 0, 1, 0, 28, 22, 29, 0, 1, 1, 0, 0, 0, 0]' : 0.093374}
{'[0, 6, 0, 1, 0, 0, 1, 0, 28, 22, 29, 0, 1, 1, 0, 0, 0, 0]' : 0.0933199}
{'[0, 6, 0, 1, 0, 0, 1, 0, 28, 22, 29, 0, 1, 1, 0, 0, 0, 0]' : 0.0933039}
{'[0, 6, 0, 1, 0, 0, 1, 0, 28, 22, 29, 0, 1, 1, 0, 0, 0, 0]' : 0.0936711}
{'[0, 6, 0, 1, 0, 0, 1, 0, 28, 22, 29, 0, 1, 1, 0, 0, 0, 0]' : 0.0937772}
{'[0, 6, 0, 1, 0, 0, 1, 0, 28, 22, 29, 0, 1, 1, 0, 0, 0, 0]' : 0.093343}
{'[0, 6, 0, 1, 0, 0, 1, 0, 28, 22, 29, 0, 1, 1, 0, 0, 0, 0]' : 0.093261}
{'[0, 6, 0, 1, 0, 0, 1, 0, 28, 22, 29, 0, 1, 1, 0, 0, 0, 0]' : 0.0933971}
{'[0, 6, 0, 1, 0, 0, 1, 0, 28, 22, 29, 0, 1, 1, 0, 0, 0, 0]' : 0.0937171}
{'[0, 6, 0, 1, 0, 0, 1, 0, 28, 22, 29, 0, 1, 1, 0, 0, 0, 0]' : 0.094614}
{'[0, 6, 0, 1, 0, 0, 1, 0, 28, 22, 29, 0, 1, 1, 0, 0, 0, 0]' : 0.093153}
{'[0, 6, 0, 1, 0, 0, 1, 0, 28, 22, 29, 0, 1, 1, 0, 0, 0, 0]' : 0.093389}
{'[0, 6, 0, 1, 0, 0, 1, 0, 28, 22, 29, 0, 1, 1, 0, 0, 0, 0]' : 0.093806}
{'[0, 6, 0, 1, 0, 0, 1, 0, 28, 22, 29, 0, 1, 1, 0, 0, 0, 0]' : 0.0934429}
{'[0, 6, 0, 1, 0, 0, 1, 0, 28, 22, 29, 0, 1, 1, 0, 0, 0, 0]' : 0.0933602}
{'[0, 6, 0, 1, 0, 0, 1, 0, 28, 22, 29, 0, 1, 1, 0, 0, 0, 0]' : 0.0923641}
{'[0, 6, 0, 1, 0, 0, 1, 0, 28, 22, 29, 0, 1, 1, 0, 0, 0, 0]' : 0.0909941}
{'[0, 6, 0, 1, 0, 0, 1, 0, 28, 22, 29, 0, 1, 1, 0, 0, 0, 0]' : 0.090764}

out:
 ["{'[0, 6, 0, 1, 0, 0, 1, 0, 28, 22, 29, 0, 1, 1, 0, 0, 0, 0]' : 0.107386}", "{'[0, 6, 0, 1, 0, 0, 1, 0, 28, 22, 29, 0, 1, 1, 0, 0, 0, 0]' : 0.108318}", "{'[0, 6, 0, 1, 0, 0, 1, 0, 28, 22, 29, 0, 1, 1, 0, 0, 0, 0]' : 0.106578}", "{'[0, 6, 0, 1, 0, 0, 1, 0, 28, 22, 29, 0, 1, 1, 0, 0, 0, 0]' : 0.106945}", "{'[0, 6, 0, 1, 0, 0, 1, 0, 28, 22, 29, 0, 1, 1, 0, 0, 0, 0]' : 0.106757}", "{'[0, 6, 0, 1, 0, 0, 1, 0, 28, 22, 29, 0, 1, 1, 0, 0, 0, 0]' : 0.0951109}", "{'[0, 6, 0, 1, 0, 0, 1, 0, 28, 22, 29, 0, 1, 1, 0, 0, 0, 0]' : 0.0906739}", "{'[0, 6, 0, 1, 0, 0, 1, 0, 28, 22, 29, 0, 1, 1, 0, 0, 0, 0]' : 0.0907931}", "{'[0, 6, 0, 1, 0, 0, 1, 0, 28, 22, 29, 0, 1, 1, 0, 0, 0, 0]' : 0.090776}", "{'[0, 6, 0, 1, 0, 0, 1, 0, 28, 22, 29, 0, 1, 1, 0, 0, 0, 0]' : 0.09076}", "{'[0, 6, 0, 1, 0, 0, 1, 0, 28, 22, 29, 0, 1, 1, 0, 0, 0, 0]' : 0.0913141}", "{'[0, 6, 0, 1, 0, 0, 1, 0, 28, 22, 29, 0, 1, 1, 0, 0, 0, 0]' : 0.0933709}", "{'[0, 6, 0, 1, 0, 0, 1, 0, 28, 22, 29, 0, 1, 1, 0, 0, 0, 0]' : 0.093374}", "{'[0, 6, 0, 1, 0, 0, 1, 0, 28, 22, 29, 0, 1, 1, 0, 0, 0, 0]' : 0.0933199}", "{'[0, 6, 0, 1, 0, 0, 1, 0, 28, 22, 29, 0, 1, 1, 0, 0, 0, 0]' : 0.0933039}", "{'[0, 6, 0, 1, 0, 0, 1, 0, 28, 22, 29, 0, 1, 1, 0, 0, 0, 0]' : 0.0936711}", "{'[0, 6, 0, 1, 0, 0, 1, 0, 28, 22, 29, 0, 1, 1, 0, 0, 0, 0]' : 0.0937772}", "{'[0, 6, 0, 1, 0, 0, 1, 0, 28, 22, 29, 0, 1, 1, 0, 0, 0, 0]' : 0.093343}", "{'[0, 6, 0, 1, 0, 0, 1, 0, 28, 22, 29, 0, 1, 1, 0, 0, 0, 0]' : 0.093261}", "{'[0, 6, 0, 1, 0, 0, 1, 0, 28, 22, 29, 0, 1, 1, 0, 0, 0, 0]' : 0.0933971}", "{'[0, 6, 0, 1, 0, 0, 1, 0, 28, 22, 29, 0, 1, 1, 0, 0, 0, 0]' : 0.0937171}", "{'[0, 6, 0, 1, 0, 0, 1, 0, 28, 22, 29, 0, 1, 1, 0, 0, 0, 0]' : 0.094614}", "{'[0, 6, 0, 1, 0, 0, 1, 0, 28, 22, 29, 0, 1, 1, 0, 0, 0, 0]' : 0.093153}", "{'[0, 6, 0, 1, 0, 0, 1, 0, 28, 22, 29, 0, 1, 1, 0, 0, 0, 0]' : 0.093389}", "{'[0, 6, 0, 1, 0, 0, 1, 0, 28, 22, 29, 0, 1, 1, 0, 0, 0, 0]' : 0.093806}", "{'[0, 6, 0, 1, 0, 0, 1, 0, 28, 22, 29, 0, 1, 1, 0, 0, 0, 0]' : 0.0934429}", "{'[0, 6, 0, 1, 0, 0, 1, 0, 28, 22, 29, 0, 1, 1, 0, 0, 0, 0]' : 0.0933602}", "{'[0, 6, 0, 1, 0, 0, 1, 0, 28, 22, 29, 0, 1, 1, 0, 0, 0, 0]' : 0.0923641}", "{'[0, 6, 0, 1, 0, 0, 1, 0, 28, 22, 29, 0, 1, 1, 0, 0, 0, 0]' : 0.0909941}", "{'[0, 6, 0, 1, 0, 0, 1, 0, 28, 22, 29, 0, 1, 1, 0, 0, 0, 0]' : 0.090764}"]
returning from 'run': {'[0, 6, 0, 1, 0, 0, 1, 0, 28, 22, 29, 0, 1, 1, 0, 0, 0, 0]': ([0.107386, 0.108318, 0.106578, 0.106945, 0.106757, 0.0951109, 0.0906739, 0.0907931, 0.090776, 0.09076, 0.0913141, 0.0933709, 0.093374, 0.0933199, 0.0933039, 0.0936711, 0.0937772, 0.093343, 0.093261, 0.0933971, 0.0937171, 0.094614, 0.093153, 0.093389, 0.093806, 0.0934429, 0.0933602, 0.0923641, 0.0909941, 0.090764], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 0, 1, 0, 0, 1, 0, 28, 22, 29, 0, 1, 1, 0, 0, 0, 0]': ([0.107386, 0.108318, 0.106578, 0.106945, 0.106757, 0.0951109, 0.0906739, 0.0907931, 0.090776, 0.09076, 0.0913141, 0.0933709, 0.093374, 0.0933199, 0.0933039, 0.0936711, 0.0937772, 0.093343, 0.093261, 0.0933971, 0.0937171, 0.094614, 0.093153, 0.093389, 0.093806, 0.0934429, 0.0933602, 0.0923641, 0.0909941, 0.090764], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		359
        Multiplications: 	138
        Divisions: 		0
        Logical: 		0
        Reads: 			823
        Writes: 		171
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest30.exe __orio_perftest30.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest30.exe  
Program Test Output: 
{'[1, 0, 4, 2, 6, 0, 0, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.209643}
{'[1, 0, 4, 2, 6, 0, 0, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.209572}
{'[1, 0, 4, 2, 6, 0, 0, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.180927}
{'[1, 0, 4, 2, 6, 0, 0, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.177217}
{'[1, 0, 4, 2, 6, 0, 0, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.17867}
{'[1, 0, 4, 2, 6, 0, 0, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.175559}
{'[1, 0, 4, 2, 6, 0, 0, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.178428}
{'[1, 0, 4, 2, 6, 0, 0, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.181633}
{'[1, 0, 4, 2, 6, 0, 0, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.181358}
{'[1, 0, 4, 2, 6, 0, 0, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.181521}
{'[1, 0, 4, 2, 6, 0, 0, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.181154}
{'[1, 0, 4, 2, 6, 0, 0, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.181215}
{'[1, 0, 4, 2, 6, 0, 0, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.181469}
{'[1, 0, 4, 2, 6, 0, 0, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.180959}
{'[1, 0, 4, 2, 6, 0, 0, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.176831}
{'[1, 0, 4, 2, 6, 0, 0, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.18142}
{'[1, 0, 4, 2, 6, 0, 0, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.181234}
{'[1, 0, 4, 2, 6, 0, 0, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.18167}
{'[1, 0, 4, 2, 6, 0, 0, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.181315}
{'[1, 0, 4, 2, 6, 0, 0, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.181294}
{'[1, 0, 4, 2, 6, 0, 0, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.181568}
{'[1, 0, 4, 2, 6, 0, 0, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.181501}
{'[1, 0, 4, 2, 6, 0, 0, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.180845}
{'[1, 0, 4, 2, 6, 0, 0, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.180801}
{'[1, 0, 4, 2, 6, 0, 0, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.181417}
{'[1, 0, 4, 2, 6, 0, 0, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.179288}
{'[1, 0, 4, 2, 6, 0, 0, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.181529}
{'[1, 0, 4, 2, 6, 0, 0, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.181404}
{'[1, 0, 4, 2, 6, 0, 0, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.181583}
{'[1, 0, 4, 2, 6, 0, 0, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.18131}

out:
 ["{'[1, 0, 4, 2, 6, 0, 0, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.209643}", "{'[1, 0, 4, 2, 6, 0, 0, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.209572}", "{'[1, 0, 4, 2, 6, 0, 0, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.180927}", "{'[1, 0, 4, 2, 6, 0, 0, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.177217}", "{'[1, 0, 4, 2, 6, 0, 0, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.17867}", "{'[1, 0, 4, 2, 6, 0, 0, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.175559}", "{'[1, 0, 4, 2, 6, 0, 0, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.178428}", "{'[1, 0, 4, 2, 6, 0, 0, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.181633}", "{'[1, 0, 4, 2, 6, 0, 0, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.181358}", "{'[1, 0, 4, 2, 6, 0, 0, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.181521}", "{'[1, 0, 4, 2, 6, 0, 0, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.181154}", "{'[1, 0, 4, 2, 6, 0, 0, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.181215}", "{'[1, 0, 4, 2, 6, 0, 0, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.181469}", "{'[1, 0, 4, 2, 6, 0, 0, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.180959}", "{'[1, 0, 4, 2, 6, 0, 0, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.176831}", "{'[1, 0, 4, 2, 6, 0, 0, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.18142}", "{'[1, 0, 4, 2, 6, 0, 0, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.181234}", "{'[1, 0, 4, 2, 6, 0, 0, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.18167}", "{'[1, 0, 4, 2, 6, 0, 0, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.181315}", "{'[1, 0, 4, 2, 6, 0, 0, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.181294}", "{'[1, 0, 4, 2, 6, 0, 0, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.181568}", "{'[1, 0, 4, 2, 6, 0, 0, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.181501}", "{'[1, 0, 4, 2, 6, 0, 0, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.180845}", "{'[1, 0, 4, 2, 6, 0, 0, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.180801}", "{'[1, 0, 4, 2, 6, 0, 0, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.181417}", "{'[1, 0, 4, 2, 6, 0, 0, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.179288}", "{'[1, 0, 4, 2, 6, 0, 0, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.181529}", "{'[1, 0, 4, 2, 6, 0, 0, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.181404}", "{'[1, 0, 4, 2, 6, 0, 0, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.181583}", "{'[1, 0, 4, 2, 6, 0, 0, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.18131}"]
returning from 'run': {'[1, 0, 4, 2, 6, 0, 0, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]': ([0.209643, 0.209572, 0.180927, 0.177217, 0.17867, 0.175559, 0.178428, 0.181633, 0.181358, 0.181521, 0.181154, 0.181215, 0.181469, 0.180959, 0.176831, 0.18142, 0.181234, 0.18167, 0.181315, 0.181294, 0.181568, 0.181501, 0.180845, 0.180801, 0.181417, 0.179288, 0.181529, 0.181404, 0.181583, 0.18131], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 4, 2, 6, 0, 0, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]': ([0.209643, 0.209572, 0.180927, 0.177217, 0.17867, 0.175559, 0.178428, 0.181633, 0.181358, 0.181521, 0.181154, 0.181215, 0.181469, 0.180959, 0.176831, 0.18142, 0.181234, 0.18167, 0.181315, 0.181294, 0.181568, 0.181501, 0.180845, 0.180801, 0.181417, 0.179288, 0.181529, 0.181404, 0.181583, 0.18131], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	118
        Max loop nest depth: 	5
        Additions: 		4568
        Multiplications: 	1872
        Divisions: 		0
        Logical: 		0
        Reads: 			8698
        Writes: 		1504
        Comparisons:		118
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest31.exe __orio_perftest31.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest31.exe  
Program Test Output: 
{'[1, 6, 0, 2, 4, 1, 0, 1, 8, 24, 0, 1, 0, 2, 0, 1, 1, 0]' : 0.211899}
{'[1, 6, 0, 2, 4, 1, 0, 1, 8, 24, 0, 1, 0, 2, 0, 1, 1, 0]' : 0.210852}
{'[1, 6, 0, 2, 4, 1, 0, 1, 8, 24, 0, 1, 0, 2, 0, 1, 1, 0]' : 0.210767}
{'[1, 6, 0, 2, 4, 1, 0, 1, 8, 24, 0, 1, 0, 2, 0, 1, 1, 0]' : 0.205226}
{'[1, 6, 0, 2, 4, 1, 0, 1, 8, 24, 0, 1, 0, 2, 0, 1, 1, 0]' : 0.20972}
{'[1, 6, 0, 2, 4, 1, 0, 1, 8, 24, 0, 1, 0, 2, 0, 1, 1, 0]' : 0.212034}
{'[1, 6, 0, 2, 4, 1, 0, 1, 8, 24, 0, 1, 0, 2, 0, 1, 1, 0]' : 0.209713}
{'[1, 6, 0, 2, 4, 1, 0, 1, 8, 24, 0, 1, 0, 2, 0, 1, 1, 0]' : 0.211591}
{'[1, 6, 0, 2, 4, 1, 0, 1, 8, 24, 0, 1, 0, 2, 0, 1, 1, 0]' : 0.206886}
{'[1, 6, 0, 2, 4, 1, 0, 1, 8, 24, 0, 1, 0, 2, 0, 1, 1, 0]' : 0.211637}
{'[1, 6, 0, 2, 4, 1, 0, 1, 8, 24, 0, 1, 0, 2, 0, 1, 1, 0]' : 0.211676}
{'[1, 6, 0, 2, 4, 1, 0, 1, 8, 24, 0, 1, 0, 2, 0, 1, 1, 0]' : 0.209724}
{'[1, 6, 0, 2, 4, 1, 0, 1, 8, 24, 0, 1, 0, 2, 0, 1, 1, 0]' : 0.21219}
{'[1, 6, 0, 2, 4, 1, 0, 1, 8, 24, 0, 1, 0, 2, 0, 1, 1, 0]' : 0.210622}
{'[1, 6, 0, 2, 4, 1, 0, 1, 8, 24, 0, 1, 0, 2, 0, 1, 1, 0]' : 0.212982}
{'[1, 6, 0, 2, 4, 1, 0, 1, 8, 24, 0, 1, 0, 2, 0, 1, 1, 0]' : 0.205165}
{'[1, 6, 0, 2, 4, 1, 0, 1, 8, 24, 0, 1, 0, 2, 0, 1, 1, 0]' : 0.208991}
{'[1, 6, 0, 2, 4, 1, 0, 1, 8, 24, 0, 1, 0, 2, 0, 1, 1, 0]' : 0.211795}
{'[1, 6, 0, 2, 4, 1, 0, 1, 8, 24, 0, 1, 0, 2, 0, 1, 1, 0]' : 0.20803}
{'[1, 6, 0, 2, 4, 1, 0, 1, 8, 24, 0, 1, 0, 2, 0, 1, 1, 0]' : 0.209223}
{'[1, 6, 0, 2, 4, 1, 0, 1, 8, 24, 0, 1, 0, 2, 0, 1, 1, 0]' : 0.205095}
{'[1, 6, 0, 2, 4, 1, 0, 1, 8, 24, 0, 1, 0, 2, 0, 1, 1, 0]' : 0.210173}
{'[1, 6, 0, 2, 4, 1, 0, 1, 8, 24, 0, 1, 0, 2, 0, 1, 1, 0]' : 0.211689}
{'[1, 6, 0, 2, 4, 1, 0, 1, 8, 24, 0, 1, 0, 2, 0, 1, 1, 0]' : 0.213583}
{'[1, 6, 0, 2, 4, 1, 0, 1, 8, 24, 0, 1, 0, 2, 0, 1, 1, 0]' : 0.206779}
{'[1, 6, 0, 2, 4, 1, 0, 1, 8, 24, 0, 1, 0, 2, 0, 1, 1, 0]' : 0.20507}
{'[1, 6, 0, 2, 4, 1, 0, 1, 8, 24, 0, 1, 0, 2, 0, 1, 1, 0]' : 0.211787}
{'[1, 6, 0, 2, 4, 1, 0, 1, 8, 24, 0, 1, 0, 2, 0, 1, 1, 0]' : 0.211682}
{'[1, 6, 0, 2, 4, 1, 0, 1, 8, 24, 0, 1, 0, 2, 0, 1, 1, 0]' : 0.211976}
{'[1, 6, 0, 2, 4, 1, 0, 1, 8, 24, 0, 1, 0, 2, 0, 1, 1, 0]' : 0.206162}

out:
 ["{'[1, 6, 0, 2, 4, 1, 0, 1, 8, 24, 0, 1, 0, 2, 0, 1, 1, 0]' : 0.211899}", "{'[1, 6, 0, 2, 4, 1, 0, 1, 8, 24, 0, 1, 0, 2, 0, 1, 1, 0]' : 0.210852}", "{'[1, 6, 0, 2, 4, 1, 0, 1, 8, 24, 0, 1, 0, 2, 0, 1, 1, 0]' : 0.210767}", "{'[1, 6, 0, 2, 4, 1, 0, 1, 8, 24, 0, 1, 0, 2, 0, 1, 1, 0]' : 0.205226}", "{'[1, 6, 0, 2, 4, 1, 0, 1, 8, 24, 0, 1, 0, 2, 0, 1, 1, 0]' : 0.20972}", "{'[1, 6, 0, 2, 4, 1, 0, 1, 8, 24, 0, 1, 0, 2, 0, 1, 1, 0]' : 0.212034}", "{'[1, 6, 0, 2, 4, 1, 0, 1, 8, 24, 0, 1, 0, 2, 0, 1, 1, 0]' : 0.209713}", "{'[1, 6, 0, 2, 4, 1, 0, 1, 8, 24, 0, 1, 0, 2, 0, 1, 1, 0]' : 0.211591}", "{'[1, 6, 0, 2, 4, 1, 0, 1, 8, 24, 0, 1, 0, 2, 0, 1, 1, 0]' : 0.206886}", "{'[1, 6, 0, 2, 4, 1, 0, 1, 8, 24, 0, 1, 0, 2, 0, 1, 1, 0]' : 0.211637}", "{'[1, 6, 0, 2, 4, 1, 0, 1, 8, 24, 0, 1, 0, 2, 0, 1, 1, 0]' : 0.211676}", "{'[1, 6, 0, 2, 4, 1, 0, 1, 8, 24, 0, 1, 0, 2, 0, 1, 1, 0]' : 0.209724}", "{'[1, 6, 0, 2, 4, 1, 0, 1, 8, 24, 0, 1, 0, 2, 0, 1, 1, 0]' : 0.21219}", "{'[1, 6, 0, 2, 4, 1, 0, 1, 8, 24, 0, 1, 0, 2, 0, 1, 1, 0]' : 0.210622}", "{'[1, 6, 0, 2, 4, 1, 0, 1, 8, 24, 0, 1, 0, 2, 0, 1, 1, 0]' : 0.212982}", "{'[1, 6, 0, 2, 4, 1, 0, 1, 8, 24, 0, 1, 0, 2, 0, 1, 1, 0]' : 0.205165}", "{'[1, 6, 0, 2, 4, 1, 0, 1, 8, 24, 0, 1, 0, 2, 0, 1, 1, 0]' : 0.208991}", "{'[1, 6, 0, 2, 4, 1, 0, 1, 8, 24, 0, 1, 0, 2, 0, 1, 1, 0]' : 0.211795}", "{'[1, 6, 0, 2, 4, 1, 0, 1, 8, 24, 0, 1, 0, 2, 0, 1, 1, 0]' : 0.20803}", "{'[1, 6, 0, 2, 4, 1, 0, 1, 8, 24, 0, 1, 0, 2, 0, 1, 1, 0]' : 0.209223}", "{'[1, 6, 0, 2, 4, 1, 0, 1, 8, 24, 0, 1, 0, 2, 0, 1, 1, 0]' : 0.205095}", "{'[1, 6, 0, 2, 4, 1, 0, 1, 8, 24, 0, 1, 0, 2, 0, 1, 1, 0]' : 0.210173}", "{'[1, 6, 0, 2, 4, 1, 0, 1, 8, 24, 0, 1, 0, 2, 0, 1, 1, 0]' : 0.211689}", "{'[1, 6, 0, 2, 4, 1, 0, 1, 8, 24, 0, 1, 0, 2, 0, 1, 1, 0]' : 0.213583}", "{'[1, 6, 0, 2, 4, 1, 0, 1, 8, 24, 0, 1, 0, 2, 0, 1, 1, 0]' : 0.206779}", "{'[1, 6, 0, 2, 4, 1, 0, 1, 8, 24, 0, 1, 0, 2, 0, 1, 1, 0]' : 0.20507}", "{'[1, 6, 0, 2, 4, 1, 0, 1, 8, 24, 0, 1, 0, 2, 0, 1, 1, 0]' : 0.211787}", "{'[1, 6, 0, 2, 4, 1, 0, 1, 8, 24, 0, 1, 0, 2, 0, 1, 1, 0]' : 0.211682}", "{'[1, 6, 0, 2, 4, 1, 0, 1, 8, 24, 0, 1, 0, 2, 0, 1, 1, 0]' : 0.211976}", "{'[1, 6, 0, 2, 4, 1, 0, 1, 8, 24, 0, 1, 0, 2, 0, 1, 1, 0]' : 0.206162}"]
returning from 'run': {'[1, 6, 0, 2, 4, 1, 0, 1, 8, 24, 0, 1, 0, 2, 0, 1, 1, 0]': ([0.211899, 0.210852, 0.210767, 0.205226, 0.20972, 0.212034, 0.209713, 0.211591, 0.206886, 0.211637, 0.211676, 0.209724, 0.21219, 0.210622, 0.212982, 0.205165, 0.208991, 0.211795, 0.20803, 0.209223, 0.205095, 0.210173, 0.211689, 0.213583, 0.206779, 0.20507, 0.211787, 0.211682, 0.211976, 0.206162], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 6, 0, 2, 4, 1, 0, 1, 8, 24, 0, 1, 0, 2, 0, 1, 1, 0]': ([0.211899, 0.210852, 0.210767, 0.205226, 0.20972, 0.212034, 0.209713, 0.211591, 0.206886, 0.211637, 0.211676, 0.209724, 0.21219, 0.210622, 0.212982, 0.205165, 0.208991, 0.211795, 0.20803, 0.209223, 0.205095, 0.210173, 0.211689, 0.213583, 0.206779, 0.20507, 0.211787, 0.211682, 0.211976, 0.206162], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	5
        Additions: 		4722
        Multiplications: 	1452
        Divisions: 		0
        Logical: 		0
        Reads: 			7398
        Writes: 		773
        Comparisons:		16
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest32.exe __orio_perftest32.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest32.exe  
Program Test Output: 
{'[6, 3, 0, 6, 1, 0, 0, 0, 11, 0, 9, 9, 2, 0, 0, 0, 0, 0]' : 0.278219}
{'[6, 3, 0, 6, 1, 0, 0, 0, 11, 0, 9, 9, 2, 0, 0, 0, 0, 0]' : 0.269797}
{'[6, 3, 0, 6, 1, 0, 0, 0, 11, 0, 9, 9, 2, 0, 0, 0, 0, 0]' : 0.246472}
{'[6, 3, 0, 6, 1, 0, 0, 0, 11, 0, 9, 9, 2, 0, 0, 0, 0, 0]' : 0.246541}
{'[6, 3, 0, 6, 1, 0, 0, 0, 11, 0, 9, 9, 2, 0, 0, 0, 0, 0]' : 0.246666}
{'[6, 3, 0, 6, 1, 0, 0, 0, 11, 0, 9, 9, 2, 0, 0, 0, 0, 0]' : 0.246874}
{'[6, 3, 0, 6, 1, 0, 0, 0, 11, 0, 9, 9, 2, 0, 0, 0, 0, 0]' : 0.248615}
{'[6, 3, 0, 6, 1, 0, 0, 0, 11, 0, 9, 9, 2, 0, 0, 0, 0, 0]' : 0.248195}
{'[6, 3, 0, 6, 1, 0, 0, 0, 11, 0, 9, 9, 2, 0, 0, 0, 0, 0]' : 0.248818}
{'[6, 3, 0, 6, 1, 0, 0, 0, 11, 0, 9, 9, 2, 0, 0, 0, 0, 0]' : 0.247451}
{'[6, 3, 0, 6, 1, 0, 0, 0, 11, 0, 9, 9, 2, 0, 0, 0, 0, 0]' : 0.250033}
{'[6, 3, 0, 6, 1, 0, 0, 0, 11, 0, 9, 9, 2, 0, 0, 0, 0, 0]' : 0.247634}
{'[6, 3, 0, 6, 1, 0, 0, 0, 11, 0, 9, 9, 2, 0, 0, 0, 0, 0]' : 0.248948}
{'[6, 3, 0, 6, 1, 0, 0, 0, 11, 0, 9, 9, 2, 0, 0, 0, 0, 0]' : 0.248173}
{'[6, 3, 0, 6, 1, 0, 0, 0, 11, 0, 9, 9, 2, 0, 0, 0, 0, 0]' : 0.249347}
{'[6, 3, 0, 6, 1, 0, 0, 0, 11, 0, 9, 9, 2, 0, 0, 0, 0, 0]' : 0.247996}
{'[6, 3, 0, 6, 1, 0, 0, 0, 11, 0, 9, 9, 2, 0, 0, 0, 0, 0]' : 0.248509}
{'[6, 3, 0, 6, 1, 0, 0, 0, 11, 0, 9, 9, 2, 0, 0, 0, 0, 0]' : 0.249382}
{'[6, 3, 0, 6, 1, 0, 0, 0, 11, 0, 9, 9, 2, 0, 0, 0, 0, 0]' : 0.252867}
{'[6, 3, 0, 6, 1, 0, 0, 0, 11, 0, 9, 9, 2, 0, 0, 0, 0, 0]' : 0.253082}
{'[6, 3, 0, 6, 1, 0, 0, 0, 11, 0, 9, 9, 2, 0, 0, 0, 0, 0]' : 0.255783}
{'[6, 3, 0, 6, 1, 0, 0, 0, 11, 0, 9, 9, 2, 0, 0, 0, 0, 0]' : 0.25184}
{'[6, 3, 0, 6, 1, 0, 0, 0, 11, 0, 9, 9, 2, 0, 0, 0, 0, 0]' : 0.253743}
{'[6, 3, 0, 6, 1, 0, 0, 0, 11, 0, 9, 9, 2, 0, 0, 0, 0, 0]' : 0.252691}
{'[6, 3, 0, 6, 1, 0, 0, 0, 11, 0, 9, 9, 2, 0, 0, 0, 0, 0]' : 0.253152}
{'[6, 3, 0, 6, 1, 0, 0, 0, 11, 0, 9, 9, 2, 0, 0, 0, 0, 0]' : 0.24844}
{'[6, 3, 0, 6, 1, 0, 0, 0, 11, 0, 9, 9, 2, 0, 0, 0, 0, 0]' : 0.254512}
{'[6, 3, 0, 6, 1, 0, 0, 0, 11, 0, 9, 9, 2, 0, 0, 0, 0, 0]' : 0.256939}
{'[6, 3, 0, 6, 1, 0, 0, 0, 11, 0, 9, 9, 2, 0, 0, 0, 0, 0]' : 0.256093}
{'[6, 3, 0, 6, 1, 0, 0, 0, 11, 0, 9, 9, 2, 0, 0, 0, 0, 0]' : 0.251868}

out:
 ["{'[6, 3, 0, 6, 1, 0, 0, 0, 11, 0, 9, 9, 2, 0, 0, 0, 0, 0]' : 0.278219}", "{'[6, 3, 0, 6, 1, 0, 0, 0, 11, 0, 9, 9, 2, 0, 0, 0, 0, 0]' : 0.269797}", "{'[6, 3, 0, 6, 1, 0, 0, 0, 11, 0, 9, 9, 2, 0, 0, 0, 0, 0]' : 0.246472}", "{'[6, 3, 0, 6, 1, 0, 0, 0, 11, 0, 9, 9, 2, 0, 0, 0, 0, 0]' : 0.246541}", "{'[6, 3, 0, 6, 1, 0, 0, 0, 11, 0, 9, 9, 2, 0, 0, 0, 0, 0]' : 0.246666}", "{'[6, 3, 0, 6, 1, 0, 0, 0, 11, 0, 9, 9, 2, 0, 0, 0, 0, 0]' : 0.246874}", "{'[6, 3, 0, 6, 1, 0, 0, 0, 11, 0, 9, 9, 2, 0, 0, 0, 0, 0]' : 0.248615}", "{'[6, 3, 0, 6, 1, 0, 0, 0, 11, 0, 9, 9, 2, 0, 0, 0, 0, 0]' : 0.248195}", "{'[6, 3, 0, 6, 1, 0, 0, 0, 11, 0, 9, 9, 2, 0, 0, 0, 0, 0]' : 0.248818}", "{'[6, 3, 0, 6, 1, 0, 0, 0, 11, 0, 9, 9, 2, 0, 0, 0, 0, 0]' : 0.247451}", "{'[6, 3, 0, 6, 1, 0, 0, 0, 11, 0, 9, 9, 2, 0, 0, 0, 0, 0]' : 0.250033}", "{'[6, 3, 0, 6, 1, 0, 0, 0, 11, 0, 9, 9, 2, 0, 0, 0, 0, 0]' : 0.247634}", "{'[6, 3, 0, 6, 1, 0, 0, 0, 11, 0, 9, 9, 2, 0, 0, 0, 0, 0]' : 0.248948}", "{'[6, 3, 0, 6, 1, 0, 0, 0, 11, 0, 9, 9, 2, 0, 0, 0, 0, 0]' : 0.248173}", "{'[6, 3, 0, 6, 1, 0, 0, 0, 11, 0, 9, 9, 2, 0, 0, 0, 0, 0]' : 0.249347}", "{'[6, 3, 0, 6, 1, 0, 0, 0, 11, 0, 9, 9, 2, 0, 0, 0, 0, 0]' : 0.247996}", "{'[6, 3, 0, 6, 1, 0, 0, 0, 11, 0, 9, 9, 2, 0, 0, 0, 0, 0]' : 0.248509}", "{'[6, 3, 0, 6, 1, 0, 0, 0, 11, 0, 9, 9, 2, 0, 0, 0, 0, 0]' : 0.249382}", "{'[6, 3, 0, 6, 1, 0, 0, 0, 11, 0, 9, 9, 2, 0, 0, 0, 0, 0]' : 0.252867}", "{'[6, 3, 0, 6, 1, 0, 0, 0, 11, 0, 9, 9, 2, 0, 0, 0, 0, 0]' : 0.253082}", "{'[6, 3, 0, 6, 1, 0, 0, 0, 11, 0, 9, 9, 2, 0, 0, 0, 0, 0]' : 0.255783}", "{'[6, 3, 0, 6, 1, 0, 0, 0, 11, 0, 9, 9, 2, 0, 0, 0, 0, 0]' : 0.25184}", "{'[6, 3, 0, 6, 1, 0, 0, 0, 11, 0, 9, 9, 2, 0, 0, 0, 0, 0]' : 0.253743}", "{'[6, 3, 0, 6, 1, 0, 0, 0, 11, 0, 9, 9, 2, 0, 0, 0, 0, 0]' : 0.252691}", "{'[6, 3, 0, 6, 1, 0, 0, 0, 11, 0, 9, 9, 2, 0, 0, 0, 0, 0]' : 0.253152}", "{'[6, 3, 0, 6, 1, 0, 0, 0, 11, 0, 9, 9, 2, 0, 0, 0, 0, 0]' : 0.24844}", "{'[6, 3, 0, 6, 1, 0, 0, 0, 11, 0, 9, 9, 2, 0, 0, 0, 0, 0]' : 0.254512}", "{'[6, 3, 0, 6, 1, 0, 0, 0, 11, 0, 9, 9, 2, 0, 0, 0, 0, 0]' : 0.256939}", "{'[6, 3, 0, 6, 1, 0, 0, 0, 11, 0, 9, 9, 2, 0, 0, 0, 0, 0]' : 0.256093}", "{'[6, 3, 0, 6, 1, 0, 0, 0, 11, 0, 9, 9, 2, 0, 0, 0, 0, 0]' : 0.251868}"]
returning from 'run': {'[6, 3, 0, 6, 1, 0, 0, 0, 11, 0, 9, 9, 2, 0, 0, 0, 0, 0]': ([0.278219, 0.269797, 0.246472, 0.246541, 0.246666, 0.246874, 0.248615, 0.248195, 0.248818, 0.247451, 0.250033, 0.247634, 0.248948, 0.248173, 0.249347, 0.247996, 0.248509, 0.249382, 0.252867, 0.253082, 0.255783, 0.25184, 0.253743, 0.252691, 0.253152, 0.24844, 0.254512, 0.256939, 0.256093, 0.251868], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 3, 0, 6, 1, 0, 0, 0, 11, 0, 9, 9, 2, 0, 0, 0, 0, 0]': ([0.278219, 0.269797, 0.246472, 0.246541, 0.246666, 0.246874, 0.248615, 0.248195, 0.248818, 0.247451, 0.250033, 0.247634, 0.248948, 0.248173, 0.249347, 0.247996, 0.248509, 0.249382, 0.252867, 0.253082, 0.255783, 0.25184, 0.253743, 0.252691, 0.253152, 0.24844, 0.254512, 0.256939, 0.256093, 0.251868], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		282
        Multiplications: 	94
        Divisions: 		0
        Logical: 		0
        Reads: 			612
        Writes: 		132
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest33.exe __orio_perftest33.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest33.exe  
Program Test Output: 
{'[3, 6, 4, 4, 0, 0, 0, 1, 28, 0, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.222904}
{'[3, 6, 4, 4, 0, 0, 0, 1, 28, 0, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.213584}
{'[3, 6, 4, 4, 0, 0, 0, 1, 28, 0, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.195816}
{'[3, 6, 4, 4, 0, 0, 0, 1, 28, 0, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.1929}
{'[3, 6, 4, 4, 0, 0, 0, 1, 28, 0, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.192352}
{'[3, 6, 4, 4, 0, 0, 0, 1, 28, 0, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.196176}
{'[3, 6, 4, 4, 0, 0, 0, 1, 28, 0, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.191261}
{'[3, 6, 4, 4, 0, 0, 0, 1, 28, 0, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.191769}
{'[3, 6, 4, 4, 0, 0, 0, 1, 28, 0, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.192456}
{'[3, 6, 4, 4, 0, 0, 0, 1, 28, 0, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.192503}
{'[3, 6, 4, 4, 0, 0, 0, 1, 28, 0, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.192447}
{'[3, 6, 4, 4, 0, 0, 0, 1, 28, 0, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.191056}
{'[3, 6, 4, 4, 0, 0, 0, 1, 28, 0, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.188414}
{'[3, 6, 4, 4, 0, 0, 0, 1, 28, 0, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.191982}
{'[3, 6, 4, 4, 0, 0, 0, 1, 28, 0, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.190651}
{'[3, 6, 4, 4, 0, 0, 0, 1, 28, 0, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.194402}
{'[3, 6, 4, 4, 0, 0, 0, 1, 28, 0, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.197663}
{'[3, 6, 4, 4, 0, 0, 0, 1, 28, 0, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.196068}
{'[3, 6, 4, 4, 0, 0, 0, 1, 28, 0, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.197609}
{'[3, 6, 4, 4, 0, 0, 0, 1, 28, 0, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.197592}
{'[3, 6, 4, 4, 0, 0, 0, 1, 28, 0, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.19449}
{'[3, 6, 4, 4, 0, 0, 0, 1, 28, 0, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.186112}
{'[3, 6, 4, 4, 0, 0, 0, 1, 28, 0, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.186181}
{'[3, 6, 4, 4, 0, 0, 0, 1, 28, 0, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.191985}
{'[3, 6, 4, 4, 0, 0, 0, 1, 28, 0, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.191952}
{'[3, 6, 4, 4, 0, 0, 0, 1, 28, 0, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.194387}
{'[3, 6, 4, 4, 0, 0, 0, 1, 28, 0, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.194835}
{'[3, 6, 4, 4, 0, 0, 0, 1, 28, 0, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.191008}
{'[3, 6, 4, 4, 0, 0, 0, 1, 28, 0, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.190838}
{'[3, 6, 4, 4, 0, 0, 0, 1, 28, 0, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.191952}

out:
 ["{'[3, 6, 4, 4, 0, 0, 0, 1, 28, 0, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.222904}", "{'[3, 6, 4, 4, 0, 0, 0, 1, 28, 0, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.213584}", "{'[3, 6, 4, 4, 0, 0, 0, 1, 28, 0, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.195816}", "{'[3, 6, 4, 4, 0, 0, 0, 1, 28, 0, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.1929}", "{'[3, 6, 4, 4, 0, 0, 0, 1, 28, 0, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.192352}", "{'[3, 6, 4, 4, 0, 0, 0, 1, 28, 0, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.196176}", "{'[3, 6, 4, 4, 0, 0, 0, 1, 28, 0, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.191261}", "{'[3, 6, 4, 4, 0, 0, 0, 1, 28, 0, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.191769}", "{'[3, 6, 4, 4, 0, 0, 0, 1, 28, 0, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.192456}", "{'[3, 6, 4, 4, 0, 0, 0, 1, 28, 0, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.192503}", "{'[3, 6, 4, 4, 0, 0, 0, 1, 28, 0, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.192447}", "{'[3, 6, 4, 4, 0, 0, 0, 1, 28, 0, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.191056}", "{'[3, 6, 4, 4, 0, 0, 0, 1, 28, 0, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.188414}", "{'[3, 6, 4, 4, 0, 0, 0, 1, 28, 0, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.191982}", "{'[3, 6, 4, 4, 0, 0, 0, 1, 28, 0, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.190651}", "{'[3, 6, 4, 4, 0, 0, 0, 1, 28, 0, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.194402}", "{'[3, 6, 4, 4, 0, 0, 0, 1, 28, 0, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.197663}", "{'[3, 6, 4, 4, 0, 0, 0, 1, 28, 0, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.196068}", "{'[3, 6, 4, 4, 0, 0, 0, 1, 28, 0, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.197609}", "{'[3, 6, 4, 4, 0, 0, 0, 1, 28, 0, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.197592}", "{'[3, 6, 4, 4, 0, 0, 0, 1, 28, 0, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.19449}", "{'[3, 6, 4, 4, 0, 0, 0, 1, 28, 0, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.186112}", "{'[3, 6, 4, 4, 0, 0, 0, 1, 28, 0, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.186181}", "{'[3, 6, 4, 4, 0, 0, 0, 1, 28, 0, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.191985}", "{'[3, 6, 4, 4, 0, 0, 0, 1, 28, 0, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.191952}", "{'[3, 6, 4, 4, 0, 0, 0, 1, 28, 0, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.194387}", "{'[3, 6, 4, 4, 0, 0, 0, 1, 28, 0, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.194835}", "{'[3, 6, 4, 4, 0, 0, 0, 1, 28, 0, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.191008}", "{'[3, 6, 4, 4, 0, 0, 0, 1, 28, 0, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.190838}", "{'[3, 6, 4, 4, 0, 0, 0, 1, 28, 0, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.191952}"]
returning from 'run': {'[3, 6, 4, 4, 0, 0, 0, 1, 28, 0, 29, 0, 0, 1, 1, 1, 1, 1]': ([0.222904, 0.213584, 0.195816, 0.1929, 0.192352, 0.196176, 0.191261, 0.191769, 0.192456, 0.192503, 0.192447, 0.191056, 0.188414, 0.191982, 0.190651, 0.194402, 0.197663, 0.196068, 0.197609, 0.197592, 0.19449, 0.186112, 0.186181, 0.191985, 0.191952, 0.194387, 0.194835, 0.191008, 0.190838, 0.191952], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 6, 4, 4, 0, 0, 0, 1, 28, 0, 29, 0, 0, 1, 1, 1, 1, 1]': ([0.222904, 0.213584, 0.195816, 0.1929, 0.192352, 0.196176, 0.191261, 0.191769, 0.192456, 0.192503, 0.192447, 0.191056, 0.188414, 0.191982, 0.190651, 0.194402, 0.197663, 0.196068, 0.197609, 0.197592, 0.19449, 0.186112, 0.186181, 0.191985, 0.191952, 0.194387, 0.194835, 0.191008, 0.190838, 0.191952], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	122
        Max loop nest depth: 	6
        Additions: 		8653
        Multiplications: 	2560
        Divisions: 		0
        Logical: 		0
        Reads: 			16698
        Writes: 		3264
        Comparisons:		122
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest34.exe __orio_perftest34.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest34.exe  
Program Test Output: 
{'[1, 2, 4, 6, 0, 3, 0, 1, 28, 22, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.128703}
{'[1, 2, 4, 6, 0, 3, 0, 1, 28, 22, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.128653}
{'[1, 2, 4, 6, 0, 3, 0, 1, 28, 22, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.1168}
{'[1, 2, 4, 6, 0, 3, 0, 1, 28, 22, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.114243}
{'[1, 2, 4, 6, 0, 3, 0, 1, 28, 22, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.114151}
{'[1, 2, 4, 6, 0, 3, 0, 1, 28, 22, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.114206}
{'[1, 2, 4, 6, 0, 3, 0, 1, 28, 22, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.114164}
{'[1, 2, 4, 6, 0, 3, 0, 1, 28, 22, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.115176}
{'[1, 2, 4, 6, 0, 3, 0, 1, 28, 22, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.115342}
{'[1, 2, 4, 6, 0, 3, 0, 1, 28, 22, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.115175}
{'[1, 2, 4, 6, 0, 3, 0, 1, 28, 22, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.115138}
{'[1, 2, 4, 6, 0, 3, 0, 1, 28, 22, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.115144}
{'[1, 2, 4, 6, 0, 3, 0, 1, 28, 22, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.111812}
{'[1, 2, 4, 6, 0, 3, 0, 1, 28, 22, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.111436}
{'[1, 2, 4, 6, 0, 3, 0, 1, 28, 22, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.111387}
{'[1, 2, 4, 6, 0, 3, 0, 1, 28, 22, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.11199}
{'[1, 2, 4, 6, 0, 3, 0, 1, 28, 22, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.115211}
{'[1, 2, 4, 6, 0, 3, 0, 1, 28, 22, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.11513}
{'[1, 2, 4, 6, 0, 3, 0, 1, 28, 22, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.114615}
{'[1, 2, 4, 6, 0, 3, 0, 1, 28, 22, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.111772}
{'[1, 2, 4, 6, 0, 3, 0, 1, 28, 22, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.113579}
{'[1, 2, 4, 6, 0, 3, 0, 1, 28, 22, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.114901}
{'[1, 2, 4, 6, 0, 3, 0, 1, 28, 22, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.114458}
{'[1, 2, 4, 6, 0, 3, 0, 1, 28, 22, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.114246}
{'[1, 2, 4, 6, 0, 3, 0, 1, 28, 22, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.114257}
{'[1, 2, 4, 6, 0, 3, 0, 1, 28, 22, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.114161}
{'[1, 2, 4, 6, 0, 3, 0, 1, 28, 22, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.114168}
{'[1, 2, 4, 6, 0, 3, 0, 1, 28, 22, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.114246}
{'[1, 2, 4, 6, 0, 3, 0, 1, 28, 22, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.114203}
{'[1, 2, 4, 6, 0, 3, 0, 1, 28, 22, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.114313}

out:
 ["{'[1, 2, 4, 6, 0, 3, 0, 1, 28, 22, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.128703}", "{'[1, 2, 4, 6, 0, 3, 0, 1, 28, 22, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.128653}", "{'[1, 2, 4, 6, 0, 3, 0, 1, 28, 22, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.1168}", "{'[1, 2, 4, 6, 0, 3, 0, 1, 28, 22, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.114243}", "{'[1, 2, 4, 6, 0, 3, 0, 1, 28, 22, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.114151}", "{'[1, 2, 4, 6, 0, 3, 0, 1, 28, 22, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.114206}", "{'[1, 2, 4, 6, 0, 3, 0, 1, 28, 22, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.114164}", "{'[1, 2, 4, 6, 0, 3, 0, 1, 28, 22, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.115176}", "{'[1, 2, 4, 6, 0, 3, 0, 1, 28, 22, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.115342}", "{'[1, 2, 4, 6, 0, 3, 0, 1, 28, 22, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.115175}", "{'[1, 2, 4, 6, 0, 3, 0, 1, 28, 22, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.115138}", "{'[1, 2, 4, 6, 0, 3, 0, 1, 28, 22, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.115144}", "{'[1, 2, 4, 6, 0, 3, 0, 1, 28, 22, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.111812}", "{'[1, 2, 4, 6, 0, 3, 0, 1, 28, 22, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.111436}", "{'[1, 2, 4, 6, 0, 3, 0, 1, 28, 22, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.111387}", "{'[1, 2, 4, 6, 0, 3, 0, 1, 28, 22, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.11199}", "{'[1, 2, 4, 6, 0, 3, 0, 1, 28, 22, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.115211}", "{'[1, 2, 4, 6, 0, 3, 0, 1, 28, 22, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.11513}", "{'[1, 2, 4, 6, 0, 3, 0, 1, 28, 22, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.114615}", "{'[1, 2, 4, 6, 0, 3, 0, 1, 28, 22, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.111772}", "{'[1, 2, 4, 6, 0, 3, 0, 1, 28, 22, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.113579}", "{'[1, 2, 4, 6, 0, 3, 0, 1, 28, 22, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.114901}", "{'[1, 2, 4, 6, 0, 3, 0, 1, 28, 22, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.114458}", "{'[1, 2, 4, 6, 0, 3, 0, 1, 28, 22, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.114246}", "{'[1, 2, 4, 6, 0, 3, 0, 1, 28, 22, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.114257}", "{'[1, 2, 4, 6, 0, 3, 0, 1, 28, 22, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.114161}", "{'[1, 2, 4, 6, 0, 3, 0, 1, 28, 22, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.114168}", "{'[1, 2, 4, 6, 0, 3, 0, 1, 28, 22, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.114246}", "{'[1, 2, 4, 6, 0, 3, 0, 1, 28, 22, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.114203}", "{'[1, 2, 4, 6, 0, 3, 0, 1, 28, 22, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.114313}"]
returning from 'run': {'[1, 2, 4, 6, 0, 3, 0, 1, 28, 22, 0, 29, 1, 1, 0, 1, 1, 0]': ([0.128703, 0.128653, 0.1168, 0.114243, 0.114151, 0.114206, 0.114164, 0.115176, 0.115342, 0.115175, 0.115138, 0.115144, 0.111812, 0.111436, 0.111387, 0.11199, 0.115211, 0.11513, 0.114615, 0.111772, 0.113579, 0.114901, 0.114458, 0.114246, 0.114257, 0.114161, 0.114168, 0.114246, 0.114203, 0.114313], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 2, 4, 6, 0, 3, 0, 1, 28, 22, 0, 29, 1, 1, 0, 1, 1, 0]': ([0.128703, 0.128653, 0.1168, 0.114243, 0.114151, 0.114206, 0.114164, 0.115176, 0.115342, 0.115175, 0.115138, 0.115144, 0.111812, 0.111436, 0.111387, 0.11199, 0.115211, 0.11513, 0.114615, 0.111772, 0.113579, 0.114901, 0.114458, 0.114246, 0.114257, 0.114161, 0.114168, 0.114246, 0.114203, 0.114313], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = iii
Code stats:
        Number of loops: 	17
        Max loop nest depth: 	4
        Additions: 		7986
        Multiplications: 	2378
        Divisions: 		0
        Logical: 		0
        Reads: 			12151
        Writes: 		1294
        Comparisons:		17
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest35.exe __orio_perftest35.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest35.exe  
Program Test Output: 
{'[5, 0, 0, 3, 5, 4, 0, 0, 27, 27, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.177688}
{'[5, 0, 0, 3, 5, 4, 0, 0, 27, 27, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.178097}
{'[5, 0, 0, 3, 5, 4, 0, 0, 27, 27, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.1729}
{'[5, 0, 0, 3, 5, 4, 0, 0, 27, 27, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.163142}
{'[5, 0, 0, 3, 5, 4, 0, 0, 27, 27, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.162954}
{'[5, 0, 0, 3, 5, 4, 0, 0, 27, 27, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.162415}
{'[5, 0, 0, 3, 5, 4, 0, 0, 27, 27, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.163116}
{'[5, 0, 0, 3, 5, 4, 0, 0, 27, 27, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.163279}
{'[5, 0, 0, 3, 5, 4, 0, 0, 27, 27, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.163479}
{'[5, 0, 0, 3, 5, 4, 0, 0, 27, 27, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.163501}
{'[5, 0, 0, 3, 5, 4, 0, 0, 27, 27, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.163242}
{'[5, 0, 0, 3, 5, 4, 0, 0, 27, 27, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.162441}
{'[5, 0, 0, 3, 5, 4, 0, 0, 27, 27, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.162988}
{'[5, 0, 0, 3, 5, 4, 0, 0, 27, 27, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.163148}
{'[5, 0, 0, 3, 5, 4, 0, 0, 27, 27, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.163463}
{'[5, 0, 0, 3, 5, 4, 0, 0, 27, 27, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.163145}
{'[5, 0, 0, 3, 5, 4, 0, 0, 27, 27, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.163314}
{'[5, 0, 0, 3, 5, 4, 0, 0, 27, 27, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.163573}
{'[5, 0, 0, 3, 5, 4, 0, 0, 27, 27, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.163041}
{'[5, 0, 0, 3, 5, 4, 0, 0, 27, 27, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.163147}
{'[5, 0, 0, 3, 5, 4, 0, 0, 27, 27, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.16352}
{'[5, 0, 0, 3, 5, 4, 0, 0, 27, 27, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.163251}
{'[5, 0, 0, 3, 5, 4, 0, 0, 27, 27, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.163213}
{'[5, 0, 0, 3, 5, 4, 0, 0, 27, 27, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.160857}
{'[5, 0, 0, 3, 5, 4, 0, 0, 27, 27, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.163363}
{'[5, 0, 0, 3, 5, 4, 0, 0, 27, 27, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.163334}
{'[5, 0, 0, 3, 5, 4, 0, 0, 27, 27, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.163353}
{'[5, 0, 0, 3, 5, 4, 0, 0, 27, 27, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.163175}
{'[5, 0, 0, 3, 5, 4, 0, 0, 27, 27, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.160696}
{'[5, 0, 0, 3, 5, 4, 0, 0, 27, 27, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.160663}

out:
 ["{'[5, 0, 0, 3, 5, 4, 0, 0, 27, 27, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.177688}", "{'[5, 0, 0, 3, 5, 4, 0, 0, 27, 27, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.178097}", "{'[5, 0, 0, 3, 5, 4, 0, 0, 27, 27, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.1729}", "{'[5, 0, 0, 3, 5, 4, 0, 0, 27, 27, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.163142}", "{'[5, 0, 0, 3, 5, 4, 0, 0, 27, 27, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.162954}", "{'[5, 0, 0, 3, 5, 4, 0, 0, 27, 27, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.162415}", "{'[5, 0, 0, 3, 5, 4, 0, 0, 27, 27, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.163116}", "{'[5, 0, 0, 3, 5, 4, 0, 0, 27, 27, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.163279}", "{'[5, 0, 0, 3, 5, 4, 0, 0, 27, 27, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.163479}", "{'[5, 0, 0, 3, 5, 4, 0, 0, 27, 27, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.163501}", "{'[5, 0, 0, 3, 5, 4, 0, 0, 27, 27, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.163242}", "{'[5, 0, 0, 3, 5, 4, 0, 0, 27, 27, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.162441}", "{'[5, 0, 0, 3, 5, 4, 0, 0, 27, 27, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.162988}", "{'[5, 0, 0, 3, 5, 4, 0, 0, 27, 27, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.163148}", "{'[5, 0, 0, 3, 5, 4, 0, 0, 27, 27, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.163463}", "{'[5, 0, 0, 3, 5, 4, 0, 0, 27, 27, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.163145}", "{'[5, 0, 0, 3, 5, 4, 0, 0, 27, 27, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.163314}", "{'[5, 0, 0, 3, 5, 4, 0, 0, 27, 27, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.163573}", "{'[5, 0, 0, 3, 5, 4, 0, 0, 27, 27, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.163041}", "{'[5, 0, 0, 3, 5, 4, 0, 0, 27, 27, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.163147}", "{'[5, 0, 0, 3, 5, 4, 0, 0, 27, 27, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.16352}", "{'[5, 0, 0, 3, 5, 4, 0, 0, 27, 27, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.163251}", "{'[5, 0, 0, 3, 5, 4, 0, 0, 27, 27, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.163213}", "{'[5, 0, 0, 3, 5, 4, 0, 0, 27, 27, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.160857}", "{'[5, 0, 0, 3, 5, 4, 0, 0, 27, 27, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.163363}", "{'[5, 0, 0, 3, 5, 4, 0, 0, 27, 27, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.163334}", "{'[5, 0, 0, 3, 5, 4, 0, 0, 27, 27, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.163353}", "{'[5, 0, 0, 3, 5, 4, 0, 0, 27, 27, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.163175}", "{'[5, 0, 0, 3, 5, 4, 0, 0, 27, 27, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.160696}", "{'[5, 0, 0, 3, 5, 4, 0, 0, 27, 27, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.160663}"]
returning from 'run': {'[5, 0, 0, 3, 5, 4, 0, 0, 27, 27, 6, 0, 0, 0, 2, 0, 1, 1]': ([0.177688, 0.178097, 0.1729, 0.163142, 0.162954, 0.162415, 0.163116, 0.163279, 0.163479, 0.163501, 0.163242, 0.162441, 0.162988, 0.163148, 0.163463, 0.163145, 0.163314, 0.163573, 0.163041, 0.163147, 0.16352, 0.163251, 0.163213, 0.160857, 0.163363, 0.163334, 0.163353, 0.163175, 0.160696, 0.160663], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 0, 0, 3, 5, 4, 0, 0, 27, 27, 6, 0, 0, 0, 2, 0, 1, 1]': ([0.177688, 0.178097, 0.1729, 0.163142, 0.162954, 0.162415, 0.163116, 0.163279, 0.163479, 0.163501, 0.163242, 0.162441, 0.162988, 0.163148, 0.163463, 0.163145, 0.163314, 0.163573, 0.163041, 0.163147, 0.16352, 0.163251, 0.163213, 0.160857, 0.163363, 0.163334, 0.163353, 0.163175, 0.160696, 0.160663], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	23
        Max loop nest depth: 	5
        Additions: 		1352
        Multiplications: 	504
        Divisions: 		0
        Logical: 		0
        Reads: 			3145
        Writes: 		717
        Comparisons:		23
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest36.exe __orio_perftest36.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest36.exe  
Program Test Output: 
{'[0, 6, 4, 2, 4, 5, 0, 0, 17, 2, 0, 28, 0, 0, 2, 1, 1, 1]' : 0.100073}
{'[0, 6, 4, 2, 4, 5, 0, 0, 17, 2, 0, 28, 0, 0, 2, 1, 1, 1]' : 0.0998979}
{'[0, 6, 4, 2, 4, 5, 0, 0, 17, 2, 0, 28, 0, 0, 2, 1, 1, 1]' : 0.0996199}
{'[0, 6, 4, 2, 4, 5, 0, 0, 17, 2, 0, 28, 0, 0, 2, 1, 1, 1]' : 0.0983808}
{'[0, 6, 4, 2, 4, 5, 0, 0, 17, 2, 0, 28, 0, 0, 2, 1, 1, 1]' : 0.0971529}
{'[0, 6, 4, 2, 4, 5, 0, 0, 17, 2, 0, 28, 0, 0, 2, 1, 1, 1]' : 0.0996411}
{'[0, 6, 4, 2, 4, 5, 0, 0, 17, 2, 0, 28, 0, 0, 2, 1, 1, 1]' : 0.103489}
{'[0, 6, 4, 2, 4, 5, 0, 0, 17, 2, 0, 28, 0, 0, 2, 1, 1, 1]' : 0.10352}
{'[0, 6, 4, 2, 4, 5, 0, 0, 17, 2, 0, 28, 0, 0, 2, 1, 1, 1]' : 0.103551}
{'[0, 6, 4, 2, 4, 5, 0, 0, 17, 2, 0, 28, 0, 0, 2, 1, 1, 1]' : 0.103585}
{'[0, 6, 4, 2, 4, 5, 0, 0, 17, 2, 0, 28, 0, 0, 2, 1, 1, 1]' : 0.103329}
{'[0, 6, 4, 2, 4, 5, 0, 0, 17, 2, 0, 28, 0, 0, 2, 1, 1, 1]' : 0.101338}
{'[0, 6, 4, 2, 4, 5, 0, 0, 17, 2, 0, 28, 0, 0, 2, 1, 1, 1]' : 0.101019}
{'[0, 6, 4, 2, 4, 5, 0, 0, 17, 2, 0, 28, 0, 0, 2, 1, 1, 1]' : 0.100599}
{'[0, 6, 4, 2, 4, 5, 0, 0, 17, 2, 0, 28, 0, 0, 2, 1, 1, 1]' : 0.0983088}
{'[0, 6, 4, 2, 4, 5, 0, 0, 17, 2, 0, 28, 0, 0, 2, 1, 1, 1]' : 0.098969}
{'[0, 6, 4, 2, 4, 5, 0, 0, 17, 2, 0, 28, 0, 0, 2, 1, 1, 1]' : 0.101074}
{'[0, 6, 4, 2, 4, 5, 0, 0, 17, 2, 0, 28, 0, 0, 2, 1, 1, 1]' : 0.101359}
{'[0, 6, 4, 2, 4, 5, 0, 0, 17, 2, 0, 28, 0, 0, 2, 1, 1, 1]' : 0.101088}
{'[0, 6, 4, 2, 4, 5, 0, 0, 17, 2, 0, 28, 0, 0, 2, 1, 1, 1]' : 0.101457}
{'[0, 6, 4, 2, 4, 5, 0, 0, 17, 2, 0, 28, 0, 0, 2, 1, 1, 1]' : 0.101326}
{'[0, 6, 4, 2, 4, 5, 0, 0, 17, 2, 0, 28, 0, 0, 2, 1, 1, 1]' : 0.101317}
{'[0, 6, 4, 2, 4, 5, 0, 0, 17, 2, 0, 28, 0, 0, 2, 1, 1, 1]' : 0.10135}
{'[0, 6, 4, 2, 4, 5, 0, 0, 17, 2, 0, 28, 0, 0, 2, 1, 1, 1]' : 0.101082}
{'[0, 6, 4, 2, 4, 5, 0, 0, 17, 2, 0, 28, 0, 0, 2, 1, 1, 1]' : 0.099076}
{'[0, 6, 4, 2, 4, 5, 0, 0, 17, 2, 0, 28, 0, 0, 2, 1, 1, 1]' : 0.099164}
{'[0, 6, 4, 2, 4, 5, 0, 0, 17, 2, 0, 28, 0, 0, 2, 1, 1, 1]' : 0.101045}
{'[0, 6, 4, 2, 4, 5, 0, 0, 17, 2, 0, 28, 0, 0, 2, 1, 1, 1]' : 0.101161}
{'[0, 6, 4, 2, 4, 5, 0, 0, 17, 2, 0, 28, 0, 0, 2, 1, 1, 1]' : 0.101124}
{'[0, 6, 4, 2, 4, 5, 0, 0, 17, 2, 0, 28, 0, 0, 2, 1, 1, 1]' : 0.101166}

out:
 ["{'[0, 6, 4, 2, 4, 5, 0, 0, 17, 2, 0, 28, 0, 0, 2, 1, 1, 1]' : 0.100073}", "{'[0, 6, 4, 2, 4, 5, 0, 0, 17, 2, 0, 28, 0, 0, 2, 1, 1, 1]' : 0.0998979}", "{'[0, 6, 4, 2, 4, 5, 0, 0, 17, 2, 0, 28, 0, 0, 2, 1, 1, 1]' : 0.0996199}", "{'[0, 6, 4, 2, 4, 5, 0, 0, 17, 2, 0, 28, 0, 0, 2, 1, 1, 1]' : 0.0983808}", "{'[0, 6, 4, 2, 4, 5, 0, 0, 17, 2, 0, 28, 0, 0, 2, 1, 1, 1]' : 0.0971529}", "{'[0, 6, 4, 2, 4, 5, 0, 0, 17, 2, 0, 28, 0, 0, 2, 1, 1, 1]' : 0.0996411}", "{'[0, 6, 4, 2, 4, 5, 0, 0, 17, 2, 0, 28, 0, 0, 2, 1, 1, 1]' : 0.103489}", "{'[0, 6, 4, 2, 4, 5, 0, 0, 17, 2, 0, 28, 0, 0, 2, 1, 1, 1]' : 0.10352}", "{'[0, 6, 4, 2, 4, 5, 0, 0, 17, 2, 0, 28, 0, 0, 2, 1, 1, 1]' : 0.103551}", "{'[0, 6, 4, 2, 4, 5, 0, 0, 17, 2, 0, 28, 0, 0, 2, 1, 1, 1]' : 0.103585}", "{'[0, 6, 4, 2, 4, 5, 0, 0, 17, 2, 0, 28, 0, 0, 2, 1, 1, 1]' : 0.103329}", "{'[0, 6, 4, 2, 4, 5, 0, 0, 17, 2, 0, 28, 0, 0, 2, 1, 1, 1]' : 0.101338}", "{'[0, 6, 4, 2, 4, 5, 0, 0, 17, 2, 0, 28, 0, 0, 2, 1, 1, 1]' : 0.101019}", "{'[0, 6, 4, 2, 4, 5, 0, 0, 17, 2, 0, 28, 0, 0, 2, 1, 1, 1]' : 0.100599}", "{'[0, 6, 4, 2, 4, 5, 0, 0, 17, 2, 0, 28, 0, 0, 2, 1, 1, 1]' : 0.0983088}", "{'[0, 6, 4, 2, 4, 5, 0, 0, 17, 2, 0, 28, 0, 0, 2, 1, 1, 1]' : 0.098969}", "{'[0, 6, 4, 2, 4, 5, 0, 0, 17, 2, 0, 28, 0, 0, 2, 1, 1, 1]' : 0.101074}", "{'[0, 6, 4, 2, 4, 5, 0, 0, 17, 2, 0, 28, 0, 0, 2, 1, 1, 1]' : 0.101359}", "{'[0, 6, 4, 2, 4, 5, 0, 0, 17, 2, 0, 28, 0, 0, 2, 1, 1, 1]' : 0.101088}", "{'[0, 6, 4, 2, 4, 5, 0, 0, 17, 2, 0, 28, 0, 0, 2, 1, 1, 1]' : 0.101457}", "{'[0, 6, 4, 2, 4, 5, 0, 0, 17, 2, 0, 28, 0, 0, 2, 1, 1, 1]' : 0.101326}", "{'[0, 6, 4, 2, 4, 5, 0, 0, 17, 2, 0, 28, 0, 0, 2, 1, 1, 1]' : 0.101317}", "{'[0, 6, 4, 2, 4, 5, 0, 0, 17, 2, 0, 28, 0, 0, 2, 1, 1, 1]' : 0.10135}", "{'[0, 6, 4, 2, 4, 5, 0, 0, 17, 2, 0, 28, 0, 0, 2, 1, 1, 1]' : 0.101082}", "{'[0, 6, 4, 2, 4, 5, 0, 0, 17, 2, 0, 28, 0, 0, 2, 1, 1, 1]' : 0.099076}", "{'[0, 6, 4, 2, 4, 5, 0, 0, 17, 2, 0, 28, 0, 0, 2, 1, 1, 1]' : 0.099164}", "{'[0, 6, 4, 2, 4, 5, 0, 0, 17, 2, 0, 28, 0, 0, 2, 1, 1, 1]' : 0.101045}", "{'[0, 6, 4, 2, 4, 5, 0, 0, 17, 2, 0, 28, 0, 0, 2, 1, 1, 1]' : 0.101161}", "{'[0, 6, 4, 2, 4, 5, 0, 0, 17, 2, 0, 28, 0, 0, 2, 1, 1, 1]' : 0.101124}", "{'[0, 6, 4, 2, 4, 5, 0, 0, 17, 2, 0, 28, 0, 0, 2, 1, 1, 1]' : 0.101166}"]
returning from 'run': {'[0, 6, 4, 2, 4, 5, 0, 0, 17, 2, 0, 28, 0, 0, 2, 1, 1, 1]': ([0.100073, 0.0998979, 0.0996199, 0.0983808, 0.0971529, 0.0996411, 0.103489, 0.10352, 0.103551, 0.103585, 0.103329, 0.101338, 0.101019, 0.100599, 0.0983088, 0.098969, 0.101074, 0.101359, 0.101088, 0.101457, 0.101326, 0.101317, 0.10135, 0.101082, 0.099076, 0.099164, 0.101045, 0.101161, 0.101124, 0.101166], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 4, 2, 4, 5, 0, 0, 17, 2, 0, 28, 0, 0, 2, 1, 1, 1]': ([0.100073, 0.0998979, 0.0996199, 0.0983808, 0.0971529, 0.0996411, 0.103489, 0.10352, 0.103551, 0.103585, 0.103329, 0.101338, 0.101019, 0.100599, 0.0983088, 0.098969, 0.101074, 0.101359, 0.101088, 0.101457, 0.101326, 0.101317, 0.10135, 0.101082, 0.099076, 0.099164, 0.101045, 0.101161, 0.101124, 0.101166], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	3
        Additions: 		1160
        Multiplications: 	360
        Divisions: 		0
        Logical: 		0
        Reads: 			1966
        Writes: 		241
        Comparisons:		16
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest37.exe __orio_perftest37.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest37.exe  
Program Test Output: 
{'[0, 1, 1, 0, 0, 0, 0, 0, 14, 8, 7, 0, 0, 0, 1, 0, 1, 0]' : 0.128433}
{'[0, 1, 1, 0, 0, 0, 0, 0, 14, 8, 7, 0, 0, 0, 1, 0, 1, 0]' : 0.128394}
{'[0, 1, 1, 0, 0, 0, 0, 0, 14, 8, 7, 0, 0, 0, 1, 0, 1, 0]' : 0.128309}
{'[0, 1, 1, 0, 0, 0, 0, 0, 14, 8, 7, 0, 0, 0, 1, 0, 1, 0]' : 0.127483}
{'[0, 1, 1, 0, 0, 0, 0, 0, 14, 8, 7, 0, 0, 0, 1, 0, 1, 0]' : 0.110791}
{'[0, 1, 1, 0, 0, 0, 0, 0, 14, 8, 7, 0, 0, 0, 1, 0, 1, 0]' : 0.109459}
{'[0, 1, 1, 0, 0, 0, 0, 0, 14, 8, 7, 0, 0, 0, 1, 0, 1, 0]' : 0.11358}
{'[0, 1, 1, 0, 0, 0, 0, 0, 14, 8, 7, 0, 0, 0, 1, 0, 1, 0]' : 0.111743}
{'[0, 1, 1, 0, 0, 0, 0, 0, 14, 8, 7, 0, 0, 0, 1, 0, 1, 0]' : 0.111635}
{'[0, 1, 1, 0, 0, 0, 0, 0, 14, 8, 7, 0, 0, 0, 1, 0, 1, 0]' : 0.111831}
{'[0, 1, 1, 0, 0, 0, 0, 0, 14, 8, 7, 0, 0, 0, 1, 0, 1, 0]' : 0.112014}
{'[0, 1, 1, 0, 0, 0, 0, 0, 14, 8, 7, 0, 0, 0, 1, 0, 1, 0]' : 0.111755}
{'[0, 1, 1, 0, 0, 0, 0, 0, 14, 8, 7, 0, 0, 0, 1, 0, 1, 0]' : 0.110041}
{'[0, 1, 1, 0, 0, 0, 0, 0, 14, 8, 7, 0, 0, 0, 1, 0, 1, 0]' : 0.108388}
{'[0, 1, 1, 0, 0, 0, 0, 0, 14, 8, 7, 0, 0, 0, 1, 0, 1, 0]' : 0.109249}
{'[0, 1, 1, 0, 0, 0, 0, 0, 14, 8, 7, 0, 0, 0, 1, 0, 1, 0]' : 0.113088}
{'[0, 1, 1, 0, 0, 0, 0, 0, 14, 8, 7, 0, 0, 0, 1, 0, 1, 0]' : 0.111676}
{'[0, 1, 1, 0, 0, 0, 0, 0, 14, 8, 7, 0, 0, 0, 1, 0, 1, 0]' : 0.111672}
{'[0, 1, 1, 0, 0, 0, 0, 0, 14, 8, 7, 0, 0, 0, 1, 0, 1, 0]' : 0.111698}
{'[0, 1, 1, 0, 0, 0, 0, 0, 14, 8, 7, 0, 0, 0, 1, 0, 1, 0]' : 0.111912}
{'[0, 1, 1, 0, 0, 0, 0, 0, 14, 8, 7, 0, 0, 0, 1, 0, 1, 0]' : 0.111665}
{'[0, 1, 1, 0, 0, 0, 0, 0, 14, 8, 7, 0, 0, 0, 1, 0, 1, 0]' : 0.11176}
{'[0, 1, 1, 0, 0, 0, 0, 0, 14, 8, 7, 0, 0, 0, 1, 0, 1, 0]' : 0.111743}
{'[0, 1, 1, 0, 0, 0, 0, 0, 14, 8, 7, 0, 0, 0, 1, 0, 1, 0]' : 0.109638}
{'[0, 1, 1, 0, 0, 0, 0, 0, 14, 8, 7, 0, 0, 0, 1, 0, 1, 0]' : 0.111942}
{'[0, 1, 1, 0, 0, 0, 0, 0, 14, 8, 7, 0, 0, 0, 1, 0, 1, 0]' : 0.11181}
{'[0, 1, 1, 0, 0, 0, 0, 0, 14, 8, 7, 0, 0, 0, 1, 0, 1, 0]' : 0.111674}
{'[0, 1, 1, 0, 0, 0, 0, 0, 14, 8, 7, 0, 0, 0, 1, 0, 1, 0]' : 0.111702}
{'[0, 1, 1, 0, 0, 0, 0, 0, 14, 8, 7, 0, 0, 0, 1, 0, 1, 0]' : 0.111945}
{'[0, 1, 1, 0, 0, 0, 0, 0, 14, 8, 7, 0, 0, 0, 1, 0, 1, 0]' : 0.111647}

out:
 ["{'[0, 1, 1, 0, 0, 0, 0, 0, 14, 8, 7, 0, 0, 0, 1, 0, 1, 0]' : 0.128433}", "{'[0, 1, 1, 0, 0, 0, 0, 0, 14, 8, 7, 0, 0, 0, 1, 0, 1, 0]' : 0.128394}", "{'[0, 1, 1, 0, 0, 0, 0, 0, 14, 8, 7, 0, 0, 0, 1, 0, 1, 0]' : 0.128309}", "{'[0, 1, 1, 0, 0, 0, 0, 0, 14, 8, 7, 0, 0, 0, 1, 0, 1, 0]' : 0.127483}", "{'[0, 1, 1, 0, 0, 0, 0, 0, 14, 8, 7, 0, 0, 0, 1, 0, 1, 0]' : 0.110791}", "{'[0, 1, 1, 0, 0, 0, 0, 0, 14, 8, 7, 0, 0, 0, 1, 0, 1, 0]' : 0.109459}", "{'[0, 1, 1, 0, 0, 0, 0, 0, 14, 8, 7, 0, 0, 0, 1, 0, 1, 0]' : 0.11358}", "{'[0, 1, 1, 0, 0, 0, 0, 0, 14, 8, 7, 0, 0, 0, 1, 0, 1, 0]' : 0.111743}", "{'[0, 1, 1, 0, 0, 0, 0, 0, 14, 8, 7, 0, 0, 0, 1, 0, 1, 0]' : 0.111635}", "{'[0, 1, 1, 0, 0, 0, 0, 0, 14, 8, 7, 0, 0, 0, 1, 0, 1, 0]' : 0.111831}", "{'[0, 1, 1, 0, 0, 0, 0, 0, 14, 8, 7, 0, 0, 0, 1, 0, 1, 0]' : 0.112014}", "{'[0, 1, 1, 0, 0, 0, 0, 0, 14, 8, 7, 0, 0, 0, 1, 0, 1, 0]' : 0.111755}", "{'[0, 1, 1, 0, 0, 0, 0, 0, 14, 8, 7, 0, 0, 0, 1, 0, 1, 0]' : 0.110041}", "{'[0, 1, 1, 0, 0, 0, 0, 0, 14, 8, 7, 0, 0, 0, 1, 0, 1, 0]' : 0.108388}", "{'[0, 1, 1, 0, 0, 0, 0, 0, 14, 8, 7, 0, 0, 0, 1, 0, 1, 0]' : 0.109249}", "{'[0, 1, 1, 0, 0, 0, 0, 0, 14, 8, 7, 0, 0, 0, 1, 0, 1, 0]' : 0.113088}", "{'[0, 1, 1, 0, 0, 0, 0, 0, 14, 8, 7, 0, 0, 0, 1, 0, 1, 0]' : 0.111676}", "{'[0, 1, 1, 0, 0, 0, 0, 0, 14, 8, 7, 0, 0, 0, 1, 0, 1, 0]' : 0.111672}", "{'[0, 1, 1, 0, 0, 0, 0, 0, 14, 8, 7, 0, 0, 0, 1, 0, 1, 0]' : 0.111698}", "{'[0, 1, 1, 0, 0, 0, 0, 0, 14, 8, 7, 0, 0, 0, 1, 0, 1, 0]' : 0.111912}", "{'[0, 1, 1, 0, 0, 0, 0, 0, 14, 8, 7, 0, 0, 0, 1, 0, 1, 0]' : 0.111665}", "{'[0, 1, 1, 0, 0, 0, 0, 0, 14, 8, 7, 0, 0, 0, 1, 0, 1, 0]' : 0.11176}", "{'[0, 1, 1, 0, 0, 0, 0, 0, 14, 8, 7, 0, 0, 0, 1, 0, 1, 0]' : 0.111743}", "{'[0, 1, 1, 0, 0, 0, 0, 0, 14, 8, 7, 0, 0, 0, 1, 0, 1, 0]' : 0.109638}", "{'[0, 1, 1, 0, 0, 0, 0, 0, 14, 8, 7, 0, 0, 0, 1, 0, 1, 0]' : 0.111942}", "{'[0, 1, 1, 0, 0, 0, 0, 0, 14, 8, 7, 0, 0, 0, 1, 0, 1, 0]' : 0.11181}", "{'[0, 1, 1, 0, 0, 0, 0, 0, 14, 8, 7, 0, 0, 0, 1, 0, 1, 0]' : 0.111674}", "{'[0, 1, 1, 0, 0, 0, 0, 0, 14, 8, 7, 0, 0, 0, 1, 0, 1, 0]' : 0.111702}", "{'[0, 1, 1, 0, 0, 0, 0, 0, 14, 8, 7, 0, 0, 0, 1, 0, 1, 0]' : 0.111945}", "{'[0, 1, 1, 0, 0, 0, 0, 0, 14, 8, 7, 0, 0, 0, 1, 0, 1, 0]' : 0.111647}"]
returning from 'run': {'[0, 1, 1, 0, 0, 0, 0, 0, 14, 8, 7, 0, 0, 0, 1, 0, 1, 0]': ([0.128433, 0.128394, 0.128309, 0.127483, 0.110791, 0.109459, 0.11358, 0.111743, 0.111635, 0.111831, 0.112014, 0.111755, 0.110041, 0.108388, 0.109249, 0.113088, 0.111676, 0.111672, 0.111698, 0.111912, 0.111665, 0.11176, 0.111743, 0.109638, 0.111942, 0.11181, 0.111674, 0.111702, 0.111945, 0.111647], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 1, 0, 0, 0, 0, 0, 14, 8, 7, 0, 0, 0, 1, 0, 1, 0]': ([0.128433, 0.128394, 0.128309, 0.127483, 0.110791, 0.109459, 0.11358, 0.111743, 0.111635, 0.111831, 0.112014, 0.111755, 0.110041, 0.108388, 0.109249, 0.113088, 0.111676, 0.111672, 0.111698, 0.111912, 0.111665, 0.11176, 0.111743, 0.109638, 0.111942, 0.11181, 0.111674, 0.111702, 0.111945, 0.111647], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		293
        Multiplications: 	86
        Divisions: 		0
        Logical: 		0
        Reads: 			601
        Writes: 		104
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest38.exe __orio_perftest38.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest38.exe  
Program Test Output: 
{'[6, 5, 1, 4, 5, 1, 1, 0, 29, 0, 2, 29, 0, 0, 1, 0, 0, 0]' : 0.3469}
{'[6, 5, 1, 4, 5, 1, 1, 0, 29, 0, 2, 29, 0, 0, 1, 0, 0, 0]' : 0.324683}
{'[6, 5, 1, 4, 5, 1, 1, 0, 29, 0, 2, 29, 0, 0, 1, 0, 0, 0]' : 0.301109}
{'[6, 5, 1, 4, 5, 1, 1, 0, 29, 0, 2, 29, 0, 0, 1, 0, 0, 0]' : 0.308261}
{'[6, 5, 1, 4, 5, 1, 1, 0, 29, 0, 2, 29, 0, 0, 1, 0, 0, 0]' : 0.301958}
{'[6, 5, 1, 4, 5, 1, 1, 0, 29, 0, 2, 29, 0, 0, 1, 0, 0, 0]' : 0.300401}
{'[6, 5, 1, 4, 5, 1, 1, 0, 29, 0, 2, 29, 0, 0, 1, 0, 0, 0]' : 0.30001}
{'[6, 5, 1, 4, 5, 1, 1, 0, 29, 0, 2, 29, 0, 0, 1, 0, 0, 0]' : 0.301602}
{'[6, 5, 1, 4, 5, 1, 1, 0, 29, 0, 2, 29, 0, 0, 1, 0, 0, 0]' : 0.301388}
{'[6, 5, 1, 4, 5, 1, 1, 0, 29, 0, 2, 29, 0, 0, 1, 0, 0, 0]' : 0.299958}
{'[6, 5, 1, 4, 5, 1, 1, 0, 29, 0, 2, 29, 0, 0, 1, 0, 0, 0]' : 0.301379}
{'[6, 5, 1, 4, 5, 1, 1, 0, 29, 0, 2, 29, 0, 0, 1, 0, 0, 0]' : 0.301049}
{'[6, 5, 1, 4, 5, 1, 1, 0, 29, 0, 2, 29, 0, 0, 1, 0, 0, 0]' : 0.298893}
{'[6, 5, 1, 4, 5, 1, 1, 0, 29, 0, 2, 29, 0, 0, 1, 0, 0, 0]' : 0.300367}
{'[6, 5, 1, 4, 5, 1, 1, 0, 29, 0, 2, 29, 0, 0, 1, 0, 0, 0]' : 0.306247}
{'[6, 5, 1, 4, 5, 1, 1, 0, 29, 0, 2, 29, 0, 0, 1, 0, 0, 0]' : 0.300268}
{'[6, 5, 1, 4, 5, 1, 1, 0, 29, 0, 2, 29, 0, 0, 1, 0, 0, 0]' : 0.299837}
{'[6, 5, 1, 4, 5, 1, 1, 0, 29, 0, 2, 29, 0, 0, 1, 0, 0, 0]' : 0.303089}
{'[6, 5, 1, 4, 5, 1, 1, 0, 29, 0, 2, 29, 0, 0, 1, 0, 0, 0]' : 0.310914}
{'[6, 5, 1, 4, 5, 1, 1, 0, 29, 0, 2, 29, 0, 0, 1, 0, 0, 0]' : 0.298195}
{'[6, 5, 1, 4, 5, 1, 1, 0, 29, 0, 2, 29, 0, 0, 1, 0, 0, 0]' : 0.300654}
{'[6, 5, 1, 4, 5, 1, 1, 0, 29, 0, 2, 29, 0, 0, 1, 0, 0, 0]' : 0.306991}
{'[6, 5, 1, 4, 5, 1, 1, 0, 29, 0, 2, 29, 0, 0, 1, 0, 0, 0]' : 0.299287}
{'[6, 5, 1, 4, 5, 1, 1, 0, 29, 0, 2, 29, 0, 0, 1, 0, 0, 0]' : 0.300363}
{'[6, 5, 1, 4, 5, 1, 1, 0, 29, 0, 2, 29, 0, 0, 1, 0, 0, 0]' : 0.301616}
{'[6, 5, 1, 4, 5, 1, 1, 0, 29, 0, 2, 29, 0, 0, 1, 0, 0, 0]' : 0.299821}
{'[6, 5, 1, 4, 5, 1, 1, 0, 29, 0, 2, 29, 0, 0, 1, 0, 0, 0]' : 0.300472}
{'[6, 5, 1, 4, 5, 1, 1, 0, 29, 0, 2, 29, 0, 0, 1, 0, 0, 0]' : 0.300774}
{'[6, 5, 1, 4, 5, 1, 1, 0, 29, 0, 2, 29, 0, 0, 1, 0, 0, 0]' : 0.300457}
{'[6, 5, 1, 4, 5, 1, 1, 0, 29, 0, 2, 29, 0, 0, 1, 0, 0, 0]' : 0.299383}

out:
 ["{'[6, 5, 1, 4, 5, 1, 1, 0, 29, 0, 2, 29, 0, 0, 1, 0, 0, 0]' : 0.3469}", "{'[6, 5, 1, 4, 5, 1, 1, 0, 29, 0, 2, 29, 0, 0, 1, 0, 0, 0]' : 0.324683}", "{'[6, 5, 1, 4, 5, 1, 1, 0, 29, 0, 2, 29, 0, 0, 1, 0, 0, 0]' : 0.301109}", "{'[6, 5, 1, 4, 5, 1, 1, 0, 29, 0, 2, 29, 0, 0, 1, 0, 0, 0]' : 0.308261}", "{'[6, 5, 1, 4, 5, 1, 1, 0, 29, 0, 2, 29, 0, 0, 1, 0, 0, 0]' : 0.301958}", "{'[6, 5, 1, 4, 5, 1, 1, 0, 29, 0, 2, 29, 0, 0, 1, 0, 0, 0]' : 0.300401}", "{'[6, 5, 1, 4, 5, 1, 1, 0, 29, 0, 2, 29, 0, 0, 1, 0, 0, 0]' : 0.30001}", "{'[6, 5, 1, 4, 5, 1, 1, 0, 29, 0, 2, 29, 0, 0, 1, 0, 0, 0]' : 0.301602}", "{'[6, 5, 1, 4, 5, 1, 1, 0, 29, 0, 2, 29, 0, 0, 1, 0, 0, 0]' : 0.301388}", "{'[6, 5, 1, 4, 5, 1, 1, 0, 29, 0, 2, 29, 0, 0, 1, 0, 0, 0]' : 0.299958}", "{'[6, 5, 1, 4, 5, 1, 1, 0, 29, 0, 2, 29, 0, 0, 1, 0, 0, 0]' : 0.301379}", "{'[6, 5, 1, 4, 5, 1, 1, 0, 29, 0, 2, 29, 0, 0, 1, 0, 0, 0]' : 0.301049}", "{'[6, 5, 1, 4, 5, 1, 1, 0, 29, 0, 2, 29, 0, 0, 1, 0, 0, 0]' : 0.298893}", "{'[6, 5, 1, 4, 5, 1, 1, 0, 29, 0, 2, 29, 0, 0, 1, 0, 0, 0]' : 0.300367}", "{'[6, 5, 1, 4, 5, 1, 1, 0, 29, 0, 2, 29, 0, 0, 1, 0, 0, 0]' : 0.306247}", "{'[6, 5, 1, 4, 5, 1, 1, 0, 29, 0, 2, 29, 0, 0, 1, 0, 0, 0]' : 0.300268}", "{'[6, 5, 1, 4, 5, 1, 1, 0, 29, 0, 2, 29, 0, 0, 1, 0, 0, 0]' : 0.299837}", "{'[6, 5, 1, 4, 5, 1, 1, 0, 29, 0, 2, 29, 0, 0, 1, 0, 0, 0]' : 0.303089}", "{'[6, 5, 1, 4, 5, 1, 1, 0, 29, 0, 2, 29, 0, 0, 1, 0, 0, 0]' : 0.310914}", "{'[6, 5, 1, 4, 5, 1, 1, 0, 29, 0, 2, 29, 0, 0, 1, 0, 0, 0]' : 0.298195}", "{'[6, 5, 1, 4, 5, 1, 1, 0, 29, 0, 2, 29, 0, 0, 1, 0, 0, 0]' : 0.300654}", "{'[6, 5, 1, 4, 5, 1, 1, 0, 29, 0, 2, 29, 0, 0, 1, 0, 0, 0]' : 0.306991}", "{'[6, 5, 1, 4, 5, 1, 1, 0, 29, 0, 2, 29, 0, 0, 1, 0, 0, 0]' : 0.299287}", "{'[6, 5, 1, 4, 5, 1, 1, 0, 29, 0, 2, 29, 0, 0, 1, 0, 0, 0]' : 0.300363}", "{'[6, 5, 1, 4, 5, 1, 1, 0, 29, 0, 2, 29, 0, 0, 1, 0, 0, 0]' : 0.301616}", "{'[6, 5, 1, 4, 5, 1, 1, 0, 29, 0, 2, 29, 0, 0, 1, 0, 0, 0]' : 0.299821}", "{'[6, 5, 1, 4, 5, 1, 1, 0, 29, 0, 2, 29, 0, 0, 1, 0, 0, 0]' : 0.300472}", "{'[6, 5, 1, 4, 5, 1, 1, 0, 29, 0, 2, 29, 0, 0, 1, 0, 0, 0]' : 0.300774}", "{'[6, 5, 1, 4, 5, 1, 1, 0, 29, 0, 2, 29, 0, 0, 1, 0, 0, 0]' : 0.300457}", "{'[6, 5, 1, 4, 5, 1, 1, 0, 29, 0, 2, 29, 0, 0, 1, 0, 0, 0]' : 0.299383}"]
returning from 'run': {'[6, 5, 1, 4, 5, 1, 1, 0, 29, 0, 2, 29, 0, 0, 1, 0, 0, 0]': ([0.3469, 0.324683, 0.301109, 0.308261, 0.301958, 0.300401, 0.30001, 0.301602, 0.301388, 0.299958, 0.301379, 0.301049, 0.298893, 0.300367, 0.306247, 0.300268, 0.299837, 0.303089, 0.310914, 0.298195, 0.300654, 0.306991, 0.299287, 0.300363, 0.301616, 0.299821, 0.300472, 0.300774, 0.300457, 0.299383], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 5, 1, 4, 5, 1, 1, 0, 29, 0, 2, 29, 0, 0, 1, 0, 0, 0]': ([0.3469, 0.324683, 0.301109, 0.308261, 0.301958, 0.300401, 0.30001, 0.301602, 0.301388, 0.299958, 0.301379, 0.301049, 0.298893, 0.300367, 0.306247, 0.300268, 0.299837, 0.303089, 0.310914, 0.298195, 0.300654, 0.306991, 0.299287, 0.300363, 0.301616, 0.299821, 0.300472, 0.300774, 0.300457, 0.299383], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	164
        Max loop nest depth: 	6
        Additions: 		4275
        Multiplications: 	900
        Divisions: 		0
        Logical: 		0
        Reads: 			6998
        Writes: 		1022
        Comparisons:		164
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest39.exe __orio_perftest39.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest39.exe  
Program Test Output: 
{'[3, 1, 6, 2, 2, 0, 1, 1, 27, 28, 12, 0, 0, 0, 0, 0, 1, 1]' : 0.366978}
{'[3, 1, 6, 2, 2, 0, 1, 1, 27, 28, 12, 0, 0, 0, 0, 0, 1, 1]' : 0.371032}
{'[3, 1, 6, 2, 2, 0, 1, 1, 27, 28, 12, 0, 0, 0, 0, 0, 1, 1]' : 0.368722}
{'[3, 1, 6, 2, 2, 0, 1, 1, 27, 28, 12, 0, 0, 0, 0, 0, 1, 1]' : 0.368474}
{'[3, 1, 6, 2, 2, 0, 1, 1, 27, 28, 12, 0, 0, 0, 0, 0, 1, 1]' : 0.367624}
{'[3, 1, 6, 2, 2, 0, 1, 1, 27, 28, 12, 0, 0, 0, 0, 0, 1, 1]' : 0.367762}
{'[3, 1, 6, 2, 2, 0, 1, 1, 27, 28, 12, 0, 0, 0, 0, 0, 1, 1]' : 0.36859}
{'[3, 1, 6, 2, 2, 0, 1, 1, 27, 28, 12, 0, 0, 0, 0, 0, 1, 1]' : 0.367764}
{'[3, 1, 6, 2, 2, 0, 1, 1, 27, 28, 12, 0, 0, 0, 0, 0, 1, 1]' : 0.36751}
{'[3, 1, 6, 2, 2, 0, 1, 1, 27, 28, 12, 0, 0, 0, 0, 0, 1, 1]' : 0.36833}
{'[3, 1, 6, 2, 2, 0, 1, 1, 27, 28, 12, 0, 0, 0, 0, 0, 1, 1]' : 0.363954}
{'[3, 1, 6, 2, 2, 0, 1, 1, 27, 28, 12, 0, 0, 0, 0, 0, 1, 1]' : 0.358303}
{'[3, 1, 6, 2, 2, 0, 1, 1, 27, 28, 12, 0, 0, 0, 0, 0, 1, 1]' : 0.365188}
{'[3, 1, 6, 2, 2, 0, 1, 1, 27, 28, 12, 0, 0, 0, 0, 0, 1, 1]' : 0.36529}
{'[3, 1, 6, 2, 2, 0, 1, 1, 27, 28, 12, 0, 0, 0, 0, 0, 1, 1]' : 0.368053}
{'[3, 1, 6, 2, 2, 0, 1, 1, 27, 28, 12, 0, 0, 0, 0, 0, 1, 1]' : 0.368593}
{'[3, 1, 6, 2, 2, 0, 1, 1, 27, 28, 12, 0, 0, 0, 0, 0, 1, 1]' : 0.370537}
{'[3, 1, 6, 2, 2, 0, 1, 1, 27, 28, 12, 0, 0, 0, 0, 0, 1, 1]' : 0.368011}
{'[3, 1, 6, 2, 2, 0, 1, 1, 27, 28, 12, 0, 0, 0, 0, 0, 1, 1]' : 0.372205}
{'[3, 1, 6, 2, 2, 0, 1, 1, 27, 28, 12, 0, 0, 0, 0, 0, 1, 1]' : 0.367571}
{'[3, 1, 6, 2, 2, 0, 1, 1, 27, 28, 12, 0, 0, 0, 0, 0, 1, 1]' : 0.367779}
{'[3, 1, 6, 2, 2, 0, 1, 1, 27, 28, 12, 0, 0, 0, 0, 0, 1, 1]' : 0.372469}
{'[3, 1, 6, 2, 2, 0, 1, 1, 27, 28, 12, 0, 0, 0, 0, 0, 1, 1]' : 0.367266}
{'[3, 1, 6, 2, 2, 0, 1, 1, 27, 28, 12, 0, 0, 0, 0, 0, 1, 1]' : 0.368204}
{'[3, 1, 6, 2, 2, 0, 1, 1, 27, 28, 12, 0, 0, 0, 0, 0, 1, 1]' : 0.372949}
{'[3, 1, 6, 2, 2, 0, 1, 1, 27, 28, 12, 0, 0, 0, 0, 0, 1, 1]' : 0.367853}
{'[3, 1, 6, 2, 2, 0, 1, 1, 27, 28, 12, 0, 0, 0, 0, 0, 1, 1]' : 0.367776}
{'[3, 1, 6, 2, 2, 0, 1, 1, 27, 28, 12, 0, 0, 0, 0, 0, 1, 1]' : 0.379289}
{'[3, 1, 6, 2, 2, 0, 1, 1, 27, 28, 12, 0, 0, 0, 0, 0, 1, 1]' : 0.367843}
{'[3, 1, 6, 2, 2, 0, 1, 1, 27, 28, 12, 0, 0, 0, 0, 0, 1, 1]' : 0.369748}

out:
 ["{'[3, 1, 6, 2, 2, 0, 1, 1, 27, 28, 12, 0, 0, 0, 0, 0, 1, 1]' : 0.366978}", "{'[3, 1, 6, 2, 2, 0, 1, 1, 27, 28, 12, 0, 0, 0, 0, 0, 1, 1]' : 0.371032}", "{'[3, 1, 6, 2, 2, 0, 1, 1, 27, 28, 12, 0, 0, 0, 0, 0, 1, 1]' : 0.368722}", "{'[3, 1, 6, 2, 2, 0, 1, 1, 27, 28, 12, 0, 0, 0, 0, 0, 1, 1]' : 0.368474}", "{'[3, 1, 6, 2, 2, 0, 1, 1, 27, 28, 12, 0, 0, 0, 0, 0, 1, 1]' : 0.367624}", "{'[3, 1, 6, 2, 2, 0, 1, 1, 27, 28, 12, 0, 0, 0, 0, 0, 1, 1]' : 0.367762}", "{'[3, 1, 6, 2, 2, 0, 1, 1, 27, 28, 12, 0, 0, 0, 0, 0, 1, 1]' : 0.36859}", "{'[3, 1, 6, 2, 2, 0, 1, 1, 27, 28, 12, 0, 0, 0, 0, 0, 1, 1]' : 0.367764}", "{'[3, 1, 6, 2, 2, 0, 1, 1, 27, 28, 12, 0, 0, 0, 0, 0, 1, 1]' : 0.36751}", "{'[3, 1, 6, 2, 2, 0, 1, 1, 27, 28, 12, 0, 0, 0, 0, 0, 1, 1]' : 0.36833}", "{'[3, 1, 6, 2, 2, 0, 1, 1, 27, 28, 12, 0, 0, 0, 0, 0, 1, 1]' : 0.363954}", "{'[3, 1, 6, 2, 2, 0, 1, 1, 27, 28, 12, 0, 0, 0, 0, 0, 1, 1]' : 0.358303}", "{'[3, 1, 6, 2, 2, 0, 1, 1, 27, 28, 12, 0, 0, 0, 0, 0, 1, 1]' : 0.365188}", "{'[3, 1, 6, 2, 2, 0, 1, 1, 27, 28, 12, 0, 0, 0, 0, 0, 1, 1]' : 0.36529}", "{'[3, 1, 6, 2, 2, 0, 1, 1, 27, 28, 12, 0, 0, 0, 0, 0, 1, 1]' : 0.368053}", "{'[3, 1, 6, 2, 2, 0, 1, 1, 27, 28, 12, 0, 0, 0, 0, 0, 1, 1]' : 0.368593}", "{'[3, 1, 6, 2, 2, 0, 1, 1, 27, 28, 12, 0, 0, 0, 0, 0, 1, 1]' : 0.370537}", "{'[3, 1, 6, 2, 2, 0, 1, 1, 27, 28, 12, 0, 0, 0, 0, 0, 1, 1]' : 0.368011}", "{'[3, 1, 6, 2, 2, 0, 1, 1, 27, 28, 12, 0, 0, 0, 0, 0, 1, 1]' : 0.372205}", "{'[3, 1, 6, 2, 2, 0, 1, 1, 27, 28, 12, 0, 0, 0, 0, 0, 1, 1]' : 0.367571}", "{'[3, 1, 6, 2, 2, 0, 1, 1, 27, 28, 12, 0, 0, 0, 0, 0, 1, 1]' : 0.367779}", "{'[3, 1, 6, 2, 2, 0, 1, 1, 27, 28, 12, 0, 0, 0, 0, 0, 1, 1]' : 0.372469}", "{'[3, 1, 6, 2, 2, 0, 1, 1, 27, 28, 12, 0, 0, 0, 0, 0, 1, 1]' : 0.367266}", "{'[3, 1, 6, 2, 2, 0, 1, 1, 27, 28, 12, 0, 0, 0, 0, 0, 1, 1]' : 0.368204}", "{'[3, 1, 6, 2, 2, 0, 1, 1, 27, 28, 12, 0, 0, 0, 0, 0, 1, 1]' : 0.372949}", "{'[3, 1, 6, 2, 2, 0, 1, 1, 27, 28, 12, 0, 0, 0, 0, 0, 1, 1]' : 0.367853}", "{'[3, 1, 6, 2, 2, 0, 1, 1, 27, 28, 12, 0, 0, 0, 0, 0, 1, 1]' : 0.367776}", "{'[3, 1, 6, 2, 2, 0, 1, 1, 27, 28, 12, 0, 0, 0, 0, 0, 1, 1]' : 0.379289}", "{'[3, 1, 6, 2, 2, 0, 1, 1, 27, 28, 12, 0, 0, 0, 0, 0, 1, 1]' : 0.367843}", "{'[3, 1, 6, 2, 2, 0, 1, 1, 27, 28, 12, 0, 0, 0, 0, 0, 1, 1]' : 0.369748}"]
returning from 'run': {'[3, 1, 6, 2, 2, 0, 1, 1, 27, 28, 12, 0, 0, 0, 0, 0, 1, 1]': ([0.366978, 0.371032, 0.368722, 0.368474, 0.367624, 0.367762, 0.36859, 0.367764, 0.36751, 0.36833, 0.363954, 0.358303, 0.365188, 0.36529, 0.368053, 0.368593, 0.370537, 0.368011, 0.372205, 0.367571, 0.367779, 0.372469, 0.367266, 0.368204, 0.372949, 0.367853, 0.367776, 0.379289, 0.367843, 0.369748], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 1, 6, 2, 2, 0, 1, 1, 27, 28, 12, 0, 0, 0, 0, 0, 1, 1]': ([0.366978, 0.371032, 0.368722, 0.368474, 0.367624, 0.367762, 0.36859, 0.367764, 0.36751, 0.36833, 0.363954, 0.358303, 0.365188, 0.36529, 0.368053, 0.368593, 0.370537, 0.368011, 0.372205, 0.367571, 0.367779, 0.372469, 0.367266, 0.368204, 0.372949, 0.367853, 0.367776, 0.379289, 0.367843, 0.369748], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	34
        Max loop nest depth: 	5
        Additions: 		1742
        Multiplications: 	396
        Divisions: 		0
        Logical: 		0
        Reads: 			2704
        Writes: 		291
        Comparisons:		34
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest40.exe __orio_perftest40.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest40.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest40.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest40.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest40.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	5
        Additions: 		6347
        Multiplications: 	3120
        Divisions: 		0
        Logical: 		0
        Reads: 			12022
        Writes: 		1944
        Comparisons:		25
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest41.exe __orio_perftest41.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest41.exe  
Program Test Output: 
{'[3, 3, 6, 5, 1, 4, 0, 0, 3, 29, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.089344}
{'[3, 3, 6, 5, 1, 4, 0, 0, 3, 29, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.0894089}
{'[3, 3, 6, 5, 1, 4, 0, 0, 3, 29, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.089144}
{'[3, 3, 6, 5, 1, 4, 0, 0, 3, 29, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.0892479}
{'[3, 3, 6, 5, 1, 4, 0, 0, 3, 29, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.089308}
{'[3, 3, 6, 5, 1, 4, 0, 0, 3, 29, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.0892391}
{'[3, 3, 6, 5, 1, 4, 0, 0, 3, 29, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.0891891}
{'[3, 3, 6, 5, 1, 4, 0, 0, 3, 29, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.089412}
{'[3, 3, 6, 5, 1, 4, 0, 0, 3, 29, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.0892239}
{'[3, 3, 6, 5, 1, 4, 0, 0, 3, 29, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.0892091}
{'[3, 3, 6, 5, 1, 4, 0, 0, 3, 29, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.089431}
{'[3, 3, 6, 5, 1, 4, 0, 0, 3, 29, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.0891609}
{'[3, 3, 6, 5, 1, 4, 0, 0, 3, 29, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.0892489}
{'[3, 3, 6, 5, 1, 4, 0, 0, 3, 29, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.0891719}
{'[3, 3, 6, 5, 1, 4, 0, 0, 3, 29, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.089232}
{'[3, 3, 6, 5, 1, 4, 0, 0, 3, 29, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.089515}
{'[3, 3, 6, 5, 1, 4, 0, 0, 3, 29, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.089227}
{'[3, 3, 6, 5, 1, 4, 0, 0, 3, 29, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.0892272}
{'[3, 3, 6, 5, 1, 4, 0, 0, 3, 29, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.0891621}
{'[3, 3, 6, 5, 1, 4, 0, 0, 3, 29, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.0891919}
{'[3, 3, 6, 5, 1, 4, 0, 0, 3, 29, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.0892119}
{'[3, 3, 6, 5, 1, 4, 0, 0, 3, 29, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.089524}
{'[3, 3, 6, 5, 1, 4, 0, 0, 3, 29, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.0892661}
{'[3, 3, 6, 5, 1, 4, 0, 0, 3, 29, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.0892179}
{'[3, 3, 6, 5, 1, 4, 0, 0, 3, 29, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.08917}
{'[3, 3, 6, 5, 1, 4, 0, 0, 3, 29, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.0891602}
{'[3, 3, 6, 5, 1, 4, 0, 0, 3, 29, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.0892451}
{'[3, 3, 6, 5, 1, 4, 0, 0, 3, 29, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.089221}
{'[3, 3, 6, 5, 1, 4, 0, 0, 3, 29, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.089323}
{'[3, 3, 6, 5, 1, 4, 0, 0, 3, 29, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.0889931}

out:
 ["{'[3, 3, 6, 5, 1, 4, 0, 0, 3, 29, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.089344}", "{'[3, 3, 6, 5, 1, 4, 0, 0, 3, 29, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.0894089}", "{'[3, 3, 6, 5, 1, 4, 0, 0, 3, 29, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.089144}", "{'[3, 3, 6, 5, 1, 4, 0, 0, 3, 29, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.0892479}", "{'[3, 3, 6, 5, 1, 4, 0, 0, 3, 29, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.089308}", "{'[3, 3, 6, 5, 1, 4, 0, 0, 3, 29, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.0892391}", "{'[3, 3, 6, 5, 1, 4, 0, 0, 3, 29, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.0891891}", "{'[3, 3, 6, 5, 1, 4, 0, 0, 3, 29, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.089412}", "{'[3, 3, 6, 5, 1, 4, 0, 0, 3, 29, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.0892239}", "{'[3, 3, 6, 5, 1, 4, 0, 0, 3, 29, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.0892091}", "{'[3, 3, 6, 5, 1, 4, 0, 0, 3, 29, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.089431}", "{'[3, 3, 6, 5, 1, 4, 0, 0, 3, 29, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.0891609}", "{'[3, 3, 6, 5, 1, 4, 0, 0, 3, 29, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.0892489}", "{'[3, 3, 6, 5, 1, 4, 0, 0, 3, 29, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.0891719}", "{'[3, 3, 6, 5, 1, 4, 0, 0, 3, 29, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.089232}", "{'[3, 3, 6, 5, 1, 4, 0, 0, 3, 29, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.089515}", "{'[3, 3, 6, 5, 1, 4, 0, 0, 3, 29, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.089227}", "{'[3, 3, 6, 5, 1, 4, 0, 0, 3, 29, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.0892272}", "{'[3, 3, 6, 5, 1, 4, 0, 0, 3, 29, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.0891621}", "{'[3, 3, 6, 5, 1, 4, 0, 0, 3, 29, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.0891919}", "{'[3, 3, 6, 5, 1, 4, 0, 0, 3, 29, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.0892119}", "{'[3, 3, 6, 5, 1, 4, 0, 0, 3, 29, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.089524}", "{'[3, 3, 6, 5, 1, 4, 0, 0, 3, 29, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.0892661}", "{'[3, 3, 6, 5, 1, 4, 0, 0, 3, 29, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.0892179}", "{'[3, 3, 6, 5, 1, 4, 0, 0, 3, 29, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.08917}", "{'[3, 3, 6, 5, 1, 4, 0, 0, 3, 29, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.0891602}", "{'[3, 3, 6, 5, 1, 4, 0, 0, 3, 29, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.0892451}", "{'[3, 3, 6, 5, 1, 4, 0, 0, 3, 29, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.089221}", "{'[3, 3, 6, 5, 1, 4, 0, 0, 3, 29, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.089323}", "{'[3, 3, 6, 5, 1, 4, 0, 0, 3, 29, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.0889931}"]
returning from 'run': {'[3, 3, 6, 5, 1, 4, 0, 0, 3, 29, 0, 29, 1, 1, 0, 1, 0, 1]': ([0.089344, 0.0894089, 0.089144, 0.0892479, 0.089308, 0.0892391, 0.0891891, 0.089412, 0.0892239, 0.0892091, 0.089431, 0.0891609, 0.0892489, 0.0891719, 0.089232, 0.089515, 0.089227, 0.0892272, 0.0891621, 0.0891919, 0.0892119, 0.089524, 0.0892661, 0.0892179, 0.08917, 0.0891602, 0.0892451, 0.089221, 0.089323, 0.0889931], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 3, 6, 5, 1, 4, 0, 0, 3, 29, 0, 29, 1, 1, 0, 1, 0, 1]': ([0.089344, 0.0894089, 0.089144, 0.0892479, 0.089308, 0.0892391, 0.0891891, 0.089412, 0.0892239, 0.0892091, 0.089431, 0.0891609, 0.0892489, 0.0891719, 0.089232, 0.089515, 0.089227, 0.0892272, 0.0891621, 0.0891919, 0.0892119, 0.089524, 0.0892661, 0.0892179, 0.08917, 0.0891602, 0.0892451, 0.089221, 0.089323, 0.0889931], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	56
        Max loop nest depth: 	6
        Additions: 		1989
        Multiplications: 	858
        Divisions: 		0
        Logical: 		0
        Reads: 			3893
        Writes: 		661
        Comparisons:		56
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest42.exe __orio_perftest42.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest42.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest42.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest42.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest42.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	36
        Max loop nest depth: 	6
        Additions: 		586
        Multiplications: 	156
        Divisions: 		0
        Logical: 		0
        Reads: 			1132
        Writes: 		169
        Comparisons:		36
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest43.exe __orio_perftest43.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest43.exe  
Program Test Output: 
{'[6, 0, 5, 6, 6, 5, 0, 1, 0, 3, 3, 0, 1, 0, 0, 0, 0, 0]' : 0.107614}
{'[6, 0, 5, 6, 6, 5, 0, 1, 0, 3, 3, 0, 1, 0, 0, 0, 0, 0]' : 0.107389}
{'[6, 0, 5, 6, 6, 5, 0, 1, 0, 3, 3, 0, 1, 0, 0, 0, 0, 0]' : 0.107371}
{'[6, 0, 5, 6, 6, 5, 0, 1, 0, 3, 3, 0, 1, 0, 0, 0, 0, 0]' : 0.106482}
{'[6, 0, 5, 6, 6, 5, 0, 1, 0, 3, 3, 0, 1, 0, 0, 0, 0, 0]' : 0.0962169}
{'[6, 0, 5, 6, 6, 5, 0, 1, 0, 3, 3, 0, 1, 0, 0, 0, 0, 0]' : 0.095469}
{'[6, 0, 5, 6, 6, 5, 0, 1, 0, 3, 3, 0, 1, 0, 0, 0, 0, 0]' : 0.095665}
{'[6, 0, 5, 6, 6, 5, 0, 1, 0, 3, 3, 0, 1, 0, 0, 0, 0, 0]' : 0.0951788}
{'[6, 0, 5, 6, 6, 5, 0, 1, 0, 3, 3, 0, 1, 0, 0, 0, 0, 0]' : 0.0953319}
{'[6, 0, 5, 6, 6, 5, 0, 1, 0, 3, 3, 0, 1, 0, 0, 0, 0, 0]' : 0.0953748}
{'[6, 0, 5, 6, 6, 5, 0, 1, 0, 3, 3, 0, 1, 0, 0, 0, 0, 0]' : 0.0954521}
{'[6, 0, 5, 6, 6, 5, 0, 1, 0, 3, 3, 0, 1, 0, 0, 0, 0, 0]' : 0.0954471}
{'[6, 0, 5, 6, 6, 5, 0, 1, 0, 3, 3, 0, 1, 0, 0, 0, 0, 0]' : 0.095752}
{'[6, 0, 5, 6, 6, 5, 0, 1, 0, 3, 3, 0, 1, 0, 0, 0, 0, 0]' : 0.0953529}
{'[6, 0, 5, 6, 6, 5, 0, 1, 0, 3, 3, 0, 1, 0, 0, 0, 0, 0]' : 0.0954399}
{'[6, 0, 5, 6, 6, 5, 0, 1, 0, 3, 3, 0, 1, 0, 0, 0, 0, 0]' : 0.095742}
{'[6, 0, 5, 6, 6, 5, 0, 1, 0, 3, 3, 0, 1, 0, 0, 0, 0, 0]' : 0.0955589}
{'[6, 0, 5, 6, 6, 5, 0, 1, 0, 3, 3, 0, 1, 0, 0, 0, 0, 0]' : 0.0953569}
{'[6, 0, 5, 6, 6, 5, 0, 1, 0, 3, 3, 0, 1, 0, 0, 0, 0, 0]' : 0.0955451}
{'[6, 0, 5, 6, 6, 5, 0, 1, 0, 3, 3, 0, 1, 0, 0, 0, 0, 0]' : 0.0954058}
{'[6, 0, 5, 6, 6, 5, 0, 1, 0, 3, 3, 0, 1, 0, 0, 0, 0, 0]' : 0.097394}
{'[6, 0, 5, 6, 6, 5, 0, 1, 0, 3, 3, 0, 1, 0, 0, 0, 0, 0]' : 0.097867}
{'[6, 0, 5, 6, 6, 5, 0, 1, 0, 3, 3, 0, 1, 0, 0, 0, 0, 0]' : 0.0977612}
{'[6, 0, 5, 6, 6, 5, 0, 1, 0, 3, 3, 0, 1, 0, 0, 0, 0, 0]' : 0.0978272}
{'[6, 0, 5, 6, 6, 5, 0, 1, 0, 3, 3, 0, 1, 0, 0, 0, 0, 0]' : 0.097573}
{'[6, 0, 5, 6, 6, 5, 0, 1, 0, 3, 3, 0, 1, 0, 0, 0, 0, 0]' : 0.0975931}
{'[6, 0, 5, 6, 6, 5, 0, 1, 0, 3, 3, 0, 1, 0, 0, 0, 0, 0]' : 0.096601}
{'[6, 0, 5, 6, 6, 5, 0, 1, 0, 3, 3, 0, 1, 0, 0, 0, 0, 0]' : 0.0956628}
{'[6, 0, 5, 6, 6, 5, 0, 1, 0, 3, 3, 0, 1, 0, 0, 0, 0, 0]' : 0.0956569}
{'[6, 0, 5, 6, 6, 5, 0, 1, 0, 3, 3, 0, 1, 0, 0, 0, 0, 0]' : 0.0953169}

out:
 ["{'[6, 0, 5, 6, 6, 5, 0, 1, 0, 3, 3, 0, 1, 0, 0, 0, 0, 0]' : 0.107614}", "{'[6, 0, 5, 6, 6, 5, 0, 1, 0, 3, 3, 0, 1, 0, 0, 0, 0, 0]' : 0.107389}", "{'[6, 0, 5, 6, 6, 5, 0, 1, 0, 3, 3, 0, 1, 0, 0, 0, 0, 0]' : 0.107371}", "{'[6, 0, 5, 6, 6, 5, 0, 1, 0, 3, 3, 0, 1, 0, 0, 0, 0, 0]' : 0.106482}", "{'[6, 0, 5, 6, 6, 5, 0, 1, 0, 3, 3, 0, 1, 0, 0, 0, 0, 0]' : 0.0962169}", "{'[6, 0, 5, 6, 6, 5, 0, 1, 0, 3, 3, 0, 1, 0, 0, 0, 0, 0]' : 0.095469}", "{'[6, 0, 5, 6, 6, 5, 0, 1, 0, 3, 3, 0, 1, 0, 0, 0, 0, 0]' : 0.095665}", "{'[6, 0, 5, 6, 6, 5, 0, 1, 0, 3, 3, 0, 1, 0, 0, 0, 0, 0]' : 0.0951788}", "{'[6, 0, 5, 6, 6, 5, 0, 1, 0, 3, 3, 0, 1, 0, 0, 0, 0, 0]' : 0.0953319}", "{'[6, 0, 5, 6, 6, 5, 0, 1, 0, 3, 3, 0, 1, 0, 0, 0, 0, 0]' : 0.0953748}", "{'[6, 0, 5, 6, 6, 5, 0, 1, 0, 3, 3, 0, 1, 0, 0, 0, 0, 0]' : 0.0954521}", "{'[6, 0, 5, 6, 6, 5, 0, 1, 0, 3, 3, 0, 1, 0, 0, 0, 0, 0]' : 0.0954471}", "{'[6, 0, 5, 6, 6, 5, 0, 1, 0, 3, 3, 0, 1, 0, 0, 0, 0, 0]' : 0.095752}", "{'[6, 0, 5, 6, 6, 5, 0, 1, 0, 3, 3, 0, 1, 0, 0, 0, 0, 0]' : 0.0953529}", "{'[6, 0, 5, 6, 6, 5, 0, 1, 0, 3, 3, 0, 1, 0, 0, 0, 0, 0]' : 0.0954399}", "{'[6, 0, 5, 6, 6, 5, 0, 1, 0, 3, 3, 0, 1, 0, 0, 0, 0, 0]' : 0.095742}", "{'[6, 0, 5, 6, 6, 5, 0, 1, 0, 3, 3, 0, 1, 0, 0, 0, 0, 0]' : 0.0955589}", "{'[6, 0, 5, 6, 6, 5, 0, 1, 0, 3, 3, 0, 1, 0, 0, 0, 0, 0]' : 0.0953569}", "{'[6, 0, 5, 6, 6, 5, 0, 1, 0, 3, 3, 0, 1, 0, 0, 0, 0, 0]' : 0.0955451}", "{'[6, 0, 5, 6, 6, 5, 0, 1, 0, 3, 3, 0, 1, 0, 0, 0, 0, 0]' : 0.0954058}", "{'[6, 0, 5, 6, 6, 5, 0, 1, 0, 3, 3, 0, 1, 0, 0, 0, 0, 0]' : 0.097394}", "{'[6, 0, 5, 6, 6, 5, 0, 1, 0, 3, 3, 0, 1, 0, 0, 0, 0, 0]' : 0.097867}", "{'[6, 0, 5, 6, 6, 5, 0, 1, 0, 3, 3, 0, 1, 0, 0, 0, 0, 0]' : 0.0977612}", "{'[6, 0, 5, 6, 6, 5, 0, 1, 0, 3, 3, 0, 1, 0, 0, 0, 0, 0]' : 0.0978272}", "{'[6, 0, 5, 6, 6, 5, 0, 1, 0, 3, 3, 0, 1, 0, 0, 0, 0, 0]' : 0.097573}", "{'[6, 0, 5, 6, 6, 5, 0, 1, 0, 3, 3, 0, 1, 0, 0, 0, 0, 0]' : 0.0975931}", "{'[6, 0, 5, 6, 6, 5, 0, 1, 0, 3, 3, 0, 1, 0, 0, 0, 0, 0]' : 0.096601}", "{'[6, 0, 5, 6, 6, 5, 0, 1, 0, 3, 3, 0, 1, 0, 0, 0, 0, 0]' : 0.0956628}", "{'[6, 0, 5, 6, 6, 5, 0, 1, 0, 3, 3, 0, 1, 0, 0, 0, 0, 0]' : 0.0956569}", "{'[6, 0, 5, 6, 6, 5, 0, 1, 0, 3, 3, 0, 1, 0, 0, 0, 0, 0]' : 0.0953169}"]
returning from 'run': {'[6, 0, 5, 6, 6, 5, 0, 1, 0, 3, 3, 0, 1, 0, 0, 0, 0, 0]': ([0.107614, 0.107389, 0.107371, 0.106482, 0.0962169, 0.095469, 0.095665, 0.0951788, 0.0953319, 0.0953748, 0.0954521, 0.0954471, 0.095752, 0.0953529, 0.0954399, 0.095742, 0.0955589, 0.0953569, 0.0955451, 0.0954058, 0.097394, 0.097867, 0.0977612, 0.0978272, 0.097573, 0.0975931, 0.096601, 0.0956628, 0.0956569, 0.0953169], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 5, 6, 6, 5, 0, 1, 0, 3, 3, 0, 1, 0, 0, 0, 0, 0]': ([0.107614, 0.107389, 0.107371, 0.106482, 0.0962169, 0.095469, 0.095665, 0.0951788, 0.0953319, 0.0953748, 0.0954521, 0.0954471, 0.095752, 0.0953529, 0.0954399, 0.095742, 0.0955589, 0.0953569, 0.0955451, 0.0954058, 0.097394, 0.097867, 0.0977612, 0.0978272, 0.097573, 0.0975931, 0.096601, 0.0956628, 0.0956569, 0.0953169], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	27
        Max loop nest depth: 	5
        Additions: 		2247
        Multiplications: 	1092
        Divisions: 		0
        Logical: 		0
        Reads: 			4416
        Writes: 		757
        Comparisons:		27
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest44.exe __orio_perftest44.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest44.exe  
Program Test Output: 
{'[6, 6, 1, 0, 6, 1, 0, 0, 1, 29, 11, 0, 1, 0, 0, 1, 0, 1]' : 0.106883}
{'[6, 6, 1, 0, 6, 1, 0, 0, 1, 29, 11, 0, 1, 0, 0, 1, 0, 1]' : 0.107792}
{'[6, 6, 1, 0, 6, 1, 0, 0, 1, 29, 11, 0, 1, 0, 0, 1, 0, 1]' : 0.108789}
{'[6, 6, 1, 0, 6, 1, 0, 0, 1, 29, 11, 0, 1, 0, 0, 1, 0, 1]' : 0.107882}
{'[6, 6, 1, 0, 6, 1, 0, 0, 1, 29, 11, 0, 1, 0, 0, 1, 0, 1]' : 0.106651}
{'[6, 6, 1, 0, 6, 1, 0, 0, 1, 29, 11, 0, 1, 0, 0, 1, 0, 1]' : 0.107088}
{'[6, 6, 1, 0, 6, 1, 0, 0, 1, 29, 11, 0, 1, 0, 0, 1, 0, 1]' : 0.108447}
{'[6, 6, 1, 0, 6, 1, 0, 0, 1, 29, 11, 0, 1, 0, 0, 1, 0, 1]' : 0.108903}
{'[6, 6, 1, 0, 6, 1, 0, 0, 1, 29, 11, 0, 1, 0, 0, 1, 0, 1]' : 0.108805}
{'[6, 6, 1, 0, 6, 1, 0, 0, 1, 29, 11, 0, 1, 0, 0, 1, 0, 1]' : 0.108811}
{'[6, 6, 1, 0, 6, 1, 0, 0, 1, 29, 11, 0, 1, 0, 0, 1, 0, 1]' : 0.108921}
{'[6, 6, 1, 0, 6, 1, 0, 0, 1, 29, 11, 0, 1, 0, 0, 1, 0, 1]' : 0.108921}
{'[6, 6, 1, 0, 6, 1, 0, 0, 1, 29, 11, 0, 1, 0, 0, 1, 0, 1]' : 0.108465}
{'[6, 6, 1, 0, 6, 1, 0, 0, 1, 29, 11, 0, 1, 0, 0, 1, 0, 1]' : 0.107112}
{'[6, 6, 1, 0, 6, 1, 0, 0, 1, 29, 11, 0, 1, 0, 0, 1, 0, 1]' : 0.106706}
{'[6, 6, 1, 0, 6, 1, 0, 0, 1, 29, 11, 0, 1, 0, 0, 1, 0, 1]' : 0.107905}
{'[6, 6, 1, 0, 6, 1, 0, 0, 1, 29, 11, 0, 1, 0, 0, 1, 0, 1]' : 0.108958}
{'[6, 6, 1, 0, 6, 1, 0, 0, 1, 29, 11, 0, 1, 0, 0, 1, 0, 1]' : 0.107673}
{'[6, 6, 1, 0, 6, 1, 0, 0, 1, 29, 11, 0, 1, 0, 0, 1, 0, 1]' : 0.10696}
{'[6, 6, 1, 0, 6, 1, 0, 0, 1, 29, 11, 0, 1, 0, 0, 1, 0, 1]' : 0.106707}
{'[6, 6, 1, 0, 6, 1, 0, 0, 1, 29, 11, 0, 1, 0, 0, 1, 0, 1]' : 0.106746}
{'[6, 6, 1, 0, 6, 1, 0, 0, 1, 29, 11, 0, 1, 0, 0, 1, 0, 1]' : 0.106813}
{'[6, 6, 1, 0, 6, 1, 0, 0, 1, 29, 11, 0, 1, 0, 0, 1, 0, 1]' : 0.104432}
{'[6, 6, 1, 0, 6, 1, 0, 0, 1, 29, 11, 0, 1, 0, 0, 1, 0, 1]' : 0.104181}
{'[6, 6, 1, 0, 6, 1, 0, 0, 1, 29, 11, 0, 1, 0, 0, 1, 0, 1]' : 0.104608}
{'[6, 6, 1, 0, 6, 1, 0, 0, 1, 29, 11, 0, 1, 0, 0, 1, 0, 1]' : 0.108832}
{'[6, 6, 1, 0, 6, 1, 0, 0, 1, 29, 11, 0, 1, 0, 0, 1, 0, 1]' : 0.106704}
{'[6, 6, 1, 0, 6, 1, 0, 0, 1, 29, 11, 0, 1, 0, 0, 1, 0, 1]' : 0.106723}
{'[6, 6, 1, 0, 6, 1, 0, 0, 1, 29, 11, 0, 1, 0, 0, 1, 0, 1]' : 0.106519}
{'[6, 6, 1, 0, 6, 1, 0, 0, 1, 29, 11, 0, 1, 0, 0, 1, 0, 1]' : 0.107011}

out:
 ["{'[6, 6, 1, 0, 6, 1, 0, 0, 1, 29, 11, 0, 1, 0, 0, 1, 0, 1]' : 0.106883}", "{'[6, 6, 1, 0, 6, 1, 0, 0, 1, 29, 11, 0, 1, 0, 0, 1, 0, 1]' : 0.107792}", "{'[6, 6, 1, 0, 6, 1, 0, 0, 1, 29, 11, 0, 1, 0, 0, 1, 0, 1]' : 0.108789}", "{'[6, 6, 1, 0, 6, 1, 0, 0, 1, 29, 11, 0, 1, 0, 0, 1, 0, 1]' : 0.107882}", "{'[6, 6, 1, 0, 6, 1, 0, 0, 1, 29, 11, 0, 1, 0, 0, 1, 0, 1]' : 0.106651}", "{'[6, 6, 1, 0, 6, 1, 0, 0, 1, 29, 11, 0, 1, 0, 0, 1, 0, 1]' : 0.107088}", "{'[6, 6, 1, 0, 6, 1, 0, 0, 1, 29, 11, 0, 1, 0, 0, 1, 0, 1]' : 0.108447}", "{'[6, 6, 1, 0, 6, 1, 0, 0, 1, 29, 11, 0, 1, 0, 0, 1, 0, 1]' : 0.108903}", "{'[6, 6, 1, 0, 6, 1, 0, 0, 1, 29, 11, 0, 1, 0, 0, 1, 0, 1]' : 0.108805}", "{'[6, 6, 1, 0, 6, 1, 0, 0, 1, 29, 11, 0, 1, 0, 0, 1, 0, 1]' : 0.108811}", "{'[6, 6, 1, 0, 6, 1, 0, 0, 1, 29, 11, 0, 1, 0, 0, 1, 0, 1]' : 0.108921}", "{'[6, 6, 1, 0, 6, 1, 0, 0, 1, 29, 11, 0, 1, 0, 0, 1, 0, 1]' : 0.108921}", "{'[6, 6, 1, 0, 6, 1, 0, 0, 1, 29, 11, 0, 1, 0, 0, 1, 0, 1]' : 0.108465}", "{'[6, 6, 1, 0, 6, 1, 0, 0, 1, 29, 11, 0, 1, 0, 0, 1, 0, 1]' : 0.107112}", "{'[6, 6, 1, 0, 6, 1, 0, 0, 1, 29, 11, 0, 1, 0, 0, 1, 0, 1]' : 0.106706}", "{'[6, 6, 1, 0, 6, 1, 0, 0, 1, 29, 11, 0, 1, 0, 0, 1, 0, 1]' : 0.107905}", "{'[6, 6, 1, 0, 6, 1, 0, 0, 1, 29, 11, 0, 1, 0, 0, 1, 0, 1]' : 0.108958}", "{'[6, 6, 1, 0, 6, 1, 0, 0, 1, 29, 11, 0, 1, 0, 0, 1, 0, 1]' : 0.107673}", "{'[6, 6, 1, 0, 6, 1, 0, 0, 1, 29, 11, 0, 1, 0, 0, 1, 0, 1]' : 0.10696}", "{'[6, 6, 1, 0, 6, 1, 0, 0, 1, 29, 11, 0, 1, 0, 0, 1, 0, 1]' : 0.106707}", "{'[6, 6, 1, 0, 6, 1, 0, 0, 1, 29, 11, 0, 1, 0, 0, 1, 0, 1]' : 0.106746}", "{'[6, 6, 1, 0, 6, 1, 0, 0, 1, 29, 11, 0, 1, 0, 0, 1, 0, 1]' : 0.106813}", "{'[6, 6, 1, 0, 6, 1, 0, 0, 1, 29, 11, 0, 1, 0, 0, 1, 0, 1]' : 0.104432}", "{'[6, 6, 1, 0, 6, 1, 0, 0, 1, 29, 11, 0, 1, 0, 0, 1, 0, 1]' : 0.104181}", "{'[6, 6, 1, 0, 6, 1, 0, 0, 1, 29, 11, 0, 1, 0, 0, 1, 0, 1]' : 0.104608}", "{'[6, 6, 1, 0, 6, 1, 0, 0, 1, 29, 11, 0, 1, 0, 0, 1, 0, 1]' : 0.108832}", "{'[6, 6, 1, 0, 6, 1, 0, 0, 1, 29, 11, 0, 1, 0, 0, 1, 0, 1]' : 0.106704}", "{'[6, 6, 1, 0, 6, 1, 0, 0, 1, 29, 11, 0, 1, 0, 0, 1, 0, 1]' : 0.106723}", "{'[6, 6, 1, 0, 6, 1, 0, 0, 1, 29, 11, 0, 1, 0, 0, 1, 0, 1]' : 0.106519}", "{'[6, 6, 1, 0, 6, 1, 0, 0, 1, 29, 11, 0, 1, 0, 0, 1, 0, 1]' : 0.107011}"]
returning from 'run': {'[6, 6, 1, 0, 6, 1, 0, 0, 1, 29, 11, 0, 1, 0, 0, 1, 0, 1]': ([0.106883, 0.107792, 0.108789, 0.107882, 0.106651, 0.107088, 0.108447, 0.108903, 0.108805, 0.108811, 0.108921, 0.108921, 0.108465, 0.107112, 0.106706, 0.107905, 0.108958, 0.107673, 0.10696, 0.106707, 0.106746, 0.106813, 0.104432, 0.104181, 0.104608, 0.108832, 0.106704, 0.106723, 0.106519, 0.107011], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 1, 0, 6, 1, 0, 0, 1, 29, 11, 0, 1, 0, 0, 1, 0, 1]': ([0.106883, 0.107792, 0.108789, 0.107882, 0.106651, 0.107088, 0.108447, 0.108903, 0.108805, 0.108811, 0.108921, 0.108921, 0.108465, 0.107112, 0.106706, 0.107905, 0.108958, 0.107673, 0.10696, 0.106707, 0.106746, 0.106813, 0.104432, 0.104181, 0.104608, 0.108832, 0.106704, 0.106723, 0.106519, 0.107011], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	85
        Max loop nest depth: 	4
        Additions: 		6937
        Multiplications: 	2688
        Divisions: 		0
        Logical: 		0
        Reads: 			11919
        Writes: 		1762
        Comparisons:		85
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest45.exe __orio_perftest45.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest45.exe  
Program Test Output: 
{'[4, 0, 4, 0, 1, 0, 1, 0, 18, 22, 21, 0, 0, 0, 2, 1, 0, 0]' : 0.193865}
{'[4, 0, 4, 0, 1, 0, 1, 0, 18, 22, 21, 0, 0, 0, 2, 1, 0, 0]' : 0.200721}
{'[4, 0, 4, 0, 1, 0, 1, 0, 18, 22, 21, 0, 0, 0, 2, 1, 0, 0]' : 0.200199}
{'[4, 0, 4, 0, 1, 0, 1, 0, 18, 22, 21, 0, 0, 0, 2, 1, 0, 0]' : 0.200547}
{'[4, 0, 4, 0, 1, 0, 1, 0, 18, 22, 21, 0, 0, 0, 2, 1, 0, 0]' : 0.200366}
{'[4, 0, 4, 0, 1, 0, 1, 0, 18, 22, 21, 0, 0, 0, 2, 1, 0, 0]' : 0.200001}
{'[4, 0, 4, 0, 1, 0, 1, 0, 18, 22, 21, 0, 0, 0, 2, 1, 0, 0]' : 0.200013}
{'[4, 0, 4, 0, 1, 0, 1, 0, 18, 22, 21, 0, 0, 0, 2, 1, 0, 0]' : 0.204962}
{'[4, 0, 4, 0, 1, 0, 1, 0, 18, 22, 21, 0, 0, 0, 2, 1, 0, 0]' : 0.205863}
{'[4, 0, 4, 0, 1, 0, 1, 0, 18, 22, 21, 0, 0, 0, 2, 1, 0, 0]' : 0.205811}
{'[4, 0, 4, 0, 1, 0, 1, 0, 18, 22, 21, 0, 0, 0, 2, 1, 0, 0]' : 0.202158}
{'[4, 0, 4, 0, 1, 0, 1, 0, 18, 22, 21, 0, 0, 0, 2, 1, 0, 0]' : 0.199927}
{'[4, 0, 4, 0, 1, 0, 1, 0, 18, 22, 21, 0, 0, 0, 2, 1, 0, 0]' : 0.204115}
{'[4, 0, 4, 0, 1, 0, 1, 0, 18, 22, 21, 0, 0, 0, 2, 1, 0, 0]' : 0.203614}
{'[4, 0, 4, 0, 1, 0, 1, 0, 18, 22, 21, 0, 0, 0, 2, 1, 0, 0]' : 0.199856}
{'[4, 0, 4, 0, 1, 0, 1, 0, 18, 22, 21, 0, 0, 0, 2, 1, 0, 0]' : 0.200408}
{'[4, 0, 4, 0, 1, 0, 1, 0, 18, 22, 21, 0, 0, 0, 2, 1, 0, 0]' : 0.199777}
{'[4, 0, 4, 0, 1, 0, 1, 0, 18, 22, 21, 0, 0, 0, 2, 1, 0, 0]' : 0.202249}
{'[4, 0, 4, 0, 1, 0, 1, 0, 18, 22, 21, 0, 0, 0, 2, 1, 0, 0]' : 0.199964}
{'[4, 0, 4, 0, 1, 0, 1, 0, 18, 22, 21, 0, 0, 0, 2, 1, 0, 0]' : 0.199831}
{'[4, 0, 4, 0, 1, 0, 1, 0, 18, 22, 21, 0, 0, 0, 2, 1, 0, 0]' : 0.201381}
{'[4, 0, 4, 0, 1, 0, 1, 0, 18, 22, 21, 0, 0, 0, 2, 1, 0, 0]' : 0.205893}
{'[4, 0, 4, 0, 1, 0, 1, 0, 18, 22, 21, 0, 0, 0, 2, 1, 0, 0]' : 0.205989}
{'[4, 0, 4, 0, 1, 0, 1, 0, 18, 22, 21, 0, 0, 0, 2, 1, 0, 0]' : 0.202343}
{'[4, 0, 4, 0, 1, 0, 1, 0, 18, 22, 21, 0, 0, 0, 2, 1, 0, 0]' : 0.199857}
{'[4, 0, 4, 0, 1, 0, 1, 0, 18, 22, 21, 0, 0, 0, 2, 1, 0, 0]' : 0.198914}
{'[4, 0, 4, 0, 1, 0, 1, 0, 18, 22, 21, 0, 0, 0, 2, 1, 0, 0]' : 0.20028}
{'[4, 0, 4, 0, 1, 0, 1, 0, 18, 22, 21, 0, 0, 0, 2, 1, 0, 0]' : 0.19999}
{'[4, 0, 4, 0, 1, 0, 1, 0, 18, 22, 21, 0, 0, 0, 2, 1, 0, 0]' : 0.204429}
{'[4, 0, 4, 0, 1, 0, 1, 0, 18, 22, 21, 0, 0, 0, 2, 1, 0, 0]' : 0.20583}

out:
 ["{'[4, 0, 4, 0, 1, 0, 1, 0, 18, 22, 21, 0, 0, 0, 2, 1, 0, 0]' : 0.193865}", "{'[4, 0, 4, 0, 1, 0, 1, 0, 18, 22, 21, 0, 0, 0, 2, 1, 0, 0]' : 0.200721}", "{'[4, 0, 4, 0, 1, 0, 1, 0, 18, 22, 21, 0, 0, 0, 2, 1, 0, 0]' : 0.200199}", "{'[4, 0, 4, 0, 1, 0, 1, 0, 18, 22, 21, 0, 0, 0, 2, 1, 0, 0]' : 0.200547}", "{'[4, 0, 4, 0, 1, 0, 1, 0, 18, 22, 21, 0, 0, 0, 2, 1, 0, 0]' : 0.200366}", "{'[4, 0, 4, 0, 1, 0, 1, 0, 18, 22, 21, 0, 0, 0, 2, 1, 0, 0]' : 0.200001}", "{'[4, 0, 4, 0, 1, 0, 1, 0, 18, 22, 21, 0, 0, 0, 2, 1, 0, 0]' : 0.200013}", "{'[4, 0, 4, 0, 1, 0, 1, 0, 18, 22, 21, 0, 0, 0, 2, 1, 0, 0]' : 0.204962}", "{'[4, 0, 4, 0, 1, 0, 1, 0, 18, 22, 21, 0, 0, 0, 2, 1, 0, 0]' : 0.205863}", "{'[4, 0, 4, 0, 1, 0, 1, 0, 18, 22, 21, 0, 0, 0, 2, 1, 0, 0]' : 0.205811}", "{'[4, 0, 4, 0, 1, 0, 1, 0, 18, 22, 21, 0, 0, 0, 2, 1, 0, 0]' : 0.202158}", "{'[4, 0, 4, 0, 1, 0, 1, 0, 18, 22, 21, 0, 0, 0, 2, 1, 0, 0]' : 0.199927}", "{'[4, 0, 4, 0, 1, 0, 1, 0, 18, 22, 21, 0, 0, 0, 2, 1, 0, 0]' : 0.204115}", "{'[4, 0, 4, 0, 1, 0, 1, 0, 18, 22, 21, 0, 0, 0, 2, 1, 0, 0]' : 0.203614}", "{'[4, 0, 4, 0, 1, 0, 1, 0, 18, 22, 21, 0, 0, 0, 2, 1, 0, 0]' : 0.199856}", "{'[4, 0, 4, 0, 1, 0, 1, 0, 18, 22, 21, 0, 0, 0, 2, 1, 0, 0]' : 0.200408}", "{'[4, 0, 4, 0, 1, 0, 1, 0, 18, 22, 21, 0, 0, 0, 2, 1, 0, 0]' : 0.199777}", "{'[4, 0, 4, 0, 1, 0, 1, 0, 18, 22, 21, 0, 0, 0, 2, 1, 0, 0]' : 0.202249}", "{'[4, 0, 4, 0, 1, 0, 1, 0, 18, 22, 21, 0, 0, 0, 2, 1, 0, 0]' : 0.199964}", "{'[4, 0, 4, 0, 1, 0, 1, 0, 18, 22, 21, 0, 0, 0, 2, 1, 0, 0]' : 0.199831}", "{'[4, 0, 4, 0, 1, 0, 1, 0, 18, 22, 21, 0, 0, 0, 2, 1, 0, 0]' : 0.201381}", "{'[4, 0, 4, 0, 1, 0, 1, 0, 18, 22, 21, 0, 0, 0, 2, 1, 0, 0]' : 0.205893}", "{'[4, 0, 4, 0, 1, 0, 1, 0, 18, 22, 21, 0, 0, 0, 2, 1, 0, 0]' : 0.205989}", "{'[4, 0, 4, 0, 1, 0, 1, 0, 18, 22, 21, 0, 0, 0, 2, 1, 0, 0]' : 0.202343}", "{'[4, 0, 4, 0, 1, 0, 1, 0, 18, 22, 21, 0, 0, 0, 2, 1, 0, 0]' : 0.199857}", "{'[4, 0, 4, 0, 1, 0, 1, 0, 18, 22, 21, 0, 0, 0, 2, 1, 0, 0]' : 0.198914}", "{'[4, 0, 4, 0, 1, 0, 1, 0, 18, 22, 21, 0, 0, 0, 2, 1, 0, 0]' : 0.20028}", "{'[4, 0, 4, 0, 1, 0, 1, 0, 18, 22, 21, 0, 0, 0, 2, 1, 0, 0]' : 0.19999}", "{'[4, 0, 4, 0, 1, 0, 1, 0, 18, 22, 21, 0, 0, 0, 2, 1, 0, 0]' : 0.204429}", "{'[4, 0, 4, 0, 1, 0, 1, 0, 18, 22, 21, 0, 0, 0, 2, 1, 0, 0]' : 0.20583}"]
returning from 'run': {'[4, 0, 4, 0, 1, 0, 1, 0, 18, 22, 21, 0, 0, 0, 2, 1, 0, 0]': ([0.193865, 0.200721, 0.200199, 0.200547, 0.200366, 0.200001, 0.200013, 0.204962, 0.205863, 0.205811, 0.202158, 0.199927, 0.204115, 0.203614, 0.199856, 0.200408, 0.199777, 0.202249, 0.199964, 0.199831, 0.201381, 0.205893, 0.205989, 0.202343, 0.199857, 0.198914, 0.20028, 0.19999, 0.204429, 0.20583], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 0, 4, 0, 1, 0, 1, 0, 18, 22, 21, 0, 0, 0, 2, 1, 0, 0]': ([0.193865, 0.200721, 0.200199, 0.200547, 0.200366, 0.200001, 0.200013, 0.204962, 0.205863, 0.205811, 0.202158, 0.199927, 0.204115, 0.203614, 0.199856, 0.200408, 0.199777, 0.202249, 0.199964, 0.199831, 0.201381, 0.205893, 0.205989, 0.202343, 0.199857, 0.198914, 0.20028, 0.19999, 0.204429, 0.20583], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = kkk
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	3
        Additions: 		107
        Multiplications: 	22
        Divisions: 		0
        Logical: 		0
        Reads: 			232
        Writes: 		64
        Comparisons:		9
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest46.exe __orio_perftest46.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest46.exe  
Program Test Output: 
{'[0, 6, 4, 0, 4, 2, 1, 0, 23, 0, 29, 1, 0, 1, 0, 1, 0, 0]' : 0.220111}
{'[0, 6, 4, 0, 4, 2, 1, 0, 23, 0, 29, 1, 0, 1, 0, 1, 0, 0]' : 0.207955}
{'[0, 6, 4, 0, 4, 2, 1, 0, 23, 0, 29, 1, 0, 1, 0, 1, 0, 0]' : 0.183827}
{'[0, 6, 4, 0, 4, 2, 1, 0, 23, 0, 29, 1, 0, 1, 0, 1, 0, 0]' : 0.184154}
{'[0, 6, 4, 0, 4, 2, 1, 0, 23, 0, 29, 1, 0, 1, 0, 1, 0, 0]' : 0.183826}
{'[0, 6, 4, 0, 4, 2, 1, 0, 23, 0, 29, 1, 0, 1, 0, 1, 0, 0]' : 0.183908}
{'[0, 6, 4, 0, 4, 2, 1, 0, 23, 0, 29, 1, 0, 1, 0, 1, 0, 0]' : 0.184089}
{'[0, 6, 4, 0, 4, 2, 1, 0, 23, 0, 29, 1, 0, 1, 0, 1, 0, 0]' : 0.183853}
{'[0, 6, 4, 0, 4, 2, 1, 0, 23, 0, 29, 1, 0, 1, 0, 1, 0, 0]' : 0.183849}
{'[0, 6, 4, 0, 4, 2, 1, 0, 23, 0, 29, 1, 0, 1, 0, 1, 0, 0]' : 0.18387}
{'[0, 6, 4, 0, 4, 2, 1, 0, 23, 0, 29, 1, 0, 1, 0, 1, 0, 0]' : 0.18405}
{'[0, 6, 4, 0, 4, 2, 1, 0, 23, 0, 29, 1, 0, 1, 0, 1, 0, 0]' : 0.18388}
{'[0, 6, 4, 0, 4, 2, 1, 0, 23, 0, 29, 1, 0, 1, 0, 1, 0, 0]' : 0.183853}
{'[0, 6, 4, 0, 4, 2, 1, 0, 23, 0, 29, 1, 0, 1, 0, 1, 0, 0]' : 0.183862}
{'[0, 6, 4, 0, 4, 2, 1, 0, 23, 0, 29, 1, 0, 1, 0, 1, 0, 0]' : 0.183872}
{'[0, 6, 4, 0, 4, 2, 1, 0, 23, 0, 29, 1, 0, 1, 0, 1, 0, 0]' : 0.184122}
{'[0, 6, 4, 0, 4, 2, 1, 0, 23, 0, 29, 1, 0, 1, 0, 1, 0, 0]' : 0.183853}
{'[0, 6, 4, 0, 4, 2, 1, 0, 23, 0, 29, 1, 0, 1, 0, 1, 0, 0]' : 0.184015}
{'[0, 6, 4, 0, 4, 2, 1, 0, 23, 0, 29, 1, 0, 1, 0, 1, 0, 0]' : 0.183894}
{'[0, 6, 4, 0, 4, 2, 1, 0, 23, 0, 29, 1, 0, 1, 0, 1, 0, 0]' : 0.184278}
{'[0, 6, 4, 0, 4, 2, 1, 0, 23, 0, 29, 1, 0, 1, 0, 1, 0, 0]' : 0.18401}
{'[0, 6, 4, 0, 4, 2, 1, 0, 23, 0, 29, 1, 0, 1, 0, 1, 0, 0]' : 0.18396}
{'[0, 6, 4, 0, 4, 2, 1, 0, 23, 0, 29, 1, 0, 1, 0, 1, 0, 0]' : 0.184004}
{'[0, 6, 4, 0, 4, 2, 1, 0, 23, 0, 29, 1, 0, 1, 0, 1, 0, 0]' : 0.183942}
{'[0, 6, 4, 0, 4, 2, 1, 0, 23, 0, 29, 1, 0, 1, 0, 1, 0, 0]' : 0.183951}
{'[0, 6, 4, 0, 4, 2, 1, 0, 23, 0, 29, 1, 0, 1, 0, 1, 0, 0]' : 0.183999}
{'[0, 6, 4, 0, 4, 2, 1, 0, 23, 0, 29, 1, 0, 1, 0, 1, 0, 0]' : 0.183962}
{'[0, 6, 4, 0, 4, 2, 1, 0, 23, 0, 29, 1, 0, 1, 0, 1, 0, 0]' : 0.184164}
{'[0, 6, 4, 0, 4, 2, 1, 0, 23, 0, 29, 1, 0, 1, 0, 1, 0, 0]' : 0.18412}
{'[0, 6, 4, 0, 4, 2, 1, 0, 23, 0, 29, 1, 0, 1, 0, 1, 0, 0]' : 0.183958}

out:
 ["{'[0, 6, 4, 0, 4, 2, 1, 0, 23, 0, 29, 1, 0, 1, 0, 1, 0, 0]' : 0.220111}", "{'[0, 6, 4, 0, 4, 2, 1, 0, 23, 0, 29, 1, 0, 1, 0, 1, 0, 0]' : 0.207955}", "{'[0, 6, 4, 0, 4, 2, 1, 0, 23, 0, 29, 1, 0, 1, 0, 1, 0, 0]' : 0.183827}", "{'[0, 6, 4, 0, 4, 2, 1, 0, 23, 0, 29, 1, 0, 1, 0, 1, 0, 0]' : 0.184154}", "{'[0, 6, 4, 0, 4, 2, 1, 0, 23, 0, 29, 1, 0, 1, 0, 1, 0, 0]' : 0.183826}", "{'[0, 6, 4, 0, 4, 2, 1, 0, 23, 0, 29, 1, 0, 1, 0, 1, 0, 0]' : 0.183908}", "{'[0, 6, 4, 0, 4, 2, 1, 0, 23, 0, 29, 1, 0, 1, 0, 1, 0, 0]' : 0.184089}", "{'[0, 6, 4, 0, 4, 2, 1, 0, 23, 0, 29, 1, 0, 1, 0, 1, 0, 0]' : 0.183853}", "{'[0, 6, 4, 0, 4, 2, 1, 0, 23, 0, 29, 1, 0, 1, 0, 1, 0, 0]' : 0.183849}", "{'[0, 6, 4, 0, 4, 2, 1, 0, 23, 0, 29, 1, 0, 1, 0, 1, 0, 0]' : 0.18387}", "{'[0, 6, 4, 0, 4, 2, 1, 0, 23, 0, 29, 1, 0, 1, 0, 1, 0, 0]' : 0.18405}", "{'[0, 6, 4, 0, 4, 2, 1, 0, 23, 0, 29, 1, 0, 1, 0, 1, 0, 0]' : 0.18388}", "{'[0, 6, 4, 0, 4, 2, 1, 0, 23, 0, 29, 1, 0, 1, 0, 1, 0, 0]' : 0.183853}", "{'[0, 6, 4, 0, 4, 2, 1, 0, 23, 0, 29, 1, 0, 1, 0, 1, 0, 0]' : 0.183862}", "{'[0, 6, 4, 0, 4, 2, 1, 0, 23, 0, 29, 1, 0, 1, 0, 1, 0, 0]' : 0.183872}", "{'[0, 6, 4, 0, 4, 2, 1, 0, 23, 0, 29, 1, 0, 1, 0, 1, 0, 0]' : 0.184122}", "{'[0, 6, 4, 0, 4, 2, 1, 0, 23, 0, 29, 1, 0, 1, 0, 1, 0, 0]' : 0.183853}", "{'[0, 6, 4, 0, 4, 2, 1, 0, 23, 0, 29, 1, 0, 1, 0, 1, 0, 0]' : 0.184015}", "{'[0, 6, 4, 0, 4, 2, 1, 0, 23, 0, 29, 1, 0, 1, 0, 1, 0, 0]' : 0.183894}", "{'[0, 6, 4, 0, 4, 2, 1, 0, 23, 0, 29, 1, 0, 1, 0, 1, 0, 0]' : 0.184278}", "{'[0, 6, 4, 0, 4, 2, 1, 0, 23, 0, 29, 1, 0, 1, 0, 1, 0, 0]' : 0.18401}", "{'[0, 6, 4, 0, 4, 2, 1, 0, 23, 0, 29, 1, 0, 1, 0, 1, 0, 0]' : 0.18396}", "{'[0, 6, 4, 0, 4, 2, 1, 0, 23, 0, 29, 1, 0, 1, 0, 1, 0, 0]' : 0.184004}", "{'[0, 6, 4, 0, 4, 2, 1, 0, 23, 0, 29, 1, 0, 1, 0, 1, 0, 0]' : 0.183942}", "{'[0, 6, 4, 0, 4, 2, 1, 0, 23, 0, 29, 1, 0, 1, 0, 1, 0, 0]' : 0.183951}", "{'[0, 6, 4, 0, 4, 2, 1, 0, 23, 0, 29, 1, 0, 1, 0, 1, 0, 0]' : 0.183999}", "{'[0, 6, 4, 0, 4, 2, 1, 0, 23, 0, 29, 1, 0, 1, 0, 1, 0, 0]' : 0.183962}", "{'[0, 6, 4, 0, 4, 2, 1, 0, 23, 0, 29, 1, 0, 1, 0, 1, 0, 0]' : 0.184164}", "{'[0, 6, 4, 0, 4, 2, 1, 0, 23, 0, 29, 1, 0, 1, 0, 1, 0, 0]' : 0.18412}", "{'[0, 6, 4, 0, 4, 2, 1, 0, 23, 0, 29, 1, 0, 1, 0, 1, 0, 0]' : 0.183958}"]
returning from 'run': {'[0, 6, 4, 0, 4, 2, 1, 0, 23, 0, 29, 1, 0, 1, 0, 1, 0, 0]': ([0.220111, 0.207955, 0.183827, 0.184154, 0.183826, 0.183908, 0.184089, 0.183853, 0.183849, 0.18387, 0.18405, 0.18388, 0.183853, 0.183862, 0.183872, 0.184122, 0.183853, 0.184015, 0.183894, 0.184278, 0.18401, 0.18396, 0.184004, 0.183942, 0.183951, 0.183999, 0.183962, 0.184164, 0.18412, 0.183958], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 4, 0, 4, 2, 1, 0, 23, 0, 29, 1, 0, 1, 0, 1, 0, 0]': ([0.220111, 0.207955, 0.183827, 0.184154, 0.183826, 0.183908, 0.184089, 0.183853, 0.183849, 0.18387, 0.18405, 0.18388, 0.183853, 0.183862, 0.183872, 0.184122, 0.183853, 0.184015, 0.183894, 0.184278, 0.18401, 0.18396, 0.184004, 0.183942, 0.183951, 0.183999, 0.183962, 0.184164, 0.18412, 0.183958], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Complete design, with measurements:
     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
13      1    0    6    5    0    5       0       0   19   0   4   0    2    0
20      3    3    3    2    0    6       1       0   18   0   2   2    1    0
61      0    6    2    3    0    6       1       0    0  19   0  14    2    0
159     6    0    0    5    0    3       1       0   27   2  28   0    0    0
197     0    3    4    4    6    0       0       1    0   0   0   3    0    2
659     0    6    6    1    6    6       1       1   26   2  22   0    0    0
704     3    0    0    0    5    5       1       0   19   7   6   0    0    1
705     6    1    2    4    6    6       0       0    8  11   0   1    0    1
761     0    2    0    0    3    1       0       1   23   0  27  16    1    0
770     3    6    0    6    0    6       0       1    2   0  29  22    0    0
1152    4    2    6    6    2    0       0       0   27   6   0   7    1    0
1298    3    3    0    0    3    5       1       0   23   0   0   0    2    0
1591    6    3    2    6    2    0       0       1    0   3   3   0    1    1
1613    5    0    5    3    0    3       0       0    7  11   0   0    1    0
1720    0    0    0    6    6    6       1       1    5  23   0   6    1    0
1760    2    4    1    3    2    5       1       0    0   0  29  28    0    0
2192    4    2    4    5    6    6       0       1   27  29  29   0    2    0
2490    4    5    1    0    0    2       1       1   16  12   0  28    2    0
2494    5    1    0    4    0    1       0       0    0   0   2  11    0    1
2574    0    2    1    2    0    5       0       1   29   3   0   8    0    0
2723    2    5    2    2    0    1       0       1    3   0  13   3    0    1
2929    0    6    0    1    0    0       1       0   28  22  29   0    1    1
2980    1    0    4    2    6    0       0       0   10   0  29  28    0    1
3065    1    6    0    2    4    1       0       1    8  24   0   1    0    2
3116    6    3    0    6    1    0       0       0   11   0   9   9    2    0
3117    3    6    4    4    0    0       0       1   28   0  29   0    0    1
3173    1    2    4    6    0    3       0       1   28  22   0  29    1    1
3205    5    0    0    3    5    4       0       0   27  27   6   0    0    0
3237    0    6    4    2    4    5       0       0   17   2   0  28    0    0
3382    0    1    1    0    0    0       0       0   14   8   7   0    0    0
3609    6    5    1    4    5    1       1       0   29   0   2  29    0    0
3623    3    1    6    2    2    0       1       1   27  28  12   0    0    0
3820    3    3    6    5    1    4       0       0    3  29   0  29    1    1
3978    6    0    5    6    6    5       0       1    0   3   3   0    1    0
4069    6    6    1    0    6    1       0       0    1  29  11   0    1    0
4127    4    0    4    0    1    0       1       0   18  22  21   0    0    0
4586    0    6    4    0    4    2       1       0   23   0  29   1    0    1
     RT_K SCR VEC1 VEC2  cost_mean
13      0   0    0    1 0.16344053
20      1   0    1    1 0.10989810
61      0   0    1    1 0.19541100
159     0   1    1    0 0.15584927
197     0   0    1    0 0.23600777
659     1   0    1    0 0.22760900
704     1   0    1    0 0.12600573
705     1   0    1    1 0.11602203
761     1   0    0    1 0.12193053
770     0   0    1    0 0.24253490
1152    0   1    1    0 0.09274588
1298    0   1    0    1 0.17784903
1591    0   0    0    0 0.10323992
1613    1   1    0    0 0.09519231
1720    1   1    0    1 0.11032307
1760    1   0    0    0 0.25442310
2192    0   0    0    0 0.28032023
2490    0   1    1    0 0.17822847
2494    0   1    1    0 0.15933123
2574    0   0    0    1 0.28452347
2723    1   0    0    0 0.29751387
2929    0   0    0    0 0.09519448
2980    0   1    1    0 0.18247783
3065    0   1    1    0 0.20982397
3116    0   0    0    0 0.25195600
3117    1   1    1    1 0.19444483
3173    0   1    1    0 0.11509267
3205    2   0    1    1 0.16424993
3237    2   1    1    1 0.10084208
3382    1   0    1    0 0.11362257
3609    1   0    0    0 0.30387753
3623    0   0    1    1 0.36838890
3820    0   1    0    1 0.08925421
3978    0   0    0    0 0.09754661
4069    0   1    0    1 0.10736493
4127    2   1    0    0 0.20163843
4586    0   1    0    0 0.18597303

Heteroscedasticity Test p-value: 0.254517103383
Regression Step:                Df  Sum Sq Mean Sq F value  Pr(>F)   
T1_I             1 0.00058 0.00058   0.665 0.45179   
T1_J             1 0.00740 0.00740   8.549 0.03286 * 
T1_K             1 0.00002 0.00002   0.019 0.89611   
T2_I             1 0.00000 0.00000   0.001 0.97537   
T2_J             1 0.00004 0.00004   0.044 0.84201   
T2_K             1 0.00128 0.00128   1.477 0.27845   
ACOPY_x          1 0.00734 0.00734   8.478 0.03333 * 
ACOPY_y          1 0.02164 0.02164  24.984 0.00411 **
U1_I             1 0.00236 0.00236   2.730 0.15941   
U_I              1 0.00217 0.00217   2.510 0.17395   
U_J              1 0.00389 0.00389   4.494 0.08752 . 
U_K              1 0.00102 0.00102   1.175 0.32792   
RT_I             1 0.00476 0.00476   5.495 0.06604 . 
RT_J             1 0.00296 0.00296   3.422 0.12357   
RT_K             1 0.00564 0.00564   6.512 0.05115 . 
SCR              1 0.02024 0.02024  23.374 0.00474 **
VEC1             1 0.00182 0.00182   2.096 0.20730   
VEC2             1 0.00015 0.00015   0.170 0.69741   
I(1/(1 + T1_I))  1 0.01931 0.01931  22.299 0.00523 **
I(1/(1 + T1_J))  1 0.00038 0.00038   0.439 0.53697   
I(1/(1 + T1_K))  1 0.00141 0.00141   1.625 0.25846   
I(1/(1 + T2_I))  1 0.01290 0.01290  14.894 0.01189 * 
I(1/(1 + T2_J))  1 0.00026 0.00026   0.305 0.60455   
I(1/(1 + T2_K))  1 0.00029 0.00029   0.338 0.58635   
I(1/(1 + U1_I))  1 0.00102 0.00102   1.181 0.32665   
I(1/(1 + U_I))   1 0.03065 0.03065  35.385 0.00192 **
I(1/(1 + U_J))   1 0.00243 0.00243   2.808 0.15462   
I(1/(1 + U_K))   1 0.00004 0.00004   0.048 0.83576   
I(1/(1 + RT_I))  1 0.03449 0.03449  39.822 0.00147 **
I(1/(1 + RT_J))  1 0.00010 0.00010   0.116 0.74749   
I(1/(1 + RT_K))  1 0.00075 0.00075   0.864 0.39523   
Residuals        5 0.00433 0.00087                   
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Predicting Best
Generating valid search space of size 4600 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Valid coordinates: 920
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Valid coordinates: 1840
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Valid coordinates: 2760
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Tested coordinates: 150000
Valid coordinates: 3680
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Tested coordinates: 190000
Valid coordinates: 4600
Valid/Tested configurations: 4600/192409
Generated Search Space:
NULL
Identical predictions (tol = 1e-5): 1
Getting Best from Design
Response: ['cost_mean']
Design Names:  [1] "T1_I"      "T1_J"      "T1_K"      "T2_I"      "T2_J"      "T2_K"     
 [7] "ACOPY_x"   "ACOPY_y"   "U1_I"      "U_I"       "U_J"       "U_K"      
[13] "RT_I"      "RT_J"      "RT_K"      "SCR"       "VEC1"      "VEC2"     
[19] "cost_mean"

Design Response:       cost_mean
13   0.16344053
20   0.10989810
61   0.19541100
159  0.15584927
197  0.23600777
659  0.22760900
704  0.12600573
705  0.11602203
761  0.12193053
770  0.24253490
1152 0.09274588
1298 0.17784903
1591 0.10323992
1613 0.09519231
1720 0.11032307
1760 0.25442310
2192 0.28032023
2490 0.17822847
2494 0.15933123
2574 0.28452347
2723 0.29751387
2929 0.09519448
2980 0.18247783
3065 0.20982397
3116 0.25195600
3117 0.19444483
3173 0.11509267
3205 0.16424993
3237 0.10084208
3382 0.11362257
3609 0.30387753
3623 0.36838890
3820 0.08925421
3978 0.09754661
4069 0.10736493
4127 0.20163843
4586 0.18597303

Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Getting fixed variables
Pruning Model
Best Predicted:      T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
3930    3    4    1    6    0    5       1       0   20   4  29   0    1    1
     RT_K SCR VEC1 VEC2
3930    0   1    1    1

Best From Design: [3, 3, 6, 5, 1, 4, 0, 0, 3, 29, 0, 29, 1, 1, 0, 1, 0, 1]
Pruned Factors: ['T1_I', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_K', 'RT_J', 'VEC1', 'VEC2']
Fixed Factors: {'ACOPY_x': 1, 'ACOPY_y': 0, 'RT_K': 0, 'RT_I': 1, 'T1_J': 4, 'U_J': 29, 'SCR': 1}
Length of requested configs: 1
Result was on Database, Returning Now
Starting Point (-O3):
0.16283083333333334
Predicted Best Point:
[3, 4, 1, 6, 0, 5, 1, 0, 20, 4, 29, 0, 1, 1, 0, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	29
        Max loop nest depth: 	6
        Additions: 		638
        Multiplications: 	252
        Divisions: 		0
        Logical: 		0
        Reads: 			1359
        Writes: 		279
        Comparisons:		29
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest47.exe __orio_perftest47.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest47.exe  
Program Test Output: 
{'[3, 4, 1, 6, 0, 5, 1, 0, 20, 4, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.119372}
{'[3, 4, 1, 6, 0, 5, 1, 0, 20, 4, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.119334}
{'[3, 4, 1, 6, 0, 5, 1, 0, 20, 4, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.112464}
{'[3, 4, 1, 6, 0, 5, 1, 0, 20, 4, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.100823}
{'[3, 4, 1, 6, 0, 5, 1, 0, 20, 4, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.100637}
{'[3, 4, 1, 6, 0, 5, 1, 0, 20, 4, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.100699}
{'[3, 4, 1, 6, 0, 5, 1, 0, 20, 4, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.100657}
{'[3, 4, 1, 6, 0, 5, 1, 0, 20, 4, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.100656}
{'[3, 4, 1, 6, 0, 5, 1, 0, 20, 4, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.100671}
{'[3, 4, 1, 6, 0, 5, 1, 0, 20, 4, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.100682}
{'[3, 4, 1, 6, 0, 5, 1, 0, 20, 4, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.100675}
{'[3, 4, 1, 6, 0, 5, 1, 0, 20, 4, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.100619}
{'[3, 4, 1, 6, 0, 5, 1, 0, 20, 4, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.100683}
{'[3, 4, 1, 6, 0, 5, 1, 0, 20, 4, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.100724}
{'[3, 4, 1, 6, 0, 5, 1, 0, 20, 4, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.100655}
{'[3, 4, 1, 6, 0, 5, 1, 0, 20, 4, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.100687}
{'[3, 4, 1, 6, 0, 5, 1, 0, 20, 4, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.10089}
{'[3, 4, 1, 6, 0, 5, 1, 0, 20, 4, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.100639}
{'[3, 4, 1, 6, 0, 5, 1, 0, 20, 4, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.100642}
{'[3, 4, 1, 6, 0, 5, 1, 0, 20, 4, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.100927}
{'[3, 4, 1, 6, 0, 5, 1, 0, 20, 4, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.100686}
{'[3, 4, 1, 6, 0, 5, 1, 0, 20, 4, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.100809}
{'[3, 4, 1, 6, 0, 5, 1, 0, 20, 4, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.100679}
{'[3, 4, 1, 6, 0, 5, 1, 0, 20, 4, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.100635}
{'[3, 4, 1, 6, 0, 5, 1, 0, 20, 4, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.100675}
{'[3, 4, 1, 6, 0, 5, 1, 0, 20, 4, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.100638}
{'[3, 4, 1, 6, 0, 5, 1, 0, 20, 4, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.100724}
{'[3, 4, 1, 6, 0, 5, 1, 0, 20, 4, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.10074}
{'[3, 4, 1, 6, 0, 5, 1, 0, 20, 4, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.100656}
{'[3, 4, 1, 6, 0, 5, 1, 0, 20, 4, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.10072}

out:
 ["{'[3, 4, 1, 6, 0, 5, 1, 0, 20, 4, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.119372}", "{'[3, 4, 1, 6, 0, 5, 1, 0, 20, 4, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.119334}", "{'[3, 4, 1, 6, 0, 5, 1, 0, 20, 4, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.112464}", "{'[3, 4, 1, 6, 0, 5, 1, 0, 20, 4, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.100823}", "{'[3, 4, 1, 6, 0, 5, 1, 0, 20, 4, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.100637}", "{'[3, 4, 1, 6, 0, 5, 1, 0, 20, 4, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.100699}", "{'[3, 4, 1, 6, 0, 5, 1, 0, 20, 4, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.100657}", "{'[3, 4, 1, 6, 0, 5, 1, 0, 20, 4, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.100656}", "{'[3, 4, 1, 6, 0, 5, 1, 0, 20, 4, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.100671}", "{'[3, 4, 1, 6, 0, 5, 1, 0, 20, 4, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.100682}", "{'[3, 4, 1, 6, 0, 5, 1, 0, 20, 4, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.100675}", "{'[3, 4, 1, 6, 0, 5, 1, 0, 20, 4, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.100619}", "{'[3, 4, 1, 6, 0, 5, 1, 0, 20, 4, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.100683}", "{'[3, 4, 1, 6, 0, 5, 1, 0, 20, 4, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.100724}", "{'[3, 4, 1, 6, 0, 5, 1, 0, 20, 4, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.100655}", "{'[3, 4, 1, 6, 0, 5, 1, 0, 20, 4, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.100687}", "{'[3, 4, 1, 6, 0, 5, 1, 0, 20, 4, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.10089}", "{'[3, 4, 1, 6, 0, 5, 1, 0, 20, 4, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.100639}", "{'[3, 4, 1, 6, 0, 5, 1, 0, 20, 4, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.100642}", "{'[3, 4, 1, 6, 0, 5, 1, 0, 20, 4, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.100927}", "{'[3, 4, 1, 6, 0, 5, 1, 0, 20, 4, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.100686}", "{'[3, 4, 1, 6, 0, 5, 1, 0, 20, 4, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.100809}", "{'[3, 4, 1, 6, 0, 5, 1, 0, 20, 4, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.100679}", "{'[3, 4, 1, 6, 0, 5, 1, 0, 20, 4, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.100635}", "{'[3, 4, 1, 6, 0, 5, 1, 0, 20, 4, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.100675}", "{'[3, 4, 1, 6, 0, 5, 1, 0, 20, 4, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.100638}", "{'[3, 4, 1, 6, 0, 5, 1, 0, 20, 4, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.100724}", "{'[3, 4, 1, 6, 0, 5, 1, 0, 20, 4, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.10074}", "{'[3, 4, 1, 6, 0, 5, 1, 0, 20, 4, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.100656}", "{'[3, 4, 1, 6, 0, 5, 1, 0, 20, 4, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.10072}"]
returning from 'run': {'[3, 4, 1, 6, 0, 5, 1, 0, 20, 4, 29, 0, 1, 1, 0, 1, 1, 1]': ([0.119372, 0.119334, 0.112464, 0.100823, 0.100637, 0.100699, 0.100657, 0.100656, 0.100671, 0.100682, 0.100675, 0.100619, 0.100683, 0.100724, 0.100655, 0.100687, 0.10089, 0.100639, 0.100642, 0.100927, 0.100686, 0.100809, 0.100679, 0.100635, 0.100675, 0.100638, 0.100724, 0.10074, 0.100656, 0.10072], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 4, 1, 6, 0, 5, 1, 0, 20, 4, 29, 0, 1, 1, 0, 1, 1, 1]': ([0.119372, 0.119334, 0.112464, 0.100823, 0.100637, 0.100699, 0.100657, 0.100656, 0.100671, 0.100682, 0.100675, 0.100619, 0.100683, 0.100724, 0.100655, 0.100687, 0.10089, 0.100639, 0.100642, 0.100927, 0.100686, 0.100809, 0.100679, 0.100635, 0.100675, 0.100638, 0.100724, 0.10074, 0.100656, 0.10072], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Design Best Point:
[3, 3, 6, 5, 1, 4, 0, 0, 3, 29, 0, 29, 1, 1, 0, 1, 0, 1]
Length of requested configs: 1
Result was on Database, Returning Now
Fixed Factors: {'ACOPY_x': 1, 'ACOPY_y': 0, 'RT_K': 0, 'RT_I': 1, 'T1_J': 4, 'U_J': 29, 'SCR': 1}
Slowdown (Design Best): 0.5481406981683445
Slowdown (Predicted Best): 0.6284841630117145
Budget: 37/180
Updating Global Best: 0.08925420666666668
Current Best Point: 
[3, 3, 6, 5, 1, 4, 0, 0, 3, 29, 0, 29, 1, 1, 0, 1, 0, 1]
Step 1
Generating valid search space of size 3000 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Valid coordinates: 600
Tested coordinates: 30000
Tested coordinates: 40000
Valid coordinates: 1200
Tested coordinates: 50000
Tested coordinates: 60000
Valid coordinates: 1800
Tested coordinates: 70000
Tested coordinates: 80000
Valid coordinates: 2400
Tested coordinates: 90000
Tested coordinates: 100000
Valid coordinates: 3000
Valid/Tested configurations: 3000/104930
Generated Search Space:
NULL
Clean Info:
Removed Factors: character(0)

Removed Inverse Factors: [1] "RT_J" "VEC1" "VEC2"

New Factors: ['T1_I', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_K', 'RT_J', 'VEC1', 'VEC2']
New Inverse Factors: ['T1_I', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_K']
New Fixed Factors: {'ACOPY_x': 1, 'ACOPY_y': 0, 'RT_K': 0, 'RT_I': 1, 'T1_J': 4, 'U_J': 29, 'SCR': 1}
Full Model:  ~ T1_I + T1_K + T2_I + T2_J + T2_K + U1_I + U_I + U_K + RT_J + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_K))
Fixed Factors: {'ACOPY_x': 1, 'ACOPY_y': 0, 'RT_K': 0, 'RT_I': 1, 'T1_J': 4, 'U_J': 29, 'SCR': 1}
Computing D-Optimal Design
Computing D-Optimal Design with 30 experiments
Design Formula:  ~ T1_I + T1_K + T2_I + T2_J + T2_K + U1_I + U_I + U_K + RT_J + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_K))
Starting "optFederov" run
Using Search Space:
NULL
Data Dimensions: [1] 3000   11

     T1_I T1_K T2_I T2_J T2_K U1_I U_I U_K RT_J VEC1 VEC2
20      0    3    1    5    5    3  27   0    1    1    0
270     0    1    6    2    3    5   0   0    0    1    0
318     1    3    0    6    1   28  29   0    0    0    0
398     1    1    0    0    6    0  28   0    0    1    1
504     3    1    2    6    1    9  12   0    1    0    1
636     5    6    6    0    6    1   0  26    1    0    0
649     6    0    0    4    6    3  20   0    0    0    1
686     5    0    4    6    2    0   0  29    0    1    0
741     6    2    6    3    2   27   0   4    1    1    0
756     6    0    0    0    0    6  27   0    1    1    1
796     5    1    5    0    0    0  29   0    1    0    1
1084    1    1    4    6    1    4   0   0    1    0    1
1426    2    5    4    5    5   29  29   0    0    1    1
1435    2    2    6    5    6    8   5   0    0    1    1
1459    0    1    0    6    6   26   0   1    0    0    1
1465    1    0    2    3    0    8   0   5    0    1    1
1481    0    6    0    6    4    1   0  17    1    0    1
1619    2    0    0    3    2    0   0   6    1    0    0
1658    3    6    6    6    0    7   0  29    1    1    1
1810    6    4    6    0    2   27  14   0    0    1    1
1837    0    0    6    6    0   22  18   0    0    0    0
2207    6    2    0    0    0   27   0  28    0    0    0
2296    1    5    6    2    3   10  28   0    0    0    1
2426    6    4    0    2    2   15   7   0    1    1    0
2513    0    5    1    2    0    0  11   0    0    0    1
2585    5    6    5    5    6   28   0   0    1    1    1
2588    0    0    3    0    6   21   0   2    0    1    1
2623    2    0    0    0    3   29  11   0    1    1    0
2830    0    2    3    2    6   29   0  29    1    0    1
2937    3    6    2    6    6    8   0  12    0    0    0

D-Efficiency Approximation: [1] 0.554

Measuring design of size 30
Current Design Names: ['T1_I', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_K', 'RT_J', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Length of requested configs: 1
Code stats:
        Number of loops: 	54
        Max loop nest depth: 	5
        Additions: 		1547
        Multiplications: 	666
        Divisions: 		0
        Logical: 		0
        Reads: 			3213
        Writes: 		605
        Comparisons:		54
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest48.exe __orio_perftest48.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest48.exe  
Program Test Output: 
{'[0, 4, 3, 1, 5, 5, 1, 0, 3, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.102459}
{'[0, 4, 3, 1, 5, 5, 1, 0, 3, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.106024}
{'[0, 4, 3, 1, 5, 5, 1, 0, 3, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.103261}
{'[0, 4, 3, 1, 5, 5, 1, 0, 3, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.103782}
{'[0, 4, 3, 1, 5, 5, 1, 0, 3, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104466}
{'[0, 4, 3, 1, 5, 5, 1, 0, 3, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104489}
{'[0, 4, 3, 1, 5, 5, 1, 0, 3, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104443}
{'[0, 4, 3, 1, 5, 5, 1, 0, 3, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.102554}
{'[0, 4, 3, 1, 5, 5, 1, 0, 3, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104119}
{'[0, 4, 3, 1, 5, 5, 1, 0, 3, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.10446}
{'[0, 4, 3, 1, 5, 5, 1, 0, 3, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.10435}
{'[0, 4, 3, 1, 5, 5, 1, 0, 3, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104746}
{'[0, 4, 3, 1, 5, 5, 1, 0, 3, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104572}
{'[0, 4, 3, 1, 5, 5, 1, 0, 3, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104737}
{'[0, 4, 3, 1, 5, 5, 1, 0, 3, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104874}
{'[0, 4, 3, 1, 5, 5, 1, 0, 3, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104838}
{'[0, 4, 3, 1, 5, 5, 1, 0, 3, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.102612}
{'[0, 4, 3, 1, 5, 5, 1, 0, 3, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.103174}
{'[0, 4, 3, 1, 5, 5, 1, 0, 3, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.10482}
{'[0, 4, 3, 1, 5, 5, 1, 0, 3, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104825}
{'[0, 4, 3, 1, 5, 5, 1, 0, 3, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104822}
{'[0, 4, 3, 1, 5, 5, 1, 0, 3, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104786}
{'[0, 4, 3, 1, 5, 5, 1, 0, 3, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.105087}
{'[0, 4, 3, 1, 5, 5, 1, 0, 3, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104802}
{'[0, 4, 3, 1, 5, 5, 1, 0, 3, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104835}
{'[0, 4, 3, 1, 5, 5, 1, 0, 3, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104834}
{'[0, 4, 3, 1, 5, 5, 1, 0, 3, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104805}
{'[0, 4, 3, 1, 5, 5, 1, 0, 3, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104411}
{'[0, 4, 3, 1, 5, 5, 1, 0, 3, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104768}
{'[0, 4, 3, 1, 5, 5, 1, 0, 3, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104829}

out:
 ["{'[0, 4, 3, 1, 5, 5, 1, 0, 3, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.102459}", "{'[0, 4, 3, 1, 5, 5, 1, 0, 3, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.106024}", "{'[0, 4, 3, 1, 5, 5, 1, 0, 3, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.103261}", "{'[0, 4, 3, 1, 5, 5, 1, 0, 3, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.103782}", "{'[0, 4, 3, 1, 5, 5, 1, 0, 3, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104466}", "{'[0, 4, 3, 1, 5, 5, 1, 0, 3, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104489}", "{'[0, 4, 3, 1, 5, 5, 1, 0, 3, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104443}", "{'[0, 4, 3, 1, 5, 5, 1, 0, 3, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.102554}", "{'[0, 4, 3, 1, 5, 5, 1, 0, 3, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104119}", "{'[0, 4, 3, 1, 5, 5, 1, 0, 3, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.10446}", "{'[0, 4, 3, 1, 5, 5, 1, 0, 3, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.10435}", "{'[0, 4, 3, 1, 5, 5, 1, 0, 3, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104746}", "{'[0, 4, 3, 1, 5, 5, 1, 0, 3, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104572}", "{'[0, 4, 3, 1, 5, 5, 1, 0, 3, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104737}", "{'[0, 4, 3, 1, 5, 5, 1, 0, 3, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104874}", "{'[0, 4, 3, 1, 5, 5, 1, 0, 3, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104838}", "{'[0, 4, 3, 1, 5, 5, 1, 0, 3, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.102612}", "{'[0, 4, 3, 1, 5, 5, 1, 0, 3, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.103174}", "{'[0, 4, 3, 1, 5, 5, 1, 0, 3, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.10482}", "{'[0, 4, 3, 1, 5, 5, 1, 0, 3, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104825}", "{'[0, 4, 3, 1, 5, 5, 1, 0, 3, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104822}", "{'[0, 4, 3, 1, 5, 5, 1, 0, 3, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104786}", "{'[0, 4, 3, 1, 5, 5, 1, 0, 3, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.105087}", "{'[0, 4, 3, 1, 5, 5, 1, 0, 3, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104802}", "{'[0, 4, 3, 1, 5, 5, 1, 0, 3, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104835}", "{'[0, 4, 3, 1, 5, 5, 1, 0, 3, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104834}", "{'[0, 4, 3, 1, 5, 5, 1, 0, 3, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104805}", "{'[0, 4, 3, 1, 5, 5, 1, 0, 3, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104411}", "{'[0, 4, 3, 1, 5, 5, 1, 0, 3, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104768}", "{'[0, 4, 3, 1, 5, 5, 1, 0, 3, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104829}"]
returning from 'run': {'[0, 4, 3, 1, 5, 5, 1, 0, 3, 27, 29, 0, 1, 1, 0, 1, 1, 0]': ([0.102459, 0.106024, 0.103261, 0.103782, 0.104466, 0.104489, 0.104443, 0.102554, 0.104119, 0.10446, 0.10435, 0.104746, 0.104572, 0.104737, 0.104874, 0.104838, 0.102612, 0.103174, 0.10482, 0.104825, 0.104822, 0.104786, 0.105087, 0.104802, 0.104835, 0.104834, 0.104805, 0.104411, 0.104768, 0.104829], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 4, 3, 1, 5, 5, 1, 0, 3, 27, 29, 0, 1, 1, 0, 1, 1, 0]': ([0.102459, 0.106024, 0.103261, 0.103782, 0.104466, 0.104489, 0.104443, 0.102554, 0.104119, 0.10446, 0.10435, 0.104746, 0.104572, 0.104737, 0.104874, 0.104838, 0.102612, 0.103174, 0.10482, 0.104825, 0.104822, 0.104786, 0.105087, 0.104802, 0.104835, 0.104834, 0.104805, 0.104411, 0.104768, 0.104829], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = jjj
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	5
        Additions: 		1276
        Multiplications: 	576
        Divisions: 		0
        Logical: 		0
        Reads: 			2429
        Writes: 		393
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest49.exe __orio_perftest49.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest49.exe  
Program Test Output: 
{'[0, 4, 1, 6, 2, 3, 1, 0, 5, 0, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.101472}
{'[0, 4, 1, 6, 2, 3, 1, 0, 5, 0, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.104418}
{'[0, 4, 1, 6, 2, 3, 1, 0, 5, 0, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.104203}
{'[0, 4, 1, 6, 2, 3, 1, 0, 5, 0, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.104103}
{'[0, 4, 1, 6, 2, 3, 1, 0, 5, 0, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.104042}
{'[0, 4, 1, 6, 2, 3, 1, 0, 5, 0, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.104672}
{'[0, 4, 1, 6, 2, 3, 1, 0, 5, 0, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.104801}
{'[0, 4, 1, 6, 2, 3, 1, 0, 5, 0, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.105357}
{'[0, 4, 1, 6, 2, 3, 1, 0, 5, 0, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.106761}
{'[0, 4, 1, 6, 2, 3, 1, 0, 5, 0, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.106769}
{'[0, 4, 1, 6, 2, 3, 1, 0, 5, 0, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.104629}
{'[0, 4, 1, 6, 2, 3, 1, 0, 5, 0, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.104106}
{'[0, 4, 1, 6, 2, 3, 1, 0, 5, 0, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.104268}
{'[0, 4, 1, 6, 2, 3, 1, 0, 5, 0, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.104188}
{'[0, 4, 1, 6, 2, 3, 1, 0, 5, 0, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.104113}
{'[0, 4, 1, 6, 2, 3, 1, 0, 5, 0, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.104225}
{'[0, 4, 1, 6, 2, 3, 1, 0, 5, 0, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.104255}
{'[0, 4, 1, 6, 2, 3, 1, 0, 5, 0, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.104112}
{'[0, 4, 1, 6, 2, 3, 1, 0, 5, 0, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.104067}
{'[0, 4, 1, 6, 2, 3, 1, 0, 5, 0, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.101984}
{'[0, 4, 1, 6, 2, 3, 1, 0, 5, 0, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.103597}
{'[0, 4, 1, 6, 2, 3, 1, 0, 5, 0, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.104097}
{'[0, 4, 1, 6, 2, 3, 1, 0, 5, 0, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.104214}
{'[0, 4, 1, 6, 2, 3, 1, 0, 5, 0, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.104303}
{'[0, 4, 1, 6, 2, 3, 1, 0, 5, 0, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.104251}
{'[0, 4, 1, 6, 2, 3, 1, 0, 5, 0, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.106612}
{'[0, 4, 1, 6, 2, 3, 1, 0, 5, 0, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.106811}
{'[0, 4, 1, 6, 2, 3, 1, 0, 5, 0, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.104676}
{'[0, 4, 1, 6, 2, 3, 1, 0, 5, 0, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.104116}
{'[0, 4, 1, 6, 2, 3, 1, 0, 5, 0, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.104931}

out:
 ["{'[0, 4, 1, 6, 2, 3, 1, 0, 5, 0, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.101472}", "{'[0, 4, 1, 6, 2, 3, 1, 0, 5, 0, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.104418}", "{'[0, 4, 1, 6, 2, 3, 1, 0, 5, 0, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.104203}", "{'[0, 4, 1, 6, 2, 3, 1, 0, 5, 0, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.104103}", "{'[0, 4, 1, 6, 2, 3, 1, 0, 5, 0, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.104042}", "{'[0, 4, 1, 6, 2, 3, 1, 0, 5, 0, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.104672}", "{'[0, 4, 1, 6, 2, 3, 1, 0, 5, 0, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.104801}", "{'[0, 4, 1, 6, 2, 3, 1, 0, 5, 0, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.105357}", "{'[0, 4, 1, 6, 2, 3, 1, 0, 5, 0, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.106761}", "{'[0, 4, 1, 6, 2, 3, 1, 0, 5, 0, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.106769}", "{'[0, 4, 1, 6, 2, 3, 1, 0, 5, 0, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.104629}", "{'[0, 4, 1, 6, 2, 3, 1, 0, 5, 0, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.104106}", "{'[0, 4, 1, 6, 2, 3, 1, 0, 5, 0, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.104268}", "{'[0, 4, 1, 6, 2, 3, 1, 0, 5, 0, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.104188}", "{'[0, 4, 1, 6, 2, 3, 1, 0, 5, 0, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.104113}", "{'[0, 4, 1, 6, 2, 3, 1, 0, 5, 0, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.104225}", "{'[0, 4, 1, 6, 2, 3, 1, 0, 5, 0, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.104255}", "{'[0, 4, 1, 6, 2, 3, 1, 0, 5, 0, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.104112}", "{'[0, 4, 1, 6, 2, 3, 1, 0, 5, 0, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.104067}", "{'[0, 4, 1, 6, 2, 3, 1, 0, 5, 0, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.101984}", "{'[0, 4, 1, 6, 2, 3, 1, 0, 5, 0, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.103597}", "{'[0, 4, 1, 6, 2, 3, 1, 0, 5, 0, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.104097}", "{'[0, 4, 1, 6, 2, 3, 1, 0, 5, 0, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.104214}", "{'[0, 4, 1, 6, 2, 3, 1, 0, 5, 0, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.104303}", "{'[0, 4, 1, 6, 2, 3, 1, 0, 5, 0, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.104251}", "{'[0, 4, 1, 6, 2, 3, 1, 0, 5, 0, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.106612}", "{'[0, 4, 1, 6, 2, 3, 1, 0, 5, 0, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.106811}", "{'[0, 4, 1, 6, 2, 3, 1, 0, 5, 0, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.104676}", "{'[0, 4, 1, 6, 2, 3, 1, 0, 5, 0, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.104116}", "{'[0, 4, 1, 6, 2, 3, 1, 0, 5, 0, 29, 0, 1, 0, 0, 1, 1, 0]' : 0.104931}"]
returning from 'run': {'[0, 4, 1, 6, 2, 3, 1, 0, 5, 0, 29, 0, 1, 0, 0, 1, 1, 0]': ([0.101472, 0.104418, 0.104203, 0.104103, 0.104042, 0.104672, 0.104801, 0.105357, 0.106761, 0.106769, 0.104629, 0.104106, 0.104268, 0.104188, 0.104113, 0.104225, 0.104255, 0.104112, 0.104067, 0.101984, 0.103597, 0.104097, 0.104214, 0.104303, 0.104251, 0.106612, 0.106811, 0.104676, 0.104116, 0.104931], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 4, 1, 6, 2, 3, 1, 0, 5, 0, 29, 0, 1, 0, 0, 1, 1, 0]': ([0.101472, 0.104418, 0.104203, 0.104103, 0.104042, 0.104672, 0.104801, 0.105357, 0.106761, 0.106769, 0.104629, 0.104106, 0.104268, 0.104188, 0.104113, 0.104225, 0.104255, 0.104112, 0.104067, 0.101984, 0.103597, 0.104097, 0.104214, 0.104303, 0.104251, 0.106612, 0.106811, 0.104676, 0.104116, 0.104931], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = kkk
Code stats:
        Number of loops: 	114
        Max loop nest depth: 	5
        Additions: 		7498
        Multiplications: 	2496
        Divisions: 		0
        Logical: 		0
        Reads: 			12200
        Writes: 		1685
        Comparisons:		114
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest50.exe __orio_perftest50.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest50.exe  
Program Test Output: 
{'[1, 4, 3, 0, 6, 1, 1, 0, 28, 29, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.12197}
{'[1, 4, 3, 0, 6, 1, 1, 0, 28, 29, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.121908}
{'[1, 4, 3, 0, 6, 1, 1, 0, 28, 29, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.121983}
{'[1, 4, 3, 0, 6, 1, 1, 0, 28, 29, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.110429}
{'[1, 4, 3, 0, 6, 1, 1, 0, 28, 29, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.102838}
{'[1, 4, 3, 0, 6, 1, 1, 0, 28, 29, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.102955}
{'[1, 4, 3, 0, 6, 1, 1, 0, 28, 29, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.102868}
{'[1, 4, 3, 0, 6, 1, 1, 0, 28, 29, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.102977}
{'[1, 4, 3, 0, 6, 1, 1, 0, 28, 29, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.102925}
{'[1, 4, 3, 0, 6, 1, 1, 0, 28, 29, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.103011}
{'[1, 4, 3, 0, 6, 1, 1, 0, 28, 29, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.10284}
{'[1, 4, 3, 0, 6, 1, 1, 0, 28, 29, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.102921}
{'[1, 4, 3, 0, 6, 1, 1, 0, 28, 29, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.102923}
{'[1, 4, 3, 0, 6, 1, 1, 0, 28, 29, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.102875}
{'[1, 4, 3, 0, 6, 1, 1, 0, 28, 29, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.103056}
{'[1, 4, 3, 0, 6, 1, 1, 0, 28, 29, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.102874}
{'[1, 4, 3, 0, 6, 1, 1, 0, 28, 29, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.102945}
{'[1, 4, 3, 0, 6, 1, 1, 0, 28, 29, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.102925}
{'[1, 4, 3, 0, 6, 1, 1, 0, 28, 29, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.102888}
{'[1, 4, 3, 0, 6, 1, 1, 0, 28, 29, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.103177}
{'[1, 4, 3, 0, 6, 1, 1, 0, 28, 29, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.102884}
{'[1, 4, 3, 0, 6, 1, 1, 0, 28, 29, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.102943}
{'[1, 4, 3, 0, 6, 1, 1, 0, 28, 29, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.103194}
{'[1, 4, 3, 0, 6, 1, 1, 0, 28, 29, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.103446}
{'[1, 4, 3, 0, 6, 1, 1, 0, 28, 29, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.109844}
{'[1, 4, 3, 0, 6, 1, 1, 0, 28, 29, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.109655}
{'[1, 4, 3, 0, 6, 1, 1, 0, 28, 29, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.109717}
{'[1, 4, 3, 0, 6, 1, 1, 0, 28, 29, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.109653}
{'[1, 4, 3, 0, 6, 1, 1, 0, 28, 29, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.109697}
{'[1, 4, 3, 0, 6, 1, 1, 0, 28, 29, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.109697}

out:
 ["{'[1, 4, 3, 0, 6, 1, 1, 0, 28, 29, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.12197}", "{'[1, 4, 3, 0, 6, 1, 1, 0, 28, 29, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.121908}", "{'[1, 4, 3, 0, 6, 1, 1, 0, 28, 29, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.121983}", "{'[1, 4, 3, 0, 6, 1, 1, 0, 28, 29, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.110429}", "{'[1, 4, 3, 0, 6, 1, 1, 0, 28, 29, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.102838}", "{'[1, 4, 3, 0, 6, 1, 1, 0, 28, 29, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.102955}", "{'[1, 4, 3, 0, 6, 1, 1, 0, 28, 29, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.102868}", "{'[1, 4, 3, 0, 6, 1, 1, 0, 28, 29, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.102977}", "{'[1, 4, 3, 0, 6, 1, 1, 0, 28, 29, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.102925}", "{'[1, 4, 3, 0, 6, 1, 1, 0, 28, 29, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.103011}", "{'[1, 4, 3, 0, 6, 1, 1, 0, 28, 29, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.10284}", "{'[1, 4, 3, 0, 6, 1, 1, 0, 28, 29, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.102921}", "{'[1, 4, 3, 0, 6, 1, 1, 0, 28, 29, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.102923}", "{'[1, 4, 3, 0, 6, 1, 1, 0, 28, 29, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.102875}", "{'[1, 4, 3, 0, 6, 1, 1, 0, 28, 29, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.103056}", "{'[1, 4, 3, 0, 6, 1, 1, 0, 28, 29, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.102874}", "{'[1, 4, 3, 0, 6, 1, 1, 0, 28, 29, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.102945}", "{'[1, 4, 3, 0, 6, 1, 1, 0, 28, 29, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.102925}", "{'[1, 4, 3, 0, 6, 1, 1, 0, 28, 29, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.102888}", "{'[1, 4, 3, 0, 6, 1, 1, 0, 28, 29, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.103177}", "{'[1, 4, 3, 0, 6, 1, 1, 0, 28, 29, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.102884}", "{'[1, 4, 3, 0, 6, 1, 1, 0, 28, 29, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.102943}", "{'[1, 4, 3, 0, 6, 1, 1, 0, 28, 29, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.103194}", "{'[1, 4, 3, 0, 6, 1, 1, 0, 28, 29, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.103446}", "{'[1, 4, 3, 0, 6, 1, 1, 0, 28, 29, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.109844}", "{'[1, 4, 3, 0, 6, 1, 1, 0, 28, 29, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.109655}", "{'[1, 4, 3, 0, 6, 1, 1, 0, 28, 29, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.109717}", "{'[1, 4, 3, 0, 6, 1, 1, 0, 28, 29, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.109653}", "{'[1, 4, 3, 0, 6, 1, 1, 0, 28, 29, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.109697}", "{'[1, 4, 3, 0, 6, 1, 1, 0, 28, 29, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.109697}"]
returning from 'run': {'[1, 4, 3, 0, 6, 1, 1, 0, 28, 29, 29, 0, 1, 0, 0, 1, 0, 0]': ([0.12197, 0.121908, 0.121983, 0.110429, 0.102838, 0.102955, 0.102868, 0.102977, 0.102925, 0.103011, 0.10284, 0.102921, 0.102923, 0.102875, 0.103056, 0.102874, 0.102945, 0.102925, 0.102888, 0.103177, 0.102884, 0.102943, 0.103194, 0.103446, 0.109844, 0.109655, 0.109717, 0.109653, 0.109697, 0.109697], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 4, 3, 0, 6, 1, 1, 0, 28, 29, 29, 0, 1, 0, 0, 1, 0, 0]': ([0.12197, 0.121908, 0.121983, 0.110429, 0.102838, 0.102955, 0.102868, 0.102977, 0.102925, 0.103011, 0.10284, 0.102921, 0.102923, 0.102875, 0.103056, 0.102874, 0.102945, 0.102925, 0.102888, 0.103177, 0.102884, 0.102943, 0.103194, 0.103446, 0.109844, 0.109655, 0.109717, 0.109653, 0.109697, 0.109697], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	110
        Max loop nest depth: 	5
        Additions: 		7258
        Multiplications: 	2432
        Divisions: 		0
        Logical: 		0
        Reads: 			12006
        Writes: 		1709
        Comparisons:		110
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest51.exe __orio_perftest51.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest51.exe  
Program Test Output: 
{'[1, 4, 1, 0, 0, 6, 1, 0, 0, 28, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.101524}
{'[1, 4, 1, 0, 0, 6, 1, 0, 0, 28, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.101227}
{'[1, 4, 1, 0, 0, 6, 1, 0, 0, 28, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0983658}
{'[1, 4, 1, 0, 0, 6, 1, 0, 0, 28, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0983999}
{'[1, 4, 1, 0, 0, 6, 1, 0, 0, 28, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.098201}
{'[1, 4, 1, 0, 0, 6, 1, 0, 0, 28, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0983422}
{'[1, 4, 1, 0, 0, 6, 1, 0, 0, 28, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.103162}
{'[1, 4, 1, 0, 0, 6, 1, 0, 0, 28, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.10358}
{'[1, 4, 1, 0, 0, 6, 1, 0, 0, 28, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.103692}
{'[1, 4, 1, 0, 0, 6, 1, 0, 0, 28, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.103613}
{'[1, 4, 1, 0, 0, 6, 1, 0, 0, 28, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.103569}
{'[1, 4, 1, 0, 0, 6, 1, 0, 0, 28, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.10331}
{'[1, 4, 1, 0, 0, 6, 1, 0, 0, 28, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.100892}
{'[1, 4, 1, 0, 0, 6, 1, 0, 0, 28, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.100695}
{'[1, 4, 1, 0, 0, 6, 1, 0, 0, 28, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.100713}
{'[1, 4, 1, 0, 0, 6, 1, 0, 0, 28, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.10115}
{'[1, 4, 1, 0, 0, 6, 1, 0, 0, 28, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.103711}
{'[1, 4, 1, 0, 0, 6, 1, 0, 0, 28, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.103634}
{'[1, 4, 1, 0, 0, 6, 1, 0, 0, 28, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.103717}
{'[1, 4, 1, 0, 0, 6, 1, 0, 0, 28, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.103893}
{'[1, 4, 1, 0, 0, 6, 1, 0, 0, 28, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.103777}
{'[1, 4, 1, 0, 0, 6, 1, 0, 0, 28, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.103581}
{'[1, 4, 1, 0, 0, 6, 1, 0, 0, 28, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.102565}
{'[1, 4, 1, 0, 0, 6, 1, 0, 0, 28, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.100831}
{'[1, 4, 1, 0, 0, 6, 1, 0, 0, 28, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.100698}
{'[1, 4, 1, 0, 0, 6, 1, 0, 0, 28, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.101888}
{'[1, 4, 1, 0, 0, 6, 1, 0, 0, 28, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.103641}
{'[1, 4, 1, 0, 0, 6, 1, 0, 0, 28, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.103725}
{'[1, 4, 1, 0, 0, 6, 1, 0, 0, 28, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.103681}
{'[1, 4, 1, 0, 0, 6, 1, 0, 0, 28, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.10368}

out:
 ["{'[1, 4, 1, 0, 0, 6, 1, 0, 0, 28, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.101524}", "{'[1, 4, 1, 0, 0, 6, 1, 0, 0, 28, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.101227}", "{'[1, 4, 1, 0, 0, 6, 1, 0, 0, 28, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0983658}", "{'[1, 4, 1, 0, 0, 6, 1, 0, 0, 28, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0983999}", "{'[1, 4, 1, 0, 0, 6, 1, 0, 0, 28, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.098201}", "{'[1, 4, 1, 0, 0, 6, 1, 0, 0, 28, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0983422}", "{'[1, 4, 1, 0, 0, 6, 1, 0, 0, 28, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.103162}", "{'[1, 4, 1, 0, 0, 6, 1, 0, 0, 28, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.10358}", "{'[1, 4, 1, 0, 0, 6, 1, 0, 0, 28, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.103692}", "{'[1, 4, 1, 0, 0, 6, 1, 0, 0, 28, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.103613}", "{'[1, 4, 1, 0, 0, 6, 1, 0, 0, 28, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.103569}", "{'[1, 4, 1, 0, 0, 6, 1, 0, 0, 28, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.10331}", "{'[1, 4, 1, 0, 0, 6, 1, 0, 0, 28, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.100892}", "{'[1, 4, 1, 0, 0, 6, 1, 0, 0, 28, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.100695}", "{'[1, 4, 1, 0, 0, 6, 1, 0, 0, 28, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.100713}", "{'[1, 4, 1, 0, 0, 6, 1, 0, 0, 28, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.10115}", "{'[1, 4, 1, 0, 0, 6, 1, 0, 0, 28, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.103711}", "{'[1, 4, 1, 0, 0, 6, 1, 0, 0, 28, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.103634}", "{'[1, 4, 1, 0, 0, 6, 1, 0, 0, 28, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.103717}", "{'[1, 4, 1, 0, 0, 6, 1, 0, 0, 28, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.103893}", "{'[1, 4, 1, 0, 0, 6, 1, 0, 0, 28, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.103777}", "{'[1, 4, 1, 0, 0, 6, 1, 0, 0, 28, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.103581}", "{'[1, 4, 1, 0, 0, 6, 1, 0, 0, 28, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.102565}", "{'[1, 4, 1, 0, 0, 6, 1, 0, 0, 28, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.100831}", "{'[1, 4, 1, 0, 0, 6, 1, 0, 0, 28, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.100698}", "{'[1, 4, 1, 0, 0, 6, 1, 0, 0, 28, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.101888}", "{'[1, 4, 1, 0, 0, 6, 1, 0, 0, 28, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.103641}", "{'[1, 4, 1, 0, 0, 6, 1, 0, 0, 28, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.103725}", "{'[1, 4, 1, 0, 0, 6, 1, 0, 0, 28, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.103681}", "{'[1, 4, 1, 0, 0, 6, 1, 0, 0, 28, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.10368}"]
returning from 'run': {'[1, 4, 1, 0, 0, 6, 1, 0, 0, 28, 29, 0, 1, 0, 0, 1, 1, 1]': ([0.101524, 0.101227, 0.0983658, 0.0983999, 0.098201, 0.0983422, 0.103162, 0.10358, 0.103692, 0.103613, 0.103569, 0.10331, 0.100892, 0.100695, 0.100713, 0.10115, 0.103711, 0.103634, 0.103717, 0.103893, 0.103777, 0.103581, 0.102565, 0.100831, 0.100698, 0.101888, 0.103641, 0.103725, 0.103681, 0.10368], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 4, 1, 0, 0, 6, 1, 0, 0, 28, 29, 0, 1, 0, 0, 1, 1, 1]': ([0.101524, 0.101227, 0.0983658, 0.0983999, 0.098201, 0.0983422, 0.103162, 0.10358, 0.103692, 0.103613, 0.103569, 0.10331, 0.100892, 0.100695, 0.100713, 0.10115, 0.103711, 0.103634, 0.103717, 0.103893, 0.103777, 0.103581, 0.102565, 0.100831, 0.100698, 0.101888, 0.103641, 0.103725, 0.103681, 0.10368], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	40
        Max loop nest depth: 	6
        Additions: 		956
        Multiplications: 	396
        Divisions: 		0
        Logical: 		0
        Reads: 			2008
        Writes: 		391
        Comparisons:		40
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest52.exe __orio_perftest52.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest52.exe  
Program Test Output: 
{'[3, 4, 1, 2, 6, 1, 1, 0, 9, 12, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.103413}
{'[3, 4, 1, 2, 6, 1, 1, 0, 9, 12, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.103426}
{'[3, 4, 1, 2, 6, 1, 1, 0, 9, 12, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.103299}
{'[3, 4, 1, 2, 6, 1, 1, 0, 9, 12, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.103324}
{'[3, 4, 1, 2, 6, 1, 1, 0, 9, 12, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.103283}
{'[3, 4, 1, 2, 6, 1, 1, 0, 9, 12, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.103145}
{'[3, 4, 1, 2, 6, 1, 1, 0, 9, 12, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.103055}
{'[3, 4, 1, 2, 6, 1, 1, 0, 9, 12, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.101709}
{'[3, 4, 1, 2, 6, 1, 1, 0, 9, 12, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.100774}
{'[3, 4, 1, 2, 6, 1, 1, 0, 9, 12, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.0981472}
{'[3, 4, 1, 2, 6, 1, 1, 0, 9, 12, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.0978889}
{'[3, 4, 1, 2, 6, 1, 1, 0, 9, 12, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.100633}
{'[3, 4, 1, 2, 6, 1, 1, 0, 9, 12, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.100673}
{'[3, 4, 1, 2, 6, 1, 1, 0, 9, 12, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.100755}
{'[3, 4, 1, 2, 6, 1, 1, 0, 9, 12, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.10074}
{'[3, 4, 1, 2, 6, 1, 1, 0, 9, 12, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.100769}
{'[3, 4, 1, 2, 6, 1, 1, 0, 9, 12, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.103287}
{'[3, 4, 1, 2, 6, 1, 1, 0, 9, 12, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.103084}
{'[3, 4, 1, 2, 6, 1, 1, 0, 9, 12, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.100599}
{'[3, 4, 1, 2, 6, 1, 1, 0, 9, 12, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.100519}
{'[3, 4, 1, 2, 6, 1, 1, 0, 9, 12, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.100506}
{'[3, 4, 1, 2, 6, 1, 1, 0, 9, 12, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.100761}
{'[3, 4, 1, 2, 6, 1, 1, 0, 9, 12, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.100455}
{'[3, 4, 1, 2, 6, 1, 1, 0, 9, 12, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.097935}
{'[3, 4, 1, 2, 6, 1, 1, 0, 9, 12, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.0979638}
{'[3, 4, 1, 2, 6, 1, 1, 0, 9, 12, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.0980358}
{'[3, 4, 1, 2, 6, 1, 1, 0, 9, 12, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.100798}
{'[3, 4, 1, 2, 6, 1, 1, 0, 9, 12, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.100763}
{'[3, 4, 1, 2, 6, 1, 1, 0, 9, 12, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.100122}
{'[3, 4, 1, 2, 6, 1, 1, 0, 9, 12, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.0982521}

out:
 ["{'[3, 4, 1, 2, 6, 1, 1, 0, 9, 12, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.103413}", "{'[3, 4, 1, 2, 6, 1, 1, 0, 9, 12, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.103426}", "{'[3, 4, 1, 2, 6, 1, 1, 0, 9, 12, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.103299}", "{'[3, 4, 1, 2, 6, 1, 1, 0, 9, 12, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.103324}", "{'[3, 4, 1, 2, 6, 1, 1, 0, 9, 12, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.103283}", "{'[3, 4, 1, 2, 6, 1, 1, 0, 9, 12, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.103145}", "{'[3, 4, 1, 2, 6, 1, 1, 0, 9, 12, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.103055}", "{'[3, 4, 1, 2, 6, 1, 1, 0, 9, 12, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.101709}", "{'[3, 4, 1, 2, 6, 1, 1, 0, 9, 12, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.100774}", "{'[3, 4, 1, 2, 6, 1, 1, 0, 9, 12, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.0981472}", "{'[3, 4, 1, 2, 6, 1, 1, 0, 9, 12, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.0978889}", "{'[3, 4, 1, 2, 6, 1, 1, 0, 9, 12, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.100633}", "{'[3, 4, 1, 2, 6, 1, 1, 0, 9, 12, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.100673}", "{'[3, 4, 1, 2, 6, 1, 1, 0, 9, 12, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.100755}", "{'[3, 4, 1, 2, 6, 1, 1, 0, 9, 12, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.10074}", "{'[3, 4, 1, 2, 6, 1, 1, 0, 9, 12, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.100769}", "{'[3, 4, 1, 2, 6, 1, 1, 0, 9, 12, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.103287}", "{'[3, 4, 1, 2, 6, 1, 1, 0, 9, 12, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.103084}", "{'[3, 4, 1, 2, 6, 1, 1, 0, 9, 12, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.100599}", "{'[3, 4, 1, 2, 6, 1, 1, 0, 9, 12, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.100519}", "{'[3, 4, 1, 2, 6, 1, 1, 0, 9, 12, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.100506}", "{'[3, 4, 1, 2, 6, 1, 1, 0, 9, 12, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.100761}", "{'[3, 4, 1, 2, 6, 1, 1, 0, 9, 12, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.100455}", "{'[3, 4, 1, 2, 6, 1, 1, 0, 9, 12, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.097935}", "{'[3, 4, 1, 2, 6, 1, 1, 0, 9, 12, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.0979638}", "{'[3, 4, 1, 2, 6, 1, 1, 0, 9, 12, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.0980358}", "{'[3, 4, 1, 2, 6, 1, 1, 0, 9, 12, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.100798}", "{'[3, 4, 1, 2, 6, 1, 1, 0, 9, 12, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.100763}", "{'[3, 4, 1, 2, 6, 1, 1, 0, 9, 12, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.100122}", "{'[3, 4, 1, 2, 6, 1, 1, 0, 9, 12, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.0982521}"]
returning from 'run': {'[3, 4, 1, 2, 6, 1, 1, 0, 9, 12, 29, 0, 1, 1, 0, 1, 0, 1]': ([0.103413, 0.103426, 0.103299, 0.103324, 0.103283, 0.103145, 0.103055, 0.101709, 0.100774, 0.0981472, 0.0978889, 0.100633, 0.100673, 0.100755, 0.10074, 0.100769, 0.103287, 0.103084, 0.100599, 0.100519, 0.100506, 0.100761, 0.100455, 0.097935, 0.0979638, 0.0980358, 0.100798, 0.100763, 0.100122, 0.0982521], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 4, 1, 2, 6, 1, 1, 0, 9, 12, 29, 0, 1, 1, 0, 1, 0, 1]': ([0.103413, 0.103426, 0.103299, 0.103324, 0.103283, 0.103145, 0.103055, 0.101709, 0.100774, 0.0981472, 0.0978889, 0.100633, 0.100673, 0.100755, 0.10074, 0.100769, 0.103287, 0.103084, 0.100599, 0.100519, 0.100506, 0.100761, 0.100455, 0.097935, 0.0979638, 0.0980358, 0.100798, 0.100763, 0.100122, 0.0982521], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	6
        Additions: 		1427
        Multiplications: 	648
        Divisions: 		0
        Logical: 		0
        Reads: 			2860
        Writes: 		509
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest53.exe __orio_perftest53.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest53.exe  
Program Test Output: 
{'[5, 4, 6, 6, 0, 6, 1, 0, 1, 0, 29, 26, 1, 1, 0, 1, 0, 0]' : 0.101172}
{'[5, 4, 6, 6, 0, 6, 1, 0, 1, 0, 29, 26, 1, 1, 0, 1, 0, 0]' : 0.104365}
{'[5, 4, 6, 6, 0, 6, 1, 0, 1, 0, 29, 26, 1, 1, 0, 1, 0, 0]' : 0.103698}
{'[5, 4, 6, 6, 0, 6, 1, 0, 1, 0, 29, 26, 1, 1, 0, 1, 0, 0]' : 0.101115}
{'[5, 4, 6, 6, 0, 6, 1, 0, 1, 0, 29, 26, 1, 1, 0, 1, 0, 0]' : 0.101186}
{'[5, 4, 6, 6, 0, 6, 1, 0, 1, 0, 29, 26, 1, 1, 0, 1, 0, 0]' : 0.102185}
{'[5, 4, 6, 6, 0, 6, 1, 0, 1, 0, 29, 26, 1, 1, 0, 1, 0, 0]' : 0.104491}
{'[5, 4, 6, 6, 0, 6, 1, 0, 1, 0, 29, 26, 1, 1, 0, 1, 0, 0]' : 0.105254}
{'[5, 4, 6, 6, 0, 6, 1, 0, 1, 0, 29, 26, 1, 1, 0, 1, 0, 0]' : 0.101497}
{'[5, 4, 6, 6, 0, 6, 1, 0, 1, 0, 29, 26, 1, 1, 0, 1, 0, 0]' : 0.101216}
{'[5, 4, 6, 6, 0, 6, 1, 0, 1, 0, 29, 26, 1, 1, 0, 1, 0, 0]' : 0.102409}
{'[5, 4, 6, 6, 0, 6, 1, 0, 1, 0, 29, 26, 1, 1, 0, 1, 0, 0]' : 0.104108}
{'[5, 4, 6, 6, 0, 6, 1, 0, 1, 0, 29, 26, 1, 1, 0, 1, 0, 0]' : 0.104043}
{'[5, 4, 6, 6, 0, 6, 1, 0, 1, 0, 29, 26, 1, 1, 0, 1, 0, 0]' : 0.10395}
{'[5, 4, 6, 6, 0, 6, 1, 0, 1, 0, 29, 26, 1, 1, 0, 1, 0, 0]' : 0.103945}
{'[5, 4, 6, 6, 0, 6, 1, 0, 1, 0, 29, 26, 1, 1, 0, 1, 0, 0]' : 0.102614}
{'[5, 4, 6, 6, 0, 6, 1, 0, 1, 0, 29, 26, 1, 1, 0, 1, 0, 0]' : 0.101162}
{'[5, 4, 6, 6, 0, 6, 1, 0, 1, 0, 29, 26, 1, 1, 0, 1, 0, 0]' : 0.103533}
{'[5, 4, 6, 6, 0, 6, 1, 0, 1, 0, 29, 26, 1, 1, 0, 1, 0, 0]' : 0.10203}
{'[5, 4, 6, 6, 0, 6, 1, 0, 1, 0, 29, 26, 1, 1, 0, 1, 0, 0]' : 0.101315}
{'[5, 4, 6, 6, 0, 6, 1, 0, 1, 0, 29, 26, 1, 1, 0, 1, 0, 0]' : 0.102988}
{'[5, 4, 6, 6, 0, 6, 1, 0, 1, 0, 29, 26, 1, 1, 0, 1, 0, 0]' : 0.103525}
{'[5, 4, 6, 6, 0, 6, 1, 0, 1, 0, 29, 26, 1, 1, 0, 1, 0, 0]' : 0.10374}
{'[5, 4, 6, 6, 0, 6, 1, 0, 1, 0, 29, 26, 1, 1, 0, 1, 0, 0]' : 0.103626}
{'[5, 4, 6, 6, 0, 6, 1, 0, 1, 0, 29, 26, 1, 1, 0, 1, 0, 0]' : 0.103688}
{'[5, 4, 6, 6, 0, 6, 1, 0, 1, 0, 29, 26, 1, 1, 0, 1, 0, 0]' : 0.103836}
{'[5, 4, 6, 6, 0, 6, 1, 0, 1, 0, 29, 26, 1, 1, 0, 1, 0, 0]' : 0.103552}
{'[5, 4, 6, 6, 0, 6, 1, 0, 1, 0, 29, 26, 1, 1, 0, 1, 0, 0]' : 0.103599}
{'[5, 4, 6, 6, 0, 6, 1, 0, 1, 0, 29, 26, 1, 1, 0, 1, 0, 0]' : 0.103507}
{'[5, 4, 6, 6, 0, 6, 1, 0, 1, 0, 29, 26, 1, 1, 0, 1, 0, 0]' : 0.101606}

out:
 ["{'[5, 4, 6, 6, 0, 6, 1, 0, 1, 0, 29, 26, 1, 1, 0, 1, 0, 0]' : 0.101172}", "{'[5, 4, 6, 6, 0, 6, 1, 0, 1, 0, 29, 26, 1, 1, 0, 1, 0, 0]' : 0.104365}", "{'[5, 4, 6, 6, 0, 6, 1, 0, 1, 0, 29, 26, 1, 1, 0, 1, 0, 0]' : 0.103698}", "{'[5, 4, 6, 6, 0, 6, 1, 0, 1, 0, 29, 26, 1, 1, 0, 1, 0, 0]' : 0.101115}", "{'[5, 4, 6, 6, 0, 6, 1, 0, 1, 0, 29, 26, 1, 1, 0, 1, 0, 0]' : 0.101186}", "{'[5, 4, 6, 6, 0, 6, 1, 0, 1, 0, 29, 26, 1, 1, 0, 1, 0, 0]' : 0.102185}", "{'[5, 4, 6, 6, 0, 6, 1, 0, 1, 0, 29, 26, 1, 1, 0, 1, 0, 0]' : 0.104491}", "{'[5, 4, 6, 6, 0, 6, 1, 0, 1, 0, 29, 26, 1, 1, 0, 1, 0, 0]' : 0.105254}", "{'[5, 4, 6, 6, 0, 6, 1, 0, 1, 0, 29, 26, 1, 1, 0, 1, 0, 0]' : 0.101497}", "{'[5, 4, 6, 6, 0, 6, 1, 0, 1, 0, 29, 26, 1, 1, 0, 1, 0, 0]' : 0.101216}", "{'[5, 4, 6, 6, 0, 6, 1, 0, 1, 0, 29, 26, 1, 1, 0, 1, 0, 0]' : 0.102409}", "{'[5, 4, 6, 6, 0, 6, 1, 0, 1, 0, 29, 26, 1, 1, 0, 1, 0, 0]' : 0.104108}", "{'[5, 4, 6, 6, 0, 6, 1, 0, 1, 0, 29, 26, 1, 1, 0, 1, 0, 0]' : 0.104043}", "{'[5, 4, 6, 6, 0, 6, 1, 0, 1, 0, 29, 26, 1, 1, 0, 1, 0, 0]' : 0.10395}", "{'[5, 4, 6, 6, 0, 6, 1, 0, 1, 0, 29, 26, 1, 1, 0, 1, 0, 0]' : 0.103945}", "{'[5, 4, 6, 6, 0, 6, 1, 0, 1, 0, 29, 26, 1, 1, 0, 1, 0, 0]' : 0.102614}", "{'[5, 4, 6, 6, 0, 6, 1, 0, 1, 0, 29, 26, 1, 1, 0, 1, 0, 0]' : 0.101162}", "{'[5, 4, 6, 6, 0, 6, 1, 0, 1, 0, 29, 26, 1, 1, 0, 1, 0, 0]' : 0.103533}", "{'[5, 4, 6, 6, 0, 6, 1, 0, 1, 0, 29, 26, 1, 1, 0, 1, 0, 0]' : 0.10203}", "{'[5, 4, 6, 6, 0, 6, 1, 0, 1, 0, 29, 26, 1, 1, 0, 1, 0, 0]' : 0.101315}", "{'[5, 4, 6, 6, 0, 6, 1, 0, 1, 0, 29, 26, 1, 1, 0, 1, 0, 0]' : 0.102988}", "{'[5, 4, 6, 6, 0, 6, 1, 0, 1, 0, 29, 26, 1, 1, 0, 1, 0, 0]' : 0.103525}", "{'[5, 4, 6, 6, 0, 6, 1, 0, 1, 0, 29, 26, 1, 1, 0, 1, 0, 0]' : 0.10374}", "{'[5, 4, 6, 6, 0, 6, 1, 0, 1, 0, 29, 26, 1, 1, 0, 1, 0, 0]' : 0.103626}", "{'[5, 4, 6, 6, 0, 6, 1, 0, 1, 0, 29, 26, 1, 1, 0, 1, 0, 0]' : 0.103688}", "{'[5, 4, 6, 6, 0, 6, 1, 0, 1, 0, 29, 26, 1, 1, 0, 1, 0, 0]' : 0.103836}", "{'[5, 4, 6, 6, 0, 6, 1, 0, 1, 0, 29, 26, 1, 1, 0, 1, 0, 0]' : 0.103552}", "{'[5, 4, 6, 6, 0, 6, 1, 0, 1, 0, 29, 26, 1, 1, 0, 1, 0, 0]' : 0.103599}", "{'[5, 4, 6, 6, 0, 6, 1, 0, 1, 0, 29, 26, 1, 1, 0, 1, 0, 0]' : 0.103507}", "{'[5, 4, 6, 6, 0, 6, 1, 0, 1, 0, 29, 26, 1, 1, 0, 1, 0, 0]' : 0.101606}"]
returning from 'run': {'[5, 4, 6, 6, 0, 6, 1, 0, 1, 0, 29, 26, 1, 1, 0, 1, 0, 0]': ([0.101172, 0.104365, 0.103698, 0.101115, 0.101186, 0.102185, 0.104491, 0.105254, 0.101497, 0.101216, 0.102409, 0.104108, 0.104043, 0.10395, 0.103945, 0.102614, 0.101162, 0.103533, 0.10203, 0.101315, 0.102988, 0.103525, 0.10374, 0.103626, 0.103688, 0.103836, 0.103552, 0.103599, 0.103507, 0.101606], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 4, 6, 6, 0, 6, 1, 0, 1, 0, 29, 26, 1, 1, 0, 1, 0, 0]': ([0.101172, 0.104365, 0.103698, 0.101115, 0.101186, 0.102185, 0.104491, 0.105254, 0.101497, 0.101216, 0.102409, 0.104108, 0.104043, 0.10395, 0.103945, 0.102614, 0.101162, 0.103533, 0.10203, 0.101315, 0.102988, 0.103525, 0.10374, 0.103626, 0.103688, 0.103836, 0.103552, 0.103599, 0.103507, 0.101606], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	87
        Max loop nest depth: 	5
        Additions: 		5610
        Multiplications: 	1920
        Divisions: 		0
        Logical: 		0
        Reads: 			9387
        Writes: 		1354
        Comparisons:		87
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest54.exe __orio_perftest54.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest54.exe  
Program Test Output: 
{'[6, 4, 0, 0, 4, 6, 1, 0, 3, 20, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0984151}
{'[6, 4, 0, 0, 4, 6, 1, 0, 3, 20, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0959692}
{'[6, 4, 0, 0, 4, 6, 1, 0, 3, 20, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0963759}
{'[6, 4, 0, 0, 4, 6, 1, 0, 3, 20, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0989039}
{'[6, 4, 0, 0, 4, 6, 1, 0, 3, 20, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0976329}
{'[6, 4, 0, 0, 4, 6, 1, 0, 3, 20, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0980449}
{'[6, 4, 0, 0, 4, 6, 1, 0, 3, 20, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0988698}
{'[6, 4, 0, 0, 4, 6, 1, 0, 3, 20, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.098881}
{'[6, 4, 0, 0, 4, 6, 1, 0, 3, 20, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.101328}
{'[6, 4, 0, 0, 4, 6, 1, 0, 3, 20, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.100814}
{'[6, 4, 0, 0, 4, 6, 1, 0, 3, 20, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.098701}
{'[6, 4, 0, 0, 4, 6, 1, 0, 3, 20, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.09604}
{'[6, 4, 0, 0, 4, 6, 1, 0, 3, 20, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.096108}
{'[6, 4, 0, 0, 4, 6, 1, 0, 3, 20, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.101172}
{'[6, 4, 0, 0, 4, 6, 1, 0, 3, 20, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.101364}
{'[6, 4, 0, 0, 4, 6, 1, 0, 3, 20, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0996609}
{'[6, 4, 0, 0, 4, 6, 1, 0, 3, 20, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0965159}
{'[6, 4, 0, 0, 4, 6, 1, 0, 3, 20, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.096319}
{'[6, 4, 0, 0, 4, 6, 1, 0, 3, 20, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0985632}
{'[6, 4, 0, 0, 4, 6, 1, 0, 3, 20, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0986881}
{'[6, 4, 0, 0, 4, 6, 1, 0, 3, 20, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0964539}
{'[6, 4, 0, 0, 4, 6, 1, 0, 3, 20, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0958309}
{'[6, 4, 0, 0, 4, 6, 1, 0, 3, 20, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.095876}
{'[6, 4, 0, 0, 4, 6, 1, 0, 3, 20, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0971699}
{'[6, 4, 0, 0, 4, 6, 1, 0, 3, 20, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0959189}
{'[6, 4, 0, 0, 4, 6, 1, 0, 3, 20, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0958872}
{'[6, 4, 0, 0, 4, 6, 1, 0, 3, 20, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0958629}
{'[6, 4, 0, 0, 4, 6, 1, 0, 3, 20, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0959799}
{'[6, 4, 0, 0, 4, 6, 1, 0, 3, 20, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0982041}
{'[6, 4, 0, 0, 4, 6, 1, 0, 3, 20, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0986781}

out:
 ["{'[6, 4, 0, 0, 4, 6, 1, 0, 3, 20, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0984151}", "{'[6, 4, 0, 0, 4, 6, 1, 0, 3, 20, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0959692}", "{'[6, 4, 0, 0, 4, 6, 1, 0, 3, 20, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0963759}", "{'[6, 4, 0, 0, 4, 6, 1, 0, 3, 20, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0989039}", "{'[6, 4, 0, 0, 4, 6, 1, 0, 3, 20, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0976329}", "{'[6, 4, 0, 0, 4, 6, 1, 0, 3, 20, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0980449}", "{'[6, 4, 0, 0, 4, 6, 1, 0, 3, 20, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0988698}", "{'[6, 4, 0, 0, 4, 6, 1, 0, 3, 20, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.098881}", "{'[6, 4, 0, 0, 4, 6, 1, 0, 3, 20, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.101328}", "{'[6, 4, 0, 0, 4, 6, 1, 0, 3, 20, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.100814}", "{'[6, 4, 0, 0, 4, 6, 1, 0, 3, 20, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.098701}", "{'[6, 4, 0, 0, 4, 6, 1, 0, 3, 20, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.09604}", "{'[6, 4, 0, 0, 4, 6, 1, 0, 3, 20, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.096108}", "{'[6, 4, 0, 0, 4, 6, 1, 0, 3, 20, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.101172}", "{'[6, 4, 0, 0, 4, 6, 1, 0, 3, 20, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.101364}", "{'[6, 4, 0, 0, 4, 6, 1, 0, 3, 20, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0996609}", "{'[6, 4, 0, 0, 4, 6, 1, 0, 3, 20, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0965159}", "{'[6, 4, 0, 0, 4, 6, 1, 0, 3, 20, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.096319}", "{'[6, 4, 0, 0, 4, 6, 1, 0, 3, 20, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0985632}", "{'[6, 4, 0, 0, 4, 6, 1, 0, 3, 20, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0986881}", "{'[6, 4, 0, 0, 4, 6, 1, 0, 3, 20, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0964539}", "{'[6, 4, 0, 0, 4, 6, 1, 0, 3, 20, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0958309}", "{'[6, 4, 0, 0, 4, 6, 1, 0, 3, 20, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.095876}", "{'[6, 4, 0, 0, 4, 6, 1, 0, 3, 20, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0971699}", "{'[6, 4, 0, 0, 4, 6, 1, 0, 3, 20, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0959189}", "{'[6, 4, 0, 0, 4, 6, 1, 0, 3, 20, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0958872}", "{'[6, 4, 0, 0, 4, 6, 1, 0, 3, 20, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0958629}", "{'[6, 4, 0, 0, 4, 6, 1, 0, 3, 20, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0959799}", "{'[6, 4, 0, 0, 4, 6, 1, 0, 3, 20, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0982041}", "{'[6, 4, 0, 0, 4, 6, 1, 0, 3, 20, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0986781}"]
returning from 'run': {'[6, 4, 0, 0, 4, 6, 1, 0, 3, 20, 29, 0, 1, 0, 0, 1, 0, 1]': ([0.0984151, 0.0959692, 0.0963759, 0.0989039, 0.0976329, 0.0980449, 0.0988698, 0.098881, 0.101328, 0.100814, 0.098701, 0.09604, 0.096108, 0.101172, 0.101364, 0.0996609, 0.0965159, 0.096319, 0.0985632, 0.0986881, 0.0964539, 0.0958309, 0.095876, 0.0971699, 0.0959189, 0.0958872, 0.0958629, 0.0959799, 0.0982041, 0.0986781], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 4, 0, 0, 4, 6, 1, 0, 3, 20, 29, 0, 1, 0, 0, 1, 0, 1]': ([0.0984151, 0.0959692, 0.0963759, 0.0989039, 0.0976329, 0.0980449, 0.0988698, 0.098881, 0.101328, 0.100814, 0.098701, 0.09604, 0.096108, 0.101172, 0.101364, 0.0996609, 0.0965159, 0.096319, 0.0985632, 0.0986881, 0.0964539, 0.0958309, 0.095876, 0.0971699, 0.0959189, 0.0958872, 0.0958629, 0.0959799, 0.0982041, 0.0986781], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	6
        Additions: 		2422
        Multiplications: 	1116
        Divisions: 		0
        Logical: 		0
        Reads: 			4685
        Writes: 		779
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest55.exe __orio_perftest55.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest55.exe  
Program Test Output: 
{'[5, 4, 0, 4, 6, 2, 1, 0, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.126228}
{'[5, 4, 0, 4, 6, 2, 1, 0, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.117773}
{'[5, 4, 0, 4, 6, 2, 1, 0, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.111217}
{'[5, 4, 0, 4, 6, 2, 1, 0, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.106936}
{'[5, 4, 0, 4, 6, 2, 1, 0, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.106752}
{'[5, 4, 0, 4, 6, 2, 1, 0, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.106742}
{'[5, 4, 0, 4, 6, 2, 1, 0, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.107036}
{'[5, 4, 0, 4, 6, 2, 1, 0, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.10932}
{'[5, 4, 0, 4, 6, 2, 1, 0, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.109938}
{'[5, 4, 0, 4, 6, 2, 1, 0, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.109901}
{'[5, 4, 0, 4, 6, 2, 1, 0, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.109948}
{'[5, 4, 0, 4, 6, 2, 1, 0, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.110715}
{'[5, 4, 0, 4, 6, 2, 1, 0, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.112931}
{'[5, 4, 0, 4, 6, 2, 1, 0, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.112961}
{'[5, 4, 0, 4, 6, 2, 1, 0, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.112285}
{'[5, 4, 0, 4, 6, 2, 1, 0, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.11005}
{'[5, 4, 0, 4, 6, 2, 1, 0, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.10787}
{'[5, 4, 0, 4, 6, 2, 1, 0, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.106775}
{'[5, 4, 0, 4, 6, 2, 1, 0, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.106753}
{'[5, 4, 0, 4, 6, 2, 1, 0, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.106856}
{'[5, 4, 0, 4, 6, 2, 1, 0, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.107552}
{'[5, 4, 0, 4, 6, 2, 1, 0, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.112904}
{'[5, 4, 0, 4, 6, 2, 1, 0, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.112882}
{'[5, 4, 0, 4, 6, 2, 1, 0, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.112896}
{'[5, 4, 0, 4, 6, 2, 1, 0, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.112891}
{'[5, 4, 0, 4, 6, 2, 1, 0, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.110967}
{'[5, 4, 0, 4, 6, 2, 1, 0, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.109554}
{'[5, 4, 0, 4, 6, 2, 1, 0, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.109593}
{'[5, 4, 0, 4, 6, 2, 1, 0, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.109588}
{'[5, 4, 0, 4, 6, 2, 1, 0, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.109088}

out:
 ["{'[5, 4, 0, 4, 6, 2, 1, 0, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.126228}", "{'[5, 4, 0, 4, 6, 2, 1, 0, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.117773}", "{'[5, 4, 0, 4, 6, 2, 1, 0, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.111217}", "{'[5, 4, 0, 4, 6, 2, 1, 0, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.106936}", "{'[5, 4, 0, 4, 6, 2, 1, 0, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.106752}", "{'[5, 4, 0, 4, 6, 2, 1, 0, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.106742}", "{'[5, 4, 0, 4, 6, 2, 1, 0, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.107036}", "{'[5, 4, 0, 4, 6, 2, 1, 0, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.10932}", "{'[5, 4, 0, 4, 6, 2, 1, 0, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.109938}", "{'[5, 4, 0, 4, 6, 2, 1, 0, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.109901}", "{'[5, 4, 0, 4, 6, 2, 1, 0, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.109948}", "{'[5, 4, 0, 4, 6, 2, 1, 0, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.110715}", "{'[5, 4, 0, 4, 6, 2, 1, 0, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.112931}", "{'[5, 4, 0, 4, 6, 2, 1, 0, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.112961}", "{'[5, 4, 0, 4, 6, 2, 1, 0, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.112285}", "{'[5, 4, 0, 4, 6, 2, 1, 0, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.11005}", "{'[5, 4, 0, 4, 6, 2, 1, 0, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.10787}", "{'[5, 4, 0, 4, 6, 2, 1, 0, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.106775}", "{'[5, 4, 0, 4, 6, 2, 1, 0, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.106753}", "{'[5, 4, 0, 4, 6, 2, 1, 0, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.106856}", "{'[5, 4, 0, 4, 6, 2, 1, 0, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.107552}", "{'[5, 4, 0, 4, 6, 2, 1, 0, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.112904}", "{'[5, 4, 0, 4, 6, 2, 1, 0, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.112882}", "{'[5, 4, 0, 4, 6, 2, 1, 0, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.112896}", "{'[5, 4, 0, 4, 6, 2, 1, 0, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.112891}", "{'[5, 4, 0, 4, 6, 2, 1, 0, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.110967}", "{'[5, 4, 0, 4, 6, 2, 1, 0, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.109554}", "{'[5, 4, 0, 4, 6, 2, 1, 0, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.109593}", "{'[5, 4, 0, 4, 6, 2, 1, 0, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.109588}", "{'[5, 4, 0, 4, 6, 2, 1, 0, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.109088}"]
returning from 'run': {'[5, 4, 0, 4, 6, 2, 1, 0, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]': ([0.126228, 0.117773, 0.111217, 0.106936, 0.106752, 0.106742, 0.107036, 0.10932, 0.109938, 0.109901, 0.109948, 0.110715, 0.112931, 0.112961, 0.112285, 0.11005, 0.10787, 0.106775, 0.106753, 0.106856, 0.107552, 0.112904, 0.112882, 0.112896, 0.112891, 0.110967, 0.109554, 0.109593, 0.109588, 0.109088], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 4, 0, 4, 6, 2, 1, 0, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]': ([0.126228, 0.117773, 0.111217, 0.106936, 0.106752, 0.106742, 0.107036, 0.10932, 0.109938, 0.109901, 0.109948, 0.110715, 0.112931, 0.112961, 0.112285, 0.11005, 0.10787, 0.106775, 0.106753, 0.106856, 0.107552, 0.112904, 0.112882, 0.112896, 0.112891, 0.110967, 0.109554, 0.109593, 0.109588, 0.109088], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	6
        Additions: 		623
        Multiplications: 	252
        Divisions: 		0
        Logical: 		0
        Reads: 			1282
        Writes: 		256
        Comparisons:		22
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest56.exe __orio_perftest56.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest56.exe  
Program Test Output: 
{'[6, 4, 2, 6, 3, 2, 1, 0, 27, 0, 29, 4, 1, 1, 0, 1, 1, 0]' : 0.122819}
{'[6, 4, 2, 6, 3, 2, 1, 0, 27, 0, 29, 4, 1, 1, 0, 1, 1, 0]' : 0.122762}
{'[6, 4, 2, 6, 3, 2, 1, 0, 27, 0, 29, 4, 1, 1, 0, 1, 1, 0]' : 0.122722}
{'[6, 4, 2, 6, 3, 2, 1, 0, 27, 0, 29, 4, 1, 1, 0, 1, 1, 0]' : 0.122791}
{'[6, 4, 2, 6, 3, 2, 1, 0, 27, 0, 29, 4, 1, 1, 0, 1, 1, 0]' : 0.115265}
{'[6, 4, 2, 6, 3, 2, 1, 0, 27, 0, 29, 4, 1, 1, 0, 1, 1, 0]' : 0.104961}
{'[6, 4, 2, 6, 3, 2, 1, 0, 27, 0, 29, 4, 1, 1, 0, 1, 1, 0]' : 0.104071}
{'[6, 4, 2, 6, 3, 2, 1, 0, 27, 0, 29, 4, 1, 1, 0, 1, 1, 0]' : 0.105295}
{'[6, 4, 2, 6, 3, 2, 1, 0, 27, 0, 29, 4, 1, 1, 0, 1, 1, 0]' : 0.106812}
{'[6, 4, 2, 6, 3, 2, 1, 0, 27, 0, 29, 4, 1, 1, 0, 1, 1, 0]' : 0.106817}
{'[6, 4, 2, 6, 3, 2, 1, 0, 27, 0, 29, 4, 1, 1, 0, 1, 1, 0]' : 0.105012}
{'[6, 4, 2, 6, 3, 2, 1, 0, 27, 0, 29, 4, 1, 1, 0, 1, 1, 0]' : 0.104369}
{'[6, 4, 2, 6, 3, 2, 1, 0, 27, 0, 29, 4, 1, 1, 0, 1, 1, 0]' : 0.104679}
{'[6, 4, 2, 6, 3, 2, 1, 0, 27, 0, 29, 4, 1, 1, 0, 1, 1, 0]' : 0.104415}
{'[6, 4, 2, 6, 3, 2, 1, 0, 27, 0, 29, 4, 1, 1, 0, 1, 1, 0]' : 0.105146}
{'[6, 4, 2, 6, 3, 2, 1, 0, 27, 0, 29, 4, 1, 1, 0, 1, 1, 0]' : 0.107504}
{'[6, 4, 2, 6, 3, 2, 1, 0, 27, 0, 29, 4, 1, 1, 0, 1, 1, 0]' : 0.107183}
{'[6, 4, 2, 6, 3, 2, 1, 0, 27, 0, 29, 4, 1, 1, 0, 1, 1, 0]' : 0.107146}
{'[6, 4, 2, 6, 3, 2, 1, 0, 27, 0, 29, 4, 1, 1, 0, 1, 1, 0]' : 0.108061}
{'[6, 4, 2, 6, 3, 2, 1, 0, 27, 0, 29, 4, 1, 1, 0, 1, 1, 0]' : 0.107375}
{'[6, 4, 2, 6, 3, 2, 1, 0, 27, 0, 29, 4, 1, 1, 0, 1, 1, 0]' : 0.104431}
{'[6, 4, 2, 6, 3, 2, 1, 0, 27, 0, 29, 4, 1, 1, 0, 1, 1, 0]' : 0.104349}
{'[6, 4, 2, 6, 3, 2, 1, 0, 27, 0, 29, 4, 1, 1, 0, 1, 1, 0]' : 0.104098}
{'[6, 4, 2, 6, 3, 2, 1, 0, 27, 0, 29, 4, 1, 1, 0, 1, 1, 0]' : 0.104369}
{'[6, 4, 2, 6, 3, 2, 1, 0, 27, 0, 29, 4, 1, 1, 0, 1, 1, 0]' : 0.105045}
{'[6, 4, 2, 6, 3, 2, 1, 0, 27, 0, 29, 4, 1, 1, 0, 1, 1, 0]' : 0.10417}
{'[6, 4, 2, 6, 3, 2, 1, 0, 27, 0, 29, 4, 1, 1, 0, 1, 1, 0]' : 0.104079}
{'[6, 4, 2, 6, 3, 2, 1, 0, 27, 0, 29, 4, 1, 1, 0, 1, 1, 0]' : 0.10409}
{'[6, 4, 2, 6, 3, 2, 1, 0, 27, 0, 29, 4, 1, 1, 0, 1, 1, 0]' : 0.104375}
{'[6, 4, 2, 6, 3, 2, 1, 0, 27, 0, 29, 4, 1, 1, 0, 1, 1, 0]' : 0.105835}

out:
 ["{'[6, 4, 2, 6, 3, 2, 1, 0, 27, 0, 29, 4, 1, 1, 0, 1, 1, 0]' : 0.122819}", "{'[6, 4, 2, 6, 3, 2, 1, 0, 27, 0, 29, 4, 1, 1, 0, 1, 1, 0]' : 0.122762}", "{'[6, 4, 2, 6, 3, 2, 1, 0, 27, 0, 29, 4, 1, 1, 0, 1, 1, 0]' : 0.122722}", "{'[6, 4, 2, 6, 3, 2, 1, 0, 27, 0, 29, 4, 1, 1, 0, 1, 1, 0]' : 0.122791}", "{'[6, 4, 2, 6, 3, 2, 1, 0, 27, 0, 29, 4, 1, 1, 0, 1, 1, 0]' : 0.115265}", "{'[6, 4, 2, 6, 3, 2, 1, 0, 27, 0, 29, 4, 1, 1, 0, 1, 1, 0]' : 0.104961}", "{'[6, 4, 2, 6, 3, 2, 1, 0, 27, 0, 29, 4, 1, 1, 0, 1, 1, 0]' : 0.104071}", "{'[6, 4, 2, 6, 3, 2, 1, 0, 27, 0, 29, 4, 1, 1, 0, 1, 1, 0]' : 0.105295}", "{'[6, 4, 2, 6, 3, 2, 1, 0, 27, 0, 29, 4, 1, 1, 0, 1, 1, 0]' : 0.106812}", "{'[6, 4, 2, 6, 3, 2, 1, 0, 27, 0, 29, 4, 1, 1, 0, 1, 1, 0]' : 0.106817}", "{'[6, 4, 2, 6, 3, 2, 1, 0, 27, 0, 29, 4, 1, 1, 0, 1, 1, 0]' : 0.105012}", "{'[6, 4, 2, 6, 3, 2, 1, 0, 27, 0, 29, 4, 1, 1, 0, 1, 1, 0]' : 0.104369}", "{'[6, 4, 2, 6, 3, 2, 1, 0, 27, 0, 29, 4, 1, 1, 0, 1, 1, 0]' : 0.104679}", "{'[6, 4, 2, 6, 3, 2, 1, 0, 27, 0, 29, 4, 1, 1, 0, 1, 1, 0]' : 0.104415}", "{'[6, 4, 2, 6, 3, 2, 1, 0, 27, 0, 29, 4, 1, 1, 0, 1, 1, 0]' : 0.105146}", "{'[6, 4, 2, 6, 3, 2, 1, 0, 27, 0, 29, 4, 1, 1, 0, 1, 1, 0]' : 0.107504}", "{'[6, 4, 2, 6, 3, 2, 1, 0, 27, 0, 29, 4, 1, 1, 0, 1, 1, 0]' : 0.107183}", "{'[6, 4, 2, 6, 3, 2, 1, 0, 27, 0, 29, 4, 1, 1, 0, 1, 1, 0]' : 0.107146}", "{'[6, 4, 2, 6, 3, 2, 1, 0, 27, 0, 29, 4, 1, 1, 0, 1, 1, 0]' : 0.108061}", "{'[6, 4, 2, 6, 3, 2, 1, 0, 27, 0, 29, 4, 1, 1, 0, 1, 1, 0]' : 0.107375}", "{'[6, 4, 2, 6, 3, 2, 1, 0, 27, 0, 29, 4, 1, 1, 0, 1, 1, 0]' : 0.104431}", "{'[6, 4, 2, 6, 3, 2, 1, 0, 27, 0, 29, 4, 1, 1, 0, 1, 1, 0]' : 0.104349}", "{'[6, 4, 2, 6, 3, 2, 1, 0, 27, 0, 29, 4, 1, 1, 0, 1, 1, 0]' : 0.104098}", "{'[6, 4, 2, 6, 3, 2, 1, 0, 27, 0, 29, 4, 1, 1, 0, 1, 1, 0]' : 0.104369}", "{'[6, 4, 2, 6, 3, 2, 1, 0, 27, 0, 29, 4, 1, 1, 0, 1, 1, 0]' : 0.105045}", "{'[6, 4, 2, 6, 3, 2, 1, 0, 27, 0, 29, 4, 1, 1, 0, 1, 1, 0]' : 0.10417}", "{'[6, 4, 2, 6, 3, 2, 1, 0, 27, 0, 29, 4, 1, 1, 0, 1, 1, 0]' : 0.104079}", "{'[6, 4, 2, 6, 3, 2, 1, 0, 27, 0, 29, 4, 1, 1, 0, 1, 1, 0]' : 0.10409}", "{'[6, 4, 2, 6, 3, 2, 1, 0, 27, 0, 29, 4, 1, 1, 0, 1, 1, 0]' : 0.104375}", "{'[6, 4, 2, 6, 3, 2, 1, 0, 27, 0, 29, 4, 1, 1, 0, 1, 1, 0]' : 0.105835}"]
returning from 'run': {'[6, 4, 2, 6, 3, 2, 1, 0, 27, 0, 29, 4, 1, 1, 0, 1, 1, 0]': ([0.122819, 0.122762, 0.122722, 0.122791, 0.115265, 0.104961, 0.104071, 0.105295, 0.106812, 0.106817, 0.105012, 0.104369, 0.104679, 0.104415, 0.105146, 0.107504, 0.107183, 0.107146, 0.108061, 0.107375, 0.104431, 0.104349, 0.104098, 0.104369, 0.105045, 0.10417, 0.104079, 0.10409, 0.104375, 0.105835], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 4, 2, 6, 3, 2, 1, 0, 27, 0, 29, 4, 1, 1, 0, 1, 1, 0]': ([0.122819, 0.122762, 0.122722, 0.122791, 0.115265, 0.104961, 0.104071, 0.105295, 0.106812, 0.106817, 0.105012, 0.104369, 0.104679, 0.104415, 0.105146, 0.107504, 0.107183, 0.107146, 0.108061, 0.107375, 0.104431, 0.104349, 0.104098, 0.104369, 0.105045, 0.10417, 0.104079, 0.10409, 0.104375, 0.105835], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	45
        Max loop nest depth: 	4
        Additions: 		1523
        Multiplications: 	666
        Divisions: 		0
        Logical: 		0
        Reads: 			3168
        Writes: 		596
        Comparisons:		45
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest57.exe __orio_perftest57.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest57.exe  
Program Test Output: 
{'[6, 4, 0, 0, 0, 0, 1, 0, 6, 27, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.10131}
{'[6, 4, 0, 0, 0, 0, 1, 0, 6, 27, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.101341}
{'[6, 4, 0, 0, 0, 0, 1, 0, 6, 27, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.103283}
{'[6, 4, 0, 0, 0, 0, 1, 0, 6, 27, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.103733}
{'[6, 4, 0, 0, 0, 0, 1, 0, 6, 27, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.0999281}
{'[6, 4, 0, 0, 0, 0, 1, 0, 6, 27, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.0888941}
{'[6, 4, 0, 0, 0, 0, 1, 0, 6, 27, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.0894291}
{'[6, 4, 0, 0, 0, 0, 1, 0, 6, 27, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.089309}
{'[6, 4, 0, 0, 0, 0, 1, 0, 6, 27, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.0887411}
{'[6, 4, 0, 0, 0, 0, 1, 0, 6, 27, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.0891418}
{'[6, 4, 0, 0, 0, 0, 1, 0, 6, 27, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.089011}
{'[6, 4, 0, 0, 0, 0, 1, 0, 6, 27, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.0888891}
{'[6, 4, 0, 0, 0, 0, 1, 0, 6, 27, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.0891039}
{'[6, 4, 0, 0, 0, 0, 1, 0, 6, 27, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.090878}
{'[6, 4, 0, 0, 0, 0, 1, 0, 6, 27, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.0907199}
{'[6, 4, 0, 0, 0, 0, 1, 0, 6, 27, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.090462}
{'[6, 4, 0, 0, 0, 0, 1, 0, 6, 27, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.0891101}
{'[6, 4, 0, 0, 0, 0, 1, 0, 6, 27, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.089057}
{'[6, 4, 0, 0, 0, 0, 1, 0, 6, 27, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.090169}
{'[6, 4, 0, 0, 0, 0, 1, 0, 6, 27, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.0912368}
{'[6, 4, 0, 0, 0, 0, 1, 0, 6, 27, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.091269}
{'[6, 4, 0, 0, 0, 0, 1, 0, 6, 27, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.0913351}
{'[6, 4, 0, 0, 0, 0, 1, 0, 6, 27, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.0910749}
{'[6, 4, 0, 0, 0, 0, 1, 0, 6, 27, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.0910239}
{'[6, 4, 0, 0, 0, 0, 1, 0, 6, 27, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.091089}
{'[6, 4, 0, 0, 0, 0, 1, 0, 6, 27, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.090903}
{'[6, 4, 0, 0, 0, 0, 1, 0, 6, 27, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.090801}
{'[6, 4, 0, 0, 0, 0, 1, 0, 6, 27, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.0890288}
{'[6, 4, 0, 0, 0, 0, 1, 0, 6, 27, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.0889909}
{'[6, 4, 0, 0, 0, 0, 1, 0, 6, 27, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.0889399}

out:
 ["{'[6, 4, 0, 0, 0, 0, 1, 0, 6, 27, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.10131}", "{'[6, 4, 0, 0, 0, 0, 1, 0, 6, 27, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.101341}", "{'[6, 4, 0, 0, 0, 0, 1, 0, 6, 27, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.103283}", "{'[6, 4, 0, 0, 0, 0, 1, 0, 6, 27, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.103733}", "{'[6, 4, 0, 0, 0, 0, 1, 0, 6, 27, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.0999281}", "{'[6, 4, 0, 0, 0, 0, 1, 0, 6, 27, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.0888941}", "{'[6, 4, 0, 0, 0, 0, 1, 0, 6, 27, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.0894291}", "{'[6, 4, 0, 0, 0, 0, 1, 0, 6, 27, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.089309}", "{'[6, 4, 0, 0, 0, 0, 1, 0, 6, 27, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.0887411}", "{'[6, 4, 0, 0, 0, 0, 1, 0, 6, 27, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.0891418}", "{'[6, 4, 0, 0, 0, 0, 1, 0, 6, 27, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.089011}", "{'[6, 4, 0, 0, 0, 0, 1, 0, 6, 27, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.0888891}", "{'[6, 4, 0, 0, 0, 0, 1, 0, 6, 27, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.0891039}", "{'[6, 4, 0, 0, 0, 0, 1, 0, 6, 27, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.090878}", "{'[6, 4, 0, 0, 0, 0, 1, 0, 6, 27, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.0907199}", "{'[6, 4, 0, 0, 0, 0, 1, 0, 6, 27, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.090462}", "{'[6, 4, 0, 0, 0, 0, 1, 0, 6, 27, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.0891101}", "{'[6, 4, 0, 0, 0, 0, 1, 0, 6, 27, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.089057}", "{'[6, 4, 0, 0, 0, 0, 1, 0, 6, 27, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.090169}", "{'[6, 4, 0, 0, 0, 0, 1, 0, 6, 27, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.0912368}", "{'[6, 4, 0, 0, 0, 0, 1, 0, 6, 27, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.091269}", "{'[6, 4, 0, 0, 0, 0, 1, 0, 6, 27, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.0913351}", "{'[6, 4, 0, 0, 0, 0, 1, 0, 6, 27, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.0910749}", "{'[6, 4, 0, 0, 0, 0, 1, 0, 6, 27, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.0910239}", "{'[6, 4, 0, 0, 0, 0, 1, 0, 6, 27, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.091089}", "{'[6, 4, 0, 0, 0, 0, 1, 0, 6, 27, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.090903}", "{'[6, 4, 0, 0, 0, 0, 1, 0, 6, 27, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.090801}", "{'[6, 4, 0, 0, 0, 0, 1, 0, 6, 27, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.0890288}", "{'[6, 4, 0, 0, 0, 0, 1, 0, 6, 27, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.0889909}", "{'[6, 4, 0, 0, 0, 0, 1, 0, 6, 27, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.0889399}"]
returning from 'run': {'[6, 4, 0, 0, 0, 0, 1, 0, 6, 27, 29, 0, 1, 1, 0, 1, 1, 1]': ([0.10131, 0.101341, 0.103283, 0.103733, 0.0999281, 0.0888941, 0.0894291, 0.089309, 0.0887411, 0.0891418, 0.089011, 0.0888891, 0.0891039, 0.090878, 0.0907199, 0.090462, 0.0891101, 0.089057, 0.090169, 0.0912368, 0.091269, 0.0913351, 0.0910749, 0.0910239, 0.091089, 0.090903, 0.090801, 0.0890288, 0.0889909, 0.0889399], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 4, 0, 0, 0, 0, 1, 0, 6, 27, 29, 0, 1, 1, 0, 1, 1, 1]': ([0.10131, 0.101341, 0.103283, 0.103733, 0.0999281, 0.0888941, 0.0894291, 0.089309, 0.0887411, 0.0891418, 0.089011, 0.0888891, 0.0891039, 0.090878, 0.0907199, 0.090462, 0.0891101, 0.089057, 0.090169, 0.0912368, 0.091269, 0.0913351, 0.0910749, 0.0910239, 0.091089, 0.090903, 0.090801, 0.0890288, 0.0889909, 0.0889399], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	50
        Max loop nest depth: 	5
        Additions: 		1604
        Multiplications: 	702
        Divisions: 		0
        Logical: 		0
        Reads: 			3333
        Writes: 		622
        Comparisons:		50
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest58.exe __orio_perftest58.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest58.exe  
Program Test Output: 
{'[5, 4, 1, 5, 0, 0, 1, 0, 0, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.116581}
{'[5, 4, 1, 5, 0, 0, 1, 0, 0, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.116381}
{'[5, 4, 1, 5, 0, 0, 1, 0, 0, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.116279}
{'[5, 4, 1, 5, 0, 0, 1, 0, 0, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.1163}
{'[5, 4, 1, 5, 0, 0, 1, 0, 0, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.107901}
{'[5, 4, 1, 5, 0, 0, 1, 0, 0, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.103983}
{'[5, 4, 1, 5, 0, 0, 1, 0, 0, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.103972}
{'[5, 4, 1, 5, 0, 0, 1, 0, 0, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.104007}
{'[5, 4, 1, 5, 0, 0, 1, 0, 0, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.103966}
{'[5, 4, 1, 5, 0, 0, 1, 0, 0, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.103994}
{'[5, 4, 1, 5, 0, 0, 1, 0, 0, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.103923}
{'[5, 4, 1, 5, 0, 0, 1, 0, 0, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.104148}
{'[5, 4, 1, 5, 0, 0, 1, 0, 0, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.102798}
{'[5, 4, 1, 5, 0, 0, 1, 0, 0, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.101291}
{'[5, 4, 1, 5, 0, 0, 1, 0, 0, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.101555}
{'[5, 4, 1, 5, 0, 0, 1, 0, 0, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.10168}
{'[5, 4, 1, 5, 0, 0, 1, 0, 0, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.101289}
{'[5, 4, 1, 5, 0, 0, 1, 0, 0, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.101236}
{'[5, 4, 1, 5, 0, 0, 1, 0, 0, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.101408}
{'[5, 4, 1, 5, 0, 0, 1, 0, 0, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.10148}
{'[5, 4, 1, 5, 0, 0, 1, 0, 0, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.101662}
{'[5, 4, 1, 5, 0, 0, 1, 0, 0, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.103985}
{'[5, 4, 1, 5, 0, 0, 1, 0, 0, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.104006}
{'[5, 4, 1, 5, 0, 0, 1, 0, 0, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.104049}
{'[5, 4, 1, 5, 0, 0, 1, 0, 0, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.101764}
{'[5, 4, 1, 5, 0, 0, 1, 0, 0, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.099463}
{'[5, 4, 1, 5, 0, 0, 1, 0, 0, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.101227}
{'[5, 4, 1, 5, 0, 0, 1, 0, 0, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.101238}
{'[5, 4, 1, 5, 0, 0, 1, 0, 0, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.101224}
{'[5, 4, 1, 5, 0, 0, 1, 0, 0, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.101195}

out:
 ["{'[5, 4, 1, 5, 0, 0, 1, 0, 0, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.116581}", "{'[5, 4, 1, 5, 0, 0, 1, 0, 0, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.116381}", "{'[5, 4, 1, 5, 0, 0, 1, 0, 0, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.116279}", "{'[5, 4, 1, 5, 0, 0, 1, 0, 0, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.1163}", "{'[5, 4, 1, 5, 0, 0, 1, 0, 0, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.107901}", "{'[5, 4, 1, 5, 0, 0, 1, 0, 0, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.103983}", "{'[5, 4, 1, 5, 0, 0, 1, 0, 0, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.103972}", "{'[5, 4, 1, 5, 0, 0, 1, 0, 0, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.104007}", "{'[5, 4, 1, 5, 0, 0, 1, 0, 0, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.103966}", "{'[5, 4, 1, 5, 0, 0, 1, 0, 0, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.103994}", "{'[5, 4, 1, 5, 0, 0, 1, 0, 0, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.103923}", "{'[5, 4, 1, 5, 0, 0, 1, 0, 0, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.104148}", "{'[5, 4, 1, 5, 0, 0, 1, 0, 0, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.102798}", "{'[5, 4, 1, 5, 0, 0, 1, 0, 0, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.101291}", "{'[5, 4, 1, 5, 0, 0, 1, 0, 0, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.101555}", "{'[5, 4, 1, 5, 0, 0, 1, 0, 0, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.10168}", "{'[5, 4, 1, 5, 0, 0, 1, 0, 0, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.101289}", "{'[5, 4, 1, 5, 0, 0, 1, 0, 0, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.101236}", "{'[5, 4, 1, 5, 0, 0, 1, 0, 0, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.101408}", "{'[5, 4, 1, 5, 0, 0, 1, 0, 0, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.10148}", "{'[5, 4, 1, 5, 0, 0, 1, 0, 0, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.101662}", "{'[5, 4, 1, 5, 0, 0, 1, 0, 0, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.103985}", "{'[5, 4, 1, 5, 0, 0, 1, 0, 0, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.104006}", "{'[5, 4, 1, 5, 0, 0, 1, 0, 0, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.104049}", "{'[5, 4, 1, 5, 0, 0, 1, 0, 0, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.101764}", "{'[5, 4, 1, 5, 0, 0, 1, 0, 0, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.099463}", "{'[5, 4, 1, 5, 0, 0, 1, 0, 0, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.101227}", "{'[5, 4, 1, 5, 0, 0, 1, 0, 0, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.101238}", "{'[5, 4, 1, 5, 0, 0, 1, 0, 0, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.101224}", "{'[5, 4, 1, 5, 0, 0, 1, 0, 0, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.101195}"]
returning from 'run': {'[5, 4, 1, 5, 0, 0, 1, 0, 0, 29, 29, 0, 1, 1, 0, 1, 0, 1]': ([0.116581, 0.116381, 0.116279, 0.1163, 0.107901, 0.103983, 0.103972, 0.104007, 0.103966, 0.103994, 0.103923, 0.104148, 0.102798, 0.101291, 0.101555, 0.10168, 0.101289, 0.101236, 0.101408, 0.10148, 0.101662, 0.103985, 0.104006, 0.104049, 0.101764, 0.099463, 0.101227, 0.101238, 0.101224, 0.101195], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 4, 1, 5, 0, 0, 1, 0, 0, 29, 29, 0, 1, 1, 0, 1, 0, 1]': ([0.116581, 0.116381, 0.116279, 0.1163, 0.107901, 0.103983, 0.103972, 0.104007, 0.103966, 0.103994, 0.103923, 0.104148, 0.102798, 0.101291, 0.101555, 0.10168, 0.101289, 0.101236, 0.101408, 0.10148, 0.101662, 0.103985, 0.104006, 0.104049, 0.101764, 0.099463, 0.101227, 0.101238, 0.101224, 0.101195], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	6
        Additions: 		397
        Multiplications: 	162
        Divisions: 		0
        Logical: 		0
        Reads: 			841
        Writes: 		165
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest59.exe __orio_perftest59.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest59.exe  
Program Test Output: 
{'[1, 4, 1, 4, 6, 1, 1, 0, 4, 0, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.103754}
{'[1, 4, 1, 4, 6, 1, 1, 0, 4, 0, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.103433}
{'[1, 4, 1, 4, 6, 1, 1, 0, 4, 0, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.104178}
{'[1, 4, 1, 4, 6, 1, 1, 0, 4, 0, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.104242}
{'[1, 4, 1, 4, 6, 1, 1, 0, 4, 0, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.104189}
{'[1, 4, 1, 4, 6, 1, 1, 0, 4, 0, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.104194}
{'[1, 4, 1, 4, 6, 1, 1, 0, 4, 0, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.101957}
{'[1, 4, 1, 4, 6, 1, 1, 0, 4, 0, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.101494}
{'[1, 4, 1, 4, 6, 1, 1, 0, 4, 0, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.101684}
{'[1, 4, 1, 4, 6, 1, 1, 0, 4, 0, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.101535}
{'[1, 4, 1, 4, 6, 1, 1, 0, 4, 0, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.10143}
{'[1, 4, 1, 4, 6, 1, 1, 0, 4, 0, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.101804}
{'[1, 4, 1, 4, 6, 1, 1, 0, 4, 0, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.101513}
{'[1, 4, 1, 4, 6, 1, 1, 0, 4, 0, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.101633}
{'[1, 4, 1, 4, 6, 1, 1, 0, 4, 0, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.101796}
{'[1, 4, 1, 4, 6, 1, 1, 0, 4, 0, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.0996451}
{'[1, 4, 1, 4, 6, 1, 1, 0, 4, 0, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.101375}
{'[1, 4, 1, 4, 6, 1, 1, 0, 4, 0, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.101195}
{'[1, 4, 1, 4, 6, 1, 1, 0, 4, 0, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.101221}
{'[1, 4, 1, 4, 6, 1, 1, 0, 4, 0, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.10117}
{'[1, 4, 1, 4, 6, 1, 1, 0, 4, 0, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.101347}
{'[1, 4, 1, 4, 6, 1, 1, 0, 4, 0, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.10127}
{'[1, 4, 1, 4, 6, 1, 1, 0, 4, 0, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.10119}
{'[1, 4, 1, 4, 6, 1, 1, 0, 4, 0, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.10116}
{'[1, 4, 1, 4, 6, 1, 1, 0, 4, 0, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.101411}
{'[1, 4, 1, 4, 6, 1, 1, 0, 4, 0, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.10165}
{'[1, 4, 1, 4, 6, 1, 1, 0, 4, 0, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.101579}
{'[1, 4, 1, 4, 6, 1, 1, 0, 4, 0, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.101457}
{'[1, 4, 1, 4, 6, 1, 1, 0, 4, 0, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.101739}
{'[1, 4, 1, 4, 6, 1, 1, 0, 4, 0, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.101463}

out:
 ["{'[1, 4, 1, 4, 6, 1, 1, 0, 4, 0, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.103754}", "{'[1, 4, 1, 4, 6, 1, 1, 0, 4, 0, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.103433}", "{'[1, 4, 1, 4, 6, 1, 1, 0, 4, 0, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.104178}", "{'[1, 4, 1, 4, 6, 1, 1, 0, 4, 0, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.104242}", "{'[1, 4, 1, 4, 6, 1, 1, 0, 4, 0, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.104189}", "{'[1, 4, 1, 4, 6, 1, 1, 0, 4, 0, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.104194}", "{'[1, 4, 1, 4, 6, 1, 1, 0, 4, 0, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.101957}", "{'[1, 4, 1, 4, 6, 1, 1, 0, 4, 0, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.101494}", "{'[1, 4, 1, 4, 6, 1, 1, 0, 4, 0, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.101684}", "{'[1, 4, 1, 4, 6, 1, 1, 0, 4, 0, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.101535}", "{'[1, 4, 1, 4, 6, 1, 1, 0, 4, 0, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.10143}", "{'[1, 4, 1, 4, 6, 1, 1, 0, 4, 0, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.101804}", "{'[1, 4, 1, 4, 6, 1, 1, 0, 4, 0, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.101513}", "{'[1, 4, 1, 4, 6, 1, 1, 0, 4, 0, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.101633}", "{'[1, 4, 1, 4, 6, 1, 1, 0, 4, 0, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.101796}", "{'[1, 4, 1, 4, 6, 1, 1, 0, 4, 0, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.0996451}", "{'[1, 4, 1, 4, 6, 1, 1, 0, 4, 0, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.101375}", "{'[1, 4, 1, 4, 6, 1, 1, 0, 4, 0, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.101195}", "{'[1, 4, 1, 4, 6, 1, 1, 0, 4, 0, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.101221}", "{'[1, 4, 1, 4, 6, 1, 1, 0, 4, 0, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.10117}", "{'[1, 4, 1, 4, 6, 1, 1, 0, 4, 0, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.101347}", "{'[1, 4, 1, 4, 6, 1, 1, 0, 4, 0, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.10127}", "{'[1, 4, 1, 4, 6, 1, 1, 0, 4, 0, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.10119}", "{'[1, 4, 1, 4, 6, 1, 1, 0, 4, 0, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.10116}", "{'[1, 4, 1, 4, 6, 1, 1, 0, 4, 0, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.101411}", "{'[1, 4, 1, 4, 6, 1, 1, 0, 4, 0, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.10165}", "{'[1, 4, 1, 4, 6, 1, 1, 0, 4, 0, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.101579}", "{'[1, 4, 1, 4, 6, 1, 1, 0, 4, 0, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.101457}", "{'[1, 4, 1, 4, 6, 1, 1, 0, 4, 0, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.101739}", "{'[1, 4, 1, 4, 6, 1, 1, 0, 4, 0, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.101463}"]
returning from 'run': {'[1, 4, 1, 4, 6, 1, 1, 0, 4, 0, 29, 0, 1, 1, 0, 1, 0, 1]': ([0.103754, 0.103433, 0.104178, 0.104242, 0.104189, 0.104194, 0.101957, 0.101494, 0.101684, 0.101535, 0.10143, 0.101804, 0.101513, 0.101633, 0.101796, 0.0996451, 0.101375, 0.101195, 0.101221, 0.10117, 0.101347, 0.10127, 0.10119, 0.10116, 0.101411, 0.10165, 0.101579, 0.101457, 0.101739, 0.101463], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 4, 1, 4, 6, 1, 1, 0, 4, 0, 29, 0, 1, 1, 0, 1, 0, 1]': ([0.103754, 0.103433, 0.104178, 0.104242, 0.104189, 0.104194, 0.101957, 0.101494, 0.101684, 0.101535, 0.10143, 0.101804, 0.101513, 0.101633, 0.101796, 0.0996451, 0.101375, 0.101195, 0.101221, 0.10117, 0.101347, 0.10127, 0.10119, 0.10116, 0.101411, 0.10165, 0.101579, 0.101457, 0.101739, 0.101463], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	118
        Max loop nest depth: 	6
        Additions: 		7511
        Multiplications: 	2496
        Divisions: 		0
        Logical: 		0
        Reads: 			12434
        Writes: 		1796
        Comparisons:		118
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest60.exe __orio_perftest60.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest60.exe  
Program Test Output: 
{'[2, 4, 5, 4, 5, 5, 1, 0, 29, 29, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.106849}
{'[2, 4, 5, 4, 5, 5, 1, 0, 29, 29, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.106921}
{'[2, 4, 5, 4, 5, 5, 1, 0, 29, 29, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.100861}
{'[2, 4, 5, 4, 5, 5, 1, 0, 29, 29, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.091217}
{'[2, 4, 5, 4, 5, 5, 1, 0, 29, 29, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0913539}
{'[2, 4, 5, 4, 5, 5, 1, 0, 29, 29, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0919249}
{'[2, 4, 5, 4, 5, 5, 1, 0, 29, 29, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0918779}
{'[2, 4, 5, 4, 5, 5, 1, 0, 29, 29, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0919061}
{'[2, 4, 5, 4, 5, 5, 1, 0, 29, 29, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0918641}
{'[2, 4, 5, 4, 5, 5, 1, 0, 29, 29, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0918591}
{'[2, 4, 5, 4, 5, 5, 1, 0, 29, 29, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0912659}
{'[2, 4, 5, 4, 5, 5, 1, 0, 29, 29, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0913169}
{'[2, 4, 5, 4, 5, 5, 1, 0, 29, 29, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0913031}
{'[2, 4, 5, 4, 5, 5, 1, 0, 29, 29, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.09127}
{'[2, 4, 5, 4, 5, 5, 1, 0, 29, 29, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.091264}
{'[2, 4, 5, 4, 5, 5, 1, 0, 29, 29, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.091619}
{'[2, 4, 5, 4, 5, 5, 1, 0, 29, 29, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0913041}
{'[2, 4, 5, 4, 5, 5, 1, 0, 29, 29, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0912719}
{'[2, 4, 5, 4, 5, 5, 1, 0, 29, 29, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.091296}
{'[2, 4, 5, 4, 5, 5, 1, 0, 29, 29, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0915999}
{'[2, 4, 5, 4, 5, 5, 1, 0, 29, 29, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0913329}
{'[2, 4, 5, 4, 5, 5, 1, 0, 29, 29, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.091238}
{'[2, 4, 5, 4, 5, 5, 1, 0, 29, 29, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.091265}
{'[2, 4, 5, 4, 5, 5, 1, 0, 29, 29, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.091275}
{'[2, 4, 5, 4, 5, 5, 1, 0, 29, 29, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.092087}
{'[2, 4, 5, 4, 5, 5, 1, 0, 29, 29, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0917828}
{'[2, 4, 5, 4, 5, 5, 1, 0, 29, 29, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.091182}
{'[2, 4, 5, 4, 5, 5, 1, 0, 29, 29, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.090909}
{'[2, 4, 5, 4, 5, 5, 1, 0, 29, 29, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0908999}
{'[2, 4, 5, 4, 5, 5, 1, 0, 29, 29, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0909779}

out:
 ["{'[2, 4, 5, 4, 5, 5, 1, 0, 29, 29, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.106849}", "{'[2, 4, 5, 4, 5, 5, 1, 0, 29, 29, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.106921}", "{'[2, 4, 5, 4, 5, 5, 1, 0, 29, 29, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.100861}", "{'[2, 4, 5, 4, 5, 5, 1, 0, 29, 29, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.091217}", "{'[2, 4, 5, 4, 5, 5, 1, 0, 29, 29, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0913539}", "{'[2, 4, 5, 4, 5, 5, 1, 0, 29, 29, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0919249}", "{'[2, 4, 5, 4, 5, 5, 1, 0, 29, 29, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0918779}", "{'[2, 4, 5, 4, 5, 5, 1, 0, 29, 29, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0919061}", "{'[2, 4, 5, 4, 5, 5, 1, 0, 29, 29, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0918641}", "{'[2, 4, 5, 4, 5, 5, 1, 0, 29, 29, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0918591}", "{'[2, 4, 5, 4, 5, 5, 1, 0, 29, 29, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0912659}", "{'[2, 4, 5, 4, 5, 5, 1, 0, 29, 29, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0913169}", "{'[2, 4, 5, 4, 5, 5, 1, 0, 29, 29, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0913031}", "{'[2, 4, 5, 4, 5, 5, 1, 0, 29, 29, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.09127}", "{'[2, 4, 5, 4, 5, 5, 1, 0, 29, 29, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.091264}", "{'[2, 4, 5, 4, 5, 5, 1, 0, 29, 29, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.091619}", "{'[2, 4, 5, 4, 5, 5, 1, 0, 29, 29, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0913041}", "{'[2, 4, 5, 4, 5, 5, 1, 0, 29, 29, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0912719}", "{'[2, 4, 5, 4, 5, 5, 1, 0, 29, 29, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.091296}", "{'[2, 4, 5, 4, 5, 5, 1, 0, 29, 29, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0915999}", "{'[2, 4, 5, 4, 5, 5, 1, 0, 29, 29, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0913329}", "{'[2, 4, 5, 4, 5, 5, 1, 0, 29, 29, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.091238}", "{'[2, 4, 5, 4, 5, 5, 1, 0, 29, 29, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.091265}", "{'[2, 4, 5, 4, 5, 5, 1, 0, 29, 29, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.091275}", "{'[2, 4, 5, 4, 5, 5, 1, 0, 29, 29, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.092087}", "{'[2, 4, 5, 4, 5, 5, 1, 0, 29, 29, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0917828}", "{'[2, 4, 5, 4, 5, 5, 1, 0, 29, 29, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.091182}", "{'[2, 4, 5, 4, 5, 5, 1, 0, 29, 29, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.090909}", "{'[2, 4, 5, 4, 5, 5, 1, 0, 29, 29, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0908999}", "{'[2, 4, 5, 4, 5, 5, 1, 0, 29, 29, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0909779}"]
returning from 'run': {'[2, 4, 5, 4, 5, 5, 1, 0, 29, 29, 29, 0, 1, 0, 0, 1, 1, 1]': ([0.106849, 0.106921, 0.100861, 0.091217, 0.0913539, 0.0919249, 0.0918779, 0.0919061, 0.0918641, 0.0918591, 0.0912659, 0.0913169, 0.0913031, 0.09127, 0.091264, 0.091619, 0.0913041, 0.0912719, 0.091296, 0.0915999, 0.0913329, 0.091238, 0.091265, 0.091275, 0.092087, 0.0917828, 0.091182, 0.090909, 0.0908999, 0.0909779], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 4, 5, 4, 5, 5, 1, 0, 29, 29, 29, 0, 1, 0, 0, 1, 1, 1]': ([0.106849, 0.106921, 0.100861, 0.091217, 0.0913539, 0.0919249, 0.0918779, 0.0919061, 0.0918641, 0.0918591, 0.0912659, 0.0913169, 0.0913031, 0.09127, 0.091264, 0.091619, 0.0913041, 0.0912719, 0.091296, 0.0915999, 0.0913329, 0.091238, 0.091265, 0.091275, 0.092087, 0.0917828, 0.091182, 0.090909, 0.0908999, 0.0909779], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	46
        Max loop nest depth: 	6
        Additions: 		2522
        Multiplications: 	960
        Divisions: 		0
        Logical: 		0
        Reads: 			4496
        Writes: 		695
        Comparisons:		46
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest61.exe __orio_perftest61.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest61.exe  
Program Test Output: 
{'[2, 4, 2, 6, 5, 6, 1, 0, 8, 5, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.112122}
{'[2, 4, 2, 6, 5, 6, 1, 0, 8, 5, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.112048}
{'[2, 4, 2, 6, 5, 6, 1, 0, 8, 5, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.112027}
{'[2, 4, 2, 6, 5, 6, 1, 0, 8, 5, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.112174}
{'[2, 4, 2, 6, 5, 6, 1, 0, 8, 5, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.109315}
{'[2, 4, 2, 6, 5, 6, 1, 0, 8, 5, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.09606}
{'[2, 4, 2, 6, 5, 6, 1, 0, 8, 5, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.095494}
{'[2, 4, 2, 6, 5, 6, 1, 0, 8, 5, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.095726}
{'[2, 4, 2, 6, 5, 6, 1, 0, 8, 5, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0956991}
{'[2, 4, 2, 6, 5, 6, 1, 0, 8, 5, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0957408}
{'[2, 4, 2, 6, 5, 6, 1, 0, 8, 5, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.095408}
{'[2, 4, 2, 6, 5, 6, 1, 0, 8, 5, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0954921}
{'[2, 4, 2, 6, 5, 6, 1, 0, 8, 5, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0956919}
{'[2, 4, 2, 6, 5, 6, 1, 0, 8, 5, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0957892}
{'[2, 4, 2, 6, 5, 6, 1, 0, 8, 5, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.098259}
{'[2, 4, 2, 6, 5, 6, 1, 0, 8, 5, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0963111}
{'[2, 4, 2, 6, 5, 6, 1, 0, 8, 5, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.096391}
{'[2, 4, 2, 6, 5, 6, 1, 0, 8, 5, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0963101}
{'[2, 4, 2, 6, 5, 6, 1, 0, 8, 5, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0962262}
{'[2, 4, 2, 6, 5, 6, 1, 0, 8, 5, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.097749}
{'[2, 4, 2, 6, 5, 6, 1, 0, 8, 5, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0964148}
{'[2, 4, 2, 6, 5, 6, 1, 0, 8, 5, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0964029}
{'[2, 4, 2, 6, 5, 6, 1, 0, 8, 5, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.096487}
{'[2, 4, 2, 6, 5, 6, 1, 0, 8, 5, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0965731}
{'[2, 4, 2, 6, 5, 6, 1, 0, 8, 5, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.099262}
{'[2, 4, 2, 6, 5, 6, 1, 0, 8, 5, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.097023}
{'[2, 4, 2, 6, 5, 6, 1, 0, 8, 5, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0961561}
{'[2, 4, 2, 6, 5, 6, 1, 0, 8, 5, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.096359}
{'[2, 4, 2, 6, 5, 6, 1, 0, 8, 5, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0962241}
{'[2, 4, 2, 6, 5, 6, 1, 0, 8, 5, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0978351}

out:
 ["{'[2, 4, 2, 6, 5, 6, 1, 0, 8, 5, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.112122}", "{'[2, 4, 2, 6, 5, 6, 1, 0, 8, 5, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.112048}", "{'[2, 4, 2, 6, 5, 6, 1, 0, 8, 5, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.112027}", "{'[2, 4, 2, 6, 5, 6, 1, 0, 8, 5, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.112174}", "{'[2, 4, 2, 6, 5, 6, 1, 0, 8, 5, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.109315}", "{'[2, 4, 2, 6, 5, 6, 1, 0, 8, 5, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.09606}", "{'[2, 4, 2, 6, 5, 6, 1, 0, 8, 5, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.095494}", "{'[2, 4, 2, 6, 5, 6, 1, 0, 8, 5, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.095726}", "{'[2, 4, 2, 6, 5, 6, 1, 0, 8, 5, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0956991}", "{'[2, 4, 2, 6, 5, 6, 1, 0, 8, 5, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0957408}", "{'[2, 4, 2, 6, 5, 6, 1, 0, 8, 5, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.095408}", "{'[2, 4, 2, 6, 5, 6, 1, 0, 8, 5, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0954921}", "{'[2, 4, 2, 6, 5, 6, 1, 0, 8, 5, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0956919}", "{'[2, 4, 2, 6, 5, 6, 1, 0, 8, 5, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0957892}", "{'[2, 4, 2, 6, 5, 6, 1, 0, 8, 5, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.098259}", "{'[2, 4, 2, 6, 5, 6, 1, 0, 8, 5, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0963111}", "{'[2, 4, 2, 6, 5, 6, 1, 0, 8, 5, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.096391}", "{'[2, 4, 2, 6, 5, 6, 1, 0, 8, 5, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0963101}", "{'[2, 4, 2, 6, 5, 6, 1, 0, 8, 5, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0962262}", "{'[2, 4, 2, 6, 5, 6, 1, 0, 8, 5, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.097749}", "{'[2, 4, 2, 6, 5, 6, 1, 0, 8, 5, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0964148}", "{'[2, 4, 2, 6, 5, 6, 1, 0, 8, 5, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0964029}", "{'[2, 4, 2, 6, 5, 6, 1, 0, 8, 5, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.096487}", "{'[2, 4, 2, 6, 5, 6, 1, 0, 8, 5, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0965731}", "{'[2, 4, 2, 6, 5, 6, 1, 0, 8, 5, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.099262}", "{'[2, 4, 2, 6, 5, 6, 1, 0, 8, 5, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.097023}", "{'[2, 4, 2, 6, 5, 6, 1, 0, 8, 5, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0961561}", "{'[2, 4, 2, 6, 5, 6, 1, 0, 8, 5, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.096359}", "{'[2, 4, 2, 6, 5, 6, 1, 0, 8, 5, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0962241}", "{'[2, 4, 2, 6, 5, 6, 1, 0, 8, 5, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0978351}"]
returning from 'run': {'[2, 4, 2, 6, 5, 6, 1, 0, 8, 5, 29, 0, 1, 0, 0, 1, 1, 1]': ([0.112122, 0.112048, 0.112027, 0.112174, 0.109315, 0.09606, 0.095494, 0.095726, 0.0956991, 0.0957408, 0.095408, 0.0954921, 0.0956919, 0.0957892, 0.098259, 0.0963111, 0.096391, 0.0963101, 0.0962262, 0.097749, 0.0964148, 0.0964029, 0.096487, 0.0965731, 0.099262, 0.097023, 0.0961561, 0.096359, 0.0962241, 0.0978351], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 4, 2, 6, 5, 6, 1, 0, 8, 5, 29, 0, 1, 0, 0, 1, 1, 1]': ([0.112122, 0.112048, 0.112027, 0.112174, 0.109315, 0.09606, 0.095494, 0.095726, 0.0956991, 0.0957408, 0.095408, 0.0954921, 0.0956919, 0.0957892, 0.098259, 0.0963111, 0.096391, 0.0963101, 0.0962262, 0.097749, 0.0964148, 0.0964029, 0.096487, 0.0965731, 0.099262, 0.097023, 0.0961561, 0.096359, 0.0962241, 0.0978351], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		1179
        Multiplications: 	544
        Divisions: 		0
        Logical: 		0
        Reads: 			2252
        Writes: 		385
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest62.exe __orio_perftest62.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest62.exe  
Program Test Output: 
{'[0, 4, 1, 0, 6, 6, 1, 0, 26, 0, 29, 1, 1, 0, 0, 1, 0, 1]' : 0.109555}
{'[0, 4, 1, 0, 6, 6, 1, 0, 26, 0, 29, 1, 1, 0, 0, 1, 0, 1]' : 0.109871}
{'[0, 4, 1, 0, 6, 6, 1, 0, 26, 0, 29, 1, 1, 0, 0, 1, 0, 1]' : 0.109416}
{'[0, 4, 1, 0, 6, 6, 1, 0, 26, 0, 29, 1, 1, 0, 0, 1, 0, 1]' : 0.109547}
{'[0, 4, 1, 0, 6, 6, 1, 0, 26, 0, 29, 1, 1, 0, 0, 1, 0, 1]' : 0.10323}
{'[0, 4, 1, 0, 6, 6, 1, 0, 26, 0, 29, 1, 1, 0, 0, 1, 0, 1]' : 0.0937052}
{'[0, 4, 1, 0, 6, 6, 1, 0, 26, 0, 29, 1, 1, 0, 0, 1, 0, 1]' : 0.094943}
{'[0, 4, 1, 0, 6, 6, 1, 0, 26, 0, 29, 1, 1, 0, 0, 1, 0, 1]' : 0.0935931}
{'[0, 4, 1, 0, 6, 6, 1, 0, 26, 0, 29, 1, 1, 0, 0, 1, 0, 1]' : 0.0937262}
{'[0, 4, 1, 0, 6, 6, 1, 0, 26, 0, 29, 1, 1, 0, 0, 1, 0, 1]' : 0.0935869}
{'[0, 4, 1, 0, 6, 6, 1, 0, 26, 0, 29, 1, 1, 0, 0, 1, 0, 1]' : 0.093761}
{'[0, 4, 1, 0, 6, 6, 1, 0, 26, 0, 29, 1, 1, 0, 0, 1, 0, 1]' : 0.094445}
{'[0, 4, 1, 0, 6, 6, 1, 0, 26, 0, 29, 1, 1, 0, 0, 1, 0, 1]' : 0.093585}
{'[0, 4, 1, 0, 6, 6, 1, 0, 26, 0, 29, 1, 1, 0, 0, 1, 0, 1]' : 0.093513}
{'[0, 4, 1, 0, 6, 6, 1, 0, 26, 0, 29, 1, 1, 0, 0, 1, 0, 1]' : 0.093605}
{'[0, 4, 1, 0, 6, 6, 1, 0, 26, 0, 29, 1, 1, 0, 0, 1, 0, 1]' : 0.0934188}
{'[0, 4, 1, 0, 6, 6, 1, 0, 26, 0, 29, 1, 1, 0, 0, 1, 0, 1]' : 0.0934591}
{'[0, 4, 1, 0, 6, 6, 1, 0, 26, 0, 29, 1, 1, 0, 0, 1, 0, 1]' : 0.0961058}
{'[0, 4, 1, 0, 6, 6, 1, 0, 26, 0, 29, 1, 1, 0, 0, 1, 0, 1]' : 0.096066}
{'[0, 4, 1, 0, 6, 6, 1, 0, 26, 0, 29, 1, 1, 0, 0, 1, 0, 1]' : 0.095588}
{'[0, 4, 1, 0, 6, 6, 1, 0, 26, 0, 29, 1, 1, 0, 0, 1, 0, 1]' : 0.093554}
{'[0, 4, 1, 0, 6, 6, 1, 0, 26, 0, 29, 1, 1, 0, 0, 1, 0, 1]' : 0.0935609}
{'[0, 4, 1, 0, 6, 6, 1, 0, 26, 0, 29, 1, 1, 0, 0, 1, 0, 1]' : 0.0944159}
{'[0, 4, 1, 0, 6, 6, 1, 0, 26, 0, 29, 1, 1, 0, 0, 1, 0, 1]' : 0.0937142}
{'[0, 4, 1, 0, 6, 6, 1, 0, 26, 0, 29, 1, 1, 0, 0, 1, 0, 1]' : 0.0935719}
{'[0, 4, 1, 0, 6, 6, 1, 0, 26, 0, 29, 1, 1, 0, 0, 1, 0, 1]' : 0.0934861}
{'[0, 4, 1, 0, 6, 6, 1, 0, 26, 0, 29, 1, 1, 0, 0, 1, 0, 1]' : 0.0934291}
{'[0, 4, 1, 0, 6, 6, 1, 0, 26, 0, 29, 1, 1, 0, 0, 1, 0, 1]' : 0.094609}
{'[0, 4, 1, 0, 6, 6, 1, 0, 26, 0, 29, 1, 1, 0, 0, 1, 0, 1]' : 0.096179}
{'[0, 4, 1, 0, 6, 6, 1, 0, 26, 0, 29, 1, 1, 0, 0, 1, 0, 1]' : 0.0962379}

out:
 ["{'[0, 4, 1, 0, 6, 6, 1, 0, 26, 0, 29, 1, 1, 0, 0, 1, 0, 1]' : 0.109555}", "{'[0, 4, 1, 0, 6, 6, 1, 0, 26, 0, 29, 1, 1, 0, 0, 1, 0, 1]' : 0.109871}", "{'[0, 4, 1, 0, 6, 6, 1, 0, 26, 0, 29, 1, 1, 0, 0, 1, 0, 1]' : 0.109416}", "{'[0, 4, 1, 0, 6, 6, 1, 0, 26, 0, 29, 1, 1, 0, 0, 1, 0, 1]' : 0.109547}", "{'[0, 4, 1, 0, 6, 6, 1, 0, 26, 0, 29, 1, 1, 0, 0, 1, 0, 1]' : 0.10323}", "{'[0, 4, 1, 0, 6, 6, 1, 0, 26, 0, 29, 1, 1, 0, 0, 1, 0, 1]' : 0.0937052}", "{'[0, 4, 1, 0, 6, 6, 1, 0, 26, 0, 29, 1, 1, 0, 0, 1, 0, 1]' : 0.094943}", "{'[0, 4, 1, 0, 6, 6, 1, 0, 26, 0, 29, 1, 1, 0, 0, 1, 0, 1]' : 0.0935931}", "{'[0, 4, 1, 0, 6, 6, 1, 0, 26, 0, 29, 1, 1, 0, 0, 1, 0, 1]' : 0.0937262}", "{'[0, 4, 1, 0, 6, 6, 1, 0, 26, 0, 29, 1, 1, 0, 0, 1, 0, 1]' : 0.0935869}", "{'[0, 4, 1, 0, 6, 6, 1, 0, 26, 0, 29, 1, 1, 0, 0, 1, 0, 1]' : 0.093761}", "{'[0, 4, 1, 0, 6, 6, 1, 0, 26, 0, 29, 1, 1, 0, 0, 1, 0, 1]' : 0.094445}", "{'[0, 4, 1, 0, 6, 6, 1, 0, 26, 0, 29, 1, 1, 0, 0, 1, 0, 1]' : 0.093585}", "{'[0, 4, 1, 0, 6, 6, 1, 0, 26, 0, 29, 1, 1, 0, 0, 1, 0, 1]' : 0.093513}", "{'[0, 4, 1, 0, 6, 6, 1, 0, 26, 0, 29, 1, 1, 0, 0, 1, 0, 1]' : 0.093605}", "{'[0, 4, 1, 0, 6, 6, 1, 0, 26, 0, 29, 1, 1, 0, 0, 1, 0, 1]' : 0.0934188}", "{'[0, 4, 1, 0, 6, 6, 1, 0, 26, 0, 29, 1, 1, 0, 0, 1, 0, 1]' : 0.0934591}", "{'[0, 4, 1, 0, 6, 6, 1, 0, 26, 0, 29, 1, 1, 0, 0, 1, 0, 1]' : 0.0961058}", "{'[0, 4, 1, 0, 6, 6, 1, 0, 26, 0, 29, 1, 1, 0, 0, 1, 0, 1]' : 0.096066}", "{'[0, 4, 1, 0, 6, 6, 1, 0, 26, 0, 29, 1, 1, 0, 0, 1, 0, 1]' : 0.095588}", "{'[0, 4, 1, 0, 6, 6, 1, 0, 26, 0, 29, 1, 1, 0, 0, 1, 0, 1]' : 0.093554}", "{'[0, 4, 1, 0, 6, 6, 1, 0, 26, 0, 29, 1, 1, 0, 0, 1, 0, 1]' : 0.0935609}", "{'[0, 4, 1, 0, 6, 6, 1, 0, 26, 0, 29, 1, 1, 0, 0, 1, 0, 1]' : 0.0944159}", "{'[0, 4, 1, 0, 6, 6, 1, 0, 26, 0, 29, 1, 1, 0, 0, 1, 0, 1]' : 0.0937142}", "{'[0, 4, 1, 0, 6, 6, 1, 0, 26, 0, 29, 1, 1, 0, 0, 1, 0, 1]' : 0.0935719}", "{'[0, 4, 1, 0, 6, 6, 1, 0, 26, 0, 29, 1, 1, 0, 0, 1, 0, 1]' : 0.0934861}", "{'[0, 4, 1, 0, 6, 6, 1, 0, 26, 0, 29, 1, 1, 0, 0, 1, 0, 1]' : 0.0934291}", "{'[0, 4, 1, 0, 6, 6, 1, 0, 26, 0, 29, 1, 1, 0, 0, 1, 0, 1]' : 0.094609}", "{'[0, 4, 1, 0, 6, 6, 1, 0, 26, 0, 29, 1, 1, 0, 0, 1, 0, 1]' : 0.096179}", "{'[0, 4, 1, 0, 6, 6, 1, 0, 26, 0, 29, 1, 1, 0, 0, 1, 0, 1]' : 0.0962379}"]
returning from 'run': {'[0, 4, 1, 0, 6, 6, 1, 0, 26, 0, 29, 1, 1, 0, 0, 1, 0, 1]': ([0.109555, 0.109871, 0.109416, 0.109547, 0.10323, 0.0937052, 0.094943, 0.0935931, 0.0937262, 0.0935869, 0.093761, 0.094445, 0.093585, 0.093513, 0.093605, 0.0934188, 0.0934591, 0.0961058, 0.096066, 0.095588, 0.093554, 0.0935609, 0.0944159, 0.0937142, 0.0935719, 0.0934861, 0.0934291, 0.094609, 0.096179, 0.0962379], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 4, 1, 0, 6, 6, 1, 0, 26, 0, 29, 1, 1, 0, 0, 1, 0, 1]': ([0.109555, 0.109871, 0.109416, 0.109547, 0.10323, 0.0937052, 0.094943, 0.0935931, 0.0937262, 0.0935869, 0.093761, 0.094445, 0.093585, 0.093513, 0.093605, 0.0934188, 0.0934591, 0.0961058, 0.096066, 0.095588, 0.093554, 0.0935609, 0.0944159, 0.0937142, 0.0935719, 0.0934861, 0.0934291, 0.094609, 0.096179, 0.0962379], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	6
        Additions: 		1501
        Multiplications: 	684
        Divisions: 		0
        Logical: 		0
        Reads: 			2916
        Writes: 		488
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest63.exe __orio_perftest63.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest63.exe  
Program Test Output: 
{'[1, 4, 0, 2, 3, 0, 1, 0, 8, 0, 29, 5, 1, 0, 0, 1, 1, 1]' : 0.105232}
{'[1, 4, 0, 2, 3, 0, 1, 0, 8, 0, 29, 5, 1, 0, 0, 1, 1, 1]' : 0.105569}
{'[1, 4, 0, 2, 3, 0, 1, 0, 8, 0, 29, 5, 1, 0, 0, 1, 1, 1]' : 0.105135}
{'[1, 4, 0, 2, 3, 0, 1, 0, 8, 0, 29, 5, 1, 0, 0, 1, 1, 1]' : 0.105232}
{'[1, 4, 0, 2, 3, 0, 1, 0, 8, 0, 29, 5, 1, 0, 0, 1, 1, 1]' : 0.105192}
{'[1, 4, 0, 2, 3, 0, 1, 0, 8, 0, 29, 5, 1, 0, 0, 1, 1, 1]' : 0.094739}
{'[1, 4, 0, 2, 3, 0, 1, 0, 8, 0, 29, 5, 1, 0, 0, 1, 1, 1]' : 0.0921731}
{'[1, 4, 0, 2, 3, 0, 1, 0, 8, 0, 29, 5, 1, 0, 0, 1, 1, 1]' : 0.0921931}
{'[1, 4, 0, 2, 3, 0, 1, 0, 8, 0, 29, 5, 1, 0, 0, 1, 1, 1]' : 0.091053}
{'[1, 4, 0, 2, 3, 0, 1, 0, 8, 0, 29, 5, 1, 0, 0, 1, 1, 1]' : 0.0896609}
{'[1, 4, 0, 2, 3, 0, 1, 0, 8, 0, 29, 5, 1, 0, 0, 1, 1, 1]' : 0.0896649}
{'[1, 4, 0, 2, 3, 0, 1, 0, 8, 0, 29, 5, 1, 0, 0, 1, 1, 1]' : 0.0902259}
{'[1, 4, 0, 2, 3, 0, 1, 0, 8, 0, 29, 5, 1, 0, 0, 1, 1, 1]' : 0.088881}
{'[1, 4, 0, 2, 3, 0, 1, 0, 8, 0, 29, 5, 1, 0, 0, 1, 1, 1]' : 0.0886712}
{'[1, 4, 0, 2, 3, 0, 1, 0, 8, 0, 29, 5, 1, 0, 0, 1, 1, 1]' : 0.088572}
{'[1, 4, 0, 2, 3, 0, 1, 0, 8, 0, 29, 5, 1, 0, 0, 1, 1, 1]' : 0.0885921}
{'[1, 4, 0, 2, 3, 0, 1, 0, 8, 0, 29, 5, 1, 0, 0, 1, 1, 1]' : 0.0886571}
{'[1, 4, 0, 2, 3, 0, 1, 0, 8, 0, 29, 5, 1, 0, 0, 1, 1, 1]' : 0.0908332}
{'[1, 4, 0, 2, 3, 0, 1, 0, 8, 0, 29, 5, 1, 0, 0, 1, 1, 1]' : 0.092016}
{'[1, 4, 0, 2, 3, 0, 1, 0, 8, 0, 29, 5, 1, 0, 0, 1, 1, 1]' : 0.0897791}
{'[1, 4, 0, 2, 3, 0, 1, 0, 8, 0, 29, 5, 1, 0, 0, 1, 1, 1]' : 0.089819}
{'[1, 4, 0, 2, 3, 0, 1, 0, 8, 0, 29, 5, 1, 0, 0, 1, 1, 1]' : 0.0900009}
{'[1, 4, 0, 2, 3, 0, 1, 0, 8, 0, 29, 5, 1, 0, 0, 1, 1, 1]' : 0.0899138}
{'[1, 4, 0, 2, 3, 0, 1, 0, 8, 0, 29, 5, 1, 0, 0, 1, 1, 1]' : 0.0924449}
{'[1, 4, 0, 2, 3, 0, 1, 0, 8, 0, 29, 5, 1, 0, 0, 1, 1, 1]' : 0.09005}
{'[1, 4, 0, 2, 3, 0, 1, 0, 8, 0, 29, 5, 1, 0, 0, 1, 1, 1]' : 0.0899031}
{'[1, 4, 0, 2, 3, 0, 1, 0, 8, 0, 29, 5, 1, 0, 0, 1, 1, 1]' : 0.089627}
{'[1, 4, 0, 2, 3, 0, 1, 0, 8, 0, 29, 5, 1, 0, 0, 1, 1, 1]' : 0.0896869}
{'[1, 4, 0, 2, 3, 0, 1, 0, 8, 0, 29, 5, 1, 0, 0, 1, 1, 1]' : 0.0919502}
{'[1, 4, 0, 2, 3, 0, 1, 0, 8, 0, 29, 5, 1, 0, 0, 1, 1, 1]' : 0.0945549}

out:
 ["{'[1, 4, 0, 2, 3, 0, 1, 0, 8, 0, 29, 5, 1, 0, 0, 1, 1, 1]' : 0.105232}", "{'[1, 4, 0, 2, 3, 0, 1, 0, 8, 0, 29, 5, 1, 0, 0, 1, 1, 1]' : 0.105569}", "{'[1, 4, 0, 2, 3, 0, 1, 0, 8, 0, 29, 5, 1, 0, 0, 1, 1, 1]' : 0.105135}", "{'[1, 4, 0, 2, 3, 0, 1, 0, 8, 0, 29, 5, 1, 0, 0, 1, 1, 1]' : 0.105232}", "{'[1, 4, 0, 2, 3, 0, 1, 0, 8, 0, 29, 5, 1, 0, 0, 1, 1, 1]' : 0.105192}", "{'[1, 4, 0, 2, 3, 0, 1, 0, 8, 0, 29, 5, 1, 0, 0, 1, 1, 1]' : 0.094739}", "{'[1, 4, 0, 2, 3, 0, 1, 0, 8, 0, 29, 5, 1, 0, 0, 1, 1, 1]' : 0.0921731}", "{'[1, 4, 0, 2, 3, 0, 1, 0, 8, 0, 29, 5, 1, 0, 0, 1, 1, 1]' : 0.0921931}", "{'[1, 4, 0, 2, 3, 0, 1, 0, 8, 0, 29, 5, 1, 0, 0, 1, 1, 1]' : 0.091053}", "{'[1, 4, 0, 2, 3, 0, 1, 0, 8, 0, 29, 5, 1, 0, 0, 1, 1, 1]' : 0.0896609}", "{'[1, 4, 0, 2, 3, 0, 1, 0, 8, 0, 29, 5, 1, 0, 0, 1, 1, 1]' : 0.0896649}", "{'[1, 4, 0, 2, 3, 0, 1, 0, 8, 0, 29, 5, 1, 0, 0, 1, 1, 1]' : 0.0902259}", "{'[1, 4, 0, 2, 3, 0, 1, 0, 8, 0, 29, 5, 1, 0, 0, 1, 1, 1]' : 0.088881}", "{'[1, 4, 0, 2, 3, 0, 1, 0, 8, 0, 29, 5, 1, 0, 0, 1, 1, 1]' : 0.0886712}", "{'[1, 4, 0, 2, 3, 0, 1, 0, 8, 0, 29, 5, 1, 0, 0, 1, 1, 1]' : 0.088572}", "{'[1, 4, 0, 2, 3, 0, 1, 0, 8, 0, 29, 5, 1, 0, 0, 1, 1, 1]' : 0.0885921}", "{'[1, 4, 0, 2, 3, 0, 1, 0, 8, 0, 29, 5, 1, 0, 0, 1, 1, 1]' : 0.0886571}", "{'[1, 4, 0, 2, 3, 0, 1, 0, 8, 0, 29, 5, 1, 0, 0, 1, 1, 1]' : 0.0908332}", "{'[1, 4, 0, 2, 3, 0, 1, 0, 8, 0, 29, 5, 1, 0, 0, 1, 1, 1]' : 0.092016}", "{'[1, 4, 0, 2, 3, 0, 1, 0, 8, 0, 29, 5, 1, 0, 0, 1, 1, 1]' : 0.0897791}", "{'[1, 4, 0, 2, 3, 0, 1, 0, 8, 0, 29, 5, 1, 0, 0, 1, 1, 1]' : 0.089819}", "{'[1, 4, 0, 2, 3, 0, 1, 0, 8, 0, 29, 5, 1, 0, 0, 1, 1, 1]' : 0.0900009}", "{'[1, 4, 0, 2, 3, 0, 1, 0, 8, 0, 29, 5, 1, 0, 0, 1, 1, 1]' : 0.0899138}", "{'[1, 4, 0, 2, 3, 0, 1, 0, 8, 0, 29, 5, 1, 0, 0, 1, 1, 1]' : 0.0924449}", "{'[1, 4, 0, 2, 3, 0, 1, 0, 8, 0, 29, 5, 1, 0, 0, 1, 1, 1]' : 0.09005}", "{'[1, 4, 0, 2, 3, 0, 1, 0, 8, 0, 29, 5, 1, 0, 0, 1, 1, 1]' : 0.0899031}", "{'[1, 4, 0, 2, 3, 0, 1, 0, 8, 0, 29, 5, 1, 0, 0, 1, 1, 1]' : 0.089627}", "{'[1, 4, 0, 2, 3, 0, 1, 0, 8, 0, 29, 5, 1, 0, 0, 1, 1, 1]' : 0.0896869}", "{'[1, 4, 0, 2, 3, 0, 1, 0, 8, 0, 29, 5, 1, 0, 0, 1, 1, 1]' : 0.0919502}", "{'[1, 4, 0, 2, 3, 0, 1, 0, 8, 0, 29, 5, 1, 0, 0, 1, 1, 1]' : 0.0945549}"]
returning from 'run': {'[1, 4, 0, 2, 3, 0, 1, 0, 8, 0, 29, 5, 1, 0, 0, 1, 1, 1]': ([0.105232, 0.105569, 0.105135, 0.105232, 0.105192, 0.094739, 0.0921731, 0.0921931, 0.091053, 0.0896609, 0.0896649, 0.0902259, 0.088881, 0.0886712, 0.088572, 0.0885921, 0.0886571, 0.0908332, 0.092016, 0.0897791, 0.089819, 0.0900009, 0.0899138, 0.0924449, 0.09005, 0.0899031, 0.089627, 0.0896869, 0.0919502, 0.0945549], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 4, 0, 2, 3, 0, 1, 0, 8, 0, 29, 5, 1, 0, 0, 1, 1, 1]': ([0.105232, 0.105569, 0.105135, 0.105232, 0.105192, 0.094739, 0.0921731, 0.0921931, 0.091053, 0.0896609, 0.0896649, 0.0902259, 0.088881, 0.0886712, 0.088572, 0.0885921, 0.0886571, 0.0908332, 0.092016, 0.0897791, 0.089819, 0.0900009, 0.0899138, 0.0924449, 0.09005, 0.0899031, 0.089627, 0.0896869, 0.0919502, 0.0945549], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	4
        Additions: 		917
        Multiplications: 	432
        Divisions: 		0
        Logical: 		0
        Reads: 			1792
        Writes: 		307
        Comparisons:		10
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest64.exe __orio_perftest64.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest64.exe  
Program Test Output: 
{'[0, 4, 6, 0, 6, 4, 1, 0, 1, 0, 29, 17, 1, 1, 0, 1, 0, 1]' : 0.0905092}
{'[0, 4, 6, 0, 6, 4, 1, 0, 1, 0, 29, 17, 1, 1, 0, 1, 0, 1]' : 0.0889671}
{'[0, 4, 6, 0, 6, 4, 1, 0, 1, 0, 29, 17, 1, 1, 0, 1, 0, 1]' : 0.0857041}
{'[0, 4, 6, 0, 6, 4, 1, 0, 1, 0, 29, 17, 1, 1, 0, 1, 0, 1]' : 0.0858259}
{'[0, 4, 6, 0, 6, 4, 1, 0, 1, 0, 29, 17, 1, 1, 0, 1, 0, 1]' : 0.085799}
{'[0, 4, 6, 0, 6, 4, 1, 0, 1, 0, 29, 17, 1, 1, 0, 1, 0, 1]' : 0.0856991}
{'[0, 4, 6, 0, 6, 4, 1, 0, 1, 0, 29, 17, 1, 1, 0, 1, 0, 1]' : 0.086165}
{'[0, 4, 6, 0, 6, 4, 1, 0, 1, 0, 29, 17, 1, 1, 0, 1, 0, 1]' : 0.08799}
{'[0, 4, 6, 0, 6, 4, 1, 0, 1, 0, 29, 17, 1, 1, 0, 1, 0, 1]' : 0.0880761}
{'[0, 4, 6, 0, 6, 4, 1, 0, 1, 0, 29, 17, 1, 1, 0, 1, 0, 1]' : 0.088228}
{'[0, 4, 6, 0, 6, 4, 1, 0, 1, 0, 29, 17, 1, 1, 0, 1, 0, 1]' : 0.089205}
{'[0, 4, 6, 0, 6, 4, 1, 0, 1, 0, 29, 17, 1, 1, 0, 1, 0, 1]' : 0.088192}
{'[0, 4, 6, 0, 6, 4, 1, 0, 1, 0, 29, 17, 1, 1, 0, 1, 0, 1]' : 0.0882139}
{'[0, 4, 6, 0, 6, 4, 1, 0, 1, 0, 29, 17, 1, 1, 0, 1, 0, 1]' : 0.0897441}
{'[0, 4, 6, 0, 6, 4, 1, 0, 1, 0, 29, 17, 1, 1, 0, 1, 0, 1]' : 0.0881231}
{'[0, 4, 6, 0, 6, 4, 1, 0, 1, 0, 29, 17, 1, 1, 0, 1, 0, 1]' : 0.088177}
{'[0, 4, 6, 0, 6, 4, 1, 0, 1, 0, 29, 17, 1, 1, 0, 1, 0, 1]' : 0.0881679}
{'[0, 4, 6, 0, 6, 4, 1, 0, 1, 0, 29, 17, 1, 1, 0, 1, 0, 1]' : 0.0881169}
{'[0, 4, 6, 0, 6, 4, 1, 0, 1, 0, 29, 17, 1, 1, 0, 1, 0, 1]' : 0.089263}
{'[0, 4, 6, 0, 6, 4, 1, 0, 1, 0, 29, 17, 1, 1, 0, 1, 0, 1]' : 0.0903301}
{'[0, 4, 6, 0, 6, 4, 1, 0, 1, 0, 29, 17, 1, 1, 0, 1, 0, 1]' : 0.090431}
{'[0, 4, 6, 0, 6, 4, 1, 0, 1, 0, 29, 17, 1, 1, 0, 1, 0, 1]' : 0.090317}
{'[0, 4, 6, 0, 6, 4, 1, 0, 1, 0, 29, 17, 1, 1, 0, 1, 0, 1]' : 0.090286}
{'[0, 4, 6, 0, 6, 4, 1, 0, 1, 0, 29, 17, 1, 1, 0, 1, 0, 1]' : 0.0903091}
{'[0, 4, 6, 0, 6, 4, 1, 0, 1, 0, 29, 17, 1, 1, 0, 1, 0, 1]' : 0.0892951}
{'[0, 4, 6, 0, 6, 4, 1, 0, 1, 0, 29, 17, 1, 1, 0, 1, 0, 1]' : 0.0881591}
{'[0, 4, 6, 0, 6, 4, 1, 0, 1, 0, 29, 17, 1, 1, 0, 1, 0, 1]' : 0.0881891}
{'[0, 4, 6, 0, 6, 4, 1, 0, 1, 0, 29, 17, 1, 1, 0, 1, 0, 1]' : 0.089071}
{'[0, 4, 6, 0, 6, 4, 1, 0, 1, 0, 29, 17, 1, 1, 0, 1, 0, 1]' : 0.0882392}
{'[0, 4, 6, 0, 6, 4, 1, 0, 1, 0, 29, 17, 1, 1, 0, 1, 0, 1]' : 0.088135}

out:
 ["{'[0, 4, 6, 0, 6, 4, 1, 0, 1, 0, 29, 17, 1, 1, 0, 1, 0, 1]' : 0.0905092}", "{'[0, 4, 6, 0, 6, 4, 1, 0, 1, 0, 29, 17, 1, 1, 0, 1, 0, 1]' : 0.0889671}", "{'[0, 4, 6, 0, 6, 4, 1, 0, 1, 0, 29, 17, 1, 1, 0, 1, 0, 1]' : 0.0857041}", "{'[0, 4, 6, 0, 6, 4, 1, 0, 1, 0, 29, 17, 1, 1, 0, 1, 0, 1]' : 0.0858259}", "{'[0, 4, 6, 0, 6, 4, 1, 0, 1, 0, 29, 17, 1, 1, 0, 1, 0, 1]' : 0.085799}", "{'[0, 4, 6, 0, 6, 4, 1, 0, 1, 0, 29, 17, 1, 1, 0, 1, 0, 1]' : 0.0856991}", "{'[0, 4, 6, 0, 6, 4, 1, 0, 1, 0, 29, 17, 1, 1, 0, 1, 0, 1]' : 0.086165}", "{'[0, 4, 6, 0, 6, 4, 1, 0, 1, 0, 29, 17, 1, 1, 0, 1, 0, 1]' : 0.08799}", "{'[0, 4, 6, 0, 6, 4, 1, 0, 1, 0, 29, 17, 1, 1, 0, 1, 0, 1]' : 0.0880761}", "{'[0, 4, 6, 0, 6, 4, 1, 0, 1, 0, 29, 17, 1, 1, 0, 1, 0, 1]' : 0.088228}", "{'[0, 4, 6, 0, 6, 4, 1, 0, 1, 0, 29, 17, 1, 1, 0, 1, 0, 1]' : 0.089205}", "{'[0, 4, 6, 0, 6, 4, 1, 0, 1, 0, 29, 17, 1, 1, 0, 1, 0, 1]' : 0.088192}", "{'[0, 4, 6, 0, 6, 4, 1, 0, 1, 0, 29, 17, 1, 1, 0, 1, 0, 1]' : 0.0882139}", "{'[0, 4, 6, 0, 6, 4, 1, 0, 1, 0, 29, 17, 1, 1, 0, 1, 0, 1]' : 0.0897441}", "{'[0, 4, 6, 0, 6, 4, 1, 0, 1, 0, 29, 17, 1, 1, 0, 1, 0, 1]' : 0.0881231}", "{'[0, 4, 6, 0, 6, 4, 1, 0, 1, 0, 29, 17, 1, 1, 0, 1, 0, 1]' : 0.088177}", "{'[0, 4, 6, 0, 6, 4, 1, 0, 1, 0, 29, 17, 1, 1, 0, 1, 0, 1]' : 0.0881679}", "{'[0, 4, 6, 0, 6, 4, 1, 0, 1, 0, 29, 17, 1, 1, 0, 1, 0, 1]' : 0.0881169}", "{'[0, 4, 6, 0, 6, 4, 1, 0, 1, 0, 29, 17, 1, 1, 0, 1, 0, 1]' : 0.089263}", "{'[0, 4, 6, 0, 6, 4, 1, 0, 1, 0, 29, 17, 1, 1, 0, 1, 0, 1]' : 0.0903301}", "{'[0, 4, 6, 0, 6, 4, 1, 0, 1, 0, 29, 17, 1, 1, 0, 1, 0, 1]' : 0.090431}", "{'[0, 4, 6, 0, 6, 4, 1, 0, 1, 0, 29, 17, 1, 1, 0, 1, 0, 1]' : 0.090317}", "{'[0, 4, 6, 0, 6, 4, 1, 0, 1, 0, 29, 17, 1, 1, 0, 1, 0, 1]' : 0.090286}", "{'[0, 4, 6, 0, 6, 4, 1, 0, 1, 0, 29, 17, 1, 1, 0, 1, 0, 1]' : 0.0903091}", "{'[0, 4, 6, 0, 6, 4, 1, 0, 1, 0, 29, 17, 1, 1, 0, 1, 0, 1]' : 0.0892951}", "{'[0, 4, 6, 0, 6, 4, 1, 0, 1, 0, 29, 17, 1, 1, 0, 1, 0, 1]' : 0.0881591}", "{'[0, 4, 6, 0, 6, 4, 1, 0, 1, 0, 29, 17, 1, 1, 0, 1, 0, 1]' : 0.0881891}", "{'[0, 4, 6, 0, 6, 4, 1, 0, 1, 0, 29, 17, 1, 1, 0, 1, 0, 1]' : 0.089071}", "{'[0, 4, 6, 0, 6, 4, 1, 0, 1, 0, 29, 17, 1, 1, 0, 1, 0, 1]' : 0.0882392}", "{'[0, 4, 6, 0, 6, 4, 1, 0, 1, 0, 29, 17, 1, 1, 0, 1, 0, 1]' : 0.088135}"]
returning from 'run': {'[0, 4, 6, 0, 6, 4, 1, 0, 1, 0, 29, 17, 1, 1, 0, 1, 0, 1]': ([0.0905092, 0.0889671, 0.0857041, 0.0858259, 0.085799, 0.0856991, 0.086165, 0.08799, 0.0880761, 0.088228, 0.089205, 0.088192, 0.0882139, 0.0897441, 0.0881231, 0.088177, 0.0881679, 0.0881169, 0.089263, 0.0903301, 0.090431, 0.090317, 0.090286, 0.0903091, 0.0892951, 0.0881591, 0.0881891, 0.089071, 0.0882392, 0.088135], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 4, 6, 0, 6, 4, 1, 0, 1, 0, 29, 17, 1, 1, 0, 1, 0, 1]': ([0.0905092, 0.0889671, 0.0857041, 0.0858259, 0.085799, 0.0856991, 0.086165, 0.08799, 0.0880761, 0.088228, 0.089205, 0.088192, 0.0882139, 0.0897441, 0.0881231, 0.088177, 0.0881679, 0.0881169, 0.089263, 0.0903301, 0.090431, 0.090317, 0.090286, 0.0903091, 0.0892951, 0.0881591, 0.0881891, 0.089071, 0.0882392, 0.088135], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	5
        Additions: 		658
        Multiplications: 	288
        Divisions: 		0
        Logical: 		0
        Reads: 			1342
        Writes: 		243
        Comparisons:		18
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest65.exe __orio_perftest65.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest65.exe  
Program Test Output: 
{'[2, 4, 0, 0, 3, 2, 1, 0, 0, 0, 29, 6, 1, 1, 0, 1, 0, 0]' : 0.116308}
{'[2, 4, 0, 0, 3, 2, 1, 0, 0, 0, 29, 6, 1, 1, 0, 1, 0, 0]' : 0.120331}
{'[2, 4, 0, 0, 3, 2, 1, 0, 0, 0, 29, 6, 1, 1, 0, 1, 0, 0]' : 0.123436}
{'[2, 4, 0, 0, 3, 2, 1, 0, 0, 0, 29, 6, 1, 1, 0, 1, 0, 0]' : 0.107594}
{'[2, 4, 0, 0, 3, 2, 1, 0, 0, 0, 29, 6, 1, 1, 0, 1, 0, 0]' : 0.104379}
{'[2, 4, 0, 0, 3, 2, 1, 0, 0, 0, 29, 6, 1, 1, 0, 1, 0, 0]' : 0.104357}
{'[2, 4, 0, 0, 3, 2, 1, 0, 0, 0, 29, 6, 1, 1, 0, 1, 0, 0]' : 0.104329}
{'[2, 4, 0, 0, 3, 2, 1, 0, 0, 0, 29, 6, 1, 1, 0, 1, 0, 0]' : 0.104133}
{'[2, 4, 0, 0, 3, 2, 1, 0, 0, 0, 29, 6, 1, 1, 0, 1, 0, 0]' : 0.104011}
{'[2, 4, 0, 0, 3, 2, 1, 0, 0, 0, 29, 6, 1, 1, 0, 1, 0, 0]' : 0.104159}
{'[2, 4, 0, 0, 3, 2, 1, 0, 0, 0, 29, 6, 1, 1, 0, 1, 0, 0]' : 0.104017}
{'[2, 4, 0, 0, 3, 2, 1, 0, 0, 0, 29, 6, 1, 1, 0, 1, 0, 0]' : 0.104482}
{'[2, 4, 0, 0, 3, 2, 1, 0, 0, 0, 29, 6, 1, 1, 0, 1, 0, 0]' : 0.104097}
{'[2, 4, 0, 0, 3, 2, 1, 0, 0, 0, 29, 6, 1, 1, 0, 1, 0, 0]' : 0.104048}
{'[2, 4, 0, 0, 3, 2, 1, 0, 0, 0, 29, 6, 1, 1, 0, 1, 0, 0]' : 0.104278}
{'[2, 4, 0, 0, 3, 2, 1, 0, 0, 0, 29, 6, 1, 1, 0, 1, 0, 0]' : 0.104115}
{'[2, 4, 0, 0, 3, 2, 1, 0, 0, 0, 29, 6, 1, 1, 0, 1, 0, 0]' : 0.104018}
{'[2, 4, 0, 0, 3, 2, 1, 0, 0, 0, 29, 6, 1, 1, 0, 1, 0, 0]' : 0.104056}
{'[2, 4, 0, 0, 3, 2, 1, 0, 0, 0, 29, 6, 1, 1, 0, 1, 0, 0]' : 0.104062}
{'[2, 4, 0, 0, 3, 2, 1, 0, 0, 0, 29, 6, 1, 1, 0, 1, 0, 0]' : 0.104336}
{'[2, 4, 0, 0, 3, 2, 1, 0, 0, 0, 29, 6, 1, 1, 0, 1, 0, 0]' : 0.104037}
{'[2, 4, 0, 0, 3, 2, 1, 0, 0, 0, 29, 6, 1, 1, 0, 1, 0, 0]' : 0.104062}
{'[2, 4, 0, 0, 3, 2, 1, 0, 0, 0, 29, 6, 1, 1, 0, 1, 0, 0]' : 0.104031}
{'[2, 4, 0, 0, 3, 2, 1, 0, 0, 0, 29, 6, 1, 1, 0, 1, 0, 0]' : 0.103991}
{'[2, 4, 0, 0, 3, 2, 1, 0, 0, 0, 29, 6, 1, 1, 0, 1, 0, 0]' : 0.104126}
{'[2, 4, 0, 0, 3, 2, 1, 0, 0, 0, 29, 6, 1, 1, 0, 1, 0, 0]' : 0.104051}
{'[2, 4, 0, 0, 3, 2, 1, 0, 0, 0, 29, 6, 1, 1, 0, 1, 0, 0]' : 0.104023}
{'[2, 4, 0, 0, 3, 2, 1, 0, 0, 0, 29, 6, 1, 1, 0, 1, 0, 0]' : 0.104046}
{'[2, 4, 0, 0, 3, 2, 1, 0, 0, 0, 29, 6, 1, 1, 0, 1, 0, 0]' : 0.104087}
{'[2, 4, 0, 0, 3, 2, 1, 0, 0, 0, 29, 6, 1, 1, 0, 1, 0, 0]' : 0.104092}

out:
 ["{'[2, 4, 0, 0, 3, 2, 1, 0, 0, 0, 29, 6, 1, 1, 0, 1, 0, 0]' : 0.116308}", "{'[2, 4, 0, 0, 3, 2, 1, 0, 0, 0, 29, 6, 1, 1, 0, 1, 0, 0]' : 0.120331}", "{'[2, 4, 0, 0, 3, 2, 1, 0, 0, 0, 29, 6, 1, 1, 0, 1, 0, 0]' : 0.123436}", "{'[2, 4, 0, 0, 3, 2, 1, 0, 0, 0, 29, 6, 1, 1, 0, 1, 0, 0]' : 0.107594}", "{'[2, 4, 0, 0, 3, 2, 1, 0, 0, 0, 29, 6, 1, 1, 0, 1, 0, 0]' : 0.104379}", "{'[2, 4, 0, 0, 3, 2, 1, 0, 0, 0, 29, 6, 1, 1, 0, 1, 0, 0]' : 0.104357}", "{'[2, 4, 0, 0, 3, 2, 1, 0, 0, 0, 29, 6, 1, 1, 0, 1, 0, 0]' : 0.104329}", "{'[2, 4, 0, 0, 3, 2, 1, 0, 0, 0, 29, 6, 1, 1, 0, 1, 0, 0]' : 0.104133}", "{'[2, 4, 0, 0, 3, 2, 1, 0, 0, 0, 29, 6, 1, 1, 0, 1, 0, 0]' : 0.104011}", "{'[2, 4, 0, 0, 3, 2, 1, 0, 0, 0, 29, 6, 1, 1, 0, 1, 0, 0]' : 0.104159}", "{'[2, 4, 0, 0, 3, 2, 1, 0, 0, 0, 29, 6, 1, 1, 0, 1, 0, 0]' : 0.104017}", "{'[2, 4, 0, 0, 3, 2, 1, 0, 0, 0, 29, 6, 1, 1, 0, 1, 0, 0]' : 0.104482}", "{'[2, 4, 0, 0, 3, 2, 1, 0, 0, 0, 29, 6, 1, 1, 0, 1, 0, 0]' : 0.104097}", "{'[2, 4, 0, 0, 3, 2, 1, 0, 0, 0, 29, 6, 1, 1, 0, 1, 0, 0]' : 0.104048}", "{'[2, 4, 0, 0, 3, 2, 1, 0, 0, 0, 29, 6, 1, 1, 0, 1, 0, 0]' : 0.104278}", "{'[2, 4, 0, 0, 3, 2, 1, 0, 0, 0, 29, 6, 1, 1, 0, 1, 0, 0]' : 0.104115}", "{'[2, 4, 0, 0, 3, 2, 1, 0, 0, 0, 29, 6, 1, 1, 0, 1, 0, 0]' : 0.104018}", "{'[2, 4, 0, 0, 3, 2, 1, 0, 0, 0, 29, 6, 1, 1, 0, 1, 0, 0]' : 0.104056}", "{'[2, 4, 0, 0, 3, 2, 1, 0, 0, 0, 29, 6, 1, 1, 0, 1, 0, 0]' : 0.104062}", "{'[2, 4, 0, 0, 3, 2, 1, 0, 0, 0, 29, 6, 1, 1, 0, 1, 0, 0]' : 0.104336}", "{'[2, 4, 0, 0, 3, 2, 1, 0, 0, 0, 29, 6, 1, 1, 0, 1, 0, 0]' : 0.104037}", "{'[2, 4, 0, 0, 3, 2, 1, 0, 0, 0, 29, 6, 1, 1, 0, 1, 0, 0]' : 0.104062}", "{'[2, 4, 0, 0, 3, 2, 1, 0, 0, 0, 29, 6, 1, 1, 0, 1, 0, 0]' : 0.104031}", "{'[2, 4, 0, 0, 3, 2, 1, 0, 0, 0, 29, 6, 1, 1, 0, 1, 0, 0]' : 0.103991}", "{'[2, 4, 0, 0, 3, 2, 1, 0, 0, 0, 29, 6, 1, 1, 0, 1, 0, 0]' : 0.104126}", "{'[2, 4, 0, 0, 3, 2, 1, 0, 0, 0, 29, 6, 1, 1, 0, 1, 0, 0]' : 0.104051}", "{'[2, 4, 0, 0, 3, 2, 1, 0, 0, 0, 29, 6, 1, 1, 0, 1, 0, 0]' : 0.104023}", "{'[2, 4, 0, 0, 3, 2, 1, 0, 0, 0, 29, 6, 1, 1, 0, 1, 0, 0]' : 0.104046}", "{'[2, 4, 0, 0, 3, 2, 1, 0, 0, 0, 29, 6, 1, 1, 0, 1, 0, 0]' : 0.104087}", "{'[2, 4, 0, 0, 3, 2, 1, 0, 0, 0, 29, 6, 1, 1, 0, 1, 0, 0]' : 0.104092}"]
returning from 'run': {'[2, 4, 0, 0, 3, 2, 1, 0, 0, 0, 29, 6, 1, 1, 0, 1, 0, 0]': ([0.116308, 0.120331, 0.123436, 0.107594, 0.104379, 0.104357, 0.104329, 0.104133, 0.104011, 0.104159, 0.104017, 0.104482, 0.104097, 0.104048, 0.104278, 0.104115, 0.104018, 0.104056, 0.104062, 0.104336, 0.104037, 0.104062, 0.104031, 0.103991, 0.104126, 0.104051, 0.104023, 0.104046, 0.104087, 0.104092], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 4, 0, 0, 3, 2, 1, 0, 0, 0, 29, 6, 1, 1, 0, 1, 0, 0]': ([0.116308, 0.120331, 0.123436, 0.107594, 0.104379, 0.104357, 0.104329, 0.104133, 0.104011, 0.104159, 0.104017, 0.104482, 0.104097, 0.104048, 0.104278, 0.104115, 0.104018, 0.104056, 0.104062, 0.104336, 0.104037, 0.104062, 0.104031, 0.103991, 0.104126, 0.104051, 0.104023, 0.104046, 0.104087, 0.104092], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	6
        Additions: 		1547
        Multiplications: 	702
        Divisions: 		0
        Logical: 		0
        Reads: 			3119
        Writes: 		565
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest66.exe __orio_perftest66.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest66.exe  
Program Test Output: 
{'[3, 4, 6, 6, 6, 0, 1, 0, 7, 0, 29, 29, 1, 1, 0, 1, 1, 1]' : 0.103341}
{'[3, 4, 6, 6, 6, 0, 1, 0, 7, 0, 29, 29, 1, 1, 0, 1, 1, 1]' : 0.103408}
{'[3, 4, 6, 6, 6, 0, 1, 0, 7, 0, 29, 29, 1, 1, 0, 1, 1, 1]' : 0.103622}
{'[3, 4, 6, 6, 6, 0, 1, 0, 7, 0, 29, 29, 1, 1, 0, 1, 1, 1]' : 0.10369}
{'[3, 4, 6, 6, 6, 0, 1, 0, 7, 0, 29, 29, 1, 1, 0, 1, 1, 1]' : 0.103693}
{'[3, 4, 6, 6, 6, 0, 1, 0, 7, 0, 29, 29, 1, 1, 0, 1, 1, 1]' : 0.0984192}
{'[3, 4, 6, 6, 6, 0, 1, 0, 7, 0, 29, 29, 1, 1, 0, 1, 1, 1]' : 0.0909169}
{'[3, 4, 6, 6, 6, 0, 1, 0, 7, 0, 29, 29, 1, 1, 0, 1, 1, 1]' : 0.090945}
{'[3, 4, 6, 6, 6, 0, 1, 0, 7, 0, 29, 29, 1, 1, 0, 1, 1, 1]' : 0.090574}
{'[3, 4, 6, 6, 6, 0, 1, 0, 7, 0, 29, 29, 1, 1, 0, 1, 1, 1]' : 0.0905452}
{'[3, 4, 6, 6, 6, 0, 1, 0, 7, 0, 29, 29, 1, 1, 0, 1, 1, 1]' : 0.0905709}
{'[3, 4, 6, 6, 6, 0, 1, 0, 7, 0, 29, 29, 1, 1, 0, 1, 1, 1]' : 0.090589}
{'[3, 4, 6, 6, 6, 0, 1, 0, 7, 0, 29, 29, 1, 1, 0, 1, 1, 1]' : 0.0903931}
{'[3, 4, 6, 6, 6, 0, 1, 0, 7, 0, 29, 29, 1, 1, 0, 1, 1, 1]' : 0.0910652}
{'[3, 4, 6, 6, 6, 0, 1, 0, 7, 0, 29, 29, 1, 1, 0, 1, 1, 1]' : 0.0910659}
{'[3, 4, 6, 6, 6, 0, 1, 0, 7, 0, 29, 29, 1, 1, 0, 1, 1, 1]' : 0.0910149}
{'[3, 4, 6, 6, 6, 0, 1, 0, 7, 0, 29, 29, 1, 1, 0, 1, 1, 1]' : 0.0909421}
{'[3, 4, 6, 6, 6, 0, 1, 0, 7, 0, 29, 29, 1, 1, 0, 1, 1, 1]' : 0.090863}
{'[3, 4, 6, 6, 6, 0, 1, 0, 7, 0, 29, 29, 1, 1, 0, 1, 1, 1]' : 0.0909939}
{'[3, 4, 6, 6, 6, 0, 1, 0, 7, 0, 29, 29, 1, 1, 0, 1, 1, 1]' : 0.090575}
{'[3, 4, 6, 6, 6, 0, 1, 0, 7, 0, 29, 29, 1, 1, 0, 1, 1, 1]' : 0.090554}
{'[3, 4, 6, 6, 6, 0, 1, 0, 7, 0, 29, 29, 1, 1, 0, 1, 1, 1]' : 0.090487}
{'[3, 4, 6, 6, 6, 0, 1, 0, 7, 0, 29, 29, 1, 1, 0, 1, 1, 1]' : 0.0882699}
{'[3, 4, 6, 6, 6, 0, 1, 0, 7, 0, 29, 29, 1, 1, 0, 1, 1, 1]' : 0.0881052}
{'[3, 4, 6, 6, 6, 0, 1, 0, 7, 0, 29, 29, 1, 1, 0, 1, 1, 1]' : 0.091387}
{'[3, 4, 6, 6, 6, 0, 1, 0, 7, 0, 29, 29, 1, 1, 0, 1, 1, 1]' : 0.091964}
{'[3, 4, 6, 6, 6, 0, 1, 0, 7, 0, 29, 29, 1, 1, 0, 1, 1, 1]' : 0.0907559}
{'[3, 4, 6, 6, 6, 0, 1, 0, 7, 0, 29, 29, 1, 1, 0, 1, 1, 1]' : 0.0908241}
{'[3, 4, 6, 6, 6, 0, 1, 0, 7, 0, 29, 29, 1, 1, 0, 1, 1, 1]' : 0.090461}
{'[3, 4, 6, 6, 6, 0, 1, 0, 7, 0, 29, 29, 1, 1, 0, 1, 1, 1]' : 0.0907211}

out:
 ["{'[3, 4, 6, 6, 6, 0, 1, 0, 7, 0, 29, 29, 1, 1, 0, 1, 1, 1]' : 0.103341}", "{'[3, 4, 6, 6, 6, 0, 1, 0, 7, 0, 29, 29, 1, 1, 0, 1, 1, 1]' : 0.103408}", "{'[3, 4, 6, 6, 6, 0, 1, 0, 7, 0, 29, 29, 1, 1, 0, 1, 1, 1]' : 0.103622}", "{'[3, 4, 6, 6, 6, 0, 1, 0, 7, 0, 29, 29, 1, 1, 0, 1, 1, 1]' : 0.10369}", "{'[3, 4, 6, 6, 6, 0, 1, 0, 7, 0, 29, 29, 1, 1, 0, 1, 1, 1]' : 0.103693}", "{'[3, 4, 6, 6, 6, 0, 1, 0, 7, 0, 29, 29, 1, 1, 0, 1, 1, 1]' : 0.0984192}", "{'[3, 4, 6, 6, 6, 0, 1, 0, 7, 0, 29, 29, 1, 1, 0, 1, 1, 1]' : 0.0909169}", "{'[3, 4, 6, 6, 6, 0, 1, 0, 7, 0, 29, 29, 1, 1, 0, 1, 1, 1]' : 0.090945}", "{'[3, 4, 6, 6, 6, 0, 1, 0, 7, 0, 29, 29, 1, 1, 0, 1, 1, 1]' : 0.090574}", "{'[3, 4, 6, 6, 6, 0, 1, 0, 7, 0, 29, 29, 1, 1, 0, 1, 1, 1]' : 0.0905452}", "{'[3, 4, 6, 6, 6, 0, 1, 0, 7, 0, 29, 29, 1, 1, 0, 1, 1, 1]' : 0.0905709}", "{'[3, 4, 6, 6, 6, 0, 1, 0, 7, 0, 29, 29, 1, 1, 0, 1, 1, 1]' : 0.090589}", "{'[3, 4, 6, 6, 6, 0, 1, 0, 7, 0, 29, 29, 1, 1, 0, 1, 1, 1]' : 0.0903931}", "{'[3, 4, 6, 6, 6, 0, 1, 0, 7, 0, 29, 29, 1, 1, 0, 1, 1, 1]' : 0.0910652}", "{'[3, 4, 6, 6, 6, 0, 1, 0, 7, 0, 29, 29, 1, 1, 0, 1, 1, 1]' : 0.0910659}", "{'[3, 4, 6, 6, 6, 0, 1, 0, 7, 0, 29, 29, 1, 1, 0, 1, 1, 1]' : 0.0910149}", "{'[3, 4, 6, 6, 6, 0, 1, 0, 7, 0, 29, 29, 1, 1, 0, 1, 1, 1]' : 0.0909421}", "{'[3, 4, 6, 6, 6, 0, 1, 0, 7, 0, 29, 29, 1, 1, 0, 1, 1, 1]' : 0.090863}", "{'[3, 4, 6, 6, 6, 0, 1, 0, 7, 0, 29, 29, 1, 1, 0, 1, 1, 1]' : 0.0909939}", "{'[3, 4, 6, 6, 6, 0, 1, 0, 7, 0, 29, 29, 1, 1, 0, 1, 1, 1]' : 0.090575}", "{'[3, 4, 6, 6, 6, 0, 1, 0, 7, 0, 29, 29, 1, 1, 0, 1, 1, 1]' : 0.090554}", "{'[3, 4, 6, 6, 6, 0, 1, 0, 7, 0, 29, 29, 1, 1, 0, 1, 1, 1]' : 0.090487}", "{'[3, 4, 6, 6, 6, 0, 1, 0, 7, 0, 29, 29, 1, 1, 0, 1, 1, 1]' : 0.0882699}", "{'[3, 4, 6, 6, 6, 0, 1, 0, 7, 0, 29, 29, 1, 1, 0, 1, 1, 1]' : 0.0881052}", "{'[3, 4, 6, 6, 6, 0, 1, 0, 7, 0, 29, 29, 1, 1, 0, 1, 1, 1]' : 0.091387}", "{'[3, 4, 6, 6, 6, 0, 1, 0, 7, 0, 29, 29, 1, 1, 0, 1, 1, 1]' : 0.091964}", "{'[3, 4, 6, 6, 6, 0, 1, 0, 7, 0, 29, 29, 1, 1, 0, 1, 1, 1]' : 0.0907559}", "{'[3, 4, 6, 6, 6, 0, 1, 0, 7, 0, 29, 29, 1, 1, 0, 1, 1, 1]' : 0.0908241}", "{'[3, 4, 6, 6, 6, 0, 1, 0, 7, 0, 29, 29, 1, 1, 0, 1, 1, 1]' : 0.090461}", "{'[3, 4, 6, 6, 6, 0, 1, 0, 7, 0, 29, 29, 1, 1, 0, 1, 1, 1]' : 0.0907211}"]
returning from 'run': {'[3, 4, 6, 6, 6, 0, 1, 0, 7, 0, 29, 29, 1, 1, 0, 1, 1, 1]': ([0.103341, 0.103408, 0.103622, 0.10369, 0.103693, 0.0984192, 0.0909169, 0.090945, 0.090574, 0.0905452, 0.0905709, 0.090589, 0.0903931, 0.0910652, 0.0910659, 0.0910149, 0.0909421, 0.090863, 0.0909939, 0.090575, 0.090554, 0.090487, 0.0882699, 0.0881052, 0.091387, 0.091964, 0.0907559, 0.0908241, 0.090461, 0.0907211], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 4, 6, 6, 6, 0, 1, 0, 7, 0, 29, 29, 1, 1, 0, 1, 1, 1]': ([0.103341, 0.103408, 0.103622, 0.10369, 0.103693, 0.0984192, 0.0909169, 0.090945, 0.090574, 0.0905452, 0.0905709, 0.090589, 0.0903931, 0.0910652, 0.0910659, 0.0910149, 0.0909421, 0.090863, 0.0909939, 0.090575, 0.090554, 0.090487, 0.0882699, 0.0881052, 0.091387, 0.091964, 0.0907559, 0.0908241, 0.090461, 0.0907211], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = kkk
Code stats:
        Number of loops: 	67
        Max loop nest depth: 	5
        Additions: 		4386
        Multiplications: 	1536
        Divisions: 		0
        Logical: 		0
        Reads: 			7453
        Writes: 		1107
        Comparisons:		67
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest67.exe __orio_perftest67.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest67.exe  
Program Test Output: 
{'[6, 4, 4, 6, 0, 2, 1, 0, 27, 14, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.105571}
{'[6, 4, 4, 6, 0, 2, 1, 0, 27, 14, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.103624}
{'[6, 4, 4, 6, 0, 2, 1, 0, 27, 14, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.103411}
{'[6, 4, 4, 6, 0, 2, 1, 0, 27, 14, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.103544}
{'[6, 4, 4, 6, 0, 2, 1, 0, 27, 14, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.103986}
{'[6, 4, 4, 6, 0, 2, 1, 0, 27, 14, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.100344}
{'[6, 4, 4, 6, 0, 2, 1, 0, 27, 14, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.094929}
{'[6, 4, 4, 6, 0, 2, 1, 0, 27, 14, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0949609}
{'[6, 4, 4, 6, 0, 2, 1, 0, 27, 14, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0948758}
{'[6, 4, 4, 6, 0, 2, 1, 0, 27, 14, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0951009}
{'[6, 4, 4, 6, 0, 2, 1, 0, 27, 14, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.094867}
{'[6, 4, 4, 6, 0, 2, 1, 0, 27, 14, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0949061}
{'[6, 4, 4, 6, 0, 2, 1, 0, 27, 14, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0949171}
{'[6, 4, 4, 6, 0, 2, 1, 0, 27, 14, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.094877}
{'[6, 4, 4, 6, 0, 2, 1, 0, 27, 14, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.094965}
{'[6, 4, 4, 6, 0, 2, 1, 0, 27, 14, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0939579}
{'[6, 4, 4, 6, 0, 2, 1, 0, 27, 14, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0926418}
{'[6, 4, 4, 6, 0, 2, 1, 0, 27, 14, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0924339}
{'[6, 4, 4, 6, 0, 2, 1, 0, 27, 14, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0924289}
{'[6, 4, 4, 6, 0, 2, 1, 0, 27, 14, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.092478}
{'[6, 4, 4, 6, 0, 2, 1, 0, 27, 14, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0928051}
{'[6, 4, 4, 6, 0, 2, 1, 0, 27, 14, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0924511}
{'[6, 4, 4, 6, 0, 2, 1, 0, 27, 14, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.092376}
{'[6, 4, 4, 6, 0, 2, 1, 0, 27, 14, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0924492}
{'[6, 4, 4, 6, 0, 2, 1, 0, 27, 14, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.09238}
{'[6, 4, 4, 6, 0, 2, 1, 0, 27, 14, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.092406}
{'[6, 4, 4, 6, 0, 2, 1, 0, 27, 14, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0936139}
{'[6, 4, 4, 6, 0, 2, 1, 0, 27, 14, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.092804}
{'[6, 4, 4, 6, 0, 2, 1, 0, 27, 14, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0927851}
{'[6, 4, 4, 6, 0, 2, 1, 0, 27, 14, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0918021}

out:
 ["{'[6, 4, 4, 6, 0, 2, 1, 0, 27, 14, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.105571}", "{'[6, 4, 4, 6, 0, 2, 1, 0, 27, 14, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.103624}", "{'[6, 4, 4, 6, 0, 2, 1, 0, 27, 14, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.103411}", "{'[6, 4, 4, 6, 0, 2, 1, 0, 27, 14, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.103544}", "{'[6, 4, 4, 6, 0, 2, 1, 0, 27, 14, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.103986}", "{'[6, 4, 4, 6, 0, 2, 1, 0, 27, 14, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.100344}", "{'[6, 4, 4, 6, 0, 2, 1, 0, 27, 14, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.094929}", "{'[6, 4, 4, 6, 0, 2, 1, 0, 27, 14, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0949609}", "{'[6, 4, 4, 6, 0, 2, 1, 0, 27, 14, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0948758}", "{'[6, 4, 4, 6, 0, 2, 1, 0, 27, 14, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0951009}", "{'[6, 4, 4, 6, 0, 2, 1, 0, 27, 14, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.094867}", "{'[6, 4, 4, 6, 0, 2, 1, 0, 27, 14, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0949061}", "{'[6, 4, 4, 6, 0, 2, 1, 0, 27, 14, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0949171}", "{'[6, 4, 4, 6, 0, 2, 1, 0, 27, 14, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.094877}", "{'[6, 4, 4, 6, 0, 2, 1, 0, 27, 14, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.094965}", "{'[6, 4, 4, 6, 0, 2, 1, 0, 27, 14, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0939579}", "{'[6, 4, 4, 6, 0, 2, 1, 0, 27, 14, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0926418}", "{'[6, 4, 4, 6, 0, 2, 1, 0, 27, 14, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0924339}", "{'[6, 4, 4, 6, 0, 2, 1, 0, 27, 14, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0924289}", "{'[6, 4, 4, 6, 0, 2, 1, 0, 27, 14, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.092478}", "{'[6, 4, 4, 6, 0, 2, 1, 0, 27, 14, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0928051}", "{'[6, 4, 4, 6, 0, 2, 1, 0, 27, 14, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0924511}", "{'[6, 4, 4, 6, 0, 2, 1, 0, 27, 14, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.092376}", "{'[6, 4, 4, 6, 0, 2, 1, 0, 27, 14, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0924492}", "{'[6, 4, 4, 6, 0, 2, 1, 0, 27, 14, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.09238}", "{'[6, 4, 4, 6, 0, 2, 1, 0, 27, 14, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.092406}", "{'[6, 4, 4, 6, 0, 2, 1, 0, 27, 14, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0936139}", "{'[6, 4, 4, 6, 0, 2, 1, 0, 27, 14, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.092804}", "{'[6, 4, 4, 6, 0, 2, 1, 0, 27, 14, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0927851}", "{'[6, 4, 4, 6, 0, 2, 1, 0, 27, 14, 29, 0, 1, 0, 0, 1, 1, 1]' : 0.0918021}"]
returning from 'run': {'[6, 4, 4, 6, 0, 2, 1, 0, 27, 14, 29, 0, 1, 0, 0, 1, 1, 1]': ([0.105571, 0.103624, 0.103411, 0.103544, 0.103986, 0.100344, 0.094929, 0.0949609, 0.0948758, 0.0951009, 0.094867, 0.0949061, 0.0949171, 0.094877, 0.094965, 0.0939579, 0.0926418, 0.0924339, 0.0924289, 0.092478, 0.0928051, 0.0924511, 0.092376, 0.0924492, 0.09238, 0.092406, 0.0936139, 0.092804, 0.0927851, 0.0918021], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 4, 4, 6, 0, 2, 1, 0, 27, 14, 29, 0, 1, 0, 0, 1, 1, 1]': ([0.105571, 0.103624, 0.103411, 0.103544, 0.103986, 0.100344, 0.094929, 0.0949609, 0.0948758, 0.0951009, 0.094867, 0.0949061, 0.0949171, 0.094877, 0.094965, 0.0939579, 0.0926418, 0.0924339, 0.0924289, 0.092478, 0.0928051, 0.0924511, 0.092376, 0.0924492, 0.09238, 0.092406, 0.0936139, 0.092804, 0.0927851, 0.0918021], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	78
        Max loop nest depth: 	5
        Additions: 		5206
        Multiplications: 	1792
        Divisions: 		0
        Logical: 		0
        Reads: 			8614
        Writes: 		1211
        Comparisons:		78
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest68.exe __orio_perftest68.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest68.exe  
Program Test Output: 
{'[0, 4, 0, 6, 6, 0, 1, 0, 22, 18, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.103754}
{'[0, 4, 0, 6, 6, 0, 1, 0, 22, 18, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.103291}
{'[0, 4, 0, 6, 6, 0, 1, 0, 22, 18, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.103069}
{'[0, 4, 0, 6, 6, 0, 1, 0, 22, 18, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.103147}
{'[0, 4, 0, 6, 6, 0, 1, 0, 22, 18, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.100818}
{'[0, 4, 0, 6, 6, 0, 1, 0, 22, 18, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.0933669}
{'[0, 4, 0, 6, 6, 0, 1, 0, 22, 18, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.0943339}
{'[0, 4, 0, 6, 6, 0, 1, 0, 22, 18, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.0943618}
{'[0, 4, 0, 6, 6, 0, 1, 0, 22, 18, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.0943749}
{'[0, 4, 0, 6, 6, 0, 1, 0, 22, 18, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.0928149}
{'[0, 4, 0, 6, 6, 0, 1, 0, 22, 18, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.092294}
{'[0, 4, 0, 6, 6, 0, 1, 0, 22, 18, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.0935149}
{'[0, 4, 0, 6, 6, 0, 1, 0, 22, 18, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.0920119}
{'[0, 4, 0, 6, 6, 0, 1, 0, 22, 18, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.0920701}
{'[0, 4, 0, 6, 6, 0, 1, 0, 22, 18, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.092262}
{'[0, 4, 0, 6, 6, 0, 1, 0, 22, 18, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.092627}
{'[0, 4, 0, 6, 6, 0, 1, 0, 22, 18, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.0940161}
{'[0, 4, 0, 6, 6, 0, 1, 0, 22, 18, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.0933499}
{'[0, 4, 0, 6, 6, 0, 1, 0, 22, 18, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.092978}
{'[0, 4, 0, 6, 6, 0, 1, 0, 22, 18, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.0927029}
{'[0, 4, 0, 6, 6, 0, 1, 0, 22, 18, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.0927529}
{'[0, 4, 0, 6, 6, 0, 1, 0, 22, 18, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.093452}
{'[0, 4, 0, 6, 6, 0, 1, 0, 22, 18, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.093581}
{'[0, 4, 0, 6, 6, 0, 1, 0, 22, 18, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.092896}
{'[0, 4, 0, 6, 6, 0, 1, 0, 22, 18, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.0927529}
{'[0, 4, 0, 6, 6, 0, 1, 0, 22, 18, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.0925949}
{'[0, 4, 0, 6, 6, 0, 1, 0, 22, 18, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.0926042}
{'[0, 4, 0, 6, 6, 0, 1, 0, 22, 18, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.0947402}
{'[0, 4, 0, 6, 6, 0, 1, 0, 22, 18, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.095015}
{'[0, 4, 0, 6, 6, 0, 1, 0, 22, 18, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.095124}

out:
 ["{'[0, 4, 0, 6, 6, 0, 1, 0, 22, 18, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.103754}", "{'[0, 4, 0, 6, 6, 0, 1, 0, 22, 18, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.103291}", "{'[0, 4, 0, 6, 6, 0, 1, 0, 22, 18, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.103069}", "{'[0, 4, 0, 6, 6, 0, 1, 0, 22, 18, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.103147}", "{'[0, 4, 0, 6, 6, 0, 1, 0, 22, 18, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.100818}", "{'[0, 4, 0, 6, 6, 0, 1, 0, 22, 18, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.0933669}", "{'[0, 4, 0, 6, 6, 0, 1, 0, 22, 18, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.0943339}", "{'[0, 4, 0, 6, 6, 0, 1, 0, 22, 18, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.0943618}", "{'[0, 4, 0, 6, 6, 0, 1, 0, 22, 18, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.0943749}", "{'[0, 4, 0, 6, 6, 0, 1, 0, 22, 18, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.0928149}", "{'[0, 4, 0, 6, 6, 0, 1, 0, 22, 18, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.092294}", "{'[0, 4, 0, 6, 6, 0, 1, 0, 22, 18, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.0935149}", "{'[0, 4, 0, 6, 6, 0, 1, 0, 22, 18, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.0920119}", "{'[0, 4, 0, 6, 6, 0, 1, 0, 22, 18, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.0920701}", "{'[0, 4, 0, 6, 6, 0, 1, 0, 22, 18, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.092262}", "{'[0, 4, 0, 6, 6, 0, 1, 0, 22, 18, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.092627}", "{'[0, 4, 0, 6, 6, 0, 1, 0, 22, 18, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.0940161}", "{'[0, 4, 0, 6, 6, 0, 1, 0, 22, 18, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.0933499}", "{'[0, 4, 0, 6, 6, 0, 1, 0, 22, 18, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.092978}", "{'[0, 4, 0, 6, 6, 0, 1, 0, 22, 18, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.0927029}", "{'[0, 4, 0, 6, 6, 0, 1, 0, 22, 18, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.0927529}", "{'[0, 4, 0, 6, 6, 0, 1, 0, 22, 18, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.093452}", "{'[0, 4, 0, 6, 6, 0, 1, 0, 22, 18, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.093581}", "{'[0, 4, 0, 6, 6, 0, 1, 0, 22, 18, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.092896}", "{'[0, 4, 0, 6, 6, 0, 1, 0, 22, 18, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.0927529}", "{'[0, 4, 0, 6, 6, 0, 1, 0, 22, 18, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.0925949}", "{'[0, 4, 0, 6, 6, 0, 1, 0, 22, 18, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.0926042}", "{'[0, 4, 0, 6, 6, 0, 1, 0, 22, 18, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.0947402}", "{'[0, 4, 0, 6, 6, 0, 1, 0, 22, 18, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.095015}", "{'[0, 4, 0, 6, 6, 0, 1, 0, 22, 18, 29, 0, 1, 0, 0, 1, 0, 0]' : 0.095124}"]
returning from 'run': {'[0, 4, 0, 6, 6, 0, 1, 0, 22, 18, 29, 0, 1, 0, 0, 1, 0, 0]': ([0.103754, 0.103291, 0.103069, 0.103147, 0.100818, 0.0933669, 0.0943339, 0.0943618, 0.0943749, 0.0928149, 0.092294, 0.0935149, 0.0920119, 0.0920701, 0.092262, 0.092627, 0.0940161, 0.0933499, 0.092978, 0.0927029, 0.0927529, 0.093452, 0.093581, 0.092896, 0.0927529, 0.0925949, 0.0926042, 0.0947402, 0.095015, 0.095124], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 4, 0, 6, 6, 0, 1, 0, 22, 18, 29, 0, 1, 0, 0, 1, 0, 0]': ([0.103754, 0.103291, 0.103069, 0.103147, 0.100818, 0.0933669, 0.0943339, 0.0943618, 0.0943749, 0.0928149, 0.092294, 0.0935149, 0.0920119, 0.0920701, 0.092262, 0.092627, 0.0940161, 0.0933499, 0.092978, 0.0927029, 0.0927529, 0.093452, 0.093581, 0.092896, 0.0927529, 0.0925949, 0.0926042, 0.0947402, 0.095015, 0.095124], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	4
        Additions: 		2407
        Multiplications: 	1098
        Divisions: 		0
        Logical: 		0
        Reads: 			4650
        Writes: 		789
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest69.exe __orio_perftest69.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest69.exe  
Program Test Output: 
{'[6, 4, 2, 0, 0, 0, 1, 0, 27, 0, 29, 28, 1, 0, 0, 1, 0, 0]' : 0.133083}
{'[6, 4, 2, 0, 0, 0, 1, 0, 27, 0, 29, 28, 1, 0, 0, 1, 0, 0]' : 0.133086}
{'[6, 4, 2, 0, 0, 0, 1, 0, 27, 0, 29, 28, 1, 0, 0, 1, 0, 0]' : 0.132619}
{'[6, 4, 2, 0, 0, 0, 1, 0, 27, 0, 29, 28, 1, 0, 0, 1, 0, 0]' : 0.115585}
{'[6, 4, 2, 0, 0, 0, 1, 0, 27, 0, 29, 28, 1, 0, 0, 1, 0, 0]' : 0.112532}
{'[6, 4, 2, 0, 0, 0, 1, 0, 27, 0, 29, 28, 1, 0, 0, 1, 0, 0]' : 0.112652}
{'[6, 4, 2, 0, 0, 0, 1, 0, 27, 0, 29, 28, 1, 0, 0, 1, 0, 0]' : 0.112612}
{'[6, 4, 2, 0, 0, 0, 1, 0, 27, 0, 29, 28, 1, 0, 0, 1, 0, 0]' : 0.112712}
{'[6, 4, 2, 0, 0, 0, 1, 0, 27, 0, 29, 28, 1, 0, 0, 1, 0, 0]' : 0.112518}
{'[6, 4, 2, 0, 0, 0, 1, 0, 27, 0, 29, 28, 1, 0, 0, 1, 0, 0]' : 0.112555}
{'[6, 4, 2, 0, 0, 0, 1, 0, 27, 0, 29, 28, 1, 0, 0, 1, 0, 0]' : 0.112569}
{'[6, 4, 2, 0, 0, 0, 1, 0, 27, 0, 29, 28, 1, 0, 0, 1, 0, 0]' : 0.112812}
{'[6, 4, 2, 0, 0, 0, 1, 0, 27, 0, 29, 28, 1, 0, 0, 1, 0, 0]' : 0.112546}
{'[6, 4, 2, 0, 0, 0, 1, 0, 27, 0, 29, 28, 1, 0, 0, 1, 0, 0]' : 0.112535}
{'[6, 4, 2, 0, 0, 0, 1, 0, 27, 0, 29, 28, 1, 0, 0, 1, 0, 0]' : 0.112613}
{'[6, 4, 2, 0, 0, 0, 1, 0, 27, 0, 29, 28, 1, 0, 0, 1, 0, 0]' : 0.112548}
{'[6, 4, 2, 0, 0, 0, 1, 0, 27, 0, 29, 28, 1, 0, 0, 1, 0, 0]' : 0.112823}
{'[6, 4, 2, 0, 0, 0, 1, 0, 27, 0, 29, 28, 1, 0, 0, 1, 0, 0]' : 0.112527}
{'[6, 4, 2, 0, 0, 0, 1, 0, 27, 0, 29, 28, 1, 0, 0, 1, 0, 0]' : 0.112622}
{'[6, 4, 2, 0, 0, 0, 1, 0, 27, 0, 29, 28, 1, 0, 0, 1, 0, 0]' : 0.112564}
{'[6, 4, 2, 0, 0, 0, 1, 0, 27, 0, 29, 28, 1, 0, 0, 1, 0, 0]' : 0.112561}
{'[6, 4, 2, 0, 0, 0, 1, 0, 27, 0, 29, 28, 1, 0, 0, 1, 0, 0]' : 0.112553}
{'[6, 4, 2, 0, 0, 0, 1, 0, 27, 0, 29, 28, 1, 0, 0, 1, 0, 0]' : 0.112555}
{'[6, 4, 2, 0, 0, 0, 1, 0, 27, 0, 29, 28, 1, 0, 0, 1, 0, 0]' : 0.112588}
{'[6, 4, 2, 0, 0, 0, 1, 0, 27, 0, 29, 28, 1, 0, 0, 1, 0, 0]' : 0.112612}
{'[6, 4, 2, 0, 0, 0, 1, 0, 27, 0, 29, 28, 1, 0, 0, 1, 0, 0]' : 0.112788}
{'[6, 4, 2, 0, 0, 0, 1, 0, 27, 0, 29, 28, 1, 0, 0, 1, 0, 0]' : 0.112565}
{'[6, 4, 2, 0, 0, 0, 1, 0, 27, 0, 29, 28, 1, 0, 0, 1, 0, 0]' : 0.112562}
{'[6, 4, 2, 0, 0, 0, 1, 0, 27, 0, 29, 28, 1, 0, 0, 1, 0, 0]' : 0.112852}
{'[6, 4, 2, 0, 0, 0, 1, 0, 27, 0, 29, 28, 1, 0, 0, 1, 0, 0]' : 0.112601}

out:
 ["{'[6, 4, 2, 0, 0, 0, 1, 0, 27, 0, 29, 28, 1, 0, 0, 1, 0, 0]' : 0.133083}", "{'[6, 4, 2, 0, 0, 0, 1, 0, 27, 0, 29, 28, 1, 0, 0, 1, 0, 0]' : 0.133086}", "{'[6, 4, 2, 0, 0, 0, 1, 0, 27, 0, 29, 28, 1, 0, 0, 1, 0, 0]' : 0.132619}", "{'[6, 4, 2, 0, 0, 0, 1, 0, 27, 0, 29, 28, 1, 0, 0, 1, 0, 0]' : 0.115585}", "{'[6, 4, 2, 0, 0, 0, 1, 0, 27, 0, 29, 28, 1, 0, 0, 1, 0, 0]' : 0.112532}", "{'[6, 4, 2, 0, 0, 0, 1, 0, 27, 0, 29, 28, 1, 0, 0, 1, 0, 0]' : 0.112652}", "{'[6, 4, 2, 0, 0, 0, 1, 0, 27, 0, 29, 28, 1, 0, 0, 1, 0, 0]' : 0.112612}", "{'[6, 4, 2, 0, 0, 0, 1, 0, 27, 0, 29, 28, 1, 0, 0, 1, 0, 0]' : 0.112712}", "{'[6, 4, 2, 0, 0, 0, 1, 0, 27, 0, 29, 28, 1, 0, 0, 1, 0, 0]' : 0.112518}", "{'[6, 4, 2, 0, 0, 0, 1, 0, 27, 0, 29, 28, 1, 0, 0, 1, 0, 0]' : 0.112555}", "{'[6, 4, 2, 0, 0, 0, 1, 0, 27, 0, 29, 28, 1, 0, 0, 1, 0, 0]' : 0.112569}", "{'[6, 4, 2, 0, 0, 0, 1, 0, 27, 0, 29, 28, 1, 0, 0, 1, 0, 0]' : 0.112812}", "{'[6, 4, 2, 0, 0, 0, 1, 0, 27, 0, 29, 28, 1, 0, 0, 1, 0, 0]' : 0.112546}", "{'[6, 4, 2, 0, 0, 0, 1, 0, 27, 0, 29, 28, 1, 0, 0, 1, 0, 0]' : 0.112535}", "{'[6, 4, 2, 0, 0, 0, 1, 0, 27, 0, 29, 28, 1, 0, 0, 1, 0, 0]' : 0.112613}", "{'[6, 4, 2, 0, 0, 0, 1, 0, 27, 0, 29, 28, 1, 0, 0, 1, 0, 0]' : 0.112548}", "{'[6, 4, 2, 0, 0, 0, 1, 0, 27, 0, 29, 28, 1, 0, 0, 1, 0, 0]' : 0.112823}", "{'[6, 4, 2, 0, 0, 0, 1, 0, 27, 0, 29, 28, 1, 0, 0, 1, 0, 0]' : 0.112527}", "{'[6, 4, 2, 0, 0, 0, 1, 0, 27, 0, 29, 28, 1, 0, 0, 1, 0, 0]' : 0.112622}", "{'[6, 4, 2, 0, 0, 0, 1, 0, 27, 0, 29, 28, 1, 0, 0, 1, 0, 0]' : 0.112564}", "{'[6, 4, 2, 0, 0, 0, 1, 0, 27, 0, 29, 28, 1, 0, 0, 1, 0, 0]' : 0.112561}", "{'[6, 4, 2, 0, 0, 0, 1, 0, 27, 0, 29, 28, 1, 0, 0, 1, 0, 0]' : 0.112553}", "{'[6, 4, 2, 0, 0, 0, 1, 0, 27, 0, 29, 28, 1, 0, 0, 1, 0, 0]' : 0.112555}", "{'[6, 4, 2, 0, 0, 0, 1, 0, 27, 0, 29, 28, 1, 0, 0, 1, 0, 0]' : 0.112588}", "{'[6, 4, 2, 0, 0, 0, 1, 0, 27, 0, 29, 28, 1, 0, 0, 1, 0, 0]' : 0.112612}", "{'[6, 4, 2, 0, 0, 0, 1, 0, 27, 0, 29, 28, 1, 0, 0, 1, 0, 0]' : 0.112788}", "{'[6, 4, 2, 0, 0, 0, 1, 0, 27, 0, 29, 28, 1, 0, 0, 1, 0, 0]' : 0.112565}", "{'[6, 4, 2, 0, 0, 0, 1, 0, 27, 0, 29, 28, 1, 0, 0, 1, 0, 0]' : 0.112562}", "{'[6, 4, 2, 0, 0, 0, 1, 0, 27, 0, 29, 28, 1, 0, 0, 1, 0, 0]' : 0.112852}", "{'[6, 4, 2, 0, 0, 0, 1, 0, 27, 0, 29, 28, 1, 0, 0, 1, 0, 0]' : 0.112601}"]
returning from 'run': {'[6, 4, 2, 0, 0, 0, 1, 0, 27, 0, 29, 28, 1, 0, 0, 1, 0, 0]': ([0.133083, 0.133086, 0.132619, 0.115585, 0.112532, 0.112652, 0.112612, 0.112712, 0.112518, 0.112555, 0.112569, 0.112812, 0.112546, 0.112535, 0.112613, 0.112548, 0.112823, 0.112527, 0.112622, 0.112564, 0.112561, 0.112553, 0.112555, 0.112588, 0.112612, 0.112788, 0.112565, 0.112562, 0.112852, 0.112601], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 4, 2, 0, 0, 0, 1, 0, 27, 0, 29, 28, 1, 0, 0, 1, 0, 0]': ([0.133083, 0.133086, 0.132619, 0.115585, 0.112532, 0.112652, 0.112612, 0.112712, 0.112518, 0.112555, 0.112569, 0.112812, 0.112546, 0.112535, 0.112613, 0.112548, 0.112823, 0.112527, 0.112622, 0.112564, 0.112561, 0.112553, 0.112555, 0.112588, 0.112612, 0.112788, 0.112565, 0.112562, 0.112852, 0.112601], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = jjj
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = kkk
Code stats:
        Number of loops: 	109
        Max loop nest depth: 	5
        Additions: 		7267
        Multiplications: 	2432
        Divisions: 		0
        Logical: 		0
        Reads: 			12019
        Writes: 		1717
        Comparisons:		109
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest70.exe __orio_perftest70.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest70.exe  
Program Test Output: 
{'[1, 4, 5, 6, 2, 3, 1, 0, 10, 28, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.094528}
{'[1, 4, 5, 6, 2, 3, 1, 0, 10, 28, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0935709}
{'[1, 4, 5, 6, 2, 3, 1, 0, 10, 28, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0931041}
{'[1, 4, 5, 6, 2, 3, 1, 0, 10, 28, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0931141}
{'[1, 4, 5, 6, 2, 3, 1, 0, 10, 28, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.093102}
{'[1, 4, 5, 6, 2, 3, 1, 0, 10, 28, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.093225}
{'[1, 4, 5, 6, 2, 3, 1, 0, 10, 28, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.093117}
{'[1, 4, 5, 6, 2, 3, 1, 0, 10, 28, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0930052}
{'[1, 4, 5, 6, 2, 3, 1, 0, 10, 28, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.093091}
{'[1, 4, 5, 6, 2, 3, 1, 0, 10, 28, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.093066}
{'[1, 4, 5, 6, 2, 3, 1, 0, 10, 28, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0931609}
{'[1, 4, 5, 6, 2, 3, 1, 0, 10, 28, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.093215}
{'[1, 4, 5, 6, 2, 3, 1, 0, 10, 28, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0930882}
{'[1, 4, 5, 6, 2, 3, 1, 0, 10, 28, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0930619}
{'[1, 4, 5, 6, 2, 3, 1, 0, 10, 28, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.093219}
{'[1, 4, 5, 6, 2, 3, 1, 0, 10, 28, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0932331}
{'[1, 4, 5, 6, 2, 3, 1, 0, 10, 28, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0931931}
{'[1, 4, 5, 6, 2, 3, 1, 0, 10, 28, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0928791}
{'[1, 4, 5, 6, 2, 3, 1, 0, 10, 28, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.092792}
{'[1, 4, 5, 6, 2, 3, 1, 0, 10, 28, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.092875}
{'[1, 4, 5, 6, 2, 3, 1, 0, 10, 28, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0928249}
{'[1, 4, 5, 6, 2, 3, 1, 0, 10, 28, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0926859}
{'[1, 4, 5, 6, 2, 3, 1, 0, 10, 28, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0928252}
{'[1, 4, 5, 6, 2, 3, 1, 0, 10, 28, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.092854}
{'[1, 4, 5, 6, 2, 3, 1, 0, 10, 28, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.092881}
{'[1, 4, 5, 6, 2, 3, 1, 0, 10, 28, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0927999}
{'[1, 4, 5, 6, 2, 3, 1, 0, 10, 28, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0928559}
{'[1, 4, 5, 6, 2, 3, 1, 0, 10, 28, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.09288}
{'[1, 4, 5, 6, 2, 3, 1, 0, 10, 28, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0928621}
{'[1, 4, 5, 6, 2, 3, 1, 0, 10, 28, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0928869}

out:
 ["{'[1, 4, 5, 6, 2, 3, 1, 0, 10, 28, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.094528}", "{'[1, 4, 5, 6, 2, 3, 1, 0, 10, 28, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0935709}", "{'[1, 4, 5, 6, 2, 3, 1, 0, 10, 28, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0931041}", "{'[1, 4, 5, 6, 2, 3, 1, 0, 10, 28, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0931141}", "{'[1, 4, 5, 6, 2, 3, 1, 0, 10, 28, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.093102}", "{'[1, 4, 5, 6, 2, 3, 1, 0, 10, 28, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.093225}", "{'[1, 4, 5, 6, 2, 3, 1, 0, 10, 28, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.093117}", "{'[1, 4, 5, 6, 2, 3, 1, 0, 10, 28, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0930052}", "{'[1, 4, 5, 6, 2, 3, 1, 0, 10, 28, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.093091}", "{'[1, 4, 5, 6, 2, 3, 1, 0, 10, 28, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.093066}", "{'[1, 4, 5, 6, 2, 3, 1, 0, 10, 28, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0931609}", "{'[1, 4, 5, 6, 2, 3, 1, 0, 10, 28, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.093215}", "{'[1, 4, 5, 6, 2, 3, 1, 0, 10, 28, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0930882}", "{'[1, 4, 5, 6, 2, 3, 1, 0, 10, 28, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0930619}", "{'[1, 4, 5, 6, 2, 3, 1, 0, 10, 28, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.093219}", "{'[1, 4, 5, 6, 2, 3, 1, 0, 10, 28, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0932331}", "{'[1, 4, 5, 6, 2, 3, 1, 0, 10, 28, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0931931}", "{'[1, 4, 5, 6, 2, 3, 1, 0, 10, 28, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0928791}", "{'[1, 4, 5, 6, 2, 3, 1, 0, 10, 28, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.092792}", "{'[1, 4, 5, 6, 2, 3, 1, 0, 10, 28, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.092875}", "{'[1, 4, 5, 6, 2, 3, 1, 0, 10, 28, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0928249}", "{'[1, 4, 5, 6, 2, 3, 1, 0, 10, 28, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0926859}", "{'[1, 4, 5, 6, 2, 3, 1, 0, 10, 28, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0928252}", "{'[1, 4, 5, 6, 2, 3, 1, 0, 10, 28, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.092854}", "{'[1, 4, 5, 6, 2, 3, 1, 0, 10, 28, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.092881}", "{'[1, 4, 5, 6, 2, 3, 1, 0, 10, 28, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0927999}", "{'[1, 4, 5, 6, 2, 3, 1, 0, 10, 28, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0928559}", "{'[1, 4, 5, 6, 2, 3, 1, 0, 10, 28, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.09288}", "{'[1, 4, 5, 6, 2, 3, 1, 0, 10, 28, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0928621}", "{'[1, 4, 5, 6, 2, 3, 1, 0, 10, 28, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0928869}"]
returning from 'run': {'[1, 4, 5, 6, 2, 3, 1, 0, 10, 28, 29, 0, 1, 0, 0, 1, 0, 1]': ([0.094528, 0.0935709, 0.0931041, 0.0931141, 0.093102, 0.093225, 0.093117, 0.0930052, 0.093091, 0.093066, 0.0931609, 0.093215, 0.0930882, 0.0930619, 0.093219, 0.0932331, 0.0931931, 0.0928791, 0.092792, 0.092875, 0.0928249, 0.0926859, 0.0928252, 0.092854, 0.092881, 0.0927999, 0.0928559, 0.09288, 0.0928621, 0.0928869], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 4, 5, 6, 2, 3, 1, 0, 10, 28, 29, 0, 1, 0, 0, 1, 0, 1]': ([0.094528, 0.0935709, 0.0931041, 0.0931141, 0.093102, 0.093225, 0.093117, 0.0930052, 0.093091, 0.093066, 0.0931609, 0.093215, 0.0930882, 0.0930619, 0.093219, 0.0932331, 0.0931931, 0.0928791, 0.092792, 0.092875, 0.0928249, 0.0926859, 0.0928252, 0.092854, 0.092881, 0.0927999, 0.0928559, 0.09288, 0.0928621, 0.0928869], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = jjj
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = kkk
Code stats:
        Number of loops: 	28
        Max loop nest depth: 	4
        Additions: 		741
        Multiplications: 	306
        Divisions: 		0
        Logical: 		0
        Reads: 			1555
        Writes: 		305
        Comparisons:		28
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest71.exe __orio_perftest71.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest71.exe  
Program Test Output: 
{'[6, 4, 4, 0, 2, 2, 1, 0, 15, 7, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.124322}
{'[6, 4, 4, 0, 2, 2, 1, 0, 15, 7, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.124216}
{'[6, 4, 4, 0, 2, 2, 1, 0, 15, 7, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.124166}
{'[6, 4, 4, 0, 2, 2, 1, 0, 15, 7, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.124231}
{'[6, 4, 4, 0, 2, 2, 1, 0, 15, 7, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.115253}
{'[6, 4, 4, 0, 2, 2, 1, 0, 15, 7, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.108341}
{'[6, 4, 4, 0, 2, 2, 1, 0, 15, 7, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.108438}
{'[6, 4, 4, 0, 2, 2, 1, 0, 15, 7, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.111011}
{'[6, 4, 4, 0, 2, 2, 1, 0, 15, 7, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.111029}
{'[6, 4, 4, 0, 2, 2, 1, 0, 15, 7, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.11111}
{'[6, 4, 4, 0, 2, 2, 1, 0, 15, 7, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.111099}
{'[6, 4, 4, 0, 2, 2, 1, 0, 15, 7, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.111054}
{'[6, 4, 4, 0, 2, 2, 1, 0, 15, 7, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.111075}
{'[6, 4, 4, 0, 2, 2, 1, 0, 15, 7, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.11109}
{'[6, 4, 4, 0, 2, 2, 1, 0, 15, 7, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.110905}
{'[6, 4, 4, 0, 2, 2, 1, 0, 15, 7, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.108057}
{'[6, 4, 4, 0, 2, 2, 1, 0, 15, 7, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.106309}
{'[6, 4, 4, 0, 2, 2, 1, 0, 15, 7, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.105179}
{'[6, 4, 4, 0, 2, 2, 1, 0, 15, 7, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.106402}
{'[6, 4, 4, 0, 2, 2, 1, 0, 15, 7, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.108292}
{'[6, 4, 4, 0, 2, 2, 1, 0, 15, 7, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.108085}
{'[6, 4, 4, 0, 2, 2, 1, 0, 15, 7, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.10804}
{'[6, 4, 4, 0, 2, 2, 1, 0, 15, 7, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.10831}
{'[6, 4, 4, 0, 2, 2, 1, 0, 15, 7, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.108422}
{'[6, 4, 4, 0, 2, 2, 1, 0, 15, 7, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.108166}
{'[6, 4, 4, 0, 2, 2, 1, 0, 15, 7, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.108094}
{'[6, 4, 4, 0, 2, 2, 1, 0, 15, 7, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.108099}
{'[6, 4, 4, 0, 2, 2, 1, 0, 15, 7, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.108311}
{'[6, 4, 4, 0, 2, 2, 1, 0, 15, 7, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.108306}
{'[6, 4, 4, 0, 2, 2, 1, 0, 15, 7, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.108299}

out:
 ["{'[6, 4, 4, 0, 2, 2, 1, 0, 15, 7, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.124322}", "{'[6, 4, 4, 0, 2, 2, 1, 0, 15, 7, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.124216}", "{'[6, 4, 4, 0, 2, 2, 1, 0, 15, 7, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.124166}", "{'[6, 4, 4, 0, 2, 2, 1, 0, 15, 7, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.124231}", "{'[6, 4, 4, 0, 2, 2, 1, 0, 15, 7, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.115253}", "{'[6, 4, 4, 0, 2, 2, 1, 0, 15, 7, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.108341}", "{'[6, 4, 4, 0, 2, 2, 1, 0, 15, 7, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.108438}", "{'[6, 4, 4, 0, 2, 2, 1, 0, 15, 7, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.111011}", "{'[6, 4, 4, 0, 2, 2, 1, 0, 15, 7, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.111029}", "{'[6, 4, 4, 0, 2, 2, 1, 0, 15, 7, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.11111}", "{'[6, 4, 4, 0, 2, 2, 1, 0, 15, 7, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.111099}", "{'[6, 4, 4, 0, 2, 2, 1, 0, 15, 7, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.111054}", "{'[6, 4, 4, 0, 2, 2, 1, 0, 15, 7, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.111075}", "{'[6, 4, 4, 0, 2, 2, 1, 0, 15, 7, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.11109}", "{'[6, 4, 4, 0, 2, 2, 1, 0, 15, 7, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.110905}", "{'[6, 4, 4, 0, 2, 2, 1, 0, 15, 7, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.108057}", "{'[6, 4, 4, 0, 2, 2, 1, 0, 15, 7, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.106309}", "{'[6, 4, 4, 0, 2, 2, 1, 0, 15, 7, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.105179}", "{'[6, 4, 4, 0, 2, 2, 1, 0, 15, 7, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.106402}", "{'[6, 4, 4, 0, 2, 2, 1, 0, 15, 7, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.108292}", "{'[6, 4, 4, 0, 2, 2, 1, 0, 15, 7, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.108085}", "{'[6, 4, 4, 0, 2, 2, 1, 0, 15, 7, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.10804}", "{'[6, 4, 4, 0, 2, 2, 1, 0, 15, 7, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.10831}", "{'[6, 4, 4, 0, 2, 2, 1, 0, 15, 7, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.108422}", "{'[6, 4, 4, 0, 2, 2, 1, 0, 15, 7, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.108166}", "{'[6, 4, 4, 0, 2, 2, 1, 0, 15, 7, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.108094}", "{'[6, 4, 4, 0, 2, 2, 1, 0, 15, 7, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.108099}", "{'[6, 4, 4, 0, 2, 2, 1, 0, 15, 7, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.108311}", "{'[6, 4, 4, 0, 2, 2, 1, 0, 15, 7, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.108306}", "{'[6, 4, 4, 0, 2, 2, 1, 0, 15, 7, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.108299}"]
returning from 'run': {'[6, 4, 4, 0, 2, 2, 1, 0, 15, 7, 29, 0, 1, 1, 0, 1, 1, 0]': ([0.124322, 0.124216, 0.124166, 0.124231, 0.115253, 0.108341, 0.108438, 0.111011, 0.111029, 0.11111, 0.111099, 0.111054, 0.111075, 0.11109, 0.110905, 0.108057, 0.106309, 0.105179, 0.106402, 0.108292, 0.108085, 0.10804, 0.10831, 0.108422, 0.108166, 0.108094, 0.108099, 0.108311, 0.108306, 0.108299], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 4, 4, 0, 2, 2, 1, 0, 15, 7, 29, 0, 1, 1, 0, 1, 1, 0]': ([0.124322, 0.124216, 0.124166, 0.124231, 0.115253, 0.108341, 0.108438, 0.111011, 0.111029, 0.11111, 0.111099, 0.111054, 0.111075, 0.11109, 0.110905, 0.108057, 0.106309, 0.105179, 0.106402, 0.108292, 0.108085, 0.10804, 0.10831, 0.108422, 0.108166, 0.108094, 0.108099, 0.108311, 0.108306, 0.108299], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = jjj
Code stats:
        Number of loops: 	56
        Max loop nest depth: 	4
        Additions: 		3730
        Multiplications: 	1344
        Divisions: 		0
        Logical: 		0
        Reads: 			6390
        Writes: 		937
        Comparisons:		56
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest72.exe __orio_perftest72.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest72.exe  
Program Test Output: 
{'[0, 4, 5, 1, 2, 0, 1, 0, 0, 11, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.091414}
{'[0, 4, 5, 1, 2, 0, 1, 0, 0, 11, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0889938}
{'[0, 4, 5, 1, 2, 0, 1, 0, 0, 11, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.088522}
{'[0, 4, 5, 1, 2, 0, 1, 0, 0, 11, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0885139}
{'[0, 4, 5, 1, 2, 0, 1, 0, 0, 11, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.089092}
{'[0, 4, 5, 1, 2, 0, 1, 0, 0, 11, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0910139}
{'[0, 4, 5, 1, 2, 0, 1, 0, 0, 11, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0910509}
{'[0, 4, 5, 1, 2, 0, 1, 0, 0, 11, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.091212}
{'[0, 4, 5, 1, 2, 0, 1, 0, 0, 11, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.091001}
{'[0, 4, 5, 1, 2, 0, 1, 0, 0, 11, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.091002}
{'[0, 4, 5, 1, 2, 0, 1, 0, 0, 11, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0910809}
{'[0, 4, 5, 1, 2, 0, 1, 0, 0, 11, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0910978}
{'[0, 4, 5, 1, 2, 0, 1, 0, 0, 11, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0910139}
{'[0, 4, 5, 1, 2, 0, 1, 0, 0, 11, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0909839}
{'[0, 4, 5, 1, 2, 0, 1, 0, 0, 11, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0910568}
{'[0, 4, 5, 1, 2, 0, 1, 0, 0, 11, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0912631}
{'[0, 4, 5, 1, 2, 0, 1, 0, 0, 11, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0909929}
{'[0, 4, 5, 1, 2, 0, 1, 0, 0, 11, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0910721}
{'[0, 4, 5, 1, 2, 0, 1, 0, 0, 11, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0909731}
{'[0, 4, 5, 1, 2, 0, 1, 0, 0, 11, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0910201}
{'[0, 4, 5, 1, 2, 0, 1, 0, 0, 11, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0909932}
{'[0, 4, 5, 1, 2, 0, 1, 0, 0, 11, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0912209}
{'[0, 4, 5, 1, 2, 0, 1, 0, 0, 11, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.091197}
{'[0, 4, 5, 1, 2, 0, 1, 0, 0, 11, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.091001}
{'[0, 4, 5, 1, 2, 0, 1, 0, 0, 11, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0909851}
{'[0, 4, 5, 1, 2, 0, 1, 0, 0, 11, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.090977}
{'[0, 4, 5, 1, 2, 0, 1, 0, 0, 11, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0910969}
{'[0, 4, 5, 1, 2, 0, 1, 0, 0, 11, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.091023}
{'[0, 4, 5, 1, 2, 0, 1, 0, 0, 11, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0909982}
{'[0, 4, 5, 1, 2, 0, 1, 0, 0, 11, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0910079}

out:
 ["{'[0, 4, 5, 1, 2, 0, 1, 0, 0, 11, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.091414}", "{'[0, 4, 5, 1, 2, 0, 1, 0, 0, 11, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0889938}", "{'[0, 4, 5, 1, 2, 0, 1, 0, 0, 11, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.088522}", "{'[0, 4, 5, 1, 2, 0, 1, 0, 0, 11, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0885139}", "{'[0, 4, 5, 1, 2, 0, 1, 0, 0, 11, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.089092}", "{'[0, 4, 5, 1, 2, 0, 1, 0, 0, 11, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0910139}", "{'[0, 4, 5, 1, 2, 0, 1, 0, 0, 11, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0910509}", "{'[0, 4, 5, 1, 2, 0, 1, 0, 0, 11, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.091212}", "{'[0, 4, 5, 1, 2, 0, 1, 0, 0, 11, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.091001}", "{'[0, 4, 5, 1, 2, 0, 1, 0, 0, 11, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.091002}", "{'[0, 4, 5, 1, 2, 0, 1, 0, 0, 11, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0910809}", "{'[0, 4, 5, 1, 2, 0, 1, 0, 0, 11, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0910978}", "{'[0, 4, 5, 1, 2, 0, 1, 0, 0, 11, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0910139}", "{'[0, 4, 5, 1, 2, 0, 1, 0, 0, 11, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0909839}", "{'[0, 4, 5, 1, 2, 0, 1, 0, 0, 11, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0910568}", "{'[0, 4, 5, 1, 2, 0, 1, 0, 0, 11, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0912631}", "{'[0, 4, 5, 1, 2, 0, 1, 0, 0, 11, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0909929}", "{'[0, 4, 5, 1, 2, 0, 1, 0, 0, 11, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0910721}", "{'[0, 4, 5, 1, 2, 0, 1, 0, 0, 11, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0909731}", "{'[0, 4, 5, 1, 2, 0, 1, 0, 0, 11, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0910201}", "{'[0, 4, 5, 1, 2, 0, 1, 0, 0, 11, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0909932}", "{'[0, 4, 5, 1, 2, 0, 1, 0, 0, 11, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0912209}", "{'[0, 4, 5, 1, 2, 0, 1, 0, 0, 11, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.091197}", "{'[0, 4, 5, 1, 2, 0, 1, 0, 0, 11, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.091001}", "{'[0, 4, 5, 1, 2, 0, 1, 0, 0, 11, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0909851}", "{'[0, 4, 5, 1, 2, 0, 1, 0, 0, 11, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.090977}", "{'[0, 4, 5, 1, 2, 0, 1, 0, 0, 11, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0910969}", "{'[0, 4, 5, 1, 2, 0, 1, 0, 0, 11, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.091023}", "{'[0, 4, 5, 1, 2, 0, 1, 0, 0, 11, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0909982}", "{'[0, 4, 5, 1, 2, 0, 1, 0, 0, 11, 29, 0, 1, 0, 0, 1, 0, 1]' : 0.0910079}"]
returning from 'run': {'[0, 4, 5, 1, 2, 0, 1, 0, 0, 11, 29, 0, 1, 0, 0, 1, 0, 1]': ([0.091414, 0.0889938, 0.088522, 0.0885139, 0.089092, 0.0910139, 0.0910509, 0.091212, 0.091001, 0.091002, 0.0910809, 0.0910978, 0.0910139, 0.0909839, 0.0910568, 0.0912631, 0.0909929, 0.0910721, 0.0909731, 0.0910201, 0.0909932, 0.0912209, 0.091197, 0.091001, 0.0909851, 0.090977, 0.0910969, 0.091023, 0.0909982, 0.0910079], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 4, 5, 1, 2, 0, 1, 0, 0, 11, 29, 0, 1, 0, 0, 1, 0, 1]': ([0.091414, 0.0889938, 0.088522, 0.0885139, 0.089092, 0.0910139, 0.0910509, 0.091212, 0.091001, 0.091002, 0.0910809, 0.0910978, 0.0910139, 0.0909839, 0.0910568, 0.0912631, 0.0909929, 0.0910721, 0.0909731, 0.0910201, 0.0909932, 0.0912209, 0.091197, 0.091001, 0.0909851, 0.090977, 0.0910969, 0.091023, 0.0909982, 0.0910079], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	6
        Additions: 		421
        Multiplications: 	162
        Divisions: 		0
        Logical: 		0
        Reads: 			895
        Writes: 		192
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest73.exe __orio_perftest73.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest73.exe  
Program Test Output: 
{'[5, 4, 6, 5, 5, 6, 1, 0, 28, 0, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.101046}
{'[5, 4, 6, 5, 5, 6, 1, 0, 28, 0, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.101062}
{'[5, 4, 6, 5, 5, 6, 1, 0, 28, 0, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.101016}
{'[5, 4, 6, 5, 5, 6, 1, 0, 28, 0, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.10099}
{'[5, 4, 6, 5, 5, 6, 1, 0, 28, 0, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.0988882}
{'[5, 4, 6, 5, 5, 6, 1, 0, 28, 0, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.0908661}
{'[5, 4, 6, 5, 5, 6, 1, 0, 28, 0, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.090975}
{'[5, 4, 6, 5, 5, 6, 1, 0, 28, 0, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.090919}
{'[5, 4, 6, 5, 5, 6, 1, 0, 28, 0, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.090987}
{'[5, 4, 6, 5, 5, 6, 1, 0, 28, 0, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.0908639}
{'[5, 4, 6, 5, 5, 6, 1, 0, 28, 0, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.090821}
{'[5, 4, 6, 5, 5, 6, 1, 0, 28, 0, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.0908921}
{'[5, 4, 6, 5, 5, 6, 1, 0, 28, 0, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.090858}
{'[5, 4, 6, 5, 5, 6, 1, 0, 28, 0, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.0895}
{'[5, 4, 6, 5, 5, 6, 1, 0, 28, 0, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.088382}
{'[5, 4, 6, 5, 5, 6, 1, 0, 28, 0, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.088402}
{'[5, 4, 6, 5, 5, 6, 1, 0, 28, 0, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.0883121}
{'[5, 4, 6, 5, 5, 6, 1, 0, 28, 0, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.09024}
{'[5, 4, 6, 5, 5, 6, 1, 0, 28, 0, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.0909579}
{'[5, 4, 6, 5, 5, 6, 1, 0, 28, 0, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.0908558}
{'[5, 4, 6, 5, 5, 6, 1, 0, 28, 0, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.0908329}
{'[5, 4, 6, 5, 5, 6, 1, 0, 28, 0, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.090852}
{'[5, 4, 6, 5, 5, 6, 1, 0, 28, 0, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.0909331}
{'[5, 4, 6, 5, 5, 6, 1, 0, 28, 0, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.090863}
{'[5, 4, 6, 5, 5, 6, 1, 0, 28, 0, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.0910981}
{'[5, 4, 6, 5, 5, 6, 1, 0, 28, 0, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.0908082}
{'[5, 4, 6, 5, 5, 6, 1, 0, 28, 0, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.090858}
{'[5, 4, 6, 5, 5, 6, 1, 0, 28, 0, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.0908439}
{'[5, 4, 6, 5, 5, 6, 1, 0, 28, 0, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.090857}
{'[5, 4, 6, 5, 5, 6, 1, 0, 28, 0, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.0909269}

out:
 ["{'[5, 4, 6, 5, 5, 6, 1, 0, 28, 0, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.101046}", "{'[5, 4, 6, 5, 5, 6, 1, 0, 28, 0, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.101062}", "{'[5, 4, 6, 5, 5, 6, 1, 0, 28, 0, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.101016}", "{'[5, 4, 6, 5, 5, 6, 1, 0, 28, 0, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.10099}", "{'[5, 4, 6, 5, 5, 6, 1, 0, 28, 0, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.0988882}", "{'[5, 4, 6, 5, 5, 6, 1, 0, 28, 0, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.0908661}", "{'[5, 4, 6, 5, 5, 6, 1, 0, 28, 0, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.090975}", "{'[5, 4, 6, 5, 5, 6, 1, 0, 28, 0, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.090919}", "{'[5, 4, 6, 5, 5, 6, 1, 0, 28, 0, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.090987}", "{'[5, 4, 6, 5, 5, 6, 1, 0, 28, 0, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.0908639}", "{'[5, 4, 6, 5, 5, 6, 1, 0, 28, 0, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.090821}", "{'[5, 4, 6, 5, 5, 6, 1, 0, 28, 0, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.0908921}", "{'[5, 4, 6, 5, 5, 6, 1, 0, 28, 0, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.090858}", "{'[5, 4, 6, 5, 5, 6, 1, 0, 28, 0, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.0895}", "{'[5, 4, 6, 5, 5, 6, 1, 0, 28, 0, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.088382}", "{'[5, 4, 6, 5, 5, 6, 1, 0, 28, 0, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.088402}", "{'[5, 4, 6, 5, 5, 6, 1, 0, 28, 0, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.0883121}", "{'[5, 4, 6, 5, 5, 6, 1, 0, 28, 0, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.09024}", "{'[5, 4, 6, 5, 5, 6, 1, 0, 28, 0, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.0909579}", "{'[5, 4, 6, 5, 5, 6, 1, 0, 28, 0, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.0908558}", "{'[5, 4, 6, 5, 5, 6, 1, 0, 28, 0, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.0908329}", "{'[5, 4, 6, 5, 5, 6, 1, 0, 28, 0, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.090852}", "{'[5, 4, 6, 5, 5, 6, 1, 0, 28, 0, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.0909331}", "{'[5, 4, 6, 5, 5, 6, 1, 0, 28, 0, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.090863}", "{'[5, 4, 6, 5, 5, 6, 1, 0, 28, 0, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.0910981}", "{'[5, 4, 6, 5, 5, 6, 1, 0, 28, 0, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.0908082}", "{'[5, 4, 6, 5, 5, 6, 1, 0, 28, 0, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.090858}", "{'[5, 4, 6, 5, 5, 6, 1, 0, 28, 0, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.0908439}", "{'[5, 4, 6, 5, 5, 6, 1, 0, 28, 0, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.090857}", "{'[5, 4, 6, 5, 5, 6, 1, 0, 28, 0, 29, 0, 1, 1, 0, 1, 1, 1]' : 0.0909269}"]
returning from 'run': {'[5, 4, 6, 5, 5, 6, 1, 0, 28, 0, 29, 0, 1, 1, 0, 1, 1, 1]': ([0.101046, 0.101062, 0.101016, 0.10099, 0.0988882, 0.0908661, 0.090975, 0.090919, 0.090987, 0.0908639, 0.090821, 0.0908921, 0.090858, 0.0895, 0.088382, 0.088402, 0.0883121, 0.09024, 0.0909579, 0.0908558, 0.0908329, 0.090852, 0.0909331, 0.090863, 0.0910981, 0.0908082, 0.090858, 0.0908439, 0.090857, 0.0909269], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 4, 6, 5, 5, 6, 1, 0, 28, 0, 29, 0, 1, 1, 0, 1, 1, 1]': ([0.101046, 0.101062, 0.101016, 0.10099, 0.0988882, 0.0908661, 0.090975, 0.090919, 0.090987, 0.0908639, 0.090821, 0.0908921, 0.090858, 0.0895, 0.088382, 0.088402, 0.0883121, 0.09024, 0.0909579, 0.0908558, 0.0908329, 0.090852, 0.0909331, 0.090863, 0.0910981, 0.0908082, 0.090858, 0.0908439, 0.090857, 0.0909269], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	4
        Additions: 		1413
        Multiplications: 	630
        Divisions: 		0
        Logical: 		0
        Reads: 			2718
        Writes: 		460
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest74.exe __orio_perftest74.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest74.exe  
Program Test Output: 
{'[0, 4, 0, 3, 0, 6, 1, 0, 21, 0, 29, 2, 1, 0, 0, 1, 1, 1]' : 0.105556}
{'[0, 4, 0, 3, 0, 6, 1, 0, 21, 0, 29, 2, 1, 0, 0, 1, 1, 1]' : 0.105491}
{'[0, 4, 0, 3, 0, 6, 1, 0, 21, 0, 29, 2, 1, 0, 0, 1, 1, 1]' : 0.105483}
{'[0, 4, 0, 3, 0, 6, 1, 0, 21, 0, 29, 2, 1, 0, 0, 1, 1, 1]' : 0.0954771}
{'[0, 4, 0, 3, 0, 6, 1, 0, 21, 0, 29, 2, 1, 0, 0, 1, 1, 1]' : 0.0910189}
{'[0, 4, 0, 3, 0, 6, 1, 0, 21, 0, 29, 2, 1, 0, 0, 1, 1, 1]' : 0.091054}
{'[0, 4, 0, 3, 0, 6, 1, 0, 21, 0, 29, 2, 1, 0, 0, 1, 1, 1]' : 0.0920389}
{'[0, 4, 0, 3, 0, 6, 1, 0, 21, 0, 29, 2, 1, 0, 0, 1, 1, 1]' : 0.0918941}
{'[0, 4, 0, 3, 0, 6, 1, 0, 21, 0, 29, 2, 1, 0, 0, 1, 1, 1]' : 0.0920291}
{'[0, 4, 0, 3, 0, 6, 1, 0, 21, 0, 29, 2, 1, 0, 0, 1, 1, 1]' : 0.092097}
{'[0, 4, 0, 3, 0, 6, 1, 0, 21, 0, 29, 2, 1, 0, 0, 1, 1, 1]' : 0.092361}
{'[0, 4, 0, 3, 0, 6, 1, 0, 21, 0, 29, 2, 1, 0, 0, 1, 1, 1]' : 0.0921879}
{'[0, 4, 0, 3, 0, 6, 1, 0, 21, 0, 29, 2, 1, 0, 0, 1, 1, 1]' : 0.0922561}
{'[0, 4, 0, 3, 0, 6, 1, 0, 21, 0, 29, 2, 1, 0, 0, 1, 1, 1]' : 0.0921531}
{'[0, 4, 0, 3, 0, 6, 1, 0, 21, 0, 29, 2, 1, 0, 0, 1, 1, 1]' : 0.0922341}
{'[0, 4, 0, 3, 0, 6, 1, 0, 21, 0, 29, 2, 1, 0, 0, 1, 1, 1]' : 0.0922}
{'[0, 4, 0, 3, 0, 6, 1, 0, 21, 0, 29, 2, 1, 0, 0, 1, 1, 1]' : 0.0922379}
{'[0, 4, 0, 3, 0, 6, 1, 0, 21, 0, 29, 2, 1, 0, 0, 1, 1, 1]' : 0.0922041}
{'[0, 4, 0, 3, 0, 6, 1, 0, 21, 0, 29, 2, 1, 0, 0, 1, 1, 1]' : 0.0922072}
{'[0, 4, 0, 3, 0, 6, 1, 0, 21, 0, 29, 2, 1, 0, 0, 1, 1, 1]' : 0.09215}
{'[0, 4, 0, 3, 0, 6, 1, 0, 21, 0, 29, 2, 1, 0, 0, 1, 1, 1]' : 0.0922029}
{'[0, 4, 0, 3, 0, 6, 1, 0, 21, 0, 29, 2, 1, 0, 0, 1, 1, 1]' : 0.092257}
{'[0, 4, 0, 3, 0, 6, 1, 0, 21, 0, 29, 2, 1, 0, 0, 1, 1, 1]' : 0.092509}
{'[0, 4, 0, 3, 0, 6, 1, 0, 21, 0, 29, 2, 1, 0, 0, 1, 1, 1]' : 0.092243}
{'[0, 4, 0, 3, 0, 6, 1, 0, 21, 0, 29, 2, 1, 0, 0, 1, 1, 1]' : 0.092195}
{'[0, 4, 0, 3, 0, 6, 1, 0, 21, 0, 29, 2, 1, 0, 0, 1, 1, 1]' : 0.0921981}
{'[0, 4, 0, 3, 0, 6, 1, 0, 21, 0, 29, 2, 1, 0, 0, 1, 1, 1]' : 0.0921168}
{'[0, 4, 0, 3, 0, 6, 1, 0, 21, 0, 29, 2, 1, 0, 0, 1, 1, 1]' : 0.0922809}
{'[0, 4, 0, 3, 0, 6, 1, 0, 21, 0, 29, 2, 1, 0, 0, 1, 1, 1]' : 0.0924721}
{'[0, 4, 0, 3, 0, 6, 1, 0, 21, 0, 29, 2, 1, 0, 0, 1, 1, 1]' : 0.092407}

out:
 ["{'[0, 4, 0, 3, 0, 6, 1, 0, 21, 0, 29, 2, 1, 0, 0, 1, 1, 1]' : 0.105556}", "{'[0, 4, 0, 3, 0, 6, 1, 0, 21, 0, 29, 2, 1, 0, 0, 1, 1, 1]' : 0.105491}", "{'[0, 4, 0, 3, 0, 6, 1, 0, 21, 0, 29, 2, 1, 0, 0, 1, 1, 1]' : 0.105483}", "{'[0, 4, 0, 3, 0, 6, 1, 0, 21, 0, 29, 2, 1, 0, 0, 1, 1, 1]' : 0.0954771}", "{'[0, 4, 0, 3, 0, 6, 1, 0, 21, 0, 29, 2, 1, 0, 0, 1, 1, 1]' : 0.0910189}", "{'[0, 4, 0, 3, 0, 6, 1, 0, 21, 0, 29, 2, 1, 0, 0, 1, 1, 1]' : 0.091054}", "{'[0, 4, 0, 3, 0, 6, 1, 0, 21, 0, 29, 2, 1, 0, 0, 1, 1, 1]' : 0.0920389}", "{'[0, 4, 0, 3, 0, 6, 1, 0, 21, 0, 29, 2, 1, 0, 0, 1, 1, 1]' : 0.0918941}", "{'[0, 4, 0, 3, 0, 6, 1, 0, 21, 0, 29, 2, 1, 0, 0, 1, 1, 1]' : 0.0920291}", "{'[0, 4, 0, 3, 0, 6, 1, 0, 21, 0, 29, 2, 1, 0, 0, 1, 1, 1]' : 0.092097}", "{'[0, 4, 0, 3, 0, 6, 1, 0, 21, 0, 29, 2, 1, 0, 0, 1, 1, 1]' : 0.092361}", "{'[0, 4, 0, 3, 0, 6, 1, 0, 21, 0, 29, 2, 1, 0, 0, 1, 1, 1]' : 0.0921879}", "{'[0, 4, 0, 3, 0, 6, 1, 0, 21, 0, 29, 2, 1, 0, 0, 1, 1, 1]' : 0.0922561}", "{'[0, 4, 0, 3, 0, 6, 1, 0, 21, 0, 29, 2, 1, 0, 0, 1, 1, 1]' : 0.0921531}", "{'[0, 4, 0, 3, 0, 6, 1, 0, 21, 0, 29, 2, 1, 0, 0, 1, 1, 1]' : 0.0922341}", "{'[0, 4, 0, 3, 0, 6, 1, 0, 21, 0, 29, 2, 1, 0, 0, 1, 1, 1]' : 0.0922}", "{'[0, 4, 0, 3, 0, 6, 1, 0, 21, 0, 29, 2, 1, 0, 0, 1, 1, 1]' : 0.0922379}", "{'[0, 4, 0, 3, 0, 6, 1, 0, 21, 0, 29, 2, 1, 0, 0, 1, 1, 1]' : 0.0922041}", "{'[0, 4, 0, 3, 0, 6, 1, 0, 21, 0, 29, 2, 1, 0, 0, 1, 1, 1]' : 0.0922072}", "{'[0, 4, 0, 3, 0, 6, 1, 0, 21, 0, 29, 2, 1, 0, 0, 1, 1, 1]' : 0.09215}", "{'[0, 4, 0, 3, 0, 6, 1, 0, 21, 0, 29, 2, 1, 0, 0, 1, 1, 1]' : 0.0922029}", "{'[0, 4, 0, 3, 0, 6, 1, 0, 21, 0, 29, 2, 1, 0, 0, 1, 1, 1]' : 0.092257}", "{'[0, 4, 0, 3, 0, 6, 1, 0, 21, 0, 29, 2, 1, 0, 0, 1, 1, 1]' : 0.092509}", "{'[0, 4, 0, 3, 0, 6, 1, 0, 21, 0, 29, 2, 1, 0, 0, 1, 1, 1]' : 0.092243}", "{'[0, 4, 0, 3, 0, 6, 1, 0, 21, 0, 29, 2, 1, 0, 0, 1, 1, 1]' : 0.092195}", "{'[0, 4, 0, 3, 0, 6, 1, 0, 21, 0, 29, 2, 1, 0, 0, 1, 1, 1]' : 0.0921981}", "{'[0, 4, 0, 3, 0, 6, 1, 0, 21, 0, 29, 2, 1, 0, 0, 1, 1, 1]' : 0.0921168}", "{'[0, 4, 0, 3, 0, 6, 1, 0, 21, 0, 29, 2, 1, 0, 0, 1, 1, 1]' : 0.0922809}", "{'[0, 4, 0, 3, 0, 6, 1, 0, 21, 0, 29, 2, 1, 0, 0, 1, 1, 1]' : 0.0924721}", "{'[0, 4, 0, 3, 0, 6, 1, 0, 21, 0, 29, 2, 1, 0, 0, 1, 1, 1]' : 0.092407}"]
returning from 'run': {'[0, 4, 0, 3, 0, 6, 1, 0, 21, 0, 29, 2, 1, 0, 0, 1, 1, 1]': ([0.105556, 0.105491, 0.105483, 0.0954771, 0.0910189, 0.091054, 0.0920389, 0.0918941, 0.0920291, 0.092097, 0.092361, 0.0921879, 0.0922561, 0.0921531, 0.0922341, 0.0922, 0.0922379, 0.0922041, 0.0922072, 0.09215, 0.0922029, 0.092257, 0.092509, 0.092243, 0.092195, 0.0921981, 0.0921168, 0.0922809, 0.0924721, 0.092407], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 4, 0, 3, 0, 6, 1, 0, 21, 0, 29, 2, 1, 0, 0, 1, 1, 1]': ([0.105556, 0.105491, 0.105483, 0.0954771, 0.0910189, 0.091054, 0.0920389, 0.0918941, 0.0920291, 0.092097, 0.092361, 0.0921879, 0.0922561, 0.0921531, 0.0922341, 0.0922, 0.0922379, 0.0922041, 0.0922072, 0.09215, 0.0922029, 0.092257, 0.092509, 0.092243, 0.092195, 0.0921981, 0.0921168, 0.0922809, 0.0924721, 0.092407], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	32
        Max loop nest depth: 	4
        Additions: 		915
        Multiplications: 	378
        Divisions: 		0
        Logical: 		0
        Reads: 			1911
        Writes: 		379
        Comparisons:		32
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest75.exe __orio_perftest75.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest75.exe  
Program Test Output: 
{'[2, 4, 0, 0, 0, 3, 1, 0, 29, 11, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.105115}
{'[2, 4, 0, 0, 0, 3, 1, 0, 29, 11, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.105147}
{'[2, 4, 0, 0, 0, 3, 1, 0, 29, 11, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104922}
{'[2, 4, 0, 0, 0, 3, 1, 0, 29, 11, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104967}
{'[2, 4, 0, 0, 0, 3, 1, 0, 29, 11, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104988}
{'[2, 4, 0, 0, 0, 3, 1, 0, 29, 11, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.10503}
{'[2, 4, 0, 0, 0, 3, 1, 0, 29, 11, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104938}
{'[2, 4, 0, 0, 0, 3, 1, 0, 29, 11, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104967}
{'[2, 4, 0, 0, 0, 3, 1, 0, 29, 11, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104936}
{'[2, 4, 0, 0, 0, 3, 1, 0, 29, 11, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.105171}
{'[2, 4, 0, 0, 0, 3, 1, 0, 29, 11, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.105079}
{'[2, 4, 0, 0, 0, 3, 1, 0, 29, 11, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104945}
{'[2, 4, 0, 0, 0, 3, 1, 0, 29, 11, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104961}
{'[2, 4, 0, 0, 0, 3, 1, 0, 29, 11, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104935}
{'[2, 4, 0, 0, 0, 3, 1, 0, 29, 11, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104959}
{'[2, 4, 0, 0, 0, 3, 1, 0, 29, 11, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.10388}
{'[2, 4, 0, 0, 0, 3, 1, 0, 29, 11, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104958}
{'[2, 4, 0, 0, 0, 3, 1, 0, 29, 11, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104937}
{'[2, 4, 0, 0, 0, 3, 1, 0, 29, 11, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104994}
{'[2, 4, 0, 0, 0, 3, 1, 0, 29, 11, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104923}
{'[2, 4, 0, 0, 0, 3, 1, 0, 29, 11, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.105062}
{'[2, 4, 0, 0, 0, 3, 1, 0, 29, 11, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104898}
{'[2, 4, 0, 0, 0, 3, 1, 0, 29, 11, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104997}
{'[2, 4, 0, 0, 0, 3, 1, 0, 29, 11, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104952}
{'[2, 4, 0, 0, 0, 3, 1, 0, 29, 11, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104922}
{'[2, 4, 0, 0, 0, 3, 1, 0, 29, 11, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.105177}
{'[2, 4, 0, 0, 0, 3, 1, 0, 29, 11, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104952}
{'[2, 4, 0, 0, 0, 3, 1, 0, 29, 11, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104963}
{'[2, 4, 0, 0, 0, 3, 1, 0, 29, 11, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.105202}
{'[2, 4, 0, 0, 0, 3, 1, 0, 29, 11, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104966}

out:
 ["{'[2, 4, 0, 0, 0, 3, 1, 0, 29, 11, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.105115}", "{'[2, 4, 0, 0, 0, 3, 1, 0, 29, 11, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.105147}", "{'[2, 4, 0, 0, 0, 3, 1, 0, 29, 11, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104922}", "{'[2, 4, 0, 0, 0, 3, 1, 0, 29, 11, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104967}", "{'[2, 4, 0, 0, 0, 3, 1, 0, 29, 11, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104988}", "{'[2, 4, 0, 0, 0, 3, 1, 0, 29, 11, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.10503}", "{'[2, 4, 0, 0, 0, 3, 1, 0, 29, 11, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104938}", "{'[2, 4, 0, 0, 0, 3, 1, 0, 29, 11, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104967}", "{'[2, 4, 0, 0, 0, 3, 1, 0, 29, 11, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104936}", "{'[2, 4, 0, 0, 0, 3, 1, 0, 29, 11, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.105171}", "{'[2, 4, 0, 0, 0, 3, 1, 0, 29, 11, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.105079}", "{'[2, 4, 0, 0, 0, 3, 1, 0, 29, 11, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104945}", "{'[2, 4, 0, 0, 0, 3, 1, 0, 29, 11, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104961}", "{'[2, 4, 0, 0, 0, 3, 1, 0, 29, 11, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104935}", "{'[2, 4, 0, 0, 0, 3, 1, 0, 29, 11, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104959}", "{'[2, 4, 0, 0, 0, 3, 1, 0, 29, 11, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.10388}", "{'[2, 4, 0, 0, 0, 3, 1, 0, 29, 11, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104958}", "{'[2, 4, 0, 0, 0, 3, 1, 0, 29, 11, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104937}", "{'[2, 4, 0, 0, 0, 3, 1, 0, 29, 11, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104994}", "{'[2, 4, 0, 0, 0, 3, 1, 0, 29, 11, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104923}", "{'[2, 4, 0, 0, 0, 3, 1, 0, 29, 11, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.105062}", "{'[2, 4, 0, 0, 0, 3, 1, 0, 29, 11, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104898}", "{'[2, 4, 0, 0, 0, 3, 1, 0, 29, 11, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104997}", "{'[2, 4, 0, 0, 0, 3, 1, 0, 29, 11, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104952}", "{'[2, 4, 0, 0, 0, 3, 1, 0, 29, 11, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104922}", "{'[2, 4, 0, 0, 0, 3, 1, 0, 29, 11, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.105177}", "{'[2, 4, 0, 0, 0, 3, 1, 0, 29, 11, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104952}", "{'[2, 4, 0, 0, 0, 3, 1, 0, 29, 11, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104963}", "{'[2, 4, 0, 0, 0, 3, 1, 0, 29, 11, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.105202}", "{'[2, 4, 0, 0, 0, 3, 1, 0, 29, 11, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.104966}"]
returning from 'run': {'[2, 4, 0, 0, 0, 3, 1, 0, 29, 11, 29, 0, 1, 1, 0, 1, 1, 0]': ([0.105115, 0.105147, 0.104922, 0.104967, 0.104988, 0.10503, 0.104938, 0.104967, 0.104936, 0.105171, 0.105079, 0.104945, 0.104961, 0.104935, 0.104959, 0.10388, 0.104958, 0.104937, 0.104994, 0.104923, 0.105062, 0.104898, 0.104997, 0.104952, 0.104922, 0.105177, 0.104952, 0.104963, 0.105202, 0.104966], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 4, 0, 0, 0, 3, 1, 0, 29, 11, 29, 0, 1, 1, 0, 1, 1, 0]': ([0.105115, 0.105147, 0.104922, 0.104967, 0.104988, 0.10503, 0.104938, 0.104967, 0.104936, 0.105171, 0.105079, 0.104945, 0.104961, 0.104935, 0.104959, 0.10388, 0.104958, 0.104937, 0.104994, 0.104923, 0.105062, 0.104898, 0.104997, 0.104952, 0.104922, 0.105177, 0.104952, 0.104963, 0.105202, 0.104966], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = jjj
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	5
        Additions: 		1566
        Multiplications: 	702
        Divisions: 		0
        Logical: 		0
        Reads: 			3150
        Writes: 		582
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest76.exe __orio_perftest76.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest76.exe  
Program Test Output: 
{'[0, 4, 2, 3, 2, 6, 1, 0, 29, 0, 29, 29, 1, 1, 0, 1, 0, 1]' : 0.113884}
{'[0, 4, 2, 3, 2, 6, 1, 0, 29, 0, 29, 29, 1, 1, 0, 1, 0, 1]' : 0.113797}
{'[0, 4, 2, 3, 2, 6, 1, 0, 29, 0, 29, 29, 1, 1, 0, 1, 0, 1]' : 0.102738}
{'[0, 4, 2, 3, 2, 6, 1, 0, 29, 0, 29, 29, 1, 1, 0, 1, 0, 1]' : 0.097353}
{'[0, 4, 2, 3, 2, 6, 1, 0, 29, 0, 29, 29, 1, 1, 0, 1, 0, 1]' : 0.0973659}
{'[0, 4, 2, 3, 2, 6, 1, 0, 29, 0, 29, 29, 1, 1, 0, 1, 0, 1]' : 0.097739}
{'[0, 4, 2, 3, 2, 6, 1, 0, 29, 0, 29, 29, 1, 1, 0, 1, 0, 1]' : 0.097409}
{'[0, 4, 2, 3, 2, 6, 1, 0, 29, 0, 29, 29, 1, 1, 0, 1, 0, 1]' : 0.0975041}
{'[0, 4, 2, 3, 2, 6, 1, 0, 29, 0, 29, 29, 1, 1, 0, 1, 0, 1]' : 0.0974381}
{'[0, 4, 2, 3, 2, 6, 1, 0, 29, 0, 29, 29, 1, 1, 0, 1, 0, 1]' : 0.0974529}
{'[0, 4, 2, 3, 2, 6, 1, 0, 29, 0, 29, 29, 1, 1, 0, 1, 0, 1]' : 0.0974569}
{'[0, 4, 2, 3, 2, 6, 1, 0, 29, 0, 29, 29, 1, 1, 0, 1, 0, 1]' : 0.0975449}
{'[0, 4, 2, 3, 2, 6, 1, 0, 29, 0, 29, 29, 1, 1, 0, 1, 0, 1]' : 0.097523}
{'[0, 4, 2, 3, 2, 6, 1, 0, 29, 0, 29, 29, 1, 1, 0, 1, 0, 1]' : 0.0974619}
{'[0, 4, 2, 3, 2, 6, 1, 0, 29, 0, 29, 29, 1, 1, 0, 1, 0, 1]' : 0.0974619}
{'[0, 4, 2, 3, 2, 6, 1, 0, 29, 0, 29, 29, 1, 1, 0, 1, 0, 1]' : 0.097471}
{'[0, 4, 2, 3, 2, 6, 1, 0, 29, 0, 29, 29, 1, 1, 0, 1, 0, 1]' : 0.097436}
{'[0, 4, 2, 3, 2, 6, 1, 0, 29, 0, 29, 29, 1, 1, 0, 1, 0, 1]' : 0.0974538}
{'[0, 4, 2, 3, 2, 6, 1, 0, 29, 0, 29, 29, 1, 1, 0, 1, 0, 1]' : 0.0974889}
{'[0, 4, 2, 3, 2, 6, 1, 0, 29, 0, 29, 29, 1, 1, 0, 1, 0, 1]' : 0.0974789}
{'[0, 4, 2, 3, 2, 6, 1, 0, 29, 0, 29, 29, 1, 1, 0, 1, 0, 1]' : 0.0974898}
{'[0, 4, 2, 3, 2, 6, 1, 0, 29, 0, 29, 29, 1, 1, 0, 1, 0, 1]' : 0.097436}
{'[0, 4, 2, 3, 2, 6, 1, 0, 29, 0, 29, 29, 1, 1, 0, 1, 0, 1]' : 0.0976789}
{'[0, 4, 2, 3, 2, 6, 1, 0, 29, 0, 29, 29, 1, 1, 0, 1, 0, 1]' : 0.097482}
{'[0, 4, 2, 3, 2, 6, 1, 0, 29, 0, 29, 29, 1, 1, 0, 1, 0, 1]' : 0.097441}
{'[0, 4, 2, 3, 2, 6, 1, 0, 29, 0, 29, 29, 1, 1, 0, 1, 0, 1]' : 0.0975201}
{'[0, 4, 2, 3, 2, 6, 1, 0, 29, 0, 29, 29, 1, 1, 0, 1, 0, 1]' : 0.097985}
{'[0, 4, 2, 3, 2, 6, 1, 0, 29, 0, 29, 29, 1, 1, 0, 1, 0, 1]' : 0.0976679}
{'[0, 4, 2, 3, 2, 6, 1, 0, 29, 0, 29, 29, 1, 1, 0, 1, 0, 1]' : 0.097429}
{'[0, 4, 2, 3, 2, 6, 1, 0, 29, 0, 29, 29, 1, 1, 0, 1, 0, 1]' : 0.0974431}

out:
 ["{'[0, 4, 2, 3, 2, 6, 1, 0, 29, 0, 29, 29, 1, 1, 0, 1, 0, 1]' : 0.113884}", "{'[0, 4, 2, 3, 2, 6, 1, 0, 29, 0, 29, 29, 1, 1, 0, 1, 0, 1]' : 0.113797}", "{'[0, 4, 2, 3, 2, 6, 1, 0, 29, 0, 29, 29, 1, 1, 0, 1, 0, 1]' : 0.102738}", "{'[0, 4, 2, 3, 2, 6, 1, 0, 29, 0, 29, 29, 1, 1, 0, 1, 0, 1]' : 0.097353}", "{'[0, 4, 2, 3, 2, 6, 1, 0, 29, 0, 29, 29, 1, 1, 0, 1, 0, 1]' : 0.0973659}", "{'[0, 4, 2, 3, 2, 6, 1, 0, 29, 0, 29, 29, 1, 1, 0, 1, 0, 1]' : 0.097739}", "{'[0, 4, 2, 3, 2, 6, 1, 0, 29, 0, 29, 29, 1, 1, 0, 1, 0, 1]' : 0.097409}", "{'[0, 4, 2, 3, 2, 6, 1, 0, 29, 0, 29, 29, 1, 1, 0, 1, 0, 1]' : 0.0975041}", "{'[0, 4, 2, 3, 2, 6, 1, 0, 29, 0, 29, 29, 1, 1, 0, 1, 0, 1]' : 0.0974381}", "{'[0, 4, 2, 3, 2, 6, 1, 0, 29, 0, 29, 29, 1, 1, 0, 1, 0, 1]' : 0.0974529}", "{'[0, 4, 2, 3, 2, 6, 1, 0, 29, 0, 29, 29, 1, 1, 0, 1, 0, 1]' : 0.0974569}", "{'[0, 4, 2, 3, 2, 6, 1, 0, 29, 0, 29, 29, 1, 1, 0, 1, 0, 1]' : 0.0975449}", "{'[0, 4, 2, 3, 2, 6, 1, 0, 29, 0, 29, 29, 1, 1, 0, 1, 0, 1]' : 0.097523}", "{'[0, 4, 2, 3, 2, 6, 1, 0, 29, 0, 29, 29, 1, 1, 0, 1, 0, 1]' : 0.0974619}", "{'[0, 4, 2, 3, 2, 6, 1, 0, 29, 0, 29, 29, 1, 1, 0, 1, 0, 1]' : 0.0974619}", "{'[0, 4, 2, 3, 2, 6, 1, 0, 29, 0, 29, 29, 1, 1, 0, 1, 0, 1]' : 0.097471}", "{'[0, 4, 2, 3, 2, 6, 1, 0, 29, 0, 29, 29, 1, 1, 0, 1, 0, 1]' : 0.097436}", "{'[0, 4, 2, 3, 2, 6, 1, 0, 29, 0, 29, 29, 1, 1, 0, 1, 0, 1]' : 0.0974538}", "{'[0, 4, 2, 3, 2, 6, 1, 0, 29, 0, 29, 29, 1, 1, 0, 1, 0, 1]' : 0.0974889}", "{'[0, 4, 2, 3, 2, 6, 1, 0, 29, 0, 29, 29, 1, 1, 0, 1, 0, 1]' : 0.0974789}", "{'[0, 4, 2, 3, 2, 6, 1, 0, 29, 0, 29, 29, 1, 1, 0, 1, 0, 1]' : 0.0974898}", "{'[0, 4, 2, 3, 2, 6, 1, 0, 29, 0, 29, 29, 1, 1, 0, 1, 0, 1]' : 0.097436}", "{'[0, 4, 2, 3, 2, 6, 1, 0, 29, 0, 29, 29, 1, 1, 0, 1, 0, 1]' : 0.0976789}", "{'[0, 4, 2, 3, 2, 6, 1, 0, 29, 0, 29, 29, 1, 1, 0, 1, 0, 1]' : 0.097482}", "{'[0, 4, 2, 3, 2, 6, 1, 0, 29, 0, 29, 29, 1, 1, 0, 1, 0, 1]' : 0.097441}", "{'[0, 4, 2, 3, 2, 6, 1, 0, 29, 0, 29, 29, 1, 1, 0, 1, 0, 1]' : 0.0975201}", "{'[0, 4, 2, 3, 2, 6, 1, 0, 29, 0, 29, 29, 1, 1, 0, 1, 0, 1]' : 0.097985}", "{'[0, 4, 2, 3, 2, 6, 1, 0, 29, 0, 29, 29, 1, 1, 0, 1, 0, 1]' : 0.0976679}", "{'[0, 4, 2, 3, 2, 6, 1, 0, 29, 0, 29, 29, 1, 1, 0, 1, 0, 1]' : 0.097429}", "{'[0, 4, 2, 3, 2, 6, 1, 0, 29, 0, 29, 29, 1, 1, 0, 1, 0, 1]' : 0.0974431}"]
returning from 'run': {'[0, 4, 2, 3, 2, 6, 1, 0, 29, 0, 29, 29, 1, 1, 0, 1, 0, 1]': ([0.113884, 0.113797, 0.102738, 0.097353, 0.0973659, 0.097739, 0.097409, 0.0975041, 0.0974381, 0.0974529, 0.0974569, 0.0975449, 0.097523, 0.0974619, 0.0974619, 0.097471, 0.097436, 0.0974538, 0.0974889, 0.0974789, 0.0974898, 0.097436, 0.0976789, 0.097482, 0.097441, 0.0975201, 0.097985, 0.0976679, 0.097429, 0.0974431], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 4, 2, 3, 2, 6, 1, 0, 29, 0, 29, 29, 1, 1, 0, 1, 0, 1]': ([0.113884, 0.113797, 0.102738, 0.097353, 0.0973659, 0.097739, 0.097409, 0.0975041, 0.0974381, 0.0974529, 0.0974569, 0.0975449, 0.097523, 0.0974619, 0.0974619, 0.097471, 0.097436, 0.0974538, 0.0974889, 0.0974789, 0.0974898, 0.097436, 0.0976789, 0.097482, 0.097441, 0.0975201, 0.097985, 0.0976679, 0.097429, 0.0974431], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	6
        Additions: 		1795
        Multiplications: 	810
        Divisions: 		0
        Logical: 		0
        Reads: 			3447
        Writes: 		572
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest77.exe __orio_perftest77.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest77.exe  
Program Test Output: 
{'[3, 4, 6, 2, 6, 6, 1, 0, 8, 0, 29, 12, 1, 0, 0, 1, 0, 0]' : 0.107069}
{'[3, 4, 6, 2, 6, 6, 1, 0, 8, 0, 29, 12, 1, 0, 0, 1, 0, 0]' : 0.109481}
{'[3, 4, 6, 2, 6, 6, 1, 0, 8, 0, 29, 12, 1, 0, 0, 1, 0, 0]' : 0.109494}
{'[3, 4, 6, 2, 6, 6, 1, 0, 8, 0, 29, 12, 1, 0, 0, 1, 0, 0]' : 0.109583}
{'[3, 4, 6, 2, 6, 6, 1, 0, 8, 0, 29, 12, 1, 0, 0, 1, 0, 0]' : 0.109467}
{'[3, 4, 6, 2, 6, 6, 1, 0, 8, 0, 29, 12, 1, 0, 0, 1, 0, 0]' : 0.109721}
{'[3, 4, 6, 2, 6, 6, 1, 0, 8, 0, 29, 12, 1, 0, 0, 1, 0, 0]' : 0.109931}
{'[3, 4, 6, 2, 6, 6, 1, 0, 8, 0, 29, 12, 1, 0, 0, 1, 0, 0]' : 0.109953}
{'[3, 4, 6, 2, 6, 6, 1, 0, 8, 0, 29, 12, 1, 0, 0, 1, 0, 0]' : 0.107482}
{'[3, 4, 6, 2, 6, 6, 1, 0, 8, 0, 29, 12, 1, 0, 0, 1, 0, 0]' : 0.107407}
{'[3, 4, 6, 2, 6, 6, 1, 0, 8, 0, 29, 12, 1, 0, 0, 1, 0, 0]' : 0.109145}
{'[3, 4, 6, 2, 6, 6, 1, 0, 8, 0, 29, 12, 1, 0, 0, 1, 0, 0]' : 0.109528}
{'[3, 4, 6, 2, 6, 6, 1, 0, 8, 0, 29, 12, 1, 0, 0, 1, 0, 0]' : 0.109546}
{'[3, 4, 6, 2, 6, 6, 1, 0, 8, 0, 29, 12, 1, 0, 0, 1, 0, 0]' : 0.10956}
{'[3, 4, 6, 2, 6, 6, 1, 0, 8, 0, 29, 12, 1, 0, 0, 1, 0, 0]' : 0.109674}
{'[3, 4, 6, 2, 6, 6, 1, 0, 8, 0, 29, 12, 1, 0, 0, 1, 0, 0]' : 0.109507}
{'[3, 4, 6, 2, 6, 6, 1, 0, 8, 0, 29, 12, 1, 0, 0, 1, 0, 0]' : 0.109526}
{'[3, 4, 6, 2, 6, 6, 1, 0, 8, 0, 29, 12, 1, 0, 0, 1, 0, 0]' : 0.109562}
{'[3, 4, 6, 2, 6, 6, 1, 0, 8, 0, 29, 12, 1, 0, 0, 1, 0, 0]' : 0.109494}
{'[3, 4, 6, 2, 6, 6, 1, 0, 8, 0, 29, 12, 1, 0, 0, 1, 0, 0]' : 0.109614}
{'[3, 4, 6, 2, 6, 6, 1, 0, 8, 0, 29, 12, 1, 0, 0, 1, 0, 0]' : 0.109511}
{'[3, 4, 6, 2, 6, 6, 1, 0, 8, 0, 29, 12, 1, 0, 0, 1, 0, 0]' : 0.109578}
{'[3, 4, 6, 2, 6, 6, 1, 0, 8, 0, 29, 12, 1, 0, 0, 1, 0, 0]' : 0.109585}
{'[3, 4, 6, 2, 6, 6, 1, 0, 8, 0, 29, 12, 1, 0, 0, 1, 0, 0]' : 0.109581}
{'[3, 4, 6, 2, 6, 6, 1, 0, 8, 0, 29, 12, 1, 0, 0, 1, 0, 0]' : 0.109535}
{'[3, 4, 6, 2, 6, 6, 1, 0, 8, 0, 29, 12, 1, 0, 0, 1, 0, 0]' : 0.109551}
{'[3, 4, 6, 2, 6, 6, 1, 0, 8, 0, 29, 12, 1, 0, 0, 1, 0, 0]' : 0.109755}
{'[3, 4, 6, 2, 6, 6, 1, 0, 8, 0, 29, 12, 1, 0, 0, 1, 0, 0]' : 0.10951}
{'[3, 4, 6, 2, 6, 6, 1, 0, 8, 0, 29, 12, 1, 0, 0, 1, 0, 0]' : 0.109753}
{'[3, 4, 6, 2, 6, 6, 1, 0, 8, 0, 29, 12, 1, 0, 0, 1, 0, 0]' : 0.109919}

out:
 ["{'[3, 4, 6, 2, 6, 6, 1, 0, 8, 0, 29, 12, 1, 0, 0, 1, 0, 0]' : 0.107069}", "{'[3, 4, 6, 2, 6, 6, 1, 0, 8, 0, 29, 12, 1, 0, 0, 1, 0, 0]' : 0.109481}", "{'[3, 4, 6, 2, 6, 6, 1, 0, 8, 0, 29, 12, 1, 0, 0, 1, 0, 0]' : 0.109494}", "{'[3, 4, 6, 2, 6, 6, 1, 0, 8, 0, 29, 12, 1, 0, 0, 1, 0, 0]' : 0.109583}", "{'[3, 4, 6, 2, 6, 6, 1, 0, 8, 0, 29, 12, 1, 0, 0, 1, 0, 0]' : 0.109467}", "{'[3, 4, 6, 2, 6, 6, 1, 0, 8, 0, 29, 12, 1, 0, 0, 1, 0, 0]' : 0.109721}", "{'[3, 4, 6, 2, 6, 6, 1, 0, 8, 0, 29, 12, 1, 0, 0, 1, 0, 0]' : 0.109931}", "{'[3, 4, 6, 2, 6, 6, 1, 0, 8, 0, 29, 12, 1, 0, 0, 1, 0, 0]' : 0.109953}", "{'[3, 4, 6, 2, 6, 6, 1, 0, 8, 0, 29, 12, 1, 0, 0, 1, 0, 0]' : 0.107482}", "{'[3, 4, 6, 2, 6, 6, 1, 0, 8, 0, 29, 12, 1, 0, 0, 1, 0, 0]' : 0.107407}", "{'[3, 4, 6, 2, 6, 6, 1, 0, 8, 0, 29, 12, 1, 0, 0, 1, 0, 0]' : 0.109145}", "{'[3, 4, 6, 2, 6, 6, 1, 0, 8, 0, 29, 12, 1, 0, 0, 1, 0, 0]' : 0.109528}", "{'[3, 4, 6, 2, 6, 6, 1, 0, 8, 0, 29, 12, 1, 0, 0, 1, 0, 0]' : 0.109546}", "{'[3, 4, 6, 2, 6, 6, 1, 0, 8, 0, 29, 12, 1, 0, 0, 1, 0, 0]' : 0.10956}", "{'[3, 4, 6, 2, 6, 6, 1, 0, 8, 0, 29, 12, 1, 0, 0, 1, 0, 0]' : 0.109674}", "{'[3, 4, 6, 2, 6, 6, 1, 0, 8, 0, 29, 12, 1, 0, 0, 1, 0, 0]' : 0.109507}", "{'[3, 4, 6, 2, 6, 6, 1, 0, 8, 0, 29, 12, 1, 0, 0, 1, 0, 0]' : 0.109526}", "{'[3, 4, 6, 2, 6, 6, 1, 0, 8, 0, 29, 12, 1, 0, 0, 1, 0, 0]' : 0.109562}", "{'[3, 4, 6, 2, 6, 6, 1, 0, 8, 0, 29, 12, 1, 0, 0, 1, 0, 0]' : 0.109494}", "{'[3, 4, 6, 2, 6, 6, 1, 0, 8, 0, 29, 12, 1, 0, 0, 1, 0, 0]' : 0.109614}", "{'[3, 4, 6, 2, 6, 6, 1, 0, 8, 0, 29, 12, 1, 0, 0, 1, 0, 0]' : 0.109511}", "{'[3, 4, 6, 2, 6, 6, 1, 0, 8, 0, 29, 12, 1, 0, 0, 1, 0, 0]' : 0.109578}", "{'[3, 4, 6, 2, 6, 6, 1, 0, 8, 0, 29, 12, 1, 0, 0, 1, 0, 0]' : 0.109585}", "{'[3, 4, 6, 2, 6, 6, 1, 0, 8, 0, 29, 12, 1, 0, 0, 1, 0, 0]' : 0.109581}", "{'[3, 4, 6, 2, 6, 6, 1, 0, 8, 0, 29, 12, 1, 0, 0, 1, 0, 0]' : 0.109535}", "{'[3, 4, 6, 2, 6, 6, 1, 0, 8, 0, 29, 12, 1, 0, 0, 1, 0, 0]' : 0.109551}", "{'[3, 4, 6, 2, 6, 6, 1, 0, 8, 0, 29, 12, 1, 0, 0, 1, 0, 0]' : 0.109755}", "{'[3, 4, 6, 2, 6, 6, 1, 0, 8, 0, 29, 12, 1, 0, 0, 1, 0, 0]' : 0.10951}", "{'[3, 4, 6, 2, 6, 6, 1, 0, 8, 0, 29, 12, 1, 0, 0, 1, 0, 0]' : 0.109753}", "{'[3, 4, 6, 2, 6, 6, 1, 0, 8, 0, 29, 12, 1, 0, 0, 1, 0, 0]' : 0.109919}"]
returning from 'run': {'[3, 4, 6, 2, 6, 6, 1, 0, 8, 0, 29, 12, 1, 0, 0, 1, 0, 0]': ([0.107069, 0.109481, 0.109494, 0.109583, 0.109467, 0.109721, 0.109931, 0.109953, 0.107482, 0.107407, 0.109145, 0.109528, 0.109546, 0.10956, 0.109674, 0.109507, 0.109526, 0.109562, 0.109494, 0.109614, 0.109511, 0.109578, 0.109585, 0.109581, 0.109535, 0.109551, 0.109755, 0.10951, 0.109753, 0.109919], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 4, 6, 2, 6, 6, 1, 0, 8, 0, 29, 12, 1, 0, 0, 1, 0, 0]': ([0.107069, 0.109481, 0.109494, 0.109583, 0.109467, 0.109721, 0.109931, 0.109953, 0.107482, 0.107407, 0.109145, 0.109528, 0.109546, 0.10956, 0.109674, 0.109507, 0.109526, 0.109562, 0.109494, 0.109614, 0.109511, 0.109578, 0.109585, 0.109581, 0.109535, 0.109551, 0.109755, 0.10951, 0.109753, 0.109919], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Complete design, with measurements:
     T1_I T1_K T2_I T2_J T2_K U1_I U_I U_K RT_J VEC1 VEC2  cost_mean
20      0    3    1    5    5    3  27   0    1    1    0 0.10438613
270     0    1    6    2    3    5   0   0    0    1    0 0.10447177
318     1    3    0    6    1   28  29   0    0    0    0 0.10646727
398     1    1    0    0    6    0  28   0    0    1    1 0.10211526
504     3    1    2    6    1    9  12   0    1    0    1 0.10093716
636     5    6    6    0    6    1   0  26    1    0    0 0.10296517
649     6    0    0    4    6    3  20   0    0    0    1 0.09780762
686     5    0    4    6    2    0   0  29    0    1    0 0.11056340
741     6    2    6    3    2   27   0   4    1    1    0 0.10800153
756     6    0    0    0    0    6  27   0    1    1    1 0.09194008
796     5    1    5    0    0    0  29   0    1    0    1 0.10446617
1084    1    1    4    6    1    4   0   0    1    0    1 0.10192360
1426    2    5    4    5    5   29  29   0    0    1    1 0.09276981
1435    2    2    6    5    6    8   5   0    0    1    1 0.09895902
1459    0    1    0    6    6   26   0   1    0    0    1 0.09658260
1465    1    0    2    3    0    8   0   5    0    1    1 0.09300074
1481    0    6    0    6    4    1   0  17    1    0    1 0.08843094
1619    2    0    0    3    2    0   0   6    1    0    0 0.10583640
1658    3    6    6    6    0    7   0  29    1    1    1 0.09302522
1810    6    4    6    0    2   27  14   0    0    1    1 0.09548973
1837    0    0    6    6    0   22  18   0    0    0    0 0.09488904
2207    6    2    0    0    0   27   0  28    0    0    0 0.11474500
2296    1    5    6    2    3   10  28   0    0    0    1 0.09306655
2426    6    4    0    2    2   15   7   0    1    1    0 0.11112370
2513    0    5    1    2    0    0  11   0    0    0    1 0.09076234
2585    5    6    5    5    6   28   0   0    1    1    1 0.09219024
2588    0    0    3    0    6   21   0   2    0    1    1 0.09357374
2623    2    0    0    0    3   29  11   0    1    1    0 0.10496143
2830    0    2    3    2    6   29   0  29    1    0    1 0.09876770
2937    3    6    2    6    6    8   0  12    0    0    0 0.10936740

Heteroscedasticity Test p-value: 0.651553400468
Regression Step:                Df    Sum Sq   Mean Sq F value   Pr(>F)    
T1_I             1 0.0001748 0.0001748  27.379 0.000383 ***
T1_K             1 0.0000814 0.0000814  12.749 0.005090 ** 
T2_I             1 0.0000287 0.0000287   4.488 0.060165 .  
T2_J             1 0.0000038 0.0000038   0.598 0.457341    
T2_K             1 0.0000011 0.0000011   0.169 0.689422    
U1_I             1 0.0000000 0.0000000   0.003 0.954233    
U_I              1 0.0000361 0.0000361   5.662 0.038644 *  
U_K              1 0.0000399 0.0000399   6.256 0.031383 *  
RT_J             1 0.0000004 0.0000004   0.057 0.816051    
VEC1             1 0.0000076 0.0000076   1.192 0.300451    
VEC2             1 0.0006196 0.0006196  97.051 1.82e-06 ***
I(1/(1 + T1_I))  1 0.0000543 0.0000543   8.507 0.015388 *  
I(1/(1 + T1_K))  1 0.0002874 0.0002874  45.022 5.30e-05 ***
I(1/(1 + T2_I))  1 0.0000224 0.0000224   3.516 0.090267 .  
I(1/(1 + T2_J))  1 0.0000013 0.0000013   0.206 0.659647    
I(1/(1 + T2_K))  1 0.0000027 0.0000027   0.422 0.530631    
I(1/(1 + U1_I))  1 0.0000023 0.0000023   0.357 0.563494    
I(1/(1 + U_I))   1 0.0000004 0.0000004   0.060 0.812112    
I(1/(1 + U_K))   1 0.0000034 0.0000034   0.536 0.480845    
Residuals       10 0.0000638 0.0000064                     
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Predicting Best
Generating valid search space of size 3000 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Valid coordinates: 600
Tested coordinates: 30000
Tested coordinates: 40000
Valid coordinates: 1200
Tested coordinates: 50000
Tested coordinates: 60000
Valid coordinates: 1800
Tested coordinates: 70000
Tested coordinates: 80000
Valid coordinates: 2400
Tested coordinates: 90000
Tested coordinates: 100000
Valid coordinates: 3000
Valid/Tested configurations: 3000/101028
Generated Search Space:
NULL
Identical predictions (tol = 1e-5): 1
Getting Best from Design
Response: ['cost_mean']
Design Names:  [1] "T1_I"      "T1_K"      "T2_I"      "T2_J"      "T2_K"      "U1_I"     
 [7] "U_I"       "U_K"       "RT_J"      "VEC1"      "VEC2"      "cost_mean"

Design Response:       cost_mean
20   0.10438613
270  0.10447177
318  0.10646727
398  0.10211526
504  0.10093716
636  0.10296517
649  0.09780762
686  0.11056340
741  0.10800153
756  0.09194008
796  0.10446617
1084 0.10192360
1426 0.09276981
1435 0.09895902
1459 0.09658260
1465 0.09300074
1481 0.08843094
1619 0.10583640
1658 0.09302522
1810 0.09548973
1837 0.09488904
2207 0.11474500
2296 0.09306655
2426 0.11112370
2513 0.09076234
2585 0.09219024
2588 0.09357374
2623 0.10496143
2830 0.09876770
2937 0.10936740

Current Design Names: ['T1_I', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_K', 'RT_J', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Getting fixed variables
Pruning Model
Best Predicted:      T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
2798    0    4    6    6    2    6       1       0   28   0  29   7    1    1
     RT_K SCR VEC1 VEC2
2798    0   1    1    1

Best From Design: [0, 4, 6, 0, 6, 4, 1, 0, 1, 0, 29, 17, 1, 1, 0, 1, 0, 1]
Pruned Factors: ['T2_J', 'T2_K', 'U1_I', 'RT_J', 'VEC1']
Fixed Factors: {'ACOPY_x': 1, 'ACOPY_y': 0, 'RT_K': 0, 'RT_I': 1, 'T1_J': 4, 'T1_K': 6, 'U_K': 7, 'U_J': 29, 'U_I': 0, 'T2_I': 6, 'VEC2': 1, 'T1_I': 0, 'SCR': 1}
Length of requested configs: 1
Result was on Database, Returning Now
Starting Point (-O3):
0.16283083333333334
Predicted Best Point:
[0, 4, 6, 6, 2, 6, 1, 0, 28, 0, 29, 7, 1, 1, 0, 1, 1, 1]
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = jjj
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	5
        Additions: 		729
        Multiplications: 	306
        Divisions: 		0
        Logical: 		0
        Reads: 			1504
        Writes: 		298
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest78.exe __orio_perftest78.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest78.exe  
Program Test Output: 
{'[0, 4, 6, 6, 2, 6, 1, 0, 28, 0, 29, 7, 1, 1, 0, 1, 1, 1]' : 0.10234}
{'[0, 4, 6, 6, 2, 6, 1, 0, 28, 0, 29, 7, 1, 1, 0, 1, 1, 1]' : 0.102256}
{'[0, 4, 6, 6, 2, 6, 1, 0, 28, 0, 29, 7, 1, 1, 0, 1, 1, 1]' : 0.101185}
{'[0, 4, 6, 6, 2, 6, 1, 0, 28, 0, 29, 7, 1, 1, 0, 1, 1, 1]' : 0.0887189}
{'[0, 4, 6, 6, 2, 6, 1, 0, 28, 0, 29, 7, 1, 1, 0, 1, 1, 1]' : 0.0874679}
{'[0, 4, 6, 6, 2, 6, 1, 0, 28, 0, 29, 7, 1, 1, 0, 1, 1, 1]' : 0.0874209}
{'[0, 4, 6, 6, 2, 6, 1, 0, 28, 0, 29, 7, 1, 1, 0, 1, 1, 1]' : 0.0874171}
{'[0, 4, 6, 6, 2, 6, 1, 0, 28, 0, 29, 7, 1, 1, 0, 1, 1, 1]' : 0.0874901}
{'[0, 4, 6, 6, 2, 6, 1, 0, 28, 0, 29, 7, 1, 1, 0, 1, 1, 1]' : 0.087703}
{'[0, 4, 6, 6, 2, 6, 1, 0, 28, 0, 29, 7, 1, 1, 0, 1, 1, 1]' : 0.0874102}
{'[0, 4, 6, 6, 2, 6, 1, 0, 28, 0, 29, 7, 1, 1, 0, 1, 1, 1]' : 0.0874259}
{'[0, 4, 6, 6, 2, 6, 1, 0, 28, 0, 29, 7, 1, 1, 0, 1, 1, 1]' : 0.0874219}
{'[0, 4, 6, 6, 2, 6, 1, 0, 28, 0, 29, 7, 1, 1, 0, 1, 1, 1]' : 0.0874491}
{'[0, 4, 6, 6, 2, 6, 1, 0, 28, 0, 29, 7, 1, 1, 0, 1, 1, 1]' : 0.087456}
{'[0, 4, 6, 6, 2, 6, 1, 0, 28, 0, 29, 7, 1, 1, 0, 1, 1, 1]' : 0.087455}
{'[0, 4, 6, 6, 2, 6, 1, 0, 28, 0, 29, 7, 1, 1, 0, 1, 1, 1]' : 0.0874209}
{'[0, 4, 6, 6, 2, 6, 1, 0, 28, 0, 29, 7, 1, 1, 0, 1, 1, 1]' : 0.087451}
{'[0, 4, 6, 6, 2, 6, 1, 0, 28, 0, 29, 7, 1, 1, 0, 1, 1, 1]' : 0.08746}
{'[0, 4, 6, 6, 2, 6, 1, 0, 28, 0, 29, 7, 1, 1, 0, 1, 1, 1]' : 0.0874012}
{'[0, 4, 6, 6, 2, 6, 1, 0, 28, 0, 29, 7, 1, 1, 0, 1, 1, 1]' : 0.0874751}
{'[0, 4, 6, 6, 2, 6, 1, 0, 28, 0, 29, 7, 1, 1, 0, 1, 1, 1]' : 0.0874288}
{'[0, 4, 6, 6, 2, 6, 1, 0, 28, 0, 29, 7, 1, 1, 0, 1, 1, 1]' : 0.0874879}
{'[0, 4, 6, 6, 2, 6, 1, 0, 28, 0, 29, 7, 1, 1, 0, 1, 1, 1]' : 0.087481}
{'[0, 4, 6, 6, 2, 6, 1, 0, 28, 0, 29, 7, 1, 1, 0, 1, 1, 1]' : 0.087693}
{'[0, 4, 6, 6, 2, 6, 1, 0, 28, 0, 29, 7, 1, 1, 0, 1, 1, 1]' : 0.0876551}
{'[0, 4, 6, 6, 2, 6, 1, 0, 28, 0, 29, 7, 1, 1, 0, 1, 1, 1]' : 0.08745}
{'[0, 4, 6, 6, 2, 6, 1, 0, 28, 0, 29, 7, 1, 1, 0, 1, 1, 1]' : 0.087486}
{'[0, 4, 6, 6, 2, 6, 1, 0, 28, 0, 29, 7, 1, 1, 0, 1, 1, 1]' : 0.0874779}
{'[0, 4, 6, 6, 2, 6, 1, 0, 28, 0, 29, 7, 1, 1, 0, 1, 1, 1]' : 0.087383}
{'[0, 4, 6, 6, 2, 6, 1, 0, 28, 0, 29, 7, 1, 1, 0, 1, 1, 1]' : 0.0875051}

out:
 ["{'[0, 4, 6, 6, 2, 6, 1, 0, 28, 0, 29, 7, 1, 1, 0, 1, 1, 1]' : 0.10234}", "{'[0, 4, 6, 6, 2, 6, 1, 0, 28, 0, 29, 7, 1, 1, 0, 1, 1, 1]' : 0.102256}", "{'[0, 4, 6, 6, 2, 6, 1, 0, 28, 0, 29, 7, 1, 1, 0, 1, 1, 1]' : 0.101185}", "{'[0, 4, 6, 6, 2, 6, 1, 0, 28, 0, 29, 7, 1, 1, 0, 1, 1, 1]' : 0.0887189}", "{'[0, 4, 6, 6, 2, 6, 1, 0, 28, 0, 29, 7, 1, 1, 0, 1, 1, 1]' : 0.0874679}", "{'[0, 4, 6, 6, 2, 6, 1, 0, 28, 0, 29, 7, 1, 1, 0, 1, 1, 1]' : 0.0874209}", "{'[0, 4, 6, 6, 2, 6, 1, 0, 28, 0, 29, 7, 1, 1, 0, 1, 1, 1]' : 0.0874171}", "{'[0, 4, 6, 6, 2, 6, 1, 0, 28, 0, 29, 7, 1, 1, 0, 1, 1, 1]' : 0.0874901}", "{'[0, 4, 6, 6, 2, 6, 1, 0, 28, 0, 29, 7, 1, 1, 0, 1, 1, 1]' : 0.087703}", "{'[0, 4, 6, 6, 2, 6, 1, 0, 28, 0, 29, 7, 1, 1, 0, 1, 1, 1]' : 0.0874102}", "{'[0, 4, 6, 6, 2, 6, 1, 0, 28, 0, 29, 7, 1, 1, 0, 1, 1, 1]' : 0.0874259}", "{'[0, 4, 6, 6, 2, 6, 1, 0, 28, 0, 29, 7, 1, 1, 0, 1, 1, 1]' : 0.0874219}", "{'[0, 4, 6, 6, 2, 6, 1, 0, 28, 0, 29, 7, 1, 1, 0, 1, 1, 1]' : 0.0874491}", "{'[0, 4, 6, 6, 2, 6, 1, 0, 28, 0, 29, 7, 1, 1, 0, 1, 1, 1]' : 0.087456}", "{'[0, 4, 6, 6, 2, 6, 1, 0, 28, 0, 29, 7, 1, 1, 0, 1, 1, 1]' : 0.087455}", "{'[0, 4, 6, 6, 2, 6, 1, 0, 28, 0, 29, 7, 1, 1, 0, 1, 1, 1]' : 0.0874209}", "{'[0, 4, 6, 6, 2, 6, 1, 0, 28, 0, 29, 7, 1, 1, 0, 1, 1, 1]' : 0.087451}", "{'[0, 4, 6, 6, 2, 6, 1, 0, 28, 0, 29, 7, 1, 1, 0, 1, 1, 1]' : 0.08746}", "{'[0, 4, 6, 6, 2, 6, 1, 0, 28, 0, 29, 7, 1, 1, 0, 1, 1, 1]' : 0.0874012}", "{'[0, 4, 6, 6, 2, 6, 1, 0, 28, 0, 29, 7, 1, 1, 0, 1, 1, 1]' : 0.0874751}", "{'[0, 4, 6, 6, 2, 6, 1, 0, 28, 0, 29, 7, 1, 1, 0, 1, 1, 1]' : 0.0874288}", "{'[0, 4, 6, 6, 2, 6, 1, 0, 28, 0, 29, 7, 1, 1, 0, 1, 1, 1]' : 0.0874879}", "{'[0, 4, 6, 6, 2, 6, 1, 0, 28, 0, 29, 7, 1, 1, 0, 1, 1, 1]' : 0.087481}", "{'[0, 4, 6, 6, 2, 6, 1, 0, 28, 0, 29, 7, 1, 1, 0, 1, 1, 1]' : 0.087693}", "{'[0, 4, 6, 6, 2, 6, 1, 0, 28, 0, 29, 7, 1, 1, 0, 1, 1, 1]' : 0.0876551}", "{'[0, 4, 6, 6, 2, 6, 1, 0, 28, 0, 29, 7, 1, 1, 0, 1, 1, 1]' : 0.08745}", "{'[0, 4, 6, 6, 2, 6, 1, 0, 28, 0, 29, 7, 1, 1, 0, 1, 1, 1]' : 0.087486}", "{'[0, 4, 6, 6, 2, 6, 1, 0, 28, 0, 29, 7, 1, 1, 0, 1, 1, 1]' : 0.0874779}", "{'[0, 4, 6, 6, 2, 6, 1, 0, 28, 0, 29, 7, 1, 1, 0, 1, 1, 1]' : 0.087383}", "{'[0, 4, 6, 6, 2, 6, 1, 0, 28, 0, 29, 7, 1, 1, 0, 1, 1, 1]' : 0.0875051}"]
returning from 'run': {'[0, 4, 6, 6, 2, 6, 1, 0, 28, 0, 29, 7, 1, 1, 0, 1, 1, 1]': ([0.10234, 0.102256, 0.101185, 0.0887189, 0.0874679, 0.0874209, 0.0874171, 0.0874901, 0.087703, 0.0874102, 0.0874259, 0.0874219, 0.0874491, 0.087456, 0.087455, 0.0874209, 0.087451, 0.08746, 0.0874012, 0.0874751, 0.0874288, 0.0874879, 0.087481, 0.087693, 0.0876551, 0.08745, 0.087486, 0.0874779, 0.087383, 0.0875051], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 4, 6, 6, 2, 6, 1, 0, 28, 0, 29, 7, 1, 1, 0, 1, 1, 1]': ([0.10234, 0.102256, 0.101185, 0.0887189, 0.0874679, 0.0874209, 0.0874171, 0.0874901, 0.087703, 0.0874102, 0.0874259, 0.0874219, 0.0874491, 0.087456, 0.087455, 0.0874209, 0.087451, 0.08746, 0.0874012, 0.0874751, 0.0874288, 0.0874879, 0.087481, 0.087693, 0.0876551, 0.08745, 0.087486, 0.0874779, 0.087383, 0.0875051], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Design Best Point:
[0, 4, 6, 0, 6, 4, 1, 0, 1, 0, 29, 17, 1, 1, 0, 1, 0, 1]
Length of requested configs: 1
Result was on Database, Returning Now
Fixed Factors: {'ACOPY_x': 1, 'ACOPY_y': 0, 'RT_K': 0, 'RT_I': 1, 'T1_J': 4, 'T1_K': 6, 'U_K': 7, 'U_J': 29, 'U_I': 0, 'T2_I': 6, 'VEC2': 1, 'T1_I': 0, 'SCR': 1}
Slowdown (Design Best): 0.5430847147090283
Slowdown (Predicted Best): 0.54634881804736
Budget: 67/180
Updating Global Best: 0.08843093666666667
Current Best Point: 
[0, 4, 6, 0, 6, 4, 1, 0, 1, 0, 29, 17, 1, 1, 0, 1, 0, 1]
Final Best Point: 
[0, 4, 6, 0, 6, 4, 1, 0, 1, 0, 29, 17, 1, 1, 0, 1, 0, 1]
Ending DOPT-ANOVA
Best Point: [0, 4, 6, 0, 6, 4, 1, 0, 1, 0, 29, 17, 1, 1, 0, 1, 0, 1]
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Speedup: 1.8413333553970046
----- end random search -----
----- begin random search summary -----
 total completed runs: 0
 total successful runs: 0
 total failed runs: 0
 speedup: 1.8413333553970046
----- end random search summary -----
----- begin summary -----
 best coordinate: [0, 4, 6, 0, 6, 4, 1, 0, 1, 0, 29, 17, 1, 1, 0, 1, 0, 1]={'ACOPY_x': True, 'ACOPY_y': False, 'RT_K': 1, 'T1_I': 1, 'T1_J': 128, 'T1_K': 512, 'U_K': 18, 'U_J': 30, 'U_I': 1, 'U1_I': 2, 'T2_K': 512, 'T2_J': 2048, 'T2_I': 1, 'VEC2': True, 'VEC1': False, 'RT_I': 8, 'SCR': True, 'RT_J': 8}, cost=8.843094e-02, transfer_time=inf, inputs=[('N', 10000)], search_time=-756.77, runs=67
----- end summary -----
Length of requested configs: 1
Result was on Database, Returning Now
----- the obtained best performance parameters -----
 ACOPY_x = True
 ACOPY_y = False
 RT_I = 8
 RT_J = 8
 RT_K = 1
 SCR = True
 T1_I = 1
 T1_J = 128
 T1_K = 512
 T2_I = 1
 T2_J = 2048
 T2_K = 512
 U1_I = 2
 U_I = 1
 U_J = 30
 U_K = 18
 VEC1 = False
 VEC2 = True
 cost_mean = 0.08843093666666667
 points = 67
 speedup_O3 = 1.8413333553970046
 technique = DLMT
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	4
        Additions: 		917
        Multiplications: 	432
        Divisions: 		0
        Logical: 		0
        Reads: 			1792
        Writes: 		307
        Comparisons:		10
        Gotos: 			0
        
----- finish optimizations -----

----- begin removing annotations from output-----
----- finished removing annotations from output-----

----- begin writing the output file(s) -----
--> writing output to: _atax2.src1.c
----- finished writing the output file(s) -----

====== END ORIO ======
