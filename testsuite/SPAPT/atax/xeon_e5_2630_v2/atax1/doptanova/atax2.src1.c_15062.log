
====== START ORIO ======

----- begin reading the source file: atax2.src1.c -----
----- finished reading the source file -----

----- begin parsing annotations -----
----- finished parsing annotations -----

----- begin optimizations -----
Search_Space         = 8.234e+13
Number_of_Parameters = 18
Numeric_Parameters   = 13
Binary_Parameters    = 05
['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
[[1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [False, True], [False, True], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 8, 32], [1, 8, 32], [1, 8, 32], [False, True], [False, True], [False, True]]

----- begin empirical tuning for problem size -----
 N = 10000
Parameters: {'ACOPY_x': [0, 2], 'ACOPY_y': [0, 2], 'RT_K': [0, 3], 'T1_I': [0, 7], 'T1_J': [0, 7], 'T1_K': [0, 7], 'U_K': [0, 30], 'U_J': [0, 30], 'U_I': [0, 30], 'U1_I': [0, 30], 'T2_K': [0, 7], 'T2_J': [0, 7], 'T2_I': [0, 7], 'VEC2': [0, 2], 'VEC1': [0, 2], 'RT_I': [0, 3], 'SCR': [0, 2], 'RT_J': [0, 3]}
Parameter Range Values: {'ACOPY_x': [False, True], 'ACOPY_y': [False, True], 'RT_K': [1, 8, 32], 'T1_I': [1, 16, 32, 64, 128, 256, 512], 'T1_J': [1, 16, 32, 64, 128, 256, 512], 'T1_K': [1, 16, 32, 64, 128, 256, 512], 'U_K': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_J': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U1_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'T2_K': [1, 64, 128, 256, 512, 1024, 2048], 'T2_J': [1, 64, 128, 256, 512, 1024, 2048], 'T2_I': [1, 64, 128, 256, 512, 1024, 2048], 'VEC2': [False, True], 'VEC1': [False, True], 'RT_I': [1, 8, 32], 'SCR': [False, True], 'RT_J': [1, 8, 32]}

----- begin random search -----
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Inverse Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Starting DOPT-anova
Step 0
Generating valid search space of size 4600 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Valid coordinates: 920
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Valid coordinates: 1840
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Valid coordinates: 2760
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Tested coordinates: 150000
Valid coordinates: 3680
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Tested coordinates: 190000
Valid coordinates: 4600
Valid/Tested configurations: 4600/192289
Generated Search Space:
NULL
Clean Info:
Removed Factors: character(0)

Removed Inverse Factors: [1] "ACOPY_x" "ACOPY_y" "SCR"     "VEC1"    "VEC2"   

New Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
New Inverse Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
New Fixed Factors: {}
Full Model:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Fixed Factors: {}
Computing D-Optimal Design
Computing D-Optimal Design with 46 experiments
Design Formula:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Starting "optFederov" run
Using Search Space:
NULL
Data Dimensions: [1] 4600   18

     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
257     4    1    4    2    1    2       0       1   25   3   7   0    2    0
341     1    0    2    0    0    0       0       1   12  25  20   0    0    2
667     0    0    4    4    6    5       1       1    0  11  23   0    2    0
682     6    6    0    6    0    0       1       0   21   0  21   0    2    0
778     2    1    0    5    2    2       0       1   26   0   0   0    0    0
891     4    1    0    0    6    5       0       0   10   0  26   9    0    2
972     0    6    4    4    5    4       1       0    3   0  29  26    0    0
1009    6    0    6    6    5    0       1       1    5   0  15   5    0    0
1419    5    4    5    0    2    3       0       0    5   2   0  13    0    1
1487    5    2    6    3    1    5       1       1    0   3   0  10    0    1
1509    4    2    6    2    2    4       0       1    5  27   1   0    0    2
1510    0    0    1    3    3    6       0       1    4   1   0   0    1    0
1576    1    4    6    6    0    6       1       0    9  16   0  14    0    2
1625    2    6    0    0    4    2       1       0    1   4  16   0    1    0
1712    3    3    3    0    5    1       0       1    0   0  29  12    1    1
1714    6    0    0    4    0    0       0       0   28   5   0  23    1    0
1726    6    1    5    5    0    5       0       1   29   0  24  29    0    0
1812    0    4    0    0    0    3       0       1   17   0  27   4    2    0
1898    0    2    2    6    6    5       0       1    4   5   4   0    0    1
1976    2    5    1    1    0    6       1       1   26   0   1   0    0    1
2052    2    6    0    3    6    0       1       1    3  10  23   0    1    0
2095    3    2    2    2    5    6       1       0   26  19   0  28    2    0
2125    2    1    3    2    0    1       1       0    0   1   0  26    0    0
2133    6    0    0    4    6    1       1       1   14  28   0  20    1    1
2506    6    1    2    0    6    2       1       1   26   4  16   0    0    0
2799    6    3    1    6    2    4       1       1    3  29   0  29    0    0
2849    3    3    6    3    4    6       1       0   29  29  29   0    0    0
3041    0    1    3    1    6    0       0       0    5  17   0   8    0    0
3212    5    6    0    5    5    4       1       0    0  24   5   0    0    0
3326    2    0    2    4    2    6       0       1    4   0  22  28    1    0
3387    1    5    1    6    0    4       1       1   29   0  23   5    0    2
3438    0    1    0    5    1    0       1       1    8  21   0  17    0    0
3444    6    6    6    0    0    6       1       1    1  27  12   0    1    0
3718    0    5    6    3    4    0       0       0    6   0   2  23    2    0
3761    0    3    6    0    2    0       0       0   27   8  12   0    0    2
3763    3    0    3    6    6    1       1       0    0  26   4   0    0    1
3807    2    6    5    0    6    0       1       1   29  20   0  18    1    0
4097    3    0    5    2    6    6       0       0    7   0  24  29    2    0
4107    6    6    2    5    4    0       0       1   29   0   2   8    0    2
4187    4    6    2    5    6    6       0       0    9   1   0   1    1    0
4235    0    2    2    0    2    1       1       0   18   0   1  14    1    0
4277    3    0    6    1    0    5       1       0   27   8   0  11    0    0
4306    3    0    0    0    3    0       0       1   29   0   4  28    0    0
4374    1    1    0    0    3    5       1       0    4   0   1  19    1    0
4434    0    5    0    4    3    5       0       0   29  29   0   5    0    0
4452    4    2    2    6    0    0       0       1    0  21  18   0    0    0
     RT_K SCR VEC1 VEC2
257     0   1    0    1
341     0   1    1    0
667     0   0    0    0
682     0   0    0    1
778     2   0    0    0
891     0   1    0    1
972     2   0    0    0
1009    0   1    0    0
1419    1   0    0    1
1487    1   1    1    1
1509    0   0    0    0
1510    1   1    1    1
1576    0   1    1    1
1625    0   1    1    1
1712    0   0    0    0
1714    0   0    1    1
1726    1   1    1    0
1812    0   1    1    0
1898    0   0    0    1
1976    0   1    1    0
2052    1   1    0    0
2095    0   1    0    0
2125    0   0    1    1
2133    0   1    1    1
2506    2   0    1    0
2799    0   0    0    0
2849    1   0    1    1
3041    2   1    0    1
3212    2   1    0    0
3326    0   1    0    1
3387    0   1    0    1
3438    2   1    1    1
3444    1   1    0    1
3718    0   0    1    0
3761    0   1    1    0
3763    1   1    1    1
3807    0   1    0    1
4097    0   0    1    0
4107    0   0    1    1
4187    1   1    1    0
4235    1   0    1    1
4277    2   0    0    0
4306    1   0    0    0
4374    0   0    1    1
4434    0   1    0    1
4452    2   0    1    1

D-Efficiency Approximation: [1] 0.42

Measuring design of size 46
Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = kkk
Code stats:
        Number of loops: 	36
        Max loop nest depth: 	5
        Additions: 		1614
        Multiplications: 	740
        Divisions: 		0
        Logical: 		0
        Reads: 			3295
        Writes: 		597
        Comparisons:		36
        Gotos: 			0
        
 compiling timer:
	gcc -O3 -fopenmp -DDYNAMIC -O0 -c -o timer_cpu.o timer_cpu.c
 building the original code:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -DORIGINAL -o __orio_perftest_original.exe __orio_perftest1.c timer_cpu.o -lm
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest1.exe __orio_perftest1.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest1.exe  
Program Test Output: 
{'[4, 1, 4, 2, 1, 2, 0, 1, 25, 3, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.349702}
{'[4, 1, 4, 2, 1, 2, 0, 1, 25, 3, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.347812}
{'[4, 1, 4, 2, 1, 2, 0, 1, 25, 3, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.351091}
{'[4, 1, 4, 2, 1, 2, 0, 1, 25, 3, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.347305}
{'[4, 1, 4, 2, 1, 2, 0, 1, 25, 3, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.347675}
{'[4, 1, 4, 2, 1, 2, 0, 1, 25, 3, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.346282}
{'[4, 1, 4, 2, 1, 2, 0, 1, 25, 3, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.342605}
{'[4, 1, 4, 2, 1, 2, 0, 1, 25, 3, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.348461}
{'[4, 1, 4, 2, 1, 2, 0, 1, 25, 3, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.350273}
{'[4, 1, 4, 2, 1, 2, 0, 1, 25, 3, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.349696}
{'[4, 1, 4, 2, 1, 2, 0, 1, 25, 3, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.351131}
{'[4, 1, 4, 2, 1, 2, 0, 1, 25, 3, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.346869}
{'[4, 1, 4, 2, 1, 2, 0, 1, 25, 3, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.349394}
{'[4, 1, 4, 2, 1, 2, 0, 1, 25, 3, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.350792}
{'[4, 1, 4, 2, 1, 2, 0, 1, 25, 3, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.347602}
{'[4, 1, 4, 2, 1, 2, 0, 1, 25, 3, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.345828}
{'[4, 1, 4, 2, 1, 2, 0, 1, 25, 3, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.348129}
{'[4, 1, 4, 2, 1, 2, 0, 1, 25, 3, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.347052}
{'[4, 1, 4, 2, 1, 2, 0, 1, 25, 3, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.345356}
{'[4, 1, 4, 2, 1, 2, 0, 1, 25, 3, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.429083}
{'[4, 1, 4, 2, 1, 2, 0, 1, 25, 3, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.443256}
{'[4, 1, 4, 2, 1, 2, 0, 1, 25, 3, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.443192}
{'[4, 1, 4, 2, 1, 2, 0, 1, 25, 3, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.445066}
{'[4, 1, 4, 2, 1, 2, 0, 1, 25, 3, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.444088}
{'[4, 1, 4, 2, 1, 2, 0, 1, 25, 3, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.445458}
{'[4, 1, 4, 2, 1, 2, 0, 1, 25, 3, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.392625}
{'[4, 1, 4, 2, 1, 2, 0, 1, 25, 3, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.216934}
{'[4, 1, 4, 2, 1, 2, 0, 1, 25, 3, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.211501}
{'[4, 1, 4, 2, 1, 2, 0, 1, 25, 3, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.23358}
{'[4, 1, 4, 2, 1, 2, 0, 1, 25, 3, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.220503}

out:
 ["{'[4, 1, 4, 2, 1, 2, 0, 1, 25, 3, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.349702}", "{'[4, 1, 4, 2, 1, 2, 0, 1, 25, 3, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.347812}", "{'[4, 1, 4, 2, 1, 2, 0, 1, 25, 3, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.351091}", "{'[4, 1, 4, 2, 1, 2, 0, 1, 25, 3, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.347305}", "{'[4, 1, 4, 2, 1, 2, 0, 1, 25, 3, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.347675}", "{'[4, 1, 4, 2, 1, 2, 0, 1, 25, 3, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.346282}", "{'[4, 1, 4, 2, 1, 2, 0, 1, 25, 3, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.342605}", "{'[4, 1, 4, 2, 1, 2, 0, 1, 25, 3, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.348461}", "{'[4, 1, 4, 2, 1, 2, 0, 1, 25, 3, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.350273}", "{'[4, 1, 4, 2, 1, 2, 0, 1, 25, 3, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.349696}", "{'[4, 1, 4, 2, 1, 2, 0, 1, 25, 3, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.351131}", "{'[4, 1, 4, 2, 1, 2, 0, 1, 25, 3, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.346869}", "{'[4, 1, 4, 2, 1, 2, 0, 1, 25, 3, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.349394}", "{'[4, 1, 4, 2, 1, 2, 0, 1, 25, 3, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.350792}", "{'[4, 1, 4, 2, 1, 2, 0, 1, 25, 3, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.347602}", "{'[4, 1, 4, 2, 1, 2, 0, 1, 25, 3, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.345828}", "{'[4, 1, 4, 2, 1, 2, 0, 1, 25, 3, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.348129}", "{'[4, 1, 4, 2, 1, 2, 0, 1, 25, 3, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.347052}", "{'[4, 1, 4, 2, 1, 2, 0, 1, 25, 3, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.345356}", "{'[4, 1, 4, 2, 1, 2, 0, 1, 25, 3, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.429083}", "{'[4, 1, 4, 2, 1, 2, 0, 1, 25, 3, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.443256}", "{'[4, 1, 4, 2, 1, 2, 0, 1, 25, 3, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.443192}", "{'[4, 1, 4, 2, 1, 2, 0, 1, 25, 3, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.445066}", "{'[4, 1, 4, 2, 1, 2, 0, 1, 25, 3, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.444088}", "{'[4, 1, 4, 2, 1, 2, 0, 1, 25, 3, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.445458}", "{'[4, 1, 4, 2, 1, 2, 0, 1, 25, 3, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.392625}", "{'[4, 1, 4, 2, 1, 2, 0, 1, 25, 3, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.216934}", "{'[4, 1, 4, 2, 1, 2, 0, 1, 25, 3, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.211501}", "{'[4, 1, 4, 2, 1, 2, 0, 1, 25, 3, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.23358}", "{'[4, 1, 4, 2, 1, 2, 0, 1, 25, 3, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.220503}"]
returning from 'run': {'[4, 1, 4, 2, 1, 2, 0, 1, 25, 3, 7, 0, 2, 0, 0, 1, 0, 1]': ([0.349702, 0.347812, 0.351091, 0.347305, 0.347675, 0.346282, 0.342605, 0.348461, 0.350273, 0.349696, 0.351131, 0.346869, 0.349394, 0.350792, 0.347602, 0.345828, 0.348129, 0.347052, 0.345356, 0.429083, 0.443256, 0.443192, 0.445066, 0.444088, 0.445458, 0.392625, 0.216934, 0.211501, 0.23358, 0.220503], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 1, 4, 2, 1, 2, 0, 1, 25, 3, 7, 0, 2, 0, 0, 1, 0, 1]': ([0.349702, 0.347812, 0.351091, 0.347305, 0.347675, 0.346282, 0.342605, 0.348461, 0.350273, 0.349696, 0.351131, 0.346869, 0.349394, 0.350792, 0.347602, 0.345828, 0.348129, 0.347052, 0.345356, 0.429083, 0.443256, 0.443192, 0.445066, 0.444088, 0.445458, 0.392625, 0.216934, 0.211501, 0.23358, 0.220503], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	65
        Max loop nest depth: 	4
        Additions: 		3827
        Multiplications: 	1782
        Divisions: 		0
        Logical: 		0
        Reads: 			7321
        Writes: 		1209
        Comparisons:		65
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest2.exe __orio_perftest2.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest2.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest2.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest2.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest2.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	87
        Max loop nest depth: 	5
        Additions: 		9316
        Multiplications: 	2340
        Divisions: 		0
        Logical: 		0
        Reads: 			13808
        Writes: 		1401
        Comparisons:		87
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest3.exe __orio_perftest3.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest3.exe  
Program Test Output: 
{'[0, 0, 4, 4, 6, 5, 1, 1, 0, 11, 23, 0, 2, 0, 0, 0, 0, 0]' : 0.291753}
{'[0, 0, 4, 4, 6, 5, 1, 1, 0, 11, 23, 0, 2, 0, 0, 0, 0, 0]' : 0.293178}
{'[0, 0, 4, 4, 6, 5, 1, 1, 0, 11, 23, 0, 2, 0, 0, 0, 0, 0]' : 0.29206}
{'[0, 0, 4, 4, 6, 5, 1, 1, 0, 11, 23, 0, 2, 0, 0, 0, 0, 0]' : 0.295112}
{'[0, 0, 4, 4, 6, 5, 1, 1, 0, 11, 23, 0, 2, 0, 0, 0, 0, 0]' : 0.290621}
{'[0, 0, 4, 4, 6, 5, 1, 1, 0, 11, 23, 0, 2, 0, 0, 0, 0, 0]' : 0.293491}
{'[0, 0, 4, 4, 6, 5, 1, 1, 0, 11, 23, 0, 2, 0, 0, 0, 0, 0]' : 0.290492}
{'[0, 0, 4, 4, 6, 5, 1, 1, 0, 11, 23, 0, 2, 0, 0, 0, 0, 0]' : 0.292778}
{'[0, 0, 4, 4, 6, 5, 1, 1, 0, 11, 23, 0, 2, 0, 0, 0, 0, 0]' : 0.291384}
{'[0, 0, 4, 4, 6, 5, 1, 1, 0, 11, 23, 0, 2, 0, 0, 0, 0, 0]' : 0.289204}
{'[0, 0, 4, 4, 6, 5, 1, 1, 0, 11, 23, 0, 2, 0, 0, 0, 0, 0]' : 0.291575}
{'[0, 0, 4, 4, 6, 5, 1, 1, 0, 11, 23, 0, 2, 0, 0, 0, 0, 0]' : 0.293628}
{'[0, 0, 4, 4, 6, 5, 1, 1, 0, 11, 23, 0, 2, 0, 0, 0, 0, 0]' : 0.29251}
{'[0, 0, 4, 4, 6, 5, 1, 1, 0, 11, 23, 0, 2, 0, 0, 0, 0, 0]' : 0.290589}
{'[0, 0, 4, 4, 6, 5, 1, 1, 0, 11, 23, 0, 2, 0, 0, 0, 0, 0]' : 0.296583}
{'[0, 0, 4, 4, 6, 5, 1, 1, 0, 11, 23, 0, 2, 0, 0, 0, 0, 0]' : 0.293124}
{'[0, 0, 4, 4, 6, 5, 1, 1, 0, 11, 23, 0, 2, 0, 0, 0, 0, 0]' : 0.291912}
{'[0, 0, 4, 4, 6, 5, 1, 1, 0, 11, 23, 0, 2, 0, 0, 0, 0, 0]' : 0.289842}
{'[0, 0, 4, 4, 6, 5, 1, 1, 0, 11, 23, 0, 2, 0, 0, 0, 0, 0]' : 0.292798}
{'[0, 0, 4, 4, 6, 5, 1, 1, 0, 11, 23, 0, 2, 0, 0, 0, 0, 0]' : 0.295137}
{'[0, 0, 4, 4, 6, 5, 1, 1, 0, 11, 23, 0, 2, 0, 0, 0, 0, 0]' : 0.290733}
{'[0, 0, 4, 4, 6, 5, 1, 1, 0, 11, 23, 0, 2, 0, 0, 0, 0, 0]' : 0.294447}
{'[0, 0, 4, 4, 6, 5, 1, 1, 0, 11, 23, 0, 2, 0, 0, 0, 0, 0]' : 0.292474}
{'[0, 0, 4, 4, 6, 5, 1, 1, 0, 11, 23, 0, 2, 0, 0, 0, 0, 0]' : 0.293711}
{'[0, 0, 4, 4, 6, 5, 1, 1, 0, 11, 23, 0, 2, 0, 0, 0, 0, 0]' : 0.291162}
{'[0, 0, 4, 4, 6, 5, 1, 1, 0, 11, 23, 0, 2, 0, 0, 0, 0, 0]' : 0.289763}
{'[0, 0, 4, 4, 6, 5, 1, 1, 0, 11, 23, 0, 2, 0, 0, 0, 0, 0]' : 0.290265}
{'[0, 0, 4, 4, 6, 5, 1, 1, 0, 11, 23, 0, 2, 0, 0, 0, 0, 0]' : 0.290632}
{'[0, 0, 4, 4, 6, 5, 1, 1, 0, 11, 23, 0, 2, 0, 0, 0, 0, 0]' : 0.29196}
{'[0, 0, 4, 4, 6, 5, 1, 1, 0, 11, 23, 0, 2, 0, 0, 0, 0, 0]' : 0.292819}

out:
 ["{'[0, 0, 4, 4, 6, 5, 1, 1, 0, 11, 23, 0, 2, 0, 0, 0, 0, 0]' : 0.291753}", "{'[0, 0, 4, 4, 6, 5, 1, 1, 0, 11, 23, 0, 2, 0, 0, 0, 0, 0]' : 0.293178}", "{'[0, 0, 4, 4, 6, 5, 1, 1, 0, 11, 23, 0, 2, 0, 0, 0, 0, 0]' : 0.29206}", "{'[0, 0, 4, 4, 6, 5, 1, 1, 0, 11, 23, 0, 2, 0, 0, 0, 0, 0]' : 0.295112}", "{'[0, 0, 4, 4, 6, 5, 1, 1, 0, 11, 23, 0, 2, 0, 0, 0, 0, 0]' : 0.290621}", "{'[0, 0, 4, 4, 6, 5, 1, 1, 0, 11, 23, 0, 2, 0, 0, 0, 0, 0]' : 0.293491}", "{'[0, 0, 4, 4, 6, 5, 1, 1, 0, 11, 23, 0, 2, 0, 0, 0, 0, 0]' : 0.290492}", "{'[0, 0, 4, 4, 6, 5, 1, 1, 0, 11, 23, 0, 2, 0, 0, 0, 0, 0]' : 0.292778}", "{'[0, 0, 4, 4, 6, 5, 1, 1, 0, 11, 23, 0, 2, 0, 0, 0, 0, 0]' : 0.291384}", "{'[0, 0, 4, 4, 6, 5, 1, 1, 0, 11, 23, 0, 2, 0, 0, 0, 0, 0]' : 0.289204}", "{'[0, 0, 4, 4, 6, 5, 1, 1, 0, 11, 23, 0, 2, 0, 0, 0, 0, 0]' : 0.291575}", "{'[0, 0, 4, 4, 6, 5, 1, 1, 0, 11, 23, 0, 2, 0, 0, 0, 0, 0]' : 0.293628}", "{'[0, 0, 4, 4, 6, 5, 1, 1, 0, 11, 23, 0, 2, 0, 0, 0, 0, 0]' : 0.29251}", "{'[0, 0, 4, 4, 6, 5, 1, 1, 0, 11, 23, 0, 2, 0, 0, 0, 0, 0]' : 0.290589}", "{'[0, 0, 4, 4, 6, 5, 1, 1, 0, 11, 23, 0, 2, 0, 0, 0, 0, 0]' : 0.296583}", "{'[0, 0, 4, 4, 6, 5, 1, 1, 0, 11, 23, 0, 2, 0, 0, 0, 0, 0]' : 0.293124}", "{'[0, 0, 4, 4, 6, 5, 1, 1, 0, 11, 23, 0, 2, 0, 0, 0, 0, 0]' : 0.291912}", "{'[0, 0, 4, 4, 6, 5, 1, 1, 0, 11, 23, 0, 2, 0, 0, 0, 0, 0]' : 0.289842}", "{'[0, 0, 4, 4, 6, 5, 1, 1, 0, 11, 23, 0, 2, 0, 0, 0, 0, 0]' : 0.292798}", "{'[0, 0, 4, 4, 6, 5, 1, 1, 0, 11, 23, 0, 2, 0, 0, 0, 0, 0]' : 0.295137}", "{'[0, 0, 4, 4, 6, 5, 1, 1, 0, 11, 23, 0, 2, 0, 0, 0, 0, 0]' : 0.290733}", "{'[0, 0, 4, 4, 6, 5, 1, 1, 0, 11, 23, 0, 2, 0, 0, 0, 0, 0]' : 0.294447}", "{'[0, 0, 4, 4, 6, 5, 1, 1, 0, 11, 23, 0, 2, 0, 0, 0, 0, 0]' : 0.292474}", "{'[0, 0, 4, 4, 6, 5, 1, 1, 0, 11, 23, 0, 2, 0, 0, 0, 0, 0]' : 0.293711}", "{'[0, 0, 4, 4, 6, 5, 1, 1, 0, 11, 23, 0, 2, 0, 0, 0, 0, 0]' : 0.291162}", "{'[0, 0, 4, 4, 6, 5, 1, 1, 0, 11, 23, 0, 2, 0, 0, 0, 0, 0]' : 0.289763}", "{'[0, 0, 4, 4, 6, 5, 1, 1, 0, 11, 23, 0, 2, 0, 0, 0, 0, 0]' : 0.290265}", "{'[0, 0, 4, 4, 6, 5, 1, 1, 0, 11, 23, 0, 2, 0, 0, 0, 0, 0]' : 0.290632}", "{'[0, 0, 4, 4, 6, 5, 1, 1, 0, 11, 23, 0, 2, 0, 0, 0, 0, 0]' : 0.29196}", "{'[0, 0, 4, 4, 6, 5, 1, 1, 0, 11, 23, 0, 2, 0, 0, 0, 0, 0]' : 0.292819}"]
returning from 'run': {'[0, 0, 4, 4, 6, 5, 1, 1, 0, 11, 23, 0, 2, 0, 0, 0, 0, 0]': ([0.291753, 0.293178, 0.29206, 0.295112, 0.290621, 0.293491, 0.290492, 0.292778, 0.291384, 0.289204, 0.291575, 0.293628, 0.29251, 0.290589, 0.296583, 0.293124, 0.291912, 0.289842, 0.292798, 0.295137, 0.290733, 0.294447, 0.292474, 0.293711, 0.291162, 0.289763, 0.290265, 0.290632, 0.29196, 0.292819], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 4, 4, 6, 5, 1, 1, 0, 11, 23, 0, 2, 0, 0, 0, 0, 0]': ([0.291753, 0.293178, 0.29206, 0.295112, 0.290621, 0.293491, 0.290492, 0.292778, 0.291384, 0.289204, 0.291575, 0.293628, 0.29251, 0.290589, 0.296583, 0.293124, 0.291912, 0.289842, 0.292798, 0.295137, 0.290733, 0.294447, 0.292474, 0.293711, 0.291162, 0.289763, 0.290265, 0.290632, 0.29196, 0.292819], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	5
        Additions: 		6018
        Multiplications: 	1584
        Divisions: 		0
        Logical: 		0
        Reads: 			8863
        Writes: 		859
        Comparisons:		16
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest4.exe __orio_perftest4.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest4.exe  
Program Test Output: 
{'[6, 6, 0, 6, 0, 0, 1, 0, 21, 0, 21, 0, 2, 0, 0, 0, 0, 1]' : 0.353135}
{'[6, 6, 0, 6, 0, 0, 1, 0, 21, 0, 21, 0, 2, 0, 0, 0, 0, 1]' : 0.334194}
{'[6, 6, 0, 6, 0, 0, 1, 0, 21, 0, 21, 0, 2, 0, 0, 0, 0, 1]' : 0.315296}
{'[6, 6, 0, 6, 0, 0, 1, 0, 21, 0, 21, 0, 2, 0, 0, 0, 0, 1]' : 0.314781}
{'[6, 6, 0, 6, 0, 0, 1, 0, 21, 0, 21, 0, 2, 0, 0, 0, 0, 1]' : 0.315488}
{'[6, 6, 0, 6, 0, 0, 1, 0, 21, 0, 21, 0, 2, 0, 0, 0, 0, 1]' : 0.313671}
{'[6, 6, 0, 6, 0, 0, 1, 0, 21, 0, 21, 0, 2, 0, 0, 0, 0, 1]' : 0.315553}
{'[6, 6, 0, 6, 0, 0, 1, 0, 21, 0, 21, 0, 2, 0, 0, 0, 0, 1]' : 0.31506}
{'[6, 6, 0, 6, 0, 0, 1, 0, 21, 0, 21, 0, 2, 0, 0, 0, 0, 1]' : 0.315047}
{'[6, 6, 0, 6, 0, 0, 1, 0, 21, 0, 21, 0, 2, 0, 0, 0, 0, 1]' : 0.315424}
{'[6, 6, 0, 6, 0, 0, 1, 0, 21, 0, 21, 0, 2, 0, 0, 0, 0, 1]' : 0.314505}
{'[6, 6, 0, 6, 0, 0, 1, 0, 21, 0, 21, 0, 2, 0, 0, 0, 0, 1]' : 0.314605}
{'[6, 6, 0, 6, 0, 0, 1, 0, 21, 0, 21, 0, 2, 0, 0, 0, 0, 1]' : 0.314241}
{'[6, 6, 0, 6, 0, 0, 1, 0, 21, 0, 21, 0, 2, 0, 0, 0, 0, 1]' : 0.314684}
{'[6, 6, 0, 6, 0, 0, 1, 0, 21, 0, 21, 0, 2, 0, 0, 0, 0, 1]' : 0.315619}
{'[6, 6, 0, 6, 0, 0, 1, 0, 21, 0, 21, 0, 2, 0, 0, 0, 0, 1]' : 0.313587}
{'[6, 6, 0, 6, 0, 0, 1, 0, 21, 0, 21, 0, 2, 0, 0, 0, 0, 1]' : 0.314756}
{'[6, 6, 0, 6, 0, 0, 1, 0, 21, 0, 21, 0, 2, 0, 0, 0, 0, 1]' : 0.315153}
{'[6, 6, 0, 6, 0, 0, 1, 0, 21, 0, 21, 0, 2, 0, 0, 0, 0, 1]' : 0.314806}
{'[6, 6, 0, 6, 0, 0, 1, 0, 21, 0, 21, 0, 2, 0, 0, 0, 0, 1]' : 0.314254}
{'[6, 6, 0, 6, 0, 0, 1, 0, 21, 0, 21, 0, 2, 0, 0, 0, 0, 1]' : 0.31447}
{'[6, 6, 0, 6, 0, 0, 1, 0, 21, 0, 21, 0, 2, 0, 0, 0, 0, 1]' : 0.314601}
{'[6, 6, 0, 6, 0, 0, 1, 0, 21, 0, 21, 0, 2, 0, 0, 0, 0, 1]' : 0.31385}
{'[6, 6, 0, 6, 0, 0, 1, 0, 21, 0, 21, 0, 2, 0, 0, 0, 0, 1]' : 0.314473}
{'[6, 6, 0, 6, 0, 0, 1, 0, 21, 0, 21, 0, 2, 0, 0, 0, 0, 1]' : 0.314196}
{'[6, 6, 0, 6, 0, 0, 1, 0, 21, 0, 21, 0, 2, 0, 0, 0, 0, 1]' : 0.314335}
{'[6, 6, 0, 6, 0, 0, 1, 0, 21, 0, 21, 0, 2, 0, 0, 0, 0, 1]' : 0.315542}
{'[6, 6, 0, 6, 0, 0, 1, 0, 21, 0, 21, 0, 2, 0, 0, 0, 0, 1]' : 0.314275}
{'[6, 6, 0, 6, 0, 0, 1, 0, 21, 0, 21, 0, 2, 0, 0, 0, 0, 1]' : 0.315096}
{'[6, 6, 0, 6, 0, 0, 1, 0, 21, 0, 21, 0, 2, 0, 0, 0, 0, 1]' : 0.316096}

out:
 ["{'[6, 6, 0, 6, 0, 0, 1, 0, 21, 0, 21, 0, 2, 0, 0, 0, 0, 1]' : 0.353135}", "{'[6, 6, 0, 6, 0, 0, 1, 0, 21, 0, 21, 0, 2, 0, 0, 0, 0, 1]' : 0.334194}", "{'[6, 6, 0, 6, 0, 0, 1, 0, 21, 0, 21, 0, 2, 0, 0, 0, 0, 1]' : 0.315296}", "{'[6, 6, 0, 6, 0, 0, 1, 0, 21, 0, 21, 0, 2, 0, 0, 0, 0, 1]' : 0.314781}", "{'[6, 6, 0, 6, 0, 0, 1, 0, 21, 0, 21, 0, 2, 0, 0, 0, 0, 1]' : 0.315488}", "{'[6, 6, 0, 6, 0, 0, 1, 0, 21, 0, 21, 0, 2, 0, 0, 0, 0, 1]' : 0.313671}", "{'[6, 6, 0, 6, 0, 0, 1, 0, 21, 0, 21, 0, 2, 0, 0, 0, 0, 1]' : 0.315553}", "{'[6, 6, 0, 6, 0, 0, 1, 0, 21, 0, 21, 0, 2, 0, 0, 0, 0, 1]' : 0.31506}", "{'[6, 6, 0, 6, 0, 0, 1, 0, 21, 0, 21, 0, 2, 0, 0, 0, 0, 1]' : 0.315047}", "{'[6, 6, 0, 6, 0, 0, 1, 0, 21, 0, 21, 0, 2, 0, 0, 0, 0, 1]' : 0.315424}", "{'[6, 6, 0, 6, 0, 0, 1, 0, 21, 0, 21, 0, 2, 0, 0, 0, 0, 1]' : 0.314505}", "{'[6, 6, 0, 6, 0, 0, 1, 0, 21, 0, 21, 0, 2, 0, 0, 0, 0, 1]' : 0.314605}", "{'[6, 6, 0, 6, 0, 0, 1, 0, 21, 0, 21, 0, 2, 0, 0, 0, 0, 1]' : 0.314241}", "{'[6, 6, 0, 6, 0, 0, 1, 0, 21, 0, 21, 0, 2, 0, 0, 0, 0, 1]' : 0.314684}", "{'[6, 6, 0, 6, 0, 0, 1, 0, 21, 0, 21, 0, 2, 0, 0, 0, 0, 1]' : 0.315619}", "{'[6, 6, 0, 6, 0, 0, 1, 0, 21, 0, 21, 0, 2, 0, 0, 0, 0, 1]' : 0.313587}", "{'[6, 6, 0, 6, 0, 0, 1, 0, 21, 0, 21, 0, 2, 0, 0, 0, 0, 1]' : 0.314756}", "{'[6, 6, 0, 6, 0, 0, 1, 0, 21, 0, 21, 0, 2, 0, 0, 0, 0, 1]' : 0.315153}", "{'[6, 6, 0, 6, 0, 0, 1, 0, 21, 0, 21, 0, 2, 0, 0, 0, 0, 1]' : 0.314806}", "{'[6, 6, 0, 6, 0, 0, 1, 0, 21, 0, 21, 0, 2, 0, 0, 0, 0, 1]' : 0.314254}", "{'[6, 6, 0, 6, 0, 0, 1, 0, 21, 0, 21, 0, 2, 0, 0, 0, 0, 1]' : 0.31447}", "{'[6, 6, 0, 6, 0, 0, 1, 0, 21, 0, 21, 0, 2, 0, 0, 0, 0, 1]' : 0.314601}", "{'[6, 6, 0, 6, 0, 0, 1, 0, 21, 0, 21, 0, 2, 0, 0, 0, 0, 1]' : 0.31385}", "{'[6, 6, 0, 6, 0, 0, 1, 0, 21, 0, 21, 0, 2, 0, 0, 0, 0, 1]' : 0.314473}", "{'[6, 6, 0, 6, 0, 0, 1, 0, 21, 0, 21, 0, 2, 0, 0, 0, 0, 1]' : 0.314196}", "{'[6, 6, 0, 6, 0, 0, 1, 0, 21, 0, 21, 0, 2, 0, 0, 0, 0, 1]' : 0.314335}", "{'[6, 6, 0, 6, 0, 0, 1, 0, 21, 0, 21, 0, 2, 0, 0, 0, 0, 1]' : 0.315542}", "{'[6, 6, 0, 6, 0, 0, 1, 0, 21, 0, 21, 0, 2, 0, 0, 0, 0, 1]' : 0.314275}", "{'[6, 6, 0, 6, 0, 0, 1, 0, 21, 0, 21, 0, 2, 0, 0, 0, 0, 1]' : 0.315096}", "{'[6, 6, 0, 6, 0, 0, 1, 0, 21, 0, 21, 0, 2, 0, 0, 0, 0, 1]' : 0.316096}"]
returning from 'run': {'[6, 6, 0, 6, 0, 0, 1, 0, 21, 0, 21, 0, 2, 0, 0, 0, 0, 1]': ([0.353135, 0.334194, 0.315296, 0.314781, 0.315488, 0.313671, 0.315553, 0.31506, 0.315047, 0.315424, 0.314505, 0.314605, 0.314241, 0.314684, 0.315619, 0.313587, 0.314756, 0.315153, 0.314806, 0.314254, 0.31447, 0.314601, 0.31385, 0.314473, 0.314196, 0.314335, 0.315542, 0.314275, 0.315096, 0.316096], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 0, 6, 0, 0, 1, 0, 21, 0, 21, 0, 2, 0, 0, 0, 0, 1]': ([0.353135, 0.334194, 0.315296, 0.314781, 0.315488, 0.313671, 0.315553, 0.31506, 0.315047, 0.315424, 0.314505, 0.314605, 0.314241, 0.314684, 0.315619, 0.313587, 0.314756, 0.315153, 0.314806, 0.314254, 0.31447, 0.314601, 0.31385, 0.314473, 0.314196, 0.314335, 0.315542, 0.314275, 0.315096, 0.316096], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	6
        Additions: 		286
        Multiplications: 	66
        Divisions: 		0
        Logical: 		0
        Reads: 			538
        Writes: 		88
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest5.exe __orio_perftest5.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest5.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest5.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest5.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest5.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		348
        Multiplications: 	142
        Divisions: 		0
        Logical: 		0
        Reads: 			752
        Writes: 		139
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest6.exe __orio_perftest6.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest6.exe  
Program Test Output: 
{'[4, 1, 0, 0, 6, 5, 0, 0, 10, 0, 26, 9, 0, 2, 0, 1, 0, 1]' : 0.19666}
{'[4, 1, 0, 0, 6, 5, 0, 0, 10, 0, 26, 9, 0, 2, 0, 1, 0, 1]' : 0.19678}
{'[4, 1, 0, 0, 6, 5, 0, 0, 10, 0, 26, 9, 0, 2, 0, 1, 0, 1]' : 0.172826}
{'[4, 1, 0, 0, 6, 5, 0, 0, 10, 0, 26, 9, 0, 2, 0, 1, 0, 1]' : 0.16409}
{'[4, 1, 0, 0, 6, 5, 0, 0, 10, 0, 26, 9, 0, 2, 0, 1, 0, 1]' : 0.163929}
{'[4, 1, 0, 0, 6, 5, 0, 0, 10, 0, 26, 9, 0, 2, 0, 1, 0, 1]' : 0.163984}
{'[4, 1, 0, 0, 6, 5, 0, 0, 10, 0, 26, 9, 0, 2, 0, 1, 0, 1]' : 0.164428}
{'[4, 1, 0, 0, 6, 5, 0, 0, 10, 0, 26, 9, 0, 2, 0, 1, 0, 1]' : 0.164089}
{'[4, 1, 0, 0, 6, 5, 0, 0, 10, 0, 26, 9, 0, 2, 0, 1, 0, 1]' : 0.163862}
{'[4, 1, 0, 0, 6, 5, 0, 0, 10, 0, 26, 9, 0, 2, 0, 1, 0, 1]' : 0.164102}
{'[4, 1, 0, 0, 6, 5, 0, 0, 10, 0, 26, 9, 0, 2, 0, 1, 0, 1]' : 0.164314}
{'[4, 1, 0, 0, 6, 5, 0, 0, 10, 0, 26, 9, 0, 2, 0, 1, 0, 1]' : 0.164073}
{'[4, 1, 0, 0, 6, 5, 0, 0, 10, 0, 26, 9, 0, 2, 0, 1, 0, 1]' : 0.164237}
{'[4, 1, 0, 0, 6, 5, 0, 0, 10, 0, 26, 9, 0, 2, 0, 1, 0, 1]' : 0.164354}
{'[4, 1, 0, 0, 6, 5, 0, 0, 10, 0, 26, 9, 0, 2, 0, 1, 0, 1]' : 0.164052}
{'[4, 1, 0, 0, 6, 5, 0, 0, 10, 0, 26, 9, 0, 2, 0, 1, 0, 1]' : 0.164157}
{'[4, 1, 0, 0, 6, 5, 0, 0, 10, 0, 26, 9, 0, 2, 0, 1, 0, 1]' : 0.164035}
{'[4, 1, 0, 0, 6, 5, 0, 0, 10, 0, 26, 9, 0, 2, 0, 1, 0, 1]' : 0.164022}
{'[4, 1, 0, 0, 6, 5, 0, 0, 10, 0, 26, 9, 0, 2, 0, 1, 0, 1]' : 0.163983}
{'[4, 1, 0, 0, 6, 5, 0, 0, 10, 0, 26, 9, 0, 2, 0, 1, 0, 1]' : 0.164182}
{'[4, 1, 0, 0, 6, 5, 0, 0, 10, 0, 26, 9, 0, 2, 0, 1, 0, 1]' : 0.164192}
{'[4, 1, 0, 0, 6, 5, 0, 0, 10, 0, 26, 9, 0, 2, 0, 1, 0, 1]' : 0.164658}
{'[4, 1, 0, 0, 6, 5, 0, 0, 10, 0, 26, 9, 0, 2, 0, 1, 0, 1]' : 0.164072}
{'[4, 1, 0, 0, 6, 5, 0, 0, 10, 0, 26, 9, 0, 2, 0, 1, 0, 1]' : 0.164088}
{'[4, 1, 0, 0, 6, 5, 0, 0, 10, 0, 26, 9, 0, 2, 0, 1, 0, 1]' : 0.164015}
{'[4, 1, 0, 0, 6, 5, 0, 0, 10, 0, 26, 9, 0, 2, 0, 1, 0, 1]' : 0.163957}
{'[4, 1, 0, 0, 6, 5, 0, 0, 10, 0, 26, 9, 0, 2, 0, 1, 0, 1]' : 0.16418}
{'[4, 1, 0, 0, 6, 5, 0, 0, 10, 0, 26, 9, 0, 2, 0, 1, 0, 1]' : 0.164222}
{'[4, 1, 0, 0, 6, 5, 0, 0, 10, 0, 26, 9, 0, 2, 0, 1, 0, 1]' : 0.164123}
{'[4, 1, 0, 0, 6, 5, 0, 0, 10, 0, 26, 9, 0, 2, 0, 1, 0, 1]' : 0.164102}

out:
 ["{'[4, 1, 0, 0, 6, 5, 0, 0, 10, 0, 26, 9, 0, 2, 0, 1, 0, 1]' : 0.19666}", "{'[4, 1, 0, 0, 6, 5, 0, 0, 10, 0, 26, 9, 0, 2, 0, 1, 0, 1]' : 0.19678}", "{'[4, 1, 0, 0, 6, 5, 0, 0, 10, 0, 26, 9, 0, 2, 0, 1, 0, 1]' : 0.172826}", "{'[4, 1, 0, 0, 6, 5, 0, 0, 10, 0, 26, 9, 0, 2, 0, 1, 0, 1]' : 0.16409}", "{'[4, 1, 0, 0, 6, 5, 0, 0, 10, 0, 26, 9, 0, 2, 0, 1, 0, 1]' : 0.163929}", "{'[4, 1, 0, 0, 6, 5, 0, 0, 10, 0, 26, 9, 0, 2, 0, 1, 0, 1]' : 0.163984}", "{'[4, 1, 0, 0, 6, 5, 0, 0, 10, 0, 26, 9, 0, 2, 0, 1, 0, 1]' : 0.164428}", "{'[4, 1, 0, 0, 6, 5, 0, 0, 10, 0, 26, 9, 0, 2, 0, 1, 0, 1]' : 0.164089}", "{'[4, 1, 0, 0, 6, 5, 0, 0, 10, 0, 26, 9, 0, 2, 0, 1, 0, 1]' : 0.163862}", "{'[4, 1, 0, 0, 6, 5, 0, 0, 10, 0, 26, 9, 0, 2, 0, 1, 0, 1]' : 0.164102}", "{'[4, 1, 0, 0, 6, 5, 0, 0, 10, 0, 26, 9, 0, 2, 0, 1, 0, 1]' : 0.164314}", "{'[4, 1, 0, 0, 6, 5, 0, 0, 10, 0, 26, 9, 0, 2, 0, 1, 0, 1]' : 0.164073}", "{'[4, 1, 0, 0, 6, 5, 0, 0, 10, 0, 26, 9, 0, 2, 0, 1, 0, 1]' : 0.164237}", "{'[4, 1, 0, 0, 6, 5, 0, 0, 10, 0, 26, 9, 0, 2, 0, 1, 0, 1]' : 0.164354}", "{'[4, 1, 0, 0, 6, 5, 0, 0, 10, 0, 26, 9, 0, 2, 0, 1, 0, 1]' : 0.164052}", "{'[4, 1, 0, 0, 6, 5, 0, 0, 10, 0, 26, 9, 0, 2, 0, 1, 0, 1]' : 0.164157}", "{'[4, 1, 0, 0, 6, 5, 0, 0, 10, 0, 26, 9, 0, 2, 0, 1, 0, 1]' : 0.164035}", "{'[4, 1, 0, 0, 6, 5, 0, 0, 10, 0, 26, 9, 0, 2, 0, 1, 0, 1]' : 0.164022}", "{'[4, 1, 0, 0, 6, 5, 0, 0, 10, 0, 26, 9, 0, 2, 0, 1, 0, 1]' : 0.163983}", "{'[4, 1, 0, 0, 6, 5, 0, 0, 10, 0, 26, 9, 0, 2, 0, 1, 0, 1]' : 0.164182}", "{'[4, 1, 0, 0, 6, 5, 0, 0, 10, 0, 26, 9, 0, 2, 0, 1, 0, 1]' : 0.164192}", "{'[4, 1, 0, 0, 6, 5, 0, 0, 10, 0, 26, 9, 0, 2, 0, 1, 0, 1]' : 0.164658}", "{'[4, 1, 0, 0, 6, 5, 0, 0, 10, 0, 26, 9, 0, 2, 0, 1, 0, 1]' : 0.164072}", "{'[4, 1, 0, 0, 6, 5, 0, 0, 10, 0, 26, 9, 0, 2, 0, 1, 0, 1]' : 0.164088}", "{'[4, 1, 0, 0, 6, 5, 0, 0, 10, 0, 26, 9, 0, 2, 0, 1, 0, 1]' : 0.164015}", "{'[4, 1, 0, 0, 6, 5, 0, 0, 10, 0, 26, 9, 0, 2, 0, 1, 0, 1]' : 0.163957}", "{'[4, 1, 0, 0, 6, 5, 0, 0, 10, 0, 26, 9, 0, 2, 0, 1, 0, 1]' : 0.16418}", "{'[4, 1, 0, 0, 6, 5, 0, 0, 10, 0, 26, 9, 0, 2, 0, 1, 0, 1]' : 0.164222}", "{'[4, 1, 0, 0, 6, 5, 0, 0, 10, 0, 26, 9, 0, 2, 0, 1, 0, 1]' : 0.164123}", "{'[4, 1, 0, 0, 6, 5, 0, 0, 10, 0, 26, 9, 0, 2, 0, 1, 0, 1]' : 0.164102}"]
returning from 'run': {'[4, 1, 0, 0, 6, 5, 0, 0, 10, 0, 26, 9, 0, 2, 0, 1, 0, 1]': ([0.19666, 0.19678, 0.172826, 0.16409, 0.163929, 0.163984, 0.164428, 0.164089, 0.163862, 0.164102, 0.164314, 0.164073, 0.164237, 0.164354, 0.164052, 0.164157, 0.164035, 0.164022, 0.163983, 0.164182, 0.164192, 0.164658, 0.164072, 0.164088, 0.164015, 0.163957, 0.16418, 0.164222, 0.164123, 0.164102], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 1, 0, 0, 6, 5, 0, 0, 10, 0, 26, 9, 0, 2, 0, 1, 0, 1]': ([0.19666, 0.19678, 0.172826, 0.16409, 0.163929, 0.163984, 0.164428, 0.164089, 0.163862, 0.164102, 0.164314, 0.164073, 0.164237, 0.164354, 0.164052, 0.164157, 0.164035, 0.164022, 0.163983, 0.164182, 0.164192, 0.164658, 0.164072, 0.164088, 0.164015, 0.163957, 0.16418, 0.164222, 0.164123, 0.164102], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		507
        Multiplications: 	182
        Divisions: 		0
        Logical: 		0
        Reads: 			1056
        Writes: 		126
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest7.exe __orio_perftest7.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest7.exe  
Program Test Output: 
{'[0, 6, 4, 4, 5, 4, 1, 0, 3, 0, 29, 26, 0, 0, 2, 0, 0, 0]' : 0.249758}
{'[0, 6, 4, 4, 5, 4, 1, 0, 3, 0, 29, 26, 0, 0, 2, 0, 0, 0]' : 0.249744}
{'[0, 6, 4, 4, 5, 4, 1, 0, 3, 0, 29, 26, 0, 0, 2, 0, 0, 0]' : 0.222568}
{'[0, 6, 4, 4, 5, 4, 1, 0, 3, 0, 29, 26, 0, 0, 2, 0, 0, 0]' : 0.210453}
{'[0, 6, 4, 4, 5, 4, 1, 0, 3, 0, 29, 26, 0, 0, 2, 0, 0, 0]' : 0.210995}
{'[0, 6, 4, 4, 5, 4, 1, 0, 3, 0, 29, 26, 0, 0, 2, 0, 0, 0]' : 0.210818}
{'[0, 6, 4, 4, 5, 4, 1, 0, 3, 0, 29, 26, 0, 0, 2, 0, 0, 0]' : 0.210873}
{'[0, 6, 4, 4, 5, 4, 1, 0, 3, 0, 29, 26, 0, 0, 2, 0, 0, 0]' : 0.210908}
{'[0, 6, 4, 4, 5, 4, 1, 0, 3, 0, 29, 26, 0, 0, 2, 0, 0, 0]' : 0.210827}
{'[0, 6, 4, 4, 5, 4, 1, 0, 3, 0, 29, 26, 0, 0, 2, 0, 0, 0]' : 0.211163}
{'[0, 6, 4, 4, 5, 4, 1, 0, 3, 0, 29, 26, 0, 0, 2, 0, 0, 0]' : 0.211077}
{'[0, 6, 4, 4, 5, 4, 1, 0, 3, 0, 29, 26, 0, 0, 2, 0, 0, 0]' : 0.210881}
{'[0, 6, 4, 4, 5, 4, 1, 0, 3, 0, 29, 26, 0, 0, 2, 0, 0, 0]' : 0.210737}
{'[0, 6, 4, 4, 5, 4, 1, 0, 3, 0, 29, 26, 0, 0, 2, 0, 0, 0]' : 0.210841}
{'[0, 6, 4, 4, 5, 4, 1, 0, 3, 0, 29, 26, 0, 0, 2, 0, 0, 0]' : 0.210966}
{'[0, 6, 4, 4, 5, 4, 1, 0, 3, 0, 29, 26, 0, 0, 2, 0, 0, 0]' : 0.211085}
{'[0, 6, 4, 4, 5, 4, 1, 0, 3, 0, 29, 26, 0, 0, 2, 0, 0, 0]' : 0.21092}
{'[0, 6, 4, 4, 5, 4, 1, 0, 3, 0, 29, 26, 0, 0, 2, 0, 0, 0]' : 0.210934}
{'[0, 6, 4, 4, 5, 4, 1, 0, 3, 0, 29, 26, 0, 0, 2, 0, 0, 0]' : 0.211052}
{'[0, 6, 4, 4, 5, 4, 1, 0, 3, 0, 29, 26, 0, 0, 2, 0, 0, 0]' : 0.210845}
{'[0, 6, 4, 4, 5, 4, 1, 0, 3, 0, 29, 26, 0, 0, 2, 0, 0, 0]' : 0.211141}
{'[0, 6, 4, 4, 5, 4, 1, 0, 3, 0, 29, 26, 0, 0, 2, 0, 0, 0]' : 0.210684}
{'[0, 6, 4, 4, 5, 4, 1, 0, 3, 0, 29, 26, 0, 0, 2, 0, 0, 0]' : 0.210705}
{'[0, 6, 4, 4, 5, 4, 1, 0, 3, 0, 29, 26, 0, 0, 2, 0, 0, 0]' : 0.211071}
{'[0, 6, 4, 4, 5, 4, 1, 0, 3, 0, 29, 26, 0, 0, 2, 0, 0, 0]' : 0.211007}
{'[0, 6, 4, 4, 5, 4, 1, 0, 3, 0, 29, 26, 0, 0, 2, 0, 0, 0]' : 0.211063}
{'[0, 6, 4, 4, 5, 4, 1, 0, 3, 0, 29, 26, 0, 0, 2, 0, 0, 0]' : 0.210729}
{'[0, 6, 4, 4, 5, 4, 1, 0, 3, 0, 29, 26, 0, 0, 2, 0, 0, 0]' : 0.211146}
{'[0, 6, 4, 4, 5, 4, 1, 0, 3, 0, 29, 26, 0, 0, 2, 0, 0, 0]' : 0.210771}
{'[0, 6, 4, 4, 5, 4, 1, 0, 3, 0, 29, 26, 0, 0, 2, 0, 0, 0]' : 0.210824}

out:
 ["{'[0, 6, 4, 4, 5, 4, 1, 0, 3, 0, 29, 26, 0, 0, 2, 0, 0, 0]' : 0.249758}", "{'[0, 6, 4, 4, 5, 4, 1, 0, 3, 0, 29, 26, 0, 0, 2, 0, 0, 0]' : 0.249744}", "{'[0, 6, 4, 4, 5, 4, 1, 0, 3, 0, 29, 26, 0, 0, 2, 0, 0, 0]' : 0.222568}", "{'[0, 6, 4, 4, 5, 4, 1, 0, 3, 0, 29, 26, 0, 0, 2, 0, 0, 0]' : 0.210453}", "{'[0, 6, 4, 4, 5, 4, 1, 0, 3, 0, 29, 26, 0, 0, 2, 0, 0, 0]' : 0.210995}", "{'[0, 6, 4, 4, 5, 4, 1, 0, 3, 0, 29, 26, 0, 0, 2, 0, 0, 0]' : 0.210818}", "{'[0, 6, 4, 4, 5, 4, 1, 0, 3, 0, 29, 26, 0, 0, 2, 0, 0, 0]' : 0.210873}", "{'[0, 6, 4, 4, 5, 4, 1, 0, 3, 0, 29, 26, 0, 0, 2, 0, 0, 0]' : 0.210908}", "{'[0, 6, 4, 4, 5, 4, 1, 0, 3, 0, 29, 26, 0, 0, 2, 0, 0, 0]' : 0.210827}", "{'[0, 6, 4, 4, 5, 4, 1, 0, 3, 0, 29, 26, 0, 0, 2, 0, 0, 0]' : 0.211163}", "{'[0, 6, 4, 4, 5, 4, 1, 0, 3, 0, 29, 26, 0, 0, 2, 0, 0, 0]' : 0.211077}", "{'[0, 6, 4, 4, 5, 4, 1, 0, 3, 0, 29, 26, 0, 0, 2, 0, 0, 0]' : 0.210881}", "{'[0, 6, 4, 4, 5, 4, 1, 0, 3, 0, 29, 26, 0, 0, 2, 0, 0, 0]' : 0.210737}", "{'[0, 6, 4, 4, 5, 4, 1, 0, 3, 0, 29, 26, 0, 0, 2, 0, 0, 0]' : 0.210841}", "{'[0, 6, 4, 4, 5, 4, 1, 0, 3, 0, 29, 26, 0, 0, 2, 0, 0, 0]' : 0.210966}", "{'[0, 6, 4, 4, 5, 4, 1, 0, 3, 0, 29, 26, 0, 0, 2, 0, 0, 0]' : 0.211085}", "{'[0, 6, 4, 4, 5, 4, 1, 0, 3, 0, 29, 26, 0, 0, 2, 0, 0, 0]' : 0.21092}", "{'[0, 6, 4, 4, 5, 4, 1, 0, 3, 0, 29, 26, 0, 0, 2, 0, 0, 0]' : 0.210934}", "{'[0, 6, 4, 4, 5, 4, 1, 0, 3, 0, 29, 26, 0, 0, 2, 0, 0, 0]' : 0.211052}", "{'[0, 6, 4, 4, 5, 4, 1, 0, 3, 0, 29, 26, 0, 0, 2, 0, 0, 0]' : 0.210845}", "{'[0, 6, 4, 4, 5, 4, 1, 0, 3, 0, 29, 26, 0, 0, 2, 0, 0, 0]' : 0.211141}", "{'[0, 6, 4, 4, 5, 4, 1, 0, 3, 0, 29, 26, 0, 0, 2, 0, 0, 0]' : 0.210684}", "{'[0, 6, 4, 4, 5, 4, 1, 0, 3, 0, 29, 26, 0, 0, 2, 0, 0, 0]' : 0.210705}", "{'[0, 6, 4, 4, 5, 4, 1, 0, 3, 0, 29, 26, 0, 0, 2, 0, 0, 0]' : 0.211071}", "{'[0, 6, 4, 4, 5, 4, 1, 0, 3, 0, 29, 26, 0, 0, 2, 0, 0, 0]' : 0.211007}", "{'[0, 6, 4, 4, 5, 4, 1, 0, 3, 0, 29, 26, 0, 0, 2, 0, 0, 0]' : 0.211063}", "{'[0, 6, 4, 4, 5, 4, 1, 0, 3, 0, 29, 26, 0, 0, 2, 0, 0, 0]' : 0.210729}", "{'[0, 6, 4, 4, 5, 4, 1, 0, 3, 0, 29, 26, 0, 0, 2, 0, 0, 0]' : 0.211146}", "{'[0, 6, 4, 4, 5, 4, 1, 0, 3, 0, 29, 26, 0, 0, 2, 0, 0, 0]' : 0.210771}", "{'[0, 6, 4, 4, 5, 4, 1, 0, 3, 0, 29, 26, 0, 0, 2, 0, 0, 0]' : 0.210824}"]
returning from 'run': {'[0, 6, 4, 4, 5, 4, 1, 0, 3, 0, 29, 26, 0, 0, 2, 0, 0, 0]': ([0.249758, 0.249744, 0.222568, 0.210453, 0.210995, 0.210818, 0.210873, 0.210908, 0.210827, 0.211163, 0.211077, 0.210881, 0.210737, 0.210841, 0.210966, 0.211085, 0.21092, 0.210934, 0.211052, 0.210845, 0.211141, 0.210684, 0.210705, 0.211071, 0.211007, 0.211063, 0.210729, 0.211146, 0.210771, 0.210824], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 4, 4, 5, 4, 1, 0, 3, 0, 29, 26, 0, 0, 2, 0, 0, 0]': ([0.249758, 0.249744, 0.222568, 0.210453, 0.210995, 0.210818, 0.210873, 0.210908, 0.210827, 0.211163, 0.211077, 0.210881, 0.210737, 0.210841, 0.210966, 0.211085, 0.21092, 0.210934, 0.211052, 0.210845, 0.211141, 0.210684, 0.210705, 0.211071, 0.211007, 0.211063, 0.210729, 0.211146, 0.210771, 0.210824], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		192
        Multiplications: 	48
        Divisions: 		0
        Logical: 		0
        Reads: 			392
        Writes: 		79
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest8.exe __orio_perftest8.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest8.exe  
Program Test Output: 
{'[6, 0, 6, 6, 5, 0, 1, 1, 5, 0, 15, 5, 0, 0, 0, 1, 0, 0]' : 0.262499}
{'[6, 0, 6, 6, 5, 0, 1, 1, 5, 0, 15, 5, 0, 0, 0, 1, 0, 0]' : 0.262478}
{'[6, 0, 6, 6, 5, 0, 1, 1, 5, 0, 15, 5, 0, 0, 0, 1, 0, 0]' : 0.224555}
{'[6, 0, 6, 6, 5, 0, 1, 1, 5, 0, 15, 5, 0, 0, 0, 1, 0, 0]' : 0.220008}
{'[6, 0, 6, 6, 5, 0, 1, 1, 5, 0, 15, 5, 0, 0, 0, 1, 0, 0]' : 0.220194}
{'[6, 0, 6, 6, 5, 0, 1, 1, 5, 0, 15, 5, 0, 0, 0, 1, 0, 0]' : 0.219846}
{'[6, 0, 6, 6, 5, 0, 1, 1, 5, 0, 15, 5, 0, 0, 0, 1, 0, 0]' : 0.219754}
{'[6, 0, 6, 6, 5, 0, 1, 1, 5, 0, 15, 5, 0, 0, 0, 1, 0, 0]' : 0.220141}
{'[6, 0, 6, 6, 5, 0, 1, 1, 5, 0, 15, 5, 0, 0, 0, 1, 0, 0]' : 0.220113}
{'[6, 0, 6, 6, 5, 0, 1, 1, 5, 0, 15, 5, 0, 0, 0, 1, 0, 0]' : 0.220101}
{'[6, 0, 6, 6, 5, 0, 1, 1, 5, 0, 15, 5, 0, 0, 0, 1, 0, 0]' : 0.219887}
{'[6, 0, 6, 6, 5, 0, 1, 1, 5, 0, 15, 5, 0, 0, 0, 1, 0, 0]' : 0.220103}
{'[6, 0, 6, 6, 5, 0, 1, 1, 5, 0, 15, 5, 0, 0, 0, 1, 0, 0]' : 0.219725}
{'[6, 0, 6, 6, 5, 0, 1, 1, 5, 0, 15, 5, 0, 0, 0, 1, 0, 0]' : 0.22}
{'[6, 0, 6, 6, 5, 0, 1, 1, 5, 0, 15, 5, 0, 0, 0, 1, 0, 0]' : 0.220029}
{'[6, 0, 6, 6, 5, 0, 1, 1, 5, 0, 15, 5, 0, 0, 0, 1, 0, 0]' : 0.219929}
{'[6, 0, 6, 6, 5, 0, 1, 1, 5, 0, 15, 5, 0, 0, 0, 1, 0, 0]' : 0.219847}
{'[6, 0, 6, 6, 5, 0, 1, 1, 5, 0, 15, 5, 0, 0, 0, 1, 0, 0]' : 0.220114}
{'[6, 0, 6, 6, 5, 0, 1, 1, 5, 0, 15, 5, 0, 0, 0, 1, 0, 0]' : 0.220303}
{'[6, 0, 6, 6, 5, 0, 1, 1, 5, 0, 15, 5, 0, 0, 0, 1, 0, 0]' : 0.220146}
{'[6, 0, 6, 6, 5, 0, 1, 1, 5, 0, 15, 5, 0, 0, 0, 1, 0, 0]' : 0.219759}
{'[6, 0, 6, 6, 5, 0, 1, 1, 5, 0, 15, 5, 0, 0, 0, 1, 0, 0]' : 0.219845}
{'[6, 0, 6, 6, 5, 0, 1, 1, 5, 0, 15, 5, 0, 0, 0, 1, 0, 0]' : 0.219993}
{'[6, 0, 6, 6, 5, 0, 1, 1, 5, 0, 15, 5, 0, 0, 0, 1, 0, 0]' : 0.220155}
{'[6, 0, 6, 6, 5, 0, 1, 1, 5, 0, 15, 5, 0, 0, 0, 1, 0, 0]' : 0.220218}
{'[6, 0, 6, 6, 5, 0, 1, 1, 5, 0, 15, 5, 0, 0, 0, 1, 0, 0]' : 0.220397}
{'[6, 0, 6, 6, 5, 0, 1, 1, 5, 0, 15, 5, 0, 0, 0, 1, 0, 0]' : 0.219801}
{'[6, 0, 6, 6, 5, 0, 1, 1, 5, 0, 15, 5, 0, 0, 0, 1, 0, 0]' : 0.220163}
{'[6, 0, 6, 6, 5, 0, 1, 1, 5, 0, 15, 5, 0, 0, 0, 1, 0, 0]' : 0.219956}
{'[6, 0, 6, 6, 5, 0, 1, 1, 5, 0, 15, 5, 0, 0, 0, 1, 0, 0]' : 0.220269}

out:
 ["{'[6, 0, 6, 6, 5, 0, 1, 1, 5, 0, 15, 5, 0, 0, 0, 1, 0, 0]' : 0.262499}", "{'[6, 0, 6, 6, 5, 0, 1, 1, 5, 0, 15, 5, 0, 0, 0, 1, 0, 0]' : 0.262478}", "{'[6, 0, 6, 6, 5, 0, 1, 1, 5, 0, 15, 5, 0, 0, 0, 1, 0, 0]' : 0.224555}", "{'[6, 0, 6, 6, 5, 0, 1, 1, 5, 0, 15, 5, 0, 0, 0, 1, 0, 0]' : 0.220008}", "{'[6, 0, 6, 6, 5, 0, 1, 1, 5, 0, 15, 5, 0, 0, 0, 1, 0, 0]' : 0.220194}", "{'[6, 0, 6, 6, 5, 0, 1, 1, 5, 0, 15, 5, 0, 0, 0, 1, 0, 0]' : 0.219846}", "{'[6, 0, 6, 6, 5, 0, 1, 1, 5, 0, 15, 5, 0, 0, 0, 1, 0, 0]' : 0.219754}", "{'[6, 0, 6, 6, 5, 0, 1, 1, 5, 0, 15, 5, 0, 0, 0, 1, 0, 0]' : 0.220141}", "{'[6, 0, 6, 6, 5, 0, 1, 1, 5, 0, 15, 5, 0, 0, 0, 1, 0, 0]' : 0.220113}", "{'[6, 0, 6, 6, 5, 0, 1, 1, 5, 0, 15, 5, 0, 0, 0, 1, 0, 0]' : 0.220101}", "{'[6, 0, 6, 6, 5, 0, 1, 1, 5, 0, 15, 5, 0, 0, 0, 1, 0, 0]' : 0.219887}", "{'[6, 0, 6, 6, 5, 0, 1, 1, 5, 0, 15, 5, 0, 0, 0, 1, 0, 0]' : 0.220103}", "{'[6, 0, 6, 6, 5, 0, 1, 1, 5, 0, 15, 5, 0, 0, 0, 1, 0, 0]' : 0.219725}", "{'[6, 0, 6, 6, 5, 0, 1, 1, 5, 0, 15, 5, 0, 0, 0, 1, 0, 0]' : 0.22}", "{'[6, 0, 6, 6, 5, 0, 1, 1, 5, 0, 15, 5, 0, 0, 0, 1, 0, 0]' : 0.220029}", "{'[6, 0, 6, 6, 5, 0, 1, 1, 5, 0, 15, 5, 0, 0, 0, 1, 0, 0]' : 0.219929}", "{'[6, 0, 6, 6, 5, 0, 1, 1, 5, 0, 15, 5, 0, 0, 0, 1, 0, 0]' : 0.219847}", "{'[6, 0, 6, 6, 5, 0, 1, 1, 5, 0, 15, 5, 0, 0, 0, 1, 0, 0]' : 0.220114}", "{'[6, 0, 6, 6, 5, 0, 1, 1, 5, 0, 15, 5, 0, 0, 0, 1, 0, 0]' : 0.220303}", "{'[6, 0, 6, 6, 5, 0, 1, 1, 5, 0, 15, 5, 0, 0, 0, 1, 0, 0]' : 0.220146}", "{'[6, 0, 6, 6, 5, 0, 1, 1, 5, 0, 15, 5, 0, 0, 0, 1, 0, 0]' : 0.219759}", "{'[6, 0, 6, 6, 5, 0, 1, 1, 5, 0, 15, 5, 0, 0, 0, 1, 0, 0]' : 0.219845}", "{'[6, 0, 6, 6, 5, 0, 1, 1, 5, 0, 15, 5, 0, 0, 0, 1, 0, 0]' : 0.219993}", "{'[6, 0, 6, 6, 5, 0, 1, 1, 5, 0, 15, 5, 0, 0, 0, 1, 0, 0]' : 0.220155}", "{'[6, 0, 6, 6, 5, 0, 1, 1, 5, 0, 15, 5, 0, 0, 0, 1, 0, 0]' : 0.220218}", "{'[6, 0, 6, 6, 5, 0, 1, 1, 5, 0, 15, 5, 0, 0, 0, 1, 0, 0]' : 0.220397}", "{'[6, 0, 6, 6, 5, 0, 1, 1, 5, 0, 15, 5, 0, 0, 0, 1, 0, 0]' : 0.219801}", "{'[6, 0, 6, 6, 5, 0, 1, 1, 5, 0, 15, 5, 0, 0, 0, 1, 0, 0]' : 0.220163}", "{'[6, 0, 6, 6, 5, 0, 1, 1, 5, 0, 15, 5, 0, 0, 0, 1, 0, 0]' : 0.219956}", "{'[6, 0, 6, 6, 5, 0, 1, 1, 5, 0, 15, 5, 0, 0, 0, 1, 0, 0]' : 0.220269}"]
returning from 'run': {'[6, 0, 6, 6, 5, 0, 1, 1, 5, 0, 15, 5, 0, 0, 0, 1, 0, 0]': ([0.262499, 0.262478, 0.224555, 0.220008, 0.220194, 0.219846, 0.219754, 0.220141, 0.220113, 0.220101, 0.219887, 0.220103, 0.219725, 0.22, 0.220029, 0.219929, 0.219847, 0.220114, 0.220303, 0.220146, 0.219759, 0.219845, 0.219993, 0.220155, 0.220218, 0.220397, 0.219801, 0.220163, 0.219956, 0.220269], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 6, 6, 5, 0, 1, 1, 5, 0, 15, 5, 0, 0, 0, 1, 0, 0]': ([0.262499, 0.262478, 0.224555, 0.220008, 0.220194, 0.219846, 0.219754, 0.220141, 0.220113, 0.220101, 0.219887, 0.220103, 0.219725, 0.22, 0.220029, 0.219929, 0.219847, 0.220114, 0.220303, 0.220146, 0.219759, 0.219845, 0.219993, 0.220155, 0.220218, 0.220397, 0.219801, 0.220163, 0.219956, 0.220269], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = jjj
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = kkk
Code stats:
        Number of loops: 	23
        Max loop nest depth: 	4
        Additions: 		824
        Multiplications: 	256
        Divisions: 		0
        Logical: 		0
        Reads: 			1507
        Writes: 		203
        Comparisons:		23
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest9.exe __orio_perftest9.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest9.exe  
Program Test Output: 
{'[5, 4, 5, 0, 2, 3, 0, 0, 5, 2, 0, 13, 0, 1, 1, 0, 0, 1]' : 0.135511}
{'[5, 4, 5, 0, 2, 3, 0, 0, 5, 2, 0, 13, 0, 1, 1, 0, 0, 1]' : 0.135089}
{'[5, 4, 5, 0, 2, 3, 0, 0, 5, 2, 0, 13, 0, 1, 1, 0, 0, 1]' : 0.135202}
{'[5, 4, 5, 0, 2, 3, 0, 0, 5, 2, 0, 13, 0, 1, 1, 0, 0, 1]' : 0.13139}
{'[5, 4, 5, 0, 2, 3, 0, 0, 5, 2, 0, 13, 0, 1, 1, 0, 0, 1]' : 0.115372}
{'[5, 4, 5, 0, 2, 3, 0, 0, 5, 2, 0, 13, 0, 1, 1, 0, 0, 1]' : 0.115395}
{'[5, 4, 5, 0, 2, 3, 0, 0, 5, 2, 0, 13, 0, 1, 1, 0, 0, 1]' : 0.115077}
{'[5, 4, 5, 0, 2, 3, 0, 0, 5, 2, 0, 13, 0, 1, 1, 0, 0, 1]' : 0.114885}
{'[5, 4, 5, 0, 2, 3, 0, 0, 5, 2, 0, 13, 0, 1, 1, 0, 0, 1]' : 0.114902}
{'[5, 4, 5, 0, 2, 3, 0, 0, 5, 2, 0, 13, 0, 1, 1, 0, 0, 1]' : 0.115206}
{'[5, 4, 5, 0, 2, 3, 0, 0, 5, 2, 0, 13, 0, 1, 1, 0, 0, 1]' : 0.115009}
{'[5, 4, 5, 0, 2, 3, 0, 0, 5, 2, 0, 13, 0, 1, 1, 0, 0, 1]' : 0.114944}
{'[5, 4, 5, 0, 2, 3, 0, 0, 5, 2, 0, 13, 0, 1, 1, 0, 0, 1]' : 0.115164}
{'[5, 4, 5, 0, 2, 3, 0, 0, 5, 2, 0, 13, 0, 1, 1, 0, 0, 1]' : 0.115167}
{'[5, 4, 5, 0, 2, 3, 0, 0, 5, 2, 0, 13, 0, 1, 1, 0, 0, 1]' : 0.115195}
{'[5, 4, 5, 0, 2, 3, 0, 0, 5, 2, 0, 13, 0, 1, 1, 0, 0, 1]' : 0.114962}
{'[5, 4, 5, 0, 2, 3, 0, 0, 5, 2, 0, 13, 0, 1, 1, 0, 0, 1]' : 0.1149}
{'[5, 4, 5, 0, 2, 3, 0, 0, 5, 2, 0, 13, 0, 1, 1, 0, 0, 1]' : 0.11464}
{'[5, 4, 5, 0, 2, 3, 0, 0, 5, 2, 0, 13, 0, 1, 1, 0, 0, 1]' : 0.114446}
{'[5, 4, 5, 0, 2, 3, 0, 0, 5, 2, 0, 13, 0, 1, 1, 0, 0, 1]' : 0.114724}
{'[5, 4, 5, 0, 2, 3, 0, 0, 5, 2, 0, 13, 0, 1, 1, 0, 0, 1]' : 0.114781}
{'[5, 4, 5, 0, 2, 3, 0, 0, 5, 2, 0, 13, 0, 1, 1, 0, 0, 1]' : 0.114576}
{'[5, 4, 5, 0, 2, 3, 0, 0, 5, 2, 0, 13, 0, 1, 1, 0, 0, 1]' : 0.114842}
{'[5, 4, 5, 0, 2, 3, 0, 0, 5, 2, 0, 13, 0, 1, 1, 0, 0, 1]' : 0.114643}
{'[5, 4, 5, 0, 2, 3, 0, 0, 5, 2, 0, 13, 0, 1, 1, 0, 0, 1]' : 0.11461}
{'[5, 4, 5, 0, 2, 3, 0, 0, 5, 2, 0, 13, 0, 1, 1, 0, 0, 1]' : 0.1147}
{'[5, 4, 5, 0, 2, 3, 0, 0, 5, 2, 0, 13, 0, 1, 1, 0, 0, 1]' : 0.114744}
{'[5, 4, 5, 0, 2, 3, 0, 0, 5, 2, 0, 13, 0, 1, 1, 0, 0, 1]' : 0.114535}
{'[5, 4, 5, 0, 2, 3, 0, 0, 5, 2, 0, 13, 0, 1, 1, 0, 0, 1]' : 0.114956}
{'[5, 4, 5, 0, 2, 3, 0, 0, 5, 2, 0, 13, 0, 1, 1, 0, 0, 1]' : 0.115084}

out:
 ["{'[5, 4, 5, 0, 2, 3, 0, 0, 5, 2, 0, 13, 0, 1, 1, 0, 0, 1]' : 0.135511}", "{'[5, 4, 5, 0, 2, 3, 0, 0, 5, 2, 0, 13, 0, 1, 1, 0, 0, 1]' : 0.135089}", "{'[5, 4, 5, 0, 2, 3, 0, 0, 5, 2, 0, 13, 0, 1, 1, 0, 0, 1]' : 0.135202}", "{'[5, 4, 5, 0, 2, 3, 0, 0, 5, 2, 0, 13, 0, 1, 1, 0, 0, 1]' : 0.13139}", "{'[5, 4, 5, 0, 2, 3, 0, 0, 5, 2, 0, 13, 0, 1, 1, 0, 0, 1]' : 0.115372}", "{'[5, 4, 5, 0, 2, 3, 0, 0, 5, 2, 0, 13, 0, 1, 1, 0, 0, 1]' : 0.115395}", "{'[5, 4, 5, 0, 2, 3, 0, 0, 5, 2, 0, 13, 0, 1, 1, 0, 0, 1]' : 0.115077}", "{'[5, 4, 5, 0, 2, 3, 0, 0, 5, 2, 0, 13, 0, 1, 1, 0, 0, 1]' : 0.114885}", "{'[5, 4, 5, 0, 2, 3, 0, 0, 5, 2, 0, 13, 0, 1, 1, 0, 0, 1]' : 0.114902}", "{'[5, 4, 5, 0, 2, 3, 0, 0, 5, 2, 0, 13, 0, 1, 1, 0, 0, 1]' : 0.115206}", "{'[5, 4, 5, 0, 2, 3, 0, 0, 5, 2, 0, 13, 0, 1, 1, 0, 0, 1]' : 0.115009}", "{'[5, 4, 5, 0, 2, 3, 0, 0, 5, 2, 0, 13, 0, 1, 1, 0, 0, 1]' : 0.114944}", "{'[5, 4, 5, 0, 2, 3, 0, 0, 5, 2, 0, 13, 0, 1, 1, 0, 0, 1]' : 0.115164}", "{'[5, 4, 5, 0, 2, 3, 0, 0, 5, 2, 0, 13, 0, 1, 1, 0, 0, 1]' : 0.115167}", "{'[5, 4, 5, 0, 2, 3, 0, 0, 5, 2, 0, 13, 0, 1, 1, 0, 0, 1]' : 0.115195}", "{'[5, 4, 5, 0, 2, 3, 0, 0, 5, 2, 0, 13, 0, 1, 1, 0, 0, 1]' : 0.114962}", "{'[5, 4, 5, 0, 2, 3, 0, 0, 5, 2, 0, 13, 0, 1, 1, 0, 0, 1]' : 0.1149}", "{'[5, 4, 5, 0, 2, 3, 0, 0, 5, 2, 0, 13, 0, 1, 1, 0, 0, 1]' : 0.11464}", "{'[5, 4, 5, 0, 2, 3, 0, 0, 5, 2, 0, 13, 0, 1, 1, 0, 0, 1]' : 0.114446}", "{'[5, 4, 5, 0, 2, 3, 0, 0, 5, 2, 0, 13, 0, 1, 1, 0, 0, 1]' : 0.114724}", "{'[5, 4, 5, 0, 2, 3, 0, 0, 5, 2, 0, 13, 0, 1, 1, 0, 0, 1]' : 0.114781}", "{'[5, 4, 5, 0, 2, 3, 0, 0, 5, 2, 0, 13, 0, 1, 1, 0, 0, 1]' : 0.114576}", "{'[5, 4, 5, 0, 2, 3, 0, 0, 5, 2, 0, 13, 0, 1, 1, 0, 0, 1]' : 0.114842}", "{'[5, 4, 5, 0, 2, 3, 0, 0, 5, 2, 0, 13, 0, 1, 1, 0, 0, 1]' : 0.114643}", "{'[5, 4, 5, 0, 2, 3, 0, 0, 5, 2, 0, 13, 0, 1, 1, 0, 0, 1]' : 0.11461}", "{'[5, 4, 5, 0, 2, 3, 0, 0, 5, 2, 0, 13, 0, 1, 1, 0, 0, 1]' : 0.1147}", "{'[5, 4, 5, 0, 2, 3, 0, 0, 5, 2, 0, 13, 0, 1, 1, 0, 0, 1]' : 0.114744}", "{'[5, 4, 5, 0, 2, 3, 0, 0, 5, 2, 0, 13, 0, 1, 1, 0, 0, 1]' : 0.114535}", "{'[5, 4, 5, 0, 2, 3, 0, 0, 5, 2, 0, 13, 0, 1, 1, 0, 0, 1]' : 0.114956}", "{'[5, 4, 5, 0, 2, 3, 0, 0, 5, 2, 0, 13, 0, 1, 1, 0, 0, 1]' : 0.115084}"]
returning from 'run': {'[5, 4, 5, 0, 2, 3, 0, 0, 5, 2, 0, 13, 0, 1, 1, 0, 0, 1]': ([0.135511, 0.135089, 0.135202, 0.13139, 0.115372, 0.115395, 0.115077, 0.114885, 0.114902, 0.115206, 0.115009, 0.114944, 0.115164, 0.115167, 0.115195, 0.114962, 0.1149, 0.11464, 0.114446, 0.114724, 0.114781, 0.114576, 0.114842, 0.114643, 0.11461, 0.1147, 0.114744, 0.114535, 0.114956, 0.115084], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 4, 5, 0, 2, 3, 0, 0, 5, 2, 0, 13, 0, 1, 1, 0, 0, 1]': ([0.135511, 0.135089, 0.135202, 0.13139, 0.115372, 0.115395, 0.115077, 0.114885, 0.114902, 0.115206, 0.115009, 0.114944, 0.115164, 0.115167, 0.115195, 0.114962, 0.1149, 0.11464, 0.114446, 0.114724, 0.114781, 0.114576, 0.114842, 0.114643, 0.11461, 0.1147, 0.114744, 0.114535, 0.114956, 0.115084], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = iii
Code stats:
        Number of loops: 	31
        Max loop nest depth: 	5
        Additions: 		490
        Multiplications: 	160
        Divisions: 		0
        Logical: 		0
        Reads: 			1067
        Writes: 		218
        Comparisons:		31
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest10.exe __orio_perftest10.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest10.exe  
Program Test Output: 
{'[5, 2, 6, 3, 1, 5, 1, 1, 0, 3, 0, 10, 0, 1, 1, 1, 1, 1]' : 0.18431}
{'[5, 2, 6, 3, 1, 5, 1, 1, 0, 3, 0, 10, 0, 1, 1, 1, 1, 1]' : 0.184144}
{'[5, 2, 6, 3, 1, 5, 1, 1, 0, 3, 0, 10, 0, 1, 1, 1, 1, 1]' : 0.175182}
{'[5, 2, 6, 3, 1, 5, 1, 1, 0, 3, 0, 10, 0, 1, 1, 1, 1, 1]' : 0.159591}
{'[5, 2, 6, 3, 1, 5, 1, 1, 0, 3, 0, 10, 0, 1, 1, 1, 1, 1]' : 0.159462}
{'[5, 2, 6, 3, 1, 5, 1, 1, 0, 3, 0, 10, 0, 1, 1, 1, 1, 1]' : 0.159584}
{'[5, 2, 6, 3, 1, 5, 1, 1, 0, 3, 0, 10, 0, 1, 1, 1, 1, 1]' : 0.159453}
{'[5, 2, 6, 3, 1, 5, 1, 1, 0, 3, 0, 10, 0, 1, 1, 1, 1, 1]' : 0.159702}
{'[5, 2, 6, 3, 1, 5, 1, 1, 0, 3, 0, 10, 0, 1, 1, 1, 1, 1]' : 0.159708}
{'[5, 2, 6, 3, 1, 5, 1, 1, 0, 3, 0, 10, 0, 1, 1, 1, 1, 1]' : 0.159495}
{'[5, 2, 6, 3, 1, 5, 1, 1, 0, 3, 0, 10, 0, 1, 1, 1, 1, 1]' : 0.159729}
{'[5, 2, 6, 3, 1, 5, 1, 1, 0, 3, 0, 10, 0, 1, 1, 1, 1, 1]' : 0.159421}
{'[5, 2, 6, 3, 1, 5, 1, 1, 0, 3, 0, 10, 0, 1, 1, 1, 1, 1]' : 0.159443}
{'[5, 2, 6, 3, 1, 5, 1, 1, 0, 3, 0, 10, 0, 1, 1, 1, 1, 1]' : 0.159676}
{'[5, 2, 6, 3, 1, 5, 1, 1, 0, 3, 0, 10, 0, 1, 1, 1, 1, 1]' : 0.159749}
{'[5, 2, 6, 3, 1, 5, 1, 1, 0, 3, 0, 10, 0, 1, 1, 1, 1, 1]' : 0.159905}
{'[5, 2, 6, 3, 1, 5, 1, 1, 0, 3, 0, 10, 0, 1, 1, 1, 1, 1]' : 0.159399}
{'[5, 2, 6, 3, 1, 5, 1, 1, 0, 3, 0, 10, 0, 1, 1, 1, 1, 1]' : 0.159434}
{'[5, 2, 6, 3, 1, 5, 1, 1, 0, 3, 0, 10, 0, 1, 1, 1, 1, 1]' : 0.159393}
{'[5, 2, 6, 3, 1, 5, 1, 1, 0, 3, 0, 10, 0, 1, 1, 1, 1, 1]' : 0.159465}
{'[5, 2, 6, 3, 1, 5, 1, 1, 0, 3, 0, 10, 0, 1, 1, 1, 1, 1]' : 0.159887}
{'[5, 2, 6, 3, 1, 5, 1, 1, 0, 3, 0, 10, 0, 1, 1, 1, 1, 1]' : 0.159686}
{'[5, 2, 6, 3, 1, 5, 1, 1, 0, 3, 0, 10, 0, 1, 1, 1, 1, 1]' : 0.159551}
{'[5, 2, 6, 3, 1, 5, 1, 1, 0, 3, 0, 10, 0, 1, 1, 1, 1, 1]' : 0.159491}
{'[5, 2, 6, 3, 1, 5, 1, 1, 0, 3, 0, 10, 0, 1, 1, 1, 1, 1]' : 0.159394}
{'[5, 2, 6, 3, 1, 5, 1, 1, 0, 3, 0, 10, 0, 1, 1, 1, 1, 1]' : 0.159706}
{'[5, 2, 6, 3, 1, 5, 1, 1, 0, 3, 0, 10, 0, 1, 1, 1, 1, 1]' : 0.159427}
{'[5, 2, 6, 3, 1, 5, 1, 1, 0, 3, 0, 10, 0, 1, 1, 1, 1, 1]' : 0.159509}
{'[5, 2, 6, 3, 1, 5, 1, 1, 0, 3, 0, 10, 0, 1, 1, 1, 1, 1]' : 0.159666}
{'[5, 2, 6, 3, 1, 5, 1, 1, 0, 3, 0, 10, 0, 1, 1, 1, 1, 1]' : 0.159705}

out:
 ["{'[5, 2, 6, 3, 1, 5, 1, 1, 0, 3, 0, 10, 0, 1, 1, 1, 1, 1]' : 0.18431}", "{'[5, 2, 6, 3, 1, 5, 1, 1, 0, 3, 0, 10, 0, 1, 1, 1, 1, 1]' : 0.184144}", "{'[5, 2, 6, 3, 1, 5, 1, 1, 0, 3, 0, 10, 0, 1, 1, 1, 1, 1]' : 0.175182}", "{'[5, 2, 6, 3, 1, 5, 1, 1, 0, 3, 0, 10, 0, 1, 1, 1, 1, 1]' : 0.159591}", "{'[5, 2, 6, 3, 1, 5, 1, 1, 0, 3, 0, 10, 0, 1, 1, 1, 1, 1]' : 0.159462}", "{'[5, 2, 6, 3, 1, 5, 1, 1, 0, 3, 0, 10, 0, 1, 1, 1, 1, 1]' : 0.159584}", "{'[5, 2, 6, 3, 1, 5, 1, 1, 0, 3, 0, 10, 0, 1, 1, 1, 1, 1]' : 0.159453}", "{'[5, 2, 6, 3, 1, 5, 1, 1, 0, 3, 0, 10, 0, 1, 1, 1, 1, 1]' : 0.159702}", "{'[5, 2, 6, 3, 1, 5, 1, 1, 0, 3, 0, 10, 0, 1, 1, 1, 1, 1]' : 0.159708}", "{'[5, 2, 6, 3, 1, 5, 1, 1, 0, 3, 0, 10, 0, 1, 1, 1, 1, 1]' : 0.159495}", "{'[5, 2, 6, 3, 1, 5, 1, 1, 0, 3, 0, 10, 0, 1, 1, 1, 1, 1]' : 0.159729}", "{'[5, 2, 6, 3, 1, 5, 1, 1, 0, 3, 0, 10, 0, 1, 1, 1, 1, 1]' : 0.159421}", "{'[5, 2, 6, 3, 1, 5, 1, 1, 0, 3, 0, 10, 0, 1, 1, 1, 1, 1]' : 0.159443}", "{'[5, 2, 6, 3, 1, 5, 1, 1, 0, 3, 0, 10, 0, 1, 1, 1, 1, 1]' : 0.159676}", "{'[5, 2, 6, 3, 1, 5, 1, 1, 0, 3, 0, 10, 0, 1, 1, 1, 1, 1]' : 0.159749}", "{'[5, 2, 6, 3, 1, 5, 1, 1, 0, 3, 0, 10, 0, 1, 1, 1, 1, 1]' : 0.159905}", "{'[5, 2, 6, 3, 1, 5, 1, 1, 0, 3, 0, 10, 0, 1, 1, 1, 1, 1]' : 0.159399}", "{'[5, 2, 6, 3, 1, 5, 1, 1, 0, 3, 0, 10, 0, 1, 1, 1, 1, 1]' : 0.159434}", "{'[5, 2, 6, 3, 1, 5, 1, 1, 0, 3, 0, 10, 0, 1, 1, 1, 1, 1]' : 0.159393}", "{'[5, 2, 6, 3, 1, 5, 1, 1, 0, 3, 0, 10, 0, 1, 1, 1, 1, 1]' : 0.159465}", "{'[5, 2, 6, 3, 1, 5, 1, 1, 0, 3, 0, 10, 0, 1, 1, 1, 1, 1]' : 0.159887}", "{'[5, 2, 6, 3, 1, 5, 1, 1, 0, 3, 0, 10, 0, 1, 1, 1, 1, 1]' : 0.159686}", "{'[5, 2, 6, 3, 1, 5, 1, 1, 0, 3, 0, 10, 0, 1, 1, 1, 1, 1]' : 0.159551}", "{'[5, 2, 6, 3, 1, 5, 1, 1, 0, 3, 0, 10, 0, 1, 1, 1, 1, 1]' : 0.159491}", "{'[5, 2, 6, 3, 1, 5, 1, 1, 0, 3, 0, 10, 0, 1, 1, 1, 1, 1]' : 0.159394}", "{'[5, 2, 6, 3, 1, 5, 1, 1, 0, 3, 0, 10, 0, 1, 1, 1, 1, 1]' : 0.159706}", "{'[5, 2, 6, 3, 1, 5, 1, 1, 0, 3, 0, 10, 0, 1, 1, 1, 1, 1]' : 0.159427}", "{'[5, 2, 6, 3, 1, 5, 1, 1, 0, 3, 0, 10, 0, 1, 1, 1, 1, 1]' : 0.159509}", "{'[5, 2, 6, 3, 1, 5, 1, 1, 0, 3, 0, 10, 0, 1, 1, 1, 1, 1]' : 0.159666}", "{'[5, 2, 6, 3, 1, 5, 1, 1, 0, 3, 0, 10, 0, 1, 1, 1, 1, 1]' : 0.159705}"]
returning from 'run': {'[5, 2, 6, 3, 1, 5, 1, 1, 0, 3, 0, 10, 0, 1, 1, 1, 1, 1]': ([0.18431, 0.184144, 0.175182, 0.159591, 0.159462, 0.159584, 0.159453, 0.159702, 0.159708, 0.159495, 0.159729, 0.159421, 0.159443, 0.159676, 0.159749, 0.159905, 0.159399, 0.159434, 0.159393, 0.159465, 0.159887, 0.159686, 0.159551, 0.159491, 0.159394, 0.159706, 0.159427, 0.159509, 0.159666, 0.159705], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 2, 6, 3, 1, 5, 1, 1, 0, 3, 0, 10, 0, 1, 1, 1, 1, 1]': ([0.18431, 0.184144, 0.175182, 0.159591, 0.159462, 0.159584, 0.159453, 0.159702, 0.159708, 0.159495, 0.159729, 0.159421, 0.159443, 0.159676, 0.159749, 0.159905, 0.159399, 0.159434, 0.159393, 0.159465, 0.159887, 0.159686, 0.159551, 0.159491, 0.159394, 0.159706, 0.159427, 0.159509, 0.159666, 0.159705], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	131
        Max loop nest depth: 	5
        Additions: 		7672
        Multiplications: 	2088
        Divisions: 		0
        Logical: 		0
        Reads: 			11885
        Writes: 		1400
        Comparisons:		131
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest11.exe __orio_perftest11.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest11.exe  
Program Test Output: 
{'[4, 2, 6, 2, 2, 4, 0, 1, 5, 27, 1, 0, 0, 2, 0, 0, 0, 0]' : 0.2489}
{'[4, 2, 6, 2, 2, 4, 0, 1, 5, 27, 1, 0, 0, 2, 0, 0, 0, 0]' : 0.223982}
{'[4, 2, 6, 2, 2, 4, 0, 1, 5, 27, 1, 0, 0, 2, 0, 0, 0, 0]' : 0.225388}
{'[4, 2, 6, 2, 2, 4, 0, 1, 5, 27, 1, 0, 0, 2, 0, 0, 0, 0]' : 0.225739}
{'[4, 2, 6, 2, 2, 4, 0, 1, 5, 27, 1, 0, 0, 2, 0, 0, 0, 0]' : 0.225796}
{'[4, 2, 6, 2, 2, 4, 0, 1, 5, 27, 1, 0, 0, 2, 0, 0, 0, 0]' : 0.225921}
{'[4, 2, 6, 2, 2, 4, 0, 1, 5, 27, 1, 0, 0, 2, 0, 0, 0, 0]' : 0.225358}
{'[4, 2, 6, 2, 2, 4, 0, 1, 5, 27, 1, 0, 0, 2, 0, 0, 0, 0]' : 0.225638}
{'[4, 2, 6, 2, 2, 4, 0, 1, 5, 27, 1, 0, 0, 2, 0, 0, 0, 0]' : 0.225064}
{'[4, 2, 6, 2, 2, 4, 0, 1, 5, 27, 1, 0, 0, 2, 0, 0, 0, 0]' : 0.225607}
{'[4, 2, 6, 2, 2, 4, 0, 1, 5, 27, 1, 0, 0, 2, 0, 0, 0, 0]' : 0.225142}
{'[4, 2, 6, 2, 2, 4, 0, 1, 5, 27, 1, 0, 0, 2, 0, 0, 0, 0]' : 0.225353}
{'[4, 2, 6, 2, 2, 4, 0, 1, 5, 27, 1, 0, 0, 2, 0, 0, 0, 0]' : 0.225519}
{'[4, 2, 6, 2, 2, 4, 0, 1, 5, 27, 1, 0, 0, 2, 0, 0, 0, 0]' : 0.225742}
{'[4, 2, 6, 2, 2, 4, 0, 1, 5, 27, 1, 0, 0, 2, 0, 0, 0, 0]' : 0.225412}
{'[4, 2, 6, 2, 2, 4, 0, 1, 5, 27, 1, 0, 0, 2, 0, 0, 0, 0]' : 0.225648}
{'[4, 2, 6, 2, 2, 4, 0, 1, 5, 27, 1, 0, 0, 2, 0, 0, 0, 0]' : 0.225814}
{'[4, 2, 6, 2, 2, 4, 0, 1, 5, 27, 1, 0, 0, 2, 0, 0, 0, 0]' : 0.212695}
{'[4, 2, 6, 2, 2, 4, 0, 1, 5, 27, 1, 0, 0, 2, 0, 0, 0, 0]' : 0.212397}
{'[4, 2, 6, 2, 2, 4, 0, 1, 5, 27, 1, 0, 0, 2, 0, 0, 0, 0]' : 0.223971}
{'[4, 2, 6, 2, 2, 4, 0, 1, 5, 27, 1, 0, 0, 2, 0, 0, 0, 0]' : 0.225654}
{'[4, 2, 6, 2, 2, 4, 0, 1, 5, 27, 1, 0, 0, 2, 0, 0, 0, 0]' : 0.225811}
{'[4, 2, 6, 2, 2, 4, 0, 1, 5, 27, 1, 0, 0, 2, 0, 0, 0, 0]' : 0.225509}
{'[4, 2, 6, 2, 2, 4, 0, 1, 5, 27, 1, 0, 0, 2, 0, 0, 0, 0]' : 0.225873}
{'[4, 2, 6, 2, 2, 4, 0, 1, 5, 27, 1, 0, 0, 2, 0, 0, 0, 0]' : 0.225518}
{'[4, 2, 6, 2, 2, 4, 0, 1, 5, 27, 1, 0, 0, 2, 0, 0, 0, 0]' : 0.225977}
{'[4, 2, 6, 2, 2, 4, 0, 1, 5, 27, 1, 0, 0, 2, 0, 0, 0, 0]' : 0.225877}
{'[4, 2, 6, 2, 2, 4, 0, 1, 5, 27, 1, 0, 0, 2, 0, 0, 0, 0]' : 0.225632}
{'[4, 2, 6, 2, 2, 4, 0, 1, 5, 27, 1, 0, 0, 2, 0, 0, 0, 0]' : 0.225541}
{'[4, 2, 6, 2, 2, 4, 0, 1, 5, 27, 1, 0, 0, 2, 0, 0, 0, 0]' : 0.224317}

out:
 ["{'[4, 2, 6, 2, 2, 4, 0, 1, 5, 27, 1, 0, 0, 2, 0, 0, 0, 0]' : 0.2489}", "{'[4, 2, 6, 2, 2, 4, 0, 1, 5, 27, 1, 0, 0, 2, 0, 0, 0, 0]' : 0.223982}", "{'[4, 2, 6, 2, 2, 4, 0, 1, 5, 27, 1, 0, 0, 2, 0, 0, 0, 0]' : 0.225388}", "{'[4, 2, 6, 2, 2, 4, 0, 1, 5, 27, 1, 0, 0, 2, 0, 0, 0, 0]' : 0.225739}", "{'[4, 2, 6, 2, 2, 4, 0, 1, 5, 27, 1, 0, 0, 2, 0, 0, 0, 0]' : 0.225796}", "{'[4, 2, 6, 2, 2, 4, 0, 1, 5, 27, 1, 0, 0, 2, 0, 0, 0, 0]' : 0.225921}", "{'[4, 2, 6, 2, 2, 4, 0, 1, 5, 27, 1, 0, 0, 2, 0, 0, 0, 0]' : 0.225358}", "{'[4, 2, 6, 2, 2, 4, 0, 1, 5, 27, 1, 0, 0, 2, 0, 0, 0, 0]' : 0.225638}", "{'[4, 2, 6, 2, 2, 4, 0, 1, 5, 27, 1, 0, 0, 2, 0, 0, 0, 0]' : 0.225064}", "{'[4, 2, 6, 2, 2, 4, 0, 1, 5, 27, 1, 0, 0, 2, 0, 0, 0, 0]' : 0.225607}", "{'[4, 2, 6, 2, 2, 4, 0, 1, 5, 27, 1, 0, 0, 2, 0, 0, 0, 0]' : 0.225142}", "{'[4, 2, 6, 2, 2, 4, 0, 1, 5, 27, 1, 0, 0, 2, 0, 0, 0, 0]' : 0.225353}", "{'[4, 2, 6, 2, 2, 4, 0, 1, 5, 27, 1, 0, 0, 2, 0, 0, 0, 0]' : 0.225519}", "{'[4, 2, 6, 2, 2, 4, 0, 1, 5, 27, 1, 0, 0, 2, 0, 0, 0, 0]' : 0.225742}", "{'[4, 2, 6, 2, 2, 4, 0, 1, 5, 27, 1, 0, 0, 2, 0, 0, 0, 0]' : 0.225412}", "{'[4, 2, 6, 2, 2, 4, 0, 1, 5, 27, 1, 0, 0, 2, 0, 0, 0, 0]' : 0.225648}", "{'[4, 2, 6, 2, 2, 4, 0, 1, 5, 27, 1, 0, 0, 2, 0, 0, 0, 0]' : 0.225814}", "{'[4, 2, 6, 2, 2, 4, 0, 1, 5, 27, 1, 0, 0, 2, 0, 0, 0, 0]' : 0.212695}", "{'[4, 2, 6, 2, 2, 4, 0, 1, 5, 27, 1, 0, 0, 2, 0, 0, 0, 0]' : 0.212397}", "{'[4, 2, 6, 2, 2, 4, 0, 1, 5, 27, 1, 0, 0, 2, 0, 0, 0, 0]' : 0.223971}", "{'[4, 2, 6, 2, 2, 4, 0, 1, 5, 27, 1, 0, 0, 2, 0, 0, 0, 0]' : 0.225654}", "{'[4, 2, 6, 2, 2, 4, 0, 1, 5, 27, 1, 0, 0, 2, 0, 0, 0, 0]' : 0.225811}", "{'[4, 2, 6, 2, 2, 4, 0, 1, 5, 27, 1, 0, 0, 2, 0, 0, 0, 0]' : 0.225509}", "{'[4, 2, 6, 2, 2, 4, 0, 1, 5, 27, 1, 0, 0, 2, 0, 0, 0, 0]' : 0.225873}", "{'[4, 2, 6, 2, 2, 4, 0, 1, 5, 27, 1, 0, 0, 2, 0, 0, 0, 0]' : 0.225518}", "{'[4, 2, 6, 2, 2, 4, 0, 1, 5, 27, 1, 0, 0, 2, 0, 0, 0, 0]' : 0.225977}", "{'[4, 2, 6, 2, 2, 4, 0, 1, 5, 27, 1, 0, 0, 2, 0, 0, 0, 0]' : 0.225877}", "{'[4, 2, 6, 2, 2, 4, 0, 1, 5, 27, 1, 0, 0, 2, 0, 0, 0, 0]' : 0.225632}", "{'[4, 2, 6, 2, 2, 4, 0, 1, 5, 27, 1, 0, 0, 2, 0, 0, 0, 0]' : 0.225541}", "{'[4, 2, 6, 2, 2, 4, 0, 1, 5, 27, 1, 0, 0, 2, 0, 0, 0, 0]' : 0.224317}"]
returning from 'run': {'[4, 2, 6, 2, 2, 4, 0, 1, 5, 27, 1, 0, 0, 2, 0, 0, 0, 0]': ([0.2489, 0.223982, 0.225388, 0.225739, 0.225796, 0.225921, 0.225358, 0.225638, 0.225064, 0.225607, 0.225142, 0.225353, 0.225519, 0.225742, 0.225412, 0.225648, 0.225814, 0.212695, 0.212397, 0.223971, 0.225654, 0.225811, 0.225509, 0.225873, 0.225518, 0.225977, 0.225877, 0.225632, 0.225541, 0.224317], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 2, 6, 2, 2, 4, 0, 1, 5, 27, 1, 0, 0, 2, 0, 0, 0, 0]': ([0.2489, 0.223982, 0.225388, 0.225739, 0.225796, 0.225921, 0.225358, 0.225638, 0.225064, 0.225607, 0.225142, 0.225353, 0.225519, 0.225742, 0.225412, 0.225648, 0.225814, 0.212695, 0.212397, 0.223971, 0.225654, 0.225811, 0.225509, 0.225873, 0.225518, 0.225977, 0.225877, 0.225632, 0.225541, 0.224317], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	29
        Max loop nest depth: 	5
        Additions: 		560
        Multiplications: 	198
        Divisions: 		0
        Logical: 		0
        Reads: 			1223
        Writes: 		256
        Comparisons:		29
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest12.exe __orio_perftest12.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest12.exe  
Program Test Output: 
{'[0, 0, 1, 3, 3, 6, 0, 1, 4, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.116646}
{'[0, 0, 1, 3, 3, 6, 0, 1, 4, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.116415}
{'[0, 0, 1, 3, 3, 6, 0, 1, 4, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.116339}
{'[0, 0, 1, 3, 3, 6, 0, 1, 4, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.116296}
{'[0, 0, 1, 3, 3, 6, 0, 1, 4, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.105948}
{'[0, 0, 1, 3, 3, 6, 0, 1, 4, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.102018}
{'[0, 0, 1, 3, 3, 6, 0, 1, 4, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.102101}
{'[0, 0, 1, 3, 3, 6, 0, 1, 4, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.102019}
{'[0, 0, 1, 3, 3, 6, 0, 1, 4, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.102026}
{'[0, 0, 1, 3, 3, 6, 0, 1, 4, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.102078}
{'[0, 0, 1, 3, 3, 6, 0, 1, 4, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.1022}
{'[0, 0, 1, 3, 3, 6, 0, 1, 4, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.102135}
{'[0, 0, 1, 3, 3, 6, 0, 1, 4, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.102176}
{'[0, 0, 1, 3, 3, 6, 0, 1, 4, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.102159}
{'[0, 0, 1, 3, 3, 6, 0, 1, 4, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.102136}
{'[0, 0, 1, 3, 3, 6, 0, 1, 4, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.102129}
{'[0, 0, 1, 3, 3, 6, 0, 1, 4, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.101944}
{'[0, 0, 1, 3, 3, 6, 0, 1, 4, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.101962}
{'[0, 0, 1, 3, 3, 6, 0, 1, 4, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.102049}
{'[0, 0, 1, 3, 3, 6, 0, 1, 4, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.10228}
{'[0, 0, 1, 3, 3, 6, 0, 1, 4, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.102152}
{'[0, 0, 1, 3, 3, 6, 0, 1, 4, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.101966}
{'[0, 0, 1, 3, 3, 6, 0, 1, 4, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.102411}
{'[0, 0, 1, 3, 3, 6, 0, 1, 4, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.102143}
{'[0, 0, 1, 3, 3, 6, 0, 1, 4, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.101977}
{'[0, 0, 1, 3, 3, 6, 0, 1, 4, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.101909}
{'[0, 0, 1, 3, 3, 6, 0, 1, 4, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.101992}
{'[0, 0, 1, 3, 3, 6, 0, 1, 4, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.10208}
{'[0, 0, 1, 3, 3, 6, 0, 1, 4, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.102229}
{'[0, 0, 1, 3, 3, 6, 0, 1, 4, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.102129}

out:
 ["{'[0, 0, 1, 3, 3, 6, 0, 1, 4, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.116646}", "{'[0, 0, 1, 3, 3, 6, 0, 1, 4, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.116415}", "{'[0, 0, 1, 3, 3, 6, 0, 1, 4, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.116339}", "{'[0, 0, 1, 3, 3, 6, 0, 1, 4, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.116296}", "{'[0, 0, 1, 3, 3, 6, 0, 1, 4, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.105948}", "{'[0, 0, 1, 3, 3, 6, 0, 1, 4, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.102018}", "{'[0, 0, 1, 3, 3, 6, 0, 1, 4, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.102101}", "{'[0, 0, 1, 3, 3, 6, 0, 1, 4, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.102019}", "{'[0, 0, 1, 3, 3, 6, 0, 1, 4, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.102026}", "{'[0, 0, 1, 3, 3, 6, 0, 1, 4, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.102078}", "{'[0, 0, 1, 3, 3, 6, 0, 1, 4, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.1022}", "{'[0, 0, 1, 3, 3, 6, 0, 1, 4, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.102135}", "{'[0, 0, 1, 3, 3, 6, 0, 1, 4, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.102176}", "{'[0, 0, 1, 3, 3, 6, 0, 1, 4, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.102159}", "{'[0, 0, 1, 3, 3, 6, 0, 1, 4, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.102136}", "{'[0, 0, 1, 3, 3, 6, 0, 1, 4, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.102129}", "{'[0, 0, 1, 3, 3, 6, 0, 1, 4, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.101944}", "{'[0, 0, 1, 3, 3, 6, 0, 1, 4, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.101962}", "{'[0, 0, 1, 3, 3, 6, 0, 1, 4, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.102049}", "{'[0, 0, 1, 3, 3, 6, 0, 1, 4, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.10228}", "{'[0, 0, 1, 3, 3, 6, 0, 1, 4, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.102152}", "{'[0, 0, 1, 3, 3, 6, 0, 1, 4, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.101966}", "{'[0, 0, 1, 3, 3, 6, 0, 1, 4, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.102411}", "{'[0, 0, 1, 3, 3, 6, 0, 1, 4, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.102143}", "{'[0, 0, 1, 3, 3, 6, 0, 1, 4, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.101977}", "{'[0, 0, 1, 3, 3, 6, 0, 1, 4, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.101909}", "{'[0, 0, 1, 3, 3, 6, 0, 1, 4, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.101992}", "{'[0, 0, 1, 3, 3, 6, 0, 1, 4, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.10208}", "{'[0, 0, 1, 3, 3, 6, 0, 1, 4, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.102229}", "{'[0, 0, 1, 3, 3, 6, 0, 1, 4, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.102129}"]
returning from 'run': {'[0, 0, 1, 3, 3, 6, 0, 1, 4, 1, 0, 0, 1, 0, 1, 1, 1, 1]': ([0.116646, 0.116415, 0.116339, 0.116296, 0.105948, 0.102018, 0.102101, 0.102019, 0.102026, 0.102078, 0.1022, 0.102135, 0.102176, 0.102159, 0.102136, 0.102129, 0.101944, 0.101962, 0.102049, 0.10228, 0.102152, 0.101966, 0.102411, 0.102143, 0.101977, 0.101909, 0.101992, 0.10208, 0.102229, 0.102129], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 1, 3, 3, 6, 0, 1, 4, 1, 0, 0, 1, 0, 1, 1, 1, 1]': ([0.116646, 0.116415, 0.116339, 0.116296, 0.105948, 0.102018, 0.102101, 0.102019, 0.102026, 0.102078, 0.1022, 0.102135, 0.102176, 0.102159, 0.102136, 0.102129, 0.101944, 0.101962, 0.102049, 0.10228, 0.102152, 0.101966, 0.102411, 0.102143, 0.101977, 0.101909, 0.101992, 0.10208, 0.102229, 0.102129], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	36
        Max loop nest depth: 	6
        Additions: 		3683
        Multiplications: 	1728
        Divisions: 		0
        Logical: 		0
        Reads: 			6944
        Writes: 		1126
        Comparisons:		36
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest13.exe __orio_perftest13.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest13.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest13.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest13.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest13.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	36
        Max loop nest depth: 	4
        Additions: 		1416
        Multiplications: 	532
        Divisions: 		0
        Logical: 		0
        Reads: 			2622
        Writes: 		434
        Comparisons:		36
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest14.exe __orio_perftest14.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest14.exe  
Program Test Output: 
{'[2, 6, 0, 0, 4, 2, 1, 0, 1, 4, 16, 0, 1, 0, 0, 1, 1, 1]' : 0.116221}
{'[2, 6, 0, 0, 4, 2, 1, 0, 1, 4, 16, 0, 1, 0, 0, 1, 1, 1]' : 0.115936}
{'[2, 6, 0, 0, 4, 2, 1, 0, 1, 4, 16, 0, 1, 0, 0, 1, 1, 1]' : 0.115962}
{'[2, 6, 0, 0, 4, 2, 1, 0, 1, 4, 16, 0, 1, 0, 0, 1, 1, 1]' : 0.109868}
{'[2, 6, 0, 0, 4, 2, 1, 0, 1, 4, 16, 0, 1, 0, 0, 1, 1, 1]' : 0.104538}
{'[2, 6, 0, 0, 4, 2, 1, 0, 1, 4, 16, 0, 1, 0, 0, 1, 1, 1]' : 0.104584}
{'[2, 6, 0, 0, 4, 2, 1, 0, 1, 4, 16, 0, 1, 0, 0, 1, 1, 1]' : 0.104485}
{'[2, 6, 0, 0, 4, 2, 1, 0, 1, 4, 16, 0, 1, 0, 0, 1, 1, 1]' : 0.104566}
{'[2, 6, 0, 0, 4, 2, 1, 0, 1, 4, 16, 0, 1, 0, 0, 1, 1, 1]' : 0.1045}
{'[2, 6, 0, 0, 4, 2, 1, 0, 1, 4, 16, 0, 1, 0, 0, 1, 1, 1]' : 0.104717}
{'[2, 6, 0, 0, 4, 2, 1, 0, 1, 4, 16, 0, 1, 0, 0, 1, 1, 1]' : 0.104773}
{'[2, 6, 0, 0, 4, 2, 1, 0, 1, 4, 16, 0, 1, 0, 0, 1, 1, 1]' : 0.104737}
{'[2, 6, 0, 0, 4, 2, 1, 0, 1, 4, 16, 0, 1, 0, 0, 1, 1, 1]' : 0.104928}
{'[2, 6, 0, 0, 4, 2, 1, 0, 1, 4, 16, 0, 1, 0, 0, 1, 1, 1]' : 0.104754}
{'[2, 6, 0, 0, 4, 2, 1, 0, 1, 4, 16, 0, 1, 0, 0, 1, 1, 1]' : 0.104749}
{'[2, 6, 0, 0, 4, 2, 1, 0, 1, 4, 16, 0, 1, 0, 0, 1, 1, 1]' : 0.104776}
{'[2, 6, 0, 0, 4, 2, 1, 0, 1, 4, 16, 0, 1, 0, 0, 1, 1, 1]' : 0.10467}
{'[2, 6, 0, 0, 4, 2, 1, 0, 1, 4, 16, 0, 1, 0, 0, 1, 1, 1]' : 0.104735}
{'[2, 6, 0, 0, 4, 2, 1, 0, 1, 4, 16, 0, 1, 0, 0, 1, 1, 1]' : 0.104674}
{'[2, 6, 0, 0, 4, 2, 1, 0, 1, 4, 16, 0, 1, 0, 0, 1, 1, 1]' : 0.104784}
{'[2, 6, 0, 0, 4, 2, 1, 0, 1, 4, 16, 0, 1, 0, 0, 1, 1, 1]' : 0.104536}
{'[2, 6, 0, 0, 4, 2, 1, 0, 1, 4, 16, 0, 1, 0, 0, 1, 1, 1]' : 0.104615}
{'[2, 6, 0, 0, 4, 2, 1, 0, 1, 4, 16, 0, 1, 0, 0, 1, 1, 1]' : 0.104539}
{'[2, 6, 0, 0, 4, 2, 1, 0, 1, 4, 16, 0, 1, 0, 0, 1, 1, 1]' : 0.104449}
{'[2, 6, 0, 0, 4, 2, 1, 0, 1, 4, 16, 0, 1, 0, 0, 1, 1, 1]' : 0.104661}
{'[2, 6, 0, 0, 4, 2, 1, 0, 1, 4, 16, 0, 1, 0, 0, 1, 1, 1]' : 0.104734}
{'[2, 6, 0, 0, 4, 2, 1, 0, 1, 4, 16, 0, 1, 0, 0, 1, 1, 1]' : 0.104694}
{'[2, 6, 0, 0, 4, 2, 1, 0, 1, 4, 16, 0, 1, 0, 0, 1, 1, 1]' : 0.104773}
{'[2, 6, 0, 0, 4, 2, 1, 0, 1, 4, 16, 0, 1, 0, 0, 1, 1, 1]' : 0.104611}
{'[2, 6, 0, 0, 4, 2, 1, 0, 1, 4, 16, 0, 1, 0, 0, 1, 1, 1]' : 0.101715}

out:
 ["{'[2, 6, 0, 0, 4, 2, 1, 0, 1, 4, 16, 0, 1, 0, 0, 1, 1, 1]' : 0.116221}", "{'[2, 6, 0, 0, 4, 2, 1, 0, 1, 4, 16, 0, 1, 0, 0, 1, 1, 1]' : 0.115936}", "{'[2, 6, 0, 0, 4, 2, 1, 0, 1, 4, 16, 0, 1, 0, 0, 1, 1, 1]' : 0.115962}", "{'[2, 6, 0, 0, 4, 2, 1, 0, 1, 4, 16, 0, 1, 0, 0, 1, 1, 1]' : 0.109868}", "{'[2, 6, 0, 0, 4, 2, 1, 0, 1, 4, 16, 0, 1, 0, 0, 1, 1, 1]' : 0.104538}", "{'[2, 6, 0, 0, 4, 2, 1, 0, 1, 4, 16, 0, 1, 0, 0, 1, 1, 1]' : 0.104584}", "{'[2, 6, 0, 0, 4, 2, 1, 0, 1, 4, 16, 0, 1, 0, 0, 1, 1, 1]' : 0.104485}", "{'[2, 6, 0, 0, 4, 2, 1, 0, 1, 4, 16, 0, 1, 0, 0, 1, 1, 1]' : 0.104566}", "{'[2, 6, 0, 0, 4, 2, 1, 0, 1, 4, 16, 0, 1, 0, 0, 1, 1, 1]' : 0.1045}", "{'[2, 6, 0, 0, 4, 2, 1, 0, 1, 4, 16, 0, 1, 0, 0, 1, 1, 1]' : 0.104717}", "{'[2, 6, 0, 0, 4, 2, 1, 0, 1, 4, 16, 0, 1, 0, 0, 1, 1, 1]' : 0.104773}", "{'[2, 6, 0, 0, 4, 2, 1, 0, 1, 4, 16, 0, 1, 0, 0, 1, 1, 1]' : 0.104737}", "{'[2, 6, 0, 0, 4, 2, 1, 0, 1, 4, 16, 0, 1, 0, 0, 1, 1, 1]' : 0.104928}", "{'[2, 6, 0, 0, 4, 2, 1, 0, 1, 4, 16, 0, 1, 0, 0, 1, 1, 1]' : 0.104754}", "{'[2, 6, 0, 0, 4, 2, 1, 0, 1, 4, 16, 0, 1, 0, 0, 1, 1, 1]' : 0.104749}", "{'[2, 6, 0, 0, 4, 2, 1, 0, 1, 4, 16, 0, 1, 0, 0, 1, 1, 1]' : 0.104776}", "{'[2, 6, 0, 0, 4, 2, 1, 0, 1, 4, 16, 0, 1, 0, 0, 1, 1, 1]' : 0.10467}", "{'[2, 6, 0, 0, 4, 2, 1, 0, 1, 4, 16, 0, 1, 0, 0, 1, 1, 1]' : 0.104735}", "{'[2, 6, 0, 0, 4, 2, 1, 0, 1, 4, 16, 0, 1, 0, 0, 1, 1, 1]' : 0.104674}", "{'[2, 6, 0, 0, 4, 2, 1, 0, 1, 4, 16, 0, 1, 0, 0, 1, 1, 1]' : 0.104784}", "{'[2, 6, 0, 0, 4, 2, 1, 0, 1, 4, 16, 0, 1, 0, 0, 1, 1, 1]' : 0.104536}", "{'[2, 6, 0, 0, 4, 2, 1, 0, 1, 4, 16, 0, 1, 0, 0, 1, 1, 1]' : 0.104615}", "{'[2, 6, 0, 0, 4, 2, 1, 0, 1, 4, 16, 0, 1, 0, 0, 1, 1, 1]' : 0.104539}", "{'[2, 6, 0, 0, 4, 2, 1, 0, 1, 4, 16, 0, 1, 0, 0, 1, 1, 1]' : 0.104449}", "{'[2, 6, 0, 0, 4, 2, 1, 0, 1, 4, 16, 0, 1, 0, 0, 1, 1, 1]' : 0.104661}", "{'[2, 6, 0, 0, 4, 2, 1, 0, 1, 4, 16, 0, 1, 0, 0, 1, 1, 1]' : 0.104734}", "{'[2, 6, 0, 0, 4, 2, 1, 0, 1, 4, 16, 0, 1, 0, 0, 1, 1, 1]' : 0.104694}", "{'[2, 6, 0, 0, 4, 2, 1, 0, 1, 4, 16, 0, 1, 0, 0, 1, 1, 1]' : 0.104773}", "{'[2, 6, 0, 0, 4, 2, 1, 0, 1, 4, 16, 0, 1, 0, 0, 1, 1, 1]' : 0.104611}", "{'[2, 6, 0, 0, 4, 2, 1, 0, 1, 4, 16, 0, 1, 0, 0, 1, 1, 1]' : 0.101715}"]
returning from 'run': {'[2, 6, 0, 0, 4, 2, 1, 0, 1, 4, 16, 0, 1, 0, 0, 1, 1, 1]': ([0.116221, 0.115936, 0.115962, 0.109868, 0.104538, 0.104584, 0.104485, 0.104566, 0.1045, 0.104717, 0.104773, 0.104737, 0.104928, 0.104754, 0.104749, 0.104776, 0.10467, 0.104735, 0.104674, 0.104784, 0.104536, 0.104615, 0.104539, 0.104449, 0.104661, 0.104734, 0.104694, 0.104773, 0.104611, 0.101715], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 6, 0, 0, 4, 2, 1, 0, 1, 4, 16, 0, 1, 0, 0, 1, 1, 1]': ([0.116221, 0.115936, 0.115962, 0.109868, 0.104538, 0.104584, 0.104485, 0.104566, 0.1045, 0.104717, 0.104773, 0.104737, 0.104928, 0.104754, 0.104749, 0.104776, 0.10467, 0.104735, 0.104674, 0.104784, 0.104536, 0.104615, 0.104539, 0.104449, 0.104661, 0.104734, 0.104694, 0.104773, 0.104611, 0.101715], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = kkk
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	5
        Additions: 		3306
        Multiplications: 	954
        Divisions: 		0
        Logical: 		0
        Reads: 			5220
        Writes: 		532
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest15.exe __orio_perftest15.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest15.exe  
Program Test Output: 
{'[3, 3, 3, 0, 5, 1, 0, 1, 0, 0, 29, 12, 1, 1, 0, 0, 0, 0]' : 0.101839}
{'[3, 3, 3, 0, 5, 1, 0, 1, 0, 0, 29, 12, 1, 1, 0, 0, 0, 0]' : 0.102127}
{'[3, 3, 3, 0, 5, 1, 0, 1, 0, 0, 29, 12, 1, 1, 0, 0, 0, 0]' : 0.101629}
{'[3, 3, 3, 0, 5, 1, 0, 1, 0, 0, 29, 12, 1, 1, 0, 0, 0, 0]' : 0.101535}
{'[3, 3, 3, 0, 5, 1, 0, 1, 0, 0, 29, 12, 1, 1, 0, 0, 0, 0]' : 0.101546}
{'[3, 3, 3, 0, 5, 1, 0, 1, 0, 0, 29, 12, 1, 1, 0, 0, 0, 0]' : 0.10149}
{'[3, 3, 3, 0, 5, 1, 0, 1, 0, 0, 29, 12, 1, 1, 0, 0, 0, 0]' : 0.101395}
{'[3, 3, 3, 0, 5, 1, 0, 1, 0, 0, 29, 12, 1, 1, 0, 0, 0, 0]' : 0.101556}
{'[3, 3, 3, 0, 5, 1, 0, 1, 0, 0, 29, 12, 1, 1, 0, 0, 0, 0]' : 0.101815}
{'[3, 3, 3, 0, 5, 1, 0, 1, 0, 0, 29, 12, 1, 1, 0, 0, 0, 0]' : 0.104432}
{'[3, 3, 3, 0, 5, 1, 0, 1, 0, 0, 29, 12, 1, 1, 0, 0, 0, 0]' : 0.104553}
{'[3, 3, 3, 0, 5, 1, 0, 1, 0, 0, 29, 12, 1, 1, 0, 0, 0, 0]' : 0.104606}
{'[3, 3, 3, 0, 5, 1, 0, 1, 0, 0, 29, 12, 1, 1, 0, 0, 0, 0]' : 0.104904}
{'[3, 3, 3, 0, 5, 1, 0, 1, 0, 0, 29, 12, 1, 1, 0, 0, 0, 0]' : 0.104816}
{'[3, 3, 3, 0, 5, 1, 0, 1, 0, 0, 29, 12, 1, 1, 0, 0, 0, 0]' : 0.104345}
{'[3, 3, 3, 0, 5, 1, 0, 1, 0, 0, 29, 12, 1, 1, 0, 0, 0, 0]' : 0.104516}
{'[3, 3, 3, 0, 5, 1, 0, 1, 0, 0, 29, 12, 1, 1, 0, 0, 0, 0]' : 0.104508}
{'[3, 3, 3, 0, 5, 1, 0, 1, 0, 0, 29, 12, 1, 1, 0, 0, 0, 0]' : 0.104482}
{'[3, 3, 3, 0, 5, 1, 0, 1, 0, 0, 29, 12, 1, 1, 0, 0, 0, 0]' : 0.104501}
{'[3, 3, 3, 0, 5, 1, 0, 1, 0, 0, 29, 12, 1, 1, 0, 0, 0, 0]' : 0.104528}
{'[3, 3, 3, 0, 5, 1, 0, 1, 0, 0, 29, 12, 1, 1, 0, 0, 0, 0]' : 0.104894}
{'[3, 3, 3, 0, 5, 1, 0, 1, 0, 0, 29, 12, 1, 1, 0, 0, 0, 0]' : 0.104475}
{'[3, 3, 3, 0, 5, 1, 0, 1, 0, 0, 29, 12, 1, 1, 0, 0, 0, 0]' : 0.104524}
{'[3, 3, 3, 0, 5, 1, 0, 1, 0, 0, 29, 12, 1, 1, 0, 0, 0, 0]' : 0.104882}
{'[3, 3, 3, 0, 5, 1, 0, 1, 0, 0, 29, 12, 1, 1, 0, 0, 0, 0]' : 0.104613}
{'[3, 3, 3, 0, 5, 1, 0, 1, 0, 0, 29, 12, 1, 1, 0, 0, 0, 0]' : 0.104511}
{'[3, 3, 3, 0, 5, 1, 0, 1, 0, 0, 29, 12, 1, 1, 0, 0, 0, 0]' : 0.104975}
{'[3, 3, 3, 0, 5, 1, 0, 1, 0, 0, 29, 12, 1, 1, 0, 0, 0, 0]' : 0.104476}
{'[3, 3, 3, 0, 5, 1, 0, 1, 0, 0, 29, 12, 1, 1, 0, 0, 0, 0]' : 0.104645}
{'[3, 3, 3, 0, 5, 1, 0, 1, 0, 0, 29, 12, 1, 1, 0, 0, 0, 0]' : 0.104488}

out:
 ["{'[3, 3, 3, 0, 5, 1, 0, 1, 0, 0, 29, 12, 1, 1, 0, 0, 0, 0]' : 0.101839}", "{'[3, 3, 3, 0, 5, 1, 0, 1, 0, 0, 29, 12, 1, 1, 0, 0, 0, 0]' : 0.102127}", "{'[3, 3, 3, 0, 5, 1, 0, 1, 0, 0, 29, 12, 1, 1, 0, 0, 0, 0]' : 0.101629}", "{'[3, 3, 3, 0, 5, 1, 0, 1, 0, 0, 29, 12, 1, 1, 0, 0, 0, 0]' : 0.101535}", "{'[3, 3, 3, 0, 5, 1, 0, 1, 0, 0, 29, 12, 1, 1, 0, 0, 0, 0]' : 0.101546}", "{'[3, 3, 3, 0, 5, 1, 0, 1, 0, 0, 29, 12, 1, 1, 0, 0, 0, 0]' : 0.10149}", "{'[3, 3, 3, 0, 5, 1, 0, 1, 0, 0, 29, 12, 1, 1, 0, 0, 0, 0]' : 0.101395}", "{'[3, 3, 3, 0, 5, 1, 0, 1, 0, 0, 29, 12, 1, 1, 0, 0, 0, 0]' : 0.101556}", "{'[3, 3, 3, 0, 5, 1, 0, 1, 0, 0, 29, 12, 1, 1, 0, 0, 0, 0]' : 0.101815}", "{'[3, 3, 3, 0, 5, 1, 0, 1, 0, 0, 29, 12, 1, 1, 0, 0, 0, 0]' : 0.104432}", "{'[3, 3, 3, 0, 5, 1, 0, 1, 0, 0, 29, 12, 1, 1, 0, 0, 0, 0]' : 0.104553}", "{'[3, 3, 3, 0, 5, 1, 0, 1, 0, 0, 29, 12, 1, 1, 0, 0, 0, 0]' : 0.104606}", "{'[3, 3, 3, 0, 5, 1, 0, 1, 0, 0, 29, 12, 1, 1, 0, 0, 0, 0]' : 0.104904}", "{'[3, 3, 3, 0, 5, 1, 0, 1, 0, 0, 29, 12, 1, 1, 0, 0, 0, 0]' : 0.104816}", "{'[3, 3, 3, 0, 5, 1, 0, 1, 0, 0, 29, 12, 1, 1, 0, 0, 0, 0]' : 0.104345}", "{'[3, 3, 3, 0, 5, 1, 0, 1, 0, 0, 29, 12, 1, 1, 0, 0, 0, 0]' : 0.104516}", "{'[3, 3, 3, 0, 5, 1, 0, 1, 0, 0, 29, 12, 1, 1, 0, 0, 0, 0]' : 0.104508}", "{'[3, 3, 3, 0, 5, 1, 0, 1, 0, 0, 29, 12, 1, 1, 0, 0, 0, 0]' : 0.104482}", "{'[3, 3, 3, 0, 5, 1, 0, 1, 0, 0, 29, 12, 1, 1, 0, 0, 0, 0]' : 0.104501}", "{'[3, 3, 3, 0, 5, 1, 0, 1, 0, 0, 29, 12, 1, 1, 0, 0, 0, 0]' : 0.104528}", "{'[3, 3, 3, 0, 5, 1, 0, 1, 0, 0, 29, 12, 1, 1, 0, 0, 0, 0]' : 0.104894}", "{'[3, 3, 3, 0, 5, 1, 0, 1, 0, 0, 29, 12, 1, 1, 0, 0, 0, 0]' : 0.104475}", "{'[3, 3, 3, 0, 5, 1, 0, 1, 0, 0, 29, 12, 1, 1, 0, 0, 0, 0]' : 0.104524}", "{'[3, 3, 3, 0, 5, 1, 0, 1, 0, 0, 29, 12, 1, 1, 0, 0, 0, 0]' : 0.104882}", "{'[3, 3, 3, 0, 5, 1, 0, 1, 0, 0, 29, 12, 1, 1, 0, 0, 0, 0]' : 0.104613}", "{'[3, 3, 3, 0, 5, 1, 0, 1, 0, 0, 29, 12, 1, 1, 0, 0, 0, 0]' : 0.104511}", "{'[3, 3, 3, 0, 5, 1, 0, 1, 0, 0, 29, 12, 1, 1, 0, 0, 0, 0]' : 0.104975}", "{'[3, 3, 3, 0, 5, 1, 0, 1, 0, 0, 29, 12, 1, 1, 0, 0, 0, 0]' : 0.104476}", "{'[3, 3, 3, 0, 5, 1, 0, 1, 0, 0, 29, 12, 1, 1, 0, 0, 0, 0]' : 0.104645}", "{'[3, 3, 3, 0, 5, 1, 0, 1, 0, 0, 29, 12, 1, 1, 0, 0, 0, 0]' : 0.104488}"]
returning from 'run': {'[3, 3, 3, 0, 5, 1, 0, 1, 0, 0, 29, 12, 1, 1, 0, 0, 0, 0]': ([0.101839, 0.102127, 0.101629, 0.101535, 0.101546, 0.10149, 0.101395, 0.101556, 0.101815, 0.104432, 0.104553, 0.104606, 0.104904, 0.104816, 0.104345, 0.104516, 0.104508, 0.104482, 0.104501, 0.104528, 0.104894, 0.104475, 0.104524, 0.104882, 0.104613, 0.104511, 0.104975, 0.104476, 0.104645, 0.104488], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 3, 3, 0, 5, 1, 0, 1, 0, 0, 29, 12, 1, 1, 0, 0, 0, 0]': ([0.101839, 0.102127, 0.101629, 0.101535, 0.101546, 0.10149, 0.101395, 0.101556, 0.101815, 0.104432, 0.104553, 0.104606, 0.104904, 0.104816, 0.104345, 0.104516, 0.104508, 0.104482, 0.104501, 0.104528, 0.104894, 0.104475, 0.104524, 0.104882, 0.104613, 0.104511, 0.104975, 0.104476, 0.104645, 0.104488], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	3
        Additions: 		2575
        Multiplications: 	780
        Divisions: 		0
        Logical: 		0
        Reads: 			4189
        Writes: 		508
        Comparisons:		25
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest16.exe __orio_perftest16.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest16.exe  
Program Test Output: 
{'[6, 0, 0, 4, 0, 0, 0, 0, 28, 5, 0, 23, 1, 0, 0, 0, 1, 1]' : 0.132464}
{'[6, 0, 0, 4, 0, 0, 0, 0, 28, 5, 0, 23, 1, 0, 0, 0, 1, 1]' : 0.132072}
{'[6, 0, 0, 4, 0, 0, 0, 0, 28, 5, 0, 23, 1, 0, 0, 0, 1, 1]' : 0.127922}
{'[6, 0, 0, 4, 0, 0, 0, 0, 28, 5, 0, 23, 1, 0, 0, 0, 1, 1]' : 0.120119}
{'[6, 0, 0, 4, 0, 0, 0, 0, 28, 5, 0, 23, 1, 0, 0, 0, 1, 1]' : 0.120657}
{'[6, 0, 0, 4, 0, 0, 0, 0, 28, 5, 0, 23, 1, 0, 0, 0, 1, 1]' : 0.120619}
{'[6, 0, 0, 4, 0, 0, 0, 0, 28, 5, 0, 23, 1, 0, 0, 0, 1, 1]' : 0.120471}
{'[6, 0, 0, 4, 0, 0, 0, 0, 28, 5, 0, 23, 1, 0, 0, 0, 1, 1]' : 0.120565}
{'[6, 0, 0, 4, 0, 0, 0, 0, 28, 5, 0, 23, 1, 0, 0, 0, 1, 1]' : 0.120706}
{'[6, 0, 0, 4, 0, 0, 0, 0, 28, 5, 0, 23, 1, 0, 0, 0, 1, 1]' : 0.120499}
{'[6, 0, 0, 4, 0, 0, 0, 0, 28, 5, 0, 23, 1, 0, 0, 0, 1, 1]' : 0.120441}
{'[6, 0, 0, 4, 0, 0, 0, 0, 28, 5, 0, 23, 1, 0, 0, 0, 1, 1]' : 0.119882}
{'[6, 0, 0, 4, 0, 0, 0, 0, 28, 5, 0, 23, 1, 0, 0, 0, 1, 1]' : 0.11785}
{'[6, 0, 0, 4, 0, 0, 0, 0, 28, 5, 0, 23, 1, 0, 0, 0, 1, 1]' : 0.117672}
{'[6, 0, 0, 4, 0, 0, 0, 0, 28, 5, 0, 23, 1, 0, 0, 0, 1, 1]' : 0.117539}
{'[6, 0, 0, 4, 0, 0, 0, 0, 28, 5, 0, 23, 1, 0, 0, 0, 1, 1]' : 0.117752}
{'[6, 0, 0, 4, 0, 0, 0, 0, 28, 5, 0, 23, 1, 0, 0, 0, 1, 1]' : 0.11898}
{'[6, 0, 0, 4, 0, 0, 0, 0, 28, 5, 0, 23, 1, 0, 0, 0, 1, 1]' : 0.120578}
{'[6, 0, 0, 4, 0, 0, 0, 0, 28, 5, 0, 23, 1, 0, 0, 0, 1, 1]' : 0.120506}
{'[6, 0, 0, 4, 0, 0, 0, 0, 28, 5, 0, 23, 1, 0, 0, 0, 1, 1]' : 0.120541}
{'[6, 0, 0, 4, 0, 0, 0, 0, 28, 5, 0, 23, 1, 0, 0, 0, 1, 1]' : 0.120617}
{'[6, 0, 0, 4, 0, 0, 0, 0, 28, 5, 0, 23, 1, 0, 0, 0, 1, 1]' : 0.120571}
{'[6, 0, 0, 4, 0, 0, 0, 0, 28, 5, 0, 23, 1, 0, 0, 0, 1, 1]' : 0.120477}
{'[6, 0, 0, 4, 0, 0, 0, 0, 28, 5, 0, 23, 1, 0, 0, 0, 1, 1]' : 0.120587}
{'[6, 0, 0, 4, 0, 0, 0, 0, 28, 5, 0, 23, 1, 0, 0, 0, 1, 1]' : 0.119035}
{'[6, 0, 0, 4, 0, 0, 0, 0, 28, 5, 0, 23, 1, 0, 0, 0, 1, 1]' : 0.117897}
{'[6, 0, 0, 4, 0, 0, 0, 0, 28, 5, 0, 23, 1, 0, 0, 0, 1, 1]' : 0.117756}
{'[6, 0, 0, 4, 0, 0, 0, 0, 28, 5, 0, 23, 1, 0, 0, 0, 1, 1]' : 0.117622}
{'[6, 0, 0, 4, 0, 0, 0, 0, 28, 5, 0, 23, 1, 0, 0, 0, 1, 1]' : 0.117686}
{'[6, 0, 0, 4, 0, 0, 0, 0, 28, 5, 0, 23, 1, 0, 0, 0, 1, 1]' : 0.119934}

out:
 ["{'[6, 0, 0, 4, 0, 0, 0, 0, 28, 5, 0, 23, 1, 0, 0, 0, 1, 1]' : 0.132464}", "{'[6, 0, 0, 4, 0, 0, 0, 0, 28, 5, 0, 23, 1, 0, 0, 0, 1, 1]' : 0.132072}", "{'[6, 0, 0, 4, 0, 0, 0, 0, 28, 5, 0, 23, 1, 0, 0, 0, 1, 1]' : 0.127922}", "{'[6, 0, 0, 4, 0, 0, 0, 0, 28, 5, 0, 23, 1, 0, 0, 0, 1, 1]' : 0.120119}", "{'[6, 0, 0, 4, 0, 0, 0, 0, 28, 5, 0, 23, 1, 0, 0, 0, 1, 1]' : 0.120657}", "{'[6, 0, 0, 4, 0, 0, 0, 0, 28, 5, 0, 23, 1, 0, 0, 0, 1, 1]' : 0.120619}", "{'[6, 0, 0, 4, 0, 0, 0, 0, 28, 5, 0, 23, 1, 0, 0, 0, 1, 1]' : 0.120471}", "{'[6, 0, 0, 4, 0, 0, 0, 0, 28, 5, 0, 23, 1, 0, 0, 0, 1, 1]' : 0.120565}", "{'[6, 0, 0, 4, 0, 0, 0, 0, 28, 5, 0, 23, 1, 0, 0, 0, 1, 1]' : 0.120706}", "{'[6, 0, 0, 4, 0, 0, 0, 0, 28, 5, 0, 23, 1, 0, 0, 0, 1, 1]' : 0.120499}", "{'[6, 0, 0, 4, 0, 0, 0, 0, 28, 5, 0, 23, 1, 0, 0, 0, 1, 1]' : 0.120441}", "{'[6, 0, 0, 4, 0, 0, 0, 0, 28, 5, 0, 23, 1, 0, 0, 0, 1, 1]' : 0.119882}", "{'[6, 0, 0, 4, 0, 0, 0, 0, 28, 5, 0, 23, 1, 0, 0, 0, 1, 1]' : 0.11785}", "{'[6, 0, 0, 4, 0, 0, 0, 0, 28, 5, 0, 23, 1, 0, 0, 0, 1, 1]' : 0.117672}", "{'[6, 0, 0, 4, 0, 0, 0, 0, 28, 5, 0, 23, 1, 0, 0, 0, 1, 1]' : 0.117539}", "{'[6, 0, 0, 4, 0, 0, 0, 0, 28, 5, 0, 23, 1, 0, 0, 0, 1, 1]' : 0.117752}", "{'[6, 0, 0, 4, 0, 0, 0, 0, 28, 5, 0, 23, 1, 0, 0, 0, 1, 1]' : 0.11898}", "{'[6, 0, 0, 4, 0, 0, 0, 0, 28, 5, 0, 23, 1, 0, 0, 0, 1, 1]' : 0.120578}", "{'[6, 0, 0, 4, 0, 0, 0, 0, 28, 5, 0, 23, 1, 0, 0, 0, 1, 1]' : 0.120506}", "{'[6, 0, 0, 4, 0, 0, 0, 0, 28, 5, 0, 23, 1, 0, 0, 0, 1, 1]' : 0.120541}", "{'[6, 0, 0, 4, 0, 0, 0, 0, 28, 5, 0, 23, 1, 0, 0, 0, 1, 1]' : 0.120617}", "{'[6, 0, 0, 4, 0, 0, 0, 0, 28, 5, 0, 23, 1, 0, 0, 0, 1, 1]' : 0.120571}", "{'[6, 0, 0, 4, 0, 0, 0, 0, 28, 5, 0, 23, 1, 0, 0, 0, 1, 1]' : 0.120477}", "{'[6, 0, 0, 4, 0, 0, 0, 0, 28, 5, 0, 23, 1, 0, 0, 0, 1, 1]' : 0.120587}", "{'[6, 0, 0, 4, 0, 0, 0, 0, 28, 5, 0, 23, 1, 0, 0, 0, 1, 1]' : 0.119035}", "{'[6, 0, 0, 4, 0, 0, 0, 0, 28, 5, 0, 23, 1, 0, 0, 0, 1, 1]' : 0.117897}", "{'[6, 0, 0, 4, 0, 0, 0, 0, 28, 5, 0, 23, 1, 0, 0, 0, 1, 1]' : 0.117756}", "{'[6, 0, 0, 4, 0, 0, 0, 0, 28, 5, 0, 23, 1, 0, 0, 0, 1, 1]' : 0.117622}", "{'[6, 0, 0, 4, 0, 0, 0, 0, 28, 5, 0, 23, 1, 0, 0, 0, 1, 1]' : 0.117686}", "{'[6, 0, 0, 4, 0, 0, 0, 0, 28, 5, 0, 23, 1, 0, 0, 0, 1, 1]' : 0.119934}"]
returning from 'run': {'[6, 0, 0, 4, 0, 0, 0, 0, 28, 5, 0, 23, 1, 0, 0, 0, 1, 1]': ([0.132464, 0.132072, 0.127922, 0.120119, 0.120657, 0.120619, 0.120471, 0.120565, 0.120706, 0.120499, 0.120441, 0.119882, 0.11785, 0.117672, 0.117539, 0.117752, 0.11898, 0.120578, 0.120506, 0.120541, 0.120617, 0.120571, 0.120477, 0.120587, 0.119035, 0.117897, 0.117756, 0.117622, 0.117686, 0.119934], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 0, 4, 0, 0, 0, 0, 28, 5, 0, 23, 1, 0, 0, 0, 1, 1]': ([0.132464, 0.132072, 0.127922, 0.120119, 0.120657, 0.120619, 0.120471, 0.120565, 0.120706, 0.120499, 0.120441, 0.119882, 0.11785, 0.117672, 0.117539, 0.117752, 0.11898, 0.120578, 0.120506, 0.120541, 0.120617, 0.120571, 0.120477, 0.120587, 0.119035, 0.117897, 0.117756, 0.117622, 0.117686, 0.119934], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	6
        Additions: 		232
        Multiplications: 	68
        Divisions: 		0
        Logical: 		0
        Reads: 			500
        Writes: 		115
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest17.exe __orio_perftest17.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest17.exe  
Program Test Output: 
{'[6, 1, 5, 5, 0, 5, 0, 1, 29, 0, 24, 29, 0, 0, 1, 1, 1, 0]' : 0.235788}
{'[6, 1, 5, 5, 0, 5, 0, 1, 29, 0, 24, 29, 0, 0, 1, 1, 1, 0]' : 0.235382}
{'[6, 1, 5, 5, 0, 5, 0, 1, 29, 0, 24, 29, 0, 0, 1, 1, 1, 0]' : 0.232378}
{'[6, 1, 5, 5, 0, 5, 0, 1, 29, 0, 24, 29, 0, 0, 1, 1, 1, 0]' : 0.196899}
{'[6, 1, 5, 5, 0, 5, 0, 1, 29, 0, 24, 29, 0, 0, 1, 1, 1, 0]' : 0.196608}
{'[6, 1, 5, 5, 0, 5, 0, 1, 29, 0, 24, 29, 0, 0, 1, 1, 1, 0]' : 0.196696}
{'[6, 1, 5, 5, 0, 5, 0, 1, 29, 0, 24, 29, 0, 0, 1, 1, 1, 0]' : 0.196448}
{'[6, 1, 5, 5, 0, 5, 0, 1, 29, 0, 24, 29, 0, 0, 1, 1, 1, 0]' : 0.196756}
{'[6, 1, 5, 5, 0, 5, 0, 1, 29, 0, 24, 29, 0, 0, 1, 1, 1, 0]' : 0.202932}
{'[6, 1, 5, 5, 0, 5, 0, 1, 29, 0, 24, 29, 0, 0, 1, 1, 1, 0]' : 0.203111}
{'[6, 1, 5, 5, 0, 5, 0, 1, 29, 0, 24, 29, 0, 0, 1, 1, 1, 0]' : 0.203365}
{'[6, 1, 5, 5, 0, 5, 0, 1, 29, 0, 24, 29, 0, 0, 1, 1, 1, 0]' : 0.20288}
{'[6, 1, 5, 5, 0, 5, 0, 1, 29, 0, 24, 29, 0, 0, 1, 1, 1, 0]' : 0.202854}
{'[6, 1, 5, 5, 0, 5, 0, 1, 29, 0, 24, 29, 0, 0, 1, 1, 1, 0]' : 0.203}
{'[6, 1, 5, 5, 0, 5, 0, 1, 29, 0, 24, 29, 0, 0, 1, 1, 1, 0]' : 0.20296}
{'[6, 1, 5, 5, 0, 5, 0, 1, 29, 0, 24, 29, 0, 0, 1, 1, 1, 0]' : 0.203111}
{'[6, 1, 5, 5, 0, 5, 0, 1, 29, 0, 24, 29, 0, 0, 1, 1, 1, 0]' : 0.202992}
{'[6, 1, 5, 5, 0, 5, 0, 1, 29, 0, 24, 29, 0, 0, 1, 1, 1, 0]' : 0.203267}
{'[6, 1, 5, 5, 0, 5, 0, 1, 29, 0, 24, 29, 0, 0, 1, 1, 1, 0]' : 0.203258}
{'[6, 1, 5, 5, 0, 5, 0, 1, 29, 0, 24, 29, 0, 0, 1, 1, 1, 0]' : 0.202976}
{'[6, 1, 5, 5, 0, 5, 0, 1, 29, 0, 24, 29, 0, 0, 1, 1, 1, 0]' : 0.203021}
{'[6, 1, 5, 5, 0, 5, 0, 1, 29, 0, 24, 29, 0, 0, 1, 1, 1, 0]' : 0.203267}
{'[6, 1, 5, 5, 0, 5, 0, 1, 29, 0, 24, 29, 0, 0, 1, 1, 1, 0]' : 0.202932}
{'[6, 1, 5, 5, 0, 5, 0, 1, 29, 0, 24, 29, 0, 0, 1, 1, 1, 0]' : 0.203107}
{'[6, 1, 5, 5, 0, 5, 0, 1, 29, 0, 24, 29, 0, 0, 1, 1, 1, 0]' : 0.203012}
{'[6, 1, 5, 5, 0, 5, 0, 1, 29, 0, 24, 29, 0, 0, 1, 1, 1, 0]' : 0.203287}
{'[6, 1, 5, 5, 0, 5, 0, 1, 29, 0, 24, 29, 0, 0, 1, 1, 1, 0]' : 0.203172}
{'[6, 1, 5, 5, 0, 5, 0, 1, 29, 0, 24, 29, 0, 0, 1, 1, 1, 0]' : 0.203347}
{'[6, 1, 5, 5, 0, 5, 0, 1, 29, 0, 24, 29, 0, 0, 1, 1, 1, 0]' : 0.203046}
{'[6, 1, 5, 5, 0, 5, 0, 1, 29, 0, 24, 29, 0, 0, 1, 1, 1, 0]' : 0.202942}

out:
 ["{'[6, 1, 5, 5, 0, 5, 0, 1, 29, 0, 24, 29, 0, 0, 1, 1, 1, 0]' : 0.235788}", "{'[6, 1, 5, 5, 0, 5, 0, 1, 29, 0, 24, 29, 0, 0, 1, 1, 1, 0]' : 0.235382}", "{'[6, 1, 5, 5, 0, 5, 0, 1, 29, 0, 24, 29, 0, 0, 1, 1, 1, 0]' : 0.232378}", "{'[6, 1, 5, 5, 0, 5, 0, 1, 29, 0, 24, 29, 0, 0, 1, 1, 1, 0]' : 0.196899}", "{'[6, 1, 5, 5, 0, 5, 0, 1, 29, 0, 24, 29, 0, 0, 1, 1, 1, 0]' : 0.196608}", "{'[6, 1, 5, 5, 0, 5, 0, 1, 29, 0, 24, 29, 0, 0, 1, 1, 1, 0]' : 0.196696}", "{'[6, 1, 5, 5, 0, 5, 0, 1, 29, 0, 24, 29, 0, 0, 1, 1, 1, 0]' : 0.196448}", "{'[6, 1, 5, 5, 0, 5, 0, 1, 29, 0, 24, 29, 0, 0, 1, 1, 1, 0]' : 0.196756}", "{'[6, 1, 5, 5, 0, 5, 0, 1, 29, 0, 24, 29, 0, 0, 1, 1, 1, 0]' : 0.202932}", "{'[6, 1, 5, 5, 0, 5, 0, 1, 29, 0, 24, 29, 0, 0, 1, 1, 1, 0]' : 0.203111}", "{'[6, 1, 5, 5, 0, 5, 0, 1, 29, 0, 24, 29, 0, 0, 1, 1, 1, 0]' : 0.203365}", "{'[6, 1, 5, 5, 0, 5, 0, 1, 29, 0, 24, 29, 0, 0, 1, 1, 1, 0]' : 0.20288}", "{'[6, 1, 5, 5, 0, 5, 0, 1, 29, 0, 24, 29, 0, 0, 1, 1, 1, 0]' : 0.202854}", "{'[6, 1, 5, 5, 0, 5, 0, 1, 29, 0, 24, 29, 0, 0, 1, 1, 1, 0]' : 0.203}", "{'[6, 1, 5, 5, 0, 5, 0, 1, 29, 0, 24, 29, 0, 0, 1, 1, 1, 0]' : 0.20296}", "{'[6, 1, 5, 5, 0, 5, 0, 1, 29, 0, 24, 29, 0, 0, 1, 1, 1, 0]' : 0.203111}", "{'[6, 1, 5, 5, 0, 5, 0, 1, 29, 0, 24, 29, 0, 0, 1, 1, 1, 0]' : 0.202992}", "{'[6, 1, 5, 5, 0, 5, 0, 1, 29, 0, 24, 29, 0, 0, 1, 1, 1, 0]' : 0.203267}", "{'[6, 1, 5, 5, 0, 5, 0, 1, 29, 0, 24, 29, 0, 0, 1, 1, 1, 0]' : 0.203258}", "{'[6, 1, 5, 5, 0, 5, 0, 1, 29, 0, 24, 29, 0, 0, 1, 1, 1, 0]' : 0.202976}", "{'[6, 1, 5, 5, 0, 5, 0, 1, 29, 0, 24, 29, 0, 0, 1, 1, 1, 0]' : 0.203021}", "{'[6, 1, 5, 5, 0, 5, 0, 1, 29, 0, 24, 29, 0, 0, 1, 1, 1, 0]' : 0.203267}", "{'[6, 1, 5, 5, 0, 5, 0, 1, 29, 0, 24, 29, 0, 0, 1, 1, 1, 0]' : 0.202932}", "{'[6, 1, 5, 5, 0, 5, 0, 1, 29, 0, 24, 29, 0, 0, 1, 1, 1, 0]' : 0.203107}", "{'[6, 1, 5, 5, 0, 5, 0, 1, 29, 0, 24, 29, 0, 0, 1, 1, 1, 0]' : 0.203012}", "{'[6, 1, 5, 5, 0, 5, 0, 1, 29, 0, 24, 29, 0, 0, 1, 1, 1, 0]' : 0.203287}", "{'[6, 1, 5, 5, 0, 5, 0, 1, 29, 0, 24, 29, 0, 0, 1, 1, 1, 0]' : 0.203172}", "{'[6, 1, 5, 5, 0, 5, 0, 1, 29, 0, 24, 29, 0, 0, 1, 1, 1, 0]' : 0.203347}", "{'[6, 1, 5, 5, 0, 5, 0, 1, 29, 0, 24, 29, 0, 0, 1, 1, 1, 0]' : 0.203046}", "{'[6, 1, 5, 5, 0, 5, 0, 1, 29, 0, 24, 29, 0, 0, 1, 1, 1, 0]' : 0.202942}"]
returning from 'run': {'[6, 1, 5, 5, 0, 5, 0, 1, 29, 0, 24, 29, 0, 0, 1, 1, 1, 0]': ([0.235788, 0.235382, 0.232378, 0.196899, 0.196608, 0.196696, 0.196448, 0.196756, 0.202932, 0.203111, 0.203365, 0.20288, 0.202854, 0.203, 0.20296, 0.203111, 0.202992, 0.203267, 0.203258, 0.202976, 0.203021, 0.203267, 0.202932, 0.203107, 0.203012, 0.203287, 0.203172, 0.203347, 0.203046, 0.202942], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 1, 5, 5, 0, 5, 0, 1, 29, 0, 24, 29, 0, 0, 1, 1, 1, 0]': ([0.235788, 0.235382, 0.232378, 0.196899, 0.196608, 0.196696, 0.196448, 0.196756, 0.202932, 0.203111, 0.203365, 0.20288, 0.202854, 0.203, 0.20296, 0.203111, 0.202992, 0.203267, 0.203258, 0.202976, 0.203021, 0.203267, 0.202932, 0.203107, 0.203012, 0.203287, 0.203172, 0.203347, 0.203046, 0.202942], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	3
        Additions: 		4496
        Multiplications: 	2240
        Divisions: 		0
        Logical: 		0
        Reads: 			8299
        Writes: 		1272
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest18.exe __orio_perftest18.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest18.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest18.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest18.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest18.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	45
        Max loop nest depth: 	5
        Additions: 		834
        Multiplications: 	210
        Divisions: 		0
        Logical: 		0
        Reads: 			1545
        Writes: 		247
        Comparisons:		45
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest19.exe __orio_perftest19.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest19.exe  
Program Test Output: 
{'[0, 2, 2, 6, 6, 5, 0, 1, 4, 5, 4, 0, 0, 1, 0, 0, 0, 1]' : 0.200883}
{'[0, 2, 2, 6, 6, 5, 0, 1, 4, 5, 4, 0, 0, 1, 0, 0, 0, 1]' : 0.201489}
{'[0, 2, 2, 6, 6, 5, 0, 1, 4, 5, 4, 0, 0, 1, 0, 0, 0, 1]' : 0.19161}
{'[0, 2, 2, 6, 6, 5, 0, 1, 4, 5, 4, 0, 0, 1, 0, 0, 0, 1]' : 0.170592}
{'[0, 2, 2, 6, 6, 5, 0, 1, 4, 5, 4, 0, 0, 1, 0, 0, 0, 1]' : 0.170917}
{'[0, 2, 2, 6, 6, 5, 0, 1, 4, 5, 4, 0, 0, 1, 0, 0, 0, 1]' : 0.170703}
{'[0, 2, 2, 6, 6, 5, 0, 1, 4, 5, 4, 0, 0, 1, 0, 0, 0, 1]' : 0.170552}
{'[0, 2, 2, 6, 6, 5, 0, 1, 4, 5, 4, 0, 0, 1, 0, 0, 0, 1]' : 0.170612}
{'[0, 2, 2, 6, 6, 5, 0, 1, 4, 5, 4, 0, 0, 1, 0, 0, 0, 1]' : 0.171209}
{'[0, 2, 2, 6, 6, 5, 0, 1, 4, 5, 4, 0, 0, 1, 0, 0, 0, 1]' : 0.171419}
{'[0, 2, 2, 6, 6, 5, 0, 1, 4, 5, 4, 0, 0, 1, 0, 0, 0, 1]' : 0.170599}
{'[0, 2, 2, 6, 6, 5, 0, 1, 4, 5, 4, 0, 0, 1, 0, 0, 0, 1]' : 0.170628}
{'[0, 2, 2, 6, 6, 5, 0, 1, 4, 5, 4, 0, 0, 1, 0, 0, 0, 1]' : 0.170675}
{'[0, 2, 2, 6, 6, 5, 0, 1, 4, 5, 4, 0, 0, 1, 0, 0, 0, 1]' : 0.170669}
{'[0, 2, 2, 6, 6, 5, 0, 1, 4, 5, 4, 0, 0, 1, 0, 0, 0, 1]' : 0.170807}
{'[0, 2, 2, 6, 6, 5, 0, 1, 4, 5, 4, 0, 0, 1, 0, 0, 0, 1]' : 0.171406}
{'[0, 2, 2, 6, 6, 5, 0, 1, 4, 5, 4, 0, 0, 1, 0, 0, 0, 1]' : 0.170737}
{'[0, 2, 2, 6, 6, 5, 0, 1, 4, 5, 4, 0, 0, 1, 0, 0, 0, 1]' : 0.170755}
{'[0, 2, 2, 6, 6, 5, 0, 1, 4, 5, 4, 0, 0, 1, 0, 0, 0, 1]' : 0.171292}
{'[0, 2, 2, 6, 6, 5, 0, 1, 4, 5, 4, 0, 0, 1, 0, 0, 0, 1]' : 0.170719}
{'[0, 2, 2, 6, 6, 5, 0, 1, 4, 5, 4, 0, 0, 1, 0, 0, 0, 1]' : 0.170957}
{'[0, 2, 2, 6, 6, 5, 0, 1, 4, 5, 4, 0, 0, 1, 0, 0, 0, 1]' : 0.171205}
{'[0, 2, 2, 6, 6, 5, 0, 1, 4, 5, 4, 0, 0, 1, 0, 0, 0, 1]' : 0.171039}
{'[0, 2, 2, 6, 6, 5, 0, 1, 4, 5, 4, 0, 0, 1, 0, 0, 0, 1]' : 0.170671}
{'[0, 2, 2, 6, 6, 5, 0, 1, 4, 5, 4, 0, 0, 1, 0, 0, 0, 1]' : 0.170631}
{'[0, 2, 2, 6, 6, 5, 0, 1, 4, 5, 4, 0, 0, 1, 0, 0, 0, 1]' : 0.171342}
{'[0, 2, 2, 6, 6, 5, 0, 1, 4, 5, 4, 0, 0, 1, 0, 0, 0, 1]' : 0.170863}
{'[0, 2, 2, 6, 6, 5, 0, 1, 4, 5, 4, 0, 0, 1, 0, 0, 0, 1]' : 0.171527}
{'[0, 2, 2, 6, 6, 5, 0, 1, 4, 5, 4, 0, 0, 1, 0, 0, 0, 1]' : 0.171071}
{'[0, 2, 2, 6, 6, 5, 0, 1, 4, 5, 4, 0, 0, 1, 0, 0, 0, 1]' : 0.17098}

out:
 ["{'[0, 2, 2, 6, 6, 5, 0, 1, 4, 5, 4, 0, 0, 1, 0, 0, 0, 1]' : 0.200883}", "{'[0, 2, 2, 6, 6, 5, 0, 1, 4, 5, 4, 0, 0, 1, 0, 0, 0, 1]' : 0.201489}", "{'[0, 2, 2, 6, 6, 5, 0, 1, 4, 5, 4, 0, 0, 1, 0, 0, 0, 1]' : 0.19161}", "{'[0, 2, 2, 6, 6, 5, 0, 1, 4, 5, 4, 0, 0, 1, 0, 0, 0, 1]' : 0.170592}", "{'[0, 2, 2, 6, 6, 5, 0, 1, 4, 5, 4, 0, 0, 1, 0, 0, 0, 1]' : 0.170917}", "{'[0, 2, 2, 6, 6, 5, 0, 1, 4, 5, 4, 0, 0, 1, 0, 0, 0, 1]' : 0.170703}", "{'[0, 2, 2, 6, 6, 5, 0, 1, 4, 5, 4, 0, 0, 1, 0, 0, 0, 1]' : 0.170552}", "{'[0, 2, 2, 6, 6, 5, 0, 1, 4, 5, 4, 0, 0, 1, 0, 0, 0, 1]' : 0.170612}", "{'[0, 2, 2, 6, 6, 5, 0, 1, 4, 5, 4, 0, 0, 1, 0, 0, 0, 1]' : 0.171209}", "{'[0, 2, 2, 6, 6, 5, 0, 1, 4, 5, 4, 0, 0, 1, 0, 0, 0, 1]' : 0.171419}", "{'[0, 2, 2, 6, 6, 5, 0, 1, 4, 5, 4, 0, 0, 1, 0, 0, 0, 1]' : 0.170599}", "{'[0, 2, 2, 6, 6, 5, 0, 1, 4, 5, 4, 0, 0, 1, 0, 0, 0, 1]' : 0.170628}", "{'[0, 2, 2, 6, 6, 5, 0, 1, 4, 5, 4, 0, 0, 1, 0, 0, 0, 1]' : 0.170675}", "{'[0, 2, 2, 6, 6, 5, 0, 1, 4, 5, 4, 0, 0, 1, 0, 0, 0, 1]' : 0.170669}", "{'[0, 2, 2, 6, 6, 5, 0, 1, 4, 5, 4, 0, 0, 1, 0, 0, 0, 1]' : 0.170807}", "{'[0, 2, 2, 6, 6, 5, 0, 1, 4, 5, 4, 0, 0, 1, 0, 0, 0, 1]' : 0.171406}", "{'[0, 2, 2, 6, 6, 5, 0, 1, 4, 5, 4, 0, 0, 1, 0, 0, 0, 1]' : 0.170737}", "{'[0, 2, 2, 6, 6, 5, 0, 1, 4, 5, 4, 0, 0, 1, 0, 0, 0, 1]' : 0.170755}", "{'[0, 2, 2, 6, 6, 5, 0, 1, 4, 5, 4, 0, 0, 1, 0, 0, 0, 1]' : 0.171292}", "{'[0, 2, 2, 6, 6, 5, 0, 1, 4, 5, 4, 0, 0, 1, 0, 0, 0, 1]' : 0.170719}", "{'[0, 2, 2, 6, 6, 5, 0, 1, 4, 5, 4, 0, 0, 1, 0, 0, 0, 1]' : 0.170957}", "{'[0, 2, 2, 6, 6, 5, 0, 1, 4, 5, 4, 0, 0, 1, 0, 0, 0, 1]' : 0.171205}", "{'[0, 2, 2, 6, 6, 5, 0, 1, 4, 5, 4, 0, 0, 1, 0, 0, 0, 1]' : 0.171039}", "{'[0, 2, 2, 6, 6, 5, 0, 1, 4, 5, 4, 0, 0, 1, 0, 0, 0, 1]' : 0.170671}", "{'[0, 2, 2, 6, 6, 5, 0, 1, 4, 5, 4, 0, 0, 1, 0, 0, 0, 1]' : 0.170631}", "{'[0, 2, 2, 6, 6, 5, 0, 1, 4, 5, 4, 0, 0, 1, 0, 0, 0, 1]' : 0.171342}", "{'[0, 2, 2, 6, 6, 5, 0, 1, 4, 5, 4, 0, 0, 1, 0, 0, 0, 1]' : 0.170863}", "{'[0, 2, 2, 6, 6, 5, 0, 1, 4, 5, 4, 0, 0, 1, 0, 0, 0, 1]' : 0.171527}", "{'[0, 2, 2, 6, 6, 5, 0, 1, 4, 5, 4, 0, 0, 1, 0, 0, 0, 1]' : 0.171071}", "{'[0, 2, 2, 6, 6, 5, 0, 1, 4, 5, 4, 0, 0, 1, 0, 0, 0, 1]' : 0.17098}"]
returning from 'run': {'[0, 2, 2, 6, 6, 5, 0, 1, 4, 5, 4, 0, 0, 1, 0, 0, 0, 1]': ([0.200883, 0.201489, 0.19161, 0.170592, 0.170917, 0.170703, 0.170552, 0.170612, 0.171209, 0.171419, 0.170599, 0.170628, 0.170675, 0.170669, 0.170807, 0.171406, 0.170737, 0.170755, 0.171292, 0.170719, 0.170957, 0.171205, 0.171039, 0.170671, 0.170631, 0.171342, 0.170863, 0.171527, 0.171071, 0.17098], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 2, 6, 6, 5, 0, 1, 4, 5, 4, 0, 0, 1, 0, 0, 0, 1]': ([0.200883, 0.201489, 0.19161, 0.170592, 0.170917, 0.170703, 0.170552, 0.170612, 0.171209, 0.171419, 0.170599, 0.170628, 0.170675, 0.170669, 0.170807, 0.171406, 0.170737, 0.170755, 0.171292, 0.170719, 0.170957, 0.171205, 0.171039, 0.170671, 0.170631, 0.171342, 0.170863, 0.171527, 0.171071, 0.17098], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	6
        Additions: 		109
        Multiplications: 	18
        Divisions: 		0
        Logical: 		0
        Reads: 			254
        Writes: 		74
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest20.exe __orio_perftest20.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest20.exe  
Program Test Output: 
{'[2, 5, 1, 1, 0, 6, 1, 1, 26, 0, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.337181}
{'[2, 5, 1, 1, 0, 6, 1, 1, 26, 0, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.334353}
{'[2, 5, 1, 1, 0, 6, 1, 1, 26, 0, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.282265}
{'[2, 5, 1, 1, 0, 6, 1, 1, 26, 0, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.282379}
{'[2, 5, 1, 1, 0, 6, 1, 1, 26, 0, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.282026}
{'[2, 5, 1, 1, 0, 6, 1, 1, 26, 0, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.282533}
{'[2, 5, 1, 1, 0, 6, 1, 1, 26, 0, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.281822}
{'[2, 5, 1, 1, 0, 6, 1, 1, 26, 0, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.281979}
{'[2, 5, 1, 1, 0, 6, 1, 1, 26, 0, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.281783}
{'[2, 5, 1, 1, 0, 6, 1, 1, 26, 0, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.282609}
{'[2, 5, 1, 1, 0, 6, 1, 1, 26, 0, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.282325}
{'[2, 5, 1, 1, 0, 6, 1, 1, 26, 0, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.281603}
{'[2, 5, 1, 1, 0, 6, 1, 1, 26, 0, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.281741}
{'[2, 5, 1, 1, 0, 6, 1, 1, 26, 0, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.281857}
{'[2, 5, 1, 1, 0, 6, 1, 1, 26, 0, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.282075}
{'[2, 5, 1, 1, 0, 6, 1, 1, 26, 0, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.281965}
{'[2, 5, 1, 1, 0, 6, 1, 1, 26, 0, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.281828}
{'[2, 5, 1, 1, 0, 6, 1, 1, 26, 0, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.282138}
{'[2, 5, 1, 1, 0, 6, 1, 1, 26, 0, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.281991}
{'[2, 5, 1, 1, 0, 6, 1, 1, 26, 0, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.281646}
{'[2, 5, 1, 1, 0, 6, 1, 1, 26, 0, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.282044}
{'[2, 5, 1, 1, 0, 6, 1, 1, 26, 0, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.28201}
{'[2, 5, 1, 1, 0, 6, 1, 1, 26, 0, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.281593}
{'[2, 5, 1, 1, 0, 6, 1, 1, 26, 0, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.281586}
{'[2, 5, 1, 1, 0, 6, 1, 1, 26, 0, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.282017}
{'[2, 5, 1, 1, 0, 6, 1, 1, 26, 0, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.282159}
{'[2, 5, 1, 1, 0, 6, 1, 1, 26, 0, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.281856}
{'[2, 5, 1, 1, 0, 6, 1, 1, 26, 0, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.281768}
{'[2, 5, 1, 1, 0, 6, 1, 1, 26, 0, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.282438}
{'[2, 5, 1, 1, 0, 6, 1, 1, 26, 0, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.281905}

out:
 ["{'[2, 5, 1, 1, 0, 6, 1, 1, 26, 0, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.337181}", "{'[2, 5, 1, 1, 0, 6, 1, 1, 26, 0, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.334353}", "{'[2, 5, 1, 1, 0, 6, 1, 1, 26, 0, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.282265}", "{'[2, 5, 1, 1, 0, 6, 1, 1, 26, 0, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.282379}", "{'[2, 5, 1, 1, 0, 6, 1, 1, 26, 0, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.282026}", "{'[2, 5, 1, 1, 0, 6, 1, 1, 26, 0, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.282533}", "{'[2, 5, 1, 1, 0, 6, 1, 1, 26, 0, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.281822}", "{'[2, 5, 1, 1, 0, 6, 1, 1, 26, 0, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.281979}", "{'[2, 5, 1, 1, 0, 6, 1, 1, 26, 0, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.281783}", "{'[2, 5, 1, 1, 0, 6, 1, 1, 26, 0, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.282609}", "{'[2, 5, 1, 1, 0, 6, 1, 1, 26, 0, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.282325}", "{'[2, 5, 1, 1, 0, 6, 1, 1, 26, 0, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.281603}", "{'[2, 5, 1, 1, 0, 6, 1, 1, 26, 0, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.281741}", "{'[2, 5, 1, 1, 0, 6, 1, 1, 26, 0, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.281857}", "{'[2, 5, 1, 1, 0, 6, 1, 1, 26, 0, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.282075}", "{'[2, 5, 1, 1, 0, 6, 1, 1, 26, 0, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.281965}", "{'[2, 5, 1, 1, 0, 6, 1, 1, 26, 0, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.281828}", "{'[2, 5, 1, 1, 0, 6, 1, 1, 26, 0, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.282138}", "{'[2, 5, 1, 1, 0, 6, 1, 1, 26, 0, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.281991}", "{'[2, 5, 1, 1, 0, 6, 1, 1, 26, 0, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.281646}", "{'[2, 5, 1, 1, 0, 6, 1, 1, 26, 0, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.282044}", "{'[2, 5, 1, 1, 0, 6, 1, 1, 26, 0, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.28201}", "{'[2, 5, 1, 1, 0, 6, 1, 1, 26, 0, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.281593}", "{'[2, 5, 1, 1, 0, 6, 1, 1, 26, 0, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.281586}", "{'[2, 5, 1, 1, 0, 6, 1, 1, 26, 0, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.282017}", "{'[2, 5, 1, 1, 0, 6, 1, 1, 26, 0, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.282159}", "{'[2, 5, 1, 1, 0, 6, 1, 1, 26, 0, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.281856}", "{'[2, 5, 1, 1, 0, 6, 1, 1, 26, 0, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.281768}", "{'[2, 5, 1, 1, 0, 6, 1, 1, 26, 0, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.282438}", "{'[2, 5, 1, 1, 0, 6, 1, 1, 26, 0, 1, 0, 0, 1, 0, 1, 1, 0]' : 0.281905}"]
returning from 'run': {'[2, 5, 1, 1, 0, 6, 1, 1, 26, 0, 1, 0, 0, 1, 0, 1, 1, 0]': ([0.337181, 0.334353, 0.282265, 0.282379, 0.282026, 0.282533, 0.281822, 0.281979, 0.281783, 0.282609, 0.282325, 0.281603, 0.281741, 0.281857, 0.282075, 0.281965, 0.281828, 0.282138, 0.281991, 0.281646, 0.282044, 0.28201, 0.281593, 0.281586, 0.282017, 0.282159, 0.281856, 0.281768, 0.282438, 0.281905], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 5, 1, 1, 0, 6, 1, 1, 26, 0, 1, 0, 0, 1, 0, 1, 1, 0]': ([0.337181, 0.334353, 0.282265, 0.282379, 0.282026, 0.282533, 0.281822, 0.281979, 0.281783, 0.282609, 0.282325, 0.281603, 0.281741, 0.281857, 0.282075, 0.281965, 0.281828, 0.282138, 0.281991, 0.281646, 0.282044, 0.28201, 0.281593, 0.281586, 0.282017, 0.282159, 0.281856, 0.281768, 0.282438, 0.281905], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	55
        Max loop nest depth: 	6
        Additions: 		3497
        Multiplications: 	1320
        Divisions: 		0
        Logical: 		0
        Reads: 			6097
        Writes: 		914
        Comparisons:		55
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest21.exe __orio_perftest21.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest21.exe  
Program Test Output: 
{'[2, 6, 0, 3, 6, 0, 1, 1, 3, 10, 23, 0, 1, 0, 1, 1, 0, 0]' : 0.112134}
{'[2, 6, 0, 3, 6, 0, 1, 1, 3, 10, 23, 0, 1, 0, 1, 1, 0, 0]' : 0.111992}
{'[2, 6, 0, 3, 6, 0, 1, 1, 3, 10, 23, 0, 1, 0, 1, 1, 0, 0]' : 0.112054}
{'[2, 6, 0, 3, 6, 0, 1, 1, 3, 10, 23, 0, 1, 0, 1, 1, 0, 0]' : 0.112067}
{'[2, 6, 0, 3, 6, 0, 1, 1, 3, 10, 23, 0, 1, 0, 1, 1, 0, 0]' : 0.101803}
{'[2, 6, 0, 3, 6, 0, 1, 1, 3, 10, 23, 0, 1, 0, 1, 1, 0, 0]' : 0.0957849}
{'[2, 6, 0, 3, 6, 0, 1, 1, 3, 10, 23, 0, 1, 0, 1, 1, 0, 0]' : 0.0957322}
{'[2, 6, 0, 3, 6, 0, 1, 1, 3, 10, 23, 0, 1, 0, 1, 1, 0, 0]' : 0.095772}
{'[2, 6, 0, 3, 6, 0, 1, 1, 3, 10, 23, 0, 1, 0, 1, 1, 0, 0]' : 0.095819}
{'[2, 6, 0, 3, 6, 0, 1, 1, 3, 10, 23, 0, 1, 0, 1, 1, 0, 0]' : 0.095933}
{'[2, 6, 0, 3, 6, 0, 1, 1, 3, 10, 23, 0, 1, 0, 1, 1, 0, 0]' : 0.095763}
{'[2, 6, 0, 3, 6, 0, 1, 1, 3, 10, 23, 0, 1, 0, 1, 1, 0, 0]' : 0.095835}
{'[2, 6, 0, 3, 6, 0, 1, 1, 3, 10, 23, 0, 1, 0, 1, 1, 0, 0]' : 0.0959439}
{'[2, 6, 0, 3, 6, 0, 1, 1, 3, 10, 23, 0, 1, 0, 1, 1, 0, 0]' : 0.096067}
{'[2, 6, 0, 3, 6, 0, 1, 1, 3, 10, 23, 0, 1, 0, 1, 1, 0, 0]' : 0.0960829}
{'[2, 6, 0, 3, 6, 0, 1, 1, 3, 10, 23, 0, 1, 0, 1, 1, 0, 0]' : 0.0961301}
{'[2, 6, 0, 3, 6, 0, 1, 1, 3, 10, 23, 0, 1, 0, 1, 1, 0, 0]' : 0.0962241}
{'[2, 6, 0, 3, 6, 0, 1, 1, 3, 10, 23, 0, 1, 0, 1, 1, 0, 0]' : 0.0958121}
{'[2, 6, 0, 3, 6, 0, 1, 1, 3, 10, 23, 0, 1, 0, 1, 1, 0, 0]' : 0.095933}
{'[2, 6, 0, 3, 6, 0, 1, 1, 3, 10, 23, 0, 1, 0, 1, 1, 0, 0]' : 0.095938}
{'[2, 6, 0, 3, 6, 0, 1, 1, 3, 10, 23, 0, 1, 0, 1, 1, 0, 0]' : 0.096065}
{'[2, 6, 0, 3, 6, 0, 1, 1, 3, 10, 23, 0, 1, 0, 1, 1, 0, 0]' : 0.0965781}
{'[2, 6, 0, 3, 6, 0, 1, 1, 3, 10, 23, 0, 1, 0, 1, 1, 0, 0]' : 0.0960751}
{'[2, 6, 0, 3, 6, 0, 1, 1, 3, 10, 23, 0, 1, 0, 1, 1, 0, 0]' : 0.0959339}
{'[2, 6, 0, 3, 6, 0, 1, 1, 3, 10, 23, 0, 1, 0, 1, 1, 0, 0]' : 0.095871}
{'[2, 6, 0, 3, 6, 0, 1, 1, 3, 10, 23, 0, 1, 0, 1, 1, 0, 0]' : 0.0959611}
{'[2, 6, 0, 3, 6, 0, 1, 1, 3, 10, 23, 0, 1, 0, 1, 1, 0, 0]' : 0.0958991}
{'[2, 6, 0, 3, 6, 0, 1, 1, 3, 10, 23, 0, 1, 0, 1, 1, 0, 0]' : 0.0959408}
{'[2, 6, 0, 3, 6, 0, 1, 1, 3, 10, 23, 0, 1, 0, 1, 1, 0, 0]' : 0.0957718}
{'[2, 6, 0, 3, 6, 0, 1, 1, 3, 10, 23, 0, 1, 0, 1, 1, 0, 0]' : 0.0958829}

out:
 ["{'[2, 6, 0, 3, 6, 0, 1, 1, 3, 10, 23, 0, 1, 0, 1, 1, 0, 0]' : 0.112134}", "{'[2, 6, 0, 3, 6, 0, 1, 1, 3, 10, 23, 0, 1, 0, 1, 1, 0, 0]' : 0.111992}", "{'[2, 6, 0, 3, 6, 0, 1, 1, 3, 10, 23, 0, 1, 0, 1, 1, 0, 0]' : 0.112054}", "{'[2, 6, 0, 3, 6, 0, 1, 1, 3, 10, 23, 0, 1, 0, 1, 1, 0, 0]' : 0.112067}", "{'[2, 6, 0, 3, 6, 0, 1, 1, 3, 10, 23, 0, 1, 0, 1, 1, 0, 0]' : 0.101803}", "{'[2, 6, 0, 3, 6, 0, 1, 1, 3, 10, 23, 0, 1, 0, 1, 1, 0, 0]' : 0.0957849}", "{'[2, 6, 0, 3, 6, 0, 1, 1, 3, 10, 23, 0, 1, 0, 1, 1, 0, 0]' : 0.0957322}", "{'[2, 6, 0, 3, 6, 0, 1, 1, 3, 10, 23, 0, 1, 0, 1, 1, 0, 0]' : 0.095772}", "{'[2, 6, 0, 3, 6, 0, 1, 1, 3, 10, 23, 0, 1, 0, 1, 1, 0, 0]' : 0.095819}", "{'[2, 6, 0, 3, 6, 0, 1, 1, 3, 10, 23, 0, 1, 0, 1, 1, 0, 0]' : 0.095933}", "{'[2, 6, 0, 3, 6, 0, 1, 1, 3, 10, 23, 0, 1, 0, 1, 1, 0, 0]' : 0.095763}", "{'[2, 6, 0, 3, 6, 0, 1, 1, 3, 10, 23, 0, 1, 0, 1, 1, 0, 0]' : 0.095835}", "{'[2, 6, 0, 3, 6, 0, 1, 1, 3, 10, 23, 0, 1, 0, 1, 1, 0, 0]' : 0.0959439}", "{'[2, 6, 0, 3, 6, 0, 1, 1, 3, 10, 23, 0, 1, 0, 1, 1, 0, 0]' : 0.096067}", "{'[2, 6, 0, 3, 6, 0, 1, 1, 3, 10, 23, 0, 1, 0, 1, 1, 0, 0]' : 0.0960829}", "{'[2, 6, 0, 3, 6, 0, 1, 1, 3, 10, 23, 0, 1, 0, 1, 1, 0, 0]' : 0.0961301}", "{'[2, 6, 0, 3, 6, 0, 1, 1, 3, 10, 23, 0, 1, 0, 1, 1, 0, 0]' : 0.0962241}", "{'[2, 6, 0, 3, 6, 0, 1, 1, 3, 10, 23, 0, 1, 0, 1, 1, 0, 0]' : 0.0958121}", "{'[2, 6, 0, 3, 6, 0, 1, 1, 3, 10, 23, 0, 1, 0, 1, 1, 0, 0]' : 0.095933}", "{'[2, 6, 0, 3, 6, 0, 1, 1, 3, 10, 23, 0, 1, 0, 1, 1, 0, 0]' : 0.095938}", "{'[2, 6, 0, 3, 6, 0, 1, 1, 3, 10, 23, 0, 1, 0, 1, 1, 0, 0]' : 0.096065}", "{'[2, 6, 0, 3, 6, 0, 1, 1, 3, 10, 23, 0, 1, 0, 1, 1, 0, 0]' : 0.0965781}", "{'[2, 6, 0, 3, 6, 0, 1, 1, 3, 10, 23, 0, 1, 0, 1, 1, 0, 0]' : 0.0960751}", "{'[2, 6, 0, 3, 6, 0, 1, 1, 3, 10, 23, 0, 1, 0, 1, 1, 0, 0]' : 0.0959339}", "{'[2, 6, 0, 3, 6, 0, 1, 1, 3, 10, 23, 0, 1, 0, 1, 1, 0, 0]' : 0.095871}", "{'[2, 6, 0, 3, 6, 0, 1, 1, 3, 10, 23, 0, 1, 0, 1, 1, 0, 0]' : 0.0959611}", "{'[2, 6, 0, 3, 6, 0, 1, 1, 3, 10, 23, 0, 1, 0, 1, 1, 0, 0]' : 0.0958991}", "{'[2, 6, 0, 3, 6, 0, 1, 1, 3, 10, 23, 0, 1, 0, 1, 1, 0, 0]' : 0.0959408}", "{'[2, 6, 0, 3, 6, 0, 1, 1, 3, 10, 23, 0, 1, 0, 1, 1, 0, 0]' : 0.0957718}", "{'[2, 6, 0, 3, 6, 0, 1, 1, 3, 10, 23, 0, 1, 0, 1, 1, 0, 0]' : 0.0958829}"]
returning from 'run': {'[2, 6, 0, 3, 6, 0, 1, 1, 3, 10, 23, 0, 1, 0, 1, 1, 0, 0]': ([0.112134, 0.111992, 0.112054, 0.112067, 0.101803, 0.0957849, 0.0957322, 0.095772, 0.095819, 0.095933, 0.095763, 0.095835, 0.0959439, 0.096067, 0.0960829, 0.0961301, 0.0962241, 0.0958121, 0.095933, 0.095938, 0.096065, 0.0965781, 0.0960751, 0.0959339, 0.095871, 0.0959611, 0.0958991, 0.0959408, 0.0957718, 0.0958829], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 6, 0, 3, 6, 0, 1, 1, 3, 10, 23, 0, 1, 0, 1, 1, 0, 0]': ([0.112134, 0.111992, 0.112054, 0.112067, 0.101803, 0.0957849, 0.0957322, 0.095772, 0.095819, 0.095933, 0.095763, 0.095835, 0.0959439, 0.096067, 0.0960829, 0.0961301, 0.0962241, 0.0958121, 0.095933, 0.095938, 0.096065, 0.0965781, 0.0960751, 0.0959339, 0.095871, 0.0959611, 0.0958991, 0.0959408, 0.0957718, 0.0958829], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	50
        Max loop nest depth: 	6
        Additions: 		6824
        Multiplications: 	3286
        Divisions: 		0
        Logical: 		0
        Reads: 			12907
        Writes: 		2103
        Comparisons:		50
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest22.exe __orio_perftest22.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest22.exe  
Program Test Output: 
{'[3, 2, 2, 2, 5, 6, 1, 0, 26, 19, 0, 28, 2, 0, 0, 1, 0, 0]' : 0.208767}
{'[3, 2, 2, 2, 5, 6, 1, 0, 26, 19, 0, 28, 2, 0, 0, 1, 0, 0]' : 0.209184}
{'[3, 2, 2, 2, 5, 6, 1, 0, 26, 19, 0, 28, 2, 0, 0, 1, 0, 0]' : 0.19899}
{'[3, 2, 2, 2, 5, 6, 1, 0, 26, 19, 0, 28, 2, 0, 0, 1, 0, 0]' : 0.183426}
{'[3, 2, 2, 2, 5, 6, 1, 0, 26, 19, 0, 28, 2, 0, 0, 1, 0, 0]' : 0.183713}
{'[3, 2, 2, 2, 5, 6, 1, 0, 26, 19, 0, 28, 2, 0, 0, 1, 0, 0]' : 0.184105}
{'[3, 2, 2, 2, 5, 6, 1, 0, 26, 19, 0, 28, 2, 0, 0, 1, 0, 0]' : 0.183962}
{'[3, 2, 2, 2, 5, 6, 1, 0, 26, 19, 0, 28, 2, 0, 0, 1, 0, 0]' : 0.183578}
{'[3, 2, 2, 2, 5, 6, 1, 0, 26, 19, 0, 28, 2, 0, 0, 1, 0, 0]' : 0.18406}
{'[3, 2, 2, 2, 5, 6, 1, 0, 26, 19, 0, 28, 2, 0, 0, 1, 0, 0]' : 0.183794}
{'[3, 2, 2, 2, 5, 6, 1, 0, 26, 19, 0, 28, 2, 0, 0, 1, 0, 0]' : 0.183939}
{'[3, 2, 2, 2, 5, 6, 1, 0, 26, 19, 0, 28, 2, 0, 0, 1, 0, 0]' : 0.184288}
{'[3, 2, 2, 2, 5, 6, 1, 0, 26, 19, 0, 28, 2, 0, 0, 1, 0, 0]' : 0.183512}
{'[3, 2, 2, 2, 5, 6, 1, 0, 26, 19, 0, 28, 2, 0, 0, 1, 0, 0]' : 0.18301}
{'[3, 2, 2, 2, 5, 6, 1, 0, 26, 19, 0, 28, 2, 0, 0, 1, 0, 0]' : 0.183429}
{'[3, 2, 2, 2, 5, 6, 1, 0, 26, 19, 0, 28, 2, 0, 0, 1, 0, 0]' : 0.183568}
{'[3, 2, 2, 2, 5, 6, 1, 0, 26, 19, 0, 28, 2, 0, 0, 1, 0, 0]' : 0.183817}
{'[3, 2, 2, 2, 5, 6, 1, 0, 26, 19, 0, 28, 2, 0, 0, 1, 0, 0]' : 0.184794}
{'[3, 2, 2, 2, 5, 6, 1, 0, 26, 19, 0, 28, 2, 0, 0, 1, 0, 0]' : 0.183927}
{'[3, 2, 2, 2, 5, 6, 1, 0, 26, 19, 0, 28, 2, 0, 0, 1, 0, 0]' : 0.183173}
{'[3, 2, 2, 2, 5, 6, 1, 0, 26, 19, 0, 28, 2, 0, 0, 1, 0, 0]' : 0.183352}
{'[3, 2, 2, 2, 5, 6, 1, 0, 26, 19, 0, 28, 2, 0, 0, 1, 0, 0]' : 0.183852}
{'[3, 2, 2, 2, 5, 6, 1, 0, 26, 19, 0, 28, 2, 0, 0, 1, 0, 0]' : 0.183674}
{'[3, 2, 2, 2, 5, 6, 1, 0, 26, 19, 0, 28, 2, 0, 0, 1, 0, 0]' : 0.183794}
{'[3, 2, 2, 2, 5, 6, 1, 0, 26, 19, 0, 28, 2, 0, 0, 1, 0, 0]' : 0.183275}
{'[3, 2, 2, 2, 5, 6, 1, 0, 26, 19, 0, 28, 2, 0, 0, 1, 0, 0]' : 0.182888}
{'[3, 2, 2, 2, 5, 6, 1, 0, 26, 19, 0, 28, 2, 0, 0, 1, 0, 0]' : 0.18315}
{'[3, 2, 2, 2, 5, 6, 1, 0, 26, 19, 0, 28, 2, 0, 0, 1, 0, 0]' : 0.182975}
{'[3, 2, 2, 2, 5, 6, 1, 0, 26, 19, 0, 28, 2, 0, 0, 1, 0, 0]' : 0.184384}
{'[3, 2, 2, 2, 5, 6, 1, 0, 26, 19, 0, 28, 2, 0, 0, 1, 0, 0]' : 0.183585}

out:
 ["{'[3, 2, 2, 2, 5, 6, 1, 0, 26, 19, 0, 28, 2, 0, 0, 1, 0, 0]' : 0.208767}", "{'[3, 2, 2, 2, 5, 6, 1, 0, 26, 19, 0, 28, 2, 0, 0, 1, 0, 0]' : 0.209184}", "{'[3, 2, 2, 2, 5, 6, 1, 0, 26, 19, 0, 28, 2, 0, 0, 1, 0, 0]' : 0.19899}", "{'[3, 2, 2, 2, 5, 6, 1, 0, 26, 19, 0, 28, 2, 0, 0, 1, 0, 0]' : 0.183426}", "{'[3, 2, 2, 2, 5, 6, 1, 0, 26, 19, 0, 28, 2, 0, 0, 1, 0, 0]' : 0.183713}", "{'[3, 2, 2, 2, 5, 6, 1, 0, 26, 19, 0, 28, 2, 0, 0, 1, 0, 0]' : 0.184105}", "{'[3, 2, 2, 2, 5, 6, 1, 0, 26, 19, 0, 28, 2, 0, 0, 1, 0, 0]' : 0.183962}", "{'[3, 2, 2, 2, 5, 6, 1, 0, 26, 19, 0, 28, 2, 0, 0, 1, 0, 0]' : 0.183578}", "{'[3, 2, 2, 2, 5, 6, 1, 0, 26, 19, 0, 28, 2, 0, 0, 1, 0, 0]' : 0.18406}", "{'[3, 2, 2, 2, 5, 6, 1, 0, 26, 19, 0, 28, 2, 0, 0, 1, 0, 0]' : 0.183794}", "{'[3, 2, 2, 2, 5, 6, 1, 0, 26, 19, 0, 28, 2, 0, 0, 1, 0, 0]' : 0.183939}", "{'[3, 2, 2, 2, 5, 6, 1, 0, 26, 19, 0, 28, 2, 0, 0, 1, 0, 0]' : 0.184288}", "{'[3, 2, 2, 2, 5, 6, 1, 0, 26, 19, 0, 28, 2, 0, 0, 1, 0, 0]' : 0.183512}", "{'[3, 2, 2, 2, 5, 6, 1, 0, 26, 19, 0, 28, 2, 0, 0, 1, 0, 0]' : 0.18301}", "{'[3, 2, 2, 2, 5, 6, 1, 0, 26, 19, 0, 28, 2, 0, 0, 1, 0, 0]' : 0.183429}", "{'[3, 2, 2, 2, 5, 6, 1, 0, 26, 19, 0, 28, 2, 0, 0, 1, 0, 0]' : 0.183568}", "{'[3, 2, 2, 2, 5, 6, 1, 0, 26, 19, 0, 28, 2, 0, 0, 1, 0, 0]' : 0.183817}", "{'[3, 2, 2, 2, 5, 6, 1, 0, 26, 19, 0, 28, 2, 0, 0, 1, 0, 0]' : 0.184794}", "{'[3, 2, 2, 2, 5, 6, 1, 0, 26, 19, 0, 28, 2, 0, 0, 1, 0, 0]' : 0.183927}", "{'[3, 2, 2, 2, 5, 6, 1, 0, 26, 19, 0, 28, 2, 0, 0, 1, 0, 0]' : 0.183173}", "{'[3, 2, 2, 2, 5, 6, 1, 0, 26, 19, 0, 28, 2, 0, 0, 1, 0, 0]' : 0.183352}", "{'[3, 2, 2, 2, 5, 6, 1, 0, 26, 19, 0, 28, 2, 0, 0, 1, 0, 0]' : 0.183852}", "{'[3, 2, 2, 2, 5, 6, 1, 0, 26, 19, 0, 28, 2, 0, 0, 1, 0, 0]' : 0.183674}", "{'[3, 2, 2, 2, 5, 6, 1, 0, 26, 19, 0, 28, 2, 0, 0, 1, 0, 0]' : 0.183794}", "{'[3, 2, 2, 2, 5, 6, 1, 0, 26, 19, 0, 28, 2, 0, 0, 1, 0, 0]' : 0.183275}", "{'[3, 2, 2, 2, 5, 6, 1, 0, 26, 19, 0, 28, 2, 0, 0, 1, 0, 0]' : 0.182888}", "{'[3, 2, 2, 2, 5, 6, 1, 0, 26, 19, 0, 28, 2, 0, 0, 1, 0, 0]' : 0.18315}", "{'[3, 2, 2, 2, 5, 6, 1, 0, 26, 19, 0, 28, 2, 0, 0, 1, 0, 0]' : 0.182975}", "{'[3, 2, 2, 2, 5, 6, 1, 0, 26, 19, 0, 28, 2, 0, 0, 1, 0, 0]' : 0.184384}", "{'[3, 2, 2, 2, 5, 6, 1, 0, 26, 19, 0, 28, 2, 0, 0, 1, 0, 0]' : 0.183585}"]
returning from 'run': {'[3, 2, 2, 2, 5, 6, 1, 0, 26, 19, 0, 28, 2, 0, 0, 1, 0, 0]': ([0.208767, 0.209184, 0.19899, 0.183426, 0.183713, 0.184105, 0.183962, 0.183578, 0.18406, 0.183794, 0.183939, 0.184288, 0.183512, 0.18301, 0.183429, 0.183568, 0.183817, 0.184794, 0.183927, 0.183173, 0.183352, 0.183852, 0.183674, 0.183794, 0.183275, 0.182888, 0.18315, 0.182975, 0.184384, 0.183585], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 2, 2, 2, 5, 6, 1, 0, 26, 19, 0, 28, 2, 0, 0, 1, 0, 0]': ([0.208767, 0.209184, 0.19899, 0.183426, 0.183713, 0.184105, 0.183962, 0.183578, 0.18406, 0.183794, 0.183939, 0.184288, 0.183512, 0.18301, 0.183429, 0.183568, 0.183817, 0.184794, 0.183927, 0.183173, 0.183352, 0.183852, 0.183674, 0.183794, 0.183275, 0.182888, 0.18315, 0.182975, 0.184384, 0.183585], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = kkk
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	5
        Additions: 		552
        Multiplications: 	174
        Divisions: 		0
        Logical: 		0
        Reads: 			1040
        Writes: 		139
        Comparisons:		18
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest23.exe __orio_perftest23.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest23.exe  
Program Test Output: 
{'[2, 1, 3, 2, 0, 1, 1, 0, 0, 1, 0, 26, 0, 0, 0, 0, 1, 1]' : 0.220564}
{'[2, 1, 3, 2, 0, 1, 1, 0, 0, 1, 0, 26, 0, 0, 0, 0, 1, 1]' : 0.220366}
{'[2, 1, 3, 2, 0, 1, 1, 0, 0, 1, 0, 26, 0, 0, 0, 0, 1, 1]' : 0.194414}
{'[2, 1, 3, 2, 0, 1, 1, 0, 0, 1, 0, 26, 0, 0, 0, 0, 1, 1]' : 0.185341}
{'[2, 1, 3, 2, 0, 1, 1, 0, 0, 1, 0, 26, 0, 0, 0, 0, 1, 1]' : 0.185201}
{'[2, 1, 3, 2, 0, 1, 1, 0, 0, 1, 0, 26, 0, 0, 0, 0, 1, 1]' : 0.18532}
{'[2, 1, 3, 2, 0, 1, 1, 0, 0, 1, 0, 26, 0, 0, 0, 0, 1, 1]' : 0.185693}
{'[2, 1, 3, 2, 0, 1, 1, 0, 0, 1, 0, 26, 0, 0, 0, 0, 1, 1]' : 0.185174}
{'[2, 1, 3, 2, 0, 1, 1, 0, 0, 1, 0, 26, 0, 0, 0, 0, 1, 1]' : 0.185151}
{'[2, 1, 3, 2, 0, 1, 1, 0, 0, 1, 0, 26, 0, 0, 0, 0, 1, 1]' : 0.185436}
{'[2, 1, 3, 2, 0, 1, 1, 0, 0, 1, 0, 26, 0, 0, 0, 0, 1, 1]' : 0.185269}
{'[2, 1, 3, 2, 0, 1, 1, 0, 0, 1, 0, 26, 0, 0, 0, 0, 1, 1]' : 0.185207}
{'[2, 1, 3, 2, 0, 1, 1, 0, 0, 1, 0, 26, 0, 0, 0, 0, 1, 1]' : 0.185488}
{'[2, 1, 3, 2, 0, 1, 1, 0, 0, 1, 0, 26, 0, 0, 0, 0, 1, 1]' : 0.185157}
{'[2, 1, 3, 2, 0, 1, 1, 0, 0, 1, 0, 26, 0, 0, 0, 0, 1, 1]' : 0.185431}
{'[2, 1, 3, 2, 0, 1, 1, 0, 0, 1, 0, 26, 0, 0, 0, 0, 1, 1]' : 0.18524}
{'[2, 1, 3, 2, 0, 1, 1, 0, 0, 1, 0, 26, 0, 0, 0, 0, 1, 1]' : 0.185241}
{'[2, 1, 3, 2, 0, 1, 1, 0, 0, 1, 0, 26, 0, 0, 0, 0, 1, 1]' : 0.185194}
{'[2, 1, 3, 2, 0, 1, 1, 0, 0, 1, 0, 26, 0, 0, 0, 0, 1, 1]' : 0.185601}
{'[2, 1, 3, 2, 0, 1, 1, 0, 0, 1, 0, 26, 0, 0, 0, 0, 1, 1]' : 0.185503}
{'[2, 1, 3, 2, 0, 1, 1, 0, 0, 1, 0, 26, 0, 0, 0, 0, 1, 1]' : 0.185494}
{'[2, 1, 3, 2, 0, 1, 1, 0, 0, 1, 0, 26, 0, 0, 0, 0, 1, 1]' : 0.185238}
{'[2, 1, 3, 2, 0, 1, 1, 0, 0, 1, 0, 26, 0, 0, 0, 0, 1, 1]' : 0.1852}
{'[2, 1, 3, 2, 0, 1, 1, 0, 0, 1, 0, 26, 0, 0, 0, 0, 1, 1]' : 0.185262}
{'[2, 1, 3, 2, 0, 1, 1, 0, 0, 1, 0, 26, 0, 0, 0, 0, 1, 1]' : 0.185575}
{'[2, 1, 3, 2, 0, 1, 1, 0, 0, 1, 0, 26, 0, 0, 0, 0, 1, 1]' : 0.185182}
{'[2, 1, 3, 2, 0, 1, 1, 0, 0, 1, 0, 26, 0, 0, 0, 0, 1, 1]' : 0.185334}
{'[2, 1, 3, 2, 0, 1, 1, 0, 0, 1, 0, 26, 0, 0, 0, 0, 1, 1]' : 0.185391}
{'[2, 1, 3, 2, 0, 1, 1, 0, 0, 1, 0, 26, 0, 0, 0, 0, 1, 1]' : 0.185377}
{'[2, 1, 3, 2, 0, 1, 1, 0, 0, 1, 0, 26, 0, 0, 0, 0, 1, 1]' : 0.185327}

out:
 ["{'[2, 1, 3, 2, 0, 1, 1, 0, 0, 1, 0, 26, 0, 0, 0, 0, 1, 1]' : 0.220564}", "{'[2, 1, 3, 2, 0, 1, 1, 0, 0, 1, 0, 26, 0, 0, 0, 0, 1, 1]' : 0.220366}", "{'[2, 1, 3, 2, 0, 1, 1, 0, 0, 1, 0, 26, 0, 0, 0, 0, 1, 1]' : 0.194414}", "{'[2, 1, 3, 2, 0, 1, 1, 0, 0, 1, 0, 26, 0, 0, 0, 0, 1, 1]' : 0.185341}", "{'[2, 1, 3, 2, 0, 1, 1, 0, 0, 1, 0, 26, 0, 0, 0, 0, 1, 1]' : 0.185201}", "{'[2, 1, 3, 2, 0, 1, 1, 0, 0, 1, 0, 26, 0, 0, 0, 0, 1, 1]' : 0.18532}", "{'[2, 1, 3, 2, 0, 1, 1, 0, 0, 1, 0, 26, 0, 0, 0, 0, 1, 1]' : 0.185693}", "{'[2, 1, 3, 2, 0, 1, 1, 0, 0, 1, 0, 26, 0, 0, 0, 0, 1, 1]' : 0.185174}", "{'[2, 1, 3, 2, 0, 1, 1, 0, 0, 1, 0, 26, 0, 0, 0, 0, 1, 1]' : 0.185151}", "{'[2, 1, 3, 2, 0, 1, 1, 0, 0, 1, 0, 26, 0, 0, 0, 0, 1, 1]' : 0.185436}", "{'[2, 1, 3, 2, 0, 1, 1, 0, 0, 1, 0, 26, 0, 0, 0, 0, 1, 1]' : 0.185269}", "{'[2, 1, 3, 2, 0, 1, 1, 0, 0, 1, 0, 26, 0, 0, 0, 0, 1, 1]' : 0.185207}", "{'[2, 1, 3, 2, 0, 1, 1, 0, 0, 1, 0, 26, 0, 0, 0, 0, 1, 1]' : 0.185488}", "{'[2, 1, 3, 2, 0, 1, 1, 0, 0, 1, 0, 26, 0, 0, 0, 0, 1, 1]' : 0.185157}", "{'[2, 1, 3, 2, 0, 1, 1, 0, 0, 1, 0, 26, 0, 0, 0, 0, 1, 1]' : 0.185431}", "{'[2, 1, 3, 2, 0, 1, 1, 0, 0, 1, 0, 26, 0, 0, 0, 0, 1, 1]' : 0.18524}", "{'[2, 1, 3, 2, 0, 1, 1, 0, 0, 1, 0, 26, 0, 0, 0, 0, 1, 1]' : 0.185241}", "{'[2, 1, 3, 2, 0, 1, 1, 0, 0, 1, 0, 26, 0, 0, 0, 0, 1, 1]' : 0.185194}", "{'[2, 1, 3, 2, 0, 1, 1, 0, 0, 1, 0, 26, 0, 0, 0, 0, 1, 1]' : 0.185601}", "{'[2, 1, 3, 2, 0, 1, 1, 0, 0, 1, 0, 26, 0, 0, 0, 0, 1, 1]' : 0.185503}", "{'[2, 1, 3, 2, 0, 1, 1, 0, 0, 1, 0, 26, 0, 0, 0, 0, 1, 1]' : 0.185494}", "{'[2, 1, 3, 2, 0, 1, 1, 0, 0, 1, 0, 26, 0, 0, 0, 0, 1, 1]' : 0.185238}", "{'[2, 1, 3, 2, 0, 1, 1, 0, 0, 1, 0, 26, 0, 0, 0, 0, 1, 1]' : 0.1852}", "{'[2, 1, 3, 2, 0, 1, 1, 0, 0, 1, 0, 26, 0, 0, 0, 0, 1, 1]' : 0.185262}", "{'[2, 1, 3, 2, 0, 1, 1, 0, 0, 1, 0, 26, 0, 0, 0, 0, 1, 1]' : 0.185575}", "{'[2, 1, 3, 2, 0, 1, 1, 0, 0, 1, 0, 26, 0, 0, 0, 0, 1, 1]' : 0.185182}", "{'[2, 1, 3, 2, 0, 1, 1, 0, 0, 1, 0, 26, 0, 0, 0, 0, 1, 1]' : 0.185334}", "{'[2, 1, 3, 2, 0, 1, 1, 0, 0, 1, 0, 26, 0, 0, 0, 0, 1, 1]' : 0.185391}", "{'[2, 1, 3, 2, 0, 1, 1, 0, 0, 1, 0, 26, 0, 0, 0, 0, 1, 1]' : 0.185377}", "{'[2, 1, 3, 2, 0, 1, 1, 0, 0, 1, 0, 26, 0, 0, 0, 0, 1, 1]' : 0.185327}"]
returning from 'run': {'[2, 1, 3, 2, 0, 1, 1, 0, 0, 1, 0, 26, 0, 0, 0, 0, 1, 1]': ([0.220564, 0.220366, 0.194414, 0.185341, 0.185201, 0.18532, 0.185693, 0.185174, 0.185151, 0.185436, 0.185269, 0.185207, 0.185488, 0.185157, 0.185431, 0.18524, 0.185241, 0.185194, 0.185601, 0.185503, 0.185494, 0.185238, 0.1852, 0.185262, 0.185575, 0.185182, 0.185334, 0.185391, 0.185377, 0.185327], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 1, 3, 2, 0, 1, 1, 0, 0, 1, 0, 26, 0, 0, 0, 0, 1, 1]': ([0.220564, 0.220366, 0.194414, 0.185341, 0.185201, 0.18532, 0.185693, 0.185174, 0.185151, 0.185436, 0.185269, 0.185207, 0.185488, 0.185157, 0.185431, 0.18524, 0.185241, 0.185194, 0.185601, 0.185503, 0.185494, 0.185238, 0.1852, 0.185262, 0.185575, 0.185182, 0.185334, 0.185391, 0.185377, 0.185327], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
Code stats:
        Number of loops: 	170
        Max loop nest depth: 	4
        Additions: 		8010
        Multiplications: 	2280
        Divisions: 		0
        Logical: 		0
        Reads: 			15772
        Writes: 		3175
        Comparisons:		170
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest24.exe __orio_perftest24.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest24.exe  
Program Test Output: 
{'[6, 0, 0, 4, 6, 1, 1, 1, 14, 28, 0, 20, 1, 1, 0, 1, 1, 1]' : 0.107201}
{'[6, 0, 0, 4, 6, 1, 1, 1, 14, 28, 0, 20, 1, 1, 0, 1, 1, 1]' : 0.107128}
{'[6, 0, 0, 4, 6, 1, 1, 1, 14, 28, 0, 20, 1, 1, 0, 1, 1, 1]' : 0.10688}
{'[6, 0, 0, 4, 6, 1, 1, 1, 14, 28, 0, 20, 1, 1, 0, 1, 1, 1]' : 0.107082}
{'[6, 0, 0, 4, 6, 1, 1, 1, 14, 28, 0, 20, 1, 1, 0, 1, 1, 1]' : 0.106955}
{'[6, 0, 0, 4, 6, 1, 1, 1, 14, 28, 0, 20, 1, 1, 0, 1, 1, 1]' : 0.10719}
{'[6, 0, 0, 4, 6, 1, 1, 1, 14, 28, 0, 20, 1, 1, 0, 1, 1, 1]' : 0.10697}
{'[6, 0, 0, 4, 6, 1, 1, 1, 14, 28, 0, 20, 1, 1, 0, 1, 1, 1]' : 0.107063}
{'[6, 0, 0, 4, 6, 1, 1, 1, 14, 28, 0, 20, 1, 1, 0, 1, 1, 1]' : 0.107143}
{'[6, 0, 0, 4, 6, 1, 1, 1, 14, 28, 0, 20, 1, 1, 0, 1, 1, 1]' : 0.107203}
{'[6, 0, 0, 4, 6, 1, 1, 1, 14, 28, 0, 20, 1, 1, 0, 1, 1, 1]' : 0.107229}
{'[6, 0, 0, 4, 6, 1, 1, 1, 14, 28, 0, 20, 1, 1, 0, 1, 1, 1]' : 0.10713}
{'[6, 0, 0, 4, 6, 1, 1, 1, 14, 28, 0, 20, 1, 1, 0, 1, 1, 1]' : 0.10694}
{'[6, 0, 0, 4, 6, 1, 1, 1, 14, 28, 0, 20, 1, 1, 0, 1, 1, 1]' : 0.106929}
{'[6, 0, 0, 4, 6, 1, 1, 1, 14, 28, 0, 20, 1, 1, 0, 1, 1, 1]' : 0.106965}
{'[6, 0, 0, 4, 6, 1, 1, 1, 14, 28, 0, 20, 1, 1, 0, 1, 1, 1]' : 0.106911}
{'[6, 0, 0, 4, 6, 1, 1, 1, 14, 28, 0, 20, 1, 1, 0, 1, 1, 1]' : 0.10716}
{'[6, 0, 0, 4, 6, 1, 1, 1, 14, 28, 0, 20, 1, 1, 0, 1, 1, 1]' : 0.10694}
{'[6, 0, 0, 4, 6, 1, 1, 1, 14, 28, 0, 20, 1, 1, 0, 1, 1, 1]' : 0.107079}
{'[6, 0, 0, 4, 6, 1, 1, 1, 14, 28, 0, 20, 1, 1, 0, 1, 1, 1]' : 0.107345}
{'[6, 0, 0, 4, 6, 1, 1, 1, 14, 28, 0, 20, 1, 1, 0, 1, 1, 1]' : 0.106998}
{'[6, 0, 0, 4, 6, 1, 1, 1, 14, 28, 0, 20, 1, 1, 0, 1, 1, 1]' : 0.106833}
{'[6, 0, 0, 4, 6, 1, 1, 1, 14, 28, 0, 20, 1, 1, 0, 1, 1, 1]' : 0.106812}
{'[6, 0, 0, 4, 6, 1, 1, 1, 14, 28, 0, 20, 1, 1, 0, 1, 1, 1]' : 0.106861}
{'[6, 0, 0, 4, 6, 1, 1, 1, 14, 28, 0, 20, 1, 1, 0, 1, 1, 1]' : 0.106824}
{'[6, 0, 0, 4, 6, 1, 1, 1, 14, 28, 0, 20, 1, 1, 0, 1, 1, 1]' : 0.107002}
{'[6, 0, 0, 4, 6, 1, 1, 1, 14, 28, 0, 20, 1, 1, 0, 1, 1, 1]' : 0.106851}
{'[6, 0, 0, 4, 6, 1, 1, 1, 14, 28, 0, 20, 1, 1, 0, 1, 1, 1]' : 0.106849}
{'[6, 0, 0, 4, 6, 1, 1, 1, 14, 28, 0, 20, 1, 1, 0, 1, 1, 1]' : 0.106819}
{'[6, 0, 0, 4, 6, 1, 1, 1, 14, 28, 0, 20, 1, 1, 0, 1, 1, 1]' : 0.107041}

out:
 ["{'[6, 0, 0, 4, 6, 1, 1, 1, 14, 28, 0, 20, 1, 1, 0, 1, 1, 1]' : 0.107201}", "{'[6, 0, 0, 4, 6, 1, 1, 1, 14, 28, 0, 20, 1, 1, 0, 1, 1, 1]' : 0.107128}", "{'[6, 0, 0, 4, 6, 1, 1, 1, 14, 28, 0, 20, 1, 1, 0, 1, 1, 1]' : 0.10688}", "{'[6, 0, 0, 4, 6, 1, 1, 1, 14, 28, 0, 20, 1, 1, 0, 1, 1, 1]' : 0.107082}", "{'[6, 0, 0, 4, 6, 1, 1, 1, 14, 28, 0, 20, 1, 1, 0, 1, 1, 1]' : 0.106955}", "{'[6, 0, 0, 4, 6, 1, 1, 1, 14, 28, 0, 20, 1, 1, 0, 1, 1, 1]' : 0.10719}", "{'[6, 0, 0, 4, 6, 1, 1, 1, 14, 28, 0, 20, 1, 1, 0, 1, 1, 1]' : 0.10697}", "{'[6, 0, 0, 4, 6, 1, 1, 1, 14, 28, 0, 20, 1, 1, 0, 1, 1, 1]' : 0.107063}", "{'[6, 0, 0, 4, 6, 1, 1, 1, 14, 28, 0, 20, 1, 1, 0, 1, 1, 1]' : 0.107143}", "{'[6, 0, 0, 4, 6, 1, 1, 1, 14, 28, 0, 20, 1, 1, 0, 1, 1, 1]' : 0.107203}", "{'[6, 0, 0, 4, 6, 1, 1, 1, 14, 28, 0, 20, 1, 1, 0, 1, 1, 1]' : 0.107229}", "{'[6, 0, 0, 4, 6, 1, 1, 1, 14, 28, 0, 20, 1, 1, 0, 1, 1, 1]' : 0.10713}", "{'[6, 0, 0, 4, 6, 1, 1, 1, 14, 28, 0, 20, 1, 1, 0, 1, 1, 1]' : 0.10694}", "{'[6, 0, 0, 4, 6, 1, 1, 1, 14, 28, 0, 20, 1, 1, 0, 1, 1, 1]' : 0.106929}", "{'[6, 0, 0, 4, 6, 1, 1, 1, 14, 28, 0, 20, 1, 1, 0, 1, 1, 1]' : 0.106965}", "{'[6, 0, 0, 4, 6, 1, 1, 1, 14, 28, 0, 20, 1, 1, 0, 1, 1, 1]' : 0.106911}", "{'[6, 0, 0, 4, 6, 1, 1, 1, 14, 28, 0, 20, 1, 1, 0, 1, 1, 1]' : 0.10716}", "{'[6, 0, 0, 4, 6, 1, 1, 1, 14, 28, 0, 20, 1, 1, 0, 1, 1, 1]' : 0.10694}", "{'[6, 0, 0, 4, 6, 1, 1, 1, 14, 28, 0, 20, 1, 1, 0, 1, 1, 1]' : 0.107079}", "{'[6, 0, 0, 4, 6, 1, 1, 1, 14, 28, 0, 20, 1, 1, 0, 1, 1, 1]' : 0.107345}", "{'[6, 0, 0, 4, 6, 1, 1, 1, 14, 28, 0, 20, 1, 1, 0, 1, 1, 1]' : 0.106998}", "{'[6, 0, 0, 4, 6, 1, 1, 1, 14, 28, 0, 20, 1, 1, 0, 1, 1, 1]' : 0.106833}", "{'[6, 0, 0, 4, 6, 1, 1, 1, 14, 28, 0, 20, 1, 1, 0, 1, 1, 1]' : 0.106812}", "{'[6, 0, 0, 4, 6, 1, 1, 1, 14, 28, 0, 20, 1, 1, 0, 1, 1, 1]' : 0.106861}", "{'[6, 0, 0, 4, 6, 1, 1, 1, 14, 28, 0, 20, 1, 1, 0, 1, 1, 1]' : 0.106824}", "{'[6, 0, 0, 4, 6, 1, 1, 1, 14, 28, 0, 20, 1, 1, 0, 1, 1, 1]' : 0.107002}", "{'[6, 0, 0, 4, 6, 1, 1, 1, 14, 28, 0, 20, 1, 1, 0, 1, 1, 1]' : 0.106851}", "{'[6, 0, 0, 4, 6, 1, 1, 1, 14, 28, 0, 20, 1, 1, 0, 1, 1, 1]' : 0.106849}", "{'[6, 0, 0, 4, 6, 1, 1, 1, 14, 28, 0, 20, 1, 1, 0, 1, 1, 1]' : 0.106819}", "{'[6, 0, 0, 4, 6, 1, 1, 1, 14, 28, 0, 20, 1, 1, 0, 1, 1, 1]' : 0.107041}"]
returning from 'run': {'[6, 0, 0, 4, 6, 1, 1, 1, 14, 28, 0, 20, 1, 1, 0, 1, 1, 1]': ([0.107201, 0.107128, 0.10688, 0.107082, 0.106955, 0.10719, 0.10697, 0.107063, 0.107143, 0.107203, 0.107229, 0.10713, 0.10694, 0.106929, 0.106965, 0.106911, 0.10716, 0.10694, 0.107079, 0.107345, 0.106998, 0.106833, 0.106812, 0.106861, 0.106824, 0.107002, 0.106851, 0.106849, 0.106819, 0.107041], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 0, 4, 6, 1, 1, 1, 14, 28, 0, 20, 1, 1, 0, 1, 1, 1]': ([0.107201, 0.107128, 0.10688, 0.107082, 0.106955, 0.10719, 0.10697, 0.107063, 0.107143, 0.107203, 0.107229, 0.10713, 0.10694, 0.106929, 0.106965, 0.106911, 0.10716, 0.10694, 0.107079, 0.107345, 0.106998, 0.106833, 0.106812, 0.106861, 0.106824, 0.107002, 0.106851, 0.106849, 0.106819, 0.107041], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	45
        Max loop nest depth: 	5
        Additions: 		2565
        Multiplications: 	600
        Divisions: 		0
        Logical: 		0
        Reads: 			3987
        Writes: 		445
        Comparisons:		45
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest25.exe __orio_perftest25.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest25.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest25.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest25.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest25.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	171
        Max loop nest depth: 	6
        Additions: 		9473
        Multiplications: 	1984
        Divisions: 		0
        Logical: 		0
        Reads: 			13723
        Writes: 		1463
        Comparisons:		171
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest26.exe __orio_perftest26.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest26.exe  
Program Test Output: 
{'[6, 3, 1, 6, 2, 4, 1, 1, 3, 29, 0, 29, 0, 0, 0, 0, 0, 0]' : 0.586121}
{'[6, 3, 1, 6, 2, 4, 1, 1, 3, 29, 0, 29, 0, 0, 0, 0, 0, 0]' : 0.525899}
{'[6, 3, 1, 6, 2, 4, 1, 1, 3, 29, 0, 29, 0, 0, 0, 0, 0, 0]' : 0.525305}
{'[6, 3, 1, 6, 2, 4, 1, 1, 3, 29, 0, 29, 0, 0, 0, 0, 0, 0]' : 0.525764}
{'[6, 3, 1, 6, 2, 4, 1, 1, 3, 29, 0, 29, 0, 0, 0, 0, 0, 0]' : 0.541038}
{'[6, 3, 1, 6, 2, 4, 1, 1, 3, 29, 0, 29, 0, 0, 0, 0, 0, 0]' : 0.541186}
{'[6, 3, 1, 6, 2, 4, 1, 1, 3, 29, 0, 29, 0, 0, 0, 0, 0, 0]' : 0.52431}
{'[6, 3, 1, 6, 2, 4, 1, 1, 3, 29, 0, 29, 0, 0, 0, 0, 0, 0]' : 0.525354}
{'[6, 3, 1, 6, 2, 4, 1, 1, 3, 29, 0, 29, 0, 0, 0, 0, 0, 0]' : 0.523887}
{'[6, 3, 1, 6, 2, 4, 1, 1, 3, 29, 0, 29, 0, 0, 0, 0, 0, 0]' : 0.525619}
{'[6, 3, 1, 6, 2, 4, 1, 1, 3, 29, 0, 29, 0, 0, 0, 0, 0, 0]' : 0.525677}
{'[6, 3, 1, 6, 2, 4, 1, 1, 3, 29, 0, 29, 0, 0, 0, 0, 0, 0]' : 0.526435}
{'[6, 3, 1, 6, 2, 4, 1, 1, 3, 29, 0, 29, 0, 0, 0, 0, 0, 0]' : 0.525891}
{'[6, 3, 1, 6, 2, 4, 1, 1, 3, 29, 0, 29, 0, 0, 0, 0, 0, 0]' : 0.5251}
{'[6, 3, 1, 6, 2, 4, 1, 1, 3, 29, 0, 29, 0, 0, 0, 0, 0, 0]' : 0.52514}
{'[6, 3, 1, 6, 2, 4, 1, 1, 3, 29, 0, 29, 0, 0, 0, 0, 0, 0]' : 0.530784}
{'[6, 3, 1, 6, 2, 4, 1, 1, 3, 29, 0, 29, 0, 0, 0, 0, 0, 0]' : 0.541025}
{'[6, 3, 1, 6, 2, 4, 1, 1, 3, 29, 0, 29, 0, 0, 0, 0, 0, 0]' : 0.541731}
{'[6, 3, 1, 6, 2, 4, 1, 1, 3, 29, 0, 29, 0, 0, 0, 0, 0, 0]' : 0.541921}
{'[6, 3, 1, 6, 2, 4, 1, 1, 3, 29, 0, 29, 0, 0, 0, 0, 0, 0]' : 0.542087}
{'[6, 3, 1, 6, 2, 4, 1, 1, 3, 29, 0, 29, 0, 0, 0, 0, 0, 0]' : 0.542251}
{'[6, 3, 1, 6, 2, 4, 1, 1, 3, 29, 0, 29, 0, 0, 0, 0, 0, 0]' : 0.541732}
{'[6, 3, 1, 6, 2, 4, 1, 1, 3, 29, 0, 29, 0, 0, 0, 0, 0, 0]' : 0.541345}
{'[6, 3, 1, 6, 2, 4, 1, 1, 3, 29, 0, 29, 0, 0, 0, 0, 0, 0]' : 0.541136}
{'[6, 3, 1, 6, 2, 4, 1, 1, 3, 29, 0, 29, 0, 0, 0, 0, 0, 0]' : 0.542704}
{'[6, 3, 1, 6, 2, 4, 1, 1, 3, 29, 0, 29, 0, 0, 0, 0, 0, 0]' : 0.541501}
{'[6, 3, 1, 6, 2, 4, 1, 1, 3, 29, 0, 29, 0, 0, 0, 0, 0, 0]' : 0.541427}
{'[6, 3, 1, 6, 2, 4, 1, 1, 3, 29, 0, 29, 0, 0, 0, 0, 0, 0]' : 0.527403}
{'[6, 3, 1, 6, 2, 4, 1, 1, 3, 29, 0, 29, 0, 0, 0, 0, 0, 0]' : 0.525416}
{'[6, 3, 1, 6, 2, 4, 1, 1, 3, 29, 0, 29, 0, 0, 0, 0, 0, 0]' : 0.525484}

out:
 ["{'[6, 3, 1, 6, 2, 4, 1, 1, 3, 29, 0, 29, 0, 0, 0, 0, 0, 0]' : 0.586121}", "{'[6, 3, 1, 6, 2, 4, 1, 1, 3, 29, 0, 29, 0, 0, 0, 0, 0, 0]' : 0.525899}", "{'[6, 3, 1, 6, 2, 4, 1, 1, 3, 29, 0, 29, 0, 0, 0, 0, 0, 0]' : 0.525305}", "{'[6, 3, 1, 6, 2, 4, 1, 1, 3, 29, 0, 29, 0, 0, 0, 0, 0, 0]' : 0.525764}", "{'[6, 3, 1, 6, 2, 4, 1, 1, 3, 29, 0, 29, 0, 0, 0, 0, 0, 0]' : 0.541038}", "{'[6, 3, 1, 6, 2, 4, 1, 1, 3, 29, 0, 29, 0, 0, 0, 0, 0, 0]' : 0.541186}", "{'[6, 3, 1, 6, 2, 4, 1, 1, 3, 29, 0, 29, 0, 0, 0, 0, 0, 0]' : 0.52431}", "{'[6, 3, 1, 6, 2, 4, 1, 1, 3, 29, 0, 29, 0, 0, 0, 0, 0, 0]' : 0.525354}", "{'[6, 3, 1, 6, 2, 4, 1, 1, 3, 29, 0, 29, 0, 0, 0, 0, 0, 0]' : 0.523887}", "{'[6, 3, 1, 6, 2, 4, 1, 1, 3, 29, 0, 29, 0, 0, 0, 0, 0, 0]' : 0.525619}", "{'[6, 3, 1, 6, 2, 4, 1, 1, 3, 29, 0, 29, 0, 0, 0, 0, 0, 0]' : 0.525677}", "{'[6, 3, 1, 6, 2, 4, 1, 1, 3, 29, 0, 29, 0, 0, 0, 0, 0, 0]' : 0.526435}", "{'[6, 3, 1, 6, 2, 4, 1, 1, 3, 29, 0, 29, 0, 0, 0, 0, 0, 0]' : 0.525891}", "{'[6, 3, 1, 6, 2, 4, 1, 1, 3, 29, 0, 29, 0, 0, 0, 0, 0, 0]' : 0.5251}", "{'[6, 3, 1, 6, 2, 4, 1, 1, 3, 29, 0, 29, 0, 0, 0, 0, 0, 0]' : 0.52514}", "{'[6, 3, 1, 6, 2, 4, 1, 1, 3, 29, 0, 29, 0, 0, 0, 0, 0, 0]' : 0.530784}", "{'[6, 3, 1, 6, 2, 4, 1, 1, 3, 29, 0, 29, 0, 0, 0, 0, 0, 0]' : 0.541025}", "{'[6, 3, 1, 6, 2, 4, 1, 1, 3, 29, 0, 29, 0, 0, 0, 0, 0, 0]' : 0.541731}", "{'[6, 3, 1, 6, 2, 4, 1, 1, 3, 29, 0, 29, 0, 0, 0, 0, 0, 0]' : 0.541921}", "{'[6, 3, 1, 6, 2, 4, 1, 1, 3, 29, 0, 29, 0, 0, 0, 0, 0, 0]' : 0.542087}", "{'[6, 3, 1, 6, 2, 4, 1, 1, 3, 29, 0, 29, 0, 0, 0, 0, 0, 0]' : 0.542251}", "{'[6, 3, 1, 6, 2, 4, 1, 1, 3, 29, 0, 29, 0, 0, 0, 0, 0, 0]' : 0.541732}", "{'[6, 3, 1, 6, 2, 4, 1, 1, 3, 29, 0, 29, 0, 0, 0, 0, 0, 0]' : 0.541345}", "{'[6, 3, 1, 6, 2, 4, 1, 1, 3, 29, 0, 29, 0, 0, 0, 0, 0, 0]' : 0.541136}", "{'[6, 3, 1, 6, 2, 4, 1, 1, 3, 29, 0, 29, 0, 0, 0, 0, 0, 0]' : 0.542704}", "{'[6, 3, 1, 6, 2, 4, 1, 1, 3, 29, 0, 29, 0, 0, 0, 0, 0, 0]' : 0.541501}", "{'[6, 3, 1, 6, 2, 4, 1, 1, 3, 29, 0, 29, 0, 0, 0, 0, 0, 0]' : 0.541427}", "{'[6, 3, 1, 6, 2, 4, 1, 1, 3, 29, 0, 29, 0, 0, 0, 0, 0, 0]' : 0.527403}", "{'[6, 3, 1, 6, 2, 4, 1, 1, 3, 29, 0, 29, 0, 0, 0, 0, 0, 0]' : 0.525416}", "{'[6, 3, 1, 6, 2, 4, 1, 1, 3, 29, 0, 29, 0, 0, 0, 0, 0, 0]' : 0.525484}"]
returning from 'run': {'[6, 3, 1, 6, 2, 4, 1, 1, 3, 29, 0, 29, 0, 0, 0, 0, 0, 0]': ([0.586121, 0.525899, 0.525305, 0.525764, 0.541038, 0.541186, 0.52431, 0.525354, 0.523887, 0.525619, 0.525677, 0.526435, 0.525891, 0.5251, 0.52514, 0.530784, 0.541025, 0.541731, 0.541921, 0.542087, 0.542251, 0.541732, 0.541345, 0.541136, 0.542704, 0.541501, 0.541427, 0.527403, 0.525416, 0.525484], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 3, 1, 6, 2, 4, 1, 1, 3, 29, 0, 29, 0, 0, 0, 0, 0, 0]': ([0.586121, 0.525899, 0.525305, 0.525764, 0.541038, 0.541186, 0.52431, 0.525354, 0.523887, 0.525619, 0.525677, 0.526435, 0.525891, 0.5251, 0.52514, 0.530784, 0.541025, 0.541731, 0.541921, 0.542087, 0.542251, 0.541732, 0.541345, 0.541136, 0.542704, 0.541501, 0.541427, 0.527403, 0.525416, 0.525484], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	111
        Max loop nest depth: 	6
        Additions: 		9849
        Multiplications: 	2480
        Divisions: 		0
        Logical: 		0
        Reads: 			14733
        Writes: 		1655
        Comparisons:		111
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest27.exe __orio_perftest27.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest27.exe  
Program Test Output: 
{'[3, 3, 6, 3, 4, 6, 1, 0, 29, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.189101}
{'[3, 3, 6, 3, 4, 6, 1, 0, 29, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.18879}
{'[3, 3, 6, 3, 4, 6, 1, 0, 29, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.188952}
{'[3, 3, 6, 3, 4, 6, 1, 0, 29, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.188437}
{'[3, 3, 6, 3, 4, 6, 1, 0, 29, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.191166}
{'[3, 3, 6, 3, 4, 6, 1, 0, 29, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.189923}
{'[3, 3, 6, 3, 4, 6, 1, 0, 29, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.189447}
{'[3, 3, 6, 3, 4, 6, 1, 0, 29, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.1887}
{'[3, 3, 6, 3, 4, 6, 1, 0, 29, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.19002}
{'[3, 3, 6, 3, 4, 6, 1, 0, 29, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.190031}
{'[3, 3, 6, 3, 4, 6, 1, 0, 29, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.189713}
{'[3, 3, 6, 3, 4, 6, 1, 0, 29, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.188537}
{'[3, 3, 6, 3, 4, 6, 1, 0, 29, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.190648}
{'[3, 3, 6, 3, 4, 6, 1, 0, 29, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.189902}
{'[3, 3, 6, 3, 4, 6, 1, 0, 29, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.189564}
{'[3, 3, 6, 3, 4, 6, 1, 0, 29, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.189397}
{'[3, 3, 6, 3, 4, 6, 1, 0, 29, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.192512}
{'[3, 3, 6, 3, 4, 6, 1, 0, 29, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.188347}
{'[3, 3, 6, 3, 4, 6, 1, 0, 29, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.19015}
{'[3, 3, 6, 3, 4, 6, 1, 0, 29, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.19068}
{'[3, 3, 6, 3, 4, 6, 1, 0, 29, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.190297}
{'[3, 3, 6, 3, 4, 6, 1, 0, 29, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.189537}
{'[3, 3, 6, 3, 4, 6, 1, 0, 29, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.190366}
{'[3, 3, 6, 3, 4, 6, 1, 0, 29, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.188934}
{'[3, 3, 6, 3, 4, 6, 1, 0, 29, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.189223}
{'[3, 3, 6, 3, 4, 6, 1, 0, 29, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.18935}
{'[3, 3, 6, 3, 4, 6, 1, 0, 29, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.190722}
{'[3, 3, 6, 3, 4, 6, 1, 0, 29, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.19084}
{'[3, 3, 6, 3, 4, 6, 1, 0, 29, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.189106}
{'[3, 3, 6, 3, 4, 6, 1, 0, 29, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.190698}

out:
 ["{'[3, 3, 6, 3, 4, 6, 1, 0, 29, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.189101}", "{'[3, 3, 6, 3, 4, 6, 1, 0, 29, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.18879}", "{'[3, 3, 6, 3, 4, 6, 1, 0, 29, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.188952}", "{'[3, 3, 6, 3, 4, 6, 1, 0, 29, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.188437}", "{'[3, 3, 6, 3, 4, 6, 1, 0, 29, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.191166}", "{'[3, 3, 6, 3, 4, 6, 1, 0, 29, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.189923}", "{'[3, 3, 6, 3, 4, 6, 1, 0, 29, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.189447}", "{'[3, 3, 6, 3, 4, 6, 1, 0, 29, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.1887}", "{'[3, 3, 6, 3, 4, 6, 1, 0, 29, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.19002}", "{'[3, 3, 6, 3, 4, 6, 1, 0, 29, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.190031}", "{'[3, 3, 6, 3, 4, 6, 1, 0, 29, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.189713}", "{'[3, 3, 6, 3, 4, 6, 1, 0, 29, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.188537}", "{'[3, 3, 6, 3, 4, 6, 1, 0, 29, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.190648}", "{'[3, 3, 6, 3, 4, 6, 1, 0, 29, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.189902}", "{'[3, 3, 6, 3, 4, 6, 1, 0, 29, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.189564}", "{'[3, 3, 6, 3, 4, 6, 1, 0, 29, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.189397}", "{'[3, 3, 6, 3, 4, 6, 1, 0, 29, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.192512}", "{'[3, 3, 6, 3, 4, 6, 1, 0, 29, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.188347}", "{'[3, 3, 6, 3, 4, 6, 1, 0, 29, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.19015}", "{'[3, 3, 6, 3, 4, 6, 1, 0, 29, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.19068}", "{'[3, 3, 6, 3, 4, 6, 1, 0, 29, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.190297}", "{'[3, 3, 6, 3, 4, 6, 1, 0, 29, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.189537}", "{'[3, 3, 6, 3, 4, 6, 1, 0, 29, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.190366}", "{'[3, 3, 6, 3, 4, 6, 1, 0, 29, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.188934}", "{'[3, 3, 6, 3, 4, 6, 1, 0, 29, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.189223}", "{'[3, 3, 6, 3, 4, 6, 1, 0, 29, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.18935}", "{'[3, 3, 6, 3, 4, 6, 1, 0, 29, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.190722}", "{'[3, 3, 6, 3, 4, 6, 1, 0, 29, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.19084}", "{'[3, 3, 6, 3, 4, 6, 1, 0, 29, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.189106}", "{'[3, 3, 6, 3, 4, 6, 1, 0, 29, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.190698}"]
returning from 'run': {'[3, 3, 6, 3, 4, 6, 1, 0, 29, 29, 29, 0, 0, 0, 1, 0, 1, 1]': ([0.189101, 0.18879, 0.188952, 0.188437, 0.191166, 0.189923, 0.189447, 0.1887, 0.19002, 0.190031, 0.189713, 0.188537, 0.190648, 0.189902, 0.189564, 0.189397, 0.192512, 0.188347, 0.19015, 0.19068, 0.190297, 0.189537, 0.190366, 0.188934, 0.189223, 0.18935, 0.190722, 0.19084, 0.189106, 0.190698], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 3, 6, 3, 4, 6, 1, 0, 29, 29, 29, 0, 0, 0, 1, 0, 1, 1]': ([0.189101, 0.18879, 0.188952, 0.188437, 0.191166, 0.189923, 0.189447, 0.1887, 0.19002, 0.190031, 0.189713, 0.188537, 0.190648, 0.189902, 0.189564, 0.189397, 0.192512, 0.188347, 0.19015, 0.19068, 0.190297, 0.189537, 0.190366, 0.188934, 0.189223, 0.18935, 0.190722, 0.19084, 0.189106, 0.190698], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	53
        Max loop nest depth: 	5
        Additions: 		3930
        Multiplications: 	1634
        Divisions: 		0
        Logical: 		0
        Reads: 			7955
        Writes: 		1557
        Comparisons:		53
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest28.exe __orio_perftest28.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest28.exe  
Program Test Output: 
{'[0, 1, 3, 1, 6, 0, 0, 0, 5, 17, 0, 8, 0, 0, 2, 1, 0, 1]' : 0.149262}
{'[0, 1, 3, 1, 6, 0, 0, 0, 5, 17, 0, 8, 0, 0, 2, 1, 0, 1]' : 0.149119}
{'[0, 1, 3, 1, 6, 0, 0, 0, 5, 17, 0, 8, 0, 0, 2, 1, 0, 1]' : 0.149083}
{'[0, 1, 3, 1, 6, 0, 0, 0, 5, 17, 0, 8, 0, 0, 2, 1, 0, 1]' : 0.148544}
{'[0, 1, 3, 1, 6, 0, 0, 0, 5, 17, 0, 8, 0, 0, 2, 1, 0, 1]' : 0.130346}
{'[0, 1, 3, 1, 6, 0, 0, 0, 5, 17, 0, 8, 0, 0, 2, 1, 0, 1]' : 0.128234}
{'[0, 1, 3, 1, 6, 0, 0, 0, 5, 17, 0, 8, 0, 0, 2, 1, 0, 1]' : 0.128377}
{'[0, 1, 3, 1, 6, 0, 0, 0, 5, 17, 0, 8, 0, 0, 2, 1, 0, 1]' : 0.127882}
{'[0, 1, 3, 1, 6, 0, 0, 0, 5, 17, 0, 8, 0, 0, 2, 1, 0, 1]' : 0.127853}
{'[0, 1, 3, 1, 6, 0, 0, 0, 5, 17, 0, 8, 0, 0, 2, 1, 0, 1]' : 0.128013}
{'[0, 1, 3, 1, 6, 0, 0, 0, 5, 17, 0, 8, 0, 0, 2, 1, 0, 1]' : 0.128033}
{'[0, 1, 3, 1, 6, 0, 0, 0, 5, 17, 0, 8, 0, 0, 2, 1, 0, 1]' : 0.127969}
{'[0, 1, 3, 1, 6, 0, 0, 0, 5, 17, 0, 8, 0, 0, 2, 1, 0, 1]' : 0.128143}
{'[0, 1, 3, 1, 6, 0, 0, 0, 5, 17, 0, 8, 0, 0, 2, 1, 0, 1]' : 0.12806}
{'[0, 1, 3, 1, 6, 0, 0, 0, 5, 17, 0, 8, 0, 0, 2, 1, 0, 1]' : 0.12818}
{'[0, 1, 3, 1, 6, 0, 0, 0, 5, 17, 0, 8, 0, 0, 2, 1, 0, 1]' : 0.127853}
{'[0, 1, 3, 1, 6, 0, 0, 0, 5, 17, 0, 8, 0, 0, 2, 1, 0, 1]' : 0.127935}
{'[0, 1, 3, 1, 6, 0, 0, 0, 5, 17, 0, 8, 0, 0, 2, 1, 0, 1]' : 0.127922}
{'[0, 1, 3, 1, 6, 0, 0, 0, 5, 17, 0, 8, 0, 0, 2, 1, 0, 1]' : 0.128193}
{'[0, 1, 3, 1, 6, 0, 0, 0, 5, 17, 0, 8, 0, 0, 2, 1, 0, 1]' : 0.128167}
{'[0, 1, 3, 1, 6, 0, 0, 0, 5, 17, 0, 8, 0, 0, 2, 1, 0, 1]' : 0.127866}
{'[0, 1, 3, 1, 6, 0, 0, 0, 5, 17, 0, 8, 0, 0, 2, 1, 0, 1]' : 0.127874}
{'[0, 1, 3, 1, 6, 0, 0, 0, 5, 17, 0, 8, 0, 0, 2, 1, 0, 1]' : 0.128045}
{'[0, 1, 3, 1, 6, 0, 0, 0, 5, 17, 0, 8, 0, 0, 2, 1, 0, 1]' : 0.128022}
{'[0, 1, 3, 1, 6, 0, 0, 0, 5, 17, 0, 8, 0, 0, 2, 1, 0, 1]' : 0.127912}
{'[0, 1, 3, 1, 6, 0, 0, 0, 5, 17, 0, 8, 0, 0, 2, 1, 0, 1]' : 0.128151}
{'[0, 1, 3, 1, 6, 0, 0, 0, 5, 17, 0, 8, 0, 0, 2, 1, 0, 1]' : 0.127857}
{'[0, 1, 3, 1, 6, 0, 0, 0, 5, 17, 0, 8, 0, 0, 2, 1, 0, 1]' : 0.127966}
{'[0, 1, 3, 1, 6, 0, 0, 0, 5, 17, 0, 8, 0, 0, 2, 1, 0, 1]' : 0.127893}
{'[0, 1, 3, 1, 6, 0, 0, 0, 5, 17, 0, 8, 0, 0, 2, 1, 0, 1]' : 0.127834}

out:
 ["{'[0, 1, 3, 1, 6, 0, 0, 0, 5, 17, 0, 8, 0, 0, 2, 1, 0, 1]' : 0.149262}", "{'[0, 1, 3, 1, 6, 0, 0, 0, 5, 17, 0, 8, 0, 0, 2, 1, 0, 1]' : 0.149119}", "{'[0, 1, 3, 1, 6, 0, 0, 0, 5, 17, 0, 8, 0, 0, 2, 1, 0, 1]' : 0.149083}", "{'[0, 1, 3, 1, 6, 0, 0, 0, 5, 17, 0, 8, 0, 0, 2, 1, 0, 1]' : 0.148544}", "{'[0, 1, 3, 1, 6, 0, 0, 0, 5, 17, 0, 8, 0, 0, 2, 1, 0, 1]' : 0.130346}", "{'[0, 1, 3, 1, 6, 0, 0, 0, 5, 17, 0, 8, 0, 0, 2, 1, 0, 1]' : 0.128234}", "{'[0, 1, 3, 1, 6, 0, 0, 0, 5, 17, 0, 8, 0, 0, 2, 1, 0, 1]' : 0.128377}", "{'[0, 1, 3, 1, 6, 0, 0, 0, 5, 17, 0, 8, 0, 0, 2, 1, 0, 1]' : 0.127882}", "{'[0, 1, 3, 1, 6, 0, 0, 0, 5, 17, 0, 8, 0, 0, 2, 1, 0, 1]' : 0.127853}", "{'[0, 1, 3, 1, 6, 0, 0, 0, 5, 17, 0, 8, 0, 0, 2, 1, 0, 1]' : 0.128013}", "{'[0, 1, 3, 1, 6, 0, 0, 0, 5, 17, 0, 8, 0, 0, 2, 1, 0, 1]' : 0.128033}", "{'[0, 1, 3, 1, 6, 0, 0, 0, 5, 17, 0, 8, 0, 0, 2, 1, 0, 1]' : 0.127969}", "{'[0, 1, 3, 1, 6, 0, 0, 0, 5, 17, 0, 8, 0, 0, 2, 1, 0, 1]' : 0.128143}", "{'[0, 1, 3, 1, 6, 0, 0, 0, 5, 17, 0, 8, 0, 0, 2, 1, 0, 1]' : 0.12806}", "{'[0, 1, 3, 1, 6, 0, 0, 0, 5, 17, 0, 8, 0, 0, 2, 1, 0, 1]' : 0.12818}", "{'[0, 1, 3, 1, 6, 0, 0, 0, 5, 17, 0, 8, 0, 0, 2, 1, 0, 1]' : 0.127853}", "{'[0, 1, 3, 1, 6, 0, 0, 0, 5, 17, 0, 8, 0, 0, 2, 1, 0, 1]' : 0.127935}", "{'[0, 1, 3, 1, 6, 0, 0, 0, 5, 17, 0, 8, 0, 0, 2, 1, 0, 1]' : 0.127922}", "{'[0, 1, 3, 1, 6, 0, 0, 0, 5, 17, 0, 8, 0, 0, 2, 1, 0, 1]' : 0.128193}", "{'[0, 1, 3, 1, 6, 0, 0, 0, 5, 17, 0, 8, 0, 0, 2, 1, 0, 1]' : 0.128167}", "{'[0, 1, 3, 1, 6, 0, 0, 0, 5, 17, 0, 8, 0, 0, 2, 1, 0, 1]' : 0.127866}", "{'[0, 1, 3, 1, 6, 0, 0, 0, 5, 17, 0, 8, 0, 0, 2, 1, 0, 1]' : 0.127874}", "{'[0, 1, 3, 1, 6, 0, 0, 0, 5, 17, 0, 8, 0, 0, 2, 1, 0, 1]' : 0.128045}", "{'[0, 1, 3, 1, 6, 0, 0, 0, 5, 17, 0, 8, 0, 0, 2, 1, 0, 1]' : 0.128022}", "{'[0, 1, 3, 1, 6, 0, 0, 0, 5, 17, 0, 8, 0, 0, 2, 1, 0, 1]' : 0.127912}", "{'[0, 1, 3, 1, 6, 0, 0, 0, 5, 17, 0, 8, 0, 0, 2, 1, 0, 1]' : 0.128151}", "{'[0, 1, 3, 1, 6, 0, 0, 0, 5, 17, 0, 8, 0, 0, 2, 1, 0, 1]' : 0.127857}", "{'[0, 1, 3, 1, 6, 0, 0, 0, 5, 17, 0, 8, 0, 0, 2, 1, 0, 1]' : 0.127966}", "{'[0, 1, 3, 1, 6, 0, 0, 0, 5, 17, 0, 8, 0, 0, 2, 1, 0, 1]' : 0.127893}", "{'[0, 1, 3, 1, 6, 0, 0, 0, 5, 17, 0, 8, 0, 0, 2, 1, 0, 1]' : 0.127834}"]
returning from 'run': {'[0, 1, 3, 1, 6, 0, 0, 0, 5, 17, 0, 8, 0, 0, 2, 1, 0, 1]': ([0.149262, 0.149119, 0.149083, 0.148544, 0.130346, 0.128234, 0.128377, 0.127882, 0.127853, 0.128013, 0.128033, 0.127969, 0.128143, 0.12806, 0.12818, 0.127853, 0.127935, 0.127922, 0.128193, 0.128167, 0.127866, 0.127874, 0.128045, 0.128022, 0.127912, 0.128151, 0.127857, 0.127966, 0.127893, 0.127834], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 3, 1, 6, 0, 0, 0, 5, 17, 0, 8, 0, 0, 2, 1, 0, 1]': ([0.149262, 0.149119, 0.149083, 0.148544, 0.130346, 0.128234, 0.128377, 0.127882, 0.127853, 0.128013, 0.128033, 0.127969, 0.128143, 0.12806, 0.12818, 0.127853, 0.127935, 0.127922, 0.128193, 0.128167, 0.127866, 0.127874, 0.128045, 0.128022, 0.127912, 0.128151, 0.127857, 0.127966, 0.127893, 0.127834], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	93
        Max loop nest depth: 	6
        Additions: 		5031
        Multiplications: 	2080
        Divisions: 		0
        Logical: 		0
        Reads: 			9101
        Writes: 		1463
        Comparisons:		93
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest29.exe __orio_perftest29.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest29.exe  
Program Test Output: 
{'[5, 6, 0, 5, 5, 4, 1, 0, 0, 24, 5, 0, 0, 0, 2, 1, 0, 0]' : 0.224809}
{'[5, 6, 0, 5, 5, 4, 1, 0, 0, 24, 5, 0, 0, 0, 2, 1, 0, 0]' : 0.218193}
{'[5, 6, 0, 5, 5, 4, 1, 0, 0, 24, 5, 0, 0, 0, 2, 1, 0, 0]' : 0.189638}
{'[5, 6, 0, 5, 5, 4, 1, 0, 0, 24, 5, 0, 0, 0, 2, 1, 0, 0]' : 0.189637}
{'[5, 6, 0, 5, 5, 4, 1, 0, 0, 24, 5, 0, 0, 0, 2, 1, 0, 0]' : 0.189671}
{'[5, 6, 0, 5, 5, 4, 1, 0, 0, 24, 5, 0, 0, 0, 2, 1, 0, 0]' : 0.190048}
{'[5, 6, 0, 5, 5, 4, 1, 0, 0, 24, 5, 0, 0, 0, 2, 1, 0, 0]' : 0.189996}
{'[5, 6, 0, 5, 5, 4, 1, 0, 0, 24, 5, 0, 0, 0, 2, 1, 0, 0]' : 0.189952}
{'[5, 6, 0, 5, 5, 4, 1, 0, 0, 24, 5, 0, 0, 0, 2, 1, 0, 0]' : 0.18958}
{'[5, 6, 0, 5, 5, 4, 1, 0, 0, 24, 5, 0, 0, 0, 2, 1, 0, 0]' : 0.19025}
{'[5, 6, 0, 5, 5, 4, 1, 0, 0, 24, 5, 0, 0, 0, 2, 1, 0, 0]' : 0.189771}
{'[5, 6, 0, 5, 5, 4, 1, 0, 0, 24, 5, 0, 0, 0, 2, 1, 0, 0]' : 0.189898}
{'[5, 6, 0, 5, 5, 4, 1, 0, 0, 24, 5, 0, 0, 0, 2, 1, 0, 0]' : 0.189875}
{'[5, 6, 0, 5, 5, 4, 1, 0, 0, 24, 5, 0, 0, 0, 2, 1, 0, 0]' : 0.189909}
{'[5, 6, 0, 5, 5, 4, 1, 0, 0, 24, 5, 0, 0, 0, 2, 1, 0, 0]' : 0.189711}
{'[5, 6, 0, 5, 5, 4, 1, 0, 0, 24, 5, 0, 0, 0, 2, 1, 0, 0]' : 0.189679}
{'[5, 6, 0, 5, 5, 4, 1, 0, 0, 24, 5, 0, 0, 0, 2, 1, 0, 0]' : 0.190125}
{'[5, 6, 0, 5, 5, 4, 1, 0, 0, 24, 5, 0, 0, 0, 2, 1, 0, 0]' : 0.190027}
{'[5, 6, 0, 5, 5, 4, 1, 0, 0, 24, 5, 0, 0, 0, 2, 1, 0, 0]' : 0.189703}
{'[5, 6, 0, 5, 5, 4, 1, 0, 0, 24, 5, 0, 0, 0, 2, 1, 0, 0]' : 0.189587}
{'[5, 6, 0, 5, 5, 4, 1, 0, 0, 24, 5, 0, 0, 0, 2, 1, 0, 0]' : 0.190119}
{'[5, 6, 0, 5, 5, 4, 1, 0, 0, 24, 5, 0, 0, 0, 2, 1, 0, 0]' : 0.18963}
{'[5, 6, 0, 5, 5, 4, 1, 0, 0, 24, 5, 0, 0, 0, 2, 1, 0, 0]' : 0.18998}
{'[5, 6, 0, 5, 5, 4, 1, 0, 0, 24, 5, 0, 0, 0, 2, 1, 0, 0]' : 0.189818}
{'[5, 6, 0, 5, 5, 4, 1, 0, 0, 24, 5, 0, 0, 0, 2, 1, 0, 0]' : 0.189954}
{'[5, 6, 0, 5, 5, 4, 1, 0, 0, 24, 5, 0, 0, 0, 2, 1, 0, 0]' : 0.189579}
{'[5, 6, 0, 5, 5, 4, 1, 0, 0, 24, 5, 0, 0, 0, 2, 1, 0, 0]' : 0.189809}
{'[5, 6, 0, 5, 5, 4, 1, 0, 0, 24, 5, 0, 0, 0, 2, 1, 0, 0]' : 0.190239}
{'[5, 6, 0, 5, 5, 4, 1, 0, 0, 24, 5, 0, 0, 0, 2, 1, 0, 0]' : 0.190431}
{'[5, 6, 0, 5, 5, 4, 1, 0, 0, 24, 5, 0, 0, 0, 2, 1, 0, 0]' : 0.190227}

out:
 ["{'[5, 6, 0, 5, 5, 4, 1, 0, 0, 24, 5, 0, 0, 0, 2, 1, 0, 0]' : 0.224809}", "{'[5, 6, 0, 5, 5, 4, 1, 0, 0, 24, 5, 0, 0, 0, 2, 1, 0, 0]' : 0.218193}", "{'[5, 6, 0, 5, 5, 4, 1, 0, 0, 24, 5, 0, 0, 0, 2, 1, 0, 0]' : 0.189638}", "{'[5, 6, 0, 5, 5, 4, 1, 0, 0, 24, 5, 0, 0, 0, 2, 1, 0, 0]' : 0.189637}", "{'[5, 6, 0, 5, 5, 4, 1, 0, 0, 24, 5, 0, 0, 0, 2, 1, 0, 0]' : 0.189671}", "{'[5, 6, 0, 5, 5, 4, 1, 0, 0, 24, 5, 0, 0, 0, 2, 1, 0, 0]' : 0.190048}", "{'[5, 6, 0, 5, 5, 4, 1, 0, 0, 24, 5, 0, 0, 0, 2, 1, 0, 0]' : 0.189996}", "{'[5, 6, 0, 5, 5, 4, 1, 0, 0, 24, 5, 0, 0, 0, 2, 1, 0, 0]' : 0.189952}", "{'[5, 6, 0, 5, 5, 4, 1, 0, 0, 24, 5, 0, 0, 0, 2, 1, 0, 0]' : 0.18958}", "{'[5, 6, 0, 5, 5, 4, 1, 0, 0, 24, 5, 0, 0, 0, 2, 1, 0, 0]' : 0.19025}", "{'[5, 6, 0, 5, 5, 4, 1, 0, 0, 24, 5, 0, 0, 0, 2, 1, 0, 0]' : 0.189771}", "{'[5, 6, 0, 5, 5, 4, 1, 0, 0, 24, 5, 0, 0, 0, 2, 1, 0, 0]' : 0.189898}", "{'[5, 6, 0, 5, 5, 4, 1, 0, 0, 24, 5, 0, 0, 0, 2, 1, 0, 0]' : 0.189875}", "{'[5, 6, 0, 5, 5, 4, 1, 0, 0, 24, 5, 0, 0, 0, 2, 1, 0, 0]' : 0.189909}", "{'[5, 6, 0, 5, 5, 4, 1, 0, 0, 24, 5, 0, 0, 0, 2, 1, 0, 0]' : 0.189711}", "{'[5, 6, 0, 5, 5, 4, 1, 0, 0, 24, 5, 0, 0, 0, 2, 1, 0, 0]' : 0.189679}", "{'[5, 6, 0, 5, 5, 4, 1, 0, 0, 24, 5, 0, 0, 0, 2, 1, 0, 0]' : 0.190125}", "{'[5, 6, 0, 5, 5, 4, 1, 0, 0, 24, 5, 0, 0, 0, 2, 1, 0, 0]' : 0.190027}", "{'[5, 6, 0, 5, 5, 4, 1, 0, 0, 24, 5, 0, 0, 0, 2, 1, 0, 0]' : 0.189703}", "{'[5, 6, 0, 5, 5, 4, 1, 0, 0, 24, 5, 0, 0, 0, 2, 1, 0, 0]' : 0.189587}", "{'[5, 6, 0, 5, 5, 4, 1, 0, 0, 24, 5, 0, 0, 0, 2, 1, 0, 0]' : 0.190119}", "{'[5, 6, 0, 5, 5, 4, 1, 0, 0, 24, 5, 0, 0, 0, 2, 1, 0, 0]' : 0.18963}", "{'[5, 6, 0, 5, 5, 4, 1, 0, 0, 24, 5, 0, 0, 0, 2, 1, 0, 0]' : 0.18998}", "{'[5, 6, 0, 5, 5, 4, 1, 0, 0, 24, 5, 0, 0, 0, 2, 1, 0, 0]' : 0.189818}", "{'[5, 6, 0, 5, 5, 4, 1, 0, 0, 24, 5, 0, 0, 0, 2, 1, 0, 0]' : 0.189954}", "{'[5, 6, 0, 5, 5, 4, 1, 0, 0, 24, 5, 0, 0, 0, 2, 1, 0, 0]' : 0.189579}", "{'[5, 6, 0, 5, 5, 4, 1, 0, 0, 24, 5, 0, 0, 0, 2, 1, 0, 0]' : 0.189809}", "{'[5, 6, 0, 5, 5, 4, 1, 0, 0, 24, 5, 0, 0, 0, 2, 1, 0, 0]' : 0.190239}", "{'[5, 6, 0, 5, 5, 4, 1, 0, 0, 24, 5, 0, 0, 0, 2, 1, 0, 0]' : 0.190431}", "{'[5, 6, 0, 5, 5, 4, 1, 0, 0, 24, 5, 0, 0, 0, 2, 1, 0, 0]' : 0.190227}"]
returning from 'run': {'[5, 6, 0, 5, 5, 4, 1, 0, 0, 24, 5, 0, 0, 0, 2, 1, 0, 0]': ([0.224809, 0.218193, 0.189638, 0.189637, 0.189671, 0.190048, 0.189996, 0.189952, 0.18958, 0.19025, 0.189771, 0.189898, 0.189875, 0.189909, 0.189711, 0.189679, 0.190125, 0.190027, 0.189703, 0.189587, 0.190119, 0.18963, 0.18998, 0.189818, 0.189954, 0.189579, 0.189809, 0.190239, 0.190431, 0.190227], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 6, 0, 5, 5, 4, 1, 0, 0, 24, 5, 0, 0, 0, 2, 1, 0, 0]': ([0.224809, 0.218193, 0.189638, 0.189637, 0.189671, 0.190048, 0.189996, 0.189952, 0.18958, 0.19025, 0.189771, 0.189898, 0.189875, 0.189909, 0.189711, 0.189679, 0.190125, 0.190027, 0.189703, 0.189587, 0.190119, 0.18963, 0.18998, 0.189818, 0.189954, 0.189579, 0.189809, 0.190239, 0.190431, 0.190227], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	6
        Additions: 		2207
        Multiplications: 	972
        Divisions: 		0
        Logical: 		0
        Reads: 			4262
        Writes: 		720
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest30.exe __orio_perftest30.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest30.exe  
Program Test Output: 
{'[2, 0, 2, 4, 2, 6, 0, 1, 4, 0, 22, 28, 1, 0, 0, 1, 0, 1]' : 0.13016}
{'[2, 0, 2, 4, 2, 6, 0, 1, 4, 0, 22, 28, 1, 0, 0, 1, 0, 1]' : 0.1315}
{'[2, 0, 2, 4, 2, 6, 0, 1, 4, 0, 22, 28, 1, 0, 0, 1, 0, 1]' : 0.132629}
{'[2, 0, 2, 4, 2, 6, 0, 1, 4, 0, 22, 28, 1, 0, 0, 1, 0, 1]' : 0.131367}
{'[2, 0, 2, 4, 2, 6, 0, 1, 4, 0, 22, 28, 1, 0, 0, 1, 0, 1]' : 0.114898}
{'[2, 0, 2, 4, 2, 6, 0, 1, 4, 0, 22, 28, 1, 0, 0, 1, 0, 1]' : 0.11293}
{'[2, 0, 2, 4, 2, 6, 0, 1, 4, 0, 22, 28, 1, 0, 0, 1, 0, 1]' : 0.112016}
{'[2, 0, 2, 4, 2, 6, 0, 1, 4, 0, 22, 28, 1, 0, 0, 1, 0, 1]' : 0.112187}
{'[2, 0, 2, 4, 2, 6, 0, 1, 4, 0, 22, 28, 1, 0, 0, 1, 0, 1]' : 0.111953}
{'[2, 0, 2, 4, 2, 6, 0, 1, 4, 0, 22, 28, 1, 0, 0, 1, 0, 1]' : 0.112142}
{'[2, 0, 2, 4, 2, 6, 0, 1, 4, 0, 22, 28, 1, 0, 0, 1, 0, 1]' : 0.113592}
{'[2, 0, 2, 4, 2, 6, 0, 1, 4, 0, 22, 28, 1, 0, 0, 1, 0, 1]' : 0.113559}
{'[2, 0, 2, 4, 2, 6, 0, 1, 4, 0, 22, 28, 1, 0, 0, 1, 0, 1]' : 0.113504}
{'[2, 0, 2, 4, 2, 6, 0, 1, 4, 0, 22, 28, 1, 0, 0, 1, 0, 1]' : 0.113441}
{'[2, 0, 2, 4, 2, 6, 0, 1, 4, 0, 22, 28, 1, 0, 0, 1, 0, 1]' : 0.113534}
{'[2, 0, 2, 4, 2, 6, 0, 1, 4, 0, 22, 28, 1, 0, 0, 1, 0, 1]' : 0.112491}
{'[2, 0, 2, 4, 2, 6, 0, 1, 4, 0, 22, 28, 1, 0, 0, 1, 0, 1]' : 0.112207}
{'[2, 0, 2, 4, 2, 6, 0, 1, 4, 0, 22, 28, 1, 0, 0, 1, 0, 1]' : 0.111836}
{'[2, 0, 2, 4, 2, 6, 0, 1, 4, 0, 22, 28, 1, 0, 0, 1, 0, 1]' : 0.11228}
{'[2, 0, 2, 4, 2, 6, 0, 1, 4, 0, 22, 28, 1, 0, 0, 1, 0, 1]' : 0.113466}
{'[2, 0, 2, 4, 2, 6, 0, 1, 4, 0, 22, 28, 1, 0, 0, 1, 0, 1]' : 0.113412}
{'[2, 0, 2, 4, 2, 6, 0, 1, 4, 0, 22, 28, 1, 0, 0, 1, 0, 1]' : 0.113428}
{'[2, 0, 2, 4, 2, 6, 0, 1, 4, 0, 22, 28, 1, 0, 0, 1, 0, 1]' : 0.113509}
{'[2, 0, 2, 4, 2, 6, 0, 1, 4, 0, 22, 28, 1, 0, 0, 1, 0, 1]' : 0.113464}
{'[2, 0, 2, 4, 2, 6, 0, 1, 4, 0, 22, 28, 1, 0, 0, 1, 0, 1]' : 0.113535}
{'[2, 0, 2, 4, 2, 6, 0, 1, 4, 0, 22, 28, 1, 0, 0, 1, 0, 1]' : 0.112246}
{'[2, 0, 2, 4, 2, 6, 0, 1, 4, 0, 22, 28, 1, 0, 0, 1, 0, 1]' : 0.112056}
{'[2, 0, 2, 4, 2, 6, 0, 1, 4, 0, 22, 28, 1, 0, 0, 1, 0, 1]' : 0.11255}
{'[2, 0, 2, 4, 2, 6, 0, 1, 4, 0, 22, 28, 1, 0, 0, 1, 0, 1]' : 0.113509}
{'[2, 0, 2, 4, 2, 6, 0, 1, 4, 0, 22, 28, 1, 0, 0, 1, 0, 1]' : 0.113508}

out:
 ["{'[2, 0, 2, 4, 2, 6, 0, 1, 4, 0, 22, 28, 1, 0, 0, 1, 0, 1]' : 0.13016}", "{'[2, 0, 2, 4, 2, 6, 0, 1, 4, 0, 22, 28, 1, 0, 0, 1, 0, 1]' : 0.1315}", "{'[2, 0, 2, 4, 2, 6, 0, 1, 4, 0, 22, 28, 1, 0, 0, 1, 0, 1]' : 0.132629}", "{'[2, 0, 2, 4, 2, 6, 0, 1, 4, 0, 22, 28, 1, 0, 0, 1, 0, 1]' : 0.131367}", "{'[2, 0, 2, 4, 2, 6, 0, 1, 4, 0, 22, 28, 1, 0, 0, 1, 0, 1]' : 0.114898}", "{'[2, 0, 2, 4, 2, 6, 0, 1, 4, 0, 22, 28, 1, 0, 0, 1, 0, 1]' : 0.11293}", "{'[2, 0, 2, 4, 2, 6, 0, 1, 4, 0, 22, 28, 1, 0, 0, 1, 0, 1]' : 0.112016}", "{'[2, 0, 2, 4, 2, 6, 0, 1, 4, 0, 22, 28, 1, 0, 0, 1, 0, 1]' : 0.112187}", "{'[2, 0, 2, 4, 2, 6, 0, 1, 4, 0, 22, 28, 1, 0, 0, 1, 0, 1]' : 0.111953}", "{'[2, 0, 2, 4, 2, 6, 0, 1, 4, 0, 22, 28, 1, 0, 0, 1, 0, 1]' : 0.112142}", "{'[2, 0, 2, 4, 2, 6, 0, 1, 4, 0, 22, 28, 1, 0, 0, 1, 0, 1]' : 0.113592}", "{'[2, 0, 2, 4, 2, 6, 0, 1, 4, 0, 22, 28, 1, 0, 0, 1, 0, 1]' : 0.113559}", "{'[2, 0, 2, 4, 2, 6, 0, 1, 4, 0, 22, 28, 1, 0, 0, 1, 0, 1]' : 0.113504}", "{'[2, 0, 2, 4, 2, 6, 0, 1, 4, 0, 22, 28, 1, 0, 0, 1, 0, 1]' : 0.113441}", "{'[2, 0, 2, 4, 2, 6, 0, 1, 4, 0, 22, 28, 1, 0, 0, 1, 0, 1]' : 0.113534}", "{'[2, 0, 2, 4, 2, 6, 0, 1, 4, 0, 22, 28, 1, 0, 0, 1, 0, 1]' : 0.112491}", "{'[2, 0, 2, 4, 2, 6, 0, 1, 4, 0, 22, 28, 1, 0, 0, 1, 0, 1]' : 0.112207}", "{'[2, 0, 2, 4, 2, 6, 0, 1, 4, 0, 22, 28, 1, 0, 0, 1, 0, 1]' : 0.111836}", "{'[2, 0, 2, 4, 2, 6, 0, 1, 4, 0, 22, 28, 1, 0, 0, 1, 0, 1]' : 0.11228}", "{'[2, 0, 2, 4, 2, 6, 0, 1, 4, 0, 22, 28, 1, 0, 0, 1, 0, 1]' : 0.113466}", "{'[2, 0, 2, 4, 2, 6, 0, 1, 4, 0, 22, 28, 1, 0, 0, 1, 0, 1]' : 0.113412}", "{'[2, 0, 2, 4, 2, 6, 0, 1, 4, 0, 22, 28, 1, 0, 0, 1, 0, 1]' : 0.113428}", "{'[2, 0, 2, 4, 2, 6, 0, 1, 4, 0, 22, 28, 1, 0, 0, 1, 0, 1]' : 0.113509}", "{'[2, 0, 2, 4, 2, 6, 0, 1, 4, 0, 22, 28, 1, 0, 0, 1, 0, 1]' : 0.113464}", "{'[2, 0, 2, 4, 2, 6, 0, 1, 4, 0, 22, 28, 1, 0, 0, 1, 0, 1]' : 0.113535}", "{'[2, 0, 2, 4, 2, 6, 0, 1, 4, 0, 22, 28, 1, 0, 0, 1, 0, 1]' : 0.112246}", "{'[2, 0, 2, 4, 2, 6, 0, 1, 4, 0, 22, 28, 1, 0, 0, 1, 0, 1]' : 0.112056}", "{'[2, 0, 2, 4, 2, 6, 0, 1, 4, 0, 22, 28, 1, 0, 0, 1, 0, 1]' : 0.11255}", "{'[2, 0, 2, 4, 2, 6, 0, 1, 4, 0, 22, 28, 1, 0, 0, 1, 0, 1]' : 0.113509}", "{'[2, 0, 2, 4, 2, 6, 0, 1, 4, 0, 22, 28, 1, 0, 0, 1, 0, 1]' : 0.113508}"]
returning from 'run': {'[2, 0, 2, 4, 2, 6, 0, 1, 4, 0, 22, 28, 1, 0, 0, 1, 0, 1]': ([0.13016, 0.1315, 0.132629, 0.131367, 0.114898, 0.11293, 0.112016, 0.112187, 0.111953, 0.112142, 0.113592, 0.113559, 0.113504, 0.113441, 0.113534, 0.112491, 0.112207, 0.111836, 0.11228, 0.113466, 0.113412, 0.113428, 0.113509, 0.113464, 0.113535, 0.112246, 0.112056, 0.11255, 0.113509, 0.113508], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 2, 4, 2, 6, 0, 1, 4, 0, 22, 28, 1, 0, 0, 1, 0, 1]': ([0.13016, 0.1315, 0.132629, 0.131367, 0.114898, 0.11293, 0.112016, 0.112187, 0.111953, 0.112142, 0.113592, 0.113559, 0.113504, 0.113441, 0.113534, 0.112491, 0.112207, 0.111836, 0.11228, 0.113466, 0.113412, 0.113428, 0.113509, 0.113464, 0.113535, 0.112246, 0.112056, 0.11255, 0.113509, 0.113508], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		284
        Multiplications: 	78
        Divisions: 		0
        Logical: 		0
        Reads: 			579
        Writes: 		122
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest31.exe __orio_perftest31.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest31.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest31.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest31.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest31.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	36
        Max loop nest depth: 	5
        Additions: 		3237
        Multiplications: 	1518
        Divisions: 		0
        Logical: 		0
        Reads: 			6257
        Writes: 		1069
        Comparisons:		36
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest32.exe __orio_perftest32.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest32.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest32.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest32.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest32.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	168
        Max loop nest depth: 	5
        Additions: 		4920
        Multiplications: 	1628
        Divisions: 		0
        Logical: 		0
        Reads: 			8936
        Writes: 		1502
        Comparisons:		168
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest33.exe __orio_perftest33.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest33.exe  
Program Test Output: 
{'[6, 6, 6, 0, 0, 6, 1, 1, 1, 27, 12, 0, 1, 0, 1, 1, 0, 1]' : 0.120772}
{'[6, 6, 6, 0, 0, 6, 1, 1, 1, 27, 12, 0, 1, 0, 1, 1, 0, 1]' : 0.120729}
{'[6, 6, 6, 0, 0, 6, 1, 1, 1, 27, 12, 0, 1, 0, 1, 1, 0, 1]' : 0.120602}
{'[6, 6, 6, 0, 0, 6, 1, 1, 1, 27, 12, 0, 1, 0, 1, 1, 0, 1]' : 0.12064}
{'[6, 6, 6, 0, 0, 6, 1, 1, 1, 27, 12, 0, 1, 0, 1, 1, 0, 1]' : 0.107968}
{'[6, 6, 6, 0, 0, 6, 1, 1, 1, 27, 12, 0, 1, 0, 1, 1, 0, 1]' : 0.103113}
{'[6, 6, 6, 0, 0, 6, 1, 1, 1, 27, 12, 0, 1, 0, 1, 1, 0, 1]' : 0.103391}
{'[6, 6, 6, 0, 0, 6, 1, 1, 1, 27, 12, 0, 1, 0, 1, 1, 0, 1]' : 0.103186}
{'[6, 6, 6, 0, 0, 6, 1, 1, 1, 27, 12, 0, 1, 0, 1, 1, 0, 1]' : 0.103437}
{'[6, 6, 6, 0, 0, 6, 1, 1, 1, 27, 12, 0, 1, 0, 1, 1, 0, 1]' : 0.103101}
{'[6, 6, 6, 0, 0, 6, 1, 1, 1, 27, 12, 0, 1, 0, 1, 1, 0, 1]' : 0.103074}
{'[6, 6, 6, 0, 0, 6, 1, 1, 1, 27, 12, 0, 1, 0, 1, 1, 0, 1]' : 0.103095}
{'[6, 6, 6, 0, 0, 6, 1, 1, 1, 27, 12, 0, 1, 0, 1, 1, 0, 1]' : 0.103003}
{'[6, 6, 6, 0, 0, 6, 1, 1, 1, 27, 12, 0, 1, 0, 1, 1, 0, 1]' : 0.103147}
{'[6, 6, 6, 0, 0, 6, 1, 1, 1, 27, 12, 0, 1, 0, 1, 1, 0, 1]' : 0.102998}
{'[6, 6, 6, 0, 0, 6, 1, 1, 1, 27, 12, 0, 1, 0, 1, 1, 0, 1]' : 0.103243}
{'[6, 6, 6, 0, 0, 6, 1, 1, 1, 27, 12, 0, 1, 0, 1, 1, 0, 1]' : 0.103374}
{'[6, 6, 6, 0, 0, 6, 1, 1, 1, 27, 12, 0, 1, 0, 1, 1, 0, 1]' : 0.103211}
{'[6, 6, 6, 0, 0, 6, 1, 1, 1, 27, 12, 0, 1, 0, 1, 1, 0, 1]' : 0.103494}
{'[6, 6, 6, 0, 0, 6, 1, 1, 1, 27, 12, 0, 1, 0, 1, 1, 0, 1]' : 0.10328}
{'[6, 6, 6, 0, 0, 6, 1, 1, 1, 27, 12, 0, 1, 0, 1, 1, 0, 1]' : 0.103196}
{'[6, 6, 6, 0, 0, 6, 1, 1, 1, 27, 12, 0, 1, 0, 1, 1, 0, 1]' : 0.103112}
{'[6, 6, 6, 0, 0, 6, 1, 1, 1, 27, 12, 0, 1, 0, 1, 1, 0, 1]' : 0.103135}
{'[6, 6, 6, 0, 0, 6, 1, 1, 1, 27, 12, 0, 1, 0, 1, 1, 0, 1]' : 0.103004}
{'[6, 6, 6, 0, 0, 6, 1, 1, 1, 27, 12, 0, 1, 0, 1, 1, 0, 1]' : 0.10305}
{'[6, 6, 6, 0, 0, 6, 1, 1, 1, 27, 12, 0, 1, 0, 1, 1, 0, 1]' : 0.103066}
{'[6, 6, 6, 0, 0, 6, 1, 1, 1, 27, 12, 0, 1, 0, 1, 1, 0, 1]' : 0.103032}
{'[6, 6, 6, 0, 0, 6, 1, 1, 1, 27, 12, 0, 1, 0, 1, 1, 0, 1]' : 0.10342}
{'[6, 6, 6, 0, 0, 6, 1, 1, 1, 27, 12, 0, 1, 0, 1, 1, 0, 1]' : 0.10484}
{'[6, 6, 6, 0, 0, 6, 1, 1, 1, 27, 12, 0, 1, 0, 1, 1, 0, 1]' : 0.108766}

out:
 ["{'[6, 6, 6, 0, 0, 6, 1, 1, 1, 27, 12, 0, 1, 0, 1, 1, 0, 1]' : 0.120772}", "{'[6, 6, 6, 0, 0, 6, 1, 1, 1, 27, 12, 0, 1, 0, 1, 1, 0, 1]' : 0.120729}", "{'[6, 6, 6, 0, 0, 6, 1, 1, 1, 27, 12, 0, 1, 0, 1, 1, 0, 1]' : 0.120602}", "{'[6, 6, 6, 0, 0, 6, 1, 1, 1, 27, 12, 0, 1, 0, 1, 1, 0, 1]' : 0.12064}", "{'[6, 6, 6, 0, 0, 6, 1, 1, 1, 27, 12, 0, 1, 0, 1, 1, 0, 1]' : 0.107968}", "{'[6, 6, 6, 0, 0, 6, 1, 1, 1, 27, 12, 0, 1, 0, 1, 1, 0, 1]' : 0.103113}", "{'[6, 6, 6, 0, 0, 6, 1, 1, 1, 27, 12, 0, 1, 0, 1, 1, 0, 1]' : 0.103391}", "{'[6, 6, 6, 0, 0, 6, 1, 1, 1, 27, 12, 0, 1, 0, 1, 1, 0, 1]' : 0.103186}", "{'[6, 6, 6, 0, 0, 6, 1, 1, 1, 27, 12, 0, 1, 0, 1, 1, 0, 1]' : 0.103437}", "{'[6, 6, 6, 0, 0, 6, 1, 1, 1, 27, 12, 0, 1, 0, 1, 1, 0, 1]' : 0.103101}", "{'[6, 6, 6, 0, 0, 6, 1, 1, 1, 27, 12, 0, 1, 0, 1, 1, 0, 1]' : 0.103074}", "{'[6, 6, 6, 0, 0, 6, 1, 1, 1, 27, 12, 0, 1, 0, 1, 1, 0, 1]' : 0.103095}", "{'[6, 6, 6, 0, 0, 6, 1, 1, 1, 27, 12, 0, 1, 0, 1, 1, 0, 1]' : 0.103003}", "{'[6, 6, 6, 0, 0, 6, 1, 1, 1, 27, 12, 0, 1, 0, 1, 1, 0, 1]' : 0.103147}", "{'[6, 6, 6, 0, 0, 6, 1, 1, 1, 27, 12, 0, 1, 0, 1, 1, 0, 1]' : 0.102998}", "{'[6, 6, 6, 0, 0, 6, 1, 1, 1, 27, 12, 0, 1, 0, 1, 1, 0, 1]' : 0.103243}", "{'[6, 6, 6, 0, 0, 6, 1, 1, 1, 27, 12, 0, 1, 0, 1, 1, 0, 1]' : 0.103374}", "{'[6, 6, 6, 0, 0, 6, 1, 1, 1, 27, 12, 0, 1, 0, 1, 1, 0, 1]' : 0.103211}", "{'[6, 6, 6, 0, 0, 6, 1, 1, 1, 27, 12, 0, 1, 0, 1, 1, 0, 1]' : 0.103494}", "{'[6, 6, 6, 0, 0, 6, 1, 1, 1, 27, 12, 0, 1, 0, 1, 1, 0, 1]' : 0.10328}", "{'[6, 6, 6, 0, 0, 6, 1, 1, 1, 27, 12, 0, 1, 0, 1, 1, 0, 1]' : 0.103196}", "{'[6, 6, 6, 0, 0, 6, 1, 1, 1, 27, 12, 0, 1, 0, 1, 1, 0, 1]' : 0.103112}", "{'[6, 6, 6, 0, 0, 6, 1, 1, 1, 27, 12, 0, 1, 0, 1, 1, 0, 1]' : 0.103135}", "{'[6, 6, 6, 0, 0, 6, 1, 1, 1, 27, 12, 0, 1, 0, 1, 1, 0, 1]' : 0.103004}", "{'[6, 6, 6, 0, 0, 6, 1, 1, 1, 27, 12, 0, 1, 0, 1, 1, 0, 1]' : 0.10305}", "{'[6, 6, 6, 0, 0, 6, 1, 1, 1, 27, 12, 0, 1, 0, 1, 1, 0, 1]' : 0.103066}", "{'[6, 6, 6, 0, 0, 6, 1, 1, 1, 27, 12, 0, 1, 0, 1, 1, 0, 1]' : 0.103032}", "{'[6, 6, 6, 0, 0, 6, 1, 1, 1, 27, 12, 0, 1, 0, 1, 1, 0, 1]' : 0.10342}", "{'[6, 6, 6, 0, 0, 6, 1, 1, 1, 27, 12, 0, 1, 0, 1, 1, 0, 1]' : 0.10484}", "{'[6, 6, 6, 0, 0, 6, 1, 1, 1, 27, 12, 0, 1, 0, 1, 1, 0, 1]' : 0.108766}"]
returning from 'run': {'[6, 6, 6, 0, 0, 6, 1, 1, 1, 27, 12, 0, 1, 0, 1, 1, 0, 1]': ([0.120772, 0.120729, 0.120602, 0.12064, 0.107968, 0.103113, 0.103391, 0.103186, 0.103437, 0.103101, 0.103074, 0.103095, 0.103003, 0.103147, 0.102998, 0.103243, 0.103374, 0.103211, 0.103494, 0.10328, 0.103196, 0.103112, 0.103135, 0.103004, 0.10305, 0.103066, 0.103032, 0.10342, 0.10484, 0.108766], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 6, 0, 0, 6, 1, 1, 1, 27, 12, 0, 1, 0, 1, 1, 0, 1]': ([0.120772, 0.120729, 0.120602, 0.12064, 0.107968, 0.103113, 0.103391, 0.103186, 0.103437, 0.103101, 0.103074, 0.103095, 0.103003, 0.103147, 0.102998, 0.103243, 0.103374, 0.103211, 0.103494, 0.10328, 0.103196, 0.103112, 0.103135, 0.103004, 0.10305, 0.103066, 0.103032, 0.10342, 0.10484, 0.108766], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	5
        Additions: 		6345
        Multiplications: 	1914
        Divisions: 		0
        Logical: 		0
        Reads: 			9733
        Writes: 		1008
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest34.exe __orio_perftest34.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest34.exe  
Program Test Output: 
{'[0, 5, 6, 3, 4, 0, 0, 0, 6, 0, 2, 23, 2, 0, 0, 0, 1, 0]' : 0.279614}
{'[0, 5, 6, 3, 4, 0, 0, 0, 6, 0, 2, 23, 2, 0, 0, 0, 1, 0]' : 0.274273}
{'[0, 5, 6, 3, 4, 0, 0, 0, 6, 0, 2, 23, 2, 0, 0, 0, 1, 0]' : 0.243535}
{'[0, 5, 6, 3, 4, 0, 0, 0, 6, 0, 2, 23, 2, 0, 0, 0, 1, 0]' : 0.242801}
{'[0, 5, 6, 3, 4, 0, 0, 0, 6, 0, 2, 23, 2, 0, 0, 0, 1, 0]' : 0.243714}
{'[0, 5, 6, 3, 4, 0, 0, 0, 6, 0, 2, 23, 2, 0, 0, 0, 1, 0]' : 0.244071}
{'[0, 5, 6, 3, 4, 0, 0, 0, 6, 0, 2, 23, 2, 0, 0, 0, 1, 0]' : 0.24263}
{'[0, 5, 6, 3, 4, 0, 0, 0, 6, 0, 2, 23, 2, 0, 0, 0, 1, 0]' : 0.24233}
{'[0, 5, 6, 3, 4, 0, 0, 0, 6, 0, 2, 23, 2, 0, 0, 0, 1, 0]' : 0.240593}
{'[0, 5, 6, 3, 4, 0, 0, 0, 6, 0, 2, 23, 2, 0, 0, 0, 1, 0]' : 0.242765}
{'[0, 5, 6, 3, 4, 0, 0, 0, 6, 0, 2, 23, 2, 0, 0, 0, 1, 0]' : 0.244416}
{'[0, 5, 6, 3, 4, 0, 0, 0, 6, 0, 2, 23, 2, 0, 0, 0, 1, 0]' : 0.243217}
{'[0, 5, 6, 3, 4, 0, 0, 0, 6, 0, 2, 23, 2, 0, 0, 0, 1, 0]' : 0.24116}
{'[0, 5, 6, 3, 4, 0, 0, 0, 6, 0, 2, 23, 2, 0, 0, 0, 1, 0]' : 0.245204}
{'[0, 5, 6, 3, 4, 0, 0, 0, 6, 0, 2, 23, 2, 0, 0, 0, 1, 0]' : 0.249107}
{'[0, 5, 6, 3, 4, 0, 0, 0, 6, 0, 2, 23, 2, 0, 0, 0, 1, 0]' : 0.242011}
{'[0, 5, 6, 3, 4, 0, 0, 0, 6, 0, 2, 23, 2, 0, 0, 0, 1, 0]' : 0.242297}
{'[0, 5, 6, 3, 4, 0, 0, 0, 6, 0, 2, 23, 2, 0, 0, 0, 1, 0]' : 0.243218}
{'[0, 5, 6, 3, 4, 0, 0, 0, 6, 0, 2, 23, 2, 0, 0, 0, 1, 0]' : 0.244807}
{'[0, 5, 6, 3, 4, 0, 0, 0, 6, 0, 2, 23, 2, 0, 0, 0, 1, 0]' : 0.24256}
{'[0, 5, 6, 3, 4, 0, 0, 0, 6, 0, 2, 23, 2, 0, 0, 0, 1, 0]' : 0.242607}
{'[0, 5, 6, 3, 4, 0, 0, 0, 6, 0, 2, 23, 2, 0, 0, 0, 1, 0]' : 0.244037}
{'[0, 5, 6, 3, 4, 0, 0, 0, 6, 0, 2, 23, 2, 0, 0, 0, 1, 0]' : 0.244135}
{'[0, 5, 6, 3, 4, 0, 0, 0, 6, 0, 2, 23, 2, 0, 0, 0, 1, 0]' : 0.240018}
{'[0, 5, 6, 3, 4, 0, 0, 0, 6, 0, 2, 23, 2, 0, 0, 0, 1, 0]' : 0.242243}
{'[0, 5, 6, 3, 4, 0, 0, 0, 6, 0, 2, 23, 2, 0, 0, 0, 1, 0]' : 0.244909}
{'[0, 5, 6, 3, 4, 0, 0, 0, 6, 0, 2, 23, 2, 0, 0, 0, 1, 0]' : 0.24556}
{'[0, 5, 6, 3, 4, 0, 0, 0, 6, 0, 2, 23, 2, 0, 0, 0, 1, 0]' : 0.243875}
{'[0, 5, 6, 3, 4, 0, 0, 0, 6, 0, 2, 23, 2, 0, 0, 0, 1, 0]' : 0.242223}
{'[0, 5, 6, 3, 4, 0, 0, 0, 6, 0, 2, 23, 2, 0, 0, 0, 1, 0]' : 0.244501}

out:
 ["{'[0, 5, 6, 3, 4, 0, 0, 0, 6, 0, 2, 23, 2, 0, 0, 0, 1, 0]' : 0.279614}", "{'[0, 5, 6, 3, 4, 0, 0, 0, 6, 0, 2, 23, 2, 0, 0, 0, 1, 0]' : 0.274273}", "{'[0, 5, 6, 3, 4, 0, 0, 0, 6, 0, 2, 23, 2, 0, 0, 0, 1, 0]' : 0.243535}", "{'[0, 5, 6, 3, 4, 0, 0, 0, 6, 0, 2, 23, 2, 0, 0, 0, 1, 0]' : 0.242801}", "{'[0, 5, 6, 3, 4, 0, 0, 0, 6, 0, 2, 23, 2, 0, 0, 0, 1, 0]' : 0.243714}", "{'[0, 5, 6, 3, 4, 0, 0, 0, 6, 0, 2, 23, 2, 0, 0, 0, 1, 0]' : 0.244071}", "{'[0, 5, 6, 3, 4, 0, 0, 0, 6, 0, 2, 23, 2, 0, 0, 0, 1, 0]' : 0.24263}", "{'[0, 5, 6, 3, 4, 0, 0, 0, 6, 0, 2, 23, 2, 0, 0, 0, 1, 0]' : 0.24233}", "{'[0, 5, 6, 3, 4, 0, 0, 0, 6, 0, 2, 23, 2, 0, 0, 0, 1, 0]' : 0.240593}", "{'[0, 5, 6, 3, 4, 0, 0, 0, 6, 0, 2, 23, 2, 0, 0, 0, 1, 0]' : 0.242765}", "{'[0, 5, 6, 3, 4, 0, 0, 0, 6, 0, 2, 23, 2, 0, 0, 0, 1, 0]' : 0.244416}", "{'[0, 5, 6, 3, 4, 0, 0, 0, 6, 0, 2, 23, 2, 0, 0, 0, 1, 0]' : 0.243217}", "{'[0, 5, 6, 3, 4, 0, 0, 0, 6, 0, 2, 23, 2, 0, 0, 0, 1, 0]' : 0.24116}", "{'[0, 5, 6, 3, 4, 0, 0, 0, 6, 0, 2, 23, 2, 0, 0, 0, 1, 0]' : 0.245204}", "{'[0, 5, 6, 3, 4, 0, 0, 0, 6, 0, 2, 23, 2, 0, 0, 0, 1, 0]' : 0.249107}", "{'[0, 5, 6, 3, 4, 0, 0, 0, 6, 0, 2, 23, 2, 0, 0, 0, 1, 0]' : 0.242011}", "{'[0, 5, 6, 3, 4, 0, 0, 0, 6, 0, 2, 23, 2, 0, 0, 0, 1, 0]' : 0.242297}", "{'[0, 5, 6, 3, 4, 0, 0, 0, 6, 0, 2, 23, 2, 0, 0, 0, 1, 0]' : 0.243218}", "{'[0, 5, 6, 3, 4, 0, 0, 0, 6, 0, 2, 23, 2, 0, 0, 0, 1, 0]' : 0.244807}", "{'[0, 5, 6, 3, 4, 0, 0, 0, 6, 0, 2, 23, 2, 0, 0, 0, 1, 0]' : 0.24256}", "{'[0, 5, 6, 3, 4, 0, 0, 0, 6, 0, 2, 23, 2, 0, 0, 0, 1, 0]' : 0.242607}", "{'[0, 5, 6, 3, 4, 0, 0, 0, 6, 0, 2, 23, 2, 0, 0, 0, 1, 0]' : 0.244037}", "{'[0, 5, 6, 3, 4, 0, 0, 0, 6, 0, 2, 23, 2, 0, 0, 0, 1, 0]' : 0.244135}", "{'[0, 5, 6, 3, 4, 0, 0, 0, 6, 0, 2, 23, 2, 0, 0, 0, 1, 0]' : 0.240018}", "{'[0, 5, 6, 3, 4, 0, 0, 0, 6, 0, 2, 23, 2, 0, 0, 0, 1, 0]' : 0.242243}", "{'[0, 5, 6, 3, 4, 0, 0, 0, 6, 0, 2, 23, 2, 0, 0, 0, 1, 0]' : 0.244909}", "{'[0, 5, 6, 3, 4, 0, 0, 0, 6, 0, 2, 23, 2, 0, 0, 0, 1, 0]' : 0.24556}", "{'[0, 5, 6, 3, 4, 0, 0, 0, 6, 0, 2, 23, 2, 0, 0, 0, 1, 0]' : 0.243875}", "{'[0, 5, 6, 3, 4, 0, 0, 0, 6, 0, 2, 23, 2, 0, 0, 0, 1, 0]' : 0.242223}", "{'[0, 5, 6, 3, 4, 0, 0, 0, 6, 0, 2, 23, 2, 0, 0, 0, 1, 0]' : 0.244501}"]
returning from 'run': {'[0, 5, 6, 3, 4, 0, 0, 0, 6, 0, 2, 23, 2, 0, 0, 0, 1, 0]': ([0.279614, 0.274273, 0.243535, 0.242801, 0.243714, 0.244071, 0.24263, 0.24233, 0.240593, 0.242765, 0.244416, 0.243217, 0.24116, 0.245204, 0.249107, 0.242011, 0.242297, 0.243218, 0.244807, 0.24256, 0.242607, 0.244037, 0.244135, 0.240018, 0.242243, 0.244909, 0.24556, 0.243875, 0.242223, 0.244501], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 5, 6, 3, 4, 0, 0, 0, 6, 0, 2, 23, 2, 0, 0, 0, 1, 0]': ([0.279614, 0.274273, 0.243535, 0.242801, 0.243714, 0.244071, 0.24263, 0.24233, 0.240593, 0.242765, 0.244416, 0.243217, 0.24116, 0.245204, 0.249107, 0.242011, 0.242297, 0.243218, 0.244807, 0.24256, 0.242607, 0.244037, 0.244135, 0.240018, 0.242243, 0.244909, 0.24556, 0.243875, 0.242223, 0.244501], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	34
        Max loop nest depth: 	4
        Additions: 		2173
        Multiplications: 	940
        Divisions: 		0
        Logical: 		0
        Reads: 			3970
        Writes: 		636
        Comparisons:		34
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest35.exe __orio_perftest35.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest35.exe  
Program Test Output: 
{'[0, 3, 6, 0, 2, 0, 0, 0, 27, 8, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.134452}
{'[0, 3, 6, 0, 2, 0, 0, 0, 27, 8, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.134545}
{'[0, 3, 6, 0, 2, 0, 0, 0, 27, 8, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.134471}
{'[0, 3, 6, 0, 2, 0, 0, 0, 27, 8, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.135833}
{'[0, 3, 6, 0, 2, 0, 0, 0, 27, 8, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.116226}
{'[0, 3, 6, 0, 2, 0, 0, 0, 27, 8, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.113695}
{'[0, 3, 6, 0, 2, 0, 0, 0, 27, 8, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.113732}
{'[0, 3, 6, 0, 2, 0, 0, 0, 27, 8, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.113867}
{'[0, 3, 6, 0, 2, 0, 0, 0, 27, 8, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.113953}
{'[0, 3, 6, 0, 2, 0, 0, 0, 27, 8, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.11388}
{'[0, 3, 6, 0, 2, 0, 0, 0, 27, 8, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.113751}
{'[0, 3, 6, 0, 2, 0, 0, 0, 27, 8, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.114603}
{'[0, 3, 6, 0, 2, 0, 0, 0, 27, 8, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.115077}
{'[0, 3, 6, 0, 2, 0, 0, 0, 27, 8, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.113917}
{'[0, 3, 6, 0, 2, 0, 0, 0, 27, 8, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.113715}
{'[0, 3, 6, 0, 2, 0, 0, 0, 27, 8, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.113749}
{'[0, 3, 6, 0, 2, 0, 0, 0, 27, 8, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.113952}
{'[0, 3, 6, 0, 2, 0, 0, 0, 27, 8, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.113955}
{'[0, 3, 6, 0, 2, 0, 0, 0, 27, 8, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.113934}
{'[0, 3, 6, 0, 2, 0, 0, 0, 27, 8, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.113639}
{'[0, 3, 6, 0, 2, 0, 0, 0, 27, 8, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.115355}
{'[0, 3, 6, 0, 2, 0, 0, 0, 27, 8, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.114254}
{'[0, 3, 6, 0, 2, 0, 0, 0, 27, 8, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.113707}
{'[0, 3, 6, 0, 2, 0, 0, 0, 27, 8, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.113664}
{'[0, 3, 6, 0, 2, 0, 0, 0, 27, 8, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.113684}
{'[0, 3, 6, 0, 2, 0, 0, 0, 27, 8, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.113724}
{'[0, 3, 6, 0, 2, 0, 0, 0, 27, 8, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.113928}
{'[0, 3, 6, 0, 2, 0, 0, 0, 27, 8, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.113973}
{'[0, 3, 6, 0, 2, 0, 0, 0, 27, 8, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.113687}
{'[0, 3, 6, 0, 2, 0, 0, 0, 27, 8, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.115749}

out:
 ["{'[0, 3, 6, 0, 2, 0, 0, 0, 27, 8, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.134452}", "{'[0, 3, 6, 0, 2, 0, 0, 0, 27, 8, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.134545}", "{'[0, 3, 6, 0, 2, 0, 0, 0, 27, 8, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.134471}", "{'[0, 3, 6, 0, 2, 0, 0, 0, 27, 8, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.135833}", "{'[0, 3, 6, 0, 2, 0, 0, 0, 27, 8, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.116226}", "{'[0, 3, 6, 0, 2, 0, 0, 0, 27, 8, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.113695}", "{'[0, 3, 6, 0, 2, 0, 0, 0, 27, 8, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.113732}", "{'[0, 3, 6, 0, 2, 0, 0, 0, 27, 8, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.113867}", "{'[0, 3, 6, 0, 2, 0, 0, 0, 27, 8, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.113953}", "{'[0, 3, 6, 0, 2, 0, 0, 0, 27, 8, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.11388}", "{'[0, 3, 6, 0, 2, 0, 0, 0, 27, 8, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.113751}", "{'[0, 3, 6, 0, 2, 0, 0, 0, 27, 8, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.114603}", "{'[0, 3, 6, 0, 2, 0, 0, 0, 27, 8, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.115077}", "{'[0, 3, 6, 0, 2, 0, 0, 0, 27, 8, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.113917}", "{'[0, 3, 6, 0, 2, 0, 0, 0, 27, 8, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.113715}", "{'[0, 3, 6, 0, 2, 0, 0, 0, 27, 8, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.113749}", "{'[0, 3, 6, 0, 2, 0, 0, 0, 27, 8, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.113952}", "{'[0, 3, 6, 0, 2, 0, 0, 0, 27, 8, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.113955}", "{'[0, 3, 6, 0, 2, 0, 0, 0, 27, 8, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.113934}", "{'[0, 3, 6, 0, 2, 0, 0, 0, 27, 8, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.113639}", "{'[0, 3, 6, 0, 2, 0, 0, 0, 27, 8, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.115355}", "{'[0, 3, 6, 0, 2, 0, 0, 0, 27, 8, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.114254}", "{'[0, 3, 6, 0, 2, 0, 0, 0, 27, 8, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.113707}", "{'[0, 3, 6, 0, 2, 0, 0, 0, 27, 8, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.113664}", "{'[0, 3, 6, 0, 2, 0, 0, 0, 27, 8, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.113684}", "{'[0, 3, 6, 0, 2, 0, 0, 0, 27, 8, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.113724}", "{'[0, 3, 6, 0, 2, 0, 0, 0, 27, 8, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.113928}", "{'[0, 3, 6, 0, 2, 0, 0, 0, 27, 8, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.113973}", "{'[0, 3, 6, 0, 2, 0, 0, 0, 27, 8, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.113687}", "{'[0, 3, 6, 0, 2, 0, 0, 0, 27, 8, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.115749}"]
returning from 'run': {'[0, 3, 6, 0, 2, 0, 0, 0, 27, 8, 12, 0, 0, 2, 0, 1, 1, 0]': ([0.134452, 0.134545, 0.134471, 0.135833, 0.116226, 0.113695, 0.113732, 0.113867, 0.113953, 0.11388, 0.113751, 0.114603, 0.115077, 0.113917, 0.113715, 0.113749, 0.113952, 0.113955, 0.113934, 0.113639, 0.115355, 0.114254, 0.113707, 0.113664, 0.113684, 0.113724, 0.113928, 0.113973, 0.113687, 0.115749], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 3, 6, 0, 2, 0, 0, 0, 27, 8, 12, 0, 0, 2, 0, 1, 1, 0]': ([0.134452, 0.134545, 0.134471, 0.135833, 0.116226, 0.113695, 0.113732, 0.113867, 0.113953, 0.11388, 0.113751, 0.114603, 0.115077, 0.113917, 0.113715, 0.113749, 0.113952, 0.113955, 0.113934, 0.113639, 0.115355, 0.114254, 0.113707, 0.113664, 0.113684, 0.113724, 0.113928, 0.113973, 0.113687, 0.115749], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = kkk
Code stats:
        Number of loops: 	43
        Max loop nest depth: 	5
        Additions: 		2061
        Multiplications: 	952
        Divisions: 		0
        Logical: 		0
        Reads: 			4133
        Writes: 		726
        Comparisons:		43
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest36.exe __orio_perftest36.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest36.exe  
Program Test Output: 
{'[3, 0, 3, 6, 6, 1, 1, 0, 0, 26, 4, 0, 0, 1, 1, 1, 1, 1]' : 0.155451}
{'[3, 0, 3, 6, 6, 1, 1, 0, 0, 26, 4, 0, 0, 1, 1, 1, 1, 1]' : 0.155461}
{'[3, 0, 3, 6, 6, 1, 1, 0, 0, 26, 4, 0, 0, 1, 1, 1, 1, 1]' : 0.155449}
{'[3, 0, 3, 6, 6, 1, 1, 0, 0, 26, 4, 0, 0, 1, 1, 1, 1, 1]' : 0.155177}
{'[3, 0, 3, 6, 6, 1, 1, 0, 0, 26, 4, 0, 0, 1, 1, 1, 1, 1]' : 0.152886}
{'[3, 0, 3, 6, 6, 1, 1, 0, 0, 26, 4, 0, 0, 1, 1, 1, 1, 1]' : 0.151937}
{'[3, 0, 3, 6, 6, 1, 1, 0, 0, 26, 4, 0, 0, 1, 1, 1, 1, 1]' : 0.15199}
{'[3, 0, 3, 6, 6, 1, 1, 0, 0, 26, 4, 0, 0, 1, 1, 1, 1, 1]' : 0.152469}
{'[3, 0, 3, 6, 6, 1, 1, 0, 0, 26, 4, 0, 0, 1, 1, 1, 1, 1]' : 0.152042}
{'[3, 0, 3, 6, 6, 1, 1, 0, 0, 26, 4, 0, 0, 1, 1, 1, 1, 1]' : 0.151926}
{'[3, 0, 3, 6, 6, 1, 1, 0, 0, 26, 4, 0, 0, 1, 1, 1, 1, 1]' : 0.151801}
{'[3, 0, 3, 6, 6, 1, 1, 0, 0, 26, 4, 0, 0, 1, 1, 1, 1, 1]' : 0.152329}
{'[3, 0, 3, 6, 6, 1, 1, 0, 0, 26, 4, 0, 0, 1, 1, 1, 1, 1]' : 0.152277}
{'[3, 0, 3, 6, 6, 1, 1, 0, 0, 26, 4, 0, 0, 1, 1, 1, 1, 1]' : 0.15203}
{'[3, 0, 3, 6, 6, 1, 1, 0, 0, 26, 4, 0, 0, 1, 1, 1, 1, 1]' : 0.151972}
{'[3, 0, 3, 6, 6, 1, 1, 0, 0, 26, 4, 0, 0, 1, 1, 1, 1, 1]' : 0.152106}
{'[3, 0, 3, 6, 6, 1, 1, 0, 0, 26, 4, 0, 0, 1, 1, 1, 1, 1]' : 0.152281}
{'[3, 0, 3, 6, 6, 1, 1, 0, 0, 26, 4, 0, 0, 1, 1, 1, 1, 1]' : 0.152051}
{'[3, 0, 3, 6, 6, 1, 1, 0, 0, 26, 4, 0, 0, 1, 1, 1, 1, 1]' : 0.151971}
{'[3, 0, 3, 6, 6, 1, 1, 0, 0, 26, 4, 0, 0, 1, 1, 1, 1, 1]' : 0.152033}
{'[3, 0, 3, 6, 6, 1, 1, 0, 0, 26, 4, 0, 0, 1, 1, 1, 1, 1]' : 0.151866}
{'[3, 0, 3, 6, 6, 1, 1, 0, 0, 26, 4, 0, 0, 1, 1, 1, 1, 1]' : 0.152277}
{'[3, 0, 3, 6, 6, 1, 1, 0, 0, 26, 4, 0, 0, 1, 1, 1, 1, 1]' : 0.152341}
{'[3, 0, 3, 6, 6, 1, 1, 0, 0, 26, 4, 0, 0, 1, 1, 1, 1, 1]' : 0.152097}
{'[3, 0, 3, 6, 6, 1, 1, 0, 0, 26, 4, 0, 0, 1, 1, 1, 1, 1]' : 0.152256}
{'[3, 0, 3, 6, 6, 1, 1, 0, 0, 26, 4, 0, 0, 1, 1, 1, 1, 1]' : 0.152038}
{'[3, 0, 3, 6, 6, 1, 1, 0, 0, 26, 4, 0, 0, 1, 1, 1, 1, 1]' : 0.152197}
{'[3, 0, 3, 6, 6, 1, 1, 0, 0, 26, 4, 0, 0, 1, 1, 1, 1, 1]' : 0.15202}
{'[3, 0, 3, 6, 6, 1, 1, 0, 0, 26, 4, 0, 0, 1, 1, 1, 1, 1]' : 0.152112}
{'[3, 0, 3, 6, 6, 1, 1, 0, 0, 26, 4, 0, 0, 1, 1, 1, 1, 1]' : 0.152272}

out:
 ["{'[3, 0, 3, 6, 6, 1, 1, 0, 0, 26, 4, 0, 0, 1, 1, 1, 1, 1]' : 0.155451}", "{'[3, 0, 3, 6, 6, 1, 1, 0, 0, 26, 4, 0, 0, 1, 1, 1, 1, 1]' : 0.155461}", "{'[3, 0, 3, 6, 6, 1, 1, 0, 0, 26, 4, 0, 0, 1, 1, 1, 1, 1]' : 0.155449}", "{'[3, 0, 3, 6, 6, 1, 1, 0, 0, 26, 4, 0, 0, 1, 1, 1, 1, 1]' : 0.155177}", "{'[3, 0, 3, 6, 6, 1, 1, 0, 0, 26, 4, 0, 0, 1, 1, 1, 1, 1]' : 0.152886}", "{'[3, 0, 3, 6, 6, 1, 1, 0, 0, 26, 4, 0, 0, 1, 1, 1, 1, 1]' : 0.151937}", "{'[3, 0, 3, 6, 6, 1, 1, 0, 0, 26, 4, 0, 0, 1, 1, 1, 1, 1]' : 0.15199}", "{'[3, 0, 3, 6, 6, 1, 1, 0, 0, 26, 4, 0, 0, 1, 1, 1, 1, 1]' : 0.152469}", "{'[3, 0, 3, 6, 6, 1, 1, 0, 0, 26, 4, 0, 0, 1, 1, 1, 1, 1]' : 0.152042}", "{'[3, 0, 3, 6, 6, 1, 1, 0, 0, 26, 4, 0, 0, 1, 1, 1, 1, 1]' : 0.151926}", "{'[3, 0, 3, 6, 6, 1, 1, 0, 0, 26, 4, 0, 0, 1, 1, 1, 1, 1]' : 0.151801}", "{'[3, 0, 3, 6, 6, 1, 1, 0, 0, 26, 4, 0, 0, 1, 1, 1, 1, 1]' : 0.152329}", "{'[3, 0, 3, 6, 6, 1, 1, 0, 0, 26, 4, 0, 0, 1, 1, 1, 1, 1]' : 0.152277}", "{'[3, 0, 3, 6, 6, 1, 1, 0, 0, 26, 4, 0, 0, 1, 1, 1, 1, 1]' : 0.15203}", "{'[3, 0, 3, 6, 6, 1, 1, 0, 0, 26, 4, 0, 0, 1, 1, 1, 1, 1]' : 0.151972}", "{'[3, 0, 3, 6, 6, 1, 1, 0, 0, 26, 4, 0, 0, 1, 1, 1, 1, 1]' : 0.152106}", "{'[3, 0, 3, 6, 6, 1, 1, 0, 0, 26, 4, 0, 0, 1, 1, 1, 1, 1]' : 0.152281}", "{'[3, 0, 3, 6, 6, 1, 1, 0, 0, 26, 4, 0, 0, 1, 1, 1, 1, 1]' : 0.152051}", "{'[3, 0, 3, 6, 6, 1, 1, 0, 0, 26, 4, 0, 0, 1, 1, 1, 1, 1]' : 0.151971}", "{'[3, 0, 3, 6, 6, 1, 1, 0, 0, 26, 4, 0, 0, 1, 1, 1, 1, 1]' : 0.152033}", "{'[3, 0, 3, 6, 6, 1, 1, 0, 0, 26, 4, 0, 0, 1, 1, 1, 1, 1]' : 0.151866}", "{'[3, 0, 3, 6, 6, 1, 1, 0, 0, 26, 4, 0, 0, 1, 1, 1, 1, 1]' : 0.152277}", "{'[3, 0, 3, 6, 6, 1, 1, 0, 0, 26, 4, 0, 0, 1, 1, 1, 1, 1]' : 0.152341}", "{'[3, 0, 3, 6, 6, 1, 1, 0, 0, 26, 4, 0, 0, 1, 1, 1, 1, 1]' : 0.152097}", "{'[3, 0, 3, 6, 6, 1, 1, 0, 0, 26, 4, 0, 0, 1, 1, 1, 1, 1]' : 0.152256}", "{'[3, 0, 3, 6, 6, 1, 1, 0, 0, 26, 4, 0, 0, 1, 1, 1, 1, 1]' : 0.152038}", "{'[3, 0, 3, 6, 6, 1, 1, 0, 0, 26, 4, 0, 0, 1, 1, 1, 1, 1]' : 0.152197}", "{'[3, 0, 3, 6, 6, 1, 1, 0, 0, 26, 4, 0, 0, 1, 1, 1, 1, 1]' : 0.15202}", "{'[3, 0, 3, 6, 6, 1, 1, 0, 0, 26, 4, 0, 0, 1, 1, 1, 1, 1]' : 0.152112}", "{'[3, 0, 3, 6, 6, 1, 1, 0, 0, 26, 4, 0, 0, 1, 1, 1, 1, 1]' : 0.152272}"]
returning from 'run': {'[3, 0, 3, 6, 6, 1, 1, 0, 0, 26, 4, 0, 0, 1, 1, 1, 1, 1]': ([0.155451, 0.155461, 0.155449, 0.155177, 0.152886, 0.151937, 0.15199, 0.152469, 0.152042, 0.151926, 0.151801, 0.152329, 0.152277, 0.15203, 0.151972, 0.152106, 0.152281, 0.152051, 0.151971, 0.152033, 0.151866, 0.152277, 0.152341, 0.152097, 0.152256, 0.152038, 0.152197, 0.15202, 0.152112, 0.152272], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 0, 3, 6, 6, 1, 1, 0, 0, 26, 4, 0, 0, 1, 1, 1, 1, 1]': ([0.155451, 0.155461, 0.155449, 0.155177, 0.152886, 0.151937, 0.15199, 0.152469, 0.152042, 0.151926, 0.151801, 0.152329, 0.152277, 0.15203, 0.151972, 0.152106, 0.152281, 0.152051, 0.151971, 0.152033, 0.151866, 0.152277, 0.152341, 0.152097, 0.152256, 0.152038, 0.152197, 0.15202, 0.152112, 0.152272], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	133
        Max loop nest depth: 	5
        Additions: 		4904
        Multiplications: 	1260
        Divisions: 		0
        Logical: 		0
        Reads: 			9865
        Writes: 		2073
        Comparisons:		133
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest37.exe __orio_perftest37.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest37.exe  
Program Test Output: 
{'[2, 6, 5, 0, 6, 0, 1, 1, 29, 20, 0, 18, 1, 0, 0, 1, 0, 1]' : 0.109702}
{'[2, 6, 5, 0, 6, 0, 1, 1, 29, 20, 0, 18, 1, 0, 0, 1, 0, 1]' : 0.109694}
{'[2, 6, 5, 0, 6, 0, 1, 1, 29, 20, 0, 18, 1, 0, 0, 1, 0, 1]' : 0.110048}
{'[2, 6, 5, 0, 6, 0, 1, 1, 29, 20, 0, 18, 1, 0, 0, 1, 0, 1]' : 0.109798}
{'[2, 6, 5, 0, 6, 0, 1, 1, 29, 20, 0, 18, 1, 0, 0, 1, 0, 1]' : 0.109718}
{'[2, 6, 5, 0, 6, 0, 1, 1, 29, 20, 0, 18, 1, 0, 0, 1, 0, 1]' : 0.109609}
{'[2, 6, 5, 0, 6, 0, 1, 1, 29, 20, 0, 18, 1, 0, 0, 1, 0, 1]' : 0.109748}
{'[2, 6, 5, 0, 6, 0, 1, 1, 29, 20, 0, 18, 1, 0, 0, 1, 0, 1]' : 0.109553}
{'[2, 6, 5, 0, 6, 0, 1, 1, 29, 20, 0, 18, 1, 0, 0, 1, 0, 1]' : 0.109735}
{'[2, 6, 5, 0, 6, 0, 1, 1, 29, 20, 0, 18, 1, 0, 0, 1, 0, 1]' : 0.110291}
{'[2, 6, 5, 0, 6, 0, 1, 1, 29, 20, 0, 18, 1, 0, 0, 1, 0, 1]' : 0.109631}
{'[2, 6, 5, 0, 6, 0, 1, 1, 29, 20, 0, 18, 1, 0, 0, 1, 0, 1]' : 0.109971}
{'[2, 6, 5, 0, 6, 0, 1, 1, 29, 20, 0, 18, 1, 0, 0, 1, 0, 1]' : 0.109573}
{'[2, 6, 5, 0, 6, 0, 1, 1, 29, 20, 0, 18, 1, 0, 0, 1, 0, 1]' : 0.109667}
{'[2, 6, 5, 0, 6, 0, 1, 1, 29, 20, 0, 18, 1, 0, 0, 1, 0, 1]' : 0.109572}
{'[2, 6, 5, 0, 6, 0, 1, 1, 29, 20, 0, 18, 1, 0, 0, 1, 0, 1]' : 0.109604}
{'[2, 6, 5, 0, 6, 0, 1, 1, 29, 20, 0, 18, 1, 0, 0, 1, 0, 1]' : 0.109589}
{'[2, 6, 5, 0, 6, 0, 1, 1, 29, 20, 0, 18, 1, 0, 0, 1, 0, 1]' : 0.109703}
{'[2, 6, 5, 0, 6, 0, 1, 1, 29, 20, 0, 18, 1, 0, 0, 1, 0, 1]' : 0.109816}
{'[2, 6, 5, 0, 6, 0, 1, 1, 29, 20, 0, 18, 1, 0, 0, 1, 0, 1]' : 0.109755}
{'[2, 6, 5, 0, 6, 0, 1, 1, 29, 20, 0, 18, 1, 0, 0, 1, 0, 1]' : 0.109752}
{'[2, 6, 5, 0, 6, 0, 1, 1, 29, 20, 0, 18, 1, 0, 0, 1, 0, 1]' : 0.109624}
{'[2, 6, 5, 0, 6, 0, 1, 1, 29, 20, 0, 18, 1, 0, 0, 1, 0, 1]' : 0.109853}
{'[2, 6, 5, 0, 6, 0, 1, 1, 29, 20, 0, 18, 1, 0, 0, 1, 0, 1]' : 0.109584}
{'[2, 6, 5, 0, 6, 0, 1, 1, 29, 20, 0, 18, 1, 0, 0, 1, 0, 1]' : 0.109572}
{'[2, 6, 5, 0, 6, 0, 1, 1, 29, 20, 0, 18, 1, 0, 0, 1, 0, 1]' : 0.109544}
{'[2, 6, 5, 0, 6, 0, 1, 1, 29, 20, 0, 18, 1, 0, 0, 1, 0, 1]' : 0.109522}
{'[2, 6, 5, 0, 6, 0, 1, 1, 29, 20, 0, 18, 1, 0, 0, 1, 0, 1]' : 0.109894}
{'[2, 6, 5, 0, 6, 0, 1, 1, 29, 20, 0, 18, 1, 0, 0, 1, 0, 1]' : 0.109988}
{'[2, 6, 5, 0, 6, 0, 1, 1, 29, 20, 0, 18, 1, 0, 0, 1, 0, 1]' : 0.109935}

out:
 ["{'[2, 6, 5, 0, 6, 0, 1, 1, 29, 20, 0, 18, 1, 0, 0, 1, 0, 1]' : 0.109702}", "{'[2, 6, 5, 0, 6, 0, 1, 1, 29, 20, 0, 18, 1, 0, 0, 1, 0, 1]' : 0.109694}", "{'[2, 6, 5, 0, 6, 0, 1, 1, 29, 20, 0, 18, 1, 0, 0, 1, 0, 1]' : 0.110048}", "{'[2, 6, 5, 0, 6, 0, 1, 1, 29, 20, 0, 18, 1, 0, 0, 1, 0, 1]' : 0.109798}", "{'[2, 6, 5, 0, 6, 0, 1, 1, 29, 20, 0, 18, 1, 0, 0, 1, 0, 1]' : 0.109718}", "{'[2, 6, 5, 0, 6, 0, 1, 1, 29, 20, 0, 18, 1, 0, 0, 1, 0, 1]' : 0.109609}", "{'[2, 6, 5, 0, 6, 0, 1, 1, 29, 20, 0, 18, 1, 0, 0, 1, 0, 1]' : 0.109748}", "{'[2, 6, 5, 0, 6, 0, 1, 1, 29, 20, 0, 18, 1, 0, 0, 1, 0, 1]' : 0.109553}", "{'[2, 6, 5, 0, 6, 0, 1, 1, 29, 20, 0, 18, 1, 0, 0, 1, 0, 1]' : 0.109735}", "{'[2, 6, 5, 0, 6, 0, 1, 1, 29, 20, 0, 18, 1, 0, 0, 1, 0, 1]' : 0.110291}", "{'[2, 6, 5, 0, 6, 0, 1, 1, 29, 20, 0, 18, 1, 0, 0, 1, 0, 1]' : 0.109631}", "{'[2, 6, 5, 0, 6, 0, 1, 1, 29, 20, 0, 18, 1, 0, 0, 1, 0, 1]' : 0.109971}", "{'[2, 6, 5, 0, 6, 0, 1, 1, 29, 20, 0, 18, 1, 0, 0, 1, 0, 1]' : 0.109573}", "{'[2, 6, 5, 0, 6, 0, 1, 1, 29, 20, 0, 18, 1, 0, 0, 1, 0, 1]' : 0.109667}", "{'[2, 6, 5, 0, 6, 0, 1, 1, 29, 20, 0, 18, 1, 0, 0, 1, 0, 1]' : 0.109572}", "{'[2, 6, 5, 0, 6, 0, 1, 1, 29, 20, 0, 18, 1, 0, 0, 1, 0, 1]' : 0.109604}", "{'[2, 6, 5, 0, 6, 0, 1, 1, 29, 20, 0, 18, 1, 0, 0, 1, 0, 1]' : 0.109589}", "{'[2, 6, 5, 0, 6, 0, 1, 1, 29, 20, 0, 18, 1, 0, 0, 1, 0, 1]' : 0.109703}", "{'[2, 6, 5, 0, 6, 0, 1, 1, 29, 20, 0, 18, 1, 0, 0, 1, 0, 1]' : 0.109816}", "{'[2, 6, 5, 0, 6, 0, 1, 1, 29, 20, 0, 18, 1, 0, 0, 1, 0, 1]' : 0.109755}", "{'[2, 6, 5, 0, 6, 0, 1, 1, 29, 20, 0, 18, 1, 0, 0, 1, 0, 1]' : 0.109752}", "{'[2, 6, 5, 0, 6, 0, 1, 1, 29, 20, 0, 18, 1, 0, 0, 1, 0, 1]' : 0.109624}", "{'[2, 6, 5, 0, 6, 0, 1, 1, 29, 20, 0, 18, 1, 0, 0, 1, 0, 1]' : 0.109853}", "{'[2, 6, 5, 0, 6, 0, 1, 1, 29, 20, 0, 18, 1, 0, 0, 1, 0, 1]' : 0.109584}", "{'[2, 6, 5, 0, 6, 0, 1, 1, 29, 20, 0, 18, 1, 0, 0, 1, 0, 1]' : 0.109572}", "{'[2, 6, 5, 0, 6, 0, 1, 1, 29, 20, 0, 18, 1, 0, 0, 1, 0, 1]' : 0.109544}", "{'[2, 6, 5, 0, 6, 0, 1, 1, 29, 20, 0, 18, 1, 0, 0, 1, 0, 1]' : 0.109522}", "{'[2, 6, 5, 0, 6, 0, 1, 1, 29, 20, 0, 18, 1, 0, 0, 1, 0, 1]' : 0.109894}", "{'[2, 6, 5, 0, 6, 0, 1, 1, 29, 20, 0, 18, 1, 0, 0, 1, 0, 1]' : 0.109988}", "{'[2, 6, 5, 0, 6, 0, 1, 1, 29, 20, 0, 18, 1, 0, 0, 1, 0, 1]' : 0.109935}"]
returning from 'run': {'[2, 6, 5, 0, 6, 0, 1, 1, 29, 20, 0, 18, 1, 0, 0, 1, 0, 1]': ([0.109702, 0.109694, 0.110048, 0.109798, 0.109718, 0.109609, 0.109748, 0.109553, 0.109735, 0.110291, 0.109631, 0.109971, 0.109573, 0.109667, 0.109572, 0.109604, 0.109589, 0.109703, 0.109816, 0.109755, 0.109752, 0.109624, 0.109853, 0.109584, 0.109572, 0.109544, 0.109522, 0.109894, 0.109988, 0.109935], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 6, 5, 0, 6, 0, 1, 1, 29, 20, 0, 18, 1, 0, 0, 1, 0, 1]': ([0.109702, 0.109694, 0.110048, 0.109798, 0.109718, 0.109609, 0.109748, 0.109553, 0.109735, 0.110291, 0.109631, 0.109971, 0.109573, 0.109667, 0.109572, 0.109604, 0.109589, 0.109703, 0.109816, 0.109755, 0.109752, 0.109624, 0.109853, 0.109584, 0.109572, 0.109544, 0.109522, 0.109894, 0.109988, 0.109935], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	6
        Additions: 		12661
        Multiplications: 	3762
        Divisions: 		0
        Logical: 		0
        Reads: 			18982
        Writes: 		1935
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest38.exe __orio_perftest38.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest38.exe  
Program Test Output: 
{'[3, 0, 5, 2, 6, 6, 0, 0, 7, 0, 24, 29, 2, 0, 0, 0, 1, 0]' : 0.339332}
{'[3, 0, 5, 2, 6, 6, 0, 0, 7, 0, 24, 29, 2, 0, 0, 0, 1, 0]' : 0.327004}
{'[3, 0, 5, 2, 6, 6, 0, 0, 7, 0, 24, 29, 2, 0, 0, 0, 1, 0]' : 0.297872}
{'[3, 0, 5, 2, 6, 6, 0, 0, 7, 0, 24, 29, 2, 0, 0, 0, 1, 0]' : 0.297803}
{'[3, 0, 5, 2, 6, 6, 0, 0, 7, 0, 24, 29, 2, 0, 0, 0, 1, 0]' : 0.299313}
{'[3, 0, 5, 2, 6, 6, 0, 0, 7, 0, 24, 29, 2, 0, 0, 0, 1, 0]' : 0.298489}
{'[3, 0, 5, 2, 6, 6, 0, 0, 7, 0, 24, 29, 2, 0, 0, 0, 1, 0]' : 0.298516}
{'[3, 0, 5, 2, 6, 6, 0, 0, 7, 0, 24, 29, 2, 0, 0, 0, 1, 0]' : 0.296645}
{'[3, 0, 5, 2, 6, 6, 0, 0, 7, 0, 24, 29, 2, 0, 0, 0, 1, 0]' : 0.297387}
{'[3, 0, 5, 2, 6, 6, 0, 0, 7, 0, 24, 29, 2, 0, 0, 0, 1, 0]' : 0.298053}
{'[3, 0, 5, 2, 6, 6, 0, 0, 7, 0, 24, 29, 2, 0, 0, 0, 1, 0]' : 0.298713}
{'[3, 0, 5, 2, 6, 6, 0, 0, 7, 0, 24, 29, 2, 0, 0, 0, 1, 0]' : 0.296379}
{'[3, 0, 5, 2, 6, 6, 0, 0, 7, 0, 24, 29, 2, 0, 0, 0, 1, 0]' : 0.297698}
{'[3, 0, 5, 2, 6, 6, 0, 0, 7, 0, 24, 29, 2, 0, 0, 0, 1, 0]' : 0.296938}
{'[3, 0, 5, 2, 6, 6, 0, 0, 7, 0, 24, 29, 2, 0, 0, 0, 1, 0]' : 0.300489}
{'[3, 0, 5, 2, 6, 6, 0, 0, 7, 0, 24, 29, 2, 0, 0, 0, 1, 0]' : 0.297755}
{'[3, 0, 5, 2, 6, 6, 0, 0, 7, 0, 24, 29, 2, 0, 0, 0, 1, 0]' : 0.298832}
{'[3, 0, 5, 2, 6, 6, 0, 0, 7, 0, 24, 29, 2, 0, 0, 0, 1, 0]' : 0.299564}
{'[3, 0, 5, 2, 6, 6, 0, 0, 7, 0, 24, 29, 2, 0, 0, 0, 1, 0]' : 0.297699}
{'[3, 0, 5, 2, 6, 6, 0, 0, 7, 0, 24, 29, 2, 0, 0, 0, 1, 0]' : 0.299197}
{'[3, 0, 5, 2, 6, 6, 0, 0, 7, 0, 24, 29, 2, 0, 0, 0, 1, 0]' : 0.297055}
{'[3, 0, 5, 2, 6, 6, 0, 0, 7, 0, 24, 29, 2, 0, 0, 0, 1, 0]' : 0.298402}
{'[3, 0, 5, 2, 6, 6, 0, 0, 7, 0, 24, 29, 2, 0, 0, 0, 1, 0]' : 0.297108}
{'[3, 0, 5, 2, 6, 6, 0, 0, 7, 0, 24, 29, 2, 0, 0, 0, 1, 0]' : 0.297352}
{'[3, 0, 5, 2, 6, 6, 0, 0, 7, 0, 24, 29, 2, 0, 0, 0, 1, 0]' : 0.297926}
{'[3, 0, 5, 2, 6, 6, 0, 0, 7, 0, 24, 29, 2, 0, 0, 0, 1, 0]' : 0.298297}
{'[3, 0, 5, 2, 6, 6, 0, 0, 7, 0, 24, 29, 2, 0, 0, 0, 1, 0]' : 0.299562}
{'[3, 0, 5, 2, 6, 6, 0, 0, 7, 0, 24, 29, 2, 0, 0, 0, 1, 0]' : 0.297405}
{'[3, 0, 5, 2, 6, 6, 0, 0, 7, 0, 24, 29, 2, 0, 0, 0, 1, 0]' : 0.300249}
{'[3, 0, 5, 2, 6, 6, 0, 0, 7, 0, 24, 29, 2, 0, 0, 0, 1, 0]' : 0.296986}

out:
 ["{'[3, 0, 5, 2, 6, 6, 0, 0, 7, 0, 24, 29, 2, 0, 0, 0, 1, 0]' : 0.339332}", "{'[3, 0, 5, 2, 6, 6, 0, 0, 7, 0, 24, 29, 2, 0, 0, 0, 1, 0]' : 0.327004}", "{'[3, 0, 5, 2, 6, 6, 0, 0, 7, 0, 24, 29, 2, 0, 0, 0, 1, 0]' : 0.297872}", "{'[3, 0, 5, 2, 6, 6, 0, 0, 7, 0, 24, 29, 2, 0, 0, 0, 1, 0]' : 0.297803}", "{'[3, 0, 5, 2, 6, 6, 0, 0, 7, 0, 24, 29, 2, 0, 0, 0, 1, 0]' : 0.299313}", "{'[3, 0, 5, 2, 6, 6, 0, 0, 7, 0, 24, 29, 2, 0, 0, 0, 1, 0]' : 0.298489}", "{'[3, 0, 5, 2, 6, 6, 0, 0, 7, 0, 24, 29, 2, 0, 0, 0, 1, 0]' : 0.298516}", "{'[3, 0, 5, 2, 6, 6, 0, 0, 7, 0, 24, 29, 2, 0, 0, 0, 1, 0]' : 0.296645}", "{'[3, 0, 5, 2, 6, 6, 0, 0, 7, 0, 24, 29, 2, 0, 0, 0, 1, 0]' : 0.297387}", "{'[3, 0, 5, 2, 6, 6, 0, 0, 7, 0, 24, 29, 2, 0, 0, 0, 1, 0]' : 0.298053}", "{'[3, 0, 5, 2, 6, 6, 0, 0, 7, 0, 24, 29, 2, 0, 0, 0, 1, 0]' : 0.298713}", "{'[3, 0, 5, 2, 6, 6, 0, 0, 7, 0, 24, 29, 2, 0, 0, 0, 1, 0]' : 0.296379}", "{'[3, 0, 5, 2, 6, 6, 0, 0, 7, 0, 24, 29, 2, 0, 0, 0, 1, 0]' : 0.297698}", "{'[3, 0, 5, 2, 6, 6, 0, 0, 7, 0, 24, 29, 2, 0, 0, 0, 1, 0]' : 0.296938}", "{'[3, 0, 5, 2, 6, 6, 0, 0, 7, 0, 24, 29, 2, 0, 0, 0, 1, 0]' : 0.300489}", "{'[3, 0, 5, 2, 6, 6, 0, 0, 7, 0, 24, 29, 2, 0, 0, 0, 1, 0]' : 0.297755}", "{'[3, 0, 5, 2, 6, 6, 0, 0, 7, 0, 24, 29, 2, 0, 0, 0, 1, 0]' : 0.298832}", "{'[3, 0, 5, 2, 6, 6, 0, 0, 7, 0, 24, 29, 2, 0, 0, 0, 1, 0]' : 0.299564}", "{'[3, 0, 5, 2, 6, 6, 0, 0, 7, 0, 24, 29, 2, 0, 0, 0, 1, 0]' : 0.297699}", "{'[3, 0, 5, 2, 6, 6, 0, 0, 7, 0, 24, 29, 2, 0, 0, 0, 1, 0]' : 0.299197}", "{'[3, 0, 5, 2, 6, 6, 0, 0, 7, 0, 24, 29, 2, 0, 0, 0, 1, 0]' : 0.297055}", "{'[3, 0, 5, 2, 6, 6, 0, 0, 7, 0, 24, 29, 2, 0, 0, 0, 1, 0]' : 0.298402}", "{'[3, 0, 5, 2, 6, 6, 0, 0, 7, 0, 24, 29, 2, 0, 0, 0, 1, 0]' : 0.297108}", "{'[3, 0, 5, 2, 6, 6, 0, 0, 7, 0, 24, 29, 2, 0, 0, 0, 1, 0]' : 0.297352}", "{'[3, 0, 5, 2, 6, 6, 0, 0, 7, 0, 24, 29, 2, 0, 0, 0, 1, 0]' : 0.297926}", "{'[3, 0, 5, 2, 6, 6, 0, 0, 7, 0, 24, 29, 2, 0, 0, 0, 1, 0]' : 0.298297}", "{'[3, 0, 5, 2, 6, 6, 0, 0, 7, 0, 24, 29, 2, 0, 0, 0, 1, 0]' : 0.299562}", "{'[3, 0, 5, 2, 6, 6, 0, 0, 7, 0, 24, 29, 2, 0, 0, 0, 1, 0]' : 0.297405}", "{'[3, 0, 5, 2, 6, 6, 0, 0, 7, 0, 24, 29, 2, 0, 0, 0, 1, 0]' : 0.300249}", "{'[3, 0, 5, 2, 6, 6, 0, 0, 7, 0, 24, 29, 2, 0, 0, 0, 1, 0]' : 0.296986}"]
returning from 'run': {'[3, 0, 5, 2, 6, 6, 0, 0, 7, 0, 24, 29, 2, 0, 0, 0, 1, 0]': ([0.339332, 0.327004, 0.297872, 0.297803, 0.299313, 0.298489, 0.298516, 0.296645, 0.297387, 0.298053, 0.298713, 0.296379, 0.297698, 0.296938, 0.300489, 0.297755, 0.298832, 0.299564, 0.297699, 0.299197, 0.297055, 0.298402, 0.297108, 0.297352, 0.297926, 0.298297, 0.299562, 0.297405, 0.300249, 0.296986], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 0, 5, 2, 6, 6, 0, 0, 7, 0, 24, 29, 2, 0, 0, 0, 1, 0]': ([0.339332, 0.327004, 0.297872, 0.297803, 0.299313, 0.298489, 0.298516, 0.296645, 0.297387, 0.298053, 0.298713, 0.296379, 0.297698, 0.296938, 0.300489, 0.297755, 0.298832, 0.299564, 0.297699, 0.299197, 0.297055, 0.298402, 0.297108, 0.297352, 0.297926, 0.298297, 0.299562, 0.297405, 0.300249, 0.296986], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		294
        Multiplications: 	92
        Divisions: 		0
        Logical: 		0
        Reads: 			672
        Writes: 		118
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest39.exe __orio_perftest39.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest39.exe  
Program Test Output: 
{'[6, 6, 2, 5, 4, 0, 0, 1, 29, 0, 2, 8, 0, 2, 0, 0, 1, 1]' : 0.302235}
{'[6, 6, 2, 5, 4, 0, 0, 1, 29, 0, 2, 8, 0, 2, 0, 0, 1, 1]' : 0.301219}
{'[6, 6, 2, 5, 4, 0, 0, 1, 29, 0, 2, 8, 0, 2, 0, 0, 1, 1]' : 0.254054}
{'[6, 6, 2, 5, 4, 0, 0, 1, 29, 0, 2, 8, 0, 2, 0, 0, 1, 1]' : 0.251813}
{'[6, 6, 2, 5, 4, 0, 0, 1, 29, 0, 2, 8, 0, 2, 0, 0, 1, 1]' : 0.252025}
{'[6, 6, 2, 5, 4, 0, 0, 1, 29, 0, 2, 8, 0, 2, 0, 0, 1, 1]' : 0.251794}
{'[6, 6, 2, 5, 4, 0, 0, 1, 29, 0, 2, 8, 0, 2, 0, 0, 1, 1]' : 0.251835}
{'[6, 6, 2, 5, 4, 0, 0, 1, 29, 0, 2, 8, 0, 2, 0, 0, 1, 1]' : 0.251919}
{'[6, 6, 2, 5, 4, 0, 0, 1, 29, 0, 2, 8, 0, 2, 0, 0, 1, 1]' : 0.252149}
{'[6, 6, 2, 5, 4, 0, 0, 1, 29, 0, 2, 8, 0, 2, 0, 0, 1, 1]' : 0.251831}
{'[6, 6, 2, 5, 4, 0, 0, 1, 29, 0, 2, 8, 0, 2, 0, 0, 1, 1]' : 0.251888}
{'[6, 6, 2, 5, 4, 0, 0, 1, 29, 0, 2, 8, 0, 2, 0, 0, 1, 1]' : 0.251698}
{'[6, 6, 2, 5, 4, 0, 0, 1, 29, 0, 2, 8, 0, 2, 0, 0, 1, 1]' : 0.252354}
{'[6, 6, 2, 5, 4, 0, 0, 1, 29, 0, 2, 8, 0, 2, 0, 0, 1, 1]' : 0.252103}
{'[6, 6, 2, 5, 4, 0, 0, 1, 29, 0, 2, 8, 0, 2, 0, 0, 1, 1]' : 0.252211}
{'[6, 6, 2, 5, 4, 0, 0, 1, 29, 0, 2, 8, 0, 2, 0, 0, 1, 1]' : 0.251755}
{'[6, 6, 2, 5, 4, 0, 0, 1, 29, 0, 2, 8, 0, 2, 0, 0, 1, 1]' : 0.251985}
{'[6, 6, 2, 5, 4, 0, 0, 1, 29, 0, 2, 8, 0, 2, 0, 0, 1, 1]' : 0.252323}
{'[6, 6, 2, 5, 4, 0, 0, 1, 29, 0, 2, 8, 0, 2, 0, 0, 1, 1]' : 0.251913}
{'[6, 6, 2, 5, 4, 0, 0, 1, 29, 0, 2, 8, 0, 2, 0, 0, 1, 1]' : 0.25181}
{'[6, 6, 2, 5, 4, 0, 0, 1, 29, 0, 2, 8, 0, 2, 0, 0, 1, 1]' : 0.251934}
{'[6, 6, 2, 5, 4, 0, 0, 1, 29, 0, 2, 8, 0, 2, 0, 0, 1, 1]' : 0.252301}
{'[6, 6, 2, 5, 4, 0, 0, 1, 29, 0, 2, 8, 0, 2, 0, 0, 1, 1]' : 0.251826}
{'[6, 6, 2, 5, 4, 0, 0, 1, 29, 0, 2, 8, 0, 2, 0, 0, 1, 1]' : 0.251707}
{'[6, 6, 2, 5, 4, 0, 0, 1, 29, 0, 2, 8, 0, 2, 0, 0, 1, 1]' : 0.251769}
{'[6, 6, 2, 5, 4, 0, 0, 1, 29, 0, 2, 8, 0, 2, 0, 0, 1, 1]' : 0.252206}
{'[6, 6, 2, 5, 4, 0, 0, 1, 29, 0, 2, 8, 0, 2, 0, 0, 1, 1]' : 0.252102}
{'[6, 6, 2, 5, 4, 0, 0, 1, 29, 0, 2, 8, 0, 2, 0, 0, 1, 1]' : 0.251729}
{'[6, 6, 2, 5, 4, 0, 0, 1, 29, 0, 2, 8, 0, 2, 0, 0, 1, 1]' : 0.252123}
{'[6, 6, 2, 5, 4, 0, 0, 1, 29, 0, 2, 8, 0, 2, 0, 0, 1, 1]' : 0.251862}

out:
 ["{'[6, 6, 2, 5, 4, 0, 0, 1, 29, 0, 2, 8, 0, 2, 0, 0, 1, 1]' : 0.302235}", "{'[6, 6, 2, 5, 4, 0, 0, 1, 29, 0, 2, 8, 0, 2, 0, 0, 1, 1]' : 0.301219}", "{'[6, 6, 2, 5, 4, 0, 0, 1, 29, 0, 2, 8, 0, 2, 0, 0, 1, 1]' : 0.254054}", "{'[6, 6, 2, 5, 4, 0, 0, 1, 29, 0, 2, 8, 0, 2, 0, 0, 1, 1]' : 0.251813}", "{'[6, 6, 2, 5, 4, 0, 0, 1, 29, 0, 2, 8, 0, 2, 0, 0, 1, 1]' : 0.252025}", "{'[6, 6, 2, 5, 4, 0, 0, 1, 29, 0, 2, 8, 0, 2, 0, 0, 1, 1]' : 0.251794}", "{'[6, 6, 2, 5, 4, 0, 0, 1, 29, 0, 2, 8, 0, 2, 0, 0, 1, 1]' : 0.251835}", "{'[6, 6, 2, 5, 4, 0, 0, 1, 29, 0, 2, 8, 0, 2, 0, 0, 1, 1]' : 0.251919}", "{'[6, 6, 2, 5, 4, 0, 0, 1, 29, 0, 2, 8, 0, 2, 0, 0, 1, 1]' : 0.252149}", "{'[6, 6, 2, 5, 4, 0, 0, 1, 29, 0, 2, 8, 0, 2, 0, 0, 1, 1]' : 0.251831}", "{'[6, 6, 2, 5, 4, 0, 0, 1, 29, 0, 2, 8, 0, 2, 0, 0, 1, 1]' : 0.251888}", "{'[6, 6, 2, 5, 4, 0, 0, 1, 29, 0, 2, 8, 0, 2, 0, 0, 1, 1]' : 0.251698}", "{'[6, 6, 2, 5, 4, 0, 0, 1, 29, 0, 2, 8, 0, 2, 0, 0, 1, 1]' : 0.252354}", "{'[6, 6, 2, 5, 4, 0, 0, 1, 29, 0, 2, 8, 0, 2, 0, 0, 1, 1]' : 0.252103}", "{'[6, 6, 2, 5, 4, 0, 0, 1, 29, 0, 2, 8, 0, 2, 0, 0, 1, 1]' : 0.252211}", "{'[6, 6, 2, 5, 4, 0, 0, 1, 29, 0, 2, 8, 0, 2, 0, 0, 1, 1]' : 0.251755}", "{'[6, 6, 2, 5, 4, 0, 0, 1, 29, 0, 2, 8, 0, 2, 0, 0, 1, 1]' : 0.251985}", "{'[6, 6, 2, 5, 4, 0, 0, 1, 29, 0, 2, 8, 0, 2, 0, 0, 1, 1]' : 0.252323}", "{'[6, 6, 2, 5, 4, 0, 0, 1, 29, 0, 2, 8, 0, 2, 0, 0, 1, 1]' : 0.251913}", "{'[6, 6, 2, 5, 4, 0, 0, 1, 29, 0, 2, 8, 0, 2, 0, 0, 1, 1]' : 0.25181}", "{'[6, 6, 2, 5, 4, 0, 0, 1, 29, 0, 2, 8, 0, 2, 0, 0, 1, 1]' : 0.251934}", "{'[6, 6, 2, 5, 4, 0, 0, 1, 29, 0, 2, 8, 0, 2, 0, 0, 1, 1]' : 0.252301}", "{'[6, 6, 2, 5, 4, 0, 0, 1, 29, 0, 2, 8, 0, 2, 0, 0, 1, 1]' : 0.251826}", "{'[6, 6, 2, 5, 4, 0, 0, 1, 29, 0, 2, 8, 0, 2, 0, 0, 1, 1]' : 0.251707}", "{'[6, 6, 2, 5, 4, 0, 0, 1, 29, 0, 2, 8, 0, 2, 0, 0, 1, 1]' : 0.251769}", "{'[6, 6, 2, 5, 4, 0, 0, 1, 29, 0, 2, 8, 0, 2, 0, 0, 1, 1]' : 0.252206}", "{'[6, 6, 2, 5, 4, 0, 0, 1, 29, 0, 2, 8, 0, 2, 0, 0, 1, 1]' : 0.252102}", "{'[6, 6, 2, 5, 4, 0, 0, 1, 29, 0, 2, 8, 0, 2, 0, 0, 1, 1]' : 0.251729}", "{'[6, 6, 2, 5, 4, 0, 0, 1, 29, 0, 2, 8, 0, 2, 0, 0, 1, 1]' : 0.252123}", "{'[6, 6, 2, 5, 4, 0, 0, 1, 29, 0, 2, 8, 0, 2, 0, 0, 1, 1]' : 0.251862}"]
returning from 'run': {'[6, 6, 2, 5, 4, 0, 0, 1, 29, 0, 2, 8, 0, 2, 0, 0, 1, 1]': ([0.302235, 0.301219, 0.254054, 0.251813, 0.252025, 0.251794, 0.251835, 0.251919, 0.252149, 0.251831, 0.251888, 0.251698, 0.252354, 0.252103, 0.252211, 0.251755, 0.251985, 0.252323, 0.251913, 0.25181, 0.251934, 0.252301, 0.251826, 0.251707, 0.251769, 0.252206, 0.252102, 0.251729, 0.252123, 0.251862], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 2, 5, 4, 0, 0, 1, 29, 0, 2, 8, 0, 2, 0, 0, 1, 1]': ([0.302235, 0.301219, 0.254054, 0.251813, 0.252025, 0.251794, 0.251835, 0.251919, 0.252149, 0.251831, 0.251888, 0.251698, 0.252354, 0.252103, 0.252211, 0.251755, 0.251985, 0.252323, 0.251913, 0.25181, 0.251934, 0.252301, 0.251826, 0.251707, 0.251769, 0.252206, 0.252102, 0.251729, 0.252123, 0.251862], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	33
        Max loop nest depth: 	6
        Additions: 		670
        Multiplications: 	264
        Divisions: 		0
        Logical: 		0
        Reads: 			1480
        Writes: 		312
        Comparisons:		33
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest40.exe __orio_perftest40.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest40.exe  
Program Test Output: 
{'[4, 6, 2, 5, 6, 6, 0, 0, 9, 1, 0, 1, 1, 0, 1, 1, 1, 0]' : 0.107439}
{'[4, 6, 2, 5, 6, 6, 0, 0, 9, 1, 0, 1, 1, 0, 1, 1, 1, 0]' : 0.107403}
{'[4, 6, 2, 5, 6, 6, 0, 0, 9, 1, 0, 1, 1, 0, 1, 1, 1, 0]' : 0.107391}
{'[4, 6, 2, 5, 6, 6, 0, 0, 9, 1, 0, 1, 1, 0, 1, 1, 1, 0]' : 0.107272}
{'[4, 6, 2, 5, 6, 6, 0, 0, 9, 1, 0, 1, 1, 0, 1, 1, 1, 0]' : 0.100062}
{'[4, 6, 2, 5, 6, 6, 0, 0, 9, 1, 0, 1, 1, 0, 1, 1, 1, 0]' : 0.0946338}
{'[4, 6, 2, 5, 6, 6, 0, 0, 9, 1, 0, 1, 1, 0, 1, 1, 1, 0]' : 0.0945251}
{'[4, 6, 2, 5, 6, 6, 0, 0, 9, 1, 0, 1, 1, 0, 1, 1, 1, 0]' : 0.0945981}
{'[4, 6, 2, 5, 6, 6, 0, 0, 9, 1, 0, 1, 1, 0, 1, 1, 1, 0]' : 0.0947139}
{'[4, 6, 2, 5, 6, 6, 0, 0, 9, 1, 0, 1, 1, 0, 1, 1, 1, 0]' : 0.0947981}
{'[4, 6, 2, 5, 6, 6, 0, 0, 9, 1, 0, 1, 1, 0, 1, 1, 1, 0]' : 0.0945339}
{'[4, 6, 2, 5, 6, 6, 0, 0, 9, 1, 0, 1, 1, 0, 1, 1, 1, 0]' : 0.094625}
{'[4, 6, 2, 5, 6, 6, 0, 0, 9, 1, 0, 1, 1, 0, 1, 1, 1, 0]' : 0.094805}
{'[4, 6, 2, 5, 6, 6, 0, 0, 9, 1, 0, 1, 1, 0, 1, 1, 1, 0]' : 0.0945389}
{'[4, 6, 2, 5, 6, 6, 0, 0, 9, 1, 0, 1, 1, 0, 1, 1, 1, 0]' : 0.0946891}
{'[4, 6, 2, 5, 6, 6, 0, 0, 9, 1, 0, 1, 1, 0, 1, 1, 1, 0]' : 0.0945039}
{'[4, 6, 2, 5, 6, 6, 0, 0, 9, 1, 0, 1, 1, 0, 1, 1, 1, 0]' : 0.094764}
{'[4, 6, 2, 5, 6, 6, 0, 0, 9, 1, 0, 1, 1, 0, 1, 1, 1, 0]' : 0.0945661}
{'[4, 6, 2, 5, 6, 6, 0, 0, 9, 1, 0, 1, 1, 0, 1, 1, 1, 0]' : 0.0945351}
{'[4, 6, 2, 5, 6, 6, 0, 0, 9, 1, 0, 1, 1, 0, 1, 1, 1, 0]' : 0.094898}
{'[4, 6, 2, 5, 6, 6, 0, 0, 9, 1, 0, 1, 1, 0, 1, 1, 1, 0]' : 0.09477}
{'[4, 6, 2, 5, 6, 6, 0, 0, 9, 1, 0, 1, 1, 0, 1, 1, 1, 0]' : 0.094557}
{'[4, 6, 2, 5, 6, 6, 0, 0, 9, 1, 0, 1, 1, 0, 1, 1, 1, 0]' : 0.094517}
{'[4, 6, 2, 5, 6, 6, 0, 0, 9, 1, 0, 1, 1, 0, 1, 1, 1, 0]' : 0.0946729}
{'[4, 6, 2, 5, 6, 6, 0, 0, 9, 1, 0, 1, 1, 0, 1, 1, 1, 0]' : 0.094533}
{'[4, 6, 2, 5, 6, 6, 0, 0, 9, 1, 0, 1, 1, 0, 1, 1, 1, 0]' : 0.0947778}
{'[4, 6, 2, 5, 6, 6, 0, 0, 9, 1, 0, 1, 1, 0, 1, 1, 1, 0]' : 0.094686}
{'[4, 6, 2, 5, 6, 6, 0, 0, 9, 1, 0, 1, 1, 0, 1, 1, 1, 0]' : 0.0945189}
{'[4, 6, 2, 5, 6, 6, 0, 0, 9, 1, 0, 1, 1, 0, 1, 1, 1, 0]' : 0.0944979}
{'[4, 6, 2, 5, 6, 6, 0, 0, 9, 1, 0, 1, 1, 0, 1, 1, 1, 0]' : 0.0945079}

out:
 ["{'[4, 6, 2, 5, 6, 6, 0, 0, 9, 1, 0, 1, 1, 0, 1, 1, 1, 0]' : 0.107439}", "{'[4, 6, 2, 5, 6, 6, 0, 0, 9, 1, 0, 1, 1, 0, 1, 1, 1, 0]' : 0.107403}", "{'[4, 6, 2, 5, 6, 6, 0, 0, 9, 1, 0, 1, 1, 0, 1, 1, 1, 0]' : 0.107391}", "{'[4, 6, 2, 5, 6, 6, 0, 0, 9, 1, 0, 1, 1, 0, 1, 1, 1, 0]' : 0.107272}", "{'[4, 6, 2, 5, 6, 6, 0, 0, 9, 1, 0, 1, 1, 0, 1, 1, 1, 0]' : 0.100062}", "{'[4, 6, 2, 5, 6, 6, 0, 0, 9, 1, 0, 1, 1, 0, 1, 1, 1, 0]' : 0.0946338}", "{'[4, 6, 2, 5, 6, 6, 0, 0, 9, 1, 0, 1, 1, 0, 1, 1, 1, 0]' : 0.0945251}", "{'[4, 6, 2, 5, 6, 6, 0, 0, 9, 1, 0, 1, 1, 0, 1, 1, 1, 0]' : 0.0945981}", "{'[4, 6, 2, 5, 6, 6, 0, 0, 9, 1, 0, 1, 1, 0, 1, 1, 1, 0]' : 0.0947139}", "{'[4, 6, 2, 5, 6, 6, 0, 0, 9, 1, 0, 1, 1, 0, 1, 1, 1, 0]' : 0.0947981}", "{'[4, 6, 2, 5, 6, 6, 0, 0, 9, 1, 0, 1, 1, 0, 1, 1, 1, 0]' : 0.0945339}", "{'[4, 6, 2, 5, 6, 6, 0, 0, 9, 1, 0, 1, 1, 0, 1, 1, 1, 0]' : 0.094625}", "{'[4, 6, 2, 5, 6, 6, 0, 0, 9, 1, 0, 1, 1, 0, 1, 1, 1, 0]' : 0.094805}", "{'[4, 6, 2, 5, 6, 6, 0, 0, 9, 1, 0, 1, 1, 0, 1, 1, 1, 0]' : 0.0945389}", "{'[4, 6, 2, 5, 6, 6, 0, 0, 9, 1, 0, 1, 1, 0, 1, 1, 1, 0]' : 0.0946891}", "{'[4, 6, 2, 5, 6, 6, 0, 0, 9, 1, 0, 1, 1, 0, 1, 1, 1, 0]' : 0.0945039}", "{'[4, 6, 2, 5, 6, 6, 0, 0, 9, 1, 0, 1, 1, 0, 1, 1, 1, 0]' : 0.094764}", "{'[4, 6, 2, 5, 6, 6, 0, 0, 9, 1, 0, 1, 1, 0, 1, 1, 1, 0]' : 0.0945661}", "{'[4, 6, 2, 5, 6, 6, 0, 0, 9, 1, 0, 1, 1, 0, 1, 1, 1, 0]' : 0.0945351}", "{'[4, 6, 2, 5, 6, 6, 0, 0, 9, 1, 0, 1, 1, 0, 1, 1, 1, 0]' : 0.094898}", "{'[4, 6, 2, 5, 6, 6, 0, 0, 9, 1, 0, 1, 1, 0, 1, 1, 1, 0]' : 0.09477}", "{'[4, 6, 2, 5, 6, 6, 0, 0, 9, 1, 0, 1, 1, 0, 1, 1, 1, 0]' : 0.094557}", "{'[4, 6, 2, 5, 6, 6, 0, 0, 9, 1, 0, 1, 1, 0, 1, 1, 1, 0]' : 0.094517}", "{'[4, 6, 2, 5, 6, 6, 0, 0, 9, 1, 0, 1, 1, 0, 1, 1, 1, 0]' : 0.0946729}", "{'[4, 6, 2, 5, 6, 6, 0, 0, 9, 1, 0, 1, 1, 0, 1, 1, 1, 0]' : 0.094533}", "{'[4, 6, 2, 5, 6, 6, 0, 0, 9, 1, 0, 1, 1, 0, 1, 1, 1, 0]' : 0.0947778}", "{'[4, 6, 2, 5, 6, 6, 0, 0, 9, 1, 0, 1, 1, 0, 1, 1, 1, 0]' : 0.094686}", "{'[4, 6, 2, 5, 6, 6, 0, 0, 9, 1, 0, 1, 1, 0, 1, 1, 1, 0]' : 0.0945189}", "{'[4, 6, 2, 5, 6, 6, 0, 0, 9, 1, 0, 1, 1, 0, 1, 1, 1, 0]' : 0.0944979}", "{'[4, 6, 2, 5, 6, 6, 0, 0, 9, 1, 0, 1, 1, 0, 1, 1, 1, 0]' : 0.0945079}"]
returning from 'run': {'[4, 6, 2, 5, 6, 6, 0, 0, 9, 1, 0, 1, 1, 0, 1, 1, 1, 0]': ([0.107439, 0.107403, 0.107391, 0.107272, 0.100062, 0.0946338, 0.0945251, 0.0945981, 0.0947139, 0.0947981, 0.0945339, 0.094625, 0.094805, 0.0945389, 0.0946891, 0.0945039, 0.094764, 0.0945661, 0.0945351, 0.094898, 0.09477, 0.094557, 0.094517, 0.0946729, 0.094533, 0.0947778, 0.094686, 0.0945189, 0.0944979, 0.0945079], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 6, 2, 5, 6, 6, 0, 0, 9, 1, 0, 1, 1, 0, 1, 1, 1, 0]': ([0.107439, 0.107403, 0.107391, 0.107272, 0.100062, 0.0946338, 0.0945251, 0.0945981, 0.0947139, 0.0947981, 0.0945339, 0.094625, 0.094805, 0.0945389, 0.0946891, 0.0945039, 0.094764, 0.0945661, 0.0945351, 0.094898, 0.09477, 0.094557, 0.094517, 0.0946729, 0.094533, 0.0947778, 0.094686, 0.0945189, 0.0944979, 0.0945079], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		1452
        Multiplications: 	432
        Divisions: 		0
        Logical: 		0
        Reads: 			2342
        Writes: 		274
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest41.exe __orio_perftest41.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest41.exe  
Program Test Output: 
{'[0, 2, 2, 0, 2, 1, 1, 0, 18, 0, 1, 14, 1, 0, 1, 0, 1, 1]' : 0.128225}
{'[0, 2, 2, 0, 2, 1, 1, 0, 18, 0, 1, 14, 1, 0, 1, 0, 1, 1]' : 0.127423}
{'[0, 2, 2, 0, 2, 1, 1, 0, 18, 0, 1, 14, 1, 0, 1, 0, 1, 1]' : 0.127201}
{'[0, 2, 2, 0, 2, 1, 1, 0, 18, 0, 1, 14, 1, 0, 1, 0, 1, 1]' : 0.118845}
{'[0, 2, 2, 0, 2, 1, 1, 0, 18, 0, 1, 14, 1, 0, 1, 0, 1, 1]' : 0.108134}
{'[0, 2, 2, 0, 2, 1, 1, 0, 18, 0, 1, 14, 1, 0, 1, 0, 1, 1]' : 0.108161}
{'[0, 2, 2, 0, 2, 1, 1, 0, 18, 0, 1, 14, 1, 0, 1, 0, 1, 1]' : 0.108088}
{'[0, 2, 2, 0, 2, 1, 1, 0, 18, 0, 1, 14, 1, 0, 1, 0, 1, 1]' : 0.108164}
{'[0, 2, 2, 0, 2, 1, 1, 0, 18, 0, 1, 14, 1, 0, 1, 0, 1, 1]' : 0.108428}
{'[0, 2, 2, 0, 2, 1, 1, 0, 18, 0, 1, 14, 1, 0, 1, 0, 1, 1]' : 0.108606}
{'[0, 2, 2, 0, 2, 1, 1, 0, 18, 0, 1, 14, 1, 0, 1, 0, 1, 1]' : 0.108276}
{'[0, 2, 2, 0, 2, 1, 1, 0, 18, 0, 1, 14, 1, 0, 1, 0, 1, 1]' : 0.108275}
{'[0, 2, 2, 0, 2, 1, 1, 0, 18, 0, 1, 14, 1, 0, 1, 0, 1, 1]' : 0.108125}
{'[0, 2, 2, 0, 2, 1, 1, 0, 18, 0, 1, 14, 1, 0, 1, 0, 1, 1]' : 0.108112}
{'[0, 2, 2, 0, 2, 1, 1, 0, 18, 0, 1, 14, 1, 0, 1, 0, 1, 1]' : 0.108361}
{'[0, 2, 2, 0, 2, 1, 1, 0, 18, 0, 1, 14, 1, 0, 1, 0, 1, 1]' : 0.108531}
{'[0, 2, 2, 0, 2, 1, 1, 0, 18, 0, 1, 14, 1, 0, 1, 0, 1, 1]' : 0.108134}
{'[0, 2, 2, 0, 2, 1, 1, 0, 18, 0, 1, 14, 1, 0, 1, 0, 1, 1]' : 0.108114}
{'[0, 2, 2, 0, 2, 1, 1, 0, 18, 0, 1, 14, 1, 0, 1, 0, 1, 1]' : 0.1084}
{'[0, 2, 2, 0, 2, 1, 1, 0, 18, 0, 1, 14, 1, 0, 1, 0, 1, 1]' : 0.108507}
{'[0, 2, 2, 0, 2, 1, 1, 0, 18, 0, 1, 14, 1, 0, 1, 0, 1, 1]' : 0.108242}
{'[0, 2, 2, 0, 2, 1, 1, 0, 18, 0, 1, 14, 1, 0, 1, 0, 1, 1]' : 0.108099}
{'[0, 2, 2, 0, 2, 1, 1, 0, 18, 0, 1, 14, 1, 0, 1, 0, 1, 1]' : 0.108051}
{'[0, 2, 2, 0, 2, 1, 1, 0, 18, 0, 1, 14, 1, 0, 1, 0, 1, 1]' : 0.108194}
{'[0, 2, 2, 0, 2, 1, 1, 0, 18, 0, 1, 14, 1, 0, 1, 0, 1, 1]' : 0.108065}
{'[0, 2, 2, 0, 2, 1, 1, 0, 18, 0, 1, 14, 1, 0, 1, 0, 1, 1]' : 0.108217}
{'[0, 2, 2, 0, 2, 1, 1, 0, 18, 0, 1, 14, 1, 0, 1, 0, 1, 1]' : 0.108587}
{'[0, 2, 2, 0, 2, 1, 1, 0, 18, 0, 1, 14, 1, 0, 1, 0, 1, 1]' : 0.108167}
{'[0, 2, 2, 0, 2, 1, 1, 0, 18, 0, 1, 14, 1, 0, 1, 0, 1, 1]' : 0.108377}
{'[0, 2, 2, 0, 2, 1, 1, 0, 18, 0, 1, 14, 1, 0, 1, 0, 1, 1]' : 0.108728}

out:
 ["{'[0, 2, 2, 0, 2, 1, 1, 0, 18, 0, 1, 14, 1, 0, 1, 0, 1, 1]' : 0.128225}", "{'[0, 2, 2, 0, 2, 1, 1, 0, 18, 0, 1, 14, 1, 0, 1, 0, 1, 1]' : 0.127423}", "{'[0, 2, 2, 0, 2, 1, 1, 0, 18, 0, 1, 14, 1, 0, 1, 0, 1, 1]' : 0.127201}", "{'[0, 2, 2, 0, 2, 1, 1, 0, 18, 0, 1, 14, 1, 0, 1, 0, 1, 1]' : 0.118845}", "{'[0, 2, 2, 0, 2, 1, 1, 0, 18, 0, 1, 14, 1, 0, 1, 0, 1, 1]' : 0.108134}", "{'[0, 2, 2, 0, 2, 1, 1, 0, 18, 0, 1, 14, 1, 0, 1, 0, 1, 1]' : 0.108161}", "{'[0, 2, 2, 0, 2, 1, 1, 0, 18, 0, 1, 14, 1, 0, 1, 0, 1, 1]' : 0.108088}", "{'[0, 2, 2, 0, 2, 1, 1, 0, 18, 0, 1, 14, 1, 0, 1, 0, 1, 1]' : 0.108164}", "{'[0, 2, 2, 0, 2, 1, 1, 0, 18, 0, 1, 14, 1, 0, 1, 0, 1, 1]' : 0.108428}", "{'[0, 2, 2, 0, 2, 1, 1, 0, 18, 0, 1, 14, 1, 0, 1, 0, 1, 1]' : 0.108606}", "{'[0, 2, 2, 0, 2, 1, 1, 0, 18, 0, 1, 14, 1, 0, 1, 0, 1, 1]' : 0.108276}", "{'[0, 2, 2, 0, 2, 1, 1, 0, 18, 0, 1, 14, 1, 0, 1, 0, 1, 1]' : 0.108275}", "{'[0, 2, 2, 0, 2, 1, 1, 0, 18, 0, 1, 14, 1, 0, 1, 0, 1, 1]' : 0.108125}", "{'[0, 2, 2, 0, 2, 1, 1, 0, 18, 0, 1, 14, 1, 0, 1, 0, 1, 1]' : 0.108112}", "{'[0, 2, 2, 0, 2, 1, 1, 0, 18, 0, 1, 14, 1, 0, 1, 0, 1, 1]' : 0.108361}", "{'[0, 2, 2, 0, 2, 1, 1, 0, 18, 0, 1, 14, 1, 0, 1, 0, 1, 1]' : 0.108531}", "{'[0, 2, 2, 0, 2, 1, 1, 0, 18, 0, 1, 14, 1, 0, 1, 0, 1, 1]' : 0.108134}", "{'[0, 2, 2, 0, 2, 1, 1, 0, 18, 0, 1, 14, 1, 0, 1, 0, 1, 1]' : 0.108114}", "{'[0, 2, 2, 0, 2, 1, 1, 0, 18, 0, 1, 14, 1, 0, 1, 0, 1, 1]' : 0.1084}", "{'[0, 2, 2, 0, 2, 1, 1, 0, 18, 0, 1, 14, 1, 0, 1, 0, 1, 1]' : 0.108507}", "{'[0, 2, 2, 0, 2, 1, 1, 0, 18, 0, 1, 14, 1, 0, 1, 0, 1, 1]' : 0.108242}", "{'[0, 2, 2, 0, 2, 1, 1, 0, 18, 0, 1, 14, 1, 0, 1, 0, 1, 1]' : 0.108099}", "{'[0, 2, 2, 0, 2, 1, 1, 0, 18, 0, 1, 14, 1, 0, 1, 0, 1, 1]' : 0.108051}", "{'[0, 2, 2, 0, 2, 1, 1, 0, 18, 0, 1, 14, 1, 0, 1, 0, 1, 1]' : 0.108194}", "{'[0, 2, 2, 0, 2, 1, 1, 0, 18, 0, 1, 14, 1, 0, 1, 0, 1, 1]' : 0.108065}", "{'[0, 2, 2, 0, 2, 1, 1, 0, 18, 0, 1, 14, 1, 0, 1, 0, 1, 1]' : 0.108217}", "{'[0, 2, 2, 0, 2, 1, 1, 0, 18, 0, 1, 14, 1, 0, 1, 0, 1, 1]' : 0.108587}", "{'[0, 2, 2, 0, 2, 1, 1, 0, 18, 0, 1, 14, 1, 0, 1, 0, 1, 1]' : 0.108167}", "{'[0, 2, 2, 0, 2, 1, 1, 0, 18, 0, 1, 14, 1, 0, 1, 0, 1, 1]' : 0.108377}", "{'[0, 2, 2, 0, 2, 1, 1, 0, 18, 0, 1, 14, 1, 0, 1, 0, 1, 1]' : 0.108728}"]
returning from 'run': {'[0, 2, 2, 0, 2, 1, 1, 0, 18, 0, 1, 14, 1, 0, 1, 0, 1, 1]': ([0.128225, 0.127423, 0.127201, 0.118845, 0.108134, 0.108161, 0.108088, 0.108164, 0.108428, 0.108606, 0.108276, 0.108275, 0.108125, 0.108112, 0.108361, 0.108531, 0.108134, 0.108114, 0.1084, 0.108507, 0.108242, 0.108099, 0.108051, 0.108194, 0.108065, 0.108217, 0.108587, 0.108167, 0.108377, 0.108728], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 2, 0, 2, 1, 1, 0, 18, 0, 1, 14, 1, 0, 1, 0, 1, 1]': ([0.128225, 0.127423, 0.127201, 0.118845, 0.108134, 0.108161, 0.108088, 0.108164, 0.108428, 0.108606, 0.108276, 0.108275, 0.108125, 0.108112, 0.108361, 0.108531, 0.108134, 0.108114, 0.1084, 0.108507, 0.108242, 0.108099, 0.108051, 0.108194, 0.108065, 0.108217, 0.108587, 0.108167, 0.108377, 0.108728], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
Code stats:
        Number of loops: 	33
        Max loop nest depth: 	5
        Additions: 		3166
        Multiplications: 	920
        Divisions: 		0
        Logical: 		0
        Reads: 			4941
        Writes: 		565
        Comparisons:		33
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest42.exe __orio_perftest42.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest42.exe  
Program Test Output: 
{'[3, 0, 6, 1, 0, 5, 1, 0, 27, 8, 0, 11, 0, 0, 2, 0, 0, 0]' : 0.147646}
{'[3, 0, 6, 1, 0, 5, 1, 0, 27, 8, 0, 11, 0, 0, 2, 0, 0, 0]' : 0.147155}
{'[3, 0, 6, 1, 0, 5, 1, 0, 27, 8, 0, 11, 0, 0, 2, 0, 0, 0]' : 0.146356}
{'[3, 0, 6, 1, 0, 5, 1, 0, 27, 8, 0, 11, 0, 0, 2, 0, 0, 0]' : 0.135451}
{'[3, 0, 6, 1, 0, 5, 1, 0, 27, 8, 0, 11, 0, 0, 2, 0, 0, 0]' : 0.127641}
{'[3, 0, 6, 1, 0, 5, 1, 0, 27, 8, 0, 11, 0, 0, 2, 0, 0, 0]' : 0.128086}
{'[3, 0, 6, 1, 0, 5, 1, 0, 27, 8, 0, 11, 0, 0, 2, 0, 0, 0]' : 0.127507}
{'[3, 0, 6, 1, 0, 5, 1, 0, 27, 8, 0, 11, 0, 0, 2, 0, 0, 0]' : 0.127422}
{'[3, 0, 6, 1, 0, 5, 1, 0, 27, 8, 0, 11, 0, 0, 2, 0, 0, 0]' : 0.127579}
{'[3, 0, 6, 1, 0, 5, 1, 0, 27, 8, 0, 11, 0, 0, 2, 0, 0, 0]' : 0.127914}
{'[3, 0, 6, 1, 0, 5, 1, 0, 27, 8, 0, 11, 0, 0, 2, 0, 0, 0]' : 0.127636}
{'[3, 0, 6, 1, 0, 5, 1, 0, 27, 8, 0, 11, 0, 0, 2, 0, 0, 0]' : 0.12764}
{'[3, 0, 6, 1, 0, 5, 1, 0, 27, 8, 0, 11, 0, 0, 2, 0, 0, 0]' : 0.127725}
{'[3, 0, 6, 1, 0, 5, 1, 0, 27, 8, 0, 11, 0, 0, 2, 0, 0, 0]' : 0.128184}
{'[3, 0, 6, 1, 0, 5, 1, 0, 27, 8, 0, 11, 0, 0, 2, 0, 0, 0]' : 0.12799}
{'[3, 0, 6, 1, 0, 5, 1, 0, 27, 8, 0, 11, 0, 0, 2, 0, 0, 0]' : 0.128054}
{'[3, 0, 6, 1, 0, 5, 1, 0, 27, 8, 0, 11, 0, 0, 2, 0, 0, 0]' : 0.12791}
{'[3, 0, 6, 1, 0, 5, 1, 0, 27, 8, 0, 11, 0, 0, 2, 0, 0, 0]' : 0.128007}
{'[3, 0, 6, 1, 0, 5, 1, 0, 27, 8, 0, 11, 0, 0, 2, 0, 0, 0]' : 0.127602}
{'[3, 0, 6, 1, 0, 5, 1, 0, 27, 8, 0, 11, 0, 0, 2, 0, 0, 0]' : 0.127685}
{'[3, 0, 6, 1, 0, 5, 1, 0, 27, 8, 0, 11, 0, 0, 2, 0, 0, 0]' : 0.127769}
{'[3, 0, 6, 1, 0, 5, 1, 0, 27, 8, 0, 11, 0, 0, 2, 0, 0, 0]' : 0.12777}
{'[3, 0, 6, 1, 0, 5, 1, 0, 27, 8, 0, 11, 0, 0, 2, 0, 0, 0]' : 0.128509}
{'[3, 0, 6, 1, 0, 5, 1, 0, 27, 8, 0, 11, 0, 0, 2, 0, 0, 0]' : 0.127693}
{'[3, 0, 6, 1, 0, 5, 1, 0, 27, 8, 0, 11, 0, 0, 2, 0, 0, 0]' : 0.127836}
{'[3, 0, 6, 1, 0, 5, 1, 0, 27, 8, 0, 11, 0, 0, 2, 0, 0, 0]' : 0.127754}
{'[3, 0, 6, 1, 0, 5, 1, 0, 27, 8, 0, 11, 0, 0, 2, 0, 0, 0]' : 0.127635}
{'[3, 0, 6, 1, 0, 5, 1, 0, 27, 8, 0, 11, 0, 0, 2, 0, 0, 0]' : 0.127894}
{'[3, 0, 6, 1, 0, 5, 1, 0, 27, 8, 0, 11, 0, 0, 2, 0, 0, 0]' : 0.128122}
{'[3, 0, 6, 1, 0, 5, 1, 0, 27, 8, 0, 11, 0, 0, 2, 0, 0, 0]' : 0.127547}

out:
 ["{'[3, 0, 6, 1, 0, 5, 1, 0, 27, 8, 0, 11, 0, 0, 2, 0, 0, 0]' : 0.147646}", "{'[3, 0, 6, 1, 0, 5, 1, 0, 27, 8, 0, 11, 0, 0, 2, 0, 0, 0]' : 0.147155}", "{'[3, 0, 6, 1, 0, 5, 1, 0, 27, 8, 0, 11, 0, 0, 2, 0, 0, 0]' : 0.146356}", "{'[3, 0, 6, 1, 0, 5, 1, 0, 27, 8, 0, 11, 0, 0, 2, 0, 0, 0]' : 0.135451}", "{'[3, 0, 6, 1, 0, 5, 1, 0, 27, 8, 0, 11, 0, 0, 2, 0, 0, 0]' : 0.127641}", "{'[3, 0, 6, 1, 0, 5, 1, 0, 27, 8, 0, 11, 0, 0, 2, 0, 0, 0]' : 0.128086}", "{'[3, 0, 6, 1, 0, 5, 1, 0, 27, 8, 0, 11, 0, 0, 2, 0, 0, 0]' : 0.127507}", "{'[3, 0, 6, 1, 0, 5, 1, 0, 27, 8, 0, 11, 0, 0, 2, 0, 0, 0]' : 0.127422}", "{'[3, 0, 6, 1, 0, 5, 1, 0, 27, 8, 0, 11, 0, 0, 2, 0, 0, 0]' : 0.127579}", "{'[3, 0, 6, 1, 0, 5, 1, 0, 27, 8, 0, 11, 0, 0, 2, 0, 0, 0]' : 0.127914}", "{'[3, 0, 6, 1, 0, 5, 1, 0, 27, 8, 0, 11, 0, 0, 2, 0, 0, 0]' : 0.127636}", "{'[3, 0, 6, 1, 0, 5, 1, 0, 27, 8, 0, 11, 0, 0, 2, 0, 0, 0]' : 0.12764}", "{'[3, 0, 6, 1, 0, 5, 1, 0, 27, 8, 0, 11, 0, 0, 2, 0, 0, 0]' : 0.127725}", "{'[3, 0, 6, 1, 0, 5, 1, 0, 27, 8, 0, 11, 0, 0, 2, 0, 0, 0]' : 0.128184}", "{'[3, 0, 6, 1, 0, 5, 1, 0, 27, 8, 0, 11, 0, 0, 2, 0, 0, 0]' : 0.12799}", "{'[3, 0, 6, 1, 0, 5, 1, 0, 27, 8, 0, 11, 0, 0, 2, 0, 0, 0]' : 0.128054}", "{'[3, 0, 6, 1, 0, 5, 1, 0, 27, 8, 0, 11, 0, 0, 2, 0, 0, 0]' : 0.12791}", "{'[3, 0, 6, 1, 0, 5, 1, 0, 27, 8, 0, 11, 0, 0, 2, 0, 0, 0]' : 0.128007}", "{'[3, 0, 6, 1, 0, 5, 1, 0, 27, 8, 0, 11, 0, 0, 2, 0, 0, 0]' : 0.127602}", "{'[3, 0, 6, 1, 0, 5, 1, 0, 27, 8, 0, 11, 0, 0, 2, 0, 0, 0]' : 0.127685}", "{'[3, 0, 6, 1, 0, 5, 1, 0, 27, 8, 0, 11, 0, 0, 2, 0, 0, 0]' : 0.127769}", "{'[3, 0, 6, 1, 0, 5, 1, 0, 27, 8, 0, 11, 0, 0, 2, 0, 0, 0]' : 0.12777}", "{'[3, 0, 6, 1, 0, 5, 1, 0, 27, 8, 0, 11, 0, 0, 2, 0, 0, 0]' : 0.128509}", "{'[3, 0, 6, 1, 0, 5, 1, 0, 27, 8, 0, 11, 0, 0, 2, 0, 0, 0]' : 0.127693}", "{'[3, 0, 6, 1, 0, 5, 1, 0, 27, 8, 0, 11, 0, 0, 2, 0, 0, 0]' : 0.127836}", "{'[3, 0, 6, 1, 0, 5, 1, 0, 27, 8, 0, 11, 0, 0, 2, 0, 0, 0]' : 0.127754}", "{'[3, 0, 6, 1, 0, 5, 1, 0, 27, 8, 0, 11, 0, 0, 2, 0, 0, 0]' : 0.127635}", "{'[3, 0, 6, 1, 0, 5, 1, 0, 27, 8, 0, 11, 0, 0, 2, 0, 0, 0]' : 0.127894}", "{'[3, 0, 6, 1, 0, 5, 1, 0, 27, 8, 0, 11, 0, 0, 2, 0, 0, 0]' : 0.128122}", "{'[3, 0, 6, 1, 0, 5, 1, 0, 27, 8, 0, 11, 0, 0, 2, 0, 0, 0]' : 0.127547}"]
returning from 'run': {'[3, 0, 6, 1, 0, 5, 1, 0, 27, 8, 0, 11, 0, 0, 2, 0, 0, 0]': ([0.147646, 0.147155, 0.146356, 0.135451, 0.127641, 0.128086, 0.127507, 0.127422, 0.127579, 0.127914, 0.127636, 0.12764, 0.127725, 0.128184, 0.12799, 0.128054, 0.12791, 0.128007, 0.127602, 0.127685, 0.127769, 0.12777, 0.128509, 0.127693, 0.127836, 0.127754, 0.127635, 0.127894, 0.128122, 0.127547], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 0, 6, 1, 0, 5, 1, 0, 27, 8, 0, 11, 0, 0, 2, 0, 0, 0]': ([0.147646, 0.147155, 0.146356, 0.135451, 0.127641, 0.128086, 0.127507, 0.127422, 0.127579, 0.127914, 0.127636, 0.12764, 0.127725, 0.128184, 0.12799, 0.128054, 0.12791, 0.128007, 0.127602, 0.127685, 0.127769, 0.12777, 0.128509, 0.127693, 0.127836, 0.127754, 0.127635, 0.127894, 0.128122, 0.127547], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	4
        Additions: 		118
        Multiplications: 	28
        Divisions: 		0
        Logical: 		0
        Reads: 			256
        Writes: 		62
        Comparisons:		8
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest43.exe __orio_perftest43.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest43.exe  
Program Test Output: 
{'[3, 0, 0, 0, 3, 0, 0, 1, 29, 0, 4, 28, 0, 0, 1, 0, 0, 0]' : 0.219416}
{'[3, 0, 0, 0, 3, 0, 0, 1, 29, 0, 4, 28, 0, 0, 1, 0, 0, 0]' : 0.220484}
{'[3, 0, 0, 0, 3, 0, 0, 1, 29, 0, 4, 28, 0, 0, 1, 0, 0, 0]' : 0.22067}
{'[3, 0, 0, 0, 3, 0, 0, 1, 29, 0, 4, 28, 0, 0, 1, 0, 0, 0]' : 0.190655}
{'[3, 0, 0, 0, 3, 0, 0, 1, 29, 0, 4, 28, 0, 0, 1, 0, 0, 0]' : 0.185009}
{'[3, 0, 0, 0, 3, 0, 0, 1, 29, 0, 4, 28, 0, 0, 1, 0, 0, 0]' : 0.18554}
{'[3, 0, 0, 0, 3, 0, 0, 1, 29, 0, 4, 28, 0, 0, 1, 0, 0, 0]' : 0.185022}
{'[3, 0, 0, 0, 3, 0, 0, 1, 29, 0, 4, 28, 0, 0, 1, 0, 0, 0]' : 0.184975}
{'[3, 0, 0, 0, 3, 0, 0, 1, 29, 0, 4, 28, 0, 0, 1, 0, 0, 0]' : 0.185104}
{'[3, 0, 0, 0, 3, 0, 0, 1, 29, 0, 4, 28, 0, 0, 1, 0, 0, 0]' : 0.185111}
{'[3, 0, 0, 0, 3, 0, 0, 1, 29, 0, 4, 28, 0, 0, 1, 0, 0, 0]' : 0.18516}
{'[3, 0, 0, 0, 3, 0, 0, 1, 29, 0, 4, 28, 0, 0, 1, 0, 0, 0]' : 0.185529}
{'[3, 0, 0, 0, 3, 0, 0, 1, 29, 0, 4, 28, 0, 0, 1, 0, 0, 0]' : 0.18501}
{'[3, 0, 0, 0, 3, 0, 0, 1, 29, 0, 4, 28, 0, 0, 1, 0, 0, 0]' : 0.185177}
{'[3, 0, 0, 0, 3, 0, 0, 1, 29, 0, 4, 28, 0, 0, 1, 0, 0, 0]' : 0.185018}
{'[3, 0, 0, 0, 3, 0, 0, 1, 29, 0, 4, 28, 0, 0, 1, 0, 0, 0]' : 0.185086}
{'[3, 0, 0, 0, 3, 0, 0, 1, 29, 0, 4, 28, 0, 0, 1, 0, 0, 0]' : 0.18537}
{'[3, 0, 0, 0, 3, 0, 0, 1, 29, 0, 4, 28, 0, 0, 1, 0, 0, 0]' : 0.185407}
{'[3, 0, 0, 0, 3, 0, 0, 1, 29, 0, 4, 28, 0, 0, 1, 0, 0, 0]' : 0.184954}
{'[3, 0, 0, 0, 3, 0, 0, 1, 29, 0, 4, 28, 0, 0, 1, 0, 0, 0]' : 0.185079}
{'[3, 0, 0, 0, 3, 0, 0, 1, 29, 0, 4, 28, 0, 0, 1, 0, 0, 0]' : 0.185099}
{'[3, 0, 0, 0, 3, 0, 0, 1, 29, 0, 4, 28, 0, 0, 1, 0, 0, 0]' : 0.185111}
{'[3, 0, 0, 0, 3, 0, 0, 1, 29, 0, 4, 28, 0, 0, 1, 0, 0, 0]' : 0.185058}
{'[3, 0, 0, 0, 3, 0, 0, 1, 29, 0, 4, 28, 0, 0, 1, 0, 0, 0]' : 0.185359}
{'[3, 0, 0, 0, 3, 0, 0, 1, 29, 0, 4, 28, 0, 0, 1, 0, 0, 0]' : 0.185206}
{'[3, 0, 0, 0, 3, 0, 0, 1, 29, 0, 4, 28, 0, 0, 1, 0, 0, 0]' : 0.185227}
{'[3, 0, 0, 0, 3, 0, 0, 1, 29, 0, 4, 28, 0, 0, 1, 0, 0, 0]' : 0.18515}
{'[3, 0, 0, 0, 3, 0, 0, 1, 29, 0, 4, 28, 0, 0, 1, 0, 0, 0]' : 0.185566}
{'[3, 0, 0, 0, 3, 0, 0, 1, 29, 0, 4, 28, 0, 0, 1, 0, 0, 0]' : 0.18501}
{'[3, 0, 0, 0, 3, 0, 0, 1, 29, 0, 4, 28, 0, 0, 1, 0, 0, 0]' : 0.18542}

out:
 ["{'[3, 0, 0, 0, 3, 0, 0, 1, 29, 0, 4, 28, 0, 0, 1, 0, 0, 0]' : 0.219416}", "{'[3, 0, 0, 0, 3, 0, 0, 1, 29, 0, 4, 28, 0, 0, 1, 0, 0, 0]' : 0.220484}", "{'[3, 0, 0, 0, 3, 0, 0, 1, 29, 0, 4, 28, 0, 0, 1, 0, 0, 0]' : 0.22067}", "{'[3, 0, 0, 0, 3, 0, 0, 1, 29, 0, 4, 28, 0, 0, 1, 0, 0, 0]' : 0.190655}", "{'[3, 0, 0, 0, 3, 0, 0, 1, 29, 0, 4, 28, 0, 0, 1, 0, 0, 0]' : 0.185009}", "{'[3, 0, 0, 0, 3, 0, 0, 1, 29, 0, 4, 28, 0, 0, 1, 0, 0, 0]' : 0.18554}", "{'[3, 0, 0, 0, 3, 0, 0, 1, 29, 0, 4, 28, 0, 0, 1, 0, 0, 0]' : 0.185022}", "{'[3, 0, 0, 0, 3, 0, 0, 1, 29, 0, 4, 28, 0, 0, 1, 0, 0, 0]' : 0.184975}", "{'[3, 0, 0, 0, 3, 0, 0, 1, 29, 0, 4, 28, 0, 0, 1, 0, 0, 0]' : 0.185104}", "{'[3, 0, 0, 0, 3, 0, 0, 1, 29, 0, 4, 28, 0, 0, 1, 0, 0, 0]' : 0.185111}", "{'[3, 0, 0, 0, 3, 0, 0, 1, 29, 0, 4, 28, 0, 0, 1, 0, 0, 0]' : 0.18516}", "{'[3, 0, 0, 0, 3, 0, 0, 1, 29, 0, 4, 28, 0, 0, 1, 0, 0, 0]' : 0.185529}", "{'[3, 0, 0, 0, 3, 0, 0, 1, 29, 0, 4, 28, 0, 0, 1, 0, 0, 0]' : 0.18501}", "{'[3, 0, 0, 0, 3, 0, 0, 1, 29, 0, 4, 28, 0, 0, 1, 0, 0, 0]' : 0.185177}", "{'[3, 0, 0, 0, 3, 0, 0, 1, 29, 0, 4, 28, 0, 0, 1, 0, 0, 0]' : 0.185018}", "{'[3, 0, 0, 0, 3, 0, 0, 1, 29, 0, 4, 28, 0, 0, 1, 0, 0, 0]' : 0.185086}", "{'[3, 0, 0, 0, 3, 0, 0, 1, 29, 0, 4, 28, 0, 0, 1, 0, 0, 0]' : 0.18537}", "{'[3, 0, 0, 0, 3, 0, 0, 1, 29, 0, 4, 28, 0, 0, 1, 0, 0, 0]' : 0.185407}", "{'[3, 0, 0, 0, 3, 0, 0, 1, 29, 0, 4, 28, 0, 0, 1, 0, 0, 0]' : 0.184954}", "{'[3, 0, 0, 0, 3, 0, 0, 1, 29, 0, 4, 28, 0, 0, 1, 0, 0, 0]' : 0.185079}", "{'[3, 0, 0, 0, 3, 0, 0, 1, 29, 0, 4, 28, 0, 0, 1, 0, 0, 0]' : 0.185099}", "{'[3, 0, 0, 0, 3, 0, 0, 1, 29, 0, 4, 28, 0, 0, 1, 0, 0, 0]' : 0.185111}", "{'[3, 0, 0, 0, 3, 0, 0, 1, 29, 0, 4, 28, 0, 0, 1, 0, 0, 0]' : 0.185058}", "{'[3, 0, 0, 0, 3, 0, 0, 1, 29, 0, 4, 28, 0, 0, 1, 0, 0, 0]' : 0.185359}", "{'[3, 0, 0, 0, 3, 0, 0, 1, 29, 0, 4, 28, 0, 0, 1, 0, 0, 0]' : 0.185206}", "{'[3, 0, 0, 0, 3, 0, 0, 1, 29, 0, 4, 28, 0, 0, 1, 0, 0, 0]' : 0.185227}", "{'[3, 0, 0, 0, 3, 0, 0, 1, 29, 0, 4, 28, 0, 0, 1, 0, 0, 0]' : 0.18515}", "{'[3, 0, 0, 0, 3, 0, 0, 1, 29, 0, 4, 28, 0, 0, 1, 0, 0, 0]' : 0.185566}", "{'[3, 0, 0, 0, 3, 0, 0, 1, 29, 0, 4, 28, 0, 0, 1, 0, 0, 0]' : 0.18501}", "{'[3, 0, 0, 0, 3, 0, 0, 1, 29, 0, 4, 28, 0, 0, 1, 0, 0, 0]' : 0.18542}"]
returning from 'run': {'[3, 0, 0, 0, 3, 0, 0, 1, 29, 0, 4, 28, 0, 0, 1, 0, 0, 0]': ([0.219416, 0.220484, 0.22067, 0.190655, 0.185009, 0.18554, 0.185022, 0.184975, 0.185104, 0.185111, 0.18516, 0.185529, 0.18501, 0.185177, 0.185018, 0.185086, 0.18537, 0.185407, 0.184954, 0.185079, 0.185099, 0.185111, 0.185058, 0.185359, 0.185206, 0.185227, 0.18515, 0.185566, 0.18501, 0.18542], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 0, 0, 0, 3, 0, 0, 1, 29, 0, 4, 28, 0, 0, 1, 0, 0, 0]': ([0.219416, 0.220484, 0.22067, 0.190655, 0.185009, 0.18554, 0.185022, 0.184975, 0.185104, 0.185111, 0.18516, 0.185529, 0.18501, 0.185177, 0.185018, 0.185086, 0.18537, 0.185407, 0.184954, 0.185079, 0.185099, 0.185111, 0.185058, 0.185359, 0.185206, 0.185227, 0.18515, 0.185566, 0.18501, 0.18542], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	5
        Additions: 		1453
        Multiplications: 	432
        Divisions: 		0
        Logical: 		0
        Reads: 			2394
        Writes: 		283
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest44.exe __orio_perftest44.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest44.exe  
Program Test Output: 
{'[1, 1, 0, 0, 3, 5, 1, 0, 4, 0, 1, 19, 1, 0, 0, 0, 1, 1]' : 0.129408}
{'[1, 1, 0, 0, 3, 5, 1, 0, 4, 0, 1, 19, 1, 0, 0, 0, 1, 1]' : 0.129468}
{'[1, 1, 0, 0, 3, 5, 1, 0, 4, 0, 1, 19, 1, 0, 0, 0, 1, 1]' : 0.129311}
{'[1, 1, 0, 0, 3, 5, 1, 0, 4, 0, 1, 19, 1, 0, 0, 0, 1, 1]' : 0.12904}
{'[1, 1, 0, 0, 3, 5, 1, 0, 4, 0, 1, 19, 1, 0, 0, 0, 1, 1]' : 0.112317}
{'[1, 1, 0, 0, 3, 5, 1, 0, 4, 0, 1, 19, 1, 0, 0, 0, 1, 1]' : 0.109934}
{'[1, 1, 0, 0, 3, 5, 1, 0, 4, 0, 1, 19, 1, 0, 0, 0, 1, 1]' : 0.109683}
{'[1, 1, 0, 0, 3, 5, 1, 0, 4, 0, 1, 19, 1, 0, 0, 0, 1, 1]' : 0.109469}
{'[1, 1, 0, 0, 3, 5, 1, 0, 4, 0, 1, 19, 1, 0, 0, 0, 1, 1]' : 0.109654}
{'[1, 1, 0, 0, 3, 5, 1, 0, 4, 0, 1, 19, 1, 0, 0, 0, 1, 1]' : 0.109493}
{'[1, 1, 0, 0, 3, 5, 1, 0, 4, 0, 1, 19, 1, 0, 0, 0, 1, 1]' : 0.109371}
{'[1, 1, 0, 0, 3, 5, 1, 0, 4, 0, 1, 19, 1, 0, 0, 0, 1, 1]' : 0.109423}
{'[1, 1, 0, 0, 3, 5, 1, 0, 4, 0, 1, 19, 1, 0, 0, 0, 1, 1]' : 0.109517}
{'[1, 1, 0, 0, 3, 5, 1, 0, 4, 0, 1, 19, 1, 0, 0, 0, 1, 1]' : 0.109709}
{'[1, 1, 0, 0, 3, 5, 1, 0, 4, 0, 1, 19, 1, 0, 0, 0, 1, 1]' : 0.10969}
{'[1, 1, 0, 0, 3, 5, 1, 0, 4, 0, 1, 19, 1, 0, 0, 0, 1, 1]' : 0.10984}
{'[1, 1, 0, 0, 3, 5, 1, 0, 4, 0, 1, 19, 1, 0, 0, 0, 1, 1]' : 0.109752}
{'[1, 1, 0, 0, 3, 5, 1, 0, 4, 0, 1, 19, 1, 0, 0, 0, 1, 1]' : 0.109514}
{'[1, 1, 0, 0, 3, 5, 1, 0, 4, 0, 1, 19, 1, 0, 0, 0, 1, 1]' : 0.110051}
{'[1, 1, 0, 0, 3, 5, 1, 0, 4, 0, 1, 19, 1, 0, 0, 0, 1, 1]' : 0.109185}
{'[1, 1, 0, 0, 3, 5, 1, 0, 4, 0, 1, 19, 1, 0, 0, 0, 1, 1]' : 0.109215}
{'[1, 1, 0, 0, 3, 5, 1, 0, 4, 0, 1, 19, 1, 0, 0, 0, 1, 1]' : 0.109175}
{'[1, 1, 0, 0, 3, 5, 1, 0, 4, 0, 1, 19, 1, 0, 0, 0, 1, 1]' : 0.109254}
{'[1, 1, 0, 0, 3, 5, 1, 0, 4, 0, 1, 19, 1, 0, 0, 0, 1, 1]' : 0.109111}
{'[1, 1, 0, 0, 3, 5, 1, 0, 4, 0, 1, 19, 1, 0, 0, 0, 1, 1]' : 0.109134}
{'[1, 1, 0, 0, 3, 5, 1, 0, 4, 0, 1, 19, 1, 0, 0, 0, 1, 1]' : 0.109364}
{'[1, 1, 0, 0, 3, 5, 1, 0, 4, 0, 1, 19, 1, 0, 0, 0, 1, 1]' : 0.109427}
{'[1, 1, 0, 0, 3, 5, 1, 0, 4, 0, 1, 19, 1, 0, 0, 0, 1, 1]' : 0.109618}
{'[1, 1, 0, 0, 3, 5, 1, 0, 4, 0, 1, 19, 1, 0, 0, 0, 1, 1]' : 0.109209}
{'[1, 1, 0, 0, 3, 5, 1, 0, 4, 0, 1, 19, 1, 0, 0, 0, 1, 1]' : 0.109169}

out:
 ["{'[1, 1, 0, 0, 3, 5, 1, 0, 4, 0, 1, 19, 1, 0, 0, 0, 1, 1]' : 0.129408}", "{'[1, 1, 0, 0, 3, 5, 1, 0, 4, 0, 1, 19, 1, 0, 0, 0, 1, 1]' : 0.129468}", "{'[1, 1, 0, 0, 3, 5, 1, 0, 4, 0, 1, 19, 1, 0, 0, 0, 1, 1]' : 0.129311}", "{'[1, 1, 0, 0, 3, 5, 1, 0, 4, 0, 1, 19, 1, 0, 0, 0, 1, 1]' : 0.12904}", "{'[1, 1, 0, 0, 3, 5, 1, 0, 4, 0, 1, 19, 1, 0, 0, 0, 1, 1]' : 0.112317}", "{'[1, 1, 0, 0, 3, 5, 1, 0, 4, 0, 1, 19, 1, 0, 0, 0, 1, 1]' : 0.109934}", "{'[1, 1, 0, 0, 3, 5, 1, 0, 4, 0, 1, 19, 1, 0, 0, 0, 1, 1]' : 0.109683}", "{'[1, 1, 0, 0, 3, 5, 1, 0, 4, 0, 1, 19, 1, 0, 0, 0, 1, 1]' : 0.109469}", "{'[1, 1, 0, 0, 3, 5, 1, 0, 4, 0, 1, 19, 1, 0, 0, 0, 1, 1]' : 0.109654}", "{'[1, 1, 0, 0, 3, 5, 1, 0, 4, 0, 1, 19, 1, 0, 0, 0, 1, 1]' : 0.109493}", "{'[1, 1, 0, 0, 3, 5, 1, 0, 4, 0, 1, 19, 1, 0, 0, 0, 1, 1]' : 0.109371}", "{'[1, 1, 0, 0, 3, 5, 1, 0, 4, 0, 1, 19, 1, 0, 0, 0, 1, 1]' : 0.109423}", "{'[1, 1, 0, 0, 3, 5, 1, 0, 4, 0, 1, 19, 1, 0, 0, 0, 1, 1]' : 0.109517}", "{'[1, 1, 0, 0, 3, 5, 1, 0, 4, 0, 1, 19, 1, 0, 0, 0, 1, 1]' : 0.109709}", "{'[1, 1, 0, 0, 3, 5, 1, 0, 4, 0, 1, 19, 1, 0, 0, 0, 1, 1]' : 0.10969}", "{'[1, 1, 0, 0, 3, 5, 1, 0, 4, 0, 1, 19, 1, 0, 0, 0, 1, 1]' : 0.10984}", "{'[1, 1, 0, 0, 3, 5, 1, 0, 4, 0, 1, 19, 1, 0, 0, 0, 1, 1]' : 0.109752}", "{'[1, 1, 0, 0, 3, 5, 1, 0, 4, 0, 1, 19, 1, 0, 0, 0, 1, 1]' : 0.109514}", "{'[1, 1, 0, 0, 3, 5, 1, 0, 4, 0, 1, 19, 1, 0, 0, 0, 1, 1]' : 0.110051}", "{'[1, 1, 0, 0, 3, 5, 1, 0, 4, 0, 1, 19, 1, 0, 0, 0, 1, 1]' : 0.109185}", "{'[1, 1, 0, 0, 3, 5, 1, 0, 4, 0, 1, 19, 1, 0, 0, 0, 1, 1]' : 0.109215}", "{'[1, 1, 0, 0, 3, 5, 1, 0, 4, 0, 1, 19, 1, 0, 0, 0, 1, 1]' : 0.109175}", "{'[1, 1, 0, 0, 3, 5, 1, 0, 4, 0, 1, 19, 1, 0, 0, 0, 1, 1]' : 0.109254}", "{'[1, 1, 0, 0, 3, 5, 1, 0, 4, 0, 1, 19, 1, 0, 0, 0, 1, 1]' : 0.109111}", "{'[1, 1, 0, 0, 3, 5, 1, 0, 4, 0, 1, 19, 1, 0, 0, 0, 1, 1]' : 0.109134}", "{'[1, 1, 0, 0, 3, 5, 1, 0, 4, 0, 1, 19, 1, 0, 0, 0, 1, 1]' : 0.109364}", "{'[1, 1, 0, 0, 3, 5, 1, 0, 4, 0, 1, 19, 1, 0, 0, 0, 1, 1]' : 0.109427}", "{'[1, 1, 0, 0, 3, 5, 1, 0, 4, 0, 1, 19, 1, 0, 0, 0, 1, 1]' : 0.109618}", "{'[1, 1, 0, 0, 3, 5, 1, 0, 4, 0, 1, 19, 1, 0, 0, 0, 1, 1]' : 0.109209}", "{'[1, 1, 0, 0, 3, 5, 1, 0, 4, 0, 1, 19, 1, 0, 0, 0, 1, 1]' : 0.109169}"]
returning from 'run': {'[1, 1, 0, 0, 3, 5, 1, 0, 4, 0, 1, 19, 1, 0, 0, 0, 1, 1]': ([0.129408, 0.129468, 0.129311, 0.12904, 0.112317, 0.109934, 0.109683, 0.109469, 0.109654, 0.109493, 0.109371, 0.109423, 0.109517, 0.109709, 0.10969, 0.10984, 0.109752, 0.109514, 0.110051, 0.109185, 0.109215, 0.109175, 0.109254, 0.109111, 0.109134, 0.109364, 0.109427, 0.109618, 0.109209, 0.109169], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 1, 0, 0, 3, 5, 1, 0, 4, 0, 1, 19, 1, 0, 0, 0, 1, 1]': ([0.129408, 0.129468, 0.129311, 0.12904, 0.112317, 0.109934, 0.109683, 0.109469, 0.109654, 0.109493, 0.109371, 0.109423, 0.109517, 0.109709, 0.10969, 0.10984, 0.109752, 0.109514, 0.110051, 0.109185, 0.109215, 0.109175, 0.109254, 0.109111, 0.109134, 0.109364, 0.109427, 0.109618, 0.109209, 0.109169], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = jjj
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		1061
        Multiplications: 	496
        Divisions: 		0
        Logical: 		0
        Reads: 			2224
        Writes: 		439
        Comparisons:		15
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest45.exe __orio_perftest45.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest45.exe  
Program Test Output: 
{'[0, 5, 0, 4, 3, 5, 0, 0, 29, 29, 0, 5, 0, 0, 0, 1, 0, 1]' : 0.135656}
{'[0, 5, 0, 4, 3, 5, 0, 0, 29, 29, 0, 5, 0, 0, 0, 1, 0, 1]' : 0.13611}
{'[0, 5, 0, 4, 3, 5, 0, 0, 29, 29, 0, 5, 0, 0, 0, 1, 0, 1]' : 0.136192}
{'[0, 5, 0, 4, 3, 5, 0, 0, 29, 29, 0, 5, 0, 0, 0, 1, 0, 1]' : 0.135689}
{'[0, 5, 0, 4, 3, 5, 0, 0, 29, 29, 0, 5, 0, 0, 0, 1, 0, 1]' : 0.135841}
{'[0, 5, 0, 4, 3, 5, 0, 0, 29, 29, 0, 5, 0, 0, 0, 1, 0, 1]' : 0.135834}
{'[0, 5, 0, 4, 3, 5, 0, 0, 29, 29, 0, 5, 0, 0, 0, 1, 0, 1]' : 0.135837}
{'[0, 5, 0, 4, 3, 5, 0, 0, 29, 29, 0, 5, 0, 0, 0, 1, 0, 1]' : 0.135763}
{'[0, 5, 0, 4, 3, 5, 0, 0, 29, 29, 0, 5, 0, 0, 0, 1, 0, 1]' : 0.136113}
{'[0, 5, 0, 4, 3, 5, 0, 0, 29, 29, 0, 5, 0, 0, 0, 1, 0, 1]' : 0.135761}
{'[0, 5, 0, 4, 3, 5, 0, 0, 29, 29, 0, 5, 0, 0, 0, 1, 0, 1]' : 0.136121}
{'[0, 5, 0, 4, 3, 5, 0, 0, 29, 29, 0, 5, 0, 0, 0, 1, 0, 1]' : 0.136111}
{'[0, 5, 0, 4, 3, 5, 0, 0, 29, 29, 0, 5, 0, 0, 0, 1, 0, 1]' : 0.136048}
{'[0, 5, 0, 4, 3, 5, 0, 0, 29, 29, 0, 5, 0, 0, 0, 1, 0, 1]' : 0.135834}
{'[0, 5, 0, 4, 3, 5, 0, 0, 29, 29, 0, 5, 0, 0, 0, 1, 0, 1]' : 0.135729}
{'[0, 5, 0, 4, 3, 5, 0, 0, 29, 29, 0, 5, 0, 0, 0, 1, 0, 1]' : 0.135894}
{'[0, 5, 0, 4, 3, 5, 0, 0, 29, 29, 0, 5, 0, 0, 0, 1, 0, 1]' : 0.135759}
{'[0, 5, 0, 4, 3, 5, 0, 0, 29, 29, 0, 5, 0, 0, 0, 1, 0, 1]' : 0.135787}
{'[0, 5, 0, 4, 3, 5, 0, 0, 29, 29, 0, 5, 0, 0, 0, 1, 0, 1]' : 0.136847}
{'[0, 5, 0, 4, 3, 5, 0, 0, 29, 29, 0, 5, 0, 0, 0, 1, 0, 1]' : 0.135849}
{'[0, 5, 0, 4, 3, 5, 0, 0, 29, 29, 0, 5, 0, 0, 0, 1, 0, 1]' : 0.136392}
{'[0, 5, 0, 4, 3, 5, 0, 0, 29, 29, 0, 5, 0, 0, 0, 1, 0, 1]' : 0.135616}
{'[0, 5, 0, 4, 3, 5, 0, 0, 29, 29, 0, 5, 0, 0, 0, 1, 0, 1]' : 0.135852}
{'[0, 5, 0, 4, 3, 5, 0, 0, 29, 29, 0, 5, 0, 0, 0, 1, 0, 1]' : 0.135982}
{'[0, 5, 0, 4, 3, 5, 0, 0, 29, 29, 0, 5, 0, 0, 0, 1, 0, 1]' : 0.135834}
{'[0, 5, 0, 4, 3, 5, 0, 0, 29, 29, 0, 5, 0, 0, 0, 1, 0, 1]' : 0.135729}
{'[0, 5, 0, 4, 3, 5, 0, 0, 29, 29, 0, 5, 0, 0, 0, 1, 0, 1]' : 0.136505}
{'[0, 5, 0, 4, 3, 5, 0, 0, 29, 29, 0, 5, 0, 0, 0, 1, 0, 1]' : 0.136048}
{'[0, 5, 0, 4, 3, 5, 0, 0, 29, 29, 0, 5, 0, 0, 0, 1, 0, 1]' : 0.13574}
{'[0, 5, 0, 4, 3, 5, 0, 0, 29, 29, 0, 5, 0, 0, 0, 1, 0, 1]' : 0.135844}

out:
 ["{'[0, 5, 0, 4, 3, 5, 0, 0, 29, 29, 0, 5, 0, 0, 0, 1, 0, 1]' : 0.135656}", "{'[0, 5, 0, 4, 3, 5, 0, 0, 29, 29, 0, 5, 0, 0, 0, 1, 0, 1]' : 0.13611}", "{'[0, 5, 0, 4, 3, 5, 0, 0, 29, 29, 0, 5, 0, 0, 0, 1, 0, 1]' : 0.136192}", "{'[0, 5, 0, 4, 3, 5, 0, 0, 29, 29, 0, 5, 0, 0, 0, 1, 0, 1]' : 0.135689}", "{'[0, 5, 0, 4, 3, 5, 0, 0, 29, 29, 0, 5, 0, 0, 0, 1, 0, 1]' : 0.135841}", "{'[0, 5, 0, 4, 3, 5, 0, 0, 29, 29, 0, 5, 0, 0, 0, 1, 0, 1]' : 0.135834}", "{'[0, 5, 0, 4, 3, 5, 0, 0, 29, 29, 0, 5, 0, 0, 0, 1, 0, 1]' : 0.135837}", "{'[0, 5, 0, 4, 3, 5, 0, 0, 29, 29, 0, 5, 0, 0, 0, 1, 0, 1]' : 0.135763}", "{'[0, 5, 0, 4, 3, 5, 0, 0, 29, 29, 0, 5, 0, 0, 0, 1, 0, 1]' : 0.136113}", "{'[0, 5, 0, 4, 3, 5, 0, 0, 29, 29, 0, 5, 0, 0, 0, 1, 0, 1]' : 0.135761}", "{'[0, 5, 0, 4, 3, 5, 0, 0, 29, 29, 0, 5, 0, 0, 0, 1, 0, 1]' : 0.136121}", "{'[0, 5, 0, 4, 3, 5, 0, 0, 29, 29, 0, 5, 0, 0, 0, 1, 0, 1]' : 0.136111}", "{'[0, 5, 0, 4, 3, 5, 0, 0, 29, 29, 0, 5, 0, 0, 0, 1, 0, 1]' : 0.136048}", "{'[0, 5, 0, 4, 3, 5, 0, 0, 29, 29, 0, 5, 0, 0, 0, 1, 0, 1]' : 0.135834}", "{'[0, 5, 0, 4, 3, 5, 0, 0, 29, 29, 0, 5, 0, 0, 0, 1, 0, 1]' : 0.135729}", "{'[0, 5, 0, 4, 3, 5, 0, 0, 29, 29, 0, 5, 0, 0, 0, 1, 0, 1]' : 0.135894}", "{'[0, 5, 0, 4, 3, 5, 0, 0, 29, 29, 0, 5, 0, 0, 0, 1, 0, 1]' : 0.135759}", "{'[0, 5, 0, 4, 3, 5, 0, 0, 29, 29, 0, 5, 0, 0, 0, 1, 0, 1]' : 0.135787}", "{'[0, 5, 0, 4, 3, 5, 0, 0, 29, 29, 0, 5, 0, 0, 0, 1, 0, 1]' : 0.136847}", "{'[0, 5, 0, 4, 3, 5, 0, 0, 29, 29, 0, 5, 0, 0, 0, 1, 0, 1]' : 0.135849}", "{'[0, 5, 0, 4, 3, 5, 0, 0, 29, 29, 0, 5, 0, 0, 0, 1, 0, 1]' : 0.136392}", "{'[0, 5, 0, 4, 3, 5, 0, 0, 29, 29, 0, 5, 0, 0, 0, 1, 0, 1]' : 0.135616}", "{'[0, 5, 0, 4, 3, 5, 0, 0, 29, 29, 0, 5, 0, 0, 0, 1, 0, 1]' : 0.135852}", "{'[0, 5, 0, 4, 3, 5, 0, 0, 29, 29, 0, 5, 0, 0, 0, 1, 0, 1]' : 0.135982}", "{'[0, 5, 0, 4, 3, 5, 0, 0, 29, 29, 0, 5, 0, 0, 0, 1, 0, 1]' : 0.135834}", "{'[0, 5, 0, 4, 3, 5, 0, 0, 29, 29, 0, 5, 0, 0, 0, 1, 0, 1]' : 0.135729}", "{'[0, 5, 0, 4, 3, 5, 0, 0, 29, 29, 0, 5, 0, 0, 0, 1, 0, 1]' : 0.136505}", "{'[0, 5, 0, 4, 3, 5, 0, 0, 29, 29, 0, 5, 0, 0, 0, 1, 0, 1]' : 0.136048}", "{'[0, 5, 0, 4, 3, 5, 0, 0, 29, 29, 0, 5, 0, 0, 0, 1, 0, 1]' : 0.13574}", "{'[0, 5, 0, 4, 3, 5, 0, 0, 29, 29, 0, 5, 0, 0, 0, 1, 0, 1]' : 0.135844}"]
returning from 'run': {'[0, 5, 0, 4, 3, 5, 0, 0, 29, 29, 0, 5, 0, 0, 0, 1, 0, 1]': ([0.135656, 0.13611, 0.136192, 0.135689, 0.135841, 0.135834, 0.135837, 0.135763, 0.136113, 0.135761, 0.136121, 0.136111, 0.136048, 0.135834, 0.135729, 0.135894, 0.135759, 0.135787, 0.136847, 0.135849, 0.136392, 0.135616, 0.135852, 0.135982, 0.135834, 0.135729, 0.136505, 0.136048, 0.13574, 0.135844], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 5, 0, 4, 3, 5, 0, 0, 29, 29, 0, 5, 0, 0, 0, 1, 0, 1]': ([0.135656, 0.13611, 0.136192, 0.135689, 0.135841, 0.135834, 0.135837, 0.135763, 0.136113, 0.135761, 0.136121, 0.136111, 0.136048, 0.135834, 0.135729, 0.135894, 0.135759, 0.135787, 0.136847, 0.135849, 0.136392, 0.135616, 0.135852, 0.135982, 0.135834, 0.135729, 0.136505, 0.136048, 0.13574, 0.135844], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	61
        Max loop nest depth: 	5
        Additions: 		9711
        Multiplications: 	2392
        Divisions: 		0
        Logical: 		0
        Reads: 			14155
        Writes: 		1397
        Comparisons:		61
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest46.exe __orio_perftest46.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest46.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest46.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest46.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest46.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Complete design, with measurements:
     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
257     4    1    4    2    1    2       0       1   25   3   7   0    2    0
667     0    0    4    4    6    5       1       1    0  11  23   0    2    0
682     6    6    0    6    0    0       1       0   21   0  21   0    2    0
891     4    1    0    0    6    5       0       0   10   0  26   9    0    2
972     0    6    4    4    5    4       1       0    3   0  29  26    0    0
1009    6    0    6    6    5    0       1       1    5   0  15   5    0    0
1419    5    4    5    0    2    3       0       0    5   2   0  13    0    1
1487    5    2    6    3    1    5       1       1    0   3   0  10    0    1
1509    4    2    6    2    2    4       0       1    5  27   1   0    0    2
1510    0    0    1    3    3    6       0       1    4   1   0   0    1    0
1625    2    6    0    0    4    2       1       0    1   4  16   0    1    0
1712    3    3    3    0    5    1       0       1    0   0  29  12    1    1
1714    6    0    0    4    0    0       0       0   28   5   0  23    1    0
1726    6    1    5    5    0    5       0       1   29   0  24  29    0    0
1898    0    2    2    6    6    5       0       1    4   5   4   0    0    1
1976    2    5    1    1    0    6       1       1   26   0   1   0    0    1
2052    2    6    0    3    6    0       1       1    3  10  23   0    1    0
2095    3    2    2    2    5    6       1       0   26  19   0  28    2    0
2125    2    1    3    2    0    1       1       0    0   1   0  26    0    0
2133    6    0    0    4    6    1       1       1   14  28   0  20    1    1
2799    6    3    1    6    2    4       1       1    3  29   0  29    0    0
2849    3    3    6    3    4    6       1       0   29  29  29   0    0    0
3041    0    1    3    1    6    0       0       0    5  17   0   8    0    0
3212    5    6    0    5    5    4       1       0    0  24   5   0    0    0
3326    2    0    2    4    2    6       0       1    4   0  22  28    1    0
3444    6    6    6    0    0    6       1       1    1  27  12   0    1    0
3718    0    5    6    3    4    0       0       0    6   0   2  23    2    0
3761    0    3    6    0    2    0       0       0   27   8  12   0    0    2
3763    3    0    3    6    6    1       1       0    0  26   4   0    0    1
3807    2    6    5    0    6    0       1       1   29  20   0  18    1    0
4097    3    0    5    2    6    6       0       0    7   0  24  29    2    0
4107    6    6    2    5    4    0       0       1   29   0   2   8    0    2
4187    4    6    2    5    6    6       0       0    9   1   0   1    1    0
4235    0    2    2    0    2    1       1       0   18   0   1  14    1    0
4277    3    0    6    1    0    5       1       0   27   8   0  11    0    0
4306    3    0    0    0    3    0       0       1   29   0   4  28    0    0
4374    1    1    0    0    3    5       1       0    4   0   1  19    1    0
4434    0    5    0    4    3    5       0       0   29  29   0   5    0    0
     RT_K SCR VEC1 VEC2  cost_mean
257     0   1    0    1 0.35127803
667     0   0    0    0 0.29219123
682     0   0    0    1 0.31669310
891     0   1    0    1 0.16659227
972     2   0    0    0 0.21388620
1009    0   1    0    0 0.22301093
1419    1   0    0    1 0.11748837
1487    1   1    1    1 0.16174223
1509    0   0    0    0 0.22535983
1510    1   1    1    1 0.10413480
1625    0   1    1    1 0.10587613
1712    0   0    0    0 0.10372020
1714    0   0    1    1 0.12066723
1726    1   1    1    0 0.20515980
1898    0   0    0    1 0.17361863
1976    0   1    1    0 0.28558250
2052    1   1    0    0 0.09829330
2095    0   1    0    0 0.18586550
2125    0   0    1    1 0.18797903
2133    0   1    1    1 0.10701110
2799    0   0    0    0 0.53468910
2849    1   0    1    1 0.18976967
3041    2   1    0    1 0.13088627
3212    2   1    0    0 0.19199483
3326    0   1    0    1 0.11543030
3444    1   1    0    1 0.10591597
3718    0   0    1    0 0.24561437
3761    0   1    1    0 0.11688903
3763    1   1    1    1 0.15257050
3807    0   1    0    1 0.10973483
4097    0   0    1    0 0.30046733
4107    0   0    1    1 0.25534910
4187    1   1    1    0 0.09651111
4235    1   0    1    1 0.11056123
4277    2   0    0    0 0.12999063
4306    1   0    0    0 0.18886607
4374    0   0    1    1 0.11221683
4434    0   1    0    1 0.13594390

Heteroscedasticity Test p-value: 0.194241931545
Regression Step:                Df  Sum Sq Mean Sq F value  Pr(>F)   
T1_I             1 0.01959 0.01959   4.459 0.07919 . 
T1_J             1 0.00005 0.00005   0.011 0.92155   
T1_K             1 0.00065 0.00065   0.147 0.71442   
T2_I             1 0.03582 0.03582   8.152 0.02898 * 
T2_J             1 0.00808 0.00808   1.839 0.22388   
T2_K             1 0.00032 0.00032   0.072 0.79700   
ACOPY_x          1 0.00088 0.00088   0.201 0.66974   
ACOPY_y          1 0.00408 0.00408   0.928 0.37250   
U1_I             1 0.00074 0.00074   0.169 0.69545   
U_I              1 0.00015 0.00015   0.033 0.86136   
U_J              1 0.00158 0.00158   0.360 0.57028   
U_K              1 0.00881 0.00881   2.004 0.20661   
RT_I             1 0.00620 0.00620   1.411 0.27975   
RT_J             1 0.00538 0.00538   1.224 0.31092   
RT_K             1 0.00805 0.00805   1.833 0.22454   
SCR              1 0.02151 0.02151   4.896 0.06889 . 
VEC1             1 0.00826 0.00826   1.880 0.21943   
VEC2             1 0.01676 0.01676   3.814 0.09866 . 
I(1/(1 + T1_I))  1 0.00127 0.00127   0.288 0.61085   
I(1/(1 + T1_J))  1 0.01046 0.01046   2.381 0.17374   
I(1/(1 + T1_K))  1 0.00645 0.00645   1.468 0.27114   
I(1/(1 + T2_I))  1 0.00658 0.00658   1.497 0.26707   
I(1/(1 + T2_J))  1 0.00738 0.00738   1.679 0.24264   
I(1/(1 + T2_K))  1 0.00006 0.00006   0.014 0.90950   
I(1/(1 + U1_I))  1 0.00043 0.00043   0.097 0.76601   
I(1/(1 + U_I))   1 0.00318 0.00318   0.724 0.42746   
I(1/(1 + U_J))   1 0.01258 0.01258   2.864 0.14154   
I(1/(1 + U_K))   1 0.01015 0.01015   2.311 0.17929   
I(1/(1 + RT_I))  1 0.06082 0.06082  13.842 0.00985 **
I(1/(1 + RT_J))  1 0.00564 0.00564   1.283 0.30064   
I(1/(1 + RT_K))  1 0.00909 0.00909   2.069 0.20037   
Residuals        6 0.02636 0.00439                   
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Predicting Best
Generating valid search space of size 4600 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Valid coordinates: 920
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Valid coordinates: 1840
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Valid coordinates: 2760
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Tested coordinates: 150000
Valid coordinates: 3680
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Tested coordinates: 190000
Valid coordinates: 4600
Valid/Tested configurations: 4600/193139
Generated Search Space:
NULL
Identical predictions (tol = 1e-5): 1
Getting Best from Design
Response: ['cost_mean']
Design Names:  [1] "T1_I"      "T1_J"      "T1_K"      "T2_I"      "T2_J"      "T2_K"     
 [7] "ACOPY_x"   "ACOPY_y"   "U1_I"      "U_I"       "U_J"       "U_K"      
[13] "RT_I"      "RT_J"      "RT_K"      "SCR"       "VEC1"      "VEC2"     
[19] "cost_mean"

Design Response:       cost_mean
257  0.35127803
667  0.29219123
682  0.31669310
891  0.16659227
972  0.21388620
1009 0.22301093
1419 0.11748837
1487 0.16174223
1509 0.22535983
1510 0.10413480
1625 0.10587613
1712 0.10372020
1714 0.12066723
1726 0.20515980
1898 0.17361863
1976 0.28558250
2052 0.09829330
2095 0.18586550
2125 0.18797903
2133 0.10701110
2799 0.53468910
2849 0.18976967
3041 0.13088627
3212 0.19199483
3326 0.11543030
3444 0.10591597
3718 0.24561437
3761 0.11688903
3763 0.15257050
3807 0.10973483
4097 0.30046733
4107 0.25534910
4187 0.09651111
4235 0.11056123
4277 0.12999063
4306 0.18886607
4374 0.11221683
4434 0.13594390

Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Getting fixed variables
Pruning Model
Best Predicted:     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
940    0    6    6    3    4    0       0       0   26   0   1  24    1    0
    RT_K SCR VEC1 VEC2
940    1   0    0    1

Best From Design: [4, 6, 2, 5, 6, 6, 0, 0, 9, 1, 0, 1, 1, 0, 1, 1, 1, 0]
Pruned Factors: ['T1_J', 'T1_K', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'VEC1']
Fixed Factors: {'T2_I': 3, 'VEC2': 1, 'T1_I': 0, 'SCR': 0}
Length of requested configs: 1
Result was on Database, Returning Now
Starting Point (-O3):
0.16283083333333334
Predicted Best Point:
[0, 6, 6, 3, 4, 0, 0, 0, 26, 0, 1, 24, 1, 0, 1, 0, 0, 1]
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	4
        Additions: 		2182
        Multiplications: 	666
        Divisions: 		0
        Logical: 		0
        Reads: 			3555
        Writes: 		415
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest47.exe __orio_perftest47.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest47.exe  
Program Test Output: 
{'[0, 6, 6, 3, 4, 0, 0, 0, 26, 0, 1, 24, 1, 0, 1, 0, 0, 1]' : 0.128903}
{'[0, 6, 6, 3, 4, 0, 0, 0, 26, 0, 1, 24, 1, 0, 1, 0, 0, 1]' : 0.128608}
{'[0, 6, 6, 3, 4, 0, 0, 0, 26, 0, 1, 24, 1, 0, 1, 0, 0, 1]' : 0.12852}
{'[0, 6, 6, 3, 4, 0, 0, 0, 26, 0, 1, 24, 1, 0, 1, 0, 0, 1]' : 0.125925}
{'[0, 6, 6, 3, 4, 0, 0, 0, 26, 0, 1, 24, 1, 0, 1, 0, 0, 1]' : 0.117451}
{'[0, 6, 6, 3, 4, 0, 0, 0, 26, 0, 1, 24, 1, 0, 1, 0, 0, 1]' : 0.117525}
{'[0, 6, 6, 3, 4, 0, 0, 0, 26, 0, 1, 24, 1, 0, 1, 0, 0, 1]' : 0.1161}
{'[0, 6, 6, 3, 4, 0, 0, 0, 26, 0, 1, 24, 1, 0, 1, 0, 0, 1]' : 0.115}
{'[0, 6, 6, 3, 4, 0, 0, 0, 26, 0, 1, 24, 1, 0, 1, 0, 0, 1]' : 0.117494}
{'[0, 6, 6, 3, 4, 0, 0, 0, 26, 0, 1, 24, 1, 0, 1, 0, 0, 1]' : 0.117504}
{'[0, 6, 6, 3, 4, 0, 0, 0, 26, 0, 1, 24, 1, 0, 1, 0, 0, 1]' : 0.117273}
{'[0, 6, 6, 3, 4, 0, 0, 0, 26, 0, 1, 24, 1, 0, 1, 0, 0, 1]' : 0.117855}
{'[0, 6, 6, 3, 4, 0, 0, 0, 26, 0, 1, 24, 1, 0, 1, 0, 0, 1]' : 0.117592}
{'[0, 6, 6, 3, 4, 0, 0, 0, 26, 0, 1, 24, 1, 0, 1, 0, 0, 1]' : 0.117512}
{'[0, 6, 6, 3, 4, 0, 0, 0, 26, 0, 1, 24, 1, 0, 1, 0, 0, 1]' : 0.114879}
{'[0, 6, 6, 3, 4, 0, 0, 0, 26, 0, 1, 24, 1, 0, 1, 0, 0, 1]' : 0.114633}
{'[0, 6, 6, 3, 4, 0, 0, 0, 26, 0, 1, 24, 1, 0, 1, 0, 0, 1]' : 0.116018}
{'[0, 6, 6, 3, 4, 0, 0, 0, 26, 0, 1, 24, 1, 0, 1, 0, 0, 1]' : 0.117515}
{'[0, 6, 6, 3, 4, 0, 0, 0, 26, 0, 1, 24, 1, 0, 1, 0, 0, 1]' : 0.117278}
{'[0, 6, 6, 3, 4, 0, 0, 0, 26, 0, 1, 24, 1, 0, 1, 0, 0, 1]' : 0.117361}
{'[0, 6, 6, 3, 4, 0, 0, 0, 26, 0, 1, 24, 1, 0, 1, 0, 0, 1]' : 0.117552}
{'[0, 6, 6, 3, 4, 0, 0, 0, 26, 0, 1, 24, 1, 0, 1, 0, 0, 1]' : 0.117408}
{'[0, 6, 6, 3, 4, 0, 0, 0, 26, 0, 1, 24, 1, 0, 1, 0, 0, 1]' : 0.117302}
{'[0, 6, 6, 3, 4, 0, 0, 0, 26, 0, 1, 24, 1, 0, 1, 0, 0, 1]' : 0.117438}
{'[0, 6, 6, 3, 4, 0, 0, 0, 26, 0, 1, 24, 1, 0, 1, 0, 0, 1]' : 0.117421}
{'[0, 6, 6, 3, 4, 0, 0, 0, 26, 0, 1, 24, 1, 0, 1, 0, 0, 1]' : 0.117392}
{'[0, 6, 6, 3, 4, 0, 0, 0, 26, 0, 1, 24, 1, 0, 1, 0, 0, 1]' : 0.117261}
{'[0, 6, 6, 3, 4, 0, 0, 0, 26, 0, 1, 24, 1, 0, 1, 0, 0, 1]' : 0.117441}
{'[0, 6, 6, 3, 4, 0, 0, 0, 26, 0, 1, 24, 1, 0, 1, 0, 0, 1]' : 0.11761}
{'[0, 6, 6, 3, 4, 0, 0, 0, 26, 0, 1, 24, 1, 0, 1, 0, 0, 1]' : 0.11756}

out:
 ["{'[0, 6, 6, 3, 4, 0, 0, 0, 26, 0, 1, 24, 1, 0, 1, 0, 0, 1]' : 0.128903}", "{'[0, 6, 6, 3, 4, 0, 0, 0, 26, 0, 1, 24, 1, 0, 1, 0, 0, 1]' : 0.128608}", "{'[0, 6, 6, 3, 4, 0, 0, 0, 26, 0, 1, 24, 1, 0, 1, 0, 0, 1]' : 0.12852}", "{'[0, 6, 6, 3, 4, 0, 0, 0, 26, 0, 1, 24, 1, 0, 1, 0, 0, 1]' : 0.125925}", "{'[0, 6, 6, 3, 4, 0, 0, 0, 26, 0, 1, 24, 1, 0, 1, 0, 0, 1]' : 0.117451}", "{'[0, 6, 6, 3, 4, 0, 0, 0, 26, 0, 1, 24, 1, 0, 1, 0, 0, 1]' : 0.117525}", "{'[0, 6, 6, 3, 4, 0, 0, 0, 26, 0, 1, 24, 1, 0, 1, 0, 0, 1]' : 0.1161}", "{'[0, 6, 6, 3, 4, 0, 0, 0, 26, 0, 1, 24, 1, 0, 1, 0, 0, 1]' : 0.115}", "{'[0, 6, 6, 3, 4, 0, 0, 0, 26, 0, 1, 24, 1, 0, 1, 0, 0, 1]' : 0.117494}", "{'[0, 6, 6, 3, 4, 0, 0, 0, 26, 0, 1, 24, 1, 0, 1, 0, 0, 1]' : 0.117504}", "{'[0, 6, 6, 3, 4, 0, 0, 0, 26, 0, 1, 24, 1, 0, 1, 0, 0, 1]' : 0.117273}", "{'[0, 6, 6, 3, 4, 0, 0, 0, 26, 0, 1, 24, 1, 0, 1, 0, 0, 1]' : 0.117855}", "{'[0, 6, 6, 3, 4, 0, 0, 0, 26, 0, 1, 24, 1, 0, 1, 0, 0, 1]' : 0.117592}", "{'[0, 6, 6, 3, 4, 0, 0, 0, 26, 0, 1, 24, 1, 0, 1, 0, 0, 1]' : 0.117512}", "{'[0, 6, 6, 3, 4, 0, 0, 0, 26, 0, 1, 24, 1, 0, 1, 0, 0, 1]' : 0.114879}", "{'[0, 6, 6, 3, 4, 0, 0, 0, 26, 0, 1, 24, 1, 0, 1, 0, 0, 1]' : 0.114633}", "{'[0, 6, 6, 3, 4, 0, 0, 0, 26, 0, 1, 24, 1, 0, 1, 0, 0, 1]' : 0.116018}", "{'[0, 6, 6, 3, 4, 0, 0, 0, 26, 0, 1, 24, 1, 0, 1, 0, 0, 1]' : 0.117515}", "{'[0, 6, 6, 3, 4, 0, 0, 0, 26, 0, 1, 24, 1, 0, 1, 0, 0, 1]' : 0.117278}", "{'[0, 6, 6, 3, 4, 0, 0, 0, 26, 0, 1, 24, 1, 0, 1, 0, 0, 1]' : 0.117361}", "{'[0, 6, 6, 3, 4, 0, 0, 0, 26, 0, 1, 24, 1, 0, 1, 0, 0, 1]' : 0.117552}", "{'[0, 6, 6, 3, 4, 0, 0, 0, 26, 0, 1, 24, 1, 0, 1, 0, 0, 1]' : 0.117408}", "{'[0, 6, 6, 3, 4, 0, 0, 0, 26, 0, 1, 24, 1, 0, 1, 0, 0, 1]' : 0.117302}", "{'[0, 6, 6, 3, 4, 0, 0, 0, 26, 0, 1, 24, 1, 0, 1, 0, 0, 1]' : 0.117438}", "{'[0, 6, 6, 3, 4, 0, 0, 0, 26, 0, 1, 24, 1, 0, 1, 0, 0, 1]' : 0.117421}", "{'[0, 6, 6, 3, 4, 0, 0, 0, 26, 0, 1, 24, 1, 0, 1, 0, 0, 1]' : 0.117392}", "{'[0, 6, 6, 3, 4, 0, 0, 0, 26, 0, 1, 24, 1, 0, 1, 0, 0, 1]' : 0.117261}", "{'[0, 6, 6, 3, 4, 0, 0, 0, 26, 0, 1, 24, 1, 0, 1, 0, 0, 1]' : 0.117441}", "{'[0, 6, 6, 3, 4, 0, 0, 0, 26, 0, 1, 24, 1, 0, 1, 0, 0, 1]' : 0.11761}", "{'[0, 6, 6, 3, 4, 0, 0, 0, 26, 0, 1, 24, 1, 0, 1, 0, 0, 1]' : 0.11756}"]
returning from 'run': {'[0, 6, 6, 3, 4, 0, 0, 0, 26, 0, 1, 24, 1, 0, 1, 0, 0, 1]': ([0.128903, 0.128608, 0.12852, 0.125925, 0.117451, 0.117525, 0.1161, 0.115, 0.117494, 0.117504, 0.117273, 0.117855, 0.117592, 0.117512, 0.114879, 0.114633, 0.116018, 0.117515, 0.117278, 0.117361, 0.117552, 0.117408, 0.117302, 0.117438, 0.117421, 0.117392, 0.117261, 0.117441, 0.11761, 0.11756], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 6, 3, 4, 0, 0, 0, 26, 0, 1, 24, 1, 0, 1, 0, 0, 1]': ([0.128903, 0.128608, 0.12852, 0.125925, 0.117451, 0.117525, 0.1161, 0.115, 0.117494, 0.117504, 0.117273, 0.117855, 0.117592, 0.117512, 0.114879, 0.114633, 0.116018, 0.117515, 0.117278, 0.117361, 0.117552, 0.117408, 0.117302, 0.117438, 0.117421, 0.117392, 0.117261, 0.117441, 0.11761, 0.11756], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Design Best Point:
[4, 6, 2, 5, 6, 6, 0, 0, 9, 1, 0, 1, 1, 0, 1, 1, 1, 0]
Length of requested configs: 1
Result was on Database, Returning Now
Fixed Factors: {'T2_I': 3, 'VEC2': 1, 'T1_I': 0, 'SCR': 0}
Slowdown (Design Best): 0.592707851195259
Slowdown (Predicted Best): 0.7278169060937477
Budget: 38/180
Updating Global Best: 0.09651111333333336
Current Best Point: 
[4, 6, 2, 5, 6, 6, 0, 0, 9, 1, 0, 1, 1, 0, 1, 1, 1, 0]
Step 1
Generating valid search space of size 3700 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Valid coordinates: 740
Tested coordinates: 30000
Tested coordinates: 40000
Tested coordinates: 50000
Valid coordinates: 1480
Tested coordinates: 60000
Tested coordinates: 70000
Valid coordinates: 2220
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Valid coordinates: 2960
Tested coordinates: 110000
Tested coordinates: 120000
Tested coordinates: 130000
Valid coordinates: 3700
Valid/Tested configurations: 3700/132017
Generated Search Space:
NULL
Clean Info:
Removed Factors: character(0)

Removed Inverse Factors: [1] "ACOPY_x" "ACOPY_y" "VEC1"   

New Factors: ['T1_J', 'T1_K', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'VEC1']
New Inverse Factors: ['T1_J', 'T1_K', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
New Fixed Factors: {'T2_I': 3, 'VEC2': 1, 'T1_I': 0, 'SCR': 0}
Full Model:  ~ T1_J + T1_K + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + VEC1 + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Fixed Factors: {'T2_I': 3, 'VEC2': 1, 'T1_I': 0, 'SCR': 0}
Computing D-Optimal Design
Computing D-Optimal Design with 37 experiments
Design Formula:  ~ T1_J + T1_K + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + VEC1 + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Starting "optFederov" run
Using Search Space:
NULL
Data Dimensions: [1] 3700   14

     T1_J T1_K T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J RT_K VEC1
34      1    1    0    0       1       1   25  29   0   8    1    0    0    1
196     6    0    0    3       1       0    0  27   2   0    0    1    1    1
590     6    6    5    6       0       1    0  18   0   4    0    0    0    0
843     6    1    4    1       0       0   20  14   1   0    1    0    1    0
947     3    3    0    6       0       0   13   8   0  24    0    1    1    0
1334    0    0    6    6       0       1    9  27   0  29    1    0    1    1
1347    5    0    0    0       1       1    5   0   2   6    0    2    0    1
1437    1    0    6    6       1       0    7  25  17   0    0    0    2    0
1471    6    3    6    2       1       0    0   4  27   0    0    0    2    0
1530    2    4    1    3       1       0    2   0   0   0    0    0    1    0
1555    0    5    0    5       1       1   18  27   5   0    2    0    0    0
1609    0    0    5    0       0       0    0   0   0   6    0    0    0    0
1713    0    3    6    3       1       0   27   2   0   5    0    2    0    1
1980    5    0    6    5       0       0   29   0  27   1    2    0    0    1
2022    2    6    1    0       0       0    4   3  29   0    0    2    0    0
2046    6    5    6    0       1       1    9   0   0  28    1    1    0    1
2068    0    6    2    6       0       0   29   4   6   0    0    0    2    1
2146    5    2    0    5       0       0   29  29   0  27    0    2    0    0
2154    4    2    2    6       0       1    5   0  17   5    0    0    2    1
2203    0    2    3    2       1       0   26   0  28  28    0    0    0    0
2773    2    2    2    6       1       0   20  10   2   0    0    1    0    1
2811    1    0    0    2       0       0   24  26   0   0    0    0    2    1
2898    4    6    3    4       1       0    4  28   0   1    1    1    0    1
2923    0    1    1    0       0       0    0  29  25   0    1    1    0    1
2947    6    0    0    5       0       1   29   4  28   0    1    0    0    1
3022    1    4    3    2       0       1    0   0  29  29    2    0    0    1
3060    0    3    6    0       1       1   29  27  29   0    0    1    1    1
3251    3    0    1    2       1       1   29  11   0   5    0    1    1    0
3287    1    0    3    0       1       1   19   6   0  29    2    0    0    1
3340    2    6    0    6       0       0    0   0   4   4    1    0    1    1
3400    5    3    0    1       1       0    8   3   0  25    0    0    1    1
3472    2    6    5    0       0       0   29   0  13  25    1    1    0    0
3492    0    1    0    1       0       1    8   4   0   8    1    1    0    0
3499    0    1    2    6       1       1    3  11  27   0    1    0    1    0
3502    6    2    5    0       0       0    8  27   0   7    2    0    0    0
3545    1    1    6    2       0       1    6  25  14   0    0    0    0    1
3618    1    3    6    0       1       1    0   1   0   0    0    0    2    0

D-Efficiency Approximation: [1] 0.429

Measuring design of size 37
Current Design Names: ['T1_J', 'T1_K', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'VEC1']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Length of requested configs: 1
Code stats:
        Number of loops: 	175
        Max loop nest depth: 	4
        Additions: 		4441
        Multiplications: 	858
        Divisions: 		0
        Logical: 		0
        Reads: 			7252
        Writes: 		1036
        Comparisons:		175
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest48.exe __orio_perftest48.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest48.exe  
Program Test Output: 
{'[0, 1, 1, 3, 0, 0, 1, 1, 25, 29, 0, 8, 1, 0, 0, 0, 1, 1]' : 0.135049}
{'[0, 1, 1, 3, 0, 0, 1, 1, 25, 29, 0, 8, 1, 0, 0, 0, 1, 1]' : 0.135044}
{'[0, 1, 1, 3, 0, 0, 1, 1, 25, 29, 0, 8, 1, 0, 0, 0, 1, 1]' : 0.134932}
{'[0, 1, 1, 3, 0, 0, 1, 1, 25, 29, 0, 8, 1, 0, 0, 0, 1, 1]' : 0.131555}
{'[0, 1, 1, 3, 0, 0, 1, 1, 25, 29, 0, 8, 1, 0, 0, 0, 1, 1]' : 0.115286}
{'[0, 1, 1, 3, 0, 0, 1, 1, 25, 29, 0, 8, 1, 0, 0, 0, 1, 1]' : 0.115321}
{'[0, 1, 1, 3, 0, 0, 1, 1, 25, 29, 0, 8, 1, 0, 0, 0, 1, 1]' : 0.115283}
{'[0, 1, 1, 3, 0, 0, 1, 1, 25, 29, 0, 8, 1, 0, 0, 0, 1, 1]' : 0.115405}
{'[0, 1, 1, 3, 0, 0, 1, 1, 25, 29, 0, 8, 1, 0, 0, 0, 1, 1]' : 0.115261}
{'[0, 1, 1, 3, 0, 0, 1, 1, 25, 29, 0, 8, 1, 0, 0, 0, 1, 1]' : 0.115092}
{'[0, 1, 1, 3, 0, 0, 1, 1, 25, 29, 0, 8, 1, 0, 0, 0, 1, 1]' : 0.115098}
{'[0, 1, 1, 3, 0, 0, 1, 1, 25, 29, 0, 8, 1, 0, 0, 0, 1, 1]' : 0.115496}
{'[0, 1, 1, 3, 0, 0, 1, 1, 25, 29, 0, 8, 1, 0, 0, 0, 1, 1]' : 0.115132}
{'[0, 1, 1, 3, 0, 0, 1, 1, 25, 29, 0, 8, 1, 0, 0, 0, 1, 1]' : 0.115133}
{'[0, 1, 1, 3, 0, 0, 1, 1, 25, 29, 0, 8, 1, 0, 0, 0, 1, 1]' : 0.115055}
{'[0, 1, 1, 3, 0, 0, 1, 1, 25, 29, 0, 8, 1, 0, 0, 0, 1, 1]' : 0.115151}
{'[0, 1, 1, 3, 0, 0, 1, 1, 25, 29, 0, 8, 1, 0, 0, 0, 1, 1]' : 0.115288}
{'[0, 1, 1, 3, 0, 0, 1, 1, 25, 29, 0, 8, 1, 0, 0, 0, 1, 1]' : 0.115405}
{'[0, 1, 1, 3, 0, 0, 1, 1, 25, 29, 0, 8, 1, 0, 0, 0, 1, 1]' : 0.115126}
{'[0, 1, 1, 3, 0, 0, 1, 1, 25, 29, 0, 8, 1, 0, 0, 0, 1, 1]' : 0.115073}
{'[0, 1, 1, 3, 0, 0, 1, 1, 25, 29, 0, 8, 1, 0, 0, 0, 1, 1]' : 0.115279}
{'[0, 1, 1, 3, 0, 0, 1, 1, 25, 29, 0, 8, 1, 0, 0, 0, 1, 1]' : 0.115079}
{'[0, 1, 1, 3, 0, 0, 1, 1, 25, 29, 0, 8, 1, 0, 0, 0, 1, 1]' : 0.11496}
{'[0, 1, 1, 3, 0, 0, 1, 1, 25, 29, 0, 8, 1, 0, 0, 0, 1, 1]' : 0.115689}
{'[0, 1, 1, 3, 0, 0, 1, 1, 25, 29, 0, 8, 1, 0, 0, 0, 1, 1]' : 0.115258}
{'[0, 1, 1, 3, 0, 0, 1, 1, 25, 29, 0, 8, 1, 0, 0, 0, 1, 1]' : 0.115123}
{'[0, 1, 1, 3, 0, 0, 1, 1, 25, 29, 0, 8, 1, 0, 0, 0, 1, 1]' : 0.115273}
{'[0, 1, 1, 3, 0, 0, 1, 1, 25, 29, 0, 8, 1, 0, 0, 0, 1, 1]' : 0.115905}
{'[0, 1, 1, 3, 0, 0, 1, 1, 25, 29, 0, 8, 1, 0, 0, 0, 1, 1]' : 0.115269}
{'[0, 1, 1, 3, 0, 0, 1, 1, 25, 29, 0, 8, 1, 0, 0, 0, 1, 1]' : 0.11515}

out:
 ["{'[0, 1, 1, 3, 0, 0, 1, 1, 25, 29, 0, 8, 1, 0, 0, 0, 1, 1]' : 0.135049}", "{'[0, 1, 1, 3, 0, 0, 1, 1, 25, 29, 0, 8, 1, 0, 0, 0, 1, 1]' : 0.135044}", "{'[0, 1, 1, 3, 0, 0, 1, 1, 25, 29, 0, 8, 1, 0, 0, 0, 1, 1]' : 0.134932}", "{'[0, 1, 1, 3, 0, 0, 1, 1, 25, 29, 0, 8, 1, 0, 0, 0, 1, 1]' : 0.131555}", "{'[0, 1, 1, 3, 0, 0, 1, 1, 25, 29, 0, 8, 1, 0, 0, 0, 1, 1]' : 0.115286}", "{'[0, 1, 1, 3, 0, 0, 1, 1, 25, 29, 0, 8, 1, 0, 0, 0, 1, 1]' : 0.115321}", "{'[0, 1, 1, 3, 0, 0, 1, 1, 25, 29, 0, 8, 1, 0, 0, 0, 1, 1]' : 0.115283}", "{'[0, 1, 1, 3, 0, 0, 1, 1, 25, 29, 0, 8, 1, 0, 0, 0, 1, 1]' : 0.115405}", "{'[0, 1, 1, 3, 0, 0, 1, 1, 25, 29, 0, 8, 1, 0, 0, 0, 1, 1]' : 0.115261}", "{'[0, 1, 1, 3, 0, 0, 1, 1, 25, 29, 0, 8, 1, 0, 0, 0, 1, 1]' : 0.115092}", "{'[0, 1, 1, 3, 0, 0, 1, 1, 25, 29, 0, 8, 1, 0, 0, 0, 1, 1]' : 0.115098}", "{'[0, 1, 1, 3, 0, 0, 1, 1, 25, 29, 0, 8, 1, 0, 0, 0, 1, 1]' : 0.115496}", "{'[0, 1, 1, 3, 0, 0, 1, 1, 25, 29, 0, 8, 1, 0, 0, 0, 1, 1]' : 0.115132}", "{'[0, 1, 1, 3, 0, 0, 1, 1, 25, 29, 0, 8, 1, 0, 0, 0, 1, 1]' : 0.115133}", "{'[0, 1, 1, 3, 0, 0, 1, 1, 25, 29, 0, 8, 1, 0, 0, 0, 1, 1]' : 0.115055}", "{'[0, 1, 1, 3, 0, 0, 1, 1, 25, 29, 0, 8, 1, 0, 0, 0, 1, 1]' : 0.115151}", "{'[0, 1, 1, 3, 0, 0, 1, 1, 25, 29, 0, 8, 1, 0, 0, 0, 1, 1]' : 0.115288}", "{'[0, 1, 1, 3, 0, 0, 1, 1, 25, 29, 0, 8, 1, 0, 0, 0, 1, 1]' : 0.115405}", "{'[0, 1, 1, 3, 0, 0, 1, 1, 25, 29, 0, 8, 1, 0, 0, 0, 1, 1]' : 0.115126}", "{'[0, 1, 1, 3, 0, 0, 1, 1, 25, 29, 0, 8, 1, 0, 0, 0, 1, 1]' : 0.115073}", "{'[0, 1, 1, 3, 0, 0, 1, 1, 25, 29, 0, 8, 1, 0, 0, 0, 1, 1]' : 0.115279}", "{'[0, 1, 1, 3, 0, 0, 1, 1, 25, 29, 0, 8, 1, 0, 0, 0, 1, 1]' : 0.115079}", "{'[0, 1, 1, 3, 0, 0, 1, 1, 25, 29, 0, 8, 1, 0, 0, 0, 1, 1]' : 0.11496}", "{'[0, 1, 1, 3, 0, 0, 1, 1, 25, 29, 0, 8, 1, 0, 0, 0, 1, 1]' : 0.115689}", "{'[0, 1, 1, 3, 0, 0, 1, 1, 25, 29, 0, 8, 1, 0, 0, 0, 1, 1]' : 0.115258}", "{'[0, 1, 1, 3, 0, 0, 1, 1, 25, 29, 0, 8, 1, 0, 0, 0, 1, 1]' : 0.115123}", "{'[0, 1, 1, 3, 0, 0, 1, 1, 25, 29, 0, 8, 1, 0, 0, 0, 1, 1]' : 0.115273}", "{'[0, 1, 1, 3, 0, 0, 1, 1, 25, 29, 0, 8, 1, 0, 0, 0, 1, 1]' : 0.115905}", "{'[0, 1, 1, 3, 0, 0, 1, 1, 25, 29, 0, 8, 1, 0, 0, 0, 1, 1]' : 0.115269}", "{'[0, 1, 1, 3, 0, 0, 1, 1, 25, 29, 0, 8, 1, 0, 0, 0, 1, 1]' : 0.11515}"]
returning from 'run': {'[0, 1, 1, 3, 0, 0, 1, 1, 25, 29, 0, 8, 1, 0, 0, 0, 1, 1]': ([0.135049, 0.135044, 0.134932, 0.131555, 0.115286, 0.115321, 0.115283, 0.115405, 0.115261, 0.115092, 0.115098, 0.115496, 0.115132, 0.115133, 0.115055, 0.115151, 0.115288, 0.115405, 0.115126, 0.115073, 0.115279, 0.115079, 0.11496, 0.115689, 0.115258, 0.115123, 0.115273, 0.115905, 0.115269, 0.11515], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 1, 3, 0, 0, 1, 1, 25, 29, 0, 8, 1, 0, 0, 0, 1, 1]': ([0.135049, 0.135044, 0.134932, 0.131555, 0.115286, 0.115321, 0.115283, 0.115405, 0.115261, 0.115092, 0.115098, 0.115496, 0.115132, 0.115133, 0.115055, 0.115151, 0.115288, 0.115405, 0.115126, 0.115073, 0.115279, 0.115079, 0.11496, 0.115689, 0.115258, 0.115123, 0.115273, 0.115905, 0.115269, 0.11515], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	43
        Max loop nest depth: 	4
        Additions: 		3560
        Multiplications: 	986
        Divisions: 		0
        Logical: 		0
        Reads: 			5674
        Writes: 		645
        Comparisons:		43
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest49.exe __orio_perftest49.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest49.exe  
Program Test Output: 
{'[0, 6, 0, 3, 0, 3, 1, 0, 0, 27, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.157963}
{'[0, 6, 0, 3, 0, 3, 1, 0, 0, 27, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.158961}
{'[0, 6, 0, 3, 0, 3, 1, 0, 0, 27, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.15832}
{'[0, 6, 0, 3, 0, 3, 1, 0, 0, 27, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.158232}
{'[0, 6, 0, 3, 0, 3, 1, 0, 0, 27, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.159076}
{'[0, 6, 0, 3, 0, 3, 1, 0, 0, 27, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.15886}
{'[0, 6, 0, 3, 0, 3, 1, 0, 0, 27, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.158481}
{'[0, 6, 0, 3, 0, 3, 1, 0, 0, 27, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.158834}
{'[0, 6, 0, 3, 0, 3, 1, 0, 0, 27, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.158965}
{'[0, 6, 0, 3, 0, 3, 1, 0, 0, 27, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.159061}
{'[0, 6, 0, 3, 0, 3, 1, 0, 0, 27, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.158143}
{'[0, 6, 0, 3, 0, 3, 1, 0, 0, 27, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.158765}
{'[0, 6, 0, 3, 0, 3, 1, 0, 0, 27, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.158654}
{'[0, 6, 0, 3, 0, 3, 1, 0, 0, 27, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.158054}
{'[0, 6, 0, 3, 0, 3, 1, 0, 0, 27, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.158672}
{'[0, 6, 0, 3, 0, 3, 1, 0, 0, 27, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.158205}
{'[0, 6, 0, 3, 0, 3, 1, 0, 0, 27, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.158325}
{'[0, 6, 0, 3, 0, 3, 1, 0, 0, 27, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.158188}
{'[0, 6, 0, 3, 0, 3, 1, 0, 0, 27, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.158372}
{'[0, 6, 0, 3, 0, 3, 1, 0, 0, 27, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.15865}
{'[0, 6, 0, 3, 0, 3, 1, 0, 0, 27, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.158456}
{'[0, 6, 0, 3, 0, 3, 1, 0, 0, 27, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.158539}
{'[0, 6, 0, 3, 0, 3, 1, 0, 0, 27, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.158305}
{'[0, 6, 0, 3, 0, 3, 1, 0, 0, 27, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.15829}
{'[0, 6, 0, 3, 0, 3, 1, 0, 0, 27, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.158339}
{'[0, 6, 0, 3, 0, 3, 1, 0, 0, 27, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.159007}
{'[0, 6, 0, 3, 0, 3, 1, 0, 0, 27, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.159163}
{'[0, 6, 0, 3, 0, 3, 1, 0, 0, 27, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.158973}
{'[0, 6, 0, 3, 0, 3, 1, 0, 0, 27, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.158533}
{'[0, 6, 0, 3, 0, 3, 1, 0, 0, 27, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.158244}

out:
 ["{'[0, 6, 0, 3, 0, 3, 1, 0, 0, 27, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.157963}", "{'[0, 6, 0, 3, 0, 3, 1, 0, 0, 27, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.158961}", "{'[0, 6, 0, 3, 0, 3, 1, 0, 0, 27, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.15832}", "{'[0, 6, 0, 3, 0, 3, 1, 0, 0, 27, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.158232}", "{'[0, 6, 0, 3, 0, 3, 1, 0, 0, 27, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.159076}", "{'[0, 6, 0, 3, 0, 3, 1, 0, 0, 27, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.15886}", "{'[0, 6, 0, 3, 0, 3, 1, 0, 0, 27, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.158481}", "{'[0, 6, 0, 3, 0, 3, 1, 0, 0, 27, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.158834}", "{'[0, 6, 0, 3, 0, 3, 1, 0, 0, 27, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.158965}", "{'[0, 6, 0, 3, 0, 3, 1, 0, 0, 27, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.159061}", "{'[0, 6, 0, 3, 0, 3, 1, 0, 0, 27, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.158143}", "{'[0, 6, 0, 3, 0, 3, 1, 0, 0, 27, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.158765}", "{'[0, 6, 0, 3, 0, 3, 1, 0, 0, 27, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.158654}", "{'[0, 6, 0, 3, 0, 3, 1, 0, 0, 27, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.158054}", "{'[0, 6, 0, 3, 0, 3, 1, 0, 0, 27, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.158672}", "{'[0, 6, 0, 3, 0, 3, 1, 0, 0, 27, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.158205}", "{'[0, 6, 0, 3, 0, 3, 1, 0, 0, 27, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.158325}", "{'[0, 6, 0, 3, 0, 3, 1, 0, 0, 27, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.158188}", "{'[0, 6, 0, 3, 0, 3, 1, 0, 0, 27, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.158372}", "{'[0, 6, 0, 3, 0, 3, 1, 0, 0, 27, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.15865}", "{'[0, 6, 0, 3, 0, 3, 1, 0, 0, 27, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.158456}", "{'[0, 6, 0, 3, 0, 3, 1, 0, 0, 27, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.158539}", "{'[0, 6, 0, 3, 0, 3, 1, 0, 0, 27, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.158305}", "{'[0, 6, 0, 3, 0, 3, 1, 0, 0, 27, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.15829}", "{'[0, 6, 0, 3, 0, 3, 1, 0, 0, 27, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.158339}", "{'[0, 6, 0, 3, 0, 3, 1, 0, 0, 27, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.159007}", "{'[0, 6, 0, 3, 0, 3, 1, 0, 0, 27, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.159163}", "{'[0, 6, 0, 3, 0, 3, 1, 0, 0, 27, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.158973}", "{'[0, 6, 0, 3, 0, 3, 1, 0, 0, 27, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.158533}", "{'[0, 6, 0, 3, 0, 3, 1, 0, 0, 27, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.158244}"]
returning from 'run': {'[0, 6, 0, 3, 0, 3, 1, 0, 0, 27, 2, 0, 0, 1, 1, 0, 1, 1]': ([0.157963, 0.158961, 0.15832, 0.158232, 0.159076, 0.15886, 0.158481, 0.158834, 0.158965, 0.159061, 0.158143, 0.158765, 0.158654, 0.158054, 0.158672, 0.158205, 0.158325, 0.158188, 0.158372, 0.15865, 0.158456, 0.158539, 0.158305, 0.15829, 0.158339, 0.159007, 0.159163, 0.158973, 0.158533, 0.158244], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 0, 3, 0, 3, 1, 0, 0, 27, 2, 0, 0, 1, 1, 0, 1, 1]': ([0.157963, 0.158961, 0.15832, 0.158232, 0.159076, 0.15886, 0.158481, 0.158834, 0.158965, 0.159061, 0.158143, 0.158765, 0.158654, 0.158054, 0.158672, 0.158205, 0.158325, 0.158188, 0.158372, 0.15865, 0.158456, 0.158539, 0.158305, 0.15829, 0.158339, 0.159007, 0.159163, 0.158973, 0.158533, 0.158244], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	94
        Max loop nest depth: 	5
        Additions: 		1574
        Multiplications: 	280
        Divisions: 		0
        Logical: 		0
        Reads: 			2736
        Writes: 		451
        Comparisons:		94
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest50.exe __orio_perftest50.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest50.exe  
Program Test Output: 
{'[0, 6, 6, 3, 5, 6, 0, 1, 0, 18, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.165029}
{'[0, 6, 6, 3, 5, 6, 0, 1, 0, 18, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.164958}
{'[0, 6, 6, 3, 5, 6, 0, 1, 0, 18, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.164957}
{'[0, 6, 6, 3, 5, 6, 0, 1, 0, 18, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.154929}
{'[0, 6, 6, 3, 5, 6, 0, 1, 0, 18, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.142197}
{'[0, 6, 6, 3, 5, 6, 0, 1, 0, 18, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.142223}
{'[0, 6, 6, 3, 5, 6, 0, 1, 0, 18, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.142112}
{'[0, 6, 6, 3, 5, 6, 0, 1, 0, 18, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.142247}
{'[0, 6, 6, 3, 5, 6, 0, 1, 0, 18, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.14211}
{'[0, 6, 6, 3, 5, 6, 0, 1, 0, 18, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.141976}
{'[0, 6, 6, 3, 5, 6, 0, 1, 0, 18, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.141975}
{'[0, 6, 6, 3, 5, 6, 0, 1, 0, 18, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.14238}
{'[0, 6, 6, 3, 5, 6, 0, 1, 0, 18, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.142238}
{'[0, 6, 6, 3, 5, 6, 0, 1, 0, 18, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.14217}
{'[0, 6, 6, 3, 5, 6, 0, 1, 0, 18, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.141986}
{'[0, 6, 6, 3, 5, 6, 0, 1, 0, 18, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.142231}
{'[0, 6, 6, 3, 5, 6, 0, 1, 0, 18, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.14227}
{'[0, 6, 6, 3, 5, 6, 0, 1, 0, 18, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.142213}
{'[0, 6, 6, 3, 5, 6, 0, 1, 0, 18, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.142219}
{'[0, 6, 6, 3, 5, 6, 0, 1, 0, 18, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.142018}
{'[0, 6, 6, 3, 5, 6, 0, 1, 0, 18, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.142107}
{'[0, 6, 6, 3, 5, 6, 0, 1, 0, 18, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.142177}
{'[0, 6, 6, 3, 5, 6, 0, 1, 0, 18, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.14206}
{'[0, 6, 6, 3, 5, 6, 0, 1, 0, 18, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.141981}
{'[0, 6, 6, 3, 5, 6, 0, 1, 0, 18, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.142241}
{'[0, 6, 6, 3, 5, 6, 0, 1, 0, 18, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.14217}
{'[0, 6, 6, 3, 5, 6, 0, 1, 0, 18, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.142228}
{'[0, 6, 6, 3, 5, 6, 0, 1, 0, 18, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.14246}
{'[0, 6, 6, 3, 5, 6, 0, 1, 0, 18, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.142497}
{'[0, 6, 6, 3, 5, 6, 0, 1, 0, 18, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.142269}

out:
 ["{'[0, 6, 6, 3, 5, 6, 0, 1, 0, 18, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.165029}", "{'[0, 6, 6, 3, 5, 6, 0, 1, 0, 18, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.164958}", "{'[0, 6, 6, 3, 5, 6, 0, 1, 0, 18, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.164957}", "{'[0, 6, 6, 3, 5, 6, 0, 1, 0, 18, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.154929}", "{'[0, 6, 6, 3, 5, 6, 0, 1, 0, 18, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.142197}", "{'[0, 6, 6, 3, 5, 6, 0, 1, 0, 18, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.142223}", "{'[0, 6, 6, 3, 5, 6, 0, 1, 0, 18, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.142112}", "{'[0, 6, 6, 3, 5, 6, 0, 1, 0, 18, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.142247}", "{'[0, 6, 6, 3, 5, 6, 0, 1, 0, 18, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.14211}", "{'[0, 6, 6, 3, 5, 6, 0, 1, 0, 18, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.141976}", "{'[0, 6, 6, 3, 5, 6, 0, 1, 0, 18, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.141975}", "{'[0, 6, 6, 3, 5, 6, 0, 1, 0, 18, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.14238}", "{'[0, 6, 6, 3, 5, 6, 0, 1, 0, 18, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.142238}", "{'[0, 6, 6, 3, 5, 6, 0, 1, 0, 18, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.14217}", "{'[0, 6, 6, 3, 5, 6, 0, 1, 0, 18, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.141986}", "{'[0, 6, 6, 3, 5, 6, 0, 1, 0, 18, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.142231}", "{'[0, 6, 6, 3, 5, 6, 0, 1, 0, 18, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.14227}", "{'[0, 6, 6, 3, 5, 6, 0, 1, 0, 18, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.142213}", "{'[0, 6, 6, 3, 5, 6, 0, 1, 0, 18, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.142219}", "{'[0, 6, 6, 3, 5, 6, 0, 1, 0, 18, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.142018}", "{'[0, 6, 6, 3, 5, 6, 0, 1, 0, 18, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.142107}", "{'[0, 6, 6, 3, 5, 6, 0, 1, 0, 18, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.142177}", "{'[0, 6, 6, 3, 5, 6, 0, 1, 0, 18, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.14206}", "{'[0, 6, 6, 3, 5, 6, 0, 1, 0, 18, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.141981}", "{'[0, 6, 6, 3, 5, 6, 0, 1, 0, 18, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.142241}", "{'[0, 6, 6, 3, 5, 6, 0, 1, 0, 18, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.14217}", "{'[0, 6, 6, 3, 5, 6, 0, 1, 0, 18, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.142228}", "{'[0, 6, 6, 3, 5, 6, 0, 1, 0, 18, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.14246}", "{'[0, 6, 6, 3, 5, 6, 0, 1, 0, 18, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.142497}", "{'[0, 6, 6, 3, 5, 6, 0, 1, 0, 18, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.142269}"]
returning from 'run': {'[0, 6, 6, 3, 5, 6, 0, 1, 0, 18, 0, 4, 0, 0, 0, 0, 0, 1]': ([0.165029, 0.164958, 0.164957, 0.154929, 0.142197, 0.142223, 0.142112, 0.142247, 0.14211, 0.141976, 0.141975, 0.14238, 0.142238, 0.14217, 0.141986, 0.142231, 0.14227, 0.142213, 0.142219, 0.142018, 0.142107, 0.142177, 0.14206, 0.141981, 0.142241, 0.14217, 0.142228, 0.14246, 0.142497, 0.142269], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 6, 3, 5, 6, 0, 1, 0, 18, 0, 4, 0, 0, 0, 0, 0, 1]': ([0.165029, 0.164958, 0.164957, 0.154929, 0.142197, 0.142223, 0.142112, 0.142247, 0.14211, 0.141976, 0.141975, 0.14238, 0.142238, 0.14217, 0.141986, 0.142231, 0.14227, 0.142213, 0.142219, 0.142018, 0.142107, 0.142177, 0.14206, 0.141981, 0.142241, 0.14217, 0.142228, 0.14246, 0.142497, 0.142269], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	27
        Max loop nest depth: 	5
        Additions: 		1848
        Multiplications: 	576
        Divisions: 		0
        Logical: 		0
        Reads: 			3177
        Writes: 		396
        Comparisons:		27
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest51.exe __orio_perftest51.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest51.exe  
Program Test Output: 
{'[0, 6, 1, 3, 4, 1, 0, 0, 20, 14, 1, 0, 1, 0, 1, 0, 0, 1]' : 0.114471}
{'[0, 6, 1, 3, 4, 1, 0, 0, 20, 14, 1, 0, 1, 0, 1, 0, 0, 1]' : 0.114252}
{'[0, 6, 1, 3, 4, 1, 0, 0, 20, 14, 1, 0, 1, 0, 1, 0, 0, 1]' : 0.113911}
{'[0, 6, 1, 3, 4, 1, 0, 0, 20, 14, 1, 0, 1, 0, 1, 0, 0, 1]' : 0.114106}
{'[0, 6, 1, 3, 4, 1, 0, 0, 20, 14, 1, 0, 1, 0, 1, 0, 0, 1]' : 0.114017}
{'[0, 6, 1, 3, 4, 1, 0, 0, 20, 14, 1, 0, 1, 0, 1, 0, 0, 1]' : 0.114143}
{'[0, 6, 1, 3, 4, 1, 0, 0, 20, 14, 1, 0, 1, 0, 1, 0, 0, 1]' : 0.114186}
{'[0, 6, 1, 3, 4, 1, 0, 0, 20, 14, 1, 0, 1, 0, 1, 0, 0, 1]' : 0.11422}
{'[0, 6, 1, 3, 4, 1, 0, 0, 20, 14, 1, 0, 1, 0, 1, 0, 0, 1]' : 0.113989}
{'[0, 6, 1, 3, 4, 1, 0, 0, 20, 14, 1, 0, 1, 0, 1, 0, 0, 1]' : 0.114318}
{'[0, 6, 1, 3, 4, 1, 0, 0, 20, 14, 1, 0, 1, 0, 1, 0, 0, 1]' : 0.114621}
{'[0, 6, 1, 3, 4, 1, 0, 0, 20, 14, 1, 0, 1, 0, 1, 0, 0, 1]' : 0.114067}
{'[0, 6, 1, 3, 4, 1, 0, 0, 20, 14, 1, 0, 1, 0, 1, 0, 0, 1]' : 0.114016}
{'[0, 6, 1, 3, 4, 1, 0, 0, 20, 14, 1, 0, 1, 0, 1, 0, 0, 1]' : 0.114159}
{'[0, 6, 1, 3, 4, 1, 0, 0, 20, 14, 1, 0, 1, 0, 1, 0, 0, 1]' : 0.113965}
{'[0, 6, 1, 3, 4, 1, 0, 0, 20, 14, 1, 0, 1, 0, 1, 0, 0, 1]' : 0.113324}
{'[0, 6, 1, 3, 4, 1, 0, 0, 20, 14, 1, 0, 1, 0, 1, 0, 0, 1]' : 0.113096}
{'[0, 6, 1, 3, 4, 1, 0, 0, 20, 14, 1, 0, 1, 0, 1, 0, 0, 1]' : 0.112983}
{'[0, 6, 1, 3, 4, 1, 0, 0, 20, 14, 1, 0, 1, 0, 1, 0, 0, 1]' : 0.112807}
{'[0, 6, 1, 3, 4, 1, 0, 0, 20, 14, 1, 0, 1, 0, 1, 0, 0, 1]' : 0.113087}
{'[0, 6, 1, 3, 4, 1, 0, 0, 20, 14, 1, 0, 1, 0, 1, 0, 0, 1]' : 0.113298}
{'[0, 6, 1, 3, 4, 1, 0, 0, 20, 14, 1, 0, 1, 0, 1, 0, 0, 1]' : 0.112975}
{'[0, 6, 1, 3, 4, 1, 0, 0, 20, 14, 1, 0, 1, 0, 1, 0, 0, 1]' : 0.113283}
{'[0, 6, 1, 3, 4, 1, 0, 0, 20, 14, 1, 0, 1, 0, 1, 0, 0, 1]' : 0.113208}
{'[0, 6, 1, 3, 4, 1, 0, 0, 20, 14, 1, 0, 1, 0, 1, 0, 0, 1]' : 0.113204}
{'[0, 6, 1, 3, 4, 1, 0, 0, 20, 14, 1, 0, 1, 0, 1, 0, 0, 1]' : 0.113066}
{'[0, 6, 1, 3, 4, 1, 0, 0, 20, 14, 1, 0, 1, 0, 1, 0, 0, 1]' : 0.112872}
{'[0, 6, 1, 3, 4, 1, 0, 0, 20, 14, 1, 0, 1, 0, 1, 0, 0, 1]' : 0.112858}
{'[0, 6, 1, 3, 4, 1, 0, 0, 20, 14, 1, 0, 1, 0, 1, 0, 0, 1]' : 0.113403}
{'[0, 6, 1, 3, 4, 1, 0, 0, 20, 14, 1, 0, 1, 0, 1, 0, 0, 1]' : 0.113378}

out:
 ["{'[0, 6, 1, 3, 4, 1, 0, 0, 20, 14, 1, 0, 1, 0, 1, 0, 0, 1]' : 0.114471}", "{'[0, 6, 1, 3, 4, 1, 0, 0, 20, 14, 1, 0, 1, 0, 1, 0, 0, 1]' : 0.114252}", "{'[0, 6, 1, 3, 4, 1, 0, 0, 20, 14, 1, 0, 1, 0, 1, 0, 0, 1]' : 0.113911}", "{'[0, 6, 1, 3, 4, 1, 0, 0, 20, 14, 1, 0, 1, 0, 1, 0, 0, 1]' : 0.114106}", "{'[0, 6, 1, 3, 4, 1, 0, 0, 20, 14, 1, 0, 1, 0, 1, 0, 0, 1]' : 0.114017}", "{'[0, 6, 1, 3, 4, 1, 0, 0, 20, 14, 1, 0, 1, 0, 1, 0, 0, 1]' : 0.114143}", "{'[0, 6, 1, 3, 4, 1, 0, 0, 20, 14, 1, 0, 1, 0, 1, 0, 0, 1]' : 0.114186}", "{'[0, 6, 1, 3, 4, 1, 0, 0, 20, 14, 1, 0, 1, 0, 1, 0, 0, 1]' : 0.11422}", "{'[0, 6, 1, 3, 4, 1, 0, 0, 20, 14, 1, 0, 1, 0, 1, 0, 0, 1]' : 0.113989}", "{'[0, 6, 1, 3, 4, 1, 0, 0, 20, 14, 1, 0, 1, 0, 1, 0, 0, 1]' : 0.114318}", "{'[0, 6, 1, 3, 4, 1, 0, 0, 20, 14, 1, 0, 1, 0, 1, 0, 0, 1]' : 0.114621}", "{'[0, 6, 1, 3, 4, 1, 0, 0, 20, 14, 1, 0, 1, 0, 1, 0, 0, 1]' : 0.114067}", "{'[0, 6, 1, 3, 4, 1, 0, 0, 20, 14, 1, 0, 1, 0, 1, 0, 0, 1]' : 0.114016}", "{'[0, 6, 1, 3, 4, 1, 0, 0, 20, 14, 1, 0, 1, 0, 1, 0, 0, 1]' : 0.114159}", "{'[0, 6, 1, 3, 4, 1, 0, 0, 20, 14, 1, 0, 1, 0, 1, 0, 0, 1]' : 0.113965}", "{'[0, 6, 1, 3, 4, 1, 0, 0, 20, 14, 1, 0, 1, 0, 1, 0, 0, 1]' : 0.113324}", "{'[0, 6, 1, 3, 4, 1, 0, 0, 20, 14, 1, 0, 1, 0, 1, 0, 0, 1]' : 0.113096}", "{'[0, 6, 1, 3, 4, 1, 0, 0, 20, 14, 1, 0, 1, 0, 1, 0, 0, 1]' : 0.112983}", "{'[0, 6, 1, 3, 4, 1, 0, 0, 20, 14, 1, 0, 1, 0, 1, 0, 0, 1]' : 0.112807}", "{'[0, 6, 1, 3, 4, 1, 0, 0, 20, 14, 1, 0, 1, 0, 1, 0, 0, 1]' : 0.113087}", "{'[0, 6, 1, 3, 4, 1, 0, 0, 20, 14, 1, 0, 1, 0, 1, 0, 0, 1]' : 0.113298}", "{'[0, 6, 1, 3, 4, 1, 0, 0, 20, 14, 1, 0, 1, 0, 1, 0, 0, 1]' : 0.112975}", "{'[0, 6, 1, 3, 4, 1, 0, 0, 20, 14, 1, 0, 1, 0, 1, 0, 0, 1]' : 0.113283}", "{'[0, 6, 1, 3, 4, 1, 0, 0, 20, 14, 1, 0, 1, 0, 1, 0, 0, 1]' : 0.113208}", "{'[0, 6, 1, 3, 4, 1, 0, 0, 20, 14, 1, 0, 1, 0, 1, 0, 0, 1]' : 0.113204}", "{'[0, 6, 1, 3, 4, 1, 0, 0, 20, 14, 1, 0, 1, 0, 1, 0, 0, 1]' : 0.113066}", "{'[0, 6, 1, 3, 4, 1, 0, 0, 20, 14, 1, 0, 1, 0, 1, 0, 0, 1]' : 0.112872}", "{'[0, 6, 1, 3, 4, 1, 0, 0, 20, 14, 1, 0, 1, 0, 1, 0, 0, 1]' : 0.112858}", "{'[0, 6, 1, 3, 4, 1, 0, 0, 20, 14, 1, 0, 1, 0, 1, 0, 0, 1]' : 0.113403}", "{'[0, 6, 1, 3, 4, 1, 0, 0, 20, 14, 1, 0, 1, 0, 1, 0, 0, 1]' : 0.113378}"]
returning from 'run': {'[0, 6, 1, 3, 4, 1, 0, 0, 20, 14, 1, 0, 1, 0, 1, 0, 0, 1]': ([0.114471, 0.114252, 0.113911, 0.114106, 0.114017, 0.114143, 0.114186, 0.11422, 0.113989, 0.114318, 0.114621, 0.114067, 0.114016, 0.114159, 0.113965, 0.113324, 0.113096, 0.112983, 0.112807, 0.113087, 0.113298, 0.112975, 0.113283, 0.113208, 0.113204, 0.113066, 0.112872, 0.112858, 0.113403, 0.113378], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 1, 3, 4, 1, 0, 0, 20, 14, 1, 0, 1, 0, 1, 0, 0, 1]': ([0.114471, 0.114252, 0.113911, 0.114106, 0.114017, 0.114143, 0.114186, 0.11422, 0.113989, 0.114318, 0.114621, 0.114067, 0.114016, 0.114159, 0.113965, 0.113324, 0.113096, 0.112983, 0.112807, 0.113087, 0.113298, 0.112975, 0.113283, 0.113208, 0.113204, 0.113066, 0.112872, 0.112858, 0.113403, 0.113378], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	37
        Max loop nest depth: 	5
        Additions: 		2932
        Multiplications: 	860
        Divisions: 		0
        Logical: 		0
        Reads: 			4713
        Writes: 		565
        Comparisons:		37
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest52.exe __orio_perftest52.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest52.exe  
Program Test Output: 
{'[0, 3, 3, 3, 0, 6, 0, 0, 13, 8, 0, 24, 0, 1, 1, 0, 0, 1]' : 0.108183}
{'[0, 3, 3, 3, 0, 6, 0, 0, 13, 8, 0, 24, 0, 1, 1, 0, 0, 1]' : 0.108087}
{'[0, 3, 3, 3, 0, 6, 0, 0, 13, 8, 0, 24, 0, 1, 1, 0, 0, 1]' : 0.108403}
{'[0, 3, 3, 3, 0, 6, 0, 0, 13, 8, 0, 24, 0, 1, 1, 0, 0, 1]' : 0.108363}
{'[0, 3, 3, 3, 0, 6, 0, 0, 13, 8, 0, 24, 0, 1, 1, 0, 0, 1]' : 0.108081}
{'[0, 3, 3, 3, 0, 6, 0, 0, 13, 8, 0, 24, 0, 1, 1, 0, 0, 1]' : 0.108051}
{'[0, 3, 3, 3, 0, 6, 0, 0, 13, 8, 0, 24, 0, 1, 1, 0, 0, 1]' : 0.107979}
{'[0, 3, 3, 3, 0, 6, 0, 0, 13, 8, 0, 24, 0, 1, 1, 0, 0, 1]' : 0.108045}
{'[0, 3, 3, 3, 0, 6, 0, 0, 13, 8, 0, 24, 0, 1, 1, 0, 0, 1]' : 0.107965}
{'[0, 3, 3, 3, 0, 6, 0, 0, 13, 8, 0, 24, 0, 1, 1, 0, 0, 1]' : 0.107897}
{'[0, 3, 3, 3, 0, 6, 0, 0, 13, 8, 0, 24, 0, 1, 1, 0, 0, 1]' : 0.107264}
{'[0, 3, 3, 3, 0, 6, 0, 0, 13, 8, 0, 24, 0, 1, 1, 0, 0, 1]' : 0.107368}
{'[0, 3, 3, 3, 0, 6, 0, 0, 13, 8, 0, 24, 0, 1, 1, 0, 0, 1]' : 0.107557}
{'[0, 3, 3, 3, 0, 6, 0, 0, 13, 8, 0, 24, 0, 1, 1, 0, 0, 1]' : 0.10767}
{'[0, 3, 3, 3, 0, 6, 0, 0, 13, 8, 0, 24, 0, 1, 1, 0, 0, 1]' : 0.10727}
{'[0, 3, 3, 3, 0, 6, 0, 0, 13, 8, 0, 24, 0, 1, 1, 0, 0, 1]' : 0.107281}
{'[0, 3, 3, 3, 0, 6, 0, 0, 13, 8, 0, 24, 0, 1, 1, 0, 0, 1]' : 0.107387}
{'[0, 3, 3, 3, 0, 6, 0, 0, 13, 8, 0, 24, 0, 1, 1, 0, 0, 1]' : 0.107307}
{'[0, 3, 3, 3, 0, 6, 0, 0, 13, 8, 0, 24, 0, 1, 1, 0, 0, 1]' : 0.108069}
{'[0, 3, 3, 3, 0, 6, 0, 0, 13, 8, 0, 24, 0, 1, 1, 0, 0, 1]' : 0.107211}
{'[0, 3, 3, 3, 0, 6, 0, 0, 13, 8, 0, 24, 0, 1, 1, 0, 0, 1]' : 0.107343}
{'[0, 3, 3, 3, 0, 6, 0, 0, 13, 8, 0, 24, 0, 1, 1, 0, 0, 1]' : 0.107397}
{'[0, 3, 3, 3, 0, 6, 0, 0, 13, 8, 0, 24, 0, 1, 1, 0, 0, 1]' : 0.107523}
{'[0, 3, 3, 3, 0, 6, 0, 0, 13, 8, 0, 24, 0, 1, 1, 0, 0, 1]' : 0.107532}
{'[0, 3, 3, 3, 0, 6, 0, 0, 13, 8, 0, 24, 0, 1, 1, 0, 0, 1]' : 0.107434}
{'[0, 3, 3, 3, 0, 6, 0, 0, 13, 8, 0, 24, 0, 1, 1, 0, 0, 1]' : 0.107424}
{'[0, 3, 3, 3, 0, 6, 0, 0, 13, 8, 0, 24, 0, 1, 1, 0, 0, 1]' : 0.107539}
{'[0, 3, 3, 3, 0, 6, 0, 0, 13, 8, 0, 24, 0, 1, 1, 0, 0, 1]' : 0.107422}
{'[0, 3, 3, 3, 0, 6, 0, 0, 13, 8, 0, 24, 0, 1, 1, 0, 0, 1]' : 0.107431}
{'[0, 3, 3, 3, 0, 6, 0, 0, 13, 8, 0, 24, 0, 1, 1, 0, 0, 1]' : 0.107341}

out:
 ["{'[0, 3, 3, 3, 0, 6, 0, 0, 13, 8, 0, 24, 0, 1, 1, 0, 0, 1]' : 0.108183}", "{'[0, 3, 3, 3, 0, 6, 0, 0, 13, 8, 0, 24, 0, 1, 1, 0, 0, 1]' : 0.108087}", "{'[0, 3, 3, 3, 0, 6, 0, 0, 13, 8, 0, 24, 0, 1, 1, 0, 0, 1]' : 0.108403}", "{'[0, 3, 3, 3, 0, 6, 0, 0, 13, 8, 0, 24, 0, 1, 1, 0, 0, 1]' : 0.108363}", "{'[0, 3, 3, 3, 0, 6, 0, 0, 13, 8, 0, 24, 0, 1, 1, 0, 0, 1]' : 0.108081}", "{'[0, 3, 3, 3, 0, 6, 0, 0, 13, 8, 0, 24, 0, 1, 1, 0, 0, 1]' : 0.108051}", "{'[0, 3, 3, 3, 0, 6, 0, 0, 13, 8, 0, 24, 0, 1, 1, 0, 0, 1]' : 0.107979}", "{'[0, 3, 3, 3, 0, 6, 0, 0, 13, 8, 0, 24, 0, 1, 1, 0, 0, 1]' : 0.108045}", "{'[0, 3, 3, 3, 0, 6, 0, 0, 13, 8, 0, 24, 0, 1, 1, 0, 0, 1]' : 0.107965}", "{'[0, 3, 3, 3, 0, 6, 0, 0, 13, 8, 0, 24, 0, 1, 1, 0, 0, 1]' : 0.107897}", "{'[0, 3, 3, 3, 0, 6, 0, 0, 13, 8, 0, 24, 0, 1, 1, 0, 0, 1]' : 0.107264}", "{'[0, 3, 3, 3, 0, 6, 0, 0, 13, 8, 0, 24, 0, 1, 1, 0, 0, 1]' : 0.107368}", "{'[0, 3, 3, 3, 0, 6, 0, 0, 13, 8, 0, 24, 0, 1, 1, 0, 0, 1]' : 0.107557}", "{'[0, 3, 3, 3, 0, 6, 0, 0, 13, 8, 0, 24, 0, 1, 1, 0, 0, 1]' : 0.10767}", "{'[0, 3, 3, 3, 0, 6, 0, 0, 13, 8, 0, 24, 0, 1, 1, 0, 0, 1]' : 0.10727}", "{'[0, 3, 3, 3, 0, 6, 0, 0, 13, 8, 0, 24, 0, 1, 1, 0, 0, 1]' : 0.107281}", "{'[0, 3, 3, 3, 0, 6, 0, 0, 13, 8, 0, 24, 0, 1, 1, 0, 0, 1]' : 0.107387}", "{'[0, 3, 3, 3, 0, 6, 0, 0, 13, 8, 0, 24, 0, 1, 1, 0, 0, 1]' : 0.107307}", "{'[0, 3, 3, 3, 0, 6, 0, 0, 13, 8, 0, 24, 0, 1, 1, 0, 0, 1]' : 0.108069}", "{'[0, 3, 3, 3, 0, 6, 0, 0, 13, 8, 0, 24, 0, 1, 1, 0, 0, 1]' : 0.107211}", "{'[0, 3, 3, 3, 0, 6, 0, 0, 13, 8, 0, 24, 0, 1, 1, 0, 0, 1]' : 0.107343}", "{'[0, 3, 3, 3, 0, 6, 0, 0, 13, 8, 0, 24, 0, 1, 1, 0, 0, 1]' : 0.107397}", "{'[0, 3, 3, 3, 0, 6, 0, 0, 13, 8, 0, 24, 0, 1, 1, 0, 0, 1]' : 0.107523}", "{'[0, 3, 3, 3, 0, 6, 0, 0, 13, 8, 0, 24, 0, 1, 1, 0, 0, 1]' : 0.107532}", "{'[0, 3, 3, 3, 0, 6, 0, 0, 13, 8, 0, 24, 0, 1, 1, 0, 0, 1]' : 0.107434}", "{'[0, 3, 3, 3, 0, 6, 0, 0, 13, 8, 0, 24, 0, 1, 1, 0, 0, 1]' : 0.107424}", "{'[0, 3, 3, 3, 0, 6, 0, 0, 13, 8, 0, 24, 0, 1, 1, 0, 0, 1]' : 0.107539}", "{'[0, 3, 3, 3, 0, 6, 0, 0, 13, 8, 0, 24, 0, 1, 1, 0, 0, 1]' : 0.107422}", "{'[0, 3, 3, 3, 0, 6, 0, 0, 13, 8, 0, 24, 0, 1, 1, 0, 0, 1]' : 0.107431}", "{'[0, 3, 3, 3, 0, 6, 0, 0, 13, 8, 0, 24, 0, 1, 1, 0, 0, 1]' : 0.107341}"]
returning from 'run': {'[0, 3, 3, 3, 0, 6, 0, 0, 13, 8, 0, 24, 0, 1, 1, 0, 0, 1]': ([0.108183, 0.108087, 0.108403, 0.108363, 0.108081, 0.108051, 0.107979, 0.108045, 0.107965, 0.107897, 0.107264, 0.107368, 0.107557, 0.10767, 0.10727, 0.107281, 0.107387, 0.107307, 0.108069, 0.107211, 0.107343, 0.107397, 0.107523, 0.107532, 0.107434, 0.107424, 0.107539, 0.107422, 0.107431, 0.107341], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 3, 3, 3, 0, 6, 0, 0, 13, 8, 0, 24, 0, 1, 1, 0, 0, 1]': ([0.108183, 0.108087, 0.108403, 0.108363, 0.108081, 0.108051, 0.107979, 0.108045, 0.107965, 0.107897, 0.107264, 0.107368, 0.107557, 0.10767, 0.10727, 0.107281, 0.107387, 0.107307, 0.108069, 0.107211, 0.107343, 0.107397, 0.107523, 0.107532, 0.107434, 0.107424, 0.107539, 0.107422, 0.107431, 0.107341], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	78
        Max loop nest depth: 	4
        Additions: 		3019
        Multiplications: 	666
        Divisions: 		0
        Logical: 		0
        Reads: 			4856
        Writes: 		599
        Comparisons:		78
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest53.exe __orio_perftest53.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest53.exe  
Program Test Output: 
{'[0, 0, 0, 3, 6, 6, 0, 1, 9, 27, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.125078}
{'[0, 0, 0, 3, 6, 6, 0, 1, 9, 27, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.12697}
{'[0, 0, 0, 3, 6, 6, 0, 1, 9, 27, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.126672}
{'[0, 0, 0, 3, 6, 6, 0, 1, 9, 27, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.125284}
{'[0, 0, 0, 3, 6, 6, 0, 1, 9, 27, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.111664}
{'[0, 0, 0, 3, 6, 6, 0, 1, 9, 27, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.110722}
{'[0, 0, 0, 3, 6, 6, 0, 1, 9, 27, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.110427}
{'[0, 0, 0, 3, 6, 6, 0, 1, 9, 27, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.110573}
{'[0, 0, 0, 3, 6, 6, 0, 1, 9, 27, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.110576}
{'[0, 0, 0, 3, 6, 6, 0, 1, 9, 27, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.110635}
{'[0, 0, 0, 3, 6, 6, 0, 1, 9, 27, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.110501}
{'[0, 0, 0, 3, 6, 6, 0, 1, 9, 27, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.11052}
{'[0, 0, 0, 3, 6, 6, 0, 1, 9, 27, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.11082}
{'[0, 0, 0, 3, 6, 6, 0, 1, 9, 27, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.110788}
{'[0, 0, 0, 3, 6, 6, 0, 1, 9, 27, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.110558}
{'[0, 0, 0, 3, 6, 6, 0, 1, 9, 27, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.11051}
{'[0, 0, 0, 3, 6, 6, 0, 1, 9, 27, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.110578}
{'[0, 0, 0, 3, 6, 6, 0, 1, 9, 27, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.110621}
{'[0, 0, 0, 3, 6, 6, 0, 1, 9, 27, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.11091}
{'[0, 0, 0, 3, 6, 6, 0, 1, 9, 27, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.110538}
{'[0, 0, 0, 3, 6, 6, 0, 1, 9, 27, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.110515}
{'[0, 0, 0, 3, 6, 6, 0, 1, 9, 27, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.110516}
{'[0, 0, 0, 3, 6, 6, 0, 1, 9, 27, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.110724}
{'[0, 0, 0, 3, 6, 6, 0, 1, 9, 27, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.11072}
{'[0, 0, 0, 3, 6, 6, 0, 1, 9, 27, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.110515}
{'[0, 0, 0, 3, 6, 6, 0, 1, 9, 27, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.110501}
{'[0, 0, 0, 3, 6, 6, 0, 1, 9, 27, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.110431}
{'[0, 0, 0, 3, 6, 6, 0, 1, 9, 27, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.110982}
{'[0, 0, 0, 3, 6, 6, 0, 1, 9, 27, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.110581}
{'[0, 0, 0, 3, 6, 6, 0, 1, 9, 27, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.110627}

out:
 ["{'[0, 0, 0, 3, 6, 6, 0, 1, 9, 27, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.125078}", "{'[0, 0, 0, 3, 6, 6, 0, 1, 9, 27, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.12697}", "{'[0, 0, 0, 3, 6, 6, 0, 1, 9, 27, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.126672}", "{'[0, 0, 0, 3, 6, 6, 0, 1, 9, 27, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.125284}", "{'[0, 0, 0, 3, 6, 6, 0, 1, 9, 27, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.111664}", "{'[0, 0, 0, 3, 6, 6, 0, 1, 9, 27, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.110722}", "{'[0, 0, 0, 3, 6, 6, 0, 1, 9, 27, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.110427}", "{'[0, 0, 0, 3, 6, 6, 0, 1, 9, 27, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.110573}", "{'[0, 0, 0, 3, 6, 6, 0, 1, 9, 27, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.110576}", "{'[0, 0, 0, 3, 6, 6, 0, 1, 9, 27, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.110635}", "{'[0, 0, 0, 3, 6, 6, 0, 1, 9, 27, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.110501}", "{'[0, 0, 0, 3, 6, 6, 0, 1, 9, 27, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.11052}", "{'[0, 0, 0, 3, 6, 6, 0, 1, 9, 27, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.11082}", "{'[0, 0, 0, 3, 6, 6, 0, 1, 9, 27, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.110788}", "{'[0, 0, 0, 3, 6, 6, 0, 1, 9, 27, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.110558}", "{'[0, 0, 0, 3, 6, 6, 0, 1, 9, 27, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.11051}", "{'[0, 0, 0, 3, 6, 6, 0, 1, 9, 27, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.110578}", "{'[0, 0, 0, 3, 6, 6, 0, 1, 9, 27, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.110621}", "{'[0, 0, 0, 3, 6, 6, 0, 1, 9, 27, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.11091}", "{'[0, 0, 0, 3, 6, 6, 0, 1, 9, 27, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.110538}", "{'[0, 0, 0, 3, 6, 6, 0, 1, 9, 27, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.110515}", "{'[0, 0, 0, 3, 6, 6, 0, 1, 9, 27, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.110516}", "{'[0, 0, 0, 3, 6, 6, 0, 1, 9, 27, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.110724}", "{'[0, 0, 0, 3, 6, 6, 0, 1, 9, 27, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.11072}", "{'[0, 0, 0, 3, 6, 6, 0, 1, 9, 27, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.110515}", "{'[0, 0, 0, 3, 6, 6, 0, 1, 9, 27, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.110501}", "{'[0, 0, 0, 3, 6, 6, 0, 1, 9, 27, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.110431}", "{'[0, 0, 0, 3, 6, 6, 0, 1, 9, 27, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.110982}", "{'[0, 0, 0, 3, 6, 6, 0, 1, 9, 27, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.110581}", "{'[0, 0, 0, 3, 6, 6, 0, 1, 9, 27, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.110627}"]
returning from 'run': {'[0, 0, 0, 3, 6, 6, 0, 1, 9, 27, 0, 29, 1, 0, 1, 0, 1, 1]': ([0.125078, 0.12697, 0.126672, 0.125284, 0.111664, 0.110722, 0.110427, 0.110573, 0.110576, 0.110635, 0.110501, 0.11052, 0.11082, 0.110788, 0.110558, 0.11051, 0.110578, 0.110621, 0.11091, 0.110538, 0.110515, 0.110516, 0.110724, 0.11072, 0.110515, 0.110501, 0.110431, 0.110982, 0.110581, 0.110627], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 0, 3, 6, 6, 0, 1, 9, 27, 0, 29, 1, 0, 1, 0, 1, 1]': ([0.125078, 0.12697, 0.126672, 0.125284, 0.111664, 0.110722, 0.110427, 0.110573, 0.110576, 0.110635, 0.110501, 0.11052, 0.11082, 0.110788, 0.110558, 0.11051, 0.110578, 0.110621, 0.11091, 0.110538, 0.110515, 0.110516, 0.110724, 0.11072, 0.110515, 0.110501, 0.110431, 0.110982, 0.110581, 0.110627], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	4
        Additions: 		226
        Multiplications: 	80
        Divisions: 		0
        Logical: 		0
        Reads: 			522
        Writes: 		74
        Comparisons:		9
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest54.exe __orio_perftest54.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest54.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest54.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest54.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest54.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	96
        Max loop nest depth: 	5
        Additions: 		10450
        Multiplications: 	2808
        Divisions: 		0
        Logical: 		0
        Reads: 			15702
        Writes: 		1744
        Comparisons:		96
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest55.exe __orio_perftest55.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest55.exe  
Program Test Output: 
{'[0, 1, 0, 3, 6, 6, 1, 0, 7, 25, 17, 0, 0, 0, 2, 0, 0, 1]' : 0.23114}
{'[0, 1, 0, 3, 6, 6, 1, 0, 7, 25, 17, 0, 0, 0, 2, 0, 0, 1]' : 0.230937}
{'[0, 1, 0, 3, 6, 6, 1, 0, 7, 25, 17, 0, 0, 0, 2, 0, 0, 1]' : 0.224631}
{'[0, 1, 0, 3, 6, 6, 1, 0, 7, 25, 17, 0, 0, 0, 2, 0, 0, 1]' : 0.224278}
{'[0, 1, 0, 3, 6, 6, 1, 0, 7, 25, 17, 0, 0, 0, 2, 0, 0, 1]' : 0.224611}
{'[0, 1, 0, 3, 6, 6, 1, 0, 7, 25, 17, 0, 0, 0, 2, 0, 0, 1]' : 0.22453}
{'[0, 1, 0, 3, 6, 6, 1, 0, 7, 25, 17, 0, 0, 0, 2, 0, 0, 1]' : 0.224439}
{'[0, 1, 0, 3, 6, 6, 1, 0, 7, 25, 17, 0, 0, 0, 2, 0, 0, 1]' : 0.225006}
{'[0, 1, 0, 3, 6, 6, 1, 0, 7, 25, 17, 0, 0, 0, 2, 0, 0, 1]' : 0.224386}
{'[0, 1, 0, 3, 6, 6, 1, 0, 7, 25, 17, 0, 0, 0, 2, 0, 0, 1]' : 0.224711}
{'[0, 1, 0, 3, 6, 6, 1, 0, 7, 25, 17, 0, 0, 0, 2, 0, 0, 1]' : 0.224227}
{'[0, 1, 0, 3, 6, 6, 1, 0, 7, 25, 17, 0, 0, 0, 2, 0, 0, 1]' : 0.22455}
{'[0, 1, 0, 3, 6, 6, 1, 0, 7, 25, 17, 0, 0, 0, 2, 0, 0, 1]' : 0.22442}
{'[0, 1, 0, 3, 6, 6, 1, 0, 7, 25, 17, 0, 0, 0, 2, 0, 0, 1]' : 0.224565}
{'[0, 1, 0, 3, 6, 6, 1, 0, 7, 25, 17, 0, 0, 0, 2, 0, 0, 1]' : 0.225072}
{'[0, 1, 0, 3, 6, 6, 1, 0, 7, 25, 17, 0, 0, 0, 2, 0, 0, 1]' : 0.224473}
{'[0, 1, 0, 3, 6, 6, 1, 0, 7, 25, 17, 0, 0, 0, 2, 0, 0, 1]' : 0.224324}
{'[0, 1, 0, 3, 6, 6, 1, 0, 7, 25, 17, 0, 0, 0, 2, 0, 0, 1]' : 0.224413}
{'[0, 1, 0, 3, 6, 6, 1, 0, 7, 25, 17, 0, 0, 0, 2, 0, 0, 1]' : 0.224323}
{'[0, 1, 0, 3, 6, 6, 1, 0, 7, 25, 17, 0, 0, 0, 2, 0, 0, 1]' : 0.224893}
{'[0, 1, 0, 3, 6, 6, 1, 0, 7, 25, 17, 0, 0, 0, 2, 0, 0, 1]' : 0.224257}
{'[0, 1, 0, 3, 6, 6, 1, 0, 7, 25, 17, 0, 0, 0, 2, 0, 0, 1]' : 0.225071}
{'[0, 1, 0, 3, 6, 6, 1, 0, 7, 25, 17, 0, 0, 0, 2, 0, 0, 1]' : 0.224485}
{'[0, 1, 0, 3, 6, 6, 1, 0, 7, 25, 17, 0, 0, 0, 2, 0, 0, 1]' : 0.224249}
{'[0, 1, 0, 3, 6, 6, 1, 0, 7, 25, 17, 0, 0, 0, 2, 0, 0, 1]' : 0.224996}
{'[0, 1, 0, 3, 6, 6, 1, 0, 7, 25, 17, 0, 0, 0, 2, 0, 0, 1]' : 0.22435}
{'[0, 1, 0, 3, 6, 6, 1, 0, 7, 25, 17, 0, 0, 0, 2, 0, 0, 1]' : 0.224425}
{'[0, 1, 0, 3, 6, 6, 1, 0, 7, 25, 17, 0, 0, 0, 2, 0, 0, 1]' : 0.224232}
{'[0, 1, 0, 3, 6, 6, 1, 0, 7, 25, 17, 0, 0, 0, 2, 0, 0, 1]' : 0.224474}
{'[0, 1, 0, 3, 6, 6, 1, 0, 7, 25, 17, 0, 0, 0, 2, 0, 0, 1]' : 0.224713}

out:
 ["{'[0, 1, 0, 3, 6, 6, 1, 0, 7, 25, 17, 0, 0, 0, 2, 0, 0, 1]' : 0.23114}", "{'[0, 1, 0, 3, 6, 6, 1, 0, 7, 25, 17, 0, 0, 0, 2, 0, 0, 1]' : 0.230937}", "{'[0, 1, 0, 3, 6, 6, 1, 0, 7, 25, 17, 0, 0, 0, 2, 0, 0, 1]' : 0.224631}", "{'[0, 1, 0, 3, 6, 6, 1, 0, 7, 25, 17, 0, 0, 0, 2, 0, 0, 1]' : 0.224278}", "{'[0, 1, 0, 3, 6, 6, 1, 0, 7, 25, 17, 0, 0, 0, 2, 0, 0, 1]' : 0.224611}", "{'[0, 1, 0, 3, 6, 6, 1, 0, 7, 25, 17, 0, 0, 0, 2, 0, 0, 1]' : 0.22453}", "{'[0, 1, 0, 3, 6, 6, 1, 0, 7, 25, 17, 0, 0, 0, 2, 0, 0, 1]' : 0.224439}", "{'[0, 1, 0, 3, 6, 6, 1, 0, 7, 25, 17, 0, 0, 0, 2, 0, 0, 1]' : 0.225006}", "{'[0, 1, 0, 3, 6, 6, 1, 0, 7, 25, 17, 0, 0, 0, 2, 0, 0, 1]' : 0.224386}", "{'[0, 1, 0, 3, 6, 6, 1, 0, 7, 25, 17, 0, 0, 0, 2, 0, 0, 1]' : 0.224711}", "{'[0, 1, 0, 3, 6, 6, 1, 0, 7, 25, 17, 0, 0, 0, 2, 0, 0, 1]' : 0.224227}", "{'[0, 1, 0, 3, 6, 6, 1, 0, 7, 25, 17, 0, 0, 0, 2, 0, 0, 1]' : 0.22455}", "{'[0, 1, 0, 3, 6, 6, 1, 0, 7, 25, 17, 0, 0, 0, 2, 0, 0, 1]' : 0.22442}", "{'[0, 1, 0, 3, 6, 6, 1, 0, 7, 25, 17, 0, 0, 0, 2, 0, 0, 1]' : 0.224565}", "{'[0, 1, 0, 3, 6, 6, 1, 0, 7, 25, 17, 0, 0, 0, 2, 0, 0, 1]' : 0.225072}", "{'[0, 1, 0, 3, 6, 6, 1, 0, 7, 25, 17, 0, 0, 0, 2, 0, 0, 1]' : 0.224473}", "{'[0, 1, 0, 3, 6, 6, 1, 0, 7, 25, 17, 0, 0, 0, 2, 0, 0, 1]' : 0.224324}", "{'[0, 1, 0, 3, 6, 6, 1, 0, 7, 25, 17, 0, 0, 0, 2, 0, 0, 1]' : 0.224413}", "{'[0, 1, 0, 3, 6, 6, 1, 0, 7, 25, 17, 0, 0, 0, 2, 0, 0, 1]' : 0.224323}", "{'[0, 1, 0, 3, 6, 6, 1, 0, 7, 25, 17, 0, 0, 0, 2, 0, 0, 1]' : 0.224893}", "{'[0, 1, 0, 3, 6, 6, 1, 0, 7, 25, 17, 0, 0, 0, 2, 0, 0, 1]' : 0.224257}", "{'[0, 1, 0, 3, 6, 6, 1, 0, 7, 25, 17, 0, 0, 0, 2, 0, 0, 1]' : 0.225071}", "{'[0, 1, 0, 3, 6, 6, 1, 0, 7, 25, 17, 0, 0, 0, 2, 0, 0, 1]' : 0.224485}", "{'[0, 1, 0, 3, 6, 6, 1, 0, 7, 25, 17, 0, 0, 0, 2, 0, 0, 1]' : 0.224249}", "{'[0, 1, 0, 3, 6, 6, 1, 0, 7, 25, 17, 0, 0, 0, 2, 0, 0, 1]' : 0.224996}", "{'[0, 1, 0, 3, 6, 6, 1, 0, 7, 25, 17, 0, 0, 0, 2, 0, 0, 1]' : 0.22435}", "{'[0, 1, 0, 3, 6, 6, 1, 0, 7, 25, 17, 0, 0, 0, 2, 0, 0, 1]' : 0.224425}", "{'[0, 1, 0, 3, 6, 6, 1, 0, 7, 25, 17, 0, 0, 0, 2, 0, 0, 1]' : 0.224232}", "{'[0, 1, 0, 3, 6, 6, 1, 0, 7, 25, 17, 0, 0, 0, 2, 0, 0, 1]' : 0.224474}", "{'[0, 1, 0, 3, 6, 6, 1, 0, 7, 25, 17, 0, 0, 0, 2, 0, 0, 1]' : 0.224713}"]
returning from 'run': {'[0, 1, 0, 3, 6, 6, 1, 0, 7, 25, 17, 0, 0, 0, 2, 0, 0, 1]': ([0.23114, 0.230937, 0.224631, 0.224278, 0.224611, 0.22453, 0.224439, 0.225006, 0.224386, 0.224711, 0.224227, 0.22455, 0.22442, 0.224565, 0.225072, 0.224473, 0.224324, 0.224413, 0.224323, 0.224893, 0.224257, 0.225071, 0.224485, 0.224249, 0.224996, 0.22435, 0.224425, 0.224232, 0.224474, 0.224713], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 0, 3, 6, 6, 1, 0, 7, 25, 17, 0, 0, 0, 2, 0, 0, 1]': ([0.23114, 0.230937, 0.224631, 0.224278, 0.224611, 0.22453, 0.224439, 0.225006, 0.224386, 0.224711, 0.224227, 0.22455, 0.22442, 0.224565, 0.225072, 0.224473, 0.224324, 0.224413, 0.224323, 0.224893, 0.224257, 0.225071, 0.224485, 0.224249, 0.224996, 0.22435, 0.224425, 0.224232, 0.224474, 0.224713], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	34
        Max loop nest depth: 	5
        Additions: 		2590
        Multiplications: 	744
        Divisions: 		0
        Logical: 		0
        Reads: 			4236
        Writes: 		475
        Comparisons:		34
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest56.exe __orio_perftest56.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest56.exe  
Program Test Output: 
{'[0, 6, 3, 3, 6, 2, 1, 0, 0, 4, 27, 0, 0, 0, 2, 0, 0, 1]' : 0.232267}
{'[0, 6, 3, 3, 6, 2, 1, 0, 0, 4, 27, 0, 0, 0, 2, 0, 0, 1]' : 0.232182}
{'[0, 6, 3, 3, 6, 2, 1, 0, 0, 4, 27, 0, 0, 0, 2, 0, 0, 1]' : 0.201305}
{'[0, 6, 3, 3, 6, 2, 1, 0, 0, 4, 27, 0, 0, 0, 2, 0, 0, 1]' : 0.195667}
{'[0, 6, 3, 3, 6, 2, 1, 0, 0, 4, 27, 0, 0, 0, 2, 0, 0, 1]' : 0.194764}
{'[0, 6, 3, 3, 6, 2, 1, 0, 0, 4, 27, 0, 0, 0, 2, 0, 0, 1]' : 0.194959}
{'[0, 6, 3, 3, 6, 2, 1, 0, 0, 4, 27, 0, 0, 0, 2, 0, 0, 1]' : 0.194818}
{'[0, 6, 3, 3, 6, 2, 1, 0, 0, 4, 27, 0, 0, 0, 2, 0, 0, 1]' : 0.195186}
{'[0, 6, 3, 3, 6, 2, 1, 0, 0, 4, 27, 0, 0, 0, 2, 0, 0, 1]' : 0.195283}
{'[0, 6, 3, 3, 6, 2, 1, 0, 0, 4, 27, 0, 0, 0, 2, 0, 0, 1]' : 0.195271}
{'[0, 6, 3, 3, 6, 2, 1, 0, 0, 4, 27, 0, 0, 0, 2, 0, 0, 1]' : 0.194939}
{'[0, 6, 3, 3, 6, 2, 1, 0, 0, 4, 27, 0, 0, 0, 2, 0, 0, 1]' : 0.194719}
{'[0, 6, 3, 3, 6, 2, 1, 0, 0, 4, 27, 0, 0, 0, 2, 0, 0, 1]' : 0.194803}
{'[0, 6, 3, 3, 6, 2, 1, 0, 0, 4, 27, 0, 0, 0, 2, 0, 0, 1]' : 0.194929}
{'[0, 6, 3, 3, 6, 2, 1, 0, 0, 4, 27, 0, 0, 0, 2, 0, 0, 1]' : 0.195291}
{'[0, 6, 3, 3, 6, 2, 1, 0, 0, 4, 27, 0, 0, 0, 2, 0, 0, 1]' : 0.194635}
{'[0, 6, 3, 3, 6, 2, 1, 0, 0, 4, 27, 0, 0, 0, 2, 0, 0, 1]' : 0.194999}
{'[0, 6, 3, 3, 6, 2, 1, 0, 0, 4, 27, 0, 0, 0, 2, 0, 0, 1]' : 0.194865}
{'[0, 6, 3, 3, 6, 2, 1, 0, 0, 4, 27, 0, 0, 0, 2, 0, 0, 1]' : 0.194807}
{'[0, 6, 3, 3, 6, 2, 1, 0, 0, 4, 27, 0, 0, 0, 2, 0, 0, 1]' : 0.194885}
{'[0, 6, 3, 3, 6, 2, 1, 0, 0, 4, 27, 0, 0, 0, 2, 0, 0, 1]' : 0.195238}
{'[0, 6, 3, 3, 6, 2, 1, 0, 0, 4, 27, 0, 0, 0, 2, 0, 0, 1]' : 0.194935}
{'[0, 6, 3, 3, 6, 2, 1, 0, 0, 4, 27, 0, 0, 0, 2, 0, 0, 1]' : 0.194778}
{'[0, 6, 3, 3, 6, 2, 1, 0, 0, 4, 27, 0, 0, 0, 2, 0, 0, 1]' : 0.19508}
{'[0, 6, 3, 3, 6, 2, 1, 0, 0, 4, 27, 0, 0, 0, 2, 0, 0, 1]' : 0.194745}
{'[0, 6, 3, 3, 6, 2, 1, 0, 0, 4, 27, 0, 0, 0, 2, 0, 0, 1]' : 0.195328}
{'[0, 6, 3, 3, 6, 2, 1, 0, 0, 4, 27, 0, 0, 0, 2, 0, 0, 1]' : 0.194829}
{'[0, 6, 3, 3, 6, 2, 1, 0, 0, 4, 27, 0, 0, 0, 2, 0, 0, 1]' : 0.194784}
{'[0, 6, 3, 3, 6, 2, 1, 0, 0, 4, 27, 0, 0, 0, 2, 0, 0, 1]' : 0.195005}
{'[0, 6, 3, 3, 6, 2, 1, 0, 0, 4, 27, 0, 0, 0, 2, 0, 0, 1]' : 0.194716}

out:
 ["{'[0, 6, 3, 3, 6, 2, 1, 0, 0, 4, 27, 0, 0, 0, 2, 0, 0, 1]' : 0.232267}", "{'[0, 6, 3, 3, 6, 2, 1, 0, 0, 4, 27, 0, 0, 0, 2, 0, 0, 1]' : 0.232182}", "{'[0, 6, 3, 3, 6, 2, 1, 0, 0, 4, 27, 0, 0, 0, 2, 0, 0, 1]' : 0.201305}", "{'[0, 6, 3, 3, 6, 2, 1, 0, 0, 4, 27, 0, 0, 0, 2, 0, 0, 1]' : 0.195667}", "{'[0, 6, 3, 3, 6, 2, 1, 0, 0, 4, 27, 0, 0, 0, 2, 0, 0, 1]' : 0.194764}", "{'[0, 6, 3, 3, 6, 2, 1, 0, 0, 4, 27, 0, 0, 0, 2, 0, 0, 1]' : 0.194959}", "{'[0, 6, 3, 3, 6, 2, 1, 0, 0, 4, 27, 0, 0, 0, 2, 0, 0, 1]' : 0.194818}", "{'[0, 6, 3, 3, 6, 2, 1, 0, 0, 4, 27, 0, 0, 0, 2, 0, 0, 1]' : 0.195186}", "{'[0, 6, 3, 3, 6, 2, 1, 0, 0, 4, 27, 0, 0, 0, 2, 0, 0, 1]' : 0.195283}", "{'[0, 6, 3, 3, 6, 2, 1, 0, 0, 4, 27, 0, 0, 0, 2, 0, 0, 1]' : 0.195271}", "{'[0, 6, 3, 3, 6, 2, 1, 0, 0, 4, 27, 0, 0, 0, 2, 0, 0, 1]' : 0.194939}", "{'[0, 6, 3, 3, 6, 2, 1, 0, 0, 4, 27, 0, 0, 0, 2, 0, 0, 1]' : 0.194719}", "{'[0, 6, 3, 3, 6, 2, 1, 0, 0, 4, 27, 0, 0, 0, 2, 0, 0, 1]' : 0.194803}", "{'[0, 6, 3, 3, 6, 2, 1, 0, 0, 4, 27, 0, 0, 0, 2, 0, 0, 1]' : 0.194929}", "{'[0, 6, 3, 3, 6, 2, 1, 0, 0, 4, 27, 0, 0, 0, 2, 0, 0, 1]' : 0.195291}", "{'[0, 6, 3, 3, 6, 2, 1, 0, 0, 4, 27, 0, 0, 0, 2, 0, 0, 1]' : 0.194635}", "{'[0, 6, 3, 3, 6, 2, 1, 0, 0, 4, 27, 0, 0, 0, 2, 0, 0, 1]' : 0.194999}", "{'[0, 6, 3, 3, 6, 2, 1, 0, 0, 4, 27, 0, 0, 0, 2, 0, 0, 1]' : 0.194865}", "{'[0, 6, 3, 3, 6, 2, 1, 0, 0, 4, 27, 0, 0, 0, 2, 0, 0, 1]' : 0.194807}", "{'[0, 6, 3, 3, 6, 2, 1, 0, 0, 4, 27, 0, 0, 0, 2, 0, 0, 1]' : 0.194885}", "{'[0, 6, 3, 3, 6, 2, 1, 0, 0, 4, 27, 0, 0, 0, 2, 0, 0, 1]' : 0.195238}", "{'[0, 6, 3, 3, 6, 2, 1, 0, 0, 4, 27, 0, 0, 0, 2, 0, 0, 1]' : 0.194935}", "{'[0, 6, 3, 3, 6, 2, 1, 0, 0, 4, 27, 0, 0, 0, 2, 0, 0, 1]' : 0.194778}", "{'[0, 6, 3, 3, 6, 2, 1, 0, 0, 4, 27, 0, 0, 0, 2, 0, 0, 1]' : 0.19508}", "{'[0, 6, 3, 3, 6, 2, 1, 0, 0, 4, 27, 0, 0, 0, 2, 0, 0, 1]' : 0.194745}", "{'[0, 6, 3, 3, 6, 2, 1, 0, 0, 4, 27, 0, 0, 0, 2, 0, 0, 1]' : 0.195328}", "{'[0, 6, 3, 3, 6, 2, 1, 0, 0, 4, 27, 0, 0, 0, 2, 0, 0, 1]' : 0.194829}", "{'[0, 6, 3, 3, 6, 2, 1, 0, 0, 4, 27, 0, 0, 0, 2, 0, 0, 1]' : 0.194784}", "{'[0, 6, 3, 3, 6, 2, 1, 0, 0, 4, 27, 0, 0, 0, 2, 0, 0, 1]' : 0.195005}", "{'[0, 6, 3, 3, 6, 2, 1, 0, 0, 4, 27, 0, 0, 0, 2, 0, 0, 1]' : 0.194716}"]
returning from 'run': {'[0, 6, 3, 3, 6, 2, 1, 0, 0, 4, 27, 0, 0, 0, 2, 0, 0, 1]': ([0.232267, 0.232182, 0.201305, 0.195667, 0.194764, 0.194959, 0.194818, 0.195186, 0.195283, 0.195271, 0.194939, 0.194719, 0.194803, 0.194929, 0.195291, 0.194635, 0.194999, 0.194865, 0.194807, 0.194885, 0.195238, 0.194935, 0.194778, 0.19508, 0.194745, 0.195328, 0.194829, 0.194784, 0.195005, 0.194716], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 3, 3, 6, 2, 1, 0, 0, 4, 27, 0, 0, 0, 2, 0, 0, 1]': ([0.232267, 0.232182, 0.201305, 0.195667, 0.194764, 0.194959, 0.194818, 0.195186, 0.195283, 0.195271, 0.194939, 0.194719, 0.194803, 0.194929, 0.195291, 0.194635, 0.194999, 0.194865, 0.194807, 0.194885, 0.195238, 0.194935, 0.194778, 0.19508, 0.194745, 0.195328, 0.194829, 0.194784, 0.195005, 0.194716], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		80
        Multiplications: 	20
        Divisions: 		0
        Logical: 		0
        Reads: 			198
        Writes: 		43
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest57.exe __orio_perftest57.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest57.exe  
Program Test Output: 
{'[0, 2, 4, 3, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 1]' : 0.235638}
{'[0, 2, 4, 3, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 1]' : 0.235574}
{'[0, 2, 4, 3, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 1]' : 0.233395}
{'[0, 2, 4, 3, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 1]' : 0.197867}
{'[0, 2, 4, 3, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 1]' : 0.197117}
{'[0, 2, 4, 3, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 1]' : 0.197542}
{'[0, 2, 4, 3, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 1]' : 0.19703}
{'[0, 2, 4, 3, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 1]' : 0.197196}
{'[0, 2, 4, 3, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 1]' : 0.197074}
{'[0, 2, 4, 3, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 1]' : 0.197193}
{'[0, 2, 4, 3, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 1]' : 0.197171}
{'[0, 2, 4, 3, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 1]' : 0.197823}
{'[0, 2, 4, 3, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 1]' : 0.197278}
{'[0, 2, 4, 3, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 1]' : 0.197373}
{'[0, 2, 4, 3, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 1]' : 0.197122}
{'[0, 2, 4, 3, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 1]' : 0.197217}
{'[0, 2, 4, 3, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 1]' : 0.197661}
{'[0, 2, 4, 3, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 1]' : 0.197399}
{'[0, 2, 4, 3, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 1]' : 0.197502}
{'[0, 2, 4, 3, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 1]' : 0.197396}
{'[0, 2, 4, 3, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 1]' : 0.19719}
{'[0, 2, 4, 3, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 1]' : 0.197221}
{'[0, 2, 4, 3, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 1]' : 0.19755}
{'[0, 2, 4, 3, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 1]' : 0.197484}
{'[0, 2, 4, 3, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 1]' : 0.19716}
{'[0, 2, 4, 3, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 1]' : 0.197095}
{'[0, 2, 4, 3, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 1]' : 0.19703}
{'[0, 2, 4, 3, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 1]' : 0.197409}
{'[0, 2, 4, 3, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 1]' : 0.197641}
{'[0, 2, 4, 3, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 1]' : 0.19703}

out:
 ["{'[0, 2, 4, 3, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 1]' : 0.235638}", "{'[0, 2, 4, 3, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 1]' : 0.235574}", "{'[0, 2, 4, 3, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 1]' : 0.233395}", "{'[0, 2, 4, 3, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 1]' : 0.197867}", "{'[0, 2, 4, 3, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 1]' : 0.197117}", "{'[0, 2, 4, 3, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 1]' : 0.197542}", "{'[0, 2, 4, 3, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 1]' : 0.19703}", "{'[0, 2, 4, 3, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 1]' : 0.197196}", "{'[0, 2, 4, 3, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 1]' : 0.197074}", "{'[0, 2, 4, 3, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 1]' : 0.197193}", "{'[0, 2, 4, 3, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 1]' : 0.197171}", "{'[0, 2, 4, 3, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 1]' : 0.197823}", "{'[0, 2, 4, 3, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 1]' : 0.197278}", "{'[0, 2, 4, 3, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 1]' : 0.197373}", "{'[0, 2, 4, 3, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 1]' : 0.197122}", "{'[0, 2, 4, 3, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 1]' : 0.197217}", "{'[0, 2, 4, 3, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 1]' : 0.197661}", "{'[0, 2, 4, 3, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 1]' : 0.197399}", "{'[0, 2, 4, 3, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 1]' : 0.197502}", "{'[0, 2, 4, 3, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 1]' : 0.197396}", "{'[0, 2, 4, 3, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 1]' : 0.19719}", "{'[0, 2, 4, 3, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 1]' : 0.197221}", "{'[0, 2, 4, 3, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 1]' : 0.19755}", "{'[0, 2, 4, 3, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 1]' : 0.197484}", "{'[0, 2, 4, 3, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 1]' : 0.19716}", "{'[0, 2, 4, 3, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 1]' : 0.197095}", "{'[0, 2, 4, 3, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 1]' : 0.19703}", "{'[0, 2, 4, 3, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 1]' : 0.197409}", "{'[0, 2, 4, 3, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 1]' : 0.197641}", "{'[0, 2, 4, 3, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 1]' : 0.19703}"]
returning from 'run': {'[0, 2, 4, 3, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 1]': ([0.235638, 0.235574, 0.233395, 0.197867, 0.197117, 0.197542, 0.19703, 0.197196, 0.197074, 0.197193, 0.197171, 0.197823, 0.197278, 0.197373, 0.197122, 0.197217, 0.197661, 0.197399, 0.197502, 0.197396, 0.19719, 0.197221, 0.19755, 0.197484, 0.19716, 0.197095, 0.19703, 0.197409, 0.197641, 0.19703], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 4, 3, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 1]': ([0.235638, 0.235574, 0.233395, 0.197867, 0.197117, 0.197542, 0.19703, 0.197196, 0.197074, 0.197193, 0.197171, 0.197823, 0.197278, 0.197373, 0.197122, 0.197217, 0.197661, 0.197399, 0.197502, 0.197396, 0.19719, 0.197221, 0.19755, 0.197484, 0.19716, 0.197095, 0.19703, 0.197409, 0.197641, 0.19703], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	135
        Max loop nest depth: 	5
        Additions: 		3590
        Multiplications: 	976
        Divisions: 		0
        Logical: 		0
        Reads: 			6467
        Writes: 		961
        Comparisons:		135
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest58.exe __orio_perftest58.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest58.exe  
Program Test Output: 
{'[0, 0, 5, 3, 0, 5, 1, 1, 18, 27, 5, 0, 2, 0, 0, 0, 0, 1]' : 0.240562}
{'[0, 0, 5, 3, 0, 5, 1, 1, 18, 27, 5, 0, 2, 0, 0, 0, 0, 1]' : 0.240562}
{'[0, 0, 5, 3, 0, 5, 1, 1, 18, 27, 5, 0, 2, 0, 0, 0, 0, 1]' : 0.221841}
{'[0, 0, 5, 3, 0, 5, 1, 1, 18, 27, 5, 0, 2, 0, 0, 0, 0, 1]' : 0.217061}
{'[0, 0, 5, 3, 0, 5, 1, 1, 18, 27, 5, 0, 2, 0, 0, 0, 0, 1]' : 0.21703}
{'[0, 0, 5, 3, 0, 5, 1, 1, 18, 27, 5, 0, 2, 0, 0, 0, 0, 1]' : 0.217589}
{'[0, 0, 5, 3, 0, 5, 1, 1, 18, 27, 5, 0, 2, 0, 0, 0, 0, 1]' : 0.217399}
{'[0, 0, 5, 3, 0, 5, 1, 1, 18, 27, 5, 0, 2, 0, 0, 0, 0, 1]' : 0.217476}
{'[0, 0, 5, 3, 0, 5, 1, 1, 18, 27, 5, 0, 2, 0, 0, 0, 0, 1]' : 0.217515}
{'[0, 0, 5, 3, 0, 5, 1, 1, 18, 27, 5, 0, 2, 0, 0, 0, 0, 1]' : 0.217218}
{'[0, 0, 5, 3, 0, 5, 1, 1, 18, 27, 5, 0, 2, 0, 0, 0, 0, 1]' : 0.216751}
{'[0, 0, 5, 3, 0, 5, 1, 1, 18, 27, 5, 0, 2, 0, 0, 0, 0, 1]' : 0.217189}
{'[0, 0, 5, 3, 0, 5, 1, 1, 18, 27, 5, 0, 2, 0, 0, 0, 0, 1]' : 0.217243}
{'[0, 0, 5, 3, 0, 5, 1, 1, 18, 27, 5, 0, 2, 0, 0, 0, 0, 1]' : 0.21736}
{'[0, 0, 5, 3, 0, 5, 1, 1, 18, 27, 5, 0, 2, 0, 0, 0, 0, 1]' : 0.217227}
{'[0, 0, 5, 3, 0, 5, 1, 1, 18, 27, 5, 0, 2, 0, 0, 0, 0, 1]' : 0.217792}
{'[0, 0, 5, 3, 0, 5, 1, 1, 18, 27, 5, 0, 2, 0, 0, 0, 0, 1]' : 0.21709}
{'[0, 0, 5, 3, 0, 5, 1, 1, 18, 27, 5, 0, 2, 0, 0, 0, 0, 1]' : 0.217136}
{'[0, 0, 5, 3, 0, 5, 1, 1, 18, 27, 5, 0, 2, 0, 0, 0, 0, 1]' : 0.217547}
{'[0, 0, 5, 3, 0, 5, 1, 1, 18, 27, 5, 0, 2, 0, 0, 0, 0, 1]' : 0.217313}
{'[0, 0, 5, 3, 0, 5, 1, 1, 18, 27, 5, 0, 2, 0, 0, 0, 0, 1]' : 0.217115}
{'[0, 0, 5, 3, 0, 5, 1, 1, 18, 27, 5, 0, 2, 0, 0, 0, 0, 1]' : 0.217132}
{'[0, 0, 5, 3, 0, 5, 1, 1, 18, 27, 5, 0, 2, 0, 0, 0, 0, 1]' : 0.217083}
{'[0, 0, 5, 3, 0, 5, 1, 1, 18, 27, 5, 0, 2, 0, 0, 0, 0, 1]' : 0.217681}
{'[0, 0, 5, 3, 0, 5, 1, 1, 18, 27, 5, 0, 2, 0, 0, 0, 0, 1]' : 0.217783}
{'[0, 0, 5, 3, 0, 5, 1, 1, 18, 27, 5, 0, 2, 0, 0, 0, 0, 1]' : 0.217358}
{'[0, 0, 5, 3, 0, 5, 1, 1, 18, 27, 5, 0, 2, 0, 0, 0, 0, 1]' : 0.217371}
{'[0, 0, 5, 3, 0, 5, 1, 1, 18, 27, 5, 0, 2, 0, 0, 0, 0, 1]' : 0.217147}
{'[0, 0, 5, 3, 0, 5, 1, 1, 18, 27, 5, 0, 2, 0, 0, 0, 0, 1]' : 0.217445}
{'[0, 0, 5, 3, 0, 5, 1, 1, 18, 27, 5, 0, 2, 0, 0, 0, 0, 1]' : 0.21694}

out:
 ["{'[0, 0, 5, 3, 0, 5, 1, 1, 18, 27, 5, 0, 2, 0, 0, 0, 0, 1]' : 0.240562}", "{'[0, 0, 5, 3, 0, 5, 1, 1, 18, 27, 5, 0, 2, 0, 0, 0, 0, 1]' : 0.240562}", "{'[0, 0, 5, 3, 0, 5, 1, 1, 18, 27, 5, 0, 2, 0, 0, 0, 0, 1]' : 0.221841}", "{'[0, 0, 5, 3, 0, 5, 1, 1, 18, 27, 5, 0, 2, 0, 0, 0, 0, 1]' : 0.217061}", "{'[0, 0, 5, 3, 0, 5, 1, 1, 18, 27, 5, 0, 2, 0, 0, 0, 0, 1]' : 0.21703}", "{'[0, 0, 5, 3, 0, 5, 1, 1, 18, 27, 5, 0, 2, 0, 0, 0, 0, 1]' : 0.217589}", "{'[0, 0, 5, 3, 0, 5, 1, 1, 18, 27, 5, 0, 2, 0, 0, 0, 0, 1]' : 0.217399}", "{'[0, 0, 5, 3, 0, 5, 1, 1, 18, 27, 5, 0, 2, 0, 0, 0, 0, 1]' : 0.217476}", "{'[0, 0, 5, 3, 0, 5, 1, 1, 18, 27, 5, 0, 2, 0, 0, 0, 0, 1]' : 0.217515}", "{'[0, 0, 5, 3, 0, 5, 1, 1, 18, 27, 5, 0, 2, 0, 0, 0, 0, 1]' : 0.217218}", "{'[0, 0, 5, 3, 0, 5, 1, 1, 18, 27, 5, 0, 2, 0, 0, 0, 0, 1]' : 0.216751}", "{'[0, 0, 5, 3, 0, 5, 1, 1, 18, 27, 5, 0, 2, 0, 0, 0, 0, 1]' : 0.217189}", "{'[0, 0, 5, 3, 0, 5, 1, 1, 18, 27, 5, 0, 2, 0, 0, 0, 0, 1]' : 0.217243}", "{'[0, 0, 5, 3, 0, 5, 1, 1, 18, 27, 5, 0, 2, 0, 0, 0, 0, 1]' : 0.21736}", "{'[0, 0, 5, 3, 0, 5, 1, 1, 18, 27, 5, 0, 2, 0, 0, 0, 0, 1]' : 0.217227}", "{'[0, 0, 5, 3, 0, 5, 1, 1, 18, 27, 5, 0, 2, 0, 0, 0, 0, 1]' : 0.217792}", "{'[0, 0, 5, 3, 0, 5, 1, 1, 18, 27, 5, 0, 2, 0, 0, 0, 0, 1]' : 0.21709}", "{'[0, 0, 5, 3, 0, 5, 1, 1, 18, 27, 5, 0, 2, 0, 0, 0, 0, 1]' : 0.217136}", "{'[0, 0, 5, 3, 0, 5, 1, 1, 18, 27, 5, 0, 2, 0, 0, 0, 0, 1]' : 0.217547}", "{'[0, 0, 5, 3, 0, 5, 1, 1, 18, 27, 5, 0, 2, 0, 0, 0, 0, 1]' : 0.217313}", "{'[0, 0, 5, 3, 0, 5, 1, 1, 18, 27, 5, 0, 2, 0, 0, 0, 0, 1]' : 0.217115}", "{'[0, 0, 5, 3, 0, 5, 1, 1, 18, 27, 5, 0, 2, 0, 0, 0, 0, 1]' : 0.217132}", "{'[0, 0, 5, 3, 0, 5, 1, 1, 18, 27, 5, 0, 2, 0, 0, 0, 0, 1]' : 0.217083}", "{'[0, 0, 5, 3, 0, 5, 1, 1, 18, 27, 5, 0, 2, 0, 0, 0, 0, 1]' : 0.217681}", "{'[0, 0, 5, 3, 0, 5, 1, 1, 18, 27, 5, 0, 2, 0, 0, 0, 0, 1]' : 0.217783}", "{'[0, 0, 5, 3, 0, 5, 1, 1, 18, 27, 5, 0, 2, 0, 0, 0, 0, 1]' : 0.217358}", "{'[0, 0, 5, 3, 0, 5, 1, 1, 18, 27, 5, 0, 2, 0, 0, 0, 0, 1]' : 0.217371}", "{'[0, 0, 5, 3, 0, 5, 1, 1, 18, 27, 5, 0, 2, 0, 0, 0, 0, 1]' : 0.217147}", "{'[0, 0, 5, 3, 0, 5, 1, 1, 18, 27, 5, 0, 2, 0, 0, 0, 0, 1]' : 0.217445}", "{'[0, 0, 5, 3, 0, 5, 1, 1, 18, 27, 5, 0, 2, 0, 0, 0, 0, 1]' : 0.21694}"]
returning from 'run': {'[0, 0, 5, 3, 0, 5, 1, 1, 18, 27, 5, 0, 2, 0, 0, 0, 0, 1]': ([0.240562, 0.240562, 0.221841, 0.217061, 0.21703, 0.217589, 0.217399, 0.217476, 0.217515, 0.217218, 0.216751, 0.217189, 0.217243, 0.21736, 0.217227, 0.217792, 0.21709, 0.217136, 0.217547, 0.217313, 0.217115, 0.217132, 0.217083, 0.217681, 0.217783, 0.217358, 0.217371, 0.217147, 0.217445, 0.21694], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 5, 3, 0, 5, 1, 1, 18, 27, 5, 0, 2, 0, 0, 0, 0, 1]': ([0.240562, 0.240562, 0.221841, 0.217061, 0.21703, 0.217589, 0.217399, 0.217476, 0.217515, 0.217218, 0.216751, 0.217189, 0.217243, 0.21736, 0.217227, 0.217792, 0.21709, 0.217136, 0.217547, 0.217313, 0.217115, 0.217132, 0.217083, 0.217681, 0.217783, 0.217358, 0.217371, 0.217147, 0.217445, 0.21694], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	7
        Max loop nest depth: 	4
        Additions: 		55
        Multiplications: 	18
        Divisions: 		0
        Logical: 		0
        Reads: 			143
        Writes: 		29
        Comparisons:		7
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest59.exe __orio_perftest59.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest59.exe  
Program Test Output: 
{'[0, 0, 0, 3, 5, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.175726}
{'[0, 0, 0, 3, 5, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.175522}
{'[0, 0, 0, 3, 5, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.175486}
{'[0, 0, 0, 3, 5, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.166753}
{'[0, 0, 0, 3, 5, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.147338}
{'[0, 0, 0, 3, 5, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.146976}
{'[0, 0, 0, 3, 5, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.147041}
{'[0, 0, 0, 3, 5, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.146941}
{'[0, 0, 0, 3, 5, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.147035}
{'[0, 0, 0, 3, 5, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.146952}
{'[0, 0, 0, 3, 5, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.147024}
{'[0, 0, 0, 3, 5, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.147409}
{'[0, 0, 0, 3, 5, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.147229}
{'[0, 0, 0, 3, 5, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.147057}
{'[0, 0, 0, 3, 5, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.147029}
{'[0, 0, 0, 3, 5, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.147142}
{'[0, 0, 0, 3, 5, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.147232}
{'[0, 0, 0, 3, 5, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.147123}
{'[0, 0, 0, 3, 5, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.147472}
{'[0, 0, 0, 3, 5, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.147342}
{'[0, 0, 0, 3, 5, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.147193}
{'[0, 0, 0, 3, 5, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.147143}
{'[0, 0, 0, 3, 5, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.147176}
{'[0, 0, 0, 3, 5, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.147112}
{'[0, 0, 0, 3, 5, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.147216}
{'[0, 0, 0, 3, 5, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.147326}
{'[0, 0, 0, 3, 5, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.14764}
{'[0, 0, 0, 3, 5, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.147257}
{'[0, 0, 0, 3, 5, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.147287}
{'[0, 0, 0, 3, 5, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.147164}

out:
 ["{'[0, 0, 0, 3, 5, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.175726}", "{'[0, 0, 0, 3, 5, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.175522}", "{'[0, 0, 0, 3, 5, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.175486}", "{'[0, 0, 0, 3, 5, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.166753}", "{'[0, 0, 0, 3, 5, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.147338}", "{'[0, 0, 0, 3, 5, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.146976}", "{'[0, 0, 0, 3, 5, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.147041}", "{'[0, 0, 0, 3, 5, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.146941}", "{'[0, 0, 0, 3, 5, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.147035}", "{'[0, 0, 0, 3, 5, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.146952}", "{'[0, 0, 0, 3, 5, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.147024}", "{'[0, 0, 0, 3, 5, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.147409}", "{'[0, 0, 0, 3, 5, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.147229}", "{'[0, 0, 0, 3, 5, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.147057}", "{'[0, 0, 0, 3, 5, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.147029}", "{'[0, 0, 0, 3, 5, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.147142}", "{'[0, 0, 0, 3, 5, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.147232}", "{'[0, 0, 0, 3, 5, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.147123}", "{'[0, 0, 0, 3, 5, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.147472}", "{'[0, 0, 0, 3, 5, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.147342}", "{'[0, 0, 0, 3, 5, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.147193}", "{'[0, 0, 0, 3, 5, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.147143}", "{'[0, 0, 0, 3, 5, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.147176}", "{'[0, 0, 0, 3, 5, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.147112}", "{'[0, 0, 0, 3, 5, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.147216}", "{'[0, 0, 0, 3, 5, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.147326}", "{'[0, 0, 0, 3, 5, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.14764}", "{'[0, 0, 0, 3, 5, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.147257}", "{'[0, 0, 0, 3, 5, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.147287}", "{'[0, 0, 0, 3, 5, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.147164}"]
returning from 'run': {'[0, 0, 0, 3, 5, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 1]': ([0.175726, 0.175522, 0.175486, 0.166753, 0.147338, 0.146976, 0.147041, 0.146941, 0.147035, 0.146952, 0.147024, 0.147409, 0.147229, 0.147057, 0.147029, 0.147142, 0.147232, 0.147123, 0.147472, 0.147342, 0.147193, 0.147143, 0.147176, 0.147112, 0.147216, 0.147326, 0.14764, 0.147257, 0.147287, 0.147164], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 0, 3, 5, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 1]': ([0.175726, 0.175522, 0.175486, 0.166753, 0.147338, 0.146976, 0.147041, 0.146941, 0.147035, 0.146952, 0.147024, 0.147409, 0.147229, 0.147057, 0.147029, 0.147142, 0.147232, 0.147123, 0.147472, 0.147342, 0.147193, 0.147143, 0.147176, 0.147112, 0.147216, 0.147326, 0.14764, 0.147257, 0.147287, 0.147164], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	5
        Additions: 		1092
        Multiplications: 	312
        Divisions: 		0
        Logical: 		0
        Reads: 			1943
        Writes: 		246
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest60.exe __orio_perftest60.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest60.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest60.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest60.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest60.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	5
        Additions: 		6999
        Multiplications: 	2112
        Divisions: 		0
        Logical: 		0
        Reads: 			10793
        Writes: 		1142
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest61.exe __orio_perftest61.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest61.exe  
Program Test Output: 
{'[0, 5, 0, 3, 6, 5, 0, 0, 29, 0, 27, 1, 2, 0, 0, 0, 1, 1]' : 0.364892}
{'[0, 5, 0, 3, 6, 5, 0, 0, 29, 0, 27, 1, 2, 0, 0, 0, 1, 1]' : 0.337976}
{'[0, 5, 0, 3, 6, 5, 0, 0, 29, 0, 27, 1, 2, 0, 0, 0, 1, 1]' : 0.326021}
{'[0, 5, 0, 3, 6, 5, 0, 0, 29, 0, 27, 1, 2, 0, 0, 0, 1, 1]' : 0.325879}
{'[0, 5, 0, 3, 6, 5, 0, 0, 29, 0, 27, 1, 2, 0, 0, 0, 1, 1]' : 0.326163}
{'[0, 5, 0, 3, 6, 5, 0, 0, 29, 0, 27, 1, 2, 0, 0, 0, 1, 1]' : 0.326476}
{'[0, 5, 0, 3, 6, 5, 0, 0, 29, 0, 27, 1, 2, 0, 0, 0, 1, 1]' : 0.326145}
{'[0, 5, 0, 3, 6, 5, 0, 0, 29, 0, 27, 1, 2, 0, 0, 0, 1, 1]' : 0.326447}
{'[0, 5, 0, 3, 6, 5, 0, 0, 29, 0, 27, 1, 2, 0, 0, 0, 1, 1]' : 0.325884}
{'[0, 5, 0, 3, 6, 5, 0, 0, 29, 0, 27, 1, 2, 0, 0, 0, 1, 1]' : 0.326717}
{'[0, 5, 0, 3, 6, 5, 0, 0, 29, 0, 27, 1, 2, 0, 0, 0, 1, 1]' : 0.325279}
{'[0, 5, 0, 3, 6, 5, 0, 0, 29, 0, 27, 1, 2, 0, 0, 0, 1, 1]' : 0.326118}
{'[0, 5, 0, 3, 6, 5, 0, 0, 29, 0, 27, 1, 2, 0, 0, 0, 1, 1]' : 0.326015}
{'[0, 5, 0, 3, 6, 5, 0, 0, 29, 0, 27, 1, 2, 0, 0, 0, 1, 1]' : 0.326664}
{'[0, 5, 0, 3, 6, 5, 0, 0, 29, 0, 27, 1, 2, 0, 0, 0, 1, 1]' : 0.326105}
{'[0, 5, 0, 3, 6, 5, 0, 0, 29, 0, 27, 1, 2, 0, 0, 0, 1, 1]' : 0.325903}
{'[0, 5, 0, 3, 6, 5, 0, 0, 29, 0, 27, 1, 2, 0, 0, 0, 1, 1]' : 0.32616}
{'[0, 5, 0, 3, 6, 5, 0, 0, 29, 0, 27, 1, 2, 0, 0, 0, 1, 1]' : 0.325975}
{'[0, 5, 0, 3, 6, 5, 0, 0, 29, 0, 27, 1, 2, 0, 0, 0, 1, 1]' : 0.325674}
{'[0, 5, 0, 3, 6, 5, 0, 0, 29, 0, 27, 1, 2, 0, 0, 0, 1, 1]' : 0.325846}
{'[0, 5, 0, 3, 6, 5, 0, 0, 29, 0, 27, 1, 2, 0, 0, 0, 1, 1]' : 0.325936}
{'[0, 5, 0, 3, 6, 5, 0, 0, 29, 0, 27, 1, 2, 0, 0, 0, 1, 1]' : 0.325619}
{'[0, 5, 0, 3, 6, 5, 0, 0, 29, 0, 27, 1, 2, 0, 0, 0, 1, 1]' : 0.326367}
{'[0, 5, 0, 3, 6, 5, 0, 0, 29, 0, 27, 1, 2, 0, 0, 0, 1, 1]' : 0.325658}
{'[0, 5, 0, 3, 6, 5, 0, 0, 29, 0, 27, 1, 2, 0, 0, 0, 1, 1]' : 0.326643}
{'[0, 5, 0, 3, 6, 5, 0, 0, 29, 0, 27, 1, 2, 0, 0, 0, 1, 1]' : 0.32565}
{'[0, 5, 0, 3, 6, 5, 0, 0, 29, 0, 27, 1, 2, 0, 0, 0, 1, 1]' : 0.326146}
{'[0, 5, 0, 3, 6, 5, 0, 0, 29, 0, 27, 1, 2, 0, 0, 0, 1, 1]' : 0.32627}
{'[0, 5, 0, 3, 6, 5, 0, 0, 29, 0, 27, 1, 2, 0, 0, 0, 1, 1]' : 0.325425}
{'[0, 5, 0, 3, 6, 5, 0, 0, 29, 0, 27, 1, 2, 0, 0, 0, 1, 1]' : 0.326505}

out:
 ["{'[0, 5, 0, 3, 6, 5, 0, 0, 29, 0, 27, 1, 2, 0, 0, 0, 1, 1]' : 0.364892}", "{'[0, 5, 0, 3, 6, 5, 0, 0, 29, 0, 27, 1, 2, 0, 0, 0, 1, 1]' : 0.337976}", "{'[0, 5, 0, 3, 6, 5, 0, 0, 29, 0, 27, 1, 2, 0, 0, 0, 1, 1]' : 0.326021}", "{'[0, 5, 0, 3, 6, 5, 0, 0, 29, 0, 27, 1, 2, 0, 0, 0, 1, 1]' : 0.325879}", "{'[0, 5, 0, 3, 6, 5, 0, 0, 29, 0, 27, 1, 2, 0, 0, 0, 1, 1]' : 0.326163}", "{'[0, 5, 0, 3, 6, 5, 0, 0, 29, 0, 27, 1, 2, 0, 0, 0, 1, 1]' : 0.326476}", "{'[0, 5, 0, 3, 6, 5, 0, 0, 29, 0, 27, 1, 2, 0, 0, 0, 1, 1]' : 0.326145}", "{'[0, 5, 0, 3, 6, 5, 0, 0, 29, 0, 27, 1, 2, 0, 0, 0, 1, 1]' : 0.326447}", "{'[0, 5, 0, 3, 6, 5, 0, 0, 29, 0, 27, 1, 2, 0, 0, 0, 1, 1]' : 0.325884}", "{'[0, 5, 0, 3, 6, 5, 0, 0, 29, 0, 27, 1, 2, 0, 0, 0, 1, 1]' : 0.326717}", "{'[0, 5, 0, 3, 6, 5, 0, 0, 29, 0, 27, 1, 2, 0, 0, 0, 1, 1]' : 0.325279}", "{'[0, 5, 0, 3, 6, 5, 0, 0, 29, 0, 27, 1, 2, 0, 0, 0, 1, 1]' : 0.326118}", "{'[0, 5, 0, 3, 6, 5, 0, 0, 29, 0, 27, 1, 2, 0, 0, 0, 1, 1]' : 0.326015}", "{'[0, 5, 0, 3, 6, 5, 0, 0, 29, 0, 27, 1, 2, 0, 0, 0, 1, 1]' : 0.326664}", "{'[0, 5, 0, 3, 6, 5, 0, 0, 29, 0, 27, 1, 2, 0, 0, 0, 1, 1]' : 0.326105}", "{'[0, 5, 0, 3, 6, 5, 0, 0, 29, 0, 27, 1, 2, 0, 0, 0, 1, 1]' : 0.325903}", "{'[0, 5, 0, 3, 6, 5, 0, 0, 29, 0, 27, 1, 2, 0, 0, 0, 1, 1]' : 0.32616}", "{'[0, 5, 0, 3, 6, 5, 0, 0, 29, 0, 27, 1, 2, 0, 0, 0, 1, 1]' : 0.325975}", "{'[0, 5, 0, 3, 6, 5, 0, 0, 29, 0, 27, 1, 2, 0, 0, 0, 1, 1]' : 0.325674}", "{'[0, 5, 0, 3, 6, 5, 0, 0, 29, 0, 27, 1, 2, 0, 0, 0, 1, 1]' : 0.325846}", "{'[0, 5, 0, 3, 6, 5, 0, 0, 29, 0, 27, 1, 2, 0, 0, 0, 1, 1]' : 0.325936}", "{'[0, 5, 0, 3, 6, 5, 0, 0, 29, 0, 27, 1, 2, 0, 0, 0, 1, 1]' : 0.325619}", "{'[0, 5, 0, 3, 6, 5, 0, 0, 29, 0, 27, 1, 2, 0, 0, 0, 1, 1]' : 0.326367}", "{'[0, 5, 0, 3, 6, 5, 0, 0, 29, 0, 27, 1, 2, 0, 0, 0, 1, 1]' : 0.325658}", "{'[0, 5, 0, 3, 6, 5, 0, 0, 29, 0, 27, 1, 2, 0, 0, 0, 1, 1]' : 0.326643}", "{'[0, 5, 0, 3, 6, 5, 0, 0, 29, 0, 27, 1, 2, 0, 0, 0, 1, 1]' : 0.32565}", "{'[0, 5, 0, 3, 6, 5, 0, 0, 29, 0, 27, 1, 2, 0, 0, 0, 1, 1]' : 0.326146}", "{'[0, 5, 0, 3, 6, 5, 0, 0, 29, 0, 27, 1, 2, 0, 0, 0, 1, 1]' : 0.32627}", "{'[0, 5, 0, 3, 6, 5, 0, 0, 29, 0, 27, 1, 2, 0, 0, 0, 1, 1]' : 0.325425}", "{'[0, 5, 0, 3, 6, 5, 0, 0, 29, 0, 27, 1, 2, 0, 0, 0, 1, 1]' : 0.326505}"]
returning from 'run': {'[0, 5, 0, 3, 6, 5, 0, 0, 29, 0, 27, 1, 2, 0, 0, 0, 1, 1]': ([0.364892, 0.337976, 0.326021, 0.325879, 0.326163, 0.326476, 0.326145, 0.326447, 0.325884, 0.326717, 0.325279, 0.326118, 0.326015, 0.326664, 0.326105, 0.325903, 0.32616, 0.325975, 0.325674, 0.325846, 0.325936, 0.325619, 0.326367, 0.325658, 0.326643, 0.32565, 0.326146, 0.32627, 0.325425, 0.326505], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 5, 0, 3, 6, 5, 0, 0, 29, 0, 27, 1, 2, 0, 0, 0, 1, 1]': ([0.364892, 0.337976, 0.326021, 0.325879, 0.326163, 0.326476, 0.326145, 0.326447, 0.325884, 0.326717, 0.325279, 0.326118, 0.326015, 0.326664, 0.326105, 0.325903, 0.32616, 0.325975, 0.325674, 0.325846, 0.325936, 0.325619, 0.326367, 0.325658, 0.326643, 0.32565, 0.326146, 0.32627, 0.325425, 0.326505], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	5
        Additions: 		1953
        Multiplications: 	640
        Divisions: 		0
        Logical: 		0
        Reads: 			3447
        Writes: 		400
        Comparisons:		25
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest62.exe __orio_perftest62.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest62.exe  
Program Test Output: 
{'[0, 2, 6, 3, 1, 0, 0, 0, 4, 3, 29, 0, 0, 2, 0, 0, 0, 1]' : 0.109397}
{'[0, 2, 6, 3, 1, 0, 0, 0, 4, 3, 29, 0, 0, 2, 0, 0, 0, 1]' : 0.11284}
{'[0, 2, 6, 3, 1, 0, 0, 0, 4, 3, 29, 0, 0, 2, 0, 0, 0, 1]' : 0.112811}
{'[0, 2, 6, 3, 1, 0, 0, 0, 4, 3, 29, 0, 0, 2, 0, 0, 0, 1]' : 0.112752}
{'[0, 2, 6, 3, 1, 0, 0, 0, 4, 3, 29, 0, 0, 2, 0, 0, 0, 1]' : 0.113281}
{'[0, 2, 6, 3, 1, 0, 0, 0, 4, 3, 29, 0, 0, 2, 0, 0, 0, 1]' : 0.113132}
{'[0, 2, 6, 3, 1, 0, 0, 0, 4, 3, 29, 0, 0, 2, 0, 0, 0, 1]' : 0.112704}
{'[0, 2, 6, 3, 1, 0, 0, 0, 4, 3, 29, 0, 0, 2, 0, 0, 0, 1]' : 0.112735}
{'[0, 2, 6, 3, 1, 0, 0, 0, 4, 3, 29, 0, 0, 2, 0, 0, 0, 1]' : 0.112779}
{'[0, 2, 6, 3, 1, 0, 0, 0, 4, 3, 29, 0, 0, 2, 0, 0, 0, 1]' : 0.113012}
{'[0, 2, 6, 3, 1, 0, 0, 0, 4, 3, 29, 0, 0, 2, 0, 0, 0, 1]' : 0.112816}
{'[0, 2, 6, 3, 1, 0, 0, 0, 4, 3, 29, 0, 0, 2, 0, 0, 0, 1]' : 0.11276}
{'[0, 2, 6, 3, 1, 0, 0, 0, 4, 3, 29, 0, 0, 2, 0, 0, 0, 1]' : 0.112737}
{'[0, 2, 6, 3, 1, 0, 0, 0, 4, 3, 29, 0, 0, 2, 0, 0, 0, 1]' : 0.112745}
{'[0, 2, 6, 3, 1, 0, 0, 0, 4, 3, 29, 0, 0, 2, 0, 0, 0, 1]' : 0.11313}
{'[0, 2, 6, 3, 1, 0, 0, 0, 4, 3, 29, 0, 0, 2, 0, 0, 0, 1]' : 0.112967}
{'[0, 2, 6, 3, 1, 0, 0, 0, 4, 3, 29, 0, 0, 2, 0, 0, 0, 1]' : 0.112937}
{'[0, 2, 6, 3, 1, 0, 0, 0, 4, 3, 29, 0, 0, 2, 0, 0, 0, 1]' : 0.112761}
{'[0, 2, 6, 3, 1, 0, 0, 0, 4, 3, 29, 0, 0, 2, 0, 0, 0, 1]' : 0.11281}
{'[0, 2, 6, 3, 1, 0, 0, 0, 4, 3, 29, 0, 0, 2, 0, 0, 0, 1]' : 0.11285}
{'[0, 2, 6, 3, 1, 0, 0, 0, 4, 3, 29, 0, 0, 2, 0, 0, 0, 1]' : 0.112773}
{'[0, 2, 6, 3, 1, 0, 0, 0, 4, 3, 29, 0, 0, 2, 0, 0, 0, 1]' : 0.112971}
{'[0, 2, 6, 3, 1, 0, 0, 0, 4, 3, 29, 0, 0, 2, 0, 0, 0, 1]' : 0.112886}
{'[0, 2, 6, 3, 1, 0, 0, 0, 4, 3, 29, 0, 0, 2, 0, 0, 0, 1]' : 0.113077}
{'[0, 2, 6, 3, 1, 0, 0, 0, 4, 3, 29, 0, 0, 2, 0, 0, 0, 1]' : 0.113216}
{'[0, 2, 6, 3, 1, 0, 0, 0, 4, 3, 29, 0, 0, 2, 0, 0, 0, 1]' : 0.112821}
{'[0, 2, 6, 3, 1, 0, 0, 0, 4, 3, 29, 0, 0, 2, 0, 0, 0, 1]' : 0.112719}
{'[0, 2, 6, 3, 1, 0, 0, 0, 4, 3, 29, 0, 0, 2, 0, 0, 0, 1]' : 0.112804}
{'[0, 2, 6, 3, 1, 0, 0, 0, 4, 3, 29, 0, 0, 2, 0, 0, 0, 1]' : 0.112858}
{'[0, 2, 6, 3, 1, 0, 0, 0, 4, 3, 29, 0, 0, 2, 0, 0, 0, 1]' : 0.11285}

out:
 ["{'[0, 2, 6, 3, 1, 0, 0, 0, 4, 3, 29, 0, 0, 2, 0, 0, 0, 1]' : 0.109397}", "{'[0, 2, 6, 3, 1, 0, 0, 0, 4, 3, 29, 0, 0, 2, 0, 0, 0, 1]' : 0.11284}", "{'[0, 2, 6, 3, 1, 0, 0, 0, 4, 3, 29, 0, 0, 2, 0, 0, 0, 1]' : 0.112811}", "{'[0, 2, 6, 3, 1, 0, 0, 0, 4, 3, 29, 0, 0, 2, 0, 0, 0, 1]' : 0.112752}", "{'[0, 2, 6, 3, 1, 0, 0, 0, 4, 3, 29, 0, 0, 2, 0, 0, 0, 1]' : 0.113281}", "{'[0, 2, 6, 3, 1, 0, 0, 0, 4, 3, 29, 0, 0, 2, 0, 0, 0, 1]' : 0.113132}", "{'[0, 2, 6, 3, 1, 0, 0, 0, 4, 3, 29, 0, 0, 2, 0, 0, 0, 1]' : 0.112704}", "{'[0, 2, 6, 3, 1, 0, 0, 0, 4, 3, 29, 0, 0, 2, 0, 0, 0, 1]' : 0.112735}", "{'[0, 2, 6, 3, 1, 0, 0, 0, 4, 3, 29, 0, 0, 2, 0, 0, 0, 1]' : 0.112779}", "{'[0, 2, 6, 3, 1, 0, 0, 0, 4, 3, 29, 0, 0, 2, 0, 0, 0, 1]' : 0.113012}", "{'[0, 2, 6, 3, 1, 0, 0, 0, 4, 3, 29, 0, 0, 2, 0, 0, 0, 1]' : 0.112816}", "{'[0, 2, 6, 3, 1, 0, 0, 0, 4, 3, 29, 0, 0, 2, 0, 0, 0, 1]' : 0.11276}", "{'[0, 2, 6, 3, 1, 0, 0, 0, 4, 3, 29, 0, 0, 2, 0, 0, 0, 1]' : 0.112737}", "{'[0, 2, 6, 3, 1, 0, 0, 0, 4, 3, 29, 0, 0, 2, 0, 0, 0, 1]' : 0.112745}", "{'[0, 2, 6, 3, 1, 0, 0, 0, 4, 3, 29, 0, 0, 2, 0, 0, 0, 1]' : 0.11313}", "{'[0, 2, 6, 3, 1, 0, 0, 0, 4, 3, 29, 0, 0, 2, 0, 0, 0, 1]' : 0.112967}", "{'[0, 2, 6, 3, 1, 0, 0, 0, 4, 3, 29, 0, 0, 2, 0, 0, 0, 1]' : 0.112937}", "{'[0, 2, 6, 3, 1, 0, 0, 0, 4, 3, 29, 0, 0, 2, 0, 0, 0, 1]' : 0.112761}", "{'[0, 2, 6, 3, 1, 0, 0, 0, 4, 3, 29, 0, 0, 2, 0, 0, 0, 1]' : 0.11281}", "{'[0, 2, 6, 3, 1, 0, 0, 0, 4, 3, 29, 0, 0, 2, 0, 0, 0, 1]' : 0.11285}", "{'[0, 2, 6, 3, 1, 0, 0, 0, 4, 3, 29, 0, 0, 2, 0, 0, 0, 1]' : 0.112773}", "{'[0, 2, 6, 3, 1, 0, 0, 0, 4, 3, 29, 0, 0, 2, 0, 0, 0, 1]' : 0.112971}", "{'[0, 2, 6, 3, 1, 0, 0, 0, 4, 3, 29, 0, 0, 2, 0, 0, 0, 1]' : 0.112886}", "{'[0, 2, 6, 3, 1, 0, 0, 0, 4, 3, 29, 0, 0, 2, 0, 0, 0, 1]' : 0.113077}", "{'[0, 2, 6, 3, 1, 0, 0, 0, 4, 3, 29, 0, 0, 2, 0, 0, 0, 1]' : 0.113216}", "{'[0, 2, 6, 3, 1, 0, 0, 0, 4, 3, 29, 0, 0, 2, 0, 0, 0, 1]' : 0.112821}", "{'[0, 2, 6, 3, 1, 0, 0, 0, 4, 3, 29, 0, 0, 2, 0, 0, 0, 1]' : 0.112719}", "{'[0, 2, 6, 3, 1, 0, 0, 0, 4, 3, 29, 0, 0, 2, 0, 0, 0, 1]' : 0.112804}", "{'[0, 2, 6, 3, 1, 0, 0, 0, 4, 3, 29, 0, 0, 2, 0, 0, 0, 1]' : 0.112858}", "{'[0, 2, 6, 3, 1, 0, 0, 0, 4, 3, 29, 0, 0, 2, 0, 0, 0, 1]' : 0.11285}"]
returning from 'run': {'[0, 2, 6, 3, 1, 0, 0, 0, 4, 3, 29, 0, 0, 2, 0, 0, 0, 1]': ([0.109397, 0.11284, 0.112811, 0.112752, 0.113281, 0.113132, 0.112704, 0.112735, 0.112779, 0.113012, 0.112816, 0.11276, 0.112737, 0.112745, 0.11313, 0.112967, 0.112937, 0.112761, 0.11281, 0.11285, 0.112773, 0.112971, 0.112886, 0.113077, 0.113216, 0.112821, 0.112719, 0.112804, 0.112858, 0.11285], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 6, 3, 1, 0, 0, 0, 4, 3, 29, 0, 0, 2, 0, 0, 0, 1]': ([0.109397, 0.11284, 0.112811, 0.112752, 0.113281, 0.113132, 0.112704, 0.112735, 0.112779, 0.113012, 0.112816, 0.11276, 0.112737, 0.112745, 0.11313, 0.112967, 0.112937, 0.112761, 0.11281, 0.11285, 0.112773, 0.112971, 0.112886, 0.113077, 0.113216, 0.112821, 0.112719, 0.112804, 0.112858, 0.11285], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	23
        Max loop nest depth: 	5
        Additions: 		2869
        Multiplications: 	684
        Divisions: 		0
        Logical: 		0
        Reads: 			4267
        Writes: 		418
        Comparisons:		23
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest63.exe __orio_perftest63.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest63.exe  
Program Test Output: 
{'[0, 6, 5, 3, 6, 0, 1, 1, 9, 0, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.100108}
{'[0, 6, 5, 3, 6, 0, 1, 1, 9, 0, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.100622}
{'[0, 6, 5, 3, 6, 0, 1, 1, 9, 0, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.0997851}
{'[0, 6, 5, 3, 6, 0, 1, 1, 9, 0, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.0998921}
{'[0, 6, 5, 3, 6, 0, 1, 1, 9, 0, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.100313}
{'[0, 6, 5, 3, 6, 0, 1, 1, 9, 0, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.100417}
{'[0, 6, 5, 3, 6, 0, 1, 1, 9, 0, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.0997601}
{'[0, 6, 5, 3, 6, 0, 1, 1, 9, 0, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.100047}
{'[0, 6, 5, 3, 6, 0, 1, 1, 9, 0, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.0999751}
{'[0, 6, 5, 3, 6, 0, 1, 1, 9, 0, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.100033}
{'[0, 6, 5, 3, 6, 0, 1, 1, 9, 0, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.0998192}
{'[0, 6, 5, 3, 6, 0, 1, 1, 9, 0, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.0999351}
{'[0, 6, 5, 3, 6, 0, 1, 1, 9, 0, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.100032}
{'[0, 6, 5, 3, 6, 0, 1, 1, 9, 0, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.09989}
{'[0, 6, 5, 3, 6, 0, 1, 1, 9, 0, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.099859}
{'[0, 6, 5, 3, 6, 0, 1, 1, 9, 0, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.100067}
{'[0, 6, 5, 3, 6, 0, 1, 1, 9, 0, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.100132}
{'[0, 6, 5, 3, 6, 0, 1, 1, 9, 0, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.0999529}
{'[0, 6, 5, 3, 6, 0, 1, 1, 9, 0, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.099788}
{'[0, 6, 5, 3, 6, 0, 1, 1, 9, 0, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.0999479}
{'[0, 6, 5, 3, 6, 0, 1, 1, 9, 0, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.100141}
{'[0, 6, 5, 3, 6, 0, 1, 1, 9, 0, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.100099}
{'[0, 6, 5, 3, 6, 0, 1, 1, 9, 0, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.099859}
{'[0, 6, 5, 3, 6, 0, 1, 1, 9, 0, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.099879}
{'[0, 6, 5, 3, 6, 0, 1, 1, 9, 0, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.100321}
{'[0, 6, 5, 3, 6, 0, 1, 1, 9, 0, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.100068}
{'[0, 6, 5, 3, 6, 0, 1, 1, 9, 0, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.100164}
{'[0, 6, 5, 3, 6, 0, 1, 1, 9, 0, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.10037}
{'[0, 6, 5, 3, 6, 0, 1, 1, 9, 0, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.100024}
{'[0, 6, 5, 3, 6, 0, 1, 1, 9, 0, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.099987}

out:
 ["{'[0, 6, 5, 3, 6, 0, 1, 1, 9, 0, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.100108}", "{'[0, 6, 5, 3, 6, 0, 1, 1, 9, 0, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.100622}", "{'[0, 6, 5, 3, 6, 0, 1, 1, 9, 0, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.0997851}", "{'[0, 6, 5, 3, 6, 0, 1, 1, 9, 0, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.0998921}", "{'[0, 6, 5, 3, 6, 0, 1, 1, 9, 0, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.100313}", "{'[0, 6, 5, 3, 6, 0, 1, 1, 9, 0, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.100417}", "{'[0, 6, 5, 3, 6, 0, 1, 1, 9, 0, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.0997601}", "{'[0, 6, 5, 3, 6, 0, 1, 1, 9, 0, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.100047}", "{'[0, 6, 5, 3, 6, 0, 1, 1, 9, 0, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.0999751}", "{'[0, 6, 5, 3, 6, 0, 1, 1, 9, 0, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.100033}", "{'[0, 6, 5, 3, 6, 0, 1, 1, 9, 0, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.0998192}", "{'[0, 6, 5, 3, 6, 0, 1, 1, 9, 0, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.0999351}", "{'[0, 6, 5, 3, 6, 0, 1, 1, 9, 0, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.100032}", "{'[0, 6, 5, 3, 6, 0, 1, 1, 9, 0, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.09989}", "{'[0, 6, 5, 3, 6, 0, 1, 1, 9, 0, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.099859}", "{'[0, 6, 5, 3, 6, 0, 1, 1, 9, 0, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.100067}", "{'[0, 6, 5, 3, 6, 0, 1, 1, 9, 0, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.100132}", "{'[0, 6, 5, 3, 6, 0, 1, 1, 9, 0, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.0999529}", "{'[0, 6, 5, 3, 6, 0, 1, 1, 9, 0, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.099788}", "{'[0, 6, 5, 3, 6, 0, 1, 1, 9, 0, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.0999479}", "{'[0, 6, 5, 3, 6, 0, 1, 1, 9, 0, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.100141}", "{'[0, 6, 5, 3, 6, 0, 1, 1, 9, 0, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.100099}", "{'[0, 6, 5, 3, 6, 0, 1, 1, 9, 0, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.099859}", "{'[0, 6, 5, 3, 6, 0, 1, 1, 9, 0, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.099879}", "{'[0, 6, 5, 3, 6, 0, 1, 1, 9, 0, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.100321}", "{'[0, 6, 5, 3, 6, 0, 1, 1, 9, 0, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.100068}", "{'[0, 6, 5, 3, 6, 0, 1, 1, 9, 0, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.100164}", "{'[0, 6, 5, 3, 6, 0, 1, 1, 9, 0, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.10037}", "{'[0, 6, 5, 3, 6, 0, 1, 1, 9, 0, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.100024}", "{'[0, 6, 5, 3, 6, 0, 1, 1, 9, 0, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.099987}"]
returning from 'run': {'[0, 6, 5, 3, 6, 0, 1, 1, 9, 0, 0, 28, 1, 1, 0, 0, 1, 1]': ([0.100108, 0.100622, 0.0997851, 0.0998921, 0.100313, 0.100417, 0.0997601, 0.100047, 0.0999751, 0.100033, 0.0998192, 0.0999351, 0.100032, 0.09989, 0.099859, 0.100067, 0.100132, 0.0999529, 0.099788, 0.0999479, 0.100141, 0.100099, 0.099859, 0.099879, 0.100321, 0.100068, 0.100164, 0.10037, 0.100024, 0.099987], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 5, 3, 6, 0, 1, 1, 9, 0, 0, 28, 1, 1, 0, 0, 1, 1]': ([0.100108, 0.100622, 0.0997851, 0.0998921, 0.100313, 0.100417, 0.0997601, 0.100047, 0.0999751, 0.100033, 0.0998192, 0.0999351, 0.100032, 0.09989, 0.099859, 0.100067, 0.100132, 0.0999529, 0.099788, 0.0999479, 0.100141, 0.100099, 0.099859, 0.099879, 0.100321, 0.100068, 0.100164, 0.10037, 0.100024, 0.099987], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	5
        Additions: 		1600
        Multiplications: 	492
        Divisions: 		0
        Logical: 		0
        Reads: 			2693
        Writes: 		334
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest64.exe __orio_perftest64.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest64.exe  
Program Test Output: 
{'[0, 0, 6, 3, 2, 6, 0, 0, 29, 4, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.146763}
{'[0, 0, 6, 3, 2, 6, 0, 0, 29, 4, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.146648}
{'[0, 0, 6, 3, 2, 6, 0, 0, 29, 4, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.146668}
{'[0, 0, 6, 3, 2, 6, 0, 0, 29, 4, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.136726}
{'[0, 0, 6, 3, 2, 6, 0, 0, 29, 4, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.124634}
{'[0, 0, 6, 3, 2, 6, 0, 0, 29, 4, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.124528}
{'[0, 0, 6, 3, 2, 6, 0, 0, 29, 4, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.124927}
{'[0, 0, 6, 3, 2, 6, 0, 0, 29, 4, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.124497}
{'[0, 0, 6, 3, 2, 6, 0, 0, 29, 4, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.124491}
{'[0, 0, 6, 3, 2, 6, 0, 0, 29, 4, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.12455}
{'[0, 0, 6, 3, 2, 6, 0, 0, 29, 4, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.124748}
{'[0, 0, 6, 3, 2, 6, 0, 0, 29, 4, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.124835}
{'[0, 0, 6, 3, 2, 6, 0, 0, 29, 4, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.12481}
{'[0, 0, 6, 3, 2, 6, 0, 0, 29, 4, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.124676}
{'[0, 0, 6, 3, 2, 6, 0, 0, 29, 4, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.124529}
{'[0, 0, 6, 3, 2, 6, 0, 0, 29, 4, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.124702}
{'[0, 0, 6, 3, 2, 6, 0, 0, 29, 4, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.124451}
{'[0, 0, 6, 3, 2, 6, 0, 0, 29, 4, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.124545}
{'[0, 0, 6, 3, 2, 6, 0, 0, 29, 4, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.124773}
{'[0, 0, 6, 3, 2, 6, 0, 0, 29, 4, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.124778}
{'[0, 0, 6, 3, 2, 6, 0, 0, 29, 4, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.124953}
{'[0, 0, 6, 3, 2, 6, 0, 0, 29, 4, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.124551}
{'[0, 0, 6, 3, 2, 6, 0, 0, 29, 4, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.124903}
{'[0, 0, 6, 3, 2, 6, 0, 0, 29, 4, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.124798}
{'[0, 0, 6, 3, 2, 6, 0, 0, 29, 4, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.124686}
{'[0, 0, 6, 3, 2, 6, 0, 0, 29, 4, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.124525}
{'[0, 0, 6, 3, 2, 6, 0, 0, 29, 4, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.124524}
{'[0, 0, 6, 3, 2, 6, 0, 0, 29, 4, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.124611}
{'[0, 0, 6, 3, 2, 6, 0, 0, 29, 4, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.125204}
{'[0, 0, 6, 3, 2, 6, 0, 0, 29, 4, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.124856}

out:
 ["{'[0, 0, 6, 3, 2, 6, 0, 0, 29, 4, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.146763}", "{'[0, 0, 6, 3, 2, 6, 0, 0, 29, 4, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.146648}", "{'[0, 0, 6, 3, 2, 6, 0, 0, 29, 4, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.146668}", "{'[0, 0, 6, 3, 2, 6, 0, 0, 29, 4, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.136726}", "{'[0, 0, 6, 3, 2, 6, 0, 0, 29, 4, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.124634}", "{'[0, 0, 6, 3, 2, 6, 0, 0, 29, 4, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.124528}", "{'[0, 0, 6, 3, 2, 6, 0, 0, 29, 4, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.124927}", "{'[0, 0, 6, 3, 2, 6, 0, 0, 29, 4, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.124497}", "{'[0, 0, 6, 3, 2, 6, 0, 0, 29, 4, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.124491}", "{'[0, 0, 6, 3, 2, 6, 0, 0, 29, 4, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.12455}", "{'[0, 0, 6, 3, 2, 6, 0, 0, 29, 4, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.124748}", "{'[0, 0, 6, 3, 2, 6, 0, 0, 29, 4, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.124835}", "{'[0, 0, 6, 3, 2, 6, 0, 0, 29, 4, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.12481}", "{'[0, 0, 6, 3, 2, 6, 0, 0, 29, 4, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.124676}", "{'[0, 0, 6, 3, 2, 6, 0, 0, 29, 4, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.124529}", "{'[0, 0, 6, 3, 2, 6, 0, 0, 29, 4, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.124702}", "{'[0, 0, 6, 3, 2, 6, 0, 0, 29, 4, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.124451}", "{'[0, 0, 6, 3, 2, 6, 0, 0, 29, 4, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.124545}", "{'[0, 0, 6, 3, 2, 6, 0, 0, 29, 4, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.124773}", "{'[0, 0, 6, 3, 2, 6, 0, 0, 29, 4, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.124778}", "{'[0, 0, 6, 3, 2, 6, 0, 0, 29, 4, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.124953}", "{'[0, 0, 6, 3, 2, 6, 0, 0, 29, 4, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.124551}", "{'[0, 0, 6, 3, 2, 6, 0, 0, 29, 4, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.124903}", "{'[0, 0, 6, 3, 2, 6, 0, 0, 29, 4, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.124798}", "{'[0, 0, 6, 3, 2, 6, 0, 0, 29, 4, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.124686}", "{'[0, 0, 6, 3, 2, 6, 0, 0, 29, 4, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.124525}", "{'[0, 0, 6, 3, 2, 6, 0, 0, 29, 4, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.124524}", "{'[0, 0, 6, 3, 2, 6, 0, 0, 29, 4, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.124611}", "{'[0, 0, 6, 3, 2, 6, 0, 0, 29, 4, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.125204}", "{'[0, 0, 6, 3, 2, 6, 0, 0, 29, 4, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.124856}"]
returning from 'run': {'[0, 0, 6, 3, 2, 6, 0, 0, 29, 4, 6, 0, 0, 0, 2, 0, 1, 1]': ([0.146763, 0.146648, 0.146668, 0.136726, 0.124634, 0.124528, 0.124927, 0.124497, 0.124491, 0.12455, 0.124748, 0.124835, 0.12481, 0.124676, 0.124529, 0.124702, 0.124451, 0.124545, 0.124773, 0.124778, 0.124953, 0.124551, 0.124903, 0.124798, 0.124686, 0.124525, 0.124524, 0.124611, 0.125204, 0.124856], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 6, 3, 2, 6, 0, 0, 29, 4, 6, 0, 0, 0, 2, 0, 1, 1]': ([0.146763, 0.146648, 0.146668, 0.136726, 0.124634, 0.124528, 0.124927, 0.124497, 0.124491, 0.12455, 0.124748, 0.124835, 0.12481, 0.124676, 0.124529, 0.124702, 0.124451, 0.124545, 0.124773, 0.124778, 0.124953, 0.124551, 0.124903, 0.124798, 0.124686, 0.124525, 0.124524, 0.124611, 0.125204, 0.124856], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	5
        Additions: 		12973
        Multiplications: 	3844
        Divisions: 		0
        Logical: 		0
        Reads: 			19497
        Writes: 		2032
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest65.exe __orio_perftest65.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest65.exe  
Program Test Output: 
{'[0, 5, 2, 3, 0, 5, 0, 0, 29, 29, 0, 27, 0, 2, 0, 0, 0, 1]' : 0.200657}
{'[0, 5, 2, 3, 0, 5, 0, 0, 29, 29, 0, 27, 0, 2, 0, 0, 0, 1]' : 0.206367}
{'[0, 5, 2, 3, 0, 5, 0, 0, 29, 29, 0, 27, 0, 2, 0, 0, 0, 1]' : 0.19646}
{'[0, 5, 2, 3, 0, 5, 0, 0, 29, 29, 0, 27, 0, 2, 0, 0, 0, 1]' : 0.18366}
{'[0, 5, 2, 3, 0, 5, 0, 0, 29, 29, 0, 27, 0, 2, 0, 0, 0, 1]' : 0.182112}
{'[0, 5, 2, 3, 0, 5, 0, 0, 29, 29, 0, 27, 0, 2, 0, 0, 0, 1]' : 0.181605}
{'[0, 5, 2, 3, 0, 5, 0, 0, 29, 29, 0, 27, 0, 2, 0, 0, 0, 1]' : 0.182475}
{'[0, 5, 2, 3, 0, 5, 0, 0, 29, 29, 0, 27, 0, 2, 0, 0, 0, 1]' : 0.177528}
{'[0, 5, 2, 3, 0, 5, 0, 0, 29, 29, 0, 27, 0, 2, 0, 0, 0, 1]' : 0.178171}
{'[0, 5, 2, 3, 0, 5, 0, 0, 29, 29, 0, 27, 0, 2, 0, 0, 0, 1]' : 0.183039}
{'[0, 5, 2, 3, 0, 5, 0, 0, 29, 29, 0, 27, 0, 2, 0, 0, 0, 1]' : 0.180873}
{'[0, 5, 2, 3, 0, 5, 0, 0, 29, 29, 0, 27, 0, 2, 0, 0, 0, 1]' : 0.182683}
{'[0, 5, 2, 3, 0, 5, 0, 0, 29, 29, 0, 27, 0, 2, 0, 0, 0, 1]' : 0.177396}
{'[0, 5, 2, 3, 0, 5, 0, 0, 29, 29, 0, 27, 0, 2, 0, 0, 0, 1]' : 0.18319}
{'[0, 5, 2, 3, 0, 5, 0, 0, 29, 29, 0, 27, 0, 2, 0, 0, 0, 1]' : 0.180711}
{'[0, 5, 2, 3, 0, 5, 0, 0, 29, 29, 0, 27, 0, 2, 0, 0, 0, 1]' : 0.182482}
{'[0, 5, 2, 3, 0, 5, 0, 0, 29, 29, 0, 27, 0, 2, 0, 0, 0, 1]' : 0.179854}
{'[0, 5, 2, 3, 0, 5, 0, 0, 29, 29, 0, 27, 0, 2, 0, 0, 0, 1]' : 0.180922}
{'[0, 5, 2, 3, 0, 5, 0, 0, 29, 29, 0, 27, 0, 2, 0, 0, 0, 1]' : 0.18004}
{'[0, 5, 2, 3, 0, 5, 0, 0, 29, 29, 0, 27, 0, 2, 0, 0, 0, 1]' : 0.181946}
{'[0, 5, 2, 3, 0, 5, 0, 0, 29, 29, 0, 27, 0, 2, 0, 0, 0, 1]' : 0.183351}
{'[0, 5, 2, 3, 0, 5, 0, 0, 29, 29, 0, 27, 0, 2, 0, 0, 0, 1]' : 0.178936}
{'[0, 5, 2, 3, 0, 5, 0, 0, 29, 29, 0, 27, 0, 2, 0, 0, 0, 1]' : 0.175931}
{'[0, 5, 2, 3, 0, 5, 0, 0, 29, 29, 0, 27, 0, 2, 0, 0, 0, 1]' : 0.1824}
{'[0, 5, 2, 3, 0, 5, 0, 0, 29, 29, 0, 27, 0, 2, 0, 0, 0, 1]' : 0.181872}
{'[0, 5, 2, 3, 0, 5, 0, 0, 29, 29, 0, 27, 0, 2, 0, 0, 0, 1]' : 0.188294}
{'[0, 5, 2, 3, 0, 5, 0, 0, 29, 29, 0, 27, 0, 2, 0, 0, 0, 1]' : 0.185669}
{'[0, 5, 2, 3, 0, 5, 0, 0, 29, 29, 0, 27, 0, 2, 0, 0, 0, 1]' : 0.184702}
{'[0, 5, 2, 3, 0, 5, 0, 0, 29, 29, 0, 27, 0, 2, 0, 0, 0, 1]' : 0.180878}
{'[0, 5, 2, 3, 0, 5, 0, 0, 29, 29, 0, 27, 0, 2, 0, 0, 0, 1]' : 0.181272}

out:
 ["{'[0, 5, 2, 3, 0, 5, 0, 0, 29, 29, 0, 27, 0, 2, 0, 0, 0, 1]' : 0.200657}", "{'[0, 5, 2, 3, 0, 5, 0, 0, 29, 29, 0, 27, 0, 2, 0, 0, 0, 1]' : 0.206367}", "{'[0, 5, 2, 3, 0, 5, 0, 0, 29, 29, 0, 27, 0, 2, 0, 0, 0, 1]' : 0.19646}", "{'[0, 5, 2, 3, 0, 5, 0, 0, 29, 29, 0, 27, 0, 2, 0, 0, 0, 1]' : 0.18366}", "{'[0, 5, 2, 3, 0, 5, 0, 0, 29, 29, 0, 27, 0, 2, 0, 0, 0, 1]' : 0.182112}", "{'[0, 5, 2, 3, 0, 5, 0, 0, 29, 29, 0, 27, 0, 2, 0, 0, 0, 1]' : 0.181605}", "{'[0, 5, 2, 3, 0, 5, 0, 0, 29, 29, 0, 27, 0, 2, 0, 0, 0, 1]' : 0.182475}", "{'[0, 5, 2, 3, 0, 5, 0, 0, 29, 29, 0, 27, 0, 2, 0, 0, 0, 1]' : 0.177528}", "{'[0, 5, 2, 3, 0, 5, 0, 0, 29, 29, 0, 27, 0, 2, 0, 0, 0, 1]' : 0.178171}", "{'[0, 5, 2, 3, 0, 5, 0, 0, 29, 29, 0, 27, 0, 2, 0, 0, 0, 1]' : 0.183039}", "{'[0, 5, 2, 3, 0, 5, 0, 0, 29, 29, 0, 27, 0, 2, 0, 0, 0, 1]' : 0.180873}", "{'[0, 5, 2, 3, 0, 5, 0, 0, 29, 29, 0, 27, 0, 2, 0, 0, 0, 1]' : 0.182683}", "{'[0, 5, 2, 3, 0, 5, 0, 0, 29, 29, 0, 27, 0, 2, 0, 0, 0, 1]' : 0.177396}", "{'[0, 5, 2, 3, 0, 5, 0, 0, 29, 29, 0, 27, 0, 2, 0, 0, 0, 1]' : 0.18319}", "{'[0, 5, 2, 3, 0, 5, 0, 0, 29, 29, 0, 27, 0, 2, 0, 0, 0, 1]' : 0.180711}", "{'[0, 5, 2, 3, 0, 5, 0, 0, 29, 29, 0, 27, 0, 2, 0, 0, 0, 1]' : 0.182482}", "{'[0, 5, 2, 3, 0, 5, 0, 0, 29, 29, 0, 27, 0, 2, 0, 0, 0, 1]' : 0.179854}", "{'[0, 5, 2, 3, 0, 5, 0, 0, 29, 29, 0, 27, 0, 2, 0, 0, 0, 1]' : 0.180922}", "{'[0, 5, 2, 3, 0, 5, 0, 0, 29, 29, 0, 27, 0, 2, 0, 0, 0, 1]' : 0.18004}", "{'[0, 5, 2, 3, 0, 5, 0, 0, 29, 29, 0, 27, 0, 2, 0, 0, 0, 1]' : 0.181946}", "{'[0, 5, 2, 3, 0, 5, 0, 0, 29, 29, 0, 27, 0, 2, 0, 0, 0, 1]' : 0.183351}", "{'[0, 5, 2, 3, 0, 5, 0, 0, 29, 29, 0, 27, 0, 2, 0, 0, 0, 1]' : 0.178936}", "{'[0, 5, 2, 3, 0, 5, 0, 0, 29, 29, 0, 27, 0, 2, 0, 0, 0, 1]' : 0.175931}", "{'[0, 5, 2, 3, 0, 5, 0, 0, 29, 29, 0, 27, 0, 2, 0, 0, 0, 1]' : 0.1824}", "{'[0, 5, 2, 3, 0, 5, 0, 0, 29, 29, 0, 27, 0, 2, 0, 0, 0, 1]' : 0.181872}", "{'[0, 5, 2, 3, 0, 5, 0, 0, 29, 29, 0, 27, 0, 2, 0, 0, 0, 1]' : 0.188294}", "{'[0, 5, 2, 3, 0, 5, 0, 0, 29, 29, 0, 27, 0, 2, 0, 0, 0, 1]' : 0.185669}", "{'[0, 5, 2, 3, 0, 5, 0, 0, 29, 29, 0, 27, 0, 2, 0, 0, 0, 1]' : 0.184702}", "{'[0, 5, 2, 3, 0, 5, 0, 0, 29, 29, 0, 27, 0, 2, 0, 0, 0, 1]' : 0.180878}", "{'[0, 5, 2, 3, 0, 5, 0, 0, 29, 29, 0, 27, 0, 2, 0, 0, 0, 1]' : 0.181272}"]
returning from 'run': {'[0, 5, 2, 3, 0, 5, 0, 0, 29, 29, 0, 27, 0, 2, 0, 0, 0, 1]': ([0.200657, 0.206367, 0.19646, 0.18366, 0.182112, 0.181605, 0.182475, 0.177528, 0.178171, 0.183039, 0.180873, 0.182683, 0.177396, 0.18319, 0.180711, 0.182482, 0.179854, 0.180922, 0.18004, 0.181946, 0.183351, 0.178936, 0.175931, 0.1824, 0.181872, 0.188294, 0.185669, 0.184702, 0.180878, 0.181272], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 5, 2, 3, 0, 5, 0, 0, 29, 29, 0, 27, 0, 2, 0, 0, 0, 1]': ([0.200657, 0.206367, 0.19646, 0.18366, 0.182112, 0.181605, 0.182475, 0.177528, 0.178171, 0.183039, 0.180873, 0.182683, 0.177396, 0.18319, 0.180711, 0.182482, 0.179854, 0.180922, 0.18004, 0.181946, 0.183351, 0.178936, 0.175931, 0.1824, 0.181872, 0.188294, 0.185669, 0.184702, 0.180878, 0.181272], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = jjj
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		345
        Multiplications: 	102
        Divisions: 		0
        Logical: 		0
        Reads: 			694
        Writes: 		92
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest66.exe __orio_perftest66.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest66.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest66.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest66.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest66.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		371
        Multiplications: 	120
        Divisions: 		0
        Logical: 		0
        Reads: 			789
        Writes: 		120
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest67.exe __orio_perftest67.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest67.exe  
Program Test Output: 
{'[0, 0, 2, 3, 3, 2, 1, 0, 26, 0, 28, 28, 0, 0, 0, 0, 0, 1]' : 0.26047}
{'[0, 0, 2, 3, 3, 2, 1, 0, 26, 0, 28, 28, 0, 0, 0, 0, 0, 1]' : 0.259948}
{'[0, 0, 2, 3, 3, 2, 1, 0, 26, 0, 28, 28, 0, 0, 0, 0, 0, 1]' : 0.221662}
{'[0, 0, 2, 3, 3, 2, 1, 0, 26, 0, 28, 28, 0, 0, 0, 0, 0, 1]' : 0.219227}
{'[0, 0, 2, 3, 3, 2, 1, 0, 26, 0, 28, 28, 0, 0, 0, 0, 0, 1]' : 0.219056}
{'[0, 0, 2, 3, 3, 2, 1, 0, 26, 0, 28, 28, 0, 0, 0, 0, 0, 1]' : 0.219252}
{'[0, 0, 2, 3, 3, 2, 1, 0, 26, 0, 28, 28, 0, 0, 0, 0, 0, 1]' : 0.219479}
{'[0, 0, 2, 3, 3, 2, 1, 0, 26, 0, 28, 28, 0, 0, 0, 0, 0, 1]' : 0.219137}
{'[0, 0, 2, 3, 3, 2, 1, 0, 26, 0, 28, 28, 0, 0, 0, 0, 0, 1]' : 0.219204}
{'[0, 0, 2, 3, 3, 2, 1, 0, 26, 0, 28, 28, 0, 0, 0, 0, 0, 1]' : 0.219087}
{'[0, 0, 2, 3, 3, 2, 1, 0, 26, 0, 28, 28, 0, 0, 0, 0, 0, 1]' : 0.219069}
{'[0, 0, 2, 3, 3, 2, 1, 0, 26, 0, 28, 28, 0, 0, 0, 0, 0, 1]' : 0.219462}
{'[0, 0, 2, 3, 3, 2, 1, 0, 26, 0, 28, 28, 0, 0, 0, 0, 0, 1]' : 0.219033}
{'[0, 0, 2, 3, 3, 2, 1, 0, 26, 0, 28, 28, 0, 0, 0, 0, 0, 1]' : 0.219048}
{'[0, 0, 2, 3, 3, 2, 1, 0, 26, 0, 28, 28, 0, 0, 0, 0, 0, 1]' : 0.219204}
{'[0, 0, 2, 3, 3, 2, 1, 0, 26, 0, 28, 28, 0, 0, 0, 0, 0, 1]' : 0.218976}
{'[0, 0, 2, 3, 3, 2, 1, 0, 26, 0, 28, 28, 0, 0, 0, 0, 0, 1]' : 0.219631}
{'[0, 0, 2, 3, 3, 2, 1, 0, 26, 0, 28, 28, 0, 0, 0, 0, 0, 1]' : 0.219313}
{'[0, 0, 2, 3, 3, 2, 1, 0, 26, 0, 28, 28, 0, 0, 0, 0, 0, 1]' : 0.218946}
{'[0, 0, 2, 3, 3, 2, 1, 0, 26, 0, 28, 28, 0, 0, 0, 0, 0, 1]' : 0.218954}
{'[0, 0, 2, 3, 3, 2, 1, 0, 26, 0, 28, 28, 0, 0, 0, 0, 0, 1]' : 0.21914}
{'[0, 0, 2, 3, 3, 2, 1, 0, 26, 0, 28, 28, 0, 0, 0, 0, 0, 1]' : 0.21942}
{'[0, 0, 2, 3, 3, 2, 1, 0, 26, 0, 28, 28, 0, 0, 0, 0, 0, 1]' : 0.21895}
{'[0, 0, 2, 3, 3, 2, 1, 0, 26, 0, 28, 28, 0, 0, 0, 0, 0, 1]' : 0.218885}
{'[0, 0, 2, 3, 3, 2, 1, 0, 26, 0, 28, 28, 0, 0, 0, 0, 0, 1]' : 0.21903}
{'[0, 0, 2, 3, 3, 2, 1, 0, 26, 0, 28, 28, 0, 0, 0, 0, 0, 1]' : 0.219184}
{'[0, 0, 2, 3, 3, 2, 1, 0, 26, 0, 28, 28, 0, 0, 0, 0, 0, 1]' : 0.219473}
{'[0, 0, 2, 3, 3, 2, 1, 0, 26, 0, 28, 28, 0, 0, 0, 0, 0, 1]' : 0.219031}
{'[0, 0, 2, 3, 3, 2, 1, 0, 26, 0, 28, 28, 0, 0, 0, 0, 0, 1]' : 0.21941}
{'[0, 0, 2, 3, 3, 2, 1, 0, 26, 0, 28, 28, 0, 0, 0, 0, 0, 1]' : 0.218968}

out:
 ["{'[0, 0, 2, 3, 3, 2, 1, 0, 26, 0, 28, 28, 0, 0, 0, 0, 0, 1]' : 0.26047}", "{'[0, 0, 2, 3, 3, 2, 1, 0, 26, 0, 28, 28, 0, 0, 0, 0, 0, 1]' : 0.259948}", "{'[0, 0, 2, 3, 3, 2, 1, 0, 26, 0, 28, 28, 0, 0, 0, 0, 0, 1]' : 0.221662}", "{'[0, 0, 2, 3, 3, 2, 1, 0, 26, 0, 28, 28, 0, 0, 0, 0, 0, 1]' : 0.219227}", "{'[0, 0, 2, 3, 3, 2, 1, 0, 26, 0, 28, 28, 0, 0, 0, 0, 0, 1]' : 0.219056}", "{'[0, 0, 2, 3, 3, 2, 1, 0, 26, 0, 28, 28, 0, 0, 0, 0, 0, 1]' : 0.219252}", "{'[0, 0, 2, 3, 3, 2, 1, 0, 26, 0, 28, 28, 0, 0, 0, 0, 0, 1]' : 0.219479}", "{'[0, 0, 2, 3, 3, 2, 1, 0, 26, 0, 28, 28, 0, 0, 0, 0, 0, 1]' : 0.219137}", "{'[0, 0, 2, 3, 3, 2, 1, 0, 26, 0, 28, 28, 0, 0, 0, 0, 0, 1]' : 0.219204}", "{'[0, 0, 2, 3, 3, 2, 1, 0, 26, 0, 28, 28, 0, 0, 0, 0, 0, 1]' : 0.219087}", "{'[0, 0, 2, 3, 3, 2, 1, 0, 26, 0, 28, 28, 0, 0, 0, 0, 0, 1]' : 0.219069}", "{'[0, 0, 2, 3, 3, 2, 1, 0, 26, 0, 28, 28, 0, 0, 0, 0, 0, 1]' : 0.219462}", "{'[0, 0, 2, 3, 3, 2, 1, 0, 26, 0, 28, 28, 0, 0, 0, 0, 0, 1]' : 0.219033}", "{'[0, 0, 2, 3, 3, 2, 1, 0, 26, 0, 28, 28, 0, 0, 0, 0, 0, 1]' : 0.219048}", "{'[0, 0, 2, 3, 3, 2, 1, 0, 26, 0, 28, 28, 0, 0, 0, 0, 0, 1]' : 0.219204}", "{'[0, 0, 2, 3, 3, 2, 1, 0, 26, 0, 28, 28, 0, 0, 0, 0, 0, 1]' : 0.218976}", "{'[0, 0, 2, 3, 3, 2, 1, 0, 26, 0, 28, 28, 0, 0, 0, 0, 0, 1]' : 0.219631}", "{'[0, 0, 2, 3, 3, 2, 1, 0, 26, 0, 28, 28, 0, 0, 0, 0, 0, 1]' : 0.219313}", "{'[0, 0, 2, 3, 3, 2, 1, 0, 26, 0, 28, 28, 0, 0, 0, 0, 0, 1]' : 0.218946}", "{'[0, 0, 2, 3, 3, 2, 1, 0, 26, 0, 28, 28, 0, 0, 0, 0, 0, 1]' : 0.218954}", "{'[0, 0, 2, 3, 3, 2, 1, 0, 26, 0, 28, 28, 0, 0, 0, 0, 0, 1]' : 0.21914}", "{'[0, 0, 2, 3, 3, 2, 1, 0, 26, 0, 28, 28, 0, 0, 0, 0, 0, 1]' : 0.21942}", "{'[0, 0, 2, 3, 3, 2, 1, 0, 26, 0, 28, 28, 0, 0, 0, 0, 0, 1]' : 0.21895}", "{'[0, 0, 2, 3, 3, 2, 1, 0, 26, 0, 28, 28, 0, 0, 0, 0, 0, 1]' : 0.218885}", "{'[0, 0, 2, 3, 3, 2, 1, 0, 26, 0, 28, 28, 0, 0, 0, 0, 0, 1]' : 0.21903}", "{'[0, 0, 2, 3, 3, 2, 1, 0, 26, 0, 28, 28, 0, 0, 0, 0, 0, 1]' : 0.219184}", "{'[0, 0, 2, 3, 3, 2, 1, 0, 26, 0, 28, 28, 0, 0, 0, 0, 0, 1]' : 0.219473}", "{'[0, 0, 2, 3, 3, 2, 1, 0, 26, 0, 28, 28, 0, 0, 0, 0, 0, 1]' : 0.219031}", "{'[0, 0, 2, 3, 3, 2, 1, 0, 26, 0, 28, 28, 0, 0, 0, 0, 0, 1]' : 0.21941}", "{'[0, 0, 2, 3, 3, 2, 1, 0, 26, 0, 28, 28, 0, 0, 0, 0, 0, 1]' : 0.218968}"]
returning from 'run': {'[0, 0, 2, 3, 3, 2, 1, 0, 26, 0, 28, 28, 0, 0, 0, 0, 0, 1]': ([0.26047, 0.259948, 0.221662, 0.219227, 0.219056, 0.219252, 0.219479, 0.219137, 0.219204, 0.219087, 0.219069, 0.219462, 0.219033, 0.219048, 0.219204, 0.218976, 0.219631, 0.219313, 0.218946, 0.218954, 0.21914, 0.21942, 0.21895, 0.218885, 0.21903, 0.219184, 0.219473, 0.219031, 0.21941, 0.218968], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 2, 3, 3, 2, 1, 0, 26, 0, 28, 28, 0, 0, 0, 0, 0, 1]': ([0.26047, 0.259948, 0.221662, 0.219227, 0.219056, 0.219252, 0.219479, 0.219137, 0.219204, 0.219087, 0.219069, 0.219462, 0.219033, 0.219048, 0.219204, 0.218976, 0.219631, 0.219313, 0.218946, 0.218954, 0.21914, 0.21942, 0.21895, 0.218885, 0.21903, 0.219184, 0.219473, 0.219031, 0.21941, 0.218968], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	29
        Max loop nest depth: 	5
        Additions: 		877
        Multiplications: 	216
        Divisions: 		0
        Logical: 		0
        Reads: 			1513
        Writes: 		219
        Comparisons:		29
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest68.exe __orio_perftest68.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest68.exe  
Program Test Output: 
{'[0, 2, 2, 3, 2, 6, 1, 0, 20, 10, 2, 0, 0, 1, 0, 0, 1, 1]' : 0.188275}
{'[0, 2, 2, 3, 2, 6, 1, 0, 20, 10, 2, 0, 0, 1, 0, 0, 1, 1]' : 0.187475}
{'[0, 2, 2, 3, 2, 6, 1, 0, 20, 10, 2, 0, 0, 1, 0, 0, 1, 1]' : 0.182377}
{'[0, 2, 2, 3, 2, 6, 1, 0, 20, 10, 2, 0, 0, 1, 0, 0, 1, 1]' : 0.157644}
{'[0, 2, 2, 3, 2, 6, 1, 0, 20, 10, 2, 0, 0, 1, 0, 0, 1, 1]' : 0.157909}
{'[0, 2, 2, 3, 2, 6, 1, 0, 20, 10, 2, 0, 0, 1, 0, 0, 1, 1]' : 0.157742}
{'[0, 2, 2, 3, 2, 6, 1, 0, 20, 10, 2, 0, 0, 1, 0, 0, 1, 1]' : 0.15763}
{'[0, 2, 2, 3, 2, 6, 1, 0, 20, 10, 2, 0, 0, 1, 0, 0, 1, 1]' : 0.157675}
{'[0, 2, 2, 3, 2, 6, 1, 0, 20, 10, 2, 0, 0, 1, 0, 0, 1, 1]' : 0.157761}
{'[0, 2, 2, 3, 2, 6, 1, 0, 20, 10, 2, 0, 0, 1, 0, 0, 1, 1]' : 0.157875}
{'[0, 2, 2, 3, 2, 6, 1, 0, 20, 10, 2, 0, 0, 1, 0, 0, 1, 1]' : 0.157622}
{'[0, 2, 2, 3, 2, 6, 1, 0, 20, 10, 2, 0, 0, 1, 0, 0, 1, 1]' : 0.157977}
{'[0, 2, 2, 3, 2, 6, 1, 0, 20, 10, 2, 0, 0, 1, 0, 0, 1, 1]' : 0.15773}
{'[0, 2, 2, 3, 2, 6, 1, 0, 20, 10, 2, 0, 0, 1, 0, 0, 1, 1]' : 0.157824}
{'[0, 2, 2, 3, 2, 6, 1, 0, 20, 10, 2, 0, 0, 1, 0, 0, 1, 1]' : 0.157625}
{'[0, 2, 2, 3, 2, 6, 1, 0, 20, 10, 2, 0, 0, 1, 0, 0, 1, 1]' : 0.157551}
{'[0, 2, 2, 3, 2, 6, 1, 0, 20, 10, 2, 0, 0, 1, 0, 0, 1, 1]' : 0.157892}
{'[0, 2, 2, 3, 2, 6, 1, 0, 20, 10, 2, 0, 0, 1, 0, 0, 1, 1]' : 0.158047}
{'[0, 2, 2, 3, 2, 6, 1, 0, 20, 10, 2, 0, 0, 1, 0, 0, 1, 1]' : 0.157949}
{'[0, 2, 2, 3, 2, 6, 1, 0, 20, 10, 2, 0, 0, 1, 0, 0, 1, 1]' : 0.157848}
{'[0, 2, 2, 3, 2, 6, 1, 0, 20, 10, 2, 0, 0, 1, 0, 0, 1, 1]' : 0.157821}
{'[0, 2, 2, 3, 2, 6, 1, 0, 20, 10, 2, 0, 0, 1, 0, 0, 1, 1]' : 0.158137}
{'[0, 2, 2, 3, 2, 6, 1, 0, 20, 10, 2, 0, 0, 1, 0, 0, 1, 1]' : 0.157637}
{'[0, 2, 2, 3, 2, 6, 1, 0, 20, 10, 2, 0, 0, 1, 0, 0, 1, 1]' : 0.1575}
{'[0, 2, 2, 3, 2, 6, 1, 0, 20, 10, 2, 0, 0, 1, 0, 0, 1, 1]' : 0.157672}
{'[0, 2, 2, 3, 2, 6, 1, 0, 20, 10, 2, 0, 0, 1, 0, 0, 1, 1]' : 0.157948}
{'[0, 2, 2, 3, 2, 6, 1, 0, 20, 10, 2, 0, 0, 1, 0, 0, 1, 1]' : 0.157675}
{'[0, 2, 2, 3, 2, 6, 1, 0, 20, 10, 2, 0, 0, 1, 0, 0, 1, 1]' : 0.157592}
{'[0, 2, 2, 3, 2, 6, 1, 0, 20, 10, 2, 0, 0, 1, 0, 0, 1, 1]' : 0.157922}
{'[0, 2, 2, 3, 2, 6, 1, 0, 20, 10, 2, 0, 0, 1, 0, 0, 1, 1]' : 0.157618}

out:
 ["{'[0, 2, 2, 3, 2, 6, 1, 0, 20, 10, 2, 0, 0, 1, 0, 0, 1, 1]' : 0.188275}", "{'[0, 2, 2, 3, 2, 6, 1, 0, 20, 10, 2, 0, 0, 1, 0, 0, 1, 1]' : 0.187475}", "{'[0, 2, 2, 3, 2, 6, 1, 0, 20, 10, 2, 0, 0, 1, 0, 0, 1, 1]' : 0.182377}", "{'[0, 2, 2, 3, 2, 6, 1, 0, 20, 10, 2, 0, 0, 1, 0, 0, 1, 1]' : 0.157644}", "{'[0, 2, 2, 3, 2, 6, 1, 0, 20, 10, 2, 0, 0, 1, 0, 0, 1, 1]' : 0.157909}", "{'[0, 2, 2, 3, 2, 6, 1, 0, 20, 10, 2, 0, 0, 1, 0, 0, 1, 1]' : 0.157742}", "{'[0, 2, 2, 3, 2, 6, 1, 0, 20, 10, 2, 0, 0, 1, 0, 0, 1, 1]' : 0.15763}", "{'[0, 2, 2, 3, 2, 6, 1, 0, 20, 10, 2, 0, 0, 1, 0, 0, 1, 1]' : 0.157675}", "{'[0, 2, 2, 3, 2, 6, 1, 0, 20, 10, 2, 0, 0, 1, 0, 0, 1, 1]' : 0.157761}", "{'[0, 2, 2, 3, 2, 6, 1, 0, 20, 10, 2, 0, 0, 1, 0, 0, 1, 1]' : 0.157875}", "{'[0, 2, 2, 3, 2, 6, 1, 0, 20, 10, 2, 0, 0, 1, 0, 0, 1, 1]' : 0.157622}", "{'[0, 2, 2, 3, 2, 6, 1, 0, 20, 10, 2, 0, 0, 1, 0, 0, 1, 1]' : 0.157977}", "{'[0, 2, 2, 3, 2, 6, 1, 0, 20, 10, 2, 0, 0, 1, 0, 0, 1, 1]' : 0.15773}", "{'[0, 2, 2, 3, 2, 6, 1, 0, 20, 10, 2, 0, 0, 1, 0, 0, 1, 1]' : 0.157824}", "{'[0, 2, 2, 3, 2, 6, 1, 0, 20, 10, 2, 0, 0, 1, 0, 0, 1, 1]' : 0.157625}", "{'[0, 2, 2, 3, 2, 6, 1, 0, 20, 10, 2, 0, 0, 1, 0, 0, 1, 1]' : 0.157551}", "{'[0, 2, 2, 3, 2, 6, 1, 0, 20, 10, 2, 0, 0, 1, 0, 0, 1, 1]' : 0.157892}", "{'[0, 2, 2, 3, 2, 6, 1, 0, 20, 10, 2, 0, 0, 1, 0, 0, 1, 1]' : 0.158047}", "{'[0, 2, 2, 3, 2, 6, 1, 0, 20, 10, 2, 0, 0, 1, 0, 0, 1, 1]' : 0.157949}", "{'[0, 2, 2, 3, 2, 6, 1, 0, 20, 10, 2, 0, 0, 1, 0, 0, 1, 1]' : 0.157848}", "{'[0, 2, 2, 3, 2, 6, 1, 0, 20, 10, 2, 0, 0, 1, 0, 0, 1, 1]' : 0.157821}", "{'[0, 2, 2, 3, 2, 6, 1, 0, 20, 10, 2, 0, 0, 1, 0, 0, 1, 1]' : 0.158137}", "{'[0, 2, 2, 3, 2, 6, 1, 0, 20, 10, 2, 0, 0, 1, 0, 0, 1, 1]' : 0.157637}", "{'[0, 2, 2, 3, 2, 6, 1, 0, 20, 10, 2, 0, 0, 1, 0, 0, 1, 1]' : 0.1575}", "{'[0, 2, 2, 3, 2, 6, 1, 0, 20, 10, 2, 0, 0, 1, 0, 0, 1, 1]' : 0.157672}", "{'[0, 2, 2, 3, 2, 6, 1, 0, 20, 10, 2, 0, 0, 1, 0, 0, 1, 1]' : 0.157948}", "{'[0, 2, 2, 3, 2, 6, 1, 0, 20, 10, 2, 0, 0, 1, 0, 0, 1, 1]' : 0.157675}", "{'[0, 2, 2, 3, 2, 6, 1, 0, 20, 10, 2, 0, 0, 1, 0, 0, 1, 1]' : 0.157592}", "{'[0, 2, 2, 3, 2, 6, 1, 0, 20, 10, 2, 0, 0, 1, 0, 0, 1, 1]' : 0.157922}", "{'[0, 2, 2, 3, 2, 6, 1, 0, 20, 10, 2, 0, 0, 1, 0, 0, 1, 1]' : 0.157618}"]
returning from 'run': {'[0, 2, 2, 3, 2, 6, 1, 0, 20, 10, 2, 0, 0, 1, 0, 0, 1, 1]': ([0.188275, 0.187475, 0.182377, 0.157644, 0.157909, 0.157742, 0.15763, 0.157675, 0.157761, 0.157875, 0.157622, 0.157977, 0.15773, 0.157824, 0.157625, 0.157551, 0.157892, 0.158047, 0.157949, 0.157848, 0.157821, 0.158137, 0.157637, 0.1575, 0.157672, 0.157948, 0.157675, 0.157592, 0.157922, 0.157618], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 2, 3, 2, 6, 1, 0, 20, 10, 2, 0, 0, 1, 0, 0, 1, 1]': ([0.188275, 0.187475, 0.182377, 0.157644, 0.157909, 0.157742, 0.15763, 0.157675, 0.157761, 0.157875, 0.157622, 0.157977, 0.15773, 0.157824, 0.157625, 0.157551, 0.157892, 0.158047, 0.157949, 0.157848, 0.157821, 0.158137, 0.157637, 0.1575, 0.157672, 0.157948, 0.157675, 0.157592, 0.157922, 0.157618], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		6405
        Multiplications: 	1904
        Divisions: 		0
        Logical: 		0
        Reads: 			9743
        Writes: 		1045
        Comparisons:		15
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest69.exe __orio_perftest69.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest69.exe  
Program Test Output: 
{'[0, 1, 0, 3, 0, 2, 0, 0, 24, 26, 0, 0, 0, 0, 2, 0, 1, 1]' : 0.177991}
{'[0, 1, 0, 3, 0, 2, 0, 0, 24, 26, 0, 0, 0, 0, 2, 0, 1, 1]' : 0.177945}
{'[0, 1, 0, 3, 0, 2, 0, 0, 24, 26, 0, 0, 0, 0, 2, 0, 1, 1]' : 0.17705}
{'[0, 1, 0, 3, 0, 2, 0, 0, 24, 26, 0, 0, 0, 0, 2, 0, 1, 1]' : 0.156086}
{'[0, 1, 0, 3, 0, 2, 0, 0, 24, 26, 0, 0, 0, 0, 2, 0, 1, 1]' : 0.154734}
{'[0, 1, 0, 3, 0, 2, 0, 0, 24, 26, 0, 0, 0, 0, 2, 0, 1, 1]' : 0.154636}
{'[0, 1, 0, 3, 0, 2, 0, 0, 24, 26, 0, 0, 0, 0, 2, 0, 1, 1]' : 0.154672}
{'[0, 1, 0, 3, 0, 2, 0, 0, 24, 26, 0, 0, 0, 0, 2, 0, 1, 1]' : 0.154649}
{'[0, 1, 0, 3, 0, 2, 0, 0, 24, 26, 0, 0, 0, 0, 2, 0, 1, 1]' : 0.154511}
{'[0, 1, 0, 3, 0, 2, 0, 0, 24, 26, 0, 0, 0, 0, 2, 0, 1, 1]' : 0.154523}
{'[0, 1, 0, 3, 0, 2, 0, 0, 24, 26, 0, 0, 0, 0, 2, 0, 1, 1]' : 0.154817}
{'[0, 1, 0, 3, 0, 2, 0, 0, 24, 26, 0, 0, 0, 0, 2, 0, 1, 1]' : 0.154735}
{'[0, 1, 0, 3, 0, 2, 0, 0, 24, 26, 0, 0, 0, 0, 2, 0, 1, 1]' : 0.154699}
{'[0, 1, 0, 3, 0, 2, 0, 0, 24, 26, 0, 0, 0, 0, 2, 0, 1, 1]' : 0.154494}
{'[0, 1, 0, 3, 0, 2, 0, 0, 24, 26, 0, 0, 0, 0, 2, 0, 1, 1]' : 0.154532}
{'[0, 1, 0, 3, 0, 2, 0, 0, 24, 26, 0, 0, 0, 0, 2, 0, 1, 1]' : 0.154466}
{'[0, 1, 0, 3, 0, 2, 0, 0, 24, 26, 0, 0, 0, 0, 2, 0, 1, 1]' : 0.15451}
{'[0, 1, 0, 3, 0, 2, 0, 0, 24, 26, 0, 0, 0, 0, 2, 0, 1, 1]' : 0.154695}
{'[0, 1, 0, 3, 0, 2, 0, 0, 24, 26, 0, 0, 0, 0, 2, 0, 1, 1]' : 0.154746}
{'[0, 1, 0, 3, 0, 2, 0, 0, 24, 26, 0, 0, 0, 0, 2, 0, 1, 1]' : 0.154722}
{'[0, 1, 0, 3, 0, 2, 0, 0, 24, 26, 0, 0, 0, 0, 2, 0, 1, 1]' : 0.154391}
{'[0, 1, 0, 3, 0, 2, 0, 0, 24, 26, 0, 0, 0, 0, 2, 0, 1, 1]' : 0.154547}
{'[0, 1, 0, 3, 0, 2, 0, 0, 24, 26, 0, 0, 0, 0, 2, 0, 1, 1]' : 0.154698}
{'[0, 1, 0, 3, 0, 2, 0, 0, 24, 26, 0, 0, 0, 0, 2, 0, 1, 1]' : 0.154379}
{'[0, 1, 0, 3, 0, 2, 0, 0, 24, 26, 0, 0, 0, 0, 2, 0, 1, 1]' : 0.154428}
{'[0, 1, 0, 3, 0, 2, 0, 0, 24, 26, 0, 0, 0, 0, 2, 0, 1, 1]' : 0.154724}
{'[0, 1, 0, 3, 0, 2, 0, 0, 24, 26, 0, 0, 0, 0, 2, 0, 1, 1]' : 0.155103}
{'[0, 1, 0, 3, 0, 2, 0, 0, 24, 26, 0, 0, 0, 0, 2, 0, 1, 1]' : 0.154625}
{'[0, 1, 0, 3, 0, 2, 0, 0, 24, 26, 0, 0, 0, 0, 2, 0, 1, 1]' : 0.154569}
{'[0, 1, 0, 3, 0, 2, 0, 0, 24, 26, 0, 0, 0, 0, 2, 0, 1, 1]' : 0.154582}

out:
 ["{'[0, 1, 0, 3, 0, 2, 0, 0, 24, 26, 0, 0, 0, 0, 2, 0, 1, 1]' : 0.177991}", "{'[0, 1, 0, 3, 0, 2, 0, 0, 24, 26, 0, 0, 0, 0, 2, 0, 1, 1]' : 0.177945}", "{'[0, 1, 0, 3, 0, 2, 0, 0, 24, 26, 0, 0, 0, 0, 2, 0, 1, 1]' : 0.17705}", "{'[0, 1, 0, 3, 0, 2, 0, 0, 24, 26, 0, 0, 0, 0, 2, 0, 1, 1]' : 0.156086}", "{'[0, 1, 0, 3, 0, 2, 0, 0, 24, 26, 0, 0, 0, 0, 2, 0, 1, 1]' : 0.154734}", "{'[0, 1, 0, 3, 0, 2, 0, 0, 24, 26, 0, 0, 0, 0, 2, 0, 1, 1]' : 0.154636}", "{'[0, 1, 0, 3, 0, 2, 0, 0, 24, 26, 0, 0, 0, 0, 2, 0, 1, 1]' : 0.154672}", "{'[0, 1, 0, 3, 0, 2, 0, 0, 24, 26, 0, 0, 0, 0, 2, 0, 1, 1]' : 0.154649}", "{'[0, 1, 0, 3, 0, 2, 0, 0, 24, 26, 0, 0, 0, 0, 2, 0, 1, 1]' : 0.154511}", "{'[0, 1, 0, 3, 0, 2, 0, 0, 24, 26, 0, 0, 0, 0, 2, 0, 1, 1]' : 0.154523}", "{'[0, 1, 0, 3, 0, 2, 0, 0, 24, 26, 0, 0, 0, 0, 2, 0, 1, 1]' : 0.154817}", "{'[0, 1, 0, 3, 0, 2, 0, 0, 24, 26, 0, 0, 0, 0, 2, 0, 1, 1]' : 0.154735}", "{'[0, 1, 0, 3, 0, 2, 0, 0, 24, 26, 0, 0, 0, 0, 2, 0, 1, 1]' : 0.154699}", "{'[0, 1, 0, 3, 0, 2, 0, 0, 24, 26, 0, 0, 0, 0, 2, 0, 1, 1]' : 0.154494}", "{'[0, 1, 0, 3, 0, 2, 0, 0, 24, 26, 0, 0, 0, 0, 2, 0, 1, 1]' : 0.154532}", "{'[0, 1, 0, 3, 0, 2, 0, 0, 24, 26, 0, 0, 0, 0, 2, 0, 1, 1]' : 0.154466}", "{'[0, 1, 0, 3, 0, 2, 0, 0, 24, 26, 0, 0, 0, 0, 2, 0, 1, 1]' : 0.15451}", "{'[0, 1, 0, 3, 0, 2, 0, 0, 24, 26, 0, 0, 0, 0, 2, 0, 1, 1]' : 0.154695}", "{'[0, 1, 0, 3, 0, 2, 0, 0, 24, 26, 0, 0, 0, 0, 2, 0, 1, 1]' : 0.154746}", "{'[0, 1, 0, 3, 0, 2, 0, 0, 24, 26, 0, 0, 0, 0, 2, 0, 1, 1]' : 0.154722}", "{'[0, 1, 0, 3, 0, 2, 0, 0, 24, 26, 0, 0, 0, 0, 2, 0, 1, 1]' : 0.154391}", "{'[0, 1, 0, 3, 0, 2, 0, 0, 24, 26, 0, 0, 0, 0, 2, 0, 1, 1]' : 0.154547}", "{'[0, 1, 0, 3, 0, 2, 0, 0, 24, 26, 0, 0, 0, 0, 2, 0, 1, 1]' : 0.154698}", "{'[0, 1, 0, 3, 0, 2, 0, 0, 24, 26, 0, 0, 0, 0, 2, 0, 1, 1]' : 0.154379}", "{'[0, 1, 0, 3, 0, 2, 0, 0, 24, 26, 0, 0, 0, 0, 2, 0, 1, 1]' : 0.154428}", "{'[0, 1, 0, 3, 0, 2, 0, 0, 24, 26, 0, 0, 0, 0, 2, 0, 1, 1]' : 0.154724}", "{'[0, 1, 0, 3, 0, 2, 0, 0, 24, 26, 0, 0, 0, 0, 2, 0, 1, 1]' : 0.155103}", "{'[0, 1, 0, 3, 0, 2, 0, 0, 24, 26, 0, 0, 0, 0, 2, 0, 1, 1]' : 0.154625}", "{'[0, 1, 0, 3, 0, 2, 0, 0, 24, 26, 0, 0, 0, 0, 2, 0, 1, 1]' : 0.154569}", "{'[0, 1, 0, 3, 0, 2, 0, 0, 24, 26, 0, 0, 0, 0, 2, 0, 1, 1]' : 0.154582}"]
returning from 'run': {'[0, 1, 0, 3, 0, 2, 0, 0, 24, 26, 0, 0, 0, 0, 2, 0, 1, 1]': ([0.177991, 0.177945, 0.17705, 0.156086, 0.154734, 0.154636, 0.154672, 0.154649, 0.154511, 0.154523, 0.154817, 0.154735, 0.154699, 0.154494, 0.154532, 0.154466, 0.15451, 0.154695, 0.154746, 0.154722, 0.154391, 0.154547, 0.154698, 0.154379, 0.154428, 0.154724, 0.155103, 0.154625, 0.154569, 0.154582], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 0, 3, 0, 2, 0, 0, 24, 26, 0, 0, 0, 0, 2, 0, 1, 1]': ([0.177991, 0.177945, 0.17705, 0.156086, 0.154734, 0.154636, 0.154672, 0.154649, 0.154511, 0.154523, 0.154817, 0.154735, 0.154699, 0.154494, 0.154532, 0.154466, 0.15451, 0.154695, 0.154746, 0.154722, 0.154391, 0.154547, 0.154698, 0.154379, 0.154428, 0.154724, 0.155103, 0.154625, 0.154569, 0.154582], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	55
        Max loop nest depth: 	5
        Additions: 		3102
        Multiplications: 	836
        Divisions: 		0
        Logical: 		0
        Reads: 			5128
        Writes: 		611
        Comparisons:		55
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest70.exe __orio_perftest70.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest70.exe  
Program Test Output: 
{'[0, 4, 6, 3, 3, 4, 1, 0, 4, 28, 0, 1, 1, 1, 0, 0, 1, 1]' : 0.128707}
{'[0, 4, 6, 3, 3, 4, 1, 0, 4, 28, 0, 1, 1, 1, 0, 0, 1, 1]' : 0.132024}
{'[0, 4, 6, 3, 3, 4, 1, 0, 4, 28, 0, 1, 1, 1, 0, 0, 1, 1]' : 0.131876}
{'[0, 4, 6, 3, 3, 4, 1, 0, 4, 28, 0, 1, 1, 1, 0, 0, 1, 1]' : 0.128225}
{'[0, 4, 6, 3, 3, 4, 1, 0, 4, 28, 0, 1, 1, 1, 0, 0, 1, 1]' : 0.112182}
{'[0, 4, 6, 3, 3, 4, 1, 0, 4, 28, 0, 1, 1, 1, 0, 0, 1, 1]' : 0.111795}
{'[0, 4, 6, 3, 3, 4, 1, 0, 4, 28, 0, 1, 1, 1, 0, 0, 1, 1]' : 0.111633}
{'[0, 4, 6, 3, 3, 4, 1, 0, 4, 28, 0, 1, 1, 1, 0, 0, 1, 1]' : 0.111736}
{'[0, 4, 6, 3, 3, 4, 1, 0, 4, 28, 0, 1, 1, 1, 0, 0, 1, 1]' : 0.111689}
{'[0, 4, 6, 3, 3, 4, 1, 0, 4, 28, 0, 1, 1, 1, 0, 0, 1, 1]' : 0.111816}
{'[0, 4, 6, 3, 3, 4, 1, 0, 4, 28, 0, 1, 1, 1, 0, 0, 1, 1]' : 0.111778}
{'[0, 4, 6, 3, 3, 4, 1, 0, 4, 28, 0, 1, 1, 1, 0, 0, 1, 1]' : 0.112075}
{'[0, 4, 6, 3, 3, 4, 1, 0, 4, 28, 0, 1, 1, 1, 0, 0, 1, 1]' : 0.11182}
{'[0, 4, 6, 3, 3, 4, 1, 0, 4, 28, 0, 1, 1, 1, 0, 0, 1, 1]' : 0.111958}
{'[0, 4, 6, 3, 3, 4, 1, 0, 4, 28, 0, 1, 1, 1, 0, 0, 1, 1]' : 0.112714}
{'[0, 4, 6, 3, 3, 4, 1, 0, 4, 28, 0, 1, 1, 1, 0, 0, 1, 1]' : 0.111913}
{'[0, 4, 6, 3, 3, 4, 1, 0, 4, 28, 0, 1, 1, 1, 0, 0, 1, 1]' : 0.111851}
{'[0, 4, 6, 3, 3, 4, 1, 0, 4, 28, 0, 1, 1, 1, 0, 0, 1, 1]' : 0.111851}
{'[0, 4, 6, 3, 3, 4, 1, 0, 4, 28, 0, 1, 1, 1, 0, 0, 1, 1]' : 0.111785}
{'[0, 4, 6, 3, 3, 4, 1, 0, 4, 28, 0, 1, 1, 1, 0, 0, 1, 1]' : 0.111871}
{'[0, 4, 6, 3, 3, 4, 1, 0, 4, 28, 0, 1, 1, 1, 0, 0, 1, 1]' : 0.111938}
{'[0, 4, 6, 3, 3, 4, 1, 0, 4, 28, 0, 1, 1, 1, 0, 0, 1, 1]' : 0.111907}
{'[0, 4, 6, 3, 3, 4, 1, 0, 4, 28, 0, 1, 1, 1, 0, 0, 1, 1]' : 0.11178}
{'[0, 4, 6, 3, 3, 4, 1, 0, 4, 28, 0, 1, 1, 1, 0, 0, 1, 1]' : 0.112208}
{'[0, 4, 6, 3, 3, 4, 1, 0, 4, 28, 0, 1, 1, 1, 0, 0, 1, 1]' : 0.112013}
{'[0, 4, 6, 3, 3, 4, 1, 0, 4, 28, 0, 1, 1, 1, 0, 0, 1, 1]' : 0.11187}
{'[0, 4, 6, 3, 3, 4, 1, 0, 4, 28, 0, 1, 1, 1, 0, 0, 1, 1]' : 0.111826}
{'[0, 4, 6, 3, 3, 4, 1, 0, 4, 28, 0, 1, 1, 1, 0, 0, 1, 1]' : 0.112067}
{'[0, 4, 6, 3, 3, 4, 1, 0, 4, 28, 0, 1, 1, 1, 0, 0, 1, 1]' : 0.111934}
{'[0, 4, 6, 3, 3, 4, 1, 0, 4, 28, 0, 1, 1, 1, 0, 0, 1, 1]' : 0.112053}

out:
 ["{'[0, 4, 6, 3, 3, 4, 1, 0, 4, 28, 0, 1, 1, 1, 0, 0, 1, 1]' : 0.128707}", "{'[0, 4, 6, 3, 3, 4, 1, 0, 4, 28, 0, 1, 1, 1, 0, 0, 1, 1]' : 0.132024}", "{'[0, 4, 6, 3, 3, 4, 1, 0, 4, 28, 0, 1, 1, 1, 0, 0, 1, 1]' : 0.131876}", "{'[0, 4, 6, 3, 3, 4, 1, 0, 4, 28, 0, 1, 1, 1, 0, 0, 1, 1]' : 0.128225}", "{'[0, 4, 6, 3, 3, 4, 1, 0, 4, 28, 0, 1, 1, 1, 0, 0, 1, 1]' : 0.112182}", "{'[0, 4, 6, 3, 3, 4, 1, 0, 4, 28, 0, 1, 1, 1, 0, 0, 1, 1]' : 0.111795}", "{'[0, 4, 6, 3, 3, 4, 1, 0, 4, 28, 0, 1, 1, 1, 0, 0, 1, 1]' : 0.111633}", "{'[0, 4, 6, 3, 3, 4, 1, 0, 4, 28, 0, 1, 1, 1, 0, 0, 1, 1]' : 0.111736}", "{'[0, 4, 6, 3, 3, 4, 1, 0, 4, 28, 0, 1, 1, 1, 0, 0, 1, 1]' : 0.111689}", "{'[0, 4, 6, 3, 3, 4, 1, 0, 4, 28, 0, 1, 1, 1, 0, 0, 1, 1]' : 0.111816}", "{'[0, 4, 6, 3, 3, 4, 1, 0, 4, 28, 0, 1, 1, 1, 0, 0, 1, 1]' : 0.111778}", "{'[0, 4, 6, 3, 3, 4, 1, 0, 4, 28, 0, 1, 1, 1, 0, 0, 1, 1]' : 0.112075}", "{'[0, 4, 6, 3, 3, 4, 1, 0, 4, 28, 0, 1, 1, 1, 0, 0, 1, 1]' : 0.11182}", "{'[0, 4, 6, 3, 3, 4, 1, 0, 4, 28, 0, 1, 1, 1, 0, 0, 1, 1]' : 0.111958}", "{'[0, 4, 6, 3, 3, 4, 1, 0, 4, 28, 0, 1, 1, 1, 0, 0, 1, 1]' : 0.112714}", "{'[0, 4, 6, 3, 3, 4, 1, 0, 4, 28, 0, 1, 1, 1, 0, 0, 1, 1]' : 0.111913}", "{'[0, 4, 6, 3, 3, 4, 1, 0, 4, 28, 0, 1, 1, 1, 0, 0, 1, 1]' : 0.111851}", "{'[0, 4, 6, 3, 3, 4, 1, 0, 4, 28, 0, 1, 1, 1, 0, 0, 1, 1]' : 0.111851}", "{'[0, 4, 6, 3, 3, 4, 1, 0, 4, 28, 0, 1, 1, 1, 0, 0, 1, 1]' : 0.111785}", "{'[0, 4, 6, 3, 3, 4, 1, 0, 4, 28, 0, 1, 1, 1, 0, 0, 1, 1]' : 0.111871}", "{'[0, 4, 6, 3, 3, 4, 1, 0, 4, 28, 0, 1, 1, 1, 0, 0, 1, 1]' : 0.111938}", "{'[0, 4, 6, 3, 3, 4, 1, 0, 4, 28, 0, 1, 1, 1, 0, 0, 1, 1]' : 0.111907}", "{'[0, 4, 6, 3, 3, 4, 1, 0, 4, 28, 0, 1, 1, 1, 0, 0, 1, 1]' : 0.11178}", "{'[0, 4, 6, 3, 3, 4, 1, 0, 4, 28, 0, 1, 1, 1, 0, 0, 1, 1]' : 0.112208}", "{'[0, 4, 6, 3, 3, 4, 1, 0, 4, 28, 0, 1, 1, 1, 0, 0, 1, 1]' : 0.112013}", "{'[0, 4, 6, 3, 3, 4, 1, 0, 4, 28, 0, 1, 1, 1, 0, 0, 1, 1]' : 0.11187}", "{'[0, 4, 6, 3, 3, 4, 1, 0, 4, 28, 0, 1, 1, 1, 0, 0, 1, 1]' : 0.111826}", "{'[0, 4, 6, 3, 3, 4, 1, 0, 4, 28, 0, 1, 1, 1, 0, 0, 1, 1]' : 0.112067}", "{'[0, 4, 6, 3, 3, 4, 1, 0, 4, 28, 0, 1, 1, 1, 0, 0, 1, 1]' : 0.111934}", "{'[0, 4, 6, 3, 3, 4, 1, 0, 4, 28, 0, 1, 1, 1, 0, 0, 1, 1]' : 0.112053}"]
returning from 'run': {'[0, 4, 6, 3, 3, 4, 1, 0, 4, 28, 0, 1, 1, 1, 0, 0, 1, 1]': ([0.128707, 0.132024, 0.131876, 0.128225, 0.112182, 0.111795, 0.111633, 0.111736, 0.111689, 0.111816, 0.111778, 0.112075, 0.11182, 0.111958, 0.112714, 0.111913, 0.111851, 0.111851, 0.111785, 0.111871, 0.111938, 0.111907, 0.11178, 0.112208, 0.112013, 0.11187, 0.111826, 0.112067, 0.111934, 0.112053], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 4, 6, 3, 3, 4, 1, 0, 4, 28, 0, 1, 1, 1, 0, 0, 1, 1]': ([0.128707, 0.132024, 0.131876, 0.128225, 0.112182, 0.111795, 0.111633, 0.111736, 0.111689, 0.111816, 0.111778, 0.112075, 0.11182, 0.111958, 0.112714, 0.111913, 0.111851, 0.111851, 0.111785, 0.111871, 0.111938, 0.111907, 0.11178, 0.112208, 0.112013, 0.11187, 0.111826, 0.112067, 0.111934, 0.112053], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	81
        Max loop nest depth: 	4
        Additions: 		9754
        Multiplications: 	2808
        Divisions: 		0
        Logical: 		0
        Reads: 			14995
        Writes: 		1702
        Comparisons:		81
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest71.exe __orio_perftest71.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest71.exe  
Program Test Output: 
{'[0, 0, 1, 3, 1, 0, 0, 0, 0, 29, 25, 0, 1, 1, 0, 0, 1, 1]' : 0.106772}
{'[0, 0, 1, 3, 1, 0, 0, 0, 0, 29, 25, 0, 1, 1, 0, 0, 1, 1]' : 0.106983}
{'[0, 0, 1, 3, 1, 0, 0, 0, 0, 29, 25, 0, 1, 1, 0, 0, 1, 1]' : 0.106647}
{'[0, 0, 1, 3, 1, 0, 0, 0, 0, 29, 25, 0, 1, 1, 0, 0, 1, 1]' : 0.106635}
{'[0, 0, 1, 3, 1, 0, 0, 0, 0, 29, 25, 0, 1, 1, 0, 0, 1, 1]' : 0.106585}
{'[0, 0, 1, 3, 1, 0, 0, 0, 0, 29, 25, 0, 1, 1, 0, 0, 1, 1]' : 0.106531}
{'[0, 0, 1, 3, 1, 0, 0, 0, 0, 29, 25, 0, 1, 1, 0, 0, 1, 1]' : 0.106491}
{'[0, 0, 1, 3, 1, 0, 0, 0, 0, 29, 25, 0, 1, 1, 0, 0, 1, 1]' : 0.106458}
{'[0, 0, 1, 3, 1, 0, 0, 0, 0, 29, 25, 0, 1, 1, 0, 0, 1, 1]' : 0.106594}
{'[0, 0, 1, 3, 1, 0, 0, 0, 0, 29, 25, 0, 1, 1, 0, 0, 1, 1]' : 0.106765}
{'[0, 0, 1, 3, 1, 0, 0, 0, 0, 29, 25, 0, 1, 1, 0, 0, 1, 1]' : 0.10655}
{'[0, 0, 1, 3, 1, 0, 0, 0, 0, 29, 25, 0, 1, 1, 0, 0, 1, 1]' : 0.106999}
{'[0, 0, 1, 3, 1, 0, 0, 0, 0, 29, 25, 0, 1, 1, 0, 0, 1, 1]' : 0.106643}
{'[0, 0, 1, 3, 1, 0, 0, 0, 0, 29, 25, 0, 1, 1, 0, 0, 1, 1]' : 0.106533}
{'[0, 0, 1, 3, 1, 0, 0, 0, 0, 29, 25, 0, 1, 1, 0, 0, 1, 1]' : 0.106497}
{'[0, 0, 1, 3, 1, 0, 0, 0, 0, 29, 25, 0, 1, 1, 0, 0, 1, 1]' : 0.106536}
{'[0, 0, 1, 3, 1, 0, 0, 0, 0, 29, 25, 0, 1, 1, 0, 0, 1, 1]' : 0.106546}
{'[0, 0, 1, 3, 1, 0, 0, 0, 0, 29, 25, 0, 1, 1, 0, 0, 1, 1]' : 0.10659}
{'[0, 0, 1, 3, 1, 0, 0, 0, 0, 29, 25, 0, 1, 1, 0, 0, 1, 1]' : 0.106595}
{'[0, 0, 1, 3, 1, 0, 0, 0, 0, 29, 25, 0, 1, 1, 0, 0, 1, 1]' : 0.106542}
{'[0, 0, 1, 3, 1, 0, 0, 0, 0, 29, 25, 0, 1, 1, 0, 0, 1, 1]' : 0.106633}
{'[0, 0, 1, 3, 1, 0, 0, 0, 0, 29, 25, 0, 1, 1, 0, 0, 1, 1]' : 0.106808}
{'[0, 0, 1, 3, 1, 0, 0, 0, 0, 29, 25, 0, 1, 1, 0, 0, 1, 1]' : 0.106685}
{'[0, 0, 1, 3, 1, 0, 0, 0, 0, 29, 25, 0, 1, 1, 0, 0, 1, 1]' : 0.106488}
{'[0, 0, 1, 3, 1, 0, 0, 0, 0, 29, 25, 0, 1, 1, 0, 0, 1, 1]' : 0.106489}
{'[0, 0, 1, 3, 1, 0, 0, 0, 0, 29, 25, 0, 1, 1, 0, 0, 1, 1]' : 0.106566}
{'[0, 0, 1, 3, 1, 0, 0, 0, 0, 29, 25, 0, 1, 1, 0, 0, 1, 1]' : 0.106453}
{'[0, 0, 1, 3, 1, 0, 0, 0, 0, 29, 25, 0, 1, 1, 0, 0, 1, 1]' : 0.106597}
{'[0, 0, 1, 3, 1, 0, 0, 0, 0, 29, 25, 0, 1, 1, 0, 0, 1, 1]' : 0.106867}
{'[0, 0, 1, 3, 1, 0, 0, 0, 0, 29, 25, 0, 1, 1, 0, 0, 1, 1]' : 0.106556}

out:
 ["{'[0, 0, 1, 3, 1, 0, 0, 0, 0, 29, 25, 0, 1, 1, 0, 0, 1, 1]' : 0.106772}", "{'[0, 0, 1, 3, 1, 0, 0, 0, 0, 29, 25, 0, 1, 1, 0, 0, 1, 1]' : 0.106983}", "{'[0, 0, 1, 3, 1, 0, 0, 0, 0, 29, 25, 0, 1, 1, 0, 0, 1, 1]' : 0.106647}", "{'[0, 0, 1, 3, 1, 0, 0, 0, 0, 29, 25, 0, 1, 1, 0, 0, 1, 1]' : 0.106635}", "{'[0, 0, 1, 3, 1, 0, 0, 0, 0, 29, 25, 0, 1, 1, 0, 0, 1, 1]' : 0.106585}", "{'[0, 0, 1, 3, 1, 0, 0, 0, 0, 29, 25, 0, 1, 1, 0, 0, 1, 1]' : 0.106531}", "{'[0, 0, 1, 3, 1, 0, 0, 0, 0, 29, 25, 0, 1, 1, 0, 0, 1, 1]' : 0.106491}", "{'[0, 0, 1, 3, 1, 0, 0, 0, 0, 29, 25, 0, 1, 1, 0, 0, 1, 1]' : 0.106458}", "{'[0, 0, 1, 3, 1, 0, 0, 0, 0, 29, 25, 0, 1, 1, 0, 0, 1, 1]' : 0.106594}", "{'[0, 0, 1, 3, 1, 0, 0, 0, 0, 29, 25, 0, 1, 1, 0, 0, 1, 1]' : 0.106765}", "{'[0, 0, 1, 3, 1, 0, 0, 0, 0, 29, 25, 0, 1, 1, 0, 0, 1, 1]' : 0.10655}", "{'[0, 0, 1, 3, 1, 0, 0, 0, 0, 29, 25, 0, 1, 1, 0, 0, 1, 1]' : 0.106999}", "{'[0, 0, 1, 3, 1, 0, 0, 0, 0, 29, 25, 0, 1, 1, 0, 0, 1, 1]' : 0.106643}", "{'[0, 0, 1, 3, 1, 0, 0, 0, 0, 29, 25, 0, 1, 1, 0, 0, 1, 1]' : 0.106533}", "{'[0, 0, 1, 3, 1, 0, 0, 0, 0, 29, 25, 0, 1, 1, 0, 0, 1, 1]' : 0.106497}", "{'[0, 0, 1, 3, 1, 0, 0, 0, 0, 29, 25, 0, 1, 1, 0, 0, 1, 1]' : 0.106536}", "{'[0, 0, 1, 3, 1, 0, 0, 0, 0, 29, 25, 0, 1, 1, 0, 0, 1, 1]' : 0.106546}", "{'[0, 0, 1, 3, 1, 0, 0, 0, 0, 29, 25, 0, 1, 1, 0, 0, 1, 1]' : 0.10659}", "{'[0, 0, 1, 3, 1, 0, 0, 0, 0, 29, 25, 0, 1, 1, 0, 0, 1, 1]' : 0.106595}", "{'[0, 0, 1, 3, 1, 0, 0, 0, 0, 29, 25, 0, 1, 1, 0, 0, 1, 1]' : 0.106542}", "{'[0, 0, 1, 3, 1, 0, 0, 0, 0, 29, 25, 0, 1, 1, 0, 0, 1, 1]' : 0.106633}", "{'[0, 0, 1, 3, 1, 0, 0, 0, 0, 29, 25, 0, 1, 1, 0, 0, 1, 1]' : 0.106808}", "{'[0, 0, 1, 3, 1, 0, 0, 0, 0, 29, 25, 0, 1, 1, 0, 0, 1, 1]' : 0.106685}", "{'[0, 0, 1, 3, 1, 0, 0, 0, 0, 29, 25, 0, 1, 1, 0, 0, 1, 1]' : 0.106488}", "{'[0, 0, 1, 3, 1, 0, 0, 0, 0, 29, 25, 0, 1, 1, 0, 0, 1, 1]' : 0.106489}", "{'[0, 0, 1, 3, 1, 0, 0, 0, 0, 29, 25, 0, 1, 1, 0, 0, 1, 1]' : 0.106566}", "{'[0, 0, 1, 3, 1, 0, 0, 0, 0, 29, 25, 0, 1, 1, 0, 0, 1, 1]' : 0.106453}", "{'[0, 0, 1, 3, 1, 0, 0, 0, 0, 29, 25, 0, 1, 1, 0, 0, 1, 1]' : 0.106597}", "{'[0, 0, 1, 3, 1, 0, 0, 0, 0, 29, 25, 0, 1, 1, 0, 0, 1, 1]' : 0.106867}", "{'[0, 0, 1, 3, 1, 0, 0, 0, 0, 29, 25, 0, 1, 1, 0, 0, 1, 1]' : 0.106556}"]
returning from 'run': {'[0, 0, 1, 3, 1, 0, 0, 0, 0, 29, 25, 0, 1, 1, 0, 0, 1, 1]': ([0.106772, 0.106983, 0.106647, 0.106635, 0.106585, 0.106531, 0.106491, 0.106458, 0.106594, 0.106765, 0.10655, 0.106999, 0.106643, 0.106533, 0.106497, 0.106536, 0.106546, 0.10659, 0.106595, 0.106542, 0.106633, 0.106808, 0.106685, 0.106488, 0.106489, 0.106566, 0.106453, 0.106597, 0.106867, 0.106556], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 1, 3, 1, 0, 0, 0, 0, 29, 25, 0, 1, 1, 0, 0, 1, 1]': ([0.106772, 0.106983, 0.106647, 0.106635, 0.106585, 0.106531, 0.106491, 0.106458, 0.106594, 0.106765, 0.10655, 0.106999, 0.106643, 0.106533, 0.106497, 0.106536, 0.106546, 0.10659, 0.106595, 0.106542, 0.106633, 0.106808, 0.106685, 0.106488, 0.106489, 0.106566, 0.106453, 0.106597, 0.106867, 0.106556], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	35
        Max loop nest depth: 	4
        Additions: 		2879
        Multiplications: 	868
        Divisions: 		0
        Logical: 		0
        Reads: 			4789
        Writes: 		571
        Comparisons:		35
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest72.exe __orio_perftest72.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest72.exe  
Program Test Output: 
{'[0, 6, 0, 3, 0, 5, 0, 1, 29, 4, 28, 0, 1, 0, 0, 0, 1, 1]' : 0.127884}
{'[0, 6, 0, 3, 0, 5, 0, 1, 29, 4, 28, 0, 1, 0, 0, 0, 1, 1]' : 0.127949}
{'[0, 6, 0, 3, 0, 5, 0, 1, 29, 4, 28, 0, 1, 0, 0, 0, 1, 1]' : 0.127737}
{'[0, 6, 0, 3, 0, 5, 0, 1, 29, 4, 28, 0, 1, 0, 0, 0, 1, 1]' : 0.127767}
{'[0, 6, 0, 3, 0, 5, 0, 1, 29, 4, 28, 0, 1, 0, 0, 0, 1, 1]' : 0.112046}
{'[0, 6, 0, 3, 0, 5, 0, 1, 29, 4, 28, 0, 1, 0, 0, 0, 1, 1]' : 0.108056}
{'[0, 6, 0, 3, 0, 5, 0, 1, 29, 4, 28, 0, 1, 0, 0, 0, 1, 1]' : 0.107991}
{'[0, 6, 0, 3, 0, 5, 0, 1, 29, 4, 28, 0, 1, 0, 0, 0, 1, 1]' : 0.10818}
{'[0, 6, 0, 3, 0, 5, 0, 1, 29, 4, 28, 0, 1, 0, 0, 0, 1, 1]' : 0.108222}
{'[0, 6, 0, 3, 0, 5, 0, 1, 29, 4, 28, 0, 1, 0, 0, 0, 1, 1]' : 0.108511}
{'[0, 6, 0, 3, 0, 5, 0, 1, 29, 4, 28, 0, 1, 0, 0, 0, 1, 1]' : 0.108213}
{'[0, 6, 0, 3, 0, 5, 0, 1, 29, 4, 28, 0, 1, 0, 0, 0, 1, 1]' : 0.10807}
{'[0, 6, 0, 3, 0, 5, 0, 1, 29, 4, 28, 0, 1, 0, 0, 0, 1, 1]' : 0.10809}
{'[0, 6, 0, 3, 0, 5, 0, 1, 29, 4, 28, 0, 1, 0, 0, 0, 1, 1]' : 0.10829}
{'[0, 6, 0, 3, 0, 5, 0, 1, 29, 4, 28, 0, 1, 0, 0, 0, 1, 1]' : 0.107918}
{'[0, 6, 0, 3, 0, 5, 0, 1, 29, 4, 28, 0, 1, 0, 0, 0, 1, 1]' : 0.108054}
{'[0, 6, 0, 3, 0, 5, 0, 1, 29, 4, 28, 0, 1, 0, 0, 0, 1, 1]' : 0.108264}
{'[0, 6, 0, 3, 0, 5, 0, 1, 29, 4, 28, 0, 1, 0, 0, 0, 1, 1]' : 0.108004}
{'[0, 6, 0, 3, 0, 5, 0, 1, 29, 4, 28, 0, 1, 0, 0, 0, 1, 1]' : 0.108163}
{'[0, 6, 0, 3, 0, 5, 0, 1, 29, 4, 28, 0, 1, 0, 0, 0, 1, 1]' : 0.108262}
{'[0, 6, 0, 3, 0, 5, 0, 1, 29, 4, 28, 0, 1, 0, 0, 0, 1, 1]' : 0.108171}
{'[0, 6, 0, 3, 0, 5, 0, 1, 29, 4, 28, 0, 1, 0, 0, 0, 1, 1]' : 0.108125}
{'[0, 6, 0, 3, 0, 5, 0, 1, 29, 4, 28, 0, 1, 0, 0, 0, 1, 1]' : 0.10801}
{'[0, 6, 0, 3, 0, 5, 0, 1, 29, 4, 28, 0, 1, 0, 0, 0, 1, 1]' : 0.108413}
{'[0, 6, 0, 3, 0, 5, 0, 1, 29, 4, 28, 0, 1, 0, 0, 0, 1, 1]' : 0.108001}
{'[0, 6, 0, 3, 0, 5, 0, 1, 29, 4, 28, 0, 1, 0, 0, 0, 1, 1]' : 0.108234}
{'[0, 6, 0, 3, 0, 5, 0, 1, 29, 4, 28, 0, 1, 0, 0, 0, 1, 1]' : 0.108025}
{'[0, 6, 0, 3, 0, 5, 0, 1, 29, 4, 28, 0, 1, 0, 0, 0, 1, 1]' : 0.108059}
{'[0, 6, 0, 3, 0, 5, 0, 1, 29, 4, 28, 0, 1, 0, 0, 0, 1, 1]' : 0.108233}
{'[0, 6, 0, 3, 0, 5, 0, 1, 29, 4, 28, 0, 1, 0, 0, 0, 1, 1]' : 0.10852}

out:
 ["{'[0, 6, 0, 3, 0, 5, 0, 1, 29, 4, 28, 0, 1, 0, 0, 0, 1, 1]' : 0.127884}", "{'[0, 6, 0, 3, 0, 5, 0, 1, 29, 4, 28, 0, 1, 0, 0, 0, 1, 1]' : 0.127949}", "{'[0, 6, 0, 3, 0, 5, 0, 1, 29, 4, 28, 0, 1, 0, 0, 0, 1, 1]' : 0.127737}", "{'[0, 6, 0, 3, 0, 5, 0, 1, 29, 4, 28, 0, 1, 0, 0, 0, 1, 1]' : 0.127767}", "{'[0, 6, 0, 3, 0, 5, 0, 1, 29, 4, 28, 0, 1, 0, 0, 0, 1, 1]' : 0.112046}", "{'[0, 6, 0, 3, 0, 5, 0, 1, 29, 4, 28, 0, 1, 0, 0, 0, 1, 1]' : 0.108056}", "{'[0, 6, 0, 3, 0, 5, 0, 1, 29, 4, 28, 0, 1, 0, 0, 0, 1, 1]' : 0.107991}", "{'[0, 6, 0, 3, 0, 5, 0, 1, 29, 4, 28, 0, 1, 0, 0, 0, 1, 1]' : 0.10818}", "{'[0, 6, 0, 3, 0, 5, 0, 1, 29, 4, 28, 0, 1, 0, 0, 0, 1, 1]' : 0.108222}", "{'[0, 6, 0, 3, 0, 5, 0, 1, 29, 4, 28, 0, 1, 0, 0, 0, 1, 1]' : 0.108511}", "{'[0, 6, 0, 3, 0, 5, 0, 1, 29, 4, 28, 0, 1, 0, 0, 0, 1, 1]' : 0.108213}", "{'[0, 6, 0, 3, 0, 5, 0, 1, 29, 4, 28, 0, 1, 0, 0, 0, 1, 1]' : 0.10807}", "{'[0, 6, 0, 3, 0, 5, 0, 1, 29, 4, 28, 0, 1, 0, 0, 0, 1, 1]' : 0.10809}", "{'[0, 6, 0, 3, 0, 5, 0, 1, 29, 4, 28, 0, 1, 0, 0, 0, 1, 1]' : 0.10829}", "{'[0, 6, 0, 3, 0, 5, 0, 1, 29, 4, 28, 0, 1, 0, 0, 0, 1, 1]' : 0.107918}", "{'[0, 6, 0, 3, 0, 5, 0, 1, 29, 4, 28, 0, 1, 0, 0, 0, 1, 1]' : 0.108054}", "{'[0, 6, 0, 3, 0, 5, 0, 1, 29, 4, 28, 0, 1, 0, 0, 0, 1, 1]' : 0.108264}", "{'[0, 6, 0, 3, 0, 5, 0, 1, 29, 4, 28, 0, 1, 0, 0, 0, 1, 1]' : 0.108004}", "{'[0, 6, 0, 3, 0, 5, 0, 1, 29, 4, 28, 0, 1, 0, 0, 0, 1, 1]' : 0.108163}", "{'[0, 6, 0, 3, 0, 5, 0, 1, 29, 4, 28, 0, 1, 0, 0, 0, 1, 1]' : 0.108262}", "{'[0, 6, 0, 3, 0, 5, 0, 1, 29, 4, 28, 0, 1, 0, 0, 0, 1, 1]' : 0.108171}", "{'[0, 6, 0, 3, 0, 5, 0, 1, 29, 4, 28, 0, 1, 0, 0, 0, 1, 1]' : 0.108125}", "{'[0, 6, 0, 3, 0, 5, 0, 1, 29, 4, 28, 0, 1, 0, 0, 0, 1, 1]' : 0.10801}", "{'[0, 6, 0, 3, 0, 5, 0, 1, 29, 4, 28, 0, 1, 0, 0, 0, 1, 1]' : 0.108413}", "{'[0, 6, 0, 3, 0, 5, 0, 1, 29, 4, 28, 0, 1, 0, 0, 0, 1, 1]' : 0.108001}", "{'[0, 6, 0, 3, 0, 5, 0, 1, 29, 4, 28, 0, 1, 0, 0, 0, 1, 1]' : 0.108234}", "{'[0, 6, 0, 3, 0, 5, 0, 1, 29, 4, 28, 0, 1, 0, 0, 0, 1, 1]' : 0.108025}", "{'[0, 6, 0, 3, 0, 5, 0, 1, 29, 4, 28, 0, 1, 0, 0, 0, 1, 1]' : 0.108059}", "{'[0, 6, 0, 3, 0, 5, 0, 1, 29, 4, 28, 0, 1, 0, 0, 0, 1, 1]' : 0.108233}", "{'[0, 6, 0, 3, 0, 5, 0, 1, 29, 4, 28, 0, 1, 0, 0, 0, 1, 1]' : 0.10852}"]
returning from 'run': {'[0, 6, 0, 3, 0, 5, 0, 1, 29, 4, 28, 0, 1, 0, 0, 0, 1, 1]': ([0.127884, 0.127949, 0.127737, 0.127767, 0.112046, 0.108056, 0.107991, 0.10818, 0.108222, 0.108511, 0.108213, 0.10807, 0.10809, 0.10829, 0.107918, 0.108054, 0.108264, 0.108004, 0.108163, 0.108262, 0.108171, 0.108125, 0.10801, 0.108413, 0.108001, 0.108234, 0.108025, 0.108059, 0.108233, 0.10852], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 0, 3, 0, 5, 0, 1, 29, 4, 28, 0, 1, 0, 0, 0, 1, 1]': ([0.127884, 0.127949, 0.127737, 0.127767, 0.112046, 0.108056, 0.107991, 0.10818, 0.108222, 0.108511, 0.108213, 0.10807, 0.10809, 0.10829, 0.107918, 0.108054, 0.108264, 0.108004, 0.108163, 0.108262, 0.108171, 0.108125, 0.10801, 0.108413, 0.108001, 0.108234, 0.108025, 0.108059, 0.108233, 0.10852], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = kkk
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	5
        Additions: 		15833
        Multiplications: 	4092
        Divisions: 		0
        Logical: 		0
        Reads: 			22716
        Writes: 		2110
        Comparisons:		22
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest73.exe __orio_perftest73.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest73.exe  
Program Test Output: 
{'[0, 1, 4, 3, 3, 2, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.210629}
{'[0, 1, 4, 3, 3, 2, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.209619}
{'[0, 1, 4, 3, 3, 2, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.19714}
{'[0, 1, 4, 3, 3, 2, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.184089}
{'[0, 1, 4, 3, 3, 2, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.18434}
{'[0, 1, 4, 3, 3, 2, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.183688}
{'[0, 1, 4, 3, 3, 2, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.183562}
{'[0, 1, 4, 3, 3, 2, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.18357}
{'[0, 1, 4, 3, 3, 2, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.184277}
{'[0, 1, 4, 3, 3, 2, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.182824}
{'[0, 1, 4, 3, 3, 2, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.18417}
{'[0, 1, 4, 3, 3, 2, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.183821}
{'[0, 1, 4, 3, 3, 2, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.184352}
{'[0, 1, 4, 3, 3, 2, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.183598}
{'[0, 1, 4, 3, 3, 2, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.183605}
{'[0, 1, 4, 3, 3, 2, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.183865}
{'[0, 1, 4, 3, 3, 2, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.183903}
{'[0, 1, 4, 3, 3, 2, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.183626}
{'[0, 1, 4, 3, 3, 2, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.183684}
{'[0, 1, 4, 3, 3, 2, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.183719}
{'[0, 1, 4, 3, 3, 2, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.183851}
{'[0, 1, 4, 3, 3, 2, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.183723}
{'[0, 1, 4, 3, 3, 2, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.184078}
{'[0, 1, 4, 3, 3, 2, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.184116}
{'[0, 1, 4, 3, 3, 2, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.183531}
{'[0, 1, 4, 3, 3, 2, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.183749}
{'[0, 1, 4, 3, 3, 2, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.184171}
{'[0, 1, 4, 3, 3, 2, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.184058}
{'[0, 1, 4, 3, 3, 2, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.184485}
{'[0, 1, 4, 3, 3, 2, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.18364}

out:
 ["{'[0, 1, 4, 3, 3, 2, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.210629}", "{'[0, 1, 4, 3, 3, 2, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.209619}", "{'[0, 1, 4, 3, 3, 2, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.19714}", "{'[0, 1, 4, 3, 3, 2, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.184089}", "{'[0, 1, 4, 3, 3, 2, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.18434}", "{'[0, 1, 4, 3, 3, 2, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.183688}", "{'[0, 1, 4, 3, 3, 2, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.183562}", "{'[0, 1, 4, 3, 3, 2, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.18357}", "{'[0, 1, 4, 3, 3, 2, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.184277}", "{'[0, 1, 4, 3, 3, 2, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.182824}", "{'[0, 1, 4, 3, 3, 2, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.18417}", "{'[0, 1, 4, 3, 3, 2, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.183821}", "{'[0, 1, 4, 3, 3, 2, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.184352}", "{'[0, 1, 4, 3, 3, 2, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.183598}", "{'[0, 1, 4, 3, 3, 2, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.183605}", "{'[0, 1, 4, 3, 3, 2, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.183865}", "{'[0, 1, 4, 3, 3, 2, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.183903}", "{'[0, 1, 4, 3, 3, 2, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.183626}", "{'[0, 1, 4, 3, 3, 2, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.183684}", "{'[0, 1, 4, 3, 3, 2, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.183719}", "{'[0, 1, 4, 3, 3, 2, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.183851}", "{'[0, 1, 4, 3, 3, 2, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.183723}", "{'[0, 1, 4, 3, 3, 2, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.184078}", "{'[0, 1, 4, 3, 3, 2, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.184116}", "{'[0, 1, 4, 3, 3, 2, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.183531}", "{'[0, 1, 4, 3, 3, 2, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.183749}", "{'[0, 1, 4, 3, 3, 2, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.184171}", "{'[0, 1, 4, 3, 3, 2, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.184058}", "{'[0, 1, 4, 3, 3, 2, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.184485}", "{'[0, 1, 4, 3, 3, 2, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.18364}"]
returning from 'run': {'[0, 1, 4, 3, 3, 2, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]': ([0.210629, 0.209619, 0.19714, 0.184089, 0.18434, 0.183688, 0.183562, 0.18357, 0.184277, 0.182824, 0.18417, 0.183821, 0.184352, 0.183598, 0.183605, 0.183865, 0.183903, 0.183626, 0.183684, 0.183719, 0.183851, 0.183723, 0.184078, 0.184116, 0.183531, 0.183749, 0.184171, 0.184058, 0.184485, 0.18364], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 4, 3, 3, 2, 0, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]': ([0.210629, 0.209619, 0.19714, 0.184089, 0.18434, 0.183688, 0.183562, 0.18357, 0.184277, 0.182824, 0.18417, 0.183821, 0.184352, 0.183598, 0.183605, 0.183865, 0.183903, 0.183626, 0.183684, 0.183719, 0.183851, 0.183723, 0.184078, 0.184116, 0.183531, 0.183749, 0.184171, 0.184058, 0.184485, 0.18364], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	100
        Max loop nest depth: 	4
        Additions: 		4172
        Multiplications: 	928
        Divisions: 		0
        Logical: 		0
        Reads: 			6597
        Writes: 		818
        Comparisons:		100
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest74.exe __orio_perftest74.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest74.exe  
Program Test Output: 
{'[0, 0, 3, 3, 6, 0, 1, 1, 29, 27, 29, 0, 0, 1, 1, 0, 1, 1]' : 0.263174}
{'[0, 0, 3, 3, 6, 0, 1, 1, 29, 27, 29, 0, 0, 1, 1, 0, 1, 1]' : 0.247934}
{'[0, 0, 3, 3, 6, 0, 1, 1, 29, 27, 29, 0, 0, 1, 1, 0, 1, 1]' : 0.240026}
{'[0, 0, 3, 3, 6, 0, 1, 1, 29, 27, 29, 0, 0, 1, 1, 0, 1, 1]' : 0.240128}
{'[0, 0, 3, 3, 6, 0, 1, 1, 29, 27, 29, 0, 0, 1, 1, 0, 1, 1]' : 0.240006}
{'[0, 0, 3, 3, 6, 0, 1, 1, 29, 27, 29, 0, 0, 1, 1, 0, 1, 1]' : 0.23999}
{'[0, 0, 3, 3, 6, 0, 1, 1, 29, 27, 29, 0, 0, 1, 1, 0, 1, 1]' : 0.240565}
{'[0, 0, 3, 3, 6, 0, 1, 1, 29, 27, 29, 0, 0, 1, 1, 0, 1, 1]' : 0.239956}
{'[0, 0, 3, 3, 6, 0, 1, 1, 29, 27, 29, 0, 0, 1, 1, 0, 1, 1]' : 0.240336}
{'[0, 0, 3, 3, 6, 0, 1, 1, 29, 27, 29, 0, 0, 1, 1, 0, 1, 1]' : 0.239987}
{'[0, 0, 3, 3, 6, 0, 1, 1, 29, 27, 29, 0, 0, 1, 1, 0, 1, 1]' : 0.240197}
{'[0, 0, 3, 3, 6, 0, 1, 1, 29, 27, 29, 0, 0, 1, 1, 0, 1, 1]' : 0.239998}
{'[0, 0, 3, 3, 6, 0, 1, 1, 29, 27, 29, 0, 0, 1, 1, 0, 1, 1]' : 0.240263}
{'[0, 0, 3, 3, 6, 0, 1, 1, 29, 27, 29, 0, 0, 1, 1, 0, 1, 1]' : 0.239955}
{'[0, 0, 3, 3, 6, 0, 1, 1, 29, 27, 29, 0, 0, 1, 1, 0, 1, 1]' : 0.240214}
{'[0, 0, 3, 3, 6, 0, 1, 1, 29, 27, 29, 0, 0, 1, 1, 0, 1, 1]' : 0.239708}
{'[0, 0, 3, 3, 6, 0, 1, 1, 29, 27, 29, 0, 0, 1, 1, 0, 1, 1]' : 0.239988}
{'[0, 0, 3, 3, 6, 0, 1, 1, 29, 27, 29, 0, 0, 1, 1, 0, 1, 1]' : 0.239973}
{'[0, 0, 3, 3, 6, 0, 1, 1, 29, 27, 29, 0, 0, 1, 1, 0, 1, 1]' : 0.239769}
{'[0, 0, 3, 3, 6, 0, 1, 1, 29, 27, 29, 0, 0, 1, 1, 0, 1, 1]' : 0.240618}
{'[0, 0, 3, 3, 6, 0, 1, 1, 29, 27, 29, 0, 0, 1, 1, 0, 1, 1]' : 0.240151}
{'[0, 0, 3, 3, 6, 0, 1, 1, 29, 27, 29, 0, 0, 1, 1, 0, 1, 1]' : 0.239825}
{'[0, 0, 3, 3, 6, 0, 1, 1, 29, 27, 29, 0, 0, 1, 1, 0, 1, 1]' : 0.240581}
{'[0, 0, 3, 3, 6, 0, 1, 1, 29, 27, 29, 0, 0, 1, 1, 0, 1, 1]' : 0.239988}
{'[0, 0, 3, 3, 6, 0, 1, 1, 29, 27, 29, 0, 0, 1, 1, 0, 1, 1]' : 0.239426}
{'[0, 0, 3, 3, 6, 0, 1, 1, 29, 27, 29, 0, 0, 1, 1, 0, 1, 1]' : 0.236189}
{'[0, 0, 3, 3, 6, 0, 1, 1, 29, 27, 29, 0, 0, 1, 1, 0, 1, 1]' : 0.233739}
{'[0, 0, 3, 3, 6, 0, 1, 1, 29, 27, 29, 0, 0, 1, 1, 0, 1, 1]' : 0.234973}
{'[0, 0, 3, 3, 6, 0, 1, 1, 29, 27, 29, 0, 0, 1, 1, 0, 1, 1]' : 0.233679}
{'[0, 0, 3, 3, 6, 0, 1, 1, 29, 27, 29, 0, 0, 1, 1, 0, 1, 1]' : 0.236497}

out:
 ["{'[0, 0, 3, 3, 6, 0, 1, 1, 29, 27, 29, 0, 0, 1, 1, 0, 1, 1]' : 0.263174}", "{'[0, 0, 3, 3, 6, 0, 1, 1, 29, 27, 29, 0, 0, 1, 1, 0, 1, 1]' : 0.247934}", "{'[0, 0, 3, 3, 6, 0, 1, 1, 29, 27, 29, 0, 0, 1, 1, 0, 1, 1]' : 0.240026}", "{'[0, 0, 3, 3, 6, 0, 1, 1, 29, 27, 29, 0, 0, 1, 1, 0, 1, 1]' : 0.240128}", "{'[0, 0, 3, 3, 6, 0, 1, 1, 29, 27, 29, 0, 0, 1, 1, 0, 1, 1]' : 0.240006}", "{'[0, 0, 3, 3, 6, 0, 1, 1, 29, 27, 29, 0, 0, 1, 1, 0, 1, 1]' : 0.23999}", "{'[0, 0, 3, 3, 6, 0, 1, 1, 29, 27, 29, 0, 0, 1, 1, 0, 1, 1]' : 0.240565}", "{'[0, 0, 3, 3, 6, 0, 1, 1, 29, 27, 29, 0, 0, 1, 1, 0, 1, 1]' : 0.239956}", "{'[0, 0, 3, 3, 6, 0, 1, 1, 29, 27, 29, 0, 0, 1, 1, 0, 1, 1]' : 0.240336}", "{'[0, 0, 3, 3, 6, 0, 1, 1, 29, 27, 29, 0, 0, 1, 1, 0, 1, 1]' : 0.239987}", "{'[0, 0, 3, 3, 6, 0, 1, 1, 29, 27, 29, 0, 0, 1, 1, 0, 1, 1]' : 0.240197}", "{'[0, 0, 3, 3, 6, 0, 1, 1, 29, 27, 29, 0, 0, 1, 1, 0, 1, 1]' : 0.239998}", "{'[0, 0, 3, 3, 6, 0, 1, 1, 29, 27, 29, 0, 0, 1, 1, 0, 1, 1]' : 0.240263}", "{'[0, 0, 3, 3, 6, 0, 1, 1, 29, 27, 29, 0, 0, 1, 1, 0, 1, 1]' : 0.239955}", "{'[0, 0, 3, 3, 6, 0, 1, 1, 29, 27, 29, 0, 0, 1, 1, 0, 1, 1]' : 0.240214}", "{'[0, 0, 3, 3, 6, 0, 1, 1, 29, 27, 29, 0, 0, 1, 1, 0, 1, 1]' : 0.239708}", "{'[0, 0, 3, 3, 6, 0, 1, 1, 29, 27, 29, 0, 0, 1, 1, 0, 1, 1]' : 0.239988}", "{'[0, 0, 3, 3, 6, 0, 1, 1, 29, 27, 29, 0, 0, 1, 1, 0, 1, 1]' : 0.239973}", "{'[0, 0, 3, 3, 6, 0, 1, 1, 29, 27, 29, 0, 0, 1, 1, 0, 1, 1]' : 0.239769}", "{'[0, 0, 3, 3, 6, 0, 1, 1, 29, 27, 29, 0, 0, 1, 1, 0, 1, 1]' : 0.240618}", "{'[0, 0, 3, 3, 6, 0, 1, 1, 29, 27, 29, 0, 0, 1, 1, 0, 1, 1]' : 0.240151}", "{'[0, 0, 3, 3, 6, 0, 1, 1, 29, 27, 29, 0, 0, 1, 1, 0, 1, 1]' : 0.239825}", "{'[0, 0, 3, 3, 6, 0, 1, 1, 29, 27, 29, 0, 0, 1, 1, 0, 1, 1]' : 0.240581}", "{'[0, 0, 3, 3, 6, 0, 1, 1, 29, 27, 29, 0, 0, 1, 1, 0, 1, 1]' : 0.239988}", "{'[0, 0, 3, 3, 6, 0, 1, 1, 29, 27, 29, 0, 0, 1, 1, 0, 1, 1]' : 0.239426}", "{'[0, 0, 3, 3, 6, 0, 1, 1, 29, 27, 29, 0, 0, 1, 1, 0, 1, 1]' : 0.236189}", "{'[0, 0, 3, 3, 6, 0, 1, 1, 29, 27, 29, 0, 0, 1, 1, 0, 1, 1]' : 0.233739}", "{'[0, 0, 3, 3, 6, 0, 1, 1, 29, 27, 29, 0, 0, 1, 1, 0, 1, 1]' : 0.234973}", "{'[0, 0, 3, 3, 6, 0, 1, 1, 29, 27, 29, 0, 0, 1, 1, 0, 1, 1]' : 0.233679}", "{'[0, 0, 3, 3, 6, 0, 1, 1, 29, 27, 29, 0, 0, 1, 1, 0, 1, 1]' : 0.236497}"]
returning from 'run': {'[0, 0, 3, 3, 6, 0, 1, 1, 29, 27, 29, 0, 0, 1, 1, 0, 1, 1]': ([0.263174, 0.247934, 0.240026, 0.240128, 0.240006, 0.23999, 0.240565, 0.239956, 0.240336, 0.239987, 0.240197, 0.239998, 0.240263, 0.239955, 0.240214, 0.239708, 0.239988, 0.239973, 0.239769, 0.240618, 0.240151, 0.239825, 0.240581, 0.239988, 0.239426, 0.236189, 0.233739, 0.234973, 0.233679, 0.236497], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 3, 3, 6, 0, 1, 1, 29, 27, 29, 0, 0, 1, 1, 0, 1, 1]': ([0.263174, 0.247934, 0.240026, 0.240128, 0.240006, 0.23999, 0.240565, 0.239956, 0.240336, 0.239987, 0.240197, 0.239998, 0.240263, 0.239955, 0.240214, 0.239708, 0.239988, 0.239973, 0.239769, 0.240618, 0.240151, 0.239825, 0.240581, 0.239988, 0.239426, 0.236189, 0.233739, 0.234973, 0.233679, 0.236497], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	52
        Max loop nest depth: 	4
        Additions: 		1868
        Multiplications: 	416
        Divisions: 		0
        Logical: 		0
        Reads: 			3039
        Writes: 		399
        Comparisons:		52
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest75.exe __orio_perftest75.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest75.exe  
Program Test Output: 
{'[0, 3, 0, 3, 1, 2, 1, 1, 29, 11, 0, 5, 0, 1, 1, 0, 0, 1]' : 0.211}
{'[0, 3, 0, 3, 1, 2, 1, 1, 29, 11, 0, 5, 0, 1, 1, 0, 0, 1]' : 0.216528}
{'[0, 3, 0, 3, 1, 2, 1, 1, 29, 11, 0, 5, 0, 1, 1, 0, 0, 1]' : 0.208005}
{'[0, 3, 0, 3, 1, 2, 1, 1, 29, 11, 0, 5, 0, 1, 1, 0, 0, 1]' : 0.183405}
{'[0, 3, 0, 3, 1, 2, 1, 1, 29, 11, 0, 5, 0, 1, 1, 0, 0, 1]' : 0.183131}
{'[0, 3, 0, 3, 1, 2, 1, 1, 29, 11, 0, 5, 0, 1, 1, 0, 0, 1]' : 0.182993}
{'[0, 3, 0, 3, 1, 2, 1, 1, 29, 11, 0, 5, 0, 1, 1, 0, 0, 1]' : 0.182928}
{'[0, 3, 0, 3, 1, 2, 1, 1, 29, 11, 0, 5, 0, 1, 1, 0, 0, 1]' : 0.183197}
{'[0, 3, 0, 3, 1, 2, 1, 1, 29, 11, 0, 5, 0, 1, 1, 0, 0, 1]' : 0.183407}
{'[0, 3, 0, 3, 1, 2, 1, 1, 29, 11, 0, 5, 0, 1, 1, 0, 0, 1]' : 0.182991}
{'[0, 3, 0, 3, 1, 2, 1, 1, 29, 11, 0, 5, 0, 1, 1, 0, 0, 1]' : 0.183488}
{'[0, 3, 0, 3, 1, 2, 1, 1, 29, 11, 0, 5, 0, 1, 1, 0, 0, 1]' : 0.183291}
{'[0, 3, 0, 3, 1, 2, 1, 1, 29, 11, 0, 5, 0, 1, 1, 0, 0, 1]' : 0.183254}
{'[0, 3, 0, 3, 1, 2, 1, 1, 29, 11, 0, 5, 0, 1, 1, 0, 0, 1]' : 0.18395}
{'[0, 3, 0, 3, 1, 2, 1, 1, 29, 11, 0, 5, 0, 1, 1, 0, 0, 1]' : 0.183708}
{'[0, 3, 0, 3, 1, 2, 1, 1, 29, 11, 0, 5, 0, 1, 1, 0, 0, 1]' : 0.183575}
{'[0, 3, 0, 3, 1, 2, 1, 1, 29, 11, 0, 5, 0, 1, 1, 0, 0, 1]' : 0.183434}
{'[0, 3, 0, 3, 1, 2, 1, 1, 29, 11, 0, 5, 0, 1, 1, 0, 0, 1]' : 0.183328}
{'[0, 3, 0, 3, 1, 2, 1, 1, 29, 11, 0, 5, 0, 1, 1, 0, 0, 1]' : 0.183346}
{'[0, 3, 0, 3, 1, 2, 1, 1, 29, 11, 0, 5, 0, 1, 1, 0, 0, 1]' : 0.183569}
{'[0, 3, 0, 3, 1, 2, 1, 1, 29, 11, 0, 5, 0, 1, 1, 0, 0, 1]' : 0.183816}
{'[0, 3, 0, 3, 1, 2, 1, 1, 29, 11, 0, 5, 0, 1, 1, 0, 0, 1]' : 0.183396}
{'[0, 3, 0, 3, 1, 2, 1, 1, 29, 11, 0, 5, 0, 1, 1, 0, 0, 1]' : 0.183618}
{'[0, 3, 0, 3, 1, 2, 1, 1, 29, 11, 0, 5, 0, 1, 1, 0, 0, 1]' : 0.183266}
{'[0, 3, 0, 3, 1, 2, 1, 1, 29, 11, 0, 5, 0, 1, 1, 0, 0, 1]' : 0.183534}
{'[0, 3, 0, 3, 1, 2, 1, 1, 29, 11, 0, 5, 0, 1, 1, 0, 0, 1]' : 0.183626}
{'[0, 3, 0, 3, 1, 2, 1, 1, 29, 11, 0, 5, 0, 1, 1, 0, 0, 1]' : 0.183821}
{'[0, 3, 0, 3, 1, 2, 1, 1, 29, 11, 0, 5, 0, 1, 1, 0, 0, 1]' : 0.183601}
{'[0, 3, 0, 3, 1, 2, 1, 1, 29, 11, 0, 5, 0, 1, 1, 0, 0, 1]' : 0.183367}
{'[0, 3, 0, 3, 1, 2, 1, 1, 29, 11, 0, 5, 0, 1, 1, 0, 0, 1]' : 0.183492}

out:
 ["{'[0, 3, 0, 3, 1, 2, 1, 1, 29, 11, 0, 5, 0, 1, 1, 0, 0, 1]' : 0.211}", "{'[0, 3, 0, 3, 1, 2, 1, 1, 29, 11, 0, 5, 0, 1, 1, 0, 0, 1]' : 0.216528}", "{'[0, 3, 0, 3, 1, 2, 1, 1, 29, 11, 0, 5, 0, 1, 1, 0, 0, 1]' : 0.208005}", "{'[0, 3, 0, 3, 1, 2, 1, 1, 29, 11, 0, 5, 0, 1, 1, 0, 0, 1]' : 0.183405}", "{'[0, 3, 0, 3, 1, 2, 1, 1, 29, 11, 0, 5, 0, 1, 1, 0, 0, 1]' : 0.183131}", "{'[0, 3, 0, 3, 1, 2, 1, 1, 29, 11, 0, 5, 0, 1, 1, 0, 0, 1]' : 0.182993}", "{'[0, 3, 0, 3, 1, 2, 1, 1, 29, 11, 0, 5, 0, 1, 1, 0, 0, 1]' : 0.182928}", "{'[0, 3, 0, 3, 1, 2, 1, 1, 29, 11, 0, 5, 0, 1, 1, 0, 0, 1]' : 0.183197}", "{'[0, 3, 0, 3, 1, 2, 1, 1, 29, 11, 0, 5, 0, 1, 1, 0, 0, 1]' : 0.183407}", "{'[0, 3, 0, 3, 1, 2, 1, 1, 29, 11, 0, 5, 0, 1, 1, 0, 0, 1]' : 0.182991}", "{'[0, 3, 0, 3, 1, 2, 1, 1, 29, 11, 0, 5, 0, 1, 1, 0, 0, 1]' : 0.183488}", "{'[0, 3, 0, 3, 1, 2, 1, 1, 29, 11, 0, 5, 0, 1, 1, 0, 0, 1]' : 0.183291}", "{'[0, 3, 0, 3, 1, 2, 1, 1, 29, 11, 0, 5, 0, 1, 1, 0, 0, 1]' : 0.183254}", "{'[0, 3, 0, 3, 1, 2, 1, 1, 29, 11, 0, 5, 0, 1, 1, 0, 0, 1]' : 0.18395}", "{'[0, 3, 0, 3, 1, 2, 1, 1, 29, 11, 0, 5, 0, 1, 1, 0, 0, 1]' : 0.183708}", "{'[0, 3, 0, 3, 1, 2, 1, 1, 29, 11, 0, 5, 0, 1, 1, 0, 0, 1]' : 0.183575}", "{'[0, 3, 0, 3, 1, 2, 1, 1, 29, 11, 0, 5, 0, 1, 1, 0, 0, 1]' : 0.183434}", "{'[0, 3, 0, 3, 1, 2, 1, 1, 29, 11, 0, 5, 0, 1, 1, 0, 0, 1]' : 0.183328}", "{'[0, 3, 0, 3, 1, 2, 1, 1, 29, 11, 0, 5, 0, 1, 1, 0, 0, 1]' : 0.183346}", "{'[0, 3, 0, 3, 1, 2, 1, 1, 29, 11, 0, 5, 0, 1, 1, 0, 0, 1]' : 0.183569}", "{'[0, 3, 0, 3, 1, 2, 1, 1, 29, 11, 0, 5, 0, 1, 1, 0, 0, 1]' : 0.183816}", "{'[0, 3, 0, 3, 1, 2, 1, 1, 29, 11, 0, 5, 0, 1, 1, 0, 0, 1]' : 0.183396}", "{'[0, 3, 0, 3, 1, 2, 1, 1, 29, 11, 0, 5, 0, 1, 1, 0, 0, 1]' : 0.183618}", "{'[0, 3, 0, 3, 1, 2, 1, 1, 29, 11, 0, 5, 0, 1, 1, 0, 0, 1]' : 0.183266}", "{'[0, 3, 0, 3, 1, 2, 1, 1, 29, 11, 0, 5, 0, 1, 1, 0, 0, 1]' : 0.183534}", "{'[0, 3, 0, 3, 1, 2, 1, 1, 29, 11, 0, 5, 0, 1, 1, 0, 0, 1]' : 0.183626}", "{'[0, 3, 0, 3, 1, 2, 1, 1, 29, 11, 0, 5, 0, 1, 1, 0, 0, 1]' : 0.183821}", "{'[0, 3, 0, 3, 1, 2, 1, 1, 29, 11, 0, 5, 0, 1, 1, 0, 0, 1]' : 0.183601}", "{'[0, 3, 0, 3, 1, 2, 1, 1, 29, 11, 0, 5, 0, 1, 1, 0, 0, 1]' : 0.183367}", "{'[0, 3, 0, 3, 1, 2, 1, 1, 29, 11, 0, 5, 0, 1, 1, 0, 0, 1]' : 0.183492}"]
returning from 'run': {'[0, 3, 0, 3, 1, 2, 1, 1, 29, 11, 0, 5, 0, 1, 1, 0, 0, 1]': ([0.211, 0.216528, 0.208005, 0.183405, 0.183131, 0.182993, 0.182928, 0.183197, 0.183407, 0.182991, 0.183488, 0.183291, 0.183254, 0.18395, 0.183708, 0.183575, 0.183434, 0.183328, 0.183346, 0.183569, 0.183816, 0.183396, 0.183618, 0.183266, 0.183534, 0.183626, 0.183821, 0.183601, 0.183367, 0.183492], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 3, 0, 3, 1, 2, 1, 1, 29, 11, 0, 5, 0, 1, 1, 0, 0, 1]': ([0.211, 0.216528, 0.208005, 0.183405, 0.183131, 0.182993, 0.182928, 0.183197, 0.183407, 0.182991, 0.183488, 0.183291, 0.183254, 0.18395, 0.183708, 0.183575, 0.183434, 0.183328, 0.183346, 0.183569, 0.183816, 0.183396, 0.183618, 0.183266, 0.183534, 0.183626, 0.183821, 0.183601, 0.183367, 0.183492], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	42
        Max loop nest depth: 	5
        Additions: 		8662
        Multiplications: 	2560
        Divisions: 		0
        Logical: 		0
        Reads: 			13281
        Writes: 		1436
        Comparisons:		42
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest76.exe __orio_perftest76.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest76.exe  
Program Test Output: 
{'[0, 1, 0, 3, 3, 0, 1, 1, 19, 6, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.212415}
{'[0, 1, 0, 3, 3, 0, 1, 1, 19, 6, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.213333}
{'[0, 1, 0, 3, 3, 0, 1, 1, 19, 6, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.208369}
{'[0, 1, 0, 3, 3, 0, 1, 1, 19, 6, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.185951}
{'[0, 1, 0, 3, 3, 0, 1, 1, 19, 6, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.185613}
{'[0, 1, 0, 3, 3, 0, 1, 1, 19, 6, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.187152}
{'[0, 1, 0, 3, 3, 0, 1, 1, 19, 6, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.185731}
{'[0, 1, 0, 3, 3, 0, 1, 1, 19, 6, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.185406}
{'[0, 1, 0, 3, 3, 0, 1, 1, 19, 6, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.187053}
{'[0, 1, 0, 3, 3, 0, 1, 1, 19, 6, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.186279}
{'[0, 1, 0, 3, 3, 0, 1, 1, 19, 6, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.186797}
{'[0, 1, 0, 3, 3, 0, 1, 1, 19, 6, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.18704}
{'[0, 1, 0, 3, 3, 0, 1, 1, 19, 6, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.187121}
{'[0, 1, 0, 3, 3, 0, 1, 1, 19, 6, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.187065}
{'[0, 1, 0, 3, 3, 0, 1, 1, 19, 6, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.186039}
{'[0, 1, 0, 3, 3, 0, 1, 1, 19, 6, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.185784}
{'[0, 1, 0, 3, 3, 0, 1, 1, 19, 6, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.186331}
{'[0, 1, 0, 3, 3, 0, 1, 1, 19, 6, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.186544}
{'[0, 1, 0, 3, 3, 0, 1, 1, 19, 6, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.186397}
{'[0, 1, 0, 3, 3, 0, 1, 1, 19, 6, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.187847}
{'[0, 1, 0, 3, 3, 0, 1, 1, 19, 6, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.186093}
{'[0, 1, 0, 3, 3, 0, 1, 1, 19, 6, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.186234}
{'[0, 1, 0, 3, 3, 0, 1, 1, 19, 6, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.18752}
{'[0, 1, 0, 3, 3, 0, 1, 1, 19, 6, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.186064}
{'[0, 1, 0, 3, 3, 0, 1, 1, 19, 6, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.187026}
{'[0, 1, 0, 3, 3, 0, 1, 1, 19, 6, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.186734}
{'[0, 1, 0, 3, 3, 0, 1, 1, 19, 6, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.187363}
{'[0, 1, 0, 3, 3, 0, 1, 1, 19, 6, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.186402}
{'[0, 1, 0, 3, 3, 0, 1, 1, 19, 6, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.186539}
{'[0, 1, 0, 3, 3, 0, 1, 1, 19, 6, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.186288}

out:
 ["{'[0, 1, 0, 3, 3, 0, 1, 1, 19, 6, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.212415}", "{'[0, 1, 0, 3, 3, 0, 1, 1, 19, 6, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.213333}", "{'[0, 1, 0, 3, 3, 0, 1, 1, 19, 6, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.208369}", "{'[0, 1, 0, 3, 3, 0, 1, 1, 19, 6, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.185951}", "{'[0, 1, 0, 3, 3, 0, 1, 1, 19, 6, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.185613}", "{'[0, 1, 0, 3, 3, 0, 1, 1, 19, 6, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.187152}", "{'[0, 1, 0, 3, 3, 0, 1, 1, 19, 6, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.185731}", "{'[0, 1, 0, 3, 3, 0, 1, 1, 19, 6, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.185406}", "{'[0, 1, 0, 3, 3, 0, 1, 1, 19, 6, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.187053}", "{'[0, 1, 0, 3, 3, 0, 1, 1, 19, 6, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.186279}", "{'[0, 1, 0, 3, 3, 0, 1, 1, 19, 6, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.186797}", "{'[0, 1, 0, 3, 3, 0, 1, 1, 19, 6, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.18704}", "{'[0, 1, 0, 3, 3, 0, 1, 1, 19, 6, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.187121}", "{'[0, 1, 0, 3, 3, 0, 1, 1, 19, 6, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.187065}", "{'[0, 1, 0, 3, 3, 0, 1, 1, 19, 6, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.186039}", "{'[0, 1, 0, 3, 3, 0, 1, 1, 19, 6, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.185784}", "{'[0, 1, 0, 3, 3, 0, 1, 1, 19, 6, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.186331}", "{'[0, 1, 0, 3, 3, 0, 1, 1, 19, 6, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.186544}", "{'[0, 1, 0, 3, 3, 0, 1, 1, 19, 6, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.186397}", "{'[0, 1, 0, 3, 3, 0, 1, 1, 19, 6, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.187847}", "{'[0, 1, 0, 3, 3, 0, 1, 1, 19, 6, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.186093}", "{'[0, 1, 0, 3, 3, 0, 1, 1, 19, 6, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.186234}", "{'[0, 1, 0, 3, 3, 0, 1, 1, 19, 6, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.18752}", "{'[0, 1, 0, 3, 3, 0, 1, 1, 19, 6, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.186064}", "{'[0, 1, 0, 3, 3, 0, 1, 1, 19, 6, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.187026}", "{'[0, 1, 0, 3, 3, 0, 1, 1, 19, 6, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.186734}", "{'[0, 1, 0, 3, 3, 0, 1, 1, 19, 6, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.187363}", "{'[0, 1, 0, 3, 3, 0, 1, 1, 19, 6, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.186402}", "{'[0, 1, 0, 3, 3, 0, 1, 1, 19, 6, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.186539}", "{'[0, 1, 0, 3, 3, 0, 1, 1, 19, 6, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.186288}"]
returning from 'run': {'[0, 1, 0, 3, 3, 0, 1, 1, 19, 6, 0, 29, 2, 0, 0, 0, 1, 1]': ([0.212415, 0.213333, 0.208369, 0.185951, 0.185613, 0.187152, 0.185731, 0.185406, 0.187053, 0.186279, 0.186797, 0.18704, 0.187121, 0.187065, 0.186039, 0.185784, 0.186331, 0.186544, 0.186397, 0.187847, 0.186093, 0.186234, 0.18752, 0.186064, 0.187026, 0.186734, 0.187363, 0.186402, 0.186539, 0.186288], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 0, 3, 3, 0, 1, 1, 19, 6, 0, 29, 2, 0, 0, 0, 1, 1]': ([0.212415, 0.213333, 0.208369, 0.185951, 0.185613, 0.187152, 0.185731, 0.185406, 0.187053, 0.186279, 0.186797, 0.18704, 0.187121, 0.187065, 0.186039, 0.185784, 0.186331, 0.186544, 0.186397, 0.187847, 0.186093, 0.186234, 0.18752, 0.186064, 0.187026, 0.186734, 0.187363, 0.186402, 0.186539, 0.186288], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	5
        Additions: 		1148
        Multiplications: 	360
        Divisions: 		0
        Logical: 		0
        Reads: 			1980
        Writes: 		238
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest77.exe __orio_perftest77.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest77.exe  
Program Test Output: 
{'[0, 2, 6, 3, 0, 6, 0, 0, 0, 0, 4, 4, 1, 0, 1, 0, 1, 1]' : 0.123707}
{'[0, 2, 6, 3, 0, 6, 0, 0, 0, 0, 4, 4, 1, 0, 1, 0, 1, 1]' : 0.12365}
{'[0, 2, 6, 3, 0, 6, 0, 0, 0, 0, 4, 4, 1, 0, 1, 0, 1, 1]' : 0.123436}
{'[0, 2, 6, 3, 0, 6, 0, 0, 0, 0, 4, 4, 1, 0, 1, 0, 1, 1]' : 0.114263}
{'[0, 2, 6, 3, 0, 6, 0, 0, 0, 0, 4, 4, 1, 0, 1, 0, 1, 1]' : 0.106591}
{'[0, 2, 6, 3, 0, 6, 0, 0, 0, 0, 4, 4, 1, 0, 1, 0, 1, 1]' : 0.106681}
{'[0, 2, 6, 3, 0, 6, 0, 0, 0, 0, 4, 4, 1, 0, 1, 0, 1, 1]' : 0.10646}
{'[0, 2, 6, 3, 0, 6, 0, 0, 0, 0, 4, 4, 1, 0, 1, 0, 1, 1]' : 0.106531}
{'[0, 2, 6, 3, 0, 6, 0, 0, 0, 0, 4, 4, 1, 0, 1, 0, 1, 1]' : 0.106754}
{'[0, 2, 6, 3, 0, 6, 0, 0, 0, 0, 4, 4, 1, 0, 1, 0, 1, 1]' : 0.106866}
{'[0, 2, 6, 3, 0, 6, 0, 0, 0, 0, 4, 4, 1, 0, 1, 0, 1, 1]' : 0.106699}
{'[0, 2, 6, 3, 0, 6, 0, 0, 0, 0, 4, 4, 1, 0, 1, 0, 1, 1]' : 0.106964}
{'[0, 2, 6, 3, 0, 6, 0, 0, 0, 0, 4, 4, 1, 0, 1, 0, 1, 1]' : 0.10661}
{'[0, 2, 6, 3, 0, 6, 0, 0, 0, 0, 4, 4, 1, 0, 1, 0, 1, 1]' : 0.106635}
{'[0, 2, 6, 3, 0, 6, 0, 0, 0, 0, 4, 4, 1, 0, 1, 0, 1, 1]' : 0.106489}
{'[0, 2, 6, 3, 0, 6, 0, 0, 0, 0, 4, 4, 1, 0, 1, 0, 1, 1]' : 0.106714}
{'[0, 2, 6, 3, 0, 6, 0, 0, 0, 0, 4, 4, 1, 0, 1, 0, 1, 1]' : 0.106642}
{'[0, 2, 6, 3, 0, 6, 0, 0, 0, 0, 4, 4, 1, 0, 1, 0, 1, 1]' : 0.106567}
{'[0, 2, 6, 3, 0, 6, 0, 0, 0, 0, 4, 4, 1, 0, 1, 0, 1, 1]' : 0.106487}
{'[0, 2, 6, 3, 0, 6, 0, 0, 0, 0, 4, 4, 1, 0, 1, 0, 1, 1]' : 0.106559}
{'[0, 2, 6, 3, 0, 6, 0, 0, 0, 0, 4, 4, 1, 0, 1, 0, 1, 1]' : 0.106706}
{'[0, 2, 6, 3, 0, 6, 0, 0, 0, 0, 4, 4, 1, 0, 1, 0, 1, 1]' : 0.106858}
{'[0, 2, 6, 3, 0, 6, 0, 0, 0, 0, 4, 4, 1, 0, 1, 0, 1, 1]' : 0.106583}
{'[0, 2, 6, 3, 0, 6, 0, 0, 0, 0, 4, 4, 1, 0, 1, 0, 1, 1]' : 0.106634}
{'[0, 2, 6, 3, 0, 6, 0, 0, 0, 0, 4, 4, 1, 0, 1, 0, 1, 1]' : 0.106958}
{'[0, 2, 6, 3, 0, 6, 0, 0, 0, 0, 4, 4, 1, 0, 1, 0, 1, 1]' : 0.106595}
{'[0, 2, 6, 3, 0, 6, 0, 0, 0, 0, 4, 4, 1, 0, 1, 0, 1, 1]' : 0.106465}
{'[0, 2, 6, 3, 0, 6, 0, 0, 0, 0, 4, 4, 1, 0, 1, 0, 1, 1]' : 0.106627}
{'[0, 2, 6, 3, 0, 6, 0, 0, 0, 0, 4, 4, 1, 0, 1, 0, 1, 1]' : 0.107008}
{'[0, 2, 6, 3, 0, 6, 0, 0, 0, 0, 4, 4, 1, 0, 1, 0, 1, 1]' : 0.106698}

out:
 ["{'[0, 2, 6, 3, 0, 6, 0, 0, 0, 0, 4, 4, 1, 0, 1, 0, 1, 1]' : 0.123707}", "{'[0, 2, 6, 3, 0, 6, 0, 0, 0, 0, 4, 4, 1, 0, 1, 0, 1, 1]' : 0.12365}", "{'[0, 2, 6, 3, 0, 6, 0, 0, 0, 0, 4, 4, 1, 0, 1, 0, 1, 1]' : 0.123436}", "{'[0, 2, 6, 3, 0, 6, 0, 0, 0, 0, 4, 4, 1, 0, 1, 0, 1, 1]' : 0.114263}", "{'[0, 2, 6, 3, 0, 6, 0, 0, 0, 0, 4, 4, 1, 0, 1, 0, 1, 1]' : 0.106591}", "{'[0, 2, 6, 3, 0, 6, 0, 0, 0, 0, 4, 4, 1, 0, 1, 0, 1, 1]' : 0.106681}", "{'[0, 2, 6, 3, 0, 6, 0, 0, 0, 0, 4, 4, 1, 0, 1, 0, 1, 1]' : 0.10646}", "{'[0, 2, 6, 3, 0, 6, 0, 0, 0, 0, 4, 4, 1, 0, 1, 0, 1, 1]' : 0.106531}", "{'[0, 2, 6, 3, 0, 6, 0, 0, 0, 0, 4, 4, 1, 0, 1, 0, 1, 1]' : 0.106754}", "{'[0, 2, 6, 3, 0, 6, 0, 0, 0, 0, 4, 4, 1, 0, 1, 0, 1, 1]' : 0.106866}", "{'[0, 2, 6, 3, 0, 6, 0, 0, 0, 0, 4, 4, 1, 0, 1, 0, 1, 1]' : 0.106699}", "{'[0, 2, 6, 3, 0, 6, 0, 0, 0, 0, 4, 4, 1, 0, 1, 0, 1, 1]' : 0.106964}", "{'[0, 2, 6, 3, 0, 6, 0, 0, 0, 0, 4, 4, 1, 0, 1, 0, 1, 1]' : 0.10661}", "{'[0, 2, 6, 3, 0, 6, 0, 0, 0, 0, 4, 4, 1, 0, 1, 0, 1, 1]' : 0.106635}", "{'[0, 2, 6, 3, 0, 6, 0, 0, 0, 0, 4, 4, 1, 0, 1, 0, 1, 1]' : 0.106489}", "{'[0, 2, 6, 3, 0, 6, 0, 0, 0, 0, 4, 4, 1, 0, 1, 0, 1, 1]' : 0.106714}", "{'[0, 2, 6, 3, 0, 6, 0, 0, 0, 0, 4, 4, 1, 0, 1, 0, 1, 1]' : 0.106642}", "{'[0, 2, 6, 3, 0, 6, 0, 0, 0, 0, 4, 4, 1, 0, 1, 0, 1, 1]' : 0.106567}", "{'[0, 2, 6, 3, 0, 6, 0, 0, 0, 0, 4, 4, 1, 0, 1, 0, 1, 1]' : 0.106487}", "{'[0, 2, 6, 3, 0, 6, 0, 0, 0, 0, 4, 4, 1, 0, 1, 0, 1, 1]' : 0.106559}", "{'[0, 2, 6, 3, 0, 6, 0, 0, 0, 0, 4, 4, 1, 0, 1, 0, 1, 1]' : 0.106706}", "{'[0, 2, 6, 3, 0, 6, 0, 0, 0, 0, 4, 4, 1, 0, 1, 0, 1, 1]' : 0.106858}", "{'[0, 2, 6, 3, 0, 6, 0, 0, 0, 0, 4, 4, 1, 0, 1, 0, 1, 1]' : 0.106583}", "{'[0, 2, 6, 3, 0, 6, 0, 0, 0, 0, 4, 4, 1, 0, 1, 0, 1, 1]' : 0.106634}", "{'[0, 2, 6, 3, 0, 6, 0, 0, 0, 0, 4, 4, 1, 0, 1, 0, 1, 1]' : 0.106958}", "{'[0, 2, 6, 3, 0, 6, 0, 0, 0, 0, 4, 4, 1, 0, 1, 0, 1, 1]' : 0.106595}", "{'[0, 2, 6, 3, 0, 6, 0, 0, 0, 0, 4, 4, 1, 0, 1, 0, 1, 1]' : 0.106465}", "{'[0, 2, 6, 3, 0, 6, 0, 0, 0, 0, 4, 4, 1, 0, 1, 0, 1, 1]' : 0.106627}", "{'[0, 2, 6, 3, 0, 6, 0, 0, 0, 0, 4, 4, 1, 0, 1, 0, 1, 1]' : 0.107008}", "{'[0, 2, 6, 3, 0, 6, 0, 0, 0, 0, 4, 4, 1, 0, 1, 0, 1, 1]' : 0.106698}"]
returning from 'run': {'[0, 2, 6, 3, 0, 6, 0, 0, 0, 0, 4, 4, 1, 0, 1, 0, 1, 1]': ([0.123707, 0.12365, 0.123436, 0.114263, 0.106591, 0.106681, 0.10646, 0.106531, 0.106754, 0.106866, 0.106699, 0.106964, 0.10661, 0.106635, 0.106489, 0.106714, 0.106642, 0.106567, 0.106487, 0.106559, 0.106706, 0.106858, 0.106583, 0.106634, 0.106958, 0.106595, 0.106465, 0.106627, 0.107008, 0.106698], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 6, 3, 0, 6, 0, 0, 0, 0, 4, 4, 1, 0, 1, 0, 1, 1]': ([0.123707, 0.12365, 0.123436, 0.114263, 0.106591, 0.106681, 0.10646, 0.106531, 0.106754, 0.106866, 0.106699, 0.106964, 0.10661, 0.106635, 0.106489, 0.106714, 0.106642, 0.106567, 0.106487, 0.106559, 0.106706, 0.106858, 0.106583, 0.106634, 0.106958, 0.106595, 0.106465, 0.106627, 0.107008, 0.106698], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = kkk
Code stats:
        Number of loops: 	28
        Max loop nest depth: 	4
        Additions: 		1222
        Multiplications: 	360
        Divisions: 		0
        Logical: 		0
        Reads: 			2112
        Writes: 		278
        Comparisons:		28
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest78.exe __orio_perftest78.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest78.exe  
Program Test Output: 
{'[0, 5, 3, 3, 0, 1, 1, 0, 8, 3, 0, 25, 0, 0, 1, 0, 1, 1]' : 0.147449}
{'[0, 5, 3, 3, 0, 1, 1, 0, 8, 3, 0, 25, 0, 0, 1, 0, 1, 1]' : 0.153994}
{'[0, 5, 3, 3, 0, 1, 1, 0, 8, 3, 0, 25, 0, 0, 1, 0, 1, 1]' : 0.14713}
{'[0, 5, 3, 3, 0, 1, 1, 0, 8, 3, 0, 25, 0, 0, 1, 0, 1, 1]' : 0.131984}
{'[0, 5, 3, 3, 0, 1, 1, 0, 8, 3, 0, 25, 0, 0, 1, 0, 1, 1]' : 0.124364}
{'[0, 5, 3, 3, 0, 1, 1, 0, 8, 3, 0, 25, 0, 0, 1, 0, 1, 1]' : 0.125283}
{'[0, 5, 3, 3, 0, 1, 1, 0, 8, 3, 0, 25, 0, 0, 1, 0, 1, 1]' : 0.124138}
{'[0, 5, 3, 3, 0, 1, 1, 0, 8, 3, 0, 25, 0, 0, 1, 0, 1, 1]' : 0.124078}
{'[0, 5, 3, 3, 0, 1, 1, 0, 8, 3, 0, 25, 0, 0, 1, 0, 1, 1]' : 0.124268}
{'[0, 5, 3, 3, 0, 1, 1, 0, 8, 3, 0, 25, 0, 0, 1, 0, 1, 1]' : 0.124437}
{'[0, 5, 3, 3, 0, 1, 1, 0, 8, 3, 0, 25, 0, 0, 1, 0, 1, 1]' : 0.124083}
{'[0, 5, 3, 3, 0, 1, 1, 0, 8, 3, 0, 25, 0, 0, 1, 0, 1, 1]' : 0.125258}
{'[0, 5, 3, 3, 0, 1, 1, 0, 8, 3, 0, 25, 0, 0, 1, 0, 1, 1]' : 0.12464}
{'[0, 5, 3, 3, 0, 1, 1, 0, 8, 3, 0, 25, 0, 0, 1, 0, 1, 1]' : 0.124245}
{'[0, 5, 3, 3, 0, 1, 1, 0, 8, 3, 0, 25, 0, 0, 1, 0, 1, 1]' : 0.12419}
{'[0, 5, 3, 3, 0, 1, 1, 0, 8, 3, 0, 25, 0, 0, 1, 0, 1, 1]' : 0.124326}
{'[0, 5, 3, 3, 0, 1, 1, 0, 8, 3, 0, 25, 0, 0, 1, 0, 1, 1]' : 0.124208}
{'[0, 5, 3, 3, 0, 1, 1, 0, 8, 3, 0, 25, 0, 0, 1, 0, 1, 1]' : 0.124363}
{'[0, 5, 3, 3, 0, 1, 1, 0, 8, 3, 0, 25, 0, 0, 1, 0, 1, 1]' : 0.124418}
{'[0, 5, 3, 3, 0, 1, 1, 0, 8, 3, 0, 25, 0, 0, 1, 0, 1, 1]' : 0.124166}
{'[0, 5, 3, 3, 0, 1, 1, 0, 8, 3, 0, 25, 0, 0, 1, 0, 1, 1]' : 0.124161}
{'[0, 5, 3, 3, 0, 1, 1, 0, 8, 3, 0, 25, 0, 0, 1, 0, 1, 1]' : 0.124289}
{'[0, 5, 3, 3, 0, 1, 1, 0, 8, 3, 0, 25, 0, 0, 1, 0, 1, 1]' : 0.124514}
{'[0, 5, 3, 3, 0, 1, 1, 0, 8, 3, 0, 25, 0, 0, 1, 0, 1, 1]' : 0.124488}
{'[0, 5, 3, 3, 0, 1, 1, 0, 8, 3, 0, 25, 0, 0, 1, 0, 1, 1]' : 0.124468}
{'[0, 5, 3, 3, 0, 1, 1, 0, 8, 3, 0, 25, 0, 0, 1, 0, 1, 1]' : 0.124367}
{'[0, 5, 3, 3, 0, 1, 1, 0, 8, 3, 0, 25, 0, 0, 1, 0, 1, 1]' : 0.124622}
{'[0, 5, 3, 3, 0, 1, 1, 0, 8, 3, 0, 25, 0, 0, 1, 0, 1, 1]' : 0.12474}
{'[0, 5, 3, 3, 0, 1, 1, 0, 8, 3, 0, 25, 0, 0, 1, 0, 1, 1]' : 0.124765}
{'[0, 5, 3, 3, 0, 1, 1, 0, 8, 3, 0, 25, 0, 0, 1, 0, 1, 1]' : 0.12468}

out:
 ["{'[0, 5, 3, 3, 0, 1, 1, 0, 8, 3, 0, 25, 0, 0, 1, 0, 1, 1]' : 0.147449}", "{'[0, 5, 3, 3, 0, 1, 1, 0, 8, 3, 0, 25, 0, 0, 1, 0, 1, 1]' : 0.153994}", "{'[0, 5, 3, 3, 0, 1, 1, 0, 8, 3, 0, 25, 0, 0, 1, 0, 1, 1]' : 0.14713}", "{'[0, 5, 3, 3, 0, 1, 1, 0, 8, 3, 0, 25, 0, 0, 1, 0, 1, 1]' : 0.131984}", "{'[0, 5, 3, 3, 0, 1, 1, 0, 8, 3, 0, 25, 0, 0, 1, 0, 1, 1]' : 0.124364}", "{'[0, 5, 3, 3, 0, 1, 1, 0, 8, 3, 0, 25, 0, 0, 1, 0, 1, 1]' : 0.125283}", "{'[0, 5, 3, 3, 0, 1, 1, 0, 8, 3, 0, 25, 0, 0, 1, 0, 1, 1]' : 0.124138}", "{'[0, 5, 3, 3, 0, 1, 1, 0, 8, 3, 0, 25, 0, 0, 1, 0, 1, 1]' : 0.124078}", "{'[0, 5, 3, 3, 0, 1, 1, 0, 8, 3, 0, 25, 0, 0, 1, 0, 1, 1]' : 0.124268}", "{'[0, 5, 3, 3, 0, 1, 1, 0, 8, 3, 0, 25, 0, 0, 1, 0, 1, 1]' : 0.124437}", "{'[0, 5, 3, 3, 0, 1, 1, 0, 8, 3, 0, 25, 0, 0, 1, 0, 1, 1]' : 0.124083}", "{'[0, 5, 3, 3, 0, 1, 1, 0, 8, 3, 0, 25, 0, 0, 1, 0, 1, 1]' : 0.125258}", "{'[0, 5, 3, 3, 0, 1, 1, 0, 8, 3, 0, 25, 0, 0, 1, 0, 1, 1]' : 0.12464}", "{'[0, 5, 3, 3, 0, 1, 1, 0, 8, 3, 0, 25, 0, 0, 1, 0, 1, 1]' : 0.124245}", "{'[0, 5, 3, 3, 0, 1, 1, 0, 8, 3, 0, 25, 0, 0, 1, 0, 1, 1]' : 0.12419}", "{'[0, 5, 3, 3, 0, 1, 1, 0, 8, 3, 0, 25, 0, 0, 1, 0, 1, 1]' : 0.124326}", "{'[0, 5, 3, 3, 0, 1, 1, 0, 8, 3, 0, 25, 0, 0, 1, 0, 1, 1]' : 0.124208}", "{'[0, 5, 3, 3, 0, 1, 1, 0, 8, 3, 0, 25, 0, 0, 1, 0, 1, 1]' : 0.124363}", "{'[0, 5, 3, 3, 0, 1, 1, 0, 8, 3, 0, 25, 0, 0, 1, 0, 1, 1]' : 0.124418}", "{'[0, 5, 3, 3, 0, 1, 1, 0, 8, 3, 0, 25, 0, 0, 1, 0, 1, 1]' : 0.124166}", "{'[0, 5, 3, 3, 0, 1, 1, 0, 8, 3, 0, 25, 0, 0, 1, 0, 1, 1]' : 0.124161}", "{'[0, 5, 3, 3, 0, 1, 1, 0, 8, 3, 0, 25, 0, 0, 1, 0, 1, 1]' : 0.124289}", "{'[0, 5, 3, 3, 0, 1, 1, 0, 8, 3, 0, 25, 0, 0, 1, 0, 1, 1]' : 0.124514}", "{'[0, 5, 3, 3, 0, 1, 1, 0, 8, 3, 0, 25, 0, 0, 1, 0, 1, 1]' : 0.124488}", "{'[0, 5, 3, 3, 0, 1, 1, 0, 8, 3, 0, 25, 0, 0, 1, 0, 1, 1]' : 0.124468}", "{'[0, 5, 3, 3, 0, 1, 1, 0, 8, 3, 0, 25, 0, 0, 1, 0, 1, 1]' : 0.124367}", "{'[0, 5, 3, 3, 0, 1, 1, 0, 8, 3, 0, 25, 0, 0, 1, 0, 1, 1]' : 0.124622}", "{'[0, 5, 3, 3, 0, 1, 1, 0, 8, 3, 0, 25, 0, 0, 1, 0, 1, 1]' : 0.12474}", "{'[0, 5, 3, 3, 0, 1, 1, 0, 8, 3, 0, 25, 0, 0, 1, 0, 1, 1]' : 0.124765}", "{'[0, 5, 3, 3, 0, 1, 1, 0, 8, 3, 0, 25, 0, 0, 1, 0, 1, 1]' : 0.12468}"]
returning from 'run': {'[0, 5, 3, 3, 0, 1, 1, 0, 8, 3, 0, 25, 0, 0, 1, 0, 1, 1]': ([0.147449, 0.153994, 0.14713, 0.131984, 0.124364, 0.125283, 0.124138, 0.124078, 0.124268, 0.124437, 0.124083, 0.125258, 0.12464, 0.124245, 0.12419, 0.124326, 0.124208, 0.124363, 0.124418, 0.124166, 0.124161, 0.124289, 0.124514, 0.124488, 0.124468, 0.124367, 0.124622, 0.12474, 0.124765, 0.12468], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 5, 3, 3, 0, 1, 1, 0, 8, 3, 0, 25, 0, 0, 1, 0, 1, 1]': ([0.147449, 0.153994, 0.14713, 0.131984, 0.124364, 0.125283, 0.124138, 0.124078, 0.124268, 0.124437, 0.124083, 0.125258, 0.12464, 0.124245, 0.12419, 0.124326, 0.124208, 0.124363, 0.124418, 0.124166, 0.124161, 0.124289, 0.124514, 0.124488, 0.124468, 0.124367, 0.124622, 0.12474, 0.124765, 0.12468], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	5
        Additions: 		2927
        Multiplications: 	900
        Divisions: 		0
        Logical: 		0
        Reads: 			4745
        Writes: 		539
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest79.exe __orio_perftest79.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest79.exe  
Program Test Output: 
{'[0, 2, 6, 3, 5, 0, 0, 0, 29, 0, 13, 25, 1, 1, 0, 0, 0, 1]' : 0.13091}
{'[0, 2, 6, 3, 5, 0, 0, 0, 29, 0, 13, 25, 1, 1, 0, 0, 0, 1]' : 0.130344}
{'[0, 2, 6, 3, 5, 0, 0, 0, 29, 0, 13, 25, 1, 1, 0, 0, 0, 1]' : 0.130228}
{'[0, 2, 6, 3, 5, 0, 0, 0, 29, 0, 13, 25, 1, 1, 0, 0, 0, 1]' : 0.130353}
{'[0, 2, 6, 3, 5, 0, 0, 0, 29, 0, 13, 25, 1, 1, 0, 0, 0, 1]' : 0.114348}
{'[0, 2, 6, 3, 5, 0, 0, 0, 29, 0, 13, 25, 1, 1, 0, 0, 0, 1]' : 0.11042}
{'[0, 2, 6, 3, 5, 0, 0, 0, 29, 0, 13, 25, 1, 1, 0, 0, 0, 1]' : 0.110368}
{'[0, 2, 6, 3, 5, 0, 0, 0, 29, 0, 13, 25, 1, 1, 0, 0, 0, 1]' : 0.110384}
{'[0, 2, 6, 3, 5, 0, 0, 0, 29, 0, 13, 25, 1, 1, 0, 0, 0, 1]' : 0.110162}
{'[0, 2, 6, 3, 5, 0, 0, 0, 29, 0, 13, 25, 1, 1, 0, 0, 0, 1]' : 0.110247}
{'[0, 2, 6, 3, 5, 0, 0, 0, 29, 0, 13, 25, 1, 1, 0, 0, 0, 1]' : 0.110039}
{'[0, 2, 6, 3, 5, 0, 0, 0, 29, 0, 13, 25, 1, 1, 0, 0, 0, 1]' : 0.110242}
{'[0, 2, 6, 3, 5, 0, 0, 0, 29, 0, 13, 25, 1, 1, 0, 0, 0, 1]' : 0.110555}
{'[0, 2, 6, 3, 5, 0, 0, 0, 29, 0, 13, 25, 1, 1, 0, 0, 0, 1]' : 0.110185}
{'[0, 2, 6, 3, 5, 0, 0, 0, 29, 0, 13, 25, 1, 1, 0, 0, 0, 1]' : 0.110194}
{'[0, 2, 6, 3, 5, 0, 0, 0, 29, 0, 13, 25, 1, 1, 0, 0, 0, 1]' : 0.110588}
{'[0, 2, 6, 3, 5, 0, 0, 0, 29, 0, 13, 25, 1, 1, 0, 0, 0, 1]' : 0.11053}
{'[0, 2, 6, 3, 5, 0, 0, 0, 29, 0, 13, 25, 1, 1, 0, 0, 0, 1]' : 0.110544}
{'[0, 2, 6, 3, 5, 0, 0, 0, 29, 0, 13, 25, 1, 1, 0, 0, 0, 1]' : 0.110168}
{'[0, 2, 6, 3, 5, 0, 0, 0, 29, 0, 13, 25, 1, 1, 0, 0, 0, 1]' : 0.110255}
{'[0, 2, 6, 3, 5, 0, 0, 0, 29, 0, 13, 25, 1, 1, 0, 0, 0, 1]' : 0.110242}
{'[0, 2, 6, 3, 5, 0, 0, 0, 29, 0, 13, 25, 1, 1, 0, 0, 0, 1]' : 0.11027}
{'[0, 2, 6, 3, 5, 0, 0, 0, 29, 0, 13, 25, 1, 1, 0, 0, 0, 1]' : 0.110142}
{'[0, 2, 6, 3, 5, 0, 0, 0, 29, 0, 13, 25, 1, 1, 0, 0, 0, 1]' : 0.11026}
{'[0, 2, 6, 3, 5, 0, 0, 0, 29, 0, 13, 25, 1, 1, 0, 0, 0, 1]' : 0.110362}
{'[0, 2, 6, 3, 5, 0, 0, 0, 29, 0, 13, 25, 1, 1, 0, 0, 0, 1]' : 0.110185}
{'[0, 2, 6, 3, 5, 0, 0, 0, 29, 0, 13, 25, 1, 1, 0, 0, 0, 1]' : 0.11038}
{'[0, 2, 6, 3, 5, 0, 0, 0, 29, 0, 13, 25, 1, 1, 0, 0, 0, 1]' : 0.110462}
{'[0, 2, 6, 3, 5, 0, 0, 0, 29, 0, 13, 25, 1, 1, 0, 0, 0, 1]' : 0.110281}
{'[0, 2, 6, 3, 5, 0, 0, 0, 29, 0, 13, 25, 1, 1, 0, 0, 0, 1]' : 0.110279}

out:
 ["{'[0, 2, 6, 3, 5, 0, 0, 0, 29, 0, 13, 25, 1, 1, 0, 0, 0, 1]' : 0.13091}", "{'[0, 2, 6, 3, 5, 0, 0, 0, 29, 0, 13, 25, 1, 1, 0, 0, 0, 1]' : 0.130344}", "{'[0, 2, 6, 3, 5, 0, 0, 0, 29, 0, 13, 25, 1, 1, 0, 0, 0, 1]' : 0.130228}", "{'[0, 2, 6, 3, 5, 0, 0, 0, 29, 0, 13, 25, 1, 1, 0, 0, 0, 1]' : 0.130353}", "{'[0, 2, 6, 3, 5, 0, 0, 0, 29, 0, 13, 25, 1, 1, 0, 0, 0, 1]' : 0.114348}", "{'[0, 2, 6, 3, 5, 0, 0, 0, 29, 0, 13, 25, 1, 1, 0, 0, 0, 1]' : 0.11042}", "{'[0, 2, 6, 3, 5, 0, 0, 0, 29, 0, 13, 25, 1, 1, 0, 0, 0, 1]' : 0.110368}", "{'[0, 2, 6, 3, 5, 0, 0, 0, 29, 0, 13, 25, 1, 1, 0, 0, 0, 1]' : 0.110384}", "{'[0, 2, 6, 3, 5, 0, 0, 0, 29, 0, 13, 25, 1, 1, 0, 0, 0, 1]' : 0.110162}", "{'[0, 2, 6, 3, 5, 0, 0, 0, 29, 0, 13, 25, 1, 1, 0, 0, 0, 1]' : 0.110247}", "{'[0, 2, 6, 3, 5, 0, 0, 0, 29, 0, 13, 25, 1, 1, 0, 0, 0, 1]' : 0.110039}", "{'[0, 2, 6, 3, 5, 0, 0, 0, 29, 0, 13, 25, 1, 1, 0, 0, 0, 1]' : 0.110242}", "{'[0, 2, 6, 3, 5, 0, 0, 0, 29, 0, 13, 25, 1, 1, 0, 0, 0, 1]' : 0.110555}", "{'[0, 2, 6, 3, 5, 0, 0, 0, 29, 0, 13, 25, 1, 1, 0, 0, 0, 1]' : 0.110185}", "{'[0, 2, 6, 3, 5, 0, 0, 0, 29, 0, 13, 25, 1, 1, 0, 0, 0, 1]' : 0.110194}", "{'[0, 2, 6, 3, 5, 0, 0, 0, 29, 0, 13, 25, 1, 1, 0, 0, 0, 1]' : 0.110588}", "{'[0, 2, 6, 3, 5, 0, 0, 0, 29, 0, 13, 25, 1, 1, 0, 0, 0, 1]' : 0.11053}", "{'[0, 2, 6, 3, 5, 0, 0, 0, 29, 0, 13, 25, 1, 1, 0, 0, 0, 1]' : 0.110544}", "{'[0, 2, 6, 3, 5, 0, 0, 0, 29, 0, 13, 25, 1, 1, 0, 0, 0, 1]' : 0.110168}", "{'[0, 2, 6, 3, 5, 0, 0, 0, 29, 0, 13, 25, 1, 1, 0, 0, 0, 1]' : 0.110255}", "{'[0, 2, 6, 3, 5, 0, 0, 0, 29, 0, 13, 25, 1, 1, 0, 0, 0, 1]' : 0.110242}", "{'[0, 2, 6, 3, 5, 0, 0, 0, 29, 0, 13, 25, 1, 1, 0, 0, 0, 1]' : 0.11027}", "{'[0, 2, 6, 3, 5, 0, 0, 0, 29, 0, 13, 25, 1, 1, 0, 0, 0, 1]' : 0.110142}", "{'[0, 2, 6, 3, 5, 0, 0, 0, 29, 0, 13, 25, 1, 1, 0, 0, 0, 1]' : 0.11026}", "{'[0, 2, 6, 3, 5, 0, 0, 0, 29, 0, 13, 25, 1, 1, 0, 0, 0, 1]' : 0.110362}", "{'[0, 2, 6, 3, 5, 0, 0, 0, 29, 0, 13, 25, 1, 1, 0, 0, 0, 1]' : 0.110185}", "{'[0, 2, 6, 3, 5, 0, 0, 0, 29, 0, 13, 25, 1, 1, 0, 0, 0, 1]' : 0.11038}", "{'[0, 2, 6, 3, 5, 0, 0, 0, 29, 0, 13, 25, 1, 1, 0, 0, 0, 1]' : 0.110462}", "{'[0, 2, 6, 3, 5, 0, 0, 0, 29, 0, 13, 25, 1, 1, 0, 0, 0, 1]' : 0.110281}", "{'[0, 2, 6, 3, 5, 0, 0, 0, 29, 0, 13, 25, 1, 1, 0, 0, 0, 1]' : 0.110279}"]
returning from 'run': {'[0, 2, 6, 3, 5, 0, 0, 0, 29, 0, 13, 25, 1, 1, 0, 0, 0, 1]': ([0.13091, 0.130344, 0.130228, 0.130353, 0.114348, 0.11042, 0.110368, 0.110384, 0.110162, 0.110247, 0.110039, 0.110242, 0.110555, 0.110185, 0.110194, 0.110588, 0.11053, 0.110544, 0.110168, 0.110255, 0.110242, 0.11027, 0.110142, 0.11026, 0.110362, 0.110185, 0.11038, 0.110462, 0.110281, 0.110279], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 6, 3, 5, 0, 0, 0, 29, 0, 13, 25, 1, 1, 0, 0, 0, 1]': ([0.13091, 0.130344, 0.130228, 0.130353, 0.114348, 0.11042, 0.110368, 0.110384, 0.110162, 0.110247, 0.110039, 0.110242, 0.110555, 0.110185, 0.110194, 0.110588, 0.11053, 0.110544, 0.110168, 0.110255, 0.110242, 0.11027, 0.110142, 0.11026, 0.110362, 0.110185, 0.11038, 0.110462, 0.110281, 0.110279], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	43
        Max loop nest depth: 	5
        Additions: 		2030
        Multiplications: 	504
        Divisions: 		0
        Logical: 		0
        Reads: 			3269
        Writes: 		393
        Comparisons:		43
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest80.exe __orio_perftest80.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest80.exe  
Program Test Output: 
{'[0, 0, 1, 3, 0, 1, 0, 1, 8, 4, 0, 8, 1, 1, 0, 0, 0, 1]' : 0.118021}
{'[0, 0, 1, 3, 0, 1, 0, 1, 8, 4, 0, 8, 1, 1, 0, 0, 0, 1]' : 0.116869}
{'[0, 0, 1, 3, 0, 1, 0, 1, 8, 4, 0, 8, 1, 1, 0, 0, 0, 1]' : 0.116641}
{'[0, 0, 1, 3, 0, 1, 0, 1, 8, 4, 0, 8, 1, 1, 0, 0, 0, 1]' : 0.116807}
{'[0, 0, 1, 3, 0, 1, 0, 1, 8, 4, 0, 8, 1, 1, 0, 0, 0, 1]' : 0.116713}
{'[0, 0, 1, 3, 0, 1, 0, 1, 8, 4, 0, 8, 1, 1, 0, 0, 0, 1]' : 0.116698}
{'[0, 0, 1, 3, 0, 1, 0, 1, 8, 4, 0, 8, 1, 1, 0, 0, 0, 1]' : 0.116643}
{'[0, 0, 1, 3, 0, 1, 0, 1, 8, 4, 0, 8, 1, 1, 0, 0, 0, 1]' : 0.117842}
{'[0, 0, 1, 3, 0, 1, 0, 1, 8, 4, 0, 8, 1, 1, 0, 0, 0, 1]' : 0.118504}
{'[0, 0, 1, 3, 0, 1, 0, 1, 8, 4, 0, 8, 1, 1, 0, 0, 0, 1]' : 0.116694}
{'[0, 0, 1, 3, 0, 1, 0, 1, 8, 4, 0, 8, 1, 1, 0, 0, 0, 1]' : 0.116954}
{'[0, 0, 1, 3, 0, 1, 0, 1, 8, 4, 0, 8, 1, 1, 0, 0, 0, 1]' : 0.116858}
{'[0, 0, 1, 3, 0, 1, 0, 1, 8, 4, 0, 8, 1, 1, 0, 0, 0, 1]' : 0.116713}
{'[0, 0, 1, 3, 0, 1, 0, 1, 8, 4, 0, 8, 1, 1, 0, 0, 0, 1]' : 0.11662}
{'[0, 0, 1, 3, 0, 1, 0, 1, 8, 4, 0, 8, 1, 1, 0, 0, 0, 1]' : 0.117135}
{'[0, 0, 1, 3, 0, 1, 0, 1, 8, 4, 0, 8, 1, 1, 0, 0, 0, 1]' : 0.118755}
{'[0, 0, 1, 3, 0, 1, 0, 1, 8, 4, 0, 8, 1, 1, 0, 0, 0, 1]' : 0.118596}
{'[0, 0, 1, 3, 0, 1, 0, 1, 8, 4, 0, 8, 1, 1, 0, 0, 0, 1]' : 0.118201}
{'[0, 0, 1, 3, 0, 1, 0, 1, 8, 4, 0, 8, 1, 1, 0, 0, 0, 1]' : 0.11662}
{'[0, 0, 1, 3, 0, 1, 0, 1, 8, 4, 0, 8, 1, 1, 0, 0, 0, 1]' : 0.116966}
{'[0, 0, 1, 3, 0, 1, 0, 1, 8, 4, 0, 8, 1, 1, 0, 0, 0, 1]' : 0.116682}
{'[0, 0, 1, 3, 0, 1, 0, 1, 8, 4, 0, 8, 1, 1, 0, 0, 0, 1]' : 0.116869}
{'[0, 0, 1, 3, 0, 1, 0, 1, 8, 4, 0, 8, 1, 1, 0, 0, 0, 1]' : 0.116694}
{'[0, 0, 1, 3, 0, 1, 0, 1, 8, 4, 0, 8, 1, 1, 0, 0, 0, 1]' : 0.116817}
{'[0, 0, 1, 3, 0, 1, 0, 1, 8, 4, 0, 8, 1, 1, 0, 0, 0, 1]' : 0.116841}
{'[0, 0, 1, 3, 0, 1, 0, 1, 8, 4, 0, 8, 1, 1, 0, 0, 0, 1]' : 0.116661}
{'[0, 0, 1, 3, 0, 1, 0, 1, 8, 4, 0, 8, 1, 1, 0, 0, 0, 1]' : 0.117128}
{'[0, 0, 1, 3, 0, 1, 0, 1, 8, 4, 0, 8, 1, 1, 0, 0, 0, 1]' : 0.116844}
{'[0, 0, 1, 3, 0, 1, 0, 1, 8, 4, 0, 8, 1, 1, 0, 0, 0, 1]' : 0.116886}
{'[0, 0, 1, 3, 0, 1, 0, 1, 8, 4, 0, 8, 1, 1, 0, 0, 0, 1]' : 0.116858}

out:
 ["{'[0, 0, 1, 3, 0, 1, 0, 1, 8, 4, 0, 8, 1, 1, 0, 0, 0, 1]' : 0.118021}", "{'[0, 0, 1, 3, 0, 1, 0, 1, 8, 4, 0, 8, 1, 1, 0, 0, 0, 1]' : 0.116869}", "{'[0, 0, 1, 3, 0, 1, 0, 1, 8, 4, 0, 8, 1, 1, 0, 0, 0, 1]' : 0.116641}", "{'[0, 0, 1, 3, 0, 1, 0, 1, 8, 4, 0, 8, 1, 1, 0, 0, 0, 1]' : 0.116807}", "{'[0, 0, 1, 3, 0, 1, 0, 1, 8, 4, 0, 8, 1, 1, 0, 0, 0, 1]' : 0.116713}", "{'[0, 0, 1, 3, 0, 1, 0, 1, 8, 4, 0, 8, 1, 1, 0, 0, 0, 1]' : 0.116698}", "{'[0, 0, 1, 3, 0, 1, 0, 1, 8, 4, 0, 8, 1, 1, 0, 0, 0, 1]' : 0.116643}", "{'[0, 0, 1, 3, 0, 1, 0, 1, 8, 4, 0, 8, 1, 1, 0, 0, 0, 1]' : 0.117842}", "{'[0, 0, 1, 3, 0, 1, 0, 1, 8, 4, 0, 8, 1, 1, 0, 0, 0, 1]' : 0.118504}", "{'[0, 0, 1, 3, 0, 1, 0, 1, 8, 4, 0, 8, 1, 1, 0, 0, 0, 1]' : 0.116694}", "{'[0, 0, 1, 3, 0, 1, 0, 1, 8, 4, 0, 8, 1, 1, 0, 0, 0, 1]' : 0.116954}", "{'[0, 0, 1, 3, 0, 1, 0, 1, 8, 4, 0, 8, 1, 1, 0, 0, 0, 1]' : 0.116858}", "{'[0, 0, 1, 3, 0, 1, 0, 1, 8, 4, 0, 8, 1, 1, 0, 0, 0, 1]' : 0.116713}", "{'[0, 0, 1, 3, 0, 1, 0, 1, 8, 4, 0, 8, 1, 1, 0, 0, 0, 1]' : 0.11662}", "{'[0, 0, 1, 3, 0, 1, 0, 1, 8, 4, 0, 8, 1, 1, 0, 0, 0, 1]' : 0.117135}", "{'[0, 0, 1, 3, 0, 1, 0, 1, 8, 4, 0, 8, 1, 1, 0, 0, 0, 1]' : 0.118755}", "{'[0, 0, 1, 3, 0, 1, 0, 1, 8, 4, 0, 8, 1, 1, 0, 0, 0, 1]' : 0.118596}", "{'[0, 0, 1, 3, 0, 1, 0, 1, 8, 4, 0, 8, 1, 1, 0, 0, 0, 1]' : 0.118201}", "{'[0, 0, 1, 3, 0, 1, 0, 1, 8, 4, 0, 8, 1, 1, 0, 0, 0, 1]' : 0.11662}", "{'[0, 0, 1, 3, 0, 1, 0, 1, 8, 4, 0, 8, 1, 1, 0, 0, 0, 1]' : 0.116966}", "{'[0, 0, 1, 3, 0, 1, 0, 1, 8, 4, 0, 8, 1, 1, 0, 0, 0, 1]' : 0.116682}", "{'[0, 0, 1, 3, 0, 1, 0, 1, 8, 4, 0, 8, 1, 1, 0, 0, 0, 1]' : 0.116869}", "{'[0, 0, 1, 3, 0, 1, 0, 1, 8, 4, 0, 8, 1, 1, 0, 0, 0, 1]' : 0.116694}", "{'[0, 0, 1, 3, 0, 1, 0, 1, 8, 4, 0, 8, 1, 1, 0, 0, 0, 1]' : 0.116817}", "{'[0, 0, 1, 3, 0, 1, 0, 1, 8, 4, 0, 8, 1, 1, 0, 0, 0, 1]' : 0.116841}", "{'[0, 0, 1, 3, 0, 1, 0, 1, 8, 4, 0, 8, 1, 1, 0, 0, 0, 1]' : 0.116661}", "{'[0, 0, 1, 3, 0, 1, 0, 1, 8, 4, 0, 8, 1, 1, 0, 0, 0, 1]' : 0.117128}", "{'[0, 0, 1, 3, 0, 1, 0, 1, 8, 4, 0, 8, 1, 1, 0, 0, 0, 1]' : 0.116844}", "{'[0, 0, 1, 3, 0, 1, 0, 1, 8, 4, 0, 8, 1, 1, 0, 0, 0, 1]' : 0.116886}", "{'[0, 0, 1, 3, 0, 1, 0, 1, 8, 4, 0, 8, 1, 1, 0, 0, 0, 1]' : 0.116858}"]
returning from 'run': {'[0, 0, 1, 3, 0, 1, 0, 1, 8, 4, 0, 8, 1, 1, 0, 0, 0, 1]': ([0.118021, 0.116869, 0.116641, 0.116807, 0.116713, 0.116698, 0.116643, 0.117842, 0.118504, 0.116694, 0.116954, 0.116858, 0.116713, 0.11662, 0.117135, 0.118755, 0.118596, 0.118201, 0.11662, 0.116966, 0.116682, 0.116869, 0.116694, 0.116817, 0.116841, 0.116661, 0.117128, 0.116844, 0.116886, 0.116858], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 1, 3, 0, 1, 0, 1, 8, 4, 0, 8, 1, 1, 0, 0, 0, 1]': ([0.118021, 0.116869, 0.116641, 0.116807, 0.116713, 0.116698, 0.116643, 0.117842, 0.118504, 0.116694, 0.116954, 0.116858, 0.116713, 0.11662, 0.117135, 0.118755, 0.118596, 0.118201, 0.11662, 0.116966, 0.116682, 0.116869, 0.116694, 0.116817, 0.116841, 0.116661, 0.117128, 0.116844, 0.116886, 0.116858], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	88
        Max loop nest depth: 	5
        Additions: 		6396
        Multiplications: 	1554
        Divisions: 		0
        Logical: 		0
        Reads: 			9713
        Writes: 		1059
        Comparisons:		88
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest81.exe __orio_perftest81.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest81.exe  
Program Test Output: 
{'[0, 0, 1, 3, 2, 6, 1, 1, 3, 11, 27, 0, 1, 0, 1, 0, 0, 1]' : 0.156413}
{'[0, 0, 1, 3, 2, 6, 1, 1, 3, 11, 27, 0, 1, 0, 1, 0, 0, 1]' : 0.156444}
{'[0, 0, 1, 3, 2, 6, 1, 1, 3, 11, 27, 0, 1, 0, 1, 0, 0, 1]' : 0.156352}
{'[0, 0, 1, 3, 2, 6, 1, 1, 3, 11, 27, 0, 1, 0, 1, 0, 0, 1]' : 0.141977}
{'[0, 0, 1, 3, 2, 6, 1, 1, 3, 11, 27, 0, 1, 0, 1, 0, 0, 1]' : 0.132105}
{'[0, 0, 1, 3, 2, 6, 1, 1, 3, 11, 27, 0, 1, 0, 1, 0, 0, 1]' : 0.132503}
{'[0, 0, 1, 3, 2, 6, 1, 1, 3, 11, 27, 0, 1, 0, 1, 0, 0, 1]' : 0.13225}
{'[0, 0, 1, 3, 2, 6, 1, 1, 3, 11, 27, 0, 1, 0, 1, 0, 0, 1]' : 0.13216}
{'[0, 0, 1, 3, 2, 6, 1, 1, 3, 11, 27, 0, 1, 0, 1, 0, 0, 1]' : 0.132177}
{'[0, 0, 1, 3, 2, 6, 1, 1, 3, 11, 27, 0, 1, 0, 1, 0, 0, 1]' : 0.132243}
{'[0, 0, 1, 3, 2, 6, 1, 1, 3, 11, 27, 0, 1, 0, 1, 0, 0, 1]' : 0.132096}
{'[0, 0, 1, 3, 2, 6, 1, 1, 3, 11, 27, 0, 1, 0, 1, 0, 0, 1]' : 0.132169}
{'[0, 0, 1, 3, 2, 6, 1, 1, 3, 11, 27, 0, 1, 0, 1, 0, 0, 1]' : 0.132178}
{'[0, 0, 1, 3, 2, 6, 1, 1, 3, 11, 27, 0, 1, 0, 1, 0, 0, 1]' : 0.132259}
{'[0, 0, 1, 3, 2, 6, 1, 1, 3, 11, 27, 0, 1, 0, 1, 0, 0, 1]' : 0.132739}
{'[0, 0, 1, 3, 2, 6, 1, 1, 3, 11, 27, 0, 1, 0, 1, 0, 0, 1]' : 0.132144}
{'[0, 0, 1, 3, 2, 6, 1, 1, 3, 11, 27, 0, 1, 0, 1, 0, 0, 1]' : 0.132158}
{'[0, 0, 1, 3, 2, 6, 1, 1, 3, 11, 27, 0, 1, 0, 1, 0, 0, 1]' : 0.132146}
{'[0, 0, 1, 3, 2, 6, 1, 1, 3, 11, 27, 0, 1, 0, 1, 0, 0, 1]' : 0.132139}
{'[0, 0, 1, 3, 2, 6, 1, 1, 3, 11, 27, 0, 1, 0, 1, 0, 0, 1]' : 0.132159}
{'[0, 0, 1, 3, 2, 6, 1, 1, 3, 11, 27, 0, 1, 0, 1, 0, 0, 1]' : 0.132171}
{'[0, 0, 1, 3, 2, 6, 1, 1, 3, 11, 27, 0, 1, 0, 1, 0, 0, 1]' : 0.132269}
{'[0, 0, 1, 3, 2, 6, 1, 1, 3, 11, 27, 0, 1, 0, 1, 0, 0, 1]' : 0.132343}
{'[0, 0, 1, 3, 2, 6, 1, 1, 3, 11, 27, 0, 1, 0, 1, 0, 0, 1]' : 0.132284}
{'[0, 0, 1, 3, 2, 6, 1, 1, 3, 11, 27, 0, 1, 0, 1, 0, 0, 1]' : 0.132457}
{'[0, 0, 1, 3, 2, 6, 1, 1, 3, 11, 27, 0, 1, 0, 1, 0, 0, 1]' : 0.132197}
{'[0, 0, 1, 3, 2, 6, 1, 1, 3, 11, 27, 0, 1, 0, 1, 0, 0, 1]' : 0.132048}
{'[0, 0, 1, 3, 2, 6, 1, 1, 3, 11, 27, 0, 1, 0, 1, 0, 0, 1]' : 0.132268}
{'[0, 0, 1, 3, 2, 6, 1, 1, 3, 11, 27, 0, 1, 0, 1, 0, 0, 1]' : 0.132332}
{'[0, 0, 1, 3, 2, 6, 1, 1, 3, 11, 27, 0, 1, 0, 1, 0, 0, 1]' : 0.132314}

out:
 ["{'[0, 0, 1, 3, 2, 6, 1, 1, 3, 11, 27, 0, 1, 0, 1, 0, 0, 1]' : 0.156413}", "{'[0, 0, 1, 3, 2, 6, 1, 1, 3, 11, 27, 0, 1, 0, 1, 0, 0, 1]' : 0.156444}", "{'[0, 0, 1, 3, 2, 6, 1, 1, 3, 11, 27, 0, 1, 0, 1, 0, 0, 1]' : 0.156352}", "{'[0, 0, 1, 3, 2, 6, 1, 1, 3, 11, 27, 0, 1, 0, 1, 0, 0, 1]' : 0.141977}", "{'[0, 0, 1, 3, 2, 6, 1, 1, 3, 11, 27, 0, 1, 0, 1, 0, 0, 1]' : 0.132105}", "{'[0, 0, 1, 3, 2, 6, 1, 1, 3, 11, 27, 0, 1, 0, 1, 0, 0, 1]' : 0.132503}", "{'[0, 0, 1, 3, 2, 6, 1, 1, 3, 11, 27, 0, 1, 0, 1, 0, 0, 1]' : 0.13225}", "{'[0, 0, 1, 3, 2, 6, 1, 1, 3, 11, 27, 0, 1, 0, 1, 0, 0, 1]' : 0.13216}", "{'[0, 0, 1, 3, 2, 6, 1, 1, 3, 11, 27, 0, 1, 0, 1, 0, 0, 1]' : 0.132177}", "{'[0, 0, 1, 3, 2, 6, 1, 1, 3, 11, 27, 0, 1, 0, 1, 0, 0, 1]' : 0.132243}", "{'[0, 0, 1, 3, 2, 6, 1, 1, 3, 11, 27, 0, 1, 0, 1, 0, 0, 1]' : 0.132096}", "{'[0, 0, 1, 3, 2, 6, 1, 1, 3, 11, 27, 0, 1, 0, 1, 0, 0, 1]' : 0.132169}", "{'[0, 0, 1, 3, 2, 6, 1, 1, 3, 11, 27, 0, 1, 0, 1, 0, 0, 1]' : 0.132178}", "{'[0, 0, 1, 3, 2, 6, 1, 1, 3, 11, 27, 0, 1, 0, 1, 0, 0, 1]' : 0.132259}", "{'[0, 0, 1, 3, 2, 6, 1, 1, 3, 11, 27, 0, 1, 0, 1, 0, 0, 1]' : 0.132739}", "{'[0, 0, 1, 3, 2, 6, 1, 1, 3, 11, 27, 0, 1, 0, 1, 0, 0, 1]' : 0.132144}", "{'[0, 0, 1, 3, 2, 6, 1, 1, 3, 11, 27, 0, 1, 0, 1, 0, 0, 1]' : 0.132158}", "{'[0, 0, 1, 3, 2, 6, 1, 1, 3, 11, 27, 0, 1, 0, 1, 0, 0, 1]' : 0.132146}", "{'[0, 0, 1, 3, 2, 6, 1, 1, 3, 11, 27, 0, 1, 0, 1, 0, 0, 1]' : 0.132139}", "{'[0, 0, 1, 3, 2, 6, 1, 1, 3, 11, 27, 0, 1, 0, 1, 0, 0, 1]' : 0.132159}", "{'[0, 0, 1, 3, 2, 6, 1, 1, 3, 11, 27, 0, 1, 0, 1, 0, 0, 1]' : 0.132171}", "{'[0, 0, 1, 3, 2, 6, 1, 1, 3, 11, 27, 0, 1, 0, 1, 0, 0, 1]' : 0.132269}", "{'[0, 0, 1, 3, 2, 6, 1, 1, 3, 11, 27, 0, 1, 0, 1, 0, 0, 1]' : 0.132343}", "{'[0, 0, 1, 3, 2, 6, 1, 1, 3, 11, 27, 0, 1, 0, 1, 0, 0, 1]' : 0.132284}", "{'[0, 0, 1, 3, 2, 6, 1, 1, 3, 11, 27, 0, 1, 0, 1, 0, 0, 1]' : 0.132457}", "{'[0, 0, 1, 3, 2, 6, 1, 1, 3, 11, 27, 0, 1, 0, 1, 0, 0, 1]' : 0.132197}", "{'[0, 0, 1, 3, 2, 6, 1, 1, 3, 11, 27, 0, 1, 0, 1, 0, 0, 1]' : 0.132048}", "{'[0, 0, 1, 3, 2, 6, 1, 1, 3, 11, 27, 0, 1, 0, 1, 0, 0, 1]' : 0.132268}", "{'[0, 0, 1, 3, 2, 6, 1, 1, 3, 11, 27, 0, 1, 0, 1, 0, 0, 1]' : 0.132332}", "{'[0, 0, 1, 3, 2, 6, 1, 1, 3, 11, 27, 0, 1, 0, 1, 0, 0, 1]' : 0.132314}"]
returning from 'run': {'[0, 0, 1, 3, 2, 6, 1, 1, 3, 11, 27, 0, 1, 0, 1, 0, 0, 1]': ([0.156413, 0.156444, 0.156352, 0.141977, 0.132105, 0.132503, 0.13225, 0.13216, 0.132177, 0.132243, 0.132096, 0.132169, 0.132178, 0.132259, 0.132739, 0.132144, 0.132158, 0.132146, 0.132139, 0.132159, 0.132171, 0.132269, 0.132343, 0.132284, 0.132457, 0.132197, 0.132048, 0.132268, 0.132332, 0.132314], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 1, 3, 2, 6, 1, 1, 3, 11, 27, 0, 1, 0, 1, 0, 0, 1]': ([0.156413, 0.156444, 0.156352, 0.141977, 0.132105, 0.132503, 0.13225, 0.13216, 0.132177, 0.132243, 0.132096, 0.132169, 0.132178, 0.132259, 0.132739, 0.132144, 0.132158, 0.132146, 0.132139, 0.132159, 0.132171, 0.132269, 0.132343, 0.132284, 0.132457, 0.132197, 0.132048, 0.132268, 0.132332, 0.132314], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	5
        Additions: 		3861
        Multiplications: 	1220
        Divisions: 		0
        Logical: 		0
        Reads: 			6372
        Writes: 		710
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest82.exe __orio_perftest82.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest82.exe  
Program Test Output: 
{'[0, 6, 2, 3, 5, 0, 0, 0, 8, 27, 0, 7, 2, 0, 0, 0, 0, 1]' : 0.181198}
{'[0, 6, 2, 3, 5, 0, 0, 0, 8, 27, 0, 7, 2, 0, 0, 0, 0, 1]' : 0.181629}
{'[0, 6, 2, 3, 5, 0, 0, 0, 8, 27, 0, 7, 2, 0, 0, 0, 0, 1]' : 0.180942}
{'[0, 6, 2, 3, 5, 0, 0, 0, 8, 27, 0, 7, 2, 0, 0, 0, 0, 1]' : 0.18216}
{'[0, 6, 2, 3, 5, 0, 0, 0, 8, 27, 0, 7, 2, 0, 0, 0, 0, 1]' : 0.1821}
{'[0, 6, 2, 3, 5, 0, 0, 0, 8, 27, 0, 7, 2, 0, 0, 0, 0, 1]' : 0.181756}
{'[0, 6, 2, 3, 5, 0, 0, 0, 8, 27, 0, 7, 2, 0, 0, 0, 0, 1]' : 0.18148}
{'[0, 6, 2, 3, 5, 0, 0, 0, 8, 27, 0, 7, 2, 0, 0, 0, 0, 1]' : 0.181819}
{'[0, 6, 2, 3, 5, 0, 0, 0, 8, 27, 0, 7, 2, 0, 0, 0, 0, 1]' : 0.181676}
{'[0, 6, 2, 3, 5, 0, 0, 0, 8, 27, 0, 7, 2, 0, 0, 0, 0, 1]' : 0.182202}
{'[0, 6, 2, 3, 5, 0, 0, 0, 8, 27, 0, 7, 2, 0, 0, 0, 0, 1]' : 0.181777}
{'[0, 6, 2, 3, 5, 0, 0, 0, 8, 27, 0, 7, 2, 0, 0, 0, 0, 1]' : 0.181843}
{'[0, 6, 2, 3, 5, 0, 0, 0, 8, 27, 0, 7, 2, 0, 0, 0, 0, 1]' : 0.181654}
{'[0, 6, 2, 3, 5, 0, 0, 0, 8, 27, 0, 7, 2, 0, 0, 0, 0, 1]' : 0.181369}
{'[0, 6, 2, 3, 5, 0, 0, 0, 8, 27, 0, 7, 2, 0, 0, 0, 0, 1]' : 0.181783}
{'[0, 6, 2, 3, 5, 0, 0, 0, 8, 27, 0, 7, 2, 0, 0, 0, 0, 1]' : 0.182571}
{'[0, 6, 2, 3, 5, 0, 0, 0, 8, 27, 0, 7, 2, 0, 0, 0, 0, 1]' : 0.181516}
{'[0, 6, 2, 3, 5, 0, 0, 0, 8, 27, 0, 7, 2, 0, 0, 0, 0, 1]' : 0.181035}
{'[0, 6, 2, 3, 5, 0, 0, 0, 8, 27, 0, 7, 2, 0, 0, 0, 0, 1]' : 0.181627}
{'[0, 6, 2, 3, 5, 0, 0, 0, 8, 27, 0, 7, 2, 0, 0, 0, 0, 1]' : 0.181575}
{'[0, 6, 2, 3, 5, 0, 0, 0, 8, 27, 0, 7, 2, 0, 0, 0, 0, 1]' : 0.182382}
{'[0, 6, 2, 3, 5, 0, 0, 0, 8, 27, 0, 7, 2, 0, 0, 0, 0, 1]' : 0.181556}
{'[0, 6, 2, 3, 5, 0, 0, 0, 8, 27, 0, 7, 2, 0, 0, 0, 0, 1]' : 0.181805}
{'[0, 6, 2, 3, 5, 0, 0, 0, 8, 27, 0, 7, 2, 0, 0, 0, 0, 1]' : 0.182046}
{'[0, 6, 2, 3, 5, 0, 0, 0, 8, 27, 0, 7, 2, 0, 0, 0, 0, 1]' : 0.181194}
{'[0, 6, 2, 3, 5, 0, 0, 0, 8, 27, 0, 7, 2, 0, 0, 0, 0, 1]' : 0.181172}
{'[0, 6, 2, 3, 5, 0, 0, 0, 8, 27, 0, 7, 2, 0, 0, 0, 0, 1]' : 0.181449}
{'[0, 6, 2, 3, 5, 0, 0, 0, 8, 27, 0, 7, 2, 0, 0, 0, 0, 1]' : 0.181504}
{'[0, 6, 2, 3, 5, 0, 0, 0, 8, 27, 0, 7, 2, 0, 0, 0, 0, 1]' : 0.182114}
{'[0, 6, 2, 3, 5, 0, 0, 0, 8, 27, 0, 7, 2, 0, 0, 0, 0, 1]' : 0.181544}

out:
 ["{'[0, 6, 2, 3, 5, 0, 0, 0, 8, 27, 0, 7, 2, 0, 0, 0, 0, 1]' : 0.181198}", "{'[0, 6, 2, 3, 5, 0, 0, 0, 8, 27, 0, 7, 2, 0, 0, 0, 0, 1]' : 0.181629}", "{'[0, 6, 2, 3, 5, 0, 0, 0, 8, 27, 0, 7, 2, 0, 0, 0, 0, 1]' : 0.180942}", "{'[0, 6, 2, 3, 5, 0, 0, 0, 8, 27, 0, 7, 2, 0, 0, 0, 0, 1]' : 0.18216}", "{'[0, 6, 2, 3, 5, 0, 0, 0, 8, 27, 0, 7, 2, 0, 0, 0, 0, 1]' : 0.1821}", "{'[0, 6, 2, 3, 5, 0, 0, 0, 8, 27, 0, 7, 2, 0, 0, 0, 0, 1]' : 0.181756}", "{'[0, 6, 2, 3, 5, 0, 0, 0, 8, 27, 0, 7, 2, 0, 0, 0, 0, 1]' : 0.18148}", "{'[0, 6, 2, 3, 5, 0, 0, 0, 8, 27, 0, 7, 2, 0, 0, 0, 0, 1]' : 0.181819}", "{'[0, 6, 2, 3, 5, 0, 0, 0, 8, 27, 0, 7, 2, 0, 0, 0, 0, 1]' : 0.181676}", "{'[0, 6, 2, 3, 5, 0, 0, 0, 8, 27, 0, 7, 2, 0, 0, 0, 0, 1]' : 0.182202}", "{'[0, 6, 2, 3, 5, 0, 0, 0, 8, 27, 0, 7, 2, 0, 0, 0, 0, 1]' : 0.181777}", "{'[0, 6, 2, 3, 5, 0, 0, 0, 8, 27, 0, 7, 2, 0, 0, 0, 0, 1]' : 0.181843}", "{'[0, 6, 2, 3, 5, 0, 0, 0, 8, 27, 0, 7, 2, 0, 0, 0, 0, 1]' : 0.181654}", "{'[0, 6, 2, 3, 5, 0, 0, 0, 8, 27, 0, 7, 2, 0, 0, 0, 0, 1]' : 0.181369}", "{'[0, 6, 2, 3, 5, 0, 0, 0, 8, 27, 0, 7, 2, 0, 0, 0, 0, 1]' : 0.181783}", "{'[0, 6, 2, 3, 5, 0, 0, 0, 8, 27, 0, 7, 2, 0, 0, 0, 0, 1]' : 0.182571}", "{'[0, 6, 2, 3, 5, 0, 0, 0, 8, 27, 0, 7, 2, 0, 0, 0, 0, 1]' : 0.181516}", "{'[0, 6, 2, 3, 5, 0, 0, 0, 8, 27, 0, 7, 2, 0, 0, 0, 0, 1]' : 0.181035}", "{'[0, 6, 2, 3, 5, 0, 0, 0, 8, 27, 0, 7, 2, 0, 0, 0, 0, 1]' : 0.181627}", "{'[0, 6, 2, 3, 5, 0, 0, 0, 8, 27, 0, 7, 2, 0, 0, 0, 0, 1]' : 0.181575}", "{'[0, 6, 2, 3, 5, 0, 0, 0, 8, 27, 0, 7, 2, 0, 0, 0, 0, 1]' : 0.182382}", "{'[0, 6, 2, 3, 5, 0, 0, 0, 8, 27, 0, 7, 2, 0, 0, 0, 0, 1]' : 0.181556}", "{'[0, 6, 2, 3, 5, 0, 0, 0, 8, 27, 0, 7, 2, 0, 0, 0, 0, 1]' : 0.181805}", "{'[0, 6, 2, 3, 5, 0, 0, 0, 8, 27, 0, 7, 2, 0, 0, 0, 0, 1]' : 0.182046}", "{'[0, 6, 2, 3, 5, 0, 0, 0, 8, 27, 0, 7, 2, 0, 0, 0, 0, 1]' : 0.181194}", "{'[0, 6, 2, 3, 5, 0, 0, 0, 8, 27, 0, 7, 2, 0, 0, 0, 0, 1]' : 0.181172}", "{'[0, 6, 2, 3, 5, 0, 0, 0, 8, 27, 0, 7, 2, 0, 0, 0, 0, 1]' : 0.181449}", "{'[0, 6, 2, 3, 5, 0, 0, 0, 8, 27, 0, 7, 2, 0, 0, 0, 0, 1]' : 0.181504}", "{'[0, 6, 2, 3, 5, 0, 0, 0, 8, 27, 0, 7, 2, 0, 0, 0, 0, 1]' : 0.182114}", "{'[0, 6, 2, 3, 5, 0, 0, 0, 8, 27, 0, 7, 2, 0, 0, 0, 0, 1]' : 0.181544}"]
returning from 'run': {'[0, 6, 2, 3, 5, 0, 0, 0, 8, 27, 0, 7, 2, 0, 0, 0, 0, 1]': ([0.181198, 0.181629, 0.180942, 0.18216, 0.1821, 0.181756, 0.18148, 0.181819, 0.181676, 0.182202, 0.181777, 0.181843, 0.181654, 0.181369, 0.181783, 0.182571, 0.181516, 0.181035, 0.181627, 0.181575, 0.182382, 0.181556, 0.181805, 0.182046, 0.181194, 0.181172, 0.181449, 0.181504, 0.182114, 0.181544], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 2, 3, 5, 0, 0, 0, 8, 27, 0, 7, 2, 0, 0, 0, 0, 1]': ([0.181198, 0.181629, 0.180942, 0.18216, 0.1821, 0.181756, 0.18148, 0.181819, 0.181676, 0.182202, 0.181777, 0.181843, 0.181654, 0.181369, 0.181783, 0.182571, 0.181516, 0.181035, 0.181627, 0.181575, 0.182382, 0.181556, 0.181805, 0.182046, 0.181194, 0.181172, 0.181449, 0.181504, 0.182114, 0.181544], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	73
        Max loop nest depth: 	5
        Additions: 		3308
        Multiplications: 	918
        Divisions: 		0
        Logical: 		0
        Reads: 			5517
        Writes: 		705
        Comparisons:		73
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest83.exe __orio_perftest83.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest83.exe  
Program Test Output: 
{'[0, 1, 1, 3, 6, 2, 0, 1, 6, 25, 14, 0, 0, 0, 0, 0, 1, 1]' : 0.233481}
{'[0, 1, 1, 3, 6, 2, 0, 1, 6, 25, 14, 0, 0, 0, 0, 0, 1, 1]' : 0.232899}
{'[0, 1, 1, 3, 6, 2, 0, 1, 6, 25, 14, 0, 0, 0, 0, 0, 1, 1]' : 0.232296}
{'[0, 1, 1, 3, 6, 2, 0, 1, 6, 25, 14, 0, 0, 0, 0, 0, 1, 1]' : 0.232315}
{'[0, 1, 1, 3, 6, 2, 0, 1, 6, 25, 14, 0, 0, 0, 0, 0, 1, 1]' : 0.232189}
{'[0, 1, 1, 3, 6, 2, 0, 1, 6, 25, 14, 0, 0, 0, 0, 0, 1, 1]' : 0.232549}
{'[0, 1, 1, 3, 6, 2, 0, 1, 6, 25, 14, 0, 0, 0, 0, 0, 1, 1]' : 0.232723}
{'[0, 1, 1, 3, 6, 2, 0, 1, 6, 25, 14, 0, 0, 0, 0, 0, 1, 1]' : 0.232261}
{'[0, 1, 1, 3, 6, 2, 0, 1, 6, 25, 14, 0, 0, 0, 0, 0, 1, 1]' : 0.232307}
{'[0, 1, 1, 3, 6, 2, 0, 1, 6, 25, 14, 0, 0, 0, 0, 0, 1, 1]' : 0.232083}
{'[0, 1, 1, 3, 6, 2, 0, 1, 6, 25, 14, 0, 0, 0, 0, 0, 1, 1]' : 0.232416}
{'[0, 1, 1, 3, 6, 2, 0, 1, 6, 25, 14, 0, 0, 0, 0, 0, 1, 1]' : 0.232607}
{'[0, 1, 1, 3, 6, 2, 0, 1, 6, 25, 14, 0, 0, 0, 0, 0, 1, 1]' : 0.232126}
{'[0, 1, 1, 3, 6, 2, 0, 1, 6, 25, 14, 0, 0, 0, 0, 0, 1, 1]' : 0.231956}
{'[0, 1, 1, 3, 6, 2, 0, 1, 6, 25, 14, 0, 0, 0, 0, 0, 1, 1]' : 0.232547}
{'[0, 1, 1, 3, 6, 2, 0, 1, 6, 25, 14, 0, 0, 0, 0, 0, 1, 1]' : 0.232529}
{'[0, 1, 1, 3, 6, 2, 0, 1, 6, 25, 14, 0, 0, 0, 0, 0, 1, 1]' : 0.232506}
{'[0, 1, 1, 3, 6, 2, 0, 1, 6, 25, 14, 0, 0, 0, 0, 0, 1, 1]' : 0.232152}
{'[0, 1, 1, 3, 6, 2, 0, 1, 6, 25, 14, 0, 0, 0, 0, 0, 1, 1]' : 0.23235}
{'[0, 1, 1, 3, 6, 2, 0, 1, 6, 25, 14, 0, 0, 0, 0, 0, 1, 1]' : 0.23244}
{'[0, 1, 1, 3, 6, 2, 0, 1, 6, 25, 14, 0, 0, 0, 0, 0, 1, 1]' : 0.232589}
{'[0, 1, 1, 3, 6, 2, 0, 1, 6, 25, 14, 0, 0, 0, 0, 0, 1, 1]' : 0.232365}
{'[0, 1, 1, 3, 6, 2, 0, 1, 6, 25, 14, 0, 0, 0, 0, 0, 1, 1]' : 0.232508}
{'[0, 1, 1, 3, 6, 2, 0, 1, 6, 25, 14, 0, 0, 0, 0, 0, 1, 1]' : 0.232422}
{'[0, 1, 1, 3, 6, 2, 0, 1, 6, 25, 14, 0, 0, 0, 0, 0, 1, 1]' : 0.232303}
{'[0, 1, 1, 3, 6, 2, 0, 1, 6, 25, 14, 0, 0, 0, 0, 0, 1, 1]' : 0.232882}
{'[0, 1, 1, 3, 6, 2, 0, 1, 6, 25, 14, 0, 0, 0, 0, 0, 1, 1]' : 0.232508}
{'[0, 1, 1, 3, 6, 2, 0, 1, 6, 25, 14, 0, 0, 0, 0, 0, 1, 1]' : 0.232298}
{'[0, 1, 1, 3, 6, 2, 0, 1, 6, 25, 14, 0, 0, 0, 0, 0, 1, 1]' : 0.232163}
{'[0, 1, 1, 3, 6, 2, 0, 1, 6, 25, 14, 0, 0, 0, 0, 0, 1, 1]' : 0.232429}

out:
 ["{'[0, 1, 1, 3, 6, 2, 0, 1, 6, 25, 14, 0, 0, 0, 0, 0, 1, 1]' : 0.233481}", "{'[0, 1, 1, 3, 6, 2, 0, 1, 6, 25, 14, 0, 0, 0, 0, 0, 1, 1]' : 0.232899}", "{'[0, 1, 1, 3, 6, 2, 0, 1, 6, 25, 14, 0, 0, 0, 0, 0, 1, 1]' : 0.232296}", "{'[0, 1, 1, 3, 6, 2, 0, 1, 6, 25, 14, 0, 0, 0, 0, 0, 1, 1]' : 0.232315}", "{'[0, 1, 1, 3, 6, 2, 0, 1, 6, 25, 14, 0, 0, 0, 0, 0, 1, 1]' : 0.232189}", "{'[0, 1, 1, 3, 6, 2, 0, 1, 6, 25, 14, 0, 0, 0, 0, 0, 1, 1]' : 0.232549}", "{'[0, 1, 1, 3, 6, 2, 0, 1, 6, 25, 14, 0, 0, 0, 0, 0, 1, 1]' : 0.232723}", "{'[0, 1, 1, 3, 6, 2, 0, 1, 6, 25, 14, 0, 0, 0, 0, 0, 1, 1]' : 0.232261}", "{'[0, 1, 1, 3, 6, 2, 0, 1, 6, 25, 14, 0, 0, 0, 0, 0, 1, 1]' : 0.232307}", "{'[0, 1, 1, 3, 6, 2, 0, 1, 6, 25, 14, 0, 0, 0, 0, 0, 1, 1]' : 0.232083}", "{'[0, 1, 1, 3, 6, 2, 0, 1, 6, 25, 14, 0, 0, 0, 0, 0, 1, 1]' : 0.232416}", "{'[0, 1, 1, 3, 6, 2, 0, 1, 6, 25, 14, 0, 0, 0, 0, 0, 1, 1]' : 0.232607}", "{'[0, 1, 1, 3, 6, 2, 0, 1, 6, 25, 14, 0, 0, 0, 0, 0, 1, 1]' : 0.232126}", "{'[0, 1, 1, 3, 6, 2, 0, 1, 6, 25, 14, 0, 0, 0, 0, 0, 1, 1]' : 0.231956}", "{'[0, 1, 1, 3, 6, 2, 0, 1, 6, 25, 14, 0, 0, 0, 0, 0, 1, 1]' : 0.232547}", "{'[0, 1, 1, 3, 6, 2, 0, 1, 6, 25, 14, 0, 0, 0, 0, 0, 1, 1]' : 0.232529}", "{'[0, 1, 1, 3, 6, 2, 0, 1, 6, 25, 14, 0, 0, 0, 0, 0, 1, 1]' : 0.232506}", "{'[0, 1, 1, 3, 6, 2, 0, 1, 6, 25, 14, 0, 0, 0, 0, 0, 1, 1]' : 0.232152}", "{'[0, 1, 1, 3, 6, 2, 0, 1, 6, 25, 14, 0, 0, 0, 0, 0, 1, 1]' : 0.23235}", "{'[0, 1, 1, 3, 6, 2, 0, 1, 6, 25, 14, 0, 0, 0, 0, 0, 1, 1]' : 0.23244}", "{'[0, 1, 1, 3, 6, 2, 0, 1, 6, 25, 14, 0, 0, 0, 0, 0, 1, 1]' : 0.232589}", "{'[0, 1, 1, 3, 6, 2, 0, 1, 6, 25, 14, 0, 0, 0, 0, 0, 1, 1]' : 0.232365}", "{'[0, 1, 1, 3, 6, 2, 0, 1, 6, 25, 14, 0, 0, 0, 0, 0, 1, 1]' : 0.232508}", "{'[0, 1, 1, 3, 6, 2, 0, 1, 6, 25, 14, 0, 0, 0, 0, 0, 1, 1]' : 0.232422}", "{'[0, 1, 1, 3, 6, 2, 0, 1, 6, 25, 14, 0, 0, 0, 0, 0, 1, 1]' : 0.232303}", "{'[0, 1, 1, 3, 6, 2, 0, 1, 6, 25, 14, 0, 0, 0, 0, 0, 1, 1]' : 0.232882}", "{'[0, 1, 1, 3, 6, 2, 0, 1, 6, 25, 14, 0, 0, 0, 0, 0, 1, 1]' : 0.232508}", "{'[0, 1, 1, 3, 6, 2, 0, 1, 6, 25, 14, 0, 0, 0, 0, 0, 1, 1]' : 0.232298}", "{'[0, 1, 1, 3, 6, 2, 0, 1, 6, 25, 14, 0, 0, 0, 0, 0, 1, 1]' : 0.232163}", "{'[0, 1, 1, 3, 6, 2, 0, 1, 6, 25, 14, 0, 0, 0, 0, 0, 1, 1]' : 0.232429}"]
returning from 'run': {'[0, 1, 1, 3, 6, 2, 0, 1, 6, 25, 14, 0, 0, 0, 0, 0, 1, 1]': ([0.233481, 0.232899, 0.232296, 0.232315, 0.232189, 0.232549, 0.232723, 0.232261, 0.232307, 0.232083, 0.232416, 0.232607, 0.232126, 0.231956, 0.232547, 0.232529, 0.232506, 0.232152, 0.23235, 0.23244, 0.232589, 0.232365, 0.232508, 0.232422, 0.232303, 0.232882, 0.232508, 0.232298, 0.232163, 0.232429], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 1, 3, 6, 2, 0, 1, 6, 25, 14, 0, 0, 0, 0, 0, 1, 1]': ([0.233481, 0.232899, 0.232296, 0.232315, 0.232189, 0.232549, 0.232723, 0.232261, 0.232307, 0.232083, 0.232416, 0.232607, 0.232126, 0.231956, 0.232547, 0.232529, 0.232506, 0.232152, 0.23235, 0.23244, 0.232589, 0.232365, 0.232508, 0.232422, 0.232303, 0.232882, 0.232508, 0.232298, 0.232163, 0.232429], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	23
        Max loop nest depth: 	5
        Additions: 		824
        Multiplications: 	198
        Divisions: 		0
        Logical: 		0
        Reads: 			1399
        Writes: 		162
        Comparisons:		23
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest84.exe __orio_perftest84.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest84.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest84.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest84.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest84.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Complete design, with measurements:
     T1_J T1_K T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J RT_K VEC1
34      1    1    0    0       1       1   25  29   0   8    1    0    0    1
196     6    0    0    3       1       0    0  27   2   0    0    1    1    1
590     6    6    5    6       0       1    0  18   0   4    0    0    0    0
843     6    1    4    1       0       0   20  14   1   0    1    0    1    0
947     3    3    0    6       0       0   13   8   0  24    0    1    1    0
1334    0    0    6    6       0       1    9  27   0  29    1    0    1    1
1437    1    0    6    6       1       0    7  25  17   0    0    0    2    0
1471    6    3    6    2       1       0    0   4  27   0    0    0    2    0
1530    2    4    1    3       1       0    2   0   0   0    0    0    1    0
1555    0    5    0    5       1       1   18  27   5   0    2    0    0    0
1609    0    0    5    0       0       0    0   0   0   6    0    0    0    0
1980    5    0    6    5       0       0   29   0  27   1    2    0    0    1
2022    2    6    1    0       0       0    4   3  29   0    0    2    0    0
2046    6    5    6    0       1       1    9   0   0  28    1    1    0    1
2068    0    6    2    6       0       0   29   4   6   0    0    0    2    1
2146    5    2    0    5       0       0   29  29   0  27    0    2    0    0
2203    0    2    3    2       1       0   26   0  28  28    0    0    0    0
2773    2    2    2    6       1       0   20  10   2   0    0    1    0    1
2811    1    0    0    2       0       0   24  26   0   0    0    0    2    1
2898    4    6    3    4       1       0    4  28   0   1    1    1    0    1
2923    0    1    1    0       0       0    0  29  25   0    1    1    0    1
2947    6    0    0    5       0       1   29   4  28   0    1    0    0    1
3022    1    4    3    2       0       1    0   0  29  29    2    0    0    1
3060    0    3    6    0       1       1   29  27  29   0    0    1    1    1
3251    3    0    1    2       1       1   29  11   0   5    0    1    1    0
3287    1    0    3    0       1       1   19   6   0  29    2    0    0    1
3340    2    6    0    6       0       0    0   0   4   4    1    0    1    1
3400    5    3    0    1       1       0    8   3   0  25    0    0    1    1
3472    2    6    5    0       0       0   29   0  13  25    1    1    0    0
3492    0    1    0    1       0       1    8   4   0   8    1    1    0    0
3499    0    1    2    6       1       1    3  11  27   0    1    0    1    0
3502    6    2    5    0       0       0    8  27   0   7    2    0    0    0
3545    1    1    6    2       0       1    6  25  14   0    0    0    0    1
     cost_mean
34   0.1177723
196  0.1585543
590  0.1448876
843  0.1136428
947  0.1076608
1334 0.1127019
1437 0.2249727
1471 0.1976671
1530 0.2010793
1555 0.2189985
1609 0.1506781
1980 0.3277519
2022 0.1127644
2046 0.1000429
2068 0.1272963
2146 0.1835159
2203 0.2219883
2773 0.1605983
2811 0.1569753
2898 0.1143632
2923 0.1066211
2947 0.1109154
3022 0.1860494
3060 0.2402611
3251 0.1862688
3287 0.1890177
3340 0.1086146
3400 0.1272039
3472 0.1131309
3492 0.1171043
3499 0.1349831
3502 0.1816826
3545 0.2324400

Heteroscedasticity Test p-value: 0.743165372598
Regression Step:                Df   Sum Sq  Mean Sq F value   Pr(>F)    
T1_J             1 0.000284 0.000284   0.476 0.512397    
T1_K             1 0.006171 0.006171  10.337 0.014752 *  
T2_J             1 0.012314 0.012314  20.628 0.002662 ** 
T2_K             1 0.001803 0.001803   3.020 0.125821    
ACOPY_x          1 0.004722 0.004722   7.910 0.026052 *  
ACOPY_y          1 0.000917 0.000917   1.536 0.255155    
U1_I             1 0.004519 0.004519   7.570 0.028451 *  
U_I              1 0.000028 0.000028   0.047 0.834769    
U_J              1 0.005420 0.005420   9.079 0.019575 *  
U_K              1 0.000785 0.000785   1.314 0.289260    
RT_I             1 0.001330 0.001330   2.228 0.179200    
RT_J             1 0.000434 0.000434   0.726 0.422263    
RT_K             1 0.002022 0.002022   3.388 0.108235    
VEC1             1 0.000966 0.000966   1.619 0.243928    
I(1/(1 + T1_J))  1 0.002606 0.002606   4.365 0.075051 .  
I(1/(1 + T1_K))  1 0.000064 0.000064   0.107 0.753022    
I(1/(1 + T2_J))  1 0.002436 0.002436   4.080 0.083137 .  
I(1/(1 + T2_K))  1 0.008768 0.008768  14.689 0.006436 ** 
I(1/(1 + U1_I))  1 0.001803 0.001803   3.020 0.125783    
I(1/(1 + U_I))   1 0.000263 0.000263   0.441 0.527963    
I(1/(1 + U_J))   1 0.001246 0.001246   2.087 0.191778    
I(1/(1 + U_K))   1 0.000454 0.000454   0.760 0.412179    
I(1/(1 + RT_I))  1 0.025181 0.025181  42.185 0.000336 ***
I(1/(1 + RT_J))  1 0.000491 0.000491   0.823 0.394382    
I(1/(1 + RT_K))  1 0.000361 0.000361   0.605 0.462089    
Residuals        7 0.004178 0.000597                     
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Predicting Best
Generating valid search space of size 3700 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Valid coordinates: 740
Tested coordinates: 30000
Tested coordinates: 40000
Tested coordinates: 50000
Valid coordinates: 1480
Tested coordinates: 60000
Tested coordinates: 70000
Tested coordinates: 80000
Valid coordinates: 2220
Tested coordinates: 90000
Tested coordinates: 100000
Valid coordinates: 2960
Tested coordinates: 110000
Tested coordinates: 120000
Tested coordinates: 130000
Valid coordinates: 3700
Valid/Tested configurations: 3700/133518
Generated Search Space:
NULL
Identical predictions (tol = 1e-5): 1
Getting Best from Design
Response: ['cost_mean']
Design Names:  [1] "T1_J"      "T1_K"      "T2_J"      "T2_K"      "ACOPY_x"   "ACOPY_y"  
 [7] "U1_I"      "U_I"       "U_J"       "U_K"       "RT_I"      "RT_J"     
[13] "RT_K"      "VEC1"      "cost_mean"

Design Response:      cost_mean
34   0.1177723
196  0.1585543
590  0.1448876
843  0.1136428
947  0.1076608
1334 0.1127019
1437 0.2249727
1471 0.1976671
1530 0.2010793
1555 0.2189985
1609 0.1506781
1980 0.3277519
2022 0.1127644
2046 0.1000429
2068 0.1272963
2146 0.1835159
2203 0.2219883
2773 0.1605983
2811 0.1569753
2898 0.1143632
2923 0.1066211
2947 0.1109154
3022 0.1860494
3060 0.2402611
3251 0.1862688
3287 0.1890177
3340 0.1086146
3400 0.1272039
3472 0.1131309
3492 0.1171043
3499 0.1349831
3502 0.1816826
3545 0.2324400

Current Design Names: ['T1_J', 'T1_K', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'VEC1']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Getting fixed variables
Pruning Model
Best Predicted:      T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
2203    0    3    5    3    2    0       0       0    2  17   0  17    1    0
     RT_K SCR VEC1 VEC2
2203    0   0    1    1

Best From Design: [0, 6, 5, 3, 6, 0, 1, 1, 9, 0, 0, 28, 1, 1, 0, 0, 1, 1]
Pruned Factors: ['T1_J', 'T2_K', 'ACOPY_y', 'U_I', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'VEC1']
Fixed Factors: {'ACOPY_x': 0, 'T1_I': 0, 'T1_K': 5, 'U_J': 0, 'U1_I': 2, 'T2_J': 2, 'T2_I': 3, 'VEC2': 1, 'SCR': 0}
Length of requested configs: 1
Result was on Database, Returning Now
Starting Point (-O3):
0.16283083333333334
Predicted Best Point:
[0, 3, 5, 3, 2, 0, 0, 0, 2, 17, 0, 17, 1, 0, 0, 0, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	5
        Additions: 		3567
        Multiplications: 	1080
        Divisions: 		0
        Logical: 		0
        Reads: 			5646
        Writes: 		627
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest85.exe __orio_perftest85.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest85.exe  
Program Test Output: 
{'[0, 3, 5, 3, 2, 0, 0, 0, 2, 17, 0, 17, 1, 0, 0, 0, 1, 1]' : 0.135707}
{'[0, 3, 5, 3, 2, 0, 0, 0, 2, 17, 0, 17, 1, 0, 0, 0, 1, 1]' : 0.135722}
{'[0, 3, 5, 3, 2, 0, 0, 0, 2, 17, 0, 17, 1, 0, 0, 0, 1, 1]' : 0.13355}
{'[0, 3, 5, 3, 2, 0, 0, 0, 2, 17, 0, 17, 1, 0, 0, 0, 1, 1]' : 0.123479}
{'[0, 3, 5, 3, 2, 0, 0, 0, 2, 17, 0, 17, 1, 0, 0, 0, 1, 1]' : 0.123885}
{'[0, 3, 5, 3, 2, 0, 0, 0, 2, 17, 0, 17, 1, 0, 0, 0, 1, 1]' : 0.123907}
{'[0, 3, 5, 3, 2, 0, 0, 0, 2, 17, 0, 17, 1, 0, 0, 0, 1, 1]' : 0.122172}
{'[0, 3, 5, 3, 2, 0, 0, 0, 2, 17, 0, 17, 1, 0, 0, 0, 1, 1]' : 0.120966}
{'[0, 3, 5, 3, 2, 0, 0, 0, 2, 17, 0, 17, 1, 0, 0, 0, 1, 1]' : 0.121062}
{'[0, 3, 5, 3, 2, 0, 0, 0, 2, 17, 0, 17, 1, 0, 0, 0, 1, 1]' : 0.121028}
{'[0, 3, 5, 3, 2, 0, 0, 0, 2, 17, 0, 17, 1, 0, 0, 0, 1, 1]' : 0.121097}
{'[0, 3, 5, 3, 2, 0, 0, 0, 2, 17, 0, 17, 1, 0, 0, 0, 1, 1]' : 0.121012}
{'[0, 3, 5, 3, 2, 0, 0, 0, 2, 17, 0, 17, 1, 0, 0, 0, 1, 1]' : 0.121063}
{'[0, 3, 5, 3, 2, 0, 0, 0, 2, 17, 0, 17, 1, 0, 0, 0, 1, 1]' : 0.121163}
{'[0, 3, 5, 3, 2, 0, 0, 0, 2, 17, 0, 17, 1, 0, 0, 0, 1, 1]' : 0.121107}
{'[0, 3, 5, 3, 2, 0, 0, 0, 2, 17, 0, 17, 1, 0, 0, 0, 1, 1]' : 0.12102}
{'[0, 3, 5, 3, 2, 0, 0, 0, 2, 17, 0, 17, 1, 0, 0, 0, 1, 1]' : 0.121077}
{'[0, 3, 5, 3, 2, 0, 0, 0, 2, 17, 0, 17, 1, 0, 0, 0, 1, 1]' : 0.121357}
{'[0, 3, 5, 3, 2, 0, 0, 0, 2, 17, 0, 17, 1, 0, 0, 0, 1, 1]' : 0.121509}
{'[0, 3, 5, 3, 2, 0, 0, 0, 2, 17, 0, 17, 1, 0, 0, 0, 1, 1]' : 0.121019}
{'[0, 3, 5, 3, 2, 0, 0, 0, 2, 17, 0, 17, 1, 0, 0, 0, 1, 1]' : 0.121}
{'[0, 3, 5, 3, 2, 0, 0, 0, 2, 17, 0, 17, 1, 0, 0, 0, 1, 1]' : 0.121049}
{'[0, 3, 5, 3, 2, 0, 0, 0, 2, 17, 0, 17, 1, 0, 0, 0, 1, 1]' : 0.121027}
{'[0, 3, 5, 3, 2, 0, 0, 0, 2, 17, 0, 17, 1, 0, 0, 0, 1, 1]' : 0.121091}
{'[0, 3, 5, 3, 2, 0, 0, 0, 2, 17, 0, 17, 1, 0, 0, 0, 1, 1]' : 0.120975}
{'[0, 3, 5, 3, 2, 0, 0, 0, 2, 17, 0, 17, 1, 0, 0, 0, 1, 1]' : 0.121028}
{'[0, 3, 5, 3, 2, 0, 0, 0, 2, 17, 0, 17, 1, 0, 0, 0, 1, 1]' : 0.121023}
{'[0, 3, 5, 3, 2, 0, 0, 0, 2, 17, 0, 17, 1, 0, 0, 0, 1, 1]' : 0.121047}
{'[0, 3, 5, 3, 2, 0, 0, 0, 2, 17, 0, 17, 1, 0, 0, 0, 1, 1]' : 0.121053}
{'[0, 3, 5, 3, 2, 0, 0, 0, 2, 17, 0, 17, 1, 0, 0, 0, 1, 1]' : 0.121115}

out:
 ["{'[0, 3, 5, 3, 2, 0, 0, 0, 2, 17, 0, 17, 1, 0, 0, 0, 1, 1]' : 0.135707}", "{'[0, 3, 5, 3, 2, 0, 0, 0, 2, 17, 0, 17, 1, 0, 0, 0, 1, 1]' : 0.135722}", "{'[0, 3, 5, 3, 2, 0, 0, 0, 2, 17, 0, 17, 1, 0, 0, 0, 1, 1]' : 0.13355}", "{'[0, 3, 5, 3, 2, 0, 0, 0, 2, 17, 0, 17, 1, 0, 0, 0, 1, 1]' : 0.123479}", "{'[0, 3, 5, 3, 2, 0, 0, 0, 2, 17, 0, 17, 1, 0, 0, 0, 1, 1]' : 0.123885}", "{'[0, 3, 5, 3, 2, 0, 0, 0, 2, 17, 0, 17, 1, 0, 0, 0, 1, 1]' : 0.123907}", "{'[0, 3, 5, 3, 2, 0, 0, 0, 2, 17, 0, 17, 1, 0, 0, 0, 1, 1]' : 0.122172}", "{'[0, 3, 5, 3, 2, 0, 0, 0, 2, 17, 0, 17, 1, 0, 0, 0, 1, 1]' : 0.120966}", "{'[0, 3, 5, 3, 2, 0, 0, 0, 2, 17, 0, 17, 1, 0, 0, 0, 1, 1]' : 0.121062}", "{'[0, 3, 5, 3, 2, 0, 0, 0, 2, 17, 0, 17, 1, 0, 0, 0, 1, 1]' : 0.121028}", "{'[0, 3, 5, 3, 2, 0, 0, 0, 2, 17, 0, 17, 1, 0, 0, 0, 1, 1]' : 0.121097}", "{'[0, 3, 5, 3, 2, 0, 0, 0, 2, 17, 0, 17, 1, 0, 0, 0, 1, 1]' : 0.121012}", "{'[0, 3, 5, 3, 2, 0, 0, 0, 2, 17, 0, 17, 1, 0, 0, 0, 1, 1]' : 0.121063}", "{'[0, 3, 5, 3, 2, 0, 0, 0, 2, 17, 0, 17, 1, 0, 0, 0, 1, 1]' : 0.121163}", "{'[0, 3, 5, 3, 2, 0, 0, 0, 2, 17, 0, 17, 1, 0, 0, 0, 1, 1]' : 0.121107}", "{'[0, 3, 5, 3, 2, 0, 0, 0, 2, 17, 0, 17, 1, 0, 0, 0, 1, 1]' : 0.12102}", "{'[0, 3, 5, 3, 2, 0, 0, 0, 2, 17, 0, 17, 1, 0, 0, 0, 1, 1]' : 0.121077}", "{'[0, 3, 5, 3, 2, 0, 0, 0, 2, 17, 0, 17, 1, 0, 0, 0, 1, 1]' : 0.121357}", "{'[0, 3, 5, 3, 2, 0, 0, 0, 2, 17, 0, 17, 1, 0, 0, 0, 1, 1]' : 0.121509}", "{'[0, 3, 5, 3, 2, 0, 0, 0, 2, 17, 0, 17, 1, 0, 0, 0, 1, 1]' : 0.121019}", "{'[0, 3, 5, 3, 2, 0, 0, 0, 2, 17, 0, 17, 1, 0, 0, 0, 1, 1]' : 0.121}", "{'[0, 3, 5, 3, 2, 0, 0, 0, 2, 17, 0, 17, 1, 0, 0, 0, 1, 1]' : 0.121049}", "{'[0, 3, 5, 3, 2, 0, 0, 0, 2, 17, 0, 17, 1, 0, 0, 0, 1, 1]' : 0.121027}", "{'[0, 3, 5, 3, 2, 0, 0, 0, 2, 17, 0, 17, 1, 0, 0, 0, 1, 1]' : 0.121091}", "{'[0, 3, 5, 3, 2, 0, 0, 0, 2, 17, 0, 17, 1, 0, 0, 0, 1, 1]' : 0.120975}", "{'[0, 3, 5, 3, 2, 0, 0, 0, 2, 17, 0, 17, 1, 0, 0, 0, 1, 1]' : 0.121028}", "{'[0, 3, 5, 3, 2, 0, 0, 0, 2, 17, 0, 17, 1, 0, 0, 0, 1, 1]' : 0.121023}", "{'[0, 3, 5, 3, 2, 0, 0, 0, 2, 17, 0, 17, 1, 0, 0, 0, 1, 1]' : 0.121047}", "{'[0, 3, 5, 3, 2, 0, 0, 0, 2, 17, 0, 17, 1, 0, 0, 0, 1, 1]' : 0.121053}", "{'[0, 3, 5, 3, 2, 0, 0, 0, 2, 17, 0, 17, 1, 0, 0, 0, 1, 1]' : 0.121115}"]
returning from 'run': {'[0, 3, 5, 3, 2, 0, 0, 0, 2, 17, 0, 17, 1, 0, 0, 0, 1, 1]': ([0.135707, 0.135722, 0.13355, 0.123479, 0.123885, 0.123907, 0.122172, 0.120966, 0.121062, 0.121028, 0.121097, 0.121012, 0.121063, 0.121163, 0.121107, 0.12102, 0.121077, 0.121357, 0.121509, 0.121019, 0.121, 0.121049, 0.121027, 0.121091, 0.120975, 0.121028, 0.121023, 0.121047, 0.121053, 0.121115], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 3, 5, 3, 2, 0, 0, 0, 2, 17, 0, 17, 1, 0, 0, 0, 1, 1]': ([0.135707, 0.135722, 0.13355, 0.123479, 0.123885, 0.123907, 0.122172, 0.120966, 0.121062, 0.121028, 0.121097, 0.121012, 0.121063, 0.121163, 0.121107, 0.12102, 0.121077, 0.121357, 0.121509, 0.121019, 0.121, 0.121049, 0.121027, 0.121091, 0.120975, 0.121028, 0.121023, 0.121047, 0.121053, 0.121115], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Design Best Point:
[0, 6, 5, 3, 6, 0, 1, 1, 9, 0, 0, 28, 1, 1, 0, 0, 1, 1]
Length of requested configs: 1
Result was on Database, Returning Now
Fixed Factors: {'ACOPY_x': 0, 'T1_I': 0, 'T1_K': 5, 'U_J': 0, 'U1_I': 2, 'T2_J': 2, 'T2_I': 3, 'VEC2': 1, 'SCR': 0}
Slowdown (Design Best): 0.6143978669068614
Slowdown (Predicted Best): 0.7540156706602456
Budget: 71/180
Current Best Point: 
[4, 6, 2, 5, 6, 6, 0, 0, 9, 1, 0, 1, 1, 0, 1, 1, 1, 0]
Final Best Point: 
[4, 6, 2, 5, 6, 6, 0, 0, 9, 1, 0, 1, 1, 0, 1, 1, 1, 0]
Ending DOPT-ANOVA
Best Point: [4, 6, 2, 5, 6, 6, 0, 0, 9, 1, 0, 1, 1, 0, 1, 1, 1, 0]
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Speedup: 1.6871718469451564
----- end random search -----
----- begin random search summary -----
 total completed runs: 0
 total successful runs: 0
 total failed runs: 0
 speedup: 1.6871718469451564
----- end random search summary -----
----- begin summary -----
 best coordinate: [4, 6, 2, 5, 6, 6, 0, 0, 9, 1, 0, 1, 1, 0, 1, 1, 1, 0]={'ACOPY_x': False, 'ACOPY_y': False, 'RT_K': 8, 'T1_I': 128, 'T1_J': 512, 'T1_K': 32, 'U_K': 2, 'U_J': 1, 'U_I': 2, 'U1_I': 10, 'T2_K': 2048, 'T2_J': 2048, 'T2_I': 1024, 'VEC2': False, 'VEC1': True, 'RT_I': 8, 'SCR': True, 'RT_J': 1}, cost=9.651111e-02, transfer_time=inf, inputs=[('N', 10000)], search_time=-970.57, runs=71
----- end summary -----
Length of requested configs: 1
Result was on Database, Returning Now
----- the obtained best performance parameters -----
 ACOPY_x = False
 ACOPY_y = False
 RT_I = 8
 RT_J = 1
 RT_K = 8
 SCR = True
 T1_I = 128
 T1_J = 512
 T1_K = 32
 T2_I = 1024
 T2_J = 2048
 T2_K = 2048
 U1_I = 10
 U_I = 2
 U_J = 1
 U_K = 2
 VEC1 = True
 VEC2 = False
 cost_mean = 0.09651111333333336
 points = 71
 speedup_O3 = 1.6871718469451564
 technique = DLMT
Code stats:
        Number of loops: 	33
        Max loop nest depth: 	6
        Additions: 		670
        Multiplications: 	264
        Divisions: 		0
        Logical: 		0
        Reads: 			1480
        Writes: 		312
        Comparisons:		33
        Gotos: 			0
        
----- finish optimizations -----

----- begin removing annotations from output-----
----- finished removing annotations from output-----

----- begin writing the output file(s) -----
--> writing output to: _atax2.src1.c
----- finished writing the output file(s) -----

====== END ORIO ======
