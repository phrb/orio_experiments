
====== START ORIO ======

----- begin reading the source file: atax2.src1.c -----
----- finished reading the source file -----

----- begin parsing annotations -----
----- finished parsing annotations -----

----- begin optimizations -----
Search_Space         = 8.234e+13
Number_of_Parameters = 18
Numeric_Parameters   = 13
Binary_Parameters    = 05
['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
[[1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [False, True], [False, True], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 8, 32], [1, 8, 32], [1, 8, 32], [False, True], [False, True], [False, True]]

----- begin empirical tuning for problem size -----
 N = 10000
Parameters: {'ACOPY_x': [0, 2], 'ACOPY_y': [0, 2], 'RT_K': [0, 3], 'T1_I': [0, 7], 'T1_J': [0, 7], 'T1_K': [0, 7], 'U_K': [0, 30], 'U_J': [0, 30], 'U_I': [0, 30], 'U1_I': [0, 30], 'T2_K': [0, 7], 'T2_J': [0, 7], 'T2_I': [0, 7], 'VEC2': [0, 2], 'VEC1': [0, 2], 'RT_I': [0, 3], 'SCR': [0, 2], 'RT_J': [0, 3]}
Parameter Range Values: {'ACOPY_x': [False, True], 'ACOPY_y': [False, True], 'RT_K': [1, 8, 32], 'T1_I': [1, 16, 32, 64, 128, 256, 512], 'T1_J': [1, 16, 32, 64, 128, 256, 512], 'T1_K': [1, 16, 32, 64, 128, 256, 512], 'U_K': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_J': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U1_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'T2_K': [1, 64, 128, 256, 512, 1024, 2048], 'T2_J': [1, 64, 128, 256, 512, 1024, 2048], 'T2_I': [1, 64, 128, 256, 512, 1024, 2048], 'VEC2': [False, True], 'VEC1': [False, True], 'RT_I': [1, 8, 32], 'SCR': [False, True], 'RT_J': [1, 8, 32]}

----- begin random search -----
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Inverse Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Starting DOPT-anova
Step 0
Generating valid search space of size 4600 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Valid coordinates: 920
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Valid coordinates: 1840
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Valid coordinates: 2760
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Tested coordinates: 150000
Valid coordinates: 3680
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Valid coordinates: 4600
Valid/Tested configurations: 4600/188663
Generated Search Space:
NULL
Clean Info:
Removed Factors: character(0)

Removed Inverse Factors: [1] "ACOPY_x" "ACOPY_y" "SCR"     "VEC1"    "VEC2"   

New Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
New Inverse Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
New Fixed Factors: {}
Full Model:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Fixed Factors: {}
Computing D-Optimal Design
Computing D-Optimal Design with 46 experiments
Design Formula:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Starting "optFederov" run
Using Search Space:
NULL
Data Dimensions: [1] 4600   18

     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
11      2    0    3    3    3    0       0       0   17   0  15  10    1    1
65      5    0    3    0    2    2       0       1   26   0   0   0    0    0
525     3    5    0    6    3    3       1       1    5  22   0   6    1    0
560     3    0    2    2    3    6       0       1    5   6   0  18    0    0
775     0    0    6    1    0    5       1       0    1  21  15   0    0    0
789     0    0    6    6    2    0       0       0   21   0  22   2    0    2
814     0    4    4    6    5    6       1       0   28  29   0   0    1    0
888     1    1    1    2    0    4       0       1   27   0   0   0    0    1
890     0    3    0    3    6    3       0       1    7   0  18   0    2    0
990     2    4    6    0    3    6       0       0    9   0   7  16    2    0
1111    3    4    5    1    6    0       0       0   16  29   0  29    0    0
1222    1    1    0    0    2    1       1       0    0  29   0   0    1    1
1223    0    1    1    0    5    1       1       0   29   7   0   9    1    0
1227    2    3    5    5    6    0       0       1    2  26   0   8    0    0
1353    0    5    3    1    0    1       0       0    4   7   7   0    0    0
1516    6    4    4    5    2    2       1       0    0  28   5   0    1    0
1529    5    5    3    0    4    1       0       0   29  20  29   0    2    0
1573    3    6    1    1    6    1       1       1   24   0   5  29    0    2
1687    5    2    6    6    0    0       1       0   15   0  21  29    0    0
1897    2    6    2    5    0    1       0       1   28   2   0  28    1    0
2321    1    5    0    0    0    0       1       1   28   1   0   3    0    0
2548    1    2    2    2    4    4       0       1    0   0  29  29    1    0
2659    0    0    0    6    4    1       1       0   24   4  13   0    0    1
2917    6    2    5    6    1    4       0       1    7  29   1   0    1    0
2933    1    2    0    0    6    6       0       0    8  14   4   0    1    0
3109    2    2    0    2    2    3       1       1   17   0  28  25    0    0
3159    3    3    1    2    0    4       0       0   19  29   0   7    2    0
3200    4    1    1    3    2    3       0       0    0  29  27   0    0    2
3252    0    2    3    6    3    1       1       1    0  25  12   0    0    1
3253    5    0    1    6    5    0       1       1    8  20   0  27    2    0
3292    0    5    4    2    4    0       0       0    6   5   0  17    1    0
3345    5    2    6    3    6    0       1       1   22  17   0   2    0    0
3419    5    0    0    3    1    3       1       0    6   3   0  28    2    0
3529    6    6    3    0    0    6       1       1    2  22   0  26    1    1
3538    5    0    6    0    6    4       0       1   23   6   0  27    0    1
3784    4    2    6    2    3    0       1       0    0  18   1   0    1    0
3804    5    5    0    5    6    6       0       1   27   0  20   1    0    0
3919    0    2    0    0    6    0       0       1   12  12   0  26    0    0
3922    6    0    2    6    0    6       1       1   12   1  22   0    0    0
4203    4    2    0    6    4    2       0       0    0   0  15  12    0    0
4242    5    6    0    0    0    6       1       1   25  25  29   0    0    1
4294    2    4    0    4    5    0       0       1    5   7  14   0    1    1
4313    3    5    5    6    6    5       1       0    3   1   0   0    0    2
4394    6    2    6    0    3    0       1       1   17   5   8   0    0    2
4402    2    0    5    0    0    3       1       1    8   0  26  22    1    0
4599    1    2    1    6    1    6       0       0   29  29   0  26    0    2
     RT_K SCR VEC1 VEC2
11      0   1    1    1
65      1   1    1    1
525     1   1    1    0
560     2   0    0    0
775     0   1    0    0
789     0   0    0    0
814     0   1    0    1
888     0   0    0    0
890     0   0    0    0
990     0   0    1    1
1111    1   0    1    0
1222    0   0    1    0
1223    1   0    1    0
1227    2   0    0    1
1353    2   0    1    1
1516    1   0    0    1
1529    0   1    0    1
1573    0   1    0    1
1687    2   1    1    1
1897    0   0    1    1
2321    2   1    0    1
2548    0   1    1    0
2659    0   0    1    0
2917    0   1    1    0
2933    1   0    0    1
3109    2   0    0    1
3159    0   1    1    0
3200    0   0    1    1
3252    1   1    0    0
3253    0   0    1    1
3292    1   1    1    1
3345    0   0    1    1
3419    0   1    0    1
3529    0   0    0    0
3538    1   1    0    0
3784    1   0    0    0
3804    2   0    1    0
3919    2   1    0    1
3922    1   1    0    0
4203    0   1    0    1
4242    1   1    1    1
4294    0   1    0    0
4313    0   1    1    0
4394    0   0    1    0
4402    0   0    0    1
4599    0   0    1    1

D-Efficiency Approximation: [1] 0.418

Measuring design of size 46
Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Length of requested configs: 1
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	5
        Additions: 		1427
        Multiplications: 	666
        Divisions: 		0
        Logical: 		0
        Reads: 			2847
        Writes: 		502
        Comparisons:		20
        Gotos: 			0
        
 building the original code:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -DORIGINAL -o __orio_perftest_original.exe __orio_perftest1.c timer_cpu.o -lm
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest1.exe __orio_perftest1.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest1.exe  
Program Test Output: 
{'[2, 0, 3, 3, 3, 0, 0, 0, 17, 0, 15, 10, 1, 1, 0, 1, 1, 1]' : 0.113356}
{'[2, 0, 3, 3, 3, 0, 0, 0, 17, 0, 15, 10, 1, 1, 0, 1, 1, 1]' : 0.113411}
{'[2, 0, 3, 3, 3, 0, 0, 0, 17, 0, 15, 10, 1, 1, 0, 1, 1, 1]' : 0.11332}
{'[2, 0, 3, 3, 3, 0, 0, 0, 17, 0, 15, 10, 1, 1, 0, 1, 1, 1]' : 0.113295}
{'[2, 0, 3, 3, 3, 0, 0, 0, 17, 0, 15, 10, 1, 1, 0, 1, 1, 1]' : 0.109528}
{'[2, 0, 3, 3, 3, 0, 0, 0, 17, 0, 15, 10, 1, 1, 0, 1, 1, 1]' : 0.097734}
{'[2, 0, 3, 3, 3, 0, 0, 0, 17, 0, 15, 10, 1, 1, 0, 1, 1, 1]' : 0.102239}
{'[2, 0, 3, 3, 3, 0, 0, 0, 17, 0, 15, 10, 1, 1, 0, 1, 1, 1]' : 0.101556}
{'[2, 0, 3, 3, 3, 0, 0, 0, 17, 0, 15, 10, 1, 1, 0, 1, 1, 1]' : 0.097357}
{'[2, 0, 3, 3, 3, 0, 0, 0, 17, 0, 15, 10, 1, 1, 0, 1, 1, 1]' : 0.0973799}
{'[2, 0, 3, 3, 3, 0, 0, 0, 17, 0, 15, 10, 1, 1, 0, 1, 1, 1]' : 0.0975962}
{'[2, 0, 3, 3, 3, 0, 0, 0, 17, 0, 15, 10, 1, 1, 0, 1, 1, 1]' : 0.09971}
{'[2, 0, 3, 3, 3, 0, 0, 0, 17, 0, 15, 10, 1, 1, 0, 1, 1, 1]' : 0.100022}
{'[2, 0, 3, 3, 3, 0, 0, 0, 17, 0, 15, 10, 1, 1, 0, 1, 1, 1]' : 0.0975981}
{'[2, 0, 3, 3, 3, 0, 0, 0, 17, 0, 15, 10, 1, 1, 0, 1, 1, 1]' : 0.0974059}
{'[2, 0, 3, 3, 3, 0, 0, 0, 17, 0, 15, 10, 1, 1, 0, 1, 1, 1]' : 0.0974011}
{'[2, 0, 3, 3, 3, 0, 0, 0, 17, 0, 15, 10, 1, 1, 0, 1, 1, 1]' : 0.099709}
{'[2, 0, 3, 3, 3, 0, 0, 0, 17, 0, 15, 10, 1, 1, 0, 1, 1, 1]' : 0.0998781}
{'[2, 0, 3, 3, 3, 0, 0, 0, 17, 0, 15, 10, 1, 1, 0, 1, 1, 1]' : 0.0972381}
{'[2, 0, 3, 3, 3, 0, 0, 0, 17, 0, 15, 10, 1, 1, 0, 1, 1, 1]' : 0.0974879}
{'[2, 0, 3, 3, 3, 0, 0, 0, 17, 0, 15, 10, 1, 1, 0, 1, 1, 1]' : 0.0974541}
{'[2, 0, 3, 3, 3, 0, 0, 0, 17, 0, 15, 10, 1, 1, 0, 1, 1, 1]' : 0.0992391}
{'[2, 0, 3, 3, 3, 0, 0, 0, 17, 0, 15, 10, 1, 1, 0, 1, 1, 1]' : 0.0999639}
{'[2, 0, 3, 3, 3, 0, 0, 0, 17, 0, 15, 10, 1, 1, 0, 1, 1, 1]' : 0.0977099}
{'[2, 0, 3, 3, 3, 0, 0, 0, 17, 0, 15, 10, 1, 1, 0, 1, 1, 1]' : 0.0972822}
{'[2, 0, 3, 3, 3, 0, 0, 0, 17, 0, 15, 10, 1, 1, 0, 1, 1, 1]' : 0.0974469}
{'[2, 0, 3, 3, 3, 0, 0, 0, 17, 0, 15, 10, 1, 1, 0, 1, 1, 1]' : 0.0993149}
{'[2, 0, 3, 3, 3, 0, 0, 0, 17, 0, 15, 10, 1, 1, 0, 1, 1, 1]' : 0.100327}
{'[2, 0, 3, 3, 3, 0, 0, 0, 17, 0, 15, 10, 1, 1, 0, 1, 1, 1]' : 0.10387}
{'[2, 0, 3, 3, 3, 0, 0, 0, 17, 0, 15, 10, 1, 1, 0, 1, 1, 1]' : 0.099021}

out:
 ["{'[2, 0, 3, 3, 3, 0, 0, 0, 17, 0, 15, 10, 1, 1, 0, 1, 1, 1]' : 0.113356}", "{'[2, 0, 3, 3, 3, 0, 0, 0, 17, 0, 15, 10, 1, 1, 0, 1, 1, 1]' : 0.113411}", "{'[2, 0, 3, 3, 3, 0, 0, 0, 17, 0, 15, 10, 1, 1, 0, 1, 1, 1]' : 0.11332}", "{'[2, 0, 3, 3, 3, 0, 0, 0, 17, 0, 15, 10, 1, 1, 0, 1, 1, 1]' : 0.113295}", "{'[2, 0, 3, 3, 3, 0, 0, 0, 17, 0, 15, 10, 1, 1, 0, 1, 1, 1]' : 0.109528}", "{'[2, 0, 3, 3, 3, 0, 0, 0, 17, 0, 15, 10, 1, 1, 0, 1, 1, 1]' : 0.097734}", "{'[2, 0, 3, 3, 3, 0, 0, 0, 17, 0, 15, 10, 1, 1, 0, 1, 1, 1]' : 0.102239}", "{'[2, 0, 3, 3, 3, 0, 0, 0, 17, 0, 15, 10, 1, 1, 0, 1, 1, 1]' : 0.101556}", "{'[2, 0, 3, 3, 3, 0, 0, 0, 17, 0, 15, 10, 1, 1, 0, 1, 1, 1]' : 0.097357}", "{'[2, 0, 3, 3, 3, 0, 0, 0, 17, 0, 15, 10, 1, 1, 0, 1, 1, 1]' : 0.0973799}", "{'[2, 0, 3, 3, 3, 0, 0, 0, 17, 0, 15, 10, 1, 1, 0, 1, 1, 1]' : 0.0975962}", "{'[2, 0, 3, 3, 3, 0, 0, 0, 17, 0, 15, 10, 1, 1, 0, 1, 1, 1]' : 0.09971}", "{'[2, 0, 3, 3, 3, 0, 0, 0, 17, 0, 15, 10, 1, 1, 0, 1, 1, 1]' : 0.100022}", "{'[2, 0, 3, 3, 3, 0, 0, 0, 17, 0, 15, 10, 1, 1, 0, 1, 1, 1]' : 0.0975981}", "{'[2, 0, 3, 3, 3, 0, 0, 0, 17, 0, 15, 10, 1, 1, 0, 1, 1, 1]' : 0.0974059}", "{'[2, 0, 3, 3, 3, 0, 0, 0, 17, 0, 15, 10, 1, 1, 0, 1, 1, 1]' : 0.0974011}", "{'[2, 0, 3, 3, 3, 0, 0, 0, 17, 0, 15, 10, 1, 1, 0, 1, 1, 1]' : 0.099709}", "{'[2, 0, 3, 3, 3, 0, 0, 0, 17, 0, 15, 10, 1, 1, 0, 1, 1, 1]' : 0.0998781}", "{'[2, 0, 3, 3, 3, 0, 0, 0, 17, 0, 15, 10, 1, 1, 0, 1, 1, 1]' : 0.0972381}", "{'[2, 0, 3, 3, 3, 0, 0, 0, 17, 0, 15, 10, 1, 1, 0, 1, 1, 1]' : 0.0974879}", "{'[2, 0, 3, 3, 3, 0, 0, 0, 17, 0, 15, 10, 1, 1, 0, 1, 1, 1]' : 0.0974541}", "{'[2, 0, 3, 3, 3, 0, 0, 0, 17, 0, 15, 10, 1, 1, 0, 1, 1, 1]' : 0.0992391}", "{'[2, 0, 3, 3, 3, 0, 0, 0, 17, 0, 15, 10, 1, 1, 0, 1, 1, 1]' : 0.0999639}", "{'[2, 0, 3, 3, 3, 0, 0, 0, 17, 0, 15, 10, 1, 1, 0, 1, 1, 1]' : 0.0977099}", "{'[2, 0, 3, 3, 3, 0, 0, 0, 17, 0, 15, 10, 1, 1, 0, 1, 1, 1]' : 0.0972822}", "{'[2, 0, 3, 3, 3, 0, 0, 0, 17, 0, 15, 10, 1, 1, 0, 1, 1, 1]' : 0.0974469}", "{'[2, 0, 3, 3, 3, 0, 0, 0, 17, 0, 15, 10, 1, 1, 0, 1, 1, 1]' : 0.0993149}", "{'[2, 0, 3, 3, 3, 0, 0, 0, 17, 0, 15, 10, 1, 1, 0, 1, 1, 1]' : 0.100327}", "{'[2, 0, 3, 3, 3, 0, 0, 0, 17, 0, 15, 10, 1, 1, 0, 1, 1, 1]' : 0.10387}", "{'[2, 0, 3, 3, 3, 0, 0, 0, 17, 0, 15, 10, 1, 1, 0, 1, 1, 1]' : 0.099021}"]
returning from 'run': {'[2, 0, 3, 3, 3, 0, 0, 0, 17, 0, 15, 10, 1, 1, 0, 1, 1, 1]': ([0.113356, 0.113411, 0.11332, 0.113295, 0.109528, 0.097734, 0.102239, 0.101556, 0.097357, 0.0973799, 0.0975962, 0.09971, 0.100022, 0.0975981, 0.0974059, 0.0974011, 0.099709, 0.0998781, 0.0972381, 0.0974879, 0.0974541, 0.0992391, 0.0999639, 0.0977099, 0.0972822, 0.0974469, 0.0993149, 0.100327, 0.10387, 0.099021], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 3, 3, 3, 0, 0, 0, 17, 0, 15, 10, 1, 1, 0, 1, 1, 1]': ([0.113356, 0.113411, 0.11332, 0.113295, 0.109528, 0.097734, 0.102239, 0.101556, 0.097357, 0.0973799, 0.0975962, 0.09971, 0.100022, 0.0975981, 0.0974059, 0.0974011, 0.099709, 0.0998781, 0.0972381, 0.0974879, 0.0974541, 0.0992391, 0.0999639, 0.0977099, 0.0972822, 0.0974469, 0.0993149, 0.100327, 0.10387, 0.099021], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	5
        Additions: 		115
        Multiplications: 	18
        Divisions: 		0
        Logical: 		0
        Reads: 			280
        Writes: 		85
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest2.exe __orio_perftest2.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest2.exe  
Program Test Output: 
{'[5, 0, 3, 0, 2, 2, 0, 1, 26, 0, 0, 0, 0, 0, 1, 1, 1, 1]' : 0.453728}
{'[5, 0, 3, 0, 2, 2, 0, 1, 26, 0, 0, 0, 0, 0, 1, 1, 1, 1]' : 0.500883}
{'[5, 0, 3, 0, 2, 2, 0, 1, 26, 0, 0, 0, 0, 0, 1, 1, 1, 1]' : 0.455407}
{'[5, 0, 3, 0, 2, 2, 0, 1, 26, 0, 0, 0, 0, 0, 1, 1, 1, 1]' : 0.406159}
{'[5, 0, 3, 0, 2, 2, 0, 1, 26, 0, 0, 0, 0, 0, 1, 1, 1, 1]' : 0.384699}
{'[5, 0, 3, 0, 2, 2, 0, 1, 26, 0, 0, 0, 0, 0, 1, 1, 1, 1]' : 0.385144}
{'[5, 0, 3, 0, 2, 2, 0, 1, 26, 0, 0, 0, 0, 0, 1, 1, 1, 1]' : 0.384426}
{'[5, 0, 3, 0, 2, 2, 0, 1, 26, 0, 0, 0, 0, 0, 1, 1, 1, 1]' : 0.384294}
{'[5, 0, 3, 0, 2, 2, 0, 1, 26, 0, 0, 0, 0, 0, 1, 1, 1, 1]' : 0.384354}
{'[5, 0, 3, 0, 2, 2, 0, 1, 26, 0, 0, 0, 0, 0, 1, 1, 1, 1]' : 0.38548}
{'[5, 0, 3, 0, 2, 2, 0, 1, 26, 0, 0, 0, 0, 0, 1, 1, 1, 1]' : 0.384842}
{'[5, 0, 3, 0, 2, 2, 0, 1, 26, 0, 0, 0, 0, 0, 1, 1, 1, 1]' : 0.384707}
{'[5, 0, 3, 0, 2, 2, 0, 1, 26, 0, 0, 0, 0, 0, 1, 1, 1, 1]' : 0.384468}
{'[5, 0, 3, 0, 2, 2, 0, 1, 26, 0, 0, 0, 0, 0, 1, 1, 1, 1]' : 0.385167}
{'[5, 0, 3, 0, 2, 2, 0, 1, 26, 0, 0, 0, 0, 0, 1, 1, 1, 1]' : 0.384823}
{'[5, 0, 3, 0, 2, 2, 0, 1, 26, 0, 0, 0, 0, 0, 1, 1, 1, 1]' : 0.38472}
{'[5, 0, 3, 0, 2, 2, 0, 1, 26, 0, 0, 0, 0, 0, 1, 1, 1, 1]' : 0.384389}
{'[5, 0, 3, 0, 2, 2, 0, 1, 26, 0, 0, 0, 0, 0, 1, 1, 1, 1]' : 0.385418}
{'[5, 0, 3, 0, 2, 2, 0, 1, 26, 0, 0, 0, 0, 0, 1, 1, 1, 1]' : 0.384631}
{'[5, 0, 3, 0, 2, 2, 0, 1, 26, 0, 0, 0, 0, 0, 1, 1, 1, 1]' : 0.384389}
{'[5, 0, 3, 0, 2, 2, 0, 1, 26, 0, 0, 0, 0, 0, 1, 1, 1, 1]' : 0.384364}
{'[5, 0, 3, 0, 2, 2, 0, 1, 26, 0, 0, 0, 0, 0, 1, 1, 1, 1]' : 0.385359}
{'[5, 0, 3, 0, 2, 2, 0, 1, 26, 0, 0, 0, 0, 0, 1, 1, 1, 1]' : 0.3843}
{'[5, 0, 3, 0, 2, 2, 0, 1, 26, 0, 0, 0, 0, 0, 1, 1, 1, 1]' : 0.384154}
{'[5, 0, 3, 0, 2, 2, 0, 1, 26, 0, 0, 0, 0, 0, 1, 1, 1, 1]' : 0.385506}
{'[5, 0, 3, 0, 2, 2, 0, 1, 26, 0, 0, 0, 0, 0, 1, 1, 1, 1]' : 0.384719}
{'[5, 0, 3, 0, 2, 2, 0, 1, 26, 0, 0, 0, 0, 0, 1, 1, 1, 1]' : 0.38473}
{'[5, 0, 3, 0, 2, 2, 0, 1, 26, 0, 0, 0, 0, 0, 1, 1, 1, 1]' : 0.384673}
{'[5, 0, 3, 0, 2, 2, 0, 1, 26, 0, 0, 0, 0, 0, 1, 1, 1, 1]' : 0.384833}
{'[5, 0, 3, 0, 2, 2, 0, 1, 26, 0, 0, 0, 0, 0, 1, 1, 1, 1]' : 0.384419}

out:
 ["{'[5, 0, 3, 0, 2, 2, 0, 1, 26, 0, 0, 0, 0, 0, 1, 1, 1, 1]' : 0.453728}", "{'[5, 0, 3, 0, 2, 2, 0, 1, 26, 0, 0, 0, 0, 0, 1, 1, 1, 1]' : 0.500883}", "{'[5, 0, 3, 0, 2, 2, 0, 1, 26, 0, 0, 0, 0, 0, 1, 1, 1, 1]' : 0.455407}", "{'[5, 0, 3, 0, 2, 2, 0, 1, 26, 0, 0, 0, 0, 0, 1, 1, 1, 1]' : 0.406159}", "{'[5, 0, 3, 0, 2, 2, 0, 1, 26, 0, 0, 0, 0, 0, 1, 1, 1, 1]' : 0.384699}", "{'[5, 0, 3, 0, 2, 2, 0, 1, 26, 0, 0, 0, 0, 0, 1, 1, 1, 1]' : 0.385144}", "{'[5, 0, 3, 0, 2, 2, 0, 1, 26, 0, 0, 0, 0, 0, 1, 1, 1, 1]' : 0.384426}", "{'[5, 0, 3, 0, 2, 2, 0, 1, 26, 0, 0, 0, 0, 0, 1, 1, 1, 1]' : 0.384294}", "{'[5, 0, 3, 0, 2, 2, 0, 1, 26, 0, 0, 0, 0, 0, 1, 1, 1, 1]' : 0.384354}", "{'[5, 0, 3, 0, 2, 2, 0, 1, 26, 0, 0, 0, 0, 0, 1, 1, 1, 1]' : 0.38548}", "{'[5, 0, 3, 0, 2, 2, 0, 1, 26, 0, 0, 0, 0, 0, 1, 1, 1, 1]' : 0.384842}", "{'[5, 0, 3, 0, 2, 2, 0, 1, 26, 0, 0, 0, 0, 0, 1, 1, 1, 1]' : 0.384707}", "{'[5, 0, 3, 0, 2, 2, 0, 1, 26, 0, 0, 0, 0, 0, 1, 1, 1, 1]' : 0.384468}", "{'[5, 0, 3, 0, 2, 2, 0, 1, 26, 0, 0, 0, 0, 0, 1, 1, 1, 1]' : 0.385167}", "{'[5, 0, 3, 0, 2, 2, 0, 1, 26, 0, 0, 0, 0, 0, 1, 1, 1, 1]' : 0.384823}", "{'[5, 0, 3, 0, 2, 2, 0, 1, 26, 0, 0, 0, 0, 0, 1, 1, 1, 1]' : 0.38472}", "{'[5, 0, 3, 0, 2, 2, 0, 1, 26, 0, 0, 0, 0, 0, 1, 1, 1, 1]' : 0.384389}", "{'[5, 0, 3, 0, 2, 2, 0, 1, 26, 0, 0, 0, 0, 0, 1, 1, 1, 1]' : 0.385418}", "{'[5, 0, 3, 0, 2, 2, 0, 1, 26, 0, 0, 0, 0, 0, 1, 1, 1, 1]' : 0.384631}", "{'[5, 0, 3, 0, 2, 2, 0, 1, 26, 0, 0, 0, 0, 0, 1, 1, 1, 1]' : 0.384389}", "{'[5, 0, 3, 0, 2, 2, 0, 1, 26, 0, 0, 0, 0, 0, 1, 1, 1, 1]' : 0.384364}", "{'[5, 0, 3, 0, 2, 2, 0, 1, 26, 0, 0, 0, 0, 0, 1, 1, 1, 1]' : 0.385359}", "{'[5, 0, 3, 0, 2, 2, 0, 1, 26, 0, 0, 0, 0, 0, 1, 1, 1, 1]' : 0.3843}", "{'[5, 0, 3, 0, 2, 2, 0, 1, 26, 0, 0, 0, 0, 0, 1, 1, 1, 1]' : 0.384154}", "{'[5, 0, 3, 0, 2, 2, 0, 1, 26, 0, 0, 0, 0, 0, 1, 1, 1, 1]' : 0.385506}", "{'[5, 0, 3, 0, 2, 2, 0, 1, 26, 0, 0, 0, 0, 0, 1, 1, 1, 1]' : 0.384719}", "{'[5, 0, 3, 0, 2, 2, 0, 1, 26, 0, 0, 0, 0, 0, 1, 1, 1, 1]' : 0.38473}", "{'[5, 0, 3, 0, 2, 2, 0, 1, 26, 0, 0, 0, 0, 0, 1, 1, 1, 1]' : 0.384673}", "{'[5, 0, 3, 0, 2, 2, 0, 1, 26, 0, 0, 0, 0, 0, 1, 1, 1, 1]' : 0.384833}", "{'[5, 0, 3, 0, 2, 2, 0, 1, 26, 0, 0, 0, 0, 0, 1, 1, 1, 1]' : 0.384419}"]
returning from 'run': {'[5, 0, 3, 0, 2, 2, 0, 1, 26, 0, 0, 0, 0, 0, 1, 1, 1, 1]': ([0.453728, 0.500883, 0.455407, 0.406159, 0.384699, 0.385144, 0.384426, 0.384294, 0.384354, 0.38548, 0.384842, 0.384707, 0.384468, 0.385167, 0.384823, 0.38472, 0.384389, 0.385418, 0.384631, 0.384389, 0.384364, 0.385359, 0.3843, 0.384154, 0.385506, 0.384719, 0.38473, 0.384673, 0.384833, 0.384419], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 0, 3, 0, 2, 2, 0, 1, 26, 0, 0, 0, 0, 0, 1, 1, 1, 1]': ([0.453728, 0.500883, 0.455407, 0.406159, 0.384699, 0.385144, 0.384426, 0.384294, 0.384354, 0.38548, 0.384842, 0.384707, 0.384468, 0.385167, 0.384823, 0.38472, 0.384389, 0.385418, 0.384631, 0.384389, 0.384364, 0.385359, 0.3843, 0.384154, 0.385506, 0.384719, 0.38473, 0.384673, 0.384833, 0.384419], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = jjj
Code stats:
        Number of loops: 	94
        Max loop nest depth: 	5
        Additions: 		1582
        Multiplications: 	576
        Divisions: 		0
        Logical: 		0
        Reads: 			3476
        Writes: 		700
        Comparisons:		94
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest3.exe __orio_perftest3.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest3.exe  
Program Test Output: 
{'[3, 5, 0, 6, 3, 3, 1, 1, 5, 22, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.107563}
{'[3, 5, 0, 6, 3, 3, 1, 1, 5, 22, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.107424}
{'[3, 5, 0, 6, 3, 3, 1, 1, 5, 22, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.107361}
{'[3, 5, 0, 6, 3, 3, 1, 1, 5, 22, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.107498}
{'[3, 5, 0, 6, 3, 3, 1, 1, 5, 22, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.107232}
{'[3, 5, 0, 6, 3, 3, 1, 1, 5, 22, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.107528}
{'[3, 5, 0, 6, 3, 3, 1, 1, 5, 22, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.107523}
{'[3, 5, 0, 6, 3, 3, 1, 1, 5, 22, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.108164}
{'[3, 5, 0, 6, 3, 3, 1, 1, 5, 22, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.10753}
{'[3, 5, 0, 6, 3, 3, 1, 1, 5, 22, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.107396}
{'[3, 5, 0, 6, 3, 3, 1, 1, 5, 22, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.107363}
{'[3, 5, 0, 6, 3, 3, 1, 1, 5, 22, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.107386}
{'[3, 5, 0, 6, 3, 3, 1, 1, 5, 22, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.107617}
{'[3, 5, 0, 6, 3, 3, 1, 1, 5, 22, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.107416}
{'[3, 5, 0, 6, 3, 3, 1, 1, 5, 22, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.107327}
{'[3, 5, 0, 6, 3, 3, 1, 1, 5, 22, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.107549}
{'[3, 5, 0, 6, 3, 3, 1, 1, 5, 22, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.107762}
{'[3, 5, 0, 6, 3, 3, 1, 1, 5, 22, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.107656}
{'[3, 5, 0, 6, 3, 3, 1, 1, 5, 22, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.107354}
{'[3, 5, 0, 6, 3, 3, 1, 1, 5, 22, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.107397}
{'[3, 5, 0, 6, 3, 3, 1, 1, 5, 22, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.107507}
{'[3, 5, 0, 6, 3, 3, 1, 1, 5, 22, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.107459}
{'[3, 5, 0, 6, 3, 3, 1, 1, 5, 22, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.107369}
{'[3, 5, 0, 6, 3, 3, 1, 1, 5, 22, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.107428}
{'[3, 5, 0, 6, 3, 3, 1, 1, 5, 22, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.1074}
{'[3, 5, 0, 6, 3, 3, 1, 1, 5, 22, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.107706}
{'[3, 5, 0, 6, 3, 3, 1, 1, 5, 22, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.108007}
{'[3, 5, 0, 6, 3, 3, 1, 1, 5, 22, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.107298}
{'[3, 5, 0, 6, 3, 3, 1, 1, 5, 22, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.107384}
{'[3, 5, 0, 6, 3, 3, 1, 1, 5, 22, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.107363}

out:
 ["{'[3, 5, 0, 6, 3, 3, 1, 1, 5, 22, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.107563}", "{'[3, 5, 0, 6, 3, 3, 1, 1, 5, 22, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.107424}", "{'[3, 5, 0, 6, 3, 3, 1, 1, 5, 22, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.107361}", "{'[3, 5, 0, 6, 3, 3, 1, 1, 5, 22, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.107498}", "{'[3, 5, 0, 6, 3, 3, 1, 1, 5, 22, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.107232}", "{'[3, 5, 0, 6, 3, 3, 1, 1, 5, 22, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.107528}", "{'[3, 5, 0, 6, 3, 3, 1, 1, 5, 22, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.107523}", "{'[3, 5, 0, 6, 3, 3, 1, 1, 5, 22, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.108164}", "{'[3, 5, 0, 6, 3, 3, 1, 1, 5, 22, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.10753}", "{'[3, 5, 0, 6, 3, 3, 1, 1, 5, 22, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.107396}", "{'[3, 5, 0, 6, 3, 3, 1, 1, 5, 22, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.107363}", "{'[3, 5, 0, 6, 3, 3, 1, 1, 5, 22, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.107386}", "{'[3, 5, 0, 6, 3, 3, 1, 1, 5, 22, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.107617}", "{'[3, 5, 0, 6, 3, 3, 1, 1, 5, 22, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.107416}", "{'[3, 5, 0, 6, 3, 3, 1, 1, 5, 22, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.107327}", "{'[3, 5, 0, 6, 3, 3, 1, 1, 5, 22, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.107549}", "{'[3, 5, 0, 6, 3, 3, 1, 1, 5, 22, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.107762}", "{'[3, 5, 0, 6, 3, 3, 1, 1, 5, 22, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.107656}", "{'[3, 5, 0, 6, 3, 3, 1, 1, 5, 22, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.107354}", "{'[3, 5, 0, 6, 3, 3, 1, 1, 5, 22, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.107397}", "{'[3, 5, 0, 6, 3, 3, 1, 1, 5, 22, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.107507}", "{'[3, 5, 0, 6, 3, 3, 1, 1, 5, 22, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.107459}", "{'[3, 5, 0, 6, 3, 3, 1, 1, 5, 22, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.107369}", "{'[3, 5, 0, 6, 3, 3, 1, 1, 5, 22, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.107428}", "{'[3, 5, 0, 6, 3, 3, 1, 1, 5, 22, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.1074}", "{'[3, 5, 0, 6, 3, 3, 1, 1, 5, 22, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.107706}", "{'[3, 5, 0, 6, 3, 3, 1, 1, 5, 22, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.108007}", "{'[3, 5, 0, 6, 3, 3, 1, 1, 5, 22, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.107298}", "{'[3, 5, 0, 6, 3, 3, 1, 1, 5, 22, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.107384}", "{'[3, 5, 0, 6, 3, 3, 1, 1, 5, 22, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.107363}"]
returning from 'run': {'[3, 5, 0, 6, 3, 3, 1, 1, 5, 22, 0, 6, 1, 0, 1, 1, 1, 0]': ([0.107563, 0.107424, 0.107361, 0.107498, 0.107232, 0.107528, 0.107523, 0.108164, 0.10753, 0.107396, 0.107363, 0.107386, 0.107617, 0.107416, 0.107327, 0.107549, 0.107762, 0.107656, 0.107354, 0.107397, 0.107507, 0.107459, 0.107369, 0.107428, 0.1074, 0.107706, 0.108007, 0.107298, 0.107384, 0.107363], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 5, 0, 6, 3, 3, 1, 1, 5, 22, 0, 6, 1, 0, 1, 1, 1, 0]': ([0.107563, 0.107424, 0.107361, 0.107498, 0.107232, 0.107528, 0.107523, 0.108164, 0.10753, 0.107396, 0.107363, 0.107386, 0.107617, 0.107416, 0.107327, 0.107549, 0.107762, 0.107656, 0.107354, 0.107397, 0.107507, 0.107459, 0.107369, 0.107428, 0.1074, 0.107706, 0.108007, 0.107298, 0.107384, 0.107363], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	32
        Max loop nest depth: 	6
        Additions: 		2317
        Multiplications: 	528
        Divisions: 		0
        Logical: 		0
        Reads: 			3478
        Writes: 		359
        Comparisons:		32
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest4.exe __orio_perftest4.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest4.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest4.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest4.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest4.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	57
        Max loop nest depth: 	5
        Additions: 		2141
        Multiplications: 	828
        Divisions: 		0
        Logical: 		0
        Reads: 			3817
        Writes: 		604
        Comparisons:		57
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest5.exe __orio_perftest5.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest5.exe  
Program Test Output: 
{'[0, 0, 6, 1, 0, 5, 1, 0, 1, 21, 15, 0, 0, 0, 0, 1, 0, 0]' : 0.202141}
{'[0, 0, 6, 1, 0, 5, 1, 0, 1, 21, 15, 0, 0, 0, 0, 1, 0, 0]' : 0.199081}
{'[0, 0, 6, 1, 0, 5, 1, 0, 1, 21, 15, 0, 0, 0, 0, 1, 0, 0]' : 0.185191}
{'[0, 0, 6, 1, 0, 5, 1, 0, 1, 21, 15, 0, 0, 0, 0, 1, 0, 0]' : 0.17557}
{'[0, 0, 6, 1, 0, 5, 1, 0, 1, 21, 15, 0, 0, 0, 0, 1, 0, 0]' : 0.178424}
{'[0, 0, 6, 1, 0, 5, 1, 0, 1, 21, 15, 0, 0, 0, 0, 1, 0, 0]' : 0.17386}
{'[0, 0, 6, 1, 0, 5, 1, 0, 1, 21, 15, 0, 0, 0, 0, 1, 0, 0]' : 0.17318}
{'[0, 0, 6, 1, 0, 5, 1, 0, 1, 21, 15, 0, 0, 0, 0, 1, 0, 0]' : 0.173437}
{'[0, 0, 6, 1, 0, 5, 1, 0, 1, 21, 15, 0, 0, 0, 0, 1, 0, 0]' : 0.173232}
{'[0, 0, 6, 1, 0, 5, 1, 0, 1, 21, 15, 0, 0, 0, 0, 1, 0, 0]' : 0.17317}
{'[0, 0, 6, 1, 0, 5, 1, 0, 1, 21, 15, 0, 0, 0, 0, 1, 0, 0]' : 0.174185}
{'[0, 0, 6, 1, 0, 5, 1, 0, 1, 21, 15, 0, 0, 0, 0, 1, 0, 0]' : 0.173227}
{'[0, 0, 6, 1, 0, 5, 1, 0, 1, 21, 15, 0, 0, 0, 0, 1, 0, 0]' : 0.17324}
{'[0, 0, 6, 1, 0, 5, 1, 0, 1, 21, 15, 0, 0, 0, 0, 1, 0, 0]' : 0.173387}
{'[0, 0, 6, 1, 0, 5, 1, 0, 1, 21, 15, 0, 0, 0, 0, 1, 0, 0]' : 0.173267}
{'[0, 0, 6, 1, 0, 5, 1, 0, 1, 21, 15, 0, 0, 0, 0, 1, 0, 0]' : 0.173216}
{'[0, 0, 6, 1, 0, 5, 1, 0, 1, 21, 15, 0, 0, 0, 0, 1, 0, 0]' : 0.174912}
{'[0, 0, 6, 1, 0, 5, 1, 0, 1, 21, 15, 0, 0, 0, 0, 1, 0, 0]' : 0.173185}
{'[0, 0, 6, 1, 0, 5, 1, 0, 1, 21, 15, 0, 0, 0, 0, 1, 0, 0]' : 0.173085}
{'[0, 0, 6, 1, 0, 5, 1, 0, 1, 21, 15, 0, 0, 0, 0, 1, 0, 0]' : 0.173218}
{'[0, 0, 6, 1, 0, 5, 1, 0, 1, 21, 15, 0, 0, 0, 0, 1, 0, 0]' : 0.17356}
{'[0, 0, 6, 1, 0, 5, 1, 0, 1, 21, 15, 0, 0, 0, 0, 1, 0, 0]' : 0.173261}
{'[0, 0, 6, 1, 0, 5, 1, 0, 1, 21, 15, 0, 0, 0, 0, 1, 0, 0]' : 0.175501}
{'[0, 0, 6, 1, 0, 5, 1, 0, 1, 21, 15, 0, 0, 0, 0, 1, 0, 0]' : 0.173783}
{'[0, 0, 6, 1, 0, 5, 1, 0, 1, 21, 15, 0, 0, 0, 0, 1, 0, 0]' : 0.173292}
{'[0, 0, 6, 1, 0, 5, 1, 0, 1, 21, 15, 0, 0, 0, 0, 1, 0, 0]' : 0.173121}
{'[0, 0, 6, 1, 0, 5, 1, 0, 1, 21, 15, 0, 0, 0, 0, 1, 0, 0]' : 0.173311}
{'[0, 0, 6, 1, 0, 5, 1, 0, 1, 21, 15, 0, 0, 0, 0, 1, 0, 0]' : 0.173868}
{'[0, 0, 6, 1, 0, 5, 1, 0, 1, 21, 15, 0, 0, 0, 0, 1, 0, 0]' : 0.175684}
{'[0, 0, 6, 1, 0, 5, 1, 0, 1, 21, 15, 0, 0, 0, 0, 1, 0, 0]' : 0.173456}

out:
 ["{'[0, 0, 6, 1, 0, 5, 1, 0, 1, 21, 15, 0, 0, 0, 0, 1, 0, 0]' : 0.202141}", "{'[0, 0, 6, 1, 0, 5, 1, 0, 1, 21, 15, 0, 0, 0, 0, 1, 0, 0]' : 0.199081}", "{'[0, 0, 6, 1, 0, 5, 1, 0, 1, 21, 15, 0, 0, 0, 0, 1, 0, 0]' : 0.185191}", "{'[0, 0, 6, 1, 0, 5, 1, 0, 1, 21, 15, 0, 0, 0, 0, 1, 0, 0]' : 0.17557}", "{'[0, 0, 6, 1, 0, 5, 1, 0, 1, 21, 15, 0, 0, 0, 0, 1, 0, 0]' : 0.178424}", "{'[0, 0, 6, 1, 0, 5, 1, 0, 1, 21, 15, 0, 0, 0, 0, 1, 0, 0]' : 0.17386}", "{'[0, 0, 6, 1, 0, 5, 1, 0, 1, 21, 15, 0, 0, 0, 0, 1, 0, 0]' : 0.17318}", "{'[0, 0, 6, 1, 0, 5, 1, 0, 1, 21, 15, 0, 0, 0, 0, 1, 0, 0]' : 0.173437}", "{'[0, 0, 6, 1, 0, 5, 1, 0, 1, 21, 15, 0, 0, 0, 0, 1, 0, 0]' : 0.173232}", "{'[0, 0, 6, 1, 0, 5, 1, 0, 1, 21, 15, 0, 0, 0, 0, 1, 0, 0]' : 0.17317}", "{'[0, 0, 6, 1, 0, 5, 1, 0, 1, 21, 15, 0, 0, 0, 0, 1, 0, 0]' : 0.174185}", "{'[0, 0, 6, 1, 0, 5, 1, 0, 1, 21, 15, 0, 0, 0, 0, 1, 0, 0]' : 0.173227}", "{'[0, 0, 6, 1, 0, 5, 1, 0, 1, 21, 15, 0, 0, 0, 0, 1, 0, 0]' : 0.17324}", "{'[0, 0, 6, 1, 0, 5, 1, 0, 1, 21, 15, 0, 0, 0, 0, 1, 0, 0]' : 0.173387}", "{'[0, 0, 6, 1, 0, 5, 1, 0, 1, 21, 15, 0, 0, 0, 0, 1, 0, 0]' : 0.173267}", "{'[0, 0, 6, 1, 0, 5, 1, 0, 1, 21, 15, 0, 0, 0, 0, 1, 0, 0]' : 0.173216}", "{'[0, 0, 6, 1, 0, 5, 1, 0, 1, 21, 15, 0, 0, 0, 0, 1, 0, 0]' : 0.174912}", "{'[0, 0, 6, 1, 0, 5, 1, 0, 1, 21, 15, 0, 0, 0, 0, 1, 0, 0]' : 0.173185}", "{'[0, 0, 6, 1, 0, 5, 1, 0, 1, 21, 15, 0, 0, 0, 0, 1, 0, 0]' : 0.173085}", "{'[0, 0, 6, 1, 0, 5, 1, 0, 1, 21, 15, 0, 0, 0, 0, 1, 0, 0]' : 0.173218}", "{'[0, 0, 6, 1, 0, 5, 1, 0, 1, 21, 15, 0, 0, 0, 0, 1, 0, 0]' : 0.17356}", "{'[0, 0, 6, 1, 0, 5, 1, 0, 1, 21, 15, 0, 0, 0, 0, 1, 0, 0]' : 0.173261}", "{'[0, 0, 6, 1, 0, 5, 1, 0, 1, 21, 15, 0, 0, 0, 0, 1, 0, 0]' : 0.175501}", "{'[0, 0, 6, 1, 0, 5, 1, 0, 1, 21, 15, 0, 0, 0, 0, 1, 0, 0]' : 0.173783}", "{'[0, 0, 6, 1, 0, 5, 1, 0, 1, 21, 15, 0, 0, 0, 0, 1, 0, 0]' : 0.173292}", "{'[0, 0, 6, 1, 0, 5, 1, 0, 1, 21, 15, 0, 0, 0, 0, 1, 0, 0]' : 0.173121}", "{'[0, 0, 6, 1, 0, 5, 1, 0, 1, 21, 15, 0, 0, 0, 0, 1, 0, 0]' : 0.173311}", "{'[0, 0, 6, 1, 0, 5, 1, 0, 1, 21, 15, 0, 0, 0, 0, 1, 0, 0]' : 0.173868}", "{'[0, 0, 6, 1, 0, 5, 1, 0, 1, 21, 15, 0, 0, 0, 0, 1, 0, 0]' : 0.175684}", "{'[0, 0, 6, 1, 0, 5, 1, 0, 1, 21, 15, 0, 0, 0, 0, 1, 0, 0]' : 0.173456}"]
returning from 'run': {'[0, 0, 6, 1, 0, 5, 1, 0, 1, 21, 15, 0, 0, 0, 0, 1, 0, 0]': ([0.202141, 0.199081, 0.185191, 0.17557, 0.178424, 0.17386, 0.17318, 0.173437, 0.173232, 0.17317, 0.174185, 0.173227, 0.17324, 0.173387, 0.173267, 0.173216, 0.174912, 0.173185, 0.173085, 0.173218, 0.17356, 0.173261, 0.175501, 0.173783, 0.173292, 0.173121, 0.173311, 0.173868, 0.175684, 0.173456], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 6, 1, 0, 5, 1, 0, 1, 21, 15, 0, 0, 0, 0, 1, 0, 0]': ([0.202141, 0.199081, 0.185191, 0.17557, 0.178424, 0.17386, 0.17318, 0.173437, 0.173232, 0.17317, 0.174185, 0.173227, 0.17324, 0.173387, 0.173267, 0.173216, 0.174912, 0.173185, 0.173085, 0.173218, 0.17356, 0.173261, 0.175501, 0.173783, 0.173292, 0.173121, 0.173311, 0.173868, 0.175684, 0.173456], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		305
        Multiplications: 	120
        Divisions: 		0
        Logical: 		0
        Reads: 			725
        Writes: 		106
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest6.exe __orio_perftest6.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest6.exe  
Program Test Output: 
{'[0, 0, 6, 6, 2, 0, 0, 0, 21, 0, 22, 2, 0, 2, 0, 0, 0, 0]' : 0.18176}
{'[0, 0, 6, 6, 2, 0, 0, 0, 21, 0, 22, 2, 0, 2, 0, 0, 0, 0]' : 0.180146}
{'[0, 0, 6, 6, 2, 0, 0, 0, 21, 0, 22, 2, 0, 2, 0, 0, 0, 0]' : 0.179727}
{'[0, 0, 6, 6, 2, 0, 0, 0, 21, 0, 22, 2, 0, 2, 0, 0, 0, 0]' : 0.179731}
{'[0, 0, 6, 6, 2, 0, 0, 0, 21, 0, 22, 2, 0, 2, 0, 0, 0, 0]' : 0.179713}
{'[0, 0, 6, 6, 2, 0, 0, 0, 21, 0, 22, 2, 0, 2, 0, 0, 0, 0]' : 0.179738}
{'[0, 0, 6, 6, 2, 0, 0, 0, 21, 0, 22, 2, 0, 2, 0, 0, 0, 0]' : 0.183697}
{'[0, 0, 6, 6, 2, 0, 0, 0, 21, 0, 22, 2, 0, 2, 0, 0, 0, 0]' : 0.185031}
{'[0, 0, 6, 6, 2, 0, 0, 0, 21, 0, 22, 2, 0, 2, 0, 0, 0, 0]' : 0.184995}
{'[0, 0, 6, 6, 2, 0, 0, 0, 21, 0, 22, 2, 0, 2, 0, 0, 0, 0]' : 0.184056}
{'[0, 0, 6, 6, 2, 0, 0, 0, 21, 0, 22, 2, 0, 2, 0, 0, 0, 0]' : 0.179752}
{'[0, 0, 6, 6, 2, 0, 0, 0, 21, 0, 22, 2, 0, 2, 0, 0, 0, 0]' : 0.183243}
{'[0, 0, 6, 6, 2, 0, 0, 0, 21, 0, 22, 2, 0, 2, 0, 0, 0, 0]' : 0.185181}
{'[0, 0, 6, 6, 2, 0, 0, 0, 21, 0, 22, 2, 0, 2, 0, 0, 0, 0]' : 0.184973}
{'[0, 0, 6, 6, 2, 0, 0, 0, 21, 0, 22, 2, 0, 2, 0, 0, 0, 0]' : 0.184412}
{'[0, 0, 6, 6, 2, 0, 0, 0, 21, 0, 22, 2, 0, 2, 0, 0, 0, 0]' : 0.179577}
{'[0, 0, 6, 6, 2, 0, 0, 0, 21, 0, 22, 2, 0, 2, 0, 0, 0, 0]' : 0.179716}
{'[0, 0, 6, 6, 2, 0, 0, 0, 21, 0, 22, 2, 0, 2, 0, 0, 0, 0]' : 0.179663}
{'[0, 0, 6, 6, 2, 0, 0, 0, 21, 0, 22, 2, 0, 2, 0, 0, 0, 0]' : 0.179624}
{'[0, 0, 6, 6, 2, 0, 0, 0, 21, 0, 22, 2, 0, 2, 0, 0, 0, 0]' : 0.181948}
{'[0, 0, 6, 6, 2, 0, 0, 0, 21, 0, 22, 2, 0, 2, 0, 0, 0, 0]' : 0.184417}
{'[0, 0, 6, 6, 2, 0, 0, 0, 21, 0, 22, 2, 0, 2, 0, 0, 0, 0]' : 0.179626}
{'[0, 0, 6, 6, 2, 0, 0, 0, 21, 0, 22, 2, 0, 2, 0, 0, 0, 0]' : 0.183222}
{'[0, 0, 6, 6, 2, 0, 0, 0, 21, 0, 22, 2, 0, 2, 0, 0, 0, 0]' : 0.185285}
{'[0, 0, 6, 6, 2, 0, 0, 0, 21, 0, 22, 2, 0, 2, 0, 0, 0, 0]' : 0.185025}
{'[0, 0, 6, 6, 2, 0, 0, 0, 21, 0, 22, 2, 0, 2, 0, 0, 0, 0]' : 0.18306}
{'[0, 0, 6, 6, 2, 0, 0, 0, 21, 0, 22, 2, 0, 2, 0, 0, 0, 0]' : 0.179918}
{'[0, 0, 6, 6, 2, 0, 0, 0, 21, 0, 22, 2, 0, 2, 0, 0, 0, 0]' : 0.180998}
{'[0, 0, 6, 6, 2, 0, 0, 0, 21, 0, 22, 2, 0, 2, 0, 0, 0, 0]' : 0.185001}
{'[0, 0, 6, 6, 2, 0, 0, 0, 21, 0, 22, 2, 0, 2, 0, 0, 0, 0]' : 0.185072}

out:
 ["{'[0, 0, 6, 6, 2, 0, 0, 0, 21, 0, 22, 2, 0, 2, 0, 0, 0, 0]' : 0.18176}", "{'[0, 0, 6, 6, 2, 0, 0, 0, 21, 0, 22, 2, 0, 2, 0, 0, 0, 0]' : 0.180146}", "{'[0, 0, 6, 6, 2, 0, 0, 0, 21, 0, 22, 2, 0, 2, 0, 0, 0, 0]' : 0.179727}", "{'[0, 0, 6, 6, 2, 0, 0, 0, 21, 0, 22, 2, 0, 2, 0, 0, 0, 0]' : 0.179731}", "{'[0, 0, 6, 6, 2, 0, 0, 0, 21, 0, 22, 2, 0, 2, 0, 0, 0, 0]' : 0.179713}", "{'[0, 0, 6, 6, 2, 0, 0, 0, 21, 0, 22, 2, 0, 2, 0, 0, 0, 0]' : 0.179738}", "{'[0, 0, 6, 6, 2, 0, 0, 0, 21, 0, 22, 2, 0, 2, 0, 0, 0, 0]' : 0.183697}", "{'[0, 0, 6, 6, 2, 0, 0, 0, 21, 0, 22, 2, 0, 2, 0, 0, 0, 0]' : 0.185031}", "{'[0, 0, 6, 6, 2, 0, 0, 0, 21, 0, 22, 2, 0, 2, 0, 0, 0, 0]' : 0.184995}", "{'[0, 0, 6, 6, 2, 0, 0, 0, 21, 0, 22, 2, 0, 2, 0, 0, 0, 0]' : 0.184056}", "{'[0, 0, 6, 6, 2, 0, 0, 0, 21, 0, 22, 2, 0, 2, 0, 0, 0, 0]' : 0.179752}", "{'[0, 0, 6, 6, 2, 0, 0, 0, 21, 0, 22, 2, 0, 2, 0, 0, 0, 0]' : 0.183243}", "{'[0, 0, 6, 6, 2, 0, 0, 0, 21, 0, 22, 2, 0, 2, 0, 0, 0, 0]' : 0.185181}", "{'[0, 0, 6, 6, 2, 0, 0, 0, 21, 0, 22, 2, 0, 2, 0, 0, 0, 0]' : 0.184973}", "{'[0, 0, 6, 6, 2, 0, 0, 0, 21, 0, 22, 2, 0, 2, 0, 0, 0, 0]' : 0.184412}", "{'[0, 0, 6, 6, 2, 0, 0, 0, 21, 0, 22, 2, 0, 2, 0, 0, 0, 0]' : 0.179577}", "{'[0, 0, 6, 6, 2, 0, 0, 0, 21, 0, 22, 2, 0, 2, 0, 0, 0, 0]' : 0.179716}", "{'[0, 0, 6, 6, 2, 0, 0, 0, 21, 0, 22, 2, 0, 2, 0, 0, 0, 0]' : 0.179663}", "{'[0, 0, 6, 6, 2, 0, 0, 0, 21, 0, 22, 2, 0, 2, 0, 0, 0, 0]' : 0.179624}", "{'[0, 0, 6, 6, 2, 0, 0, 0, 21, 0, 22, 2, 0, 2, 0, 0, 0, 0]' : 0.181948}", "{'[0, 0, 6, 6, 2, 0, 0, 0, 21, 0, 22, 2, 0, 2, 0, 0, 0, 0]' : 0.184417}", "{'[0, 0, 6, 6, 2, 0, 0, 0, 21, 0, 22, 2, 0, 2, 0, 0, 0, 0]' : 0.179626}", "{'[0, 0, 6, 6, 2, 0, 0, 0, 21, 0, 22, 2, 0, 2, 0, 0, 0, 0]' : 0.183222}", "{'[0, 0, 6, 6, 2, 0, 0, 0, 21, 0, 22, 2, 0, 2, 0, 0, 0, 0]' : 0.185285}", "{'[0, 0, 6, 6, 2, 0, 0, 0, 21, 0, 22, 2, 0, 2, 0, 0, 0, 0]' : 0.185025}", "{'[0, 0, 6, 6, 2, 0, 0, 0, 21, 0, 22, 2, 0, 2, 0, 0, 0, 0]' : 0.18306}", "{'[0, 0, 6, 6, 2, 0, 0, 0, 21, 0, 22, 2, 0, 2, 0, 0, 0, 0]' : 0.179918}", "{'[0, 0, 6, 6, 2, 0, 0, 0, 21, 0, 22, 2, 0, 2, 0, 0, 0, 0]' : 0.180998}", "{'[0, 0, 6, 6, 2, 0, 0, 0, 21, 0, 22, 2, 0, 2, 0, 0, 0, 0]' : 0.185001}", "{'[0, 0, 6, 6, 2, 0, 0, 0, 21, 0, 22, 2, 0, 2, 0, 0, 0, 0]' : 0.185072}"]
returning from 'run': {'[0, 0, 6, 6, 2, 0, 0, 0, 21, 0, 22, 2, 0, 2, 0, 0, 0, 0]': ([0.18176, 0.180146, 0.179727, 0.179731, 0.179713, 0.179738, 0.183697, 0.185031, 0.184995, 0.184056, 0.179752, 0.183243, 0.185181, 0.184973, 0.184412, 0.179577, 0.179716, 0.179663, 0.179624, 0.181948, 0.184417, 0.179626, 0.183222, 0.185285, 0.185025, 0.18306, 0.179918, 0.180998, 0.185001, 0.185072], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 6, 6, 2, 0, 0, 0, 21, 0, 22, 2, 0, 2, 0, 0, 0, 0]': ([0.18176, 0.180146, 0.179727, 0.179731, 0.179713, 0.179738, 0.183697, 0.185031, 0.184995, 0.184056, 0.179752, 0.183243, 0.185181, 0.184973, 0.184412, 0.179577, 0.179716, 0.179663, 0.179624, 0.181948, 0.184417, 0.179626, 0.183222, 0.185285, 0.185025, 0.18306, 0.179918, 0.180998, 0.185001, 0.185072], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	56
        Max loop nest depth: 	5
        Additions: 		536
        Multiplications: 	156
        Divisions: 		0
        Logical: 		0
        Reads: 			1452
        Writes: 		376
        Comparisons:		56
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest7.exe __orio_perftest7.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest7.exe  
Program Test Output: 
{'[0, 4, 4, 6, 5, 6, 1, 0, 28, 29, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0888569}
{'[0, 4, 4, 6, 5, 6, 1, 0, 28, 29, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.090822}
{'[0, 4, 4, 6, 5, 6, 1, 0, 28, 29, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0925488}
{'[0, 4, 4, 6, 5, 6, 1, 0, 28, 29, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0925181}
{'[0, 4, 4, 6, 5, 6, 1, 0, 28, 29, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0926101}
{'[0, 4, 4, 6, 5, 6, 1, 0, 28, 29, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0926108}
{'[0, 4, 4, 6, 5, 6, 1, 0, 28, 29, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0926001}
{'[0, 4, 4, 6, 5, 6, 1, 0, 28, 29, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.092541}
{'[0, 4, 4, 6, 5, 6, 1, 0, 28, 29, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.092593}
{'[0, 4, 4, 6, 5, 6, 1, 0, 28, 29, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.092505}
{'[0, 4, 4, 6, 5, 6, 1, 0, 28, 29, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.092545}
{'[0, 4, 4, 6, 5, 6, 1, 0, 28, 29, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0927079}
{'[0, 4, 4, 6, 5, 6, 1, 0, 28, 29, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0917389}
{'[0, 4, 4, 6, 5, 6, 1, 0, 28, 29, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0905919}
{'[0, 4, 4, 6, 5, 6, 1, 0, 28, 29, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.090528}
{'[0, 4, 4, 6, 5, 6, 1, 0, 28, 29, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.090647}
{'[0, 4, 4, 6, 5, 6, 1, 0, 28, 29, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0906179}
{'[0, 4, 4, 6, 5, 6, 1, 0, 28, 29, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0912399}
{'[0, 4, 4, 6, 5, 6, 1, 0, 28, 29, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.090723}
{'[0, 4, 4, 6, 5, 6, 1, 0, 28, 29, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.09061}
{'[0, 4, 4, 6, 5, 6, 1, 0, 28, 29, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0905321}
{'[0, 4, 4, 6, 5, 6, 1, 0, 28, 29, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0905509}
{'[0, 4, 4, 6, 5, 6, 1, 0, 28, 29, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0908358}
{'[0, 4, 4, 6, 5, 6, 1, 0, 28, 29, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.090863}
{'[0, 4, 4, 6, 5, 6, 1, 0, 28, 29, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.088798}
{'[0, 4, 4, 6, 5, 6, 1, 0, 28, 29, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0884628}
{'[0, 4, 4, 6, 5, 6, 1, 0, 28, 29, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0884762}
{'[0, 4, 4, 6, 5, 6, 1, 0, 28, 29, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0883801}
{'[0, 4, 4, 6, 5, 6, 1, 0, 28, 29, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0886571}
{'[0, 4, 4, 6, 5, 6, 1, 0, 28, 29, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0887718}

out:
 ["{'[0, 4, 4, 6, 5, 6, 1, 0, 28, 29, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0888569}", "{'[0, 4, 4, 6, 5, 6, 1, 0, 28, 29, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.090822}", "{'[0, 4, 4, 6, 5, 6, 1, 0, 28, 29, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0925488}", "{'[0, 4, 4, 6, 5, 6, 1, 0, 28, 29, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0925181}", "{'[0, 4, 4, 6, 5, 6, 1, 0, 28, 29, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0926101}", "{'[0, 4, 4, 6, 5, 6, 1, 0, 28, 29, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0926108}", "{'[0, 4, 4, 6, 5, 6, 1, 0, 28, 29, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0926001}", "{'[0, 4, 4, 6, 5, 6, 1, 0, 28, 29, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.092541}", "{'[0, 4, 4, 6, 5, 6, 1, 0, 28, 29, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.092593}", "{'[0, 4, 4, 6, 5, 6, 1, 0, 28, 29, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.092505}", "{'[0, 4, 4, 6, 5, 6, 1, 0, 28, 29, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.092545}", "{'[0, 4, 4, 6, 5, 6, 1, 0, 28, 29, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0927079}", "{'[0, 4, 4, 6, 5, 6, 1, 0, 28, 29, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0917389}", "{'[0, 4, 4, 6, 5, 6, 1, 0, 28, 29, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0905919}", "{'[0, 4, 4, 6, 5, 6, 1, 0, 28, 29, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.090528}", "{'[0, 4, 4, 6, 5, 6, 1, 0, 28, 29, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.090647}", "{'[0, 4, 4, 6, 5, 6, 1, 0, 28, 29, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0906179}", "{'[0, 4, 4, 6, 5, 6, 1, 0, 28, 29, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0912399}", "{'[0, 4, 4, 6, 5, 6, 1, 0, 28, 29, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.090723}", "{'[0, 4, 4, 6, 5, 6, 1, 0, 28, 29, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.09061}", "{'[0, 4, 4, 6, 5, 6, 1, 0, 28, 29, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0905321}", "{'[0, 4, 4, 6, 5, 6, 1, 0, 28, 29, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0905509}", "{'[0, 4, 4, 6, 5, 6, 1, 0, 28, 29, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0908358}", "{'[0, 4, 4, 6, 5, 6, 1, 0, 28, 29, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.090863}", "{'[0, 4, 4, 6, 5, 6, 1, 0, 28, 29, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.088798}", "{'[0, 4, 4, 6, 5, 6, 1, 0, 28, 29, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0884628}", "{'[0, 4, 4, 6, 5, 6, 1, 0, 28, 29, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0884762}", "{'[0, 4, 4, 6, 5, 6, 1, 0, 28, 29, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0883801}", "{'[0, 4, 4, 6, 5, 6, 1, 0, 28, 29, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0886571}", "{'[0, 4, 4, 6, 5, 6, 1, 0, 28, 29, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0887718}"]
returning from 'run': {'[0, 4, 4, 6, 5, 6, 1, 0, 28, 29, 0, 0, 1, 0, 0, 1, 0, 1]': ([0.0888569, 0.090822, 0.0925488, 0.0925181, 0.0926101, 0.0926108, 0.0926001, 0.092541, 0.092593, 0.092505, 0.092545, 0.0927079, 0.0917389, 0.0905919, 0.090528, 0.090647, 0.0906179, 0.0912399, 0.090723, 0.09061, 0.0905321, 0.0905509, 0.0908358, 0.090863, 0.088798, 0.0884628, 0.0884762, 0.0883801, 0.0886571, 0.0887718], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 4, 4, 6, 5, 6, 1, 0, 28, 29, 0, 0, 1, 0, 0, 1, 0, 1]': ([0.0888569, 0.090822, 0.0925488, 0.0925181, 0.0926101, 0.0926108, 0.0926001, 0.092541, 0.092593, 0.092505, 0.092545, 0.0927079, 0.0917389, 0.0905919, 0.090528, 0.090647, 0.0906179, 0.0912399, 0.090723, 0.09061, 0.0905321, 0.0905509, 0.0908358, 0.090863, 0.088798, 0.0884628, 0.0884762, 0.0883801, 0.0886571, 0.0887718], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	6
        Additions: 		103
        Multiplications: 	20
        Divisions: 		0
        Logical: 		0
        Reads: 			255
        Writes: 		68
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest8.exe __orio_perftest8.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest8.exe  
Program Test Output: 
{'[1, 1, 1, 2, 0, 4, 0, 1, 27, 0, 0, 0, 0, 1, 0, 0, 0, 0]' : 0.338122}
{'[1, 1, 1, 2, 0, 4, 0, 1, 27, 0, 0, 0, 0, 1, 0, 0, 0, 0]' : 0.319565}
{'[1, 1, 1, 2, 0, 4, 0, 1, 27, 0, 0, 0, 0, 1, 0, 0, 0, 0]' : 0.300388}
{'[1, 1, 1, 2, 0, 4, 0, 1, 27, 0, 0, 0, 0, 1, 0, 0, 0, 0]' : 0.30034}
{'[1, 1, 1, 2, 0, 4, 0, 1, 27, 0, 0, 0, 0, 1, 0, 0, 0, 0]' : 0.30029}
{'[1, 1, 1, 2, 0, 4, 0, 1, 27, 0, 0, 0, 0, 1, 0, 0, 0, 0]' : 0.300343}
{'[1, 1, 1, 2, 0, 4, 0, 1, 27, 0, 0, 0, 0, 1, 0, 0, 0, 0]' : 0.300489}
{'[1, 1, 1, 2, 0, 4, 0, 1, 27, 0, 0, 0, 0, 1, 0, 0, 0, 0]' : 0.300306}
{'[1, 1, 1, 2, 0, 4, 0, 1, 27, 0, 0, 0, 0, 1, 0, 0, 0, 0]' : 0.297556}
{'[1, 1, 1, 2, 0, 4, 0, 1, 27, 0, 0, 0, 0, 1, 0, 0, 0, 0]' : 0.291888}
{'[1, 1, 1, 2, 0, 4, 0, 1, 27, 0, 0, 0, 0, 1, 0, 0, 0, 0]' : 0.29237}
{'[1, 1, 1, 2, 0, 4, 0, 1, 27, 0, 0, 0, 0, 1, 0, 0, 0, 0]' : 0.291791}
{'[1, 1, 1, 2, 0, 4, 0, 1, 27, 0, 0, 0, 0, 1, 0, 0, 0, 0]' : 0.292029}
{'[1, 1, 1, 2, 0, 4, 0, 1, 27, 0, 0, 0, 0, 1, 0, 0, 0, 0]' : 0.293927}
{'[1, 1, 1, 2, 0, 4, 0, 1, 27, 0, 0, 0, 0, 1, 0, 0, 0, 0]' : 0.30037}
{'[1, 1, 1, 2, 0, 4, 0, 1, 27, 0, 0, 0, 0, 1, 0, 0, 0, 0]' : 0.295863}
{'[1, 1, 1, 2, 0, 4, 0, 1, 27, 0, 0, 0, 0, 1, 0, 0, 0, 0]' : 0.291875}
{'[1, 1, 1, 2, 0, 4, 0, 1, 27, 0, 0, 0, 0, 1, 0, 0, 0, 0]' : 0.292132}
{'[1, 1, 1, 2, 0, 4, 0, 1, 27, 0, 0, 0, 0, 1, 0, 0, 0, 0]' : 0.292386}
{'[1, 1, 1, 2, 0, 4, 0, 1, 27, 0, 0, 0, 0, 1, 0, 0, 0, 0]' : 0.291971}
{'[1, 1, 1, 2, 0, 4, 0, 1, 27, 0, 0, 0, 0, 1, 0, 0, 0, 0]' : 0.292183}
{'[1, 1, 1, 2, 0, 4, 0, 1, 27, 0, 0, 0, 0, 1, 0, 0, 0, 0]' : 0.292118}
{'[1, 1, 1, 2, 0, 4, 0, 1, 27, 0, 0, 0, 0, 1, 0, 0, 0, 0]' : 0.291989}
{'[1, 1, 1, 2, 0, 4, 0, 1, 27, 0, 0, 0, 0, 1, 0, 0, 0, 0]' : 0.29193}
{'[1, 1, 1, 2, 0, 4, 0, 1, 27, 0, 0, 0, 0, 1, 0, 0, 0, 0]' : 0.291992}
{'[1, 1, 1, 2, 0, 4, 0, 1, 27, 0, 0, 0, 0, 1, 0, 0, 0, 0]' : 0.292174}
{'[1, 1, 1, 2, 0, 4, 0, 1, 27, 0, 0, 0, 0, 1, 0, 0, 0, 0]' : 0.291874}
{'[1, 1, 1, 2, 0, 4, 0, 1, 27, 0, 0, 0, 0, 1, 0, 0, 0, 0]' : 0.292254}
{'[1, 1, 1, 2, 0, 4, 0, 1, 27, 0, 0, 0, 0, 1, 0, 0, 0, 0]' : 0.291812}
{'[1, 1, 1, 2, 0, 4, 0, 1, 27, 0, 0, 0, 0, 1, 0, 0, 0, 0]' : 0.292528}

out:
 ["{'[1, 1, 1, 2, 0, 4, 0, 1, 27, 0, 0, 0, 0, 1, 0, 0, 0, 0]' : 0.338122}", "{'[1, 1, 1, 2, 0, 4, 0, 1, 27, 0, 0, 0, 0, 1, 0, 0, 0, 0]' : 0.319565}", "{'[1, 1, 1, 2, 0, 4, 0, 1, 27, 0, 0, 0, 0, 1, 0, 0, 0, 0]' : 0.300388}", "{'[1, 1, 1, 2, 0, 4, 0, 1, 27, 0, 0, 0, 0, 1, 0, 0, 0, 0]' : 0.30034}", "{'[1, 1, 1, 2, 0, 4, 0, 1, 27, 0, 0, 0, 0, 1, 0, 0, 0, 0]' : 0.30029}", "{'[1, 1, 1, 2, 0, 4, 0, 1, 27, 0, 0, 0, 0, 1, 0, 0, 0, 0]' : 0.300343}", "{'[1, 1, 1, 2, 0, 4, 0, 1, 27, 0, 0, 0, 0, 1, 0, 0, 0, 0]' : 0.300489}", "{'[1, 1, 1, 2, 0, 4, 0, 1, 27, 0, 0, 0, 0, 1, 0, 0, 0, 0]' : 0.300306}", "{'[1, 1, 1, 2, 0, 4, 0, 1, 27, 0, 0, 0, 0, 1, 0, 0, 0, 0]' : 0.297556}", "{'[1, 1, 1, 2, 0, 4, 0, 1, 27, 0, 0, 0, 0, 1, 0, 0, 0, 0]' : 0.291888}", "{'[1, 1, 1, 2, 0, 4, 0, 1, 27, 0, 0, 0, 0, 1, 0, 0, 0, 0]' : 0.29237}", "{'[1, 1, 1, 2, 0, 4, 0, 1, 27, 0, 0, 0, 0, 1, 0, 0, 0, 0]' : 0.291791}", "{'[1, 1, 1, 2, 0, 4, 0, 1, 27, 0, 0, 0, 0, 1, 0, 0, 0, 0]' : 0.292029}", "{'[1, 1, 1, 2, 0, 4, 0, 1, 27, 0, 0, 0, 0, 1, 0, 0, 0, 0]' : 0.293927}", "{'[1, 1, 1, 2, 0, 4, 0, 1, 27, 0, 0, 0, 0, 1, 0, 0, 0, 0]' : 0.30037}", "{'[1, 1, 1, 2, 0, 4, 0, 1, 27, 0, 0, 0, 0, 1, 0, 0, 0, 0]' : 0.295863}", "{'[1, 1, 1, 2, 0, 4, 0, 1, 27, 0, 0, 0, 0, 1, 0, 0, 0, 0]' : 0.291875}", "{'[1, 1, 1, 2, 0, 4, 0, 1, 27, 0, 0, 0, 0, 1, 0, 0, 0, 0]' : 0.292132}", "{'[1, 1, 1, 2, 0, 4, 0, 1, 27, 0, 0, 0, 0, 1, 0, 0, 0, 0]' : 0.292386}", "{'[1, 1, 1, 2, 0, 4, 0, 1, 27, 0, 0, 0, 0, 1, 0, 0, 0, 0]' : 0.291971}", "{'[1, 1, 1, 2, 0, 4, 0, 1, 27, 0, 0, 0, 0, 1, 0, 0, 0, 0]' : 0.292183}", "{'[1, 1, 1, 2, 0, 4, 0, 1, 27, 0, 0, 0, 0, 1, 0, 0, 0, 0]' : 0.292118}", "{'[1, 1, 1, 2, 0, 4, 0, 1, 27, 0, 0, 0, 0, 1, 0, 0, 0, 0]' : 0.291989}", "{'[1, 1, 1, 2, 0, 4, 0, 1, 27, 0, 0, 0, 0, 1, 0, 0, 0, 0]' : 0.29193}", "{'[1, 1, 1, 2, 0, 4, 0, 1, 27, 0, 0, 0, 0, 1, 0, 0, 0, 0]' : 0.291992}", "{'[1, 1, 1, 2, 0, 4, 0, 1, 27, 0, 0, 0, 0, 1, 0, 0, 0, 0]' : 0.292174}", "{'[1, 1, 1, 2, 0, 4, 0, 1, 27, 0, 0, 0, 0, 1, 0, 0, 0, 0]' : 0.291874}", "{'[1, 1, 1, 2, 0, 4, 0, 1, 27, 0, 0, 0, 0, 1, 0, 0, 0, 0]' : 0.292254}", "{'[1, 1, 1, 2, 0, 4, 0, 1, 27, 0, 0, 0, 0, 1, 0, 0, 0, 0]' : 0.291812}", "{'[1, 1, 1, 2, 0, 4, 0, 1, 27, 0, 0, 0, 0, 1, 0, 0, 0, 0]' : 0.292528}"]
returning from 'run': {'[1, 1, 1, 2, 0, 4, 0, 1, 27, 0, 0, 0, 0, 1, 0, 0, 0, 0]': ([0.338122, 0.319565, 0.300388, 0.30034, 0.30029, 0.300343, 0.300489, 0.300306, 0.297556, 0.291888, 0.29237, 0.291791, 0.292029, 0.293927, 0.30037, 0.295863, 0.291875, 0.292132, 0.292386, 0.291971, 0.292183, 0.292118, 0.291989, 0.29193, 0.291992, 0.292174, 0.291874, 0.292254, 0.291812, 0.292528], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 1, 1, 2, 0, 4, 0, 1, 27, 0, 0, 0, 0, 1, 0, 0, 0, 0]': ([0.338122, 0.319565, 0.300388, 0.30034, 0.30029, 0.300343, 0.300489, 0.300306, 0.297556, 0.291888, 0.29237, 0.291791, 0.292029, 0.293927, 0.30037, 0.295863, 0.291875, 0.292132, 0.292386, 0.291971, 0.292183, 0.292118, 0.291989, 0.29193, 0.291992, 0.292174, 0.291874, 0.292254, 0.291812, 0.292528], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	5
        Additions: 		4653
        Multiplications: 	1386
        Divisions: 		0
        Logical: 		0
        Reads: 			7181
        Writes: 		750
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest9.exe __orio_perftest9.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest9.exe  
Program Test Output: 
{'[0, 3, 0, 3, 6, 3, 0, 1, 7, 0, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.268343}
{'[0, 3, 0, 3, 6, 3, 0, 1, 7, 0, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.268426}
{'[0, 3, 0, 3, 6, 3, 0, 1, 7, 0, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.268723}
{'[0, 3, 0, 3, 6, 3, 0, 1, 7, 0, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.273574}
{'[0, 3, 0, 3, 6, 3, 0, 1, 7, 0, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.269732}
{'[0, 3, 0, 3, 6, 3, 0, 1, 7, 0, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.268588}
{'[0, 3, 0, 3, 6, 3, 0, 1, 7, 0, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.269979}
{'[0, 3, 0, 3, 6, 3, 0, 1, 7, 0, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.267442}
{'[0, 3, 0, 3, 6, 3, 0, 1, 7, 0, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.268219}
{'[0, 3, 0, 3, 6, 3, 0, 1, 7, 0, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.26804}
{'[0, 3, 0, 3, 6, 3, 0, 1, 7, 0, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.271797}
{'[0, 3, 0, 3, 6, 3, 0, 1, 7, 0, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.272836}
{'[0, 3, 0, 3, 6, 3, 0, 1, 7, 0, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.272706}
{'[0, 3, 0, 3, 6, 3, 0, 1, 7, 0, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.273139}
{'[0, 3, 0, 3, 6, 3, 0, 1, 7, 0, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.272036}
{'[0, 3, 0, 3, 6, 3, 0, 1, 7, 0, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.269583}
{'[0, 3, 0, 3, 6, 3, 0, 1, 7, 0, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.272331}
{'[0, 3, 0, 3, 6, 3, 0, 1, 7, 0, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.272641}
{'[0, 3, 0, 3, 6, 3, 0, 1, 7, 0, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.270696}
{'[0, 3, 0, 3, 6, 3, 0, 1, 7, 0, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.271039}
{'[0, 3, 0, 3, 6, 3, 0, 1, 7, 0, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.272026}
{'[0, 3, 0, 3, 6, 3, 0, 1, 7, 0, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.272858}
{'[0, 3, 0, 3, 6, 3, 0, 1, 7, 0, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.270681}
{'[0, 3, 0, 3, 6, 3, 0, 1, 7, 0, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.272199}
{'[0, 3, 0, 3, 6, 3, 0, 1, 7, 0, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.272326}
{'[0, 3, 0, 3, 6, 3, 0, 1, 7, 0, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.272067}
{'[0, 3, 0, 3, 6, 3, 0, 1, 7, 0, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.269627}
{'[0, 3, 0, 3, 6, 3, 0, 1, 7, 0, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.272852}
{'[0, 3, 0, 3, 6, 3, 0, 1, 7, 0, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.27216}
{'[0, 3, 0, 3, 6, 3, 0, 1, 7, 0, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.271562}

out:
 ["{'[0, 3, 0, 3, 6, 3, 0, 1, 7, 0, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.268343}", "{'[0, 3, 0, 3, 6, 3, 0, 1, 7, 0, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.268426}", "{'[0, 3, 0, 3, 6, 3, 0, 1, 7, 0, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.268723}", "{'[0, 3, 0, 3, 6, 3, 0, 1, 7, 0, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.273574}", "{'[0, 3, 0, 3, 6, 3, 0, 1, 7, 0, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.269732}", "{'[0, 3, 0, 3, 6, 3, 0, 1, 7, 0, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.268588}", "{'[0, 3, 0, 3, 6, 3, 0, 1, 7, 0, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.269979}", "{'[0, 3, 0, 3, 6, 3, 0, 1, 7, 0, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.267442}", "{'[0, 3, 0, 3, 6, 3, 0, 1, 7, 0, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.268219}", "{'[0, 3, 0, 3, 6, 3, 0, 1, 7, 0, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.26804}", "{'[0, 3, 0, 3, 6, 3, 0, 1, 7, 0, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.271797}", "{'[0, 3, 0, 3, 6, 3, 0, 1, 7, 0, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.272836}", "{'[0, 3, 0, 3, 6, 3, 0, 1, 7, 0, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.272706}", "{'[0, 3, 0, 3, 6, 3, 0, 1, 7, 0, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.273139}", "{'[0, 3, 0, 3, 6, 3, 0, 1, 7, 0, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.272036}", "{'[0, 3, 0, 3, 6, 3, 0, 1, 7, 0, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.269583}", "{'[0, 3, 0, 3, 6, 3, 0, 1, 7, 0, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.272331}", "{'[0, 3, 0, 3, 6, 3, 0, 1, 7, 0, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.272641}", "{'[0, 3, 0, 3, 6, 3, 0, 1, 7, 0, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.270696}", "{'[0, 3, 0, 3, 6, 3, 0, 1, 7, 0, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.271039}", "{'[0, 3, 0, 3, 6, 3, 0, 1, 7, 0, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.272026}", "{'[0, 3, 0, 3, 6, 3, 0, 1, 7, 0, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.272858}", "{'[0, 3, 0, 3, 6, 3, 0, 1, 7, 0, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.270681}", "{'[0, 3, 0, 3, 6, 3, 0, 1, 7, 0, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.272199}", "{'[0, 3, 0, 3, 6, 3, 0, 1, 7, 0, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.272326}", "{'[0, 3, 0, 3, 6, 3, 0, 1, 7, 0, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.272067}", "{'[0, 3, 0, 3, 6, 3, 0, 1, 7, 0, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.269627}", "{'[0, 3, 0, 3, 6, 3, 0, 1, 7, 0, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.272852}", "{'[0, 3, 0, 3, 6, 3, 0, 1, 7, 0, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.27216}", "{'[0, 3, 0, 3, 6, 3, 0, 1, 7, 0, 18, 0, 2, 0, 0, 0, 0, 0]' : 0.271562}"]
returning from 'run': {'[0, 3, 0, 3, 6, 3, 0, 1, 7, 0, 18, 0, 2, 0, 0, 0, 0, 0]': ([0.268343, 0.268426, 0.268723, 0.273574, 0.269732, 0.268588, 0.269979, 0.267442, 0.268219, 0.26804, 0.271797, 0.272836, 0.272706, 0.273139, 0.272036, 0.269583, 0.272331, 0.272641, 0.270696, 0.271039, 0.272026, 0.272858, 0.270681, 0.272199, 0.272326, 0.272067, 0.269627, 0.272852, 0.27216, 0.271562], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 3, 0, 3, 6, 3, 0, 1, 7, 0, 18, 0, 2, 0, 0, 0, 0, 0]': ([0.268343, 0.268426, 0.268723, 0.273574, 0.269732, 0.268588, 0.269979, 0.267442, 0.268219, 0.26804, 0.271797, 0.272836, 0.272706, 0.273139, 0.272036, 0.269583, 0.272331, 0.272641, 0.270696, 0.271039, 0.272026, 0.272858, 0.270681, 0.272199, 0.272326, 0.272067, 0.269627, 0.272852, 0.27216, 0.271562], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	5
        Additions: 		5890
        Multiplications: 	1782
        Divisions: 		0
        Logical: 		0
        Reads: 			9117
        Writes: 		961
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest10.exe __orio_perftest10.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest10.exe  
Program Test Output: 
{'[2, 4, 6, 0, 3, 6, 0, 0, 9, 0, 7, 16, 2, 0, 0, 0, 1, 1]' : 0.333456}
{'[2, 4, 6, 0, 3, 6, 0, 0, 9, 0, 7, 16, 2, 0, 0, 0, 1, 1]' : 0.318152}
{'[2, 4, 6, 0, 3, 6, 0, 0, 9, 0, 7, 16, 2, 0, 0, 0, 1, 1]' : 0.302567}
{'[2, 4, 6, 0, 3, 6, 0, 0, 9, 0, 7, 16, 2, 0, 0, 0, 1, 1]' : 0.30309}
{'[2, 4, 6, 0, 3, 6, 0, 0, 9, 0, 7, 16, 2, 0, 0, 0, 1, 1]' : 0.30311}
{'[2, 4, 6, 0, 3, 6, 0, 0, 9, 0, 7, 16, 2, 0, 0, 0, 1, 1]' : 0.303473}
{'[2, 4, 6, 0, 3, 6, 0, 0, 9, 0, 7, 16, 2, 0, 0, 0, 1, 1]' : 0.302955}
{'[2, 4, 6, 0, 3, 6, 0, 0, 9, 0, 7, 16, 2, 0, 0, 0, 1, 1]' : 0.303122}
{'[2, 4, 6, 0, 3, 6, 0, 0, 9, 0, 7, 16, 2, 0, 0, 0, 1, 1]' : 0.303235}
{'[2, 4, 6, 0, 3, 6, 0, 0, 9, 0, 7, 16, 2, 0, 0, 0, 1, 1]' : 0.302859}
{'[2, 4, 6, 0, 3, 6, 0, 0, 9, 0, 7, 16, 2, 0, 0, 0, 1, 1]' : 0.30305}
{'[2, 4, 6, 0, 3, 6, 0, 0, 9, 0, 7, 16, 2, 0, 0, 0, 1, 1]' : 0.303893}
{'[2, 4, 6, 0, 3, 6, 0, 0, 9, 0, 7, 16, 2, 0, 0, 0, 1, 1]' : 0.303044}
{'[2, 4, 6, 0, 3, 6, 0, 0, 9, 0, 7, 16, 2, 0, 0, 0, 1, 1]' : 0.303351}
{'[2, 4, 6, 0, 3, 6, 0, 0, 9, 0, 7, 16, 2, 0, 0, 0, 1, 1]' : 0.303043}
{'[2, 4, 6, 0, 3, 6, 0, 0, 9, 0, 7, 16, 2, 0, 0, 0, 1, 1]' : 0.303492}
{'[2, 4, 6, 0, 3, 6, 0, 0, 9, 0, 7, 16, 2, 0, 0, 0, 1, 1]' : 0.30448}
{'[2, 4, 6, 0, 3, 6, 0, 0, 9, 0, 7, 16, 2, 0, 0, 0, 1, 1]' : 0.308744}
{'[2, 4, 6, 0, 3, 6, 0, 0, 9, 0, 7, 16, 2, 0, 0, 0, 1, 1]' : 0.308875}
{'[2, 4, 6, 0, 3, 6, 0, 0, 9, 0, 7, 16, 2, 0, 0, 0, 1, 1]' : 0.308829}
{'[2, 4, 6, 0, 3, 6, 0, 0, 9, 0, 7, 16, 2, 0, 0, 0, 1, 1]' : 0.308314}
{'[2, 4, 6, 0, 3, 6, 0, 0, 9, 0, 7, 16, 2, 0, 0, 0, 1, 1]' : 0.303554}
{'[2, 4, 6, 0, 3, 6, 0, 0, 9, 0, 7, 16, 2, 0, 0, 0, 1, 1]' : 0.300033}
{'[2, 4, 6, 0, 3, 6, 0, 0, 9, 0, 7, 16, 2, 0, 0, 0, 1, 1]' : 0.302543}
{'[2, 4, 6, 0, 3, 6, 0, 0, 9, 0, 7, 16, 2, 0, 0, 0, 1, 1]' : 0.303689}
{'[2, 4, 6, 0, 3, 6, 0, 0, 9, 0, 7, 16, 2, 0, 0, 0, 1, 1]' : 0.303508}
{'[2, 4, 6, 0, 3, 6, 0, 0, 9, 0, 7, 16, 2, 0, 0, 0, 1, 1]' : 0.303607}
{'[2, 4, 6, 0, 3, 6, 0, 0, 9, 0, 7, 16, 2, 0, 0, 0, 1, 1]' : 0.303393}
{'[2, 4, 6, 0, 3, 6, 0, 0, 9, 0, 7, 16, 2, 0, 0, 0, 1, 1]' : 0.303353}
{'[2, 4, 6, 0, 3, 6, 0, 0, 9, 0, 7, 16, 2, 0, 0, 0, 1, 1]' : 0.302712}

out:
 ["{'[2, 4, 6, 0, 3, 6, 0, 0, 9, 0, 7, 16, 2, 0, 0, 0, 1, 1]' : 0.333456}", "{'[2, 4, 6, 0, 3, 6, 0, 0, 9, 0, 7, 16, 2, 0, 0, 0, 1, 1]' : 0.318152}", "{'[2, 4, 6, 0, 3, 6, 0, 0, 9, 0, 7, 16, 2, 0, 0, 0, 1, 1]' : 0.302567}", "{'[2, 4, 6, 0, 3, 6, 0, 0, 9, 0, 7, 16, 2, 0, 0, 0, 1, 1]' : 0.30309}", "{'[2, 4, 6, 0, 3, 6, 0, 0, 9, 0, 7, 16, 2, 0, 0, 0, 1, 1]' : 0.30311}", "{'[2, 4, 6, 0, 3, 6, 0, 0, 9, 0, 7, 16, 2, 0, 0, 0, 1, 1]' : 0.303473}", "{'[2, 4, 6, 0, 3, 6, 0, 0, 9, 0, 7, 16, 2, 0, 0, 0, 1, 1]' : 0.302955}", "{'[2, 4, 6, 0, 3, 6, 0, 0, 9, 0, 7, 16, 2, 0, 0, 0, 1, 1]' : 0.303122}", "{'[2, 4, 6, 0, 3, 6, 0, 0, 9, 0, 7, 16, 2, 0, 0, 0, 1, 1]' : 0.303235}", "{'[2, 4, 6, 0, 3, 6, 0, 0, 9, 0, 7, 16, 2, 0, 0, 0, 1, 1]' : 0.302859}", "{'[2, 4, 6, 0, 3, 6, 0, 0, 9, 0, 7, 16, 2, 0, 0, 0, 1, 1]' : 0.30305}", "{'[2, 4, 6, 0, 3, 6, 0, 0, 9, 0, 7, 16, 2, 0, 0, 0, 1, 1]' : 0.303893}", "{'[2, 4, 6, 0, 3, 6, 0, 0, 9, 0, 7, 16, 2, 0, 0, 0, 1, 1]' : 0.303044}", "{'[2, 4, 6, 0, 3, 6, 0, 0, 9, 0, 7, 16, 2, 0, 0, 0, 1, 1]' : 0.303351}", "{'[2, 4, 6, 0, 3, 6, 0, 0, 9, 0, 7, 16, 2, 0, 0, 0, 1, 1]' : 0.303043}", "{'[2, 4, 6, 0, 3, 6, 0, 0, 9, 0, 7, 16, 2, 0, 0, 0, 1, 1]' : 0.303492}", "{'[2, 4, 6, 0, 3, 6, 0, 0, 9, 0, 7, 16, 2, 0, 0, 0, 1, 1]' : 0.30448}", "{'[2, 4, 6, 0, 3, 6, 0, 0, 9, 0, 7, 16, 2, 0, 0, 0, 1, 1]' : 0.308744}", "{'[2, 4, 6, 0, 3, 6, 0, 0, 9, 0, 7, 16, 2, 0, 0, 0, 1, 1]' : 0.308875}", "{'[2, 4, 6, 0, 3, 6, 0, 0, 9, 0, 7, 16, 2, 0, 0, 0, 1, 1]' : 0.308829}", "{'[2, 4, 6, 0, 3, 6, 0, 0, 9, 0, 7, 16, 2, 0, 0, 0, 1, 1]' : 0.308314}", "{'[2, 4, 6, 0, 3, 6, 0, 0, 9, 0, 7, 16, 2, 0, 0, 0, 1, 1]' : 0.303554}", "{'[2, 4, 6, 0, 3, 6, 0, 0, 9, 0, 7, 16, 2, 0, 0, 0, 1, 1]' : 0.300033}", "{'[2, 4, 6, 0, 3, 6, 0, 0, 9, 0, 7, 16, 2, 0, 0, 0, 1, 1]' : 0.302543}", "{'[2, 4, 6, 0, 3, 6, 0, 0, 9, 0, 7, 16, 2, 0, 0, 0, 1, 1]' : 0.303689}", "{'[2, 4, 6, 0, 3, 6, 0, 0, 9, 0, 7, 16, 2, 0, 0, 0, 1, 1]' : 0.303508}", "{'[2, 4, 6, 0, 3, 6, 0, 0, 9, 0, 7, 16, 2, 0, 0, 0, 1, 1]' : 0.303607}", "{'[2, 4, 6, 0, 3, 6, 0, 0, 9, 0, 7, 16, 2, 0, 0, 0, 1, 1]' : 0.303393}", "{'[2, 4, 6, 0, 3, 6, 0, 0, 9, 0, 7, 16, 2, 0, 0, 0, 1, 1]' : 0.303353}", "{'[2, 4, 6, 0, 3, 6, 0, 0, 9, 0, 7, 16, 2, 0, 0, 0, 1, 1]' : 0.302712}"]
returning from 'run': {'[2, 4, 6, 0, 3, 6, 0, 0, 9, 0, 7, 16, 2, 0, 0, 0, 1, 1]': ([0.333456, 0.318152, 0.302567, 0.30309, 0.30311, 0.303473, 0.302955, 0.303122, 0.303235, 0.302859, 0.30305, 0.303893, 0.303044, 0.303351, 0.303043, 0.303492, 0.30448, 0.308744, 0.308875, 0.308829, 0.308314, 0.303554, 0.300033, 0.302543, 0.303689, 0.303508, 0.303607, 0.303393, 0.303353, 0.302712], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 4, 6, 0, 3, 6, 0, 0, 9, 0, 7, 16, 2, 0, 0, 0, 1, 1]': ([0.333456, 0.318152, 0.302567, 0.30309, 0.30311, 0.303473, 0.302955, 0.303122, 0.303235, 0.302859, 0.30305, 0.303893, 0.303044, 0.303351, 0.303043, 0.303492, 0.30448, 0.308744, 0.308875, 0.308829, 0.308314, 0.303554, 0.300033, 0.302543, 0.303689, 0.303508, 0.303607, 0.303393, 0.303353, 0.302712], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
Code stats:
        Number of loops: 	77
        Max loop nest depth: 	5
        Additions: 		8771
        Multiplications: 	2480
        Divisions: 		0
        Logical: 		0
        Reads: 			13159
        Writes: 		1446
        Comparisons:		77
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest11.exe __orio_perftest11.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest11.exe  
Program Test Output: 
{'[3, 4, 5, 1, 6, 0, 0, 0, 16, 29, 0, 29, 0, 0, 1, 0, 1, 0]' : 0.191738}
{'[3, 4, 5, 1, 6, 0, 0, 0, 16, 29, 0, 29, 0, 0, 1, 0, 1, 0]' : 0.191738}
{'[3, 4, 5, 1, 6, 0, 0, 0, 16, 29, 0, 29, 0, 0, 1, 0, 1, 0]' : 0.17965}
{'[3, 4, 5, 1, 6, 0, 0, 0, 16, 29, 0, 29, 0, 0, 1, 0, 1, 0]' : 0.171511}
{'[3, 4, 5, 1, 6, 0, 0, 0, 16, 29, 0, 29, 0, 0, 1, 0, 1, 0]' : 0.171241}
{'[3, 4, 5, 1, 6, 0, 0, 0, 16, 29, 0, 29, 0, 0, 1, 0, 1, 0]' : 0.172367}
{'[3, 4, 5, 1, 6, 0, 0, 0, 16, 29, 0, 29, 0, 0, 1, 0, 1, 0]' : 0.174889}
{'[3, 4, 5, 1, 6, 0, 0, 0, 16, 29, 0, 29, 0, 0, 1, 0, 1, 0]' : 0.172962}
{'[3, 4, 5, 1, 6, 0, 0, 0, 16, 29, 0, 29, 0, 0, 1, 0, 1, 0]' : 0.174274}
{'[3, 4, 5, 1, 6, 0, 0, 0, 16, 29, 0, 29, 0, 0, 1, 0, 1, 0]' : 0.175227}
{'[3, 4, 5, 1, 6, 0, 0, 0, 16, 29, 0, 29, 0, 0, 1, 0, 1, 0]' : 0.175245}
{'[3, 4, 5, 1, 6, 0, 0, 0, 16, 29, 0, 29, 0, 0, 1, 0, 1, 0]' : 0.175558}
{'[3, 4, 5, 1, 6, 0, 0, 0, 16, 29, 0, 29, 0, 0, 1, 0, 1, 0]' : 0.175452}
{'[3, 4, 5, 1, 6, 0, 0, 0, 16, 29, 0, 29, 0, 0, 1, 0, 1, 0]' : 0.175585}
{'[3, 4, 5, 1, 6, 0, 0, 0, 16, 29, 0, 29, 0, 0, 1, 0, 1, 0]' : 0.174983}
{'[3, 4, 5, 1, 6, 0, 0, 0, 16, 29, 0, 29, 0, 0, 1, 0, 1, 0]' : 0.175792}
{'[3, 4, 5, 1, 6, 0, 0, 0, 16, 29, 0, 29, 0, 0, 1, 0, 1, 0]' : 0.175521}
{'[3, 4, 5, 1, 6, 0, 0, 0, 16, 29, 0, 29, 0, 0, 1, 0, 1, 0]' : 0.175445}
{'[3, 4, 5, 1, 6, 0, 0, 0, 16, 29, 0, 29, 0, 0, 1, 0, 1, 0]' : 0.171624}
{'[3, 4, 5, 1, 6, 0, 0, 0, 16, 29, 0, 29, 0, 0, 1, 0, 1, 0]' : 0.171935}
{'[3, 4, 5, 1, 6, 0, 0, 0, 16, 29, 0, 29, 0, 0, 1, 0, 1, 0]' : 0.174388}
{'[3, 4, 5, 1, 6, 0, 0, 0, 16, 29, 0, 29, 0, 0, 1, 0, 1, 0]' : 0.175349}
{'[3, 4, 5, 1, 6, 0, 0, 0, 16, 29, 0, 29, 0, 0, 1, 0, 1, 0]' : 0.175687}
{'[3, 4, 5, 1, 6, 0, 0, 0, 16, 29, 0, 29, 0, 0, 1, 0, 1, 0]' : 0.175563}
{'[3, 4, 5, 1, 6, 0, 0, 0, 16, 29, 0, 29, 0, 0, 1, 0, 1, 0]' : 0.173569}
{'[3, 4, 5, 1, 6, 0, 0, 0, 16, 29, 0, 29, 0, 0, 1, 0, 1, 0]' : 0.171768}
{'[3, 4, 5, 1, 6, 0, 0, 0, 16, 29, 0, 29, 0, 0, 1, 0, 1, 0]' : 0.174145}
{'[3, 4, 5, 1, 6, 0, 0, 0, 16, 29, 0, 29, 0, 0, 1, 0, 1, 0]' : 0.17677}
{'[3, 4, 5, 1, 6, 0, 0, 0, 16, 29, 0, 29, 0, 0, 1, 0, 1, 0]' : 0.175701}
{'[3, 4, 5, 1, 6, 0, 0, 0, 16, 29, 0, 29, 0, 0, 1, 0, 1, 0]' : 0.175523}

out:
 ["{'[3, 4, 5, 1, 6, 0, 0, 0, 16, 29, 0, 29, 0, 0, 1, 0, 1, 0]' : 0.191738}", "{'[3, 4, 5, 1, 6, 0, 0, 0, 16, 29, 0, 29, 0, 0, 1, 0, 1, 0]' : 0.191738}", "{'[3, 4, 5, 1, 6, 0, 0, 0, 16, 29, 0, 29, 0, 0, 1, 0, 1, 0]' : 0.17965}", "{'[3, 4, 5, 1, 6, 0, 0, 0, 16, 29, 0, 29, 0, 0, 1, 0, 1, 0]' : 0.171511}", "{'[3, 4, 5, 1, 6, 0, 0, 0, 16, 29, 0, 29, 0, 0, 1, 0, 1, 0]' : 0.171241}", "{'[3, 4, 5, 1, 6, 0, 0, 0, 16, 29, 0, 29, 0, 0, 1, 0, 1, 0]' : 0.172367}", "{'[3, 4, 5, 1, 6, 0, 0, 0, 16, 29, 0, 29, 0, 0, 1, 0, 1, 0]' : 0.174889}", "{'[3, 4, 5, 1, 6, 0, 0, 0, 16, 29, 0, 29, 0, 0, 1, 0, 1, 0]' : 0.172962}", "{'[3, 4, 5, 1, 6, 0, 0, 0, 16, 29, 0, 29, 0, 0, 1, 0, 1, 0]' : 0.174274}", "{'[3, 4, 5, 1, 6, 0, 0, 0, 16, 29, 0, 29, 0, 0, 1, 0, 1, 0]' : 0.175227}", "{'[3, 4, 5, 1, 6, 0, 0, 0, 16, 29, 0, 29, 0, 0, 1, 0, 1, 0]' : 0.175245}", "{'[3, 4, 5, 1, 6, 0, 0, 0, 16, 29, 0, 29, 0, 0, 1, 0, 1, 0]' : 0.175558}", "{'[3, 4, 5, 1, 6, 0, 0, 0, 16, 29, 0, 29, 0, 0, 1, 0, 1, 0]' : 0.175452}", "{'[3, 4, 5, 1, 6, 0, 0, 0, 16, 29, 0, 29, 0, 0, 1, 0, 1, 0]' : 0.175585}", "{'[3, 4, 5, 1, 6, 0, 0, 0, 16, 29, 0, 29, 0, 0, 1, 0, 1, 0]' : 0.174983}", "{'[3, 4, 5, 1, 6, 0, 0, 0, 16, 29, 0, 29, 0, 0, 1, 0, 1, 0]' : 0.175792}", "{'[3, 4, 5, 1, 6, 0, 0, 0, 16, 29, 0, 29, 0, 0, 1, 0, 1, 0]' : 0.175521}", "{'[3, 4, 5, 1, 6, 0, 0, 0, 16, 29, 0, 29, 0, 0, 1, 0, 1, 0]' : 0.175445}", "{'[3, 4, 5, 1, 6, 0, 0, 0, 16, 29, 0, 29, 0, 0, 1, 0, 1, 0]' : 0.171624}", "{'[3, 4, 5, 1, 6, 0, 0, 0, 16, 29, 0, 29, 0, 0, 1, 0, 1, 0]' : 0.171935}", "{'[3, 4, 5, 1, 6, 0, 0, 0, 16, 29, 0, 29, 0, 0, 1, 0, 1, 0]' : 0.174388}", "{'[3, 4, 5, 1, 6, 0, 0, 0, 16, 29, 0, 29, 0, 0, 1, 0, 1, 0]' : 0.175349}", "{'[3, 4, 5, 1, 6, 0, 0, 0, 16, 29, 0, 29, 0, 0, 1, 0, 1, 0]' : 0.175687}", "{'[3, 4, 5, 1, 6, 0, 0, 0, 16, 29, 0, 29, 0, 0, 1, 0, 1, 0]' : 0.175563}", "{'[3, 4, 5, 1, 6, 0, 0, 0, 16, 29, 0, 29, 0, 0, 1, 0, 1, 0]' : 0.173569}", "{'[3, 4, 5, 1, 6, 0, 0, 0, 16, 29, 0, 29, 0, 0, 1, 0, 1, 0]' : 0.171768}", "{'[3, 4, 5, 1, 6, 0, 0, 0, 16, 29, 0, 29, 0, 0, 1, 0, 1, 0]' : 0.174145}", "{'[3, 4, 5, 1, 6, 0, 0, 0, 16, 29, 0, 29, 0, 0, 1, 0, 1, 0]' : 0.17677}", "{'[3, 4, 5, 1, 6, 0, 0, 0, 16, 29, 0, 29, 0, 0, 1, 0, 1, 0]' : 0.175701}", "{'[3, 4, 5, 1, 6, 0, 0, 0, 16, 29, 0, 29, 0, 0, 1, 0, 1, 0]' : 0.175523}"]
returning from 'run': {'[3, 4, 5, 1, 6, 0, 0, 0, 16, 29, 0, 29, 0, 0, 1, 0, 1, 0]': ([0.191738, 0.191738, 0.17965, 0.171511, 0.171241, 0.172367, 0.174889, 0.172962, 0.174274, 0.175227, 0.175245, 0.175558, 0.175452, 0.175585, 0.174983, 0.175792, 0.175521, 0.175445, 0.171624, 0.171935, 0.174388, 0.175349, 0.175687, 0.175563, 0.173569, 0.171768, 0.174145, 0.17677, 0.175701, 0.175523], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 4, 5, 1, 6, 0, 0, 0, 16, 29, 0, 29, 0, 0, 1, 0, 1, 0]': ([0.191738, 0.191738, 0.17965, 0.171511, 0.171241, 0.172367, 0.174889, 0.172962, 0.174274, 0.175227, 0.175245, 0.175558, 0.175452, 0.175585, 0.174983, 0.175792, 0.175521, 0.175445, 0.171624, 0.171935, 0.174388, 0.175349, 0.175687, 0.175563, 0.173569, 0.171768, 0.174145, 0.17677, 0.175701, 0.175523], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	52
        Max loop nest depth: 	5
        Additions: 		2719
        Multiplications: 	702
        Divisions: 		0
        Logical: 		0
        Reads: 			4402
        Writes: 		521
        Comparisons:		52
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest12.exe __orio_perftest12.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest12.exe  
Program Test Output: 
{'[1, 1, 0, 0, 2, 1, 1, 0, 0, 29, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.125791}
{'[1, 1, 0, 0, 2, 1, 1, 0, 0, 29, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.123056}
{'[1, 1, 0, 0, 2, 1, 1, 0, 0, 29, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.123224}
{'[1, 1, 0, 0, 2, 1, 1, 0, 0, 29, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.123449}
{'[1, 1, 0, 0, 2, 1, 1, 0, 0, 29, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.123194}
{'[1, 1, 0, 0, 2, 1, 1, 0, 0, 29, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.123545}
{'[1, 1, 0, 0, 2, 1, 1, 0, 0, 29, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.126433}
{'[1, 1, 0, 0, 2, 1, 1, 0, 0, 29, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.126754}
{'[1, 1, 0, 0, 2, 1, 1, 0, 0, 29, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.125803}
{'[1, 1, 0, 0, 2, 1, 1, 0, 0, 29, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.122979}
{'[1, 1, 0, 0, 2, 1, 1, 0, 0, 29, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.123165}
{'[1, 1, 0, 0, 2, 1, 1, 0, 0, 29, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.123646}
{'[1, 1, 0, 0, 2, 1, 1, 0, 0, 29, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.123153}
{'[1, 1, 0, 0, 2, 1, 1, 0, 0, 29, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.123022}
{'[1, 1, 0, 0, 2, 1, 1, 0, 0, 29, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.125206}
{'[1, 1, 0, 0, 2, 1, 1, 0, 0, 29, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.126677}
{'[1, 1, 0, 0, 2, 1, 1, 0, 0, 29, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.126088}
{'[1, 1, 0, 0, 2, 1, 1, 0, 0, 29, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.123237}
{'[1, 1, 0, 0, 2, 1, 1, 0, 0, 29, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.12294}
{'[1, 1, 0, 0, 2, 1, 1, 0, 0, 29, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.123512}
{'[1, 1, 0, 0, 2, 1, 1, 0, 0, 29, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.123304}
{'[1, 1, 0, 0, 2, 1, 1, 0, 0, 29, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.123041}
{'[1, 1, 0, 0, 2, 1, 1, 0, 0, 29, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.124753}
{'[1, 1, 0, 0, 2, 1, 1, 0, 0, 29, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.126646}
{'[1, 1, 0, 0, 2, 1, 1, 0, 0, 29, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.12617}
{'[1, 1, 0, 0, 2, 1, 1, 0, 0, 29, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.122994}
{'[1, 1, 0, 0, 2, 1, 1, 0, 0, 29, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.122979}
{'[1, 1, 0, 0, 2, 1, 1, 0, 0, 29, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.123367}
{'[1, 1, 0, 0, 2, 1, 1, 0, 0, 29, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.123383}
{'[1, 1, 0, 0, 2, 1, 1, 0, 0, 29, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.123182}

out:
 ["{'[1, 1, 0, 0, 2, 1, 1, 0, 0, 29, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.125791}", "{'[1, 1, 0, 0, 2, 1, 1, 0, 0, 29, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.123056}", "{'[1, 1, 0, 0, 2, 1, 1, 0, 0, 29, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.123224}", "{'[1, 1, 0, 0, 2, 1, 1, 0, 0, 29, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.123449}", "{'[1, 1, 0, 0, 2, 1, 1, 0, 0, 29, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.123194}", "{'[1, 1, 0, 0, 2, 1, 1, 0, 0, 29, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.123545}", "{'[1, 1, 0, 0, 2, 1, 1, 0, 0, 29, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.126433}", "{'[1, 1, 0, 0, 2, 1, 1, 0, 0, 29, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.126754}", "{'[1, 1, 0, 0, 2, 1, 1, 0, 0, 29, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.125803}", "{'[1, 1, 0, 0, 2, 1, 1, 0, 0, 29, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.122979}", "{'[1, 1, 0, 0, 2, 1, 1, 0, 0, 29, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.123165}", "{'[1, 1, 0, 0, 2, 1, 1, 0, 0, 29, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.123646}", "{'[1, 1, 0, 0, 2, 1, 1, 0, 0, 29, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.123153}", "{'[1, 1, 0, 0, 2, 1, 1, 0, 0, 29, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.123022}", "{'[1, 1, 0, 0, 2, 1, 1, 0, 0, 29, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.125206}", "{'[1, 1, 0, 0, 2, 1, 1, 0, 0, 29, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.126677}", "{'[1, 1, 0, 0, 2, 1, 1, 0, 0, 29, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.126088}", "{'[1, 1, 0, 0, 2, 1, 1, 0, 0, 29, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.123237}", "{'[1, 1, 0, 0, 2, 1, 1, 0, 0, 29, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.12294}", "{'[1, 1, 0, 0, 2, 1, 1, 0, 0, 29, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.123512}", "{'[1, 1, 0, 0, 2, 1, 1, 0, 0, 29, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.123304}", "{'[1, 1, 0, 0, 2, 1, 1, 0, 0, 29, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.123041}", "{'[1, 1, 0, 0, 2, 1, 1, 0, 0, 29, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.124753}", "{'[1, 1, 0, 0, 2, 1, 1, 0, 0, 29, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.126646}", "{'[1, 1, 0, 0, 2, 1, 1, 0, 0, 29, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.12617}", "{'[1, 1, 0, 0, 2, 1, 1, 0, 0, 29, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.122994}", "{'[1, 1, 0, 0, 2, 1, 1, 0, 0, 29, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.122979}", "{'[1, 1, 0, 0, 2, 1, 1, 0, 0, 29, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.123367}", "{'[1, 1, 0, 0, 2, 1, 1, 0, 0, 29, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.123383}", "{'[1, 1, 0, 0, 2, 1, 1, 0, 0, 29, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.123182}"]
returning from 'run': {'[1, 1, 0, 0, 2, 1, 1, 0, 0, 29, 0, 0, 1, 1, 0, 0, 1, 0]': ([0.125791, 0.123056, 0.123224, 0.123449, 0.123194, 0.123545, 0.126433, 0.126754, 0.125803, 0.122979, 0.123165, 0.123646, 0.123153, 0.123022, 0.125206, 0.126677, 0.126088, 0.123237, 0.12294, 0.123512, 0.123304, 0.123041, 0.124753, 0.126646, 0.12617, 0.122994, 0.122979, 0.123367, 0.123383, 0.123182], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 1, 0, 0, 2, 1, 1, 0, 0, 29, 0, 0, 1, 1, 0, 0, 1, 0]': ([0.125791, 0.123056, 0.123224, 0.123449, 0.123194, 0.123545, 0.126433, 0.126754, 0.125803, 0.122979, 0.123165, 0.123646, 0.123153, 0.123022, 0.125206, 0.126677, 0.126088, 0.123237, 0.12294, 0.123512, 0.123304, 0.123041, 0.124753, 0.126646, 0.12617, 0.122994, 0.122979, 0.123367, 0.123383, 0.123182], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		1074
        Multiplications: 	320
        Divisions: 		0
        Logical: 		0
        Reads: 			1763
        Writes: 		220
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest13.exe __orio_perftest13.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest13.exe  
Program Test Output: 
{'[0, 1, 1, 0, 5, 1, 1, 0, 29, 7, 0, 9, 1, 0, 1, 0, 1, 0]' : 0.123449}
{'[0, 1, 1, 0, 5, 1, 1, 0, 29, 7, 0, 9, 1, 0, 1, 0, 1, 0]' : 0.117196}
{'[0, 1, 1, 0, 5, 1, 1, 0, 29, 7, 0, 9, 1, 0, 1, 0, 1, 0]' : 0.114799}
{'[0, 1, 1, 0, 5, 1, 1, 0, 29, 7, 0, 9, 1, 0, 1, 0, 1, 0]' : 0.11672}
{'[0, 1, 1, 0, 5, 1, 1, 0, 29, 7, 0, 9, 1, 0, 1, 0, 1, 0]' : 0.117875}
{'[0, 1, 1, 0, 5, 1, 1, 0, 29, 7, 0, 9, 1, 0, 1, 0, 1, 0]' : 0.117669}
{'[0, 1, 1, 0, 5, 1, 1, 0, 29, 7, 0, 9, 1, 0, 1, 0, 1, 0]' : 0.117517}
{'[0, 1, 1, 0, 5, 1, 1, 0, 29, 7, 0, 9, 1, 0, 1, 0, 1, 0]' : 0.117957}
{'[0, 1, 1, 0, 5, 1, 1, 0, 29, 7, 0, 9, 1, 0, 1, 0, 1, 0]' : 0.116551}
{'[0, 1, 1, 0, 5, 1, 1, 0, 29, 7, 0, 9, 1, 0, 1, 0, 1, 0]' : 0.115047}
{'[0, 1, 1, 0, 5, 1, 1, 0, 29, 7, 0, 9, 1, 0, 1, 0, 1, 0]' : 0.114737}
{'[0, 1, 1, 0, 5, 1, 1, 0, 29, 7, 0, 9, 1, 0, 1, 0, 1, 0]' : 0.115109}
{'[0, 1, 1, 0, 5, 1, 1, 0, 29, 7, 0, 9, 1, 0, 1, 0, 1, 0]' : 0.117805}
{'[0, 1, 1, 0, 5, 1, 1, 0, 29, 7, 0, 9, 1, 0, 1, 0, 1, 0]' : 0.117652}
{'[0, 1, 1, 0, 5, 1, 1, 0, 29, 7, 0, 9, 1, 0, 1, 0, 1, 0]' : 0.117639}
{'[0, 1, 1, 0, 5, 1, 1, 0, 29, 7, 0, 9, 1, 0, 1, 0, 1, 0]' : 0.117939}
{'[0, 1, 1, 0, 5, 1, 1, 0, 29, 7, 0, 9, 1, 0, 1, 0, 1, 0]' : 0.118087}
{'[0, 1, 1, 0, 5, 1, 1, 0, 29, 7, 0, 9, 1, 0, 1, 0, 1, 0]' : 0.117586}
{'[0, 1, 1, 0, 5, 1, 1, 0, 29, 7, 0, 9, 1, 0, 1, 0, 1, 0]' : 0.117412}
{'[0, 1, 1, 0, 5, 1, 1, 0, 29, 7, 0, 9, 1, 0, 1, 0, 1, 0]' : 0.112516}
{'[0, 1, 1, 0, 5, 1, 1, 0, 29, 7, 0, 9, 1, 0, 1, 0, 1, 0]' : 0.114353}
{'[0, 1, 1, 0, 5, 1, 1, 0, 29, 7, 0, 9, 1, 0, 1, 0, 1, 0]' : 0.11761}
{'[0, 1, 1, 0, 5, 1, 1, 0, 29, 7, 0, 9, 1, 0, 1, 0, 1, 0]' : 0.117512}
{'[0, 1, 1, 0, 5, 1, 1, 0, 29, 7, 0, 9, 1, 0, 1, 0, 1, 0]' : 0.117872}
{'[0, 1, 1, 0, 5, 1, 1, 0, 29, 7, 0, 9, 1, 0, 1, 0, 1, 0]' : 0.117939}
{'[0, 1, 1, 0, 5, 1, 1, 0, 29, 7, 0, 9, 1, 0, 1, 0, 1, 0]' : 0.116454}
{'[0, 1, 1, 0, 5, 1, 1, 0, 29, 7, 0, 9, 1, 0, 1, 0, 1, 0]' : 0.111789}
{'[0, 1, 1, 0, 5, 1, 1, 0, 29, 7, 0, 9, 1, 0, 1, 0, 1, 0]' : 0.112417}
{'[0, 1, 1, 0, 5, 1, 1, 0, 29, 7, 0, 9, 1, 0, 1, 0, 1, 0]' : 0.112331}
{'[0, 1, 1, 0, 5, 1, 1, 0, 29, 7, 0, 9, 1, 0, 1, 0, 1, 0]' : 0.114489}

out:
 ["{'[0, 1, 1, 0, 5, 1, 1, 0, 29, 7, 0, 9, 1, 0, 1, 0, 1, 0]' : 0.123449}", "{'[0, 1, 1, 0, 5, 1, 1, 0, 29, 7, 0, 9, 1, 0, 1, 0, 1, 0]' : 0.117196}", "{'[0, 1, 1, 0, 5, 1, 1, 0, 29, 7, 0, 9, 1, 0, 1, 0, 1, 0]' : 0.114799}", "{'[0, 1, 1, 0, 5, 1, 1, 0, 29, 7, 0, 9, 1, 0, 1, 0, 1, 0]' : 0.11672}", "{'[0, 1, 1, 0, 5, 1, 1, 0, 29, 7, 0, 9, 1, 0, 1, 0, 1, 0]' : 0.117875}", "{'[0, 1, 1, 0, 5, 1, 1, 0, 29, 7, 0, 9, 1, 0, 1, 0, 1, 0]' : 0.117669}", "{'[0, 1, 1, 0, 5, 1, 1, 0, 29, 7, 0, 9, 1, 0, 1, 0, 1, 0]' : 0.117517}", "{'[0, 1, 1, 0, 5, 1, 1, 0, 29, 7, 0, 9, 1, 0, 1, 0, 1, 0]' : 0.117957}", "{'[0, 1, 1, 0, 5, 1, 1, 0, 29, 7, 0, 9, 1, 0, 1, 0, 1, 0]' : 0.116551}", "{'[0, 1, 1, 0, 5, 1, 1, 0, 29, 7, 0, 9, 1, 0, 1, 0, 1, 0]' : 0.115047}", "{'[0, 1, 1, 0, 5, 1, 1, 0, 29, 7, 0, 9, 1, 0, 1, 0, 1, 0]' : 0.114737}", "{'[0, 1, 1, 0, 5, 1, 1, 0, 29, 7, 0, 9, 1, 0, 1, 0, 1, 0]' : 0.115109}", "{'[0, 1, 1, 0, 5, 1, 1, 0, 29, 7, 0, 9, 1, 0, 1, 0, 1, 0]' : 0.117805}", "{'[0, 1, 1, 0, 5, 1, 1, 0, 29, 7, 0, 9, 1, 0, 1, 0, 1, 0]' : 0.117652}", "{'[0, 1, 1, 0, 5, 1, 1, 0, 29, 7, 0, 9, 1, 0, 1, 0, 1, 0]' : 0.117639}", "{'[0, 1, 1, 0, 5, 1, 1, 0, 29, 7, 0, 9, 1, 0, 1, 0, 1, 0]' : 0.117939}", "{'[0, 1, 1, 0, 5, 1, 1, 0, 29, 7, 0, 9, 1, 0, 1, 0, 1, 0]' : 0.118087}", "{'[0, 1, 1, 0, 5, 1, 1, 0, 29, 7, 0, 9, 1, 0, 1, 0, 1, 0]' : 0.117586}", "{'[0, 1, 1, 0, 5, 1, 1, 0, 29, 7, 0, 9, 1, 0, 1, 0, 1, 0]' : 0.117412}", "{'[0, 1, 1, 0, 5, 1, 1, 0, 29, 7, 0, 9, 1, 0, 1, 0, 1, 0]' : 0.112516}", "{'[0, 1, 1, 0, 5, 1, 1, 0, 29, 7, 0, 9, 1, 0, 1, 0, 1, 0]' : 0.114353}", "{'[0, 1, 1, 0, 5, 1, 1, 0, 29, 7, 0, 9, 1, 0, 1, 0, 1, 0]' : 0.11761}", "{'[0, 1, 1, 0, 5, 1, 1, 0, 29, 7, 0, 9, 1, 0, 1, 0, 1, 0]' : 0.117512}", "{'[0, 1, 1, 0, 5, 1, 1, 0, 29, 7, 0, 9, 1, 0, 1, 0, 1, 0]' : 0.117872}", "{'[0, 1, 1, 0, 5, 1, 1, 0, 29, 7, 0, 9, 1, 0, 1, 0, 1, 0]' : 0.117939}", "{'[0, 1, 1, 0, 5, 1, 1, 0, 29, 7, 0, 9, 1, 0, 1, 0, 1, 0]' : 0.116454}", "{'[0, 1, 1, 0, 5, 1, 1, 0, 29, 7, 0, 9, 1, 0, 1, 0, 1, 0]' : 0.111789}", "{'[0, 1, 1, 0, 5, 1, 1, 0, 29, 7, 0, 9, 1, 0, 1, 0, 1, 0]' : 0.112417}", "{'[0, 1, 1, 0, 5, 1, 1, 0, 29, 7, 0, 9, 1, 0, 1, 0, 1, 0]' : 0.112331}", "{'[0, 1, 1, 0, 5, 1, 1, 0, 29, 7, 0, 9, 1, 0, 1, 0, 1, 0]' : 0.114489}"]
returning from 'run': {'[0, 1, 1, 0, 5, 1, 1, 0, 29, 7, 0, 9, 1, 0, 1, 0, 1, 0]': ([0.123449, 0.117196, 0.114799, 0.11672, 0.117875, 0.117669, 0.117517, 0.117957, 0.116551, 0.115047, 0.114737, 0.115109, 0.117805, 0.117652, 0.117639, 0.117939, 0.118087, 0.117586, 0.117412, 0.112516, 0.114353, 0.11761, 0.117512, 0.117872, 0.117939, 0.116454, 0.111789, 0.112417, 0.112331, 0.114489], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 1, 0, 5, 1, 1, 0, 29, 7, 0, 9, 1, 0, 1, 0, 1, 0]': ([0.123449, 0.117196, 0.114799, 0.11672, 0.117875, 0.117669, 0.117517, 0.117957, 0.116551, 0.115047, 0.114737, 0.115109, 0.117805, 0.117652, 0.117639, 0.117939, 0.118087, 0.117586, 0.117412, 0.112516, 0.114353, 0.11761, 0.117512, 0.117872, 0.117939, 0.116454, 0.111789, 0.112417, 0.112331, 0.114489], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	72
        Max loop nest depth: 	6
        Additions: 		8294
        Multiplications: 	1848
        Divisions: 		0
        Logical: 		0
        Reads: 			11880
        Writes: 		1160
        Comparisons:		72
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest14.exe __orio_perftest14.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest14.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest14.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest14.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest14.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = kkk
Code stats:
        Number of loops: 	17
        Max loop nest depth: 	4
        Additions: 		2460
        Multiplications: 	756
        Divisions: 		0
        Logical: 		0
        Reads: 			3955
        Writes: 		440
        Comparisons:		17
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest15.exe __orio_perftest15.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest15.exe  
Program Test Output: 
{'[0, 5, 3, 1, 0, 1, 0, 0, 4, 7, 7, 0, 0, 0, 2, 0, 1, 1]' : 0.150755}
{'[0, 5, 3, 1, 0, 1, 0, 0, 4, 7, 7, 0, 0, 0, 2, 0, 1, 1]' : 0.150784}
{'[0, 5, 3, 1, 0, 1, 0, 0, 4, 7, 7, 0, 0, 0, 2, 0, 1, 1]' : 0.150612}
{'[0, 5, 3, 1, 0, 1, 0, 0, 4, 7, 7, 0, 0, 0, 2, 0, 1, 1]' : 0.136249}
{'[0, 5, 3, 1, 0, 1, 0, 0, 4, 7, 7, 0, 0, 0, 2, 0, 1, 1]' : 0.131981}
{'[0, 5, 3, 1, 0, 1, 0, 0, 4, 7, 7, 0, 0, 0, 2, 0, 1, 1]' : 0.131696}
{'[0, 5, 3, 1, 0, 1, 0, 0, 4, 7, 7, 0, 0, 0, 2, 0, 1, 1]' : 0.132246}
{'[0, 5, 3, 1, 0, 1, 0, 0, 4, 7, 7, 0, 0, 0, 2, 0, 1, 1]' : 0.132572}
{'[0, 5, 3, 1, 0, 1, 0, 0, 4, 7, 7, 0, 0, 0, 2, 0, 1, 1]' : 0.132627}
{'[0, 5, 3, 1, 0, 1, 0, 0, 4, 7, 7, 0, 0, 0, 2, 0, 1, 1]' : 0.132473}
{'[0, 5, 3, 1, 0, 1, 0, 0, 4, 7, 7, 0, 0, 0, 2, 0, 1, 1]' : 0.132179}
{'[0, 5, 3, 1, 0, 1, 0, 0, 4, 7, 7, 0, 0, 0, 2, 0, 1, 1]' : 0.129165}
{'[0, 5, 3, 1, 0, 1, 0, 0, 4, 7, 7, 0, 0, 0, 2, 0, 1, 1]' : 0.134864}
{'[0, 5, 3, 1, 0, 1, 0, 0, 4, 7, 7, 0, 0, 0, 2, 0, 1, 1]' : 0.136032}
{'[0, 5, 3, 1, 0, 1, 0, 0, 4, 7, 7, 0, 0, 0, 2, 0, 1, 1]' : 0.136072}
{'[0, 5, 3, 1, 0, 1, 0, 0, 4, 7, 7, 0, 0, 0, 2, 0, 1, 1]' : 0.136124}
{'[0, 5, 3, 1, 0, 1, 0, 0, 4, 7, 7, 0, 0, 0, 2, 0, 1, 1]' : 0.135443}
{'[0, 5, 3, 1, 0, 1, 0, 0, 4, 7, 7, 0, 0, 0, 2, 0, 1, 1]' : 0.132538}
{'[0, 5, 3, 1, 0, 1, 0, 0, 4, 7, 7, 0, 0, 0, 2, 0, 1, 1]' : 0.132698}
{'[0, 5, 3, 1, 0, 1, 0, 0, 4, 7, 7, 0, 0, 0, 2, 0, 1, 1]' : 0.133977}
{'[0, 5, 3, 1, 0, 1, 0, 0, 4, 7, 7, 0, 0, 0, 2, 0, 1, 1]' : 0.136007}
{'[0, 5, 3, 1, 0, 1, 0, 0, 4, 7, 7, 0, 0, 0, 2, 0, 1, 1]' : 0.136045}
{'[0, 5, 3, 1, 0, 1, 0, 0, 4, 7, 7, 0, 0, 0, 2, 0, 1, 1]' : 0.136145}
{'[0, 5, 3, 1, 0, 1, 0, 0, 4, 7, 7, 0, 0, 0, 2, 0, 1, 1]' : 0.136025}
{'[0, 5, 3, 1, 0, 1, 0, 0, 4, 7, 7, 0, 0, 0, 2, 0, 1, 1]' : 0.136097}
{'[0, 5, 3, 1, 0, 1, 0, 0, 4, 7, 7, 0, 0, 0, 2, 0, 1, 1]' : 0.136036}
{'[0, 5, 3, 1, 0, 1, 0, 0, 4, 7, 7, 0, 0, 0, 2, 0, 1, 1]' : 0.135987}
{'[0, 5, 3, 1, 0, 1, 0, 0, 4, 7, 7, 0, 0, 0, 2, 0, 1, 1]' : 0.136064}
{'[0, 5, 3, 1, 0, 1, 0, 0, 4, 7, 7, 0, 0, 0, 2, 0, 1, 1]' : 0.136024}
{'[0, 5, 3, 1, 0, 1, 0, 0, 4, 7, 7, 0, 0, 0, 2, 0, 1, 1]' : 0.136076}

out:
 ["{'[0, 5, 3, 1, 0, 1, 0, 0, 4, 7, 7, 0, 0, 0, 2, 0, 1, 1]' : 0.150755}", "{'[0, 5, 3, 1, 0, 1, 0, 0, 4, 7, 7, 0, 0, 0, 2, 0, 1, 1]' : 0.150784}", "{'[0, 5, 3, 1, 0, 1, 0, 0, 4, 7, 7, 0, 0, 0, 2, 0, 1, 1]' : 0.150612}", "{'[0, 5, 3, 1, 0, 1, 0, 0, 4, 7, 7, 0, 0, 0, 2, 0, 1, 1]' : 0.136249}", "{'[0, 5, 3, 1, 0, 1, 0, 0, 4, 7, 7, 0, 0, 0, 2, 0, 1, 1]' : 0.131981}", "{'[0, 5, 3, 1, 0, 1, 0, 0, 4, 7, 7, 0, 0, 0, 2, 0, 1, 1]' : 0.131696}", "{'[0, 5, 3, 1, 0, 1, 0, 0, 4, 7, 7, 0, 0, 0, 2, 0, 1, 1]' : 0.132246}", "{'[0, 5, 3, 1, 0, 1, 0, 0, 4, 7, 7, 0, 0, 0, 2, 0, 1, 1]' : 0.132572}", "{'[0, 5, 3, 1, 0, 1, 0, 0, 4, 7, 7, 0, 0, 0, 2, 0, 1, 1]' : 0.132627}", "{'[0, 5, 3, 1, 0, 1, 0, 0, 4, 7, 7, 0, 0, 0, 2, 0, 1, 1]' : 0.132473}", "{'[0, 5, 3, 1, 0, 1, 0, 0, 4, 7, 7, 0, 0, 0, 2, 0, 1, 1]' : 0.132179}", "{'[0, 5, 3, 1, 0, 1, 0, 0, 4, 7, 7, 0, 0, 0, 2, 0, 1, 1]' : 0.129165}", "{'[0, 5, 3, 1, 0, 1, 0, 0, 4, 7, 7, 0, 0, 0, 2, 0, 1, 1]' : 0.134864}", "{'[0, 5, 3, 1, 0, 1, 0, 0, 4, 7, 7, 0, 0, 0, 2, 0, 1, 1]' : 0.136032}", "{'[0, 5, 3, 1, 0, 1, 0, 0, 4, 7, 7, 0, 0, 0, 2, 0, 1, 1]' : 0.136072}", "{'[0, 5, 3, 1, 0, 1, 0, 0, 4, 7, 7, 0, 0, 0, 2, 0, 1, 1]' : 0.136124}", "{'[0, 5, 3, 1, 0, 1, 0, 0, 4, 7, 7, 0, 0, 0, 2, 0, 1, 1]' : 0.135443}", "{'[0, 5, 3, 1, 0, 1, 0, 0, 4, 7, 7, 0, 0, 0, 2, 0, 1, 1]' : 0.132538}", "{'[0, 5, 3, 1, 0, 1, 0, 0, 4, 7, 7, 0, 0, 0, 2, 0, 1, 1]' : 0.132698}", "{'[0, 5, 3, 1, 0, 1, 0, 0, 4, 7, 7, 0, 0, 0, 2, 0, 1, 1]' : 0.133977}", "{'[0, 5, 3, 1, 0, 1, 0, 0, 4, 7, 7, 0, 0, 0, 2, 0, 1, 1]' : 0.136007}", "{'[0, 5, 3, 1, 0, 1, 0, 0, 4, 7, 7, 0, 0, 0, 2, 0, 1, 1]' : 0.136045}", "{'[0, 5, 3, 1, 0, 1, 0, 0, 4, 7, 7, 0, 0, 0, 2, 0, 1, 1]' : 0.136145}", "{'[0, 5, 3, 1, 0, 1, 0, 0, 4, 7, 7, 0, 0, 0, 2, 0, 1, 1]' : 0.136025}", "{'[0, 5, 3, 1, 0, 1, 0, 0, 4, 7, 7, 0, 0, 0, 2, 0, 1, 1]' : 0.136097}", "{'[0, 5, 3, 1, 0, 1, 0, 0, 4, 7, 7, 0, 0, 0, 2, 0, 1, 1]' : 0.136036}", "{'[0, 5, 3, 1, 0, 1, 0, 0, 4, 7, 7, 0, 0, 0, 2, 0, 1, 1]' : 0.135987}", "{'[0, 5, 3, 1, 0, 1, 0, 0, 4, 7, 7, 0, 0, 0, 2, 0, 1, 1]' : 0.136064}", "{'[0, 5, 3, 1, 0, 1, 0, 0, 4, 7, 7, 0, 0, 0, 2, 0, 1, 1]' : 0.136024}", "{'[0, 5, 3, 1, 0, 1, 0, 0, 4, 7, 7, 0, 0, 0, 2, 0, 1, 1]' : 0.136076}"]
returning from 'run': {'[0, 5, 3, 1, 0, 1, 0, 0, 4, 7, 7, 0, 0, 0, 2, 0, 1, 1]': ([0.150755, 0.150784, 0.150612, 0.136249, 0.131981, 0.131696, 0.132246, 0.132572, 0.132627, 0.132473, 0.132179, 0.129165, 0.134864, 0.136032, 0.136072, 0.136124, 0.135443, 0.132538, 0.132698, 0.133977, 0.136007, 0.136045, 0.136145, 0.136025, 0.136097, 0.136036, 0.135987, 0.136064, 0.136024, 0.136076], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 5, 3, 1, 0, 1, 0, 0, 4, 7, 7, 0, 0, 0, 2, 0, 1, 1]': ([0.150755, 0.150784, 0.150612, 0.136249, 0.131981, 0.131696, 0.132246, 0.132572, 0.132627, 0.132473, 0.132179, 0.129165, 0.134864, 0.136032, 0.136072, 0.136124, 0.135443, 0.132538, 0.132698, 0.133977, 0.136007, 0.136045, 0.136145, 0.136025, 0.136097, 0.136036, 0.135987, 0.136064, 0.136024, 0.136076], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = jjj
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = kkk
Code stats:
        Number of loops: 	111
        Max loop nest depth: 	5
        Additions: 		4733
        Multiplications: 	1216
        Divisions: 		0
        Logical: 		0
        Reads: 			7652
        Writes: 		992
        Comparisons:		111
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest16.exe __orio_perftest16.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest16.exe  
Program Test Output: 
{'[6, 4, 4, 5, 2, 2, 1, 0, 0, 28, 5, 0, 1, 0, 1, 0, 0, 1]' : 0.110813}
{'[6, 4, 4, 5, 2, 2, 1, 0, 0, 28, 5, 0, 1, 0, 1, 0, 0, 1]' : 0.110806}
{'[6, 4, 4, 5, 2, 2, 1, 0, 0, 28, 5, 0, 1, 0, 1, 0, 0, 1]' : 0.111497}
{'[6, 4, 4, 5, 2, 2, 1, 0, 0, 28, 5, 0, 1, 0, 1, 0, 0, 1]' : 0.112722}
{'[6, 4, 4, 5, 2, 2, 1, 0, 0, 28, 5, 0, 1, 0, 1, 0, 0, 1]' : 0.112214}
{'[6, 4, 4, 5, 2, 2, 1, 0, 0, 28, 5, 0, 1, 0, 1, 0, 0, 1]' : 0.112792}
{'[6, 4, 4, 5, 2, 2, 1, 0, 0, 28, 5, 0, 1, 0, 1, 0, 0, 1]' : 0.112653}
{'[6, 4, 4, 5, 2, 2, 1, 0, 0, 28, 5, 0, 1, 0, 1, 0, 0, 1]' : 0.113214}
{'[6, 4, 4, 5, 2, 2, 1, 0, 0, 28, 5, 0, 1, 0, 1, 0, 0, 1]' : 0.11253}
{'[6, 4, 4, 5, 2, 2, 1, 0, 0, 28, 5, 0, 1, 0, 1, 0, 0, 1]' : 0.113054}
{'[6, 4, 4, 5, 2, 2, 1, 0, 0, 28, 5, 0, 1, 0, 1, 0, 0, 1]' : 0.113574}
{'[6, 4, 4, 5, 2, 2, 1, 0, 0, 28, 5, 0, 1, 0, 1, 0, 0, 1]' : 0.114707}
{'[6, 4, 4, 5, 2, 2, 1, 0, 0, 28, 5, 0, 1, 0, 1, 0, 0, 1]' : 0.116757}
{'[6, 4, 4, 5, 2, 2, 1, 0, 0, 28, 5, 0, 1, 0, 1, 0, 0, 1]' : 0.116097}
{'[6, 4, 4, 5, 2, 2, 1, 0, 0, 28, 5, 0, 1, 0, 1, 0, 0, 1]' : 0.115395}
{'[6, 4, 4, 5, 2, 2, 1, 0, 0, 28, 5, 0, 1, 0, 1, 0, 0, 1]' : 0.115509}
{'[6, 4, 4, 5, 2, 2, 1, 0, 0, 28, 5, 0, 1, 0, 1, 0, 0, 1]' : 0.115069}
{'[6, 4, 4, 5, 2, 2, 1, 0, 0, 28, 5, 0, 1, 0, 1, 0, 0, 1]' : 0.112443}
{'[6, 4, 4, 5, 2, 2, 1, 0, 0, 28, 5, 0, 1, 0, 1, 0, 0, 1]' : 0.115633}
{'[6, 4, 4, 5, 2, 2, 1, 0, 0, 28, 5, 0, 1, 0, 1, 0, 0, 1]' : 0.116736}
{'[6, 4, 4, 5, 2, 2, 1, 0, 0, 28, 5, 0, 1, 0, 1, 0, 0, 1]' : 0.115226}
{'[6, 4, 4, 5, 2, 2, 1, 0, 0, 28, 5, 0, 1, 0, 1, 0, 0, 1]' : 0.113665}
{'[6, 4, 4, 5, 2, 2, 1, 0, 0, 28, 5, 0, 1, 0, 1, 0, 0, 1]' : 0.113243}
{'[6, 4, 4, 5, 2, 2, 1, 0, 0, 28, 5, 0, 1, 0, 1, 0, 0, 1]' : 0.112422}
{'[6, 4, 4, 5, 2, 2, 1, 0, 0, 28, 5, 0, 1, 0, 1, 0, 0, 1]' : 0.113416}
{'[6, 4, 4, 5, 2, 2, 1, 0, 0, 28, 5, 0, 1, 0, 1, 0, 0, 1]' : 0.112612}
{'[6, 4, 4, 5, 2, 2, 1, 0, 0, 28, 5, 0, 1, 0, 1, 0, 0, 1]' : 0.112388}
{'[6, 4, 4, 5, 2, 2, 1, 0, 0, 28, 5, 0, 1, 0, 1, 0, 0, 1]' : 0.11368}
{'[6, 4, 4, 5, 2, 2, 1, 0, 0, 28, 5, 0, 1, 0, 1, 0, 0, 1]' : 0.113907}
{'[6, 4, 4, 5, 2, 2, 1, 0, 0, 28, 5, 0, 1, 0, 1, 0, 0, 1]' : 0.11448}

out:
 ["{'[6, 4, 4, 5, 2, 2, 1, 0, 0, 28, 5, 0, 1, 0, 1, 0, 0, 1]' : 0.110813}", "{'[6, 4, 4, 5, 2, 2, 1, 0, 0, 28, 5, 0, 1, 0, 1, 0, 0, 1]' : 0.110806}", "{'[6, 4, 4, 5, 2, 2, 1, 0, 0, 28, 5, 0, 1, 0, 1, 0, 0, 1]' : 0.111497}", "{'[6, 4, 4, 5, 2, 2, 1, 0, 0, 28, 5, 0, 1, 0, 1, 0, 0, 1]' : 0.112722}", "{'[6, 4, 4, 5, 2, 2, 1, 0, 0, 28, 5, 0, 1, 0, 1, 0, 0, 1]' : 0.112214}", "{'[6, 4, 4, 5, 2, 2, 1, 0, 0, 28, 5, 0, 1, 0, 1, 0, 0, 1]' : 0.112792}", "{'[6, 4, 4, 5, 2, 2, 1, 0, 0, 28, 5, 0, 1, 0, 1, 0, 0, 1]' : 0.112653}", "{'[6, 4, 4, 5, 2, 2, 1, 0, 0, 28, 5, 0, 1, 0, 1, 0, 0, 1]' : 0.113214}", "{'[6, 4, 4, 5, 2, 2, 1, 0, 0, 28, 5, 0, 1, 0, 1, 0, 0, 1]' : 0.11253}", "{'[6, 4, 4, 5, 2, 2, 1, 0, 0, 28, 5, 0, 1, 0, 1, 0, 0, 1]' : 0.113054}", "{'[6, 4, 4, 5, 2, 2, 1, 0, 0, 28, 5, 0, 1, 0, 1, 0, 0, 1]' : 0.113574}", "{'[6, 4, 4, 5, 2, 2, 1, 0, 0, 28, 5, 0, 1, 0, 1, 0, 0, 1]' : 0.114707}", "{'[6, 4, 4, 5, 2, 2, 1, 0, 0, 28, 5, 0, 1, 0, 1, 0, 0, 1]' : 0.116757}", "{'[6, 4, 4, 5, 2, 2, 1, 0, 0, 28, 5, 0, 1, 0, 1, 0, 0, 1]' : 0.116097}", "{'[6, 4, 4, 5, 2, 2, 1, 0, 0, 28, 5, 0, 1, 0, 1, 0, 0, 1]' : 0.115395}", "{'[6, 4, 4, 5, 2, 2, 1, 0, 0, 28, 5, 0, 1, 0, 1, 0, 0, 1]' : 0.115509}", "{'[6, 4, 4, 5, 2, 2, 1, 0, 0, 28, 5, 0, 1, 0, 1, 0, 0, 1]' : 0.115069}", "{'[6, 4, 4, 5, 2, 2, 1, 0, 0, 28, 5, 0, 1, 0, 1, 0, 0, 1]' : 0.112443}", "{'[6, 4, 4, 5, 2, 2, 1, 0, 0, 28, 5, 0, 1, 0, 1, 0, 0, 1]' : 0.115633}", "{'[6, 4, 4, 5, 2, 2, 1, 0, 0, 28, 5, 0, 1, 0, 1, 0, 0, 1]' : 0.116736}", "{'[6, 4, 4, 5, 2, 2, 1, 0, 0, 28, 5, 0, 1, 0, 1, 0, 0, 1]' : 0.115226}", "{'[6, 4, 4, 5, 2, 2, 1, 0, 0, 28, 5, 0, 1, 0, 1, 0, 0, 1]' : 0.113665}", "{'[6, 4, 4, 5, 2, 2, 1, 0, 0, 28, 5, 0, 1, 0, 1, 0, 0, 1]' : 0.113243}", "{'[6, 4, 4, 5, 2, 2, 1, 0, 0, 28, 5, 0, 1, 0, 1, 0, 0, 1]' : 0.112422}", "{'[6, 4, 4, 5, 2, 2, 1, 0, 0, 28, 5, 0, 1, 0, 1, 0, 0, 1]' : 0.113416}", "{'[6, 4, 4, 5, 2, 2, 1, 0, 0, 28, 5, 0, 1, 0, 1, 0, 0, 1]' : 0.112612}", "{'[6, 4, 4, 5, 2, 2, 1, 0, 0, 28, 5, 0, 1, 0, 1, 0, 0, 1]' : 0.112388}", "{'[6, 4, 4, 5, 2, 2, 1, 0, 0, 28, 5, 0, 1, 0, 1, 0, 0, 1]' : 0.11368}", "{'[6, 4, 4, 5, 2, 2, 1, 0, 0, 28, 5, 0, 1, 0, 1, 0, 0, 1]' : 0.113907}", "{'[6, 4, 4, 5, 2, 2, 1, 0, 0, 28, 5, 0, 1, 0, 1, 0, 0, 1]' : 0.11448}"]
returning from 'run': {'[6, 4, 4, 5, 2, 2, 1, 0, 0, 28, 5, 0, 1, 0, 1, 0, 0, 1]': ([0.110813, 0.110806, 0.111497, 0.112722, 0.112214, 0.112792, 0.112653, 0.113214, 0.11253, 0.113054, 0.113574, 0.114707, 0.116757, 0.116097, 0.115395, 0.115509, 0.115069, 0.112443, 0.115633, 0.116736, 0.115226, 0.113665, 0.113243, 0.112422, 0.113416, 0.112612, 0.112388, 0.11368, 0.113907, 0.11448], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 4, 4, 5, 2, 2, 1, 0, 0, 28, 5, 0, 1, 0, 1, 0, 0, 1]': ([0.110813, 0.110806, 0.111497, 0.112722, 0.112214, 0.112792, 0.112653, 0.113214, 0.11253, 0.113054, 0.113574, 0.114707, 0.116757, 0.116097, 0.115395, 0.115509, 0.115069, 0.112443, 0.115633, 0.116736, 0.115226, 0.113665, 0.113243, 0.112422, 0.113416, 0.112612, 0.112388, 0.11368, 0.113907, 0.11448], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = kkk
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	5
        Additions: 		6979
        Multiplications: 	3456
        Divisions: 		0
        Logical: 		0
        Reads: 			12932
        Writes: 		2018
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest17.exe __orio_perftest17.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest17.exe  
Program Test Output: 
{'[5, 5, 3, 0, 4, 1, 0, 0, 29, 20, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.274429}
{'[5, 5, 3, 0, 4, 1, 0, 0, 29, 20, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.262577}
{'[5, 5, 3, 0, 4, 1, 0, 0, 29, 20, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.248605}
{'[5, 5, 3, 0, 4, 1, 0, 0, 29, 20, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.247533}
{'[5, 5, 3, 0, 4, 1, 0, 0, 29, 20, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.250916}
{'[5, 5, 3, 0, 4, 1, 0, 0, 29, 20, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.247042}
{'[5, 5, 3, 0, 4, 1, 0, 0, 29, 20, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.247612}
{'[5, 5, 3, 0, 4, 1, 0, 0, 29, 20, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.243125}
{'[5, 5, 3, 0, 4, 1, 0, 0, 29, 20, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.250109}
{'[5, 5, 3, 0, 4, 1, 0, 0, 29, 20, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.250824}
{'[5, 5, 3, 0, 4, 1, 0, 0, 29, 20, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.248352}
{'[5, 5, 3, 0, 4, 1, 0, 0, 29, 20, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.246828}
{'[5, 5, 3, 0, 4, 1, 0, 0, 29, 20, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.250284}
{'[5, 5, 3, 0, 4, 1, 0, 0, 29, 20, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.250328}
{'[5, 5, 3, 0, 4, 1, 0, 0, 29, 20, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.250695}
{'[5, 5, 3, 0, 4, 1, 0, 0, 29, 20, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.253654}
{'[5, 5, 3, 0, 4, 1, 0, 0, 29, 20, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.250746}
{'[5, 5, 3, 0, 4, 1, 0, 0, 29, 20, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.250753}
{'[5, 5, 3, 0, 4, 1, 0, 0, 29, 20, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.247199}
{'[5, 5, 3, 0, 4, 1, 0, 0, 29, 20, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.246545}
{'[5, 5, 3, 0, 4, 1, 0, 0, 29, 20, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.251587}
{'[5, 5, 3, 0, 4, 1, 0, 0, 29, 20, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.25192}
{'[5, 5, 3, 0, 4, 1, 0, 0, 29, 20, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.250087}
{'[5, 5, 3, 0, 4, 1, 0, 0, 29, 20, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.252069}
{'[5, 5, 3, 0, 4, 1, 0, 0, 29, 20, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.251311}
{'[5, 5, 3, 0, 4, 1, 0, 0, 29, 20, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.251967}
{'[5, 5, 3, 0, 4, 1, 0, 0, 29, 20, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.252058}
{'[5, 5, 3, 0, 4, 1, 0, 0, 29, 20, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.249852}
{'[5, 5, 3, 0, 4, 1, 0, 0, 29, 20, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.250809}
{'[5, 5, 3, 0, 4, 1, 0, 0, 29, 20, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.251922}

out:
 ["{'[5, 5, 3, 0, 4, 1, 0, 0, 29, 20, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.274429}", "{'[5, 5, 3, 0, 4, 1, 0, 0, 29, 20, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.262577}", "{'[5, 5, 3, 0, 4, 1, 0, 0, 29, 20, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.248605}", "{'[5, 5, 3, 0, 4, 1, 0, 0, 29, 20, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.247533}", "{'[5, 5, 3, 0, 4, 1, 0, 0, 29, 20, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.250916}", "{'[5, 5, 3, 0, 4, 1, 0, 0, 29, 20, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.247042}", "{'[5, 5, 3, 0, 4, 1, 0, 0, 29, 20, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.247612}", "{'[5, 5, 3, 0, 4, 1, 0, 0, 29, 20, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.243125}", "{'[5, 5, 3, 0, 4, 1, 0, 0, 29, 20, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.250109}", "{'[5, 5, 3, 0, 4, 1, 0, 0, 29, 20, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.250824}", "{'[5, 5, 3, 0, 4, 1, 0, 0, 29, 20, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.248352}", "{'[5, 5, 3, 0, 4, 1, 0, 0, 29, 20, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.246828}", "{'[5, 5, 3, 0, 4, 1, 0, 0, 29, 20, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.250284}", "{'[5, 5, 3, 0, 4, 1, 0, 0, 29, 20, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.250328}", "{'[5, 5, 3, 0, 4, 1, 0, 0, 29, 20, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.250695}", "{'[5, 5, 3, 0, 4, 1, 0, 0, 29, 20, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.253654}", "{'[5, 5, 3, 0, 4, 1, 0, 0, 29, 20, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.250746}", "{'[5, 5, 3, 0, 4, 1, 0, 0, 29, 20, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.250753}", "{'[5, 5, 3, 0, 4, 1, 0, 0, 29, 20, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.247199}", "{'[5, 5, 3, 0, 4, 1, 0, 0, 29, 20, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.246545}", "{'[5, 5, 3, 0, 4, 1, 0, 0, 29, 20, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.251587}", "{'[5, 5, 3, 0, 4, 1, 0, 0, 29, 20, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.25192}", "{'[5, 5, 3, 0, 4, 1, 0, 0, 29, 20, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.250087}", "{'[5, 5, 3, 0, 4, 1, 0, 0, 29, 20, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.252069}", "{'[5, 5, 3, 0, 4, 1, 0, 0, 29, 20, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.251311}", "{'[5, 5, 3, 0, 4, 1, 0, 0, 29, 20, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.251967}", "{'[5, 5, 3, 0, 4, 1, 0, 0, 29, 20, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.252058}", "{'[5, 5, 3, 0, 4, 1, 0, 0, 29, 20, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.249852}", "{'[5, 5, 3, 0, 4, 1, 0, 0, 29, 20, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.250809}", "{'[5, 5, 3, 0, 4, 1, 0, 0, 29, 20, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.251922}"]
returning from 'run': {'[5, 5, 3, 0, 4, 1, 0, 0, 29, 20, 29, 0, 2, 0, 0, 1, 0, 1]': ([0.274429, 0.262577, 0.248605, 0.247533, 0.250916, 0.247042, 0.247612, 0.243125, 0.250109, 0.250824, 0.248352, 0.246828, 0.250284, 0.250328, 0.250695, 0.253654, 0.250746, 0.250753, 0.247199, 0.246545, 0.251587, 0.25192, 0.250087, 0.252069, 0.251311, 0.251967, 0.252058, 0.249852, 0.250809, 0.251922], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 5, 3, 0, 4, 1, 0, 0, 29, 20, 29, 0, 2, 0, 0, 1, 0, 1]': ([0.274429, 0.262577, 0.248605, 0.247533, 0.250916, 0.247042, 0.247612, 0.243125, 0.250109, 0.250824, 0.248352, 0.246828, 0.250284, 0.250328, 0.250695, 0.253654, 0.250746, 0.250753, 0.247199, 0.246545, 0.251587, 0.25192, 0.250087, 0.252069, 0.251311, 0.251967, 0.252058, 0.249852, 0.250809, 0.251922], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		447
        Multiplications: 	126
        Divisions: 		0
        Logical: 		0
        Reads: 			929
        Writes: 		189
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest18.exe __orio_perftest18.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest18.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest18.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest18.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest18.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		491
        Multiplications: 	172
        Divisions: 		0
        Logical: 		0
        Reads: 			1183
        Writes: 		269
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest19.exe __orio_perftest19.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest19.exe  
Program Test Output: 
{'[5, 2, 6, 6, 0, 0, 1, 0, 15, 0, 21, 29, 0, 0, 2, 1, 1, 1]' : 0.171935}
{'[5, 2, 6, 6, 0, 0, 1, 0, 15, 0, 21, 29, 0, 0, 2, 1, 1, 1]' : 0.168203}
{'[5, 2, 6, 6, 0, 0, 1, 0, 15, 0, 21, 29, 0, 0, 2, 1, 1, 1]' : 0.168515}
{'[5, 2, 6, 6, 0, 0, 1, 0, 15, 0, 21, 29, 0, 0, 2, 1, 1, 1]' : 0.171613}
{'[5, 2, 6, 6, 0, 0, 1, 0, 15, 0, 21, 29, 0, 0, 2, 1, 1, 1]' : 0.17163}
{'[5, 2, 6, 6, 0, 0, 1, 0, 15, 0, 21, 29, 0, 0, 2, 1, 1, 1]' : 0.169619}
{'[5, 2, 6, 6, 0, 0, 1, 0, 15, 0, 21, 29, 0, 0, 2, 1, 1, 1]' : 0.171611}
{'[5, 2, 6, 6, 0, 0, 1, 0, 15, 0, 21, 29, 0, 0, 2, 1, 1, 1]' : 0.170117}
{'[5, 2, 6, 6, 0, 0, 1, 0, 15, 0, 21, 29, 0, 0, 2, 1, 1, 1]' : 0.169455}
{'[5, 2, 6, 6, 0, 0, 1, 0, 15, 0, 21, 29, 0, 0, 2, 1, 1, 1]' : 0.17168}
{'[5, 2, 6, 6, 0, 0, 1, 0, 15, 0, 21, 29, 0, 0, 2, 1, 1, 1]' : 0.171632}
{'[5, 2, 6, 6, 0, 0, 1, 0, 15, 0, 21, 29, 0, 0, 2, 1, 1, 1]' : 0.16885}
{'[5, 2, 6, 6, 0, 0, 1, 0, 15, 0, 21, 29, 0, 0, 2, 1, 1, 1]' : 0.166667}
{'[5, 2, 6, 6, 0, 0, 1, 0, 15, 0, 21, 29, 0, 0, 2, 1, 1, 1]' : 0.167722}
{'[5, 2, 6, 6, 0, 0, 1, 0, 15, 0, 21, 29, 0, 0, 2, 1, 1, 1]' : 0.169753}
{'[5, 2, 6, 6, 0, 0, 1, 0, 15, 0, 21, 29, 0, 0, 2, 1, 1, 1]' : 0.170665}
{'[5, 2, 6, 6, 0, 0, 1, 0, 15, 0, 21, 29, 0, 0, 2, 1, 1, 1]' : 0.167055}
{'[5, 2, 6, 6, 0, 0, 1, 0, 15, 0, 21, 29, 0, 0, 2, 1, 1, 1]' : 0.166788}
{'[5, 2, 6, 6, 0, 0, 1, 0, 15, 0, 21, 29, 0, 0, 2, 1, 1, 1]' : 0.16679}
{'[5, 2, 6, 6, 0, 0, 1, 0, 15, 0, 21, 29, 0, 0, 2, 1, 1, 1]' : 0.163337}
{'[5, 2, 6, 6, 0, 0, 1, 0, 15, 0, 21, 29, 0, 0, 2, 1, 1, 1]' : 0.165023}
{'[5, 2, 6, 6, 0, 0, 1, 0, 15, 0, 21, 29, 0, 0, 2, 1, 1, 1]' : 0.166813}
{'[5, 2, 6, 6, 0, 0, 1, 0, 15, 0, 21, 29, 0, 0, 2, 1, 1, 1]' : 0.166872}
{'[5, 2, 6, 6, 0, 0, 1, 0, 15, 0, 21, 29, 0, 0, 2, 1, 1, 1]' : 0.167041}
{'[5, 2, 6, 6, 0, 0, 1, 0, 15, 0, 21, 29, 0, 0, 2, 1, 1, 1]' : 0.1668}
{'[5, 2, 6, 6, 0, 0, 1, 0, 15, 0, 21, 29, 0, 0, 2, 1, 1, 1]' : 0.167019}
{'[5, 2, 6, 6, 0, 0, 1, 0, 15, 0, 21, 29, 0, 0, 2, 1, 1, 1]' : 0.166987}
{'[5, 2, 6, 6, 0, 0, 1, 0, 15, 0, 21, 29, 0, 0, 2, 1, 1, 1]' : 0.166681}
{'[5, 2, 6, 6, 0, 0, 1, 0, 15, 0, 21, 29, 0, 0, 2, 1, 1, 1]' : 0.166876}
{'[5, 2, 6, 6, 0, 0, 1, 0, 15, 0, 21, 29, 0, 0, 2, 1, 1, 1]' : 0.167091}

out:
 ["{'[5, 2, 6, 6, 0, 0, 1, 0, 15, 0, 21, 29, 0, 0, 2, 1, 1, 1]' : 0.171935}", "{'[5, 2, 6, 6, 0, 0, 1, 0, 15, 0, 21, 29, 0, 0, 2, 1, 1, 1]' : 0.168203}", "{'[5, 2, 6, 6, 0, 0, 1, 0, 15, 0, 21, 29, 0, 0, 2, 1, 1, 1]' : 0.168515}", "{'[5, 2, 6, 6, 0, 0, 1, 0, 15, 0, 21, 29, 0, 0, 2, 1, 1, 1]' : 0.171613}", "{'[5, 2, 6, 6, 0, 0, 1, 0, 15, 0, 21, 29, 0, 0, 2, 1, 1, 1]' : 0.17163}", "{'[5, 2, 6, 6, 0, 0, 1, 0, 15, 0, 21, 29, 0, 0, 2, 1, 1, 1]' : 0.169619}", "{'[5, 2, 6, 6, 0, 0, 1, 0, 15, 0, 21, 29, 0, 0, 2, 1, 1, 1]' : 0.171611}", "{'[5, 2, 6, 6, 0, 0, 1, 0, 15, 0, 21, 29, 0, 0, 2, 1, 1, 1]' : 0.170117}", "{'[5, 2, 6, 6, 0, 0, 1, 0, 15, 0, 21, 29, 0, 0, 2, 1, 1, 1]' : 0.169455}", "{'[5, 2, 6, 6, 0, 0, 1, 0, 15, 0, 21, 29, 0, 0, 2, 1, 1, 1]' : 0.17168}", "{'[5, 2, 6, 6, 0, 0, 1, 0, 15, 0, 21, 29, 0, 0, 2, 1, 1, 1]' : 0.171632}", "{'[5, 2, 6, 6, 0, 0, 1, 0, 15, 0, 21, 29, 0, 0, 2, 1, 1, 1]' : 0.16885}", "{'[5, 2, 6, 6, 0, 0, 1, 0, 15, 0, 21, 29, 0, 0, 2, 1, 1, 1]' : 0.166667}", "{'[5, 2, 6, 6, 0, 0, 1, 0, 15, 0, 21, 29, 0, 0, 2, 1, 1, 1]' : 0.167722}", "{'[5, 2, 6, 6, 0, 0, 1, 0, 15, 0, 21, 29, 0, 0, 2, 1, 1, 1]' : 0.169753}", "{'[5, 2, 6, 6, 0, 0, 1, 0, 15, 0, 21, 29, 0, 0, 2, 1, 1, 1]' : 0.170665}", "{'[5, 2, 6, 6, 0, 0, 1, 0, 15, 0, 21, 29, 0, 0, 2, 1, 1, 1]' : 0.167055}", "{'[5, 2, 6, 6, 0, 0, 1, 0, 15, 0, 21, 29, 0, 0, 2, 1, 1, 1]' : 0.166788}", "{'[5, 2, 6, 6, 0, 0, 1, 0, 15, 0, 21, 29, 0, 0, 2, 1, 1, 1]' : 0.16679}", "{'[5, 2, 6, 6, 0, 0, 1, 0, 15, 0, 21, 29, 0, 0, 2, 1, 1, 1]' : 0.163337}", "{'[5, 2, 6, 6, 0, 0, 1, 0, 15, 0, 21, 29, 0, 0, 2, 1, 1, 1]' : 0.165023}", "{'[5, 2, 6, 6, 0, 0, 1, 0, 15, 0, 21, 29, 0, 0, 2, 1, 1, 1]' : 0.166813}", "{'[5, 2, 6, 6, 0, 0, 1, 0, 15, 0, 21, 29, 0, 0, 2, 1, 1, 1]' : 0.166872}", "{'[5, 2, 6, 6, 0, 0, 1, 0, 15, 0, 21, 29, 0, 0, 2, 1, 1, 1]' : 0.167041}", "{'[5, 2, 6, 6, 0, 0, 1, 0, 15, 0, 21, 29, 0, 0, 2, 1, 1, 1]' : 0.1668}", "{'[5, 2, 6, 6, 0, 0, 1, 0, 15, 0, 21, 29, 0, 0, 2, 1, 1, 1]' : 0.167019}", "{'[5, 2, 6, 6, 0, 0, 1, 0, 15, 0, 21, 29, 0, 0, 2, 1, 1, 1]' : 0.166987}", "{'[5, 2, 6, 6, 0, 0, 1, 0, 15, 0, 21, 29, 0, 0, 2, 1, 1, 1]' : 0.166681}", "{'[5, 2, 6, 6, 0, 0, 1, 0, 15, 0, 21, 29, 0, 0, 2, 1, 1, 1]' : 0.166876}", "{'[5, 2, 6, 6, 0, 0, 1, 0, 15, 0, 21, 29, 0, 0, 2, 1, 1, 1]' : 0.167091}"]
returning from 'run': {'[5, 2, 6, 6, 0, 0, 1, 0, 15, 0, 21, 29, 0, 0, 2, 1, 1, 1]': ([0.171935, 0.168203, 0.168515, 0.171613, 0.17163, 0.169619, 0.171611, 0.170117, 0.169455, 0.17168, 0.171632, 0.16885, 0.166667, 0.167722, 0.169753, 0.170665, 0.167055, 0.166788, 0.16679, 0.163337, 0.165023, 0.166813, 0.166872, 0.167041, 0.1668, 0.167019, 0.166987, 0.166681, 0.166876, 0.167091], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 2, 6, 6, 0, 0, 1, 0, 15, 0, 21, 29, 0, 0, 2, 1, 1, 1]': ([0.171935, 0.168203, 0.168515, 0.171613, 0.17163, 0.169619, 0.171611, 0.170117, 0.169455, 0.17168, 0.171632, 0.16885, 0.166667, 0.167722, 0.169753, 0.170665, 0.167055, 0.166788, 0.16679, 0.163337, 0.165023, 0.166813, 0.166872, 0.167041, 0.1668, 0.167019, 0.166987, 0.166681, 0.166876, 0.167091], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	39
        Max loop nest depth: 	6
        Additions: 		3251
        Multiplications: 	744
        Divisions: 		0
        Logical: 		0
        Reads: 			4883
        Writes: 		516
        Comparisons:		39
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest20.exe __orio_perftest20.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest20.exe  
Program Test Output: 
{'[2, 6, 2, 5, 0, 1, 0, 1, 28, 2, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.12087}
{'[2, 6, 2, 5, 0, 1, 0, 1, 28, 2, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.123787}
{'[2, 6, 2, 5, 0, 1, 0, 1, 28, 2, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.125923}
{'[2, 6, 2, 5, 0, 1, 0, 1, 28, 2, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.125992}
{'[2, 6, 2, 5, 0, 1, 0, 1, 28, 2, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.125946}
{'[2, 6, 2, 5, 0, 1, 0, 1, 28, 2, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.126116}
{'[2, 6, 2, 5, 0, 1, 0, 1, 28, 2, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.125771}
{'[2, 6, 2, 5, 0, 1, 0, 1, 28, 2, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.124587}
{'[2, 6, 2, 5, 0, 1, 0, 1, 28, 2, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.121634}
{'[2, 6, 2, 5, 0, 1, 0, 1, 28, 2, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.12333}
{'[2, 6, 2, 5, 0, 1, 0, 1, 28, 2, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.120576}
{'[2, 6, 2, 5, 0, 1, 0, 1, 28, 2, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.120433}
{'[2, 6, 2, 5, 0, 1, 0, 1, 28, 2, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.120513}
{'[2, 6, 2, 5, 0, 1, 0, 1, 28, 2, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.124941}
{'[2, 6, 2, 5, 0, 1, 0, 1, 28, 2, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.125888}
{'[2, 6, 2, 5, 0, 1, 0, 1, 28, 2, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.124943}
{'[2, 6, 2, 5, 0, 1, 0, 1, 28, 2, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.123372}
{'[2, 6, 2, 5, 0, 1, 0, 1, 28, 2, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.125721}
{'[2, 6, 2, 5, 0, 1, 0, 1, 28, 2, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.125174}
{'[2, 6, 2, 5, 0, 1, 0, 1, 28, 2, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.12343}
{'[2, 6, 2, 5, 0, 1, 0, 1, 28, 2, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.123399}
{'[2, 6, 2, 5, 0, 1, 0, 1, 28, 2, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.123502}
{'[2, 6, 2, 5, 0, 1, 0, 1, 28, 2, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.123268}
{'[2, 6, 2, 5, 0, 1, 0, 1, 28, 2, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.122941}
{'[2, 6, 2, 5, 0, 1, 0, 1, 28, 2, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.120529}
{'[2, 6, 2, 5, 0, 1, 0, 1, 28, 2, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.124523}
{'[2, 6, 2, 5, 0, 1, 0, 1, 28, 2, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.123944}
{'[2, 6, 2, 5, 0, 1, 0, 1, 28, 2, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.1238}
{'[2, 6, 2, 5, 0, 1, 0, 1, 28, 2, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.123543}
{'[2, 6, 2, 5, 0, 1, 0, 1, 28, 2, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.125156}

out:
 ["{'[2, 6, 2, 5, 0, 1, 0, 1, 28, 2, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.12087}", "{'[2, 6, 2, 5, 0, 1, 0, 1, 28, 2, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.123787}", "{'[2, 6, 2, 5, 0, 1, 0, 1, 28, 2, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.125923}", "{'[2, 6, 2, 5, 0, 1, 0, 1, 28, 2, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.125992}", "{'[2, 6, 2, 5, 0, 1, 0, 1, 28, 2, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.125946}", "{'[2, 6, 2, 5, 0, 1, 0, 1, 28, 2, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.126116}", "{'[2, 6, 2, 5, 0, 1, 0, 1, 28, 2, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.125771}", "{'[2, 6, 2, 5, 0, 1, 0, 1, 28, 2, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.124587}", "{'[2, 6, 2, 5, 0, 1, 0, 1, 28, 2, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.121634}", "{'[2, 6, 2, 5, 0, 1, 0, 1, 28, 2, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.12333}", "{'[2, 6, 2, 5, 0, 1, 0, 1, 28, 2, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.120576}", "{'[2, 6, 2, 5, 0, 1, 0, 1, 28, 2, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.120433}", "{'[2, 6, 2, 5, 0, 1, 0, 1, 28, 2, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.120513}", "{'[2, 6, 2, 5, 0, 1, 0, 1, 28, 2, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.124941}", "{'[2, 6, 2, 5, 0, 1, 0, 1, 28, 2, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.125888}", "{'[2, 6, 2, 5, 0, 1, 0, 1, 28, 2, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.124943}", "{'[2, 6, 2, 5, 0, 1, 0, 1, 28, 2, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.123372}", "{'[2, 6, 2, 5, 0, 1, 0, 1, 28, 2, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.125721}", "{'[2, 6, 2, 5, 0, 1, 0, 1, 28, 2, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.125174}", "{'[2, 6, 2, 5, 0, 1, 0, 1, 28, 2, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.12343}", "{'[2, 6, 2, 5, 0, 1, 0, 1, 28, 2, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.123399}", "{'[2, 6, 2, 5, 0, 1, 0, 1, 28, 2, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.123502}", "{'[2, 6, 2, 5, 0, 1, 0, 1, 28, 2, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.123268}", "{'[2, 6, 2, 5, 0, 1, 0, 1, 28, 2, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.122941}", "{'[2, 6, 2, 5, 0, 1, 0, 1, 28, 2, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.120529}", "{'[2, 6, 2, 5, 0, 1, 0, 1, 28, 2, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.124523}", "{'[2, 6, 2, 5, 0, 1, 0, 1, 28, 2, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.123944}", "{'[2, 6, 2, 5, 0, 1, 0, 1, 28, 2, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.1238}", "{'[2, 6, 2, 5, 0, 1, 0, 1, 28, 2, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.123543}", "{'[2, 6, 2, 5, 0, 1, 0, 1, 28, 2, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.125156}"]
returning from 'run': {'[2, 6, 2, 5, 0, 1, 0, 1, 28, 2, 0, 28, 1, 0, 0, 0, 1, 1]': ([0.12087, 0.123787, 0.125923, 0.125992, 0.125946, 0.126116, 0.125771, 0.124587, 0.121634, 0.12333, 0.120576, 0.120433, 0.120513, 0.124941, 0.125888, 0.124943, 0.123372, 0.125721, 0.125174, 0.12343, 0.123399, 0.123502, 0.123268, 0.122941, 0.120529, 0.124523, 0.123944, 0.1238, 0.123543, 0.125156], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 6, 2, 5, 0, 1, 0, 1, 28, 2, 0, 28, 1, 0, 0, 0, 1, 1]': ([0.12087, 0.123787, 0.125923, 0.125992, 0.125946, 0.126116, 0.125771, 0.124587, 0.121634, 0.12333, 0.120576, 0.120433, 0.120513, 0.124941, 0.125888, 0.124943, 0.123372, 0.125721, 0.125174, 0.12343, 0.123399, 0.123502, 0.123268, 0.122941, 0.120529, 0.124523, 0.123944, 0.1238, 0.123543, 0.125156], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	4
        Additions: 		531
        Multiplications: 	198
        Divisions: 		0
        Logical: 		0
        Reads: 			1277
        Writes: 		302
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest21.exe __orio_perftest21.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest21.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest21.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest21.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest21.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	6
        Additions: 		2498
        Multiplications: 	1116
        Divisions: 		0
        Logical: 		0
        Reads: 			4785
        Writes: 		789
        Comparisons:		25
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest22.exe __orio_perftest22.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest22.exe  
Program Test Output: 
{'[1, 2, 2, 2, 4, 4, 0, 1, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.136248}
{'[1, 2, 2, 2, 4, 4, 0, 1, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.136308}
{'[1, 2, 2, 2, 4, 4, 0, 1, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.136075}
{'[1, 2, 2, 2, 4, 4, 0, 1, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.122771}
{'[1, 2, 2, 2, 4, 4, 0, 1, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.121732}
{'[1, 2, 2, 2, 4, 4, 0, 1, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.121677}
{'[1, 2, 2, 2, 4, 4, 0, 1, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.121693}
{'[1, 2, 2, 2, 4, 4, 0, 1, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.120498}
{'[1, 2, 2, 2, 4, 4, 0, 1, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.118777}
{'[1, 2, 2, 2, 4, 4, 0, 1, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.12178}
{'[1, 2, 2, 2, 4, 4, 0, 1, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.12167}
{'[1, 2, 2, 2, 4, 4, 0, 1, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.12171}
{'[1, 2, 2, 2, 4, 4, 0, 1, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.121663}
{'[1, 2, 2, 2, 4, 4, 0, 1, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.122123}
{'[1, 2, 2, 2, 4, 4, 0, 1, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.121983}
{'[1, 2, 2, 2, 4, 4, 0, 1, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.122041}
{'[1, 2, 2, 2, 4, 4, 0, 1, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.122003}
{'[1, 2, 2, 2, 4, 4, 0, 1, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.119578}
{'[1, 2, 2, 2, 4, 4, 0, 1, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.118752}
{'[1, 2, 2, 2, 4, 4, 0, 1, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.11897}
{'[1, 2, 2, 2, 4, 4, 0, 1, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.118811}
{'[1, 2, 2, 2, 4, 4, 0, 1, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.119122}
{'[1, 2, 2, 2, 4, 4, 0, 1, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.118941}
{'[1, 2, 2, 2, 4, 4, 0, 1, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.11946}
{'[1, 2, 2, 2, 4, 4, 0, 1, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.11894}
{'[1, 2, 2, 2, 4, 4, 0, 1, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.118942}
{'[1, 2, 2, 2, 4, 4, 0, 1, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.118903}
{'[1, 2, 2, 2, 4, 4, 0, 1, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.118883}
{'[1, 2, 2, 2, 4, 4, 0, 1, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.118914}
{'[1, 2, 2, 2, 4, 4, 0, 1, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.119288}

out:
 ["{'[1, 2, 2, 2, 4, 4, 0, 1, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.136248}", "{'[1, 2, 2, 2, 4, 4, 0, 1, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.136308}", "{'[1, 2, 2, 2, 4, 4, 0, 1, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.136075}", "{'[1, 2, 2, 2, 4, 4, 0, 1, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.122771}", "{'[1, 2, 2, 2, 4, 4, 0, 1, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.121732}", "{'[1, 2, 2, 2, 4, 4, 0, 1, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.121677}", "{'[1, 2, 2, 2, 4, 4, 0, 1, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.121693}", "{'[1, 2, 2, 2, 4, 4, 0, 1, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.120498}", "{'[1, 2, 2, 2, 4, 4, 0, 1, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.118777}", "{'[1, 2, 2, 2, 4, 4, 0, 1, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.12178}", "{'[1, 2, 2, 2, 4, 4, 0, 1, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.12167}", "{'[1, 2, 2, 2, 4, 4, 0, 1, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.12171}", "{'[1, 2, 2, 2, 4, 4, 0, 1, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.121663}", "{'[1, 2, 2, 2, 4, 4, 0, 1, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.122123}", "{'[1, 2, 2, 2, 4, 4, 0, 1, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.121983}", "{'[1, 2, 2, 2, 4, 4, 0, 1, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.122041}", "{'[1, 2, 2, 2, 4, 4, 0, 1, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.122003}", "{'[1, 2, 2, 2, 4, 4, 0, 1, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.119578}", "{'[1, 2, 2, 2, 4, 4, 0, 1, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.118752}", "{'[1, 2, 2, 2, 4, 4, 0, 1, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.11897}", "{'[1, 2, 2, 2, 4, 4, 0, 1, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.118811}", "{'[1, 2, 2, 2, 4, 4, 0, 1, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.119122}", "{'[1, 2, 2, 2, 4, 4, 0, 1, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.118941}", "{'[1, 2, 2, 2, 4, 4, 0, 1, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.11946}", "{'[1, 2, 2, 2, 4, 4, 0, 1, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.11894}", "{'[1, 2, 2, 2, 4, 4, 0, 1, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.118942}", "{'[1, 2, 2, 2, 4, 4, 0, 1, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.118903}", "{'[1, 2, 2, 2, 4, 4, 0, 1, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.118883}", "{'[1, 2, 2, 2, 4, 4, 0, 1, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.118914}", "{'[1, 2, 2, 2, 4, 4, 0, 1, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]' : 0.119288}"]
returning from 'run': {'[1, 2, 2, 2, 4, 4, 0, 1, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]': ([0.136248, 0.136308, 0.136075, 0.122771, 0.121732, 0.121677, 0.121693, 0.120498, 0.118777, 0.12178, 0.12167, 0.12171, 0.121663, 0.122123, 0.121983, 0.122041, 0.122003, 0.119578, 0.118752, 0.11897, 0.118811, 0.119122, 0.118941, 0.11946, 0.11894, 0.118942, 0.118903, 0.118883, 0.118914, 0.119288], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 2, 2, 2, 4, 4, 0, 1, 0, 0, 29, 29, 1, 0, 0, 1, 1, 0]': ([0.136248, 0.136308, 0.136075, 0.122771, 0.121732, 0.121677, 0.121693, 0.120498, 0.118777, 0.12178, 0.12167, 0.12171, 0.121663, 0.122123, 0.121983, 0.122041, 0.122003, 0.119578, 0.118752, 0.11897, 0.118811, 0.119122, 0.118941, 0.11946, 0.11894, 0.118942, 0.118903, 0.118883, 0.118914, 0.119288], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	4
        Additions: 		443
        Multiplications: 	108
        Divisions: 		0
        Logical: 		0
        Reads: 			813
        Writes: 		133
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest23.exe __orio_perftest23.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest23.exe  
Program Test Output: 
{'[0, 0, 0, 6, 4, 1, 1, 0, 24, 4, 13, 0, 0, 1, 0, 0, 1, 0]' : 0.138149}
{'[0, 0, 0, 6, 4, 1, 1, 0, 24, 4, 13, 0, 0, 1, 0, 0, 1, 0]' : 0.135735}
{'[0, 0, 0, 6, 4, 1, 1, 0, 24, 4, 13, 0, 0, 1, 0, 0, 1, 0]' : 0.136141}
{'[0, 0, 0, 6, 4, 1, 1, 0, 24, 4, 13, 0, 0, 1, 0, 0, 1, 0]' : 0.13799}
{'[0, 0, 0, 6, 4, 1, 1, 0, 24, 4, 13, 0, 0, 1, 0, 0, 1, 0]' : 0.138016}
{'[0, 0, 0, 6, 4, 1, 1, 0, 24, 4, 13, 0, 0, 1, 0, 0, 1, 0]' : 0.137936}
{'[0, 0, 0, 6, 4, 1, 1, 0, 24, 4, 13, 0, 0, 1, 0, 0, 1, 0]' : 0.138603}
{'[0, 0, 0, 6, 4, 1, 1, 0, 24, 4, 13, 0, 0, 1, 0, 0, 1, 0]' : 0.137836}
{'[0, 0, 0, 6, 4, 1, 1, 0, 24, 4, 13, 0, 0, 1, 0, 0, 1, 0]' : 0.138056}
{'[0, 0, 0, 6, 4, 1, 1, 0, 24, 4, 13, 0, 0, 1, 0, 0, 1, 0]' : 0.138257}
{'[0, 0, 0, 6, 4, 1, 1, 0, 24, 4, 13, 0, 0, 1, 0, 0, 1, 0]' : 0.137998}
{'[0, 0, 0, 6, 4, 1, 1, 0, 24, 4, 13, 0, 0, 1, 0, 0, 1, 0]' : 0.138052}
{'[0, 0, 0, 6, 4, 1, 1, 0, 24, 4, 13, 0, 0, 1, 0, 0, 1, 0]' : 0.138219}
{'[0, 0, 0, 6, 4, 1, 1, 0, 24, 4, 13, 0, 0, 1, 0, 0, 1, 0]' : 0.138264}
{'[0, 0, 0, 6, 4, 1, 1, 0, 24, 4, 13, 0, 0, 1, 0, 0, 1, 0]' : 0.137954}
{'[0, 0, 0, 6, 4, 1, 1, 0, 24, 4, 13, 0, 0, 1, 0, 0, 1, 0]' : 0.137914}
{'[0, 0, 0, 6, 4, 1, 1, 0, 24, 4, 13, 0, 0, 1, 0, 0, 1, 0]' : 0.137952}
{'[0, 0, 0, 6, 4, 1, 1, 0, 24, 4, 13, 0, 0, 1, 0, 0, 1, 0]' : 0.138344}
{'[0, 0, 0, 6, 4, 1, 1, 0, 24, 4, 13, 0, 0, 1, 0, 0, 1, 0]' : 0.138139}
{'[0, 0, 0, 6, 4, 1, 1, 0, 24, 4, 13, 0, 0, 1, 0, 0, 1, 0]' : 0.137978}
{'[0, 0, 0, 6, 4, 1, 1, 0, 24, 4, 13, 0, 0, 1, 0, 0, 1, 0]' : 0.138276}
{'[0, 0, 0, 6, 4, 1, 1, 0, 24, 4, 13, 0, 0, 1, 0, 0, 1, 0]' : 0.137937}
{'[0, 0, 0, 6, 4, 1, 1, 0, 24, 4, 13, 0, 0, 1, 0, 0, 1, 0]' : 0.137952}
{'[0, 0, 0, 6, 4, 1, 1, 0, 24, 4, 13, 0, 0, 1, 0, 0, 1, 0]' : 0.137976}
{'[0, 0, 0, 6, 4, 1, 1, 0, 24, 4, 13, 0, 0, 1, 0, 0, 1, 0]' : 0.138057}
{'[0, 0, 0, 6, 4, 1, 1, 0, 24, 4, 13, 0, 0, 1, 0, 0, 1, 0]' : 0.138329}
{'[0, 0, 0, 6, 4, 1, 1, 0, 24, 4, 13, 0, 0, 1, 0, 0, 1, 0]' : 0.138292}
{'[0, 0, 0, 6, 4, 1, 1, 0, 24, 4, 13, 0, 0, 1, 0, 0, 1, 0]' : 0.138078}
{'[0, 0, 0, 6, 4, 1, 1, 0, 24, 4, 13, 0, 0, 1, 0, 0, 1, 0]' : 0.138407}
{'[0, 0, 0, 6, 4, 1, 1, 0, 24, 4, 13, 0, 0, 1, 0, 0, 1, 0]' : 0.138074}

out:
 ["{'[0, 0, 0, 6, 4, 1, 1, 0, 24, 4, 13, 0, 0, 1, 0, 0, 1, 0]' : 0.138149}", "{'[0, 0, 0, 6, 4, 1, 1, 0, 24, 4, 13, 0, 0, 1, 0, 0, 1, 0]' : 0.135735}", "{'[0, 0, 0, 6, 4, 1, 1, 0, 24, 4, 13, 0, 0, 1, 0, 0, 1, 0]' : 0.136141}", "{'[0, 0, 0, 6, 4, 1, 1, 0, 24, 4, 13, 0, 0, 1, 0, 0, 1, 0]' : 0.13799}", "{'[0, 0, 0, 6, 4, 1, 1, 0, 24, 4, 13, 0, 0, 1, 0, 0, 1, 0]' : 0.138016}", "{'[0, 0, 0, 6, 4, 1, 1, 0, 24, 4, 13, 0, 0, 1, 0, 0, 1, 0]' : 0.137936}", "{'[0, 0, 0, 6, 4, 1, 1, 0, 24, 4, 13, 0, 0, 1, 0, 0, 1, 0]' : 0.138603}", "{'[0, 0, 0, 6, 4, 1, 1, 0, 24, 4, 13, 0, 0, 1, 0, 0, 1, 0]' : 0.137836}", "{'[0, 0, 0, 6, 4, 1, 1, 0, 24, 4, 13, 0, 0, 1, 0, 0, 1, 0]' : 0.138056}", "{'[0, 0, 0, 6, 4, 1, 1, 0, 24, 4, 13, 0, 0, 1, 0, 0, 1, 0]' : 0.138257}", "{'[0, 0, 0, 6, 4, 1, 1, 0, 24, 4, 13, 0, 0, 1, 0, 0, 1, 0]' : 0.137998}", "{'[0, 0, 0, 6, 4, 1, 1, 0, 24, 4, 13, 0, 0, 1, 0, 0, 1, 0]' : 0.138052}", "{'[0, 0, 0, 6, 4, 1, 1, 0, 24, 4, 13, 0, 0, 1, 0, 0, 1, 0]' : 0.138219}", "{'[0, 0, 0, 6, 4, 1, 1, 0, 24, 4, 13, 0, 0, 1, 0, 0, 1, 0]' : 0.138264}", "{'[0, 0, 0, 6, 4, 1, 1, 0, 24, 4, 13, 0, 0, 1, 0, 0, 1, 0]' : 0.137954}", "{'[0, 0, 0, 6, 4, 1, 1, 0, 24, 4, 13, 0, 0, 1, 0, 0, 1, 0]' : 0.137914}", "{'[0, 0, 0, 6, 4, 1, 1, 0, 24, 4, 13, 0, 0, 1, 0, 0, 1, 0]' : 0.137952}", "{'[0, 0, 0, 6, 4, 1, 1, 0, 24, 4, 13, 0, 0, 1, 0, 0, 1, 0]' : 0.138344}", "{'[0, 0, 0, 6, 4, 1, 1, 0, 24, 4, 13, 0, 0, 1, 0, 0, 1, 0]' : 0.138139}", "{'[0, 0, 0, 6, 4, 1, 1, 0, 24, 4, 13, 0, 0, 1, 0, 0, 1, 0]' : 0.137978}", "{'[0, 0, 0, 6, 4, 1, 1, 0, 24, 4, 13, 0, 0, 1, 0, 0, 1, 0]' : 0.138276}", "{'[0, 0, 0, 6, 4, 1, 1, 0, 24, 4, 13, 0, 0, 1, 0, 0, 1, 0]' : 0.137937}", "{'[0, 0, 0, 6, 4, 1, 1, 0, 24, 4, 13, 0, 0, 1, 0, 0, 1, 0]' : 0.137952}", "{'[0, 0, 0, 6, 4, 1, 1, 0, 24, 4, 13, 0, 0, 1, 0, 0, 1, 0]' : 0.137976}", "{'[0, 0, 0, 6, 4, 1, 1, 0, 24, 4, 13, 0, 0, 1, 0, 0, 1, 0]' : 0.138057}", "{'[0, 0, 0, 6, 4, 1, 1, 0, 24, 4, 13, 0, 0, 1, 0, 0, 1, 0]' : 0.138329}", "{'[0, 0, 0, 6, 4, 1, 1, 0, 24, 4, 13, 0, 0, 1, 0, 0, 1, 0]' : 0.138292}", "{'[0, 0, 0, 6, 4, 1, 1, 0, 24, 4, 13, 0, 0, 1, 0, 0, 1, 0]' : 0.138078}", "{'[0, 0, 0, 6, 4, 1, 1, 0, 24, 4, 13, 0, 0, 1, 0, 0, 1, 0]' : 0.138407}", "{'[0, 0, 0, 6, 4, 1, 1, 0, 24, 4, 13, 0, 0, 1, 0, 0, 1, 0]' : 0.138074}"]
returning from 'run': {'[0, 0, 0, 6, 4, 1, 1, 0, 24, 4, 13, 0, 0, 1, 0, 0, 1, 0]': ([0.138149, 0.135735, 0.136141, 0.13799, 0.138016, 0.137936, 0.138603, 0.137836, 0.138056, 0.138257, 0.137998, 0.138052, 0.138219, 0.138264, 0.137954, 0.137914, 0.137952, 0.138344, 0.138139, 0.137978, 0.138276, 0.137937, 0.137952, 0.137976, 0.138057, 0.138329, 0.138292, 0.138078, 0.138407, 0.138074], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 0, 6, 4, 1, 1, 0, 24, 4, 13, 0, 0, 1, 0, 0, 1, 0]': ([0.138149, 0.135735, 0.136141, 0.13799, 0.138016, 0.137936, 0.138603, 0.137836, 0.138056, 0.138257, 0.137998, 0.138052, 0.138219, 0.138264, 0.137954, 0.137914, 0.137952, 0.138344, 0.138139, 0.137978, 0.138276, 0.137937, 0.137952, 0.137976, 0.138057, 0.138329, 0.138292, 0.138078, 0.138407, 0.138074], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	92
        Max loop nest depth: 	6
        Additions: 		958
        Multiplications: 	312
        Divisions: 		0
        Logical: 		0
        Reads: 			2391
        Writes: 		538
        Comparisons:		92
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest24.exe __orio_perftest24.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest24.exe  
Program Test Output: 
{'[6, 2, 5, 6, 1, 4, 0, 1, 7, 29, 1, 0, 1, 0, 0, 1, 1, 0]' : 0.103405}
{'[6, 2, 5, 6, 1, 4, 0, 1, 7, 29, 1, 0, 1, 0, 0, 1, 1, 0]' : 0.103196}
{'[6, 2, 5, 6, 1, 4, 0, 1, 7, 29, 1, 0, 1, 0, 0, 1, 1, 0]' : 0.103224}
{'[6, 2, 5, 6, 1, 4, 0, 1, 7, 29, 1, 0, 1, 0, 0, 1, 1, 0]' : 0.103143}
{'[6, 2, 5, 6, 1, 4, 0, 1, 7, 29, 1, 0, 1, 0, 0, 1, 1, 0]' : 0.103077}
{'[6, 2, 5, 6, 1, 4, 0, 1, 7, 29, 1, 0, 1, 0, 0, 1, 1, 0]' : 0.103351}
{'[6, 2, 5, 6, 1, 4, 0, 1, 7, 29, 1, 0, 1, 0, 0, 1, 1, 0]' : 0.103311}
{'[6, 2, 5, 6, 1, 4, 0, 1, 7, 29, 1, 0, 1, 0, 0, 1, 1, 0]' : 0.103183}
{'[6, 2, 5, 6, 1, 4, 0, 1, 7, 29, 1, 0, 1, 0, 0, 1, 1, 0]' : 0.103354}
{'[6, 2, 5, 6, 1, 4, 0, 1, 7, 29, 1, 0, 1, 0, 0, 1, 1, 0]' : 0.103252}
{'[6, 2, 5, 6, 1, 4, 0, 1, 7, 29, 1, 0, 1, 0, 0, 1, 1, 0]' : 0.103168}
{'[6, 2, 5, 6, 1, 4, 0, 1, 7, 29, 1, 0, 1, 0, 0, 1, 1, 0]' : 0.103235}
{'[6, 2, 5, 6, 1, 4, 0, 1, 7, 29, 1, 0, 1, 0, 0, 1, 1, 0]' : 0.103282}
{'[6, 2, 5, 6, 1, 4, 0, 1, 7, 29, 1, 0, 1, 0, 0, 1, 1, 0]' : 0.103293}
{'[6, 2, 5, 6, 1, 4, 0, 1, 7, 29, 1, 0, 1, 0, 0, 1, 1, 0]' : 0.103127}
{'[6, 2, 5, 6, 1, 4, 0, 1, 7, 29, 1, 0, 1, 0, 0, 1, 1, 0]' : 0.103249}
{'[6, 2, 5, 6, 1, 4, 0, 1, 7, 29, 1, 0, 1, 0, 0, 1, 1, 0]' : 0.103074}
{'[6, 2, 5, 6, 1, 4, 0, 1, 7, 29, 1, 0, 1, 0, 0, 1, 1, 0]' : 0.103444}
{'[6, 2, 5, 6, 1, 4, 0, 1, 7, 29, 1, 0, 1, 0, 0, 1, 1, 0]' : 0.103534}
{'[6, 2, 5, 6, 1, 4, 0, 1, 7, 29, 1, 0, 1, 0, 0, 1, 1, 0]' : 0.103182}
{'[6, 2, 5, 6, 1, 4, 0, 1, 7, 29, 1, 0, 1, 0, 0, 1, 1, 0]' : 0.103092}
{'[6, 2, 5, 6, 1, 4, 0, 1, 7, 29, 1, 0, 1, 0, 0, 1, 1, 0]' : 0.103161}
{'[6, 2, 5, 6, 1, 4, 0, 1, 7, 29, 1, 0, 1, 0, 0, 1, 1, 0]' : 0.103308}
{'[6, 2, 5, 6, 1, 4, 0, 1, 7, 29, 1, 0, 1, 0, 0, 1, 1, 0]' : 0.103128}
{'[6, 2, 5, 6, 1, 4, 0, 1, 7, 29, 1, 0, 1, 0, 0, 1, 1, 0]' : 0.103131}
{'[6, 2, 5, 6, 1, 4, 0, 1, 7, 29, 1, 0, 1, 0, 0, 1, 1, 0]' : 0.103403}
{'[6, 2, 5, 6, 1, 4, 0, 1, 7, 29, 1, 0, 1, 0, 0, 1, 1, 0]' : 0.103194}
{'[6, 2, 5, 6, 1, 4, 0, 1, 7, 29, 1, 0, 1, 0, 0, 1, 1, 0]' : 0.103498}
{'[6, 2, 5, 6, 1, 4, 0, 1, 7, 29, 1, 0, 1, 0, 0, 1, 1, 0]' : 0.103148}
{'[6, 2, 5, 6, 1, 4, 0, 1, 7, 29, 1, 0, 1, 0, 0, 1, 1, 0]' : 0.103262}

out:
 ["{'[6, 2, 5, 6, 1, 4, 0, 1, 7, 29, 1, 0, 1, 0, 0, 1, 1, 0]' : 0.103405}", "{'[6, 2, 5, 6, 1, 4, 0, 1, 7, 29, 1, 0, 1, 0, 0, 1, 1, 0]' : 0.103196}", "{'[6, 2, 5, 6, 1, 4, 0, 1, 7, 29, 1, 0, 1, 0, 0, 1, 1, 0]' : 0.103224}", "{'[6, 2, 5, 6, 1, 4, 0, 1, 7, 29, 1, 0, 1, 0, 0, 1, 1, 0]' : 0.103143}", "{'[6, 2, 5, 6, 1, 4, 0, 1, 7, 29, 1, 0, 1, 0, 0, 1, 1, 0]' : 0.103077}", "{'[6, 2, 5, 6, 1, 4, 0, 1, 7, 29, 1, 0, 1, 0, 0, 1, 1, 0]' : 0.103351}", "{'[6, 2, 5, 6, 1, 4, 0, 1, 7, 29, 1, 0, 1, 0, 0, 1, 1, 0]' : 0.103311}", "{'[6, 2, 5, 6, 1, 4, 0, 1, 7, 29, 1, 0, 1, 0, 0, 1, 1, 0]' : 0.103183}", "{'[6, 2, 5, 6, 1, 4, 0, 1, 7, 29, 1, 0, 1, 0, 0, 1, 1, 0]' : 0.103354}", "{'[6, 2, 5, 6, 1, 4, 0, 1, 7, 29, 1, 0, 1, 0, 0, 1, 1, 0]' : 0.103252}", "{'[6, 2, 5, 6, 1, 4, 0, 1, 7, 29, 1, 0, 1, 0, 0, 1, 1, 0]' : 0.103168}", "{'[6, 2, 5, 6, 1, 4, 0, 1, 7, 29, 1, 0, 1, 0, 0, 1, 1, 0]' : 0.103235}", "{'[6, 2, 5, 6, 1, 4, 0, 1, 7, 29, 1, 0, 1, 0, 0, 1, 1, 0]' : 0.103282}", "{'[6, 2, 5, 6, 1, 4, 0, 1, 7, 29, 1, 0, 1, 0, 0, 1, 1, 0]' : 0.103293}", "{'[6, 2, 5, 6, 1, 4, 0, 1, 7, 29, 1, 0, 1, 0, 0, 1, 1, 0]' : 0.103127}", "{'[6, 2, 5, 6, 1, 4, 0, 1, 7, 29, 1, 0, 1, 0, 0, 1, 1, 0]' : 0.103249}", "{'[6, 2, 5, 6, 1, 4, 0, 1, 7, 29, 1, 0, 1, 0, 0, 1, 1, 0]' : 0.103074}", "{'[6, 2, 5, 6, 1, 4, 0, 1, 7, 29, 1, 0, 1, 0, 0, 1, 1, 0]' : 0.103444}", "{'[6, 2, 5, 6, 1, 4, 0, 1, 7, 29, 1, 0, 1, 0, 0, 1, 1, 0]' : 0.103534}", "{'[6, 2, 5, 6, 1, 4, 0, 1, 7, 29, 1, 0, 1, 0, 0, 1, 1, 0]' : 0.103182}", "{'[6, 2, 5, 6, 1, 4, 0, 1, 7, 29, 1, 0, 1, 0, 0, 1, 1, 0]' : 0.103092}", "{'[6, 2, 5, 6, 1, 4, 0, 1, 7, 29, 1, 0, 1, 0, 0, 1, 1, 0]' : 0.103161}", "{'[6, 2, 5, 6, 1, 4, 0, 1, 7, 29, 1, 0, 1, 0, 0, 1, 1, 0]' : 0.103308}", "{'[6, 2, 5, 6, 1, 4, 0, 1, 7, 29, 1, 0, 1, 0, 0, 1, 1, 0]' : 0.103128}", "{'[6, 2, 5, 6, 1, 4, 0, 1, 7, 29, 1, 0, 1, 0, 0, 1, 1, 0]' : 0.103131}", "{'[6, 2, 5, 6, 1, 4, 0, 1, 7, 29, 1, 0, 1, 0, 0, 1, 1, 0]' : 0.103403}", "{'[6, 2, 5, 6, 1, 4, 0, 1, 7, 29, 1, 0, 1, 0, 0, 1, 1, 0]' : 0.103194}", "{'[6, 2, 5, 6, 1, 4, 0, 1, 7, 29, 1, 0, 1, 0, 0, 1, 1, 0]' : 0.103498}", "{'[6, 2, 5, 6, 1, 4, 0, 1, 7, 29, 1, 0, 1, 0, 0, 1, 1, 0]' : 0.103148}", "{'[6, 2, 5, 6, 1, 4, 0, 1, 7, 29, 1, 0, 1, 0, 0, 1, 1, 0]' : 0.103262}"]
returning from 'run': {'[6, 2, 5, 6, 1, 4, 0, 1, 7, 29, 1, 0, 1, 0, 0, 1, 1, 0]': ([0.103405, 0.103196, 0.103224, 0.103143, 0.103077, 0.103351, 0.103311, 0.103183, 0.103354, 0.103252, 0.103168, 0.103235, 0.103282, 0.103293, 0.103127, 0.103249, 0.103074, 0.103444, 0.103534, 0.103182, 0.103092, 0.103161, 0.103308, 0.103128, 0.103131, 0.103403, 0.103194, 0.103498, 0.103148, 0.103262], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 2, 5, 6, 1, 4, 0, 1, 7, 29, 1, 0, 1, 0, 0, 1, 1, 0]': ([0.103405, 0.103196, 0.103224, 0.103143, 0.103077, 0.103351, 0.103311, 0.103183, 0.103354, 0.103252, 0.103168, 0.103235, 0.103282, 0.103293, 0.103127, 0.103249, 0.103074, 0.103444, 0.103534, 0.103182, 0.103092, 0.103161, 0.103308, 0.103128, 0.103131, 0.103403, 0.103194, 0.103498, 0.103148, 0.103262], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	27
        Max loop nest depth: 	5
        Additions: 		2313
        Multiplications: 	720
        Divisions: 		0
        Logical: 		0
        Reads: 			3873
        Writes: 		456
        Comparisons:		27
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest25.exe __orio_perftest25.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest25.exe  
Program Test Output: 
{'[1, 2, 0, 0, 6, 6, 0, 0, 8, 14, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.111313}
{'[1, 2, 0, 0, 6, 6, 0, 0, 8, 14, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.110004}
{'[1, 2, 0, 0, 6, 6, 0, 0, 8, 14, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.109625}
{'[1, 2, 0, 0, 6, 6, 0, 0, 8, 14, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.111844}
{'[1, 2, 0, 0, 6, 6, 0, 0, 8, 14, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.112493}
{'[1, 2, 0, 0, 6, 6, 0, 0, 8, 14, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.110628}
{'[1, 2, 0, 0, 6, 6, 0, 0, 8, 14, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.109524}
{'[1, 2, 0, 0, 6, 6, 0, 0, 8, 14, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.109644}
{'[1, 2, 0, 0, 6, 6, 0, 0, 8, 14, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.109637}
{'[1, 2, 0, 0, 6, 6, 0, 0, 8, 14, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.109864}
{'[1, 2, 0, 0, 6, 6, 0, 0, 8, 14, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.111314}
{'[1, 2, 0, 0, 6, 6, 0, 0, 8, 14, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.109933}
{'[1, 2, 0, 0, 6, 6, 0, 0, 8, 14, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.11003}
{'[1, 2, 0, 0, 6, 6, 0, 0, 8, 14, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.108913}
{'[1, 2, 0, 0, 6, 6, 0, 0, 8, 14, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.109794}
{'[1, 2, 0, 0, 6, 6, 0, 0, 8, 14, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.109716}
{'[1, 2, 0, 0, 6, 6, 0, 0, 8, 14, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.109728}
{'[1, 2, 0, 0, 6, 6, 0, 0, 8, 14, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.109674}
{'[1, 2, 0, 0, 6, 6, 0, 0, 8, 14, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.109756}
{'[1, 2, 0, 0, 6, 6, 0, 0, 8, 14, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.110633}
{'[1, 2, 0, 0, 6, 6, 0, 0, 8, 14, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.112499}
{'[1, 2, 0, 0, 6, 6, 0, 0, 8, 14, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.111094}
{'[1, 2, 0, 0, 6, 6, 0, 0, 8, 14, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.108929}
{'[1, 2, 0, 0, 6, 6, 0, 0, 8, 14, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.109575}
{'[1, 2, 0, 0, 6, 6, 0, 0, 8, 14, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.10891}
{'[1, 2, 0, 0, 6, 6, 0, 0, 8, 14, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.107243}
{'[1, 2, 0, 0, 6, 6, 0, 0, 8, 14, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.107192}
{'[1, 2, 0, 0, 6, 6, 0, 0, 8, 14, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.108701}
{'[1, 2, 0, 0, 6, 6, 0, 0, 8, 14, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.109701}
{'[1, 2, 0, 0, 6, 6, 0, 0, 8, 14, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.111758}

out:
 ["{'[1, 2, 0, 0, 6, 6, 0, 0, 8, 14, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.111313}", "{'[1, 2, 0, 0, 6, 6, 0, 0, 8, 14, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.110004}", "{'[1, 2, 0, 0, 6, 6, 0, 0, 8, 14, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.109625}", "{'[1, 2, 0, 0, 6, 6, 0, 0, 8, 14, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.111844}", "{'[1, 2, 0, 0, 6, 6, 0, 0, 8, 14, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.112493}", "{'[1, 2, 0, 0, 6, 6, 0, 0, 8, 14, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.110628}", "{'[1, 2, 0, 0, 6, 6, 0, 0, 8, 14, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.109524}", "{'[1, 2, 0, 0, 6, 6, 0, 0, 8, 14, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.109644}", "{'[1, 2, 0, 0, 6, 6, 0, 0, 8, 14, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.109637}", "{'[1, 2, 0, 0, 6, 6, 0, 0, 8, 14, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.109864}", "{'[1, 2, 0, 0, 6, 6, 0, 0, 8, 14, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.111314}", "{'[1, 2, 0, 0, 6, 6, 0, 0, 8, 14, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.109933}", "{'[1, 2, 0, 0, 6, 6, 0, 0, 8, 14, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.11003}", "{'[1, 2, 0, 0, 6, 6, 0, 0, 8, 14, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.108913}", "{'[1, 2, 0, 0, 6, 6, 0, 0, 8, 14, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.109794}", "{'[1, 2, 0, 0, 6, 6, 0, 0, 8, 14, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.109716}", "{'[1, 2, 0, 0, 6, 6, 0, 0, 8, 14, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.109728}", "{'[1, 2, 0, 0, 6, 6, 0, 0, 8, 14, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.109674}", "{'[1, 2, 0, 0, 6, 6, 0, 0, 8, 14, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.109756}", "{'[1, 2, 0, 0, 6, 6, 0, 0, 8, 14, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.110633}", "{'[1, 2, 0, 0, 6, 6, 0, 0, 8, 14, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.112499}", "{'[1, 2, 0, 0, 6, 6, 0, 0, 8, 14, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.111094}", "{'[1, 2, 0, 0, 6, 6, 0, 0, 8, 14, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.108929}", "{'[1, 2, 0, 0, 6, 6, 0, 0, 8, 14, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.109575}", "{'[1, 2, 0, 0, 6, 6, 0, 0, 8, 14, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.10891}", "{'[1, 2, 0, 0, 6, 6, 0, 0, 8, 14, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.107243}", "{'[1, 2, 0, 0, 6, 6, 0, 0, 8, 14, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.107192}", "{'[1, 2, 0, 0, 6, 6, 0, 0, 8, 14, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.108701}", "{'[1, 2, 0, 0, 6, 6, 0, 0, 8, 14, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.109701}", "{'[1, 2, 0, 0, 6, 6, 0, 0, 8, 14, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.111758}"]
returning from 'run': {'[1, 2, 0, 0, 6, 6, 0, 0, 8, 14, 4, 0, 1, 0, 1, 0, 0, 1]': ([0.111313, 0.110004, 0.109625, 0.111844, 0.112493, 0.110628, 0.109524, 0.109644, 0.109637, 0.109864, 0.111314, 0.109933, 0.11003, 0.108913, 0.109794, 0.109716, 0.109728, 0.109674, 0.109756, 0.110633, 0.112499, 0.111094, 0.108929, 0.109575, 0.10891, 0.107243, 0.107192, 0.108701, 0.109701, 0.111758], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 2, 0, 0, 6, 6, 0, 0, 8, 14, 4, 0, 1, 0, 1, 0, 0, 1]': ([0.111313, 0.110004, 0.109625, 0.111844, 0.112493, 0.110628, 0.109524, 0.109644, 0.109637, 0.109864, 0.111314, 0.109933, 0.11003, 0.108913, 0.109794, 0.109716, 0.109728, 0.109674, 0.109756, 0.110633, 0.112499, 0.111094, 0.108929, 0.109575, 0.10891, 0.107243, 0.107192, 0.108701, 0.109701, 0.111758], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		438
        Multiplications: 	124
        Divisions: 		0
        Logical: 		0
        Reads: 			871
        Writes: 		117
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest26.exe __orio_perftest26.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest26.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest26.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest26.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest26.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	6
        Additions: 		2592
        Multiplications: 	1260
        Divisions: 		0
        Logical: 		0
        Reads: 			5212
        Writes: 		918
        Comparisons:		25
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest27.exe __orio_perftest27.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest27.exe  
Program Test Output: 
{'[3, 3, 1, 2, 0, 4, 0, 0, 19, 29, 0, 7, 2, 0, 0, 1, 1, 0]' : 0.177508}
{'[3, 3, 1, 2, 0, 4, 0, 0, 19, 29, 0, 7, 2, 0, 0, 1, 1, 0]' : 0.177993}
{'[3, 3, 1, 2, 0, 4, 0, 0, 19, 29, 0, 7, 2, 0, 0, 1, 1, 0]' : 0.177506}
{'[3, 3, 1, 2, 0, 4, 0, 0, 19, 29, 0, 7, 2, 0, 0, 1, 1, 0]' : 0.173235}
{'[3, 3, 1, 2, 0, 4, 0, 0, 19, 29, 0, 7, 2, 0, 0, 1, 1, 0]' : 0.179316}
{'[3, 3, 1, 2, 0, 4, 0, 0, 19, 29, 0, 7, 2, 0, 0, 1, 1, 0]' : 0.181908}
{'[3, 3, 1, 2, 0, 4, 0, 0, 19, 29, 0, 7, 2, 0, 0, 1, 1, 0]' : 0.180765}
{'[3, 3, 1, 2, 0, 4, 0, 0, 19, 29, 0, 7, 2, 0, 0, 1, 1, 0]' : 0.17752}
{'[3, 3, 1, 2, 0, 4, 0, 0, 19, 29, 0, 7, 2, 0, 0, 1, 1, 0]' : 0.177503}
{'[3, 3, 1, 2, 0, 4, 0, 0, 19, 29, 0, 7, 2, 0, 0, 1, 1, 0]' : 0.179009}
{'[3, 3, 1, 2, 0, 4, 0, 0, 19, 29, 0, 7, 2, 0, 0, 1, 1, 0]' : 0.180787}
{'[3, 3, 1, 2, 0, 4, 0, 0, 19, 29, 0, 7, 2, 0, 0, 1, 1, 0]' : 0.181153}
{'[3, 3, 1, 2, 0, 4, 0, 0, 19, 29, 0, 7, 2, 0, 0, 1, 1, 0]' : 0.181072}
{'[3, 3, 1, 2, 0, 4, 0, 0, 19, 29, 0, 7, 2, 0, 0, 1, 1, 0]' : 0.181457}
{'[3, 3, 1, 2, 0, 4, 0, 0, 19, 29, 0, 7, 2, 0, 0, 1, 1, 0]' : 0.179215}
{'[3, 3, 1, 2, 0, 4, 0, 0, 19, 29, 0, 7, 2, 0, 0, 1, 1, 0]' : 0.180771}
{'[3, 3, 1, 2, 0, 4, 0, 0, 19, 29, 0, 7, 2, 0, 0, 1, 1, 0]' : 0.177601}
{'[3, 3, 1, 2, 0, 4, 0, 0, 19, 29, 0, 7, 2, 0, 0, 1, 1, 0]' : 0.178325}
{'[3, 3, 1, 2, 0, 4, 0, 0, 19, 29, 0, 7, 2, 0, 0, 1, 1, 0]' : 0.178179}
{'[3, 3, 1, 2, 0, 4, 0, 0, 19, 29, 0, 7, 2, 0, 0, 1, 1, 0]' : 0.1764}
{'[3, 3, 1, 2, 0, 4, 0, 0, 19, 29, 0, 7, 2, 0, 0, 1, 1, 0]' : 0.176336}
{'[3, 3, 1, 2, 0, 4, 0, 0, 19, 29, 0, 7, 2, 0, 0, 1, 1, 0]' : 0.181222}
{'[3, 3, 1, 2, 0, 4, 0, 0, 19, 29, 0, 7, 2, 0, 0, 1, 1, 0]' : 0.178226}
{'[3, 3, 1, 2, 0, 4, 0, 0, 19, 29, 0, 7, 2, 0, 0, 1, 1, 0]' : 0.175634}
{'[3, 3, 1, 2, 0, 4, 0, 0, 19, 29, 0, 7, 2, 0, 0, 1, 1, 0]' : 0.177328}
{'[3, 3, 1, 2, 0, 4, 0, 0, 19, 29, 0, 7, 2, 0, 0, 1, 1, 0]' : 0.177145}
{'[3, 3, 1, 2, 0, 4, 0, 0, 19, 29, 0, 7, 2, 0, 0, 1, 1, 0]' : 0.178598}
{'[3, 3, 1, 2, 0, 4, 0, 0, 19, 29, 0, 7, 2, 0, 0, 1, 1, 0]' : 0.177241}
{'[3, 3, 1, 2, 0, 4, 0, 0, 19, 29, 0, 7, 2, 0, 0, 1, 1, 0]' : 0.174523}
{'[3, 3, 1, 2, 0, 4, 0, 0, 19, 29, 0, 7, 2, 0, 0, 1, 1, 0]' : 0.178815}

out:
 ["{'[3, 3, 1, 2, 0, 4, 0, 0, 19, 29, 0, 7, 2, 0, 0, 1, 1, 0]' : 0.177508}", "{'[3, 3, 1, 2, 0, 4, 0, 0, 19, 29, 0, 7, 2, 0, 0, 1, 1, 0]' : 0.177993}", "{'[3, 3, 1, 2, 0, 4, 0, 0, 19, 29, 0, 7, 2, 0, 0, 1, 1, 0]' : 0.177506}", "{'[3, 3, 1, 2, 0, 4, 0, 0, 19, 29, 0, 7, 2, 0, 0, 1, 1, 0]' : 0.173235}", "{'[3, 3, 1, 2, 0, 4, 0, 0, 19, 29, 0, 7, 2, 0, 0, 1, 1, 0]' : 0.179316}", "{'[3, 3, 1, 2, 0, 4, 0, 0, 19, 29, 0, 7, 2, 0, 0, 1, 1, 0]' : 0.181908}", "{'[3, 3, 1, 2, 0, 4, 0, 0, 19, 29, 0, 7, 2, 0, 0, 1, 1, 0]' : 0.180765}", "{'[3, 3, 1, 2, 0, 4, 0, 0, 19, 29, 0, 7, 2, 0, 0, 1, 1, 0]' : 0.17752}", "{'[3, 3, 1, 2, 0, 4, 0, 0, 19, 29, 0, 7, 2, 0, 0, 1, 1, 0]' : 0.177503}", "{'[3, 3, 1, 2, 0, 4, 0, 0, 19, 29, 0, 7, 2, 0, 0, 1, 1, 0]' : 0.179009}", "{'[3, 3, 1, 2, 0, 4, 0, 0, 19, 29, 0, 7, 2, 0, 0, 1, 1, 0]' : 0.180787}", "{'[3, 3, 1, 2, 0, 4, 0, 0, 19, 29, 0, 7, 2, 0, 0, 1, 1, 0]' : 0.181153}", "{'[3, 3, 1, 2, 0, 4, 0, 0, 19, 29, 0, 7, 2, 0, 0, 1, 1, 0]' : 0.181072}", "{'[3, 3, 1, 2, 0, 4, 0, 0, 19, 29, 0, 7, 2, 0, 0, 1, 1, 0]' : 0.181457}", "{'[3, 3, 1, 2, 0, 4, 0, 0, 19, 29, 0, 7, 2, 0, 0, 1, 1, 0]' : 0.179215}", "{'[3, 3, 1, 2, 0, 4, 0, 0, 19, 29, 0, 7, 2, 0, 0, 1, 1, 0]' : 0.180771}", "{'[3, 3, 1, 2, 0, 4, 0, 0, 19, 29, 0, 7, 2, 0, 0, 1, 1, 0]' : 0.177601}", "{'[3, 3, 1, 2, 0, 4, 0, 0, 19, 29, 0, 7, 2, 0, 0, 1, 1, 0]' : 0.178325}", "{'[3, 3, 1, 2, 0, 4, 0, 0, 19, 29, 0, 7, 2, 0, 0, 1, 1, 0]' : 0.178179}", "{'[3, 3, 1, 2, 0, 4, 0, 0, 19, 29, 0, 7, 2, 0, 0, 1, 1, 0]' : 0.1764}", "{'[3, 3, 1, 2, 0, 4, 0, 0, 19, 29, 0, 7, 2, 0, 0, 1, 1, 0]' : 0.176336}", "{'[3, 3, 1, 2, 0, 4, 0, 0, 19, 29, 0, 7, 2, 0, 0, 1, 1, 0]' : 0.181222}", "{'[3, 3, 1, 2, 0, 4, 0, 0, 19, 29, 0, 7, 2, 0, 0, 1, 1, 0]' : 0.178226}", "{'[3, 3, 1, 2, 0, 4, 0, 0, 19, 29, 0, 7, 2, 0, 0, 1, 1, 0]' : 0.175634}", "{'[3, 3, 1, 2, 0, 4, 0, 0, 19, 29, 0, 7, 2, 0, 0, 1, 1, 0]' : 0.177328}", "{'[3, 3, 1, 2, 0, 4, 0, 0, 19, 29, 0, 7, 2, 0, 0, 1, 1, 0]' : 0.177145}", "{'[3, 3, 1, 2, 0, 4, 0, 0, 19, 29, 0, 7, 2, 0, 0, 1, 1, 0]' : 0.178598}", "{'[3, 3, 1, 2, 0, 4, 0, 0, 19, 29, 0, 7, 2, 0, 0, 1, 1, 0]' : 0.177241}", "{'[3, 3, 1, 2, 0, 4, 0, 0, 19, 29, 0, 7, 2, 0, 0, 1, 1, 0]' : 0.174523}", "{'[3, 3, 1, 2, 0, 4, 0, 0, 19, 29, 0, 7, 2, 0, 0, 1, 1, 0]' : 0.178815}"]
returning from 'run': {'[3, 3, 1, 2, 0, 4, 0, 0, 19, 29, 0, 7, 2, 0, 0, 1, 1, 0]': ([0.177508, 0.177993, 0.177506, 0.173235, 0.179316, 0.181908, 0.180765, 0.17752, 0.177503, 0.179009, 0.180787, 0.181153, 0.181072, 0.181457, 0.179215, 0.180771, 0.177601, 0.178325, 0.178179, 0.1764, 0.176336, 0.181222, 0.178226, 0.175634, 0.177328, 0.177145, 0.178598, 0.177241, 0.174523, 0.178815], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 3, 1, 2, 0, 4, 0, 0, 19, 29, 0, 7, 2, 0, 0, 1, 1, 0]': ([0.177508, 0.177993, 0.177506, 0.173235, 0.179316, 0.181908, 0.180765, 0.17752, 0.177503, 0.179009, 0.180787, 0.181153, 0.181072, 0.181457, 0.179215, 0.180771, 0.177601, 0.178325, 0.178179, 0.1764, 0.176336, 0.181222, 0.178226, 0.175634, 0.177328, 0.177145, 0.178598, 0.177241, 0.174523, 0.178815], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	79
        Max loop nest depth: 	6
        Additions: 		13387
        Multiplications: 	3844
        Divisions: 		0
        Logical: 		0
        Reads: 			20149
        Writes: 		2210
        Comparisons:		79
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest28.exe __orio_perftest28.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest28.exe  
Program Test Output: 
{'[4, 1, 1, 3, 2, 3, 0, 0, 0, 29, 27, 0, 0, 2, 0, 0, 1, 1]' : 0.239268}
{'[4, 1, 1, 3, 2, 3, 0, 0, 0, 29, 27, 0, 0, 2, 0, 0, 1, 1]' : 0.226268}
{'[4, 1, 1, 3, 2, 3, 0, 0, 0, 29, 27, 0, 0, 2, 0, 0, 1, 1]' : 0.204686}
{'[4, 1, 1, 3, 2, 3, 0, 0, 0, 29, 27, 0, 0, 2, 0, 0, 1, 1]' : 0.202343}
{'[4, 1, 1, 3, 2, 3, 0, 0, 0, 29, 27, 0, 0, 2, 0, 0, 1, 1]' : 0.20323}
{'[4, 1, 1, 3, 2, 3, 0, 0, 0, 29, 27, 0, 0, 2, 0, 0, 1, 1]' : 0.203785}
{'[4, 1, 1, 3, 2, 3, 0, 0, 0, 29, 27, 0, 0, 2, 0, 0, 1, 1]' : 0.208852}
{'[4, 1, 1, 3, 2, 3, 0, 0, 0, 29, 27, 0, 0, 2, 0, 0, 1, 1]' : 0.209598}
{'[4, 1, 1, 3, 2, 3, 0, 0, 0, 29, 27, 0, 0, 2, 0, 0, 1, 1]' : 0.201802}
{'[4, 1, 1, 3, 2, 3, 0, 0, 0, 29, 27, 0, 0, 2, 0, 0, 1, 1]' : 0.203467}
{'[4, 1, 1, 3, 2, 3, 0, 0, 0, 29, 27, 0, 0, 2, 0, 0, 1, 1]' : 0.202119}
{'[4, 1, 1, 3, 2, 3, 0, 0, 0, 29, 27, 0, 0, 2, 0, 0, 1, 1]' : 0.203913}
{'[4, 1, 1, 3, 2, 3, 0, 0, 0, 29, 27, 0, 0, 2, 0, 0, 1, 1]' : 0.209283}
{'[4, 1, 1, 3, 2, 3, 0, 0, 0, 29, 27, 0, 0, 2, 0, 0, 1, 1]' : 0.20427}
{'[4, 1, 1, 3, 2, 3, 0, 0, 0, 29, 27, 0, 0, 2, 0, 0, 1, 1]' : 0.204746}
{'[4, 1, 1, 3, 2, 3, 0, 0, 0, 29, 27, 0, 0, 2, 0, 0, 1, 1]' : 0.202633}
{'[4, 1, 1, 3, 2, 3, 0, 0, 0, 29, 27, 0, 0, 2, 0, 0, 1, 1]' : 0.210981}
{'[4, 1, 1, 3, 2, 3, 0, 0, 0, 29, 27, 0, 0, 2, 0, 0, 1, 1]' : 0.208643}
{'[4, 1, 1, 3, 2, 3, 0, 0, 0, 29, 27, 0, 0, 2, 0, 0, 1, 1]' : 0.208044}
{'[4, 1, 1, 3, 2, 3, 0, 0, 0, 29, 27, 0, 0, 2, 0, 0, 1, 1]' : 0.202258}
{'[4, 1, 1, 3, 2, 3, 0, 0, 0, 29, 27, 0, 0, 2, 0, 0, 1, 1]' : 0.201825}
{'[4, 1, 1, 3, 2, 3, 0, 0, 0, 29, 27, 0, 0, 2, 0, 0, 1, 1]' : 0.204994}
{'[4, 1, 1, 3, 2, 3, 0, 0, 0, 29, 27, 0, 0, 2, 0, 0, 1, 1]' : 0.20965}
{'[4, 1, 1, 3, 2, 3, 0, 0, 0, 29, 27, 0, 0, 2, 0, 0, 1, 1]' : 0.208705}
{'[4, 1, 1, 3, 2, 3, 0, 0, 0, 29, 27, 0, 0, 2, 0, 0, 1, 1]' : 0.209357}
{'[4, 1, 1, 3, 2, 3, 0, 0, 0, 29, 27, 0, 0, 2, 0, 0, 1, 1]' : 0.209362}
{'[4, 1, 1, 3, 2, 3, 0, 0, 0, 29, 27, 0, 0, 2, 0, 0, 1, 1]' : 0.209853}
{'[4, 1, 1, 3, 2, 3, 0, 0, 0, 29, 27, 0, 0, 2, 0, 0, 1, 1]' : 0.208564}
{'[4, 1, 1, 3, 2, 3, 0, 0, 0, 29, 27, 0, 0, 2, 0, 0, 1, 1]' : 0.20928}
{'[4, 1, 1, 3, 2, 3, 0, 0, 0, 29, 27, 0, 0, 2, 0, 0, 1, 1]' : 0.209569}

out:
 ["{'[4, 1, 1, 3, 2, 3, 0, 0, 0, 29, 27, 0, 0, 2, 0, 0, 1, 1]' : 0.239268}", "{'[4, 1, 1, 3, 2, 3, 0, 0, 0, 29, 27, 0, 0, 2, 0, 0, 1, 1]' : 0.226268}", "{'[4, 1, 1, 3, 2, 3, 0, 0, 0, 29, 27, 0, 0, 2, 0, 0, 1, 1]' : 0.204686}", "{'[4, 1, 1, 3, 2, 3, 0, 0, 0, 29, 27, 0, 0, 2, 0, 0, 1, 1]' : 0.202343}", "{'[4, 1, 1, 3, 2, 3, 0, 0, 0, 29, 27, 0, 0, 2, 0, 0, 1, 1]' : 0.20323}", "{'[4, 1, 1, 3, 2, 3, 0, 0, 0, 29, 27, 0, 0, 2, 0, 0, 1, 1]' : 0.203785}", "{'[4, 1, 1, 3, 2, 3, 0, 0, 0, 29, 27, 0, 0, 2, 0, 0, 1, 1]' : 0.208852}", "{'[4, 1, 1, 3, 2, 3, 0, 0, 0, 29, 27, 0, 0, 2, 0, 0, 1, 1]' : 0.209598}", "{'[4, 1, 1, 3, 2, 3, 0, 0, 0, 29, 27, 0, 0, 2, 0, 0, 1, 1]' : 0.201802}", "{'[4, 1, 1, 3, 2, 3, 0, 0, 0, 29, 27, 0, 0, 2, 0, 0, 1, 1]' : 0.203467}", "{'[4, 1, 1, 3, 2, 3, 0, 0, 0, 29, 27, 0, 0, 2, 0, 0, 1, 1]' : 0.202119}", "{'[4, 1, 1, 3, 2, 3, 0, 0, 0, 29, 27, 0, 0, 2, 0, 0, 1, 1]' : 0.203913}", "{'[4, 1, 1, 3, 2, 3, 0, 0, 0, 29, 27, 0, 0, 2, 0, 0, 1, 1]' : 0.209283}", "{'[4, 1, 1, 3, 2, 3, 0, 0, 0, 29, 27, 0, 0, 2, 0, 0, 1, 1]' : 0.20427}", "{'[4, 1, 1, 3, 2, 3, 0, 0, 0, 29, 27, 0, 0, 2, 0, 0, 1, 1]' : 0.204746}", "{'[4, 1, 1, 3, 2, 3, 0, 0, 0, 29, 27, 0, 0, 2, 0, 0, 1, 1]' : 0.202633}", "{'[4, 1, 1, 3, 2, 3, 0, 0, 0, 29, 27, 0, 0, 2, 0, 0, 1, 1]' : 0.210981}", "{'[4, 1, 1, 3, 2, 3, 0, 0, 0, 29, 27, 0, 0, 2, 0, 0, 1, 1]' : 0.208643}", "{'[4, 1, 1, 3, 2, 3, 0, 0, 0, 29, 27, 0, 0, 2, 0, 0, 1, 1]' : 0.208044}", "{'[4, 1, 1, 3, 2, 3, 0, 0, 0, 29, 27, 0, 0, 2, 0, 0, 1, 1]' : 0.202258}", "{'[4, 1, 1, 3, 2, 3, 0, 0, 0, 29, 27, 0, 0, 2, 0, 0, 1, 1]' : 0.201825}", "{'[4, 1, 1, 3, 2, 3, 0, 0, 0, 29, 27, 0, 0, 2, 0, 0, 1, 1]' : 0.204994}", "{'[4, 1, 1, 3, 2, 3, 0, 0, 0, 29, 27, 0, 0, 2, 0, 0, 1, 1]' : 0.20965}", "{'[4, 1, 1, 3, 2, 3, 0, 0, 0, 29, 27, 0, 0, 2, 0, 0, 1, 1]' : 0.208705}", "{'[4, 1, 1, 3, 2, 3, 0, 0, 0, 29, 27, 0, 0, 2, 0, 0, 1, 1]' : 0.209357}", "{'[4, 1, 1, 3, 2, 3, 0, 0, 0, 29, 27, 0, 0, 2, 0, 0, 1, 1]' : 0.209362}", "{'[4, 1, 1, 3, 2, 3, 0, 0, 0, 29, 27, 0, 0, 2, 0, 0, 1, 1]' : 0.209853}", "{'[4, 1, 1, 3, 2, 3, 0, 0, 0, 29, 27, 0, 0, 2, 0, 0, 1, 1]' : 0.208564}", "{'[4, 1, 1, 3, 2, 3, 0, 0, 0, 29, 27, 0, 0, 2, 0, 0, 1, 1]' : 0.20928}", "{'[4, 1, 1, 3, 2, 3, 0, 0, 0, 29, 27, 0, 0, 2, 0, 0, 1, 1]' : 0.209569}"]
returning from 'run': {'[4, 1, 1, 3, 2, 3, 0, 0, 0, 29, 27, 0, 0, 2, 0, 0, 1, 1]': ([0.239268, 0.226268, 0.204686, 0.202343, 0.20323, 0.203785, 0.208852, 0.209598, 0.201802, 0.203467, 0.202119, 0.203913, 0.209283, 0.20427, 0.204746, 0.202633, 0.210981, 0.208643, 0.208044, 0.202258, 0.201825, 0.204994, 0.20965, 0.208705, 0.209357, 0.209362, 0.209853, 0.208564, 0.20928, 0.209569], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 1, 1, 3, 2, 3, 0, 0, 0, 29, 27, 0, 0, 2, 0, 0, 1, 1]': ([0.239268, 0.226268, 0.204686, 0.202343, 0.20323, 0.203785, 0.208852, 0.209598, 0.201802, 0.203467, 0.202119, 0.203913, 0.209283, 0.20427, 0.204746, 0.202633, 0.210981, 0.208643, 0.208044, 0.202258, 0.201825, 0.204994, 0.20965, 0.208705, 0.209357, 0.209362, 0.209853, 0.208564, 0.20928, 0.209569], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = kkk
Code stats:
        Number of loops: 	95
        Max loop nest depth: 	5
        Additions: 		2156
        Multiplications: 	864
        Divisions: 		0
        Logical: 		0
        Reads: 			4453
        Writes: 		825
        Comparisons:		95
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest29.exe __orio_perftest29.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest29.exe  
Program Test Output: 
{'[0, 2, 3, 6, 3, 1, 1, 1, 0, 25, 12, 0, 0, 1, 1, 1, 0, 0]' : 0.272644}
{'[0, 2, 3, 6, 3, 1, 1, 1, 0, 25, 12, 0, 0, 1, 1, 1, 0, 0]' : 0.237889}
{'[0, 2, 3, 6, 3, 1, 1, 1, 0, 25, 12, 0, 0, 1, 1, 1, 0, 0]' : 0.230779}
{'[0, 2, 3, 6, 3, 1, 1, 1, 0, 25, 12, 0, 0, 1, 1, 1, 0, 0]' : 0.238612}
{'[0, 2, 3, 6, 3, 1, 1, 1, 0, 25, 12, 0, 0, 1, 1, 1, 0, 0]' : 0.229165}
{'[0, 2, 3, 6, 3, 1, 1, 1, 0, 25, 12, 0, 0, 1, 1, 1, 0, 0]' : 0.229388}
{'[0, 2, 3, 6, 3, 1, 1, 1, 0, 25, 12, 0, 0, 1, 1, 1, 0, 0]' : 0.229162}
{'[0, 2, 3, 6, 3, 1, 1, 1, 0, 25, 12, 0, 0, 1, 1, 1, 0, 0]' : 0.229316}
{'[0, 2, 3, 6, 3, 1, 1, 1, 0, 25, 12, 0, 0, 1, 1, 1, 0, 0]' : 0.229207}
{'[0, 2, 3, 6, 3, 1, 1, 1, 0, 25, 12, 0, 0, 1, 1, 1, 0, 0]' : 0.277838}
{'[0, 2, 3, 6, 3, 1, 1, 1, 0, 25, 12, 0, 0, 1, 1, 1, 0, 0]' : 0.237569}
{'[0, 2, 3, 6, 3, 1, 1, 1, 0, 25, 12, 0, 0, 1, 1, 1, 0, 0]' : 0.226834}
{'[0, 2, 3, 6, 3, 1, 1, 1, 0, 25, 12, 0, 0, 1, 1, 1, 0, 0]' : 0.230679}
{'[0, 2, 3, 6, 3, 1, 1, 1, 0, 25, 12, 0, 0, 1, 1, 1, 0, 0]' : 0.230726}
{'[0, 2, 3, 6, 3, 1, 1, 1, 0, 25, 12, 0, 0, 1, 1, 1, 0, 0]' : 0.230758}
{'[0, 2, 3, 6, 3, 1, 1, 1, 0, 25, 12, 0, 0, 1, 1, 1, 0, 0]' : 0.23115}
{'[0, 2, 3, 6, 3, 1, 1, 1, 0, 25, 12, 0, 0, 1, 1, 1, 0, 0]' : 0.231681}
{'[0, 2, 3, 6, 3, 1, 1, 1, 0, 25, 12, 0, 0, 1, 1, 1, 0, 0]' : 0.231236}
{'[0, 2, 3, 6, 3, 1, 1, 1, 0, 25, 12, 0, 0, 1, 1, 1, 0, 0]' : 0.230758}
{'[0, 2, 3, 6, 3, 1, 1, 1, 0, 25, 12, 0, 0, 1, 1, 1, 0, 0]' : 0.231151}
{'[0, 2, 3, 6, 3, 1, 1, 1, 0, 25, 12, 0, 0, 1, 1, 1, 0, 0]' : 0.230842}
{'[0, 2, 3, 6, 3, 1, 1, 1, 0, 25, 12, 0, 0, 1, 1, 1, 0, 0]' : 0.230813}
{'[0, 2, 3, 6, 3, 1, 1, 1, 0, 25, 12, 0, 0, 1, 1, 1, 0, 0]' : 0.231409}
{'[0, 2, 3, 6, 3, 1, 1, 1, 0, 25, 12, 0, 0, 1, 1, 1, 0, 0]' : 0.23082}
{'[0, 2, 3, 6, 3, 1, 1, 1, 0, 25, 12, 0, 0, 1, 1, 1, 0, 0]' : 0.230802}
{'[0, 2, 3, 6, 3, 1, 1, 1, 0, 25, 12, 0, 0, 1, 1, 1, 0, 0]' : 0.230606}
{'[0, 2, 3, 6, 3, 1, 1, 1, 0, 25, 12, 0, 0, 1, 1, 1, 0, 0]' : 0.230693}
{'[0, 2, 3, 6, 3, 1, 1, 1, 0, 25, 12, 0, 0, 1, 1, 1, 0, 0]' : 0.230969}
{'[0, 2, 3, 6, 3, 1, 1, 1, 0, 25, 12, 0, 0, 1, 1, 1, 0, 0]' : 0.231055}
{'[0, 2, 3, 6, 3, 1, 1, 1, 0, 25, 12, 0, 0, 1, 1, 1, 0, 0]' : 0.231547}

out:
 ["{'[0, 2, 3, 6, 3, 1, 1, 1, 0, 25, 12, 0, 0, 1, 1, 1, 0, 0]' : 0.272644}", "{'[0, 2, 3, 6, 3, 1, 1, 1, 0, 25, 12, 0, 0, 1, 1, 1, 0, 0]' : 0.237889}", "{'[0, 2, 3, 6, 3, 1, 1, 1, 0, 25, 12, 0, 0, 1, 1, 1, 0, 0]' : 0.230779}", "{'[0, 2, 3, 6, 3, 1, 1, 1, 0, 25, 12, 0, 0, 1, 1, 1, 0, 0]' : 0.238612}", "{'[0, 2, 3, 6, 3, 1, 1, 1, 0, 25, 12, 0, 0, 1, 1, 1, 0, 0]' : 0.229165}", "{'[0, 2, 3, 6, 3, 1, 1, 1, 0, 25, 12, 0, 0, 1, 1, 1, 0, 0]' : 0.229388}", "{'[0, 2, 3, 6, 3, 1, 1, 1, 0, 25, 12, 0, 0, 1, 1, 1, 0, 0]' : 0.229162}", "{'[0, 2, 3, 6, 3, 1, 1, 1, 0, 25, 12, 0, 0, 1, 1, 1, 0, 0]' : 0.229316}", "{'[0, 2, 3, 6, 3, 1, 1, 1, 0, 25, 12, 0, 0, 1, 1, 1, 0, 0]' : 0.229207}", "{'[0, 2, 3, 6, 3, 1, 1, 1, 0, 25, 12, 0, 0, 1, 1, 1, 0, 0]' : 0.277838}", "{'[0, 2, 3, 6, 3, 1, 1, 1, 0, 25, 12, 0, 0, 1, 1, 1, 0, 0]' : 0.237569}", "{'[0, 2, 3, 6, 3, 1, 1, 1, 0, 25, 12, 0, 0, 1, 1, 1, 0, 0]' : 0.226834}", "{'[0, 2, 3, 6, 3, 1, 1, 1, 0, 25, 12, 0, 0, 1, 1, 1, 0, 0]' : 0.230679}", "{'[0, 2, 3, 6, 3, 1, 1, 1, 0, 25, 12, 0, 0, 1, 1, 1, 0, 0]' : 0.230726}", "{'[0, 2, 3, 6, 3, 1, 1, 1, 0, 25, 12, 0, 0, 1, 1, 1, 0, 0]' : 0.230758}", "{'[0, 2, 3, 6, 3, 1, 1, 1, 0, 25, 12, 0, 0, 1, 1, 1, 0, 0]' : 0.23115}", "{'[0, 2, 3, 6, 3, 1, 1, 1, 0, 25, 12, 0, 0, 1, 1, 1, 0, 0]' : 0.231681}", "{'[0, 2, 3, 6, 3, 1, 1, 1, 0, 25, 12, 0, 0, 1, 1, 1, 0, 0]' : 0.231236}", "{'[0, 2, 3, 6, 3, 1, 1, 1, 0, 25, 12, 0, 0, 1, 1, 1, 0, 0]' : 0.230758}", "{'[0, 2, 3, 6, 3, 1, 1, 1, 0, 25, 12, 0, 0, 1, 1, 1, 0, 0]' : 0.231151}", "{'[0, 2, 3, 6, 3, 1, 1, 1, 0, 25, 12, 0, 0, 1, 1, 1, 0, 0]' : 0.230842}", "{'[0, 2, 3, 6, 3, 1, 1, 1, 0, 25, 12, 0, 0, 1, 1, 1, 0, 0]' : 0.230813}", "{'[0, 2, 3, 6, 3, 1, 1, 1, 0, 25, 12, 0, 0, 1, 1, 1, 0, 0]' : 0.231409}", "{'[0, 2, 3, 6, 3, 1, 1, 1, 0, 25, 12, 0, 0, 1, 1, 1, 0, 0]' : 0.23082}", "{'[0, 2, 3, 6, 3, 1, 1, 1, 0, 25, 12, 0, 0, 1, 1, 1, 0, 0]' : 0.230802}", "{'[0, 2, 3, 6, 3, 1, 1, 1, 0, 25, 12, 0, 0, 1, 1, 1, 0, 0]' : 0.230606}", "{'[0, 2, 3, 6, 3, 1, 1, 1, 0, 25, 12, 0, 0, 1, 1, 1, 0, 0]' : 0.230693}", "{'[0, 2, 3, 6, 3, 1, 1, 1, 0, 25, 12, 0, 0, 1, 1, 1, 0, 0]' : 0.230969}", "{'[0, 2, 3, 6, 3, 1, 1, 1, 0, 25, 12, 0, 0, 1, 1, 1, 0, 0]' : 0.231055}", "{'[0, 2, 3, 6, 3, 1, 1, 1, 0, 25, 12, 0, 0, 1, 1, 1, 0, 0]' : 0.231547}"]
returning from 'run': {'[0, 2, 3, 6, 3, 1, 1, 1, 0, 25, 12, 0, 0, 1, 1, 1, 0, 0]': ([0.272644, 0.237889, 0.230779, 0.238612, 0.229165, 0.229388, 0.229162, 0.229316, 0.229207, 0.277838, 0.237569, 0.226834, 0.230679, 0.230726, 0.230758, 0.23115, 0.231681, 0.231236, 0.230758, 0.231151, 0.230842, 0.230813, 0.231409, 0.23082, 0.230802, 0.230606, 0.230693, 0.230969, 0.231055, 0.231547], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 3, 6, 3, 1, 1, 1, 0, 25, 12, 0, 0, 1, 1, 1, 0, 0]': ([0.272644, 0.237889, 0.230779, 0.238612, 0.229165, 0.229388, 0.229162, 0.229316, 0.229207, 0.277838, 0.237569, 0.226834, 0.230679, 0.230726, 0.230758, 0.23115, 0.231681, 0.231236, 0.230758, 0.231151, 0.230842, 0.230813, 0.231409, 0.23082, 0.230802, 0.230606, 0.230693, 0.230969, 0.231055, 0.231547], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	131
        Max loop nest depth: 	5
        Additions: 		14636
        Multiplications: 	3240
        Divisions: 		0
        Logical: 		0
        Reads: 			20944
        Writes: 		2059
        Comparisons:		131
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest30.exe __orio_perftest30.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest30.exe  
Program Test Output: 
{'[5, 0, 1, 6, 5, 0, 1, 1, 8, 20, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.170125}
{'[5, 0, 1, 6, 5, 0, 1, 1, 8, 20, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.169458}
{'[5, 0, 1, 6, 5, 0, 1, 1, 8, 20, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.169926}
{'[5, 0, 1, 6, 5, 0, 1, 1, 8, 20, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.155175}
{'[5, 0, 1, 6, 5, 0, 1, 1, 8, 20, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.153771}
{'[5, 0, 1, 6, 5, 0, 1, 1, 8, 20, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.153701}
{'[5, 0, 1, 6, 5, 0, 1, 1, 8, 20, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.153956}
{'[5, 0, 1, 6, 5, 0, 1, 1, 8, 20, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.152869}
{'[5, 0, 1, 6, 5, 0, 1, 1, 8, 20, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.15175}
{'[5, 0, 1, 6, 5, 0, 1, 1, 8, 20, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.152313}
{'[5, 0, 1, 6, 5, 0, 1, 1, 8, 20, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.152455}
{'[5, 0, 1, 6, 5, 0, 1, 1, 8, 20, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.150776}
{'[5, 0, 1, 6, 5, 0, 1, 1, 8, 20, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.151787}
{'[5, 0, 1, 6, 5, 0, 1, 1, 8, 20, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.15419}
{'[5, 0, 1, 6, 5, 0, 1, 1, 8, 20, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.15367}
{'[5, 0, 1, 6, 5, 0, 1, 1, 8, 20, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.150794}
{'[5, 0, 1, 6, 5, 0, 1, 1, 8, 20, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.154535}
{'[5, 0, 1, 6, 5, 0, 1, 1, 8, 20, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.153329}
{'[5, 0, 1, 6, 5, 0, 1, 1, 8, 20, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.153273}
{'[5, 0, 1, 6, 5, 0, 1, 1, 8, 20, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.15421}
{'[5, 0, 1, 6, 5, 0, 1, 1, 8, 20, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.153786}
{'[5, 0, 1, 6, 5, 0, 1, 1, 8, 20, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.154047}
{'[5, 0, 1, 6, 5, 0, 1, 1, 8, 20, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.152526}
{'[5, 0, 1, 6, 5, 0, 1, 1, 8, 20, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.150704}
{'[5, 0, 1, 6, 5, 0, 1, 1, 8, 20, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.150873}
{'[5, 0, 1, 6, 5, 0, 1, 1, 8, 20, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.150942}
{'[5, 0, 1, 6, 5, 0, 1, 1, 8, 20, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.153776}
{'[5, 0, 1, 6, 5, 0, 1, 1, 8, 20, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.153809}
{'[5, 0, 1, 6, 5, 0, 1, 1, 8, 20, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.154262}
{'[5, 0, 1, 6, 5, 0, 1, 1, 8, 20, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.152687}

out:
 ["{'[5, 0, 1, 6, 5, 0, 1, 1, 8, 20, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.170125}", "{'[5, 0, 1, 6, 5, 0, 1, 1, 8, 20, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.169458}", "{'[5, 0, 1, 6, 5, 0, 1, 1, 8, 20, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.169926}", "{'[5, 0, 1, 6, 5, 0, 1, 1, 8, 20, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.155175}", "{'[5, 0, 1, 6, 5, 0, 1, 1, 8, 20, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.153771}", "{'[5, 0, 1, 6, 5, 0, 1, 1, 8, 20, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.153701}", "{'[5, 0, 1, 6, 5, 0, 1, 1, 8, 20, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.153956}", "{'[5, 0, 1, 6, 5, 0, 1, 1, 8, 20, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.152869}", "{'[5, 0, 1, 6, 5, 0, 1, 1, 8, 20, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.15175}", "{'[5, 0, 1, 6, 5, 0, 1, 1, 8, 20, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.152313}", "{'[5, 0, 1, 6, 5, 0, 1, 1, 8, 20, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.152455}", "{'[5, 0, 1, 6, 5, 0, 1, 1, 8, 20, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.150776}", "{'[5, 0, 1, 6, 5, 0, 1, 1, 8, 20, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.151787}", "{'[5, 0, 1, 6, 5, 0, 1, 1, 8, 20, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.15419}", "{'[5, 0, 1, 6, 5, 0, 1, 1, 8, 20, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.15367}", "{'[5, 0, 1, 6, 5, 0, 1, 1, 8, 20, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.150794}", "{'[5, 0, 1, 6, 5, 0, 1, 1, 8, 20, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.154535}", "{'[5, 0, 1, 6, 5, 0, 1, 1, 8, 20, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.153329}", "{'[5, 0, 1, 6, 5, 0, 1, 1, 8, 20, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.153273}", "{'[5, 0, 1, 6, 5, 0, 1, 1, 8, 20, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.15421}", "{'[5, 0, 1, 6, 5, 0, 1, 1, 8, 20, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.153786}", "{'[5, 0, 1, 6, 5, 0, 1, 1, 8, 20, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.154047}", "{'[5, 0, 1, 6, 5, 0, 1, 1, 8, 20, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.152526}", "{'[5, 0, 1, 6, 5, 0, 1, 1, 8, 20, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.150704}", "{'[5, 0, 1, 6, 5, 0, 1, 1, 8, 20, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.150873}", "{'[5, 0, 1, 6, 5, 0, 1, 1, 8, 20, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.150942}", "{'[5, 0, 1, 6, 5, 0, 1, 1, 8, 20, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.153776}", "{'[5, 0, 1, 6, 5, 0, 1, 1, 8, 20, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.153809}", "{'[5, 0, 1, 6, 5, 0, 1, 1, 8, 20, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.154262}", "{'[5, 0, 1, 6, 5, 0, 1, 1, 8, 20, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.152687}"]
returning from 'run': {'[5, 0, 1, 6, 5, 0, 1, 1, 8, 20, 0, 27, 2, 0, 0, 0, 1, 1]': ([0.170125, 0.169458, 0.169926, 0.155175, 0.153771, 0.153701, 0.153956, 0.152869, 0.15175, 0.152313, 0.152455, 0.150776, 0.151787, 0.15419, 0.15367, 0.150794, 0.154535, 0.153329, 0.153273, 0.15421, 0.153786, 0.154047, 0.152526, 0.150704, 0.150873, 0.150942, 0.153776, 0.153809, 0.154262, 0.152687], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 0, 1, 6, 5, 0, 1, 1, 8, 20, 0, 27, 2, 0, 0, 0, 1, 1]': ([0.170125, 0.169458, 0.169926, 0.155175, 0.153771, 0.153701, 0.153956, 0.152869, 0.15175, 0.152313, 0.152455, 0.150776, 0.151787, 0.15419, 0.15367, 0.150794, 0.154535, 0.153329, 0.153273, 0.15421, 0.153786, 0.154047, 0.152526, 0.150704, 0.150873, 0.150942, 0.153776, 0.153809, 0.154262, 0.152687], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	37
        Max loop nest depth: 	5
        Additions: 		2079
        Multiplications: 	840
        Divisions: 		0
        Logical: 		0
        Reads: 			4462
        Writes: 		927
        Comparisons:		37
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest31.exe __orio_perftest31.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest31.exe  
Program Test Output: 
{'[0, 5, 4, 2, 4, 0, 0, 0, 6, 5, 0, 17, 1, 0, 1, 1, 1, 1]' : 0.096719}
{'[0, 5, 4, 2, 4, 0, 0, 0, 6, 5, 0, 17, 1, 0, 1, 1, 1, 1]' : 0.094981}
{'[0, 5, 4, 2, 4, 0, 0, 0, 6, 5, 0, 17, 1, 0, 1, 1, 1, 1]' : 0.093199}
{'[0, 5, 4, 2, 4, 0, 0, 0, 6, 5, 0, 17, 1, 0, 1, 1, 1, 1]' : 0.0931339}
{'[0, 5, 4, 2, 4, 0, 0, 0, 6, 5, 0, 17, 1, 0, 1, 1, 1, 1]' : 0.091912}
{'[0, 5, 4, 2, 4, 0, 0, 0, 6, 5, 0, 17, 1, 0, 1, 1, 1, 1]' : 0.0919259}
{'[0, 5, 4, 2, 4, 0, 0, 0, 6, 5, 0, 17, 1, 0, 1, 1, 1, 1]' : 0.091913}
{'[0, 5, 4, 2, 4, 0, 0, 0, 6, 5, 0, 17, 1, 0, 1, 1, 1, 1]' : 0.0918429}
{'[0, 5, 4, 2, 4, 0, 0, 0, 6, 5, 0, 17, 1, 0, 1, 1, 1, 1]' : 0.09288}
{'[0, 5, 4, 2, 4, 0, 0, 0, 6, 5, 0, 17, 1, 0, 1, 1, 1, 1]' : 0.09389}
{'[0, 5, 4, 2, 4, 0, 0, 0, 6, 5, 0, 17, 1, 0, 1, 1, 1, 1]' : 0.0938601}
{'[0, 5, 4, 2, 4, 0, 0, 0, 6, 5, 0, 17, 1, 0, 1, 1, 1, 1]' : 0.0938001}
{'[0, 5, 4, 2, 4, 0, 0, 0, 6, 5, 0, 17, 1, 0, 1, 1, 1, 1]' : 0.0938668}
{'[0, 5, 4, 2, 4, 0, 0, 0, 6, 5, 0, 17, 1, 0, 1, 1, 1, 1]' : 0.0937889}
{'[0, 5, 4, 2, 4, 0, 0, 0, 6, 5, 0, 17, 1, 0, 1, 1, 1, 1]' : 0.094825}
{'[0, 5, 4, 2, 4, 0, 0, 0, 6, 5, 0, 17, 1, 0, 1, 1, 1, 1]' : 0.094028}
{'[0, 5, 4, 2, 4, 0, 0, 0, 6, 5, 0, 17, 1, 0, 1, 1, 1, 1]' : 0.093909}
{'[0, 5, 4, 2, 4, 0, 0, 0, 6, 5, 0, 17, 1, 0, 1, 1, 1, 1]' : 0.0938342}
{'[0, 5, 4, 2, 4, 0, 0, 0, 6, 5, 0, 17, 1, 0, 1, 1, 1, 1]' : 0.0940099}
{'[0, 5, 4, 2, 4, 0, 0, 0, 6, 5, 0, 17, 1, 0, 1, 1, 1, 1]' : 0.0950251}
{'[0, 5, 4, 2, 4, 0, 0, 0, 6, 5, 0, 17, 1, 0, 1, 1, 1, 1]' : 0.09552}
{'[0, 5, 4, 2, 4, 0, 0, 0, 6, 5, 0, 17, 1, 0, 1, 1, 1, 1]' : 0.0957792}
{'[0, 5, 4, 2, 4, 0, 0, 0, 6, 5, 0, 17, 1, 0, 1, 1, 1, 1]' : 0.0955579}
{'[0, 5, 4, 2, 4, 0, 0, 0, 6, 5, 0, 17, 1, 0, 1, 1, 1, 1]' : 0.0955601}
{'[0, 5, 4, 2, 4, 0, 0, 0, 6, 5, 0, 17, 1, 0, 1, 1, 1, 1]' : 0.095722}
{'[0, 5, 4, 2, 4, 0, 0, 0, 6, 5, 0, 17, 1, 0, 1, 1, 1, 1]' : 0.0955689}
{'[0, 5, 4, 2, 4, 0, 0, 0, 6, 5, 0, 17, 1, 0, 1, 1, 1, 1]' : 0.0942662}
{'[0, 5, 4, 2, 4, 0, 0, 0, 6, 5, 0, 17, 1, 0, 1, 1, 1, 1]' : 0.09409}
{'[0, 5, 4, 2, 4, 0, 0, 0, 6, 5, 0, 17, 1, 0, 1, 1, 1, 1]' : 0.093821}
{'[0, 5, 4, 2, 4, 0, 0, 0, 6, 5, 0, 17, 1, 0, 1, 1, 1, 1]' : 0.0942149}

out:
 ["{'[0, 5, 4, 2, 4, 0, 0, 0, 6, 5, 0, 17, 1, 0, 1, 1, 1, 1]' : 0.096719}", "{'[0, 5, 4, 2, 4, 0, 0, 0, 6, 5, 0, 17, 1, 0, 1, 1, 1, 1]' : 0.094981}", "{'[0, 5, 4, 2, 4, 0, 0, 0, 6, 5, 0, 17, 1, 0, 1, 1, 1, 1]' : 0.093199}", "{'[0, 5, 4, 2, 4, 0, 0, 0, 6, 5, 0, 17, 1, 0, 1, 1, 1, 1]' : 0.0931339}", "{'[0, 5, 4, 2, 4, 0, 0, 0, 6, 5, 0, 17, 1, 0, 1, 1, 1, 1]' : 0.091912}", "{'[0, 5, 4, 2, 4, 0, 0, 0, 6, 5, 0, 17, 1, 0, 1, 1, 1, 1]' : 0.0919259}", "{'[0, 5, 4, 2, 4, 0, 0, 0, 6, 5, 0, 17, 1, 0, 1, 1, 1, 1]' : 0.091913}", "{'[0, 5, 4, 2, 4, 0, 0, 0, 6, 5, 0, 17, 1, 0, 1, 1, 1, 1]' : 0.0918429}", "{'[0, 5, 4, 2, 4, 0, 0, 0, 6, 5, 0, 17, 1, 0, 1, 1, 1, 1]' : 0.09288}", "{'[0, 5, 4, 2, 4, 0, 0, 0, 6, 5, 0, 17, 1, 0, 1, 1, 1, 1]' : 0.09389}", "{'[0, 5, 4, 2, 4, 0, 0, 0, 6, 5, 0, 17, 1, 0, 1, 1, 1, 1]' : 0.0938601}", "{'[0, 5, 4, 2, 4, 0, 0, 0, 6, 5, 0, 17, 1, 0, 1, 1, 1, 1]' : 0.0938001}", "{'[0, 5, 4, 2, 4, 0, 0, 0, 6, 5, 0, 17, 1, 0, 1, 1, 1, 1]' : 0.0938668}", "{'[0, 5, 4, 2, 4, 0, 0, 0, 6, 5, 0, 17, 1, 0, 1, 1, 1, 1]' : 0.0937889}", "{'[0, 5, 4, 2, 4, 0, 0, 0, 6, 5, 0, 17, 1, 0, 1, 1, 1, 1]' : 0.094825}", "{'[0, 5, 4, 2, 4, 0, 0, 0, 6, 5, 0, 17, 1, 0, 1, 1, 1, 1]' : 0.094028}", "{'[0, 5, 4, 2, 4, 0, 0, 0, 6, 5, 0, 17, 1, 0, 1, 1, 1, 1]' : 0.093909}", "{'[0, 5, 4, 2, 4, 0, 0, 0, 6, 5, 0, 17, 1, 0, 1, 1, 1, 1]' : 0.0938342}", "{'[0, 5, 4, 2, 4, 0, 0, 0, 6, 5, 0, 17, 1, 0, 1, 1, 1, 1]' : 0.0940099}", "{'[0, 5, 4, 2, 4, 0, 0, 0, 6, 5, 0, 17, 1, 0, 1, 1, 1, 1]' : 0.0950251}", "{'[0, 5, 4, 2, 4, 0, 0, 0, 6, 5, 0, 17, 1, 0, 1, 1, 1, 1]' : 0.09552}", "{'[0, 5, 4, 2, 4, 0, 0, 0, 6, 5, 0, 17, 1, 0, 1, 1, 1, 1]' : 0.0957792}", "{'[0, 5, 4, 2, 4, 0, 0, 0, 6, 5, 0, 17, 1, 0, 1, 1, 1, 1]' : 0.0955579}", "{'[0, 5, 4, 2, 4, 0, 0, 0, 6, 5, 0, 17, 1, 0, 1, 1, 1, 1]' : 0.0955601}", "{'[0, 5, 4, 2, 4, 0, 0, 0, 6, 5, 0, 17, 1, 0, 1, 1, 1, 1]' : 0.095722}", "{'[0, 5, 4, 2, 4, 0, 0, 0, 6, 5, 0, 17, 1, 0, 1, 1, 1, 1]' : 0.0955689}", "{'[0, 5, 4, 2, 4, 0, 0, 0, 6, 5, 0, 17, 1, 0, 1, 1, 1, 1]' : 0.0942662}", "{'[0, 5, 4, 2, 4, 0, 0, 0, 6, 5, 0, 17, 1, 0, 1, 1, 1, 1]' : 0.09409}", "{'[0, 5, 4, 2, 4, 0, 0, 0, 6, 5, 0, 17, 1, 0, 1, 1, 1, 1]' : 0.093821}", "{'[0, 5, 4, 2, 4, 0, 0, 0, 6, 5, 0, 17, 1, 0, 1, 1, 1, 1]' : 0.0942149}"]
returning from 'run': {'[0, 5, 4, 2, 4, 0, 0, 0, 6, 5, 0, 17, 1, 0, 1, 1, 1, 1]': ([0.096719, 0.094981, 0.093199, 0.0931339, 0.091912, 0.0919259, 0.091913, 0.0918429, 0.09288, 0.09389, 0.0938601, 0.0938001, 0.0938668, 0.0937889, 0.094825, 0.094028, 0.093909, 0.0938342, 0.0940099, 0.0950251, 0.09552, 0.0957792, 0.0955579, 0.0955601, 0.095722, 0.0955689, 0.0942662, 0.09409, 0.093821, 0.0942149], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 5, 4, 2, 4, 0, 0, 0, 6, 5, 0, 17, 1, 0, 1, 1, 1, 1]': ([0.096719, 0.094981, 0.093199, 0.0931339, 0.091912, 0.0919259, 0.091913, 0.0918429, 0.09288, 0.09389, 0.0938601, 0.0938001, 0.0938668, 0.0937889, 0.094825, 0.094028, 0.093909, 0.0938342, 0.0940099, 0.0950251, 0.09552, 0.0957792, 0.0955579, 0.0955601, 0.095722, 0.0955689, 0.0942662, 0.09409, 0.093821, 0.0942149], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = iii
Code stats:
        Number of loops: 	108
        Max loop nest depth: 	5
        Additions: 		1278
        Multiplications: 	190
        Divisions: 		0
        Logical: 		0
        Reads: 			2440
        Writes: 		473
        Comparisons:		108
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest32.exe __orio_perftest32.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest32.exe  
Program Test Output: 
{'[5, 2, 6, 3, 6, 0, 1, 1, 22, 17, 0, 2, 0, 0, 0, 0, 1, 1]' : 0.189482}
{'[5, 2, 6, 3, 6, 0, 1, 1, 22, 17, 0, 2, 0, 0, 0, 0, 1, 1]' : 0.189622}
{'[5, 2, 6, 3, 6, 0, 1, 1, 22, 17, 0, 2, 0, 0, 0, 0, 1, 1]' : 0.19299}
{'[5, 2, 6, 3, 6, 0, 1, 1, 22, 17, 0, 2, 0, 0, 0, 0, 1, 1]' : 0.194486}
{'[5, 2, 6, 3, 6, 0, 1, 1, 22, 17, 0, 2, 0, 0, 0, 0, 1, 1]' : 0.194499}
{'[5, 2, 6, 3, 6, 0, 1, 1, 22, 17, 0, 2, 0, 0, 0, 0, 1, 1]' : 0.19458}
{'[5, 2, 6, 3, 6, 0, 1, 1, 22, 17, 0, 2, 0, 0, 0, 0, 1, 1]' : 0.194645}
{'[5, 2, 6, 3, 6, 0, 1, 1, 22, 17, 0, 2, 0, 0, 0, 0, 1, 1]' : 0.194127}
{'[5, 2, 6, 3, 6, 0, 1, 1, 22, 17, 0, 2, 0, 0, 0, 0, 1, 1]' : 0.18962}
{'[5, 2, 6, 3, 6, 0, 1, 1, 22, 17, 0, 2, 0, 0, 0, 0, 1, 1]' : 0.189438}
{'[5, 2, 6, 3, 6, 0, 1, 1, 22, 17, 0, 2, 0, 0, 0, 0, 1, 1]' : 0.194055}
{'[5, 2, 6, 3, 6, 0, 1, 1, 22, 17, 0, 2, 0, 0, 0, 0, 1, 1]' : 0.194554}
{'[5, 2, 6, 3, 6, 0, 1, 1, 22, 17, 0, 2, 0, 0, 0, 0, 1, 1]' : 0.194508}
{'[5, 2, 6, 3, 6, 0, 1, 1, 22, 17, 0, 2, 0, 0, 0, 0, 1, 1]' : 0.194688}
{'[5, 2, 6, 3, 6, 0, 1, 1, 22, 17, 0, 2, 0, 0, 0, 0, 1, 1]' : 0.191306}
{'[5, 2, 6, 3, 6, 0, 1, 1, 22, 17, 0, 2, 0, 0, 0, 0, 1, 1]' : 0.187998}
{'[5, 2, 6, 3, 6, 0, 1, 1, 22, 17, 0, 2, 0, 0, 0, 0, 1, 1]' : 0.191592}
{'[5, 2, 6, 3, 6, 0, 1, 1, 22, 17, 0, 2, 0, 0, 0, 0, 1, 1]' : 0.195975}
{'[5, 2, 6, 3, 6, 0, 1, 1, 22, 17, 0, 2, 0, 0, 0, 0, 1, 1]' : 0.194601}
{'[5, 2, 6, 3, 6, 0, 1, 1, 22, 17, 0, 2, 0, 0, 0, 0, 1, 1]' : 0.192492}
{'[5, 2, 6, 3, 6, 0, 1, 1, 22, 17, 0, 2, 0, 0, 0, 0, 1, 1]' : 0.190145}
{'[5, 2, 6, 3, 6, 0, 1, 1, 22, 17, 0, 2, 0, 0, 0, 0, 1, 1]' : 0.192278}
{'[5, 2, 6, 3, 6, 0, 1, 1, 22, 17, 0, 2, 0, 0, 0, 0, 1, 1]' : 0.195836}
{'[5, 2, 6, 3, 6, 0, 1, 1, 22, 17, 0, 2, 0, 0, 0, 0, 1, 1]' : 0.195695}
{'[5, 2, 6, 3, 6, 0, 1, 1, 22, 17, 0, 2, 0, 0, 0, 0, 1, 1]' : 0.195614}
{'[5, 2, 6, 3, 6, 0, 1, 1, 22, 17, 0, 2, 0, 0, 0, 0, 1, 1]' : 0.195842}
{'[5, 2, 6, 3, 6, 0, 1, 1, 22, 17, 0, 2, 0, 0, 0, 0, 1, 1]' : 0.195764}
{'[5, 2, 6, 3, 6, 0, 1, 1, 22, 17, 0, 2, 0, 0, 0, 0, 1, 1]' : 0.196028}
{'[5, 2, 6, 3, 6, 0, 1, 1, 22, 17, 0, 2, 0, 0, 0, 0, 1, 1]' : 0.195619}
{'[5, 2, 6, 3, 6, 0, 1, 1, 22, 17, 0, 2, 0, 0, 0, 0, 1, 1]' : 0.195492}

out:
 ["{'[5, 2, 6, 3, 6, 0, 1, 1, 22, 17, 0, 2, 0, 0, 0, 0, 1, 1]' : 0.189482}", "{'[5, 2, 6, 3, 6, 0, 1, 1, 22, 17, 0, 2, 0, 0, 0, 0, 1, 1]' : 0.189622}", "{'[5, 2, 6, 3, 6, 0, 1, 1, 22, 17, 0, 2, 0, 0, 0, 0, 1, 1]' : 0.19299}", "{'[5, 2, 6, 3, 6, 0, 1, 1, 22, 17, 0, 2, 0, 0, 0, 0, 1, 1]' : 0.194486}", "{'[5, 2, 6, 3, 6, 0, 1, 1, 22, 17, 0, 2, 0, 0, 0, 0, 1, 1]' : 0.194499}", "{'[5, 2, 6, 3, 6, 0, 1, 1, 22, 17, 0, 2, 0, 0, 0, 0, 1, 1]' : 0.19458}", "{'[5, 2, 6, 3, 6, 0, 1, 1, 22, 17, 0, 2, 0, 0, 0, 0, 1, 1]' : 0.194645}", "{'[5, 2, 6, 3, 6, 0, 1, 1, 22, 17, 0, 2, 0, 0, 0, 0, 1, 1]' : 0.194127}", "{'[5, 2, 6, 3, 6, 0, 1, 1, 22, 17, 0, 2, 0, 0, 0, 0, 1, 1]' : 0.18962}", "{'[5, 2, 6, 3, 6, 0, 1, 1, 22, 17, 0, 2, 0, 0, 0, 0, 1, 1]' : 0.189438}", "{'[5, 2, 6, 3, 6, 0, 1, 1, 22, 17, 0, 2, 0, 0, 0, 0, 1, 1]' : 0.194055}", "{'[5, 2, 6, 3, 6, 0, 1, 1, 22, 17, 0, 2, 0, 0, 0, 0, 1, 1]' : 0.194554}", "{'[5, 2, 6, 3, 6, 0, 1, 1, 22, 17, 0, 2, 0, 0, 0, 0, 1, 1]' : 0.194508}", "{'[5, 2, 6, 3, 6, 0, 1, 1, 22, 17, 0, 2, 0, 0, 0, 0, 1, 1]' : 0.194688}", "{'[5, 2, 6, 3, 6, 0, 1, 1, 22, 17, 0, 2, 0, 0, 0, 0, 1, 1]' : 0.191306}", "{'[5, 2, 6, 3, 6, 0, 1, 1, 22, 17, 0, 2, 0, 0, 0, 0, 1, 1]' : 0.187998}", "{'[5, 2, 6, 3, 6, 0, 1, 1, 22, 17, 0, 2, 0, 0, 0, 0, 1, 1]' : 0.191592}", "{'[5, 2, 6, 3, 6, 0, 1, 1, 22, 17, 0, 2, 0, 0, 0, 0, 1, 1]' : 0.195975}", "{'[5, 2, 6, 3, 6, 0, 1, 1, 22, 17, 0, 2, 0, 0, 0, 0, 1, 1]' : 0.194601}", "{'[5, 2, 6, 3, 6, 0, 1, 1, 22, 17, 0, 2, 0, 0, 0, 0, 1, 1]' : 0.192492}", "{'[5, 2, 6, 3, 6, 0, 1, 1, 22, 17, 0, 2, 0, 0, 0, 0, 1, 1]' : 0.190145}", "{'[5, 2, 6, 3, 6, 0, 1, 1, 22, 17, 0, 2, 0, 0, 0, 0, 1, 1]' : 0.192278}", "{'[5, 2, 6, 3, 6, 0, 1, 1, 22, 17, 0, 2, 0, 0, 0, 0, 1, 1]' : 0.195836}", "{'[5, 2, 6, 3, 6, 0, 1, 1, 22, 17, 0, 2, 0, 0, 0, 0, 1, 1]' : 0.195695}", "{'[5, 2, 6, 3, 6, 0, 1, 1, 22, 17, 0, 2, 0, 0, 0, 0, 1, 1]' : 0.195614}", "{'[5, 2, 6, 3, 6, 0, 1, 1, 22, 17, 0, 2, 0, 0, 0, 0, 1, 1]' : 0.195842}", "{'[5, 2, 6, 3, 6, 0, 1, 1, 22, 17, 0, 2, 0, 0, 0, 0, 1, 1]' : 0.195764}", "{'[5, 2, 6, 3, 6, 0, 1, 1, 22, 17, 0, 2, 0, 0, 0, 0, 1, 1]' : 0.196028}", "{'[5, 2, 6, 3, 6, 0, 1, 1, 22, 17, 0, 2, 0, 0, 0, 0, 1, 1]' : 0.195619}", "{'[5, 2, 6, 3, 6, 0, 1, 1, 22, 17, 0, 2, 0, 0, 0, 0, 1, 1]' : 0.195492}"]
returning from 'run': {'[5, 2, 6, 3, 6, 0, 1, 1, 22, 17, 0, 2, 0, 0, 0, 0, 1, 1]': ([0.189482, 0.189622, 0.19299, 0.194486, 0.194499, 0.19458, 0.194645, 0.194127, 0.18962, 0.189438, 0.194055, 0.194554, 0.194508, 0.194688, 0.191306, 0.187998, 0.191592, 0.195975, 0.194601, 0.192492, 0.190145, 0.192278, 0.195836, 0.195695, 0.195614, 0.195842, 0.195764, 0.196028, 0.195619, 0.195492], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 2, 6, 3, 6, 0, 1, 1, 22, 17, 0, 2, 0, 0, 0, 0, 1, 1]': ([0.189482, 0.189622, 0.19299, 0.194486, 0.194499, 0.19458, 0.194645, 0.194127, 0.18962, 0.189438, 0.194055, 0.194554, 0.194508, 0.194688, 0.191306, 0.187998, 0.191592, 0.195975, 0.194601, 0.192492, 0.190145, 0.192278, 0.195836, 0.195695, 0.195614, 0.195842, 0.195764, 0.196028, 0.195619, 0.195492], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = iii
Code stats:
        Number of loops: 	27
        Max loop nest depth: 	4
        Additions: 		4751
        Multiplications: 	2294
        Divisions: 		0
        Logical: 		0
        Reads: 			9066
        Writes: 		1489
        Comparisons:		27
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest33.exe __orio_perftest33.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest33.exe  
Program Test Output: 
{'[5, 0, 0, 3, 1, 3, 1, 0, 6, 3, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.179782}
{'[5, 0, 0, 3, 1, 3, 1, 0, 6, 3, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.178745}
{'[5, 0, 0, 3, 1, 3, 1, 0, 6, 3, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.181519}
{'[5, 0, 0, 3, 1, 3, 1, 0, 6, 3, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.18163}
{'[5, 0, 0, 3, 1, 3, 1, 0, 6, 3, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.178762}
{'[5, 0, 0, 3, 1, 3, 1, 0, 6, 3, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.181823}
{'[5, 0, 0, 3, 1, 3, 1, 0, 6, 3, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.183453}
{'[5, 0, 0, 3, 1, 3, 1, 0, 6, 3, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.180041}
{'[5, 0, 0, 3, 1, 3, 1, 0, 6, 3, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.182696}
{'[5, 0, 0, 3, 1, 3, 1, 0, 6, 3, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.180181}
{'[5, 0, 0, 3, 1, 3, 1, 0, 6, 3, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.179704}
{'[5, 0, 0, 3, 1, 3, 1, 0, 6, 3, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.182778}
{'[5, 0, 0, 3, 1, 3, 1, 0, 6, 3, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.181514}
{'[5, 0, 0, 3, 1, 3, 1, 0, 6, 3, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.180509}
{'[5, 0, 0, 3, 1, 3, 1, 0, 6, 3, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.182403}
{'[5, 0, 0, 3, 1, 3, 1, 0, 6, 3, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.178827}
{'[5, 0, 0, 3, 1, 3, 1, 0, 6, 3, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.182978}
{'[5, 0, 0, 3, 1, 3, 1, 0, 6, 3, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.184513}
{'[5, 0, 0, 3, 1, 3, 1, 0, 6, 3, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.180875}
{'[5, 0, 0, 3, 1, 3, 1, 0, 6, 3, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.182048}
{'[5, 0, 0, 3, 1, 3, 1, 0, 6, 3, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.179405}
{'[5, 0, 0, 3, 1, 3, 1, 0, 6, 3, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.179038}
{'[5, 0, 0, 3, 1, 3, 1, 0, 6, 3, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.183005}
{'[5, 0, 0, 3, 1, 3, 1, 0, 6, 3, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.179513}
{'[5, 0, 0, 3, 1, 3, 1, 0, 6, 3, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.181623}
{'[5, 0, 0, 3, 1, 3, 1, 0, 6, 3, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.179339}
{'[5, 0, 0, 3, 1, 3, 1, 0, 6, 3, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.178929}
{'[5, 0, 0, 3, 1, 3, 1, 0, 6, 3, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.181929}
{'[5, 0, 0, 3, 1, 3, 1, 0, 6, 3, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.18411}
{'[5, 0, 0, 3, 1, 3, 1, 0, 6, 3, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.183564}

out:
 ["{'[5, 0, 0, 3, 1, 3, 1, 0, 6, 3, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.179782}", "{'[5, 0, 0, 3, 1, 3, 1, 0, 6, 3, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.178745}", "{'[5, 0, 0, 3, 1, 3, 1, 0, 6, 3, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.181519}", "{'[5, 0, 0, 3, 1, 3, 1, 0, 6, 3, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.18163}", "{'[5, 0, 0, 3, 1, 3, 1, 0, 6, 3, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.178762}", "{'[5, 0, 0, 3, 1, 3, 1, 0, 6, 3, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.181823}", "{'[5, 0, 0, 3, 1, 3, 1, 0, 6, 3, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.183453}", "{'[5, 0, 0, 3, 1, 3, 1, 0, 6, 3, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.180041}", "{'[5, 0, 0, 3, 1, 3, 1, 0, 6, 3, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.182696}", "{'[5, 0, 0, 3, 1, 3, 1, 0, 6, 3, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.180181}", "{'[5, 0, 0, 3, 1, 3, 1, 0, 6, 3, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.179704}", "{'[5, 0, 0, 3, 1, 3, 1, 0, 6, 3, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.182778}", "{'[5, 0, 0, 3, 1, 3, 1, 0, 6, 3, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.181514}", "{'[5, 0, 0, 3, 1, 3, 1, 0, 6, 3, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.180509}", "{'[5, 0, 0, 3, 1, 3, 1, 0, 6, 3, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.182403}", "{'[5, 0, 0, 3, 1, 3, 1, 0, 6, 3, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.178827}", "{'[5, 0, 0, 3, 1, 3, 1, 0, 6, 3, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.182978}", "{'[5, 0, 0, 3, 1, 3, 1, 0, 6, 3, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.184513}", "{'[5, 0, 0, 3, 1, 3, 1, 0, 6, 3, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.180875}", "{'[5, 0, 0, 3, 1, 3, 1, 0, 6, 3, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.182048}", "{'[5, 0, 0, 3, 1, 3, 1, 0, 6, 3, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.179405}", "{'[5, 0, 0, 3, 1, 3, 1, 0, 6, 3, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.179038}", "{'[5, 0, 0, 3, 1, 3, 1, 0, 6, 3, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.183005}", "{'[5, 0, 0, 3, 1, 3, 1, 0, 6, 3, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.179513}", "{'[5, 0, 0, 3, 1, 3, 1, 0, 6, 3, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.181623}", "{'[5, 0, 0, 3, 1, 3, 1, 0, 6, 3, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.179339}", "{'[5, 0, 0, 3, 1, 3, 1, 0, 6, 3, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.178929}", "{'[5, 0, 0, 3, 1, 3, 1, 0, 6, 3, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.181929}", "{'[5, 0, 0, 3, 1, 3, 1, 0, 6, 3, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.18411}", "{'[5, 0, 0, 3, 1, 3, 1, 0, 6, 3, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.183564}"]
returning from 'run': {'[5, 0, 0, 3, 1, 3, 1, 0, 6, 3, 0, 28, 2, 0, 0, 1, 0, 1]': ([0.179782, 0.178745, 0.181519, 0.18163, 0.178762, 0.181823, 0.183453, 0.180041, 0.182696, 0.180181, 0.179704, 0.182778, 0.181514, 0.180509, 0.182403, 0.178827, 0.182978, 0.184513, 0.180875, 0.182048, 0.179405, 0.179038, 0.183005, 0.179513, 0.181623, 0.179339, 0.178929, 0.181929, 0.18411, 0.183564], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 0, 0, 3, 1, 3, 1, 0, 6, 3, 0, 28, 2, 0, 0, 1, 0, 1]': ([0.179782, 0.178745, 0.181519, 0.18163, 0.178762, 0.181823, 0.183453, 0.180041, 0.182696, 0.180181, 0.179704, 0.182778, 0.181514, 0.180509, 0.182403, 0.178827, 0.182978, 0.184513, 0.180875, 0.182048, 0.179405, 0.179038, 0.183005, 0.179513, 0.181623, 0.179339, 0.178929, 0.181929, 0.18411, 0.183564], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	143
        Max loop nest depth: 	5
        Additions: 		10402
        Multiplications: 	2304
        Divisions: 		0
        Logical: 		0
        Reads: 			15090
        Writes: 		1542
        Comparisons:		143
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest34.exe __orio_perftest34.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest34.exe  
Program Test Output: 
{'[6, 6, 3, 0, 0, 6, 1, 1, 2, 22, 0, 26, 1, 1, 0, 0, 0, 0]' : 0.137417}
{'[6, 6, 3, 0, 0, 6, 1, 1, 2, 22, 0, 26, 1, 1, 0, 0, 0, 0]' : 0.135521}
{'[6, 6, 3, 0, 0, 6, 1, 1, 2, 22, 0, 26, 1, 1, 0, 0, 0, 0]' : 0.13347}
{'[6, 6, 3, 0, 0, 6, 1, 1, 2, 22, 0, 26, 1, 1, 0, 0, 0, 0]' : 0.117677}
{'[6, 6, 3, 0, 0, 6, 1, 1, 2, 22, 0, 26, 1, 1, 0, 0, 0, 0]' : 0.113748}
{'[6, 6, 3, 0, 0, 6, 1, 1, 2, 22, 0, 26, 1, 1, 0, 0, 0, 0]' : 0.113826}
{'[6, 6, 3, 0, 0, 6, 1, 1, 2, 22, 0, 26, 1, 1, 0, 0, 0, 0]' : 0.11365}
{'[6, 6, 3, 0, 0, 6, 1, 1, 2, 22, 0, 26, 1, 1, 0, 0, 0, 0]' : 0.114202}
{'[6, 6, 3, 0, 0, 6, 1, 1, 2, 22, 0, 26, 1, 1, 0, 0, 0, 0]' : 0.113761}
{'[6, 6, 3, 0, 0, 6, 1, 1, 2, 22, 0, 26, 1, 1, 0, 0, 0, 0]' : 0.113835}
{'[6, 6, 3, 0, 0, 6, 1, 1, 2, 22, 0, 26, 1, 1, 0, 0, 0, 0]' : 0.113669}
{'[6, 6, 3, 0, 0, 6, 1, 1, 2, 22, 0, 26, 1, 1, 0, 0, 0, 0]' : 0.114822}
{'[6, 6, 3, 0, 0, 6, 1, 1, 2, 22, 0, 26, 1, 1, 0, 0, 0, 0]' : 0.113783}
{'[6, 6, 3, 0, 0, 6, 1, 1, 2, 22, 0, 26, 1, 1, 0, 0, 0, 0]' : 0.11381}
{'[6, 6, 3, 0, 0, 6, 1, 1, 2, 22, 0, 26, 1, 1, 0, 0, 0, 0]' : 0.113683}
{'[6, 6, 3, 0, 0, 6, 1, 1, 2, 22, 0, 26, 1, 1, 0, 0, 0, 0]' : 0.113746}
{'[6, 6, 3, 0, 0, 6, 1, 1, 2, 22, 0, 26, 1, 1, 0, 0, 0, 0]' : 0.114136}
{'[6, 6, 3, 0, 0, 6, 1, 1, 2, 22, 0, 26, 1, 1, 0, 0, 0, 0]' : 0.114145}
{'[6, 6, 3, 0, 0, 6, 1, 1, 2, 22, 0, 26, 1, 1, 0, 0, 0, 0]' : 0.113747}
{'[6, 6, 3, 0, 0, 6, 1, 1, 2, 22, 0, 26, 1, 1, 0, 0, 0, 0]' : 0.113736}
{'[6, 6, 3, 0, 0, 6, 1, 1, 2, 22, 0, 26, 1, 1, 0, 0, 0, 0]' : 0.113826}
{'[6, 6, 3, 0, 0, 6, 1, 1, 2, 22, 0, 26, 1, 1, 0, 0, 0, 0]' : 0.113841}
{'[6, 6, 3, 0, 0, 6, 1, 1, 2, 22, 0, 26, 1, 1, 0, 0, 0, 0]' : 0.113746}
{'[6, 6, 3, 0, 0, 6, 1, 1, 2, 22, 0, 26, 1, 1, 0, 0, 0, 0]' : 0.113778}
{'[6, 6, 3, 0, 0, 6, 1, 1, 2, 22, 0, 26, 1, 1, 0, 0, 0, 0]' : 0.1145}
{'[6, 6, 3, 0, 0, 6, 1, 1, 2, 22, 0, 26, 1, 1, 0, 0, 0, 0]' : 0.113863}
{'[6, 6, 3, 0, 0, 6, 1, 1, 2, 22, 0, 26, 1, 1, 0, 0, 0, 0]' : 0.113697}
{'[6, 6, 3, 0, 0, 6, 1, 1, 2, 22, 0, 26, 1, 1, 0, 0, 0, 0]' : 0.113779}
{'[6, 6, 3, 0, 0, 6, 1, 1, 2, 22, 0, 26, 1, 1, 0, 0, 0, 0]' : 0.113807}
{'[6, 6, 3, 0, 0, 6, 1, 1, 2, 22, 0, 26, 1, 1, 0, 0, 0, 0]' : 0.113791}

out:
 ["{'[6, 6, 3, 0, 0, 6, 1, 1, 2, 22, 0, 26, 1, 1, 0, 0, 0, 0]' : 0.137417}", "{'[6, 6, 3, 0, 0, 6, 1, 1, 2, 22, 0, 26, 1, 1, 0, 0, 0, 0]' : 0.135521}", "{'[6, 6, 3, 0, 0, 6, 1, 1, 2, 22, 0, 26, 1, 1, 0, 0, 0, 0]' : 0.13347}", "{'[6, 6, 3, 0, 0, 6, 1, 1, 2, 22, 0, 26, 1, 1, 0, 0, 0, 0]' : 0.117677}", "{'[6, 6, 3, 0, 0, 6, 1, 1, 2, 22, 0, 26, 1, 1, 0, 0, 0, 0]' : 0.113748}", "{'[6, 6, 3, 0, 0, 6, 1, 1, 2, 22, 0, 26, 1, 1, 0, 0, 0, 0]' : 0.113826}", "{'[6, 6, 3, 0, 0, 6, 1, 1, 2, 22, 0, 26, 1, 1, 0, 0, 0, 0]' : 0.11365}", "{'[6, 6, 3, 0, 0, 6, 1, 1, 2, 22, 0, 26, 1, 1, 0, 0, 0, 0]' : 0.114202}", "{'[6, 6, 3, 0, 0, 6, 1, 1, 2, 22, 0, 26, 1, 1, 0, 0, 0, 0]' : 0.113761}", "{'[6, 6, 3, 0, 0, 6, 1, 1, 2, 22, 0, 26, 1, 1, 0, 0, 0, 0]' : 0.113835}", "{'[6, 6, 3, 0, 0, 6, 1, 1, 2, 22, 0, 26, 1, 1, 0, 0, 0, 0]' : 0.113669}", "{'[6, 6, 3, 0, 0, 6, 1, 1, 2, 22, 0, 26, 1, 1, 0, 0, 0, 0]' : 0.114822}", "{'[6, 6, 3, 0, 0, 6, 1, 1, 2, 22, 0, 26, 1, 1, 0, 0, 0, 0]' : 0.113783}", "{'[6, 6, 3, 0, 0, 6, 1, 1, 2, 22, 0, 26, 1, 1, 0, 0, 0, 0]' : 0.11381}", "{'[6, 6, 3, 0, 0, 6, 1, 1, 2, 22, 0, 26, 1, 1, 0, 0, 0, 0]' : 0.113683}", "{'[6, 6, 3, 0, 0, 6, 1, 1, 2, 22, 0, 26, 1, 1, 0, 0, 0, 0]' : 0.113746}", "{'[6, 6, 3, 0, 0, 6, 1, 1, 2, 22, 0, 26, 1, 1, 0, 0, 0, 0]' : 0.114136}", "{'[6, 6, 3, 0, 0, 6, 1, 1, 2, 22, 0, 26, 1, 1, 0, 0, 0, 0]' : 0.114145}", "{'[6, 6, 3, 0, 0, 6, 1, 1, 2, 22, 0, 26, 1, 1, 0, 0, 0, 0]' : 0.113747}", "{'[6, 6, 3, 0, 0, 6, 1, 1, 2, 22, 0, 26, 1, 1, 0, 0, 0, 0]' : 0.113736}", "{'[6, 6, 3, 0, 0, 6, 1, 1, 2, 22, 0, 26, 1, 1, 0, 0, 0, 0]' : 0.113826}", "{'[6, 6, 3, 0, 0, 6, 1, 1, 2, 22, 0, 26, 1, 1, 0, 0, 0, 0]' : 0.113841}", "{'[6, 6, 3, 0, 0, 6, 1, 1, 2, 22, 0, 26, 1, 1, 0, 0, 0, 0]' : 0.113746}", "{'[6, 6, 3, 0, 0, 6, 1, 1, 2, 22, 0, 26, 1, 1, 0, 0, 0, 0]' : 0.113778}", "{'[6, 6, 3, 0, 0, 6, 1, 1, 2, 22, 0, 26, 1, 1, 0, 0, 0, 0]' : 0.1145}", "{'[6, 6, 3, 0, 0, 6, 1, 1, 2, 22, 0, 26, 1, 1, 0, 0, 0, 0]' : 0.113863}", "{'[6, 6, 3, 0, 0, 6, 1, 1, 2, 22, 0, 26, 1, 1, 0, 0, 0, 0]' : 0.113697}", "{'[6, 6, 3, 0, 0, 6, 1, 1, 2, 22, 0, 26, 1, 1, 0, 0, 0, 0]' : 0.113779}", "{'[6, 6, 3, 0, 0, 6, 1, 1, 2, 22, 0, 26, 1, 1, 0, 0, 0, 0]' : 0.113807}", "{'[6, 6, 3, 0, 0, 6, 1, 1, 2, 22, 0, 26, 1, 1, 0, 0, 0, 0]' : 0.113791}"]
returning from 'run': {'[6, 6, 3, 0, 0, 6, 1, 1, 2, 22, 0, 26, 1, 1, 0, 0, 0, 0]': ([0.137417, 0.135521, 0.13347, 0.117677, 0.113748, 0.113826, 0.11365, 0.114202, 0.113761, 0.113835, 0.113669, 0.114822, 0.113783, 0.11381, 0.113683, 0.113746, 0.114136, 0.114145, 0.113747, 0.113736, 0.113826, 0.113841, 0.113746, 0.113778, 0.1145, 0.113863, 0.113697, 0.113779, 0.113807, 0.113791], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 3, 0, 0, 6, 1, 1, 2, 22, 0, 26, 1, 1, 0, 0, 0, 0]': ([0.137417, 0.135521, 0.13347, 0.117677, 0.113748, 0.113826, 0.11365, 0.114202, 0.113761, 0.113835, 0.113669, 0.114822, 0.113783, 0.11381, 0.113683, 0.113746, 0.114136, 0.114145, 0.113747, 0.113736, 0.113826, 0.113841, 0.113746, 0.113778, 0.1145, 0.113863, 0.113697, 0.113779, 0.113807, 0.113791], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	31
        Max loop nest depth: 	4
        Additions: 		714
        Multiplications: 	272
        Divisions: 		0
        Logical: 		0
        Reads: 			1511
        Writes: 		304
        Comparisons:		31
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest35.exe __orio_perftest35.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest35.exe  
Program Test Output: 
{'[5, 0, 6, 0, 6, 4, 0, 1, 23, 6, 0, 27, 0, 1, 1, 1, 0, 0]' : 0.151843}
{'[5, 0, 6, 0, 6, 4, 0, 1, 23, 6, 0, 27, 0, 1, 1, 1, 0, 0]' : 0.149927}
{'[5, 0, 6, 0, 6, 4, 0, 1, 23, 6, 0, 27, 0, 1, 1, 1, 0, 0]' : 0.131178}
{'[5, 0, 6, 0, 6, 4, 0, 1, 23, 6, 0, 27, 0, 1, 1, 1, 0, 0]' : 0.133665}
{'[5, 0, 6, 0, 6, 4, 0, 1, 23, 6, 0, 27, 0, 1, 1, 1, 0, 0]' : 0.132458}
{'[5, 0, 6, 0, 6, 4, 0, 1, 23, 6, 0, 27, 0, 1, 1, 1, 0, 0]' : 0.130355}
{'[5, 0, 6, 0, 6, 4, 0, 1, 23, 6, 0, 27, 0, 1, 1, 1, 0, 0]' : 0.131098}
{'[5, 0, 6, 0, 6, 4, 0, 1, 23, 6, 0, 27, 0, 1, 1, 1, 0, 0]' : 0.133425}
{'[5, 0, 6, 0, 6, 4, 0, 1, 23, 6, 0, 27, 0, 1, 1, 1, 0, 0]' : 0.13334}
{'[5, 0, 6, 0, 6, 4, 0, 1, 23, 6, 0, 27, 0, 1, 1, 1, 0, 0]' : 0.130019}
{'[5, 0, 6, 0, 6, 4, 0, 1, 23, 6, 0, 27, 0, 1, 1, 1, 0, 0]' : 0.131869}
{'[5, 0, 6, 0, 6, 4, 0, 1, 23, 6, 0, 27, 0, 1, 1, 1, 0, 0]' : 0.131961}
{'[5, 0, 6, 0, 6, 4, 0, 1, 23, 6, 0, 27, 0, 1, 1, 1, 0, 0]' : 0.130094}
{'[5, 0, 6, 0, 6, 4, 0, 1, 23, 6, 0, 27, 0, 1, 1, 1, 0, 0]' : 0.130468}
{'[5, 0, 6, 0, 6, 4, 0, 1, 23, 6, 0, 27, 0, 1, 1, 1, 0, 0]' : 0.132713}
{'[5, 0, 6, 0, 6, 4, 0, 1, 23, 6, 0, 27, 0, 1, 1, 1, 0, 0]' : 0.133541}
{'[5, 0, 6, 0, 6, 4, 0, 1, 23, 6, 0, 27, 0, 1, 1, 1, 0, 0]' : 0.131842}
{'[5, 0, 6, 0, 6, 4, 0, 1, 23, 6, 0, 27, 0, 1, 1, 1, 0, 0]' : 0.130222}
{'[5, 0, 6, 0, 6, 4, 0, 1, 23, 6, 0, 27, 0, 1, 1, 1, 0, 0]' : 0.133252}
{'[5, 0, 6, 0, 6, 4, 0, 1, 23, 6, 0, 27, 0, 1, 1, 1, 0, 0]' : 0.131092}
{'[5, 0, 6, 0, 6, 4, 0, 1, 23, 6, 0, 27, 0, 1, 1, 1, 0, 0]' : 0.130135}
{'[5, 0, 6, 0, 6, 4, 0, 1, 23, 6, 0, 27, 0, 1, 1, 1, 0, 0]' : 0.130636}
{'[5, 0, 6, 0, 6, 4, 0, 1, 23, 6, 0, 27, 0, 1, 1, 1, 0, 0]' : 0.133802}
{'[5, 0, 6, 0, 6, 4, 0, 1, 23, 6, 0, 27, 0, 1, 1, 1, 0, 0]' : 0.133506}
{'[5, 0, 6, 0, 6, 4, 0, 1, 23, 6, 0, 27, 0, 1, 1, 1, 0, 0]' : 0.130668}
{'[5, 0, 6, 0, 6, 4, 0, 1, 23, 6, 0, 27, 0, 1, 1, 1, 0, 0]' : 0.131455}
{'[5, 0, 6, 0, 6, 4, 0, 1, 23, 6, 0, 27, 0, 1, 1, 1, 0, 0]' : 0.133563}
{'[5, 0, 6, 0, 6, 4, 0, 1, 23, 6, 0, 27, 0, 1, 1, 1, 0, 0]' : 0.130326}
{'[5, 0, 6, 0, 6, 4, 0, 1, 23, 6, 0, 27, 0, 1, 1, 1, 0, 0]' : 0.130163}
{'[5, 0, 6, 0, 6, 4, 0, 1, 23, 6, 0, 27, 0, 1, 1, 1, 0, 0]' : 0.133461}

out:
 ["{'[5, 0, 6, 0, 6, 4, 0, 1, 23, 6, 0, 27, 0, 1, 1, 1, 0, 0]' : 0.151843}", "{'[5, 0, 6, 0, 6, 4, 0, 1, 23, 6, 0, 27, 0, 1, 1, 1, 0, 0]' : 0.149927}", "{'[5, 0, 6, 0, 6, 4, 0, 1, 23, 6, 0, 27, 0, 1, 1, 1, 0, 0]' : 0.131178}", "{'[5, 0, 6, 0, 6, 4, 0, 1, 23, 6, 0, 27, 0, 1, 1, 1, 0, 0]' : 0.133665}", "{'[5, 0, 6, 0, 6, 4, 0, 1, 23, 6, 0, 27, 0, 1, 1, 1, 0, 0]' : 0.132458}", "{'[5, 0, 6, 0, 6, 4, 0, 1, 23, 6, 0, 27, 0, 1, 1, 1, 0, 0]' : 0.130355}", "{'[5, 0, 6, 0, 6, 4, 0, 1, 23, 6, 0, 27, 0, 1, 1, 1, 0, 0]' : 0.131098}", "{'[5, 0, 6, 0, 6, 4, 0, 1, 23, 6, 0, 27, 0, 1, 1, 1, 0, 0]' : 0.133425}", "{'[5, 0, 6, 0, 6, 4, 0, 1, 23, 6, 0, 27, 0, 1, 1, 1, 0, 0]' : 0.13334}", "{'[5, 0, 6, 0, 6, 4, 0, 1, 23, 6, 0, 27, 0, 1, 1, 1, 0, 0]' : 0.130019}", "{'[5, 0, 6, 0, 6, 4, 0, 1, 23, 6, 0, 27, 0, 1, 1, 1, 0, 0]' : 0.131869}", "{'[5, 0, 6, 0, 6, 4, 0, 1, 23, 6, 0, 27, 0, 1, 1, 1, 0, 0]' : 0.131961}", "{'[5, 0, 6, 0, 6, 4, 0, 1, 23, 6, 0, 27, 0, 1, 1, 1, 0, 0]' : 0.130094}", "{'[5, 0, 6, 0, 6, 4, 0, 1, 23, 6, 0, 27, 0, 1, 1, 1, 0, 0]' : 0.130468}", "{'[5, 0, 6, 0, 6, 4, 0, 1, 23, 6, 0, 27, 0, 1, 1, 1, 0, 0]' : 0.132713}", "{'[5, 0, 6, 0, 6, 4, 0, 1, 23, 6, 0, 27, 0, 1, 1, 1, 0, 0]' : 0.133541}", "{'[5, 0, 6, 0, 6, 4, 0, 1, 23, 6, 0, 27, 0, 1, 1, 1, 0, 0]' : 0.131842}", "{'[5, 0, 6, 0, 6, 4, 0, 1, 23, 6, 0, 27, 0, 1, 1, 1, 0, 0]' : 0.130222}", "{'[5, 0, 6, 0, 6, 4, 0, 1, 23, 6, 0, 27, 0, 1, 1, 1, 0, 0]' : 0.133252}", "{'[5, 0, 6, 0, 6, 4, 0, 1, 23, 6, 0, 27, 0, 1, 1, 1, 0, 0]' : 0.131092}", "{'[5, 0, 6, 0, 6, 4, 0, 1, 23, 6, 0, 27, 0, 1, 1, 1, 0, 0]' : 0.130135}", "{'[5, 0, 6, 0, 6, 4, 0, 1, 23, 6, 0, 27, 0, 1, 1, 1, 0, 0]' : 0.130636}", "{'[5, 0, 6, 0, 6, 4, 0, 1, 23, 6, 0, 27, 0, 1, 1, 1, 0, 0]' : 0.133802}", "{'[5, 0, 6, 0, 6, 4, 0, 1, 23, 6, 0, 27, 0, 1, 1, 1, 0, 0]' : 0.133506}", "{'[5, 0, 6, 0, 6, 4, 0, 1, 23, 6, 0, 27, 0, 1, 1, 1, 0, 0]' : 0.130668}", "{'[5, 0, 6, 0, 6, 4, 0, 1, 23, 6, 0, 27, 0, 1, 1, 1, 0, 0]' : 0.131455}", "{'[5, 0, 6, 0, 6, 4, 0, 1, 23, 6, 0, 27, 0, 1, 1, 1, 0, 0]' : 0.133563}", "{'[5, 0, 6, 0, 6, 4, 0, 1, 23, 6, 0, 27, 0, 1, 1, 1, 0, 0]' : 0.130326}", "{'[5, 0, 6, 0, 6, 4, 0, 1, 23, 6, 0, 27, 0, 1, 1, 1, 0, 0]' : 0.130163}", "{'[5, 0, 6, 0, 6, 4, 0, 1, 23, 6, 0, 27, 0, 1, 1, 1, 0, 0]' : 0.133461}"]
returning from 'run': {'[5, 0, 6, 0, 6, 4, 0, 1, 23, 6, 0, 27, 0, 1, 1, 1, 0, 0]': ([0.151843, 0.149927, 0.131178, 0.133665, 0.132458, 0.130355, 0.131098, 0.133425, 0.13334, 0.130019, 0.131869, 0.131961, 0.130094, 0.130468, 0.132713, 0.133541, 0.131842, 0.130222, 0.133252, 0.131092, 0.130135, 0.130636, 0.133802, 0.133506, 0.130668, 0.131455, 0.133563, 0.130326, 0.130163, 0.133461], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 0, 6, 0, 6, 4, 0, 1, 23, 6, 0, 27, 0, 1, 1, 1, 0, 0]': ([0.151843, 0.149927, 0.131178, 0.133665, 0.132458, 0.130355, 0.131098, 0.133425, 0.13334, 0.130019, 0.131869, 0.131961, 0.130094, 0.130468, 0.132713, 0.133541, 0.131842, 0.130222, 0.133252, 0.131092, 0.130135, 0.130636, 0.133802, 0.133506, 0.130668, 0.131455, 0.133563, 0.130326, 0.130163, 0.133461], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = iii
Code stats:
        Number of loops: 	83
        Max loop nest depth: 	5
        Additions: 		2579
        Multiplications: 	672
        Divisions: 		0
        Logical: 		0
        Reads: 			4246
        Writes: 		545
        Comparisons:		83
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest36.exe __orio_perftest36.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest36.exe  
Program Test Output: 
{'[4, 2, 6, 2, 3, 0, 1, 0, 0, 18, 1, 0, 1, 0, 1, 0, 0, 0]' : 0.110786}
{'[4, 2, 6, 2, 3, 0, 1, 0, 0, 18, 1, 0, 1, 0, 1, 0, 0, 0]' : 0.110463}
{'[4, 2, 6, 2, 3, 0, 1, 0, 0, 18, 1, 0, 1, 0, 1, 0, 0, 0]' : 0.107169}
{'[4, 2, 6, 2, 3, 0, 1, 0, 0, 18, 1, 0, 1, 0, 1, 0, 0, 0]' : 0.108213}
{'[4, 2, 6, 2, 3, 0, 1, 0, 0, 18, 1, 0, 1, 0, 1, 0, 0, 0]' : 0.110619}
{'[4, 2, 6, 2, 3, 0, 1, 0, 0, 18, 1, 0, 1, 0, 1, 0, 0, 0]' : 0.108934}
{'[4, 2, 6, 2, 3, 0, 1, 0, 0, 18, 1, 0, 1, 0, 1, 0, 0, 0]' : 0.107122}
{'[4, 2, 6, 2, 3, 0, 1, 0, 0, 18, 1, 0, 1, 0, 1, 0, 0, 0]' : 0.107425}
{'[4, 2, 6, 2, 3, 0, 1, 0, 0, 18, 1, 0, 1, 0, 1, 0, 0, 0]' : 0.108822}
{'[4, 2, 6, 2, 3, 0, 1, 0, 0, 18, 1, 0, 1, 0, 1, 0, 0, 0]' : 0.110422}
{'[4, 2, 6, 2, 3, 0, 1, 0, 0, 18, 1, 0, 1, 0, 1, 0, 0, 0]' : 0.110789}
{'[4, 2, 6, 2, 3, 0, 1, 0, 0, 18, 1, 0, 1, 0, 1, 0, 0, 0]' : 0.111264}
{'[4, 2, 6, 2, 3, 0, 1, 0, 0, 18, 1, 0, 1, 0, 1, 0, 0, 0]' : 0.11031}
{'[4, 2, 6, 2, 3, 0, 1, 0, 0, 18, 1, 0, 1, 0, 1, 0, 0, 0]' : 0.113695}
{'[4, 2, 6, 2, 3, 0, 1, 0, 0, 18, 1, 0, 1, 0, 1, 0, 0, 0]' : 0.109886}
{'[4, 2, 6, 2, 3, 0, 1, 0, 0, 18, 1, 0, 1, 0, 1, 0, 0, 0]' : 0.107399}
{'[4, 2, 6, 2, 3, 0, 1, 0, 0, 18, 1, 0, 1, 0, 1, 0, 0, 0]' : 0.106987}
{'[4, 2, 6, 2, 3, 0, 1, 0, 0, 18, 1, 0, 1, 0, 1, 0, 0, 0]' : 0.108556}
{'[4, 2, 6, 2, 3, 0, 1, 0, 0, 18, 1, 0, 1, 0, 1, 0, 0, 0]' : 0.110322}
{'[4, 2, 6, 2, 3, 0, 1, 0, 0, 18, 1, 0, 1, 0, 1, 0, 0, 0]' : 0.110631}
{'[4, 2, 6, 2, 3, 0, 1, 0, 0, 18, 1, 0, 1, 0, 1, 0, 0, 0]' : 0.108311}
{'[4, 2, 6, 2, 3, 0, 1, 0, 0, 18, 1, 0, 1, 0, 1, 0, 0, 0]' : 0.107125}
{'[4, 2, 6, 2, 3, 0, 1, 0, 0, 18, 1, 0, 1, 0, 1, 0, 0, 0]' : 0.110007}
{'[4, 2, 6, 2, 3, 0, 1, 0, 0, 18, 1, 0, 1, 0, 1, 0, 0, 0]' : 0.110803}
{'[4, 2, 6, 2, 3, 0, 1, 0, 0, 18, 1, 0, 1, 0, 1, 0, 0, 0]' : 0.10786}
{'[4, 2, 6, 2, 3, 0, 1, 0, 0, 18, 1, 0, 1, 0, 1, 0, 0, 0]' : 0.107406}
{'[4, 2, 6, 2, 3, 0, 1, 0, 0, 18, 1, 0, 1, 0, 1, 0, 0, 0]' : 0.108092}
{'[4, 2, 6, 2, 3, 0, 1, 0, 0, 18, 1, 0, 1, 0, 1, 0, 0, 0]' : 0.110883}
{'[4, 2, 6, 2, 3, 0, 1, 0, 0, 18, 1, 0, 1, 0, 1, 0, 0, 0]' : 0.110306}
{'[4, 2, 6, 2, 3, 0, 1, 0, 0, 18, 1, 0, 1, 0, 1, 0, 0, 0]' : 0.108793}

out:
 ["{'[4, 2, 6, 2, 3, 0, 1, 0, 0, 18, 1, 0, 1, 0, 1, 0, 0, 0]' : 0.110786}", "{'[4, 2, 6, 2, 3, 0, 1, 0, 0, 18, 1, 0, 1, 0, 1, 0, 0, 0]' : 0.110463}", "{'[4, 2, 6, 2, 3, 0, 1, 0, 0, 18, 1, 0, 1, 0, 1, 0, 0, 0]' : 0.107169}", "{'[4, 2, 6, 2, 3, 0, 1, 0, 0, 18, 1, 0, 1, 0, 1, 0, 0, 0]' : 0.108213}", "{'[4, 2, 6, 2, 3, 0, 1, 0, 0, 18, 1, 0, 1, 0, 1, 0, 0, 0]' : 0.110619}", "{'[4, 2, 6, 2, 3, 0, 1, 0, 0, 18, 1, 0, 1, 0, 1, 0, 0, 0]' : 0.108934}", "{'[4, 2, 6, 2, 3, 0, 1, 0, 0, 18, 1, 0, 1, 0, 1, 0, 0, 0]' : 0.107122}", "{'[4, 2, 6, 2, 3, 0, 1, 0, 0, 18, 1, 0, 1, 0, 1, 0, 0, 0]' : 0.107425}", "{'[4, 2, 6, 2, 3, 0, 1, 0, 0, 18, 1, 0, 1, 0, 1, 0, 0, 0]' : 0.108822}", "{'[4, 2, 6, 2, 3, 0, 1, 0, 0, 18, 1, 0, 1, 0, 1, 0, 0, 0]' : 0.110422}", "{'[4, 2, 6, 2, 3, 0, 1, 0, 0, 18, 1, 0, 1, 0, 1, 0, 0, 0]' : 0.110789}", "{'[4, 2, 6, 2, 3, 0, 1, 0, 0, 18, 1, 0, 1, 0, 1, 0, 0, 0]' : 0.111264}", "{'[4, 2, 6, 2, 3, 0, 1, 0, 0, 18, 1, 0, 1, 0, 1, 0, 0, 0]' : 0.11031}", "{'[4, 2, 6, 2, 3, 0, 1, 0, 0, 18, 1, 0, 1, 0, 1, 0, 0, 0]' : 0.113695}", "{'[4, 2, 6, 2, 3, 0, 1, 0, 0, 18, 1, 0, 1, 0, 1, 0, 0, 0]' : 0.109886}", "{'[4, 2, 6, 2, 3, 0, 1, 0, 0, 18, 1, 0, 1, 0, 1, 0, 0, 0]' : 0.107399}", "{'[4, 2, 6, 2, 3, 0, 1, 0, 0, 18, 1, 0, 1, 0, 1, 0, 0, 0]' : 0.106987}", "{'[4, 2, 6, 2, 3, 0, 1, 0, 0, 18, 1, 0, 1, 0, 1, 0, 0, 0]' : 0.108556}", "{'[4, 2, 6, 2, 3, 0, 1, 0, 0, 18, 1, 0, 1, 0, 1, 0, 0, 0]' : 0.110322}", "{'[4, 2, 6, 2, 3, 0, 1, 0, 0, 18, 1, 0, 1, 0, 1, 0, 0, 0]' : 0.110631}", "{'[4, 2, 6, 2, 3, 0, 1, 0, 0, 18, 1, 0, 1, 0, 1, 0, 0, 0]' : 0.108311}", "{'[4, 2, 6, 2, 3, 0, 1, 0, 0, 18, 1, 0, 1, 0, 1, 0, 0, 0]' : 0.107125}", "{'[4, 2, 6, 2, 3, 0, 1, 0, 0, 18, 1, 0, 1, 0, 1, 0, 0, 0]' : 0.110007}", "{'[4, 2, 6, 2, 3, 0, 1, 0, 0, 18, 1, 0, 1, 0, 1, 0, 0, 0]' : 0.110803}", "{'[4, 2, 6, 2, 3, 0, 1, 0, 0, 18, 1, 0, 1, 0, 1, 0, 0, 0]' : 0.10786}", "{'[4, 2, 6, 2, 3, 0, 1, 0, 0, 18, 1, 0, 1, 0, 1, 0, 0, 0]' : 0.107406}", "{'[4, 2, 6, 2, 3, 0, 1, 0, 0, 18, 1, 0, 1, 0, 1, 0, 0, 0]' : 0.108092}", "{'[4, 2, 6, 2, 3, 0, 1, 0, 0, 18, 1, 0, 1, 0, 1, 0, 0, 0]' : 0.110883}", "{'[4, 2, 6, 2, 3, 0, 1, 0, 0, 18, 1, 0, 1, 0, 1, 0, 0, 0]' : 0.110306}", "{'[4, 2, 6, 2, 3, 0, 1, 0, 0, 18, 1, 0, 1, 0, 1, 0, 0, 0]' : 0.108793}"]
returning from 'run': {'[4, 2, 6, 2, 3, 0, 1, 0, 0, 18, 1, 0, 1, 0, 1, 0, 0, 0]': ([0.110786, 0.110463, 0.107169, 0.108213, 0.110619, 0.108934, 0.107122, 0.107425, 0.108822, 0.110422, 0.110789, 0.111264, 0.11031, 0.113695, 0.109886, 0.107399, 0.106987, 0.108556, 0.110322, 0.110631, 0.108311, 0.107125, 0.110007, 0.110803, 0.10786, 0.107406, 0.108092, 0.110883, 0.110306, 0.108793], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 2, 6, 2, 3, 0, 1, 0, 0, 18, 1, 0, 1, 0, 1, 0, 0, 0]': ([0.110786, 0.110463, 0.107169, 0.108213, 0.110619, 0.108934, 0.107122, 0.107425, 0.108822, 0.110422, 0.110789, 0.111264, 0.11031, 0.113695, 0.109886, 0.107399, 0.106987, 0.108556, 0.110322, 0.110631, 0.108311, 0.107125, 0.110007, 0.110803, 0.10786, 0.107406, 0.108092, 0.110883, 0.110306, 0.108793], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	6
        Additions: 		382
        Multiplications: 	108
        Divisions: 		0
        Logical: 		0
        Reads: 			767
        Writes: 		115
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest37.exe __orio_perftest37.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest37.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest37.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest37.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest37.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		1948
        Multiplications: 	924
        Divisions: 		0
        Logical: 		0
        Reads: 			3828
        Writes: 		675
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest38.exe __orio_perftest38.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest38.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest38.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest38.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest38.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	6
        Additions: 		542
        Multiplications: 	192
        Divisions: 		0
        Logical: 		0
        Reads: 			1109
        Writes: 		205
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest39.exe __orio_perftest39.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest39.exe  
Program Test Output: 
{'[6, 0, 2, 6, 0, 6, 1, 1, 12, 1, 22, 0, 0, 0, 1, 1, 0, 0]' : 0.233109}
{'[6, 0, 2, 6, 0, 6, 1, 1, 12, 1, 22, 0, 0, 0, 1, 1, 0, 0]' : 0.232178}
{'[6, 0, 2, 6, 0, 6, 1, 1, 12, 1, 22, 0, 0, 0, 1, 1, 0, 0]' : 0.202108}
{'[6, 0, 2, 6, 0, 6, 1, 1, 12, 1, 22, 0, 0, 0, 1, 1, 0, 0]' : 0.199592}
{'[6, 0, 2, 6, 0, 6, 1, 1, 12, 1, 22, 0, 0, 0, 1, 1, 0, 0]' : 0.195383}
{'[6, 0, 2, 6, 0, 6, 1, 1, 12, 1, 22, 0, 0, 0, 1, 1, 0, 0]' : 0.195356}
{'[6, 0, 2, 6, 0, 6, 1, 1, 12, 1, 22, 0, 0, 0, 1, 1, 0, 0]' : 0.20599}
{'[6, 0, 2, 6, 0, 6, 1, 1, 12, 1, 22, 0, 0, 0, 1, 1, 0, 0]' : 0.207947}
{'[6, 0, 2, 6, 0, 6, 1, 1, 12, 1, 22, 0, 0, 0, 1, 1, 0, 0]' : 0.204982}
{'[6, 0, 2, 6, 0, 6, 1, 1, 12, 1, 22, 0, 0, 0, 1, 1, 0, 0]' : 0.201292}
{'[6, 0, 2, 6, 0, 6, 1, 1, 12, 1, 22, 0, 0, 0, 1, 1, 0, 0]' : 0.20092}
{'[6, 0, 2, 6, 0, 6, 1, 1, 12, 1, 22, 0, 0, 0, 1, 1, 0, 0]' : 0.207703}
{'[6, 0, 2, 6, 0, 6, 1, 1, 12, 1, 22, 0, 0, 0, 1, 1, 0, 0]' : 0.207915}
{'[6, 0, 2, 6, 0, 6, 1, 1, 12, 1, 22, 0, 0, 0, 1, 1, 0, 0]' : 0.207347}
{'[6, 0, 2, 6, 0, 6, 1, 1, 12, 1, 22, 0, 0, 0, 1, 1, 0, 0]' : 0.198732}
{'[6, 0, 2, 6, 0, 6, 1, 1, 12, 1, 22, 0, 0, 0, 1, 1, 0, 0]' : 0.19601}
{'[6, 0, 2, 6, 0, 6, 1, 1, 12, 1, 22, 0, 0, 0, 1, 1, 0, 0]' : 0.201639}
{'[6, 0, 2, 6, 0, 6, 1, 1, 12, 1, 22, 0, 0, 0, 1, 1, 0, 0]' : 0.201856}
{'[6, 0, 2, 6, 0, 6, 1, 1, 12, 1, 22, 0, 0, 0, 1, 1, 0, 0]' : 0.201981}
{'[6, 0, 2, 6, 0, 6, 1, 1, 12, 1, 22, 0, 0, 0, 1, 1, 0, 0]' : 0.201826}
{'[6, 0, 2, 6, 0, 6, 1, 1, 12, 1, 22, 0, 0, 0, 1, 1, 0, 0]' : 0.200224}
{'[6, 0, 2, 6, 0, 6, 1, 1, 12, 1, 22, 0, 0, 0, 1, 1, 0, 0]' : 0.205272}
{'[6, 0, 2, 6, 0, 6, 1, 1, 12, 1, 22, 0, 0, 0, 1, 1, 0, 0]' : 0.202007}
{'[6, 0, 2, 6, 0, 6, 1, 1, 12, 1, 22, 0, 0, 0, 1, 1, 0, 0]' : 0.201765}
{'[6, 0, 2, 6, 0, 6, 1, 1, 12, 1, 22, 0, 0, 0, 1, 1, 0, 0]' : 0.20174}
{'[6, 0, 2, 6, 0, 6, 1, 1, 12, 1, 22, 0, 0, 0, 1, 1, 0, 0]' : 0.202866}
{'[6, 0, 2, 6, 0, 6, 1, 1, 12, 1, 22, 0, 0, 0, 1, 1, 0, 0]' : 0.205643}
{'[6, 0, 2, 6, 0, 6, 1, 1, 12, 1, 22, 0, 0, 0, 1, 1, 0, 0]' : 0.201731}
{'[6, 0, 2, 6, 0, 6, 1, 1, 12, 1, 22, 0, 0, 0, 1, 1, 0, 0]' : 0.2019}
{'[6, 0, 2, 6, 0, 6, 1, 1, 12, 1, 22, 0, 0, 0, 1, 1, 0, 0]' : 0.20178}

out:
 ["{'[6, 0, 2, 6, 0, 6, 1, 1, 12, 1, 22, 0, 0, 0, 1, 1, 0, 0]' : 0.233109}", "{'[6, 0, 2, 6, 0, 6, 1, 1, 12, 1, 22, 0, 0, 0, 1, 1, 0, 0]' : 0.232178}", "{'[6, 0, 2, 6, 0, 6, 1, 1, 12, 1, 22, 0, 0, 0, 1, 1, 0, 0]' : 0.202108}", "{'[6, 0, 2, 6, 0, 6, 1, 1, 12, 1, 22, 0, 0, 0, 1, 1, 0, 0]' : 0.199592}", "{'[6, 0, 2, 6, 0, 6, 1, 1, 12, 1, 22, 0, 0, 0, 1, 1, 0, 0]' : 0.195383}", "{'[6, 0, 2, 6, 0, 6, 1, 1, 12, 1, 22, 0, 0, 0, 1, 1, 0, 0]' : 0.195356}", "{'[6, 0, 2, 6, 0, 6, 1, 1, 12, 1, 22, 0, 0, 0, 1, 1, 0, 0]' : 0.20599}", "{'[6, 0, 2, 6, 0, 6, 1, 1, 12, 1, 22, 0, 0, 0, 1, 1, 0, 0]' : 0.207947}", "{'[6, 0, 2, 6, 0, 6, 1, 1, 12, 1, 22, 0, 0, 0, 1, 1, 0, 0]' : 0.204982}", "{'[6, 0, 2, 6, 0, 6, 1, 1, 12, 1, 22, 0, 0, 0, 1, 1, 0, 0]' : 0.201292}", "{'[6, 0, 2, 6, 0, 6, 1, 1, 12, 1, 22, 0, 0, 0, 1, 1, 0, 0]' : 0.20092}", "{'[6, 0, 2, 6, 0, 6, 1, 1, 12, 1, 22, 0, 0, 0, 1, 1, 0, 0]' : 0.207703}", "{'[6, 0, 2, 6, 0, 6, 1, 1, 12, 1, 22, 0, 0, 0, 1, 1, 0, 0]' : 0.207915}", "{'[6, 0, 2, 6, 0, 6, 1, 1, 12, 1, 22, 0, 0, 0, 1, 1, 0, 0]' : 0.207347}", "{'[6, 0, 2, 6, 0, 6, 1, 1, 12, 1, 22, 0, 0, 0, 1, 1, 0, 0]' : 0.198732}", "{'[6, 0, 2, 6, 0, 6, 1, 1, 12, 1, 22, 0, 0, 0, 1, 1, 0, 0]' : 0.19601}", "{'[6, 0, 2, 6, 0, 6, 1, 1, 12, 1, 22, 0, 0, 0, 1, 1, 0, 0]' : 0.201639}", "{'[6, 0, 2, 6, 0, 6, 1, 1, 12, 1, 22, 0, 0, 0, 1, 1, 0, 0]' : 0.201856}", "{'[6, 0, 2, 6, 0, 6, 1, 1, 12, 1, 22, 0, 0, 0, 1, 1, 0, 0]' : 0.201981}", "{'[6, 0, 2, 6, 0, 6, 1, 1, 12, 1, 22, 0, 0, 0, 1, 1, 0, 0]' : 0.201826}", "{'[6, 0, 2, 6, 0, 6, 1, 1, 12, 1, 22, 0, 0, 0, 1, 1, 0, 0]' : 0.200224}", "{'[6, 0, 2, 6, 0, 6, 1, 1, 12, 1, 22, 0, 0, 0, 1, 1, 0, 0]' : 0.205272}", "{'[6, 0, 2, 6, 0, 6, 1, 1, 12, 1, 22, 0, 0, 0, 1, 1, 0, 0]' : 0.202007}", "{'[6, 0, 2, 6, 0, 6, 1, 1, 12, 1, 22, 0, 0, 0, 1, 1, 0, 0]' : 0.201765}", "{'[6, 0, 2, 6, 0, 6, 1, 1, 12, 1, 22, 0, 0, 0, 1, 1, 0, 0]' : 0.20174}", "{'[6, 0, 2, 6, 0, 6, 1, 1, 12, 1, 22, 0, 0, 0, 1, 1, 0, 0]' : 0.202866}", "{'[6, 0, 2, 6, 0, 6, 1, 1, 12, 1, 22, 0, 0, 0, 1, 1, 0, 0]' : 0.205643}", "{'[6, 0, 2, 6, 0, 6, 1, 1, 12, 1, 22, 0, 0, 0, 1, 1, 0, 0]' : 0.201731}", "{'[6, 0, 2, 6, 0, 6, 1, 1, 12, 1, 22, 0, 0, 0, 1, 1, 0, 0]' : 0.2019}", "{'[6, 0, 2, 6, 0, 6, 1, 1, 12, 1, 22, 0, 0, 0, 1, 1, 0, 0]' : 0.20178}"]
returning from 'run': {'[6, 0, 2, 6, 0, 6, 1, 1, 12, 1, 22, 0, 0, 0, 1, 1, 0, 0]': ([0.233109, 0.232178, 0.202108, 0.199592, 0.195383, 0.195356, 0.20599, 0.207947, 0.204982, 0.201292, 0.20092, 0.207703, 0.207915, 0.207347, 0.198732, 0.19601, 0.201639, 0.201856, 0.201981, 0.201826, 0.200224, 0.205272, 0.202007, 0.201765, 0.20174, 0.202866, 0.205643, 0.201731, 0.2019, 0.20178], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 2, 6, 0, 6, 1, 1, 12, 1, 22, 0, 0, 0, 1, 1, 0, 0]': ([0.233109, 0.232178, 0.202108, 0.199592, 0.195383, 0.195356, 0.20599, 0.207947, 0.204982, 0.201292, 0.20092, 0.207703, 0.207915, 0.207347, 0.198732, 0.19601, 0.201639, 0.201856, 0.201981, 0.201826, 0.200224, 0.205272, 0.202007, 0.201765, 0.20174, 0.202866, 0.205643, 0.201731, 0.2019, 0.20178], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	6
        Additions: 		177
        Multiplications: 	62
        Divisions: 		0
        Logical: 		0
        Reads: 			416
        Writes: 		91
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest40.exe __orio_perftest40.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest40.exe  
Program Test Output: 
{'[4, 2, 0, 6, 4, 2, 0, 0, 0, 0, 15, 12, 0, 0, 0, 1, 0, 1]' : 0.184865}
{'[4, 2, 0, 6, 4, 2, 0, 0, 0, 0, 15, 12, 0, 0, 0, 1, 0, 1]' : 0.184956}
{'[4, 2, 0, 6, 4, 2, 0, 0, 0, 0, 15, 12, 0, 0, 0, 1, 0, 1]' : 0.184723}
{'[4, 2, 0, 6, 4, 2, 0, 0, 0, 0, 15, 12, 0, 0, 0, 1, 0, 1]' : 0.162937}
{'[4, 2, 0, 6, 4, 2, 0, 0, 0, 0, 15, 12, 0, 0, 0, 1, 0, 1]' : 0.158618}
{'[4, 2, 0, 6, 4, 2, 0, 0, 0, 0, 15, 12, 0, 0, 0, 1, 0, 1]' : 0.159865}
{'[4, 2, 0, 6, 4, 2, 0, 0, 0, 0, 15, 12, 0, 0, 0, 1, 0, 1]' : 0.159934}
{'[4, 2, 0, 6, 4, 2, 0, 0, 0, 0, 15, 12, 0, 0, 0, 1, 0, 1]' : 0.15981}
{'[4, 2, 0, 6, 4, 2, 0, 0, 0, 0, 15, 12, 0, 0, 0, 1, 0, 1]' : 0.159727}
{'[4, 2, 0, 6, 4, 2, 0, 0, 0, 0, 15, 12, 0, 0, 0, 1, 0, 1]' : 0.159818}
{'[4, 2, 0, 6, 4, 2, 0, 0, 0, 0, 15, 12, 0, 0, 0, 1, 0, 1]' : 0.159756}
{'[4, 2, 0, 6, 4, 2, 0, 0, 0, 0, 15, 12, 0, 0, 0, 1, 0, 1]' : 0.159717}
{'[4, 2, 0, 6, 4, 2, 0, 0, 0, 0, 15, 12, 0, 0, 0, 1, 0, 1]' : 0.159953}
{'[4, 2, 0, 6, 4, 2, 0, 0, 0, 0, 15, 12, 0, 0, 0, 1, 0, 1]' : 0.160268}
{'[4, 2, 0, 6, 4, 2, 0, 0, 0, 0, 15, 12, 0, 0, 0, 1, 0, 1]' : 0.159791}
{'[4, 2, 0, 6, 4, 2, 0, 0, 0, 0, 15, 12, 0, 0, 0, 1, 0, 1]' : 0.160068}
{'[4, 2, 0, 6, 4, 2, 0, 0, 0, 0, 15, 12, 0, 0, 0, 1, 0, 1]' : 0.160005}
{'[4, 2, 0, 6, 4, 2, 0, 0, 0, 0, 15, 12, 0, 0, 0, 1, 0, 1]' : 0.15986}
{'[4, 2, 0, 6, 4, 2, 0, 0, 0, 0, 15, 12, 0, 0, 0, 1, 0, 1]' : 0.160055}
{'[4, 2, 0, 6, 4, 2, 0, 0, 0, 0, 15, 12, 0, 0, 0, 1, 0, 1]' : 0.160405}
{'[4, 2, 0, 6, 4, 2, 0, 0, 0, 0, 15, 12, 0, 0, 0, 1, 0, 1]' : 0.164705}
{'[4, 2, 0, 6, 4, 2, 0, 0, 0, 0, 15, 12, 0, 0, 0, 1, 0, 1]' : 0.16475}
{'[4, 2, 0, 6, 4, 2, 0, 0, 0, 0, 15, 12, 0, 0, 0, 1, 0, 1]' : 0.164699}
{'[4, 2, 0, 6, 4, 2, 0, 0, 0, 0, 15, 12, 0, 0, 0, 1, 0, 1]' : 0.164716}
{'[4, 2, 0, 6, 4, 2, 0, 0, 0, 0, 15, 12, 0, 0, 0, 1, 0, 1]' : 0.163612}
{'[4, 2, 0, 6, 4, 2, 0, 0, 0, 0, 15, 12, 0, 0, 0, 1, 0, 1]' : 0.159994}
{'[4, 2, 0, 6, 4, 2, 0, 0, 0, 0, 15, 12, 0, 0, 0, 1, 0, 1]' : 0.16051}
{'[4, 2, 0, 6, 4, 2, 0, 0, 0, 0, 15, 12, 0, 0, 0, 1, 0, 1]' : 0.159847}
{'[4, 2, 0, 6, 4, 2, 0, 0, 0, 0, 15, 12, 0, 0, 0, 1, 0, 1]' : 0.156237}
{'[4, 2, 0, 6, 4, 2, 0, 0, 0, 0, 15, 12, 0, 0, 0, 1, 0, 1]' : 0.159165}

out:
 ["{'[4, 2, 0, 6, 4, 2, 0, 0, 0, 0, 15, 12, 0, 0, 0, 1, 0, 1]' : 0.184865}", "{'[4, 2, 0, 6, 4, 2, 0, 0, 0, 0, 15, 12, 0, 0, 0, 1, 0, 1]' : 0.184956}", "{'[4, 2, 0, 6, 4, 2, 0, 0, 0, 0, 15, 12, 0, 0, 0, 1, 0, 1]' : 0.184723}", "{'[4, 2, 0, 6, 4, 2, 0, 0, 0, 0, 15, 12, 0, 0, 0, 1, 0, 1]' : 0.162937}", "{'[4, 2, 0, 6, 4, 2, 0, 0, 0, 0, 15, 12, 0, 0, 0, 1, 0, 1]' : 0.158618}", "{'[4, 2, 0, 6, 4, 2, 0, 0, 0, 0, 15, 12, 0, 0, 0, 1, 0, 1]' : 0.159865}", "{'[4, 2, 0, 6, 4, 2, 0, 0, 0, 0, 15, 12, 0, 0, 0, 1, 0, 1]' : 0.159934}", "{'[4, 2, 0, 6, 4, 2, 0, 0, 0, 0, 15, 12, 0, 0, 0, 1, 0, 1]' : 0.15981}", "{'[4, 2, 0, 6, 4, 2, 0, 0, 0, 0, 15, 12, 0, 0, 0, 1, 0, 1]' : 0.159727}", "{'[4, 2, 0, 6, 4, 2, 0, 0, 0, 0, 15, 12, 0, 0, 0, 1, 0, 1]' : 0.159818}", "{'[4, 2, 0, 6, 4, 2, 0, 0, 0, 0, 15, 12, 0, 0, 0, 1, 0, 1]' : 0.159756}", "{'[4, 2, 0, 6, 4, 2, 0, 0, 0, 0, 15, 12, 0, 0, 0, 1, 0, 1]' : 0.159717}", "{'[4, 2, 0, 6, 4, 2, 0, 0, 0, 0, 15, 12, 0, 0, 0, 1, 0, 1]' : 0.159953}", "{'[4, 2, 0, 6, 4, 2, 0, 0, 0, 0, 15, 12, 0, 0, 0, 1, 0, 1]' : 0.160268}", "{'[4, 2, 0, 6, 4, 2, 0, 0, 0, 0, 15, 12, 0, 0, 0, 1, 0, 1]' : 0.159791}", "{'[4, 2, 0, 6, 4, 2, 0, 0, 0, 0, 15, 12, 0, 0, 0, 1, 0, 1]' : 0.160068}", "{'[4, 2, 0, 6, 4, 2, 0, 0, 0, 0, 15, 12, 0, 0, 0, 1, 0, 1]' : 0.160005}", "{'[4, 2, 0, 6, 4, 2, 0, 0, 0, 0, 15, 12, 0, 0, 0, 1, 0, 1]' : 0.15986}", "{'[4, 2, 0, 6, 4, 2, 0, 0, 0, 0, 15, 12, 0, 0, 0, 1, 0, 1]' : 0.160055}", "{'[4, 2, 0, 6, 4, 2, 0, 0, 0, 0, 15, 12, 0, 0, 0, 1, 0, 1]' : 0.160405}", "{'[4, 2, 0, 6, 4, 2, 0, 0, 0, 0, 15, 12, 0, 0, 0, 1, 0, 1]' : 0.164705}", "{'[4, 2, 0, 6, 4, 2, 0, 0, 0, 0, 15, 12, 0, 0, 0, 1, 0, 1]' : 0.16475}", "{'[4, 2, 0, 6, 4, 2, 0, 0, 0, 0, 15, 12, 0, 0, 0, 1, 0, 1]' : 0.164699}", "{'[4, 2, 0, 6, 4, 2, 0, 0, 0, 0, 15, 12, 0, 0, 0, 1, 0, 1]' : 0.164716}", "{'[4, 2, 0, 6, 4, 2, 0, 0, 0, 0, 15, 12, 0, 0, 0, 1, 0, 1]' : 0.163612}", "{'[4, 2, 0, 6, 4, 2, 0, 0, 0, 0, 15, 12, 0, 0, 0, 1, 0, 1]' : 0.159994}", "{'[4, 2, 0, 6, 4, 2, 0, 0, 0, 0, 15, 12, 0, 0, 0, 1, 0, 1]' : 0.16051}", "{'[4, 2, 0, 6, 4, 2, 0, 0, 0, 0, 15, 12, 0, 0, 0, 1, 0, 1]' : 0.159847}", "{'[4, 2, 0, 6, 4, 2, 0, 0, 0, 0, 15, 12, 0, 0, 0, 1, 0, 1]' : 0.156237}", "{'[4, 2, 0, 6, 4, 2, 0, 0, 0, 0, 15, 12, 0, 0, 0, 1, 0, 1]' : 0.159165}"]
returning from 'run': {'[4, 2, 0, 6, 4, 2, 0, 0, 0, 0, 15, 12, 0, 0, 0, 1, 0, 1]': ([0.184865, 0.184956, 0.184723, 0.162937, 0.158618, 0.159865, 0.159934, 0.15981, 0.159727, 0.159818, 0.159756, 0.159717, 0.159953, 0.160268, 0.159791, 0.160068, 0.160005, 0.15986, 0.160055, 0.160405, 0.164705, 0.16475, 0.164699, 0.164716, 0.163612, 0.159994, 0.16051, 0.159847, 0.156237, 0.159165], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 2, 0, 6, 4, 2, 0, 0, 0, 0, 15, 12, 0, 0, 0, 1, 0, 1]': ([0.184865, 0.184956, 0.184723, 0.162937, 0.158618, 0.159865, 0.159934, 0.15981, 0.159727, 0.159818, 0.159756, 0.159717, 0.159953, 0.160268, 0.159791, 0.160068, 0.160005, 0.15986, 0.160055, 0.160405, 0.164705, 0.16475, 0.164699, 0.164716, 0.163612, 0.159994, 0.16051, 0.159847, 0.156237, 0.159165], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	94
        Max loop nest depth: 	4
        Additions: 		2180
        Multiplications: 	864
        Divisions: 		0
        Logical: 		0
        Reads: 			4512
        Writes: 		856
        Comparisons:		94
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest41.exe __orio_perftest41.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest41.exe  
Program Test Output: 
{'[5, 6, 0, 0, 0, 6, 1, 1, 25, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.164266}
{'[5, 6, 0, 0, 0, 6, 1, 1, 25, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.165115}
{'[5, 6, 0, 0, 0, 6, 1, 1, 25, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.165496}
{'[5, 6, 0, 0, 0, 6, 1, 1, 25, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.165622}
{'[5, 6, 0, 0, 0, 6, 1, 1, 25, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.165271}
{'[5, 6, 0, 0, 0, 6, 1, 1, 25, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.165167}
{'[5, 6, 0, 0, 0, 6, 1, 1, 25, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.165459}
{'[5, 6, 0, 0, 0, 6, 1, 1, 25, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.16523}
{'[5, 6, 0, 0, 0, 6, 1, 1, 25, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.165125}
{'[5, 6, 0, 0, 0, 6, 1, 1, 25, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.16539}
{'[5, 6, 0, 0, 0, 6, 1, 1, 25, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.165102}
{'[5, 6, 0, 0, 0, 6, 1, 1, 25, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.165189}
{'[5, 6, 0, 0, 0, 6, 1, 1, 25, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.165253}
{'[5, 6, 0, 0, 0, 6, 1, 1, 25, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.162341}
{'[5, 6, 0, 0, 0, 6, 1, 1, 25, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.160996}
{'[5, 6, 0, 0, 0, 6, 1, 1, 25, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.163217}
{'[5, 6, 0, 0, 0, 6, 1, 1, 25, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.165144}
{'[5, 6, 0, 0, 0, 6, 1, 1, 25, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.165122}
{'[5, 6, 0, 0, 0, 6, 1, 1, 25, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.165226}
{'[5, 6, 0, 0, 0, 6, 1, 1, 25, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.165058}
{'[5, 6, 0, 0, 0, 6, 1, 1, 25, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.165475}
{'[5, 6, 0, 0, 0, 6, 1, 1, 25, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.163556}
{'[5, 6, 0, 0, 0, 6, 1, 1, 25, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.165207}
{'[5, 6, 0, 0, 0, 6, 1, 1, 25, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.165195}
{'[5, 6, 0, 0, 0, 6, 1, 1, 25, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.165213}
{'[5, 6, 0, 0, 0, 6, 1, 1, 25, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.161543}
{'[5, 6, 0, 0, 0, 6, 1, 1, 25, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.161003}
{'[5, 6, 0, 0, 0, 6, 1, 1, 25, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.16242}
{'[5, 6, 0, 0, 0, 6, 1, 1, 25, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.165131}
{'[5, 6, 0, 0, 0, 6, 1, 1, 25, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.16522}

out:
 ["{'[5, 6, 0, 0, 0, 6, 1, 1, 25, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.164266}", "{'[5, 6, 0, 0, 0, 6, 1, 1, 25, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.165115}", "{'[5, 6, 0, 0, 0, 6, 1, 1, 25, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.165496}", "{'[5, 6, 0, 0, 0, 6, 1, 1, 25, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.165622}", "{'[5, 6, 0, 0, 0, 6, 1, 1, 25, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.165271}", "{'[5, 6, 0, 0, 0, 6, 1, 1, 25, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.165167}", "{'[5, 6, 0, 0, 0, 6, 1, 1, 25, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.165459}", "{'[5, 6, 0, 0, 0, 6, 1, 1, 25, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.16523}", "{'[5, 6, 0, 0, 0, 6, 1, 1, 25, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.165125}", "{'[5, 6, 0, 0, 0, 6, 1, 1, 25, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.16539}", "{'[5, 6, 0, 0, 0, 6, 1, 1, 25, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.165102}", "{'[5, 6, 0, 0, 0, 6, 1, 1, 25, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.165189}", "{'[5, 6, 0, 0, 0, 6, 1, 1, 25, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.165253}", "{'[5, 6, 0, 0, 0, 6, 1, 1, 25, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.162341}", "{'[5, 6, 0, 0, 0, 6, 1, 1, 25, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.160996}", "{'[5, 6, 0, 0, 0, 6, 1, 1, 25, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.163217}", "{'[5, 6, 0, 0, 0, 6, 1, 1, 25, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.165144}", "{'[5, 6, 0, 0, 0, 6, 1, 1, 25, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.165122}", "{'[5, 6, 0, 0, 0, 6, 1, 1, 25, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.165226}", "{'[5, 6, 0, 0, 0, 6, 1, 1, 25, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.165058}", "{'[5, 6, 0, 0, 0, 6, 1, 1, 25, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.165475}", "{'[5, 6, 0, 0, 0, 6, 1, 1, 25, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.163556}", "{'[5, 6, 0, 0, 0, 6, 1, 1, 25, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.165207}", "{'[5, 6, 0, 0, 0, 6, 1, 1, 25, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.165195}", "{'[5, 6, 0, 0, 0, 6, 1, 1, 25, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.165213}", "{'[5, 6, 0, 0, 0, 6, 1, 1, 25, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.161543}", "{'[5, 6, 0, 0, 0, 6, 1, 1, 25, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.161003}", "{'[5, 6, 0, 0, 0, 6, 1, 1, 25, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.16242}", "{'[5, 6, 0, 0, 0, 6, 1, 1, 25, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.165131}", "{'[5, 6, 0, 0, 0, 6, 1, 1, 25, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.16522}"]
returning from 'run': {'[5, 6, 0, 0, 0, 6, 1, 1, 25, 25, 29, 0, 0, 1, 1, 1, 1, 1]': ([0.164266, 0.165115, 0.165496, 0.165622, 0.165271, 0.165167, 0.165459, 0.16523, 0.165125, 0.16539, 0.165102, 0.165189, 0.165253, 0.162341, 0.160996, 0.163217, 0.165144, 0.165122, 0.165226, 0.165058, 0.165475, 0.163556, 0.165207, 0.165195, 0.165213, 0.161543, 0.161003, 0.16242, 0.165131, 0.16522], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 6, 0, 0, 0, 6, 1, 1, 25, 25, 29, 0, 0, 1, 1, 1, 1, 1]': ([0.164266, 0.165115, 0.165496, 0.165622, 0.165271, 0.165167, 0.165459, 0.16523, 0.165125, 0.16539, 0.165102, 0.165189, 0.165253, 0.162341, 0.160996, 0.163217, 0.165144, 0.165122, 0.165226, 0.165058, 0.165475, 0.163556, 0.165207, 0.165195, 0.165213, 0.161543, 0.161003, 0.16242, 0.165131, 0.16522], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	39
        Max loop nest depth: 	6
        Additions: 		1976
        Multiplications: 	850
        Divisions: 		0
        Logical: 		0
        Reads: 			3668
        Writes: 		592
        Comparisons:		39
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest42.exe __orio_perftest42.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest42.exe  
Program Test Output: 
{'[2, 4, 0, 4, 5, 0, 0, 1, 5, 7, 14, 0, 1, 1, 0, 1, 0, 0]' : 0.0883899}
{'[2, 4, 0, 4, 5, 0, 0, 1, 5, 7, 14, 0, 1, 1, 0, 1, 0, 0]' : 0.0883842}
{'[2, 4, 0, 4, 5, 0, 0, 1, 5, 7, 14, 0, 1, 1, 0, 1, 0, 0]' : 0.0883479}
{'[2, 4, 0, 4, 5, 0, 0, 1, 5, 7, 14, 0, 1, 1, 0, 1, 0, 0]' : 0.0885479}
{'[2, 4, 0, 4, 5, 0, 0, 1, 5, 7, 14, 0, 1, 1, 0, 1, 0, 0]' : 0.0902829}
{'[2, 4, 0, 4, 5, 0, 0, 1, 5, 7, 14, 0, 1, 1, 0, 1, 0, 0]' : 0.0903411}
{'[2, 4, 0, 4, 5, 0, 0, 1, 5, 7, 14, 0, 1, 1, 0, 1, 0, 0]' : 0.09026}
{'[2, 4, 0, 4, 5, 0, 0, 1, 5, 7, 14, 0, 1, 1, 0, 1, 0, 0]' : 0.090342}
{'[2, 4, 0, 4, 5, 0, 0, 1, 5, 7, 14, 0, 1, 1, 0, 1, 0, 0]' : 0.0903139}
{'[2, 4, 0, 4, 5, 0, 0, 1, 5, 7, 14, 0, 1, 1, 0, 1, 0, 0]' : 0.0906291}
{'[2, 4, 0, 4, 5, 0, 0, 1, 5, 7, 14, 0, 1, 1, 0, 1, 0, 0]' : 0.090446}
{'[2, 4, 0, 4, 5, 0, 0, 1, 5, 7, 14, 0, 1, 1, 0, 1, 0, 0]' : 0.0905311}
{'[2, 4, 0, 4, 5, 0, 0, 1, 5, 7, 14, 0, 1, 1, 0, 1, 0, 0]' : 0.088284}
{'[2, 4, 0, 4, 5, 0, 0, 1, 5, 7, 14, 0, 1, 1, 0, 1, 0, 0]' : 0.088443}
{'[2, 4, 0, 4, 5, 0, 0, 1, 5, 7, 14, 0, 1, 1, 0, 1, 0, 0]' : 0.0883579}
{'[2, 4, 0, 4, 5, 0, 0, 1, 5, 7, 14, 0, 1, 1, 0, 1, 0, 0]' : 0.0904109}
{'[2, 4, 0, 4, 5, 0, 0, 1, 5, 7, 14, 0, 1, 1, 0, 1, 0, 0]' : 0.0903499}
{'[2, 4, 0, 4, 5, 0, 0, 1, 5, 7, 14, 0, 1, 1, 0, 1, 0, 0]' : 0.0903239}
{'[2, 4, 0, 4, 5, 0, 0, 1, 5, 7, 14, 0, 1, 1, 0, 1, 0, 0]' : 0.0903158}
{'[2, 4, 0, 4, 5, 0, 0, 1, 5, 7, 14, 0, 1, 1, 0, 1, 0, 0]' : 0.0898778}
{'[2, 4, 0, 4, 5, 0, 0, 1, 5, 7, 14, 0, 1, 1, 0, 1, 0, 0]' : 0.088388}
{'[2, 4, 0, 4, 5, 0, 0, 1, 5, 7, 14, 0, 1, 1, 0, 1, 0, 0]' : 0.0882871}
{'[2, 4, 0, 4, 5, 0, 0, 1, 5, 7, 14, 0, 1, 1, 0, 1, 0, 0]' : 0.088129}
{'[2, 4, 0, 4, 5, 0, 0, 1, 5, 7, 14, 0, 1, 1, 0, 1, 0, 0]' : 0.0881779}
{'[2, 4, 0, 4, 5, 0, 0, 1, 5, 7, 14, 0, 1, 1, 0, 1, 0, 0]' : 0.0881672}
{'[2, 4, 0, 4, 5, 0, 0, 1, 5, 7, 14, 0, 1, 1, 0, 1, 0, 0]' : 0.087559}
{'[2, 4, 0, 4, 5, 0, 0, 1, 5, 7, 14, 0, 1, 1, 0, 1, 0, 0]' : 0.089536}
{'[2, 4, 0, 4, 5, 0, 0, 1, 5, 7, 14, 0, 1, 1, 0, 1, 0, 0]' : 0.0904951}
{'[2, 4, 0, 4, 5, 0, 0, 1, 5, 7, 14, 0, 1, 1, 0, 1, 0, 0]' : 0.090441}
{'[2, 4, 0, 4, 5, 0, 0, 1, 5, 7, 14, 0, 1, 1, 0, 1, 0, 0]' : 0.0904889}

out:
 ["{'[2, 4, 0, 4, 5, 0, 0, 1, 5, 7, 14, 0, 1, 1, 0, 1, 0, 0]' : 0.0883899}", "{'[2, 4, 0, 4, 5, 0, 0, 1, 5, 7, 14, 0, 1, 1, 0, 1, 0, 0]' : 0.0883842}", "{'[2, 4, 0, 4, 5, 0, 0, 1, 5, 7, 14, 0, 1, 1, 0, 1, 0, 0]' : 0.0883479}", "{'[2, 4, 0, 4, 5, 0, 0, 1, 5, 7, 14, 0, 1, 1, 0, 1, 0, 0]' : 0.0885479}", "{'[2, 4, 0, 4, 5, 0, 0, 1, 5, 7, 14, 0, 1, 1, 0, 1, 0, 0]' : 0.0902829}", "{'[2, 4, 0, 4, 5, 0, 0, 1, 5, 7, 14, 0, 1, 1, 0, 1, 0, 0]' : 0.0903411}", "{'[2, 4, 0, 4, 5, 0, 0, 1, 5, 7, 14, 0, 1, 1, 0, 1, 0, 0]' : 0.09026}", "{'[2, 4, 0, 4, 5, 0, 0, 1, 5, 7, 14, 0, 1, 1, 0, 1, 0, 0]' : 0.090342}", "{'[2, 4, 0, 4, 5, 0, 0, 1, 5, 7, 14, 0, 1, 1, 0, 1, 0, 0]' : 0.0903139}", "{'[2, 4, 0, 4, 5, 0, 0, 1, 5, 7, 14, 0, 1, 1, 0, 1, 0, 0]' : 0.0906291}", "{'[2, 4, 0, 4, 5, 0, 0, 1, 5, 7, 14, 0, 1, 1, 0, 1, 0, 0]' : 0.090446}", "{'[2, 4, 0, 4, 5, 0, 0, 1, 5, 7, 14, 0, 1, 1, 0, 1, 0, 0]' : 0.0905311}", "{'[2, 4, 0, 4, 5, 0, 0, 1, 5, 7, 14, 0, 1, 1, 0, 1, 0, 0]' : 0.088284}", "{'[2, 4, 0, 4, 5, 0, 0, 1, 5, 7, 14, 0, 1, 1, 0, 1, 0, 0]' : 0.088443}", "{'[2, 4, 0, 4, 5, 0, 0, 1, 5, 7, 14, 0, 1, 1, 0, 1, 0, 0]' : 0.0883579}", "{'[2, 4, 0, 4, 5, 0, 0, 1, 5, 7, 14, 0, 1, 1, 0, 1, 0, 0]' : 0.0904109}", "{'[2, 4, 0, 4, 5, 0, 0, 1, 5, 7, 14, 0, 1, 1, 0, 1, 0, 0]' : 0.0903499}", "{'[2, 4, 0, 4, 5, 0, 0, 1, 5, 7, 14, 0, 1, 1, 0, 1, 0, 0]' : 0.0903239}", "{'[2, 4, 0, 4, 5, 0, 0, 1, 5, 7, 14, 0, 1, 1, 0, 1, 0, 0]' : 0.0903158}", "{'[2, 4, 0, 4, 5, 0, 0, 1, 5, 7, 14, 0, 1, 1, 0, 1, 0, 0]' : 0.0898778}", "{'[2, 4, 0, 4, 5, 0, 0, 1, 5, 7, 14, 0, 1, 1, 0, 1, 0, 0]' : 0.088388}", "{'[2, 4, 0, 4, 5, 0, 0, 1, 5, 7, 14, 0, 1, 1, 0, 1, 0, 0]' : 0.0882871}", "{'[2, 4, 0, 4, 5, 0, 0, 1, 5, 7, 14, 0, 1, 1, 0, 1, 0, 0]' : 0.088129}", "{'[2, 4, 0, 4, 5, 0, 0, 1, 5, 7, 14, 0, 1, 1, 0, 1, 0, 0]' : 0.0881779}", "{'[2, 4, 0, 4, 5, 0, 0, 1, 5, 7, 14, 0, 1, 1, 0, 1, 0, 0]' : 0.0881672}", "{'[2, 4, 0, 4, 5, 0, 0, 1, 5, 7, 14, 0, 1, 1, 0, 1, 0, 0]' : 0.087559}", "{'[2, 4, 0, 4, 5, 0, 0, 1, 5, 7, 14, 0, 1, 1, 0, 1, 0, 0]' : 0.089536}", "{'[2, 4, 0, 4, 5, 0, 0, 1, 5, 7, 14, 0, 1, 1, 0, 1, 0, 0]' : 0.0904951}", "{'[2, 4, 0, 4, 5, 0, 0, 1, 5, 7, 14, 0, 1, 1, 0, 1, 0, 0]' : 0.090441}", "{'[2, 4, 0, 4, 5, 0, 0, 1, 5, 7, 14, 0, 1, 1, 0, 1, 0, 0]' : 0.0904889}"]
returning from 'run': {'[2, 4, 0, 4, 5, 0, 0, 1, 5, 7, 14, 0, 1, 1, 0, 1, 0, 0]': ([0.0883899, 0.0883842, 0.0883479, 0.0885479, 0.0902829, 0.0903411, 0.09026, 0.090342, 0.0903139, 0.0906291, 0.090446, 0.0905311, 0.088284, 0.088443, 0.0883579, 0.0904109, 0.0903499, 0.0903239, 0.0903158, 0.0898778, 0.088388, 0.0882871, 0.088129, 0.0881779, 0.0881672, 0.087559, 0.089536, 0.0904951, 0.090441, 0.0904889], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 4, 0, 4, 5, 0, 0, 1, 5, 7, 14, 0, 1, 1, 0, 1, 0, 0]': ([0.0883899, 0.0883842, 0.0883479, 0.0885479, 0.0902829, 0.0903411, 0.09026, 0.090342, 0.0903139, 0.0906291, 0.090446, 0.0905311, 0.088284, 0.088443, 0.0883579, 0.0904109, 0.0903499, 0.0903239, 0.0903158, 0.0898778, 0.088388, 0.0882871, 0.088129, 0.0881779, 0.0881672, 0.087559, 0.089536, 0.0904951, 0.090441, 0.0904889], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	6
        Additions: 		529
        Multiplications: 	198
        Divisions: 		0
        Logical: 		0
        Reads: 			1088
        Writes: 		197
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest43.exe __orio_perftest43.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest43.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest43.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest43.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest43.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	36
        Max loop nest depth: 	5
        Additions: 		1783
        Multiplications: 	462
        Divisions: 		0
        Logical: 		0
        Reads: 			2955
        Writes: 		353
        Comparisons:		36
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest44.exe __orio_perftest44.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest44.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest44.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest44.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest44.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = kkk
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	4
        Additions: 		3444
        Multiplications: 	936
        Divisions: 		0
        Logical: 		0
        Reads: 			5309
        Writes: 		534
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest45.exe __orio_perftest45.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest45.exe  
Program Test Output: 
{'[2, 0, 5, 0, 0, 3, 1, 1, 8, 0, 26, 22, 1, 0, 0, 0, 0, 1]' : 0.112026}
{'[2, 0, 5, 0, 0, 3, 1, 1, 8, 0, 26, 22, 1, 0, 0, 0, 0, 1]' : 0.110285}
{'[2, 0, 5, 0, 0, 3, 1, 1, 8, 0, 26, 22, 1, 0, 0, 0, 0, 1]' : 0.108739}
{'[2, 0, 5, 0, 0, 3, 1, 1, 8, 0, 26, 22, 1, 0, 0, 0, 0, 1]' : 0.108739}
{'[2, 0, 5, 0, 0, 3, 1, 1, 8, 0, 26, 22, 1, 0, 0, 0, 0, 1]' : 0.109197}
{'[2, 0, 5, 0, 0, 3, 1, 1, 8, 0, 26, 22, 1, 0, 0, 0, 0, 1]' : 0.109087}
{'[2, 0, 5, 0, 0, 3, 1, 1, 8, 0, 26, 22, 1, 0, 0, 0, 0, 1]' : 0.108862}
{'[2, 0, 5, 0, 0, 3, 1, 1, 8, 0, 26, 22, 1, 0, 0, 0, 0, 1]' : 0.110651}
{'[2, 0, 5, 0, 0, 3, 1, 1, 8, 0, 26, 22, 1, 0, 0, 0, 0, 1]' : 0.111942}
{'[2, 0, 5, 0, 0, 3, 1, 1, 8, 0, 26, 22, 1, 0, 0, 0, 0, 1]' : 0.112023}
{'[2, 0, 5, 0, 0, 3, 1, 1, 8, 0, 26, 22, 1, 0, 0, 0, 0, 1]' : 0.11039}
{'[2, 0, 5, 0, 0, 3, 1, 1, 8, 0, 26, 22, 1, 0, 0, 0, 0, 1]' : 0.109364}
{'[2, 0, 5, 0, 0, 3, 1, 1, 8, 0, 26, 22, 1, 0, 0, 0, 0, 1]' : 0.11178}
{'[2, 0, 5, 0, 0, 3, 1, 1, 8, 0, 26, 22, 1, 0, 0, 0, 0, 1]' : 0.111998}
{'[2, 0, 5, 0, 0, 3, 1, 1, 8, 0, 26, 22, 1, 0, 0, 0, 0, 1]' : 0.111927}
{'[2, 0, 5, 0, 0, 3, 1, 1, 8, 0, 26, 22, 1, 0, 0, 0, 0, 1]' : 0.112045}
{'[2, 0, 5, 0, 0, 3, 1, 1, 8, 0, 26, 22, 1, 0, 0, 0, 0, 1]' : 0.112305}
{'[2, 0, 5, 0, 0, 3, 1, 1, 8, 0, 26, 22, 1, 0, 0, 0, 0, 1]' : 0.110193}
{'[2, 0, 5, 0, 0, 3, 1, 1, 8, 0, 26, 22, 1, 0, 0, 0, 0, 1]' : 0.109089}
{'[2, 0, 5, 0, 0, 3, 1, 1, 8, 0, 26, 22, 1, 0, 0, 0, 0, 1]' : 0.109008}
{'[2, 0, 5, 0, 0, 3, 1, 1, 8, 0, 26, 22, 1, 0, 0, 0, 0, 1]' : 0.109361}
{'[2, 0, 5, 0, 0, 3, 1, 1, 8, 0, 26, 22, 1, 0, 0, 0, 0, 1]' : 0.109196}
{'[2, 0, 5, 0, 0, 3, 1, 1, 8, 0, 26, 22, 1, 0, 0, 0, 0, 1]' : 0.108912}
{'[2, 0, 5, 0, 0, 3, 1, 1, 8, 0, 26, 22, 1, 0, 0, 0, 0, 1]' : 0.109009}
{'[2, 0, 5, 0, 0, 3, 1, 1, 8, 0, 26, 22, 1, 0, 0, 0, 0, 1]' : 0.108995}
{'[2, 0, 5, 0, 0, 3, 1, 1, 8, 0, 26, 22, 1, 0, 0, 0, 0, 1]' : 0.110501}
{'[2, 0, 5, 0, 0, 3, 1, 1, 8, 0, 26, 22, 1, 0, 0, 0, 0, 1]' : 0.111967}
{'[2, 0, 5, 0, 0, 3, 1, 1, 8, 0, 26, 22, 1, 0, 0, 0, 0, 1]' : 0.11177}
{'[2, 0, 5, 0, 0, 3, 1, 1, 8, 0, 26, 22, 1, 0, 0, 0, 0, 1]' : 0.108943}
{'[2, 0, 5, 0, 0, 3, 1, 1, 8, 0, 26, 22, 1, 0, 0, 0, 0, 1]' : 0.109122}

out:
 ["{'[2, 0, 5, 0, 0, 3, 1, 1, 8, 0, 26, 22, 1, 0, 0, 0, 0, 1]' : 0.112026}", "{'[2, 0, 5, 0, 0, 3, 1, 1, 8, 0, 26, 22, 1, 0, 0, 0, 0, 1]' : 0.110285}", "{'[2, 0, 5, 0, 0, 3, 1, 1, 8, 0, 26, 22, 1, 0, 0, 0, 0, 1]' : 0.108739}", "{'[2, 0, 5, 0, 0, 3, 1, 1, 8, 0, 26, 22, 1, 0, 0, 0, 0, 1]' : 0.108739}", "{'[2, 0, 5, 0, 0, 3, 1, 1, 8, 0, 26, 22, 1, 0, 0, 0, 0, 1]' : 0.109197}", "{'[2, 0, 5, 0, 0, 3, 1, 1, 8, 0, 26, 22, 1, 0, 0, 0, 0, 1]' : 0.109087}", "{'[2, 0, 5, 0, 0, 3, 1, 1, 8, 0, 26, 22, 1, 0, 0, 0, 0, 1]' : 0.108862}", "{'[2, 0, 5, 0, 0, 3, 1, 1, 8, 0, 26, 22, 1, 0, 0, 0, 0, 1]' : 0.110651}", "{'[2, 0, 5, 0, 0, 3, 1, 1, 8, 0, 26, 22, 1, 0, 0, 0, 0, 1]' : 0.111942}", "{'[2, 0, 5, 0, 0, 3, 1, 1, 8, 0, 26, 22, 1, 0, 0, 0, 0, 1]' : 0.112023}", "{'[2, 0, 5, 0, 0, 3, 1, 1, 8, 0, 26, 22, 1, 0, 0, 0, 0, 1]' : 0.11039}", "{'[2, 0, 5, 0, 0, 3, 1, 1, 8, 0, 26, 22, 1, 0, 0, 0, 0, 1]' : 0.109364}", "{'[2, 0, 5, 0, 0, 3, 1, 1, 8, 0, 26, 22, 1, 0, 0, 0, 0, 1]' : 0.11178}", "{'[2, 0, 5, 0, 0, 3, 1, 1, 8, 0, 26, 22, 1, 0, 0, 0, 0, 1]' : 0.111998}", "{'[2, 0, 5, 0, 0, 3, 1, 1, 8, 0, 26, 22, 1, 0, 0, 0, 0, 1]' : 0.111927}", "{'[2, 0, 5, 0, 0, 3, 1, 1, 8, 0, 26, 22, 1, 0, 0, 0, 0, 1]' : 0.112045}", "{'[2, 0, 5, 0, 0, 3, 1, 1, 8, 0, 26, 22, 1, 0, 0, 0, 0, 1]' : 0.112305}", "{'[2, 0, 5, 0, 0, 3, 1, 1, 8, 0, 26, 22, 1, 0, 0, 0, 0, 1]' : 0.110193}", "{'[2, 0, 5, 0, 0, 3, 1, 1, 8, 0, 26, 22, 1, 0, 0, 0, 0, 1]' : 0.109089}", "{'[2, 0, 5, 0, 0, 3, 1, 1, 8, 0, 26, 22, 1, 0, 0, 0, 0, 1]' : 0.109008}", "{'[2, 0, 5, 0, 0, 3, 1, 1, 8, 0, 26, 22, 1, 0, 0, 0, 0, 1]' : 0.109361}", "{'[2, 0, 5, 0, 0, 3, 1, 1, 8, 0, 26, 22, 1, 0, 0, 0, 0, 1]' : 0.109196}", "{'[2, 0, 5, 0, 0, 3, 1, 1, 8, 0, 26, 22, 1, 0, 0, 0, 0, 1]' : 0.108912}", "{'[2, 0, 5, 0, 0, 3, 1, 1, 8, 0, 26, 22, 1, 0, 0, 0, 0, 1]' : 0.109009}", "{'[2, 0, 5, 0, 0, 3, 1, 1, 8, 0, 26, 22, 1, 0, 0, 0, 0, 1]' : 0.108995}", "{'[2, 0, 5, 0, 0, 3, 1, 1, 8, 0, 26, 22, 1, 0, 0, 0, 0, 1]' : 0.110501}", "{'[2, 0, 5, 0, 0, 3, 1, 1, 8, 0, 26, 22, 1, 0, 0, 0, 0, 1]' : 0.111967}", "{'[2, 0, 5, 0, 0, 3, 1, 1, 8, 0, 26, 22, 1, 0, 0, 0, 0, 1]' : 0.11177}", "{'[2, 0, 5, 0, 0, 3, 1, 1, 8, 0, 26, 22, 1, 0, 0, 0, 0, 1]' : 0.108943}", "{'[2, 0, 5, 0, 0, 3, 1, 1, 8, 0, 26, 22, 1, 0, 0, 0, 0, 1]' : 0.109122}"]
returning from 'run': {'[2, 0, 5, 0, 0, 3, 1, 1, 8, 0, 26, 22, 1, 0, 0, 0, 0, 1]': ([0.112026, 0.110285, 0.108739, 0.108739, 0.109197, 0.109087, 0.108862, 0.110651, 0.111942, 0.112023, 0.11039, 0.109364, 0.11178, 0.111998, 0.111927, 0.112045, 0.112305, 0.110193, 0.109089, 0.109008, 0.109361, 0.109196, 0.108912, 0.109009, 0.108995, 0.110501, 0.111967, 0.11177, 0.108943, 0.109122], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 5, 0, 0, 3, 1, 1, 8, 0, 26, 22, 1, 0, 0, 0, 0, 1]': ([0.112026, 0.110285, 0.108739, 0.108739, 0.109197, 0.109087, 0.108862, 0.110651, 0.111942, 0.112023, 0.11039, 0.109364, 0.11178, 0.111998, 0.111927, 0.112045, 0.112305, 0.110193, 0.109089, 0.109008, 0.109361, 0.109196, 0.108912, 0.109009, 0.108995, 0.110501, 0.111967, 0.11177, 0.108943, 0.109122], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	6
        Additions: 		12769
        Multiplications: 	3782
        Divisions: 		0
        Logical: 		0
        Reads: 			19214
        Writes: 		2010
        Comparisons:		22
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest46.exe __orio_perftest46.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest46.exe  
Program Test Output: 
{'[1, 2, 1, 6, 1, 6, 0, 0, 29, 29, 0, 26, 0, 2, 0, 0, 1, 1]' : 0.23972}
{'[1, 2, 1, 6, 1, 6, 0, 0, 29, 29, 0, 26, 0, 2, 0, 0, 1, 1]' : 0.239221}
{'[1, 2, 1, 6, 1, 6, 0, 0, 29, 29, 0, 26, 0, 2, 0, 0, 1, 1]' : 0.221995}
{'[1, 2, 1, 6, 1, 6, 0, 0, 29, 29, 0, 26, 0, 2, 0, 0, 1, 1]' : 0.209829}
{'[1, 2, 1, 6, 1, 6, 0, 0, 29, 29, 0, 26, 0, 2, 0, 0, 1, 1]' : 0.210738}
{'[1, 2, 1, 6, 1, 6, 0, 0, 29, 29, 0, 26, 0, 2, 0, 0, 1, 1]' : 0.213284}
{'[1, 2, 1, 6, 1, 6, 0, 0, 29, 29, 0, 26, 0, 2, 0, 0, 1, 1]' : 0.210151}
{'[1, 2, 1, 6, 1, 6, 0, 0, 29, 29, 0, 26, 0, 2, 0, 0, 1, 1]' : 0.207374}
{'[1, 2, 1, 6, 1, 6, 0, 0, 29, 29, 0, 26, 0, 2, 0, 0, 1, 1]' : 0.202385}
{'[1, 2, 1, 6, 1, 6, 0, 0, 29, 29, 0, 26, 0, 2, 0, 0, 1, 1]' : 0.209982}
{'[1, 2, 1, 6, 1, 6, 0, 0, 29, 29, 0, 26, 0, 2, 0, 0, 1, 1]' : 0.207753}
{'[1, 2, 1, 6, 1, 6, 0, 0, 29, 29, 0, 26, 0, 2, 0, 0, 1, 1]' : 0.209682}
{'[1, 2, 1, 6, 1, 6, 0, 0, 29, 29, 0, 26, 0, 2, 0, 0, 1, 1]' : 0.208104}
{'[1, 2, 1, 6, 1, 6, 0, 0, 29, 29, 0, 26, 0, 2, 0, 0, 1, 1]' : 0.206416}
{'[1, 2, 1, 6, 1, 6, 0, 0, 29, 29, 0, 26, 0, 2, 0, 0, 1, 1]' : 0.203659}
{'[1, 2, 1, 6, 1, 6, 0, 0, 29, 29, 0, 26, 0, 2, 0, 0, 1, 1]' : 0.200846}
{'[1, 2, 1, 6, 1, 6, 0, 0, 29, 29, 0, 26, 0, 2, 0, 0, 1, 1]' : 0.207453}
{'[1, 2, 1, 6, 1, 6, 0, 0, 29, 29, 0, 26, 0, 2, 0, 0, 1, 1]' : 0.211449}
{'[1, 2, 1, 6, 1, 6, 0, 0, 29, 29, 0, 26, 0, 2, 0, 0, 1, 1]' : 0.204643}
{'[1, 2, 1, 6, 1, 6, 0, 0, 29, 29, 0, 26, 0, 2, 0, 0, 1, 1]' : 0.203372}
{'[1, 2, 1, 6, 1, 6, 0, 0, 29, 29, 0, 26, 0, 2, 0, 0, 1, 1]' : 0.200787}
{'[1, 2, 1, 6, 1, 6, 0, 0, 29, 29, 0, 26, 0, 2, 0, 0, 1, 1]' : 0.205952}
{'[1, 2, 1, 6, 1, 6, 0, 0, 29, 29, 0, 26, 0, 2, 0, 0, 1, 1]' : 0.206098}
{'[1, 2, 1, 6, 1, 6, 0, 0, 29, 29, 0, 26, 0, 2, 0, 0, 1, 1]' : 0.202396}
{'[1, 2, 1, 6, 1, 6, 0, 0, 29, 29, 0, 26, 0, 2, 0, 0, 1, 1]' : 0.201671}
{'[1, 2, 1, 6, 1, 6, 0, 0, 29, 29, 0, 26, 0, 2, 0, 0, 1, 1]' : 0.200697}
{'[1, 2, 1, 6, 1, 6, 0, 0, 29, 29, 0, 26, 0, 2, 0, 0, 1, 1]' : 0.206159}
{'[1, 2, 1, 6, 1, 6, 0, 0, 29, 29, 0, 26, 0, 2, 0, 0, 1, 1]' : 0.20721}
{'[1, 2, 1, 6, 1, 6, 0, 0, 29, 29, 0, 26, 0, 2, 0, 0, 1, 1]' : 0.20523}
{'[1, 2, 1, 6, 1, 6, 0, 0, 29, 29, 0, 26, 0, 2, 0, 0, 1, 1]' : 0.201089}

out:
 ["{'[1, 2, 1, 6, 1, 6, 0, 0, 29, 29, 0, 26, 0, 2, 0, 0, 1, 1]' : 0.23972}", "{'[1, 2, 1, 6, 1, 6, 0, 0, 29, 29, 0, 26, 0, 2, 0, 0, 1, 1]' : 0.239221}", "{'[1, 2, 1, 6, 1, 6, 0, 0, 29, 29, 0, 26, 0, 2, 0, 0, 1, 1]' : 0.221995}", "{'[1, 2, 1, 6, 1, 6, 0, 0, 29, 29, 0, 26, 0, 2, 0, 0, 1, 1]' : 0.209829}", "{'[1, 2, 1, 6, 1, 6, 0, 0, 29, 29, 0, 26, 0, 2, 0, 0, 1, 1]' : 0.210738}", "{'[1, 2, 1, 6, 1, 6, 0, 0, 29, 29, 0, 26, 0, 2, 0, 0, 1, 1]' : 0.213284}", "{'[1, 2, 1, 6, 1, 6, 0, 0, 29, 29, 0, 26, 0, 2, 0, 0, 1, 1]' : 0.210151}", "{'[1, 2, 1, 6, 1, 6, 0, 0, 29, 29, 0, 26, 0, 2, 0, 0, 1, 1]' : 0.207374}", "{'[1, 2, 1, 6, 1, 6, 0, 0, 29, 29, 0, 26, 0, 2, 0, 0, 1, 1]' : 0.202385}", "{'[1, 2, 1, 6, 1, 6, 0, 0, 29, 29, 0, 26, 0, 2, 0, 0, 1, 1]' : 0.209982}", "{'[1, 2, 1, 6, 1, 6, 0, 0, 29, 29, 0, 26, 0, 2, 0, 0, 1, 1]' : 0.207753}", "{'[1, 2, 1, 6, 1, 6, 0, 0, 29, 29, 0, 26, 0, 2, 0, 0, 1, 1]' : 0.209682}", "{'[1, 2, 1, 6, 1, 6, 0, 0, 29, 29, 0, 26, 0, 2, 0, 0, 1, 1]' : 0.208104}", "{'[1, 2, 1, 6, 1, 6, 0, 0, 29, 29, 0, 26, 0, 2, 0, 0, 1, 1]' : 0.206416}", "{'[1, 2, 1, 6, 1, 6, 0, 0, 29, 29, 0, 26, 0, 2, 0, 0, 1, 1]' : 0.203659}", "{'[1, 2, 1, 6, 1, 6, 0, 0, 29, 29, 0, 26, 0, 2, 0, 0, 1, 1]' : 0.200846}", "{'[1, 2, 1, 6, 1, 6, 0, 0, 29, 29, 0, 26, 0, 2, 0, 0, 1, 1]' : 0.207453}", "{'[1, 2, 1, 6, 1, 6, 0, 0, 29, 29, 0, 26, 0, 2, 0, 0, 1, 1]' : 0.211449}", "{'[1, 2, 1, 6, 1, 6, 0, 0, 29, 29, 0, 26, 0, 2, 0, 0, 1, 1]' : 0.204643}", "{'[1, 2, 1, 6, 1, 6, 0, 0, 29, 29, 0, 26, 0, 2, 0, 0, 1, 1]' : 0.203372}", "{'[1, 2, 1, 6, 1, 6, 0, 0, 29, 29, 0, 26, 0, 2, 0, 0, 1, 1]' : 0.200787}", "{'[1, 2, 1, 6, 1, 6, 0, 0, 29, 29, 0, 26, 0, 2, 0, 0, 1, 1]' : 0.205952}", "{'[1, 2, 1, 6, 1, 6, 0, 0, 29, 29, 0, 26, 0, 2, 0, 0, 1, 1]' : 0.206098}", "{'[1, 2, 1, 6, 1, 6, 0, 0, 29, 29, 0, 26, 0, 2, 0, 0, 1, 1]' : 0.202396}", "{'[1, 2, 1, 6, 1, 6, 0, 0, 29, 29, 0, 26, 0, 2, 0, 0, 1, 1]' : 0.201671}", "{'[1, 2, 1, 6, 1, 6, 0, 0, 29, 29, 0, 26, 0, 2, 0, 0, 1, 1]' : 0.200697}", "{'[1, 2, 1, 6, 1, 6, 0, 0, 29, 29, 0, 26, 0, 2, 0, 0, 1, 1]' : 0.206159}", "{'[1, 2, 1, 6, 1, 6, 0, 0, 29, 29, 0, 26, 0, 2, 0, 0, 1, 1]' : 0.20721}", "{'[1, 2, 1, 6, 1, 6, 0, 0, 29, 29, 0, 26, 0, 2, 0, 0, 1, 1]' : 0.20523}", "{'[1, 2, 1, 6, 1, 6, 0, 0, 29, 29, 0, 26, 0, 2, 0, 0, 1, 1]' : 0.201089}"]
returning from 'run': {'[1, 2, 1, 6, 1, 6, 0, 0, 29, 29, 0, 26, 0, 2, 0, 0, 1, 1]': ([0.23972, 0.239221, 0.221995, 0.209829, 0.210738, 0.213284, 0.210151, 0.207374, 0.202385, 0.209982, 0.207753, 0.209682, 0.208104, 0.206416, 0.203659, 0.200846, 0.207453, 0.211449, 0.204643, 0.203372, 0.200787, 0.205952, 0.206098, 0.202396, 0.201671, 0.200697, 0.206159, 0.20721, 0.20523, 0.201089], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 2, 1, 6, 1, 6, 0, 0, 29, 29, 0, 26, 0, 2, 0, 0, 1, 1]': ([0.23972, 0.239221, 0.221995, 0.209829, 0.210738, 0.213284, 0.210151, 0.207374, 0.202385, 0.209982, 0.207753, 0.209682, 0.208104, 0.206416, 0.203659, 0.200846, 0.207453, 0.211449, 0.204643, 0.203372, 0.200787, 0.205952, 0.206098, 0.202396, 0.201671, 0.200697, 0.206159, 0.20721, 0.20523, 0.201089], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Complete design, with measurements:
     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
11      2    0    3    3    3    0       0       0   17   0  15  10    1    1
65      5    0    3    0    2    2       0       1   26   0   0   0    0    0
525     3    5    0    6    3    3       1       1    5  22   0   6    1    0
775     0    0    6    1    0    5       1       0    1  21  15   0    0    0
789     0    0    6    6    2    0       0       0   21   0  22   2    0    2
814     0    4    4    6    5    6       1       0   28  29   0   0    1    0
888     1    1    1    2    0    4       0       1   27   0   0   0    0    1
890     0    3    0    3    6    3       0       1    7   0  18   0    2    0
990     2    4    6    0    3    6       0       0    9   0   7  16    2    0
1111    3    4    5    1    6    0       0       0   16  29   0  29    0    0
1222    1    1    0    0    2    1       1       0    0  29   0   0    1    1
1223    0    1    1    0    5    1       1       0   29   7   0   9    1    0
1353    0    5    3    1    0    1       0       0    4   7   7   0    0    0
1516    6    4    4    5    2    2       1       0    0  28   5   0    1    0
1529    5    5    3    0    4    1       0       0   29  20  29   0    2    0
1687    5    2    6    6    0    0       1       0   15   0  21  29    0    0
1897    2    6    2    5    0    1       0       1   28   2   0  28    1    0
2548    1    2    2    2    4    4       0       1    0   0  29  29    1    0
2659    0    0    0    6    4    1       1       0   24   4  13   0    0    1
2917    6    2    5    6    1    4       0       1    7  29   1   0    1    0
2933    1    2    0    0    6    6       0       0    8  14   4   0    1    0
3159    3    3    1    2    0    4       0       0   19  29   0   7    2    0
3200    4    1    1    3    2    3       0       0    0  29  27   0    0    2
3252    0    2    3    6    3    1       1       1    0  25  12   0    0    1
3253    5    0    1    6    5    0       1       1    8  20   0  27    2    0
3292    0    5    4    2    4    0       0       0    6   5   0  17    1    0
3345    5    2    6    3    6    0       1       1   22  17   0   2    0    0
3419    5    0    0    3    1    3       1       0    6   3   0  28    2    0
3529    6    6    3    0    0    6       1       1    2  22   0  26    1    1
3538    5    0    6    0    6    4       0       1   23   6   0  27    0    1
3784    4    2    6    2    3    0       1       0    0  18   1   0    1    0
3922    6    0    2    6    0    6       1       1   12   1  22   0    0    0
4203    4    2    0    6    4    2       0       0    0   0  15  12    0    0
4242    5    6    0    0    0    6       1       1   25  25  29   0    0    1
4294    2    4    0    4    5    0       0       1    5   7  14   0    1    1
4402    2    0    5    0    0    3       1       1    8   0  26  22    1    0
4599    1    2    1    6    1    6       0       0   29  29   0  26    0    2
     RT_K SCR VEC1 VEC2  cost_mean
11      0   1    1    1 0.10116171
65      1   1    1    1 0.39397283
525     1   1    1    0 0.10749890
775     0   1    0    0 0.17603483
789     0   0    0    0 0.18227690
814     0   1    0    1 0.09088277
888     0   0    0    0 0.29682850
890     0   0    0    0 0.27094093
990     0   0    1    1 0.30538420
1111    1   0    1    0 0.17570667
1222    0   0    1    0 0.12415643
1223    1   0    1    0 0.11646760
1353    2   0    1    1 0.13605310
1516    1   0    0    1 0.11364180
1529    0   1    0    1 0.25105793
1687    2   1    1    1 0.16836133
1897    0   0    1    1 0.12378507
2548    0   1    1    0 0.12194187
2659    0   0    1    0 0.13796370
2917    0   1    1    0 0.10324697
2933    1   0    0    1 0.10998897
3159    0   1    1    0 0.17840970
3200    0   0    1    1 0.20804493
3252    1   1    0    0 0.23420327
3253    0   0    1    1 0.15464917
3292    1   1    1    1 0.09411480
3345    0   0    1    1 0.19345237
3419    0   1    0    1 0.18117453
3529    0   0    0    0 0.11616707
3538    1   1    0    0 0.13306923
3784    1   0    0    0 0.10931333
3922    1   1    0    0 0.20429313
4203    0   1    0    1 0.16311220
4242    1   1    1    1 0.16449173
4294    0   1    0    0 0.08942828
4402    0   0    0    1 0.11024753
4599    0   0    1    1 0.20884483

Heteroscedasticity Test p-value: 0.115463170109
Regression Step:                Df  Sum Sq Mean Sq F value   Pr(>F)    
T1_I             1 0.00107 0.00107   1.797 0.237709    
T1_J             1 0.00584 0.00584   9.809 0.025902 *  
T1_K             1 0.00003 0.00003   0.053 0.826846    
T2_I             1 0.00534 0.00534   8.980 0.030216 *  
T2_J             1 0.00179 0.00179   3.014 0.143071    
T2_K             1 0.00130 0.00130   2.179 0.199972    
ACOPY_x          1 0.01514 0.01514  25.433 0.003956 ** 
ACOPY_y          1 0.00258 0.00258   4.341 0.091657 .  
U1_I             1 0.00818 0.00818  13.741 0.013900 *  
U_I              1 0.00040 0.00040   0.671 0.450084    
U_J              1 0.00056 0.00056   0.937 0.377477    
U_K              1 0.00823 0.00823  13.824 0.013739 *  
RT_I             1 0.00002 0.00002   0.040 0.850227    
RT_J             1 0.00014 0.00014   0.236 0.647574    
RT_K             1 0.00000 0.00000   0.002 0.969765    
SCR              1 0.00219 0.00219   3.682 0.113112    
VEC1             1 0.00009 0.00009   0.149 0.715298    
VEC2             1 0.00116 0.00116   1.952 0.221213    
I(1/(1 + T1_I))  1 0.00168 0.00168   2.830 0.153316    
I(1/(1 + T1_J))  1 0.00467 0.00467   7.846 0.037945 *  
I(1/(1 + T1_K))  1 0.00000 0.00000   0.007 0.938600    
I(1/(1 + T2_I))  1 0.00000 0.00000   0.000 0.992761    
I(1/(1 + T2_J))  1 0.01098 0.01098  18.449 0.007750 ** 
I(1/(1 + T2_K))  1 0.00009 0.00009   0.149 0.715653    
I(1/(1 + U1_I))  1 0.00023 0.00023   0.378 0.565497    
I(1/(1 + U_I))   1 0.01504 0.01504  25.266 0.004013 ** 
I(1/(1 + U_J))   1 0.00009 0.00009   0.145 0.719430    
I(1/(1 + U_K))   1 0.00222 0.00222   3.729 0.111353    
I(1/(1 + RT_I))  1 0.07098 0.07098 119.257 0.000112 ***
I(1/(1 + RT_J))  1 0.00387 0.00387   6.496 0.051340 .  
I(1/(1 + RT_K))  1 0.00495 0.00495   8.314 0.034454 *  
Residuals        5 0.00298 0.00060                     
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Predicting Best
Generating valid search space of size 4600 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Valid coordinates: 920
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Valid coordinates: 1840
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Valid coordinates: 2760
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Valid coordinates: 3680
Tested coordinates: 150000
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Valid coordinates: 4600
Valid/Tested configurations: 4600/187430
Generated Search Space:
NULL
Identical predictions (tol = 1e-5): 1
Getting Best from Design
Response: ['cost_mean']
Design Names:  [1] "T1_I"      "T1_J"      "T1_K"      "T2_I"      "T2_J"      "T2_K"     
 [7] "ACOPY_x"   "ACOPY_y"   "U1_I"      "U_I"       "U_J"       "U_K"      
[13] "RT_I"      "RT_J"      "RT_K"      "SCR"       "VEC1"      "VEC2"     
[19] "cost_mean"

Design Response:       cost_mean
11   0.10116171
65   0.39397283
525  0.10749890
775  0.17603483
789  0.18227690
814  0.09088277
888  0.29682850
890  0.27094093
990  0.30538420
1111 0.17570667
1222 0.12415643
1223 0.11646760
1353 0.13605310
1516 0.11364180
1529 0.25105793
1687 0.16836133
1897 0.12378507
2548 0.12194187
2659 0.13796370
2917 0.10324697
2933 0.10998897
3159 0.17840970
3200 0.20804493
3252 0.23420327
3253 0.15464917
3292 0.09411480
3345 0.19345237
3419 0.18117453
3529 0.11616707
3538 0.13306923
3784 0.10931333
3922 0.20429313
4203 0.16311220
4242 0.16449173
4294 0.08942828
4402 0.11024753
4599 0.20884483

Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Getting fixed variables
Pruning Model
Best Predicted:     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
968    0    0    4    2    2    6       0       1   23  20   0  14    0    0
    RT_K SCR VEC1 VEC2
968    2   0    0    1

Best From Design: [2, 4, 0, 4, 5, 0, 0, 1, 5, 7, 14, 0, 1, 1, 0, 1, 0, 0]
Pruned Factors: ['T1_I', 'T1_K', 'T2_J', 'T2_K', 'U_I', 'U_J', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Fixed Factors: {'ACOPY_x': 0, 'ACOPY_y': 1, 'T1_J': 0, 'U_K': 14, 'T2_I': 2, 'U1_I': 23}
Length of requested configs: 1
Result was on Database, Returning Now
Starting Point (-O3):
0.16283083333333334
Predicted Best Point:
[0, 0, 4, 2, 2, 6, 0, 1, 23, 20, 0, 14, 0, 0, 2, 0, 0, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	59
        Max loop nest depth: 	5
        Additions: 		6518
        Multiplications: 	1452
        Divisions: 		0
        Logical: 		0
        Reads: 			9395
        Writes: 		939
        Comparisons:		59
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest47.exe __orio_perftest47.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest47.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest47.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest47.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 587, in dopt_anova
    predicted_best_value = numpy.mean((self.getPerfCosts([predicted_best]).values()[0])[0])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest47.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 587, in dopt_anova
    predicted_best_value = numpy.mean((self.getPerfCosts([predicted_best]).values()[0])[0])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
