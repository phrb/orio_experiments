
====== START ORIO ======

----- begin reading the source file: atax2.src1.c -----
----- finished reading the source file -----

----- begin parsing annotations -----
----- finished parsing annotations -----

----- begin optimizations -----
Search_Space         = 8.234e+13
Number_of_Parameters = 18
Numeric_Parameters   = 13
Binary_Parameters    = 05
['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
[[1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [False, True], [False, True], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 8, 32], [1, 8, 32], [1, 8, 32], [False, True], [False, True], [False, True]]

----- begin empirical tuning for problem size -----
 N = 10000
Parameters: {'ACOPY_x': [0, 2], 'ACOPY_y': [0, 2], 'RT_K': [0, 3], 'T1_I': [0, 7], 'T1_J': [0, 7], 'T1_K': [0, 7], 'U_K': [0, 30], 'U_J': [0, 30], 'U_I': [0, 30], 'U1_I': [0, 30], 'T2_K': [0, 7], 'T2_J': [0, 7], 'T2_I': [0, 7], 'VEC2': [0, 2], 'VEC1': [0, 2], 'RT_I': [0, 3], 'SCR': [0, 2], 'RT_J': [0, 3]}
Parameter Range Values: {'ACOPY_x': [False, True], 'ACOPY_y': [False, True], 'RT_K': [1, 8, 32], 'T1_I': [1, 16, 32, 64, 128, 256, 512], 'T1_J': [1, 16, 32, 64, 128, 256, 512], 'T1_K': [1, 16, 32, 64, 128, 256, 512], 'U_K': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_J': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U1_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'T2_K': [1, 64, 128, 256, 512, 1024, 2048], 'T2_J': [1, 64, 128, 256, 512, 1024, 2048], 'T2_I': [1, 64, 128, 256, 512, 1024, 2048], 'VEC2': [False, True], 'VEC1': [False, True], 'RT_I': [1, 8, 32], 'SCR': [False, True], 'RT_J': [1, 8, 32]}

----- begin random search -----
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Inverse Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Starting DOPT-anova
Step 0
Generating valid search space of size 4600 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Valid coordinates: 920
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Valid coordinates: 1840
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Valid coordinates: 2760
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Tested coordinates: 150000
Valid coordinates: 3680
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Tested coordinates: 190000
Valid coordinates: 4600
Valid/Tested configurations: 4600/195169
Generated Search Space:
NULL
Clean Info:
Removed Factors: character(0)

Removed Inverse Factors: [1] "ACOPY_x" "ACOPY_y" "SCR"     "VEC1"    "VEC2"   

New Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
New Inverse Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
New Fixed Factors: {}
Full Model:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Fixed Factors: {}
Computing D-Optimal Design
Computing D-Optimal Design with 46 experiments
Design Formula:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Starting "optFederov" run
Using Search Space:
NULL
Data Dimensions: [1] 4600   18

     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
44      6    3    6    0    6    4       0       1   23  17   0   6    1    0
49      0    1    0    6    1    6       1       1    5  15   0  28    0    1
61      1    2    0    6    0    2       1       0   12   0   4   4    1    1
80      6    2    0    5    0    0       0       1    2   0  23  20    0    2
347     3    1    6    3    1    4       0       0    0  25   0   1    0    0
405     2    0    0    2    0    6       0       0   27  27  27   0    1    1
476     4    6    3    4    5    1       1       1   15   0  26  10    1    0
489     2    1    1    6    2    5       1       0    4   1   0  19    0    0
724     0    0    6    5    5    0       0       0    8   2  26   0    2    0
838     1    1    6    1    3    6       0       1    0   0   0  29    1    1
1033    3    5    1    2    5    0       1       0   28   6   0  27    0    1
1105    0    1    1    3    4    2       1       0   16  14   5   0    2    0
1238    0    2    2    0    6    1       1       0    0   3  21   0    1    0
1558    0    5    3    5    4    5       1       1    0  18   0  14    0    0
1609    4    4    2    4    2    2       1       1   28  27   0  29    2    0
1686    5    1    6    6    3    5       1       1    0  29   0  28    2    0
1814    5    2    6    0    3    4       1       0   23  29  28   0    0    0
2006    2    0    3    0    1    0       0       1   21  25   0  18    1    1
2204    6    2    2    4    6    0       1       0   20  25   0   4    0    0
2245    0    1    6    2    0    4       1       1   24   4   0  14    0    0
2296    2    2    1    1    6    1       1       1   21   0  28  23    0    2
2347    6    0    1    6    2    6       1       1   29   1   2   0    1    0
2356    0    0    4    0    5    6       0       0   25   0  10   5    0    2
2366    0    4    3    2    6    3       1       1    5  17  25   0    1    0
2483    0    0    1    6    1    3       0       1   29   5   6   0    0    1
2707    6    6    0    0    5    0       0       1   21   5   1   0    0    2
2721    4    2    5    2    1    6       1       1   29   0   0   0    2    0
2898    3    0    0    2    5    3       1       0   11   0   4   3    0    0
3079    2    5    2    2    0    3       0       0    0   0  14  13    2    0
3189    4    5    6    0    5    6       0       1    1   0   1  18    2    0
3285    2    4    0    1    2    5       0       1    7  26   0   5    0    0
3353    1    3    2    1    1    6       1       1    3   6  22   0    0    2
3428    1    6    1    5    6    5       1       1   28  24   0   0    2    0
3436    0    1    0    0    1    0       0       0   27   0  29  27    1    0
3527    2    3    0    0    1    1       0       0   24   4   1   0    0    0
3591    1    6    6    6    0    0       1       0   23   0  19   2    0    2
3609    3    6    0    1    0    5       0       1    8   0  26  16    0    1
3728    2    1    6    6    6    6       1       0   29   3   6   0    0    2
3836    2    3    2    6    0    2       0       1   22  20   0  20    0    0
3860    2    2    1    6    6    3       0       1    2   0  28   0    0    1
3898    0    1    2    2    5    0       0       0   29   0  22   8    0    0
3918    2    6    4    3    5    2       1       0   29   0  26  29    0    0
4259    1    0    0    0    0    0       1       1    5   5   0   9    2    0
4426    4    4    4    0    0    3       0       0   11  22   0  25    0    0
4510    6    0    4    6    5    5       1       0    0  28   0  27    0    0
4573    1    0    4    1    0    0       1       1   17  25   4   0    0    0
     RT_K SCR VEC1 VEC2
44      0   0    0    0
49      1   0    1    1
61      0   1    0    0
80      0   0    1    0
347     1   1    0    0
405     0   0    1    1
476     0   1    1    1
489     0   0    1    1
724     0   0    0    0
838     0   1    1    0
1033    1   1    1    0
1105    0   1    0    0
1238    1   0    1    1
1558    2   1    0    1
1609    0   0    0    1
1686    0   1    1    1
1814    2   0    1    0
2006    0   0    0    1
2204    2   0    1    1
2245    0   0    0    1
2296    0   0    0    1
2347    1   1    0    1
2356    0   1    1    1
2366    0   0    1    0
2483    0   1    0    0
2707    0   1    0    1
2721    0   1    0    1
2898    2   1    0    1
3079    0   0    1    1
3189    0   0    0    0
3285    0   0    1    0
3353    0   1    0    0
3428    0   0    0    1
3436    0   1    0    0
3527    2   0    1    0
3591    0   0    0    0
3609    0   1    1    0
3728    0   0    0    1
3836    2   0    1    0
3860    0   1    1    1
3898    1   1    1    0
3918    1   0    1    0
4259    0   1    1    0
4426    1   1    0    1
4510    0   0    0    0
4573    0   1    1    1

D-Efficiency Approximation: [1] 0.407

Measuring design of size 46
Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	98
        Max loop nest depth: 	5
        Additions: 		2439
        Multiplications: 	486
        Divisions: 		0
        Logical: 		0
        Reads: 			3906
        Writes: 		524
        Comparisons:		98
        Gotos: 			0
        
 building the original code:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -DORIGINAL -o __orio_perftest_original.exe __orio_perftest1.c timer_cpu.o -lm
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest1.exe __orio_perftest1.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest1.exe  
Program Test Output: 
{'[6, 3, 6, 0, 6, 4, 0, 1, 23, 17, 0, 6, 1, 0, 0, 0, 0, 0]' : 0.116028}
{'[6, 3, 6, 0, 6, 4, 0, 1, 23, 17, 0, 6, 1, 0, 0, 0, 0, 0]' : 0.115444}
{'[6, 3, 6, 0, 6, 4, 0, 1, 23, 17, 0, 6, 1, 0, 0, 0, 0, 0]' : 0.113293}
{'[6, 3, 6, 0, 6, 4, 0, 1, 23, 17, 0, 6, 1, 0, 0, 0, 0, 0]' : 0.113392}
{'[6, 3, 6, 0, 6, 4, 0, 1, 23, 17, 0, 6, 1, 0, 0, 0, 0, 0]' : 0.113398}
{'[6, 3, 6, 0, 6, 4, 0, 1, 23, 17, 0, 6, 1, 0, 0, 0, 0, 0]' : 0.113389}
{'[6, 3, 6, 0, 6, 4, 0, 1, 23, 17, 0, 6, 1, 0, 0, 0, 0, 0]' : 0.11325}
{'[6, 3, 6, 0, 6, 4, 0, 1, 23, 17, 0, 6, 1, 0, 0, 0, 0, 0]' : 0.113468}
{'[6, 3, 6, 0, 6, 4, 0, 1, 23, 17, 0, 6, 1, 0, 0, 0, 0, 0]' : 0.113423}
{'[6, 3, 6, 0, 6, 4, 0, 1, 23, 17, 0, 6, 1, 0, 0, 0, 0, 0]' : 0.113516}
{'[6, 3, 6, 0, 6, 4, 0, 1, 23, 17, 0, 6, 1, 0, 0, 0, 0, 0]' : 0.113525}
{'[6, 3, 6, 0, 6, 4, 0, 1, 23, 17, 0, 6, 1, 0, 0, 0, 0, 0]' : 0.113377}
{'[6, 3, 6, 0, 6, 4, 0, 1, 23, 17, 0, 6, 1, 0, 0, 0, 0, 0]' : 0.113419}
{'[6, 3, 6, 0, 6, 4, 0, 1, 23, 17, 0, 6, 1, 0, 0, 0, 0, 0]' : 0.113952}
{'[6, 3, 6, 0, 6, 4, 0, 1, 23, 17, 0, 6, 1, 0, 0, 0, 0, 0]' : 0.113354}
{'[6, 3, 6, 0, 6, 4, 0, 1, 23, 17, 0, 6, 1, 0, 0, 0, 0, 0]' : 0.113336}
{'[6, 3, 6, 0, 6, 4, 0, 1, 23, 17, 0, 6, 1, 0, 0, 0, 0, 0]' : 0.113299}
{'[6, 3, 6, 0, 6, 4, 0, 1, 23, 17, 0, 6, 1, 0, 0, 0, 0, 0]' : 0.113313}
{'[6, 3, 6, 0, 6, 4, 0, 1, 23, 17, 0, 6, 1, 0, 0, 0, 0, 0]' : 0.113351}
{'[6, 3, 6, 0, 6, 4, 0, 1, 23, 17, 0, 6, 1, 0, 0, 0, 0, 0]' : 0.113835}
{'[6, 3, 6, 0, 6, 4, 0, 1, 23, 17, 0, 6, 1, 0, 0, 0, 0, 0]' : 0.113577}
{'[6, 3, 6, 0, 6, 4, 0, 1, 23, 17, 0, 6, 1, 0, 0, 0, 0, 0]' : 0.113381}
{'[6, 3, 6, 0, 6, 4, 0, 1, 23, 17, 0, 6, 1, 0, 0, 0, 0, 0]' : 0.113225}
{'[6, 3, 6, 0, 6, 4, 0, 1, 23, 17, 0, 6, 1, 0, 0, 0, 0, 0]' : 0.113371}
{'[6, 3, 6, 0, 6, 4, 0, 1, 23, 17, 0, 6, 1, 0, 0, 0, 0, 0]' : 0.11363}
{'[6, 3, 6, 0, 6, 4, 0, 1, 23, 17, 0, 6, 1, 0, 0, 0, 0, 0]' : 0.113422}
{'[6, 3, 6, 0, 6, 4, 0, 1, 23, 17, 0, 6, 1, 0, 0, 0, 0, 0]' : 0.113211}
{'[6, 3, 6, 0, 6, 4, 0, 1, 23, 17, 0, 6, 1, 0, 0, 0, 0, 0]' : 0.113454}
{'[6, 3, 6, 0, 6, 4, 0, 1, 23, 17, 0, 6, 1, 0, 0, 0, 0, 0]' : 0.11368}
{'[6, 3, 6, 0, 6, 4, 0, 1, 23, 17, 0, 6, 1, 0, 0, 0, 0, 0]' : 0.113866}

out:
 ["{'[6, 3, 6, 0, 6, 4, 0, 1, 23, 17, 0, 6, 1, 0, 0, 0, 0, 0]' : 0.116028}", "{'[6, 3, 6, 0, 6, 4, 0, 1, 23, 17, 0, 6, 1, 0, 0, 0, 0, 0]' : 0.115444}", "{'[6, 3, 6, 0, 6, 4, 0, 1, 23, 17, 0, 6, 1, 0, 0, 0, 0, 0]' : 0.113293}", "{'[6, 3, 6, 0, 6, 4, 0, 1, 23, 17, 0, 6, 1, 0, 0, 0, 0, 0]' : 0.113392}", "{'[6, 3, 6, 0, 6, 4, 0, 1, 23, 17, 0, 6, 1, 0, 0, 0, 0, 0]' : 0.113398}", "{'[6, 3, 6, 0, 6, 4, 0, 1, 23, 17, 0, 6, 1, 0, 0, 0, 0, 0]' : 0.113389}", "{'[6, 3, 6, 0, 6, 4, 0, 1, 23, 17, 0, 6, 1, 0, 0, 0, 0, 0]' : 0.11325}", "{'[6, 3, 6, 0, 6, 4, 0, 1, 23, 17, 0, 6, 1, 0, 0, 0, 0, 0]' : 0.113468}", "{'[6, 3, 6, 0, 6, 4, 0, 1, 23, 17, 0, 6, 1, 0, 0, 0, 0, 0]' : 0.113423}", "{'[6, 3, 6, 0, 6, 4, 0, 1, 23, 17, 0, 6, 1, 0, 0, 0, 0, 0]' : 0.113516}", "{'[6, 3, 6, 0, 6, 4, 0, 1, 23, 17, 0, 6, 1, 0, 0, 0, 0, 0]' : 0.113525}", "{'[6, 3, 6, 0, 6, 4, 0, 1, 23, 17, 0, 6, 1, 0, 0, 0, 0, 0]' : 0.113377}", "{'[6, 3, 6, 0, 6, 4, 0, 1, 23, 17, 0, 6, 1, 0, 0, 0, 0, 0]' : 0.113419}", "{'[6, 3, 6, 0, 6, 4, 0, 1, 23, 17, 0, 6, 1, 0, 0, 0, 0, 0]' : 0.113952}", "{'[6, 3, 6, 0, 6, 4, 0, 1, 23, 17, 0, 6, 1, 0, 0, 0, 0, 0]' : 0.113354}", "{'[6, 3, 6, 0, 6, 4, 0, 1, 23, 17, 0, 6, 1, 0, 0, 0, 0, 0]' : 0.113336}", "{'[6, 3, 6, 0, 6, 4, 0, 1, 23, 17, 0, 6, 1, 0, 0, 0, 0, 0]' : 0.113299}", "{'[6, 3, 6, 0, 6, 4, 0, 1, 23, 17, 0, 6, 1, 0, 0, 0, 0, 0]' : 0.113313}", "{'[6, 3, 6, 0, 6, 4, 0, 1, 23, 17, 0, 6, 1, 0, 0, 0, 0, 0]' : 0.113351}", "{'[6, 3, 6, 0, 6, 4, 0, 1, 23, 17, 0, 6, 1, 0, 0, 0, 0, 0]' : 0.113835}", "{'[6, 3, 6, 0, 6, 4, 0, 1, 23, 17, 0, 6, 1, 0, 0, 0, 0, 0]' : 0.113577}", "{'[6, 3, 6, 0, 6, 4, 0, 1, 23, 17, 0, 6, 1, 0, 0, 0, 0, 0]' : 0.113381}", "{'[6, 3, 6, 0, 6, 4, 0, 1, 23, 17, 0, 6, 1, 0, 0, 0, 0, 0]' : 0.113225}", "{'[6, 3, 6, 0, 6, 4, 0, 1, 23, 17, 0, 6, 1, 0, 0, 0, 0, 0]' : 0.113371}", "{'[6, 3, 6, 0, 6, 4, 0, 1, 23, 17, 0, 6, 1, 0, 0, 0, 0, 0]' : 0.11363}", "{'[6, 3, 6, 0, 6, 4, 0, 1, 23, 17, 0, 6, 1, 0, 0, 0, 0, 0]' : 0.113422}", "{'[6, 3, 6, 0, 6, 4, 0, 1, 23, 17, 0, 6, 1, 0, 0, 0, 0, 0]' : 0.113211}", "{'[6, 3, 6, 0, 6, 4, 0, 1, 23, 17, 0, 6, 1, 0, 0, 0, 0, 0]' : 0.113454}", "{'[6, 3, 6, 0, 6, 4, 0, 1, 23, 17, 0, 6, 1, 0, 0, 0, 0, 0]' : 0.11368}", "{'[6, 3, 6, 0, 6, 4, 0, 1, 23, 17, 0, 6, 1, 0, 0, 0, 0, 0]' : 0.113866}"]
returning from 'run': {'[6, 3, 6, 0, 6, 4, 0, 1, 23, 17, 0, 6, 1, 0, 0, 0, 0, 0]': ([0.116028, 0.115444, 0.113293, 0.113392, 0.113398, 0.113389, 0.11325, 0.113468, 0.113423, 0.113516, 0.113525, 0.113377, 0.113419, 0.113952, 0.113354, 0.113336, 0.113299, 0.113313, 0.113351, 0.113835, 0.113577, 0.113381, 0.113225, 0.113371, 0.11363, 0.113422, 0.113211, 0.113454, 0.11368, 0.113866], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 3, 6, 0, 6, 4, 0, 1, 23, 17, 0, 6, 1, 0, 0, 0, 0, 0]': ([0.116028, 0.115444, 0.113293, 0.113392, 0.113398, 0.113389, 0.11325, 0.113468, 0.113423, 0.113516, 0.113525, 0.113377, 0.113419, 0.113952, 0.113354, 0.113336, 0.113299, 0.113313, 0.113351, 0.113835, 0.113577, 0.113381, 0.113225, 0.113371, 0.11363, 0.113422, 0.113211, 0.113454, 0.11368, 0.113866], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	66
        Max loop nest depth: 	5
        Additions: 		2426
        Multiplications: 	544
        Divisions: 		0
        Logical: 		0
        Reads: 			3899
        Writes: 		486
        Comparisons:		66
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest2.exe __orio_perftest2.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest2.exe  
Program Test Output: 
{'[0, 1, 0, 6, 1, 6, 1, 1, 5, 15, 0, 28, 0, 1, 1, 0, 1, 1]' : 0.20049}
{'[0, 1, 0, 6, 1, 6, 1, 1, 5, 15, 0, 28, 0, 1, 1, 0, 1, 1]' : 0.200966}
{'[0, 1, 0, 6, 1, 6, 1, 1, 5, 15, 0, 28, 0, 1, 1, 0, 1, 1]' : 0.20097}
{'[0, 1, 0, 6, 1, 6, 1, 1, 5, 15, 0, 28, 0, 1, 1, 0, 1, 1]' : 0.20024}
{'[0, 1, 0, 6, 1, 6, 1, 1, 5, 15, 0, 28, 0, 1, 1, 0, 1, 1]' : 0.200686}
{'[0, 1, 0, 6, 1, 6, 1, 1, 5, 15, 0, 28, 0, 1, 1, 0, 1, 1]' : 0.200483}
{'[0, 1, 0, 6, 1, 6, 1, 1, 5, 15, 0, 28, 0, 1, 1, 0, 1, 1]' : 0.20037}
{'[0, 1, 0, 6, 1, 6, 1, 1, 5, 15, 0, 28, 0, 1, 1, 0, 1, 1]' : 0.2006}
{'[0, 1, 0, 6, 1, 6, 1, 1, 5, 15, 0, 28, 0, 1, 1, 0, 1, 1]' : 0.200501}
{'[0, 1, 0, 6, 1, 6, 1, 1, 5, 15, 0, 28, 0, 1, 1, 0, 1, 1]' : 0.200333}
{'[0, 1, 0, 6, 1, 6, 1, 1, 5, 15, 0, 28, 0, 1, 1, 0, 1, 1]' : 0.200808}
{'[0, 1, 0, 6, 1, 6, 1, 1, 5, 15, 0, 28, 0, 1, 1, 0, 1, 1]' : 0.200274}
{'[0, 1, 0, 6, 1, 6, 1, 1, 5, 15, 0, 28, 0, 1, 1, 0, 1, 1]' : 0.200676}
{'[0, 1, 0, 6, 1, 6, 1, 1, 5, 15, 0, 28, 0, 1, 1, 0, 1, 1]' : 0.200789}
{'[0, 1, 0, 6, 1, 6, 1, 1, 5, 15, 0, 28, 0, 1, 1, 0, 1, 1]' : 0.200493}
{'[0, 1, 0, 6, 1, 6, 1, 1, 5, 15, 0, 28, 0, 1, 1, 0, 1, 1]' : 0.200315}
{'[0, 1, 0, 6, 1, 6, 1, 1, 5, 15, 0, 28, 0, 1, 1, 0, 1, 1]' : 0.200373}
{'[0, 1, 0, 6, 1, 6, 1, 1, 5, 15, 0, 28, 0, 1, 1, 0, 1, 1]' : 0.200872}
{'[0, 1, 0, 6, 1, 6, 1, 1, 5, 15, 0, 28, 0, 1, 1, 0, 1, 1]' : 0.200827}
{'[0, 1, 0, 6, 1, 6, 1, 1, 5, 15, 0, 28, 0, 1, 1, 0, 1, 1]' : 0.200713}
{'[0, 1, 0, 6, 1, 6, 1, 1, 5, 15, 0, 28, 0, 1, 1, 0, 1, 1]' : 0.200925}
{'[0, 1, 0, 6, 1, 6, 1, 1, 5, 15, 0, 28, 0, 1, 1, 0, 1, 1]' : 0.200382}
{'[0, 1, 0, 6, 1, 6, 1, 1, 5, 15, 0, 28, 0, 1, 1, 0, 1, 1]' : 0.200669}
{'[0, 1, 0, 6, 1, 6, 1, 1, 5, 15, 0, 28, 0, 1, 1, 0, 1, 1]' : 0.200633}
{'[0, 1, 0, 6, 1, 6, 1, 1, 5, 15, 0, 28, 0, 1, 1, 0, 1, 1]' : 0.200538}
{'[0, 1, 0, 6, 1, 6, 1, 1, 5, 15, 0, 28, 0, 1, 1, 0, 1, 1]' : 0.200306}
{'[0, 1, 0, 6, 1, 6, 1, 1, 5, 15, 0, 28, 0, 1, 1, 0, 1, 1]' : 0.200337}
{'[0, 1, 0, 6, 1, 6, 1, 1, 5, 15, 0, 28, 0, 1, 1, 0, 1, 1]' : 0.200317}
{'[0, 1, 0, 6, 1, 6, 1, 1, 5, 15, 0, 28, 0, 1, 1, 0, 1, 1]' : 0.20038}
{'[0, 1, 0, 6, 1, 6, 1, 1, 5, 15, 0, 28, 0, 1, 1, 0, 1, 1]' : 0.200826}

out:
 ["{'[0, 1, 0, 6, 1, 6, 1, 1, 5, 15, 0, 28, 0, 1, 1, 0, 1, 1]' : 0.20049}", "{'[0, 1, 0, 6, 1, 6, 1, 1, 5, 15, 0, 28, 0, 1, 1, 0, 1, 1]' : 0.200966}", "{'[0, 1, 0, 6, 1, 6, 1, 1, 5, 15, 0, 28, 0, 1, 1, 0, 1, 1]' : 0.20097}", "{'[0, 1, 0, 6, 1, 6, 1, 1, 5, 15, 0, 28, 0, 1, 1, 0, 1, 1]' : 0.20024}", "{'[0, 1, 0, 6, 1, 6, 1, 1, 5, 15, 0, 28, 0, 1, 1, 0, 1, 1]' : 0.200686}", "{'[0, 1, 0, 6, 1, 6, 1, 1, 5, 15, 0, 28, 0, 1, 1, 0, 1, 1]' : 0.200483}", "{'[0, 1, 0, 6, 1, 6, 1, 1, 5, 15, 0, 28, 0, 1, 1, 0, 1, 1]' : 0.20037}", "{'[0, 1, 0, 6, 1, 6, 1, 1, 5, 15, 0, 28, 0, 1, 1, 0, 1, 1]' : 0.2006}", "{'[0, 1, 0, 6, 1, 6, 1, 1, 5, 15, 0, 28, 0, 1, 1, 0, 1, 1]' : 0.200501}", "{'[0, 1, 0, 6, 1, 6, 1, 1, 5, 15, 0, 28, 0, 1, 1, 0, 1, 1]' : 0.200333}", "{'[0, 1, 0, 6, 1, 6, 1, 1, 5, 15, 0, 28, 0, 1, 1, 0, 1, 1]' : 0.200808}", "{'[0, 1, 0, 6, 1, 6, 1, 1, 5, 15, 0, 28, 0, 1, 1, 0, 1, 1]' : 0.200274}", "{'[0, 1, 0, 6, 1, 6, 1, 1, 5, 15, 0, 28, 0, 1, 1, 0, 1, 1]' : 0.200676}", "{'[0, 1, 0, 6, 1, 6, 1, 1, 5, 15, 0, 28, 0, 1, 1, 0, 1, 1]' : 0.200789}", "{'[0, 1, 0, 6, 1, 6, 1, 1, 5, 15, 0, 28, 0, 1, 1, 0, 1, 1]' : 0.200493}", "{'[0, 1, 0, 6, 1, 6, 1, 1, 5, 15, 0, 28, 0, 1, 1, 0, 1, 1]' : 0.200315}", "{'[0, 1, 0, 6, 1, 6, 1, 1, 5, 15, 0, 28, 0, 1, 1, 0, 1, 1]' : 0.200373}", "{'[0, 1, 0, 6, 1, 6, 1, 1, 5, 15, 0, 28, 0, 1, 1, 0, 1, 1]' : 0.200872}", "{'[0, 1, 0, 6, 1, 6, 1, 1, 5, 15, 0, 28, 0, 1, 1, 0, 1, 1]' : 0.200827}", "{'[0, 1, 0, 6, 1, 6, 1, 1, 5, 15, 0, 28, 0, 1, 1, 0, 1, 1]' : 0.200713}", "{'[0, 1, 0, 6, 1, 6, 1, 1, 5, 15, 0, 28, 0, 1, 1, 0, 1, 1]' : 0.200925}", "{'[0, 1, 0, 6, 1, 6, 1, 1, 5, 15, 0, 28, 0, 1, 1, 0, 1, 1]' : 0.200382}", "{'[0, 1, 0, 6, 1, 6, 1, 1, 5, 15, 0, 28, 0, 1, 1, 0, 1, 1]' : 0.200669}", "{'[0, 1, 0, 6, 1, 6, 1, 1, 5, 15, 0, 28, 0, 1, 1, 0, 1, 1]' : 0.200633}", "{'[0, 1, 0, 6, 1, 6, 1, 1, 5, 15, 0, 28, 0, 1, 1, 0, 1, 1]' : 0.200538}", "{'[0, 1, 0, 6, 1, 6, 1, 1, 5, 15, 0, 28, 0, 1, 1, 0, 1, 1]' : 0.200306}", "{'[0, 1, 0, 6, 1, 6, 1, 1, 5, 15, 0, 28, 0, 1, 1, 0, 1, 1]' : 0.200337}", "{'[0, 1, 0, 6, 1, 6, 1, 1, 5, 15, 0, 28, 0, 1, 1, 0, 1, 1]' : 0.200317}", "{'[0, 1, 0, 6, 1, 6, 1, 1, 5, 15, 0, 28, 0, 1, 1, 0, 1, 1]' : 0.20038}", "{'[0, 1, 0, 6, 1, 6, 1, 1, 5, 15, 0, 28, 0, 1, 1, 0, 1, 1]' : 0.200826}"]
returning from 'run': {'[0, 1, 0, 6, 1, 6, 1, 1, 5, 15, 0, 28, 0, 1, 1, 0, 1, 1]': ([0.20049, 0.200966, 0.20097, 0.20024, 0.200686, 0.200483, 0.20037, 0.2006, 0.200501, 0.200333, 0.200808, 0.200274, 0.200676, 0.200789, 0.200493, 0.200315, 0.200373, 0.200872, 0.200827, 0.200713, 0.200925, 0.200382, 0.200669, 0.200633, 0.200538, 0.200306, 0.200337, 0.200317, 0.20038, 0.200826], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 0, 6, 1, 6, 1, 1, 5, 15, 0, 28, 0, 1, 1, 0, 1, 1]': ([0.20049, 0.200966, 0.20097, 0.20024, 0.200686, 0.200483, 0.20037, 0.2006, 0.200501, 0.200333, 0.200808, 0.200274, 0.200676, 0.200789, 0.200493, 0.200315, 0.200373, 0.200872, 0.200827, 0.200713, 0.200925, 0.200382, 0.200669, 0.200633, 0.200538, 0.200306, 0.200337, 0.200317, 0.20038, 0.200826], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	5
        Additions: 		596
        Multiplications: 	252
        Divisions: 		0
        Logical: 		0
        Reads: 			1218
        Writes: 		230
        Comparisons:		18
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest3.exe __orio_perftest3.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest3.exe  
Program Test Output: 
{'[1, 2, 0, 6, 0, 2, 1, 0, 12, 0, 4, 4, 1, 1, 0, 1, 0, 0]' : 0.0978}
{'[1, 2, 0, 6, 0, 2, 1, 0, 12, 0, 4, 4, 1, 1, 0, 1, 0, 0]' : 0.097744}
{'[1, 2, 0, 6, 0, 2, 1, 0, 12, 0, 4, 4, 1, 1, 0, 1, 0, 0]' : 0.0979989}
{'[1, 2, 0, 6, 0, 2, 1, 0, 12, 0, 4, 4, 1, 1, 0, 1, 0, 0]' : 0.0980551}
{'[1, 2, 0, 6, 0, 2, 1, 0, 12, 0, 4, 4, 1, 1, 0, 1, 0, 0]' : 0.098289}
{'[1, 2, 0, 6, 0, 2, 1, 0, 12, 0, 4, 4, 1, 1, 0, 1, 0, 0]' : 0.098052}
{'[1, 2, 0, 6, 0, 2, 1, 0, 12, 0, 4, 4, 1, 1, 0, 1, 0, 0]' : 0.0979559}
{'[1, 2, 0, 6, 0, 2, 1, 0, 12, 0, 4, 4, 1, 1, 0, 1, 0, 0]' : 0.0980701}
{'[1, 2, 0, 6, 0, 2, 1, 0, 12, 0, 4, 4, 1, 1, 0, 1, 0, 0]' : 0.0982571}
{'[1, 2, 0, 6, 0, 2, 1, 0, 12, 0, 4, 4, 1, 1, 0, 1, 0, 0]' : 0.0979929}
{'[1, 2, 0, 6, 0, 2, 1, 0, 12, 0, 4, 4, 1, 1, 0, 1, 0, 0]' : 0.097945}
{'[1, 2, 0, 6, 0, 2, 1, 0, 12, 0, 4, 4, 1, 1, 0, 1, 0, 0]' : 0.0982521}
{'[1, 2, 0, 6, 0, 2, 1, 0, 12, 0, 4, 4, 1, 1, 0, 1, 0, 0]' : 0.0982261}
{'[1, 2, 0, 6, 0, 2, 1, 0, 12, 0, 4, 4, 1, 1, 0, 1, 0, 0]' : 0.098099}
{'[1, 2, 0, 6, 0, 2, 1, 0, 12, 0, 4, 4, 1, 1, 0, 1, 0, 0]' : 0.0980082}
{'[1, 2, 0, 6, 0, 2, 1, 0, 12, 0, 4, 4, 1, 1, 0, 1, 0, 0]' : 0.098057}
{'[1, 2, 0, 6, 0, 2, 1, 0, 12, 0, 4, 4, 1, 1, 0, 1, 0, 0]' : 0.098022}
{'[1, 2, 0, 6, 0, 2, 1, 0, 12, 0, 4, 4, 1, 1, 0, 1, 0, 0]' : 0.0979528}
{'[1, 2, 0, 6, 0, 2, 1, 0, 12, 0, 4, 4, 1, 1, 0, 1, 0, 0]' : 0.0981338}
{'[1, 2, 0, 6, 0, 2, 1, 0, 12, 0, 4, 4, 1, 1, 0, 1, 0, 0]' : 0.098155}
{'[1, 2, 0, 6, 0, 2, 1, 0, 12, 0, 4, 4, 1, 1, 0, 1, 0, 0]' : 0.0980639}
{'[1, 2, 0, 6, 0, 2, 1, 0, 12, 0, 4, 4, 1, 1, 0, 1, 0, 0]' : 0.098119}
{'[1, 2, 0, 6, 0, 2, 1, 0, 12, 0, 4, 4, 1, 1, 0, 1, 0, 0]' : 0.098223}
{'[1, 2, 0, 6, 0, 2, 1, 0, 12, 0, 4, 4, 1, 1, 0, 1, 0, 0]' : 0.0982468}
{'[1, 2, 0, 6, 0, 2, 1, 0, 12, 0, 4, 4, 1, 1, 0, 1, 0, 0]' : 0.0979819}
{'[1, 2, 0, 6, 0, 2, 1, 0, 12, 0, 4, 4, 1, 1, 0, 1, 0, 0]' : 0.0979972}
{'[1, 2, 0, 6, 0, 2, 1, 0, 12, 0, 4, 4, 1, 1, 0, 1, 0, 0]' : 0.0979462}
{'[1, 2, 0, 6, 0, 2, 1, 0, 12, 0, 4, 4, 1, 1, 0, 1, 0, 0]' : 0.0980189}
{'[1, 2, 0, 6, 0, 2, 1, 0, 12, 0, 4, 4, 1, 1, 0, 1, 0, 0]' : 0.0979838}
{'[1, 2, 0, 6, 0, 2, 1, 0, 12, 0, 4, 4, 1, 1, 0, 1, 0, 0]' : 0.0984612}

out:
 ["{'[1, 2, 0, 6, 0, 2, 1, 0, 12, 0, 4, 4, 1, 1, 0, 1, 0, 0]' : 0.0978}", "{'[1, 2, 0, 6, 0, 2, 1, 0, 12, 0, 4, 4, 1, 1, 0, 1, 0, 0]' : 0.097744}", "{'[1, 2, 0, 6, 0, 2, 1, 0, 12, 0, 4, 4, 1, 1, 0, 1, 0, 0]' : 0.0979989}", "{'[1, 2, 0, 6, 0, 2, 1, 0, 12, 0, 4, 4, 1, 1, 0, 1, 0, 0]' : 0.0980551}", "{'[1, 2, 0, 6, 0, 2, 1, 0, 12, 0, 4, 4, 1, 1, 0, 1, 0, 0]' : 0.098289}", "{'[1, 2, 0, 6, 0, 2, 1, 0, 12, 0, 4, 4, 1, 1, 0, 1, 0, 0]' : 0.098052}", "{'[1, 2, 0, 6, 0, 2, 1, 0, 12, 0, 4, 4, 1, 1, 0, 1, 0, 0]' : 0.0979559}", "{'[1, 2, 0, 6, 0, 2, 1, 0, 12, 0, 4, 4, 1, 1, 0, 1, 0, 0]' : 0.0980701}", "{'[1, 2, 0, 6, 0, 2, 1, 0, 12, 0, 4, 4, 1, 1, 0, 1, 0, 0]' : 0.0982571}", "{'[1, 2, 0, 6, 0, 2, 1, 0, 12, 0, 4, 4, 1, 1, 0, 1, 0, 0]' : 0.0979929}", "{'[1, 2, 0, 6, 0, 2, 1, 0, 12, 0, 4, 4, 1, 1, 0, 1, 0, 0]' : 0.097945}", "{'[1, 2, 0, 6, 0, 2, 1, 0, 12, 0, 4, 4, 1, 1, 0, 1, 0, 0]' : 0.0982521}", "{'[1, 2, 0, 6, 0, 2, 1, 0, 12, 0, 4, 4, 1, 1, 0, 1, 0, 0]' : 0.0982261}", "{'[1, 2, 0, 6, 0, 2, 1, 0, 12, 0, 4, 4, 1, 1, 0, 1, 0, 0]' : 0.098099}", "{'[1, 2, 0, 6, 0, 2, 1, 0, 12, 0, 4, 4, 1, 1, 0, 1, 0, 0]' : 0.0980082}", "{'[1, 2, 0, 6, 0, 2, 1, 0, 12, 0, 4, 4, 1, 1, 0, 1, 0, 0]' : 0.098057}", "{'[1, 2, 0, 6, 0, 2, 1, 0, 12, 0, 4, 4, 1, 1, 0, 1, 0, 0]' : 0.098022}", "{'[1, 2, 0, 6, 0, 2, 1, 0, 12, 0, 4, 4, 1, 1, 0, 1, 0, 0]' : 0.0979528}", "{'[1, 2, 0, 6, 0, 2, 1, 0, 12, 0, 4, 4, 1, 1, 0, 1, 0, 0]' : 0.0981338}", "{'[1, 2, 0, 6, 0, 2, 1, 0, 12, 0, 4, 4, 1, 1, 0, 1, 0, 0]' : 0.098155}", "{'[1, 2, 0, 6, 0, 2, 1, 0, 12, 0, 4, 4, 1, 1, 0, 1, 0, 0]' : 0.0980639}", "{'[1, 2, 0, 6, 0, 2, 1, 0, 12, 0, 4, 4, 1, 1, 0, 1, 0, 0]' : 0.098119}", "{'[1, 2, 0, 6, 0, 2, 1, 0, 12, 0, 4, 4, 1, 1, 0, 1, 0, 0]' : 0.098223}", "{'[1, 2, 0, 6, 0, 2, 1, 0, 12, 0, 4, 4, 1, 1, 0, 1, 0, 0]' : 0.0982468}", "{'[1, 2, 0, 6, 0, 2, 1, 0, 12, 0, 4, 4, 1, 1, 0, 1, 0, 0]' : 0.0979819}", "{'[1, 2, 0, 6, 0, 2, 1, 0, 12, 0, 4, 4, 1, 1, 0, 1, 0, 0]' : 0.0979972}", "{'[1, 2, 0, 6, 0, 2, 1, 0, 12, 0, 4, 4, 1, 1, 0, 1, 0, 0]' : 0.0979462}", "{'[1, 2, 0, 6, 0, 2, 1, 0, 12, 0, 4, 4, 1, 1, 0, 1, 0, 0]' : 0.0980189}", "{'[1, 2, 0, 6, 0, 2, 1, 0, 12, 0, 4, 4, 1, 1, 0, 1, 0, 0]' : 0.0979838}", "{'[1, 2, 0, 6, 0, 2, 1, 0, 12, 0, 4, 4, 1, 1, 0, 1, 0, 0]' : 0.0984612}"]
returning from 'run': {'[1, 2, 0, 6, 0, 2, 1, 0, 12, 0, 4, 4, 1, 1, 0, 1, 0, 0]': ([0.0978, 0.097744, 0.0979989, 0.0980551, 0.098289, 0.098052, 0.0979559, 0.0980701, 0.0982571, 0.0979929, 0.097945, 0.0982521, 0.0982261, 0.098099, 0.0980082, 0.098057, 0.098022, 0.0979528, 0.0981338, 0.098155, 0.0980639, 0.098119, 0.098223, 0.0982468, 0.0979819, 0.0979972, 0.0979462, 0.0980189, 0.0979838, 0.0984612], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 2, 0, 6, 0, 2, 1, 0, 12, 0, 4, 4, 1, 1, 0, 1, 0, 0]': ([0.0978, 0.097744, 0.0979989, 0.0980551, 0.098289, 0.098052, 0.0979559, 0.0980701, 0.0982571, 0.0979929, 0.097945, 0.0982521, 0.0982261, 0.098099, 0.0980082, 0.098057, 0.098022, 0.0979528, 0.0981338, 0.098155, 0.0980639, 0.098119, 0.098223, 0.0982468, 0.0979819, 0.0979972, 0.0979462, 0.0980189, 0.0979838, 0.0984612], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	5
        Additions: 		372
        Multiplications: 	158
        Divisions: 		0
        Logical: 		0
        Reads: 			879
        Writes: 		109
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest4.exe __orio_perftest4.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest4.exe  
Program Test Output: 
{'[6, 2, 0, 5, 0, 0, 0, 1, 2, 0, 23, 20, 0, 2, 0, 0, 1, 0]' : 0.18522}
{'[6, 2, 0, 5, 0, 0, 0, 1, 2, 0, 23, 20, 0, 2, 0, 0, 1, 0]' : 0.185104}
{'[6, 2, 0, 5, 0, 0, 0, 1, 2, 0, 23, 20, 0, 2, 0, 0, 1, 0]' : 0.185175}
{'[6, 2, 0, 5, 0, 0, 0, 1, 2, 0, 23, 20, 0, 2, 0, 0, 1, 0]' : 0.166256}
{'[6, 2, 0, 5, 0, 0, 0, 1, 2, 0, 23, 20, 0, 2, 0, 0, 1, 0]' : 0.155184}
{'[6, 2, 0, 5, 0, 0, 0, 1, 2, 0, 23, 20, 0, 2, 0, 0, 1, 0]' : 0.155294}
{'[6, 2, 0, 5, 0, 0, 0, 1, 2, 0, 23, 20, 0, 2, 0, 0, 1, 0]' : 0.155296}
{'[6, 2, 0, 5, 0, 0, 0, 1, 2, 0, 23, 20, 0, 2, 0, 0, 1, 0]' : 0.155227}
{'[6, 2, 0, 5, 0, 0, 0, 1, 2, 0, 23, 20, 0, 2, 0, 0, 1, 0]' : 0.155129}
{'[6, 2, 0, 5, 0, 0, 0, 1, 2, 0, 23, 20, 0, 2, 0, 0, 1, 0]' : 0.155282}
{'[6, 2, 0, 5, 0, 0, 0, 1, 2, 0, 23, 20, 0, 2, 0, 0, 1, 0]' : 0.155123}
{'[6, 2, 0, 5, 0, 0, 0, 1, 2, 0, 23, 20, 0, 2, 0, 0, 1, 0]' : 0.15533}
{'[6, 2, 0, 5, 0, 0, 0, 1, 2, 0, 23, 20, 0, 2, 0, 0, 1, 0]' : 0.155298}
{'[6, 2, 0, 5, 0, 0, 0, 1, 2, 0, 23, 20, 0, 2, 0, 0, 1, 0]' : 0.155383}
{'[6, 2, 0, 5, 0, 0, 0, 1, 2, 0, 23, 20, 0, 2, 0, 0, 1, 0]' : 0.155194}
{'[6, 2, 0, 5, 0, 0, 0, 1, 2, 0, 23, 20, 0, 2, 0, 0, 1, 0]' : 0.155132}
{'[6, 2, 0, 5, 0, 0, 0, 1, 2, 0, 23, 20, 0, 2, 0, 0, 1, 0]' : 0.155276}
{'[6, 2, 0, 5, 0, 0, 0, 1, 2, 0, 23, 20, 0, 2, 0, 0, 1, 0]' : 0.155274}
{'[6, 2, 0, 5, 0, 0, 0, 1, 2, 0, 23, 20, 0, 2, 0, 0, 1, 0]' : 0.155355}
{'[6, 2, 0, 5, 0, 0, 0, 1, 2, 0, 23, 20, 0, 2, 0, 0, 1, 0]' : 0.155337}
{'[6, 2, 0, 5, 0, 0, 0, 1, 2, 0, 23, 20, 0, 2, 0, 0, 1, 0]' : 0.155509}
{'[6, 2, 0, 5, 0, 0, 0, 1, 2, 0, 23, 20, 0, 2, 0, 0, 1, 0]' : 0.155202}
{'[6, 2, 0, 5, 0, 0, 0, 1, 2, 0, 23, 20, 0, 2, 0, 0, 1, 0]' : 0.155607}
{'[6, 2, 0, 5, 0, 0, 0, 1, 2, 0, 23, 20, 0, 2, 0, 0, 1, 0]' : 0.15518}
{'[6, 2, 0, 5, 0, 0, 0, 1, 2, 0, 23, 20, 0, 2, 0, 0, 1, 0]' : 0.155251}
{'[6, 2, 0, 5, 0, 0, 0, 1, 2, 0, 23, 20, 0, 2, 0, 0, 1, 0]' : 0.155117}
{'[6, 2, 0, 5, 0, 0, 0, 1, 2, 0, 23, 20, 0, 2, 0, 0, 1, 0]' : 0.155217}
{'[6, 2, 0, 5, 0, 0, 0, 1, 2, 0, 23, 20, 0, 2, 0, 0, 1, 0]' : 0.155711}
{'[6, 2, 0, 5, 0, 0, 0, 1, 2, 0, 23, 20, 0, 2, 0, 0, 1, 0]' : 0.155228}
{'[6, 2, 0, 5, 0, 0, 0, 1, 2, 0, 23, 20, 0, 2, 0, 0, 1, 0]' : 0.15535}

out:
 ["{'[6, 2, 0, 5, 0, 0, 0, 1, 2, 0, 23, 20, 0, 2, 0, 0, 1, 0]' : 0.18522}", "{'[6, 2, 0, 5, 0, 0, 0, 1, 2, 0, 23, 20, 0, 2, 0, 0, 1, 0]' : 0.185104}", "{'[6, 2, 0, 5, 0, 0, 0, 1, 2, 0, 23, 20, 0, 2, 0, 0, 1, 0]' : 0.185175}", "{'[6, 2, 0, 5, 0, 0, 0, 1, 2, 0, 23, 20, 0, 2, 0, 0, 1, 0]' : 0.166256}", "{'[6, 2, 0, 5, 0, 0, 0, 1, 2, 0, 23, 20, 0, 2, 0, 0, 1, 0]' : 0.155184}", "{'[6, 2, 0, 5, 0, 0, 0, 1, 2, 0, 23, 20, 0, 2, 0, 0, 1, 0]' : 0.155294}", "{'[6, 2, 0, 5, 0, 0, 0, 1, 2, 0, 23, 20, 0, 2, 0, 0, 1, 0]' : 0.155296}", "{'[6, 2, 0, 5, 0, 0, 0, 1, 2, 0, 23, 20, 0, 2, 0, 0, 1, 0]' : 0.155227}", "{'[6, 2, 0, 5, 0, 0, 0, 1, 2, 0, 23, 20, 0, 2, 0, 0, 1, 0]' : 0.155129}", "{'[6, 2, 0, 5, 0, 0, 0, 1, 2, 0, 23, 20, 0, 2, 0, 0, 1, 0]' : 0.155282}", "{'[6, 2, 0, 5, 0, 0, 0, 1, 2, 0, 23, 20, 0, 2, 0, 0, 1, 0]' : 0.155123}", "{'[6, 2, 0, 5, 0, 0, 0, 1, 2, 0, 23, 20, 0, 2, 0, 0, 1, 0]' : 0.15533}", "{'[6, 2, 0, 5, 0, 0, 0, 1, 2, 0, 23, 20, 0, 2, 0, 0, 1, 0]' : 0.155298}", "{'[6, 2, 0, 5, 0, 0, 0, 1, 2, 0, 23, 20, 0, 2, 0, 0, 1, 0]' : 0.155383}", "{'[6, 2, 0, 5, 0, 0, 0, 1, 2, 0, 23, 20, 0, 2, 0, 0, 1, 0]' : 0.155194}", "{'[6, 2, 0, 5, 0, 0, 0, 1, 2, 0, 23, 20, 0, 2, 0, 0, 1, 0]' : 0.155132}", "{'[6, 2, 0, 5, 0, 0, 0, 1, 2, 0, 23, 20, 0, 2, 0, 0, 1, 0]' : 0.155276}", "{'[6, 2, 0, 5, 0, 0, 0, 1, 2, 0, 23, 20, 0, 2, 0, 0, 1, 0]' : 0.155274}", "{'[6, 2, 0, 5, 0, 0, 0, 1, 2, 0, 23, 20, 0, 2, 0, 0, 1, 0]' : 0.155355}", "{'[6, 2, 0, 5, 0, 0, 0, 1, 2, 0, 23, 20, 0, 2, 0, 0, 1, 0]' : 0.155337}", "{'[6, 2, 0, 5, 0, 0, 0, 1, 2, 0, 23, 20, 0, 2, 0, 0, 1, 0]' : 0.155509}", "{'[6, 2, 0, 5, 0, 0, 0, 1, 2, 0, 23, 20, 0, 2, 0, 0, 1, 0]' : 0.155202}", "{'[6, 2, 0, 5, 0, 0, 0, 1, 2, 0, 23, 20, 0, 2, 0, 0, 1, 0]' : 0.155607}", "{'[6, 2, 0, 5, 0, 0, 0, 1, 2, 0, 23, 20, 0, 2, 0, 0, 1, 0]' : 0.15518}", "{'[6, 2, 0, 5, 0, 0, 0, 1, 2, 0, 23, 20, 0, 2, 0, 0, 1, 0]' : 0.155251}", "{'[6, 2, 0, 5, 0, 0, 0, 1, 2, 0, 23, 20, 0, 2, 0, 0, 1, 0]' : 0.155117}", "{'[6, 2, 0, 5, 0, 0, 0, 1, 2, 0, 23, 20, 0, 2, 0, 0, 1, 0]' : 0.155217}", "{'[6, 2, 0, 5, 0, 0, 0, 1, 2, 0, 23, 20, 0, 2, 0, 0, 1, 0]' : 0.155711}", "{'[6, 2, 0, 5, 0, 0, 0, 1, 2, 0, 23, 20, 0, 2, 0, 0, 1, 0]' : 0.155228}", "{'[6, 2, 0, 5, 0, 0, 0, 1, 2, 0, 23, 20, 0, 2, 0, 0, 1, 0]' : 0.15535}"]
returning from 'run': {'[6, 2, 0, 5, 0, 0, 0, 1, 2, 0, 23, 20, 0, 2, 0, 0, 1, 0]': ([0.18522, 0.185104, 0.185175, 0.166256, 0.155184, 0.155294, 0.155296, 0.155227, 0.155129, 0.155282, 0.155123, 0.15533, 0.155298, 0.155383, 0.155194, 0.155132, 0.155276, 0.155274, 0.155355, 0.155337, 0.155509, 0.155202, 0.155607, 0.15518, 0.155251, 0.155117, 0.155217, 0.155711, 0.155228, 0.15535], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 2, 0, 5, 0, 0, 0, 1, 2, 0, 23, 20, 0, 2, 0, 0, 1, 0]': ([0.18522, 0.185104, 0.185175, 0.166256, 0.155184, 0.155294, 0.155296, 0.155227, 0.155129, 0.155282, 0.155123, 0.15533, 0.155298, 0.155383, 0.155194, 0.155132, 0.155276, 0.155274, 0.155355, 0.155337, 0.155509, 0.155202, 0.155607, 0.15518, 0.155251, 0.155117, 0.155217, 0.155711, 0.155228, 0.15535], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	69
        Max loop nest depth: 	6
        Additions: 		1779
        Multiplications: 	648
        Divisions: 		0
        Logical: 		0
        Reads: 			3628
        Writes: 		739
        Comparisons:		69
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest5.exe __orio_perftest5.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest5.exe  
Program Test Output: 
{'[3, 1, 6, 3, 1, 4, 0, 0, 0, 25, 0, 1, 0, 0, 1, 1, 0, 0]' : 0.148986}
{'[3, 1, 6, 3, 1, 4, 0, 0, 0, 25, 0, 1, 0, 0, 1, 1, 0, 0]' : 0.148951}
{'[3, 1, 6, 3, 1, 4, 0, 0, 0, 25, 0, 1, 0, 0, 1, 1, 0, 0]' : 0.148913}
{'[3, 1, 6, 3, 1, 4, 0, 0, 0, 25, 0, 1, 0, 0, 1, 1, 0, 0]' : 0.13763}
{'[3, 1, 6, 3, 1, 4, 0, 0, 0, 25, 0, 1, 0, 0, 1, 1, 0, 0]' : 0.129912}
{'[3, 1, 6, 3, 1, 4, 0, 0, 0, 25, 0, 1, 0, 0, 1, 1, 0, 0]' : 0.130126}
{'[3, 1, 6, 3, 1, 4, 0, 0, 0, 25, 0, 1, 0, 0, 1, 1, 0, 0]' : 0.130064}
{'[3, 1, 6, 3, 1, 4, 0, 0, 0, 25, 0, 1, 0, 0, 1, 1, 0, 0]' : 0.130022}
{'[3, 1, 6, 3, 1, 4, 0, 0, 0, 25, 0, 1, 0, 0, 1, 1, 0, 0]' : 0.129869}
{'[3, 1, 6, 3, 1, 4, 0, 0, 0, 25, 0, 1, 0, 0, 1, 1, 0, 0]' : 0.129961}
{'[3, 1, 6, 3, 1, 4, 0, 0, 0, 25, 0, 1, 0, 0, 1, 1, 0, 0]' : 0.129977}
{'[3, 1, 6, 3, 1, 4, 0, 0, 0, 25, 0, 1, 0, 0, 1, 1, 0, 0]' : 0.130733}
{'[3, 1, 6, 3, 1, 4, 0, 0, 0, 25, 0, 1, 0, 0, 1, 1, 0, 0]' : 0.130021}
{'[3, 1, 6, 3, 1, 4, 0, 0, 0, 25, 0, 1, 0, 0, 1, 1, 0, 0]' : 0.130392}
{'[3, 1, 6, 3, 1, 4, 0, 0, 0, 25, 0, 1, 0, 0, 1, 1, 0, 0]' : 0.130538}
{'[3, 1, 6, 3, 1, 4, 0, 0, 0, 25, 0, 1, 0, 0, 1, 1, 0, 0]' : 0.133442}
{'[3, 1, 6, 3, 1, 4, 0, 0, 0, 25, 0, 1, 0, 0, 1, 1, 0, 0]' : 0.133098}
{'[3, 1, 6, 3, 1, 4, 0, 0, 0, 25, 0, 1, 0, 0, 1, 1, 0, 0]' : 0.133267}
{'[3, 1, 6, 3, 1, 4, 0, 0, 0, 25, 0, 1, 0, 0, 1, 1, 0, 0]' : 0.13311}
{'[3, 1, 6, 3, 1, 4, 0, 0, 0, 25, 0, 1, 0, 0, 1, 1, 0, 0]' : 0.132995}
{'[3, 1, 6, 3, 1, 4, 0, 0, 0, 25, 0, 1, 0, 0, 1, 1, 0, 0]' : 0.133194}
{'[3, 1, 6, 3, 1, 4, 0, 0, 0, 25, 0, 1, 0, 0, 1, 1, 0, 0]' : 0.133085}
{'[3, 1, 6, 3, 1, 4, 0, 0, 0, 25, 0, 1, 0, 0, 1, 1, 0, 0]' : 0.13324}
{'[3, 1, 6, 3, 1, 4, 0, 0, 0, 25, 0, 1, 0, 0, 1, 1, 0, 0]' : 0.133216}
{'[3, 1, 6, 3, 1, 4, 0, 0, 0, 25, 0, 1, 0, 0, 1, 1, 0, 0]' : 0.133089}
{'[3, 1, 6, 3, 1, 4, 0, 0, 0, 25, 0, 1, 0, 0, 1, 1, 0, 0]' : 0.133029}
{'[3, 1, 6, 3, 1, 4, 0, 0, 0, 25, 0, 1, 0, 0, 1, 1, 0, 0]' : 0.133335}
{'[3, 1, 6, 3, 1, 4, 0, 0, 0, 25, 0, 1, 0, 0, 1, 1, 0, 0]' : 0.13307}
{'[3, 1, 6, 3, 1, 4, 0, 0, 0, 25, 0, 1, 0, 0, 1, 1, 0, 0]' : 0.133079}
{'[3, 1, 6, 3, 1, 4, 0, 0, 0, 25, 0, 1, 0, 0, 1, 1, 0, 0]' : 0.133108}

out:
 ["{'[3, 1, 6, 3, 1, 4, 0, 0, 0, 25, 0, 1, 0, 0, 1, 1, 0, 0]' : 0.148986}", "{'[3, 1, 6, 3, 1, 4, 0, 0, 0, 25, 0, 1, 0, 0, 1, 1, 0, 0]' : 0.148951}", "{'[3, 1, 6, 3, 1, 4, 0, 0, 0, 25, 0, 1, 0, 0, 1, 1, 0, 0]' : 0.148913}", "{'[3, 1, 6, 3, 1, 4, 0, 0, 0, 25, 0, 1, 0, 0, 1, 1, 0, 0]' : 0.13763}", "{'[3, 1, 6, 3, 1, 4, 0, 0, 0, 25, 0, 1, 0, 0, 1, 1, 0, 0]' : 0.129912}", "{'[3, 1, 6, 3, 1, 4, 0, 0, 0, 25, 0, 1, 0, 0, 1, 1, 0, 0]' : 0.130126}", "{'[3, 1, 6, 3, 1, 4, 0, 0, 0, 25, 0, 1, 0, 0, 1, 1, 0, 0]' : 0.130064}", "{'[3, 1, 6, 3, 1, 4, 0, 0, 0, 25, 0, 1, 0, 0, 1, 1, 0, 0]' : 0.130022}", "{'[3, 1, 6, 3, 1, 4, 0, 0, 0, 25, 0, 1, 0, 0, 1, 1, 0, 0]' : 0.129869}", "{'[3, 1, 6, 3, 1, 4, 0, 0, 0, 25, 0, 1, 0, 0, 1, 1, 0, 0]' : 0.129961}", "{'[3, 1, 6, 3, 1, 4, 0, 0, 0, 25, 0, 1, 0, 0, 1, 1, 0, 0]' : 0.129977}", "{'[3, 1, 6, 3, 1, 4, 0, 0, 0, 25, 0, 1, 0, 0, 1, 1, 0, 0]' : 0.130733}", "{'[3, 1, 6, 3, 1, 4, 0, 0, 0, 25, 0, 1, 0, 0, 1, 1, 0, 0]' : 0.130021}", "{'[3, 1, 6, 3, 1, 4, 0, 0, 0, 25, 0, 1, 0, 0, 1, 1, 0, 0]' : 0.130392}", "{'[3, 1, 6, 3, 1, 4, 0, 0, 0, 25, 0, 1, 0, 0, 1, 1, 0, 0]' : 0.130538}", "{'[3, 1, 6, 3, 1, 4, 0, 0, 0, 25, 0, 1, 0, 0, 1, 1, 0, 0]' : 0.133442}", "{'[3, 1, 6, 3, 1, 4, 0, 0, 0, 25, 0, 1, 0, 0, 1, 1, 0, 0]' : 0.133098}", "{'[3, 1, 6, 3, 1, 4, 0, 0, 0, 25, 0, 1, 0, 0, 1, 1, 0, 0]' : 0.133267}", "{'[3, 1, 6, 3, 1, 4, 0, 0, 0, 25, 0, 1, 0, 0, 1, 1, 0, 0]' : 0.13311}", "{'[3, 1, 6, 3, 1, 4, 0, 0, 0, 25, 0, 1, 0, 0, 1, 1, 0, 0]' : 0.132995}", "{'[3, 1, 6, 3, 1, 4, 0, 0, 0, 25, 0, 1, 0, 0, 1, 1, 0, 0]' : 0.133194}", "{'[3, 1, 6, 3, 1, 4, 0, 0, 0, 25, 0, 1, 0, 0, 1, 1, 0, 0]' : 0.133085}", "{'[3, 1, 6, 3, 1, 4, 0, 0, 0, 25, 0, 1, 0, 0, 1, 1, 0, 0]' : 0.13324}", "{'[3, 1, 6, 3, 1, 4, 0, 0, 0, 25, 0, 1, 0, 0, 1, 1, 0, 0]' : 0.133216}", "{'[3, 1, 6, 3, 1, 4, 0, 0, 0, 25, 0, 1, 0, 0, 1, 1, 0, 0]' : 0.133089}", "{'[3, 1, 6, 3, 1, 4, 0, 0, 0, 25, 0, 1, 0, 0, 1, 1, 0, 0]' : 0.133029}", "{'[3, 1, 6, 3, 1, 4, 0, 0, 0, 25, 0, 1, 0, 0, 1, 1, 0, 0]' : 0.133335}", "{'[3, 1, 6, 3, 1, 4, 0, 0, 0, 25, 0, 1, 0, 0, 1, 1, 0, 0]' : 0.13307}", "{'[3, 1, 6, 3, 1, 4, 0, 0, 0, 25, 0, 1, 0, 0, 1, 1, 0, 0]' : 0.133079}", "{'[3, 1, 6, 3, 1, 4, 0, 0, 0, 25, 0, 1, 0, 0, 1, 1, 0, 0]' : 0.133108}"]
returning from 'run': {'[3, 1, 6, 3, 1, 4, 0, 0, 0, 25, 0, 1, 0, 0, 1, 1, 0, 0]': ([0.148986, 0.148951, 0.148913, 0.13763, 0.129912, 0.130126, 0.130064, 0.130022, 0.129869, 0.129961, 0.129977, 0.130733, 0.130021, 0.130392, 0.130538, 0.133442, 0.133098, 0.133267, 0.13311, 0.132995, 0.133194, 0.133085, 0.13324, 0.133216, 0.133089, 0.133029, 0.133335, 0.13307, 0.133079, 0.133108], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 1, 6, 3, 1, 4, 0, 0, 0, 25, 0, 1, 0, 0, 1, 1, 0, 0]': ([0.148986, 0.148951, 0.148913, 0.13763, 0.129912, 0.130126, 0.130064, 0.130022, 0.129869, 0.129961, 0.129977, 0.130733, 0.130021, 0.130392, 0.130538, 0.133442, 0.133098, 0.133267, 0.13311, 0.132995, 0.133194, 0.133085, 0.13324, 0.133216, 0.133089, 0.133029, 0.133335, 0.13307, 0.133079, 0.133108], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	5
        Additions: 		2175
        Multiplications: 	666
        Divisions: 		0
        Logical: 		0
        Reads: 			3566
        Writes: 		433
        Comparisons:		16
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest6.exe __orio_perftest6.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest6.exe  
Program Test Output: 
{'[2, 0, 0, 2, 0, 6, 0, 0, 27, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.109821}
{'[2, 0, 0, 2, 0, 6, 0, 0, 27, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.109709}
{'[2, 0, 0, 2, 0, 6, 0, 0, 27, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.109521}
{'[2, 0, 0, 2, 0, 6, 0, 0, 27, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.100236}
{'[2, 0, 0, 2, 0, 6, 0, 0, 27, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.0974219}
{'[2, 0, 0, 2, 0, 6, 0, 0, 27, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.0995719}
{'[2, 0, 0, 2, 0, 6, 0, 0, 27, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.0994451}
{'[2, 0, 0, 2, 0, 6, 0, 0, 27, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.099472}
{'[2, 0, 0, 2, 0, 6, 0, 0, 27, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.0995259}
{'[2, 0, 0, 2, 0, 6, 0, 0, 27, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.0995591}
{'[2, 0, 0, 2, 0, 6, 0, 0, 27, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.099499}
{'[2, 0, 0, 2, 0, 6, 0, 0, 27, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.097235}
{'[2, 0, 0, 2, 0, 6, 0, 0, 27, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.097441}
{'[2, 0, 0, 2, 0, 6, 0, 0, 27, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.0970769}
{'[2, 0, 0, 2, 0, 6, 0, 0, 27, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.096951}
{'[2, 0, 0, 2, 0, 6, 0, 0, 27, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.0970941}
{'[2, 0, 0, 2, 0, 6, 0, 0, 27, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.0970502}
{'[2, 0, 0, 2, 0, 6, 0, 0, 27, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.097075}
{'[2, 0, 0, 2, 0, 6, 0, 0, 27, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.0968559}
{'[2, 0, 0, 2, 0, 6, 0, 0, 27, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.096981}
{'[2, 0, 0, 2, 0, 6, 0, 0, 27, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.0989418}
{'[2, 0, 0, 2, 0, 6, 0, 0, 27, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.09952}
{'[2, 0, 0, 2, 0, 6, 0, 0, 27, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.0994761}
{'[2, 0, 0, 2, 0, 6, 0, 0, 27, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.099592}
{'[2, 0, 0, 2, 0, 6, 0, 0, 27, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.0995018}
{'[2, 0, 0, 2, 0, 6, 0, 0, 27, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.0996311}
{'[2, 0, 0, 2, 0, 6, 0, 0, 27, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.099421}
{'[2, 0, 0, 2, 0, 6, 0, 0, 27, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.099556}
{'[2, 0, 0, 2, 0, 6, 0, 0, 27, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.0995162}
{'[2, 0, 0, 2, 0, 6, 0, 0, 27, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.0985231}

out:
 ["{'[2, 0, 0, 2, 0, 6, 0, 0, 27, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.109821}", "{'[2, 0, 0, 2, 0, 6, 0, 0, 27, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.109709}", "{'[2, 0, 0, 2, 0, 6, 0, 0, 27, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.109521}", "{'[2, 0, 0, 2, 0, 6, 0, 0, 27, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.100236}", "{'[2, 0, 0, 2, 0, 6, 0, 0, 27, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.0974219}", "{'[2, 0, 0, 2, 0, 6, 0, 0, 27, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.0995719}", "{'[2, 0, 0, 2, 0, 6, 0, 0, 27, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.0994451}", "{'[2, 0, 0, 2, 0, 6, 0, 0, 27, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.099472}", "{'[2, 0, 0, 2, 0, 6, 0, 0, 27, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.0995259}", "{'[2, 0, 0, 2, 0, 6, 0, 0, 27, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.0995591}", "{'[2, 0, 0, 2, 0, 6, 0, 0, 27, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.099499}", "{'[2, 0, 0, 2, 0, 6, 0, 0, 27, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.097235}", "{'[2, 0, 0, 2, 0, 6, 0, 0, 27, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.097441}", "{'[2, 0, 0, 2, 0, 6, 0, 0, 27, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.0970769}", "{'[2, 0, 0, 2, 0, 6, 0, 0, 27, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.096951}", "{'[2, 0, 0, 2, 0, 6, 0, 0, 27, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.0970941}", "{'[2, 0, 0, 2, 0, 6, 0, 0, 27, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.0970502}", "{'[2, 0, 0, 2, 0, 6, 0, 0, 27, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.097075}", "{'[2, 0, 0, 2, 0, 6, 0, 0, 27, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.0968559}", "{'[2, 0, 0, 2, 0, 6, 0, 0, 27, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.096981}", "{'[2, 0, 0, 2, 0, 6, 0, 0, 27, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.0989418}", "{'[2, 0, 0, 2, 0, 6, 0, 0, 27, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.09952}", "{'[2, 0, 0, 2, 0, 6, 0, 0, 27, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.0994761}", "{'[2, 0, 0, 2, 0, 6, 0, 0, 27, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.099592}", "{'[2, 0, 0, 2, 0, 6, 0, 0, 27, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.0995018}", "{'[2, 0, 0, 2, 0, 6, 0, 0, 27, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.0996311}", "{'[2, 0, 0, 2, 0, 6, 0, 0, 27, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.099421}", "{'[2, 0, 0, 2, 0, 6, 0, 0, 27, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.099556}", "{'[2, 0, 0, 2, 0, 6, 0, 0, 27, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.0995162}", "{'[2, 0, 0, 2, 0, 6, 0, 0, 27, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.0985231}"]
returning from 'run': {'[2, 0, 0, 2, 0, 6, 0, 0, 27, 27, 27, 0, 1, 1, 0, 0, 1, 1]': ([0.109821, 0.109709, 0.109521, 0.100236, 0.0974219, 0.0995719, 0.0994451, 0.099472, 0.0995259, 0.0995591, 0.099499, 0.097235, 0.097441, 0.0970769, 0.096951, 0.0970941, 0.0970502, 0.097075, 0.0968559, 0.096981, 0.0989418, 0.09952, 0.0994761, 0.099592, 0.0995018, 0.0996311, 0.099421, 0.099556, 0.0995162, 0.0985231], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 0, 2, 0, 6, 0, 0, 27, 27, 27, 0, 1, 1, 0, 0, 1, 1]': ([0.109821, 0.109709, 0.109521, 0.100236, 0.0974219, 0.0995719, 0.0994451, 0.099472, 0.0995259, 0.0995591, 0.099499, 0.097235, 0.097441, 0.0970769, 0.096951, 0.0970941, 0.0970502, 0.097075, 0.0968559, 0.096981, 0.0989418, 0.09952, 0.0994761, 0.099592, 0.0995018, 0.0996311, 0.099421, 0.099556, 0.0995162, 0.0985231], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = kkk
Code stats:
        Number of loops: 	26
        Max loop nest depth: 	6
        Additions: 		1670
        Multiplications: 	720
        Divisions: 		0
        Logical: 		0
        Reads: 			3216
        Writes: 		546
        Comparisons:		26
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest7.exe __orio_perftest7.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest7.exe  
Program Test Output: 
{'[4, 6, 3, 4, 5, 1, 1, 1, 15, 0, 26, 10, 1, 0, 0, 1, 1, 1]' : 0.129768}
{'[4, 6, 3, 4, 5, 1, 1, 1, 15, 0, 26, 10, 1, 0, 0, 1, 1, 1]' : 0.12949}
{'[4, 6, 3, 4, 5, 1, 1, 1, 15, 0, 26, 10, 1, 0, 0, 1, 1, 1]' : 0.114027}
{'[4, 6, 3, 4, 5, 1, 1, 1, 15, 0, 26, 10, 1, 0, 0, 1, 1, 1]' : 0.110055}
{'[4, 6, 3, 4, 5, 1, 1, 1, 15, 0, 26, 10, 1, 0, 0, 1, 1, 1]' : 0.110288}
{'[4, 6, 3, 4, 5, 1, 1, 1, 15, 0, 26, 10, 1, 0, 0, 1, 1, 1]' : 0.110071}
{'[4, 6, 3, 4, 5, 1, 1, 1, 15, 0, 26, 10, 1, 0, 0, 1, 1, 1]' : 0.11017}
{'[4, 6, 3, 4, 5, 1, 1, 1, 15, 0, 26, 10, 1, 0, 0, 1, 1, 1]' : 0.110057}
{'[4, 6, 3, 4, 5, 1, 1, 1, 15, 0, 26, 10, 1, 0, 0, 1, 1, 1]' : 0.109979}
{'[4, 6, 3, 4, 5, 1, 1, 1, 15, 0, 26, 10, 1, 0, 0, 1, 1, 1]' : 0.110349}
{'[4, 6, 3, 4, 5, 1, 1, 1, 15, 0, 26, 10, 1, 0, 0, 1, 1, 1]' : 0.110231}
{'[4, 6, 3, 4, 5, 1, 1, 1, 15, 0, 26, 10, 1, 0, 0, 1, 1, 1]' : 0.110334}
{'[4, 6, 3, 4, 5, 1, 1, 1, 15, 0, 26, 10, 1, 0, 0, 1, 1, 1]' : 0.110251}
{'[4, 6, 3, 4, 5, 1, 1, 1, 15, 0, 26, 10, 1, 0, 0, 1, 1, 1]' : 0.110433}
{'[4, 6, 3, 4, 5, 1, 1, 1, 15, 0, 26, 10, 1, 0, 0, 1, 1, 1]' : 0.110148}
{'[4, 6, 3, 4, 5, 1, 1, 1, 15, 0, 26, 10, 1, 0, 0, 1, 1, 1]' : 0.110173}
{'[4, 6, 3, 4, 5, 1, 1, 1, 15, 0, 26, 10, 1, 0, 0, 1, 1, 1]' : 0.110089}
{'[4, 6, 3, 4, 5, 1, 1, 1, 15, 0, 26, 10, 1, 0, 0, 1, 1, 1]' : 0.110072}
{'[4, 6, 3, 4, 5, 1, 1, 1, 15, 0, 26, 10, 1, 0, 0, 1, 1, 1]' : 0.11014}
{'[4, 6, 3, 4, 5, 1, 1, 1, 15, 0, 26, 10, 1, 0, 0, 1, 1, 1]' : 0.110388}
{'[4, 6, 3, 4, 5, 1, 1, 1, 15, 0, 26, 10, 1, 0, 0, 1, 1, 1]' : 0.110306}
{'[4, 6, 3, 4, 5, 1, 1, 1, 15, 0, 26, 10, 1, 0, 0, 1, 1, 1]' : 0.110071}
{'[4, 6, 3, 4, 5, 1, 1, 1, 15, 0, 26, 10, 1, 0, 0, 1, 1, 1]' : 0.110263}
{'[4, 6, 3, 4, 5, 1, 1, 1, 15, 0, 26, 10, 1, 0, 0, 1, 1, 1]' : 0.110192}
{'[4, 6, 3, 4, 5, 1, 1, 1, 15, 0, 26, 10, 1, 0, 0, 1, 1, 1]' : 0.110182}
{'[4, 6, 3, 4, 5, 1, 1, 1, 15, 0, 26, 10, 1, 0, 0, 1, 1, 1]' : 0.110056}
{'[4, 6, 3, 4, 5, 1, 1, 1, 15, 0, 26, 10, 1, 0, 0, 1, 1, 1]' : 0.110051}
{'[4, 6, 3, 4, 5, 1, 1, 1, 15, 0, 26, 10, 1, 0, 0, 1, 1, 1]' : 0.110023}
{'[4, 6, 3, 4, 5, 1, 1, 1, 15, 0, 26, 10, 1, 0, 0, 1, 1, 1]' : 0.110131}
{'[4, 6, 3, 4, 5, 1, 1, 1, 15, 0, 26, 10, 1, 0, 0, 1, 1, 1]' : 0.110601}

out:
 ["{'[4, 6, 3, 4, 5, 1, 1, 1, 15, 0, 26, 10, 1, 0, 0, 1, 1, 1]' : 0.129768}", "{'[4, 6, 3, 4, 5, 1, 1, 1, 15, 0, 26, 10, 1, 0, 0, 1, 1, 1]' : 0.12949}", "{'[4, 6, 3, 4, 5, 1, 1, 1, 15, 0, 26, 10, 1, 0, 0, 1, 1, 1]' : 0.114027}", "{'[4, 6, 3, 4, 5, 1, 1, 1, 15, 0, 26, 10, 1, 0, 0, 1, 1, 1]' : 0.110055}", "{'[4, 6, 3, 4, 5, 1, 1, 1, 15, 0, 26, 10, 1, 0, 0, 1, 1, 1]' : 0.110288}", "{'[4, 6, 3, 4, 5, 1, 1, 1, 15, 0, 26, 10, 1, 0, 0, 1, 1, 1]' : 0.110071}", "{'[4, 6, 3, 4, 5, 1, 1, 1, 15, 0, 26, 10, 1, 0, 0, 1, 1, 1]' : 0.11017}", "{'[4, 6, 3, 4, 5, 1, 1, 1, 15, 0, 26, 10, 1, 0, 0, 1, 1, 1]' : 0.110057}", "{'[4, 6, 3, 4, 5, 1, 1, 1, 15, 0, 26, 10, 1, 0, 0, 1, 1, 1]' : 0.109979}", "{'[4, 6, 3, 4, 5, 1, 1, 1, 15, 0, 26, 10, 1, 0, 0, 1, 1, 1]' : 0.110349}", "{'[4, 6, 3, 4, 5, 1, 1, 1, 15, 0, 26, 10, 1, 0, 0, 1, 1, 1]' : 0.110231}", "{'[4, 6, 3, 4, 5, 1, 1, 1, 15, 0, 26, 10, 1, 0, 0, 1, 1, 1]' : 0.110334}", "{'[4, 6, 3, 4, 5, 1, 1, 1, 15, 0, 26, 10, 1, 0, 0, 1, 1, 1]' : 0.110251}", "{'[4, 6, 3, 4, 5, 1, 1, 1, 15, 0, 26, 10, 1, 0, 0, 1, 1, 1]' : 0.110433}", "{'[4, 6, 3, 4, 5, 1, 1, 1, 15, 0, 26, 10, 1, 0, 0, 1, 1, 1]' : 0.110148}", "{'[4, 6, 3, 4, 5, 1, 1, 1, 15, 0, 26, 10, 1, 0, 0, 1, 1, 1]' : 0.110173}", "{'[4, 6, 3, 4, 5, 1, 1, 1, 15, 0, 26, 10, 1, 0, 0, 1, 1, 1]' : 0.110089}", "{'[4, 6, 3, 4, 5, 1, 1, 1, 15, 0, 26, 10, 1, 0, 0, 1, 1, 1]' : 0.110072}", "{'[4, 6, 3, 4, 5, 1, 1, 1, 15, 0, 26, 10, 1, 0, 0, 1, 1, 1]' : 0.11014}", "{'[4, 6, 3, 4, 5, 1, 1, 1, 15, 0, 26, 10, 1, 0, 0, 1, 1, 1]' : 0.110388}", "{'[4, 6, 3, 4, 5, 1, 1, 1, 15, 0, 26, 10, 1, 0, 0, 1, 1, 1]' : 0.110306}", "{'[4, 6, 3, 4, 5, 1, 1, 1, 15, 0, 26, 10, 1, 0, 0, 1, 1, 1]' : 0.110071}", "{'[4, 6, 3, 4, 5, 1, 1, 1, 15, 0, 26, 10, 1, 0, 0, 1, 1, 1]' : 0.110263}", "{'[4, 6, 3, 4, 5, 1, 1, 1, 15, 0, 26, 10, 1, 0, 0, 1, 1, 1]' : 0.110192}", "{'[4, 6, 3, 4, 5, 1, 1, 1, 15, 0, 26, 10, 1, 0, 0, 1, 1, 1]' : 0.110182}", "{'[4, 6, 3, 4, 5, 1, 1, 1, 15, 0, 26, 10, 1, 0, 0, 1, 1, 1]' : 0.110056}", "{'[4, 6, 3, 4, 5, 1, 1, 1, 15, 0, 26, 10, 1, 0, 0, 1, 1, 1]' : 0.110051}", "{'[4, 6, 3, 4, 5, 1, 1, 1, 15, 0, 26, 10, 1, 0, 0, 1, 1, 1]' : 0.110023}", "{'[4, 6, 3, 4, 5, 1, 1, 1, 15, 0, 26, 10, 1, 0, 0, 1, 1, 1]' : 0.110131}", "{'[4, 6, 3, 4, 5, 1, 1, 1, 15, 0, 26, 10, 1, 0, 0, 1, 1, 1]' : 0.110601}"]
returning from 'run': {'[4, 6, 3, 4, 5, 1, 1, 1, 15, 0, 26, 10, 1, 0, 0, 1, 1, 1]': ([0.129768, 0.12949, 0.114027, 0.110055, 0.110288, 0.110071, 0.11017, 0.110057, 0.109979, 0.110349, 0.110231, 0.110334, 0.110251, 0.110433, 0.110148, 0.110173, 0.110089, 0.110072, 0.11014, 0.110388, 0.110306, 0.110071, 0.110263, 0.110192, 0.110182, 0.110056, 0.110051, 0.110023, 0.110131, 0.110601], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 6, 3, 4, 5, 1, 1, 1, 15, 0, 26, 10, 1, 0, 0, 1, 1, 1]': ([0.129768, 0.12949, 0.114027, 0.110055, 0.110288, 0.110071, 0.11017, 0.110057, 0.109979, 0.110349, 0.110231, 0.110334, 0.110251, 0.110433, 0.110148, 0.110173, 0.110089, 0.110072, 0.11014, 0.110388, 0.110306, 0.110071, 0.110263, 0.110192, 0.110182, 0.110056, 0.110051, 0.110023, 0.110131, 0.110601], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	23
        Max loop nest depth: 	6
        Additions: 		454
        Multiplications: 	132
        Divisions: 		0
        Logical: 		0
        Reads: 			879
        Writes: 		135
        Comparisons:		23
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest8.exe __orio_perftest8.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest8.exe  
Program Test Output: 
{'[2, 1, 1, 6, 2, 5, 1, 0, 4, 1, 0, 19, 0, 0, 0, 0, 1, 1]' : 0.223022}
{'[2, 1, 1, 6, 2, 5, 1, 0, 4, 1, 0, 19, 0, 0, 0, 0, 1, 1]' : 0.208093}
{'[2, 1, 1, 6, 2, 5, 1, 0, 4, 1, 0, 19, 0, 0, 0, 0, 1, 1]' : 0.198625}
{'[2, 1, 1, 6, 2, 5, 1, 0, 4, 1, 0, 19, 0, 0, 0, 0, 1, 1]' : 0.198638}
{'[2, 1, 1, 6, 2, 5, 1, 0, 4, 1, 0, 19, 0, 0, 0, 0, 1, 1]' : 0.198678}
{'[2, 1, 1, 6, 2, 5, 1, 0, 4, 1, 0, 19, 0, 0, 0, 0, 1, 1]' : 0.197067}
{'[2, 1, 1, 6, 2, 5, 1, 0, 4, 1, 0, 19, 0, 0, 0, 0, 1, 1]' : 0.191974}
{'[2, 1, 1, 6, 2, 5, 1, 0, 4, 1, 0, 19, 0, 0, 0, 0, 1, 1]' : 0.191964}
{'[2, 1, 1, 6, 2, 5, 1, 0, 4, 1, 0, 19, 0, 0, 0, 0, 1, 1]' : 0.191968}
{'[2, 1, 1, 6, 2, 5, 1, 0, 4, 1, 0, 19, 0, 0, 0, 0, 1, 1]' : 0.198665}
{'[2, 1, 1, 6, 2, 5, 1, 0, 4, 1, 0, 19, 0, 0, 0, 0, 1, 1]' : 0.198643}
{'[2, 1, 1, 6, 2, 5, 1, 0, 4, 1, 0, 19, 0, 0, 0, 0, 1, 1]' : 0.198966}
{'[2, 1, 1, 6, 2, 5, 1, 0, 4, 1, 0, 19, 0, 0, 0, 0, 1, 1]' : 0.198607}
{'[2, 1, 1, 6, 2, 5, 1, 0, 4, 1, 0, 19, 0, 0, 0, 0, 1, 1]' : 0.198683}
{'[2, 1, 1, 6, 2, 5, 1, 0, 4, 1, 0, 19, 0, 0, 0, 0, 1, 1]' : 0.198689}
{'[2, 1, 1, 6, 2, 5, 1, 0, 4, 1, 0, 19, 0, 0, 0, 0, 1, 1]' : 0.198805}
{'[2, 1, 1, 6, 2, 5, 1, 0, 4, 1, 0, 19, 0, 0, 0, 0, 1, 1]' : 0.198629}
{'[2, 1, 1, 6, 2, 5, 1, 0, 4, 1, 0, 19, 0, 0, 0, 0, 1, 1]' : 0.198692}
{'[2, 1, 1, 6, 2, 5, 1, 0, 4, 1, 0, 19, 0, 0, 0, 0, 1, 1]' : 0.198654}
{'[2, 1, 1, 6, 2, 5, 1, 0, 4, 1, 0, 19, 0, 0, 0, 0, 1, 1]' : 0.198682}
{'[2, 1, 1, 6, 2, 5, 1, 0, 4, 1, 0, 19, 0, 0, 0, 0, 1, 1]' : 0.198632}
{'[2, 1, 1, 6, 2, 5, 1, 0, 4, 1, 0, 19, 0, 0, 0, 0, 1, 1]' : 0.198674}
{'[2, 1, 1, 6, 2, 5, 1, 0, 4, 1, 0, 19, 0, 0, 0, 0, 1, 1]' : 0.198634}
{'[2, 1, 1, 6, 2, 5, 1, 0, 4, 1, 0, 19, 0, 0, 0, 0, 1, 1]' : 0.198605}
{'[2, 1, 1, 6, 2, 5, 1, 0, 4, 1, 0, 19, 0, 0, 0, 0, 1, 1]' : 0.198832}
{'[2, 1, 1, 6, 2, 5, 1, 0, 4, 1, 0, 19, 0, 0, 0, 0, 1, 1]' : 0.198652}
{'[2, 1, 1, 6, 2, 5, 1, 0, 4, 1, 0, 19, 0, 0, 0, 0, 1, 1]' : 0.198806}
{'[2, 1, 1, 6, 2, 5, 1, 0, 4, 1, 0, 19, 0, 0, 0, 0, 1, 1]' : 0.198683}
{'[2, 1, 1, 6, 2, 5, 1, 0, 4, 1, 0, 19, 0, 0, 0, 0, 1, 1]' : 0.198581}
{'[2, 1, 1, 6, 2, 5, 1, 0, 4, 1, 0, 19, 0, 0, 0, 0, 1, 1]' : 0.198831}

out:
 ["{'[2, 1, 1, 6, 2, 5, 1, 0, 4, 1, 0, 19, 0, 0, 0, 0, 1, 1]' : 0.223022}", "{'[2, 1, 1, 6, 2, 5, 1, 0, 4, 1, 0, 19, 0, 0, 0, 0, 1, 1]' : 0.208093}", "{'[2, 1, 1, 6, 2, 5, 1, 0, 4, 1, 0, 19, 0, 0, 0, 0, 1, 1]' : 0.198625}", "{'[2, 1, 1, 6, 2, 5, 1, 0, 4, 1, 0, 19, 0, 0, 0, 0, 1, 1]' : 0.198638}", "{'[2, 1, 1, 6, 2, 5, 1, 0, 4, 1, 0, 19, 0, 0, 0, 0, 1, 1]' : 0.198678}", "{'[2, 1, 1, 6, 2, 5, 1, 0, 4, 1, 0, 19, 0, 0, 0, 0, 1, 1]' : 0.197067}", "{'[2, 1, 1, 6, 2, 5, 1, 0, 4, 1, 0, 19, 0, 0, 0, 0, 1, 1]' : 0.191974}", "{'[2, 1, 1, 6, 2, 5, 1, 0, 4, 1, 0, 19, 0, 0, 0, 0, 1, 1]' : 0.191964}", "{'[2, 1, 1, 6, 2, 5, 1, 0, 4, 1, 0, 19, 0, 0, 0, 0, 1, 1]' : 0.191968}", "{'[2, 1, 1, 6, 2, 5, 1, 0, 4, 1, 0, 19, 0, 0, 0, 0, 1, 1]' : 0.198665}", "{'[2, 1, 1, 6, 2, 5, 1, 0, 4, 1, 0, 19, 0, 0, 0, 0, 1, 1]' : 0.198643}", "{'[2, 1, 1, 6, 2, 5, 1, 0, 4, 1, 0, 19, 0, 0, 0, 0, 1, 1]' : 0.198966}", "{'[2, 1, 1, 6, 2, 5, 1, 0, 4, 1, 0, 19, 0, 0, 0, 0, 1, 1]' : 0.198607}", "{'[2, 1, 1, 6, 2, 5, 1, 0, 4, 1, 0, 19, 0, 0, 0, 0, 1, 1]' : 0.198683}", "{'[2, 1, 1, 6, 2, 5, 1, 0, 4, 1, 0, 19, 0, 0, 0, 0, 1, 1]' : 0.198689}", "{'[2, 1, 1, 6, 2, 5, 1, 0, 4, 1, 0, 19, 0, 0, 0, 0, 1, 1]' : 0.198805}", "{'[2, 1, 1, 6, 2, 5, 1, 0, 4, 1, 0, 19, 0, 0, 0, 0, 1, 1]' : 0.198629}", "{'[2, 1, 1, 6, 2, 5, 1, 0, 4, 1, 0, 19, 0, 0, 0, 0, 1, 1]' : 0.198692}", "{'[2, 1, 1, 6, 2, 5, 1, 0, 4, 1, 0, 19, 0, 0, 0, 0, 1, 1]' : 0.198654}", "{'[2, 1, 1, 6, 2, 5, 1, 0, 4, 1, 0, 19, 0, 0, 0, 0, 1, 1]' : 0.198682}", "{'[2, 1, 1, 6, 2, 5, 1, 0, 4, 1, 0, 19, 0, 0, 0, 0, 1, 1]' : 0.198632}", "{'[2, 1, 1, 6, 2, 5, 1, 0, 4, 1, 0, 19, 0, 0, 0, 0, 1, 1]' : 0.198674}", "{'[2, 1, 1, 6, 2, 5, 1, 0, 4, 1, 0, 19, 0, 0, 0, 0, 1, 1]' : 0.198634}", "{'[2, 1, 1, 6, 2, 5, 1, 0, 4, 1, 0, 19, 0, 0, 0, 0, 1, 1]' : 0.198605}", "{'[2, 1, 1, 6, 2, 5, 1, 0, 4, 1, 0, 19, 0, 0, 0, 0, 1, 1]' : 0.198832}", "{'[2, 1, 1, 6, 2, 5, 1, 0, 4, 1, 0, 19, 0, 0, 0, 0, 1, 1]' : 0.198652}", "{'[2, 1, 1, 6, 2, 5, 1, 0, 4, 1, 0, 19, 0, 0, 0, 0, 1, 1]' : 0.198806}", "{'[2, 1, 1, 6, 2, 5, 1, 0, 4, 1, 0, 19, 0, 0, 0, 0, 1, 1]' : 0.198683}", "{'[2, 1, 1, 6, 2, 5, 1, 0, 4, 1, 0, 19, 0, 0, 0, 0, 1, 1]' : 0.198581}", "{'[2, 1, 1, 6, 2, 5, 1, 0, 4, 1, 0, 19, 0, 0, 0, 0, 1, 1]' : 0.198831}"]
returning from 'run': {'[2, 1, 1, 6, 2, 5, 1, 0, 4, 1, 0, 19, 0, 0, 0, 0, 1, 1]': ([0.223022, 0.208093, 0.198625, 0.198638, 0.198678, 0.197067, 0.191974, 0.191964, 0.191968, 0.198665, 0.198643, 0.198966, 0.198607, 0.198683, 0.198689, 0.198805, 0.198629, 0.198692, 0.198654, 0.198682, 0.198632, 0.198674, 0.198634, 0.198605, 0.198832, 0.198652, 0.198806, 0.198683, 0.198581, 0.198831], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 1, 1, 6, 2, 5, 1, 0, 4, 1, 0, 19, 0, 0, 0, 0, 1, 1]': ([0.223022, 0.208093, 0.198625, 0.198638, 0.198678, 0.197067, 0.191974, 0.191964, 0.191968, 0.198665, 0.198643, 0.198966, 0.198607, 0.198683, 0.198689, 0.198805, 0.198629, 0.198692, 0.198654, 0.198682, 0.198632, 0.198674, 0.198634, 0.198605, 0.198832, 0.198652, 0.198806, 0.198683, 0.198581, 0.198831], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	4
        Additions: 		6906
        Multiplications: 	2088
        Divisions: 		0
        Logical: 		0
        Reads: 			10617
        Writes: 		1101
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest9.exe __orio_perftest9.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest9.exe  
Program Test Output: 
{'[0, 0, 6, 5, 5, 0, 0, 0, 8, 2, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.294221}
{'[0, 0, 6, 5, 5, 0, 0, 0, 8, 2, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.269438}
{'[0, 0, 6, 5, 5, 0, 0, 0, 8, 2, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.270641}
{'[0, 0, 6, 5, 5, 0, 0, 0, 8, 2, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.272391}
{'[0, 0, 6, 5, 5, 0, 0, 0, 8, 2, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.271256}
{'[0, 0, 6, 5, 5, 0, 0, 0, 8, 2, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.271026}
{'[0, 0, 6, 5, 5, 0, 0, 0, 8, 2, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.273124}
{'[0, 0, 6, 5, 5, 0, 0, 0, 8, 2, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.273285}
{'[0, 0, 6, 5, 5, 0, 0, 0, 8, 2, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.277034}
{'[0, 0, 6, 5, 5, 0, 0, 0, 8, 2, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.276614}
{'[0, 0, 6, 5, 5, 0, 0, 0, 8, 2, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.277255}
{'[0, 0, 6, 5, 5, 0, 0, 0, 8, 2, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.274833}
{'[0, 0, 6, 5, 5, 0, 0, 0, 8, 2, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.272173}
{'[0, 0, 6, 5, 5, 0, 0, 0, 8, 2, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.272798}
{'[0, 0, 6, 5, 5, 0, 0, 0, 8, 2, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.273404}
{'[0, 0, 6, 5, 5, 0, 0, 0, 8, 2, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.272715}
{'[0, 0, 6, 5, 5, 0, 0, 0, 8, 2, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.27262}
{'[0, 0, 6, 5, 5, 0, 0, 0, 8, 2, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.271857}
{'[0, 0, 6, 5, 5, 0, 0, 0, 8, 2, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.269439}
{'[0, 0, 6, 5, 5, 0, 0, 0, 8, 2, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.265927}
{'[0, 0, 6, 5, 5, 0, 0, 0, 8, 2, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.270911}
{'[0, 0, 6, 5, 5, 0, 0, 0, 8, 2, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.276442}
{'[0, 0, 6, 5, 5, 0, 0, 0, 8, 2, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.276779}
{'[0, 0, 6, 5, 5, 0, 0, 0, 8, 2, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.276651}
{'[0, 0, 6, 5, 5, 0, 0, 0, 8, 2, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.272609}
{'[0, 0, 6, 5, 5, 0, 0, 0, 8, 2, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.272944}
{'[0, 0, 6, 5, 5, 0, 0, 0, 8, 2, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.270821}
{'[0, 0, 6, 5, 5, 0, 0, 0, 8, 2, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.272195}
{'[0, 0, 6, 5, 5, 0, 0, 0, 8, 2, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.271417}
{'[0, 0, 6, 5, 5, 0, 0, 0, 8, 2, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.273286}

out:
 ["{'[0, 0, 6, 5, 5, 0, 0, 0, 8, 2, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.294221}", "{'[0, 0, 6, 5, 5, 0, 0, 0, 8, 2, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.269438}", "{'[0, 0, 6, 5, 5, 0, 0, 0, 8, 2, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.270641}", "{'[0, 0, 6, 5, 5, 0, 0, 0, 8, 2, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.272391}", "{'[0, 0, 6, 5, 5, 0, 0, 0, 8, 2, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.271256}", "{'[0, 0, 6, 5, 5, 0, 0, 0, 8, 2, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.271026}", "{'[0, 0, 6, 5, 5, 0, 0, 0, 8, 2, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.273124}", "{'[0, 0, 6, 5, 5, 0, 0, 0, 8, 2, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.273285}", "{'[0, 0, 6, 5, 5, 0, 0, 0, 8, 2, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.277034}", "{'[0, 0, 6, 5, 5, 0, 0, 0, 8, 2, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.276614}", "{'[0, 0, 6, 5, 5, 0, 0, 0, 8, 2, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.277255}", "{'[0, 0, 6, 5, 5, 0, 0, 0, 8, 2, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.274833}", "{'[0, 0, 6, 5, 5, 0, 0, 0, 8, 2, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.272173}", "{'[0, 0, 6, 5, 5, 0, 0, 0, 8, 2, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.272798}", "{'[0, 0, 6, 5, 5, 0, 0, 0, 8, 2, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.273404}", "{'[0, 0, 6, 5, 5, 0, 0, 0, 8, 2, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.272715}", "{'[0, 0, 6, 5, 5, 0, 0, 0, 8, 2, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.27262}", "{'[0, 0, 6, 5, 5, 0, 0, 0, 8, 2, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.271857}", "{'[0, 0, 6, 5, 5, 0, 0, 0, 8, 2, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.269439}", "{'[0, 0, 6, 5, 5, 0, 0, 0, 8, 2, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.265927}", "{'[0, 0, 6, 5, 5, 0, 0, 0, 8, 2, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.270911}", "{'[0, 0, 6, 5, 5, 0, 0, 0, 8, 2, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.276442}", "{'[0, 0, 6, 5, 5, 0, 0, 0, 8, 2, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.276779}", "{'[0, 0, 6, 5, 5, 0, 0, 0, 8, 2, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.276651}", "{'[0, 0, 6, 5, 5, 0, 0, 0, 8, 2, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.272609}", "{'[0, 0, 6, 5, 5, 0, 0, 0, 8, 2, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.272944}", "{'[0, 0, 6, 5, 5, 0, 0, 0, 8, 2, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.270821}", "{'[0, 0, 6, 5, 5, 0, 0, 0, 8, 2, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.272195}", "{'[0, 0, 6, 5, 5, 0, 0, 0, 8, 2, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.271417}", "{'[0, 0, 6, 5, 5, 0, 0, 0, 8, 2, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.273286}"]
returning from 'run': {'[0, 0, 6, 5, 5, 0, 0, 0, 8, 2, 26, 0, 2, 0, 0, 0, 0, 0]': ([0.294221, 0.269438, 0.270641, 0.272391, 0.271256, 0.271026, 0.273124, 0.273285, 0.277034, 0.276614, 0.277255, 0.274833, 0.272173, 0.272798, 0.273404, 0.272715, 0.27262, 0.271857, 0.269439, 0.265927, 0.270911, 0.276442, 0.276779, 0.276651, 0.272609, 0.272944, 0.270821, 0.272195, 0.271417, 0.273286], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 6, 5, 5, 0, 0, 0, 8, 2, 26, 0, 2, 0, 0, 0, 0, 0]': ([0.294221, 0.269438, 0.270641, 0.272391, 0.271256, 0.271026, 0.273124, 0.273285, 0.277034, 0.276614, 0.277255, 0.274833, 0.272173, 0.272798, 0.273404, 0.272715, 0.27262, 0.271857, 0.269439, 0.265927, 0.270911, 0.276442, 0.276779, 0.276651, 0.272609, 0.272944, 0.270821, 0.272195, 0.271417, 0.273286], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	6
        Additions: 		1688
        Multiplications: 	720
        Divisions: 		0
        Logical: 		0
        Reads: 			3303
        Writes: 		569
        Comparisons:		25
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest10.exe __orio_perftest10.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest10.exe  
Program Test Output: 
{'[1, 1, 6, 1, 3, 6, 0, 1, 0, 0, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.104786}
{'[1, 1, 6, 1, 3, 6, 0, 1, 0, 0, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.107171}
{'[1, 1, 6, 1, 3, 6, 0, 1, 0, 0, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.106862}
{'[1, 1, 6, 1, 3, 6, 0, 1, 0, 0, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.106822}
{'[1, 1, 6, 1, 3, 6, 0, 1, 0, 0, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.106779}
{'[1, 1, 6, 1, 3, 6, 0, 1, 0, 0, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.106832}
{'[1, 1, 6, 1, 3, 6, 0, 1, 0, 0, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.106921}
{'[1, 1, 6, 1, 3, 6, 0, 1, 0, 0, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.106855}
{'[1, 1, 6, 1, 3, 6, 0, 1, 0, 0, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.106703}
{'[1, 1, 6, 1, 3, 6, 0, 1, 0, 0, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.106823}
{'[1, 1, 6, 1, 3, 6, 0, 1, 0, 0, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.106794}
{'[1, 1, 6, 1, 3, 6, 0, 1, 0, 0, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.106866}
{'[1, 1, 6, 1, 3, 6, 0, 1, 0, 0, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.106989}
{'[1, 1, 6, 1, 3, 6, 0, 1, 0, 0, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.106757}
{'[1, 1, 6, 1, 3, 6, 0, 1, 0, 0, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.107139}
{'[1, 1, 6, 1, 3, 6, 0, 1, 0, 0, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.106669}
{'[1, 1, 6, 1, 3, 6, 0, 1, 0, 0, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.106845}
{'[1, 1, 6, 1, 3, 6, 0, 1, 0, 0, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.106777}
{'[1, 1, 6, 1, 3, 6, 0, 1, 0, 0, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.106839}
{'[1, 1, 6, 1, 3, 6, 0, 1, 0, 0, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.106731}
{'[1, 1, 6, 1, 3, 6, 0, 1, 0, 0, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.10676}
{'[1, 1, 6, 1, 3, 6, 0, 1, 0, 0, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.107004}
{'[1, 1, 6, 1, 3, 6, 0, 1, 0, 0, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.106953}
{'[1, 1, 6, 1, 3, 6, 0, 1, 0, 0, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.10683}
{'[1, 1, 6, 1, 3, 6, 0, 1, 0, 0, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.106829}
{'[1, 1, 6, 1, 3, 6, 0, 1, 0, 0, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.106935}
{'[1, 1, 6, 1, 3, 6, 0, 1, 0, 0, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.106732}
{'[1, 1, 6, 1, 3, 6, 0, 1, 0, 0, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.106851}
{'[1, 1, 6, 1, 3, 6, 0, 1, 0, 0, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.106852}
{'[1, 1, 6, 1, 3, 6, 0, 1, 0, 0, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.106729}

out:
 ["{'[1, 1, 6, 1, 3, 6, 0, 1, 0, 0, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.104786}", "{'[1, 1, 6, 1, 3, 6, 0, 1, 0, 0, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.107171}", "{'[1, 1, 6, 1, 3, 6, 0, 1, 0, 0, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.106862}", "{'[1, 1, 6, 1, 3, 6, 0, 1, 0, 0, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.106822}", "{'[1, 1, 6, 1, 3, 6, 0, 1, 0, 0, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.106779}", "{'[1, 1, 6, 1, 3, 6, 0, 1, 0, 0, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.106832}", "{'[1, 1, 6, 1, 3, 6, 0, 1, 0, 0, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.106921}", "{'[1, 1, 6, 1, 3, 6, 0, 1, 0, 0, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.106855}", "{'[1, 1, 6, 1, 3, 6, 0, 1, 0, 0, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.106703}", "{'[1, 1, 6, 1, 3, 6, 0, 1, 0, 0, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.106823}", "{'[1, 1, 6, 1, 3, 6, 0, 1, 0, 0, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.106794}", "{'[1, 1, 6, 1, 3, 6, 0, 1, 0, 0, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.106866}", "{'[1, 1, 6, 1, 3, 6, 0, 1, 0, 0, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.106989}", "{'[1, 1, 6, 1, 3, 6, 0, 1, 0, 0, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.106757}", "{'[1, 1, 6, 1, 3, 6, 0, 1, 0, 0, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.107139}", "{'[1, 1, 6, 1, 3, 6, 0, 1, 0, 0, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.106669}", "{'[1, 1, 6, 1, 3, 6, 0, 1, 0, 0, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.106845}", "{'[1, 1, 6, 1, 3, 6, 0, 1, 0, 0, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.106777}", "{'[1, 1, 6, 1, 3, 6, 0, 1, 0, 0, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.106839}", "{'[1, 1, 6, 1, 3, 6, 0, 1, 0, 0, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.106731}", "{'[1, 1, 6, 1, 3, 6, 0, 1, 0, 0, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.10676}", "{'[1, 1, 6, 1, 3, 6, 0, 1, 0, 0, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.107004}", "{'[1, 1, 6, 1, 3, 6, 0, 1, 0, 0, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.106953}", "{'[1, 1, 6, 1, 3, 6, 0, 1, 0, 0, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.10683}", "{'[1, 1, 6, 1, 3, 6, 0, 1, 0, 0, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.106829}", "{'[1, 1, 6, 1, 3, 6, 0, 1, 0, 0, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.106935}", "{'[1, 1, 6, 1, 3, 6, 0, 1, 0, 0, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.106732}", "{'[1, 1, 6, 1, 3, 6, 0, 1, 0, 0, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.106851}", "{'[1, 1, 6, 1, 3, 6, 0, 1, 0, 0, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.106852}", "{'[1, 1, 6, 1, 3, 6, 0, 1, 0, 0, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.106729}"]
returning from 'run': {'[1, 1, 6, 1, 3, 6, 0, 1, 0, 0, 0, 29, 1, 1, 0, 1, 1, 0]': ([0.104786, 0.107171, 0.106862, 0.106822, 0.106779, 0.106832, 0.106921, 0.106855, 0.106703, 0.106823, 0.106794, 0.106866, 0.106989, 0.106757, 0.107139, 0.106669, 0.106845, 0.106777, 0.106839, 0.106731, 0.10676, 0.107004, 0.106953, 0.10683, 0.106829, 0.106935, 0.106732, 0.106851, 0.106852, 0.106729], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 1, 6, 1, 3, 6, 0, 1, 0, 0, 0, 29, 1, 1, 0, 1, 1, 0]': ([0.104786, 0.107171, 0.106862, 0.106822, 0.106779, 0.106832, 0.106921, 0.106855, 0.106703, 0.106823, 0.106794, 0.106866, 0.106989, 0.106757, 0.107139, 0.106669, 0.106845, 0.106777, 0.106839, 0.106731, 0.10676, 0.107004, 0.106953, 0.10683, 0.106829, 0.106935, 0.106732, 0.106851, 0.106852, 0.106729], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	40
        Max loop nest depth: 	6
        Additions: 		2066
        Multiplications: 	720
        Divisions: 		0
        Logical: 		0
        Reads: 			4522
        Writes: 		1009
        Comparisons:		40
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest11.exe __orio_perftest11.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest11.exe  
Program Test Output: 
{'[3, 5, 1, 2, 5, 0, 1, 0, 28, 6, 0, 27, 0, 1, 1, 1, 1, 0]' : 0.129441}
{'[3, 5, 1, 2, 5, 0, 1, 0, 28, 6, 0, 27, 0, 1, 1, 1, 1, 0]' : 0.133464}
{'[3, 5, 1, 2, 5, 0, 1, 0, 28, 6, 0, 27, 0, 1, 1, 1, 1, 0]' : 0.133556}
{'[3, 5, 1, 2, 5, 0, 1, 0, 28, 6, 0, 27, 0, 1, 1, 1, 1, 0]' : 0.133346}
{'[3, 5, 1, 2, 5, 0, 1, 0, 28, 6, 0, 27, 0, 1, 1, 1, 1, 0]' : 0.116828}
{'[3, 5, 1, 2, 5, 0, 1, 0, 28, 6, 0, 27, 0, 1, 1, 1, 1, 0]' : 0.112783}
{'[3, 5, 1, 2, 5, 0, 1, 0, 28, 6, 0, 27, 0, 1, 1, 1, 1, 0]' : 0.112572}
{'[3, 5, 1, 2, 5, 0, 1, 0, 28, 6, 0, 27, 0, 1, 1, 1, 1, 0]' : 0.112475}
{'[3, 5, 1, 2, 5, 0, 1, 0, 28, 6, 0, 27, 0, 1, 1, 1, 1, 0]' : 0.112568}
{'[3, 5, 1, 2, 5, 0, 1, 0, 28, 6, 0, 27, 0, 1, 1, 1, 1, 0]' : 0.11259}
{'[3, 5, 1, 2, 5, 0, 1, 0, 28, 6, 0, 27, 0, 1, 1, 1, 1, 0]' : 0.112649}
{'[3, 5, 1, 2, 5, 0, 1, 0, 28, 6, 0, 27, 0, 1, 1, 1, 1, 0]' : 0.112756}
{'[3, 5, 1, 2, 5, 0, 1, 0, 28, 6, 0, 27, 0, 1, 1, 1, 1, 0]' : 0.112512}
{'[3, 5, 1, 2, 5, 0, 1, 0, 28, 6, 0, 27, 0, 1, 1, 1, 1, 0]' : 0.113005}
{'[3, 5, 1, 2, 5, 0, 1, 0, 28, 6, 0, 27, 0, 1, 1, 1, 1, 0]' : 0.112564}
{'[3, 5, 1, 2, 5, 0, 1, 0, 28, 6, 0, 27, 0, 1, 1, 1, 1, 0]' : 0.112505}
{'[3, 5, 1, 2, 5, 0, 1, 0, 28, 6, 0, 27, 0, 1, 1, 1, 1, 0]' : 0.112784}
{'[3, 5, 1, 2, 5, 0, 1, 0, 28, 6, 0, 27, 0, 1, 1, 1, 1, 0]' : 0.112511}
{'[3, 5, 1, 2, 5, 0, 1, 0, 28, 6, 0, 27, 0, 1, 1, 1, 1, 0]' : 0.112789}
{'[3, 5, 1, 2, 5, 0, 1, 0, 28, 6, 0, 27, 0, 1, 1, 1, 1, 0]' : 0.112615}
{'[3, 5, 1, 2, 5, 0, 1, 0, 28, 6, 0, 27, 0, 1, 1, 1, 1, 0]' : 0.112621}
{'[3, 5, 1, 2, 5, 0, 1, 0, 28, 6, 0, 27, 0, 1, 1, 1, 1, 0]' : 0.112549}
{'[3, 5, 1, 2, 5, 0, 1, 0, 28, 6, 0, 27, 0, 1, 1, 1, 1, 0]' : 0.112753}
{'[3, 5, 1, 2, 5, 0, 1, 0, 28, 6, 0, 27, 0, 1, 1, 1, 1, 0]' : 0.112665}
{'[3, 5, 1, 2, 5, 0, 1, 0, 28, 6, 0, 27, 0, 1, 1, 1, 1, 0]' : 0.112478}
{'[3, 5, 1, 2, 5, 0, 1, 0, 28, 6, 0, 27, 0, 1, 1, 1, 1, 0]' : 0.112539}
{'[3, 5, 1, 2, 5, 0, 1, 0, 28, 6, 0, 27, 0, 1, 1, 1, 1, 0]' : 0.112545}
{'[3, 5, 1, 2, 5, 0, 1, 0, 28, 6, 0, 27, 0, 1, 1, 1, 1, 0]' : 0.112607}
{'[3, 5, 1, 2, 5, 0, 1, 0, 28, 6, 0, 27, 0, 1, 1, 1, 1, 0]' : 0.112709}
{'[3, 5, 1, 2, 5, 0, 1, 0, 28, 6, 0, 27, 0, 1, 1, 1, 1, 0]' : 0.11279}

out:
 ["{'[3, 5, 1, 2, 5, 0, 1, 0, 28, 6, 0, 27, 0, 1, 1, 1, 1, 0]' : 0.129441}", "{'[3, 5, 1, 2, 5, 0, 1, 0, 28, 6, 0, 27, 0, 1, 1, 1, 1, 0]' : 0.133464}", "{'[3, 5, 1, 2, 5, 0, 1, 0, 28, 6, 0, 27, 0, 1, 1, 1, 1, 0]' : 0.133556}", "{'[3, 5, 1, 2, 5, 0, 1, 0, 28, 6, 0, 27, 0, 1, 1, 1, 1, 0]' : 0.133346}", "{'[3, 5, 1, 2, 5, 0, 1, 0, 28, 6, 0, 27, 0, 1, 1, 1, 1, 0]' : 0.116828}", "{'[3, 5, 1, 2, 5, 0, 1, 0, 28, 6, 0, 27, 0, 1, 1, 1, 1, 0]' : 0.112783}", "{'[3, 5, 1, 2, 5, 0, 1, 0, 28, 6, 0, 27, 0, 1, 1, 1, 1, 0]' : 0.112572}", "{'[3, 5, 1, 2, 5, 0, 1, 0, 28, 6, 0, 27, 0, 1, 1, 1, 1, 0]' : 0.112475}", "{'[3, 5, 1, 2, 5, 0, 1, 0, 28, 6, 0, 27, 0, 1, 1, 1, 1, 0]' : 0.112568}", "{'[3, 5, 1, 2, 5, 0, 1, 0, 28, 6, 0, 27, 0, 1, 1, 1, 1, 0]' : 0.11259}", "{'[3, 5, 1, 2, 5, 0, 1, 0, 28, 6, 0, 27, 0, 1, 1, 1, 1, 0]' : 0.112649}", "{'[3, 5, 1, 2, 5, 0, 1, 0, 28, 6, 0, 27, 0, 1, 1, 1, 1, 0]' : 0.112756}", "{'[3, 5, 1, 2, 5, 0, 1, 0, 28, 6, 0, 27, 0, 1, 1, 1, 1, 0]' : 0.112512}", "{'[3, 5, 1, 2, 5, 0, 1, 0, 28, 6, 0, 27, 0, 1, 1, 1, 1, 0]' : 0.113005}", "{'[3, 5, 1, 2, 5, 0, 1, 0, 28, 6, 0, 27, 0, 1, 1, 1, 1, 0]' : 0.112564}", "{'[3, 5, 1, 2, 5, 0, 1, 0, 28, 6, 0, 27, 0, 1, 1, 1, 1, 0]' : 0.112505}", "{'[3, 5, 1, 2, 5, 0, 1, 0, 28, 6, 0, 27, 0, 1, 1, 1, 1, 0]' : 0.112784}", "{'[3, 5, 1, 2, 5, 0, 1, 0, 28, 6, 0, 27, 0, 1, 1, 1, 1, 0]' : 0.112511}", "{'[3, 5, 1, 2, 5, 0, 1, 0, 28, 6, 0, 27, 0, 1, 1, 1, 1, 0]' : 0.112789}", "{'[3, 5, 1, 2, 5, 0, 1, 0, 28, 6, 0, 27, 0, 1, 1, 1, 1, 0]' : 0.112615}", "{'[3, 5, 1, 2, 5, 0, 1, 0, 28, 6, 0, 27, 0, 1, 1, 1, 1, 0]' : 0.112621}", "{'[3, 5, 1, 2, 5, 0, 1, 0, 28, 6, 0, 27, 0, 1, 1, 1, 1, 0]' : 0.112549}", "{'[3, 5, 1, 2, 5, 0, 1, 0, 28, 6, 0, 27, 0, 1, 1, 1, 1, 0]' : 0.112753}", "{'[3, 5, 1, 2, 5, 0, 1, 0, 28, 6, 0, 27, 0, 1, 1, 1, 1, 0]' : 0.112665}", "{'[3, 5, 1, 2, 5, 0, 1, 0, 28, 6, 0, 27, 0, 1, 1, 1, 1, 0]' : 0.112478}", "{'[3, 5, 1, 2, 5, 0, 1, 0, 28, 6, 0, 27, 0, 1, 1, 1, 1, 0]' : 0.112539}", "{'[3, 5, 1, 2, 5, 0, 1, 0, 28, 6, 0, 27, 0, 1, 1, 1, 1, 0]' : 0.112545}", "{'[3, 5, 1, 2, 5, 0, 1, 0, 28, 6, 0, 27, 0, 1, 1, 1, 1, 0]' : 0.112607}", "{'[3, 5, 1, 2, 5, 0, 1, 0, 28, 6, 0, 27, 0, 1, 1, 1, 1, 0]' : 0.112709}", "{'[3, 5, 1, 2, 5, 0, 1, 0, 28, 6, 0, 27, 0, 1, 1, 1, 1, 0]' : 0.11279}"]
returning from 'run': {'[3, 5, 1, 2, 5, 0, 1, 0, 28, 6, 0, 27, 0, 1, 1, 1, 1, 0]': ([0.129441, 0.133464, 0.133556, 0.133346, 0.116828, 0.112783, 0.112572, 0.112475, 0.112568, 0.11259, 0.112649, 0.112756, 0.112512, 0.113005, 0.112564, 0.112505, 0.112784, 0.112511, 0.112789, 0.112615, 0.112621, 0.112549, 0.112753, 0.112665, 0.112478, 0.112539, 0.112545, 0.112607, 0.112709, 0.11279], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 5, 1, 2, 5, 0, 1, 0, 28, 6, 0, 27, 0, 1, 1, 1, 1, 0]': ([0.129441, 0.133464, 0.133556, 0.133346, 0.116828, 0.112783, 0.112572, 0.112475, 0.112568, 0.11259, 0.112649, 0.112756, 0.112512, 0.113005, 0.112564, 0.112505, 0.112784, 0.112511, 0.112789, 0.112615, 0.112621, 0.112549, 0.112753, 0.112665, 0.112478, 0.112539, 0.112545, 0.112607, 0.112709, 0.11279], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	72
        Max loop nest depth: 	5
        Additions: 		2086
        Multiplications: 	768
        Divisions: 		0
        Logical: 		0
        Reads: 			3944
        Writes: 		689
        Comparisons:		72
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest12.exe __orio_perftest12.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest12.exe  
Program Test Output: 
{'[0, 1, 1, 3, 4, 2, 1, 0, 16, 14, 5, 0, 2, 0, 0, 1, 0, 0]' : 0.197095}
{'[0, 1, 1, 3, 4, 2, 1, 0, 16, 14, 5, 0, 2, 0, 0, 1, 0, 0]' : 0.194938}
{'[0, 1, 1, 3, 4, 2, 1, 0, 16, 14, 5, 0, 2, 0, 0, 1, 0, 0]' : 0.195933}
{'[0, 1, 1, 3, 4, 2, 1, 0, 16, 14, 5, 0, 2, 0, 0, 1, 0, 0]' : 0.196408}
{'[0, 1, 1, 3, 4, 2, 1, 0, 16, 14, 5, 0, 2, 0, 0, 1, 0, 0]' : 0.19765}
{'[0, 1, 1, 3, 4, 2, 1, 0, 16, 14, 5, 0, 2, 0, 0, 1, 0, 0]' : 0.196393}
{'[0, 1, 1, 3, 4, 2, 1, 0, 16, 14, 5, 0, 2, 0, 0, 1, 0, 0]' : 0.195741}
{'[0, 1, 1, 3, 4, 2, 1, 0, 16, 14, 5, 0, 2, 0, 0, 1, 0, 0]' : 0.196358}
{'[0, 1, 1, 3, 4, 2, 1, 0, 16, 14, 5, 0, 2, 0, 0, 1, 0, 0]' : 0.196086}
{'[0, 1, 1, 3, 4, 2, 1, 0, 16, 14, 5, 0, 2, 0, 0, 1, 0, 0]' : 0.198605}
{'[0, 1, 1, 3, 4, 2, 1, 0, 16, 14, 5, 0, 2, 0, 0, 1, 0, 0]' : 0.197518}
{'[0, 1, 1, 3, 4, 2, 1, 0, 16, 14, 5, 0, 2, 0, 0, 1, 0, 0]' : 0.193619}
{'[0, 1, 1, 3, 4, 2, 1, 0, 16, 14, 5, 0, 2, 0, 0, 1, 0, 0]' : 0.196226}
{'[0, 1, 1, 3, 4, 2, 1, 0, 16, 14, 5, 0, 2, 0, 0, 1, 0, 0]' : 0.196161}
{'[0, 1, 1, 3, 4, 2, 1, 0, 16, 14, 5, 0, 2, 0, 0, 1, 0, 0]' : 0.197252}
{'[0, 1, 1, 3, 4, 2, 1, 0, 16, 14, 5, 0, 2, 0, 0, 1, 0, 0]' : 0.196258}
{'[0, 1, 1, 3, 4, 2, 1, 0, 16, 14, 5, 0, 2, 0, 0, 1, 0, 0]' : 0.197497}
{'[0, 1, 1, 3, 4, 2, 1, 0, 16, 14, 5, 0, 2, 0, 0, 1, 0, 0]' : 0.195279}
{'[0, 1, 1, 3, 4, 2, 1, 0, 16, 14, 5, 0, 2, 0, 0, 1, 0, 0]' : 0.195933}
{'[0, 1, 1, 3, 4, 2, 1, 0, 16, 14, 5, 0, 2, 0, 0, 1, 0, 0]' : 0.197391}
{'[0, 1, 1, 3, 4, 2, 1, 0, 16, 14, 5, 0, 2, 0, 0, 1, 0, 0]' : 0.195601}
{'[0, 1, 1, 3, 4, 2, 1, 0, 16, 14, 5, 0, 2, 0, 0, 1, 0, 0]' : 0.195227}
{'[0, 1, 1, 3, 4, 2, 1, 0, 16, 14, 5, 0, 2, 0, 0, 1, 0, 0]' : 0.198244}
{'[0, 1, 1, 3, 4, 2, 1, 0, 16, 14, 5, 0, 2, 0, 0, 1, 0, 0]' : 0.198688}
{'[0, 1, 1, 3, 4, 2, 1, 0, 16, 14, 5, 0, 2, 0, 0, 1, 0, 0]' : 0.196195}
{'[0, 1, 1, 3, 4, 2, 1, 0, 16, 14, 5, 0, 2, 0, 0, 1, 0, 0]' : 0.19753}
{'[0, 1, 1, 3, 4, 2, 1, 0, 16, 14, 5, 0, 2, 0, 0, 1, 0, 0]' : 0.195937}
{'[0, 1, 1, 3, 4, 2, 1, 0, 16, 14, 5, 0, 2, 0, 0, 1, 0, 0]' : 0.19533}
{'[0, 1, 1, 3, 4, 2, 1, 0, 16, 14, 5, 0, 2, 0, 0, 1, 0, 0]' : 0.196152}
{'[0, 1, 1, 3, 4, 2, 1, 0, 16, 14, 5, 0, 2, 0, 0, 1, 0, 0]' : 0.197062}

out:
 ["{'[0, 1, 1, 3, 4, 2, 1, 0, 16, 14, 5, 0, 2, 0, 0, 1, 0, 0]' : 0.197095}", "{'[0, 1, 1, 3, 4, 2, 1, 0, 16, 14, 5, 0, 2, 0, 0, 1, 0, 0]' : 0.194938}", "{'[0, 1, 1, 3, 4, 2, 1, 0, 16, 14, 5, 0, 2, 0, 0, 1, 0, 0]' : 0.195933}", "{'[0, 1, 1, 3, 4, 2, 1, 0, 16, 14, 5, 0, 2, 0, 0, 1, 0, 0]' : 0.196408}", "{'[0, 1, 1, 3, 4, 2, 1, 0, 16, 14, 5, 0, 2, 0, 0, 1, 0, 0]' : 0.19765}", "{'[0, 1, 1, 3, 4, 2, 1, 0, 16, 14, 5, 0, 2, 0, 0, 1, 0, 0]' : 0.196393}", "{'[0, 1, 1, 3, 4, 2, 1, 0, 16, 14, 5, 0, 2, 0, 0, 1, 0, 0]' : 0.195741}", "{'[0, 1, 1, 3, 4, 2, 1, 0, 16, 14, 5, 0, 2, 0, 0, 1, 0, 0]' : 0.196358}", "{'[0, 1, 1, 3, 4, 2, 1, 0, 16, 14, 5, 0, 2, 0, 0, 1, 0, 0]' : 0.196086}", "{'[0, 1, 1, 3, 4, 2, 1, 0, 16, 14, 5, 0, 2, 0, 0, 1, 0, 0]' : 0.198605}", "{'[0, 1, 1, 3, 4, 2, 1, 0, 16, 14, 5, 0, 2, 0, 0, 1, 0, 0]' : 0.197518}", "{'[0, 1, 1, 3, 4, 2, 1, 0, 16, 14, 5, 0, 2, 0, 0, 1, 0, 0]' : 0.193619}", "{'[0, 1, 1, 3, 4, 2, 1, 0, 16, 14, 5, 0, 2, 0, 0, 1, 0, 0]' : 0.196226}", "{'[0, 1, 1, 3, 4, 2, 1, 0, 16, 14, 5, 0, 2, 0, 0, 1, 0, 0]' : 0.196161}", "{'[0, 1, 1, 3, 4, 2, 1, 0, 16, 14, 5, 0, 2, 0, 0, 1, 0, 0]' : 0.197252}", "{'[0, 1, 1, 3, 4, 2, 1, 0, 16, 14, 5, 0, 2, 0, 0, 1, 0, 0]' : 0.196258}", "{'[0, 1, 1, 3, 4, 2, 1, 0, 16, 14, 5, 0, 2, 0, 0, 1, 0, 0]' : 0.197497}", "{'[0, 1, 1, 3, 4, 2, 1, 0, 16, 14, 5, 0, 2, 0, 0, 1, 0, 0]' : 0.195279}", "{'[0, 1, 1, 3, 4, 2, 1, 0, 16, 14, 5, 0, 2, 0, 0, 1, 0, 0]' : 0.195933}", "{'[0, 1, 1, 3, 4, 2, 1, 0, 16, 14, 5, 0, 2, 0, 0, 1, 0, 0]' : 0.197391}", "{'[0, 1, 1, 3, 4, 2, 1, 0, 16, 14, 5, 0, 2, 0, 0, 1, 0, 0]' : 0.195601}", "{'[0, 1, 1, 3, 4, 2, 1, 0, 16, 14, 5, 0, 2, 0, 0, 1, 0, 0]' : 0.195227}", "{'[0, 1, 1, 3, 4, 2, 1, 0, 16, 14, 5, 0, 2, 0, 0, 1, 0, 0]' : 0.198244}", "{'[0, 1, 1, 3, 4, 2, 1, 0, 16, 14, 5, 0, 2, 0, 0, 1, 0, 0]' : 0.198688}", "{'[0, 1, 1, 3, 4, 2, 1, 0, 16, 14, 5, 0, 2, 0, 0, 1, 0, 0]' : 0.196195}", "{'[0, 1, 1, 3, 4, 2, 1, 0, 16, 14, 5, 0, 2, 0, 0, 1, 0, 0]' : 0.19753}", "{'[0, 1, 1, 3, 4, 2, 1, 0, 16, 14, 5, 0, 2, 0, 0, 1, 0, 0]' : 0.195937}", "{'[0, 1, 1, 3, 4, 2, 1, 0, 16, 14, 5, 0, 2, 0, 0, 1, 0, 0]' : 0.19533}", "{'[0, 1, 1, 3, 4, 2, 1, 0, 16, 14, 5, 0, 2, 0, 0, 1, 0, 0]' : 0.196152}", "{'[0, 1, 1, 3, 4, 2, 1, 0, 16, 14, 5, 0, 2, 0, 0, 1, 0, 0]' : 0.197062}"]
returning from 'run': {'[0, 1, 1, 3, 4, 2, 1, 0, 16, 14, 5, 0, 2, 0, 0, 1, 0, 0]': ([0.197095, 0.194938, 0.195933, 0.196408, 0.19765, 0.196393, 0.195741, 0.196358, 0.196086, 0.198605, 0.197518, 0.193619, 0.196226, 0.196161, 0.197252, 0.196258, 0.197497, 0.195279, 0.195933, 0.197391, 0.195601, 0.195227, 0.198244, 0.198688, 0.196195, 0.19753, 0.195937, 0.19533, 0.196152, 0.197062], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 1, 3, 4, 2, 1, 0, 16, 14, 5, 0, 2, 0, 0, 1, 0, 0]': ([0.197095, 0.194938, 0.195933, 0.196408, 0.19765, 0.196393, 0.195741, 0.196358, 0.196086, 0.198605, 0.197518, 0.193619, 0.196226, 0.196161, 0.197252, 0.196258, 0.197497, 0.195279, 0.195933, 0.197391, 0.195601, 0.195227, 0.198244, 0.198688, 0.196195, 0.19753, 0.195937, 0.19533, 0.196152, 0.197062], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		1850
        Multiplications: 	512
        Divisions: 		0
        Logical: 		0
        Reads: 			2838
        Writes: 		287
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest13.exe __orio_perftest13.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest13.exe  
Program Test Output: 
{'[0, 2, 2, 0, 6, 1, 1, 0, 0, 3, 21, 0, 1, 0, 1, 0, 1, 1]' : 0.14435}
{'[0, 2, 2, 0, 6, 1, 1, 0, 0, 3, 21, 0, 1, 0, 1, 0, 1, 1]' : 0.144301}
{'[0, 2, 2, 0, 6, 1, 1, 0, 0, 3, 21, 0, 1, 0, 1, 0, 1, 1]' : 0.144289}
{'[0, 2, 2, 0, 6, 1, 1, 0, 0, 3, 21, 0, 1, 0, 1, 0, 1, 1]' : 0.130958}
{'[0, 2, 2, 0, 6, 1, 1, 0, 0, 3, 21, 0, 1, 0, 1, 0, 1, 1]' : 0.12174}
{'[0, 2, 2, 0, 6, 1, 1, 0, 0, 3, 21, 0, 1, 0, 1, 0, 1, 1]' : 0.121795}
{'[0, 2, 2, 0, 6, 1, 1, 0, 0, 3, 21, 0, 1, 0, 1, 0, 1, 1]' : 0.121693}
{'[0, 2, 2, 0, 6, 1, 1, 0, 0, 3, 21, 0, 1, 0, 1, 0, 1, 1]' : 0.121771}
{'[0, 2, 2, 0, 6, 1, 1, 0, 0, 3, 21, 0, 1, 0, 1, 0, 1, 1]' : 0.1218}
{'[0, 2, 2, 0, 6, 1, 1, 0, 0, 3, 21, 0, 1, 0, 1, 0, 1, 1]' : 0.122096}
{'[0, 2, 2, 0, 6, 1, 1, 0, 0, 3, 21, 0, 1, 0, 1, 0, 1, 1]' : 0.121977}
{'[0, 2, 2, 0, 6, 1, 1, 0, 0, 3, 21, 0, 1, 0, 1, 0, 1, 1]' : 0.122175}
{'[0, 2, 2, 0, 6, 1, 1, 0, 0, 3, 21, 0, 1, 0, 1, 0, 1, 1]' : 0.122064}
{'[0, 2, 2, 0, 6, 1, 1, 0, 0, 3, 21, 0, 1, 0, 1, 0, 1, 1]' : 0.12172}
{'[0, 2, 2, 0, 6, 1, 1, 0, 0, 3, 21, 0, 1, 0, 1, 0, 1, 1]' : 0.121799}
{'[0, 2, 2, 0, 6, 1, 1, 0, 0, 3, 21, 0, 1, 0, 1, 0, 1, 1]' : 0.121808}
{'[0, 2, 2, 0, 6, 1, 1, 0, 0, 3, 21, 0, 1, 0, 1, 0, 1, 1]' : 0.121777}
{'[0, 2, 2, 0, 6, 1, 1, 0, 0, 3, 21, 0, 1, 0, 1, 0, 1, 1]' : 0.122182}
{'[0, 2, 2, 0, 6, 1, 1, 0, 0, 3, 21, 0, 1, 0, 1, 0, 1, 1]' : 0.121884}
{'[0, 2, 2, 0, 6, 1, 1, 0, 0, 3, 21, 0, 1, 0, 1, 0, 1, 1]' : 0.122018}
{'[0, 2, 2, 0, 6, 1, 1, 0, 0, 3, 21, 0, 1, 0, 1, 0, 1, 1]' : 0.121948}
{'[0, 2, 2, 0, 6, 1, 1, 0, 0, 3, 21, 0, 1, 0, 1, 0, 1, 1]' : 0.12195}
{'[0, 2, 2, 0, 6, 1, 1, 0, 0, 3, 21, 0, 1, 0, 1, 0, 1, 1]' : 0.122178}
{'[0, 2, 2, 0, 6, 1, 1, 0, 0, 3, 21, 0, 1, 0, 1, 0, 1, 1]' : 0.121792}
{'[0, 2, 2, 0, 6, 1, 1, 0, 0, 3, 21, 0, 1, 0, 1, 0, 1, 1]' : 0.121804}
{'[0, 2, 2, 0, 6, 1, 1, 0, 0, 3, 21, 0, 1, 0, 1, 0, 1, 1]' : 0.121792}
{'[0, 2, 2, 0, 6, 1, 1, 0, 0, 3, 21, 0, 1, 0, 1, 0, 1, 1]' : 0.121863}
{'[0, 2, 2, 0, 6, 1, 1, 0, 0, 3, 21, 0, 1, 0, 1, 0, 1, 1]' : 0.122252}
{'[0, 2, 2, 0, 6, 1, 1, 0, 0, 3, 21, 0, 1, 0, 1, 0, 1, 1]' : 0.122028}
{'[0, 2, 2, 0, 6, 1, 1, 0, 0, 3, 21, 0, 1, 0, 1, 0, 1, 1]' : 0.121894}

out:
 ["{'[0, 2, 2, 0, 6, 1, 1, 0, 0, 3, 21, 0, 1, 0, 1, 0, 1, 1]' : 0.14435}", "{'[0, 2, 2, 0, 6, 1, 1, 0, 0, 3, 21, 0, 1, 0, 1, 0, 1, 1]' : 0.144301}", "{'[0, 2, 2, 0, 6, 1, 1, 0, 0, 3, 21, 0, 1, 0, 1, 0, 1, 1]' : 0.144289}", "{'[0, 2, 2, 0, 6, 1, 1, 0, 0, 3, 21, 0, 1, 0, 1, 0, 1, 1]' : 0.130958}", "{'[0, 2, 2, 0, 6, 1, 1, 0, 0, 3, 21, 0, 1, 0, 1, 0, 1, 1]' : 0.12174}", "{'[0, 2, 2, 0, 6, 1, 1, 0, 0, 3, 21, 0, 1, 0, 1, 0, 1, 1]' : 0.121795}", "{'[0, 2, 2, 0, 6, 1, 1, 0, 0, 3, 21, 0, 1, 0, 1, 0, 1, 1]' : 0.121693}", "{'[0, 2, 2, 0, 6, 1, 1, 0, 0, 3, 21, 0, 1, 0, 1, 0, 1, 1]' : 0.121771}", "{'[0, 2, 2, 0, 6, 1, 1, 0, 0, 3, 21, 0, 1, 0, 1, 0, 1, 1]' : 0.1218}", "{'[0, 2, 2, 0, 6, 1, 1, 0, 0, 3, 21, 0, 1, 0, 1, 0, 1, 1]' : 0.122096}", "{'[0, 2, 2, 0, 6, 1, 1, 0, 0, 3, 21, 0, 1, 0, 1, 0, 1, 1]' : 0.121977}", "{'[0, 2, 2, 0, 6, 1, 1, 0, 0, 3, 21, 0, 1, 0, 1, 0, 1, 1]' : 0.122175}", "{'[0, 2, 2, 0, 6, 1, 1, 0, 0, 3, 21, 0, 1, 0, 1, 0, 1, 1]' : 0.122064}", "{'[0, 2, 2, 0, 6, 1, 1, 0, 0, 3, 21, 0, 1, 0, 1, 0, 1, 1]' : 0.12172}", "{'[0, 2, 2, 0, 6, 1, 1, 0, 0, 3, 21, 0, 1, 0, 1, 0, 1, 1]' : 0.121799}", "{'[0, 2, 2, 0, 6, 1, 1, 0, 0, 3, 21, 0, 1, 0, 1, 0, 1, 1]' : 0.121808}", "{'[0, 2, 2, 0, 6, 1, 1, 0, 0, 3, 21, 0, 1, 0, 1, 0, 1, 1]' : 0.121777}", "{'[0, 2, 2, 0, 6, 1, 1, 0, 0, 3, 21, 0, 1, 0, 1, 0, 1, 1]' : 0.122182}", "{'[0, 2, 2, 0, 6, 1, 1, 0, 0, 3, 21, 0, 1, 0, 1, 0, 1, 1]' : 0.121884}", "{'[0, 2, 2, 0, 6, 1, 1, 0, 0, 3, 21, 0, 1, 0, 1, 0, 1, 1]' : 0.122018}", "{'[0, 2, 2, 0, 6, 1, 1, 0, 0, 3, 21, 0, 1, 0, 1, 0, 1, 1]' : 0.121948}", "{'[0, 2, 2, 0, 6, 1, 1, 0, 0, 3, 21, 0, 1, 0, 1, 0, 1, 1]' : 0.12195}", "{'[0, 2, 2, 0, 6, 1, 1, 0, 0, 3, 21, 0, 1, 0, 1, 0, 1, 1]' : 0.122178}", "{'[0, 2, 2, 0, 6, 1, 1, 0, 0, 3, 21, 0, 1, 0, 1, 0, 1, 1]' : 0.121792}", "{'[0, 2, 2, 0, 6, 1, 1, 0, 0, 3, 21, 0, 1, 0, 1, 0, 1, 1]' : 0.121804}", "{'[0, 2, 2, 0, 6, 1, 1, 0, 0, 3, 21, 0, 1, 0, 1, 0, 1, 1]' : 0.121792}", "{'[0, 2, 2, 0, 6, 1, 1, 0, 0, 3, 21, 0, 1, 0, 1, 0, 1, 1]' : 0.121863}", "{'[0, 2, 2, 0, 6, 1, 1, 0, 0, 3, 21, 0, 1, 0, 1, 0, 1, 1]' : 0.122252}", "{'[0, 2, 2, 0, 6, 1, 1, 0, 0, 3, 21, 0, 1, 0, 1, 0, 1, 1]' : 0.122028}", "{'[0, 2, 2, 0, 6, 1, 1, 0, 0, 3, 21, 0, 1, 0, 1, 0, 1, 1]' : 0.121894}"]
returning from 'run': {'[0, 2, 2, 0, 6, 1, 1, 0, 0, 3, 21, 0, 1, 0, 1, 0, 1, 1]': ([0.14435, 0.144301, 0.144289, 0.130958, 0.12174, 0.121795, 0.121693, 0.121771, 0.1218, 0.122096, 0.121977, 0.122175, 0.122064, 0.12172, 0.121799, 0.121808, 0.121777, 0.122182, 0.121884, 0.122018, 0.121948, 0.12195, 0.122178, 0.121792, 0.121804, 0.121792, 0.121863, 0.122252, 0.122028, 0.121894], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 2, 0, 6, 1, 1, 0, 0, 3, 21, 0, 1, 0, 1, 0, 1, 1]': ([0.14435, 0.144301, 0.144289, 0.130958, 0.12174, 0.121795, 0.121693, 0.121771, 0.1218, 0.122096, 0.121977, 0.122175, 0.122064, 0.12172, 0.121799, 0.121808, 0.121777, 0.122182, 0.121884, 0.122018, 0.121948, 0.12195, 0.122178, 0.121792, 0.121804, 0.121792, 0.121863, 0.122252, 0.122028, 0.121894], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	76
        Max loop nest depth: 	5
        Additions: 		3118
        Multiplications: 	1320
        Divisions: 		0
        Logical: 		0
        Reads: 			6112
        Writes: 		1066
        Comparisons:		76
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest14.exe __orio_perftest14.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest14.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest14.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest14.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest14.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = jjj
Code stats:
        Number of loops: 	169
        Max loop nest depth: 	6
        Additions: 		17781
        Multiplications: 	3904
        Divisions: 		0
        Logical: 		0
        Reads: 			25410
        Writes: 		2533
        Comparisons:		169
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest15.exe __orio_perftest15.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest15.exe  
Program Test Output: 
{'[4, 4, 2, 4, 2, 2, 1, 1, 28, 27, 0, 29, 2, 0, 0, 0, 0, 1]' : 0.21493}
{'[4, 4, 2, 4, 2, 2, 1, 1, 28, 27, 0, 29, 2, 0, 0, 0, 0, 1]' : 0.210885}
{'[4, 4, 2, 4, 2, 2, 1, 1, 28, 27, 0, 29, 2, 0, 0, 0, 0, 1]' : 0.19765}
{'[4, 4, 2, 4, 2, 2, 1, 1, 28, 27, 0, 29, 2, 0, 0, 0, 0, 1]' : 0.197854}
{'[4, 4, 2, 4, 2, 2, 1, 1, 28, 27, 0, 29, 2, 0, 0, 0, 0, 1]' : 0.19773}
{'[4, 4, 2, 4, 2, 2, 1, 1, 28, 27, 0, 29, 2, 0, 0, 0, 0, 1]' : 0.196772}
{'[4, 4, 2, 4, 2, 2, 1, 1, 28, 27, 0, 29, 2, 0, 0, 0, 0, 1]' : 0.197669}
{'[4, 4, 2, 4, 2, 2, 1, 1, 28, 27, 0, 29, 2, 0, 0, 0, 0, 1]' : 0.197754}
{'[4, 4, 2, 4, 2, 2, 1, 1, 28, 27, 0, 29, 2, 0, 0, 0, 0, 1]' : 0.198147}
{'[4, 4, 2, 4, 2, 2, 1, 1, 28, 27, 0, 29, 2, 0, 0, 0, 0, 1]' : 0.197554}
{'[4, 4, 2, 4, 2, 2, 1, 1, 28, 27, 0, 29, 2, 0, 0, 0, 0, 1]' : 0.196652}
{'[4, 4, 2, 4, 2, 2, 1, 1, 28, 27, 0, 29, 2, 0, 0, 0, 0, 1]' : 0.197217}
{'[4, 4, 2, 4, 2, 2, 1, 1, 28, 27, 0, 29, 2, 0, 0, 0, 0, 1]' : 0.197891}
{'[4, 4, 2, 4, 2, 2, 1, 1, 28, 27, 0, 29, 2, 0, 0, 0, 0, 1]' : 0.19742}
{'[4, 4, 2, 4, 2, 2, 1, 1, 28, 27, 0, 29, 2, 0, 0, 0, 0, 1]' : 0.19747}
{'[4, 4, 2, 4, 2, 2, 1, 1, 28, 27, 0, 29, 2, 0, 0, 0, 0, 1]' : 0.196948}
{'[4, 4, 2, 4, 2, 2, 1, 1, 28, 27, 0, 29, 2, 0, 0, 0, 0, 1]' : 0.192508}
{'[4, 4, 2, 4, 2, 2, 1, 1, 28, 27, 0, 29, 2, 0, 0, 0, 0, 1]' : 0.193045}
{'[4, 4, 2, 4, 2, 2, 1, 1, 28, 27, 0, 29, 2, 0, 0, 0, 0, 1]' : 0.193463}
{'[4, 4, 2, 4, 2, 2, 1, 1, 28, 27, 0, 29, 2, 0, 0, 0, 0, 1]' : 0.197833}
{'[4, 4, 2, 4, 2, 2, 1, 1, 28, 27, 0, 29, 2, 0, 0, 0, 0, 1]' : 0.197068}
{'[4, 4, 2, 4, 2, 2, 1, 1, 28, 27, 0, 29, 2, 0, 0, 0, 0, 1]' : 0.196954}
{'[4, 4, 2, 4, 2, 2, 1, 1, 28, 27, 0, 29, 2, 0, 0, 0, 0, 1]' : 0.197636}
{'[4, 4, 2, 4, 2, 2, 1, 1, 28, 27, 0, 29, 2, 0, 0, 0, 0, 1]' : 0.197775}
{'[4, 4, 2, 4, 2, 2, 1, 1, 28, 27, 0, 29, 2, 0, 0, 0, 0, 1]' : 0.198041}
{'[4, 4, 2, 4, 2, 2, 1, 1, 28, 27, 0, 29, 2, 0, 0, 0, 0, 1]' : 0.197396}
{'[4, 4, 2, 4, 2, 2, 1, 1, 28, 27, 0, 29, 2, 0, 0, 0, 0, 1]' : 0.196993}
{'[4, 4, 2, 4, 2, 2, 1, 1, 28, 27, 0, 29, 2, 0, 0, 0, 0, 1]' : 0.197899}
{'[4, 4, 2, 4, 2, 2, 1, 1, 28, 27, 0, 29, 2, 0, 0, 0, 0, 1]' : 0.198018}
{'[4, 4, 2, 4, 2, 2, 1, 1, 28, 27, 0, 29, 2, 0, 0, 0, 0, 1]' : 0.198277}

out:
 ["{'[4, 4, 2, 4, 2, 2, 1, 1, 28, 27, 0, 29, 2, 0, 0, 0, 0, 1]' : 0.21493}", "{'[4, 4, 2, 4, 2, 2, 1, 1, 28, 27, 0, 29, 2, 0, 0, 0, 0, 1]' : 0.210885}", "{'[4, 4, 2, 4, 2, 2, 1, 1, 28, 27, 0, 29, 2, 0, 0, 0, 0, 1]' : 0.19765}", "{'[4, 4, 2, 4, 2, 2, 1, 1, 28, 27, 0, 29, 2, 0, 0, 0, 0, 1]' : 0.197854}", "{'[4, 4, 2, 4, 2, 2, 1, 1, 28, 27, 0, 29, 2, 0, 0, 0, 0, 1]' : 0.19773}", "{'[4, 4, 2, 4, 2, 2, 1, 1, 28, 27, 0, 29, 2, 0, 0, 0, 0, 1]' : 0.196772}", "{'[4, 4, 2, 4, 2, 2, 1, 1, 28, 27, 0, 29, 2, 0, 0, 0, 0, 1]' : 0.197669}", "{'[4, 4, 2, 4, 2, 2, 1, 1, 28, 27, 0, 29, 2, 0, 0, 0, 0, 1]' : 0.197754}", "{'[4, 4, 2, 4, 2, 2, 1, 1, 28, 27, 0, 29, 2, 0, 0, 0, 0, 1]' : 0.198147}", "{'[4, 4, 2, 4, 2, 2, 1, 1, 28, 27, 0, 29, 2, 0, 0, 0, 0, 1]' : 0.197554}", "{'[4, 4, 2, 4, 2, 2, 1, 1, 28, 27, 0, 29, 2, 0, 0, 0, 0, 1]' : 0.196652}", "{'[4, 4, 2, 4, 2, 2, 1, 1, 28, 27, 0, 29, 2, 0, 0, 0, 0, 1]' : 0.197217}", "{'[4, 4, 2, 4, 2, 2, 1, 1, 28, 27, 0, 29, 2, 0, 0, 0, 0, 1]' : 0.197891}", "{'[4, 4, 2, 4, 2, 2, 1, 1, 28, 27, 0, 29, 2, 0, 0, 0, 0, 1]' : 0.19742}", "{'[4, 4, 2, 4, 2, 2, 1, 1, 28, 27, 0, 29, 2, 0, 0, 0, 0, 1]' : 0.19747}", "{'[4, 4, 2, 4, 2, 2, 1, 1, 28, 27, 0, 29, 2, 0, 0, 0, 0, 1]' : 0.196948}", "{'[4, 4, 2, 4, 2, 2, 1, 1, 28, 27, 0, 29, 2, 0, 0, 0, 0, 1]' : 0.192508}", "{'[4, 4, 2, 4, 2, 2, 1, 1, 28, 27, 0, 29, 2, 0, 0, 0, 0, 1]' : 0.193045}", "{'[4, 4, 2, 4, 2, 2, 1, 1, 28, 27, 0, 29, 2, 0, 0, 0, 0, 1]' : 0.193463}", "{'[4, 4, 2, 4, 2, 2, 1, 1, 28, 27, 0, 29, 2, 0, 0, 0, 0, 1]' : 0.197833}", "{'[4, 4, 2, 4, 2, 2, 1, 1, 28, 27, 0, 29, 2, 0, 0, 0, 0, 1]' : 0.197068}", "{'[4, 4, 2, 4, 2, 2, 1, 1, 28, 27, 0, 29, 2, 0, 0, 0, 0, 1]' : 0.196954}", "{'[4, 4, 2, 4, 2, 2, 1, 1, 28, 27, 0, 29, 2, 0, 0, 0, 0, 1]' : 0.197636}", "{'[4, 4, 2, 4, 2, 2, 1, 1, 28, 27, 0, 29, 2, 0, 0, 0, 0, 1]' : 0.197775}", "{'[4, 4, 2, 4, 2, 2, 1, 1, 28, 27, 0, 29, 2, 0, 0, 0, 0, 1]' : 0.198041}", "{'[4, 4, 2, 4, 2, 2, 1, 1, 28, 27, 0, 29, 2, 0, 0, 0, 0, 1]' : 0.197396}", "{'[4, 4, 2, 4, 2, 2, 1, 1, 28, 27, 0, 29, 2, 0, 0, 0, 0, 1]' : 0.196993}", "{'[4, 4, 2, 4, 2, 2, 1, 1, 28, 27, 0, 29, 2, 0, 0, 0, 0, 1]' : 0.197899}", "{'[4, 4, 2, 4, 2, 2, 1, 1, 28, 27, 0, 29, 2, 0, 0, 0, 0, 1]' : 0.198018}", "{'[4, 4, 2, 4, 2, 2, 1, 1, 28, 27, 0, 29, 2, 0, 0, 0, 0, 1]' : 0.198277}"]
returning from 'run': {'[4, 4, 2, 4, 2, 2, 1, 1, 28, 27, 0, 29, 2, 0, 0, 0, 0, 1]': ([0.21493, 0.210885, 0.19765, 0.197854, 0.19773, 0.196772, 0.197669, 0.197754, 0.198147, 0.197554, 0.196652, 0.197217, 0.197891, 0.19742, 0.19747, 0.196948, 0.192508, 0.193045, 0.193463, 0.197833, 0.197068, 0.196954, 0.197636, 0.197775, 0.198041, 0.197396, 0.196993, 0.197899, 0.198018, 0.198277], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 4, 2, 4, 2, 2, 1, 1, 28, 27, 0, 29, 2, 0, 0, 0, 0, 1]': ([0.21493, 0.210885, 0.19765, 0.197854, 0.19773, 0.196772, 0.197669, 0.197754, 0.198147, 0.197554, 0.196652, 0.197217, 0.197891, 0.19742, 0.19747, 0.196948, 0.192508, 0.193045, 0.193463, 0.197833, 0.197068, 0.196954, 0.197636, 0.197775, 0.198041, 0.197396, 0.196993, 0.197899, 0.198018, 0.198277], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	181
        Max loop nest depth: 	6
        Additions: 		12327
        Multiplications: 	3906
        Divisions: 		0
        Logical: 		0
        Reads: 			23836
        Writes: 		4592
        Comparisons:		181
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest16.exe __orio_perftest16.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest16.exe  
Program Test Output: 
{'[5, 1, 6, 6, 3, 5, 1, 1, 0, 29, 0, 28, 2, 0, 0, 1, 1, 1]' : 0.201164}
{'[5, 1, 6, 6, 3, 5, 1, 1, 0, 29, 0, 28, 2, 0, 0, 1, 1, 1]' : 0.200917}
{'[5, 1, 6, 6, 3, 5, 1, 1, 0, 29, 0, 28, 2, 0, 0, 1, 1, 1]' : 0.185325}
{'[5, 1, 6, 6, 3, 5, 1, 1, 0, 29, 0, 28, 2, 0, 0, 1, 1, 1]' : 0.176433}
{'[5, 1, 6, 6, 3, 5, 1, 1, 0, 29, 0, 28, 2, 0, 0, 1, 1, 1]' : 0.177575}
{'[5, 1, 6, 6, 3, 5, 1, 1, 0, 29, 0, 28, 2, 0, 0, 1, 1, 1]' : 0.175862}
{'[5, 1, 6, 6, 3, 5, 1, 1, 0, 29, 0, 28, 2, 0, 0, 1, 1, 1]' : 0.175912}
{'[5, 1, 6, 6, 3, 5, 1, 1, 0, 29, 0, 28, 2, 0, 0, 1, 1, 1]' : 0.17667}
{'[5, 1, 6, 6, 3, 5, 1, 1, 0, 29, 0, 28, 2, 0, 0, 1, 1, 1]' : 0.176654}
{'[5, 1, 6, 6, 3, 5, 1, 1, 0, 29, 0, 28, 2, 0, 0, 1, 1, 1]' : 0.177196}
{'[5, 1, 6, 6, 3, 5, 1, 1, 0, 29, 0, 28, 2, 0, 0, 1, 1, 1]' : 0.176214}
{'[5, 1, 6, 6, 3, 5, 1, 1, 0, 29, 0, 28, 2, 0, 0, 1, 1, 1]' : 0.17652}
{'[5, 1, 6, 6, 3, 5, 1, 1, 0, 29, 0, 28, 2, 0, 0, 1, 1, 1]' : 0.176111}
{'[5, 1, 6, 6, 3, 5, 1, 1, 0, 29, 0, 28, 2, 0, 0, 1, 1, 1]' : 0.177124}
{'[5, 1, 6, 6, 3, 5, 1, 1, 0, 29, 0, 28, 2, 0, 0, 1, 1, 1]' : 0.176819}
{'[5, 1, 6, 6, 3, 5, 1, 1, 0, 29, 0, 28, 2, 0, 0, 1, 1, 1]' : 0.175605}
{'[5, 1, 6, 6, 3, 5, 1, 1, 0, 29, 0, 28, 2, 0, 0, 1, 1, 1]' : 0.175191}
{'[5, 1, 6, 6, 3, 5, 1, 1, 0, 29, 0, 28, 2, 0, 0, 1, 1, 1]' : 0.175499}
{'[5, 1, 6, 6, 3, 5, 1, 1, 0, 29, 0, 28, 2, 0, 0, 1, 1, 1]' : 0.177283}
{'[5, 1, 6, 6, 3, 5, 1, 1, 0, 29, 0, 28, 2, 0, 0, 1, 1, 1]' : 0.175616}
{'[5, 1, 6, 6, 3, 5, 1, 1, 0, 29, 0, 28, 2, 0, 0, 1, 1, 1]' : 0.175841}
{'[5, 1, 6, 6, 3, 5, 1, 1, 0, 29, 0, 28, 2, 0, 0, 1, 1, 1]' : 0.176453}
{'[5, 1, 6, 6, 3, 5, 1, 1, 0, 29, 0, 28, 2, 0, 0, 1, 1, 1]' : 0.175962}
{'[5, 1, 6, 6, 3, 5, 1, 1, 0, 29, 0, 28, 2, 0, 0, 1, 1, 1]' : 0.175791}
{'[5, 1, 6, 6, 3, 5, 1, 1, 0, 29, 0, 28, 2, 0, 0, 1, 1, 1]' : 0.177129}
{'[5, 1, 6, 6, 3, 5, 1, 1, 0, 29, 0, 28, 2, 0, 0, 1, 1, 1]' : 0.176429}
{'[5, 1, 6, 6, 3, 5, 1, 1, 0, 29, 0, 28, 2, 0, 0, 1, 1, 1]' : 0.175328}
{'[5, 1, 6, 6, 3, 5, 1, 1, 0, 29, 0, 28, 2, 0, 0, 1, 1, 1]' : 0.176119}
{'[5, 1, 6, 6, 3, 5, 1, 1, 0, 29, 0, 28, 2, 0, 0, 1, 1, 1]' : 0.175949}
{'[5, 1, 6, 6, 3, 5, 1, 1, 0, 29, 0, 28, 2, 0, 0, 1, 1, 1]' : 0.176512}

out:
 ["{'[5, 1, 6, 6, 3, 5, 1, 1, 0, 29, 0, 28, 2, 0, 0, 1, 1, 1]' : 0.201164}", "{'[5, 1, 6, 6, 3, 5, 1, 1, 0, 29, 0, 28, 2, 0, 0, 1, 1, 1]' : 0.200917}", "{'[5, 1, 6, 6, 3, 5, 1, 1, 0, 29, 0, 28, 2, 0, 0, 1, 1, 1]' : 0.185325}", "{'[5, 1, 6, 6, 3, 5, 1, 1, 0, 29, 0, 28, 2, 0, 0, 1, 1, 1]' : 0.176433}", "{'[5, 1, 6, 6, 3, 5, 1, 1, 0, 29, 0, 28, 2, 0, 0, 1, 1, 1]' : 0.177575}", "{'[5, 1, 6, 6, 3, 5, 1, 1, 0, 29, 0, 28, 2, 0, 0, 1, 1, 1]' : 0.175862}", "{'[5, 1, 6, 6, 3, 5, 1, 1, 0, 29, 0, 28, 2, 0, 0, 1, 1, 1]' : 0.175912}", "{'[5, 1, 6, 6, 3, 5, 1, 1, 0, 29, 0, 28, 2, 0, 0, 1, 1, 1]' : 0.17667}", "{'[5, 1, 6, 6, 3, 5, 1, 1, 0, 29, 0, 28, 2, 0, 0, 1, 1, 1]' : 0.176654}", "{'[5, 1, 6, 6, 3, 5, 1, 1, 0, 29, 0, 28, 2, 0, 0, 1, 1, 1]' : 0.177196}", "{'[5, 1, 6, 6, 3, 5, 1, 1, 0, 29, 0, 28, 2, 0, 0, 1, 1, 1]' : 0.176214}", "{'[5, 1, 6, 6, 3, 5, 1, 1, 0, 29, 0, 28, 2, 0, 0, 1, 1, 1]' : 0.17652}", "{'[5, 1, 6, 6, 3, 5, 1, 1, 0, 29, 0, 28, 2, 0, 0, 1, 1, 1]' : 0.176111}", "{'[5, 1, 6, 6, 3, 5, 1, 1, 0, 29, 0, 28, 2, 0, 0, 1, 1, 1]' : 0.177124}", "{'[5, 1, 6, 6, 3, 5, 1, 1, 0, 29, 0, 28, 2, 0, 0, 1, 1, 1]' : 0.176819}", "{'[5, 1, 6, 6, 3, 5, 1, 1, 0, 29, 0, 28, 2, 0, 0, 1, 1, 1]' : 0.175605}", "{'[5, 1, 6, 6, 3, 5, 1, 1, 0, 29, 0, 28, 2, 0, 0, 1, 1, 1]' : 0.175191}", "{'[5, 1, 6, 6, 3, 5, 1, 1, 0, 29, 0, 28, 2, 0, 0, 1, 1, 1]' : 0.175499}", "{'[5, 1, 6, 6, 3, 5, 1, 1, 0, 29, 0, 28, 2, 0, 0, 1, 1, 1]' : 0.177283}", "{'[5, 1, 6, 6, 3, 5, 1, 1, 0, 29, 0, 28, 2, 0, 0, 1, 1, 1]' : 0.175616}", "{'[5, 1, 6, 6, 3, 5, 1, 1, 0, 29, 0, 28, 2, 0, 0, 1, 1, 1]' : 0.175841}", "{'[5, 1, 6, 6, 3, 5, 1, 1, 0, 29, 0, 28, 2, 0, 0, 1, 1, 1]' : 0.176453}", "{'[5, 1, 6, 6, 3, 5, 1, 1, 0, 29, 0, 28, 2, 0, 0, 1, 1, 1]' : 0.175962}", "{'[5, 1, 6, 6, 3, 5, 1, 1, 0, 29, 0, 28, 2, 0, 0, 1, 1, 1]' : 0.175791}", "{'[5, 1, 6, 6, 3, 5, 1, 1, 0, 29, 0, 28, 2, 0, 0, 1, 1, 1]' : 0.177129}", "{'[5, 1, 6, 6, 3, 5, 1, 1, 0, 29, 0, 28, 2, 0, 0, 1, 1, 1]' : 0.176429}", "{'[5, 1, 6, 6, 3, 5, 1, 1, 0, 29, 0, 28, 2, 0, 0, 1, 1, 1]' : 0.175328}", "{'[5, 1, 6, 6, 3, 5, 1, 1, 0, 29, 0, 28, 2, 0, 0, 1, 1, 1]' : 0.176119}", "{'[5, 1, 6, 6, 3, 5, 1, 1, 0, 29, 0, 28, 2, 0, 0, 1, 1, 1]' : 0.175949}", "{'[5, 1, 6, 6, 3, 5, 1, 1, 0, 29, 0, 28, 2, 0, 0, 1, 1, 1]' : 0.176512}"]
returning from 'run': {'[5, 1, 6, 6, 3, 5, 1, 1, 0, 29, 0, 28, 2, 0, 0, 1, 1, 1]': ([0.201164, 0.200917, 0.185325, 0.176433, 0.177575, 0.175862, 0.175912, 0.17667, 0.176654, 0.177196, 0.176214, 0.17652, 0.176111, 0.177124, 0.176819, 0.175605, 0.175191, 0.175499, 0.177283, 0.175616, 0.175841, 0.176453, 0.175962, 0.175791, 0.177129, 0.176429, 0.175328, 0.176119, 0.175949, 0.176512], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 1, 6, 6, 3, 5, 1, 1, 0, 29, 0, 28, 2, 0, 0, 1, 1, 1]': ([0.201164, 0.200917, 0.185325, 0.176433, 0.177575, 0.175862, 0.175912, 0.17667, 0.176654, 0.177196, 0.176214, 0.17652, 0.176111, 0.177124, 0.176819, 0.175605, 0.175191, 0.175499, 0.177283, 0.175616, 0.175841, 0.176453, 0.175962, 0.175791, 0.177129, 0.176429, 0.175328, 0.176119, 0.175949, 0.176512], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	108
        Max loop nest depth: 	5
        Additions: 		14704
        Multiplications: 	3906
        Divisions: 		0
        Logical: 		0
        Reads: 			21605
        Writes: 		2259
        Comparisons:		108
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest17.exe __orio_perftest17.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest17.exe  
Program Test Output: 
{'[5, 2, 6, 0, 3, 4, 1, 0, 23, 29, 28, 0, 0, 0, 2, 0, 1, 0]' : 0.244856}
{'[5, 2, 6, 0, 3, 4, 1, 0, 23, 29, 28, 0, 0, 0, 2, 0, 1, 0]' : 0.227478}
{'[5, 2, 6, 0, 3, 4, 1, 0, 23, 29, 28, 0, 0, 0, 2, 0, 1, 0]' : 0.212432}
{'[5, 2, 6, 0, 3, 4, 1, 0, 23, 29, 28, 0, 0, 0, 2, 0, 1, 0]' : 0.208793}
{'[5, 2, 6, 0, 3, 4, 1, 0, 23, 29, 28, 0, 0, 0, 2, 0, 1, 0]' : 0.207813}
{'[5, 2, 6, 0, 3, 4, 1, 0, 23, 29, 28, 0, 0, 0, 2, 0, 1, 0]' : 0.215949}
{'[5, 2, 6, 0, 3, 4, 1, 0, 23, 29, 28, 0, 0, 0, 2, 0, 1, 0]' : 0.217739}
{'[5, 2, 6, 0, 3, 4, 1, 0, 23, 29, 28, 0, 0, 0, 2, 0, 1, 0]' : 0.217084}
{'[5, 2, 6, 0, 3, 4, 1, 0, 23, 29, 28, 0, 0, 0, 2, 0, 1, 0]' : 0.214644}
{'[5, 2, 6, 0, 3, 4, 1, 0, 23, 29, 28, 0, 0, 0, 2, 0, 1, 0]' : 0.212616}
{'[5, 2, 6, 0, 3, 4, 1, 0, 23, 29, 28, 0, 0, 0, 2, 0, 1, 0]' : 0.206947}
{'[5, 2, 6, 0, 3, 4, 1, 0, 23, 29, 28, 0, 0, 0, 2, 0, 1, 0]' : 0.2132}
{'[5, 2, 6, 0, 3, 4, 1, 0, 23, 29, 28, 0, 0, 0, 2, 0, 1, 0]' : 0.207498}
{'[5, 2, 6, 0, 3, 4, 1, 0, 23, 29, 28, 0, 0, 0, 2, 0, 1, 0]' : 0.213529}
{'[5, 2, 6, 0, 3, 4, 1, 0, 23, 29, 28, 0, 0, 0, 2, 0, 1, 0]' : 0.218828}
{'[5, 2, 6, 0, 3, 4, 1, 0, 23, 29, 28, 0, 0, 0, 2, 0, 1, 0]' : 0.221261}
{'[5, 2, 6, 0, 3, 4, 1, 0, 23, 29, 28, 0, 0, 0, 2, 0, 1, 0]' : 0.210295}
{'[5, 2, 6, 0, 3, 4, 1, 0, 23, 29, 28, 0, 0, 0, 2, 0, 1, 0]' : 0.209926}
{'[5, 2, 6, 0, 3, 4, 1, 0, 23, 29, 28, 0, 0, 0, 2, 0, 1, 0]' : 0.208381}
{'[5, 2, 6, 0, 3, 4, 1, 0, 23, 29, 28, 0, 0, 0, 2, 0, 1, 0]' : 0.215546}
{'[5, 2, 6, 0, 3, 4, 1, 0, 23, 29, 28, 0, 0, 0, 2, 0, 1, 0]' : 0.216065}
{'[5, 2, 6, 0, 3, 4, 1, 0, 23, 29, 28, 0, 0, 0, 2, 0, 1, 0]' : 0.215594}
{'[5, 2, 6, 0, 3, 4, 1, 0, 23, 29, 28, 0, 0, 0, 2, 0, 1, 0]' : 0.216021}
{'[5, 2, 6, 0, 3, 4, 1, 0, 23, 29, 28, 0, 0, 0, 2, 0, 1, 0]' : 0.211476}
{'[5, 2, 6, 0, 3, 4, 1, 0, 23, 29, 28, 0, 0, 0, 2, 0, 1, 0]' : 0.211213}
{'[5, 2, 6, 0, 3, 4, 1, 0, 23, 29, 28, 0, 0, 0, 2, 0, 1, 0]' : 0.213693}
{'[5, 2, 6, 0, 3, 4, 1, 0, 23, 29, 28, 0, 0, 0, 2, 0, 1, 0]' : 0.212617}
{'[5, 2, 6, 0, 3, 4, 1, 0, 23, 29, 28, 0, 0, 0, 2, 0, 1, 0]' : 0.213466}
{'[5, 2, 6, 0, 3, 4, 1, 0, 23, 29, 28, 0, 0, 0, 2, 0, 1, 0]' : 0.213297}
{'[5, 2, 6, 0, 3, 4, 1, 0, 23, 29, 28, 0, 0, 0, 2, 0, 1, 0]' : 0.210762}

out:
 ["{'[5, 2, 6, 0, 3, 4, 1, 0, 23, 29, 28, 0, 0, 0, 2, 0, 1, 0]' : 0.244856}", "{'[5, 2, 6, 0, 3, 4, 1, 0, 23, 29, 28, 0, 0, 0, 2, 0, 1, 0]' : 0.227478}", "{'[5, 2, 6, 0, 3, 4, 1, 0, 23, 29, 28, 0, 0, 0, 2, 0, 1, 0]' : 0.212432}", "{'[5, 2, 6, 0, 3, 4, 1, 0, 23, 29, 28, 0, 0, 0, 2, 0, 1, 0]' : 0.208793}", "{'[5, 2, 6, 0, 3, 4, 1, 0, 23, 29, 28, 0, 0, 0, 2, 0, 1, 0]' : 0.207813}", "{'[5, 2, 6, 0, 3, 4, 1, 0, 23, 29, 28, 0, 0, 0, 2, 0, 1, 0]' : 0.215949}", "{'[5, 2, 6, 0, 3, 4, 1, 0, 23, 29, 28, 0, 0, 0, 2, 0, 1, 0]' : 0.217739}", "{'[5, 2, 6, 0, 3, 4, 1, 0, 23, 29, 28, 0, 0, 0, 2, 0, 1, 0]' : 0.217084}", "{'[5, 2, 6, 0, 3, 4, 1, 0, 23, 29, 28, 0, 0, 0, 2, 0, 1, 0]' : 0.214644}", "{'[5, 2, 6, 0, 3, 4, 1, 0, 23, 29, 28, 0, 0, 0, 2, 0, 1, 0]' : 0.212616}", "{'[5, 2, 6, 0, 3, 4, 1, 0, 23, 29, 28, 0, 0, 0, 2, 0, 1, 0]' : 0.206947}", "{'[5, 2, 6, 0, 3, 4, 1, 0, 23, 29, 28, 0, 0, 0, 2, 0, 1, 0]' : 0.2132}", "{'[5, 2, 6, 0, 3, 4, 1, 0, 23, 29, 28, 0, 0, 0, 2, 0, 1, 0]' : 0.207498}", "{'[5, 2, 6, 0, 3, 4, 1, 0, 23, 29, 28, 0, 0, 0, 2, 0, 1, 0]' : 0.213529}", "{'[5, 2, 6, 0, 3, 4, 1, 0, 23, 29, 28, 0, 0, 0, 2, 0, 1, 0]' : 0.218828}", "{'[5, 2, 6, 0, 3, 4, 1, 0, 23, 29, 28, 0, 0, 0, 2, 0, 1, 0]' : 0.221261}", "{'[5, 2, 6, 0, 3, 4, 1, 0, 23, 29, 28, 0, 0, 0, 2, 0, 1, 0]' : 0.210295}", "{'[5, 2, 6, 0, 3, 4, 1, 0, 23, 29, 28, 0, 0, 0, 2, 0, 1, 0]' : 0.209926}", "{'[5, 2, 6, 0, 3, 4, 1, 0, 23, 29, 28, 0, 0, 0, 2, 0, 1, 0]' : 0.208381}", "{'[5, 2, 6, 0, 3, 4, 1, 0, 23, 29, 28, 0, 0, 0, 2, 0, 1, 0]' : 0.215546}", "{'[5, 2, 6, 0, 3, 4, 1, 0, 23, 29, 28, 0, 0, 0, 2, 0, 1, 0]' : 0.216065}", "{'[5, 2, 6, 0, 3, 4, 1, 0, 23, 29, 28, 0, 0, 0, 2, 0, 1, 0]' : 0.215594}", "{'[5, 2, 6, 0, 3, 4, 1, 0, 23, 29, 28, 0, 0, 0, 2, 0, 1, 0]' : 0.216021}", "{'[5, 2, 6, 0, 3, 4, 1, 0, 23, 29, 28, 0, 0, 0, 2, 0, 1, 0]' : 0.211476}", "{'[5, 2, 6, 0, 3, 4, 1, 0, 23, 29, 28, 0, 0, 0, 2, 0, 1, 0]' : 0.211213}", "{'[5, 2, 6, 0, 3, 4, 1, 0, 23, 29, 28, 0, 0, 0, 2, 0, 1, 0]' : 0.213693}", "{'[5, 2, 6, 0, 3, 4, 1, 0, 23, 29, 28, 0, 0, 0, 2, 0, 1, 0]' : 0.212617}", "{'[5, 2, 6, 0, 3, 4, 1, 0, 23, 29, 28, 0, 0, 0, 2, 0, 1, 0]' : 0.213466}", "{'[5, 2, 6, 0, 3, 4, 1, 0, 23, 29, 28, 0, 0, 0, 2, 0, 1, 0]' : 0.213297}", "{'[5, 2, 6, 0, 3, 4, 1, 0, 23, 29, 28, 0, 0, 0, 2, 0, 1, 0]' : 0.210762}"]
returning from 'run': {'[5, 2, 6, 0, 3, 4, 1, 0, 23, 29, 28, 0, 0, 0, 2, 0, 1, 0]': ([0.244856, 0.227478, 0.212432, 0.208793, 0.207813, 0.215949, 0.217739, 0.217084, 0.214644, 0.212616, 0.206947, 0.2132, 0.207498, 0.213529, 0.218828, 0.221261, 0.210295, 0.209926, 0.208381, 0.215546, 0.216065, 0.215594, 0.216021, 0.211476, 0.211213, 0.213693, 0.212617, 0.213466, 0.213297, 0.210762], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 2, 6, 0, 3, 4, 1, 0, 23, 29, 28, 0, 0, 0, 2, 0, 1, 0]': ([0.244856, 0.227478, 0.212432, 0.208793, 0.207813, 0.215949, 0.217739, 0.217084, 0.214644, 0.212616, 0.206947, 0.2132, 0.207498, 0.213529, 0.218828, 0.221261, 0.210295, 0.209926, 0.208381, 0.215546, 0.216065, 0.215594, 0.216021, 0.211476, 0.211213, 0.213693, 0.212617, 0.213466, 0.213297, 0.210762], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	130
        Max loop nest depth: 	4
        Additions: 		8734
        Multiplications: 	2030
        Divisions: 		0
        Logical: 		0
        Reads: 			13122
        Writes: 		1472
        Comparisons:		130
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest18.exe __orio_perftest18.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest18.exe  
Program Test Output: 
{'[2, 0, 3, 0, 1, 0, 0, 1, 21, 25, 0, 18, 1, 1, 0, 0, 0, 1]' : 0.120119}
{'[2, 0, 3, 0, 1, 0, 0, 1, 21, 25, 0, 18, 1, 1, 0, 0, 0, 1]' : 0.12001}
{'[2, 0, 3, 0, 1, 0, 0, 1, 21, 25, 0, 18, 1, 1, 0, 0, 0, 1]' : 0.119882}
{'[2, 0, 3, 0, 1, 0, 0, 1, 21, 25, 0, 18, 1, 1, 0, 0, 0, 1]' : 0.120062}
{'[2, 0, 3, 0, 1, 0, 0, 1, 21, 25, 0, 18, 1, 1, 0, 0, 0, 1]' : 0.106547}
{'[2, 0, 3, 0, 1, 0, 0, 1, 21, 25, 0, 18, 1, 1, 0, 0, 0, 1]' : 0.102821}
{'[2, 0, 3, 0, 1, 0, 0, 1, 21, 25, 0, 18, 1, 1, 0, 0, 0, 1]' : 0.10229}
{'[2, 0, 3, 0, 1, 0, 0, 1, 21, 25, 0, 18, 1, 1, 0, 0, 0, 1]' : 0.10235}
{'[2, 0, 3, 0, 1, 0, 0, 1, 21, 25, 0, 18, 1, 1, 0, 0, 0, 1]' : 0.102416}
{'[2, 0, 3, 0, 1, 0, 0, 1, 21, 25, 0, 18, 1, 1, 0, 0, 0, 1]' : 0.102387}
{'[2, 0, 3, 0, 1, 0, 0, 1, 21, 25, 0, 18, 1, 1, 0, 0, 0, 1]' : 0.102541}
{'[2, 0, 3, 0, 1, 0, 0, 1, 21, 25, 0, 18, 1, 1, 0, 0, 0, 1]' : 0.102452}
{'[2, 0, 3, 0, 1, 0, 0, 1, 21, 25, 0, 18, 1, 1, 0, 0, 0, 1]' : 0.102383}
{'[2, 0, 3, 0, 1, 0, 0, 1, 21, 25, 0, 18, 1, 1, 0, 0, 0, 1]' : 0.10244}
{'[2, 0, 3, 0, 1, 0, 0, 1, 21, 25, 0, 18, 1, 1, 0, 0, 0, 1]' : 0.102288}
{'[2, 0, 3, 0, 1, 0, 0, 1, 21, 25, 0, 18, 1, 1, 0, 0, 0, 1]' : 0.102668}
{'[2, 0, 3, 0, 1, 0, 0, 1, 21, 25, 0, 18, 1, 1, 0, 0, 0, 1]' : 0.102625}
{'[2, 0, 3, 0, 1, 0, 0, 1, 21, 25, 0, 18, 1, 1, 0, 0, 0, 1]' : 0.102538}
{'[2, 0, 3, 0, 1, 0, 0, 1, 21, 25, 0, 18, 1, 1, 0, 0, 0, 1]' : 0.102208}
{'[2, 0, 3, 0, 1, 0, 0, 1, 21, 25, 0, 18, 1, 1, 0, 0, 0, 1]' : 0.102288}
{'[2, 0, 3, 0, 1, 0, 0, 1, 21, 25, 0, 18, 1, 1, 0, 0, 0, 1]' : 0.102533}
{'[2, 0, 3, 0, 1, 0, 0, 1, 21, 25, 0, 18, 1, 1, 0, 0, 0, 1]' : 0.102314}
{'[2, 0, 3, 0, 1, 0, 0, 1, 21, 25, 0, 18, 1, 1, 0, 0, 0, 1]' : 0.102216}
{'[2, 0, 3, 0, 1, 0, 0, 1, 21, 25, 0, 18, 1, 1, 0, 0, 0, 1]' : 0.102385}
{'[2, 0, 3, 0, 1, 0, 0, 1, 21, 25, 0, 18, 1, 1, 0, 0, 0, 1]' : 0.102301}
{'[2, 0, 3, 0, 1, 0, 0, 1, 21, 25, 0, 18, 1, 1, 0, 0, 0, 1]' : 0.102564}
{'[2, 0, 3, 0, 1, 0, 0, 1, 21, 25, 0, 18, 1, 1, 0, 0, 0, 1]' : 0.102571}
{'[2, 0, 3, 0, 1, 0, 0, 1, 21, 25, 0, 18, 1, 1, 0, 0, 0, 1]' : 0.102531}
{'[2, 0, 3, 0, 1, 0, 0, 1, 21, 25, 0, 18, 1, 1, 0, 0, 0, 1]' : 0.102428}
{'[2, 0, 3, 0, 1, 0, 0, 1, 21, 25, 0, 18, 1, 1, 0, 0, 0, 1]' : 0.10231}

out:
 ["{'[2, 0, 3, 0, 1, 0, 0, 1, 21, 25, 0, 18, 1, 1, 0, 0, 0, 1]' : 0.120119}", "{'[2, 0, 3, 0, 1, 0, 0, 1, 21, 25, 0, 18, 1, 1, 0, 0, 0, 1]' : 0.12001}", "{'[2, 0, 3, 0, 1, 0, 0, 1, 21, 25, 0, 18, 1, 1, 0, 0, 0, 1]' : 0.119882}", "{'[2, 0, 3, 0, 1, 0, 0, 1, 21, 25, 0, 18, 1, 1, 0, 0, 0, 1]' : 0.120062}", "{'[2, 0, 3, 0, 1, 0, 0, 1, 21, 25, 0, 18, 1, 1, 0, 0, 0, 1]' : 0.106547}", "{'[2, 0, 3, 0, 1, 0, 0, 1, 21, 25, 0, 18, 1, 1, 0, 0, 0, 1]' : 0.102821}", "{'[2, 0, 3, 0, 1, 0, 0, 1, 21, 25, 0, 18, 1, 1, 0, 0, 0, 1]' : 0.10229}", "{'[2, 0, 3, 0, 1, 0, 0, 1, 21, 25, 0, 18, 1, 1, 0, 0, 0, 1]' : 0.10235}", "{'[2, 0, 3, 0, 1, 0, 0, 1, 21, 25, 0, 18, 1, 1, 0, 0, 0, 1]' : 0.102416}", "{'[2, 0, 3, 0, 1, 0, 0, 1, 21, 25, 0, 18, 1, 1, 0, 0, 0, 1]' : 0.102387}", "{'[2, 0, 3, 0, 1, 0, 0, 1, 21, 25, 0, 18, 1, 1, 0, 0, 0, 1]' : 0.102541}", "{'[2, 0, 3, 0, 1, 0, 0, 1, 21, 25, 0, 18, 1, 1, 0, 0, 0, 1]' : 0.102452}", "{'[2, 0, 3, 0, 1, 0, 0, 1, 21, 25, 0, 18, 1, 1, 0, 0, 0, 1]' : 0.102383}", "{'[2, 0, 3, 0, 1, 0, 0, 1, 21, 25, 0, 18, 1, 1, 0, 0, 0, 1]' : 0.10244}", "{'[2, 0, 3, 0, 1, 0, 0, 1, 21, 25, 0, 18, 1, 1, 0, 0, 0, 1]' : 0.102288}", "{'[2, 0, 3, 0, 1, 0, 0, 1, 21, 25, 0, 18, 1, 1, 0, 0, 0, 1]' : 0.102668}", "{'[2, 0, 3, 0, 1, 0, 0, 1, 21, 25, 0, 18, 1, 1, 0, 0, 0, 1]' : 0.102625}", "{'[2, 0, 3, 0, 1, 0, 0, 1, 21, 25, 0, 18, 1, 1, 0, 0, 0, 1]' : 0.102538}", "{'[2, 0, 3, 0, 1, 0, 0, 1, 21, 25, 0, 18, 1, 1, 0, 0, 0, 1]' : 0.102208}", "{'[2, 0, 3, 0, 1, 0, 0, 1, 21, 25, 0, 18, 1, 1, 0, 0, 0, 1]' : 0.102288}", "{'[2, 0, 3, 0, 1, 0, 0, 1, 21, 25, 0, 18, 1, 1, 0, 0, 0, 1]' : 0.102533}", "{'[2, 0, 3, 0, 1, 0, 0, 1, 21, 25, 0, 18, 1, 1, 0, 0, 0, 1]' : 0.102314}", "{'[2, 0, 3, 0, 1, 0, 0, 1, 21, 25, 0, 18, 1, 1, 0, 0, 0, 1]' : 0.102216}", "{'[2, 0, 3, 0, 1, 0, 0, 1, 21, 25, 0, 18, 1, 1, 0, 0, 0, 1]' : 0.102385}", "{'[2, 0, 3, 0, 1, 0, 0, 1, 21, 25, 0, 18, 1, 1, 0, 0, 0, 1]' : 0.102301}", "{'[2, 0, 3, 0, 1, 0, 0, 1, 21, 25, 0, 18, 1, 1, 0, 0, 0, 1]' : 0.102564}", "{'[2, 0, 3, 0, 1, 0, 0, 1, 21, 25, 0, 18, 1, 1, 0, 0, 0, 1]' : 0.102571}", "{'[2, 0, 3, 0, 1, 0, 0, 1, 21, 25, 0, 18, 1, 1, 0, 0, 0, 1]' : 0.102531}", "{'[2, 0, 3, 0, 1, 0, 0, 1, 21, 25, 0, 18, 1, 1, 0, 0, 0, 1]' : 0.102428}", "{'[2, 0, 3, 0, 1, 0, 0, 1, 21, 25, 0, 18, 1, 1, 0, 0, 0, 1]' : 0.10231}"]
returning from 'run': {'[2, 0, 3, 0, 1, 0, 0, 1, 21, 25, 0, 18, 1, 1, 0, 0, 0, 1]': ([0.120119, 0.12001, 0.119882, 0.120062, 0.106547, 0.102821, 0.10229, 0.10235, 0.102416, 0.102387, 0.102541, 0.102452, 0.102383, 0.10244, 0.102288, 0.102668, 0.102625, 0.102538, 0.102208, 0.102288, 0.102533, 0.102314, 0.102216, 0.102385, 0.102301, 0.102564, 0.102571, 0.102531, 0.102428, 0.10231], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 3, 0, 1, 0, 0, 1, 21, 25, 0, 18, 1, 1, 0, 0, 0, 1]': ([0.120119, 0.12001, 0.119882, 0.120062, 0.106547, 0.102821, 0.10229, 0.10235, 0.102416, 0.102387, 0.102541, 0.102452, 0.102383, 0.10244, 0.102288, 0.102668, 0.102625, 0.102538, 0.102208, 0.102288, 0.102533, 0.102314, 0.102216, 0.102385, 0.102301, 0.102564, 0.102571, 0.102531, 0.102428, 0.10231], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
Code stats:
        Number of loops: 	96
        Max loop nest depth: 	5
        Additions: 		7581
        Multiplications: 	2106
        Divisions: 		0
        Logical: 		0
        Reads: 			11738
        Writes: 		1409
        Comparisons:		96
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest19.exe __orio_perftest19.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest19.exe  
Program Test Output: 
{'[6, 2, 2, 4, 6, 0, 1, 0, 20, 25, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.30271}
{'[6, 2, 2, 4, 6, 0, 1, 0, 20, 25, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.29143}
{'[6, 2, 2, 4, 6, 0, 1, 0, 20, 25, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.258756}
{'[6, 2, 2, 4, 6, 0, 1, 0, 20, 25, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.258433}
{'[6, 2, 2, 4, 6, 0, 1, 0, 20, 25, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.258756}
{'[6, 2, 2, 4, 6, 0, 1, 0, 20, 25, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.25863}
{'[6, 2, 2, 4, 6, 0, 1, 0, 20, 25, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.258182}
{'[6, 2, 2, 4, 6, 0, 1, 0, 20, 25, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.258114}
{'[6, 2, 2, 4, 6, 0, 1, 0, 20, 25, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.258579}
{'[6, 2, 2, 4, 6, 0, 1, 0, 20, 25, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.258513}
{'[6, 2, 2, 4, 6, 0, 1, 0, 20, 25, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.258307}
{'[6, 2, 2, 4, 6, 0, 1, 0, 20, 25, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.258191}
{'[6, 2, 2, 4, 6, 0, 1, 0, 20, 25, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.25851}
{'[6, 2, 2, 4, 6, 0, 1, 0, 20, 25, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.258646}
{'[6, 2, 2, 4, 6, 0, 1, 0, 20, 25, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.257807}
{'[6, 2, 2, 4, 6, 0, 1, 0, 20, 25, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.258258}
{'[6, 2, 2, 4, 6, 0, 1, 0, 20, 25, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.258472}
{'[6, 2, 2, 4, 6, 0, 1, 0, 20, 25, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.258715}
{'[6, 2, 2, 4, 6, 0, 1, 0, 20, 25, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.258709}
{'[6, 2, 2, 4, 6, 0, 1, 0, 20, 25, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.258151}
{'[6, 2, 2, 4, 6, 0, 1, 0, 20, 25, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.258391}
{'[6, 2, 2, 4, 6, 0, 1, 0, 20, 25, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.259628}
{'[6, 2, 2, 4, 6, 0, 1, 0, 20, 25, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.258379}
{'[6, 2, 2, 4, 6, 0, 1, 0, 20, 25, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.258055}
{'[6, 2, 2, 4, 6, 0, 1, 0, 20, 25, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.257991}
{'[6, 2, 2, 4, 6, 0, 1, 0, 20, 25, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.258432}
{'[6, 2, 2, 4, 6, 0, 1, 0, 20, 25, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.258413}
{'[6, 2, 2, 4, 6, 0, 1, 0, 20, 25, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.258493}
{'[6, 2, 2, 4, 6, 0, 1, 0, 20, 25, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.258453}
{'[6, 2, 2, 4, 6, 0, 1, 0, 20, 25, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.258177}

out:
 ["{'[6, 2, 2, 4, 6, 0, 1, 0, 20, 25, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.30271}", "{'[6, 2, 2, 4, 6, 0, 1, 0, 20, 25, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.29143}", "{'[6, 2, 2, 4, 6, 0, 1, 0, 20, 25, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.258756}", "{'[6, 2, 2, 4, 6, 0, 1, 0, 20, 25, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.258433}", "{'[6, 2, 2, 4, 6, 0, 1, 0, 20, 25, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.258756}", "{'[6, 2, 2, 4, 6, 0, 1, 0, 20, 25, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.25863}", "{'[6, 2, 2, 4, 6, 0, 1, 0, 20, 25, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.258182}", "{'[6, 2, 2, 4, 6, 0, 1, 0, 20, 25, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.258114}", "{'[6, 2, 2, 4, 6, 0, 1, 0, 20, 25, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.258579}", "{'[6, 2, 2, 4, 6, 0, 1, 0, 20, 25, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.258513}", "{'[6, 2, 2, 4, 6, 0, 1, 0, 20, 25, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.258307}", "{'[6, 2, 2, 4, 6, 0, 1, 0, 20, 25, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.258191}", "{'[6, 2, 2, 4, 6, 0, 1, 0, 20, 25, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.25851}", "{'[6, 2, 2, 4, 6, 0, 1, 0, 20, 25, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.258646}", "{'[6, 2, 2, 4, 6, 0, 1, 0, 20, 25, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.257807}", "{'[6, 2, 2, 4, 6, 0, 1, 0, 20, 25, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.258258}", "{'[6, 2, 2, 4, 6, 0, 1, 0, 20, 25, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.258472}", "{'[6, 2, 2, 4, 6, 0, 1, 0, 20, 25, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.258715}", "{'[6, 2, 2, 4, 6, 0, 1, 0, 20, 25, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.258709}", "{'[6, 2, 2, 4, 6, 0, 1, 0, 20, 25, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.258151}", "{'[6, 2, 2, 4, 6, 0, 1, 0, 20, 25, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.258391}", "{'[6, 2, 2, 4, 6, 0, 1, 0, 20, 25, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.259628}", "{'[6, 2, 2, 4, 6, 0, 1, 0, 20, 25, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.258379}", "{'[6, 2, 2, 4, 6, 0, 1, 0, 20, 25, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.258055}", "{'[6, 2, 2, 4, 6, 0, 1, 0, 20, 25, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.257991}", "{'[6, 2, 2, 4, 6, 0, 1, 0, 20, 25, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.258432}", "{'[6, 2, 2, 4, 6, 0, 1, 0, 20, 25, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.258413}", "{'[6, 2, 2, 4, 6, 0, 1, 0, 20, 25, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.258493}", "{'[6, 2, 2, 4, 6, 0, 1, 0, 20, 25, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.258453}", "{'[6, 2, 2, 4, 6, 0, 1, 0, 20, 25, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.258177}"]
returning from 'run': {'[6, 2, 2, 4, 6, 0, 1, 0, 20, 25, 0, 4, 0, 0, 2, 0, 1, 1]': ([0.30271, 0.29143, 0.258756, 0.258433, 0.258756, 0.25863, 0.258182, 0.258114, 0.258579, 0.258513, 0.258307, 0.258191, 0.25851, 0.258646, 0.257807, 0.258258, 0.258472, 0.258715, 0.258709, 0.258151, 0.258391, 0.259628, 0.258379, 0.258055, 0.257991, 0.258432, 0.258413, 0.258493, 0.258453, 0.258177], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 2, 2, 4, 6, 0, 1, 0, 20, 25, 0, 4, 0, 0, 2, 0, 1, 1]': ([0.30271, 0.29143, 0.258756, 0.258433, 0.258756, 0.25863, 0.258182, 0.258114, 0.258579, 0.258513, 0.258307, 0.258191, 0.25851, 0.258646, 0.257807, 0.258258, 0.258472, 0.258715, 0.258709, 0.258151, 0.258391, 0.259628, 0.258379, 0.258055, 0.257991, 0.258432, 0.258413, 0.258493, 0.258453, 0.258177], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	41
        Max loop nest depth: 	4
        Additions: 		1029
        Multiplications: 	204
        Divisions: 		0
        Logical: 		0
        Reads: 			1715
        Writes: 		254
        Comparisons:		41
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest20.exe __orio_perftest20.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest20.exe  
Program Test Output: 
{'[0, 1, 6, 2, 0, 4, 1, 1, 24, 4, 0, 14, 0, 0, 0, 0, 0, 1]' : 0.193436}
{'[0, 1, 6, 2, 0, 4, 1, 1, 24, 4, 0, 14, 0, 0, 0, 0, 0, 1]' : 0.193335}
{'[0, 1, 6, 2, 0, 4, 1, 1, 24, 4, 0, 14, 0, 0, 0, 0, 0, 1]' : 0.185685}
{'[0, 1, 6, 2, 0, 4, 1, 1, 24, 4, 0, 14, 0, 0, 0, 0, 0, 1]' : 0.162756}
{'[0, 1, 6, 2, 0, 4, 1, 1, 24, 4, 0, 14, 0, 0, 0, 0, 0, 1]' : 0.162683}
{'[0, 1, 6, 2, 0, 4, 1, 1, 24, 4, 0, 14, 0, 0, 0, 0, 0, 1]' : 0.162819}
{'[0, 1, 6, 2, 0, 4, 1, 1, 24, 4, 0, 14, 0, 0, 0, 0, 0, 1]' : 0.162895}
{'[0, 1, 6, 2, 0, 4, 1, 1, 24, 4, 0, 14, 0, 0, 0, 0, 0, 1]' : 0.162704}
{'[0, 1, 6, 2, 0, 4, 1, 1, 24, 4, 0, 14, 0, 0, 0, 0, 0, 1]' : 0.163006}
{'[0, 1, 6, 2, 0, 4, 1, 1, 24, 4, 0, 14, 0, 0, 0, 0, 0, 1]' : 0.16287}
{'[0, 1, 6, 2, 0, 4, 1, 1, 24, 4, 0, 14, 0, 0, 0, 0, 0, 1]' : 0.162872}
{'[0, 1, 6, 2, 0, 4, 1, 1, 24, 4, 0, 14, 0, 0, 0, 0, 0, 1]' : 0.162782}
{'[0, 1, 6, 2, 0, 4, 1, 1, 24, 4, 0, 14, 0, 0, 0, 0, 0, 1]' : 0.162836}
{'[0, 1, 6, 2, 0, 4, 1, 1, 24, 4, 0, 14, 0, 0, 0, 0, 0, 1]' : 0.162902}
{'[0, 1, 6, 2, 0, 4, 1, 1, 24, 4, 0, 14, 0, 0, 0, 0, 0, 1]' : 0.162726}
{'[0, 1, 6, 2, 0, 4, 1, 1, 24, 4, 0, 14, 0, 0, 0, 0, 0, 1]' : 0.162868}
{'[0, 1, 6, 2, 0, 4, 1, 1, 24, 4, 0, 14, 0, 0, 0, 0, 0, 1]' : 0.16293}
{'[0, 1, 6, 2, 0, 4, 1, 1, 24, 4, 0, 14, 0, 0, 0, 0, 0, 1]' : 0.162773}
{'[0, 1, 6, 2, 0, 4, 1, 1, 24, 4, 0, 14, 0, 0, 0, 0, 0, 1]' : 0.162622}
{'[0, 1, 6, 2, 0, 4, 1, 1, 24, 4, 0, 14, 0, 0, 0, 0, 0, 1]' : 0.163287}
{'[0, 1, 6, 2, 0, 4, 1, 1, 24, 4, 0, 14, 0, 0, 0, 0, 0, 1]' : 0.163458}
{'[0, 1, 6, 2, 0, 4, 1, 1, 24, 4, 0, 14, 0, 0, 0, 0, 0, 1]' : 0.162878}
{'[0, 1, 6, 2, 0, 4, 1, 1, 24, 4, 0, 14, 0, 0, 0, 0, 0, 1]' : 0.162719}
{'[0, 1, 6, 2, 0, 4, 1, 1, 24, 4, 0, 14, 0, 0, 0, 0, 0, 1]' : 0.162676}
{'[0, 1, 6, 2, 0, 4, 1, 1, 24, 4, 0, 14, 0, 0, 0, 0, 0, 1]' : 0.162695}
{'[0, 1, 6, 2, 0, 4, 1, 1, 24, 4, 0, 14, 0, 0, 0, 0, 0, 1]' : 0.162661}
{'[0, 1, 6, 2, 0, 4, 1, 1, 24, 4, 0, 14, 0, 0, 0, 0, 0, 1]' : 0.163211}
{'[0, 1, 6, 2, 0, 4, 1, 1, 24, 4, 0, 14, 0, 0, 0, 0, 0, 1]' : 0.162784}
{'[0, 1, 6, 2, 0, 4, 1, 1, 24, 4, 0, 14, 0, 0, 0, 0, 0, 1]' : 0.162856}
{'[0, 1, 6, 2, 0, 4, 1, 1, 24, 4, 0, 14, 0, 0, 0, 0, 0, 1]' : 0.162714}

out:
 ["{'[0, 1, 6, 2, 0, 4, 1, 1, 24, 4, 0, 14, 0, 0, 0, 0, 0, 1]' : 0.193436}", "{'[0, 1, 6, 2, 0, 4, 1, 1, 24, 4, 0, 14, 0, 0, 0, 0, 0, 1]' : 0.193335}", "{'[0, 1, 6, 2, 0, 4, 1, 1, 24, 4, 0, 14, 0, 0, 0, 0, 0, 1]' : 0.185685}", "{'[0, 1, 6, 2, 0, 4, 1, 1, 24, 4, 0, 14, 0, 0, 0, 0, 0, 1]' : 0.162756}", "{'[0, 1, 6, 2, 0, 4, 1, 1, 24, 4, 0, 14, 0, 0, 0, 0, 0, 1]' : 0.162683}", "{'[0, 1, 6, 2, 0, 4, 1, 1, 24, 4, 0, 14, 0, 0, 0, 0, 0, 1]' : 0.162819}", "{'[0, 1, 6, 2, 0, 4, 1, 1, 24, 4, 0, 14, 0, 0, 0, 0, 0, 1]' : 0.162895}", "{'[0, 1, 6, 2, 0, 4, 1, 1, 24, 4, 0, 14, 0, 0, 0, 0, 0, 1]' : 0.162704}", "{'[0, 1, 6, 2, 0, 4, 1, 1, 24, 4, 0, 14, 0, 0, 0, 0, 0, 1]' : 0.163006}", "{'[0, 1, 6, 2, 0, 4, 1, 1, 24, 4, 0, 14, 0, 0, 0, 0, 0, 1]' : 0.16287}", "{'[0, 1, 6, 2, 0, 4, 1, 1, 24, 4, 0, 14, 0, 0, 0, 0, 0, 1]' : 0.162872}", "{'[0, 1, 6, 2, 0, 4, 1, 1, 24, 4, 0, 14, 0, 0, 0, 0, 0, 1]' : 0.162782}", "{'[0, 1, 6, 2, 0, 4, 1, 1, 24, 4, 0, 14, 0, 0, 0, 0, 0, 1]' : 0.162836}", "{'[0, 1, 6, 2, 0, 4, 1, 1, 24, 4, 0, 14, 0, 0, 0, 0, 0, 1]' : 0.162902}", "{'[0, 1, 6, 2, 0, 4, 1, 1, 24, 4, 0, 14, 0, 0, 0, 0, 0, 1]' : 0.162726}", "{'[0, 1, 6, 2, 0, 4, 1, 1, 24, 4, 0, 14, 0, 0, 0, 0, 0, 1]' : 0.162868}", "{'[0, 1, 6, 2, 0, 4, 1, 1, 24, 4, 0, 14, 0, 0, 0, 0, 0, 1]' : 0.16293}", "{'[0, 1, 6, 2, 0, 4, 1, 1, 24, 4, 0, 14, 0, 0, 0, 0, 0, 1]' : 0.162773}", "{'[0, 1, 6, 2, 0, 4, 1, 1, 24, 4, 0, 14, 0, 0, 0, 0, 0, 1]' : 0.162622}", "{'[0, 1, 6, 2, 0, 4, 1, 1, 24, 4, 0, 14, 0, 0, 0, 0, 0, 1]' : 0.163287}", "{'[0, 1, 6, 2, 0, 4, 1, 1, 24, 4, 0, 14, 0, 0, 0, 0, 0, 1]' : 0.163458}", "{'[0, 1, 6, 2, 0, 4, 1, 1, 24, 4, 0, 14, 0, 0, 0, 0, 0, 1]' : 0.162878}", "{'[0, 1, 6, 2, 0, 4, 1, 1, 24, 4, 0, 14, 0, 0, 0, 0, 0, 1]' : 0.162719}", "{'[0, 1, 6, 2, 0, 4, 1, 1, 24, 4, 0, 14, 0, 0, 0, 0, 0, 1]' : 0.162676}", "{'[0, 1, 6, 2, 0, 4, 1, 1, 24, 4, 0, 14, 0, 0, 0, 0, 0, 1]' : 0.162695}", "{'[0, 1, 6, 2, 0, 4, 1, 1, 24, 4, 0, 14, 0, 0, 0, 0, 0, 1]' : 0.162661}", "{'[0, 1, 6, 2, 0, 4, 1, 1, 24, 4, 0, 14, 0, 0, 0, 0, 0, 1]' : 0.163211}", "{'[0, 1, 6, 2, 0, 4, 1, 1, 24, 4, 0, 14, 0, 0, 0, 0, 0, 1]' : 0.162784}", "{'[0, 1, 6, 2, 0, 4, 1, 1, 24, 4, 0, 14, 0, 0, 0, 0, 0, 1]' : 0.162856}", "{'[0, 1, 6, 2, 0, 4, 1, 1, 24, 4, 0, 14, 0, 0, 0, 0, 0, 1]' : 0.162714}"]
returning from 'run': {'[0, 1, 6, 2, 0, 4, 1, 1, 24, 4, 0, 14, 0, 0, 0, 0, 0, 1]': ([0.193436, 0.193335, 0.185685, 0.162756, 0.162683, 0.162819, 0.162895, 0.162704, 0.163006, 0.16287, 0.162872, 0.162782, 0.162836, 0.162902, 0.162726, 0.162868, 0.16293, 0.162773, 0.162622, 0.163287, 0.163458, 0.162878, 0.162719, 0.162676, 0.162695, 0.162661, 0.163211, 0.162784, 0.162856, 0.162714], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 6, 2, 0, 4, 1, 1, 24, 4, 0, 14, 0, 0, 0, 0, 0, 1]': ([0.193436, 0.193335, 0.185685, 0.162756, 0.162683, 0.162819, 0.162895, 0.162704, 0.163006, 0.16287, 0.162872, 0.162782, 0.162836, 0.162902, 0.162726, 0.162868, 0.16293, 0.162773, 0.162622, 0.163287, 0.163458, 0.162878, 0.162719, 0.162676, 0.162695, 0.162661, 0.163211, 0.162784, 0.162856, 0.162714], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	6
        Additions: 		405
        Multiplications: 	114
        Divisions: 		0
        Logical: 		0
        Reads: 			824
        Writes: 		118
        Comparisons:		15
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest21.exe __orio_perftest21.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest21.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest21.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest21.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest21.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	39
        Max loop nest depth: 	6
        Additions: 		795
        Multiplications: 	264
        Divisions: 		0
        Logical: 		0
        Reads: 			1655
        Writes: 		346
        Comparisons:		39
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest22.exe __orio_perftest22.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest22.exe  
Program Test Output: 
{'[6, 0, 1, 6, 2, 6, 1, 1, 29, 1, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.10237}
{'[6, 0, 1, 6, 2, 6, 1, 1, 29, 1, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.102392}
{'[6, 0, 1, 6, 2, 6, 1, 1, 29, 1, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.102245}
{'[6, 0, 1, 6, 2, 6, 1, 1, 29, 1, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.102398}
{'[6, 0, 1, 6, 2, 6, 1, 1, 29, 1, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.102256}
{'[6, 0, 1, 6, 2, 6, 1, 1, 29, 1, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.101206}
{'[6, 0, 1, 6, 2, 6, 1, 1, 29, 1, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.100149}
{'[6, 0, 1, 6, 2, 6, 1, 1, 29, 1, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.100092}
{'[6, 0, 1, 6, 2, 6, 1, 1, 29, 1, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.100087}
{'[6, 0, 1, 6, 2, 6, 1, 1, 29, 1, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.100177}
{'[6, 0, 1, 6, 2, 6, 1, 1, 29, 1, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.100169}
{'[6, 0, 1, 6, 2, 6, 1, 1, 29, 1, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.100242}
{'[6, 0, 1, 6, 2, 6, 1, 1, 29, 1, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.09993}
{'[6, 0, 1, 6, 2, 6, 1, 1, 29, 1, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.099977}
{'[6, 0, 1, 6, 2, 6, 1, 1, 29, 1, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0998962}
{'[6, 0, 1, 6, 2, 6, 1, 1, 29, 1, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.100433}
{'[6, 0, 1, 6, 2, 6, 1, 1, 29, 1, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.100097}
{'[6, 0, 1, 6, 2, 6, 1, 1, 29, 1, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0999591}
{'[6, 0, 1, 6, 2, 6, 1, 1, 29, 1, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0999191}
{'[6, 0, 1, 6, 2, 6, 1, 1, 29, 1, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.100192}
{'[6, 0, 1, 6, 2, 6, 1, 1, 29, 1, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.099894}
{'[6, 0, 1, 6, 2, 6, 1, 1, 29, 1, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.100199}
{'[6, 0, 1, 6, 2, 6, 1, 1, 29, 1, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.10014}
{'[6, 0, 1, 6, 2, 6, 1, 1, 29, 1, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.100153}
{'[6, 0, 1, 6, 2, 6, 1, 1, 29, 1, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.100446}
{'[6, 0, 1, 6, 2, 6, 1, 1, 29, 1, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.099993}
{'[6, 0, 1, 6, 2, 6, 1, 1, 29, 1, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.099987}
{'[6, 0, 1, 6, 2, 6, 1, 1, 29, 1, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.100158}
{'[6, 0, 1, 6, 2, 6, 1, 1, 29, 1, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.099817}
{'[6, 0, 1, 6, 2, 6, 1, 1, 29, 1, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.099988}

out:
 ["{'[6, 0, 1, 6, 2, 6, 1, 1, 29, 1, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.10237}", "{'[6, 0, 1, 6, 2, 6, 1, 1, 29, 1, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.102392}", "{'[6, 0, 1, 6, 2, 6, 1, 1, 29, 1, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.102245}", "{'[6, 0, 1, 6, 2, 6, 1, 1, 29, 1, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.102398}", "{'[6, 0, 1, 6, 2, 6, 1, 1, 29, 1, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.102256}", "{'[6, 0, 1, 6, 2, 6, 1, 1, 29, 1, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.101206}", "{'[6, 0, 1, 6, 2, 6, 1, 1, 29, 1, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.100149}", "{'[6, 0, 1, 6, 2, 6, 1, 1, 29, 1, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.100092}", "{'[6, 0, 1, 6, 2, 6, 1, 1, 29, 1, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.100087}", "{'[6, 0, 1, 6, 2, 6, 1, 1, 29, 1, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.100177}", "{'[6, 0, 1, 6, 2, 6, 1, 1, 29, 1, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.100169}", "{'[6, 0, 1, 6, 2, 6, 1, 1, 29, 1, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.100242}", "{'[6, 0, 1, 6, 2, 6, 1, 1, 29, 1, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.09993}", "{'[6, 0, 1, 6, 2, 6, 1, 1, 29, 1, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.099977}", "{'[6, 0, 1, 6, 2, 6, 1, 1, 29, 1, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0998962}", "{'[6, 0, 1, 6, 2, 6, 1, 1, 29, 1, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.100433}", "{'[6, 0, 1, 6, 2, 6, 1, 1, 29, 1, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.100097}", "{'[6, 0, 1, 6, 2, 6, 1, 1, 29, 1, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0999591}", "{'[6, 0, 1, 6, 2, 6, 1, 1, 29, 1, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0999191}", "{'[6, 0, 1, 6, 2, 6, 1, 1, 29, 1, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.100192}", "{'[6, 0, 1, 6, 2, 6, 1, 1, 29, 1, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.099894}", "{'[6, 0, 1, 6, 2, 6, 1, 1, 29, 1, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.100199}", "{'[6, 0, 1, 6, 2, 6, 1, 1, 29, 1, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.10014}", "{'[6, 0, 1, 6, 2, 6, 1, 1, 29, 1, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.100153}", "{'[6, 0, 1, 6, 2, 6, 1, 1, 29, 1, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.100446}", "{'[6, 0, 1, 6, 2, 6, 1, 1, 29, 1, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.099993}", "{'[6, 0, 1, 6, 2, 6, 1, 1, 29, 1, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.099987}", "{'[6, 0, 1, 6, 2, 6, 1, 1, 29, 1, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.100158}", "{'[6, 0, 1, 6, 2, 6, 1, 1, 29, 1, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.099817}", "{'[6, 0, 1, 6, 2, 6, 1, 1, 29, 1, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.099988}"]
returning from 'run': {'[6, 0, 1, 6, 2, 6, 1, 1, 29, 1, 2, 0, 1, 0, 1, 1, 0, 1]': ([0.10237, 0.102392, 0.102245, 0.102398, 0.102256, 0.101206, 0.100149, 0.100092, 0.100087, 0.100177, 0.100169, 0.100242, 0.09993, 0.099977, 0.0998962, 0.100433, 0.100097, 0.0999591, 0.0999191, 0.100192, 0.099894, 0.100199, 0.10014, 0.100153, 0.100446, 0.099993, 0.099987, 0.100158, 0.099817, 0.099988], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 1, 6, 2, 6, 1, 1, 29, 1, 2, 0, 1, 0, 1, 1, 0, 1]': ([0.10237, 0.102392, 0.102245, 0.102398, 0.102256, 0.101206, 0.100149, 0.100092, 0.100087, 0.100177, 0.100169, 0.100242, 0.09993, 0.099977, 0.0998962, 0.100433, 0.100097, 0.0999591, 0.0999191, 0.100192, 0.099894, 0.100199, 0.10014, 0.100153, 0.100446, 0.099993, 0.099987, 0.100158, 0.099817, 0.099988], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		276
        Multiplications: 	102
        Divisions: 		0
        Logical: 		0
        Reads: 			601
        Writes: 		127
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest23.exe __orio_perftest23.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest23.exe  
Program Test Output: 
{'[0, 0, 4, 0, 5, 6, 0, 0, 25, 0, 10, 5, 0, 2, 0, 1, 1, 1]' : 0.181425}
{'[0, 0, 4, 0, 5, 6, 0, 0, 25, 0, 10, 5, 0, 2, 0, 1, 1, 1]' : 0.181342}
{'[0, 0, 4, 0, 5, 6, 0, 0, 25, 0, 10, 5, 0, 2, 0, 1, 1, 1]' : 0.181002}
{'[0, 0, 4, 0, 5, 6, 0, 0, 25, 0, 10, 5, 0, 2, 0, 1, 1, 1]' : 0.155992}
{'[0, 0, 4, 0, 5, 6, 0, 0, 25, 0, 10, 5, 0, 2, 0, 1, 1, 1]' : 0.152348}
{'[0, 0, 4, 0, 5, 6, 0, 0, 25, 0, 10, 5, 0, 2, 0, 1, 1, 1]' : 0.15238}
{'[0, 0, 4, 0, 5, 6, 0, 0, 25, 0, 10, 5, 0, 2, 0, 1, 1, 1]' : 0.153055}
{'[0, 0, 4, 0, 5, 6, 0, 0, 25, 0, 10, 5, 0, 2, 0, 1, 1, 1]' : 0.15239}
{'[0, 0, 4, 0, 5, 6, 0, 0, 25, 0, 10, 5, 0, 2, 0, 1, 1, 1]' : 0.152407}
{'[0, 0, 4, 0, 5, 6, 0, 0, 25, 0, 10, 5, 0, 2, 0, 1, 1, 1]' : 0.152321}
{'[0, 0, 4, 0, 5, 6, 0, 0, 25, 0, 10, 5, 0, 2, 0, 1, 1, 1]' : 0.15234}
{'[0, 0, 4, 0, 5, 6, 0, 0, 25, 0, 10, 5, 0, 2, 0, 1, 1, 1]' : 0.152391}
{'[0, 0, 4, 0, 5, 6, 0, 0, 25, 0, 10, 5, 0, 2, 0, 1, 1, 1]' : 0.15236}
{'[0, 0, 4, 0, 5, 6, 0, 0, 25, 0, 10, 5, 0, 2, 0, 1, 1, 1]' : 0.153114}
{'[0, 0, 4, 0, 5, 6, 0, 0, 25, 0, 10, 5, 0, 2, 0, 1, 1, 1]' : 0.153573}
{'[0, 0, 4, 0, 5, 6, 0, 0, 25, 0, 10, 5, 0, 2, 0, 1, 1, 1]' : 0.157283}
{'[0, 0, 4, 0, 5, 6, 0, 0, 25, 0, 10, 5, 0, 2, 0, 1, 1, 1]' : 0.157266}
{'[0, 0, 4, 0, 5, 6, 0, 0, 25, 0, 10, 5, 0, 2, 0, 1, 1, 1]' : 0.157298}
{'[0, 0, 4, 0, 5, 6, 0, 0, 25, 0, 10, 5, 0, 2, 0, 1, 1, 1]' : 0.157307}
{'[0, 0, 4, 0, 5, 6, 0, 0, 25, 0, 10, 5, 0, 2, 0, 1, 1, 1]' : 0.15736}
{'[0, 0, 4, 0, 5, 6, 0, 0, 25, 0, 10, 5, 0, 2, 0, 1, 1, 1]' : 0.157243}
{'[0, 0, 4, 0, 5, 6, 0, 0, 25, 0, 10, 5, 0, 2, 0, 1, 1, 1]' : 0.15261}
{'[0, 0, 4, 0, 5, 6, 0, 0, 25, 0, 10, 5, 0, 2, 0, 1, 1, 1]' : 0.152426}
{'[0, 0, 4, 0, 5, 6, 0, 0, 25, 0, 10, 5, 0, 2, 0, 1, 1, 1]' : 0.152376}
{'[0, 0, 4, 0, 5, 6, 0, 0, 25, 0, 10, 5, 0, 2, 0, 1, 1, 1]' : 0.152619}
{'[0, 0, 4, 0, 5, 6, 0, 0, 25, 0, 10, 5, 0, 2, 0, 1, 1, 1]' : 0.152618}
{'[0, 0, 4, 0, 5, 6, 0, 0, 25, 0, 10, 5, 0, 2, 0, 1, 1, 1]' : 0.152562}
{'[0, 0, 4, 0, 5, 6, 0, 0, 25, 0, 10, 5, 0, 2, 0, 1, 1, 1]' : 0.152744}
{'[0, 0, 4, 0, 5, 6, 0, 0, 25, 0, 10, 5, 0, 2, 0, 1, 1, 1]' : 0.152992}
{'[0, 0, 4, 0, 5, 6, 0, 0, 25, 0, 10, 5, 0, 2, 0, 1, 1, 1]' : 0.152449}

out:
 ["{'[0, 0, 4, 0, 5, 6, 0, 0, 25, 0, 10, 5, 0, 2, 0, 1, 1, 1]' : 0.181425}", "{'[0, 0, 4, 0, 5, 6, 0, 0, 25, 0, 10, 5, 0, 2, 0, 1, 1, 1]' : 0.181342}", "{'[0, 0, 4, 0, 5, 6, 0, 0, 25, 0, 10, 5, 0, 2, 0, 1, 1, 1]' : 0.181002}", "{'[0, 0, 4, 0, 5, 6, 0, 0, 25, 0, 10, 5, 0, 2, 0, 1, 1, 1]' : 0.155992}", "{'[0, 0, 4, 0, 5, 6, 0, 0, 25, 0, 10, 5, 0, 2, 0, 1, 1, 1]' : 0.152348}", "{'[0, 0, 4, 0, 5, 6, 0, 0, 25, 0, 10, 5, 0, 2, 0, 1, 1, 1]' : 0.15238}", "{'[0, 0, 4, 0, 5, 6, 0, 0, 25, 0, 10, 5, 0, 2, 0, 1, 1, 1]' : 0.153055}", "{'[0, 0, 4, 0, 5, 6, 0, 0, 25, 0, 10, 5, 0, 2, 0, 1, 1, 1]' : 0.15239}", "{'[0, 0, 4, 0, 5, 6, 0, 0, 25, 0, 10, 5, 0, 2, 0, 1, 1, 1]' : 0.152407}", "{'[0, 0, 4, 0, 5, 6, 0, 0, 25, 0, 10, 5, 0, 2, 0, 1, 1, 1]' : 0.152321}", "{'[0, 0, 4, 0, 5, 6, 0, 0, 25, 0, 10, 5, 0, 2, 0, 1, 1, 1]' : 0.15234}", "{'[0, 0, 4, 0, 5, 6, 0, 0, 25, 0, 10, 5, 0, 2, 0, 1, 1, 1]' : 0.152391}", "{'[0, 0, 4, 0, 5, 6, 0, 0, 25, 0, 10, 5, 0, 2, 0, 1, 1, 1]' : 0.15236}", "{'[0, 0, 4, 0, 5, 6, 0, 0, 25, 0, 10, 5, 0, 2, 0, 1, 1, 1]' : 0.153114}", "{'[0, 0, 4, 0, 5, 6, 0, 0, 25, 0, 10, 5, 0, 2, 0, 1, 1, 1]' : 0.153573}", "{'[0, 0, 4, 0, 5, 6, 0, 0, 25, 0, 10, 5, 0, 2, 0, 1, 1, 1]' : 0.157283}", "{'[0, 0, 4, 0, 5, 6, 0, 0, 25, 0, 10, 5, 0, 2, 0, 1, 1, 1]' : 0.157266}", "{'[0, 0, 4, 0, 5, 6, 0, 0, 25, 0, 10, 5, 0, 2, 0, 1, 1, 1]' : 0.157298}", "{'[0, 0, 4, 0, 5, 6, 0, 0, 25, 0, 10, 5, 0, 2, 0, 1, 1, 1]' : 0.157307}", "{'[0, 0, 4, 0, 5, 6, 0, 0, 25, 0, 10, 5, 0, 2, 0, 1, 1, 1]' : 0.15736}", "{'[0, 0, 4, 0, 5, 6, 0, 0, 25, 0, 10, 5, 0, 2, 0, 1, 1, 1]' : 0.157243}", "{'[0, 0, 4, 0, 5, 6, 0, 0, 25, 0, 10, 5, 0, 2, 0, 1, 1, 1]' : 0.15261}", "{'[0, 0, 4, 0, 5, 6, 0, 0, 25, 0, 10, 5, 0, 2, 0, 1, 1, 1]' : 0.152426}", "{'[0, 0, 4, 0, 5, 6, 0, 0, 25, 0, 10, 5, 0, 2, 0, 1, 1, 1]' : 0.152376}", "{'[0, 0, 4, 0, 5, 6, 0, 0, 25, 0, 10, 5, 0, 2, 0, 1, 1, 1]' : 0.152619}", "{'[0, 0, 4, 0, 5, 6, 0, 0, 25, 0, 10, 5, 0, 2, 0, 1, 1, 1]' : 0.152618}", "{'[0, 0, 4, 0, 5, 6, 0, 0, 25, 0, 10, 5, 0, 2, 0, 1, 1, 1]' : 0.152562}", "{'[0, 0, 4, 0, 5, 6, 0, 0, 25, 0, 10, 5, 0, 2, 0, 1, 1, 1]' : 0.152744}", "{'[0, 0, 4, 0, 5, 6, 0, 0, 25, 0, 10, 5, 0, 2, 0, 1, 1, 1]' : 0.152992}", "{'[0, 0, 4, 0, 5, 6, 0, 0, 25, 0, 10, 5, 0, 2, 0, 1, 1, 1]' : 0.152449}"]
returning from 'run': {'[0, 0, 4, 0, 5, 6, 0, 0, 25, 0, 10, 5, 0, 2, 0, 1, 1, 1]': ([0.181425, 0.181342, 0.181002, 0.155992, 0.152348, 0.15238, 0.153055, 0.15239, 0.152407, 0.152321, 0.15234, 0.152391, 0.15236, 0.153114, 0.153573, 0.157283, 0.157266, 0.157298, 0.157307, 0.15736, 0.157243, 0.15261, 0.152426, 0.152376, 0.152619, 0.152618, 0.152562, 0.152744, 0.152992, 0.152449], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 4, 0, 5, 6, 0, 0, 25, 0, 10, 5, 0, 2, 0, 1, 1, 1]': ([0.181425, 0.181342, 0.181002, 0.155992, 0.152348, 0.15238, 0.153055, 0.15239, 0.152407, 0.152321, 0.15234, 0.152391, 0.15236, 0.153114, 0.153573, 0.157283, 0.157266, 0.157298, 0.157307, 0.15736, 0.157243, 0.15261, 0.152426, 0.152376, 0.152619, 0.152618, 0.152562, 0.152744, 0.152992, 0.152449], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	121
        Max loop nest depth: 	5
        Additions: 		6287
        Multiplications: 	1512
        Divisions: 		0
        Logical: 		0
        Reads: 			9618
        Writes: 		1088
        Comparisons:		121
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest24.exe __orio_perftest24.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest24.exe  
Program Test Output: 
{'[0, 4, 3, 2, 6, 3, 1, 1, 5, 17, 25, 0, 1, 0, 0, 0, 1, 0]' : 0.130171}
{'[0, 4, 3, 2, 6, 3, 1, 1, 5, 17, 25, 0, 1, 0, 0, 0, 1, 0]' : 0.132493}
{'[0, 4, 3, 2, 6, 3, 1, 1, 5, 17, 25, 0, 1, 0, 0, 0, 1, 0]' : 0.129995}
{'[0, 4, 3, 2, 6, 3, 1, 1, 5, 17, 25, 0, 1, 0, 0, 0, 1, 0]' : 0.130003}
{'[0, 4, 3, 2, 6, 3, 1, 1, 5, 17, 25, 0, 1, 0, 0, 0, 1, 0]' : 0.130067}
{'[0, 4, 3, 2, 6, 3, 1, 1, 5, 17, 25, 0, 1, 0, 0, 0, 1, 0]' : 0.129924}
{'[0, 4, 3, 2, 6, 3, 1, 1, 5, 17, 25, 0, 1, 0, 0, 0, 1, 0]' : 0.129748}
{'[0, 4, 3, 2, 6, 3, 1, 1, 5, 17, 25, 0, 1, 0, 0, 0, 1, 0]' : 0.130028}
{'[0, 4, 3, 2, 6, 3, 1, 1, 5, 17, 25, 0, 1, 0, 0, 0, 1, 0]' : 0.130232}
{'[0, 4, 3, 2, 6, 3, 1, 1, 5, 17, 25, 0, 1, 0, 0, 0, 1, 0]' : 0.129923}
{'[0, 4, 3, 2, 6, 3, 1, 1, 5, 17, 25, 0, 1, 0, 0, 0, 1, 0]' : 0.130177}
{'[0, 4, 3, 2, 6, 3, 1, 1, 5, 17, 25, 0, 1, 0, 0, 0, 1, 0]' : 0.129891}
{'[0, 4, 3, 2, 6, 3, 1, 1, 5, 17, 25, 0, 1, 0, 0, 0, 1, 0]' : 0.130141}
{'[0, 4, 3, 2, 6, 3, 1, 1, 5, 17, 25, 0, 1, 0, 0, 0, 1, 0]' : 0.129716}
{'[0, 4, 3, 2, 6, 3, 1, 1, 5, 17, 25, 0, 1, 0, 0, 0, 1, 0]' : 0.129845}
{'[0, 4, 3, 2, 6, 3, 1, 1, 5, 17, 25, 0, 1, 0, 0, 0, 1, 0]' : 0.130085}
{'[0, 4, 3, 2, 6, 3, 1, 1, 5, 17, 25, 0, 1, 0, 0, 0, 1, 0]' : 0.130065}
{'[0, 4, 3, 2, 6, 3, 1, 1, 5, 17, 25, 0, 1, 0, 0, 0, 1, 0]' : 0.130085}
{'[0, 4, 3, 2, 6, 3, 1, 1, 5, 17, 25, 0, 1, 0, 0, 0, 1, 0]' : 0.130132}
{'[0, 4, 3, 2, 6, 3, 1, 1, 5, 17, 25, 0, 1, 0, 0, 0, 1, 0]' : 0.129915}
{'[0, 4, 3, 2, 6, 3, 1, 1, 5, 17, 25, 0, 1, 0, 0, 0, 1, 0]' : 0.13033}
{'[0, 4, 3, 2, 6, 3, 1, 1, 5, 17, 25, 0, 1, 0, 0, 0, 1, 0]' : 0.12981}
{'[0, 4, 3, 2, 6, 3, 1, 1, 5, 17, 25, 0, 1, 0, 0, 0, 1, 0]' : 0.129839}
{'[0, 4, 3, 2, 6, 3, 1, 1, 5, 17, 25, 0, 1, 0, 0, 0, 1, 0]' : 0.12985}
{'[0, 4, 3, 2, 6, 3, 1, 1, 5, 17, 25, 0, 1, 0, 0, 0, 1, 0]' : 0.130078}
{'[0, 4, 3, 2, 6, 3, 1, 1, 5, 17, 25, 0, 1, 0, 0, 0, 1, 0]' : 0.130314}
{'[0, 4, 3, 2, 6, 3, 1, 1, 5, 17, 25, 0, 1, 0, 0, 0, 1, 0]' : 0.130303}
{'[0, 4, 3, 2, 6, 3, 1, 1, 5, 17, 25, 0, 1, 0, 0, 0, 1, 0]' : 0.129995}
{'[0, 4, 3, 2, 6, 3, 1, 1, 5, 17, 25, 0, 1, 0, 0, 0, 1, 0]' : 0.130064}
{'[0, 4, 3, 2, 6, 3, 1, 1, 5, 17, 25, 0, 1, 0, 0, 0, 1, 0]' : 0.129714}

out:
 ["{'[0, 4, 3, 2, 6, 3, 1, 1, 5, 17, 25, 0, 1, 0, 0, 0, 1, 0]' : 0.130171}", "{'[0, 4, 3, 2, 6, 3, 1, 1, 5, 17, 25, 0, 1, 0, 0, 0, 1, 0]' : 0.132493}", "{'[0, 4, 3, 2, 6, 3, 1, 1, 5, 17, 25, 0, 1, 0, 0, 0, 1, 0]' : 0.129995}", "{'[0, 4, 3, 2, 6, 3, 1, 1, 5, 17, 25, 0, 1, 0, 0, 0, 1, 0]' : 0.130003}", "{'[0, 4, 3, 2, 6, 3, 1, 1, 5, 17, 25, 0, 1, 0, 0, 0, 1, 0]' : 0.130067}", "{'[0, 4, 3, 2, 6, 3, 1, 1, 5, 17, 25, 0, 1, 0, 0, 0, 1, 0]' : 0.129924}", "{'[0, 4, 3, 2, 6, 3, 1, 1, 5, 17, 25, 0, 1, 0, 0, 0, 1, 0]' : 0.129748}", "{'[0, 4, 3, 2, 6, 3, 1, 1, 5, 17, 25, 0, 1, 0, 0, 0, 1, 0]' : 0.130028}", "{'[0, 4, 3, 2, 6, 3, 1, 1, 5, 17, 25, 0, 1, 0, 0, 0, 1, 0]' : 0.130232}", "{'[0, 4, 3, 2, 6, 3, 1, 1, 5, 17, 25, 0, 1, 0, 0, 0, 1, 0]' : 0.129923}", "{'[0, 4, 3, 2, 6, 3, 1, 1, 5, 17, 25, 0, 1, 0, 0, 0, 1, 0]' : 0.130177}", "{'[0, 4, 3, 2, 6, 3, 1, 1, 5, 17, 25, 0, 1, 0, 0, 0, 1, 0]' : 0.129891}", "{'[0, 4, 3, 2, 6, 3, 1, 1, 5, 17, 25, 0, 1, 0, 0, 0, 1, 0]' : 0.130141}", "{'[0, 4, 3, 2, 6, 3, 1, 1, 5, 17, 25, 0, 1, 0, 0, 0, 1, 0]' : 0.129716}", "{'[0, 4, 3, 2, 6, 3, 1, 1, 5, 17, 25, 0, 1, 0, 0, 0, 1, 0]' : 0.129845}", "{'[0, 4, 3, 2, 6, 3, 1, 1, 5, 17, 25, 0, 1, 0, 0, 0, 1, 0]' : 0.130085}", "{'[0, 4, 3, 2, 6, 3, 1, 1, 5, 17, 25, 0, 1, 0, 0, 0, 1, 0]' : 0.130065}", "{'[0, 4, 3, 2, 6, 3, 1, 1, 5, 17, 25, 0, 1, 0, 0, 0, 1, 0]' : 0.130085}", "{'[0, 4, 3, 2, 6, 3, 1, 1, 5, 17, 25, 0, 1, 0, 0, 0, 1, 0]' : 0.130132}", "{'[0, 4, 3, 2, 6, 3, 1, 1, 5, 17, 25, 0, 1, 0, 0, 0, 1, 0]' : 0.129915}", "{'[0, 4, 3, 2, 6, 3, 1, 1, 5, 17, 25, 0, 1, 0, 0, 0, 1, 0]' : 0.13033}", "{'[0, 4, 3, 2, 6, 3, 1, 1, 5, 17, 25, 0, 1, 0, 0, 0, 1, 0]' : 0.12981}", "{'[0, 4, 3, 2, 6, 3, 1, 1, 5, 17, 25, 0, 1, 0, 0, 0, 1, 0]' : 0.129839}", "{'[0, 4, 3, 2, 6, 3, 1, 1, 5, 17, 25, 0, 1, 0, 0, 0, 1, 0]' : 0.12985}", "{'[0, 4, 3, 2, 6, 3, 1, 1, 5, 17, 25, 0, 1, 0, 0, 0, 1, 0]' : 0.130078}", "{'[0, 4, 3, 2, 6, 3, 1, 1, 5, 17, 25, 0, 1, 0, 0, 0, 1, 0]' : 0.130314}", "{'[0, 4, 3, 2, 6, 3, 1, 1, 5, 17, 25, 0, 1, 0, 0, 0, 1, 0]' : 0.130303}", "{'[0, 4, 3, 2, 6, 3, 1, 1, 5, 17, 25, 0, 1, 0, 0, 0, 1, 0]' : 0.129995}", "{'[0, 4, 3, 2, 6, 3, 1, 1, 5, 17, 25, 0, 1, 0, 0, 0, 1, 0]' : 0.130064}", "{'[0, 4, 3, 2, 6, 3, 1, 1, 5, 17, 25, 0, 1, 0, 0, 0, 1, 0]' : 0.129714}"]
returning from 'run': {'[0, 4, 3, 2, 6, 3, 1, 1, 5, 17, 25, 0, 1, 0, 0, 0, 1, 0]': ([0.130171, 0.132493, 0.129995, 0.130003, 0.130067, 0.129924, 0.129748, 0.130028, 0.130232, 0.129923, 0.130177, 0.129891, 0.130141, 0.129716, 0.129845, 0.130085, 0.130065, 0.130085, 0.130132, 0.129915, 0.13033, 0.12981, 0.129839, 0.12985, 0.130078, 0.130314, 0.130303, 0.129995, 0.130064, 0.129714], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 4, 3, 2, 6, 3, 1, 1, 5, 17, 25, 0, 1, 0, 0, 0, 1, 0]': ([0.130171, 0.132493, 0.129995, 0.130003, 0.130067, 0.129924, 0.129748, 0.130028, 0.130232, 0.129923, 0.130177, 0.129891, 0.130141, 0.129716, 0.129845, 0.130085, 0.130065, 0.130085, 0.130132, 0.129915, 0.13033, 0.12981, 0.129839, 0.12985, 0.130078, 0.130314, 0.130303, 0.129995, 0.130064, 0.129714], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	43
        Max loop nest depth: 	5
        Additions: 		734
        Multiplications: 	238
        Divisions: 		0
        Logical: 		0
        Reads: 			1439
        Writes: 		283
        Comparisons:		43
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest25.exe __orio_perftest25.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest25.exe  
Program Test Output: 
{'[0, 0, 1, 6, 1, 3, 0, 1, 29, 5, 6, 0, 0, 1, 0, 1, 0, 0]' : 0.239328}
{'[0, 0, 1, 6, 1, 3, 0, 1, 29, 5, 6, 0, 0, 1, 0, 1, 0, 0]' : 0.23926}
{'[0, 0, 1, 6, 1, 3, 0, 1, 29, 5, 6, 0, 0, 1, 0, 1, 0, 0]' : 0.214358}
{'[0, 0, 1, 6, 1, 3, 0, 1, 29, 5, 6, 0, 0, 1, 0, 1, 0, 0]' : 0.202209}
{'[0, 0, 1, 6, 1, 3, 0, 1, 29, 5, 6, 0, 0, 1, 0, 1, 0, 0]' : 0.202128}
{'[0, 0, 1, 6, 1, 3, 0, 1, 29, 5, 6, 0, 0, 1, 0, 1, 0, 0]' : 0.20223}
{'[0, 0, 1, 6, 1, 3, 0, 1, 29, 5, 6, 0, 0, 1, 0, 1, 0, 0]' : 0.202335}
{'[0, 0, 1, 6, 1, 3, 0, 1, 29, 5, 6, 0, 0, 1, 0, 1, 0, 0]' : 0.202325}
{'[0, 0, 1, 6, 1, 3, 0, 1, 29, 5, 6, 0, 0, 1, 0, 1, 0, 0]' : 0.202058}
{'[0, 0, 1, 6, 1, 3, 0, 1, 29, 5, 6, 0, 0, 1, 0, 1, 0, 0]' : 0.202264}
{'[0, 0, 1, 6, 1, 3, 0, 1, 29, 5, 6, 0, 0, 1, 0, 1, 0, 0]' : 0.202056}
{'[0, 0, 1, 6, 1, 3, 0, 1, 29, 5, 6, 0, 0, 1, 0, 1, 0, 0]' : 0.202389}
{'[0, 0, 1, 6, 1, 3, 0, 1, 29, 5, 6, 0, 0, 1, 0, 1, 0, 0]' : 0.202063}
{'[0, 0, 1, 6, 1, 3, 0, 1, 29, 5, 6, 0, 0, 1, 0, 1, 0, 0]' : 0.202314}
{'[0, 0, 1, 6, 1, 3, 0, 1, 29, 5, 6, 0, 0, 1, 0, 1, 0, 0]' : 0.202295}
{'[0, 0, 1, 6, 1, 3, 0, 1, 29, 5, 6, 0, 0, 1, 0, 1, 0, 0]' : 0.201974}
{'[0, 0, 1, 6, 1, 3, 0, 1, 29, 5, 6, 0, 0, 1, 0, 1, 0, 0]' : 0.202215}
{'[0, 0, 1, 6, 1, 3, 0, 1, 29, 5, 6, 0, 0, 1, 0, 1, 0, 0]' : 0.20238}
{'[0, 0, 1, 6, 1, 3, 0, 1, 29, 5, 6, 0, 0, 1, 0, 1, 0, 0]' : 0.202036}
{'[0, 0, 1, 6, 1, 3, 0, 1, 29, 5, 6, 0, 0, 1, 0, 1, 0, 0]' : 0.20232}
{'[0, 0, 1, 6, 1, 3, 0, 1, 29, 5, 6, 0, 0, 1, 0, 1, 0, 0]' : 0.20227}
{'[0, 0, 1, 6, 1, 3, 0, 1, 29, 5, 6, 0, 0, 1, 0, 1, 0, 0]' : 0.202022}
{'[0, 0, 1, 6, 1, 3, 0, 1, 29, 5, 6, 0, 0, 1, 0, 1, 0, 0]' : 0.202506}
{'[0, 0, 1, 6, 1, 3, 0, 1, 29, 5, 6, 0, 0, 1, 0, 1, 0, 0]' : 0.202393}
{'[0, 0, 1, 6, 1, 3, 0, 1, 29, 5, 6, 0, 0, 1, 0, 1, 0, 0]' : 0.202097}
{'[0, 0, 1, 6, 1, 3, 0, 1, 29, 5, 6, 0, 0, 1, 0, 1, 0, 0]' : 0.201971}
{'[0, 0, 1, 6, 1, 3, 0, 1, 29, 5, 6, 0, 0, 1, 0, 1, 0, 0]' : 0.201995}
{'[0, 0, 1, 6, 1, 3, 0, 1, 29, 5, 6, 0, 0, 1, 0, 1, 0, 0]' : 0.202488}
{'[0, 0, 1, 6, 1, 3, 0, 1, 29, 5, 6, 0, 0, 1, 0, 1, 0, 0]' : 0.20246}
{'[0, 0, 1, 6, 1, 3, 0, 1, 29, 5, 6, 0, 0, 1, 0, 1, 0, 0]' : 0.20217}

out:
 ["{'[0, 0, 1, 6, 1, 3, 0, 1, 29, 5, 6, 0, 0, 1, 0, 1, 0, 0]' : 0.239328}", "{'[0, 0, 1, 6, 1, 3, 0, 1, 29, 5, 6, 0, 0, 1, 0, 1, 0, 0]' : 0.23926}", "{'[0, 0, 1, 6, 1, 3, 0, 1, 29, 5, 6, 0, 0, 1, 0, 1, 0, 0]' : 0.214358}", "{'[0, 0, 1, 6, 1, 3, 0, 1, 29, 5, 6, 0, 0, 1, 0, 1, 0, 0]' : 0.202209}", "{'[0, 0, 1, 6, 1, 3, 0, 1, 29, 5, 6, 0, 0, 1, 0, 1, 0, 0]' : 0.202128}", "{'[0, 0, 1, 6, 1, 3, 0, 1, 29, 5, 6, 0, 0, 1, 0, 1, 0, 0]' : 0.20223}", "{'[0, 0, 1, 6, 1, 3, 0, 1, 29, 5, 6, 0, 0, 1, 0, 1, 0, 0]' : 0.202335}", "{'[0, 0, 1, 6, 1, 3, 0, 1, 29, 5, 6, 0, 0, 1, 0, 1, 0, 0]' : 0.202325}", "{'[0, 0, 1, 6, 1, 3, 0, 1, 29, 5, 6, 0, 0, 1, 0, 1, 0, 0]' : 0.202058}", "{'[0, 0, 1, 6, 1, 3, 0, 1, 29, 5, 6, 0, 0, 1, 0, 1, 0, 0]' : 0.202264}", "{'[0, 0, 1, 6, 1, 3, 0, 1, 29, 5, 6, 0, 0, 1, 0, 1, 0, 0]' : 0.202056}", "{'[0, 0, 1, 6, 1, 3, 0, 1, 29, 5, 6, 0, 0, 1, 0, 1, 0, 0]' : 0.202389}", "{'[0, 0, 1, 6, 1, 3, 0, 1, 29, 5, 6, 0, 0, 1, 0, 1, 0, 0]' : 0.202063}", "{'[0, 0, 1, 6, 1, 3, 0, 1, 29, 5, 6, 0, 0, 1, 0, 1, 0, 0]' : 0.202314}", "{'[0, 0, 1, 6, 1, 3, 0, 1, 29, 5, 6, 0, 0, 1, 0, 1, 0, 0]' : 0.202295}", "{'[0, 0, 1, 6, 1, 3, 0, 1, 29, 5, 6, 0, 0, 1, 0, 1, 0, 0]' : 0.201974}", "{'[0, 0, 1, 6, 1, 3, 0, 1, 29, 5, 6, 0, 0, 1, 0, 1, 0, 0]' : 0.202215}", "{'[0, 0, 1, 6, 1, 3, 0, 1, 29, 5, 6, 0, 0, 1, 0, 1, 0, 0]' : 0.20238}", "{'[0, 0, 1, 6, 1, 3, 0, 1, 29, 5, 6, 0, 0, 1, 0, 1, 0, 0]' : 0.202036}", "{'[0, 0, 1, 6, 1, 3, 0, 1, 29, 5, 6, 0, 0, 1, 0, 1, 0, 0]' : 0.20232}", "{'[0, 0, 1, 6, 1, 3, 0, 1, 29, 5, 6, 0, 0, 1, 0, 1, 0, 0]' : 0.20227}", "{'[0, 0, 1, 6, 1, 3, 0, 1, 29, 5, 6, 0, 0, 1, 0, 1, 0, 0]' : 0.202022}", "{'[0, 0, 1, 6, 1, 3, 0, 1, 29, 5, 6, 0, 0, 1, 0, 1, 0, 0]' : 0.202506}", "{'[0, 0, 1, 6, 1, 3, 0, 1, 29, 5, 6, 0, 0, 1, 0, 1, 0, 0]' : 0.202393}", "{'[0, 0, 1, 6, 1, 3, 0, 1, 29, 5, 6, 0, 0, 1, 0, 1, 0, 0]' : 0.202097}", "{'[0, 0, 1, 6, 1, 3, 0, 1, 29, 5, 6, 0, 0, 1, 0, 1, 0, 0]' : 0.201971}", "{'[0, 0, 1, 6, 1, 3, 0, 1, 29, 5, 6, 0, 0, 1, 0, 1, 0, 0]' : 0.201995}", "{'[0, 0, 1, 6, 1, 3, 0, 1, 29, 5, 6, 0, 0, 1, 0, 1, 0, 0]' : 0.202488}", "{'[0, 0, 1, 6, 1, 3, 0, 1, 29, 5, 6, 0, 0, 1, 0, 1, 0, 0]' : 0.20246}", "{'[0, 0, 1, 6, 1, 3, 0, 1, 29, 5, 6, 0, 0, 1, 0, 1, 0, 0]' : 0.20217}"]
returning from 'run': {'[0, 0, 1, 6, 1, 3, 0, 1, 29, 5, 6, 0, 0, 1, 0, 1, 0, 0]': ([0.239328, 0.23926, 0.214358, 0.202209, 0.202128, 0.20223, 0.202335, 0.202325, 0.202058, 0.202264, 0.202056, 0.202389, 0.202063, 0.202314, 0.202295, 0.201974, 0.202215, 0.20238, 0.202036, 0.20232, 0.20227, 0.202022, 0.202506, 0.202393, 0.202097, 0.201971, 0.201995, 0.202488, 0.20246, 0.20217], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 1, 6, 1, 3, 0, 1, 29, 5, 6, 0, 0, 1, 0, 1, 0, 0]': ([0.239328, 0.23926, 0.214358, 0.202209, 0.202128, 0.20223, 0.202335, 0.202325, 0.202058, 0.202264, 0.202056, 0.202389, 0.202063, 0.202314, 0.202295, 0.201974, 0.202215, 0.20238, 0.202036, 0.20232, 0.20227, 0.202022, 0.202506, 0.202393, 0.202097, 0.201971, 0.201995, 0.202488, 0.20246, 0.20217], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	27
        Max loop nest depth: 	5
        Additions: 		1167
        Multiplications: 	504
        Divisions: 		0
        Logical: 		0
        Reads: 			2279
        Writes: 		411
        Comparisons:		27
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest26.exe __orio_perftest26.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest26.exe  
Program Test Output: 
{'[6, 6, 0, 0, 5, 0, 0, 1, 21, 5, 1, 0, 0, 2, 0, 1, 0, 1]' : 0.117959}
{'[6, 6, 0, 0, 5, 0, 0, 1, 21, 5, 1, 0, 0, 2, 0, 1, 0, 1]' : 0.110975}
{'[6, 6, 0, 0, 5, 0, 0, 1, 21, 5, 1, 0, 0, 2, 0, 1, 0, 1]' : 0.103213}
{'[6, 6, 0, 0, 5, 0, 0, 1, 21, 5, 1, 0, 0, 2, 0, 1, 0, 1]' : 0.103199}
{'[6, 6, 0, 0, 5, 0, 0, 1, 21, 5, 1, 0, 0, 2, 0, 1, 0, 1]' : 0.103137}
{'[6, 6, 0, 0, 5, 0, 0, 1, 21, 5, 1, 0, 0, 2, 0, 1, 0, 1]' : 0.103139}
{'[6, 6, 0, 0, 5, 0, 0, 1, 21, 5, 1, 0, 0, 2, 0, 1, 0, 1]' : 0.103114}
{'[6, 6, 0, 0, 5, 0, 0, 1, 21, 5, 1, 0, 0, 2, 0, 1, 0, 1]' : 0.103094}
{'[6, 6, 0, 0, 5, 0, 0, 1, 21, 5, 1, 0, 0, 2, 0, 1, 0, 1]' : 0.10317}
{'[6, 6, 0, 0, 5, 0, 0, 1, 21, 5, 1, 0, 0, 2, 0, 1, 0, 1]' : 0.105641}
{'[6, 6, 0, 0, 5, 0, 0, 1, 21, 5, 1, 0, 0, 2, 0, 1, 0, 1]' : 0.106374}
{'[6, 6, 0, 0, 5, 0, 0, 1, 21, 5, 1, 0, 0, 2, 0, 1, 0, 1]' : 0.106281}
{'[6, 6, 0, 0, 5, 0, 0, 1, 21, 5, 1, 0, 0, 2, 0, 1, 0, 1]' : 0.106299}
{'[6, 6, 0, 0, 5, 0, 0, 1, 21, 5, 1, 0, 0, 2, 0, 1, 0, 1]' : 0.106342}
{'[6, 6, 0, 0, 5, 0, 0, 1, 21, 5, 1, 0, 0, 2, 0, 1, 0, 1]' : 0.106365}
{'[6, 6, 0, 0, 5, 0, 0, 1, 21, 5, 1, 0, 0, 2, 0, 1, 0, 1]' : 0.106309}
{'[6, 6, 0, 0, 5, 0, 0, 1, 21, 5, 1, 0, 0, 2, 0, 1, 0, 1]' : 0.106215}
{'[6, 6, 0, 0, 5, 0, 0, 1, 21, 5, 1, 0, 0, 2, 0, 1, 0, 1]' : 0.106349}
{'[6, 6, 0, 0, 5, 0, 0, 1, 21, 5, 1, 0, 0, 2, 0, 1, 0, 1]' : 0.106354}
{'[6, 6, 0, 0, 5, 0, 0, 1, 21, 5, 1, 0, 0, 2, 0, 1, 0, 1]' : 0.106527}
{'[6, 6, 0, 0, 5, 0, 0, 1, 21, 5, 1, 0, 0, 2, 0, 1, 0, 1]' : 0.106296}
{'[6, 6, 0, 0, 5, 0, 0, 1, 21, 5, 1, 0, 0, 2, 0, 1, 0, 1]' : 0.106323}
{'[6, 6, 0, 0, 5, 0, 0, 1, 21, 5, 1, 0, 0, 2, 0, 1, 0, 1]' : 0.106292}
{'[6, 6, 0, 0, 5, 0, 0, 1, 21, 5, 1, 0, 0, 2, 0, 1, 0, 1]' : 0.106326}
{'[6, 6, 0, 0, 5, 0, 0, 1, 21, 5, 1, 0, 0, 2, 0, 1, 0, 1]' : 0.106334}
{'[6, 6, 0, 0, 5, 0, 0, 1, 21, 5, 1, 0, 0, 2, 0, 1, 0, 1]' : 0.106317}
{'[6, 6, 0, 0, 5, 0, 0, 1, 21, 5, 1, 0, 0, 2, 0, 1, 0, 1]' : 0.106366}
{'[6, 6, 0, 0, 5, 0, 0, 1, 21, 5, 1, 0, 0, 2, 0, 1, 0, 1]' : 0.106303}
{'[6, 6, 0, 0, 5, 0, 0, 1, 21, 5, 1, 0, 0, 2, 0, 1, 0, 1]' : 0.105113}
{'[6, 6, 0, 0, 5, 0, 0, 1, 21, 5, 1, 0, 0, 2, 0, 1, 0, 1]' : 0.103184}

out:
 ["{'[6, 6, 0, 0, 5, 0, 0, 1, 21, 5, 1, 0, 0, 2, 0, 1, 0, 1]' : 0.117959}", "{'[6, 6, 0, 0, 5, 0, 0, 1, 21, 5, 1, 0, 0, 2, 0, 1, 0, 1]' : 0.110975}", "{'[6, 6, 0, 0, 5, 0, 0, 1, 21, 5, 1, 0, 0, 2, 0, 1, 0, 1]' : 0.103213}", "{'[6, 6, 0, 0, 5, 0, 0, 1, 21, 5, 1, 0, 0, 2, 0, 1, 0, 1]' : 0.103199}", "{'[6, 6, 0, 0, 5, 0, 0, 1, 21, 5, 1, 0, 0, 2, 0, 1, 0, 1]' : 0.103137}", "{'[6, 6, 0, 0, 5, 0, 0, 1, 21, 5, 1, 0, 0, 2, 0, 1, 0, 1]' : 0.103139}", "{'[6, 6, 0, 0, 5, 0, 0, 1, 21, 5, 1, 0, 0, 2, 0, 1, 0, 1]' : 0.103114}", "{'[6, 6, 0, 0, 5, 0, 0, 1, 21, 5, 1, 0, 0, 2, 0, 1, 0, 1]' : 0.103094}", "{'[6, 6, 0, 0, 5, 0, 0, 1, 21, 5, 1, 0, 0, 2, 0, 1, 0, 1]' : 0.10317}", "{'[6, 6, 0, 0, 5, 0, 0, 1, 21, 5, 1, 0, 0, 2, 0, 1, 0, 1]' : 0.105641}", "{'[6, 6, 0, 0, 5, 0, 0, 1, 21, 5, 1, 0, 0, 2, 0, 1, 0, 1]' : 0.106374}", "{'[6, 6, 0, 0, 5, 0, 0, 1, 21, 5, 1, 0, 0, 2, 0, 1, 0, 1]' : 0.106281}", "{'[6, 6, 0, 0, 5, 0, 0, 1, 21, 5, 1, 0, 0, 2, 0, 1, 0, 1]' : 0.106299}", "{'[6, 6, 0, 0, 5, 0, 0, 1, 21, 5, 1, 0, 0, 2, 0, 1, 0, 1]' : 0.106342}", "{'[6, 6, 0, 0, 5, 0, 0, 1, 21, 5, 1, 0, 0, 2, 0, 1, 0, 1]' : 0.106365}", "{'[6, 6, 0, 0, 5, 0, 0, 1, 21, 5, 1, 0, 0, 2, 0, 1, 0, 1]' : 0.106309}", "{'[6, 6, 0, 0, 5, 0, 0, 1, 21, 5, 1, 0, 0, 2, 0, 1, 0, 1]' : 0.106215}", "{'[6, 6, 0, 0, 5, 0, 0, 1, 21, 5, 1, 0, 0, 2, 0, 1, 0, 1]' : 0.106349}", "{'[6, 6, 0, 0, 5, 0, 0, 1, 21, 5, 1, 0, 0, 2, 0, 1, 0, 1]' : 0.106354}", "{'[6, 6, 0, 0, 5, 0, 0, 1, 21, 5, 1, 0, 0, 2, 0, 1, 0, 1]' : 0.106527}", "{'[6, 6, 0, 0, 5, 0, 0, 1, 21, 5, 1, 0, 0, 2, 0, 1, 0, 1]' : 0.106296}", "{'[6, 6, 0, 0, 5, 0, 0, 1, 21, 5, 1, 0, 0, 2, 0, 1, 0, 1]' : 0.106323}", "{'[6, 6, 0, 0, 5, 0, 0, 1, 21, 5, 1, 0, 0, 2, 0, 1, 0, 1]' : 0.106292}", "{'[6, 6, 0, 0, 5, 0, 0, 1, 21, 5, 1, 0, 0, 2, 0, 1, 0, 1]' : 0.106326}", "{'[6, 6, 0, 0, 5, 0, 0, 1, 21, 5, 1, 0, 0, 2, 0, 1, 0, 1]' : 0.106334}", "{'[6, 6, 0, 0, 5, 0, 0, 1, 21, 5, 1, 0, 0, 2, 0, 1, 0, 1]' : 0.106317}", "{'[6, 6, 0, 0, 5, 0, 0, 1, 21, 5, 1, 0, 0, 2, 0, 1, 0, 1]' : 0.106366}", "{'[6, 6, 0, 0, 5, 0, 0, 1, 21, 5, 1, 0, 0, 2, 0, 1, 0, 1]' : 0.106303}", "{'[6, 6, 0, 0, 5, 0, 0, 1, 21, 5, 1, 0, 0, 2, 0, 1, 0, 1]' : 0.105113}", "{'[6, 6, 0, 0, 5, 0, 0, 1, 21, 5, 1, 0, 0, 2, 0, 1, 0, 1]' : 0.103184}"]
returning from 'run': {'[6, 6, 0, 0, 5, 0, 0, 1, 21, 5, 1, 0, 0, 2, 0, 1, 0, 1]': ([0.117959, 0.110975, 0.103213, 0.103199, 0.103137, 0.103139, 0.103114, 0.103094, 0.10317, 0.105641, 0.106374, 0.106281, 0.106299, 0.106342, 0.106365, 0.106309, 0.106215, 0.106349, 0.106354, 0.106527, 0.106296, 0.106323, 0.106292, 0.106326, 0.106334, 0.106317, 0.106366, 0.106303, 0.105113, 0.103184], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 0, 0, 5, 0, 0, 1, 21, 5, 1, 0, 0, 2, 0, 1, 0, 1]': ([0.117959, 0.110975, 0.103213, 0.103199, 0.103137, 0.103139, 0.103114, 0.103094, 0.10317, 0.105641, 0.106374, 0.106281, 0.106299, 0.106342, 0.106365, 0.106309, 0.106215, 0.106349, 0.106354, 0.106527, 0.106296, 0.106323, 0.106292, 0.106326, 0.106334, 0.106317, 0.106366, 0.106303, 0.105113, 0.103184], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = iii
Code stats:
        Number of loops: 	23
        Max loop nest depth: 	5
        Additions: 		363
        Multiplications: 	132
        Divisions: 		0
        Logical: 		0
        Reads: 			933
        Writes: 		226
        Comparisons:		23
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest27.exe __orio_perftest27.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest27.exe  
Program Test Output: 
{'[4, 2, 5, 2, 1, 6, 1, 1, 29, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.164703}
{'[4, 2, 5, 2, 1, 6, 1, 1, 29, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.164948}
{'[4, 2, 5, 2, 1, 6, 1, 1, 29, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.164675}
{'[4, 2, 5, 2, 1, 6, 1, 1, 29, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.160393}
{'[4, 2, 5, 2, 1, 6, 1, 1, 29, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.146216}
{'[4, 2, 5, 2, 1, 6, 1, 1, 29, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.146719}
{'[4, 2, 5, 2, 1, 6, 1, 1, 29, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.145893}
{'[4, 2, 5, 2, 1, 6, 1, 1, 29, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.145728}
{'[4, 2, 5, 2, 1, 6, 1, 1, 29, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.145157}
{'[4, 2, 5, 2, 1, 6, 1, 1, 29, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.145586}
{'[4, 2, 5, 2, 1, 6, 1, 1, 29, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.146079}
{'[4, 2, 5, 2, 1, 6, 1, 1, 29, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.145896}
{'[4, 2, 5, 2, 1, 6, 1, 1, 29, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.14572}
{'[4, 2, 5, 2, 1, 6, 1, 1, 29, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.146341}
{'[4, 2, 5, 2, 1, 6, 1, 1, 29, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.146219}
{'[4, 2, 5, 2, 1, 6, 1, 1, 29, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.146057}
{'[4, 2, 5, 2, 1, 6, 1, 1, 29, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.145899}
{'[4, 2, 5, 2, 1, 6, 1, 1, 29, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.146201}
{'[4, 2, 5, 2, 1, 6, 1, 1, 29, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.146468}
{'[4, 2, 5, 2, 1, 6, 1, 1, 29, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.1461}
{'[4, 2, 5, 2, 1, 6, 1, 1, 29, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.14614}
{'[4, 2, 5, 2, 1, 6, 1, 1, 29, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.145758}
{'[4, 2, 5, 2, 1, 6, 1, 1, 29, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.146256}
{'[4, 2, 5, 2, 1, 6, 1, 1, 29, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.145646}
{'[4, 2, 5, 2, 1, 6, 1, 1, 29, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.146325}
{'[4, 2, 5, 2, 1, 6, 1, 1, 29, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.146811}
{'[4, 2, 5, 2, 1, 6, 1, 1, 29, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.145588}
{'[4, 2, 5, 2, 1, 6, 1, 1, 29, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.146171}
{'[4, 2, 5, 2, 1, 6, 1, 1, 29, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.146387}
{'[4, 2, 5, 2, 1, 6, 1, 1, 29, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.146063}

out:
 ["{'[4, 2, 5, 2, 1, 6, 1, 1, 29, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.164703}", "{'[4, 2, 5, 2, 1, 6, 1, 1, 29, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.164948}", "{'[4, 2, 5, 2, 1, 6, 1, 1, 29, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.164675}", "{'[4, 2, 5, 2, 1, 6, 1, 1, 29, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.160393}", "{'[4, 2, 5, 2, 1, 6, 1, 1, 29, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.146216}", "{'[4, 2, 5, 2, 1, 6, 1, 1, 29, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.146719}", "{'[4, 2, 5, 2, 1, 6, 1, 1, 29, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.145893}", "{'[4, 2, 5, 2, 1, 6, 1, 1, 29, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.145728}", "{'[4, 2, 5, 2, 1, 6, 1, 1, 29, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.145157}", "{'[4, 2, 5, 2, 1, 6, 1, 1, 29, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.145586}", "{'[4, 2, 5, 2, 1, 6, 1, 1, 29, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.146079}", "{'[4, 2, 5, 2, 1, 6, 1, 1, 29, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.145896}", "{'[4, 2, 5, 2, 1, 6, 1, 1, 29, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.14572}", "{'[4, 2, 5, 2, 1, 6, 1, 1, 29, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.146341}", "{'[4, 2, 5, 2, 1, 6, 1, 1, 29, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.146219}", "{'[4, 2, 5, 2, 1, 6, 1, 1, 29, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.146057}", "{'[4, 2, 5, 2, 1, 6, 1, 1, 29, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.145899}", "{'[4, 2, 5, 2, 1, 6, 1, 1, 29, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.146201}", "{'[4, 2, 5, 2, 1, 6, 1, 1, 29, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.146468}", "{'[4, 2, 5, 2, 1, 6, 1, 1, 29, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.1461}", "{'[4, 2, 5, 2, 1, 6, 1, 1, 29, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.14614}", "{'[4, 2, 5, 2, 1, 6, 1, 1, 29, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.145758}", "{'[4, 2, 5, 2, 1, 6, 1, 1, 29, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.146256}", "{'[4, 2, 5, 2, 1, 6, 1, 1, 29, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.145646}", "{'[4, 2, 5, 2, 1, 6, 1, 1, 29, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.146325}", "{'[4, 2, 5, 2, 1, 6, 1, 1, 29, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.146811}", "{'[4, 2, 5, 2, 1, 6, 1, 1, 29, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.145588}", "{'[4, 2, 5, 2, 1, 6, 1, 1, 29, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.146171}", "{'[4, 2, 5, 2, 1, 6, 1, 1, 29, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.146387}", "{'[4, 2, 5, 2, 1, 6, 1, 1, 29, 0, 0, 0, 2, 0, 0, 1, 0, 1]' : 0.146063}"]
returning from 'run': {'[4, 2, 5, 2, 1, 6, 1, 1, 29, 0, 0, 0, 2, 0, 0, 1, 0, 1]': ([0.164703, 0.164948, 0.164675, 0.160393, 0.146216, 0.146719, 0.145893, 0.145728, 0.145157, 0.145586, 0.146079, 0.145896, 0.14572, 0.146341, 0.146219, 0.146057, 0.145899, 0.146201, 0.146468, 0.1461, 0.14614, 0.145758, 0.146256, 0.145646, 0.146325, 0.146811, 0.145588, 0.146171, 0.146387, 0.146063], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 2, 5, 2, 1, 6, 1, 1, 29, 0, 0, 0, 2, 0, 0, 1, 0, 1]': ([0.164703, 0.164948, 0.164675, 0.160393, 0.146216, 0.146719, 0.145893, 0.145728, 0.145157, 0.145586, 0.146079, 0.145896, 0.14572, 0.146341, 0.146219, 0.146057, 0.145899, 0.146201, 0.146468, 0.1461, 0.14614, 0.145758, 0.146256, 0.145646, 0.146325, 0.146811, 0.145588, 0.146171, 0.146387, 0.146063], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		272
        Multiplications: 	86
        Divisions: 		0
        Logical: 		0
        Reads: 			678
        Writes: 		167
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest28.exe __orio_perftest28.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest28.exe  
Program Test Output: 
{'[3, 0, 0, 2, 5, 3, 1, 0, 11, 0, 4, 3, 0, 0, 2, 1, 0, 1]' : 0.20668}
{'[3, 0, 0, 2, 5, 3, 1, 0, 11, 0, 4, 3, 0, 0, 2, 1, 0, 1]' : 0.206956}
{'[3, 0, 0, 2, 5, 3, 1, 0, 11, 0, 4, 3, 0, 0, 2, 1, 0, 1]' : 0.200478}
{'[3, 0, 0, 2, 5, 3, 1, 0, 11, 0, 4, 3, 0, 0, 2, 1, 0, 1]' : 0.174292}
{'[3, 0, 0, 2, 5, 3, 1, 0, 11, 0, 4, 3, 0, 0, 2, 1, 0, 1]' : 0.174289}
{'[3, 0, 0, 2, 5, 3, 1, 0, 11, 0, 4, 3, 0, 0, 2, 1, 0, 1]' : 0.174521}
{'[3, 0, 0, 2, 5, 3, 1, 0, 11, 0, 4, 3, 0, 0, 2, 1, 0, 1]' : 0.174425}
{'[3, 0, 0, 2, 5, 3, 1, 0, 11, 0, 4, 3, 0, 0, 2, 1, 0, 1]' : 0.174061}
{'[3, 0, 0, 2, 5, 3, 1, 0, 11, 0, 4, 3, 0, 0, 2, 1, 0, 1]' : 0.174117}
{'[3, 0, 0, 2, 5, 3, 1, 0, 11, 0, 4, 3, 0, 0, 2, 1, 0, 1]' : 0.17411}
{'[3, 0, 0, 2, 5, 3, 1, 0, 11, 0, 4, 3, 0, 0, 2, 1, 0, 1]' : 0.174221}
{'[3, 0, 0, 2, 5, 3, 1, 0, 11, 0, 4, 3, 0, 0, 2, 1, 0, 1]' : 0.174271}
{'[3, 0, 0, 2, 5, 3, 1, 0, 11, 0, 4, 3, 0, 0, 2, 1, 0, 1]' : 0.174262}
{'[3, 0, 0, 2, 5, 3, 1, 0, 11, 0, 4, 3, 0, 0, 2, 1, 0, 1]' : 0.174119}
{'[3, 0, 0, 2, 5, 3, 1, 0, 11, 0, 4, 3, 0, 0, 2, 1, 0, 1]' : 0.174298}
{'[3, 0, 0, 2, 5, 3, 1, 0, 11, 0, 4, 3, 0, 0, 2, 1, 0, 1]' : 0.17425}
{'[3, 0, 0, 2, 5, 3, 1, 0, 11, 0, 4, 3, 0, 0, 2, 1, 0, 1]' : 0.174178}
{'[3, 0, 0, 2, 5, 3, 1, 0, 11, 0, 4, 3, 0, 0, 2, 1, 0, 1]' : 0.174219}
{'[3, 0, 0, 2, 5, 3, 1, 0, 11, 0, 4, 3, 0, 0, 2, 1, 0, 1]' : 0.17427}
{'[3, 0, 0, 2, 5, 3, 1, 0, 11, 0, 4, 3, 0, 0, 2, 1, 0, 1]' : 0.17404}
{'[3, 0, 0, 2, 5, 3, 1, 0, 11, 0, 4, 3, 0, 0, 2, 1, 0, 1]' : 0.174195}
{'[3, 0, 0, 2, 5, 3, 1, 0, 11, 0, 4, 3, 0, 0, 2, 1, 0, 1]' : 0.174234}
{'[3, 0, 0, 2, 5, 3, 1, 0, 11, 0, 4, 3, 0, 0, 2, 1, 0, 1]' : 0.174157}
{'[3, 0, 0, 2, 5, 3, 1, 0, 11, 0, 4, 3, 0, 0, 2, 1, 0, 1]' : 0.174163}
{'[3, 0, 0, 2, 5, 3, 1, 0, 11, 0, 4, 3, 0, 0, 2, 1, 0, 1]' : 0.174444}
{'[3, 0, 0, 2, 5, 3, 1, 0, 11, 0, 4, 3, 0, 0, 2, 1, 0, 1]' : 0.174293}
{'[3, 0, 0, 2, 5, 3, 1, 0, 11, 0, 4, 3, 0, 0, 2, 1, 0, 1]' : 0.174407}
{'[3, 0, 0, 2, 5, 3, 1, 0, 11, 0, 4, 3, 0, 0, 2, 1, 0, 1]' : 0.174183}
{'[3, 0, 0, 2, 5, 3, 1, 0, 11, 0, 4, 3, 0, 0, 2, 1, 0, 1]' : 0.174087}
{'[3, 0, 0, 2, 5, 3, 1, 0, 11, 0, 4, 3, 0, 0, 2, 1, 0, 1]' : 0.174059}

out:
 ["{'[3, 0, 0, 2, 5, 3, 1, 0, 11, 0, 4, 3, 0, 0, 2, 1, 0, 1]' : 0.20668}", "{'[3, 0, 0, 2, 5, 3, 1, 0, 11, 0, 4, 3, 0, 0, 2, 1, 0, 1]' : 0.206956}", "{'[3, 0, 0, 2, 5, 3, 1, 0, 11, 0, 4, 3, 0, 0, 2, 1, 0, 1]' : 0.200478}", "{'[3, 0, 0, 2, 5, 3, 1, 0, 11, 0, 4, 3, 0, 0, 2, 1, 0, 1]' : 0.174292}", "{'[3, 0, 0, 2, 5, 3, 1, 0, 11, 0, 4, 3, 0, 0, 2, 1, 0, 1]' : 0.174289}", "{'[3, 0, 0, 2, 5, 3, 1, 0, 11, 0, 4, 3, 0, 0, 2, 1, 0, 1]' : 0.174521}", "{'[3, 0, 0, 2, 5, 3, 1, 0, 11, 0, 4, 3, 0, 0, 2, 1, 0, 1]' : 0.174425}", "{'[3, 0, 0, 2, 5, 3, 1, 0, 11, 0, 4, 3, 0, 0, 2, 1, 0, 1]' : 0.174061}", "{'[3, 0, 0, 2, 5, 3, 1, 0, 11, 0, 4, 3, 0, 0, 2, 1, 0, 1]' : 0.174117}", "{'[3, 0, 0, 2, 5, 3, 1, 0, 11, 0, 4, 3, 0, 0, 2, 1, 0, 1]' : 0.17411}", "{'[3, 0, 0, 2, 5, 3, 1, 0, 11, 0, 4, 3, 0, 0, 2, 1, 0, 1]' : 0.174221}", "{'[3, 0, 0, 2, 5, 3, 1, 0, 11, 0, 4, 3, 0, 0, 2, 1, 0, 1]' : 0.174271}", "{'[3, 0, 0, 2, 5, 3, 1, 0, 11, 0, 4, 3, 0, 0, 2, 1, 0, 1]' : 0.174262}", "{'[3, 0, 0, 2, 5, 3, 1, 0, 11, 0, 4, 3, 0, 0, 2, 1, 0, 1]' : 0.174119}", "{'[3, 0, 0, 2, 5, 3, 1, 0, 11, 0, 4, 3, 0, 0, 2, 1, 0, 1]' : 0.174298}", "{'[3, 0, 0, 2, 5, 3, 1, 0, 11, 0, 4, 3, 0, 0, 2, 1, 0, 1]' : 0.17425}", "{'[3, 0, 0, 2, 5, 3, 1, 0, 11, 0, 4, 3, 0, 0, 2, 1, 0, 1]' : 0.174178}", "{'[3, 0, 0, 2, 5, 3, 1, 0, 11, 0, 4, 3, 0, 0, 2, 1, 0, 1]' : 0.174219}", "{'[3, 0, 0, 2, 5, 3, 1, 0, 11, 0, 4, 3, 0, 0, 2, 1, 0, 1]' : 0.17427}", "{'[3, 0, 0, 2, 5, 3, 1, 0, 11, 0, 4, 3, 0, 0, 2, 1, 0, 1]' : 0.17404}", "{'[3, 0, 0, 2, 5, 3, 1, 0, 11, 0, 4, 3, 0, 0, 2, 1, 0, 1]' : 0.174195}", "{'[3, 0, 0, 2, 5, 3, 1, 0, 11, 0, 4, 3, 0, 0, 2, 1, 0, 1]' : 0.174234}", "{'[3, 0, 0, 2, 5, 3, 1, 0, 11, 0, 4, 3, 0, 0, 2, 1, 0, 1]' : 0.174157}", "{'[3, 0, 0, 2, 5, 3, 1, 0, 11, 0, 4, 3, 0, 0, 2, 1, 0, 1]' : 0.174163}", "{'[3, 0, 0, 2, 5, 3, 1, 0, 11, 0, 4, 3, 0, 0, 2, 1, 0, 1]' : 0.174444}", "{'[3, 0, 0, 2, 5, 3, 1, 0, 11, 0, 4, 3, 0, 0, 2, 1, 0, 1]' : 0.174293}", "{'[3, 0, 0, 2, 5, 3, 1, 0, 11, 0, 4, 3, 0, 0, 2, 1, 0, 1]' : 0.174407}", "{'[3, 0, 0, 2, 5, 3, 1, 0, 11, 0, 4, 3, 0, 0, 2, 1, 0, 1]' : 0.174183}", "{'[3, 0, 0, 2, 5, 3, 1, 0, 11, 0, 4, 3, 0, 0, 2, 1, 0, 1]' : 0.174087}", "{'[3, 0, 0, 2, 5, 3, 1, 0, 11, 0, 4, 3, 0, 0, 2, 1, 0, 1]' : 0.174059}"]
returning from 'run': {'[3, 0, 0, 2, 5, 3, 1, 0, 11, 0, 4, 3, 0, 0, 2, 1, 0, 1]': ([0.20668, 0.206956, 0.200478, 0.174292, 0.174289, 0.174521, 0.174425, 0.174061, 0.174117, 0.17411, 0.174221, 0.174271, 0.174262, 0.174119, 0.174298, 0.17425, 0.174178, 0.174219, 0.17427, 0.17404, 0.174195, 0.174234, 0.174157, 0.174163, 0.174444, 0.174293, 0.174407, 0.174183, 0.174087, 0.174059], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 0, 0, 2, 5, 3, 1, 0, 11, 0, 4, 3, 0, 0, 2, 1, 0, 1]': ([0.20668, 0.206956, 0.200478, 0.174292, 0.174289, 0.174521, 0.174425, 0.174061, 0.174117, 0.17411, 0.174221, 0.174271, 0.174262, 0.174119, 0.174298, 0.17425, 0.174178, 0.174219, 0.17427, 0.17404, 0.174195, 0.174234, 0.174157, 0.174163, 0.174444, 0.174293, 0.174407, 0.174183, 0.174087, 0.174059], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	6
        Additions: 		6767
        Multiplications: 	2046
        Divisions: 		0
        Logical: 		0
        Reads: 			10399
        Writes: 		1077
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest29.exe __orio_perftest29.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest29.exe  
Program Test Output: 
{'[2, 5, 2, 2, 0, 3, 0, 0, 0, 0, 14, 13, 2, 0, 0, 0, 1, 1]' : 0.319385}
{'[2, 5, 2, 2, 0, 3, 0, 0, 0, 0, 14, 13, 2, 0, 0, 0, 1, 1]' : 0.319611}
{'[2, 5, 2, 2, 0, 3, 0, 0, 0, 0, 14, 13, 2, 0, 0, 0, 1, 1]' : 0.319745}
{'[2, 5, 2, 2, 0, 3, 0, 0, 0, 0, 14, 13, 2, 0, 0, 0, 1, 1]' : 0.319596}
{'[2, 5, 2, 2, 0, 3, 0, 0, 0, 0, 14, 13, 2, 0, 0, 0, 1, 1]' : 0.319713}
{'[2, 5, 2, 2, 0, 3, 0, 0, 0, 0, 14, 13, 2, 0, 0, 0, 1, 1]' : 0.318571}
{'[2, 5, 2, 2, 0, 3, 0, 0, 0, 0, 14, 13, 2, 0, 0, 0, 1, 1]' : 0.309521}
{'[2, 5, 2, 2, 0, 3, 0, 0, 0, 0, 14, 13, 2, 0, 0, 0, 1, 1]' : 0.312197}
{'[2, 5, 2, 2, 0, 3, 0, 0, 0, 0, 14, 13, 2, 0, 0, 0, 1, 1]' : 0.318451}
{'[2, 5, 2, 2, 0, 3, 0, 0, 0, 0, 14, 13, 2, 0, 0, 0, 1, 1]' : 0.31844}
{'[2, 5, 2, 2, 0, 3, 0, 0, 0, 0, 14, 13, 2, 0, 0, 0, 1, 1]' : 0.318558}
{'[2, 5, 2, 2, 0, 3, 0, 0, 0, 0, 14, 13, 2, 0, 0, 0, 1, 1]' : 0.313581}
{'[2, 5, 2, 2, 0, 3, 0, 0, 0, 0, 14, 13, 2, 0, 0, 0, 1, 1]' : 0.316735}
{'[2, 5, 2, 2, 0, 3, 0, 0, 0, 0, 14, 13, 2, 0, 0, 0, 1, 1]' : 0.318328}
{'[2, 5, 2, 2, 0, 3, 0, 0, 0, 0, 14, 13, 2, 0, 0, 0, 1, 1]' : 0.318386}
{'[2, 5, 2, 2, 0, 3, 0, 0, 0, 0, 14, 13, 2, 0, 0, 0, 1, 1]' : 0.317999}
{'[2, 5, 2, 2, 0, 3, 0, 0, 0, 0, 14, 13, 2, 0, 0, 0, 1, 1]' : 0.31413}
{'[2, 5, 2, 2, 0, 3, 0, 0, 0, 0, 14, 13, 2, 0, 0, 0, 1, 1]' : 0.31854}
{'[2, 5, 2, 2, 0, 3, 0, 0, 0, 0, 14, 13, 2, 0, 0, 0, 1, 1]' : 0.317161}
{'[2, 5, 2, 2, 0, 3, 0, 0, 0, 0, 14, 13, 2, 0, 0, 0, 1, 1]' : 0.312528}
{'[2, 5, 2, 2, 0, 3, 0, 0, 0, 0, 14, 13, 2, 0, 0, 0, 1, 1]' : 0.317356}
{'[2, 5, 2, 2, 0, 3, 0, 0, 0, 0, 14, 13, 2, 0, 0, 0, 1, 1]' : 0.318224}
{'[2, 5, 2, 2, 0, 3, 0, 0, 0, 0, 14, 13, 2, 0, 0, 0, 1, 1]' : 0.31852}
{'[2, 5, 2, 2, 0, 3, 0, 0, 0, 0, 14, 13, 2, 0, 0, 0, 1, 1]' : 0.316188}
{'[2, 5, 2, 2, 0, 3, 0, 0, 0, 0, 14, 13, 2, 0, 0, 0, 1, 1]' : 0.313051}
{'[2, 5, 2, 2, 0, 3, 0, 0, 0, 0, 14, 13, 2, 0, 0, 0, 1, 1]' : 0.318455}
{'[2, 5, 2, 2, 0, 3, 0, 0, 0, 0, 14, 13, 2, 0, 0, 0, 1, 1]' : 0.318113}
{'[2, 5, 2, 2, 0, 3, 0, 0, 0, 0, 14, 13, 2, 0, 0, 0, 1, 1]' : 0.318326}
{'[2, 5, 2, 2, 0, 3, 0, 0, 0, 0, 14, 13, 2, 0, 0, 0, 1, 1]' : 0.318542}
{'[2, 5, 2, 2, 0, 3, 0, 0, 0, 0, 14, 13, 2, 0, 0, 0, 1, 1]' : 0.318493}

out:
 ["{'[2, 5, 2, 2, 0, 3, 0, 0, 0, 0, 14, 13, 2, 0, 0, 0, 1, 1]' : 0.319385}", "{'[2, 5, 2, 2, 0, 3, 0, 0, 0, 0, 14, 13, 2, 0, 0, 0, 1, 1]' : 0.319611}", "{'[2, 5, 2, 2, 0, 3, 0, 0, 0, 0, 14, 13, 2, 0, 0, 0, 1, 1]' : 0.319745}", "{'[2, 5, 2, 2, 0, 3, 0, 0, 0, 0, 14, 13, 2, 0, 0, 0, 1, 1]' : 0.319596}", "{'[2, 5, 2, 2, 0, 3, 0, 0, 0, 0, 14, 13, 2, 0, 0, 0, 1, 1]' : 0.319713}", "{'[2, 5, 2, 2, 0, 3, 0, 0, 0, 0, 14, 13, 2, 0, 0, 0, 1, 1]' : 0.318571}", "{'[2, 5, 2, 2, 0, 3, 0, 0, 0, 0, 14, 13, 2, 0, 0, 0, 1, 1]' : 0.309521}", "{'[2, 5, 2, 2, 0, 3, 0, 0, 0, 0, 14, 13, 2, 0, 0, 0, 1, 1]' : 0.312197}", "{'[2, 5, 2, 2, 0, 3, 0, 0, 0, 0, 14, 13, 2, 0, 0, 0, 1, 1]' : 0.318451}", "{'[2, 5, 2, 2, 0, 3, 0, 0, 0, 0, 14, 13, 2, 0, 0, 0, 1, 1]' : 0.31844}", "{'[2, 5, 2, 2, 0, 3, 0, 0, 0, 0, 14, 13, 2, 0, 0, 0, 1, 1]' : 0.318558}", "{'[2, 5, 2, 2, 0, 3, 0, 0, 0, 0, 14, 13, 2, 0, 0, 0, 1, 1]' : 0.313581}", "{'[2, 5, 2, 2, 0, 3, 0, 0, 0, 0, 14, 13, 2, 0, 0, 0, 1, 1]' : 0.316735}", "{'[2, 5, 2, 2, 0, 3, 0, 0, 0, 0, 14, 13, 2, 0, 0, 0, 1, 1]' : 0.318328}", "{'[2, 5, 2, 2, 0, 3, 0, 0, 0, 0, 14, 13, 2, 0, 0, 0, 1, 1]' : 0.318386}", "{'[2, 5, 2, 2, 0, 3, 0, 0, 0, 0, 14, 13, 2, 0, 0, 0, 1, 1]' : 0.317999}", "{'[2, 5, 2, 2, 0, 3, 0, 0, 0, 0, 14, 13, 2, 0, 0, 0, 1, 1]' : 0.31413}", "{'[2, 5, 2, 2, 0, 3, 0, 0, 0, 0, 14, 13, 2, 0, 0, 0, 1, 1]' : 0.31854}", "{'[2, 5, 2, 2, 0, 3, 0, 0, 0, 0, 14, 13, 2, 0, 0, 0, 1, 1]' : 0.317161}", "{'[2, 5, 2, 2, 0, 3, 0, 0, 0, 0, 14, 13, 2, 0, 0, 0, 1, 1]' : 0.312528}", "{'[2, 5, 2, 2, 0, 3, 0, 0, 0, 0, 14, 13, 2, 0, 0, 0, 1, 1]' : 0.317356}", "{'[2, 5, 2, 2, 0, 3, 0, 0, 0, 0, 14, 13, 2, 0, 0, 0, 1, 1]' : 0.318224}", "{'[2, 5, 2, 2, 0, 3, 0, 0, 0, 0, 14, 13, 2, 0, 0, 0, 1, 1]' : 0.31852}", "{'[2, 5, 2, 2, 0, 3, 0, 0, 0, 0, 14, 13, 2, 0, 0, 0, 1, 1]' : 0.316188}", "{'[2, 5, 2, 2, 0, 3, 0, 0, 0, 0, 14, 13, 2, 0, 0, 0, 1, 1]' : 0.313051}", "{'[2, 5, 2, 2, 0, 3, 0, 0, 0, 0, 14, 13, 2, 0, 0, 0, 1, 1]' : 0.318455}", "{'[2, 5, 2, 2, 0, 3, 0, 0, 0, 0, 14, 13, 2, 0, 0, 0, 1, 1]' : 0.318113}", "{'[2, 5, 2, 2, 0, 3, 0, 0, 0, 0, 14, 13, 2, 0, 0, 0, 1, 1]' : 0.318326}", "{'[2, 5, 2, 2, 0, 3, 0, 0, 0, 0, 14, 13, 2, 0, 0, 0, 1, 1]' : 0.318542}", "{'[2, 5, 2, 2, 0, 3, 0, 0, 0, 0, 14, 13, 2, 0, 0, 0, 1, 1]' : 0.318493}"]
returning from 'run': {'[2, 5, 2, 2, 0, 3, 0, 0, 0, 0, 14, 13, 2, 0, 0, 0, 1, 1]': ([0.319385, 0.319611, 0.319745, 0.319596, 0.319713, 0.318571, 0.309521, 0.312197, 0.318451, 0.31844, 0.318558, 0.313581, 0.316735, 0.318328, 0.318386, 0.317999, 0.31413, 0.31854, 0.317161, 0.312528, 0.317356, 0.318224, 0.31852, 0.316188, 0.313051, 0.318455, 0.318113, 0.318326, 0.318542, 0.318493], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 5, 2, 2, 0, 3, 0, 0, 0, 0, 14, 13, 2, 0, 0, 0, 1, 1]': ([0.319385, 0.319611, 0.319745, 0.319596, 0.319713, 0.318571, 0.309521, 0.312197, 0.318451, 0.31844, 0.318558, 0.313581, 0.316735, 0.318328, 0.318386, 0.317999, 0.31413, 0.31854, 0.317161, 0.312528, 0.317356, 0.318224, 0.31852, 0.316188, 0.313051, 0.318455, 0.318113, 0.318326, 0.318542, 0.318493], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	5
        Additions: 		6322
        Multiplications: 	1518
        Divisions: 		0
        Logical: 		0
        Reads: 			9119
        Writes: 		818
        Comparisons:		25
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest30.exe __orio_perftest30.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest30.exe  
Program Test Output: 
{'[4, 5, 6, 0, 5, 6, 0, 1, 1, 0, 1, 18, 2, 0, 0, 0, 0, 0]' : 0.270019}
{'[4, 5, 6, 0, 5, 6, 0, 1, 1, 0, 1, 18, 2, 0, 0, 0, 0, 0]' : 0.269819}
{'[4, 5, 6, 0, 5, 6, 0, 1, 1, 0, 1, 18, 2, 0, 0, 0, 0, 0]' : 0.232861}
{'[4, 5, 6, 0, 5, 6, 0, 1, 1, 0, 1, 18, 2, 0, 0, 0, 0, 0]' : 0.233203}
{'[4, 5, 6, 0, 5, 6, 0, 1, 1, 0, 1, 18, 2, 0, 0, 0, 0, 0]' : 0.235324}
{'[4, 5, 6, 0, 5, 6, 0, 1, 1, 0, 1, 18, 2, 0, 0, 0, 0, 0]' : 0.234173}
{'[4, 5, 6, 0, 5, 6, 0, 1, 1, 0, 1, 18, 2, 0, 0, 0, 0, 0]' : 0.235021}
{'[4, 5, 6, 0, 5, 6, 0, 1, 1, 0, 1, 18, 2, 0, 0, 0, 0, 0]' : 0.23146}
{'[4, 5, 6, 0, 5, 6, 0, 1, 1, 0, 1, 18, 2, 0, 0, 0, 0, 0]' : 0.239205}
{'[4, 5, 6, 0, 5, 6, 0, 1, 1, 0, 1, 18, 2, 0, 0, 0, 0, 0]' : 0.235401}
{'[4, 5, 6, 0, 5, 6, 0, 1, 1, 0, 1, 18, 2, 0, 0, 0, 0, 0]' : 0.234471}
{'[4, 5, 6, 0, 5, 6, 0, 1, 1, 0, 1, 18, 2, 0, 0, 0, 0, 0]' : 0.232448}
{'[4, 5, 6, 0, 5, 6, 0, 1, 1, 0, 1, 18, 2, 0, 0, 0, 0, 0]' : 0.236281}
{'[4, 5, 6, 0, 5, 6, 0, 1, 1, 0, 1, 18, 2, 0, 0, 0, 0, 0]' : 0.238268}
{'[4, 5, 6, 0, 5, 6, 0, 1, 1, 0, 1, 18, 2, 0, 0, 0, 0, 0]' : 0.231448}
{'[4, 5, 6, 0, 5, 6, 0, 1, 1, 0, 1, 18, 2, 0, 0, 0, 0, 0]' : 0.236827}
{'[4, 5, 6, 0, 5, 6, 0, 1, 1, 0, 1, 18, 2, 0, 0, 0, 0, 0]' : 0.233091}
{'[4, 5, 6, 0, 5, 6, 0, 1, 1, 0, 1, 18, 2, 0, 0, 0, 0, 0]' : 0.23843}
{'[4, 5, 6, 0, 5, 6, 0, 1, 1, 0, 1, 18, 2, 0, 0, 0, 0, 0]' : 0.233028}
{'[4, 5, 6, 0, 5, 6, 0, 1, 1, 0, 1, 18, 2, 0, 0, 0, 0, 0]' : 0.234613}
{'[4, 5, 6, 0, 5, 6, 0, 1, 1, 0, 1, 18, 2, 0, 0, 0, 0, 0]' : 0.234826}
{'[4, 5, 6, 0, 5, 6, 0, 1, 1, 0, 1, 18, 2, 0, 0, 0, 0, 0]' : 0.234952}
{'[4, 5, 6, 0, 5, 6, 0, 1, 1, 0, 1, 18, 2, 0, 0, 0, 0, 0]' : 0.235027}
{'[4, 5, 6, 0, 5, 6, 0, 1, 1, 0, 1, 18, 2, 0, 0, 0, 0, 0]' : 0.231785}
{'[4, 5, 6, 0, 5, 6, 0, 1, 1, 0, 1, 18, 2, 0, 0, 0, 0, 0]' : 0.237673}
{'[4, 5, 6, 0, 5, 6, 0, 1, 1, 0, 1, 18, 2, 0, 0, 0, 0, 0]' : 0.234792}
{'[4, 5, 6, 0, 5, 6, 0, 1, 1, 0, 1, 18, 2, 0, 0, 0, 0, 0]' : 0.237024}
{'[4, 5, 6, 0, 5, 6, 0, 1, 1, 0, 1, 18, 2, 0, 0, 0, 0, 0]' : 0.232389}
{'[4, 5, 6, 0, 5, 6, 0, 1, 1, 0, 1, 18, 2, 0, 0, 0, 0, 0]' : 0.235596}
{'[4, 5, 6, 0, 5, 6, 0, 1, 1, 0, 1, 18, 2, 0, 0, 0, 0, 0]' : 0.237414}

out:
 ["{'[4, 5, 6, 0, 5, 6, 0, 1, 1, 0, 1, 18, 2, 0, 0, 0, 0, 0]' : 0.270019}", "{'[4, 5, 6, 0, 5, 6, 0, 1, 1, 0, 1, 18, 2, 0, 0, 0, 0, 0]' : 0.269819}", "{'[4, 5, 6, 0, 5, 6, 0, 1, 1, 0, 1, 18, 2, 0, 0, 0, 0, 0]' : 0.232861}", "{'[4, 5, 6, 0, 5, 6, 0, 1, 1, 0, 1, 18, 2, 0, 0, 0, 0, 0]' : 0.233203}", "{'[4, 5, 6, 0, 5, 6, 0, 1, 1, 0, 1, 18, 2, 0, 0, 0, 0, 0]' : 0.235324}", "{'[4, 5, 6, 0, 5, 6, 0, 1, 1, 0, 1, 18, 2, 0, 0, 0, 0, 0]' : 0.234173}", "{'[4, 5, 6, 0, 5, 6, 0, 1, 1, 0, 1, 18, 2, 0, 0, 0, 0, 0]' : 0.235021}", "{'[4, 5, 6, 0, 5, 6, 0, 1, 1, 0, 1, 18, 2, 0, 0, 0, 0, 0]' : 0.23146}", "{'[4, 5, 6, 0, 5, 6, 0, 1, 1, 0, 1, 18, 2, 0, 0, 0, 0, 0]' : 0.239205}", "{'[4, 5, 6, 0, 5, 6, 0, 1, 1, 0, 1, 18, 2, 0, 0, 0, 0, 0]' : 0.235401}", "{'[4, 5, 6, 0, 5, 6, 0, 1, 1, 0, 1, 18, 2, 0, 0, 0, 0, 0]' : 0.234471}", "{'[4, 5, 6, 0, 5, 6, 0, 1, 1, 0, 1, 18, 2, 0, 0, 0, 0, 0]' : 0.232448}", "{'[4, 5, 6, 0, 5, 6, 0, 1, 1, 0, 1, 18, 2, 0, 0, 0, 0, 0]' : 0.236281}", "{'[4, 5, 6, 0, 5, 6, 0, 1, 1, 0, 1, 18, 2, 0, 0, 0, 0, 0]' : 0.238268}", "{'[4, 5, 6, 0, 5, 6, 0, 1, 1, 0, 1, 18, 2, 0, 0, 0, 0, 0]' : 0.231448}", "{'[4, 5, 6, 0, 5, 6, 0, 1, 1, 0, 1, 18, 2, 0, 0, 0, 0, 0]' : 0.236827}", "{'[4, 5, 6, 0, 5, 6, 0, 1, 1, 0, 1, 18, 2, 0, 0, 0, 0, 0]' : 0.233091}", "{'[4, 5, 6, 0, 5, 6, 0, 1, 1, 0, 1, 18, 2, 0, 0, 0, 0, 0]' : 0.23843}", "{'[4, 5, 6, 0, 5, 6, 0, 1, 1, 0, 1, 18, 2, 0, 0, 0, 0, 0]' : 0.233028}", "{'[4, 5, 6, 0, 5, 6, 0, 1, 1, 0, 1, 18, 2, 0, 0, 0, 0, 0]' : 0.234613}", "{'[4, 5, 6, 0, 5, 6, 0, 1, 1, 0, 1, 18, 2, 0, 0, 0, 0, 0]' : 0.234826}", "{'[4, 5, 6, 0, 5, 6, 0, 1, 1, 0, 1, 18, 2, 0, 0, 0, 0, 0]' : 0.234952}", "{'[4, 5, 6, 0, 5, 6, 0, 1, 1, 0, 1, 18, 2, 0, 0, 0, 0, 0]' : 0.235027}", "{'[4, 5, 6, 0, 5, 6, 0, 1, 1, 0, 1, 18, 2, 0, 0, 0, 0, 0]' : 0.231785}", "{'[4, 5, 6, 0, 5, 6, 0, 1, 1, 0, 1, 18, 2, 0, 0, 0, 0, 0]' : 0.237673}", "{'[4, 5, 6, 0, 5, 6, 0, 1, 1, 0, 1, 18, 2, 0, 0, 0, 0, 0]' : 0.234792}", "{'[4, 5, 6, 0, 5, 6, 0, 1, 1, 0, 1, 18, 2, 0, 0, 0, 0, 0]' : 0.237024}", "{'[4, 5, 6, 0, 5, 6, 0, 1, 1, 0, 1, 18, 2, 0, 0, 0, 0, 0]' : 0.232389}", "{'[4, 5, 6, 0, 5, 6, 0, 1, 1, 0, 1, 18, 2, 0, 0, 0, 0, 0]' : 0.235596}", "{'[4, 5, 6, 0, 5, 6, 0, 1, 1, 0, 1, 18, 2, 0, 0, 0, 0, 0]' : 0.237414}"]
returning from 'run': {'[4, 5, 6, 0, 5, 6, 0, 1, 1, 0, 1, 18, 2, 0, 0, 0, 0, 0]': ([0.270019, 0.269819, 0.232861, 0.233203, 0.235324, 0.234173, 0.235021, 0.23146, 0.239205, 0.235401, 0.234471, 0.232448, 0.236281, 0.238268, 0.231448, 0.236827, 0.233091, 0.23843, 0.233028, 0.234613, 0.234826, 0.234952, 0.235027, 0.231785, 0.237673, 0.234792, 0.237024, 0.232389, 0.235596, 0.237414], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 5, 6, 0, 5, 6, 0, 1, 1, 0, 1, 18, 2, 0, 0, 0, 0, 0]': ([0.270019, 0.269819, 0.232861, 0.233203, 0.235324, 0.234173, 0.235021, 0.23146, 0.239205, 0.235401, 0.234471, 0.232448, 0.236281, 0.238268, 0.231448, 0.236827, 0.233091, 0.23843, 0.233028, 0.234613, 0.234826, 0.234952, 0.235027, 0.231785, 0.237673, 0.234792, 0.237024, 0.232389, 0.235596, 0.237414], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = jjj
Code stats:
        Number of loops: 	124
        Max loop nest depth: 	5
        Additions: 		2449
        Multiplications: 	448
        Divisions: 		0
        Logical: 		0
        Reads: 			3964
        Writes: 		568
        Comparisons:		124
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest31.exe __orio_perftest31.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest31.exe  
Program Test Output: 
{'[2, 4, 0, 1, 2, 5, 0, 1, 7, 26, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.226783}
{'[2, 4, 0, 1, 2, 5, 0, 1, 7, 26, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.227443}
{'[2, 4, 0, 1, 2, 5, 0, 1, 7, 26, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.204833}
{'[2, 4, 0, 1, 2, 5, 0, 1, 7, 26, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.194101}
{'[2, 4, 0, 1, 2, 5, 0, 1, 7, 26, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.193636}
{'[2, 4, 0, 1, 2, 5, 0, 1, 7, 26, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.19417}
{'[2, 4, 0, 1, 2, 5, 0, 1, 7, 26, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.193921}
{'[2, 4, 0, 1, 2, 5, 0, 1, 7, 26, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.194237}
{'[2, 4, 0, 1, 2, 5, 0, 1, 7, 26, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.193825}
{'[2, 4, 0, 1, 2, 5, 0, 1, 7, 26, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.193736}
{'[2, 4, 0, 1, 2, 5, 0, 1, 7, 26, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.194146}
{'[2, 4, 0, 1, 2, 5, 0, 1, 7, 26, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.194015}
{'[2, 4, 0, 1, 2, 5, 0, 1, 7, 26, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.193629}
{'[2, 4, 0, 1, 2, 5, 0, 1, 7, 26, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.194074}
{'[2, 4, 0, 1, 2, 5, 0, 1, 7, 26, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.1944}
{'[2, 4, 0, 1, 2, 5, 0, 1, 7, 26, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.193684}
{'[2, 4, 0, 1, 2, 5, 0, 1, 7, 26, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.19365}
{'[2, 4, 0, 1, 2, 5, 0, 1, 7, 26, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.194391}
{'[2, 4, 0, 1, 2, 5, 0, 1, 7, 26, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.194529}
{'[2, 4, 0, 1, 2, 5, 0, 1, 7, 26, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.194402}
{'[2, 4, 0, 1, 2, 5, 0, 1, 7, 26, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.193824}
{'[2, 4, 0, 1, 2, 5, 0, 1, 7, 26, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.194422}
{'[2, 4, 0, 1, 2, 5, 0, 1, 7, 26, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.193723}
{'[2, 4, 0, 1, 2, 5, 0, 1, 7, 26, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.193985}
{'[2, 4, 0, 1, 2, 5, 0, 1, 7, 26, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.193702}
{'[2, 4, 0, 1, 2, 5, 0, 1, 7, 26, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.194066}
{'[2, 4, 0, 1, 2, 5, 0, 1, 7, 26, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.194157}
{'[2, 4, 0, 1, 2, 5, 0, 1, 7, 26, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.194094}
{'[2, 4, 0, 1, 2, 5, 0, 1, 7, 26, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.193751}
{'[2, 4, 0, 1, 2, 5, 0, 1, 7, 26, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.193761}

out:
 ["{'[2, 4, 0, 1, 2, 5, 0, 1, 7, 26, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.226783}", "{'[2, 4, 0, 1, 2, 5, 0, 1, 7, 26, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.227443}", "{'[2, 4, 0, 1, 2, 5, 0, 1, 7, 26, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.204833}", "{'[2, 4, 0, 1, 2, 5, 0, 1, 7, 26, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.194101}", "{'[2, 4, 0, 1, 2, 5, 0, 1, 7, 26, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.193636}", "{'[2, 4, 0, 1, 2, 5, 0, 1, 7, 26, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.19417}", "{'[2, 4, 0, 1, 2, 5, 0, 1, 7, 26, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.193921}", "{'[2, 4, 0, 1, 2, 5, 0, 1, 7, 26, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.194237}", "{'[2, 4, 0, 1, 2, 5, 0, 1, 7, 26, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.193825}", "{'[2, 4, 0, 1, 2, 5, 0, 1, 7, 26, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.193736}", "{'[2, 4, 0, 1, 2, 5, 0, 1, 7, 26, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.194146}", "{'[2, 4, 0, 1, 2, 5, 0, 1, 7, 26, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.194015}", "{'[2, 4, 0, 1, 2, 5, 0, 1, 7, 26, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.193629}", "{'[2, 4, 0, 1, 2, 5, 0, 1, 7, 26, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.194074}", "{'[2, 4, 0, 1, 2, 5, 0, 1, 7, 26, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.1944}", "{'[2, 4, 0, 1, 2, 5, 0, 1, 7, 26, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.193684}", "{'[2, 4, 0, 1, 2, 5, 0, 1, 7, 26, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.19365}", "{'[2, 4, 0, 1, 2, 5, 0, 1, 7, 26, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.194391}", "{'[2, 4, 0, 1, 2, 5, 0, 1, 7, 26, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.194529}", "{'[2, 4, 0, 1, 2, 5, 0, 1, 7, 26, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.194402}", "{'[2, 4, 0, 1, 2, 5, 0, 1, 7, 26, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.193824}", "{'[2, 4, 0, 1, 2, 5, 0, 1, 7, 26, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.194422}", "{'[2, 4, 0, 1, 2, 5, 0, 1, 7, 26, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.193723}", "{'[2, 4, 0, 1, 2, 5, 0, 1, 7, 26, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.193985}", "{'[2, 4, 0, 1, 2, 5, 0, 1, 7, 26, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.193702}", "{'[2, 4, 0, 1, 2, 5, 0, 1, 7, 26, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.194066}", "{'[2, 4, 0, 1, 2, 5, 0, 1, 7, 26, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.194157}", "{'[2, 4, 0, 1, 2, 5, 0, 1, 7, 26, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.194094}", "{'[2, 4, 0, 1, 2, 5, 0, 1, 7, 26, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.193751}", "{'[2, 4, 0, 1, 2, 5, 0, 1, 7, 26, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.193761}"]
returning from 'run': {'[2, 4, 0, 1, 2, 5, 0, 1, 7, 26, 0, 5, 0, 0, 0, 0, 1, 0]': ([0.226783, 0.227443, 0.204833, 0.194101, 0.193636, 0.19417, 0.193921, 0.194237, 0.193825, 0.193736, 0.194146, 0.194015, 0.193629, 0.194074, 0.1944, 0.193684, 0.19365, 0.194391, 0.194529, 0.194402, 0.193824, 0.194422, 0.193723, 0.193985, 0.193702, 0.194066, 0.194157, 0.194094, 0.193751, 0.193761], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 4, 0, 1, 2, 5, 0, 1, 7, 26, 0, 5, 0, 0, 0, 0, 1, 0]': ([0.226783, 0.227443, 0.204833, 0.194101, 0.193636, 0.19417, 0.193921, 0.194237, 0.193825, 0.193736, 0.194146, 0.194015, 0.193629, 0.194074, 0.1944, 0.193684, 0.19365, 0.194391, 0.194529, 0.194402, 0.193824, 0.194422, 0.193723, 0.193985, 0.193702, 0.194066, 0.194157, 0.194094, 0.193751, 0.193761], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	40
        Max loop nest depth: 	6
        Additions: 		1271
        Multiplications: 	528
        Divisions: 		0
        Logical: 		0
        Reads: 			2514
        Writes: 		433
        Comparisons:		40
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest32.exe __orio_perftest32.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest32.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest32.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest32.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest32.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	106
        Max loop nest depth: 	6
        Additions: 		1137
        Multiplications: 	232
        Divisions: 		0
        Logical: 		0
        Reads: 			2595
        Writes: 		472
        Comparisons:		106
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest33.exe __orio_perftest33.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest33.exe  
Program Test Output: 
{'[1, 6, 1, 5, 6, 5, 1, 1, 28, 24, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.380004}
{'[1, 6, 1, 5, 6, 5, 1, 1, 28, 24, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.344011}
{'[1, 6, 1, 5, 6, 5, 1, 1, 28, 24, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.317158}
{'[1, 6, 1, 5, 6, 5, 1, 1, 28, 24, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.317397}
{'[1, 6, 1, 5, 6, 5, 1, 1, 28, 24, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.317896}
{'[1, 6, 1, 5, 6, 5, 1, 1, 28, 24, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.317305}
{'[1, 6, 1, 5, 6, 5, 1, 1, 28, 24, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.317645}
{'[1, 6, 1, 5, 6, 5, 1, 1, 28, 24, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.317491}
{'[1, 6, 1, 5, 6, 5, 1, 1, 28, 24, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.317269}
{'[1, 6, 1, 5, 6, 5, 1, 1, 28, 24, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.317815}
{'[1, 6, 1, 5, 6, 5, 1, 1, 28, 24, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.317096}
{'[1, 6, 1, 5, 6, 5, 1, 1, 28, 24, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.317902}
{'[1, 6, 1, 5, 6, 5, 1, 1, 28, 24, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.317514}
{'[1, 6, 1, 5, 6, 5, 1, 1, 28, 24, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.317593}
{'[1, 6, 1, 5, 6, 5, 1, 1, 28, 24, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.317628}
{'[1, 6, 1, 5, 6, 5, 1, 1, 28, 24, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.317951}
{'[1, 6, 1, 5, 6, 5, 1, 1, 28, 24, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.31757}
{'[1, 6, 1, 5, 6, 5, 1, 1, 28, 24, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.317086}
{'[1, 6, 1, 5, 6, 5, 1, 1, 28, 24, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.317947}
{'[1, 6, 1, 5, 6, 5, 1, 1, 28, 24, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.31732}
{'[1, 6, 1, 5, 6, 5, 1, 1, 28, 24, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.31718}
{'[1, 6, 1, 5, 6, 5, 1, 1, 28, 24, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.317722}
{'[1, 6, 1, 5, 6, 5, 1, 1, 28, 24, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.31736}
{'[1, 6, 1, 5, 6, 5, 1, 1, 28, 24, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.317381}
{'[1, 6, 1, 5, 6, 5, 1, 1, 28, 24, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.31729}
{'[1, 6, 1, 5, 6, 5, 1, 1, 28, 24, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.318071}
{'[1, 6, 1, 5, 6, 5, 1, 1, 28, 24, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.31713}
{'[1, 6, 1, 5, 6, 5, 1, 1, 28, 24, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.317233}
{'[1, 6, 1, 5, 6, 5, 1, 1, 28, 24, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.318168}
{'[1, 6, 1, 5, 6, 5, 1, 1, 28, 24, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.317206}

out:
 ["{'[1, 6, 1, 5, 6, 5, 1, 1, 28, 24, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.380004}", "{'[1, 6, 1, 5, 6, 5, 1, 1, 28, 24, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.344011}", "{'[1, 6, 1, 5, 6, 5, 1, 1, 28, 24, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.317158}", "{'[1, 6, 1, 5, 6, 5, 1, 1, 28, 24, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.317397}", "{'[1, 6, 1, 5, 6, 5, 1, 1, 28, 24, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.317896}", "{'[1, 6, 1, 5, 6, 5, 1, 1, 28, 24, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.317305}", "{'[1, 6, 1, 5, 6, 5, 1, 1, 28, 24, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.317645}", "{'[1, 6, 1, 5, 6, 5, 1, 1, 28, 24, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.317491}", "{'[1, 6, 1, 5, 6, 5, 1, 1, 28, 24, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.317269}", "{'[1, 6, 1, 5, 6, 5, 1, 1, 28, 24, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.317815}", "{'[1, 6, 1, 5, 6, 5, 1, 1, 28, 24, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.317096}", "{'[1, 6, 1, 5, 6, 5, 1, 1, 28, 24, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.317902}", "{'[1, 6, 1, 5, 6, 5, 1, 1, 28, 24, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.317514}", "{'[1, 6, 1, 5, 6, 5, 1, 1, 28, 24, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.317593}", "{'[1, 6, 1, 5, 6, 5, 1, 1, 28, 24, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.317628}", "{'[1, 6, 1, 5, 6, 5, 1, 1, 28, 24, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.317951}", "{'[1, 6, 1, 5, 6, 5, 1, 1, 28, 24, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.31757}", "{'[1, 6, 1, 5, 6, 5, 1, 1, 28, 24, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.317086}", "{'[1, 6, 1, 5, 6, 5, 1, 1, 28, 24, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.317947}", "{'[1, 6, 1, 5, 6, 5, 1, 1, 28, 24, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.31732}", "{'[1, 6, 1, 5, 6, 5, 1, 1, 28, 24, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.31718}", "{'[1, 6, 1, 5, 6, 5, 1, 1, 28, 24, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.317722}", "{'[1, 6, 1, 5, 6, 5, 1, 1, 28, 24, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.31736}", "{'[1, 6, 1, 5, 6, 5, 1, 1, 28, 24, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.317381}", "{'[1, 6, 1, 5, 6, 5, 1, 1, 28, 24, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.31729}", "{'[1, 6, 1, 5, 6, 5, 1, 1, 28, 24, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.318071}", "{'[1, 6, 1, 5, 6, 5, 1, 1, 28, 24, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.31713}", "{'[1, 6, 1, 5, 6, 5, 1, 1, 28, 24, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.317233}", "{'[1, 6, 1, 5, 6, 5, 1, 1, 28, 24, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.318168}", "{'[1, 6, 1, 5, 6, 5, 1, 1, 28, 24, 0, 0, 2, 0, 0, 0, 0, 1]' : 0.317206}"]
returning from 'run': {'[1, 6, 1, 5, 6, 5, 1, 1, 28, 24, 0, 0, 2, 0, 0, 0, 0, 1]': ([0.380004, 0.344011, 0.317158, 0.317397, 0.317896, 0.317305, 0.317645, 0.317491, 0.317269, 0.317815, 0.317096, 0.317902, 0.317514, 0.317593, 0.317628, 0.317951, 0.31757, 0.317086, 0.317947, 0.31732, 0.31718, 0.317722, 0.31736, 0.317381, 0.31729, 0.318071, 0.31713, 0.317233, 0.318168, 0.317206], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 6, 1, 5, 6, 5, 1, 1, 28, 24, 0, 0, 2, 0, 0, 0, 0, 1]': ([0.380004, 0.344011, 0.317158, 0.317397, 0.317896, 0.317305, 0.317645, 0.317491, 0.317269, 0.317815, 0.317096, 0.317902, 0.317514, 0.317593, 0.317628, 0.317951, 0.31757, 0.317086, 0.317947, 0.31732, 0.31718, 0.317722, 0.31736, 0.317381, 0.31729, 0.318071, 0.31713, 0.317233, 0.318168, 0.317206], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	4
        Additions: 		1989
        Multiplications: 	960
        Divisions: 		0
        Logical: 		0
        Reads: 			3793
        Writes: 		633
        Comparisons:		9
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest34.exe __orio_perftest34.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest34.exe  
Program Test Output: 
{'[0, 1, 0, 0, 1, 0, 0, 0, 27, 0, 29, 27, 1, 0, 0, 1, 0, 0]' : 0.102348}
{'[0, 1, 0, 0, 1, 0, 0, 0, 27, 0, 29, 27, 1, 0, 0, 1, 0, 0]' : 0.102256}
{'[0, 1, 0, 0, 1, 0, 0, 0, 27, 0, 29, 27, 1, 0, 0, 1, 0, 0]' : 0.102203}
{'[0, 1, 0, 0, 1, 0, 0, 0, 27, 0, 29, 27, 1, 0, 0, 1, 0, 0]' : 0.102264}
{'[0, 1, 0, 0, 1, 0, 0, 0, 27, 0, 29, 27, 1, 0, 0, 1, 0, 0]' : 0.102311}
{'[0, 1, 0, 0, 1, 0, 0, 0, 27, 0, 29, 27, 1, 0, 0, 1, 0, 0]' : 0.09461}
{'[0, 1, 0, 0, 1, 0, 0, 0, 27, 0, 29, 27, 1, 0, 0, 1, 0, 0]' : 0.089205}
{'[0, 1, 0, 0, 1, 0, 0, 0, 27, 0, 29, 27, 1, 0, 0, 1, 0, 0]' : 0.0890341}
{'[0, 1, 0, 0, 1, 0, 0, 0, 27, 0, 29, 27, 1, 0, 0, 1, 0, 0]' : 0.0894151}
{'[0, 1, 0, 0, 1, 0, 0, 0, 27, 0, 29, 27, 1, 0, 0, 1, 0, 0]' : 0.089165}
{'[0, 1, 0, 0, 1, 0, 0, 0, 27, 0, 29, 27, 1, 0, 0, 1, 0, 0]' : 0.088887}
{'[0, 1, 0, 0, 1, 0, 0, 0, 27, 0, 29, 27, 1, 0, 0, 1, 0, 0]' : 0.0890789}
{'[0, 1, 0, 0, 1, 0, 0, 0, 27, 0, 29, 27, 1, 0, 0, 1, 0, 0]' : 0.0891261}
{'[0, 1, 0, 0, 1, 0, 0, 0, 27, 0, 29, 27, 1, 0, 0, 1, 0, 0]' : 0.0889671}
{'[0, 1, 0, 0, 1, 0, 0, 0, 27, 0, 29, 27, 1, 0, 0, 1, 0, 0]' : 0.088968}
{'[0, 1, 0, 0, 1, 0, 0, 0, 27, 0, 29, 27, 1, 0, 0, 1, 0, 0]' : 0.089036}
{'[0, 1, 0, 0, 1, 0, 0, 0, 27, 0, 29, 27, 1, 0, 0, 1, 0, 0]' : 0.088985}
{'[0, 1, 0, 0, 1, 0, 0, 0, 27, 0, 29, 27, 1, 0, 0, 1, 0, 0]' : 0.089186}
{'[0, 1, 0, 0, 1, 0, 0, 0, 27, 0, 29, 27, 1, 0, 0, 1, 0, 0]' : 0.089256}
{'[0, 1, 0, 0, 1, 0, 0, 0, 27, 0, 29, 27, 1, 0, 0, 1, 0, 0]' : 0.0889931}
{'[0, 1, 0, 0, 1, 0, 0, 0, 27, 0, 29, 27, 1, 0, 0, 1, 0, 0]' : 0.089201}
{'[0, 1, 0, 0, 1, 0, 0, 0, 27, 0, 29, 27, 1, 0, 0, 1, 0, 0]' : 0.089149}
{'[0, 1, 0, 0, 1, 0, 0, 0, 27, 0, 29, 27, 1, 0, 0, 1, 0, 0]' : 0.0891521}
{'[0, 1, 0, 0, 1, 0, 0, 0, 27, 0, 29, 27, 1, 0, 0, 1, 0, 0]' : 0.0893829}
{'[0, 1, 0, 0, 1, 0, 0, 0, 27, 0, 29, 27, 1, 0, 0, 1, 0, 0]' : 0.0890911}
{'[0, 1, 0, 0, 1, 0, 0, 0, 27, 0, 29, 27, 1, 0, 0, 1, 0, 0]' : 0.08901}
{'[0, 1, 0, 0, 1, 0, 0, 0, 27, 0, 29, 27, 1, 0, 0, 1, 0, 0]' : 0.0892491}
{'[0, 1, 0, 0, 1, 0, 0, 0, 27, 0, 29, 27, 1, 0, 0, 1, 0, 0]' : 0.0889919}
{'[0, 1, 0, 0, 1, 0, 0, 0, 27, 0, 29, 27, 1, 0, 0, 1, 0, 0]' : 0.0889761}
{'[0, 1, 0, 0, 1, 0, 0, 0, 27, 0, 29, 27, 1, 0, 0, 1, 0, 0]' : 0.0891349}

out:
 ["{'[0, 1, 0, 0, 1, 0, 0, 0, 27, 0, 29, 27, 1, 0, 0, 1, 0, 0]' : 0.102348}", "{'[0, 1, 0, 0, 1, 0, 0, 0, 27, 0, 29, 27, 1, 0, 0, 1, 0, 0]' : 0.102256}", "{'[0, 1, 0, 0, 1, 0, 0, 0, 27, 0, 29, 27, 1, 0, 0, 1, 0, 0]' : 0.102203}", "{'[0, 1, 0, 0, 1, 0, 0, 0, 27, 0, 29, 27, 1, 0, 0, 1, 0, 0]' : 0.102264}", "{'[0, 1, 0, 0, 1, 0, 0, 0, 27, 0, 29, 27, 1, 0, 0, 1, 0, 0]' : 0.102311}", "{'[0, 1, 0, 0, 1, 0, 0, 0, 27, 0, 29, 27, 1, 0, 0, 1, 0, 0]' : 0.09461}", "{'[0, 1, 0, 0, 1, 0, 0, 0, 27, 0, 29, 27, 1, 0, 0, 1, 0, 0]' : 0.089205}", "{'[0, 1, 0, 0, 1, 0, 0, 0, 27, 0, 29, 27, 1, 0, 0, 1, 0, 0]' : 0.0890341}", "{'[0, 1, 0, 0, 1, 0, 0, 0, 27, 0, 29, 27, 1, 0, 0, 1, 0, 0]' : 0.0894151}", "{'[0, 1, 0, 0, 1, 0, 0, 0, 27, 0, 29, 27, 1, 0, 0, 1, 0, 0]' : 0.089165}", "{'[0, 1, 0, 0, 1, 0, 0, 0, 27, 0, 29, 27, 1, 0, 0, 1, 0, 0]' : 0.088887}", "{'[0, 1, 0, 0, 1, 0, 0, 0, 27, 0, 29, 27, 1, 0, 0, 1, 0, 0]' : 0.0890789}", "{'[0, 1, 0, 0, 1, 0, 0, 0, 27, 0, 29, 27, 1, 0, 0, 1, 0, 0]' : 0.0891261}", "{'[0, 1, 0, 0, 1, 0, 0, 0, 27, 0, 29, 27, 1, 0, 0, 1, 0, 0]' : 0.0889671}", "{'[0, 1, 0, 0, 1, 0, 0, 0, 27, 0, 29, 27, 1, 0, 0, 1, 0, 0]' : 0.088968}", "{'[0, 1, 0, 0, 1, 0, 0, 0, 27, 0, 29, 27, 1, 0, 0, 1, 0, 0]' : 0.089036}", "{'[0, 1, 0, 0, 1, 0, 0, 0, 27, 0, 29, 27, 1, 0, 0, 1, 0, 0]' : 0.088985}", "{'[0, 1, 0, 0, 1, 0, 0, 0, 27, 0, 29, 27, 1, 0, 0, 1, 0, 0]' : 0.089186}", "{'[0, 1, 0, 0, 1, 0, 0, 0, 27, 0, 29, 27, 1, 0, 0, 1, 0, 0]' : 0.089256}", "{'[0, 1, 0, 0, 1, 0, 0, 0, 27, 0, 29, 27, 1, 0, 0, 1, 0, 0]' : 0.0889931}", "{'[0, 1, 0, 0, 1, 0, 0, 0, 27, 0, 29, 27, 1, 0, 0, 1, 0, 0]' : 0.089201}", "{'[0, 1, 0, 0, 1, 0, 0, 0, 27, 0, 29, 27, 1, 0, 0, 1, 0, 0]' : 0.089149}", "{'[0, 1, 0, 0, 1, 0, 0, 0, 27, 0, 29, 27, 1, 0, 0, 1, 0, 0]' : 0.0891521}", "{'[0, 1, 0, 0, 1, 0, 0, 0, 27, 0, 29, 27, 1, 0, 0, 1, 0, 0]' : 0.0893829}", "{'[0, 1, 0, 0, 1, 0, 0, 0, 27, 0, 29, 27, 1, 0, 0, 1, 0, 0]' : 0.0890911}", "{'[0, 1, 0, 0, 1, 0, 0, 0, 27, 0, 29, 27, 1, 0, 0, 1, 0, 0]' : 0.08901}", "{'[0, 1, 0, 0, 1, 0, 0, 0, 27, 0, 29, 27, 1, 0, 0, 1, 0, 0]' : 0.0892491}", "{'[0, 1, 0, 0, 1, 0, 0, 0, 27, 0, 29, 27, 1, 0, 0, 1, 0, 0]' : 0.0889919}", "{'[0, 1, 0, 0, 1, 0, 0, 0, 27, 0, 29, 27, 1, 0, 0, 1, 0, 0]' : 0.0889761}", "{'[0, 1, 0, 0, 1, 0, 0, 0, 27, 0, 29, 27, 1, 0, 0, 1, 0, 0]' : 0.0891349}"]
returning from 'run': {'[0, 1, 0, 0, 1, 0, 0, 0, 27, 0, 29, 27, 1, 0, 0, 1, 0, 0]': ([0.102348, 0.102256, 0.102203, 0.102264, 0.102311, 0.09461, 0.089205, 0.0890341, 0.0894151, 0.089165, 0.088887, 0.0890789, 0.0891261, 0.0889671, 0.088968, 0.089036, 0.088985, 0.089186, 0.089256, 0.0889931, 0.089201, 0.089149, 0.0891521, 0.0893829, 0.0890911, 0.08901, 0.0892491, 0.0889919, 0.0889761, 0.0891349], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 0, 0, 1, 0, 0, 0, 27, 0, 29, 27, 1, 0, 0, 1, 0, 0]': ([0.102348, 0.102256, 0.102203, 0.102264, 0.102311, 0.09461, 0.089205, 0.0890341, 0.0894151, 0.089165, 0.088887, 0.0890789, 0.0891261, 0.0889671, 0.088968, 0.089036, 0.088985, 0.089186, 0.089256, 0.0889931, 0.089201, 0.089149, 0.0891521, 0.0893829, 0.0890911, 0.08901, 0.0892491, 0.0889919, 0.0889761, 0.0891349], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	17
        Max loop nest depth: 	4
        Additions: 		1409
        Multiplications: 	432
        Divisions: 		0
        Logical: 		0
        Reads: 			2349
        Writes: 		285
        Comparisons:		17
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest35.exe __orio_perftest35.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest35.exe  
Program Test Output: 
{'[2, 3, 0, 0, 1, 1, 0, 0, 24, 4, 1, 0, 0, 0, 2, 0, 1, 0]' : 0.154793}
{'[2, 3, 0, 0, 1, 1, 0, 0, 24, 4, 1, 0, 0, 0, 2, 0, 1, 0]' : 0.154881}
{'[2, 3, 0, 0, 1, 1, 0, 0, 24, 4, 1, 0, 0, 0, 2, 0, 1, 0]' : 0.154621}
{'[2, 3, 0, 0, 1, 1, 0, 0, 24, 4, 1, 0, 0, 0, 2, 0, 1, 0]' : 0.134149}
{'[2, 3, 0, 0, 1, 1, 0, 0, 24, 4, 1, 0, 0, 0, 2, 0, 1, 0]' : 0.131091}
{'[2, 3, 0, 0, 1, 1, 0, 0, 24, 4, 1, 0, 0, 0, 2, 0, 1, 0]' : 0.131318}
{'[2, 3, 0, 0, 1, 1, 0, 0, 24, 4, 1, 0, 0, 0, 2, 0, 1, 0]' : 0.131265}
{'[2, 3, 0, 0, 1, 1, 0, 0, 24, 4, 1, 0, 0, 0, 2, 0, 1, 0]' : 0.131094}
{'[2, 3, 0, 0, 1, 1, 0, 0, 24, 4, 1, 0, 0, 0, 2, 0, 1, 0]' : 0.131145}
{'[2, 3, 0, 0, 1, 1, 0, 0, 24, 4, 1, 0, 0, 0, 2, 0, 1, 0]' : 0.131091}
{'[2, 3, 0, 0, 1, 1, 0, 0, 24, 4, 1, 0, 0, 0, 2, 0, 1, 0]' : 0.131141}
{'[2, 3, 0, 0, 1, 1, 0, 0, 24, 4, 1, 0, 0, 0, 2, 0, 1, 0]' : 0.131374}
{'[2, 3, 0, 0, 1, 1, 0, 0, 24, 4, 1, 0, 0, 0, 2, 0, 1, 0]' : 0.131151}
{'[2, 3, 0, 0, 1, 1, 0, 0, 24, 4, 1, 0, 0, 0, 2, 0, 1, 0]' : 0.131179}
{'[2, 3, 0, 0, 1, 1, 0, 0, 24, 4, 1, 0, 0, 0, 2, 0, 1, 0]' : 0.131488}
{'[2, 3, 0, 0, 1, 1, 0, 0, 24, 4, 1, 0, 0, 0, 2, 0, 1, 0]' : 0.131508}
{'[2, 3, 0, 0, 1, 1, 0, 0, 24, 4, 1, 0, 0, 0, 2, 0, 1, 0]' : 0.131464}
{'[2, 3, 0, 0, 1, 1, 0, 0, 24, 4, 1, 0, 0, 0, 2, 0, 1, 0]' : 0.131119}
{'[2, 3, 0, 0, 1, 1, 0, 0, 24, 4, 1, 0, 0, 0, 2, 0, 1, 0]' : 0.131149}
{'[2, 3, 0, 0, 1, 1, 0, 0, 24, 4, 1, 0, 0, 0, 2, 0, 1, 0]' : 0.131362}
{'[2, 3, 0, 0, 1, 1, 0, 0, 24, 4, 1, 0, 0, 0, 2, 0, 1, 0]' : 0.131269}
{'[2, 3, 0, 0, 1, 1, 0, 0, 24, 4, 1, 0, 0, 0, 2, 0, 1, 0]' : 0.13129}
{'[2, 3, 0, 0, 1, 1, 0, 0, 24, 4, 1, 0, 0, 0, 2, 0, 1, 0]' : 0.131561}
{'[2, 3, 0, 0, 1, 1, 0, 0, 24, 4, 1, 0, 0, 0, 2, 0, 1, 0]' : 0.131675}
{'[2, 3, 0, 0, 1, 1, 0, 0, 24, 4, 1, 0, 0, 0, 2, 0, 1, 0]' : 0.131152}
{'[2, 3, 0, 0, 1, 1, 0, 0, 24, 4, 1, 0, 0, 0, 2, 0, 1, 0]' : 0.131182}
{'[2, 3, 0, 0, 1, 1, 0, 0, 24, 4, 1, 0, 0, 0, 2, 0, 1, 0]' : 0.131175}
{'[2, 3, 0, 0, 1, 1, 0, 0, 24, 4, 1, 0, 0, 0, 2, 0, 1, 0]' : 0.131846}
{'[2, 3, 0, 0, 1, 1, 0, 0, 24, 4, 1, 0, 0, 0, 2, 0, 1, 0]' : 0.131201}
{'[2, 3, 0, 0, 1, 1, 0, 0, 24, 4, 1, 0, 0, 0, 2, 0, 1, 0]' : 0.131232}

out:
 ["{'[2, 3, 0, 0, 1, 1, 0, 0, 24, 4, 1, 0, 0, 0, 2, 0, 1, 0]' : 0.154793}", "{'[2, 3, 0, 0, 1, 1, 0, 0, 24, 4, 1, 0, 0, 0, 2, 0, 1, 0]' : 0.154881}", "{'[2, 3, 0, 0, 1, 1, 0, 0, 24, 4, 1, 0, 0, 0, 2, 0, 1, 0]' : 0.154621}", "{'[2, 3, 0, 0, 1, 1, 0, 0, 24, 4, 1, 0, 0, 0, 2, 0, 1, 0]' : 0.134149}", "{'[2, 3, 0, 0, 1, 1, 0, 0, 24, 4, 1, 0, 0, 0, 2, 0, 1, 0]' : 0.131091}", "{'[2, 3, 0, 0, 1, 1, 0, 0, 24, 4, 1, 0, 0, 0, 2, 0, 1, 0]' : 0.131318}", "{'[2, 3, 0, 0, 1, 1, 0, 0, 24, 4, 1, 0, 0, 0, 2, 0, 1, 0]' : 0.131265}", "{'[2, 3, 0, 0, 1, 1, 0, 0, 24, 4, 1, 0, 0, 0, 2, 0, 1, 0]' : 0.131094}", "{'[2, 3, 0, 0, 1, 1, 0, 0, 24, 4, 1, 0, 0, 0, 2, 0, 1, 0]' : 0.131145}", "{'[2, 3, 0, 0, 1, 1, 0, 0, 24, 4, 1, 0, 0, 0, 2, 0, 1, 0]' : 0.131091}", "{'[2, 3, 0, 0, 1, 1, 0, 0, 24, 4, 1, 0, 0, 0, 2, 0, 1, 0]' : 0.131141}", "{'[2, 3, 0, 0, 1, 1, 0, 0, 24, 4, 1, 0, 0, 0, 2, 0, 1, 0]' : 0.131374}", "{'[2, 3, 0, 0, 1, 1, 0, 0, 24, 4, 1, 0, 0, 0, 2, 0, 1, 0]' : 0.131151}", "{'[2, 3, 0, 0, 1, 1, 0, 0, 24, 4, 1, 0, 0, 0, 2, 0, 1, 0]' : 0.131179}", "{'[2, 3, 0, 0, 1, 1, 0, 0, 24, 4, 1, 0, 0, 0, 2, 0, 1, 0]' : 0.131488}", "{'[2, 3, 0, 0, 1, 1, 0, 0, 24, 4, 1, 0, 0, 0, 2, 0, 1, 0]' : 0.131508}", "{'[2, 3, 0, 0, 1, 1, 0, 0, 24, 4, 1, 0, 0, 0, 2, 0, 1, 0]' : 0.131464}", "{'[2, 3, 0, 0, 1, 1, 0, 0, 24, 4, 1, 0, 0, 0, 2, 0, 1, 0]' : 0.131119}", "{'[2, 3, 0, 0, 1, 1, 0, 0, 24, 4, 1, 0, 0, 0, 2, 0, 1, 0]' : 0.131149}", "{'[2, 3, 0, 0, 1, 1, 0, 0, 24, 4, 1, 0, 0, 0, 2, 0, 1, 0]' : 0.131362}", "{'[2, 3, 0, 0, 1, 1, 0, 0, 24, 4, 1, 0, 0, 0, 2, 0, 1, 0]' : 0.131269}", "{'[2, 3, 0, 0, 1, 1, 0, 0, 24, 4, 1, 0, 0, 0, 2, 0, 1, 0]' : 0.13129}", "{'[2, 3, 0, 0, 1, 1, 0, 0, 24, 4, 1, 0, 0, 0, 2, 0, 1, 0]' : 0.131561}", "{'[2, 3, 0, 0, 1, 1, 0, 0, 24, 4, 1, 0, 0, 0, 2, 0, 1, 0]' : 0.131675}", "{'[2, 3, 0, 0, 1, 1, 0, 0, 24, 4, 1, 0, 0, 0, 2, 0, 1, 0]' : 0.131152}", "{'[2, 3, 0, 0, 1, 1, 0, 0, 24, 4, 1, 0, 0, 0, 2, 0, 1, 0]' : 0.131182}", "{'[2, 3, 0, 0, 1, 1, 0, 0, 24, 4, 1, 0, 0, 0, 2, 0, 1, 0]' : 0.131175}", "{'[2, 3, 0, 0, 1, 1, 0, 0, 24, 4, 1, 0, 0, 0, 2, 0, 1, 0]' : 0.131846}", "{'[2, 3, 0, 0, 1, 1, 0, 0, 24, 4, 1, 0, 0, 0, 2, 0, 1, 0]' : 0.131201}", "{'[2, 3, 0, 0, 1, 1, 0, 0, 24, 4, 1, 0, 0, 0, 2, 0, 1, 0]' : 0.131232}"]
returning from 'run': {'[2, 3, 0, 0, 1, 1, 0, 0, 24, 4, 1, 0, 0, 0, 2, 0, 1, 0]': ([0.154793, 0.154881, 0.154621, 0.134149, 0.131091, 0.131318, 0.131265, 0.131094, 0.131145, 0.131091, 0.131141, 0.131374, 0.131151, 0.131179, 0.131488, 0.131508, 0.131464, 0.131119, 0.131149, 0.131362, 0.131269, 0.13129, 0.131561, 0.131675, 0.131152, 0.131182, 0.131175, 0.131846, 0.131201, 0.131232], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 3, 0, 0, 1, 1, 0, 0, 24, 4, 1, 0, 0, 0, 2, 0, 1, 0]': ([0.154793, 0.154881, 0.154621, 0.134149, 0.131091, 0.131318, 0.131265, 0.131094, 0.131145, 0.131091, 0.131141, 0.131374, 0.131151, 0.131179, 0.131488, 0.131508, 0.131464, 0.131119, 0.131149, 0.131362, 0.131269, 0.13129, 0.131561, 0.131675, 0.131152, 0.131182, 0.131175, 0.131846, 0.131201, 0.131232], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	5
        Additions: 		238
        Multiplications: 	72
        Divisions: 		0
        Logical: 		0
        Reads: 			522
        Writes: 		85
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest36.exe __orio_perftest36.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest36.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest36.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest36.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest36.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		326
        Multiplications: 	108
        Divisions: 		0
        Logical: 		0
        Reads: 			692
        Writes: 		134
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest37.exe __orio_perftest37.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest37.exe  
Program Test Output: 
{'[3, 6, 0, 1, 0, 5, 0, 1, 8, 0, 26, 16, 0, 1, 0, 1, 1, 0]' : 0.241474}
{'[3, 6, 0, 1, 0, 5, 0, 1, 8, 0, 26, 16, 0, 1, 0, 1, 1, 0]' : 0.241283}
{'[3, 6, 0, 1, 0, 5, 0, 1, 8, 0, 26, 16, 0, 1, 0, 1, 1, 0]' : 0.215447}
{'[3, 6, 0, 1, 0, 5, 0, 1, 8, 0, 26, 16, 0, 1, 0, 1, 1, 0]' : 0.201788}
{'[3, 6, 0, 1, 0, 5, 0, 1, 8, 0, 26, 16, 0, 1, 0, 1, 1, 0]' : 0.201633}
{'[3, 6, 0, 1, 0, 5, 0, 1, 8, 0, 26, 16, 0, 1, 0, 1, 1, 0]' : 0.201584}
{'[3, 6, 0, 1, 0, 5, 0, 1, 8, 0, 26, 16, 0, 1, 0, 1, 1, 0]' : 0.202111}
{'[3, 6, 0, 1, 0, 5, 0, 1, 8, 0, 26, 16, 0, 1, 0, 1, 1, 0]' : 0.202245}
{'[3, 6, 0, 1, 0, 5, 0, 1, 8, 0, 26, 16, 0, 1, 0, 1, 1, 0]' : 0.201998}
{'[3, 6, 0, 1, 0, 5, 0, 1, 8, 0, 26, 16, 0, 1, 0, 1, 1, 0]' : 0.201971}
{'[3, 6, 0, 1, 0, 5, 0, 1, 8, 0, 26, 16, 0, 1, 0, 1, 1, 0]' : 0.20173}
{'[3, 6, 0, 1, 0, 5, 0, 1, 8, 0, 26, 16, 0, 1, 0, 1, 1, 0]' : 0.20199}
{'[3, 6, 0, 1, 0, 5, 0, 1, 8, 0, 26, 16, 0, 1, 0, 1, 1, 0]' : 0.202078}
{'[3, 6, 0, 1, 0, 5, 0, 1, 8, 0, 26, 16, 0, 1, 0, 1, 1, 0]' : 0.202398}
{'[3, 6, 0, 1, 0, 5, 0, 1, 8, 0, 26, 16, 0, 1, 0, 1, 1, 0]' : 0.201917}
{'[3, 6, 0, 1, 0, 5, 0, 1, 8, 0, 26, 16, 0, 1, 0, 1, 1, 0]' : 0.201807}
{'[3, 6, 0, 1, 0, 5, 0, 1, 8, 0, 26, 16, 0, 1, 0, 1, 1, 0]' : 0.201994}
{'[3, 6, 0, 1, 0, 5, 0, 1, 8, 0, 26, 16, 0, 1, 0, 1, 1, 0]' : 0.202648}
{'[3, 6, 0, 1, 0, 5, 0, 1, 8, 0, 26, 16, 0, 1, 0, 1, 1, 0]' : 0.202067}
{'[3, 6, 0, 1, 0, 5, 0, 1, 8, 0, 26, 16, 0, 1, 0, 1, 1, 0]' : 0.201762}
{'[3, 6, 0, 1, 0, 5, 0, 1, 8, 0, 26, 16, 0, 1, 0, 1, 1, 0]' : 0.202019}
{'[3, 6, 0, 1, 0, 5, 0, 1, 8, 0, 26, 16, 0, 1, 0, 1, 1, 0]' : 0.201993}
{'[3, 6, 0, 1, 0, 5, 0, 1, 8, 0, 26, 16, 0, 1, 0, 1, 1, 0]' : 0.202165}
{'[3, 6, 0, 1, 0, 5, 0, 1, 8, 0, 26, 16, 0, 1, 0, 1, 1, 0]' : 0.202085}
{'[3, 6, 0, 1, 0, 5, 0, 1, 8, 0, 26, 16, 0, 1, 0, 1, 1, 0]' : 0.202051}
{'[3, 6, 0, 1, 0, 5, 0, 1, 8, 0, 26, 16, 0, 1, 0, 1, 1, 0]' : 0.201795}
{'[3, 6, 0, 1, 0, 5, 0, 1, 8, 0, 26, 16, 0, 1, 0, 1, 1, 0]' : 0.201811}
{'[3, 6, 0, 1, 0, 5, 0, 1, 8, 0, 26, 16, 0, 1, 0, 1, 1, 0]' : 0.202155}
{'[3, 6, 0, 1, 0, 5, 0, 1, 8, 0, 26, 16, 0, 1, 0, 1, 1, 0]' : 0.20234}
{'[3, 6, 0, 1, 0, 5, 0, 1, 8, 0, 26, 16, 0, 1, 0, 1, 1, 0]' : 0.201761}

out:
 ["{'[3, 6, 0, 1, 0, 5, 0, 1, 8, 0, 26, 16, 0, 1, 0, 1, 1, 0]' : 0.241474}", "{'[3, 6, 0, 1, 0, 5, 0, 1, 8, 0, 26, 16, 0, 1, 0, 1, 1, 0]' : 0.241283}", "{'[3, 6, 0, 1, 0, 5, 0, 1, 8, 0, 26, 16, 0, 1, 0, 1, 1, 0]' : 0.215447}", "{'[3, 6, 0, 1, 0, 5, 0, 1, 8, 0, 26, 16, 0, 1, 0, 1, 1, 0]' : 0.201788}", "{'[3, 6, 0, 1, 0, 5, 0, 1, 8, 0, 26, 16, 0, 1, 0, 1, 1, 0]' : 0.201633}", "{'[3, 6, 0, 1, 0, 5, 0, 1, 8, 0, 26, 16, 0, 1, 0, 1, 1, 0]' : 0.201584}", "{'[3, 6, 0, 1, 0, 5, 0, 1, 8, 0, 26, 16, 0, 1, 0, 1, 1, 0]' : 0.202111}", "{'[3, 6, 0, 1, 0, 5, 0, 1, 8, 0, 26, 16, 0, 1, 0, 1, 1, 0]' : 0.202245}", "{'[3, 6, 0, 1, 0, 5, 0, 1, 8, 0, 26, 16, 0, 1, 0, 1, 1, 0]' : 0.201998}", "{'[3, 6, 0, 1, 0, 5, 0, 1, 8, 0, 26, 16, 0, 1, 0, 1, 1, 0]' : 0.201971}", "{'[3, 6, 0, 1, 0, 5, 0, 1, 8, 0, 26, 16, 0, 1, 0, 1, 1, 0]' : 0.20173}", "{'[3, 6, 0, 1, 0, 5, 0, 1, 8, 0, 26, 16, 0, 1, 0, 1, 1, 0]' : 0.20199}", "{'[3, 6, 0, 1, 0, 5, 0, 1, 8, 0, 26, 16, 0, 1, 0, 1, 1, 0]' : 0.202078}", "{'[3, 6, 0, 1, 0, 5, 0, 1, 8, 0, 26, 16, 0, 1, 0, 1, 1, 0]' : 0.202398}", "{'[3, 6, 0, 1, 0, 5, 0, 1, 8, 0, 26, 16, 0, 1, 0, 1, 1, 0]' : 0.201917}", "{'[3, 6, 0, 1, 0, 5, 0, 1, 8, 0, 26, 16, 0, 1, 0, 1, 1, 0]' : 0.201807}", "{'[3, 6, 0, 1, 0, 5, 0, 1, 8, 0, 26, 16, 0, 1, 0, 1, 1, 0]' : 0.201994}", "{'[3, 6, 0, 1, 0, 5, 0, 1, 8, 0, 26, 16, 0, 1, 0, 1, 1, 0]' : 0.202648}", "{'[3, 6, 0, 1, 0, 5, 0, 1, 8, 0, 26, 16, 0, 1, 0, 1, 1, 0]' : 0.202067}", "{'[3, 6, 0, 1, 0, 5, 0, 1, 8, 0, 26, 16, 0, 1, 0, 1, 1, 0]' : 0.201762}", "{'[3, 6, 0, 1, 0, 5, 0, 1, 8, 0, 26, 16, 0, 1, 0, 1, 1, 0]' : 0.202019}", "{'[3, 6, 0, 1, 0, 5, 0, 1, 8, 0, 26, 16, 0, 1, 0, 1, 1, 0]' : 0.201993}", "{'[3, 6, 0, 1, 0, 5, 0, 1, 8, 0, 26, 16, 0, 1, 0, 1, 1, 0]' : 0.202165}", "{'[3, 6, 0, 1, 0, 5, 0, 1, 8, 0, 26, 16, 0, 1, 0, 1, 1, 0]' : 0.202085}", "{'[3, 6, 0, 1, 0, 5, 0, 1, 8, 0, 26, 16, 0, 1, 0, 1, 1, 0]' : 0.202051}", "{'[3, 6, 0, 1, 0, 5, 0, 1, 8, 0, 26, 16, 0, 1, 0, 1, 1, 0]' : 0.201795}", "{'[3, 6, 0, 1, 0, 5, 0, 1, 8, 0, 26, 16, 0, 1, 0, 1, 1, 0]' : 0.201811}", "{'[3, 6, 0, 1, 0, 5, 0, 1, 8, 0, 26, 16, 0, 1, 0, 1, 1, 0]' : 0.202155}", "{'[3, 6, 0, 1, 0, 5, 0, 1, 8, 0, 26, 16, 0, 1, 0, 1, 1, 0]' : 0.20234}", "{'[3, 6, 0, 1, 0, 5, 0, 1, 8, 0, 26, 16, 0, 1, 0, 1, 1, 0]' : 0.201761}"]
returning from 'run': {'[3, 6, 0, 1, 0, 5, 0, 1, 8, 0, 26, 16, 0, 1, 0, 1, 1, 0]': ([0.241474, 0.241283, 0.215447, 0.201788, 0.201633, 0.201584, 0.202111, 0.202245, 0.201998, 0.201971, 0.20173, 0.20199, 0.202078, 0.202398, 0.201917, 0.201807, 0.201994, 0.202648, 0.202067, 0.201762, 0.202019, 0.201993, 0.202165, 0.202085, 0.202051, 0.201795, 0.201811, 0.202155, 0.20234, 0.201761], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 6, 0, 1, 0, 5, 0, 1, 8, 0, 26, 16, 0, 1, 0, 1, 1, 0]': ([0.241474, 0.241283, 0.215447, 0.201788, 0.201633, 0.201584, 0.202111, 0.202245, 0.201998, 0.201971, 0.20173, 0.20199, 0.202078, 0.202398, 0.201917, 0.201807, 0.201994, 0.202648, 0.202067, 0.201762, 0.202019, 0.201993, 0.202165, 0.202085, 0.202051, 0.201795, 0.201811, 0.202155, 0.20234, 0.201761], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	23
        Max loop nest depth: 	6
        Additions: 		1208
        Multiplications: 	330
        Divisions: 		0
        Logical: 		0
        Reads: 			2068
        Writes: 		256
        Comparisons:		23
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest38.exe __orio_perftest38.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest38.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest38.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest38.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest38.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	60
        Max loop nest depth: 	6
        Additions: 		6520
        Multiplications: 	1452
        Divisions: 		0
        Logical: 		0
        Reads: 			9398
        Writes: 		939
        Comparisons:		60
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest39.exe __orio_perftest39.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest39.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest39.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest39.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest39.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	6
        Additions: 		208
        Multiplications: 	78
        Divisions: 		0
        Logical: 		0
        Reads: 			461
        Writes: 		88
        Comparisons:		15
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest40.exe __orio_perftest40.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest40.exe  
Program Test Output: 
{'[2, 2, 1, 6, 6, 3, 0, 1, 2, 0, 28, 0, 0, 1, 0, 1, 1, 1]' : 0.311255}
{'[2, 2, 1, 6, 6, 3, 0, 1, 2, 0, 28, 0, 0, 1, 0, 1, 1, 1]' : 0.294298}
{'[2, 2, 1, 6, 6, 3, 0, 1, 2, 0, 28, 0, 0, 1, 0, 1, 1, 1]' : 0.258563}
{'[2, 2, 1, 6, 6, 3, 0, 1, 2, 0, 28, 0, 0, 1, 0, 1, 1, 1]' : 0.25877}
{'[2, 2, 1, 6, 6, 3, 0, 1, 2, 0, 28, 0, 0, 1, 0, 1, 1, 1]' : 0.258947}
{'[2, 2, 1, 6, 6, 3, 0, 1, 2, 0, 28, 0, 0, 1, 0, 1, 1, 1]' : 0.258661}
{'[2, 2, 1, 6, 6, 3, 0, 1, 2, 0, 28, 0, 0, 1, 0, 1, 1, 1]' : 0.258838}
{'[2, 2, 1, 6, 6, 3, 0, 1, 2, 0, 28, 0, 0, 1, 0, 1, 1, 1]' : 0.258804}
{'[2, 2, 1, 6, 6, 3, 0, 1, 2, 0, 28, 0, 0, 1, 0, 1, 1, 1]' : 0.259241}
{'[2, 2, 1, 6, 6, 3, 0, 1, 2, 0, 28, 0, 0, 1, 0, 1, 1, 1]' : 0.258716}
{'[2, 2, 1, 6, 6, 3, 0, 1, 2, 0, 28, 0, 0, 1, 0, 1, 1, 1]' : 0.258799}
{'[2, 2, 1, 6, 6, 3, 0, 1, 2, 0, 28, 0, 0, 1, 0, 1, 1, 1]' : 0.259224}
{'[2, 2, 1, 6, 6, 3, 0, 1, 2, 0, 28, 0, 0, 1, 0, 1, 1, 1]' : 0.259391}
{'[2, 2, 1, 6, 6, 3, 0, 1, 2, 0, 28, 0, 0, 1, 0, 1, 1, 1]' : 0.259325}
{'[2, 2, 1, 6, 6, 3, 0, 1, 2, 0, 28, 0, 0, 1, 0, 1, 1, 1]' : 0.259193}
{'[2, 2, 1, 6, 6, 3, 0, 1, 2, 0, 28, 0, 0, 1, 0, 1, 1, 1]' : 0.259576}
{'[2, 2, 1, 6, 6, 3, 0, 1, 2, 0, 28, 0, 0, 1, 0, 1, 1, 1]' : 0.25976}
{'[2, 2, 1, 6, 6, 3, 0, 1, 2, 0, 28, 0, 0, 1, 0, 1, 1, 1]' : 0.259421}
{'[2, 2, 1, 6, 6, 3, 0, 1, 2, 0, 28, 0, 0, 1, 0, 1, 1, 1]' : 0.259425}
{'[2, 2, 1, 6, 6, 3, 0, 1, 2, 0, 28, 0, 0, 1, 0, 1, 1, 1]' : 0.259286}
{'[2, 2, 1, 6, 6, 3, 0, 1, 2, 0, 28, 0, 0, 1, 0, 1, 1, 1]' : 0.259083}
{'[2, 2, 1, 6, 6, 3, 0, 1, 2, 0, 28, 0, 0, 1, 0, 1, 1, 1]' : 0.259411}
{'[2, 2, 1, 6, 6, 3, 0, 1, 2, 0, 28, 0, 0, 1, 0, 1, 1, 1]' : 0.259634}
{'[2, 2, 1, 6, 6, 3, 0, 1, 2, 0, 28, 0, 0, 1, 0, 1, 1, 1]' : 0.259114}
{'[2, 2, 1, 6, 6, 3, 0, 1, 2, 0, 28, 0, 0, 1, 0, 1, 1, 1]' : 0.259088}
{'[2, 2, 1, 6, 6, 3, 0, 1, 2, 0, 28, 0, 0, 1, 0, 1, 1, 1]' : 0.259561}
{'[2, 2, 1, 6, 6, 3, 0, 1, 2, 0, 28, 0, 0, 1, 0, 1, 1, 1]' : 0.259176}
{'[2, 2, 1, 6, 6, 3, 0, 1, 2, 0, 28, 0, 0, 1, 0, 1, 1, 1]' : 0.259302}
{'[2, 2, 1, 6, 6, 3, 0, 1, 2, 0, 28, 0, 0, 1, 0, 1, 1, 1]' : 0.259658}
{'[2, 2, 1, 6, 6, 3, 0, 1, 2, 0, 28, 0, 0, 1, 0, 1, 1, 1]' : 0.259472}

out:
 ["{'[2, 2, 1, 6, 6, 3, 0, 1, 2, 0, 28, 0, 0, 1, 0, 1, 1, 1]' : 0.311255}", "{'[2, 2, 1, 6, 6, 3, 0, 1, 2, 0, 28, 0, 0, 1, 0, 1, 1, 1]' : 0.294298}", "{'[2, 2, 1, 6, 6, 3, 0, 1, 2, 0, 28, 0, 0, 1, 0, 1, 1, 1]' : 0.258563}", "{'[2, 2, 1, 6, 6, 3, 0, 1, 2, 0, 28, 0, 0, 1, 0, 1, 1, 1]' : 0.25877}", "{'[2, 2, 1, 6, 6, 3, 0, 1, 2, 0, 28, 0, 0, 1, 0, 1, 1, 1]' : 0.258947}", "{'[2, 2, 1, 6, 6, 3, 0, 1, 2, 0, 28, 0, 0, 1, 0, 1, 1, 1]' : 0.258661}", "{'[2, 2, 1, 6, 6, 3, 0, 1, 2, 0, 28, 0, 0, 1, 0, 1, 1, 1]' : 0.258838}", "{'[2, 2, 1, 6, 6, 3, 0, 1, 2, 0, 28, 0, 0, 1, 0, 1, 1, 1]' : 0.258804}", "{'[2, 2, 1, 6, 6, 3, 0, 1, 2, 0, 28, 0, 0, 1, 0, 1, 1, 1]' : 0.259241}", "{'[2, 2, 1, 6, 6, 3, 0, 1, 2, 0, 28, 0, 0, 1, 0, 1, 1, 1]' : 0.258716}", "{'[2, 2, 1, 6, 6, 3, 0, 1, 2, 0, 28, 0, 0, 1, 0, 1, 1, 1]' : 0.258799}", "{'[2, 2, 1, 6, 6, 3, 0, 1, 2, 0, 28, 0, 0, 1, 0, 1, 1, 1]' : 0.259224}", "{'[2, 2, 1, 6, 6, 3, 0, 1, 2, 0, 28, 0, 0, 1, 0, 1, 1, 1]' : 0.259391}", "{'[2, 2, 1, 6, 6, 3, 0, 1, 2, 0, 28, 0, 0, 1, 0, 1, 1, 1]' : 0.259325}", "{'[2, 2, 1, 6, 6, 3, 0, 1, 2, 0, 28, 0, 0, 1, 0, 1, 1, 1]' : 0.259193}", "{'[2, 2, 1, 6, 6, 3, 0, 1, 2, 0, 28, 0, 0, 1, 0, 1, 1, 1]' : 0.259576}", "{'[2, 2, 1, 6, 6, 3, 0, 1, 2, 0, 28, 0, 0, 1, 0, 1, 1, 1]' : 0.25976}", "{'[2, 2, 1, 6, 6, 3, 0, 1, 2, 0, 28, 0, 0, 1, 0, 1, 1, 1]' : 0.259421}", "{'[2, 2, 1, 6, 6, 3, 0, 1, 2, 0, 28, 0, 0, 1, 0, 1, 1, 1]' : 0.259425}", "{'[2, 2, 1, 6, 6, 3, 0, 1, 2, 0, 28, 0, 0, 1, 0, 1, 1, 1]' : 0.259286}", "{'[2, 2, 1, 6, 6, 3, 0, 1, 2, 0, 28, 0, 0, 1, 0, 1, 1, 1]' : 0.259083}", "{'[2, 2, 1, 6, 6, 3, 0, 1, 2, 0, 28, 0, 0, 1, 0, 1, 1, 1]' : 0.259411}", "{'[2, 2, 1, 6, 6, 3, 0, 1, 2, 0, 28, 0, 0, 1, 0, 1, 1, 1]' : 0.259634}", "{'[2, 2, 1, 6, 6, 3, 0, 1, 2, 0, 28, 0, 0, 1, 0, 1, 1, 1]' : 0.259114}", "{'[2, 2, 1, 6, 6, 3, 0, 1, 2, 0, 28, 0, 0, 1, 0, 1, 1, 1]' : 0.259088}", "{'[2, 2, 1, 6, 6, 3, 0, 1, 2, 0, 28, 0, 0, 1, 0, 1, 1, 1]' : 0.259561}", "{'[2, 2, 1, 6, 6, 3, 0, 1, 2, 0, 28, 0, 0, 1, 0, 1, 1, 1]' : 0.259176}", "{'[2, 2, 1, 6, 6, 3, 0, 1, 2, 0, 28, 0, 0, 1, 0, 1, 1, 1]' : 0.259302}", "{'[2, 2, 1, 6, 6, 3, 0, 1, 2, 0, 28, 0, 0, 1, 0, 1, 1, 1]' : 0.259658}", "{'[2, 2, 1, 6, 6, 3, 0, 1, 2, 0, 28, 0, 0, 1, 0, 1, 1, 1]' : 0.259472}"]
returning from 'run': {'[2, 2, 1, 6, 6, 3, 0, 1, 2, 0, 28, 0, 0, 1, 0, 1, 1, 1]': ([0.311255, 0.294298, 0.258563, 0.25877, 0.258947, 0.258661, 0.258838, 0.258804, 0.259241, 0.258716, 0.258799, 0.259224, 0.259391, 0.259325, 0.259193, 0.259576, 0.25976, 0.259421, 0.259425, 0.259286, 0.259083, 0.259411, 0.259634, 0.259114, 0.259088, 0.259561, 0.259176, 0.259302, 0.259658, 0.259472], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 2, 1, 6, 6, 3, 0, 1, 2, 0, 28, 0, 0, 1, 0, 1, 1, 1]': ([0.311255, 0.294298, 0.258563, 0.25877, 0.258947, 0.258661, 0.258838, 0.258804, 0.259241, 0.258716, 0.258799, 0.259224, 0.259391, 0.259325, 0.259193, 0.259576, 0.25976, 0.259421, 0.259425, 0.259286, 0.259083, 0.259411, 0.259634, 0.259114, 0.259088, 0.259561, 0.259176, 0.259302, 0.259658, 0.259472], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		257
        Multiplications: 	84
        Divisions: 		0
        Logical: 		0
        Reads: 			585
        Writes: 		139
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest41.exe __orio_perftest41.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest41.exe  
Program Test Output: 
{'[0, 1, 2, 2, 5, 0, 0, 0, 29, 0, 22, 8, 0, 0, 1, 1, 1, 0]' : 0.204107}
{'[0, 1, 2, 2, 5, 0, 0, 0, 29, 0, 22, 8, 0, 0, 1, 1, 1, 0]' : 0.204002}
{'[0, 1, 2, 2, 5, 0, 0, 0, 29, 0, 22, 8, 0, 0, 1, 1, 1, 0]' : 0.203285}
{'[0, 1, 2, 2, 5, 0, 0, 0, 29, 0, 22, 8, 0, 0, 1, 1, 1, 0]' : 0.174458}
{'[0, 1, 2, 2, 5, 0, 0, 0, 29, 0, 22, 8, 0, 0, 1, 1, 1, 0]' : 0.171274}
{'[0, 1, 2, 2, 5, 0, 0, 0, 29, 0, 22, 8, 0, 0, 1, 1, 1, 0]' : 0.171138}
{'[0, 1, 2, 2, 5, 0, 0, 0, 29, 0, 22, 8, 0, 0, 1, 1, 1, 0]' : 0.171244}
{'[0, 1, 2, 2, 5, 0, 0, 0, 29, 0, 22, 8, 0, 0, 1, 1, 1, 0]' : 0.171219}
{'[0, 1, 2, 2, 5, 0, 0, 0, 29, 0, 22, 8, 0, 0, 1, 1, 1, 0]' : 0.171169}
{'[0, 1, 2, 2, 5, 0, 0, 0, 29, 0, 22, 8, 0, 0, 1, 1, 1, 0]' : 0.171653}
{'[0, 1, 2, 2, 5, 0, 0, 0, 29, 0, 22, 8, 0, 0, 1, 1, 1, 0]' : 0.171507}
{'[0, 1, 2, 2, 5, 0, 0, 0, 29, 0, 22, 8, 0, 0, 1, 1, 1, 0]' : 0.171181}
{'[0, 1, 2, 2, 5, 0, 0, 0, 29, 0, 22, 8, 0, 0, 1, 1, 1, 0]' : 0.171223}
{'[0, 1, 2, 2, 5, 0, 0, 0, 29, 0, 22, 8, 0, 0, 1, 1, 1, 0]' : 0.171286}
{'[0, 1, 2, 2, 5, 0, 0, 0, 29, 0, 22, 8, 0, 0, 1, 1, 1, 0]' : 0.171213}
{'[0, 1, 2, 2, 5, 0, 0, 0, 29, 0, 22, 8, 0, 0, 1, 1, 1, 0]' : 0.171449}
{'[0, 1, 2, 2, 5, 0, 0, 0, 29, 0, 22, 8, 0, 0, 1, 1, 1, 0]' : 0.171785}
{'[0, 1, 2, 2, 5, 0, 0, 0, 29, 0, 22, 8, 0, 0, 1, 1, 1, 0]' : 0.171291}
{'[0, 1, 2, 2, 5, 0, 0, 0, 29, 0, 22, 8, 0, 0, 1, 1, 1, 0]' : 0.171247}
{'[0, 1, 2, 2, 5, 0, 0, 0, 29, 0, 22, 8, 0, 0, 1, 1, 1, 0]' : 0.171216}
{'[0, 1, 2, 2, 5, 0, 0, 0, 29, 0, 22, 8, 0, 0, 1, 1, 1, 0]' : 0.171569}
{'[0, 1, 2, 2, 5, 0, 0, 0, 29, 0, 22, 8, 0, 0, 1, 1, 1, 0]' : 0.171329}
{'[0, 1, 2, 2, 5, 0, 0, 0, 29, 0, 22, 8, 0, 0, 1, 1, 1, 0]' : 0.171509}
{'[0, 1, 2, 2, 5, 0, 0, 0, 29, 0, 22, 8, 0, 0, 1, 1, 1, 0]' : 0.171361}
{'[0, 1, 2, 2, 5, 0, 0, 0, 29, 0, 22, 8, 0, 0, 1, 1, 1, 0]' : 0.171338}
{'[0, 1, 2, 2, 5, 0, 0, 0, 29, 0, 22, 8, 0, 0, 1, 1, 1, 0]' : 0.171615}
{'[0, 1, 2, 2, 5, 0, 0, 0, 29, 0, 22, 8, 0, 0, 1, 1, 1, 0]' : 0.171132}
{'[0, 1, 2, 2, 5, 0, 0, 0, 29, 0, 22, 8, 0, 0, 1, 1, 1, 0]' : 0.171364}
{'[0, 1, 2, 2, 5, 0, 0, 0, 29, 0, 22, 8, 0, 0, 1, 1, 1, 0]' : 0.171253}
{'[0, 1, 2, 2, 5, 0, 0, 0, 29, 0, 22, 8, 0, 0, 1, 1, 1, 0]' : 0.17161}

out:
 ["{'[0, 1, 2, 2, 5, 0, 0, 0, 29, 0, 22, 8, 0, 0, 1, 1, 1, 0]' : 0.204107}", "{'[0, 1, 2, 2, 5, 0, 0, 0, 29, 0, 22, 8, 0, 0, 1, 1, 1, 0]' : 0.204002}", "{'[0, 1, 2, 2, 5, 0, 0, 0, 29, 0, 22, 8, 0, 0, 1, 1, 1, 0]' : 0.203285}", "{'[0, 1, 2, 2, 5, 0, 0, 0, 29, 0, 22, 8, 0, 0, 1, 1, 1, 0]' : 0.174458}", "{'[0, 1, 2, 2, 5, 0, 0, 0, 29, 0, 22, 8, 0, 0, 1, 1, 1, 0]' : 0.171274}", "{'[0, 1, 2, 2, 5, 0, 0, 0, 29, 0, 22, 8, 0, 0, 1, 1, 1, 0]' : 0.171138}", "{'[0, 1, 2, 2, 5, 0, 0, 0, 29, 0, 22, 8, 0, 0, 1, 1, 1, 0]' : 0.171244}", "{'[0, 1, 2, 2, 5, 0, 0, 0, 29, 0, 22, 8, 0, 0, 1, 1, 1, 0]' : 0.171219}", "{'[0, 1, 2, 2, 5, 0, 0, 0, 29, 0, 22, 8, 0, 0, 1, 1, 1, 0]' : 0.171169}", "{'[0, 1, 2, 2, 5, 0, 0, 0, 29, 0, 22, 8, 0, 0, 1, 1, 1, 0]' : 0.171653}", "{'[0, 1, 2, 2, 5, 0, 0, 0, 29, 0, 22, 8, 0, 0, 1, 1, 1, 0]' : 0.171507}", "{'[0, 1, 2, 2, 5, 0, 0, 0, 29, 0, 22, 8, 0, 0, 1, 1, 1, 0]' : 0.171181}", "{'[0, 1, 2, 2, 5, 0, 0, 0, 29, 0, 22, 8, 0, 0, 1, 1, 1, 0]' : 0.171223}", "{'[0, 1, 2, 2, 5, 0, 0, 0, 29, 0, 22, 8, 0, 0, 1, 1, 1, 0]' : 0.171286}", "{'[0, 1, 2, 2, 5, 0, 0, 0, 29, 0, 22, 8, 0, 0, 1, 1, 1, 0]' : 0.171213}", "{'[0, 1, 2, 2, 5, 0, 0, 0, 29, 0, 22, 8, 0, 0, 1, 1, 1, 0]' : 0.171449}", "{'[0, 1, 2, 2, 5, 0, 0, 0, 29, 0, 22, 8, 0, 0, 1, 1, 1, 0]' : 0.171785}", "{'[0, 1, 2, 2, 5, 0, 0, 0, 29, 0, 22, 8, 0, 0, 1, 1, 1, 0]' : 0.171291}", "{'[0, 1, 2, 2, 5, 0, 0, 0, 29, 0, 22, 8, 0, 0, 1, 1, 1, 0]' : 0.171247}", "{'[0, 1, 2, 2, 5, 0, 0, 0, 29, 0, 22, 8, 0, 0, 1, 1, 1, 0]' : 0.171216}", "{'[0, 1, 2, 2, 5, 0, 0, 0, 29, 0, 22, 8, 0, 0, 1, 1, 1, 0]' : 0.171569}", "{'[0, 1, 2, 2, 5, 0, 0, 0, 29, 0, 22, 8, 0, 0, 1, 1, 1, 0]' : 0.171329}", "{'[0, 1, 2, 2, 5, 0, 0, 0, 29, 0, 22, 8, 0, 0, 1, 1, 1, 0]' : 0.171509}", "{'[0, 1, 2, 2, 5, 0, 0, 0, 29, 0, 22, 8, 0, 0, 1, 1, 1, 0]' : 0.171361}", "{'[0, 1, 2, 2, 5, 0, 0, 0, 29, 0, 22, 8, 0, 0, 1, 1, 1, 0]' : 0.171338}", "{'[0, 1, 2, 2, 5, 0, 0, 0, 29, 0, 22, 8, 0, 0, 1, 1, 1, 0]' : 0.171615}", "{'[0, 1, 2, 2, 5, 0, 0, 0, 29, 0, 22, 8, 0, 0, 1, 1, 1, 0]' : 0.171132}", "{'[0, 1, 2, 2, 5, 0, 0, 0, 29, 0, 22, 8, 0, 0, 1, 1, 1, 0]' : 0.171364}", "{'[0, 1, 2, 2, 5, 0, 0, 0, 29, 0, 22, 8, 0, 0, 1, 1, 1, 0]' : 0.171253}", "{'[0, 1, 2, 2, 5, 0, 0, 0, 29, 0, 22, 8, 0, 0, 1, 1, 1, 0]' : 0.17161}"]
returning from 'run': {'[0, 1, 2, 2, 5, 0, 0, 0, 29, 0, 22, 8, 0, 0, 1, 1, 1, 0]': ([0.204107, 0.204002, 0.203285, 0.174458, 0.171274, 0.171138, 0.171244, 0.171219, 0.171169, 0.171653, 0.171507, 0.171181, 0.171223, 0.171286, 0.171213, 0.171449, 0.171785, 0.171291, 0.171247, 0.171216, 0.171569, 0.171329, 0.171509, 0.171361, 0.171338, 0.171615, 0.171132, 0.171364, 0.171253, 0.17161], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 2, 2, 5, 0, 0, 0, 29, 0, 22, 8, 0, 0, 1, 1, 1, 0]': ([0.204107, 0.204002, 0.203285, 0.174458, 0.171274, 0.171138, 0.171244, 0.171219, 0.171169, 0.171653, 0.171507, 0.171181, 0.171223, 0.171286, 0.171213, 0.171449, 0.171785, 0.171291, 0.171247, 0.171216, 0.171569, 0.171329, 0.171509, 0.171361, 0.171338, 0.171615, 0.171132, 0.171364, 0.171253, 0.17161], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = kkk
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		413
        Multiplications: 	134
        Divisions: 		0
        Logical: 		0
        Reads: 			871
        Writes: 		131
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest42.exe __orio_perftest42.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest42.exe  
Program Test Output: 
{'[2, 6, 4, 3, 5, 2, 1, 0, 29, 0, 26, 29, 0, 0, 1, 0, 1, 0]' : 0.250913}
{'[2, 6, 4, 3, 5, 2, 1, 0, 29, 0, 26, 29, 0, 0, 1, 0, 1, 0]' : 0.250879}
{'[2, 6, 4, 3, 5, 2, 1, 0, 29, 0, 26, 29, 0, 0, 1, 0, 1, 0]' : 0.229355}
{'[2, 6, 4, 3, 5, 2, 1, 0, 29, 0, 26, 29, 0, 0, 1, 0, 1, 0]' : 0.21071}
{'[2, 6, 4, 3, 5, 2, 1, 0, 29, 0, 26, 29, 0, 0, 1, 0, 1, 0]' : 0.210584}
{'[2, 6, 4, 3, 5, 2, 1, 0, 29, 0, 26, 29, 0, 0, 1, 0, 1, 0]' : 0.210779}
{'[2, 6, 4, 3, 5, 2, 1, 0, 29, 0, 26, 29, 0, 0, 1, 0, 1, 0]' : 0.210396}
{'[2, 6, 4, 3, 5, 2, 1, 0, 29, 0, 26, 29, 0, 0, 1, 0, 1, 0]' : 0.210933}
{'[2, 6, 4, 3, 5, 2, 1, 0, 29, 0, 26, 29, 0, 0, 1, 0, 1, 0]' : 0.210661}
{'[2, 6, 4, 3, 5, 2, 1, 0, 29, 0, 26, 29, 0, 0, 1, 0, 1, 0]' : 0.21081}
{'[2, 6, 4, 3, 5, 2, 1, 0, 29, 0, 26, 29, 0, 0, 1, 0, 1, 0]' : 0.210568}
{'[2, 6, 4, 3, 5, 2, 1, 0, 29, 0, 26, 29, 0, 0, 1, 0, 1, 0]' : 0.210507}
{'[2, 6, 4, 3, 5, 2, 1, 0, 29, 0, 26, 29, 0, 0, 1, 0, 1, 0]' : 0.210963}
{'[2, 6, 4, 3, 5, 2, 1, 0, 29, 0, 26, 29, 0, 0, 1, 0, 1, 0]' : 0.210664}
{'[2, 6, 4, 3, 5, 2, 1, 0, 29, 0, 26, 29, 0, 0, 1, 0, 1, 0]' : 0.210713}
{'[2, 6, 4, 3, 5, 2, 1, 0, 29, 0, 26, 29, 0, 0, 1, 0, 1, 0]' : 0.210506}
{'[2, 6, 4, 3, 5, 2, 1, 0, 29, 0, 26, 29, 0, 0, 1, 0, 1, 0]' : 0.210521}
{'[2, 6, 4, 3, 5, 2, 1, 0, 29, 0, 26, 29, 0, 0, 1, 0, 1, 0]' : 0.211003}
{'[2, 6, 4, 3, 5, 2, 1, 0, 29, 0, 26, 29, 0, 0, 1, 0, 1, 0]' : 0.210853}
{'[2, 6, 4, 3, 5, 2, 1, 0, 29, 0, 26, 29, 0, 0, 1, 0, 1, 0]' : 0.210981}
{'[2, 6, 4, 3, 5, 2, 1, 0, 29, 0, 26, 29, 0, 0, 1, 0, 1, 0]' : 0.21057}
{'[2, 6, 4, 3, 5, 2, 1, 0, 29, 0, 26, 29, 0, 0, 1, 0, 1, 0]' : 0.210609}
{'[2, 6, 4, 3, 5, 2, 1, 0, 29, 0, 26, 29, 0, 0, 1, 0, 1, 0]' : 0.211034}
{'[2, 6, 4, 3, 5, 2, 1, 0, 29, 0, 26, 29, 0, 0, 1, 0, 1, 0]' : 0.210949}
{'[2, 6, 4, 3, 5, 2, 1, 0, 29, 0, 26, 29, 0, 0, 1, 0, 1, 0]' : 0.210588}
{'[2, 6, 4, 3, 5, 2, 1, 0, 29, 0, 26, 29, 0, 0, 1, 0, 1, 0]' : 0.210467}
{'[2, 6, 4, 3, 5, 2, 1, 0, 29, 0, 26, 29, 0, 0, 1, 0, 1, 0]' : 0.210769}
{'[2, 6, 4, 3, 5, 2, 1, 0, 29, 0, 26, 29, 0, 0, 1, 0, 1, 0]' : 0.210545}
{'[2, 6, 4, 3, 5, 2, 1, 0, 29, 0, 26, 29, 0, 0, 1, 0, 1, 0]' : 0.211199}
{'[2, 6, 4, 3, 5, 2, 1, 0, 29, 0, 26, 29, 0, 0, 1, 0, 1, 0]' : 0.210581}

out:
 ["{'[2, 6, 4, 3, 5, 2, 1, 0, 29, 0, 26, 29, 0, 0, 1, 0, 1, 0]' : 0.250913}", "{'[2, 6, 4, 3, 5, 2, 1, 0, 29, 0, 26, 29, 0, 0, 1, 0, 1, 0]' : 0.250879}", "{'[2, 6, 4, 3, 5, 2, 1, 0, 29, 0, 26, 29, 0, 0, 1, 0, 1, 0]' : 0.229355}", "{'[2, 6, 4, 3, 5, 2, 1, 0, 29, 0, 26, 29, 0, 0, 1, 0, 1, 0]' : 0.21071}", "{'[2, 6, 4, 3, 5, 2, 1, 0, 29, 0, 26, 29, 0, 0, 1, 0, 1, 0]' : 0.210584}", "{'[2, 6, 4, 3, 5, 2, 1, 0, 29, 0, 26, 29, 0, 0, 1, 0, 1, 0]' : 0.210779}", "{'[2, 6, 4, 3, 5, 2, 1, 0, 29, 0, 26, 29, 0, 0, 1, 0, 1, 0]' : 0.210396}", "{'[2, 6, 4, 3, 5, 2, 1, 0, 29, 0, 26, 29, 0, 0, 1, 0, 1, 0]' : 0.210933}", "{'[2, 6, 4, 3, 5, 2, 1, 0, 29, 0, 26, 29, 0, 0, 1, 0, 1, 0]' : 0.210661}", "{'[2, 6, 4, 3, 5, 2, 1, 0, 29, 0, 26, 29, 0, 0, 1, 0, 1, 0]' : 0.21081}", "{'[2, 6, 4, 3, 5, 2, 1, 0, 29, 0, 26, 29, 0, 0, 1, 0, 1, 0]' : 0.210568}", "{'[2, 6, 4, 3, 5, 2, 1, 0, 29, 0, 26, 29, 0, 0, 1, 0, 1, 0]' : 0.210507}", "{'[2, 6, 4, 3, 5, 2, 1, 0, 29, 0, 26, 29, 0, 0, 1, 0, 1, 0]' : 0.210963}", "{'[2, 6, 4, 3, 5, 2, 1, 0, 29, 0, 26, 29, 0, 0, 1, 0, 1, 0]' : 0.210664}", "{'[2, 6, 4, 3, 5, 2, 1, 0, 29, 0, 26, 29, 0, 0, 1, 0, 1, 0]' : 0.210713}", "{'[2, 6, 4, 3, 5, 2, 1, 0, 29, 0, 26, 29, 0, 0, 1, 0, 1, 0]' : 0.210506}", "{'[2, 6, 4, 3, 5, 2, 1, 0, 29, 0, 26, 29, 0, 0, 1, 0, 1, 0]' : 0.210521}", "{'[2, 6, 4, 3, 5, 2, 1, 0, 29, 0, 26, 29, 0, 0, 1, 0, 1, 0]' : 0.211003}", "{'[2, 6, 4, 3, 5, 2, 1, 0, 29, 0, 26, 29, 0, 0, 1, 0, 1, 0]' : 0.210853}", "{'[2, 6, 4, 3, 5, 2, 1, 0, 29, 0, 26, 29, 0, 0, 1, 0, 1, 0]' : 0.210981}", "{'[2, 6, 4, 3, 5, 2, 1, 0, 29, 0, 26, 29, 0, 0, 1, 0, 1, 0]' : 0.21057}", "{'[2, 6, 4, 3, 5, 2, 1, 0, 29, 0, 26, 29, 0, 0, 1, 0, 1, 0]' : 0.210609}", "{'[2, 6, 4, 3, 5, 2, 1, 0, 29, 0, 26, 29, 0, 0, 1, 0, 1, 0]' : 0.211034}", "{'[2, 6, 4, 3, 5, 2, 1, 0, 29, 0, 26, 29, 0, 0, 1, 0, 1, 0]' : 0.210949}", "{'[2, 6, 4, 3, 5, 2, 1, 0, 29, 0, 26, 29, 0, 0, 1, 0, 1, 0]' : 0.210588}", "{'[2, 6, 4, 3, 5, 2, 1, 0, 29, 0, 26, 29, 0, 0, 1, 0, 1, 0]' : 0.210467}", "{'[2, 6, 4, 3, 5, 2, 1, 0, 29, 0, 26, 29, 0, 0, 1, 0, 1, 0]' : 0.210769}", "{'[2, 6, 4, 3, 5, 2, 1, 0, 29, 0, 26, 29, 0, 0, 1, 0, 1, 0]' : 0.210545}", "{'[2, 6, 4, 3, 5, 2, 1, 0, 29, 0, 26, 29, 0, 0, 1, 0, 1, 0]' : 0.211199}", "{'[2, 6, 4, 3, 5, 2, 1, 0, 29, 0, 26, 29, 0, 0, 1, 0, 1, 0]' : 0.210581}"]
returning from 'run': {'[2, 6, 4, 3, 5, 2, 1, 0, 29, 0, 26, 29, 0, 0, 1, 0, 1, 0]': ([0.250913, 0.250879, 0.229355, 0.21071, 0.210584, 0.210779, 0.210396, 0.210933, 0.210661, 0.21081, 0.210568, 0.210507, 0.210963, 0.210664, 0.210713, 0.210506, 0.210521, 0.211003, 0.210853, 0.210981, 0.21057, 0.210609, 0.211034, 0.210949, 0.210588, 0.210467, 0.210769, 0.210545, 0.211199, 0.210581], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 6, 4, 3, 5, 2, 1, 0, 29, 0, 26, 29, 0, 0, 1, 0, 1, 0]': ([0.250913, 0.250879, 0.229355, 0.21071, 0.210584, 0.210779, 0.210396, 0.210933, 0.210661, 0.21081, 0.210568, 0.210507, 0.210963, 0.210664, 0.210713, 0.210506, 0.210521, 0.211003, 0.210853, 0.210981, 0.21057, 0.210609, 0.211034, 0.210949, 0.210588, 0.210467, 0.210769, 0.210545, 0.211199, 0.210581], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	3
        Additions: 		2031
        Multiplications: 	936
        Divisions: 		0
        Logical: 		0
        Reads: 			4226
        Writes: 		792
        Comparisons:		25
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest43.exe __orio_perftest43.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest43.exe  
Program Test Output: 
{'[1, 0, 0, 0, 0, 0, 1, 1, 5, 5, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.143285}
{'[1, 0, 0, 0, 0, 0, 1, 1, 5, 5, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.143216}
{'[1, 0, 0, 0, 0, 0, 1, 1, 5, 5, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.143181}
{'[1, 0, 0, 0, 0, 0, 1, 1, 5, 5, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.142017}
{'[1, 0, 0, 0, 0, 0, 1, 1, 5, 5, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.124991}
{'[1, 0, 0, 0, 0, 0, 1, 1, 5, 5, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.123271}
{'[1, 0, 0, 0, 0, 0, 1, 1, 5, 5, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.123371}
{'[1, 0, 0, 0, 0, 0, 1, 1, 5, 5, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.123371}
{'[1, 0, 0, 0, 0, 0, 1, 1, 5, 5, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.123508}
{'[1, 0, 0, 0, 0, 0, 1, 1, 5, 5, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.123521}
{'[1, 0, 0, 0, 0, 0, 1, 1, 5, 5, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.123671}
{'[1, 0, 0, 0, 0, 0, 1, 1, 5, 5, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.123816}
{'[1, 0, 0, 0, 0, 0, 1, 1, 5, 5, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.123648}
{'[1, 0, 0, 0, 0, 0, 1, 1, 5, 5, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.12384}
{'[1, 0, 0, 0, 0, 0, 1, 1, 5, 5, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.123345}
{'[1, 0, 0, 0, 0, 0, 1, 1, 5, 5, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.123261}
{'[1, 0, 0, 0, 0, 0, 1, 1, 5, 5, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.123394}
{'[1, 0, 0, 0, 0, 0, 1, 1, 5, 5, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.123636}
{'[1, 0, 0, 0, 0, 0, 1, 1, 5, 5, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.123352}
{'[1, 0, 0, 0, 0, 0, 1, 1, 5, 5, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.123222}
{'[1, 0, 0, 0, 0, 0, 1, 1, 5, 5, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.123641}
{'[1, 0, 0, 0, 0, 0, 1, 1, 5, 5, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.123789}
{'[1, 0, 0, 0, 0, 0, 1, 1, 5, 5, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.123515}
{'[1, 0, 0, 0, 0, 0, 1, 1, 5, 5, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.123259}
{'[1, 0, 0, 0, 0, 0, 1, 1, 5, 5, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.123548}
{'[1, 0, 0, 0, 0, 0, 1, 1, 5, 5, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.123309}
{'[1, 0, 0, 0, 0, 0, 1, 1, 5, 5, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.123409}
{'[1, 0, 0, 0, 0, 0, 1, 1, 5, 5, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.123313}
{'[1, 0, 0, 0, 0, 0, 1, 1, 5, 5, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.123218}
{'[1, 0, 0, 0, 0, 0, 1, 1, 5, 5, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.123789}

out:
 ["{'[1, 0, 0, 0, 0, 0, 1, 1, 5, 5, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.143285}", "{'[1, 0, 0, 0, 0, 0, 1, 1, 5, 5, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.143216}", "{'[1, 0, 0, 0, 0, 0, 1, 1, 5, 5, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.143181}", "{'[1, 0, 0, 0, 0, 0, 1, 1, 5, 5, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.142017}", "{'[1, 0, 0, 0, 0, 0, 1, 1, 5, 5, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.124991}", "{'[1, 0, 0, 0, 0, 0, 1, 1, 5, 5, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.123271}", "{'[1, 0, 0, 0, 0, 0, 1, 1, 5, 5, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.123371}", "{'[1, 0, 0, 0, 0, 0, 1, 1, 5, 5, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.123371}", "{'[1, 0, 0, 0, 0, 0, 1, 1, 5, 5, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.123508}", "{'[1, 0, 0, 0, 0, 0, 1, 1, 5, 5, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.123521}", "{'[1, 0, 0, 0, 0, 0, 1, 1, 5, 5, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.123671}", "{'[1, 0, 0, 0, 0, 0, 1, 1, 5, 5, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.123816}", "{'[1, 0, 0, 0, 0, 0, 1, 1, 5, 5, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.123648}", "{'[1, 0, 0, 0, 0, 0, 1, 1, 5, 5, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.12384}", "{'[1, 0, 0, 0, 0, 0, 1, 1, 5, 5, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.123345}", "{'[1, 0, 0, 0, 0, 0, 1, 1, 5, 5, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.123261}", "{'[1, 0, 0, 0, 0, 0, 1, 1, 5, 5, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.123394}", "{'[1, 0, 0, 0, 0, 0, 1, 1, 5, 5, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.123636}", "{'[1, 0, 0, 0, 0, 0, 1, 1, 5, 5, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.123352}", "{'[1, 0, 0, 0, 0, 0, 1, 1, 5, 5, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.123222}", "{'[1, 0, 0, 0, 0, 0, 1, 1, 5, 5, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.123641}", "{'[1, 0, 0, 0, 0, 0, 1, 1, 5, 5, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.123789}", "{'[1, 0, 0, 0, 0, 0, 1, 1, 5, 5, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.123515}", "{'[1, 0, 0, 0, 0, 0, 1, 1, 5, 5, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.123259}", "{'[1, 0, 0, 0, 0, 0, 1, 1, 5, 5, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.123548}", "{'[1, 0, 0, 0, 0, 0, 1, 1, 5, 5, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.123309}", "{'[1, 0, 0, 0, 0, 0, 1, 1, 5, 5, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.123409}", "{'[1, 0, 0, 0, 0, 0, 1, 1, 5, 5, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.123313}", "{'[1, 0, 0, 0, 0, 0, 1, 1, 5, 5, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.123218}", "{'[1, 0, 0, 0, 0, 0, 1, 1, 5, 5, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.123789}"]
returning from 'run': {'[1, 0, 0, 0, 0, 0, 1, 1, 5, 5, 0, 9, 2, 0, 0, 1, 1, 0]': ([0.143285, 0.143216, 0.143181, 0.142017, 0.124991, 0.123271, 0.123371, 0.123371, 0.123508, 0.123521, 0.123671, 0.123816, 0.123648, 0.12384, 0.123345, 0.123261, 0.123394, 0.123636, 0.123352, 0.123222, 0.123641, 0.123789, 0.123515, 0.123259, 0.123548, 0.123309, 0.123409, 0.123313, 0.123218, 0.123789], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 0, 0, 0, 0, 1, 1, 5, 5, 0, 9, 2, 0, 0, 1, 1, 0]': ([0.143285, 0.143216, 0.143181, 0.142017, 0.124991, 0.123271, 0.123371, 0.123371, 0.123508, 0.123521, 0.123671, 0.123816, 0.123648, 0.12384, 0.123345, 0.123261, 0.123394, 0.123636, 0.123352, 0.123222, 0.123641, 0.123789, 0.123515, 0.123259, 0.123548, 0.123309, 0.123409, 0.123313, 0.123218, 0.123789], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	63
        Max loop nest depth: 	5
        Additions: 		5008
        Multiplications: 	1728
        Divisions: 		0
        Logical: 		0
        Reads: 			10911
        Writes: 		2480
        Comparisons:		63
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest44.exe __orio_perftest44.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest44.exe  
Program Test Output: 
{'[4, 4, 4, 0, 0, 3, 0, 0, 11, 22, 0, 25, 0, 0, 1, 1, 0, 1]' : 0.15283}
{'[4, 4, 4, 0, 0, 3, 0, 0, 11, 22, 0, 25, 0, 0, 1, 1, 0, 1]' : 0.152706}
{'[4, 4, 4, 0, 0, 3, 0, 0, 11, 22, 0, 25, 0, 0, 1, 1, 0, 1]' : 0.152548}
{'[4, 4, 4, 0, 0, 3, 0, 0, 11, 22, 0, 25, 0, 0, 1, 1, 0, 1]' : 0.14335}
{'[4, 4, 4, 0, 0, 3, 0, 0, 11, 22, 0, 25, 0, 0, 1, 1, 0, 1]' : 0.131833}
{'[4, 4, 4, 0, 0, 3, 0, 0, 11, 22, 0, 25, 0, 0, 1, 1, 0, 1]' : 0.131954}
{'[4, 4, 4, 0, 0, 3, 0, 0, 11, 22, 0, 25, 0, 0, 1, 1, 0, 1]' : 0.131914}
{'[4, 4, 4, 0, 0, 3, 0, 0, 11, 22, 0, 25, 0, 0, 1, 1, 0, 1]' : 0.131807}
{'[4, 4, 4, 0, 0, 3, 0, 0, 11, 22, 0, 25, 0, 0, 1, 1, 0, 1]' : 0.131873}
{'[4, 4, 4, 0, 0, 3, 0, 0, 11, 22, 0, 25, 0, 0, 1, 1, 0, 1]' : 0.13212}
{'[4, 4, 4, 0, 0, 3, 0, 0, 11, 22, 0, 25, 0, 0, 1, 1, 0, 1]' : 0.132055}
{'[4, 4, 4, 0, 0, 3, 0, 0, 11, 22, 0, 25, 0, 0, 1, 1, 0, 1]' : 0.132121}
{'[4, 4, 4, 0, 0, 3, 0, 0, 11, 22, 0, 25, 0, 0, 1, 1, 0, 1]' : 0.131847}
{'[4, 4, 4, 0, 0, 3, 0, 0, 11, 22, 0, 25, 0, 0, 1, 1, 0, 1]' : 0.13185}
{'[4, 4, 4, 0, 0, 3, 0, 0, 11, 22, 0, 25, 0, 0, 1, 1, 0, 1]' : 0.13204}
{'[4, 4, 4, 0, 0, 3, 0, 0, 11, 22, 0, 25, 0, 0, 1, 1, 0, 1]' : 0.131897}
{'[4, 4, 4, 0, 0, 3, 0, 0, 11, 22, 0, 25, 0, 0, 1, 1, 0, 1]' : 0.131785}
{'[4, 4, 4, 0, 0, 3, 0, 0, 11, 22, 0, 25, 0, 0, 1, 1, 0, 1]' : 0.131977}
{'[4, 4, 4, 0, 0, 3, 0, 0, 11, 22, 0, 25, 0, 0, 1, 1, 0, 1]' : 0.131962}
{'[4, 4, 4, 0, 0, 3, 0, 0, 11, 22, 0, 25, 0, 0, 1, 1, 0, 1]' : 0.132388}
{'[4, 4, 4, 0, 0, 3, 0, 0, 11, 22, 0, 25, 0, 0, 1, 1, 0, 1]' : 0.131978}
{'[4, 4, 4, 0, 0, 3, 0, 0, 11, 22, 0, 25, 0, 0, 1, 1, 0, 1]' : 0.131892}
{'[4, 4, 4, 0, 0, 3, 0, 0, 11, 22, 0, 25, 0, 0, 1, 1, 0, 1]' : 0.131756}
{'[4, 4, 4, 0, 0, 3, 0, 0, 11, 22, 0, 25, 0, 0, 1, 1, 0, 1]' : 0.131775}
{'[4, 4, 4, 0, 0, 3, 0, 0, 11, 22, 0, 25, 0, 0, 1, 1, 0, 1]' : 0.131971}
{'[4, 4, 4, 0, 0, 3, 0, 0, 11, 22, 0, 25, 0, 0, 1, 1, 0, 1]' : 0.13199}
{'[4, 4, 4, 0, 0, 3, 0, 0, 11, 22, 0, 25, 0, 0, 1, 1, 0, 1]' : 0.131901}
{'[4, 4, 4, 0, 0, 3, 0, 0, 11, 22, 0, 25, 0, 0, 1, 1, 0, 1]' : 0.132084}
{'[4, 4, 4, 0, 0, 3, 0, 0, 11, 22, 0, 25, 0, 0, 1, 1, 0, 1]' : 0.132167}
{'[4, 4, 4, 0, 0, 3, 0, 0, 11, 22, 0, 25, 0, 0, 1, 1, 0, 1]' : 0.131924}

out:
 ["{'[4, 4, 4, 0, 0, 3, 0, 0, 11, 22, 0, 25, 0, 0, 1, 1, 0, 1]' : 0.15283}", "{'[4, 4, 4, 0, 0, 3, 0, 0, 11, 22, 0, 25, 0, 0, 1, 1, 0, 1]' : 0.152706}", "{'[4, 4, 4, 0, 0, 3, 0, 0, 11, 22, 0, 25, 0, 0, 1, 1, 0, 1]' : 0.152548}", "{'[4, 4, 4, 0, 0, 3, 0, 0, 11, 22, 0, 25, 0, 0, 1, 1, 0, 1]' : 0.14335}", "{'[4, 4, 4, 0, 0, 3, 0, 0, 11, 22, 0, 25, 0, 0, 1, 1, 0, 1]' : 0.131833}", "{'[4, 4, 4, 0, 0, 3, 0, 0, 11, 22, 0, 25, 0, 0, 1, 1, 0, 1]' : 0.131954}", "{'[4, 4, 4, 0, 0, 3, 0, 0, 11, 22, 0, 25, 0, 0, 1, 1, 0, 1]' : 0.131914}", "{'[4, 4, 4, 0, 0, 3, 0, 0, 11, 22, 0, 25, 0, 0, 1, 1, 0, 1]' : 0.131807}", "{'[4, 4, 4, 0, 0, 3, 0, 0, 11, 22, 0, 25, 0, 0, 1, 1, 0, 1]' : 0.131873}", "{'[4, 4, 4, 0, 0, 3, 0, 0, 11, 22, 0, 25, 0, 0, 1, 1, 0, 1]' : 0.13212}", "{'[4, 4, 4, 0, 0, 3, 0, 0, 11, 22, 0, 25, 0, 0, 1, 1, 0, 1]' : 0.132055}", "{'[4, 4, 4, 0, 0, 3, 0, 0, 11, 22, 0, 25, 0, 0, 1, 1, 0, 1]' : 0.132121}", "{'[4, 4, 4, 0, 0, 3, 0, 0, 11, 22, 0, 25, 0, 0, 1, 1, 0, 1]' : 0.131847}", "{'[4, 4, 4, 0, 0, 3, 0, 0, 11, 22, 0, 25, 0, 0, 1, 1, 0, 1]' : 0.13185}", "{'[4, 4, 4, 0, 0, 3, 0, 0, 11, 22, 0, 25, 0, 0, 1, 1, 0, 1]' : 0.13204}", "{'[4, 4, 4, 0, 0, 3, 0, 0, 11, 22, 0, 25, 0, 0, 1, 1, 0, 1]' : 0.131897}", "{'[4, 4, 4, 0, 0, 3, 0, 0, 11, 22, 0, 25, 0, 0, 1, 1, 0, 1]' : 0.131785}", "{'[4, 4, 4, 0, 0, 3, 0, 0, 11, 22, 0, 25, 0, 0, 1, 1, 0, 1]' : 0.131977}", "{'[4, 4, 4, 0, 0, 3, 0, 0, 11, 22, 0, 25, 0, 0, 1, 1, 0, 1]' : 0.131962}", "{'[4, 4, 4, 0, 0, 3, 0, 0, 11, 22, 0, 25, 0, 0, 1, 1, 0, 1]' : 0.132388}", "{'[4, 4, 4, 0, 0, 3, 0, 0, 11, 22, 0, 25, 0, 0, 1, 1, 0, 1]' : 0.131978}", "{'[4, 4, 4, 0, 0, 3, 0, 0, 11, 22, 0, 25, 0, 0, 1, 1, 0, 1]' : 0.131892}", "{'[4, 4, 4, 0, 0, 3, 0, 0, 11, 22, 0, 25, 0, 0, 1, 1, 0, 1]' : 0.131756}", "{'[4, 4, 4, 0, 0, 3, 0, 0, 11, 22, 0, 25, 0, 0, 1, 1, 0, 1]' : 0.131775}", "{'[4, 4, 4, 0, 0, 3, 0, 0, 11, 22, 0, 25, 0, 0, 1, 1, 0, 1]' : 0.131971}", "{'[4, 4, 4, 0, 0, 3, 0, 0, 11, 22, 0, 25, 0, 0, 1, 1, 0, 1]' : 0.13199}", "{'[4, 4, 4, 0, 0, 3, 0, 0, 11, 22, 0, 25, 0, 0, 1, 1, 0, 1]' : 0.131901}", "{'[4, 4, 4, 0, 0, 3, 0, 0, 11, 22, 0, 25, 0, 0, 1, 1, 0, 1]' : 0.132084}", "{'[4, 4, 4, 0, 0, 3, 0, 0, 11, 22, 0, 25, 0, 0, 1, 1, 0, 1]' : 0.132167}", "{'[4, 4, 4, 0, 0, 3, 0, 0, 11, 22, 0, 25, 0, 0, 1, 1, 0, 1]' : 0.131924}"]
returning from 'run': {'[4, 4, 4, 0, 0, 3, 0, 0, 11, 22, 0, 25, 0, 0, 1, 1, 0, 1]': ([0.15283, 0.152706, 0.152548, 0.14335, 0.131833, 0.131954, 0.131914, 0.131807, 0.131873, 0.13212, 0.132055, 0.132121, 0.131847, 0.13185, 0.13204, 0.131897, 0.131785, 0.131977, 0.131962, 0.132388, 0.131978, 0.131892, 0.131756, 0.131775, 0.131971, 0.13199, 0.131901, 0.132084, 0.132167, 0.131924], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 4, 4, 0, 0, 3, 0, 0, 11, 22, 0, 25, 0, 0, 1, 1, 0, 1]': ([0.15283, 0.152706, 0.152548, 0.14335, 0.131833, 0.131954, 0.131914, 0.131807, 0.131873, 0.13212, 0.132055, 0.132121, 0.131847, 0.13185, 0.13204, 0.131897, 0.131785, 0.131977, 0.131962, 0.132388, 0.131978, 0.131892, 0.131756, 0.131775, 0.131971, 0.13199, 0.131901, 0.132084, 0.132167, 0.131924], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	47
        Max loop nest depth: 	6
        Additions: 		6191
        Multiplications: 	1800
        Divisions: 		0
        Logical: 		0
        Reads: 			9571
        Writes: 		1055
        Comparisons:		47
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest45.exe __orio_perftest45.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest45.exe  
Program Test Output: 
{'[6, 0, 4, 6, 5, 5, 1, 0, 0, 28, 0, 27, 0, 0, 0, 0, 0, 0]' : 0.192714}
{'[6, 0, 4, 6, 5, 5, 1, 0, 0, 28, 0, 27, 0, 0, 0, 0, 0, 0]' : 0.193197}
{'[6, 0, 4, 6, 5, 5, 1, 0, 0, 28, 0, 27, 0, 0, 0, 0, 0, 0]' : 0.193181}
{'[6, 0, 4, 6, 5, 5, 1, 0, 0, 28, 0, 27, 0, 0, 0, 0, 0, 0]' : 0.193237}
{'[6, 0, 4, 6, 5, 5, 1, 0, 0, 28, 0, 27, 0, 0, 0, 0, 0, 0]' : 0.193025}
{'[6, 0, 4, 6, 5, 5, 1, 0, 0, 28, 0, 27, 0, 0, 0, 0, 0, 0]' : 0.193312}
{'[6, 0, 4, 6, 5, 5, 1, 0, 0, 28, 0, 27, 0, 0, 0, 0, 0, 0]' : 0.192559}
{'[6, 0, 4, 6, 5, 5, 1, 0, 0, 28, 0, 27, 0, 0, 0, 0, 0, 0]' : 0.193016}
{'[6, 0, 4, 6, 5, 5, 1, 0, 0, 28, 0, 27, 0, 0, 0, 0, 0, 0]' : 0.192954}
{'[6, 0, 4, 6, 5, 5, 1, 0, 0, 28, 0, 27, 0, 0, 0, 0, 0, 0]' : 0.193085}
{'[6, 0, 4, 6, 5, 5, 1, 0, 0, 28, 0, 27, 0, 0, 0, 0, 0, 0]' : 0.192836}
{'[6, 0, 4, 6, 5, 5, 1, 0, 0, 28, 0, 27, 0, 0, 0, 0, 0, 0]' : 0.193035}
{'[6, 0, 4, 6, 5, 5, 1, 0, 0, 28, 0, 27, 0, 0, 0, 0, 0, 0]' : 0.192643}
{'[6, 0, 4, 6, 5, 5, 1, 0, 0, 28, 0, 27, 0, 0, 0, 0, 0, 0]' : 0.193321}
{'[6, 0, 4, 6, 5, 5, 1, 0, 0, 28, 0, 27, 0, 0, 0, 0, 0, 0]' : 0.192809}
{'[6, 0, 4, 6, 5, 5, 1, 0, 0, 28, 0, 27, 0, 0, 0, 0, 0, 0]' : 0.193606}
{'[6, 0, 4, 6, 5, 5, 1, 0, 0, 28, 0, 27, 0, 0, 0, 0, 0, 0]' : 0.193202}
{'[6, 0, 4, 6, 5, 5, 1, 0, 0, 28, 0, 27, 0, 0, 0, 0, 0, 0]' : 0.19267}
{'[6, 0, 4, 6, 5, 5, 1, 0, 0, 28, 0, 27, 0, 0, 0, 0, 0, 0]' : 0.193093}
{'[6, 0, 4, 6, 5, 5, 1, 0, 0, 28, 0, 27, 0, 0, 0, 0, 0, 0]' : 0.193005}
{'[6, 0, 4, 6, 5, 5, 1, 0, 0, 28, 0, 27, 0, 0, 0, 0, 0, 0]' : 0.193265}
{'[6, 0, 4, 6, 5, 5, 1, 0, 0, 28, 0, 27, 0, 0, 0, 0, 0, 0]' : 0.193305}
{'[6, 0, 4, 6, 5, 5, 1, 0, 0, 28, 0, 27, 0, 0, 0, 0, 0, 0]' : 0.19286}
{'[6, 0, 4, 6, 5, 5, 1, 0, 0, 28, 0, 27, 0, 0, 0, 0, 0, 0]' : 0.192925}
{'[6, 0, 4, 6, 5, 5, 1, 0, 0, 28, 0, 27, 0, 0, 0, 0, 0, 0]' : 0.193014}
{'[6, 0, 4, 6, 5, 5, 1, 0, 0, 28, 0, 27, 0, 0, 0, 0, 0, 0]' : 0.192676}
{'[6, 0, 4, 6, 5, 5, 1, 0, 0, 28, 0, 27, 0, 0, 0, 0, 0, 0]' : 0.193555}
{'[6, 0, 4, 6, 5, 5, 1, 0, 0, 28, 0, 27, 0, 0, 0, 0, 0, 0]' : 0.19343}
{'[6, 0, 4, 6, 5, 5, 1, 0, 0, 28, 0, 27, 0, 0, 0, 0, 0, 0]' : 0.193088}
{'[6, 0, 4, 6, 5, 5, 1, 0, 0, 28, 0, 27, 0, 0, 0, 0, 0, 0]' : 0.192891}

out:
 ["{'[6, 0, 4, 6, 5, 5, 1, 0, 0, 28, 0, 27, 0, 0, 0, 0, 0, 0]' : 0.192714}", "{'[6, 0, 4, 6, 5, 5, 1, 0, 0, 28, 0, 27, 0, 0, 0, 0, 0, 0]' : 0.193197}", "{'[6, 0, 4, 6, 5, 5, 1, 0, 0, 28, 0, 27, 0, 0, 0, 0, 0, 0]' : 0.193181}", "{'[6, 0, 4, 6, 5, 5, 1, 0, 0, 28, 0, 27, 0, 0, 0, 0, 0, 0]' : 0.193237}", "{'[6, 0, 4, 6, 5, 5, 1, 0, 0, 28, 0, 27, 0, 0, 0, 0, 0, 0]' : 0.193025}", "{'[6, 0, 4, 6, 5, 5, 1, 0, 0, 28, 0, 27, 0, 0, 0, 0, 0, 0]' : 0.193312}", "{'[6, 0, 4, 6, 5, 5, 1, 0, 0, 28, 0, 27, 0, 0, 0, 0, 0, 0]' : 0.192559}", "{'[6, 0, 4, 6, 5, 5, 1, 0, 0, 28, 0, 27, 0, 0, 0, 0, 0, 0]' : 0.193016}", "{'[6, 0, 4, 6, 5, 5, 1, 0, 0, 28, 0, 27, 0, 0, 0, 0, 0, 0]' : 0.192954}", "{'[6, 0, 4, 6, 5, 5, 1, 0, 0, 28, 0, 27, 0, 0, 0, 0, 0, 0]' : 0.193085}", "{'[6, 0, 4, 6, 5, 5, 1, 0, 0, 28, 0, 27, 0, 0, 0, 0, 0, 0]' : 0.192836}", "{'[6, 0, 4, 6, 5, 5, 1, 0, 0, 28, 0, 27, 0, 0, 0, 0, 0, 0]' : 0.193035}", "{'[6, 0, 4, 6, 5, 5, 1, 0, 0, 28, 0, 27, 0, 0, 0, 0, 0, 0]' : 0.192643}", "{'[6, 0, 4, 6, 5, 5, 1, 0, 0, 28, 0, 27, 0, 0, 0, 0, 0, 0]' : 0.193321}", "{'[6, 0, 4, 6, 5, 5, 1, 0, 0, 28, 0, 27, 0, 0, 0, 0, 0, 0]' : 0.192809}", "{'[6, 0, 4, 6, 5, 5, 1, 0, 0, 28, 0, 27, 0, 0, 0, 0, 0, 0]' : 0.193606}", "{'[6, 0, 4, 6, 5, 5, 1, 0, 0, 28, 0, 27, 0, 0, 0, 0, 0, 0]' : 0.193202}", "{'[6, 0, 4, 6, 5, 5, 1, 0, 0, 28, 0, 27, 0, 0, 0, 0, 0, 0]' : 0.19267}", "{'[6, 0, 4, 6, 5, 5, 1, 0, 0, 28, 0, 27, 0, 0, 0, 0, 0, 0]' : 0.193093}", "{'[6, 0, 4, 6, 5, 5, 1, 0, 0, 28, 0, 27, 0, 0, 0, 0, 0, 0]' : 0.193005}", "{'[6, 0, 4, 6, 5, 5, 1, 0, 0, 28, 0, 27, 0, 0, 0, 0, 0, 0]' : 0.193265}", "{'[6, 0, 4, 6, 5, 5, 1, 0, 0, 28, 0, 27, 0, 0, 0, 0, 0, 0]' : 0.193305}", "{'[6, 0, 4, 6, 5, 5, 1, 0, 0, 28, 0, 27, 0, 0, 0, 0, 0, 0]' : 0.19286}", "{'[6, 0, 4, 6, 5, 5, 1, 0, 0, 28, 0, 27, 0, 0, 0, 0, 0, 0]' : 0.192925}", "{'[6, 0, 4, 6, 5, 5, 1, 0, 0, 28, 0, 27, 0, 0, 0, 0, 0, 0]' : 0.193014}", "{'[6, 0, 4, 6, 5, 5, 1, 0, 0, 28, 0, 27, 0, 0, 0, 0, 0, 0]' : 0.192676}", "{'[6, 0, 4, 6, 5, 5, 1, 0, 0, 28, 0, 27, 0, 0, 0, 0, 0, 0]' : 0.193555}", "{'[6, 0, 4, 6, 5, 5, 1, 0, 0, 28, 0, 27, 0, 0, 0, 0, 0, 0]' : 0.19343}", "{'[6, 0, 4, 6, 5, 5, 1, 0, 0, 28, 0, 27, 0, 0, 0, 0, 0, 0]' : 0.193088}", "{'[6, 0, 4, 6, 5, 5, 1, 0, 0, 28, 0, 27, 0, 0, 0, 0, 0, 0]' : 0.192891}"]
returning from 'run': {'[6, 0, 4, 6, 5, 5, 1, 0, 0, 28, 0, 27, 0, 0, 0, 0, 0, 0]': ([0.192714, 0.193197, 0.193181, 0.193237, 0.193025, 0.193312, 0.192559, 0.193016, 0.192954, 0.193085, 0.192836, 0.193035, 0.192643, 0.193321, 0.192809, 0.193606, 0.193202, 0.19267, 0.193093, 0.193005, 0.193265, 0.193305, 0.19286, 0.192925, 0.193014, 0.192676, 0.193555, 0.19343, 0.193088, 0.192891], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 4, 6, 5, 5, 1, 0, 0, 28, 0, 27, 0, 0, 0, 0, 0, 0]': ([0.192714, 0.193197, 0.193181, 0.193237, 0.193025, 0.193312, 0.192559, 0.193016, 0.192954, 0.193085, 0.192836, 0.193035, 0.192643, 0.193321, 0.192809, 0.193606, 0.193202, 0.19267, 0.193093, 0.193005, 0.193265, 0.193305, 0.19286, 0.192925, 0.193014, 0.192676, 0.193555, 0.19343, 0.193088, 0.192891], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	118
        Max loop nest depth: 	5
        Additions: 		1283
        Multiplications: 	378
        Divisions: 		0
        Logical: 		0
        Reads: 			2938
        Writes: 		669
        Comparisons:		118
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest46.exe __orio_perftest46.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest46.exe  
Program Test Output: 
{'[1, 0, 4, 1, 0, 0, 1, 1, 17, 25, 4, 0, 0, 0, 0, 1, 1, 1]' : 0.246801}
{'[1, 0, 4, 1, 0, 0, 1, 1, 17, 25, 4, 0, 0, 0, 0, 1, 1, 1]' : 0.246631}
{'[1, 0, 4, 1, 0, 0, 1, 1, 17, 25, 4, 0, 0, 0, 0, 1, 1, 1]' : 0.215759}
{'[1, 0, 4, 1, 0, 0, 1, 1, 17, 25, 4, 0, 0, 0, 0, 1, 1, 1]' : 0.206302}
{'[1, 0, 4, 1, 0, 0, 1, 1, 17, 25, 4, 0, 0, 0, 0, 1, 1, 1]' : 0.206066}
{'[1, 0, 4, 1, 0, 0, 1, 1, 17, 25, 4, 0, 0, 0, 0, 1, 1, 1]' : 0.205873}
{'[1, 0, 4, 1, 0, 0, 1, 1, 17, 25, 4, 0, 0, 0, 0, 1, 1, 1]' : 0.206106}
{'[1, 0, 4, 1, 0, 0, 1, 1, 17, 25, 4, 0, 0, 0, 0, 1, 1, 1]' : 0.205964}
{'[1, 0, 4, 1, 0, 0, 1, 1, 17, 25, 4, 0, 0, 0, 0, 1, 1, 1]' : 0.20586}
{'[1, 0, 4, 1, 0, 0, 1, 1, 17, 25, 4, 0, 0, 0, 0, 1, 1, 1]' : 0.206538}
{'[1, 0, 4, 1, 0, 0, 1, 1, 17, 25, 4, 0, 0, 0, 0, 1, 1, 1]' : 0.206032}
{'[1, 0, 4, 1, 0, 0, 1, 1, 17, 25, 4, 0, 0, 0, 0, 1, 1, 1]' : 0.20626}
{'[1, 0, 4, 1, 0, 0, 1, 1, 17, 25, 4, 0, 0, 0, 0, 1, 1, 1]' : 0.20593}
{'[1, 0, 4, 1, 0, 0, 1, 1, 17, 25, 4, 0, 0, 0, 0, 1, 1, 1]' : 0.206158}
{'[1, 0, 4, 1, 0, 0, 1, 1, 17, 25, 4, 0, 0, 0, 0, 1, 1, 1]' : 0.206722}
{'[1, 0, 4, 1, 0, 0, 1, 1, 17, 25, 4, 0, 0, 0, 0, 1, 1, 1]' : 0.206102}
{'[1, 0, 4, 1, 0, 0, 1, 1, 17, 25, 4, 0, 0, 0, 0, 1, 1, 1]' : 0.206275}
{'[1, 0, 4, 1, 0, 0, 1, 1, 17, 25, 4, 0, 0, 0, 0, 1, 1, 1]' : 0.206144}
{'[1, 0, 4, 1, 0, 0, 1, 1, 17, 25, 4, 0, 0, 0, 0, 1, 1, 1]' : 0.206173}
{'[1, 0, 4, 1, 0, 0, 1, 1, 17, 25, 4, 0, 0, 0, 0, 1, 1, 1]' : 0.206115}
{'[1, 0, 4, 1, 0, 0, 1, 1, 17, 25, 4, 0, 0, 0, 0, 1, 1, 1]' : 0.206356}
{'[1, 0, 4, 1, 0, 0, 1, 1, 17, 25, 4, 0, 0, 0, 0, 1, 1, 1]' : 0.206391}
{'[1, 0, 4, 1, 0, 0, 1, 1, 17, 25, 4, 0, 0, 0, 0, 1, 1, 1]' : 0.205977}
{'[1, 0, 4, 1, 0, 0, 1, 1, 17, 25, 4, 0, 0, 0, 0, 1, 1, 1]' : 0.206141}
{'[1, 0, 4, 1, 0, 0, 1, 1, 17, 25, 4, 0, 0, 0, 0, 1, 1, 1]' : 0.207342}
{'[1, 0, 4, 1, 0, 0, 1, 1, 17, 25, 4, 0, 0, 0, 0, 1, 1, 1]' : 0.208344}
{'[1, 0, 4, 1, 0, 0, 1, 1, 17, 25, 4, 0, 0, 0, 0, 1, 1, 1]' : 0.206086}
{'[1, 0, 4, 1, 0, 0, 1, 1, 17, 25, 4, 0, 0, 0, 0, 1, 1, 1]' : 0.206038}
{'[1, 0, 4, 1, 0, 0, 1, 1, 17, 25, 4, 0, 0, 0, 0, 1, 1, 1]' : 0.206113}
{'[1, 0, 4, 1, 0, 0, 1, 1, 17, 25, 4, 0, 0, 0, 0, 1, 1, 1]' : 0.206086}

out:
 ["{'[1, 0, 4, 1, 0, 0, 1, 1, 17, 25, 4, 0, 0, 0, 0, 1, 1, 1]' : 0.246801}", "{'[1, 0, 4, 1, 0, 0, 1, 1, 17, 25, 4, 0, 0, 0, 0, 1, 1, 1]' : 0.246631}", "{'[1, 0, 4, 1, 0, 0, 1, 1, 17, 25, 4, 0, 0, 0, 0, 1, 1, 1]' : 0.215759}", "{'[1, 0, 4, 1, 0, 0, 1, 1, 17, 25, 4, 0, 0, 0, 0, 1, 1, 1]' : 0.206302}", "{'[1, 0, 4, 1, 0, 0, 1, 1, 17, 25, 4, 0, 0, 0, 0, 1, 1, 1]' : 0.206066}", "{'[1, 0, 4, 1, 0, 0, 1, 1, 17, 25, 4, 0, 0, 0, 0, 1, 1, 1]' : 0.205873}", "{'[1, 0, 4, 1, 0, 0, 1, 1, 17, 25, 4, 0, 0, 0, 0, 1, 1, 1]' : 0.206106}", "{'[1, 0, 4, 1, 0, 0, 1, 1, 17, 25, 4, 0, 0, 0, 0, 1, 1, 1]' : 0.205964}", "{'[1, 0, 4, 1, 0, 0, 1, 1, 17, 25, 4, 0, 0, 0, 0, 1, 1, 1]' : 0.20586}", "{'[1, 0, 4, 1, 0, 0, 1, 1, 17, 25, 4, 0, 0, 0, 0, 1, 1, 1]' : 0.206538}", "{'[1, 0, 4, 1, 0, 0, 1, 1, 17, 25, 4, 0, 0, 0, 0, 1, 1, 1]' : 0.206032}", "{'[1, 0, 4, 1, 0, 0, 1, 1, 17, 25, 4, 0, 0, 0, 0, 1, 1, 1]' : 0.20626}", "{'[1, 0, 4, 1, 0, 0, 1, 1, 17, 25, 4, 0, 0, 0, 0, 1, 1, 1]' : 0.20593}", "{'[1, 0, 4, 1, 0, 0, 1, 1, 17, 25, 4, 0, 0, 0, 0, 1, 1, 1]' : 0.206158}", "{'[1, 0, 4, 1, 0, 0, 1, 1, 17, 25, 4, 0, 0, 0, 0, 1, 1, 1]' : 0.206722}", "{'[1, 0, 4, 1, 0, 0, 1, 1, 17, 25, 4, 0, 0, 0, 0, 1, 1, 1]' : 0.206102}", "{'[1, 0, 4, 1, 0, 0, 1, 1, 17, 25, 4, 0, 0, 0, 0, 1, 1, 1]' : 0.206275}", "{'[1, 0, 4, 1, 0, 0, 1, 1, 17, 25, 4, 0, 0, 0, 0, 1, 1, 1]' : 0.206144}", "{'[1, 0, 4, 1, 0, 0, 1, 1, 17, 25, 4, 0, 0, 0, 0, 1, 1, 1]' : 0.206173}", "{'[1, 0, 4, 1, 0, 0, 1, 1, 17, 25, 4, 0, 0, 0, 0, 1, 1, 1]' : 0.206115}", "{'[1, 0, 4, 1, 0, 0, 1, 1, 17, 25, 4, 0, 0, 0, 0, 1, 1, 1]' : 0.206356}", "{'[1, 0, 4, 1, 0, 0, 1, 1, 17, 25, 4, 0, 0, 0, 0, 1, 1, 1]' : 0.206391}", "{'[1, 0, 4, 1, 0, 0, 1, 1, 17, 25, 4, 0, 0, 0, 0, 1, 1, 1]' : 0.205977}", "{'[1, 0, 4, 1, 0, 0, 1, 1, 17, 25, 4, 0, 0, 0, 0, 1, 1, 1]' : 0.206141}", "{'[1, 0, 4, 1, 0, 0, 1, 1, 17, 25, 4, 0, 0, 0, 0, 1, 1, 1]' : 0.207342}", "{'[1, 0, 4, 1, 0, 0, 1, 1, 17, 25, 4, 0, 0, 0, 0, 1, 1, 1]' : 0.208344}", "{'[1, 0, 4, 1, 0, 0, 1, 1, 17, 25, 4, 0, 0, 0, 0, 1, 1, 1]' : 0.206086}", "{'[1, 0, 4, 1, 0, 0, 1, 1, 17, 25, 4, 0, 0, 0, 0, 1, 1, 1]' : 0.206038}", "{'[1, 0, 4, 1, 0, 0, 1, 1, 17, 25, 4, 0, 0, 0, 0, 1, 1, 1]' : 0.206113}", "{'[1, 0, 4, 1, 0, 0, 1, 1, 17, 25, 4, 0, 0, 0, 0, 1, 1, 1]' : 0.206086}"]
returning from 'run': {'[1, 0, 4, 1, 0, 0, 1, 1, 17, 25, 4, 0, 0, 0, 0, 1, 1, 1]': ([0.246801, 0.246631, 0.215759, 0.206302, 0.206066, 0.205873, 0.206106, 0.205964, 0.20586, 0.206538, 0.206032, 0.20626, 0.20593, 0.206158, 0.206722, 0.206102, 0.206275, 0.206144, 0.206173, 0.206115, 0.206356, 0.206391, 0.205977, 0.206141, 0.207342, 0.208344, 0.206086, 0.206038, 0.206113, 0.206086], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 4, 1, 0, 0, 1, 1, 17, 25, 4, 0, 0, 0, 0, 1, 1, 1]': ([0.246801, 0.246631, 0.215759, 0.206302, 0.206066, 0.205873, 0.206106, 0.205964, 0.20586, 0.206538, 0.206032, 0.20626, 0.20593, 0.206158, 0.206722, 0.206102, 0.206275, 0.206144, 0.206173, 0.206115, 0.206356, 0.206391, 0.205977, 0.206141, 0.207342, 0.208344, 0.206086, 0.206038, 0.206113, 0.206086], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Complete design, with measurements:
     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
44      6    3    6    0    6    4       0       1   23  17   0   6    1    0
49      0    1    0    6    1    6       1       1    5  15   0  28    0    1
61      1    2    0    6    0    2       1       0   12   0   4   4    1    1
80      6    2    0    5    0    0       0       1    2   0  23  20    0    2
347     3    1    6    3    1    4       0       0    0  25   0   1    0    0
405     2    0    0    2    0    6       0       0   27  27  27   0    1    1
476     4    6    3    4    5    1       1       1   15   0  26  10    1    0
489     2    1    1    6    2    5       1       0    4   1   0  19    0    0
724     0    0    6    5    5    0       0       0    8   2  26   0    2    0
838     1    1    6    1    3    6       0       1    0   0   0  29    1    1
1033    3    5    1    2    5    0       1       0   28   6   0  27    0    1
1105    0    1    1    3    4    2       1       0   16  14   5   0    2    0
1238    0    2    2    0    6    1       1       0    0   3  21   0    1    0
1609    4    4    2    4    2    2       1       1   28  27   0  29    2    0
1686    5    1    6    6    3    5       1       1    0  29   0  28    2    0
1814    5    2    6    0    3    4       1       0   23  29  28   0    0    0
2006    2    0    3    0    1    0       0       1   21  25   0  18    1    1
2204    6    2    2    4    6    0       1       0   20  25   0   4    0    0
2245    0    1    6    2    0    4       1       1   24   4   0  14    0    0
2347    6    0    1    6    2    6       1       1   29   1   2   0    1    0
2356    0    0    4    0    5    6       0       0   25   0  10   5    0    2
2366    0    4    3    2    6    3       1       1    5  17  25   0    1    0
2483    0    0    1    6    1    3       0       1   29   5   6   0    0    1
2707    6    6    0    0    5    0       0       1   21   5   1   0    0    2
2721    4    2    5    2    1    6       1       1   29   0   0   0    2    0
2898    3    0    0    2    5    3       1       0   11   0   4   3    0    0
3079    2    5    2    2    0    3       0       0    0   0  14  13    2    0
3189    4    5    6    0    5    6       0       1    1   0   1  18    2    0
3285    2    4    0    1    2    5       0       1    7  26   0   5    0    0
3428    1    6    1    5    6    5       1       1   28  24   0   0    2    0
3436    0    1    0    0    1    0       0       0   27   0  29  27    1    0
3527    2    3    0    0    1    1       0       0   24   4   1   0    0    0
3609    3    6    0    1    0    5       0       1    8   0  26  16    0    1
3860    2    2    1    6    6    3       0       1    2   0  28   0    0    1
3898    0    1    2    2    5    0       0       0   29   0  22   8    0    0
3918    2    6    4    3    5    2       1       0   29   0  26  29    0    0
4259    1    0    0    0    0    0       1       1    5   5   0   9    2    0
4426    4    4    4    0    0    3       0       0   11  22   0  25    0    0
4510    6    0    4    6    5    5       1       0    0  28   0  27    0    0
4573    1    0    4    1    0    0       1       1   17  25   4   0    0    0
     RT_K SCR VEC1 VEC2  cost_mean
44      0   0    0    0 0.11360597
49      1   0    1    1 0.20056973
61      0   1    0    0 0.09807026
80      0   0    1    0 0.15864137
347     1   1    0    0 0.13378173
405     0   0    1    1 0.09970737
476     0   1    1    1 0.11161297
489     0   0    1    1 0.19908913
724     0   0    0    0 0.27353687
838     0   1    1    0 0.10678117
1033    1   1    1    0 0.11541897
1105    0   1    0    0 0.19647690
1238    1   0    1    1 0.12445660
1609    0   0    0    1 0.19811497
1686    0   1    1    1 0.17824010
1814    2   0    1    0 0.21463397
2006    0   0    0    1 0.10491560
2204    2   0    1    1 0.26100937
2245    0   0    0    1 0.16564797
2347    1   1    0    1 0.10049871
2356    0   1    1    1 0.15651977
2366    0   0    1    0 0.13009777
2483    0   1    0    0 0.20509697
2707    0   1    0    1 0.10596367
2721    0   1    0    1 0.14840477
2898    2   1    0    1 0.17727597
3079    0   0    1    1 0.31721480
3189    0   0    0    0 0.23722897
3285    0   0    1    0 0.19656967
3428    0   0    0    1 0.32047797
3436    0   1    0    0 0.09148775
3527    2   0    1    0 0.13373220
3609    0   1    1    0 0.20507000
3860    0   1    1    1 0.26209973
3898    1   1    1    0 0.17470090
3918    1   0    1    0 0.21402033
4259    0   1    1    0 0.12612357
4426    1   1    0    1 0.13440983
4510    0   0    0    0 0.19305030
4573    0   1    1    1 0.20928950

Heteroscedasticity Test p-value: 0.590462535161
Regression Step:                Df  Sum Sq Mean Sq F value   Pr(>F)    
T1_I             1 0.00079 0.00079   0.605 0.459023    
T1_J             1 0.00656 0.00656   4.999 0.055792 .  
T1_K             1 0.00210 0.00210   1.597 0.241868    
T2_I             1 0.02447 0.02447  18.650 0.002551 ** 
T2_J             1 0.00128 0.00128   0.973 0.352782    
T2_K             1 0.00020 0.00020   0.149 0.709377    
ACOPY_x          1 0.00118 0.00118   0.900 0.370516    
ACOPY_y          1 0.00108 0.00108   0.825 0.390132    
U1_I             1 0.00118 0.00118   0.902 0.369975    
U_I              1 0.00427 0.00427   3.255 0.108880    
U_J              1 0.00000 0.00000   0.003 0.954437    
U_K              1 0.00315 0.00315   2.402 0.159758    
RT_I             1 0.00056 0.00056   0.429 0.530800    
RT_J             1 0.00385 0.00385   2.934 0.125114    
RT_K             1 0.00175 0.00175   1.330 0.282016    
SCR              1 0.00596 0.00596   4.546 0.065569 .  
VEC1             1 0.00141 0.00141   1.077 0.329639    
VEC2             1 0.00264 0.00264   2.016 0.193426    
I(1/(1 + T1_I))  1 0.00017 0.00017   0.130 0.728094    
I(1/(1 + T1_J))  1 0.00377 0.00377   2.872 0.128574    
I(1/(1 + T1_K))  1 0.00040 0.00040   0.302 0.597499    
I(1/(1 + T2_I))  1 0.00050 0.00050   0.381 0.554014    
I(1/(1 + T2_J))  1 0.00185 0.00185   1.409 0.269251    
I(1/(1 + T2_K))  1 0.00325 0.00325   2.478 0.154120    
I(1/(1 + U1_I))  1 0.00106 0.00106   0.807 0.395163    
I(1/(1 + U_I))   1 0.00714 0.00714   5.443 0.047938 *  
I(1/(1 + U_J))   1 0.00125 0.00125   0.956 0.356879    
I(1/(1 + U_K))   1 0.00284 0.00284   2.169 0.179065    
I(1/(1 + RT_I))  1 0.04012 0.04012  30.585 0.000554 ***
I(1/(1 + RT_J))  1 0.00321 0.00321   2.443 0.156643    
I(1/(1 + RT_K))  1 0.00349 0.00349   2.662 0.141408    
Residuals        8 0.01049 0.00131                     
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Predicting Best
Generating valid search space of size 4600 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Valid coordinates: 920
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Valid coordinates: 1840
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Valid coordinates: 2760
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Valid coordinates: 3680
Tested coordinates: 150000
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Valid coordinates: 4600
Valid/Tested configurations: 4600/187089
Generated Search Space:
NULL
Identical predictions (tol = 1e-5): 1
Getting Best from Design
Response: ['cost_mean']
Design Names:  [1] "T1_I"      "T1_J"      "T1_K"      "T2_I"      "T2_J"      "T2_K"     
 [7] "ACOPY_x"   "ACOPY_y"   "U1_I"      "U_I"       "U_J"       "U_K"      
[13] "RT_I"      "RT_J"      "RT_K"      "SCR"       "VEC1"      "VEC2"     
[19] "cost_mean"

Design Response:       cost_mean
44   0.11360597
49   0.20056973
61   0.09807026
80   0.15864137
347  0.13378173
405  0.09970737
476  0.11161297
489  0.19908913
724  0.27353687
838  0.10678117
1033 0.11541897
1105 0.19647690
1238 0.12445660
1609 0.19811497
1686 0.17824010
1814 0.21463397
2006 0.10491560
2204 0.26100937
2245 0.16564797
2347 0.10049871
2356 0.15651977
2366 0.13009777
2483 0.20509697
2707 0.10596367
2721 0.14840477
2898 0.17727597
3079 0.31721480
3189 0.23722897
3285 0.19656967
3428 0.32047797
3436 0.09148775
3527 0.13373220
3609 0.20507000
3860 0.26209973
3898 0.17470090
3918 0.21402033
4259 0.12612357
4426 0.13440983
4510 0.19305030
4573 0.20928950

Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Getting fixed variables
Pruning Model
Best Predicted:      T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
2498    0    0    0    1    3    2       1       0   16   4   0  29    1    1
     RT_K SCR VEC1 VEC2
2498    0   1    1    0

Best From Design: [0, 1, 0, 0, 1, 0, 0, 0, 27, 0, 29, 27, 1, 0, 0, 1, 0, 0]
Pruned Factors: ['T1_I', 'T1_K', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'VEC1', 'VEC2']
Fixed Factors: {'T2_I': 1, 'T1_J': 0, 'SCR': 1}
Length of requested configs: 1
Result was on Database, Returning Now
Starting Point (-O3):
0.16283083333333334
Predicted Best Point:
[0, 0, 0, 1, 3, 2, 1, 0, 16, 4, 0, 29, 1, 1, 0, 1, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	28
        Max loop nest depth: 	4
        Additions: 		2411
        Multiplications: 	1092
        Divisions: 		0
        Logical: 		0
        Reads: 			4824
        Writes: 		867
        Comparisons:		28
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest47.exe __orio_perftest47.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest47.exe  
Program Test Output: 
{'[0, 0, 0, 1, 3, 2, 1, 0, 16, 4, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.124631}
{'[0, 0, 0, 1, 3, 2, 1, 0, 16, 4, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.123978}
{'[0, 0, 0, 1, 3, 2, 1, 0, 16, 4, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.122981}
{'[0, 0, 0, 1, 3, 2, 1, 0, 16, 4, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.110484}
{'[0, 0, 0, 1, 3, 2, 1, 0, 16, 4, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.108762}
{'[0, 0, 0, 1, 3, 2, 1, 0, 16, 4, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.108867}
{'[0, 0, 0, 1, 3, 2, 1, 0, 16, 4, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.109148}
{'[0, 0, 0, 1, 3, 2, 1, 0, 16, 4, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.111981}
{'[0, 0, 0, 1, 3, 2, 1, 0, 16, 4, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.111986}
{'[0, 0, 0, 1, 3, 2, 1, 0, 16, 4, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.111933}
{'[0, 0, 0, 1, 3, 2, 1, 0, 16, 4, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.111316}
{'[0, 0, 0, 1, 3, 2, 1, 0, 16, 4, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.111337}
{'[0, 0, 0, 1, 3, 2, 1, 0, 16, 4, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.112424}
{'[0, 0, 0, 1, 3, 2, 1, 0, 16, 4, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.112276}
{'[0, 0, 0, 1, 3, 2, 1, 0, 16, 4, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.112693}
{'[0, 0, 0, 1, 3, 2, 1, 0, 16, 4, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.112494}
{'[0, 0, 0, 1, 3, 2, 1, 0, 16, 4, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.11239}
{'[0, 0, 0, 1, 3, 2, 1, 0, 16, 4, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.112339}
{'[0, 0, 0, 1, 3, 2, 1, 0, 16, 4, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.112421}
{'[0, 0, 0, 1, 3, 2, 1, 0, 16, 4, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.111368}
{'[0, 0, 0, 1, 3, 2, 1, 0, 16, 4, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.111271}
{'[0, 0, 0, 1, 3, 2, 1, 0, 16, 4, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.111969}
{'[0, 0, 0, 1, 3, 2, 1, 0, 16, 4, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.112011}
{'[0, 0, 0, 1, 3, 2, 1, 0, 16, 4, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.111955}
{'[0, 0, 0, 1, 3, 2, 1, 0, 16, 4, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.112009}
{'[0, 0, 0, 1, 3, 2, 1, 0, 16, 4, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.111962}
{'[0, 0, 0, 1, 3, 2, 1, 0, 16, 4, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.111926}
{'[0, 0, 0, 1, 3, 2, 1, 0, 16, 4, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.111988}
{'[0, 0, 0, 1, 3, 2, 1, 0, 16, 4, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.110997}
{'[0, 0, 0, 1, 3, 2, 1, 0, 16, 4, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.111749}

out:
 ["{'[0, 0, 0, 1, 3, 2, 1, 0, 16, 4, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.124631}", "{'[0, 0, 0, 1, 3, 2, 1, 0, 16, 4, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.123978}", "{'[0, 0, 0, 1, 3, 2, 1, 0, 16, 4, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.122981}", "{'[0, 0, 0, 1, 3, 2, 1, 0, 16, 4, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.110484}", "{'[0, 0, 0, 1, 3, 2, 1, 0, 16, 4, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.108762}", "{'[0, 0, 0, 1, 3, 2, 1, 0, 16, 4, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.108867}", "{'[0, 0, 0, 1, 3, 2, 1, 0, 16, 4, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.109148}", "{'[0, 0, 0, 1, 3, 2, 1, 0, 16, 4, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.111981}", "{'[0, 0, 0, 1, 3, 2, 1, 0, 16, 4, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.111986}", "{'[0, 0, 0, 1, 3, 2, 1, 0, 16, 4, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.111933}", "{'[0, 0, 0, 1, 3, 2, 1, 0, 16, 4, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.111316}", "{'[0, 0, 0, 1, 3, 2, 1, 0, 16, 4, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.111337}", "{'[0, 0, 0, 1, 3, 2, 1, 0, 16, 4, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.112424}", "{'[0, 0, 0, 1, 3, 2, 1, 0, 16, 4, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.112276}", "{'[0, 0, 0, 1, 3, 2, 1, 0, 16, 4, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.112693}", "{'[0, 0, 0, 1, 3, 2, 1, 0, 16, 4, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.112494}", "{'[0, 0, 0, 1, 3, 2, 1, 0, 16, 4, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.11239}", "{'[0, 0, 0, 1, 3, 2, 1, 0, 16, 4, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.112339}", "{'[0, 0, 0, 1, 3, 2, 1, 0, 16, 4, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.112421}", "{'[0, 0, 0, 1, 3, 2, 1, 0, 16, 4, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.111368}", "{'[0, 0, 0, 1, 3, 2, 1, 0, 16, 4, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.111271}", "{'[0, 0, 0, 1, 3, 2, 1, 0, 16, 4, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.111969}", "{'[0, 0, 0, 1, 3, 2, 1, 0, 16, 4, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.112011}", "{'[0, 0, 0, 1, 3, 2, 1, 0, 16, 4, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.111955}", "{'[0, 0, 0, 1, 3, 2, 1, 0, 16, 4, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.112009}", "{'[0, 0, 0, 1, 3, 2, 1, 0, 16, 4, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.111962}", "{'[0, 0, 0, 1, 3, 2, 1, 0, 16, 4, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.111926}", "{'[0, 0, 0, 1, 3, 2, 1, 0, 16, 4, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.111988}", "{'[0, 0, 0, 1, 3, 2, 1, 0, 16, 4, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.110997}", "{'[0, 0, 0, 1, 3, 2, 1, 0, 16, 4, 0, 29, 1, 1, 0, 1, 1, 0]' : 0.111749}"]
returning from 'run': {'[0, 0, 0, 1, 3, 2, 1, 0, 16, 4, 0, 29, 1, 1, 0, 1, 1, 0]': ([0.124631, 0.123978, 0.122981, 0.110484, 0.108762, 0.108867, 0.109148, 0.111981, 0.111986, 0.111933, 0.111316, 0.111337, 0.112424, 0.112276, 0.112693, 0.112494, 0.11239, 0.112339, 0.112421, 0.111368, 0.111271, 0.111969, 0.112011, 0.111955, 0.112009, 0.111962, 0.111926, 0.111988, 0.110997, 0.111749], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 0, 1, 3, 2, 1, 0, 16, 4, 0, 29, 1, 1, 0, 1, 1, 0]': ([0.124631, 0.123978, 0.122981, 0.110484, 0.108762, 0.108867, 0.109148, 0.111981, 0.111986, 0.111933, 0.111316, 0.111337, 0.112424, 0.112276, 0.112693, 0.112494, 0.11239, 0.112339, 0.112421, 0.111368, 0.111271, 0.111969, 0.112011, 0.111955, 0.112009, 0.111962, 0.111926, 0.111988, 0.110997, 0.111749], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Design Best Point:
[0, 1, 0, 0, 1, 0, 0, 0, 27, 0, 29, 27, 1, 0, 0, 1, 0, 0]
Length of requested configs: 1
Result was on Database, Returning Now
Fixed Factors: {'T2_I': 1, 'T1_J': 0, 'SCR': 1}
Slowdown (Design Best): 0.5618576539046148
Slowdown (Predicted Best): 0.6926710236083462
Budget: 40/180
Updating Global Best: 0.09148775000000003
Current Best Point: 
[0, 1, 0, 0, 1, 0, 0, 0, 27, 0, 29, 27, 1, 0, 0, 1, 0, 0]
Step 1
Generating valid search space of size 3900 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Tested coordinates: 40000
Valid coordinates: 780
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Tested coordinates: 80000
Valid coordinates: 1560
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Tested coordinates: 120000
Valid coordinates: 2340
Tested coordinates: 130000
Tested coordinates: 140000
Tested coordinates: 150000
Tested coordinates: 160000
Tested coordinates: 170000
Valid coordinates: 3120
Tested coordinates: 180000
Tested coordinates: 190000
Tested coordinates: 200000
Tested coordinates: 210000
Valid coordinates: 3900
Valid/Tested configurations: 3900/213246
Generated Search Space:
NULL
Clean Info:
Removed Factors: character(0)

Removed Inverse Factors: [1] "ACOPY_x" "ACOPY_y" "VEC1"    "VEC2"   

New Factors: ['T1_I', 'T1_K', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'VEC1', 'VEC2']
New Inverse Factors: ['T1_I', 'T1_K', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
New Fixed Factors: {'T2_I': 1, 'T1_J': 0, 'SCR': 1}
Full Model:  ~ T1_I + T1_K + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Fixed Factors: {'T2_I': 1, 'T1_J': 0, 'SCR': 1}
Computing D-Optimal Design
Computing D-Optimal Design with 39 experiments
Design Formula:  ~ T1_I + T1_K + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Starting "optFederov" run
Using Search Space:
NULL
Data Dimensions: [1] 3900   15

     T1_I T1_K T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J RT_K VEC1
50      3    2    1    3       0       1   29   1  29   0    2    0    0    1
58      3    3    3    2       1       0   28   8  18   0    0    0    0    1
231     1    2    0    6       1       0   13  16  18   0    0    0    0    1
258     1    3    6    2       1       0   11  29   0   0    0    0    1    0
346     0    1    1    0       1       0   24   0  29   2    0    1    0    0
752     0    6    0    0       1       1   23   0  24   6    0    1    1    0
795     3    1    0    6       1       1   12  19   0   0    0    1    1    1
857     3    5    0    0       1       1    0  29  27   0    0    0    1    0
1156    3    1    0    0       1       1    9   0   6   3    1    0    0    0
1309    1    0    0    6       1       0   29   0  20  20    1    0    0    1
1364    3    0    2    5       0       0   15   0   2   6    0    0    2    1
1377    2    3    0    3       0       1   29   0  20   2    0    0    2    0
1443    3    5    6    4       0       0    0   0   4  24    0    1    0    1
1500    2    0    3    2       1       0   17  25   0   4    1    1    0    0
1558    1    3    2    0       0       1    1  10   3   0    2    0    0    0
1723    3    6    6    0       0       1   27   2   0  19    2    0    0    1
1768    2    6    1    0       1       0   26  25   0  15    0    0    0    1
1775    3    5    4    6       0       1   28  27   0  29    0    0    0    0
1833    1    1    2    1       0       0    7  19   0  11    1    1    0    1
1886    3    3    0    4       0       0   20  29  29   0    0    2    0    1
1943    3    3    5    6       1       0   23   9  14   0    0    0    2    1
2013    0    1    6    6       0       1    7  27   0   6    0    0    1    1
2276    2    2    6    4       1       1   27   8   4   0    0    2    0    0
2282    3    1    5    2       1       0    4   0  28  26    2    0    0    0
2377    3    4    1    2       0       0   15  17   0  25    1    0    1    1
2389    1    6    6    6       0       1    2   4  28   0    1    0    0    1
2466    0    0    0    1       0       1   10   0  28  27    0    2    0    1
2693    1    2    2    0       1       1    0   0  27  29    0    0    1    1
2769    3    0    0    2       0       0    9   3   0   0    0    0    0    0
2917    0    4    0    6       1       0    0   9   0   4    2    0    0    0
3099    1    2    6    4       1       1   29   0   0  28    1    1    0    0
3304    0    0    6    0       0       0   28  25  20   0    0    0    1    0
3367    0    0    0    2       1       1    1  26   0  23    2    0    0    1
3489    0    3    4    2       1       1    0  25   0   0    1    0    0    1
3522    0    4    0    3       1       0   16   5   0  26    0    0    2    0
3546    0    1    2    3       1       1   17   7   2   0    0    1    0    0
3727    0    6    1    6       0       0    8   0   4   0    1    1    0    0
3781    3    0    6    0       0       0    9  29  29   0    1    1    0    0
3802    2    0    6    5       1       0    4   1   0   1    0    2    0    1
     VEC2
50      0
58      1
231     0
258     0
346     1
752     1
795     1
857     1
1156    0
1309    0
1364    1
1377    0
1443    0
1500    0
1558    1
1723    0
1768    1
1775    0
1833    0
1886    1
1943    1
2013    1
2276    1
2282    1
2377    0
2389    1
2466    1
2693    0
2769    1
2917    0
3099    1
3304    0
3367    1
3489    1
3522    0
3546    1
3727    0
3781    1
3802    0

D-Efficiency Approximation: [1] 0.487

Measuring design of size 39
Current Design Names: ['T1_I', 'T1_K', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
Code stats:
        Number of loops: 	32
        Max loop nest depth: 	5
        Additions: 		4604
        Multiplications: 	2240
        Divisions: 		0
        Logical: 		0
        Reads: 			8627
        Writes: 		1368
        Comparisons:		32
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest48.exe __orio_perftest48.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest48.exe  
Program Test Output: 
{'[3, 0, 2, 1, 1, 3, 0, 1, 29, 1, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.224451}
{'[3, 0, 2, 1, 1, 3, 0, 1, 29, 1, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.223265}
{'[3, 0, 2, 1, 1, 3, 0, 1, 29, 1, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.221902}
{'[3, 0, 2, 1, 1, 3, 0, 1, 29, 1, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.221617}
{'[3, 0, 2, 1, 1, 3, 0, 1, 29, 1, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.221719}
{'[3, 0, 2, 1, 1, 3, 0, 1, 29, 1, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.226633}
{'[3, 0, 2, 1, 1, 3, 0, 1, 29, 1, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.222344}
{'[3, 0, 2, 1, 1, 3, 0, 1, 29, 1, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.223707}
{'[3, 0, 2, 1, 1, 3, 0, 1, 29, 1, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.224034}
{'[3, 0, 2, 1, 1, 3, 0, 1, 29, 1, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.225875}
{'[3, 0, 2, 1, 1, 3, 0, 1, 29, 1, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.226877}
{'[3, 0, 2, 1, 1, 3, 0, 1, 29, 1, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.224834}
{'[3, 0, 2, 1, 1, 3, 0, 1, 29, 1, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.222432}
{'[3, 0, 2, 1, 1, 3, 0, 1, 29, 1, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.225149}
{'[3, 0, 2, 1, 1, 3, 0, 1, 29, 1, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.223195}
{'[3, 0, 2, 1, 1, 3, 0, 1, 29, 1, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.226123}
{'[3, 0, 2, 1, 1, 3, 0, 1, 29, 1, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.222363}
{'[3, 0, 2, 1, 1, 3, 0, 1, 29, 1, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.223296}
{'[3, 0, 2, 1, 1, 3, 0, 1, 29, 1, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.222979}
{'[3, 0, 2, 1, 1, 3, 0, 1, 29, 1, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.223569}
{'[3, 0, 2, 1, 1, 3, 0, 1, 29, 1, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.224333}
{'[3, 0, 2, 1, 1, 3, 0, 1, 29, 1, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.223953}
{'[3, 0, 2, 1, 1, 3, 0, 1, 29, 1, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.224315}
{'[3, 0, 2, 1, 1, 3, 0, 1, 29, 1, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.226806}
{'[3, 0, 2, 1, 1, 3, 0, 1, 29, 1, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.224408}
{'[3, 0, 2, 1, 1, 3, 0, 1, 29, 1, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.221509}
{'[3, 0, 2, 1, 1, 3, 0, 1, 29, 1, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.223166}
{'[3, 0, 2, 1, 1, 3, 0, 1, 29, 1, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.224164}
{'[3, 0, 2, 1, 1, 3, 0, 1, 29, 1, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.225334}
{'[3, 0, 2, 1, 1, 3, 0, 1, 29, 1, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.225976}

out:
 ["{'[3, 0, 2, 1, 1, 3, 0, 1, 29, 1, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.224451}", "{'[3, 0, 2, 1, 1, 3, 0, 1, 29, 1, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.223265}", "{'[3, 0, 2, 1, 1, 3, 0, 1, 29, 1, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.221902}", "{'[3, 0, 2, 1, 1, 3, 0, 1, 29, 1, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.221617}", "{'[3, 0, 2, 1, 1, 3, 0, 1, 29, 1, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.221719}", "{'[3, 0, 2, 1, 1, 3, 0, 1, 29, 1, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.226633}", "{'[3, 0, 2, 1, 1, 3, 0, 1, 29, 1, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.222344}", "{'[3, 0, 2, 1, 1, 3, 0, 1, 29, 1, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.223707}", "{'[3, 0, 2, 1, 1, 3, 0, 1, 29, 1, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.224034}", "{'[3, 0, 2, 1, 1, 3, 0, 1, 29, 1, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.225875}", "{'[3, 0, 2, 1, 1, 3, 0, 1, 29, 1, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.226877}", "{'[3, 0, 2, 1, 1, 3, 0, 1, 29, 1, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.224834}", "{'[3, 0, 2, 1, 1, 3, 0, 1, 29, 1, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.222432}", "{'[3, 0, 2, 1, 1, 3, 0, 1, 29, 1, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.225149}", "{'[3, 0, 2, 1, 1, 3, 0, 1, 29, 1, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.223195}", "{'[3, 0, 2, 1, 1, 3, 0, 1, 29, 1, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.226123}", "{'[3, 0, 2, 1, 1, 3, 0, 1, 29, 1, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.222363}", "{'[3, 0, 2, 1, 1, 3, 0, 1, 29, 1, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.223296}", "{'[3, 0, 2, 1, 1, 3, 0, 1, 29, 1, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.222979}", "{'[3, 0, 2, 1, 1, 3, 0, 1, 29, 1, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.223569}", "{'[3, 0, 2, 1, 1, 3, 0, 1, 29, 1, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.224333}", "{'[3, 0, 2, 1, 1, 3, 0, 1, 29, 1, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.223953}", "{'[3, 0, 2, 1, 1, 3, 0, 1, 29, 1, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.224315}", "{'[3, 0, 2, 1, 1, 3, 0, 1, 29, 1, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.226806}", "{'[3, 0, 2, 1, 1, 3, 0, 1, 29, 1, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.224408}", "{'[3, 0, 2, 1, 1, 3, 0, 1, 29, 1, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.221509}", "{'[3, 0, 2, 1, 1, 3, 0, 1, 29, 1, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.223166}", "{'[3, 0, 2, 1, 1, 3, 0, 1, 29, 1, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.224164}", "{'[3, 0, 2, 1, 1, 3, 0, 1, 29, 1, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.225334}", "{'[3, 0, 2, 1, 1, 3, 0, 1, 29, 1, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.225976}"]
returning from 'run': {'[3, 0, 2, 1, 1, 3, 0, 1, 29, 1, 29, 0, 2, 0, 0, 1, 1, 0]': ([0.224451, 0.223265, 0.221902, 0.221617, 0.221719, 0.226633, 0.222344, 0.223707, 0.224034, 0.225875, 0.226877, 0.224834, 0.222432, 0.225149, 0.223195, 0.226123, 0.222363, 0.223296, 0.222979, 0.223569, 0.224333, 0.223953, 0.224315, 0.226806, 0.224408, 0.221509, 0.223166, 0.224164, 0.225334, 0.225976], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 0, 2, 1, 1, 3, 0, 1, 29, 1, 29, 0, 2, 0, 0, 1, 1, 0]': ([0.224451, 0.223265, 0.221902, 0.221617, 0.221719, 0.226633, 0.222344, 0.223707, 0.224034, 0.225875, 0.226877, 0.224834, 0.222432, 0.225149, 0.223195, 0.226123, 0.222363, 0.223296, 0.222979, 0.223569, 0.224333, 0.223953, 0.224315, 0.226806, 0.224408, 0.221509, 0.223166, 0.224164, 0.225334, 0.225976], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
Code stats:
        Number of loops: 	43
        Max loop nest depth: 	5
        Additions: 		1437
        Multiplications: 	420
        Divisions: 		0
        Logical: 		0
        Reads: 			2465
        Writes: 		405
        Comparisons:		43
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest49.exe __orio_perftest49.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest49.exe  
Program Test Output: 
{'[3, 0, 3, 1, 3, 2, 1, 0, 28, 8, 18, 0, 0, 0, 0, 1, 1, 1]' : 0.192049}
{'[3, 0, 3, 1, 3, 2, 1, 0, 28, 8, 18, 0, 0, 0, 0, 1, 1, 1]' : 0.191875}
{'[3, 0, 3, 1, 3, 2, 1, 0, 28, 8, 18, 0, 0, 0, 0, 1, 1, 1]' : 0.177295}
{'[3, 0, 3, 1, 3, 2, 1, 0, 28, 8, 18, 0, 0, 0, 0, 1, 1, 1]' : 0.162094}
{'[3, 0, 3, 1, 3, 2, 1, 0, 28, 8, 18, 0, 0, 0, 0, 1, 1, 1]' : 0.162111}
{'[3, 0, 3, 1, 3, 2, 1, 0, 28, 8, 18, 0, 0, 0, 0, 1, 1, 1]' : 0.162387}
{'[3, 0, 3, 1, 3, 2, 1, 0, 28, 8, 18, 0, 0, 0, 0, 1, 1, 1]' : 0.162493}
{'[3, 0, 3, 1, 3, 2, 1, 0, 28, 8, 18, 0, 0, 0, 0, 1, 1, 1]' : 0.162061}
{'[3, 0, 3, 1, 3, 2, 1, 0, 28, 8, 18, 0, 0, 0, 0, 1, 1, 1]' : 0.161947}
{'[3, 0, 3, 1, 3, 2, 1, 0, 28, 8, 18, 0, 0, 0, 0, 1, 1, 1]' : 0.162031}
{'[3, 0, 3, 1, 3, 2, 1, 0, 28, 8, 18, 0, 0, 0, 0, 1, 1, 1]' : 0.162129}
{'[3, 0, 3, 1, 3, 2, 1, 0, 28, 8, 18, 0, 0, 0, 0, 1, 1, 1]' : 0.16234}
{'[3, 0, 3, 1, 3, 2, 1, 0, 28, 8, 18, 0, 0, 0, 0, 1, 1, 1]' : 0.16213}
{'[3, 0, 3, 1, 3, 2, 1, 0, 28, 8, 18, 0, 0, 0, 0, 1, 1, 1]' : 0.162198}
{'[3, 0, 3, 1, 3, 2, 1, 0, 28, 8, 18, 0, 0, 0, 0, 1, 1, 1]' : 0.161988}
{'[3, 0, 3, 1, 3, 2, 1, 0, 28, 8, 18, 0, 0, 0, 0, 1, 1, 1]' : 0.161974}
{'[3, 0, 3, 1, 3, 2, 1, 0, 28, 8, 18, 0, 0, 0, 0, 1, 1, 1]' : 0.162046}
{'[3, 0, 3, 1, 3, 2, 1, 0, 28, 8, 18, 0, 0, 0, 0, 1, 1, 1]' : 0.162129}
{'[3, 0, 3, 1, 3, 2, 1, 0, 28, 8, 18, 0, 0, 0, 0, 1, 1, 1]' : 0.162327}
{'[3, 0, 3, 1, 3, 2, 1, 0, 28, 8, 18, 0, 0, 0, 0, 1, 1, 1]' : 0.161802}
{'[3, 0, 3, 1, 3, 2, 1, 0, 28, 8, 18, 0, 0, 0, 0, 1, 1, 1]' : 0.161901}
{'[3, 0, 3, 1, 3, 2, 1, 0, 28, 8, 18, 0, 0, 0, 0, 1, 1, 1]' : 0.161962}
{'[3, 0, 3, 1, 3, 2, 1, 0, 28, 8, 18, 0, 0, 0, 0, 1, 1, 1]' : 0.161808}
{'[3, 0, 3, 1, 3, 2, 1, 0, 28, 8, 18, 0, 0, 0, 0, 1, 1, 1]' : 0.162492}
{'[3, 0, 3, 1, 3, 2, 1, 0, 28, 8, 18, 0, 0, 0, 0, 1, 1, 1]' : 0.16205}
{'[3, 0, 3, 1, 3, 2, 1, 0, 28, 8, 18, 0, 0, 0, 0, 1, 1, 1]' : 0.162383}
{'[3, 0, 3, 1, 3, 2, 1, 0, 28, 8, 18, 0, 0, 0, 0, 1, 1, 1]' : 0.162035}
{'[3, 0, 3, 1, 3, 2, 1, 0, 28, 8, 18, 0, 0, 0, 0, 1, 1, 1]' : 0.161968}
{'[3, 0, 3, 1, 3, 2, 1, 0, 28, 8, 18, 0, 0, 0, 0, 1, 1, 1]' : 0.161817}
{'[3, 0, 3, 1, 3, 2, 1, 0, 28, 8, 18, 0, 0, 0, 0, 1, 1, 1]' : 0.162119}

out:
 ["{'[3, 0, 3, 1, 3, 2, 1, 0, 28, 8, 18, 0, 0, 0, 0, 1, 1, 1]' : 0.192049}", "{'[3, 0, 3, 1, 3, 2, 1, 0, 28, 8, 18, 0, 0, 0, 0, 1, 1, 1]' : 0.191875}", "{'[3, 0, 3, 1, 3, 2, 1, 0, 28, 8, 18, 0, 0, 0, 0, 1, 1, 1]' : 0.177295}", "{'[3, 0, 3, 1, 3, 2, 1, 0, 28, 8, 18, 0, 0, 0, 0, 1, 1, 1]' : 0.162094}", "{'[3, 0, 3, 1, 3, 2, 1, 0, 28, 8, 18, 0, 0, 0, 0, 1, 1, 1]' : 0.162111}", "{'[3, 0, 3, 1, 3, 2, 1, 0, 28, 8, 18, 0, 0, 0, 0, 1, 1, 1]' : 0.162387}", "{'[3, 0, 3, 1, 3, 2, 1, 0, 28, 8, 18, 0, 0, 0, 0, 1, 1, 1]' : 0.162493}", "{'[3, 0, 3, 1, 3, 2, 1, 0, 28, 8, 18, 0, 0, 0, 0, 1, 1, 1]' : 0.162061}", "{'[3, 0, 3, 1, 3, 2, 1, 0, 28, 8, 18, 0, 0, 0, 0, 1, 1, 1]' : 0.161947}", "{'[3, 0, 3, 1, 3, 2, 1, 0, 28, 8, 18, 0, 0, 0, 0, 1, 1, 1]' : 0.162031}", "{'[3, 0, 3, 1, 3, 2, 1, 0, 28, 8, 18, 0, 0, 0, 0, 1, 1, 1]' : 0.162129}", "{'[3, 0, 3, 1, 3, 2, 1, 0, 28, 8, 18, 0, 0, 0, 0, 1, 1, 1]' : 0.16234}", "{'[3, 0, 3, 1, 3, 2, 1, 0, 28, 8, 18, 0, 0, 0, 0, 1, 1, 1]' : 0.16213}", "{'[3, 0, 3, 1, 3, 2, 1, 0, 28, 8, 18, 0, 0, 0, 0, 1, 1, 1]' : 0.162198}", "{'[3, 0, 3, 1, 3, 2, 1, 0, 28, 8, 18, 0, 0, 0, 0, 1, 1, 1]' : 0.161988}", "{'[3, 0, 3, 1, 3, 2, 1, 0, 28, 8, 18, 0, 0, 0, 0, 1, 1, 1]' : 0.161974}", "{'[3, 0, 3, 1, 3, 2, 1, 0, 28, 8, 18, 0, 0, 0, 0, 1, 1, 1]' : 0.162046}", "{'[3, 0, 3, 1, 3, 2, 1, 0, 28, 8, 18, 0, 0, 0, 0, 1, 1, 1]' : 0.162129}", "{'[3, 0, 3, 1, 3, 2, 1, 0, 28, 8, 18, 0, 0, 0, 0, 1, 1, 1]' : 0.162327}", "{'[3, 0, 3, 1, 3, 2, 1, 0, 28, 8, 18, 0, 0, 0, 0, 1, 1, 1]' : 0.161802}", "{'[3, 0, 3, 1, 3, 2, 1, 0, 28, 8, 18, 0, 0, 0, 0, 1, 1, 1]' : 0.161901}", "{'[3, 0, 3, 1, 3, 2, 1, 0, 28, 8, 18, 0, 0, 0, 0, 1, 1, 1]' : 0.161962}", "{'[3, 0, 3, 1, 3, 2, 1, 0, 28, 8, 18, 0, 0, 0, 0, 1, 1, 1]' : 0.161808}", "{'[3, 0, 3, 1, 3, 2, 1, 0, 28, 8, 18, 0, 0, 0, 0, 1, 1, 1]' : 0.162492}", "{'[3, 0, 3, 1, 3, 2, 1, 0, 28, 8, 18, 0, 0, 0, 0, 1, 1, 1]' : 0.16205}", "{'[3, 0, 3, 1, 3, 2, 1, 0, 28, 8, 18, 0, 0, 0, 0, 1, 1, 1]' : 0.162383}", "{'[3, 0, 3, 1, 3, 2, 1, 0, 28, 8, 18, 0, 0, 0, 0, 1, 1, 1]' : 0.162035}", "{'[3, 0, 3, 1, 3, 2, 1, 0, 28, 8, 18, 0, 0, 0, 0, 1, 1, 1]' : 0.161968}", "{'[3, 0, 3, 1, 3, 2, 1, 0, 28, 8, 18, 0, 0, 0, 0, 1, 1, 1]' : 0.161817}", "{'[3, 0, 3, 1, 3, 2, 1, 0, 28, 8, 18, 0, 0, 0, 0, 1, 1, 1]' : 0.162119}"]
returning from 'run': {'[3, 0, 3, 1, 3, 2, 1, 0, 28, 8, 18, 0, 0, 0, 0, 1, 1, 1]': ([0.192049, 0.191875, 0.177295, 0.162094, 0.162111, 0.162387, 0.162493, 0.162061, 0.161947, 0.162031, 0.162129, 0.16234, 0.16213, 0.162198, 0.161988, 0.161974, 0.162046, 0.162129, 0.162327, 0.161802, 0.161901, 0.161962, 0.161808, 0.162492, 0.16205, 0.162383, 0.162035, 0.161968, 0.161817, 0.162119], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 0, 3, 1, 3, 2, 1, 0, 28, 8, 18, 0, 0, 0, 0, 1, 1, 1]': ([0.192049, 0.191875, 0.177295, 0.162094, 0.162111, 0.162387, 0.162493, 0.162061, 0.161947, 0.162031, 0.162129, 0.16234, 0.16213, 0.162198, 0.161988, 0.161974, 0.162046, 0.162129, 0.162327, 0.161802, 0.161901, 0.161962, 0.161808, 0.162492, 0.16205, 0.162383, 0.162035, 0.161968, 0.161817, 0.162119], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	48
        Max loop nest depth: 	6
        Additions: 		1955
        Multiplications: 	756
        Divisions: 		0
        Logical: 		0
        Reads: 			3476
        Writes: 		550
        Comparisons:		48
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest50.exe __orio_perftest50.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest50.exe  
Program Test Output: 
{'[1, 0, 2, 1, 0, 6, 1, 0, 13, 16, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.260683}
{'[1, 0, 2, 1, 0, 6, 1, 0, 13, 16, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.258695}
{'[1, 0, 2, 1, 0, 6, 1, 0, 13, 16, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.218538}
{'[1, 0, 2, 1, 0, 6, 1, 0, 13, 16, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.217637}
{'[1, 0, 2, 1, 0, 6, 1, 0, 13, 16, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.217176}
{'[1, 0, 2, 1, 0, 6, 1, 0, 13, 16, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.21714}
{'[1, 0, 2, 1, 0, 6, 1, 0, 13, 16, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.217166}
{'[1, 0, 2, 1, 0, 6, 1, 0, 13, 16, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.217376}
{'[1, 0, 2, 1, 0, 6, 1, 0, 13, 16, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.217632}
{'[1, 0, 2, 1, 0, 6, 1, 0, 13, 16, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.217239}
{'[1, 0, 2, 1, 0, 6, 1, 0, 13, 16, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.217342}
{'[1, 0, 2, 1, 0, 6, 1, 0, 13, 16, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.217255}
{'[1, 0, 2, 1, 0, 6, 1, 0, 13, 16, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.217291}
{'[1, 0, 2, 1, 0, 6, 1, 0, 13, 16, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.217795}
{'[1, 0, 2, 1, 0, 6, 1, 0, 13, 16, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.217227}
{'[1, 0, 2, 1, 0, 6, 1, 0, 13, 16, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.217325}
{'[1, 0, 2, 1, 0, 6, 1, 0, 13, 16, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.217365}
{'[1, 0, 2, 1, 0, 6, 1, 0, 13, 16, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.21761}
{'[1, 0, 2, 1, 0, 6, 1, 0, 13, 16, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.21776}
{'[1, 0, 2, 1, 0, 6, 1, 0, 13, 16, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.217499}
{'[1, 0, 2, 1, 0, 6, 1, 0, 13, 16, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.217287}
{'[1, 0, 2, 1, 0, 6, 1, 0, 13, 16, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.217285}
{'[1, 0, 2, 1, 0, 6, 1, 0, 13, 16, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.217277}
{'[1, 0, 2, 1, 0, 6, 1, 0, 13, 16, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.217684}
{'[1, 0, 2, 1, 0, 6, 1, 0, 13, 16, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.217219}
{'[1, 0, 2, 1, 0, 6, 1, 0, 13, 16, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.217513}
{'[1, 0, 2, 1, 0, 6, 1, 0, 13, 16, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.217423}
{'[1, 0, 2, 1, 0, 6, 1, 0, 13, 16, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.217309}
{'[1, 0, 2, 1, 0, 6, 1, 0, 13, 16, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.217654}
{'[1, 0, 2, 1, 0, 6, 1, 0, 13, 16, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.217401}

out:
 ["{'[1, 0, 2, 1, 0, 6, 1, 0, 13, 16, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.260683}", "{'[1, 0, 2, 1, 0, 6, 1, 0, 13, 16, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.258695}", "{'[1, 0, 2, 1, 0, 6, 1, 0, 13, 16, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.218538}", "{'[1, 0, 2, 1, 0, 6, 1, 0, 13, 16, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.217637}", "{'[1, 0, 2, 1, 0, 6, 1, 0, 13, 16, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.217176}", "{'[1, 0, 2, 1, 0, 6, 1, 0, 13, 16, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.21714}", "{'[1, 0, 2, 1, 0, 6, 1, 0, 13, 16, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.217166}", "{'[1, 0, 2, 1, 0, 6, 1, 0, 13, 16, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.217376}", "{'[1, 0, 2, 1, 0, 6, 1, 0, 13, 16, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.217632}", "{'[1, 0, 2, 1, 0, 6, 1, 0, 13, 16, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.217239}", "{'[1, 0, 2, 1, 0, 6, 1, 0, 13, 16, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.217342}", "{'[1, 0, 2, 1, 0, 6, 1, 0, 13, 16, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.217255}", "{'[1, 0, 2, 1, 0, 6, 1, 0, 13, 16, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.217291}", "{'[1, 0, 2, 1, 0, 6, 1, 0, 13, 16, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.217795}", "{'[1, 0, 2, 1, 0, 6, 1, 0, 13, 16, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.217227}", "{'[1, 0, 2, 1, 0, 6, 1, 0, 13, 16, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.217325}", "{'[1, 0, 2, 1, 0, 6, 1, 0, 13, 16, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.217365}", "{'[1, 0, 2, 1, 0, 6, 1, 0, 13, 16, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.21761}", "{'[1, 0, 2, 1, 0, 6, 1, 0, 13, 16, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.21776}", "{'[1, 0, 2, 1, 0, 6, 1, 0, 13, 16, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.217499}", "{'[1, 0, 2, 1, 0, 6, 1, 0, 13, 16, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.217287}", "{'[1, 0, 2, 1, 0, 6, 1, 0, 13, 16, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.217285}", "{'[1, 0, 2, 1, 0, 6, 1, 0, 13, 16, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.217277}", "{'[1, 0, 2, 1, 0, 6, 1, 0, 13, 16, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.217684}", "{'[1, 0, 2, 1, 0, 6, 1, 0, 13, 16, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.217219}", "{'[1, 0, 2, 1, 0, 6, 1, 0, 13, 16, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.217513}", "{'[1, 0, 2, 1, 0, 6, 1, 0, 13, 16, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.217423}", "{'[1, 0, 2, 1, 0, 6, 1, 0, 13, 16, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.217309}", "{'[1, 0, 2, 1, 0, 6, 1, 0, 13, 16, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.217654}", "{'[1, 0, 2, 1, 0, 6, 1, 0, 13, 16, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.217401}"]
returning from 'run': {'[1, 0, 2, 1, 0, 6, 1, 0, 13, 16, 18, 0, 0, 0, 0, 1, 1, 0]': ([0.260683, 0.258695, 0.218538, 0.217637, 0.217176, 0.21714, 0.217166, 0.217376, 0.217632, 0.217239, 0.217342, 0.217255, 0.217291, 0.217795, 0.217227, 0.217325, 0.217365, 0.21761, 0.21776, 0.217499, 0.217287, 0.217285, 0.217277, 0.217684, 0.217219, 0.217513, 0.217423, 0.217309, 0.217654, 0.217401], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 2, 1, 0, 6, 1, 0, 13, 16, 18, 0, 0, 0, 0, 1, 1, 0]': ([0.260683, 0.258695, 0.218538, 0.217637, 0.217176, 0.21714, 0.217166, 0.217376, 0.217632, 0.217239, 0.217342, 0.217255, 0.217291, 0.217795, 0.217227, 0.217325, 0.217365, 0.21761, 0.21776, 0.217499, 0.217287, 0.217285, 0.217277, 0.217684, 0.217219, 0.217513, 0.217423, 0.217309, 0.217654, 0.217401], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	49
        Max loop nest depth: 	6
        Additions: 		1412
        Multiplications: 	620
        Divisions: 		0
        Logical: 		0
        Reads: 			3017
        Writes: 		582
        Comparisons:		49
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest51.exe __orio_perftest51.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest51.exe  
Program Test Output: 
{'[1, 0, 3, 1, 6, 2, 1, 0, 11, 29, 0, 0, 0, 0, 1, 1, 0, 0]' : 0.225426}
{'[1, 0, 3, 1, 6, 2, 1, 0, 11, 29, 0, 0, 0, 0, 1, 1, 0, 0]' : 0.225328}
{'[1, 0, 3, 1, 6, 2, 1, 0, 11, 29, 0, 0, 0, 0, 1, 1, 0, 0]' : 0.202003}
{'[1, 0, 3, 1, 6, 2, 1, 0, 11, 29, 0, 0, 0, 0, 1, 1, 0, 0]' : 0.188839}
{'[1, 0, 3, 1, 6, 2, 1, 0, 11, 29, 0, 0, 0, 0, 1, 1, 0, 0]' : 0.188384}
{'[1, 0, 3, 1, 6, 2, 1, 0, 11, 29, 0, 0, 0, 0, 1, 1, 0, 0]' : 0.18838}
{'[1, 0, 3, 1, 6, 2, 1, 0, 11, 29, 0, 0, 0, 0, 1, 1, 0, 0]' : 0.188531}
{'[1, 0, 3, 1, 6, 2, 1, 0, 11, 29, 0, 0, 0, 0, 1, 1, 0, 0]' : 0.188272}
{'[1, 0, 3, 1, 6, 2, 1, 0, 11, 29, 0, 0, 0, 0, 1, 1, 0, 0]' : 0.188571}
{'[1, 0, 3, 1, 6, 2, 1, 0, 11, 29, 0, 0, 0, 0, 1, 1, 0, 0]' : 0.189079}
{'[1, 0, 3, 1, 6, 2, 1, 0, 11, 29, 0, 0, 0, 0, 1, 1, 0, 0]' : 0.188247}
{'[1, 0, 3, 1, 6, 2, 1, 0, 11, 29, 0, 0, 0, 0, 1, 1, 0, 0]' : 0.188731}
{'[1, 0, 3, 1, 6, 2, 1, 0, 11, 29, 0, 0, 0, 0, 1, 1, 0, 0]' : 0.188332}
{'[1, 0, 3, 1, 6, 2, 1, 0, 11, 29, 0, 0, 0, 0, 1, 1, 0, 0]' : 0.188537}
{'[1, 0, 3, 1, 6, 2, 1, 0, 11, 29, 0, 0, 0, 0, 1, 1, 0, 0]' : 0.18896}
{'[1, 0, 3, 1, 6, 2, 1, 0, 11, 29, 0, 0, 0, 0, 1, 1, 0, 0]' : 0.188621}
{'[1, 0, 3, 1, 6, 2, 1, 0, 11, 29, 0, 0, 0, 0, 1, 1, 0, 0]' : 0.188343}
{'[1, 0, 3, 1, 6, 2, 1, 0, 11, 29, 0, 0, 0, 0, 1, 1, 0, 0]' : 0.18838}
{'[1, 0, 3, 1, 6, 2, 1, 0, 11, 29, 0, 0, 0, 0, 1, 1, 0, 0]' : 0.188395}
{'[1, 0, 3, 1, 6, 2, 1, 0, 11, 29, 0, 0, 0, 0, 1, 1, 0, 0]' : 0.189496}
{'[1, 0, 3, 1, 6, 2, 1, 0, 11, 29, 0, 0, 0, 0, 1, 1, 0, 0]' : 0.188704}
{'[1, 0, 3, 1, 6, 2, 1, 0, 11, 29, 0, 0, 0, 0, 1, 1, 0, 0]' : 0.188689}
{'[1, 0, 3, 1, 6, 2, 1, 0, 11, 29, 0, 0, 0, 0, 1, 1, 0, 0]' : 0.188586}
{'[1, 0, 3, 1, 6, 2, 1, 0, 11, 29, 0, 0, 0, 0, 1, 1, 0, 0]' : 0.194391}
{'[1, 0, 3, 1, 6, 2, 1, 0, 11, 29, 0, 0, 0, 0, 1, 1, 0, 0]' : 0.194939}
{'[1, 0, 3, 1, 6, 2, 1, 0, 11, 29, 0, 0, 0, 0, 1, 1, 0, 0]' : 0.194831}
{'[1, 0, 3, 1, 6, 2, 1, 0, 11, 29, 0, 0, 0, 0, 1, 1, 0, 0]' : 0.195123}
{'[1, 0, 3, 1, 6, 2, 1, 0, 11, 29, 0, 0, 0, 0, 1, 1, 0, 0]' : 0.194889}
{'[1, 0, 3, 1, 6, 2, 1, 0, 11, 29, 0, 0, 0, 0, 1, 1, 0, 0]' : 0.194779}
{'[1, 0, 3, 1, 6, 2, 1, 0, 11, 29, 0, 0, 0, 0, 1, 1, 0, 0]' : 0.194835}

out:
 ["{'[1, 0, 3, 1, 6, 2, 1, 0, 11, 29, 0, 0, 0, 0, 1, 1, 0, 0]' : 0.225426}", "{'[1, 0, 3, 1, 6, 2, 1, 0, 11, 29, 0, 0, 0, 0, 1, 1, 0, 0]' : 0.225328}", "{'[1, 0, 3, 1, 6, 2, 1, 0, 11, 29, 0, 0, 0, 0, 1, 1, 0, 0]' : 0.202003}", "{'[1, 0, 3, 1, 6, 2, 1, 0, 11, 29, 0, 0, 0, 0, 1, 1, 0, 0]' : 0.188839}", "{'[1, 0, 3, 1, 6, 2, 1, 0, 11, 29, 0, 0, 0, 0, 1, 1, 0, 0]' : 0.188384}", "{'[1, 0, 3, 1, 6, 2, 1, 0, 11, 29, 0, 0, 0, 0, 1, 1, 0, 0]' : 0.18838}", "{'[1, 0, 3, 1, 6, 2, 1, 0, 11, 29, 0, 0, 0, 0, 1, 1, 0, 0]' : 0.188531}", "{'[1, 0, 3, 1, 6, 2, 1, 0, 11, 29, 0, 0, 0, 0, 1, 1, 0, 0]' : 0.188272}", "{'[1, 0, 3, 1, 6, 2, 1, 0, 11, 29, 0, 0, 0, 0, 1, 1, 0, 0]' : 0.188571}", "{'[1, 0, 3, 1, 6, 2, 1, 0, 11, 29, 0, 0, 0, 0, 1, 1, 0, 0]' : 0.189079}", "{'[1, 0, 3, 1, 6, 2, 1, 0, 11, 29, 0, 0, 0, 0, 1, 1, 0, 0]' : 0.188247}", "{'[1, 0, 3, 1, 6, 2, 1, 0, 11, 29, 0, 0, 0, 0, 1, 1, 0, 0]' : 0.188731}", "{'[1, 0, 3, 1, 6, 2, 1, 0, 11, 29, 0, 0, 0, 0, 1, 1, 0, 0]' : 0.188332}", "{'[1, 0, 3, 1, 6, 2, 1, 0, 11, 29, 0, 0, 0, 0, 1, 1, 0, 0]' : 0.188537}", "{'[1, 0, 3, 1, 6, 2, 1, 0, 11, 29, 0, 0, 0, 0, 1, 1, 0, 0]' : 0.18896}", "{'[1, 0, 3, 1, 6, 2, 1, 0, 11, 29, 0, 0, 0, 0, 1, 1, 0, 0]' : 0.188621}", "{'[1, 0, 3, 1, 6, 2, 1, 0, 11, 29, 0, 0, 0, 0, 1, 1, 0, 0]' : 0.188343}", "{'[1, 0, 3, 1, 6, 2, 1, 0, 11, 29, 0, 0, 0, 0, 1, 1, 0, 0]' : 0.18838}", "{'[1, 0, 3, 1, 6, 2, 1, 0, 11, 29, 0, 0, 0, 0, 1, 1, 0, 0]' : 0.188395}", "{'[1, 0, 3, 1, 6, 2, 1, 0, 11, 29, 0, 0, 0, 0, 1, 1, 0, 0]' : 0.189496}", "{'[1, 0, 3, 1, 6, 2, 1, 0, 11, 29, 0, 0, 0, 0, 1, 1, 0, 0]' : 0.188704}", "{'[1, 0, 3, 1, 6, 2, 1, 0, 11, 29, 0, 0, 0, 0, 1, 1, 0, 0]' : 0.188689}", "{'[1, 0, 3, 1, 6, 2, 1, 0, 11, 29, 0, 0, 0, 0, 1, 1, 0, 0]' : 0.188586}", "{'[1, 0, 3, 1, 6, 2, 1, 0, 11, 29, 0, 0, 0, 0, 1, 1, 0, 0]' : 0.194391}", "{'[1, 0, 3, 1, 6, 2, 1, 0, 11, 29, 0, 0, 0, 0, 1, 1, 0, 0]' : 0.194939}", "{'[1, 0, 3, 1, 6, 2, 1, 0, 11, 29, 0, 0, 0, 0, 1, 1, 0, 0]' : 0.194831}", "{'[1, 0, 3, 1, 6, 2, 1, 0, 11, 29, 0, 0, 0, 0, 1, 1, 0, 0]' : 0.195123}", "{'[1, 0, 3, 1, 6, 2, 1, 0, 11, 29, 0, 0, 0, 0, 1, 1, 0, 0]' : 0.194889}", "{'[1, 0, 3, 1, 6, 2, 1, 0, 11, 29, 0, 0, 0, 0, 1, 1, 0, 0]' : 0.194779}", "{'[1, 0, 3, 1, 6, 2, 1, 0, 11, 29, 0, 0, 0, 0, 1, 1, 0, 0]' : 0.194835}"]
returning from 'run': {'[1, 0, 3, 1, 6, 2, 1, 0, 11, 29, 0, 0, 0, 0, 1, 1, 0, 0]': ([0.225426, 0.225328, 0.202003, 0.188839, 0.188384, 0.18838, 0.188531, 0.188272, 0.188571, 0.189079, 0.188247, 0.188731, 0.188332, 0.188537, 0.18896, 0.188621, 0.188343, 0.18838, 0.188395, 0.189496, 0.188704, 0.188689, 0.188586, 0.194391, 0.194939, 0.194831, 0.195123, 0.194889, 0.194779, 0.194835], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 3, 1, 6, 2, 1, 0, 11, 29, 0, 0, 0, 0, 1, 1, 0, 0]': ([0.225426, 0.225328, 0.202003, 0.188839, 0.188384, 0.18838, 0.188531, 0.188272, 0.188571, 0.189079, 0.188247, 0.188731, 0.188332, 0.188537, 0.18896, 0.188621, 0.188343, 0.18838, 0.188395, 0.189496, 0.188704, 0.188689, 0.188586, 0.194391, 0.194939, 0.194831, 0.195123, 0.194889, 0.194779, 0.194835], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	4
        Additions: 		116
        Multiplications: 	24
        Divisions: 		0
        Logical: 		0
        Reads: 			262
        Writes: 		74
        Comparisons:		10
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest52.exe __orio_perftest52.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest52.exe  
Program Test Output: 
{'[0, 0, 1, 1, 1, 0, 1, 0, 24, 0, 29, 2, 0, 1, 0, 1, 0, 1]' : 0.24763}
{'[0, 0, 1, 1, 1, 0, 1, 0, 24, 0, 29, 2, 0, 1, 0, 1, 0, 1]' : 0.247516}
{'[0, 0, 1, 1, 1, 0, 1, 0, 24, 0, 29, 2, 0, 1, 0, 1, 0, 1]' : 0.242161}
{'[0, 0, 1, 1, 1, 0, 1, 0, 24, 0, 29, 2, 0, 1, 0, 1, 0, 1]' : 0.206313}
{'[0, 0, 1, 1, 1, 0, 1, 0, 24, 0, 29, 2, 0, 1, 0, 1, 0, 1]' : 0.20651}
{'[0, 0, 1, 1, 1, 0, 1, 0, 24, 0, 29, 2, 0, 1, 0, 1, 0, 1]' : 0.206676}
{'[0, 0, 1, 1, 1, 0, 1, 0, 24, 0, 29, 2, 0, 1, 0, 1, 0, 1]' : 0.206583}
{'[0, 0, 1, 1, 1, 0, 1, 0, 24, 0, 29, 2, 0, 1, 0, 1, 0, 1]' : 0.2067}
{'[0, 0, 1, 1, 1, 0, 1, 0, 24, 0, 29, 2, 0, 1, 0, 1, 0, 1]' : 0.206628}
{'[0, 0, 1, 1, 1, 0, 1, 0, 24, 0, 29, 2, 0, 1, 0, 1, 0, 1]' : 0.206501}
{'[0, 0, 1, 1, 1, 0, 1, 0, 24, 0, 29, 2, 0, 1, 0, 1, 0, 1]' : 0.206408}
{'[0, 0, 1, 1, 1, 0, 1, 0, 24, 0, 29, 2, 0, 1, 0, 1, 0, 1]' : 0.206747}
{'[0, 0, 1, 1, 1, 0, 1, 0, 24, 0, 29, 2, 0, 1, 0, 1, 0, 1]' : 0.207001}
{'[0, 0, 1, 1, 1, 0, 1, 0, 24, 0, 29, 2, 0, 1, 0, 1, 0, 1]' : 0.206437}
{'[0, 0, 1, 1, 1, 0, 1, 0, 24, 0, 29, 2, 0, 1, 0, 1, 0, 1]' : 0.206802}
{'[0, 0, 1, 1, 1, 0, 1, 0, 24, 0, 29, 2, 0, 1, 0, 1, 0, 1]' : 0.206606}
{'[0, 0, 1, 1, 1, 0, 1, 0, 24, 0, 29, 2, 0, 1, 0, 1, 0, 1]' : 0.207569}
{'[0, 0, 1, 1, 1, 0, 1, 0, 24, 0, 29, 2, 0, 1, 0, 1, 0, 1]' : 0.206802}
{'[0, 0, 1, 1, 1, 0, 1, 0, 24, 0, 29, 2, 0, 1, 0, 1, 0, 1]' : 0.206482}
{'[0, 0, 1, 1, 1, 0, 1, 0, 24, 0, 29, 2, 0, 1, 0, 1, 0, 1]' : 0.206416}
{'[0, 0, 1, 1, 1, 0, 1, 0, 24, 0, 29, 2, 0, 1, 0, 1, 0, 1]' : 0.211571}
{'[0, 0, 1, 1, 1, 0, 1, 0, 24, 0, 29, 2, 0, 1, 0, 1, 0, 1]' : 0.21349}
{'[0, 0, 1, 1, 1, 0, 1, 0, 24, 0, 29, 2, 0, 1, 0, 1, 0, 1]' : 0.213743}
{'[0, 0, 1, 1, 1, 0, 1, 0, 24, 0, 29, 2, 0, 1, 0, 1, 0, 1]' : 0.213632}
{'[0, 0, 1, 1, 1, 0, 1, 0, 24, 0, 29, 2, 0, 1, 0, 1, 0, 1]' : 0.213436}
{'[0, 0, 1, 1, 1, 0, 1, 0, 24, 0, 29, 2, 0, 1, 0, 1, 0, 1]' : 0.213339}
{'[0, 0, 1, 1, 1, 0, 1, 0, 24, 0, 29, 2, 0, 1, 0, 1, 0, 1]' : 0.213753}
{'[0, 0, 1, 1, 1, 0, 1, 0, 24, 0, 29, 2, 0, 1, 0, 1, 0, 1]' : 0.21353}
{'[0, 0, 1, 1, 1, 0, 1, 0, 24, 0, 29, 2, 0, 1, 0, 1, 0, 1]' : 0.21339}
{'[0, 0, 1, 1, 1, 0, 1, 0, 24, 0, 29, 2, 0, 1, 0, 1, 0, 1]' : 0.213375}

out:
 ["{'[0, 0, 1, 1, 1, 0, 1, 0, 24, 0, 29, 2, 0, 1, 0, 1, 0, 1]' : 0.24763}", "{'[0, 0, 1, 1, 1, 0, 1, 0, 24, 0, 29, 2, 0, 1, 0, 1, 0, 1]' : 0.247516}", "{'[0, 0, 1, 1, 1, 0, 1, 0, 24, 0, 29, 2, 0, 1, 0, 1, 0, 1]' : 0.242161}", "{'[0, 0, 1, 1, 1, 0, 1, 0, 24, 0, 29, 2, 0, 1, 0, 1, 0, 1]' : 0.206313}", "{'[0, 0, 1, 1, 1, 0, 1, 0, 24, 0, 29, 2, 0, 1, 0, 1, 0, 1]' : 0.20651}", "{'[0, 0, 1, 1, 1, 0, 1, 0, 24, 0, 29, 2, 0, 1, 0, 1, 0, 1]' : 0.206676}", "{'[0, 0, 1, 1, 1, 0, 1, 0, 24, 0, 29, 2, 0, 1, 0, 1, 0, 1]' : 0.206583}", "{'[0, 0, 1, 1, 1, 0, 1, 0, 24, 0, 29, 2, 0, 1, 0, 1, 0, 1]' : 0.2067}", "{'[0, 0, 1, 1, 1, 0, 1, 0, 24, 0, 29, 2, 0, 1, 0, 1, 0, 1]' : 0.206628}", "{'[0, 0, 1, 1, 1, 0, 1, 0, 24, 0, 29, 2, 0, 1, 0, 1, 0, 1]' : 0.206501}", "{'[0, 0, 1, 1, 1, 0, 1, 0, 24, 0, 29, 2, 0, 1, 0, 1, 0, 1]' : 0.206408}", "{'[0, 0, 1, 1, 1, 0, 1, 0, 24, 0, 29, 2, 0, 1, 0, 1, 0, 1]' : 0.206747}", "{'[0, 0, 1, 1, 1, 0, 1, 0, 24, 0, 29, 2, 0, 1, 0, 1, 0, 1]' : 0.207001}", "{'[0, 0, 1, 1, 1, 0, 1, 0, 24, 0, 29, 2, 0, 1, 0, 1, 0, 1]' : 0.206437}", "{'[0, 0, 1, 1, 1, 0, 1, 0, 24, 0, 29, 2, 0, 1, 0, 1, 0, 1]' : 0.206802}", "{'[0, 0, 1, 1, 1, 0, 1, 0, 24, 0, 29, 2, 0, 1, 0, 1, 0, 1]' : 0.206606}", "{'[0, 0, 1, 1, 1, 0, 1, 0, 24, 0, 29, 2, 0, 1, 0, 1, 0, 1]' : 0.207569}", "{'[0, 0, 1, 1, 1, 0, 1, 0, 24, 0, 29, 2, 0, 1, 0, 1, 0, 1]' : 0.206802}", "{'[0, 0, 1, 1, 1, 0, 1, 0, 24, 0, 29, 2, 0, 1, 0, 1, 0, 1]' : 0.206482}", "{'[0, 0, 1, 1, 1, 0, 1, 0, 24, 0, 29, 2, 0, 1, 0, 1, 0, 1]' : 0.206416}", "{'[0, 0, 1, 1, 1, 0, 1, 0, 24, 0, 29, 2, 0, 1, 0, 1, 0, 1]' : 0.211571}", "{'[0, 0, 1, 1, 1, 0, 1, 0, 24, 0, 29, 2, 0, 1, 0, 1, 0, 1]' : 0.21349}", "{'[0, 0, 1, 1, 1, 0, 1, 0, 24, 0, 29, 2, 0, 1, 0, 1, 0, 1]' : 0.213743}", "{'[0, 0, 1, 1, 1, 0, 1, 0, 24, 0, 29, 2, 0, 1, 0, 1, 0, 1]' : 0.213632}", "{'[0, 0, 1, 1, 1, 0, 1, 0, 24, 0, 29, 2, 0, 1, 0, 1, 0, 1]' : 0.213436}", "{'[0, 0, 1, 1, 1, 0, 1, 0, 24, 0, 29, 2, 0, 1, 0, 1, 0, 1]' : 0.213339}", "{'[0, 0, 1, 1, 1, 0, 1, 0, 24, 0, 29, 2, 0, 1, 0, 1, 0, 1]' : 0.213753}", "{'[0, 0, 1, 1, 1, 0, 1, 0, 24, 0, 29, 2, 0, 1, 0, 1, 0, 1]' : 0.21353}", "{'[0, 0, 1, 1, 1, 0, 1, 0, 24, 0, 29, 2, 0, 1, 0, 1, 0, 1]' : 0.21339}", "{'[0, 0, 1, 1, 1, 0, 1, 0, 24, 0, 29, 2, 0, 1, 0, 1, 0, 1]' : 0.213375}"]
returning from 'run': {'[0, 0, 1, 1, 1, 0, 1, 0, 24, 0, 29, 2, 0, 1, 0, 1, 0, 1]': ([0.24763, 0.247516, 0.242161, 0.206313, 0.20651, 0.206676, 0.206583, 0.2067, 0.206628, 0.206501, 0.206408, 0.206747, 0.207001, 0.206437, 0.206802, 0.206606, 0.207569, 0.206802, 0.206482, 0.206416, 0.211571, 0.21349, 0.213743, 0.213632, 0.213436, 0.213339, 0.213753, 0.21353, 0.21339, 0.213375], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 1, 1, 1, 0, 1, 0, 24, 0, 29, 2, 0, 1, 0, 1, 0, 1]': ([0.24763, 0.247516, 0.242161, 0.206313, 0.20651, 0.206676, 0.206583, 0.2067, 0.206628, 0.206501, 0.206408, 0.206747, 0.207001, 0.206437, 0.206802, 0.206606, 0.207569, 0.206802, 0.206482, 0.206416, 0.211571, 0.21349, 0.213743, 0.213632, 0.213436, 0.213339, 0.213753, 0.21353, 0.21339, 0.213375], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	4
        Additions: 		134
        Multiplications: 	32
        Divisions: 		0
        Logical: 		0
        Reads: 			310
        Writes: 		82
        Comparisons:		9
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest53.exe __orio_perftest53.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest53.exe  
Program Test Output: 
{'[0, 0, 6, 1, 0, 0, 1, 1, 23, 0, 24, 6, 0, 1, 1, 1, 0, 1]' : 0.24952}
{'[0, 0, 6, 1, 0, 0, 1, 1, 23, 0, 24, 6, 0, 1, 1, 1, 0, 1]' : 0.249139}
{'[0, 0, 6, 1, 0, 0, 1, 1, 23, 0, 24, 6, 0, 1, 1, 1, 0, 1]' : 0.222748}
{'[0, 0, 6, 1, 0, 0, 1, 1, 23, 0, 24, 6, 0, 1, 1, 1, 0, 1]' : 0.209351}
{'[0, 0, 6, 1, 0, 0, 1, 1, 23, 0, 24, 6, 0, 1, 1, 1, 0, 1]' : 0.209391}
{'[0, 0, 6, 1, 0, 0, 1, 1, 23, 0, 24, 6, 0, 1, 1, 1, 0, 1]' : 0.209687}
{'[0, 0, 6, 1, 0, 0, 1, 1, 23, 0, 24, 6, 0, 1, 1, 1, 0, 1]' : 0.209714}
{'[0, 0, 6, 1, 0, 0, 1, 1, 23, 0, 24, 6, 0, 1, 1, 1, 0, 1]' : 0.209447}
{'[0, 0, 6, 1, 0, 0, 1, 1, 23, 0, 24, 6, 0, 1, 1, 1, 0, 1]' : 0.209551}
{'[0, 0, 6, 1, 0, 0, 1, 1, 23, 0, 24, 6, 0, 1, 1, 1, 0, 1]' : 0.209551}
{'[0, 0, 6, 1, 0, 0, 1, 1, 23, 0, 24, 6, 0, 1, 1, 1, 0, 1]' : 0.209417}
{'[0, 0, 6, 1, 0, 0, 1, 1, 23, 0, 24, 6, 0, 1, 1, 1, 0, 1]' : 0.209562}
{'[0, 0, 6, 1, 0, 0, 1, 1, 23, 0, 24, 6, 0, 1, 1, 1, 0, 1]' : 0.209776}
{'[0, 0, 6, 1, 0, 0, 1, 1, 23, 0, 24, 6, 0, 1, 1, 1, 0, 1]' : 0.209379}
{'[0, 0, 6, 1, 0, 0, 1, 1, 23, 0, 24, 6, 0, 1, 1, 1, 0, 1]' : 0.209353}
{'[0, 0, 6, 1, 0, 0, 1, 1, 23, 0, 24, 6, 0, 1, 1, 1, 0, 1]' : 0.209522}
{'[0, 0, 6, 1, 0, 0, 1, 1, 23, 0, 24, 6, 0, 1, 1, 1, 0, 1]' : 0.209781}
{'[0, 0, 6, 1, 0, 0, 1, 1, 23, 0, 24, 6, 0, 1, 1, 1, 0, 1]' : 0.209503}
{'[0, 0, 6, 1, 0, 0, 1, 1, 23, 0, 24, 6, 0, 1, 1, 1, 0, 1]' : 0.209574}
{'[0, 0, 6, 1, 0, 0, 1, 1, 23, 0, 24, 6, 0, 1, 1, 1, 0, 1]' : 0.209433}
{'[0, 0, 6, 1, 0, 0, 1, 1, 23, 0, 24, 6, 0, 1, 1, 1, 0, 1]' : 0.209628}
{'[0, 0, 6, 1, 0, 0, 1, 1, 23, 0, 24, 6, 0, 1, 1, 1, 0, 1]' : 0.209348}
{'[0, 0, 6, 1, 0, 0, 1, 1, 23, 0, 24, 6, 0, 1, 1, 1, 0, 1]' : 0.209745}
{'[0, 0, 6, 1, 0, 0, 1, 1, 23, 0, 24, 6, 0, 1, 1, 1, 0, 1]' : 0.209575}
{'[0, 0, 6, 1, 0, 0, 1, 1, 23, 0, 24, 6, 0, 1, 1, 1, 0, 1]' : 0.209546}
{'[0, 0, 6, 1, 0, 0, 1, 1, 23, 0, 24, 6, 0, 1, 1, 1, 0, 1]' : 0.209464}
{'[0, 0, 6, 1, 0, 0, 1, 1, 23, 0, 24, 6, 0, 1, 1, 1, 0, 1]' : 0.209485}
{'[0, 0, 6, 1, 0, 0, 1, 1, 23, 0, 24, 6, 0, 1, 1, 1, 0, 1]' : 0.209836}
{'[0, 0, 6, 1, 0, 0, 1, 1, 23, 0, 24, 6, 0, 1, 1, 1, 0, 1]' : 0.209553}
{'[0, 0, 6, 1, 0, 0, 1, 1, 23, 0, 24, 6, 0, 1, 1, 1, 0, 1]' : 0.209377}

out:
 ["{'[0, 0, 6, 1, 0, 0, 1, 1, 23, 0, 24, 6, 0, 1, 1, 1, 0, 1]' : 0.24952}", "{'[0, 0, 6, 1, 0, 0, 1, 1, 23, 0, 24, 6, 0, 1, 1, 1, 0, 1]' : 0.249139}", "{'[0, 0, 6, 1, 0, 0, 1, 1, 23, 0, 24, 6, 0, 1, 1, 1, 0, 1]' : 0.222748}", "{'[0, 0, 6, 1, 0, 0, 1, 1, 23, 0, 24, 6, 0, 1, 1, 1, 0, 1]' : 0.209351}", "{'[0, 0, 6, 1, 0, 0, 1, 1, 23, 0, 24, 6, 0, 1, 1, 1, 0, 1]' : 0.209391}", "{'[0, 0, 6, 1, 0, 0, 1, 1, 23, 0, 24, 6, 0, 1, 1, 1, 0, 1]' : 0.209687}", "{'[0, 0, 6, 1, 0, 0, 1, 1, 23, 0, 24, 6, 0, 1, 1, 1, 0, 1]' : 0.209714}", "{'[0, 0, 6, 1, 0, 0, 1, 1, 23, 0, 24, 6, 0, 1, 1, 1, 0, 1]' : 0.209447}", "{'[0, 0, 6, 1, 0, 0, 1, 1, 23, 0, 24, 6, 0, 1, 1, 1, 0, 1]' : 0.209551}", "{'[0, 0, 6, 1, 0, 0, 1, 1, 23, 0, 24, 6, 0, 1, 1, 1, 0, 1]' : 0.209551}", "{'[0, 0, 6, 1, 0, 0, 1, 1, 23, 0, 24, 6, 0, 1, 1, 1, 0, 1]' : 0.209417}", "{'[0, 0, 6, 1, 0, 0, 1, 1, 23, 0, 24, 6, 0, 1, 1, 1, 0, 1]' : 0.209562}", "{'[0, 0, 6, 1, 0, 0, 1, 1, 23, 0, 24, 6, 0, 1, 1, 1, 0, 1]' : 0.209776}", "{'[0, 0, 6, 1, 0, 0, 1, 1, 23, 0, 24, 6, 0, 1, 1, 1, 0, 1]' : 0.209379}", "{'[0, 0, 6, 1, 0, 0, 1, 1, 23, 0, 24, 6, 0, 1, 1, 1, 0, 1]' : 0.209353}", "{'[0, 0, 6, 1, 0, 0, 1, 1, 23, 0, 24, 6, 0, 1, 1, 1, 0, 1]' : 0.209522}", "{'[0, 0, 6, 1, 0, 0, 1, 1, 23, 0, 24, 6, 0, 1, 1, 1, 0, 1]' : 0.209781}", "{'[0, 0, 6, 1, 0, 0, 1, 1, 23, 0, 24, 6, 0, 1, 1, 1, 0, 1]' : 0.209503}", "{'[0, 0, 6, 1, 0, 0, 1, 1, 23, 0, 24, 6, 0, 1, 1, 1, 0, 1]' : 0.209574}", "{'[0, 0, 6, 1, 0, 0, 1, 1, 23, 0, 24, 6, 0, 1, 1, 1, 0, 1]' : 0.209433}", "{'[0, 0, 6, 1, 0, 0, 1, 1, 23, 0, 24, 6, 0, 1, 1, 1, 0, 1]' : 0.209628}", "{'[0, 0, 6, 1, 0, 0, 1, 1, 23, 0, 24, 6, 0, 1, 1, 1, 0, 1]' : 0.209348}", "{'[0, 0, 6, 1, 0, 0, 1, 1, 23, 0, 24, 6, 0, 1, 1, 1, 0, 1]' : 0.209745}", "{'[0, 0, 6, 1, 0, 0, 1, 1, 23, 0, 24, 6, 0, 1, 1, 1, 0, 1]' : 0.209575}", "{'[0, 0, 6, 1, 0, 0, 1, 1, 23, 0, 24, 6, 0, 1, 1, 1, 0, 1]' : 0.209546}", "{'[0, 0, 6, 1, 0, 0, 1, 1, 23, 0, 24, 6, 0, 1, 1, 1, 0, 1]' : 0.209464}", "{'[0, 0, 6, 1, 0, 0, 1, 1, 23, 0, 24, 6, 0, 1, 1, 1, 0, 1]' : 0.209485}", "{'[0, 0, 6, 1, 0, 0, 1, 1, 23, 0, 24, 6, 0, 1, 1, 1, 0, 1]' : 0.209836}", "{'[0, 0, 6, 1, 0, 0, 1, 1, 23, 0, 24, 6, 0, 1, 1, 1, 0, 1]' : 0.209553}", "{'[0, 0, 6, 1, 0, 0, 1, 1, 23, 0, 24, 6, 0, 1, 1, 1, 0, 1]' : 0.209377}"]
returning from 'run': {'[0, 0, 6, 1, 0, 0, 1, 1, 23, 0, 24, 6, 0, 1, 1, 1, 0, 1]': ([0.24952, 0.249139, 0.222748, 0.209351, 0.209391, 0.209687, 0.209714, 0.209447, 0.209551, 0.209551, 0.209417, 0.209562, 0.209776, 0.209379, 0.209353, 0.209522, 0.209781, 0.209503, 0.209574, 0.209433, 0.209628, 0.209348, 0.209745, 0.209575, 0.209546, 0.209464, 0.209485, 0.209836, 0.209553, 0.209377], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 6, 1, 0, 0, 1, 1, 23, 0, 24, 6, 0, 1, 1, 1, 0, 1]': ([0.24952, 0.249139, 0.222748, 0.209351, 0.209391, 0.209687, 0.209714, 0.209447, 0.209551, 0.209551, 0.209417, 0.209562, 0.209776, 0.209379, 0.209353, 0.209522, 0.209781, 0.209503, 0.209574, 0.209433, 0.209628, 0.209348, 0.209745, 0.209575, 0.209546, 0.209464, 0.209485, 0.209836, 0.209553, 0.209377], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
Code stats:
        Number of loops: 	55
        Max loop nest depth: 	5
        Additions: 		1609
        Multiplications: 	672
        Divisions: 		0
        Logical: 		0
        Reads: 			3288
        Writes: 		612
        Comparisons:		55
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest54.exe __orio_perftest54.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest54.exe  
Program Test Output: 
{'[3, 0, 1, 1, 0, 6, 1, 1, 12, 19, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.192489}
{'[3, 0, 1, 1, 0, 6, 1, 1, 12, 19, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.192387}
{'[3, 0, 1, 1, 0, 6, 1, 1, 12, 19, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.192661}
{'[3, 0, 1, 1, 0, 6, 1, 1, 12, 19, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.192745}
{'[3, 0, 1, 1, 0, 6, 1, 1, 12, 19, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.192599}
{'[3, 0, 1, 1, 0, 6, 1, 1, 12, 19, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.192863}
{'[3, 0, 1, 1, 0, 6, 1, 1, 12, 19, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.192455}
{'[3, 0, 1, 1, 0, 6, 1, 1, 12, 19, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.192537}
{'[3, 0, 1, 1, 0, 6, 1, 1, 12, 19, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.192607}
{'[3, 0, 1, 1, 0, 6, 1, 1, 12, 19, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.191625}
{'[3, 0, 1, 1, 0, 6, 1, 1, 12, 19, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.190704}
{'[3, 0, 1, 1, 0, 6, 1, 1, 12, 19, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.190341}
{'[3, 0, 1, 1, 0, 6, 1, 1, 12, 19, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.190234}
{'[3, 0, 1, 1, 0, 6, 1, 1, 12, 19, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.190219}
{'[3, 0, 1, 1, 0, 6, 1, 1, 12, 19, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.19008}
{'[3, 0, 1, 1, 0, 6, 1, 1, 12, 19, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.190267}
{'[3, 0, 1, 1, 0, 6, 1, 1, 12, 19, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.190335}
{'[3, 0, 1, 1, 0, 6, 1, 1, 12, 19, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.19027}
{'[3, 0, 1, 1, 0, 6, 1, 1, 12, 19, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.190295}
{'[3, 0, 1, 1, 0, 6, 1, 1, 12, 19, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.190326}
{'[3, 0, 1, 1, 0, 6, 1, 1, 12, 19, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.190148}
{'[3, 0, 1, 1, 0, 6, 1, 1, 12, 19, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.190384}
{'[3, 0, 1, 1, 0, 6, 1, 1, 12, 19, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.190222}
{'[3, 0, 1, 1, 0, 6, 1, 1, 12, 19, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.190215}
{'[3, 0, 1, 1, 0, 6, 1, 1, 12, 19, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.190378}
{'[3, 0, 1, 1, 0, 6, 1, 1, 12, 19, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.190142}
{'[3, 0, 1, 1, 0, 6, 1, 1, 12, 19, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.190553}
{'[3, 0, 1, 1, 0, 6, 1, 1, 12, 19, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.190283}
{'[3, 0, 1, 1, 0, 6, 1, 1, 12, 19, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.190525}
{'[3, 0, 1, 1, 0, 6, 1, 1, 12, 19, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.190314}

out:
 ["{'[3, 0, 1, 1, 0, 6, 1, 1, 12, 19, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.192489}", "{'[3, 0, 1, 1, 0, 6, 1, 1, 12, 19, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.192387}", "{'[3, 0, 1, 1, 0, 6, 1, 1, 12, 19, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.192661}", "{'[3, 0, 1, 1, 0, 6, 1, 1, 12, 19, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.192745}", "{'[3, 0, 1, 1, 0, 6, 1, 1, 12, 19, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.192599}", "{'[3, 0, 1, 1, 0, 6, 1, 1, 12, 19, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.192863}", "{'[3, 0, 1, 1, 0, 6, 1, 1, 12, 19, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.192455}", "{'[3, 0, 1, 1, 0, 6, 1, 1, 12, 19, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.192537}", "{'[3, 0, 1, 1, 0, 6, 1, 1, 12, 19, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.192607}", "{'[3, 0, 1, 1, 0, 6, 1, 1, 12, 19, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.191625}", "{'[3, 0, 1, 1, 0, 6, 1, 1, 12, 19, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.190704}", "{'[3, 0, 1, 1, 0, 6, 1, 1, 12, 19, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.190341}", "{'[3, 0, 1, 1, 0, 6, 1, 1, 12, 19, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.190234}", "{'[3, 0, 1, 1, 0, 6, 1, 1, 12, 19, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.190219}", "{'[3, 0, 1, 1, 0, 6, 1, 1, 12, 19, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.19008}", "{'[3, 0, 1, 1, 0, 6, 1, 1, 12, 19, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.190267}", "{'[3, 0, 1, 1, 0, 6, 1, 1, 12, 19, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.190335}", "{'[3, 0, 1, 1, 0, 6, 1, 1, 12, 19, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.19027}", "{'[3, 0, 1, 1, 0, 6, 1, 1, 12, 19, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.190295}", "{'[3, 0, 1, 1, 0, 6, 1, 1, 12, 19, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.190326}", "{'[3, 0, 1, 1, 0, 6, 1, 1, 12, 19, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.190148}", "{'[3, 0, 1, 1, 0, 6, 1, 1, 12, 19, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.190384}", "{'[3, 0, 1, 1, 0, 6, 1, 1, 12, 19, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.190222}", "{'[3, 0, 1, 1, 0, 6, 1, 1, 12, 19, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.190215}", "{'[3, 0, 1, 1, 0, 6, 1, 1, 12, 19, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.190378}", "{'[3, 0, 1, 1, 0, 6, 1, 1, 12, 19, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.190142}", "{'[3, 0, 1, 1, 0, 6, 1, 1, 12, 19, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.190553}", "{'[3, 0, 1, 1, 0, 6, 1, 1, 12, 19, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.190283}", "{'[3, 0, 1, 1, 0, 6, 1, 1, 12, 19, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.190525}", "{'[3, 0, 1, 1, 0, 6, 1, 1, 12, 19, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.190314}"]
returning from 'run': {'[3, 0, 1, 1, 0, 6, 1, 1, 12, 19, 0, 0, 0, 1, 1, 1, 1, 1]': ([0.192489, 0.192387, 0.192661, 0.192745, 0.192599, 0.192863, 0.192455, 0.192537, 0.192607, 0.191625, 0.190704, 0.190341, 0.190234, 0.190219, 0.19008, 0.190267, 0.190335, 0.19027, 0.190295, 0.190326, 0.190148, 0.190384, 0.190222, 0.190215, 0.190378, 0.190142, 0.190553, 0.190283, 0.190525, 0.190314], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 0, 1, 1, 0, 6, 1, 1, 12, 19, 0, 0, 0, 1, 1, 1, 1, 1]': ([0.192489, 0.192387, 0.192661, 0.192745, 0.192599, 0.192863, 0.192455, 0.192537, 0.192607, 0.191625, 0.190704, 0.190341, 0.190234, 0.190219, 0.19008, 0.190267, 0.190335, 0.19027, 0.190295, 0.190326, 0.190148, 0.190384, 0.190222, 0.190215, 0.190378, 0.190142, 0.190553, 0.190283, 0.190525, 0.190314], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
Code stats:
        Number of loops: 	132
        Max loop nest depth: 	4
        Additions: 		5873
        Multiplications: 	2294
        Divisions: 		0
        Logical: 		0
        Reads: 			10633
        Writes: 		1694
        Comparisons:		132
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest55.exe __orio_perftest55.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest55.exe  
Program Test Output: 
{'[3, 0, 5, 1, 0, 0, 1, 1, 0, 29, 27, 0, 0, 0, 1, 1, 0, 1]' : 0.230194}
{'[3, 0, 5, 1, 0, 0, 1, 1, 0, 29, 27, 0, 0, 0, 1, 1, 0, 1]' : 0.229786}
{'[3, 0, 5, 1, 0, 0, 1, 1, 0, 29, 27, 0, 0, 0, 1, 1, 0, 1]' : 0.208882}
{'[3, 0, 5, 1, 0, 0, 1, 1, 0, 29, 27, 0, 0, 0, 1, 1, 0, 1]' : 0.19508}
{'[3, 0, 5, 1, 0, 0, 1, 1, 0, 29, 27, 0, 0, 0, 1, 1, 0, 1]' : 0.195076}
{'[3, 0, 5, 1, 0, 0, 1, 1, 0, 29, 27, 0, 0, 0, 1, 1, 0, 1]' : 0.194378}
{'[3, 0, 5, 1, 0, 0, 1, 1, 0, 29, 27, 0, 0, 0, 1, 1, 0, 1]' : 0.194068}
{'[3, 0, 5, 1, 0, 0, 1, 1, 0, 29, 27, 0, 0, 0, 1, 1, 0, 1]' : 0.194098}
{'[3, 0, 5, 1, 0, 0, 1, 1, 0, 29, 27, 0, 0, 0, 1, 1, 0, 1]' : 0.195094}
{'[3, 0, 5, 1, 0, 0, 1, 1, 0, 29, 27, 0, 0, 0, 1, 1, 0, 1]' : 0.194793}
{'[3, 0, 5, 1, 0, 0, 1, 1, 0, 29, 27, 0, 0, 0, 1, 1, 0, 1]' : 0.194445}
{'[3, 0, 5, 1, 0, 0, 1, 1, 0, 29, 27, 0, 0, 0, 1, 1, 0, 1]' : 0.194294}
{'[3, 0, 5, 1, 0, 0, 1, 1, 0, 29, 27, 0, 0, 0, 1, 1, 0, 1]' : 0.194393}
{'[3, 0, 5, 1, 0, 0, 1, 1, 0, 29, 27, 0, 0, 0, 1, 1, 0, 1]' : 0.195245}
{'[3, 0, 5, 1, 0, 0, 1, 1, 0, 29, 27, 0, 0, 0, 1, 1, 0, 1]' : 0.195013}
{'[3, 0, 5, 1, 0, 0, 1, 1, 0, 29, 27, 0, 0, 0, 1, 1, 0, 1]' : 0.194175}
{'[3, 0, 5, 1, 0, 0, 1, 1, 0, 29, 27, 0, 0, 0, 1, 1, 0, 1]' : 0.194464}
{'[3, 0, 5, 1, 0, 0, 1, 1, 0, 29, 27, 0, 0, 0, 1, 1, 0, 1]' : 0.194256}
{'[3, 0, 5, 1, 0, 0, 1, 1, 0, 29, 27, 0, 0, 0, 1, 1, 0, 1]' : 0.19444}
{'[3, 0, 5, 1, 0, 0, 1, 1, 0, 29, 27, 0, 0, 0, 1, 1, 0, 1]' : 0.195142}
{'[3, 0, 5, 1, 0, 0, 1, 1, 0, 29, 27, 0, 0, 0, 1, 1, 0, 1]' : 0.194541}
{'[3, 0, 5, 1, 0, 0, 1, 1, 0, 29, 27, 0, 0, 0, 1, 1, 0, 1]' : 0.194296}
{'[3, 0, 5, 1, 0, 0, 1, 1, 0, 29, 27, 0, 0, 0, 1, 1, 0, 1]' : 0.194633}
{'[3, 0, 5, 1, 0, 0, 1, 1, 0, 29, 27, 0, 0, 0, 1, 1, 0, 1]' : 0.195026}
{'[3, 0, 5, 1, 0, 0, 1, 1, 0, 29, 27, 0, 0, 0, 1, 1, 0, 1]' : 0.19517}
{'[3, 0, 5, 1, 0, 0, 1, 1, 0, 29, 27, 0, 0, 0, 1, 1, 0, 1]' : 0.194282}
{'[3, 0, 5, 1, 0, 0, 1, 1, 0, 29, 27, 0, 0, 0, 1, 1, 0, 1]' : 0.194138}
{'[3, 0, 5, 1, 0, 0, 1, 1, 0, 29, 27, 0, 0, 0, 1, 1, 0, 1]' : 0.194481}
{'[3, 0, 5, 1, 0, 0, 1, 1, 0, 29, 27, 0, 0, 0, 1, 1, 0, 1]' : 0.194423}
{'[3, 0, 5, 1, 0, 0, 1, 1, 0, 29, 27, 0, 0, 0, 1, 1, 0, 1]' : 0.195263}

out:
 ["{'[3, 0, 5, 1, 0, 0, 1, 1, 0, 29, 27, 0, 0, 0, 1, 1, 0, 1]' : 0.230194}", "{'[3, 0, 5, 1, 0, 0, 1, 1, 0, 29, 27, 0, 0, 0, 1, 1, 0, 1]' : 0.229786}", "{'[3, 0, 5, 1, 0, 0, 1, 1, 0, 29, 27, 0, 0, 0, 1, 1, 0, 1]' : 0.208882}", "{'[3, 0, 5, 1, 0, 0, 1, 1, 0, 29, 27, 0, 0, 0, 1, 1, 0, 1]' : 0.19508}", "{'[3, 0, 5, 1, 0, 0, 1, 1, 0, 29, 27, 0, 0, 0, 1, 1, 0, 1]' : 0.195076}", "{'[3, 0, 5, 1, 0, 0, 1, 1, 0, 29, 27, 0, 0, 0, 1, 1, 0, 1]' : 0.194378}", "{'[3, 0, 5, 1, 0, 0, 1, 1, 0, 29, 27, 0, 0, 0, 1, 1, 0, 1]' : 0.194068}", "{'[3, 0, 5, 1, 0, 0, 1, 1, 0, 29, 27, 0, 0, 0, 1, 1, 0, 1]' : 0.194098}", "{'[3, 0, 5, 1, 0, 0, 1, 1, 0, 29, 27, 0, 0, 0, 1, 1, 0, 1]' : 0.195094}", "{'[3, 0, 5, 1, 0, 0, 1, 1, 0, 29, 27, 0, 0, 0, 1, 1, 0, 1]' : 0.194793}", "{'[3, 0, 5, 1, 0, 0, 1, 1, 0, 29, 27, 0, 0, 0, 1, 1, 0, 1]' : 0.194445}", "{'[3, 0, 5, 1, 0, 0, 1, 1, 0, 29, 27, 0, 0, 0, 1, 1, 0, 1]' : 0.194294}", "{'[3, 0, 5, 1, 0, 0, 1, 1, 0, 29, 27, 0, 0, 0, 1, 1, 0, 1]' : 0.194393}", "{'[3, 0, 5, 1, 0, 0, 1, 1, 0, 29, 27, 0, 0, 0, 1, 1, 0, 1]' : 0.195245}", "{'[3, 0, 5, 1, 0, 0, 1, 1, 0, 29, 27, 0, 0, 0, 1, 1, 0, 1]' : 0.195013}", "{'[3, 0, 5, 1, 0, 0, 1, 1, 0, 29, 27, 0, 0, 0, 1, 1, 0, 1]' : 0.194175}", "{'[3, 0, 5, 1, 0, 0, 1, 1, 0, 29, 27, 0, 0, 0, 1, 1, 0, 1]' : 0.194464}", "{'[3, 0, 5, 1, 0, 0, 1, 1, 0, 29, 27, 0, 0, 0, 1, 1, 0, 1]' : 0.194256}", "{'[3, 0, 5, 1, 0, 0, 1, 1, 0, 29, 27, 0, 0, 0, 1, 1, 0, 1]' : 0.19444}", "{'[3, 0, 5, 1, 0, 0, 1, 1, 0, 29, 27, 0, 0, 0, 1, 1, 0, 1]' : 0.195142}", "{'[3, 0, 5, 1, 0, 0, 1, 1, 0, 29, 27, 0, 0, 0, 1, 1, 0, 1]' : 0.194541}", "{'[3, 0, 5, 1, 0, 0, 1, 1, 0, 29, 27, 0, 0, 0, 1, 1, 0, 1]' : 0.194296}", "{'[3, 0, 5, 1, 0, 0, 1, 1, 0, 29, 27, 0, 0, 0, 1, 1, 0, 1]' : 0.194633}", "{'[3, 0, 5, 1, 0, 0, 1, 1, 0, 29, 27, 0, 0, 0, 1, 1, 0, 1]' : 0.195026}", "{'[3, 0, 5, 1, 0, 0, 1, 1, 0, 29, 27, 0, 0, 0, 1, 1, 0, 1]' : 0.19517}", "{'[3, 0, 5, 1, 0, 0, 1, 1, 0, 29, 27, 0, 0, 0, 1, 1, 0, 1]' : 0.194282}", "{'[3, 0, 5, 1, 0, 0, 1, 1, 0, 29, 27, 0, 0, 0, 1, 1, 0, 1]' : 0.194138}", "{'[3, 0, 5, 1, 0, 0, 1, 1, 0, 29, 27, 0, 0, 0, 1, 1, 0, 1]' : 0.194481}", "{'[3, 0, 5, 1, 0, 0, 1, 1, 0, 29, 27, 0, 0, 0, 1, 1, 0, 1]' : 0.194423}", "{'[3, 0, 5, 1, 0, 0, 1, 1, 0, 29, 27, 0, 0, 0, 1, 1, 0, 1]' : 0.195263}"]
returning from 'run': {'[3, 0, 5, 1, 0, 0, 1, 1, 0, 29, 27, 0, 0, 0, 1, 1, 0, 1]': ([0.230194, 0.229786, 0.208882, 0.19508, 0.195076, 0.194378, 0.194068, 0.194098, 0.195094, 0.194793, 0.194445, 0.194294, 0.194393, 0.195245, 0.195013, 0.194175, 0.194464, 0.194256, 0.19444, 0.195142, 0.194541, 0.194296, 0.194633, 0.195026, 0.19517, 0.194282, 0.194138, 0.194481, 0.194423, 0.195263], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 0, 5, 1, 0, 0, 1, 1, 0, 29, 27, 0, 0, 0, 1, 1, 0, 1]': ([0.230194, 0.229786, 0.208882, 0.19508, 0.195076, 0.194378, 0.194068, 0.194098, 0.195094, 0.194793, 0.194445, 0.194294, 0.194393, 0.195245, 0.195013, 0.194175, 0.194464, 0.194256, 0.19444, 0.195142, 0.194541, 0.194296, 0.194633, 0.195026, 0.19517, 0.194282, 0.194138, 0.194481, 0.194423, 0.195263], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	4
        Additions: 		555
        Multiplications: 	234
        Divisions: 		0
        Logical: 		0
        Reads: 			1158
        Writes: 		218
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest56.exe __orio_perftest56.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest56.exe  
Program Test Output: 
{'[3, 0, 1, 1, 0, 0, 1, 1, 9, 0, 6, 3, 1, 0, 0, 1, 0, 0]' : 0.114943}
{'[3, 0, 1, 1, 0, 0, 1, 1, 9, 0, 6, 3, 1, 0, 0, 1, 0, 0]' : 0.11502}
{'[3, 0, 1, 1, 0, 0, 1, 1, 9, 0, 6, 3, 1, 0, 0, 1, 0, 0]' : 0.114979}
{'[3, 0, 1, 1, 0, 0, 1, 1, 9, 0, 6, 3, 1, 0, 0, 1, 0, 0]' : 0.114944}
{'[3, 0, 1, 1, 0, 0, 1, 1, 9, 0, 6, 3, 1, 0, 0, 1, 0, 0]' : 0.114944}
{'[3, 0, 1, 1, 0, 0, 1, 1, 9, 0, 6, 3, 1, 0, 0, 1, 0, 0]' : 0.106293}
{'[3, 0, 1, 1, 0, 0, 1, 1, 9, 0, 6, 3, 1, 0, 0, 1, 0, 0]' : 0.100862}
{'[3, 0, 1, 1, 0, 0, 1, 1, 9, 0, 6, 3, 1, 0, 0, 1, 0, 0]' : 0.101466}
{'[3, 0, 1, 1, 0, 0, 1, 1, 9, 0, 6, 3, 1, 0, 0, 1, 0, 0]' : 0.101088}
{'[3, 0, 1, 1, 0, 0, 1, 1, 9, 0, 6, 3, 1, 0, 0, 1, 0, 0]' : 0.100892}
{'[3, 0, 1, 1, 0, 0, 1, 1, 9, 0, 6, 3, 1, 0, 0, 1, 0, 0]' : 0.10083}
{'[3, 0, 1, 1, 0, 0, 1, 1, 9, 0, 6, 3, 1, 0, 0, 1, 0, 0]' : 0.101006}
{'[3, 0, 1, 1, 0, 0, 1, 1, 9, 0, 6, 3, 1, 0, 0, 1, 0, 0]' : 0.101779}
{'[3, 0, 1, 1, 0, 0, 1, 1, 9, 0, 6, 3, 1, 0, 0, 1, 0, 0]' : 0.101087}
{'[3, 0, 1, 1, 0, 0, 1, 1, 9, 0, 6, 3, 1, 0, 0, 1, 0, 0]' : 0.101091}
{'[3, 0, 1, 1, 0, 0, 1, 1, 9, 0, 6, 3, 1, 0, 0, 1, 0, 0]' : 0.101041}
{'[3, 0, 1, 1, 0, 0, 1, 1, 9, 0, 6, 3, 1, 0, 0, 1, 0, 0]' : 0.101214}
{'[3, 0, 1, 1, 0, 0, 1, 1, 9, 0, 6, 3, 1, 0, 0, 1, 0, 0]' : 0.101264}
{'[3, 0, 1, 1, 0, 0, 1, 1, 9, 0, 6, 3, 1, 0, 0, 1, 0, 0]' : 0.101358}
{'[3, 0, 1, 1, 0, 0, 1, 1, 9, 0, 6, 3, 1, 0, 0, 1, 0, 0]' : 0.101263}
{'[3, 0, 1, 1, 0, 0, 1, 1, 9, 0, 6, 3, 1, 0, 0, 1, 0, 0]' : 0.100924}
{'[3, 0, 1, 1, 0, 0, 1, 1, 9, 0, 6, 3, 1, 0, 0, 1, 0, 0]' : 0.100765}
{'[3, 0, 1, 1, 0, 0, 1, 1, 9, 0, 6, 3, 1, 0, 0, 1, 0, 0]' : 0.100757}
{'[3, 0, 1, 1, 0, 0, 1, 1, 9, 0, 6, 3, 1, 0, 0, 1, 0, 0]' : 0.10108}
{'[3, 0, 1, 1, 0, 0, 1, 1, 9, 0, 6, 3, 1, 0, 0, 1, 0, 0]' : 0.100764}
{'[3, 0, 1, 1, 0, 0, 1, 1, 9, 0, 6, 3, 1, 0, 0, 1, 0, 0]' : 0.100849}
{'[3, 0, 1, 1, 0, 0, 1, 1, 9, 0, 6, 3, 1, 0, 0, 1, 0, 0]' : 0.100794}
{'[3, 0, 1, 1, 0, 0, 1, 1, 9, 0, 6, 3, 1, 0, 0, 1, 0, 0]' : 0.101572}
{'[3, 0, 1, 1, 0, 0, 1, 1, 9, 0, 6, 3, 1, 0, 0, 1, 0, 0]' : 0.101394}
{'[3, 0, 1, 1, 0, 0, 1, 1, 9, 0, 6, 3, 1, 0, 0, 1, 0, 0]' : 0.101191}

out:
 ["{'[3, 0, 1, 1, 0, 0, 1, 1, 9, 0, 6, 3, 1, 0, 0, 1, 0, 0]' : 0.114943}", "{'[3, 0, 1, 1, 0, 0, 1, 1, 9, 0, 6, 3, 1, 0, 0, 1, 0, 0]' : 0.11502}", "{'[3, 0, 1, 1, 0, 0, 1, 1, 9, 0, 6, 3, 1, 0, 0, 1, 0, 0]' : 0.114979}", "{'[3, 0, 1, 1, 0, 0, 1, 1, 9, 0, 6, 3, 1, 0, 0, 1, 0, 0]' : 0.114944}", "{'[3, 0, 1, 1, 0, 0, 1, 1, 9, 0, 6, 3, 1, 0, 0, 1, 0, 0]' : 0.114944}", "{'[3, 0, 1, 1, 0, 0, 1, 1, 9, 0, 6, 3, 1, 0, 0, 1, 0, 0]' : 0.106293}", "{'[3, 0, 1, 1, 0, 0, 1, 1, 9, 0, 6, 3, 1, 0, 0, 1, 0, 0]' : 0.100862}", "{'[3, 0, 1, 1, 0, 0, 1, 1, 9, 0, 6, 3, 1, 0, 0, 1, 0, 0]' : 0.101466}", "{'[3, 0, 1, 1, 0, 0, 1, 1, 9, 0, 6, 3, 1, 0, 0, 1, 0, 0]' : 0.101088}", "{'[3, 0, 1, 1, 0, 0, 1, 1, 9, 0, 6, 3, 1, 0, 0, 1, 0, 0]' : 0.100892}", "{'[3, 0, 1, 1, 0, 0, 1, 1, 9, 0, 6, 3, 1, 0, 0, 1, 0, 0]' : 0.10083}", "{'[3, 0, 1, 1, 0, 0, 1, 1, 9, 0, 6, 3, 1, 0, 0, 1, 0, 0]' : 0.101006}", "{'[3, 0, 1, 1, 0, 0, 1, 1, 9, 0, 6, 3, 1, 0, 0, 1, 0, 0]' : 0.101779}", "{'[3, 0, 1, 1, 0, 0, 1, 1, 9, 0, 6, 3, 1, 0, 0, 1, 0, 0]' : 0.101087}", "{'[3, 0, 1, 1, 0, 0, 1, 1, 9, 0, 6, 3, 1, 0, 0, 1, 0, 0]' : 0.101091}", "{'[3, 0, 1, 1, 0, 0, 1, 1, 9, 0, 6, 3, 1, 0, 0, 1, 0, 0]' : 0.101041}", "{'[3, 0, 1, 1, 0, 0, 1, 1, 9, 0, 6, 3, 1, 0, 0, 1, 0, 0]' : 0.101214}", "{'[3, 0, 1, 1, 0, 0, 1, 1, 9, 0, 6, 3, 1, 0, 0, 1, 0, 0]' : 0.101264}", "{'[3, 0, 1, 1, 0, 0, 1, 1, 9, 0, 6, 3, 1, 0, 0, 1, 0, 0]' : 0.101358}", "{'[3, 0, 1, 1, 0, 0, 1, 1, 9, 0, 6, 3, 1, 0, 0, 1, 0, 0]' : 0.101263}", "{'[3, 0, 1, 1, 0, 0, 1, 1, 9, 0, 6, 3, 1, 0, 0, 1, 0, 0]' : 0.100924}", "{'[3, 0, 1, 1, 0, 0, 1, 1, 9, 0, 6, 3, 1, 0, 0, 1, 0, 0]' : 0.100765}", "{'[3, 0, 1, 1, 0, 0, 1, 1, 9, 0, 6, 3, 1, 0, 0, 1, 0, 0]' : 0.100757}", "{'[3, 0, 1, 1, 0, 0, 1, 1, 9, 0, 6, 3, 1, 0, 0, 1, 0, 0]' : 0.10108}", "{'[3, 0, 1, 1, 0, 0, 1, 1, 9, 0, 6, 3, 1, 0, 0, 1, 0, 0]' : 0.100764}", "{'[3, 0, 1, 1, 0, 0, 1, 1, 9, 0, 6, 3, 1, 0, 0, 1, 0, 0]' : 0.100849}", "{'[3, 0, 1, 1, 0, 0, 1, 1, 9, 0, 6, 3, 1, 0, 0, 1, 0, 0]' : 0.100794}", "{'[3, 0, 1, 1, 0, 0, 1, 1, 9, 0, 6, 3, 1, 0, 0, 1, 0, 0]' : 0.101572}", "{'[3, 0, 1, 1, 0, 0, 1, 1, 9, 0, 6, 3, 1, 0, 0, 1, 0, 0]' : 0.101394}", "{'[3, 0, 1, 1, 0, 0, 1, 1, 9, 0, 6, 3, 1, 0, 0, 1, 0, 0]' : 0.101191}"]
returning from 'run': {'[3, 0, 1, 1, 0, 0, 1, 1, 9, 0, 6, 3, 1, 0, 0, 1, 0, 0]': ([0.114943, 0.11502, 0.114979, 0.114944, 0.114944, 0.106293, 0.100862, 0.101466, 0.101088, 0.100892, 0.10083, 0.101006, 0.101779, 0.101087, 0.101091, 0.101041, 0.101214, 0.101264, 0.101358, 0.101263, 0.100924, 0.100765, 0.100757, 0.10108, 0.100764, 0.100849, 0.100794, 0.101572, 0.101394, 0.101191], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 0, 1, 1, 0, 0, 1, 1, 9, 0, 6, 3, 1, 0, 0, 1, 0, 0]': ([0.114943, 0.11502, 0.114979, 0.114944, 0.114944, 0.106293, 0.100862, 0.101466, 0.101088, 0.100892, 0.10083, 0.101006, 0.101779, 0.101087, 0.101091, 0.101041, 0.101214, 0.101264, 0.101358, 0.101263, 0.100924, 0.100765, 0.100757, 0.10108, 0.100764, 0.100849, 0.100794, 0.101572, 0.101394, 0.101191], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	5
        Additions: 		1692
        Multiplications: 	792
        Divisions: 		0
        Logical: 		0
        Reads: 			3356
        Writes: 		592
        Comparisons:		16
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest57.exe __orio_perftest57.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest57.exe  
Program Test Output: 
{'[1, 0, 0, 1, 0, 6, 1, 0, 29, 0, 20, 20, 1, 0, 0, 1, 1, 0]' : 0.117113}
{'[1, 0, 0, 1, 0, 6, 1, 0, 29, 0, 20, 20, 1, 0, 0, 1, 1, 0]' : 0.120637}
{'[1, 0, 0, 1, 0, 6, 1, 0, 29, 0, 20, 20, 1, 0, 0, 1, 1, 0]' : 0.1205}
{'[1, 0, 0, 1, 0, 6, 1, 0, 29, 0, 20, 20, 1, 0, 0, 1, 1, 0]' : 0.120659}
{'[1, 0, 0, 1, 0, 6, 1, 0, 29, 0, 20, 20, 1, 0, 0, 1, 1, 0]' : 0.117238}
{'[1, 0, 0, 1, 0, 6, 1, 0, 29, 0, 20, 20, 1, 0, 0, 1, 1, 0]' : 0.105494}
{'[1, 0, 0, 1, 0, 6, 1, 0, 29, 0, 20, 20, 1, 0, 0, 1, 1, 0]' : 0.105388}
{'[1, 0, 0, 1, 0, 6, 1, 0, 29, 0, 20, 20, 1, 0, 0, 1, 1, 0]' : 0.105398}
{'[1, 0, 0, 1, 0, 6, 1, 0, 29, 0, 20, 20, 1, 0, 0, 1, 1, 0]' : 0.105401}
{'[1, 0, 0, 1, 0, 6, 1, 0, 29, 0, 20, 20, 1, 0, 0, 1, 1, 0]' : 0.105655}
{'[1, 0, 0, 1, 0, 6, 1, 0, 29, 0, 20, 20, 1, 0, 0, 1, 1, 0]' : 0.105739}
{'[1, 0, 0, 1, 0, 6, 1, 0, 29, 0, 20, 20, 1, 0, 0, 1, 1, 0]' : 0.105509}
{'[1, 0, 0, 1, 0, 6, 1, 0, 29, 0, 20, 20, 1, 0, 0, 1, 1, 0]' : 0.105425}
{'[1, 0, 0, 1, 0, 6, 1, 0, 29, 0, 20, 20, 1, 0, 0, 1, 1, 0]' : 0.105409}
{'[1, 0, 0, 1, 0, 6, 1, 0, 29, 0, 20, 20, 1, 0, 0, 1, 1, 0]' : 0.105654}
{'[1, 0, 0, 1, 0, 6, 1, 0, 29, 0, 20, 20, 1, 0, 0, 1, 1, 0]' : 0.105614}
{'[1, 0, 0, 1, 0, 6, 1, 0, 29, 0, 20, 20, 1, 0, 0, 1, 1, 0]' : 0.105561}
{'[1, 0, 0, 1, 0, 6, 1, 0, 29, 0, 20, 20, 1, 0, 0, 1, 1, 0]' : 0.105332}
{'[1, 0, 0, 1, 0, 6, 1, 0, 29, 0, 20, 20, 1, 0, 0, 1, 1, 0]' : 0.105386}
{'[1, 0, 0, 1, 0, 6, 1, 0, 29, 0, 20, 20, 1, 0, 0, 1, 1, 0]' : 0.105764}
{'[1, 0, 0, 1, 0, 6, 1, 0, 29, 0, 20, 20, 1, 0, 0, 1, 1, 0]' : 0.105827}
{'[1, 0, 0, 1, 0, 6, 1, 0, 29, 0, 20, 20, 1, 0, 0, 1, 1, 0]' : 0.105783}
{'[1, 0, 0, 1, 0, 6, 1, 0, 29, 0, 20, 20, 1, 0, 0, 1, 1, 0]' : 0.105505}
{'[1, 0, 0, 1, 0, 6, 1, 0, 29, 0, 20, 20, 1, 0, 0, 1, 1, 0]' : 0.105431}
{'[1, 0, 0, 1, 0, 6, 1, 0, 29, 0, 20, 20, 1, 0, 0, 1, 1, 0]' : 0.105525}
{'[1, 0, 0, 1, 0, 6, 1, 0, 29, 0, 20, 20, 1, 0, 0, 1, 1, 0]' : 0.105324}
{'[1, 0, 0, 1, 0, 6, 1, 0, 29, 0, 20, 20, 1, 0, 0, 1, 1, 0]' : 0.105321}
{'[1, 0, 0, 1, 0, 6, 1, 0, 29, 0, 20, 20, 1, 0, 0, 1, 1, 0]' : 0.105396}
{'[1, 0, 0, 1, 0, 6, 1, 0, 29, 0, 20, 20, 1, 0, 0, 1, 1, 0]' : 0.105465}
{'[1, 0, 0, 1, 0, 6, 1, 0, 29, 0, 20, 20, 1, 0, 0, 1, 1, 0]' : 0.105745}

out:
 ["{'[1, 0, 0, 1, 0, 6, 1, 0, 29, 0, 20, 20, 1, 0, 0, 1, 1, 0]' : 0.117113}", "{'[1, 0, 0, 1, 0, 6, 1, 0, 29, 0, 20, 20, 1, 0, 0, 1, 1, 0]' : 0.120637}", "{'[1, 0, 0, 1, 0, 6, 1, 0, 29, 0, 20, 20, 1, 0, 0, 1, 1, 0]' : 0.1205}", "{'[1, 0, 0, 1, 0, 6, 1, 0, 29, 0, 20, 20, 1, 0, 0, 1, 1, 0]' : 0.120659}", "{'[1, 0, 0, 1, 0, 6, 1, 0, 29, 0, 20, 20, 1, 0, 0, 1, 1, 0]' : 0.117238}", "{'[1, 0, 0, 1, 0, 6, 1, 0, 29, 0, 20, 20, 1, 0, 0, 1, 1, 0]' : 0.105494}", "{'[1, 0, 0, 1, 0, 6, 1, 0, 29, 0, 20, 20, 1, 0, 0, 1, 1, 0]' : 0.105388}", "{'[1, 0, 0, 1, 0, 6, 1, 0, 29, 0, 20, 20, 1, 0, 0, 1, 1, 0]' : 0.105398}", "{'[1, 0, 0, 1, 0, 6, 1, 0, 29, 0, 20, 20, 1, 0, 0, 1, 1, 0]' : 0.105401}", "{'[1, 0, 0, 1, 0, 6, 1, 0, 29, 0, 20, 20, 1, 0, 0, 1, 1, 0]' : 0.105655}", "{'[1, 0, 0, 1, 0, 6, 1, 0, 29, 0, 20, 20, 1, 0, 0, 1, 1, 0]' : 0.105739}", "{'[1, 0, 0, 1, 0, 6, 1, 0, 29, 0, 20, 20, 1, 0, 0, 1, 1, 0]' : 0.105509}", "{'[1, 0, 0, 1, 0, 6, 1, 0, 29, 0, 20, 20, 1, 0, 0, 1, 1, 0]' : 0.105425}", "{'[1, 0, 0, 1, 0, 6, 1, 0, 29, 0, 20, 20, 1, 0, 0, 1, 1, 0]' : 0.105409}", "{'[1, 0, 0, 1, 0, 6, 1, 0, 29, 0, 20, 20, 1, 0, 0, 1, 1, 0]' : 0.105654}", "{'[1, 0, 0, 1, 0, 6, 1, 0, 29, 0, 20, 20, 1, 0, 0, 1, 1, 0]' : 0.105614}", "{'[1, 0, 0, 1, 0, 6, 1, 0, 29, 0, 20, 20, 1, 0, 0, 1, 1, 0]' : 0.105561}", "{'[1, 0, 0, 1, 0, 6, 1, 0, 29, 0, 20, 20, 1, 0, 0, 1, 1, 0]' : 0.105332}", "{'[1, 0, 0, 1, 0, 6, 1, 0, 29, 0, 20, 20, 1, 0, 0, 1, 1, 0]' : 0.105386}", "{'[1, 0, 0, 1, 0, 6, 1, 0, 29, 0, 20, 20, 1, 0, 0, 1, 1, 0]' : 0.105764}", "{'[1, 0, 0, 1, 0, 6, 1, 0, 29, 0, 20, 20, 1, 0, 0, 1, 1, 0]' : 0.105827}", "{'[1, 0, 0, 1, 0, 6, 1, 0, 29, 0, 20, 20, 1, 0, 0, 1, 1, 0]' : 0.105783}", "{'[1, 0, 0, 1, 0, 6, 1, 0, 29, 0, 20, 20, 1, 0, 0, 1, 1, 0]' : 0.105505}", "{'[1, 0, 0, 1, 0, 6, 1, 0, 29, 0, 20, 20, 1, 0, 0, 1, 1, 0]' : 0.105431}", "{'[1, 0, 0, 1, 0, 6, 1, 0, 29, 0, 20, 20, 1, 0, 0, 1, 1, 0]' : 0.105525}", "{'[1, 0, 0, 1, 0, 6, 1, 0, 29, 0, 20, 20, 1, 0, 0, 1, 1, 0]' : 0.105324}", "{'[1, 0, 0, 1, 0, 6, 1, 0, 29, 0, 20, 20, 1, 0, 0, 1, 1, 0]' : 0.105321}", "{'[1, 0, 0, 1, 0, 6, 1, 0, 29, 0, 20, 20, 1, 0, 0, 1, 1, 0]' : 0.105396}", "{'[1, 0, 0, 1, 0, 6, 1, 0, 29, 0, 20, 20, 1, 0, 0, 1, 1, 0]' : 0.105465}", "{'[1, 0, 0, 1, 0, 6, 1, 0, 29, 0, 20, 20, 1, 0, 0, 1, 1, 0]' : 0.105745}"]
returning from 'run': {'[1, 0, 0, 1, 0, 6, 1, 0, 29, 0, 20, 20, 1, 0, 0, 1, 1, 0]': ([0.117113, 0.120637, 0.1205, 0.120659, 0.117238, 0.105494, 0.105388, 0.105398, 0.105401, 0.105655, 0.105739, 0.105509, 0.105425, 0.105409, 0.105654, 0.105614, 0.105561, 0.105332, 0.105386, 0.105764, 0.105827, 0.105783, 0.105505, 0.105431, 0.105525, 0.105324, 0.105321, 0.105396, 0.105465, 0.105745], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 0, 1, 0, 6, 1, 0, 29, 0, 20, 20, 1, 0, 0, 1, 1, 0]': ([0.117113, 0.120637, 0.1205, 0.120659, 0.117238, 0.105494, 0.105388, 0.105398, 0.105401, 0.105655, 0.105739, 0.105509, 0.105425, 0.105409, 0.105654, 0.105614, 0.105561, 0.105332, 0.105386, 0.105764, 0.105827, 0.105783, 0.105505, 0.105431, 0.105525, 0.105324, 0.105321, 0.105396, 0.105465, 0.105745], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		270
        Multiplications: 	88
        Divisions: 		0
        Logical: 		0
        Reads: 			690
        Writes: 		176
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest58.exe __orio_perftest58.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest58.exe  
Program Test Output: 
{'[3, 0, 0, 1, 2, 5, 0, 0, 15, 0, 2, 6, 0, 0, 2, 1, 1, 1]' : 0.176445}
{'[3, 0, 0, 1, 2, 5, 0, 0, 15, 0, 2, 6, 0, 0, 2, 1, 1, 1]' : 0.176263}
{'[3, 0, 0, 1, 2, 5, 0, 0, 15, 0, 2, 6, 0, 0, 2, 1, 1, 1]' : 0.175418}
{'[3, 0, 0, 1, 2, 5, 0, 0, 15, 0, 2, 6, 0, 0, 2, 1, 1, 1]' : 0.150268}
{'[3, 0, 0, 1, 2, 5, 0, 0, 15, 0, 2, 6, 0, 0, 2, 1, 1, 1]' : 0.147672}
{'[3, 0, 0, 1, 2, 5, 0, 0, 15, 0, 2, 6, 0, 0, 2, 1, 1, 1]' : 0.147646}
{'[3, 0, 0, 1, 2, 5, 0, 0, 15, 0, 2, 6, 0, 0, 2, 1, 1, 1]' : 0.147345}
{'[3, 0, 0, 1, 2, 5, 0, 0, 15, 0, 2, 6, 0, 0, 2, 1, 1, 1]' : 0.147322}
{'[3, 0, 0, 1, 2, 5, 0, 0, 15, 0, 2, 6, 0, 0, 2, 1, 1, 1]' : 0.147365}
{'[3, 0, 0, 1, 2, 5, 0, 0, 15, 0, 2, 6, 0, 0, 2, 1, 1, 1]' : 0.147491}
{'[3, 0, 0, 1, 2, 5, 0, 0, 15, 0, 2, 6, 0, 0, 2, 1, 1, 1]' : 0.147846}
{'[3, 0, 0, 1, 2, 5, 0, 0, 15, 0, 2, 6, 0, 0, 2, 1, 1, 1]' : 0.148158}
{'[3, 0, 0, 1, 2, 5, 0, 0, 15, 0, 2, 6, 0, 0, 2, 1, 1, 1]' : 0.147625}
{'[3, 0, 0, 1, 2, 5, 0, 0, 15, 0, 2, 6, 0, 0, 2, 1, 1, 1]' : 0.147601}
{'[3, 0, 0, 1, 2, 5, 0, 0, 15, 0, 2, 6, 0, 0, 2, 1, 1, 1]' : 0.147613}
{'[3, 0, 0, 1, 2, 5, 0, 0, 15, 0, 2, 6, 0, 0, 2, 1, 1, 1]' : 0.147596}
{'[3, 0, 0, 1, 2, 5, 0, 0, 15, 0, 2, 6, 0, 0, 2, 1, 1, 1]' : 0.147688}
{'[3, 0, 0, 1, 2, 5, 0, 0, 15, 0, 2, 6, 0, 0, 2, 1, 1, 1]' : 0.147618}
{'[3, 0, 0, 1, 2, 5, 0, 0, 15, 0, 2, 6, 0, 0, 2, 1, 1, 1]' : 0.147788}
{'[3, 0, 0, 1, 2, 5, 0, 0, 15, 0, 2, 6, 0, 0, 2, 1, 1, 1]' : 0.147833}
{'[3, 0, 0, 1, 2, 5, 0, 0, 15, 0, 2, 6, 0, 0, 2, 1, 1, 1]' : 0.147532}
{'[3, 0, 0, 1, 2, 5, 0, 0, 15, 0, 2, 6, 0, 0, 2, 1, 1, 1]' : 0.147848}
{'[3, 0, 0, 1, 2, 5, 0, 0, 15, 0, 2, 6, 0, 0, 2, 1, 1, 1]' : 0.147829}
{'[3, 0, 0, 1, 2, 5, 0, 0, 15, 0, 2, 6, 0, 0, 2, 1, 1, 1]' : 0.147769}
{'[3, 0, 0, 1, 2, 5, 0, 0, 15, 0, 2, 6, 0, 0, 2, 1, 1, 1]' : 0.147711}
{'[3, 0, 0, 1, 2, 5, 0, 0, 15, 0, 2, 6, 0, 0, 2, 1, 1, 1]' : 0.147698}
{'[3, 0, 0, 1, 2, 5, 0, 0, 15, 0, 2, 6, 0, 0, 2, 1, 1, 1]' : 0.147759}
{'[3, 0, 0, 1, 2, 5, 0, 0, 15, 0, 2, 6, 0, 0, 2, 1, 1, 1]' : 0.14764}
{'[3, 0, 0, 1, 2, 5, 0, 0, 15, 0, 2, 6, 0, 0, 2, 1, 1, 1]' : 0.147829}
{'[3, 0, 0, 1, 2, 5, 0, 0, 15, 0, 2, 6, 0, 0, 2, 1, 1, 1]' : 0.14985}

out:
 ["{'[3, 0, 0, 1, 2, 5, 0, 0, 15, 0, 2, 6, 0, 0, 2, 1, 1, 1]' : 0.176445}", "{'[3, 0, 0, 1, 2, 5, 0, 0, 15, 0, 2, 6, 0, 0, 2, 1, 1, 1]' : 0.176263}", "{'[3, 0, 0, 1, 2, 5, 0, 0, 15, 0, 2, 6, 0, 0, 2, 1, 1, 1]' : 0.175418}", "{'[3, 0, 0, 1, 2, 5, 0, 0, 15, 0, 2, 6, 0, 0, 2, 1, 1, 1]' : 0.150268}", "{'[3, 0, 0, 1, 2, 5, 0, 0, 15, 0, 2, 6, 0, 0, 2, 1, 1, 1]' : 0.147672}", "{'[3, 0, 0, 1, 2, 5, 0, 0, 15, 0, 2, 6, 0, 0, 2, 1, 1, 1]' : 0.147646}", "{'[3, 0, 0, 1, 2, 5, 0, 0, 15, 0, 2, 6, 0, 0, 2, 1, 1, 1]' : 0.147345}", "{'[3, 0, 0, 1, 2, 5, 0, 0, 15, 0, 2, 6, 0, 0, 2, 1, 1, 1]' : 0.147322}", "{'[3, 0, 0, 1, 2, 5, 0, 0, 15, 0, 2, 6, 0, 0, 2, 1, 1, 1]' : 0.147365}", "{'[3, 0, 0, 1, 2, 5, 0, 0, 15, 0, 2, 6, 0, 0, 2, 1, 1, 1]' : 0.147491}", "{'[3, 0, 0, 1, 2, 5, 0, 0, 15, 0, 2, 6, 0, 0, 2, 1, 1, 1]' : 0.147846}", "{'[3, 0, 0, 1, 2, 5, 0, 0, 15, 0, 2, 6, 0, 0, 2, 1, 1, 1]' : 0.148158}", "{'[3, 0, 0, 1, 2, 5, 0, 0, 15, 0, 2, 6, 0, 0, 2, 1, 1, 1]' : 0.147625}", "{'[3, 0, 0, 1, 2, 5, 0, 0, 15, 0, 2, 6, 0, 0, 2, 1, 1, 1]' : 0.147601}", "{'[3, 0, 0, 1, 2, 5, 0, 0, 15, 0, 2, 6, 0, 0, 2, 1, 1, 1]' : 0.147613}", "{'[3, 0, 0, 1, 2, 5, 0, 0, 15, 0, 2, 6, 0, 0, 2, 1, 1, 1]' : 0.147596}", "{'[3, 0, 0, 1, 2, 5, 0, 0, 15, 0, 2, 6, 0, 0, 2, 1, 1, 1]' : 0.147688}", "{'[3, 0, 0, 1, 2, 5, 0, 0, 15, 0, 2, 6, 0, 0, 2, 1, 1, 1]' : 0.147618}", "{'[3, 0, 0, 1, 2, 5, 0, 0, 15, 0, 2, 6, 0, 0, 2, 1, 1, 1]' : 0.147788}", "{'[3, 0, 0, 1, 2, 5, 0, 0, 15, 0, 2, 6, 0, 0, 2, 1, 1, 1]' : 0.147833}", "{'[3, 0, 0, 1, 2, 5, 0, 0, 15, 0, 2, 6, 0, 0, 2, 1, 1, 1]' : 0.147532}", "{'[3, 0, 0, 1, 2, 5, 0, 0, 15, 0, 2, 6, 0, 0, 2, 1, 1, 1]' : 0.147848}", "{'[3, 0, 0, 1, 2, 5, 0, 0, 15, 0, 2, 6, 0, 0, 2, 1, 1, 1]' : 0.147829}", "{'[3, 0, 0, 1, 2, 5, 0, 0, 15, 0, 2, 6, 0, 0, 2, 1, 1, 1]' : 0.147769}", "{'[3, 0, 0, 1, 2, 5, 0, 0, 15, 0, 2, 6, 0, 0, 2, 1, 1, 1]' : 0.147711}", "{'[3, 0, 0, 1, 2, 5, 0, 0, 15, 0, 2, 6, 0, 0, 2, 1, 1, 1]' : 0.147698}", "{'[3, 0, 0, 1, 2, 5, 0, 0, 15, 0, 2, 6, 0, 0, 2, 1, 1, 1]' : 0.147759}", "{'[3, 0, 0, 1, 2, 5, 0, 0, 15, 0, 2, 6, 0, 0, 2, 1, 1, 1]' : 0.14764}", "{'[3, 0, 0, 1, 2, 5, 0, 0, 15, 0, 2, 6, 0, 0, 2, 1, 1, 1]' : 0.147829}", "{'[3, 0, 0, 1, 2, 5, 0, 0, 15, 0, 2, 6, 0, 0, 2, 1, 1, 1]' : 0.14985}"]
returning from 'run': {'[3, 0, 0, 1, 2, 5, 0, 0, 15, 0, 2, 6, 0, 0, 2, 1, 1, 1]': ([0.176445, 0.176263, 0.175418, 0.150268, 0.147672, 0.147646, 0.147345, 0.147322, 0.147365, 0.147491, 0.147846, 0.148158, 0.147625, 0.147601, 0.147613, 0.147596, 0.147688, 0.147618, 0.147788, 0.147833, 0.147532, 0.147848, 0.147829, 0.147769, 0.147711, 0.147698, 0.147759, 0.14764, 0.147829, 0.14985], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 0, 0, 1, 2, 5, 0, 0, 15, 0, 2, 6, 0, 0, 2, 1, 1, 1]': ([0.176445, 0.176263, 0.175418, 0.150268, 0.147672, 0.147646, 0.147345, 0.147322, 0.147365, 0.147491, 0.147846, 0.148158, 0.147625, 0.147601, 0.147613, 0.147596, 0.147688, 0.147618, 0.147788, 0.147833, 0.147532, 0.147848, 0.147829, 0.147769, 0.147711, 0.147698, 0.147759, 0.14764, 0.147829, 0.14985], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	6
        Additions: 		373
        Multiplications: 	108
        Divisions: 		0
        Logical: 		0
        Reads: 			811
        Writes: 		178
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest59.exe __orio_perftest59.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest59.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest59.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest59.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest59.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	5
        Additions: 		224
        Multiplications: 	80
        Divisions: 		0
        Logical: 		0
        Reads: 			538
        Writes: 		119
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest60.exe __orio_perftest60.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest60.exe  
Program Test Output: 
{'[3, 0, 5, 1, 6, 4, 0, 0, 0, 0, 4, 24, 0, 1, 0, 1, 1, 0]' : 0.208207}
{'[3, 0, 5, 1, 6, 4, 0, 0, 0, 0, 4, 24, 0, 1, 0, 1, 1, 0]' : 0.208024}
{'[3, 0, 5, 1, 6, 4, 0, 0, 0, 0, 4, 24, 0, 1, 0, 1, 1, 0]' : 0.208033}
{'[3, 0, 5, 1, 6, 4, 0, 0, 0, 0, 4, 24, 0, 1, 0, 1, 1, 0]' : 0.191984}
{'[3, 0, 5, 1, 6, 4, 0, 0, 0, 0, 4, 24, 0, 1, 0, 1, 1, 0]' : 0.174211}
{'[3, 0, 5, 1, 6, 4, 0, 0, 0, 0, 4, 24, 0, 1, 0, 1, 1, 0]' : 0.174044}
{'[3, 0, 5, 1, 6, 4, 0, 0, 0, 0, 4, 24, 0, 1, 0, 1, 1, 0]' : 0.17402}
{'[3, 0, 5, 1, 6, 4, 0, 0, 0, 0, 4, 24, 0, 1, 0, 1, 1, 0]' : 0.174519}
{'[3, 0, 5, 1, 6, 4, 0, 0, 0, 0, 4, 24, 0, 1, 0, 1, 1, 0]' : 0.17472}
{'[3, 0, 5, 1, 6, 4, 0, 0, 0, 0, 4, 24, 0, 1, 0, 1, 1, 0]' : 0.174604}
{'[3, 0, 5, 1, 6, 4, 0, 0, 0, 0, 4, 24, 0, 1, 0, 1, 1, 0]' : 0.174105}
{'[3, 0, 5, 1, 6, 4, 0, 0, 0, 0, 4, 24, 0, 1, 0, 1, 1, 0]' : 0.174332}
{'[3, 0, 5, 1, 6, 4, 0, 0, 0, 0, 4, 24, 0, 1, 0, 1, 1, 0]' : 0.174049}
{'[3, 0, 5, 1, 6, 4, 0, 0, 0, 0, 4, 24, 0, 1, 0, 1, 1, 0]' : 0.174297}
{'[3, 0, 5, 1, 6, 4, 0, 0, 0, 0, 4, 24, 0, 1, 0, 1, 1, 0]' : 0.174733}
{'[3, 0, 5, 1, 6, 4, 0, 0, 0, 0, 4, 24, 0, 1, 0, 1, 1, 0]' : 0.174097}
{'[3, 0, 5, 1, 6, 4, 0, 0, 0, 0, 4, 24, 0, 1, 0, 1, 1, 0]' : 0.174245}
{'[3, 0, 5, 1, 6, 4, 0, 0, 0, 0, 4, 24, 0, 1, 0, 1, 1, 0]' : 0.174046}
{'[3, 0, 5, 1, 6, 4, 0, 0, 0, 0, 4, 24, 0, 1, 0, 1, 1, 0]' : 0.17415}
{'[3, 0, 5, 1, 6, 4, 0, 0, 0, 0, 4, 24, 0, 1, 0, 1, 1, 0]' : 0.174209}
{'[3, 0, 5, 1, 6, 4, 0, 0, 0, 0, 4, 24, 0, 1, 0, 1, 1, 0]' : 0.174414}
{'[3, 0, 5, 1, 6, 4, 0, 0, 0, 0, 4, 24, 0, 1, 0, 1, 1, 0]' : 0.174315}
{'[3, 0, 5, 1, 6, 4, 0, 0, 0, 0, 4, 24, 0, 1, 0, 1, 1, 0]' : 0.174133}
{'[3, 0, 5, 1, 6, 4, 0, 0, 0, 0, 4, 24, 0, 1, 0, 1, 1, 0]' : 0.1741}
{'[3, 0, 5, 1, 6, 4, 0, 0, 0, 0, 4, 24, 0, 1, 0, 1, 1, 0]' : 0.174494}
{'[3, 0, 5, 1, 6, 4, 0, 0, 0, 0, 4, 24, 0, 1, 0, 1, 1, 0]' : 0.174106}
{'[3, 0, 5, 1, 6, 4, 0, 0, 0, 0, 4, 24, 0, 1, 0, 1, 1, 0]' : 0.174462}
{'[3, 0, 5, 1, 6, 4, 0, 0, 0, 0, 4, 24, 0, 1, 0, 1, 1, 0]' : 0.174382}
{'[3, 0, 5, 1, 6, 4, 0, 0, 0, 0, 4, 24, 0, 1, 0, 1, 1, 0]' : 0.174161}
{'[3, 0, 5, 1, 6, 4, 0, 0, 0, 0, 4, 24, 0, 1, 0, 1, 1, 0]' : 0.174071}

out:
 ["{'[3, 0, 5, 1, 6, 4, 0, 0, 0, 0, 4, 24, 0, 1, 0, 1, 1, 0]' : 0.208207}", "{'[3, 0, 5, 1, 6, 4, 0, 0, 0, 0, 4, 24, 0, 1, 0, 1, 1, 0]' : 0.208024}", "{'[3, 0, 5, 1, 6, 4, 0, 0, 0, 0, 4, 24, 0, 1, 0, 1, 1, 0]' : 0.208033}", "{'[3, 0, 5, 1, 6, 4, 0, 0, 0, 0, 4, 24, 0, 1, 0, 1, 1, 0]' : 0.191984}", "{'[3, 0, 5, 1, 6, 4, 0, 0, 0, 0, 4, 24, 0, 1, 0, 1, 1, 0]' : 0.174211}", "{'[3, 0, 5, 1, 6, 4, 0, 0, 0, 0, 4, 24, 0, 1, 0, 1, 1, 0]' : 0.174044}", "{'[3, 0, 5, 1, 6, 4, 0, 0, 0, 0, 4, 24, 0, 1, 0, 1, 1, 0]' : 0.17402}", "{'[3, 0, 5, 1, 6, 4, 0, 0, 0, 0, 4, 24, 0, 1, 0, 1, 1, 0]' : 0.174519}", "{'[3, 0, 5, 1, 6, 4, 0, 0, 0, 0, 4, 24, 0, 1, 0, 1, 1, 0]' : 0.17472}", "{'[3, 0, 5, 1, 6, 4, 0, 0, 0, 0, 4, 24, 0, 1, 0, 1, 1, 0]' : 0.174604}", "{'[3, 0, 5, 1, 6, 4, 0, 0, 0, 0, 4, 24, 0, 1, 0, 1, 1, 0]' : 0.174105}", "{'[3, 0, 5, 1, 6, 4, 0, 0, 0, 0, 4, 24, 0, 1, 0, 1, 1, 0]' : 0.174332}", "{'[3, 0, 5, 1, 6, 4, 0, 0, 0, 0, 4, 24, 0, 1, 0, 1, 1, 0]' : 0.174049}", "{'[3, 0, 5, 1, 6, 4, 0, 0, 0, 0, 4, 24, 0, 1, 0, 1, 1, 0]' : 0.174297}", "{'[3, 0, 5, 1, 6, 4, 0, 0, 0, 0, 4, 24, 0, 1, 0, 1, 1, 0]' : 0.174733}", "{'[3, 0, 5, 1, 6, 4, 0, 0, 0, 0, 4, 24, 0, 1, 0, 1, 1, 0]' : 0.174097}", "{'[3, 0, 5, 1, 6, 4, 0, 0, 0, 0, 4, 24, 0, 1, 0, 1, 1, 0]' : 0.174245}", "{'[3, 0, 5, 1, 6, 4, 0, 0, 0, 0, 4, 24, 0, 1, 0, 1, 1, 0]' : 0.174046}", "{'[3, 0, 5, 1, 6, 4, 0, 0, 0, 0, 4, 24, 0, 1, 0, 1, 1, 0]' : 0.17415}", "{'[3, 0, 5, 1, 6, 4, 0, 0, 0, 0, 4, 24, 0, 1, 0, 1, 1, 0]' : 0.174209}", "{'[3, 0, 5, 1, 6, 4, 0, 0, 0, 0, 4, 24, 0, 1, 0, 1, 1, 0]' : 0.174414}", "{'[3, 0, 5, 1, 6, 4, 0, 0, 0, 0, 4, 24, 0, 1, 0, 1, 1, 0]' : 0.174315}", "{'[3, 0, 5, 1, 6, 4, 0, 0, 0, 0, 4, 24, 0, 1, 0, 1, 1, 0]' : 0.174133}", "{'[3, 0, 5, 1, 6, 4, 0, 0, 0, 0, 4, 24, 0, 1, 0, 1, 1, 0]' : 0.1741}", "{'[3, 0, 5, 1, 6, 4, 0, 0, 0, 0, 4, 24, 0, 1, 0, 1, 1, 0]' : 0.174494}", "{'[3, 0, 5, 1, 6, 4, 0, 0, 0, 0, 4, 24, 0, 1, 0, 1, 1, 0]' : 0.174106}", "{'[3, 0, 5, 1, 6, 4, 0, 0, 0, 0, 4, 24, 0, 1, 0, 1, 1, 0]' : 0.174462}", "{'[3, 0, 5, 1, 6, 4, 0, 0, 0, 0, 4, 24, 0, 1, 0, 1, 1, 0]' : 0.174382}", "{'[3, 0, 5, 1, 6, 4, 0, 0, 0, 0, 4, 24, 0, 1, 0, 1, 1, 0]' : 0.174161}", "{'[3, 0, 5, 1, 6, 4, 0, 0, 0, 0, 4, 24, 0, 1, 0, 1, 1, 0]' : 0.174071}"]
returning from 'run': {'[3, 0, 5, 1, 6, 4, 0, 0, 0, 0, 4, 24, 0, 1, 0, 1, 1, 0]': ([0.208207, 0.208024, 0.208033, 0.191984, 0.174211, 0.174044, 0.17402, 0.174519, 0.17472, 0.174604, 0.174105, 0.174332, 0.174049, 0.174297, 0.174733, 0.174097, 0.174245, 0.174046, 0.17415, 0.174209, 0.174414, 0.174315, 0.174133, 0.1741, 0.174494, 0.174106, 0.174462, 0.174382, 0.174161, 0.174071], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 0, 5, 1, 6, 4, 0, 0, 0, 0, 4, 24, 0, 1, 0, 1, 1, 0]': ([0.208207, 0.208024, 0.208033, 0.191984, 0.174211, 0.174044, 0.17402, 0.174519, 0.17472, 0.174604, 0.174105, 0.174332, 0.174049, 0.174297, 0.174733, 0.174097, 0.174245, 0.174046, 0.17415, 0.174209, 0.174414, 0.174315, 0.174133, 0.1741, 0.174494, 0.174106, 0.174462, 0.174382, 0.174161, 0.174071], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	50
        Max loop nest depth: 	5
        Additions: 		2179
        Multiplications: 	980
        Divisions: 		0
        Logical: 		0
        Reads: 			4384
        Writes: 		787
        Comparisons:		50
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest61.exe __orio_perftest61.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest61.exe  
Program Test Output: 
{'[2, 0, 0, 1, 3, 2, 1, 0, 17, 25, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.11835}
{'[2, 0, 0, 1, 3, 2, 1, 0, 17, 25, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.11825}
{'[2, 0, 0, 1, 3, 2, 1, 0, 17, 25, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.118157}
{'[2, 0, 0, 1, 3, 2, 1, 0, 17, 25, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.118103}
{'[2, 0, 0, 1, 3, 2, 1, 0, 17, 25, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.104682}
{'[2, 0, 0, 1, 3, 2, 1, 0, 17, 25, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.101373}
{'[2, 0, 0, 1, 3, 2, 1, 0, 17, 25, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.100969}
{'[2, 0, 0, 1, 3, 2, 1, 0, 17, 25, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.100908}
{'[2, 0, 0, 1, 3, 2, 1, 0, 17, 25, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.100987}
{'[2, 0, 0, 1, 3, 2, 1, 0, 17, 25, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.100927}
{'[2, 0, 0, 1, 3, 2, 1, 0, 17, 25, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.100848}
{'[2, 0, 0, 1, 3, 2, 1, 0, 17, 25, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.101}
{'[2, 0, 0, 1, 3, 2, 1, 0, 17, 25, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.100971}
{'[2, 0, 0, 1, 3, 2, 1, 0, 17, 25, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.101047}
{'[2, 0, 0, 1, 3, 2, 1, 0, 17, 25, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.101154}
{'[2, 0, 0, 1, 3, 2, 1, 0, 17, 25, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.101408}
{'[2, 0, 0, 1, 3, 2, 1, 0, 17, 25, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.100981}
{'[2, 0, 0, 1, 3, 2, 1, 0, 17, 25, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.100935}
{'[2, 0, 0, 1, 3, 2, 1, 0, 17, 25, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.100952}
{'[2, 0, 0, 1, 3, 2, 1, 0, 17, 25, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.101398}
{'[2, 0, 0, 1, 3, 2, 1, 0, 17, 25, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.101066}
{'[2, 0, 0, 1, 3, 2, 1, 0, 17, 25, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.100939}
{'[2, 0, 0, 1, 3, 2, 1, 0, 17, 25, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.100849}
{'[2, 0, 0, 1, 3, 2, 1, 0, 17, 25, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.100982}
{'[2, 0, 0, 1, 3, 2, 1, 0, 17, 25, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.101094}
{'[2, 0, 0, 1, 3, 2, 1, 0, 17, 25, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.101539}
{'[2, 0, 0, 1, 3, 2, 1, 0, 17, 25, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.103711}
{'[2, 0, 0, 1, 3, 2, 1, 0, 17, 25, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.102811}
{'[2, 0, 0, 1, 3, 2, 1, 0, 17, 25, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.101095}
{'[2, 0, 0, 1, 3, 2, 1, 0, 17, 25, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.101066}

out:
 ["{'[2, 0, 0, 1, 3, 2, 1, 0, 17, 25, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.11835}", "{'[2, 0, 0, 1, 3, 2, 1, 0, 17, 25, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.11825}", "{'[2, 0, 0, 1, 3, 2, 1, 0, 17, 25, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.118157}", "{'[2, 0, 0, 1, 3, 2, 1, 0, 17, 25, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.118103}", "{'[2, 0, 0, 1, 3, 2, 1, 0, 17, 25, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.104682}", "{'[2, 0, 0, 1, 3, 2, 1, 0, 17, 25, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.101373}", "{'[2, 0, 0, 1, 3, 2, 1, 0, 17, 25, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.100969}", "{'[2, 0, 0, 1, 3, 2, 1, 0, 17, 25, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.100908}", "{'[2, 0, 0, 1, 3, 2, 1, 0, 17, 25, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.100987}", "{'[2, 0, 0, 1, 3, 2, 1, 0, 17, 25, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.100927}", "{'[2, 0, 0, 1, 3, 2, 1, 0, 17, 25, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.100848}", "{'[2, 0, 0, 1, 3, 2, 1, 0, 17, 25, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.101}", "{'[2, 0, 0, 1, 3, 2, 1, 0, 17, 25, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.100971}", "{'[2, 0, 0, 1, 3, 2, 1, 0, 17, 25, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.101047}", "{'[2, 0, 0, 1, 3, 2, 1, 0, 17, 25, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.101154}", "{'[2, 0, 0, 1, 3, 2, 1, 0, 17, 25, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.101408}", "{'[2, 0, 0, 1, 3, 2, 1, 0, 17, 25, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.100981}", "{'[2, 0, 0, 1, 3, 2, 1, 0, 17, 25, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.100935}", "{'[2, 0, 0, 1, 3, 2, 1, 0, 17, 25, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.100952}", "{'[2, 0, 0, 1, 3, 2, 1, 0, 17, 25, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.101398}", "{'[2, 0, 0, 1, 3, 2, 1, 0, 17, 25, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.101066}", "{'[2, 0, 0, 1, 3, 2, 1, 0, 17, 25, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.100939}", "{'[2, 0, 0, 1, 3, 2, 1, 0, 17, 25, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.100849}", "{'[2, 0, 0, 1, 3, 2, 1, 0, 17, 25, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.100982}", "{'[2, 0, 0, 1, 3, 2, 1, 0, 17, 25, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.101094}", "{'[2, 0, 0, 1, 3, 2, 1, 0, 17, 25, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.101539}", "{'[2, 0, 0, 1, 3, 2, 1, 0, 17, 25, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.103711}", "{'[2, 0, 0, 1, 3, 2, 1, 0, 17, 25, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.102811}", "{'[2, 0, 0, 1, 3, 2, 1, 0, 17, 25, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.101095}", "{'[2, 0, 0, 1, 3, 2, 1, 0, 17, 25, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.101066}"]
returning from 'run': {'[2, 0, 0, 1, 3, 2, 1, 0, 17, 25, 0, 4, 1, 1, 0, 1, 0, 0]': ([0.11835, 0.11825, 0.118157, 0.118103, 0.104682, 0.101373, 0.100969, 0.100908, 0.100987, 0.100927, 0.100848, 0.101, 0.100971, 0.101047, 0.101154, 0.101408, 0.100981, 0.100935, 0.100952, 0.101398, 0.101066, 0.100939, 0.100849, 0.100982, 0.101094, 0.101539, 0.103711, 0.102811, 0.101095, 0.101066], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 0, 1, 3, 2, 1, 0, 17, 25, 0, 4, 1, 1, 0, 1, 0, 0]': ([0.11835, 0.11825, 0.118157, 0.118103, 0.104682, 0.101373, 0.100969, 0.100908, 0.100987, 0.100927, 0.100848, 0.101, 0.100971, 0.101047, 0.101154, 0.101408, 0.100981, 0.100935, 0.100952, 0.101398, 0.101066, 0.100939, 0.100849, 0.100982, 0.101094, 0.101539, 0.103711, 0.102811, 0.101095, 0.101066], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	48
        Max loop nest depth: 	5
        Additions: 		1209
        Multiplications: 	528
        Divisions: 		0
        Logical: 		0
        Reads: 			2680
        Writes: 		518
        Comparisons:		48
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest62.exe __orio_perftest62.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest62.exe  
Program Test Output: 
{'[1, 0, 3, 1, 2, 0, 0, 1, 1, 10, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.209678}
{'[1, 0, 3, 1, 2, 0, 0, 1, 1, 10, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.20847}
{'[1, 0, 3, 1, 2, 0, 0, 1, 1, 10, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.201668}
{'[1, 0, 3, 1, 2, 0, 0, 1, 1, 10, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.178761}
{'[1, 0, 3, 1, 2, 0, 0, 1, 1, 10, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.178267}
{'[1, 0, 3, 1, 2, 0, 0, 1, 1, 10, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.17841}
{'[1, 0, 3, 1, 2, 0, 0, 1, 1, 10, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.178604}
{'[1, 0, 3, 1, 2, 0, 0, 1, 1, 10, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.178422}
{'[1, 0, 3, 1, 2, 0, 0, 1, 1, 10, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.178325}
{'[1, 0, 3, 1, 2, 0, 0, 1, 1, 10, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.178667}
{'[1, 0, 3, 1, 2, 0, 0, 1, 1, 10, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.178269}
{'[1, 0, 3, 1, 2, 0, 0, 1, 1, 10, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.178284}
{'[1, 0, 3, 1, 2, 0, 0, 1, 1, 10, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.178411}
{'[1, 0, 3, 1, 2, 0, 0, 1, 1, 10, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.178498}
{'[1, 0, 3, 1, 2, 0, 0, 1, 1, 10, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.17822}
{'[1, 0, 3, 1, 2, 0, 0, 1, 1, 10, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.178642}
{'[1, 0, 3, 1, 2, 0, 0, 1, 1, 10, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.17826}
{'[1, 0, 3, 1, 2, 0, 0, 1, 1, 10, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.178465}
{'[1, 0, 3, 1, 2, 0, 0, 1, 1, 10, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.178564}
{'[1, 0, 3, 1, 2, 0, 0, 1, 1, 10, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.178321}
{'[1, 0, 3, 1, 2, 0, 0, 1, 1, 10, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.17819}
{'[1, 0, 3, 1, 2, 0, 0, 1, 1, 10, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.178453}
{'[1, 0, 3, 1, 2, 0, 0, 1, 1, 10, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.178524}
{'[1, 0, 3, 1, 2, 0, 0, 1, 1, 10, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.178722}
{'[1, 0, 3, 1, 2, 0, 0, 1, 1, 10, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.178282}
{'[1, 0, 3, 1, 2, 0, 0, 1, 1, 10, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.178556}
{'[1, 0, 3, 1, 2, 0, 0, 1, 1, 10, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.178296}
{'[1, 0, 3, 1, 2, 0, 0, 1, 1, 10, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.178587}
{'[1, 0, 3, 1, 2, 0, 0, 1, 1, 10, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.178637}
{'[1, 0, 3, 1, 2, 0, 0, 1, 1, 10, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.178555}

out:
 ["{'[1, 0, 3, 1, 2, 0, 0, 1, 1, 10, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.209678}", "{'[1, 0, 3, 1, 2, 0, 0, 1, 1, 10, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.20847}", "{'[1, 0, 3, 1, 2, 0, 0, 1, 1, 10, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.201668}", "{'[1, 0, 3, 1, 2, 0, 0, 1, 1, 10, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.178761}", "{'[1, 0, 3, 1, 2, 0, 0, 1, 1, 10, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.178267}", "{'[1, 0, 3, 1, 2, 0, 0, 1, 1, 10, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.17841}", "{'[1, 0, 3, 1, 2, 0, 0, 1, 1, 10, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.178604}", "{'[1, 0, 3, 1, 2, 0, 0, 1, 1, 10, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.178422}", "{'[1, 0, 3, 1, 2, 0, 0, 1, 1, 10, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.178325}", "{'[1, 0, 3, 1, 2, 0, 0, 1, 1, 10, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.178667}", "{'[1, 0, 3, 1, 2, 0, 0, 1, 1, 10, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.178269}", "{'[1, 0, 3, 1, 2, 0, 0, 1, 1, 10, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.178284}", "{'[1, 0, 3, 1, 2, 0, 0, 1, 1, 10, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.178411}", "{'[1, 0, 3, 1, 2, 0, 0, 1, 1, 10, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.178498}", "{'[1, 0, 3, 1, 2, 0, 0, 1, 1, 10, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.17822}", "{'[1, 0, 3, 1, 2, 0, 0, 1, 1, 10, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.178642}", "{'[1, 0, 3, 1, 2, 0, 0, 1, 1, 10, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.17826}", "{'[1, 0, 3, 1, 2, 0, 0, 1, 1, 10, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.178465}", "{'[1, 0, 3, 1, 2, 0, 0, 1, 1, 10, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.178564}", "{'[1, 0, 3, 1, 2, 0, 0, 1, 1, 10, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.178321}", "{'[1, 0, 3, 1, 2, 0, 0, 1, 1, 10, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.17819}", "{'[1, 0, 3, 1, 2, 0, 0, 1, 1, 10, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.178453}", "{'[1, 0, 3, 1, 2, 0, 0, 1, 1, 10, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.178524}", "{'[1, 0, 3, 1, 2, 0, 0, 1, 1, 10, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.178722}", "{'[1, 0, 3, 1, 2, 0, 0, 1, 1, 10, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.178282}", "{'[1, 0, 3, 1, 2, 0, 0, 1, 1, 10, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.178556}", "{'[1, 0, 3, 1, 2, 0, 0, 1, 1, 10, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.178296}", "{'[1, 0, 3, 1, 2, 0, 0, 1, 1, 10, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.178587}", "{'[1, 0, 3, 1, 2, 0, 0, 1, 1, 10, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.178637}", "{'[1, 0, 3, 1, 2, 0, 0, 1, 1, 10, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.178555}"]
returning from 'run': {'[1, 0, 3, 1, 2, 0, 0, 1, 1, 10, 3, 0, 2, 0, 0, 1, 0, 1]': ([0.209678, 0.20847, 0.201668, 0.178761, 0.178267, 0.17841, 0.178604, 0.178422, 0.178325, 0.178667, 0.178269, 0.178284, 0.178411, 0.178498, 0.17822, 0.178642, 0.17826, 0.178465, 0.178564, 0.178321, 0.17819, 0.178453, 0.178524, 0.178722, 0.178282, 0.178556, 0.178296, 0.178587, 0.178637, 0.178555], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 3, 1, 2, 0, 0, 1, 1, 10, 3, 0, 2, 0, 0, 1, 0, 1]': ([0.209678, 0.20847, 0.201668, 0.178761, 0.178267, 0.17841, 0.178604, 0.178422, 0.178325, 0.178667, 0.178269, 0.178284, 0.178411, 0.178498, 0.17822, 0.178642, 0.17826, 0.178465, 0.178564, 0.178321, 0.17819, 0.178453, 0.178524, 0.178722, 0.178282, 0.178556, 0.178296, 0.178587, 0.178637, 0.178555], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
Code stats:
        Number of loops: 	35
        Max loop nest depth: 	4
        Additions: 		3657
        Multiplications: 	1584
        Divisions: 		0
        Logical: 		0
        Reads: 			6979
        Writes: 		1193
        Comparisons:		35
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest63.exe __orio_perftest63.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest63.exe  
Program Test Output: 
{'[3, 0, 6, 1, 6, 0, 0, 1, 27, 2, 0, 19, 2, 0, 0, 1, 1, 0]' : 0.197911}
{'[3, 0, 6, 1, 6, 0, 0, 1, 27, 2, 0, 19, 2, 0, 0, 1, 1, 0]' : 0.197646}
{'[3, 0, 6, 1, 6, 0, 0, 1, 27, 2, 0, 19, 2, 0, 0, 1, 1, 0]' : 0.186182}
{'[3, 0, 6, 1, 6, 0, 0, 1, 27, 2, 0, 19, 2, 0, 0, 1, 1, 0]' : 0.181491}
{'[3, 0, 6, 1, 6, 0, 0, 1, 27, 2, 0, 19, 2, 0, 0, 1, 1, 0]' : 0.181716}
{'[3, 0, 6, 1, 6, 0, 0, 1, 27, 2, 0, 19, 2, 0, 0, 1, 1, 0]' : 0.181431}
{'[3, 0, 6, 1, 6, 0, 0, 1, 27, 2, 0, 19, 2, 0, 0, 1, 1, 0]' : 0.181699}
{'[3, 0, 6, 1, 6, 0, 0, 1, 27, 2, 0, 19, 2, 0, 0, 1, 1, 0]' : 0.180682}
{'[3, 0, 6, 1, 6, 0, 0, 1, 27, 2, 0, 19, 2, 0, 0, 1, 1, 0]' : 0.178238}
{'[3, 0, 6, 1, 6, 0, 0, 1, 27, 2, 0, 19, 2, 0, 0, 1, 1, 0]' : 0.177749}
{'[3, 0, 6, 1, 6, 0, 0, 1, 27, 2, 0, 19, 2, 0, 0, 1, 1, 0]' : 0.178439}
{'[3, 0, 6, 1, 6, 0, 0, 1, 27, 2, 0, 19, 2, 0, 0, 1, 1, 0]' : 0.177242}
{'[3, 0, 6, 1, 6, 0, 0, 1, 27, 2, 0, 19, 2, 0, 0, 1, 1, 0]' : 0.177629}
{'[3, 0, 6, 1, 6, 0, 0, 1, 27, 2, 0, 19, 2, 0, 0, 1, 1, 0]' : 0.17826}
{'[3, 0, 6, 1, 6, 0, 0, 1, 27, 2, 0, 19, 2, 0, 0, 1, 1, 0]' : 0.177878}
{'[3, 0, 6, 1, 6, 0, 0, 1, 27, 2, 0, 19, 2, 0, 0, 1, 1, 0]' : 0.177437}
{'[3, 0, 6, 1, 6, 0, 0, 1, 27, 2, 0, 19, 2, 0, 0, 1, 1, 0]' : 0.175904}
{'[3, 0, 6, 1, 6, 0, 0, 1, 27, 2, 0, 19, 2, 0, 0, 1, 1, 0]' : 0.178033}
{'[3, 0, 6, 1, 6, 0, 0, 1, 27, 2, 0, 19, 2, 0, 0, 1, 1, 0]' : 0.177324}
{'[3, 0, 6, 1, 6, 0, 0, 1, 27, 2, 0, 19, 2, 0, 0, 1, 1, 0]' : 0.177628}
{'[3, 0, 6, 1, 6, 0, 0, 1, 27, 2, 0, 19, 2, 0, 0, 1, 1, 0]' : 0.177187}
{'[3, 0, 6, 1, 6, 0, 0, 1, 27, 2, 0, 19, 2, 0, 0, 1, 1, 0]' : 0.177637}
{'[3, 0, 6, 1, 6, 0, 0, 1, 27, 2, 0, 19, 2, 0, 0, 1, 1, 0]' : 0.177153}
{'[3, 0, 6, 1, 6, 0, 0, 1, 27, 2, 0, 19, 2, 0, 0, 1, 1, 0]' : 0.176703}
{'[3, 0, 6, 1, 6, 0, 0, 1, 27, 2, 0, 19, 2, 0, 0, 1, 1, 0]' : 0.177941}
{'[3, 0, 6, 1, 6, 0, 0, 1, 27, 2, 0, 19, 2, 0, 0, 1, 1, 0]' : 0.17719}
{'[3, 0, 6, 1, 6, 0, 0, 1, 27, 2, 0, 19, 2, 0, 0, 1, 1, 0]' : 0.177927}
{'[3, 0, 6, 1, 6, 0, 0, 1, 27, 2, 0, 19, 2, 0, 0, 1, 1, 0]' : 0.17884}
{'[3, 0, 6, 1, 6, 0, 0, 1, 27, 2, 0, 19, 2, 0, 0, 1, 1, 0]' : 0.182564}
{'[3, 0, 6, 1, 6, 0, 0, 1, 27, 2, 0, 19, 2, 0, 0, 1, 1, 0]' : 0.180987}

out:
 ["{'[3, 0, 6, 1, 6, 0, 0, 1, 27, 2, 0, 19, 2, 0, 0, 1, 1, 0]' : 0.197911}", "{'[3, 0, 6, 1, 6, 0, 0, 1, 27, 2, 0, 19, 2, 0, 0, 1, 1, 0]' : 0.197646}", "{'[3, 0, 6, 1, 6, 0, 0, 1, 27, 2, 0, 19, 2, 0, 0, 1, 1, 0]' : 0.186182}", "{'[3, 0, 6, 1, 6, 0, 0, 1, 27, 2, 0, 19, 2, 0, 0, 1, 1, 0]' : 0.181491}", "{'[3, 0, 6, 1, 6, 0, 0, 1, 27, 2, 0, 19, 2, 0, 0, 1, 1, 0]' : 0.181716}", "{'[3, 0, 6, 1, 6, 0, 0, 1, 27, 2, 0, 19, 2, 0, 0, 1, 1, 0]' : 0.181431}", "{'[3, 0, 6, 1, 6, 0, 0, 1, 27, 2, 0, 19, 2, 0, 0, 1, 1, 0]' : 0.181699}", "{'[3, 0, 6, 1, 6, 0, 0, 1, 27, 2, 0, 19, 2, 0, 0, 1, 1, 0]' : 0.180682}", "{'[3, 0, 6, 1, 6, 0, 0, 1, 27, 2, 0, 19, 2, 0, 0, 1, 1, 0]' : 0.178238}", "{'[3, 0, 6, 1, 6, 0, 0, 1, 27, 2, 0, 19, 2, 0, 0, 1, 1, 0]' : 0.177749}", "{'[3, 0, 6, 1, 6, 0, 0, 1, 27, 2, 0, 19, 2, 0, 0, 1, 1, 0]' : 0.178439}", "{'[3, 0, 6, 1, 6, 0, 0, 1, 27, 2, 0, 19, 2, 0, 0, 1, 1, 0]' : 0.177242}", "{'[3, 0, 6, 1, 6, 0, 0, 1, 27, 2, 0, 19, 2, 0, 0, 1, 1, 0]' : 0.177629}", "{'[3, 0, 6, 1, 6, 0, 0, 1, 27, 2, 0, 19, 2, 0, 0, 1, 1, 0]' : 0.17826}", "{'[3, 0, 6, 1, 6, 0, 0, 1, 27, 2, 0, 19, 2, 0, 0, 1, 1, 0]' : 0.177878}", "{'[3, 0, 6, 1, 6, 0, 0, 1, 27, 2, 0, 19, 2, 0, 0, 1, 1, 0]' : 0.177437}", "{'[3, 0, 6, 1, 6, 0, 0, 1, 27, 2, 0, 19, 2, 0, 0, 1, 1, 0]' : 0.175904}", "{'[3, 0, 6, 1, 6, 0, 0, 1, 27, 2, 0, 19, 2, 0, 0, 1, 1, 0]' : 0.178033}", "{'[3, 0, 6, 1, 6, 0, 0, 1, 27, 2, 0, 19, 2, 0, 0, 1, 1, 0]' : 0.177324}", "{'[3, 0, 6, 1, 6, 0, 0, 1, 27, 2, 0, 19, 2, 0, 0, 1, 1, 0]' : 0.177628}", "{'[3, 0, 6, 1, 6, 0, 0, 1, 27, 2, 0, 19, 2, 0, 0, 1, 1, 0]' : 0.177187}", "{'[3, 0, 6, 1, 6, 0, 0, 1, 27, 2, 0, 19, 2, 0, 0, 1, 1, 0]' : 0.177637}", "{'[3, 0, 6, 1, 6, 0, 0, 1, 27, 2, 0, 19, 2, 0, 0, 1, 1, 0]' : 0.177153}", "{'[3, 0, 6, 1, 6, 0, 0, 1, 27, 2, 0, 19, 2, 0, 0, 1, 1, 0]' : 0.176703}", "{'[3, 0, 6, 1, 6, 0, 0, 1, 27, 2, 0, 19, 2, 0, 0, 1, 1, 0]' : 0.177941}", "{'[3, 0, 6, 1, 6, 0, 0, 1, 27, 2, 0, 19, 2, 0, 0, 1, 1, 0]' : 0.17719}", "{'[3, 0, 6, 1, 6, 0, 0, 1, 27, 2, 0, 19, 2, 0, 0, 1, 1, 0]' : 0.177927}", "{'[3, 0, 6, 1, 6, 0, 0, 1, 27, 2, 0, 19, 2, 0, 0, 1, 1, 0]' : 0.17884}", "{'[3, 0, 6, 1, 6, 0, 0, 1, 27, 2, 0, 19, 2, 0, 0, 1, 1, 0]' : 0.182564}", "{'[3, 0, 6, 1, 6, 0, 0, 1, 27, 2, 0, 19, 2, 0, 0, 1, 1, 0]' : 0.180987}"]
returning from 'run': {'[3, 0, 6, 1, 6, 0, 0, 1, 27, 2, 0, 19, 2, 0, 0, 1, 1, 0]': ([0.197911, 0.197646, 0.186182, 0.181491, 0.181716, 0.181431, 0.181699, 0.180682, 0.178238, 0.177749, 0.178439, 0.177242, 0.177629, 0.17826, 0.177878, 0.177437, 0.175904, 0.178033, 0.177324, 0.177628, 0.177187, 0.177637, 0.177153, 0.176703, 0.177941, 0.17719, 0.177927, 0.17884, 0.182564, 0.180987], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 0, 6, 1, 6, 0, 0, 1, 27, 2, 0, 19, 2, 0, 0, 1, 1, 0]': ([0.197911, 0.197646, 0.186182, 0.181491, 0.181716, 0.181431, 0.181699, 0.180682, 0.178238, 0.177749, 0.178439, 0.177242, 0.177629, 0.17826, 0.177878, 0.177437, 0.175904, 0.178033, 0.177324, 0.177628, 0.177187, 0.177637, 0.177153, 0.176703, 0.177941, 0.17719, 0.177927, 0.17884, 0.182564, 0.180987], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	43
        Max loop nest depth: 	5
        Additions: 		2147
        Multiplications: 	972
        Divisions: 		0
        Logical: 		0
        Reads: 			4315
        Writes: 		788
        Comparisons:		43
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest64.exe __orio_perftest64.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest64.exe  
Program Test Output: 
{'[2, 0, 6, 1, 1, 0, 1, 0, 26, 25, 0, 15, 0, 0, 0, 1, 1, 1]' : 0.179046}
{'[2, 0, 6, 1, 1, 0, 1, 0, 26, 25, 0, 15, 0, 0, 0, 1, 1, 1]' : 0.17891}
{'[2, 0, 6, 1, 1, 0, 1, 0, 26, 25, 0, 15, 0, 0, 0, 1, 1, 1]' : 0.179439}
{'[2, 0, 6, 1, 1, 0, 1, 0, 26, 25, 0, 15, 0, 0, 0, 1, 1, 1]' : 0.158641}
{'[2, 0, 6, 1, 1, 0, 1, 0, 26, 25, 0, 15, 0, 0, 0, 1, 1, 1]' : 0.154427}
{'[2, 0, 6, 1, 1, 0, 1, 0, 26, 25, 0, 15, 0, 0, 0, 1, 1, 1]' : 0.154839}
{'[2, 0, 6, 1, 1, 0, 1, 0, 26, 25, 0, 15, 0, 0, 0, 1, 1, 1]' : 0.154329}
{'[2, 0, 6, 1, 1, 0, 1, 0, 26, 25, 0, 15, 0, 0, 0, 1, 1, 1]' : 0.15471}
{'[2, 0, 6, 1, 1, 0, 1, 0, 26, 25, 0, 15, 0, 0, 0, 1, 1, 1]' : 0.154746}
{'[2, 0, 6, 1, 1, 0, 1, 0, 26, 25, 0, 15, 0, 0, 0, 1, 1, 1]' : 0.154616}
{'[2, 0, 6, 1, 1, 0, 1, 0, 26, 25, 0, 15, 0, 0, 0, 1, 1, 1]' : 0.15496}
{'[2, 0, 6, 1, 1, 0, 1, 0, 26, 25, 0, 15, 0, 0, 0, 1, 1, 1]' : 0.155435}
{'[2, 0, 6, 1, 1, 0, 1, 0, 26, 25, 0, 15, 0, 0, 0, 1, 1, 1]' : 0.154744}
{'[2, 0, 6, 1, 1, 0, 1, 0, 26, 25, 0, 15, 0, 0, 0, 1, 1, 1]' : 0.154666}
{'[2, 0, 6, 1, 1, 0, 1, 0, 26, 25, 0, 15, 0, 0, 0, 1, 1, 1]' : 0.158845}
{'[2, 0, 6, 1, 1, 0, 1, 0, 26, 25, 0, 15, 0, 0, 0, 1, 1, 1]' : 0.158657}
{'[2, 0, 6, 1, 1, 0, 1, 0, 26, 25, 0, 15, 0, 0, 0, 1, 1, 1]' : 0.158822}
{'[2, 0, 6, 1, 1, 0, 1, 0, 26, 25, 0, 15, 0, 0, 0, 1, 1, 1]' : 0.15908}
{'[2, 0, 6, 1, 1, 0, 1, 0, 26, 25, 0, 15, 0, 0, 0, 1, 1, 1]' : 0.158898}
{'[2, 0, 6, 1, 1, 0, 1, 0, 26, 25, 0, 15, 0, 0, 0, 1, 1, 1]' : 0.158845}
{'[2, 0, 6, 1, 1, 0, 1, 0, 26, 25, 0, 15, 0, 0, 0, 1, 1, 1]' : 0.15899}
{'[2, 0, 6, 1, 1, 0, 1, 0, 26, 25, 0, 15, 0, 0, 0, 1, 1, 1]' : 0.15875}
{'[2, 0, 6, 1, 1, 0, 1, 0, 26, 25, 0, 15, 0, 0, 0, 1, 1, 1]' : 0.158666}
{'[2, 0, 6, 1, 1, 0, 1, 0, 26, 25, 0, 15, 0, 0, 0, 1, 1, 1]' : 0.158918}
{'[2, 0, 6, 1, 1, 0, 1, 0, 26, 25, 0, 15, 0, 0, 0, 1, 1, 1]' : 0.158898}
{'[2, 0, 6, 1, 1, 0, 1, 0, 26, 25, 0, 15, 0, 0, 0, 1, 1, 1]' : 0.158705}
{'[2, 0, 6, 1, 1, 0, 1, 0, 26, 25, 0, 15, 0, 0, 0, 1, 1, 1]' : 0.158362}
{'[2, 0, 6, 1, 1, 0, 1, 0, 26, 25, 0, 15, 0, 0, 0, 1, 1, 1]' : 0.158212}
{'[2, 0, 6, 1, 1, 0, 1, 0, 26, 25, 0, 15, 0, 0, 0, 1, 1, 1]' : 0.158144}
{'[2, 0, 6, 1, 1, 0, 1, 0, 26, 25, 0, 15, 0, 0, 0, 1, 1, 1]' : 0.158076}

out:
 ["{'[2, 0, 6, 1, 1, 0, 1, 0, 26, 25, 0, 15, 0, 0, 0, 1, 1, 1]' : 0.179046}", "{'[2, 0, 6, 1, 1, 0, 1, 0, 26, 25, 0, 15, 0, 0, 0, 1, 1, 1]' : 0.17891}", "{'[2, 0, 6, 1, 1, 0, 1, 0, 26, 25, 0, 15, 0, 0, 0, 1, 1, 1]' : 0.179439}", "{'[2, 0, 6, 1, 1, 0, 1, 0, 26, 25, 0, 15, 0, 0, 0, 1, 1, 1]' : 0.158641}", "{'[2, 0, 6, 1, 1, 0, 1, 0, 26, 25, 0, 15, 0, 0, 0, 1, 1, 1]' : 0.154427}", "{'[2, 0, 6, 1, 1, 0, 1, 0, 26, 25, 0, 15, 0, 0, 0, 1, 1, 1]' : 0.154839}", "{'[2, 0, 6, 1, 1, 0, 1, 0, 26, 25, 0, 15, 0, 0, 0, 1, 1, 1]' : 0.154329}", "{'[2, 0, 6, 1, 1, 0, 1, 0, 26, 25, 0, 15, 0, 0, 0, 1, 1, 1]' : 0.15471}", "{'[2, 0, 6, 1, 1, 0, 1, 0, 26, 25, 0, 15, 0, 0, 0, 1, 1, 1]' : 0.154746}", "{'[2, 0, 6, 1, 1, 0, 1, 0, 26, 25, 0, 15, 0, 0, 0, 1, 1, 1]' : 0.154616}", "{'[2, 0, 6, 1, 1, 0, 1, 0, 26, 25, 0, 15, 0, 0, 0, 1, 1, 1]' : 0.15496}", "{'[2, 0, 6, 1, 1, 0, 1, 0, 26, 25, 0, 15, 0, 0, 0, 1, 1, 1]' : 0.155435}", "{'[2, 0, 6, 1, 1, 0, 1, 0, 26, 25, 0, 15, 0, 0, 0, 1, 1, 1]' : 0.154744}", "{'[2, 0, 6, 1, 1, 0, 1, 0, 26, 25, 0, 15, 0, 0, 0, 1, 1, 1]' : 0.154666}", "{'[2, 0, 6, 1, 1, 0, 1, 0, 26, 25, 0, 15, 0, 0, 0, 1, 1, 1]' : 0.158845}", "{'[2, 0, 6, 1, 1, 0, 1, 0, 26, 25, 0, 15, 0, 0, 0, 1, 1, 1]' : 0.158657}", "{'[2, 0, 6, 1, 1, 0, 1, 0, 26, 25, 0, 15, 0, 0, 0, 1, 1, 1]' : 0.158822}", "{'[2, 0, 6, 1, 1, 0, 1, 0, 26, 25, 0, 15, 0, 0, 0, 1, 1, 1]' : 0.15908}", "{'[2, 0, 6, 1, 1, 0, 1, 0, 26, 25, 0, 15, 0, 0, 0, 1, 1, 1]' : 0.158898}", "{'[2, 0, 6, 1, 1, 0, 1, 0, 26, 25, 0, 15, 0, 0, 0, 1, 1, 1]' : 0.158845}", "{'[2, 0, 6, 1, 1, 0, 1, 0, 26, 25, 0, 15, 0, 0, 0, 1, 1, 1]' : 0.15899}", "{'[2, 0, 6, 1, 1, 0, 1, 0, 26, 25, 0, 15, 0, 0, 0, 1, 1, 1]' : 0.15875}", "{'[2, 0, 6, 1, 1, 0, 1, 0, 26, 25, 0, 15, 0, 0, 0, 1, 1, 1]' : 0.158666}", "{'[2, 0, 6, 1, 1, 0, 1, 0, 26, 25, 0, 15, 0, 0, 0, 1, 1, 1]' : 0.158918}", "{'[2, 0, 6, 1, 1, 0, 1, 0, 26, 25, 0, 15, 0, 0, 0, 1, 1, 1]' : 0.158898}", "{'[2, 0, 6, 1, 1, 0, 1, 0, 26, 25, 0, 15, 0, 0, 0, 1, 1, 1]' : 0.158705}", "{'[2, 0, 6, 1, 1, 0, 1, 0, 26, 25, 0, 15, 0, 0, 0, 1, 1, 1]' : 0.158362}", "{'[2, 0, 6, 1, 1, 0, 1, 0, 26, 25, 0, 15, 0, 0, 0, 1, 1, 1]' : 0.158212}", "{'[2, 0, 6, 1, 1, 0, 1, 0, 26, 25, 0, 15, 0, 0, 0, 1, 1, 1]' : 0.158144}", "{'[2, 0, 6, 1, 1, 0, 1, 0, 26, 25, 0, 15, 0, 0, 0, 1, 1, 1]' : 0.158076}"]
returning from 'run': {'[2, 0, 6, 1, 1, 0, 1, 0, 26, 25, 0, 15, 0, 0, 0, 1, 1, 1]': ([0.179046, 0.17891, 0.179439, 0.158641, 0.154427, 0.154839, 0.154329, 0.15471, 0.154746, 0.154616, 0.15496, 0.155435, 0.154744, 0.154666, 0.158845, 0.158657, 0.158822, 0.15908, 0.158898, 0.158845, 0.15899, 0.15875, 0.158666, 0.158918, 0.158898, 0.158705, 0.158362, 0.158212, 0.158144, 0.158076], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 6, 1, 1, 0, 1, 0, 26, 25, 0, 15, 0, 0, 0, 1, 1, 1]': ([0.179046, 0.17891, 0.179439, 0.158641, 0.154427, 0.154839, 0.154329, 0.15471, 0.154746, 0.154616, 0.15496, 0.155435, 0.154744, 0.154666, 0.158845, 0.158657, 0.158822, 0.15908, 0.158898, 0.158845, 0.15899, 0.15875, 0.158666, 0.158918, 0.158898, 0.158705, 0.158362, 0.158212, 0.158144, 0.158076], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
Code stats:
        Number of loops: 	129
        Max loop nest depth: 	5
        Additions: 		7864
        Multiplications: 	1856
        Divisions: 		0
        Logical: 		0
        Reads: 			15256
        Writes: 		3160
        Comparisons:		129
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest65.exe __orio_perftest65.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest65.exe  
Program Test Output: 
{'[3, 0, 5, 1, 4, 6, 0, 1, 28, 27, 0, 29, 0, 0, 0, 1, 0, 0]' : 0.162237}
{'[3, 0, 5, 1, 4, 6, 0, 1, 28, 27, 0, 29, 0, 0, 0, 1, 0, 0]' : 0.162226}
{'[3, 0, 5, 1, 4, 6, 0, 1, 28, 27, 0, 29, 0, 0, 0, 1, 0, 0]' : 0.162216}
{'[3, 0, 5, 1, 4, 6, 0, 1, 28, 27, 0, 29, 0, 0, 0, 1, 0, 0]' : 0.162406}
{'[3, 0, 5, 1, 4, 6, 0, 1, 28, 27, 0, 29, 0, 0, 0, 1, 0, 0]' : 0.162119}
{'[3, 0, 5, 1, 4, 6, 0, 1, 28, 27, 0, 29, 0, 0, 0, 1, 0, 0]' : 0.162228}
{'[3, 0, 5, 1, 4, 6, 0, 1, 28, 27, 0, 29, 0, 0, 0, 1, 0, 0]' : 0.162051}
{'[3, 0, 5, 1, 4, 6, 0, 1, 28, 27, 0, 29, 0, 0, 0, 1, 0, 0]' : 0.162213}
{'[3, 0, 5, 1, 4, 6, 0, 1, 28, 27, 0, 29, 0, 0, 0, 1, 0, 0]' : 0.162185}
{'[3, 0, 5, 1, 4, 6, 0, 1, 28, 27, 0, 29, 0, 0, 0, 1, 0, 0]' : 0.162254}
{'[3, 0, 5, 1, 4, 6, 0, 1, 28, 27, 0, 29, 0, 0, 0, 1, 0, 0]' : 0.16291}
{'[3, 0, 5, 1, 4, 6, 0, 1, 28, 27, 0, 29, 0, 0, 0, 1, 0, 0]' : 0.162292}
{'[3, 0, 5, 1, 4, 6, 0, 1, 28, 27, 0, 29, 0, 0, 0, 1, 0, 0]' : 0.162188}
{'[3, 0, 5, 1, 4, 6, 0, 1, 28, 27, 0, 29, 0, 0, 0, 1, 0, 0]' : 0.16207}
{'[3, 0, 5, 1, 4, 6, 0, 1, 28, 27, 0, 29, 0, 0, 0, 1, 0, 0]' : 0.16199}
{'[3, 0, 5, 1, 4, 6, 0, 1, 28, 27, 0, 29, 0, 0, 0, 1, 0, 0]' : 0.162093}
{'[3, 0, 5, 1, 4, 6, 0, 1, 28, 27, 0, 29, 0, 0, 0, 1, 0, 0]' : 0.162489}
{'[3, 0, 5, 1, 4, 6, 0, 1, 28, 27, 0, 29, 0, 0, 0, 1, 0, 0]' : 0.162243}
{'[3, 0, 5, 1, 4, 6, 0, 1, 28, 27, 0, 29, 0, 0, 0, 1, 0, 0]' : 0.162184}
{'[3, 0, 5, 1, 4, 6, 0, 1, 28, 27, 0, 29, 0, 0, 0, 1, 0, 0]' : 0.162014}
{'[3, 0, 5, 1, 4, 6, 0, 1, 28, 27, 0, 29, 0, 0, 0, 1, 0, 0]' : 0.162181}
{'[3, 0, 5, 1, 4, 6, 0, 1, 28, 27, 0, 29, 0, 0, 0, 1, 0, 0]' : 0.163002}
{'[3, 0, 5, 1, 4, 6, 0, 1, 28, 27, 0, 29, 0, 0, 0, 1, 0, 0]' : 0.162236}
{'[3, 0, 5, 1, 4, 6, 0, 1, 28, 27, 0, 29, 0, 0, 0, 1, 0, 0]' : 0.162489}
{'[3, 0, 5, 1, 4, 6, 0, 1, 28, 27, 0, 29, 0, 0, 0, 1, 0, 0]' : 0.161982}
{'[3, 0, 5, 1, 4, 6, 0, 1, 28, 27, 0, 29, 0, 0, 0, 1, 0, 0]' : 0.162153}
{'[3, 0, 5, 1, 4, 6, 0, 1, 28, 27, 0, 29, 0, 0, 0, 1, 0, 0]' : 0.162075}
{'[3, 0, 5, 1, 4, 6, 0, 1, 28, 27, 0, 29, 0, 0, 0, 1, 0, 0]' : 0.161945}
{'[3, 0, 5, 1, 4, 6, 0, 1, 28, 27, 0, 29, 0, 0, 0, 1, 0, 0]' : 0.162129}
{'[3, 0, 5, 1, 4, 6, 0, 1, 28, 27, 0, 29, 0, 0, 0, 1, 0, 0]' : 0.162178}

out:
 ["{'[3, 0, 5, 1, 4, 6, 0, 1, 28, 27, 0, 29, 0, 0, 0, 1, 0, 0]' : 0.162237}", "{'[3, 0, 5, 1, 4, 6, 0, 1, 28, 27, 0, 29, 0, 0, 0, 1, 0, 0]' : 0.162226}", "{'[3, 0, 5, 1, 4, 6, 0, 1, 28, 27, 0, 29, 0, 0, 0, 1, 0, 0]' : 0.162216}", "{'[3, 0, 5, 1, 4, 6, 0, 1, 28, 27, 0, 29, 0, 0, 0, 1, 0, 0]' : 0.162406}", "{'[3, 0, 5, 1, 4, 6, 0, 1, 28, 27, 0, 29, 0, 0, 0, 1, 0, 0]' : 0.162119}", "{'[3, 0, 5, 1, 4, 6, 0, 1, 28, 27, 0, 29, 0, 0, 0, 1, 0, 0]' : 0.162228}", "{'[3, 0, 5, 1, 4, 6, 0, 1, 28, 27, 0, 29, 0, 0, 0, 1, 0, 0]' : 0.162051}", "{'[3, 0, 5, 1, 4, 6, 0, 1, 28, 27, 0, 29, 0, 0, 0, 1, 0, 0]' : 0.162213}", "{'[3, 0, 5, 1, 4, 6, 0, 1, 28, 27, 0, 29, 0, 0, 0, 1, 0, 0]' : 0.162185}", "{'[3, 0, 5, 1, 4, 6, 0, 1, 28, 27, 0, 29, 0, 0, 0, 1, 0, 0]' : 0.162254}", "{'[3, 0, 5, 1, 4, 6, 0, 1, 28, 27, 0, 29, 0, 0, 0, 1, 0, 0]' : 0.16291}", "{'[3, 0, 5, 1, 4, 6, 0, 1, 28, 27, 0, 29, 0, 0, 0, 1, 0, 0]' : 0.162292}", "{'[3, 0, 5, 1, 4, 6, 0, 1, 28, 27, 0, 29, 0, 0, 0, 1, 0, 0]' : 0.162188}", "{'[3, 0, 5, 1, 4, 6, 0, 1, 28, 27, 0, 29, 0, 0, 0, 1, 0, 0]' : 0.16207}", "{'[3, 0, 5, 1, 4, 6, 0, 1, 28, 27, 0, 29, 0, 0, 0, 1, 0, 0]' : 0.16199}", "{'[3, 0, 5, 1, 4, 6, 0, 1, 28, 27, 0, 29, 0, 0, 0, 1, 0, 0]' : 0.162093}", "{'[3, 0, 5, 1, 4, 6, 0, 1, 28, 27, 0, 29, 0, 0, 0, 1, 0, 0]' : 0.162489}", "{'[3, 0, 5, 1, 4, 6, 0, 1, 28, 27, 0, 29, 0, 0, 0, 1, 0, 0]' : 0.162243}", "{'[3, 0, 5, 1, 4, 6, 0, 1, 28, 27, 0, 29, 0, 0, 0, 1, 0, 0]' : 0.162184}", "{'[3, 0, 5, 1, 4, 6, 0, 1, 28, 27, 0, 29, 0, 0, 0, 1, 0, 0]' : 0.162014}", "{'[3, 0, 5, 1, 4, 6, 0, 1, 28, 27, 0, 29, 0, 0, 0, 1, 0, 0]' : 0.162181}", "{'[3, 0, 5, 1, 4, 6, 0, 1, 28, 27, 0, 29, 0, 0, 0, 1, 0, 0]' : 0.163002}", "{'[3, 0, 5, 1, 4, 6, 0, 1, 28, 27, 0, 29, 0, 0, 0, 1, 0, 0]' : 0.162236}", "{'[3, 0, 5, 1, 4, 6, 0, 1, 28, 27, 0, 29, 0, 0, 0, 1, 0, 0]' : 0.162489}", "{'[3, 0, 5, 1, 4, 6, 0, 1, 28, 27, 0, 29, 0, 0, 0, 1, 0, 0]' : 0.161982}", "{'[3, 0, 5, 1, 4, 6, 0, 1, 28, 27, 0, 29, 0, 0, 0, 1, 0, 0]' : 0.162153}", "{'[3, 0, 5, 1, 4, 6, 0, 1, 28, 27, 0, 29, 0, 0, 0, 1, 0, 0]' : 0.162075}", "{'[3, 0, 5, 1, 4, 6, 0, 1, 28, 27, 0, 29, 0, 0, 0, 1, 0, 0]' : 0.161945}", "{'[3, 0, 5, 1, 4, 6, 0, 1, 28, 27, 0, 29, 0, 0, 0, 1, 0, 0]' : 0.162129}", "{'[3, 0, 5, 1, 4, 6, 0, 1, 28, 27, 0, 29, 0, 0, 0, 1, 0, 0]' : 0.162178}"]
returning from 'run': {'[3, 0, 5, 1, 4, 6, 0, 1, 28, 27, 0, 29, 0, 0, 0, 1, 0, 0]': ([0.162237, 0.162226, 0.162216, 0.162406, 0.162119, 0.162228, 0.162051, 0.162213, 0.162185, 0.162254, 0.16291, 0.162292, 0.162188, 0.16207, 0.16199, 0.162093, 0.162489, 0.162243, 0.162184, 0.162014, 0.162181, 0.163002, 0.162236, 0.162489, 0.161982, 0.162153, 0.162075, 0.161945, 0.162129, 0.162178], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 0, 5, 1, 4, 6, 0, 1, 28, 27, 0, 29, 0, 0, 0, 1, 0, 0]': ([0.162237, 0.162226, 0.162216, 0.162406, 0.162119, 0.162228, 0.162051, 0.162213, 0.162185, 0.162254, 0.16291, 0.162292, 0.162188, 0.16207, 0.16199, 0.162093, 0.162489, 0.162243, 0.162184, 0.162014, 0.162181, 0.163002, 0.162236, 0.162489, 0.161982, 0.162153, 0.162075, 0.161945, 0.162129, 0.162178], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	28
        Max loop nest depth: 	6
        Additions: 		2638
        Multiplications: 	1276
        Divisions: 		0
        Logical: 		0
        Reads: 			5179
        Writes: 		882
        Comparisons:		28
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest66.exe __orio_perftest66.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest66.exe  
Program Test Output: 
{'[1, 0, 1, 1, 2, 1, 0, 0, 7, 19, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.114723}
{'[1, 0, 1, 1, 2, 1, 0, 0, 7, 19, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.114679}
{'[1, 0, 1, 1, 2, 1, 0, 0, 7, 19, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.114655}
{'[1, 0, 1, 1, 2, 1, 0, 0, 7, 19, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.114574}
{'[1, 0, 1, 1, 2, 1, 0, 0, 7, 19, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.104547}
{'[1, 0, 1, 1, 2, 1, 0, 0, 7, 19, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0981581}
{'[1, 0, 1, 1, 2, 1, 0, 0, 7, 19, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0980821}
{'[1, 0, 1, 1, 2, 1, 0, 0, 7, 19, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0982509}
{'[1, 0, 1, 1, 2, 1, 0, 0, 7, 19, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0981588}
{'[1, 0, 1, 1, 2, 1, 0, 0, 7, 19, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.098295}
{'[1, 0, 1, 1, 2, 1, 0, 0, 7, 19, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0985291}
{'[1, 0, 1, 1, 2, 1, 0, 0, 7, 19, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0985429}
{'[1, 0, 1, 1, 2, 1, 0, 0, 7, 19, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0986259}
{'[1, 0, 1, 1, 2, 1, 0, 0, 7, 19, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.098331}
{'[1, 0, 1, 1, 2, 1, 0, 0, 7, 19, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0983381}
{'[1, 0, 1, 1, 2, 1, 0, 0, 7, 19, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.098182}
{'[1, 0, 1, 1, 2, 1, 0, 0, 7, 19, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0982571}
{'[1, 0, 1, 1, 2, 1, 0, 0, 7, 19, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0982699}
{'[1, 0, 1, 1, 2, 1, 0, 0, 7, 19, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0982828}
{'[1, 0, 1, 1, 2, 1, 0, 0, 7, 19, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0982561}
{'[1, 0, 1, 1, 2, 1, 0, 0, 7, 19, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0983331}
{'[1, 0, 1, 1, 2, 1, 0, 0, 7, 19, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0984149}
{'[1, 0, 1, 1, 2, 1, 0, 0, 7, 19, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.098583}
{'[1, 0, 1, 1, 2, 1, 0, 0, 7, 19, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0983598}
{'[1, 0, 1, 1, 2, 1, 0, 0, 7, 19, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0981839}
{'[1, 0, 1, 1, 2, 1, 0, 0, 7, 19, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0982132}
{'[1, 0, 1, 1, 2, 1, 0, 0, 7, 19, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.098244}
{'[1, 0, 1, 1, 2, 1, 0, 0, 7, 19, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.09832}
{'[1, 0, 1, 1, 2, 1, 0, 0, 7, 19, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.098469}
{'[1, 0, 1, 1, 2, 1, 0, 0, 7, 19, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0983281}

out:
 ["{'[1, 0, 1, 1, 2, 1, 0, 0, 7, 19, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.114723}", "{'[1, 0, 1, 1, 2, 1, 0, 0, 7, 19, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.114679}", "{'[1, 0, 1, 1, 2, 1, 0, 0, 7, 19, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.114655}", "{'[1, 0, 1, 1, 2, 1, 0, 0, 7, 19, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.114574}", "{'[1, 0, 1, 1, 2, 1, 0, 0, 7, 19, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.104547}", "{'[1, 0, 1, 1, 2, 1, 0, 0, 7, 19, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0981581}", "{'[1, 0, 1, 1, 2, 1, 0, 0, 7, 19, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0980821}", "{'[1, 0, 1, 1, 2, 1, 0, 0, 7, 19, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0982509}", "{'[1, 0, 1, 1, 2, 1, 0, 0, 7, 19, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0981588}", "{'[1, 0, 1, 1, 2, 1, 0, 0, 7, 19, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.098295}", "{'[1, 0, 1, 1, 2, 1, 0, 0, 7, 19, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0985291}", "{'[1, 0, 1, 1, 2, 1, 0, 0, 7, 19, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0985429}", "{'[1, 0, 1, 1, 2, 1, 0, 0, 7, 19, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0986259}", "{'[1, 0, 1, 1, 2, 1, 0, 0, 7, 19, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.098331}", "{'[1, 0, 1, 1, 2, 1, 0, 0, 7, 19, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0983381}", "{'[1, 0, 1, 1, 2, 1, 0, 0, 7, 19, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.098182}", "{'[1, 0, 1, 1, 2, 1, 0, 0, 7, 19, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0982571}", "{'[1, 0, 1, 1, 2, 1, 0, 0, 7, 19, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0982699}", "{'[1, 0, 1, 1, 2, 1, 0, 0, 7, 19, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0982828}", "{'[1, 0, 1, 1, 2, 1, 0, 0, 7, 19, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0982561}", "{'[1, 0, 1, 1, 2, 1, 0, 0, 7, 19, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0983331}", "{'[1, 0, 1, 1, 2, 1, 0, 0, 7, 19, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0984149}", "{'[1, 0, 1, 1, 2, 1, 0, 0, 7, 19, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.098583}", "{'[1, 0, 1, 1, 2, 1, 0, 0, 7, 19, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0983598}", "{'[1, 0, 1, 1, 2, 1, 0, 0, 7, 19, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0981839}", "{'[1, 0, 1, 1, 2, 1, 0, 0, 7, 19, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0982132}", "{'[1, 0, 1, 1, 2, 1, 0, 0, 7, 19, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.098244}", "{'[1, 0, 1, 1, 2, 1, 0, 0, 7, 19, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.09832}", "{'[1, 0, 1, 1, 2, 1, 0, 0, 7, 19, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.098469}", "{'[1, 0, 1, 1, 2, 1, 0, 0, 7, 19, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0983281}"]
returning from 'run': {'[1, 0, 1, 1, 2, 1, 0, 0, 7, 19, 0, 11, 1, 1, 0, 1, 1, 0]': ([0.114723, 0.114679, 0.114655, 0.114574, 0.104547, 0.0981581, 0.0980821, 0.0982509, 0.0981588, 0.098295, 0.0985291, 0.0985429, 0.0986259, 0.098331, 0.0983381, 0.098182, 0.0982571, 0.0982699, 0.0982828, 0.0982561, 0.0983331, 0.0984149, 0.098583, 0.0983598, 0.0981839, 0.0982132, 0.098244, 0.09832, 0.098469, 0.0983281], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 1, 1, 2, 1, 0, 0, 7, 19, 0, 11, 1, 1, 0, 1, 1, 0]': ([0.114723, 0.114679, 0.114655, 0.114574, 0.104547, 0.0981581, 0.0980821, 0.0982509, 0.0981588, 0.098295, 0.0985291, 0.0985429, 0.0986259, 0.098331, 0.0983381, 0.098182, 0.0982571, 0.0982699, 0.0982828, 0.0982561, 0.0983331, 0.0984149, 0.098583, 0.0983598, 0.0981839, 0.0982132, 0.098244, 0.09832, 0.098469, 0.0983281], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		4149
        Multiplications: 	2046
        Divisions: 		0
        Logical: 		0
        Reads: 			7659
        Writes: 		1207
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest67.exe __orio_perftest67.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest67.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest67.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest67.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest67.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
Code stats:
        Number of loops: 	48
        Max loop nest depth: 	5
        Additions: 		2782
        Multiplications: 	1078
        Divisions: 		0
        Logical: 		0
        Reads: 			5155
        Writes: 		876
        Comparisons:		48
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest68.exe __orio_perftest68.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest68.exe  
Program Test Output: 
{'[3, 0, 3, 1, 5, 6, 1, 0, 23, 9, 14, 0, 0, 0, 2, 1, 1, 1]' : 0.216546}
{'[3, 0, 3, 1, 5, 6, 1, 0, 23, 9, 14, 0, 0, 0, 2, 1, 1, 1]' : 0.216453}
{'[3, 0, 3, 1, 5, 6, 1, 0, 23, 9, 14, 0, 0, 0, 2, 1, 1, 1]' : 0.203298}
{'[3, 0, 3, 1, 5, 6, 1, 0, 23, 9, 14, 0, 0, 0, 2, 1, 1, 1]' : 0.182735}
{'[3, 0, 3, 1, 5, 6, 1, 0, 23, 9, 14, 0, 0, 0, 2, 1, 1, 1]' : 0.182636}
{'[3, 0, 3, 1, 5, 6, 1, 0, 23, 9, 14, 0, 0, 0, 2, 1, 1, 1]' : 0.182736}
{'[3, 0, 3, 1, 5, 6, 1, 0, 23, 9, 14, 0, 0, 0, 2, 1, 1, 1]' : 0.182841}
{'[3, 0, 3, 1, 5, 6, 1, 0, 23, 9, 14, 0, 0, 0, 2, 1, 1, 1]' : 0.182907}
{'[3, 0, 3, 1, 5, 6, 1, 0, 23, 9, 14, 0, 0, 0, 2, 1, 1, 1]' : 0.18285}
{'[3, 0, 3, 1, 5, 6, 1, 0, 23, 9, 14, 0, 0, 0, 2, 1, 1, 1]' : 0.182917}
{'[3, 0, 3, 1, 5, 6, 1, 0, 23, 9, 14, 0, 0, 0, 2, 1, 1, 1]' : 0.182748}
{'[3, 0, 3, 1, 5, 6, 1, 0, 23, 9, 14, 0, 0, 0, 2, 1, 1, 1]' : 0.182673}
{'[3, 0, 3, 1, 5, 6, 1, 0, 23, 9, 14, 0, 0, 0, 2, 1, 1, 1]' : 0.182944}
{'[3, 0, 3, 1, 5, 6, 1, 0, 23, 9, 14, 0, 0, 0, 2, 1, 1, 1]' : 0.182794}
{'[3, 0, 3, 1, 5, 6, 1, 0, 23, 9, 14, 0, 0, 0, 2, 1, 1, 1]' : 0.183078}
{'[3, 0, 3, 1, 5, 6, 1, 0, 23, 9, 14, 0, 0, 0, 2, 1, 1, 1]' : 0.182607}
{'[3, 0, 3, 1, 5, 6, 1, 0, 23, 9, 14, 0, 0, 0, 2, 1, 1, 1]' : 0.182736}
{'[3, 0, 3, 1, 5, 6, 1, 0, 23, 9, 14, 0, 0, 0, 2, 1, 1, 1]' : 0.182965}
{'[3, 0, 3, 1, 5, 6, 1, 0, 23, 9, 14, 0, 0, 0, 2, 1, 1, 1]' : 0.182883}
{'[3, 0, 3, 1, 5, 6, 1, 0, 23, 9, 14, 0, 0, 0, 2, 1, 1, 1]' : 0.182817}
{'[3, 0, 3, 1, 5, 6, 1, 0, 23, 9, 14, 0, 0, 0, 2, 1, 1, 1]' : 0.183012}
{'[3, 0, 3, 1, 5, 6, 1, 0, 23, 9, 14, 0, 0, 0, 2, 1, 1, 1]' : 0.182586}
{'[3, 0, 3, 1, 5, 6, 1, 0, 23, 9, 14, 0, 0, 0, 2, 1, 1, 1]' : 0.182738}
{'[3, 0, 3, 1, 5, 6, 1, 0, 23, 9, 14, 0, 0, 0, 2, 1, 1, 1]' : 0.18271}
{'[3, 0, 3, 1, 5, 6, 1, 0, 23, 9, 14, 0, 0, 0, 2, 1, 1, 1]' : 0.182609}
{'[3, 0, 3, 1, 5, 6, 1, 0, 23, 9, 14, 0, 0, 0, 2, 1, 1, 1]' : 0.182882}
{'[3, 0, 3, 1, 5, 6, 1, 0, 23, 9, 14, 0, 0, 0, 2, 1, 1, 1]' : 0.182931}
{'[3, 0, 3, 1, 5, 6, 1, 0, 23, 9, 14, 0, 0, 0, 2, 1, 1, 1]' : 0.182618}
{'[3, 0, 3, 1, 5, 6, 1, 0, 23, 9, 14, 0, 0, 0, 2, 1, 1, 1]' : 0.182726}
{'[3, 0, 3, 1, 5, 6, 1, 0, 23, 9, 14, 0, 0, 0, 2, 1, 1, 1]' : 0.182695}

out:
 ["{'[3, 0, 3, 1, 5, 6, 1, 0, 23, 9, 14, 0, 0, 0, 2, 1, 1, 1]' : 0.216546}", "{'[3, 0, 3, 1, 5, 6, 1, 0, 23, 9, 14, 0, 0, 0, 2, 1, 1, 1]' : 0.216453}", "{'[3, 0, 3, 1, 5, 6, 1, 0, 23, 9, 14, 0, 0, 0, 2, 1, 1, 1]' : 0.203298}", "{'[3, 0, 3, 1, 5, 6, 1, 0, 23, 9, 14, 0, 0, 0, 2, 1, 1, 1]' : 0.182735}", "{'[3, 0, 3, 1, 5, 6, 1, 0, 23, 9, 14, 0, 0, 0, 2, 1, 1, 1]' : 0.182636}", "{'[3, 0, 3, 1, 5, 6, 1, 0, 23, 9, 14, 0, 0, 0, 2, 1, 1, 1]' : 0.182736}", "{'[3, 0, 3, 1, 5, 6, 1, 0, 23, 9, 14, 0, 0, 0, 2, 1, 1, 1]' : 0.182841}", "{'[3, 0, 3, 1, 5, 6, 1, 0, 23, 9, 14, 0, 0, 0, 2, 1, 1, 1]' : 0.182907}", "{'[3, 0, 3, 1, 5, 6, 1, 0, 23, 9, 14, 0, 0, 0, 2, 1, 1, 1]' : 0.18285}", "{'[3, 0, 3, 1, 5, 6, 1, 0, 23, 9, 14, 0, 0, 0, 2, 1, 1, 1]' : 0.182917}", "{'[3, 0, 3, 1, 5, 6, 1, 0, 23, 9, 14, 0, 0, 0, 2, 1, 1, 1]' : 0.182748}", "{'[3, 0, 3, 1, 5, 6, 1, 0, 23, 9, 14, 0, 0, 0, 2, 1, 1, 1]' : 0.182673}", "{'[3, 0, 3, 1, 5, 6, 1, 0, 23, 9, 14, 0, 0, 0, 2, 1, 1, 1]' : 0.182944}", "{'[3, 0, 3, 1, 5, 6, 1, 0, 23, 9, 14, 0, 0, 0, 2, 1, 1, 1]' : 0.182794}", "{'[3, 0, 3, 1, 5, 6, 1, 0, 23, 9, 14, 0, 0, 0, 2, 1, 1, 1]' : 0.183078}", "{'[3, 0, 3, 1, 5, 6, 1, 0, 23, 9, 14, 0, 0, 0, 2, 1, 1, 1]' : 0.182607}", "{'[3, 0, 3, 1, 5, 6, 1, 0, 23, 9, 14, 0, 0, 0, 2, 1, 1, 1]' : 0.182736}", "{'[3, 0, 3, 1, 5, 6, 1, 0, 23, 9, 14, 0, 0, 0, 2, 1, 1, 1]' : 0.182965}", "{'[3, 0, 3, 1, 5, 6, 1, 0, 23, 9, 14, 0, 0, 0, 2, 1, 1, 1]' : 0.182883}", "{'[3, 0, 3, 1, 5, 6, 1, 0, 23, 9, 14, 0, 0, 0, 2, 1, 1, 1]' : 0.182817}", "{'[3, 0, 3, 1, 5, 6, 1, 0, 23, 9, 14, 0, 0, 0, 2, 1, 1, 1]' : 0.183012}", "{'[3, 0, 3, 1, 5, 6, 1, 0, 23, 9, 14, 0, 0, 0, 2, 1, 1, 1]' : 0.182586}", "{'[3, 0, 3, 1, 5, 6, 1, 0, 23, 9, 14, 0, 0, 0, 2, 1, 1, 1]' : 0.182738}", "{'[3, 0, 3, 1, 5, 6, 1, 0, 23, 9, 14, 0, 0, 0, 2, 1, 1, 1]' : 0.18271}", "{'[3, 0, 3, 1, 5, 6, 1, 0, 23, 9, 14, 0, 0, 0, 2, 1, 1, 1]' : 0.182609}", "{'[3, 0, 3, 1, 5, 6, 1, 0, 23, 9, 14, 0, 0, 0, 2, 1, 1, 1]' : 0.182882}", "{'[3, 0, 3, 1, 5, 6, 1, 0, 23, 9, 14, 0, 0, 0, 2, 1, 1, 1]' : 0.182931}", "{'[3, 0, 3, 1, 5, 6, 1, 0, 23, 9, 14, 0, 0, 0, 2, 1, 1, 1]' : 0.182618}", "{'[3, 0, 3, 1, 5, 6, 1, 0, 23, 9, 14, 0, 0, 0, 2, 1, 1, 1]' : 0.182726}", "{'[3, 0, 3, 1, 5, 6, 1, 0, 23, 9, 14, 0, 0, 0, 2, 1, 1, 1]' : 0.182695}"]
returning from 'run': {'[3, 0, 3, 1, 5, 6, 1, 0, 23, 9, 14, 0, 0, 0, 2, 1, 1, 1]': ([0.216546, 0.216453, 0.203298, 0.182735, 0.182636, 0.182736, 0.182841, 0.182907, 0.18285, 0.182917, 0.182748, 0.182673, 0.182944, 0.182794, 0.183078, 0.182607, 0.182736, 0.182965, 0.182883, 0.182817, 0.183012, 0.182586, 0.182738, 0.18271, 0.182609, 0.182882, 0.182931, 0.182618, 0.182726, 0.182695], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 0, 3, 1, 5, 6, 1, 0, 23, 9, 14, 0, 0, 0, 2, 1, 1, 1]': ([0.216546, 0.216453, 0.203298, 0.182735, 0.182636, 0.182736, 0.182841, 0.182907, 0.18285, 0.182917, 0.182748, 0.182673, 0.182944, 0.182794, 0.183078, 0.182607, 0.182736, 0.182965, 0.182883, 0.182817, 0.183012, 0.182586, 0.182738, 0.18271, 0.182609, 0.182882, 0.182931, 0.182618, 0.182726, 0.182695], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	73
        Max loop nest depth: 	5
        Additions: 		1374
        Multiplications: 	522
        Divisions: 		0
        Logical: 		0
        Reads: 			2987
        Writes: 		601
        Comparisons:		73
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest69.exe __orio_perftest69.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest69.exe  
Program Test Output: 
{'[0, 0, 1, 1, 6, 6, 0, 1, 7, 27, 0, 6, 0, 0, 1, 1, 1, 1]' : 0.230779}
{'[0, 0, 1, 1, 6, 6, 0, 1, 7, 27, 0, 6, 0, 0, 1, 1, 1, 1]' : 0.230153}
{'[0, 0, 1, 1, 6, 6, 0, 1, 7, 27, 0, 6, 0, 0, 1, 1, 1, 1]' : 0.230134}
{'[0, 0, 1, 1, 6, 6, 0, 1, 7, 27, 0, 6, 0, 0, 1, 1, 1, 1]' : 0.223314}
{'[0, 0, 1, 1, 6, 6, 0, 1, 7, 27, 0, 6, 0, 0, 1, 1, 1, 1]' : 0.2233}
{'[0, 0, 1, 1, 6, 6, 0, 1, 7, 27, 0, 6, 0, 0, 1, 1, 1, 1]' : 0.223711}
{'[0, 0, 1, 1, 6, 6, 0, 1, 7, 27, 0, 6, 0, 0, 1, 1, 1, 1]' : 0.223332}
{'[0, 0, 1, 1, 6, 6, 0, 1, 7, 27, 0, 6, 0, 0, 1, 1, 1, 1]' : 0.223866}
{'[0, 0, 1, 1, 6, 6, 0, 1, 7, 27, 0, 6, 0, 0, 1, 1, 1, 1]' : 0.223373}
{'[0, 0, 1, 1, 6, 6, 0, 1, 7, 27, 0, 6, 0, 0, 1, 1, 1, 1]' : 0.223402}
{'[0, 0, 1, 1, 6, 6, 0, 1, 7, 27, 0, 6, 0, 0, 1, 1, 1, 1]' : 0.223346}
{'[0, 0, 1, 1, 6, 6, 0, 1, 7, 27, 0, 6, 0, 0, 1, 1, 1, 1]' : 0.223252}
{'[0, 0, 1, 1, 6, 6, 0, 1, 7, 27, 0, 6, 0, 0, 1, 1, 1, 1]' : 0.223773}
{'[0, 0, 1, 1, 6, 6, 0, 1, 7, 27, 0, 6, 0, 0, 1, 1, 1, 1]' : 0.223345}
{'[0, 0, 1, 1, 6, 6, 0, 1, 7, 27, 0, 6, 0, 0, 1, 1, 1, 1]' : 0.223649}
{'[0, 0, 1, 1, 6, 6, 0, 1, 7, 27, 0, 6, 0, 0, 1, 1, 1, 1]' : 0.223258}
{'[0, 0, 1, 1, 6, 6, 0, 1, 7, 27, 0, 6, 0, 0, 1, 1, 1, 1]' : 0.223388}
{'[0, 0, 1, 1, 6, 6, 0, 1, 7, 27, 0, 6, 0, 0, 1, 1, 1, 1]' : 0.223799}
{'[0, 0, 1, 1, 6, 6, 0, 1, 7, 27, 0, 6, 0, 0, 1, 1, 1, 1]' : 0.223372}
{'[0, 0, 1, 1, 6, 6, 0, 1, 7, 27, 0, 6, 0, 0, 1, 1, 1, 1]' : 0.223494}
{'[0, 0, 1, 1, 6, 6, 0, 1, 7, 27, 0, 6, 0, 0, 1, 1, 1, 1]' : 0.227157}
{'[0, 0, 1, 1, 6, 6, 0, 1, 7, 27, 0, 6, 0, 0, 1, 1, 1, 1]' : 0.22332}
{'[0, 0, 1, 1, 6, 6, 0, 1, 7, 27, 0, 6, 0, 0, 1, 1, 1, 1]' : 0.223686}
{'[0, 0, 1, 1, 6, 6, 0, 1, 7, 27, 0, 6, 0, 0, 1, 1, 1, 1]' : 0.223706}
{'[0, 0, 1, 1, 6, 6, 0, 1, 7, 27, 0, 6, 0, 0, 1, 1, 1, 1]' : 0.223419}
{'[0, 0, 1, 1, 6, 6, 0, 1, 7, 27, 0, 6, 0, 0, 1, 1, 1, 1]' : 0.223284}
{'[0, 0, 1, 1, 6, 6, 0, 1, 7, 27, 0, 6, 0, 0, 1, 1, 1, 1]' : 0.223399}
{'[0, 0, 1, 1, 6, 6, 0, 1, 7, 27, 0, 6, 0, 0, 1, 1, 1, 1]' : 0.224122}
{'[0, 0, 1, 1, 6, 6, 0, 1, 7, 27, 0, 6, 0, 0, 1, 1, 1, 1]' : 0.223404}
{'[0, 0, 1, 1, 6, 6, 0, 1, 7, 27, 0, 6, 0, 0, 1, 1, 1, 1]' : 0.223381}

out:
 ["{'[0, 0, 1, 1, 6, 6, 0, 1, 7, 27, 0, 6, 0, 0, 1, 1, 1, 1]' : 0.230779}", "{'[0, 0, 1, 1, 6, 6, 0, 1, 7, 27, 0, 6, 0, 0, 1, 1, 1, 1]' : 0.230153}", "{'[0, 0, 1, 1, 6, 6, 0, 1, 7, 27, 0, 6, 0, 0, 1, 1, 1, 1]' : 0.230134}", "{'[0, 0, 1, 1, 6, 6, 0, 1, 7, 27, 0, 6, 0, 0, 1, 1, 1, 1]' : 0.223314}", "{'[0, 0, 1, 1, 6, 6, 0, 1, 7, 27, 0, 6, 0, 0, 1, 1, 1, 1]' : 0.2233}", "{'[0, 0, 1, 1, 6, 6, 0, 1, 7, 27, 0, 6, 0, 0, 1, 1, 1, 1]' : 0.223711}", "{'[0, 0, 1, 1, 6, 6, 0, 1, 7, 27, 0, 6, 0, 0, 1, 1, 1, 1]' : 0.223332}", "{'[0, 0, 1, 1, 6, 6, 0, 1, 7, 27, 0, 6, 0, 0, 1, 1, 1, 1]' : 0.223866}", "{'[0, 0, 1, 1, 6, 6, 0, 1, 7, 27, 0, 6, 0, 0, 1, 1, 1, 1]' : 0.223373}", "{'[0, 0, 1, 1, 6, 6, 0, 1, 7, 27, 0, 6, 0, 0, 1, 1, 1, 1]' : 0.223402}", "{'[0, 0, 1, 1, 6, 6, 0, 1, 7, 27, 0, 6, 0, 0, 1, 1, 1, 1]' : 0.223346}", "{'[0, 0, 1, 1, 6, 6, 0, 1, 7, 27, 0, 6, 0, 0, 1, 1, 1, 1]' : 0.223252}", "{'[0, 0, 1, 1, 6, 6, 0, 1, 7, 27, 0, 6, 0, 0, 1, 1, 1, 1]' : 0.223773}", "{'[0, 0, 1, 1, 6, 6, 0, 1, 7, 27, 0, 6, 0, 0, 1, 1, 1, 1]' : 0.223345}", "{'[0, 0, 1, 1, 6, 6, 0, 1, 7, 27, 0, 6, 0, 0, 1, 1, 1, 1]' : 0.223649}", "{'[0, 0, 1, 1, 6, 6, 0, 1, 7, 27, 0, 6, 0, 0, 1, 1, 1, 1]' : 0.223258}", "{'[0, 0, 1, 1, 6, 6, 0, 1, 7, 27, 0, 6, 0, 0, 1, 1, 1, 1]' : 0.223388}", "{'[0, 0, 1, 1, 6, 6, 0, 1, 7, 27, 0, 6, 0, 0, 1, 1, 1, 1]' : 0.223799}", "{'[0, 0, 1, 1, 6, 6, 0, 1, 7, 27, 0, 6, 0, 0, 1, 1, 1, 1]' : 0.223372}", "{'[0, 0, 1, 1, 6, 6, 0, 1, 7, 27, 0, 6, 0, 0, 1, 1, 1, 1]' : 0.223494}", "{'[0, 0, 1, 1, 6, 6, 0, 1, 7, 27, 0, 6, 0, 0, 1, 1, 1, 1]' : 0.227157}", "{'[0, 0, 1, 1, 6, 6, 0, 1, 7, 27, 0, 6, 0, 0, 1, 1, 1, 1]' : 0.22332}", "{'[0, 0, 1, 1, 6, 6, 0, 1, 7, 27, 0, 6, 0, 0, 1, 1, 1, 1]' : 0.223686}", "{'[0, 0, 1, 1, 6, 6, 0, 1, 7, 27, 0, 6, 0, 0, 1, 1, 1, 1]' : 0.223706}", "{'[0, 0, 1, 1, 6, 6, 0, 1, 7, 27, 0, 6, 0, 0, 1, 1, 1, 1]' : 0.223419}", "{'[0, 0, 1, 1, 6, 6, 0, 1, 7, 27, 0, 6, 0, 0, 1, 1, 1, 1]' : 0.223284}", "{'[0, 0, 1, 1, 6, 6, 0, 1, 7, 27, 0, 6, 0, 0, 1, 1, 1, 1]' : 0.223399}", "{'[0, 0, 1, 1, 6, 6, 0, 1, 7, 27, 0, 6, 0, 0, 1, 1, 1, 1]' : 0.224122}", "{'[0, 0, 1, 1, 6, 6, 0, 1, 7, 27, 0, 6, 0, 0, 1, 1, 1, 1]' : 0.223404}", "{'[0, 0, 1, 1, 6, 6, 0, 1, 7, 27, 0, 6, 0, 0, 1, 1, 1, 1]' : 0.223381}"]
returning from 'run': {'[0, 0, 1, 1, 6, 6, 0, 1, 7, 27, 0, 6, 0, 0, 1, 1, 1, 1]': ([0.230779, 0.230153, 0.230134, 0.223314, 0.2233, 0.223711, 0.223332, 0.223866, 0.223373, 0.223402, 0.223346, 0.223252, 0.223773, 0.223345, 0.223649, 0.223258, 0.223388, 0.223799, 0.223372, 0.223494, 0.227157, 0.22332, 0.223686, 0.223706, 0.223419, 0.223284, 0.223399, 0.224122, 0.223404, 0.223381], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 1, 1, 6, 6, 0, 1, 7, 27, 0, 6, 0, 0, 1, 1, 1, 1]': ([0.230779, 0.230153, 0.230134, 0.223314, 0.2233, 0.223711, 0.223332, 0.223866, 0.223373, 0.223402, 0.223346, 0.223252, 0.223773, 0.223345, 0.223649, 0.223258, 0.223388, 0.223799, 0.223372, 0.223494, 0.227157, 0.22332, 0.223686, 0.223706, 0.223419, 0.223284, 0.223399, 0.224122, 0.223404, 0.223381], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	46
        Max loop nest depth: 	6
        Additions: 		1583
        Multiplications: 	660
        Divisions: 		0
        Logical: 		0
        Reads: 			3118
        Writes: 		551
        Comparisons:		46
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest70.exe __orio_perftest70.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest70.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest70.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest70.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest70.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	5
        Additions: 		7796
        Multiplications: 	3828
        Divisions: 		0
        Logical: 		0
        Reads: 			14311
        Writes: 		2186
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest71.exe __orio_perftest71.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest71.exe  
Program Test Output: 
{'[3, 0, 1, 1, 5, 2, 1, 0, 4, 0, 28, 26, 2, 0, 0, 1, 0, 1]' : 0.253399}
{'[3, 0, 1, 1, 5, 2, 1, 0, 4, 0, 28, 26, 2, 0, 0, 1, 0, 1]' : 0.253018}
{'[3, 0, 1, 1, 5, 2, 1, 0, 4, 0, 28, 26, 2, 0, 0, 1, 0, 1]' : 0.223802}
{'[3, 0, 1, 1, 5, 2, 1, 0, 4, 0, 28, 26, 2, 0, 0, 1, 0, 1]' : 0.223312}
{'[3, 0, 1, 1, 5, 2, 1, 0, 4, 0, 28, 26, 2, 0, 0, 1, 0, 1]' : 0.223031}
{'[3, 0, 1, 1, 5, 2, 1, 0, 4, 0, 28, 26, 2, 0, 0, 1, 0, 1]' : 0.220545}
{'[3, 0, 1, 1, 5, 2, 1, 0, 4, 0, 28, 26, 2, 0, 0, 1, 0, 1]' : 0.221232}
{'[3, 0, 1, 1, 5, 2, 1, 0, 4, 0, 28, 26, 2, 0, 0, 1, 0, 1]' : 0.22147}
{'[3, 0, 1, 1, 5, 2, 1, 0, 4, 0, 28, 26, 2, 0, 0, 1, 0, 1]' : 0.223982}
{'[3, 0, 1, 1, 5, 2, 1, 0, 4, 0, 28, 26, 2, 0, 0, 1, 0, 1]' : 0.220705}
{'[3, 0, 1, 1, 5, 2, 1, 0, 4, 0, 28, 26, 2, 0, 0, 1, 0, 1]' : 0.221115}
{'[3, 0, 1, 1, 5, 2, 1, 0, 4, 0, 28, 26, 2, 0, 0, 1, 0, 1]' : 0.221126}
{'[3, 0, 1, 1, 5, 2, 1, 0, 4, 0, 28, 26, 2, 0, 0, 1, 0, 1]' : 0.221883}
{'[3, 0, 1, 1, 5, 2, 1, 0, 4, 0, 28, 26, 2, 0, 0, 1, 0, 1]' : 0.220583}
{'[3, 0, 1, 1, 5, 2, 1, 0, 4, 0, 28, 26, 2, 0, 0, 1, 0, 1]' : 0.220697}
{'[3, 0, 1, 1, 5, 2, 1, 0, 4, 0, 28, 26, 2, 0, 0, 1, 0, 1]' : 0.221435}
{'[3, 0, 1, 1, 5, 2, 1, 0, 4, 0, 28, 26, 2, 0, 0, 1, 0, 1]' : 0.221754}
{'[3, 0, 1, 1, 5, 2, 1, 0, 4, 0, 28, 26, 2, 0, 0, 1, 0, 1]' : 0.225596}
{'[3, 0, 1, 1, 5, 2, 1, 0, 4, 0, 28, 26, 2, 0, 0, 1, 0, 1]' : 0.223104}
{'[3, 0, 1, 1, 5, 2, 1, 0, 4, 0, 28, 26, 2, 0, 0, 1, 0, 1]' : 0.223381}
{'[3, 0, 1, 1, 5, 2, 1, 0, 4, 0, 28, 26, 2, 0, 0, 1, 0, 1]' : 0.222554}
{'[3, 0, 1, 1, 5, 2, 1, 0, 4, 0, 28, 26, 2, 0, 0, 1, 0, 1]' : 0.223231}
{'[3, 0, 1, 1, 5, 2, 1, 0, 4, 0, 28, 26, 2, 0, 0, 1, 0, 1]' : 0.223409}
{'[3, 0, 1, 1, 5, 2, 1, 0, 4, 0, 28, 26, 2, 0, 0, 1, 0, 1]' : 0.226089}
{'[3, 0, 1, 1, 5, 2, 1, 0, 4, 0, 28, 26, 2, 0, 0, 1, 0, 1]' : 0.221238}
{'[3, 0, 1, 1, 5, 2, 1, 0, 4, 0, 28, 26, 2, 0, 0, 1, 0, 1]' : 0.220957}
{'[3, 0, 1, 1, 5, 2, 1, 0, 4, 0, 28, 26, 2, 0, 0, 1, 0, 1]' : 0.221719}
{'[3, 0, 1, 1, 5, 2, 1, 0, 4, 0, 28, 26, 2, 0, 0, 1, 0, 1]' : 0.222135}
{'[3, 0, 1, 1, 5, 2, 1, 0, 4, 0, 28, 26, 2, 0, 0, 1, 0, 1]' : 0.221903}
{'[3, 0, 1, 1, 5, 2, 1, 0, 4, 0, 28, 26, 2, 0, 0, 1, 0, 1]' : 0.222264}

out:
 ["{'[3, 0, 1, 1, 5, 2, 1, 0, 4, 0, 28, 26, 2, 0, 0, 1, 0, 1]' : 0.253399}", "{'[3, 0, 1, 1, 5, 2, 1, 0, 4, 0, 28, 26, 2, 0, 0, 1, 0, 1]' : 0.253018}", "{'[3, 0, 1, 1, 5, 2, 1, 0, 4, 0, 28, 26, 2, 0, 0, 1, 0, 1]' : 0.223802}", "{'[3, 0, 1, 1, 5, 2, 1, 0, 4, 0, 28, 26, 2, 0, 0, 1, 0, 1]' : 0.223312}", "{'[3, 0, 1, 1, 5, 2, 1, 0, 4, 0, 28, 26, 2, 0, 0, 1, 0, 1]' : 0.223031}", "{'[3, 0, 1, 1, 5, 2, 1, 0, 4, 0, 28, 26, 2, 0, 0, 1, 0, 1]' : 0.220545}", "{'[3, 0, 1, 1, 5, 2, 1, 0, 4, 0, 28, 26, 2, 0, 0, 1, 0, 1]' : 0.221232}", "{'[3, 0, 1, 1, 5, 2, 1, 0, 4, 0, 28, 26, 2, 0, 0, 1, 0, 1]' : 0.22147}", "{'[3, 0, 1, 1, 5, 2, 1, 0, 4, 0, 28, 26, 2, 0, 0, 1, 0, 1]' : 0.223982}", "{'[3, 0, 1, 1, 5, 2, 1, 0, 4, 0, 28, 26, 2, 0, 0, 1, 0, 1]' : 0.220705}", "{'[3, 0, 1, 1, 5, 2, 1, 0, 4, 0, 28, 26, 2, 0, 0, 1, 0, 1]' : 0.221115}", "{'[3, 0, 1, 1, 5, 2, 1, 0, 4, 0, 28, 26, 2, 0, 0, 1, 0, 1]' : 0.221126}", "{'[3, 0, 1, 1, 5, 2, 1, 0, 4, 0, 28, 26, 2, 0, 0, 1, 0, 1]' : 0.221883}", "{'[3, 0, 1, 1, 5, 2, 1, 0, 4, 0, 28, 26, 2, 0, 0, 1, 0, 1]' : 0.220583}", "{'[3, 0, 1, 1, 5, 2, 1, 0, 4, 0, 28, 26, 2, 0, 0, 1, 0, 1]' : 0.220697}", "{'[3, 0, 1, 1, 5, 2, 1, 0, 4, 0, 28, 26, 2, 0, 0, 1, 0, 1]' : 0.221435}", "{'[3, 0, 1, 1, 5, 2, 1, 0, 4, 0, 28, 26, 2, 0, 0, 1, 0, 1]' : 0.221754}", "{'[3, 0, 1, 1, 5, 2, 1, 0, 4, 0, 28, 26, 2, 0, 0, 1, 0, 1]' : 0.225596}", "{'[3, 0, 1, 1, 5, 2, 1, 0, 4, 0, 28, 26, 2, 0, 0, 1, 0, 1]' : 0.223104}", "{'[3, 0, 1, 1, 5, 2, 1, 0, 4, 0, 28, 26, 2, 0, 0, 1, 0, 1]' : 0.223381}", "{'[3, 0, 1, 1, 5, 2, 1, 0, 4, 0, 28, 26, 2, 0, 0, 1, 0, 1]' : 0.222554}", "{'[3, 0, 1, 1, 5, 2, 1, 0, 4, 0, 28, 26, 2, 0, 0, 1, 0, 1]' : 0.223231}", "{'[3, 0, 1, 1, 5, 2, 1, 0, 4, 0, 28, 26, 2, 0, 0, 1, 0, 1]' : 0.223409}", "{'[3, 0, 1, 1, 5, 2, 1, 0, 4, 0, 28, 26, 2, 0, 0, 1, 0, 1]' : 0.226089}", "{'[3, 0, 1, 1, 5, 2, 1, 0, 4, 0, 28, 26, 2, 0, 0, 1, 0, 1]' : 0.221238}", "{'[3, 0, 1, 1, 5, 2, 1, 0, 4, 0, 28, 26, 2, 0, 0, 1, 0, 1]' : 0.220957}", "{'[3, 0, 1, 1, 5, 2, 1, 0, 4, 0, 28, 26, 2, 0, 0, 1, 0, 1]' : 0.221719}", "{'[3, 0, 1, 1, 5, 2, 1, 0, 4, 0, 28, 26, 2, 0, 0, 1, 0, 1]' : 0.222135}", "{'[3, 0, 1, 1, 5, 2, 1, 0, 4, 0, 28, 26, 2, 0, 0, 1, 0, 1]' : 0.221903}", "{'[3, 0, 1, 1, 5, 2, 1, 0, 4, 0, 28, 26, 2, 0, 0, 1, 0, 1]' : 0.222264}"]
returning from 'run': {'[3, 0, 1, 1, 5, 2, 1, 0, 4, 0, 28, 26, 2, 0, 0, 1, 0, 1]': ([0.253399, 0.253018, 0.223802, 0.223312, 0.223031, 0.220545, 0.221232, 0.22147, 0.223982, 0.220705, 0.221115, 0.221126, 0.221883, 0.220583, 0.220697, 0.221435, 0.221754, 0.225596, 0.223104, 0.223381, 0.222554, 0.223231, 0.223409, 0.226089, 0.221238, 0.220957, 0.221719, 0.222135, 0.221903, 0.222264], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 0, 1, 1, 5, 2, 1, 0, 4, 0, 28, 26, 2, 0, 0, 1, 0, 1]': ([0.253399, 0.253018, 0.223802, 0.223312, 0.223031, 0.220545, 0.221232, 0.22147, 0.223982, 0.220705, 0.221115, 0.221126, 0.221883, 0.220583, 0.220697, 0.221435, 0.221754, 0.225596, 0.223104, 0.223381, 0.222554, 0.223231, 0.223409, 0.226089, 0.221238, 0.220957, 0.221719, 0.222135, 0.221903, 0.222264], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = kkk
Code stats:
        Number of loops: 	58
        Max loop nest depth: 	4
        Additions: 		5159
        Multiplications: 	1944
        Divisions: 		0
        Logical: 		0
        Reads: 			10891
        Writes: 		2312
        Comparisons:		58
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest72.exe __orio_perftest72.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest72.exe  
Program Test Output: 
{'[3, 0, 4, 1, 1, 2, 0, 0, 15, 17, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.105955}
{'[3, 0, 4, 1, 1, 2, 0, 0, 15, 17, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.105754}
{'[3, 0, 4, 1, 1, 2, 0, 0, 15, 17, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.105637}
{'[3, 0, 4, 1, 1, 2, 0, 0, 15, 17, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.105601}
{'[3, 0, 4, 1, 1, 2, 0, 0, 15, 17, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.105652}
{'[3, 0, 4, 1, 1, 2, 0, 0, 15, 17, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.100193}
{'[3, 0, 4, 1, 1, 2, 0, 0, 15, 17, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.0931849}
{'[3, 0, 4, 1, 1, 2, 0, 0, 15, 17, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.0934091}
{'[3, 0, 4, 1, 1, 2, 0, 0, 15, 17, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.0933619}
{'[3, 0, 4, 1, 1, 2, 0, 0, 15, 17, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.093498}
{'[3, 0, 4, 1, 1, 2, 0, 0, 15, 17, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.093338}
{'[3, 0, 4, 1, 1, 2, 0, 0, 15, 17, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.0934939}
{'[3, 0, 4, 1, 1, 2, 0, 0, 15, 17, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.0933211}
{'[3, 0, 4, 1, 1, 2, 0, 0, 15, 17, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.0933769}
{'[3, 0, 4, 1, 1, 2, 0, 0, 15, 17, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.0933099}
{'[3, 0, 4, 1, 1, 2, 0, 0, 15, 17, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.0934601}
{'[3, 0, 4, 1, 1, 2, 0, 0, 15, 17, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.0932751}
{'[3, 0, 4, 1, 1, 2, 0, 0, 15, 17, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.0932341}
{'[3, 0, 4, 1, 1, 2, 0, 0, 15, 17, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.0932369}
{'[3, 0, 4, 1, 1, 2, 0, 0, 15, 17, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.0936689}
{'[3, 0, 4, 1, 1, 2, 0, 0, 15, 17, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.0937011}
{'[3, 0, 4, 1, 1, 2, 0, 0, 15, 17, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.0934188}
{'[3, 0, 4, 1, 1, 2, 0, 0, 15, 17, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.0936151}
{'[3, 0, 4, 1, 1, 2, 0, 0, 15, 17, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.093338}
{'[3, 0, 4, 1, 1, 2, 0, 0, 15, 17, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.0933721}
{'[3, 0, 4, 1, 1, 2, 0, 0, 15, 17, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.094723}
{'[3, 0, 4, 1, 1, 2, 0, 0, 15, 17, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.0960932}
{'[3, 0, 4, 1, 1, 2, 0, 0, 15, 17, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.0974569}
{'[3, 0, 4, 1, 1, 2, 0, 0, 15, 17, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.0957479}
{'[3, 0, 4, 1, 1, 2, 0, 0, 15, 17, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.093802}

out:
 ["{'[3, 0, 4, 1, 1, 2, 0, 0, 15, 17, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.105955}", "{'[3, 0, 4, 1, 1, 2, 0, 0, 15, 17, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.105754}", "{'[3, 0, 4, 1, 1, 2, 0, 0, 15, 17, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.105637}", "{'[3, 0, 4, 1, 1, 2, 0, 0, 15, 17, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.105601}", "{'[3, 0, 4, 1, 1, 2, 0, 0, 15, 17, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.105652}", "{'[3, 0, 4, 1, 1, 2, 0, 0, 15, 17, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.100193}", "{'[3, 0, 4, 1, 1, 2, 0, 0, 15, 17, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.0931849}", "{'[3, 0, 4, 1, 1, 2, 0, 0, 15, 17, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.0934091}", "{'[3, 0, 4, 1, 1, 2, 0, 0, 15, 17, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.0933619}", "{'[3, 0, 4, 1, 1, 2, 0, 0, 15, 17, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.093498}", "{'[3, 0, 4, 1, 1, 2, 0, 0, 15, 17, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.093338}", "{'[3, 0, 4, 1, 1, 2, 0, 0, 15, 17, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.0934939}", "{'[3, 0, 4, 1, 1, 2, 0, 0, 15, 17, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.0933211}", "{'[3, 0, 4, 1, 1, 2, 0, 0, 15, 17, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.0933769}", "{'[3, 0, 4, 1, 1, 2, 0, 0, 15, 17, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.0933099}", "{'[3, 0, 4, 1, 1, 2, 0, 0, 15, 17, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.0934601}", "{'[3, 0, 4, 1, 1, 2, 0, 0, 15, 17, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.0932751}", "{'[3, 0, 4, 1, 1, 2, 0, 0, 15, 17, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.0932341}", "{'[3, 0, 4, 1, 1, 2, 0, 0, 15, 17, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.0932369}", "{'[3, 0, 4, 1, 1, 2, 0, 0, 15, 17, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.0936689}", "{'[3, 0, 4, 1, 1, 2, 0, 0, 15, 17, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.0937011}", "{'[3, 0, 4, 1, 1, 2, 0, 0, 15, 17, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.0934188}", "{'[3, 0, 4, 1, 1, 2, 0, 0, 15, 17, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.0936151}", "{'[3, 0, 4, 1, 1, 2, 0, 0, 15, 17, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.093338}", "{'[3, 0, 4, 1, 1, 2, 0, 0, 15, 17, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.0933721}", "{'[3, 0, 4, 1, 1, 2, 0, 0, 15, 17, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.094723}", "{'[3, 0, 4, 1, 1, 2, 0, 0, 15, 17, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.0960932}", "{'[3, 0, 4, 1, 1, 2, 0, 0, 15, 17, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.0974569}", "{'[3, 0, 4, 1, 1, 2, 0, 0, 15, 17, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.0957479}", "{'[3, 0, 4, 1, 1, 2, 0, 0, 15, 17, 0, 25, 1, 0, 1, 1, 1, 0]' : 0.093802}"]
returning from 'run': {'[3, 0, 4, 1, 1, 2, 0, 0, 15, 17, 0, 25, 1, 0, 1, 1, 1, 0]': ([0.105955, 0.105754, 0.105637, 0.105601, 0.105652, 0.100193, 0.0931849, 0.0934091, 0.0933619, 0.093498, 0.093338, 0.0934939, 0.0933211, 0.0933769, 0.0933099, 0.0934601, 0.0932751, 0.0932341, 0.0932369, 0.0936689, 0.0937011, 0.0934188, 0.0936151, 0.093338, 0.0933721, 0.094723, 0.0960932, 0.0974569, 0.0957479, 0.093802], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 0, 4, 1, 1, 2, 0, 0, 15, 17, 0, 25, 1, 0, 1, 1, 1, 0]': ([0.105955, 0.105754, 0.105637, 0.105601, 0.105652, 0.100193, 0.0931849, 0.0934091, 0.0933619, 0.093498, 0.093338, 0.0934939, 0.0933211, 0.0933769, 0.0933099, 0.0934601, 0.0932751, 0.0932341, 0.0932369, 0.0936689, 0.0937011, 0.0934188, 0.0936151, 0.093338, 0.0933721, 0.094723, 0.0960932, 0.0974569, 0.0957479, 0.093802], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	39
        Max loop nest depth: 	6
        Additions: 		1881
        Multiplications: 	868
        Divisions: 		0
        Logical: 		0
        Reads: 			3744
        Writes: 		646
        Comparisons:		39
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest73.exe __orio_perftest73.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest73.exe  
Program Test Output: 
{'[1, 0, 6, 1, 6, 6, 0, 1, 2, 4, 28, 0, 1, 0, 0, 1, 1, 1]' : 0.111957}
{'[1, 0, 6, 1, 6, 6, 0, 1, 2, 4, 28, 0, 1, 0, 0, 1, 1, 1]' : 0.111361}
{'[1, 0, 6, 1, 6, 6, 0, 1, 2, 4, 28, 0, 1, 0, 0, 1, 1, 1]' : 0.111282}
{'[1, 0, 6, 1, 6, 6, 0, 1, 2, 4, 28, 0, 1, 0, 0, 1, 1, 1]' : 0.111354}
{'[1, 0, 6, 1, 6, 6, 0, 1, 2, 4, 28, 0, 1, 0, 0, 1, 1, 1]' : 0.108622}
{'[1, 0, 6, 1, 6, 6, 0, 1, 2, 4, 28, 0, 1, 0, 0, 1, 1, 1]' : 0.096648}
{'[1, 0, 6, 1, 6, 6, 0, 1, 2, 4, 28, 0, 1, 0, 0, 1, 1, 1]' : 0.0961699}
{'[1, 0, 6, 1, 6, 6, 0, 1, 2, 4, 28, 0, 1, 0, 0, 1, 1, 1]' : 0.096173}
{'[1, 0, 6, 1, 6, 6, 0, 1, 2, 4, 28, 0, 1, 0, 0, 1, 1, 1]' : 0.0959451}
{'[1, 0, 6, 1, 6, 6, 0, 1, 2, 4, 28, 0, 1, 0, 0, 1, 1, 1]' : 0.0960832}
{'[1, 0, 6, 1, 6, 6, 0, 1, 2, 4, 28, 0, 1, 0, 0, 1, 1, 1]' : 0.096355}
{'[1, 0, 6, 1, 6, 6, 0, 1, 2, 4, 28, 0, 1, 0, 0, 1, 1, 1]' : 0.0961211}
{'[1, 0, 6, 1, 6, 6, 0, 1, 2, 4, 28, 0, 1, 0, 0, 1, 1, 1]' : 0.0960948}
{'[1, 0, 6, 1, 6, 6, 0, 1, 2, 4, 28, 0, 1, 0, 0, 1, 1, 1]' : 0.0960052}
{'[1, 0, 6, 1, 6, 6, 0, 1, 2, 4, 28, 0, 1, 0, 0, 1, 1, 1]' : 0.095957}
{'[1, 0, 6, 1, 6, 6, 0, 1, 2, 4, 28, 0, 1, 0, 0, 1, 1, 1]' : 0.095973}
{'[1, 0, 6, 1, 6, 6, 0, 1, 2, 4, 28, 0, 1, 0, 0, 1, 1, 1]' : 0.095962}
{'[1, 0, 6, 1, 6, 6, 0, 1, 2, 4, 28, 0, 1, 0, 0, 1, 1, 1]' : 0.096139}
{'[1, 0, 6, 1, 6, 6, 0, 1, 2, 4, 28, 0, 1, 0, 0, 1, 1, 1]' : 0.0963149}
{'[1, 0, 6, 1, 6, 6, 0, 1, 2, 4, 28, 0, 1, 0, 0, 1, 1, 1]' : 0.0959458}
{'[1, 0, 6, 1, 6, 6, 0, 1, 2, 4, 28, 0, 1, 0, 0, 1, 1, 1]' : 0.0964952}
{'[1, 0, 6, 1, 6, 6, 0, 1, 2, 4, 28, 0, 1, 0, 0, 1, 1, 1]' : 0.0960848}
{'[1, 0, 6, 1, 6, 6, 0, 1, 2, 4, 28, 0, 1, 0, 0, 1, 1, 1]' : 0.0960491}
{'[1, 0, 6, 1, 6, 6, 0, 1, 2, 4, 28, 0, 1, 0, 0, 1, 1, 1]' : 0.0959659}
{'[1, 0, 6, 1, 6, 6, 0, 1, 2, 4, 28, 0, 1, 0, 0, 1, 1, 1]' : 0.096168}
{'[1, 0, 6, 1, 6, 6, 0, 1, 2, 4, 28, 0, 1, 0, 0, 1, 1, 1]' : 0.0962}
{'[1, 0, 6, 1, 6, 6, 0, 1, 2, 4, 28, 0, 1, 0, 0, 1, 1, 1]' : 0.0960979}
{'[1, 0, 6, 1, 6, 6, 0, 1, 2, 4, 28, 0, 1, 0, 0, 1, 1, 1]' : 0.0960062}
{'[1, 0, 6, 1, 6, 6, 0, 1, 2, 4, 28, 0, 1, 0, 0, 1, 1, 1]' : 0.0962789}
{'[1, 0, 6, 1, 6, 6, 0, 1, 2, 4, 28, 0, 1, 0, 0, 1, 1, 1]' : 0.0961649}

out:
 ["{'[1, 0, 6, 1, 6, 6, 0, 1, 2, 4, 28, 0, 1, 0, 0, 1, 1, 1]' : 0.111957}", "{'[1, 0, 6, 1, 6, 6, 0, 1, 2, 4, 28, 0, 1, 0, 0, 1, 1, 1]' : 0.111361}", "{'[1, 0, 6, 1, 6, 6, 0, 1, 2, 4, 28, 0, 1, 0, 0, 1, 1, 1]' : 0.111282}", "{'[1, 0, 6, 1, 6, 6, 0, 1, 2, 4, 28, 0, 1, 0, 0, 1, 1, 1]' : 0.111354}", "{'[1, 0, 6, 1, 6, 6, 0, 1, 2, 4, 28, 0, 1, 0, 0, 1, 1, 1]' : 0.108622}", "{'[1, 0, 6, 1, 6, 6, 0, 1, 2, 4, 28, 0, 1, 0, 0, 1, 1, 1]' : 0.096648}", "{'[1, 0, 6, 1, 6, 6, 0, 1, 2, 4, 28, 0, 1, 0, 0, 1, 1, 1]' : 0.0961699}", "{'[1, 0, 6, 1, 6, 6, 0, 1, 2, 4, 28, 0, 1, 0, 0, 1, 1, 1]' : 0.096173}", "{'[1, 0, 6, 1, 6, 6, 0, 1, 2, 4, 28, 0, 1, 0, 0, 1, 1, 1]' : 0.0959451}", "{'[1, 0, 6, 1, 6, 6, 0, 1, 2, 4, 28, 0, 1, 0, 0, 1, 1, 1]' : 0.0960832}", "{'[1, 0, 6, 1, 6, 6, 0, 1, 2, 4, 28, 0, 1, 0, 0, 1, 1, 1]' : 0.096355}", "{'[1, 0, 6, 1, 6, 6, 0, 1, 2, 4, 28, 0, 1, 0, 0, 1, 1, 1]' : 0.0961211}", "{'[1, 0, 6, 1, 6, 6, 0, 1, 2, 4, 28, 0, 1, 0, 0, 1, 1, 1]' : 0.0960948}", "{'[1, 0, 6, 1, 6, 6, 0, 1, 2, 4, 28, 0, 1, 0, 0, 1, 1, 1]' : 0.0960052}", "{'[1, 0, 6, 1, 6, 6, 0, 1, 2, 4, 28, 0, 1, 0, 0, 1, 1, 1]' : 0.095957}", "{'[1, 0, 6, 1, 6, 6, 0, 1, 2, 4, 28, 0, 1, 0, 0, 1, 1, 1]' : 0.095973}", "{'[1, 0, 6, 1, 6, 6, 0, 1, 2, 4, 28, 0, 1, 0, 0, 1, 1, 1]' : 0.095962}", "{'[1, 0, 6, 1, 6, 6, 0, 1, 2, 4, 28, 0, 1, 0, 0, 1, 1, 1]' : 0.096139}", "{'[1, 0, 6, 1, 6, 6, 0, 1, 2, 4, 28, 0, 1, 0, 0, 1, 1, 1]' : 0.0963149}", "{'[1, 0, 6, 1, 6, 6, 0, 1, 2, 4, 28, 0, 1, 0, 0, 1, 1, 1]' : 0.0959458}", "{'[1, 0, 6, 1, 6, 6, 0, 1, 2, 4, 28, 0, 1, 0, 0, 1, 1, 1]' : 0.0964952}", "{'[1, 0, 6, 1, 6, 6, 0, 1, 2, 4, 28, 0, 1, 0, 0, 1, 1, 1]' : 0.0960848}", "{'[1, 0, 6, 1, 6, 6, 0, 1, 2, 4, 28, 0, 1, 0, 0, 1, 1, 1]' : 0.0960491}", "{'[1, 0, 6, 1, 6, 6, 0, 1, 2, 4, 28, 0, 1, 0, 0, 1, 1, 1]' : 0.0959659}", "{'[1, 0, 6, 1, 6, 6, 0, 1, 2, 4, 28, 0, 1, 0, 0, 1, 1, 1]' : 0.096168}", "{'[1, 0, 6, 1, 6, 6, 0, 1, 2, 4, 28, 0, 1, 0, 0, 1, 1, 1]' : 0.0962}", "{'[1, 0, 6, 1, 6, 6, 0, 1, 2, 4, 28, 0, 1, 0, 0, 1, 1, 1]' : 0.0960979}", "{'[1, 0, 6, 1, 6, 6, 0, 1, 2, 4, 28, 0, 1, 0, 0, 1, 1, 1]' : 0.0960062}", "{'[1, 0, 6, 1, 6, 6, 0, 1, 2, 4, 28, 0, 1, 0, 0, 1, 1, 1]' : 0.0962789}", "{'[1, 0, 6, 1, 6, 6, 0, 1, 2, 4, 28, 0, 1, 0, 0, 1, 1, 1]' : 0.0961649}"]
returning from 'run': {'[1, 0, 6, 1, 6, 6, 0, 1, 2, 4, 28, 0, 1, 0, 0, 1, 1, 1]': ([0.111957, 0.111361, 0.111282, 0.111354, 0.108622, 0.096648, 0.0961699, 0.096173, 0.0959451, 0.0960832, 0.096355, 0.0961211, 0.0960948, 0.0960052, 0.095957, 0.095973, 0.095962, 0.096139, 0.0963149, 0.0959458, 0.0964952, 0.0960848, 0.0960491, 0.0959659, 0.096168, 0.0962, 0.0960979, 0.0960062, 0.0962789, 0.0961649], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 6, 1, 6, 6, 0, 1, 2, 4, 28, 0, 1, 0, 0, 1, 1, 1]': ([0.111957, 0.111361, 0.111282, 0.111354, 0.108622, 0.096648, 0.0961699, 0.096173, 0.0959451, 0.0960832, 0.096355, 0.0961211, 0.0960948, 0.0960052, 0.095957, 0.095973, 0.095962, 0.096139, 0.0963149, 0.0959458, 0.0964952, 0.0960848, 0.0960491, 0.0959659, 0.096168, 0.0962, 0.0960979, 0.0960062, 0.0962789, 0.0961649], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	4
        Additions: 		373
        Multiplications: 	122
        Divisions: 		0
        Logical: 		0
        Reads: 			812
        Writes: 		163
        Comparisons:		10
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest74.exe __orio_perftest74.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest74.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest74.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest74.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest74.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		240
        Multiplications: 	74
        Divisions: 		0
        Logical: 		0
        Reads: 			487
        Writes: 		85
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest75.exe __orio_perftest75.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest75.exe  
Program Test Output: 
{'[1, 0, 2, 1, 2, 0, 1, 1, 0, 0, 27, 29, 0, 0, 1, 1, 1, 0]' : 0.279}
{'[1, 0, 2, 1, 2, 0, 1, 1, 0, 0, 27, 29, 0, 0, 1, 1, 1, 0]' : 0.278922}
{'[1, 0, 2, 1, 2, 0, 1, 1, 0, 0, 27, 29, 0, 0, 1, 1, 1, 0]' : 0.247841}
{'[1, 0, 2, 1, 2, 0, 1, 1, 0, 0, 27, 29, 0, 0, 1, 1, 1, 0]' : 0.233818}
{'[1, 0, 2, 1, 2, 0, 1, 1, 0, 0, 27, 29, 0, 0, 1, 1, 1, 0]' : 0.233328}
{'[1, 0, 2, 1, 2, 0, 1, 1, 0, 0, 27, 29, 0, 0, 1, 1, 1, 0]' : 0.23304}
{'[1, 0, 2, 1, 2, 0, 1, 1, 0, 0, 27, 29, 0, 0, 1, 1, 1, 0]' : 0.233058}
{'[1, 0, 2, 1, 2, 0, 1, 1, 0, 0, 27, 29, 0, 0, 1, 1, 1, 0]' : 0.233477}
{'[1, 0, 2, 1, 2, 0, 1, 1, 0, 0, 27, 29, 0, 0, 1, 1, 1, 0]' : 0.233594}
{'[1, 0, 2, 1, 2, 0, 1, 1, 0, 0, 27, 29, 0, 0, 1, 1, 1, 0]' : 0.233639}
{'[1, 0, 2, 1, 2, 0, 1, 1, 0, 0, 27, 29, 0, 0, 1, 1, 1, 0]' : 0.233292}
{'[1, 0, 2, 1, 2, 0, 1, 1, 0, 0, 27, 29, 0, 0, 1, 1, 1, 0]' : 0.233296}
{'[1, 0, 2, 1, 2, 0, 1, 1, 0, 0, 27, 29, 0, 0, 1, 1, 1, 0]' : 0.233358}
{'[1, 0, 2, 1, 2, 0, 1, 1, 0, 0, 27, 29, 0, 0, 1, 1, 1, 0]' : 0.233531}
{'[1, 0, 2, 1, 2, 0, 1, 1, 0, 0, 27, 29, 0, 0, 1, 1, 1, 0]' : 0.233205}
{'[1, 0, 2, 1, 2, 0, 1, 1, 0, 0, 27, 29, 0, 0, 1, 1, 1, 0]' : 0.233972}
{'[1, 0, 2, 1, 2, 0, 1, 1, 0, 0, 27, 29, 0, 0, 1, 1, 1, 0]' : 0.233734}
{'[1, 0, 2, 1, 2, 0, 1, 1, 0, 0, 27, 29, 0, 0, 1, 1, 1, 0]' : 0.233629}
{'[1, 0, 2, 1, 2, 0, 1, 1, 0, 0, 27, 29, 0, 0, 1, 1, 1, 0]' : 0.233569}
{'[1, 0, 2, 1, 2, 0, 1, 1, 0, 0, 27, 29, 0, 0, 1, 1, 1, 0]' : 0.233488}
{'[1, 0, 2, 1, 2, 0, 1, 1, 0, 0, 27, 29, 0, 0, 1, 1, 1, 0]' : 0.233407}
{'[1, 0, 2, 1, 2, 0, 1, 1, 0, 0, 27, 29, 0, 0, 1, 1, 1, 0]' : 0.233197}
{'[1, 0, 2, 1, 2, 0, 1, 1, 0, 0, 27, 29, 0, 0, 1, 1, 1, 0]' : 0.233738}
{'[1, 0, 2, 1, 2, 0, 1, 1, 0, 0, 27, 29, 0, 0, 1, 1, 1, 0]' : 0.233499}
{'[1, 0, 2, 1, 2, 0, 1, 1, 0, 0, 27, 29, 0, 0, 1, 1, 1, 0]' : 0.233387}
{'[1, 0, 2, 1, 2, 0, 1, 1, 0, 0, 27, 29, 0, 0, 1, 1, 1, 0]' : 0.23342}
{'[1, 0, 2, 1, 2, 0, 1, 1, 0, 0, 27, 29, 0, 0, 1, 1, 1, 0]' : 0.233148}
{'[1, 0, 2, 1, 2, 0, 1, 1, 0, 0, 27, 29, 0, 0, 1, 1, 1, 0]' : 0.233559}
{'[1, 0, 2, 1, 2, 0, 1, 1, 0, 0, 27, 29, 0, 0, 1, 1, 1, 0]' : 0.23328}
{'[1, 0, 2, 1, 2, 0, 1, 1, 0, 0, 27, 29, 0, 0, 1, 1, 1, 0]' : 0.233515}

out:
 ["{'[1, 0, 2, 1, 2, 0, 1, 1, 0, 0, 27, 29, 0, 0, 1, 1, 1, 0]' : 0.279}", "{'[1, 0, 2, 1, 2, 0, 1, 1, 0, 0, 27, 29, 0, 0, 1, 1, 1, 0]' : 0.278922}", "{'[1, 0, 2, 1, 2, 0, 1, 1, 0, 0, 27, 29, 0, 0, 1, 1, 1, 0]' : 0.247841}", "{'[1, 0, 2, 1, 2, 0, 1, 1, 0, 0, 27, 29, 0, 0, 1, 1, 1, 0]' : 0.233818}", "{'[1, 0, 2, 1, 2, 0, 1, 1, 0, 0, 27, 29, 0, 0, 1, 1, 1, 0]' : 0.233328}", "{'[1, 0, 2, 1, 2, 0, 1, 1, 0, 0, 27, 29, 0, 0, 1, 1, 1, 0]' : 0.23304}", "{'[1, 0, 2, 1, 2, 0, 1, 1, 0, 0, 27, 29, 0, 0, 1, 1, 1, 0]' : 0.233058}", "{'[1, 0, 2, 1, 2, 0, 1, 1, 0, 0, 27, 29, 0, 0, 1, 1, 1, 0]' : 0.233477}", "{'[1, 0, 2, 1, 2, 0, 1, 1, 0, 0, 27, 29, 0, 0, 1, 1, 1, 0]' : 0.233594}", "{'[1, 0, 2, 1, 2, 0, 1, 1, 0, 0, 27, 29, 0, 0, 1, 1, 1, 0]' : 0.233639}", "{'[1, 0, 2, 1, 2, 0, 1, 1, 0, 0, 27, 29, 0, 0, 1, 1, 1, 0]' : 0.233292}", "{'[1, 0, 2, 1, 2, 0, 1, 1, 0, 0, 27, 29, 0, 0, 1, 1, 1, 0]' : 0.233296}", "{'[1, 0, 2, 1, 2, 0, 1, 1, 0, 0, 27, 29, 0, 0, 1, 1, 1, 0]' : 0.233358}", "{'[1, 0, 2, 1, 2, 0, 1, 1, 0, 0, 27, 29, 0, 0, 1, 1, 1, 0]' : 0.233531}", "{'[1, 0, 2, 1, 2, 0, 1, 1, 0, 0, 27, 29, 0, 0, 1, 1, 1, 0]' : 0.233205}", "{'[1, 0, 2, 1, 2, 0, 1, 1, 0, 0, 27, 29, 0, 0, 1, 1, 1, 0]' : 0.233972}", "{'[1, 0, 2, 1, 2, 0, 1, 1, 0, 0, 27, 29, 0, 0, 1, 1, 1, 0]' : 0.233734}", "{'[1, 0, 2, 1, 2, 0, 1, 1, 0, 0, 27, 29, 0, 0, 1, 1, 1, 0]' : 0.233629}", "{'[1, 0, 2, 1, 2, 0, 1, 1, 0, 0, 27, 29, 0, 0, 1, 1, 1, 0]' : 0.233569}", "{'[1, 0, 2, 1, 2, 0, 1, 1, 0, 0, 27, 29, 0, 0, 1, 1, 1, 0]' : 0.233488}", "{'[1, 0, 2, 1, 2, 0, 1, 1, 0, 0, 27, 29, 0, 0, 1, 1, 1, 0]' : 0.233407}", "{'[1, 0, 2, 1, 2, 0, 1, 1, 0, 0, 27, 29, 0, 0, 1, 1, 1, 0]' : 0.233197}", "{'[1, 0, 2, 1, 2, 0, 1, 1, 0, 0, 27, 29, 0, 0, 1, 1, 1, 0]' : 0.233738}", "{'[1, 0, 2, 1, 2, 0, 1, 1, 0, 0, 27, 29, 0, 0, 1, 1, 1, 0]' : 0.233499}", "{'[1, 0, 2, 1, 2, 0, 1, 1, 0, 0, 27, 29, 0, 0, 1, 1, 1, 0]' : 0.233387}", "{'[1, 0, 2, 1, 2, 0, 1, 1, 0, 0, 27, 29, 0, 0, 1, 1, 1, 0]' : 0.23342}", "{'[1, 0, 2, 1, 2, 0, 1, 1, 0, 0, 27, 29, 0, 0, 1, 1, 1, 0]' : 0.233148}", "{'[1, 0, 2, 1, 2, 0, 1, 1, 0, 0, 27, 29, 0, 0, 1, 1, 1, 0]' : 0.233559}", "{'[1, 0, 2, 1, 2, 0, 1, 1, 0, 0, 27, 29, 0, 0, 1, 1, 1, 0]' : 0.23328}", "{'[1, 0, 2, 1, 2, 0, 1, 1, 0, 0, 27, 29, 0, 0, 1, 1, 1, 0]' : 0.233515}"]
returning from 'run': {'[1, 0, 2, 1, 2, 0, 1, 1, 0, 0, 27, 29, 0, 0, 1, 1, 1, 0]': ([0.279, 0.278922, 0.247841, 0.233818, 0.233328, 0.23304, 0.233058, 0.233477, 0.233594, 0.233639, 0.233292, 0.233296, 0.233358, 0.233531, 0.233205, 0.233972, 0.233734, 0.233629, 0.233569, 0.233488, 0.233407, 0.233197, 0.233738, 0.233499, 0.233387, 0.23342, 0.233148, 0.233559, 0.23328, 0.233515], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 2, 1, 2, 0, 1, 1, 0, 0, 27, 29, 0, 0, 1, 1, 1, 0]': ([0.279, 0.278922, 0.247841, 0.233818, 0.233328, 0.23304, 0.233058, 0.233477, 0.233594, 0.233639, 0.233292, 0.233296, 0.233358, 0.233531, 0.233205, 0.233972, 0.233734, 0.233629, 0.233569, 0.233488, 0.233407, 0.233197, 0.233738, 0.233499, 0.233387, 0.23342, 0.233148, 0.233559, 0.23328, 0.233515], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		80
        Multiplications: 	20
        Divisions: 		0
        Logical: 		0
        Reads: 			220
        Writes: 		67
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest76.exe __orio_perftest76.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest76.exe  
Program Test Output: 
{'[3, 0, 0, 1, 0, 2, 0, 0, 9, 3, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.110791}
{'[3, 0, 0, 1, 0, 2, 0, 0, 9, 3, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.11078}
{'[3, 0, 0, 1, 0, 2, 0, 0, 9, 3, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.110659}
{'[3, 0, 0, 1, 0, 2, 0, 0, 9, 3, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.110681}
{'[3, 0, 0, 1, 0, 2, 0, 0, 9, 3, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.110728}
{'[3, 0, 0, 1, 0, 2, 0, 0, 9, 3, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.110743}
{'[3, 0, 0, 1, 0, 2, 0, 0, 9, 3, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.104585}
{'[3, 0, 0, 1, 0, 2, 0, 0, 9, 3, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.09571}
{'[3, 0, 0, 1, 0, 2, 0, 0, 9, 3, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.095643}
{'[3, 0, 0, 1, 0, 2, 0, 0, 9, 3, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.095619}
{'[3, 0, 0, 1, 0, 2, 0, 0, 9, 3, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.095768}
{'[3, 0, 0, 1, 0, 2, 0, 0, 9, 3, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.0956461}
{'[3, 0, 0, 1, 0, 2, 0, 0, 9, 3, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.0956359}
{'[3, 0, 0, 1, 0, 2, 0, 0, 9, 3, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.0961721}
{'[3, 0, 0, 1, 0, 2, 0, 0, 9, 3, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.0959091}
{'[3, 0, 0, 1, 0, 2, 0, 0, 9, 3, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.096503}
{'[3, 0, 0, 1, 0, 2, 0, 0, 9, 3, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.0960898}
{'[3, 0, 0, 1, 0, 2, 0, 0, 9, 3, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.095649}
{'[3, 0, 0, 1, 0, 2, 0, 0, 9, 3, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.095751}
{'[3, 0, 0, 1, 0, 2, 0, 0, 9, 3, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.0957959}
{'[3, 0, 0, 1, 0, 2, 0, 0, 9, 3, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.0956571}
{'[3, 0, 0, 1, 0, 2, 0, 0, 9, 3, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.0957611}
{'[3, 0, 0, 1, 0, 2, 0, 0, 9, 3, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.095681}
{'[3, 0, 0, 1, 0, 2, 0, 0, 9, 3, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.0957589}
{'[3, 0, 0, 1, 0, 2, 0, 0, 9, 3, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.0957689}
{'[3, 0, 0, 1, 0, 2, 0, 0, 9, 3, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.096355}
{'[3, 0, 0, 1, 0, 2, 0, 0, 9, 3, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.0978351}
{'[3, 0, 0, 1, 0, 2, 0, 0, 9, 3, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.0957699}
{'[3, 0, 0, 1, 0, 2, 0, 0, 9, 3, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.0957401}
{'[3, 0, 0, 1, 0, 2, 0, 0, 9, 3, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.095777}

out:
 ["{'[3, 0, 0, 1, 0, 2, 0, 0, 9, 3, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.110791}", "{'[3, 0, 0, 1, 0, 2, 0, 0, 9, 3, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.11078}", "{'[3, 0, 0, 1, 0, 2, 0, 0, 9, 3, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.110659}", "{'[3, 0, 0, 1, 0, 2, 0, 0, 9, 3, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.110681}", "{'[3, 0, 0, 1, 0, 2, 0, 0, 9, 3, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.110728}", "{'[3, 0, 0, 1, 0, 2, 0, 0, 9, 3, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.110743}", "{'[3, 0, 0, 1, 0, 2, 0, 0, 9, 3, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.104585}", "{'[3, 0, 0, 1, 0, 2, 0, 0, 9, 3, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.09571}", "{'[3, 0, 0, 1, 0, 2, 0, 0, 9, 3, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.095643}", "{'[3, 0, 0, 1, 0, 2, 0, 0, 9, 3, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.095619}", "{'[3, 0, 0, 1, 0, 2, 0, 0, 9, 3, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.095768}", "{'[3, 0, 0, 1, 0, 2, 0, 0, 9, 3, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.0956461}", "{'[3, 0, 0, 1, 0, 2, 0, 0, 9, 3, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.0956359}", "{'[3, 0, 0, 1, 0, 2, 0, 0, 9, 3, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.0961721}", "{'[3, 0, 0, 1, 0, 2, 0, 0, 9, 3, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.0959091}", "{'[3, 0, 0, 1, 0, 2, 0, 0, 9, 3, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.096503}", "{'[3, 0, 0, 1, 0, 2, 0, 0, 9, 3, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.0960898}", "{'[3, 0, 0, 1, 0, 2, 0, 0, 9, 3, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.095649}", "{'[3, 0, 0, 1, 0, 2, 0, 0, 9, 3, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.095751}", "{'[3, 0, 0, 1, 0, 2, 0, 0, 9, 3, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.0957959}", "{'[3, 0, 0, 1, 0, 2, 0, 0, 9, 3, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.0956571}", "{'[3, 0, 0, 1, 0, 2, 0, 0, 9, 3, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.0957611}", "{'[3, 0, 0, 1, 0, 2, 0, 0, 9, 3, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.095681}", "{'[3, 0, 0, 1, 0, 2, 0, 0, 9, 3, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.0957589}", "{'[3, 0, 0, 1, 0, 2, 0, 0, 9, 3, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.0957689}", "{'[3, 0, 0, 1, 0, 2, 0, 0, 9, 3, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.096355}", "{'[3, 0, 0, 1, 0, 2, 0, 0, 9, 3, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.0978351}", "{'[3, 0, 0, 1, 0, 2, 0, 0, 9, 3, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.0957699}", "{'[3, 0, 0, 1, 0, 2, 0, 0, 9, 3, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.0957401}", "{'[3, 0, 0, 1, 0, 2, 0, 0, 9, 3, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.095777}"]
returning from 'run': {'[3, 0, 0, 1, 0, 2, 0, 0, 9, 3, 0, 0, 0, 0, 0, 1, 0, 1]': ([0.110791, 0.11078, 0.110659, 0.110681, 0.110728, 0.110743, 0.104585, 0.09571, 0.095643, 0.095619, 0.095768, 0.0956461, 0.0956359, 0.0961721, 0.0959091, 0.096503, 0.0960898, 0.095649, 0.095751, 0.0957959, 0.0956571, 0.0957611, 0.095681, 0.0957589, 0.0957689, 0.096355, 0.0978351, 0.0957699, 0.0957401, 0.095777], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 0, 0, 1, 0, 2, 0, 0, 9, 3, 0, 0, 0, 0, 0, 1, 0, 1]': ([0.110791, 0.11078, 0.110659, 0.110681, 0.110728, 0.110743, 0.104585, 0.09571, 0.095643, 0.095619, 0.095768, 0.0956461, 0.0956359, 0.0961721, 0.0959091, 0.096503, 0.0960898, 0.095649, 0.095751, 0.0957959, 0.0956571, 0.0957611, 0.095681, 0.0957589, 0.0957689, 0.096355, 0.0978351, 0.0957699, 0.0957401, 0.095777], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	5
        Additions: 		1251
        Multiplications: 	602
        Divisions: 		0
        Logical: 		0
        Reads: 			2634
        Writes: 		478
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest77.exe __orio_perftest77.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest77.exe  
Program Test Output: 
{'[0, 0, 4, 1, 0, 6, 1, 0, 0, 9, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.199133}
{'[0, 0, 4, 1, 0, 6, 1, 0, 0, 9, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.198867}
{'[0, 0, 4, 1, 0, 6, 1, 0, 0, 9, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.198904}
{'[0, 0, 4, 1, 0, 6, 1, 0, 0, 9, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.177137}
{'[0, 0, 4, 1, 0, 6, 1, 0, 0, 9, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.173951}
{'[0, 0, 4, 1, 0, 6, 1, 0, 0, 9, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.17446}
{'[0, 0, 4, 1, 0, 6, 1, 0, 0, 9, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.174311}
{'[0, 0, 4, 1, 0, 6, 1, 0, 0, 9, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.174016}
{'[0, 0, 4, 1, 0, 6, 1, 0, 0, 9, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.174027}
{'[0, 0, 4, 1, 0, 6, 1, 0, 0, 9, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.17396}
{'[0, 0, 4, 1, 0, 6, 1, 0, 0, 9, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.175109}
{'[0, 0, 4, 1, 0, 6, 1, 0, 0, 9, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.174848}
{'[0, 0, 4, 1, 0, 6, 1, 0, 0, 9, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.17545}
{'[0, 0, 4, 1, 0, 6, 1, 0, 0, 9, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.174625}
{'[0, 0, 4, 1, 0, 6, 1, 0, 0, 9, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.174778}
{'[0, 0, 4, 1, 0, 6, 1, 0, 0, 9, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.173968}
{'[0, 0, 4, 1, 0, 6, 1, 0, 0, 9, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.174236}
{'[0, 0, 4, 1, 0, 6, 1, 0, 0, 9, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.173731}
{'[0, 0, 4, 1, 0, 6, 1, 0, 0, 9, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.173974}
{'[0, 0, 4, 1, 0, 6, 1, 0, 0, 9, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.174555}
{'[0, 0, 4, 1, 0, 6, 1, 0, 0, 9, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.173759}
{'[0, 0, 4, 1, 0, 6, 1, 0, 0, 9, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.172835}
{'[0, 0, 4, 1, 0, 6, 1, 0, 0, 9, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.172875}
{'[0, 0, 4, 1, 0, 6, 1, 0, 0, 9, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.172236}
{'[0, 0, 4, 1, 0, 6, 1, 0, 0, 9, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.176063}
{'[0, 0, 4, 1, 0, 6, 1, 0, 0, 9, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.17478}
{'[0, 0, 4, 1, 0, 6, 1, 0, 0, 9, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.173352}
{'[0, 0, 4, 1, 0, 6, 1, 0, 0, 9, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.173231}
{'[0, 0, 4, 1, 0, 6, 1, 0, 0, 9, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.177523}
{'[0, 0, 4, 1, 0, 6, 1, 0, 0, 9, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.173606}

out:
 ["{'[0, 0, 4, 1, 0, 6, 1, 0, 0, 9, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.199133}", "{'[0, 0, 4, 1, 0, 6, 1, 0, 0, 9, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.198867}", "{'[0, 0, 4, 1, 0, 6, 1, 0, 0, 9, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.198904}", "{'[0, 0, 4, 1, 0, 6, 1, 0, 0, 9, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.177137}", "{'[0, 0, 4, 1, 0, 6, 1, 0, 0, 9, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.173951}", "{'[0, 0, 4, 1, 0, 6, 1, 0, 0, 9, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.17446}", "{'[0, 0, 4, 1, 0, 6, 1, 0, 0, 9, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.174311}", "{'[0, 0, 4, 1, 0, 6, 1, 0, 0, 9, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.174016}", "{'[0, 0, 4, 1, 0, 6, 1, 0, 0, 9, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.174027}", "{'[0, 0, 4, 1, 0, 6, 1, 0, 0, 9, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.17396}", "{'[0, 0, 4, 1, 0, 6, 1, 0, 0, 9, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.175109}", "{'[0, 0, 4, 1, 0, 6, 1, 0, 0, 9, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.174848}", "{'[0, 0, 4, 1, 0, 6, 1, 0, 0, 9, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.17545}", "{'[0, 0, 4, 1, 0, 6, 1, 0, 0, 9, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.174625}", "{'[0, 0, 4, 1, 0, 6, 1, 0, 0, 9, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.174778}", "{'[0, 0, 4, 1, 0, 6, 1, 0, 0, 9, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.173968}", "{'[0, 0, 4, 1, 0, 6, 1, 0, 0, 9, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.174236}", "{'[0, 0, 4, 1, 0, 6, 1, 0, 0, 9, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.173731}", "{'[0, 0, 4, 1, 0, 6, 1, 0, 0, 9, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.173974}", "{'[0, 0, 4, 1, 0, 6, 1, 0, 0, 9, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.174555}", "{'[0, 0, 4, 1, 0, 6, 1, 0, 0, 9, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.173759}", "{'[0, 0, 4, 1, 0, 6, 1, 0, 0, 9, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.172835}", "{'[0, 0, 4, 1, 0, 6, 1, 0, 0, 9, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.172875}", "{'[0, 0, 4, 1, 0, 6, 1, 0, 0, 9, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.172236}", "{'[0, 0, 4, 1, 0, 6, 1, 0, 0, 9, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.176063}", "{'[0, 0, 4, 1, 0, 6, 1, 0, 0, 9, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.17478}", "{'[0, 0, 4, 1, 0, 6, 1, 0, 0, 9, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.173352}", "{'[0, 0, 4, 1, 0, 6, 1, 0, 0, 9, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.173231}", "{'[0, 0, 4, 1, 0, 6, 1, 0, 0, 9, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.177523}", "{'[0, 0, 4, 1, 0, 6, 1, 0, 0, 9, 0, 4, 2, 0, 0, 1, 0, 0]' : 0.173606}"]
returning from 'run': {'[0, 0, 4, 1, 0, 6, 1, 0, 0, 9, 0, 4, 2, 0, 0, 1, 0, 0]': ([0.199133, 0.198867, 0.198904, 0.177137, 0.173951, 0.17446, 0.174311, 0.174016, 0.174027, 0.17396, 0.175109, 0.174848, 0.17545, 0.174625, 0.174778, 0.173968, 0.174236, 0.173731, 0.173974, 0.174555, 0.173759, 0.172835, 0.172875, 0.172236, 0.176063, 0.17478, 0.173352, 0.173231, 0.177523, 0.173606], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 4, 1, 0, 6, 1, 0, 0, 9, 0, 4, 2, 0, 0, 1, 0, 0]': ([0.199133, 0.198867, 0.198904, 0.177137, 0.173951, 0.17446, 0.174311, 0.174016, 0.174027, 0.17396, 0.175109, 0.174848, 0.17545, 0.174625, 0.174778, 0.173968, 0.174236, 0.173731, 0.173974, 0.174555, 0.173759, 0.172835, 0.172875, 0.172236, 0.176063, 0.17478, 0.173352, 0.173231, 0.177523, 0.173606], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	6
        Additions: 		1667
        Multiplications: 	684
        Divisions: 		0
        Logical: 		0
        Reads: 			3250
        Writes: 		583
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest78.exe __orio_perftest78.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest78.exe  
Program Test Output: 
{'[1, 0, 2, 1, 6, 4, 1, 1, 29, 0, 0, 28, 1, 1, 0, 1, 0, 1]' : 0.13676}
{'[1, 0, 2, 1, 6, 4, 1, 1, 29, 0, 0, 28, 1, 1, 0, 1, 0, 1]' : 0.136687}
{'[1, 0, 2, 1, 6, 4, 1, 1, 29, 0, 0, 28, 1, 1, 0, 1, 0, 1]' : 0.13664}
{'[1, 0, 2, 1, 6, 4, 1, 1, 29, 0, 0, 28, 1, 1, 0, 1, 0, 1]' : 0.136589}
{'[1, 0, 2, 1, 6, 4, 1, 1, 29, 0, 0, 28, 1, 1, 0, 1, 0, 1]' : 0.134649}
{'[1, 0, 2, 1, 6, 4, 1, 1, 29, 0, 0, 28, 1, 1, 0, 1, 0, 1]' : 0.117729}
{'[1, 0, 2, 1, 6, 4, 1, 1, 29, 0, 0, 28, 1, 1, 0, 1, 0, 1]' : 0.116859}
{'[1, 0, 2, 1, 6, 4, 1, 1, 29, 0, 0, 28, 1, 1, 0, 1, 0, 1]' : 0.117264}
{'[1, 0, 2, 1, 6, 4, 1, 1, 29, 0, 0, 28, 1, 1, 0, 1, 0, 1]' : 0.117259}
{'[1, 0, 2, 1, 6, 4, 1, 1, 29, 0, 0, 28, 1, 1, 0, 1, 0, 1]' : 0.117511}
{'[1, 0, 2, 1, 6, 4, 1, 1, 29, 0, 0, 28, 1, 1, 0, 1, 0, 1]' : 0.116951}
{'[1, 0, 2, 1, 6, 4, 1, 1, 29, 0, 0, 28, 1, 1, 0, 1, 0, 1]' : 0.116991}
{'[1, 0, 2, 1, 6, 4, 1, 1, 29, 0, 0, 28, 1, 1, 0, 1, 0, 1]' : 0.116912}
{'[1, 0, 2, 1, 6, 4, 1, 1, 29, 0, 0, 28, 1, 1, 0, 1, 0, 1]' : 0.117137}
{'[1, 0, 2, 1, 6, 4, 1, 1, 29, 0, 0, 28, 1, 1, 0, 1, 0, 1]' : 0.117633}
{'[1, 0, 2, 1, 6, 4, 1, 1, 29, 0, 0, 28, 1, 1, 0, 1, 0, 1]' : 0.117082}
{'[1, 0, 2, 1, 6, 4, 1, 1, 29, 0, 0, 28, 1, 1, 0, 1, 0, 1]' : 0.117181}
{'[1, 0, 2, 1, 6, 4, 1, 1, 29, 0, 0, 28, 1, 1, 0, 1, 0, 1]' : 0.117467}
{'[1, 0, 2, 1, 6, 4, 1, 1, 29, 0, 0, 28, 1, 1, 0, 1, 0, 1]' : 0.117299}
{'[1, 0, 2, 1, 6, 4, 1, 1, 29, 0, 0, 28, 1, 1, 0, 1, 0, 1]' : 0.117003}
{'[1, 0, 2, 1, 6, 4, 1, 1, 29, 0, 0, 28, 1, 1, 0, 1, 0, 1]' : 0.117262}
{'[1, 0, 2, 1, 6, 4, 1, 1, 29, 0, 0, 28, 1, 1, 0, 1, 0, 1]' : 0.117262}
{'[1, 0, 2, 1, 6, 4, 1, 1, 29, 0, 0, 28, 1, 1, 0, 1, 0, 1]' : 0.119503}
{'[1, 0, 2, 1, 6, 4, 1, 1, 29, 0, 0, 28, 1, 1, 0, 1, 0, 1]' : 0.117965}
{'[1, 0, 2, 1, 6, 4, 1, 1, 29, 0, 0, 28, 1, 1, 0, 1, 0, 1]' : 0.11718}
{'[1, 0, 2, 1, 6, 4, 1, 1, 29, 0, 0, 28, 1, 1, 0, 1, 0, 1]' : 0.117079}
{'[1, 0, 2, 1, 6, 4, 1, 1, 29, 0, 0, 28, 1, 1, 0, 1, 0, 1]' : 0.117215}
{'[1, 0, 2, 1, 6, 4, 1, 1, 29, 0, 0, 28, 1, 1, 0, 1, 0, 1]' : 0.117317}
{'[1, 0, 2, 1, 6, 4, 1, 1, 29, 0, 0, 28, 1, 1, 0, 1, 0, 1]' : 0.117265}
{'[1, 0, 2, 1, 6, 4, 1, 1, 29, 0, 0, 28, 1, 1, 0, 1, 0, 1]' : 0.117274}

out:
 ["{'[1, 0, 2, 1, 6, 4, 1, 1, 29, 0, 0, 28, 1, 1, 0, 1, 0, 1]' : 0.13676}", "{'[1, 0, 2, 1, 6, 4, 1, 1, 29, 0, 0, 28, 1, 1, 0, 1, 0, 1]' : 0.136687}", "{'[1, 0, 2, 1, 6, 4, 1, 1, 29, 0, 0, 28, 1, 1, 0, 1, 0, 1]' : 0.13664}", "{'[1, 0, 2, 1, 6, 4, 1, 1, 29, 0, 0, 28, 1, 1, 0, 1, 0, 1]' : 0.136589}", "{'[1, 0, 2, 1, 6, 4, 1, 1, 29, 0, 0, 28, 1, 1, 0, 1, 0, 1]' : 0.134649}", "{'[1, 0, 2, 1, 6, 4, 1, 1, 29, 0, 0, 28, 1, 1, 0, 1, 0, 1]' : 0.117729}", "{'[1, 0, 2, 1, 6, 4, 1, 1, 29, 0, 0, 28, 1, 1, 0, 1, 0, 1]' : 0.116859}", "{'[1, 0, 2, 1, 6, 4, 1, 1, 29, 0, 0, 28, 1, 1, 0, 1, 0, 1]' : 0.117264}", "{'[1, 0, 2, 1, 6, 4, 1, 1, 29, 0, 0, 28, 1, 1, 0, 1, 0, 1]' : 0.117259}", "{'[1, 0, 2, 1, 6, 4, 1, 1, 29, 0, 0, 28, 1, 1, 0, 1, 0, 1]' : 0.117511}", "{'[1, 0, 2, 1, 6, 4, 1, 1, 29, 0, 0, 28, 1, 1, 0, 1, 0, 1]' : 0.116951}", "{'[1, 0, 2, 1, 6, 4, 1, 1, 29, 0, 0, 28, 1, 1, 0, 1, 0, 1]' : 0.116991}", "{'[1, 0, 2, 1, 6, 4, 1, 1, 29, 0, 0, 28, 1, 1, 0, 1, 0, 1]' : 0.116912}", "{'[1, 0, 2, 1, 6, 4, 1, 1, 29, 0, 0, 28, 1, 1, 0, 1, 0, 1]' : 0.117137}", "{'[1, 0, 2, 1, 6, 4, 1, 1, 29, 0, 0, 28, 1, 1, 0, 1, 0, 1]' : 0.117633}", "{'[1, 0, 2, 1, 6, 4, 1, 1, 29, 0, 0, 28, 1, 1, 0, 1, 0, 1]' : 0.117082}", "{'[1, 0, 2, 1, 6, 4, 1, 1, 29, 0, 0, 28, 1, 1, 0, 1, 0, 1]' : 0.117181}", "{'[1, 0, 2, 1, 6, 4, 1, 1, 29, 0, 0, 28, 1, 1, 0, 1, 0, 1]' : 0.117467}", "{'[1, 0, 2, 1, 6, 4, 1, 1, 29, 0, 0, 28, 1, 1, 0, 1, 0, 1]' : 0.117299}", "{'[1, 0, 2, 1, 6, 4, 1, 1, 29, 0, 0, 28, 1, 1, 0, 1, 0, 1]' : 0.117003}", "{'[1, 0, 2, 1, 6, 4, 1, 1, 29, 0, 0, 28, 1, 1, 0, 1, 0, 1]' : 0.117262}", "{'[1, 0, 2, 1, 6, 4, 1, 1, 29, 0, 0, 28, 1, 1, 0, 1, 0, 1]' : 0.117262}", "{'[1, 0, 2, 1, 6, 4, 1, 1, 29, 0, 0, 28, 1, 1, 0, 1, 0, 1]' : 0.119503}", "{'[1, 0, 2, 1, 6, 4, 1, 1, 29, 0, 0, 28, 1, 1, 0, 1, 0, 1]' : 0.117965}", "{'[1, 0, 2, 1, 6, 4, 1, 1, 29, 0, 0, 28, 1, 1, 0, 1, 0, 1]' : 0.11718}", "{'[1, 0, 2, 1, 6, 4, 1, 1, 29, 0, 0, 28, 1, 1, 0, 1, 0, 1]' : 0.117079}", "{'[1, 0, 2, 1, 6, 4, 1, 1, 29, 0, 0, 28, 1, 1, 0, 1, 0, 1]' : 0.117215}", "{'[1, 0, 2, 1, 6, 4, 1, 1, 29, 0, 0, 28, 1, 1, 0, 1, 0, 1]' : 0.117317}", "{'[1, 0, 2, 1, 6, 4, 1, 1, 29, 0, 0, 28, 1, 1, 0, 1, 0, 1]' : 0.117265}", "{'[1, 0, 2, 1, 6, 4, 1, 1, 29, 0, 0, 28, 1, 1, 0, 1, 0, 1]' : 0.117274}"]
returning from 'run': {'[1, 0, 2, 1, 6, 4, 1, 1, 29, 0, 0, 28, 1, 1, 0, 1, 0, 1]': ([0.13676, 0.136687, 0.13664, 0.136589, 0.134649, 0.117729, 0.116859, 0.117264, 0.117259, 0.117511, 0.116951, 0.116991, 0.116912, 0.117137, 0.117633, 0.117082, 0.117181, 0.117467, 0.117299, 0.117003, 0.117262, 0.117262, 0.119503, 0.117965, 0.11718, 0.117079, 0.117215, 0.117317, 0.117265, 0.117274], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 2, 1, 6, 4, 1, 1, 29, 0, 0, 28, 1, 1, 0, 1, 0, 1]': ([0.13676, 0.136687, 0.13664, 0.136589, 0.134649, 0.117729, 0.116859, 0.117264, 0.117259, 0.117511, 0.116951, 0.116991, 0.116912, 0.117137, 0.117633, 0.117082, 0.117181, 0.117467, 0.117299, 0.117003, 0.117262, 0.117262, 0.119503, 0.117965, 0.11718, 0.117079, 0.117215, 0.117317, 0.117265, 0.117274], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		3310
        Multiplications: 	1620
        Divisions: 		0
        Logical: 		0
        Reads: 			6194
        Writes: 		1001
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest79.exe __orio_perftest79.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest79.exe  
Program Test Output: 
{'[0, 0, 0, 1, 6, 0, 0, 0, 28, 25, 20, 0, 0, 0, 1, 1, 0, 0]' : 0.146}
{'[0, 0, 0, 1, 6, 0, 0, 0, 28, 25, 20, 0, 0, 0, 1, 1, 0, 0]' : 0.131819}
{'[0, 0, 0, 1, 6, 0, 0, 0, 28, 25, 20, 0, 0, 0, 1, 1, 0, 0]' : 0.133275}
{'[0, 0, 0, 1, 6, 0, 0, 0, 28, 25, 20, 0, 0, 0, 1, 1, 0, 0]' : 0.131738}
{'[0, 0, 0, 1, 6, 0, 0, 0, 28, 25, 20, 0, 0, 0, 1, 1, 0, 0]' : 0.131837}
{'[0, 0, 0, 1, 6, 0, 0, 0, 28, 25, 20, 0, 0, 0, 1, 1, 0, 0]' : 0.133191}
{'[0, 0, 0, 1, 6, 0, 0, 0, 28, 25, 20, 0, 0, 0, 1, 1, 0, 0]' : 0.135647}
{'[0, 0, 0, 1, 6, 0, 0, 0, 28, 25, 20, 0, 0, 0, 1, 1, 0, 0]' : 0.135717}
{'[0, 0, 0, 1, 6, 0, 0, 0, 28, 25, 20, 0, 0, 0, 1, 1, 0, 0]' : 0.135699}
{'[0, 0, 0, 1, 6, 0, 0, 0, 28, 25, 20, 0, 0, 0, 1, 1, 0, 0]' : 0.135772}
{'[0, 0, 0, 1, 6, 0, 0, 0, 28, 25, 20, 0, 0, 0, 1, 1, 0, 0]' : 0.135694}
{'[0, 0, 0, 1, 6, 0, 0, 0, 28, 25, 20, 0, 0, 0, 1, 1, 0, 0]' : 0.13579}
{'[0, 0, 0, 1, 6, 0, 0, 0, 28, 25, 20, 0, 0, 0, 1, 1, 0, 0]' : 0.136099}
{'[0, 0, 0, 1, 6, 0, 0, 0, 28, 25, 20, 0, 0, 0, 1, 1, 0, 0]' : 0.135225}
{'[0, 0, 0, 1, 6, 0, 0, 0, 28, 25, 20, 0, 0, 0, 1, 1, 0, 0]' : 0.131811}
{'[0, 0, 0, 1, 6, 0, 0, 0, 28, 25, 20, 0, 0, 0, 1, 1, 0, 0]' : 0.132168}
{'[0, 0, 0, 1, 6, 0, 0, 0, 28, 25, 20, 0, 0, 0, 1, 1, 0, 0]' : 0.134117}
{'[0, 0, 0, 1, 6, 0, 0, 0, 28, 25, 20, 0, 0, 0, 1, 1, 0, 0]' : 0.135824}
{'[0, 0, 0, 1, 6, 0, 0, 0, 28, 25, 20, 0, 0, 0, 1, 1, 0, 0]' : 0.13564}
{'[0, 0, 0, 1, 6, 0, 0, 0, 28, 25, 20, 0, 0, 0, 1, 1, 0, 0]' : 0.135684}
{'[0, 0, 0, 1, 6, 0, 0, 0, 28, 25, 20, 0, 0, 0, 1, 1, 0, 0]' : 0.135786}
{'[0, 0, 0, 1, 6, 0, 0, 0, 28, 25, 20, 0, 0, 0, 1, 1, 0, 0]' : 0.135694}
{'[0, 0, 0, 1, 6, 0, 0, 0, 28, 25, 20, 0, 0, 0, 1, 1, 0, 0]' : 0.135796}
{'[0, 0, 0, 1, 6, 0, 0, 0, 28, 25, 20, 0, 0, 0, 1, 1, 0, 0]' : 0.135814}
{'[0, 0, 0, 1, 6, 0, 0, 0, 28, 25, 20, 0, 0, 0, 1, 1, 0, 0]' : 0.135655}
{'[0, 0, 0, 1, 6, 0, 0, 0, 28, 25, 20, 0, 0, 0, 1, 1, 0, 0]' : 0.13582}
{'[0, 0, 0, 1, 6, 0, 0, 0, 28, 25, 20, 0, 0, 0, 1, 1, 0, 0]' : 0.135977}
{'[0, 0, 0, 1, 6, 0, 0, 0, 28, 25, 20, 0, 0, 0, 1, 1, 0, 0]' : 0.135843}
{'[0, 0, 0, 1, 6, 0, 0, 0, 28, 25, 20, 0, 0, 0, 1, 1, 0, 0]' : 0.135626}
{'[0, 0, 0, 1, 6, 0, 0, 0, 28, 25, 20, 0, 0, 0, 1, 1, 0, 0]' : 0.13578}

out:
 ["{'[0, 0, 0, 1, 6, 0, 0, 0, 28, 25, 20, 0, 0, 0, 1, 1, 0, 0]' : 0.146}", "{'[0, 0, 0, 1, 6, 0, 0, 0, 28, 25, 20, 0, 0, 0, 1, 1, 0, 0]' : 0.131819}", "{'[0, 0, 0, 1, 6, 0, 0, 0, 28, 25, 20, 0, 0, 0, 1, 1, 0, 0]' : 0.133275}", "{'[0, 0, 0, 1, 6, 0, 0, 0, 28, 25, 20, 0, 0, 0, 1, 1, 0, 0]' : 0.131738}", "{'[0, 0, 0, 1, 6, 0, 0, 0, 28, 25, 20, 0, 0, 0, 1, 1, 0, 0]' : 0.131837}", "{'[0, 0, 0, 1, 6, 0, 0, 0, 28, 25, 20, 0, 0, 0, 1, 1, 0, 0]' : 0.133191}", "{'[0, 0, 0, 1, 6, 0, 0, 0, 28, 25, 20, 0, 0, 0, 1, 1, 0, 0]' : 0.135647}", "{'[0, 0, 0, 1, 6, 0, 0, 0, 28, 25, 20, 0, 0, 0, 1, 1, 0, 0]' : 0.135717}", "{'[0, 0, 0, 1, 6, 0, 0, 0, 28, 25, 20, 0, 0, 0, 1, 1, 0, 0]' : 0.135699}", "{'[0, 0, 0, 1, 6, 0, 0, 0, 28, 25, 20, 0, 0, 0, 1, 1, 0, 0]' : 0.135772}", "{'[0, 0, 0, 1, 6, 0, 0, 0, 28, 25, 20, 0, 0, 0, 1, 1, 0, 0]' : 0.135694}", "{'[0, 0, 0, 1, 6, 0, 0, 0, 28, 25, 20, 0, 0, 0, 1, 1, 0, 0]' : 0.13579}", "{'[0, 0, 0, 1, 6, 0, 0, 0, 28, 25, 20, 0, 0, 0, 1, 1, 0, 0]' : 0.136099}", "{'[0, 0, 0, 1, 6, 0, 0, 0, 28, 25, 20, 0, 0, 0, 1, 1, 0, 0]' : 0.135225}", "{'[0, 0, 0, 1, 6, 0, 0, 0, 28, 25, 20, 0, 0, 0, 1, 1, 0, 0]' : 0.131811}", "{'[0, 0, 0, 1, 6, 0, 0, 0, 28, 25, 20, 0, 0, 0, 1, 1, 0, 0]' : 0.132168}", "{'[0, 0, 0, 1, 6, 0, 0, 0, 28, 25, 20, 0, 0, 0, 1, 1, 0, 0]' : 0.134117}", "{'[0, 0, 0, 1, 6, 0, 0, 0, 28, 25, 20, 0, 0, 0, 1, 1, 0, 0]' : 0.135824}", "{'[0, 0, 0, 1, 6, 0, 0, 0, 28, 25, 20, 0, 0, 0, 1, 1, 0, 0]' : 0.13564}", "{'[0, 0, 0, 1, 6, 0, 0, 0, 28, 25, 20, 0, 0, 0, 1, 1, 0, 0]' : 0.135684}", "{'[0, 0, 0, 1, 6, 0, 0, 0, 28, 25, 20, 0, 0, 0, 1, 1, 0, 0]' : 0.135786}", "{'[0, 0, 0, 1, 6, 0, 0, 0, 28, 25, 20, 0, 0, 0, 1, 1, 0, 0]' : 0.135694}", "{'[0, 0, 0, 1, 6, 0, 0, 0, 28, 25, 20, 0, 0, 0, 1, 1, 0, 0]' : 0.135796}", "{'[0, 0, 0, 1, 6, 0, 0, 0, 28, 25, 20, 0, 0, 0, 1, 1, 0, 0]' : 0.135814}", "{'[0, 0, 0, 1, 6, 0, 0, 0, 28, 25, 20, 0, 0, 0, 1, 1, 0, 0]' : 0.135655}", "{'[0, 0, 0, 1, 6, 0, 0, 0, 28, 25, 20, 0, 0, 0, 1, 1, 0, 0]' : 0.13582}", "{'[0, 0, 0, 1, 6, 0, 0, 0, 28, 25, 20, 0, 0, 0, 1, 1, 0, 0]' : 0.135977}", "{'[0, 0, 0, 1, 6, 0, 0, 0, 28, 25, 20, 0, 0, 0, 1, 1, 0, 0]' : 0.135843}", "{'[0, 0, 0, 1, 6, 0, 0, 0, 28, 25, 20, 0, 0, 0, 1, 1, 0, 0]' : 0.135626}", "{'[0, 0, 0, 1, 6, 0, 0, 0, 28, 25, 20, 0, 0, 0, 1, 1, 0, 0]' : 0.13578}"]
returning from 'run': {'[0, 0, 0, 1, 6, 0, 0, 0, 28, 25, 20, 0, 0, 0, 1, 1, 0, 0]': ([0.146, 0.131819, 0.133275, 0.131738, 0.131837, 0.133191, 0.135647, 0.135717, 0.135699, 0.135772, 0.135694, 0.13579, 0.136099, 0.135225, 0.131811, 0.132168, 0.134117, 0.135824, 0.13564, 0.135684, 0.135786, 0.135694, 0.135796, 0.135814, 0.135655, 0.13582, 0.135977, 0.135843, 0.135626, 0.13578], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 0, 1, 6, 0, 0, 0, 28, 25, 20, 0, 0, 0, 1, 1, 0, 0]': ([0.146, 0.131819, 0.133275, 0.131738, 0.131837, 0.133191, 0.135647, 0.135717, 0.135699, 0.135772, 0.135694, 0.13579, 0.136099, 0.135225, 0.131811, 0.132168, 0.134117, 0.135824, 0.13564, 0.135684, 0.135786, 0.135694, 0.135796, 0.135814, 0.135655, 0.13582, 0.135977, 0.135843, 0.135626, 0.13578], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	128
        Max loop nest depth: 	4
        Additions: 		9618
        Multiplications: 	3120
        Divisions: 		0
        Logical: 		0
        Reads: 			18598
        Writes: 		3571
        Comparisons:		128
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest80.exe __orio_perftest80.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest80.exe  
Program Test Output: 
{'[0, 0, 0, 1, 0, 2, 1, 1, 1, 26, 0, 23, 2, 0, 0, 1, 1, 1]' : 0.202067}
{'[0, 0, 0, 1, 0, 2, 1, 1, 1, 26, 0, 23, 2, 0, 0, 1, 1, 1]' : 0.201653}
{'[0, 0, 0, 1, 0, 2, 1, 1, 1, 26, 0, 23, 2, 0, 0, 1, 1, 1]' : 0.195212}
{'[0, 0, 0, 1, 0, 2, 1, 1, 1, 26, 0, 23, 2, 0, 0, 1, 1, 1]' : 0.177055}
{'[0, 0, 0, 1, 0, 2, 1, 1, 1, 26, 0, 23, 2, 0, 0, 1, 1, 1]' : 0.176684}
{'[0, 0, 0, 1, 0, 2, 1, 1, 1, 26, 0, 23, 2, 0, 0, 1, 1, 1]' : 0.176681}
{'[0, 0, 0, 1, 0, 2, 1, 1, 1, 26, 0, 23, 2, 0, 0, 1, 1, 1]' : 0.176457}
{'[0, 0, 0, 1, 0, 2, 1, 1, 1, 26, 0, 23, 2, 0, 0, 1, 1, 1]' : 0.17637}
{'[0, 0, 0, 1, 0, 2, 1, 1, 1, 26, 0, 23, 2, 0, 0, 1, 1, 1]' : 0.176576}
{'[0, 0, 0, 1, 0, 2, 1, 1, 1, 26, 0, 23, 2, 0, 0, 1, 1, 1]' : 0.176651}
{'[0, 0, 0, 1, 0, 2, 1, 1, 1, 26, 0, 23, 2, 0, 0, 1, 1, 1]' : 0.177289}
{'[0, 0, 0, 1, 0, 2, 1, 1, 1, 26, 0, 23, 2, 0, 0, 1, 1, 1]' : 0.176988}
{'[0, 0, 0, 1, 0, 2, 1, 1, 1, 26, 0, 23, 2, 0, 0, 1, 1, 1]' : 0.177113}
{'[0, 0, 0, 1, 0, 2, 1, 1, 1, 26, 0, 23, 2, 0, 0, 1, 1, 1]' : 0.176567}
{'[0, 0, 0, 1, 0, 2, 1, 1, 1, 26, 0, 23, 2, 0, 0, 1, 1, 1]' : 0.17644}
{'[0, 0, 0, 1, 0, 2, 1, 1, 1, 26, 0, 23, 2, 0, 0, 1, 1, 1]' : 0.176714}
{'[0, 0, 0, 1, 0, 2, 1, 1, 1, 26, 0, 23, 2, 0, 0, 1, 1, 1]' : 0.176682}
{'[0, 0, 0, 1, 0, 2, 1, 1, 1, 26, 0, 23, 2, 0, 0, 1, 1, 1]' : 0.176565}
{'[0, 0, 0, 1, 0, 2, 1, 1, 1, 26, 0, 23, 2, 0, 0, 1, 1, 1]' : 0.177105}
{'[0, 0, 0, 1, 0, 2, 1, 1, 1, 26, 0, 23, 2, 0, 0, 1, 1, 1]' : 0.177169}
{'[0, 0, 0, 1, 0, 2, 1, 1, 1, 26, 0, 23, 2, 0, 0, 1, 1, 1]' : 0.176539}
{'[0, 0, 0, 1, 0, 2, 1, 1, 1, 26, 0, 23, 2, 0, 0, 1, 1, 1]' : 0.176232}
{'[0, 0, 0, 1, 0, 2, 1, 1, 1, 26, 0, 23, 2, 0, 0, 1, 1, 1]' : 0.176394}
{'[0, 0, 0, 1, 0, 2, 1, 1, 1, 26, 0, 23, 2, 0, 0, 1, 1, 1]' : 0.176353}
{'[0, 0, 0, 1, 0, 2, 1, 1, 1, 26, 0, 23, 2, 0, 0, 1, 1, 1]' : 0.177415}
{'[0, 0, 0, 1, 0, 2, 1, 1, 1, 26, 0, 23, 2, 0, 0, 1, 1, 1]' : 0.1765}
{'[0, 0, 0, 1, 0, 2, 1, 1, 1, 26, 0, 23, 2, 0, 0, 1, 1, 1]' : 0.176756}
{'[0, 0, 0, 1, 0, 2, 1, 1, 1, 26, 0, 23, 2, 0, 0, 1, 1, 1]' : 0.177493}
{'[0, 0, 0, 1, 0, 2, 1, 1, 1, 26, 0, 23, 2, 0, 0, 1, 1, 1]' : 0.177678}
{'[0, 0, 0, 1, 0, 2, 1, 1, 1, 26, 0, 23, 2, 0, 0, 1, 1, 1]' : 0.176101}

out:
 ["{'[0, 0, 0, 1, 0, 2, 1, 1, 1, 26, 0, 23, 2, 0, 0, 1, 1, 1]' : 0.202067}", "{'[0, 0, 0, 1, 0, 2, 1, 1, 1, 26, 0, 23, 2, 0, 0, 1, 1, 1]' : 0.201653}", "{'[0, 0, 0, 1, 0, 2, 1, 1, 1, 26, 0, 23, 2, 0, 0, 1, 1, 1]' : 0.195212}", "{'[0, 0, 0, 1, 0, 2, 1, 1, 1, 26, 0, 23, 2, 0, 0, 1, 1, 1]' : 0.177055}", "{'[0, 0, 0, 1, 0, 2, 1, 1, 1, 26, 0, 23, 2, 0, 0, 1, 1, 1]' : 0.176684}", "{'[0, 0, 0, 1, 0, 2, 1, 1, 1, 26, 0, 23, 2, 0, 0, 1, 1, 1]' : 0.176681}", "{'[0, 0, 0, 1, 0, 2, 1, 1, 1, 26, 0, 23, 2, 0, 0, 1, 1, 1]' : 0.176457}", "{'[0, 0, 0, 1, 0, 2, 1, 1, 1, 26, 0, 23, 2, 0, 0, 1, 1, 1]' : 0.17637}", "{'[0, 0, 0, 1, 0, 2, 1, 1, 1, 26, 0, 23, 2, 0, 0, 1, 1, 1]' : 0.176576}", "{'[0, 0, 0, 1, 0, 2, 1, 1, 1, 26, 0, 23, 2, 0, 0, 1, 1, 1]' : 0.176651}", "{'[0, 0, 0, 1, 0, 2, 1, 1, 1, 26, 0, 23, 2, 0, 0, 1, 1, 1]' : 0.177289}", "{'[0, 0, 0, 1, 0, 2, 1, 1, 1, 26, 0, 23, 2, 0, 0, 1, 1, 1]' : 0.176988}", "{'[0, 0, 0, 1, 0, 2, 1, 1, 1, 26, 0, 23, 2, 0, 0, 1, 1, 1]' : 0.177113}", "{'[0, 0, 0, 1, 0, 2, 1, 1, 1, 26, 0, 23, 2, 0, 0, 1, 1, 1]' : 0.176567}", "{'[0, 0, 0, 1, 0, 2, 1, 1, 1, 26, 0, 23, 2, 0, 0, 1, 1, 1]' : 0.17644}", "{'[0, 0, 0, 1, 0, 2, 1, 1, 1, 26, 0, 23, 2, 0, 0, 1, 1, 1]' : 0.176714}", "{'[0, 0, 0, 1, 0, 2, 1, 1, 1, 26, 0, 23, 2, 0, 0, 1, 1, 1]' : 0.176682}", "{'[0, 0, 0, 1, 0, 2, 1, 1, 1, 26, 0, 23, 2, 0, 0, 1, 1, 1]' : 0.176565}", "{'[0, 0, 0, 1, 0, 2, 1, 1, 1, 26, 0, 23, 2, 0, 0, 1, 1, 1]' : 0.177105}", "{'[0, 0, 0, 1, 0, 2, 1, 1, 1, 26, 0, 23, 2, 0, 0, 1, 1, 1]' : 0.177169}", "{'[0, 0, 0, 1, 0, 2, 1, 1, 1, 26, 0, 23, 2, 0, 0, 1, 1, 1]' : 0.176539}", "{'[0, 0, 0, 1, 0, 2, 1, 1, 1, 26, 0, 23, 2, 0, 0, 1, 1, 1]' : 0.176232}", "{'[0, 0, 0, 1, 0, 2, 1, 1, 1, 26, 0, 23, 2, 0, 0, 1, 1, 1]' : 0.176394}", "{'[0, 0, 0, 1, 0, 2, 1, 1, 1, 26, 0, 23, 2, 0, 0, 1, 1, 1]' : 0.176353}", "{'[0, 0, 0, 1, 0, 2, 1, 1, 1, 26, 0, 23, 2, 0, 0, 1, 1, 1]' : 0.177415}", "{'[0, 0, 0, 1, 0, 2, 1, 1, 1, 26, 0, 23, 2, 0, 0, 1, 1, 1]' : 0.1765}", "{'[0, 0, 0, 1, 0, 2, 1, 1, 1, 26, 0, 23, 2, 0, 0, 1, 1, 1]' : 0.176756}", "{'[0, 0, 0, 1, 0, 2, 1, 1, 1, 26, 0, 23, 2, 0, 0, 1, 1, 1]' : 0.177493}", "{'[0, 0, 0, 1, 0, 2, 1, 1, 1, 26, 0, 23, 2, 0, 0, 1, 1, 1]' : 0.177678}", "{'[0, 0, 0, 1, 0, 2, 1, 1, 1, 26, 0, 23, 2, 0, 0, 1, 1, 1]' : 0.176101}"]
returning from 'run': {'[0, 0, 0, 1, 0, 2, 1, 1, 1, 26, 0, 23, 2, 0, 0, 1, 1, 1]': ([0.202067, 0.201653, 0.195212, 0.177055, 0.176684, 0.176681, 0.176457, 0.17637, 0.176576, 0.176651, 0.177289, 0.176988, 0.177113, 0.176567, 0.17644, 0.176714, 0.176682, 0.176565, 0.177105, 0.177169, 0.176539, 0.176232, 0.176394, 0.176353, 0.177415, 0.1765, 0.176756, 0.177493, 0.177678, 0.176101], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 0, 1, 0, 2, 1, 1, 1, 26, 0, 23, 2, 0, 0, 1, 1, 1]': ([0.202067, 0.201653, 0.195212, 0.177055, 0.176684, 0.176681, 0.176457, 0.17637, 0.176576, 0.176651, 0.177289, 0.176988, 0.177113, 0.176567, 0.17644, 0.176714, 0.176682, 0.176565, 0.177105, 0.177169, 0.176539, 0.176232, 0.176394, 0.176353, 0.177415, 0.1765, 0.176756, 0.177493, 0.177678, 0.176101], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	104
        Max loop nest depth: 	5
        Additions: 		676
        Multiplications: 	140
        Divisions: 		0
        Logical: 		0
        Reads: 			1914
        Writes: 		476
        Comparisons:		104
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest81.exe __orio_perftest81.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest81.exe  
Program Test Output: 
{'[0, 0, 3, 1, 4, 2, 1, 1, 0, 25, 0, 0, 1, 0, 0, 1, 1, 1]' : 0.106226}
{'[0, 0, 3, 1, 4, 2, 1, 1, 0, 25, 0, 0, 1, 0, 0, 1, 1, 1]' : 0.106415}
{'[0, 0, 3, 1, 4, 2, 1, 1, 0, 25, 0, 0, 1, 0, 0, 1, 1, 1]' : 0.106483}
{'[0, 0, 3, 1, 4, 2, 1, 1, 0, 25, 0, 0, 1, 0, 0, 1, 1, 1]' : 0.106492}
{'[0, 0, 3, 1, 4, 2, 1, 1, 0, 25, 0, 0, 1, 0, 0, 1, 1, 1]' : 0.106412}
{'[0, 0, 3, 1, 4, 2, 1, 1, 0, 25, 0, 0, 1, 0, 0, 1, 1, 1]' : 0.106551}
{'[0, 0, 3, 1, 4, 2, 1, 1, 0, 25, 0, 0, 1, 0, 0, 1, 1, 1]' : 0.106091}
{'[0, 0, 3, 1, 4, 2, 1, 1, 0, 25, 0, 0, 1, 0, 0, 1, 1, 1]' : 0.106068}
{'[0, 0, 3, 1, 4, 2, 1, 1, 0, 25, 0, 0, 1, 0, 0, 1, 1, 1]' : 0.106652}
{'[0, 0, 3, 1, 4, 2, 1, 1, 0, 25, 0, 0, 1, 0, 0, 1, 1, 1]' : 0.108143}
{'[0, 0, 3, 1, 4, 2, 1, 1, 0, 25, 0, 0, 1, 0, 0, 1, 1, 1]' : 0.109021}
{'[0, 0, 3, 1, 4, 2, 1, 1, 0, 25, 0, 0, 1, 0, 0, 1, 1, 1]' : 0.109198}
{'[0, 0, 3, 1, 4, 2, 1, 1, 0, 25, 0, 0, 1, 0, 0, 1, 1, 1]' : 0.109988}
{'[0, 0, 3, 1, 4, 2, 1, 1, 0, 25, 0, 0, 1, 0, 0, 1, 1, 1]' : 0.109602}
{'[0, 0, 3, 1, 4, 2, 1, 1, 0, 25, 0, 0, 1, 0, 0, 1, 1, 1]' : 0.107482}
{'[0, 0, 3, 1, 4, 2, 1, 1, 0, 25, 0, 0, 1, 0, 0, 1, 1, 1]' : 0.106316}
{'[0, 0, 3, 1, 4, 2, 1, 1, 0, 25, 0, 0, 1, 0, 0, 1, 1, 1]' : 0.106346}
{'[0, 0, 3, 1, 4, 2, 1, 1, 0, 25, 0, 0, 1, 0, 0, 1, 1, 1]' : 0.106228}
{'[0, 0, 3, 1, 4, 2, 1, 1, 0, 25, 0, 0, 1, 0, 0, 1, 1, 1]' : 0.107801}
{'[0, 0, 3, 1, 4, 2, 1, 1, 0, 25, 0, 0, 1, 0, 0, 1, 1, 1]' : 0.109379}
{'[0, 0, 3, 1, 4, 2, 1, 1, 0, 25, 0, 0, 1, 0, 0, 1, 1, 1]' : 0.109207}
{'[0, 0, 3, 1, 4, 2, 1, 1, 0, 25, 0, 0, 1, 0, 0, 1, 1, 1]' : 0.109303}
{'[0, 0, 3, 1, 4, 2, 1, 1, 0, 25, 0, 0, 1, 0, 0, 1, 1, 1]' : 0.109506}
{'[0, 0, 3, 1, 4, 2, 1, 1, 0, 25, 0, 0, 1, 0, 0, 1, 1, 1]' : 0.110468}
{'[0, 0, 3, 1, 4, 2, 1, 1, 0, 25, 0, 0, 1, 0, 0, 1, 1, 1]' : 0.111788}
{'[0, 0, 3, 1, 4, 2, 1, 1, 0, 25, 0, 0, 1, 0, 0, 1, 1, 1]' : 0.111772}
{'[0, 0, 3, 1, 4, 2, 1, 1, 0, 25, 0, 0, 1, 0, 0, 1, 1, 1]' : 0.111794}
{'[0, 0, 3, 1, 4, 2, 1, 1, 0, 25, 0, 0, 1, 0, 0, 1, 1, 1]' : 0.111809}
{'[0, 0, 3, 1, 4, 2, 1, 1, 0, 25, 0, 0, 1, 0, 0, 1, 1, 1]' : 0.110298}
{'[0, 0, 3, 1, 4, 2, 1, 1, 0, 25, 0, 0, 1, 0, 0, 1, 1, 1]' : 0.109384}

out:
 ["{'[0, 0, 3, 1, 4, 2, 1, 1, 0, 25, 0, 0, 1, 0, 0, 1, 1, 1]' : 0.106226}", "{'[0, 0, 3, 1, 4, 2, 1, 1, 0, 25, 0, 0, 1, 0, 0, 1, 1, 1]' : 0.106415}", "{'[0, 0, 3, 1, 4, 2, 1, 1, 0, 25, 0, 0, 1, 0, 0, 1, 1, 1]' : 0.106483}", "{'[0, 0, 3, 1, 4, 2, 1, 1, 0, 25, 0, 0, 1, 0, 0, 1, 1, 1]' : 0.106492}", "{'[0, 0, 3, 1, 4, 2, 1, 1, 0, 25, 0, 0, 1, 0, 0, 1, 1, 1]' : 0.106412}", "{'[0, 0, 3, 1, 4, 2, 1, 1, 0, 25, 0, 0, 1, 0, 0, 1, 1, 1]' : 0.106551}", "{'[0, 0, 3, 1, 4, 2, 1, 1, 0, 25, 0, 0, 1, 0, 0, 1, 1, 1]' : 0.106091}", "{'[0, 0, 3, 1, 4, 2, 1, 1, 0, 25, 0, 0, 1, 0, 0, 1, 1, 1]' : 0.106068}", "{'[0, 0, 3, 1, 4, 2, 1, 1, 0, 25, 0, 0, 1, 0, 0, 1, 1, 1]' : 0.106652}", "{'[0, 0, 3, 1, 4, 2, 1, 1, 0, 25, 0, 0, 1, 0, 0, 1, 1, 1]' : 0.108143}", "{'[0, 0, 3, 1, 4, 2, 1, 1, 0, 25, 0, 0, 1, 0, 0, 1, 1, 1]' : 0.109021}", "{'[0, 0, 3, 1, 4, 2, 1, 1, 0, 25, 0, 0, 1, 0, 0, 1, 1, 1]' : 0.109198}", "{'[0, 0, 3, 1, 4, 2, 1, 1, 0, 25, 0, 0, 1, 0, 0, 1, 1, 1]' : 0.109988}", "{'[0, 0, 3, 1, 4, 2, 1, 1, 0, 25, 0, 0, 1, 0, 0, 1, 1, 1]' : 0.109602}", "{'[0, 0, 3, 1, 4, 2, 1, 1, 0, 25, 0, 0, 1, 0, 0, 1, 1, 1]' : 0.107482}", "{'[0, 0, 3, 1, 4, 2, 1, 1, 0, 25, 0, 0, 1, 0, 0, 1, 1, 1]' : 0.106316}", "{'[0, 0, 3, 1, 4, 2, 1, 1, 0, 25, 0, 0, 1, 0, 0, 1, 1, 1]' : 0.106346}", "{'[0, 0, 3, 1, 4, 2, 1, 1, 0, 25, 0, 0, 1, 0, 0, 1, 1, 1]' : 0.106228}", "{'[0, 0, 3, 1, 4, 2, 1, 1, 0, 25, 0, 0, 1, 0, 0, 1, 1, 1]' : 0.107801}", "{'[0, 0, 3, 1, 4, 2, 1, 1, 0, 25, 0, 0, 1, 0, 0, 1, 1, 1]' : 0.109379}", "{'[0, 0, 3, 1, 4, 2, 1, 1, 0, 25, 0, 0, 1, 0, 0, 1, 1, 1]' : 0.109207}", "{'[0, 0, 3, 1, 4, 2, 1, 1, 0, 25, 0, 0, 1, 0, 0, 1, 1, 1]' : 0.109303}", "{'[0, 0, 3, 1, 4, 2, 1, 1, 0, 25, 0, 0, 1, 0, 0, 1, 1, 1]' : 0.109506}", "{'[0, 0, 3, 1, 4, 2, 1, 1, 0, 25, 0, 0, 1, 0, 0, 1, 1, 1]' : 0.110468}", "{'[0, 0, 3, 1, 4, 2, 1, 1, 0, 25, 0, 0, 1, 0, 0, 1, 1, 1]' : 0.111788}", "{'[0, 0, 3, 1, 4, 2, 1, 1, 0, 25, 0, 0, 1, 0, 0, 1, 1, 1]' : 0.111772}", "{'[0, 0, 3, 1, 4, 2, 1, 1, 0, 25, 0, 0, 1, 0, 0, 1, 1, 1]' : 0.111794}", "{'[0, 0, 3, 1, 4, 2, 1, 1, 0, 25, 0, 0, 1, 0, 0, 1, 1, 1]' : 0.111809}", "{'[0, 0, 3, 1, 4, 2, 1, 1, 0, 25, 0, 0, 1, 0, 0, 1, 1, 1]' : 0.110298}", "{'[0, 0, 3, 1, 4, 2, 1, 1, 0, 25, 0, 0, 1, 0, 0, 1, 1, 1]' : 0.109384}"]
returning from 'run': {'[0, 0, 3, 1, 4, 2, 1, 1, 0, 25, 0, 0, 1, 0, 0, 1, 1, 1]': ([0.106226, 0.106415, 0.106483, 0.106492, 0.106412, 0.106551, 0.106091, 0.106068, 0.106652, 0.108143, 0.109021, 0.109198, 0.109988, 0.109602, 0.107482, 0.106316, 0.106346, 0.106228, 0.107801, 0.109379, 0.109207, 0.109303, 0.109506, 0.110468, 0.111788, 0.111772, 0.111794, 0.111809, 0.110298, 0.109384], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 3, 1, 4, 2, 1, 1, 0, 25, 0, 0, 1, 0, 0, 1, 1, 1]': ([0.106226, 0.106415, 0.106483, 0.106492, 0.106412, 0.106551, 0.106091, 0.106068, 0.106652, 0.108143, 0.109021, 0.109198, 0.109988, 0.109602, 0.107482, 0.106316, 0.106346, 0.106228, 0.107801, 0.109379, 0.109207, 0.109303, 0.109506, 0.110468, 0.111788, 0.111772, 0.111794, 0.111809, 0.110298, 0.109384], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	27
        Max loop nest depth: 	5
        Additions: 		2231
        Multiplications: 	854
        Divisions: 		0
        Logical: 		0
        Reads: 			4847
        Writes: 		1041
        Comparisons:		27
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest82.exe __orio_perftest82.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest82.exe  
Program Test Output: 
{'[0, 0, 4, 1, 0, 3, 1, 0, 16, 5, 0, 26, 0, 0, 2, 1, 0, 0]' : 0.137128}
{'[0, 0, 4, 1, 0, 3, 1, 0, 16, 5, 0, 26, 0, 0, 2, 1, 0, 0]' : 0.137324}
{'[0, 0, 4, 1, 0, 3, 1, 0, 16, 5, 0, 26, 0, 0, 2, 1, 0, 0]' : 0.13705}
{'[0, 0, 4, 1, 0, 3, 1, 0, 16, 5, 0, 26, 0, 0, 2, 1, 0, 0]' : 0.131402}
{'[0, 0, 4, 1, 0, 3, 1, 0, 16, 5, 0, 26, 0, 0, 2, 1, 0, 0]' : 0.121461}
{'[0, 0, 4, 1, 0, 3, 1, 0, 16, 5, 0, 26, 0, 0, 2, 1, 0, 0]' : 0.121466}
{'[0, 0, 4, 1, 0, 3, 1, 0, 16, 5, 0, 26, 0, 0, 2, 1, 0, 0]' : 0.121876}
{'[0, 0, 4, 1, 0, 3, 1, 0, 16, 5, 0, 26, 0, 0, 2, 1, 0, 0]' : 0.121792}
{'[0, 0, 4, 1, 0, 3, 1, 0, 16, 5, 0, 26, 0, 0, 2, 1, 0, 0]' : 0.122097}
{'[0, 0, 4, 1, 0, 3, 1, 0, 16, 5, 0, 26, 0, 0, 2, 1, 0, 0]' : 0.121727}
{'[0, 0, 4, 1, 0, 3, 1, 0, 16, 5, 0, 26, 0, 0, 2, 1, 0, 0]' : 0.121823}
{'[0, 0, 4, 1, 0, 3, 1, 0, 16, 5, 0, 26, 0, 0, 2, 1, 0, 0]' : 0.121753}
{'[0, 0, 4, 1, 0, 3, 1, 0, 16, 5, 0, 26, 0, 0, 2, 1, 0, 0]' : 0.119885}
{'[0, 0, 4, 1, 0, 3, 1, 0, 16, 5, 0, 26, 0, 0, 2, 1, 0, 0]' : 0.119419}
{'[0, 0, 4, 1, 0, 3, 1, 0, 16, 5, 0, 26, 0, 0, 2, 1, 0, 0]' : 0.119371}
{'[0, 0, 4, 1, 0, 3, 1, 0, 16, 5, 0, 26, 0, 0, 2, 1, 0, 0]' : 0.119362}
{'[0, 0, 4, 1, 0, 3, 1, 0, 16, 5, 0, 26, 0, 0, 2, 1, 0, 0]' : 0.12021}
{'[0, 0, 4, 1, 0, 3, 1, 0, 16, 5, 0, 26, 0, 0, 2, 1, 0, 0]' : 0.122031}
{'[0, 0, 4, 1, 0, 3, 1, 0, 16, 5, 0, 26, 0, 0, 2, 1, 0, 0]' : 0.121451}
{'[0, 0, 4, 1, 0, 3, 1, 0, 16, 5, 0, 26, 0, 0, 2, 1, 0, 0]' : 0.121448}
{'[0, 0, 4, 1, 0, 3, 1, 0, 16, 5, 0, 26, 0, 0, 2, 1, 0, 0]' : 0.121183}
{'[0, 0, 4, 1, 0, 3, 1, 0, 16, 5, 0, 26, 0, 0, 2, 1, 0, 0]' : 0.121231}
{'[0, 0, 4, 1, 0, 3, 1, 0, 16, 5, 0, 26, 0, 0, 2, 1, 0, 0]' : 0.121187}
{'[0, 0, 4, 1, 0, 3, 1, 0, 16, 5, 0, 26, 0, 0, 2, 1, 0, 0]' : 0.121201}
{'[0, 0, 4, 1, 0, 3, 1, 0, 16, 5, 0, 26, 0, 0, 2, 1, 0, 0]' : 0.121254}
{'[0, 0, 4, 1, 0, 3, 1, 0, 16, 5, 0, 26, 0, 0, 2, 1, 0, 0]' : 0.121474}
{'[0, 0, 4, 1, 0, 3, 1, 0, 16, 5, 0, 26, 0, 0, 2, 1, 0, 0]' : 0.121325}
{'[0, 0, 4, 1, 0, 3, 1, 0, 16, 5, 0, 26, 0, 0, 2, 1, 0, 0]' : 0.121421}
{'[0, 0, 4, 1, 0, 3, 1, 0, 16, 5, 0, 26, 0, 0, 2, 1, 0, 0]' : 0.121361}
{'[0, 0, 4, 1, 0, 3, 1, 0, 16, 5, 0, 26, 0, 0, 2, 1, 0, 0]' : 0.121283}

out:
 ["{'[0, 0, 4, 1, 0, 3, 1, 0, 16, 5, 0, 26, 0, 0, 2, 1, 0, 0]' : 0.137128}", "{'[0, 0, 4, 1, 0, 3, 1, 0, 16, 5, 0, 26, 0, 0, 2, 1, 0, 0]' : 0.137324}", "{'[0, 0, 4, 1, 0, 3, 1, 0, 16, 5, 0, 26, 0, 0, 2, 1, 0, 0]' : 0.13705}", "{'[0, 0, 4, 1, 0, 3, 1, 0, 16, 5, 0, 26, 0, 0, 2, 1, 0, 0]' : 0.131402}", "{'[0, 0, 4, 1, 0, 3, 1, 0, 16, 5, 0, 26, 0, 0, 2, 1, 0, 0]' : 0.121461}", "{'[0, 0, 4, 1, 0, 3, 1, 0, 16, 5, 0, 26, 0, 0, 2, 1, 0, 0]' : 0.121466}", "{'[0, 0, 4, 1, 0, 3, 1, 0, 16, 5, 0, 26, 0, 0, 2, 1, 0, 0]' : 0.121876}", "{'[0, 0, 4, 1, 0, 3, 1, 0, 16, 5, 0, 26, 0, 0, 2, 1, 0, 0]' : 0.121792}", "{'[0, 0, 4, 1, 0, 3, 1, 0, 16, 5, 0, 26, 0, 0, 2, 1, 0, 0]' : 0.122097}", "{'[0, 0, 4, 1, 0, 3, 1, 0, 16, 5, 0, 26, 0, 0, 2, 1, 0, 0]' : 0.121727}", "{'[0, 0, 4, 1, 0, 3, 1, 0, 16, 5, 0, 26, 0, 0, 2, 1, 0, 0]' : 0.121823}", "{'[0, 0, 4, 1, 0, 3, 1, 0, 16, 5, 0, 26, 0, 0, 2, 1, 0, 0]' : 0.121753}", "{'[0, 0, 4, 1, 0, 3, 1, 0, 16, 5, 0, 26, 0, 0, 2, 1, 0, 0]' : 0.119885}", "{'[0, 0, 4, 1, 0, 3, 1, 0, 16, 5, 0, 26, 0, 0, 2, 1, 0, 0]' : 0.119419}", "{'[0, 0, 4, 1, 0, 3, 1, 0, 16, 5, 0, 26, 0, 0, 2, 1, 0, 0]' : 0.119371}", "{'[0, 0, 4, 1, 0, 3, 1, 0, 16, 5, 0, 26, 0, 0, 2, 1, 0, 0]' : 0.119362}", "{'[0, 0, 4, 1, 0, 3, 1, 0, 16, 5, 0, 26, 0, 0, 2, 1, 0, 0]' : 0.12021}", "{'[0, 0, 4, 1, 0, 3, 1, 0, 16, 5, 0, 26, 0, 0, 2, 1, 0, 0]' : 0.122031}", "{'[0, 0, 4, 1, 0, 3, 1, 0, 16, 5, 0, 26, 0, 0, 2, 1, 0, 0]' : 0.121451}", "{'[0, 0, 4, 1, 0, 3, 1, 0, 16, 5, 0, 26, 0, 0, 2, 1, 0, 0]' : 0.121448}", "{'[0, 0, 4, 1, 0, 3, 1, 0, 16, 5, 0, 26, 0, 0, 2, 1, 0, 0]' : 0.121183}", "{'[0, 0, 4, 1, 0, 3, 1, 0, 16, 5, 0, 26, 0, 0, 2, 1, 0, 0]' : 0.121231}", "{'[0, 0, 4, 1, 0, 3, 1, 0, 16, 5, 0, 26, 0, 0, 2, 1, 0, 0]' : 0.121187}", "{'[0, 0, 4, 1, 0, 3, 1, 0, 16, 5, 0, 26, 0, 0, 2, 1, 0, 0]' : 0.121201}", "{'[0, 0, 4, 1, 0, 3, 1, 0, 16, 5, 0, 26, 0, 0, 2, 1, 0, 0]' : 0.121254}", "{'[0, 0, 4, 1, 0, 3, 1, 0, 16, 5, 0, 26, 0, 0, 2, 1, 0, 0]' : 0.121474}", "{'[0, 0, 4, 1, 0, 3, 1, 0, 16, 5, 0, 26, 0, 0, 2, 1, 0, 0]' : 0.121325}", "{'[0, 0, 4, 1, 0, 3, 1, 0, 16, 5, 0, 26, 0, 0, 2, 1, 0, 0]' : 0.121421}", "{'[0, 0, 4, 1, 0, 3, 1, 0, 16, 5, 0, 26, 0, 0, 2, 1, 0, 0]' : 0.121361}", "{'[0, 0, 4, 1, 0, 3, 1, 0, 16, 5, 0, 26, 0, 0, 2, 1, 0, 0]' : 0.121283}"]
returning from 'run': {'[0, 0, 4, 1, 0, 3, 1, 0, 16, 5, 0, 26, 0, 0, 2, 1, 0, 0]': ([0.137128, 0.137324, 0.13705, 0.131402, 0.121461, 0.121466, 0.121876, 0.121792, 0.122097, 0.121727, 0.121823, 0.121753, 0.119885, 0.119419, 0.119371, 0.119362, 0.12021, 0.122031, 0.121451, 0.121448, 0.121183, 0.121231, 0.121187, 0.121201, 0.121254, 0.121474, 0.121325, 0.121421, 0.121361, 0.121283], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 4, 1, 0, 3, 1, 0, 16, 5, 0, 26, 0, 0, 2, 1, 0, 0]': ([0.137128, 0.137324, 0.13705, 0.131402, 0.121461, 0.121466, 0.121876, 0.121792, 0.122097, 0.121727, 0.121823, 0.121753, 0.119885, 0.119419, 0.119371, 0.119362, 0.12021, 0.122031, 0.121451, 0.121448, 0.121183, 0.121231, 0.121187, 0.121201, 0.121254, 0.121474, 0.121325, 0.121421, 0.121361, 0.121283], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	42
        Max loop nest depth: 	5
        Additions: 		514
        Multiplications: 	162
        Divisions: 		0
        Logical: 		0
        Reads: 			1161
        Writes: 		254
        Comparisons:		42
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest83.exe __orio_perftest83.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest83.exe  
Program Test Output: 
{'[0, 0, 1, 1, 2, 3, 1, 1, 17, 7, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.239675}
{'[0, 0, 1, 1, 2, 3, 1, 1, 17, 7, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.239688}
{'[0, 0, 1, 1, 2, 3, 1, 1, 17, 7, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.219758}
{'[0, 0, 1, 1, 2, 3, 1, 1, 17, 7, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.20292}
{'[0, 0, 1, 1, 2, 3, 1, 1, 17, 7, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.202252}
{'[0, 0, 1, 1, 2, 3, 1, 1, 17, 7, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.202819}
{'[0, 0, 1, 1, 2, 3, 1, 1, 17, 7, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.202669}
{'[0, 0, 1, 1, 2, 3, 1, 1, 17, 7, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.202738}
{'[0, 0, 1, 1, 2, 3, 1, 1, 17, 7, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.20298}
{'[0, 0, 1, 1, 2, 3, 1, 1, 17, 7, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.202343}
{'[0, 0, 1, 1, 2, 3, 1, 1, 17, 7, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.202764}
{'[0, 0, 1, 1, 2, 3, 1, 1, 17, 7, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.206523}
{'[0, 0, 1, 1, 2, 3, 1, 1, 17, 7, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.209187}
{'[0, 0, 1, 1, 2, 3, 1, 1, 17, 7, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.20897}
{'[0, 0, 1, 1, 2, 3, 1, 1, 17, 7, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.208973}
{'[0, 0, 1, 1, 2, 3, 1, 1, 17, 7, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.208729}
{'[0, 0, 1, 1, 2, 3, 1, 1, 17, 7, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.206224}
{'[0, 0, 1, 1, 2, 3, 1, 1, 17, 7, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.202863}
{'[0, 0, 1, 1, 2, 3, 1, 1, 17, 7, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.205365}
{'[0, 0, 1, 1, 2, 3, 1, 1, 17, 7, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.209205}
{'[0, 0, 1, 1, 2, 3, 1, 1, 17, 7, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.20883}
{'[0, 0, 1, 1, 2, 3, 1, 1, 17, 7, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.209179}
{'[0, 0, 1, 1, 2, 3, 1, 1, 17, 7, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.205739}
{'[0, 0, 1, 1, 2, 3, 1, 1, 17, 7, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.203393}
{'[0, 0, 1, 1, 2, 3, 1, 1, 17, 7, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.207239}
{'[0, 0, 1, 1, 2, 3, 1, 1, 17, 7, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.208982}
{'[0, 0, 1, 1, 2, 3, 1, 1, 17, 7, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.208966}
{'[0, 0, 1, 1, 2, 3, 1, 1, 17, 7, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.203074}
{'[0, 0, 1, 1, 2, 3, 1, 1, 17, 7, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.20265}
{'[0, 0, 1, 1, 2, 3, 1, 1, 17, 7, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.203073}

out:
 ["{'[0, 0, 1, 1, 2, 3, 1, 1, 17, 7, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.239675}", "{'[0, 0, 1, 1, 2, 3, 1, 1, 17, 7, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.239688}", "{'[0, 0, 1, 1, 2, 3, 1, 1, 17, 7, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.219758}", "{'[0, 0, 1, 1, 2, 3, 1, 1, 17, 7, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.20292}", "{'[0, 0, 1, 1, 2, 3, 1, 1, 17, 7, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.202252}", "{'[0, 0, 1, 1, 2, 3, 1, 1, 17, 7, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.202819}", "{'[0, 0, 1, 1, 2, 3, 1, 1, 17, 7, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.202669}", "{'[0, 0, 1, 1, 2, 3, 1, 1, 17, 7, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.202738}", "{'[0, 0, 1, 1, 2, 3, 1, 1, 17, 7, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.20298}", "{'[0, 0, 1, 1, 2, 3, 1, 1, 17, 7, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.202343}", "{'[0, 0, 1, 1, 2, 3, 1, 1, 17, 7, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.202764}", "{'[0, 0, 1, 1, 2, 3, 1, 1, 17, 7, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.206523}", "{'[0, 0, 1, 1, 2, 3, 1, 1, 17, 7, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.209187}", "{'[0, 0, 1, 1, 2, 3, 1, 1, 17, 7, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.20897}", "{'[0, 0, 1, 1, 2, 3, 1, 1, 17, 7, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.208973}", "{'[0, 0, 1, 1, 2, 3, 1, 1, 17, 7, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.208729}", "{'[0, 0, 1, 1, 2, 3, 1, 1, 17, 7, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.206224}", "{'[0, 0, 1, 1, 2, 3, 1, 1, 17, 7, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.202863}", "{'[0, 0, 1, 1, 2, 3, 1, 1, 17, 7, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.205365}", "{'[0, 0, 1, 1, 2, 3, 1, 1, 17, 7, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.209205}", "{'[0, 0, 1, 1, 2, 3, 1, 1, 17, 7, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.20883}", "{'[0, 0, 1, 1, 2, 3, 1, 1, 17, 7, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.209179}", "{'[0, 0, 1, 1, 2, 3, 1, 1, 17, 7, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.205739}", "{'[0, 0, 1, 1, 2, 3, 1, 1, 17, 7, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.203393}", "{'[0, 0, 1, 1, 2, 3, 1, 1, 17, 7, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.207239}", "{'[0, 0, 1, 1, 2, 3, 1, 1, 17, 7, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.208982}", "{'[0, 0, 1, 1, 2, 3, 1, 1, 17, 7, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.208966}", "{'[0, 0, 1, 1, 2, 3, 1, 1, 17, 7, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.203074}", "{'[0, 0, 1, 1, 2, 3, 1, 1, 17, 7, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.20265}", "{'[0, 0, 1, 1, 2, 3, 1, 1, 17, 7, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.203073}"]
returning from 'run': {'[0, 0, 1, 1, 2, 3, 1, 1, 17, 7, 2, 0, 0, 1, 0, 1, 0, 1]': ([0.239675, 0.239688, 0.219758, 0.20292, 0.202252, 0.202819, 0.202669, 0.202738, 0.20298, 0.202343, 0.202764, 0.206523, 0.209187, 0.20897, 0.208973, 0.208729, 0.206224, 0.202863, 0.205365, 0.209205, 0.20883, 0.209179, 0.205739, 0.203393, 0.207239, 0.208982, 0.208966, 0.203074, 0.20265, 0.203073], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 1, 1, 2, 3, 1, 1, 17, 7, 2, 0, 0, 1, 0, 1, 0, 1]': ([0.239675, 0.239688, 0.219758, 0.20292, 0.202252, 0.202819, 0.202669, 0.202738, 0.20298, 0.202343, 0.202764, 0.206523, 0.209187, 0.20897, 0.208973, 0.208729, 0.206224, 0.202863, 0.205365, 0.209205, 0.20883, 0.209179, 0.205739, 0.203393, 0.207239, 0.208982, 0.208966, 0.203074, 0.20265, 0.203073], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	5
        Additions: 		594
        Multiplications: 	270
        Divisions: 		0
        Logical: 		0
        Reads: 			1218
        Writes: 		221
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest84.exe __orio_perftest84.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest84.exe  
Program Test Output: 
{'[0, 0, 6, 1, 1, 6, 0, 0, 8, 0, 4, 0, 1, 1, 0, 1, 0, 0]' : 0.122092}
{'[0, 0, 6, 1, 1, 6, 0, 0, 8, 0, 4, 0, 1, 1, 0, 1, 0, 0]' : 0.122334}
{'[0, 0, 6, 1, 1, 6, 0, 0, 8, 0, 4, 0, 1, 1, 0, 1, 0, 0]' : 0.122034}
{'[0, 0, 6, 1, 1, 6, 0, 0, 8, 0, 4, 0, 1, 1, 0, 1, 0, 0]' : 0.122197}
{'[0, 0, 6, 1, 1, 6, 0, 0, 8, 0, 4, 0, 1, 1, 0, 1, 0, 0]' : 0.12201}
{'[0, 0, 6, 1, 1, 6, 0, 0, 8, 0, 4, 0, 1, 1, 0, 1, 0, 0]' : 0.112199}
{'[0, 0, 6, 1, 1, 6, 0, 0, 8, 0, 4, 0, 1, 1, 0, 1, 0, 0]' : 0.102993}
{'[0, 0, 6, 1, 1, 6, 0, 0, 8, 0, 4, 0, 1, 1, 0, 1, 0, 0]' : 0.103071}
{'[0, 0, 6, 1, 1, 6, 0, 0, 8, 0, 4, 0, 1, 1, 0, 1, 0, 0]' : 0.103642}
{'[0, 0, 6, 1, 1, 6, 0, 0, 8, 0, 4, 0, 1, 1, 0, 1, 0, 0]' : 0.103427}
{'[0, 0, 6, 1, 1, 6, 0, 0, 8, 0, 4, 0, 1, 1, 0, 1, 0, 0]' : 0.102967}
{'[0, 0, 6, 1, 1, 6, 0, 0, 8, 0, 4, 0, 1, 1, 0, 1, 0, 0]' : 0.10304}
{'[0, 0, 6, 1, 1, 6, 0, 0, 8, 0, 4, 0, 1, 1, 0, 1, 0, 0]' : 0.102992}
{'[0, 0, 6, 1, 1, 6, 0, 0, 8, 0, 4, 0, 1, 1, 0, 1, 0, 0]' : 0.102978}
{'[0, 0, 6, 1, 1, 6, 0, 0, 8, 0, 4, 0, 1, 1, 0, 1, 0, 0]' : 0.102993}
{'[0, 0, 6, 1, 1, 6, 0, 0, 8, 0, 4, 0, 1, 1, 0, 1, 0, 0]' : 0.103054}
{'[0, 0, 6, 1, 1, 6, 0, 0, 8, 0, 4, 0, 1, 1, 0, 1, 0, 0]' : 0.102892}
{'[0, 0, 6, 1, 1, 6, 0, 0, 8, 0, 4, 0, 1, 1, 0, 1, 0, 0]' : 0.104372}
{'[0, 0, 6, 1, 1, 6, 0, 0, 8, 0, 4, 0, 1, 1, 0, 1, 0, 0]' : 0.106317}
{'[0, 0, 6, 1, 1, 6, 0, 0, 8, 0, 4, 0, 1, 1, 0, 1, 0, 0]' : 0.106252}
{'[0, 0, 6, 1, 1, 6, 0, 0, 8, 0, 4, 0, 1, 1, 0, 1, 0, 0]' : 0.106456}
{'[0, 0, 6, 1, 1, 6, 0, 0, 8, 0, 4, 0, 1, 1, 0, 1, 0, 0]' : 0.106049}
{'[0, 0, 6, 1, 1, 6, 0, 0, 8, 0, 4, 0, 1, 1, 0, 1, 0, 0]' : 0.106378}
{'[0, 0, 6, 1, 1, 6, 0, 0, 8, 0, 4, 0, 1, 1, 0, 1, 0, 0]' : 0.103964}
{'[0, 0, 6, 1, 1, 6, 0, 0, 8, 0, 4, 0, 1, 1, 0, 1, 0, 0]' : 0.103047}
{'[0, 0, 6, 1, 1, 6, 0, 0, 8, 0, 4, 0, 1, 1, 0, 1, 0, 0]' : 0.102998}
{'[0, 0, 6, 1, 1, 6, 0, 0, 8, 0, 4, 0, 1, 1, 0, 1, 0, 0]' : 0.103018}
{'[0, 0, 6, 1, 1, 6, 0, 0, 8, 0, 4, 0, 1, 1, 0, 1, 0, 0]' : 0.102997}
{'[0, 0, 6, 1, 1, 6, 0, 0, 8, 0, 4, 0, 1, 1, 0, 1, 0, 0]' : 0.102938}
{'[0, 0, 6, 1, 1, 6, 0, 0, 8, 0, 4, 0, 1, 1, 0, 1, 0, 0]' : 0.103144}

out:
 ["{'[0, 0, 6, 1, 1, 6, 0, 0, 8, 0, 4, 0, 1, 1, 0, 1, 0, 0]' : 0.122092}", "{'[0, 0, 6, 1, 1, 6, 0, 0, 8, 0, 4, 0, 1, 1, 0, 1, 0, 0]' : 0.122334}", "{'[0, 0, 6, 1, 1, 6, 0, 0, 8, 0, 4, 0, 1, 1, 0, 1, 0, 0]' : 0.122034}", "{'[0, 0, 6, 1, 1, 6, 0, 0, 8, 0, 4, 0, 1, 1, 0, 1, 0, 0]' : 0.122197}", "{'[0, 0, 6, 1, 1, 6, 0, 0, 8, 0, 4, 0, 1, 1, 0, 1, 0, 0]' : 0.12201}", "{'[0, 0, 6, 1, 1, 6, 0, 0, 8, 0, 4, 0, 1, 1, 0, 1, 0, 0]' : 0.112199}", "{'[0, 0, 6, 1, 1, 6, 0, 0, 8, 0, 4, 0, 1, 1, 0, 1, 0, 0]' : 0.102993}", "{'[0, 0, 6, 1, 1, 6, 0, 0, 8, 0, 4, 0, 1, 1, 0, 1, 0, 0]' : 0.103071}", "{'[0, 0, 6, 1, 1, 6, 0, 0, 8, 0, 4, 0, 1, 1, 0, 1, 0, 0]' : 0.103642}", "{'[0, 0, 6, 1, 1, 6, 0, 0, 8, 0, 4, 0, 1, 1, 0, 1, 0, 0]' : 0.103427}", "{'[0, 0, 6, 1, 1, 6, 0, 0, 8, 0, 4, 0, 1, 1, 0, 1, 0, 0]' : 0.102967}", "{'[0, 0, 6, 1, 1, 6, 0, 0, 8, 0, 4, 0, 1, 1, 0, 1, 0, 0]' : 0.10304}", "{'[0, 0, 6, 1, 1, 6, 0, 0, 8, 0, 4, 0, 1, 1, 0, 1, 0, 0]' : 0.102992}", "{'[0, 0, 6, 1, 1, 6, 0, 0, 8, 0, 4, 0, 1, 1, 0, 1, 0, 0]' : 0.102978}", "{'[0, 0, 6, 1, 1, 6, 0, 0, 8, 0, 4, 0, 1, 1, 0, 1, 0, 0]' : 0.102993}", "{'[0, 0, 6, 1, 1, 6, 0, 0, 8, 0, 4, 0, 1, 1, 0, 1, 0, 0]' : 0.103054}", "{'[0, 0, 6, 1, 1, 6, 0, 0, 8, 0, 4, 0, 1, 1, 0, 1, 0, 0]' : 0.102892}", "{'[0, 0, 6, 1, 1, 6, 0, 0, 8, 0, 4, 0, 1, 1, 0, 1, 0, 0]' : 0.104372}", "{'[0, 0, 6, 1, 1, 6, 0, 0, 8, 0, 4, 0, 1, 1, 0, 1, 0, 0]' : 0.106317}", "{'[0, 0, 6, 1, 1, 6, 0, 0, 8, 0, 4, 0, 1, 1, 0, 1, 0, 0]' : 0.106252}", "{'[0, 0, 6, 1, 1, 6, 0, 0, 8, 0, 4, 0, 1, 1, 0, 1, 0, 0]' : 0.106456}", "{'[0, 0, 6, 1, 1, 6, 0, 0, 8, 0, 4, 0, 1, 1, 0, 1, 0, 0]' : 0.106049}", "{'[0, 0, 6, 1, 1, 6, 0, 0, 8, 0, 4, 0, 1, 1, 0, 1, 0, 0]' : 0.106378}", "{'[0, 0, 6, 1, 1, 6, 0, 0, 8, 0, 4, 0, 1, 1, 0, 1, 0, 0]' : 0.103964}", "{'[0, 0, 6, 1, 1, 6, 0, 0, 8, 0, 4, 0, 1, 1, 0, 1, 0, 0]' : 0.103047}", "{'[0, 0, 6, 1, 1, 6, 0, 0, 8, 0, 4, 0, 1, 1, 0, 1, 0, 0]' : 0.102998}", "{'[0, 0, 6, 1, 1, 6, 0, 0, 8, 0, 4, 0, 1, 1, 0, 1, 0, 0]' : 0.103018}", "{'[0, 0, 6, 1, 1, 6, 0, 0, 8, 0, 4, 0, 1, 1, 0, 1, 0, 0]' : 0.102997}", "{'[0, 0, 6, 1, 1, 6, 0, 0, 8, 0, 4, 0, 1, 1, 0, 1, 0, 0]' : 0.102938}", "{'[0, 0, 6, 1, 1, 6, 0, 0, 8, 0, 4, 0, 1, 1, 0, 1, 0, 0]' : 0.103144}"]
returning from 'run': {'[0, 0, 6, 1, 1, 6, 0, 0, 8, 0, 4, 0, 1, 1, 0, 1, 0, 0]': ([0.122092, 0.122334, 0.122034, 0.122197, 0.12201, 0.112199, 0.102993, 0.103071, 0.103642, 0.103427, 0.102967, 0.10304, 0.102992, 0.102978, 0.102993, 0.103054, 0.102892, 0.104372, 0.106317, 0.106252, 0.106456, 0.106049, 0.106378, 0.103964, 0.103047, 0.102998, 0.103018, 0.102997, 0.102938, 0.103144], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 6, 1, 1, 6, 0, 0, 8, 0, 4, 0, 1, 1, 0, 1, 0, 0]': ([0.122092, 0.122334, 0.122034, 0.122197, 0.12201, 0.112199, 0.102993, 0.103071, 0.103642, 0.103427, 0.102967, 0.10304, 0.102992, 0.102978, 0.102993, 0.103054, 0.102892, 0.104372, 0.106317, 0.106252, 0.106456, 0.106049, 0.106378, 0.103964, 0.103047, 0.102998, 0.103018, 0.102997, 0.102938, 0.103144], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
Code stats:
        Number of loops: 	79
        Max loop nest depth: 	4
        Additions: 		7559
        Multiplications: 	3120
        Divisions: 		0
        Logical: 		0
        Reads: 			13209
        Writes: 		1994
        Comparisons:		79
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest85.exe __orio_perftest85.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest85.exe  
Program Test Output: 
{'[3, 0, 0, 1, 6, 0, 0, 0, 9, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.0995562}
{'[3, 0, 0, 1, 6, 0, 0, 0, 9, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.0996029}
{'[3, 0, 0, 1, 6, 0, 0, 0, 9, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.0993731}
{'[3, 0, 0, 1, 6, 0, 0, 0, 9, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.099385}
{'[3, 0, 0, 1, 6, 0, 0, 0, 9, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.0993059}
{'[3, 0, 0, 1, 6, 0, 0, 0, 9, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.092}
{'[3, 0, 0, 1, 6, 0, 0, 0, 9, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.0857129}
{'[3, 0, 0, 1, 6, 0, 0, 0, 9, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.0857151}
{'[3, 0, 0, 1, 6, 0, 0, 0, 9, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.085851}
{'[3, 0, 0, 1, 6, 0, 0, 0, 9, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.0861681}
{'[3, 0, 0, 1, 6, 0, 0, 0, 9, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.0858831}
{'[3, 0, 0, 1, 6, 0, 0, 0, 9, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.0865951}
{'[3, 0, 0, 1, 6, 0, 0, 0, 9, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.0885611}
{'[3, 0, 0, 1, 6, 0, 0, 0, 9, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.08799}
{'[3, 0, 0, 1, 6, 0, 0, 0, 9, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.087923}
{'[3, 0, 0, 1, 6, 0, 0, 0, 9, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.0879049}
{'[3, 0, 0, 1, 6, 0, 0, 0, 9, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.0879421}
{'[3, 0, 0, 1, 6, 0, 0, 0, 9, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.0880139}
{'[3, 0, 0, 1, 6, 0, 0, 0, 9, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.087986}
{'[3, 0, 0, 1, 6, 0, 0, 0, 9, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.087877}
{'[3, 0, 0, 1, 6, 0, 0, 0, 9, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.0887861}
{'[3, 0, 0, 1, 6, 0, 0, 0, 9, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.087985}
{'[3, 0, 0, 1, 6, 0, 0, 0, 9, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.088259}
{'[3, 0, 0, 1, 6, 0, 0, 0, 9, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.0877869}
{'[3, 0, 0, 1, 6, 0, 0, 0, 9, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.0878851}
{'[3, 0, 0, 1, 6, 0, 0, 0, 9, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.0879309}
{'[3, 0, 0, 1, 6, 0, 0, 0, 9, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.087827}
{'[3, 0, 0, 1, 6, 0, 0, 0, 9, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.0879822}
{'[3, 0, 0, 1, 6, 0, 0, 0, 9, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.0879059}
{'[3, 0, 0, 1, 6, 0, 0, 0, 9, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.0880041}

out:
 ["{'[3, 0, 0, 1, 6, 0, 0, 0, 9, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.0995562}", "{'[3, 0, 0, 1, 6, 0, 0, 0, 9, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.0996029}", "{'[3, 0, 0, 1, 6, 0, 0, 0, 9, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.0993731}", "{'[3, 0, 0, 1, 6, 0, 0, 0, 9, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.099385}", "{'[3, 0, 0, 1, 6, 0, 0, 0, 9, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.0993059}", "{'[3, 0, 0, 1, 6, 0, 0, 0, 9, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.092}", "{'[3, 0, 0, 1, 6, 0, 0, 0, 9, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.0857129}", "{'[3, 0, 0, 1, 6, 0, 0, 0, 9, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.0857151}", "{'[3, 0, 0, 1, 6, 0, 0, 0, 9, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.085851}", "{'[3, 0, 0, 1, 6, 0, 0, 0, 9, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.0861681}", "{'[3, 0, 0, 1, 6, 0, 0, 0, 9, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.0858831}", "{'[3, 0, 0, 1, 6, 0, 0, 0, 9, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.0865951}", "{'[3, 0, 0, 1, 6, 0, 0, 0, 9, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.0885611}", "{'[3, 0, 0, 1, 6, 0, 0, 0, 9, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.08799}", "{'[3, 0, 0, 1, 6, 0, 0, 0, 9, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.087923}", "{'[3, 0, 0, 1, 6, 0, 0, 0, 9, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.0879049}", "{'[3, 0, 0, 1, 6, 0, 0, 0, 9, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.0879421}", "{'[3, 0, 0, 1, 6, 0, 0, 0, 9, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.0880139}", "{'[3, 0, 0, 1, 6, 0, 0, 0, 9, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.087986}", "{'[3, 0, 0, 1, 6, 0, 0, 0, 9, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.087877}", "{'[3, 0, 0, 1, 6, 0, 0, 0, 9, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.0887861}", "{'[3, 0, 0, 1, 6, 0, 0, 0, 9, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.087985}", "{'[3, 0, 0, 1, 6, 0, 0, 0, 9, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.088259}", "{'[3, 0, 0, 1, 6, 0, 0, 0, 9, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.0877869}", "{'[3, 0, 0, 1, 6, 0, 0, 0, 9, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.0878851}", "{'[3, 0, 0, 1, 6, 0, 0, 0, 9, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.0879309}", "{'[3, 0, 0, 1, 6, 0, 0, 0, 9, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.087827}", "{'[3, 0, 0, 1, 6, 0, 0, 0, 9, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.0879822}", "{'[3, 0, 0, 1, 6, 0, 0, 0, 9, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.0879059}", "{'[3, 0, 0, 1, 6, 0, 0, 0, 9, 29, 29, 0, 1, 1, 0, 1, 0, 1]' : 0.0880041}"]
returning from 'run': {'[3, 0, 0, 1, 6, 0, 0, 0, 9, 29, 29, 0, 1, 1, 0, 1, 0, 1]': ([0.0995562, 0.0996029, 0.0993731, 0.099385, 0.0993059, 0.092, 0.0857129, 0.0857151, 0.085851, 0.0861681, 0.0858831, 0.0865951, 0.0885611, 0.08799, 0.087923, 0.0879049, 0.0879421, 0.0880139, 0.087986, 0.087877, 0.0887861, 0.087985, 0.088259, 0.0877869, 0.0878851, 0.0879309, 0.087827, 0.0879822, 0.0879059, 0.0880041], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 0, 0, 1, 6, 0, 0, 0, 9, 29, 29, 0, 1, 1, 0, 1, 0, 1]': ([0.0995562, 0.0996029, 0.0993731, 0.099385, 0.0993059, 0.092, 0.0857129, 0.0857151, 0.085851, 0.0861681, 0.0858831, 0.0865951, 0.0885611, 0.08799, 0.087923, 0.0879049, 0.0879421, 0.0880139, 0.087986, 0.087877, 0.0887861, 0.087985, 0.088259, 0.0877869, 0.0878851, 0.0879309, 0.087827, 0.0879822, 0.0879059, 0.0880041], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	5
        Additions: 		565
        Multiplications: 	210
        Divisions: 		0
        Logical: 		0
        Reads: 			1150
        Writes: 		208
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest86.exe __orio_perftest86.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest86.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest86.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest86.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest86.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Complete design, with measurements:
     T1_I T1_K T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J RT_K VEC1
50      3    2    1    3       0       1   29   1  29   0    2    0    0    1
58      3    3    3    2       1       0   28   8  18   0    0    0    0    1
231     1    2    0    6       1       0   13  16  18   0    0    0    0    1
258     1    3    6    2       1       0   11  29   0   0    0    0    1    0
346     0    1    1    0       1       0   24   0  29   2    0    1    0    0
752     0    6    0    0       1       1   23   0  24   6    0    1    1    0
795     3    1    0    6       1       1   12  19   0   0    0    1    1    1
857     3    5    0    0       1       1    0  29  27   0    0    0    1    0
1156    3    1    0    0       1       1    9   0   6   3    1    0    0    0
1309    1    0    0    6       1       0   29   0  20  20    1    0    0    1
1364    3    0    2    5       0       0   15   0   2   6    0    0    2    1
1443    3    5    6    4       0       0    0   0   4  24    0    1    0    1
1500    2    0    3    2       1       0   17  25   0   4    1    1    0    0
1558    1    3    2    0       0       1    1  10   3   0    2    0    0    0
1723    3    6    6    0       0       1   27   2   0  19    2    0    0    1
1768    2    6    1    0       1       0   26  25   0  15    0    0    0    1
1775    3    5    4    6       0       1   28  27   0  29    0    0    0    0
1833    1    1    2    1       0       0    7  19   0  11    1    1    0    1
1943    3    3    5    6       1       0   23   9  14   0    0    0    2    1
2013    0    1    6    6       0       1    7  27   0   6    0    0    1    1
2282    3    1    5    2       1       0    4   0  28  26    2    0    0    0
2377    3    4    1    2       0       0   15  17   0  25    1    0    1    1
2389    1    6    6    6       0       1    2   4  28   0    1    0    0    1
2693    1    2    2    0       1       1    0   0  27  29    0    0    1    1
2769    3    0    0    2       0       0    9   3   0   0    0    0    0    0
2917    0    4    0    6       1       0    0   9   0   4    2    0    0    0
3099    1    2    6    4       1       1   29   0   0  28    1    1    0    0
3304    0    0    6    0       0       0   28  25  20   0    0    0    1    0
3367    0    0    0    2       1       1    1  26   0  23    2    0    0    1
3489    0    3    4    2       1       1    0  25   0   0    1    0    0    1
3522    0    4    0    3       1       0   16   5   0  26    0    0    2    0
3546    0    1    2    3       1       1   17   7   2   0    0    1    0    0
3727    0    6    1    6       0       0    8   0   4   0    1    1    0    0
3781    3    0    6    0       0       0    9  29  29   0    1    1    0    0
     VEC2  cost_mean
50      0 0.22401093
58      1 0.16459803
231     0 0.22026010
258     0 0.19295403
346     1 0.21279157
752     1 0.21263187
795     1 0.19104010
857     1 0.19745230
1156    0 0.10358180
1309    0 0.10780660
1364    1 0.15066887
1443    0 0.17824223
1500    0 0.10361840
1558    1 0.18126693
1723    0 0.18015493
1768    1 0.15941253
1775    0 0.16223260
1833    0 0.10070623
1943    1 0.18572237
2013    1 0.22429727
2282    1 0.22435563
2377    0 0.09604096
2389    1 0.09859913
2693    0 0.23696470
2769    1 0.09916543
2917    0 0.17681000
3099    1 0.12049750
3304    0 0.13521793
3367    1 0.17904997
3489    1 0.10840743
3522    0 0.12309987
3546    1 0.20825900
3727    0 0.10716150
3781    1 0.08965662

Heteroscedasticity Test p-value: 0.53929695734
Regression Step:                Df  Sum Sq Mean Sq F value   Pr(>F)    
T1_I             1 0.00035 0.00035   1.110  0.32285    
T1_K             1 0.00035 0.00035   1.103  0.32434    
T2_J             1 0.00010 0.00010   0.327  0.58335    
T2_K             1 0.00001 0.00001   0.041  0.84373    
ACOPY_x          1 0.00590 0.00590  18.621  0.00256 ** 
ACOPY_y          1 0.00515 0.00515  16.245  0.00379 ** 
U1_I             1 0.00000 0.00000   0.008  0.93211    
U_I              1 0.00054 0.00054   1.693  0.22942    
U_J              1 0.00499 0.00499  15.739  0.00413 ** 
U_K              1 0.00005 0.00005   0.159  0.70061    
RT_I             1 0.00156 0.00156   4.927  0.05721 .  
RT_J             1 0.00088 0.00088   2.780  0.13399    
RT_K             1 0.00050 0.00050   1.564  0.24647    
VEC1             1 0.00045 0.00045   1.419  0.26767    
VEC2             1 0.00000 0.00000   0.008  0.92918    
I(1/(1 + T1_I))  1 0.00152 0.00152   4.795  0.05995 .  
I(1/(1 + T1_K))  1 0.00772 0.00772  24.358  0.00114 ** 
I(1/(1 + T2_J))  1 0.00017 0.00017   0.522  0.49037    
I(1/(1 + T2_K))  1 0.00128 0.00128   4.028  0.07965 .  
I(1/(1 + U1_I))  1 0.00007 0.00007   0.235  0.64077    
I(1/(1 + U_I))   1 0.00001 0.00001   0.046  0.83629    
I(1/(1 + U_J))   1 0.00005 0.00005   0.172  0.68906    
I(1/(1 + U_K))   1 0.00086 0.00086   2.722  0.13760    
I(1/(1 + RT_I))  1 0.03818 0.03818 120.420 4.22e-06 ***
I(1/(1 + RT_K))  1 0.00071 0.00071   2.234  0.17338    
Residuals        8 0.00254 0.00032                     
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Predicting Best
Generating valid search space of size 3900 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Tested coordinates: 40000
Valid coordinates: 780
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Tested coordinates: 80000
Valid coordinates: 1560
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Tested coordinates: 120000
Tested coordinates: 130000
Valid coordinates: 2340
Tested coordinates: 140000
Tested coordinates: 150000
Tested coordinates: 160000
Tested coordinates: 170000
Valid coordinates: 3120
Tested coordinates: 180000
Tested coordinates: 190000
Tested coordinates: 200000
Tested coordinates: 210000
Tested coordinates: 220000
Valid coordinates: 3900
Valid/Tested configurations: 3900/221205
Generated Search Space:
NULL
Identical predictions (tol = 1e-5): 1
Getting Best from Design
Response: ['cost_mean']
Design Names:  [1] "T1_I"      "T1_K"      "T2_J"      "T2_K"      "ACOPY_x"   "ACOPY_y"  
 [7] "U1_I"      "U_I"       "U_J"       "U_K"       "RT_I"      "RT_J"     
[13] "RT_K"      "VEC1"      "VEC2"      "cost_mean"

Design Response:       cost_mean
50   0.22401093
58   0.16459803
231  0.22026010
258  0.19295403
346  0.21279157
752  0.21263187
795  0.19104010
857  0.19745230
1156 0.10358180
1309 0.10780660
1364 0.15066887
1443 0.17824223
1500 0.10361840
1558 0.18126693
1723 0.18015493
1768 0.15941253
1775 0.16223260
1833 0.10070623
1943 0.18572237
2013 0.22429727
2282 0.22435563
2377 0.09604096
2389 0.09859913
2693 0.23696470
2769 0.09916543
2917 0.17681000
3099 0.12049750
3304 0.13521793
3367 0.17904997
3489 0.10840743
3522 0.12309987
3546 0.20825900
3727 0.10716150
3781 0.08965662

Current Design Names: ['T1_I', 'T1_K', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Getting fixed variables
Pruning Model
Best Predicted:      T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
2368    1    0    6    1    0    0       0       0   29  19   0  21    1    0
     RT_K SCR VEC1 VEC2
2368    0   1    0    1

Best From Design: [3, 0, 0, 1, 6, 0, 0, 0, 9, 29, 29, 0, 1, 1, 0, 1, 0, 1]
Pruned Factors: ['T1_I', 'T1_K', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_K', 'RT_J', 'RT_K', 'VEC1', 'VEC2']
Fixed Factors: {'ACOPY_x': 0, 'ACOPY_y': 0, 'T1_J': 0, 'RT_I': 1, 'U_J': 0, 'T2_I': 1, 'SCR': 1}
Length of requested configs: 1
Result was on Database, Returning Now
Starting Point (-O3):
0.16283083333333334
Predicted Best Point:
[1, 0, 6, 1, 0, 0, 0, 0, 29, 19, 0, 21, 1, 0, 0, 1, 0, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	5
        Additions: 		2924
        Multiplications: 	1392
        Divisions: 		0
        Logical: 		0
        Reads: 			5708
        Writes: 		997
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest87.exe __orio_perftest87.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest87.exe  
Program Test Output: 
{'[1, 0, 6, 1, 0, 0, 0, 0, 29, 19, 0, 21, 1, 0, 0, 1, 0, 1]' : 0.105448}
{'[1, 0, 6, 1, 0, 0, 0, 0, 29, 19, 0, 21, 1, 0, 0, 1, 0, 1]' : 0.105414}
{'[1, 0, 6, 1, 0, 0, 0, 0, 29, 19, 0, 21, 1, 0, 0, 1, 0, 1]' : 0.105366}
{'[1, 0, 6, 1, 0, 0, 0, 0, 29, 19, 0, 21, 1, 0, 0, 1, 0, 1]' : 0.105404}
{'[1, 0, 6, 1, 0, 0, 0, 0, 29, 19, 0, 21, 1, 0, 0, 1, 0, 1]' : 0.0962229}
{'[1, 0, 6, 1, 0, 0, 0, 0, 29, 19, 0, 21, 1, 0, 0, 1, 0, 1]' : 0.0951049}
{'[1, 0, 6, 1, 0, 0, 0, 0, 29, 19, 0, 21, 1, 0, 0, 1, 0, 1]' : 0.0953958}
{'[1, 0, 6, 1, 0, 0, 0, 0, 29, 19, 0, 21, 1, 0, 0, 1, 0, 1]' : 0.095469}
{'[1, 0, 6, 1, 0, 0, 0, 0, 29, 19, 0, 21, 1, 0, 0, 1, 0, 1]' : 0.096657}
{'[1, 0, 6, 1, 0, 0, 0, 0, 29, 19, 0, 21, 1, 0, 0, 1, 0, 1]' : 0.0975499}
{'[1, 0, 6, 1, 0, 0, 0, 0, 29, 19, 0, 21, 1, 0, 0, 1, 0, 1]' : 0.0975382}
{'[1, 0, 6, 1, 0, 0, 0, 0, 29, 19, 0, 21, 1, 0, 0, 1, 0, 1]' : 0.0974791}
{'[1, 0, 6, 1, 0, 0, 0, 0, 29, 19, 0, 21, 1, 0, 0, 1, 0, 1]' : 0.097466}
{'[1, 0, 6, 1, 0, 0, 0, 0, 29, 19, 0, 21, 1, 0, 0, 1, 0, 1]' : 0.0974882}
{'[1, 0, 6, 1, 0, 0, 0, 0, 29, 19, 0, 21, 1, 0, 0, 1, 0, 1]' : 0.0975111}
{'[1, 0, 6, 1, 0, 0, 0, 0, 29, 19, 0, 21, 1, 0, 0, 1, 0, 1]' : 0.0973921}
{'[1, 0, 6, 1, 0, 0, 0, 0, 29, 19, 0, 21, 1, 0, 0, 1, 0, 1]' : 0.0974982}
{'[1, 0, 6, 1, 0, 0, 0, 0, 29, 19, 0, 21, 1, 0, 0, 1, 0, 1]' : 0.0975142}
{'[1, 0, 6, 1, 0, 0, 0, 0, 29, 19, 0, 21, 1, 0, 0, 1, 0, 1]' : 0.097276}
{'[1, 0, 6, 1, 0, 0, 0, 0, 29, 19, 0, 21, 1, 0, 0, 1, 0, 1]' : 0.0954411}
{'[1, 0, 6, 1, 0, 0, 0, 0, 29, 19, 0, 21, 1, 0, 0, 1, 0, 1]' : 0.0951381}
{'[1, 0, 6, 1, 0, 0, 0, 0, 29, 19, 0, 21, 1, 0, 0, 1, 0, 1]' : 0.095026}
{'[1, 0, 6, 1, 0, 0, 0, 0, 29, 19, 0, 21, 1, 0, 0, 1, 0, 1]' : 0.0954001}
{'[1, 0, 6, 1, 0, 0, 0, 0, 29, 19, 0, 21, 1, 0, 0, 1, 0, 1]' : 0.095438}
{'[1, 0, 6, 1, 0, 0, 0, 0, 29, 19, 0, 21, 1, 0, 0, 1, 0, 1]' : 0.0973589}
{'[1, 0, 6, 1, 0, 0, 0, 0, 29, 19, 0, 21, 1, 0, 0, 1, 0, 1]' : 0.097501}
{'[1, 0, 6, 1, 0, 0, 0, 0, 29, 19, 0, 21, 1, 0, 0, 1, 0, 1]' : 0.0974982}
{'[1, 0, 6, 1, 0, 0, 0, 0, 29, 19, 0, 21, 1, 0, 0, 1, 0, 1]' : 0.0974891}
{'[1, 0, 6, 1, 0, 0, 0, 0, 29, 19, 0, 21, 1, 0, 0, 1, 0, 1]' : 0.0979042}
{'[1, 0, 6, 1, 0, 0, 0, 0, 29, 19, 0, 21, 1, 0, 0, 1, 0, 1]' : 0.0976162}

out:
 ["{'[1, 0, 6, 1, 0, 0, 0, 0, 29, 19, 0, 21, 1, 0, 0, 1, 0, 1]' : 0.105448}", "{'[1, 0, 6, 1, 0, 0, 0, 0, 29, 19, 0, 21, 1, 0, 0, 1, 0, 1]' : 0.105414}", "{'[1, 0, 6, 1, 0, 0, 0, 0, 29, 19, 0, 21, 1, 0, 0, 1, 0, 1]' : 0.105366}", "{'[1, 0, 6, 1, 0, 0, 0, 0, 29, 19, 0, 21, 1, 0, 0, 1, 0, 1]' : 0.105404}", "{'[1, 0, 6, 1, 0, 0, 0, 0, 29, 19, 0, 21, 1, 0, 0, 1, 0, 1]' : 0.0962229}", "{'[1, 0, 6, 1, 0, 0, 0, 0, 29, 19, 0, 21, 1, 0, 0, 1, 0, 1]' : 0.0951049}", "{'[1, 0, 6, 1, 0, 0, 0, 0, 29, 19, 0, 21, 1, 0, 0, 1, 0, 1]' : 0.0953958}", "{'[1, 0, 6, 1, 0, 0, 0, 0, 29, 19, 0, 21, 1, 0, 0, 1, 0, 1]' : 0.095469}", "{'[1, 0, 6, 1, 0, 0, 0, 0, 29, 19, 0, 21, 1, 0, 0, 1, 0, 1]' : 0.096657}", "{'[1, 0, 6, 1, 0, 0, 0, 0, 29, 19, 0, 21, 1, 0, 0, 1, 0, 1]' : 0.0975499}", "{'[1, 0, 6, 1, 0, 0, 0, 0, 29, 19, 0, 21, 1, 0, 0, 1, 0, 1]' : 0.0975382}", "{'[1, 0, 6, 1, 0, 0, 0, 0, 29, 19, 0, 21, 1, 0, 0, 1, 0, 1]' : 0.0974791}", "{'[1, 0, 6, 1, 0, 0, 0, 0, 29, 19, 0, 21, 1, 0, 0, 1, 0, 1]' : 0.097466}", "{'[1, 0, 6, 1, 0, 0, 0, 0, 29, 19, 0, 21, 1, 0, 0, 1, 0, 1]' : 0.0974882}", "{'[1, 0, 6, 1, 0, 0, 0, 0, 29, 19, 0, 21, 1, 0, 0, 1, 0, 1]' : 0.0975111}", "{'[1, 0, 6, 1, 0, 0, 0, 0, 29, 19, 0, 21, 1, 0, 0, 1, 0, 1]' : 0.0973921}", "{'[1, 0, 6, 1, 0, 0, 0, 0, 29, 19, 0, 21, 1, 0, 0, 1, 0, 1]' : 0.0974982}", "{'[1, 0, 6, 1, 0, 0, 0, 0, 29, 19, 0, 21, 1, 0, 0, 1, 0, 1]' : 0.0975142}", "{'[1, 0, 6, 1, 0, 0, 0, 0, 29, 19, 0, 21, 1, 0, 0, 1, 0, 1]' : 0.097276}", "{'[1, 0, 6, 1, 0, 0, 0, 0, 29, 19, 0, 21, 1, 0, 0, 1, 0, 1]' : 0.0954411}", "{'[1, 0, 6, 1, 0, 0, 0, 0, 29, 19, 0, 21, 1, 0, 0, 1, 0, 1]' : 0.0951381}", "{'[1, 0, 6, 1, 0, 0, 0, 0, 29, 19, 0, 21, 1, 0, 0, 1, 0, 1]' : 0.095026}", "{'[1, 0, 6, 1, 0, 0, 0, 0, 29, 19, 0, 21, 1, 0, 0, 1, 0, 1]' : 0.0954001}", "{'[1, 0, 6, 1, 0, 0, 0, 0, 29, 19, 0, 21, 1, 0, 0, 1, 0, 1]' : 0.095438}", "{'[1, 0, 6, 1, 0, 0, 0, 0, 29, 19, 0, 21, 1, 0, 0, 1, 0, 1]' : 0.0973589}", "{'[1, 0, 6, 1, 0, 0, 0, 0, 29, 19, 0, 21, 1, 0, 0, 1, 0, 1]' : 0.097501}", "{'[1, 0, 6, 1, 0, 0, 0, 0, 29, 19, 0, 21, 1, 0, 0, 1, 0, 1]' : 0.0974982}", "{'[1, 0, 6, 1, 0, 0, 0, 0, 29, 19, 0, 21, 1, 0, 0, 1, 0, 1]' : 0.0974891}", "{'[1, 0, 6, 1, 0, 0, 0, 0, 29, 19, 0, 21, 1, 0, 0, 1, 0, 1]' : 0.0979042}", "{'[1, 0, 6, 1, 0, 0, 0, 0, 29, 19, 0, 21, 1, 0, 0, 1, 0, 1]' : 0.0976162}"]
returning from 'run': {'[1, 0, 6, 1, 0, 0, 0, 0, 29, 19, 0, 21, 1, 0, 0, 1, 0, 1]': ([0.105448, 0.105414, 0.105366, 0.105404, 0.0962229, 0.0951049, 0.0953958, 0.095469, 0.096657, 0.0975499, 0.0975382, 0.0974791, 0.097466, 0.0974882, 0.0975111, 0.0973921, 0.0974982, 0.0975142, 0.097276, 0.0954411, 0.0951381, 0.095026, 0.0954001, 0.095438, 0.0973589, 0.097501, 0.0974982, 0.0974891, 0.0979042, 0.0976162], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 6, 1, 0, 0, 0, 0, 29, 19, 0, 21, 1, 0, 0, 1, 0, 1]': ([0.105448, 0.105414, 0.105366, 0.105404, 0.0962229, 0.0951049, 0.0953958, 0.095469, 0.096657, 0.0975499, 0.0975382, 0.0974791, 0.097466, 0.0974882, 0.0975111, 0.0973921, 0.0974982, 0.0975142, 0.097276, 0.0954411, 0.0951381, 0.095026, 0.0954001, 0.095438, 0.0973589, 0.097501, 0.0974982, 0.0974891, 0.0979042, 0.0976162], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Design Best Point:
[3, 0, 0, 1, 6, 0, 0, 0, 9, 29, 29, 0, 1, 1, 0, 1, 0, 1]
Length of requested configs: 1
Result was on Database, Returning Now
Fixed Factors: {'ACOPY_x': 0, 'ACOPY_y': 0, 'T1_J': 0, 'RT_I': 1, 'U_J': 0, 'T2_I': 1, 'SCR': 1}
Slowdown (Design Best): 0.5506120564798844
Slowdown (Predicted Best): 0.6012386065292712
Budget: 74/180
Updating Global Best: 0.08965661999999998
Current Best Point: 
[3, 0, 0, 1, 6, 0, 0, 0, 9, 29, 29, 0, 1, 1, 0, 1, 0, 1]
Final Best Point: 
[3, 0, 0, 1, 6, 0, 0, 0, 9, 29, 29, 0, 1, 1, 0, 1, 0, 1]
Ending DOPT-ANOVA
Best Point: [3, 0, 0, 1, 6, 0, 0, 0, 9, 29, 29, 0, 1, 1, 0, 1, 0, 1]
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Speedup: 1.8161607400918458
----- end random search -----
----- begin random search summary -----
 total completed runs: 0
 total successful runs: 0
 total failed runs: 0
 speedup: 1.8161607400918458
----- end random search summary -----
----- begin summary -----
 best coordinate: [3, 0, 0, 1, 6, 0, 0, 0, 9, 29, 29, 0, 1, 1, 0, 1, 0, 1]={'ACOPY_x': False, 'ACOPY_y': False, 'RT_K': 1, 'T1_I': 64, 'T1_J': 1, 'T1_K': 1, 'U_K': 1, 'U_J': 30, 'U_I': 30, 'U1_I': 10, 'T2_K': 1, 'T2_J': 2048, 'T2_I': 64, 'VEC2': True, 'VEC1': False, 'RT_I': 8, 'SCR': True, 'RT_J': 8}, cost=8.965662e-02, transfer_time=inf, inputs=[('N', 10000)], search_time=-1398.99, runs=74
----- end summary -----
Length of requested configs: 1
Result was on Database, Returning Now
----- the obtained best performance parameters -----
 ACOPY_x = False
 ACOPY_y = False
 RT_I = 8
 RT_J = 8
 RT_K = 1
 SCR = True
 T1_I = 64
 T1_J = 1
 T1_K = 1
 T2_I = 64
 T2_J = 2048
 T2_K = 1
 U1_I = 10
 U_I = 30
 U_J = 30
 U_K = 1
 VEC1 = False
 VEC2 = True
 cost_mean = 0.08965661999999998
 points = 74
 speedup_O3 = 1.8161607400918458
 technique = DLMT
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
Code stats:
        Number of loops: 	79
        Max loop nest depth: 	4
        Additions: 		7559
        Multiplications: 	3120
        Divisions: 		0
        Logical: 		0
        Reads: 			13209
        Writes: 		1994
        Comparisons:		79
        Gotos: 			0
        
----- finish optimizations -----

----- begin removing annotations from output-----
----- finished removing annotations from output-----

----- begin writing the output file(s) -----
--> writing output to: _atax2.src1.c
----- finished writing the output file(s) -----

====== END ORIO ======
