
====== START ORIO ======

----- begin reading the source file: atax2.src1.c -----
----- finished reading the source file -----

----- begin parsing annotations -----
----- finished parsing annotations -----

----- begin optimizations -----
Search_Space         = 8.234e+13
Number_of_Parameters = 18
Numeric_Parameters   = 13
Binary_Parameters    = 05
['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
[[1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [False, True], [False, True], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 8, 32], [1, 8, 32], [1, 8, 32], [False, True], [False, True], [False, True]]

----- begin empirical tuning for problem size -----
 N = 10000
Parameters: {'ACOPY_x': [0, 2], 'ACOPY_y': [0, 2], 'RT_K': [0, 3], 'T1_I': [0, 7], 'T1_J': [0, 7], 'T1_K': [0, 7], 'U_K': [0, 30], 'U_J': [0, 30], 'U_I': [0, 30], 'U1_I': [0, 30], 'T2_K': [0, 7], 'T2_J': [0, 7], 'T2_I': [0, 7], 'VEC2': [0, 2], 'VEC1': [0, 2], 'RT_I': [0, 3], 'SCR': [0, 2], 'RT_J': [0, 3]}

----- begin random search -----
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Inverse Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Building seed search space (does not spend evaluations)
Using pre-generated space for this size
Starting DOPT-anova
Step 0
Full Model:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Fixed Factors: {}
Full data does not fit on budget
Computing D-Optimal Design
Updating Constraints
Updated Constraint: True and (((T2_I ==1 )or (T2_I %T1_I ==0 ))) and (((T2_J ==1 )or (T2_J %T1_J ==0 ))) and (((T2_K ==1 )or (T2_K %T1_K ==0 ))) and ((RT_I *RT_J +RT_I *RT_K +RT_J *RT_K <=150 )) and (((U_I ==1 )or (U_J ==1 )or (U_K ==1 )))
Computing D-Optimal Design with 41 experiments
Design Formula:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Starting "optMonteCarlo" run
       var low high center nLevels round factor   mix
1     T1_I   0    6      0       7     0  FALSE FALSE
2     T1_J   0    6      0       7     0  FALSE FALSE
3     T1_K   0    6      0       7     0  FALSE FALSE
4     T2_I   0    6      0       7     0  FALSE FALSE
5     T2_J   0    6      0       7     0  FALSE FALSE
6     T2_K   0    6      0       7     0  FALSE FALSE
7  ACOPY_x   0    1      0       2     0  FALSE FALSE
8  ACOPY_y   0    1      0       2     0  FALSE FALSE
9     U1_I   0   29      0      30     0  FALSE FALSE
10     U_I   0   29      0      30     0  FALSE FALSE
11     U_J   0   29      0      30     0  FALSE FALSE
12     U_K   0   29      0      30     0  FALSE FALSE
13    RT_I   0    2      0       3     0  FALSE FALSE
14    RT_J   0    2      0       3     0  FALSE FALSE
15    RT_K   0    2      0       3     0  FALSE FALSE
16     SCR   0    1      0       2     0  FALSE FALSE
17    VEC1   0    1      0       2     0  FALSE FALSE
18    VEC2   0    1      0       2     0  FALSE FALSE

   T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
1     0    5    0    6    3    0       1       0    3  17   0   0    1    1
2     1    3    3    2    0    1       0       1    0   3  17   0    0    0
3     4    6    0    2    0    6       1       0   26   6   0  14    1    1
4     5    0    4    5    6    2       1       0   29   4   0  27    0    1
5     0    4    2    1    4    3       1       1    6  10  19   0    0    2
6     6    3    5    5    3    5       0       0    5  28   3   0    0    0
7     2    2    0    5    0    3       1       0   25   0  28   0    0    2
8     2    3    0    2    3    2       0       1   15  22   0  29    0    1
9     0    3    4    4    0    3       0       0   14   0   0   8    1    0
10    1    2    2    3    3    6       1       1   19   0   7  24    1    1
11    4    0    0    2    2    2       1       1   27  13  10   0    2    0
12    2    4    1    0    3    2       1       0   29  23   0   2    1    0
13    3    3    6    3    1    4       1       0   16   8  28   0    1    1
14    2    0    4    6    5    2       1       1    8  28   0   5    0    1
15    2    0    6    0    4    6       0       1   28   0   3   7    0    0
16    2    0    6    3    5    4       1       1    0  24  21   0    0    0
17    5    1    3    3    4    1       0       0    8   7   0   6    0    0
18    4    5    2    2    3    6       0       0   21  23  25   0    0    1
19    2    5    0    0    6    1       1       0    5   0  15  19    0    1
20    5    6    5    6    0    3       1       1    9  11   0  23    0    0
21    5    3    4    4    1    0       0       1    6   0   0  27    0    2
22    5    0    1    5    3    0       1       0   18   6   0  29    1    0
23    3    5    4    1    6    3       1       0    0   9   0   7    0    2
24    5    0    2    0    0    4       1       0    0   0  11  13    1    1
25    3    1    6    2    6    0       1       0    1  20   0   6    2    0
26    0    3    3    6    3    3       1       0   27   3   7   0    1    1
27    0    4    2    1    4    0       0       1   24   0  21   7    0    1
28    3    2    5    0    4    5       0       0   25   0   8  13    0    0
29    5    1    3    4    6    5       1       1    8   0  26   0    1    0
30    2    0    0    4    4    5       0       1   13   1   0   3    1    1
31    2    5    5    5    3    4       0       0    9   0  22  29    2    0
32    4    2    0    3    1    5       1       1    0   0  13  19    0    0
33    2    3    6    0    2    0       1       1    9  10  29   0    0    2
34    6    3    6    0    4    4       1       1   12   0   0  15    0    1
35    1    0    0    2    5    2       1       1   11  23   4   0    1    0
36    5    6    2    4    4    2       0       1   24   0  16   8    1    1
37    0    2    0    5    2    6       0       0   20   0  29   9    0    0
38    3    5    2    6    0    6       1       1   28  29   4   0    0    0
39    0    3    0    2    6    0       0       0   29  23  24   0    1    1
40    0    1    1    0    5    5       0       1    1  18  21   0    2    0
41    3    4    4    3    5    4       0       0    9   0   1   0    0    0
   RT_K SCR VEC1 VEC2
1     0   0    0    1
2     1   0    0    0
3     0   0    1    0
4     0   1    0    0
5     0   1    0    1
6     1   1    1    0
7     0   1    1    1
8     1   0    1    1
9     1   1    1    0
10    0   1    1    1
11    0   0    1    1
12    0   1    0    0
13    0   0    0    1
14    1   0    1    0
15    1   1    1    1
16    2   0    0    0
17    0   1    0    1
18    1   1    0    0
19    1   1    0    1
20    2   1    1    1
21    0   0    0    0
22    1   1    0    1
23    0   0    1    1
24    0   0    0    0
25    0   1    0    0
26    0   0    0    0
27    0   0    1    0
28    2   0    0    0
29    1   0    1    0
30    0   1    1    0
31    0   0    1    0
32    2   1    1    0
33    0   1    1    0
34    0   1    0    1
35    0   0    0    0
36    0   1    0    1
37    1   0    0    0
38    0   0    0    0
39    0   1    1    1
40    0   0    0    1
41    2   0    1    1

D-Efficiency Approximation: [1] 0.234

Measuring design of size 41
Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = jjj
Code stats:
        Number of loops: 	35
        Max loop nest depth: 	4
        Additions: 		1857
        Multiplications: 	486
        Divisions: 		0
        Logical: 		0
        Reads: 			3041
        Writes: 		364
        Comparisons:		35
        Gotos: 			0
        
 building the original code:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -DORIGINAL -o __orio_perftest_original.exe __orio_perftest1.c timer_cpu.o -lm
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest1.exe __orio_perftest1.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest1.exe  
Program Test Output: 
{'[0, 5, 0, 6, 3, 0, 1, 0, 3, 17, 0, 0, 1, 1, 0, 0, 0, 1]' : 0.0827591}
{'[0, 5, 0, 6, 3, 0, 1, 0, 3, 17, 0, 0, 1, 1, 0, 0, 0, 1]' : 0.0826261}
{'[0, 5, 0, 6, 3, 0, 1, 0, 3, 17, 0, 0, 1, 1, 0, 0, 0, 1]' : 0.0823059}
{'[0, 5, 0, 6, 3, 0, 1, 0, 3, 17, 0, 0, 1, 1, 0, 0, 0, 1]' : 0.0829561}
{'[0, 5, 0, 6, 3, 0, 1, 0, 3, 17, 0, 0, 1, 1, 0, 0, 0, 1]' : 0.0822568}
{'[0, 5, 0, 6, 3, 0, 1, 0, 3, 17, 0, 0, 1, 1, 0, 0, 0, 1]' : 0.08234}
{'[0, 5, 0, 6, 3, 0, 1, 0, 3, 17, 0, 0, 1, 1, 0, 0, 0, 1]' : 0.0822821}
{'[0, 5, 0, 6, 3, 0, 1, 0, 3, 17, 0, 0, 1, 1, 0, 0, 0, 1]' : 0.0823741}
{'[0, 5, 0, 6, 3, 0, 1, 0, 3, 17, 0, 0, 1, 1, 0, 0, 0, 1]' : 0.082623}
{'[0, 5, 0, 6, 3, 0, 1, 0, 3, 17, 0, 0, 1, 1, 0, 0, 0, 1]' : 0.0824399}
{'[0, 5, 0, 6, 3, 0, 1, 0, 3, 17, 0, 0, 1, 1, 0, 0, 0, 1]' : 0.0825341}
{'[0, 5, 0, 6, 3, 0, 1, 0, 3, 17, 0, 0, 1, 1, 0, 0, 0, 1]' : 0.0823159}
{'[0, 5, 0, 6, 3, 0, 1, 0, 3, 17, 0, 0, 1, 1, 0, 0, 0, 1]' : 0.08235}
{'[0, 5, 0, 6, 3, 0, 1, 0, 3, 17, 0, 0, 1, 1, 0, 0, 0, 1]' : 0.08272}
{'[0, 5, 0, 6, 3, 0, 1, 0, 3, 17, 0, 0, 1, 1, 0, 0, 0, 1]' : 0.0824409}
{'[0, 5, 0, 6, 3, 0, 1, 0, 3, 17, 0, 0, 1, 1, 0, 0, 0, 1]' : 0.0825272}
{'[0, 5, 0, 6, 3, 0, 1, 0, 3, 17, 0, 0, 1, 1, 0, 0, 0, 1]' : 0.0823259}
{'[0, 5, 0, 6, 3, 0, 1, 0, 3, 17, 0, 0, 1, 1, 0, 0, 0, 1]' : 0.0822029}
{'[0, 5, 0, 6, 3, 0, 1, 0, 3, 17, 0, 0, 1, 1, 0, 0, 0, 1]' : 0.082345}
{'[0, 5, 0, 6, 3, 0, 1, 0, 3, 17, 0, 0, 1, 1, 0, 0, 0, 1]' : 0.08248}
{'[0, 5, 0, 6, 3, 0, 1, 0, 3, 17, 0, 0, 1, 1, 0, 0, 0, 1]' : 0.082783}
{'[0, 5, 0, 6, 3, 0, 1, 0, 3, 17, 0, 0, 1, 1, 0, 0, 0, 1]' : 0.082474}
{'[0, 5, 0, 6, 3, 0, 1, 0, 3, 17, 0, 0, 1, 1, 0, 0, 0, 1]' : 0.0824201}
{'[0, 5, 0, 6, 3, 0, 1, 0, 3, 17, 0, 0, 1, 1, 0, 0, 0, 1]' : 0.0822451}
{'[0, 5, 0, 6, 3, 0, 1, 0, 3, 17, 0, 0, 1, 1, 0, 0, 0, 1]' : 0.0822639}
{'[0, 5, 0, 6, 3, 0, 1, 0, 3, 17, 0, 0, 1, 1, 0, 0, 0, 1]' : 0.082629}
{'[0, 5, 0, 6, 3, 0, 1, 0, 3, 17, 0, 0, 1, 1, 0, 0, 0, 1]' : 0.082443}
{'[0, 5, 0, 6, 3, 0, 1, 0, 3, 17, 0, 0, 1, 1, 0, 0, 0, 1]' : 0.082237}
{'[0, 5, 0, 6, 3, 0, 1, 0, 3, 17, 0, 0, 1, 1, 0, 0, 0, 1]' : 0.082366}
{'[0, 5, 0, 6, 3, 0, 1, 0, 3, 17, 0, 0, 1, 1, 0, 0, 0, 1]' : 0.082418}

out:
 ["{'[0, 5, 0, 6, 3, 0, 1, 0, 3, 17, 0, 0, 1, 1, 0, 0, 0, 1]' : 0.0827591}", "{'[0, 5, 0, 6, 3, 0, 1, 0, 3, 17, 0, 0, 1, 1, 0, 0, 0, 1]' : 0.0826261}", "{'[0, 5, 0, 6, 3, 0, 1, 0, 3, 17, 0, 0, 1, 1, 0, 0, 0, 1]' : 0.0823059}", "{'[0, 5, 0, 6, 3, 0, 1, 0, 3, 17, 0, 0, 1, 1, 0, 0, 0, 1]' : 0.0829561}", "{'[0, 5, 0, 6, 3, 0, 1, 0, 3, 17, 0, 0, 1, 1, 0, 0, 0, 1]' : 0.0822568}", "{'[0, 5, 0, 6, 3, 0, 1, 0, 3, 17, 0, 0, 1, 1, 0, 0, 0, 1]' : 0.08234}", "{'[0, 5, 0, 6, 3, 0, 1, 0, 3, 17, 0, 0, 1, 1, 0, 0, 0, 1]' : 0.0822821}", "{'[0, 5, 0, 6, 3, 0, 1, 0, 3, 17, 0, 0, 1, 1, 0, 0, 0, 1]' : 0.0823741}", "{'[0, 5, 0, 6, 3, 0, 1, 0, 3, 17, 0, 0, 1, 1, 0, 0, 0, 1]' : 0.082623}", "{'[0, 5, 0, 6, 3, 0, 1, 0, 3, 17, 0, 0, 1, 1, 0, 0, 0, 1]' : 0.0824399}", "{'[0, 5, 0, 6, 3, 0, 1, 0, 3, 17, 0, 0, 1, 1, 0, 0, 0, 1]' : 0.0825341}", "{'[0, 5, 0, 6, 3, 0, 1, 0, 3, 17, 0, 0, 1, 1, 0, 0, 0, 1]' : 0.0823159}", "{'[0, 5, 0, 6, 3, 0, 1, 0, 3, 17, 0, 0, 1, 1, 0, 0, 0, 1]' : 0.08235}", "{'[0, 5, 0, 6, 3, 0, 1, 0, 3, 17, 0, 0, 1, 1, 0, 0, 0, 1]' : 0.08272}", "{'[0, 5, 0, 6, 3, 0, 1, 0, 3, 17, 0, 0, 1, 1, 0, 0, 0, 1]' : 0.0824409}", "{'[0, 5, 0, 6, 3, 0, 1, 0, 3, 17, 0, 0, 1, 1, 0, 0, 0, 1]' : 0.0825272}", "{'[0, 5, 0, 6, 3, 0, 1, 0, 3, 17, 0, 0, 1, 1, 0, 0, 0, 1]' : 0.0823259}", "{'[0, 5, 0, 6, 3, 0, 1, 0, 3, 17, 0, 0, 1, 1, 0, 0, 0, 1]' : 0.0822029}", "{'[0, 5, 0, 6, 3, 0, 1, 0, 3, 17, 0, 0, 1, 1, 0, 0, 0, 1]' : 0.082345}", "{'[0, 5, 0, 6, 3, 0, 1, 0, 3, 17, 0, 0, 1, 1, 0, 0, 0, 1]' : 0.08248}", "{'[0, 5, 0, 6, 3, 0, 1, 0, 3, 17, 0, 0, 1, 1, 0, 0, 0, 1]' : 0.082783}", "{'[0, 5, 0, 6, 3, 0, 1, 0, 3, 17, 0, 0, 1, 1, 0, 0, 0, 1]' : 0.082474}", "{'[0, 5, 0, 6, 3, 0, 1, 0, 3, 17, 0, 0, 1, 1, 0, 0, 0, 1]' : 0.0824201}", "{'[0, 5, 0, 6, 3, 0, 1, 0, 3, 17, 0, 0, 1, 1, 0, 0, 0, 1]' : 0.0822451}", "{'[0, 5, 0, 6, 3, 0, 1, 0, 3, 17, 0, 0, 1, 1, 0, 0, 0, 1]' : 0.0822639}", "{'[0, 5, 0, 6, 3, 0, 1, 0, 3, 17, 0, 0, 1, 1, 0, 0, 0, 1]' : 0.082629}", "{'[0, 5, 0, 6, 3, 0, 1, 0, 3, 17, 0, 0, 1, 1, 0, 0, 0, 1]' : 0.082443}", "{'[0, 5, 0, 6, 3, 0, 1, 0, 3, 17, 0, 0, 1, 1, 0, 0, 0, 1]' : 0.082237}", "{'[0, 5, 0, 6, 3, 0, 1, 0, 3, 17, 0, 0, 1, 1, 0, 0, 0, 1]' : 0.082366}", "{'[0, 5, 0, 6, 3, 0, 1, 0, 3, 17, 0, 0, 1, 1, 0, 0, 0, 1]' : 0.082418}"]
returning from 'run': {'[0, 5, 0, 6, 3, 0, 1, 0, 3, 17, 0, 0, 1, 1, 0, 0, 0, 1]': ([0.0827591, 0.0826261, 0.0823059, 0.0829561, 0.0822568, 0.08234, 0.0822821, 0.0823741, 0.082623, 0.0824399, 0.0825341, 0.0823159, 0.08235, 0.08272, 0.0824409, 0.0825272, 0.0823259, 0.0822029, 0.082345, 0.08248, 0.082783, 0.082474, 0.0824201, 0.0822451, 0.0822639, 0.082629, 0.082443, 0.082237, 0.082366, 0.082418], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 5, 0, 6, 3, 0, 1, 0, 3, 17, 0, 0, 1, 1, 0, 0, 0, 1]': ([0.0827591, 0.0826261, 0.0823059, 0.0829561, 0.0822568, 0.08234, 0.0822821, 0.0823741, 0.082623, 0.0824399, 0.0825341, 0.0823159, 0.08235, 0.08272, 0.0824409, 0.0825272, 0.0823259, 0.0822029, 0.082345, 0.08248, 0.082783, 0.082474, 0.0824201, 0.0822451, 0.0822639, 0.082629, 0.082443, 0.082237, 0.082366, 0.082418], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = kkk
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	5
        Additions: 		958
        Multiplications: 	270
        Divisions: 		0
        Logical: 		0
        Reads: 			1667
        Writes: 		201
        Comparisons:		25
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest2.exe __orio_perftest2.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest2.exe  
Program Test Output: 
{'[1, 3, 3, 2, 0, 1, 0, 1, 0, 3, 17, 0, 0, 0, 1, 0, 0, 0]' : 0.132501}
{'[1, 3, 3, 2, 0, 1, 0, 1, 0, 3, 17, 0, 0, 0, 1, 0, 0, 0]' : 0.132055}
{'[1, 3, 3, 2, 0, 1, 0, 1, 0, 3, 17, 0, 0, 0, 1, 0, 0, 0]' : 0.132005}
{'[1, 3, 3, 2, 0, 1, 0, 1, 0, 3, 17, 0, 0, 0, 1, 0, 0, 0]' : 0.131961}
{'[1, 3, 3, 2, 0, 1, 0, 1, 0, 3, 17, 0, 0, 0, 1, 0, 0, 0]' : 0.131911}
{'[1, 3, 3, 2, 0, 1, 0, 1, 0, 3, 17, 0, 0, 0, 1, 0, 0, 0]' : 0.132001}
{'[1, 3, 3, 2, 0, 1, 0, 1, 0, 3, 17, 0, 0, 0, 1, 0, 0, 0]' : 0.132026}
{'[1, 3, 3, 2, 0, 1, 0, 1, 0, 3, 17, 0, 0, 0, 1, 0, 0, 0]' : 0.131985}
{'[1, 3, 3, 2, 0, 1, 0, 1, 0, 3, 17, 0, 0, 0, 1, 0, 0, 0]' : 0.132026}
{'[1, 3, 3, 2, 0, 1, 0, 1, 0, 3, 17, 0, 0, 0, 1, 0, 0, 0]' : 0.131973}
{'[1, 3, 3, 2, 0, 1, 0, 1, 0, 3, 17, 0, 0, 0, 1, 0, 0, 0]' : 0.131969}
{'[1, 3, 3, 2, 0, 1, 0, 1, 0, 3, 17, 0, 0, 0, 1, 0, 0, 0]' : 0.131957}
{'[1, 3, 3, 2, 0, 1, 0, 1, 0, 3, 17, 0, 0, 0, 1, 0, 0, 0]' : 0.131958}
{'[1, 3, 3, 2, 0, 1, 0, 1, 0, 3, 17, 0, 0, 0, 1, 0, 0, 0]' : 0.132103}
{'[1, 3, 3, 2, 0, 1, 0, 1, 0, 3, 17, 0, 0, 0, 1, 0, 0, 0]' : 0.132045}
{'[1, 3, 3, 2, 0, 1, 0, 1, 0, 3, 17, 0, 0, 0, 1, 0, 0, 0]' : 0.132017}
{'[1, 3, 3, 2, 0, 1, 0, 1, 0, 3, 17, 0, 0, 0, 1, 0, 0, 0]' : 0.131995}
{'[1, 3, 3, 2, 0, 1, 0, 1, 0, 3, 17, 0, 0, 0, 1, 0, 0, 0]' : 0.131953}
{'[1, 3, 3, 2, 0, 1, 0, 1, 0, 3, 17, 0, 0, 0, 1, 0, 0, 0]' : 0.132001}
{'[1, 3, 3, 2, 0, 1, 0, 1, 0, 3, 17, 0, 0, 0, 1, 0, 0, 0]' : 0.131939}
{'[1, 3, 3, 2, 0, 1, 0, 1, 0, 3, 17, 0, 0, 0, 1, 0, 0, 0]' : 0.132022}
{'[1, 3, 3, 2, 0, 1, 0, 1, 0, 3, 17, 0, 0, 0, 1, 0, 0, 0]' : 0.132013}
{'[1, 3, 3, 2, 0, 1, 0, 1, 0, 3, 17, 0, 0, 0, 1, 0, 0, 0]' : 0.132174}
{'[1, 3, 3, 2, 0, 1, 0, 1, 0, 3, 17, 0, 0, 0, 1, 0, 0, 0]' : 0.132014}
{'[1, 3, 3, 2, 0, 1, 0, 1, 0, 3, 17, 0, 0, 0, 1, 0, 0, 0]' : 0.132014}
{'[1, 3, 3, 2, 0, 1, 0, 1, 0, 3, 17, 0, 0, 0, 1, 0, 0, 0]' : 0.132012}
{'[1, 3, 3, 2, 0, 1, 0, 1, 0, 3, 17, 0, 0, 0, 1, 0, 0, 0]' : 0.132073}
{'[1, 3, 3, 2, 0, 1, 0, 1, 0, 3, 17, 0, 0, 0, 1, 0, 0, 0]' : 0.132035}
{'[1, 3, 3, 2, 0, 1, 0, 1, 0, 3, 17, 0, 0, 0, 1, 0, 0, 0]' : 0.132114}
{'[1, 3, 3, 2, 0, 1, 0, 1, 0, 3, 17, 0, 0, 0, 1, 0, 0, 0]' : 0.132017}

out:
 ["{'[1, 3, 3, 2, 0, 1, 0, 1, 0, 3, 17, 0, 0, 0, 1, 0, 0, 0]' : 0.132501}", "{'[1, 3, 3, 2, 0, 1, 0, 1, 0, 3, 17, 0, 0, 0, 1, 0, 0, 0]' : 0.132055}", "{'[1, 3, 3, 2, 0, 1, 0, 1, 0, 3, 17, 0, 0, 0, 1, 0, 0, 0]' : 0.132005}", "{'[1, 3, 3, 2, 0, 1, 0, 1, 0, 3, 17, 0, 0, 0, 1, 0, 0, 0]' : 0.131961}", "{'[1, 3, 3, 2, 0, 1, 0, 1, 0, 3, 17, 0, 0, 0, 1, 0, 0, 0]' : 0.131911}", "{'[1, 3, 3, 2, 0, 1, 0, 1, 0, 3, 17, 0, 0, 0, 1, 0, 0, 0]' : 0.132001}", "{'[1, 3, 3, 2, 0, 1, 0, 1, 0, 3, 17, 0, 0, 0, 1, 0, 0, 0]' : 0.132026}", "{'[1, 3, 3, 2, 0, 1, 0, 1, 0, 3, 17, 0, 0, 0, 1, 0, 0, 0]' : 0.131985}", "{'[1, 3, 3, 2, 0, 1, 0, 1, 0, 3, 17, 0, 0, 0, 1, 0, 0, 0]' : 0.132026}", "{'[1, 3, 3, 2, 0, 1, 0, 1, 0, 3, 17, 0, 0, 0, 1, 0, 0, 0]' : 0.131973}", "{'[1, 3, 3, 2, 0, 1, 0, 1, 0, 3, 17, 0, 0, 0, 1, 0, 0, 0]' : 0.131969}", "{'[1, 3, 3, 2, 0, 1, 0, 1, 0, 3, 17, 0, 0, 0, 1, 0, 0, 0]' : 0.131957}", "{'[1, 3, 3, 2, 0, 1, 0, 1, 0, 3, 17, 0, 0, 0, 1, 0, 0, 0]' : 0.131958}", "{'[1, 3, 3, 2, 0, 1, 0, 1, 0, 3, 17, 0, 0, 0, 1, 0, 0, 0]' : 0.132103}", "{'[1, 3, 3, 2, 0, 1, 0, 1, 0, 3, 17, 0, 0, 0, 1, 0, 0, 0]' : 0.132045}", "{'[1, 3, 3, 2, 0, 1, 0, 1, 0, 3, 17, 0, 0, 0, 1, 0, 0, 0]' : 0.132017}", "{'[1, 3, 3, 2, 0, 1, 0, 1, 0, 3, 17, 0, 0, 0, 1, 0, 0, 0]' : 0.131995}", "{'[1, 3, 3, 2, 0, 1, 0, 1, 0, 3, 17, 0, 0, 0, 1, 0, 0, 0]' : 0.131953}", "{'[1, 3, 3, 2, 0, 1, 0, 1, 0, 3, 17, 0, 0, 0, 1, 0, 0, 0]' : 0.132001}", "{'[1, 3, 3, 2, 0, 1, 0, 1, 0, 3, 17, 0, 0, 0, 1, 0, 0, 0]' : 0.131939}", "{'[1, 3, 3, 2, 0, 1, 0, 1, 0, 3, 17, 0, 0, 0, 1, 0, 0, 0]' : 0.132022}", "{'[1, 3, 3, 2, 0, 1, 0, 1, 0, 3, 17, 0, 0, 0, 1, 0, 0, 0]' : 0.132013}", "{'[1, 3, 3, 2, 0, 1, 0, 1, 0, 3, 17, 0, 0, 0, 1, 0, 0, 0]' : 0.132174}", "{'[1, 3, 3, 2, 0, 1, 0, 1, 0, 3, 17, 0, 0, 0, 1, 0, 0, 0]' : 0.132014}", "{'[1, 3, 3, 2, 0, 1, 0, 1, 0, 3, 17, 0, 0, 0, 1, 0, 0, 0]' : 0.132014}", "{'[1, 3, 3, 2, 0, 1, 0, 1, 0, 3, 17, 0, 0, 0, 1, 0, 0, 0]' : 0.132012}", "{'[1, 3, 3, 2, 0, 1, 0, 1, 0, 3, 17, 0, 0, 0, 1, 0, 0, 0]' : 0.132073}", "{'[1, 3, 3, 2, 0, 1, 0, 1, 0, 3, 17, 0, 0, 0, 1, 0, 0, 0]' : 0.132035}", "{'[1, 3, 3, 2, 0, 1, 0, 1, 0, 3, 17, 0, 0, 0, 1, 0, 0, 0]' : 0.132114}", "{'[1, 3, 3, 2, 0, 1, 0, 1, 0, 3, 17, 0, 0, 0, 1, 0, 0, 0]' : 0.132017}"]
returning from 'run': {'[1, 3, 3, 2, 0, 1, 0, 1, 0, 3, 17, 0, 0, 0, 1, 0, 0, 0]': ([0.132501, 0.132055, 0.132005, 0.131961, 0.131911, 0.132001, 0.132026, 0.131985, 0.132026, 0.131973, 0.131969, 0.131957, 0.131958, 0.132103, 0.132045, 0.132017, 0.131995, 0.131953, 0.132001, 0.131939, 0.132022, 0.132013, 0.132174, 0.132014, 0.132014, 0.132012, 0.132073, 0.132035, 0.132114, 0.132017], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 3, 3, 2, 0, 1, 0, 1, 0, 3, 17, 0, 0, 0, 1, 0, 0, 0]': ([0.132501, 0.132055, 0.132005, 0.131961, 0.131911, 0.132001, 0.132026, 0.131985, 0.132026, 0.131973, 0.131969, 0.131957, 0.131958, 0.132103, 0.132045, 0.132017, 0.131995, 0.131953, 0.132001, 0.131939, 0.132022, 0.132013, 0.132174, 0.132014, 0.132014, 0.132012, 0.132073, 0.132035, 0.132114, 0.132017], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = iii
Code stats:
        Number of loops: 	30
        Max loop nest depth: 	4
        Additions: 		2689
        Multiplications: 	768
        Divisions: 		0
        Logical: 		0
        Reads: 			4303
        Writes: 		493
        Comparisons:		30
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest3.exe __orio_perftest3.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest3.exe  
Program Test Output: 
{'[4, 6, 0, 2, 0, 6, 1, 0, 26, 6, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.0993869}
{'[4, 6, 0, 2, 0, 6, 1, 0, 26, 6, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.09905}
{'[4, 6, 0, 2, 0, 6, 1, 0, 26, 6, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.0989799}
{'[4, 6, 0, 2, 0, 6, 1, 0, 26, 6, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.0989981}
{'[4, 6, 0, 2, 0, 6, 1, 0, 26, 6, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.0990469}
{'[4, 6, 0, 2, 0, 6, 1, 0, 26, 6, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.0990419}
{'[4, 6, 0, 2, 0, 6, 1, 0, 26, 6, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.0989821}
{'[4, 6, 0, 2, 0, 6, 1, 0, 26, 6, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.0989971}
{'[4, 6, 0, 2, 0, 6, 1, 0, 26, 6, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.098963}
{'[4, 6, 0, 2, 0, 6, 1, 0, 26, 6, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.0990899}
{'[4, 6, 0, 2, 0, 6, 1, 0, 26, 6, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.0989771}
{'[4, 6, 0, 2, 0, 6, 1, 0, 26, 6, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.0990291}
{'[4, 6, 0, 2, 0, 6, 1, 0, 26, 6, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.09902}
{'[4, 6, 0, 2, 0, 6, 1, 0, 26, 6, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.0990391}
{'[4, 6, 0, 2, 0, 6, 1, 0, 26, 6, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.0991209}
{'[4, 6, 0, 2, 0, 6, 1, 0, 26, 6, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.098932}
{'[4, 6, 0, 2, 0, 6, 1, 0, 26, 6, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.099015}
{'[4, 6, 0, 2, 0, 6, 1, 0, 26, 6, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.0989809}
{'[4, 6, 0, 2, 0, 6, 1, 0, 26, 6, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.098963}
{'[4, 6, 0, 2, 0, 6, 1, 0, 26, 6, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.098949}
{'[4, 6, 0, 2, 0, 6, 1, 0, 26, 6, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.0989859}
{'[4, 6, 0, 2, 0, 6, 1, 0, 26, 6, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.0990281}
{'[4, 6, 0, 2, 0, 6, 1, 0, 26, 6, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.099062}
{'[4, 6, 0, 2, 0, 6, 1, 0, 26, 6, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.0989749}
{'[4, 6, 0, 2, 0, 6, 1, 0, 26, 6, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.099283}
{'[4, 6, 0, 2, 0, 6, 1, 0, 26, 6, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.0990131}
{'[4, 6, 0, 2, 0, 6, 1, 0, 26, 6, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.0991509}
{'[4, 6, 0, 2, 0, 6, 1, 0, 26, 6, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.099184}
{'[4, 6, 0, 2, 0, 6, 1, 0, 26, 6, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.099916}
{'[4, 6, 0, 2, 0, 6, 1, 0, 26, 6, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.0998402}

out:
 ["{'[4, 6, 0, 2, 0, 6, 1, 0, 26, 6, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.0993869}", "{'[4, 6, 0, 2, 0, 6, 1, 0, 26, 6, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.09905}", "{'[4, 6, 0, 2, 0, 6, 1, 0, 26, 6, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.0989799}", "{'[4, 6, 0, 2, 0, 6, 1, 0, 26, 6, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.0989981}", "{'[4, 6, 0, 2, 0, 6, 1, 0, 26, 6, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.0990469}", "{'[4, 6, 0, 2, 0, 6, 1, 0, 26, 6, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.0990419}", "{'[4, 6, 0, 2, 0, 6, 1, 0, 26, 6, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.0989821}", "{'[4, 6, 0, 2, 0, 6, 1, 0, 26, 6, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.0989971}", "{'[4, 6, 0, 2, 0, 6, 1, 0, 26, 6, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.098963}", "{'[4, 6, 0, 2, 0, 6, 1, 0, 26, 6, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.0990899}", "{'[4, 6, 0, 2, 0, 6, 1, 0, 26, 6, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.0989771}", "{'[4, 6, 0, 2, 0, 6, 1, 0, 26, 6, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.0990291}", "{'[4, 6, 0, 2, 0, 6, 1, 0, 26, 6, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.09902}", "{'[4, 6, 0, 2, 0, 6, 1, 0, 26, 6, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.0990391}", "{'[4, 6, 0, 2, 0, 6, 1, 0, 26, 6, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.0991209}", "{'[4, 6, 0, 2, 0, 6, 1, 0, 26, 6, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.098932}", "{'[4, 6, 0, 2, 0, 6, 1, 0, 26, 6, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.099015}", "{'[4, 6, 0, 2, 0, 6, 1, 0, 26, 6, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.0989809}", "{'[4, 6, 0, 2, 0, 6, 1, 0, 26, 6, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.098963}", "{'[4, 6, 0, 2, 0, 6, 1, 0, 26, 6, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.098949}", "{'[4, 6, 0, 2, 0, 6, 1, 0, 26, 6, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.0989859}", "{'[4, 6, 0, 2, 0, 6, 1, 0, 26, 6, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.0990281}", "{'[4, 6, 0, 2, 0, 6, 1, 0, 26, 6, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.099062}", "{'[4, 6, 0, 2, 0, 6, 1, 0, 26, 6, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.0989749}", "{'[4, 6, 0, 2, 0, 6, 1, 0, 26, 6, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.099283}", "{'[4, 6, 0, 2, 0, 6, 1, 0, 26, 6, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.0990131}", "{'[4, 6, 0, 2, 0, 6, 1, 0, 26, 6, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.0991509}", "{'[4, 6, 0, 2, 0, 6, 1, 0, 26, 6, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.099184}", "{'[4, 6, 0, 2, 0, 6, 1, 0, 26, 6, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.099916}", "{'[4, 6, 0, 2, 0, 6, 1, 0, 26, 6, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.0998402}"]
returning from 'run': {'[4, 6, 0, 2, 0, 6, 1, 0, 26, 6, 0, 14, 1, 1, 0, 0, 1, 0]': ([0.0993869, 0.09905, 0.0989799, 0.0989981, 0.0990469, 0.0990419, 0.0989821, 0.0989971, 0.098963, 0.0990899, 0.0989771, 0.0990291, 0.09902, 0.0990391, 0.0991209, 0.098932, 0.099015, 0.0989809, 0.098963, 0.098949, 0.0989859, 0.0990281, 0.099062, 0.0989749, 0.099283, 0.0990131, 0.0991509, 0.099184, 0.099916, 0.0998402], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 6, 0, 2, 0, 6, 1, 0, 26, 6, 0, 14, 1, 1, 0, 0, 1, 0]': ([0.0993869, 0.09905, 0.0989799, 0.0989981, 0.0990469, 0.0990419, 0.0989821, 0.0989971, 0.098963, 0.0990899, 0.0989771, 0.0990291, 0.09902, 0.0990391, 0.0991209, 0.098932, 0.099015, 0.0989809, 0.098963, 0.098949, 0.0989859, 0.0990281, 0.099062, 0.0989749, 0.099283, 0.0990131, 0.0991509, 0.099184, 0.099916, 0.0998402], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = kkk
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	5
        Additions: 		1071
        Multiplications: 	444
        Divisions: 		0
        Logical: 		0
        Reads: 			2238
        Writes: 		445
        Comparisons:		22
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest4.exe __orio_perftest4.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest4.exe  
Program Test Output: 
{'[5, 0, 4, 5, 6, 2, 1, 0, 29, 4, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.100248}
{'[5, 0, 4, 5, 6, 2, 1, 0, 29, 4, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.099736}
{'[5, 0, 4, 5, 6, 2, 1, 0, 29, 4, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.099828}
{'[5, 0, 4, 5, 6, 2, 1, 0, 29, 4, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.099761}
{'[5, 0, 4, 5, 6, 2, 1, 0, 29, 4, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.0997391}
{'[5, 0, 4, 5, 6, 2, 1, 0, 29, 4, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.0996928}
{'[5, 0, 4, 5, 6, 2, 1, 0, 29, 4, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.0998549}
{'[5, 0, 4, 5, 6, 2, 1, 0, 29, 4, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.100141}
{'[5, 0, 4, 5, 6, 2, 1, 0, 29, 4, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.0997679}
{'[5, 0, 4, 5, 6, 2, 1, 0, 29, 4, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.0998039}
{'[5, 0, 4, 5, 6, 2, 1, 0, 29, 4, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.0997121}
{'[5, 0, 4, 5, 6, 2, 1, 0, 29, 4, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.0997801}
{'[5, 0, 4, 5, 6, 2, 1, 0, 29, 4, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.0997961}
{'[5, 0, 4, 5, 6, 2, 1, 0, 29, 4, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.099911}
{'[5, 0, 4, 5, 6, 2, 1, 0, 29, 4, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.0996799}
{'[5, 0, 4, 5, 6, 2, 1, 0, 29, 4, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.0997689}
{'[5, 0, 4, 5, 6, 2, 1, 0, 29, 4, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.0998211}
{'[5, 0, 4, 5, 6, 2, 1, 0, 29, 4, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.099802}
{'[5, 0, 4, 5, 6, 2, 1, 0, 29, 4, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.0997791}
{'[5, 0, 4, 5, 6, 2, 1, 0, 29, 4, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.0997381}
{'[5, 0, 4, 5, 6, 2, 1, 0, 29, 4, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.0998058}
{'[5, 0, 4, 5, 6, 2, 1, 0, 29, 4, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.0997632}
{'[5, 0, 4, 5, 6, 2, 1, 0, 29, 4, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.10023}
{'[5, 0, 4, 5, 6, 2, 1, 0, 29, 4, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.099761}
{'[5, 0, 4, 5, 6, 2, 1, 0, 29, 4, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.099745}
{'[5, 0, 4, 5, 6, 2, 1, 0, 29, 4, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.099751}
{'[5, 0, 4, 5, 6, 2, 1, 0, 29, 4, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.099694}
{'[5, 0, 4, 5, 6, 2, 1, 0, 29, 4, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.0997849}
{'[5, 0, 4, 5, 6, 2, 1, 0, 29, 4, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.0997131}
{'[5, 0, 4, 5, 6, 2, 1, 0, 29, 4, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.0997708}

out:
 ["{'[5, 0, 4, 5, 6, 2, 1, 0, 29, 4, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.100248}", "{'[5, 0, 4, 5, 6, 2, 1, 0, 29, 4, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.099736}", "{'[5, 0, 4, 5, 6, 2, 1, 0, 29, 4, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.099828}", "{'[5, 0, 4, 5, 6, 2, 1, 0, 29, 4, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.099761}", "{'[5, 0, 4, 5, 6, 2, 1, 0, 29, 4, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.0997391}", "{'[5, 0, 4, 5, 6, 2, 1, 0, 29, 4, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.0996928}", "{'[5, 0, 4, 5, 6, 2, 1, 0, 29, 4, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.0998549}", "{'[5, 0, 4, 5, 6, 2, 1, 0, 29, 4, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.100141}", "{'[5, 0, 4, 5, 6, 2, 1, 0, 29, 4, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.0997679}", "{'[5, 0, 4, 5, 6, 2, 1, 0, 29, 4, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.0998039}", "{'[5, 0, 4, 5, 6, 2, 1, 0, 29, 4, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.0997121}", "{'[5, 0, 4, 5, 6, 2, 1, 0, 29, 4, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.0997801}", "{'[5, 0, 4, 5, 6, 2, 1, 0, 29, 4, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.0997961}", "{'[5, 0, 4, 5, 6, 2, 1, 0, 29, 4, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.099911}", "{'[5, 0, 4, 5, 6, 2, 1, 0, 29, 4, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.0996799}", "{'[5, 0, 4, 5, 6, 2, 1, 0, 29, 4, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.0997689}", "{'[5, 0, 4, 5, 6, 2, 1, 0, 29, 4, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.0998211}", "{'[5, 0, 4, 5, 6, 2, 1, 0, 29, 4, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.099802}", "{'[5, 0, 4, 5, 6, 2, 1, 0, 29, 4, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.0997791}", "{'[5, 0, 4, 5, 6, 2, 1, 0, 29, 4, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.0997381}", "{'[5, 0, 4, 5, 6, 2, 1, 0, 29, 4, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.0998058}", "{'[5, 0, 4, 5, 6, 2, 1, 0, 29, 4, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.0997632}", "{'[5, 0, 4, 5, 6, 2, 1, 0, 29, 4, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.10023}", "{'[5, 0, 4, 5, 6, 2, 1, 0, 29, 4, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.099761}", "{'[5, 0, 4, 5, 6, 2, 1, 0, 29, 4, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.099745}", "{'[5, 0, 4, 5, 6, 2, 1, 0, 29, 4, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.099751}", "{'[5, 0, 4, 5, 6, 2, 1, 0, 29, 4, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.099694}", "{'[5, 0, 4, 5, 6, 2, 1, 0, 29, 4, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.0997849}", "{'[5, 0, 4, 5, 6, 2, 1, 0, 29, 4, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.0997131}", "{'[5, 0, 4, 5, 6, 2, 1, 0, 29, 4, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.0997708}"]
returning from 'run': {'[5, 0, 4, 5, 6, 2, 1, 0, 29, 4, 0, 27, 0, 1, 0, 1, 0, 0]': ([0.100248, 0.099736, 0.099828, 0.099761, 0.0997391, 0.0996928, 0.0998549, 0.100141, 0.0997679, 0.0998039, 0.0997121, 0.0997801, 0.0997961, 0.099911, 0.0996799, 0.0997689, 0.0998211, 0.099802, 0.0997791, 0.0997381, 0.0998058, 0.0997632, 0.10023, 0.099761, 0.099745, 0.099751, 0.099694, 0.0997849, 0.0997131, 0.0997708], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 0, 4, 5, 6, 2, 1, 0, 29, 4, 0, 27, 0, 1, 0, 1, 0, 0]': ([0.100248, 0.099736, 0.099828, 0.099761, 0.0997391, 0.0996928, 0.0998549, 0.100141, 0.0997679, 0.0998039, 0.0997121, 0.0997801, 0.0997961, 0.099911, 0.0996799, 0.0997689, 0.0998211, 0.099802, 0.0997791, 0.0997381, 0.0998058, 0.0997632, 0.10023, 0.099761, 0.099745, 0.099751, 0.099694, 0.0997849, 0.0997131, 0.0997708], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	53
        Max loop nest depth: 	5
        Additions: 		1853
        Multiplications: 	792
        Divisions: 		0
        Logical: 		0
        Reads: 			3631
        Writes: 		622
        Comparisons:		53
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest5.exe __orio_perftest5.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest5.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest5.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest5.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/Orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/Orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 525, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors, data)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 406, in dopt_anova
    budget)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 331, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 277, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/phrb/code/Orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest5.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/Orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/Orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 525, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors, data)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 406, in dopt_anova
    budget)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 331, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 277, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/phrb/code/Orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	6
        Additions: 		1721
        Multiplications: 	840
        Divisions: 		0
        Logical: 		0
        Reads: 			3452
        Writes: 		605
        Comparisons:		22
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest6.exe __orio_perftest6.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest6.exe  
Program Test Output: 
{'[6, 3, 5, 5, 3, 5, 0, 0, 5, 28, 3, 0, 0, 0, 1, 1, 1, 0]' : 0.142398}
{'[6, 3, 5, 5, 3, 5, 0, 0, 5, 28, 3, 0, 0, 0, 1, 1, 1, 0]' : 0.141701}
{'[6, 3, 5, 5, 3, 5, 0, 0, 5, 28, 3, 0, 0, 0, 1, 1, 1, 0]' : 0.141254}
{'[6, 3, 5, 5, 3, 5, 0, 0, 5, 28, 3, 0, 0, 0, 1, 1, 1, 0]' : 0.141122}
{'[6, 3, 5, 5, 3, 5, 0, 0, 5, 28, 3, 0, 0, 0, 1, 1, 1, 0]' : 0.140998}
{'[6, 3, 5, 5, 3, 5, 0, 0, 5, 28, 3, 0, 0, 0, 1, 1, 1, 0]' : 0.141215}
{'[6, 3, 5, 5, 3, 5, 0, 0, 5, 28, 3, 0, 0, 0, 1, 1, 1, 0]' : 0.141009}
{'[6, 3, 5, 5, 3, 5, 0, 0, 5, 28, 3, 0, 0, 0, 1, 1, 1, 0]' : 0.141459}
{'[6, 3, 5, 5, 3, 5, 0, 0, 5, 28, 3, 0, 0, 0, 1, 1, 1, 0]' : 0.141058}
{'[6, 3, 5, 5, 3, 5, 0, 0, 5, 28, 3, 0, 0, 0, 1, 1, 1, 0]' : 0.140925}
{'[6, 3, 5, 5, 3, 5, 0, 0, 5, 28, 3, 0, 0, 0, 1, 1, 1, 0]' : 0.140675}
{'[6, 3, 5, 5, 3, 5, 0, 0, 5, 28, 3, 0, 0, 0, 1, 1, 1, 0]' : 0.141719}
{'[6, 3, 5, 5, 3, 5, 0, 0, 5, 28, 3, 0, 0, 0, 1, 1, 1, 0]' : 0.141209}
{'[6, 3, 5, 5, 3, 5, 0, 0, 5, 28, 3, 0, 0, 0, 1, 1, 1, 0]' : 0.141126}
{'[6, 3, 5, 5, 3, 5, 0, 0, 5, 28, 3, 0, 0, 0, 1, 1, 1, 0]' : 0.14078}
{'[6, 3, 5, 5, 3, 5, 0, 0, 5, 28, 3, 0, 0, 0, 1, 1, 1, 0]' : 0.141267}
{'[6, 3, 5, 5, 3, 5, 0, 0, 5, 28, 3, 0, 0, 0, 1, 1, 1, 0]' : 0.141214}
{'[6, 3, 5, 5, 3, 5, 0, 0, 5, 28, 3, 0, 0, 0, 1, 1, 1, 0]' : 0.141152}
{'[6, 3, 5, 5, 3, 5, 0, 0, 5, 28, 3, 0, 0, 0, 1, 1, 1, 0]' : 0.141376}
{'[6, 3, 5, 5, 3, 5, 0, 0, 5, 28, 3, 0, 0, 0, 1, 1, 1, 0]' : 0.141307}
{'[6, 3, 5, 5, 3, 5, 0, 0, 5, 28, 3, 0, 0, 0, 1, 1, 1, 0]' : 0.141377}
{'[6, 3, 5, 5, 3, 5, 0, 0, 5, 28, 3, 0, 0, 0, 1, 1, 1, 0]' : 0.141056}
{'[6, 3, 5, 5, 3, 5, 0, 0, 5, 28, 3, 0, 0, 0, 1, 1, 1, 0]' : 0.141786}
{'[6, 3, 5, 5, 3, 5, 0, 0, 5, 28, 3, 0, 0, 0, 1, 1, 1, 0]' : 0.141209}
{'[6, 3, 5, 5, 3, 5, 0, 0, 5, 28, 3, 0, 0, 0, 1, 1, 1, 0]' : 0.142019}
{'[6, 3, 5, 5, 3, 5, 0, 0, 5, 28, 3, 0, 0, 0, 1, 1, 1, 0]' : 0.141059}
{'[6, 3, 5, 5, 3, 5, 0, 0, 5, 28, 3, 0, 0, 0, 1, 1, 1, 0]' : 0.141597}
{'[6, 3, 5, 5, 3, 5, 0, 0, 5, 28, 3, 0, 0, 0, 1, 1, 1, 0]' : 0.141107}
{'[6, 3, 5, 5, 3, 5, 0, 0, 5, 28, 3, 0, 0, 0, 1, 1, 1, 0]' : 0.141512}
{'[6, 3, 5, 5, 3, 5, 0, 0, 5, 28, 3, 0, 0, 0, 1, 1, 1, 0]' : 0.141568}

out:
 ["{'[6, 3, 5, 5, 3, 5, 0, 0, 5, 28, 3, 0, 0, 0, 1, 1, 1, 0]' : 0.142398}", "{'[6, 3, 5, 5, 3, 5, 0, 0, 5, 28, 3, 0, 0, 0, 1, 1, 1, 0]' : 0.141701}", "{'[6, 3, 5, 5, 3, 5, 0, 0, 5, 28, 3, 0, 0, 0, 1, 1, 1, 0]' : 0.141254}", "{'[6, 3, 5, 5, 3, 5, 0, 0, 5, 28, 3, 0, 0, 0, 1, 1, 1, 0]' : 0.141122}", "{'[6, 3, 5, 5, 3, 5, 0, 0, 5, 28, 3, 0, 0, 0, 1, 1, 1, 0]' : 0.140998}", "{'[6, 3, 5, 5, 3, 5, 0, 0, 5, 28, 3, 0, 0, 0, 1, 1, 1, 0]' : 0.141215}", "{'[6, 3, 5, 5, 3, 5, 0, 0, 5, 28, 3, 0, 0, 0, 1, 1, 1, 0]' : 0.141009}", "{'[6, 3, 5, 5, 3, 5, 0, 0, 5, 28, 3, 0, 0, 0, 1, 1, 1, 0]' : 0.141459}", "{'[6, 3, 5, 5, 3, 5, 0, 0, 5, 28, 3, 0, 0, 0, 1, 1, 1, 0]' : 0.141058}", "{'[6, 3, 5, 5, 3, 5, 0, 0, 5, 28, 3, 0, 0, 0, 1, 1, 1, 0]' : 0.140925}", "{'[6, 3, 5, 5, 3, 5, 0, 0, 5, 28, 3, 0, 0, 0, 1, 1, 1, 0]' : 0.140675}", "{'[6, 3, 5, 5, 3, 5, 0, 0, 5, 28, 3, 0, 0, 0, 1, 1, 1, 0]' : 0.141719}", "{'[6, 3, 5, 5, 3, 5, 0, 0, 5, 28, 3, 0, 0, 0, 1, 1, 1, 0]' : 0.141209}", "{'[6, 3, 5, 5, 3, 5, 0, 0, 5, 28, 3, 0, 0, 0, 1, 1, 1, 0]' : 0.141126}", "{'[6, 3, 5, 5, 3, 5, 0, 0, 5, 28, 3, 0, 0, 0, 1, 1, 1, 0]' : 0.14078}", "{'[6, 3, 5, 5, 3, 5, 0, 0, 5, 28, 3, 0, 0, 0, 1, 1, 1, 0]' : 0.141267}", "{'[6, 3, 5, 5, 3, 5, 0, 0, 5, 28, 3, 0, 0, 0, 1, 1, 1, 0]' : 0.141214}", "{'[6, 3, 5, 5, 3, 5, 0, 0, 5, 28, 3, 0, 0, 0, 1, 1, 1, 0]' : 0.141152}", "{'[6, 3, 5, 5, 3, 5, 0, 0, 5, 28, 3, 0, 0, 0, 1, 1, 1, 0]' : 0.141376}", "{'[6, 3, 5, 5, 3, 5, 0, 0, 5, 28, 3, 0, 0, 0, 1, 1, 1, 0]' : 0.141307}", "{'[6, 3, 5, 5, 3, 5, 0, 0, 5, 28, 3, 0, 0, 0, 1, 1, 1, 0]' : 0.141377}", "{'[6, 3, 5, 5, 3, 5, 0, 0, 5, 28, 3, 0, 0, 0, 1, 1, 1, 0]' : 0.141056}", "{'[6, 3, 5, 5, 3, 5, 0, 0, 5, 28, 3, 0, 0, 0, 1, 1, 1, 0]' : 0.141786}", "{'[6, 3, 5, 5, 3, 5, 0, 0, 5, 28, 3, 0, 0, 0, 1, 1, 1, 0]' : 0.141209}", "{'[6, 3, 5, 5, 3, 5, 0, 0, 5, 28, 3, 0, 0, 0, 1, 1, 1, 0]' : 0.142019}", "{'[6, 3, 5, 5, 3, 5, 0, 0, 5, 28, 3, 0, 0, 0, 1, 1, 1, 0]' : 0.141059}", "{'[6, 3, 5, 5, 3, 5, 0, 0, 5, 28, 3, 0, 0, 0, 1, 1, 1, 0]' : 0.141597}", "{'[6, 3, 5, 5, 3, 5, 0, 0, 5, 28, 3, 0, 0, 0, 1, 1, 1, 0]' : 0.141107}", "{'[6, 3, 5, 5, 3, 5, 0, 0, 5, 28, 3, 0, 0, 0, 1, 1, 1, 0]' : 0.141512}", "{'[6, 3, 5, 5, 3, 5, 0, 0, 5, 28, 3, 0, 0, 0, 1, 1, 1, 0]' : 0.141568}"]
returning from 'run': {'[6, 3, 5, 5, 3, 5, 0, 0, 5, 28, 3, 0, 0, 0, 1, 1, 1, 0]': ([0.142398, 0.141701, 0.141254, 0.141122, 0.140998, 0.141215, 0.141009, 0.141459, 0.141058, 0.140925, 0.140675, 0.141719, 0.141209, 0.141126, 0.14078, 0.141267, 0.141214, 0.141152, 0.141376, 0.141307, 0.141377, 0.141056, 0.141786, 0.141209, 0.142019, 0.141059, 0.141597, 0.141107, 0.141512, 0.141568], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 3, 5, 5, 3, 5, 0, 0, 5, 28, 3, 0, 0, 0, 1, 1, 1, 0]': ([0.142398, 0.141701, 0.141254, 0.141122, 0.140998, 0.141215, 0.141009, 0.141459, 0.141058, 0.140925, 0.140675, 0.141719, 0.141209, 0.141126, 0.14078, 0.141267, 0.141214, 0.141152, 0.141376, 0.141307, 0.141377, 0.141056, 0.141786, 0.141209, 0.142019, 0.141059, 0.141597, 0.141107, 0.141512, 0.141568], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	5
        Additions: 		215
        Multiplications: 	66
        Divisions: 		0
        Logical: 		0
        Reads: 			439
        Writes: 		91
        Comparisons:		10
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest7.exe __orio_perftest7.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest7.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest7.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest7.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/Orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/Orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 525, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors, data)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 406, in dopt_anova
    budget)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 331, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 277, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/phrb/code/Orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest7.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/Orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/Orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 525, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors, data)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 406, in dopt_anova
    budget)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 331, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 277, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/phrb/code/Orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	66
        Max loop nest depth: 	6
        Additions: 		3279
        Multiplications: 	816
        Divisions: 		0
        Logical: 		0
        Reads: 			5258
        Writes: 		638
        Comparisons:		66
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest8.exe __orio_perftest8.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest8.exe  
Program Test Output: 
{'[2, 3, 0, 2, 3, 2, 0, 1, 15, 22, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.154887}
{'[2, 3, 0, 2, 3, 2, 0, 1, 15, 22, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.154553}
{'[2, 3, 0, 2, 3, 2, 0, 1, 15, 22, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.155231}
{'[2, 3, 0, 2, 3, 2, 0, 1, 15, 22, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.154434}
{'[2, 3, 0, 2, 3, 2, 0, 1, 15, 22, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.154389}
{'[2, 3, 0, 2, 3, 2, 0, 1, 15, 22, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.154513}
{'[2, 3, 0, 2, 3, 2, 0, 1, 15, 22, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.154454}
{'[2, 3, 0, 2, 3, 2, 0, 1, 15, 22, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.154418}
{'[2, 3, 0, 2, 3, 2, 0, 1, 15, 22, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.15443}
{'[2, 3, 0, 2, 3, 2, 0, 1, 15, 22, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.154573}
{'[2, 3, 0, 2, 3, 2, 0, 1, 15, 22, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.154451}
{'[2, 3, 0, 2, 3, 2, 0, 1, 15, 22, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.154367}
{'[2, 3, 0, 2, 3, 2, 0, 1, 15, 22, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.155185}
{'[2, 3, 0, 2, 3, 2, 0, 1, 15, 22, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.154516}
{'[2, 3, 0, 2, 3, 2, 0, 1, 15, 22, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.154513}
{'[2, 3, 0, 2, 3, 2, 0, 1, 15, 22, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.154544}
{'[2, 3, 0, 2, 3, 2, 0, 1, 15, 22, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.154497}
{'[2, 3, 0, 2, 3, 2, 0, 1, 15, 22, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.154392}
{'[2, 3, 0, 2, 3, 2, 0, 1, 15, 22, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.154513}
{'[2, 3, 0, 2, 3, 2, 0, 1, 15, 22, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.154662}
{'[2, 3, 0, 2, 3, 2, 0, 1, 15, 22, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.154406}
{'[2, 3, 0, 2, 3, 2, 0, 1, 15, 22, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.154521}
{'[2, 3, 0, 2, 3, 2, 0, 1, 15, 22, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.154934}
{'[2, 3, 0, 2, 3, 2, 0, 1, 15, 22, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.154373}
{'[2, 3, 0, 2, 3, 2, 0, 1, 15, 22, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.154516}
{'[2, 3, 0, 2, 3, 2, 0, 1, 15, 22, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.154567}
{'[2, 3, 0, 2, 3, 2, 0, 1, 15, 22, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.154498}
{'[2, 3, 0, 2, 3, 2, 0, 1, 15, 22, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.154441}
{'[2, 3, 0, 2, 3, 2, 0, 1, 15, 22, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.154421}
{'[2, 3, 0, 2, 3, 2, 0, 1, 15, 22, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.154311}

out:
 ["{'[2, 3, 0, 2, 3, 2, 0, 1, 15, 22, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.154887}", "{'[2, 3, 0, 2, 3, 2, 0, 1, 15, 22, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.154553}", "{'[2, 3, 0, 2, 3, 2, 0, 1, 15, 22, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.155231}", "{'[2, 3, 0, 2, 3, 2, 0, 1, 15, 22, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.154434}", "{'[2, 3, 0, 2, 3, 2, 0, 1, 15, 22, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.154389}", "{'[2, 3, 0, 2, 3, 2, 0, 1, 15, 22, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.154513}", "{'[2, 3, 0, 2, 3, 2, 0, 1, 15, 22, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.154454}", "{'[2, 3, 0, 2, 3, 2, 0, 1, 15, 22, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.154418}", "{'[2, 3, 0, 2, 3, 2, 0, 1, 15, 22, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.15443}", "{'[2, 3, 0, 2, 3, 2, 0, 1, 15, 22, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.154573}", "{'[2, 3, 0, 2, 3, 2, 0, 1, 15, 22, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.154451}", "{'[2, 3, 0, 2, 3, 2, 0, 1, 15, 22, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.154367}", "{'[2, 3, 0, 2, 3, 2, 0, 1, 15, 22, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.155185}", "{'[2, 3, 0, 2, 3, 2, 0, 1, 15, 22, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.154516}", "{'[2, 3, 0, 2, 3, 2, 0, 1, 15, 22, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.154513}", "{'[2, 3, 0, 2, 3, 2, 0, 1, 15, 22, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.154544}", "{'[2, 3, 0, 2, 3, 2, 0, 1, 15, 22, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.154497}", "{'[2, 3, 0, 2, 3, 2, 0, 1, 15, 22, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.154392}", "{'[2, 3, 0, 2, 3, 2, 0, 1, 15, 22, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.154513}", "{'[2, 3, 0, 2, 3, 2, 0, 1, 15, 22, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.154662}", "{'[2, 3, 0, 2, 3, 2, 0, 1, 15, 22, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.154406}", "{'[2, 3, 0, 2, 3, 2, 0, 1, 15, 22, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.154521}", "{'[2, 3, 0, 2, 3, 2, 0, 1, 15, 22, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.154934}", "{'[2, 3, 0, 2, 3, 2, 0, 1, 15, 22, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.154373}", "{'[2, 3, 0, 2, 3, 2, 0, 1, 15, 22, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.154516}", "{'[2, 3, 0, 2, 3, 2, 0, 1, 15, 22, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.154567}", "{'[2, 3, 0, 2, 3, 2, 0, 1, 15, 22, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.154498}", "{'[2, 3, 0, 2, 3, 2, 0, 1, 15, 22, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.154441}", "{'[2, 3, 0, 2, 3, 2, 0, 1, 15, 22, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.154421}", "{'[2, 3, 0, 2, 3, 2, 0, 1, 15, 22, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.154311}"]
returning from 'run': {'[2, 3, 0, 2, 3, 2, 0, 1, 15, 22, 0, 29, 0, 1, 1, 0, 1, 1]': ([0.154887, 0.154553, 0.155231, 0.154434, 0.154389, 0.154513, 0.154454, 0.154418, 0.15443, 0.154573, 0.154451, 0.154367, 0.155185, 0.154516, 0.154513, 0.154544, 0.154497, 0.154392, 0.154513, 0.154662, 0.154406, 0.154521, 0.154934, 0.154373, 0.154516, 0.154567, 0.154498, 0.154441, 0.154421, 0.154311], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 3, 0, 2, 3, 2, 0, 1, 15, 22, 0, 29, 0, 1, 1, 0, 1, 1]': ([0.154887, 0.154553, 0.155231, 0.154434, 0.154389, 0.154513, 0.154454, 0.154418, 0.15443, 0.154573, 0.154451, 0.154367, 0.155185, 0.154516, 0.154513, 0.154544, 0.154497, 0.154392, 0.154513, 0.154662, 0.154406, 0.154521, 0.154934, 0.154373, 0.154516, 0.154567, 0.154498, 0.154441, 0.154421, 0.154311], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	5
        Additions: 		774
        Multiplications: 	342
        Divisions: 		0
        Logical: 		0
        Reads: 			1640
        Writes: 		321
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest9.exe __orio_perftest9.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest9.exe  
Program Test Output: 
{'[0, 3, 4, 4, 0, 3, 0, 0, 14, 0, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.08112}
{'[0, 3, 4, 4, 0, 3, 0, 0, 14, 0, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0807791}
{'[0, 3, 4, 4, 0, 3, 0, 0, 14, 0, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.080801}
{'[0, 3, 4, 4, 0, 3, 0, 0, 14, 0, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.080972}
{'[0, 3, 4, 4, 0, 3, 0, 0, 14, 0, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.080977}
{'[0, 3, 4, 4, 0, 3, 0, 0, 14, 0, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0810652}
{'[0, 3, 4, 4, 0, 3, 0, 0, 14, 0, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0809848}
{'[0, 3, 4, 4, 0, 3, 0, 0, 14, 0, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.081032}
{'[0, 3, 4, 4, 0, 3, 0, 0, 14, 0, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.081028}
{'[0, 3, 4, 4, 0, 3, 0, 0, 14, 0, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0809751}
{'[0, 3, 4, 4, 0, 3, 0, 0, 14, 0, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.081007}
{'[0, 3, 4, 4, 0, 3, 0, 0, 14, 0, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0809641}
{'[0, 3, 4, 4, 0, 3, 0, 0, 14, 0, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0809522}
{'[0, 3, 4, 4, 0, 3, 0, 0, 14, 0, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0809619}
{'[0, 3, 4, 4, 0, 3, 0, 0, 14, 0, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0809989}
{'[0, 3, 4, 4, 0, 3, 0, 0, 14, 0, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.080986}
{'[0, 3, 4, 4, 0, 3, 0, 0, 14, 0, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0809622}
{'[0, 3, 4, 4, 0, 3, 0, 0, 14, 0, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0814619}
{'[0, 3, 4, 4, 0, 3, 0, 0, 14, 0, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0809681}
{'[0, 3, 4, 4, 0, 3, 0, 0, 14, 0, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0809588}
{'[0, 3, 4, 4, 0, 3, 0, 0, 14, 0, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.080981}
{'[0, 3, 4, 4, 0, 3, 0, 0, 14, 0, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0810142}
{'[0, 3, 4, 4, 0, 3, 0, 0, 14, 0, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.081022}
{'[0, 3, 4, 4, 0, 3, 0, 0, 14, 0, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.080951}
{'[0, 3, 4, 4, 0, 3, 0, 0, 14, 0, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0809569}
{'[0, 3, 4, 4, 0, 3, 0, 0, 14, 0, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0809691}
{'[0, 3, 4, 4, 0, 3, 0, 0, 14, 0, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0809379}
{'[0, 3, 4, 4, 0, 3, 0, 0, 14, 0, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0809681}
{'[0, 3, 4, 4, 0, 3, 0, 0, 14, 0, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.080935}
{'[0, 3, 4, 4, 0, 3, 0, 0, 14, 0, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0809739}

out:
 ["{'[0, 3, 4, 4, 0, 3, 0, 0, 14, 0, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.08112}", "{'[0, 3, 4, 4, 0, 3, 0, 0, 14, 0, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0807791}", "{'[0, 3, 4, 4, 0, 3, 0, 0, 14, 0, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.080801}", "{'[0, 3, 4, 4, 0, 3, 0, 0, 14, 0, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.080972}", "{'[0, 3, 4, 4, 0, 3, 0, 0, 14, 0, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.080977}", "{'[0, 3, 4, 4, 0, 3, 0, 0, 14, 0, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0810652}", "{'[0, 3, 4, 4, 0, 3, 0, 0, 14, 0, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0809848}", "{'[0, 3, 4, 4, 0, 3, 0, 0, 14, 0, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.081032}", "{'[0, 3, 4, 4, 0, 3, 0, 0, 14, 0, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.081028}", "{'[0, 3, 4, 4, 0, 3, 0, 0, 14, 0, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0809751}", "{'[0, 3, 4, 4, 0, 3, 0, 0, 14, 0, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.081007}", "{'[0, 3, 4, 4, 0, 3, 0, 0, 14, 0, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0809641}", "{'[0, 3, 4, 4, 0, 3, 0, 0, 14, 0, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0809522}", "{'[0, 3, 4, 4, 0, 3, 0, 0, 14, 0, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0809619}", "{'[0, 3, 4, 4, 0, 3, 0, 0, 14, 0, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0809989}", "{'[0, 3, 4, 4, 0, 3, 0, 0, 14, 0, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.080986}", "{'[0, 3, 4, 4, 0, 3, 0, 0, 14, 0, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0809622}", "{'[0, 3, 4, 4, 0, 3, 0, 0, 14, 0, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0814619}", "{'[0, 3, 4, 4, 0, 3, 0, 0, 14, 0, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0809681}", "{'[0, 3, 4, 4, 0, 3, 0, 0, 14, 0, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0809588}", "{'[0, 3, 4, 4, 0, 3, 0, 0, 14, 0, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.080981}", "{'[0, 3, 4, 4, 0, 3, 0, 0, 14, 0, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0810142}", "{'[0, 3, 4, 4, 0, 3, 0, 0, 14, 0, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.081022}", "{'[0, 3, 4, 4, 0, 3, 0, 0, 14, 0, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.080951}", "{'[0, 3, 4, 4, 0, 3, 0, 0, 14, 0, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0809569}", "{'[0, 3, 4, 4, 0, 3, 0, 0, 14, 0, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0809691}", "{'[0, 3, 4, 4, 0, 3, 0, 0, 14, 0, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0809379}", "{'[0, 3, 4, 4, 0, 3, 0, 0, 14, 0, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0809681}", "{'[0, 3, 4, 4, 0, 3, 0, 0, 14, 0, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.080935}", "{'[0, 3, 4, 4, 0, 3, 0, 0, 14, 0, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0809739}"]
returning from 'run': {'[0, 3, 4, 4, 0, 3, 0, 0, 14, 0, 0, 8, 1, 0, 1, 1, 1, 0]': ([0.08112, 0.0807791, 0.080801, 0.080972, 0.080977, 0.0810652, 0.0809848, 0.081032, 0.081028, 0.0809751, 0.081007, 0.0809641, 0.0809522, 0.0809619, 0.0809989, 0.080986, 0.0809622, 0.0814619, 0.0809681, 0.0809588, 0.080981, 0.0810142, 0.081022, 0.080951, 0.0809569, 0.0809691, 0.0809379, 0.0809681, 0.080935, 0.0809739], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 3, 4, 4, 0, 3, 0, 0, 14, 0, 0, 8, 1, 0, 1, 1, 1, 0]': ([0.08112, 0.0807791, 0.080801, 0.080972, 0.080977, 0.0810652, 0.0809848, 0.081032, 0.081028, 0.0809751, 0.081007, 0.0809641, 0.0809522, 0.0809619, 0.0809989, 0.080986, 0.0809622, 0.0814619, 0.0809681, 0.0809588, 0.080981, 0.0810142, 0.081022, 0.080951, 0.0809569, 0.0809691, 0.0809379, 0.0809681, 0.080935, 0.0809739], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	26
        Max loop nest depth: 	6
        Additions: 		1495
        Multiplications: 	612
        Divisions: 		0
        Logical: 		0
        Reads: 			2934
        Writes: 		528
        Comparisons:		26
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest10.exe __orio_perftest10.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest10.exe  
Program Test Output: 
{'[1, 2, 2, 3, 3, 6, 1, 1, 19, 0, 7, 24, 1, 1, 0, 1, 1, 1]' : 0.097182}
{'[1, 2, 2, 3, 3, 6, 1, 1, 19, 0, 7, 24, 1, 1, 0, 1, 1, 1]' : 0.096787}
{'[1, 2, 2, 3, 3, 6, 1, 1, 19, 0, 7, 24, 1, 1, 0, 1, 1, 1]' : 0.096714}
{'[1, 2, 2, 3, 3, 6, 1, 1, 19, 0, 7, 24, 1, 1, 0, 1, 1, 1]' : 0.0967641}
{'[1, 2, 2, 3, 3, 6, 1, 1, 19, 0, 7, 24, 1, 1, 0, 1, 1, 1]' : 0.0968239}
{'[1, 2, 2, 3, 3, 6, 1, 1, 19, 0, 7, 24, 1, 1, 0, 1, 1, 1]' : 0.0967619}
{'[1, 2, 2, 3, 3, 6, 1, 1, 19, 0, 7, 24, 1, 1, 0, 1, 1, 1]' : 0.09725}
{'[1, 2, 2, 3, 3, 6, 1, 1, 19, 0, 7, 24, 1, 1, 0, 1, 1, 1]' : 0.0967309}
{'[1, 2, 2, 3, 3, 6, 1, 1, 19, 0, 7, 24, 1, 1, 0, 1, 1, 1]' : 0.0967159}
{'[1, 2, 2, 3, 3, 6, 1, 1, 19, 0, 7, 24, 1, 1, 0, 1, 1, 1]' : 0.0967422}
{'[1, 2, 2, 3, 3, 6, 1, 1, 19, 0, 7, 24, 1, 1, 0, 1, 1, 1]' : 0.0967059}
{'[1, 2, 2, 3, 3, 6, 1, 1, 19, 0, 7, 24, 1, 1, 0, 1, 1, 1]' : 0.096761}
{'[1, 2, 2, 3, 3, 6, 1, 1, 19, 0, 7, 24, 1, 1, 0, 1, 1, 1]' : 0.096705}
{'[1, 2, 2, 3, 3, 6, 1, 1, 19, 0, 7, 24, 1, 1, 0, 1, 1, 1]' : 0.0968289}
{'[1, 2, 2, 3, 3, 6, 1, 1, 19, 0, 7, 24, 1, 1, 0, 1, 1, 1]' : 0.096755}
{'[1, 2, 2, 3, 3, 6, 1, 1, 19, 0, 7, 24, 1, 1, 0, 1, 1, 1]' : 0.0967572}
{'[1, 2, 2, 3, 3, 6, 1, 1, 19, 0, 7, 24, 1, 1, 0, 1, 1, 1]' : 0.0967431}
{'[1, 2, 2, 3, 3, 6, 1, 1, 19, 0, 7, 24, 1, 1, 0, 1, 1, 1]' : 0.0967071}
{'[1, 2, 2, 3, 3, 6, 1, 1, 19, 0, 7, 24, 1, 1, 0, 1, 1, 1]' : 0.096746}
{'[1, 2, 2, 3, 3, 6, 1, 1, 19, 0, 7, 24, 1, 1, 0, 1, 1, 1]' : 0.0967202}
{'[1, 2, 2, 3, 3, 6, 1, 1, 19, 0, 7, 24, 1, 1, 0, 1, 1, 1]' : 0.0967362}
{'[1, 2, 2, 3, 3, 6, 1, 1, 19, 0, 7, 24, 1, 1, 0, 1, 1, 1]' : 0.0972409}
{'[1, 2, 2, 3, 3, 6, 1, 1, 19, 0, 7, 24, 1, 1, 0, 1, 1, 1]' : 0.096807}
{'[1, 2, 2, 3, 3, 6, 1, 1, 19, 0, 7, 24, 1, 1, 0, 1, 1, 1]' : 0.0967278}
{'[1, 2, 2, 3, 3, 6, 1, 1, 19, 0, 7, 24, 1, 1, 0, 1, 1, 1]' : 0.0967622}
{'[1, 2, 2, 3, 3, 6, 1, 1, 19, 0, 7, 24, 1, 1, 0, 1, 1, 1]' : 0.096689}
{'[1, 2, 2, 3, 3, 6, 1, 1, 19, 0, 7, 24, 1, 1, 0, 1, 1, 1]' : 0.096689}
{'[1, 2, 2, 3, 3, 6, 1, 1, 19, 0, 7, 24, 1, 1, 0, 1, 1, 1]' : 0.0967438}
{'[1, 2, 2, 3, 3, 6, 1, 1, 19, 0, 7, 24, 1, 1, 0, 1, 1, 1]' : 0.0967782}
{'[1, 2, 2, 3, 3, 6, 1, 1, 19, 0, 7, 24, 1, 1, 0, 1, 1, 1]' : 0.0967309}

out:
 ["{'[1, 2, 2, 3, 3, 6, 1, 1, 19, 0, 7, 24, 1, 1, 0, 1, 1, 1]' : 0.097182}", "{'[1, 2, 2, 3, 3, 6, 1, 1, 19, 0, 7, 24, 1, 1, 0, 1, 1, 1]' : 0.096787}", "{'[1, 2, 2, 3, 3, 6, 1, 1, 19, 0, 7, 24, 1, 1, 0, 1, 1, 1]' : 0.096714}", "{'[1, 2, 2, 3, 3, 6, 1, 1, 19, 0, 7, 24, 1, 1, 0, 1, 1, 1]' : 0.0967641}", "{'[1, 2, 2, 3, 3, 6, 1, 1, 19, 0, 7, 24, 1, 1, 0, 1, 1, 1]' : 0.0968239}", "{'[1, 2, 2, 3, 3, 6, 1, 1, 19, 0, 7, 24, 1, 1, 0, 1, 1, 1]' : 0.0967619}", "{'[1, 2, 2, 3, 3, 6, 1, 1, 19, 0, 7, 24, 1, 1, 0, 1, 1, 1]' : 0.09725}", "{'[1, 2, 2, 3, 3, 6, 1, 1, 19, 0, 7, 24, 1, 1, 0, 1, 1, 1]' : 0.0967309}", "{'[1, 2, 2, 3, 3, 6, 1, 1, 19, 0, 7, 24, 1, 1, 0, 1, 1, 1]' : 0.0967159}", "{'[1, 2, 2, 3, 3, 6, 1, 1, 19, 0, 7, 24, 1, 1, 0, 1, 1, 1]' : 0.0967422}", "{'[1, 2, 2, 3, 3, 6, 1, 1, 19, 0, 7, 24, 1, 1, 0, 1, 1, 1]' : 0.0967059}", "{'[1, 2, 2, 3, 3, 6, 1, 1, 19, 0, 7, 24, 1, 1, 0, 1, 1, 1]' : 0.096761}", "{'[1, 2, 2, 3, 3, 6, 1, 1, 19, 0, 7, 24, 1, 1, 0, 1, 1, 1]' : 0.096705}", "{'[1, 2, 2, 3, 3, 6, 1, 1, 19, 0, 7, 24, 1, 1, 0, 1, 1, 1]' : 0.0968289}", "{'[1, 2, 2, 3, 3, 6, 1, 1, 19, 0, 7, 24, 1, 1, 0, 1, 1, 1]' : 0.096755}", "{'[1, 2, 2, 3, 3, 6, 1, 1, 19, 0, 7, 24, 1, 1, 0, 1, 1, 1]' : 0.0967572}", "{'[1, 2, 2, 3, 3, 6, 1, 1, 19, 0, 7, 24, 1, 1, 0, 1, 1, 1]' : 0.0967431}", "{'[1, 2, 2, 3, 3, 6, 1, 1, 19, 0, 7, 24, 1, 1, 0, 1, 1, 1]' : 0.0967071}", "{'[1, 2, 2, 3, 3, 6, 1, 1, 19, 0, 7, 24, 1, 1, 0, 1, 1, 1]' : 0.096746}", "{'[1, 2, 2, 3, 3, 6, 1, 1, 19, 0, 7, 24, 1, 1, 0, 1, 1, 1]' : 0.0967202}", "{'[1, 2, 2, 3, 3, 6, 1, 1, 19, 0, 7, 24, 1, 1, 0, 1, 1, 1]' : 0.0967362}", "{'[1, 2, 2, 3, 3, 6, 1, 1, 19, 0, 7, 24, 1, 1, 0, 1, 1, 1]' : 0.0972409}", "{'[1, 2, 2, 3, 3, 6, 1, 1, 19, 0, 7, 24, 1, 1, 0, 1, 1, 1]' : 0.096807}", "{'[1, 2, 2, 3, 3, 6, 1, 1, 19, 0, 7, 24, 1, 1, 0, 1, 1, 1]' : 0.0967278}", "{'[1, 2, 2, 3, 3, 6, 1, 1, 19, 0, 7, 24, 1, 1, 0, 1, 1, 1]' : 0.0967622}", "{'[1, 2, 2, 3, 3, 6, 1, 1, 19, 0, 7, 24, 1, 1, 0, 1, 1, 1]' : 0.096689}", "{'[1, 2, 2, 3, 3, 6, 1, 1, 19, 0, 7, 24, 1, 1, 0, 1, 1, 1]' : 0.096689}", "{'[1, 2, 2, 3, 3, 6, 1, 1, 19, 0, 7, 24, 1, 1, 0, 1, 1, 1]' : 0.0967438}", "{'[1, 2, 2, 3, 3, 6, 1, 1, 19, 0, 7, 24, 1, 1, 0, 1, 1, 1]' : 0.0967782}", "{'[1, 2, 2, 3, 3, 6, 1, 1, 19, 0, 7, 24, 1, 1, 0, 1, 1, 1]' : 0.0967309}"]
returning from 'run': {'[1, 2, 2, 3, 3, 6, 1, 1, 19, 0, 7, 24, 1, 1, 0, 1, 1, 1]': ([0.097182, 0.096787, 0.096714, 0.0967641, 0.0968239, 0.0967619, 0.09725, 0.0967309, 0.0967159, 0.0967422, 0.0967059, 0.096761, 0.096705, 0.0968289, 0.096755, 0.0967572, 0.0967431, 0.0967071, 0.096746, 0.0967202, 0.0967362, 0.0972409, 0.096807, 0.0967278, 0.0967622, 0.096689, 0.096689, 0.0967438, 0.0967782, 0.0967309], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 2, 2, 3, 3, 6, 1, 1, 19, 0, 7, 24, 1, 1, 0, 1, 1, 1]': ([0.097182, 0.096787, 0.096714, 0.0967641, 0.0968239, 0.0967619, 0.09725, 0.0967309, 0.0967159, 0.0967422, 0.0967059, 0.096761, 0.096705, 0.0968289, 0.096755, 0.0967572, 0.0967431, 0.0967071, 0.096746, 0.0967202, 0.0967362, 0.0972409, 0.096807, 0.0967278, 0.0967622, 0.096689, 0.096689, 0.0967438, 0.0967782, 0.0967309], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = iii
Code stats:
        Number of loops: 	95
        Max loop nest depth: 	4
        Additions: 		5030
        Multiplications: 	1222
        Divisions: 		0
        Logical: 		0
        Reads: 			7923
        Writes: 		948
        Comparisons:		95
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest11.exe __orio_perftest11.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest11.exe  
Program Test Output: 
{'[4, 0, 0, 2, 2, 2, 1, 1, 27, 13, 10, 0, 2, 0, 0, 0, 1, 1]' : 0.21942}
{'[4, 0, 0, 2, 2, 2, 1, 1, 27, 13, 10, 0, 2, 0, 0, 0, 1, 1]' : 0.218884}
{'[4, 0, 0, 2, 2, 2, 1, 1, 27, 13, 10, 0, 2, 0, 0, 0, 1, 1]' : 0.218909}
{'[4, 0, 0, 2, 2, 2, 1, 1, 27, 13, 10, 0, 2, 0, 0, 0, 1, 1]' : 0.219436}
{'[4, 0, 0, 2, 2, 2, 1, 1, 27, 13, 10, 0, 2, 0, 0, 0, 1, 1]' : 0.219097}
{'[4, 0, 0, 2, 2, 2, 1, 1, 27, 13, 10, 0, 2, 0, 0, 0, 1, 1]' : 0.219007}
{'[4, 0, 0, 2, 2, 2, 1, 1, 27, 13, 10, 0, 2, 0, 0, 0, 1, 1]' : 0.218941}
{'[4, 0, 0, 2, 2, 2, 1, 1, 27, 13, 10, 0, 2, 0, 0, 0, 1, 1]' : 0.219004}
{'[4, 0, 0, 2, 2, 2, 1, 1, 27, 13, 10, 0, 2, 0, 0, 0, 1, 1]' : 0.218922}
{'[4, 0, 0, 2, 2, 2, 1, 1, 27, 13, 10, 0, 2, 0, 0, 0, 1, 1]' : 0.219102}
{'[4, 0, 0, 2, 2, 2, 1, 1, 27, 13, 10, 0, 2, 0, 0, 0, 1, 1]' : 0.219306}
{'[4, 0, 0, 2, 2, 2, 1, 1, 27, 13, 10, 0, 2, 0, 0, 0, 1, 1]' : 0.219009}
{'[4, 0, 0, 2, 2, 2, 1, 1, 27, 13, 10, 0, 2, 0, 0, 0, 1, 1]' : 0.219114}
{'[4, 0, 0, 2, 2, 2, 1, 1, 27, 13, 10, 0, 2, 0, 0, 0, 1, 1]' : 0.218874}
{'[4, 0, 0, 2, 2, 2, 1, 1, 27, 13, 10, 0, 2, 0, 0, 0, 1, 1]' : 0.219092}
{'[4, 0, 0, 2, 2, 2, 1, 1, 27, 13, 10, 0, 2, 0, 0, 0, 1, 1]' : 0.218995}
{'[4, 0, 0, 2, 2, 2, 1, 1, 27, 13, 10, 0, 2, 0, 0, 0, 1, 1]' : 0.218857}
{'[4, 0, 0, 2, 2, 2, 1, 1, 27, 13, 10, 0, 2, 0, 0, 0, 1, 1]' : 0.219476}
{'[4, 0, 0, 2, 2, 2, 1, 1, 27, 13, 10, 0, 2, 0, 0, 0, 1, 1]' : 0.218955}
{'[4, 0, 0, 2, 2, 2, 1, 1, 27, 13, 10, 0, 2, 0, 0, 0, 1, 1]' : 0.218974}
{'[4, 0, 0, 2, 2, 2, 1, 1, 27, 13, 10, 0, 2, 0, 0, 0, 1, 1]' : 0.21897}
{'[4, 0, 0, 2, 2, 2, 1, 1, 27, 13, 10, 0, 2, 0, 0, 0, 1, 1]' : 0.219014}
{'[4, 0, 0, 2, 2, 2, 1, 1, 27, 13, 10, 0, 2, 0, 0, 0, 1, 1]' : 0.218966}
{'[4, 0, 0, 2, 2, 2, 1, 1, 27, 13, 10, 0, 2, 0, 0, 0, 1, 1]' : 0.219232}
{'[4, 0, 0, 2, 2, 2, 1, 1, 27, 13, 10, 0, 2, 0, 0, 0, 1, 1]' : 0.219345}
{'[4, 0, 0, 2, 2, 2, 1, 1, 27, 13, 10, 0, 2, 0, 0, 0, 1, 1]' : 0.218954}
{'[4, 0, 0, 2, 2, 2, 1, 1, 27, 13, 10, 0, 2, 0, 0, 0, 1, 1]' : 0.218961}
{'[4, 0, 0, 2, 2, 2, 1, 1, 27, 13, 10, 0, 2, 0, 0, 0, 1, 1]' : 0.219042}
{'[4, 0, 0, 2, 2, 2, 1, 1, 27, 13, 10, 0, 2, 0, 0, 0, 1, 1]' : 0.219023}
{'[4, 0, 0, 2, 2, 2, 1, 1, 27, 13, 10, 0, 2, 0, 0, 0, 1, 1]' : 0.218898}

out:
 ["{'[4, 0, 0, 2, 2, 2, 1, 1, 27, 13, 10, 0, 2, 0, 0, 0, 1, 1]' : 0.21942}", "{'[4, 0, 0, 2, 2, 2, 1, 1, 27, 13, 10, 0, 2, 0, 0, 0, 1, 1]' : 0.218884}", "{'[4, 0, 0, 2, 2, 2, 1, 1, 27, 13, 10, 0, 2, 0, 0, 0, 1, 1]' : 0.218909}", "{'[4, 0, 0, 2, 2, 2, 1, 1, 27, 13, 10, 0, 2, 0, 0, 0, 1, 1]' : 0.219436}", "{'[4, 0, 0, 2, 2, 2, 1, 1, 27, 13, 10, 0, 2, 0, 0, 0, 1, 1]' : 0.219097}", "{'[4, 0, 0, 2, 2, 2, 1, 1, 27, 13, 10, 0, 2, 0, 0, 0, 1, 1]' : 0.219007}", "{'[4, 0, 0, 2, 2, 2, 1, 1, 27, 13, 10, 0, 2, 0, 0, 0, 1, 1]' : 0.218941}", "{'[4, 0, 0, 2, 2, 2, 1, 1, 27, 13, 10, 0, 2, 0, 0, 0, 1, 1]' : 0.219004}", "{'[4, 0, 0, 2, 2, 2, 1, 1, 27, 13, 10, 0, 2, 0, 0, 0, 1, 1]' : 0.218922}", "{'[4, 0, 0, 2, 2, 2, 1, 1, 27, 13, 10, 0, 2, 0, 0, 0, 1, 1]' : 0.219102}", "{'[4, 0, 0, 2, 2, 2, 1, 1, 27, 13, 10, 0, 2, 0, 0, 0, 1, 1]' : 0.219306}", "{'[4, 0, 0, 2, 2, 2, 1, 1, 27, 13, 10, 0, 2, 0, 0, 0, 1, 1]' : 0.219009}", "{'[4, 0, 0, 2, 2, 2, 1, 1, 27, 13, 10, 0, 2, 0, 0, 0, 1, 1]' : 0.219114}", "{'[4, 0, 0, 2, 2, 2, 1, 1, 27, 13, 10, 0, 2, 0, 0, 0, 1, 1]' : 0.218874}", "{'[4, 0, 0, 2, 2, 2, 1, 1, 27, 13, 10, 0, 2, 0, 0, 0, 1, 1]' : 0.219092}", "{'[4, 0, 0, 2, 2, 2, 1, 1, 27, 13, 10, 0, 2, 0, 0, 0, 1, 1]' : 0.218995}", "{'[4, 0, 0, 2, 2, 2, 1, 1, 27, 13, 10, 0, 2, 0, 0, 0, 1, 1]' : 0.218857}", "{'[4, 0, 0, 2, 2, 2, 1, 1, 27, 13, 10, 0, 2, 0, 0, 0, 1, 1]' : 0.219476}", "{'[4, 0, 0, 2, 2, 2, 1, 1, 27, 13, 10, 0, 2, 0, 0, 0, 1, 1]' : 0.218955}", "{'[4, 0, 0, 2, 2, 2, 1, 1, 27, 13, 10, 0, 2, 0, 0, 0, 1, 1]' : 0.218974}", "{'[4, 0, 0, 2, 2, 2, 1, 1, 27, 13, 10, 0, 2, 0, 0, 0, 1, 1]' : 0.21897}", "{'[4, 0, 0, 2, 2, 2, 1, 1, 27, 13, 10, 0, 2, 0, 0, 0, 1, 1]' : 0.219014}", "{'[4, 0, 0, 2, 2, 2, 1, 1, 27, 13, 10, 0, 2, 0, 0, 0, 1, 1]' : 0.218966}", "{'[4, 0, 0, 2, 2, 2, 1, 1, 27, 13, 10, 0, 2, 0, 0, 0, 1, 1]' : 0.219232}", "{'[4, 0, 0, 2, 2, 2, 1, 1, 27, 13, 10, 0, 2, 0, 0, 0, 1, 1]' : 0.219345}", "{'[4, 0, 0, 2, 2, 2, 1, 1, 27, 13, 10, 0, 2, 0, 0, 0, 1, 1]' : 0.218954}", "{'[4, 0, 0, 2, 2, 2, 1, 1, 27, 13, 10, 0, 2, 0, 0, 0, 1, 1]' : 0.218961}", "{'[4, 0, 0, 2, 2, 2, 1, 1, 27, 13, 10, 0, 2, 0, 0, 0, 1, 1]' : 0.219042}", "{'[4, 0, 0, 2, 2, 2, 1, 1, 27, 13, 10, 0, 2, 0, 0, 0, 1, 1]' : 0.219023}", "{'[4, 0, 0, 2, 2, 2, 1, 1, 27, 13, 10, 0, 2, 0, 0, 0, 1, 1]' : 0.218898}"]
returning from 'run': {'[4, 0, 0, 2, 2, 2, 1, 1, 27, 13, 10, 0, 2, 0, 0, 0, 1, 1]': ([0.21942, 0.218884, 0.218909, 0.219436, 0.219097, 0.219007, 0.218941, 0.219004, 0.218922, 0.219102, 0.219306, 0.219009, 0.219114, 0.218874, 0.219092, 0.218995, 0.218857, 0.219476, 0.218955, 0.218974, 0.21897, 0.219014, 0.218966, 0.219232, 0.219345, 0.218954, 0.218961, 0.219042, 0.219023, 0.218898], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 0, 0, 2, 2, 2, 1, 1, 27, 13, 10, 0, 2, 0, 0, 0, 1, 1]': ([0.21942, 0.218884, 0.218909, 0.219436, 0.219097, 0.219007, 0.218941, 0.219004, 0.218922, 0.219102, 0.219306, 0.219009, 0.219114, 0.218874, 0.219092, 0.218995, 0.218857, 0.219476, 0.218955, 0.218974, 0.21897, 0.219014, 0.218966, 0.219232, 0.219345, 0.218954, 0.218961, 0.219042, 0.219023, 0.218898], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	53
        Max loop nest depth: 	5
        Additions: 		870
        Multiplications: 	330
        Divisions: 		0
        Logical: 		0
        Reads: 			2024
        Writes: 		446
        Comparisons:		53
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest12.exe __orio_perftest12.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest12.exe  
Program Test Output: 
{'[2, 4, 1, 0, 3, 2, 1, 0, 29, 23, 0, 2, 1, 0, 0, 1, 0, 0]' : 0.0984399}
{'[2, 4, 1, 0, 3, 2, 1, 0, 29, 23, 0, 2, 1, 0, 0, 1, 0, 0]' : 0.0979819}
{'[2, 4, 1, 0, 3, 2, 1, 0, 29, 23, 0, 2, 1, 0, 0, 1, 0, 0]' : 0.098227}
{'[2, 4, 1, 0, 3, 2, 1, 0, 29, 23, 0, 2, 1, 0, 0, 1, 0, 0]' : 0.098011}
{'[2, 4, 1, 0, 3, 2, 1, 0, 29, 23, 0, 2, 1, 0, 0, 1, 0, 0]' : 0.0981112}
{'[2, 4, 1, 0, 3, 2, 1, 0, 29, 23, 0, 2, 1, 0, 0, 1, 0, 0]' : 0.0981119}
{'[2, 4, 1, 0, 3, 2, 1, 0, 29, 23, 0, 2, 1, 0, 0, 1, 0, 0]' : 0.0980291}
{'[2, 4, 1, 0, 3, 2, 1, 0, 29, 23, 0, 2, 1, 0, 0, 1, 0, 0]' : 0.098042}
{'[2, 4, 1, 0, 3, 2, 1, 0, 29, 23, 0, 2, 1, 0, 0, 1, 0, 0]' : 0.0980289}
{'[2, 4, 1, 0, 3, 2, 1, 0, 29, 23, 0, 2, 1, 0, 0, 1, 0, 0]' : 0.0980139}
{'[2, 4, 1, 0, 3, 2, 1, 0, 29, 23, 0, 2, 1, 0, 0, 1, 0, 0]' : 0.0979929}
{'[2, 4, 1, 0, 3, 2, 1, 0, 29, 23, 0, 2, 1, 0, 0, 1, 0, 0]' : 0.0979841}
{'[2, 4, 1, 0, 3, 2, 1, 0, 29, 23, 0, 2, 1, 0, 0, 1, 0, 0]' : 0.097996}
{'[2, 4, 1, 0, 3, 2, 1, 0, 29, 23, 0, 2, 1, 0, 0, 1, 0, 0]' : 0.09833}
{'[2, 4, 1, 0, 3, 2, 1, 0, 29, 23, 0, 2, 1, 0, 0, 1, 0, 0]' : 0.098038}
{'[2, 4, 1, 0, 3, 2, 1, 0, 29, 23, 0, 2, 1, 0, 0, 1, 0, 0]' : 0.098026}
{'[2, 4, 1, 0, 3, 2, 1, 0, 29, 23, 0, 2, 1, 0, 0, 1, 0, 0]' : 0.0980539}
{'[2, 4, 1, 0, 3, 2, 1, 0, 29, 23, 0, 2, 1, 0, 0, 1, 0, 0]' : 0.0979629}
{'[2, 4, 1, 0, 3, 2, 1, 0, 29, 23, 0, 2, 1, 0, 0, 1, 0, 0]' : 0.098}
{'[2, 4, 1, 0, 3, 2, 1, 0, 29, 23, 0, 2, 1, 0, 0, 1, 0, 0]' : 0.097976}
{'[2, 4, 1, 0, 3, 2, 1, 0, 29, 23, 0, 2, 1, 0, 0, 1, 0, 0]' : 0.0980148}
{'[2, 4, 1, 0, 3, 2, 1, 0, 29, 23, 0, 2, 1, 0, 0, 1, 0, 0]' : 0.097985}
{'[2, 4, 1, 0, 3, 2, 1, 0, 29, 23, 0, 2, 1, 0, 0, 1, 0, 0]' : 0.0980461}
{'[2, 4, 1, 0, 3, 2, 1, 0, 29, 23, 0, 2, 1, 0, 0, 1, 0, 0]' : 0.0981059}
{'[2, 4, 1, 0, 3, 2, 1, 0, 29, 23, 0, 2, 1, 0, 0, 1, 0, 0]' : 0.0980229}
{'[2, 4, 1, 0, 3, 2, 1, 0, 29, 23, 0, 2, 1, 0, 0, 1, 0, 0]' : 0.0983059}
{'[2, 4, 1, 0, 3, 2, 1, 0, 29, 23, 0, 2, 1, 0, 0, 1, 0, 0]' : 0.103774}
{'[2, 4, 1, 0, 3, 2, 1, 0, 29, 23, 0, 2, 1, 0, 0, 1, 0, 0]' : 0.098779}
{'[2, 4, 1, 0, 3, 2, 1, 0, 29, 23, 0, 2, 1, 0, 0, 1, 0, 0]' : 0.139413}
{'[2, 4, 1, 0, 3, 2, 1, 0, 29, 23, 0, 2, 1, 0, 0, 1, 0, 0]' : 0.108132}

out:
 ["{'[2, 4, 1, 0, 3, 2, 1, 0, 29, 23, 0, 2, 1, 0, 0, 1, 0, 0]' : 0.0984399}", "{'[2, 4, 1, 0, 3, 2, 1, 0, 29, 23, 0, 2, 1, 0, 0, 1, 0, 0]' : 0.0979819}", "{'[2, 4, 1, 0, 3, 2, 1, 0, 29, 23, 0, 2, 1, 0, 0, 1, 0, 0]' : 0.098227}", "{'[2, 4, 1, 0, 3, 2, 1, 0, 29, 23, 0, 2, 1, 0, 0, 1, 0, 0]' : 0.098011}", "{'[2, 4, 1, 0, 3, 2, 1, 0, 29, 23, 0, 2, 1, 0, 0, 1, 0, 0]' : 0.0981112}", "{'[2, 4, 1, 0, 3, 2, 1, 0, 29, 23, 0, 2, 1, 0, 0, 1, 0, 0]' : 0.0981119}", "{'[2, 4, 1, 0, 3, 2, 1, 0, 29, 23, 0, 2, 1, 0, 0, 1, 0, 0]' : 0.0980291}", "{'[2, 4, 1, 0, 3, 2, 1, 0, 29, 23, 0, 2, 1, 0, 0, 1, 0, 0]' : 0.098042}", "{'[2, 4, 1, 0, 3, 2, 1, 0, 29, 23, 0, 2, 1, 0, 0, 1, 0, 0]' : 0.0980289}", "{'[2, 4, 1, 0, 3, 2, 1, 0, 29, 23, 0, 2, 1, 0, 0, 1, 0, 0]' : 0.0980139}", "{'[2, 4, 1, 0, 3, 2, 1, 0, 29, 23, 0, 2, 1, 0, 0, 1, 0, 0]' : 0.0979929}", "{'[2, 4, 1, 0, 3, 2, 1, 0, 29, 23, 0, 2, 1, 0, 0, 1, 0, 0]' : 0.0979841}", "{'[2, 4, 1, 0, 3, 2, 1, 0, 29, 23, 0, 2, 1, 0, 0, 1, 0, 0]' : 0.097996}", "{'[2, 4, 1, 0, 3, 2, 1, 0, 29, 23, 0, 2, 1, 0, 0, 1, 0, 0]' : 0.09833}", "{'[2, 4, 1, 0, 3, 2, 1, 0, 29, 23, 0, 2, 1, 0, 0, 1, 0, 0]' : 0.098038}", "{'[2, 4, 1, 0, 3, 2, 1, 0, 29, 23, 0, 2, 1, 0, 0, 1, 0, 0]' : 0.098026}", "{'[2, 4, 1, 0, 3, 2, 1, 0, 29, 23, 0, 2, 1, 0, 0, 1, 0, 0]' : 0.0980539}", "{'[2, 4, 1, 0, 3, 2, 1, 0, 29, 23, 0, 2, 1, 0, 0, 1, 0, 0]' : 0.0979629}", "{'[2, 4, 1, 0, 3, 2, 1, 0, 29, 23, 0, 2, 1, 0, 0, 1, 0, 0]' : 0.098}", "{'[2, 4, 1, 0, 3, 2, 1, 0, 29, 23, 0, 2, 1, 0, 0, 1, 0, 0]' : 0.097976}", "{'[2, 4, 1, 0, 3, 2, 1, 0, 29, 23, 0, 2, 1, 0, 0, 1, 0, 0]' : 0.0980148}", "{'[2, 4, 1, 0, 3, 2, 1, 0, 29, 23, 0, 2, 1, 0, 0, 1, 0, 0]' : 0.097985}", "{'[2, 4, 1, 0, 3, 2, 1, 0, 29, 23, 0, 2, 1, 0, 0, 1, 0, 0]' : 0.0980461}", "{'[2, 4, 1, 0, 3, 2, 1, 0, 29, 23, 0, 2, 1, 0, 0, 1, 0, 0]' : 0.0981059}", "{'[2, 4, 1, 0, 3, 2, 1, 0, 29, 23, 0, 2, 1, 0, 0, 1, 0, 0]' : 0.0980229}", "{'[2, 4, 1, 0, 3, 2, 1, 0, 29, 23, 0, 2, 1, 0, 0, 1, 0, 0]' : 0.0983059}", "{'[2, 4, 1, 0, 3, 2, 1, 0, 29, 23, 0, 2, 1, 0, 0, 1, 0, 0]' : 0.103774}", "{'[2, 4, 1, 0, 3, 2, 1, 0, 29, 23, 0, 2, 1, 0, 0, 1, 0, 0]' : 0.098779}", "{'[2, 4, 1, 0, 3, 2, 1, 0, 29, 23, 0, 2, 1, 0, 0, 1, 0, 0]' : 0.139413}", "{'[2, 4, 1, 0, 3, 2, 1, 0, 29, 23, 0, 2, 1, 0, 0, 1, 0, 0]' : 0.108132}"]
returning from 'run': {'[2, 4, 1, 0, 3, 2, 1, 0, 29, 23, 0, 2, 1, 0, 0, 1, 0, 0]': ([0.0984399, 0.0979819, 0.098227, 0.098011, 0.0981112, 0.0981119, 0.0980291, 0.098042, 0.0980289, 0.0980139, 0.0979929, 0.0979841, 0.097996, 0.09833, 0.098038, 0.098026, 0.0980539, 0.0979629, 0.098, 0.097976, 0.0980148, 0.097985, 0.0980461, 0.0981059, 0.0980229, 0.0983059, 0.103774, 0.098779, 0.139413, 0.108132], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 4, 1, 0, 3, 2, 1, 0, 29, 23, 0, 2, 1, 0, 0, 1, 0, 0]': ([0.0984399, 0.0979819, 0.098227, 0.098011, 0.0981112, 0.0981119, 0.0980291, 0.098042, 0.0980289, 0.0980139, 0.0979929, 0.0979841, 0.097996, 0.09833, 0.098038, 0.098026, 0.0980539, 0.0979629, 0.098, 0.097976, 0.0980148, 0.097985, 0.0980461, 0.0981059, 0.0980229, 0.0983059, 0.103774, 0.098779, 0.139413, 0.108132], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	30
        Max loop nest depth: 	5
        Additions: 		1243
        Multiplications: 	324
        Divisions: 		0
        Logical: 		0
        Reads: 			2087
        Writes: 		268
        Comparisons:		30
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest13.exe __orio_perftest13.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest13.exe  
Program Test Output: 
{'[3, 3, 6, 3, 1, 4, 1, 0, 16, 8, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0820651}
{'[3, 3, 6, 3, 1, 4, 1, 0, 16, 8, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.081943}
{'[3, 3, 6, 3, 1, 4, 1, 0, 16, 8, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0819919}
{'[3, 3, 6, 3, 1, 4, 1, 0, 16, 8, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0817871}
{'[3, 3, 6, 3, 1, 4, 1, 0, 16, 8, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0817962}
{'[3, 3, 6, 3, 1, 4, 1, 0, 16, 8, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0818348}
{'[3, 3, 6, 3, 1, 4, 1, 0, 16, 8, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.081861}
{'[3, 3, 6, 3, 1, 4, 1, 0, 16, 8, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.081821}
{'[3, 3, 6, 3, 1, 4, 1, 0, 16, 8, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0819759}
{'[3, 3, 6, 3, 1, 4, 1, 0, 16, 8, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0818431}
{'[3, 3, 6, 3, 1, 4, 1, 0, 16, 8, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.082211}
{'[3, 3, 6, 3, 1, 4, 1, 0, 16, 8, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0817931}
{'[3, 3, 6, 3, 1, 4, 1, 0, 16, 8, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0818262}
{'[3, 3, 6, 3, 1, 4, 1, 0, 16, 8, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.081841}
{'[3, 3, 6, 3, 1, 4, 1, 0, 16, 8, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.081975}
{'[3, 3, 6, 3, 1, 4, 1, 0, 16, 8, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0816779}
{'[3, 3, 6, 3, 1, 4, 1, 0, 16, 8, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0818419}
{'[3, 3, 6, 3, 1, 4, 1, 0, 16, 8, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0818231}
{'[3, 3, 6, 3, 1, 4, 1, 0, 16, 8, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0818191}
{'[3, 3, 6, 3, 1, 4, 1, 0, 16, 8, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0817049}
{'[3, 3, 6, 3, 1, 4, 1, 0, 16, 8, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0819449}
{'[3, 3, 6, 3, 1, 4, 1, 0, 16, 8, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.081913}
{'[3, 3, 6, 3, 1, 4, 1, 0, 16, 8, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0817909}
{'[3, 3, 6, 3, 1, 4, 1, 0, 16, 8, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0816841}
{'[3, 3, 6, 3, 1, 4, 1, 0, 16, 8, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.081815}
{'[3, 3, 6, 3, 1, 4, 1, 0, 16, 8, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0818422}
{'[3, 3, 6, 3, 1, 4, 1, 0, 16, 8, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0818949}
{'[3, 3, 6, 3, 1, 4, 1, 0, 16, 8, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.081717}
{'[3, 3, 6, 3, 1, 4, 1, 0, 16, 8, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.082258}
{'[3, 3, 6, 3, 1, 4, 1, 0, 16, 8, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0818481}

out:
 ["{'[3, 3, 6, 3, 1, 4, 1, 0, 16, 8, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0820651}", "{'[3, 3, 6, 3, 1, 4, 1, 0, 16, 8, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.081943}", "{'[3, 3, 6, 3, 1, 4, 1, 0, 16, 8, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0819919}", "{'[3, 3, 6, 3, 1, 4, 1, 0, 16, 8, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0817871}", "{'[3, 3, 6, 3, 1, 4, 1, 0, 16, 8, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0817962}", "{'[3, 3, 6, 3, 1, 4, 1, 0, 16, 8, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0818348}", "{'[3, 3, 6, 3, 1, 4, 1, 0, 16, 8, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.081861}", "{'[3, 3, 6, 3, 1, 4, 1, 0, 16, 8, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.081821}", "{'[3, 3, 6, 3, 1, 4, 1, 0, 16, 8, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0819759}", "{'[3, 3, 6, 3, 1, 4, 1, 0, 16, 8, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0818431}", "{'[3, 3, 6, 3, 1, 4, 1, 0, 16, 8, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.082211}", "{'[3, 3, 6, 3, 1, 4, 1, 0, 16, 8, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0817931}", "{'[3, 3, 6, 3, 1, 4, 1, 0, 16, 8, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0818262}", "{'[3, 3, 6, 3, 1, 4, 1, 0, 16, 8, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.081841}", "{'[3, 3, 6, 3, 1, 4, 1, 0, 16, 8, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.081975}", "{'[3, 3, 6, 3, 1, 4, 1, 0, 16, 8, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0816779}", "{'[3, 3, 6, 3, 1, 4, 1, 0, 16, 8, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0818419}", "{'[3, 3, 6, 3, 1, 4, 1, 0, 16, 8, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0818231}", "{'[3, 3, 6, 3, 1, 4, 1, 0, 16, 8, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0818191}", "{'[3, 3, 6, 3, 1, 4, 1, 0, 16, 8, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0817049}", "{'[3, 3, 6, 3, 1, 4, 1, 0, 16, 8, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0819449}", "{'[3, 3, 6, 3, 1, 4, 1, 0, 16, 8, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.081913}", "{'[3, 3, 6, 3, 1, 4, 1, 0, 16, 8, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0817909}", "{'[3, 3, 6, 3, 1, 4, 1, 0, 16, 8, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0816841}", "{'[3, 3, 6, 3, 1, 4, 1, 0, 16, 8, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.081815}", "{'[3, 3, 6, 3, 1, 4, 1, 0, 16, 8, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0818422}", "{'[3, 3, 6, 3, 1, 4, 1, 0, 16, 8, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0818949}", "{'[3, 3, 6, 3, 1, 4, 1, 0, 16, 8, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.081717}", "{'[3, 3, 6, 3, 1, 4, 1, 0, 16, 8, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.082258}", "{'[3, 3, 6, 3, 1, 4, 1, 0, 16, 8, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0818481}"]
returning from 'run': {'[3, 3, 6, 3, 1, 4, 1, 0, 16, 8, 28, 0, 1, 1, 0, 0, 0, 1]': ([0.0820651, 0.081943, 0.0819919, 0.0817871, 0.0817962, 0.0818348, 0.081861, 0.081821, 0.0819759, 0.0818431, 0.082211, 0.0817931, 0.0818262, 0.081841, 0.081975, 0.0816779, 0.0818419, 0.0818231, 0.0818191, 0.0817049, 0.0819449, 0.081913, 0.0817909, 0.0816841, 0.081815, 0.0818422, 0.0818949, 0.081717, 0.082258, 0.0818481], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 3, 6, 3, 1, 4, 1, 0, 16, 8, 28, 0, 1, 1, 0, 0, 0, 1]': ([0.0820651, 0.081943, 0.0819919, 0.0817871, 0.0817962, 0.0818348, 0.081861, 0.081821, 0.0819759, 0.0818431, 0.082211, 0.0817931, 0.0818262, 0.081841, 0.081975, 0.0816779, 0.0818419, 0.0818231, 0.0818191, 0.0817049, 0.0819449, 0.081913, 0.0817909, 0.0816841, 0.081815, 0.0818422, 0.0818949, 0.081717, 0.082258, 0.0818481], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = kkk
Code stats:
        Number of loops: 	104
        Max loop nest depth: 	5
        Additions: 		4298
        Multiplications: 	960
        Divisions: 		0
        Logical: 		0
        Reads: 			6776
        Writes: 		821
        Comparisons:		104
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest14.exe __orio_perftest14.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest14.exe  
Program Test Output: 
{'[2, 0, 4, 6, 5, 2, 1, 1, 8, 28, 0, 5, 0, 1, 1, 0, 1, 0]' : 0.246471}
{'[2, 0, 4, 6, 5, 2, 1, 1, 8, 28, 0, 5, 0, 1, 1, 0, 1, 0]' : 0.246841}
{'[2, 0, 4, 6, 5, 2, 1, 1, 8, 28, 0, 5, 0, 1, 1, 0, 1, 0]' : 0.246234}
{'[2, 0, 4, 6, 5, 2, 1, 1, 8, 28, 0, 5, 0, 1, 1, 0, 1, 0]' : 0.245203}
{'[2, 0, 4, 6, 5, 2, 1, 1, 8, 28, 0, 5, 0, 1, 1, 0, 1, 0]' : 0.245197}
{'[2, 0, 4, 6, 5, 2, 1, 1, 8, 28, 0, 5, 0, 1, 1, 0, 1, 0]' : 0.246512}
{'[2, 0, 4, 6, 5, 2, 1, 1, 8, 28, 0, 5, 0, 1, 1, 0, 1, 0]' : 0.246045}
{'[2, 0, 4, 6, 5, 2, 1, 1, 8, 28, 0, 5, 0, 1, 1, 0, 1, 0]' : 0.246052}
{'[2, 0, 4, 6, 5, 2, 1, 1, 8, 28, 0, 5, 0, 1, 1, 0, 1, 0]' : 0.245732}
{'[2, 0, 4, 6, 5, 2, 1, 1, 8, 28, 0, 5, 0, 1, 1, 0, 1, 0]' : 0.24696}
{'[2, 0, 4, 6, 5, 2, 1, 1, 8, 28, 0, 5, 0, 1, 1, 0, 1, 0]' : 0.246154}
{'[2, 0, 4, 6, 5, 2, 1, 1, 8, 28, 0, 5, 0, 1, 1, 0, 1, 0]' : 0.245537}
{'[2, 0, 4, 6, 5, 2, 1, 1, 8, 28, 0, 5, 0, 1, 1, 0, 1, 0]' : 0.245939}
{'[2, 0, 4, 6, 5, 2, 1, 1, 8, 28, 0, 5, 0, 1, 1, 0, 1, 0]' : 0.246074}
{'[2, 0, 4, 6, 5, 2, 1, 1, 8, 28, 0, 5, 0, 1, 1, 0, 1, 0]' : 0.246239}
{'[2, 0, 4, 6, 5, 2, 1, 1, 8, 28, 0, 5, 0, 1, 1, 0, 1, 0]' : 0.246207}
{'[2, 0, 4, 6, 5, 2, 1, 1, 8, 28, 0, 5, 0, 1, 1, 0, 1, 0]' : 0.246214}
{'[2, 0, 4, 6, 5, 2, 1, 1, 8, 28, 0, 5, 0, 1, 1, 0, 1, 0]' : 0.246383}
{'[2, 0, 4, 6, 5, 2, 1, 1, 8, 28, 0, 5, 0, 1, 1, 0, 1, 0]' : 0.246691}
{'[2, 0, 4, 6, 5, 2, 1, 1, 8, 28, 0, 5, 0, 1, 1, 0, 1, 0]' : 0.245784}
{'[2, 0, 4, 6, 5, 2, 1, 1, 8, 28, 0, 5, 0, 1, 1, 0, 1, 0]' : 0.245668}
{'[2, 0, 4, 6, 5, 2, 1, 1, 8, 28, 0, 5, 0, 1, 1, 0, 1, 0]' : 0.246595}
{'[2, 0, 4, 6, 5, 2, 1, 1, 8, 28, 0, 5, 0, 1, 1, 0, 1, 0]' : 0.246007}
{'[2, 0, 4, 6, 5, 2, 1, 1, 8, 28, 0, 5, 0, 1, 1, 0, 1, 0]' : 0.245583}
{'[2, 0, 4, 6, 5, 2, 1, 1, 8, 28, 0, 5, 0, 1, 1, 0, 1, 0]' : 0.246332}
{'[2, 0, 4, 6, 5, 2, 1, 1, 8, 28, 0, 5, 0, 1, 1, 0, 1, 0]' : 0.246745}
{'[2, 0, 4, 6, 5, 2, 1, 1, 8, 28, 0, 5, 0, 1, 1, 0, 1, 0]' : 0.245992}
{'[2, 0, 4, 6, 5, 2, 1, 1, 8, 28, 0, 5, 0, 1, 1, 0, 1, 0]' : 0.245768}
{'[2, 0, 4, 6, 5, 2, 1, 1, 8, 28, 0, 5, 0, 1, 1, 0, 1, 0]' : 0.245501}
{'[2, 0, 4, 6, 5, 2, 1, 1, 8, 28, 0, 5, 0, 1, 1, 0, 1, 0]' : 0.246511}

out:
 ["{'[2, 0, 4, 6, 5, 2, 1, 1, 8, 28, 0, 5, 0, 1, 1, 0, 1, 0]' : 0.246471}", "{'[2, 0, 4, 6, 5, 2, 1, 1, 8, 28, 0, 5, 0, 1, 1, 0, 1, 0]' : 0.246841}", "{'[2, 0, 4, 6, 5, 2, 1, 1, 8, 28, 0, 5, 0, 1, 1, 0, 1, 0]' : 0.246234}", "{'[2, 0, 4, 6, 5, 2, 1, 1, 8, 28, 0, 5, 0, 1, 1, 0, 1, 0]' : 0.245203}", "{'[2, 0, 4, 6, 5, 2, 1, 1, 8, 28, 0, 5, 0, 1, 1, 0, 1, 0]' : 0.245197}", "{'[2, 0, 4, 6, 5, 2, 1, 1, 8, 28, 0, 5, 0, 1, 1, 0, 1, 0]' : 0.246512}", "{'[2, 0, 4, 6, 5, 2, 1, 1, 8, 28, 0, 5, 0, 1, 1, 0, 1, 0]' : 0.246045}", "{'[2, 0, 4, 6, 5, 2, 1, 1, 8, 28, 0, 5, 0, 1, 1, 0, 1, 0]' : 0.246052}", "{'[2, 0, 4, 6, 5, 2, 1, 1, 8, 28, 0, 5, 0, 1, 1, 0, 1, 0]' : 0.245732}", "{'[2, 0, 4, 6, 5, 2, 1, 1, 8, 28, 0, 5, 0, 1, 1, 0, 1, 0]' : 0.24696}", "{'[2, 0, 4, 6, 5, 2, 1, 1, 8, 28, 0, 5, 0, 1, 1, 0, 1, 0]' : 0.246154}", "{'[2, 0, 4, 6, 5, 2, 1, 1, 8, 28, 0, 5, 0, 1, 1, 0, 1, 0]' : 0.245537}", "{'[2, 0, 4, 6, 5, 2, 1, 1, 8, 28, 0, 5, 0, 1, 1, 0, 1, 0]' : 0.245939}", "{'[2, 0, 4, 6, 5, 2, 1, 1, 8, 28, 0, 5, 0, 1, 1, 0, 1, 0]' : 0.246074}", "{'[2, 0, 4, 6, 5, 2, 1, 1, 8, 28, 0, 5, 0, 1, 1, 0, 1, 0]' : 0.246239}", "{'[2, 0, 4, 6, 5, 2, 1, 1, 8, 28, 0, 5, 0, 1, 1, 0, 1, 0]' : 0.246207}", "{'[2, 0, 4, 6, 5, 2, 1, 1, 8, 28, 0, 5, 0, 1, 1, 0, 1, 0]' : 0.246214}", "{'[2, 0, 4, 6, 5, 2, 1, 1, 8, 28, 0, 5, 0, 1, 1, 0, 1, 0]' : 0.246383}", "{'[2, 0, 4, 6, 5, 2, 1, 1, 8, 28, 0, 5, 0, 1, 1, 0, 1, 0]' : 0.246691}", "{'[2, 0, 4, 6, 5, 2, 1, 1, 8, 28, 0, 5, 0, 1, 1, 0, 1, 0]' : 0.245784}", "{'[2, 0, 4, 6, 5, 2, 1, 1, 8, 28, 0, 5, 0, 1, 1, 0, 1, 0]' : 0.245668}", "{'[2, 0, 4, 6, 5, 2, 1, 1, 8, 28, 0, 5, 0, 1, 1, 0, 1, 0]' : 0.246595}", "{'[2, 0, 4, 6, 5, 2, 1, 1, 8, 28, 0, 5, 0, 1, 1, 0, 1, 0]' : 0.246007}", "{'[2, 0, 4, 6, 5, 2, 1, 1, 8, 28, 0, 5, 0, 1, 1, 0, 1, 0]' : 0.245583}", "{'[2, 0, 4, 6, 5, 2, 1, 1, 8, 28, 0, 5, 0, 1, 1, 0, 1, 0]' : 0.246332}", "{'[2, 0, 4, 6, 5, 2, 1, 1, 8, 28, 0, 5, 0, 1, 1, 0, 1, 0]' : 0.246745}", "{'[2, 0, 4, 6, 5, 2, 1, 1, 8, 28, 0, 5, 0, 1, 1, 0, 1, 0]' : 0.245992}", "{'[2, 0, 4, 6, 5, 2, 1, 1, 8, 28, 0, 5, 0, 1, 1, 0, 1, 0]' : 0.245768}", "{'[2, 0, 4, 6, 5, 2, 1, 1, 8, 28, 0, 5, 0, 1, 1, 0, 1, 0]' : 0.245501}", "{'[2, 0, 4, 6, 5, 2, 1, 1, 8, 28, 0, 5, 0, 1, 1, 0, 1, 0]' : 0.246511}"]
returning from 'run': {'[2, 0, 4, 6, 5, 2, 1, 1, 8, 28, 0, 5, 0, 1, 1, 0, 1, 0]': ([0.246471, 0.246841, 0.246234, 0.245203, 0.245197, 0.246512, 0.246045, 0.246052, 0.245732, 0.24696, 0.246154, 0.245537, 0.245939, 0.246074, 0.246239, 0.246207, 0.246214, 0.246383, 0.246691, 0.245784, 0.245668, 0.246595, 0.246007, 0.245583, 0.246332, 0.246745, 0.245992, 0.245768, 0.245501, 0.246511], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 4, 6, 5, 2, 1, 1, 8, 28, 0, 5, 0, 1, 1, 0, 1, 0]': ([0.246471, 0.246841, 0.246234, 0.245203, 0.245197, 0.246512, 0.246045, 0.246052, 0.245732, 0.24696, 0.246154, 0.245537, 0.245939, 0.246074, 0.246239, 0.246207, 0.246214, 0.246383, 0.246691, 0.245784, 0.245668, 0.246595, 0.246007, 0.245583, 0.246332, 0.246745, 0.245992, 0.245768, 0.245501, 0.246511], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		144
        Multiplications: 	26
        Divisions: 		0
        Logical: 		0
        Reads: 			331
        Writes: 		95
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest15.exe __orio_perftest15.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest15.exe  
Program Test Output: 
{'[2, 0, 6, 0, 4, 6, 0, 1, 28, 0, 3, 7, 0, 0, 1, 1, 1, 1]' : 0.156439}
{'[2, 0, 6, 0, 4, 6, 0, 1, 28, 0, 3, 7, 0, 0, 1, 1, 1, 1]' : 0.156355}
{'[2, 0, 6, 0, 4, 6, 0, 1, 28, 0, 3, 7, 0, 0, 1, 1, 1, 1]' : 0.156334}
{'[2, 0, 6, 0, 4, 6, 0, 1, 28, 0, 3, 7, 0, 0, 1, 1, 1, 1]' : 0.156265}
{'[2, 0, 6, 0, 4, 6, 0, 1, 28, 0, 3, 7, 0, 0, 1, 1, 1, 1]' : 0.156337}
{'[2, 0, 6, 0, 4, 6, 0, 1, 28, 0, 3, 7, 0, 0, 1, 1, 1, 1]' : 0.156423}
{'[2, 0, 6, 0, 4, 6, 0, 1, 28, 0, 3, 7, 0, 0, 1, 1, 1, 1]' : 0.156325}
{'[2, 0, 6, 0, 4, 6, 0, 1, 28, 0, 3, 7, 0, 0, 1, 1, 1, 1]' : 0.156425}
{'[2, 0, 6, 0, 4, 6, 0, 1, 28, 0, 3, 7, 0, 0, 1, 1, 1, 1]' : 0.156648}
{'[2, 0, 6, 0, 4, 6, 0, 1, 28, 0, 3, 7, 0, 0, 1, 1, 1, 1]' : 0.156423}
{'[2, 0, 6, 0, 4, 6, 0, 1, 28, 0, 3, 7, 0, 0, 1, 1, 1, 1]' : 0.156464}
{'[2, 0, 6, 0, 4, 6, 0, 1, 28, 0, 3, 7, 0, 0, 1, 1, 1, 1]' : 0.156383}
{'[2, 0, 6, 0, 4, 6, 0, 1, 28, 0, 3, 7, 0, 0, 1, 1, 1, 1]' : 0.156475}
{'[2, 0, 6, 0, 4, 6, 0, 1, 28, 0, 3, 7, 0, 0, 1, 1, 1, 1]' : 0.156492}
{'[2, 0, 6, 0, 4, 6, 0, 1, 28, 0, 3, 7, 0, 0, 1, 1, 1, 1]' : 0.156395}
{'[2, 0, 6, 0, 4, 6, 0, 1, 28, 0, 3, 7, 0, 0, 1, 1, 1, 1]' : 0.156407}
{'[2, 0, 6, 0, 4, 6, 0, 1, 28, 0, 3, 7, 0, 0, 1, 1, 1, 1]' : 0.156355}
{'[2, 0, 6, 0, 4, 6, 0, 1, 28, 0, 3, 7, 0, 0, 1, 1, 1, 1]' : 0.156462}
{'[2, 0, 6, 0, 4, 6, 0, 1, 28, 0, 3, 7, 0, 0, 1, 1, 1, 1]' : 0.156785}
{'[2, 0, 6, 0, 4, 6, 0, 1, 28, 0, 3, 7, 0, 0, 1, 1, 1, 1]' : 0.156397}
{'[2, 0, 6, 0, 4, 6, 0, 1, 28, 0, 3, 7, 0, 0, 1, 1, 1, 1]' : 0.156359}
{'[2, 0, 6, 0, 4, 6, 0, 1, 28, 0, 3, 7, 0, 0, 1, 1, 1, 1]' : 0.156337}
{'[2, 0, 6, 0, 4, 6, 0, 1, 28, 0, 3, 7, 0, 0, 1, 1, 1, 1]' : 0.156397}
{'[2, 0, 6, 0, 4, 6, 0, 1, 28, 0, 3, 7, 0, 0, 1, 1, 1, 1]' : 0.15639}
{'[2, 0, 6, 0, 4, 6, 0, 1, 28, 0, 3, 7, 0, 0, 1, 1, 1, 1]' : 0.156349}
{'[2, 0, 6, 0, 4, 6, 0, 1, 28, 0, 3, 7, 0, 0, 1, 1, 1, 1]' : 0.156311}
{'[2, 0, 6, 0, 4, 6, 0, 1, 28, 0, 3, 7, 0, 0, 1, 1, 1, 1]' : 0.156364}
{'[2, 0, 6, 0, 4, 6, 0, 1, 28, 0, 3, 7, 0, 0, 1, 1, 1, 1]' : 0.156515}
{'[2, 0, 6, 0, 4, 6, 0, 1, 28, 0, 3, 7, 0, 0, 1, 1, 1, 1]' : 0.156435}
{'[2, 0, 6, 0, 4, 6, 0, 1, 28, 0, 3, 7, 0, 0, 1, 1, 1, 1]' : 0.156447}

out:
 ["{'[2, 0, 6, 0, 4, 6, 0, 1, 28, 0, 3, 7, 0, 0, 1, 1, 1, 1]' : 0.156439}", "{'[2, 0, 6, 0, 4, 6, 0, 1, 28, 0, 3, 7, 0, 0, 1, 1, 1, 1]' : 0.156355}", "{'[2, 0, 6, 0, 4, 6, 0, 1, 28, 0, 3, 7, 0, 0, 1, 1, 1, 1]' : 0.156334}", "{'[2, 0, 6, 0, 4, 6, 0, 1, 28, 0, 3, 7, 0, 0, 1, 1, 1, 1]' : 0.156265}", "{'[2, 0, 6, 0, 4, 6, 0, 1, 28, 0, 3, 7, 0, 0, 1, 1, 1, 1]' : 0.156337}", "{'[2, 0, 6, 0, 4, 6, 0, 1, 28, 0, 3, 7, 0, 0, 1, 1, 1, 1]' : 0.156423}", "{'[2, 0, 6, 0, 4, 6, 0, 1, 28, 0, 3, 7, 0, 0, 1, 1, 1, 1]' : 0.156325}", "{'[2, 0, 6, 0, 4, 6, 0, 1, 28, 0, 3, 7, 0, 0, 1, 1, 1, 1]' : 0.156425}", "{'[2, 0, 6, 0, 4, 6, 0, 1, 28, 0, 3, 7, 0, 0, 1, 1, 1, 1]' : 0.156648}", "{'[2, 0, 6, 0, 4, 6, 0, 1, 28, 0, 3, 7, 0, 0, 1, 1, 1, 1]' : 0.156423}", "{'[2, 0, 6, 0, 4, 6, 0, 1, 28, 0, 3, 7, 0, 0, 1, 1, 1, 1]' : 0.156464}", "{'[2, 0, 6, 0, 4, 6, 0, 1, 28, 0, 3, 7, 0, 0, 1, 1, 1, 1]' : 0.156383}", "{'[2, 0, 6, 0, 4, 6, 0, 1, 28, 0, 3, 7, 0, 0, 1, 1, 1, 1]' : 0.156475}", "{'[2, 0, 6, 0, 4, 6, 0, 1, 28, 0, 3, 7, 0, 0, 1, 1, 1, 1]' : 0.156492}", "{'[2, 0, 6, 0, 4, 6, 0, 1, 28, 0, 3, 7, 0, 0, 1, 1, 1, 1]' : 0.156395}", "{'[2, 0, 6, 0, 4, 6, 0, 1, 28, 0, 3, 7, 0, 0, 1, 1, 1, 1]' : 0.156407}", "{'[2, 0, 6, 0, 4, 6, 0, 1, 28, 0, 3, 7, 0, 0, 1, 1, 1, 1]' : 0.156355}", "{'[2, 0, 6, 0, 4, 6, 0, 1, 28, 0, 3, 7, 0, 0, 1, 1, 1, 1]' : 0.156462}", "{'[2, 0, 6, 0, 4, 6, 0, 1, 28, 0, 3, 7, 0, 0, 1, 1, 1, 1]' : 0.156785}", "{'[2, 0, 6, 0, 4, 6, 0, 1, 28, 0, 3, 7, 0, 0, 1, 1, 1, 1]' : 0.156397}", "{'[2, 0, 6, 0, 4, 6, 0, 1, 28, 0, 3, 7, 0, 0, 1, 1, 1, 1]' : 0.156359}", "{'[2, 0, 6, 0, 4, 6, 0, 1, 28, 0, 3, 7, 0, 0, 1, 1, 1, 1]' : 0.156337}", "{'[2, 0, 6, 0, 4, 6, 0, 1, 28, 0, 3, 7, 0, 0, 1, 1, 1, 1]' : 0.156397}", "{'[2, 0, 6, 0, 4, 6, 0, 1, 28, 0, 3, 7, 0, 0, 1, 1, 1, 1]' : 0.15639}", "{'[2, 0, 6, 0, 4, 6, 0, 1, 28, 0, 3, 7, 0, 0, 1, 1, 1, 1]' : 0.156349}", "{'[2, 0, 6, 0, 4, 6, 0, 1, 28, 0, 3, 7, 0, 0, 1, 1, 1, 1]' : 0.156311}", "{'[2, 0, 6, 0, 4, 6, 0, 1, 28, 0, 3, 7, 0, 0, 1, 1, 1, 1]' : 0.156364}", "{'[2, 0, 6, 0, 4, 6, 0, 1, 28, 0, 3, 7, 0, 0, 1, 1, 1, 1]' : 0.156515}", "{'[2, 0, 6, 0, 4, 6, 0, 1, 28, 0, 3, 7, 0, 0, 1, 1, 1, 1]' : 0.156435}", "{'[2, 0, 6, 0, 4, 6, 0, 1, 28, 0, 3, 7, 0, 0, 1, 1, 1, 1]' : 0.156447}"]
returning from 'run': {'[2, 0, 6, 0, 4, 6, 0, 1, 28, 0, 3, 7, 0, 0, 1, 1, 1, 1]': ([0.156439, 0.156355, 0.156334, 0.156265, 0.156337, 0.156423, 0.156325, 0.156425, 0.156648, 0.156423, 0.156464, 0.156383, 0.156475, 0.156492, 0.156395, 0.156407, 0.156355, 0.156462, 0.156785, 0.156397, 0.156359, 0.156337, 0.156397, 0.15639, 0.156349, 0.156311, 0.156364, 0.156515, 0.156435, 0.156447], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 6, 0, 4, 6, 0, 1, 28, 0, 3, 7, 0, 0, 1, 1, 1, 1]': ([0.156439, 0.156355, 0.156334, 0.156265, 0.156337, 0.156423, 0.156325, 0.156425, 0.156648, 0.156423, 0.156464, 0.156383, 0.156475, 0.156492, 0.156395, 0.156407, 0.156355, 0.156462, 0.156785, 0.156397, 0.156359, 0.156337, 0.156397, 0.15639, 0.156349, 0.156311, 0.156364, 0.156515, 0.156435, 0.156447], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	141
        Max loop nest depth: 	5
        Additions: 		12615
        Multiplications: 	2860
        Divisions: 		0
        Logical: 		0
        Reads: 			18089
        Writes: 		1817
        Comparisons:		141
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest16.exe __orio_perftest16.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest16.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest16.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest16.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/Orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/Orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 525, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors, data)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 406, in dopt_anova
    budget)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 331, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 277, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/phrb/code/Orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest16.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/Orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/Orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 525, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors, data)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 406, in dopt_anova
    budget)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 331, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 277, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/phrb/code/Orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = kkk
Code stats:
        Number of loops: 	17
        Max loop nest depth: 	5
        Additions: 		402
        Multiplications: 	162
        Divisions: 		0
        Logical: 		0
        Reads: 			885
        Writes: 		193
        Comparisons:		17
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest17.exe __orio_perftest17.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest17.exe  
Program Test Output: 
{'[5, 1, 3, 3, 4, 1, 0, 0, 8, 7, 0, 6, 0, 0, 0, 1, 0, 1]' : 0.085923}
{'[5, 1, 3, 3, 4, 1, 0, 0, 8, 7, 0, 6, 0, 0, 0, 1, 0, 1]' : 0.0854301}
{'[5, 1, 3, 3, 4, 1, 0, 0, 8, 7, 0, 6, 0, 0, 0, 1, 0, 1]' : 0.0854211}
{'[5, 1, 3, 3, 4, 1, 0, 0, 8, 7, 0, 6, 0, 0, 0, 1, 0, 1]' : 0.085444}
{'[5, 1, 3, 3, 4, 1, 0, 0, 8, 7, 0, 6, 0, 0, 0, 1, 0, 1]' : 0.085403}
{'[5, 1, 3, 3, 4, 1, 0, 0, 8, 7, 0, 6, 0, 0, 0, 1, 0, 1]' : 0.0854089}
{'[5, 1, 3, 3, 4, 1, 0, 0, 8, 7, 0, 6, 0, 0, 0, 1, 0, 1]' : 0.0853601}
{'[5, 1, 3, 3, 4, 1, 0, 0, 8, 7, 0, 6, 0, 0, 0, 1, 0, 1]' : 0.0854089}
{'[5, 1, 3, 3, 4, 1, 0, 0, 8, 7, 0, 6, 0, 0, 0, 1, 0, 1]' : 0.0857842}
{'[5, 1, 3, 3, 4, 1, 0, 0, 8, 7, 0, 6, 0, 0, 0, 1, 0, 1]' : 0.0854108}
{'[5, 1, 3, 3, 4, 1, 0, 0, 8, 7, 0, 6, 0, 0, 0, 1, 0, 1]' : 0.0853572}
{'[5, 1, 3, 3, 4, 1, 0, 0, 8, 7, 0, 6, 0, 0, 0, 1, 0, 1]' : 0.085372}
{'[5, 1, 3, 3, 4, 1, 0, 0, 8, 7, 0, 6, 0, 0, 0, 1, 0, 1]' : 0.085382}
{'[5, 1, 3, 3, 4, 1, 0, 0, 8, 7, 0, 6, 0, 0, 0, 1, 0, 1]' : 0.0853701}
{'[5, 1, 3, 3, 4, 1, 0, 0, 8, 7, 0, 6, 0, 0, 0, 1, 0, 1]' : 0.085417}
{'[5, 1, 3, 3, 4, 1, 0, 0, 8, 7, 0, 6, 0, 0, 0, 1, 0, 1]' : 0.0853992}
{'[5, 1, 3, 3, 4, 1, 0, 0, 8, 7, 0, 6, 0, 0, 0, 1, 0, 1]' : 0.085413}
{'[5, 1, 3, 3, 4, 1, 0, 0, 8, 7, 0, 6, 0, 0, 0, 1, 0, 1]' : 0.0853648}
{'[5, 1, 3, 3, 4, 1, 0, 0, 8, 7, 0, 6, 0, 0, 0, 1, 0, 1]' : 0.0854111}
{'[5, 1, 3, 3, 4, 1, 0, 0, 8, 7, 0, 6, 0, 0, 0, 1, 0, 1]' : 0.0853701}
{'[5, 1, 3, 3, 4, 1, 0, 0, 8, 7, 0, 6, 0, 0, 0, 1, 0, 1]' : 0.0856059}
{'[5, 1, 3, 3, 4, 1, 0, 0, 8, 7, 0, 6, 0, 0, 0, 1, 0, 1]' : 0.0855179}
{'[5, 1, 3, 3, 4, 1, 0, 0, 8, 7, 0, 6, 0, 0, 0, 1, 0, 1]' : 0.0854061}
{'[5, 1, 3, 3, 4, 1, 0, 0, 8, 7, 0, 6, 0, 0, 0, 1, 0, 1]' : 0.0855179}
{'[5, 1, 3, 3, 4, 1, 0, 0, 8, 7, 0, 6, 0, 0, 0, 1, 0, 1]' : 0.0854008}
{'[5, 1, 3, 3, 4, 1, 0, 0, 8, 7, 0, 6, 0, 0, 0, 1, 0, 1]' : 0.0853939}
{'[5, 1, 3, 3, 4, 1, 0, 0, 8, 7, 0, 6, 0, 0, 0, 1, 0, 1]' : 0.0857189}
{'[5, 1, 3, 3, 4, 1, 0, 0, 8, 7, 0, 6, 0, 0, 0, 1, 0, 1]' : 0.0854092}
{'[5, 1, 3, 3, 4, 1, 0, 0, 8, 7, 0, 6, 0, 0, 0, 1, 0, 1]' : 0.0854602}
{'[5, 1, 3, 3, 4, 1, 0, 0, 8, 7, 0, 6, 0, 0, 0, 1, 0, 1]' : 0.085423}

out:
 ["{'[5, 1, 3, 3, 4, 1, 0, 0, 8, 7, 0, 6, 0, 0, 0, 1, 0, 1]' : 0.085923}", "{'[5, 1, 3, 3, 4, 1, 0, 0, 8, 7, 0, 6, 0, 0, 0, 1, 0, 1]' : 0.0854301}", "{'[5, 1, 3, 3, 4, 1, 0, 0, 8, 7, 0, 6, 0, 0, 0, 1, 0, 1]' : 0.0854211}", "{'[5, 1, 3, 3, 4, 1, 0, 0, 8, 7, 0, 6, 0, 0, 0, 1, 0, 1]' : 0.085444}", "{'[5, 1, 3, 3, 4, 1, 0, 0, 8, 7, 0, 6, 0, 0, 0, 1, 0, 1]' : 0.085403}", "{'[5, 1, 3, 3, 4, 1, 0, 0, 8, 7, 0, 6, 0, 0, 0, 1, 0, 1]' : 0.0854089}", "{'[5, 1, 3, 3, 4, 1, 0, 0, 8, 7, 0, 6, 0, 0, 0, 1, 0, 1]' : 0.0853601}", "{'[5, 1, 3, 3, 4, 1, 0, 0, 8, 7, 0, 6, 0, 0, 0, 1, 0, 1]' : 0.0854089}", "{'[5, 1, 3, 3, 4, 1, 0, 0, 8, 7, 0, 6, 0, 0, 0, 1, 0, 1]' : 0.0857842}", "{'[5, 1, 3, 3, 4, 1, 0, 0, 8, 7, 0, 6, 0, 0, 0, 1, 0, 1]' : 0.0854108}", "{'[5, 1, 3, 3, 4, 1, 0, 0, 8, 7, 0, 6, 0, 0, 0, 1, 0, 1]' : 0.0853572}", "{'[5, 1, 3, 3, 4, 1, 0, 0, 8, 7, 0, 6, 0, 0, 0, 1, 0, 1]' : 0.085372}", "{'[5, 1, 3, 3, 4, 1, 0, 0, 8, 7, 0, 6, 0, 0, 0, 1, 0, 1]' : 0.085382}", "{'[5, 1, 3, 3, 4, 1, 0, 0, 8, 7, 0, 6, 0, 0, 0, 1, 0, 1]' : 0.0853701}", "{'[5, 1, 3, 3, 4, 1, 0, 0, 8, 7, 0, 6, 0, 0, 0, 1, 0, 1]' : 0.085417}", "{'[5, 1, 3, 3, 4, 1, 0, 0, 8, 7, 0, 6, 0, 0, 0, 1, 0, 1]' : 0.0853992}", "{'[5, 1, 3, 3, 4, 1, 0, 0, 8, 7, 0, 6, 0, 0, 0, 1, 0, 1]' : 0.085413}", "{'[5, 1, 3, 3, 4, 1, 0, 0, 8, 7, 0, 6, 0, 0, 0, 1, 0, 1]' : 0.0853648}", "{'[5, 1, 3, 3, 4, 1, 0, 0, 8, 7, 0, 6, 0, 0, 0, 1, 0, 1]' : 0.0854111}", "{'[5, 1, 3, 3, 4, 1, 0, 0, 8, 7, 0, 6, 0, 0, 0, 1, 0, 1]' : 0.0853701}", "{'[5, 1, 3, 3, 4, 1, 0, 0, 8, 7, 0, 6, 0, 0, 0, 1, 0, 1]' : 0.0856059}", "{'[5, 1, 3, 3, 4, 1, 0, 0, 8, 7, 0, 6, 0, 0, 0, 1, 0, 1]' : 0.0855179}", "{'[5, 1, 3, 3, 4, 1, 0, 0, 8, 7, 0, 6, 0, 0, 0, 1, 0, 1]' : 0.0854061}", "{'[5, 1, 3, 3, 4, 1, 0, 0, 8, 7, 0, 6, 0, 0, 0, 1, 0, 1]' : 0.0855179}", "{'[5, 1, 3, 3, 4, 1, 0, 0, 8, 7, 0, 6, 0, 0, 0, 1, 0, 1]' : 0.0854008}", "{'[5, 1, 3, 3, 4, 1, 0, 0, 8, 7, 0, 6, 0, 0, 0, 1, 0, 1]' : 0.0853939}", "{'[5, 1, 3, 3, 4, 1, 0, 0, 8, 7, 0, 6, 0, 0, 0, 1, 0, 1]' : 0.0857189}", "{'[5, 1, 3, 3, 4, 1, 0, 0, 8, 7, 0, 6, 0, 0, 0, 1, 0, 1]' : 0.0854092}", "{'[5, 1, 3, 3, 4, 1, 0, 0, 8, 7, 0, 6, 0, 0, 0, 1, 0, 1]' : 0.0854602}", "{'[5, 1, 3, 3, 4, 1, 0, 0, 8, 7, 0, 6, 0, 0, 0, 1, 0, 1]' : 0.085423}"]
returning from 'run': {'[5, 1, 3, 3, 4, 1, 0, 0, 8, 7, 0, 6, 0, 0, 0, 1, 0, 1]': ([0.085923, 0.0854301, 0.0854211, 0.085444, 0.085403, 0.0854089, 0.0853601, 0.0854089, 0.0857842, 0.0854108, 0.0853572, 0.085372, 0.085382, 0.0853701, 0.085417, 0.0853992, 0.085413, 0.0853648, 0.0854111, 0.0853701, 0.0856059, 0.0855179, 0.0854061, 0.0855179, 0.0854008, 0.0853939, 0.0857189, 0.0854092, 0.0854602, 0.085423], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 1, 3, 3, 4, 1, 0, 0, 8, 7, 0, 6, 0, 0, 0, 1, 0, 1]': ([0.085923, 0.0854301, 0.0854211, 0.085444, 0.085403, 0.0854089, 0.0853601, 0.0854089, 0.0857842, 0.0854108, 0.0853572, 0.085372, 0.085382, 0.0853701, 0.085417, 0.0853992, 0.085413, 0.0853648, 0.0854111, 0.0853701, 0.0856059, 0.0855179, 0.0854061, 0.0855179, 0.0854008, 0.0853939, 0.0857189, 0.0854092, 0.0854602, 0.085423], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = jjj
Code stats:
        Number of loops: 	67
        Max loop nest depth: 	5
        Additions: 		5382
        Multiplications: 	2200
        Divisions: 		0
        Logical: 		0
        Reads: 			9297
        Writes: 		1376
        Comparisons:		67
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest18.exe __orio_perftest18.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest18.exe  
Program Test Output: 
{'[4, 5, 2, 2, 3, 6, 0, 0, 21, 23, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.111985}
{'[4, 5, 2, 2, 3, 6, 0, 0, 21, 23, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.111375}
{'[4, 5, 2, 2, 3, 6, 0, 0, 21, 23, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.111413}
{'[4, 5, 2, 2, 3, 6, 0, 0, 21, 23, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.111434}
{'[4, 5, 2, 2, 3, 6, 0, 0, 21, 23, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.111481}
{'[4, 5, 2, 2, 3, 6, 0, 0, 21, 23, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.111422}
{'[4, 5, 2, 2, 3, 6, 0, 0, 21, 23, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.111403}
{'[4, 5, 2, 2, 3, 6, 0, 0, 21, 23, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.11141}
{'[4, 5, 2, 2, 3, 6, 0, 0, 21, 23, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.111387}
{'[4, 5, 2, 2, 3, 6, 0, 0, 21, 23, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.111446}
{'[4, 5, 2, 2, 3, 6, 0, 0, 21, 23, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.111331}
{'[4, 5, 2, 2, 3, 6, 0, 0, 21, 23, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.111458}
{'[4, 5, 2, 2, 3, 6, 0, 0, 21, 23, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.111444}
{'[4, 5, 2, 2, 3, 6, 0, 0, 21, 23, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.11235}
{'[4, 5, 2, 2, 3, 6, 0, 0, 21, 23, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.111355}
{'[4, 5, 2, 2, 3, 6, 0, 0, 21, 23, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.111374}
{'[4, 5, 2, 2, 3, 6, 0, 0, 21, 23, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.111335}
{'[4, 5, 2, 2, 3, 6, 0, 0, 21, 23, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.111385}
{'[4, 5, 2, 2, 3, 6, 0, 0, 21, 23, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.111394}
{'[4, 5, 2, 2, 3, 6, 0, 0, 21, 23, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.111396}
{'[4, 5, 2, 2, 3, 6, 0, 0, 21, 23, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.111411}
{'[4, 5, 2, 2, 3, 6, 0, 0, 21, 23, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.11143}
{'[4, 5, 2, 2, 3, 6, 0, 0, 21, 23, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.111482}
{'[4, 5, 2, 2, 3, 6, 0, 0, 21, 23, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.111416}
{'[4, 5, 2, 2, 3, 6, 0, 0, 21, 23, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.111477}
{'[4, 5, 2, 2, 3, 6, 0, 0, 21, 23, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.111407}
{'[4, 5, 2, 2, 3, 6, 0, 0, 21, 23, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.11201}
{'[4, 5, 2, 2, 3, 6, 0, 0, 21, 23, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.111338}
{'[4, 5, 2, 2, 3, 6, 0, 0, 21, 23, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.111411}
{'[4, 5, 2, 2, 3, 6, 0, 0, 21, 23, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.111419}

out:
 ["{'[4, 5, 2, 2, 3, 6, 0, 0, 21, 23, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.111985}", "{'[4, 5, 2, 2, 3, 6, 0, 0, 21, 23, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.111375}", "{'[4, 5, 2, 2, 3, 6, 0, 0, 21, 23, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.111413}", "{'[4, 5, 2, 2, 3, 6, 0, 0, 21, 23, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.111434}", "{'[4, 5, 2, 2, 3, 6, 0, 0, 21, 23, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.111481}", "{'[4, 5, 2, 2, 3, 6, 0, 0, 21, 23, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.111422}", "{'[4, 5, 2, 2, 3, 6, 0, 0, 21, 23, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.111403}", "{'[4, 5, 2, 2, 3, 6, 0, 0, 21, 23, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.11141}", "{'[4, 5, 2, 2, 3, 6, 0, 0, 21, 23, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.111387}", "{'[4, 5, 2, 2, 3, 6, 0, 0, 21, 23, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.111446}", "{'[4, 5, 2, 2, 3, 6, 0, 0, 21, 23, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.111331}", "{'[4, 5, 2, 2, 3, 6, 0, 0, 21, 23, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.111458}", "{'[4, 5, 2, 2, 3, 6, 0, 0, 21, 23, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.111444}", "{'[4, 5, 2, 2, 3, 6, 0, 0, 21, 23, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.11235}", "{'[4, 5, 2, 2, 3, 6, 0, 0, 21, 23, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.111355}", "{'[4, 5, 2, 2, 3, 6, 0, 0, 21, 23, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.111374}", "{'[4, 5, 2, 2, 3, 6, 0, 0, 21, 23, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.111335}", "{'[4, 5, 2, 2, 3, 6, 0, 0, 21, 23, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.111385}", "{'[4, 5, 2, 2, 3, 6, 0, 0, 21, 23, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.111394}", "{'[4, 5, 2, 2, 3, 6, 0, 0, 21, 23, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.111396}", "{'[4, 5, 2, 2, 3, 6, 0, 0, 21, 23, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.111411}", "{'[4, 5, 2, 2, 3, 6, 0, 0, 21, 23, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.11143}", "{'[4, 5, 2, 2, 3, 6, 0, 0, 21, 23, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.111482}", "{'[4, 5, 2, 2, 3, 6, 0, 0, 21, 23, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.111416}", "{'[4, 5, 2, 2, 3, 6, 0, 0, 21, 23, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.111477}", "{'[4, 5, 2, 2, 3, 6, 0, 0, 21, 23, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.111407}", "{'[4, 5, 2, 2, 3, 6, 0, 0, 21, 23, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.11201}", "{'[4, 5, 2, 2, 3, 6, 0, 0, 21, 23, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.111338}", "{'[4, 5, 2, 2, 3, 6, 0, 0, 21, 23, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.111411}", "{'[4, 5, 2, 2, 3, 6, 0, 0, 21, 23, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.111419}"]
returning from 'run': {'[4, 5, 2, 2, 3, 6, 0, 0, 21, 23, 25, 0, 0, 1, 1, 1, 0, 0]': ([0.111985, 0.111375, 0.111413, 0.111434, 0.111481, 0.111422, 0.111403, 0.11141, 0.111387, 0.111446, 0.111331, 0.111458, 0.111444, 0.11235, 0.111355, 0.111374, 0.111335, 0.111385, 0.111394, 0.111396, 0.111411, 0.11143, 0.111482, 0.111416, 0.111477, 0.111407, 0.11201, 0.111338, 0.111411, 0.111419], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 5, 2, 2, 3, 6, 0, 0, 21, 23, 25, 0, 0, 1, 1, 1, 0, 0]': ([0.111985, 0.111375, 0.111413, 0.111434, 0.111481, 0.111422, 0.111403, 0.11141, 0.111387, 0.111446, 0.111331, 0.111458, 0.111444, 0.11235, 0.111355, 0.111374, 0.111335, 0.111385, 0.111394, 0.111396, 0.111411, 0.11143, 0.111482, 0.111416, 0.111477, 0.111407, 0.11201, 0.111338, 0.111411, 0.111419], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		226
        Multiplications: 	74
        Divisions: 		0
        Logical: 		0
        Reads: 			565
        Writes: 		135
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest19.exe __orio_perftest19.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest19.exe  
Program Test Output: 
{'[2, 5, 0, 0, 6, 1, 1, 0, 5, 0, 15, 19, 0, 1, 1, 1, 0, 1]' : 0.14813}
{'[2, 5, 0, 0, 6, 1, 1, 0, 5, 0, 15, 19, 0, 1, 1, 1, 0, 1]' : 0.147676}
{'[2, 5, 0, 0, 6, 1, 1, 0, 5, 0, 15, 19, 0, 1, 1, 1, 0, 1]' : 0.147524}
{'[2, 5, 0, 0, 6, 1, 1, 0, 5, 0, 15, 19, 0, 1, 1, 1, 0, 1]' : 0.147517}
{'[2, 5, 0, 0, 6, 1, 1, 0, 5, 0, 15, 19, 0, 1, 1, 1, 0, 1]' : 0.147509}
{'[2, 5, 0, 0, 6, 1, 1, 0, 5, 0, 15, 19, 0, 1, 1, 1, 0, 1]' : 0.147586}
{'[2, 5, 0, 0, 6, 1, 1, 0, 5, 0, 15, 19, 0, 1, 1, 1, 0, 1]' : 0.147562}
{'[2, 5, 0, 0, 6, 1, 1, 0, 5, 0, 15, 19, 0, 1, 1, 1, 0, 1]' : 0.147611}
{'[2, 5, 0, 0, 6, 1, 1, 0, 5, 0, 15, 19, 0, 1, 1, 1, 0, 1]' : 0.147514}
{'[2, 5, 0, 0, 6, 1, 1, 0, 5, 0, 15, 19, 0, 1, 1, 1, 0, 1]' : 0.147756}
{'[2, 5, 0, 0, 6, 1, 1, 0, 5, 0, 15, 19, 0, 1, 1, 1, 0, 1]' : 0.14778}
{'[2, 5, 0, 0, 6, 1, 1, 0, 5, 0, 15, 19, 0, 1, 1, 1, 0, 1]' : 0.147567}
{'[2, 5, 0, 0, 6, 1, 1, 0, 5, 0, 15, 19, 0, 1, 1, 1, 0, 1]' : 0.147626}
{'[2, 5, 0, 0, 6, 1, 1, 0, 5, 0, 15, 19, 0, 1, 1, 1, 0, 1]' : 0.147602}
{'[2, 5, 0, 0, 6, 1, 1, 0, 5, 0, 15, 19, 0, 1, 1, 1, 0, 1]' : 0.147679}
{'[2, 5, 0, 0, 6, 1, 1, 0, 5, 0, 15, 19, 0, 1, 1, 1, 0, 1]' : 0.147611}
{'[2, 5, 0, 0, 6, 1, 1, 0, 5, 0, 15, 19, 0, 1, 1, 1, 0, 1]' : 0.14754}
{'[2, 5, 0, 0, 6, 1, 1, 0, 5, 0, 15, 19, 0, 1, 1, 1, 0, 1]' : 0.147647}
{'[2, 5, 0, 0, 6, 1, 1, 0, 5, 0, 15, 19, 0, 1, 1, 1, 0, 1]' : 0.147613}
{'[2, 5, 0, 0, 6, 1, 1, 0, 5, 0, 15, 19, 0, 1, 1, 1, 0, 1]' : 0.147549}
{'[2, 5, 0, 0, 6, 1, 1, 0, 5, 0, 15, 19, 0, 1, 1, 1, 0, 1]' : 0.148011}
{'[2, 5, 0, 0, 6, 1, 1, 0, 5, 0, 15, 19, 0, 1, 1, 1, 0, 1]' : 0.147562}
{'[2, 5, 0, 0, 6, 1, 1, 0, 5, 0, 15, 19, 0, 1, 1, 1, 0, 1]' : 0.147627}
{'[2, 5, 0, 0, 6, 1, 1, 0, 5, 0, 15, 19, 0, 1, 1, 1, 0, 1]' : 0.147559}
{'[2, 5, 0, 0, 6, 1, 1, 0, 5, 0, 15, 19, 0, 1, 1, 1, 0, 1]' : 0.147527}
{'[2, 5, 0, 0, 6, 1, 1, 0, 5, 0, 15, 19, 0, 1, 1, 1, 0, 1]' : 0.147606}
{'[2, 5, 0, 0, 6, 1, 1, 0, 5, 0, 15, 19, 0, 1, 1, 1, 0, 1]' : 0.147575}
{'[2, 5, 0, 0, 6, 1, 1, 0, 5, 0, 15, 19, 0, 1, 1, 1, 0, 1]' : 0.147579}
{'[2, 5, 0, 0, 6, 1, 1, 0, 5, 0, 15, 19, 0, 1, 1, 1, 0, 1]' : 0.147603}
{'[2, 5, 0, 0, 6, 1, 1, 0, 5, 0, 15, 19, 0, 1, 1, 1, 0, 1]' : 0.147556}

out:
 ["{'[2, 5, 0, 0, 6, 1, 1, 0, 5, 0, 15, 19, 0, 1, 1, 1, 0, 1]' : 0.14813}", "{'[2, 5, 0, 0, 6, 1, 1, 0, 5, 0, 15, 19, 0, 1, 1, 1, 0, 1]' : 0.147676}", "{'[2, 5, 0, 0, 6, 1, 1, 0, 5, 0, 15, 19, 0, 1, 1, 1, 0, 1]' : 0.147524}", "{'[2, 5, 0, 0, 6, 1, 1, 0, 5, 0, 15, 19, 0, 1, 1, 1, 0, 1]' : 0.147517}", "{'[2, 5, 0, 0, 6, 1, 1, 0, 5, 0, 15, 19, 0, 1, 1, 1, 0, 1]' : 0.147509}", "{'[2, 5, 0, 0, 6, 1, 1, 0, 5, 0, 15, 19, 0, 1, 1, 1, 0, 1]' : 0.147586}", "{'[2, 5, 0, 0, 6, 1, 1, 0, 5, 0, 15, 19, 0, 1, 1, 1, 0, 1]' : 0.147562}", "{'[2, 5, 0, 0, 6, 1, 1, 0, 5, 0, 15, 19, 0, 1, 1, 1, 0, 1]' : 0.147611}", "{'[2, 5, 0, 0, 6, 1, 1, 0, 5, 0, 15, 19, 0, 1, 1, 1, 0, 1]' : 0.147514}", "{'[2, 5, 0, 0, 6, 1, 1, 0, 5, 0, 15, 19, 0, 1, 1, 1, 0, 1]' : 0.147756}", "{'[2, 5, 0, 0, 6, 1, 1, 0, 5, 0, 15, 19, 0, 1, 1, 1, 0, 1]' : 0.14778}", "{'[2, 5, 0, 0, 6, 1, 1, 0, 5, 0, 15, 19, 0, 1, 1, 1, 0, 1]' : 0.147567}", "{'[2, 5, 0, 0, 6, 1, 1, 0, 5, 0, 15, 19, 0, 1, 1, 1, 0, 1]' : 0.147626}", "{'[2, 5, 0, 0, 6, 1, 1, 0, 5, 0, 15, 19, 0, 1, 1, 1, 0, 1]' : 0.147602}", "{'[2, 5, 0, 0, 6, 1, 1, 0, 5, 0, 15, 19, 0, 1, 1, 1, 0, 1]' : 0.147679}", "{'[2, 5, 0, 0, 6, 1, 1, 0, 5, 0, 15, 19, 0, 1, 1, 1, 0, 1]' : 0.147611}", "{'[2, 5, 0, 0, 6, 1, 1, 0, 5, 0, 15, 19, 0, 1, 1, 1, 0, 1]' : 0.14754}", "{'[2, 5, 0, 0, 6, 1, 1, 0, 5, 0, 15, 19, 0, 1, 1, 1, 0, 1]' : 0.147647}", "{'[2, 5, 0, 0, 6, 1, 1, 0, 5, 0, 15, 19, 0, 1, 1, 1, 0, 1]' : 0.147613}", "{'[2, 5, 0, 0, 6, 1, 1, 0, 5, 0, 15, 19, 0, 1, 1, 1, 0, 1]' : 0.147549}", "{'[2, 5, 0, 0, 6, 1, 1, 0, 5, 0, 15, 19, 0, 1, 1, 1, 0, 1]' : 0.148011}", "{'[2, 5, 0, 0, 6, 1, 1, 0, 5, 0, 15, 19, 0, 1, 1, 1, 0, 1]' : 0.147562}", "{'[2, 5, 0, 0, 6, 1, 1, 0, 5, 0, 15, 19, 0, 1, 1, 1, 0, 1]' : 0.147627}", "{'[2, 5, 0, 0, 6, 1, 1, 0, 5, 0, 15, 19, 0, 1, 1, 1, 0, 1]' : 0.147559}", "{'[2, 5, 0, 0, 6, 1, 1, 0, 5, 0, 15, 19, 0, 1, 1, 1, 0, 1]' : 0.147527}", "{'[2, 5, 0, 0, 6, 1, 1, 0, 5, 0, 15, 19, 0, 1, 1, 1, 0, 1]' : 0.147606}", "{'[2, 5, 0, 0, 6, 1, 1, 0, 5, 0, 15, 19, 0, 1, 1, 1, 0, 1]' : 0.147575}", "{'[2, 5, 0, 0, 6, 1, 1, 0, 5, 0, 15, 19, 0, 1, 1, 1, 0, 1]' : 0.147579}", "{'[2, 5, 0, 0, 6, 1, 1, 0, 5, 0, 15, 19, 0, 1, 1, 1, 0, 1]' : 0.147603}", "{'[2, 5, 0, 0, 6, 1, 1, 0, 5, 0, 15, 19, 0, 1, 1, 1, 0, 1]' : 0.147556}"]
returning from 'run': {'[2, 5, 0, 0, 6, 1, 1, 0, 5, 0, 15, 19, 0, 1, 1, 1, 0, 1]': ([0.14813, 0.147676, 0.147524, 0.147517, 0.147509, 0.147586, 0.147562, 0.147611, 0.147514, 0.147756, 0.14778, 0.147567, 0.147626, 0.147602, 0.147679, 0.147611, 0.14754, 0.147647, 0.147613, 0.147549, 0.148011, 0.147562, 0.147627, 0.147559, 0.147527, 0.147606, 0.147575, 0.147579, 0.147603, 0.147556], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 5, 0, 0, 6, 1, 1, 0, 5, 0, 15, 19, 0, 1, 1, 1, 0, 1]': ([0.14813, 0.147676, 0.147524, 0.147517, 0.147509, 0.147586, 0.147562, 0.147611, 0.147514, 0.147756, 0.14778, 0.147567, 0.147626, 0.147602, 0.147679, 0.147611, 0.14754, 0.147647, 0.147613, 0.147549, 0.148011, 0.147562, 0.147627, 0.147559, 0.147527, 0.147606, 0.147575, 0.147579, 0.147603, 0.147556], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = kkk
Code stats:
        Number of loops: 	53
        Max loop nest depth: 	5
        Additions: 		2115
        Multiplications: 	858
        Divisions: 		0
        Logical: 		0
        Reads: 			4206
        Writes: 		760
        Comparisons:		53
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest20.exe __orio_perftest20.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest20.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest20.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest20.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/Orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/Orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 525, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors, data)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 406, in dopt_anova
    budget)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 331, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 277, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/phrb/code/Orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest20.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/Orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/Orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 525, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors, data)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 406, in dopt_anova
    budget)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 331, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 277, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/phrb/code/Orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		381
        Multiplications: 	124
        Divisions: 		0
        Logical: 		0
        Reads: 			793
        Writes: 		99
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest21.exe __orio_perftest21.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest21.exe  
Program Test Output: 
{'[5, 3, 4, 4, 1, 0, 0, 1, 6, 0, 0, 27, 0, 2, 0, 0, 0, 0]' : 0.186463}
{'[5, 3, 4, 4, 1, 0, 0, 1, 6, 0, 0, 27, 0, 2, 0, 0, 0, 0]' : 0.186717}
{'[5, 3, 4, 4, 1, 0, 0, 1, 6, 0, 0, 27, 0, 2, 0, 0, 0, 0]' : 0.186467}
{'[5, 3, 4, 4, 1, 0, 0, 1, 6, 0, 0, 27, 0, 2, 0, 0, 0, 0]' : 0.186365}
{'[5, 3, 4, 4, 1, 0, 0, 1, 6, 0, 0, 27, 0, 2, 0, 0, 0, 0]' : 0.186526}
{'[5, 3, 4, 4, 1, 0, 0, 1, 6, 0, 0, 27, 0, 2, 0, 0, 0, 0]' : 0.186461}
{'[5, 3, 4, 4, 1, 0, 0, 1, 6, 0, 0, 27, 0, 2, 0, 0, 0, 0]' : 0.186469}
{'[5, 3, 4, 4, 1, 0, 0, 1, 6, 0, 0, 27, 0, 2, 0, 0, 0, 0]' : 0.186463}
{'[5, 3, 4, 4, 1, 0, 0, 1, 6, 0, 0, 27, 0, 2, 0, 0, 0, 0]' : 0.18641}
{'[5, 3, 4, 4, 1, 0, 0, 1, 6, 0, 0, 27, 0, 2, 0, 0, 0, 0]' : 0.186634}
{'[5, 3, 4, 4, 1, 0, 0, 1, 6, 0, 0, 27, 0, 2, 0, 0, 0, 0]' : 0.186516}
{'[5, 3, 4, 4, 1, 0, 0, 1, 6, 0, 0, 27, 0, 2, 0, 0, 0, 0]' : 0.186431}
{'[5, 3, 4, 4, 1, 0, 0, 1, 6, 0, 0, 27, 0, 2, 0, 0, 0, 0]' : 0.186597}
{'[5, 3, 4, 4, 1, 0, 0, 1, 6, 0, 0, 27, 0, 2, 0, 0, 0, 0]' : 0.186419}
{'[5, 3, 4, 4, 1, 0, 0, 1, 6, 0, 0, 27, 0, 2, 0, 0, 0, 0]' : 0.186423}
{'[5, 3, 4, 4, 1, 0, 0, 1, 6, 0, 0, 27, 0, 2, 0, 0, 0, 0]' : 0.186392}
{'[5, 3, 4, 4, 1, 0, 0, 1, 6, 0, 0, 27, 0, 2, 0, 0, 0, 0]' : 0.186435}
{'[5, 3, 4, 4, 1, 0, 0, 1, 6, 0, 0, 27, 0, 2, 0, 0, 0, 0]' : 0.186612}
{'[5, 3, 4, 4, 1, 0, 0, 1, 6, 0, 0, 27, 0, 2, 0, 0, 0, 0]' : 0.186494}
{'[5, 3, 4, 4, 1, 0, 0, 1, 6, 0, 0, 27, 0, 2, 0, 0, 0, 0]' : 0.186393}
{'[5, 3, 4, 4, 1, 0, 0, 1, 6, 0, 0, 27, 0, 2, 0, 0, 0, 0]' : 0.18643}
{'[5, 3, 4, 4, 1, 0, 0, 1, 6, 0, 0, 27, 0, 2, 0, 0, 0, 0]' : 0.186425}
{'[5, 3, 4, 4, 1, 0, 0, 1, 6, 0, 0, 27, 0, 2, 0, 0, 0, 0]' : 0.186444}
{'[5, 3, 4, 4, 1, 0, 0, 1, 6, 0, 0, 27, 0, 2, 0, 0, 0, 0]' : 0.186423}
{'[5, 3, 4, 4, 1, 0, 0, 1, 6, 0, 0, 27, 0, 2, 0, 0, 0, 0]' : 0.186325}
{'[5, 3, 4, 4, 1, 0, 0, 1, 6, 0, 0, 27, 0, 2, 0, 0, 0, 0]' : 0.186624}
{'[5, 3, 4, 4, 1, 0, 0, 1, 6, 0, 0, 27, 0, 2, 0, 0, 0, 0]' : 0.186448}
{'[5, 3, 4, 4, 1, 0, 0, 1, 6, 0, 0, 27, 0, 2, 0, 0, 0, 0]' : 0.186473}
{'[5, 3, 4, 4, 1, 0, 0, 1, 6, 0, 0, 27, 0, 2, 0, 0, 0, 0]' : 0.186592}
{'[5, 3, 4, 4, 1, 0, 0, 1, 6, 0, 0, 27, 0, 2, 0, 0, 0, 0]' : 0.186367}

out:
 ["{'[5, 3, 4, 4, 1, 0, 0, 1, 6, 0, 0, 27, 0, 2, 0, 0, 0, 0]' : 0.186463}", "{'[5, 3, 4, 4, 1, 0, 0, 1, 6, 0, 0, 27, 0, 2, 0, 0, 0, 0]' : 0.186717}", "{'[5, 3, 4, 4, 1, 0, 0, 1, 6, 0, 0, 27, 0, 2, 0, 0, 0, 0]' : 0.186467}", "{'[5, 3, 4, 4, 1, 0, 0, 1, 6, 0, 0, 27, 0, 2, 0, 0, 0, 0]' : 0.186365}", "{'[5, 3, 4, 4, 1, 0, 0, 1, 6, 0, 0, 27, 0, 2, 0, 0, 0, 0]' : 0.186526}", "{'[5, 3, 4, 4, 1, 0, 0, 1, 6, 0, 0, 27, 0, 2, 0, 0, 0, 0]' : 0.186461}", "{'[5, 3, 4, 4, 1, 0, 0, 1, 6, 0, 0, 27, 0, 2, 0, 0, 0, 0]' : 0.186469}", "{'[5, 3, 4, 4, 1, 0, 0, 1, 6, 0, 0, 27, 0, 2, 0, 0, 0, 0]' : 0.186463}", "{'[5, 3, 4, 4, 1, 0, 0, 1, 6, 0, 0, 27, 0, 2, 0, 0, 0, 0]' : 0.18641}", "{'[5, 3, 4, 4, 1, 0, 0, 1, 6, 0, 0, 27, 0, 2, 0, 0, 0, 0]' : 0.186634}", "{'[5, 3, 4, 4, 1, 0, 0, 1, 6, 0, 0, 27, 0, 2, 0, 0, 0, 0]' : 0.186516}", "{'[5, 3, 4, 4, 1, 0, 0, 1, 6, 0, 0, 27, 0, 2, 0, 0, 0, 0]' : 0.186431}", "{'[5, 3, 4, 4, 1, 0, 0, 1, 6, 0, 0, 27, 0, 2, 0, 0, 0, 0]' : 0.186597}", "{'[5, 3, 4, 4, 1, 0, 0, 1, 6, 0, 0, 27, 0, 2, 0, 0, 0, 0]' : 0.186419}", "{'[5, 3, 4, 4, 1, 0, 0, 1, 6, 0, 0, 27, 0, 2, 0, 0, 0, 0]' : 0.186423}", "{'[5, 3, 4, 4, 1, 0, 0, 1, 6, 0, 0, 27, 0, 2, 0, 0, 0, 0]' : 0.186392}", "{'[5, 3, 4, 4, 1, 0, 0, 1, 6, 0, 0, 27, 0, 2, 0, 0, 0, 0]' : 0.186435}", "{'[5, 3, 4, 4, 1, 0, 0, 1, 6, 0, 0, 27, 0, 2, 0, 0, 0, 0]' : 0.186612}", "{'[5, 3, 4, 4, 1, 0, 0, 1, 6, 0, 0, 27, 0, 2, 0, 0, 0, 0]' : 0.186494}", "{'[5, 3, 4, 4, 1, 0, 0, 1, 6, 0, 0, 27, 0, 2, 0, 0, 0, 0]' : 0.186393}", "{'[5, 3, 4, 4, 1, 0, 0, 1, 6, 0, 0, 27, 0, 2, 0, 0, 0, 0]' : 0.18643}", "{'[5, 3, 4, 4, 1, 0, 0, 1, 6, 0, 0, 27, 0, 2, 0, 0, 0, 0]' : 0.186425}", "{'[5, 3, 4, 4, 1, 0, 0, 1, 6, 0, 0, 27, 0, 2, 0, 0, 0, 0]' : 0.186444}", "{'[5, 3, 4, 4, 1, 0, 0, 1, 6, 0, 0, 27, 0, 2, 0, 0, 0, 0]' : 0.186423}", "{'[5, 3, 4, 4, 1, 0, 0, 1, 6, 0, 0, 27, 0, 2, 0, 0, 0, 0]' : 0.186325}", "{'[5, 3, 4, 4, 1, 0, 0, 1, 6, 0, 0, 27, 0, 2, 0, 0, 0, 0]' : 0.186624}", "{'[5, 3, 4, 4, 1, 0, 0, 1, 6, 0, 0, 27, 0, 2, 0, 0, 0, 0]' : 0.186448}", "{'[5, 3, 4, 4, 1, 0, 0, 1, 6, 0, 0, 27, 0, 2, 0, 0, 0, 0]' : 0.186473}", "{'[5, 3, 4, 4, 1, 0, 0, 1, 6, 0, 0, 27, 0, 2, 0, 0, 0, 0]' : 0.186592}", "{'[5, 3, 4, 4, 1, 0, 0, 1, 6, 0, 0, 27, 0, 2, 0, 0, 0, 0]' : 0.186367}"]
returning from 'run': {'[5, 3, 4, 4, 1, 0, 0, 1, 6, 0, 0, 27, 0, 2, 0, 0, 0, 0]': ([0.186463, 0.186717, 0.186467, 0.186365, 0.186526, 0.186461, 0.186469, 0.186463, 0.18641, 0.186634, 0.186516, 0.186431, 0.186597, 0.186419, 0.186423, 0.186392, 0.186435, 0.186612, 0.186494, 0.186393, 0.18643, 0.186425, 0.186444, 0.186423, 0.186325, 0.186624, 0.186448, 0.186473, 0.186592, 0.186367], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 3, 4, 4, 1, 0, 0, 1, 6, 0, 0, 27, 0, 2, 0, 0, 0, 0]': ([0.186463, 0.186717, 0.186467, 0.186365, 0.186526, 0.186461, 0.186469, 0.186463, 0.18641, 0.186634, 0.186516, 0.186431, 0.186597, 0.186419, 0.186423, 0.186392, 0.186435, 0.186612, 0.186494, 0.186393, 0.18643, 0.186425, 0.186444, 0.186423, 0.186325, 0.186624, 0.186448, 0.186473, 0.186592, 0.186367], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	46
        Max loop nest depth: 	5
        Additions: 		3232
        Multiplications: 	1280
        Divisions: 		0
        Logical: 		0
        Reads: 			6910
        Writes: 		1443
        Comparisons:		46
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest22.exe __orio_perftest22.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest22.exe  
Program Test Output: 
{'[5, 0, 1, 5, 3, 0, 1, 0, 18, 6, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.082283}
{'[5, 0, 1, 5, 3, 0, 1, 0, 18, 6, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.0816112}
{'[5, 0, 1, 5, 3, 0, 1, 0, 18, 6, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.0815759}
{'[5, 0, 1, 5, 3, 0, 1, 0, 18, 6, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.0816381}
{'[5, 0, 1, 5, 3, 0, 1, 0, 18, 6, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.081583}
{'[5, 0, 1, 5, 3, 0, 1, 0, 18, 6, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.0817232}
{'[5, 0, 1, 5, 3, 0, 1, 0, 18, 6, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.0815778}
{'[5, 0, 1, 5, 3, 0, 1, 0, 18, 6, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.0815961}
{'[5, 0, 1, 5, 3, 0, 1, 0, 18, 6, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.0815871}
{'[5, 0, 1, 5, 3, 0, 1, 0, 18, 6, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.081609}
{'[5, 0, 1, 5, 3, 0, 1, 0, 18, 6, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.0815659}
{'[5, 0, 1, 5, 3, 0, 1, 0, 18, 6, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.081579}
{'[5, 0, 1, 5, 3, 0, 1, 0, 18, 6, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.0815611}
{'[5, 0, 1, 5, 3, 0, 1, 0, 18, 6, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.0816429}
{'[5, 0, 1, 5, 3, 0, 1, 0, 18, 6, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.0815802}
{'[5, 0, 1, 5, 3, 0, 1, 0, 18, 6, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.0815899}
{'[5, 0, 1, 5, 3, 0, 1, 0, 18, 6, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.082032}
{'[5, 0, 1, 5, 3, 0, 1, 0, 18, 6, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.0815761}
{'[5, 0, 1, 5, 3, 0, 1, 0, 18, 6, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.0816231}
{'[5, 0, 1, 5, 3, 0, 1, 0, 18, 6, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.0815349}
{'[5, 0, 1, 5, 3, 0, 1, 0, 18, 6, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.081569}
{'[5, 0, 1, 5, 3, 0, 1, 0, 18, 6, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.081558}
{'[5, 0, 1, 5, 3, 0, 1, 0, 18, 6, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.081557}
{'[5, 0, 1, 5, 3, 0, 1, 0, 18, 6, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.0815821}
{'[5, 0, 1, 5, 3, 0, 1, 0, 18, 6, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.081547}
{'[5, 0, 1, 5, 3, 0, 1, 0, 18, 6, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.0816309}
{'[5, 0, 1, 5, 3, 0, 1, 0, 18, 6, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.081583}
{'[5, 0, 1, 5, 3, 0, 1, 0, 18, 6, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.0815389}
{'[5, 0, 1, 5, 3, 0, 1, 0, 18, 6, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.081686}
{'[5, 0, 1, 5, 3, 0, 1, 0, 18, 6, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.0816081}

out:
 ["{'[5, 0, 1, 5, 3, 0, 1, 0, 18, 6, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.082283}", "{'[5, 0, 1, 5, 3, 0, 1, 0, 18, 6, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.0816112}", "{'[5, 0, 1, 5, 3, 0, 1, 0, 18, 6, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.0815759}", "{'[5, 0, 1, 5, 3, 0, 1, 0, 18, 6, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.0816381}", "{'[5, 0, 1, 5, 3, 0, 1, 0, 18, 6, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.081583}", "{'[5, 0, 1, 5, 3, 0, 1, 0, 18, 6, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.0817232}", "{'[5, 0, 1, 5, 3, 0, 1, 0, 18, 6, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.0815778}", "{'[5, 0, 1, 5, 3, 0, 1, 0, 18, 6, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.0815961}", "{'[5, 0, 1, 5, 3, 0, 1, 0, 18, 6, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.0815871}", "{'[5, 0, 1, 5, 3, 0, 1, 0, 18, 6, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.081609}", "{'[5, 0, 1, 5, 3, 0, 1, 0, 18, 6, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.0815659}", "{'[5, 0, 1, 5, 3, 0, 1, 0, 18, 6, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.081579}", "{'[5, 0, 1, 5, 3, 0, 1, 0, 18, 6, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.0815611}", "{'[5, 0, 1, 5, 3, 0, 1, 0, 18, 6, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.0816429}", "{'[5, 0, 1, 5, 3, 0, 1, 0, 18, 6, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.0815802}", "{'[5, 0, 1, 5, 3, 0, 1, 0, 18, 6, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.0815899}", "{'[5, 0, 1, 5, 3, 0, 1, 0, 18, 6, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.082032}", "{'[5, 0, 1, 5, 3, 0, 1, 0, 18, 6, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.0815761}", "{'[5, 0, 1, 5, 3, 0, 1, 0, 18, 6, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.0816231}", "{'[5, 0, 1, 5, 3, 0, 1, 0, 18, 6, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.0815349}", "{'[5, 0, 1, 5, 3, 0, 1, 0, 18, 6, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.081569}", "{'[5, 0, 1, 5, 3, 0, 1, 0, 18, 6, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.081558}", "{'[5, 0, 1, 5, 3, 0, 1, 0, 18, 6, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.081557}", "{'[5, 0, 1, 5, 3, 0, 1, 0, 18, 6, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.0815821}", "{'[5, 0, 1, 5, 3, 0, 1, 0, 18, 6, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.081547}", "{'[5, 0, 1, 5, 3, 0, 1, 0, 18, 6, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.0816309}", "{'[5, 0, 1, 5, 3, 0, 1, 0, 18, 6, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.081583}", "{'[5, 0, 1, 5, 3, 0, 1, 0, 18, 6, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.0815389}", "{'[5, 0, 1, 5, 3, 0, 1, 0, 18, 6, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.081686}", "{'[5, 0, 1, 5, 3, 0, 1, 0, 18, 6, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.0816081}"]
returning from 'run': {'[5, 0, 1, 5, 3, 0, 1, 0, 18, 6, 0, 29, 1, 0, 1, 1, 0, 1]': ([0.082283, 0.0816112, 0.0815759, 0.0816381, 0.081583, 0.0817232, 0.0815778, 0.0815961, 0.0815871, 0.081609, 0.0815659, 0.081579, 0.0815611, 0.0816429, 0.0815802, 0.0815899, 0.082032, 0.0815761, 0.0816231, 0.0815349, 0.081569, 0.081558, 0.081557, 0.0815821, 0.081547, 0.0816309, 0.081583, 0.0815389, 0.081686, 0.0816081], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 0, 1, 5, 3, 0, 1, 0, 18, 6, 0, 29, 1, 0, 1, 1, 0, 1]': ([0.082283, 0.0816112, 0.0815759, 0.0816381, 0.081583, 0.0817232, 0.0815778, 0.0815961, 0.0815871, 0.081609, 0.0815659, 0.081579, 0.0815611, 0.0816429, 0.0815802, 0.0815899, 0.082032, 0.0815761, 0.0816231, 0.0815349, 0.081569, 0.081558, 0.081557, 0.0815821, 0.081547, 0.0816309, 0.081583, 0.0815389, 0.081686, 0.0816081], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
Code stats:
        Number of loops: 	29
        Max loop nest depth: 	5
        Additions: 		3326
        Multiplications: 	902
        Divisions: 		0
        Logical: 		0
        Reads: 			5162
        Writes: 		541
        Comparisons:		29
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest23.exe __orio_perftest23.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest23.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest23.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest23.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/Orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/Orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 525, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors, data)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 406, in dopt_anova
    budget)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 331, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 277, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/phrb/code/Orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest23.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/Orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/Orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 525, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors, data)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 406, in dopt_anova
    budget)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 331, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 277, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/phrb/code/Orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		1326
        Multiplications: 	414
        Divisions: 		0
        Logical: 		0
        Reads: 			2170
        Writes: 		238
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest24.exe __orio_perftest24.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest24.exe  
Program Test Output: 
{'[5, 0, 2, 0, 0, 4, 1, 0, 0, 0, 11, 13, 1, 1, 0, 0, 0, 0]' : 0.10699}
{'[5, 0, 2, 0, 0, 4, 1, 0, 0, 0, 11, 13, 1, 1, 0, 0, 0, 0]' : 0.108347}
{'[5, 0, 2, 0, 0, 4, 1, 0, 0, 0, 11, 13, 1, 1, 0, 0, 0, 0]' : 0.106301}
{'[5, 0, 2, 0, 0, 4, 1, 0, 0, 0, 11, 13, 1, 1, 0, 0, 0, 0]' : 0.106265}
{'[5, 0, 2, 0, 0, 4, 1, 0, 0, 0, 11, 13, 1, 1, 0, 0, 0, 0]' : 0.106389}
{'[5, 0, 2, 0, 0, 4, 1, 0, 0, 0, 11, 13, 1, 1, 0, 0, 0, 0]' : 0.106402}
{'[5, 0, 2, 0, 0, 4, 1, 0, 0, 0, 11, 13, 1, 1, 0, 0, 0, 0]' : 0.106281}
{'[5, 0, 2, 0, 0, 4, 1, 0, 0, 0, 11, 13, 1, 1, 0, 0, 0, 0]' : 0.10624}
{'[5, 0, 2, 0, 0, 4, 1, 0, 0, 0, 11, 13, 1, 1, 0, 0, 0, 0]' : 0.10634}
{'[5, 0, 2, 0, 0, 4, 1, 0, 0, 0, 11, 13, 1, 1, 0, 0, 0, 0]' : 0.106288}
{'[5, 0, 2, 0, 0, 4, 1, 0, 0, 0, 11, 13, 1, 1, 0, 0, 0, 0]' : 0.106404}
{'[5, 0, 2, 0, 0, 4, 1, 0, 0, 0, 11, 13, 1, 1, 0, 0, 0, 0]' : 0.106732}
{'[5, 0, 2, 0, 0, 4, 1, 0, 0, 0, 11, 13, 1, 1, 0, 0, 0, 0]' : 0.106377}
{'[5, 0, 2, 0, 0, 4, 1, 0, 0, 0, 11, 13, 1, 1, 0, 0, 0, 0]' : 0.106532}
{'[5, 0, 2, 0, 0, 4, 1, 0, 0, 0, 11, 13, 1, 1, 0, 0, 0, 0]' : 0.106334}
{'[5, 0, 2, 0, 0, 4, 1, 0, 0, 0, 11, 13, 1, 1, 0, 0, 0, 0]' : 0.106274}
{'[5, 0, 2, 0, 0, 4, 1, 0, 0, 0, 11, 13, 1, 1, 0, 0, 0, 0]' : 0.106483}
{'[5, 0, 2, 0, 0, 4, 1, 0, 0, 0, 11, 13, 1, 1, 0, 0, 0, 0]' : 0.106377}
{'[5, 0, 2, 0, 0, 4, 1, 0, 0, 0, 11, 13, 1, 1, 0, 0, 0, 0]' : 0.106312}
{'[5, 0, 2, 0, 0, 4, 1, 0, 0, 0, 11, 13, 1, 1, 0, 0, 0, 0]' : 0.106241}
{'[5, 0, 2, 0, 0, 4, 1, 0, 0, 0, 11, 13, 1, 1, 0, 0, 0, 0]' : 0.106395}
{'[5, 0, 2, 0, 0, 4, 1, 0, 0, 0, 11, 13, 1, 1, 0, 0, 0, 0]' : 0.106412}
{'[5, 0, 2, 0, 0, 4, 1, 0, 0, 0, 11, 13, 1, 1, 0, 0, 0, 0]' : 0.106339}
{'[5, 0, 2, 0, 0, 4, 1, 0, 0, 0, 11, 13, 1, 1, 0, 0, 0, 0]' : 0.106251}
{'[5, 0, 2, 0, 0, 4, 1, 0, 0, 0, 11, 13, 1, 1, 0, 0, 0, 0]' : 0.106413}
{'[5, 0, 2, 0, 0, 4, 1, 0, 0, 0, 11, 13, 1, 1, 0, 0, 0, 0]' : 0.106799}
{'[5, 0, 2, 0, 0, 4, 1, 0, 0, 0, 11, 13, 1, 1, 0, 0, 0, 0]' : 0.106224}
{'[5, 0, 2, 0, 0, 4, 1, 0, 0, 0, 11, 13, 1, 1, 0, 0, 0, 0]' : 0.106299}
{'[5, 0, 2, 0, 0, 4, 1, 0, 0, 0, 11, 13, 1, 1, 0, 0, 0, 0]' : 0.106331}
{'[5, 0, 2, 0, 0, 4, 1, 0, 0, 0, 11, 13, 1, 1, 0, 0, 0, 0]' : 0.10635}

out:
 ["{'[5, 0, 2, 0, 0, 4, 1, 0, 0, 0, 11, 13, 1, 1, 0, 0, 0, 0]' : 0.10699}", "{'[5, 0, 2, 0, 0, 4, 1, 0, 0, 0, 11, 13, 1, 1, 0, 0, 0, 0]' : 0.108347}", "{'[5, 0, 2, 0, 0, 4, 1, 0, 0, 0, 11, 13, 1, 1, 0, 0, 0, 0]' : 0.106301}", "{'[5, 0, 2, 0, 0, 4, 1, 0, 0, 0, 11, 13, 1, 1, 0, 0, 0, 0]' : 0.106265}", "{'[5, 0, 2, 0, 0, 4, 1, 0, 0, 0, 11, 13, 1, 1, 0, 0, 0, 0]' : 0.106389}", "{'[5, 0, 2, 0, 0, 4, 1, 0, 0, 0, 11, 13, 1, 1, 0, 0, 0, 0]' : 0.106402}", "{'[5, 0, 2, 0, 0, 4, 1, 0, 0, 0, 11, 13, 1, 1, 0, 0, 0, 0]' : 0.106281}", "{'[5, 0, 2, 0, 0, 4, 1, 0, 0, 0, 11, 13, 1, 1, 0, 0, 0, 0]' : 0.10624}", "{'[5, 0, 2, 0, 0, 4, 1, 0, 0, 0, 11, 13, 1, 1, 0, 0, 0, 0]' : 0.10634}", "{'[5, 0, 2, 0, 0, 4, 1, 0, 0, 0, 11, 13, 1, 1, 0, 0, 0, 0]' : 0.106288}", "{'[5, 0, 2, 0, 0, 4, 1, 0, 0, 0, 11, 13, 1, 1, 0, 0, 0, 0]' : 0.106404}", "{'[5, 0, 2, 0, 0, 4, 1, 0, 0, 0, 11, 13, 1, 1, 0, 0, 0, 0]' : 0.106732}", "{'[5, 0, 2, 0, 0, 4, 1, 0, 0, 0, 11, 13, 1, 1, 0, 0, 0, 0]' : 0.106377}", "{'[5, 0, 2, 0, 0, 4, 1, 0, 0, 0, 11, 13, 1, 1, 0, 0, 0, 0]' : 0.106532}", "{'[5, 0, 2, 0, 0, 4, 1, 0, 0, 0, 11, 13, 1, 1, 0, 0, 0, 0]' : 0.106334}", "{'[5, 0, 2, 0, 0, 4, 1, 0, 0, 0, 11, 13, 1, 1, 0, 0, 0, 0]' : 0.106274}", "{'[5, 0, 2, 0, 0, 4, 1, 0, 0, 0, 11, 13, 1, 1, 0, 0, 0, 0]' : 0.106483}", "{'[5, 0, 2, 0, 0, 4, 1, 0, 0, 0, 11, 13, 1, 1, 0, 0, 0, 0]' : 0.106377}", "{'[5, 0, 2, 0, 0, 4, 1, 0, 0, 0, 11, 13, 1, 1, 0, 0, 0, 0]' : 0.106312}", "{'[5, 0, 2, 0, 0, 4, 1, 0, 0, 0, 11, 13, 1, 1, 0, 0, 0, 0]' : 0.106241}", "{'[5, 0, 2, 0, 0, 4, 1, 0, 0, 0, 11, 13, 1, 1, 0, 0, 0, 0]' : 0.106395}", "{'[5, 0, 2, 0, 0, 4, 1, 0, 0, 0, 11, 13, 1, 1, 0, 0, 0, 0]' : 0.106412}", "{'[5, 0, 2, 0, 0, 4, 1, 0, 0, 0, 11, 13, 1, 1, 0, 0, 0, 0]' : 0.106339}", "{'[5, 0, 2, 0, 0, 4, 1, 0, 0, 0, 11, 13, 1, 1, 0, 0, 0, 0]' : 0.106251}", "{'[5, 0, 2, 0, 0, 4, 1, 0, 0, 0, 11, 13, 1, 1, 0, 0, 0, 0]' : 0.106413}", "{'[5, 0, 2, 0, 0, 4, 1, 0, 0, 0, 11, 13, 1, 1, 0, 0, 0, 0]' : 0.106799}", "{'[5, 0, 2, 0, 0, 4, 1, 0, 0, 0, 11, 13, 1, 1, 0, 0, 0, 0]' : 0.106224}", "{'[5, 0, 2, 0, 0, 4, 1, 0, 0, 0, 11, 13, 1, 1, 0, 0, 0, 0]' : 0.106299}", "{'[5, 0, 2, 0, 0, 4, 1, 0, 0, 0, 11, 13, 1, 1, 0, 0, 0, 0]' : 0.106331}", "{'[5, 0, 2, 0, 0, 4, 1, 0, 0, 0, 11, 13, 1, 1, 0, 0, 0, 0]' : 0.10635}"]
returning from 'run': {'[5, 0, 2, 0, 0, 4, 1, 0, 0, 0, 11, 13, 1, 1, 0, 0, 0, 0]': ([0.10699, 0.108347, 0.106301, 0.106265, 0.106389, 0.106402, 0.106281, 0.10624, 0.10634, 0.106288, 0.106404, 0.106732, 0.106377, 0.106532, 0.106334, 0.106274, 0.106483, 0.106377, 0.106312, 0.106241, 0.106395, 0.106412, 0.106339, 0.106251, 0.106413, 0.106799, 0.106224, 0.106299, 0.106331, 0.10635], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 0, 2, 0, 0, 4, 1, 0, 0, 0, 11, 13, 1, 1, 0, 0, 0, 0]': ([0.10699, 0.108347, 0.106301, 0.106265, 0.106389, 0.106402, 0.106281, 0.10624, 0.10634, 0.106288, 0.106404, 0.106732, 0.106377, 0.106532, 0.106334, 0.106274, 0.106483, 0.106377, 0.106312, 0.106241, 0.106395, 0.106412, 0.106339, 0.106251, 0.106413, 0.106799, 0.106224, 0.106299, 0.106331, 0.10635], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	48
        Max loop nest depth: 	6
        Additions: 		2099
        Multiplications: 	972
        Divisions: 		0
        Logical: 		0
        Reads: 			4360
        Writes: 		789
        Comparisons:		48
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest25.exe __orio_perftest25.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest25.exe  
Program Test Output: 
{'[3, 1, 6, 2, 6, 0, 1, 0, 1, 20, 0, 6, 2, 0, 0, 1, 0, 0]' : 0.201404}
{'[3, 1, 6, 2, 6, 0, 1, 0, 1, 20, 0, 6, 2, 0, 0, 1, 0, 0]' : 0.200819}
{'[3, 1, 6, 2, 6, 0, 1, 0, 1, 20, 0, 6, 2, 0, 0, 1, 0, 0]' : 0.201313}
{'[3, 1, 6, 2, 6, 0, 1, 0, 1, 20, 0, 6, 2, 0, 0, 1, 0, 0]' : 0.200764}
{'[3, 1, 6, 2, 6, 0, 1, 0, 1, 20, 0, 6, 2, 0, 0, 1, 0, 0]' : 0.200697}
{'[3, 1, 6, 2, 6, 0, 1, 0, 1, 20, 0, 6, 2, 0, 0, 1, 0, 0]' : 0.200641}
{'[3, 1, 6, 2, 6, 0, 1, 0, 1, 20, 0, 6, 2, 0, 0, 1, 0, 0]' : 0.200812}
{'[3, 1, 6, 2, 6, 0, 1, 0, 1, 20, 0, 6, 2, 0, 0, 1, 0, 0]' : 0.200989}
{'[3, 1, 6, 2, 6, 0, 1, 0, 1, 20, 0, 6, 2, 0, 0, 1, 0, 0]' : 0.200626}
{'[3, 1, 6, 2, 6, 0, 1, 0, 1, 20, 0, 6, 2, 0, 0, 1, 0, 0]' : 0.200766}
{'[3, 1, 6, 2, 6, 0, 1, 0, 1, 20, 0, 6, 2, 0, 0, 1, 0, 0]' : 0.201083}
{'[3, 1, 6, 2, 6, 0, 1, 0, 1, 20, 0, 6, 2, 0, 0, 1, 0, 0]' : 0.200905}
{'[3, 1, 6, 2, 6, 0, 1, 0, 1, 20, 0, 6, 2, 0, 0, 1, 0, 0]' : 0.20069}
{'[3, 1, 6, 2, 6, 0, 1, 0, 1, 20, 0, 6, 2, 0, 0, 1, 0, 0]' : 0.200487}
{'[3, 1, 6, 2, 6, 0, 1, 0, 1, 20, 0, 6, 2, 0, 0, 1, 0, 0]' : 0.200759}
{'[3, 1, 6, 2, 6, 0, 1, 0, 1, 20, 0, 6, 2, 0, 0, 1, 0, 0]' : 0.200944}
{'[3, 1, 6, 2, 6, 0, 1, 0, 1, 20, 0, 6, 2, 0, 0, 1, 0, 0]' : 0.200706}
{'[3, 1, 6, 2, 6, 0, 1, 0, 1, 20, 0, 6, 2, 0, 0, 1, 0, 0]' : 0.201308}
{'[3, 1, 6, 2, 6, 0, 1, 0, 1, 20, 0, 6, 2, 0, 0, 1, 0, 0]' : 0.200911}
{'[3, 1, 6, 2, 6, 0, 1, 0, 1, 20, 0, 6, 2, 0, 0, 1, 0, 0]' : 0.200695}
{'[3, 1, 6, 2, 6, 0, 1, 0, 1, 20, 0, 6, 2, 0, 0, 1, 0, 0]' : 0.201036}
{'[3, 1, 6, 2, 6, 0, 1, 0, 1, 20, 0, 6, 2, 0, 0, 1, 0, 0]' : 0.200928}
{'[3, 1, 6, 2, 6, 0, 1, 0, 1, 20, 0, 6, 2, 0, 0, 1, 0, 0]' : 0.200949}
{'[3, 1, 6, 2, 6, 0, 1, 0, 1, 20, 0, 6, 2, 0, 0, 1, 0, 0]' : 0.200723}
{'[3, 1, 6, 2, 6, 0, 1, 0, 1, 20, 0, 6, 2, 0, 0, 1, 0, 0]' : 0.200678}
{'[3, 1, 6, 2, 6, 0, 1, 0, 1, 20, 0, 6, 2, 0, 0, 1, 0, 0]' : 0.20154}
{'[3, 1, 6, 2, 6, 0, 1, 0, 1, 20, 0, 6, 2, 0, 0, 1, 0, 0]' : 0.200631}
{'[3, 1, 6, 2, 6, 0, 1, 0, 1, 20, 0, 6, 2, 0, 0, 1, 0, 0]' : 0.201235}
{'[3, 1, 6, 2, 6, 0, 1, 0, 1, 20, 0, 6, 2, 0, 0, 1, 0, 0]' : 0.200541}
{'[3, 1, 6, 2, 6, 0, 1, 0, 1, 20, 0, 6, 2, 0, 0, 1, 0, 0]' : 0.200747}

out:
 ["{'[3, 1, 6, 2, 6, 0, 1, 0, 1, 20, 0, 6, 2, 0, 0, 1, 0, 0]' : 0.201404}", "{'[3, 1, 6, 2, 6, 0, 1, 0, 1, 20, 0, 6, 2, 0, 0, 1, 0, 0]' : 0.200819}", "{'[3, 1, 6, 2, 6, 0, 1, 0, 1, 20, 0, 6, 2, 0, 0, 1, 0, 0]' : 0.201313}", "{'[3, 1, 6, 2, 6, 0, 1, 0, 1, 20, 0, 6, 2, 0, 0, 1, 0, 0]' : 0.200764}", "{'[3, 1, 6, 2, 6, 0, 1, 0, 1, 20, 0, 6, 2, 0, 0, 1, 0, 0]' : 0.200697}", "{'[3, 1, 6, 2, 6, 0, 1, 0, 1, 20, 0, 6, 2, 0, 0, 1, 0, 0]' : 0.200641}", "{'[3, 1, 6, 2, 6, 0, 1, 0, 1, 20, 0, 6, 2, 0, 0, 1, 0, 0]' : 0.200812}", "{'[3, 1, 6, 2, 6, 0, 1, 0, 1, 20, 0, 6, 2, 0, 0, 1, 0, 0]' : 0.200989}", "{'[3, 1, 6, 2, 6, 0, 1, 0, 1, 20, 0, 6, 2, 0, 0, 1, 0, 0]' : 0.200626}", "{'[3, 1, 6, 2, 6, 0, 1, 0, 1, 20, 0, 6, 2, 0, 0, 1, 0, 0]' : 0.200766}", "{'[3, 1, 6, 2, 6, 0, 1, 0, 1, 20, 0, 6, 2, 0, 0, 1, 0, 0]' : 0.201083}", "{'[3, 1, 6, 2, 6, 0, 1, 0, 1, 20, 0, 6, 2, 0, 0, 1, 0, 0]' : 0.200905}", "{'[3, 1, 6, 2, 6, 0, 1, 0, 1, 20, 0, 6, 2, 0, 0, 1, 0, 0]' : 0.20069}", "{'[3, 1, 6, 2, 6, 0, 1, 0, 1, 20, 0, 6, 2, 0, 0, 1, 0, 0]' : 0.200487}", "{'[3, 1, 6, 2, 6, 0, 1, 0, 1, 20, 0, 6, 2, 0, 0, 1, 0, 0]' : 0.200759}", "{'[3, 1, 6, 2, 6, 0, 1, 0, 1, 20, 0, 6, 2, 0, 0, 1, 0, 0]' : 0.200944}", "{'[3, 1, 6, 2, 6, 0, 1, 0, 1, 20, 0, 6, 2, 0, 0, 1, 0, 0]' : 0.200706}", "{'[3, 1, 6, 2, 6, 0, 1, 0, 1, 20, 0, 6, 2, 0, 0, 1, 0, 0]' : 0.201308}", "{'[3, 1, 6, 2, 6, 0, 1, 0, 1, 20, 0, 6, 2, 0, 0, 1, 0, 0]' : 0.200911}", "{'[3, 1, 6, 2, 6, 0, 1, 0, 1, 20, 0, 6, 2, 0, 0, 1, 0, 0]' : 0.200695}", "{'[3, 1, 6, 2, 6, 0, 1, 0, 1, 20, 0, 6, 2, 0, 0, 1, 0, 0]' : 0.201036}", "{'[3, 1, 6, 2, 6, 0, 1, 0, 1, 20, 0, 6, 2, 0, 0, 1, 0, 0]' : 0.200928}", "{'[3, 1, 6, 2, 6, 0, 1, 0, 1, 20, 0, 6, 2, 0, 0, 1, 0, 0]' : 0.200949}", "{'[3, 1, 6, 2, 6, 0, 1, 0, 1, 20, 0, 6, 2, 0, 0, 1, 0, 0]' : 0.200723}", "{'[3, 1, 6, 2, 6, 0, 1, 0, 1, 20, 0, 6, 2, 0, 0, 1, 0, 0]' : 0.200678}", "{'[3, 1, 6, 2, 6, 0, 1, 0, 1, 20, 0, 6, 2, 0, 0, 1, 0, 0]' : 0.20154}", "{'[3, 1, 6, 2, 6, 0, 1, 0, 1, 20, 0, 6, 2, 0, 0, 1, 0, 0]' : 0.200631}", "{'[3, 1, 6, 2, 6, 0, 1, 0, 1, 20, 0, 6, 2, 0, 0, 1, 0, 0]' : 0.201235}", "{'[3, 1, 6, 2, 6, 0, 1, 0, 1, 20, 0, 6, 2, 0, 0, 1, 0, 0]' : 0.200541}", "{'[3, 1, 6, 2, 6, 0, 1, 0, 1, 20, 0, 6, 2, 0, 0, 1, 0, 0]' : 0.200747}"]
returning from 'run': {'[3, 1, 6, 2, 6, 0, 1, 0, 1, 20, 0, 6, 2, 0, 0, 1, 0, 0]': ([0.201404, 0.200819, 0.201313, 0.200764, 0.200697, 0.200641, 0.200812, 0.200989, 0.200626, 0.200766, 0.201083, 0.200905, 0.20069, 0.200487, 0.200759, 0.200944, 0.200706, 0.201308, 0.200911, 0.200695, 0.201036, 0.200928, 0.200949, 0.200723, 0.200678, 0.20154, 0.200631, 0.201235, 0.200541, 0.200747], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 1, 6, 2, 6, 0, 1, 0, 1, 20, 0, 6, 2, 0, 0, 1, 0, 0]': ([0.201404, 0.200819, 0.201313, 0.200764, 0.200697, 0.200641, 0.200812, 0.200989, 0.200626, 0.200766, 0.201083, 0.200905, 0.20069, 0.200487, 0.200759, 0.200944, 0.200706, 0.201308, 0.200911, 0.200695, 0.201036, 0.200928, 0.200949, 0.200723, 0.200678, 0.20154, 0.200631, 0.201235, 0.200541, 0.200747], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	30
        Max loop nest depth: 	5
        Additions: 		914
        Multiplications: 	234
        Divisions: 		0
        Logical: 		0
        Reads: 			1572
        Writes: 		218
        Comparisons:		30
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest26.exe __orio_perftest26.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest26.exe  
Program Test Output: 
{'[0, 3, 3, 6, 3, 3, 1, 0, 27, 3, 7, 0, 1, 1, 0, 0, 0, 0]' : 0.105096}
{'[0, 3, 3, 6, 3, 3, 1, 0, 27, 3, 7, 0, 1, 1, 0, 0, 0, 0]' : 0.104752}
{'[0, 3, 3, 6, 3, 3, 1, 0, 27, 3, 7, 0, 1, 1, 0, 0, 0, 0]' : 0.104672}
{'[0, 3, 3, 6, 3, 3, 1, 0, 27, 3, 7, 0, 1, 1, 0, 0, 0, 0]' : 0.104537}
{'[0, 3, 3, 6, 3, 3, 1, 0, 27, 3, 7, 0, 1, 1, 0, 0, 0, 0]' : 0.105155}
{'[0, 3, 3, 6, 3, 3, 1, 0, 27, 3, 7, 0, 1, 1, 0, 0, 0, 0]' : 0.104823}
{'[0, 3, 3, 6, 3, 3, 1, 0, 27, 3, 7, 0, 1, 1, 0, 0, 0, 0]' : 0.104709}
{'[0, 3, 3, 6, 3, 3, 1, 0, 27, 3, 7, 0, 1, 1, 0, 0, 0, 0]' : 0.104682}
{'[0, 3, 3, 6, 3, 3, 1, 0, 27, 3, 7, 0, 1, 1, 0, 0, 0, 0]' : 0.104722}
{'[0, 3, 3, 6, 3, 3, 1, 0, 27, 3, 7, 0, 1, 1, 0, 0, 0, 0]' : 0.104789}
{'[0, 3, 3, 6, 3, 3, 1, 0, 27, 3, 7, 0, 1, 1, 0, 0, 0, 0]' : 0.104568}
{'[0, 3, 3, 6, 3, 3, 1, 0, 27, 3, 7, 0, 1, 1, 0, 0, 0, 0]' : 0.104554}
{'[0, 3, 3, 6, 3, 3, 1, 0, 27, 3, 7, 0, 1, 1, 0, 0, 0, 0]' : 0.104774}
{'[0, 3, 3, 6, 3, 3, 1, 0, 27, 3, 7, 0, 1, 1, 0, 0, 0, 0]' : 0.104783}
{'[0, 3, 3, 6, 3, 3, 1, 0, 27, 3, 7, 0, 1, 1, 0, 0, 0, 0]' : 0.104699}
{'[0, 3, 3, 6, 3, 3, 1, 0, 27, 3, 7, 0, 1, 1, 0, 0, 0, 0]' : 0.104565}
{'[0, 3, 3, 6, 3, 3, 1, 0, 27, 3, 7, 0, 1, 1, 0, 0, 0, 0]' : 0.104797}
{'[0, 3, 3, 6, 3, 3, 1, 0, 27, 3, 7, 0, 1, 1, 0, 0, 0, 0]' : 0.104847}
{'[0, 3, 3, 6, 3, 3, 1, 0, 27, 3, 7, 0, 1, 1, 0, 0, 0, 0]' : 0.104792}
{'[0, 3, 3, 6, 3, 3, 1, 0, 27, 3, 7, 0, 1, 1, 0, 0, 0, 0]' : 0.104982}
{'[0, 3, 3, 6, 3, 3, 1, 0, 27, 3, 7, 0, 1, 1, 0, 0, 0, 0]' : 0.104715}
{'[0, 3, 3, 6, 3, 3, 1, 0, 27, 3, 7, 0, 1, 1, 0, 0, 0, 0]' : 0.104848}
{'[0, 3, 3, 6, 3, 3, 1, 0, 27, 3, 7, 0, 1, 1, 0, 0, 0, 0]' : 0.104631}
{'[0, 3, 3, 6, 3, 3, 1, 0, 27, 3, 7, 0, 1, 1, 0, 0, 0, 0]' : 0.104516}
{'[0, 3, 3, 6, 3, 3, 1, 0, 27, 3, 7, 0, 1, 1, 0, 0, 0, 0]' : 0.104698}
{'[0, 3, 3, 6, 3, 3, 1, 0, 27, 3, 7, 0, 1, 1, 0, 0, 0, 0]' : 0.104769}
{'[0, 3, 3, 6, 3, 3, 1, 0, 27, 3, 7, 0, 1, 1, 0, 0, 0, 0]' : 0.104649}
{'[0, 3, 3, 6, 3, 3, 1, 0, 27, 3, 7, 0, 1, 1, 0, 0, 0, 0]' : 0.104675}
{'[0, 3, 3, 6, 3, 3, 1, 0, 27, 3, 7, 0, 1, 1, 0, 0, 0, 0]' : 0.10469}
{'[0, 3, 3, 6, 3, 3, 1, 0, 27, 3, 7, 0, 1, 1, 0, 0, 0, 0]' : 0.104883}

out:
 ["{'[0, 3, 3, 6, 3, 3, 1, 0, 27, 3, 7, 0, 1, 1, 0, 0, 0, 0]' : 0.105096}", "{'[0, 3, 3, 6, 3, 3, 1, 0, 27, 3, 7, 0, 1, 1, 0, 0, 0, 0]' : 0.104752}", "{'[0, 3, 3, 6, 3, 3, 1, 0, 27, 3, 7, 0, 1, 1, 0, 0, 0, 0]' : 0.104672}", "{'[0, 3, 3, 6, 3, 3, 1, 0, 27, 3, 7, 0, 1, 1, 0, 0, 0, 0]' : 0.104537}", "{'[0, 3, 3, 6, 3, 3, 1, 0, 27, 3, 7, 0, 1, 1, 0, 0, 0, 0]' : 0.105155}", "{'[0, 3, 3, 6, 3, 3, 1, 0, 27, 3, 7, 0, 1, 1, 0, 0, 0, 0]' : 0.104823}", "{'[0, 3, 3, 6, 3, 3, 1, 0, 27, 3, 7, 0, 1, 1, 0, 0, 0, 0]' : 0.104709}", "{'[0, 3, 3, 6, 3, 3, 1, 0, 27, 3, 7, 0, 1, 1, 0, 0, 0, 0]' : 0.104682}", "{'[0, 3, 3, 6, 3, 3, 1, 0, 27, 3, 7, 0, 1, 1, 0, 0, 0, 0]' : 0.104722}", "{'[0, 3, 3, 6, 3, 3, 1, 0, 27, 3, 7, 0, 1, 1, 0, 0, 0, 0]' : 0.104789}", "{'[0, 3, 3, 6, 3, 3, 1, 0, 27, 3, 7, 0, 1, 1, 0, 0, 0, 0]' : 0.104568}", "{'[0, 3, 3, 6, 3, 3, 1, 0, 27, 3, 7, 0, 1, 1, 0, 0, 0, 0]' : 0.104554}", "{'[0, 3, 3, 6, 3, 3, 1, 0, 27, 3, 7, 0, 1, 1, 0, 0, 0, 0]' : 0.104774}", "{'[0, 3, 3, 6, 3, 3, 1, 0, 27, 3, 7, 0, 1, 1, 0, 0, 0, 0]' : 0.104783}", "{'[0, 3, 3, 6, 3, 3, 1, 0, 27, 3, 7, 0, 1, 1, 0, 0, 0, 0]' : 0.104699}", "{'[0, 3, 3, 6, 3, 3, 1, 0, 27, 3, 7, 0, 1, 1, 0, 0, 0, 0]' : 0.104565}", "{'[0, 3, 3, 6, 3, 3, 1, 0, 27, 3, 7, 0, 1, 1, 0, 0, 0, 0]' : 0.104797}", "{'[0, 3, 3, 6, 3, 3, 1, 0, 27, 3, 7, 0, 1, 1, 0, 0, 0, 0]' : 0.104847}", "{'[0, 3, 3, 6, 3, 3, 1, 0, 27, 3, 7, 0, 1, 1, 0, 0, 0, 0]' : 0.104792}", "{'[0, 3, 3, 6, 3, 3, 1, 0, 27, 3, 7, 0, 1, 1, 0, 0, 0, 0]' : 0.104982}", "{'[0, 3, 3, 6, 3, 3, 1, 0, 27, 3, 7, 0, 1, 1, 0, 0, 0, 0]' : 0.104715}", "{'[0, 3, 3, 6, 3, 3, 1, 0, 27, 3, 7, 0, 1, 1, 0, 0, 0, 0]' : 0.104848}", "{'[0, 3, 3, 6, 3, 3, 1, 0, 27, 3, 7, 0, 1, 1, 0, 0, 0, 0]' : 0.104631}", "{'[0, 3, 3, 6, 3, 3, 1, 0, 27, 3, 7, 0, 1, 1, 0, 0, 0, 0]' : 0.104516}", "{'[0, 3, 3, 6, 3, 3, 1, 0, 27, 3, 7, 0, 1, 1, 0, 0, 0, 0]' : 0.104698}", "{'[0, 3, 3, 6, 3, 3, 1, 0, 27, 3, 7, 0, 1, 1, 0, 0, 0, 0]' : 0.104769}", "{'[0, 3, 3, 6, 3, 3, 1, 0, 27, 3, 7, 0, 1, 1, 0, 0, 0, 0]' : 0.104649}", "{'[0, 3, 3, 6, 3, 3, 1, 0, 27, 3, 7, 0, 1, 1, 0, 0, 0, 0]' : 0.104675}", "{'[0, 3, 3, 6, 3, 3, 1, 0, 27, 3, 7, 0, 1, 1, 0, 0, 0, 0]' : 0.10469}", "{'[0, 3, 3, 6, 3, 3, 1, 0, 27, 3, 7, 0, 1, 1, 0, 0, 0, 0]' : 0.104883}"]
returning from 'run': {'[0, 3, 3, 6, 3, 3, 1, 0, 27, 3, 7, 0, 1, 1, 0, 0, 0, 0]': ([0.105096, 0.104752, 0.104672, 0.104537, 0.105155, 0.104823, 0.104709, 0.104682, 0.104722, 0.104789, 0.104568, 0.104554, 0.104774, 0.104783, 0.104699, 0.104565, 0.104797, 0.104847, 0.104792, 0.104982, 0.104715, 0.104848, 0.104631, 0.104516, 0.104698, 0.104769, 0.104649, 0.104675, 0.10469, 0.104883], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 3, 3, 6, 3, 3, 1, 0, 27, 3, 7, 0, 1, 1, 0, 0, 0, 0]': ([0.105096, 0.104752, 0.104672, 0.104537, 0.105155, 0.104823, 0.104709, 0.104682, 0.104722, 0.104789, 0.104568, 0.104554, 0.104774, 0.104783, 0.104699, 0.104565, 0.104797, 0.104847, 0.104792, 0.104982, 0.104715, 0.104848, 0.104631, 0.104516, 0.104698, 0.104769, 0.104649, 0.104675, 0.10469, 0.104883], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		262
        Multiplications: 	80
        Divisions: 		0
        Logical: 		0
        Reads: 			586
        Writes: 		100
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest27.exe __orio_perftest27.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest27.exe  
Program Test Output: 
{'[0, 4, 2, 1, 4, 0, 0, 1, 24, 0, 21, 7, 0, 1, 0, 0, 1, 0]' : 0.220374}
{'[0, 4, 2, 1, 4, 0, 0, 1, 24, 0, 21, 7, 0, 1, 0, 0, 1, 0]' : 0.220241}
{'[0, 4, 2, 1, 4, 0, 0, 1, 24, 0, 21, 7, 0, 1, 0, 0, 1, 0]' : 0.220293}
{'[0, 4, 2, 1, 4, 0, 0, 1, 24, 0, 21, 7, 0, 1, 0, 0, 1, 0]' : 0.220554}
{'[0, 4, 2, 1, 4, 0, 0, 1, 24, 0, 21, 7, 0, 1, 0, 0, 1, 0]' : 0.220157}
{'[0, 4, 2, 1, 4, 0, 0, 1, 24, 0, 21, 7, 0, 1, 0, 0, 1, 0]' : 0.220236}
{'[0, 4, 2, 1, 4, 0, 0, 1, 24, 0, 21, 7, 0, 1, 0, 0, 1, 0]' : 0.220272}
{'[0, 4, 2, 1, 4, 0, 0, 1, 24, 0, 21, 7, 0, 1, 0, 0, 1, 0]' : 0.220264}
{'[0, 4, 2, 1, 4, 0, 0, 1, 24, 0, 21, 7, 0, 1, 0, 0, 1, 0]' : 0.220156}
{'[0, 4, 2, 1, 4, 0, 0, 1, 24, 0, 21, 7, 0, 1, 0, 0, 1, 0]' : 0.220217}
{'[0, 4, 2, 1, 4, 0, 0, 1, 24, 0, 21, 7, 0, 1, 0, 0, 1, 0]' : 0.220359}
{'[0, 4, 2, 1, 4, 0, 0, 1, 24, 0, 21, 7, 0, 1, 0, 0, 1, 0]' : 0.22024}
{'[0, 4, 2, 1, 4, 0, 0, 1, 24, 0, 21, 7, 0, 1, 0, 0, 1, 0]' : 0.22021}
{'[0, 4, 2, 1, 4, 0, 0, 1, 24, 0, 21, 7, 0, 1, 0, 0, 1, 0]' : 0.220203}
{'[0, 4, 2, 1, 4, 0, 0, 1, 24, 0, 21, 7, 0, 1, 0, 0, 1, 0]' : 0.220246}
{'[0, 4, 2, 1, 4, 0, 0, 1, 24, 0, 21, 7, 0, 1, 0, 0, 1, 0]' : 0.220172}
{'[0, 4, 2, 1, 4, 0, 0, 1, 24, 0, 21, 7, 0, 1, 0, 0, 1, 0]' : 0.220321}
{'[0, 4, 2, 1, 4, 0, 0, 1, 24, 0, 21, 7, 0, 1, 0, 0, 1, 0]' : 0.220411}
{'[0, 4, 2, 1, 4, 0, 0, 1, 24, 0, 21, 7, 0, 1, 0, 0, 1, 0]' : 0.220107}
{'[0, 4, 2, 1, 4, 0, 0, 1, 24, 0, 21, 7, 0, 1, 0, 0, 1, 0]' : 0.220334}
{'[0, 4, 2, 1, 4, 0, 0, 1, 24, 0, 21, 7, 0, 1, 0, 0, 1, 0]' : 0.220208}
{'[0, 4, 2, 1, 4, 0, 0, 1, 24, 0, 21, 7, 0, 1, 0, 0, 1, 0]' : 0.220225}
{'[0, 4, 2, 1, 4, 0, 0, 1, 24, 0, 21, 7, 0, 1, 0, 0, 1, 0]' : 0.22014}
{'[0, 4, 2, 1, 4, 0, 0, 1, 24, 0, 21, 7, 0, 1, 0, 0, 1, 0]' : 0.220198}
{'[0, 4, 2, 1, 4, 0, 0, 1, 24, 0, 21, 7, 0, 1, 0, 0, 1, 0]' : 0.220595}
{'[0, 4, 2, 1, 4, 0, 0, 1, 24, 0, 21, 7, 0, 1, 0, 0, 1, 0]' : 0.220201}
{'[0, 4, 2, 1, 4, 0, 0, 1, 24, 0, 21, 7, 0, 1, 0, 0, 1, 0]' : 0.220187}
{'[0, 4, 2, 1, 4, 0, 0, 1, 24, 0, 21, 7, 0, 1, 0, 0, 1, 0]' : 0.220202}
{'[0, 4, 2, 1, 4, 0, 0, 1, 24, 0, 21, 7, 0, 1, 0, 0, 1, 0]' : 0.220199}
{'[0, 4, 2, 1, 4, 0, 0, 1, 24, 0, 21, 7, 0, 1, 0, 0, 1, 0]' : 0.220134}

out:
 ["{'[0, 4, 2, 1, 4, 0, 0, 1, 24, 0, 21, 7, 0, 1, 0, 0, 1, 0]' : 0.220374}", "{'[0, 4, 2, 1, 4, 0, 0, 1, 24, 0, 21, 7, 0, 1, 0, 0, 1, 0]' : 0.220241}", "{'[0, 4, 2, 1, 4, 0, 0, 1, 24, 0, 21, 7, 0, 1, 0, 0, 1, 0]' : 0.220293}", "{'[0, 4, 2, 1, 4, 0, 0, 1, 24, 0, 21, 7, 0, 1, 0, 0, 1, 0]' : 0.220554}", "{'[0, 4, 2, 1, 4, 0, 0, 1, 24, 0, 21, 7, 0, 1, 0, 0, 1, 0]' : 0.220157}", "{'[0, 4, 2, 1, 4, 0, 0, 1, 24, 0, 21, 7, 0, 1, 0, 0, 1, 0]' : 0.220236}", "{'[0, 4, 2, 1, 4, 0, 0, 1, 24, 0, 21, 7, 0, 1, 0, 0, 1, 0]' : 0.220272}", "{'[0, 4, 2, 1, 4, 0, 0, 1, 24, 0, 21, 7, 0, 1, 0, 0, 1, 0]' : 0.220264}", "{'[0, 4, 2, 1, 4, 0, 0, 1, 24, 0, 21, 7, 0, 1, 0, 0, 1, 0]' : 0.220156}", "{'[0, 4, 2, 1, 4, 0, 0, 1, 24, 0, 21, 7, 0, 1, 0, 0, 1, 0]' : 0.220217}", "{'[0, 4, 2, 1, 4, 0, 0, 1, 24, 0, 21, 7, 0, 1, 0, 0, 1, 0]' : 0.220359}", "{'[0, 4, 2, 1, 4, 0, 0, 1, 24, 0, 21, 7, 0, 1, 0, 0, 1, 0]' : 0.22024}", "{'[0, 4, 2, 1, 4, 0, 0, 1, 24, 0, 21, 7, 0, 1, 0, 0, 1, 0]' : 0.22021}", "{'[0, 4, 2, 1, 4, 0, 0, 1, 24, 0, 21, 7, 0, 1, 0, 0, 1, 0]' : 0.220203}", "{'[0, 4, 2, 1, 4, 0, 0, 1, 24, 0, 21, 7, 0, 1, 0, 0, 1, 0]' : 0.220246}", "{'[0, 4, 2, 1, 4, 0, 0, 1, 24, 0, 21, 7, 0, 1, 0, 0, 1, 0]' : 0.220172}", "{'[0, 4, 2, 1, 4, 0, 0, 1, 24, 0, 21, 7, 0, 1, 0, 0, 1, 0]' : 0.220321}", "{'[0, 4, 2, 1, 4, 0, 0, 1, 24, 0, 21, 7, 0, 1, 0, 0, 1, 0]' : 0.220411}", "{'[0, 4, 2, 1, 4, 0, 0, 1, 24, 0, 21, 7, 0, 1, 0, 0, 1, 0]' : 0.220107}", "{'[0, 4, 2, 1, 4, 0, 0, 1, 24, 0, 21, 7, 0, 1, 0, 0, 1, 0]' : 0.220334}", "{'[0, 4, 2, 1, 4, 0, 0, 1, 24, 0, 21, 7, 0, 1, 0, 0, 1, 0]' : 0.220208}", "{'[0, 4, 2, 1, 4, 0, 0, 1, 24, 0, 21, 7, 0, 1, 0, 0, 1, 0]' : 0.220225}", "{'[0, 4, 2, 1, 4, 0, 0, 1, 24, 0, 21, 7, 0, 1, 0, 0, 1, 0]' : 0.22014}", "{'[0, 4, 2, 1, 4, 0, 0, 1, 24, 0, 21, 7, 0, 1, 0, 0, 1, 0]' : 0.220198}", "{'[0, 4, 2, 1, 4, 0, 0, 1, 24, 0, 21, 7, 0, 1, 0, 0, 1, 0]' : 0.220595}", "{'[0, 4, 2, 1, 4, 0, 0, 1, 24, 0, 21, 7, 0, 1, 0, 0, 1, 0]' : 0.220201}", "{'[0, 4, 2, 1, 4, 0, 0, 1, 24, 0, 21, 7, 0, 1, 0, 0, 1, 0]' : 0.220187}", "{'[0, 4, 2, 1, 4, 0, 0, 1, 24, 0, 21, 7, 0, 1, 0, 0, 1, 0]' : 0.220202}", "{'[0, 4, 2, 1, 4, 0, 0, 1, 24, 0, 21, 7, 0, 1, 0, 0, 1, 0]' : 0.220199}", "{'[0, 4, 2, 1, 4, 0, 0, 1, 24, 0, 21, 7, 0, 1, 0, 0, 1, 0]' : 0.220134}"]
returning from 'run': {'[0, 4, 2, 1, 4, 0, 0, 1, 24, 0, 21, 7, 0, 1, 0, 0, 1, 0]': ([0.220374, 0.220241, 0.220293, 0.220554, 0.220157, 0.220236, 0.220272, 0.220264, 0.220156, 0.220217, 0.220359, 0.22024, 0.22021, 0.220203, 0.220246, 0.220172, 0.220321, 0.220411, 0.220107, 0.220334, 0.220208, 0.220225, 0.22014, 0.220198, 0.220595, 0.220201, 0.220187, 0.220202, 0.220199, 0.220134], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 4, 2, 1, 4, 0, 0, 1, 24, 0, 21, 7, 0, 1, 0, 0, 1, 0]': ([0.220374, 0.220241, 0.220293, 0.220554, 0.220157, 0.220236, 0.220272, 0.220264, 0.220156, 0.220217, 0.220359, 0.22024, 0.22021, 0.220203, 0.220246, 0.220172, 0.220321, 0.220411, 0.220107, 0.220334, 0.220208, 0.220225, 0.22014, 0.220198, 0.220595, 0.220201, 0.220187, 0.220202, 0.220199, 0.220134], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		345
        Multiplications: 	114
        Divisions: 		0
        Logical: 		0
        Reads: 			717
        Writes: 		111
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest28.exe __orio_perftest28.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest28.exe  
Program Test Output: 
{'[3, 2, 5, 0, 4, 5, 0, 0, 25, 0, 8, 13, 0, 0, 2, 0, 0, 0]' : 0.164243}
{'[3, 2, 5, 0, 4, 5, 0, 0, 25, 0, 8, 13, 0, 0, 2, 0, 0, 0]' : 0.163718}
{'[3, 2, 5, 0, 4, 5, 0, 0, 25, 0, 8, 13, 0, 0, 2, 0, 0, 0]' : 0.163671}
{'[3, 2, 5, 0, 4, 5, 0, 0, 25, 0, 8, 13, 0, 0, 2, 0, 0, 0]' : 0.164021}
{'[3, 2, 5, 0, 4, 5, 0, 0, 25, 0, 8, 13, 0, 0, 2, 0, 0, 0]' : 0.163667}
{'[3, 2, 5, 0, 4, 5, 0, 0, 25, 0, 8, 13, 0, 0, 2, 0, 0, 0]' : 0.163699}
{'[3, 2, 5, 0, 4, 5, 0, 0, 25, 0, 8, 13, 0, 0, 2, 0, 0, 0]' : 0.163745}
{'[3, 2, 5, 0, 4, 5, 0, 0, 25, 0, 8, 13, 0, 0, 2, 0, 0, 0]' : 0.163857}
{'[3, 2, 5, 0, 4, 5, 0, 0, 25, 0, 8, 13, 0, 0, 2, 0, 0, 0]' : 0.164106}
{'[3, 2, 5, 0, 4, 5, 0, 0, 25, 0, 8, 13, 0, 0, 2, 0, 0, 0]' : 0.163739}
{'[3, 2, 5, 0, 4, 5, 0, 0, 25, 0, 8, 13, 0, 0, 2, 0, 0, 0]' : 0.16376}
{'[3, 2, 5, 0, 4, 5, 0, 0, 25, 0, 8, 13, 0, 0, 2, 0, 0, 0]' : 0.163713}
{'[3, 2, 5, 0, 4, 5, 0, 0, 25, 0, 8, 13, 0, 0, 2, 0, 0, 0]' : 0.163903}
{'[3, 2, 5, 0, 4, 5, 0, 0, 25, 0, 8, 13, 0, 0, 2, 0, 0, 0]' : 0.163652}
{'[3, 2, 5, 0, 4, 5, 0, 0, 25, 0, 8, 13, 0, 0, 2, 0, 0, 0]' : 0.163779}
{'[3, 2, 5, 0, 4, 5, 0, 0, 25, 0, 8, 13, 0, 0, 2, 0, 0, 0]' : 0.16367}
{'[3, 2, 5, 0, 4, 5, 0, 0, 25, 0, 8, 13, 0, 0, 2, 0, 0, 0]' : 0.163552}
{'[3, 2, 5, 0, 4, 5, 0, 0, 25, 0, 8, 13, 0, 0, 2, 0, 0, 0]' : 0.163753}
{'[3, 2, 5, 0, 4, 5, 0, 0, 25, 0, 8, 13, 0, 0, 2, 0, 0, 0]' : 0.163625}
{'[3, 2, 5, 0, 4, 5, 0, 0, 25, 0, 8, 13, 0, 0, 2, 0, 0, 0]' : 0.164141}
{'[3, 2, 5, 0, 4, 5, 0, 0, 25, 0, 8, 13, 0, 0, 2, 0, 0, 0]' : 0.163701}
{'[3, 2, 5, 0, 4, 5, 0, 0, 25, 0, 8, 13, 0, 0, 2, 0, 0, 0]' : 0.163847}
{'[3, 2, 5, 0, 4, 5, 0, 0, 25, 0, 8, 13, 0, 0, 2, 0, 0, 0]' : 0.163801}
{'[3, 2, 5, 0, 4, 5, 0, 0, 25, 0, 8, 13, 0, 0, 2, 0, 0, 0]' : 0.163905}
{'[3, 2, 5, 0, 4, 5, 0, 0, 25, 0, 8, 13, 0, 0, 2, 0, 0, 0]' : 0.163778}
{'[3, 2, 5, 0, 4, 5, 0, 0, 25, 0, 8, 13, 0, 0, 2, 0, 0, 0]' : 0.163751}
{'[3, 2, 5, 0, 4, 5, 0, 0, 25, 0, 8, 13, 0, 0, 2, 0, 0, 0]' : 0.163544}
{'[3, 2, 5, 0, 4, 5, 0, 0, 25, 0, 8, 13, 0, 0, 2, 0, 0, 0]' : 0.163685}
{'[3, 2, 5, 0, 4, 5, 0, 0, 25, 0, 8, 13, 0, 0, 2, 0, 0, 0]' : 0.163624}
{'[3, 2, 5, 0, 4, 5, 0, 0, 25, 0, 8, 13, 0, 0, 2, 0, 0, 0]' : 0.163791}

out:
 ["{'[3, 2, 5, 0, 4, 5, 0, 0, 25, 0, 8, 13, 0, 0, 2, 0, 0, 0]' : 0.164243}", "{'[3, 2, 5, 0, 4, 5, 0, 0, 25, 0, 8, 13, 0, 0, 2, 0, 0, 0]' : 0.163718}", "{'[3, 2, 5, 0, 4, 5, 0, 0, 25, 0, 8, 13, 0, 0, 2, 0, 0, 0]' : 0.163671}", "{'[3, 2, 5, 0, 4, 5, 0, 0, 25, 0, 8, 13, 0, 0, 2, 0, 0, 0]' : 0.164021}", "{'[3, 2, 5, 0, 4, 5, 0, 0, 25, 0, 8, 13, 0, 0, 2, 0, 0, 0]' : 0.163667}", "{'[3, 2, 5, 0, 4, 5, 0, 0, 25, 0, 8, 13, 0, 0, 2, 0, 0, 0]' : 0.163699}", "{'[3, 2, 5, 0, 4, 5, 0, 0, 25, 0, 8, 13, 0, 0, 2, 0, 0, 0]' : 0.163745}", "{'[3, 2, 5, 0, 4, 5, 0, 0, 25, 0, 8, 13, 0, 0, 2, 0, 0, 0]' : 0.163857}", "{'[3, 2, 5, 0, 4, 5, 0, 0, 25, 0, 8, 13, 0, 0, 2, 0, 0, 0]' : 0.164106}", "{'[3, 2, 5, 0, 4, 5, 0, 0, 25, 0, 8, 13, 0, 0, 2, 0, 0, 0]' : 0.163739}", "{'[3, 2, 5, 0, 4, 5, 0, 0, 25, 0, 8, 13, 0, 0, 2, 0, 0, 0]' : 0.16376}", "{'[3, 2, 5, 0, 4, 5, 0, 0, 25, 0, 8, 13, 0, 0, 2, 0, 0, 0]' : 0.163713}", "{'[3, 2, 5, 0, 4, 5, 0, 0, 25, 0, 8, 13, 0, 0, 2, 0, 0, 0]' : 0.163903}", "{'[3, 2, 5, 0, 4, 5, 0, 0, 25, 0, 8, 13, 0, 0, 2, 0, 0, 0]' : 0.163652}", "{'[3, 2, 5, 0, 4, 5, 0, 0, 25, 0, 8, 13, 0, 0, 2, 0, 0, 0]' : 0.163779}", "{'[3, 2, 5, 0, 4, 5, 0, 0, 25, 0, 8, 13, 0, 0, 2, 0, 0, 0]' : 0.16367}", "{'[3, 2, 5, 0, 4, 5, 0, 0, 25, 0, 8, 13, 0, 0, 2, 0, 0, 0]' : 0.163552}", "{'[3, 2, 5, 0, 4, 5, 0, 0, 25, 0, 8, 13, 0, 0, 2, 0, 0, 0]' : 0.163753}", "{'[3, 2, 5, 0, 4, 5, 0, 0, 25, 0, 8, 13, 0, 0, 2, 0, 0, 0]' : 0.163625}", "{'[3, 2, 5, 0, 4, 5, 0, 0, 25, 0, 8, 13, 0, 0, 2, 0, 0, 0]' : 0.164141}", "{'[3, 2, 5, 0, 4, 5, 0, 0, 25, 0, 8, 13, 0, 0, 2, 0, 0, 0]' : 0.163701}", "{'[3, 2, 5, 0, 4, 5, 0, 0, 25, 0, 8, 13, 0, 0, 2, 0, 0, 0]' : 0.163847}", "{'[3, 2, 5, 0, 4, 5, 0, 0, 25, 0, 8, 13, 0, 0, 2, 0, 0, 0]' : 0.163801}", "{'[3, 2, 5, 0, 4, 5, 0, 0, 25, 0, 8, 13, 0, 0, 2, 0, 0, 0]' : 0.163905}", "{'[3, 2, 5, 0, 4, 5, 0, 0, 25, 0, 8, 13, 0, 0, 2, 0, 0, 0]' : 0.163778}", "{'[3, 2, 5, 0, 4, 5, 0, 0, 25, 0, 8, 13, 0, 0, 2, 0, 0, 0]' : 0.163751}", "{'[3, 2, 5, 0, 4, 5, 0, 0, 25, 0, 8, 13, 0, 0, 2, 0, 0, 0]' : 0.163544}", "{'[3, 2, 5, 0, 4, 5, 0, 0, 25, 0, 8, 13, 0, 0, 2, 0, 0, 0]' : 0.163685}", "{'[3, 2, 5, 0, 4, 5, 0, 0, 25, 0, 8, 13, 0, 0, 2, 0, 0, 0]' : 0.163624}", "{'[3, 2, 5, 0, 4, 5, 0, 0, 25, 0, 8, 13, 0, 0, 2, 0, 0, 0]' : 0.163791}"]
returning from 'run': {'[3, 2, 5, 0, 4, 5, 0, 0, 25, 0, 8, 13, 0, 0, 2, 0, 0, 0]': ([0.164243, 0.163718, 0.163671, 0.164021, 0.163667, 0.163699, 0.163745, 0.163857, 0.164106, 0.163739, 0.16376, 0.163713, 0.163903, 0.163652, 0.163779, 0.16367, 0.163552, 0.163753, 0.163625, 0.164141, 0.163701, 0.163847, 0.163801, 0.163905, 0.163778, 0.163751, 0.163544, 0.163685, 0.163624, 0.163791], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 2, 5, 0, 4, 5, 0, 0, 25, 0, 8, 13, 0, 0, 2, 0, 0, 0]': ([0.164243, 0.163718, 0.163671, 0.164021, 0.163667, 0.163699, 0.163745, 0.163857, 0.164106, 0.163739, 0.16376, 0.163713, 0.163903, 0.163652, 0.163779, 0.16367, 0.163552, 0.163753, 0.163625, 0.164141, 0.163701, 0.163847, 0.163801, 0.163905, 0.163778, 0.163751, 0.163544, 0.163685, 0.163624, 0.163791], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	26
        Max loop nest depth: 	6
        Additions: 		2512
        Multiplications: 	648
        Divisions: 		0
        Logical: 		0
        Reads: 			3874
        Writes: 		397
        Comparisons:		26
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest29.exe __orio_perftest29.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest29.exe  
Program Test Output: 
{'[5, 1, 3, 4, 6, 5, 1, 1, 8, 0, 26, 0, 1, 0, 1, 0, 1, 0]' : 0.0904391}
{'[5, 1, 3, 4, 6, 5, 1, 1, 8, 0, 26, 0, 1, 0, 1, 0, 1, 0]' : 0.0899701}
{'[5, 1, 3, 4, 6, 5, 1, 1, 8, 0, 26, 0, 1, 0, 1, 0, 1, 0]' : 0.0901129}
{'[5, 1, 3, 4, 6, 5, 1, 1, 8, 0, 26, 0, 1, 0, 1, 0, 1, 0]' : 0.0898809}
{'[5, 1, 3, 4, 6, 5, 1, 1, 8, 0, 26, 0, 1, 0, 1, 0, 1, 0]' : 0.089942}
{'[5, 1, 3, 4, 6, 5, 1, 1, 8, 0, 26, 0, 1, 0, 1, 0, 1, 0]' : 0.0899539}
{'[5, 1, 3, 4, 6, 5, 1, 1, 8, 0, 26, 0, 1, 0, 1, 0, 1, 0]' : 0.090071}
{'[5, 1, 3, 4, 6, 5, 1, 1, 8, 0, 26, 0, 1, 0, 1, 0, 1, 0]' : 0.0898411}
{'[5, 1, 3, 4, 6, 5, 1, 1, 8, 0, 26, 0, 1, 0, 1, 0, 1, 0]' : 0.0899591}
{'[5, 1, 3, 4, 6, 5, 1, 1, 8, 0, 26, 0, 1, 0, 1, 0, 1, 0]' : 0.089937}
{'[5, 1, 3, 4, 6, 5, 1, 1, 8, 0, 26, 0, 1, 0, 1, 0, 1, 0]' : 0.0899639}
{'[5, 1, 3, 4, 6, 5, 1, 1, 8, 0, 26, 0, 1, 0, 1, 0, 1, 0]' : 0.089869}
{'[5, 1, 3, 4, 6, 5, 1, 1, 8, 0, 26, 0, 1, 0, 1, 0, 1, 0]' : 0.0899408}
{'[5, 1, 3, 4, 6, 5, 1, 1, 8, 0, 26, 0, 1, 0, 1, 0, 1, 0]' : 0.0899651}
{'[5, 1, 3, 4, 6, 5, 1, 1, 8, 0, 26, 0, 1, 0, 1, 0, 1, 0]' : 0.090528}
{'[5, 1, 3, 4, 6, 5, 1, 1, 8, 0, 26, 0, 1, 0, 1, 0, 1, 0]' : 0.089859}
{'[5, 1, 3, 4, 6, 5, 1, 1, 8, 0, 26, 0, 1, 0, 1, 0, 1, 0]' : 0.089973}
{'[5, 1, 3, 4, 6, 5, 1, 1, 8, 0, 26, 0, 1, 0, 1, 0, 1, 0]' : 0.0899451}
{'[5, 1, 3, 4, 6, 5, 1, 1, 8, 0, 26, 0, 1, 0, 1, 0, 1, 0]' : 0.0900888}
{'[5, 1, 3, 4, 6, 5, 1, 1, 8, 0, 26, 0, 1, 0, 1, 0, 1, 0]' : 0.0898221}
{'[5, 1, 3, 4, 6, 5, 1, 1, 8, 0, 26, 0, 1, 0, 1, 0, 1, 0]' : 0.0899141}
{'[5, 1, 3, 4, 6, 5, 1, 1, 8, 0, 26, 0, 1, 0, 1, 0, 1, 0]' : 0.089932}
{'[5, 1, 3, 4, 6, 5, 1, 1, 8, 0, 26, 0, 1, 0, 1, 0, 1, 0]' : 0.0900009}
{'[5, 1, 3, 4, 6, 5, 1, 1, 8, 0, 26, 0, 1, 0, 1, 0, 1, 0]' : 0.08991}
{'[5, 1, 3, 4, 6, 5, 1, 1, 8, 0, 26, 0, 1, 0, 1, 0, 1, 0]' : 0.0899332}
{'[5, 1, 3, 4, 6, 5, 1, 1, 8, 0, 26, 0, 1, 0, 1, 0, 1, 0]' : 0.0899549}
{'[5, 1, 3, 4, 6, 5, 1, 1, 8, 0, 26, 0, 1, 0, 1, 0, 1, 0]' : 0.090071}
{'[5, 1, 3, 4, 6, 5, 1, 1, 8, 0, 26, 0, 1, 0, 1, 0, 1, 0]' : 0.0900731}
{'[5, 1, 3, 4, 6, 5, 1, 1, 8, 0, 26, 0, 1, 0, 1, 0, 1, 0]' : 0.0900609}
{'[5, 1, 3, 4, 6, 5, 1, 1, 8, 0, 26, 0, 1, 0, 1, 0, 1, 0]' : 0.089958}

out:
 ["{'[5, 1, 3, 4, 6, 5, 1, 1, 8, 0, 26, 0, 1, 0, 1, 0, 1, 0]' : 0.0904391}", "{'[5, 1, 3, 4, 6, 5, 1, 1, 8, 0, 26, 0, 1, 0, 1, 0, 1, 0]' : 0.0899701}", "{'[5, 1, 3, 4, 6, 5, 1, 1, 8, 0, 26, 0, 1, 0, 1, 0, 1, 0]' : 0.0901129}", "{'[5, 1, 3, 4, 6, 5, 1, 1, 8, 0, 26, 0, 1, 0, 1, 0, 1, 0]' : 0.0898809}", "{'[5, 1, 3, 4, 6, 5, 1, 1, 8, 0, 26, 0, 1, 0, 1, 0, 1, 0]' : 0.089942}", "{'[5, 1, 3, 4, 6, 5, 1, 1, 8, 0, 26, 0, 1, 0, 1, 0, 1, 0]' : 0.0899539}", "{'[5, 1, 3, 4, 6, 5, 1, 1, 8, 0, 26, 0, 1, 0, 1, 0, 1, 0]' : 0.090071}", "{'[5, 1, 3, 4, 6, 5, 1, 1, 8, 0, 26, 0, 1, 0, 1, 0, 1, 0]' : 0.0898411}", "{'[5, 1, 3, 4, 6, 5, 1, 1, 8, 0, 26, 0, 1, 0, 1, 0, 1, 0]' : 0.0899591}", "{'[5, 1, 3, 4, 6, 5, 1, 1, 8, 0, 26, 0, 1, 0, 1, 0, 1, 0]' : 0.089937}", "{'[5, 1, 3, 4, 6, 5, 1, 1, 8, 0, 26, 0, 1, 0, 1, 0, 1, 0]' : 0.0899639}", "{'[5, 1, 3, 4, 6, 5, 1, 1, 8, 0, 26, 0, 1, 0, 1, 0, 1, 0]' : 0.089869}", "{'[5, 1, 3, 4, 6, 5, 1, 1, 8, 0, 26, 0, 1, 0, 1, 0, 1, 0]' : 0.0899408}", "{'[5, 1, 3, 4, 6, 5, 1, 1, 8, 0, 26, 0, 1, 0, 1, 0, 1, 0]' : 0.0899651}", "{'[5, 1, 3, 4, 6, 5, 1, 1, 8, 0, 26, 0, 1, 0, 1, 0, 1, 0]' : 0.090528}", "{'[5, 1, 3, 4, 6, 5, 1, 1, 8, 0, 26, 0, 1, 0, 1, 0, 1, 0]' : 0.089859}", "{'[5, 1, 3, 4, 6, 5, 1, 1, 8, 0, 26, 0, 1, 0, 1, 0, 1, 0]' : 0.089973}", "{'[5, 1, 3, 4, 6, 5, 1, 1, 8, 0, 26, 0, 1, 0, 1, 0, 1, 0]' : 0.0899451}", "{'[5, 1, 3, 4, 6, 5, 1, 1, 8, 0, 26, 0, 1, 0, 1, 0, 1, 0]' : 0.0900888}", "{'[5, 1, 3, 4, 6, 5, 1, 1, 8, 0, 26, 0, 1, 0, 1, 0, 1, 0]' : 0.0898221}", "{'[5, 1, 3, 4, 6, 5, 1, 1, 8, 0, 26, 0, 1, 0, 1, 0, 1, 0]' : 0.0899141}", "{'[5, 1, 3, 4, 6, 5, 1, 1, 8, 0, 26, 0, 1, 0, 1, 0, 1, 0]' : 0.089932}", "{'[5, 1, 3, 4, 6, 5, 1, 1, 8, 0, 26, 0, 1, 0, 1, 0, 1, 0]' : 0.0900009}", "{'[5, 1, 3, 4, 6, 5, 1, 1, 8, 0, 26, 0, 1, 0, 1, 0, 1, 0]' : 0.08991}", "{'[5, 1, 3, 4, 6, 5, 1, 1, 8, 0, 26, 0, 1, 0, 1, 0, 1, 0]' : 0.0899332}", "{'[5, 1, 3, 4, 6, 5, 1, 1, 8, 0, 26, 0, 1, 0, 1, 0, 1, 0]' : 0.0899549}", "{'[5, 1, 3, 4, 6, 5, 1, 1, 8, 0, 26, 0, 1, 0, 1, 0, 1, 0]' : 0.090071}", "{'[5, 1, 3, 4, 6, 5, 1, 1, 8, 0, 26, 0, 1, 0, 1, 0, 1, 0]' : 0.0900731}", "{'[5, 1, 3, 4, 6, 5, 1, 1, 8, 0, 26, 0, 1, 0, 1, 0, 1, 0]' : 0.0900609}", "{'[5, 1, 3, 4, 6, 5, 1, 1, 8, 0, 26, 0, 1, 0, 1, 0, 1, 0]' : 0.089958}"]
returning from 'run': {'[5, 1, 3, 4, 6, 5, 1, 1, 8, 0, 26, 0, 1, 0, 1, 0, 1, 0]': ([0.0904391, 0.0899701, 0.0901129, 0.0898809, 0.089942, 0.0899539, 0.090071, 0.0898411, 0.0899591, 0.089937, 0.0899639, 0.089869, 0.0899408, 0.0899651, 0.090528, 0.089859, 0.089973, 0.0899451, 0.0900888, 0.0898221, 0.0899141, 0.089932, 0.0900009, 0.08991, 0.0899332, 0.0899549, 0.090071, 0.0900731, 0.0900609, 0.089958], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 1, 3, 4, 6, 5, 1, 1, 8, 0, 26, 0, 1, 0, 1, 0, 1, 0]': ([0.0904391, 0.0899701, 0.0901129, 0.0898809, 0.089942, 0.0899539, 0.090071, 0.0898411, 0.0899591, 0.089937, 0.0899639, 0.089869, 0.0899408, 0.0899651, 0.090528, 0.089859, 0.089973, 0.0899451, 0.0900888, 0.0898221, 0.0899141, 0.089932, 0.0900009, 0.08991, 0.0899332, 0.0899549, 0.090071, 0.0900731, 0.0900609, 0.089958], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	35
        Max loop nest depth: 	5
        Additions: 		805
        Multiplications: 	308
        Divisions: 		0
        Logical: 		0
        Reads: 			1696
        Writes: 		334
        Comparisons:		35
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest30.exe __orio_perftest30.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest30.exe  
Program Test Output: 
{'[2, 0, 0, 4, 4, 5, 0, 1, 13, 1, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.083554}
{'[2, 0, 0, 4, 4, 5, 0, 1, 13, 1, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0826709}
{'[2, 0, 0, 4, 4, 5, 0, 1, 13, 1, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0825779}
{'[2, 0, 0, 4, 4, 5, 0, 1, 13, 1, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.082617}
{'[2, 0, 0, 4, 4, 5, 0, 1, 13, 1, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0825782}
{'[2, 0, 0, 4, 4, 5, 0, 1, 13, 1, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0825951}
{'[2, 0, 0, 4, 4, 5, 0, 1, 13, 1, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0826271}
{'[2, 0, 0, 4, 4, 5, 0, 1, 13, 1, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0826268}
{'[2, 0, 0, 4, 4, 5, 0, 1, 13, 1, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0825341}
{'[2, 0, 0, 4, 4, 5, 0, 1, 13, 1, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.082674}
{'[2, 0, 0, 4, 4, 5, 0, 1, 13, 1, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0825582}
{'[2, 0, 0, 4, 4, 5, 0, 1, 13, 1, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0825582}
{'[2, 0, 0, 4, 4, 5, 0, 1, 13, 1, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.082571}
{'[2, 0, 0, 4, 4, 5, 0, 1, 13, 1, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0826108}
{'[2, 0, 0, 4, 4, 5, 0, 1, 13, 1, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0831661}
{'[2, 0, 0, 4, 4, 5, 0, 1, 13, 1, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.082582}
{'[2, 0, 0, 4, 4, 5, 0, 1, 13, 1, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0825989}
{'[2, 0, 0, 4, 4, 5, 0, 1, 13, 1, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0824881}
{'[2, 0, 0, 4, 4, 5, 0, 1, 13, 1, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.082653}
{'[2, 0, 0, 4, 4, 5, 0, 1, 13, 1, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0825229}
{'[2, 0, 0, 4, 4, 5, 0, 1, 13, 1, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.082521}
{'[2, 0, 0, 4, 4, 5, 0, 1, 13, 1, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0825911}
{'[2, 0, 0, 4, 4, 5, 0, 1, 13, 1, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0827}
{'[2, 0, 0, 4, 4, 5, 0, 1, 13, 1, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0825641}
{'[2, 0, 0, 4, 4, 5, 0, 1, 13, 1, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.082552}
{'[2, 0, 0, 4, 4, 5, 0, 1, 13, 1, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.082602}
{'[2, 0, 0, 4, 4, 5, 0, 1, 13, 1, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.082572}
{'[2, 0, 0, 4, 4, 5, 0, 1, 13, 1, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.082598}
{'[2, 0, 0, 4, 4, 5, 0, 1, 13, 1, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.082571}
{'[2, 0, 0, 4, 4, 5, 0, 1, 13, 1, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0825942}

out:
 ["{'[2, 0, 0, 4, 4, 5, 0, 1, 13, 1, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.083554}", "{'[2, 0, 0, 4, 4, 5, 0, 1, 13, 1, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0826709}", "{'[2, 0, 0, 4, 4, 5, 0, 1, 13, 1, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0825779}", "{'[2, 0, 0, 4, 4, 5, 0, 1, 13, 1, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.082617}", "{'[2, 0, 0, 4, 4, 5, 0, 1, 13, 1, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0825782}", "{'[2, 0, 0, 4, 4, 5, 0, 1, 13, 1, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0825951}", "{'[2, 0, 0, 4, 4, 5, 0, 1, 13, 1, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0826271}", "{'[2, 0, 0, 4, 4, 5, 0, 1, 13, 1, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0826268}", "{'[2, 0, 0, 4, 4, 5, 0, 1, 13, 1, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0825341}", "{'[2, 0, 0, 4, 4, 5, 0, 1, 13, 1, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.082674}", "{'[2, 0, 0, 4, 4, 5, 0, 1, 13, 1, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0825582}", "{'[2, 0, 0, 4, 4, 5, 0, 1, 13, 1, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0825582}", "{'[2, 0, 0, 4, 4, 5, 0, 1, 13, 1, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.082571}", "{'[2, 0, 0, 4, 4, 5, 0, 1, 13, 1, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0826108}", "{'[2, 0, 0, 4, 4, 5, 0, 1, 13, 1, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0831661}", "{'[2, 0, 0, 4, 4, 5, 0, 1, 13, 1, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.082582}", "{'[2, 0, 0, 4, 4, 5, 0, 1, 13, 1, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0825989}", "{'[2, 0, 0, 4, 4, 5, 0, 1, 13, 1, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0824881}", "{'[2, 0, 0, 4, 4, 5, 0, 1, 13, 1, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.082653}", "{'[2, 0, 0, 4, 4, 5, 0, 1, 13, 1, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0825229}", "{'[2, 0, 0, 4, 4, 5, 0, 1, 13, 1, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.082521}", "{'[2, 0, 0, 4, 4, 5, 0, 1, 13, 1, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0825911}", "{'[2, 0, 0, 4, 4, 5, 0, 1, 13, 1, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0827}", "{'[2, 0, 0, 4, 4, 5, 0, 1, 13, 1, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0825641}", "{'[2, 0, 0, 4, 4, 5, 0, 1, 13, 1, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.082552}", "{'[2, 0, 0, 4, 4, 5, 0, 1, 13, 1, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.082602}", "{'[2, 0, 0, 4, 4, 5, 0, 1, 13, 1, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.082572}", "{'[2, 0, 0, 4, 4, 5, 0, 1, 13, 1, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.082598}", "{'[2, 0, 0, 4, 4, 5, 0, 1, 13, 1, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.082571}", "{'[2, 0, 0, 4, 4, 5, 0, 1, 13, 1, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0825942}"]
returning from 'run': {'[2, 0, 0, 4, 4, 5, 0, 1, 13, 1, 0, 3, 1, 1, 0, 1, 1, 0]': ([0.083554, 0.0826709, 0.0825779, 0.082617, 0.0825782, 0.0825951, 0.0826271, 0.0826268, 0.0825341, 0.082674, 0.0825582, 0.0825582, 0.082571, 0.0826108, 0.0831661, 0.082582, 0.0825989, 0.0824881, 0.082653, 0.0825229, 0.082521, 0.0825911, 0.0827, 0.0825641, 0.082552, 0.082602, 0.082572, 0.082598, 0.082571, 0.0825942], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 0, 4, 4, 5, 0, 1, 13, 1, 0, 3, 1, 1, 0, 1, 1, 0]': ([0.083554, 0.0826709, 0.0825779, 0.082617, 0.0825782, 0.0825951, 0.0826271, 0.0826268, 0.0825341, 0.082674, 0.0825582, 0.0825582, 0.082571, 0.0826108, 0.0831661, 0.082582, 0.0825989, 0.0824881, 0.082653, 0.0825229, 0.082521, 0.0825911, 0.0827, 0.0825641, 0.082552, 0.082602, 0.082572, 0.082598, 0.082571, 0.0825942], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = jjj
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	6
        Additions: 		12213
        Multiplications: 	3630
        Divisions: 		0
        Logical: 		0
        Reads: 			18326
        Writes: 		1871
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest31.exe __orio_perftest31.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest31.exe  
Program Test Output: 
{'[2, 5, 5, 5, 3, 4, 0, 0, 9, 0, 22, 29, 2, 0, 0, 0, 1, 0]' : 0.278246}
{'[2, 5, 5, 5, 3, 4, 0, 0, 9, 0, 22, 29, 2, 0, 0, 0, 1, 0]' : 0.275633}
{'[2, 5, 5, 5, 3, 4, 0, 0, 9, 0, 22, 29, 2, 0, 0, 0, 1, 0]' : 0.277629}
{'[2, 5, 5, 5, 3, 4, 0, 0, 9, 0, 22, 29, 2, 0, 0, 0, 1, 0]' : 0.275828}
{'[2, 5, 5, 5, 3, 4, 0, 0, 9, 0, 22, 29, 2, 0, 0, 0, 1, 0]' : 0.276634}
{'[2, 5, 5, 5, 3, 4, 0, 0, 9, 0, 22, 29, 2, 0, 0, 0, 1, 0]' : 0.276261}
{'[2, 5, 5, 5, 3, 4, 0, 0, 9, 0, 22, 29, 2, 0, 0, 0, 1, 0]' : 0.276523}
{'[2, 5, 5, 5, 3, 4, 0, 0, 9, 0, 22, 29, 2, 0, 0, 0, 1, 0]' : 0.276513}
{'[2, 5, 5, 5, 3, 4, 0, 0, 9, 0, 22, 29, 2, 0, 0, 0, 1, 0]' : 0.275805}
{'[2, 5, 5, 5, 3, 4, 0, 0, 9, 0, 22, 29, 2, 0, 0, 0, 1, 0]' : 0.276003}
{'[2, 5, 5, 5, 3, 4, 0, 0, 9, 0, 22, 29, 2, 0, 0, 0, 1, 0]' : 0.276508}
{'[2, 5, 5, 5, 3, 4, 0, 0, 9, 0, 22, 29, 2, 0, 0, 0, 1, 0]' : 0.27867}
{'[2, 5, 5, 5, 3, 4, 0, 0, 9, 0, 22, 29, 2, 0, 0, 0, 1, 0]' : 0.275743}
{'[2, 5, 5, 5, 3, 4, 0, 0, 9, 0, 22, 29, 2, 0, 0, 0, 1, 0]' : 0.276393}
{'[2, 5, 5, 5, 3, 4, 0, 0, 9, 0, 22, 29, 2, 0, 0, 0, 1, 0]' : 0.276125}
{'[2, 5, 5, 5, 3, 4, 0, 0, 9, 0, 22, 29, 2, 0, 0, 0, 1, 0]' : 0.275984}
{'[2, 5, 5, 5, 3, 4, 0, 0, 9, 0, 22, 29, 2, 0, 0, 0, 1, 0]' : 0.276636}
{'[2, 5, 5, 5, 3, 4, 0, 0, 9, 0, 22, 29, 2, 0, 0, 0, 1, 0]' : 0.275698}
{'[2, 5, 5, 5, 3, 4, 0, 0, 9, 0, 22, 29, 2, 0, 0, 0, 1, 0]' : 0.278307}
{'[2, 5, 5, 5, 3, 4, 0, 0, 9, 0, 22, 29, 2, 0, 0, 0, 1, 0]' : 0.275854}
{'[2, 5, 5, 5, 3, 4, 0, 0, 9, 0, 22, 29, 2, 0, 0, 0, 1, 0]' : 0.276838}
{'[2, 5, 5, 5, 3, 4, 0, 0, 9, 0, 22, 29, 2, 0, 0, 0, 1, 0]' : 0.276022}
{'[2, 5, 5, 5, 3, 4, 0, 0, 9, 0, 22, 29, 2, 0, 0, 0, 1, 0]' : 0.276467}
{'[2, 5, 5, 5, 3, 4, 0, 0, 9, 0, 22, 29, 2, 0, 0, 0, 1, 0]' : 0.276337}
{'[2, 5, 5, 5, 3, 4, 0, 0, 9, 0, 22, 29, 2, 0, 0, 0, 1, 0]' : 0.275796}
{'[2, 5, 5, 5, 3, 4, 0, 0, 9, 0, 22, 29, 2, 0, 0, 0, 1, 0]' : 0.276062}
{'[2, 5, 5, 5, 3, 4, 0, 0, 9, 0, 22, 29, 2, 0, 0, 0, 1, 0]' : 0.276179}
{'[2, 5, 5, 5, 3, 4, 0, 0, 9, 0, 22, 29, 2, 0, 0, 0, 1, 0]' : 0.278138}
{'[2, 5, 5, 5, 3, 4, 0, 0, 9, 0, 22, 29, 2, 0, 0, 0, 1, 0]' : 0.27562}
{'[2, 5, 5, 5, 3, 4, 0, 0, 9, 0, 22, 29, 2, 0, 0, 0, 1, 0]' : 0.276464}

out:
 ["{'[2, 5, 5, 5, 3, 4, 0, 0, 9, 0, 22, 29, 2, 0, 0, 0, 1, 0]' : 0.278246}", "{'[2, 5, 5, 5, 3, 4, 0, 0, 9, 0, 22, 29, 2, 0, 0, 0, 1, 0]' : 0.275633}", "{'[2, 5, 5, 5, 3, 4, 0, 0, 9, 0, 22, 29, 2, 0, 0, 0, 1, 0]' : 0.277629}", "{'[2, 5, 5, 5, 3, 4, 0, 0, 9, 0, 22, 29, 2, 0, 0, 0, 1, 0]' : 0.275828}", "{'[2, 5, 5, 5, 3, 4, 0, 0, 9, 0, 22, 29, 2, 0, 0, 0, 1, 0]' : 0.276634}", "{'[2, 5, 5, 5, 3, 4, 0, 0, 9, 0, 22, 29, 2, 0, 0, 0, 1, 0]' : 0.276261}", "{'[2, 5, 5, 5, 3, 4, 0, 0, 9, 0, 22, 29, 2, 0, 0, 0, 1, 0]' : 0.276523}", "{'[2, 5, 5, 5, 3, 4, 0, 0, 9, 0, 22, 29, 2, 0, 0, 0, 1, 0]' : 0.276513}", "{'[2, 5, 5, 5, 3, 4, 0, 0, 9, 0, 22, 29, 2, 0, 0, 0, 1, 0]' : 0.275805}", "{'[2, 5, 5, 5, 3, 4, 0, 0, 9, 0, 22, 29, 2, 0, 0, 0, 1, 0]' : 0.276003}", "{'[2, 5, 5, 5, 3, 4, 0, 0, 9, 0, 22, 29, 2, 0, 0, 0, 1, 0]' : 0.276508}", "{'[2, 5, 5, 5, 3, 4, 0, 0, 9, 0, 22, 29, 2, 0, 0, 0, 1, 0]' : 0.27867}", "{'[2, 5, 5, 5, 3, 4, 0, 0, 9, 0, 22, 29, 2, 0, 0, 0, 1, 0]' : 0.275743}", "{'[2, 5, 5, 5, 3, 4, 0, 0, 9, 0, 22, 29, 2, 0, 0, 0, 1, 0]' : 0.276393}", "{'[2, 5, 5, 5, 3, 4, 0, 0, 9, 0, 22, 29, 2, 0, 0, 0, 1, 0]' : 0.276125}", "{'[2, 5, 5, 5, 3, 4, 0, 0, 9, 0, 22, 29, 2, 0, 0, 0, 1, 0]' : 0.275984}", "{'[2, 5, 5, 5, 3, 4, 0, 0, 9, 0, 22, 29, 2, 0, 0, 0, 1, 0]' : 0.276636}", "{'[2, 5, 5, 5, 3, 4, 0, 0, 9, 0, 22, 29, 2, 0, 0, 0, 1, 0]' : 0.275698}", "{'[2, 5, 5, 5, 3, 4, 0, 0, 9, 0, 22, 29, 2, 0, 0, 0, 1, 0]' : 0.278307}", "{'[2, 5, 5, 5, 3, 4, 0, 0, 9, 0, 22, 29, 2, 0, 0, 0, 1, 0]' : 0.275854}", "{'[2, 5, 5, 5, 3, 4, 0, 0, 9, 0, 22, 29, 2, 0, 0, 0, 1, 0]' : 0.276838}", "{'[2, 5, 5, 5, 3, 4, 0, 0, 9, 0, 22, 29, 2, 0, 0, 0, 1, 0]' : 0.276022}", "{'[2, 5, 5, 5, 3, 4, 0, 0, 9, 0, 22, 29, 2, 0, 0, 0, 1, 0]' : 0.276467}", "{'[2, 5, 5, 5, 3, 4, 0, 0, 9, 0, 22, 29, 2, 0, 0, 0, 1, 0]' : 0.276337}", "{'[2, 5, 5, 5, 3, 4, 0, 0, 9, 0, 22, 29, 2, 0, 0, 0, 1, 0]' : 0.275796}", "{'[2, 5, 5, 5, 3, 4, 0, 0, 9, 0, 22, 29, 2, 0, 0, 0, 1, 0]' : 0.276062}", "{'[2, 5, 5, 5, 3, 4, 0, 0, 9, 0, 22, 29, 2, 0, 0, 0, 1, 0]' : 0.276179}", "{'[2, 5, 5, 5, 3, 4, 0, 0, 9, 0, 22, 29, 2, 0, 0, 0, 1, 0]' : 0.278138}", "{'[2, 5, 5, 5, 3, 4, 0, 0, 9, 0, 22, 29, 2, 0, 0, 0, 1, 0]' : 0.27562}", "{'[2, 5, 5, 5, 3, 4, 0, 0, 9, 0, 22, 29, 2, 0, 0, 0, 1, 0]' : 0.276464}"]
returning from 'run': {'[2, 5, 5, 5, 3, 4, 0, 0, 9, 0, 22, 29, 2, 0, 0, 0, 1, 0]': ([0.278246, 0.275633, 0.277629, 0.275828, 0.276634, 0.276261, 0.276523, 0.276513, 0.275805, 0.276003, 0.276508, 0.27867, 0.275743, 0.276393, 0.276125, 0.275984, 0.276636, 0.275698, 0.278307, 0.275854, 0.276838, 0.276022, 0.276467, 0.276337, 0.275796, 0.276062, 0.276179, 0.278138, 0.27562, 0.276464], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 5, 5, 5, 3, 4, 0, 0, 9, 0, 22, 29, 2, 0, 0, 0, 1, 0]': ([0.278246, 0.275633, 0.277629, 0.275828, 0.276634, 0.276261, 0.276523, 0.276513, 0.275805, 0.276003, 0.276508, 0.27867, 0.275743, 0.276393, 0.276125, 0.275984, 0.276636, 0.275698, 0.278307, 0.275854, 0.276838, 0.276022, 0.276467, 0.276337, 0.275796, 0.276062, 0.276179, 0.278138, 0.27562, 0.276464], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	6
        Additions: 		341
        Multiplications: 	94
        Divisions: 		0
        Logical: 		0
        Reads: 			728
        Writes: 		145
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest32.exe __orio_perftest32.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest32.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest32.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest32.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/Orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/Orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 525, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors, data)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 406, in dopt_anova
    budget)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 331, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 277, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/phrb/code/Orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest32.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/Orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/Orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 525, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors, data)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 406, in dopt_anova
    budget)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 331, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 277, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/phrb/code/Orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	51
        Max loop nest depth: 	5
        Additions: 		1850
        Multiplications: 	792
        Divisions: 		0
        Logical: 		0
        Reads: 			3621
        Writes: 		620
        Comparisons:		51
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest33.exe __orio_perftest33.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest33.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest33.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest33.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/Orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/Orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 525, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors, data)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 406, in dopt_anova
    budget)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 331, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 277, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/phrb/code/Orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest33.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/Orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/Orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 525, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors, data)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 406, in dopt_anova
    budget)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 331, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 277, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/phrb/code/Orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		214
        Multiplications: 	50
        Divisions: 		0
        Logical: 		0
        Reads: 			472
        Writes: 		109
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest34.exe __orio_perftest34.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest34.exe  
Program Test Output: 
{'[6, 3, 6, 0, 4, 4, 1, 1, 12, 0, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.164793}
{'[6, 3, 6, 0, 4, 4, 1, 1, 12, 0, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.164324}
{'[6, 3, 6, 0, 4, 4, 1, 1, 12, 0, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.164297}
{'[6, 3, 6, 0, 4, 4, 1, 1, 12, 0, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.164357}
{'[6, 3, 6, 0, 4, 4, 1, 1, 12, 0, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.164279}
{'[6, 3, 6, 0, 4, 4, 1, 1, 12, 0, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.164528}
{'[6, 3, 6, 0, 4, 4, 1, 1, 12, 0, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.164459}
{'[6, 3, 6, 0, 4, 4, 1, 1, 12, 0, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.164329}
{'[6, 3, 6, 0, 4, 4, 1, 1, 12, 0, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.165401}
{'[6, 3, 6, 0, 4, 4, 1, 1, 12, 0, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.165503}
{'[6, 3, 6, 0, 4, 4, 1, 1, 12, 0, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.165167}
{'[6, 3, 6, 0, 4, 4, 1, 1, 12, 0, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.164312}
{'[6, 3, 6, 0, 4, 4, 1, 1, 12, 0, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.164403}
{'[6, 3, 6, 0, 4, 4, 1, 1, 12, 0, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.164341}
{'[6, 3, 6, 0, 4, 4, 1, 1, 12, 0, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.164551}
{'[6, 3, 6, 0, 4, 4, 1, 1, 12, 0, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.164315}
{'[6, 3, 6, 0, 4, 4, 1, 1, 12, 0, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.164333}
{'[6, 3, 6, 0, 4, 4, 1, 1, 12, 0, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.164356}
{'[6, 3, 6, 0, 4, 4, 1, 1, 12, 0, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.164349}
{'[6, 3, 6, 0, 4, 4, 1, 1, 12, 0, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.164396}
{'[6, 3, 6, 0, 4, 4, 1, 1, 12, 0, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.164391}
{'[6, 3, 6, 0, 4, 4, 1, 1, 12, 0, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.164338}
{'[6, 3, 6, 0, 4, 4, 1, 1, 12, 0, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.164388}
{'[6, 3, 6, 0, 4, 4, 1, 1, 12, 0, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.164564}
{'[6, 3, 6, 0, 4, 4, 1, 1, 12, 0, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.164283}
{'[6, 3, 6, 0, 4, 4, 1, 1, 12, 0, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.164364}
{'[6, 3, 6, 0, 4, 4, 1, 1, 12, 0, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.164313}
{'[6, 3, 6, 0, 4, 4, 1, 1, 12, 0, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.164426}
{'[6, 3, 6, 0, 4, 4, 1, 1, 12, 0, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.16427}
{'[6, 3, 6, 0, 4, 4, 1, 1, 12, 0, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.164341}

out:
 ["{'[6, 3, 6, 0, 4, 4, 1, 1, 12, 0, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.164793}", "{'[6, 3, 6, 0, 4, 4, 1, 1, 12, 0, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.164324}", "{'[6, 3, 6, 0, 4, 4, 1, 1, 12, 0, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.164297}", "{'[6, 3, 6, 0, 4, 4, 1, 1, 12, 0, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.164357}", "{'[6, 3, 6, 0, 4, 4, 1, 1, 12, 0, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.164279}", "{'[6, 3, 6, 0, 4, 4, 1, 1, 12, 0, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.164528}", "{'[6, 3, 6, 0, 4, 4, 1, 1, 12, 0, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.164459}", "{'[6, 3, 6, 0, 4, 4, 1, 1, 12, 0, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.164329}", "{'[6, 3, 6, 0, 4, 4, 1, 1, 12, 0, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.165401}", "{'[6, 3, 6, 0, 4, 4, 1, 1, 12, 0, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.165503}", "{'[6, 3, 6, 0, 4, 4, 1, 1, 12, 0, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.165167}", "{'[6, 3, 6, 0, 4, 4, 1, 1, 12, 0, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.164312}", "{'[6, 3, 6, 0, 4, 4, 1, 1, 12, 0, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.164403}", "{'[6, 3, 6, 0, 4, 4, 1, 1, 12, 0, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.164341}", "{'[6, 3, 6, 0, 4, 4, 1, 1, 12, 0, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.164551}", "{'[6, 3, 6, 0, 4, 4, 1, 1, 12, 0, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.164315}", "{'[6, 3, 6, 0, 4, 4, 1, 1, 12, 0, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.164333}", "{'[6, 3, 6, 0, 4, 4, 1, 1, 12, 0, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.164356}", "{'[6, 3, 6, 0, 4, 4, 1, 1, 12, 0, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.164349}", "{'[6, 3, 6, 0, 4, 4, 1, 1, 12, 0, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.164396}", "{'[6, 3, 6, 0, 4, 4, 1, 1, 12, 0, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.164391}", "{'[6, 3, 6, 0, 4, 4, 1, 1, 12, 0, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.164338}", "{'[6, 3, 6, 0, 4, 4, 1, 1, 12, 0, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.164388}", "{'[6, 3, 6, 0, 4, 4, 1, 1, 12, 0, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.164564}", "{'[6, 3, 6, 0, 4, 4, 1, 1, 12, 0, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.164283}", "{'[6, 3, 6, 0, 4, 4, 1, 1, 12, 0, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.164364}", "{'[6, 3, 6, 0, 4, 4, 1, 1, 12, 0, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.164313}", "{'[6, 3, 6, 0, 4, 4, 1, 1, 12, 0, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.164426}", "{'[6, 3, 6, 0, 4, 4, 1, 1, 12, 0, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.16427}", "{'[6, 3, 6, 0, 4, 4, 1, 1, 12, 0, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.164341}"]
returning from 'run': {'[6, 3, 6, 0, 4, 4, 1, 1, 12, 0, 0, 15, 0, 1, 0, 1, 0, 1]': ([0.164793, 0.164324, 0.164297, 0.164357, 0.164279, 0.164528, 0.164459, 0.164329, 0.165401, 0.165503, 0.165167, 0.164312, 0.164403, 0.164341, 0.164551, 0.164315, 0.164333, 0.164356, 0.164349, 0.164396, 0.164391, 0.164338, 0.164388, 0.164564, 0.164283, 0.164364, 0.164313, 0.164426, 0.16427, 0.164341], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 3, 6, 0, 4, 4, 1, 1, 12, 0, 0, 15, 0, 1, 0, 1, 0, 1]': ([0.164793, 0.164324, 0.164297, 0.164357, 0.164279, 0.164528, 0.164459, 0.164329, 0.165401, 0.165503, 0.165167, 0.164312, 0.164403, 0.164341, 0.164551, 0.164315, 0.164333, 0.164356, 0.164349, 0.164396, 0.164391, 0.164338, 0.164388, 0.164564, 0.164283, 0.164364, 0.164313, 0.164426, 0.16427, 0.164341], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	146
        Max loop nest depth: 	5
        Additions: 		2405
        Multiplications: 	462
        Divisions: 		0
        Logical: 		0
        Reads: 			4156
        Writes: 		640
        Comparisons:		146
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest35.exe __orio_perftest35.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest35.exe  
Program Test Output: 
{'[1, 0, 0, 2, 5, 2, 1, 1, 11, 23, 4, 0, 1, 0, 0, 0, 0, 0]' : 0.0888319}
{'[1, 0, 0, 2, 5, 2, 1, 1, 11, 23, 4, 0, 1, 0, 0, 0, 0, 0]' : 0.088444}
{'[1, 0, 0, 2, 5, 2, 1, 1, 11, 23, 4, 0, 1, 0, 0, 0, 0, 0]' : 0.0884039}
{'[1, 0, 0, 2, 5, 2, 1, 1, 11, 23, 4, 0, 1, 0, 0, 0, 0, 0]' : 0.0886281}
{'[1, 0, 0, 2, 5, 2, 1, 1, 11, 23, 4, 0, 1, 0, 0, 0, 0, 0]' : 0.0884039}
{'[1, 0, 0, 2, 5, 2, 1, 1, 11, 23, 4, 0, 1, 0, 0, 0, 0, 0]' : 0.0883551}
{'[1, 0, 0, 2, 5, 2, 1, 1, 11, 23, 4, 0, 1, 0, 0, 0, 0, 0]' : 0.0883789}
{'[1, 0, 0, 2, 5, 2, 1, 1, 11, 23, 4, 0, 1, 0, 0, 0, 0, 0]' : 0.0884171}
{'[1, 0, 0, 2, 5, 2, 1, 1, 11, 23, 4, 0, 1, 0, 0, 0, 0, 0]' : 0.088737}
{'[1, 0, 0, 2, 5, 2, 1, 1, 11, 23, 4, 0, 1, 0, 0, 0, 0, 0]' : 0.0884259}
{'[1, 0, 0, 2, 5, 2, 1, 1, 11, 23, 4, 0, 1, 0, 0, 0, 0, 0]' : 0.0884061}
{'[1, 0, 0, 2, 5, 2, 1, 1, 11, 23, 4, 0, 1, 0, 0, 0, 0, 0]' : 0.0883539}
{'[1, 0, 0, 2, 5, 2, 1, 1, 11, 23, 4, 0, 1, 0, 0, 0, 0, 0]' : 0.08833}
{'[1, 0, 0, 2, 5, 2, 1, 1, 11, 23, 4, 0, 1, 0, 0, 0, 0, 0]' : 0.0883949}
{'[1, 0, 0, 2, 5, 2, 1, 1, 11, 23, 4, 0, 1, 0, 0, 0, 0, 0]' : 0.0884531}
{'[1, 0, 0, 2, 5, 2, 1, 1, 11, 23, 4, 0, 1, 0, 0, 0, 0, 0]' : 0.088418}
{'[1, 0, 0, 2, 5, 2, 1, 1, 11, 23, 4, 0, 1, 0, 0, 0, 0, 0]' : 0.088455}
{'[1, 0, 0, 2, 5, 2, 1, 1, 11, 23, 4, 0, 1, 0, 0, 0, 0, 0]' : 0.0884142}
{'[1, 0, 0, 2, 5, 2, 1, 1, 11, 23, 4, 0, 1, 0, 0, 0, 0, 0]' : 0.088403}
{'[1, 0, 0, 2, 5, 2, 1, 1, 11, 23, 4, 0, 1, 0, 0, 0, 0, 0]' : 0.088378}
{'[1, 0, 0, 2, 5, 2, 1, 1, 11, 23, 4, 0, 1, 0, 0, 0, 0, 0]' : 0.0884109}
{'[1, 0, 0, 2, 5, 2, 1, 1, 11, 23, 4, 0, 1, 0, 0, 0, 0, 0]' : 0.088397}
{'[1, 0, 0, 2, 5, 2, 1, 1, 11, 23, 4, 0, 1, 0, 0, 0, 0, 0]' : 0.088372}
{'[1, 0, 0, 2, 5, 2, 1, 1, 11, 23, 4, 0, 1, 0, 0, 0, 0, 0]' : 0.0883641}
{'[1, 0, 0, 2, 5, 2, 1, 1, 11, 23, 4, 0, 1, 0, 0, 0, 0, 0]' : 0.088505}
{'[1, 0, 0, 2, 5, 2, 1, 1, 11, 23, 4, 0, 1, 0, 0, 0, 0, 0]' : 0.0889142}
{'[1, 0, 0, 2, 5, 2, 1, 1, 11, 23, 4, 0, 1, 0, 0, 0, 0, 0]' : 0.0884888}
{'[1, 0, 0, 2, 5, 2, 1, 1, 11, 23, 4, 0, 1, 0, 0, 0, 0, 0]' : 0.0885432}
{'[1, 0, 0, 2, 5, 2, 1, 1, 11, 23, 4, 0, 1, 0, 0, 0, 0, 0]' : 0.088383}
{'[1, 0, 0, 2, 5, 2, 1, 1, 11, 23, 4, 0, 1, 0, 0, 0, 0, 0]' : 0.088464}

out:
 ["{'[1, 0, 0, 2, 5, 2, 1, 1, 11, 23, 4, 0, 1, 0, 0, 0, 0, 0]' : 0.0888319}", "{'[1, 0, 0, 2, 5, 2, 1, 1, 11, 23, 4, 0, 1, 0, 0, 0, 0, 0]' : 0.088444}", "{'[1, 0, 0, 2, 5, 2, 1, 1, 11, 23, 4, 0, 1, 0, 0, 0, 0, 0]' : 0.0884039}", "{'[1, 0, 0, 2, 5, 2, 1, 1, 11, 23, 4, 0, 1, 0, 0, 0, 0, 0]' : 0.0886281}", "{'[1, 0, 0, 2, 5, 2, 1, 1, 11, 23, 4, 0, 1, 0, 0, 0, 0, 0]' : 0.0884039}", "{'[1, 0, 0, 2, 5, 2, 1, 1, 11, 23, 4, 0, 1, 0, 0, 0, 0, 0]' : 0.0883551}", "{'[1, 0, 0, 2, 5, 2, 1, 1, 11, 23, 4, 0, 1, 0, 0, 0, 0, 0]' : 0.0883789}", "{'[1, 0, 0, 2, 5, 2, 1, 1, 11, 23, 4, 0, 1, 0, 0, 0, 0, 0]' : 0.0884171}", "{'[1, 0, 0, 2, 5, 2, 1, 1, 11, 23, 4, 0, 1, 0, 0, 0, 0, 0]' : 0.088737}", "{'[1, 0, 0, 2, 5, 2, 1, 1, 11, 23, 4, 0, 1, 0, 0, 0, 0, 0]' : 0.0884259}", "{'[1, 0, 0, 2, 5, 2, 1, 1, 11, 23, 4, 0, 1, 0, 0, 0, 0, 0]' : 0.0884061}", "{'[1, 0, 0, 2, 5, 2, 1, 1, 11, 23, 4, 0, 1, 0, 0, 0, 0, 0]' : 0.0883539}", "{'[1, 0, 0, 2, 5, 2, 1, 1, 11, 23, 4, 0, 1, 0, 0, 0, 0, 0]' : 0.08833}", "{'[1, 0, 0, 2, 5, 2, 1, 1, 11, 23, 4, 0, 1, 0, 0, 0, 0, 0]' : 0.0883949}", "{'[1, 0, 0, 2, 5, 2, 1, 1, 11, 23, 4, 0, 1, 0, 0, 0, 0, 0]' : 0.0884531}", "{'[1, 0, 0, 2, 5, 2, 1, 1, 11, 23, 4, 0, 1, 0, 0, 0, 0, 0]' : 0.088418}", "{'[1, 0, 0, 2, 5, 2, 1, 1, 11, 23, 4, 0, 1, 0, 0, 0, 0, 0]' : 0.088455}", "{'[1, 0, 0, 2, 5, 2, 1, 1, 11, 23, 4, 0, 1, 0, 0, 0, 0, 0]' : 0.0884142}", "{'[1, 0, 0, 2, 5, 2, 1, 1, 11, 23, 4, 0, 1, 0, 0, 0, 0, 0]' : 0.088403}", "{'[1, 0, 0, 2, 5, 2, 1, 1, 11, 23, 4, 0, 1, 0, 0, 0, 0, 0]' : 0.088378}", "{'[1, 0, 0, 2, 5, 2, 1, 1, 11, 23, 4, 0, 1, 0, 0, 0, 0, 0]' : 0.0884109}", "{'[1, 0, 0, 2, 5, 2, 1, 1, 11, 23, 4, 0, 1, 0, 0, 0, 0, 0]' : 0.088397}", "{'[1, 0, 0, 2, 5, 2, 1, 1, 11, 23, 4, 0, 1, 0, 0, 0, 0, 0]' : 0.088372}", "{'[1, 0, 0, 2, 5, 2, 1, 1, 11, 23, 4, 0, 1, 0, 0, 0, 0, 0]' : 0.0883641}", "{'[1, 0, 0, 2, 5, 2, 1, 1, 11, 23, 4, 0, 1, 0, 0, 0, 0, 0]' : 0.088505}", "{'[1, 0, 0, 2, 5, 2, 1, 1, 11, 23, 4, 0, 1, 0, 0, 0, 0, 0]' : 0.0889142}", "{'[1, 0, 0, 2, 5, 2, 1, 1, 11, 23, 4, 0, 1, 0, 0, 0, 0, 0]' : 0.0884888}", "{'[1, 0, 0, 2, 5, 2, 1, 1, 11, 23, 4, 0, 1, 0, 0, 0, 0, 0]' : 0.0885432}", "{'[1, 0, 0, 2, 5, 2, 1, 1, 11, 23, 4, 0, 1, 0, 0, 0, 0, 0]' : 0.088383}", "{'[1, 0, 0, 2, 5, 2, 1, 1, 11, 23, 4, 0, 1, 0, 0, 0, 0, 0]' : 0.088464}"]
returning from 'run': {'[1, 0, 0, 2, 5, 2, 1, 1, 11, 23, 4, 0, 1, 0, 0, 0, 0, 0]': ([0.0888319, 0.088444, 0.0884039, 0.0886281, 0.0884039, 0.0883551, 0.0883789, 0.0884171, 0.088737, 0.0884259, 0.0884061, 0.0883539, 0.08833, 0.0883949, 0.0884531, 0.088418, 0.088455, 0.0884142, 0.088403, 0.088378, 0.0884109, 0.088397, 0.088372, 0.0883641, 0.088505, 0.0889142, 0.0884888, 0.0885432, 0.088383, 0.088464], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 0, 2, 5, 2, 1, 1, 11, 23, 4, 0, 1, 0, 0, 0, 0, 0]': ([0.0888319, 0.088444, 0.0884039, 0.0886281, 0.0884039, 0.0883551, 0.0883789, 0.0884171, 0.088737, 0.0884259, 0.0884061, 0.0883539, 0.08833, 0.0883949, 0.0884531, 0.088418, 0.088455, 0.0884142, 0.088403, 0.088378, 0.0884109, 0.088397, 0.088372, 0.0883641, 0.088505, 0.0889142, 0.0884888, 0.0885432, 0.088383, 0.088464], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	26
        Max loop nest depth: 	6
        Additions: 		1456
        Multiplications: 	648
        Divisions: 		0
        Logical: 		0
        Reads: 			2874
        Writes: 		506
        Comparisons:		26
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest36.exe __orio_perftest36.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest36.exe  
Program Test Output: 
{'[5, 6, 2, 4, 4, 2, 0, 1, 24, 0, 16, 8, 1, 1, 0, 1, 0, 1]' : 0.0937481}
{'[5, 6, 2, 4, 4, 2, 0, 1, 24, 0, 16, 8, 1, 1, 0, 1, 0, 1]' : 0.093082}
{'[5, 6, 2, 4, 4, 2, 0, 1, 24, 0, 16, 8, 1, 1, 0, 1, 0, 1]' : 0.093091}
{'[5, 6, 2, 4, 4, 2, 0, 1, 24, 0, 16, 8, 1, 1, 0, 1, 0, 1]' : 0.093071}
{'[5, 6, 2, 4, 4, 2, 0, 1, 24, 0, 16, 8, 1, 1, 0, 1, 0, 1]' : 0.0931101}
{'[5, 6, 2, 4, 4, 2, 0, 1, 24, 0, 16, 8, 1, 1, 0, 1, 0, 1]' : 0.0930989}
{'[5, 6, 2, 4, 4, 2, 0, 1, 24, 0, 16, 8, 1, 1, 0, 1, 0, 1]' : 0.0930822}
{'[5, 6, 2, 4, 4, 2, 0, 1, 24, 0, 16, 8, 1, 1, 0, 1, 0, 1]' : 0.0930908}
{'[5, 6, 2, 4, 4, 2, 0, 1, 24, 0, 16, 8, 1, 1, 0, 1, 0, 1]' : 0.0930762}
{'[5, 6, 2, 4, 4, 2, 0, 1, 24, 0, 16, 8, 1, 1, 0, 1, 0, 1]' : 0.0930572}
{'[5, 6, 2, 4, 4, 2, 0, 1, 24, 0, 16, 8, 1, 1, 0, 1, 0, 1]' : 0.0931008}
{'[5, 6, 2, 4, 4, 2, 0, 1, 24, 0, 16, 8, 1, 1, 0, 1, 0, 1]' : 0.093024}
{'[5, 6, 2, 4, 4, 2, 0, 1, 24, 0, 16, 8, 1, 1, 0, 1, 0, 1]' : 0.0935411}
{'[5, 6, 2, 4, 4, 2, 0, 1, 24, 0, 16, 8, 1, 1, 0, 1, 0, 1]' : 0.093065}
{'[5, 6, 2, 4, 4, 2, 0, 1, 24, 0, 16, 8, 1, 1, 0, 1, 0, 1]' : 0.0930588}
{'[5, 6, 2, 4, 4, 2, 0, 1, 24, 0, 16, 8, 1, 1, 0, 1, 0, 1]' : 0.093056}
{'[5, 6, 2, 4, 4, 2, 0, 1, 24, 0, 16, 8, 1, 1, 0, 1, 0, 1]' : 0.0930991}
{'[5, 6, 2, 4, 4, 2, 0, 1, 24, 0, 16, 8, 1, 1, 0, 1, 0, 1]' : 0.093039}
{'[5, 6, 2, 4, 4, 2, 0, 1, 24, 0, 16, 8, 1, 1, 0, 1, 0, 1]' : 0.0930901}
{'[5, 6, 2, 4, 4, 2, 0, 1, 24, 0, 16, 8, 1, 1, 0, 1, 0, 1]' : 0.093009}
{'[5, 6, 2, 4, 4, 2, 0, 1, 24, 0, 16, 8, 1, 1, 0, 1, 0, 1]' : 0.0931602}
{'[5, 6, 2, 4, 4, 2, 0, 1, 24, 0, 16, 8, 1, 1, 0, 1, 0, 1]' : 0.0930929}
{'[5, 6, 2, 4, 4, 2, 0, 1, 24, 0, 16, 8, 1, 1, 0, 1, 0, 1]' : 0.093101}
{'[5, 6, 2, 4, 4, 2, 0, 1, 24, 0, 16, 8, 1, 1, 0, 1, 0, 1]' : 0.093111}
{'[5, 6, 2, 4, 4, 2, 0, 1, 24, 0, 16, 8, 1, 1, 0, 1, 0, 1]' : 0.0930772}
{'[5, 6, 2, 4, 4, 2, 0, 1, 24, 0, 16, 8, 1, 1, 0, 1, 0, 1]' : 0.093225}
{'[5, 6, 2, 4, 4, 2, 0, 1, 24, 0, 16, 8, 1, 1, 0, 1, 0, 1]' : 0.0930901}
{'[5, 6, 2, 4, 4, 2, 0, 1, 24, 0, 16, 8, 1, 1, 0, 1, 0, 1]' : 0.0931082}
{'[5, 6, 2, 4, 4, 2, 0, 1, 24, 0, 16, 8, 1, 1, 0, 1, 0, 1]' : 0.0932398}
{'[5, 6, 2, 4, 4, 2, 0, 1, 24, 0, 16, 8, 1, 1, 0, 1, 0, 1]' : 0.09357}

out:
 ["{'[5, 6, 2, 4, 4, 2, 0, 1, 24, 0, 16, 8, 1, 1, 0, 1, 0, 1]' : 0.0937481}", "{'[5, 6, 2, 4, 4, 2, 0, 1, 24, 0, 16, 8, 1, 1, 0, 1, 0, 1]' : 0.093082}", "{'[5, 6, 2, 4, 4, 2, 0, 1, 24, 0, 16, 8, 1, 1, 0, 1, 0, 1]' : 0.093091}", "{'[5, 6, 2, 4, 4, 2, 0, 1, 24, 0, 16, 8, 1, 1, 0, 1, 0, 1]' : 0.093071}", "{'[5, 6, 2, 4, 4, 2, 0, 1, 24, 0, 16, 8, 1, 1, 0, 1, 0, 1]' : 0.0931101}", "{'[5, 6, 2, 4, 4, 2, 0, 1, 24, 0, 16, 8, 1, 1, 0, 1, 0, 1]' : 0.0930989}", "{'[5, 6, 2, 4, 4, 2, 0, 1, 24, 0, 16, 8, 1, 1, 0, 1, 0, 1]' : 0.0930822}", "{'[5, 6, 2, 4, 4, 2, 0, 1, 24, 0, 16, 8, 1, 1, 0, 1, 0, 1]' : 0.0930908}", "{'[5, 6, 2, 4, 4, 2, 0, 1, 24, 0, 16, 8, 1, 1, 0, 1, 0, 1]' : 0.0930762}", "{'[5, 6, 2, 4, 4, 2, 0, 1, 24, 0, 16, 8, 1, 1, 0, 1, 0, 1]' : 0.0930572}", "{'[5, 6, 2, 4, 4, 2, 0, 1, 24, 0, 16, 8, 1, 1, 0, 1, 0, 1]' : 0.0931008}", "{'[5, 6, 2, 4, 4, 2, 0, 1, 24, 0, 16, 8, 1, 1, 0, 1, 0, 1]' : 0.093024}", "{'[5, 6, 2, 4, 4, 2, 0, 1, 24, 0, 16, 8, 1, 1, 0, 1, 0, 1]' : 0.0935411}", "{'[5, 6, 2, 4, 4, 2, 0, 1, 24, 0, 16, 8, 1, 1, 0, 1, 0, 1]' : 0.093065}", "{'[5, 6, 2, 4, 4, 2, 0, 1, 24, 0, 16, 8, 1, 1, 0, 1, 0, 1]' : 0.0930588}", "{'[5, 6, 2, 4, 4, 2, 0, 1, 24, 0, 16, 8, 1, 1, 0, 1, 0, 1]' : 0.093056}", "{'[5, 6, 2, 4, 4, 2, 0, 1, 24, 0, 16, 8, 1, 1, 0, 1, 0, 1]' : 0.0930991}", "{'[5, 6, 2, 4, 4, 2, 0, 1, 24, 0, 16, 8, 1, 1, 0, 1, 0, 1]' : 0.093039}", "{'[5, 6, 2, 4, 4, 2, 0, 1, 24, 0, 16, 8, 1, 1, 0, 1, 0, 1]' : 0.0930901}", "{'[5, 6, 2, 4, 4, 2, 0, 1, 24, 0, 16, 8, 1, 1, 0, 1, 0, 1]' : 0.093009}", "{'[5, 6, 2, 4, 4, 2, 0, 1, 24, 0, 16, 8, 1, 1, 0, 1, 0, 1]' : 0.0931602}", "{'[5, 6, 2, 4, 4, 2, 0, 1, 24, 0, 16, 8, 1, 1, 0, 1, 0, 1]' : 0.0930929}", "{'[5, 6, 2, 4, 4, 2, 0, 1, 24, 0, 16, 8, 1, 1, 0, 1, 0, 1]' : 0.093101}", "{'[5, 6, 2, 4, 4, 2, 0, 1, 24, 0, 16, 8, 1, 1, 0, 1, 0, 1]' : 0.093111}", "{'[5, 6, 2, 4, 4, 2, 0, 1, 24, 0, 16, 8, 1, 1, 0, 1, 0, 1]' : 0.0930772}", "{'[5, 6, 2, 4, 4, 2, 0, 1, 24, 0, 16, 8, 1, 1, 0, 1, 0, 1]' : 0.093225}", "{'[5, 6, 2, 4, 4, 2, 0, 1, 24, 0, 16, 8, 1, 1, 0, 1, 0, 1]' : 0.0930901}", "{'[5, 6, 2, 4, 4, 2, 0, 1, 24, 0, 16, 8, 1, 1, 0, 1, 0, 1]' : 0.0931082}", "{'[5, 6, 2, 4, 4, 2, 0, 1, 24, 0, 16, 8, 1, 1, 0, 1, 0, 1]' : 0.0932398}", "{'[5, 6, 2, 4, 4, 2, 0, 1, 24, 0, 16, 8, 1, 1, 0, 1, 0, 1]' : 0.09357}"]
returning from 'run': {'[5, 6, 2, 4, 4, 2, 0, 1, 24, 0, 16, 8, 1, 1, 0, 1, 0, 1]': ([0.0937481, 0.093082, 0.093091, 0.093071, 0.0931101, 0.0930989, 0.0930822, 0.0930908, 0.0930762, 0.0930572, 0.0931008, 0.093024, 0.0935411, 0.093065, 0.0930588, 0.093056, 0.0930991, 0.093039, 0.0930901, 0.093009, 0.0931602, 0.0930929, 0.093101, 0.093111, 0.0930772, 0.093225, 0.0930901, 0.0931082, 0.0932398, 0.09357], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 6, 2, 4, 4, 2, 0, 1, 24, 0, 16, 8, 1, 1, 0, 1, 0, 1]': ([0.0937481, 0.093082, 0.093091, 0.093071, 0.0931101, 0.0930989, 0.0930822, 0.0930908, 0.0930762, 0.0930572, 0.0931008, 0.093024, 0.0935411, 0.093065, 0.0930588, 0.093056, 0.0930991, 0.093039, 0.0930901, 0.093009, 0.0931602, 0.0930929, 0.093101, 0.093111, 0.0930772, 0.093225, 0.0930901, 0.0931082, 0.0932398, 0.09357], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		281
        Multiplications: 	100
        Divisions: 		0
        Logical: 		0
        Reads: 			630
        Writes: 		97
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest37.exe __orio_perftest37.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest37.exe  
Program Test Output: 
{'[0, 2, 0, 5, 2, 6, 0, 0, 20, 0, 29, 9, 0, 0, 1, 0, 0, 0]' : 0.152846}
{'[0, 2, 0, 5, 2, 6, 0, 0, 20, 0, 29, 9, 0, 0, 1, 0, 0, 0]' : 0.153036}
{'[0, 2, 0, 5, 2, 6, 0, 0, 20, 0, 29, 9, 0, 0, 1, 0, 0, 0]' : 0.152637}
{'[0, 2, 0, 5, 2, 6, 0, 0, 20, 0, 29, 9, 0, 0, 1, 0, 0, 0]' : 0.152614}
{'[0, 2, 0, 5, 2, 6, 0, 0, 20, 0, 29, 9, 0, 0, 1, 0, 0, 0]' : 0.15252}
{'[0, 2, 0, 5, 2, 6, 0, 0, 20, 0, 29, 9, 0, 0, 1, 0, 0, 0]' : 0.152886}
{'[0, 2, 0, 5, 2, 6, 0, 0, 20, 0, 29, 9, 0, 0, 1, 0, 0, 0]' : 0.152644}
{'[0, 2, 0, 5, 2, 6, 0, 0, 20, 0, 29, 9, 0, 0, 1, 0, 0, 0]' : 0.152589}
{'[0, 2, 0, 5, 2, 6, 0, 0, 20, 0, 29, 9, 0, 0, 1, 0, 0, 0]' : 0.152676}
{'[0, 2, 0, 5, 2, 6, 0, 0, 20, 0, 29, 9, 0, 0, 1, 0, 0, 0]' : 0.152606}
{'[0, 2, 0, 5, 2, 6, 0, 0, 20, 0, 29, 9, 0, 0, 1, 0, 0, 0]' : 0.152582}
{'[0, 2, 0, 5, 2, 6, 0, 0, 20, 0, 29, 9, 0, 0, 1, 0, 0, 0]' : 0.152938}
{'[0, 2, 0, 5, 2, 6, 0, 0, 20, 0, 29, 9, 0, 0, 1, 0, 0, 0]' : 0.152553}
{'[0, 2, 0, 5, 2, 6, 0, 0, 20, 0, 29, 9, 0, 0, 1, 0, 0, 0]' : 0.152787}
{'[0, 2, 0, 5, 2, 6, 0, 0, 20, 0, 29, 9, 0, 0, 1, 0, 0, 0]' : 0.152637}
{'[0, 2, 0, 5, 2, 6, 0, 0, 20, 0, 29, 9, 0, 0, 1, 0, 0, 0]' : 0.152675}
{'[0, 2, 0, 5, 2, 6, 0, 0, 20, 0, 29, 9, 0, 0, 1, 0, 0, 0]' : 0.152575}
{'[0, 2, 0, 5, 2, 6, 0, 0, 20, 0, 29, 9, 0, 0, 1, 0, 0, 0]' : 0.152528}
{'[0, 2, 0, 5, 2, 6, 0, 0, 20, 0, 29, 9, 0, 0, 1, 0, 0, 0]' : 0.152683}
{'[0, 2, 0, 5, 2, 6, 0, 0, 20, 0, 29, 9, 0, 0, 1, 0, 0, 0]' : 0.152582}
{'[0, 2, 0, 5, 2, 6, 0, 0, 20, 0, 29, 9, 0, 0, 1, 0, 0, 0]' : 0.152629}
{'[0, 2, 0, 5, 2, 6, 0, 0, 20, 0, 29, 9, 0, 0, 1, 0, 0, 0]' : 0.152966}
{'[0, 2, 0, 5, 2, 6, 0, 0, 20, 0, 29, 9, 0, 0, 1, 0, 0, 0]' : 0.152592}
{'[0, 2, 0, 5, 2, 6, 0, 0, 20, 0, 29, 9, 0, 0, 1, 0, 0, 0]' : 0.15255}
{'[0, 2, 0, 5, 2, 6, 0, 0, 20, 0, 29, 9, 0, 0, 1, 0, 0, 0]' : 0.152646}
{'[0, 2, 0, 5, 2, 6, 0, 0, 20, 0, 29, 9, 0, 0, 1, 0, 0, 0]' : 0.152675}
{'[0, 2, 0, 5, 2, 6, 0, 0, 20, 0, 29, 9, 0, 0, 1, 0, 0, 0]' : 0.152691}
{'[0, 2, 0, 5, 2, 6, 0, 0, 20, 0, 29, 9, 0, 0, 1, 0, 0, 0]' : 0.152582}
{'[0, 2, 0, 5, 2, 6, 0, 0, 20, 0, 29, 9, 0, 0, 1, 0, 0, 0]' : 0.152669}
{'[0, 2, 0, 5, 2, 6, 0, 0, 20, 0, 29, 9, 0, 0, 1, 0, 0, 0]' : 0.152487}

out:
 ["{'[0, 2, 0, 5, 2, 6, 0, 0, 20, 0, 29, 9, 0, 0, 1, 0, 0, 0]' : 0.152846}", "{'[0, 2, 0, 5, 2, 6, 0, 0, 20, 0, 29, 9, 0, 0, 1, 0, 0, 0]' : 0.153036}", "{'[0, 2, 0, 5, 2, 6, 0, 0, 20, 0, 29, 9, 0, 0, 1, 0, 0, 0]' : 0.152637}", "{'[0, 2, 0, 5, 2, 6, 0, 0, 20, 0, 29, 9, 0, 0, 1, 0, 0, 0]' : 0.152614}", "{'[0, 2, 0, 5, 2, 6, 0, 0, 20, 0, 29, 9, 0, 0, 1, 0, 0, 0]' : 0.15252}", "{'[0, 2, 0, 5, 2, 6, 0, 0, 20, 0, 29, 9, 0, 0, 1, 0, 0, 0]' : 0.152886}", "{'[0, 2, 0, 5, 2, 6, 0, 0, 20, 0, 29, 9, 0, 0, 1, 0, 0, 0]' : 0.152644}", "{'[0, 2, 0, 5, 2, 6, 0, 0, 20, 0, 29, 9, 0, 0, 1, 0, 0, 0]' : 0.152589}", "{'[0, 2, 0, 5, 2, 6, 0, 0, 20, 0, 29, 9, 0, 0, 1, 0, 0, 0]' : 0.152676}", "{'[0, 2, 0, 5, 2, 6, 0, 0, 20, 0, 29, 9, 0, 0, 1, 0, 0, 0]' : 0.152606}", "{'[0, 2, 0, 5, 2, 6, 0, 0, 20, 0, 29, 9, 0, 0, 1, 0, 0, 0]' : 0.152582}", "{'[0, 2, 0, 5, 2, 6, 0, 0, 20, 0, 29, 9, 0, 0, 1, 0, 0, 0]' : 0.152938}", "{'[0, 2, 0, 5, 2, 6, 0, 0, 20, 0, 29, 9, 0, 0, 1, 0, 0, 0]' : 0.152553}", "{'[0, 2, 0, 5, 2, 6, 0, 0, 20, 0, 29, 9, 0, 0, 1, 0, 0, 0]' : 0.152787}", "{'[0, 2, 0, 5, 2, 6, 0, 0, 20, 0, 29, 9, 0, 0, 1, 0, 0, 0]' : 0.152637}", "{'[0, 2, 0, 5, 2, 6, 0, 0, 20, 0, 29, 9, 0, 0, 1, 0, 0, 0]' : 0.152675}", "{'[0, 2, 0, 5, 2, 6, 0, 0, 20, 0, 29, 9, 0, 0, 1, 0, 0, 0]' : 0.152575}", "{'[0, 2, 0, 5, 2, 6, 0, 0, 20, 0, 29, 9, 0, 0, 1, 0, 0, 0]' : 0.152528}", "{'[0, 2, 0, 5, 2, 6, 0, 0, 20, 0, 29, 9, 0, 0, 1, 0, 0, 0]' : 0.152683}", "{'[0, 2, 0, 5, 2, 6, 0, 0, 20, 0, 29, 9, 0, 0, 1, 0, 0, 0]' : 0.152582}", "{'[0, 2, 0, 5, 2, 6, 0, 0, 20, 0, 29, 9, 0, 0, 1, 0, 0, 0]' : 0.152629}", "{'[0, 2, 0, 5, 2, 6, 0, 0, 20, 0, 29, 9, 0, 0, 1, 0, 0, 0]' : 0.152966}", "{'[0, 2, 0, 5, 2, 6, 0, 0, 20, 0, 29, 9, 0, 0, 1, 0, 0, 0]' : 0.152592}", "{'[0, 2, 0, 5, 2, 6, 0, 0, 20, 0, 29, 9, 0, 0, 1, 0, 0, 0]' : 0.15255}", "{'[0, 2, 0, 5, 2, 6, 0, 0, 20, 0, 29, 9, 0, 0, 1, 0, 0, 0]' : 0.152646}", "{'[0, 2, 0, 5, 2, 6, 0, 0, 20, 0, 29, 9, 0, 0, 1, 0, 0, 0]' : 0.152675}", "{'[0, 2, 0, 5, 2, 6, 0, 0, 20, 0, 29, 9, 0, 0, 1, 0, 0, 0]' : 0.152691}", "{'[0, 2, 0, 5, 2, 6, 0, 0, 20, 0, 29, 9, 0, 0, 1, 0, 0, 0]' : 0.152582}", "{'[0, 2, 0, 5, 2, 6, 0, 0, 20, 0, 29, 9, 0, 0, 1, 0, 0, 0]' : 0.152669}", "{'[0, 2, 0, 5, 2, 6, 0, 0, 20, 0, 29, 9, 0, 0, 1, 0, 0, 0]' : 0.152487}"]
returning from 'run': {'[0, 2, 0, 5, 2, 6, 0, 0, 20, 0, 29, 9, 0, 0, 1, 0, 0, 0]': ([0.152846, 0.153036, 0.152637, 0.152614, 0.15252, 0.152886, 0.152644, 0.152589, 0.152676, 0.152606, 0.152582, 0.152938, 0.152553, 0.152787, 0.152637, 0.152675, 0.152575, 0.152528, 0.152683, 0.152582, 0.152629, 0.152966, 0.152592, 0.15255, 0.152646, 0.152675, 0.152691, 0.152582, 0.152669, 0.152487], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 0, 5, 2, 6, 0, 0, 20, 0, 29, 9, 0, 0, 1, 0, 0, 0]': ([0.152846, 0.153036, 0.152637, 0.152614, 0.15252, 0.152886, 0.152644, 0.152589, 0.152676, 0.152606, 0.152582, 0.152938, 0.152553, 0.152787, 0.152637, 0.152675, 0.152575, 0.152528, 0.152683, 0.152582, 0.152629, 0.152966, 0.152592, 0.15255, 0.152646, 0.152675, 0.152691, 0.152582, 0.152669, 0.152487], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	169
        Max loop nest depth: 	6
        Additions: 		2483
        Multiplications: 	434
        Divisions: 		0
        Logical: 		0
        Reads: 			4304
        Writes: 		709
        Comparisons:		169
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest38.exe __orio_perftest38.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest38.exe  
Program Test Output: 
{'[3, 5, 2, 6, 0, 6, 1, 1, 28, 29, 4, 0, 0, 0, 0, 0, 0, 0]' : 0.237335}
{'[3, 5, 2, 6, 0, 6, 1, 1, 28, 29, 4, 0, 0, 0, 0, 0, 0, 0]' : 0.236873}
{'[3, 5, 2, 6, 0, 6, 1, 1, 28, 29, 4, 0, 0, 0, 0, 0, 0, 0]' : 0.237121}
{'[3, 5, 2, 6, 0, 6, 1, 1, 28, 29, 4, 0, 0, 0, 0, 0, 0, 0]' : 0.236787}
{'[3, 5, 2, 6, 0, 6, 1, 1, 28, 29, 4, 0, 0, 0, 0, 0, 0, 0]' : 0.236766}
{'[3, 5, 2, 6, 0, 6, 1, 1, 28, 29, 4, 0, 0, 0, 0, 0, 0, 0]' : 0.236629}
{'[3, 5, 2, 6, 0, 6, 1, 1, 28, 29, 4, 0, 0, 0, 0, 0, 0, 0]' : 0.236818}
{'[3, 5, 2, 6, 0, 6, 1, 1, 28, 29, 4, 0, 0, 0, 0, 0, 0, 0]' : 0.236893}
{'[3, 5, 2, 6, 0, 6, 1, 1, 28, 29, 4, 0, 0, 0, 0, 0, 0, 0]' : 0.237135}
{'[3, 5, 2, 6, 0, 6, 1, 1, 28, 29, 4, 0, 0, 0, 0, 0, 0, 0]' : 0.236716}
{'[3, 5, 2, 6, 0, 6, 1, 1, 28, 29, 4, 0, 0, 0, 0, 0, 0, 0]' : 0.236819}
{'[3, 5, 2, 6, 0, 6, 1, 1, 28, 29, 4, 0, 0, 0, 0, 0, 0, 0]' : 0.236673}
{'[3, 5, 2, 6, 0, 6, 1, 1, 28, 29, 4, 0, 0, 0, 0, 0, 0, 0]' : 0.2367}
{'[3, 5, 2, 6, 0, 6, 1, 1, 28, 29, 4, 0, 0, 0, 0, 0, 0, 0]' : 0.236655}
{'[3, 5, 2, 6, 0, 6, 1, 1, 28, 29, 4, 0, 0, 0, 0, 0, 0, 0]' : 0.237123}
{'[3, 5, 2, 6, 0, 6, 1, 1, 28, 29, 4, 0, 0, 0, 0, 0, 0, 0]' : 0.236689}
{'[3, 5, 2, 6, 0, 6, 1, 1, 28, 29, 4, 0, 0, 0, 0, 0, 0, 0]' : 0.236863}
{'[3, 5, 2, 6, 0, 6, 1, 1, 28, 29, 4, 0, 0, 0, 0, 0, 0, 0]' : 0.236541}
{'[3, 5, 2, 6, 0, 6, 1, 1, 28, 29, 4, 0, 0, 0, 0, 0, 0, 0]' : 0.236829}
{'[3, 5, 2, 6, 0, 6, 1, 1, 28, 29, 4, 0, 0, 0, 0, 0, 0, 0]' : 0.236791}
{'[3, 5, 2, 6, 0, 6, 1, 1, 28, 29, 4, 0, 0, 0, 0, 0, 0, 0]' : 0.236926}
{'[3, 5, 2, 6, 0, 6, 1, 1, 28, 29, 4, 0, 0, 0, 0, 0, 0, 0]' : 0.237153}
{'[3, 5, 2, 6, 0, 6, 1, 1, 28, 29, 4, 0, 0, 0, 0, 0, 0, 0]' : 0.236822}
{'[3, 5, 2, 6, 0, 6, 1, 1, 28, 29, 4, 0, 0, 0, 0, 0, 0, 0]' : 0.236767}
{'[3, 5, 2, 6, 0, 6, 1, 1, 28, 29, 4, 0, 0, 0, 0, 0, 0, 0]' : 0.236773}
{'[3, 5, 2, 6, 0, 6, 1, 1, 28, 29, 4, 0, 0, 0, 0, 0, 0, 0]' : 0.236794}
{'[3, 5, 2, 6, 0, 6, 1, 1, 28, 29, 4, 0, 0, 0, 0, 0, 0, 0]' : 0.236707}
{'[3, 5, 2, 6, 0, 6, 1, 1, 28, 29, 4, 0, 0, 0, 0, 0, 0, 0]' : 0.237124}
{'[3, 5, 2, 6, 0, 6, 1, 1, 28, 29, 4, 0, 0, 0, 0, 0, 0, 0]' : 0.236929}
{'[3, 5, 2, 6, 0, 6, 1, 1, 28, 29, 4, 0, 0, 0, 0, 0, 0, 0]' : 0.23672}

out:
 ["{'[3, 5, 2, 6, 0, 6, 1, 1, 28, 29, 4, 0, 0, 0, 0, 0, 0, 0]' : 0.237335}", "{'[3, 5, 2, 6, 0, 6, 1, 1, 28, 29, 4, 0, 0, 0, 0, 0, 0, 0]' : 0.236873}", "{'[3, 5, 2, 6, 0, 6, 1, 1, 28, 29, 4, 0, 0, 0, 0, 0, 0, 0]' : 0.237121}", "{'[3, 5, 2, 6, 0, 6, 1, 1, 28, 29, 4, 0, 0, 0, 0, 0, 0, 0]' : 0.236787}", "{'[3, 5, 2, 6, 0, 6, 1, 1, 28, 29, 4, 0, 0, 0, 0, 0, 0, 0]' : 0.236766}", "{'[3, 5, 2, 6, 0, 6, 1, 1, 28, 29, 4, 0, 0, 0, 0, 0, 0, 0]' : 0.236629}", "{'[3, 5, 2, 6, 0, 6, 1, 1, 28, 29, 4, 0, 0, 0, 0, 0, 0, 0]' : 0.236818}", "{'[3, 5, 2, 6, 0, 6, 1, 1, 28, 29, 4, 0, 0, 0, 0, 0, 0, 0]' : 0.236893}", "{'[3, 5, 2, 6, 0, 6, 1, 1, 28, 29, 4, 0, 0, 0, 0, 0, 0, 0]' : 0.237135}", "{'[3, 5, 2, 6, 0, 6, 1, 1, 28, 29, 4, 0, 0, 0, 0, 0, 0, 0]' : 0.236716}", "{'[3, 5, 2, 6, 0, 6, 1, 1, 28, 29, 4, 0, 0, 0, 0, 0, 0, 0]' : 0.236819}", "{'[3, 5, 2, 6, 0, 6, 1, 1, 28, 29, 4, 0, 0, 0, 0, 0, 0, 0]' : 0.236673}", "{'[3, 5, 2, 6, 0, 6, 1, 1, 28, 29, 4, 0, 0, 0, 0, 0, 0, 0]' : 0.2367}", "{'[3, 5, 2, 6, 0, 6, 1, 1, 28, 29, 4, 0, 0, 0, 0, 0, 0, 0]' : 0.236655}", "{'[3, 5, 2, 6, 0, 6, 1, 1, 28, 29, 4, 0, 0, 0, 0, 0, 0, 0]' : 0.237123}", "{'[3, 5, 2, 6, 0, 6, 1, 1, 28, 29, 4, 0, 0, 0, 0, 0, 0, 0]' : 0.236689}", "{'[3, 5, 2, 6, 0, 6, 1, 1, 28, 29, 4, 0, 0, 0, 0, 0, 0, 0]' : 0.236863}", "{'[3, 5, 2, 6, 0, 6, 1, 1, 28, 29, 4, 0, 0, 0, 0, 0, 0, 0]' : 0.236541}", "{'[3, 5, 2, 6, 0, 6, 1, 1, 28, 29, 4, 0, 0, 0, 0, 0, 0, 0]' : 0.236829}", "{'[3, 5, 2, 6, 0, 6, 1, 1, 28, 29, 4, 0, 0, 0, 0, 0, 0, 0]' : 0.236791}", "{'[3, 5, 2, 6, 0, 6, 1, 1, 28, 29, 4, 0, 0, 0, 0, 0, 0, 0]' : 0.236926}", "{'[3, 5, 2, 6, 0, 6, 1, 1, 28, 29, 4, 0, 0, 0, 0, 0, 0, 0]' : 0.237153}", "{'[3, 5, 2, 6, 0, 6, 1, 1, 28, 29, 4, 0, 0, 0, 0, 0, 0, 0]' : 0.236822}", "{'[3, 5, 2, 6, 0, 6, 1, 1, 28, 29, 4, 0, 0, 0, 0, 0, 0, 0]' : 0.236767}", "{'[3, 5, 2, 6, 0, 6, 1, 1, 28, 29, 4, 0, 0, 0, 0, 0, 0, 0]' : 0.236773}", "{'[3, 5, 2, 6, 0, 6, 1, 1, 28, 29, 4, 0, 0, 0, 0, 0, 0, 0]' : 0.236794}", "{'[3, 5, 2, 6, 0, 6, 1, 1, 28, 29, 4, 0, 0, 0, 0, 0, 0, 0]' : 0.236707}", "{'[3, 5, 2, 6, 0, 6, 1, 1, 28, 29, 4, 0, 0, 0, 0, 0, 0, 0]' : 0.237124}", "{'[3, 5, 2, 6, 0, 6, 1, 1, 28, 29, 4, 0, 0, 0, 0, 0, 0, 0]' : 0.236929}", "{'[3, 5, 2, 6, 0, 6, 1, 1, 28, 29, 4, 0, 0, 0, 0, 0, 0, 0]' : 0.23672}"]
returning from 'run': {'[3, 5, 2, 6, 0, 6, 1, 1, 28, 29, 4, 0, 0, 0, 0, 0, 0, 0]': ([0.237335, 0.236873, 0.237121, 0.236787, 0.236766, 0.236629, 0.236818, 0.236893, 0.237135, 0.236716, 0.236819, 0.236673, 0.2367, 0.236655, 0.237123, 0.236689, 0.236863, 0.236541, 0.236829, 0.236791, 0.236926, 0.237153, 0.236822, 0.236767, 0.236773, 0.236794, 0.236707, 0.237124, 0.236929, 0.23672], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 5, 2, 6, 0, 6, 1, 1, 28, 29, 4, 0, 0, 0, 0, 0, 0, 0]': ([0.237335, 0.236873, 0.237121, 0.236787, 0.236766, 0.236629, 0.236818, 0.236893, 0.237135, 0.236716, 0.236819, 0.236673, 0.2367, 0.236655, 0.237123, 0.236689, 0.236863, 0.236541, 0.236829, 0.236791, 0.236926, 0.237153, 0.236822, 0.236767, 0.236773, 0.236794, 0.236707, 0.237124, 0.236929, 0.23672], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	70
        Max loop nest depth: 	5
        Additions: 		5595
        Multiplications: 	2310
        Divisions: 		0
        Logical: 		0
        Reads: 			9929
        Writes: 		1553
        Comparisons:		70
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest39.exe __orio_perftest39.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest39.exe  
Program Test Output: 
{'[0, 3, 0, 2, 6, 0, 0, 0, 29, 23, 24, 0, 1, 1, 0, 1, 1, 1]' : 0.0777829}
{'[0, 3, 0, 2, 6, 0, 0, 0, 29, 23, 24, 0, 1, 1, 0, 1, 1, 1]' : 0.0770152}
{'[0, 3, 0, 2, 6, 0, 0, 0, 29, 23, 24, 0, 1, 1, 0, 1, 1, 1]' : 0.0769138}
{'[0, 3, 0, 2, 6, 0, 0, 0, 29, 23, 24, 0, 1, 1, 0, 1, 1, 1]' : 0.077034}
{'[0, 3, 0, 2, 6, 0, 0, 0, 29, 23, 24, 0, 1, 1, 0, 1, 1, 1]' : 0.0770049}
{'[0, 3, 0, 2, 6, 0, 0, 0, 29, 23, 24, 0, 1, 1, 0, 1, 1, 1]' : 0.0770521}
{'[0, 3, 0, 2, 6, 0, 0, 0, 29, 23, 24, 0, 1, 1, 0, 1, 1, 1]' : 0.0769799}
{'[0, 3, 0, 2, 6, 0, 0, 0, 29, 23, 24, 0, 1, 1, 0, 1, 1, 1]' : 0.0770321}
{'[0, 3, 0, 2, 6, 0, 0, 0, 29, 23, 24, 0, 1, 1, 0, 1, 1, 1]' : 0.076951}
{'[0, 3, 0, 2, 6, 0, 0, 0, 29, 23, 24, 0, 1, 1, 0, 1, 1, 1]' : 0.0769491}
{'[0, 3, 0, 2, 6, 0, 0, 0, 29, 23, 24, 0, 1, 1, 0, 1, 1, 1]' : 0.077003}
{'[0, 3, 0, 2, 6, 0, 0, 0, 29, 23, 24, 0, 1, 1, 0, 1, 1, 1]' : 0.077008}
{'[0, 3, 0, 2, 6, 0, 0, 0, 29, 23, 24, 0, 1, 1, 0, 1, 1, 1]' : 0.076967}
{'[0, 3, 0, 2, 6, 0, 0, 0, 29, 23, 24, 0, 1, 1, 0, 1, 1, 1]' : 0.077049}
{'[0, 3, 0, 2, 6, 0, 0, 0, 29, 23, 24, 0, 1, 1, 0, 1, 1, 1]' : 0.0770099}
{'[0, 3, 0, 2, 6, 0, 0, 0, 29, 23, 24, 0, 1, 1, 0, 1, 1, 1]' : 0.0776401}
{'[0, 3, 0, 2, 6, 0, 0, 0, 29, 23, 24, 0, 1, 1, 0, 1, 1, 1]' : 0.0769751}
{'[0, 3, 0, 2, 6, 0, 0, 0, 29, 23, 24, 0, 1, 1, 0, 1, 1, 1]' : 0.0770321}
{'[0, 3, 0, 2, 6, 0, 0, 0, 29, 23, 24, 0, 1, 1, 0, 1, 1, 1]' : 0.0770659}
{'[0, 3, 0, 2, 6, 0, 0, 0, 29, 23, 24, 0, 1, 1, 0, 1, 1, 1]' : 0.0770261}
{'[0, 3, 0, 2, 6, 0, 0, 0, 29, 23, 24, 0, 1, 1, 0, 1, 1, 1]' : 0.076988}
{'[0, 3, 0, 2, 6, 0, 0, 0, 29, 23, 24, 0, 1, 1, 0, 1, 1, 1]' : 0.0770309}
{'[0, 3, 0, 2, 6, 0, 0, 0, 29, 23, 24, 0, 1, 1, 0, 1, 1, 1]' : 0.0769751}
{'[0, 3, 0, 2, 6, 0, 0, 0, 29, 23, 24, 0, 1, 1, 0, 1, 1, 1]' : 0.0770249}
{'[0, 3, 0, 2, 6, 0, 0, 0, 29, 23, 24, 0, 1, 1, 0, 1, 1, 1]' : 0.0770531}
{'[0, 3, 0, 2, 6, 0, 0, 0, 29, 23, 24, 0, 1, 1, 0, 1, 1, 1]' : 0.07706}
{'[0, 3, 0, 2, 6, 0, 0, 0, 29, 23, 24, 0, 1, 1, 0, 1, 1, 1]' : 0.0770171}
{'[0, 3, 0, 2, 6, 0, 0, 0, 29, 23, 24, 0, 1, 1, 0, 1, 1, 1]' : 0.0770431}
{'[0, 3, 0, 2, 6, 0, 0, 0, 29, 23, 24, 0, 1, 1, 0, 1, 1, 1]' : 0.077028}
{'[0, 3, 0, 2, 6, 0, 0, 0, 29, 23, 24, 0, 1, 1, 0, 1, 1, 1]' : 0.0770111}

out:
 ["{'[0, 3, 0, 2, 6, 0, 0, 0, 29, 23, 24, 0, 1, 1, 0, 1, 1, 1]' : 0.0777829}", "{'[0, 3, 0, 2, 6, 0, 0, 0, 29, 23, 24, 0, 1, 1, 0, 1, 1, 1]' : 0.0770152}", "{'[0, 3, 0, 2, 6, 0, 0, 0, 29, 23, 24, 0, 1, 1, 0, 1, 1, 1]' : 0.0769138}", "{'[0, 3, 0, 2, 6, 0, 0, 0, 29, 23, 24, 0, 1, 1, 0, 1, 1, 1]' : 0.077034}", "{'[0, 3, 0, 2, 6, 0, 0, 0, 29, 23, 24, 0, 1, 1, 0, 1, 1, 1]' : 0.0770049}", "{'[0, 3, 0, 2, 6, 0, 0, 0, 29, 23, 24, 0, 1, 1, 0, 1, 1, 1]' : 0.0770521}", "{'[0, 3, 0, 2, 6, 0, 0, 0, 29, 23, 24, 0, 1, 1, 0, 1, 1, 1]' : 0.0769799}", "{'[0, 3, 0, 2, 6, 0, 0, 0, 29, 23, 24, 0, 1, 1, 0, 1, 1, 1]' : 0.0770321}", "{'[0, 3, 0, 2, 6, 0, 0, 0, 29, 23, 24, 0, 1, 1, 0, 1, 1, 1]' : 0.076951}", "{'[0, 3, 0, 2, 6, 0, 0, 0, 29, 23, 24, 0, 1, 1, 0, 1, 1, 1]' : 0.0769491}", "{'[0, 3, 0, 2, 6, 0, 0, 0, 29, 23, 24, 0, 1, 1, 0, 1, 1, 1]' : 0.077003}", "{'[0, 3, 0, 2, 6, 0, 0, 0, 29, 23, 24, 0, 1, 1, 0, 1, 1, 1]' : 0.077008}", "{'[0, 3, 0, 2, 6, 0, 0, 0, 29, 23, 24, 0, 1, 1, 0, 1, 1, 1]' : 0.076967}", "{'[0, 3, 0, 2, 6, 0, 0, 0, 29, 23, 24, 0, 1, 1, 0, 1, 1, 1]' : 0.077049}", "{'[0, 3, 0, 2, 6, 0, 0, 0, 29, 23, 24, 0, 1, 1, 0, 1, 1, 1]' : 0.0770099}", "{'[0, 3, 0, 2, 6, 0, 0, 0, 29, 23, 24, 0, 1, 1, 0, 1, 1, 1]' : 0.0776401}", "{'[0, 3, 0, 2, 6, 0, 0, 0, 29, 23, 24, 0, 1, 1, 0, 1, 1, 1]' : 0.0769751}", "{'[0, 3, 0, 2, 6, 0, 0, 0, 29, 23, 24, 0, 1, 1, 0, 1, 1, 1]' : 0.0770321}", "{'[0, 3, 0, 2, 6, 0, 0, 0, 29, 23, 24, 0, 1, 1, 0, 1, 1, 1]' : 0.0770659}", "{'[0, 3, 0, 2, 6, 0, 0, 0, 29, 23, 24, 0, 1, 1, 0, 1, 1, 1]' : 0.0770261}", "{'[0, 3, 0, 2, 6, 0, 0, 0, 29, 23, 24, 0, 1, 1, 0, 1, 1, 1]' : 0.076988}", "{'[0, 3, 0, 2, 6, 0, 0, 0, 29, 23, 24, 0, 1, 1, 0, 1, 1, 1]' : 0.0770309}", "{'[0, 3, 0, 2, 6, 0, 0, 0, 29, 23, 24, 0, 1, 1, 0, 1, 1, 1]' : 0.0769751}", "{'[0, 3, 0, 2, 6, 0, 0, 0, 29, 23, 24, 0, 1, 1, 0, 1, 1, 1]' : 0.0770249}", "{'[0, 3, 0, 2, 6, 0, 0, 0, 29, 23, 24, 0, 1, 1, 0, 1, 1, 1]' : 0.0770531}", "{'[0, 3, 0, 2, 6, 0, 0, 0, 29, 23, 24, 0, 1, 1, 0, 1, 1, 1]' : 0.07706}", "{'[0, 3, 0, 2, 6, 0, 0, 0, 29, 23, 24, 0, 1, 1, 0, 1, 1, 1]' : 0.0770171}", "{'[0, 3, 0, 2, 6, 0, 0, 0, 29, 23, 24, 0, 1, 1, 0, 1, 1, 1]' : 0.0770431}", "{'[0, 3, 0, 2, 6, 0, 0, 0, 29, 23, 24, 0, 1, 1, 0, 1, 1, 1]' : 0.077028}", "{'[0, 3, 0, 2, 6, 0, 0, 0, 29, 23, 24, 0, 1, 1, 0, 1, 1, 1]' : 0.0770111}"]
returning from 'run': {'[0, 3, 0, 2, 6, 0, 0, 0, 29, 23, 24, 0, 1, 1, 0, 1, 1, 1]': ([0.0777829, 0.0770152, 0.0769138, 0.077034, 0.0770049, 0.0770521, 0.0769799, 0.0770321, 0.076951, 0.0769491, 0.077003, 0.077008, 0.076967, 0.077049, 0.0770099, 0.0776401, 0.0769751, 0.0770321, 0.0770659, 0.0770261, 0.076988, 0.0770309, 0.0769751, 0.0770249, 0.0770531, 0.07706, 0.0770171, 0.0770431, 0.077028, 0.0770111], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 3, 0, 2, 6, 0, 0, 0, 29, 23, 24, 0, 1, 1, 0, 1, 1, 1]': ([0.0777829, 0.0770152, 0.0769138, 0.077034, 0.0770049, 0.0770521, 0.0769799, 0.0770321, 0.076951, 0.0769491, 0.077003, 0.077008, 0.076967, 0.077049, 0.0770099, 0.0776401, 0.0769751, 0.0770321, 0.0770659, 0.0770261, 0.076988, 0.0770309, 0.0769751, 0.0770249, 0.0770531, 0.07706, 0.0770171, 0.0770431, 0.077028, 0.0770111], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		5192
        Multiplications: 	1536
        Divisions: 		0
        Logical: 		0
        Reads: 			7850
        Writes: 		802
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest40.exe __orio_perftest40.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest40.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest40.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest40.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/Orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/Orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 525, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors, data)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 406, in dopt_anova
    budget)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 331, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 277, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/phrb/code/Orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest40.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/Orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/Orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 525, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors, data)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 406, in dopt_anova
    budget)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 331, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 277, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/phrb/code/Orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	6
        Additions: 		224
        Multiplications: 	72
        Divisions: 		0
        Logical: 		0
        Reads: 			487
        Writes: 		82
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest41.exe __orio_perftest41.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest41.exe  
Program Test Output: 
{'[3, 4, 4, 3, 5, 4, 0, 0, 9, 0, 1, 0, 0, 0, 2, 0, 1, 1]' : 0.137519}
{'[3, 4, 4, 3, 5, 4, 0, 0, 9, 0, 1, 0, 0, 0, 2, 0, 1, 1]' : 0.137313}
{'[3, 4, 4, 3, 5, 4, 0, 0, 9, 0, 1, 0, 0, 0, 2, 0, 1, 1]' : 0.137486}
{'[3, 4, 4, 3, 5, 4, 0, 0, 9, 0, 1, 0, 0, 0, 2, 0, 1, 1]' : 0.137388}
{'[3, 4, 4, 3, 5, 4, 0, 0, 9, 0, 1, 0, 0, 0, 2, 0, 1, 1]' : 0.137332}
{'[3, 4, 4, 3, 5, 4, 0, 0, 9, 0, 1, 0, 0, 0, 2, 0, 1, 1]' : 0.137615}
{'[3, 4, 4, 3, 5, 4, 0, 0, 9, 0, 1, 0, 0, 0, 2, 0, 1, 1]' : 0.137327}
{'[3, 4, 4, 3, 5, 4, 0, 0, 9, 0, 1, 0, 0, 0, 2, 0, 1, 1]' : 0.1376}
{'[3, 4, 4, 3, 5, 4, 0, 0, 9, 0, 1, 0, 0, 0, 2, 0, 1, 1]' : 0.137403}
{'[3, 4, 4, 3, 5, 4, 0, 0, 9, 0, 1, 0, 0, 0, 2, 0, 1, 1]' : 0.137418}
{'[3, 4, 4, 3, 5, 4, 0, 0, 9, 0, 1, 0, 0, 0, 2, 0, 1, 1]' : 0.137386}
{'[3, 4, 4, 3, 5, 4, 0, 0, 9, 0, 1, 0, 0, 0, 2, 0, 1, 1]' : 0.137412}
{'[3, 4, 4, 3, 5, 4, 0, 0, 9, 0, 1, 0, 0, 0, 2, 0, 1, 1]' : 0.137397}
{'[3, 4, 4, 3, 5, 4, 0, 0, 9, 0, 1, 0, 0, 0, 2, 0, 1, 1]' : 0.137385}
{'[3, 4, 4, 3, 5, 4, 0, 0, 9, 0, 1, 0, 0, 0, 2, 0, 1, 1]' : 0.138346}
{'[3, 4, 4, 3, 5, 4, 0, 0, 9, 0, 1, 0, 0, 0, 2, 0, 1, 1]' : 0.137451}
{'[3, 4, 4, 3, 5, 4, 0, 0, 9, 0, 1, 0, 0, 0, 2, 0, 1, 1]' : 0.137674}
{'[3, 4, 4, 3, 5, 4, 0, 0, 9, 0, 1, 0, 0, 0, 2, 0, 1, 1]' : 0.13745}
{'[3, 4, 4, 3, 5, 4, 0, 0, 9, 0, 1, 0, 0, 0, 2, 0, 1, 1]' : 0.137522}
{'[3, 4, 4, 3, 5, 4, 0, 0, 9, 0, 1, 0, 0, 0, 2, 0, 1, 1]' : 0.137389}
{'[3, 4, 4, 3, 5, 4, 0, 0, 9, 0, 1, 0, 0, 0, 2, 0, 1, 1]' : 0.13744}
{'[3, 4, 4, 3, 5, 4, 0, 0, 9, 0, 1, 0, 0, 0, 2, 0, 1, 1]' : 0.137382}
{'[3, 4, 4, 3, 5, 4, 0, 0, 9, 0, 1, 0, 0, 0, 2, 0, 1, 1]' : 0.137427}
{'[3, 4, 4, 3, 5, 4, 0, 0, 9, 0, 1, 0, 0, 0, 2, 0, 1, 1]' : 0.137386}
{'[3, 4, 4, 3, 5, 4, 0, 0, 9, 0, 1, 0, 0, 0, 2, 0, 1, 1]' : 0.137428}
{'[3, 4, 4, 3, 5, 4, 0, 0, 9, 0, 1, 0, 0, 0, 2, 0, 1, 1]' : 0.137321}
{'[3, 4, 4, 3, 5, 4, 0, 0, 9, 0, 1, 0, 0, 0, 2, 0, 1, 1]' : 0.137287}
{'[3, 4, 4, 3, 5, 4, 0, 0, 9, 0, 1, 0, 0, 0, 2, 0, 1, 1]' : 0.137639}
{'[3, 4, 4, 3, 5, 4, 0, 0, 9, 0, 1, 0, 0, 0, 2, 0, 1, 1]' : 0.137347}
{'[3, 4, 4, 3, 5, 4, 0, 0, 9, 0, 1, 0, 0, 0, 2, 0, 1, 1]' : 0.13743}

out:
 ["{'[3, 4, 4, 3, 5, 4, 0, 0, 9, 0, 1, 0, 0, 0, 2, 0, 1, 1]' : 0.137519}", "{'[3, 4, 4, 3, 5, 4, 0, 0, 9, 0, 1, 0, 0, 0, 2, 0, 1, 1]' : 0.137313}", "{'[3, 4, 4, 3, 5, 4, 0, 0, 9, 0, 1, 0, 0, 0, 2, 0, 1, 1]' : 0.137486}", "{'[3, 4, 4, 3, 5, 4, 0, 0, 9, 0, 1, 0, 0, 0, 2, 0, 1, 1]' : 0.137388}", "{'[3, 4, 4, 3, 5, 4, 0, 0, 9, 0, 1, 0, 0, 0, 2, 0, 1, 1]' : 0.137332}", "{'[3, 4, 4, 3, 5, 4, 0, 0, 9, 0, 1, 0, 0, 0, 2, 0, 1, 1]' : 0.137615}", "{'[3, 4, 4, 3, 5, 4, 0, 0, 9, 0, 1, 0, 0, 0, 2, 0, 1, 1]' : 0.137327}", "{'[3, 4, 4, 3, 5, 4, 0, 0, 9, 0, 1, 0, 0, 0, 2, 0, 1, 1]' : 0.1376}", "{'[3, 4, 4, 3, 5, 4, 0, 0, 9, 0, 1, 0, 0, 0, 2, 0, 1, 1]' : 0.137403}", "{'[3, 4, 4, 3, 5, 4, 0, 0, 9, 0, 1, 0, 0, 0, 2, 0, 1, 1]' : 0.137418}", "{'[3, 4, 4, 3, 5, 4, 0, 0, 9, 0, 1, 0, 0, 0, 2, 0, 1, 1]' : 0.137386}", "{'[3, 4, 4, 3, 5, 4, 0, 0, 9, 0, 1, 0, 0, 0, 2, 0, 1, 1]' : 0.137412}", "{'[3, 4, 4, 3, 5, 4, 0, 0, 9, 0, 1, 0, 0, 0, 2, 0, 1, 1]' : 0.137397}", "{'[3, 4, 4, 3, 5, 4, 0, 0, 9, 0, 1, 0, 0, 0, 2, 0, 1, 1]' : 0.137385}", "{'[3, 4, 4, 3, 5, 4, 0, 0, 9, 0, 1, 0, 0, 0, 2, 0, 1, 1]' : 0.138346}", "{'[3, 4, 4, 3, 5, 4, 0, 0, 9, 0, 1, 0, 0, 0, 2, 0, 1, 1]' : 0.137451}", "{'[3, 4, 4, 3, 5, 4, 0, 0, 9, 0, 1, 0, 0, 0, 2, 0, 1, 1]' : 0.137674}", "{'[3, 4, 4, 3, 5, 4, 0, 0, 9, 0, 1, 0, 0, 0, 2, 0, 1, 1]' : 0.13745}", "{'[3, 4, 4, 3, 5, 4, 0, 0, 9, 0, 1, 0, 0, 0, 2, 0, 1, 1]' : 0.137522}", "{'[3, 4, 4, 3, 5, 4, 0, 0, 9, 0, 1, 0, 0, 0, 2, 0, 1, 1]' : 0.137389}", "{'[3, 4, 4, 3, 5, 4, 0, 0, 9, 0, 1, 0, 0, 0, 2, 0, 1, 1]' : 0.13744}", "{'[3, 4, 4, 3, 5, 4, 0, 0, 9, 0, 1, 0, 0, 0, 2, 0, 1, 1]' : 0.137382}", "{'[3, 4, 4, 3, 5, 4, 0, 0, 9, 0, 1, 0, 0, 0, 2, 0, 1, 1]' : 0.137427}", "{'[3, 4, 4, 3, 5, 4, 0, 0, 9, 0, 1, 0, 0, 0, 2, 0, 1, 1]' : 0.137386}", "{'[3, 4, 4, 3, 5, 4, 0, 0, 9, 0, 1, 0, 0, 0, 2, 0, 1, 1]' : 0.137428}", "{'[3, 4, 4, 3, 5, 4, 0, 0, 9, 0, 1, 0, 0, 0, 2, 0, 1, 1]' : 0.137321}", "{'[3, 4, 4, 3, 5, 4, 0, 0, 9, 0, 1, 0, 0, 0, 2, 0, 1, 1]' : 0.137287}", "{'[3, 4, 4, 3, 5, 4, 0, 0, 9, 0, 1, 0, 0, 0, 2, 0, 1, 1]' : 0.137639}", "{'[3, 4, 4, 3, 5, 4, 0, 0, 9, 0, 1, 0, 0, 0, 2, 0, 1, 1]' : 0.137347}", "{'[3, 4, 4, 3, 5, 4, 0, 0, 9, 0, 1, 0, 0, 0, 2, 0, 1, 1]' : 0.13743}"]
returning from 'run': {'[3, 4, 4, 3, 5, 4, 0, 0, 9, 0, 1, 0, 0, 0, 2, 0, 1, 1]': ([0.137519, 0.137313, 0.137486, 0.137388, 0.137332, 0.137615, 0.137327, 0.1376, 0.137403, 0.137418, 0.137386, 0.137412, 0.137397, 0.137385, 0.138346, 0.137451, 0.137674, 0.13745, 0.137522, 0.137389, 0.13744, 0.137382, 0.137427, 0.137386, 0.137428, 0.137321, 0.137287, 0.137639, 0.137347, 0.13743], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 4, 4, 3, 5, 4, 0, 0, 9, 0, 1, 0, 0, 0, 2, 0, 1, 1]': ([0.137519, 0.137313, 0.137486, 0.137388, 0.137332, 0.137615, 0.137327, 0.1376, 0.137403, 0.137418, 0.137386, 0.137412, 0.137397, 0.137385, 0.138346, 0.137451, 0.137674, 0.13745, 0.137522, 0.137389, 0.13744, 0.137382, 0.137427, 0.137386, 0.137428, 0.137321, 0.137287, 0.137639, 0.137347, 0.13743], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Complete design, with measurements:
   T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
1     0    5    0    6    3    0       1       0    3  17   0   0    1    1
2     1    3    3    2    0    1       0       1    0   3  17   0    0    0
3     4    6    0    2    0    6       1       0   26   6   0  14    1    1
4     5    0    4    5    6    2       1       0   29   4   0  27    0    1
6     6    3    5    5    3    5       0       0    5  28   3   0    0    0
8     2    3    0    2    3    2       0       1   15  22   0  29    0    1
9     0    3    4    4    0    3       0       0   14   0   0   8    1    0
10    1    2    2    3    3    6       1       1   19   0   7  24    1    1
11    4    0    0    2    2    2       1       1   27  13  10   0    2    0
12    2    4    1    0    3    2       1       0   29  23   0   2    1    0
13    3    3    6    3    1    4       1       0   16   8  28   0    1    1
14    2    0    4    6    5    2       1       1    8  28   0   5    0    1
15    2    0    6    0    4    6       0       1   28   0   3   7    0    0
17    5    1    3    3    4    1       0       0    8   7   0   6    0    0
18    4    5    2    2    3    6       0       0   21  23  25   0    0    1
19    2    5    0    0    6    1       1       0    5   0  15  19    0    1
21    5    3    4    4    1    0       0       1    6   0   0  27    0    2
22    5    0    1    5    3    0       1       0   18   6   0  29    1    0
24    5    0    2    0    0    4       1       0    0   0  11  13    1    1
25    3    1    6    2    6    0       1       0    1  20   0   6    2    0
26    0    3    3    6    3    3       1       0   27   3   7   0    1    1
27    0    4    2    1    4    0       0       1   24   0  21   7    0    1
28    3    2    5    0    4    5       0       0   25   0   8  13    0    0
29    5    1    3    4    6    5       1       1    8   0  26   0    1    0
30    2    0    0    4    4    5       0       1   13   1   0   3    1    1
31    2    5    5    5    3    4       0       0    9   0  22  29    2    0
34    6    3    6    0    4    4       1       1   12   0   0  15    0    1
35    1    0    0    2    5    2       1       1   11  23   4   0    1    0
36    5    6    2    4    4    2       0       1   24   0  16   8    1    1
37    0    2    0    5    2    6       0       0   20   0  29   9    0    0
38    3    5    2    6    0    6       1       1   28  29   4   0    0    0
39    0    3    0    2    6    0       0       0   29  23  24   0    1    1
41    3    4    4    3    5    4       0       0    9   0   1   0    0    0
   RT_K SCR VEC1 VEC2  cost_mean
1     0   0    0    1 0.08244947
2     1   0    0    0 0.13202897
3     0   0    1    0 0.09910000
4     0   1    0    0 0.09981266
6     1   1    1    0 0.14130847
8     1   0    1    1 0.15455033
9     1   1    1    0 0.08098881
10    0   1    1    1 0.09679354
11    0   0    1    1 0.21905930
12    0   1    0    0 0.09999784
13    0   0    0    1 0.08187135
14    1   0    1    0 0.24610570
15    1   1    1    1 0.15641643
17    0   1    0    1 0.08545681
18    1   1    0    0 0.11147930
19    1   1    0    1 0.14762680
21    0   0    0    0 0.18647460
22    1   1    0    1 0.08163098
24    0   0    0    0 0.10645740
25    0   1    0    0 0.20087757
26    0   0    0    0 0.10474573
27    0   0    1    0 0.22025520
28    2   0    0    0 0.16378137
29    1   0    1    0 0.08999567
30    0   1    1    0 0.08264099
31    0   0    1    0 0.27649720
34    0   1    0    1 0.16448237
35    0   0    0    0 0.08846247
36    0   1    0    1 0.09314553
37    1   0    0    0 0.15266937
38    0   0    0    0 0.23684903
39    0   1    1    1 0.07705742
41    2   0    1    1 0.13746333

Step Space Names:  [1] "T1_I"    "T1_J"    "T1_K"    "T2_I"    "T2_J"    "T2_K"    "ACOPY_x"
 [8] "ACOPY_y" "U1_I"    "U_I"     "U_J"     "U_K"     "RT_I"    "RT_J"   
[15] "RT_K"    "SCR"     "VEC1"    "VEC2"   

Initial Regression Step:                 Df   Sum Sq  Mean Sq F value Pr(>F)
T1_I             1 0.000007 0.000007   0.004  0.961
T1_J             1 0.000485 0.000485   0.250  0.705
T1_K             1 0.009903 0.009903   5.104  0.265
T2_I             1 0.000139 0.000139   0.071  0.834
T2_J             1 0.000021 0.000021   0.011  0.934
T2_K             1 0.000262 0.000262   0.135  0.776
ACOPY_x          1 0.000025 0.000025   0.013  0.929
ACOPY_y          1 0.011545 0.011545   5.950  0.248
U1_I             1 0.000000 0.000000   0.000  0.995
U_I              1 0.003508 0.003508   1.808  0.407
U_J              1 0.000529 0.000529   0.273  0.694
U_K              1 0.009282 0.009282   4.783  0.273
RT_I             1 0.000242 0.000242   0.125  0.784
RT_J             1 0.004518 0.004518   2.329  0.369
RT_K             1 0.000003 0.000003   0.002  0.974
SCR              1 0.012786 0.012786   6.589  0.236
VEC1             1 0.000988 0.000988   0.509  0.605
VEC2             1 0.001718 0.001718   0.885  0.519
I(1/(1 + T1_I))  1 0.000358 0.000358   0.185  0.742
I(1/(1 + T1_J))  1 0.002829 0.002829   1.458  0.440
I(1/(1 + T1_K))  1 0.000749 0.000749   0.386  0.646
I(1/(1 + T2_I))  1 0.004866 0.004866   2.508  0.359
I(1/(1 + T2_J))  1 0.000878 0.000878   0.453  0.623
I(1/(1 + T2_K))  1 0.001452 0.001452   0.748  0.546
I(1/(1 + U1_I))  1 0.000141 0.000141   0.073  0.832
I(1/(1 + U_I))   1 0.004824 0.004824   2.486  0.360
I(1/(1 + U_J))   1 0.000054 0.000054   0.028  0.895
I(1/(1 + U_K))   1 0.002931 0.002931   1.510  0.435
I(1/(1 + RT_I))  1 0.022870 0.022870  11.786  0.180
I(1/(1 + RT_J))  1 0.000306 0.000306   0.158  0.759
I(1/(1 + RT_K))  1 0.000252 0.000252   0.130  0.780
Residuals        1 0.001940 0.001940               

Heteroscedasticity Test p-value: 0.147596997823
Regression Step:                Df   Sum Sq  Mean Sq F value Pr(>F)
T1_I             1 0.000007 0.000007   0.004  0.961
T1_J             1 0.000485 0.000485   0.250  0.705
T1_K             1 0.009903 0.009903   5.104  0.265
T2_I             1 0.000139 0.000139   0.071  0.834
T2_J             1 0.000021 0.000021   0.011  0.934
T2_K             1 0.000262 0.000262   0.135  0.776
ACOPY_x          1 0.000025 0.000025   0.013  0.929
ACOPY_y          1 0.011545 0.011545   5.950  0.248
U1_I             1 0.000000 0.000000   0.000  0.995
U_I              1 0.003508 0.003508   1.808  0.407
U_J              1 0.000529 0.000529   0.273  0.694
U_K              1 0.009282 0.009282   4.783  0.273
RT_I             1 0.000242 0.000242   0.125  0.784
RT_J             1 0.004518 0.004518   2.329  0.369
RT_K             1 0.000003 0.000003   0.002  0.974
SCR              1 0.012786 0.012786   6.589  0.236
VEC1             1 0.000988 0.000988   0.509  0.605
VEC2             1 0.001718 0.001718   0.885  0.519
I(1/(1 + T1_I))  1 0.000358 0.000358   0.185  0.742
I(1/(1 + T1_J))  1 0.002829 0.002829   1.458  0.440
I(1/(1 + T1_K))  1 0.000749 0.000749   0.386  0.646
I(1/(1 + T2_I))  1 0.004866 0.004866   2.508  0.359
I(1/(1 + T2_J))  1 0.000878 0.000878   0.453  0.623
I(1/(1 + T2_K))  1 0.001452 0.001452   0.748  0.546
I(1/(1 + U1_I))  1 0.000141 0.000141   0.073  0.832
I(1/(1 + U_I))   1 0.004824 0.004824   2.486  0.360
I(1/(1 + U_J))   1 0.000054 0.000054   0.028  0.895
I(1/(1 + U_K))   1 0.002931 0.002931   1.510  0.435
I(1/(1 + RT_I))  1 0.022870 0.022870  11.786  0.180
I(1/(1 + RT_J))  1 0.000306 0.000306   0.158  0.759
I(1/(1 + RT_K))  1 0.000252 0.000252   0.130  0.780
Residuals        1 0.001940 0.001940               

Predicting Best
Identical predictions (tol = 1e-5): 1
Getting Best from Design
