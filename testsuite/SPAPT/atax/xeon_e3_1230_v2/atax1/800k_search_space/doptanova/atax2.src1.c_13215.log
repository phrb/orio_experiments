
====== START ORIO ======

----- begin reading the source file: atax2.src1.c -----
----- finished reading the source file -----

----- begin parsing annotations -----
----- finished parsing annotations -----

----- begin optimizations -----
Search_Space         = 8.234e+13
Number_of_Parameters = 18
Numeric_Parameters   = 13
Binary_Parameters    = 05
['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
[[1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [False, True], [False, True], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 8, 32], [1, 8, 32], [1, 8, 32], [False, True], [False, True], [False, True]]

----- begin empirical tuning for problem size -----
 N = 10000
Parameters: {'ACOPY_x': [0, 2], 'ACOPY_y': [0, 2], 'RT_K': [0, 3], 'T1_I': [0, 7], 'T1_J': [0, 7], 'T1_K': [0, 7], 'U_K': [0, 30], 'U_J': [0, 30], 'U_I': [0, 30], 'U1_I': [0, 30], 'T2_K': [0, 7], 'T2_J': [0, 7], 'T2_I': [0, 7], 'VEC2': [0, 2], 'VEC1': [0, 2], 'RT_I': [0, 3], 'SCR': [0, 2], 'RT_J': [0, 3]}

----- begin random search -----
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Inverse Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Building seed search space (does not spend evaluations)
Using pre-generated space for this size
Starting DOPT-anova
Step 0
Full Model:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Fixed Factors: {}
Full data does not fit on budget
Computing D-Optimal Design
Updating Constraints
Updated Constraint: True and (((T2_I ==1 )or (T2_I %T1_I ==0 ))) and (((T2_J ==1 )or (T2_J %T1_J ==0 ))) and (((T2_K ==1 )or (T2_K %T1_K ==0 ))) and ((RT_I *RT_J +RT_I *RT_K +RT_J *RT_K <=150 )) and (((U_I ==1 )or (U_J ==1 )or (U_K ==1 )))
Computing D-Optimal Design with 36 experiments
Design Formula:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Starting "optMonteCarlo" run
       var low high center nLevels round factor   mix
1     T1_I   0    6      0       7     0  FALSE FALSE
2     T1_J   0    6      0       7     0  FALSE FALSE
3     T1_K   0    6      0       7     0  FALSE FALSE
4     T2_I   0    6      0       7     0  FALSE FALSE
5     T2_J   0    6      0       7     0  FALSE FALSE
6     T2_K   0    6      0       7     0  FALSE FALSE
7  ACOPY_x   0    1      0       2     0  FALSE FALSE
8  ACOPY_y   0    1      0       2     0  FALSE FALSE
9     U1_I   0   29      0      30     0  FALSE FALSE
10     U_I   0   29      0      30     0  FALSE FALSE
11     U_J   0   29      0      30     0  FALSE FALSE
12     U_K   0   29      0      30     0  FALSE FALSE
13    RT_I   0    2      0       3     0  FALSE FALSE
14    RT_J   0    2      0       3     0  FALSE FALSE
15    RT_K   0    2      0       3     0  FALSE FALSE
16     SCR   0    1      0       2     0  FALSE FALSE
17    VEC1   0    1      0       2     0  FALSE FALSE
18    VEC2   0    1      0       2     0  FALSE FALSE

   T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
1     3    1    0    1    2    1       0       1    0  16   2   0    0    1
2     1    4    5    2    3    3       0       1   29  26  28   0    1    0
3     4    6    0    2    6    4       1       0   18   4  25   0    0    1
4     5    0    4    5    1    5       0       0    7   5   0  14    2    0
5     0    1    4    2    1    6       1       1    7   0  16   7    0    2
6     2    1    0    4    6    4       0       1   26  29   4   0    2    0
7     2    6    3    4    0    0       0       1   24   0   0  12    1    1
8     4    5    4    2    0    0       0       0   19   6   7   0    1    0
9     3    1    4    5    6    6       0       1    4   5  28   0    1    1
10    5    1    0    4    1    6       1       0    2   0  21   0    0    1
11    6    1    2    6    6    2       1       1   17   0   8  22    0    1
12    6    2    3    0    0    5       0       0   29   0  14  24    1    0
13    2    1    2    3    6    0       1       0   12   0  24  28    2    0
14    5    0    5    3    4    0       1       1    1   0  22   9    1    0
15    0    3    1    0    5    1       0       0    2   0   5   0    2    0
16    1    0    6    1    1    6       0       1    6   0  23  28    0    1
17    3    2    2    4    4    5       0       1    0   0  28   6    0    0
18    2    6    6    6    6    4       1       1   15   8   0   3    0    0
19    2    4    0    3    2    0       0       0    8  21   0  29    1    0
20    1    2    2    6    2    1       0       0   13   0  13   7    1    1
21    0    2    2    6    5    0       1       0   29   8  11   0    0    0
22    0    0    2    3    0    6       0       0    2  15   0  23    1    0
23    1    4    1    5    0    1       1       1    0  28   9   0    0    0
24    1    0    1    0    4    3       1       0   25   0   0   8    1    0
25    2    1    0    0    5    0       0       1   16   7   0   8    0    2
26    0    1    6    5    2    0       0       1   18  21  29   0    0    1
27    4    5    1    2    3    6       0       1    6   0  12   0    0    1
28    4    0    5    2    5    6       1       0   25  20   4   0    0    1
29    3    3    5    3    1    3       1       1   28   3   0  26    1    1
30    0    2    4    2    0    5       0       1    0  18   0   7    1    1
31    1    1    4    2    0    2       0       1   10  27   0   4    0    0
32    1    2    5    1    3    4       0       0    7  15   0   3    0    0
33    6    4    2    0    4    6       1       1    8  14   0   6    1    1
34    1    6    4    6    4    2       0       0    0  25   0  25    0    2
35    4    6    6    3    5    6       0       1   21   0   6  21    0    0
36    2    3    3    0    1    0       1       1    8   0  21  23    0    0
   RT_K SCR VEC1 VEC2
1     1   0    0    0
2     0   0    1    0
3     1   0    0    0
4     0   0    0    0
5     0   0    0    0
6     0   1    0    1
7     0   0    0    0
8     0   1    1    0
9     0   0    0    0
10    0   0    1    0
11    0   0    1    1
12    1   1    0    1
13    0   1    1    0
14    1   1    0    1
15    0   0    1    1
16    0   1    1    1
17    0   1    1    1
18    1   1    1    1
19    0   1    0    1
20    0   1    1    0
21    1   1    0    1
22    1   1    1    0
23    2   1    1    1
24    0   0    0    1
25    0   1    1    1
26    1   0    1    0
27    1   1    0    1
28    1   0    1    0
29    0   1    1    0
30    0   0    0    1
31    0   1    0    0
32    2   0    1    1
33    0   1    0    0
34    0   1    0    0
35    2   0    0    0
36    1   0    1    1

D-Efficiency Approximation: [1] 0.12

Measuring design of size 36
Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
Code stats:
        Number of loops: 	86
        Max loop nest depth: 	5
        Additions: 		3040
        Multiplications: 	720
        Divisions: 		0
        Logical: 		0
        Reads: 			4772
        Writes: 		587
        Comparisons:		86
        Gotos: 			0
        
 compiling timer:
	gcc -O3 -fopenmp -DDYNAMIC -O0 -c -o timer_cpu.o timer_cpu.c
 building the original code:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -DORIGINAL -o __orio_perftest_original.exe __orio_perftest1.c timer_cpu.o -lm
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest1.exe __orio_perftest1.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest1.exe  
Program Test Output: 
{'[3, 1, 0, 1, 2, 1, 0, 1, 0, 16, 2, 0, 0, 1, 1, 0, 0, 0]' : 0.163412}
{'[3, 1, 0, 1, 2, 1, 0, 1, 0, 16, 2, 0, 0, 1, 1, 0, 0, 0]' : 0.163065}
{'[3, 1, 0, 1, 2, 1, 0, 1, 0, 16, 2, 0, 0, 1, 1, 0, 0, 0]' : 0.163341}
{'[3, 1, 0, 1, 2, 1, 0, 1, 0, 16, 2, 0, 0, 1, 1, 0, 0, 0]' : 0.163087}
{'[3, 1, 0, 1, 2, 1, 0, 1, 0, 16, 2, 0, 0, 1, 1, 0, 0, 0]' : 0.163109}
{'[3, 1, 0, 1, 2, 1, 0, 1, 0, 16, 2, 0, 0, 1, 1, 0, 0, 0]' : 0.163495}
{'[3, 1, 0, 1, 2, 1, 0, 1, 0, 16, 2, 0, 0, 1, 1, 0, 0, 0]' : 0.163182}
{'[3, 1, 0, 1, 2, 1, 0, 1, 0, 16, 2, 0, 0, 1, 1, 0, 0, 0]' : 0.163082}
{'[3, 1, 0, 1, 2, 1, 0, 1, 0, 16, 2, 0, 0, 1, 1, 0, 0, 0]' : 0.163036}
{'[3, 1, 0, 1, 2, 1, 0, 1, 0, 16, 2, 0, 0, 1, 1, 0, 0, 0]' : 0.163176}
{'[3, 1, 0, 1, 2, 1, 0, 1, 0, 16, 2, 0, 0, 1, 1, 0, 0, 0]' : 0.163186}
{'[3, 1, 0, 1, 2, 1, 0, 1, 0, 16, 2, 0, 0, 1, 1, 0, 0, 0]' : 0.163262}
{'[3, 1, 0, 1, 2, 1, 0, 1, 0, 16, 2, 0, 0, 1, 1, 0, 0, 0]' : 0.163228}
{'[3, 1, 0, 1, 2, 1, 0, 1, 0, 16, 2, 0, 0, 1, 1, 0, 0, 0]' : 0.163171}
{'[3, 1, 0, 1, 2, 1, 0, 1, 0, 16, 2, 0, 0, 1, 1, 0, 0, 0]' : 0.163184}
{'[3, 1, 0, 1, 2, 1, 0, 1, 0, 16, 2, 0, 0, 1, 1, 0, 0, 0]' : 0.163358}
{'[3, 1, 0, 1, 2, 1, 0, 1, 0, 16, 2, 0, 0, 1, 1, 0, 0, 0]' : 0.163125}
{'[3, 1, 0, 1, 2, 1, 0, 1, 0, 16, 2, 0, 0, 1, 1, 0, 0, 0]' : 0.163122}
{'[3, 1, 0, 1, 2, 1, 0, 1, 0, 16, 2, 0, 0, 1, 1, 0, 0, 0]' : 0.163243}
{'[3, 1, 0, 1, 2, 1, 0, 1, 0, 16, 2, 0, 0, 1, 1, 0, 0, 0]' : 0.163173}
{'[3, 1, 0, 1, 2, 1, 0, 1, 0, 16, 2, 0, 0, 1, 1, 0, 0, 0]' : 0.163298}
{'[3, 1, 0, 1, 2, 1, 0, 1, 0, 16, 2, 0, 0, 1, 1, 0, 0, 0]' : 0.163188}
{'[3, 1, 0, 1, 2, 1, 0, 1, 0, 16, 2, 0, 0, 1, 1, 0, 0, 0]' : 0.163155}
{'[3, 1, 0, 1, 2, 1, 0, 1, 0, 16, 2, 0, 0, 1, 1, 0, 0, 0]' : 0.163071}
{'[3, 1, 0, 1, 2, 1, 0, 1, 0, 16, 2, 0, 0, 1, 1, 0, 0, 0]' : 0.163453}
{'[3, 1, 0, 1, 2, 1, 0, 1, 0, 16, 2, 0, 0, 1, 1, 0, 0, 0]' : 0.163094}
{'[3, 1, 0, 1, 2, 1, 0, 1, 0, 16, 2, 0, 0, 1, 1, 0, 0, 0]' : 0.163207}
{'[3, 1, 0, 1, 2, 1, 0, 1, 0, 16, 2, 0, 0, 1, 1, 0, 0, 0]' : 0.163166}
{'[3, 1, 0, 1, 2, 1, 0, 1, 0, 16, 2, 0, 0, 1, 1, 0, 0, 0]' : 0.163082}
{'[3, 1, 0, 1, 2, 1, 0, 1, 0, 16, 2, 0, 0, 1, 1, 0, 0, 0]' : 0.163165}

out:
 ["{'[3, 1, 0, 1, 2, 1, 0, 1, 0, 16, 2, 0, 0, 1, 1, 0, 0, 0]' : 0.163412}", "{'[3, 1, 0, 1, 2, 1, 0, 1, 0, 16, 2, 0, 0, 1, 1, 0, 0, 0]' : 0.163065}", "{'[3, 1, 0, 1, 2, 1, 0, 1, 0, 16, 2, 0, 0, 1, 1, 0, 0, 0]' : 0.163341}", "{'[3, 1, 0, 1, 2, 1, 0, 1, 0, 16, 2, 0, 0, 1, 1, 0, 0, 0]' : 0.163087}", "{'[3, 1, 0, 1, 2, 1, 0, 1, 0, 16, 2, 0, 0, 1, 1, 0, 0, 0]' : 0.163109}", "{'[3, 1, 0, 1, 2, 1, 0, 1, 0, 16, 2, 0, 0, 1, 1, 0, 0, 0]' : 0.163495}", "{'[3, 1, 0, 1, 2, 1, 0, 1, 0, 16, 2, 0, 0, 1, 1, 0, 0, 0]' : 0.163182}", "{'[3, 1, 0, 1, 2, 1, 0, 1, 0, 16, 2, 0, 0, 1, 1, 0, 0, 0]' : 0.163082}", "{'[3, 1, 0, 1, 2, 1, 0, 1, 0, 16, 2, 0, 0, 1, 1, 0, 0, 0]' : 0.163036}", "{'[3, 1, 0, 1, 2, 1, 0, 1, 0, 16, 2, 0, 0, 1, 1, 0, 0, 0]' : 0.163176}", "{'[3, 1, 0, 1, 2, 1, 0, 1, 0, 16, 2, 0, 0, 1, 1, 0, 0, 0]' : 0.163186}", "{'[3, 1, 0, 1, 2, 1, 0, 1, 0, 16, 2, 0, 0, 1, 1, 0, 0, 0]' : 0.163262}", "{'[3, 1, 0, 1, 2, 1, 0, 1, 0, 16, 2, 0, 0, 1, 1, 0, 0, 0]' : 0.163228}", "{'[3, 1, 0, 1, 2, 1, 0, 1, 0, 16, 2, 0, 0, 1, 1, 0, 0, 0]' : 0.163171}", "{'[3, 1, 0, 1, 2, 1, 0, 1, 0, 16, 2, 0, 0, 1, 1, 0, 0, 0]' : 0.163184}", "{'[3, 1, 0, 1, 2, 1, 0, 1, 0, 16, 2, 0, 0, 1, 1, 0, 0, 0]' : 0.163358}", "{'[3, 1, 0, 1, 2, 1, 0, 1, 0, 16, 2, 0, 0, 1, 1, 0, 0, 0]' : 0.163125}", "{'[3, 1, 0, 1, 2, 1, 0, 1, 0, 16, 2, 0, 0, 1, 1, 0, 0, 0]' : 0.163122}", "{'[3, 1, 0, 1, 2, 1, 0, 1, 0, 16, 2, 0, 0, 1, 1, 0, 0, 0]' : 0.163243}", "{'[3, 1, 0, 1, 2, 1, 0, 1, 0, 16, 2, 0, 0, 1, 1, 0, 0, 0]' : 0.163173}", "{'[3, 1, 0, 1, 2, 1, 0, 1, 0, 16, 2, 0, 0, 1, 1, 0, 0, 0]' : 0.163298}", "{'[3, 1, 0, 1, 2, 1, 0, 1, 0, 16, 2, 0, 0, 1, 1, 0, 0, 0]' : 0.163188}", "{'[3, 1, 0, 1, 2, 1, 0, 1, 0, 16, 2, 0, 0, 1, 1, 0, 0, 0]' : 0.163155}", "{'[3, 1, 0, 1, 2, 1, 0, 1, 0, 16, 2, 0, 0, 1, 1, 0, 0, 0]' : 0.163071}", "{'[3, 1, 0, 1, 2, 1, 0, 1, 0, 16, 2, 0, 0, 1, 1, 0, 0, 0]' : 0.163453}", "{'[3, 1, 0, 1, 2, 1, 0, 1, 0, 16, 2, 0, 0, 1, 1, 0, 0, 0]' : 0.163094}", "{'[3, 1, 0, 1, 2, 1, 0, 1, 0, 16, 2, 0, 0, 1, 1, 0, 0, 0]' : 0.163207}", "{'[3, 1, 0, 1, 2, 1, 0, 1, 0, 16, 2, 0, 0, 1, 1, 0, 0, 0]' : 0.163166}", "{'[3, 1, 0, 1, 2, 1, 0, 1, 0, 16, 2, 0, 0, 1, 1, 0, 0, 0]' : 0.163082}", "{'[3, 1, 0, 1, 2, 1, 0, 1, 0, 16, 2, 0, 0, 1, 1, 0, 0, 0]' : 0.163165}"]
returning from 'run': {'[3, 1, 0, 1, 2, 1, 0, 1, 0, 16, 2, 0, 0, 1, 1, 0, 0, 0]': ([0.163412, 0.163065, 0.163341, 0.163087, 0.163109, 0.163495, 0.163182, 0.163082, 0.163036, 0.163176, 0.163186, 0.163262, 0.163228, 0.163171, 0.163184, 0.163358, 0.163125, 0.163122, 0.163243, 0.163173, 0.163298, 0.163188, 0.163155, 0.163071, 0.163453, 0.163094, 0.163207, 0.163166, 0.163082, 0.163165], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 1, 0, 1, 2, 1, 0, 1, 0, 16, 2, 0, 0, 1, 1, 0, 0, 0]': ([0.163412, 0.163065, 0.163341, 0.163087, 0.163109, 0.163495, 0.163182, 0.163082, 0.163036, 0.163176, 0.163186, 0.163262, 0.163228, 0.163171, 0.163184, 0.163358, 0.163125, 0.163122, 0.163243, 0.163173, 0.163298, 0.163188, 0.163155, 0.163071, 0.163453, 0.163094, 0.163207, 0.163166, 0.163082, 0.163165], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = kkk
Code stats:
        Number of loops: 	83
        Max loop nest depth: 	6
        Additions: 		7753
        Multiplications: 	2232
        Divisions: 		0
        Logical: 		0
        Reads: 			12229
        Writes: 		1403
        Comparisons:		83
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest2.exe __orio_perftest2.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest2.exe  
Program Test Output: 
{'[1, 4, 5, 2, 3, 3, 0, 1, 29, 26, 28, 0, 1, 0, 0, 0, 1, 0]' : 0.102711}
{'[1, 4, 5, 2, 3, 3, 0, 1, 29, 26, 28, 0, 1, 0, 0, 0, 1, 0]' : 0.102797}
{'[1, 4, 5, 2, 3, 3, 0, 1, 29, 26, 28, 0, 1, 0, 0, 0, 1, 0]' : 0.102411}
{'[1, 4, 5, 2, 3, 3, 0, 1, 29, 26, 28, 0, 1, 0, 0, 0, 1, 0]' : 0.102404}
{'[1, 4, 5, 2, 3, 3, 0, 1, 29, 26, 28, 0, 1, 0, 0, 0, 1, 0]' : 0.102846}
{'[1, 4, 5, 2, 3, 3, 0, 1, 29, 26, 28, 0, 1, 0, 0, 0, 1, 0]' : 0.102701}
{'[1, 4, 5, 2, 3, 3, 0, 1, 29, 26, 28, 0, 1, 0, 0, 0, 1, 0]' : 0.102541}
{'[1, 4, 5, 2, 3, 3, 0, 1, 29, 26, 28, 0, 1, 0, 0, 0, 1, 0]' : 0.102499}
{'[1, 4, 5, 2, 3, 3, 0, 1, 29, 26, 28, 0, 1, 0, 0, 0, 1, 0]' : 0.102607}
{'[1, 4, 5, 2, 3, 3, 0, 1, 29, 26, 28, 0, 1, 0, 0, 0, 1, 0]' : 0.102883}
{'[1, 4, 5, 2, 3, 3, 0, 1, 29, 26, 28, 0, 1, 0, 0, 0, 1, 0]' : 0.102507}
{'[1, 4, 5, 2, 3, 3, 0, 1, 29, 26, 28, 0, 1, 0, 0, 0, 1, 0]' : 0.102399}
{'[1, 4, 5, 2, 3, 3, 0, 1, 29, 26, 28, 0, 1, 0, 0, 0, 1, 0]' : 0.102529}
{'[1, 4, 5, 2, 3, 3, 0, 1, 29, 26, 28, 0, 1, 0, 0, 0, 1, 0]' : 0.10269}
{'[1, 4, 5, 2, 3, 3, 0, 1, 29, 26, 28, 0, 1, 0, 0, 0, 1, 0]' : 0.102384}
{'[1, 4, 5, 2, 3, 3, 0, 1, 29, 26, 28, 0, 1, 0, 0, 0, 1, 0]' : 0.102418}
{'[1, 4, 5, 2, 3, 3, 0, 1, 29, 26, 28, 0, 1, 0, 0, 0, 1, 0]' : 0.102588}
{'[1, 4, 5, 2, 3, 3, 0, 1, 29, 26, 28, 0, 1, 0, 0, 0, 1, 0]' : 0.102704}
{'[1, 4, 5, 2, 3, 3, 0, 1, 29, 26, 28, 0, 1, 0, 0, 0, 1, 0]' : 0.102516}
{'[1, 4, 5, 2, 3, 3, 0, 1, 29, 26, 28, 0, 1, 0, 0, 0, 1, 0]' : 0.102584}
{'[1, 4, 5, 2, 3, 3, 0, 1, 29, 26, 28, 0, 1, 0, 0, 0, 1, 0]' : 0.102571}
{'[1, 4, 5, 2, 3, 3, 0, 1, 29, 26, 28, 0, 1, 0, 0, 0, 1, 0]' : 0.102755}
{'[1, 4, 5, 2, 3, 3, 0, 1, 29, 26, 28, 0, 1, 0, 0, 0, 1, 0]' : 0.102418}
{'[1, 4, 5, 2, 3, 3, 0, 1, 29, 26, 28, 0, 1, 0, 0, 0, 1, 0]' : 0.102355}
{'[1, 4, 5, 2, 3, 3, 0, 1, 29, 26, 28, 0, 1, 0, 0, 0, 1, 0]' : 0.102554}
{'[1, 4, 5, 2, 3, 3, 0, 1, 29, 26, 28, 0, 1, 0, 0, 0, 1, 0]' : 0.102817}
{'[1, 4, 5, 2, 3, 3, 0, 1, 29, 26, 28, 0, 1, 0, 0, 0, 1, 0]' : 0.102406}
{'[1, 4, 5, 2, 3, 3, 0, 1, 29, 26, 28, 0, 1, 0, 0, 0, 1, 0]' : 0.102403}
{'[1, 4, 5, 2, 3, 3, 0, 1, 29, 26, 28, 0, 1, 0, 0, 0, 1, 0]' : 0.102594}
{'[1, 4, 5, 2, 3, 3, 0, 1, 29, 26, 28, 0, 1, 0, 0, 0, 1, 0]' : 0.102732}

out:
 ["{'[1, 4, 5, 2, 3, 3, 0, 1, 29, 26, 28, 0, 1, 0, 0, 0, 1, 0]' : 0.102711}", "{'[1, 4, 5, 2, 3, 3, 0, 1, 29, 26, 28, 0, 1, 0, 0, 0, 1, 0]' : 0.102797}", "{'[1, 4, 5, 2, 3, 3, 0, 1, 29, 26, 28, 0, 1, 0, 0, 0, 1, 0]' : 0.102411}", "{'[1, 4, 5, 2, 3, 3, 0, 1, 29, 26, 28, 0, 1, 0, 0, 0, 1, 0]' : 0.102404}", "{'[1, 4, 5, 2, 3, 3, 0, 1, 29, 26, 28, 0, 1, 0, 0, 0, 1, 0]' : 0.102846}", "{'[1, 4, 5, 2, 3, 3, 0, 1, 29, 26, 28, 0, 1, 0, 0, 0, 1, 0]' : 0.102701}", "{'[1, 4, 5, 2, 3, 3, 0, 1, 29, 26, 28, 0, 1, 0, 0, 0, 1, 0]' : 0.102541}", "{'[1, 4, 5, 2, 3, 3, 0, 1, 29, 26, 28, 0, 1, 0, 0, 0, 1, 0]' : 0.102499}", "{'[1, 4, 5, 2, 3, 3, 0, 1, 29, 26, 28, 0, 1, 0, 0, 0, 1, 0]' : 0.102607}", "{'[1, 4, 5, 2, 3, 3, 0, 1, 29, 26, 28, 0, 1, 0, 0, 0, 1, 0]' : 0.102883}", "{'[1, 4, 5, 2, 3, 3, 0, 1, 29, 26, 28, 0, 1, 0, 0, 0, 1, 0]' : 0.102507}", "{'[1, 4, 5, 2, 3, 3, 0, 1, 29, 26, 28, 0, 1, 0, 0, 0, 1, 0]' : 0.102399}", "{'[1, 4, 5, 2, 3, 3, 0, 1, 29, 26, 28, 0, 1, 0, 0, 0, 1, 0]' : 0.102529}", "{'[1, 4, 5, 2, 3, 3, 0, 1, 29, 26, 28, 0, 1, 0, 0, 0, 1, 0]' : 0.10269}", "{'[1, 4, 5, 2, 3, 3, 0, 1, 29, 26, 28, 0, 1, 0, 0, 0, 1, 0]' : 0.102384}", "{'[1, 4, 5, 2, 3, 3, 0, 1, 29, 26, 28, 0, 1, 0, 0, 0, 1, 0]' : 0.102418}", "{'[1, 4, 5, 2, 3, 3, 0, 1, 29, 26, 28, 0, 1, 0, 0, 0, 1, 0]' : 0.102588}", "{'[1, 4, 5, 2, 3, 3, 0, 1, 29, 26, 28, 0, 1, 0, 0, 0, 1, 0]' : 0.102704}", "{'[1, 4, 5, 2, 3, 3, 0, 1, 29, 26, 28, 0, 1, 0, 0, 0, 1, 0]' : 0.102516}", "{'[1, 4, 5, 2, 3, 3, 0, 1, 29, 26, 28, 0, 1, 0, 0, 0, 1, 0]' : 0.102584}", "{'[1, 4, 5, 2, 3, 3, 0, 1, 29, 26, 28, 0, 1, 0, 0, 0, 1, 0]' : 0.102571}", "{'[1, 4, 5, 2, 3, 3, 0, 1, 29, 26, 28, 0, 1, 0, 0, 0, 1, 0]' : 0.102755}", "{'[1, 4, 5, 2, 3, 3, 0, 1, 29, 26, 28, 0, 1, 0, 0, 0, 1, 0]' : 0.102418}", "{'[1, 4, 5, 2, 3, 3, 0, 1, 29, 26, 28, 0, 1, 0, 0, 0, 1, 0]' : 0.102355}", "{'[1, 4, 5, 2, 3, 3, 0, 1, 29, 26, 28, 0, 1, 0, 0, 0, 1, 0]' : 0.102554}", "{'[1, 4, 5, 2, 3, 3, 0, 1, 29, 26, 28, 0, 1, 0, 0, 0, 1, 0]' : 0.102817}", "{'[1, 4, 5, 2, 3, 3, 0, 1, 29, 26, 28, 0, 1, 0, 0, 0, 1, 0]' : 0.102406}", "{'[1, 4, 5, 2, 3, 3, 0, 1, 29, 26, 28, 0, 1, 0, 0, 0, 1, 0]' : 0.102403}", "{'[1, 4, 5, 2, 3, 3, 0, 1, 29, 26, 28, 0, 1, 0, 0, 0, 1, 0]' : 0.102594}", "{'[1, 4, 5, 2, 3, 3, 0, 1, 29, 26, 28, 0, 1, 0, 0, 0, 1, 0]' : 0.102732}"]
returning from 'run': {'[1, 4, 5, 2, 3, 3, 0, 1, 29, 26, 28, 0, 1, 0, 0, 0, 1, 0]': ([0.102711, 0.102797, 0.102411, 0.102404, 0.102846, 0.102701, 0.102541, 0.102499, 0.102607, 0.102883, 0.102507, 0.102399, 0.102529, 0.10269, 0.102384, 0.102418, 0.102588, 0.102704, 0.102516, 0.102584, 0.102571, 0.102755, 0.102418, 0.102355, 0.102554, 0.102817, 0.102406, 0.102403, 0.102594, 0.102732], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 4, 5, 2, 3, 3, 0, 1, 29, 26, 28, 0, 1, 0, 0, 0, 1, 0]': ([0.102711, 0.102797, 0.102411, 0.102404, 0.102846, 0.102701, 0.102541, 0.102499, 0.102607, 0.102883, 0.102507, 0.102399, 0.102529, 0.10269, 0.102384, 0.102418, 0.102588, 0.102704, 0.102516, 0.102584, 0.102571, 0.102755, 0.102418, 0.102355, 0.102554, 0.102817, 0.102406, 0.102403, 0.102594, 0.102732], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = iii
Code stats:
        Number of loops: 	23
        Max loop nest depth: 	5
        Additions: 		737
        Multiplications: 	204
        Divisions: 		0
        Logical: 		0
        Reads: 			1303
        Writes: 		180
        Comparisons:		23
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest3.exe __orio_perftest3.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest3.exe  
Program Test Output: 
{'[4, 6, 0, 2, 6, 4, 1, 0, 18, 4, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.112025}
{'[4, 6, 0, 2, 6, 4, 1, 0, 18, 4, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.111799}
{'[4, 6, 0, 2, 6, 4, 1, 0, 18, 4, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.111767}
{'[4, 6, 0, 2, 6, 4, 1, 0, 18, 4, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.11181}
{'[4, 6, 0, 2, 6, 4, 1, 0, 18, 4, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.111742}
{'[4, 6, 0, 2, 6, 4, 1, 0, 18, 4, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.112086}
{'[4, 6, 0, 2, 6, 4, 1, 0, 18, 4, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.111765}
{'[4, 6, 0, 2, 6, 4, 1, 0, 18, 4, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.11177}
{'[4, 6, 0, 2, 6, 4, 1, 0, 18, 4, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.111713}
{'[4, 6, 0, 2, 6, 4, 1, 0, 18, 4, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.111736}
{'[4, 6, 0, 2, 6, 4, 1, 0, 18, 4, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.111761}
{'[4, 6, 0, 2, 6, 4, 1, 0, 18, 4, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.111802}
{'[4, 6, 0, 2, 6, 4, 1, 0, 18, 4, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.111723}
{'[4, 6, 0, 2, 6, 4, 1, 0, 18, 4, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.111762}
{'[4, 6, 0, 2, 6, 4, 1, 0, 18, 4, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.111878}
{'[4, 6, 0, 2, 6, 4, 1, 0, 18, 4, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.111712}
{'[4, 6, 0, 2, 6, 4, 1, 0, 18, 4, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.111728}
{'[4, 6, 0, 2, 6, 4, 1, 0, 18, 4, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.111703}
{'[4, 6, 0, 2, 6, 4, 1, 0, 18, 4, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.11176}
{'[4, 6, 0, 2, 6, 4, 1, 0, 18, 4, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.112071}
{'[4, 6, 0, 2, 6, 4, 1, 0, 18, 4, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.111855}
{'[4, 6, 0, 2, 6, 4, 1, 0, 18, 4, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.111716}
{'[4, 6, 0, 2, 6, 4, 1, 0, 18, 4, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.111782}
{'[4, 6, 0, 2, 6, 4, 1, 0, 18, 4, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.11177}
{'[4, 6, 0, 2, 6, 4, 1, 0, 18, 4, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.111739}
{'[4, 6, 0, 2, 6, 4, 1, 0, 18, 4, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.111776}
{'[4, 6, 0, 2, 6, 4, 1, 0, 18, 4, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.111779}
{'[4, 6, 0, 2, 6, 4, 1, 0, 18, 4, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.111815}
{'[4, 6, 0, 2, 6, 4, 1, 0, 18, 4, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.111946}
{'[4, 6, 0, 2, 6, 4, 1, 0, 18, 4, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.111791}

out:
 ["{'[4, 6, 0, 2, 6, 4, 1, 0, 18, 4, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.112025}", "{'[4, 6, 0, 2, 6, 4, 1, 0, 18, 4, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.111799}", "{'[4, 6, 0, 2, 6, 4, 1, 0, 18, 4, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.111767}", "{'[4, 6, 0, 2, 6, 4, 1, 0, 18, 4, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.11181}", "{'[4, 6, 0, 2, 6, 4, 1, 0, 18, 4, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.111742}", "{'[4, 6, 0, 2, 6, 4, 1, 0, 18, 4, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.112086}", "{'[4, 6, 0, 2, 6, 4, 1, 0, 18, 4, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.111765}", "{'[4, 6, 0, 2, 6, 4, 1, 0, 18, 4, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.11177}", "{'[4, 6, 0, 2, 6, 4, 1, 0, 18, 4, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.111713}", "{'[4, 6, 0, 2, 6, 4, 1, 0, 18, 4, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.111736}", "{'[4, 6, 0, 2, 6, 4, 1, 0, 18, 4, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.111761}", "{'[4, 6, 0, 2, 6, 4, 1, 0, 18, 4, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.111802}", "{'[4, 6, 0, 2, 6, 4, 1, 0, 18, 4, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.111723}", "{'[4, 6, 0, 2, 6, 4, 1, 0, 18, 4, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.111762}", "{'[4, 6, 0, 2, 6, 4, 1, 0, 18, 4, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.111878}", "{'[4, 6, 0, 2, 6, 4, 1, 0, 18, 4, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.111712}", "{'[4, 6, 0, 2, 6, 4, 1, 0, 18, 4, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.111728}", "{'[4, 6, 0, 2, 6, 4, 1, 0, 18, 4, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.111703}", "{'[4, 6, 0, 2, 6, 4, 1, 0, 18, 4, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.11176}", "{'[4, 6, 0, 2, 6, 4, 1, 0, 18, 4, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.112071}", "{'[4, 6, 0, 2, 6, 4, 1, 0, 18, 4, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.111855}", "{'[4, 6, 0, 2, 6, 4, 1, 0, 18, 4, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.111716}", "{'[4, 6, 0, 2, 6, 4, 1, 0, 18, 4, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.111782}", "{'[4, 6, 0, 2, 6, 4, 1, 0, 18, 4, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.11177}", "{'[4, 6, 0, 2, 6, 4, 1, 0, 18, 4, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.111739}", "{'[4, 6, 0, 2, 6, 4, 1, 0, 18, 4, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.111776}", "{'[4, 6, 0, 2, 6, 4, 1, 0, 18, 4, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.111779}", "{'[4, 6, 0, 2, 6, 4, 1, 0, 18, 4, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.111815}", "{'[4, 6, 0, 2, 6, 4, 1, 0, 18, 4, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.111946}", "{'[4, 6, 0, 2, 6, 4, 1, 0, 18, 4, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.111791}"]
returning from 'run': {'[4, 6, 0, 2, 6, 4, 1, 0, 18, 4, 25, 0, 0, 1, 1, 0, 0, 0]': ([0.112025, 0.111799, 0.111767, 0.11181, 0.111742, 0.112086, 0.111765, 0.11177, 0.111713, 0.111736, 0.111761, 0.111802, 0.111723, 0.111762, 0.111878, 0.111712, 0.111728, 0.111703, 0.11176, 0.112071, 0.111855, 0.111716, 0.111782, 0.11177, 0.111739, 0.111776, 0.111779, 0.111815, 0.111946, 0.111791], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 6, 0, 2, 6, 4, 1, 0, 18, 4, 25, 0, 0, 1, 1, 0, 0, 0]': ([0.112025, 0.111799, 0.111767, 0.11181, 0.111742, 0.112086, 0.111765, 0.11177, 0.111713, 0.111736, 0.111761, 0.111802, 0.111723, 0.111762, 0.111878, 0.111712, 0.111728, 0.111703, 0.11176, 0.112071, 0.111855, 0.111716, 0.111782, 0.11177, 0.111739, 0.111776, 0.111779, 0.111815, 0.111946, 0.111791], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	6
        Additions: 		4346
        Multiplications: 	1326
        Divisions: 		0
        Logical: 		0
        Reads: 			6839
        Writes: 		730
        Comparisons:		25
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest4.exe __orio_perftest4.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest4.exe  
Program Test Output: 
{'[5, 0, 4, 5, 1, 5, 0, 0, 7, 5, 0, 14, 2, 0, 0, 0, 0, 0]' : 0.262532}
{'[5, 0, 4, 5, 1, 5, 0, 0, 7, 5, 0, 14, 2, 0, 0, 0, 0, 0]' : 0.262}
{'[5, 0, 4, 5, 1, 5, 0, 0, 7, 5, 0, 14, 2, 0, 0, 0, 0, 0]' : 0.262194}
{'[5, 0, 4, 5, 1, 5, 0, 0, 7, 5, 0, 14, 2, 0, 0, 0, 0, 0]' : 0.261513}
{'[5, 0, 4, 5, 1, 5, 0, 0, 7, 5, 0, 14, 2, 0, 0, 0, 0, 0]' : 0.260024}
{'[5, 0, 4, 5, 1, 5, 0, 0, 7, 5, 0, 14, 2, 0, 0, 0, 0, 0]' : 0.262936}
{'[5, 0, 4, 5, 1, 5, 0, 0, 7, 5, 0, 14, 2, 0, 0, 0, 0, 0]' : 0.263007}
{'[5, 0, 4, 5, 1, 5, 0, 0, 7, 5, 0, 14, 2, 0, 0, 0, 0, 0]' : 0.261794}
{'[5, 0, 4, 5, 1, 5, 0, 0, 7, 5, 0, 14, 2, 0, 0, 0, 0, 0]' : 0.260966}
{'[5, 0, 4, 5, 1, 5, 0, 0, 7, 5, 0, 14, 2, 0, 0, 0, 0, 0]' : 0.261156}
{'[5, 0, 4, 5, 1, 5, 0, 0, 7, 5, 0, 14, 2, 0, 0, 0, 0, 0]' : 0.262984}
{'[5, 0, 4, 5, 1, 5, 0, 0, 7, 5, 0, 14, 2, 0, 0, 0, 0, 0]' : 0.260046}
{'[5, 0, 4, 5, 1, 5, 0, 0, 7, 5, 0, 14, 2, 0, 0, 0, 0, 0]' : 0.261876}
{'[5, 0, 4, 5, 1, 5, 0, 0, 7, 5, 0, 14, 2, 0, 0, 0, 0, 0]' : 0.261076}
{'[5, 0, 4, 5, 1, 5, 0, 0, 7, 5, 0, 14, 2, 0, 0, 0, 0, 0]' : 0.263788}
{'[5, 0, 4, 5, 1, 5, 0, 0, 7, 5, 0, 14, 2, 0, 0, 0, 0, 0]' : 0.260832}
{'[5, 0, 4, 5, 1, 5, 0, 0, 7, 5, 0, 14, 2, 0, 0, 0, 0, 0]' : 0.261087}
{'[5, 0, 4, 5, 1, 5, 0, 0, 7, 5, 0, 14, 2, 0, 0, 0, 0, 0]' : 0.262428}
{'[5, 0, 4, 5, 1, 5, 0, 0, 7, 5, 0, 14, 2, 0, 0, 0, 0, 0]' : 0.262235}
{'[5, 0, 4, 5, 1, 5, 0, 0, 7, 5, 0, 14, 2, 0, 0, 0, 0, 0]' : 0.261977}
{'[5, 0, 4, 5, 1, 5, 0, 0, 7, 5, 0, 14, 2, 0, 0, 0, 0, 0]' : 0.259346}
{'[5, 0, 4, 5, 1, 5, 0, 0, 7, 5, 0, 14, 2, 0, 0, 0, 0, 0]' : 0.26317}
{'[5, 0, 4, 5, 1, 5, 0, 0, 7, 5, 0, 14, 2, 0, 0, 0, 0, 0]' : 0.262917}
{'[5, 0, 4, 5, 1, 5, 0, 0, 7, 5, 0, 14, 2, 0, 0, 0, 0, 0]' : 0.262445}
{'[5, 0, 4, 5, 1, 5, 0, 0, 7, 5, 0, 14, 2, 0, 0, 0, 0, 0]' : 0.261503}
{'[5, 0, 4, 5, 1, 5, 0, 0, 7, 5, 0, 14, 2, 0, 0, 0, 0, 0]' : 0.26084}
{'[5, 0, 4, 5, 1, 5, 0, 0, 7, 5, 0, 14, 2, 0, 0, 0, 0, 0]' : 0.263624}
{'[5, 0, 4, 5, 1, 5, 0, 0, 7, 5, 0, 14, 2, 0, 0, 0, 0, 0]' : 0.260616}
{'[5, 0, 4, 5, 1, 5, 0, 0, 7, 5, 0, 14, 2, 0, 0, 0, 0, 0]' : 0.261775}
{'[5, 0, 4, 5, 1, 5, 0, 0, 7, 5, 0, 14, 2, 0, 0, 0, 0, 0]' : 0.262013}

out:
 ["{'[5, 0, 4, 5, 1, 5, 0, 0, 7, 5, 0, 14, 2, 0, 0, 0, 0, 0]' : 0.262532}", "{'[5, 0, 4, 5, 1, 5, 0, 0, 7, 5, 0, 14, 2, 0, 0, 0, 0, 0]' : 0.262}", "{'[5, 0, 4, 5, 1, 5, 0, 0, 7, 5, 0, 14, 2, 0, 0, 0, 0, 0]' : 0.262194}", "{'[5, 0, 4, 5, 1, 5, 0, 0, 7, 5, 0, 14, 2, 0, 0, 0, 0, 0]' : 0.261513}", "{'[5, 0, 4, 5, 1, 5, 0, 0, 7, 5, 0, 14, 2, 0, 0, 0, 0, 0]' : 0.260024}", "{'[5, 0, 4, 5, 1, 5, 0, 0, 7, 5, 0, 14, 2, 0, 0, 0, 0, 0]' : 0.262936}", "{'[5, 0, 4, 5, 1, 5, 0, 0, 7, 5, 0, 14, 2, 0, 0, 0, 0, 0]' : 0.263007}", "{'[5, 0, 4, 5, 1, 5, 0, 0, 7, 5, 0, 14, 2, 0, 0, 0, 0, 0]' : 0.261794}", "{'[5, 0, 4, 5, 1, 5, 0, 0, 7, 5, 0, 14, 2, 0, 0, 0, 0, 0]' : 0.260966}", "{'[5, 0, 4, 5, 1, 5, 0, 0, 7, 5, 0, 14, 2, 0, 0, 0, 0, 0]' : 0.261156}", "{'[5, 0, 4, 5, 1, 5, 0, 0, 7, 5, 0, 14, 2, 0, 0, 0, 0, 0]' : 0.262984}", "{'[5, 0, 4, 5, 1, 5, 0, 0, 7, 5, 0, 14, 2, 0, 0, 0, 0, 0]' : 0.260046}", "{'[5, 0, 4, 5, 1, 5, 0, 0, 7, 5, 0, 14, 2, 0, 0, 0, 0, 0]' : 0.261876}", "{'[5, 0, 4, 5, 1, 5, 0, 0, 7, 5, 0, 14, 2, 0, 0, 0, 0, 0]' : 0.261076}", "{'[5, 0, 4, 5, 1, 5, 0, 0, 7, 5, 0, 14, 2, 0, 0, 0, 0, 0]' : 0.263788}", "{'[5, 0, 4, 5, 1, 5, 0, 0, 7, 5, 0, 14, 2, 0, 0, 0, 0, 0]' : 0.260832}", "{'[5, 0, 4, 5, 1, 5, 0, 0, 7, 5, 0, 14, 2, 0, 0, 0, 0, 0]' : 0.261087}", "{'[5, 0, 4, 5, 1, 5, 0, 0, 7, 5, 0, 14, 2, 0, 0, 0, 0, 0]' : 0.262428}", "{'[5, 0, 4, 5, 1, 5, 0, 0, 7, 5, 0, 14, 2, 0, 0, 0, 0, 0]' : 0.262235}", "{'[5, 0, 4, 5, 1, 5, 0, 0, 7, 5, 0, 14, 2, 0, 0, 0, 0, 0]' : 0.261977}", "{'[5, 0, 4, 5, 1, 5, 0, 0, 7, 5, 0, 14, 2, 0, 0, 0, 0, 0]' : 0.259346}", "{'[5, 0, 4, 5, 1, 5, 0, 0, 7, 5, 0, 14, 2, 0, 0, 0, 0, 0]' : 0.26317}", "{'[5, 0, 4, 5, 1, 5, 0, 0, 7, 5, 0, 14, 2, 0, 0, 0, 0, 0]' : 0.262917}", "{'[5, 0, 4, 5, 1, 5, 0, 0, 7, 5, 0, 14, 2, 0, 0, 0, 0, 0]' : 0.262445}", "{'[5, 0, 4, 5, 1, 5, 0, 0, 7, 5, 0, 14, 2, 0, 0, 0, 0, 0]' : 0.261503}", "{'[5, 0, 4, 5, 1, 5, 0, 0, 7, 5, 0, 14, 2, 0, 0, 0, 0, 0]' : 0.26084}", "{'[5, 0, 4, 5, 1, 5, 0, 0, 7, 5, 0, 14, 2, 0, 0, 0, 0, 0]' : 0.263624}", "{'[5, 0, 4, 5, 1, 5, 0, 0, 7, 5, 0, 14, 2, 0, 0, 0, 0, 0]' : 0.260616}", "{'[5, 0, 4, 5, 1, 5, 0, 0, 7, 5, 0, 14, 2, 0, 0, 0, 0, 0]' : 0.261775}", "{'[5, 0, 4, 5, 1, 5, 0, 0, 7, 5, 0, 14, 2, 0, 0, 0, 0, 0]' : 0.262013}"]
returning from 'run': {'[5, 0, 4, 5, 1, 5, 0, 0, 7, 5, 0, 14, 2, 0, 0, 0, 0, 0]': ([0.262532, 0.262, 0.262194, 0.261513, 0.260024, 0.262936, 0.263007, 0.261794, 0.260966, 0.261156, 0.262984, 0.260046, 0.261876, 0.261076, 0.263788, 0.260832, 0.261087, 0.262428, 0.262235, 0.261977, 0.259346, 0.26317, 0.262917, 0.262445, 0.261503, 0.26084, 0.263624, 0.260616, 0.261775, 0.262013], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 0, 4, 5, 1, 5, 0, 0, 7, 5, 0, 14, 2, 0, 0, 0, 0, 0]': ([0.262532, 0.262, 0.262194, 0.261513, 0.260024, 0.262936, 0.263007, 0.261794, 0.260966, 0.261156, 0.262984, 0.260046, 0.261876, 0.261076, 0.263788, 0.260832, 0.261087, 0.262428, 0.262235, 0.261977, 0.259346, 0.26317, 0.262917, 0.262445, 0.261503, 0.26084, 0.263624, 0.260616, 0.261775, 0.262013], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		276
        Multiplications: 	82
        Divisions: 		0
        Logical: 		0
        Reads: 			589
        Writes: 		82
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest5.exe __orio_perftest5.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest5.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest5.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest5.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/Orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/Orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 510, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors, data)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 396, in dopt_anova
    budget)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 324, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 270, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/phrb/code/Orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest5.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/Orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/Orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 510, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors, data)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 396, in dopt_anova
    budget)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 324, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 270, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/phrb/code/Orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	89
        Max loop nest depth: 	6
        Additions: 		2084
        Multiplications: 	882
        Divisions: 		0
        Logical: 		0
        Reads: 			4586
        Writes: 		899
        Comparisons:		89
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest6.exe __orio_perftest6.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest6.exe  
Program Test Output: 
{'[2, 1, 0, 4, 6, 4, 0, 1, 26, 29, 4, 0, 2, 0, 0, 1, 0, 1]' : 0.184829}
{'[2, 1, 0, 4, 6, 4, 0, 1, 26, 29, 4, 0, 2, 0, 0, 1, 0, 1]' : 0.184647}
{'[2, 1, 0, 4, 6, 4, 0, 1, 26, 29, 4, 0, 2, 0, 0, 1, 0, 1]' : 0.184854}
{'[2, 1, 0, 4, 6, 4, 0, 1, 26, 29, 4, 0, 2, 0, 0, 1, 0, 1]' : 0.184699}
{'[2, 1, 0, 4, 6, 4, 0, 1, 26, 29, 4, 0, 2, 0, 0, 1, 0, 1]' : 0.184519}
{'[2, 1, 0, 4, 6, 4, 0, 1, 26, 29, 4, 0, 2, 0, 0, 1, 0, 1]' : 0.184739}
{'[2, 1, 0, 4, 6, 4, 0, 1, 26, 29, 4, 0, 2, 0, 0, 1, 0, 1]' : 0.184465}
{'[2, 1, 0, 4, 6, 4, 0, 1, 26, 29, 4, 0, 2, 0, 0, 1, 0, 1]' : 0.184357}
{'[2, 1, 0, 4, 6, 4, 0, 1, 26, 29, 4, 0, 2, 0, 0, 1, 0, 1]' : 0.184484}
{'[2, 1, 0, 4, 6, 4, 0, 1, 26, 29, 4, 0, 2, 0, 0, 1, 0, 1]' : 0.184738}
{'[2, 1, 0, 4, 6, 4, 0, 1, 26, 29, 4, 0, 2, 0, 0, 1, 0, 1]' : 0.18522}
{'[2, 1, 0, 4, 6, 4, 0, 1, 26, 29, 4, 0, 2, 0, 0, 1, 0, 1]' : 0.184472}
{'[2, 1, 0, 4, 6, 4, 0, 1, 26, 29, 4, 0, 2, 0, 0, 1, 0, 1]' : 0.184484}
{'[2, 1, 0, 4, 6, 4, 0, 1, 26, 29, 4, 0, 2, 0, 0, 1, 0, 1]' : 0.184502}
{'[2, 1, 0, 4, 6, 4, 0, 1, 26, 29, 4, 0, 2, 0, 0, 1, 0, 1]' : 0.184308}
{'[2, 1, 0, 4, 6, 4, 0, 1, 26, 29, 4, 0, 2, 0, 0, 1, 0, 1]' : 0.185168}
{'[2, 1, 0, 4, 6, 4, 0, 1, 26, 29, 4, 0, 2, 0, 0, 1, 0, 1]' : 0.184613}
{'[2, 1, 0, 4, 6, 4, 0, 1, 26, 29, 4, 0, 2, 0, 0, 1, 0, 1]' : 0.184802}
{'[2, 1, 0, 4, 6, 4, 0, 1, 26, 29, 4, 0, 2, 0, 0, 1, 0, 1]' : 0.185043}
{'[2, 1, 0, 4, 6, 4, 0, 1, 26, 29, 4, 0, 2, 0, 0, 1, 0, 1]' : 0.184534}
{'[2, 1, 0, 4, 6, 4, 0, 1, 26, 29, 4, 0, 2, 0, 0, 1, 0, 1]' : 0.184644}
{'[2, 1, 0, 4, 6, 4, 0, 1, 26, 29, 4, 0, 2, 0, 0, 1, 0, 1]' : 0.184687}
{'[2, 1, 0, 4, 6, 4, 0, 1, 26, 29, 4, 0, 2, 0, 0, 1, 0, 1]' : 0.184289}
{'[2, 1, 0, 4, 6, 4, 0, 1, 26, 29, 4, 0, 2, 0, 0, 1, 0, 1]' : 0.184895}
{'[2, 1, 0, 4, 6, 4, 0, 1, 26, 29, 4, 0, 2, 0, 0, 1, 0, 1]' : 0.184413}
{'[2, 1, 0, 4, 6, 4, 0, 1, 26, 29, 4, 0, 2, 0, 0, 1, 0, 1]' : 0.184523}
{'[2, 1, 0, 4, 6, 4, 0, 1, 26, 29, 4, 0, 2, 0, 0, 1, 0, 1]' : 0.185165}
{'[2, 1, 0, 4, 6, 4, 0, 1, 26, 29, 4, 0, 2, 0, 0, 1, 0, 1]' : 0.184743}
{'[2, 1, 0, 4, 6, 4, 0, 1, 26, 29, 4, 0, 2, 0, 0, 1, 0, 1]' : 0.184631}
{'[2, 1, 0, 4, 6, 4, 0, 1, 26, 29, 4, 0, 2, 0, 0, 1, 0, 1]' : 0.184699}

out:
 ["{'[2, 1, 0, 4, 6, 4, 0, 1, 26, 29, 4, 0, 2, 0, 0, 1, 0, 1]' : 0.184829}", "{'[2, 1, 0, 4, 6, 4, 0, 1, 26, 29, 4, 0, 2, 0, 0, 1, 0, 1]' : 0.184647}", "{'[2, 1, 0, 4, 6, 4, 0, 1, 26, 29, 4, 0, 2, 0, 0, 1, 0, 1]' : 0.184854}", "{'[2, 1, 0, 4, 6, 4, 0, 1, 26, 29, 4, 0, 2, 0, 0, 1, 0, 1]' : 0.184699}", "{'[2, 1, 0, 4, 6, 4, 0, 1, 26, 29, 4, 0, 2, 0, 0, 1, 0, 1]' : 0.184519}", "{'[2, 1, 0, 4, 6, 4, 0, 1, 26, 29, 4, 0, 2, 0, 0, 1, 0, 1]' : 0.184739}", "{'[2, 1, 0, 4, 6, 4, 0, 1, 26, 29, 4, 0, 2, 0, 0, 1, 0, 1]' : 0.184465}", "{'[2, 1, 0, 4, 6, 4, 0, 1, 26, 29, 4, 0, 2, 0, 0, 1, 0, 1]' : 0.184357}", "{'[2, 1, 0, 4, 6, 4, 0, 1, 26, 29, 4, 0, 2, 0, 0, 1, 0, 1]' : 0.184484}", "{'[2, 1, 0, 4, 6, 4, 0, 1, 26, 29, 4, 0, 2, 0, 0, 1, 0, 1]' : 0.184738}", "{'[2, 1, 0, 4, 6, 4, 0, 1, 26, 29, 4, 0, 2, 0, 0, 1, 0, 1]' : 0.18522}", "{'[2, 1, 0, 4, 6, 4, 0, 1, 26, 29, 4, 0, 2, 0, 0, 1, 0, 1]' : 0.184472}", "{'[2, 1, 0, 4, 6, 4, 0, 1, 26, 29, 4, 0, 2, 0, 0, 1, 0, 1]' : 0.184484}", "{'[2, 1, 0, 4, 6, 4, 0, 1, 26, 29, 4, 0, 2, 0, 0, 1, 0, 1]' : 0.184502}", "{'[2, 1, 0, 4, 6, 4, 0, 1, 26, 29, 4, 0, 2, 0, 0, 1, 0, 1]' : 0.184308}", "{'[2, 1, 0, 4, 6, 4, 0, 1, 26, 29, 4, 0, 2, 0, 0, 1, 0, 1]' : 0.185168}", "{'[2, 1, 0, 4, 6, 4, 0, 1, 26, 29, 4, 0, 2, 0, 0, 1, 0, 1]' : 0.184613}", "{'[2, 1, 0, 4, 6, 4, 0, 1, 26, 29, 4, 0, 2, 0, 0, 1, 0, 1]' : 0.184802}", "{'[2, 1, 0, 4, 6, 4, 0, 1, 26, 29, 4, 0, 2, 0, 0, 1, 0, 1]' : 0.185043}", "{'[2, 1, 0, 4, 6, 4, 0, 1, 26, 29, 4, 0, 2, 0, 0, 1, 0, 1]' : 0.184534}", "{'[2, 1, 0, 4, 6, 4, 0, 1, 26, 29, 4, 0, 2, 0, 0, 1, 0, 1]' : 0.184644}", "{'[2, 1, 0, 4, 6, 4, 0, 1, 26, 29, 4, 0, 2, 0, 0, 1, 0, 1]' : 0.184687}", "{'[2, 1, 0, 4, 6, 4, 0, 1, 26, 29, 4, 0, 2, 0, 0, 1, 0, 1]' : 0.184289}", "{'[2, 1, 0, 4, 6, 4, 0, 1, 26, 29, 4, 0, 2, 0, 0, 1, 0, 1]' : 0.184895}", "{'[2, 1, 0, 4, 6, 4, 0, 1, 26, 29, 4, 0, 2, 0, 0, 1, 0, 1]' : 0.184413}", "{'[2, 1, 0, 4, 6, 4, 0, 1, 26, 29, 4, 0, 2, 0, 0, 1, 0, 1]' : 0.184523}", "{'[2, 1, 0, 4, 6, 4, 0, 1, 26, 29, 4, 0, 2, 0, 0, 1, 0, 1]' : 0.185165}", "{'[2, 1, 0, 4, 6, 4, 0, 1, 26, 29, 4, 0, 2, 0, 0, 1, 0, 1]' : 0.184743}", "{'[2, 1, 0, 4, 6, 4, 0, 1, 26, 29, 4, 0, 2, 0, 0, 1, 0, 1]' : 0.184631}", "{'[2, 1, 0, 4, 6, 4, 0, 1, 26, 29, 4, 0, 2, 0, 0, 1, 0, 1]' : 0.184699}"]
returning from 'run': {'[2, 1, 0, 4, 6, 4, 0, 1, 26, 29, 4, 0, 2, 0, 0, 1, 0, 1]': ([0.184829, 0.184647, 0.184854, 0.184699, 0.184519, 0.184739, 0.184465, 0.184357, 0.184484, 0.184738, 0.18522, 0.184472, 0.184484, 0.184502, 0.184308, 0.185168, 0.184613, 0.184802, 0.185043, 0.184534, 0.184644, 0.184687, 0.184289, 0.184895, 0.184413, 0.184523, 0.185165, 0.184743, 0.184631, 0.184699], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 1, 0, 4, 6, 4, 0, 1, 26, 29, 4, 0, 2, 0, 0, 1, 0, 1]': ([0.184829, 0.184647, 0.184854, 0.184699, 0.184519, 0.184739, 0.184465, 0.184357, 0.184484, 0.184738, 0.18522, 0.184472, 0.184484, 0.184502, 0.184308, 0.185168, 0.184613, 0.184802, 0.185043, 0.184534, 0.184644, 0.184687, 0.184289, 0.184895, 0.184413, 0.184523, 0.185165, 0.184743, 0.184631, 0.184699], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	5
        Additions: 		1614
        Multiplications: 	414
        Divisions: 		0
        Logical: 		0
        Reads: 			2548
        Writes: 		283
        Comparisons:		22
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest7.exe __orio_perftest7.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest7.exe  
Program Test Output: 
{'[2, 6, 3, 4, 0, 0, 0, 1, 24, 0, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.0918219}
{'[2, 6, 3, 4, 0, 0, 0, 1, 24, 0, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.0915871}
{'[2, 6, 3, 4, 0, 0, 0, 1, 24, 0, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.091512}
{'[2, 6, 3, 4, 0, 0, 0, 1, 24, 0, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.091424}
{'[2, 6, 3, 4, 0, 0, 0, 1, 24, 0, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.091723}
{'[2, 6, 3, 4, 0, 0, 0, 1, 24, 0, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.0917249}
{'[2, 6, 3, 4, 0, 0, 0, 1, 24, 0, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.0914791}
{'[2, 6, 3, 4, 0, 0, 0, 1, 24, 0, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.091408}
{'[2, 6, 3, 4, 0, 0, 0, 1, 24, 0, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.09144}
{'[2, 6, 3, 4, 0, 0, 0, 1, 24, 0, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.0914781}
{'[2, 6, 3, 4, 0, 0, 0, 1, 24, 0, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.0914378}
{'[2, 6, 3, 4, 0, 0, 0, 1, 24, 0, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.0914021}
{'[2, 6, 3, 4, 0, 0, 0, 1, 24, 0, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.091434}
{'[2, 6, 3, 4, 0, 0, 0, 1, 24, 0, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.0915031}
{'[2, 6, 3, 4, 0, 0, 0, 1, 24, 0, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.0914869}
{'[2, 6, 3, 4, 0, 0, 0, 1, 24, 0, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.091548}
{'[2, 6, 3, 4, 0, 0, 0, 1, 24, 0, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.0914452}
{'[2, 6, 3, 4, 0, 0, 0, 1, 24, 0, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.0914679}
{'[2, 6, 3, 4, 0, 0, 0, 1, 24, 0, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.091465}
{'[2, 6, 3, 4, 0, 0, 0, 1, 24, 0, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.0915821}
{'[2, 6, 3, 4, 0, 0, 0, 1, 24, 0, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.0914831}
{'[2, 6, 3, 4, 0, 0, 0, 1, 24, 0, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.091815}
{'[2, 6, 3, 4, 0, 0, 0, 1, 24, 0, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.0914788}
{'[2, 6, 3, 4, 0, 0, 0, 1, 24, 0, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.0914299}
{'[2, 6, 3, 4, 0, 0, 0, 1, 24, 0, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.0915329}
{'[2, 6, 3, 4, 0, 0, 0, 1, 24, 0, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.091537}
{'[2, 6, 3, 4, 0, 0, 0, 1, 24, 0, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.091547}
{'[2, 6, 3, 4, 0, 0, 0, 1, 24, 0, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.0914371}
{'[2, 6, 3, 4, 0, 0, 0, 1, 24, 0, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.091496}
{'[2, 6, 3, 4, 0, 0, 0, 1, 24, 0, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.09145}

out:
 ["{'[2, 6, 3, 4, 0, 0, 0, 1, 24, 0, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.0918219}", "{'[2, 6, 3, 4, 0, 0, 0, 1, 24, 0, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.0915871}", "{'[2, 6, 3, 4, 0, 0, 0, 1, 24, 0, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.091512}", "{'[2, 6, 3, 4, 0, 0, 0, 1, 24, 0, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.091424}", "{'[2, 6, 3, 4, 0, 0, 0, 1, 24, 0, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.091723}", "{'[2, 6, 3, 4, 0, 0, 0, 1, 24, 0, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.0917249}", "{'[2, 6, 3, 4, 0, 0, 0, 1, 24, 0, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.0914791}", "{'[2, 6, 3, 4, 0, 0, 0, 1, 24, 0, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.091408}", "{'[2, 6, 3, 4, 0, 0, 0, 1, 24, 0, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.09144}", "{'[2, 6, 3, 4, 0, 0, 0, 1, 24, 0, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.0914781}", "{'[2, 6, 3, 4, 0, 0, 0, 1, 24, 0, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.0914378}", "{'[2, 6, 3, 4, 0, 0, 0, 1, 24, 0, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.0914021}", "{'[2, 6, 3, 4, 0, 0, 0, 1, 24, 0, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.091434}", "{'[2, 6, 3, 4, 0, 0, 0, 1, 24, 0, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.0915031}", "{'[2, 6, 3, 4, 0, 0, 0, 1, 24, 0, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.0914869}", "{'[2, 6, 3, 4, 0, 0, 0, 1, 24, 0, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.091548}", "{'[2, 6, 3, 4, 0, 0, 0, 1, 24, 0, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.0914452}", "{'[2, 6, 3, 4, 0, 0, 0, 1, 24, 0, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.0914679}", "{'[2, 6, 3, 4, 0, 0, 0, 1, 24, 0, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.091465}", "{'[2, 6, 3, 4, 0, 0, 0, 1, 24, 0, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.0915821}", "{'[2, 6, 3, 4, 0, 0, 0, 1, 24, 0, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.0914831}", "{'[2, 6, 3, 4, 0, 0, 0, 1, 24, 0, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.091815}", "{'[2, 6, 3, 4, 0, 0, 0, 1, 24, 0, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.0914788}", "{'[2, 6, 3, 4, 0, 0, 0, 1, 24, 0, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.0914299}", "{'[2, 6, 3, 4, 0, 0, 0, 1, 24, 0, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.0915329}", "{'[2, 6, 3, 4, 0, 0, 0, 1, 24, 0, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.091537}", "{'[2, 6, 3, 4, 0, 0, 0, 1, 24, 0, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.091547}", "{'[2, 6, 3, 4, 0, 0, 0, 1, 24, 0, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.0914371}", "{'[2, 6, 3, 4, 0, 0, 0, 1, 24, 0, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.091496}", "{'[2, 6, 3, 4, 0, 0, 0, 1, 24, 0, 0, 12, 1, 1, 0, 0, 0, 0]' : 0.09145}"]
returning from 'run': {'[2, 6, 3, 4, 0, 0, 0, 1, 24, 0, 0, 12, 1, 1, 0, 0, 0, 0]': ([0.0918219, 0.0915871, 0.091512, 0.091424, 0.091723, 0.0917249, 0.0914791, 0.091408, 0.09144, 0.0914781, 0.0914378, 0.0914021, 0.091434, 0.0915031, 0.0914869, 0.091548, 0.0914452, 0.0914679, 0.091465, 0.0915821, 0.0914831, 0.091815, 0.0914788, 0.0914299, 0.0915329, 0.091537, 0.091547, 0.0914371, 0.091496, 0.09145], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 6, 3, 4, 0, 0, 0, 1, 24, 0, 0, 12, 1, 1, 0, 0, 0, 0]': ([0.0918219, 0.0915871, 0.091512, 0.091424, 0.091723, 0.0917249, 0.0914791, 0.091408, 0.09144, 0.0914781, 0.0914378, 0.0914021, 0.091434, 0.0915031, 0.0914869, 0.091548, 0.0914452, 0.0914679, 0.091465, 0.0915821, 0.0914831, 0.091815, 0.0914788, 0.0914299, 0.0915329, 0.091537, 0.091547, 0.0914371, 0.091496, 0.09145], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = iii
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	4
        Additions: 		726
        Multiplications: 	320
        Divisions: 		0
        Logical: 		0
        Reads: 			1501
        Writes: 		291
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest8.exe __orio_perftest8.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest8.exe  
Program Test Output: 
{'[4, 5, 4, 2, 0, 0, 0, 0, 19, 6, 7, 0, 1, 0, 0, 1, 1, 0]' : 0.0890651}
{'[4, 5, 4, 2, 0, 0, 0, 0, 19, 6, 7, 0, 1, 0, 0, 1, 1, 0]' : 0.0886631}
{'[4, 5, 4, 2, 0, 0, 0, 0, 19, 6, 7, 0, 1, 0, 0, 1, 1, 0]' : 0.0887129}
{'[4, 5, 4, 2, 0, 0, 0, 0, 19, 6, 7, 0, 1, 0, 0, 1, 1, 0]' : 0.0885999}
{'[4, 5, 4, 2, 0, 0, 0, 0, 19, 6, 7, 0, 1, 0, 0, 1, 1, 0]' : 0.090199}
{'[4, 5, 4, 2, 0, 0, 0, 0, 19, 6, 7, 0, 1, 0, 0, 1, 1, 0]' : 0.0890801}
{'[4, 5, 4, 2, 0, 0, 0, 0, 19, 6, 7, 0, 1, 0, 0, 1, 1, 0]' : 0.088655}
{'[4, 5, 4, 2, 0, 0, 0, 0, 19, 6, 7, 0, 1, 0, 0, 1, 1, 0]' : 0.088629}
{'[4, 5, 4, 2, 0, 0, 0, 0, 19, 6, 7, 0, 1, 0, 0, 1, 1, 0]' : 0.088912}
{'[4, 5, 4, 2, 0, 0, 0, 0, 19, 6, 7, 0, 1, 0, 0, 1, 1, 0]' : 0.0885961}
{'[4, 5, 4, 2, 0, 0, 0, 0, 19, 6, 7, 0, 1, 0, 0, 1, 1, 0]' : 0.088527}
{'[4, 5, 4, 2, 0, 0, 0, 0, 19, 6, 7, 0, 1, 0, 0, 1, 1, 0]' : 0.088604}
{'[4, 5, 4, 2, 0, 0, 0, 0, 19, 6, 7, 0, 1, 0, 0, 1, 1, 0]' : 0.088659}
{'[4, 5, 4, 2, 0, 0, 0, 0, 19, 6, 7, 0, 1, 0, 0, 1, 1, 0]' : 0.0886719}
{'[4, 5, 4, 2, 0, 0, 0, 0, 19, 6, 7, 0, 1, 0, 0, 1, 1, 0]' : 0.0886202}
{'[4, 5, 4, 2, 0, 0, 0, 0, 19, 6, 7, 0, 1, 0, 0, 1, 1, 0]' : 0.088557}
{'[4, 5, 4, 2, 0, 0, 0, 0, 19, 6, 7, 0, 1, 0, 0, 1, 1, 0]' : 0.0885589}
{'[4, 5, 4, 2, 0, 0, 0, 0, 19, 6, 7, 0, 1, 0, 0, 1, 1, 0]' : 0.0885842}
{'[4, 5, 4, 2, 0, 0, 0, 0, 19, 6, 7, 0, 1, 0, 0, 1, 1, 0]' : 0.0885999}
{'[4, 5, 4, 2, 0, 0, 0, 0, 19, 6, 7, 0, 1, 0, 0, 1, 1, 0]' : 0.088613}
{'[4, 5, 4, 2, 0, 0, 0, 0, 19, 6, 7, 0, 1, 0, 0, 1, 1, 0]' : 0.088649}
{'[4, 5, 4, 2, 0, 0, 0, 0, 19, 6, 7, 0, 1, 0, 0, 1, 1, 0]' : 0.0886331}
{'[4, 5, 4, 2, 0, 0, 0, 0, 19, 6, 7, 0, 1, 0, 0, 1, 1, 0]' : 0.088619}
{'[4, 5, 4, 2, 0, 0, 0, 0, 19, 6, 7, 0, 1, 0, 0, 1, 1, 0]' : 0.0886168}
{'[4, 5, 4, 2, 0, 0, 0, 0, 19, 6, 7, 0, 1, 0, 0, 1, 1, 0]' : 0.0886521}
{'[4, 5, 4, 2, 0, 0, 0, 0, 19, 6, 7, 0, 1, 0, 0, 1, 1, 0]' : 0.089045}
{'[4, 5, 4, 2, 0, 0, 0, 0, 19, 6, 7, 0, 1, 0, 0, 1, 1, 0]' : 0.0886168}
{'[4, 5, 4, 2, 0, 0, 0, 0, 19, 6, 7, 0, 1, 0, 0, 1, 1, 0]' : 0.088582}
{'[4, 5, 4, 2, 0, 0, 0, 0, 19, 6, 7, 0, 1, 0, 0, 1, 1, 0]' : 0.0886312}
{'[4, 5, 4, 2, 0, 0, 0, 0, 19, 6, 7, 0, 1, 0, 0, 1, 1, 0]' : 0.088583}

out:
 ["{'[4, 5, 4, 2, 0, 0, 0, 0, 19, 6, 7, 0, 1, 0, 0, 1, 1, 0]' : 0.0890651}", "{'[4, 5, 4, 2, 0, 0, 0, 0, 19, 6, 7, 0, 1, 0, 0, 1, 1, 0]' : 0.0886631}", "{'[4, 5, 4, 2, 0, 0, 0, 0, 19, 6, 7, 0, 1, 0, 0, 1, 1, 0]' : 0.0887129}", "{'[4, 5, 4, 2, 0, 0, 0, 0, 19, 6, 7, 0, 1, 0, 0, 1, 1, 0]' : 0.0885999}", "{'[4, 5, 4, 2, 0, 0, 0, 0, 19, 6, 7, 0, 1, 0, 0, 1, 1, 0]' : 0.090199}", "{'[4, 5, 4, 2, 0, 0, 0, 0, 19, 6, 7, 0, 1, 0, 0, 1, 1, 0]' : 0.0890801}", "{'[4, 5, 4, 2, 0, 0, 0, 0, 19, 6, 7, 0, 1, 0, 0, 1, 1, 0]' : 0.088655}", "{'[4, 5, 4, 2, 0, 0, 0, 0, 19, 6, 7, 0, 1, 0, 0, 1, 1, 0]' : 0.088629}", "{'[4, 5, 4, 2, 0, 0, 0, 0, 19, 6, 7, 0, 1, 0, 0, 1, 1, 0]' : 0.088912}", "{'[4, 5, 4, 2, 0, 0, 0, 0, 19, 6, 7, 0, 1, 0, 0, 1, 1, 0]' : 0.0885961}", "{'[4, 5, 4, 2, 0, 0, 0, 0, 19, 6, 7, 0, 1, 0, 0, 1, 1, 0]' : 0.088527}", "{'[4, 5, 4, 2, 0, 0, 0, 0, 19, 6, 7, 0, 1, 0, 0, 1, 1, 0]' : 0.088604}", "{'[4, 5, 4, 2, 0, 0, 0, 0, 19, 6, 7, 0, 1, 0, 0, 1, 1, 0]' : 0.088659}", "{'[4, 5, 4, 2, 0, 0, 0, 0, 19, 6, 7, 0, 1, 0, 0, 1, 1, 0]' : 0.0886719}", "{'[4, 5, 4, 2, 0, 0, 0, 0, 19, 6, 7, 0, 1, 0, 0, 1, 1, 0]' : 0.0886202}", "{'[4, 5, 4, 2, 0, 0, 0, 0, 19, 6, 7, 0, 1, 0, 0, 1, 1, 0]' : 0.088557}", "{'[4, 5, 4, 2, 0, 0, 0, 0, 19, 6, 7, 0, 1, 0, 0, 1, 1, 0]' : 0.0885589}", "{'[4, 5, 4, 2, 0, 0, 0, 0, 19, 6, 7, 0, 1, 0, 0, 1, 1, 0]' : 0.0885842}", "{'[4, 5, 4, 2, 0, 0, 0, 0, 19, 6, 7, 0, 1, 0, 0, 1, 1, 0]' : 0.0885999}", "{'[4, 5, 4, 2, 0, 0, 0, 0, 19, 6, 7, 0, 1, 0, 0, 1, 1, 0]' : 0.088613}", "{'[4, 5, 4, 2, 0, 0, 0, 0, 19, 6, 7, 0, 1, 0, 0, 1, 1, 0]' : 0.088649}", "{'[4, 5, 4, 2, 0, 0, 0, 0, 19, 6, 7, 0, 1, 0, 0, 1, 1, 0]' : 0.0886331}", "{'[4, 5, 4, 2, 0, 0, 0, 0, 19, 6, 7, 0, 1, 0, 0, 1, 1, 0]' : 0.088619}", "{'[4, 5, 4, 2, 0, 0, 0, 0, 19, 6, 7, 0, 1, 0, 0, 1, 1, 0]' : 0.0886168}", "{'[4, 5, 4, 2, 0, 0, 0, 0, 19, 6, 7, 0, 1, 0, 0, 1, 1, 0]' : 0.0886521}", "{'[4, 5, 4, 2, 0, 0, 0, 0, 19, 6, 7, 0, 1, 0, 0, 1, 1, 0]' : 0.089045}", "{'[4, 5, 4, 2, 0, 0, 0, 0, 19, 6, 7, 0, 1, 0, 0, 1, 1, 0]' : 0.0886168}", "{'[4, 5, 4, 2, 0, 0, 0, 0, 19, 6, 7, 0, 1, 0, 0, 1, 1, 0]' : 0.088582}", "{'[4, 5, 4, 2, 0, 0, 0, 0, 19, 6, 7, 0, 1, 0, 0, 1, 1, 0]' : 0.0886312}", "{'[4, 5, 4, 2, 0, 0, 0, 0, 19, 6, 7, 0, 1, 0, 0, 1, 1, 0]' : 0.088583}"]
returning from 'run': {'[4, 5, 4, 2, 0, 0, 0, 0, 19, 6, 7, 0, 1, 0, 0, 1, 1, 0]': ([0.0890651, 0.0886631, 0.0887129, 0.0885999, 0.090199, 0.0890801, 0.088655, 0.088629, 0.088912, 0.0885961, 0.088527, 0.088604, 0.088659, 0.0886719, 0.0886202, 0.088557, 0.0885589, 0.0885842, 0.0885999, 0.088613, 0.088649, 0.0886331, 0.088619, 0.0886168, 0.0886521, 0.089045, 0.0886168, 0.088582, 0.0886312, 0.088583], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 5, 4, 2, 0, 0, 0, 0, 19, 6, 7, 0, 1, 0, 0, 1, 1, 0]': ([0.0890651, 0.0886631, 0.0887129, 0.0885999, 0.090199, 0.0890801, 0.088655, 0.088629, 0.088912, 0.0885961, 0.088527, 0.088604, 0.088659, 0.0886719, 0.0886202, 0.088557, 0.0885589, 0.0885842, 0.0885999, 0.088613, 0.088649, 0.0886331, 0.088619, 0.0886168, 0.0886521, 0.089045, 0.0886168, 0.088582, 0.0886312, 0.088583], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	57
        Max loop nest depth: 	6
        Additions: 		3926
        Multiplications: 	1170
        Divisions: 		0
        Logical: 		0
        Reads: 			6407
        Writes: 		729
        Comparisons:		57
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest9.exe __orio_perftest9.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest9.exe  
Program Test Output: 
{'[3, 1, 4, 5, 6, 6, 0, 1, 4, 5, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.101705}
{'[3, 1, 4, 5, 6, 6, 0, 1, 4, 5, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.101348}
{'[3, 1, 4, 5, 6, 6, 0, 1, 4, 5, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.101102}
{'[3, 1, 4, 5, 6, 6, 0, 1, 4, 5, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.101215}
{'[3, 1, 4, 5, 6, 6, 0, 1, 4, 5, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.101905}
{'[3, 1, 4, 5, 6, 6, 0, 1, 4, 5, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.101223}
{'[3, 1, 4, 5, 6, 6, 0, 1, 4, 5, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.101098}
{'[3, 1, 4, 5, 6, 6, 0, 1, 4, 5, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.10138}
{'[3, 1, 4, 5, 6, 6, 0, 1, 4, 5, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.101636}
{'[3, 1, 4, 5, 6, 6, 0, 1, 4, 5, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.101393}
{'[3, 1, 4, 5, 6, 6, 0, 1, 4, 5, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.101186}
{'[3, 1, 4, 5, 6, 6, 0, 1, 4, 5, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.101381}
{'[3, 1, 4, 5, 6, 6, 0, 1, 4, 5, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.102108}
{'[3, 1, 4, 5, 6, 6, 0, 1, 4, 5, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.10131}
{'[3, 1, 4, 5, 6, 6, 0, 1, 4, 5, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.101039}
{'[3, 1, 4, 5, 6, 6, 0, 1, 4, 5, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.10121}
{'[3, 1, 4, 5, 6, 6, 0, 1, 4, 5, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.101744}
{'[3, 1, 4, 5, 6, 6, 0, 1, 4, 5, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.101382}
{'[3, 1, 4, 5, 6, 6, 0, 1, 4, 5, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.101536}
{'[3, 1, 4, 5, 6, 6, 0, 1, 4, 5, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.101542}
{'[3, 1, 4, 5, 6, 6, 0, 1, 4, 5, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.101561}
{'[3, 1, 4, 5, 6, 6, 0, 1, 4, 5, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.101262}
{'[3, 1, 4, 5, 6, 6, 0, 1, 4, 5, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.101187}
{'[3, 1, 4, 5, 6, 6, 0, 1, 4, 5, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.101215}
{'[3, 1, 4, 5, 6, 6, 0, 1, 4, 5, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.10154}
{'[3, 1, 4, 5, 6, 6, 0, 1, 4, 5, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.10124}
{'[3, 1, 4, 5, 6, 6, 0, 1, 4, 5, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.101119}
{'[3, 1, 4, 5, 6, 6, 0, 1, 4, 5, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.101414}
{'[3, 1, 4, 5, 6, 6, 0, 1, 4, 5, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.101752}
{'[3, 1, 4, 5, 6, 6, 0, 1, 4, 5, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.101372}

out:
 ["{'[3, 1, 4, 5, 6, 6, 0, 1, 4, 5, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.101705}", "{'[3, 1, 4, 5, 6, 6, 0, 1, 4, 5, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.101348}", "{'[3, 1, 4, 5, 6, 6, 0, 1, 4, 5, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.101102}", "{'[3, 1, 4, 5, 6, 6, 0, 1, 4, 5, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.101215}", "{'[3, 1, 4, 5, 6, 6, 0, 1, 4, 5, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.101905}", "{'[3, 1, 4, 5, 6, 6, 0, 1, 4, 5, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.101223}", "{'[3, 1, 4, 5, 6, 6, 0, 1, 4, 5, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.101098}", "{'[3, 1, 4, 5, 6, 6, 0, 1, 4, 5, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.10138}", "{'[3, 1, 4, 5, 6, 6, 0, 1, 4, 5, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.101636}", "{'[3, 1, 4, 5, 6, 6, 0, 1, 4, 5, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.101393}", "{'[3, 1, 4, 5, 6, 6, 0, 1, 4, 5, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.101186}", "{'[3, 1, 4, 5, 6, 6, 0, 1, 4, 5, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.101381}", "{'[3, 1, 4, 5, 6, 6, 0, 1, 4, 5, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.102108}", "{'[3, 1, 4, 5, 6, 6, 0, 1, 4, 5, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.10131}", "{'[3, 1, 4, 5, 6, 6, 0, 1, 4, 5, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.101039}", "{'[3, 1, 4, 5, 6, 6, 0, 1, 4, 5, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.10121}", "{'[3, 1, 4, 5, 6, 6, 0, 1, 4, 5, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.101744}", "{'[3, 1, 4, 5, 6, 6, 0, 1, 4, 5, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.101382}", "{'[3, 1, 4, 5, 6, 6, 0, 1, 4, 5, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.101536}", "{'[3, 1, 4, 5, 6, 6, 0, 1, 4, 5, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.101542}", "{'[3, 1, 4, 5, 6, 6, 0, 1, 4, 5, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.101561}", "{'[3, 1, 4, 5, 6, 6, 0, 1, 4, 5, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.101262}", "{'[3, 1, 4, 5, 6, 6, 0, 1, 4, 5, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.101187}", "{'[3, 1, 4, 5, 6, 6, 0, 1, 4, 5, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.101215}", "{'[3, 1, 4, 5, 6, 6, 0, 1, 4, 5, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.10154}", "{'[3, 1, 4, 5, 6, 6, 0, 1, 4, 5, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.10124}", "{'[3, 1, 4, 5, 6, 6, 0, 1, 4, 5, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.101119}", "{'[3, 1, 4, 5, 6, 6, 0, 1, 4, 5, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.101414}", "{'[3, 1, 4, 5, 6, 6, 0, 1, 4, 5, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.101752}", "{'[3, 1, 4, 5, 6, 6, 0, 1, 4, 5, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.101372}"]
returning from 'run': {'[3, 1, 4, 5, 6, 6, 0, 1, 4, 5, 28, 0, 1, 1, 0, 0, 0, 0]': ([0.101705, 0.101348, 0.101102, 0.101215, 0.101905, 0.101223, 0.101098, 0.10138, 0.101636, 0.101393, 0.101186, 0.101381, 0.102108, 0.10131, 0.101039, 0.10121, 0.101744, 0.101382, 0.101536, 0.101542, 0.101561, 0.101262, 0.101187, 0.101215, 0.10154, 0.10124, 0.101119, 0.101414, 0.101752, 0.101372], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 1, 4, 5, 6, 6, 0, 1, 4, 5, 28, 0, 1, 1, 0, 0, 0, 0]': ([0.101705, 0.101348, 0.101102, 0.101215, 0.101905, 0.101223, 0.101098, 0.10138, 0.101636, 0.101393, 0.101186, 0.101381, 0.102108, 0.10131, 0.101039, 0.10121, 0.101744, 0.101382, 0.101536, 0.101542, 0.101561, 0.101262, 0.101187, 0.101215, 0.10154, 0.10124, 0.101119, 0.101414, 0.101752, 0.101372], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	6
        Additions: 		75
        Multiplications: 	18
        Divisions: 		0
        Logical: 		0
        Reads: 			188
        Writes: 		40
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest10.exe __orio_perftest10.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest10.exe  
Program Test Output: 
{'[5, 1, 0, 4, 1, 6, 1, 0, 2, 0, 21, 0, 0, 1, 0, 0, 1, 0]' : 0.161538}
{'[5, 1, 0, 4, 1, 6, 1, 0, 2, 0, 21, 0, 0, 1, 0, 0, 1, 0]' : 0.161546}
{'[5, 1, 0, 4, 1, 6, 1, 0, 2, 0, 21, 0, 0, 1, 0, 0, 1, 0]' : 0.161351}
{'[5, 1, 0, 4, 1, 6, 1, 0, 2, 0, 21, 0, 0, 1, 0, 0, 1, 0]' : 0.161507}
{'[5, 1, 0, 4, 1, 6, 1, 0, 2, 0, 21, 0, 0, 1, 0, 0, 1, 0]' : 0.161424}
{'[5, 1, 0, 4, 1, 6, 1, 0, 2, 0, 21, 0, 0, 1, 0, 0, 1, 0]' : 0.161635}
{'[5, 1, 0, 4, 1, 6, 1, 0, 2, 0, 21, 0, 0, 1, 0, 0, 1, 0]' : 0.1615}
{'[5, 1, 0, 4, 1, 6, 1, 0, 2, 0, 21, 0, 0, 1, 0, 0, 1, 0]' : 0.161378}
{'[5, 1, 0, 4, 1, 6, 1, 0, 2, 0, 21, 0, 0, 1, 0, 0, 1, 0]' : 0.161373}
{'[5, 1, 0, 4, 1, 6, 1, 0, 2, 0, 21, 0, 0, 1, 0, 0, 1, 0]' : 0.16137}
{'[5, 1, 0, 4, 1, 6, 1, 0, 2, 0, 21, 0, 0, 1, 0, 0, 1, 0]' : 0.161416}
{'[5, 1, 0, 4, 1, 6, 1, 0, 2, 0, 21, 0, 0, 1, 0, 0, 1, 0]' : 0.161393}
{'[5, 1, 0, 4, 1, 6, 1, 0, 2, 0, 21, 0, 0, 1, 0, 0, 1, 0]' : 0.161437}
{'[5, 1, 0, 4, 1, 6, 1, 0, 2, 0, 21, 0, 0, 1, 0, 0, 1, 0]' : 0.161331}
{'[5, 1, 0, 4, 1, 6, 1, 0, 2, 0, 21, 0, 0, 1, 0, 0, 1, 0]' : 0.161355}
{'[5, 1, 0, 4, 1, 6, 1, 0, 2, 0, 21, 0, 0, 1, 0, 0, 1, 0]' : 0.161502}
{'[5, 1, 0, 4, 1, 6, 1, 0, 2, 0, 21, 0, 0, 1, 0, 0, 1, 0]' : 0.161363}
{'[5, 1, 0, 4, 1, 6, 1, 0, 2, 0, 21, 0, 0, 1, 0, 0, 1, 0]' : 0.161459}
{'[5, 1, 0, 4, 1, 6, 1, 0, 2, 0, 21, 0, 0, 1, 0, 0, 1, 0]' : 0.161353}
{'[5, 1, 0, 4, 1, 6, 1, 0, 2, 0, 21, 0, 0, 1, 0, 0, 1, 0]' : 0.161503}
{'[5, 1, 0, 4, 1, 6, 1, 0, 2, 0, 21, 0, 0, 1, 0, 0, 1, 0]' : 0.161308}
{'[5, 1, 0, 4, 1, 6, 1, 0, 2, 0, 21, 0, 0, 1, 0, 0, 1, 0]' : 0.161322}
{'[5, 1, 0, 4, 1, 6, 1, 0, 2, 0, 21, 0, 0, 1, 0, 0, 1, 0]' : 0.161315}
{'[5, 1, 0, 4, 1, 6, 1, 0, 2, 0, 21, 0, 0, 1, 0, 0, 1, 0]' : 0.161461}
{'[5, 1, 0, 4, 1, 6, 1, 0, 2, 0, 21, 0, 0, 1, 0, 0, 1, 0]' : 0.161444}
{'[5, 1, 0, 4, 1, 6, 1, 0, 2, 0, 21, 0, 0, 1, 0, 0, 1, 0]' : 0.161377}
{'[5, 1, 0, 4, 1, 6, 1, 0, 2, 0, 21, 0, 0, 1, 0, 0, 1, 0]' : 0.161403}
{'[5, 1, 0, 4, 1, 6, 1, 0, 2, 0, 21, 0, 0, 1, 0, 0, 1, 0]' : 0.161387}
{'[5, 1, 0, 4, 1, 6, 1, 0, 2, 0, 21, 0, 0, 1, 0, 0, 1, 0]' : 0.161369}
{'[5, 1, 0, 4, 1, 6, 1, 0, 2, 0, 21, 0, 0, 1, 0, 0, 1, 0]' : 0.161375}

out:
 ["{'[5, 1, 0, 4, 1, 6, 1, 0, 2, 0, 21, 0, 0, 1, 0, 0, 1, 0]' : 0.161538}", "{'[5, 1, 0, 4, 1, 6, 1, 0, 2, 0, 21, 0, 0, 1, 0, 0, 1, 0]' : 0.161546}", "{'[5, 1, 0, 4, 1, 6, 1, 0, 2, 0, 21, 0, 0, 1, 0, 0, 1, 0]' : 0.161351}", "{'[5, 1, 0, 4, 1, 6, 1, 0, 2, 0, 21, 0, 0, 1, 0, 0, 1, 0]' : 0.161507}", "{'[5, 1, 0, 4, 1, 6, 1, 0, 2, 0, 21, 0, 0, 1, 0, 0, 1, 0]' : 0.161424}", "{'[5, 1, 0, 4, 1, 6, 1, 0, 2, 0, 21, 0, 0, 1, 0, 0, 1, 0]' : 0.161635}", "{'[5, 1, 0, 4, 1, 6, 1, 0, 2, 0, 21, 0, 0, 1, 0, 0, 1, 0]' : 0.1615}", "{'[5, 1, 0, 4, 1, 6, 1, 0, 2, 0, 21, 0, 0, 1, 0, 0, 1, 0]' : 0.161378}", "{'[5, 1, 0, 4, 1, 6, 1, 0, 2, 0, 21, 0, 0, 1, 0, 0, 1, 0]' : 0.161373}", "{'[5, 1, 0, 4, 1, 6, 1, 0, 2, 0, 21, 0, 0, 1, 0, 0, 1, 0]' : 0.16137}", "{'[5, 1, 0, 4, 1, 6, 1, 0, 2, 0, 21, 0, 0, 1, 0, 0, 1, 0]' : 0.161416}", "{'[5, 1, 0, 4, 1, 6, 1, 0, 2, 0, 21, 0, 0, 1, 0, 0, 1, 0]' : 0.161393}", "{'[5, 1, 0, 4, 1, 6, 1, 0, 2, 0, 21, 0, 0, 1, 0, 0, 1, 0]' : 0.161437}", "{'[5, 1, 0, 4, 1, 6, 1, 0, 2, 0, 21, 0, 0, 1, 0, 0, 1, 0]' : 0.161331}", "{'[5, 1, 0, 4, 1, 6, 1, 0, 2, 0, 21, 0, 0, 1, 0, 0, 1, 0]' : 0.161355}", "{'[5, 1, 0, 4, 1, 6, 1, 0, 2, 0, 21, 0, 0, 1, 0, 0, 1, 0]' : 0.161502}", "{'[5, 1, 0, 4, 1, 6, 1, 0, 2, 0, 21, 0, 0, 1, 0, 0, 1, 0]' : 0.161363}", "{'[5, 1, 0, 4, 1, 6, 1, 0, 2, 0, 21, 0, 0, 1, 0, 0, 1, 0]' : 0.161459}", "{'[5, 1, 0, 4, 1, 6, 1, 0, 2, 0, 21, 0, 0, 1, 0, 0, 1, 0]' : 0.161353}", "{'[5, 1, 0, 4, 1, 6, 1, 0, 2, 0, 21, 0, 0, 1, 0, 0, 1, 0]' : 0.161503}", "{'[5, 1, 0, 4, 1, 6, 1, 0, 2, 0, 21, 0, 0, 1, 0, 0, 1, 0]' : 0.161308}", "{'[5, 1, 0, 4, 1, 6, 1, 0, 2, 0, 21, 0, 0, 1, 0, 0, 1, 0]' : 0.161322}", "{'[5, 1, 0, 4, 1, 6, 1, 0, 2, 0, 21, 0, 0, 1, 0, 0, 1, 0]' : 0.161315}", "{'[5, 1, 0, 4, 1, 6, 1, 0, 2, 0, 21, 0, 0, 1, 0, 0, 1, 0]' : 0.161461}", "{'[5, 1, 0, 4, 1, 6, 1, 0, 2, 0, 21, 0, 0, 1, 0, 0, 1, 0]' : 0.161444}", "{'[5, 1, 0, 4, 1, 6, 1, 0, 2, 0, 21, 0, 0, 1, 0, 0, 1, 0]' : 0.161377}", "{'[5, 1, 0, 4, 1, 6, 1, 0, 2, 0, 21, 0, 0, 1, 0, 0, 1, 0]' : 0.161403}", "{'[5, 1, 0, 4, 1, 6, 1, 0, 2, 0, 21, 0, 0, 1, 0, 0, 1, 0]' : 0.161387}", "{'[5, 1, 0, 4, 1, 6, 1, 0, 2, 0, 21, 0, 0, 1, 0, 0, 1, 0]' : 0.161369}", "{'[5, 1, 0, 4, 1, 6, 1, 0, 2, 0, 21, 0, 0, 1, 0, 0, 1, 0]' : 0.161375}"]
returning from 'run': {'[5, 1, 0, 4, 1, 6, 1, 0, 2, 0, 21, 0, 0, 1, 0, 0, 1, 0]': ([0.161538, 0.161546, 0.161351, 0.161507, 0.161424, 0.161635, 0.1615, 0.161378, 0.161373, 0.16137, 0.161416, 0.161393, 0.161437, 0.161331, 0.161355, 0.161502, 0.161363, 0.161459, 0.161353, 0.161503, 0.161308, 0.161322, 0.161315, 0.161461, 0.161444, 0.161377, 0.161403, 0.161387, 0.161369, 0.161375], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 1, 0, 4, 1, 6, 1, 0, 2, 0, 21, 0, 0, 1, 0, 0, 1, 0]': ([0.161538, 0.161546, 0.161351, 0.161507, 0.161424, 0.161635, 0.1615, 0.161378, 0.161373, 0.16137, 0.161416, 0.161393, 0.161437, 0.161331, 0.161355, 0.161502, 0.161363, 0.161459, 0.161353, 0.161503, 0.161308, 0.161322, 0.161315, 0.161461, 0.161444, 0.161377, 0.161403, 0.161387, 0.161369, 0.161375], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	6
        Additions: 		274
        Multiplications: 	64
        Divisions: 		0
        Logical: 		0
        Reads: 			546
        Writes: 		92
        Comparisons:		15
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest11.exe __orio_perftest11.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest11.exe  
Program Test Output: 
{'[6, 1, 2, 6, 6, 2, 1, 1, 17, 0, 8, 22, 0, 1, 0, 0, 1, 1]' : 0.21504}
{'[6, 1, 2, 6, 6, 2, 1, 1, 17, 0, 8, 22, 0, 1, 0, 0, 1, 1]' : 0.214766}
{'[6, 1, 2, 6, 6, 2, 1, 1, 17, 0, 8, 22, 0, 1, 0, 0, 1, 1]' : 0.214719}
{'[6, 1, 2, 6, 6, 2, 1, 1, 17, 0, 8, 22, 0, 1, 0, 0, 1, 1]' : 0.214743}
{'[6, 1, 2, 6, 6, 2, 1, 1, 17, 0, 8, 22, 0, 1, 0, 0, 1, 1]' : 0.214833}
{'[6, 1, 2, 6, 6, 2, 1, 1, 17, 0, 8, 22, 0, 1, 0, 0, 1, 1]' : 0.214838}
{'[6, 1, 2, 6, 6, 2, 1, 1, 17, 0, 8, 22, 0, 1, 0, 0, 1, 1]' : 0.214708}
{'[6, 1, 2, 6, 6, 2, 1, 1, 17, 0, 8, 22, 0, 1, 0, 0, 1, 1]' : 0.214667}
{'[6, 1, 2, 6, 6, 2, 1, 1, 17, 0, 8, 22, 0, 1, 0, 0, 1, 1]' : 0.214869}
{'[6, 1, 2, 6, 6, 2, 1, 1, 17, 0, 8, 22, 0, 1, 0, 0, 1, 1]' : 0.21478}
{'[6, 1, 2, 6, 6, 2, 1, 1, 17, 0, 8, 22, 0, 1, 0, 0, 1, 1]' : 0.214753}
{'[6, 1, 2, 6, 6, 2, 1, 1, 17, 0, 8, 22, 0, 1, 0, 0, 1, 1]' : 0.2148}
{'[6, 1, 2, 6, 6, 2, 1, 1, 17, 0, 8, 22, 0, 1, 0, 0, 1, 1]' : 0.214694}
{'[6, 1, 2, 6, 6, 2, 1, 1, 17, 0, 8, 22, 0, 1, 0, 0, 1, 1]' : 0.214747}
{'[6, 1, 2, 6, 6, 2, 1, 1, 17, 0, 8, 22, 0, 1, 0, 0, 1, 1]' : 0.21494}
{'[6, 1, 2, 6, 6, 2, 1, 1, 17, 0, 8, 22, 0, 1, 0, 0, 1, 1]' : 0.214718}
{'[6, 1, 2, 6, 6, 2, 1, 1, 17, 0, 8, 22, 0, 1, 0, 0, 1, 1]' : 0.214646}
{'[6, 1, 2, 6, 6, 2, 1, 1, 17, 0, 8, 22, 0, 1, 0, 0, 1, 1]' : 0.214873}
{'[6, 1, 2, 6, 6, 2, 1, 1, 17, 0, 8, 22, 0, 1, 0, 0, 1, 1]' : 0.214812}
{'[6, 1, 2, 6, 6, 2, 1, 1, 17, 0, 8, 22, 0, 1, 0, 0, 1, 1]' : 0.214748}
{'[6, 1, 2, 6, 6, 2, 1, 1, 17, 0, 8, 22, 0, 1, 0, 0, 1, 1]' : 0.214693}
{'[6, 1, 2, 6, 6, 2, 1, 1, 17, 0, 8, 22, 0, 1, 0, 0, 1, 1]' : 0.214734}
{'[6, 1, 2, 6, 6, 2, 1, 1, 17, 0, 8, 22, 0, 1, 0, 0, 1, 1]' : 0.214732}
{'[6, 1, 2, 6, 6, 2, 1, 1, 17, 0, 8, 22, 0, 1, 0, 0, 1, 1]' : 0.21474}
{'[6, 1, 2, 6, 6, 2, 1, 1, 17, 0, 8, 22, 0, 1, 0, 0, 1, 1]' : 0.214723}
{'[6, 1, 2, 6, 6, 2, 1, 1, 17, 0, 8, 22, 0, 1, 0, 0, 1, 1]' : 0.214828}
{'[6, 1, 2, 6, 6, 2, 1, 1, 17, 0, 8, 22, 0, 1, 0, 0, 1, 1]' : 0.214809}
{'[6, 1, 2, 6, 6, 2, 1, 1, 17, 0, 8, 22, 0, 1, 0, 0, 1, 1]' : 0.215312}
{'[6, 1, 2, 6, 6, 2, 1, 1, 17, 0, 8, 22, 0, 1, 0, 0, 1, 1]' : 0.215886}
{'[6, 1, 2, 6, 6, 2, 1, 1, 17, 0, 8, 22, 0, 1, 0, 0, 1, 1]' : 0.215283}

out:
 ["{'[6, 1, 2, 6, 6, 2, 1, 1, 17, 0, 8, 22, 0, 1, 0, 0, 1, 1]' : 0.21504}", "{'[6, 1, 2, 6, 6, 2, 1, 1, 17, 0, 8, 22, 0, 1, 0, 0, 1, 1]' : 0.214766}", "{'[6, 1, 2, 6, 6, 2, 1, 1, 17, 0, 8, 22, 0, 1, 0, 0, 1, 1]' : 0.214719}", "{'[6, 1, 2, 6, 6, 2, 1, 1, 17, 0, 8, 22, 0, 1, 0, 0, 1, 1]' : 0.214743}", "{'[6, 1, 2, 6, 6, 2, 1, 1, 17, 0, 8, 22, 0, 1, 0, 0, 1, 1]' : 0.214833}", "{'[6, 1, 2, 6, 6, 2, 1, 1, 17, 0, 8, 22, 0, 1, 0, 0, 1, 1]' : 0.214838}", "{'[6, 1, 2, 6, 6, 2, 1, 1, 17, 0, 8, 22, 0, 1, 0, 0, 1, 1]' : 0.214708}", "{'[6, 1, 2, 6, 6, 2, 1, 1, 17, 0, 8, 22, 0, 1, 0, 0, 1, 1]' : 0.214667}", "{'[6, 1, 2, 6, 6, 2, 1, 1, 17, 0, 8, 22, 0, 1, 0, 0, 1, 1]' : 0.214869}", "{'[6, 1, 2, 6, 6, 2, 1, 1, 17, 0, 8, 22, 0, 1, 0, 0, 1, 1]' : 0.21478}", "{'[6, 1, 2, 6, 6, 2, 1, 1, 17, 0, 8, 22, 0, 1, 0, 0, 1, 1]' : 0.214753}", "{'[6, 1, 2, 6, 6, 2, 1, 1, 17, 0, 8, 22, 0, 1, 0, 0, 1, 1]' : 0.2148}", "{'[6, 1, 2, 6, 6, 2, 1, 1, 17, 0, 8, 22, 0, 1, 0, 0, 1, 1]' : 0.214694}", "{'[6, 1, 2, 6, 6, 2, 1, 1, 17, 0, 8, 22, 0, 1, 0, 0, 1, 1]' : 0.214747}", "{'[6, 1, 2, 6, 6, 2, 1, 1, 17, 0, 8, 22, 0, 1, 0, 0, 1, 1]' : 0.21494}", "{'[6, 1, 2, 6, 6, 2, 1, 1, 17, 0, 8, 22, 0, 1, 0, 0, 1, 1]' : 0.214718}", "{'[6, 1, 2, 6, 6, 2, 1, 1, 17, 0, 8, 22, 0, 1, 0, 0, 1, 1]' : 0.214646}", "{'[6, 1, 2, 6, 6, 2, 1, 1, 17, 0, 8, 22, 0, 1, 0, 0, 1, 1]' : 0.214873}", "{'[6, 1, 2, 6, 6, 2, 1, 1, 17, 0, 8, 22, 0, 1, 0, 0, 1, 1]' : 0.214812}", "{'[6, 1, 2, 6, 6, 2, 1, 1, 17, 0, 8, 22, 0, 1, 0, 0, 1, 1]' : 0.214748}", "{'[6, 1, 2, 6, 6, 2, 1, 1, 17, 0, 8, 22, 0, 1, 0, 0, 1, 1]' : 0.214693}", "{'[6, 1, 2, 6, 6, 2, 1, 1, 17, 0, 8, 22, 0, 1, 0, 0, 1, 1]' : 0.214734}", "{'[6, 1, 2, 6, 6, 2, 1, 1, 17, 0, 8, 22, 0, 1, 0, 0, 1, 1]' : 0.214732}", "{'[6, 1, 2, 6, 6, 2, 1, 1, 17, 0, 8, 22, 0, 1, 0, 0, 1, 1]' : 0.21474}", "{'[6, 1, 2, 6, 6, 2, 1, 1, 17, 0, 8, 22, 0, 1, 0, 0, 1, 1]' : 0.214723}", "{'[6, 1, 2, 6, 6, 2, 1, 1, 17, 0, 8, 22, 0, 1, 0, 0, 1, 1]' : 0.214828}", "{'[6, 1, 2, 6, 6, 2, 1, 1, 17, 0, 8, 22, 0, 1, 0, 0, 1, 1]' : 0.214809}", "{'[6, 1, 2, 6, 6, 2, 1, 1, 17, 0, 8, 22, 0, 1, 0, 0, 1, 1]' : 0.215312}", "{'[6, 1, 2, 6, 6, 2, 1, 1, 17, 0, 8, 22, 0, 1, 0, 0, 1, 1]' : 0.215886}", "{'[6, 1, 2, 6, 6, 2, 1, 1, 17, 0, 8, 22, 0, 1, 0, 0, 1, 1]' : 0.215283}"]
returning from 'run': {'[6, 1, 2, 6, 6, 2, 1, 1, 17, 0, 8, 22, 0, 1, 0, 0, 1, 1]': ([0.21504, 0.214766, 0.214719, 0.214743, 0.214833, 0.214838, 0.214708, 0.214667, 0.214869, 0.21478, 0.214753, 0.2148, 0.214694, 0.214747, 0.21494, 0.214718, 0.214646, 0.214873, 0.214812, 0.214748, 0.214693, 0.214734, 0.214732, 0.21474, 0.214723, 0.214828, 0.214809, 0.215312, 0.215886, 0.215283], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 1, 2, 6, 6, 2, 1, 1, 17, 0, 8, 22, 0, 1, 0, 0, 1, 1]': ([0.21504, 0.214766, 0.214719, 0.214743, 0.214833, 0.214838, 0.214708, 0.214667, 0.214869, 0.21478, 0.214753, 0.2148, 0.214694, 0.214747, 0.21494, 0.214718, 0.214646, 0.214873, 0.214812, 0.214748, 0.214693, 0.214734, 0.214732, 0.21474, 0.214723, 0.214828, 0.214809, 0.215312, 0.215886, 0.215283], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	5
        Additions: 		1952
        Multiplications: 	900
        Divisions: 		0
        Logical: 		0
        Reads: 			3919
        Writes: 		709
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest12.exe __orio_perftest12.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest12.exe  
Program Test Output: 
{'[6, 2, 3, 0, 0, 5, 0, 0, 29, 0, 14, 24, 1, 0, 1, 1, 0, 1]' : 0.0792751}
{'[6, 2, 3, 0, 0, 5, 0, 0, 29, 0, 14, 24, 1, 0, 1, 1, 0, 1]' : 0.079037}
{'[6, 2, 3, 0, 0, 5, 0, 0, 29, 0, 14, 24, 1, 0, 1, 1, 0, 1]' : 0.0789809}
{'[6, 2, 3, 0, 0, 5, 0, 0, 29, 0, 14, 24, 1, 0, 1, 1, 0, 1]' : 0.078943}
{'[6, 2, 3, 0, 0, 5, 0, 0, 29, 0, 14, 24, 1, 0, 1, 1, 0, 1]' : 0.0789342}
{'[6, 2, 3, 0, 0, 5, 0, 0, 29, 0, 14, 24, 1, 0, 1, 1, 0, 1]' : 0.0791368}
{'[6, 2, 3, 0, 0, 5, 0, 0, 29, 0, 14, 24, 1, 0, 1, 1, 0, 1]' : 0.0789661}
{'[6, 2, 3, 0, 0, 5, 0, 0, 29, 0, 14, 24, 1, 0, 1, 1, 0, 1]' : 0.0789549}
{'[6, 2, 3, 0, 0, 5, 0, 0, 29, 0, 14, 24, 1, 0, 1, 1, 0, 1]' : 0.078903}
{'[6, 2, 3, 0, 0, 5, 0, 0, 29, 0, 14, 24, 1, 0, 1, 1, 0, 1]' : 0.079056}
{'[6, 2, 3, 0, 0, 5, 0, 0, 29, 0, 14, 24, 1, 0, 1, 1, 0, 1]' : 0.078999}
{'[6, 2, 3, 0, 0, 5, 0, 0, 29, 0, 14, 24, 1, 0, 1, 1, 0, 1]' : 0.078975}
{'[6, 2, 3, 0, 0, 5, 0, 0, 29, 0, 14, 24, 1, 0, 1, 1, 0, 1]' : 0.0789781}
{'[6, 2, 3, 0, 0, 5, 0, 0, 29, 0, 14, 24, 1, 0, 1, 1, 0, 1]' : 0.078902}
{'[6, 2, 3, 0, 0, 5, 0, 0, 29, 0, 14, 24, 1, 0, 1, 1, 0, 1]' : 0.0789971}
{'[6, 2, 3, 0, 0, 5, 0, 0, 29, 0, 14, 24, 1, 0, 1, 1, 0, 1]' : 0.0793679}
{'[6, 2, 3, 0, 0, 5, 0, 0, 29, 0, 14, 24, 1, 0, 1, 1, 0, 1]' : 0.079015}
{'[6, 2, 3, 0, 0, 5, 0, 0, 29, 0, 14, 24, 1, 0, 1, 1, 0, 1]' : 0.078882}
{'[6, 2, 3, 0, 0, 5, 0, 0, 29, 0, 14, 24, 1, 0, 1, 1, 0, 1]' : 0.0789821}
{'[6, 2, 3, 0, 0, 5, 0, 0, 29, 0, 14, 24, 1, 0, 1, 1, 0, 1]' : 0.0790398}
{'[6, 2, 3, 0, 0, 5, 0, 0, 29, 0, 14, 24, 1, 0, 1, 1, 0, 1]' : 0.0790231}
{'[6, 2, 3, 0, 0, 5, 0, 0, 29, 0, 14, 24, 1, 0, 1, 1, 0, 1]' : 0.0790539}
{'[6, 2, 3, 0, 0, 5, 0, 0, 29, 0, 14, 24, 1, 0, 1, 1, 0, 1]' : 0.0789201}
{'[6, 2, 3, 0, 0, 5, 0, 0, 29, 0, 14, 24, 1, 0, 1, 1, 0, 1]' : 0.079098}
{'[6, 2, 3, 0, 0, 5, 0, 0, 29, 0, 14, 24, 1, 0, 1, 1, 0, 1]' : 0.0790401}
{'[6, 2, 3, 0, 0, 5, 0, 0, 29, 0, 14, 24, 1, 0, 1, 1, 0, 1]' : 0.078948}
{'[6, 2, 3, 0, 0, 5, 0, 0, 29, 0, 14, 24, 1, 0, 1, 1, 0, 1]' : 0.0789599}
{'[6, 2, 3, 0, 0, 5, 0, 0, 29, 0, 14, 24, 1, 0, 1, 1, 0, 1]' : 0.078948}
{'[6, 2, 3, 0, 0, 5, 0, 0, 29, 0, 14, 24, 1, 0, 1, 1, 0, 1]' : 0.0789261}
{'[6, 2, 3, 0, 0, 5, 0, 0, 29, 0, 14, 24, 1, 0, 1, 1, 0, 1]' : 0.0789859}

out:
 ["{'[6, 2, 3, 0, 0, 5, 0, 0, 29, 0, 14, 24, 1, 0, 1, 1, 0, 1]' : 0.0792751}", "{'[6, 2, 3, 0, 0, 5, 0, 0, 29, 0, 14, 24, 1, 0, 1, 1, 0, 1]' : 0.079037}", "{'[6, 2, 3, 0, 0, 5, 0, 0, 29, 0, 14, 24, 1, 0, 1, 1, 0, 1]' : 0.0789809}", "{'[6, 2, 3, 0, 0, 5, 0, 0, 29, 0, 14, 24, 1, 0, 1, 1, 0, 1]' : 0.078943}", "{'[6, 2, 3, 0, 0, 5, 0, 0, 29, 0, 14, 24, 1, 0, 1, 1, 0, 1]' : 0.0789342}", "{'[6, 2, 3, 0, 0, 5, 0, 0, 29, 0, 14, 24, 1, 0, 1, 1, 0, 1]' : 0.0791368}", "{'[6, 2, 3, 0, 0, 5, 0, 0, 29, 0, 14, 24, 1, 0, 1, 1, 0, 1]' : 0.0789661}", "{'[6, 2, 3, 0, 0, 5, 0, 0, 29, 0, 14, 24, 1, 0, 1, 1, 0, 1]' : 0.0789549}", "{'[6, 2, 3, 0, 0, 5, 0, 0, 29, 0, 14, 24, 1, 0, 1, 1, 0, 1]' : 0.078903}", "{'[6, 2, 3, 0, 0, 5, 0, 0, 29, 0, 14, 24, 1, 0, 1, 1, 0, 1]' : 0.079056}", "{'[6, 2, 3, 0, 0, 5, 0, 0, 29, 0, 14, 24, 1, 0, 1, 1, 0, 1]' : 0.078999}", "{'[6, 2, 3, 0, 0, 5, 0, 0, 29, 0, 14, 24, 1, 0, 1, 1, 0, 1]' : 0.078975}", "{'[6, 2, 3, 0, 0, 5, 0, 0, 29, 0, 14, 24, 1, 0, 1, 1, 0, 1]' : 0.0789781}", "{'[6, 2, 3, 0, 0, 5, 0, 0, 29, 0, 14, 24, 1, 0, 1, 1, 0, 1]' : 0.078902}", "{'[6, 2, 3, 0, 0, 5, 0, 0, 29, 0, 14, 24, 1, 0, 1, 1, 0, 1]' : 0.0789971}", "{'[6, 2, 3, 0, 0, 5, 0, 0, 29, 0, 14, 24, 1, 0, 1, 1, 0, 1]' : 0.0793679}", "{'[6, 2, 3, 0, 0, 5, 0, 0, 29, 0, 14, 24, 1, 0, 1, 1, 0, 1]' : 0.079015}", "{'[6, 2, 3, 0, 0, 5, 0, 0, 29, 0, 14, 24, 1, 0, 1, 1, 0, 1]' : 0.078882}", "{'[6, 2, 3, 0, 0, 5, 0, 0, 29, 0, 14, 24, 1, 0, 1, 1, 0, 1]' : 0.0789821}", "{'[6, 2, 3, 0, 0, 5, 0, 0, 29, 0, 14, 24, 1, 0, 1, 1, 0, 1]' : 0.0790398}", "{'[6, 2, 3, 0, 0, 5, 0, 0, 29, 0, 14, 24, 1, 0, 1, 1, 0, 1]' : 0.0790231}", "{'[6, 2, 3, 0, 0, 5, 0, 0, 29, 0, 14, 24, 1, 0, 1, 1, 0, 1]' : 0.0790539}", "{'[6, 2, 3, 0, 0, 5, 0, 0, 29, 0, 14, 24, 1, 0, 1, 1, 0, 1]' : 0.0789201}", "{'[6, 2, 3, 0, 0, 5, 0, 0, 29, 0, 14, 24, 1, 0, 1, 1, 0, 1]' : 0.079098}", "{'[6, 2, 3, 0, 0, 5, 0, 0, 29, 0, 14, 24, 1, 0, 1, 1, 0, 1]' : 0.0790401}", "{'[6, 2, 3, 0, 0, 5, 0, 0, 29, 0, 14, 24, 1, 0, 1, 1, 0, 1]' : 0.078948}", "{'[6, 2, 3, 0, 0, 5, 0, 0, 29, 0, 14, 24, 1, 0, 1, 1, 0, 1]' : 0.0789599}", "{'[6, 2, 3, 0, 0, 5, 0, 0, 29, 0, 14, 24, 1, 0, 1, 1, 0, 1]' : 0.078948}", "{'[6, 2, 3, 0, 0, 5, 0, 0, 29, 0, 14, 24, 1, 0, 1, 1, 0, 1]' : 0.0789261}", "{'[6, 2, 3, 0, 0, 5, 0, 0, 29, 0, 14, 24, 1, 0, 1, 1, 0, 1]' : 0.0789859}"]
returning from 'run': {'[6, 2, 3, 0, 0, 5, 0, 0, 29, 0, 14, 24, 1, 0, 1, 1, 0, 1]': ([0.0792751, 0.079037, 0.0789809, 0.078943, 0.0789342, 0.0791368, 0.0789661, 0.0789549, 0.078903, 0.079056, 0.078999, 0.078975, 0.0789781, 0.078902, 0.0789971, 0.0793679, 0.079015, 0.078882, 0.0789821, 0.0790398, 0.0790231, 0.0790539, 0.0789201, 0.079098, 0.0790401, 0.078948, 0.0789599, 0.078948, 0.0789261, 0.0789859], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 2, 3, 0, 0, 5, 0, 0, 29, 0, 14, 24, 1, 0, 1, 1, 0, 1]': ([0.0792751, 0.079037, 0.0789809, 0.078943, 0.0789342, 0.0791368, 0.0789661, 0.0789549, 0.078903, 0.079056, 0.078999, 0.078975, 0.0789781, 0.078902, 0.0789971, 0.0793679, 0.079015, 0.078882, 0.0789821, 0.0790398, 0.0790231, 0.0790539, 0.0789201, 0.079098, 0.0790401, 0.078948, 0.0789599, 0.078948, 0.0789261, 0.0789859], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	6
        Additions: 		7539
        Multiplications: 	3696
        Divisions: 		0
        Logical: 		0
        Reads: 			13854
        Writes: 		2125
        Comparisons:		22
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest13.exe __orio_perftest13.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest13.exe  
Program Test Output: 
{'[2, 1, 2, 3, 6, 0, 1, 0, 12, 0, 24, 28, 2, 0, 0, 1, 1, 0]' : 0.216565}
{'[2, 1, 2, 3, 6, 0, 1, 0, 12, 0, 24, 28, 2, 0, 0, 1, 1, 0]' : 0.216707}
{'[2, 1, 2, 3, 6, 0, 1, 0, 12, 0, 24, 28, 2, 0, 0, 1, 1, 0]' : 0.21627}
{'[2, 1, 2, 3, 6, 0, 1, 0, 12, 0, 24, 28, 2, 0, 0, 1, 1, 0]' : 0.216646}
{'[2, 1, 2, 3, 6, 0, 1, 0, 12, 0, 24, 28, 2, 0, 0, 1, 1, 0]' : 0.216087}
{'[2, 1, 2, 3, 6, 0, 1, 0, 12, 0, 24, 28, 2, 0, 0, 1, 1, 0]' : 0.216311}
{'[2, 1, 2, 3, 6, 0, 1, 0, 12, 0, 24, 28, 2, 0, 0, 1, 1, 0]' : 0.216289}
{'[2, 1, 2, 3, 6, 0, 1, 0, 12, 0, 24, 28, 2, 0, 0, 1, 1, 0]' : 0.216764}
{'[2, 1, 2, 3, 6, 0, 1, 0, 12, 0, 24, 28, 2, 0, 0, 1, 1, 0]' : 0.216467}
{'[2, 1, 2, 3, 6, 0, 1, 0, 12, 0, 24, 28, 2, 0, 0, 1, 1, 0]' : 0.216653}
{'[2, 1, 2, 3, 6, 0, 1, 0, 12, 0, 24, 28, 2, 0, 0, 1, 1, 0]' : 0.216557}
{'[2, 1, 2, 3, 6, 0, 1, 0, 12, 0, 24, 28, 2, 0, 0, 1, 1, 0]' : 0.216581}
{'[2, 1, 2, 3, 6, 0, 1, 0, 12, 0, 24, 28, 2, 0, 0, 1, 1, 0]' : 0.216433}
{'[2, 1, 2, 3, 6, 0, 1, 0, 12, 0, 24, 28, 2, 0, 0, 1, 1, 0]' : 0.216206}
{'[2, 1, 2, 3, 6, 0, 1, 0, 12, 0, 24, 28, 2, 0, 0, 1, 1, 0]' : 0.216304}
{'[2, 1, 2, 3, 6, 0, 1, 0, 12, 0, 24, 28, 2, 0, 0, 1, 1, 0]' : 0.21621}
{'[2, 1, 2, 3, 6, 0, 1, 0, 12, 0, 24, 28, 2, 0, 0, 1, 1, 0]' : 0.216641}
{'[2, 1, 2, 3, 6, 0, 1, 0, 12, 0, 24, 28, 2, 0, 0, 1, 1, 0]' : 0.216787}
{'[2, 1, 2, 3, 6, 0, 1, 0, 12, 0, 24, 28, 2, 0, 0, 1, 1, 0]' : 0.216636}
{'[2, 1, 2, 3, 6, 0, 1, 0, 12, 0, 24, 28, 2, 0, 0, 1, 1, 0]' : 0.216386}
{'[2, 1, 2, 3, 6, 0, 1, 0, 12, 0, 24, 28, 2, 0, 0, 1, 1, 0]' : 0.216453}
{'[2, 1, 2, 3, 6, 0, 1, 0, 12, 0, 24, 28, 2, 0, 0, 1, 1, 0]' : 0.216296}
{'[2, 1, 2, 3, 6, 0, 1, 0, 12, 0, 24, 28, 2, 0, 0, 1, 1, 0]' : 0.216315}
{'[2, 1, 2, 3, 6, 0, 1, 0, 12, 0, 24, 28, 2, 0, 0, 1, 1, 0]' : 0.216353}
{'[2, 1, 2, 3, 6, 0, 1, 0, 12, 0, 24, 28, 2, 0, 0, 1, 1, 0]' : 0.216349}
{'[2, 1, 2, 3, 6, 0, 1, 0, 12, 0, 24, 28, 2, 0, 0, 1, 1, 0]' : 0.21681}
{'[2, 1, 2, 3, 6, 0, 1, 0, 12, 0, 24, 28, 2, 0, 0, 1, 1, 0]' : 0.21632}
{'[2, 1, 2, 3, 6, 0, 1, 0, 12, 0, 24, 28, 2, 0, 0, 1, 1, 0]' : 0.216292}
{'[2, 1, 2, 3, 6, 0, 1, 0, 12, 0, 24, 28, 2, 0, 0, 1, 1, 0]' : 0.216249}
{'[2, 1, 2, 3, 6, 0, 1, 0, 12, 0, 24, 28, 2, 0, 0, 1, 1, 0]' : 0.216429}

out:
 ["{'[2, 1, 2, 3, 6, 0, 1, 0, 12, 0, 24, 28, 2, 0, 0, 1, 1, 0]' : 0.216565}", "{'[2, 1, 2, 3, 6, 0, 1, 0, 12, 0, 24, 28, 2, 0, 0, 1, 1, 0]' : 0.216707}", "{'[2, 1, 2, 3, 6, 0, 1, 0, 12, 0, 24, 28, 2, 0, 0, 1, 1, 0]' : 0.21627}", "{'[2, 1, 2, 3, 6, 0, 1, 0, 12, 0, 24, 28, 2, 0, 0, 1, 1, 0]' : 0.216646}", "{'[2, 1, 2, 3, 6, 0, 1, 0, 12, 0, 24, 28, 2, 0, 0, 1, 1, 0]' : 0.216087}", "{'[2, 1, 2, 3, 6, 0, 1, 0, 12, 0, 24, 28, 2, 0, 0, 1, 1, 0]' : 0.216311}", "{'[2, 1, 2, 3, 6, 0, 1, 0, 12, 0, 24, 28, 2, 0, 0, 1, 1, 0]' : 0.216289}", "{'[2, 1, 2, 3, 6, 0, 1, 0, 12, 0, 24, 28, 2, 0, 0, 1, 1, 0]' : 0.216764}", "{'[2, 1, 2, 3, 6, 0, 1, 0, 12, 0, 24, 28, 2, 0, 0, 1, 1, 0]' : 0.216467}", "{'[2, 1, 2, 3, 6, 0, 1, 0, 12, 0, 24, 28, 2, 0, 0, 1, 1, 0]' : 0.216653}", "{'[2, 1, 2, 3, 6, 0, 1, 0, 12, 0, 24, 28, 2, 0, 0, 1, 1, 0]' : 0.216557}", "{'[2, 1, 2, 3, 6, 0, 1, 0, 12, 0, 24, 28, 2, 0, 0, 1, 1, 0]' : 0.216581}", "{'[2, 1, 2, 3, 6, 0, 1, 0, 12, 0, 24, 28, 2, 0, 0, 1, 1, 0]' : 0.216433}", "{'[2, 1, 2, 3, 6, 0, 1, 0, 12, 0, 24, 28, 2, 0, 0, 1, 1, 0]' : 0.216206}", "{'[2, 1, 2, 3, 6, 0, 1, 0, 12, 0, 24, 28, 2, 0, 0, 1, 1, 0]' : 0.216304}", "{'[2, 1, 2, 3, 6, 0, 1, 0, 12, 0, 24, 28, 2, 0, 0, 1, 1, 0]' : 0.21621}", "{'[2, 1, 2, 3, 6, 0, 1, 0, 12, 0, 24, 28, 2, 0, 0, 1, 1, 0]' : 0.216641}", "{'[2, 1, 2, 3, 6, 0, 1, 0, 12, 0, 24, 28, 2, 0, 0, 1, 1, 0]' : 0.216787}", "{'[2, 1, 2, 3, 6, 0, 1, 0, 12, 0, 24, 28, 2, 0, 0, 1, 1, 0]' : 0.216636}", "{'[2, 1, 2, 3, 6, 0, 1, 0, 12, 0, 24, 28, 2, 0, 0, 1, 1, 0]' : 0.216386}", "{'[2, 1, 2, 3, 6, 0, 1, 0, 12, 0, 24, 28, 2, 0, 0, 1, 1, 0]' : 0.216453}", "{'[2, 1, 2, 3, 6, 0, 1, 0, 12, 0, 24, 28, 2, 0, 0, 1, 1, 0]' : 0.216296}", "{'[2, 1, 2, 3, 6, 0, 1, 0, 12, 0, 24, 28, 2, 0, 0, 1, 1, 0]' : 0.216315}", "{'[2, 1, 2, 3, 6, 0, 1, 0, 12, 0, 24, 28, 2, 0, 0, 1, 1, 0]' : 0.216353}", "{'[2, 1, 2, 3, 6, 0, 1, 0, 12, 0, 24, 28, 2, 0, 0, 1, 1, 0]' : 0.216349}", "{'[2, 1, 2, 3, 6, 0, 1, 0, 12, 0, 24, 28, 2, 0, 0, 1, 1, 0]' : 0.21681}", "{'[2, 1, 2, 3, 6, 0, 1, 0, 12, 0, 24, 28, 2, 0, 0, 1, 1, 0]' : 0.21632}", "{'[2, 1, 2, 3, 6, 0, 1, 0, 12, 0, 24, 28, 2, 0, 0, 1, 1, 0]' : 0.216292}", "{'[2, 1, 2, 3, 6, 0, 1, 0, 12, 0, 24, 28, 2, 0, 0, 1, 1, 0]' : 0.216249}", "{'[2, 1, 2, 3, 6, 0, 1, 0, 12, 0, 24, 28, 2, 0, 0, 1, 1, 0]' : 0.216429}"]
returning from 'run': {'[2, 1, 2, 3, 6, 0, 1, 0, 12, 0, 24, 28, 2, 0, 0, 1, 1, 0]': ([0.216565, 0.216707, 0.21627, 0.216646, 0.216087, 0.216311, 0.216289, 0.216764, 0.216467, 0.216653, 0.216557, 0.216581, 0.216433, 0.216206, 0.216304, 0.21621, 0.216641, 0.216787, 0.216636, 0.216386, 0.216453, 0.216296, 0.216315, 0.216353, 0.216349, 0.21681, 0.21632, 0.216292, 0.216249, 0.216429], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 1, 2, 3, 6, 0, 1, 0, 12, 0, 24, 28, 2, 0, 0, 1, 1, 0]': ([0.216565, 0.216707, 0.21627, 0.216646, 0.216087, 0.216311, 0.216289, 0.216764, 0.216467, 0.216653, 0.216557, 0.216581, 0.216433, 0.216206, 0.216304, 0.21621, 0.216641, 0.216787, 0.216636, 0.216386, 0.216453, 0.216296, 0.216315, 0.216353, 0.216349, 0.21681, 0.21632, 0.216292, 0.216249, 0.216429], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = iii
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	4
        Additions: 		1316
        Multiplications: 	576
        Divisions: 		0
        Logical: 		0
        Reads: 			2539
        Writes: 		423
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest14.exe __orio_perftest14.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest14.exe  
Program Test Output: 
{'[5, 0, 5, 3, 4, 0, 1, 1, 1, 0, 22, 9, 1, 0, 1, 1, 0, 1]' : 0.0876322}
{'[5, 0, 5, 3, 4, 0, 1, 1, 1, 0, 22, 9, 1, 0, 1, 1, 0, 1]' : 0.0871651}
{'[5, 0, 5, 3, 4, 0, 1, 1, 1, 0, 22, 9, 1, 0, 1, 1, 0, 1]' : 0.0870578}
{'[5, 0, 5, 3, 4, 0, 1, 1, 1, 0, 22, 9, 1, 0, 1, 1, 0, 1]' : 0.087162}
{'[5, 0, 5, 3, 4, 0, 1, 1, 1, 0, 22, 9, 1, 0, 1, 1, 0, 1]' : 0.0871301}
{'[5, 0, 5, 3, 4, 0, 1, 1, 1, 0, 22, 9, 1, 0, 1, 1, 0, 1]' : 0.0872021}
{'[5, 0, 5, 3, 4, 0, 1, 1, 1, 0, 22, 9, 1, 0, 1, 1, 0, 1]' : 0.08711}
{'[5, 0, 5, 3, 4, 0, 1, 1, 1, 0, 22, 9, 1, 0, 1, 1, 0, 1]' : 0.087126}
{'[5, 0, 5, 3, 4, 0, 1, 1, 1, 0, 22, 9, 1, 0, 1, 1, 0, 1]' : 0.0871511}
{'[5, 0, 5, 3, 4, 0, 1, 1, 1, 0, 22, 9, 1, 0, 1, 1, 0, 1]' : 0.0870869}
{'[5, 0, 5, 3, 4, 0, 1, 1, 1, 0, 22, 9, 1, 0, 1, 1, 0, 1]' : 0.0876589}
{'[5, 0, 5, 3, 4, 0, 1, 1, 1, 0, 22, 9, 1, 0, 1, 1, 0, 1]' : 0.087095}
{'[5, 0, 5, 3, 4, 0, 1, 1, 1, 0, 22, 9, 1, 0, 1, 1, 0, 1]' : 0.0871041}
{'[5, 0, 5, 3, 4, 0, 1, 1, 1, 0, 22, 9, 1, 0, 1, 1, 0, 1]' : 0.0871351}
{'[5, 0, 5, 3, 4, 0, 1, 1, 1, 0, 22, 9, 1, 0, 1, 1, 0, 1]' : 0.087152}
{'[5, 0, 5, 3, 4, 0, 1, 1, 1, 0, 22, 9, 1, 0, 1, 1, 0, 1]' : 0.0871568}
{'[5, 0, 5, 3, 4, 0, 1, 1, 1, 0, 22, 9, 1, 0, 1, 1, 0, 1]' : 0.087188}
{'[5, 0, 5, 3, 4, 0, 1, 1, 1, 0, 22, 9, 1, 0, 1, 1, 0, 1]' : 0.0870192}
{'[5, 0, 5, 3, 4, 0, 1, 1, 1, 0, 22, 9, 1, 0, 1, 1, 0, 1]' : 0.0871089}
{'[5, 0, 5, 3, 4, 0, 1, 1, 1, 0, 22, 9, 1, 0, 1, 1, 0, 1]' : 0.0872321}
{'[5, 0, 5, 3, 4, 0, 1, 1, 1, 0, 22, 9, 1, 0, 1, 1, 0, 1]' : 0.0871398}
{'[5, 0, 5, 3, 4, 0, 1, 1, 1, 0, 22, 9, 1, 0, 1, 1, 0, 1]' : 0.0870631}
{'[5, 0, 5, 3, 4, 0, 1, 1, 1, 0, 22, 9, 1, 0, 1, 1, 0, 1]' : 0.0871661}
{'[5, 0, 5, 3, 4, 0, 1, 1, 1, 0, 22, 9, 1, 0, 1, 1, 0, 1]' : 0.0870929}
{'[5, 0, 5, 3, 4, 0, 1, 1, 1, 0, 22, 9, 1, 0, 1, 1, 0, 1]' : 0.0871222}
{'[5, 0, 5, 3, 4, 0, 1, 1, 1, 0, 22, 9, 1, 0, 1, 1, 0, 1]' : 0.087147}
{'[5, 0, 5, 3, 4, 0, 1, 1, 1, 0, 22, 9, 1, 0, 1, 1, 0, 1]' : 0.0870869}
{'[5, 0, 5, 3, 4, 0, 1, 1, 1, 0, 22, 9, 1, 0, 1, 1, 0, 1]' : 0.0875211}
{'[5, 0, 5, 3, 4, 0, 1, 1, 1, 0, 22, 9, 1, 0, 1, 1, 0, 1]' : 0.087106}
{'[5, 0, 5, 3, 4, 0, 1, 1, 1, 0, 22, 9, 1, 0, 1, 1, 0, 1]' : 0.0871558}

out:
 ["{'[5, 0, 5, 3, 4, 0, 1, 1, 1, 0, 22, 9, 1, 0, 1, 1, 0, 1]' : 0.0876322}", "{'[5, 0, 5, 3, 4, 0, 1, 1, 1, 0, 22, 9, 1, 0, 1, 1, 0, 1]' : 0.0871651}", "{'[5, 0, 5, 3, 4, 0, 1, 1, 1, 0, 22, 9, 1, 0, 1, 1, 0, 1]' : 0.0870578}", "{'[5, 0, 5, 3, 4, 0, 1, 1, 1, 0, 22, 9, 1, 0, 1, 1, 0, 1]' : 0.087162}", "{'[5, 0, 5, 3, 4, 0, 1, 1, 1, 0, 22, 9, 1, 0, 1, 1, 0, 1]' : 0.0871301}", "{'[5, 0, 5, 3, 4, 0, 1, 1, 1, 0, 22, 9, 1, 0, 1, 1, 0, 1]' : 0.0872021}", "{'[5, 0, 5, 3, 4, 0, 1, 1, 1, 0, 22, 9, 1, 0, 1, 1, 0, 1]' : 0.08711}", "{'[5, 0, 5, 3, 4, 0, 1, 1, 1, 0, 22, 9, 1, 0, 1, 1, 0, 1]' : 0.087126}", "{'[5, 0, 5, 3, 4, 0, 1, 1, 1, 0, 22, 9, 1, 0, 1, 1, 0, 1]' : 0.0871511}", "{'[5, 0, 5, 3, 4, 0, 1, 1, 1, 0, 22, 9, 1, 0, 1, 1, 0, 1]' : 0.0870869}", "{'[5, 0, 5, 3, 4, 0, 1, 1, 1, 0, 22, 9, 1, 0, 1, 1, 0, 1]' : 0.0876589}", "{'[5, 0, 5, 3, 4, 0, 1, 1, 1, 0, 22, 9, 1, 0, 1, 1, 0, 1]' : 0.087095}", "{'[5, 0, 5, 3, 4, 0, 1, 1, 1, 0, 22, 9, 1, 0, 1, 1, 0, 1]' : 0.0871041}", "{'[5, 0, 5, 3, 4, 0, 1, 1, 1, 0, 22, 9, 1, 0, 1, 1, 0, 1]' : 0.0871351}", "{'[5, 0, 5, 3, 4, 0, 1, 1, 1, 0, 22, 9, 1, 0, 1, 1, 0, 1]' : 0.087152}", "{'[5, 0, 5, 3, 4, 0, 1, 1, 1, 0, 22, 9, 1, 0, 1, 1, 0, 1]' : 0.0871568}", "{'[5, 0, 5, 3, 4, 0, 1, 1, 1, 0, 22, 9, 1, 0, 1, 1, 0, 1]' : 0.087188}", "{'[5, 0, 5, 3, 4, 0, 1, 1, 1, 0, 22, 9, 1, 0, 1, 1, 0, 1]' : 0.0870192}", "{'[5, 0, 5, 3, 4, 0, 1, 1, 1, 0, 22, 9, 1, 0, 1, 1, 0, 1]' : 0.0871089}", "{'[5, 0, 5, 3, 4, 0, 1, 1, 1, 0, 22, 9, 1, 0, 1, 1, 0, 1]' : 0.0872321}", "{'[5, 0, 5, 3, 4, 0, 1, 1, 1, 0, 22, 9, 1, 0, 1, 1, 0, 1]' : 0.0871398}", "{'[5, 0, 5, 3, 4, 0, 1, 1, 1, 0, 22, 9, 1, 0, 1, 1, 0, 1]' : 0.0870631}", "{'[5, 0, 5, 3, 4, 0, 1, 1, 1, 0, 22, 9, 1, 0, 1, 1, 0, 1]' : 0.0871661}", "{'[5, 0, 5, 3, 4, 0, 1, 1, 1, 0, 22, 9, 1, 0, 1, 1, 0, 1]' : 0.0870929}", "{'[5, 0, 5, 3, 4, 0, 1, 1, 1, 0, 22, 9, 1, 0, 1, 1, 0, 1]' : 0.0871222}", "{'[5, 0, 5, 3, 4, 0, 1, 1, 1, 0, 22, 9, 1, 0, 1, 1, 0, 1]' : 0.087147}", "{'[5, 0, 5, 3, 4, 0, 1, 1, 1, 0, 22, 9, 1, 0, 1, 1, 0, 1]' : 0.0870869}", "{'[5, 0, 5, 3, 4, 0, 1, 1, 1, 0, 22, 9, 1, 0, 1, 1, 0, 1]' : 0.0875211}", "{'[5, 0, 5, 3, 4, 0, 1, 1, 1, 0, 22, 9, 1, 0, 1, 1, 0, 1]' : 0.087106}", "{'[5, 0, 5, 3, 4, 0, 1, 1, 1, 0, 22, 9, 1, 0, 1, 1, 0, 1]' : 0.0871558}"]
returning from 'run': {'[5, 0, 5, 3, 4, 0, 1, 1, 1, 0, 22, 9, 1, 0, 1, 1, 0, 1]': ([0.0876322, 0.0871651, 0.0870578, 0.087162, 0.0871301, 0.0872021, 0.08711, 0.087126, 0.0871511, 0.0870869, 0.0876589, 0.087095, 0.0871041, 0.0871351, 0.087152, 0.0871568, 0.087188, 0.0870192, 0.0871089, 0.0872321, 0.0871398, 0.0870631, 0.0871661, 0.0870929, 0.0871222, 0.087147, 0.0870869, 0.0875211, 0.087106, 0.0871558], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 0, 5, 3, 4, 0, 1, 1, 1, 0, 22, 9, 1, 0, 1, 1, 0, 1]': ([0.0876322, 0.0871651, 0.0870578, 0.087162, 0.0871301, 0.0872021, 0.08711, 0.087126, 0.0871511, 0.0870869, 0.0876589, 0.087095, 0.0871041, 0.0871351, 0.087152, 0.0871568, 0.087188, 0.0870192, 0.0871089, 0.0872321, 0.0871398, 0.0870631, 0.0871661, 0.0870929, 0.0871222, 0.087147, 0.0870869, 0.0875211, 0.087106, 0.0871558], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	4
        Additions: 		1585
        Multiplications: 	512
        Divisions: 		0
        Logical: 		0
        Reads: 			2650
        Writes: 		288
        Comparisons:		10
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest15.exe __orio_perftest15.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest15.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest15.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest15.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/Orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/Orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 510, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors, data)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 396, in dopt_anova
    budget)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 324, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 270, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/phrb/code/Orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest15.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/Orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/Orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 510, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors, data)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 396, in dopt_anova
    budget)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 324, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 270, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/phrb/code/Orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	6
        Additions: 		402
        Multiplications: 	126
        Divisions: 		0
        Logical: 		0
        Reads: 			872
        Writes: 		176
        Comparisons:		15
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest16.exe __orio_perftest16.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest16.exe  
Program Test Output: 
{'[1, 0, 6, 1, 1, 6, 0, 1, 6, 0, 23, 28, 0, 1, 0, 1, 1, 1]' : 0.167441}
{'[1, 0, 6, 1, 1, 6, 0, 1, 6, 0, 23, 28, 0, 1, 0, 1, 1, 1]' : 0.167342}
{'[1, 0, 6, 1, 1, 6, 0, 1, 6, 0, 23, 28, 0, 1, 0, 1, 1, 1]' : 0.167219}
{'[1, 0, 6, 1, 1, 6, 0, 1, 6, 0, 23, 28, 0, 1, 0, 1, 1, 1]' : 0.167403}
{'[1, 0, 6, 1, 1, 6, 0, 1, 6, 0, 23, 28, 0, 1, 0, 1, 1, 1]' : 0.1675}
{'[1, 0, 6, 1, 1, 6, 0, 1, 6, 0, 23, 28, 0, 1, 0, 1, 1, 1]' : 0.167318}
{'[1, 0, 6, 1, 1, 6, 0, 1, 6, 0, 23, 28, 0, 1, 0, 1, 1, 1]' : 0.167258}
{'[1, 0, 6, 1, 1, 6, 0, 1, 6, 0, 23, 28, 0, 1, 0, 1, 1, 1]' : 0.16742}
{'[1, 0, 6, 1, 1, 6, 0, 1, 6, 0, 23, 28, 0, 1, 0, 1, 1, 1]' : 0.16732}
{'[1, 0, 6, 1, 1, 6, 0, 1, 6, 0, 23, 28, 0, 1, 0, 1, 1, 1]' : 0.171212}
{'[1, 0, 6, 1, 1, 6, 0, 1, 6, 0, 23, 28, 0, 1, 0, 1, 1, 1]' : 0.167335}
{'[1, 0, 6, 1, 1, 6, 0, 1, 6, 0, 23, 28, 0, 1, 0, 1, 1, 1]' : 0.167299}
{'[1, 0, 6, 1, 1, 6, 0, 1, 6, 0, 23, 28, 0, 1, 0, 1, 1, 1]' : 0.167369}
{'[1, 0, 6, 1, 1, 6, 0, 1, 6, 0, 23, 28, 0, 1, 0, 1, 1, 1]' : 0.167395}
{'[1, 0, 6, 1, 1, 6, 0, 1, 6, 0, 23, 28, 0, 1, 0, 1, 1, 1]' : 0.167401}
{'[1, 0, 6, 1, 1, 6, 0, 1, 6, 0, 23, 28, 0, 1, 0, 1, 1, 1]' : 0.167234}
{'[1, 0, 6, 1, 1, 6, 0, 1, 6, 0, 23, 28, 0, 1, 0, 1, 1, 1]' : 0.167346}
{'[1, 0, 6, 1, 1, 6, 0, 1, 6, 0, 23, 28, 0, 1, 0, 1, 1, 1]' : 0.167274}
{'[1, 0, 6, 1, 1, 6, 0, 1, 6, 0, 23, 28, 0, 1, 0, 1, 1, 1]' : 0.167283}
{'[1, 0, 6, 1, 1, 6, 0, 1, 6, 0, 23, 28, 0, 1, 0, 1, 1, 1]' : 0.167532}
{'[1, 0, 6, 1, 1, 6, 0, 1, 6, 0, 23, 28, 0, 1, 0, 1, 1, 1]' : 0.167326}
{'[1, 0, 6, 1, 1, 6, 0, 1, 6, 0, 23, 28, 0, 1, 0, 1, 1, 1]' : 0.167375}
{'[1, 0, 6, 1, 1, 6, 0, 1, 6, 0, 23, 28, 0, 1, 0, 1, 1, 1]' : 0.167405}
{'[1, 0, 6, 1, 1, 6, 0, 1, 6, 0, 23, 28, 0, 1, 0, 1, 1, 1]' : 0.167269}
{'[1, 0, 6, 1, 1, 6, 0, 1, 6, 0, 23, 28, 0, 1, 0, 1, 1, 1]' : 0.167336}
{'[1, 0, 6, 1, 1, 6, 0, 1, 6, 0, 23, 28, 0, 1, 0, 1, 1, 1]' : 0.167347}
{'[1, 0, 6, 1, 1, 6, 0, 1, 6, 0, 23, 28, 0, 1, 0, 1, 1, 1]' : 0.16739}
{'[1, 0, 6, 1, 1, 6, 0, 1, 6, 0, 23, 28, 0, 1, 0, 1, 1, 1]' : 0.167295}
{'[1, 0, 6, 1, 1, 6, 0, 1, 6, 0, 23, 28, 0, 1, 0, 1, 1, 1]' : 0.16735}
{'[1, 0, 6, 1, 1, 6, 0, 1, 6, 0, 23, 28, 0, 1, 0, 1, 1, 1]' : 0.167259}

out:
 ["{'[1, 0, 6, 1, 1, 6, 0, 1, 6, 0, 23, 28, 0, 1, 0, 1, 1, 1]' : 0.167441}", "{'[1, 0, 6, 1, 1, 6, 0, 1, 6, 0, 23, 28, 0, 1, 0, 1, 1, 1]' : 0.167342}", "{'[1, 0, 6, 1, 1, 6, 0, 1, 6, 0, 23, 28, 0, 1, 0, 1, 1, 1]' : 0.167219}", "{'[1, 0, 6, 1, 1, 6, 0, 1, 6, 0, 23, 28, 0, 1, 0, 1, 1, 1]' : 0.167403}", "{'[1, 0, 6, 1, 1, 6, 0, 1, 6, 0, 23, 28, 0, 1, 0, 1, 1, 1]' : 0.1675}", "{'[1, 0, 6, 1, 1, 6, 0, 1, 6, 0, 23, 28, 0, 1, 0, 1, 1, 1]' : 0.167318}", "{'[1, 0, 6, 1, 1, 6, 0, 1, 6, 0, 23, 28, 0, 1, 0, 1, 1, 1]' : 0.167258}", "{'[1, 0, 6, 1, 1, 6, 0, 1, 6, 0, 23, 28, 0, 1, 0, 1, 1, 1]' : 0.16742}", "{'[1, 0, 6, 1, 1, 6, 0, 1, 6, 0, 23, 28, 0, 1, 0, 1, 1, 1]' : 0.16732}", "{'[1, 0, 6, 1, 1, 6, 0, 1, 6, 0, 23, 28, 0, 1, 0, 1, 1, 1]' : 0.171212}", "{'[1, 0, 6, 1, 1, 6, 0, 1, 6, 0, 23, 28, 0, 1, 0, 1, 1, 1]' : 0.167335}", "{'[1, 0, 6, 1, 1, 6, 0, 1, 6, 0, 23, 28, 0, 1, 0, 1, 1, 1]' : 0.167299}", "{'[1, 0, 6, 1, 1, 6, 0, 1, 6, 0, 23, 28, 0, 1, 0, 1, 1, 1]' : 0.167369}", "{'[1, 0, 6, 1, 1, 6, 0, 1, 6, 0, 23, 28, 0, 1, 0, 1, 1, 1]' : 0.167395}", "{'[1, 0, 6, 1, 1, 6, 0, 1, 6, 0, 23, 28, 0, 1, 0, 1, 1, 1]' : 0.167401}", "{'[1, 0, 6, 1, 1, 6, 0, 1, 6, 0, 23, 28, 0, 1, 0, 1, 1, 1]' : 0.167234}", "{'[1, 0, 6, 1, 1, 6, 0, 1, 6, 0, 23, 28, 0, 1, 0, 1, 1, 1]' : 0.167346}", "{'[1, 0, 6, 1, 1, 6, 0, 1, 6, 0, 23, 28, 0, 1, 0, 1, 1, 1]' : 0.167274}", "{'[1, 0, 6, 1, 1, 6, 0, 1, 6, 0, 23, 28, 0, 1, 0, 1, 1, 1]' : 0.167283}", "{'[1, 0, 6, 1, 1, 6, 0, 1, 6, 0, 23, 28, 0, 1, 0, 1, 1, 1]' : 0.167532}", "{'[1, 0, 6, 1, 1, 6, 0, 1, 6, 0, 23, 28, 0, 1, 0, 1, 1, 1]' : 0.167326}", "{'[1, 0, 6, 1, 1, 6, 0, 1, 6, 0, 23, 28, 0, 1, 0, 1, 1, 1]' : 0.167375}", "{'[1, 0, 6, 1, 1, 6, 0, 1, 6, 0, 23, 28, 0, 1, 0, 1, 1, 1]' : 0.167405}", "{'[1, 0, 6, 1, 1, 6, 0, 1, 6, 0, 23, 28, 0, 1, 0, 1, 1, 1]' : 0.167269}", "{'[1, 0, 6, 1, 1, 6, 0, 1, 6, 0, 23, 28, 0, 1, 0, 1, 1, 1]' : 0.167336}", "{'[1, 0, 6, 1, 1, 6, 0, 1, 6, 0, 23, 28, 0, 1, 0, 1, 1, 1]' : 0.167347}", "{'[1, 0, 6, 1, 1, 6, 0, 1, 6, 0, 23, 28, 0, 1, 0, 1, 1, 1]' : 0.16739}", "{'[1, 0, 6, 1, 1, 6, 0, 1, 6, 0, 23, 28, 0, 1, 0, 1, 1, 1]' : 0.167295}", "{'[1, 0, 6, 1, 1, 6, 0, 1, 6, 0, 23, 28, 0, 1, 0, 1, 1, 1]' : 0.16735}", "{'[1, 0, 6, 1, 1, 6, 0, 1, 6, 0, 23, 28, 0, 1, 0, 1, 1, 1]' : 0.167259}"]
returning from 'run': {'[1, 0, 6, 1, 1, 6, 0, 1, 6, 0, 23, 28, 0, 1, 0, 1, 1, 1]': ([0.167441, 0.167342, 0.167219, 0.167403, 0.1675, 0.167318, 0.167258, 0.16742, 0.16732, 0.171212, 0.167335, 0.167299, 0.167369, 0.167395, 0.167401, 0.167234, 0.167346, 0.167274, 0.167283, 0.167532, 0.167326, 0.167375, 0.167405, 0.167269, 0.167336, 0.167347, 0.16739, 0.167295, 0.16735, 0.167259], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 6, 1, 1, 6, 0, 1, 6, 0, 23, 28, 0, 1, 0, 1, 1, 1]': ([0.167441, 0.167342, 0.167219, 0.167403, 0.1675, 0.167318, 0.167258, 0.16742, 0.16732, 0.171212, 0.167335, 0.167299, 0.167369, 0.167395, 0.167401, 0.167234, 0.167346, 0.167274, 0.167283, 0.167532, 0.167326, 0.167375, 0.167405, 0.167269, 0.167336, 0.167347, 0.16739, 0.167295, 0.16735, 0.167259], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		226
        Multiplications: 	76
        Divisions: 		0
        Logical: 		0
        Reads: 			491
        Writes: 		95
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest17.exe __orio_perftest17.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest17.exe  
Program Test Output: 
{'[3, 2, 2, 4, 4, 5, 0, 1, 0, 0, 28, 6, 0, 0, 0, 1, 1, 1]' : 0.211366}
{'[3, 2, 2, 4, 4, 5, 0, 1, 0, 0, 28, 6, 0, 0, 0, 1, 1, 1]' : 0.211457}
{'[3, 2, 2, 4, 4, 5, 0, 1, 0, 0, 28, 6, 0, 0, 0, 1, 1, 1]' : 0.211261}
{'[3, 2, 2, 4, 4, 5, 0, 1, 0, 0, 28, 6, 0, 0, 0, 1, 1, 1]' : 0.211279}
{'[3, 2, 2, 4, 4, 5, 0, 1, 0, 0, 28, 6, 0, 0, 0, 1, 1, 1]' : 0.211268}
{'[3, 2, 2, 4, 4, 5, 0, 1, 0, 0, 28, 6, 0, 0, 0, 1, 1, 1]' : 0.211317}
{'[3, 2, 2, 4, 4, 5, 0, 1, 0, 0, 28, 6, 0, 0, 0, 1, 1, 1]' : 0.211224}
{'[3, 2, 2, 4, 4, 5, 0, 1, 0, 0, 28, 6, 0, 0, 0, 1, 1, 1]' : 0.211193}
{'[3, 2, 2, 4, 4, 5, 0, 1, 0, 0, 28, 6, 0, 0, 0, 1, 1, 1]' : 0.211406}
{'[3, 2, 2, 4, 4, 5, 0, 1, 0, 0, 28, 6, 0, 0, 0, 1, 1, 1]' : 0.211374}
{'[3, 2, 2, 4, 4, 5, 0, 1, 0, 0, 28, 6, 0, 0, 0, 1, 1, 1]' : 0.211305}
{'[3, 2, 2, 4, 4, 5, 0, 1, 0, 0, 28, 6, 0, 0, 0, 1, 1, 1]' : 0.211228}
{'[3, 2, 2, 4, 4, 5, 0, 1, 0, 0, 28, 6, 0, 0, 0, 1, 1, 1]' : 0.211214}
{'[3, 2, 2, 4, 4, 5, 0, 1, 0, 0, 28, 6, 0, 0, 0, 1, 1, 1]' : 0.211244}
{'[3, 2, 2, 4, 4, 5, 0, 1, 0, 0, 28, 6, 0, 0, 0, 1, 1, 1]' : 0.211236}
{'[3, 2, 2, 4, 4, 5, 0, 1, 0, 0, 28, 6, 0, 0, 0, 1, 1, 1]' : 0.211533}
{'[3, 2, 2, 4, 4, 5, 0, 1, 0, 0, 28, 6, 0, 0, 0, 1, 1, 1]' : 0.211265}
{'[3, 2, 2, 4, 4, 5, 0, 1, 0, 0, 28, 6, 0, 0, 0, 1, 1, 1]' : 0.211212}
{'[3, 2, 2, 4, 4, 5, 0, 1, 0, 0, 28, 6, 0, 0, 0, 1, 1, 1]' : 0.211242}
{'[3, 2, 2, 4, 4, 5, 0, 1, 0, 0, 28, 6, 0, 0, 0, 1, 1, 1]' : 0.211267}
{'[3, 2, 2, 4, 4, 5, 0, 1, 0, 0, 28, 6, 0, 0, 0, 1, 1, 1]' : 0.211224}
{'[3, 2, 2, 4, 4, 5, 0, 1, 0, 0, 28, 6, 0, 0, 0, 1, 1, 1]' : 0.21128}
{'[3, 2, 2, 4, 4, 5, 0, 1, 0, 0, 28, 6, 0, 0, 0, 1, 1, 1]' : 0.211406}
{'[3, 2, 2, 4, 4, 5, 0, 1, 0, 0, 28, 6, 0, 0, 0, 1, 1, 1]' : 0.211383}
{'[3, 2, 2, 4, 4, 5, 0, 1, 0, 0, 28, 6, 0, 0, 0, 1, 1, 1]' : 0.211264}
{'[3, 2, 2, 4, 4, 5, 0, 1, 0, 0, 28, 6, 0, 0, 0, 1, 1, 1]' : 0.211243}
{'[3, 2, 2, 4, 4, 5, 0, 1, 0, 0, 28, 6, 0, 0, 0, 1, 1, 1]' : 0.211281}
{'[3, 2, 2, 4, 4, 5, 0, 1, 0, 0, 28, 6, 0, 0, 0, 1, 1, 1]' : 0.211302}
{'[3, 2, 2, 4, 4, 5, 0, 1, 0, 0, 28, 6, 0, 0, 0, 1, 1, 1]' : 0.211384}
{'[3, 2, 2, 4, 4, 5, 0, 1, 0, 0, 28, 6, 0, 0, 0, 1, 1, 1]' : 0.21142}

out:
 ["{'[3, 2, 2, 4, 4, 5, 0, 1, 0, 0, 28, 6, 0, 0, 0, 1, 1, 1]' : 0.211366}", "{'[3, 2, 2, 4, 4, 5, 0, 1, 0, 0, 28, 6, 0, 0, 0, 1, 1, 1]' : 0.211457}", "{'[3, 2, 2, 4, 4, 5, 0, 1, 0, 0, 28, 6, 0, 0, 0, 1, 1, 1]' : 0.211261}", "{'[3, 2, 2, 4, 4, 5, 0, 1, 0, 0, 28, 6, 0, 0, 0, 1, 1, 1]' : 0.211279}", "{'[3, 2, 2, 4, 4, 5, 0, 1, 0, 0, 28, 6, 0, 0, 0, 1, 1, 1]' : 0.211268}", "{'[3, 2, 2, 4, 4, 5, 0, 1, 0, 0, 28, 6, 0, 0, 0, 1, 1, 1]' : 0.211317}", "{'[3, 2, 2, 4, 4, 5, 0, 1, 0, 0, 28, 6, 0, 0, 0, 1, 1, 1]' : 0.211224}", "{'[3, 2, 2, 4, 4, 5, 0, 1, 0, 0, 28, 6, 0, 0, 0, 1, 1, 1]' : 0.211193}", "{'[3, 2, 2, 4, 4, 5, 0, 1, 0, 0, 28, 6, 0, 0, 0, 1, 1, 1]' : 0.211406}", "{'[3, 2, 2, 4, 4, 5, 0, 1, 0, 0, 28, 6, 0, 0, 0, 1, 1, 1]' : 0.211374}", "{'[3, 2, 2, 4, 4, 5, 0, 1, 0, 0, 28, 6, 0, 0, 0, 1, 1, 1]' : 0.211305}", "{'[3, 2, 2, 4, 4, 5, 0, 1, 0, 0, 28, 6, 0, 0, 0, 1, 1, 1]' : 0.211228}", "{'[3, 2, 2, 4, 4, 5, 0, 1, 0, 0, 28, 6, 0, 0, 0, 1, 1, 1]' : 0.211214}", "{'[3, 2, 2, 4, 4, 5, 0, 1, 0, 0, 28, 6, 0, 0, 0, 1, 1, 1]' : 0.211244}", "{'[3, 2, 2, 4, 4, 5, 0, 1, 0, 0, 28, 6, 0, 0, 0, 1, 1, 1]' : 0.211236}", "{'[3, 2, 2, 4, 4, 5, 0, 1, 0, 0, 28, 6, 0, 0, 0, 1, 1, 1]' : 0.211533}", "{'[3, 2, 2, 4, 4, 5, 0, 1, 0, 0, 28, 6, 0, 0, 0, 1, 1, 1]' : 0.211265}", "{'[3, 2, 2, 4, 4, 5, 0, 1, 0, 0, 28, 6, 0, 0, 0, 1, 1, 1]' : 0.211212}", "{'[3, 2, 2, 4, 4, 5, 0, 1, 0, 0, 28, 6, 0, 0, 0, 1, 1, 1]' : 0.211242}", "{'[3, 2, 2, 4, 4, 5, 0, 1, 0, 0, 28, 6, 0, 0, 0, 1, 1, 1]' : 0.211267}", "{'[3, 2, 2, 4, 4, 5, 0, 1, 0, 0, 28, 6, 0, 0, 0, 1, 1, 1]' : 0.211224}", "{'[3, 2, 2, 4, 4, 5, 0, 1, 0, 0, 28, 6, 0, 0, 0, 1, 1, 1]' : 0.21128}", "{'[3, 2, 2, 4, 4, 5, 0, 1, 0, 0, 28, 6, 0, 0, 0, 1, 1, 1]' : 0.211406}", "{'[3, 2, 2, 4, 4, 5, 0, 1, 0, 0, 28, 6, 0, 0, 0, 1, 1, 1]' : 0.211383}", "{'[3, 2, 2, 4, 4, 5, 0, 1, 0, 0, 28, 6, 0, 0, 0, 1, 1, 1]' : 0.211264}", "{'[3, 2, 2, 4, 4, 5, 0, 1, 0, 0, 28, 6, 0, 0, 0, 1, 1, 1]' : 0.211243}", "{'[3, 2, 2, 4, 4, 5, 0, 1, 0, 0, 28, 6, 0, 0, 0, 1, 1, 1]' : 0.211281}", "{'[3, 2, 2, 4, 4, 5, 0, 1, 0, 0, 28, 6, 0, 0, 0, 1, 1, 1]' : 0.211302}", "{'[3, 2, 2, 4, 4, 5, 0, 1, 0, 0, 28, 6, 0, 0, 0, 1, 1, 1]' : 0.211384}", "{'[3, 2, 2, 4, 4, 5, 0, 1, 0, 0, 28, 6, 0, 0, 0, 1, 1, 1]' : 0.21142}"]
returning from 'run': {'[3, 2, 2, 4, 4, 5, 0, 1, 0, 0, 28, 6, 0, 0, 0, 1, 1, 1]': ([0.211366, 0.211457, 0.211261, 0.211279, 0.211268, 0.211317, 0.211224, 0.211193, 0.211406, 0.211374, 0.211305, 0.211228, 0.211214, 0.211244, 0.211236, 0.211533, 0.211265, 0.211212, 0.211242, 0.211267, 0.211224, 0.21128, 0.211406, 0.211383, 0.211264, 0.211243, 0.211281, 0.211302, 0.211384, 0.21142], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 2, 2, 4, 4, 5, 0, 1, 0, 0, 28, 6, 0, 0, 0, 1, 1, 1]': ([0.211366, 0.211457, 0.211261, 0.211279, 0.211268, 0.211317, 0.211224, 0.211193, 0.211406, 0.211374, 0.211305, 0.211228, 0.211214, 0.211244, 0.211236, 0.211533, 0.211265, 0.211212, 0.211242, 0.211267, 0.211224, 0.21128, 0.211406, 0.211383, 0.211264, 0.211243, 0.211281, 0.211302, 0.211384, 0.21142], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	46
        Max loop nest depth: 	6
        Additions: 		591
        Multiplications: 	180
        Divisions: 		0
        Logical: 		0
        Reads: 			1346
        Writes: 		299
        Comparisons:		46
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest18.exe __orio_perftest18.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest18.exe  
Program Test Output: 
{'[2, 6, 6, 6, 6, 4, 1, 1, 15, 8, 0, 3, 0, 0, 1, 1, 1, 1]' : 0.141067}
{'[2, 6, 6, 6, 6, 4, 1, 1, 15, 8, 0, 3, 0, 0, 1, 1, 1, 1]' : 0.140125}
{'[2, 6, 6, 6, 6, 4, 1, 1, 15, 8, 0, 3, 0, 0, 1, 1, 1, 1]' : 0.140095}
{'[2, 6, 6, 6, 6, 4, 1, 1, 15, 8, 0, 3, 0, 0, 1, 1, 1, 1]' : 0.140198}
{'[2, 6, 6, 6, 6, 4, 1, 1, 15, 8, 0, 3, 0, 0, 1, 1, 1, 1]' : 0.14007}
{'[2, 6, 6, 6, 6, 4, 1, 1, 15, 8, 0, 3, 0, 0, 1, 1, 1, 1]' : 0.140236}
{'[2, 6, 6, 6, 6, 4, 1, 1, 15, 8, 0, 3, 0, 0, 1, 1, 1, 1]' : 0.140096}
{'[2, 6, 6, 6, 6, 4, 1, 1, 15, 8, 0, 3, 0, 0, 1, 1, 1, 1]' : 0.140129}
{'[2, 6, 6, 6, 6, 4, 1, 1, 15, 8, 0, 3, 0, 0, 1, 1, 1, 1]' : 0.140051}
{'[2, 6, 6, 6, 6, 4, 1, 1, 15, 8, 0, 3, 0, 0, 1, 1, 1, 1]' : 0.140209}
{'[2, 6, 6, 6, 6, 4, 1, 1, 15, 8, 0, 3, 0, 0, 1, 1, 1, 1]' : 0.140195}
{'[2, 6, 6, 6, 6, 4, 1, 1, 15, 8, 0, 3, 0, 0, 1, 1, 1, 1]' : 0.140431}
{'[2, 6, 6, 6, 6, 4, 1, 1, 15, 8, 0, 3, 0, 0, 1, 1, 1, 1]' : 0.140234}
{'[2, 6, 6, 6, 6, 4, 1, 1, 15, 8, 0, 3, 0, 0, 1, 1, 1, 1]' : 0.140095}
{'[2, 6, 6, 6, 6, 4, 1, 1, 15, 8, 0, 3, 0, 0, 1, 1, 1, 1]' : 0.140154}
{'[2, 6, 6, 6, 6, 4, 1, 1, 15, 8, 0, 3, 0, 0, 1, 1, 1, 1]' : 0.1401}
{'[2, 6, 6, 6, 6, 4, 1, 1, 15, 8, 0, 3, 0, 0, 1, 1, 1, 1]' : 0.140219}
{'[2, 6, 6, 6, 6, 4, 1, 1, 15, 8, 0, 3, 0, 0, 1, 1, 1, 1]' : 0.140055}
{'[2, 6, 6, 6, 6, 4, 1, 1, 15, 8, 0, 3, 0, 0, 1, 1, 1, 1]' : 0.140178}
{'[2, 6, 6, 6, 6, 4, 1, 1, 15, 8, 0, 3, 0, 0, 1, 1, 1, 1]' : 0.140087}
{'[2, 6, 6, 6, 6, 4, 1, 1, 15, 8, 0, 3, 0, 0, 1, 1, 1, 1]' : 0.140039}
{'[2, 6, 6, 6, 6, 4, 1, 1, 15, 8, 0, 3, 0, 0, 1, 1, 1, 1]' : 0.140402}
{'[2, 6, 6, 6, 6, 4, 1, 1, 15, 8, 0, 3, 0, 0, 1, 1, 1, 1]' : 0.14007}
{'[2, 6, 6, 6, 6, 4, 1, 1, 15, 8, 0, 3, 0, 0, 1, 1, 1, 1]' : 0.140153}
{'[2, 6, 6, 6, 6, 4, 1, 1, 15, 8, 0, 3, 0, 0, 1, 1, 1, 1]' : 0.140052}
{'[2, 6, 6, 6, 6, 4, 1, 1, 15, 8, 0, 3, 0, 0, 1, 1, 1, 1]' : 0.140133}
{'[2, 6, 6, 6, 6, 4, 1, 1, 15, 8, 0, 3, 0, 0, 1, 1, 1, 1]' : 0.140058}
{'[2, 6, 6, 6, 6, 4, 1, 1, 15, 8, 0, 3, 0, 0, 1, 1, 1, 1]' : 0.140159}
{'[2, 6, 6, 6, 6, 4, 1, 1, 15, 8, 0, 3, 0, 0, 1, 1, 1, 1]' : 0.140229}
{'[2, 6, 6, 6, 6, 4, 1, 1, 15, 8, 0, 3, 0, 0, 1, 1, 1, 1]' : 0.140225}

out:
 ["{'[2, 6, 6, 6, 6, 4, 1, 1, 15, 8, 0, 3, 0, 0, 1, 1, 1, 1]' : 0.141067}", "{'[2, 6, 6, 6, 6, 4, 1, 1, 15, 8, 0, 3, 0, 0, 1, 1, 1, 1]' : 0.140125}", "{'[2, 6, 6, 6, 6, 4, 1, 1, 15, 8, 0, 3, 0, 0, 1, 1, 1, 1]' : 0.140095}", "{'[2, 6, 6, 6, 6, 4, 1, 1, 15, 8, 0, 3, 0, 0, 1, 1, 1, 1]' : 0.140198}", "{'[2, 6, 6, 6, 6, 4, 1, 1, 15, 8, 0, 3, 0, 0, 1, 1, 1, 1]' : 0.14007}", "{'[2, 6, 6, 6, 6, 4, 1, 1, 15, 8, 0, 3, 0, 0, 1, 1, 1, 1]' : 0.140236}", "{'[2, 6, 6, 6, 6, 4, 1, 1, 15, 8, 0, 3, 0, 0, 1, 1, 1, 1]' : 0.140096}", "{'[2, 6, 6, 6, 6, 4, 1, 1, 15, 8, 0, 3, 0, 0, 1, 1, 1, 1]' : 0.140129}", "{'[2, 6, 6, 6, 6, 4, 1, 1, 15, 8, 0, 3, 0, 0, 1, 1, 1, 1]' : 0.140051}", "{'[2, 6, 6, 6, 6, 4, 1, 1, 15, 8, 0, 3, 0, 0, 1, 1, 1, 1]' : 0.140209}", "{'[2, 6, 6, 6, 6, 4, 1, 1, 15, 8, 0, 3, 0, 0, 1, 1, 1, 1]' : 0.140195}", "{'[2, 6, 6, 6, 6, 4, 1, 1, 15, 8, 0, 3, 0, 0, 1, 1, 1, 1]' : 0.140431}", "{'[2, 6, 6, 6, 6, 4, 1, 1, 15, 8, 0, 3, 0, 0, 1, 1, 1, 1]' : 0.140234}", "{'[2, 6, 6, 6, 6, 4, 1, 1, 15, 8, 0, 3, 0, 0, 1, 1, 1, 1]' : 0.140095}", "{'[2, 6, 6, 6, 6, 4, 1, 1, 15, 8, 0, 3, 0, 0, 1, 1, 1, 1]' : 0.140154}", "{'[2, 6, 6, 6, 6, 4, 1, 1, 15, 8, 0, 3, 0, 0, 1, 1, 1, 1]' : 0.1401}", "{'[2, 6, 6, 6, 6, 4, 1, 1, 15, 8, 0, 3, 0, 0, 1, 1, 1, 1]' : 0.140219}", "{'[2, 6, 6, 6, 6, 4, 1, 1, 15, 8, 0, 3, 0, 0, 1, 1, 1, 1]' : 0.140055}", "{'[2, 6, 6, 6, 6, 4, 1, 1, 15, 8, 0, 3, 0, 0, 1, 1, 1, 1]' : 0.140178}", "{'[2, 6, 6, 6, 6, 4, 1, 1, 15, 8, 0, 3, 0, 0, 1, 1, 1, 1]' : 0.140087}", "{'[2, 6, 6, 6, 6, 4, 1, 1, 15, 8, 0, 3, 0, 0, 1, 1, 1, 1]' : 0.140039}", "{'[2, 6, 6, 6, 6, 4, 1, 1, 15, 8, 0, 3, 0, 0, 1, 1, 1, 1]' : 0.140402}", "{'[2, 6, 6, 6, 6, 4, 1, 1, 15, 8, 0, 3, 0, 0, 1, 1, 1, 1]' : 0.14007}", "{'[2, 6, 6, 6, 6, 4, 1, 1, 15, 8, 0, 3, 0, 0, 1, 1, 1, 1]' : 0.140153}", "{'[2, 6, 6, 6, 6, 4, 1, 1, 15, 8, 0, 3, 0, 0, 1, 1, 1, 1]' : 0.140052}", "{'[2, 6, 6, 6, 6, 4, 1, 1, 15, 8, 0, 3, 0, 0, 1, 1, 1, 1]' : 0.140133}", "{'[2, 6, 6, 6, 6, 4, 1, 1, 15, 8, 0, 3, 0, 0, 1, 1, 1, 1]' : 0.140058}", "{'[2, 6, 6, 6, 6, 4, 1, 1, 15, 8, 0, 3, 0, 0, 1, 1, 1, 1]' : 0.140159}", "{'[2, 6, 6, 6, 6, 4, 1, 1, 15, 8, 0, 3, 0, 0, 1, 1, 1, 1]' : 0.140229}", "{'[2, 6, 6, 6, 6, 4, 1, 1, 15, 8, 0, 3, 0, 0, 1, 1, 1, 1]' : 0.140225}"]
returning from 'run': {'[2, 6, 6, 6, 6, 4, 1, 1, 15, 8, 0, 3, 0, 0, 1, 1, 1, 1]': ([0.141067, 0.140125, 0.140095, 0.140198, 0.14007, 0.140236, 0.140096, 0.140129, 0.140051, 0.140209, 0.140195, 0.140431, 0.140234, 0.140095, 0.140154, 0.1401, 0.140219, 0.140055, 0.140178, 0.140087, 0.140039, 0.140402, 0.14007, 0.140153, 0.140052, 0.140133, 0.140058, 0.140159, 0.140229, 0.140225], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 6, 6, 6, 6, 4, 1, 1, 15, 8, 0, 3, 0, 0, 1, 1, 1, 1]': ([0.141067, 0.140125, 0.140095, 0.140198, 0.14007, 0.140236, 0.140096, 0.140129, 0.140051, 0.140209, 0.140195, 0.140431, 0.140234, 0.140095, 0.140154, 0.1401, 0.140219, 0.140055, 0.140178, 0.140087, 0.140039, 0.140402, 0.14007, 0.140153, 0.140052, 0.140133, 0.140058, 0.140159, 0.140229, 0.140225], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = jjj
Code stats:
        Number of loops: 	61
        Max loop nest depth: 	5
        Additions: 		5450
        Multiplications: 	1984
        Divisions: 		0
        Logical: 		0
        Reads: 			12168
        Writes: 		2775
        Comparisons:		61
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest19.exe __orio_perftest19.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest19.exe  
Program Test Output: 
{'[2, 4, 0, 3, 2, 0, 0, 0, 8, 21, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.080308}
{'[2, 4, 0, 3, 2, 0, 0, 0, 8, 21, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.079854}
{'[2, 4, 0, 3, 2, 0, 0, 0, 8, 21, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.079788}
{'[2, 4, 0, 3, 2, 0, 0, 0, 8, 21, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.079807}
{'[2, 4, 0, 3, 2, 0, 0, 0, 8, 21, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0797999}
{'[2, 4, 0, 3, 2, 0, 0, 0, 8, 21, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0798898}
{'[2, 4, 0, 3, 2, 0, 0, 0, 8, 21, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0797949}
{'[2, 4, 0, 3, 2, 0, 0, 0, 8, 21, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0800581}
{'[2, 4, 0, 3, 2, 0, 0, 0, 8, 21, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0799129}
{'[2, 4, 0, 3, 2, 0, 0, 0, 8, 21, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0798571}
{'[2, 4, 0, 3, 2, 0, 0, 0, 8, 21, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.079787}
{'[2, 4, 0, 3, 2, 0, 0, 0, 8, 21, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0798681}
{'[2, 4, 0, 3, 2, 0, 0, 0, 8, 21, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.079803}
{'[2, 4, 0, 3, 2, 0, 0, 0, 8, 21, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0797839}
{'[2, 4, 0, 3, 2, 0, 0, 0, 8, 21, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0797889}
{'[2, 4, 0, 3, 2, 0, 0, 0, 8, 21, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0797598}
{'[2, 4, 0, 3, 2, 0, 0, 0, 8, 21, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0797851}
{'[2, 4, 0, 3, 2, 0, 0, 0, 8, 21, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.079787}
{'[2, 4, 0, 3, 2, 0, 0, 0, 8, 21, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.079885}
{'[2, 4, 0, 3, 2, 0, 0, 0, 8, 21, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0797219}
{'[2, 4, 0, 3, 2, 0, 0, 0, 8, 21, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0798059}
{'[2, 4, 0, 3, 2, 0, 0, 0, 8, 21, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0798042}
{'[2, 4, 0, 3, 2, 0, 0, 0, 8, 21, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0798299}
{'[2, 4, 0, 3, 2, 0, 0, 0, 8, 21, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.079834}
{'[2, 4, 0, 3, 2, 0, 0, 0, 8, 21, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0798171}
{'[2, 4, 0, 3, 2, 0, 0, 0, 8, 21, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.079838}
{'[2, 4, 0, 3, 2, 0, 0, 0, 8, 21, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.080019}
{'[2, 4, 0, 3, 2, 0, 0, 0, 8, 21, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.07989}
{'[2, 4, 0, 3, 2, 0, 0, 0, 8, 21, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0798371}
{'[2, 4, 0, 3, 2, 0, 0, 0, 8, 21, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.079809}

out:
 ["{'[2, 4, 0, 3, 2, 0, 0, 0, 8, 21, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.080308}", "{'[2, 4, 0, 3, 2, 0, 0, 0, 8, 21, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.079854}", "{'[2, 4, 0, 3, 2, 0, 0, 0, 8, 21, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.079788}", "{'[2, 4, 0, 3, 2, 0, 0, 0, 8, 21, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.079807}", "{'[2, 4, 0, 3, 2, 0, 0, 0, 8, 21, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0797999}", "{'[2, 4, 0, 3, 2, 0, 0, 0, 8, 21, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0798898}", "{'[2, 4, 0, 3, 2, 0, 0, 0, 8, 21, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0797949}", "{'[2, 4, 0, 3, 2, 0, 0, 0, 8, 21, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0800581}", "{'[2, 4, 0, 3, 2, 0, 0, 0, 8, 21, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0799129}", "{'[2, 4, 0, 3, 2, 0, 0, 0, 8, 21, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0798571}", "{'[2, 4, 0, 3, 2, 0, 0, 0, 8, 21, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.079787}", "{'[2, 4, 0, 3, 2, 0, 0, 0, 8, 21, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0798681}", "{'[2, 4, 0, 3, 2, 0, 0, 0, 8, 21, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.079803}", "{'[2, 4, 0, 3, 2, 0, 0, 0, 8, 21, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0797839}", "{'[2, 4, 0, 3, 2, 0, 0, 0, 8, 21, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0797889}", "{'[2, 4, 0, 3, 2, 0, 0, 0, 8, 21, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0797598}", "{'[2, 4, 0, 3, 2, 0, 0, 0, 8, 21, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0797851}", "{'[2, 4, 0, 3, 2, 0, 0, 0, 8, 21, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.079787}", "{'[2, 4, 0, 3, 2, 0, 0, 0, 8, 21, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.079885}", "{'[2, 4, 0, 3, 2, 0, 0, 0, 8, 21, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0797219}", "{'[2, 4, 0, 3, 2, 0, 0, 0, 8, 21, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0798059}", "{'[2, 4, 0, 3, 2, 0, 0, 0, 8, 21, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0798042}", "{'[2, 4, 0, 3, 2, 0, 0, 0, 8, 21, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0798299}", "{'[2, 4, 0, 3, 2, 0, 0, 0, 8, 21, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.079834}", "{'[2, 4, 0, 3, 2, 0, 0, 0, 8, 21, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0798171}", "{'[2, 4, 0, 3, 2, 0, 0, 0, 8, 21, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.079838}", "{'[2, 4, 0, 3, 2, 0, 0, 0, 8, 21, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.080019}", "{'[2, 4, 0, 3, 2, 0, 0, 0, 8, 21, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.07989}", "{'[2, 4, 0, 3, 2, 0, 0, 0, 8, 21, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0798371}", "{'[2, 4, 0, 3, 2, 0, 0, 0, 8, 21, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.079809}"]
returning from 'run': {'[2, 4, 0, 3, 2, 0, 0, 0, 8, 21, 0, 29, 1, 0, 0, 1, 0, 1]': ([0.080308, 0.079854, 0.079788, 0.079807, 0.0797999, 0.0798898, 0.0797949, 0.0800581, 0.0799129, 0.0798571, 0.079787, 0.0798681, 0.079803, 0.0797839, 0.0797889, 0.0797598, 0.0797851, 0.079787, 0.079885, 0.0797219, 0.0798059, 0.0798042, 0.0798299, 0.079834, 0.0798171, 0.079838, 0.080019, 0.07989, 0.0798371, 0.079809], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 4, 0, 3, 2, 0, 0, 0, 8, 21, 0, 29, 1, 0, 0, 1, 0, 1]': ([0.080308, 0.079854, 0.079788, 0.079807, 0.0797999, 0.0798898, 0.0797949, 0.0800581, 0.0799129, 0.0798571, 0.079787, 0.0798681, 0.079803, 0.0797839, 0.0797889, 0.0797598, 0.0797851, 0.079787, 0.079885, 0.0797219, 0.0798059, 0.0798042, 0.0798299, 0.079834, 0.0798171, 0.079838, 0.080019, 0.07989, 0.0798371, 0.079809], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	6
        Additions: 		1249
        Multiplications: 	576
        Divisions: 		0
        Logical: 		0
        Reads: 			2480
        Writes: 		433
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest20.exe __orio_perftest20.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest20.exe  
Program Test Output: 
{'[1, 2, 2, 6, 2, 1, 0, 0, 13, 0, 13, 7, 1, 1, 0, 1, 1, 0]' : 0.079504}
{'[1, 2, 2, 6, 2, 1, 0, 0, 13, 0, 13, 7, 1, 1, 0, 1, 1, 0]' : 0.0788958}
{'[1, 2, 2, 6, 2, 1, 0, 0, 13, 0, 13, 7, 1, 1, 0, 1, 1, 0]' : 0.078933}
{'[1, 2, 2, 6, 2, 1, 0, 0, 13, 0, 13, 7, 1, 1, 0, 1, 1, 0]' : 0.078953}
{'[1, 2, 2, 6, 2, 1, 0, 0, 13, 0, 13, 7, 1, 1, 0, 1, 1, 0]' : 0.0790689}
{'[1, 2, 2, 6, 2, 1, 0, 0, 13, 0, 13, 7, 1, 1, 0, 1, 1, 0]' : 0.0789921}
{'[1, 2, 2, 6, 2, 1, 0, 0, 13, 0, 13, 7, 1, 1, 0, 1, 1, 0]' : 0.078881}
{'[1, 2, 2, 6, 2, 1, 0, 0, 13, 0, 13, 7, 1, 1, 0, 1, 1, 0]' : 0.079016}
{'[1, 2, 2, 6, 2, 1, 0, 0, 13, 0, 13, 7, 1, 1, 0, 1, 1, 0]' : 0.0791118}
{'[1, 2, 2, 6, 2, 1, 0, 0, 13, 0, 13, 7, 1, 1, 0, 1, 1, 0]' : 0.0789452}
{'[1, 2, 2, 6, 2, 1, 0, 0, 13, 0, 13, 7, 1, 1, 0, 1, 1, 0]' : 0.0790029}
{'[1, 2, 2, 6, 2, 1, 0, 0, 13, 0, 13, 7, 1, 1, 0, 1, 1, 0]' : 0.07883}
{'[1, 2, 2, 6, 2, 1, 0, 0, 13, 0, 13, 7, 1, 1, 0, 1, 1, 0]' : 0.0790648}
{'[1, 2, 2, 6, 2, 1, 0, 0, 13, 0, 13, 7, 1, 1, 0, 1, 1, 0]' : 0.078932}
{'[1, 2, 2, 6, 2, 1, 0, 0, 13, 0, 13, 7, 1, 1, 0, 1, 1, 0]' : 0.078928}
{'[1, 2, 2, 6, 2, 1, 0, 0, 13, 0, 13, 7, 1, 1, 0, 1, 1, 0]' : 0.0790131}
{'[1, 2, 2, 6, 2, 1, 0, 0, 13, 0, 13, 7, 1, 1, 0, 1, 1, 0]' : 0.0788779}
{'[1, 2, 2, 6, 2, 1, 0, 0, 13, 0, 13, 7, 1, 1, 0, 1, 1, 0]' : 0.0790839}
{'[1, 2, 2, 6, 2, 1, 0, 0, 13, 0, 13, 7, 1, 1, 0, 1, 1, 0]' : 0.079484}
{'[1, 2, 2, 6, 2, 1, 0, 0, 13, 0, 13, 7, 1, 1, 0, 1, 1, 0]' : 0.078932}
{'[1, 2, 2, 6, 2, 1, 0, 0, 13, 0, 13, 7, 1, 1, 0, 1, 1, 0]' : 0.079169}
{'[1, 2, 2, 6, 2, 1, 0, 0, 13, 0, 13, 7, 1, 1, 0, 1, 1, 0]' : 0.0789561}
{'[1, 2, 2, 6, 2, 1, 0, 0, 13, 0, 13, 7, 1, 1, 0, 1, 1, 0]' : 0.0790689}
{'[1, 2, 2, 6, 2, 1, 0, 0, 13, 0, 13, 7, 1, 1, 0, 1, 1, 0]' : 0.0789001}
{'[1, 2, 2, 6, 2, 1, 0, 0, 13, 0, 13, 7, 1, 1, 0, 1, 1, 0]' : 0.0788929}
{'[1, 2, 2, 6, 2, 1, 0, 0, 13, 0, 13, 7, 1, 1, 0, 1, 1, 0]' : 0.0790732}
{'[1, 2, 2, 6, 2, 1, 0, 0, 13, 0, 13, 7, 1, 1, 0, 1, 1, 0]' : 0.0789618}
{'[1, 2, 2, 6, 2, 1, 0, 0, 13, 0, 13, 7, 1, 1, 0, 1, 1, 0]' : 0.079056}
{'[1, 2, 2, 6, 2, 1, 0, 0, 13, 0, 13, 7, 1, 1, 0, 1, 1, 0]' : 0.0789502}
{'[1, 2, 2, 6, 2, 1, 0, 0, 13, 0, 13, 7, 1, 1, 0, 1, 1, 0]' : 0.0788999}

out:
 ["{'[1, 2, 2, 6, 2, 1, 0, 0, 13, 0, 13, 7, 1, 1, 0, 1, 1, 0]' : 0.079504}", "{'[1, 2, 2, 6, 2, 1, 0, 0, 13, 0, 13, 7, 1, 1, 0, 1, 1, 0]' : 0.0788958}", "{'[1, 2, 2, 6, 2, 1, 0, 0, 13, 0, 13, 7, 1, 1, 0, 1, 1, 0]' : 0.078933}", "{'[1, 2, 2, 6, 2, 1, 0, 0, 13, 0, 13, 7, 1, 1, 0, 1, 1, 0]' : 0.078953}", "{'[1, 2, 2, 6, 2, 1, 0, 0, 13, 0, 13, 7, 1, 1, 0, 1, 1, 0]' : 0.0790689}", "{'[1, 2, 2, 6, 2, 1, 0, 0, 13, 0, 13, 7, 1, 1, 0, 1, 1, 0]' : 0.0789921}", "{'[1, 2, 2, 6, 2, 1, 0, 0, 13, 0, 13, 7, 1, 1, 0, 1, 1, 0]' : 0.078881}", "{'[1, 2, 2, 6, 2, 1, 0, 0, 13, 0, 13, 7, 1, 1, 0, 1, 1, 0]' : 0.079016}", "{'[1, 2, 2, 6, 2, 1, 0, 0, 13, 0, 13, 7, 1, 1, 0, 1, 1, 0]' : 0.0791118}", "{'[1, 2, 2, 6, 2, 1, 0, 0, 13, 0, 13, 7, 1, 1, 0, 1, 1, 0]' : 0.0789452}", "{'[1, 2, 2, 6, 2, 1, 0, 0, 13, 0, 13, 7, 1, 1, 0, 1, 1, 0]' : 0.0790029}", "{'[1, 2, 2, 6, 2, 1, 0, 0, 13, 0, 13, 7, 1, 1, 0, 1, 1, 0]' : 0.07883}", "{'[1, 2, 2, 6, 2, 1, 0, 0, 13, 0, 13, 7, 1, 1, 0, 1, 1, 0]' : 0.0790648}", "{'[1, 2, 2, 6, 2, 1, 0, 0, 13, 0, 13, 7, 1, 1, 0, 1, 1, 0]' : 0.078932}", "{'[1, 2, 2, 6, 2, 1, 0, 0, 13, 0, 13, 7, 1, 1, 0, 1, 1, 0]' : 0.078928}", "{'[1, 2, 2, 6, 2, 1, 0, 0, 13, 0, 13, 7, 1, 1, 0, 1, 1, 0]' : 0.0790131}", "{'[1, 2, 2, 6, 2, 1, 0, 0, 13, 0, 13, 7, 1, 1, 0, 1, 1, 0]' : 0.0788779}", "{'[1, 2, 2, 6, 2, 1, 0, 0, 13, 0, 13, 7, 1, 1, 0, 1, 1, 0]' : 0.0790839}", "{'[1, 2, 2, 6, 2, 1, 0, 0, 13, 0, 13, 7, 1, 1, 0, 1, 1, 0]' : 0.079484}", "{'[1, 2, 2, 6, 2, 1, 0, 0, 13, 0, 13, 7, 1, 1, 0, 1, 1, 0]' : 0.078932}", "{'[1, 2, 2, 6, 2, 1, 0, 0, 13, 0, 13, 7, 1, 1, 0, 1, 1, 0]' : 0.079169}", "{'[1, 2, 2, 6, 2, 1, 0, 0, 13, 0, 13, 7, 1, 1, 0, 1, 1, 0]' : 0.0789561}", "{'[1, 2, 2, 6, 2, 1, 0, 0, 13, 0, 13, 7, 1, 1, 0, 1, 1, 0]' : 0.0790689}", "{'[1, 2, 2, 6, 2, 1, 0, 0, 13, 0, 13, 7, 1, 1, 0, 1, 1, 0]' : 0.0789001}", "{'[1, 2, 2, 6, 2, 1, 0, 0, 13, 0, 13, 7, 1, 1, 0, 1, 1, 0]' : 0.0788929}", "{'[1, 2, 2, 6, 2, 1, 0, 0, 13, 0, 13, 7, 1, 1, 0, 1, 1, 0]' : 0.0790732}", "{'[1, 2, 2, 6, 2, 1, 0, 0, 13, 0, 13, 7, 1, 1, 0, 1, 1, 0]' : 0.0789618}", "{'[1, 2, 2, 6, 2, 1, 0, 0, 13, 0, 13, 7, 1, 1, 0, 1, 1, 0]' : 0.079056}", "{'[1, 2, 2, 6, 2, 1, 0, 0, 13, 0, 13, 7, 1, 1, 0, 1, 1, 0]' : 0.0789502}", "{'[1, 2, 2, 6, 2, 1, 0, 0, 13, 0, 13, 7, 1, 1, 0, 1, 1, 0]' : 0.0788999}"]
returning from 'run': {'[1, 2, 2, 6, 2, 1, 0, 0, 13, 0, 13, 7, 1, 1, 0, 1, 1, 0]': ([0.079504, 0.0788958, 0.078933, 0.078953, 0.0790689, 0.0789921, 0.078881, 0.079016, 0.0791118, 0.0789452, 0.0790029, 0.07883, 0.0790648, 0.078932, 0.078928, 0.0790131, 0.0788779, 0.0790839, 0.079484, 0.078932, 0.079169, 0.0789561, 0.0790689, 0.0789001, 0.0788929, 0.0790732, 0.0789618, 0.079056, 0.0789502, 0.0788999], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 2, 2, 6, 2, 1, 0, 0, 13, 0, 13, 7, 1, 1, 0, 1, 1, 0]': ([0.079504, 0.0788958, 0.078933, 0.078953, 0.0790689, 0.0789921, 0.078881, 0.079016, 0.0791118, 0.0789452, 0.0790029, 0.07883, 0.0790648, 0.078932, 0.078928, 0.0790131, 0.0788779, 0.0790839, 0.079484, 0.078932, 0.079169, 0.0789561, 0.0790689, 0.0789001, 0.0788929, 0.0790732, 0.0789618, 0.079056, 0.0789502, 0.0788999], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	45
        Max loop nest depth: 	5
        Additions: 		1362
        Multiplications: 	440
        Divisions: 		0
        Logical: 		0
        Reads: 			2505
        Writes: 		451
        Comparisons:		45
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest21.exe __orio_perftest21.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest21.exe  
Program Test Output: 
{'[0, 2, 2, 6, 5, 0, 1, 0, 29, 8, 11, 0, 0, 0, 1, 1, 0, 1]' : 0.131156}
{'[0, 2, 2, 6, 5, 0, 1, 0, 29, 8, 11, 0, 0, 0, 1, 1, 0, 1]' : 0.131115}
{'[0, 2, 2, 6, 5, 0, 1, 0, 29, 8, 11, 0, 0, 0, 1, 1, 0, 1]' : 0.131091}
{'[0, 2, 2, 6, 5, 0, 1, 0, 29, 8, 11, 0, 0, 0, 1, 1, 0, 1]' : 0.131166}
{'[0, 2, 2, 6, 5, 0, 1, 0, 29, 8, 11, 0, 0, 0, 1, 1, 0, 1]' : 0.131108}
{'[0, 2, 2, 6, 5, 0, 1, 0, 29, 8, 11, 0, 0, 0, 1, 1, 0, 1]' : 0.131125}
{'[0, 2, 2, 6, 5, 0, 1, 0, 29, 8, 11, 0, 0, 0, 1, 1, 0, 1]' : 0.131184}
{'[0, 2, 2, 6, 5, 0, 1, 0, 29, 8, 11, 0, 0, 0, 1, 1, 0, 1]' : 0.131148}
{'[0, 2, 2, 6, 5, 0, 1, 0, 29, 8, 11, 0, 0, 0, 1, 1, 0, 1]' : 0.131066}
{'[0, 2, 2, 6, 5, 0, 1, 0, 29, 8, 11, 0, 0, 0, 1, 1, 0, 1]' : 0.13132}
{'[0, 2, 2, 6, 5, 0, 1, 0, 29, 8, 11, 0, 0, 0, 1, 1, 0, 1]' : 0.131044}
{'[0, 2, 2, 6, 5, 0, 1, 0, 29, 8, 11, 0, 0, 0, 1, 1, 0, 1]' : 0.131138}
{'[0, 2, 2, 6, 5, 0, 1, 0, 29, 8, 11, 0, 0, 0, 1, 1, 0, 1]' : 0.131158}
{'[0, 2, 2, 6, 5, 0, 1, 0, 29, 8, 11, 0, 0, 0, 1, 1, 0, 1]' : 0.131096}
{'[0, 2, 2, 6, 5, 0, 1, 0, 29, 8, 11, 0, 0, 0, 1, 1, 0, 1]' : 0.131147}
{'[0, 2, 2, 6, 5, 0, 1, 0, 29, 8, 11, 0, 0, 0, 1, 1, 0, 1]' : 0.131131}
{'[0, 2, 2, 6, 5, 0, 1, 0, 29, 8, 11, 0, 0, 0, 1, 1, 0, 1]' : 0.131169}
{'[0, 2, 2, 6, 5, 0, 1, 0, 29, 8, 11, 0, 0, 0, 1, 1, 0, 1]' : 0.131124}
{'[0, 2, 2, 6, 5, 0, 1, 0, 29, 8, 11, 0, 0, 0, 1, 1, 0, 1]' : 0.131156}
{'[0, 2, 2, 6, 5, 0, 1, 0, 29, 8, 11, 0, 0, 0, 1, 1, 0, 1]' : 0.131183}
{'[0, 2, 2, 6, 5, 0, 1, 0, 29, 8, 11, 0, 0, 0, 1, 1, 0, 1]' : 0.131186}
{'[0, 2, 2, 6, 5, 0, 1, 0, 29, 8, 11, 0, 0, 0, 1, 1, 0, 1]' : 0.131247}
{'[0, 2, 2, 6, 5, 0, 1, 0, 29, 8, 11, 0, 0, 0, 1, 1, 0, 1]' : 0.131103}
{'[0, 2, 2, 6, 5, 0, 1, 0, 29, 8, 11, 0, 0, 0, 1, 1, 0, 1]' : 0.131131}
{'[0, 2, 2, 6, 5, 0, 1, 0, 29, 8, 11, 0, 0, 0, 1, 1, 0, 1]' : 0.131138}
{'[0, 2, 2, 6, 5, 0, 1, 0, 29, 8, 11, 0, 0, 0, 1, 1, 0, 1]' : 0.131168}
{'[0, 2, 2, 6, 5, 0, 1, 0, 29, 8, 11, 0, 0, 0, 1, 1, 0, 1]' : 0.131136}
{'[0, 2, 2, 6, 5, 0, 1, 0, 29, 8, 11, 0, 0, 0, 1, 1, 0, 1]' : 0.131254}
{'[0, 2, 2, 6, 5, 0, 1, 0, 29, 8, 11, 0, 0, 0, 1, 1, 0, 1]' : 0.131126}
{'[0, 2, 2, 6, 5, 0, 1, 0, 29, 8, 11, 0, 0, 0, 1, 1, 0, 1]' : 0.13118}

out:
 ["{'[0, 2, 2, 6, 5, 0, 1, 0, 29, 8, 11, 0, 0, 0, 1, 1, 0, 1]' : 0.131156}", "{'[0, 2, 2, 6, 5, 0, 1, 0, 29, 8, 11, 0, 0, 0, 1, 1, 0, 1]' : 0.131115}", "{'[0, 2, 2, 6, 5, 0, 1, 0, 29, 8, 11, 0, 0, 0, 1, 1, 0, 1]' : 0.131091}", "{'[0, 2, 2, 6, 5, 0, 1, 0, 29, 8, 11, 0, 0, 0, 1, 1, 0, 1]' : 0.131166}", "{'[0, 2, 2, 6, 5, 0, 1, 0, 29, 8, 11, 0, 0, 0, 1, 1, 0, 1]' : 0.131108}", "{'[0, 2, 2, 6, 5, 0, 1, 0, 29, 8, 11, 0, 0, 0, 1, 1, 0, 1]' : 0.131125}", "{'[0, 2, 2, 6, 5, 0, 1, 0, 29, 8, 11, 0, 0, 0, 1, 1, 0, 1]' : 0.131184}", "{'[0, 2, 2, 6, 5, 0, 1, 0, 29, 8, 11, 0, 0, 0, 1, 1, 0, 1]' : 0.131148}", "{'[0, 2, 2, 6, 5, 0, 1, 0, 29, 8, 11, 0, 0, 0, 1, 1, 0, 1]' : 0.131066}", "{'[0, 2, 2, 6, 5, 0, 1, 0, 29, 8, 11, 0, 0, 0, 1, 1, 0, 1]' : 0.13132}", "{'[0, 2, 2, 6, 5, 0, 1, 0, 29, 8, 11, 0, 0, 0, 1, 1, 0, 1]' : 0.131044}", "{'[0, 2, 2, 6, 5, 0, 1, 0, 29, 8, 11, 0, 0, 0, 1, 1, 0, 1]' : 0.131138}", "{'[0, 2, 2, 6, 5, 0, 1, 0, 29, 8, 11, 0, 0, 0, 1, 1, 0, 1]' : 0.131158}", "{'[0, 2, 2, 6, 5, 0, 1, 0, 29, 8, 11, 0, 0, 0, 1, 1, 0, 1]' : 0.131096}", "{'[0, 2, 2, 6, 5, 0, 1, 0, 29, 8, 11, 0, 0, 0, 1, 1, 0, 1]' : 0.131147}", "{'[0, 2, 2, 6, 5, 0, 1, 0, 29, 8, 11, 0, 0, 0, 1, 1, 0, 1]' : 0.131131}", "{'[0, 2, 2, 6, 5, 0, 1, 0, 29, 8, 11, 0, 0, 0, 1, 1, 0, 1]' : 0.131169}", "{'[0, 2, 2, 6, 5, 0, 1, 0, 29, 8, 11, 0, 0, 0, 1, 1, 0, 1]' : 0.131124}", "{'[0, 2, 2, 6, 5, 0, 1, 0, 29, 8, 11, 0, 0, 0, 1, 1, 0, 1]' : 0.131156}", "{'[0, 2, 2, 6, 5, 0, 1, 0, 29, 8, 11, 0, 0, 0, 1, 1, 0, 1]' : 0.131183}", "{'[0, 2, 2, 6, 5, 0, 1, 0, 29, 8, 11, 0, 0, 0, 1, 1, 0, 1]' : 0.131186}", "{'[0, 2, 2, 6, 5, 0, 1, 0, 29, 8, 11, 0, 0, 0, 1, 1, 0, 1]' : 0.131247}", "{'[0, 2, 2, 6, 5, 0, 1, 0, 29, 8, 11, 0, 0, 0, 1, 1, 0, 1]' : 0.131103}", "{'[0, 2, 2, 6, 5, 0, 1, 0, 29, 8, 11, 0, 0, 0, 1, 1, 0, 1]' : 0.131131}", "{'[0, 2, 2, 6, 5, 0, 1, 0, 29, 8, 11, 0, 0, 0, 1, 1, 0, 1]' : 0.131138}", "{'[0, 2, 2, 6, 5, 0, 1, 0, 29, 8, 11, 0, 0, 0, 1, 1, 0, 1]' : 0.131168}", "{'[0, 2, 2, 6, 5, 0, 1, 0, 29, 8, 11, 0, 0, 0, 1, 1, 0, 1]' : 0.131136}", "{'[0, 2, 2, 6, 5, 0, 1, 0, 29, 8, 11, 0, 0, 0, 1, 1, 0, 1]' : 0.131254}", "{'[0, 2, 2, 6, 5, 0, 1, 0, 29, 8, 11, 0, 0, 0, 1, 1, 0, 1]' : 0.131126}", "{'[0, 2, 2, 6, 5, 0, 1, 0, 29, 8, 11, 0, 0, 0, 1, 1, 0, 1]' : 0.13118}"]
returning from 'run': {'[0, 2, 2, 6, 5, 0, 1, 0, 29, 8, 11, 0, 0, 0, 1, 1, 0, 1]': ([0.131156, 0.131115, 0.131091, 0.131166, 0.131108, 0.131125, 0.131184, 0.131148, 0.131066, 0.13132, 0.131044, 0.131138, 0.131158, 0.131096, 0.131147, 0.131131, 0.131169, 0.131124, 0.131156, 0.131183, 0.131186, 0.131247, 0.131103, 0.131131, 0.131138, 0.131168, 0.131136, 0.131254, 0.131126, 0.13118], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 2, 6, 5, 0, 1, 0, 29, 8, 11, 0, 0, 0, 1, 1, 0, 1]': ([0.131156, 0.131115, 0.131091, 0.131166, 0.131108, 0.131125, 0.131184, 0.131148, 0.131066, 0.13132, 0.131044, 0.131138, 0.131158, 0.131096, 0.131147, 0.131131, 0.131169, 0.131124, 0.131156, 0.131183, 0.131186, 0.131247, 0.131103, 0.131131, 0.131138, 0.131168, 0.131136, 0.131254, 0.131126, 0.13118], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	54
        Max loop nest depth: 	5
        Additions: 		4464
        Multiplications: 	1700
        Divisions: 		0
        Logical: 		0
        Reads: 			9421
        Writes: 		1983
        Comparisons:		54
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest22.exe __orio_perftest22.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest22.exe  
Program Test Output: 
{'[0, 0, 2, 3, 0, 6, 0, 0, 2, 15, 0, 23, 1, 0, 1, 1, 1, 0]' : 0.083833}
{'[0, 0, 2, 3, 0, 6, 0, 0, 2, 15, 0, 23, 1, 0, 1, 1, 1, 0]' : 0.083107}
{'[0, 0, 2, 3, 0, 6, 0, 0, 2, 15, 0, 23, 1, 0, 1, 1, 1, 0]' : 0.0830131}
{'[0, 0, 2, 3, 0, 6, 0, 0, 2, 15, 0, 23, 1, 0, 1, 1, 1, 0]' : 0.0830929}
{'[0, 0, 2, 3, 0, 6, 0, 0, 2, 15, 0, 23, 1, 0, 1, 1, 1, 0]' : 0.0830059}
{'[0, 0, 2, 3, 0, 6, 0, 0, 2, 15, 0, 23, 1, 0, 1, 1, 1, 0]' : 0.0830312}
{'[0, 0, 2, 3, 0, 6, 0, 0, 2, 15, 0, 23, 1, 0, 1, 1, 1, 0]' : 0.0830569}
{'[0, 0, 2, 3, 0, 6, 0, 0, 2, 15, 0, 23, 1, 0, 1, 1, 1, 0]' : 0.083096}
{'[0, 0, 2, 3, 0, 6, 0, 0, 2, 15, 0, 23, 1, 0, 1, 1, 1, 0]' : 0.0830171}
{'[0, 0, 2, 3, 0, 6, 0, 0, 2, 15, 0, 23, 1, 0, 1, 1, 1, 0]' : 0.083369}
{'[0, 0, 2, 3, 0, 6, 0, 0, 2, 15, 0, 23, 1, 0, 1, 1, 1, 0]' : 0.083039}
{'[0, 0, 2, 3, 0, 6, 0, 0, 2, 15, 0, 23, 1, 0, 1, 1, 1, 0]' : 0.0830359}
{'[0, 0, 2, 3, 0, 6, 0, 0, 2, 15, 0, 23, 1, 0, 1, 1, 1, 0]' : 0.0830231}
{'[0, 0, 2, 3, 0, 6, 0, 0, 2, 15, 0, 23, 1, 0, 1, 1, 1, 0]' : 0.0830369}
{'[0, 0, 2, 3, 0, 6, 0, 0, 2, 15, 0, 23, 1, 0, 1, 1, 1, 0]' : 0.0830801}
{'[0, 0, 2, 3, 0, 6, 0, 0, 2, 15, 0, 23, 1, 0, 1, 1, 1, 0]' : 0.083065}
{'[0, 0, 2, 3, 0, 6, 0, 0, 2, 15, 0, 23, 1, 0, 1, 1, 1, 0]' : 0.08305}
{'[0, 0, 2, 3, 0, 6, 0, 0, 2, 15, 0, 23, 1, 0, 1, 1, 1, 0]' : 0.08305}
{'[0, 0, 2, 3, 0, 6, 0, 0, 2, 15, 0, 23, 1, 0, 1, 1, 1, 0]' : 0.083075}
{'[0, 0, 2, 3, 0, 6, 0, 0, 2, 15, 0, 23, 1, 0, 1, 1, 1, 0]' : 0.083061}
{'[0, 0, 2, 3, 0, 6, 0, 0, 2, 15, 0, 23, 1, 0, 1, 1, 1, 0]' : 0.083045}
{'[0, 0, 2, 3, 0, 6, 0, 0, 2, 15, 0, 23, 1, 0, 1, 1, 1, 0]' : 0.082999}
{'[0, 0, 2, 3, 0, 6, 0, 0, 2, 15, 0, 23, 1, 0, 1, 1, 1, 0]' : 0.0831189}
{'[0, 0, 2, 3, 0, 6, 0, 0, 2, 15, 0, 23, 1, 0, 1, 1, 1, 0]' : 0.0830941}
{'[0, 0, 2, 3, 0, 6, 0, 0, 2, 15, 0, 23, 1, 0, 1, 1, 1, 0]' : 0.083107}
{'[0, 0, 2, 3, 0, 6, 0, 0, 2, 15, 0, 23, 1, 0, 1, 1, 1, 0]' : 0.0831361}
{'[0, 0, 2, 3, 0, 6, 0, 0, 2, 15, 0, 23, 1, 0, 1, 1, 1, 0]' : 0.0830159}
{'[0, 0, 2, 3, 0, 6, 0, 0, 2, 15, 0, 23, 1, 0, 1, 1, 1, 0]' : 0.0833111}
{'[0, 0, 2, 3, 0, 6, 0, 0, 2, 15, 0, 23, 1, 0, 1, 1, 1, 0]' : 0.0830748}
{'[0, 0, 2, 3, 0, 6, 0, 0, 2, 15, 0, 23, 1, 0, 1, 1, 1, 0]' : 0.0830531}

out:
 ["{'[0, 0, 2, 3, 0, 6, 0, 0, 2, 15, 0, 23, 1, 0, 1, 1, 1, 0]' : 0.083833}", "{'[0, 0, 2, 3, 0, 6, 0, 0, 2, 15, 0, 23, 1, 0, 1, 1, 1, 0]' : 0.083107}", "{'[0, 0, 2, 3, 0, 6, 0, 0, 2, 15, 0, 23, 1, 0, 1, 1, 1, 0]' : 0.0830131}", "{'[0, 0, 2, 3, 0, 6, 0, 0, 2, 15, 0, 23, 1, 0, 1, 1, 1, 0]' : 0.0830929}", "{'[0, 0, 2, 3, 0, 6, 0, 0, 2, 15, 0, 23, 1, 0, 1, 1, 1, 0]' : 0.0830059}", "{'[0, 0, 2, 3, 0, 6, 0, 0, 2, 15, 0, 23, 1, 0, 1, 1, 1, 0]' : 0.0830312}", "{'[0, 0, 2, 3, 0, 6, 0, 0, 2, 15, 0, 23, 1, 0, 1, 1, 1, 0]' : 0.0830569}", "{'[0, 0, 2, 3, 0, 6, 0, 0, 2, 15, 0, 23, 1, 0, 1, 1, 1, 0]' : 0.083096}", "{'[0, 0, 2, 3, 0, 6, 0, 0, 2, 15, 0, 23, 1, 0, 1, 1, 1, 0]' : 0.0830171}", "{'[0, 0, 2, 3, 0, 6, 0, 0, 2, 15, 0, 23, 1, 0, 1, 1, 1, 0]' : 0.083369}", "{'[0, 0, 2, 3, 0, 6, 0, 0, 2, 15, 0, 23, 1, 0, 1, 1, 1, 0]' : 0.083039}", "{'[0, 0, 2, 3, 0, 6, 0, 0, 2, 15, 0, 23, 1, 0, 1, 1, 1, 0]' : 0.0830359}", "{'[0, 0, 2, 3, 0, 6, 0, 0, 2, 15, 0, 23, 1, 0, 1, 1, 1, 0]' : 0.0830231}", "{'[0, 0, 2, 3, 0, 6, 0, 0, 2, 15, 0, 23, 1, 0, 1, 1, 1, 0]' : 0.0830369}", "{'[0, 0, 2, 3, 0, 6, 0, 0, 2, 15, 0, 23, 1, 0, 1, 1, 1, 0]' : 0.0830801}", "{'[0, 0, 2, 3, 0, 6, 0, 0, 2, 15, 0, 23, 1, 0, 1, 1, 1, 0]' : 0.083065}", "{'[0, 0, 2, 3, 0, 6, 0, 0, 2, 15, 0, 23, 1, 0, 1, 1, 1, 0]' : 0.08305}", "{'[0, 0, 2, 3, 0, 6, 0, 0, 2, 15, 0, 23, 1, 0, 1, 1, 1, 0]' : 0.08305}", "{'[0, 0, 2, 3, 0, 6, 0, 0, 2, 15, 0, 23, 1, 0, 1, 1, 1, 0]' : 0.083075}", "{'[0, 0, 2, 3, 0, 6, 0, 0, 2, 15, 0, 23, 1, 0, 1, 1, 1, 0]' : 0.083061}", "{'[0, 0, 2, 3, 0, 6, 0, 0, 2, 15, 0, 23, 1, 0, 1, 1, 1, 0]' : 0.083045}", "{'[0, 0, 2, 3, 0, 6, 0, 0, 2, 15, 0, 23, 1, 0, 1, 1, 1, 0]' : 0.082999}", "{'[0, 0, 2, 3, 0, 6, 0, 0, 2, 15, 0, 23, 1, 0, 1, 1, 1, 0]' : 0.0831189}", "{'[0, 0, 2, 3, 0, 6, 0, 0, 2, 15, 0, 23, 1, 0, 1, 1, 1, 0]' : 0.0830941}", "{'[0, 0, 2, 3, 0, 6, 0, 0, 2, 15, 0, 23, 1, 0, 1, 1, 1, 0]' : 0.083107}", "{'[0, 0, 2, 3, 0, 6, 0, 0, 2, 15, 0, 23, 1, 0, 1, 1, 1, 0]' : 0.0831361}", "{'[0, 0, 2, 3, 0, 6, 0, 0, 2, 15, 0, 23, 1, 0, 1, 1, 1, 0]' : 0.0830159}", "{'[0, 0, 2, 3, 0, 6, 0, 0, 2, 15, 0, 23, 1, 0, 1, 1, 1, 0]' : 0.0833111}", "{'[0, 0, 2, 3, 0, 6, 0, 0, 2, 15, 0, 23, 1, 0, 1, 1, 1, 0]' : 0.0830748}", "{'[0, 0, 2, 3, 0, 6, 0, 0, 2, 15, 0, 23, 1, 0, 1, 1, 1, 0]' : 0.0830531}"]
returning from 'run': {'[0, 0, 2, 3, 0, 6, 0, 0, 2, 15, 0, 23, 1, 0, 1, 1, 1, 0]': ([0.083833, 0.083107, 0.0830131, 0.0830929, 0.0830059, 0.0830312, 0.0830569, 0.083096, 0.0830171, 0.083369, 0.083039, 0.0830359, 0.0830231, 0.0830369, 0.0830801, 0.083065, 0.08305, 0.08305, 0.083075, 0.083061, 0.083045, 0.082999, 0.0831189, 0.0830941, 0.083107, 0.0831361, 0.0830159, 0.0833111, 0.0830748, 0.0830531], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 2, 3, 0, 6, 0, 0, 2, 15, 0, 23, 1, 0, 1, 1, 1, 0]': ([0.083833, 0.083107, 0.0830131, 0.0830929, 0.0830059, 0.0830312, 0.0830569, 0.083096, 0.0830171, 0.083369, 0.083039, 0.0830359, 0.0830231, 0.0830369, 0.0830801, 0.083065, 0.08305, 0.08305, 0.083075, 0.083061, 0.083045, 0.082999, 0.0831189, 0.0830941, 0.083107, 0.0831361, 0.0830159, 0.0833111, 0.0830748, 0.0830531], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	163
        Max loop nest depth: 	6
        Additions: 		6777
        Multiplications: 	2580
        Divisions: 		0
        Logical: 		0
        Reads: 			12303
        Writes: 		2018
        Comparisons:		163
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest23.exe __orio_perftest23.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest23.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest23.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest23.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/Orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/Orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 510, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors, data)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 396, in dopt_anova
    budget)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 324, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 270, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/phrb/code/Orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest23.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/Orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/Orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 510, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors, data)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 396, in dopt_anova
    budget)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 324, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 270, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/phrb/code/Orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	5
        Additions: 		685
        Multiplications: 	198
        Divisions: 		0
        Logical: 		0
        Reads: 			1212
        Writes: 		176
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest24.exe __orio_perftest24.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest24.exe  
Program Test Output: 
{'[1, 0, 1, 0, 4, 3, 1, 0, 25, 0, 0, 8, 1, 0, 0, 0, 0, 1]' : 0.112365}
{'[1, 0, 1, 0, 4, 3, 1, 0, 25, 0, 0, 8, 1, 0, 0, 0, 0, 1]' : 0.112347}
{'[1, 0, 1, 0, 4, 3, 1, 0, 25, 0, 0, 8, 1, 0, 0, 0, 0, 1]' : 0.111948}
{'[1, 0, 1, 0, 4, 3, 1, 0, 25, 0, 0, 8, 1, 0, 0, 0, 0, 1]' : 0.111823}
{'[1, 0, 1, 0, 4, 3, 1, 0, 25, 0, 0, 8, 1, 0, 0, 0, 0, 1]' : 0.111943}
{'[1, 0, 1, 0, 4, 3, 1, 0, 25, 0, 0, 8, 1, 0, 0, 0, 0, 1]' : 0.112064}
{'[1, 0, 1, 0, 4, 3, 1, 0, 25, 0, 0, 8, 1, 0, 0, 0, 0, 1]' : 0.111902}
{'[1, 0, 1, 0, 4, 3, 1, 0, 25, 0, 0, 8, 1, 0, 0, 0, 0, 1]' : 0.111868}
{'[1, 0, 1, 0, 4, 3, 1, 0, 25, 0, 0, 8, 1, 0, 0, 0, 0, 1]' : 0.111938}
{'[1, 0, 1, 0, 4, 3, 1, 0, 25, 0, 0, 8, 1, 0, 0, 0, 0, 1]' : 0.1119}
{'[1, 0, 1, 0, 4, 3, 1, 0, 25, 0, 0, 8, 1, 0, 0, 0, 0, 1]' : 0.111919}
{'[1, 0, 1, 0, 4, 3, 1, 0, 25, 0, 0, 8, 1, 0, 0, 0, 0, 1]' : 0.111867}
{'[1, 0, 1, 0, 4, 3, 1, 0, 25, 0, 0, 8, 1, 0, 0, 0, 0, 1]' : 0.111981}
{'[1, 0, 1, 0, 4, 3, 1, 0, 25, 0, 0, 8, 1, 0, 0, 0, 0, 1]' : 0.111836}
{'[1, 0, 1, 0, 4, 3, 1, 0, 25, 0, 0, 8, 1, 0, 0, 0, 0, 1]' : 0.111923}
{'[1, 0, 1, 0, 4, 3, 1, 0, 25, 0, 0, 8, 1, 0, 0, 0, 0, 1]' : 0.112237}
{'[1, 0, 1, 0, 4, 3, 1, 0, 25, 0, 0, 8, 1, 0, 0, 0, 0, 1]' : 0.111973}
{'[1, 0, 1, 0, 4, 3, 1, 0, 25, 0, 0, 8, 1, 0, 0, 0, 0, 1]' : 0.111892}
{'[1, 0, 1, 0, 4, 3, 1, 0, 25, 0, 0, 8, 1, 0, 0, 0, 0, 1]' : 0.111933}
{'[1, 0, 1, 0, 4, 3, 1, 0, 25, 0, 0, 8, 1, 0, 0, 0, 0, 1]' : 0.11185}
{'[1, 0, 1, 0, 4, 3, 1, 0, 25, 0, 0, 8, 1, 0, 0, 0, 0, 1]' : 0.112183}
{'[1, 0, 1, 0, 4, 3, 1, 0, 25, 0, 0, 8, 1, 0, 0, 0, 0, 1]' : 0.111863}
{'[1, 0, 1, 0, 4, 3, 1, 0, 25, 0, 0, 8, 1, 0, 0, 0, 0, 1]' : 0.112024}
{'[1, 0, 1, 0, 4, 3, 1, 0, 25, 0, 0, 8, 1, 0, 0, 0, 0, 1]' : 0.111886}
{'[1, 0, 1, 0, 4, 3, 1, 0, 25, 0, 0, 8, 1, 0, 0, 0, 0, 1]' : 0.111934}
{'[1, 0, 1, 0, 4, 3, 1, 0, 25, 0, 0, 8, 1, 0, 0, 0, 0, 1]' : 0.11195}
{'[1, 0, 1, 0, 4, 3, 1, 0, 25, 0, 0, 8, 1, 0, 0, 0, 0, 1]' : 0.111891}
{'[1, 0, 1, 0, 4, 3, 1, 0, 25, 0, 0, 8, 1, 0, 0, 0, 0, 1]' : 0.111922}
{'[1, 0, 1, 0, 4, 3, 1, 0, 25, 0, 0, 8, 1, 0, 0, 0, 0, 1]' : 0.112281}
{'[1, 0, 1, 0, 4, 3, 1, 0, 25, 0, 0, 8, 1, 0, 0, 0, 0, 1]' : 0.112255}

out:
 ["{'[1, 0, 1, 0, 4, 3, 1, 0, 25, 0, 0, 8, 1, 0, 0, 0, 0, 1]' : 0.112365}", "{'[1, 0, 1, 0, 4, 3, 1, 0, 25, 0, 0, 8, 1, 0, 0, 0, 0, 1]' : 0.112347}", "{'[1, 0, 1, 0, 4, 3, 1, 0, 25, 0, 0, 8, 1, 0, 0, 0, 0, 1]' : 0.111948}", "{'[1, 0, 1, 0, 4, 3, 1, 0, 25, 0, 0, 8, 1, 0, 0, 0, 0, 1]' : 0.111823}", "{'[1, 0, 1, 0, 4, 3, 1, 0, 25, 0, 0, 8, 1, 0, 0, 0, 0, 1]' : 0.111943}", "{'[1, 0, 1, 0, 4, 3, 1, 0, 25, 0, 0, 8, 1, 0, 0, 0, 0, 1]' : 0.112064}", "{'[1, 0, 1, 0, 4, 3, 1, 0, 25, 0, 0, 8, 1, 0, 0, 0, 0, 1]' : 0.111902}", "{'[1, 0, 1, 0, 4, 3, 1, 0, 25, 0, 0, 8, 1, 0, 0, 0, 0, 1]' : 0.111868}", "{'[1, 0, 1, 0, 4, 3, 1, 0, 25, 0, 0, 8, 1, 0, 0, 0, 0, 1]' : 0.111938}", "{'[1, 0, 1, 0, 4, 3, 1, 0, 25, 0, 0, 8, 1, 0, 0, 0, 0, 1]' : 0.1119}", "{'[1, 0, 1, 0, 4, 3, 1, 0, 25, 0, 0, 8, 1, 0, 0, 0, 0, 1]' : 0.111919}", "{'[1, 0, 1, 0, 4, 3, 1, 0, 25, 0, 0, 8, 1, 0, 0, 0, 0, 1]' : 0.111867}", "{'[1, 0, 1, 0, 4, 3, 1, 0, 25, 0, 0, 8, 1, 0, 0, 0, 0, 1]' : 0.111981}", "{'[1, 0, 1, 0, 4, 3, 1, 0, 25, 0, 0, 8, 1, 0, 0, 0, 0, 1]' : 0.111836}", "{'[1, 0, 1, 0, 4, 3, 1, 0, 25, 0, 0, 8, 1, 0, 0, 0, 0, 1]' : 0.111923}", "{'[1, 0, 1, 0, 4, 3, 1, 0, 25, 0, 0, 8, 1, 0, 0, 0, 0, 1]' : 0.112237}", "{'[1, 0, 1, 0, 4, 3, 1, 0, 25, 0, 0, 8, 1, 0, 0, 0, 0, 1]' : 0.111973}", "{'[1, 0, 1, 0, 4, 3, 1, 0, 25, 0, 0, 8, 1, 0, 0, 0, 0, 1]' : 0.111892}", "{'[1, 0, 1, 0, 4, 3, 1, 0, 25, 0, 0, 8, 1, 0, 0, 0, 0, 1]' : 0.111933}", "{'[1, 0, 1, 0, 4, 3, 1, 0, 25, 0, 0, 8, 1, 0, 0, 0, 0, 1]' : 0.11185}", "{'[1, 0, 1, 0, 4, 3, 1, 0, 25, 0, 0, 8, 1, 0, 0, 0, 0, 1]' : 0.112183}", "{'[1, 0, 1, 0, 4, 3, 1, 0, 25, 0, 0, 8, 1, 0, 0, 0, 0, 1]' : 0.111863}", "{'[1, 0, 1, 0, 4, 3, 1, 0, 25, 0, 0, 8, 1, 0, 0, 0, 0, 1]' : 0.112024}", "{'[1, 0, 1, 0, 4, 3, 1, 0, 25, 0, 0, 8, 1, 0, 0, 0, 0, 1]' : 0.111886}", "{'[1, 0, 1, 0, 4, 3, 1, 0, 25, 0, 0, 8, 1, 0, 0, 0, 0, 1]' : 0.111934}", "{'[1, 0, 1, 0, 4, 3, 1, 0, 25, 0, 0, 8, 1, 0, 0, 0, 0, 1]' : 0.11195}", "{'[1, 0, 1, 0, 4, 3, 1, 0, 25, 0, 0, 8, 1, 0, 0, 0, 0, 1]' : 0.111891}", "{'[1, 0, 1, 0, 4, 3, 1, 0, 25, 0, 0, 8, 1, 0, 0, 0, 0, 1]' : 0.111922}", "{'[1, 0, 1, 0, 4, 3, 1, 0, 25, 0, 0, 8, 1, 0, 0, 0, 0, 1]' : 0.112281}", "{'[1, 0, 1, 0, 4, 3, 1, 0, 25, 0, 0, 8, 1, 0, 0, 0, 0, 1]' : 0.112255}"]
returning from 'run': {'[1, 0, 1, 0, 4, 3, 1, 0, 25, 0, 0, 8, 1, 0, 0, 0, 0, 1]': ([0.112365, 0.112347, 0.111948, 0.111823, 0.111943, 0.112064, 0.111902, 0.111868, 0.111938, 0.1119, 0.111919, 0.111867, 0.111981, 0.111836, 0.111923, 0.112237, 0.111973, 0.111892, 0.111933, 0.11185, 0.112183, 0.111863, 0.112024, 0.111886, 0.111934, 0.11195, 0.111891, 0.111922, 0.112281, 0.112255], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 1, 0, 4, 3, 1, 0, 25, 0, 0, 8, 1, 0, 0, 0, 0, 1]': ([0.112365, 0.112347, 0.111948, 0.111823, 0.111943, 0.112064, 0.111902, 0.111868, 0.111938, 0.1119, 0.111919, 0.111867, 0.111981, 0.111836, 0.111923, 0.112237, 0.111973, 0.111892, 0.111933, 0.11185, 0.112183, 0.111863, 0.112024, 0.111886, 0.111934, 0.11195, 0.111891, 0.111922, 0.112281, 0.112255], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	31
        Max loop nest depth: 	5
        Additions: 		1774
        Multiplications: 	774
        Divisions: 		0
        Logical: 		0
        Reads: 			3743
        Writes: 		741
        Comparisons:		31
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest25.exe __orio_perftest25.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest25.exe  
Program Test Output: 
{'[2, 1, 0, 0, 5, 0, 0, 1, 16, 7, 0, 8, 0, 2, 0, 1, 1, 1]' : 0.0966928}
{'[2, 1, 0, 0, 5, 0, 0, 1, 16, 7, 0, 8, 0, 2, 0, 1, 1, 1]' : 0.096205}
{'[2, 1, 0, 0, 5, 0, 0, 1, 16, 7, 0, 8, 0, 2, 0, 1, 1, 1]' : 0.096205}
{'[2, 1, 0, 0, 5, 0, 0, 1, 16, 7, 0, 8, 0, 2, 0, 1, 1, 1]' : 0.0961308}
{'[2, 1, 0, 0, 5, 0, 0, 1, 16, 7, 0, 8, 0, 2, 0, 1, 1, 1]' : 0.0962501}
{'[2, 1, 0, 0, 5, 0, 0, 1, 16, 7, 0, 8, 0, 2, 0, 1, 1, 1]' : 0.096159}
{'[2, 1, 0, 0, 5, 0, 0, 1, 16, 7, 0, 8, 0, 2, 0, 1, 1, 1]' : 0.096153}
{'[2, 1, 0, 0, 5, 0, 0, 1, 16, 7, 0, 8, 0, 2, 0, 1, 1, 1]' : 0.09622}
{'[2, 1, 0, 0, 5, 0, 0, 1, 16, 7, 0, 8, 0, 2, 0, 1, 1, 1]' : 0.0962272}
{'[2, 1, 0, 0, 5, 0, 0, 1, 16, 7, 0, 8, 0, 2, 0, 1, 1, 1]' : 0.096236}
{'[2, 1, 0, 0, 5, 0, 0, 1, 16, 7, 0, 8, 0, 2, 0, 1, 1, 1]' : 0.096215}
{'[2, 1, 0, 0, 5, 0, 0, 1, 16, 7, 0, 8, 0, 2, 0, 1, 1, 1]' : 0.096154}
{'[2, 1, 0, 0, 5, 0, 0, 1, 16, 7, 0, 8, 0, 2, 0, 1, 1, 1]' : 0.0990539}
{'[2, 1, 0, 0, 5, 0, 0, 1, 16, 7, 0, 8, 0, 2, 0, 1, 1, 1]' : 0.096148}
{'[2, 1, 0, 0, 5, 0, 0, 1, 16, 7, 0, 8, 0, 2, 0, 1, 1, 1]' : 0.096179}
{'[2, 1, 0, 0, 5, 0, 0, 1, 16, 7, 0, 8, 0, 2, 0, 1, 1, 1]' : 0.096283}
{'[2, 1, 0, 0, 5, 0, 0, 1, 16, 7, 0, 8, 0, 2, 0, 1, 1, 1]' : 0.096221}
{'[2, 1, 0, 0, 5, 0, 0, 1, 16, 7, 0, 8, 0, 2, 0, 1, 1, 1]' : 0.0961859}
{'[2, 1, 0, 0, 5, 0, 0, 1, 16, 7, 0, 8, 0, 2, 0, 1, 1, 1]' : 0.096143}
{'[2, 1, 0, 0, 5, 0, 0, 1, 16, 7, 0, 8, 0, 2, 0, 1, 1, 1]' : 0.096272}
{'[2, 1, 0, 0, 5, 0, 0, 1, 16, 7, 0, 8, 0, 2, 0, 1, 1, 1]' : 0.0963619}
{'[2, 1, 0, 0, 5, 0, 0, 1, 16, 7, 0, 8, 0, 2, 0, 1, 1, 1]' : 0.0961549}
{'[2, 1, 0, 0, 5, 0, 0, 1, 16, 7, 0, 8, 0, 2, 0, 1, 1, 1]' : 0.096139}
{'[2, 1, 0, 0, 5, 0, 0, 1, 16, 7, 0, 8, 0, 2, 0, 1, 1, 1]' : 0.0961959}
{'[2, 1, 0, 0, 5, 0, 0, 1, 16, 7, 0, 8, 0, 2, 0, 1, 1, 1]' : 0.0961349}
{'[2, 1, 0, 0, 5, 0, 0, 1, 16, 7, 0, 8, 0, 2, 0, 1, 1, 1]' : 0.0961599}
{'[2, 1, 0, 0, 5, 0, 0, 1, 16, 7, 0, 8, 0, 2, 0, 1, 1, 1]' : 0.0961711}
{'[2, 1, 0, 0, 5, 0, 0, 1, 16, 7, 0, 8, 0, 2, 0, 1, 1, 1]' : 0.0989389}
{'[2, 1, 0, 0, 5, 0, 0, 1, 16, 7, 0, 8, 0, 2, 0, 1, 1, 1]' : 0.0962591}
{'[2, 1, 0, 0, 5, 0, 0, 1, 16, 7, 0, 8, 0, 2, 0, 1, 1, 1]' : 0.0962949}

out:
 ["{'[2, 1, 0, 0, 5, 0, 0, 1, 16, 7, 0, 8, 0, 2, 0, 1, 1, 1]' : 0.0966928}", "{'[2, 1, 0, 0, 5, 0, 0, 1, 16, 7, 0, 8, 0, 2, 0, 1, 1, 1]' : 0.096205}", "{'[2, 1, 0, 0, 5, 0, 0, 1, 16, 7, 0, 8, 0, 2, 0, 1, 1, 1]' : 0.096205}", "{'[2, 1, 0, 0, 5, 0, 0, 1, 16, 7, 0, 8, 0, 2, 0, 1, 1, 1]' : 0.0961308}", "{'[2, 1, 0, 0, 5, 0, 0, 1, 16, 7, 0, 8, 0, 2, 0, 1, 1, 1]' : 0.0962501}", "{'[2, 1, 0, 0, 5, 0, 0, 1, 16, 7, 0, 8, 0, 2, 0, 1, 1, 1]' : 0.096159}", "{'[2, 1, 0, 0, 5, 0, 0, 1, 16, 7, 0, 8, 0, 2, 0, 1, 1, 1]' : 0.096153}", "{'[2, 1, 0, 0, 5, 0, 0, 1, 16, 7, 0, 8, 0, 2, 0, 1, 1, 1]' : 0.09622}", "{'[2, 1, 0, 0, 5, 0, 0, 1, 16, 7, 0, 8, 0, 2, 0, 1, 1, 1]' : 0.0962272}", "{'[2, 1, 0, 0, 5, 0, 0, 1, 16, 7, 0, 8, 0, 2, 0, 1, 1, 1]' : 0.096236}", "{'[2, 1, 0, 0, 5, 0, 0, 1, 16, 7, 0, 8, 0, 2, 0, 1, 1, 1]' : 0.096215}", "{'[2, 1, 0, 0, 5, 0, 0, 1, 16, 7, 0, 8, 0, 2, 0, 1, 1, 1]' : 0.096154}", "{'[2, 1, 0, 0, 5, 0, 0, 1, 16, 7, 0, 8, 0, 2, 0, 1, 1, 1]' : 0.0990539}", "{'[2, 1, 0, 0, 5, 0, 0, 1, 16, 7, 0, 8, 0, 2, 0, 1, 1, 1]' : 0.096148}", "{'[2, 1, 0, 0, 5, 0, 0, 1, 16, 7, 0, 8, 0, 2, 0, 1, 1, 1]' : 0.096179}", "{'[2, 1, 0, 0, 5, 0, 0, 1, 16, 7, 0, 8, 0, 2, 0, 1, 1, 1]' : 0.096283}", "{'[2, 1, 0, 0, 5, 0, 0, 1, 16, 7, 0, 8, 0, 2, 0, 1, 1, 1]' : 0.096221}", "{'[2, 1, 0, 0, 5, 0, 0, 1, 16, 7, 0, 8, 0, 2, 0, 1, 1, 1]' : 0.0961859}", "{'[2, 1, 0, 0, 5, 0, 0, 1, 16, 7, 0, 8, 0, 2, 0, 1, 1, 1]' : 0.096143}", "{'[2, 1, 0, 0, 5, 0, 0, 1, 16, 7, 0, 8, 0, 2, 0, 1, 1, 1]' : 0.096272}", "{'[2, 1, 0, 0, 5, 0, 0, 1, 16, 7, 0, 8, 0, 2, 0, 1, 1, 1]' : 0.0963619}", "{'[2, 1, 0, 0, 5, 0, 0, 1, 16, 7, 0, 8, 0, 2, 0, 1, 1, 1]' : 0.0961549}", "{'[2, 1, 0, 0, 5, 0, 0, 1, 16, 7, 0, 8, 0, 2, 0, 1, 1, 1]' : 0.096139}", "{'[2, 1, 0, 0, 5, 0, 0, 1, 16, 7, 0, 8, 0, 2, 0, 1, 1, 1]' : 0.0961959}", "{'[2, 1, 0, 0, 5, 0, 0, 1, 16, 7, 0, 8, 0, 2, 0, 1, 1, 1]' : 0.0961349}", "{'[2, 1, 0, 0, 5, 0, 0, 1, 16, 7, 0, 8, 0, 2, 0, 1, 1, 1]' : 0.0961599}", "{'[2, 1, 0, 0, 5, 0, 0, 1, 16, 7, 0, 8, 0, 2, 0, 1, 1, 1]' : 0.0961711}", "{'[2, 1, 0, 0, 5, 0, 0, 1, 16, 7, 0, 8, 0, 2, 0, 1, 1, 1]' : 0.0989389}", "{'[2, 1, 0, 0, 5, 0, 0, 1, 16, 7, 0, 8, 0, 2, 0, 1, 1, 1]' : 0.0962591}", "{'[2, 1, 0, 0, 5, 0, 0, 1, 16, 7, 0, 8, 0, 2, 0, 1, 1, 1]' : 0.0962949}"]
returning from 'run': {'[2, 1, 0, 0, 5, 0, 0, 1, 16, 7, 0, 8, 0, 2, 0, 1, 1, 1]': ([0.0966928, 0.096205, 0.096205, 0.0961308, 0.0962501, 0.096159, 0.096153, 0.09622, 0.0962272, 0.096236, 0.096215, 0.096154, 0.0990539, 0.096148, 0.096179, 0.096283, 0.096221, 0.0961859, 0.096143, 0.096272, 0.0963619, 0.0961549, 0.096139, 0.0961959, 0.0961349, 0.0961599, 0.0961711, 0.0989389, 0.0962591, 0.0962949], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 1, 0, 0, 5, 0, 0, 1, 16, 7, 0, 8, 0, 2, 0, 1, 1, 1]': ([0.0966928, 0.096205, 0.096205, 0.0961308, 0.0962501, 0.096159, 0.096153, 0.09622, 0.0962272, 0.096236, 0.096215, 0.096154, 0.0990539, 0.096148, 0.096179, 0.096283, 0.096221, 0.0961859, 0.096143, 0.096272, 0.0963619, 0.0961549, 0.096139, 0.0961959, 0.0961349, 0.0961599, 0.0961711, 0.0989389, 0.0962591, 0.0962949], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	107
        Max loop nest depth: 	5
        Additions: 		8108
        Multiplications: 	2162
        Divisions: 		0
        Logical: 		0
        Reads: 			12333
        Writes: 		1387
        Comparisons:		107
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest26.exe __orio_perftest26.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest26.exe  
Program Test Output: 
{'[0, 1, 6, 5, 2, 0, 0, 1, 18, 21, 29, 0, 0, 1, 1, 0, 1, 0]' : 0.150749}
{'[0, 1, 6, 5, 2, 0, 0, 1, 18, 21, 29, 0, 0, 1, 1, 0, 1, 0]' : 0.150341}
{'[0, 1, 6, 5, 2, 0, 0, 1, 18, 21, 29, 0, 0, 1, 1, 0, 1, 0]' : 0.150222}
{'[0, 1, 6, 5, 2, 0, 0, 1, 18, 21, 29, 0, 0, 1, 1, 0, 1, 0]' : 0.15012}
{'[0, 1, 6, 5, 2, 0, 0, 1, 18, 21, 29, 0, 0, 1, 1, 0, 1, 0]' : 0.15027}
{'[0, 1, 6, 5, 2, 0, 0, 1, 18, 21, 29, 0, 0, 1, 1, 0, 1, 0]' : 0.150392}
{'[0, 1, 6, 5, 2, 0, 0, 1, 18, 21, 29, 0, 0, 1, 1, 0, 1, 0]' : 0.150244}
{'[0, 1, 6, 5, 2, 0, 0, 1, 18, 21, 29, 0, 0, 1, 1, 0, 1, 0]' : 0.150378}
{'[0, 1, 6, 5, 2, 0, 0, 1, 18, 21, 29, 0, 0, 1, 1, 0, 1, 0]' : 0.157842}
{'[0, 1, 6, 5, 2, 0, 0, 1, 18, 21, 29, 0, 0, 1, 1, 0, 1, 0]' : 0.150212}
{'[0, 1, 6, 5, 2, 0, 0, 1, 18, 21, 29, 0, 0, 1, 1, 0, 1, 0]' : 0.150297}
{'[0, 1, 6, 5, 2, 0, 0, 1, 18, 21, 29, 0, 0, 1, 1, 0, 1, 0]' : 0.15044}
{'[0, 1, 6, 5, 2, 0, 0, 1, 18, 21, 29, 0, 0, 1, 1, 0, 1, 0]' : 0.150275}
{'[0, 1, 6, 5, 2, 0, 0, 1, 18, 21, 29, 0, 0, 1, 1, 0, 1, 0]' : 0.150224}
{'[0, 1, 6, 5, 2, 0, 0, 1, 18, 21, 29, 0, 0, 1, 1, 0, 1, 0]' : 0.150342}
{'[0, 1, 6, 5, 2, 0, 0, 1, 18, 21, 29, 0, 0, 1, 1, 0, 1, 0]' : 0.150228}
{'[0, 1, 6, 5, 2, 0, 0, 1, 18, 21, 29, 0, 0, 1, 1, 0, 1, 0]' : 0.150321}
{'[0, 1, 6, 5, 2, 0, 0, 1, 18, 21, 29, 0, 0, 1, 1, 0, 1, 0]' : 0.150264}
{'[0, 1, 6, 5, 2, 0, 0, 1, 18, 21, 29, 0, 0, 1, 1, 0, 1, 0]' : 0.158096}
{'[0, 1, 6, 5, 2, 0, 0, 1, 18, 21, 29, 0, 0, 1, 1, 0, 1, 0]' : 0.150291}
{'[0, 1, 6, 5, 2, 0, 0, 1, 18, 21, 29, 0, 0, 1, 1, 0, 1, 0]' : 0.150253}
{'[0, 1, 6, 5, 2, 0, 0, 1, 18, 21, 29, 0, 0, 1, 1, 0, 1, 0]' : 0.150241}
{'[0, 1, 6, 5, 2, 0, 0, 1, 18, 21, 29, 0, 0, 1, 1, 0, 1, 0]' : 0.150291}
{'[0, 1, 6, 5, 2, 0, 0, 1, 18, 21, 29, 0, 0, 1, 1, 0, 1, 0]' : 0.150284}
{'[0, 1, 6, 5, 2, 0, 0, 1, 18, 21, 29, 0, 0, 1, 1, 0, 1, 0]' : 0.150356}
{'[0, 1, 6, 5, 2, 0, 0, 1, 18, 21, 29, 0, 0, 1, 1, 0, 1, 0]' : 0.150409}
{'[0, 1, 6, 5, 2, 0, 0, 1, 18, 21, 29, 0, 0, 1, 1, 0, 1, 0]' : 0.150255}
{'[0, 1, 6, 5, 2, 0, 0, 1, 18, 21, 29, 0, 0, 1, 1, 0, 1, 0]' : 0.150246}
{'[0, 1, 6, 5, 2, 0, 0, 1, 18, 21, 29, 0, 0, 1, 1, 0, 1, 0]' : 0.157751}
{'[0, 1, 6, 5, 2, 0, 0, 1, 18, 21, 29, 0, 0, 1, 1, 0, 1, 0]' : 0.150203}

out:
 ["{'[0, 1, 6, 5, 2, 0, 0, 1, 18, 21, 29, 0, 0, 1, 1, 0, 1, 0]' : 0.150749}", "{'[0, 1, 6, 5, 2, 0, 0, 1, 18, 21, 29, 0, 0, 1, 1, 0, 1, 0]' : 0.150341}", "{'[0, 1, 6, 5, 2, 0, 0, 1, 18, 21, 29, 0, 0, 1, 1, 0, 1, 0]' : 0.150222}", "{'[0, 1, 6, 5, 2, 0, 0, 1, 18, 21, 29, 0, 0, 1, 1, 0, 1, 0]' : 0.15012}", "{'[0, 1, 6, 5, 2, 0, 0, 1, 18, 21, 29, 0, 0, 1, 1, 0, 1, 0]' : 0.15027}", "{'[0, 1, 6, 5, 2, 0, 0, 1, 18, 21, 29, 0, 0, 1, 1, 0, 1, 0]' : 0.150392}", "{'[0, 1, 6, 5, 2, 0, 0, 1, 18, 21, 29, 0, 0, 1, 1, 0, 1, 0]' : 0.150244}", "{'[0, 1, 6, 5, 2, 0, 0, 1, 18, 21, 29, 0, 0, 1, 1, 0, 1, 0]' : 0.150378}", "{'[0, 1, 6, 5, 2, 0, 0, 1, 18, 21, 29, 0, 0, 1, 1, 0, 1, 0]' : 0.157842}", "{'[0, 1, 6, 5, 2, 0, 0, 1, 18, 21, 29, 0, 0, 1, 1, 0, 1, 0]' : 0.150212}", "{'[0, 1, 6, 5, 2, 0, 0, 1, 18, 21, 29, 0, 0, 1, 1, 0, 1, 0]' : 0.150297}", "{'[0, 1, 6, 5, 2, 0, 0, 1, 18, 21, 29, 0, 0, 1, 1, 0, 1, 0]' : 0.15044}", "{'[0, 1, 6, 5, 2, 0, 0, 1, 18, 21, 29, 0, 0, 1, 1, 0, 1, 0]' : 0.150275}", "{'[0, 1, 6, 5, 2, 0, 0, 1, 18, 21, 29, 0, 0, 1, 1, 0, 1, 0]' : 0.150224}", "{'[0, 1, 6, 5, 2, 0, 0, 1, 18, 21, 29, 0, 0, 1, 1, 0, 1, 0]' : 0.150342}", "{'[0, 1, 6, 5, 2, 0, 0, 1, 18, 21, 29, 0, 0, 1, 1, 0, 1, 0]' : 0.150228}", "{'[0, 1, 6, 5, 2, 0, 0, 1, 18, 21, 29, 0, 0, 1, 1, 0, 1, 0]' : 0.150321}", "{'[0, 1, 6, 5, 2, 0, 0, 1, 18, 21, 29, 0, 0, 1, 1, 0, 1, 0]' : 0.150264}", "{'[0, 1, 6, 5, 2, 0, 0, 1, 18, 21, 29, 0, 0, 1, 1, 0, 1, 0]' : 0.158096}", "{'[0, 1, 6, 5, 2, 0, 0, 1, 18, 21, 29, 0, 0, 1, 1, 0, 1, 0]' : 0.150291}", "{'[0, 1, 6, 5, 2, 0, 0, 1, 18, 21, 29, 0, 0, 1, 1, 0, 1, 0]' : 0.150253}", "{'[0, 1, 6, 5, 2, 0, 0, 1, 18, 21, 29, 0, 0, 1, 1, 0, 1, 0]' : 0.150241}", "{'[0, 1, 6, 5, 2, 0, 0, 1, 18, 21, 29, 0, 0, 1, 1, 0, 1, 0]' : 0.150291}", "{'[0, 1, 6, 5, 2, 0, 0, 1, 18, 21, 29, 0, 0, 1, 1, 0, 1, 0]' : 0.150284}", "{'[0, 1, 6, 5, 2, 0, 0, 1, 18, 21, 29, 0, 0, 1, 1, 0, 1, 0]' : 0.150356}", "{'[0, 1, 6, 5, 2, 0, 0, 1, 18, 21, 29, 0, 0, 1, 1, 0, 1, 0]' : 0.150409}", "{'[0, 1, 6, 5, 2, 0, 0, 1, 18, 21, 29, 0, 0, 1, 1, 0, 1, 0]' : 0.150255}", "{'[0, 1, 6, 5, 2, 0, 0, 1, 18, 21, 29, 0, 0, 1, 1, 0, 1, 0]' : 0.150246}", "{'[0, 1, 6, 5, 2, 0, 0, 1, 18, 21, 29, 0, 0, 1, 1, 0, 1, 0]' : 0.157751}", "{'[0, 1, 6, 5, 2, 0, 0, 1, 18, 21, 29, 0, 0, 1, 1, 0, 1, 0]' : 0.150203}"]
returning from 'run': {'[0, 1, 6, 5, 2, 0, 0, 1, 18, 21, 29, 0, 0, 1, 1, 0, 1, 0]': ([0.150749, 0.150341, 0.150222, 0.15012, 0.15027, 0.150392, 0.150244, 0.150378, 0.157842, 0.150212, 0.150297, 0.15044, 0.150275, 0.150224, 0.150342, 0.150228, 0.150321, 0.150264, 0.158096, 0.150291, 0.150253, 0.150241, 0.150291, 0.150284, 0.150356, 0.150409, 0.150255, 0.150246, 0.157751, 0.150203], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 6, 5, 2, 0, 0, 1, 18, 21, 29, 0, 0, 1, 1, 0, 1, 0]': ([0.150749, 0.150341, 0.150222, 0.15012, 0.15027, 0.150392, 0.150244, 0.150378, 0.157842, 0.150212, 0.150297, 0.15044, 0.150275, 0.150224, 0.150342, 0.150228, 0.150321, 0.150264, 0.158096, 0.150291, 0.150253, 0.150241, 0.150291, 0.150284, 0.150356, 0.150409, 0.150255, 0.150246, 0.157751, 0.150203], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = jjj
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		192
        Multiplications: 	60
        Divisions: 		0
        Logical: 		0
        Reads: 			426
        Writes: 		90
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest27.exe __orio_perftest27.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest27.exe  
Program Test Output: 
{'[4, 5, 1, 2, 3, 6, 0, 1, 6, 0, 12, 0, 0, 1, 1, 1, 0, 1]' : 0.202049}
{'[4, 5, 1, 2, 3, 6, 0, 1, 6, 0, 12, 0, 0, 1, 1, 1, 0, 1]' : 0.201903}
{'[4, 5, 1, 2, 3, 6, 0, 1, 6, 0, 12, 0, 0, 1, 1, 1, 0, 1]' : 0.201988}
{'[4, 5, 1, 2, 3, 6, 0, 1, 6, 0, 12, 0, 0, 1, 1, 1, 0, 1]' : 0.201982}
{'[4, 5, 1, 2, 3, 6, 0, 1, 6, 0, 12, 0, 0, 1, 1, 1, 0, 1]' : 0.201947}
{'[4, 5, 1, 2, 3, 6, 0, 1, 6, 0, 12, 0, 0, 1, 1, 1, 0, 1]' : 0.201928}
{'[4, 5, 1, 2, 3, 6, 0, 1, 6, 0, 12, 0, 0, 1, 1, 1, 0, 1]' : 0.201935}
{'[4, 5, 1, 2, 3, 6, 0, 1, 6, 0, 12, 0, 0, 1, 1, 1, 0, 1]' : 0.202229}
{'[4, 5, 1, 2, 3, 6, 0, 1, 6, 0, 12, 0, 0, 1, 1, 1, 0, 1]' : 0.202164}
{'[4, 5, 1, 2, 3, 6, 0, 1, 6, 0, 12, 0, 0, 1, 1, 1, 0, 1]' : 0.202495}
{'[4, 5, 1, 2, 3, 6, 0, 1, 6, 0, 12, 0, 0, 1, 1, 1, 0, 1]' : 0.202288}
{'[4, 5, 1, 2, 3, 6, 0, 1, 6, 0, 12, 0, 0, 1, 1, 1, 0, 1]' : 0.202349}
{'[4, 5, 1, 2, 3, 6, 0, 1, 6, 0, 12, 0, 0, 1, 1, 1, 0, 1]' : 0.202372}
{'[4, 5, 1, 2, 3, 6, 0, 1, 6, 0, 12, 0, 0, 1, 1, 1, 0, 1]' : 0.201913}
{'[4, 5, 1, 2, 3, 6, 0, 1, 6, 0, 12, 0, 0, 1, 1, 1, 0, 1]' : 0.201778}
{'[4, 5, 1, 2, 3, 6, 0, 1, 6, 0, 12, 0, 0, 1, 1, 1, 0, 1]' : 0.202005}
{'[4, 5, 1, 2, 3, 6, 0, 1, 6, 0, 12, 0, 0, 1, 1, 1, 0, 1]' : 0.202382}
{'[4, 5, 1, 2, 3, 6, 0, 1, 6, 0, 12, 0, 0, 1, 1, 1, 0, 1]' : 0.202244}
{'[4, 5, 1, 2, 3, 6, 0, 1, 6, 0, 12, 0, 0, 1, 1, 1, 0, 1]' : 0.201988}
{'[4, 5, 1, 2, 3, 6, 0, 1, 6, 0, 12, 0, 0, 1, 1, 1, 0, 1]' : 0.202078}
{'[4, 5, 1, 2, 3, 6, 0, 1, 6, 0, 12, 0, 0, 1, 1, 1, 0, 1]' : 0.201944}
{'[4, 5, 1, 2, 3, 6, 0, 1, 6, 0, 12, 0, 0, 1, 1, 1, 0, 1]' : 0.201979}
{'[4, 5, 1, 2, 3, 6, 0, 1, 6, 0, 12, 0, 0, 1, 1, 1, 0, 1]' : 0.20214}
{'[4, 5, 1, 2, 3, 6, 0, 1, 6, 0, 12, 0, 0, 1, 1, 1, 0, 1]' : 0.201941}
{'[4, 5, 1, 2, 3, 6, 0, 1, 6, 0, 12, 0, 0, 1, 1, 1, 0, 1]' : 0.202276}
{'[4, 5, 1, 2, 3, 6, 0, 1, 6, 0, 12, 0, 0, 1, 1, 1, 0, 1]' : 0.202226}
{'[4, 5, 1, 2, 3, 6, 0, 1, 6, 0, 12, 0, 0, 1, 1, 1, 0, 1]' : 0.202069}
{'[4, 5, 1, 2, 3, 6, 0, 1, 6, 0, 12, 0, 0, 1, 1, 1, 0, 1]' : 0.201864}
{'[4, 5, 1, 2, 3, 6, 0, 1, 6, 0, 12, 0, 0, 1, 1, 1, 0, 1]' : 0.201743}
{'[4, 5, 1, 2, 3, 6, 0, 1, 6, 0, 12, 0, 0, 1, 1, 1, 0, 1]' : 0.201795}

out:
 ["{'[4, 5, 1, 2, 3, 6, 0, 1, 6, 0, 12, 0, 0, 1, 1, 1, 0, 1]' : 0.202049}", "{'[4, 5, 1, 2, 3, 6, 0, 1, 6, 0, 12, 0, 0, 1, 1, 1, 0, 1]' : 0.201903}", "{'[4, 5, 1, 2, 3, 6, 0, 1, 6, 0, 12, 0, 0, 1, 1, 1, 0, 1]' : 0.201988}", "{'[4, 5, 1, 2, 3, 6, 0, 1, 6, 0, 12, 0, 0, 1, 1, 1, 0, 1]' : 0.201982}", "{'[4, 5, 1, 2, 3, 6, 0, 1, 6, 0, 12, 0, 0, 1, 1, 1, 0, 1]' : 0.201947}", "{'[4, 5, 1, 2, 3, 6, 0, 1, 6, 0, 12, 0, 0, 1, 1, 1, 0, 1]' : 0.201928}", "{'[4, 5, 1, 2, 3, 6, 0, 1, 6, 0, 12, 0, 0, 1, 1, 1, 0, 1]' : 0.201935}", "{'[4, 5, 1, 2, 3, 6, 0, 1, 6, 0, 12, 0, 0, 1, 1, 1, 0, 1]' : 0.202229}", "{'[4, 5, 1, 2, 3, 6, 0, 1, 6, 0, 12, 0, 0, 1, 1, 1, 0, 1]' : 0.202164}", "{'[4, 5, 1, 2, 3, 6, 0, 1, 6, 0, 12, 0, 0, 1, 1, 1, 0, 1]' : 0.202495}", "{'[4, 5, 1, 2, 3, 6, 0, 1, 6, 0, 12, 0, 0, 1, 1, 1, 0, 1]' : 0.202288}", "{'[4, 5, 1, 2, 3, 6, 0, 1, 6, 0, 12, 0, 0, 1, 1, 1, 0, 1]' : 0.202349}", "{'[4, 5, 1, 2, 3, 6, 0, 1, 6, 0, 12, 0, 0, 1, 1, 1, 0, 1]' : 0.202372}", "{'[4, 5, 1, 2, 3, 6, 0, 1, 6, 0, 12, 0, 0, 1, 1, 1, 0, 1]' : 0.201913}", "{'[4, 5, 1, 2, 3, 6, 0, 1, 6, 0, 12, 0, 0, 1, 1, 1, 0, 1]' : 0.201778}", "{'[4, 5, 1, 2, 3, 6, 0, 1, 6, 0, 12, 0, 0, 1, 1, 1, 0, 1]' : 0.202005}", "{'[4, 5, 1, 2, 3, 6, 0, 1, 6, 0, 12, 0, 0, 1, 1, 1, 0, 1]' : 0.202382}", "{'[4, 5, 1, 2, 3, 6, 0, 1, 6, 0, 12, 0, 0, 1, 1, 1, 0, 1]' : 0.202244}", "{'[4, 5, 1, 2, 3, 6, 0, 1, 6, 0, 12, 0, 0, 1, 1, 1, 0, 1]' : 0.201988}", "{'[4, 5, 1, 2, 3, 6, 0, 1, 6, 0, 12, 0, 0, 1, 1, 1, 0, 1]' : 0.202078}", "{'[4, 5, 1, 2, 3, 6, 0, 1, 6, 0, 12, 0, 0, 1, 1, 1, 0, 1]' : 0.201944}", "{'[4, 5, 1, 2, 3, 6, 0, 1, 6, 0, 12, 0, 0, 1, 1, 1, 0, 1]' : 0.201979}", "{'[4, 5, 1, 2, 3, 6, 0, 1, 6, 0, 12, 0, 0, 1, 1, 1, 0, 1]' : 0.20214}", "{'[4, 5, 1, 2, 3, 6, 0, 1, 6, 0, 12, 0, 0, 1, 1, 1, 0, 1]' : 0.201941}", "{'[4, 5, 1, 2, 3, 6, 0, 1, 6, 0, 12, 0, 0, 1, 1, 1, 0, 1]' : 0.202276}", "{'[4, 5, 1, 2, 3, 6, 0, 1, 6, 0, 12, 0, 0, 1, 1, 1, 0, 1]' : 0.202226}", "{'[4, 5, 1, 2, 3, 6, 0, 1, 6, 0, 12, 0, 0, 1, 1, 1, 0, 1]' : 0.202069}", "{'[4, 5, 1, 2, 3, 6, 0, 1, 6, 0, 12, 0, 0, 1, 1, 1, 0, 1]' : 0.201864}", "{'[4, 5, 1, 2, 3, 6, 0, 1, 6, 0, 12, 0, 0, 1, 1, 1, 0, 1]' : 0.201743}", "{'[4, 5, 1, 2, 3, 6, 0, 1, 6, 0, 12, 0, 0, 1, 1, 1, 0, 1]' : 0.201795}"]
returning from 'run': {'[4, 5, 1, 2, 3, 6, 0, 1, 6, 0, 12, 0, 0, 1, 1, 1, 0, 1]': ([0.202049, 0.201903, 0.201988, 0.201982, 0.201947, 0.201928, 0.201935, 0.202229, 0.202164, 0.202495, 0.202288, 0.202349, 0.202372, 0.201913, 0.201778, 0.202005, 0.202382, 0.202244, 0.201988, 0.202078, 0.201944, 0.201979, 0.20214, 0.201941, 0.202276, 0.202226, 0.202069, 0.201864, 0.201743, 0.201795], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 5, 1, 2, 3, 6, 0, 1, 6, 0, 12, 0, 0, 1, 1, 1, 0, 1]': ([0.202049, 0.201903, 0.201988, 0.201982, 0.201947, 0.201928, 0.201935, 0.202229, 0.202164, 0.202495, 0.202288, 0.202349, 0.202372, 0.201913, 0.201778, 0.202005, 0.202382, 0.202244, 0.201988, 0.202078, 0.201944, 0.201979, 0.20214, 0.201941, 0.202276, 0.202226, 0.202069, 0.201864, 0.201743, 0.201795], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = iii
Code stats:
        Number of loops: 	39
        Max loop nest depth: 	5
        Additions: 		2728
        Multiplications: 	748
        Divisions: 		0
        Logical: 		0
        Reads: 			4395
        Writes: 		526
        Comparisons:		39
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest28.exe __orio_perftest28.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest28.exe  
Program Test Output: 
{'[4, 0, 5, 2, 5, 6, 1, 0, 25, 20, 4, 0, 0, 1, 1, 0, 1, 0]' : 0.125725}
{'[4, 0, 5, 2, 5, 6, 1, 0, 25, 20, 4, 0, 0, 1, 1, 0, 1, 0]' : 0.125264}
{'[4, 0, 5, 2, 5, 6, 1, 0, 25, 20, 4, 0, 0, 1, 1, 0, 1, 0]' : 0.125501}
{'[4, 0, 5, 2, 5, 6, 1, 0, 25, 20, 4, 0, 0, 1, 1, 0, 1, 0]' : 0.125071}
{'[4, 0, 5, 2, 5, 6, 1, 0, 25, 20, 4, 0, 0, 1, 1, 0, 1, 0]' : 0.12517}
{'[4, 0, 5, 2, 5, 6, 1, 0, 25, 20, 4, 0, 0, 1, 1, 0, 1, 0]' : 0.125162}
{'[4, 0, 5, 2, 5, 6, 1, 0, 25, 20, 4, 0, 0, 1, 1, 0, 1, 0]' : 0.125169}
{'[4, 0, 5, 2, 5, 6, 1, 0, 25, 20, 4, 0, 0, 1, 1, 0, 1, 0]' : 0.125159}
{'[4, 0, 5, 2, 5, 6, 1, 0, 25, 20, 4, 0, 0, 1, 1, 0, 1, 0]' : 0.125113}
{'[4, 0, 5, 2, 5, 6, 1, 0, 25, 20, 4, 0, 0, 1, 1, 0, 1, 0]' : 0.125254}
{'[4, 0, 5, 2, 5, 6, 1, 0, 25, 20, 4, 0, 0, 1, 1, 0, 1, 0]' : 0.125144}
{'[4, 0, 5, 2, 5, 6, 1, 0, 25, 20, 4, 0, 0, 1, 1, 0, 1, 0]' : 0.125203}
{'[4, 0, 5, 2, 5, 6, 1, 0, 25, 20, 4, 0, 0, 1, 1, 0, 1, 0]' : 0.125119}
{'[4, 0, 5, 2, 5, 6, 1, 0, 25, 20, 4, 0, 0, 1, 1, 0, 1, 0]' : 0.125136}
{'[4, 0, 5, 2, 5, 6, 1, 0, 25, 20, 4, 0, 0, 1, 1, 0, 1, 0]' : 0.125341}
{'[4, 0, 5, 2, 5, 6, 1, 0, 25, 20, 4, 0, 0, 1, 1, 0, 1, 0]' : 0.125136}
{'[4, 0, 5, 2, 5, 6, 1, 0, 25, 20, 4, 0, 0, 1, 1, 0, 1, 0]' : 0.125092}
{'[4, 0, 5, 2, 5, 6, 1, 0, 25, 20, 4, 0, 0, 1, 1, 0, 1, 0]' : 0.12519}
{'[4, 0, 5, 2, 5, 6, 1, 0, 25, 20, 4, 0, 0, 1, 1, 0, 1, 0]' : 0.125199}
{'[4, 0, 5, 2, 5, 6, 1, 0, 25, 20, 4, 0, 0, 1, 1, 0, 1, 0]' : 0.125405}
{'[4, 0, 5, 2, 5, 6, 1, 0, 25, 20, 4, 0, 0, 1, 1, 0, 1, 0]' : 0.125055}
{'[4, 0, 5, 2, 5, 6, 1, 0, 25, 20, 4, 0, 0, 1, 1, 0, 1, 0]' : 0.12507}
{'[4, 0, 5, 2, 5, 6, 1, 0, 25, 20, 4, 0, 0, 1, 1, 0, 1, 0]' : 0.125054}
{'[4, 0, 5, 2, 5, 6, 1, 0, 25, 20, 4, 0, 0, 1, 1, 0, 1, 0]' : 0.125116}
{'[4, 0, 5, 2, 5, 6, 1, 0, 25, 20, 4, 0, 0, 1, 1, 0, 1, 0]' : 0.12504}
{'[4, 0, 5, 2, 5, 6, 1, 0, 25, 20, 4, 0, 0, 1, 1, 0, 1, 0]' : 0.125067}
{'[4, 0, 5, 2, 5, 6, 1, 0, 25, 20, 4, 0, 0, 1, 1, 0, 1, 0]' : 0.125293}
{'[4, 0, 5, 2, 5, 6, 1, 0, 25, 20, 4, 0, 0, 1, 1, 0, 1, 0]' : 0.125118}
{'[4, 0, 5, 2, 5, 6, 1, 0, 25, 20, 4, 0, 0, 1, 1, 0, 1, 0]' : 0.125177}
{'[4, 0, 5, 2, 5, 6, 1, 0, 25, 20, 4, 0, 0, 1, 1, 0, 1, 0]' : 0.125185}

out:
 ["{'[4, 0, 5, 2, 5, 6, 1, 0, 25, 20, 4, 0, 0, 1, 1, 0, 1, 0]' : 0.125725}", "{'[4, 0, 5, 2, 5, 6, 1, 0, 25, 20, 4, 0, 0, 1, 1, 0, 1, 0]' : 0.125264}", "{'[4, 0, 5, 2, 5, 6, 1, 0, 25, 20, 4, 0, 0, 1, 1, 0, 1, 0]' : 0.125501}", "{'[4, 0, 5, 2, 5, 6, 1, 0, 25, 20, 4, 0, 0, 1, 1, 0, 1, 0]' : 0.125071}", "{'[4, 0, 5, 2, 5, 6, 1, 0, 25, 20, 4, 0, 0, 1, 1, 0, 1, 0]' : 0.12517}", "{'[4, 0, 5, 2, 5, 6, 1, 0, 25, 20, 4, 0, 0, 1, 1, 0, 1, 0]' : 0.125162}", "{'[4, 0, 5, 2, 5, 6, 1, 0, 25, 20, 4, 0, 0, 1, 1, 0, 1, 0]' : 0.125169}", "{'[4, 0, 5, 2, 5, 6, 1, 0, 25, 20, 4, 0, 0, 1, 1, 0, 1, 0]' : 0.125159}", "{'[4, 0, 5, 2, 5, 6, 1, 0, 25, 20, 4, 0, 0, 1, 1, 0, 1, 0]' : 0.125113}", "{'[4, 0, 5, 2, 5, 6, 1, 0, 25, 20, 4, 0, 0, 1, 1, 0, 1, 0]' : 0.125254}", "{'[4, 0, 5, 2, 5, 6, 1, 0, 25, 20, 4, 0, 0, 1, 1, 0, 1, 0]' : 0.125144}", "{'[4, 0, 5, 2, 5, 6, 1, 0, 25, 20, 4, 0, 0, 1, 1, 0, 1, 0]' : 0.125203}", "{'[4, 0, 5, 2, 5, 6, 1, 0, 25, 20, 4, 0, 0, 1, 1, 0, 1, 0]' : 0.125119}", "{'[4, 0, 5, 2, 5, 6, 1, 0, 25, 20, 4, 0, 0, 1, 1, 0, 1, 0]' : 0.125136}", "{'[4, 0, 5, 2, 5, 6, 1, 0, 25, 20, 4, 0, 0, 1, 1, 0, 1, 0]' : 0.125341}", "{'[4, 0, 5, 2, 5, 6, 1, 0, 25, 20, 4, 0, 0, 1, 1, 0, 1, 0]' : 0.125136}", "{'[4, 0, 5, 2, 5, 6, 1, 0, 25, 20, 4, 0, 0, 1, 1, 0, 1, 0]' : 0.125092}", "{'[4, 0, 5, 2, 5, 6, 1, 0, 25, 20, 4, 0, 0, 1, 1, 0, 1, 0]' : 0.12519}", "{'[4, 0, 5, 2, 5, 6, 1, 0, 25, 20, 4, 0, 0, 1, 1, 0, 1, 0]' : 0.125199}", "{'[4, 0, 5, 2, 5, 6, 1, 0, 25, 20, 4, 0, 0, 1, 1, 0, 1, 0]' : 0.125405}", "{'[4, 0, 5, 2, 5, 6, 1, 0, 25, 20, 4, 0, 0, 1, 1, 0, 1, 0]' : 0.125055}", "{'[4, 0, 5, 2, 5, 6, 1, 0, 25, 20, 4, 0, 0, 1, 1, 0, 1, 0]' : 0.12507}", "{'[4, 0, 5, 2, 5, 6, 1, 0, 25, 20, 4, 0, 0, 1, 1, 0, 1, 0]' : 0.125054}", "{'[4, 0, 5, 2, 5, 6, 1, 0, 25, 20, 4, 0, 0, 1, 1, 0, 1, 0]' : 0.125116}", "{'[4, 0, 5, 2, 5, 6, 1, 0, 25, 20, 4, 0, 0, 1, 1, 0, 1, 0]' : 0.12504}", "{'[4, 0, 5, 2, 5, 6, 1, 0, 25, 20, 4, 0, 0, 1, 1, 0, 1, 0]' : 0.125067}", "{'[4, 0, 5, 2, 5, 6, 1, 0, 25, 20, 4, 0, 0, 1, 1, 0, 1, 0]' : 0.125293}", "{'[4, 0, 5, 2, 5, 6, 1, 0, 25, 20, 4, 0, 0, 1, 1, 0, 1, 0]' : 0.125118}", "{'[4, 0, 5, 2, 5, 6, 1, 0, 25, 20, 4, 0, 0, 1, 1, 0, 1, 0]' : 0.125177}", "{'[4, 0, 5, 2, 5, 6, 1, 0, 25, 20, 4, 0, 0, 1, 1, 0, 1, 0]' : 0.125185}"]
returning from 'run': {'[4, 0, 5, 2, 5, 6, 1, 0, 25, 20, 4, 0, 0, 1, 1, 0, 1, 0]': ([0.125725, 0.125264, 0.125501, 0.125071, 0.12517, 0.125162, 0.125169, 0.125159, 0.125113, 0.125254, 0.125144, 0.125203, 0.125119, 0.125136, 0.125341, 0.125136, 0.125092, 0.12519, 0.125199, 0.125405, 0.125055, 0.12507, 0.125054, 0.125116, 0.12504, 0.125067, 0.125293, 0.125118, 0.125177, 0.125185], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 0, 5, 2, 5, 6, 1, 0, 25, 20, 4, 0, 0, 1, 1, 0, 1, 0]': ([0.125725, 0.125264, 0.125501, 0.125071, 0.12517, 0.125162, 0.125169, 0.125159, 0.125113, 0.125254, 0.125144, 0.125203, 0.125119, 0.125136, 0.125341, 0.125136, 0.125092, 0.12519, 0.125199, 0.125405, 0.125055, 0.12507, 0.125054, 0.125116, 0.12504, 0.125067, 0.125293, 0.125118, 0.125177, 0.125185], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = kkk
Code stats:
        Number of loops: 	46
        Max loop nest depth: 	5
        Additions: 		2690
        Multiplications: 	936
        Divisions: 		0
        Logical: 		0
        Reads: 			5274
        Writes: 		995
        Comparisons:		46
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest29.exe __orio_perftest29.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest29.exe  
Program Test Output: 
{'[3, 3, 5, 3, 1, 3, 1, 1, 28, 3, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.091105}
{'[3, 3, 5, 3, 1, 3, 1, 1, 28, 3, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.090714}
{'[3, 3, 5, 3, 1, 3, 1, 1, 28, 3, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.090687}
{'[3, 3, 5, 3, 1, 3, 1, 1, 28, 3, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0907519}
{'[3, 3, 5, 3, 1, 3, 1, 1, 28, 3, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0906549}
{'[3, 3, 5, 3, 1, 3, 1, 1, 28, 3, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.090657}
{'[3, 3, 5, 3, 1, 3, 1, 1, 28, 3, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0906498}
{'[3, 3, 5, 3, 1, 3, 1, 1, 28, 3, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0906851}
{'[3, 3, 5, 3, 1, 3, 1, 1, 28, 3, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0905879}
{'[3, 3, 5, 3, 1, 3, 1, 1, 28, 3, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0906601}
{'[3, 3, 5, 3, 1, 3, 1, 1, 28, 3, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0906489}
{'[3, 3, 5, 3, 1, 3, 1, 1, 28, 3, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0906301}
{'[3, 3, 5, 3, 1, 3, 1, 1, 28, 3, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0907149}
{'[3, 3, 5, 3, 1, 3, 1, 1, 28, 3, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.121328}
{'[3, 3, 5, 3, 1, 3, 1, 1, 28, 3, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.111798}
{'[3, 3, 5, 3, 1, 3, 1, 1, 28, 3, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.093436}
{'[3, 3, 5, 3, 1, 3, 1, 1, 28, 3, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0905669}
{'[3, 3, 5, 3, 1, 3, 1, 1, 28, 3, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0906441}
{'[3, 3, 5, 3, 1, 3, 1, 1, 28, 3, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0906029}
{'[3, 3, 5, 3, 1, 3, 1, 1, 28, 3, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.090555}
{'[3, 3, 5, 3, 1, 3, 1, 1, 28, 3, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.090555}
{'[3, 3, 5, 3, 1, 3, 1, 1, 28, 3, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0905659}
{'[3, 3, 5, 3, 1, 3, 1, 1, 28, 3, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0905771}
{'[3, 3, 5, 3, 1, 3, 1, 1, 28, 3, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0905979}
{'[3, 3, 5, 3, 1, 3, 1, 1, 28, 3, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.090647}
{'[3, 3, 5, 3, 1, 3, 1, 1, 28, 3, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0905809}
{'[3, 3, 5, 3, 1, 3, 1, 1, 28, 3, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0906811}
{'[3, 3, 5, 3, 1, 3, 1, 1, 28, 3, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0906551}
{'[3, 3, 5, 3, 1, 3, 1, 1, 28, 3, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.090554}
{'[3, 3, 5, 3, 1, 3, 1, 1, 28, 3, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.090564}

out:
 ["{'[3, 3, 5, 3, 1, 3, 1, 1, 28, 3, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.091105}", "{'[3, 3, 5, 3, 1, 3, 1, 1, 28, 3, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.090714}", "{'[3, 3, 5, 3, 1, 3, 1, 1, 28, 3, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.090687}", "{'[3, 3, 5, 3, 1, 3, 1, 1, 28, 3, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0907519}", "{'[3, 3, 5, 3, 1, 3, 1, 1, 28, 3, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0906549}", "{'[3, 3, 5, 3, 1, 3, 1, 1, 28, 3, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.090657}", "{'[3, 3, 5, 3, 1, 3, 1, 1, 28, 3, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0906498}", "{'[3, 3, 5, 3, 1, 3, 1, 1, 28, 3, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0906851}", "{'[3, 3, 5, 3, 1, 3, 1, 1, 28, 3, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0905879}", "{'[3, 3, 5, 3, 1, 3, 1, 1, 28, 3, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0906601}", "{'[3, 3, 5, 3, 1, 3, 1, 1, 28, 3, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0906489}", "{'[3, 3, 5, 3, 1, 3, 1, 1, 28, 3, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0906301}", "{'[3, 3, 5, 3, 1, 3, 1, 1, 28, 3, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0907149}", "{'[3, 3, 5, 3, 1, 3, 1, 1, 28, 3, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.121328}", "{'[3, 3, 5, 3, 1, 3, 1, 1, 28, 3, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.111798}", "{'[3, 3, 5, 3, 1, 3, 1, 1, 28, 3, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.093436}", "{'[3, 3, 5, 3, 1, 3, 1, 1, 28, 3, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0905669}", "{'[3, 3, 5, 3, 1, 3, 1, 1, 28, 3, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0906441}", "{'[3, 3, 5, 3, 1, 3, 1, 1, 28, 3, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0906029}", "{'[3, 3, 5, 3, 1, 3, 1, 1, 28, 3, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.090555}", "{'[3, 3, 5, 3, 1, 3, 1, 1, 28, 3, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.090555}", "{'[3, 3, 5, 3, 1, 3, 1, 1, 28, 3, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0905659}", "{'[3, 3, 5, 3, 1, 3, 1, 1, 28, 3, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0905771}", "{'[3, 3, 5, 3, 1, 3, 1, 1, 28, 3, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0905979}", "{'[3, 3, 5, 3, 1, 3, 1, 1, 28, 3, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.090647}", "{'[3, 3, 5, 3, 1, 3, 1, 1, 28, 3, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0905809}", "{'[3, 3, 5, 3, 1, 3, 1, 1, 28, 3, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0906811}", "{'[3, 3, 5, 3, 1, 3, 1, 1, 28, 3, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0906551}", "{'[3, 3, 5, 3, 1, 3, 1, 1, 28, 3, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.090554}", "{'[3, 3, 5, 3, 1, 3, 1, 1, 28, 3, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.090564}"]
returning from 'run': {'[3, 3, 5, 3, 1, 3, 1, 1, 28, 3, 0, 26, 1, 1, 0, 1, 1, 0]': ([0.091105, 0.090714, 0.090687, 0.0907519, 0.0906549, 0.090657, 0.0906498, 0.0906851, 0.0905879, 0.0906601, 0.0906489, 0.0906301, 0.0907149, 0.121328, 0.111798, 0.093436, 0.0905669, 0.0906441, 0.0906029, 0.090555, 0.090555, 0.0905659, 0.0905771, 0.0905979, 0.090647, 0.0905809, 0.0906811, 0.0906551, 0.090554, 0.090564], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 3, 5, 3, 1, 3, 1, 1, 28, 3, 0, 26, 1, 1, 0, 1, 1, 0]': ([0.091105, 0.090714, 0.090687, 0.0907519, 0.0906549, 0.090657, 0.0906498, 0.0906851, 0.0905879, 0.0906601, 0.0906489, 0.0906301, 0.0907149, 0.121328, 0.111798, 0.093436, 0.0905669, 0.0906441, 0.0906029, 0.090555, 0.090555, 0.0905659, 0.0905771, 0.0905979, 0.090647, 0.0905809, 0.0906811, 0.0906551, 0.090554, 0.090564], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	104
        Max loop nest depth: 	5
        Additions: 		4205
        Multiplications: 	1008
        Divisions: 		0
        Logical: 		0
        Reads: 			6736
        Writes: 		845
        Comparisons:		104
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest30.exe __orio_perftest30.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest30.exe  
Program Test Output: 
{'[0, 2, 4, 2, 0, 5, 0, 1, 0, 18, 0, 7, 1, 1, 0, 0, 0, 1]' : 0.082495}
{'[0, 2, 4, 2, 0, 5, 0, 1, 0, 18, 0, 7, 1, 1, 0, 0, 0, 1]' : 0.0819519}
{'[0, 2, 4, 2, 0, 5, 0, 1, 0, 18, 0, 7, 1, 1, 0, 0, 0, 1]' : 0.081969}
{'[0, 2, 4, 2, 0, 5, 0, 1, 0, 18, 0, 7, 1, 1, 0, 0, 0, 1]' : 0.081826}
{'[0, 2, 4, 2, 0, 5, 0, 1, 0, 18, 0, 7, 1, 1, 0, 0, 0, 1]' : 0.081933}
{'[0, 2, 4, 2, 0, 5, 0, 1, 0, 18, 0, 7, 1, 1, 0, 0, 0, 1]' : 0.081939}
{'[0, 2, 4, 2, 0, 5, 0, 1, 0, 18, 0, 7, 1, 1, 0, 0, 0, 1]' : 0.0819671}
{'[0, 2, 4, 2, 0, 5, 0, 1, 0, 18, 0, 7, 1, 1, 0, 0, 0, 1]' : 0.0818601}
{'[0, 2, 4, 2, 0, 5, 0, 1, 0, 18, 0, 7, 1, 1, 0, 0, 0, 1]' : 0.0822809}
{'[0, 2, 4, 2, 0, 5, 0, 1, 0, 18, 0, 7, 1, 1, 0, 0, 0, 1]' : 0.0820401}
{'[0, 2, 4, 2, 0, 5, 0, 1, 0, 18, 0, 7, 1, 1, 0, 0, 0, 1]' : 0.0818739}
{'[0, 2, 4, 2, 0, 5, 0, 1, 0, 18, 0, 7, 1, 1, 0, 0, 0, 1]' : 0.0818241}
{'[0, 2, 4, 2, 0, 5, 0, 1, 0, 18, 0, 7, 1, 1, 0, 0, 0, 1]' : 0.0819681}
{'[0, 2, 4, 2, 0, 5, 0, 1, 0, 18, 0, 7, 1, 1, 0, 0, 0, 1]' : 0.0819058}
{'[0, 2, 4, 2, 0, 5, 0, 1, 0, 18, 0, 7, 1, 1, 0, 0, 0, 1]' : 0.081892}
{'[0, 2, 4, 2, 0, 5, 0, 1, 0, 18, 0, 7, 1, 1, 0, 0, 0, 1]' : 0.0818281}
{'[0, 2, 4, 2, 0, 5, 0, 1, 0, 18, 0, 7, 1, 1, 0, 0, 0, 1]' : 0.081917}
{'[0, 2, 4, 2, 0, 5, 0, 1, 0, 18, 0, 7, 1, 1, 0, 0, 0, 1]' : 0.0819161}
{'[0, 2, 4, 2, 0, 5, 0, 1, 0, 18, 0, 7, 1, 1, 0, 0, 0, 1]' : 0.0821121}
{'[0, 2, 4, 2, 0, 5, 0, 1, 0, 18, 0, 7, 1, 1, 0, 0, 0, 1]' : 0.0818162}
{'[0, 2, 4, 2, 0, 5, 0, 1, 0, 18, 0, 7, 1, 1, 0, 0, 0, 1]' : 0.0819921}
{'[0, 2, 4, 2, 0, 5, 0, 1, 0, 18, 0, 7, 1, 1, 0, 0, 0, 1]' : 0.0818949}
{'[0, 2, 4, 2, 0, 5, 0, 1, 0, 18, 0, 7, 1, 1, 0, 0, 0, 1]' : 0.081881}
{'[0, 2, 4, 2, 0, 5, 0, 1, 0, 18, 0, 7, 1, 1, 0, 0, 0, 1]' : 0.081835}
{'[0, 2, 4, 2, 0, 5, 0, 1, 0, 18, 0, 7, 1, 1, 0, 0, 0, 1]' : 0.0818901}
{'[0, 2, 4, 2, 0, 5, 0, 1, 0, 18, 0, 7, 1, 1, 0, 0, 0, 1]' : 0.0819309}
{'[0, 2, 4, 2, 0, 5, 0, 1, 0, 18, 0, 7, 1, 1, 0, 0, 0, 1]' : 0.0819311}
{'[0, 2, 4, 2, 0, 5, 0, 1, 0, 18, 0, 7, 1, 1, 0, 0, 0, 1]' : 0.0822139}
{'[0, 2, 4, 2, 0, 5, 0, 1, 0, 18, 0, 7, 1, 1, 0, 0, 0, 1]' : 0.0819561}
{'[0, 2, 4, 2, 0, 5, 0, 1, 0, 18, 0, 7, 1, 1, 0, 0, 0, 1]' : 0.0819519}

out:
 ["{'[0, 2, 4, 2, 0, 5, 0, 1, 0, 18, 0, 7, 1, 1, 0, 0, 0, 1]' : 0.082495}", "{'[0, 2, 4, 2, 0, 5, 0, 1, 0, 18, 0, 7, 1, 1, 0, 0, 0, 1]' : 0.0819519}", "{'[0, 2, 4, 2, 0, 5, 0, 1, 0, 18, 0, 7, 1, 1, 0, 0, 0, 1]' : 0.081969}", "{'[0, 2, 4, 2, 0, 5, 0, 1, 0, 18, 0, 7, 1, 1, 0, 0, 0, 1]' : 0.081826}", "{'[0, 2, 4, 2, 0, 5, 0, 1, 0, 18, 0, 7, 1, 1, 0, 0, 0, 1]' : 0.081933}", "{'[0, 2, 4, 2, 0, 5, 0, 1, 0, 18, 0, 7, 1, 1, 0, 0, 0, 1]' : 0.081939}", "{'[0, 2, 4, 2, 0, 5, 0, 1, 0, 18, 0, 7, 1, 1, 0, 0, 0, 1]' : 0.0819671}", "{'[0, 2, 4, 2, 0, 5, 0, 1, 0, 18, 0, 7, 1, 1, 0, 0, 0, 1]' : 0.0818601}", "{'[0, 2, 4, 2, 0, 5, 0, 1, 0, 18, 0, 7, 1, 1, 0, 0, 0, 1]' : 0.0822809}", "{'[0, 2, 4, 2, 0, 5, 0, 1, 0, 18, 0, 7, 1, 1, 0, 0, 0, 1]' : 0.0820401}", "{'[0, 2, 4, 2, 0, 5, 0, 1, 0, 18, 0, 7, 1, 1, 0, 0, 0, 1]' : 0.0818739}", "{'[0, 2, 4, 2, 0, 5, 0, 1, 0, 18, 0, 7, 1, 1, 0, 0, 0, 1]' : 0.0818241}", "{'[0, 2, 4, 2, 0, 5, 0, 1, 0, 18, 0, 7, 1, 1, 0, 0, 0, 1]' : 0.0819681}", "{'[0, 2, 4, 2, 0, 5, 0, 1, 0, 18, 0, 7, 1, 1, 0, 0, 0, 1]' : 0.0819058}", "{'[0, 2, 4, 2, 0, 5, 0, 1, 0, 18, 0, 7, 1, 1, 0, 0, 0, 1]' : 0.081892}", "{'[0, 2, 4, 2, 0, 5, 0, 1, 0, 18, 0, 7, 1, 1, 0, 0, 0, 1]' : 0.0818281}", "{'[0, 2, 4, 2, 0, 5, 0, 1, 0, 18, 0, 7, 1, 1, 0, 0, 0, 1]' : 0.081917}", "{'[0, 2, 4, 2, 0, 5, 0, 1, 0, 18, 0, 7, 1, 1, 0, 0, 0, 1]' : 0.0819161}", "{'[0, 2, 4, 2, 0, 5, 0, 1, 0, 18, 0, 7, 1, 1, 0, 0, 0, 1]' : 0.0821121}", "{'[0, 2, 4, 2, 0, 5, 0, 1, 0, 18, 0, 7, 1, 1, 0, 0, 0, 1]' : 0.0818162}", "{'[0, 2, 4, 2, 0, 5, 0, 1, 0, 18, 0, 7, 1, 1, 0, 0, 0, 1]' : 0.0819921}", "{'[0, 2, 4, 2, 0, 5, 0, 1, 0, 18, 0, 7, 1, 1, 0, 0, 0, 1]' : 0.0818949}", "{'[0, 2, 4, 2, 0, 5, 0, 1, 0, 18, 0, 7, 1, 1, 0, 0, 0, 1]' : 0.081881}", "{'[0, 2, 4, 2, 0, 5, 0, 1, 0, 18, 0, 7, 1, 1, 0, 0, 0, 1]' : 0.081835}", "{'[0, 2, 4, 2, 0, 5, 0, 1, 0, 18, 0, 7, 1, 1, 0, 0, 0, 1]' : 0.0818901}", "{'[0, 2, 4, 2, 0, 5, 0, 1, 0, 18, 0, 7, 1, 1, 0, 0, 0, 1]' : 0.0819309}", "{'[0, 2, 4, 2, 0, 5, 0, 1, 0, 18, 0, 7, 1, 1, 0, 0, 0, 1]' : 0.0819311}", "{'[0, 2, 4, 2, 0, 5, 0, 1, 0, 18, 0, 7, 1, 1, 0, 0, 0, 1]' : 0.0822139}", "{'[0, 2, 4, 2, 0, 5, 0, 1, 0, 18, 0, 7, 1, 1, 0, 0, 0, 1]' : 0.0819561}", "{'[0, 2, 4, 2, 0, 5, 0, 1, 0, 18, 0, 7, 1, 1, 0, 0, 0, 1]' : 0.0819519}"]
returning from 'run': {'[0, 2, 4, 2, 0, 5, 0, 1, 0, 18, 0, 7, 1, 1, 0, 0, 0, 1]': ([0.082495, 0.0819519, 0.081969, 0.081826, 0.081933, 0.081939, 0.0819671, 0.0818601, 0.0822809, 0.0820401, 0.0818739, 0.0818241, 0.0819681, 0.0819058, 0.081892, 0.0818281, 0.081917, 0.0819161, 0.0821121, 0.0818162, 0.0819921, 0.0818949, 0.081881, 0.081835, 0.0818901, 0.0819309, 0.0819311, 0.0822139, 0.0819561, 0.0819519], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 4, 2, 0, 5, 0, 1, 0, 18, 0, 7, 1, 1, 0, 0, 0, 1]': ([0.082495, 0.0819519, 0.081969, 0.081826, 0.081933, 0.081939, 0.0819671, 0.0818601, 0.0822809, 0.0820401, 0.0818739, 0.0818241, 0.0819681, 0.0819058, 0.081892, 0.0818281, 0.081917, 0.0819161, 0.0821121, 0.0818162, 0.0819921, 0.0818949, 0.081881, 0.081835, 0.0818901, 0.0819309, 0.0819311, 0.0822139, 0.0819561, 0.0819519], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = kkk
Code stats:
        Number of loops: 	128
        Max loop nest depth: 	5
        Additions: 		2093
        Multiplications: 	406
        Divisions: 		0
        Logical: 		0
        Reads: 			4338
        Writes: 		965
        Comparisons:		128
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest31.exe __orio_perftest31.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest31.exe  
Program Test Output: 
{'[1, 1, 4, 2, 0, 2, 0, 1, 10, 27, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.178221}
{'[1, 1, 4, 2, 0, 2, 0, 1, 10, 27, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.178199}
{'[1, 1, 4, 2, 0, 2, 0, 1, 10, 27, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.178049}
{'[1, 1, 4, 2, 0, 2, 0, 1, 10, 27, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.178221}
{'[1, 1, 4, 2, 0, 2, 0, 1, 10, 27, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.178114}
{'[1, 1, 4, 2, 0, 2, 0, 1, 10, 27, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.178207}
{'[1, 1, 4, 2, 0, 2, 0, 1, 10, 27, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.178085}
{'[1, 1, 4, 2, 0, 2, 0, 1, 10, 27, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.178123}
{'[1, 1, 4, 2, 0, 2, 0, 1, 10, 27, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.178056}
{'[1, 1, 4, 2, 0, 2, 0, 1, 10, 27, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.178188}
{'[1, 1, 4, 2, 0, 2, 0, 1, 10, 27, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.178102}
{'[1, 1, 4, 2, 0, 2, 0, 1, 10, 27, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.178112}
{'[1, 1, 4, 2, 0, 2, 0, 1, 10, 27, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.178163}
{'[1, 1, 4, 2, 0, 2, 0, 1, 10, 27, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.178156}
{'[1, 1, 4, 2, 0, 2, 0, 1, 10, 27, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.178217}
{'[1, 1, 4, 2, 0, 2, 0, 1, 10, 27, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.178123}
{'[1, 1, 4, 2, 0, 2, 0, 1, 10, 27, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.178154}
{'[1, 1, 4, 2, 0, 2, 0, 1, 10, 27, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.178071}
{'[1, 1, 4, 2, 0, 2, 0, 1, 10, 27, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.178202}
{'[1, 1, 4, 2, 0, 2, 0, 1, 10, 27, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.178106}
{'[1, 1, 4, 2, 0, 2, 0, 1, 10, 27, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.178468}
{'[1, 1, 4, 2, 0, 2, 0, 1, 10, 27, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.17815}
{'[1, 1, 4, 2, 0, 2, 0, 1, 10, 27, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.178133}
{'[1, 1, 4, 2, 0, 2, 0, 1, 10, 27, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.178155}
{'[1, 1, 4, 2, 0, 2, 0, 1, 10, 27, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.178214}
{'[1, 1, 4, 2, 0, 2, 0, 1, 10, 27, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.17816}
{'[1, 1, 4, 2, 0, 2, 0, 1, 10, 27, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.178093}
{'[1, 1, 4, 2, 0, 2, 0, 1, 10, 27, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.178138}
{'[1, 1, 4, 2, 0, 2, 0, 1, 10, 27, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.17812}
{'[1, 1, 4, 2, 0, 2, 0, 1, 10, 27, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.178186}

out:
 ["{'[1, 1, 4, 2, 0, 2, 0, 1, 10, 27, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.178221}", "{'[1, 1, 4, 2, 0, 2, 0, 1, 10, 27, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.178199}", "{'[1, 1, 4, 2, 0, 2, 0, 1, 10, 27, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.178049}", "{'[1, 1, 4, 2, 0, 2, 0, 1, 10, 27, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.178221}", "{'[1, 1, 4, 2, 0, 2, 0, 1, 10, 27, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.178114}", "{'[1, 1, 4, 2, 0, 2, 0, 1, 10, 27, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.178207}", "{'[1, 1, 4, 2, 0, 2, 0, 1, 10, 27, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.178085}", "{'[1, 1, 4, 2, 0, 2, 0, 1, 10, 27, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.178123}", "{'[1, 1, 4, 2, 0, 2, 0, 1, 10, 27, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.178056}", "{'[1, 1, 4, 2, 0, 2, 0, 1, 10, 27, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.178188}", "{'[1, 1, 4, 2, 0, 2, 0, 1, 10, 27, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.178102}", "{'[1, 1, 4, 2, 0, 2, 0, 1, 10, 27, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.178112}", "{'[1, 1, 4, 2, 0, 2, 0, 1, 10, 27, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.178163}", "{'[1, 1, 4, 2, 0, 2, 0, 1, 10, 27, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.178156}", "{'[1, 1, 4, 2, 0, 2, 0, 1, 10, 27, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.178217}", "{'[1, 1, 4, 2, 0, 2, 0, 1, 10, 27, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.178123}", "{'[1, 1, 4, 2, 0, 2, 0, 1, 10, 27, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.178154}", "{'[1, 1, 4, 2, 0, 2, 0, 1, 10, 27, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.178071}", "{'[1, 1, 4, 2, 0, 2, 0, 1, 10, 27, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.178202}", "{'[1, 1, 4, 2, 0, 2, 0, 1, 10, 27, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.178106}", "{'[1, 1, 4, 2, 0, 2, 0, 1, 10, 27, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.178468}", "{'[1, 1, 4, 2, 0, 2, 0, 1, 10, 27, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.17815}", "{'[1, 1, 4, 2, 0, 2, 0, 1, 10, 27, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.178133}", "{'[1, 1, 4, 2, 0, 2, 0, 1, 10, 27, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.178155}", "{'[1, 1, 4, 2, 0, 2, 0, 1, 10, 27, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.178214}", "{'[1, 1, 4, 2, 0, 2, 0, 1, 10, 27, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.17816}", "{'[1, 1, 4, 2, 0, 2, 0, 1, 10, 27, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.178093}", "{'[1, 1, 4, 2, 0, 2, 0, 1, 10, 27, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.178138}", "{'[1, 1, 4, 2, 0, 2, 0, 1, 10, 27, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.17812}", "{'[1, 1, 4, 2, 0, 2, 0, 1, 10, 27, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.178186}"]
returning from 'run': {'[1, 1, 4, 2, 0, 2, 0, 1, 10, 27, 0, 4, 0, 0, 0, 1, 0, 0]': ([0.178221, 0.178199, 0.178049, 0.178221, 0.178114, 0.178207, 0.178085, 0.178123, 0.178056, 0.178188, 0.178102, 0.178112, 0.178163, 0.178156, 0.178217, 0.178123, 0.178154, 0.178071, 0.178202, 0.178106, 0.178468, 0.17815, 0.178133, 0.178155, 0.178214, 0.17816, 0.178093, 0.178138, 0.17812, 0.178186], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 1, 4, 2, 0, 2, 0, 1, 10, 27, 0, 4, 0, 0, 0, 1, 0, 0]': ([0.178221, 0.178199, 0.178049, 0.178221, 0.178114, 0.178207, 0.178085, 0.178123, 0.178056, 0.178188, 0.178102, 0.178112, 0.178163, 0.178156, 0.178217, 0.178123, 0.178154, 0.178071, 0.178202, 0.178106, 0.178468, 0.17815, 0.178133, 0.178155, 0.178214, 0.17816, 0.178093, 0.178138, 0.17812, 0.178186], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	52
        Max loop nest depth: 	6
        Additions: 		4537
        Multiplications: 	1292
        Divisions: 		0
        Logical: 		0
        Reads: 			7052
        Writes: 		834
        Comparisons:		52
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest32.exe __orio_perftest32.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest32.exe  
Program Test Output: 
{'[1, 2, 5, 1, 3, 4, 0, 0, 7, 15, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.120585}
{'[1, 2, 5, 1, 3, 4, 0, 0, 7, 15, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.120119}
{'[1, 2, 5, 1, 3, 4, 0, 0, 7, 15, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.120127}
{'[1, 2, 5, 1, 3, 4, 0, 0, 7, 15, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.120193}
{'[1, 2, 5, 1, 3, 4, 0, 0, 7, 15, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.120067}
{'[1, 2, 5, 1, 3, 4, 0, 0, 7, 15, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.120061}
{'[1, 2, 5, 1, 3, 4, 0, 0, 7, 15, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.12009}
{'[1, 2, 5, 1, 3, 4, 0, 0, 7, 15, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.120305}
{'[1, 2, 5, 1, 3, 4, 0, 0, 7, 15, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.120187}
{'[1, 2, 5, 1, 3, 4, 0, 0, 7, 15, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.120045}
{'[1, 2, 5, 1, 3, 4, 0, 0, 7, 15, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.120104}
{'[1, 2, 5, 1, 3, 4, 0, 0, 7, 15, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.120056}
{'[1, 2, 5, 1, 3, 4, 0, 0, 7, 15, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.120108}
{'[1, 2, 5, 1, 3, 4, 0, 0, 7, 15, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.120067}
{'[1, 2, 5, 1, 3, 4, 0, 0, 7, 15, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.120019}
{'[1, 2, 5, 1, 3, 4, 0, 0, 7, 15, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.12014}
{'[1, 2, 5, 1, 3, 4, 0, 0, 7, 15, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.120045}
{'[1, 2, 5, 1, 3, 4, 0, 0, 7, 15, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.120126}
{'[1, 2, 5, 1, 3, 4, 0, 0, 7, 15, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.120113}
{'[1, 2, 5, 1, 3, 4, 0, 0, 7, 15, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.120145}
{'[1, 2, 5, 1, 3, 4, 0, 0, 7, 15, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.12037}
{'[1, 2, 5, 1, 3, 4, 0, 0, 7, 15, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.120117}
{'[1, 2, 5, 1, 3, 4, 0, 0, 7, 15, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.120019}
{'[1, 2, 5, 1, 3, 4, 0, 0, 7, 15, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.120088}
{'[1, 2, 5, 1, 3, 4, 0, 0, 7, 15, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.120095}
{'[1, 2, 5, 1, 3, 4, 0, 0, 7, 15, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.120137}
{'[1, 2, 5, 1, 3, 4, 0, 0, 7, 15, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.120068}
{'[1, 2, 5, 1, 3, 4, 0, 0, 7, 15, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.120162}
{'[1, 2, 5, 1, 3, 4, 0, 0, 7, 15, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.120104}
{'[1, 2, 5, 1, 3, 4, 0, 0, 7, 15, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.120038}

out:
 ["{'[1, 2, 5, 1, 3, 4, 0, 0, 7, 15, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.120585}", "{'[1, 2, 5, 1, 3, 4, 0, 0, 7, 15, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.120119}", "{'[1, 2, 5, 1, 3, 4, 0, 0, 7, 15, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.120127}", "{'[1, 2, 5, 1, 3, 4, 0, 0, 7, 15, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.120193}", "{'[1, 2, 5, 1, 3, 4, 0, 0, 7, 15, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.120067}", "{'[1, 2, 5, 1, 3, 4, 0, 0, 7, 15, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.120061}", "{'[1, 2, 5, 1, 3, 4, 0, 0, 7, 15, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.12009}", "{'[1, 2, 5, 1, 3, 4, 0, 0, 7, 15, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.120305}", "{'[1, 2, 5, 1, 3, 4, 0, 0, 7, 15, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.120187}", "{'[1, 2, 5, 1, 3, 4, 0, 0, 7, 15, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.120045}", "{'[1, 2, 5, 1, 3, 4, 0, 0, 7, 15, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.120104}", "{'[1, 2, 5, 1, 3, 4, 0, 0, 7, 15, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.120056}", "{'[1, 2, 5, 1, 3, 4, 0, 0, 7, 15, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.120108}", "{'[1, 2, 5, 1, 3, 4, 0, 0, 7, 15, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.120067}", "{'[1, 2, 5, 1, 3, 4, 0, 0, 7, 15, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.120019}", "{'[1, 2, 5, 1, 3, 4, 0, 0, 7, 15, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.12014}", "{'[1, 2, 5, 1, 3, 4, 0, 0, 7, 15, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.120045}", "{'[1, 2, 5, 1, 3, 4, 0, 0, 7, 15, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.120126}", "{'[1, 2, 5, 1, 3, 4, 0, 0, 7, 15, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.120113}", "{'[1, 2, 5, 1, 3, 4, 0, 0, 7, 15, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.120145}", "{'[1, 2, 5, 1, 3, 4, 0, 0, 7, 15, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.12037}", "{'[1, 2, 5, 1, 3, 4, 0, 0, 7, 15, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.120117}", "{'[1, 2, 5, 1, 3, 4, 0, 0, 7, 15, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.120019}", "{'[1, 2, 5, 1, 3, 4, 0, 0, 7, 15, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.120088}", "{'[1, 2, 5, 1, 3, 4, 0, 0, 7, 15, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.120095}", "{'[1, 2, 5, 1, 3, 4, 0, 0, 7, 15, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.120137}", "{'[1, 2, 5, 1, 3, 4, 0, 0, 7, 15, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.120068}", "{'[1, 2, 5, 1, 3, 4, 0, 0, 7, 15, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.120162}", "{'[1, 2, 5, 1, 3, 4, 0, 0, 7, 15, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.120104}", "{'[1, 2, 5, 1, 3, 4, 0, 0, 7, 15, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.120038}"]
returning from 'run': {'[1, 2, 5, 1, 3, 4, 0, 0, 7, 15, 0, 3, 0, 0, 2, 0, 1, 1]': ([0.120585, 0.120119, 0.120127, 0.120193, 0.120067, 0.120061, 0.12009, 0.120305, 0.120187, 0.120045, 0.120104, 0.120056, 0.120108, 0.120067, 0.120019, 0.12014, 0.120045, 0.120126, 0.120113, 0.120145, 0.12037, 0.120117, 0.120019, 0.120088, 0.120095, 0.120137, 0.120068, 0.120162, 0.120104, 0.120038], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 2, 5, 1, 3, 4, 0, 0, 7, 15, 0, 3, 0, 0, 2, 0, 1, 1]': ([0.120585, 0.120119, 0.120127, 0.120193, 0.120067, 0.120061, 0.12009, 0.120305, 0.120187, 0.120045, 0.120104, 0.120056, 0.120108, 0.120067, 0.120019, 0.12014, 0.120045, 0.120126, 0.120113, 0.120145, 0.12037, 0.120117, 0.120019, 0.120088, 0.120095, 0.120137, 0.120068, 0.120162, 0.120104, 0.120038], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	106
        Max loop nest depth: 	5
        Additions: 		2534
        Multiplications: 	768
        Divisions: 		0
        Logical: 		0
        Reads: 			5090
        Writes: 		1010
        Comparisons:		106
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest33.exe __orio_perftest33.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest33.exe  
Program Test Output: 
{'[6, 4, 2, 0, 4, 6, 1, 1, 8, 14, 0, 6, 1, 1, 0, 1, 0, 0]' : 0.0967591}
{'[6, 4, 2, 0, 4, 6, 1, 1, 8, 14, 0, 6, 1, 1, 0, 1, 0, 0]' : 0.096175}
{'[6, 4, 2, 0, 4, 6, 1, 1, 8, 14, 0, 6, 1, 1, 0, 1, 0, 0]' : 0.0960531}
{'[6, 4, 2, 0, 4, 6, 1, 1, 8, 14, 0, 6, 1, 1, 0, 1, 0, 0]' : 0.0960538}
{'[6, 4, 2, 0, 4, 6, 1, 1, 8, 14, 0, 6, 1, 1, 0, 1, 0, 0]' : 0.0960829}
{'[6, 4, 2, 0, 4, 6, 1, 1, 8, 14, 0, 6, 1, 1, 0, 1, 0, 0]' : 0.096117}
{'[6, 4, 2, 0, 4, 6, 1, 1, 8, 14, 0, 6, 1, 1, 0, 1, 0, 0]' : 0.0960639}
{'[6, 4, 2, 0, 4, 6, 1, 1, 8, 14, 0, 6, 1, 1, 0, 1, 0, 0]' : 0.09603}
{'[6, 4, 2, 0, 4, 6, 1, 1, 8, 14, 0, 6, 1, 1, 0, 1, 0, 0]' : 0.0962539}
{'[6, 4, 2, 0, 4, 6, 1, 1, 8, 14, 0, 6, 1, 1, 0, 1, 0, 0]' : 0.096247}
{'[6, 4, 2, 0, 4, 6, 1, 1, 8, 14, 0, 6, 1, 1, 0, 1, 0, 0]' : 0.096097}
{'[6, 4, 2, 0, 4, 6, 1, 1, 8, 14, 0, 6, 1, 1, 0, 1, 0, 0]' : 0.0960462}
{'[6, 4, 2, 0, 4, 6, 1, 1, 8, 14, 0, 6, 1, 1, 0, 1, 0, 0]' : 0.0960779}
{'[6, 4, 2, 0, 4, 6, 1, 1, 8, 14, 0, 6, 1, 1, 0, 1, 0, 0]' : 0.096164}
{'[6, 4, 2, 0, 4, 6, 1, 1, 8, 14, 0, 6, 1, 1, 0, 1, 0, 0]' : 0.096036}
{'[6, 4, 2, 0, 4, 6, 1, 1, 8, 14, 0, 6, 1, 1, 0, 1, 0, 0]' : 0.09602}
{'[6, 4, 2, 0, 4, 6, 1, 1, 8, 14, 0, 6, 1, 1, 0, 1, 0, 0]' : 0.0963781}
{'[6, 4, 2, 0, 4, 6, 1, 1, 8, 14, 0, 6, 1, 1, 0, 1, 0, 0]' : 0.0960989}
{'[6, 4, 2, 0, 4, 6, 1, 1, 8, 14, 0, 6, 1, 1, 0, 1, 0, 0]' : 0.096092}
{'[6, 4, 2, 0, 4, 6, 1, 1, 8, 14, 0, 6, 1, 1, 0, 1, 0, 0]' : 0.096081}
{'[6, 4, 2, 0, 4, 6, 1, 1, 8, 14, 0, 6, 1, 1, 0, 1, 0, 0]' : 0.0960639}
{'[6, 4, 2, 0, 4, 6, 1, 1, 8, 14, 0, 6, 1, 1, 0, 1, 0, 0]' : 0.096077}
{'[6, 4, 2, 0, 4, 6, 1, 1, 8, 14, 0, 6, 1, 1, 0, 1, 0, 0]' : 0.096045}
{'[6, 4, 2, 0, 4, 6, 1, 1, 8, 14, 0, 6, 1, 1, 0, 1, 0, 0]' : 0.0960371}
{'[6, 4, 2, 0, 4, 6, 1, 1, 8, 14, 0, 6, 1, 1, 0, 1, 0, 0]' : 0.096019}
{'[6, 4, 2, 0, 4, 6, 1, 1, 8, 14, 0, 6, 1, 1, 0, 1, 0, 0]' : 0.0960948}
{'[6, 4, 2, 0, 4, 6, 1, 1, 8, 14, 0, 6, 1, 1, 0, 1, 0, 0]' : 0.0960312}
{'[6, 4, 2, 0, 4, 6, 1, 1, 8, 14, 0, 6, 1, 1, 0, 1, 0, 0]' : 0.0960519}
{'[6, 4, 2, 0, 4, 6, 1, 1, 8, 14, 0, 6, 1, 1, 0, 1, 0, 0]' : 0.095988}
{'[6, 4, 2, 0, 4, 6, 1, 1, 8, 14, 0, 6, 1, 1, 0, 1, 0, 0]' : 0.096365}

out:
 ["{'[6, 4, 2, 0, 4, 6, 1, 1, 8, 14, 0, 6, 1, 1, 0, 1, 0, 0]' : 0.0967591}", "{'[6, 4, 2, 0, 4, 6, 1, 1, 8, 14, 0, 6, 1, 1, 0, 1, 0, 0]' : 0.096175}", "{'[6, 4, 2, 0, 4, 6, 1, 1, 8, 14, 0, 6, 1, 1, 0, 1, 0, 0]' : 0.0960531}", "{'[6, 4, 2, 0, 4, 6, 1, 1, 8, 14, 0, 6, 1, 1, 0, 1, 0, 0]' : 0.0960538}", "{'[6, 4, 2, 0, 4, 6, 1, 1, 8, 14, 0, 6, 1, 1, 0, 1, 0, 0]' : 0.0960829}", "{'[6, 4, 2, 0, 4, 6, 1, 1, 8, 14, 0, 6, 1, 1, 0, 1, 0, 0]' : 0.096117}", "{'[6, 4, 2, 0, 4, 6, 1, 1, 8, 14, 0, 6, 1, 1, 0, 1, 0, 0]' : 0.0960639}", "{'[6, 4, 2, 0, 4, 6, 1, 1, 8, 14, 0, 6, 1, 1, 0, 1, 0, 0]' : 0.09603}", "{'[6, 4, 2, 0, 4, 6, 1, 1, 8, 14, 0, 6, 1, 1, 0, 1, 0, 0]' : 0.0962539}", "{'[6, 4, 2, 0, 4, 6, 1, 1, 8, 14, 0, 6, 1, 1, 0, 1, 0, 0]' : 0.096247}", "{'[6, 4, 2, 0, 4, 6, 1, 1, 8, 14, 0, 6, 1, 1, 0, 1, 0, 0]' : 0.096097}", "{'[6, 4, 2, 0, 4, 6, 1, 1, 8, 14, 0, 6, 1, 1, 0, 1, 0, 0]' : 0.0960462}", "{'[6, 4, 2, 0, 4, 6, 1, 1, 8, 14, 0, 6, 1, 1, 0, 1, 0, 0]' : 0.0960779}", "{'[6, 4, 2, 0, 4, 6, 1, 1, 8, 14, 0, 6, 1, 1, 0, 1, 0, 0]' : 0.096164}", "{'[6, 4, 2, 0, 4, 6, 1, 1, 8, 14, 0, 6, 1, 1, 0, 1, 0, 0]' : 0.096036}", "{'[6, 4, 2, 0, 4, 6, 1, 1, 8, 14, 0, 6, 1, 1, 0, 1, 0, 0]' : 0.09602}", "{'[6, 4, 2, 0, 4, 6, 1, 1, 8, 14, 0, 6, 1, 1, 0, 1, 0, 0]' : 0.0963781}", "{'[6, 4, 2, 0, 4, 6, 1, 1, 8, 14, 0, 6, 1, 1, 0, 1, 0, 0]' : 0.0960989}", "{'[6, 4, 2, 0, 4, 6, 1, 1, 8, 14, 0, 6, 1, 1, 0, 1, 0, 0]' : 0.096092}", "{'[6, 4, 2, 0, 4, 6, 1, 1, 8, 14, 0, 6, 1, 1, 0, 1, 0, 0]' : 0.096081}", "{'[6, 4, 2, 0, 4, 6, 1, 1, 8, 14, 0, 6, 1, 1, 0, 1, 0, 0]' : 0.0960639}", "{'[6, 4, 2, 0, 4, 6, 1, 1, 8, 14, 0, 6, 1, 1, 0, 1, 0, 0]' : 0.096077}", "{'[6, 4, 2, 0, 4, 6, 1, 1, 8, 14, 0, 6, 1, 1, 0, 1, 0, 0]' : 0.096045}", "{'[6, 4, 2, 0, 4, 6, 1, 1, 8, 14, 0, 6, 1, 1, 0, 1, 0, 0]' : 0.0960371}", "{'[6, 4, 2, 0, 4, 6, 1, 1, 8, 14, 0, 6, 1, 1, 0, 1, 0, 0]' : 0.096019}", "{'[6, 4, 2, 0, 4, 6, 1, 1, 8, 14, 0, 6, 1, 1, 0, 1, 0, 0]' : 0.0960948}", "{'[6, 4, 2, 0, 4, 6, 1, 1, 8, 14, 0, 6, 1, 1, 0, 1, 0, 0]' : 0.0960312}", "{'[6, 4, 2, 0, 4, 6, 1, 1, 8, 14, 0, 6, 1, 1, 0, 1, 0, 0]' : 0.0960519}", "{'[6, 4, 2, 0, 4, 6, 1, 1, 8, 14, 0, 6, 1, 1, 0, 1, 0, 0]' : 0.095988}", "{'[6, 4, 2, 0, 4, 6, 1, 1, 8, 14, 0, 6, 1, 1, 0, 1, 0, 0]' : 0.096365}"]
returning from 'run': {'[6, 4, 2, 0, 4, 6, 1, 1, 8, 14, 0, 6, 1, 1, 0, 1, 0, 0]': ([0.0967591, 0.096175, 0.0960531, 0.0960538, 0.0960829, 0.096117, 0.0960639, 0.09603, 0.0962539, 0.096247, 0.096097, 0.0960462, 0.0960779, 0.096164, 0.096036, 0.09602, 0.0963781, 0.0960989, 0.096092, 0.096081, 0.0960639, 0.096077, 0.096045, 0.0960371, 0.096019, 0.0960948, 0.0960312, 0.0960519, 0.095988, 0.096365], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 4, 2, 0, 4, 6, 1, 1, 8, 14, 0, 6, 1, 1, 0, 1, 0, 0]': ([0.0967591, 0.096175, 0.0960531, 0.0960538, 0.0960829, 0.096117, 0.0960639, 0.09603, 0.0962539, 0.096247, 0.096097, 0.0960462, 0.0960779, 0.096164, 0.096036, 0.09602, 0.0963781, 0.0960989, 0.096092, 0.096081, 0.0960639, 0.096077, 0.096045, 0.0960371, 0.096019, 0.0960948, 0.0960312, 0.0960519, 0.095988, 0.096365], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = kkk
Code stats:
        Number of loops: 	17
        Max loop nest depth: 	5
        Additions: 		6541
        Multiplications: 	3240
        Divisions: 		0
        Logical: 		0
        Reads: 			12106
        Writes: 		1877
        Comparisons:		17
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest34.exe __orio_perftest34.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest34.exe  
Program Test Output: 
{'[1, 6, 4, 6, 4, 2, 0, 0, 0, 25, 0, 25, 0, 2, 0, 1, 0, 0]' : 0.126909}
{'[1, 6, 4, 6, 4, 2, 0, 0, 0, 25, 0, 25, 0, 2, 0, 1, 0, 0]' : 0.126758}
{'[1, 6, 4, 6, 4, 2, 0, 0, 0, 25, 0, 25, 0, 2, 0, 1, 0, 0]' : 0.126752}
{'[1, 6, 4, 6, 4, 2, 0, 0, 0, 25, 0, 25, 0, 2, 0, 1, 0, 0]' : 0.126756}
{'[1, 6, 4, 6, 4, 2, 0, 0, 0, 25, 0, 25, 0, 2, 0, 1, 0, 0]' : 0.126743}
{'[1, 6, 4, 6, 4, 2, 0, 0, 0, 25, 0, 25, 0, 2, 0, 1, 0, 0]' : 0.126798}
{'[1, 6, 4, 6, 4, 2, 0, 0, 0, 25, 0, 25, 0, 2, 0, 1, 0, 0]' : 0.126855}
{'[1, 6, 4, 6, 4, 2, 0, 0, 0, 25, 0, 25, 0, 2, 0, 1, 0, 0]' : 0.126763}
{'[1, 6, 4, 6, 4, 2, 0, 0, 0, 25, 0, 25, 0, 2, 0, 1, 0, 0]' : 0.126773}
{'[1, 6, 4, 6, 4, 2, 0, 0, 0, 25, 0, 25, 0, 2, 0, 1, 0, 0]' : 0.12679}
{'[1, 6, 4, 6, 4, 2, 0, 0, 0, 25, 0, 25, 0, 2, 0, 1, 0, 0]' : 0.126797}
{'[1, 6, 4, 6, 4, 2, 0, 0, 0, 25, 0, 25, 0, 2, 0, 1, 0, 0]' : 0.126745}
{'[1, 6, 4, 6, 4, 2, 0, 0, 0, 25, 0, 25, 0, 2, 0, 1, 0, 0]' : 0.126955}
{'[1, 6, 4, 6, 4, 2, 0, 0, 0, 25, 0, 25, 0, 2, 0, 1, 0, 0]' : 0.126808}
{'[1, 6, 4, 6, 4, 2, 0, 0, 0, 25, 0, 25, 0, 2, 0, 1, 0, 0]' : 0.126786}
{'[1, 6, 4, 6, 4, 2, 0, 0, 0, 25, 0, 25, 0, 2, 0, 1, 0, 0]' : 0.126749}
{'[1, 6, 4, 6, 4, 2, 0, 0, 0, 25, 0, 25, 0, 2, 0, 1, 0, 0]' : 0.126742}
{'[1, 6, 4, 6, 4, 2, 0, 0, 0, 25, 0, 25, 0, 2, 0, 1, 0, 0]' : 0.126785}
{'[1, 6, 4, 6, 4, 2, 0, 0, 0, 25, 0, 25, 0, 2, 0, 1, 0, 0]' : 0.127016}
{'[1, 6, 4, 6, 4, 2, 0, 0, 0, 25, 0, 25, 0, 2, 0, 1, 0, 0]' : 0.12679}
{'[1, 6, 4, 6, 4, 2, 0, 0, 0, 25, 0, 25, 0, 2, 0, 1, 0, 0]' : 0.12679}
{'[1, 6, 4, 6, 4, 2, 0, 0, 0, 25, 0, 25, 0, 2, 0, 1, 0, 0]' : 0.126724}
{'[1, 6, 4, 6, 4, 2, 0, 0, 0, 25, 0, 25, 0, 2, 0, 1, 0, 0]' : 0.126733}
{'[1, 6, 4, 6, 4, 2, 0, 0, 0, 25, 0, 25, 0, 2, 0, 1, 0, 0]' : 0.126778}
{'[1, 6, 4, 6, 4, 2, 0, 0, 0, 25, 0, 25, 0, 2, 0, 1, 0, 0]' : 0.126731}
{'[1, 6, 4, 6, 4, 2, 0, 0, 0, 25, 0, 25, 0, 2, 0, 1, 0, 0]' : 0.126768}
{'[1, 6, 4, 6, 4, 2, 0, 0, 0, 25, 0, 25, 0, 2, 0, 1, 0, 0]' : 0.126788}
{'[1, 6, 4, 6, 4, 2, 0, 0, 0, 25, 0, 25, 0, 2, 0, 1, 0, 0]' : 0.126801}
{'[1, 6, 4, 6, 4, 2, 0, 0, 0, 25, 0, 25, 0, 2, 0, 1, 0, 0]' : 0.126787}
{'[1, 6, 4, 6, 4, 2, 0, 0, 0, 25, 0, 25, 0, 2, 0, 1, 0, 0]' : 0.126768}

out:
 ["{'[1, 6, 4, 6, 4, 2, 0, 0, 0, 25, 0, 25, 0, 2, 0, 1, 0, 0]' : 0.126909}", "{'[1, 6, 4, 6, 4, 2, 0, 0, 0, 25, 0, 25, 0, 2, 0, 1, 0, 0]' : 0.126758}", "{'[1, 6, 4, 6, 4, 2, 0, 0, 0, 25, 0, 25, 0, 2, 0, 1, 0, 0]' : 0.126752}", "{'[1, 6, 4, 6, 4, 2, 0, 0, 0, 25, 0, 25, 0, 2, 0, 1, 0, 0]' : 0.126756}", "{'[1, 6, 4, 6, 4, 2, 0, 0, 0, 25, 0, 25, 0, 2, 0, 1, 0, 0]' : 0.126743}", "{'[1, 6, 4, 6, 4, 2, 0, 0, 0, 25, 0, 25, 0, 2, 0, 1, 0, 0]' : 0.126798}", "{'[1, 6, 4, 6, 4, 2, 0, 0, 0, 25, 0, 25, 0, 2, 0, 1, 0, 0]' : 0.126855}", "{'[1, 6, 4, 6, 4, 2, 0, 0, 0, 25, 0, 25, 0, 2, 0, 1, 0, 0]' : 0.126763}", "{'[1, 6, 4, 6, 4, 2, 0, 0, 0, 25, 0, 25, 0, 2, 0, 1, 0, 0]' : 0.126773}", "{'[1, 6, 4, 6, 4, 2, 0, 0, 0, 25, 0, 25, 0, 2, 0, 1, 0, 0]' : 0.12679}", "{'[1, 6, 4, 6, 4, 2, 0, 0, 0, 25, 0, 25, 0, 2, 0, 1, 0, 0]' : 0.126797}", "{'[1, 6, 4, 6, 4, 2, 0, 0, 0, 25, 0, 25, 0, 2, 0, 1, 0, 0]' : 0.126745}", "{'[1, 6, 4, 6, 4, 2, 0, 0, 0, 25, 0, 25, 0, 2, 0, 1, 0, 0]' : 0.126955}", "{'[1, 6, 4, 6, 4, 2, 0, 0, 0, 25, 0, 25, 0, 2, 0, 1, 0, 0]' : 0.126808}", "{'[1, 6, 4, 6, 4, 2, 0, 0, 0, 25, 0, 25, 0, 2, 0, 1, 0, 0]' : 0.126786}", "{'[1, 6, 4, 6, 4, 2, 0, 0, 0, 25, 0, 25, 0, 2, 0, 1, 0, 0]' : 0.126749}", "{'[1, 6, 4, 6, 4, 2, 0, 0, 0, 25, 0, 25, 0, 2, 0, 1, 0, 0]' : 0.126742}", "{'[1, 6, 4, 6, 4, 2, 0, 0, 0, 25, 0, 25, 0, 2, 0, 1, 0, 0]' : 0.126785}", "{'[1, 6, 4, 6, 4, 2, 0, 0, 0, 25, 0, 25, 0, 2, 0, 1, 0, 0]' : 0.127016}", "{'[1, 6, 4, 6, 4, 2, 0, 0, 0, 25, 0, 25, 0, 2, 0, 1, 0, 0]' : 0.12679}", "{'[1, 6, 4, 6, 4, 2, 0, 0, 0, 25, 0, 25, 0, 2, 0, 1, 0, 0]' : 0.12679}", "{'[1, 6, 4, 6, 4, 2, 0, 0, 0, 25, 0, 25, 0, 2, 0, 1, 0, 0]' : 0.126724}", "{'[1, 6, 4, 6, 4, 2, 0, 0, 0, 25, 0, 25, 0, 2, 0, 1, 0, 0]' : 0.126733}", "{'[1, 6, 4, 6, 4, 2, 0, 0, 0, 25, 0, 25, 0, 2, 0, 1, 0, 0]' : 0.126778}", "{'[1, 6, 4, 6, 4, 2, 0, 0, 0, 25, 0, 25, 0, 2, 0, 1, 0, 0]' : 0.126731}", "{'[1, 6, 4, 6, 4, 2, 0, 0, 0, 25, 0, 25, 0, 2, 0, 1, 0, 0]' : 0.126768}", "{'[1, 6, 4, 6, 4, 2, 0, 0, 0, 25, 0, 25, 0, 2, 0, 1, 0, 0]' : 0.126788}", "{'[1, 6, 4, 6, 4, 2, 0, 0, 0, 25, 0, 25, 0, 2, 0, 1, 0, 0]' : 0.126801}", "{'[1, 6, 4, 6, 4, 2, 0, 0, 0, 25, 0, 25, 0, 2, 0, 1, 0, 0]' : 0.126787}", "{'[1, 6, 4, 6, 4, 2, 0, 0, 0, 25, 0, 25, 0, 2, 0, 1, 0, 0]' : 0.126768}"]
returning from 'run': {'[1, 6, 4, 6, 4, 2, 0, 0, 0, 25, 0, 25, 0, 2, 0, 1, 0, 0]': ([0.126909, 0.126758, 0.126752, 0.126756, 0.126743, 0.126798, 0.126855, 0.126763, 0.126773, 0.12679, 0.126797, 0.126745, 0.126955, 0.126808, 0.126786, 0.126749, 0.126742, 0.126785, 0.127016, 0.12679, 0.12679, 0.126724, 0.126733, 0.126778, 0.126731, 0.126768, 0.126788, 0.126801, 0.126787, 0.126768], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 6, 4, 6, 4, 2, 0, 0, 0, 25, 0, 25, 0, 2, 0, 1, 0, 0]': ([0.126909, 0.126758, 0.126752, 0.126756, 0.126743, 0.126798, 0.126855, 0.126763, 0.126773, 0.12679, 0.126797, 0.126745, 0.126955, 0.126808, 0.126786, 0.126749, 0.126742, 0.126785, 0.127016, 0.12679, 0.12679, 0.126724, 0.126733, 0.126778, 0.126731, 0.126768, 0.126788, 0.126801, 0.126787, 0.126768], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		323
        Multiplications: 	80
        Divisions: 		0
        Logical: 		0
        Reads: 			616
        Writes: 		94
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest35.exe __orio_perftest35.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest35.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest35.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest35.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/Orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/Orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 510, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors, data)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 396, in dopt_anova
    budget)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 324, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 270, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/phrb/code/Orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest35.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/Orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/Orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 510, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors, data)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 396, in dopt_anova
    budget)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 324, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 270, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/phrb/code/Orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		220
        Multiplications: 	62
        Divisions: 		0
        Logical: 		0
        Reads: 			480
        Writes: 		76
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest36.exe __orio_perftest36.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest36.exe  
Program Test Output: 
{'[2, 3, 3, 0, 1, 0, 1, 1, 8, 0, 21, 23, 0, 0, 1, 0, 1, 1]' : 0.176997}
{'[2, 3, 3, 0, 1, 0, 1, 1, 8, 0, 21, 23, 0, 0, 1, 0, 1, 1]' : 0.176802}
{'[2, 3, 3, 0, 1, 0, 1, 1, 8, 0, 21, 23, 0, 0, 1, 0, 1, 1]' : 0.176779}
{'[2, 3, 3, 0, 1, 0, 1, 1, 8, 0, 21, 23, 0, 0, 1, 0, 1, 1]' : 0.176936}
{'[2, 3, 3, 0, 1, 0, 1, 1, 8, 0, 21, 23, 0, 0, 1, 0, 1, 1]' : 0.176755}
{'[2, 3, 3, 0, 1, 0, 1, 1, 8, 0, 21, 23, 0, 0, 1, 0, 1, 1]' : 0.176861}
{'[2, 3, 3, 0, 1, 0, 1, 1, 8, 0, 21, 23, 0, 0, 1, 0, 1, 1]' : 0.176729}
{'[2, 3, 3, 0, 1, 0, 1, 1, 8, 0, 21, 23, 0, 0, 1, 0, 1, 1]' : 0.176876}
{'[2, 3, 3, 0, 1, 0, 1, 1, 8, 0, 21, 23, 0, 0, 1, 0, 1, 1]' : 0.176752}
{'[2, 3, 3, 0, 1, 0, 1, 1, 8, 0, 21, 23, 0, 0, 1, 0, 1, 1]' : 0.176806}
{'[2, 3, 3, 0, 1, 0, 1, 1, 8, 0, 21, 23, 0, 0, 1, 0, 1, 1]' : 0.176778}
{'[2, 3, 3, 0, 1, 0, 1, 1, 8, 0, 21, 23, 0, 0, 1, 0, 1, 1]' : 0.176927}
{'[2, 3, 3, 0, 1, 0, 1, 1, 8, 0, 21, 23, 0, 0, 1, 0, 1, 1]' : 0.176793}
{'[2, 3, 3, 0, 1, 0, 1, 1, 8, 0, 21, 23, 0, 0, 1, 0, 1, 1]' : 0.176818}
{'[2, 3, 3, 0, 1, 0, 1, 1, 8, 0, 21, 23, 0, 0, 1, 0, 1, 1]' : 0.17677}
{'[2, 3, 3, 0, 1, 0, 1, 1, 8, 0, 21, 23, 0, 0, 1, 0, 1, 1]' : 0.176772}
{'[2, 3, 3, 0, 1, 0, 1, 1, 8, 0, 21, 23, 0, 0, 1, 0, 1, 1]' : 0.176747}
{'[2, 3, 3, 0, 1, 0, 1, 1, 8, 0, 21, 23, 0, 0, 1, 0, 1, 1]' : 0.17681}
{'[2, 3, 3, 0, 1, 0, 1, 1, 8, 0, 21, 23, 0, 0, 1, 0, 1, 1]' : 0.176787}
{'[2, 3, 3, 0, 1, 0, 1, 1, 8, 0, 21, 23, 0, 0, 1, 0, 1, 1]' : 0.176795}
{'[2, 3, 3, 0, 1, 0, 1, 1, 8, 0, 21, 23, 0, 0, 1, 0, 1, 1]' : 0.176908}
{'[2, 3, 3, 0, 1, 0, 1, 1, 8, 0, 21, 23, 0, 0, 1, 0, 1, 1]' : 0.176838}
{'[2, 3, 3, 0, 1, 0, 1, 1, 8, 0, 21, 23, 0, 0, 1, 0, 1, 1]' : 0.176803}
{'[2, 3, 3, 0, 1, 0, 1, 1, 8, 0, 21, 23, 0, 0, 1, 0, 1, 1]' : 0.17686}
{'[2, 3, 3, 0, 1, 0, 1, 1, 8, 0, 21, 23, 0, 0, 1, 0, 1, 1]' : 0.17695}
{'[2, 3, 3, 0, 1, 0, 1, 1, 8, 0, 21, 23, 0, 0, 1, 0, 1, 1]' : 0.176896}
{'[2, 3, 3, 0, 1, 0, 1, 1, 8, 0, 21, 23, 0, 0, 1, 0, 1, 1]' : 0.17676}
{'[2, 3, 3, 0, 1, 0, 1, 1, 8, 0, 21, 23, 0, 0, 1, 0, 1, 1]' : 0.176732}
{'[2, 3, 3, 0, 1, 0, 1, 1, 8, 0, 21, 23, 0, 0, 1, 0, 1, 1]' : 0.176909}
{'[2, 3, 3, 0, 1, 0, 1, 1, 8, 0, 21, 23, 0, 0, 1, 0, 1, 1]' : 0.17691}

out:
 ["{'[2, 3, 3, 0, 1, 0, 1, 1, 8, 0, 21, 23, 0, 0, 1, 0, 1, 1]' : 0.176997}", "{'[2, 3, 3, 0, 1, 0, 1, 1, 8, 0, 21, 23, 0, 0, 1, 0, 1, 1]' : 0.176802}", "{'[2, 3, 3, 0, 1, 0, 1, 1, 8, 0, 21, 23, 0, 0, 1, 0, 1, 1]' : 0.176779}", "{'[2, 3, 3, 0, 1, 0, 1, 1, 8, 0, 21, 23, 0, 0, 1, 0, 1, 1]' : 0.176936}", "{'[2, 3, 3, 0, 1, 0, 1, 1, 8, 0, 21, 23, 0, 0, 1, 0, 1, 1]' : 0.176755}", "{'[2, 3, 3, 0, 1, 0, 1, 1, 8, 0, 21, 23, 0, 0, 1, 0, 1, 1]' : 0.176861}", "{'[2, 3, 3, 0, 1, 0, 1, 1, 8, 0, 21, 23, 0, 0, 1, 0, 1, 1]' : 0.176729}", "{'[2, 3, 3, 0, 1, 0, 1, 1, 8, 0, 21, 23, 0, 0, 1, 0, 1, 1]' : 0.176876}", "{'[2, 3, 3, 0, 1, 0, 1, 1, 8, 0, 21, 23, 0, 0, 1, 0, 1, 1]' : 0.176752}", "{'[2, 3, 3, 0, 1, 0, 1, 1, 8, 0, 21, 23, 0, 0, 1, 0, 1, 1]' : 0.176806}", "{'[2, 3, 3, 0, 1, 0, 1, 1, 8, 0, 21, 23, 0, 0, 1, 0, 1, 1]' : 0.176778}", "{'[2, 3, 3, 0, 1, 0, 1, 1, 8, 0, 21, 23, 0, 0, 1, 0, 1, 1]' : 0.176927}", "{'[2, 3, 3, 0, 1, 0, 1, 1, 8, 0, 21, 23, 0, 0, 1, 0, 1, 1]' : 0.176793}", "{'[2, 3, 3, 0, 1, 0, 1, 1, 8, 0, 21, 23, 0, 0, 1, 0, 1, 1]' : 0.176818}", "{'[2, 3, 3, 0, 1, 0, 1, 1, 8, 0, 21, 23, 0, 0, 1, 0, 1, 1]' : 0.17677}", "{'[2, 3, 3, 0, 1, 0, 1, 1, 8, 0, 21, 23, 0, 0, 1, 0, 1, 1]' : 0.176772}", "{'[2, 3, 3, 0, 1, 0, 1, 1, 8, 0, 21, 23, 0, 0, 1, 0, 1, 1]' : 0.176747}", "{'[2, 3, 3, 0, 1, 0, 1, 1, 8, 0, 21, 23, 0, 0, 1, 0, 1, 1]' : 0.17681}", "{'[2, 3, 3, 0, 1, 0, 1, 1, 8, 0, 21, 23, 0, 0, 1, 0, 1, 1]' : 0.176787}", "{'[2, 3, 3, 0, 1, 0, 1, 1, 8, 0, 21, 23, 0, 0, 1, 0, 1, 1]' : 0.176795}", "{'[2, 3, 3, 0, 1, 0, 1, 1, 8, 0, 21, 23, 0, 0, 1, 0, 1, 1]' : 0.176908}", "{'[2, 3, 3, 0, 1, 0, 1, 1, 8, 0, 21, 23, 0, 0, 1, 0, 1, 1]' : 0.176838}", "{'[2, 3, 3, 0, 1, 0, 1, 1, 8, 0, 21, 23, 0, 0, 1, 0, 1, 1]' : 0.176803}", "{'[2, 3, 3, 0, 1, 0, 1, 1, 8, 0, 21, 23, 0, 0, 1, 0, 1, 1]' : 0.17686}", "{'[2, 3, 3, 0, 1, 0, 1, 1, 8, 0, 21, 23, 0, 0, 1, 0, 1, 1]' : 0.17695}", "{'[2, 3, 3, 0, 1, 0, 1, 1, 8, 0, 21, 23, 0, 0, 1, 0, 1, 1]' : 0.176896}", "{'[2, 3, 3, 0, 1, 0, 1, 1, 8, 0, 21, 23, 0, 0, 1, 0, 1, 1]' : 0.17676}", "{'[2, 3, 3, 0, 1, 0, 1, 1, 8, 0, 21, 23, 0, 0, 1, 0, 1, 1]' : 0.176732}", "{'[2, 3, 3, 0, 1, 0, 1, 1, 8, 0, 21, 23, 0, 0, 1, 0, 1, 1]' : 0.176909}", "{'[2, 3, 3, 0, 1, 0, 1, 1, 8, 0, 21, 23, 0, 0, 1, 0, 1, 1]' : 0.17691}"]
returning from 'run': {'[2, 3, 3, 0, 1, 0, 1, 1, 8, 0, 21, 23, 0, 0, 1, 0, 1, 1]': ([0.176997, 0.176802, 0.176779, 0.176936, 0.176755, 0.176861, 0.176729, 0.176876, 0.176752, 0.176806, 0.176778, 0.176927, 0.176793, 0.176818, 0.17677, 0.176772, 0.176747, 0.17681, 0.176787, 0.176795, 0.176908, 0.176838, 0.176803, 0.17686, 0.17695, 0.176896, 0.17676, 0.176732, 0.176909, 0.17691], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 3, 3, 0, 1, 0, 1, 1, 8, 0, 21, 23, 0, 0, 1, 0, 1, 1]': ([0.176997, 0.176802, 0.176779, 0.176936, 0.176755, 0.176861, 0.176729, 0.176876, 0.176752, 0.176806, 0.176778, 0.176927, 0.176793, 0.176818, 0.17677, 0.176772, 0.176747, 0.17681, 0.176787, 0.176795, 0.176908, 0.176838, 0.176803, 0.17686, 0.17695, 0.176896, 0.17676, 0.176732, 0.176909, 0.17691], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Complete design, with measurements:
   T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
1     3    1    0    1    2    1       0       1    0  16   2   0    0    1
2     1    4    5    2    3    3       0       1   29  26  28   0    1    0
3     4    6    0    2    6    4       1       0   18   4  25   0    0    1
4     5    0    4    5    1    5       0       0    7   5   0  14    2    0
6     2    1    0    4    6    4       0       1   26  29   4   0    2    0
7     2    6    3    4    0    0       0       1   24   0   0  12    1    1
8     4    5    4    2    0    0       0       0   19   6   7   0    1    0
9     3    1    4    5    6    6       0       1    4   5  28   0    1    1
10    5    1    0    4    1    6       1       0    2   0  21   0    0    1
11    6    1    2    6    6    2       1       1   17   0   8  22    0    1
12    6    2    3    0    0    5       0       0   29   0  14  24    1    0
13    2    1    2    3    6    0       1       0   12   0  24  28    2    0
14    5    0    5    3    4    0       1       1    1   0  22   9    1    0
16    1    0    6    1    1    6       0       1    6   0  23  28    0    1
17    3    2    2    4    4    5       0       1    0   0  28   6    0    0
18    2    6    6    6    6    4       1       1   15   8   0   3    0    0
19    2    4    0    3    2    0       0       0    8  21   0  29    1    0
20    1    2    2    6    2    1       0       0   13   0  13   7    1    1
21    0    2    2    6    5    0       1       0   29   8  11   0    0    0
22    0    0    2    3    0    6       0       0    2  15   0  23    1    0
24    1    0    1    0    4    3       1       0   25   0   0   8    1    0
25    2    1    0    0    5    0       0       1   16   7   0   8    0    2
26    0    1    6    5    2    0       0       1   18  21  29   0    0    1
27    4    5    1    2    3    6       0       1    6   0  12   0    0    1
28    4    0    5    2    5    6       1       0   25  20   4   0    0    1
29    3    3    5    3    1    3       1       1   28   3   0  26    1    1
30    0    2    4    2    0    5       0       1    0  18   0   7    1    1
31    1    1    4    2    0    2       0       1   10  27   0   4    0    0
32    1    2    5    1    3    4       0       0    7  15   0   3    0    0
33    6    4    2    0    4    6       1       1    8  14   0   6    1    1
34    1    6    4    6    4    2       0       0    0  25   0  25    0    2
36    2    3    3    0    1    0       1       1    8   0  21  23    0    0
   RT_K SCR VEC1 VEC2  cost_mean
1     1   0    0    0 0.16319720
2     0   0    1    0 0.10257747
3     1   0    0    0 0.11180273
4     0   0    0    0 0.26182333
6     0   1    0    1 0.18467220
7     0   0    0    0 0.09151923
8     0   1    1    0 0.08872451
9     0   0    0    0 0.10140350
10    0   0    1    0 0.16141650
11    0   0    1    1 0.21484780
12    1   1    0    1 0.07900760
13    0   1    1    0 0.21644553
14    1   1    0    1 0.08717581
16    0   1    1    1 0.16747510
17    0   1    1    1 0.21130260
18    1   1    1    1 0.14018480
19    0   1    0    1 0.07985079
20    0   1    1    0 0.07901258
21    1   1    0    1 0.13114980
22    1   1    1    0 0.08310310
24    0   0    0    1 0.11198993
25    0   1    1    1 0.09640481
26    1   0    1    0 0.15106123
27    1   1    0    1 0.20206647
28    1   0    1    0 0.12519093
29    0   1    1    0 0.09246852
30    0   0    0    1 0.08195975
31    0   1    0    0 0.17815620
32    2   0    1    1 0.12013000
33    0   1    0    0 0.09612332
34    0   1    0    0 0.12679127
36    1   0    1    1 0.17682853

Step Space Names:  [1] "T1_I"    "T1_J"    "T1_K"    "T2_I"    "T2_J"    "T2_K"    "ACOPY_x"
 [8] "ACOPY_y" "U1_I"    "U_I"     "U_J"     "U_K"     "RT_I"    "RT_J"   
[15] "RT_K"    "SCR"     "VEC1"    "VEC2"   

