
====== START ORIO ======

----- begin reading the source file: atax2.src1.c -----
----- finished reading the source file -----

----- begin parsing annotations -----
----- finished parsing annotations -----

----- begin optimizations -----
Search_Space         = 8.234e+13
Number_of_Parameters = 18
Numeric_Parameters   = 13
Binary_Parameters    = 05
['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
[[1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [False, True], [False, True], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 8, 32], [1, 8, 32], [1, 8, 32], [False, True], [False, True], [False, True]]

----- begin empirical tuning for problem size -----
 N = 10000
Parameters: {'ACOPY_x': [0, 2], 'ACOPY_y': [0, 2], 'RT_K': [0, 3], 'T1_I': [0, 7], 'T1_J': [0, 7], 'T1_K': [0, 7], 'U_K': [0, 30], 'U_J': [0, 30], 'U_I': [0, 30], 'U1_I': [0, 30], 'T2_K': [0, 7], 'T2_J': [0, 7], 'T2_I': [0, 7], 'VEC2': [0, 2], 'VEC1': [0, 2], 'RT_I': [0, 3], 'SCR': [0, 2], 'RT_J': [0, 3]}

----- begin random search -----
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Inverse Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Building seed search space (does not spend evaluations)
Using pre-generated space for this size
Starting DOPT-anova
Step 0
Full Model:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Fixed Factors: {}
Full data does not fit on budget
Computing D-Optimal Design
Updating Constraints
Updated Constraint: True and (((T2_I ==1 )or (T2_I %T1_I ==0 ))) and (((T2_J ==1 )or (T2_J %T1_J ==0 ))) and (((T2_K ==1 )or (T2_K %T1_K ==0 ))) and ((RT_I *RT_J +RT_I *RT_K +RT_J *RT_K <=150 )) and (((U_I ==1 )or (U_J ==1 )or (U_K ==1 )))
Computing D-Optimal Design with 41 experiments
Design Formula:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Starting "optMonteCarlo" run
       var low high center nLevels round factor   mix
1     T1_I   0    6      0       7     0  FALSE FALSE
2     T1_J   0    6      0       7     0  FALSE FALSE
3     T1_K   0    6      0       7     0  FALSE FALSE
4     T2_I   0    6      0       7     0  FALSE FALSE
5     T2_J   0    6      0       7     0  FALSE FALSE
6     T2_K   0    6      0       7     0  FALSE FALSE
7  ACOPY_x   0    1      0       2     0  FALSE FALSE
8  ACOPY_y   0    1      0       2     0  FALSE FALSE
9     U1_I   0   29      0      30     0  FALSE FALSE
10     U_I   0   29      0      30     0  FALSE FALSE
11     U_J   0   29      0      30     0  FALSE FALSE
12     U_K   0   29      0      30     0  FALSE FALSE
13    RT_I   0    2      0       3     0  FALSE FALSE
14    RT_J   0    2      0       3     0  FALSE FALSE
15    RT_K   0    2      0       3     0  FALSE FALSE
16     SCR   0    1      0       2     0  FALSE FALSE
17    VEC1   0    1      0       2     0  FALSE FALSE
18    VEC2   0    1      0       2     0  FALSE FALSE

   T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
1     6    1    0    4    5    0       1       1    5   4   0  20    0    1
2     0    3    3    6    0    5       1       1   13   0   5   2    1    1
3     1    5    2    5    3    1       1       0   29   0  25   4    2    0
4     5    4    3    4    0    0       1       1    0   0   1   3    0    0
5     6    1    2    5    2    2       1       0   12   0  18   7    0    0
6     5    3    2    4    3    0       1       0    2  26   2   0    0    2
7     0    4    1    3    5    1       1       1   11  25   0  26    0    0
8     2    1    0    6    6    5       1       1    0  19   0  18    0    1
9     0    0    4    2    2    2       0       1   16   0   2  25    0    0
10    3    4    0    2    0    4       1       0    8  22  28   0    0    0
11    4    0    2    0    5    0       1       1    0   0  10  19    1    0
12    6    6    0    6    0    3       0       1   15   0  17  25    0    1
13    1    5    1    1    4    0       0       0   29   3  16   0    2    0
14    0    5    0    1    3    5       1       0   22   0   4   8    1    0
15    1    6    6    6    5    5       1       1   28  22   0   0    1    0
16    0    6    3    0    5    3       0       1    0   0  21  17    0    0
17    6    2    1    0    1    5       0       1   26   3   0  10    0    0
18    4    0    0    4    1    3       0       1   16  20   0   7    0    0
19    0    2    1    3    1    1       0       1    1   0  28  18    1    0
20    5    1    3    3    3    2       0       1   22   0   3  27    0    2
21    1    1    2    0    0    6       1       1   26   0  29  17    0    2
22    1    3    1    6    3    6       1       1    4  13   0  26    0    2
23    4    1    1    3    5    3       0       0    9   0   0   1    0    1
24    3    5    4    2    5    6       1       1    3   0  16  27    0    0
25    3    2    3    0    2    1       0       1    9  28   0   1    2    0
26    2    0    3    2    3    6       0       1   10  20   0   8    0    0
27    5    6    2    6    0    2       1       0   28  26   0  29    1    0
28    0    3    0    4    6    2       1       0   17   2   0   3    0    2
29    6    5    1    0    4    4       1       1   26  27  14   0    0    1
30    6    5    5    4    6    3       0       1   29   4  28   0    1    0
31    0    0    4    6    1    2       1       0    2   4   9   0    0    1
32    1    1    0    6    0    1       1       0   12   0   5   4    1    0
33    5    1    2    3    5    4       0       1   12  24   4   0    1    0
34    6    1    2    6    3    0       0       0   10   0  25  24    1    1
35    4    3    6    3    1    6       1       0    0   8   0  21    1    0
36    2    2    6    0    5    0       0       0   28  26   7   0    0    0
37    3    5    0    3    5    0       0       1    6   0  23   0    0    0
38    3    5    4    0    6    2       0       0    8   3  20   0    0    0
39    2    2    2    1    3    2       1       1   27   0   5  21    1    1
40    0    0    6    2    4    6       0       0   18   0  12  15    2    0
41    3    5    6    1    6    0       1       0    6  28   0   7    1    1
   RT_K SCR VEC1 VEC2
1     1   0    0    0
2     0   0    1    0
3     0   0    0    1
4     0   1    1    1
5     2   0    1    1
6     0   0    0    0
7     2   1    1    0
8     0   0    0    1
9     0   1    0    1
10    0   0    0    0
11    0   1    1    1
12    1   1    1    0
13    0   1    1    1
14    1   0    0    0
15    1   0    0    0
16    1   1    0    0
17    0   0    0    1
18    0   0    1    0
19    0   0    1    1
20    0   0    1    1
21    0   0    0    1
22    0   1    1    1
23    1   1    1    1
24    1   1    1    1
25    0   1    0    1
26    2   0    0    0
27    0   0    0    1
28    0   1    0    1
29    1   1    1    1
30    0   1    0    0
31    1   0    1    0
32    1   1    0    1
33    1   0    0    1
34    0   1    0    0
35    1   1    0    1
36    1   0    1    1
37    2   0    0    1
38    2   0    1    0
39    0   1    1    0
40    0   1    1    0
41    0   0    1    1

D-Efficiency Approximation: [1] 0.3

Measuring design of size 41
Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	5
        Additions: 		690
        Multiplications: 	192
        Divisions: 		0
        Logical: 		0
        Reads: 			1189
        Writes: 		153
        Comparisons:		19
        Gotos: 			0
        
 building the original code:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -DORIGINAL -o __orio_perftest_original.exe __orio_perftest1.c timer_cpu.o -lm
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest1.exe __orio_perftest1.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest1.exe  
Program Test Output: 
{'[6, 1, 0, 4, 5, 0, 1, 1, 5, 4, 0, 20, 0, 1, 1, 0, 0, 0]' : 0.12159}
{'[6, 1, 0, 4, 5, 0, 1, 1, 5, 4, 0, 20, 0, 1, 1, 0, 0, 0]' : 0.121345}
{'[6, 1, 0, 4, 5, 0, 1, 1, 5, 4, 0, 20, 0, 1, 1, 0, 0, 0]' : 0.121375}
{'[6, 1, 0, 4, 5, 0, 1, 1, 5, 4, 0, 20, 0, 1, 1, 0, 0, 0]' : 0.1215}
{'[6, 1, 0, 4, 5, 0, 1, 1, 5, 4, 0, 20, 0, 1, 1, 0, 0, 0]' : 0.121329}
{'[6, 1, 0, 4, 5, 0, 1, 1, 5, 4, 0, 20, 0, 1, 1, 0, 0, 0]' : 0.12141}
{'[6, 1, 0, 4, 5, 0, 1, 1, 5, 4, 0, 20, 0, 1, 1, 0, 0, 0]' : 0.121351}
{'[6, 1, 0, 4, 5, 0, 1, 1, 5, 4, 0, 20, 0, 1, 1, 0, 0, 0]' : 0.121401}
{'[6, 1, 0, 4, 5, 0, 1, 1, 5, 4, 0, 20, 0, 1, 1, 0, 0, 0]' : 0.121354}
{'[6, 1, 0, 4, 5, 0, 1, 1, 5, 4, 0, 20, 0, 1, 1, 0, 0, 0]' : 0.121403}
{'[6, 1, 0, 4, 5, 0, 1, 1, 5, 4, 0, 20, 0, 1, 1, 0, 0, 0]' : 0.121334}
{'[6, 1, 0, 4, 5, 0, 1, 1, 5, 4, 0, 20, 0, 1, 1, 0, 0, 0]' : 0.12134}
{'[6, 1, 0, 4, 5, 0, 1, 1, 5, 4, 0, 20, 0, 1, 1, 0, 0, 0]' : 0.12161}
{'[6, 1, 0, 4, 5, 0, 1, 1, 5, 4, 0, 20, 0, 1, 1, 0, 0, 0]' : 0.121647}
{'[6, 1, 0, 4, 5, 0, 1, 1, 5, 4, 0, 20, 0, 1, 1, 0, 0, 0]' : 0.121356}
{'[6, 1, 0, 4, 5, 0, 1, 1, 5, 4, 0, 20, 0, 1, 1, 0, 0, 0]' : 0.121299}
{'[6, 1, 0, 4, 5, 0, 1, 1, 5, 4, 0, 20, 0, 1, 1, 0, 0, 0]' : 0.121306}
{'[6, 1, 0, 4, 5, 0, 1, 1, 5, 4, 0, 20, 0, 1, 1, 0, 0, 0]' : 0.121318}
{'[6, 1, 0, 4, 5, 0, 1, 1, 5, 4, 0, 20, 0, 1, 1, 0, 0, 0]' : 0.121313}
{'[6, 1, 0, 4, 5, 0, 1, 1, 5, 4, 0, 20, 0, 1, 1, 0, 0, 0]' : 0.121386}
{'[6, 1, 0, 4, 5, 0, 1, 1, 5, 4, 0, 20, 0, 1, 1, 0, 0, 0]' : 0.121424}
{'[6, 1, 0, 4, 5, 0, 1, 1, 5, 4, 0, 20, 0, 1, 1, 0, 0, 0]' : 0.121373}
{'[6, 1, 0, 4, 5, 0, 1, 1, 5, 4, 0, 20, 0, 1, 1, 0, 0, 0]' : 0.121322}
{'[6, 1, 0, 4, 5, 0, 1, 1, 5, 4, 0, 20, 0, 1, 1, 0, 0, 0]' : 0.121307}
{'[6, 1, 0, 4, 5, 0, 1, 1, 5, 4, 0, 20, 0, 1, 1, 0, 0, 0]' : 0.121558}
{'[6, 1, 0, 4, 5, 0, 1, 1, 5, 4, 0, 20, 0, 1, 1, 0, 0, 0]' : 0.121368}
{'[6, 1, 0, 4, 5, 0, 1, 1, 5, 4, 0, 20, 0, 1, 1, 0, 0, 0]' : 0.121366}
{'[6, 1, 0, 4, 5, 0, 1, 1, 5, 4, 0, 20, 0, 1, 1, 0, 0, 0]' : 0.121429}
{'[6, 1, 0, 4, 5, 0, 1, 1, 5, 4, 0, 20, 0, 1, 1, 0, 0, 0]' : 0.12135}
{'[6, 1, 0, 4, 5, 0, 1, 1, 5, 4, 0, 20, 0, 1, 1, 0, 0, 0]' : 0.12149}

out:
 ["{'[6, 1, 0, 4, 5, 0, 1, 1, 5, 4, 0, 20, 0, 1, 1, 0, 0, 0]' : 0.12159}", "{'[6, 1, 0, 4, 5, 0, 1, 1, 5, 4, 0, 20, 0, 1, 1, 0, 0, 0]' : 0.121345}", "{'[6, 1, 0, 4, 5, 0, 1, 1, 5, 4, 0, 20, 0, 1, 1, 0, 0, 0]' : 0.121375}", "{'[6, 1, 0, 4, 5, 0, 1, 1, 5, 4, 0, 20, 0, 1, 1, 0, 0, 0]' : 0.1215}", "{'[6, 1, 0, 4, 5, 0, 1, 1, 5, 4, 0, 20, 0, 1, 1, 0, 0, 0]' : 0.121329}", "{'[6, 1, 0, 4, 5, 0, 1, 1, 5, 4, 0, 20, 0, 1, 1, 0, 0, 0]' : 0.12141}", "{'[6, 1, 0, 4, 5, 0, 1, 1, 5, 4, 0, 20, 0, 1, 1, 0, 0, 0]' : 0.121351}", "{'[6, 1, 0, 4, 5, 0, 1, 1, 5, 4, 0, 20, 0, 1, 1, 0, 0, 0]' : 0.121401}", "{'[6, 1, 0, 4, 5, 0, 1, 1, 5, 4, 0, 20, 0, 1, 1, 0, 0, 0]' : 0.121354}", "{'[6, 1, 0, 4, 5, 0, 1, 1, 5, 4, 0, 20, 0, 1, 1, 0, 0, 0]' : 0.121403}", "{'[6, 1, 0, 4, 5, 0, 1, 1, 5, 4, 0, 20, 0, 1, 1, 0, 0, 0]' : 0.121334}", "{'[6, 1, 0, 4, 5, 0, 1, 1, 5, 4, 0, 20, 0, 1, 1, 0, 0, 0]' : 0.12134}", "{'[6, 1, 0, 4, 5, 0, 1, 1, 5, 4, 0, 20, 0, 1, 1, 0, 0, 0]' : 0.12161}", "{'[6, 1, 0, 4, 5, 0, 1, 1, 5, 4, 0, 20, 0, 1, 1, 0, 0, 0]' : 0.121647}", "{'[6, 1, 0, 4, 5, 0, 1, 1, 5, 4, 0, 20, 0, 1, 1, 0, 0, 0]' : 0.121356}", "{'[6, 1, 0, 4, 5, 0, 1, 1, 5, 4, 0, 20, 0, 1, 1, 0, 0, 0]' : 0.121299}", "{'[6, 1, 0, 4, 5, 0, 1, 1, 5, 4, 0, 20, 0, 1, 1, 0, 0, 0]' : 0.121306}", "{'[6, 1, 0, 4, 5, 0, 1, 1, 5, 4, 0, 20, 0, 1, 1, 0, 0, 0]' : 0.121318}", "{'[6, 1, 0, 4, 5, 0, 1, 1, 5, 4, 0, 20, 0, 1, 1, 0, 0, 0]' : 0.121313}", "{'[6, 1, 0, 4, 5, 0, 1, 1, 5, 4, 0, 20, 0, 1, 1, 0, 0, 0]' : 0.121386}", "{'[6, 1, 0, 4, 5, 0, 1, 1, 5, 4, 0, 20, 0, 1, 1, 0, 0, 0]' : 0.121424}", "{'[6, 1, 0, 4, 5, 0, 1, 1, 5, 4, 0, 20, 0, 1, 1, 0, 0, 0]' : 0.121373}", "{'[6, 1, 0, 4, 5, 0, 1, 1, 5, 4, 0, 20, 0, 1, 1, 0, 0, 0]' : 0.121322}", "{'[6, 1, 0, 4, 5, 0, 1, 1, 5, 4, 0, 20, 0, 1, 1, 0, 0, 0]' : 0.121307}", "{'[6, 1, 0, 4, 5, 0, 1, 1, 5, 4, 0, 20, 0, 1, 1, 0, 0, 0]' : 0.121558}", "{'[6, 1, 0, 4, 5, 0, 1, 1, 5, 4, 0, 20, 0, 1, 1, 0, 0, 0]' : 0.121368}", "{'[6, 1, 0, 4, 5, 0, 1, 1, 5, 4, 0, 20, 0, 1, 1, 0, 0, 0]' : 0.121366}", "{'[6, 1, 0, 4, 5, 0, 1, 1, 5, 4, 0, 20, 0, 1, 1, 0, 0, 0]' : 0.121429}", "{'[6, 1, 0, 4, 5, 0, 1, 1, 5, 4, 0, 20, 0, 1, 1, 0, 0, 0]' : 0.12135}", "{'[6, 1, 0, 4, 5, 0, 1, 1, 5, 4, 0, 20, 0, 1, 1, 0, 0, 0]' : 0.12149}"]
returning from 'run': {'[6, 1, 0, 4, 5, 0, 1, 1, 5, 4, 0, 20, 0, 1, 1, 0, 0, 0]': ([0.12159, 0.121345, 0.121375, 0.1215, 0.121329, 0.12141, 0.121351, 0.121401, 0.121354, 0.121403, 0.121334, 0.12134, 0.12161, 0.121647, 0.121356, 0.121299, 0.121306, 0.121318, 0.121313, 0.121386, 0.121424, 0.121373, 0.121322, 0.121307, 0.121558, 0.121368, 0.121366, 0.121429, 0.12135, 0.12149], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 1, 0, 4, 5, 0, 1, 1, 5, 4, 0, 20, 0, 1, 1, 0, 0, 0]': ([0.12159, 0.121345, 0.121375, 0.1215, 0.121329, 0.12141, 0.121351, 0.121401, 0.121354, 0.121403, 0.121334, 0.12134, 0.12161, 0.121647, 0.121356, 0.121299, 0.121306, 0.121318, 0.121313, 0.121386, 0.121424, 0.121373, 0.121322, 0.121307, 0.121558, 0.121368, 0.121366, 0.121429, 0.12135, 0.12149], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	23
        Max loop nest depth: 	5
        Additions: 		871
        Multiplications: 	216
        Divisions: 		0
        Logical: 		0
        Reads: 			1451
        Writes: 		180
        Comparisons:		23
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest2.exe __orio_perftest2.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest2.exe  
Program Test Output: 
{'[0, 3, 3, 6, 0, 5, 1, 1, 13, 0, 5, 2, 1, 1, 0, 0, 1, 0]' : 0.0964401}
{'[0, 3, 3, 6, 0, 5, 1, 1, 13, 0, 5, 2, 1, 1, 0, 0, 1, 0]' : 0.0960391}
{'[0, 3, 3, 6, 0, 5, 1, 1, 13, 0, 5, 2, 1, 1, 0, 0, 1, 0]' : 0.096143}
{'[0, 3, 3, 6, 0, 5, 1, 1, 13, 0, 5, 2, 1, 1, 0, 0, 1, 0]' : 0.0959718}
{'[0, 3, 3, 6, 0, 5, 1, 1, 13, 0, 5, 2, 1, 1, 0, 0, 1, 0]' : 0.096071}
{'[0, 3, 3, 6, 0, 5, 1, 1, 13, 0, 5, 2, 1, 1, 0, 0, 1, 0]' : 0.0960832}
{'[0, 3, 3, 6, 0, 5, 1, 1, 13, 0, 5, 2, 1, 1, 0, 0, 1, 0]' : 0.0961182}
{'[0, 3, 3, 6, 0, 5, 1, 1, 13, 0, 5, 2, 1, 1, 0, 0, 1, 0]' : 0.095973}
{'[0, 3, 3, 6, 0, 5, 1, 1, 13, 0, 5, 2, 1, 1, 0, 0, 1, 0]' : 0.096056}
{'[0, 3, 3, 6, 0, 5, 1, 1, 13, 0, 5, 2, 1, 1, 0, 0, 1, 0]' : 0.0964632}
{'[0, 3, 3, 6, 0, 5, 1, 1, 13, 0, 5, 2, 1, 1, 0, 0, 1, 0]' : 0.0960951}
{'[0, 3, 3, 6, 0, 5, 1, 1, 13, 0, 5, 2, 1, 1, 0, 0, 1, 0]' : 0.0960419}
{'[0, 3, 3, 6, 0, 5, 1, 1, 13, 0, 5, 2, 1, 1, 0, 0, 1, 0]' : 0.096077}
{'[0, 3, 3, 6, 0, 5, 1, 1, 13, 0, 5, 2, 1, 1, 0, 0, 1, 0]' : 0.0962}
{'[0, 3, 3, 6, 0, 5, 1, 1, 13, 0, 5, 2, 1, 1, 0, 0, 1, 0]' : 0.0960531}
{'[0, 3, 3, 6, 0, 5, 1, 1, 13, 0, 5, 2, 1, 1, 0, 0, 1, 0]' : 0.095963}
{'[0, 3, 3, 6, 0, 5, 1, 1, 13, 0, 5, 2, 1, 1, 0, 0, 1, 0]' : 0.096082}
{'[0, 3, 3, 6, 0, 5, 1, 1, 13, 0, 5, 2, 1, 1, 0, 0, 1, 0]' : 0.0960548}
{'[0, 3, 3, 6, 0, 5, 1, 1, 13, 0, 5, 2, 1, 1, 0, 0, 1, 0]' : 0.0960641}
{'[0, 3, 3, 6, 0, 5, 1, 1, 13, 0, 5, 2, 1, 1, 0, 0, 1, 0]' : 0.0959749}
{'[0, 3, 3, 6, 0, 5, 1, 1, 13, 0, 5, 2, 1, 1, 0, 0, 1, 0]' : 0.0960991}
{'[0, 3, 3, 6, 0, 5, 1, 1, 13, 0, 5, 2, 1, 1, 0, 0, 1, 0]' : 0.0961499}
{'[0, 3, 3, 6, 0, 5, 1, 1, 13, 0, 5, 2, 1, 1, 0, 0, 1, 0]' : 0.0960901}
{'[0, 3, 3, 6, 0, 5, 1, 1, 13, 0, 5, 2, 1, 1, 0, 0, 1, 0]' : 0.095994}
{'[0, 3, 3, 6, 0, 5, 1, 1, 13, 0, 5, 2, 1, 1, 0, 0, 1, 0]' : 0.0963058}
{'[0, 3, 3, 6, 0, 5, 1, 1, 13, 0, 5, 2, 1, 1, 0, 0, 1, 0]' : 0.0961881}
{'[0, 3, 3, 6, 0, 5, 1, 1, 13, 0, 5, 2, 1, 1, 0, 0, 1, 0]' : 0.0960579}
{'[0, 3, 3, 6, 0, 5, 1, 1, 13, 0, 5, 2, 1, 1, 0, 0, 1, 0]' : 0.095993}
{'[0, 3, 3, 6, 0, 5, 1, 1, 13, 0, 5, 2, 1, 1, 0, 0, 1, 0]' : 0.0960369}
{'[0, 3, 3, 6, 0, 5, 1, 1, 13, 0, 5, 2, 1, 1, 0, 0, 1, 0]' : 0.0960689}

out:
 ["{'[0, 3, 3, 6, 0, 5, 1, 1, 13, 0, 5, 2, 1, 1, 0, 0, 1, 0]' : 0.0964401}", "{'[0, 3, 3, 6, 0, 5, 1, 1, 13, 0, 5, 2, 1, 1, 0, 0, 1, 0]' : 0.0960391}", "{'[0, 3, 3, 6, 0, 5, 1, 1, 13, 0, 5, 2, 1, 1, 0, 0, 1, 0]' : 0.096143}", "{'[0, 3, 3, 6, 0, 5, 1, 1, 13, 0, 5, 2, 1, 1, 0, 0, 1, 0]' : 0.0959718}", "{'[0, 3, 3, 6, 0, 5, 1, 1, 13, 0, 5, 2, 1, 1, 0, 0, 1, 0]' : 0.096071}", "{'[0, 3, 3, 6, 0, 5, 1, 1, 13, 0, 5, 2, 1, 1, 0, 0, 1, 0]' : 0.0960832}", "{'[0, 3, 3, 6, 0, 5, 1, 1, 13, 0, 5, 2, 1, 1, 0, 0, 1, 0]' : 0.0961182}", "{'[0, 3, 3, 6, 0, 5, 1, 1, 13, 0, 5, 2, 1, 1, 0, 0, 1, 0]' : 0.095973}", "{'[0, 3, 3, 6, 0, 5, 1, 1, 13, 0, 5, 2, 1, 1, 0, 0, 1, 0]' : 0.096056}", "{'[0, 3, 3, 6, 0, 5, 1, 1, 13, 0, 5, 2, 1, 1, 0, 0, 1, 0]' : 0.0964632}", "{'[0, 3, 3, 6, 0, 5, 1, 1, 13, 0, 5, 2, 1, 1, 0, 0, 1, 0]' : 0.0960951}", "{'[0, 3, 3, 6, 0, 5, 1, 1, 13, 0, 5, 2, 1, 1, 0, 0, 1, 0]' : 0.0960419}", "{'[0, 3, 3, 6, 0, 5, 1, 1, 13, 0, 5, 2, 1, 1, 0, 0, 1, 0]' : 0.096077}", "{'[0, 3, 3, 6, 0, 5, 1, 1, 13, 0, 5, 2, 1, 1, 0, 0, 1, 0]' : 0.0962}", "{'[0, 3, 3, 6, 0, 5, 1, 1, 13, 0, 5, 2, 1, 1, 0, 0, 1, 0]' : 0.0960531}", "{'[0, 3, 3, 6, 0, 5, 1, 1, 13, 0, 5, 2, 1, 1, 0, 0, 1, 0]' : 0.095963}", "{'[0, 3, 3, 6, 0, 5, 1, 1, 13, 0, 5, 2, 1, 1, 0, 0, 1, 0]' : 0.096082}", "{'[0, 3, 3, 6, 0, 5, 1, 1, 13, 0, 5, 2, 1, 1, 0, 0, 1, 0]' : 0.0960548}", "{'[0, 3, 3, 6, 0, 5, 1, 1, 13, 0, 5, 2, 1, 1, 0, 0, 1, 0]' : 0.0960641}", "{'[0, 3, 3, 6, 0, 5, 1, 1, 13, 0, 5, 2, 1, 1, 0, 0, 1, 0]' : 0.0959749}", "{'[0, 3, 3, 6, 0, 5, 1, 1, 13, 0, 5, 2, 1, 1, 0, 0, 1, 0]' : 0.0960991}", "{'[0, 3, 3, 6, 0, 5, 1, 1, 13, 0, 5, 2, 1, 1, 0, 0, 1, 0]' : 0.0961499}", "{'[0, 3, 3, 6, 0, 5, 1, 1, 13, 0, 5, 2, 1, 1, 0, 0, 1, 0]' : 0.0960901}", "{'[0, 3, 3, 6, 0, 5, 1, 1, 13, 0, 5, 2, 1, 1, 0, 0, 1, 0]' : 0.095994}", "{'[0, 3, 3, 6, 0, 5, 1, 1, 13, 0, 5, 2, 1, 1, 0, 0, 1, 0]' : 0.0963058}", "{'[0, 3, 3, 6, 0, 5, 1, 1, 13, 0, 5, 2, 1, 1, 0, 0, 1, 0]' : 0.0961881}", "{'[0, 3, 3, 6, 0, 5, 1, 1, 13, 0, 5, 2, 1, 1, 0, 0, 1, 0]' : 0.0960579}", "{'[0, 3, 3, 6, 0, 5, 1, 1, 13, 0, 5, 2, 1, 1, 0, 0, 1, 0]' : 0.095993}", "{'[0, 3, 3, 6, 0, 5, 1, 1, 13, 0, 5, 2, 1, 1, 0, 0, 1, 0]' : 0.0960369}", "{'[0, 3, 3, 6, 0, 5, 1, 1, 13, 0, 5, 2, 1, 1, 0, 0, 1, 0]' : 0.0960689}"]
returning from 'run': {'[0, 3, 3, 6, 0, 5, 1, 1, 13, 0, 5, 2, 1, 1, 0, 0, 1, 0]': ([0.0964401, 0.0960391, 0.096143, 0.0959718, 0.096071, 0.0960832, 0.0961182, 0.095973, 0.096056, 0.0964632, 0.0960951, 0.0960419, 0.096077, 0.0962, 0.0960531, 0.095963, 0.096082, 0.0960548, 0.0960641, 0.0959749, 0.0960991, 0.0961499, 0.0960901, 0.095994, 0.0963058, 0.0961881, 0.0960579, 0.095993, 0.0960369, 0.0960689], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 3, 3, 6, 0, 5, 1, 1, 13, 0, 5, 2, 1, 1, 0, 0, 1, 0]': ([0.0964401, 0.0960391, 0.096143, 0.0959718, 0.096071, 0.0960832, 0.0961182, 0.095973, 0.096056, 0.0964632, 0.0960951, 0.0960419, 0.096077, 0.0962, 0.0960531, 0.095963, 0.096082, 0.0960548, 0.0960641, 0.0959749, 0.0960991, 0.0961499, 0.0960901, 0.095994, 0.0963058, 0.0961881, 0.0960579, 0.095993, 0.0960369, 0.0960689], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = jjj
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	6
        Additions: 		8132
        Multiplications: 	2178
        Divisions: 		0
        Logical: 		0
        Reads: 			12039
        Writes: 		1180
        Comparisons:		22
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest3.exe __orio_perftest3.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest3.exe  
Program Test Output: 
{'[1, 5, 2, 5, 3, 1, 1, 0, 29, 0, 25, 4, 2, 0, 0, 0, 0, 1]' : 0.172325}
{'[1, 5, 2, 5, 3, 1, 1, 0, 29, 0, 25, 4, 2, 0, 0, 0, 0, 1]' : 0.172294}
{'[1, 5, 2, 5, 3, 1, 1, 0, 29, 0, 25, 4, 2, 0, 0, 0, 0, 1]' : 0.172367}
{'[1, 5, 2, 5, 3, 1, 1, 0, 29, 0, 25, 4, 2, 0, 0, 0, 0, 1]' : 0.172399}
{'[1, 5, 2, 5, 3, 1, 1, 0, 29, 0, 25, 4, 2, 0, 0, 0, 0, 1]' : 0.172317}
{'[1, 5, 2, 5, 3, 1, 1, 0, 29, 0, 25, 4, 2, 0, 0, 0, 0, 1]' : 0.173845}
{'[1, 5, 2, 5, 3, 1, 1, 0, 29, 0, 25, 4, 2, 0, 0, 0, 0, 1]' : 0.17226}
{'[1, 5, 2, 5, 3, 1, 1, 0, 29, 0, 25, 4, 2, 0, 0, 0, 0, 1]' : 0.172316}
{'[1, 5, 2, 5, 3, 1, 1, 0, 29, 0, 25, 4, 2, 0, 0, 0, 0, 1]' : 0.17247}
{'[1, 5, 2, 5, 3, 1, 1, 0, 29, 0, 25, 4, 2, 0, 0, 0, 0, 1]' : 0.172402}
{'[1, 5, 2, 5, 3, 1, 1, 0, 29, 0, 25, 4, 2, 0, 0, 0, 0, 1]' : 0.172439}
{'[1, 5, 2, 5, 3, 1, 1, 0, 29, 0, 25, 4, 2, 0, 0, 0, 0, 1]' : 0.17233}
{'[1, 5, 2, 5, 3, 1, 1, 0, 29, 0, 25, 4, 2, 0, 0, 0, 0, 1]' : 0.17233}
{'[1, 5, 2, 5, 3, 1, 1, 0, 29, 0, 25, 4, 2, 0, 0, 0, 0, 1]' : 0.172344}
{'[1, 5, 2, 5, 3, 1, 1, 0, 29, 0, 25, 4, 2, 0, 0, 0, 0, 1]' : 0.17235}
{'[1, 5, 2, 5, 3, 1, 1, 0, 29, 0, 25, 4, 2, 0, 0, 0, 0, 1]' : 0.172344}
{'[1, 5, 2, 5, 3, 1, 1, 0, 29, 0, 25, 4, 2, 0, 0, 0, 0, 1]' : 0.172317}
{'[1, 5, 2, 5, 3, 1, 1, 0, 29, 0, 25, 4, 2, 0, 0, 0, 0, 1]' : 0.172433}
{'[1, 5, 2, 5, 3, 1, 1, 0, 29, 0, 25, 4, 2, 0, 0, 0, 0, 1]' : 0.172327}
{'[1, 5, 2, 5, 3, 1, 1, 0, 29, 0, 25, 4, 2, 0, 0, 0, 0, 1]' : 0.1723}
{'[1, 5, 2, 5, 3, 1, 1, 0, 29, 0, 25, 4, 2, 0, 0, 0, 0, 1]' : 0.172406}
{'[1, 5, 2, 5, 3, 1, 1, 0, 29, 0, 25, 4, 2, 0, 0, 0, 0, 1]' : 0.172276}
{'[1, 5, 2, 5, 3, 1, 1, 0, 29, 0, 25, 4, 2, 0, 0, 0, 0, 1]' : 0.172359}
{'[1, 5, 2, 5, 3, 1, 1, 0, 29, 0, 25, 4, 2, 0, 0, 0, 0, 1]' : 0.17239}
{'[1, 5, 2, 5, 3, 1, 1, 0, 29, 0, 25, 4, 2, 0, 0, 0, 0, 1]' : 0.172326}
{'[1, 5, 2, 5, 3, 1, 1, 0, 29, 0, 25, 4, 2, 0, 0, 0, 0, 1]' : 0.172355}
{'[1, 5, 2, 5, 3, 1, 1, 0, 29, 0, 25, 4, 2, 0, 0, 0, 0, 1]' : 0.172541}
{'[1, 5, 2, 5, 3, 1, 1, 0, 29, 0, 25, 4, 2, 0, 0, 0, 0, 1]' : 0.172435}
{'[1, 5, 2, 5, 3, 1, 1, 0, 29, 0, 25, 4, 2, 0, 0, 0, 0, 1]' : 0.172353}
{'[1, 5, 2, 5, 3, 1, 1, 0, 29, 0, 25, 4, 2, 0, 0, 0, 0, 1]' : 0.172267}

out:
 ["{'[1, 5, 2, 5, 3, 1, 1, 0, 29, 0, 25, 4, 2, 0, 0, 0, 0, 1]' : 0.172325}", "{'[1, 5, 2, 5, 3, 1, 1, 0, 29, 0, 25, 4, 2, 0, 0, 0, 0, 1]' : 0.172294}", "{'[1, 5, 2, 5, 3, 1, 1, 0, 29, 0, 25, 4, 2, 0, 0, 0, 0, 1]' : 0.172367}", "{'[1, 5, 2, 5, 3, 1, 1, 0, 29, 0, 25, 4, 2, 0, 0, 0, 0, 1]' : 0.172399}", "{'[1, 5, 2, 5, 3, 1, 1, 0, 29, 0, 25, 4, 2, 0, 0, 0, 0, 1]' : 0.172317}", "{'[1, 5, 2, 5, 3, 1, 1, 0, 29, 0, 25, 4, 2, 0, 0, 0, 0, 1]' : 0.173845}", "{'[1, 5, 2, 5, 3, 1, 1, 0, 29, 0, 25, 4, 2, 0, 0, 0, 0, 1]' : 0.17226}", "{'[1, 5, 2, 5, 3, 1, 1, 0, 29, 0, 25, 4, 2, 0, 0, 0, 0, 1]' : 0.172316}", "{'[1, 5, 2, 5, 3, 1, 1, 0, 29, 0, 25, 4, 2, 0, 0, 0, 0, 1]' : 0.17247}", "{'[1, 5, 2, 5, 3, 1, 1, 0, 29, 0, 25, 4, 2, 0, 0, 0, 0, 1]' : 0.172402}", "{'[1, 5, 2, 5, 3, 1, 1, 0, 29, 0, 25, 4, 2, 0, 0, 0, 0, 1]' : 0.172439}", "{'[1, 5, 2, 5, 3, 1, 1, 0, 29, 0, 25, 4, 2, 0, 0, 0, 0, 1]' : 0.17233}", "{'[1, 5, 2, 5, 3, 1, 1, 0, 29, 0, 25, 4, 2, 0, 0, 0, 0, 1]' : 0.17233}", "{'[1, 5, 2, 5, 3, 1, 1, 0, 29, 0, 25, 4, 2, 0, 0, 0, 0, 1]' : 0.172344}", "{'[1, 5, 2, 5, 3, 1, 1, 0, 29, 0, 25, 4, 2, 0, 0, 0, 0, 1]' : 0.17235}", "{'[1, 5, 2, 5, 3, 1, 1, 0, 29, 0, 25, 4, 2, 0, 0, 0, 0, 1]' : 0.172344}", "{'[1, 5, 2, 5, 3, 1, 1, 0, 29, 0, 25, 4, 2, 0, 0, 0, 0, 1]' : 0.172317}", "{'[1, 5, 2, 5, 3, 1, 1, 0, 29, 0, 25, 4, 2, 0, 0, 0, 0, 1]' : 0.172433}", "{'[1, 5, 2, 5, 3, 1, 1, 0, 29, 0, 25, 4, 2, 0, 0, 0, 0, 1]' : 0.172327}", "{'[1, 5, 2, 5, 3, 1, 1, 0, 29, 0, 25, 4, 2, 0, 0, 0, 0, 1]' : 0.1723}", "{'[1, 5, 2, 5, 3, 1, 1, 0, 29, 0, 25, 4, 2, 0, 0, 0, 0, 1]' : 0.172406}", "{'[1, 5, 2, 5, 3, 1, 1, 0, 29, 0, 25, 4, 2, 0, 0, 0, 0, 1]' : 0.172276}", "{'[1, 5, 2, 5, 3, 1, 1, 0, 29, 0, 25, 4, 2, 0, 0, 0, 0, 1]' : 0.172359}", "{'[1, 5, 2, 5, 3, 1, 1, 0, 29, 0, 25, 4, 2, 0, 0, 0, 0, 1]' : 0.17239}", "{'[1, 5, 2, 5, 3, 1, 1, 0, 29, 0, 25, 4, 2, 0, 0, 0, 0, 1]' : 0.172326}", "{'[1, 5, 2, 5, 3, 1, 1, 0, 29, 0, 25, 4, 2, 0, 0, 0, 0, 1]' : 0.172355}", "{'[1, 5, 2, 5, 3, 1, 1, 0, 29, 0, 25, 4, 2, 0, 0, 0, 0, 1]' : 0.172541}", "{'[1, 5, 2, 5, 3, 1, 1, 0, 29, 0, 25, 4, 2, 0, 0, 0, 0, 1]' : 0.172435}", "{'[1, 5, 2, 5, 3, 1, 1, 0, 29, 0, 25, 4, 2, 0, 0, 0, 0, 1]' : 0.172353}", "{'[1, 5, 2, 5, 3, 1, 1, 0, 29, 0, 25, 4, 2, 0, 0, 0, 0, 1]' : 0.172267}"]
returning from 'run': {'[1, 5, 2, 5, 3, 1, 1, 0, 29, 0, 25, 4, 2, 0, 0, 0, 0, 1]': ([0.172325, 0.172294, 0.172367, 0.172399, 0.172317, 0.173845, 0.17226, 0.172316, 0.17247, 0.172402, 0.172439, 0.17233, 0.17233, 0.172344, 0.17235, 0.172344, 0.172317, 0.172433, 0.172327, 0.1723, 0.172406, 0.172276, 0.172359, 0.17239, 0.172326, 0.172355, 0.172541, 0.172435, 0.172353, 0.172267], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 5, 2, 5, 3, 1, 1, 0, 29, 0, 25, 4, 2, 0, 0, 0, 0, 1]': ([0.172325, 0.172294, 0.172367, 0.172399, 0.172317, 0.173845, 0.17226, 0.172316, 0.17247, 0.172402, 0.172439, 0.17233, 0.17233, 0.172344, 0.17235, 0.172344, 0.172317, 0.172433, 0.172327, 0.1723, 0.172406, 0.172276, 0.172359, 0.17239, 0.172326, 0.172355, 0.172541, 0.172435, 0.172353, 0.172267], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		98
        Multiplications: 	16
        Divisions: 		0
        Logical: 		0
        Reads: 			231
        Writes: 		58
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest4.exe __orio_perftest4.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest4.exe  
Program Test Output: 
{'[5, 4, 3, 4, 0, 0, 1, 1, 0, 0, 1, 3, 0, 0, 0, 1, 1, 1]' : 0.177722}
{'[5, 4, 3, 4, 0, 0, 1, 1, 0, 0, 1, 3, 0, 0, 0, 1, 1, 1]' : 0.177628}
{'[5, 4, 3, 4, 0, 0, 1, 1, 0, 0, 1, 3, 0, 0, 0, 1, 1, 1]' : 0.177548}
{'[5, 4, 3, 4, 0, 0, 1, 1, 0, 0, 1, 3, 0, 0, 0, 1, 1, 1]' : 0.177624}
{'[5, 4, 3, 4, 0, 0, 1, 1, 0, 0, 1, 3, 0, 0, 0, 1, 1, 1]' : 0.177524}
{'[5, 4, 3, 4, 0, 0, 1, 1, 0, 0, 1, 3, 0, 0, 0, 1, 1, 1]' : 0.177622}
{'[5, 4, 3, 4, 0, 0, 1, 1, 0, 0, 1, 3, 0, 0, 0, 1, 1, 1]' : 0.177535}
{'[5, 4, 3, 4, 0, 0, 1, 1, 0, 0, 1, 3, 0, 0, 0, 1, 1, 1]' : 0.177832}
{'[5, 4, 3, 4, 0, 0, 1, 1, 0, 0, 1, 3, 0, 0, 0, 1, 1, 1]' : 0.177741}
{'[5, 4, 3, 4, 0, 0, 1, 1, 0, 0, 1, 3, 0, 0, 0, 1, 1, 1]' : 0.177665}
{'[5, 4, 3, 4, 0, 0, 1, 1, 0, 0, 1, 3, 0, 0, 0, 1, 1, 1]' : 0.177491}
{'[5, 4, 3, 4, 0, 0, 1, 1, 0, 0, 1, 3, 0, 0, 0, 1, 1, 1]' : 0.177529}
{'[5, 4, 3, 4, 0, 0, 1, 1, 0, 0, 1, 3, 0, 0, 0, 1, 1, 1]' : 0.177596}
{'[5, 4, 3, 4, 0, 0, 1, 1, 0, 0, 1, 3, 0, 0, 0, 1, 1, 1]' : 0.177583}
{'[5, 4, 3, 4, 0, 0, 1, 1, 0, 0, 1, 3, 0, 0, 0, 1, 1, 1]' : 0.177576}
{'[5, 4, 3, 4, 0, 0, 1, 1, 0, 0, 1, 3, 0, 0, 0, 1, 1, 1]' : 0.177787}
{'[5, 4, 3, 4, 0, 0, 1, 1, 0, 0, 1, 3, 0, 0, 0, 1, 1, 1]' : 0.177603}
{'[5, 4, 3, 4, 0, 0, 1, 1, 0, 0, 1, 3, 0, 0, 0, 1, 1, 1]' : 0.177555}
{'[5, 4, 3, 4, 0, 0, 1, 1, 0, 0, 1, 3, 0, 0, 0, 1, 1, 1]' : 0.177614}
{'[5, 4, 3, 4, 0, 0, 1, 1, 0, 0, 1, 3, 0, 0, 0, 1, 1, 1]' : 0.177552}
{'[5, 4, 3, 4, 0, 0, 1, 1, 0, 0, 1, 3, 0, 0, 0, 1, 1, 1]' : 0.177562}
{'[5, 4, 3, 4, 0, 0, 1, 1, 0, 0, 1, 3, 0, 0, 0, 1, 1, 1]' : 0.177552}
{'[5, 4, 3, 4, 0, 0, 1, 1, 0, 0, 1, 3, 0, 0, 0, 1, 1, 1]' : 0.17759}
{'[5, 4, 3, 4, 0, 0, 1, 1, 0, 0, 1, 3, 0, 0, 0, 1, 1, 1]' : 0.17759}
{'[5, 4, 3, 4, 0, 0, 1, 1, 0, 0, 1, 3, 0, 0, 0, 1, 1, 1]' : 0.177701}
{'[5, 4, 3, 4, 0, 0, 1, 1, 0, 0, 1, 3, 0, 0, 0, 1, 1, 1]' : 0.17773}
{'[5, 4, 3, 4, 0, 0, 1, 1, 0, 0, 1, 3, 0, 0, 0, 1, 1, 1]' : 0.177561}
{'[5, 4, 3, 4, 0, 0, 1, 1, 0, 0, 1, 3, 0, 0, 0, 1, 1, 1]' : 0.177619}
{'[5, 4, 3, 4, 0, 0, 1, 1, 0, 0, 1, 3, 0, 0, 0, 1, 1, 1]' : 0.177544}
{'[5, 4, 3, 4, 0, 0, 1, 1, 0, 0, 1, 3, 0, 0, 0, 1, 1, 1]' : 0.177553}

out:
 ["{'[5, 4, 3, 4, 0, 0, 1, 1, 0, 0, 1, 3, 0, 0, 0, 1, 1, 1]' : 0.177722}", "{'[5, 4, 3, 4, 0, 0, 1, 1, 0, 0, 1, 3, 0, 0, 0, 1, 1, 1]' : 0.177628}", "{'[5, 4, 3, 4, 0, 0, 1, 1, 0, 0, 1, 3, 0, 0, 0, 1, 1, 1]' : 0.177548}", "{'[5, 4, 3, 4, 0, 0, 1, 1, 0, 0, 1, 3, 0, 0, 0, 1, 1, 1]' : 0.177624}", "{'[5, 4, 3, 4, 0, 0, 1, 1, 0, 0, 1, 3, 0, 0, 0, 1, 1, 1]' : 0.177524}", "{'[5, 4, 3, 4, 0, 0, 1, 1, 0, 0, 1, 3, 0, 0, 0, 1, 1, 1]' : 0.177622}", "{'[5, 4, 3, 4, 0, 0, 1, 1, 0, 0, 1, 3, 0, 0, 0, 1, 1, 1]' : 0.177535}", "{'[5, 4, 3, 4, 0, 0, 1, 1, 0, 0, 1, 3, 0, 0, 0, 1, 1, 1]' : 0.177832}", "{'[5, 4, 3, 4, 0, 0, 1, 1, 0, 0, 1, 3, 0, 0, 0, 1, 1, 1]' : 0.177741}", "{'[5, 4, 3, 4, 0, 0, 1, 1, 0, 0, 1, 3, 0, 0, 0, 1, 1, 1]' : 0.177665}", "{'[5, 4, 3, 4, 0, 0, 1, 1, 0, 0, 1, 3, 0, 0, 0, 1, 1, 1]' : 0.177491}", "{'[5, 4, 3, 4, 0, 0, 1, 1, 0, 0, 1, 3, 0, 0, 0, 1, 1, 1]' : 0.177529}", "{'[5, 4, 3, 4, 0, 0, 1, 1, 0, 0, 1, 3, 0, 0, 0, 1, 1, 1]' : 0.177596}", "{'[5, 4, 3, 4, 0, 0, 1, 1, 0, 0, 1, 3, 0, 0, 0, 1, 1, 1]' : 0.177583}", "{'[5, 4, 3, 4, 0, 0, 1, 1, 0, 0, 1, 3, 0, 0, 0, 1, 1, 1]' : 0.177576}", "{'[5, 4, 3, 4, 0, 0, 1, 1, 0, 0, 1, 3, 0, 0, 0, 1, 1, 1]' : 0.177787}", "{'[5, 4, 3, 4, 0, 0, 1, 1, 0, 0, 1, 3, 0, 0, 0, 1, 1, 1]' : 0.177603}", "{'[5, 4, 3, 4, 0, 0, 1, 1, 0, 0, 1, 3, 0, 0, 0, 1, 1, 1]' : 0.177555}", "{'[5, 4, 3, 4, 0, 0, 1, 1, 0, 0, 1, 3, 0, 0, 0, 1, 1, 1]' : 0.177614}", "{'[5, 4, 3, 4, 0, 0, 1, 1, 0, 0, 1, 3, 0, 0, 0, 1, 1, 1]' : 0.177552}", "{'[5, 4, 3, 4, 0, 0, 1, 1, 0, 0, 1, 3, 0, 0, 0, 1, 1, 1]' : 0.177562}", "{'[5, 4, 3, 4, 0, 0, 1, 1, 0, 0, 1, 3, 0, 0, 0, 1, 1, 1]' : 0.177552}", "{'[5, 4, 3, 4, 0, 0, 1, 1, 0, 0, 1, 3, 0, 0, 0, 1, 1, 1]' : 0.17759}", "{'[5, 4, 3, 4, 0, 0, 1, 1, 0, 0, 1, 3, 0, 0, 0, 1, 1, 1]' : 0.17759}", "{'[5, 4, 3, 4, 0, 0, 1, 1, 0, 0, 1, 3, 0, 0, 0, 1, 1, 1]' : 0.177701}", "{'[5, 4, 3, 4, 0, 0, 1, 1, 0, 0, 1, 3, 0, 0, 0, 1, 1, 1]' : 0.17773}", "{'[5, 4, 3, 4, 0, 0, 1, 1, 0, 0, 1, 3, 0, 0, 0, 1, 1, 1]' : 0.177561}", "{'[5, 4, 3, 4, 0, 0, 1, 1, 0, 0, 1, 3, 0, 0, 0, 1, 1, 1]' : 0.177619}", "{'[5, 4, 3, 4, 0, 0, 1, 1, 0, 0, 1, 3, 0, 0, 0, 1, 1, 1]' : 0.177544}", "{'[5, 4, 3, 4, 0, 0, 1, 1, 0, 0, 1, 3, 0, 0, 0, 1, 1, 1]' : 0.177553}"]
returning from 'run': {'[5, 4, 3, 4, 0, 0, 1, 1, 0, 0, 1, 3, 0, 0, 0, 1, 1, 1]': ([0.177722, 0.177628, 0.177548, 0.177624, 0.177524, 0.177622, 0.177535, 0.177832, 0.177741, 0.177665, 0.177491, 0.177529, 0.177596, 0.177583, 0.177576, 0.177787, 0.177603, 0.177555, 0.177614, 0.177552, 0.177562, 0.177552, 0.17759, 0.17759, 0.177701, 0.17773, 0.177561, 0.177619, 0.177544, 0.177553], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 4, 3, 4, 0, 0, 1, 1, 0, 0, 1, 3, 0, 0, 0, 1, 1, 1]': ([0.177722, 0.177628, 0.177548, 0.177624, 0.177524, 0.177622, 0.177535, 0.177832, 0.177741, 0.177665, 0.177491, 0.177529, 0.177596, 0.177583, 0.177576, 0.177787, 0.177603, 0.177555, 0.177614, 0.177552, 0.177562, 0.177552, 0.17759, 0.17759, 0.177701, 0.17773, 0.177561, 0.177619, 0.177544, 0.177553], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	6
        Additions: 		369
        Multiplications: 	122
        Divisions: 		0
        Logical: 		0
        Reads: 			790
        Writes: 		117
        Comparisons:		15
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest5.exe __orio_perftest5.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest5.exe  
Program Test Output: 
{'[6, 1, 2, 5, 2, 2, 1, 0, 12, 0, 18, 7, 0, 0, 2, 0, 1, 1]' : 0.205222}
{'[6, 1, 2, 5, 2, 2, 1, 0, 12, 0, 18, 7, 0, 0, 2, 0, 1, 1]' : 0.205243}
{'[6, 1, 2, 5, 2, 2, 1, 0, 12, 0, 18, 7, 0, 0, 2, 0, 1, 1]' : 0.205395}
{'[6, 1, 2, 5, 2, 2, 1, 0, 12, 0, 18, 7, 0, 0, 2, 0, 1, 1]' : 0.205355}
{'[6, 1, 2, 5, 2, 2, 1, 0, 12, 0, 18, 7, 0, 0, 2, 0, 1, 1]' : 0.20526}
{'[6, 1, 2, 5, 2, 2, 1, 0, 12, 0, 18, 7, 0, 0, 2, 0, 1, 1]' : 0.205208}
{'[6, 1, 2, 5, 2, 2, 1, 0, 12, 0, 18, 7, 0, 0, 2, 0, 1, 1]' : 0.205189}
{'[6, 1, 2, 5, 2, 2, 1, 0, 12, 0, 18, 7, 0, 0, 2, 0, 1, 1]' : 0.20514}
{'[6, 1, 2, 5, 2, 2, 1, 0, 12, 0, 18, 7, 0, 0, 2, 0, 1, 1]' : 0.205304}
{'[6, 1, 2, 5, 2, 2, 1, 0, 12, 0, 18, 7, 0, 0, 2, 0, 1, 1]' : 0.205325}
{'[6, 1, 2, 5, 2, 2, 1, 0, 12, 0, 18, 7, 0, 0, 2, 0, 1, 1]' : 0.205199}
{'[6, 1, 2, 5, 2, 2, 1, 0, 12, 0, 18, 7, 0, 0, 2, 0, 1, 1]' : 0.2053}
{'[6, 1, 2, 5, 2, 2, 1, 0, 12, 0, 18, 7, 0, 0, 2, 0, 1, 1]' : 0.205157}
{'[6, 1, 2, 5, 2, 2, 1, 0, 12, 0, 18, 7, 0, 0, 2, 0, 1, 1]' : 0.205333}
{'[6, 1, 2, 5, 2, 2, 1, 0, 12, 0, 18, 7, 0, 0, 2, 0, 1, 1]' : 0.205194}
{'[6, 1, 2, 5, 2, 2, 1, 0, 12, 0, 18, 7, 0, 0, 2, 0, 1, 1]' : 0.205273}
{'[6, 1, 2, 5, 2, 2, 1, 0, 12, 0, 18, 7, 0, 0, 2, 0, 1, 1]' : 0.205301}
{'[6, 1, 2, 5, 2, 2, 1, 0, 12, 0, 18, 7, 0, 0, 2, 0, 1, 1]' : 0.205256}
{'[6, 1, 2, 5, 2, 2, 1, 0, 12, 0, 18, 7, 0, 0, 2, 0, 1, 1]' : 0.205182}
{'[6, 1, 2, 5, 2, 2, 1, 0, 12, 0, 18, 7, 0, 0, 2, 0, 1, 1]' : 0.205187}
{'[6, 1, 2, 5, 2, 2, 1, 0, 12, 0, 18, 7, 0, 0, 2, 0, 1, 1]' : 0.205183}
{'[6, 1, 2, 5, 2, 2, 1, 0, 12, 0, 18, 7, 0, 0, 2, 0, 1, 1]' : 0.205283}
{'[6, 1, 2, 5, 2, 2, 1, 0, 12, 0, 18, 7, 0, 0, 2, 0, 1, 1]' : 0.205308}
{'[6, 1, 2, 5, 2, 2, 1, 0, 12, 0, 18, 7, 0, 0, 2, 0, 1, 1]' : 0.205273}
{'[6, 1, 2, 5, 2, 2, 1, 0, 12, 0, 18, 7, 0, 0, 2, 0, 1, 1]' : 0.205373}
{'[6, 1, 2, 5, 2, 2, 1, 0, 12, 0, 18, 7, 0, 0, 2, 0, 1, 1]' : 0.20527}
{'[6, 1, 2, 5, 2, 2, 1, 0, 12, 0, 18, 7, 0, 0, 2, 0, 1, 1]' : 0.205288}
{'[6, 1, 2, 5, 2, 2, 1, 0, 12, 0, 18, 7, 0, 0, 2, 0, 1, 1]' : 0.205225}
{'[6, 1, 2, 5, 2, 2, 1, 0, 12, 0, 18, 7, 0, 0, 2, 0, 1, 1]' : 0.205458}
{'[6, 1, 2, 5, 2, 2, 1, 0, 12, 0, 18, 7, 0, 0, 2, 0, 1, 1]' : 0.205554}

out:
 ["{'[6, 1, 2, 5, 2, 2, 1, 0, 12, 0, 18, 7, 0, 0, 2, 0, 1, 1]' : 0.205222}", "{'[6, 1, 2, 5, 2, 2, 1, 0, 12, 0, 18, 7, 0, 0, 2, 0, 1, 1]' : 0.205243}", "{'[6, 1, 2, 5, 2, 2, 1, 0, 12, 0, 18, 7, 0, 0, 2, 0, 1, 1]' : 0.205395}", "{'[6, 1, 2, 5, 2, 2, 1, 0, 12, 0, 18, 7, 0, 0, 2, 0, 1, 1]' : 0.205355}", "{'[6, 1, 2, 5, 2, 2, 1, 0, 12, 0, 18, 7, 0, 0, 2, 0, 1, 1]' : 0.20526}", "{'[6, 1, 2, 5, 2, 2, 1, 0, 12, 0, 18, 7, 0, 0, 2, 0, 1, 1]' : 0.205208}", "{'[6, 1, 2, 5, 2, 2, 1, 0, 12, 0, 18, 7, 0, 0, 2, 0, 1, 1]' : 0.205189}", "{'[6, 1, 2, 5, 2, 2, 1, 0, 12, 0, 18, 7, 0, 0, 2, 0, 1, 1]' : 0.20514}", "{'[6, 1, 2, 5, 2, 2, 1, 0, 12, 0, 18, 7, 0, 0, 2, 0, 1, 1]' : 0.205304}", "{'[6, 1, 2, 5, 2, 2, 1, 0, 12, 0, 18, 7, 0, 0, 2, 0, 1, 1]' : 0.205325}", "{'[6, 1, 2, 5, 2, 2, 1, 0, 12, 0, 18, 7, 0, 0, 2, 0, 1, 1]' : 0.205199}", "{'[6, 1, 2, 5, 2, 2, 1, 0, 12, 0, 18, 7, 0, 0, 2, 0, 1, 1]' : 0.2053}", "{'[6, 1, 2, 5, 2, 2, 1, 0, 12, 0, 18, 7, 0, 0, 2, 0, 1, 1]' : 0.205157}", "{'[6, 1, 2, 5, 2, 2, 1, 0, 12, 0, 18, 7, 0, 0, 2, 0, 1, 1]' : 0.205333}", "{'[6, 1, 2, 5, 2, 2, 1, 0, 12, 0, 18, 7, 0, 0, 2, 0, 1, 1]' : 0.205194}", "{'[6, 1, 2, 5, 2, 2, 1, 0, 12, 0, 18, 7, 0, 0, 2, 0, 1, 1]' : 0.205273}", "{'[6, 1, 2, 5, 2, 2, 1, 0, 12, 0, 18, 7, 0, 0, 2, 0, 1, 1]' : 0.205301}", "{'[6, 1, 2, 5, 2, 2, 1, 0, 12, 0, 18, 7, 0, 0, 2, 0, 1, 1]' : 0.205256}", "{'[6, 1, 2, 5, 2, 2, 1, 0, 12, 0, 18, 7, 0, 0, 2, 0, 1, 1]' : 0.205182}", "{'[6, 1, 2, 5, 2, 2, 1, 0, 12, 0, 18, 7, 0, 0, 2, 0, 1, 1]' : 0.205187}", "{'[6, 1, 2, 5, 2, 2, 1, 0, 12, 0, 18, 7, 0, 0, 2, 0, 1, 1]' : 0.205183}", "{'[6, 1, 2, 5, 2, 2, 1, 0, 12, 0, 18, 7, 0, 0, 2, 0, 1, 1]' : 0.205283}", "{'[6, 1, 2, 5, 2, 2, 1, 0, 12, 0, 18, 7, 0, 0, 2, 0, 1, 1]' : 0.205308}", "{'[6, 1, 2, 5, 2, 2, 1, 0, 12, 0, 18, 7, 0, 0, 2, 0, 1, 1]' : 0.205273}", "{'[6, 1, 2, 5, 2, 2, 1, 0, 12, 0, 18, 7, 0, 0, 2, 0, 1, 1]' : 0.205373}", "{'[6, 1, 2, 5, 2, 2, 1, 0, 12, 0, 18, 7, 0, 0, 2, 0, 1, 1]' : 0.20527}", "{'[6, 1, 2, 5, 2, 2, 1, 0, 12, 0, 18, 7, 0, 0, 2, 0, 1, 1]' : 0.205288}", "{'[6, 1, 2, 5, 2, 2, 1, 0, 12, 0, 18, 7, 0, 0, 2, 0, 1, 1]' : 0.205225}", "{'[6, 1, 2, 5, 2, 2, 1, 0, 12, 0, 18, 7, 0, 0, 2, 0, 1, 1]' : 0.205458}", "{'[6, 1, 2, 5, 2, 2, 1, 0, 12, 0, 18, 7, 0, 0, 2, 0, 1, 1]' : 0.205554}"]
returning from 'run': {'[6, 1, 2, 5, 2, 2, 1, 0, 12, 0, 18, 7, 0, 0, 2, 0, 1, 1]': ([0.205222, 0.205243, 0.205395, 0.205355, 0.20526, 0.205208, 0.205189, 0.20514, 0.205304, 0.205325, 0.205199, 0.2053, 0.205157, 0.205333, 0.205194, 0.205273, 0.205301, 0.205256, 0.205182, 0.205187, 0.205183, 0.205283, 0.205308, 0.205273, 0.205373, 0.20527, 0.205288, 0.205225, 0.205458, 0.205554], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 1, 2, 5, 2, 2, 1, 0, 12, 0, 18, 7, 0, 0, 2, 0, 1, 1]': ([0.205222, 0.205243, 0.205395, 0.205355, 0.20526, 0.205208, 0.205189, 0.20514, 0.205304, 0.205325, 0.205199, 0.2053, 0.205157, 0.205333, 0.205194, 0.205273, 0.205301, 0.205256, 0.205182, 0.205187, 0.205183, 0.205283, 0.205308, 0.205273, 0.205373, 0.20527, 0.205288, 0.205225, 0.205458, 0.205554], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	44
        Max loop nest depth: 	6
        Additions: 		7224
        Multiplications: 	1848
        Divisions: 		0
        Logical: 		0
        Reads: 			10640
        Writes: 		1072
        Comparisons:		44
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest6.exe __orio_perftest6.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest6.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest6.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest6.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/Orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/Orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 528, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors, data)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 409, in dopt_anova
    budget)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 334, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 280, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/phrb/code/Orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest6.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/Orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/Orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 528, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors, data)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 409, in dopt_anova
    budget)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 334, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 280, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/phrb/code/Orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	98
        Max loop nest depth: 	5
        Additions: 		4142
        Multiplications: 	1782
        Divisions: 		0
        Logical: 		0
        Reads: 			8059
        Writes: 		1394
        Comparisons:		98
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest7.exe __orio_perftest7.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest7.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest7.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest7.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/Orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/Orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 528, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors, data)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 409, in dopt_anova
    budget)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 334, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 280, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/phrb/code/Orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest7.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/Orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/Orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 528, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors, data)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 409, in dopt_anova
    budget)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 334, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 280, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/phrb/code/Orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	118
        Max loop nest depth: 	6
        Additions: 		5480
        Multiplications: 	1176
        Divisions: 		0
        Logical: 		0
        Reads: 			8279
        Writes: 		974
        Comparisons:		118
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest8.exe __orio_perftest8.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest8.exe  
Program Test Output: 
{'[2, 1, 0, 6, 6, 5, 1, 1, 0, 19, 0, 18, 0, 1, 0, 0, 0, 1]' : 0.163872}
{'[2, 1, 0, 6, 6, 5, 1, 1, 0, 19, 0, 18, 0, 1, 0, 0, 0, 1]' : 0.163682}
{'[2, 1, 0, 6, 6, 5, 1, 1, 0, 19, 0, 18, 0, 1, 0, 0, 0, 1]' : 0.163701}
{'[2, 1, 0, 6, 6, 5, 1, 1, 0, 19, 0, 18, 0, 1, 0, 0, 0, 1]' : 0.163758}
{'[2, 1, 0, 6, 6, 5, 1, 1, 0, 19, 0, 18, 0, 1, 0, 0, 0, 1]' : 0.163629}
{'[2, 1, 0, 6, 6, 5, 1, 1, 0, 19, 0, 18, 0, 1, 0, 0, 0, 1]' : 0.163699}
{'[2, 1, 0, 6, 6, 5, 1, 1, 0, 19, 0, 18, 0, 1, 0, 0, 0, 1]' : 0.163846}
{'[2, 1, 0, 6, 6, 5, 1, 1, 0, 19, 0, 18, 0, 1, 0, 0, 0, 1]' : 0.163905}
{'[2, 1, 0, 6, 6, 5, 1, 1, 0, 19, 0, 18, 0, 1, 0, 0, 0, 1]' : 0.163743}
{'[2, 1, 0, 6, 6, 5, 1, 1, 0, 19, 0, 18, 0, 1, 0, 0, 0, 1]' : 0.163766}
{'[2, 1, 0, 6, 6, 5, 1, 1, 0, 19, 0, 18, 0, 1, 0, 0, 0, 1]' : 0.163758}
{'[2, 1, 0, 6, 6, 5, 1, 1, 0, 19, 0, 18, 0, 1, 0, 0, 0, 1]' : 0.163649}
{'[2, 1, 0, 6, 6, 5, 1, 1, 0, 19, 0, 18, 0, 1, 0, 0, 0, 1]' : 0.163618}
{'[2, 1, 0, 6, 6, 5, 1, 1, 0, 19, 0, 18, 0, 1, 0, 0, 0, 1]' : 0.1637}
{'[2, 1, 0, 6, 6, 5, 1, 1, 0, 19, 0, 18, 0, 1, 0, 0, 0, 1]' : 0.163797}
{'[2, 1, 0, 6, 6, 5, 1, 1, 0, 19, 0, 18, 0, 1, 0, 0, 0, 1]' : 0.163903}
{'[2, 1, 0, 6, 6, 5, 1, 1, 0, 19, 0, 18, 0, 1, 0, 0, 0, 1]' : 0.163735}
{'[2, 1, 0, 6, 6, 5, 1, 1, 0, 19, 0, 18, 0, 1, 0, 0, 0, 1]' : 0.163657}
{'[2, 1, 0, 6, 6, 5, 1, 1, 0, 19, 0, 18, 0, 1, 0, 0, 0, 1]' : 0.163789}
{'[2, 1, 0, 6, 6, 5, 1, 1, 0, 19, 0, 18, 0, 1, 0, 0, 0, 1]' : 0.163751}
{'[2, 1, 0, 6, 6, 5, 1, 1, 0, 19, 0, 18, 0, 1, 0, 0, 0, 1]' : 0.164067}
{'[2, 1, 0, 6, 6, 5, 1, 1, 0, 19, 0, 18, 0, 1, 0, 0, 0, 1]' : 0.163728}
{'[2, 1, 0, 6, 6, 5, 1, 1, 0, 19, 0, 18, 0, 1, 0, 0, 0, 1]' : 0.163618}
{'[2, 1, 0, 6, 6, 5, 1, 1, 0, 19, 0, 18, 0, 1, 0, 0, 0, 1]' : 0.163747}
{'[2, 1, 0, 6, 6, 5, 1, 1, 0, 19, 0, 18, 0, 1, 0, 0, 0, 1]' : 0.163983}
{'[2, 1, 0, 6, 6, 5, 1, 1, 0, 19, 0, 18, 0, 1, 0, 0, 0, 1]' : 0.163839}
{'[2, 1, 0, 6, 6, 5, 1, 1, 0, 19, 0, 18, 0, 1, 0, 0, 0, 1]' : 0.163715}
{'[2, 1, 0, 6, 6, 5, 1, 1, 0, 19, 0, 18, 0, 1, 0, 0, 0, 1]' : 0.163747}
{'[2, 1, 0, 6, 6, 5, 1, 1, 0, 19, 0, 18, 0, 1, 0, 0, 0, 1]' : 0.163707}
{'[2, 1, 0, 6, 6, 5, 1, 1, 0, 19, 0, 18, 0, 1, 0, 0, 0, 1]' : 0.163688}

out:
 ["{'[2, 1, 0, 6, 6, 5, 1, 1, 0, 19, 0, 18, 0, 1, 0, 0, 0, 1]' : 0.163872}", "{'[2, 1, 0, 6, 6, 5, 1, 1, 0, 19, 0, 18, 0, 1, 0, 0, 0, 1]' : 0.163682}", "{'[2, 1, 0, 6, 6, 5, 1, 1, 0, 19, 0, 18, 0, 1, 0, 0, 0, 1]' : 0.163701}", "{'[2, 1, 0, 6, 6, 5, 1, 1, 0, 19, 0, 18, 0, 1, 0, 0, 0, 1]' : 0.163758}", "{'[2, 1, 0, 6, 6, 5, 1, 1, 0, 19, 0, 18, 0, 1, 0, 0, 0, 1]' : 0.163629}", "{'[2, 1, 0, 6, 6, 5, 1, 1, 0, 19, 0, 18, 0, 1, 0, 0, 0, 1]' : 0.163699}", "{'[2, 1, 0, 6, 6, 5, 1, 1, 0, 19, 0, 18, 0, 1, 0, 0, 0, 1]' : 0.163846}", "{'[2, 1, 0, 6, 6, 5, 1, 1, 0, 19, 0, 18, 0, 1, 0, 0, 0, 1]' : 0.163905}", "{'[2, 1, 0, 6, 6, 5, 1, 1, 0, 19, 0, 18, 0, 1, 0, 0, 0, 1]' : 0.163743}", "{'[2, 1, 0, 6, 6, 5, 1, 1, 0, 19, 0, 18, 0, 1, 0, 0, 0, 1]' : 0.163766}", "{'[2, 1, 0, 6, 6, 5, 1, 1, 0, 19, 0, 18, 0, 1, 0, 0, 0, 1]' : 0.163758}", "{'[2, 1, 0, 6, 6, 5, 1, 1, 0, 19, 0, 18, 0, 1, 0, 0, 0, 1]' : 0.163649}", "{'[2, 1, 0, 6, 6, 5, 1, 1, 0, 19, 0, 18, 0, 1, 0, 0, 0, 1]' : 0.163618}", "{'[2, 1, 0, 6, 6, 5, 1, 1, 0, 19, 0, 18, 0, 1, 0, 0, 0, 1]' : 0.1637}", "{'[2, 1, 0, 6, 6, 5, 1, 1, 0, 19, 0, 18, 0, 1, 0, 0, 0, 1]' : 0.163797}", "{'[2, 1, 0, 6, 6, 5, 1, 1, 0, 19, 0, 18, 0, 1, 0, 0, 0, 1]' : 0.163903}", "{'[2, 1, 0, 6, 6, 5, 1, 1, 0, 19, 0, 18, 0, 1, 0, 0, 0, 1]' : 0.163735}", "{'[2, 1, 0, 6, 6, 5, 1, 1, 0, 19, 0, 18, 0, 1, 0, 0, 0, 1]' : 0.163657}", "{'[2, 1, 0, 6, 6, 5, 1, 1, 0, 19, 0, 18, 0, 1, 0, 0, 0, 1]' : 0.163789}", "{'[2, 1, 0, 6, 6, 5, 1, 1, 0, 19, 0, 18, 0, 1, 0, 0, 0, 1]' : 0.163751}", "{'[2, 1, 0, 6, 6, 5, 1, 1, 0, 19, 0, 18, 0, 1, 0, 0, 0, 1]' : 0.164067}", "{'[2, 1, 0, 6, 6, 5, 1, 1, 0, 19, 0, 18, 0, 1, 0, 0, 0, 1]' : 0.163728}", "{'[2, 1, 0, 6, 6, 5, 1, 1, 0, 19, 0, 18, 0, 1, 0, 0, 0, 1]' : 0.163618}", "{'[2, 1, 0, 6, 6, 5, 1, 1, 0, 19, 0, 18, 0, 1, 0, 0, 0, 1]' : 0.163747}", "{'[2, 1, 0, 6, 6, 5, 1, 1, 0, 19, 0, 18, 0, 1, 0, 0, 0, 1]' : 0.163983}", "{'[2, 1, 0, 6, 6, 5, 1, 1, 0, 19, 0, 18, 0, 1, 0, 0, 0, 1]' : 0.163839}", "{'[2, 1, 0, 6, 6, 5, 1, 1, 0, 19, 0, 18, 0, 1, 0, 0, 0, 1]' : 0.163715}", "{'[2, 1, 0, 6, 6, 5, 1, 1, 0, 19, 0, 18, 0, 1, 0, 0, 0, 1]' : 0.163747}", "{'[2, 1, 0, 6, 6, 5, 1, 1, 0, 19, 0, 18, 0, 1, 0, 0, 0, 1]' : 0.163707}", "{'[2, 1, 0, 6, 6, 5, 1, 1, 0, 19, 0, 18, 0, 1, 0, 0, 0, 1]' : 0.163688}"]
returning from 'run': {'[2, 1, 0, 6, 6, 5, 1, 1, 0, 19, 0, 18, 0, 1, 0, 0, 0, 1]': ([0.163872, 0.163682, 0.163701, 0.163758, 0.163629, 0.163699, 0.163846, 0.163905, 0.163743, 0.163766, 0.163758, 0.163649, 0.163618, 0.1637, 0.163797, 0.163903, 0.163735, 0.163657, 0.163789, 0.163751, 0.164067, 0.163728, 0.163618, 0.163747, 0.163983, 0.163839, 0.163715, 0.163747, 0.163707, 0.163688], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 1, 0, 6, 6, 5, 1, 1, 0, 19, 0, 18, 0, 1, 0, 0, 0, 1]': ([0.163872, 0.163682, 0.163701, 0.163758, 0.163629, 0.163699, 0.163846, 0.163905, 0.163743, 0.163766, 0.163758, 0.163649, 0.163618, 0.1637, 0.163797, 0.163903, 0.163735, 0.163657, 0.163789, 0.163751, 0.164067, 0.163728, 0.163618, 0.163747, 0.163983, 0.163839, 0.163715, 0.163747, 0.163707, 0.163688], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = kkk
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		267
        Multiplications: 	62
        Divisions: 		0
        Logical: 		0
        Reads: 			586
        Writes: 		138
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest9.exe __orio_perftest9.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest9.exe  
Program Test Output: 
{'[0, 0, 4, 2, 2, 2, 0, 1, 16, 0, 2, 25, 0, 0, 0, 1, 0, 1]' : 0.15932}
{'[0, 0, 4, 2, 2, 2, 0, 1, 16, 0, 2, 25, 0, 0, 0, 1, 0, 1]' : 0.15927}
{'[0, 0, 4, 2, 2, 2, 0, 1, 16, 0, 2, 25, 0, 0, 0, 1, 0, 1]' : 0.159261}
{'[0, 0, 4, 2, 2, 2, 0, 1, 16, 0, 2, 25, 0, 0, 0, 1, 0, 1]' : 0.159299}
{'[0, 0, 4, 2, 2, 2, 0, 1, 16, 0, 2, 25, 0, 0, 0, 1, 0, 1]' : 0.159281}
{'[0, 0, 4, 2, 2, 2, 0, 1, 16, 0, 2, 25, 0, 0, 0, 1, 0, 1]' : 0.159318}
{'[0, 0, 4, 2, 2, 2, 0, 1, 16, 0, 2, 25, 0, 0, 0, 1, 0, 1]' : 0.159416}
{'[0, 0, 4, 2, 2, 2, 0, 1, 16, 0, 2, 25, 0, 0, 0, 1, 0, 1]' : 0.159463}
{'[0, 0, 4, 2, 2, 2, 0, 1, 16, 0, 2, 25, 0, 0, 0, 1, 0, 1]' : 0.159373}
{'[0, 0, 4, 2, 2, 2, 0, 1, 16, 0, 2, 25, 0, 0, 0, 1, 0, 1]' : 0.159356}
{'[0, 0, 4, 2, 2, 2, 0, 1, 16, 0, 2, 25, 0, 0, 0, 1, 0, 1]' : 0.159274}
{'[0, 0, 4, 2, 2, 2, 0, 1, 16, 0, 2, 25, 0, 0, 0, 1, 0, 1]' : 0.159292}
{'[0, 0, 4, 2, 2, 2, 0, 1, 16, 0, 2, 25, 0, 0, 0, 1, 0, 1]' : 0.159321}
{'[0, 0, 4, 2, 2, 2, 0, 1, 16, 0, 2, 25, 0, 0, 0, 1, 0, 1]' : 0.159289}
{'[0, 0, 4, 2, 2, 2, 0, 1, 16, 0, 2, 25, 0, 0, 0, 1, 0, 1]' : 0.15933}
{'[0, 0, 4, 2, 2, 2, 0, 1, 16, 0, 2, 25, 0, 0, 0, 1, 0, 1]' : 0.159234}
{'[0, 0, 4, 2, 2, 2, 0, 1, 16, 0, 2, 25, 0, 0, 0, 1, 0, 1]' : 0.159556}
{'[0, 0, 4, 2, 2, 2, 0, 1, 16, 0, 2, 25, 0, 0, 0, 1, 0, 1]' : 0.159313}
{'[0, 0, 4, 2, 2, 2, 0, 1, 16, 0, 2, 25, 0, 0, 0, 1, 0, 1]' : 0.159314}
{'[0, 0, 4, 2, 2, 2, 0, 1, 16, 0, 2, 25, 0, 0, 0, 1, 0, 1]' : 0.159284}
{'[0, 0, 4, 2, 2, 2, 0, 1, 16, 0, 2, 25, 0, 0, 0, 1, 0, 1]' : 0.159338}
{'[0, 0, 4, 2, 2, 2, 0, 1, 16, 0, 2, 25, 0, 0, 0, 1, 0, 1]' : 0.159335}
{'[0, 0, 4, 2, 2, 2, 0, 1, 16, 0, 2, 25, 0, 0, 0, 1, 0, 1]' : 0.159321}
{'[0, 0, 4, 2, 2, 2, 0, 1, 16, 0, 2, 25, 0, 0, 0, 1, 0, 1]' : 0.159362}
{'[0, 0, 4, 2, 2, 2, 0, 1, 16, 0, 2, 25, 0, 0, 0, 1, 0, 1]' : 0.159322}
{'[0, 0, 4, 2, 2, 2, 0, 1, 16, 0, 2, 25, 0, 0, 0, 1, 0, 1]' : 0.159524}
{'[0, 0, 4, 2, 2, 2, 0, 1, 16, 0, 2, 25, 0, 0, 0, 1, 0, 1]' : 0.159415}
{'[0, 0, 4, 2, 2, 2, 0, 1, 16, 0, 2, 25, 0, 0, 0, 1, 0, 1]' : 0.15944}
{'[0, 0, 4, 2, 2, 2, 0, 1, 16, 0, 2, 25, 0, 0, 0, 1, 0, 1]' : 0.159234}
{'[0, 0, 4, 2, 2, 2, 0, 1, 16, 0, 2, 25, 0, 0, 0, 1, 0, 1]' : 0.159321}

out:
 ["{'[0, 0, 4, 2, 2, 2, 0, 1, 16, 0, 2, 25, 0, 0, 0, 1, 0, 1]' : 0.15932}", "{'[0, 0, 4, 2, 2, 2, 0, 1, 16, 0, 2, 25, 0, 0, 0, 1, 0, 1]' : 0.15927}", "{'[0, 0, 4, 2, 2, 2, 0, 1, 16, 0, 2, 25, 0, 0, 0, 1, 0, 1]' : 0.159261}", "{'[0, 0, 4, 2, 2, 2, 0, 1, 16, 0, 2, 25, 0, 0, 0, 1, 0, 1]' : 0.159299}", "{'[0, 0, 4, 2, 2, 2, 0, 1, 16, 0, 2, 25, 0, 0, 0, 1, 0, 1]' : 0.159281}", "{'[0, 0, 4, 2, 2, 2, 0, 1, 16, 0, 2, 25, 0, 0, 0, 1, 0, 1]' : 0.159318}", "{'[0, 0, 4, 2, 2, 2, 0, 1, 16, 0, 2, 25, 0, 0, 0, 1, 0, 1]' : 0.159416}", "{'[0, 0, 4, 2, 2, 2, 0, 1, 16, 0, 2, 25, 0, 0, 0, 1, 0, 1]' : 0.159463}", "{'[0, 0, 4, 2, 2, 2, 0, 1, 16, 0, 2, 25, 0, 0, 0, 1, 0, 1]' : 0.159373}", "{'[0, 0, 4, 2, 2, 2, 0, 1, 16, 0, 2, 25, 0, 0, 0, 1, 0, 1]' : 0.159356}", "{'[0, 0, 4, 2, 2, 2, 0, 1, 16, 0, 2, 25, 0, 0, 0, 1, 0, 1]' : 0.159274}", "{'[0, 0, 4, 2, 2, 2, 0, 1, 16, 0, 2, 25, 0, 0, 0, 1, 0, 1]' : 0.159292}", "{'[0, 0, 4, 2, 2, 2, 0, 1, 16, 0, 2, 25, 0, 0, 0, 1, 0, 1]' : 0.159321}", "{'[0, 0, 4, 2, 2, 2, 0, 1, 16, 0, 2, 25, 0, 0, 0, 1, 0, 1]' : 0.159289}", "{'[0, 0, 4, 2, 2, 2, 0, 1, 16, 0, 2, 25, 0, 0, 0, 1, 0, 1]' : 0.15933}", "{'[0, 0, 4, 2, 2, 2, 0, 1, 16, 0, 2, 25, 0, 0, 0, 1, 0, 1]' : 0.159234}", "{'[0, 0, 4, 2, 2, 2, 0, 1, 16, 0, 2, 25, 0, 0, 0, 1, 0, 1]' : 0.159556}", "{'[0, 0, 4, 2, 2, 2, 0, 1, 16, 0, 2, 25, 0, 0, 0, 1, 0, 1]' : 0.159313}", "{'[0, 0, 4, 2, 2, 2, 0, 1, 16, 0, 2, 25, 0, 0, 0, 1, 0, 1]' : 0.159314}", "{'[0, 0, 4, 2, 2, 2, 0, 1, 16, 0, 2, 25, 0, 0, 0, 1, 0, 1]' : 0.159284}", "{'[0, 0, 4, 2, 2, 2, 0, 1, 16, 0, 2, 25, 0, 0, 0, 1, 0, 1]' : 0.159338}", "{'[0, 0, 4, 2, 2, 2, 0, 1, 16, 0, 2, 25, 0, 0, 0, 1, 0, 1]' : 0.159335}", "{'[0, 0, 4, 2, 2, 2, 0, 1, 16, 0, 2, 25, 0, 0, 0, 1, 0, 1]' : 0.159321}", "{'[0, 0, 4, 2, 2, 2, 0, 1, 16, 0, 2, 25, 0, 0, 0, 1, 0, 1]' : 0.159362}", "{'[0, 0, 4, 2, 2, 2, 0, 1, 16, 0, 2, 25, 0, 0, 0, 1, 0, 1]' : 0.159322}", "{'[0, 0, 4, 2, 2, 2, 0, 1, 16, 0, 2, 25, 0, 0, 0, 1, 0, 1]' : 0.159524}", "{'[0, 0, 4, 2, 2, 2, 0, 1, 16, 0, 2, 25, 0, 0, 0, 1, 0, 1]' : 0.159415}", "{'[0, 0, 4, 2, 2, 2, 0, 1, 16, 0, 2, 25, 0, 0, 0, 1, 0, 1]' : 0.15944}", "{'[0, 0, 4, 2, 2, 2, 0, 1, 16, 0, 2, 25, 0, 0, 0, 1, 0, 1]' : 0.159234}", "{'[0, 0, 4, 2, 2, 2, 0, 1, 16, 0, 2, 25, 0, 0, 0, 1, 0, 1]' : 0.159321}"]
returning from 'run': {'[0, 0, 4, 2, 2, 2, 0, 1, 16, 0, 2, 25, 0, 0, 0, 1, 0, 1]': ([0.15932, 0.15927, 0.159261, 0.159299, 0.159281, 0.159318, 0.159416, 0.159463, 0.159373, 0.159356, 0.159274, 0.159292, 0.159321, 0.159289, 0.15933, 0.159234, 0.159556, 0.159313, 0.159314, 0.159284, 0.159338, 0.159335, 0.159321, 0.159362, 0.159322, 0.159524, 0.159415, 0.15944, 0.159234, 0.159321], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 4, 2, 2, 2, 0, 1, 16, 0, 2, 25, 0, 0, 0, 1, 0, 1]': ([0.15932, 0.15927, 0.159261, 0.159299, 0.159281, 0.159318, 0.159416, 0.159463, 0.159373, 0.159356, 0.159274, 0.159292, 0.159321, 0.159289, 0.15933, 0.159234, 0.159556, 0.159313, 0.159314, 0.159284, 0.159338, 0.159335, 0.159321, 0.159362, 0.159322, 0.159524, 0.159415, 0.15944, 0.159234, 0.159321], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	84
        Max loop nest depth: 	5
        Additions: 		6128
        Multiplications: 	1488
        Divisions: 		0
        Logical: 		0
        Reads: 			9024
        Writes: 		970
        Comparisons:		84
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest10.exe __orio_perftest10.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest10.exe  
Program Test Output: 
{'[3, 4, 0, 2, 0, 4, 1, 0, 8, 22, 28, 0, 0, 0, 0, 0, 0, 0]' : 0.192723}
{'[3, 4, 0, 2, 0, 4, 1, 0, 8, 22, 28, 0, 0, 0, 0, 0, 0, 0]' : 0.192741}
{'[3, 4, 0, 2, 0, 4, 1, 0, 8, 22, 28, 0, 0, 0, 0, 0, 0, 0]' : 0.192973}
{'[3, 4, 0, 2, 0, 4, 1, 0, 8, 22, 28, 0, 0, 0, 0, 0, 0, 0]' : 0.192855}
{'[3, 4, 0, 2, 0, 4, 1, 0, 8, 22, 28, 0, 0, 0, 0, 0, 0, 0]' : 0.192802}
{'[3, 4, 0, 2, 0, 4, 1, 0, 8, 22, 28, 0, 0, 0, 0, 0, 0, 0]' : 0.192939}
{'[3, 4, 0, 2, 0, 4, 1, 0, 8, 22, 28, 0, 0, 0, 0, 0, 0, 0]' : 0.19289}
{'[3, 4, 0, 2, 0, 4, 1, 0, 8, 22, 28, 0, 0, 0, 0, 0, 0, 0]' : 0.193035}
{'[3, 4, 0, 2, 0, 4, 1, 0, 8, 22, 28, 0, 0, 0, 0, 0, 0, 0]' : 0.192817}
{'[3, 4, 0, 2, 0, 4, 1, 0, 8, 22, 28, 0, 0, 0, 0, 0, 0, 0]' : 0.192999}
{'[3, 4, 0, 2, 0, 4, 1, 0, 8, 22, 28, 0, 0, 0, 0, 0, 0, 0]' : 0.192848}
{'[3, 4, 0, 2, 0, 4, 1, 0, 8, 22, 28, 0, 0, 0, 0, 0, 0, 0]' : 0.192813}
{'[3, 4, 0, 2, 0, 4, 1, 0, 8, 22, 28, 0, 0, 0, 0, 0, 0, 0]' : 0.19277}
{'[3, 4, 0, 2, 0, 4, 1, 0, 8, 22, 28, 0, 0, 0, 0, 0, 0, 0]' : 0.192822}
{'[3, 4, 0, 2, 0, 4, 1, 0, 8, 22, 28, 0, 0, 0, 0, 0, 0, 0]' : 0.192917}
{'[3, 4, 0, 2, 0, 4, 1, 0, 8, 22, 28, 0, 0, 0, 0, 0, 0, 0]' : 0.192973}
{'[3, 4, 0, 2, 0, 4, 1, 0, 8, 22, 28, 0, 0, 0, 0, 0, 0, 0]' : 0.192885}
{'[3, 4, 0, 2, 0, 4, 1, 0, 8, 22, 28, 0, 0, 0, 0, 0, 0, 0]' : 0.192855}
{'[3, 4, 0, 2, 0, 4, 1, 0, 8, 22, 28, 0, 0, 0, 0, 0, 0, 0]' : 0.193147}
{'[3, 4, 0, 2, 0, 4, 1, 0, 8, 22, 28, 0, 0, 0, 0, 0, 0, 0]' : 0.192704}
{'[3, 4, 0, 2, 0, 4, 1, 0, 8, 22, 28, 0, 0, 0, 0, 0, 0, 0]' : 0.192915}
{'[3, 4, 0, 2, 0, 4, 1, 0, 8, 22, 28, 0, 0, 0, 0, 0, 0, 0]' : 0.192929}
{'[3, 4, 0, 2, 0, 4, 1, 0, 8, 22, 28, 0, 0, 0, 0, 0, 0, 0]' : 0.193089}
{'[3, 4, 0, 2, 0, 4, 1, 0, 8, 22, 28, 0, 0, 0, 0, 0, 0, 0]' : 0.192718}
{'[3, 4, 0, 2, 0, 4, 1, 0, 8, 22, 28, 0, 0, 0, 0, 0, 0, 0]' : 0.192842}
{'[3, 4, 0, 2, 0, 4, 1, 0, 8, 22, 28, 0, 0, 0, 0, 0, 0, 0]' : 0.192955}
{'[3, 4, 0, 2, 0, 4, 1, 0, 8, 22, 28, 0, 0, 0, 0, 0, 0, 0]' : 0.192747}
{'[3, 4, 0, 2, 0, 4, 1, 0, 8, 22, 28, 0, 0, 0, 0, 0, 0, 0]' : 0.192738}
{'[3, 4, 0, 2, 0, 4, 1, 0, 8, 22, 28, 0, 0, 0, 0, 0, 0, 0]' : 0.192884}
{'[3, 4, 0, 2, 0, 4, 1, 0, 8, 22, 28, 0, 0, 0, 0, 0, 0, 0]' : 0.192917}

out:
 ["{'[3, 4, 0, 2, 0, 4, 1, 0, 8, 22, 28, 0, 0, 0, 0, 0, 0, 0]' : 0.192723}", "{'[3, 4, 0, 2, 0, 4, 1, 0, 8, 22, 28, 0, 0, 0, 0, 0, 0, 0]' : 0.192741}", "{'[3, 4, 0, 2, 0, 4, 1, 0, 8, 22, 28, 0, 0, 0, 0, 0, 0, 0]' : 0.192973}", "{'[3, 4, 0, 2, 0, 4, 1, 0, 8, 22, 28, 0, 0, 0, 0, 0, 0, 0]' : 0.192855}", "{'[3, 4, 0, 2, 0, 4, 1, 0, 8, 22, 28, 0, 0, 0, 0, 0, 0, 0]' : 0.192802}", "{'[3, 4, 0, 2, 0, 4, 1, 0, 8, 22, 28, 0, 0, 0, 0, 0, 0, 0]' : 0.192939}", "{'[3, 4, 0, 2, 0, 4, 1, 0, 8, 22, 28, 0, 0, 0, 0, 0, 0, 0]' : 0.19289}", "{'[3, 4, 0, 2, 0, 4, 1, 0, 8, 22, 28, 0, 0, 0, 0, 0, 0, 0]' : 0.193035}", "{'[3, 4, 0, 2, 0, 4, 1, 0, 8, 22, 28, 0, 0, 0, 0, 0, 0, 0]' : 0.192817}", "{'[3, 4, 0, 2, 0, 4, 1, 0, 8, 22, 28, 0, 0, 0, 0, 0, 0, 0]' : 0.192999}", "{'[3, 4, 0, 2, 0, 4, 1, 0, 8, 22, 28, 0, 0, 0, 0, 0, 0, 0]' : 0.192848}", "{'[3, 4, 0, 2, 0, 4, 1, 0, 8, 22, 28, 0, 0, 0, 0, 0, 0, 0]' : 0.192813}", "{'[3, 4, 0, 2, 0, 4, 1, 0, 8, 22, 28, 0, 0, 0, 0, 0, 0, 0]' : 0.19277}", "{'[3, 4, 0, 2, 0, 4, 1, 0, 8, 22, 28, 0, 0, 0, 0, 0, 0, 0]' : 0.192822}", "{'[3, 4, 0, 2, 0, 4, 1, 0, 8, 22, 28, 0, 0, 0, 0, 0, 0, 0]' : 0.192917}", "{'[3, 4, 0, 2, 0, 4, 1, 0, 8, 22, 28, 0, 0, 0, 0, 0, 0, 0]' : 0.192973}", "{'[3, 4, 0, 2, 0, 4, 1, 0, 8, 22, 28, 0, 0, 0, 0, 0, 0, 0]' : 0.192885}", "{'[3, 4, 0, 2, 0, 4, 1, 0, 8, 22, 28, 0, 0, 0, 0, 0, 0, 0]' : 0.192855}", "{'[3, 4, 0, 2, 0, 4, 1, 0, 8, 22, 28, 0, 0, 0, 0, 0, 0, 0]' : 0.193147}", "{'[3, 4, 0, 2, 0, 4, 1, 0, 8, 22, 28, 0, 0, 0, 0, 0, 0, 0]' : 0.192704}", "{'[3, 4, 0, 2, 0, 4, 1, 0, 8, 22, 28, 0, 0, 0, 0, 0, 0, 0]' : 0.192915}", "{'[3, 4, 0, 2, 0, 4, 1, 0, 8, 22, 28, 0, 0, 0, 0, 0, 0, 0]' : 0.192929}", "{'[3, 4, 0, 2, 0, 4, 1, 0, 8, 22, 28, 0, 0, 0, 0, 0, 0, 0]' : 0.193089}", "{'[3, 4, 0, 2, 0, 4, 1, 0, 8, 22, 28, 0, 0, 0, 0, 0, 0, 0]' : 0.192718}", "{'[3, 4, 0, 2, 0, 4, 1, 0, 8, 22, 28, 0, 0, 0, 0, 0, 0, 0]' : 0.192842}", "{'[3, 4, 0, 2, 0, 4, 1, 0, 8, 22, 28, 0, 0, 0, 0, 0, 0, 0]' : 0.192955}", "{'[3, 4, 0, 2, 0, 4, 1, 0, 8, 22, 28, 0, 0, 0, 0, 0, 0, 0]' : 0.192747}", "{'[3, 4, 0, 2, 0, 4, 1, 0, 8, 22, 28, 0, 0, 0, 0, 0, 0, 0]' : 0.192738}", "{'[3, 4, 0, 2, 0, 4, 1, 0, 8, 22, 28, 0, 0, 0, 0, 0, 0, 0]' : 0.192884}", "{'[3, 4, 0, 2, 0, 4, 1, 0, 8, 22, 28, 0, 0, 0, 0, 0, 0, 0]' : 0.192917}"]
returning from 'run': {'[3, 4, 0, 2, 0, 4, 1, 0, 8, 22, 28, 0, 0, 0, 0, 0, 0, 0]': ([0.192723, 0.192741, 0.192973, 0.192855, 0.192802, 0.192939, 0.19289, 0.193035, 0.192817, 0.192999, 0.192848, 0.192813, 0.19277, 0.192822, 0.192917, 0.192973, 0.192885, 0.192855, 0.193147, 0.192704, 0.192915, 0.192929, 0.193089, 0.192718, 0.192842, 0.192955, 0.192747, 0.192738, 0.192884, 0.192917], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 4, 0, 2, 0, 4, 1, 0, 8, 22, 28, 0, 0, 0, 0, 0, 0, 0]': ([0.192723, 0.192741, 0.192973, 0.192855, 0.192802, 0.192939, 0.19289, 0.193035, 0.192817, 0.192999, 0.192848, 0.192813, 0.19277, 0.192822, 0.192917, 0.192973, 0.192885, 0.192855, 0.193147, 0.192704, 0.192915, 0.192929, 0.193089, 0.192718, 0.192842, 0.192955, 0.192747, 0.192738, 0.192884, 0.192917], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	4
        Additions: 		1411
        Multiplications: 	594
        Divisions: 		0
        Logical: 		0
        Reads: 			2759
        Writes: 		477
        Comparisons:		22
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest11.exe __orio_perftest11.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest11.exe  
Program Test Output: 
{'[4, 0, 2, 0, 5, 0, 1, 1, 0, 0, 10, 19, 1, 0, 0, 1, 1, 1]' : 0.0972981}
{'[4, 0, 2, 0, 5, 0, 1, 1, 0, 0, 10, 19, 1, 0, 0, 1, 1, 1]' : 0.0969169}
{'[4, 0, 2, 0, 5, 0, 1, 1, 0, 0, 10, 19, 1, 0, 0, 1, 1, 1]' : 0.0969219}
{'[4, 0, 2, 0, 5, 0, 1, 1, 0, 0, 10, 19, 1, 0, 0, 1, 1, 1]' : 0.0968871}
{'[4, 0, 2, 0, 5, 0, 1, 1, 0, 0, 10, 19, 1, 0, 0, 1, 1, 1]' : 0.096981}
{'[4, 0, 2, 0, 5, 0, 1, 1, 0, 0, 10, 19, 1, 0, 0, 1, 1, 1]' : 0.096946}
{'[4, 0, 2, 0, 5, 0, 1, 1, 0, 0, 10, 19, 1, 0, 0, 1, 1, 1]' : 0.0969639}
{'[4, 0, 2, 0, 5, 0, 1, 1, 0, 0, 10, 19, 1, 0, 0, 1, 1, 1]' : 0.0968971}
{'[4, 0, 2, 0, 5, 0, 1, 1, 0, 0, 10, 19, 1, 0, 0, 1, 1, 1]' : 0.09728}
{'[4, 0, 2, 0, 5, 0, 1, 1, 0, 0, 10, 19, 1, 0, 0, 1, 1, 1]' : 0.0968719}
{'[4, 0, 2, 0, 5, 0, 1, 1, 0, 0, 10, 19, 1, 0, 0, 1, 1, 1]' : 0.096935}
{'[4, 0, 2, 0, 5, 0, 1, 1, 0, 0, 10, 19, 1, 0, 0, 1, 1, 1]' : 0.097034}
{'[4, 0, 2, 0, 5, 0, 1, 1, 0, 0, 10, 19, 1, 0, 0, 1, 1, 1]' : 0.096925}
{'[4, 0, 2, 0, 5, 0, 1, 1, 0, 0, 10, 19, 1, 0, 0, 1, 1, 1]' : 0.096909}
{'[4, 0, 2, 0, 5, 0, 1, 1, 0, 0, 10, 19, 1, 0, 0, 1, 1, 1]' : 0.0970099}
{'[4, 0, 2, 0, 5, 0, 1, 1, 0, 0, 10, 19, 1, 0, 0, 1, 1, 1]' : 0.0969319}
{'[4, 0, 2, 0, 5, 0, 1, 1, 0, 0, 10, 19, 1, 0, 0, 1, 1, 1]' : 0.0970659}
{'[4, 0, 2, 0, 5, 0, 1, 1, 0, 0, 10, 19, 1, 0, 0, 1, 1, 1]' : 0.09706}
{'[4, 0, 2, 0, 5, 0, 1, 1, 0, 0, 10, 19, 1, 0, 0, 1, 1, 1]' : 0.0969241}
{'[4, 0, 2, 0, 5, 0, 1, 1, 0, 0, 10, 19, 1, 0, 0, 1, 1, 1]' : 0.0969129}
{'[4, 0, 2, 0, 5, 0, 1, 1, 0, 0, 10, 19, 1, 0, 0, 1, 1, 1]' : 0.0968981}
{'[4, 0, 2, 0, 5, 0, 1, 1, 0, 0, 10, 19, 1, 0, 0, 1, 1, 1]' : 0.097018}
{'[4, 0, 2, 0, 5, 0, 1, 1, 0, 0, 10, 19, 1, 0, 0, 1, 1, 1]' : 0.097034}
{'[4, 0, 2, 0, 5, 0, 1, 1, 0, 0, 10, 19, 1, 0, 0, 1, 1, 1]' : 0.0972521}
{'[4, 0, 2, 0, 5, 0, 1, 1, 0, 0, 10, 19, 1, 0, 0, 1, 1, 1]' : 0.0970318}
{'[4, 0, 2, 0, 5, 0, 1, 1, 0, 0, 10, 19, 1, 0, 0, 1, 1, 1]' : 0.09692}
{'[4, 0, 2, 0, 5, 0, 1, 1, 0, 0, 10, 19, 1, 0, 0, 1, 1, 1]' : 0.0970271}
{'[4, 0, 2, 0, 5, 0, 1, 1, 0, 0, 10, 19, 1, 0, 0, 1, 1, 1]' : 0.096997}
{'[4, 0, 2, 0, 5, 0, 1, 1, 0, 0, 10, 19, 1, 0, 0, 1, 1, 1]' : 0.0969641}
{'[4, 0, 2, 0, 5, 0, 1, 1, 0, 0, 10, 19, 1, 0, 0, 1, 1, 1]' : 0.096931}

out:
 ["{'[4, 0, 2, 0, 5, 0, 1, 1, 0, 0, 10, 19, 1, 0, 0, 1, 1, 1]' : 0.0972981}", "{'[4, 0, 2, 0, 5, 0, 1, 1, 0, 0, 10, 19, 1, 0, 0, 1, 1, 1]' : 0.0969169}", "{'[4, 0, 2, 0, 5, 0, 1, 1, 0, 0, 10, 19, 1, 0, 0, 1, 1, 1]' : 0.0969219}", "{'[4, 0, 2, 0, 5, 0, 1, 1, 0, 0, 10, 19, 1, 0, 0, 1, 1, 1]' : 0.0968871}", "{'[4, 0, 2, 0, 5, 0, 1, 1, 0, 0, 10, 19, 1, 0, 0, 1, 1, 1]' : 0.096981}", "{'[4, 0, 2, 0, 5, 0, 1, 1, 0, 0, 10, 19, 1, 0, 0, 1, 1, 1]' : 0.096946}", "{'[4, 0, 2, 0, 5, 0, 1, 1, 0, 0, 10, 19, 1, 0, 0, 1, 1, 1]' : 0.0969639}", "{'[4, 0, 2, 0, 5, 0, 1, 1, 0, 0, 10, 19, 1, 0, 0, 1, 1, 1]' : 0.0968971}", "{'[4, 0, 2, 0, 5, 0, 1, 1, 0, 0, 10, 19, 1, 0, 0, 1, 1, 1]' : 0.09728}", "{'[4, 0, 2, 0, 5, 0, 1, 1, 0, 0, 10, 19, 1, 0, 0, 1, 1, 1]' : 0.0968719}", "{'[4, 0, 2, 0, 5, 0, 1, 1, 0, 0, 10, 19, 1, 0, 0, 1, 1, 1]' : 0.096935}", "{'[4, 0, 2, 0, 5, 0, 1, 1, 0, 0, 10, 19, 1, 0, 0, 1, 1, 1]' : 0.097034}", "{'[4, 0, 2, 0, 5, 0, 1, 1, 0, 0, 10, 19, 1, 0, 0, 1, 1, 1]' : 0.096925}", "{'[4, 0, 2, 0, 5, 0, 1, 1, 0, 0, 10, 19, 1, 0, 0, 1, 1, 1]' : 0.096909}", "{'[4, 0, 2, 0, 5, 0, 1, 1, 0, 0, 10, 19, 1, 0, 0, 1, 1, 1]' : 0.0970099}", "{'[4, 0, 2, 0, 5, 0, 1, 1, 0, 0, 10, 19, 1, 0, 0, 1, 1, 1]' : 0.0969319}", "{'[4, 0, 2, 0, 5, 0, 1, 1, 0, 0, 10, 19, 1, 0, 0, 1, 1, 1]' : 0.0970659}", "{'[4, 0, 2, 0, 5, 0, 1, 1, 0, 0, 10, 19, 1, 0, 0, 1, 1, 1]' : 0.09706}", "{'[4, 0, 2, 0, 5, 0, 1, 1, 0, 0, 10, 19, 1, 0, 0, 1, 1, 1]' : 0.0969241}", "{'[4, 0, 2, 0, 5, 0, 1, 1, 0, 0, 10, 19, 1, 0, 0, 1, 1, 1]' : 0.0969129}", "{'[4, 0, 2, 0, 5, 0, 1, 1, 0, 0, 10, 19, 1, 0, 0, 1, 1, 1]' : 0.0968981}", "{'[4, 0, 2, 0, 5, 0, 1, 1, 0, 0, 10, 19, 1, 0, 0, 1, 1, 1]' : 0.097018}", "{'[4, 0, 2, 0, 5, 0, 1, 1, 0, 0, 10, 19, 1, 0, 0, 1, 1, 1]' : 0.097034}", "{'[4, 0, 2, 0, 5, 0, 1, 1, 0, 0, 10, 19, 1, 0, 0, 1, 1, 1]' : 0.0972521}", "{'[4, 0, 2, 0, 5, 0, 1, 1, 0, 0, 10, 19, 1, 0, 0, 1, 1, 1]' : 0.0970318}", "{'[4, 0, 2, 0, 5, 0, 1, 1, 0, 0, 10, 19, 1, 0, 0, 1, 1, 1]' : 0.09692}", "{'[4, 0, 2, 0, 5, 0, 1, 1, 0, 0, 10, 19, 1, 0, 0, 1, 1, 1]' : 0.0970271}", "{'[4, 0, 2, 0, 5, 0, 1, 1, 0, 0, 10, 19, 1, 0, 0, 1, 1, 1]' : 0.096997}", "{'[4, 0, 2, 0, 5, 0, 1, 1, 0, 0, 10, 19, 1, 0, 0, 1, 1, 1]' : 0.0969641}", "{'[4, 0, 2, 0, 5, 0, 1, 1, 0, 0, 10, 19, 1, 0, 0, 1, 1, 1]' : 0.096931}"]
returning from 'run': {'[4, 0, 2, 0, 5, 0, 1, 1, 0, 0, 10, 19, 1, 0, 0, 1, 1, 1]': ([0.0972981, 0.0969169, 0.0969219, 0.0968871, 0.096981, 0.096946, 0.0969639, 0.0968971, 0.09728, 0.0968719, 0.096935, 0.097034, 0.096925, 0.096909, 0.0970099, 0.0969319, 0.0970659, 0.09706, 0.0969241, 0.0969129, 0.0968981, 0.097018, 0.097034, 0.0972521, 0.0970318, 0.09692, 0.0970271, 0.096997, 0.0969641, 0.096931], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 0, 2, 0, 5, 0, 1, 1, 0, 0, 10, 19, 1, 0, 0, 1, 1, 1]': ([0.0972981, 0.0969169, 0.0969219, 0.0968871, 0.096981, 0.096946, 0.0969639, 0.0968971, 0.09728, 0.0968719, 0.096935, 0.097034, 0.096925, 0.096909, 0.0970099, 0.0969319, 0.0970659, 0.09706, 0.0969241, 0.0969129, 0.0968981, 0.097018, 0.097034, 0.0972521, 0.0970318, 0.09692, 0.0970271, 0.096997, 0.0969641, 0.096931], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		221
        Multiplications: 	70
        Divisions: 		0
        Logical: 		0
        Reads: 			480
        Writes: 		102
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest12.exe __orio_perftest12.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest12.exe  
Program Test Output: 
{'[6, 6, 0, 6, 0, 3, 0, 1, 15, 0, 17, 25, 0, 1, 1, 1, 1, 0]' : 0.15273}
{'[6, 6, 0, 6, 0, 3, 0, 1, 15, 0, 17, 25, 0, 1, 1, 1, 1, 0]' : 0.152605}
{'[6, 6, 0, 6, 0, 3, 0, 1, 15, 0, 17, 25, 0, 1, 1, 1, 1, 0]' : 0.152603}
{'[6, 6, 0, 6, 0, 3, 0, 1, 15, 0, 17, 25, 0, 1, 1, 1, 1, 0]' : 0.152657}
{'[6, 6, 0, 6, 0, 3, 0, 1, 15, 0, 17, 25, 0, 1, 1, 1, 1, 0]' : 0.152628}
{'[6, 6, 0, 6, 0, 3, 0, 1, 15, 0, 17, 25, 0, 1, 1, 1, 1, 0]' : 0.152671}
{'[6, 6, 0, 6, 0, 3, 0, 1, 15, 0, 17, 25, 0, 1, 1, 1, 1, 0]' : 0.152579}
{'[6, 6, 0, 6, 0, 3, 0, 1, 15, 0, 17, 25, 0, 1, 1, 1, 1, 0]' : 0.152637}
{'[6, 6, 0, 6, 0, 3, 0, 1, 15, 0, 17, 25, 0, 1, 1, 1, 1, 0]' : 0.152808}
{'[6, 6, 0, 6, 0, 3, 0, 1, 15, 0, 17, 25, 0, 1, 1, 1, 1, 0]' : 0.152583}
{'[6, 6, 0, 6, 0, 3, 0, 1, 15, 0, 17, 25, 0, 1, 1, 1, 1, 0]' : 0.152681}
{'[6, 6, 0, 6, 0, 3, 0, 1, 15, 0, 17, 25, 0, 1, 1, 1, 1, 0]' : 0.15257}
{'[6, 6, 0, 6, 0, 3, 0, 1, 15, 0, 17, 25, 0, 1, 1, 1, 1, 0]' : 0.152649}
{'[6, 6, 0, 6, 0, 3, 0, 1, 15, 0, 17, 25, 0, 1, 1, 1, 1, 0]' : 0.152585}
{'[6, 6, 0, 6, 0, 3, 0, 1, 15, 0, 17, 25, 0, 1, 1, 1, 1, 0]' : 0.152699}
{'[6, 6, 0, 6, 0, 3, 0, 1, 15, 0, 17, 25, 0, 1, 1, 1, 1, 0]' : 0.15267}
{'[6, 6, 0, 6, 0, 3, 0, 1, 15, 0, 17, 25, 0, 1, 1, 1, 1, 0]' : 0.152601}
{'[6, 6, 0, 6, 0, 3, 0, 1, 15, 0, 17, 25, 0, 1, 1, 1, 1, 0]' : 0.15261}
{'[6, 6, 0, 6, 0, 3, 0, 1, 15, 0, 17, 25, 0, 1, 1, 1, 1, 0]' : 0.152718}
{'[6, 6, 0, 6, 0, 3, 0, 1, 15, 0, 17, 25, 0, 1, 1, 1, 1, 0]' : 0.152591}
{'[6, 6, 0, 6, 0, 3, 0, 1, 15, 0, 17, 25, 0, 1, 1, 1, 1, 0]' : 0.152554}
{'[6, 6, 0, 6, 0, 3, 0, 1, 15, 0, 17, 25, 0, 1, 1, 1, 1, 0]' : 0.152666}
{'[6, 6, 0, 6, 0, 3, 0, 1, 15, 0, 17, 25, 0, 1, 1, 1, 1, 0]' : 0.152567}
{'[6, 6, 0, 6, 0, 3, 0, 1, 15, 0, 17, 25, 0, 1, 1, 1, 1, 0]' : 0.152595}
{'[6, 6, 0, 6, 0, 3, 0, 1, 15, 0, 17, 25, 0, 1, 1, 1, 1, 0]' : 0.152579}
{'[6, 6, 0, 6, 0, 3, 0, 1, 15, 0, 17, 25, 0, 1, 1, 1, 1, 0]' : 0.152594}
{'[6, 6, 0, 6, 0, 3, 0, 1, 15, 0, 17, 25, 0, 1, 1, 1, 1, 0]' : 0.152529}
{'[6, 6, 0, 6, 0, 3, 0, 1, 15, 0, 17, 25, 0, 1, 1, 1, 1, 0]' : 0.152582}
{'[6, 6, 0, 6, 0, 3, 0, 1, 15, 0, 17, 25, 0, 1, 1, 1, 1, 0]' : 0.152782}
{'[6, 6, 0, 6, 0, 3, 0, 1, 15, 0, 17, 25, 0, 1, 1, 1, 1, 0]' : 0.152599}

out:
 ["{'[6, 6, 0, 6, 0, 3, 0, 1, 15, 0, 17, 25, 0, 1, 1, 1, 1, 0]' : 0.15273}", "{'[6, 6, 0, 6, 0, 3, 0, 1, 15, 0, 17, 25, 0, 1, 1, 1, 1, 0]' : 0.152605}", "{'[6, 6, 0, 6, 0, 3, 0, 1, 15, 0, 17, 25, 0, 1, 1, 1, 1, 0]' : 0.152603}", "{'[6, 6, 0, 6, 0, 3, 0, 1, 15, 0, 17, 25, 0, 1, 1, 1, 1, 0]' : 0.152657}", "{'[6, 6, 0, 6, 0, 3, 0, 1, 15, 0, 17, 25, 0, 1, 1, 1, 1, 0]' : 0.152628}", "{'[6, 6, 0, 6, 0, 3, 0, 1, 15, 0, 17, 25, 0, 1, 1, 1, 1, 0]' : 0.152671}", "{'[6, 6, 0, 6, 0, 3, 0, 1, 15, 0, 17, 25, 0, 1, 1, 1, 1, 0]' : 0.152579}", "{'[6, 6, 0, 6, 0, 3, 0, 1, 15, 0, 17, 25, 0, 1, 1, 1, 1, 0]' : 0.152637}", "{'[6, 6, 0, 6, 0, 3, 0, 1, 15, 0, 17, 25, 0, 1, 1, 1, 1, 0]' : 0.152808}", "{'[6, 6, 0, 6, 0, 3, 0, 1, 15, 0, 17, 25, 0, 1, 1, 1, 1, 0]' : 0.152583}", "{'[6, 6, 0, 6, 0, 3, 0, 1, 15, 0, 17, 25, 0, 1, 1, 1, 1, 0]' : 0.152681}", "{'[6, 6, 0, 6, 0, 3, 0, 1, 15, 0, 17, 25, 0, 1, 1, 1, 1, 0]' : 0.15257}", "{'[6, 6, 0, 6, 0, 3, 0, 1, 15, 0, 17, 25, 0, 1, 1, 1, 1, 0]' : 0.152649}", "{'[6, 6, 0, 6, 0, 3, 0, 1, 15, 0, 17, 25, 0, 1, 1, 1, 1, 0]' : 0.152585}", "{'[6, 6, 0, 6, 0, 3, 0, 1, 15, 0, 17, 25, 0, 1, 1, 1, 1, 0]' : 0.152699}", "{'[6, 6, 0, 6, 0, 3, 0, 1, 15, 0, 17, 25, 0, 1, 1, 1, 1, 0]' : 0.15267}", "{'[6, 6, 0, 6, 0, 3, 0, 1, 15, 0, 17, 25, 0, 1, 1, 1, 1, 0]' : 0.152601}", "{'[6, 6, 0, 6, 0, 3, 0, 1, 15, 0, 17, 25, 0, 1, 1, 1, 1, 0]' : 0.15261}", "{'[6, 6, 0, 6, 0, 3, 0, 1, 15, 0, 17, 25, 0, 1, 1, 1, 1, 0]' : 0.152718}", "{'[6, 6, 0, 6, 0, 3, 0, 1, 15, 0, 17, 25, 0, 1, 1, 1, 1, 0]' : 0.152591}", "{'[6, 6, 0, 6, 0, 3, 0, 1, 15, 0, 17, 25, 0, 1, 1, 1, 1, 0]' : 0.152554}", "{'[6, 6, 0, 6, 0, 3, 0, 1, 15, 0, 17, 25, 0, 1, 1, 1, 1, 0]' : 0.152666}", "{'[6, 6, 0, 6, 0, 3, 0, 1, 15, 0, 17, 25, 0, 1, 1, 1, 1, 0]' : 0.152567}", "{'[6, 6, 0, 6, 0, 3, 0, 1, 15, 0, 17, 25, 0, 1, 1, 1, 1, 0]' : 0.152595}", "{'[6, 6, 0, 6, 0, 3, 0, 1, 15, 0, 17, 25, 0, 1, 1, 1, 1, 0]' : 0.152579}", "{'[6, 6, 0, 6, 0, 3, 0, 1, 15, 0, 17, 25, 0, 1, 1, 1, 1, 0]' : 0.152594}", "{'[6, 6, 0, 6, 0, 3, 0, 1, 15, 0, 17, 25, 0, 1, 1, 1, 1, 0]' : 0.152529}", "{'[6, 6, 0, 6, 0, 3, 0, 1, 15, 0, 17, 25, 0, 1, 1, 1, 1, 0]' : 0.152582}", "{'[6, 6, 0, 6, 0, 3, 0, 1, 15, 0, 17, 25, 0, 1, 1, 1, 1, 0]' : 0.152782}", "{'[6, 6, 0, 6, 0, 3, 0, 1, 15, 0, 17, 25, 0, 1, 1, 1, 1, 0]' : 0.152599}"]
returning from 'run': {'[6, 6, 0, 6, 0, 3, 0, 1, 15, 0, 17, 25, 0, 1, 1, 1, 1, 0]': ([0.15273, 0.152605, 0.152603, 0.152657, 0.152628, 0.152671, 0.152579, 0.152637, 0.152808, 0.152583, 0.152681, 0.15257, 0.152649, 0.152585, 0.152699, 0.15267, 0.152601, 0.15261, 0.152718, 0.152591, 0.152554, 0.152666, 0.152567, 0.152595, 0.152579, 0.152594, 0.152529, 0.152582, 0.152782, 0.152599], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 0, 6, 0, 3, 0, 1, 15, 0, 17, 25, 0, 1, 1, 1, 1, 0]': ([0.15273, 0.152605, 0.152603, 0.152657, 0.152628, 0.152671, 0.152579, 0.152637, 0.152808, 0.152583, 0.152681, 0.15257, 0.152649, 0.152585, 0.152699, 0.15267, 0.152601, 0.15261, 0.152718, 0.152591, 0.152554, 0.152666, 0.152567, 0.152595, 0.152579, 0.152594, 0.152529, 0.152582, 0.152782, 0.152599], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	6
        Additions: 		2899
        Multiplications: 	1406
        Divisions: 		0
        Logical: 		0
        Reads: 			5560
        Writes: 		921
        Comparisons:		25
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest13.exe __orio_perftest13.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest13.exe  
Program Test Output: 
{'[1, 5, 1, 1, 4, 0, 0, 0, 29, 3, 16, 0, 2, 0, 0, 1, 1, 1]' : 0.085938}
{'[1, 5, 1, 1, 4, 0, 0, 0, 29, 3, 16, 0, 2, 0, 0, 1, 1, 1]' : 0.0856478}
{'[1, 5, 1, 1, 4, 0, 0, 0, 29, 3, 16, 0, 2, 0, 0, 1, 1, 1]' : 0.0856898}
{'[1, 5, 1, 1, 4, 0, 0, 0, 29, 3, 16, 0, 2, 0, 0, 1, 1, 1]' : 0.085588}
{'[1, 5, 1, 1, 4, 0, 0, 0, 29, 3, 16, 0, 2, 0, 0, 1, 1, 1]' : 0.0856059}
{'[1, 5, 1, 1, 4, 0, 0, 0, 29, 3, 16, 0, 2, 0, 0, 1, 1, 1]' : 0.085582}
{'[1, 5, 1, 1, 4, 0, 0, 0, 29, 3, 16, 0, 2, 0, 0, 1, 1, 1]' : 0.0856142}
{'[1, 5, 1, 1, 4, 0, 0, 0, 29, 3, 16, 0, 2, 0, 0, 1, 1, 1]' : 0.085577}
{'[1, 5, 1, 1, 4, 0, 0, 0, 29, 3, 16, 0, 2, 0, 0, 1, 1, 1]' : 0.085557}
{'[1, 5, 1, 1, 4, 0, 0, 0, 29, 3, 16, 0, 2, 0, 0, 1, 1, 1]' : 0.0856061}
{'[1, 5, 1, 1, 4, 0, 0, 0, 29, 3, 16, 0, 2, 0, 0, 1, 1, 1]' : 0.0857189}
{'[1, 5, 1, 1, 4, 0, 0, 0, 29, 3, 16, 0, 2, 0, 0, 1, 1, 1]' : 0.08547}
{'[1, 5, 1, 1, 4, 0, 0, 0, 29, 3, 16, 0, 2, 0, 0, 1, 1, 1]' : 0.085423}
{'[1, 5, 1, 1, 4, 0, 0, 0, 29, 3, 16, 0, 2, 0, 0, 1, 1, 1]' : 0.085485}
{'[1, 5, 1, 1, 4, 0, 0, 0, 29, 3, 16, 0, 2, 0, 0, 1, 1, 1]' : 0.0854869}
{'[1, 5, 1, 1, 4, 0, 0, 0, 29, 3, 16, 0, 2, 0, 0, 1, 1, 1]' : 0.0854402}
{'[1, 5, 1, 1, 4, 0, 0, 0, 29, 3, 16, 0, 2, 0, 0, 1, 1, 1]' : 0.0857911}
{'[1, 5, 1, 1, 4, 0, 0, 0, 29, 3, 16, 0, 2, 0, 0, 1, 1, 1]' : 0.085598}
{'[1, 5, 1, 1, 4, 0, 0, 0, 29, 3, 16, 0, 2, 0, 0, 1, 1, 1]' : 0.085602}
{'[1, 5, 1, 1, 4, 0, 0, 0, 29, 3, 16, 0, 2, 0, 0, 1, 1, 1]' : 0.085572}
{'[1, 5, 1, 1, 4, 0, 0, 0, 29, 3, 16, 0, 2, 0, 0, 1, 1, 1]' : 0.0855939}
{'[1, 5, 1, 1, 4, 0, 0, 0, 29, 3, 16, 0, 2, 0, 0, 1, 1, 1]' : 0.0855432}
{'[1, 5, 1, 1, 4, 0, 0, 0, 29, 3, 16, 0, 2, 0, 0, 1, 1, 1]' : 0.0856428}
{'[1, 5, 1, 1, 4, 0, 0, 0, 29, 3, 16, 0, 2, 0, 0, 1, 1, 1]' : 0.0856502}
{'[1, 5, 1, 1, 4, 0, 0, 0, 29, 3, 16, 0, 2, 0, 0, 1, 1, 1]' : 0.0856469}
{'[1, 5, 1, 1, 4, 0, 0, 0, 29, 3, 16, 0, 2, 0, 0, 1, 1, 1]' : 0.085614}
{'[1, 5, 1, 1, 4, 0, 0, 0, 29, 3, 16, 0, 2, 0, 0, 1, 1, 1]' : 0.0856428}
{'[1, 5, 1, 1, 4, 0, 0, 0, 29, 3, 16, 0, 2, 0, 0, 1, 1, 1]' : 0.0855811}
{'[1, 5, 1, 1, 4, 0, 0, 0, 29, 3, 16, 0, 2, 0, 0, 1, 1, 1]' : 0.085577}
{'[1, 5, 1, 1, 4, 0, 0, 0, 29, 3, 16, 0, 2, 0, 0, 1, 1, 1]' : 0.085597}

out:
 ["{'[1, 5, 1, 1, 4, 0, 0, 0, 29, 3, 16, 0, 2, 0, 0, 1, 1, 1]' : 0.085938}", "{'[1, 5, 1, 1, 4, 0, 0, 0, 29, 3, 16, 0, 2, 0, 0, 1, 1, 1]' : 0.0856478}", "{'[1, 5, 1, 1, 4, 0, 0, 0, 29, 3, 16, 0, 2, 0, 0, 1, 1, 1]' : 0.0856898}", "{'[1, 5, 1, 1, 4, 0, 0, 0, 29, 3, 16, 0, 2, 0, 0, 1, 1, 1]' : 0.085588}", "{'[1, 5, 1, 1, 4, 0, 0, 0, 29, 3, 16, 0, 2, 0, 0, 1, 1, 1]' : 0.0856059}", "{'[1, 5, 1, 1, 4, 0, 0, 0, 29, 3, 16, 0, 2, 0, 0, 1, 1, 1]' : 0.085582}", "{'[1, 5, 1, 1, 4, 0, 0, 0, 29, 3, 16, 0, 2, 0, 0, 1, 1, 1]' : 0.0856142}", "{'[1, 5, 1, 1, 4, 0, 0, 0, 29, 3, 16, 0, 2, 0, 0, 1, 1, 1]' : 0.085577}", "{'[1, 5, 1, 1, 4, 0, 0, 0, 29, 3, 16, 0, 2, 0, 0, 1, 1, 1]' : 0.085557}", "{'[1, 5, 1, 1, 4, 0, 0, 0, 29, 3, 16, 0, 2, 0, 0, 1, 1, 1]' : 0.0856061}", "{'[1, 5, 1, 1, 4, 0, 0, 0, 29, 3, 16, 0, 2, 0, 0, 1, 1, 1]' : 0.0857189}", "{'[1, 5, 1, 1, 4, 0, 0, 0, 29, 3, 16, 0, 2, 0, 0, 1, 1, 1]' : 0.08547}", "{'[1, 5, 1, 1, 4, 0, 0, 0, 29, 3, 16, 0, 2, 0, 0, 1, 1, 1]' : 0.085423}", "{'[1, 5, 1, 1, 4, 0, 0, 0, 29, 3, 16, 0, 2, 0, 0, 1, 1, 1]' : 0.085485}", "{'[1, 5, 1, 1, 4, 0, 0, 0, 29, 3, 16, 0, 2, 0, 0, 1, 1, 1]' : 0.0854869}", "{'[1, 5, 1, 1, 4, 0, 0, 0, 29, 3, 16, 0, 2, 0, 0, 1, 1, 1]' : 0.0854402}", "{'[1, 5, 1, 1, 4, 0, 0, 0, 29, 3, 16, 0, 2, 0, 0, 1, 1, 1]' : 0.0857911}", "{'[1, 5, 1, 1, 4, 0, 0, 0, 29, 3, 16, 0, 2, 0, 0, 1, 1, 1]' : 0.085598}", "{'[1, 5, 1, 1, 4, 0, 0, 0, 29, 3, 16, 0, 2, 0, 0, 1, 1, 1]' : 0.085602}", "{'[1, 5, 1, 1, 4, 0, 0, 0, 29, 3, 16, 0, 2, 0, 0, 1, 1, 1]' : 0.085572}", "{'[1, 5, 1, 1, 4, 0, 0, 0, 29, 3, 16, 0, 2, 0, 0, 1, 1, 1]' : 0.0855939}", "{'[1, 5, 1, 1, 4, 0, 0, 0, 29, 3, 16, 0, 2, 0, 0, 1, 1, 1]' : 0.0855432}", "{'[1, 5, 1, 1, 4, 0, 0, 0, 29, 3, 16, 0, 2, 0, 0, 1, 1, 1]' : 0.0856428}", "{'[1, 5, 1, 1, 4, 0, 0, 0, 29, 3, 16, 0, 2, 0, 0, 1, 1, 1]' : 0.0856502}", "{'[1, 5, 1, 1, 4, 0, 0, 0, 29, 3, 16, 0, 2, 0, 0, 1, 1, 1]' : 0.0856469}", "{'[1, 5, 1, 1, 4, 0, 0, 0, 29, 3, 16, 0, 2, 0, 0, 1, 1, 1]' : 0.085614}", "{'[1, 5, 1, 1, 4, 0, 0, 0, 29, 3, 16, 0, 2, 0, 0, 1, 1, 1]' : 0.0856428}", "{'[1, 5, 1, 1, 4, 0, 0, 0, 29, 3, 16, 0, 2, 0, 0, 1, 1, 1]' : 0.0855811}", "{'[1, 5, 1, 1, 4, 0, 0, 0, 29, 3, 16, 0, 2, 0, 0, 1, 1, 1]' : 0.085577}", "{'[1, 5, 1, 1, 4, 0, 0, 0, 29, 3, 16, 0, 2, 0, 0, 1, 1, 1]' : 0.085597}"]
returning from 'run': {'[1, 5, 1, 1, 4, 0, 0, 0, 29, 3, 16, 0, 2, 0, 0, 1, 1, 1]': ([0.085938, 0.0856478, 0.0856898, 0.085588, 0.0856059, 0.085582, 0.0856142, 0.085577, 0.085557, 0.0856061, 0.0857189, 0.08547, 0.085423, 0.085485, 0.0854869, 0.0854402, 0.0857911, 0.085598, 0.085602, 0.085572, 0.0855939, 0.0855432, 0.0856428, 0.0856502, 0.0856469, 0.085614, 0.0856428, 0.0855811, 0.085577, 0.085597], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 5, 1, 1, 4, 0, 0, 0, 29, 3, 16, 0, 2, 0, 0, 1, 1, 1]': ([0.085938, 0.0856478, 0.0856898, 0.085588, 0.0856059, 0.085582, 0.0856142, 0.085577, 0.085557, 0.0856061, 0.0857189, 0.08547, 0.085423, 0.085485, 0.0854869, 0.0854402, 0.0857911, 0.085598, 0.085602, 0.085572, 0.0855939, 0.0855432, 0.0856428, 0.0856502, 0.0856469, 0.085614, 0.0856428, 0.0855811, 0.085577, 0.085597], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = jjj
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	4
        Additions: 		1467
        Multiplications: 	432
        Divisions: 		0
        Logical: 		0
        Reads: 			2427
        Writes: 		286
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest14.exe __orio_perftest14.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest14.exe  
Program Test Output: 
{'[0, 5, 0, 1, 3, 5, 1, 0, 22, 0, 4, 8, 1, 0, 1, 0, 0, 0]' : 0.0948901}
{'[0, 5, 0, 1, 3, 5, 1, 0, 22, 0, 4, 8, 1, 0, 1, 0, 0, 0]' : 0.0945821}
{'[0, 5, 0, 1, 3, 5, 1, 0, 22, 0, 4, 8, 1, 0, 1, 0, 0, 0]' : 0.0946939}
{'[0, 5, 0, 1, 3, 5, 1, 0, 22, 0, 4, 8, 1, 0, 1, 0, 0, 0]' : 0.0945451}
{'[0, 5, 0, 1, 3, 5, 1, 0, 22, 0, 4, 8, 1, 0, 1, 0, 0, 0]' : 0.094588}
{'[0, 5, 0, 1, 3, 5, 1, 0, 22, 0, 4, 8, 1, 0, 1, 0, 0, 0]' : 0.094681}
{'[0, 5, 0, 1, 3, 5, 1, 0, 22, 0, 4, 8, 1, 0, 1, 0, 0, 0]' : 0.094722}
{'[0, 5, 0, 1, 3, 5, 1, 0, 22, 0, 4, 8, 1, 0, 1, 0, 0, 0]' : 0.094466}
{'[0, 5, 0, 1, 3, 5, 1, 0, 22, 0, 4, 8, 1, 0, 1, 0, 0, 0]' : 0.0946701}
{'[0, 5, 0, 1, 3, 5, 1, 0, 22, 0, 4, 8, 1, 0, 1, 0, 0, 0]' : 0.0945919}
{'[0, 5, 0, 1, 3, 5, 1, 0, 22, 0, 4, 8, 1, 0, 1, 0, 0, 0]' : 0.0947151}
{'[0, 5, 0, 1, 3, 5, 1, 0, 22, 0, 4, 8, 1, 0, 1, 0, 0, 0]' : 0.094451}
{'[0, 5, 0, 1, 3, 5, 1, 0, 22, 0, 4, 8, 1, 0, 1, 0, 0, 0]' : 0.0946209}
{'[0, 5, 0, 1, 3, 5, 1, 0, 22, 0, 4, 8, 1, 0, 1, 0, 0, 0]' : 0.094933}
{'[0, 5, 0, 1, 3, 5, 1, 0, 22, 0, 4, 8, 1, 0, 1, 0, 0, 0]' : 0.0947919}
{'[0, 5, 0, 1, 3, 5, 1, 0, 22, 0, 4, 8, 1, 0, 1, 0, 0, 0]' : 0.09448}
{'[0, 5, 0, 1, 3, 5, 1, 0, 22, 0, 4, 8, 1, 0, 1, 0, 0, 0]' : 0.094892}
{'[0, 5, 0, 1, 3, 5, 1, 0, 22, 0, 4, 8, 1, 0, 1, 0, 0, 0]' : 0.094574}
{'[0, 5, 0, 1, 3, 5, 1, 0, 22, 0, 4, 8, 1, 0, 1, 0, 0, 0]' : 0.094743}
{'[0, 5, 0, 1, 3, 5, 1, 0, 22, 0, 4, 8, 1, 0, 1, 0, 0, 0]' : 0.0944331}
{'[0, 5, 0, 1, 3, 5, 1, 0, 22, 0, 4, 8, 1, 0, 1, 0, 0, 0]' : 0.094631}
{'[0, 5, 0, 1, 3, 5, 1, 0, 22, 0, 4, 8, 1, 0, 1, 0, 0, 0]' : 0.0945849}
{'[0, 5, 0, 1, 3, 5, 1, 0, 22, 0, 4, 8, 1, 0, 1, 0, 0, 0]' : 0.0947092}
{'[0, 5, 0, 1, 3, 5, 1, 0, 22, 0, 4, 8, 1, 0, 1, 0, 0, 0]' : 0.094574}
{'[0, 5, 0, 1, 3, 5, 1, 0, 22, 0, 4, 8, 1, 0, 1, 0, 0, 0]' : 0.0947132}
{'[0, 5, 0, 1, 3, 5, 1, 0, 22, 0, 4, 8, 1, 0, 1, 0, 0, 0]' : 0.0945899}
{'[0, 5, 0, 1, 3, 5, 1, 0, 22, 0, 4, 8, 1, 0, 1, 0, 0, 0]' : 0.0947618}
{'[0, 5, 0, 1, 3, 5, 1, 0, 22, 0, 4, 8, 1, 0, 1, 0, 0, 0]' : 0.094593}
{'[0, 5, 0, 1, 3, 5, 1, 0, 22, 0, 4, 8, 1, 0, 1, 0, 0, 0]' : 0.0946259}
{'[0, 5, 0, 1, 3, 5, 1, 0, 22, 0, 4, 8, 1, 0, 1, 0, 0, 0]' : 0.0948801}

out:
 ["{'[0, 5, 0, 1, 3, 5, 1, 0, 22, 0, 4, 8, 1, 0, 1, 0, 0, 0]' : 0.0948901}", "{'[0, 5, 0, 1, 3, 5, 1, 0, 22, 0, 4, 8, 1, 0, 1, 0, 0, 0]' : 0.0945821}", "{'[0, 5, 0, 1, 3, 5, 1, 0, 22, 0, 4, 8, 1, 0, 1, 0, 0, 0]' : 0.0946939}", "{'[0, 5, 0, 1, 3, 5, 1, 0, 22, 0, 4, 8, 1, 0, 1, 0, 0, 0]' : 0.0945451}", "{'[0, 5, 0, 1, 3, 5, 1, 0, 22, 0, 4, 8, 1, 0, 1, 0, 0, 0]' : 0.094588}", "{'[0, 5, 0, 1, 3, 5, 1, 0, 22, 0, 4, 8, 1, 0, 1, 0, 0, 0]' : 0.094681}", "{'[0, 5, 0, 1, 3, 5, 1, 0, 22, 0, 4, 8, 1, 0, 1, 0, 0, 0]' : 0.094722}", "{'[0, 5, 0, 1, 3, 5, 1, 0, 22, 0, 4, 8, 1, 0, 1, 0, 0, 0]' : 0.094466}", "{'[0, 5, 0, 1, 3, 5, 1, 0, 22, 0, 4, 8, 1, 0, 1, 0, 0, 0]' : 0.0946701}", "{'[0, 5, 0, 1, 3, 5, 1, 0, 22, 0, 4, 8, 1, 0, 1, 0, 0, 0]' : 0.0945919}", "{'[0, 5, 0, 1, 3, 5, 1, 0, 22, 0, 4, 8, 1, 0, 1, 0, 0, 0]' : 0.0947151}", "{'[0, 5, 0, 1, 3, 5, 1, 0, 22, 0, 4, 8, 1, 0, 1, 0, 0, 0]' : 0.094451}", "{'[0, 5, 0, 1, 3, 5, 1, 0, 22, 0, 4, 8, 1, 0, 1, 0, 0, 0]' : 0.0946209}", "{'[0, 5, 0, 1, 3, 5, 1, 0, 22, 0, 4, 8, 1, 0, 1, 0, 0, 0]' : 0.094933}", "{'[0, 5, 0, 1, 3, 5, 1, 0, 22, 0, 4, 8, 1, 0, 1, 0, 0, 0]' : 0.0947919}", "{'[0, 5, 0, 1, 3, 5, 1, 0, 22, 0, 4, 8, 1, 0, 1, 0, 0, 0]' : 0.09448}", "{'[0, 5, 0, 1, 3, 5, 1, 0, 22, 0, 4, 8, 1, 0, 1, 0, 0, 0]' : 0.094892}", "{'[0, 5, 0, 1, 3, 5, 1, 0, 22, 0, 4, 8, 1, 0, 1, 0, 0, 0]' : 0.094574}", "{'[0, 5, 0, 1, 3, 5, 1, 0, 22, 0, 4, 8, 1, 0, 1, 0, 0, 0]' : 0.094743}", "{'[0, 5, 0, 1, 3, 5, 1, 0, 22, 0, 4, 8, 1, 0, 1, 0, 0, 0]' : 0.0944331}", "{'[0, 5, 0, 1, 3, 5, 1, 0, 22, 0, 4, 8, 1, 0, 1, 0, 0, 0]' : 0.094631}", "{'[0, 5, 0, 1, 3, 5, 1, 0, 22, 0, 4, 8, 1, 0, 1, 0, 0, 0]' : 0.0945849}", "{'[0, 5, 0, 1, 3, 5, 1, 0, 22, 0, 4, 8, 1, 0, 1, 0, 0, 0]' : 0.0947092}", "{'[0, 5, 0, 1, 3, 5, 1, 0, 22, 0, 4, 8, 1, 0, 1, 0, 0, 0]' : 0.094574}", "{'[0, 5, 0, 1, 3, 5, 1, 0, 22, 0, 4, 8, 1, 0, 1, 0, 0, 0]' : 0.0947132}", "{'[0, 5, 0, 1, 3, 5, 1, 0, 22, 0, 4, 8, 1, 0, 1, 0, 0, 0]' : 0.0945899}", "{'[0, 5, 0, 1, 3, 5, 1, 0, 22, 0, 4, 8, 1, 0, 1, 0, 0, 0]' : 0.0947618}", "{'[0, 5, 0, 1, 3, 5, 1, 0, 22, 0, 4, 8, 1, 0, 1, 0, 0, 0]' : 0.094593}", "{'[0, 5, 0, 1, 3, 5, 1, 0, 22, 0, 4, 8, 1, 0, 1, 0, 0, 0]' : 0.0946259}", "{'[0, 5, 0, 1, 3, 5, 1, 0, 22, 0, 4, 8, 1, 0, 1, 0, 0, 0]' : 0.0948801}"]
returning from 'run': {'[0, 5, 0, 1, 3, 5, 1, 0, 22, 0, 4, 8, 1, 0, 1, 0, 0, 0]': ([0.0948901, 0.0945821, 0.0946939, 0.0945451, 0.094588, 0.094681, 0.094722, 0.094466, 0.0946701, 0.0945919, 0.0947151, 0.094451, 0.0946209, 0.094933, 0.0947919, 0.09448, 0.094892, 0.094574, 0.094743, 0.0944331, 0.094631, 0.0945849, 0.0947092, 0.094574, 0.0947132, 0.0945899, 0.0947618, 0.094593, 0.0946259, 0.0948801], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 5, 0, 1, 3, 5, 1, 0, 22, 0, 4, 8, 1, 0, 1, 0, 0, 0]': ([0.0948901, 0.0945821, 0.0946939, 0.0945451, 0.094588, 0.094681, 0.094722, 0.094466, 0.0946701, 0.0945919, 0.0947151, 0.094451, 0.0946209, 0.094933, 0.0947919, 0.09448, 0.094892, 0.094574, 0.094743, 0.0944331, 0.094631, 0.0945849, 0.0947092, 0.094574, 0.0947132, 0.0945899, 0.0947618, 0.094593, 0.0946259, 0.0948801], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	100
        Max loop nest depth: 	6
        Additions: 		2776
        Multiplications: 	576
        Divisions: 		0
        Logical: 		0
        Reads: 			4597
        Writes: 		618
        Comparisons:		100
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest15.exe __orio_perftest15.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest15.exe  
Program Test Output: 
{'[1, 6, 6, 6, 5, 5, 1, 1, 28, 22, 0, 0, 1, 0, 1, 0, 0, 0]' : 0.0976191}
{'[1, 6, 6, 6, 5, 5, 1, 1, 28, 22, 0, 0, 1, 0, 1, 0, 0, 0]' : 0.097116}
{'[1, 6, 6, 6, 5, 5, 1, 1, 28, 22, 0, 0, 1, 0, 1, 0, 0, 0]' : 0.0972571}
{'[1, 6, 6, 6, 5, 5, 1, 1, 28, 22, 0, 0, 1, 0, 1, 0, 0, 0]' : 0.0973079}
{'[1, 6, 6, 6, 5, 5, 1, 1, 28, 22, 0, 0, 1, 0, 1, 0, 0, 0]' : 0.0972221}
{'[1, 6, 6, 6, 5, 5, 1, 1, 28, 22, 0, 0, 1, 0, 1, 0, 0, 0]' : 0.097209}
{'[1, 6, 6, 6, 5, 5, 1, 1, 28, 22, 0, 0, 1, 0, 1, 0, 0, 0]' : 0.097281}
{'[1, 6, 6, 6, 5, 5, 1, 1, 28, 22, 0, 0, 1, 0, 1, 0, 0, 0]' : 0.0972469}
{'[1, 6, 6, 6, 5, 5, 1, 1, 28, 22, 0, 0, 1, 0, 1, 0, 0, 0]' : 0.097286}
{'[1, 6, 6, 6, 5, 5, 1, 1, 28, 22, 0, 0, 1, 0, 1, 0, 0, 0]' : 0.0971551}
{'[1, 6, 6, 6, 5, 5, 1, 1, 28, 22, 0, 0, 1, 0, 1, 0, 0, 0]' : 0.0973558}
{'[1, 6, 6, 6, 5, 5, 1, 1, 28, 22, 0, 0, 1, 0, 1, 0, 0, 0]' : 0.0972562}
{'[1, 6, 6, 6, 5, 5, 1, 1, 28, 22, 0, 0, 1, 0, 1, 0, 0, 0]' : 0.0976808}
{'[1, 6, 6, 6, 5, 5, 1, 1, 28, 22, 0, 0, 1, 0, 1, 0, 0, 0]' : 0.0971048}
{'[1, 6, 6, 6, 5, 5, 1, 1, 28, 22, 0, 0, 1, 0, 1, 0, 0, 0]' : 0.09727}
{'[1, 6, 6, 6, 5, 5, 1, 1, 28, 22, 0, 0, 1, 0, 1, 0, 0, 0]' : 0.097327}
{'[1, 6, 6, 6, 5, 5, 1, 1, 28, 22, 0, 0, 1, 0, 1, 0, 0, 0]' : 0.097518}
{'[1, 6, 6, 6, 5, 5, 1, 1, 28, 22, 0, 0, 1, 0, 1, 0, 0, 0]' : 0.097162}
{'[1, 6, 6, 6, 5, 5, 1, 1, 28, 22, 0, 0, 1, 0, 1, 0, 0, 0]' : 0.097255}
{'[1, 6, 6, 6, 5, 5, 1, 1, 28, 22, 0, 0, 1, 0, 1, 0, 0, 0]' : 0.097183}
{'[1, 6, 6, 6, 5, 5, 1, 1, 28, 22, 0, 0, 1, 0, 1, 0, 0, 0]' : 0.097302}
{'[1, 6, 6, 6, 5, 5, 1, 1, 28, 22, 0, 0, 1, 0, 1, 0, 0, 0]' : 0.0971351}
{'[1, 6, 6, 6, 5, 5, 1, 1, 28, 22, 0, 0, 1, 0, 1, 0, 0, 0]' : 0.0972559}
{'[1, 6, 6, 6, 5, 5, 1, 1, 28, 22, 0, 0, 1, 0, 1, 0, 0, 0]' : 0.0971382}
{'[1, 6, 6, 6, 5, 5, 1, 1, 28, 22, 0, 0, 1, 0, 1, 0, 0, 0]' : 0.0972812}
{'[1, 6, 6, 6, 5, 5, 1, 1, 28, 22, 0, 0, 1, 0, 1, 0, 0, 0]' : 0.0971668}
{'[1, 6, 6, 6, 5, 5, 1, 1, 28, 22, 0, 0, 1, 0, 1, 0, 0, 0]' : 0.097254}
{'[1, 6, 6, 6, 5, 5, 1, 1, 28, 22, 0, 0, 1, 0, 1, 0, 0, 0]' : 0.0975211}
{'[1, 6, 6, 6, 5, 5, 1, 1, 28, 22, 0, 0, 1, 0, 1, 0, 0, 0]' : 0.097266}
{'[1, 6, 6, 6, 5, 5, 1, 1, 28, 22, 0, 0, 1, 0, 1, 0, 0, 0]' : 0.0973511}

out:
 ["{'[1, 6, 6, 6, 5, 5, 1, 1, 28, 22, 0, 0, 1, 0, 1, 0, 0, 0]' : 0.0976191}", "{'[1, 6, 6, 6, 5, 5, 1, 1, 28, 22, 0, 0, 1, 0, 1, 0, 0, 0]' : 0.097116}", "{'[1, 6, 6, 6, 5, 5, 1, 1, 28, 22, 0, 0, 1, 0, 1, 0, 0, 0]' : 0.0972571}", "{'[1, 6, 6, 6, 5, 5, 1, 1, 28, 22, 0, 0, 1, 0, 1, 0, 0, 0]' : 0.0973079}", "{'[1, 6, 6, 6, 5, 5, 1, 1, 28, 22, 0, 0, 1, 0, 1, 0, 0, 0]' : 0.0972221}", "{'[1, 6, 6, 6, 5, 5, 1, 1, 28, 22, 0, 0, 1, 0, 1, 0, 0, 0]' : 0.097209}", "{'[1, 6, 6, 6, 5, 5, 1, 1, 28, 22, 0, 0, 1, 0, 1, 0, 0, 0]' : 0.097281}", "{'[1, 6, 6, 6, 5, 5, 1, 1, 28, 22, 0, 0, 1, 0, 1, 0, 0, 0]' : 0.0972469}", "{'[1, 6, 6, 6, 5, 5, 1, 1, 28, 22, 0, 0, 1, 0, 1, 0, 0, 0]' : 0.097286}", "{'[1, 6, 6, 6, 5, 5, 1, 1, 28, 22, 0, 0, 1, 0, 1, 0, 0, 0]' : 0.0971551}", "{'[1, 6, 6, 6, 5, 5, 1, 1, 28, 22, 0, 0, 1, 0, 1, 0, 0, 0]' : 0.0973558}", "{'[1, 6, 6, 6, 5, 5, 1, 1, 28, 22, 0, 0, 1, 0, 1, 0, 0, 0]' : 0.0972562}", "{'[1, 6, 6, 6, 5, 5, 1, 1, 28, 22, 0, 0, 1, 0, 1, 0, 0, 0]' : 0.0976808}", "{'[1, 6, 6, 6, 5, 5, 1, 1, 28, 22, 0, 0, 1, 0, 1, 0, 0, 0]' : 0.0971048}", "{'[1, 6, 6, 6, 5, 5, 1, 1, 28, 22, 0, 0, 1, 0, 1, 0, 0, 0]' : 0.09727}", "{'[1, 6, 6, 6, 5, 5, 1, 1, 28, 22, 0, 0, 1, 0, 1, 0, 0, 0]' : 0.097327}", "{'[1, 6, 6, 6, 5, 5, 1, 1, 28, 22, 0, 0, 1, 0, 1, 0, 0, 0]' : 0.097518}", "{'[1, 6, 6, 6, 5, 5, 1, 1, 28, 22, 0, 0, 1, 0, 1, 0, 0, 0]' : 0.097162}", "{'[1, 6, 6, 6, 5, 5, 1, 1, 28, 22, 0, 0, 1, 0, 1, 0, 0, 0]' : 0.097255}", "{'[1, 6, 6, 6, 5, 5, 1, 1, 28, 22, 0, 0, 1, 0, 1, 0, 0, 0]' : 0.097183}", "{'[1, 6, 6, 6, 5, 5, 1, 1, 28, 22, 0, 0, 1, 0, 1, 0, 0, 0]' : 0.097302}", "{'[1, 6, 6, 6, 5, 5, 1, 1, 28, 22, 0, 0, 1, 0, 1, 0, 0, 0]' : 0.0971351}", "{'[1, 6, 6, 6, 5, 5, 1, 1, 28, 22, 0, 0, 1, 0, 1, 0, 0, 0]' : 0.0972559}", "{'[1, 6, 6, 6, 5, 5, 1, 1, 28, 22, 0, 0, 1, 0, 1, 0, 0, 0]' : 0.0971382}", "{'[1, 6, 6, 6, 5, 5, 1, 1, 28, 22, 0, 0, 1, 0, 1, 0, 0, 0]' : 0.0972812}", "{'[1, 6, 6, 6, 5, 5, 1, 1, 28, 22, 0, 0, 1, 0, 1, 0, 0, 0]' : 0.0971668}", "{'[1, 6, 6, 6, 5, 5, 1, 1, 28, 22, 0, 0, 1, 0, 1, 0, 0, 0]' : 0.097254}", "{'[1, 6, 6, 6, 5, 5, 1, 1, 28, 22, 0, 0, 1, 0, 1, 0, 0, 0]' : 0.0975211}", "{'[1, 6, 6, 6, 5, 5, 1, 1, 28, 22, 0, 0, 1, 0, 1, 0, 0, 0]' : 0.097266}", "{'[1, 6, 6, 6, 5, 5, 1, 1, 28, 22, 0, 0, 1, 0, 1, 0, 0, 0]' : 0.0973511}"]
returning from 'run': {'[1, 6, 6, 6, 5, 5, 1, 1, 28, 22, 0, 0, 1, 0, 1, 0, 0, 0]': ([0.0976191, 0.097116, 0.0972571, 0.0973079, 0.0972221, 0.097209, 0.097281, 0.0972469, 0.097286, 0.0971551, 0.0973558, 0.0972562, 0.0976808, 0.0971048, 0.09727, 0.097327, 0.097518, 0.097162, 0.097255, 0.097183, 0.097302, 0.0971351, 0.0972559, 0.0971382, 0.0972812, 0.0971668, 0.097254, 0.0975211, 0.097266, 0.0973511], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 6, 6, 6, 5, 5, 1, 1, 28, 22, 0, 0, 1, 0, 1, 0, 0, 0]': ([0.0976191, 0.097116, 0.0972571, 0.0973079, 0.0972221, 0.097209, 0.097281, 0.0972469, 0.097286, 0.0971551, 0.0973558, 0.0972562, 0.0976808, 0.0971048, 0.09727, 0.097327, 0.097518, 0.097162, 0.097255, 0.097183, 0.097302, 0.0971351, 0.0972559, 0.0971382, 0.0972812, 0.0971668, 0.097254, 0.0975211, 0.097266, 0.0973511], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		183
        Multiplications: 	62
        Divisions: 		0
        Logical: 		0
        Reads: 			396
        Writes: 		75
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest16.exe __orio_perftest16.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest16.exe  
Program Test Output: 
{'[0, 6, 3, 0, 5, 3, 0, 1, 0, 0, 21, 17, 0, 0, 1, 1, 0, 0]' : 0.161582}
{'[0, 6, 3, 0, 5, 3, 0, 1, 0, 0, 21, 17, 0, 0, 1, 1, 0, 0]' : 0.161717}
{'[0, 6, 3, 0, 5, 3, 0, 1, 0, 0, 21, 17, 0, 0, 1, 1, 0, 0]' : 0.161255}
{'[0, 6, 3, 0, 5, 3, 0, 1, 0, 0, 21, 17, 0, 0, 1, 1, 0, 0]' : 0.16148}
{'[0, 6, 3, 0, 5, 3, 0, 1, 0, 0, 21, 17, 0, 0, 1, 1, 0, 0]' : 0.161446}
{'[0, 6, 3, 0, 5, 3, 0, 1, 0, 0, 21, 17, 0, 0, 1, 1, 0, 0]' : 0.161347}
{'[0, 6, 3, 0, 5, 3, 0, 1, 0, 0, 21, 17, 0, 0, 1, 1, 0, 0]' : 0.161269}
{'[0, 6, 3, 0, 5, 3, 0, 1, 0, 0, 21, 17, 0, 0, 1, 1, 0, 0]' : 0.161654}
{'[0, 6, 3, 0, 5, 3, 0, 1, 0, 0, 21, 17, 0, 0, 1, 1, 0, 0]' : 0.161465}
{'[0, 6, 3, 0, 5, 3, 0, 1, 0, 0, 21, 17, 0, 0, 1, 1, 0, 0]' : 0.161326}
{'[0, 6, 3, 0, 5, 3, 0, 1, 0, 0, 21, 17, 0, 0, 1, 1, 0, 0]' : 0.161496}
{'[0, 6, 3, 0, 5, 3, 0, 1, 0, 0, 21, 17, 0, 0, 1, 1, 0, 0]' : 0.161597}
{'[0, 6, 3, 0, 5, 3, 0, 1, 0, 0, 21, 17, 0, 0, 1, 1, 0, 0]' : 0.16144}
{'[0, 6, 3, 0, 5, 3, 0, 1, 0, 0, 21, 17, 0, 0, 1, 1, 0, 0]' : 0.161605}
{'[0, 6, 3, 0, 5, 3, 0, 1, 0, 0, 21, 17, 0, 0, 1, 1, 0, 0]' : 0.161635}
{'[0, 6, 3, 0, 5, 3, 0, 1, 0, 0, 21, 17, 0, 0, 1, 1, 0, 0]' : 0.161627}
{'[0, 6, 3, 0, 5, 3, 0, 1, 0, 0, 21, 17, 0, 0, 1, 1, 0, 0]' : 0.16133}
{'[0, 6, 3, 0, 5, 3, 0, 1, 0, 0, 21, 17, 0, 0, 1, 1, 0, 0]' : 0.161475}
{'[0, 6, 3, 0, 5, 3, 0, 1, 0, 0, 21, 17, 0, 0, 1, 1, 0, 0]' : 0.16149}
{'[0, 6, 3, 0, 5, 3, 0, 1, 0, 0, 21, 17, 0, 0, 1, 1, 0, 0]' : 0.161456}
{'[0, 6, 3, 0, 5, 3, 0, 1, 0, 0, 21, 17, 0, 0, 1, 1, 0, 0]' : 0.16161}
{'[0, 6, 3, 0, 5, 3, 0, 1, 0, 0, 21, 17, 0, 0, 1, 1, 0, 0]' : 0.161372}
{'[0, 6, 3, 0, 5, 3, 0, 1, 0, 0, 21, 17, 0, 0, 1, 1, 0, 0]' : 0.161409}
{'[0, 6, 3, 0, 5, 3, 0, 1, 0, 0, 21, 17, 0, 0, 1, 1, 0, 0]' : 0.161539}
{'[0, 6, 3, 0, 5, 3, 0, 1, 0, 0, 21, 17, 0, 0, 1, 1, 0, 0]' : 0.16136}
{'[0, 6, 3, 0, 5, 3, 0, 1, 0, 0, 21, 17, 0, 0, 1, 1, 0, 0]' : 0.161493}
{'[0, 6, 3, 0, 5, 3, 0, 1, 0, 0, 21, 17, 0, 0, 1, 1, 0, 0]' : 0.161467}
{'[0, 6, 3, 0, 5, 3, 0, 1, 0, 0, 21, 17, 0, 0, 1, 1, 0, 0]' : 0.161338}
{'[0, 6, 3, 0, 5, 3, 0, 1, 0, 0, 21, 17, 0, 0, 1, 1, 0, 0]' : 0.161382}
{'[0, 6, 3, 0, 5, 3, 0, 1, 0, 0, 21, 17, 0, 0, 1, 1, 0, 0]' : 0.161642}

out:
 ["{'[0, 6, 3, 0, 5, 3, 0, 1, 0, 0, 21, 17, 0, 0, 1, 1, 0, 0]' : 0.161582}", "{'[0, 6, 3, 0, 5, 3, 0, 1, 0, 0, 21, 17, 0, 0, 1, 1, 0, 0]' : 0.161717}", "{'[0, 6, 3, 0, 5, 3, 0, 1, 0, 0, 21, 17, 0, 0, 1, 1, 0, 0]' : 0.161255}", "{'[0, 6, 3, 0, 5, 3, 0, 1, 0, 0, 21, 17, 0, 0, 1, 1, 0, 0]' : 0.16148}", "{'[0, 6, 3, 0, 5, 3, 0, 1, 0, 0, 21, 17, 0, 0, 1, 1, 0, 0]' : 0.161446}", "{'[0, 6, 3, 0, 5, 3, 0, 1, 0, 0, 21, 17, 0, 0, 1, 1, 0, 0]' : 0.161347}", "{'[0, 6, 3, 0, 5, 3, 0, 1, 0, 0, 21, 17, 0, 0, 1, 1, 0, 0]' : 0.161269}", "{'[0, 6, 3, 0, 5, 3, 0, 1, 0, 0, 21, 17, 0, 0, 1, 1, 0, 0]' : 0.161654}", "{'[0, 6, 3, 0, 5, 3, 0, 1, 0, 0, 21, 17, 0, 0, 1, 1, 0, 0]' : 0.161465}", "{'[0, 6, 3, 0, 5, 3, 0, 1, 0, 0, 21, 17, 0, 0, 1, 1, 0, 0]' : 0.161326}", "{'[0, 6, 3, 0, 5, 3, 0, 1, 0, 0, 21, 17, 0, 0, 1, 1, 0, 0]' : 0.161496}", "{'[0, 6, 3, 0, 5, 3, 0, 1, 0, 0, 21, 17, 0, 0, 1, 1, 0, 0]' : 0.161597}", "{'[0, 6, 3, 0, 5, 3, 0, 1, 0, 0, 21, 17, 0, 0, 1, 1, 0, 0]' : 0.16144}", "{'[0, 6, 3, 0, 5, 3, 0, 1, 0, 0, 21, 17, 0, 0, 1, 1, 0, 0]' : 0.161605}", "{'[0, 6, 3, 0, 5, 3, 0, 1, 0, 0, 21, 17, 0, 0, 1, 1, 0, 0]' : 0.161635}", "{'[0, 6, 3, 0, 5, 3, 0, 1, 0, 0, 21, 17, 0, 0, 1, 1, 0, 0]' : 0.161627}", "{'[0, 6, 3, 0, 5, 3, 0, 1, 0, 0, 21, 17, 0, 0, 1, 1, 0, 0]' : 0.16133}", "{'[0, 6, 3, 0, 5, 3, 0, 1, 0, 0, 21, 17, 0, 0, 1, 1, 0, 0]' : 0.161475}", "{'[0, 6, 3, 0, 5, 3, 0, 1, 0, 0, 21, 17, 0, 0, 1, 1, 0, 0]' : 0.16149}", "{'[0, 6, 3, 0, 5, 3, 0, 1, 0, 0, 21, 17, 0, 0, 1, 1, 0, 0]' : 0.161456}", "{'[0, 6, 3, 0, 5, 3, 0, 1, 0, 0, 21, 17, 0, 0, 1, 1, 0, 0]' : 0.16161}", "{'[0, 6, 3, 0, 5, 3, 0, 1, 0, 0, 21, 17, 0, 0, 1, 1, 0, 0]' : 0.161372}", "{'[0, 6, 3, 0, 5, 3, 0, 1, 0, 0, 21, 17, 0, 0, 1, 1, 0, 0]' : 0.161409}", "{'[0, 6, 3, 0, 5, 3, 0, 1, 0, 0, 21, 17, 0, 0, 1, 1, 0, 0]' : 0.161539}", "{'[0, 6, 3, 0, 5, 3, 0, 1, 0, 0, 21, 17, 0, 0, 1, 1, 0, 0]' : 0.16136}", "{'[0, 6, 3, 0, 5, 3, 0, 1, 0, 0, 21, 17, 0, 0, 1, 1, 0, 0]' : 0.161493}", "{'[0, 6, 3, 0, 5, 3, 0, 1, 0, 0, 21, 17, 0, 0, 1, 1, 0, 0]' : 0.161467}", "{'[0, 6, 3, 0, 5, 3, 0, 1, 0, 0, 21, 17, 0, 0, 1, 1, 0, 0]' : 0.161338}", "{'[0, 6, 3, 0, 5, 3, 0, 1, 0, 0, 21, 17, 0, 0, 1, 1, 0, 0]' : 0.161382}", "{'[0, 6, 3, 0, 5, 3, 0, 1, 0, 0, 21, 17, 0, 0, 1, 1, 0, 0]' : 0.161642}"]
returning from 'run': {'[0, 6, 3, 0, 5, 3, 0, 1, 0, 0, 21, 17, 0, 0, 1, 1, 0, 0]': ([0.161582, 0.161717, 0.161255, 0.16148, 0.161446, 0.161347, 0.161269, 0.161654, 0.161465, 0.161326, 0.161496, 0.161597, 0.16144, 0.161605, 0.161635, 0.161627, 0.16133, 0.161475, 0.16149, 0.161456, 0.16161, 0.161372, 0.161409, 0.161539, 0.16136, 0.161493, 0.161467, 0.161338, 0.161382, 0.161642], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 3, 0, 5, 3, 0, 1, 0, 0, 21, 17, 0, 0, 1, 1, 0, 0]': ([0.161582, 0.161717, 0.161255, 0.16148, 0.161446, 0.161347, 0.161269, 0.161654, 0.161465, 0.161326, 0.161496, 0.161597, 0.16144, 0.161605, 0.161635, 0.161627, 0.16133, 0.161475, 0.16149, 0.161456, 0.16161, 0.161372, 0.161409, 0.161539, 0.16136, 0.161493, 0.161467, 0.161338, 0.161382, 0.161642], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	35
        Max loop nest depth: 	5
        Additions: 		681
        Multiplications: 	130
        Divisions: 		0
        Logical: 		0
        Reads: 			1177
        Writes: 		195
        Comparisons:		35
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest17.exe __orio_perftest17.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest17.exe  
Program Test Output: 
{'[6, 2, 1, 0, 1, 5, 0, 1, 26, 3, 0, 10, 0, 0, 0, 0, 0, 1]' : 0.223377}
{'[6, 2, 1, 0, 1, 5, 0, 1, 26, 3, 0, 10, 0, 0, 0, 0, 0, 1]' : 0.223103}
{'[6, 2, 1, 0, 1, 5, 0, 1, 26, 3, 0, 10, 0, 0, 0, 0, 0, 1]' : 0.222788}
{'[6, 2, 1, 0, 1, 5, 0, 1, 26, 3, 0, 10, 0, 0, 0, 0, 0, 1]' : 0.222971}
{'[6, 2, 1, 0, 1, 5, 0, 1, 26, 3, 0, 10, 0, 0, 0, 0, 0, 1]' : 0.222915}
{'[6, 2, 1, 0, 1, 5, 0, 1, 26, 3, 0, 10, 0, 0, 0, 0, 0, 1]' : 0.223228}
{'[6, 2, 1, 0, 1, 5, 0, 1, 26, 3, 0, 10, 0, 0, 0, 0, 0, 1]' : 0.222843}
{'[6, 2, 1, 0, 1, 5, 0, 1, 26, 3, 0, 10, 0, 0, 0, 0, 0, 1]' : 0.222957}
{'[6, 2, 1, 0, 1, 5, 0, 1, 26, 3, 0, 10, 0, 0, 0, 0, 0, 1]' : 0.222839}
{'[6, 2, 1, 0, 1, 5, 0, 1, 26, 3, 0, 10, 0, 0, 0, 0, 0, 1]' : 0.223009}
{'[6, 2, 1, 0, 1, 5, 0, 1, 26, 3, 0, 10, 0, 0, 0, 0, 0, 1]' : 0.222859}
{'[6, 2, 1, 0, 1, 5, 0, 1, 26, 3, 0, 10, 0, 0, 0, 0, 0, 1]' : 0.222906}
{'[6, 2, 1, 0, 1, 5, 0, 1, 26, 3, 0, 10, 0, 0, 0, 0, 0, 1]' : 0.223033}
{'[6, 2, 1, 0, 1, 5, 0, 1, 26, 3, 0, 10, 0, 0, 0, 0, 0, 1]' : 0.222984}
{'[6, 2, 1, 0, 1, 5, 0, 1, 26, 3, 0, 10, 0, 0, 0, 0, 0, 1]' : 0.222864}
{'[6, 2, 1, 0, 1, 5, 0, 1, 26, 3, 0, 10, 0, 0, 0, 0, 0, 1]' : 0.222974}
{'[6, 2, 1, 0, 1, 5, 0, 1, 26, 3, 0, 10, 0, 0, 0, 0, 0, 1]' : 0.222864}
{'[6, 2, 1, 0, 1, 5, 0, 1, 26, 3, 0, 10, 0, 0, 0, 0, 0, 1]' : 0.222939}
{'[6, 2, 1, 0, 1, 5, 0, 1, 26, 3, 0, 10, 0, 0, 0, 0, 0, 1]' : 0.222984}
{'[6, 2, 1, 0, 1, 5, 0, 1, 26, 3, 0, 10, 0, 0, 0, 0, 0, 1]' : 0.223252}
{'[6, 2, 1, 0, 1, 5, 0, 1, 26, 3, 0, 10, 0, 0, 0, 0, 0, 1]' : 0.222893}
{'[6, 2, 1, 0, 1, 5, 0, 1, 26, 3, 0, 10, 0, 0, 0, 0, 0, 1]' : 0.222973}
{'[6, 2, 1, 0, 1, 5, 0, 1, 26, 3, 0, 10, 0, 0, 0, 0, 0, 1]' : 0.222834}
{'[6, 2, 1, 0, 1, 5, 0, 1, 26, 3, 0, 10, 0, 0, 0, 0, 0, 1]' : 0.22298}
{'[6, 2, 1, 0, 1, 5, 0, 1, 26, 3, 0, 10, 0, 0, 0, 0, 0, 1]' : 0.222855}
{'[6, 2, 1, 0, 1, 5, 0, 1, 26, 3, 0, 10, 0, 0, 0, 0, 0, 1]' : 0.223113}
{'[6, 2, 1, 0, 1, 5, 0, 1, 26, 3, 0, 10, 0, 0, 0, 0, 0, 1]' : 0.22282}
{'[6, 2, 1, 0, 1, 5, 0, 1, 26, 3, 0, 10, 0, 0, 0, 0, 0, 1]' : 0.222975}
{'[6, 2, 1, 0, 1, 5, 0, 1, 26, 3, 0, 10, 0, 0, 0, 0, 0, 1]' : 0.222891}
{'[6, 2, 1, 0, 1, 5, 0, 1, 26, 3, 0, 10, 0, 0, 0, 0, 0, 1]' : 0.222938}

out:
 ["{'[6, 2, 1, 0, 1, 5, 0, 1, 26, 3, 0, 10, 0, 0, 0, 0, 0, 1]' : 0.223377}", "{'[6, 2, 1, 0, 1, 5, 0, 1, 26, 3, 0, 10, 0, 0, 0, 0, 0, 1]' : 0.223103}", "{'[6, 2, 1, 0, 1, 5, 0, 1, 26, 3, 0, 10, 0, 0, 0, 0, 0, 1]' : 0.222788}", "{'[6, 2, 1, 0, 1, 5, 0, 1, 26, 3, 0, 10, 0, 0, 0, 0, 0, 1]' : 0.222971}", "{'[6, 2, 1, 0, 1, 5, 0, 1, 26, 3, 0, 10, 0, 0, 0, 0, 0, 1]' : 0.222915}", "{'[6, 2, 1, 0, 1, 5, 0, 1, 26, 3, 0, 10, 0, 0, 0, 0, 0, 1]' : 0.223228}", "{'[6, 2, 1, 0, 1, 5, 0, 1, 26, 3, 0, 10, 0, 0, 0, 0, 0, 1]' : 0.222843}", "{'[6, 2, 1, 0, 1, 5, 0, 1, 26, 3, 0, 10, 0, 0, 0, 0, 0, 1]' : 0.222957}", "{'[6, 2, 1, 0, 1, 5, 0, 1, 26, 3, 0, 10, 0, 0, 0, 0, 0, 1]' : 0.222839}", "{'[6, 2, 1, 0, 1, 5, 0, 1, 26, 3, 0, 10, 0, 0, 0, 0, 0, 1]' : 0.223009}", "{'[6, 2, 1, 0, 1, 5, 0, 1, 26, 3, 0, 10, 0, 0, 0, 0, 0, 1]' : 0.222859}", "{'[6, 2, 1, 0, 1, 5, 0, 1, 26, 3, 0, 10, 0, 0, 0, 0, 0, 1]' : 0.222906}", "{'[6, 2, 1, 0, 1, 5, 0, 1, 26, 3, 0, 10, 0, 0, 0, 0, 0, 1]' : 0.223033}", "{'[6, 2, 1, 0, 1, 5, 0, 1, 26, 3, 0, 10, 0, 0, 0, 0, 0, 1]' : 0.222984}", "{'[6, 2, 1, 0, 1, 5, 0, 1, 26, 3, 0, 10, 0, 0, 0, 0, 0, 1]' : 0.222864}", "{'[6, 2, 1, 0, 1, 5, 0, 1, 26, 3, 0, 10, 0, 0, 0, 0, 0, 1]' : 0.222974}", "{'[6, 2, 1, 0, 1, 5, 0, 1, 26, 3, 0, 10, 0, 0, 0, 0, 0, 1]' : 0.222864}", "{'[6, 2, 1, 0, 1, 5, 0, 1, 26, 3, 0, 10, 0, 0, 0, 0, 0, 1]' : 0.222939}", "{'[6, 2, 1, 0, 1, 5, 0, 1, 26, 3, 0, 10, 0, 0, 0, 0, 0, 1]' : 0.222984}", "{'[6, 2, 1, 0, 1, 5, 0, 1, 26, 3, 0, 10, 0, 0, 0, 0, 0, 1]' : 0.223252}", "{'[6, 2, 1, 0, 1, 5, 0, 1, 26, 3, 0, 10, 0, 0, 0, 0, 0, 1]' : 0.222893}", "{'[6, 2, 1, 0, 1, 5, 0, 1, 26, 3, 0, 10, 0, 0, 0, 0, 0, 1]' : 0.222973}", "{'[6, 2, 1, 0, 1, 5, 0, 1, 26, 3, 0, 10, 0, 0, 0, 0, 0, 1]' : 0.222834}", "{'[6, 2, 1, 0, 1, 5, 0, 1, 26, 3, 0, 10, 0, 0, 0, 0, 0, 1]' : 0.22298}", "{'[6, 2, 1, 0, 1, 5, 0, 1, 26, 3, 0, 10, 0, 0, 0, 0, 0, 1]' : 0.222855}", "{'[6, 2, 1, 0, 1, 5, 0, 1, 26, 3, 0, 10, 0, 0, 0, 0, 0, 1]' : 0.223113}", "{'[6, 2, 1, 0, 1, 5, 0, 1, 26, 3, 0, 10, 0, 0, 0, 0, 0, 1]' : 0.22282}", "{'[6, 2, 1, 0, 1, 5, 0, 1, 26, 3, 0, 10, 0, 0, 0, 0, 0, 1]' : 0.222975}", "{'[6, 2, 1, 0, 1, 5, 0, 1, 26, 3, 0, 10, 0, 0, 0, 0, 0, 1]' : 0.222891}", "{'[6, 2, 1, 0, 1, 5, 0, 1, 26, 3, 0, 10, 0, 0, 0, 0, 0, 1]' : 0.222938}"]
returning from 'run': {'[6, 2, 1, 0, 1, 5, 0, 1, 26, 3, 0, 10, 0, 0, 0, 0, 0, 1]': ([0.223377, 0.223103, 0.222788, 0.222971, 0.222915, 0.223228, 0.222843, 0.222957, 0.222839, 0.223009, 0.222859, 0.222906, 0.223033, 0.222984, 0.222864, 0.222974, 0.222864, 0.222939, 0.222984, 0.223252, 0.222893, 0.222973, 0.222834, 0.22298, 0.222855, 0.223113, 0.22282, 0.222975, 0.222891, 0.222938], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 2, 1, 0, 1, 5, 0, 1, 26, 3, 0, 10, 0, 0, 0, 0, 0, 1]': ([0.223377, 0.223103, 0.222788, 0.222971, 0.222915, 0.223228, 0.222843, 0.222957, 0.222839, 0.223009, 0.222859, 0.222906, 0.223033, 0.222984, 0.222864, 0.222974, 0.222864, 0.222939, 0.222984, 0.223252, 0.222893, 0.222973, 0.222834, 0.22298, 0.222855, 0.223113, 0.22282, 0.222975, 0.222891, 0.222938], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	100
        Max loop nest depth: 	5
        Additions: 		2324
        Multiplications: 	440
        Divisions: 		0
        Logical: 		0
        Reads: 			3682
        Writes: 		507
        Comparisons:		100
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest18.exe __orio_perftest18.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest18.exe  
Program Test Output: 
{'[4, 0, 0, 4, 1, 3, 0, 1, 16, 20, 0, 7, 0, 0, 0, 0, 1, 0]' : 0.14191}
{'[4, 0, 0, 4, 1, 3, 0, 1, 16, 20, 0, 7, 0, 0, 0, 0, 1, 0]' : 0.141566}
{'[4, 0, 0, 4, 1, 3, 0, 1, 16, 20, 0, 7, 0, 0, 0, 0, 1, 0]' : 0.141723}
{'[4, 0, 0, 4, 1, 3, 0, 1, 16, 20, 0, 7, 0, 0, 0, 0, 1, 0]' : 0.141492}
{'[4, 0, 0, 4, 1, 3, 0, 1, 16, 20, 0, 7, 0, 0, 0, 0, 1, 0]' : 0.141599}
{'[4, 0, 0, 4, 1, 3, 0, 1, 16, 20, 0, 7, 0, 0, 0, 0, 1, 0]' : 0.141671}
{'[4, 0, 0, 4, 1, 3, 0, 1, 16, 20, 0, 7, 0, 0, 0, 0, 1, 0]' : 0.141977}
{'[4, 0, 0, 4, 1, 3, 0, 1, 16, 20, 0, 7, 0, 0, 0, 0, 1, 0]' : 0.141526}
{'[4, 0, 0, 4, 1, 3, 0, 1, 16, 20, 0, 7, 0, 0, 0, 0, 1, 0]' : 0.141595}
{'[4, 0, 0, 4, 1, 3, 0, 1, 16, 20, 0, 7, 0, 0, 0, 0, 1, 0]' : 0.141609}
{'[4, 0, 0, 4, 1, 3, 0, 1, 16, 20, 0, 7, 0, 0, 0, 0, 1, 0]' : 0.141592}
{'[4, 0, 0, 4, 1, 3, 0, 1, 16, 20, 0, 7, 0, 0, 0, 0, 1, 0]' : 0.141652}
{'[4, 0, 0, 4, 1, 3, 0, 1, 16, 20, 0, 7, 0, 0, 0, 0, 1, 0]' : 0.141704}
{'[4, 0, 0, 4, 1, 3, 0, 1, 16, 20, 0, 7, 0, 0, 0, 0, 1, 0]' : 0.141558}
{'[4, 0, 0, 4, 1, 3, 0, 1, 16, 20, 0, 7, 0, 0, 0, 0, 1, 0]' : 0.141635}
{'[4, 0, 0, 4, 1, 3, 0, 1, 16, 20, 0, 7, 0, 0, 0, 0, 1, 0]' : 0.14155}
{'[4, 0, 0, 4, 1, 3, 0, 1, 16, 20, 0, 7, 0, 0, 0, 0, 1, 0]' : 0.141671}
{'[4, 0, 0, 4, 1, 3, 0, 1, 16, 20, 0, 7, 0, 0, 0, 0, 1, 0]' : 0.141811}
{'[4, 0, 0, 4, 1, 3, 0, 1, 16, 20, 0, 7, 0, 0, 0, 0, 1, 0]' : 0.141698}
{'[4, 0, 0, 4, 1, 3, 0, 1, 16, 20, 0, 7, 0, 0, 0, 0, 1, 0]' : 0.141705}
{'[4, 0, 0, 4, 1, 3, 0, 1, 16, 20, 0, 7, 0, 0, 0, 0, 1, 0]' : 0.141416}
{'[4, 0, 0, 4, 1, 3, 0, 1, 16, 20, 0, 7, 0, 0, 0, 0, 1, 0]' : 0.14162}
{'[4, 0, 0, 4, 1, 3, 0, 1, 16, 20, 0, 7, 0, 0, 0, 0, 1, 0]' : 0.141441}
{'[4, 0, 0, 4, 1, 3, 0, 1, 16, 20, 0, 7, 0, 0, 0, 0, 1, 0]' : 0.141743}
{'[4, 0, 0, 4, 1, 3, 0, 1, 16, 20, 0, 7, 0, 0, 0, 0, 1, 0]' : 0.141582}
{'[4, 0, 0, 4, 1, 3, 0, 1, 16, 20, 0, 7, 0, 0, 0, 0, 1, 0]' : 0.141609}
{'[4, 0, 0, 4, 1, 3, 0, 1, 16, 20, 0, 7, 0, 0, 0, 0, 1, 0]' : 0.141822}
{'[4, 0, 0, 4, 1, 3, 0, 1, 16, 20, 0, 7, 0, 0, 0, 0, 1, 0]' : 0.141442}
{'[4, 0, 0, 4, 1, 3, 0, 1, 16, 20, 0, 7, 0, 0, 0, 0, 1, 0]' : 0.141689}
{'[4, 0, 0, 4, 1, 3, 0, 1, 16, 20, 0, 7, 0, 0, 0, 0, 1, 0]' : 0.141605}

out:
 ["{'[4, 0, 0, 4, 1, 3, 0, 1, 16, 20, 0, 7, 0, 0, 0, 0, 1, 0]' : 0.14191}", "{'[4, 0, 0, 4, 1, 3, 0, 1, 16, 20, 0, 7, 0, 0, 0, 0, 1, 0]' : 0.141566}", "{'[4, 0, 0, 4, 1, 3, 0, 1, 16, 20, 0, 7, 0, 0, 0, 0, 1, 0]' : 0.141723}", "{'[4, 0, 0, 4, 1, 3, 0, 1, 16, 20, 0, 7, 0, 0, 0, 0, 1, 0]' : 0.141492}", "{'[4, 0, 0, 4, 1, 3, 0, 1, 16, 20, 0, 7, 0, 0, 0, 0, 1, 0]' : 0.141599}", "{'[4, 0, 0, 4, 1, 3, 0, 1, 16, 20, 0, 7, 0, 0, 0, 0, 1, 0]' : 0.141671}", "{'[4, 0, 0, 4, 1, 3, 0, 1, 16, 20, 0, 7, 0, 0, 0, 0, 1, 0]' : 0.141977}", "{'[4, 0, 0, 4, 1, 3, 0, 1, 16, 20, 0, 7, 0, 0, 0, 0, 1, 0]' : 0.141526}", "{'[4, 0, 0, 4, 1, 3, 0, 1, 16, 20, 0, 7, 0, 0, 0, 0, 1, 0]' : 0.141595}", "{'[4, 0, 0, 4, 1, 3, 0, 1, 16, 20, 0, 7, 0, 0, 0, 0, 1, 0]' : 0.141609}", "{'[4, 0, 0, 4, 1, 3, 0, 1, 16, 20, 0, 7, 0, 0, 0, 0, 1, 0]' : 0.141592}", "{'[4, 0, 0, 4, 1, 3, 0, 1, 16, 20, 0, 7, 0, 0, 0, 0, 1, 0]' : 0.141652}", "{'[4, 0, 0, 4, 1, 3, 0, 1, 16, 20, 0, 7, 0, 0, 0, 0, 1, 0]' : 0.141704}", "{'[4, 0, 0, 4, 1, 3, 0, 1, 16, 20, 0, 7, 0, 0, 0, 0, 1, 0]' : 0.141558}", "{'[4, 0, 0, 4, 1, 3, 0, 1, 16, 20, 0, 7, 0, 0, 0, 0, 1, 0]' : 0.141635}", "{'[4, 0, 0, 4, 1, 3, 0, 1, 16, 20, 0, 7, 0, 0, 0, 0, 1, 0]' : 0.14155}", "{'[4, 0, 0, 4, 1, 3, 0, 1, 16, 20, 0, 7, 0, 0, 0, 0, 1, 0]' : 0.141671}", "{'[4, 0, 0, 4, 1, 3, 0, 1, 16, 20, 0, 7, 0, 0, 0, 0, 1, 0]' : 0.141811}", "{'[4, 0, 0, 4, 1, 3, 0, 1, 16, 20, 0, 7, 0, 0, 0, 0, 1, 0]' : 0.141698}", "{'[4, 0, 0, 4, 1, 3, 0, 1, 16, 20, 0, 7, 0, 0, 0, 0, 1, 0]' : 0.141705}", "{'[4, 0, 0, 4, 1, 3, 0, 1, 16, 20, 0, 7, 0, 0, 0, 0, 1, 0]' : 0.141416}", "{'[4, 0, 0, 4, 1, 3, 0, 1, 16, 20, 0, 7, 0, 0, 0, 0, 1, 0]' : 0.14162}", "{'[4, 0, 0, 4, 1, 3, 0, 1, 16, 20, 0, 7, 0, 0, 0, 0, 1, 0]' : 0.141441}", "{'[4, 0, 0, 4, 1, 3, 0, 1, 16, 20, 0, 7, 0, 0, 0, 0, 1, 0]' : 0.141743}", "{'[4, 0, 0, 4, 1, 3, 0, 1, 16, 20, 0, 7, 0, 0, 0, 0, 1, 0]' : 0.141582}", "{'[4, 0, 0, 4, 1, 3, 0, 1, 16, 20, 0, 7, 0, 0, 0, 0, 1, 0]' : 0.141609}", "{'[4, 0, 0, 4, 1, 3, 0, 1, 16, 20, 0, 7, 0, 0, 0, 0, 1, 0]' : 0.141822}", "{'[4, 0, 0, 4, 1, 3, 0, 1, 16, 20, 0, 7, 0, 0, 0, 0, 1, 0]' : 0.141442}", "{'[4, 0, 0, 4, 1, 3, 0, 1, 16, 20, 0, 7, 0, 0, 0, 0, 1, 0]' : 0.141689}", "{'[4, 0, 0, 4, 1, 3, 0, 1, 16, 20, 0, 7, 0, 0, 0, 0, 1, 0]' : 0.141605}"]
returning from 'run': {'[4, 0, 0, 4, 1, 3, 0, 1, 16, 20, 0, 7, 0, 0, 0, 0, 1, 0]': ([0.14191, 0.141566, 0.141723, 0.141492, 0.141599, 0.141671, 0.141977, 0.141526, 0.141595, 0.141609, 0.141592, 0.141652, 0.141704, 0.141558, 0.141635, 0.14155, 0.141671, 0.141811, 0.141698, 0.141705, 0.141416, 0.14162, 0.141441, 0.141743, 0.141582, 0.141609, 0.141822, 0.141442, 0.141689, 0.141605], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 0, 0, 4, 1, 3, 0, 1, 16, 20, 0, 7, 0, 0, 0, 0, 1, 0]': ([0.14191, 0.141566, 0.141723, 0.141492, 0.141599, 0.141671, 0.141977, 0.141526, 0.141595, 0.141609, 0.141592, 0.141652, 0.141704, 0.141558, 0.141635, 0.14155, 0.141671, 0.141811, 0.141698, 0.141705, 0.141416, 0.14162, 0.141441, 0.141743, 0.141582, 0.141609, 0.141822, 0.141442, 0.141689, 0.141605], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	5
        Additions: 		3277
        Multiplications: 	900
        Divisions: 		0
        Logical: 		0
        Reads: 			5099
        Writes: 		524
        Comparisons:		25
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest19.exe __orio_perftest19.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest19.exe  
Program Test Output: 
{'[0, 2, 1, 3, 1, 1, 0, 1, 1, 0, 28, 18, 1, 0, 0, 0, 1, 1]' : 0.092536}
{'[0, 2, 1, 3, 1, 1, 0, 1, 1, 0, 28, 18, 1, 0, 0, 0, 1, 1]' : 0.0922248}
{'[0, 2, 1, 3, 1, 1, 0, 1, 1, 0, 28, 18, 1, 0, 0, 0, 1, 1]' : 0.0924671}
{'[0, 2, 1, 3, 1, 1, 0, 1, 1, 0, 28, 18, 1, 0, 0, 0, 1, 1]' : 0.0922279}
{'[0, 2, 1, 3, 1, 1, 0, 1, 1, 0, 28, 18, 1, 0, 0, 0, 1, 1]' : 0.092247}
{'[0, 2, 1, 3, 1, 1, 0, 1, 1, 0, 28, 18, 1, 0, 0, 0, 1, 1]' : 0.0922661}
{'[0, 2, 1, 3, 1, 1, 0, 1, 1, 0, 28, 18, 1, 0, 0, 0, 1, 1]' : 0.0924659}
{'[0, 2, 1, 3, 1, 1, 0, 1, 1, 0, 28, 18, 1, 0, 0, 0, 1, 1]' : 0.0922091}
{'[0, 2, 1, 3, 1, 1, 0, 1, 1, 0, 28, 18, 1, 0, 0, 0, 1, 1]' : 0.092253}
{'[0, 2, 1, 3, 1, 1, 0, 1, 1, 0, 28, 18, 1, 0, 0, 0, 1, 1]' : 0.0922611}
{'[0, 2, 1, 3, 1, 1, 0, 1, 1, 0, 28, 18, 1, 0, 0, 0, 1, 1]' : 0.092726}
{'[0, 2, 1, 3, 1, 1, 0, 1, 1, 0, 28, 18, 1, 0, 0, 0, 1, 1]' : 0.0922298}
{'[0, 2, 1, 3, 1, 1, 0, 1, 1, 0, 28, 18, 1, 0, 0, 0, 1, 1]' : 0.0923228}
{'[0, 2, 1, 3, 1, 1, 0, 1, 1, 0, 28, 18, 1, 0, 0, 0, 1, 1]' : 0.0922792}
{'[0, 2, 1, 3, 1, 1, 0, 1, 1, 0, 28, 18, 1, 0, 0, 0, 1, 1]' : 0.0924499}
{'[0, 2, 1, 3, 1, 1, 0, 1, 1, 0, 28, 18, 1, 0, 0, 0, 1, 1]' : 0.0922451}
{'[0, 2, 1, 3, 1, 1, 0, 1, 1, 0, 28, 18, 1, 0, 0, 0, 1, 1]' : 0.0922461}
{'[0, 2, 1, 3, 1, 1, 0, 1, 1, 0, 28, 18, 1, 0, 0, 0, 1, 1]' : 0.0921719}
{'[0, 2, 1, 3, 1, 1, 0, 1, 1, 0, 28, 18, 1, 0, 0, 0, 1, 1]' : 0.0924311}
{'[0, 2, 1, 3, 1, 1, 0, 1, 1, 0, 28, 18, 1, 0, 0, 0, 1, 1]' : 0.0921929}
{'[0, 2, 1, 3, 1, 1, 0, 1, 1, 0, 28, 18, 1, 0, 0, 0, 1, 1]' : 0.092263}
{'[0, 2, 1, 3, 1, 1, 0, 1, 1, 0, 28, 18, 1, 0, 0, 0, 1, 1]' : 0.0922492}
{'[0, 2, 1, 3, 1, 1, 0, 1, 1, 0, 28, 18, 1, 0, 0, 0, 1, 1]' : 0.092442}
{'[0, 2, 1, 3, 1, 1, 0, 1, 1, 0, 28, 18, 1, 0, 0, 0, 1, 1]' : 0.0922658}
{'[0, 2, 1, 3, 1, 1, 0, 1, 1, 0, 28, 18, 1, 0, 0, 0, 1, 1]' : 0.0922232}
{'[0, 2, 1, 3, 1, 1, 0, 1, 1, 0, 28, 18, 1, 0, 0, 0, 1, 1]' : 0.0921979}
{'[0, 2, 1, 3, 1, 1, 0, 1, 1, 0, 28, 18, 1, 0, 0, 0, 1, 1]' : 0.0925701}
{'[0, 2, 1, 3, 1, 1, 0, 1, 1, 0, 28, 18, 1, 0, 0, 0, 1, 1]' : 0.0924571}
{'[0, 2, 1, 3, 1, 1, 0, 1, 1, 0, 28, 18, 1, 0, 0, 0, 1, 1]' : 0.0922379}
{'[0, 2, 1, 3, 1, 1, 0, 1, 1, 0, 28, 18, 1, 0, 0, 0, 1, 1]' : 0.092242}

out:
 ["{'[0, 2, 1, 3, 1, 1, 0, 1, 1, 0, 28, 18, 1, 0, 0, 0, 1, 1]' : 0.092536}", "{'[0, 2, 1, 3, 1, 1, 0, 1, 1, 0, 28, 18, 1, 0, 0, 0, 1, 1]' : 0.0922248}", "{'[0, 2, 1, 3, 1, 1, 0, 1, 1, 0, 28, 18, 1, 0, 0, 0, 1, 1]' : 0.0924671}", "{'[0, 2, 1, 3, 1, 1, 0, 1, 1, 0, 28, 18, 1, 0, 0, 0, 1, 1]' : 0.0922279}", "{'[0, 2, 1, 3, 1, 1, 0, 1, 1, 0, 28, 18, 1, 0, 0, 0, 1, 1]' : 0.092247}", "{'[0, 2, 1, 3, 1, 1, 0, 1, 1, 0, 28, 18, 1, 0, 0, 0, 1, 1]' : 0.0922661}", "{'[0, 2, 1, 3, 1, 1, 0, 1, 1, 0, 28, 18, 1, 0, 0, 0, 1, 1]' : 0.0924659}", "{'[0, 2, 1, 3, 1, 1, 0, 1, 1, 0, 28, 18, 1, 0, 0, 0, 1, 1]' : 0.0922091}", "{'[0, 2, 1, 3, 1, 1, 0, 1, 1, 0, 28, 18, 1, 0, 0, 0, 1, 1]' : 0.092253}", "{'[0, 2, 1, 3, 1, 1, 0, 1, 1, 0, 28, 18, 1, 0, 0, 0, 1, 1]' : 0.0922611}", "{'[0, 2, 1, 3, 1, 1, 0, 1, 1, 0, 28, 18, 1, 0, 0, 0, 1, 1]' : 0.092726}", "{'[0, 2, 1, 3, 1, 1, 0, 1, 1, 0, 28, 18, 1, 0, 0, 0, 1, 1]' : 0.0922298}", "{'[0, 2, 1, 3, 1, 1, 0, 1, 1, 0, 28, 18, 1, 0, 0, 0, 1, 1]' : 0.0923228}", "{'[0, 2, 1, 3, 1, 1, 0, 1, 1, 0, 28, 18, 1, 0, 0, 0, 1, 1]' : 0.0922792}", "{'[0, 2, 1, 3, 1, 1, 0, 1, 1, 0, 28, 18, 1, 0, 0, 0, 1, 1]' : 0.0924499}", "{'[0, 2, 1, 3, 1, 1, 0, 1, 1, 0, 28, 18, 1, 0, 0, 0, 1, 1]' : 0.0922451}", "{'[0, 2, 1, 3, 1, 1, 0, 1, 1, 0, 28, 18, 1, 0, 0, 0, 1, 1]' : 0.0922461}", "{'[0, 2, 1, 3, 1, 1, 0, 1, 1, 0, 28, 18, 1, 0, 0, 0, 1, 1]' : 0.0921719}", "{'[0, 2, 1, 3, 1, 1, 0, 1, 1, 0, 28, 18, 1, 0, 0, 0, 1, 1]' : 0.0924311}", "{'[0, 2, 1, 3, 1, 1, 0, 1, 1, 0, 28, 18, 1, 0, 0, 0, 1, 1]' : 0.0921929}", "{'[0, 2, 1, 3, 1, 1, 0, 1, 1, 0, 28, 18, 1, 0, 0, 0, 1, 1]' : 0.092263}", "{'[0, 2, 1, 3, 1, 1, 0, 1, 1, 0, 28, 18, 1, 0, 0, 0, 1, 1]' : 0.0922492}", "{'[0, 2, 1, 3, 1, 1, 0, 1, 1, 0, 28, 18, 1, 0, 0, 0, 1, 1]' : 0.092442}", "{'[0, 2, 1, 3, 1, 1, 0, 1, 1, 0, 28, 18, 1, 0, 0, 0, 1, 1]' : 0.0922658}", "{'[0, 2, 1, 3, 1, 1, 0, 1, 1, 0, 28, 18, 1, 0, 0, 0, 1, 1]' : 0.0922232}", "{'[0, 2, 1, 3, 1, 1, 0, 1, 1, 0, 28, 18, 1, 0, 0, 0, 1, 1]' : 0.0921979}", "{'[0, 2, 1, 3, 1, 1, 0, 1, 1, 0, 28, 18, 1, 0, 0, 0, 1, 1]' : 0.0925701}", "{'[0, 2, 1, 3, 1, 1, 0, 1, 1, 0, 28, 18, 1, 0, 0, 0, 1, 1]' : 0.0924571}", "{'[0, 2, 1, 3, 1, 1, 0, 1, 1, 0, 28, 18, 1, 0, 0, 0, 1, 1]' : 0.0922379}", "{'[0, 2, 1, 3, 1, 1, 0, 1, 1, 0, 28, 18, 1, 0, 0, 0, 1, 1]' : 0.092242}"]
returning from 'run': {'[0, 2, 1, 3, 1, 1, 0, 1, 1, 0, 28, 18, 1, 0, 0, 0, 1, 1]': ([0.092536, 0.0922248, 0.0924671, 0.0922279, 0.092247, 0.0922661, 0.0924659, 0.0922091, 0.092253, 0.0922611, 0.092726, 0.0922298, 0.0923228, 0.0922792, 0.0924499, 0.0922451, 0.0922461, 0.0921719, 0.0924311, 0.0921929, 0.092263, 0.0922492, 0.092442, 0.0922658, 0.0922232, 0.0921979, 0.0925701, 0.0924571, 0.0922379, 0.092242], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 1, 3, 1, 1, 0, 1, 1, 0, 28, 18, 1, 0, 0, 0, 1, 1]': ([0.092536, 0.0922248, 0.0924671, 0.0922279, 0.092247, 0.0922661, 0.0924659, 0.0922091, 0.092253, 0.0922611, 0.092726, 0.0922298, 0.0923228, 0.0922792, 0.0924499, 0.0922451, 0.0922461, 0.0921719, 0.0924311, 0.0921929, 0.092263, 0.0922492, 0.092442, 0.0922658, 0.0922232, 0.0921979, 0.0925701, 0.0924571, 0.0922379, 0.092242], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = iii
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		427
        Multiplications: 	132
        Divisions: 		0
        Logical: 		0
        Reads: 			903
        Writes: 		133
        Comparisons:		15
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest20.exe __orio_perftest20.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest20.exe  
Program Test Output: 
{'[5, 1, 3, 3, 3, 2, 0, 1, 22, 0, 3, 27, 0, 2, 0, 0, 1, 1]' : 0.17601}
{'[5, 1, 3, 3, 3, 2, 0, 1, 22, 0, 3, 27, 0, 2, 0, 0, 1, 1]' : 0.175805}
{'[5, 1, 3, 3, 3, 2, 0, 1, 22, 0, 3, 27, 0, 2, 0, 0, 1, 1]' : 0.175822}
{'[5, 1, 3, 3, 3, 2, 0, 1, 22, 0, 3, 27, 0, 2, 0, 0, 1, 1]' : 0.175883}
{'[5, 1, 3, 3, 3, 2, 0, 1, 22, 0, 3, 27, 0, 2, 0, 0, 1, 1]' : 0.17586}
{'[5, 1, 3, 3, 3, 2, 0, 1, 22, 0, 3, 27, 0, 2, 0, 0, 1, 1]' : 0.175843}
{'[5, 1, 3, 3, 3, 2, 0, 1, 22, 0, 3, 27, 0, 2, 0, 0, 1, 1]' : 0.17598}
{'[5, 1, 3, 3, 3, 2, 0, 1, 22, 0, 3, 27, 0, 2, 0, 0, 1, 1]' : 0.175893}
{'[5, 1, 3, 3, 3, 2, 0, 1, 22, 0, 3, 27, 0, 2, 0, 0, 1, 1]' : 0.176002}
{'[5, 1, 3, 3, 3, 2, 0, 1, 22, 0, 3, 27, 0, 2, 0, 0, 1, 1]' : 0.175838}
{'[5, 1, 3, 3, 3, 2, 0, 1, 22, 0, 3, 27, 0, 2, 0, 0, 1, 1]' : 0.175858}
{'[5, 1, 3, 3, 3, 2, 0, 1, 22, 0, 3, 27, 0, 2, 0, 0, 1, 1]' : 0.175897}
{'[5, 1, 3, 3, 3, 2, 0, 1, 22, 0, 3, 27, 0, 2, 0, 0, 1, 1]' : 0.175927}
{'[5, 1, 3, 3, 3, 2, 0, 1, 22, 0, 3, 27, 0, 2, 0, 0, 1, 1]' : 0.175871}
{'[5, 1, 3, 3, 3, 2, 0, 1, 22, 0, 3, 27, 0, 2, 0, 0, 1, 1]' : 0.175897}
{'[5, 1, 3, 3, 3, 2, 0, 1, 22, 0, 3, 27, 0, 2, 0, 0, 1, 1]' : 0.175804}
{'[5, 1, 3, 3, 3, 2, 0, 1, 22, 0, 3, 27, 0, 2, 0, 0, 1, 1]' : 0.175893}
{'[5, 1, 3, 3, 3, 2, 0, 1, 22, 0, 3, 27, 0, 2, 0, 0, 1, 1]' : 0.175927}
{'[5, 1, 3, 3, 3, 2, 0, 1, 22, 0, 3, 27, 0, 2, 0, 0, 1, 1]' : 0.175914}
{'[5, 1, 3, 3, 3, 2, 0, 1, 22, 0, 3, 27, 0, 2, 0, 0, 1, 1]' : 0.175831}
{'[5, 1, 3, 3, 3, 2, 0, 1, 22, 0, 3, 27, 0, 2, 0, 0, 1, 1]' : 0.175973}
{'[5, 1, 3, 3, 3, 2, 0, 1, 22, 0, 3, 27, 0, 2, 0, 0, 1, 1]' : 0.175855}
{'[5, 1, 3, 3, 3, 2, 0, 1, 22, 0, 3, 27, 0, 2, 0, 0, 1, 1]' : 0.17581}
{'[5, 1, 3, 3, 3, 2, 0, 1, 22, 0, 3, 27, 0, 2, 0, 0, 1, 1]' : 0.175865}
{'[5, 1, 3, 3, 3, 2, 0, 1, 22, 0, 3, 27, 0, 2, 0, 0, 1, 1]' : 0.17588}
{'[5, 1, 3, 3, 3, 2, 0, 1, 22, 0, 3, 27, 0, 2, 0, 0, 1, 1]' : 0.175854}
{'[5, 1, 3, 3, 3, 2, 0, 1, 22, 0, 3, 27, 0, 2, 0, 0, 1, 1]' : 0.175953}
{'[5, 1, 3, 3, 3, 2, 0, 1, 22, 0, 3, 27, 0, 2, 0, 0, 1, 1]' : 0.175919}
{'[5, 1, 3, 3, 3, 2, 0, 1, 22, 0, 3, 27, 0, 2, 0, 0, 1, 1]' : 0.175872}
{'[5, 1, 3, 3, 3, 2, 0, 1, 22, 0, 3, 27, 0, 2, 0, 0, 1, 1]' : 0.175951}

out:
 ["{'[5, 1, 3, 3, 3, 2, 0, 1, 22, 0, 3, 27, 0, 2, 0, 0, 1, 1]' : 0.17601}", "{'[5, 1, 3, 3, 3, 2, 0, 1, 22, 0, 3, 27, 0, 2, 0, 0, 1, 1]' : 0.175805}", "{'[5, 1, 3, 3, 3, 2, 0, 1, 22, 0, 3, 27, 0, 2, 0, 0, 1, 1]' : 0.175822}", "{'[5, 1, 3, 3, 3, 2, 0, 1, 22, 0, 3, 27, 0, 2, 0, 0, 1, 1]' : 0.175883}", "{'[5, 1, 3, 3, 3, 2, 0, 1, 22, 0, 3, 27, 0, 2, 0, 0, 1, 1]' : 0.17586}", "{'[5, 1, 3, 3, 3, 2, 0, 1, 22, 0, 3, 27, 0, 2, 0, 0, 1, 1]' : 0.175843}", "{'[5, 1, 3, 3, 3, 2, 0, 1, 22, 0, 3, 27, 0, 2, 0, 0, 1, 1]' : 0.17598}", "{'[5, 1, 3, 3, 3, 2, 0, 1, 22, 0, 3, 27, 0, 2, 0, 0, 1, 1]' : 0.175893}", "{'[5, 1, 3, 3, 3, 2, 0, 1, 22, 0, 3, 27, 0, 2, 0, 0, 1, 1]' : 0.176002}", "{'[5, 1, 3, 3, 3, 2, 0, 1, 22, 0, 3, 27, 0, 2, 0, 0, 1, 1]' : 0.175838}", "{'[5, 1, 3, 3, 3, 2, 0, 1, 22, 0, 3, 27, 0, 2, 0, 0, 1, 1]' : 0.175858}", "{'[5, 1, 3, 3, 3, 2, 0, 1, 22, 0, 3, 27, 0, 2, 0, 0, 1, 1]' : 0.175897}", "{'[5, 1, 3, 3, 3, 2, 0, 1, 22, 0, 3, 27, 0, 2, 0, 0, 1, 1]' : 0.175927}", "{'[5, 1, 3, 3, 3, 2, 0, 1, 22, 0, 3, 27, 0, 2, 0, 0, 1, 1]' : 0.175871}", "{'[5, 1, 3, 3, 3, 2, 0, 1, 22, 0, 3, 27, 0, 2, 0, 0, 1, 1]' : 0.175897}", "{'[5, 1, 3, 3, 3, 2, 0, 1, 22, 0, 3, 27, 0, 2, 0, 0, 1, 1]' : 0.175804}", "{'[5, 1, 3, 3, 3, 2, 0, 1, 22, 0, 3, 27, 0, 2, 0, 0, 1, 1]' : 0.175893}", "{'[5, 1, 3, 3, 3, 2, 0, 1, 22, 0, 3, 27, 0, 2, 0, 0, 1, 1]' : 0.175927}", "{'[5, 1, 3, 3, 3, 2, 0, 1, 22, 0, 3, 27, 0, 2, 0, 0, 1, 1]' : 0.175914}", "{'[5, 1, 3, 3, 3, 2, 0, 1, 22, 0, 3, 27, 0, 2, 0, 0, 1, 1]' : 0.175831}", "{'[5, 1, 3, 3, 3, 2, 0, 1, 22, 0, 3, 27, 0, 2, 0, 0, 1, 1]' : 0.175973}", "{'[5, 1, 3, 3, 3, 2, 0, 1, 22, 0, 3, 27, 0, 2, 0, 0, 1, 1]' : 0.175855}", "{'[5, 1, 3, 3, 3, 2, 0, 1, 22, 0, 3, 27, 0, 2, 0, 0, 1, 1]' : 0.17581}", "{'[5, 1, 3, 3, 3, 2, 0, 1, 22, 0, 3, 27, 0, 2, 0, 0, 1, 1]' : 0.175865}", "{'[5, 1, 3, 3, 3, 2, 0, 1, 22, 0, 3, 27, 0, 2, 0, 0, 1, 1]' : 0.17588}", "{'[5, 1, 3, 3, 3, 2, 0, 1, 22, 0, 3, 27, 0, 2, 0, 0, 1, 1]' : 0.175854}", "{'[5, 1, 3, 3, 3, 2, 0, 1, 22, 0, 3, 27, 0, 2, 0, 0, 1, 1]' : 0.175953}", "{'[5, 1, 3, 3, 3, 2, 0, 1, 22, 0, 3, 27, 0, 2, 0, 0, 1, 1]' : 0.175919}", "{'[5, 1, 3, 3, 3, 2, 0, 1, 22, 0, 3, 27, 0, 2, 0, 0, 1, 1]' : 0.175872}", "{'[5, 1, 3, 3, 3, 2, 0, 1, 22, 0, 3, 27, 0, 2, 0, 0, 1, 1]' : 0.175951}"]
returning from 'run': {'[5, 1, 3, 3, 3, 2, 0, 1, 22, 0, 3, 27, 0, 2, 0, 0, 1, 1]': ([0.17601, 0.175805, 0.175822, 0.175883, 0.17586, 0.175843, 0.17598, 0.175893, 0.176002, 0.175838, 0.175858, 0.175897, 0.175927, 0.175871, 0.175897, 0.175804, 0.175893, 0.175927, 0.175914, 0.175831, 0.175973, 0.175855, 0.17581, 0.175865, 0.17588, 0.175854, 0.175953, 0.175919, 0.175872, 0.175951], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 1, 3, 3, 3, 2, 0, 1, 22, 0, 3, 27, 0, 2, 0, 0, 1, 1]': ([0.17601, 0.175805, 0.175822, 0.175883, 0.17586, 0.175843, 0.17598, 0.175893, 0.176002, 0.175838, 0.175858, 0.175897, 0.175927, 0.175871, 0.175897, 0.175804, 0.175893, 0.175927, 0.175914, 0.175831, 0.175973, 0.175855, 0.17581, 0.175865, 0.17588, 0.175854, 0.175953, 0.175919, 0.175872, 0.175951], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		362
        Multiplications: 	102
        Divisions: 		0
        Logical: 		0
        Reads: 			748
        Writes: 		113
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest21.exe __orio_perftest21.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest21.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest21.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest21.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/Orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/Orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 528, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors, data)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 409, in dopt_anova
    budget)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 334, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 280, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/phrb/code/Orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest21.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/Orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/Orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 528, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors, data)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 409, in dopt_anova
    budget)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 334, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 280, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/phrb/code/Orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	91
        Max loop nest depth: 	6
        Additions: 		5687
        Multiplications: 	1800
        Divisions: 		0
        Logical: 		0
        Reads: 			10983
        Writes: 		2100
        Comparisons:		91
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest22.exe __orio_perftest22.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest22.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest22.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest22.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/Orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/Orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 528, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors, data)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 409, in dopt_anova
    budget)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 334, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 280, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/phrb/code/Orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest22.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/Orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/Orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 528, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors, data)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 409, in dopt_anova
    budget)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 334, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 280, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/phrb/code/Orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		139
        Multiplications: 	40
        Divisions: 		0
        Logical: 		0
        Reads: 			356
        Writes: 		93
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest23.exe __orio_perftest23.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest23.exe  
Program Test Output: 
{'[4, 1, 1, 3, 5, 3, 0, 0, 9, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.136541}
{'[4, 1, 1, 3, 5, 3, 0, 0, 9, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.136596}
{'[4, 1, 1, 3, 5, 3, 0, 0, 9, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.136616}
{'[4, 1, 1, 3, 5, 3, 0, 0, 9, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.137528}
{'[4, 1, 1, 3, 5, 3, 0, 0, 9, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.136485}
{'[4, 1, 1, 3, 5, 3, 0, 0, 9, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.136542}
{'[4, 1, 1, 3, 5, 3, 0, 0, 9, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.136586}
{'[4, 1, 1, 3, 5, 3, 0, 0, 9, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.136565}
{'[4, 1, 1, 3, 5, 3, 0, 0, 9, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.136615}
{'[4, 1, 1, 3, 5, 3, 0, 0, 9, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.1365}
{'[4, 1, 1, 3, 5, 3, 0, 0, 9, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.136546}
{'[4, 1, 1, 3, 5, 3, 0, 0, 9, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.136476}
{'[4, 1, 1, 3, 5, 3, 0, 0, 9, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.136508}
{'[4, 1, 1, 3, 5, 3, 0, 0, 9, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.136611}
{'[4, 1, 1, 3, 5, 3, 0, 0, 9, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.136468}
{'[4, 1, 1, 3, 5, 3, 0, 0, 9, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.136484}
{'[4, 1, 1, 3, 5, 3, 0, 0, 9, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.13652}
{'[4, 1, 1, 3, 5, 3, 0, 0, 9, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.136477}
{'[4, 1, 1, 3, 5, 3, 0, 0, 9, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.137496}
{'[4, 1, 1, 3, 5, 3, 0, 0, 9, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.136352}
{'[4, 1, 1, 3, 5, 3, 0, 0, 9, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.136576}
{'[4, 1, 1, 3, 5, 3, 0, 0, 9, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.140089}
{'[4, 1, 1, 3, 5, 3, 0, 0, 9, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.136521}
{'[4, 1, 1, 3, 5, 3, 0, 0, 9, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.136505}
{'[4, 1, 1, 3, 5, 3, 0, 0, 9, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.136576}
{'[4, 1, 1, 3, 5, 3, 0, 0, 9, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.136595}
{'[4, 1, 1, 3, 5, 3, 0, 0, 9, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.136526}
{'[4, 1, 1, 3, 5, 3, 0, 0, 9, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.13682}
{'[4, 1, 1, 3, 5, 3, 0, 0, 9, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.136594}
{'[4, 1, 1, 3, 5, 3, 0, 0, 9, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.13661}

out:
 ["{'[4, 1, 1, 3, 5, 3, 0, 0, 9, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.136541}", "{'[4, 1, 1, 3, 5, 3, 0, 0, 9, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.136596}", "{'[4, 1, 1, 3, 5, 3, 0, 0, 9, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.136616}", "{'[4, 1, 1, 3, 5, 3, 0, 0, 9, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.137528}", "{'[4, 1, 1, 3, 5, 3, 0, 0, 9, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.136485}", "{'[4, 1, 1, 3, 5, 3, 0, 0, 9, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.136542}", "{'[4, 1, 1, 3, 5, 3, 0, 0, 9, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.136586}", "{'[4, 1, 1, 3, 5, 3, 0, 0, 9, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.136565}", "{'[4, 1, 1, 3, 5, 3, 0, 0, 9, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.136615}", "{'[4, 1, 1, 3, 5, 3, 0, 0, 9, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.1365}", "{'[4, 1, 1, 3, 5, 3, 0, 0, 9, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.136546}", "{'[4, 1, 1, 3, 5, 3, 0, 0, 9, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.136476}", "{'[4, 1, 1, 3, 5, 3, 0, 0, 9, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.136508}", "{'[4, 1, 1, 3, 5, 3, 0, 0, 9, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.136611}", "{'[4, 1, 1, 3, 5, 3, 0, 0, 9, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.136468}", "{'[4, 1, 1, 3, 5, 3, 0, 0, 9, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.136484}", "{'[4, 1, 1, 3, 5, 3, 0, 0, 9, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.13652}", "{'[4, 1, 1, 3, 5, 3, 0, 0, 9, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.136477}", "{'[4, 1, 1, 3, 5, 3, 0, 0, 9, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.137496}", "{'[4, 1, 1, 3, 5, 3, 0, 0, 9, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.136352}", "{'[4, 1, 1, 3, 5, 3, 0, 0, 9, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.136576}", "{'[4, 1, 1, 3, 5, 3, 0, 0, 9, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.140089}", "{'[4, 1, 1, 3, 5, 3, 0, 0, 9, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.136521}", "{'[4, 1, 1, 3, 5, 3, 0, 0, 9, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.136505}", "{'[4, 1, 1, 3, 5, 3, 0, 0, 9, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.136576}", "{'[4, 1, 1, 3, 5, 3, 0, 0, 9, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.136595}", "{'[4, 1, 1, 3, 5, 3, 0, 0, 9, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.136526}", "{'[4, 1, 1, 3, 5, 3, 0, 0, 9, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.13682}", "{'[4, 1, 1, 3, 5, 3, 0, 0, 9, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.136594}", "{'[4, 1, 1, 3, 5, 3, 0, 0, 9, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.13661}"]
returning from 'run': {'[4, 1, 1, 3, 5, 3, 0, 0, 9, 0, 0, 1, 0, 1, 1, 1, 1, 1]': ([0.136541, 0.136596, 0.136616, 0.137528, 0.136485, 0.136542, 0.136586, 0.136565, 0.136615, 0.1365, 0.136546, 0.136476, 0.136508, 0.136611, 0.136468, 0.136484, 0.13652, 0.136477, 0.137496, 0.136352, 0.136576, 0.140089, 0.136521, 0.136505, 0.136576, 0.136595, 0.136526, 0.13682, 0.136594, 0.13661], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 1, 1, 3, 5, 3, 0, 0, 9, 0, 0, 1, 0, 1, 1, 1, 1, 1]': ([0.136541, 0.136596, 0.136616, 0.137528, 0.136485, 0.136542, 0.136586, 0.136565, 0.136615, 0.1365, 0.136546, 0.136476, 0.136508, 0.136611, 0.136468, 0.136484, 0.13652, 0.136477, 0.137496, 0.136352, 0.136576, 0.140089, 0.136521, 0.136505, 0.136576, 0.136595, 0.136526, 0.13682, 0.136594, 0.13661], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	6
        Additions: 		199
        Multiplications: 	52
        Divisions: 		0
        Logical: 		0
        Reads: 			429
        Writes: 		90
        Comparisons:		15
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest24.exe __orio_perftest24.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest24.exe  
Program Test Output: 
{'[3, 5, 4, 2, 5, 6, 1, 1, 3, 0, 16, 27, 0, 0, 1, 1, 1, 1]' : 0.176588}
{'[3, 5, 4, 2, 5, 6, 1, 1, 3, 0, 16, 27, 0, 0, 1, 1, 1, 1]' : 0.176569}
{'[3, 5, 4, 2, 5, 6, 1, 1, 3, 0, 16, 27, 0, 0, 1, 1, 1, 1]' : 0.176641}
{'[3, 5, 4, 2, 5, 6, 1, 1, 3, 0, 16, 27, 0, 0, 1, 1, 1, 1]' : 0.176542}
{'[3, 5, 4, 2, 5, 6, 1, 1, 3, 0, 16, 27, 0, 0, 1, 1, 1, 1]' : 0.176554}
{'[3, 5, 4, 2, 5, 6, 1, 1, 3, 0, 16, 27, 0, 0, 1, 1, 1, 1]' : 0.176506}
{'[3, 5, 4, 2, 5, 6, 1, 1, 3, 0, 16, 27, 0, 0, 1, 1, 1, 1]' : 0.180196}
{'[3, 5, 4, 2, 5, 6, 1, 1, 3, 0, 16, 27, 0, 0, 1, 1, 1, 1]' : 0.176535}
{'[3, 5, 4, 2, 5, 6, 1, 1, 3, 0, 16, 27, 0, 0, 1, 1, 1, 1]' : 0.176685}
{'[3, 5, 4, 2, 5, 6, 1, 1, 3, 0, 16, 27, 0, 0, 1, 1, 1, 1]' : 0.176546}
{'[3, 5, 4, 2, 5, 6, 1, 1, 3, 0, 16, 27, 0, 0, 1, 1, 1, 1]' : 0.17651}
{'[3, 5, 4, 2, 5, 6, 1, 1, 3, 0, 16, 27, 0, 0, 1, 1, 1, 1]' : 0.176571}
{'[3, 5, 4, 2, 5, 6, 1, 1, 3, 0, 16, 27, 0, 0, 1, 1, 1, 1]' : 0.176638}
{'[3, 5, 4, 2, 5, 6, 1, 1, 3, 0, 16, 27, 0, 0, 1, 1, 1, 1]' : 0.176482}
{'[3, 5, 4, 2, 5, 6, 1, 1, 3, 0, 16, 27, 0, 0, 1, 1, 1, 1]' : 0.176577}
{'[3, 5, 4, 2, 5, 6, 1, 1, 3, 0, 16, 27, 0, 0, 1, 1, 1, 1]' : 0.180122}
{'[3, 5, 4, 2, 5, 6, 1, 1, 3, 0, 16, 27, 0, 0, 1, 1, 1, 1]' : 0.176547}
{'[3, 5, 4, 2, 5, 6, 1, 1, 3, 0, 16, 27, 0, 0, 1, 1, 1, 1]' : 0.176582}
{'[3, 5, 4, 2, 5, 6, 1, 1, 3, 0, 16, 27, 0, 0, 1, 1, 1, 1]' : 0.176438}
{'[3, 5, 4, 2, 5, 6, 1, 1, 3, 0, 16, 27, 0, 0, 1, 1, 1, 1]' : 0.176575}
{'[3, 5, 4, 2, 5, 6, 1, 1, 3, 0, 16, 27, 0, 0, 1, 1, 1, 1]' : 0.176523}
{'[3, 5, 4, 2, 5, 6, 1, 1, 3, 0, 16, 27, 0, 0, 1, 1, 1, 1]' : 0.176505}
{'[3, 5, 4, 2, 5, 6, 1, 1, 3, 0, 16, 27, 0, 0, 1, 1, 1, 1]' : 0.17649}
{'[3, 5, 4, 2, 5, 6, 1, 1, 3, 0, 16, 27, 0, 0, 1, 1, 1, 1]' : 0.180171}
{'[3, 5, 4, 2, 5, 6, 1, 1, 3, 0, 16, 27, 0, 0, 1, 1, 1, 1]' : 0.176546}
{'[3, 5, 4, 2, 5, 6, 1, 1, 3, 0, 16, 27, 0, 0, 1, 1, 1, 1]' : 0.176716}
{'[3, 5, 4, 2, 5, 6, 1, 1, 3, 0, 16, 27, 0, 0, 1, 1, 1, 1]' : 0.176455}
{'[3, 5, 4, 2, 5, 6, 1, 1, 3, 0, 16, 27, 0, 0, 1, 1, 1, 1]' : 0.17651}
{'[3, 5, 4, 2, 5, 6, 1, 1, 3, 0, 16, 27, 0, 0, 1, 1, 1, 1]' : 0.176467}
{'[3, 5, 4, 2, 5, 6, 1, 1, 3, 0, 16, 27, 0, 0, 1, 1, 1, 1]' : 0.176505}

out:
 ["{'[3, 5, 4, 2, 5, 6, 1, 1, 3, 0, 16, 27, 0, 0, 1, 1, 1, 1]' : 0.176588}", "{'[3, 5, 4, 2, 5, 6, 1, 1, 3, 0, 16, 27, 0, 0, 1, 1, 1, 1]' : 0.176569}", "{'[3, 5, 4, 2, 5, 6, 1, 1, 3, 0, 16, 27, 0, 0, 1, 1, 1, 1]' : 0.176641}", "{'[3, 5, 4, 2, 5, 6, 1, 1, 3, 0, 16, 27, 0, 0, 1, 1, 1, 1]' : 0.176542}", "{'[3, 5, 4, 2, 5, 6, 1, 1, 3, 0, 16, 27, 0, 0, 1, 1, 1, 1]' : 0.176554}", "{'[3, 5, 4, 2, 5, 6, 1, 1, 3, 0, 16, 27, 0, 0, 1, 1, 1, 1]' : 0.176506}", "{'[3, 5, 4, 2, 5, 6, 1, 1, 3, 0, 16, 27, 0, 0, 1, 1, 1, 1]' : 0.180196}", "{'[3, 5, 4, 2, 5, 6, 1, 1, 3, 0, 16, 27, 0, 0, 1, 1, 1, 1]' : 0.176535}", "{'[3, 5, 4, 2, 5, 6, 1, 1, 3, 0, 16, 27, 0, 0, 1, 1, 1, 1]' : 0.176685}", "{'[3, 5, 4, 2, 5, 6, 1, 1, 3, 0, 16, 27, 0, 0, 1, 1, 1, 1]' : 0.176546}", "{'[3, 5, 4, 2, 5, 6, 1, 1, 3, 0, 16, 27, 0, 0, 1, 1, 1, 1]' : 0.17651}", "{'[3, 5, 4, 2, 5, 6, 1, 1, 3, 0, 16, 27, 0, 0, 1, 1, 1, 1]' : 0.176571}", "{'[3, 5, 4, 2, 5, 6, 1, 1, 3, 0, 16, 27, 0, 0, 1, 1, 1, 1]' : 0.176638}", "{'[3, 5, 4, 2, 5, 6, 1, 1, 3, 0, 16, 27, 0, 0, 1, 1, 1, 1]' : 0.176482}", "{'[3, 5, 4, 2, 5, 6, 1, 1, 3, 0, 16, 27, 0, 0, 1, 1, 1, 1]' : 0.176577}", "{'[3, 5, 4, 2, 5, 6, 1, 1, 3, 0, 16, 27, 0, 0, 1, 1, 1, 1]' : 0.180122}", "{'[3, 5, 4, 2, 5, 6, 1, 1, 3, 0, 16, 27, 0, 0, 1, 1, 1, 1]' : 0.176547}", "{'[3, 5, 4, 2, 5, 6, 1, 1, 3, 0, 16, 27, 0, 0, 1, 1, 1, 1]' : 0.176582}", "{'[3, 5, 4, 2, 5, 6, 1, 1, 3, 0, 16, 27, 0, 0, 1, 1, 1, 1]' : 0.176438}", "{'[3, 5, 4, 2, 5, 6, 1, 1, 3, 0, 16, 27, 0, 0, 1, 1, 1, 1]' : 0.176575}", "{'[3, 5, 4, 2, 5, 6, 1, 1, 3, 0, 16, 27, 0, 0, 1, 1, 1, 1]' : 0.176523}", "{'[3, 5, 4, 2, 5, 6, 1, 1, 3, 0, 16, 27, 0, 0, 1, 1, 1, 1]' : 0.176505}", "{'[3, 5, 4, 2, 5, 6, 1, 1, 3, 0, 16, 27, 0, 0, 1, 1, 1, 1]' : 0.17649}", "{'[3, 5, 4, 2, 5, 6, 1, 1, 3, 0, 16, 27, 0, 0, 1, 1, 1, 1]' : 0.180171}", "{'[3, 5, 4, 2, 5, 6, 1, 1, 3, 0, 16, 27, 0, 0, 1, 1, 1, 1]' : 0.176546}", "{'[3, 5, 4, 2, 5, 6, 1, 1, 3, 0, 16, 27, 0, 0, 1, 1, 1, 1]' : 0.176716}", "{'[3, 5, 4, 2, 5, 6, 1, 1, 3, 0, 16, 27, 0, 0, 1, 1, 1, 1]' : 0.176455}", "{'[3, 5, 4, 2, 5, 6, 1, 1, 3, 0, 16, 27, 0, 0, 1, 1, 1, 1]' : 0.17651}", "{'[3, 5, 4, 2, 5, 6, 1, 1, 3, 0, 16, 27, 0, 0, 1, 1, 1, 1]' : 0.176467}", "{'[3, 5, 4, 2, 5, 6, 1, 1, 3, 0, 16, 27, 0, 0, 1, 1, 1, 1]' : 0.176505}"]
returning from 'run': {'[3, 5, 4, 2, 5, 6, 1, 1, 3, 0, 16, 27, 0, 0, 1, 1, 1, 1]': ([0.176588, 0.176569, 0.176641, 0.176542, 0.176554, 0.176506, 0.180196, 0.176535, 0.176685, 0.176546, 0.17651, 0.176571, 0.176638, 0.176482, 0.176577, 0.180122, 0.176547, 0.176582, 0.176438, 0.176575, 0.176523, 0.176505, 0.17649, 0.180171, 0.176546, 0.176716, 0.176455, 0.17651, 0.176467, 0.176505], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 5, 4, 2, 5, 6, 1, 1, 3, 0, 16, 27, 0, 0, 1, 1, 1, 1]': ([0.176588, 0.176569, 0.176641, 0.176542, 0.176554, 0.176506, 0.180196, 0.176535, 0.176685, 0.176546, 0.17651, 0.176571, 0.176638, 0.176482, 0.176577, 0.180122, 0.176547, 0.176582, 0.176438, 0.176575, 0.176523, 0.176505, 0.17649, 0.180171, 0.176546, 0.176716, 0.176455, 0.17651, 0.176467, 0.176505], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = kkk
Code stats:
        Number of loops: 	142
        Max loop nest depth: 	5
        Additions: 		1972
        Multiplications: 	496
        Divisions: 		0
        Logical: 		0
        Reads: 			4520
        Writes: 		1044
        Comparisons:		142
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest25.exe __orio_perftest25.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest25.exe  
Program Test Output: 
{'[3, 2, 3, 0, 2, 1, 0, 1, 9, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.178331}
{'[3, 2, 3, 0, 2, 1, 0, 1, 9, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.178319}
{'[3, 2, 3, 0, 2, 1, 0, 1, 9, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.178523}
{'[3, 2, 3, 0, 2, 1, 0, 1, 9, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.178479}
{'[3, 2, 3, 0, 2, 1, 0, 1, 9, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.178291}
{'[3, 2, 3, 0, 2, 1, 0, 1, 9, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.178208}
{'[3, 2, 3, 0, 2, 1, 0, 1, 9, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.178346}
{'[3, 2, 3, 0, 2, 1, 0, 1, 9, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.178476}
{'[3, 2, 3, 0, 2, 1, 0, 1, 9, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.179038}
{'[3, 2, 3, 0, 2, 1, 0, 1, 9, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.181568}
{'[3, 2, 3, 0, 2, 1, 0, 1, 9, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.180369}
{'[3, 2, 3, 0, 2, 1, 0, 1, 9, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.178623}
{'[3, 2, 3, 0, 2, 1, 0, 1, 9, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.178395}
{'[3, 2, 3, 0, 2, 1, 0, 1, 9, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.178424}
{'[3, 2, 3, 0, 2, 1, 0, 1, 9, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.178292}
{'[3, 2, 3, 0, 2, 1, 0, 1, 9, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.178984}
{'[3, 2, 3, 0, 2, 1, 0, 1, 9, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.178664}
{'[3, 2, 3, 0, 2, 1, 0, 1, 9, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.178261}
{'[3, 2, 3, 0, 2, 1, 0, 1, 9, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.17842}
{'[3, 2, 3, 0, 2, 1, 0, 1, 9, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.178754}
{'[3, 2, 3, 0, 2, 1, 0, 1, 9, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.177789}
{'[3, 2, 3, 0, 2, 1, 0, 1, 9, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.178241}
{'[3, 2, 3, 0, 2, 1, 0, 1, 9, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.178413}
{'[3, 2, 3, 0, 2, 1, 0, 1, 9, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.178119}
{'[3, 2, 3, 0, 2, 1, 0, 1, 9, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.178473}
{'[3, 2, 3, 0, 2, 1, 0, 1, 9, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.178464}
{'[3, 2, 3, 0, 2, 1, 0, 1, 9, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.177915}
{'[3, 2, 3, 0, 2, 1, 0, 1, 9, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.17866}
{'[3, 2, 3, 0, 2, 1, 0, 1, 9, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.178304}
{'[3, 2, 3, 0, 2, 1, 0, 1, 9, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.178554}

out:
 ["{'[3, 2, 3, 0, 2, 1, 0, 1, 9, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.178331}", "{'[3, 2, 3, 0, 2, 1, 0, 1, 9, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.178319}", "{'[3, 2, 3, 0, 2, 1, 0, 1, 9, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.178523}", "{'[3, 2, 3, 0, 2, 1, 0, 1, 9, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.178479}", "{'[3, 2, 3, 0, 2, 1, 0, 1, 9, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.178291}", "{'[3, 2, 3, 0, 2, 1, 0, 1, 9, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.178208}", "{'[3, 2, 3, 0, 2, 1, 0, 1, 9, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.178346}", "{'[3, 2, 3, 0, 2, 1, 0, 1, 9, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.178476}", "{'[3, 2, 3, 0, 2, 1, 0, 1, 9, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.179038}", "{'[3, 2, 3, 0, 2, 1, 0, 1, 9, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.181568}", "{'[3, 2, 3, 0, 2, 1, 0, 1, 9, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.180369}", "{'[3, 2, 3, 0, 2, 1, 0, 1, 9, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.178623}", "{'[3, 2, 3, 0, 2, 1, 0, 1, 9, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.178395}", "{'[3, 2, 3, 0, 2, 1, 0, 1, 9, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.178424}", "{'[3, 2, 3, 0, 2, 1, 0, 1, 9, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.178292}", "{'[3, 2, 3, 0, 2, 1, 0, 1, 9, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.178984}", "{'[3, 2, 3, 0, 2, 1, 0, 1, 9, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.178664}", "{'[3, 2, 3, 0, 2, 1, 0, 1, 9, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.178261}", "{'[3, 2, 3, 0, 2, 1, 0, 1, 9, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.17842}", "{'[3, 2, 3, 0, 2, 1, 0, 1, 9, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.178754}", "{'[3, 2, 3, 0, 2, 1, 0, 1, 9, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.177789}", "{'[3, 2, 3, 0, 2, 1, 0, 1, 9, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.178241}", "{'[3, 2, 3, 0, 2, 1, 0, 1, 9, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.178413}", "{'[3, 2, 3, 0, 2, 1, 0, 1, 9, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.178119}", "{'[3, 2, 3, 0, 2, 1, 0, 1, 9, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.178473}", "{'[3, 2, 3, 0, 2, 1, 0, 1, 9, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.178464}", "{'[3, 2, 3, 0, 2, 1, 0, 1, 9, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.177915}", "{'[3, 2, 3, 0, 2, 1, 0, 1, 9, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.17866}", "{'[3, 2, 3, 0, 2, 1, 0, 1, 9, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.178304}", "{'[3, 2, 3, 0, 2, 1, 0, 1, 9, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.178554}"]
returning from 'run': {'[3, 2, 3, 0, 2, 1, 0, 1, 9, 28, 0, 1, 2, 0, 0, 1, 0, 1]': ([0.178331, 0.178319, 0.178523, 0.178479, 0.178291, 0.178208, 0.178346, 0.178476, 0.179038, 0.181568, 0.180369, 0.178623, 0.178395, 0.178424, 0.178292, 0.178984, 0.178664, 0.178261, 0.17842, 0.178754, 0.177789, 0.178241, 0.178413, 0.178119, 0.178473, 0.178464, 0.177915, 0.17866, 0.178304, 0.178554], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 2, 3, 0, 2, 1, 0, 1, 9, 28, 0, 1, 2, 0, 0, 1, 0, 1]': ([0.178331, 0.178319, 0.178523, 0.178479, 0.178291, 0.178208, 0.178346, 0.178476, 0.179038, 0.181568, 0.180369, 0.178623, 0.178395, 0.178424, 0.178292, 0.178984, 0.178664, 0.178261, 0.17842, 0.178754, 0.177789, 0.178241, 0.178413, 0.178119, 0.178473, 0.178464, 0.177915, 0.17866, 0.178304, 0.178554], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	60
        Max loop nest depth: 	6
        Additions: 		6508
        Multiplications: 	1452
        Divisions: 		0
        Logical: 		0
        Reads: 			9368
        Writes: 		924
        Comparisons:		60
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest26.exe __orio_perftest26.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest26.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest26.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest26.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/Orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/Orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 528, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors, data)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 409, in dopt_anova
    budget)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 334, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 280, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/phrb/code/Orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest26.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/Orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/Orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 528, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors, data)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 409, in dopt_anova
    budget)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 334, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 280, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/phrb/code/Orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	54
        Max loop nest depth: 	6
        Additions: 		7897
        Multiplications: 	2304
        Divisions: 		0
        Logical: 		0
        Reads: 			12221
        Writes: 		1360
        Comparisons:		54
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest27.exe __orio_perftest27.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest27.exe  
Program Test Output: 
{'[5, 6, 2, 6, 0, 2, 1, 0, 28, 26, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.110717}
{'[5, 6, 2, 6, 0, 2, 1, 0, 28, 26, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.110427}
{'[5, 6, 2, 6, 0, 2, 1, 0, 28, 26, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.110324}
{'[5, 6, 2, 6, 0, 2, 1, 0, 28, 26, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.110261}
{'[5, 6, 2, 6, 0, 2, 1, 0, 28, 26, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.110307}
{'[5, 6, 2, 6, 0, 2, 1, 0, 28, 26, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.110791}
{'[5, 6, 2, 6, 0, 2, 1, 0, 28, 26, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.110265}
{'[5, 6, 2, 6, 0, 2, 1, 0, 28, 26, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.110248}
{'[5, 6, 2, 6, 0, 2, 1, 0, 28, 26, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.110314}
{'[5, 6, 2, 6, 0, 2, 1, 0, 28, 26, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.110389}
{'[5, 6, 2, 6, 0, 2, 1, 0, 28, 26, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.110391}
{'[5, 6, 2, 6, 0, 2, 1, 0, 28, 26, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.110175}
{'[5, 6, 2, 6, 0, 2, 1, 0, 28, 26, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.110439}
{'[5, 6, 2, 6, 0, 2, 1, 0, 28, 26, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.110285}
{'[5, 6, 2, 6, 0, 2, 1, 0, 28, 26, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.110274}
{'[5, 6, 2, 6, 0, 2, 1, 0, 28, 26, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.110239}
{'[5, 6, 2, 6, 0, 2, 1, 0, 28, 26, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.110446}
{'[5, 6, 2, 6, 0, 2, 1, 0, 28, 26, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.110382}
{'[5, 6, 2, 6, 0, 2, 1, 0, 28, 26, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.11043}
{'[5, 6, 2, 6, 0, 2, 1, 0, 28, 26, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.110862}
{'[5, 6, 2, 6, 0, 2, 1, 0, 28, 26, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.11028}
{'[5, 6, 2, 6, 0, 2, 1, 0, 28, 26, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.110414}
{'[5, 6, 2, 6, 0, 2, 1, 0, 28, 26, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.110339}
{'[5, 6, 2, 6, 0, 2, 1, 0, 28, 26, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.110204}
{'[5, 6, 2, 6, 0, 2, 1, 0, 28, 26, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.110257}
{'[5, 6, 2, 6, 0, 2, 1, 0, 28, 26, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.110278}
{'[5, 6, 2, 6, 0, 2, 1, 0, 28, 26, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.110483}
{'[5, 6, 2, 6, 0, 2, 1, 0, 28, 26, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.110171}
{'[5, 6, 2, 6, 0, 2, 1, 0, 28, 26, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.110288}
{'[5, 6, 2, 6, 0, 2, 1, 0, 28, 26, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.110285}

out:
 ["{'[5, 6, 2, 6, 0, 2, 1, 0, 28, 26, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.110717}", "{'[5, 6, 2, 6, 0, 2, 1, 0, 28, 26, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.110427}", "{'[5, 6, 2, 6, 0, 2, 1, 0, 28, 26, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.110324}", "{'[5, 6, 2, 6, 0, 2, 1, 0, 28, 26, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.110261}", "{'[5, 6, 2, 6, 0, 2, 1, 0, 28, 26, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.110307}", "{'[5, 6, 2, 6, 0, 2, 1, 0, 28, 26, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.110791}", "{'[5, 6, 2, 6, 0, 2, 1, 0, 28, 26, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.110265}", "{'[5, 6, 2, 6, 0, 2, 1, 0, 28, 26, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.110248}", "{'[5, 6, 2, 6, 0, 2, 1, 0, 28, 26, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.110314}", "{'[5, 6, 2, 6, 0, 2, 1, 0, 28, 26, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.110389}", "{'[5, 6, 2, 6, 0, 2, 1, 0, 28, 26, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.110391}", "{'[5, 6, 2, 6, 0, 2, 1, 0, 28, 26, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.110175}", "{'[5, 6, 2, 6, 0, 2, 1, 0, 28, 26, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.110439}", "{'[5, 6, 2, 6, 0, 2, 1, 0, 28, 26, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.110285}", "{'[5, 6, 2, 6, 0, 2, 1, 0, 28, 26, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.110274}", "{'[5, 6, 2, 6, 0, 2, 1, 0, 28, 26, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.110239}", "{'[5, 6, 2, 6, 0, 2, 1, 0, 28, 26, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.110446}", "{'[5, 6, 2, 6, 0, 2, 1, 0, 28, 26, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.110382}", "{'[5, 6, 2, 6, 0, 2, 1, 0, 28, 26, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.11043}", "{'[5, 6, 2, 6, 0, 2, 1, 0, 28, 26, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.110862}", "{'[5, 6, 2, 6, 0, 2, 1, 0, 28, 26, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.11028}", "{'[5, 6, 2, 6, 0, 2, 1, 0, 28, 26, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.110414}", "{'[5, 6, 2, 6, 0, 2, 1, 0, 28, 26, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.110339}", "{'[5, 6, 2, 6, 0, 2, 1, 0, 28, 26, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.110204}", "{'[5, 6, 2, 6, 0, 2, 1, 0, 28, 26, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.110257}", "{'[5, 6, 2, 6, 0, 2, 1, 0, 28, 26, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.110278}", "{'[5, 6, 2, 6, 0, 2, 1, 0, 28, 26, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.110483}", "{'[5, 6, 2, 6, 0, 2, 1, 0, 28, 26, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.110171}", "{'[5, 6, 2, 6, 0, 2, 1, 0, 28, 26, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.110288}", "{'[5, 6, 2, 6, 0, 2, 1, 0, 28, 26, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.110285}"]
returning from 'run': {'[5, 6, 2, 6, 0, 2, 1, 0, 28, 26, 0, 29, 1, 0, 0, 0, 0, 1]': ([0.110717, 0.110427, 0.110324, 0.110261, 0.110307, 0.110791, 0.110265, 0.110248, 0.110314, 0.110389, 0.110391, 0.110175, 0.110439, 0.110285, 0.110274, 0.110239, 0.110446, 0.110382, 0.11043, 0.110862, 0.11028, 0.110414, 0.110339, 0.110204, 0.110257, 0.110278, 0.110483, 0.110171, 0.110288, 0.110285], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 6, 2, 6, 0, 2, 1, 0, 28, 26, 0, 29, 1, 0, 0, 0, 0, 1]': ([0.110717, 0.110427, 0.110324, 0.110261, 0.110307, 0.110791, 0.110265, 0.110248, 0.110314, 0.110389, 0.110391, 0.110175, 0.110439, 0.110285, 0.110274, 0.110239, 0.110446, 0.110382, 0.11043, 0.110862, 0.11028, 0.110414, 0.110339, 0.110204, 0.110257, 0.110278, 0.110483, 0.110171, 0.110288, 0.110285], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	5
        Additions: 		760
        Multiplications: 	296
        Divisions: 		0
        Logical: 		0
        Reads: 			1537
        Writes: 		285
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest28.exe __orio_perftest28.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest28.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest28.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest28.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/Orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/Orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 528, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors, data)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 409, in dopt_anova
    budget)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 334, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 280, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/phrb/code/Orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest28.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/Orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/Orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 528, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors, data)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 409, in dopt_anova
    budget)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 334, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 280, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/phrb/code/Orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	104
        Max loop nest depth: 	5
        Additions: 		2345
        Multiplications: 	928
        Divisions: 		0
        Logical: 		0
        Reads: 			4852
        Writes: 		921
        Comparisons:		104
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest29.exe __orio_perftest29.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest29.exe  
Program Test Output: 
{'[6, 5, 1, 0, 4, 4, 1, 1, 26, 27, 14, 0, 0, 1, 1, 1, 1, 1]' : 0.24545}
{'[6, 5, 1, 0, 4, 4, 1, 1, 26, 27, 14, 0, 0, 1, 1, 1, 1, 1]' : 0.244314}
{'[6, 5, 1, 0, 4, 4, 1, 1, 26, 27, 14, 0, 0, 1, 1, 1, 1, 1]' : 0.244}
{'[6, 5, 1, 0, 4, 4, 1, 1, 26, 27, 14, 0, 0, 1, 1, 1, 1, 1]' : 0.243845}
{'[6, 5, 1, 0, 4, 4, 1, 1, 26, 27, 14, 0, 0, 1, 1, 1, 1, 1]' : 0.243127}
{'[6, 5, 1, 0, 4, 4, 1, 1, 26, 27, 14, 0, 0, 1, 1, 1, 1, 1]' : 0.242698}
{'[6, 5, 1, 0, 4, 4, 1, 1, 26, 27, 14, 0, 0, 1, 1, 1, 1, 1]' : 0.243477}
{'[6, 5, 1, 0, 4, 4, 1, 1, 26, 27, 14, 0, 0, 1, 1, 1, 1, 1]' : 0.243314}
{'[6, 5, 1, 0, 4, 4, 1, 1, 26, 27, 14, 0, 0, 1, 1, 1, 1, 1]' : 0.242874}
{'[6, 5, 1, 0, 4, 4, 1, 1, 26, 27, 14, 0, 0, 1, 1, 1, 1, 1]' : 0.243216}
{'[6, 5, 1, 0, 4, 4, 1, 1, 26, 27, 14, 0, 0, 1, 1, 1, 1, 1]' : 0.242951}
{'[6, 5, 1, 0, 4, 4, 1, 1, 26, 27, 14, 0, 0, 1, 1, 1, 1, 1]' : 0.243306}
{'[6, 5, 1, 0, 4, 4, 1, 1, 26, 27, 14, 0, 0, 1, 1, 1, 1, 1]' : 0.243488}
{'[6, 5, 1, 0, 4, 4, 1, 1, 26, 27, 14, 0, 0, 1, 1, 1, 1, 1]' : 0.24364}
{'[6, 5, 1, 0, 4, 4, 1, 1, 26, 27, 14, 0, 0, 1, 1, 1, 1, 1]' : 0.243292}
{'[6, 5, 1, 0, 4, 4, 1, 1, 26, 27, 14, 0, 0, 1, 1, 1, 1, 1]' : 0.24333}
{'[6, 5, 1, 0, 4, 4, 1, 1, 26, 27, 14, 0, 0, 1, 1, 1, 1, 1]' : 0.243453}
{'[6, 5, 1, 0, 4, 4, 1, 1, 26, 27, 14, 0, 0, 1, 1, 1, 1, 1]' : 0.24314}
{'[6, 5, 1, 0, 4, 4, 1, 1, 26, 27, 14, 0, 0, 1, 1, 1, 1, 1]' : 0.242982}
{'[6, 5, 1, 0, 4, 4, 1, 1, 26, 27, 14, 0, 0, 1, 1, 1, 1, 1]' : 0.243253}
{'[6, 5, 1, 0, 4, 4, 1, 1, 26, 27, 14, 0, 0, 1, 1, 1, 1, 1]' : 0.243561}
{'[6, 5, 1, 0, 4, 4, 1, 1, 26, 27, 14, 0, 0, 1, 1, 1, 1, 1]' : 0.243451}
{'[6, 5, 1, 0, 4, 4, 1, 1, 26, 27, 14, 0, 0, 1, 1, 1, 1, 1]' : 0.242877}
{'[6, 5, 1, 0, 4, 4, 1, 1, 26, 27, 14, 0, 0, 1, 1, 1, 1, 1]' : 0.24305}
{'[6, 5, 1, 0, 4, 4, 1, 1, 26, 27, 14, 0, 0, 1, 1, 1, 1, 1]' : 0.243099}
{'[6, 5, 1, 0, 4, 4, 1, 1, 26, 27, 14, 0, 0, 1, 1, 1, 1, 1]' : 0.243418}
{'[6, 5, 1, 0, 4, 4, 1, 1, 26, 27, 14, 0, 0, 1, 1, 1, 1, 1]' : 0.243344}
{'[6, 5, 1, 0, 4, 4, 1, 1, 26, 27, 14, 0, 0, 1, 1, 1, 1, 1]' : 0.244517}
{'[6, 5, 1, 0, 4, 4, 1, 1, 26, 27, 14, 0, 0, 1, 1, 1, 1, 1]' : 0.246618}
{'[6, 5, 1, 0, 4, 4, 1, 1, 26, 27, 14, 0, 0, 1, 1, 1, 1, 1]' : 0.246296}

out:
 ["{'[6, 5, 1, 0, 4, 4, 1, 1, 26, 27, 14, 0, 0, 1, 1, 1, 1, 1]' : 0.24545}", "{'[6, 5, 1, 0, 4, 4, 1, 1, 26, 27, 14, 0, 0, 1, 1, 1, 1, 1]' : 0.244314}", "{'[6, 5, 1, 0, 4, 4, 1, 1, 26, 27, 14, 0, 0, 1, 1, 1, 1, 1]' : 0.244}", "{'[6, 5, 1, 0, 4, 4, 1, 1, 26, 27, 14, 0, 0, 1, 1, 1, 1, 1]' : 0.243845}", "{'[6, 5, 1, 0, 4, 4, 1, 1, 26, 27, 14, 0, 0, 1, 1, 1, 1, 1]' : 0.243127}", "{'[6, 5, 1, 0, 4, 4, 1, 1, 26, 27, 14, 0, 0, 1, 1, 1, 1, 1]' : 0.242698}", "{'[6, 5, 1, 0, 4, 4, 1, 1, 26, 27, 14, 0, 0, 1, 1, 1, 1, 1]' : 0.243477}", "{'[6, 5, 1, 0, 4, 4, 1, 1, 26, 27, 14, 0, 0, 1, 1, 1, 1, 1]' : 0.243314}", "{'[6, 5, 1, 0, 4, 4, 1, 1, 26, 27, 14, 0, 0, 1, 1, 1, 1, 1]' : 0.242874}", "{'[6, 5, 1, 0, 4, 4, 1, 1, 26, 27, 14, 0, 0, 1, 1, 1, 1, 1]' : 0.243216}", "{'[6, 5, 1, 0, 4, 4, 1, 1, 26, 27, 14, 0, 0, 1, 1, 1, 1, 1]' : 0.242951}", "{'[6, 5, 1, 0, 4, 4, 1, 1, 26, 27, 14, 0, 0, 1, 1, 1, 1, 1]' : 0.243306}", "{'[6, 5, 1, 0, 4, 4, 1, 1, 26, 27, 14, 0, 0, 1, 1, 1, 1, 1]' : 0.243488}", "{'[6, 5, 1, 0, 4, 4, 1, 1, 26, 27, 14, 0, 0, 1, 1, 1, 1, 1]' : 0.24364}", "{'[6, 5, 1, 0, 4, 4, 1, 1, 26, 27, 14, 0, 0, 1, 1, 1, 1, 1]' : 0.243292}", "{'[6, 5, 1, 0, 4, 4, 1, 1, 26, 27, 14, 0, 0, 1, 1, 1, 1, 1]' : 0.24333}", "{'[6, 5, 1, 0, 4, 4, 1, 1, 26, 27, 14, 0, 0, 1, 1, 1, 1, 1]' : 0.243453}", "{'[6, 5, 1, 0, 4, 4, 1, 1, 26, 27, 14, 0, 0, 1, 1, 1, 1, 1]' : 0.24314}", "{'[6, 5, 1, 0, 4, 4, 1, 1, 26, 27, 14, 0, 0, 1, 1, 1, 1, 1]' : 0.242982}", "{'[6, 5, 1, 0, 4, 4, 1, 1, 26, 27, 14, 0, 0, 1, 1, 1, 1, 1]' : 0.243253}", "{'[6, 5, 1, 0, 4, 4, 1, 1, 26, 27, 14, 0, 0, 1, 1, 1, 1, 1]' : 0.243561}", "{'[6, 5, 1, 0, 4, 4, 1, 1, 26, 27, 14, 0, 0, 1, 1, 1, 1, 1]' : 0.243451}", "{'[6, 5, 1, 0, 4, 4, 1, 1, 26, 27, 14, 0, 0, 1, 1, 1, 1, 1]' : 0.242877}", "{'[6, 5, 1, 0, 4, 4, 1, 1, 26, 27, 14, 0, 0, 1, 1, 1, 1, 1]' : 0.24305}", "{'[6, 5, 1, 0, 4, 4, 1, 1, 26, 27, 14, 0, 0, 1, 1, 1, 1, 1]' : 0.243099}", "{'[6, 5, 1, 0, 4, 4, 1, 1, 26, 27, 14, 0, 0, 1, 1, 1, 1, 1]' : 0.243418}", "{'[6, 5, 1, 0, 4, 4, 1, 1, 26, 27, 14, 0, 0, 1, 1, 1, 1, 1]' : 0.243344}", "{'[6, 5, 1, 0, 4, 4, 1, 1, 26, 27, 14, 0, 0, 1, 1, 1, 1, 1]' : 0.244517}", "{'[6, 5, 1, 0, 4, 4, 1, 1, 26, 27, 14, 0, 0, 1, 1, 1, 1, 1]' : 0.246618}", "{'[6, 5, 1, 0, 4, 4, 1, 1, 26, 27, 14, 0, 0, 1, 1, 1, 1, 1]' : 0.246296}"]
returning from 'run': {'[6, 5, 1, 0, 4, 4, 1, 1, 26, 27, 14, 0, 0, 1, 1, 1, 1, 1]': ([0.24545, 0.244314, 0.244, 0.243845, 0.243127, 0.242698, 0.243477, 0.243314, 0.242874, 0.243216, 0.242951, 0.243306, 0.243488, 0.24364, 0.243292, 0.24333, 0.243453, 0.24314, 0.242982, 0.243253, 0.243561, 0.243451, 0.242877, 0.24305, 0.243099, 0.243418, 0.243344, 0.244517, 0.246618, 0.246296], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 5, 1, 0, 4, 4, 1, 1, 26, 27, 14, 0, 0, 1, 1, 1, 1, 1]': ([0.24545, 0.244314, 0.244, 0.243845, 0.243127, 0.242698, 0.243477, 0.243314, 0.242874, 0.243216, 0.242951, 0.243306, 0.243488, 0.24364, 0.243292, 0.24333, 0.243453, 0.24314, 0.242982, 0.243253, 0.243561, 0.243451, 0.242877, 0.24305, 0.243099, 0.243418, 0.243344, 0.244517, 0.246618, 0.246296], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = kkk
Code stats:
        Number of loops: 	38
        Max loop nest depth: 	5
        Additions: 		1905
        Multiplications: 	868
        Divisions: 		0
        Logical: 		0
        Reads: 			3761
        Writes: 		656
        Comparisons:		38
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest30.exe __orio_perftest30.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest30.exe  
Program Test Output: 
{'[6, 5, 5, 4, 6, 3, 0, 1, 29, 4, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.0879819}
{'[6, 5, 5, 4, 6, 3, 0, 1, 29, 4, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.087631}
{'[6, 5, 5, 4, 6, 3, 0, 1, 29, 4, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.0879471}
{'[6, 5, 5, 4, 6, 3, 0, 1, 29, 4, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.088058}
{'[6, 5, 5, 4, 6, 3, 0, 1, 29, 4, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.0876989}
{'[6, 5, 5, 4, 6, 3, 0, 1, 29, 4, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.0877681}
{'[6, 5, 5, 4, 6, 3, 0, 1, 29, 4, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.0876811}
{'[6, 5, 5, 4, 6, 3, 0, 1, 29, 4, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.087599}
{'[6, 5, 5, 4, 6, 3, 0, 1, 29, 4, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.0875881}
{'[6, 5, 5, 4, 6, 3, 0, 1, 29, 4, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.087724}
{'[6, 5, 5, 4, 6, 3, 0, 1, 29, 4, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.0876579}
{'[6, 5, 5, 4, 6, 3, 0, 1, 29, 4, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.0876081}
{'[6, 5, 5, 4, 6, 3, 0, 1, 29, 4, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.0875728}
{'[6, 5, 5, 4, 6, 3, 0, 1, 29, 4, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.0876961}
{'[6, 5, 5, 4, 6, 3, 0, 1, 29, 4, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.087702}
{'[6, 5, 5, 4, 6, 3, 0, 1, 29, 4, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.087503}
{'[6, 5, 5, 4, 6, 3, 0, 1, 29, 4, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.087656}
{'[6, 5, 5, 4, 6, 3, 0, 1, 29, 4, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.087729}
{'[6, 5, 5, 4, 6, 3, 0, 1, 29, 4, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.087842}
{'[6, 5, 5, 4, 6, 3, 0, 1, 29, 4, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.0875511}
{'[6, 5, 5, 4, 6, 3, 0, 1, 29, 4, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.0881979}
{'[6, 5, 5, 4, 6, 3, 0, 1, 29, 4, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.087605}
{'[6, 5, 5, 4, 6, 3, 0, 1, 29, 4, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.0875521}
{'[6, 5, 5, 4, 6, 3, 0, 1, 29, 4, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.0877409}
{'[6, 5, 5, 4, 6, 3, 0, 1, 29, 4, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.087594}
{'[6, 5, 5, 4, 6, 3, 0, 1, 29, 4, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.0876129}
{'[6, 5, 5, 4, 6, 3, 0, 1, 29, 4, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.0876489}
{'[6, 5, 5, 4, 6, 3, 0, 1, 29, 4, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.0896461}
{'[6, 5, 5, 4, 6, 3, 0, 1, 29, 4, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.0876808}
{'[6, 5, 5, 4, 6, 3, 0, 1, 29, 4, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.0877202}

out:
 ["{'[6, 5, 5, 4, 6, 3, 0, 1, 29, 4, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.0879819}", "{'[6, 5, 5, 4, 6, 3, 0, 1, 29, 4, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.087631}", "{'[6, 5, 5, 4, 6, 3, 0, 1, 29, 4, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.0879471}", "{'[6, 5, 5, 4, 6, 3, 0, 1, 29, 4, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.088058}", "{'[6, 5, 5, 4, 6, 3, 0, 1, 29, 4, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.0876989}", "{'[6, 5, 5, 4, 6, 3, 0, 1, 29, 4, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.0877681}", "{'[6, 5, 5, 4, 6, 3, 0, 1, 29, 4, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.0876811}", "{'[6, 5, 5, 4, 6, 3, 0, 1, 29, 4, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.087599}", "{'[6, 5, 5, 4, 6, 3, 0, 1, 29, 4, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.0875881}", "{'[6, 5, 5, 4, 6, 3, 0, 1, 29, 4, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.087724}", "{'[6, 5, 5, 4, 6, 3, 0, 1, 29, 4, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.0876579}", "{'[6, 5, 5, 4, 6, 3, 0, 1, 29, 4, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.0876081}", "{'[6, 5, 5, 4, 6, 3, 0, 1, 29, 4, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.0875728}", "{'[6, 5, 5, 4, 6, 3, 0, 1, 29, 4, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.0876961}", "{'[6, 5, 5, 4, 6, 3, 0, 1, 29, 4, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.087702}", "{'[6, 5, 5, 4, 6, 3, 0, 1, 29, 4, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.087503}", "{'[6, 5, 5, 4, 6, 3, 0, 1, 29, 4, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.087656}", "{'[6, 5, 5, 4, 6, 3, 0, 1, 29, 4, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.087729}", "{'[6, 5, 5, 4, 6, 3, 0, 1, 29, 4, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.087842}", "{'[6, 5, 5, 4, 6, 3, 0, 1, 29, 4, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.0875511}", "{'[6, 5, 5, 4, 6, 3, 0, 1, 29, 4, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.0881979}", "{'[6, 5, 5, 4, 6, 3, 0, 1, 29, 4, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.087605}", "{'[6, 5, 5, 4, 6, 3, 0, 1, 29, 4, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.0875521}", "{'[6, 5, 5, 4, 6, 3, 0, 1, 29, 4, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.0877409}", "{'[6, 5, 5, 4, 6, 3, 0, 1, 29, 4, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.087594}", "{'[6, 5, 5, 4, 6, 3, 0, 1, 29, 4, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.0876129}", "{'[6, 5, 5, 4, 6, 3, 0, 1, 29, 4, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.0876489}", "{'[6, 5, 5, 4, 6, 3, 0, 1, 29, 4, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.0896461}", "{'[6, 5, 5, 4, 6, 3, 0, 1, 29, 4, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.0876808}", "{'[6, 5, 5, 4, 6, 3, 0, 1, 29, 4, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.0877202}"]
returning from 'run': {'[6, 5, 5, 4, 6, 3, 0, 1, 29, 4, 28, 0, 1, 0, 0, 1, 0, 0]': ([0.0879819, 0.087631, 0.0879471, 0.088058, 0.0876989, 0.0877681, 0.0876811, 0.087599, 0.0875881, 0.087724, 0.0876579, 0.0876081, 0.0875728, 0.0876961, 0.087702, 0.087503, 0.087656, 0.087729, 0.087842, 0.0875511, 0.0881979, 0.087605, 0.0875521, 0.0877409, 0.087594, 0.0876129, 0.0876489, 0.0896461, 0.0876808, 0.0877202], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 5, 5, 4, 6, 3, 0, 1, 29, 4, 28, 0, 1, 0, 0, 1, 0, 0]': ([0.0879819, 0.087631, 0.0879471, 0.088058, 0.0876989, 0.0877681, 0.0876811, 0.087599, 0.0875881, 0.087724, 0.0876579, 0.0876081, 0.0875728, 0.0876961, 0.087702, 0.087503, 0.087656, 0.087729, 0.087842, 0.0875511, 0.0881979, 0.087605, 0.0875521, 0.0877409, 0.087594, 0.0876129, 0.0876489, 0.0896461, 0.0876808, 0.0877202], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = kkk
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	4
        Additions: 		715
        Multiplications: 	204
        Divisions: 		0
        Logical: 		0
        Reads: 			1263
        Writes: 		163
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest31.exe __orio_perftest31.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest31.exe  
Program Test Output: 
{'[0, 0, 4, 6, 1, 2, 1, 0, 2, 4, 9, 0, 0, 1, 1, 0, 1, 0]' : 0.106311}
{'[0, 0, 4, 6, 1, 2, 1, 0, 2, 4, 9, 0, 0, 1, 1, 0, 1, 0]' : 0.105964}
{'[0, 0, 4, 6, 1, 2, 1, 0, 2, 4, 9, 0, 0, 1, 1, 0, 1, 0]' : 0.105986}
{'[0, 0, 4, 6, 1, 2, 1, 0, 2, 4, 9, 0, 0, 1, 1, 0, 1, 0]' : 0.106028}
{'[0, 0, 4, 6, 1, 2, 1, 0, 2, 4, 9, 0, 0, 1, 1, 0, 1, 0]' : 0.106046}
{'[0, 0, 4, 6, 1, 2, 1, 0, 2, 4, 9, 0, 0, 1, 1, 0, 1, 0]' : 0.105986}
{'[0, 0, 4, 6, 1, 2, 1, 0, 2, 4, 9, 0, 0, 1, 1, 0, 1, 0]' : 0.106027}
{'[0, 0, 4, 6, 1, 2, 1, 0, 2, 4, 9, 0, 0, 1, 1, 0, 1, 0]' : 0.106004}
{'[0, 0, 4, 6, 1, 2, 1, 0, 2, 4, 9, 0, 0, 1, 1, 0, 1, 0]' : 0.10594}
{'[0, 0, 4, 6, 1, 2, 1, 0, 2, 4, 9, 0, 0, 1, 1, 0, 1, 0]' : 0.106409}
{'[0, 0, 4, 6, 1, 2, 1, 0, 2, 4, 9, 0, 0, 1, 1, 0, 1, 0]' : 0.105908}
{'[0, 0, 4, 6, 1, 2, 1, 0, 2, 4, 9, 0, 0, 1, 1, 0, 1, 0]' : 0.106005}
{'[0, 0, 4, 6, 1, 2, 1, 0, 2, 4, 9, 0, 0, 1, 1, 0, 1, 0]' : 0.106036}
{'[0, 0, 4, 6, 1, 2, 1, 0, 2, 4, 9, 0, 0, 1, 1, 0, 1, 0]' : 0.10608}
{'[0, 0, 4, 6, 1, 2, 1, 0, 2, 4, 9, 0, 0, 1, 1, 0, 1, 0]' : 0.105919}
{'[0, 0, 4, 6, 1, 2, 1, 0, 2, 4, 9, 0, 0, 1, 1, 0, 1, 0]' : 0.106038}
{'[0, 0, 4, 6, 1, 2, 1, 0, 2, 4, 9, 0, 0, 1, 1, 0, 1, 0]' : 0.105981}
{'[0, 0, 4, 6, 1, 2, 1, 0, 2, 4, 9, 0, 0, 1, 1, 0, 1, 0]' : 0.105998}
{'[0, 0, 4, 6, 1, 2, 1, 0, 2, 4, 9, 0, 0, 1, 1, 0, 1, 0]' : 0.105978}
{'[0, 0, 4, 6, 1, 2, 1, 0, 2, 4, 9, 0, 0, 1, 1, 0, 1, 0]' : 0.105995}
{'[0, 0, 4, 6, 1, 2, 1, 0, 2, 4, 9, 0, 0, 1, 1, 0, 1, 0]' : 0.105919}
{'[0, 0, 4, 6, 1, 2, 1, 0, 2, 4, 9, 0, 0, 1, 1, 0, 1, 0]' : 0.10597}
{'[0, 0, 4, 6, 1, 2, 1, 0, 2, 4, 9, 0, 0, 1, 1, 0, 1, 0]' : 0.106134}
{'[0, 0, 4, 6, 1, 2, 1, 0, 2, 4, 9, 0, 0, 1, 1, 0, 1, 0]' : 0.106171}
{'[0, 0, 4, 6, 1, 2, 1, 0, 2, 4, 9, 0, 0, 1, 1, 0, 1, 0]' : 0.105983}
{'[0, 0, 4, 6, 1, 2, 1, 0, 2, 4, 9, 0, 0, 1, 1, 0, 1, 0]' : 0.105946}
{'[0, 0, 4, 6, 1, 2, 1, 0, 2, 4, 9, 0, 0, 1, 1, 0, 1, 0]' : 0.106003}
{'[0, 0, 4, 6, 1, 2, 1, 0, 2, 4, 9, 0, 0, 1, 1, 0, 1, 0]' : 0.105963}
{'[0, 0, 4, 6, 1, 2, 1, 0, 2, 4, 9, 0, 0, 1, 1, 0, 1, 0]' : 0.105982}
{'[0, 0, 4, 6, 1, 2, 1, 0, 2, 4, 9, 0, 0, 1, 1, 0, 1, 0]' : 0.105912}

out:
 ["{'[0, 0, 4, 6, 1, 2, 1, 0, 2, 4, 9, 0, 0, 1, 1, 0, 1, 0]' : 0.106311}", "{'[0, 0, 4, 6, 1, 2, 1, 0, 2, 4, 9, 0, 0, 1, 1, 0, 1, 0]' : 0.105964}", "{'[0, 0, 4, 6, 1, 2, 1, 0, 2, 4, 9, 0, 0, 1, 1, 0, 1, 0]' : 0.105986}", "{'[0, 0, 4, 6, 1, 2, 1, 0, 2, 4, 9, 0, 0, 1, 1, 0, 1, 0]' : 0.106028}", "{'[0, 0, 4, 6, 1, 2, 1, 0, 2, 4, 9, 0, 0, 1, 1, 0, 1, 0]' : 0.106046}", "{'[0, 0, 4, 6, 1, 2, 1, 0, 2, 4, 9, 0, 0, 1, 1, 0, 1, 0]' : 0.105986}", "{'[0, 0, 4, 6, 1, 2, 1, 0, 2, 4, 9, 0, 0, 1, 1, 0, 1, 0]' : 0.106027}", "{'[0, 0, 4, 6, 1, 2, 1, 0, 2, 4, 9, 0, 0, 1, 1, 0, 1, 0]' : 0.106004}", "{'[0, 0, 4, 6, 1, 2, 1, 0, 2, 4, 9, 0, 0, 1, 1, 0, 1, 0]' : 0.10594}", "{'[0, 0, 4, 6, 1, 2, 1, 0, 2, 4, 9, 0, 0, 1, 1, 0, 1, 0]' : 0.106409}", "{'[0, 0, 4, 6, 1, 2, 1, 0, 2, 4, 9, 0, 0, 1, 1, 0, 1, 0]' : 0.105908}", "{'[0, 0, 4, 6, 1, 2, 1, 0, 2, 4, 9, 0, 0, 1, 1, 0, 1, 0]' : 0.106005}", "{'[0, 0, 4, 6, 1, 2, 1, 0, 2, 4, 9, 0, 0, 1, 1, 0, 1, 0]' : 0.106036}", "{'[0, 0, 4, 6, 1, 2, 1, 0, 2, 4, 9, 0, 0, 1, 1, 0, 1, 0]' : 0.10608}", "{'[0, 0, 4, 6, 1, 2, 1, 0, 2, 4, 9, 0, 0, 1, 1, 0, 1, 0]' : 0.105919}", "{'[0, 0, 4, 6, 1, 2, 1, 0, 2, 4, 9, 0, 0, 1, 1, 0, 1, 0]' : 0.106038}", "{'[0, 0, 4, 6, 1, 2, 1, 0, 2, 4, 9, 0, 0, 1, 1, 0, 1, 0]' : 0.105981}", "{'[0, 0, 4, 6, 1, 2, 1, 0, 2, 4, 9, 0, 0, 1, 1, 0, 1, 0]' : 0.105998}", "{'[0, 0, 4, 6, 1, 2, 1, 0, 2, 4, 9, 0, 0, 1, 1, 0, 1, 0]' : 0.105978}", "{'[0, 0, 4, 6, 1, 2, 1, 0, 2, 4, 9, 0, 0, 1, 1, 0, 1, 0]' : 0.105995}", "{'[0, 0, 4, 6, 1, 2, 1, 0, 2, 4, 9, 0, 0, 1, 1, 0, 1, 0]' : 0.105919}", "{'[0, 0, 4, 6, 1, 2, 1, 0, 2, 4, 9, 0, 0, 1, 1, 0, 1, 0]' : 0.10597}", "{'[0, 0, 4, 6, 1, 2, 1, 0, 2, 4, 9, 0, 0, 1, 1, 0, 1, 0]' : 0.106134}", "{'[0, 0, 4, 6, 1, 2, 1, 0, 2, 4, 9, 0, 0, 1, 1, 0, 1, 0]' : 0.106171}", "{'[0, 0, 4, 6, 1, 2, 1, 0, 2, 4, 9, 0, 0, 1, 1, 0, 1, 0]' : 0.105983}", "{'[0, 0, 4, 6, 1, 2, 1, 0, 2, 4, 9, 0, 0, 1, 1, 0, 1, 0]' : 0.105946}", "{'[0, 0, 4, 6, 1, 2, 1, 0, 2, 4, 9, 0, 0, 1, 1, 0, 1, 0]' : 0.106003}", "{'[0, 0, 4, 6, 1, 2, 1, 0, 2, 4, 9, 0, 0, 1, 1, 0, 1, 0]' : 0.105963}", "{'[0, 0, 4, 6, 1, 2, 1, 0, 2, 4, 9, 0, 0, 1, 1, 0, 1, 0]' : 0.105982}", "{'[0, 0, 4, 6, 1, 2, 1, 0, 2, 4, 9, 0, 0, 1, 1, 0, 1, 0]' : 0.105912}"]
returning from 'run': {'[0, 0, 4, 6, 1, 2, 1, 0, 2, 4, 9, 0, 0, 1, 1, 0, 1, 0]': ([0.106311, 0.105964, 0.105986, 0.106028, 0.106046, 0.105986, 0.106027, 0.106004, 0.10594, 0.106409, 0.105908, 0.106005, 0.106036, 0.10608, 0.105919, 0.106038, 0.105981, 0.105998, 0.105978, 0.105995, 0.105919, 0.10597, 0.106134, 0.106171, 0.105983, 0.105946, 0.106003, 0.105963, 0.105982, 0.105912], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 4, 6, 1, 2, 1, 0, 2, 4, 9, 0, 0, 1, 1, 0, 1, 0]': ([0.106311, 0.105964, 0.105986, 0.106028, 0.106046, 0.105986, 0.106027, 0.106004, 0.10594, 0.106409, 0.105908, 0.106005, 0.106036, 0.10608, 0.105919, 0.106038, 0.105981, 0.105998, 0.105978, 0.105995, 0.105919, 0.10597, 0.106134, 0.106171, 0.105983, 0.105946, 0.106003, 0.105963, 0.105982, 0.105912], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	5
        Additions: 		870
        Multiplications: 	378
        Divisions: 		0
        Logical: 		0
        Reads: 			1813
        Writes: 		346
        Comparisons:		22
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest32.exe __orio_perftest32.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest32.exe  
Program Test Output: 
{'[1, 1, 0, 6, 0, 1, 1, 0, 12, 0, 5, 4, 1, 0, 1, 1, 0, 1]' : 0.0786281}
{'[1, 1, 0, 6, 0, 1, 1, 0, 12, 0, 5, 4, 1, 0, 1, 1, 0, 1]' : 0.078321}
{'[1, 1, 0, 6, 0, 1, 1, 0, 12, 0, 5, 4, 1, 0, 1, 1, 0, 1]' : 0.078238}
{'[1, 1, 0, 6, 0, 1, 1, 0, 12, 0, 5, 4, 1, 0, 1, 1, 0, 1]' : 0.07845}
{'[1, 1, 0, 6, 0, 1, 1, 0, 12, 0, 5, 4, 1, 0, 1, 1, 0, 1]' : 0.0783908}
{'[1, 1, 0, 6, 0, 1, 1, 0, 12, 0, 5, 4, 1, 0, 1, 1, 0, 1]' : 0.0783522}
{'[1, 1, 0, 6, 0, 1, 1, 0, 12, 0, 5, 4, 1, 0, 1, 1, 0, 1]' : 0.0783479}
{'[1, 1, 0, 6, 0, 1, 1, 0, 12, 0, 5, 4, 1, 0, 1, 1, 0, 1]' : 0.0783582}
{'[1, 1, 0, 6, 0, 1, 1, 0, 12, 0, 5, 4, 1, 0, 1, 1, 0, 1]' : 0.0783222}
{'[1, 1, 0, 6, 0, 1, 1, 0, 12, 0, 5, 4, 1, 0, 1, 1, 0, 1]' : 0.078532}
{'[1, 1, 0, 6, 0, 1, 1, 0, 12, 0, 5, 4, 1, 0, 1, 1, 0, 1]' : 0.0785351}
{'[1, 1, 0, 6, 0, 1, 1, 0, 12, 0, 5, 4, 1, 0, 1, 1, 0, 1]' : 0.078439}
{'[1, 1, 0, 6, 0, 1, 1, 0, 12, 0, 5, 4, 1, 0, 1, 1, 0, 1]' : 0.0782828}
{'[1, 1, 0, 6, 0, 1, 1, 0, 12, 0, 5, 4, 1, 0, 1, 1, 0, 1]' : 0.078346}
{'[1, 1, 0, 6, 0, 1, 1, 0, 12, 0, 5, 4, 1, 0, 1, 1, 0, 1]' : 0.078326}
{'[1, 1, 0, 6, 0, 1, 1, 0, 12, 0, 5, 4, 1, 0, 1, 1, 0, 1]' : 0.0783432}
{'[1, 1, 0, 6, 0, 1, 1, 0, 12, 0, 5, 4, 1, 0, 1, 1, 0, 1]' : 0.0783489}
{'[1, 1, 0, 6, 0, 1, 1, 0, 12, 0, 5, 4, 1, 0, 1, 1, 0, 1]' : 0.0787721}
{'[1, 1, 0, 6, 0, 1, 1, 0, 12, 0, 5, 4, 1, 0, 1, 1, 0, 1]' : 0.078418}
{'[1, 1, 0, 6, 0, 1, 1, 0, 12, 0, 5, 4, 1, 0, 1, 1, 0, 1]' : 0.078336}
{'[1, 1, 0, 6, 0, 1, 1, 0, 12, 0, 5, 4, 1, 0, 1, 1, 0, 1]' : 0.0783639}
{'[1, 1, 0, 6, 0, 1, 1, 0, 12, 0, 5, 4, 1, 0, 1, 1, 0, 1]' : 0.0783608}
{'[1, 1, 0, 6, 0, 1, 1, 0, 12, 0, 5, 4, 1, 0, 1, 1, 0, 1]' : 0.0783548}
{'[1, 1, 0, 6, 0, 1, 1, 0, 12, 0, 5, 4, 1, 0, 1, 1, 0, 1]' : 0.0784192}
{'[1, 1, 0, 6, 0, 1, 1, 0, 12, 0, 5, 4, 1, 0, 1, 1, 0, 1]' : 0.0783548}
{'[1, 1, 0, 6, 0, 1, 1, 0, 12, 0, 5, 4, 1, 0, 1, 1, 0, 1]' : 0.0784972}
{'[1, 1, 0, 6, 0, 1, 1, 0, 12, 0, 5, 4, 1, 0, 1, 1, 0, 1]' : 0.078331}
{'[1, 1, 0, 6, 0, 1, 1, 0, 12, 0, 5, 4, 1, 0, 1, 1, 0, 1]' : 0.0783129}
{'[1, 1, 0, 6, 0, 1, 1, 0, 12, 0, 5, 4, 1, 0, 1, 1, 0, 1]' : 0.0783172}
{'[1, 1, 0, 6, 0, 1, 1, 0, 12, 0, 5, 4, 1, 0, 1, 1, 0, 1]' : 0.078244}

out:
 ["{'[1, 1, 0, 6, 0, 1, 1, 0, 12, 0, 5, 4, 1, 0, 1, 1, 0, 1]' : 0.0786281}", "{'[1, 1, 0, 6, 0, 1, 1, 0, 12, 0, 5, 4, 1, 0, 1, 1, 0, 1]' : 0.078321}", "{'[1, 1, 0, 6, 0, 1, 1, 0, 12, 0, 5, 4, 1, 0, 1, 1, 0, 1]' : 0.078238}", "{'[1, 1, 0, 6, 0, 1, 1, 0, 12, 0, 5, 4, 1, 0, 1, 1, 0, 1]' : 0.07845}", "{'[1, 1, 0, 6, 0, 1, 1, 0, 12, 0, 5, 4, 1, 0, 1, 1, 0, 1]' : 0.0783908}", "{'[1, 1, 0, 6, 0, 1, 1, 0, 12, 0, 5, 4, 1, 0, 1, 1, 0, 1]' : 0.0783522}", "{'[1, 1, 0, 6, 0, 1, 1, 0, 12, 0, 5, 4, 1, 0, 1, 1, 0, 1]' : 0.0783479}", "{'[1, 1, 0, 6, 0, 1, 1, 0, 12, 0, 5, 4, 1, 0, 1, 1, 0, 1]' : 0.0783582}", "{'[1, 1, 0, 6, 0, 1, 1, 0, 12, 0, 5, 4, 1, 0, 1, 1, 0, 1]' : 0.0783222}", "{'[1, 1, 0, 6, 0, 1, 1, 0, 12, 0, 5, 4, 1, 0, 1, 1, 0, 1]' : 0.078532}", "{'[1, 1, 0, 6, 0, 1, 1, 0, 12, 0, 5, 4, 1, 0, 1, 1, 0, 1]' : 0.0785351}", "{'[1, 1, 0, 6, 0, 1, 1, 0, 12, 0, 5, 4, 1, 0, 1, 1, 0, 1]' : 0.078439}", "{'[1, 1, 0, 6, 0, 1, 1, 0, 12, 0, 5, 4, 1, 0, 1, 1, 0, 1]' : 0.0782828}", "{'[1, 1, 0, 6, 0, 1, 1, 0, 12, 0, 5, 4, 1, 0, 1, 1, 0, 1]' : 0.078346}", "{'[1, 1, 0, 6, 0, 1, 1, 0, 12, 0, 5, 4, 1, 0, 1, 1, 0, 1]' : 0.078326}", "{'[1, 1, 0, 6, 0, 1, 1, 0, 12, 0, 5, 4, 1, 0, 1, 1, 0, 1]' : 0.0783432}", "{'[1, 1, 0, 6, 0, 1, 1, 0, 12, 0, 5, 4, 1, 0, 1, 1, 0, 1]' : 0.0783489}", "{'[1, 1, 0, 6, 0, 1, 1, 0, 12, 0, 5, 4, 1, 0, 1, 1, 0, 1]' : 0.0787721}", "{'[1, 1, 0, 6, 0, 1, 1, 0, 12, 0, 5, 4, 1, 0, 1, 1, 0, 1]' : 0.078418}", "{'[1, 1, 0, 6, 0, 1, 1, 0, 12, 0, 5, 4, 1, 0, 1, 1, 0, 1]' : 0.078336}", "{'[1, 1, 0, 6, 0, 1, 1, 0, 12, 0, 5, 4, 1, 0, 1, 1, 0, 1]' : 0.0783639}", "{'[1, 1, 0, 6, 0, 1, 1, 0, 12, 0, 5, 4, 1, 0, 1, 1, 0, 1]' : 0.0783608}", "{'[1, 1, 0, 6, 0, 1, 1, 0, 12, 0, 5, 4, 1, 0, 1, 1, 0, 1]' : 0.0783548}", "{'[1, 1, 0, 6, 0, 1, 1, 0, 12, 0, 5, 4, 1, 0, 1, 1, 0, 1]' : 0.0784192}", "{'[1, 1, 0, 6, 0, 1, 1, 0, 12, 0, 5, 4, 1, 0, 1, 1, 0, 1]' : 0.0783548}", "{'[1, 1, 0, 6, 0, 1, 1, 0, 12, 0, 5, 4, 1, 0, 1, 1, 0, 1]' : 0.0784972}", "{'[1, 1, 0, 6, 0, 1, 1, 0, 12, 0, 5, 4, 1, 0, 1, 1, 0, 1]' : 0.078331}", "{'[1, 1, 0, 6, 0, 1, 1, 0, 12, 0, 5, 4, 1, 0, 1, 1, 0, 1]' : 0.0783129}", "{'[1, 1, 0, 6, 0, 1, 1, 0, 12, 0, 5, 4, 1, 0, 1, 1, 0, 1]' : 0.0783172}", "{'[1, 1, 0, 6, 0, 1, 1, 0, 12, 0, 5, 4, 1, 0, 1, 1, 0, 1]' : 0.078244}"]
returning from 'run': {'[1, 1, 0, 6, 0, 1, 1, 0, 12, 0, 5, 4, 1, 0, 1, 1, 0, 1]': ([0.0786281, 0.078321, 0.078238, 0.07845, 0.0783908, 0.0783522, 0.0783479, 0.0783582, 0.0783222, 0.078532, 0.0785351, 0.078439, 0.0782828, 0.078346, 0.078326, 0.0783432, 0.0783489, 0.0787721, 0.078418, 0.078336, 0.0783639, 0.0783608, 0.0783548, 0.0784192, 0.0783548, 0.0784972, 0.078331, 0.0783129, 0.0783172, 0.078244], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 1, 0, 6, 0, 1, 1, 0, 12, 0, 5, 4, 1, 0, 1, 1, 0, 1]': ([0.0786281, 0.078321, 0.078238, 0.07845, 0.0783908, 0.0783522, 0.0783479, 0.0783582, 0.0783222, 0.078532, 0.0785351, 0.078439, 0.0782828, 0.078346, 0.078326, 0.0783432, 0.0783489, 0.0787721, 0.078418, 0.078336, 0.0783639, 0.0783608, 0.0783548, 0.0784192, 0.0783548, 0.0784972, 0.078331, 0.0783129, 0.0783172, 0.078244], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = iii
Code stats:
        Number of loops: 	81
        Max loop nest depth: 	5
        Additions: 		3907
        Multiplications: 	952
        Divisions: 		0
        Logical: 		0
        Reads: 			6247
        Writes: 		745
        Comparisons:		81
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest33.exe __orio_perftest33.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest33.exe  
Program Test Output: 
{'[5, 1, 2, 3, 5, 4, 0, 1, 12, 24, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.0927238}
{'[5, 1, 2, 3, 5, 4, 0, 1, 12, 24, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.0922961}
{'[5, 1, 2, 3, 5, 4, 0, 1, 12, 24, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.0924048}
{'[5, 1, 2, 3, 5, 4, 0, 1, 12, 24, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.0922651}
{'[5, 1, 2, 3, 5, 4, 0, 1, 12, 24, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.0923119}
{'[5, 1, 2, 3, 5, 4, 0, 1, 12, 24, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.0924191}
{'[5, 1, 2, 3, 5, 4, 0, 1, 12, 24, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.0924709}
{'[5, 1, 2, 3, 5, 4, 0, 1, 12, 24, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.0923221}
{'[5, 1, 2, 3, 5, 4, 0, 1, 12, 24, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.092396}
{'[5, 1, 2, 3, 5, 4, 0, 1, 12, 24, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.0964601}
{'[5, 1, 2, 3, 5, 4, 0, 1, 12, 24, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.0923409}
{'[5, 1, 2, 3, 5, 4, 0, 1, 12, 24, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.092499}
{'[5, 1, 2, 3, 5, 4, 0, 1, 12, 24, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.0923588}
{'[5, 1, 2, 3, 5, 4, 0, 1, 12, 24, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.0923262}
{'[5, 1, 2, 3, 5, 4, 0, 1, 12, 24, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.092279}
{'[5, 1, 2, 3, 5, 4, 0, 1, 12, 24, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.0922348}
{'[5, 1, 2, 3, 5, 4, 0, 1, 12, 24, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.0922949}
{'[5, 1, 2, 3, 5, 4, 0, 1, 12, 24, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.0923522}
{'[5, 1, 2, 3, 5, 4, 0, 1, 12, 24, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.0923049}
{'[5, 1, 2, 3, 5, 4, 0, 1, 12, 24, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.092279}
{'[5, 1, 2, 3, 5, 4, 0, 1, 12, 24, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.09237}
{'[5, 1, 2, 3, 5, 4, 0, 1, 12, 24, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.092288}
{'[5, 1, 2, 3, 5, 4, 0, 1, 12, 24, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.0923769}
{'[5, 1, 2, 3, 5, 4, 0, 1, 12, 24, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.0922348}
{'[5, 1, 2, 3, 5, 4, 0, 1, 12, 24, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.0923259}
{'[5, 1, 2, 3, 5, 4, 0, 1, 12, 24, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.0923271}
{'[5, 1, 2, 3, 5, 4, 0, 1, 12, 24, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.0965998}
{'[5, 1, 2, 3, 5, 4, 0, 1, 12, 24, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.0923371}
{'[5, 1, 2, 3, 5, 4, 0, 1, 12, 24, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.0923419}
{'[5, 1, 2, 3, 5, 4, 0, 1, 12, 24, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.092375}

out:
 ["{'[5, 1, 2, 3, 5, 4, 0, 1, 12, 24, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.0927238}", "{'[5, 1, 2, 3, 5, 4, 0, 1, 12, 24, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.0922961}", "{'[5, 1, 2, 3, 5, 4, 0, 1, 12, 24, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.0924048}", "{'[5, 1, 2, 3, 5, 4, 0, 1, 12, 24, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.0922651}", "{'[5, 1, 2, 3, 5, 4, 0, 1, 12, 24, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.0923119}", "{'[5, 1, 2, 3, 5, 4, 0, 1, 12, 24, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.0924191}", "{'[5, 1, 2, 3, 5, 4, 0, 1, 12, 24, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.0924709}", "{'[5, 1, 2, 3, 5, 4, 0, 1, 12, 24, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.0923221}", "{'[5, 1, 2, 3, 5, 4, 0, 1, 12, 24, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.092396}", "{'[5, 1, 2, 3, 5, 4, 0, 1, 12, 24, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.0964601}", "{'[5, 1, 2, 3, 5, 4, 0, 1, 12, 24, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.0923409}", "{'[5, 1, 2, 3, 5, 4, 0, 1, 12, 24, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.092499}", "{'[5, 1, 2, 3, 5, 4, 0, 1, 12, 24, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.0923588}", "{'[5, 1, 2, 3, 5, 4, 0, 1, 12, 24, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.0923262}", "{'[5, 1, 2, 3, 5, 4, 0, 1, 12, 24, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.092279}", "{'[5, 1, 2, 3, 5, 4, 0, 1, 12, 24, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.0922348}", "{'[5, 1, 2, 3, 5, 4, 0, 1, 12, 24, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.0922949}", "{'[5, 1, 2, 3, 5, 4, 0, 1, 12, 24, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.0923522}", "{'[5, 1, 2, 3, 5, 4, 0, 1, 12, 24, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.0923049}", "{'[5, 1, 2, 3, 5, 4, 0, 1, 12, 24, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.092279}", "{'[5, 1, 2, 3, 5, 4, 0, 1, 12, 24, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.09237}", "{'[5, 1, 2, 3, 5, 4, 0, 1, 12, 24, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.092288}", "{'[5, 1, 2, 3, 5, 4, 0, 1, 12, 24, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.0923769}", "{'[5, 1, 2, 3, 5, 4, 0, 1, 12, 24, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.0922348}", "{'[5, 1, 2, 3, 5, 4, 0, 1, 12, 24, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.0923259}", "{'[5, 1, 2, 3, 5, 4, 0, 1, 12, 24, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.0923271}", "{'[5, 1, 2, 3, 5, 4, 0, 1, 12, 24, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.0965998}", "{'[5, 1, 2, 3, 5, 4, 0, 1, 12, 24, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.0923371}", "{'[5, 1, 2, 3, 5, 4, 0, 1, 12, 24, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.0923419}", "{'[5, 1, 2, 3, 5, 4, 0, 1, 12, 24, 4, 0, 1, 0, 1, 0, 0, 1]' : 0.092375}"]
returning from 'run': {'[5, 1, 2, 3, 5, 4, 0, 1, 12, 24, 4, 0, 1, 0, 1, 0, 0, 1]': ([0.0927238, 0.0922961, 0.0924048, 0.0922651, 0.0923119, 0.0924191, 0.0924709, 0.0923221, 0.092396, 0.0964601, 0.0923409, 0.092499, 0.0923588, 0.0923262, 0.092279, 0.0922348, 0.0922949, 0.0923522, 0.0923049, 0.092279, 0.09237, 0.092288, 0.0923769, 0.0922348, 0.0923259, 0.0923271, 0.0965998, 0.0923371, 0.0923419, 0.092375], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 1, 2, 3, 5, 4, 0, 1, 12, 24, 4, 0, 1, 0, 1, 0, 0, 1]': ([0.0927238, 0.0922961, 0.0924048, 0.0922651, 0.0923119, 0.0924191, 0.0924709, 0.0923221, 0.092396, 0.0964601, 0.0923409, 0.092499, 0.0923588, 0.0923262, 0.092279, 0.0922348, 0.0922949, 0.0923522, 0.0923049, 0.092279, 0.09237, 0.092288, 0.0923769, 0.0922348, 0.0923259, 0.0923271, 0.0965998, 0.0923371, 0.0923419, 0.092375], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	6
        Additions: 		2318
        Multiplications: 	1098
        Divisions: 		0
        Logical: 		0
        Reads: 			4533
        Writes: 		764
        Comparisons:		22
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest34.exe __orio_perftest34.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest34.exe  
Program Test Output: 
{'[6, 1, 2, 6, 3, 0, 0, 0, 10, 0, 25, 24, 1, 1, 0, 1, 0, 0]' : 0.093303}
{'[6, 1, 2, 6, 3, 0, 0, 0, 10, 0, 25, 24, 1, 1, 0, 1, 0, 0]' : 0.0927851}
{'[6, 1, 2, 6, 3, 0, 0, 0, 10, 0, 25, 24, 1, 1, 0, 1, 0, 0]' : 0.0927789}
{'[6, 1, 2, 6, 3, 0, 0, 0, 10, 0, 25, 24, 1, 1, 0, 1, 0, 0]' : 0.0932729}
{'[6, 1, 2, 6, 3, 0, 0, 0, 10, 0, 25, 24, 1, 1, 0, 1, 0, 0]' : 0.0928562}
{'[6, 1, 2, 6, 3, 0, 0, 0, 10, 0, 25, 24, 1, 1, 0, 1, 0, 0]' : 0.0929298}
{'[6, 1, 2, 6, 3, 0, 0, 0, 10, 0, 25, 24, 1, 1, 0, 1, 0, 0]' : 0.0928941}
{'[6, 1, 2, 6, 3, 0, 0, 0, 10, 0, 25, 24, 1, 1, 0, 1, 0, 0]' : 0.092833}
{'[6, 1, 2, 6, 3, 0, 0, 0, 10, 0, 25, 24, 1, 1, 0, 1, 0, 0]' : 0.092778}
{'[6, 1, 2, 6, 3, 0, 0, 0, 10, 0, 25, 24, 1, 1, 0, 1, 0, 0]' : 0.092792}
{'[6, 1, 2, 6, 3, 0, 0, 0, 10, 0, 25, 24, 1, 1, 0, 1, 0, 0]' : 0.0927861}
{'[6, 1, 2, 6, 3, 0, 0, 0, 10, 0, 25, 24, 1, 1, 0, 1, 0, 0]' : 0.092854}
{'[6, 1, 2, 6, 3, 0, 0, 0, 10, 0, 25, 24, 1, 1, 0, 1, 0, 0]' : 0.0927949}
{'[6, 1, 2, 6, 3, 0, 0, 0, 10, 0, 25, 24, 1, 1, 0, 1, 0, 0]' : 0.0928948}
{'[6, 1, 2, 6, 3, 0, 0, 0, 10, 0, 25, 24, 1, 1, 0, 1, 0, 0]' : 0.0928762}
{'[6, 1, 2, 6, 3, 0, 0, 0, 10, 0, 25, 24, 1, 1, 0, 1, 0, 0]' : 0.092778}
{'[6, 1, 2, 6, 3, 0, 0, 0, 10, 0, 25, 24, 1, 1, 0, 1, 0, 0]' : 0.0927808}
{'[6, 1, 2, 6, 3, 0, 0, 0, 10, 0, 25, 24, 1, 1, 0, 1, 0, 0]' : 0.0928831}
{'[6, 1, 2, 6, 3, 0, 0, 0, 10, 0, 25, 24, 1, 1, 0, 1, 0, 0]' : 0.0928249}
{'[6, 1, 2, 6, 3, 0, 0, 0, 10, 0, 25, 24, 1, 1, 0, 1, 0, 0]' : 0.093359}
{'[6, 1, 2, 6, 3, 0, 0, 0, 10, 0, 25, 24, 1, 1, 0, 1, 0, 0]' : 0.092782}
{'[6, 1, 2, 6, 3, 0, 0, 0, 10, 0, 25, 24, 1, 1, 0, 1, 0, 0]' : 0.0927439}
{'[6, 1, 2, 6, 3, 0, 0, 0, 10, 0, 25, 24, 1, 1, 0, 1, 0, 0]' : 0.092802}
{'[6, 1, 2, 6, 3, 0, 0, 0, 10, 0, 25, 24, 1, 1, 0, 1, 0, 0]' : 0.092802}
{'[6, 1, 2, 6, 3, 0, 0, 0, 10, 0, 25, 24, 1, 1, 0, 1, 0, 0]' : 0.0927451}
{'[6, 1, 2, 6, 3, 0, 0, 0, 10, 0, 25, 24, 1, 1, 0, 1, 0, 0]' : 0.092859}
{'[6, 1, 2, 6, 3, 0, 0, 0, 10, 0, 25, 24, 1, 1, 0, 1, 0, 0]' : 0.0927529}
{'[6, 1, 2, 6, 3, 0, 0, 0, 10, 0, 25, 24, 1, 1, 0, 1, 0, 0]' : 0.0928831}
{'[6, 1, 2, 6, 3, 0, 0, 0, 10, 0, 25, 24, 1, 1, 0, 1, 0, 0]' : 0.0927989}
{'[6, 1, 2, 6, 3, 0, 0, 0, 10, 0, 25, 24, 1, 1, 0, 1, 0, 0]' : 0.092767}

out:
 ["{'[6, 1, 2, 6, 3, 0, 0, 0, 10, 0, 25, 24, 1, 1, 0, 1, 0, 0]' : 0.093303}", "{'[6, 1, 2, 6, 3, 0, 0, 0, 10, 0, 25, 24, 1, 1, 0, 1, 0, 0]' : 0.0927851}", "{'[6, 1, 2, 6, 3, 0, 0, 0, 10, 0, 25, 24, 1, 1, 0, 1, 0, 0]' : 0.0927789}", "{'[6, 1, 2, 6, 3, 0, 0, 0, 10, 0, 25, 24, 1, 1, 0, 1, 0, 0]' : 0.0932729}", "{'[6, 1, 2, 6, 3, 0, 0, 0, 10, 0, 25, 24, 1, 1, 0, 1, 0, 0]' : 0.0928562}", "{'[6, 1, 2, 6, 3, 0, 0, 0, 10, 0, 25, 24, 1, 1, 0, 1, 0, 0]' : 0.0929298}", "{'[6, 1, 2, 6, 3, 0, 0, 0, 10, 0, 25, 24, 1, 1, 0, 1, 0, 0]' : 0.0928941}", "{'[6, 1, 2, 6, 3, 0, 0, 0, 10, 0, 25, 24, 1, 1, 0, 1, 0, 0]' : 0.092833}", "{'[6, 1, 2, 6, 3, 0, 0, 0, 10, 0, 25, 24, 1, 1, 0, 1, 0, 0]' : 0.092778}", "{'[6, 1, 2, 6, 3, 0, 0, 0, 10, 0, 25, 24, 1, 1, 0, 1, 0, 0]' : 0.092792}", "{'[6, 1, 2, 6, 3, 0, 0, 0, 10, 0, 25, 24, 1, 1, 0, 1, 0, 0]' : 0.0927861}", "{'[6, 1, 2, 6, 3, 0, 0, 0, 10, 0, 25, 24, 1, 1, 0, 1, 0, 0]' : 0.092854}", "{'[6, 1, 2, 6, 3, 0, 0, 0, 10, 0, 25, 24, 1, 1, 0, 1, 0, 0]' : 0.0927949}", "{'[6, 1, 2, 6, 3, 0, 0, 0, 10, 0, 25, 24, 1, 1, 0, 1, 0, 0]' : 0.0928948}", "{'[6, 1, 2, 6, 3, 0, 0, 0, 10, 0, 25, 24, 1, 1, 0, 1, 0, 0]' : 0.0928762}", "{'[6, 1, 2, 6, 3, 0, 0, 0, 10, 0, 25, 24, 1, 1, 0, 1, 0, 0]' : 0.092778}", "{'[6, 1, 2, 6, 3, 0, 0, 0, 10, 0, 25, 24, 1, 1, 0, 1, 0, 0]' : 0.0927808}", "{'[6, 1, 2, 6, 3, 0, 0, 0, 10, 0, 25, 24, 1, 1, 0, 1, 0, 0]' : 0.0928831}", "{'[6, 1, 2, 6, 3, 0, 0, 0, 10, 0, 25, 24, 1, 1, 0, 1, 0, 0]' : 0.0928249}", "{'[6, 1, 2, 6, 3, 0, 0, 0, 10, 0, 25, 24, 1, 1, 0, 1, 0, 0]' : 0.093359}", "{'[6, 1, 2, 6, 3, 0, 0, 0, 10, 0, 25, 24, 1, 1, 0, 1, 0, 0]' : 0.092782}", "{'[6, 1, 2, 6, 3, 0, 0, 0, 10, 0, 25, 24, 1, 1, 0, 1, 0, 0]' : 0.0927439}", "{'[6, 1, 2, 6, 3, 0, 0, 0, 10, 0, 25, 24, 1, 1, 0, 1, 0, 0]' : 0.092802}", "{'[6, 1, 2, 6, 3, 0, 0, 0, 10, 0, 25, 24, 1, 1, 0, 1, 0, 0]' : 0.092802}", "{'[6, 1, 2, 6, 3, 0, 0, 0, 10, 0, 25, 24, 1, 1, 0, 1, 0, 0]' : 0.0927451}", "{'[6, 1, 2, 6, 3, 0, 0, 0, 10, 0, 25, 24, 1, 1, 0, 1, 0, 0]' : 0.092859}", "{'[6, 1, 2, 6, 3, 0, 0, 0, 10, 0, 25, 24, 1, 1, 0, 1, 0, 0]' : 0.0927529}", "{'[6, 1, 2, 6, 3, 0, 0, 0, 10, 0, 25, 24, 1, 1, 0, 1, 0, 0]' : 0.0928831}", "{'[6, 1, 2, 6, 3, 0, 0, 0, 10, 0, 25, 24, 1, 1, 0, 1, 0, 0]' : 0.0927989}", "{'[6, 1, 2, 6, 3, 0, 0, 0, 10, 0, 25, 24, 1, 1, 0, 1, 0, 0]' : 0.092767}"]
returning from 'run': {'[6, 1, 2, 6, 3, 0, 0, 0, 10, 0, 25, 24, 1, 1, 0, 1, 0, 0]': ([0.093303, 0.0927851, 0.0927789, 0.0932729, 0.0928562, 0.0929298, 0.0928941, 0.092833, 0.092778, 0.092792, 0.0927861, 0.092854, 0.0927949, 0.0928948, 0.0928762, 0.092778, 0.0927808, 0.0928831, 0.0928249, 0.093359, 0.092782, 0.0927439, 0.092802, 0.092802, 0.0927451, 0.092859, 0.0927529, 0.0928831, 0.0927989, 0.092767], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 1, 2, 6, 3, 0, 0, 0, 10, 0, 25, 24, 1, 1, 0, 1, 0, 0]': ([0.093303, 0.0927851, 0.0927789, 0.0932729, 0.0928562, 0.0929298, 0.0928941, 0.092833, 0.092778, 0.092792, 0.0927861, 0.092854, 0.0927949, 0.0928948, 0.0928762, 0.092778, 0.0927808, 0.0928831, 0.0928249, 0.093359, 0.092782, 0.0927439, 0.092802, 0.092802, 0.0927451, 0.092859, 0.0927529, 0.0928831, 0.0927989, 0.092767], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	54
        Max loop nest depth: 	6
        Additions: 		2962
        Multiplications: 	1152
        Divisions: 		0
        Logical: 		0
        Reads: 			6368
        Writes: 		1338
        Comparisons:		54
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest35.exe __orio_perftest35.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest35.exe  
Program Test Output: 
{'[4, 3, 6, 3, 1, 6, 1, 0, 0, 8, 0, 21, 1, 0, 1, 1, 0, 1]' : 0.0777199}
{'[4, 3, 6, 3, 1, 6, 1, 0, 0, 8, 0, 21, 1, 0, 1, 1, 0, 1]' : 0.0772071}
{'[4, 3, 6, 3, 1, 6, 1, 0, 0, 8, 0, 21, 1, 0, 1, 1, 0, 1]' : 0.07723}
{'[4, 3, 6, 3, 1, 6, 1, 0, 0, 8, 0, 21, 1, 0, 1, 1, 0, 1]' : 0.0772369}
{'[4, 3, 6, 3, 1, 6, 1, 0, 0, 8, 0, 21, 1, 0, 1, 1, 0, 1]' : 0.0772841}
{'[4, 3, 6, 3, 1, 6, 1, 0, 0, 8, 0, 21, 1, 0, 1, 1, 0, 1]' : 0.0773408}
{'[4, 3, 6, 3, 1, 6, 1, 0, 0, 8, 0, 21, 1, 0, 1, 1, 0, 1]' : 0.077219}
{'[4, 3, 6, 3, 1, 6, 1, 0, 0, 8, 0, 21, 1, 0, 1, 1, 0, 1]' : 0.0773051}
{'[4, 3, 6, 3, 1, 6, 1, 0, 0, 8, 0, 21, 1, 0, 1, 1, 0, 1]' : 0.077462}
{'[4, 3, 6, 3, 1, 6, 1, 0, 0, 8, 0, 21, 1, 0, 1, 1, 0, 1]' : 0.077352}
{'[4, 3, 6, 3, 1, 6, 1, 0, 0, 8, 0, 21, 1, 0, 1, 1, 0, 1]' : 0.0772071}
{'[4, 3, 6, 3, 1, 6, 1, 0, 0, 8, 0, 21, 1, 0, 1, 1, 0, 1]' : 0.077178}
{'[4, 3, 6, 3, 1, 6, 1, 0, 0, 8, 0, 21, 1, 0, 1, 1, 0, 1]' : 0.077318}
{'[4, 3, 6, 3, 1, 6, 1, 0, 0, 8, 0, 21, 1, 0, 1, 1, 0, 1]' : 0.0778909}
{'[4, 3, 6, 3, 1, 6, 1, 0, 0, 8, 0, 21, 1, 0, 1, 1, 0, 1]' : 0.0772741}
{'[4, 3, 6, 3, 1, 6, 1, 0, 0, 8, 0, 21, 1, 0, 1, 1, 0, 1]' : 0.077246}
{'[4, 3, 6, 3, 1, 6, 1, 0, 0, 8, 0, 21, 1, 0, 1, 1, 0, 1]' : 0.0772309}
{'[4, 3, 6, 3, 1, 6, 1, 0, 0, 8, 0, 21, 1, 0, 1, 1, 0, 1]' : 0.077224}
{'[4, 3, 6, 3, 1, 6, 1, 0, 0, 8, 0, 21, 1, 0, 1, 1, 0, 1]' : 0.077266}
{'[4, 3, 6, 3, 1, 6, 1, 0, 0, 8, 0, 21, 1, 0, 1, 1, 0, 1]' : 0.0772412}
{'[4, 3, 6, 3, 1, 6, 1, 0, 0, 8, 0, 21, 1, 0, 1, 1, 0, 1]' : 0.0772159}
{'[4, 3, 6, 3, 1, 6, 1, 0, 0, 8, 0, 21, 1, 0, 1, 1, 0, 1]' : 0.0771899}
{'[4, 3, 6, 3, 1, 6, 1, 0, 0, 8, 0, 21, 1, 0, 1, 1, 0, 1]' : 0.0772541}
{'[4, 3, 6, 3, 1, 6, 1, 0, 0, 8, 0, 21, 1, 0, 1, 1, 0, 1]' : 0.07726}
{'[4, 3, 6, 3, 1, 6, 1, 0, 0, 8, 0, 21, 1, 0, 1, 1, 0, 1]' : 0.0771949}
{'[4, 3, 6, 3, 1, 6, 1, 0, 0, 8, 0, 21, 1, 0, 1, 1, 0, 1]' : 0.0771959}
{'[4, 3, 6, 3, 1, 6, 1, 0, 0, 8, 0, 21, 1, 0, 1, 1, 0, 1]' : 0.0773139}
{'[4, 3, 6, 3, 1, 6, 1, 0, 0, 8, 0, 21, 1, 0, 1, 1, 0, 1]' : 0.0772521}
{'[4, 3, 6, 3, 1, 6, 1, 0, 0, 8, 0, 21, 1, 0, 1, 1, 0, 1]' : 0.077246}
{'[4, 3, 6, 3, 1, 6, 1, 0, 0, 8, 0, 21, 1, 0, 1, 1, 0, 1]' : 0.077255}

out:
 ["{'[4, 3, 6, 3, 1, 6, 1, 0, 0, 8, 0, 21, 1, 0, 1, 1, 0, 1]' : 0.0777199}", "{'[4, 3, 6, 3, 1, 6, 1, 0, 0, 8, 0, 21, 1, 0, 1, 1, 0, 1]' : 0.0772071}", "{'[4, 3, 6, 3, 1, 6, 1, 0, 0, 8, 0, 21, 1, 0, 1, 1, 0, 1]' : 0.07723}", "{'[4, 3, 6, 3, 1, 6, 1, 0, 0, 8, 0, 21, 1, 0, 1, 1, 0, 1]' : 0.0772369}", "{'[4, 3, 6, 3, 1, 6, 1, 0, 0, 8, 0, 21, 1, 0, 1, 1, 0, 1]' : 0.0772841}", "{'[4, 3, 6, 3, 1, 6, 1, 0, 0, 8, 0, 21, 1, 0, 1, 1, 0, 1]' : 0.0773408}", "{'[4, 3, 6, 3, 1, 6, 1, 0, 0, 8, 0, 21, 1, 0, 1, 1, 0, 1]' : 0.077219}", "{'[4, 3, 6, 3, 1, 6, 1, 0, 0, 8, 0, 21, 1, 0, 1, 1, 0, 1]' : 0.0773051}", "{'[4, 3, 6, 3, 1, 6, 1, 0, 0, 8, 0, 21, 1, 0, 1, 1, 0, 1]' : 0.077462}", "{'[4, 3, 6, 3, 1, 6, 1, 0, 0, 8, 0, 21, 1, 0, 1, 1, 0, 1]' : 0.077352}", "{'[4, 3, 6, 3, 1, 6, 1, 0, 0, 8, 0, 21, 1, 0, 1, 1, 0, 1]' : 0.0772071}", "{'[4, 3, 6, 3, 1, 6, 1, 0, 0, 8, 0, 21, 1, 0, 1, 1, 0, 1]' : 0.077178}", "{'[4, 3, 6, 3, 1, 6, 1, 0, 0, 8, 0, 21, 1, 0, 1, 1, 0, 1]' : 0.077318}", "{'[4, 3, 6, 3, 1, 6, 1, 0, 0, 8, 0, 21, 1, 0, 1, 1, 0, 1]' : 0.0778909}", "{'[4, 3, 6, 3, 1, 6, 1, 0, 0, 8, 0, 21, 1, 0, 1, 1, 0, 1]' : 0.0772741}", "{'[4, 3, 6, 3, 1, 6, 1, 0, 0, 8, 0, 21, 1, 0, 1, 1, 0, 1]' : 0.077246}", "{'[4, 3, 6, 3, 1, 6, 1, 0, 0, 8, 0, 21, 1, 0, 1, 1, 0, 1]' : 0.0772309}", "{'[4, 3, 6, 3, 1, 6, 1, 0, 0, 8, 0, 21, 1, 0, 1, 1, 0, 1]' : 0.077224}", "{'[4, 3, 6, 3, 1, 6, 1, 0, 0, 8, 0, 21, 1, 0, 1, 1, 0, 1]' : 0.077266}", "{'[4, 3, 6, 3, 1, 6, 1, 0, 0, 8, 0, 21, 1, 0, 1, 1, 0, 1]' : 0.0772412}", "{'[4, 3, 6, 3, 1, 6, 1, 0, 0, 8, 0, 21, 1, 0, 1, 1, 0, 1]' : 0.0772159}", "{'[4, 3, 6, 3, 1, 6, 1, 0, 0, 8, 0, 21, 1, 0, 1, 1, 0, 1]' : 0.0771899}", "{'[4, 3, 6, 3, 1, 6, 1, 0, 0, 8, 0, 21, 1, 0, 1, 1, 0, 1]' : 0.0772541}", "{'[4, 3, 6, 3, 1, 6, 1, 0, 0, 8, 0, 21, 1, 0, 1, 1, 0, 1]' : 0.07726}", "{'[4, 3, 6, 3, 1, 6, 1, 0, 0, 8, 0, 21, 1, 0, 1, 1, 0, 1]' : 0.0771949}", "{'[4, 3, 6, 3, 1, 6, 1, 0, 0, 8, 0, 21, 1, 0, 1, 1, 0, 1]' : 0.0771959}", "{'[4, 3, 6, 3, 1, 6, 1, 0, 0, 8, 0, 21, 1, 0, 1, 1, 0, 1]' : 0.0773139}", "{'[4, 3, 6, 3, 1, 6, 1, 0, 0, 8, 0, 21, 1, 0, 1, 1, 0, 1]' : 0.0772521}", "{'[4, 3, 6, 3, 1, 6, 1, 0, 0, 8, 0, 21, 1, 0, 1, 1, 0, 1]' : 0.077246}", "{'[4, 3, 6, 3, 1, 6, 1, 0, 0, 8, 0, 21, 1, 0, 1, 1, 0, 1]' : 0.077255}"]
returning from 'run': {'[4, 3, 6, 3, 1, 6, 1, 0, 0, 8, 0, 21, 1, 0, 1, 1, 0, 1]': ([0.0777199, 0.0772071, 0.07723, 0.0772369, 0.0772841, 0.0773408, 0.077219, 0.0773051, 0.077462, 0.077352, 0.0772071, 0.077178, 0.077318, 0.0778909, 0.0772741, 0.077246, 0.0772309, 0.077224, 0.077266, 0.0772412, 0.0772159, 0.0771899, 0.0772541, 0.07726, 0.0771949, 0.0771959, 0.0773139, 0.0772521, 0.077246, 0.077255], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 3, 6, 3, 1, 6, 1, 0, 0, 8, 0, 21, 1, 0, 1, 1, 0, 1]': ([0.0777199, 0.0772071, 0.07723, 0.0772369, 0.0772841, 0.0773408, 0.077219, 0.0773051, 0.077462, 0.077352, 0.0772071, 0.077178, 0.077318, 0.0778909, 0.0772741, 0.077246, 0.0772309, 0.077224, 0.077266, 0.0772412, 0.0772159, 0.0771899, 0.0772541, 0.07726, 0.0771949, 0.0771959, 0.0773139, 0.0772521, 0.077246, 0.077255], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	5
        Additions: 		3297
        Multiplications: 	1008
        Divisions: 		0
        Logical: 		0
        Reads: 			5315
        Writes: 		613
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest36.exe __orio_perftest36.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest36.exe  
Program Test Output: 
{'[2, 2, 6, 0, 5, 0, 0, 0, 28, 26, 7, 0, 0, 0, 1, 0, 1, 1]' : 0.14605}
{'[2, 2, 6, 0, 5, 0, 0, 0, 28, 26, 7, 0, 0, 0, 1, 0, 1, 1]' : 0.146387}
{'[2, 2, 6, 0, 5, 0, 0, 0, 28, 26, 7, 0, 0, 0, 1, 0, 1, 1]' : 0.145458}
{'[2, 2, 6, 0, 5, 0, 0, 0, 28, 26, 7, 0, 0, 0, 1, 0, 1, 1]' : 0.145092}
{'[2, 2, 6, 0, 5, 0, 0, 0, 28, 26, 7, 0, 0, 0, 1, 0, 1, 1]' : 0.145574}
{'[2, 2, 6, 0, 5, 0, 0, 0, 28, 26, 7, 0, 0, 0, 1, 0, 1, 1]' : 0.146871}
{'[2, 2, 6, 0, 5, 0, 0, 0, 28, 26, 7, 0, 0, 0, 1, 0, 1, 1]' : 0.14589}
{'[2, 2, 6, 0, 5, 0, 0, 0, 28, 26, 7, 0, 0, 0, 1, 0, 1, 1]' : 0.1457}
{'[2, 2, 6, 0, 5, 0, 0, 0, 28, 26, 7, 0, 0, 0, 1, 0, 1, 1]' : 0.146985}
{'[2, 2, 6, 0, 5, 0, 0, 0, 28, 26, 7, 0, 0, 0, 1, 0, 1, 1]' : 0.145928}
{'[2, 2, 6, 0, 5, 0, 0, 0, 28, 26, 7, 0, 0, 0, 1, 0, 1, 1]' : 0.145552}
{'[2, 2, 6, 0, 5, 0, 0, 0, 28, 26, 7, 0, 0, 0, 1, 0, 1, 1]' : 0.145949}
{'[2, 2, 6, 0, 5, 0, 0, 0, 28, 26, 7, 0, 0, 0, 1, 0, 1, 1]' : 0.145523}
{'[2, 2, 6, 0, 5, 0, 0, 0, 28, 26, 7, 0, 0, 0, 1, 0, 1, 1]' : 0.145878}
{'[2, 2, 6, 0, 5, 0, 0, 0, 28, 26, 7, 0, 0, 0, 1, 0, 1, 1]' : 0.146288}
{'[2, 2, 6, 0, 5, 0, 0, 0, 28, 26, 7, 0, 0, 0, 1, 0, 1, 1]' : 0.145799}
{'[2, 2, 6, 0, 5, 0, 0, 0, 28, 26, 7, 0, 0, 0, 1, 0, 1, 1]' : 0.145585}
{'[2, 2, 6, 0, 5, 0, 0, 0, 28, 26, 7, 0, 0, 0, 1, 0, 1, 1]' : 0.146358}
{'[2, 2, 6, 0, 5, 0, 0, 0, 28, 26, 7, 0, 0, 0, 1, 0, 1, 1]' : 0.146165}
{'[2, 2, 6, 0, 5, 0, 0, 0, 28, 26, 7, 0, 0, 0, 1, 0, 1, 1]' : 0.145497}
{'[2, 2, 6, 0, 5, 0, 0, 0, 28, 26, 7, 0, 0, 0, 1, 0, 1, 1]' : 0.145758}
{'[2, 2, 6, 0, 5, 0, 0, 0, 28, 26, 7, 0, 0, 0, 1, 0, 1, 1]' : 0.146204}
{'[2, 2, 6, 0, 5, 0, 0, 0, 28, 26, 7, 0, 0, 0, 1, 0, 1, 1]' : 0.145958}
{'[2, 2, 6, 0, 5, 0, 0, 0, 28, 26, 7, 0, 0, 0, 1, 0, 1, 1]' : 0.145699}
{'[2, 2, 6, 0, 5, 0, 0, 0, 28, 26, 7, 0, 0, 0, 1, 0, 1, 1]' : 0.146143}
{'[2, 2, 6, 0, 5, 0, 0, 0, 28, 26, 7, 0, 0, 0, 1, 0, 1, 1]' : 0.146555}
{'[2, 2, 6, 0, 5, 0, 0, 0, 28, 26, 7, 0, 0, 0, 1, 0, 1, 1]' : 0.146038}
{'[2, 2, 6, 0, 5, 0, 0, 0, 28, 26, 7, 0, 0, 0, 1, 0, 1, 1]' : 0.145482}
{'[2, 2, 6, 0, 5, 0, 0, 0, 28, 26, 7, 0, 0, 0, 1, 0, 1, 1]' : 0.146066}
{'[2, 2, 6, 0, 5, 0, 0, 0, 28, 26, 7, 0, 0, 0, 1, 0, 1, 1]' : 0.146052}

out:
 ["{'[2, 2, 6, 0, 5, 0, 0, 0, 28, 26, 7, 0, 0, 0, 1, 0, 1, 1]' : 0.14605}", "{'[2, 2, 6, 0, 5, 0, 0, 0, 28, 26, 7, 0, 0, 0, 1, 0, 1, 1]' : 0.146387}", "{'[2, 2, 6, 0, 5, 0, 0, 0, 28, 26, 7, 0, 0, 0, 1, 0, 1, 1]' : 0.145458}", "{'[2, 2, 6, 0, 5, 0, 0, 0, 28, 26, 7, 0, 0, 0, 1, 0, 1, 1]' : 0.145092}", "{'[2, 2, 6, 0, 5, 0, 0, 0, 28, 26, 7, 0, 0, 0, 1, 0, 1, 1]' : 0.145574}", "{'[2, 2, 6, 0, 5, 0, 0, 0, 28, 26, 7, 0, 0, 0, 1, 0, 1, 1]' : 0.146871}", "{'[2, 2, 6, 0, 5, 0, 0, 0, 28, 26, 7, 0, 0, 0, 1, 0, 1, 1]' : 0.14589}", "{'[2, 2, 6, 0, 5, 0, 0, 0, 28, 26, 7, 0, 0, 0, 1, 0, 1, 1]' : 0.1457}", "{'[2, 2, 6, 0, 5, 0, 0, 0, 28, 26, 7, 0, 0, 0, 1, 0, 1, 1]' : 0.146985}", "{'[2, 2, 6, 0, 5, 0, 0, 0, 28, 26, 7, 0, 0, 0, 1, 0, 1, 1]' : 0.145928}", "{'[2, 2, 6, 0, 5, 0, 0, 0, 28, 26, 7, 0, 0, 0, 1, 0, 1, 1]' : 0.145552}", "{'[2, 2, 6, 0, 5, 0, 0, 0, 28, 26, 7, 0, 0, 0, 1, 0, 1, 1]' : 0.145949}", "{'[2, 2, 6, 0, 5, 0, 0, 0, 28, 26, 7, 0, 0, 0, 1, 0, 1, 1]' : 0.145523}", "{'[2, 2, 6, 0, 5, 0, 0, 0, 28, 26, 7, 0, 0, 0, 1, 0, 1, 1]' : 0.145878}", "{'[2, 2, 6, 0, 5, 0, 0, 0, 28, 26, 7, 0, 0, 0, 1, 0, 1, 1]' : 0.146288}", "{'[2, 2, 6, 0, 5, 0, 0, 0, 28, 26, 7, 0, 0, 0, 1, 0, 1, 1]' : 0.145799}", "{'[2, 2, 6, 0, 5, 0, 0, 0, 28, 26, 7, 0, 0, 0, 1, 0, 1, 1]' : 0.145585}", "{'[2, 2, 6, 0, 5, 0, 0, 0, 28, 26, 7, 0, 0, 0, 1, 0, 1, 1]' : 0.146358}", "{'[2, 2, 6, 0, 5, 0, 0, 0, 28, 26, 7, 0, 0, 0, 1, 0, 1, 1]' : 0.146165}", "{'[2, 2, 6, 0, 5, 0, 0, 0, 28, 26, 7, 0, 0, 0, 1, 0, 1, 1]' : 0.145497}", "{'[2, 2, 6, 0, 5, 0, 0, 0, 28, 26, 7, 0, 0, 0, 1, 0, 1, 1]' : 0.145758}", "{'[2, 2, 6, 0, 5, 0, 0, 0, 28, 26, 7, 0, 0, 0, 1, 0, 1, 1]' : 0.146204}", "{'[2, 2, 6, 0, 5, 0, 0, 0, 28, 26, 7, 0, 0, 0, 1, 0, 1, 1]' : 0.145958}", "{'[2, 2, 6, 0, 5, 0, 0, 0, 28, 26, 7, 0, 0, 0, 1, 0, 1, 1]' : 0.145699}", "{'[2, 2, 6, 0, 5, 0, 0, 0, 28, 26, 7, 0, 0, 0, 1, 0, 1, 1]' : 0.146143}", "{'[2, 2, 6, 0, 5, 0, 0, 0, 28, 26, 7, 0, 0, 0, 1, 0, 1, 1]' : 0.146555}", "{'[2, 2, 6, 0, 5, 0, 0, 0, 28, 26, 7, 0, 0, 0, 1, 0, 1, 1]' : 0.146038}", "{'[2, 2, 6, 0, 5, 0, 0, 0, 28, 26, 7, 0, 0, 0, 1, 0, 1, 1]' : 0.145482}", "{'[2, 2, 6, 0, 5, 0, 0, 0, 28, 26, 7, 0, 0, 0, 1, 0, 1, 1]' : 0.146066}", "{'[2, 2, 6, 0, 5, 0, 0, 0, 28, 26, 7, 0, 0, 0, 1, 0, 1, 1]' : 0.146052}"]
returning from 'run': {'[2, 2, 6, 0, 5, 0, 0, 0, 28, 26, 7, 0, 0, 0, 1, 0, 1, 1]': ([0.14605, 0.146387, 0.145458, 0.145092, 0.145574, 0.146871, 0.14589, 0.1457, 0.146985, 0.145928, 0.145552, 0.145949, 0.145523, 0.145878, 0.146288, 0.145799, 0.145585, 0.146358, 0.146165, 0.145497, 0.145758, 0.146204, 0.145958, 0.145699, 0.146143, 0.146555, 0.146038, 0.145482, 0.146066, 0.146052], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 2, 6, 0, 5, 0, 0, 0, 28, 26, 7, 0, 0, 0, 1, 0, 1, 1]': ([0.14605, 0.146387, 0.145458, 0.145092, 0.145574, 0.146871, 0.14589, 0.1457, 0.146985, 0.145928, 0.145552, 0.145949, 0.145523, 0.145878, 0.146288, 0.145799, 0.145585, 0.146358, 0.146165, 0.145497, 0.145758, 0.146204, 0.145958, 0.145699, 0.146143, 0.146555, 0.146038, 0.145482, 0.146066, 0.146052], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	6
        Additions: 		297
        Multiplications: 	114
        Divisions: 		0
        Logical: 		0
        Reads: 			662
        Writes: 		90
        Comparisons:		10
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest37.exe __orio_perftest37.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest37.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest37.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest37.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/Orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/Orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 528, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors, data)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 409, in dopt_anova
    budget)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 334, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 280, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/phrb/code/Orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest37.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/Orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/Orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 528, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors, data)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 409, in dopt_anova
    budget)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 334, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 280, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/Orio/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/phrb/code/Orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = kkk
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	5
        Additions: 		1707
        Multiplications: 	550
        Divisions: 		0
        Logical: 		0
        Reads: 			2919
        Writes: 		331
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest38.exe __orio_perftest38.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest38.exe  
Program Test Output: 
{'[3, 5, 4, 0, 6, 2, 0, 0, 8, 3, 20, 0, 0, 0, 2, 0, 1, 0]' : 0.105866}
{'[3, 5, 4, 0, 6, 2, 0, 0, 8, 3, 20, 0, 0, 0, 2, 0, 1, 0]' : 0.105325}
{'[3, 5, 4, 0, 6, 2, 0, 0, 8, 3, 20, 0, 0, 0, 2, 0, 1, 0]' : 0.105333}
{'[3, 5, 4, 0, 6, 2, 0, 0, 8, 3, 20, 0, 0, 0, 2, 0, 1, 0]' : 0.105318}
{'[3, 5, 4, 0, 6, 2, 0, 0, 8, 3, 20, 0, 0, 0, 2, 0, 1, 0]' : 0.105337}
{'[3, 5, 4, 0, 6, 2, 0, 0, 8, 3, 20, 0, 0, 0, 2, 0, 1, 0]' : 0.105383}
{'[3, 5, 4, 0, 6, 2, 0, 0, 8, 3, 20, 0, 0, 0, 2, 0, 1, 0]' : 0.105348}
{'[3, 5, 4, 0, 6, 2, 0, 0, 8, 3, 20, 0, 0, 0, 2, 0, 1, 0]' : 0.105461}
{'[3, 5, 4, 0, 6, 2, 0, 0, 8, 3, 20, 0, 0, 0, 2, 0, 1, 0]' : 0.105504}
{'[3, 5, 4, 0, 6, 2, 0, 0, 8, 3, 20, 0, 0, 0, 2, 0, 1, 0]' : 0.105311}
{'[3, 5, 4, 0, 6, 2, 0, 0, 8, 3, 20, 0, 0, 0, 2, 0, 1, 0]' : 0.105305}
{'[3, 5, 4, 0, 6, 2, 0, 0, 8, 3, 20, 0, 0, 0, 2, 0, 1, 0]' : 0.105645}
{'[3, 5, 4, 0, 6, 2, 0, 0, 8, 3, 20, 0, 0, 0, 2, 0, 1, 0]' : 0.105376}
{'[3, 5, 4, 0, 6, 2, 0, 0, 8, 3, 20, 0, 0, 0, 2, 0, 1, 0]' : 0.105333}
{'[3, 5, 4, 0, 6, 2, 0, 0, 8, 3, 20, 0, 0, 0, 2, 0, 1, 0]' : 0.105367}
{'[3, 5, 4, 0, 6, 2, 0, 0, 8, 3, 20, 0, 0, 0, 2, 0, 1, 0]' : 0.105408}
{'[3, 5, 4, 0, 6, 2, 0, 0, 8, 3, 20, 0, 0, 0, 2, 0, 1, 0]' : 0.105378}
{'[3, 5, 4, 0, 6, 2, 0, 0, 8, 3, 20, 0, 0, 0, 2, 0, 1, 0]' : 0.105411}
{'[3, 5, 4, 0, 6, 2, 0, 0, 8, 3, 20, 0, 0, 0, 2, 0, 1, 0]' : 0.105396}
{'[3, 5, 4, 0, 6, 2, 0, 0, 8, 3, 20, 0, 0, 0, 2, 0, 1, 0]' : 0.105345}
{'[3, 5, 4, 0, 6, 2, 0, 0, 8, 3, 20, 0, 0, 0, 2, 0, 1, 0]' : 0.105407}
{'[3, 5, 4, 0, 6, 2, 0, 0, 8, 3, 20, 0, 0, 0, 2, 0, 1, 0]' : 0.105372}
{'[3, 5, 4, 0, 6, 2, 0, 0, 8, 3, 20, 0, 0, 0, 2, 0, 1, 0]' : 0.105351}
{'[3, 5, 4, 0, 6, 2, 0, 0, 8, 3, 20, 0, 0, 0, 2, 0, 1, 0]' : 0.105337}
{'[3, 5, 4, 0, 6, 2, 0, 0, 8, 3, 20, 0, 0, 0, 2, 0, 1, 0]' : 0.105416}
{'[3, 5, 4, 0, 6, 2, 0, 0, 8, 3, 20, 0, 0, 0, 2, 0, 1, 0]' : 0.105948}
{'[3, 5, 4, 0, 6, 2, 0, 0, 8, 3, 20, 0, 0, 0, 2, 0, 1, 0]' : 0.105366}
{'[3, 5, 4, 0, 6, 2, 0, 0, 8, 3, 20, 0, 0, 0, 2, 0, 1, 0]' : 0.105434}
{'[3, 5, 4, 0, 6, 2, 0, 0, 8, 3, 20, 0, 0, 0, 2, 0, 1, 0]' : 0.105372}
{'[3, 5, 4, 0, 6, 2, 0, 0, 8, 3, 20, 0, 0, 0, 2, 0, 1, 0]' : 0.105368}

out:
 ["{'[3, 5, 4, 0, 6, 2, 0, 0, 8, 3, 20, 0, 0, 0, 2, 0, 1, 0]' : 0.105866}", "{'[3, 5, 4, 0, 6, 2, 0, 0, 8, 3, 20, 0, 0, 0, 2, 0, 1, 0]' : 0.105325}", "{'[3, 5, 4, 0, 6, 2, 0, 0, 8, 3, 20, 0, 0, 0, 2, 0, 1, 0]' : 0.105333}", "{'[3, 5, 4, 0, 6, 2, 0, 0, 8, 3, 20, 0, 0, 0, 2, 0, 1, 0]' : 0.105318}", "{'[3, 5, 4, 0, 6, 2, 0, 0, 8, 3, 20, 0, 0, 0, 2, 0, 1, 0]' : 0.105337}", "{'[3, 5, 4, 0, 6, 2, 0, 0, 8, 3, 20, 0, 0, 0, 2, 0, 1, 0]' : 0.105383}", "{'[3, 5, 4, 0, 6, 2, 0, 0, 8, 3, 20, 0, 0, 0, 2, 0, 1, 0]' : 0.105348}", "{'[3, 5, 4, 0, 6, 2, 0, 0, 8, 3, 20, 0, 0, 0, 2, 0, 1, 0]' : 0.105461}", "{'[3, 5, 4, 0, 6, 2, 0, 0, 8, 3, 20, 0, 0, 0, 2, 0, 1, 0]' : 0.105504}", "{'[3, 5, 4, 0, 6, 2, 0, 0, 8, 3, 20, 0, 0, 0, 2, 0, 1, 0]' : 0.105311}", "{'[3, 5, 4, 0, 6, 2, 0, 0, 8, 3, 20, 0, 0, 0, 2, 0, 1, 0]' : 0.105305}", "{'[3, 5, 4, 0, 6, 2, 0, 0, 8, 3, 20, 0, 0, 0, 2, 0, 1, 0]' : 0.105645}", "{'[3, 5, 4, 0, 6, 2, 0, 0, 8, 3, 20, 0, 0, 0, 2, 0, 1, 0]' : 0.105376}", "{'[3, 5, 4, 0, 6, 2, 0, 0, 8, 3, 20, 0, 0, 0, 2, 0, 1, 0]' : 0.105333}", "{'[3, 5, 4, 0, 6, 2, 0, 0, 8, 3, 20, 0, 0, 0, 2, 0, 1, 0]' : 0.105367}", "{'[3, 5, 4, 0, 6, 2, 0, 0, 8, 3, 20, 0, 0, 0, 2, 0, 1, 0]' : 0.105408}", "{'[3, 5, 4, 0, 6, 2, 0, 0, 8, 3, 20, 0, 0, 0, 2, 0, 1, 0]' : 0.105378}", "{'[3, 5, 4, 0, 6, 2, 0, 0, 8, 3, 20, 0, 0, 0, 2, 0, 1, 0]' : 0.105411}", "{'[3, 5, 4, 0, 6, 2, 0, 0, 8, 3, 20, 0, 0, 0, 2, 0, 1, 0]' : 0.105396}", "{'[3, 5, 4, 0, 6, 2, 0, 0, 8, 3, 20, 0, 0, 0, 2, 0, 1, 0]' : 0.105345}", "{'[3, 5, 4, 0, 6, 2, 0, 0, 8, 3, 20, 0, 0, 0, 2, 0, 1, 0]' : 0.105407}", "{'[3, 5, 4, 0, 6, 2, 0, 0, 8, 3, 20, 0, 0, 0, 2, 0, 1, 0]' : 0.105372}", "{'[3, 5, 4, 0, 6, 2, 0, 0, 8, 3, 20, 0, 0, 0, 2, 0, 1, 0]' : 0.105351}", "{'[3, 5, 4, 0, 6, 2, 0, 0, 8, 3, 20, 0, 0, 0, 2, 0, 1, 0]' : 0.105337}", "{'[3, 5, 4, 0, 6, 2, 0, 0, 8, 3, 20, 0, 0, 0, 2, 0, 1, 0]' : 0.105416}", "{'[3, 5, 4, 0, 6, 2, 0, 0, 8, 3, 20, 0, 0, 0, 2, 0, 1, 0]' : 0.105948}", "{'[3, 5, 4, 0, 6, 2, 0, 0, 8, 3, 20, 0, 0, 0, 2, 0, 1, 0]' : 0.105366}", "{'[3, 5, 4, 0, 6, 2, 0, 0, 8, 3, 20, 0, 0, 0, 2, 0, 1, 0]' : 0.105434}", "{'[3, 5, 4, 0, 6, 2, 0, 0, 8, 3, 20, 0, 0, 0, 2, 0, 1, 0]' : 0.105372}", "{'[3, 5, 4, 0, 6, 2, 0, 0, 8, 3, 20, 0, 0, 0, 2, 0, 1, 0]' : 0.105368}"]
returning from 'run': {'[3, 5, 4, 0, 6, 2, 0, 0, 8, 3, 20, 0, 0, 0, 2, 0, 1, 0]': ([0.105866, 0.105325, 0.105333, 0.105318, 0.105337, 0.105383, 0.105348, 0.105461, 0.105504, 0.105311, 0.105305, 0.105645, 0.105376, 0.105333, 0.105367, 0.105408, 0.105378, 0.105411, 0.105396, 0.105345, 0.105407, 0.105372, 0.105351, 0.105337, 0.105416, 0.105948, 0.105366, 0.105434, 0.105372, 0.105368], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 5, 4, 0, 6, 2, 0, 0, 8, 3, 20, 0, 0, 0, 2, 0, 1, 0]': ([0.105866, 0.105325, 0.105333, 0.105318, 0.105337, 0.105383, 0.105348, 0.105461, 0.105504, 0.105311, 0.105305, 0.105645, 0.105376, 0.105333, 0.105367, 0.105408, 0.105378, 0.105411, 0.105396, 0.105345, 0.105407, 0.105372, 0.105351, 0.105337, 0.105416, 0.105948, 0.105366, 0.105434, 0.105372, 0.105368], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	26
        Max loop nest depth: 	6
        Additions: 		1377
        Multiplications: 	558
        Divisions: 		0
        Logical: 		0
        Reads: 			2697
        Writes: 		489
        Comparisons:		26
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest39.exe __orio_perftest39.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest39.exe  
Program Test Output: 
{'[2, 2, 2, 1, 3, 2, 1, 1, 27, 0, 5, 21, 1, 1, 0, 1, 1, 0]' : 0.0942311}
{'[2, 2, 2, 1, 3, 2, 1, 1, 27, 0, 5, 21, 1, 1, 0, 1, 1, 0]' : 0.093848}
{'[2, 2, 2, 1, 3, 2, 1, 1, 27, 0, 5, 21, 1, 1, 0, 1, 1, 0]' : 0.093775}
{'[2, 2, 2, 1, 3, 2, 1, 1, 27, 0, 5, 21, 1, 1, 0, 1, 1, 0]' : 0.0938559}
{'[2, 2, 2, 1, 3, 2, 1, 1, 27, 0, 5, 21, 1, 1, 0, 1, 1, 0]' : 0.0937719}
{'[2, 2, 2, 1, 3, 2, 1, 1, 27, 0, 5, 21, 1, 1, 0, 1, 1, 0]' : 0.0937922}
{'[2, 2, 2, 1, 3, 2, 1, 1, 27, 0, 5, 21, 1, 1, 0, 1, 1, 0]' : 0.09378}
{'[2, 2, 2, 1, 3, 2, 1, 1, 27, 0, 5, 21, 1, 1, 0, 1, 1, 0]' : 0.0938818}
{'[2, 2, 2, 1, 3, 2, 1, 1, 27, 0, 5, 21, 1, 1, 0, 1, 1, 0]' : 0.0937879}
{'[2, 2, 2, 1, 3, 2, 1, 1, 27, 0, 5, 21, 1, 1, 0, 1, 1, 0]' : 0.0937781}
{'[2, 2, 2, 1, 3, 2, 1, 1, 27, 0, 5, 21, 1, 1, 0, 1, 1, 0]' : 0.0941312}
{'[2, 2, 2, 1, 3, 2, 1, 1, 27, 0, 5, 21, 1, 1, 0, 1, 1, 0]' : 0.0938232}
{'[2, 2, 2, 1, 3, 2, 1, 1, 27, 0, 5, 21, 1, 1, 0, 1, 1, 0]' : 0.093812}
{'[2, 2, 2, 1, 3, 2, 1, 1, 27, 0, 5, 21, 1, 1, 0, 1, 1, 0]' : 0.0937729}
{'[2, 2, 2, 1, 3, 2, 1, 1, 27, 0, 5, 21, 1, 1, 0, 1, 1, 0]' : 0.0938201}
{'[2, 2, 2, 1, 3, 2, 1, 1, 27, 0, 5, 21, 1, 1, 0, 1, 1, 0]' : 0.0938649}
{'[2, 2, 2, 1, 3, 2, 1, 1, 27, 0, 5, 21, 1, 1, 0, 1, 1, 0]' : 0.0938189}
{'[2, 2, 2, 1, 3, 2, 1, 1, 27, 0, 5, 21, 1, 1, 0, 1, 1, 0]' : 0.0938199}
{'[2, 2, 2, 1, 3, 2, 1, 1, 27, 0, 5, 21, 1, 1, 0, 1, 1, 0]' : 0.0938132}
{'[2, 2, 2, 1, 3, 2, 1, 1, 27, 0, 5, 21, 1, 1, 0, 1, 1, 0]' : 0.0939348}
{'[2, 2, 2, 1, 3, 2, 1, 1, 27, 0, 5, 21, 1, 1, 0, 1, 1, 0]' : 0.0938182}
{'[2, 2, 2, 1, 3, 2, 1, 1, 27, 0, 5, 21, 1, 1, 0, 1, 1, 0]' : 0.093854}
{'[2, 2, 2, 1, 3, 2, 1, 1, 27, 0, 5, 21, 1, 1, 0, 1, 1, 0]' : 0.0938139}
{'[2, 2, 2, 1, 3, 2, 1, 1, 27, 0, 5, 21, 1, 1, 0, 1, 1, 0]' : 0.09376}
{'[2, 2, 2, 1, 3, 2, 1, 1, 27, 0, 5, 21, 1, 1, 0, 1, 1, 0]' : 0.0938101}
{'[2, 2, 2, 1, 3, 2, 1, 1, 27, 0, 5, 21, 1, 1, 0, 1, 1, 0]' : 0.093848}
{'[2, 2, 2, 1, 3, 2, 1, 1, 27, 0, 5, 21, 1, 1, 0, 1, 1, 0]' : 0.0944159}
{'[2, 2, 2, 1, 3, 2, 1, 1, 27, 0, 5, 21, 1, 1, 0, 1, 1, 0]' : 0.0938361}
{'[2, 2, 2, 1, 3, 2, 1, 1, 27, 0, 5, 21, 1, 1, 0, 1, 1, 0]' : 0.0938199}
{'[2, 2, 2, 1, 3, 2, 1, 1, 27, 0, 5, 21, 1, 1, 0, 1, 1, 0]' : 0.093821}

out:
 ["{'[2, 2, 2, 1, 3, 2, 1, 1, 27, 0, 5, 21, 1, 1, 0, 1, 1, 0]' : 0.0942311}", "{'[2, 2, 2, 1, 3, 2, 1, 1, 27, 0, 5, 21, 1, 1, 0, 1, 1, 0]' : 0.093848}", "{'[2, 2, 2, 1, 3, 2, 1, 1, 27, 0, 5, 21, 1, 1, 0, 1, 1, 0]' : 0.093775}", "{'[2, 2, 2, 1, 3, 2, 1, 1, 27, 0, 5, 21, 1, 1, 0, 1, 1, 0]' : 0.0938559}", "{'[2, 2, 2, 1, 3, 2, 1, 1, 27, 0, 5, 21, 1, 1, 0, 1, 1, 0]' : 0.0937719}", "{'[2, 2, 2, 1, 3, 2, 1, 1, 27, 0, 5, 21, 1, 1, 0, 1, 1, 0]' : 0.0937922}", "{'[2, 2, 2, 1, 3, 2, 1, 1, 27, 0, 5, 21, 1, 1, 0, 1, 1, 0]' : 0.09378}", "{'[2, 2, 2, 1, 3, 2, 1, 1, 27, 0, 5, 21, 1, 1, 0, 1, 1, 0]' : 0.0938818}", "{'[2, 2, 2, 1, 3, 2, 1, 1, 27, 0, 5, 21, 1, 1, 0, 1, 1, 0]' : 0.0937879}", "{'[2, 2, 2, 1, 3, 2, 1, 1, 27, 0, 5, 21, 1, 1, 0, 1, 1, 0]' : 0.0937781}", "{'[2, 2, 2, 1, 3, 2, 1, 1, 27, 0, 5, 21, 1, 1, 0, 1, 1, 0]' : 0.0941312}", "{'[2, 2, 2, 1, 3, 2, 1, 1, 27, 0, 5, 21, 1, 1, 0, 1, 1, 0]' : 0.0938232}", "{'[2, 2, 2, 1, 3, 2, 1, 1, 27, 0, 5, 21, 1, 1, 0, 1, 1, 0]' : 0.093812}", "{'[2, 2, 2, 1, 3, 2, 1, 1, 27, 0, 5, 21, 1, 1, 0, 1, 1, 0]' : 0.0937729}", "{'[2, 2, 2, 1, 3, 2, 1, 1, 27, 0, 5, 21, 1, 1, 0, 1, 1, 0]' : 0.0938201}", "{'[2, 2, 2, 1, 3, 2, 1, 1, 27, 0, 5, 21, 1, 1, 0, 1, 1, 0]' : 0.0938649}", "{'[2, 2, 2, 1, 3, 2, 1, 1, 27, 0, 5, 21, 1, 1, 0, 1, 1, 0]' : 0.0938189}", "{'[2, 2, 2, 1, 3, 2, 1, 1, 27, 0, 5, 21, 1, 1, 0, 1, 1, 0]' : 0.0938199}", "{'[2, 2, 2, 1, 3, 2, 1, 1, 27, 0, 5, 21, 1, 1, 0, 1, 1, 0]' : 0.0938132}", "{'[2, 2, 2, 1, 3, 2, 1, 1, 27, 0, 5, 21, 1, 1, 0, 1, 1, 0]' : 0.0939348}", "{'[2, 2, 2, 1, 3, 2, 1, 1, 27, 0, 5, 21, 1, 1, 0, 1, 1, 0]' : 0.0938182}", "{'[2, 2, 2, 1, 3, 2, 1, 1, 27, 0, 5, 21, 1, 1, 0, 1, 1, 0]' : 0.093854}", "{'[2, 2, 2, 1, 3, 2, 1, 1, 27, 0, 5, 21, 1, 1, 0, 1, 1, 0]' : 0.0938139}", "{'[2, 2, 2, 1, 3, 2, 1, 1, 27, 0, 5, 21, 1, 1, 0, 1, 1, 0]' : 0.09376}", "{'[2, 2, 2, 1, 3, 2, 1, 1, 27, 0, 5, 21, 1, 1, 0, 1, 1, 0]' : 0.0938101}", "{'[2, 2, 2, 1, 3, 2, 1, 1, 27, 0, 5, 21, 1, 1, 0, 1, 1, 0]' : 0.093848}", "{'[2, 2, 2, 1, 3, 2, 1, 1, 27, 0, 5, 21, 1, 1, 0, 1, 1, 0]' : 0.0944159}", "{'[2, 2, 2, 1, 3, 2, 1, 1, 27, 0, 5, 21, 1, 1, 0, 1, 1, 0]' : 0.0938361}", "{'[2, 2, 2, 1, 3, 2, 1, 1, 27, 0, 5, 21, 1, 1, 0, 1, 1, 0]' : 0.0938199}", "{'[2, 2, 2, 1, 3, 2, 1, 1, 27, 0, 5, 21, 1, 1, 0, 1, 1, 0]' : 0.093821}"]
returning from 'run': {'[2, 2, 2, 1, 3, 2, 1, 1, 27, 0, 5, 21, 1, 1, 0, 1, 1, 0]': ([0.0942311, 0.093848, 0.093775, 0.0938559, 0.0937719, 0.0937922, 0.09378, 0.0938818, 0.0937879, 0.0937781, 0.0941312, 0.0938232, 0.093812, 0.0937729, 0.0938201, 0.0938649, 0.0938189, 0.0938199, 0.0938132, 0.0939348, 0.0938182, 0.093854, 0.0938139, 0.09376, 0.0938101, 0.093848, 0.0944159, 0.0938361, 0.0938199, 0.093821], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 2, 2, 1, 3, 2, 1, 1, 27, 0, 5, 21, 1, 1, 0, 1, 1, 0]': ([0.0942311, 0.093848, 0.093775, 0.0938559, 0.0937719, 0.0937922, 0.09378, 0.0938818, 0.0937879, 0.0937781, 0.0941312, 0.0938232, 0.093812, 0.0937729, 0.0938201, 0.0938649, 0.0938189, 0.0938199, 0.0938132, 0.0939348, 0.0938182, 0.093854, 0.0938139, 0.09376, 0.0938101, 0.093848, 0.0944159, 0.0938361, 0.0938199, 0.093821], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	5
        Additions: 		4156
        Multiplications: 	2046
        Divisions: 		0
        Logical: 		0
        Reads: 			7804
        Writes: 		1234
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest40.exe __orio_perftest40.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest40.exe  
Program Test Output: 
{'[0, 0, 6, 2, 4, 6, 0, 0, 18, 0, 12, 15, 2, 0, 0, 1, 1, 0]' : 0.241315}
{'[0, 0, 6, 2, 4, 6, 0, 0, 18, 0, 12, 15, 2, 0, 0, 1, 1, 0]' : 0.241322}
{'[0, 0, 6, 2, 4, 6, 0, 0, 18, 0, 12, 15, 2, 0, 0, 1, 1, 0]' : 0.24088}
{'[0, 0, 6, 2, 4, 6, 0, 0, 18, 0, 12, 15, 2, 0, 0, 1, 1, 0]' : 0.24303}
{'[0, 0, 6, 2, 4, 6, 0, 0, 18, 0, 12, 15, 2, 0, 0, 1, 1, 0]' : 0.241177}
{'[0, 0, 6, 2, 4, 6, 0, 0, 18, 0, 12, 15, 2, 0, 0, 1, 1, 0]' : 0.24192}
{'[0, 0, 6, 2, 4, 6, 0, 0, 18, 0, 12, 15, 2, 0, 0, 1, 1, 0]' : 0.242453}
{'[0, 0, 6, 2, 4, 6, 0, 0, 18, 0, 12, 15, 2, 0, 0, 1, 1, 0]' : 0.242036}
{'[0, 0, 6, 2, 4, 6, 0, 0, 18, 0, 12, 15, 2, 0, 0, 1, 1, 0]' : 0.241499}
{'[0, 0, 6, 2, 4, 6, 0, 0, 18, 0, 12, 15, 2, 0, 0, 1, 1, 0]' : 0.241036}
{'[0, 0, 6, 2, 4, 6, 0, 0, 18, 0, 12, 15, 2, 0, 0, 1, 1, 0]' : 0.241009}
{'[0, 0, 6, 2, 4, 6, 0, 0, 18, 0, 12, 15, 2, 0, 0, 1, 1, 0]' : 0.241153}
{'[0, 0, 6, 2, 4, 6, 0, 0, 18, 0, 12, 15, 2, 0, 0, 1, 1, 0]' : 0.240923}
{'[0, 0, 6, 2, 4, 6, 0, 0, 18, 0, 12, 15, 2, 0, 0, 1, 1, 0]' : 0.241053}
{'[0, 0, 6, 2, 4, 6, 0, 0, 18, 0, 12, 15, 2, 0, 0, 1, 1, 0]' : 0.241373}
{'[0, 0, 6, 2, 4, 6, 0, 0, 18, 0, 12, 15, 2, 0, 0, 1, 1, 0]' : 0.240866}
{'[0, 0, 6, 2, 4, 6, 0, 0, 18, 0, 12, 15, 2, 0, 0, 1, 1, 0]' : 0.240752}
{'[0, 0, 6, 2, 4, 6, 0, 0, 18, 0, 12, 15, 2, 0, 0, 1, 1, 0]' : 0.241428}
{'[0, 0, 6, 2, 4, 6, 0, 0, 18, 0, 12, 15, 2, 0, 0, 1, 1, 0]' : 0.241279}
{'[0, 0, 6, 2, 4, 6, 0, 0, 18, 0, 12, 15, 2, 0, 0, 1, 1, 0]' : 0.240706}
{'[0, 0, 6, 2, 4, 6, 0, 0, 18, 0, 12, 15, 2, 0, 0, 1, 1, 0]' : 0.241104}
{'[0, 0, 6, 2, 4, 6, 0, 0, 18, 0, 12, 15, 2, 0, 0, 1, 1, 0]' : 0.241144}
{'[0, 0, 6, 2, 4, 6, 0, 0, 18, 0, 12, 15, 2, 0, 0, 1, 1, 0]' : 0.240677}
{'[0, 0, 6, 2, 4, 6, 0, 0, 18, 0, 12, 15, 2, 0, 0, 1, 1, 0]' : 0.24094}
{'[0, 0, 6, 2, 4, 6, 0, 0, 18, 0, 12, 15, 2, 0, 0, 1, 1, 0]' : 0.241146}
{'[0, 0, 6, 2, 4, 6, 0, 0, 18, 0, 12, 15, 2, 0, 0, 1, 1, 0]' : 0.240666}
{'[0, 0, 6, 2, 4, 6, 0, 0, 18, 0, 12, 15, 2, 0, 0, 1, 1, 0]' : 0.241243}
{'[0, 0, 6, 2, 4, 6, 0, 0, 18, 0, 12, 15, 2, 0, 0, 1, 1, 0]' : 0.240856}
{'[0, 0, 6, 2, 4, 6, 0, 0, 18, 0, 12, 15, 2, 0, 0, 1, 1, 0]' : 0.241075}
{'[0, 0, 6, 2, 4, 6, 0, 0, 18, 0, 12, 15, 2, 0, 0, 1, 1, 0]' : 0.24117}

out:
 ["{'[0, 0, 6, 2, 4, 6, 0, 0, 18, 0, 12, 15, 2, 0, 0, 1, 1, 0]' : 0.241315}", "{'[0, 0, 6, 2, 4, 6, 0, 0, 18, 0, 12, 15, 2, 0, 0, 1, 1, 0]' : 0.241322}", "{'[0, 0, 6, 2, 4, 6, 0, 0, 18, 0, 12, 15, 2, 0, 0, 1, 1, 0]' : 0.24088}", "{'[0, 0, 6, 2, 4, 6, 0, 0, 18, 0, 12, 15, 2, 0, 0, 1, 1, 0]' : 0.24303}", "{'[0, 0, 6, 2, 4, 6, 0, 0, 18, 0, 12, 15, 2, 0, 0, 1, 1, 0]' : 0.241177}", "{'[0, 0, 6, 2, 4, 6, 0, 0, 18, 0, 12, 15, 2, 0, 0, 1, 1, 0]' : 0.24192}", "{'[0, 0, 6, 2, 4, 6, 0, 0, 18, 0, 12, 15, 2, 0, 0, 1, 1, 0]' : 0.242453}", "{'[0, 0, 6, 2, 4, 6, 0, 0, 18, 0, 12, 15, 2, 0, 0, 1, 1, 0]' : 0.242036}", "{'[0, 0, 6, 2, 4, 6, 0, 0, 18, 0, 12, 15, 2, 0, 0, 1, 1, 0]' : 0.241499}", "{'[0, 0, 6, 2, 4, 6, 0, 0, 18, 0, 12, 15, 2, 0, 0, 1, 1, 0]' : 0.241036}", "{'[0, 0, 6, 2, 4, 6, 0, 0, 18, 0, 12, 15, 2, 0, 0, 1, 1, 0]' : 0.241009}", "{'[0, 0, 6, 2, 4, 6, 0, 0, 18, 0, 12, 15, 2, 0, 0, 1, 1, 0]' : 0.241153}", "{'[0, 0, 6, 2, 4, 6, 0, 0, 18, 0, 12, 15, 2, 0, 0, 1, 1, 0]' : 0.240923}", "{'[0, 0, 6, 2, 4, 6, 0, 0, 18, 0, 12, 15, 2, 0, 0, 1, 1, 0]' : 0.241053}", "{'[0, 0, 6, 2, 4, 6, 0, 0, 18, 0, 12, 15, 2, 0, 0, 1, 1, 0]' : 0.241373}", "{'[0, 0, 6, 2, 4, 6, 0, 0, 18, 0, 12, 15, 2, 0, 0, 1, 1, 0]' : 0.240866}", "{'[0, 0, 6, 2, 4, 6, 0, 0, 18, 0, 12, 15, 2, 0, 0, 1, 1, 0]' : 0.240752}", "{'[0, 0, 6, 2, 4, 6, 0, 0, 18, 0, 12, 15, 2, 0, 0, 1, 1, 0]' : 0.241428}", "{'[0, 0, 6, 2, 4, 6, 0, 0, 18, 0, 12, 15, 2, 0, 0, 1, 1, 0]' : 0.241279}", "{'[0, 0, 6, 2, 4, 6, 0, 0, 18, 0, 12, 15, 2, 0, 0, 1, 1, 0]' : 0.240706}", "{'[0, 0, 6, 2, 4, 6, 0, 0, 18, 0, 12, 15, 2, 0, 0, 1, 1, 0]' : 0.241104}", "{'[0, 0, 6, 2, 4, 6, 0, 0, 18, 0, 12, 15, 2, 0, 0, 1, 1, 0]' : 0.241144}", "{'[0, 0, 6, 2, 4, 6, 0, 0, 18, 0, 12, 15, 2, 0, 0, 1, 1, 0]' : 0.240677}", "{'[0, 0, 6, 2, 4, 6, 0, 0, 18, 0, 12, 15, 2, 0, 0, 1, 1, 0]' : 0.24094}", "{'[0, 0, 6, 2, 4, 6, 0, 0, 18, 0, 12, 15, 2, 0, 0, 1, 1, 0]' : 0.241146}", "{'[0, 0, 6, 2, 4, 6, 0, 0, 18, 0, 12, 15, 2, 0, 0, 1, 1, 0]' : 0.240666}", "{'[0, 0, 6, 2, 4, 6, 0, 0, 18, 0, 12, 15, 2, 0, 0, 1, 1, 0]' : 0.241243}", "{'[0, 0, 6, 2, 4, 6, 0, 0, 18, 0, 12, 15, 2, 0, 0, 1, 1, 0]' : 0.240856}", "{'[0, 0, 6, 2, 4, 6, 0, 0, 18, 0, 12, 15, 2, 0, 0, 1, 1, 0]' : 0.241075}", "{'[0, 0, 6, 2, 4, 6, 0, 0, 18, 0, 12, 15, 2, 0, 0, 1, 1, 0]' : 0.24117}"]
returning from 'run': {'[0, 0, 6, 2, 4, 6, 0, 0, 18, 0, 12, 15, 2, 0, 0, 1, 1, 0]': ([0.241315, 0.241322, 0.24088, 0.24303, 0.241177, 0.24192, 0.242453, 0.242036, 0.241499, 0.241036, 0.241009, 0.241153, 0.240923, 0.241053, 0.241373, 0.240866, 0.240752, 0.241428, 0.241279, 0.240706, 0.241104, 0.241144, 0.240677, 0.24094, 0.241146, 0.240666, 0.241243, 0.240856, 0.241075, 0.24117], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 6, 2, 4, 6, 0, 0, 18, 0, 12, 15, 2, 0, 0, 1, 1, 0]': ([0.241315, 0.241322, 0.24088, 0.24303, 0.241177, 0.24192, 0.242453, 0.242036, 0.241499, 0.241036, 0.241009, 0.241153, 0.240923, 0.241053, 0.241373, 0.240866, 0.240752, 0.241428, 0.241279, 0.240706, 0.241104, 0.241144, 0.240677, 0.24094, 0.241146, 0.240666, 0.241243, 0.240856, 0.241075, 0.24117], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
Code stats:
        Number of loops: 	55
        Max loop nest depth: 	5
        Additions: 		4664
        Multiplications: 	1292
        Divisions: 		0
        Logical: 		0
        Reads: 			7412
        Writes: 		841
        Comparisons:		55
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest41.exe __orio_perftest41.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest41.exe  
Program Test Output: 
{'[3, 5, 6, 1, 6, 0, 1, 0, 6, 28, 0, 7, 1, 1, 0, 0, 1, 1]' : 0.098855}
{'[3, 5, 6, 1, 6, 0, 1, 0, 6, 28, 0, 7, 1, 1, 0, 0, 1, 1]' : 0.0985961}
{'[3, 5, 6, 1, 6, 0, 1, 0, 6, 28, 0, 7, 1, 1, 0, 0, 1, 1]' : 0.0985589}
{'[3, 5, 6, 1, 6, 0, 1, 0, 6, 28, 0, 7, 1, 1, 0, 0, 1, 1]' : 0.098947}
{'[3, 5, 6, 1, 6, 0, 1, 0, 6, 28, 0, 7, 1, 1, 0, 0, 1, 1]' : 0.0985191}
{'[3, 5, 6, 1, 6, 0, 1, 0, 6, 28, 0, 7, 1, 1, 0, 0, 1, 1]' : 0.0990031}
{'[3, 5, 6, 1, 6, 0, 1, 0, 6, 28, 0, 7, 1, 1, 0, 0, 1, 1]' : 0.0986669}
{'[3, 5, 6, 1, 6, 0, 1, 0, 6, 28, 0, 7, 1, 1, 0, 0, 1, 1]' : 0.098593}
{'[3, 5, 6, 1, 6, 0, 1, 0, 6, 28, 0, 7, 1, 1, 0, 0, 1, 1]' : 0.0985892}
{'[3, 5, 6, 1, 6, 0, 1, 0, 6, 28, 0, 7, 1, 1, 0, 0, 1, 1]' : 0.0984969}
{'[3, 5, 6, 1, 6, 0, 1, 0, 6, 28, 0, 7, 1, 1, 0, 0, 1, 1]' : 0.0990949}
{'[3, 5, 6, 1, 6, 0, 1, 0, 6, 28, 0, 7, 1, 1, 0, 0, 1, 1]' : 0.0985858}
{'[3, 5, 6, 1, 6, 0, 1, 0, 6, 28, 0, 7, 1, 1, 0, 0, 1, 1]' : 0.0986509}
{'[3, 5, 6, 1, 6, 0, 1, 0, 6, 28, 0, 7, 1, 1, 0, 0, 1, 1]' : 0.0987172}
{'[3, 5, 6, 1, 6, 0, 1, 0, 6, 28, 0, 7, 1, 1, 0, 0, 1, 1]' : 0.098702}
{'[3, 5, 6, 1, 6, 0, 1, 0, 6, 28, 0, 7, 1, 1, 0, 0, 1, 1]' : 0.09847}
{'[3, 5, 6, 1, 6, 0, 1, 0, 6, 28, 0, 7, 1, 1, 0, 0, 1, 1]' : 0.0990241}
{'[3, 5, 6, 1, 6, 0, 1, 0, 6, 28, 0, 7, 1, 1, 0, 0, 1, 1]' : 0.0987058}
{'[3, 5, 6, 1, 6, 0, 1, 0, 6, 28, 0, 7, 1, 1, 0, 0, 1, 1]' : 0.0992391}
{'[3, 5, 6, 1, 6, 0, 1, 0, 6, 28, 0, 7, 1, 1, 0, 0, 1, 1]' : 0.098552}
{'[3, 5, 6, 1, 6, 0, 1, 0, 6, 28, 0, 7, 1, 1, 0, 0, 1, 1]' : 0.0989511}
{'[3, 5, 6, 1, 6, 0, 1, 0, 6, 28, 0, 7, 1, 1, 0, 0, 1, 1]' : 0.0986388}
{'[3, 5, 6, 1, 6, 0, 1, 0, 6, 28, 0, 7, 1, 1, 0, 0, 1, 1]' : 0.098654}
{'[3, 5, 6, 1, 6, 0, 1, 0, 6, 28, 0, 7, 1, 1, 0, 0, 1, 1]' : 0.0985012}
{'[3, 5, 6, 1, 6, 0, 1, 0, 6, 28, 0, 7, 1, 1, 0, 0, 1, 1]' : 0.0987868}
{'[3, 5, 6, 1, 6, 0, 1, 0, 6, 28, 0, 7, 1, 1, 0, 0, 1, 1]' : 0.0986378}
{'[3, 5, 6, 1, 6, 0, 1, 0, 6, 28, 0, 7, 1, 1, 0, 0, 1, 1]' : 0.0993211}
{'[3, 5, 6, 1, 6, 0, 1, 0, 6, 28, 0, 7, 1, 1, 0, 0, 1, 1]' : 0.0984299}
{'[3, 5, 6, 1, 6, 0, 1, 0, 6, 28, 0, 7, 1, 1, 0, 0, 1, 1]' : 0.0986412}
{'[3, 5, 6, 1, 6, 0, 1, 0, 6, 28, 0, 7, 1, 1, 0, 0, 1, 1]' : 0.0985749}

out:
 ["{'[3, 5, 6, 1, 6, 0, 1, 0, 6, 28, 0, 7, 1, 1, 0, 0, 1, 1]' : 0.098855}", "{'[3, 5, 6, 1, 6, 0, 1, 0, 6, 28, 0, 7, 1, 1, 0, 0, 1, 1]' : 0.0985961}", "{'[3, 5, 6, 1, 6, 0, 1, 0, 6, 28, 0, 7, 1, 1, 0, 0, 1, 1]' : 0.0985589}", "{'[3, 5, 6, 1, 6, 0, 1, 0, 6, 28, 0, 7, 1, 1, 0, 0, 1, 1]' : 0.098947}", "{'[3, 5, 6, 1, 6, 0, 1, 0, 6, 28, 0, 7, 1, 1, 0, 0, 1, 1]' : 0.0985191}", "{'[3, 5, 6, 1, 6, 0, 1, 0, 6, 28, 0, 7, 1, 1, 0, 0, 1, 1]' : 0.0990031}", "{'[3, 5, 6, 1, 6, 0, 1, 0, 6, 28, 0, 7, 1, 1, 0, 0, 1, 1]' : 0.0986669}", "{'[3, 5, 6, 1, 6, 0, 1, 0, 6, 28, 0, 7, 1, 1, 0, 0, 1, 1]' : 0.098593}", "{'[3, 5, 6, 1, 6, 0, 1, 0, 6, 28, 0, 7, 1, 1, 0, 0, 1, 1]' : 0.0985892}", "{'[3, 5, 6, 1, 6, 0, 1, 0, 6, 28, 0, 7, 1, 1, 0, 0, 1, 1]' : 0.0984969}", "{'[3, 5, 6, 1, 6, 0, 1, 0, 6, 28, 0, 7, 1, 1, 0, 0, 1, 1]' : 0.0990949}", "{'[3, 5, 6, 1, 6, 0, 1, 0, 6, 28, 0, 7, 1, 1, 0, 0, 1, 1]' : 0.0985858}", "{'[3, 5, 6, 1, 6, 0, 1, 0, 6, 28, 0, 7, 1, 1, 0, 0, 1, 1]' : 0.0986509}", "{'[3, 5, 6, 1, 6, 0, 1, 0, 6, 28, 0, 7, 1, 1, 0, 0, 1, 1]' : 0.0987172}", "{'[3, 5, 6, 1, 6, 0, 1, 0, 6, 28, 0, 7, 1, 1, 0, 0, 1, 1]' : 0.098702}", "{'[3, 5, 6, 1, 6, 0, 1, 0, 6, 28, 0, 7, 1, 1, 0, 0, 1, 1]' : 0.09847}", "{'[3, 5, 6, 1, 6, 0, 1, 0, 6, 28, 0, 7, 1, 1, 0, 0, 1, 1]' : 0.0990241}", "{'[3, 5, 6, 1, 6, 0, 1, 0, 6, 28, 0, 7, 1, 1, 0, 0, 1, 1]' : 0.0987058}", "{'[3, 5, 6, 1, 6, 0, 1, 0, 6, 28, 0, 7, 1, 1, 0, 0, 1, 1]' : 0.0992391}", "{'[3, 5, 6, 1, 6, 0, 1, 0, 6, 28, 0, 7, 1, 1, 0, 0, 1, 1]' : 0.098552}", "{'[3, 5, 6, 1, 6, 0, 1, 0, 6, 28, 0, 7, 1, 1, 0, 0, 1, 1]' : 0.0989511}", "{'[3, 5, 6, 1, 6, 0, 1, 0, 6, 28, 0, 7, 1, 1, 0, 0, 1, 1]' : 0.0986388}", "{'[3, 5, 6, 1, 6, 0, 1, 0, 6, 28, 0, 7, 1, 1, 0, 0, 1, 1]' : 0.098654}", "{'[3, 5, 6, 1, 6, 0, 1, 0, 6, 28, 0, 7, 1, 1, 0, 0, 1, 1]' : 0.0985012}", "{'[3, 5, 6, 1, 6, 0, 1, 0, 6, 28, 0, 7, 1, 1, 0, 0, 1, 1]' : 0.0987868}", "{'[3, 5, 6, 1, 6, 0, 1, 0, 6, 28, 0, 7, 1, 1, 0, 0, 1, 1]' : 0.0986378}", "{'[3, 5, 6, 1, 6, 0, 1, 0, 6, 28, 0, 7, 1, 1, 0, 0, 1, 1]' : 0.0993211}", "{'[3, 5, 6, 1, 6, 0, 1, 0, 6, 28, 0, 7, 1, 1, 0, 0, 1, 1]' : 0.0984299}", "{'[3, 5, 6, 1, 6, 0, 1, 0, 6, 28, 0, 7, 1, 1, 0, 0, 1, 1]' : 0.0986412}", "{'[3, 5, 6, 1, 6, 0, 1, 0, 6, 28, 0, 7, 1, 1, 0, 0, 1, 1]' : 0.0985749}"]
returning from 'run': {'[3, 5, 6, 1, 6, 0, 1, 0, 6, 28, 0, 7, 1, 1, 0, 0, 1, 1]': ([0.098855, 0.0985961, 0.0985589, 0.098947, 0.0985191, 0.0990031, 0.0986669, 0.098593, 0.0985892, 0.0984969, 0.0990949, 0.0985858, 0.0986509, 0.0987172, 0.098702, 0.09847, 0.0990241, 0.0987058, 0.0992391, 0.098552, 0.0989511, 0.0986388, 0.098654, 0.0985012, 0.0987868, 0.0986378, 0.0993211, 0.0984299, 0.0986412, 0.0985749], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 5, 6, 1, 6, 0, 1, 0, 6, 28, 0, 7, 1, 1, 0, 0, 1, 1]': ([0.098855, 0.0985961, 0.0985589, 0.098947, 0.0985191, 0.0990031, 0.0986669, 0.098593, 0.0985892, 0.0984969, 0.0990949, 0.0985858, 0.0986509, 0.0987172, 0.098702, 0.09847, 0.0990241, 0.0987058, 0.0992391, 0.098552, 0.0989511, 0.0986388, 0.098654, 0.0985012, 0.0987868, 0.0986378, 0.0993211, 0.0984299, 0.0986412, 0.0985749], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Complete design, with measurements:
   T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
1     6    1    0    4    5    0       1       1    5   4   0  20    0    1
2     0    3    3    6    0    5       1       1   13   0   5   2    1    1
3     1    5    2    5    3    1       1       0   29   0  25   4    2    0
4     5    4    3    4    0    0       1       1    0   0   1   3    0    0
5     6    1    2    5    2    2       1       0   12   0  18   7    0    0
8     2    1    0    6    6    5       1       1    0  19   0  18    0    1
9     0    0    4    2    2    2       0       1   16   0   2  25    0    0
10    3    4    0    2    0    4       1       0    8  22  28   0    0    0
11    4    0    2    0    5    0       1       1    0   0  10  19    1    0
12    6    6    0    6    0    3       0       1   15   0  17  25    0    1
13    1    5    1    1    4    0       0       0   29   3  16   0    2    0
14    0    5    0    1    3    5       1       0   22   0   4   8    1    0
15    1    6    6    6    5    5       1       1   28  22   0   0    1    0
16    0    6    3    0    5    3       0       1    0   0  21  17    0    0
17    6    2    1    0    1    5       0       1   26   3   0  10    0    0
18    4    0    0    4    1    3       0       1   16  20   0   7    0    0
19    0    2    1    3    1    1       0       1    1   0  28  18    1    0
20    5    1    3    3    3    2       0       1   22   0   3  27    0    2
23    4    1    1    3    5    3       0       0    9   0   0   1    0    1
24    3    5    4    2    5    6       1       1    3   0  16  27    0    0
25    3    2    3    0    2    1       0       1    9  28   0   1    2    0
27    5    6    2    6    0    2       1       0   28  26   0  29    1    0
29    6    5    1    0    4    4       1       1   26  27  14   0    0    1
30    6    5    5    4    6    3       0       1   29   4  28   0    1    0
31    0    0    4    6    1    2       1       0    2   4   9   0    0    1
32    1    1    0    6    0    1       1       0   12   0   5   4    1    0
33    5    1    2    3    5    4       0       1   12  24   4   0    1    0
34    6    1    2    6    3    0       0       0   10   0  25  24    1    1
35    4    3    6    3    1    6       1       0    0   8   0  21    1    0
36    2    2    6    0    5    0       0       0   28  26   7   0    0    0
38    3    5    4    0    6    2       0       0    8   3  20   0    0    0
39    2    2    2    1    3    2       1       1   27   0   5  21    1    1
40    0    0    6    2    4    6       0       0   18   0  12  15    2    0
41    3    5    6    1    6    0       1       0    6  28   0   7    1    1
   RT_K SCR VEC1 VEC2  cost_mean
1     1   0    0    0 0.12139847
2     0   0    1    0 0.09609827
3     0   0    0    1 0.17240723
4     0   1    1    1 0.17761097
5     2   0    1    1 0.20527460
8     0   0    0    1 0.16375990
9     0   1    0    1 0.15933920
10    0   0    0    0 0.19287473
11    0   1    1    1 0.09699149
12    1   1    1    0 0.15263073
13    0   1    1    1 0.08560273
14    1   0    0    0 0.09465757
15    1   0    0    0 0.09728281
16    1   1    0    0 0.16147680
17    0   0    0    1 0.22296537
18    0   0    1    0 0.14164043
19    0   0    1    1 0.09232003
20    0   0    1    1 0.17588957
23    1   1    1    1 0.13673080
24    1   1    1    1 0.17690973
25    0   1    0    1 0.17858990
27    0   0    0    1 0.11036550
29    1   1    1    1 0.24364603
30    0   1    0    0 0.08777313
31    1   0    1    0 0.10602073
32    1   1    0    1 0.07838811
33    1   0    0    1 0.09263054
34    0   1    0    0 0.09286636
35    1   1    0    1 0.07729369
36    1   0    1    1 0.14594947
38    2   0    1    0 0.10541737
39    0   1    1    0 0.09386367
40    0   1    1    0 0.24124103
41    0   0    1    1 0.09872346

Step Space Names:  [1] "T1_I"    "T1_J"    "T1_K"    "T2_I"    "T2_J"    "T2_K"    "ACOPY_x"
 [8] "ACOPY_y" "U1_I"    "U_I"     "U_J"     "U_K"     "RT_I"    "RT_J"   
[15] "RT_K"    "SCR"     "VEC1"    "VEC2"   

Initial Regression Step:                 Df   Sum Sq  Mean Sq F value Pr(>F)  
T1_I             1 0.002831 0.002831   2.055 0.2881  
T1_J             1 0.000311 0.000311   0.226 0.6813  
T1_K             1 0.000044 0.000044   0.032 0.8753  
T2_I             1 0.005467 0.005467   3.968 0.1846  
T2_J             1 0.002165 0.002165   1.571 0.3367  
T2_K             1 0.007710 0.007710   5.596 0.1417  
ACOPY_x          1 0.000020 0.000020   0.015 0.9147  
ACOPY_y          1 0.000100 0.000100   0.072 0.8130  
U1_I             1 0.000591 0.000591   0.429 0.5799  
U_I              1 0.000059 0.000059   0.043 0.8546  
U_J              1 0.002953 0.002953   2.143 0.2808  
U_K              1 0.000003 0.000003   0.002 0.9665  
RT_I             1 0.003905 0.003905   2.834 0.2343  
RT_J             1 0.000132 0.000132   0.096 0.7865  
RT_K             1 0.000933 0.000933   0.677 0.4970  
SCR              1 0.000510 0.000510   0.370 0.6049  
VEC1             1 0.000426 0.000426   0.310 0.6339  
VEC2             1 0.003279 0.003279   2.380 0.2628  
I(1/(1 + T1_I))  1 0.001284 0.001284   0.932 0.4362  
I(1/(1 + T1_J))  1 0.001087 0.001087   0.789 0.4681  
I(1/(1 + T1_K))  1 0.000112 0.000112   0.081 0.8028  
I(1/(1 + T2_I))  1 0.001460 0.001460   1.060 0.4115  
I(1/(1 + T2_J))  1 0.000828 0.000828   0.601 0.5193  
I(1/(1 + T2_K))  1 0.000027 0.000027   0.020 0.9015  
I(1/(1 + U1_I))  1 0.001649 0.001649   1.197 0.3881  
I(1/(1 + U_I))   1 0.004803 0.004803   3.486 0.2029  
I(1/(1 + U_J))   1 0.001883 0.001883   1.367 0.3629  
I(1/(1 + U_K))   1 0.001912 0.001912   1.388 0.3599  
I(1/(1 + RT_I))  1 0.028638 0.028638  20.787 0.0449 *
I(1/(1 + RT_J))  1 0.000101 0.000101   0.073 0.8123  
I(1/(1 + RT_K))  1 0.000181 0.000181   0.131 0.7520  
Residuals        2 0.002755 0.001378                 
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Heteroscedasticity Test p-value: 0.866616350799
Regression Step:                Df   Sum Sq  Mean Sq F value Pr(>F)  
T1_I             1 0.002831 0.002831   2.055 0.2881  
T1_J             1 0.000311 0.000311   0.226 0.6813  
T1_K             1 0.000044 0.000044   0.032 0.8753  
T2_I             1 0.005467 0.005467   3.968 0.1846  
T2_J             1 0.002165 0.002165   1.571 0.3367  
T2_K             1 0.007710 0.007710   5.596 0.1417  
ACOPY_x          1 0.000020 0.000020   0.015 0.9147  
ACOPY_y          1 0.000100 0.000100   0.072 0.8130  
U1_I             1 0.000591 0.000591   0.429 0.5799  
U_I              1 0.000059 0.000059   0.043 0.8546  
U_J              1 0.002953 0.002953   2.143 0.2808  
U_K              1 0.000003 0.000003   0.002 0.9665  
RT_I             1 0.003905 0.003905   2.834 0.2343  
RT_J             1 0.000132 0.000132   0.096 0.7865  
RT_K             1 0.000933 0.000933   0.677 0.4970  
SCR              1 0.000510 0.000510   0.370 0.6049  
VEC1             1 0.000426 0.000426   0.310 0.6339  
VEC2             1 0.003279 0.003279   2.380 0.2628  
I(1/(1 + T1_I))  1 0.001284 0.001284   0.932 0.4362  
I(1/(1 + T1_J))  1 0.001087 0.001087   0.789 0.4681  
I(1/(1 + T1_K))  1 0.000112 0.000112   0.081 0.8028  
I(1/(1 + T2_I))  1 0.001460 0.001460   1.060 0.4115  
I(1/(1 + T2_J))  1 0.000828 0.000828   0.601 0.5193  
I(1/(1 + T2_K))  1 0.000027 0.000027   0.020 0.9015  
I(1/(1 + U1_I))  1 0.001649 0.001649   1.197 0.3881  
I(1/(1 + U_I))   1 0.004803 0.004803   3.486 0.2029  
I(1/(1 + U_J))   1 0.001883 0.001883   1.367 0.3629  
I(1/(1 + U_K))   1 0.001912 0.001912   1.388 0.3599  
I(1/(1 + RT_I))  1 0.028638 0.028638  20.787 0.0449 *
I(1/(1 + RT_J))  1 0.000101 0.000101   0.073 0.8123  
I(1/(1 + RT_K))  1 0.000181 0.000181   0.131 0.7520  
Residuals        2 0.002755 0.001378                 
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Predicting Best
Identical predictions (tol = 1e-5): 1
Getting Best from Design
Response: ['cost_mean']
Design Names:  [1] "T1_I"      "T1_J"      "T1_K"      "T2_I"      "T2_J"      "T2_K"     
 [7] "ACOPY_x"   "ACOPY_y"   "U1_I"      "U_I"       "U_J"       "U_K"      
[13] "RT_I"      "RT_J"      "RT_K"      "SCR"       "VEC1"      "VEC2"     
[19] "cost_mean"

Design Response:     cost_mean
1  0.12139847
2  0.09609827
3  0.17240723
4  0.17761097
5  0.20527460
8  0.16375990
9  0.15933920
10 0.19287473
11 0.09699149
12 0.15263073
13 0.08560273
14 0.09465757
15 0.09728281
16 0.16147680
17 0.22296537
18 0.14164043
19 0.09232003
20 0.17588957
23 0.13673080
24 0.17690973
25 0.17858990
27 0.11036550
29 0.24364603
30 0.08777313
31 0.10602073
32 0.07838811
33 0.09263054
34 0.09286636
35 0.07729369
36 0.14594947
38 0.10541737
39 0.09386367
40 0.24124103
41 0.09872346

Getting fixed variables
Fixed Variables: {'RT_I': 1}
Pruning Data
Predicted best column RT_I: [1] 1

Dimensions of Pruned Data: [1] 239410     18
Pruned data names:  [1] "T1_I"    "T1_J"    "T1_K"    "T2_I"    "T2_J"    "T2_K"    "ACOPY_x"
 [8] "ACOPY_y" "U1_I"    "U_I"     "U_J"     "U_K"     "RT_I"    "RT_J"   
[15] "RT_K"    "SCR"     "VEC1"    "VEC2"   

NULL
Pruning Model
Best Predicted:        T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
343349    1    6    1    6    4    1       0       1    3   4   1   0    1    0
       RT_K SCR VEC1 VEC2
343349    1   1    1    0

Best From Design :    T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
35    4    3    6    3    1    6       1       0    0   8   0  21    1    0
   RT_K SCR VEC1 VEC2  cost_mean
35    1   1    0    1 0.07729369

Pruned Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Fixed Factors: {'RT_I': 1}
Length of requested configs: 1
Result was on Database, Returning Now
Starting Point (-O3):
0.144500066667
Predicted Best Point:
[1, 6, 1, 6, 4, 1, 0, 1, 3, 4, 1, 0, 1, 0, 1, 1, 1, 0]
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	39
        Max loop nest depth: 	6
        Additions: 		828
        Multiplications: 	308
        Divisions: 		0
        Logical: 		0
        Reads: 			1741
        Writes: 		343
        Comparisons:		39
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest42.exe __orio_perftest42.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest42.exe  
Program Test Output: 
{'[1, 6, 1, 6, 4, 1, 0, 1, 3, 4, 1, 0, 1, 0, 1, 1, 1, 0]' : 0.092905}
{'[1, 6, 1, 6, 4, 1, 0, 1, 3, 4, 1, 0, 1, 0, 1, 1, 1, 0]' : 0.0910649}
{'[1, 6, 1, 6, 4, 1, 0, 1, 3, 4, 1, 0, 1, 0, 1, 1, 1, 0]' : 0.0910919}
{'[1, 6, 1, 6, 4, 1, 0, 1, 3, 4, 1, 0, 1, 0, 1, 1, 1, 0]' : 0.0911009}
{'[1, 6, 1, 6, 4, 1, 0, 1, 3, 4, 1, 0, 1, 0, 1, 1, 1, 0]' : 0.09131}
{'[1, 6, 1, 6, 4, 1, 0, 1, 3, 4, 1, 0, 1, 0, 1, 1, 1, 0]' : 0.091058}
{'[1, 6, 1, 6, 4, 1, 0, 1, 3, 4, 1, 0, 1, 0, 1, 1, 1, 0]' : 0.0910499}
{'[1, 6, 1, 6, 4, 1, 0, 1, 3, 4, 1, 0, 1, 0, 1, 1, 1, 0]' : 0.0913851}
{'[1, 6, 1, 6, 4, 1, 0, 1, 3, 4, 1, 0, 1, 0, 1, 1, 1, 0]' : 0.0913079}
{'[1, 6, 1, 6, 4, 1, 0, 1, 3, 4, 1, 0, 1, 0, 1, 1, 1, 0]' : 0.0910649}
{'[1, 6, 1, 6, 4, 1, 0, 1, 3, 4, 1, 0, 1, 0, 1, 1, 1, 0]' : 0.0909262}
{'[1, 6, 1, 6, 4, 1, 0, 1, 3, 4, 1, 0, 1, 0, 1, 1, 1, 0]' : 0.0919428}
{'[1, 6, 1, 6, 4, 1, 0, 1, 3, 4, 1, 0, 1, 0, 1, 1, 1, 0]' : 0.0939381}
{'[1, 6, 1, 6, 4, 1, 0, 1, 3, 4, 1, 0, 1, 0, 1, 1, 1, 0]' : 0.090971}
{'[1, 6, 1, 6, 4, 1, 0, 1, 3, 4, 1, 0, 1, 0, 1, 1, 1, 0]' : 0.091049}
{'[1, 6, 1, 6, 4, 1, 0, 1, 3, 4, 1, 0, 1, 0, 1, 1, 1, 0]' : 0.0910001}
{'[1, 6, 1, 6, 4, 1, 0, 1, 3, 4, 1, 0, 1, 0, 1, 1, 1, 0]' : 0.0909891}
{'[1, 6, 1, 6, 4, 1, 0, 1, 3, 4, 1, 0, 1, 0, 1, 1, 1, 0]' : 0.09252}
{'[1, 6, 1, 6, 4, 1, 0, 1, 3, 4, 1, 0, 1, 0, 1, 1, 1, 0]' : 0.0914159}
{'[1, 6, 1, 6, 4, 1, 0, 1, 3, 4, 1, 0, 1, 0, 1, 1, 1, 0]' : 0.0913429}
{'[1, 6, 1, 6, 4, 1, 0, 1, 3, 4, 1, 0, 1, 0, 1, 1, 1, 0]' : 0.091043}
{'[1, 6, 1, 6, 4, 1, 0, 1, 3, 4, 1, 0, 1, 0, 1, 1, 1, 0]' : 0.090986}
{'[1, 6, 1, 6, 4, 1, 0, 1, 3, 4, 1, 0, 1, 0, 1, 1, 1, 0]' : 0.091378}
{'[1, 6, 1, 6, 4, 1, 0, 1, 3, 4, 1, 0, 1, 0, 1, 1, 1, 0]' : 0.0915301}
{'[1, 6, 1, 6, 4, 1, 0, 1, 3, 4, 1, 0, 1, 0, 1, 1, 1, 0]' : 0.0924752}
{'[1, 6, 1, 6, 4, 1, 0, 1, 3, 4, 1, 0, 1, 0, 1, 1, 1, 0]' : 0.0915029}
{'[1, 6, 1, 6, 4, 1, 0, 1, 3, 4, 1, 0, 1, 0, 1, 1, 1, 0]' : 0.0909441}
{'[1, 6, 1, 6, 4, 1, 0, 1, 3, 4, 1, 0, 1, 0, 1, 1, 1, 0]' : 0.0909939}
{'[1, 6, 1, 6, 4, 1, 0, 1, 3, 4, 1, 0, 1, 0, 1, 1, 1, 0]' : 0.091047}
{'[1, 6, 1, 6, 4, 1, 0, 1, 3, 4, 1, 0, 1, 0, 1, 1, 1, 0]' : 0.0914421}

out:
 ["{'[1, 6, 1, 6, 4, 1, 0, 1, 3, 4, 1, 0, 1, 0, 1, 1, 1, 0]' : 0.092905}", "{'[1, 6, 1, 6, 4, 1, 0, 1, 3, 4, 1, 0, 1, 0, 1, 1, 1, 0]' : 0.0910649}", "{'[1, 6, 1, 6, 4, 1, 0, 1, 3, 4, 1, 0, 1, 0, 1, 1, 1, 0]' : 0.0910919}", "{'[1, 6, 1, 6, 4, 1, 0, 1, 3, 4, 1, 0, 1, 0, 1, 1, 1, 0]' : 0.0911009}", "{'[1, 6, 1, 6, 4, 1, 0, 1, 3, 4, 1, 0, 1, 0, 1, 1, 1, 0]' : 0.09131}", "{'[1, 6, 1, 6, 4, 1, 0, 1, 3, 4, 1, 0, 1, 0, 1, 1, 1, 0]' : 0.091058}", "{'[1, 6, 1, 6, 4, 1, 0, 1, 3, 4, 1, 0, 1, 0, 1, 1, 1, 0]' : 0.0910499}", "{'[1, 6, 1, 6, 4, 1, 0, 1, 3, 4, 1, 0, 1, 0, 1, 1, 1, 0]' : 0.0913851}", "{'[1, 6, 1, 6, 4, 1, 0, 1, 3, 4, 1, 0, 1, 0, 1, 1, 1, 0]' : 0.0913079}", "{'[1, 6, 1, 6, 4, 1, 0, 1, 3, 4, 1, 0, 1, 0, 1, 1, 1, 0]' : 0.0910649}", "{'[1, 6, 1, 6, 4, 1, 0, 1, 3, 4, 1, 0, 1, 0, 1, 1, 1, 0]' : 0.0909262}", "{'[1, 6, 1, 6, 4, 1, 0, 1, 3, 4, 1, 0, 1, 0, 1, 1, 1, 0]' : 0.0919428}", "{'[1, 6, 1, 6, 4, 1, 0, 1, 3, 4, 1, 0, 1, 0, 1, 1, 1, 0]' : 0.0939381}", "{'[1, 6, 1, 6, 4, 1, 0, 1, 3, 4, 1, 0, 1, 0, 1, 1, 1, 0]' : 0.090971}", "{'[1, 6, 1, 6, 4, 1, 0, 1, 3, 4, 1, 0, 1, 0, 1, 1, 1, 0]' : 0.091049}", "{'[1, 6, 1, 6, 4, 1, 0, 1, 3, 4, 1, 0, 1, 0, 1, 1, 1, 0]' : 0.0910001}", "{'[1, 6, 1, 6, 4, 1, 0, 1, 3, 4, 1, 0, 1, 0, 1, 1, 1, 0]' : 0.0909891}", "{'[1, 6, 1, 6, 4, 1, 0, 1, 3, 4, 1, 0, 1, 0, 1, 1, 1, 0]' : 0.09252}", "{'[1, 6, 1, 6, 4, 1, 0, 1, 3, 4, 1, 0, 1, 0, 1, 1, 1, 0]' : 0.0914159}", "{'[1, 6, 1, 6, 4, 1, 0, 1, 3, 4, 1, 0, 1, 0, 1, 1, 1, 0]' : 0.0913429}", "{'[1, 6, 1, 6, 4, 1, 0, 1, 3, 4, 1, 0, 1, 0, 1, 1, 1, 0]' : 0.091043}", "{'[1, 6, 1, 6, 4, 1, 0, 1, 3, 4, 1, 0, 1, 0, 1, 1, 1, 0]' : 0.090986}", "{'[1, 6, 1, 6, 4, 1, 0, 1, 3, 4, 1, 0, 1, 0, 1, 1, 1, 0]' : 0.091378}", "{'[1, 6, 1, 6, 4, 1, 0, 1, 3, 4, 1, 0, 1, 0, 1, 1, 1, 0]' : 0.0915301}", "{'[1, 6, 1, 6, 4, 1, 0, 1, 3, 4, 1, 0, 1, 0, 1, 1, 1, 0]' : 0.0924752}", "{'[1, 6, 1, 6, 4, 1, 0, 1, 3, 4, 1, 0, 1, 0, 1, 1, 1, 0]' : 0.0915029}", "{'[1, 6, 1, 6, 4, 1, 0, 1, 3, 4, 1, 0, 1, 0, 1, 1, 1, 0]' : 0.0909441}", "{'[1, 6, 1, 6, 4, 1, 0, 1, 3, 4, 1, 0, 1, 0, 1, 1, 1, 0]' : 0.0909939}", "{'[1, 6, 1, 6, 4, 1, 0, 1, 3, 4, 1, 0, 1, 0, 1, 1, 1, 0]' : 0.091047}", "{'[1, 6, 1, 6, 4, 1, 0, 1, 3, 4, 1, 0, 1, 0, 1, 1, 1, 0]' : 0.0914421}"]
returning from 'run': {'[1, 6, 1, 6, 4, 1, 0, 1, 3, 4, 1, 0, 1, 0, 1, 1, 1, 0]': ([0.092905, 0.0910649, 0.0910919, 0.0911009, 0.09131, 0.091058, 0.0910499, 0.0913851, 0.0913079, 0.0910649, 0.0909262, 0.0919428, 0.0939381, 0.090971, 0.091049, 0.0910001, 0.0909891, 0.09252, 0.0914159, 0.0913429, 0.091043, 0.090986, 0.091378, 0.0915301, 0.0924752, 0.0915029, 0.0909441, 0.0909939, 0.091047, 0.0914421], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 6, 1, 6, 4, 1, 0, 1, 3, 4, 1, 0, 1, 0, 1, 1, 1, 0]': ([0.092905, 0.0910649, 0.0910919, 0.0911009, 0.09131, 0.091058, 0.0910499, 0.0913851, 0.0913079, 0.0910649, 0.0909262, 0.0919428, 0.0939381, 0.090971, 0.091049, 0.0910001, 0.0909891, 0.09252, 0.0914159, 0.0913429, 0.091043, 0.090986, 0.091378, 0.0915301, 0.0924752, 0.0915029, 0.0909441, 0.0909939, 0.091047, 0.0914421], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Design Best Point:
   T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
35    4    3    6    3    1    6       1       0    0   8   0  21    1    0
   RT_K SCR VEC1 VEC2  cost_mean
35    1   1    0    1 0.07729369

Slowdown (Design Best): 0.53490420535
Slowdown (Predicted Best): 0.632704644658
Budget: 34/180
Step 1
Full Model:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Fixed Factors: {'RT_I': 1}
Full data does not fit on budget
Computing D-Optimal Design
Updating Constraints
Updated Constraint: True and (((T2_I ==1 )or (T2_I %T1_I ==0 ))) and (((T2_J ==1 )or (T2_J %T1_J ==0 ))) and (((T2_K ==1 )or (T2_K %T1_K ==0 ))) and ((RT_I *RT_J +RT_I *RT_K +RT_J *RT_K <=150 )) and (((U_I ==1 )or (U_J ==1 )or (U_K ==1 )))
Computing D-Optimal Design with 39 experiments
Design Formula:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Starting "optMonteCarlo" run
       var low high center nLevels round factor   mix
1     T1_I   0    6      0       7     0  FALSE FALSE
2     T1_J   0    6      0       7     0  FALSE FALSE
3     T1_K   0    6      0       7     0  FALSE FALSE
4     T2_I   0    6      0       7     0  FALSE FALSE
5     T2_J   0    6      0       7     0  FALSE FALSE
6     T2_K   0    6      0       7     0  FALSE FALSE
7  ACOPY_x   0    1      0       2     0  FALSE FALSE
8  ACOPY_y   0    1      0       2     0  FALSE FALSE
9     U1_I   0   29      0      30     0  FALSE FALSE
10     U_I   0   29      0      30     0  FALSE FALSE
11     U_J   0   29      0      30     0  FALSE FALSE
12     U_K   0   29      0      30     0  FALSE FALSE
13    RT_J   0    2      0       3     0  FALSE FALSE
14    RT_K   0    2      0       3     0  FALSE FALSE
15     SCR   0    1      0       2     0  FALSE FALSE
16    VEC1   0    1      0       2     0  FALSE FALSE
17    VEC2   0    1      0       2     0  FALSE FALSE

