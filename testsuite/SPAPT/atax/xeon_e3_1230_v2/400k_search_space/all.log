

====== START ORIO ======

----- begin reading the source file: atax2.src1.c -----
----- finished reading the source file -----

----- begin parsing annotations -----
----- finished parsing annotations -----

----- begin optimizations -----
Search_Space         = 8.234e+13
Number_of_Parameters = 18
Numeric_Parameters   = 13
Binary_Parameters    = 05
['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
[[1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [False, True], [False, True], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 8, 32], [1, 8, 32], [1, 8, 32], [False, True], [False, True], [False, True]]

----- begin empirical tuning for problem size -----
 N = 10000
Parameters: {'ACOPY_x': [0, 2], 'ACOPY_y': [0, 2], 'RT_K': [0, 3], 'T1_I': [0, 7], 'T1_J': [0, 7], 'T1_K': [0, 7], 'U_K': [0, 30], 'U_J': [0, 30], 'U_I': [0, 30], 'U1_I': [0, 30], 'T2_K': [0, 7], 'T2_J': [0, 7], 'T2_I': [0, 7], 'VEC2': [0, 2], 'VEC1': [0, 2], 'RT_I': [0, 3], 'SCR': [0, 2], 'RT_J': [0, 3]}

----- begin random search -----
['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
18
Building seed search space (does not spend evaluations)
Generating new search space for this size
Evaluated coordinates: 0
Evaluated coordinates: 20000
Evaluated coordinates: 40000
Evaluated coordinates: 60000
Evaluated coordinates: 80000
Evaluated coordinates: 100000
Evaluated coordinates: 120000
Evaluated coordinates: 140000
Evaluated coordinates: 160000
Evaluated coordinates: 180000
Evaluated coordinates: 200000
Valid coordinates: 5000
Evaluated coordinates: 220000
Evaluated coordinates: 240000
Evaluated coordinates: 260000
Evaluated coordinates: 280000
Evaluated coordinates: 300000
Evaluated coordinates: 320000
Evaluated coordinates: 340000
Evaluated coordinates: 360000
Evaluated coordinates: 380000
Evaluated coordinates: 400000
Valid coordinates: 10000
Evaluated coordinates: 420000
Evaluated coordinates: 440000
Evaluated coordinates: 460000
Evaluated coordinates: 480000
Evaluated coordinates: 500000
Evaluated coordinates: 520000
Evaluated coordinates: 540000
Evaluated coordinates: 560000
Evaluated coordinates: 580000
Evaluated coordinates: 600000
Valid coordinates: 15000
Evaluated coordinates: 620000
Evaluated coordinates: 640000
Evaluated coordinates: 660000
Evaluated coordinates: 680000
Evaluated coordinates: 700000
Evaluated coordinates: 720000
Evaluated coordinates: 740000
Evaluated coordinates: 760000
Evaluated coordinates: 780000
Evaluated coordinates: 800000
Evaluated coordinates: 820000
Valid coordinates: 20000
Evaluated coordinates: 840000
Evaluated coordinates: 860000
Evaluated coordinates: 880000
Evaluated coordinates: 900000
Evaluated coordinates: 920000
Evaluated coordinates: 940000
Evaluated coordinates: 960000
Evaluated coordinates: 980000
Evaluated coordinates: 1000000
Evaluated coordinates: 1020000
Valid coordinates: 25000
Evaluated coordinates: 1040000
Evaluated coordinates: 1060000
Evaluated coordinates: 1080000
Evaluated coordinates: 1100000
Evaluated coordinates: 1120000
Evaluated coordinates: 1140000
Evaluated coordinates: 1160000
Evaluated coordinates: 1180000
Evaluated coordinates: 1200000
Evaluated coordinates: 1220000
Valid coordinates: 30000
Evaluated coordinates: 1240000
Evaluated coordinates: 1260000
Evaluated coordinates: 1280000
Evaluated coordinates: 1300000
Evaluated coordinates: 1320000
Evaluated coordinates: 1340000
Evaluated coordinates: 1360000
Evaluated coordinates: 1380000
Evaluated coordinates: 1400000
Evaluated coordinates: 1420000
Evaluated coordinates: 1440000
Valid coordinates: 35000
Evaluated coordinates: 1460000
Evaluated coordinates: 1480000
Evaluated coordinates: 1500000
Evaluated coordinates: 1520000
Evaluated coordinates: 1540000
Evaluated coordinates: 1560000
Evaluated coordinates: 1580000
Evaluated coordinates: 1600000
Evaluated coordinates: 1620000
Evaluated coordinates: 1640000
Valid coordinates: 40000
Evaluated coordinates: 1660000
Evaluated coordinates: 1680000
Evaluated coordinates: 1700000
Evaluated coordinates: 1720000
Evaluated coordinates: 1740000
Evaluated coordinates: 1760000
Evaluated coordinates: 1780000
Evaluated coordinates: 1800000
Evaluated coordinates: 1820000
Evaluated coordinates: 1840000
Evaluated coordinates: 1860000
Valid coordinates: 45000
Evaluated coordinates: 1880000
Evaluated coordinates: 1900000
Evaluated coordinates: 1920000
Evaluated coordinates: 1940000
Evaluated coordinates: 1960000
Evaluated coordinates: 1980000
Evaluated coordinates: 2000000
Evaluated coordinates: 2020000
Evaluated coordinates: 2040000
Evaluated coordinates: 2060000
Valid coordinates: 50000
Evaluated coordinates: 2080000
Evaluated coordinates: 2100000
Evaluated coordinates: 2120000
Evaluated coordinates: 2140000
Evaluated coordinates: 2160000
Evaluated coordinates: 2180000
Evaluated coordinates: 2200000
Evaluated coordinates: 2220000
Evaluated coordinates: 2240000
Evaluated coordinates: 2260000
Valid coordinates: 55000
Evaluated coordinates: 2280000
Evaluated coordinates: 2300000
Evaluated coordinates: 2320000
Evaluated coordinates: 2340000
Evaluated coordinates: 2360000
Evaluated coordinates: 2380000
Evaluated coordinates: 2400000
Evaluated coordinates: 2420000
Evaluated coordinates: 2440000
Evaluated coordinates: 2460000
Evaluated coordinates: 2480000
Valid coordinates: 60000
Evaluated coordinates: 2500000
Evaluated coordinates: 2520000
Evaluated coordinates: 2540000
Evaluated coordinates: 2560000
Evaluated coordinates: 2580000
Evaluated coordinates: 2600000
Evaluated coordinates: 2620000
Evaluated coordinates: 2640000
Evaluated coordinates: 2660000
Evaluated coordinates: 2680000
Valid coordinates: 65000
Evaluated coordinates: 2700000
Evaluated coordinates: 2720000
Evaluated coordinates: 2740000
Evaluated coordinates: 2760000
Evaluated coordinates: 2780000
Evaluated coordinates: 2800000
Evaluated coordinates: 2820000
Evaluated coordinates: 2840000
Evaluated coordinates: 2860000
Evaluated coordinates: 2880000
Valid coordinates: 70000
Evaluated coordinates: 2900000
Evaluated coordinates: 2920000
Evaluated coordinates: 2940000
Evaluated coordinates: 2960000
Evaluated coordinates: 2980000
Evaluated coordinates: 3000000
Evaluated coordinates: 3020000
Evaluated coordinates: 3040000
Evaluated coordinates: 3060000
Evaluated coordinates: 3080000
Evaluated coordinates: 3100000
Valid coordinates: 75000
Evaluated coordinates: 3120000
Evaluated coordinates: 3140000
Evaluated coordinates: 3160000
Evaluated coordinates: 3180000
Evaluated coordinates: 3200000
Evaluated coordinates: 3220000
Evaluated coordinates: 3240000
Evaluated coordinates: 3260000
Evaluated coordinates: 3280000
Evaluated coordinates: 3300000
Valid coordinates: 80000
Evaluated coordinates: 3320000
Evaluated coordinates: 3340000
Evaluated coordinates: 3360000
Evaluated coordinates: 3380000
Evaluated coordinates: 3400000
Evaluated coordinates: 3420000
Evaluated coordinates: 3440000
Evaluated coordinates: 3460000
Evaluated coordinates: 3480000
Evaluated coordinates: 3500000
Valid coordinates: 85000
Evaluated coordinates: 3520000
Evaluated coordinates: 3540000
Evaluated coordinates: 3560000
Evaluated coordinates: 3580000
Evaluated coordinates: 3600000
Evaluated coordinates: 3620000
Evaluated coordinates: 3640000
Evaluated coordinates: 3660000
Evaluated coordinates: 3680000
Evaluated coordinates: 3700000
Evaluated coordinates: 3720000
Valid coordinates: 90000
Evaluated coordinates: 3740000
Evaluated coordinates: 3760000
Evaluated coordinates: 3780000
Evaluated coordinates: 3800000
Evaluated coordinates: 3820000
Evaluated coordinates: 3840000
Evaluated coordinates: 3860000
Evaluated coordinates: 3880000
Evaluated coordinates: 3900000
Evaluated coordinates: 3920000
Valid coordinates: 95000
Evaluated coordinates: 3940000
Evaluated coordinates: 3960000
Evaluated coordinates: 3980000
Evaluated coordinates: 4000000
Evaluated coordinates: 4020000
Evaluated coordinates: 4040000
Evaluated coordinates: 4060000
Evaluated coordinates: 4080000
Evaluated coordinates: 4100000
Evaluated coordinates: 4120000
Valid coordinates: 100000
Evaluated coordinates: 4140000
Evaluated coordinates: 4160000
Evaluated coordinates: 4180000
Evaluated coordinates: 4200000
Evaluated coordinates: 4220000
Evaluated coordinates: 4240000
Evaluated coordinates: 4260000
Evaluated coordinates: 4280000
Evaluated coordinates: 4300000
Evaluated coordinates: 4320000
Evaluated coordinates: 4340000
Valid coordinates: 105000
Evaluated coordinates: 4360000
Evaluated coordinates: 4380000
Evaluated coordinates: 4400000
Evaluated coordinates: 4420000
Evaluated coordinates: 4440000
Evaluated coordinates: 4460000
Evaluated coordinates: 4480000
Evaluated coordinates: 4500000
Evaluated coordinates: 4520000
Evaluated coordinates: 4540000
Valid coordinates: 110000
Evaluated coordinates: 4560000
Evaluated coordinates: 4580000
Evaluated coordinates: 4600000
Evaluated coordinates: 4620000
Evaluated coordinates: 4640000
Evaluated coordinates: 4660000
Evaluated coordinates: 4680000
Evaluated coordinates: 4700000
Evaluated coordinates: 4720000
Evaluated coordinates: 4740000
Valid coordinates: 115000
Evaluated coordinates: 4760000
Evaluated coordinates: 4780000
Evaluated coordinates: 4800000
Evaluated coordinates: 4820000
Evaluated coordinates: 4840000
Evaluated coordinates: 4860000
Evaluated coordinates: 4880000
Evaluated coordinates: 4900000
Evaluated coordinates: 4920000
Evaluated coordinates: 4940000
Evaluated coordinates: 4960000
Valid coordinates: 120000
Evaluated coordinates: 4980000
Evaluated coordinates: 5000000
Evaluated coordinates: 5020000
Evaluated coordinates: 5040000
Evaluated coordinates: 5060000
Evaluated coordinates: 5080000
Evaluated coordinates: 5100000
Evaluated coordinates: 5120000
Evaluated coordinates: 5140000
Evaluated coordinates: 5160000
Valid coordinates: 125000
Evaluated coordinates: 5180000
Evaluated coordinates: 5200000
Evaluated coordinates: 5220000
Evaluated coordinates: 5240000
Evaluated coordinates: 5260000
Evaluated coordinates: 5280000
Evaluated coordinates: 5300000
Evaluated coordinates: 5320000
Evaluated coordinates: 5340000
Evaluated coordinates: 5360000
Valid coordinates: 130000
Evaluated coordinates: 5380000
Evaluated coordinates: 5400000
Evaluated coordinates: 5420000
Evaluated coordinates: 5440000
Evaluated coordinates: 5460000
Evaluated coordinates: 5480000
Evaluated coordinates: 5500000
Evaluated coordinates: 5520000
Evaluated coordinates: 5540000
Evaluated coordinates: 5560000
Valid coordinates: 135000
Evaluated coordinates: 5580000
Evaluated coordinates: 5600000
Evaluated coordinates: 5620000
Evaluated coordinates: 5640000
Evaluated coordinates: 5660000
Evaluated coordinates: 5680000
Evaluated coordinates: 5700000
Evaluated coordinates: 5720000
Evaluated coordinates: 5740000
Evaluated coordinates: 5760000
Evaluated coordinates: 5780000
Valid coordinates: 140000
Evaluated coordinates: 5800000
Evaluated coordinates: 5820000
Evaluated coordinates: 5840000
Evaluated coordinates: 5860000
Evaluated coordinates: 5880000
Evaluated coordinates: 5900000
Evaluated coordinates: 5920000
Evaluated coordinates: 5940000
Evaluated coordinates: 5960000
Evaluated coordinates: 5980000
Valid coordinates: 145000
Evaluated coordinates: 6000000
Evaluated coordinates: 6020000
Evaluated coordinates: 6040000
Evaluated coordinates: 6060000
Evaluated coordinates: 6080000
Evaluated coordinates: 6100000
Evaluated coordinates: 6120000
Evaluated coordinates: 6140000
Evaluated coordinates: 6160000
Evaluated coordinates: 6180000
Evaluated coordinates: 6200000
Valid coordinates: 150000
Evaluated coordinates: 6220000
Evaluated coordinates: 6240000
Evaluated coordinates: 6260000
Evaluated coordinates: 6280000
Evaluated coordinates: 6300000
Evaluated coordinates: 6320000
Evaluated coordinates: 6340000
Evaluated coordinates: 6360000
Evaluated coordinates: 6380000
Evaluated coordinates: 6400000
Valid coordinates: 155000
Evaluated coordinates: 6420000
Evaluated coordinates: 6440000
Evaluated coordinates: 6460000
Evaluated coordinates: 6480000
Evaluated coordinates: 6500000
Evaluated coordinates: 6520000
Evaluated coordinates: 6540000
Evaluated coordinates: 6560000
Evaluated coordinates: 6580000
Evaluated coordinates: 6600000
Valid coordinates: 160000
Evaluated coordinates: 6620000
Evaluated coordinates: 6640000
Evaluated coordinates: 6660000
Evaluated coordinates: 6680000
Evaluated coordinates: 6700000
Evaluated coordinates: 6720000
Evaluated coordinates: 6740000
Evaluated coordinates: 6760000
Evaluated coordinates: 6780000
Evaluated coordinates: 6800000
Valid coordinates: 165000
Evaluated coordinates: 6820000
Evaluated coordinates: 6840000
Evaluated coordinates: 6860000
Evaluated coordinates: 6880000
Evaluated coordinates: 6900000
Evaluated coordinates: 6920000
Evaluated coordinates: 6940000
Evaluated coordinates: 6960000
Evaluated coordinates: 6980000
Evaluated coordinates: 7000000
Evaluated coordinates: 7020000
Valid coordinates: 170000
Evaluated coordinates: 7040000
Evaluated coordinates: 7060000
Evaluated coordinates: 7080000
Evaluated coordinates: 7100000
Evaluated coordinates: 7120000
Evaluated coordinates: 7140000
Evaluated coordinates: 7160000
Evaluated coordinates: 7180000
Evaluated coordinates: 7200000
Evaluated coordinates: 7220000
Valid coordinates: 175000
Evaluated coordinates: 7240000
Evaluated coordinates: 7260000
Evaluated coordinates: 7280000
Evaluated coordinates: 7300000
Evaluated coordinates: 7320000
Evaluated coordinates: 7340000
Evaluated coordinates: 7360000
Evaluated coordinates: 7380000
Evaluated coordinates: 7400000
Evaluated coordinates: 7420000
Evaluated coordinates: 7440000
Valid coordinates: 180000
Evaluated coordinates: 7460000
Evaluated coordinates: 7480000
Evaluated coordinates: 7500000
Evaluated coordinates: 7520000
Evaluated coordinates: 7540000
Evaluated coordinates: 7560000
Evaluated coordinates: 7580000
Evaluated coordinates: 7600000
Evaluated coordinates: 7620000
Evaluated coordinates: 7640000
Valid coordinates: 185000
Evaluated coordinates: 7660000
Evaluated coordinates: 7680000
Evaluated coordinates: 7700000
Evaluated coordinates: 7720000
Evaluated coordinates: 7740000
Evaluated coordinates: 7760000
Evaluated coordinates: 7780000
Evaluated coordinates: 7800000
Evaluated coordinates: 7820000
Evaluated coordinates: 7840000
Valid coordinates: 190000
Evaluated coordinates: 7860000
Evaluated coordinates: 7880000
Evaluated coordinates: 7900000
Evaluated coordinates: 7920000
Evaluated coordinates: 7940000
Evaluated coordinates: 7960000
Evaluated coordinates: 7980000
Evaluated coordinates: 8000000
Evaluated coordinates: 8020000
Evaluated coordinates: 8040000
Valid coordinates: 195000
Evaluated coordinates: 8060000
Evaluated coordinates: 8080000
Evaluated coordinates: 8100000
Evaluated coordinates: 8120000
Evaluated coordinates: 8140000
Evaluated coordinates: 8160000
Evaluated coordinates: 8180000
Evaluated coordinates: 8200000
Evaluated coordinates: 8220000
Evaluated coordinates: 8240000
Valid coordinates: 200000
Evaluated coordinates: 8260000
Evaluated coordinates: 8280000
Evaluated coordinates: 8300000
Evaluated coordinates: 8320000
Evaluated coordinates: 8340000
Evaluated coordinates: 8360000
Evaluated coordinates: 8380000
Evaluated coordinates: 8400000
Evaluated coordinates: 8420000
Evaluated coordinates: 8440000
Valid coordinates: 205000
Evaluated coordinates: 8460000
Evaluated coordinates: 8480000
Evaluated coordinates: 8500000
Evaluated coordinates: 8520000
Evaluated coordinates: 8540000
Evaluated coordinates: 8560000
Evaluated coordinates: 8580000
Evaluated coordinates: 8600000
Evaluated coordinates: 8620000
Evaluated coordinates: 8640000
Evaluated coordinates: 8660000
Valid coordinates: 210000
Evaluated coordinates: 8680000
Evaluated coordinates: 8700000
Evaluated coordinates: 8720000
Evaluated coordinates: 8740000
Evaluated coordinates: 8760000
Evaluated coordinates: 8780000
Evaluated coordinates: 8800000
Evaluated coordinates: 8820000
Evaluated coordinates: 8840000
Evaluated coordinates: 8860000
Valid coordinates: 215000
Evaluated coordinates: 8880000
Evaluated coordinates: 8900000
Evaluated coordinates: 8920000
Evaluated coordinates: 8940000
Evaluated coordinates: 8960000
Evaluated coordinates: 8980000
Evaluated coordinates: 9000000
Evaluated coordinates: 9020000
Evaluated coordinates: 9040000
Evaluated coordinates: 9060000
Valid coordinates: 220000
Evaluated coordinates: 9080000
Evaluated coordinates: 9100000
Evaluated coordinates: 9120000
Evaluated coordinates: 9140000
Evaluated coordinates: 9160000
Evaluated coordinates: 9180000
Evaluated coordinates: 9200000
Evaluated coordinates: 9220000
Evaluated coordinates: 9240000
Evaluated coordinates: 9260000
Evaluated coordinates: 9280000
Valid coordinates: 225000
Evaluated coordinates: 9300000
Evaluated coordinates: 9320000
Evaluated coordinates: 9340000
Evaluated coordinates: 9360000
Evaluated coordinates: 9380000
Evaluated coordinates: 9400000
Evaluated coordinates: 9420000
Evaluated coordinates: 9440000
Evaluated coordinates: 9460000
Evaluated coordinates: 9480000
Valid coordinates: 230000
Evaluated coordinates: 9500000
Evaluated coordinates: 9520000
Evaluated coordinates: 9540000
Evaluated coordinates: 9560000
Evaluated coordinates: 9580000
Evaluated coordinates: 9600000
Evaluated coordinates: 9620000
Evaluated coordinates: 9640000
Evaluated coordinates: 9660000
Evaluated coordinates: 9680000
Valid coordinates: 235000
Evaluated coordinates: 9700000
Evaluated coordinates: 9720000
Evaluated coordinates: 9740000
Evaluated coordinates: 9760000
Evaluated coordinates: 9780000
Evaluated coordinates: 9800000
Evaluated coordinates: 9820000
Evaluated coordinates: 9840000
Evaluated coordinates: 9860000
Evaluated coordinates: 9880000
Evaluated coordinates: 9900000
Valid coordinates: 240000
Evaluated coordinates: 9920000
Evaluated coordinates: 9940000
Evaluated coordinates: 9960000
Evaluated coordinates: 9980000
Evaluated coordinates: 10000000
Evaluated coordinates: 10020000
Evaluated coordinates: 10040000
Evaluated coordinates: 10060000
Evaluated coordinates: 10080000
Evaluated coordinates: 10100000
Valid coordinates: 245000
Evaluated coordinates: 10120000
Evaluated coordinates: 10140000
Evaluated coordinates: 10160000
Evaluated coordinates: 10180000
Evaluated coordinates: 10200000
Evaluated coordinates: 10220000
Evaluated coordinates: 10240000
Evaluated coordinates: 10260000
Evaluated coordinates: 10280000
Evaluated coordinates: 10300000
Valid coordinates: 250000
Evaluated coordinates: 10320000
Evaluated coordinates: 10340000
Evaluated coordinates: 10360000
Evaluated coordinates: 10380000
Evaluated coordinates: 10400000
Evaluated coordinates: 10420000
Evaluated coordinates: 10440000
Evaluated coordinates: 10460000
Evaluated coordinates: 10480000
Evaluated coordinates: 10500000
Valid coordinates: 255000
Evaluated coordinates: 10520000
Evaluated coordinates: 10540000
Evaluated coordinates: 10560000
Evaluated coordinates: 10580000
Evaluated coordinates: 10600000
Evaluated coordinates: 10620000
Evaluated coordinates: 10640000
Evaluated coordinates: 10660000
Evaluated coordinates: 10680000
Evaluated coordinates: 10700000
Valid coordinates: 260000
Evaluated coordinates: 10720000
Evaluated coordinates: 10740000
Evaluated coordinates: 10760000
Evaluated coordinates: 10780000
Evaluated coordinates: 10800000
Evaluated coordinates: 10820000
Evaluated coordinates: 10840000
Evaluated coordinates: 10860000
Evaluated coordinates: 10880000
Evaluated coordinates: 10900000
Evaluated coordinates: 10920000
Valid coordinates: 265000
Evaluated coordinates: 10940000
Evaluated coordinates: 10960000
Evaluated coordinates: 10980000
Evaluated coordinates: 11000000
Evaluated coordinates: 11020000
Evaluated coordinates: 11040000
Evaluated coordinates: 11060000
Evaluated coordinates: 11080000
Evaluated coordinates: 11100000
Evaluated coordinates: 11120000
Valid coordinates: 270000
Evaluated coordinates: 11140000
Evaluated coordinates: 11160000
Evaluated coordinates: 11180000
Evaluated coordinates: 11200000
Evaluated coordinates: 11220000
Evaluated coordinates: 11240000
Evaluated coordinates: 11260000
Evaluated coordinates: 11280000
Evaluated coordinates: 11300000
Evaluated coordinates: 11320000
Valid coordinates: 275000
Evaluated coordinates: 11340000
Evaluated coordinates: 11360000
Evaluated coordinates: 11380000
Evaluated coordinates: 11400000
Evaluated coordinates: 11420000
Evaluated coordinates: 11440000
Evaluated coordinates: 11460000
Evaluated coordinates: 11480000
Evaluated coordinates: 11500000
Evaluated coordinates: 11520000
Evaluated coordinates: 11540000
Valid coordinates: 280000
Evaluated coordinates: 11560000
Evaluated coordinates: 11580000
Evaluated coordinates: 11600000
Evaluated coordinates: 11620000
Evaluated coordinates: 11640000
Evaluated coordinates: 11660000
Evaluated coordinates: 11680000
Evaluated coordinates: 11700000
Evaluated coordinates: 11720000
Evaluated coordinates: 11740000
Valid coordinates: 285000
Evaluated coordinates: 11760000
Evaluated coordinates: 11780000
Evaluated coordinates: 11800000
Evaluated coordinates: 11820000
Evaluated coordinates: 11840000
Evaluated coordinates: 11860000
Evaluated coordinates: 11880000
Evaluated coordinates: 11900000
Evaluated coordinates: 11920000
Evaluated coordinates: 11940000
Valid coordinates: 290000
Evaluated coordinates: 11960000
Evaluated coordinates: 11980000
Evaluated coordinates: 12000000
Evaluated coordinates: 12020000
Evaluated coordinates: 12040000
Evaluated coordinates: 12060000
Evaluated coordinates: 12080000
Evaluated coordinates: 12100000
Evaluated coordinates: 12120000
Evaluated coordinates: 12140000
Evaluated coordinates: 12160000
Valid coordinates: 295000
Evaluated coordinates: 12180000
Evaluated coordinates: 12200000
Evaluated coordinates: 12220000
Evaluated coordinates: 12240000
Evaluated coordinates: 12260000
Evaluated coordinates: 12280000
Evaluated coordinates: 12300000
Evaluated coordinates: 12320000
Evaluated coordinates: 12340000
Evaluated coordinates: 12360000
Valid coordinates: 300000
Evaluated coordinates: 12380000
Evaluated coordinates: 12400000
Evaluated coordinates: 12420000
Evaluated coordinates: 12440000
Evaluated coordinates: 12460000
Evaluated coordinates: 12480000
Evaluated coordinates: 12500000
Evaluated coordinates: 12520000
Evaluated coordinates: 12540000
Evaluated coordinates: 12560000
Valid coordinates: 305000
Evaluated coordinates: 12580000
Evaluated coordinates: 12600000
Evaluated coordinates: 12620000
Evaluated coordinates: 12640000
Evaluated coordinates: 12660000
Evaluated coordinates: 12680000
Evaluated coordinates: 12700000
Evaluated coordinates: 12720000
Evaluated coordinates: 12740000
Evaluated coordinates: 12760000
Valid coordinates: 310000
Evaluated coordinates: 12780000
Evaluated coordinates: 12800000
Evaluated coordinates: 12820000
Evaluated coordinates: 12840000
Evaluated coordinates: 12860000
Evaluated coordinates: 12880000
Evaluated coordinates: 12900000
Evaluated coordinates: 12920000
Evaluated coordinates: 12940000
Evaluated coordinates: 12960000
Valid coordinates: 315000
Evaluated coordinates: 12980000
Evaluated coordinates: 13000000
Evaluated coordinates: 13020000
Evaluated coordinates: 13040000
Evaluated coordinates: 13060000
Evaluated coordinates: 13080000
Evaluated coordinates: 13100000
Evaluated coordinates: 13120000
Evaluated coordinates: 13140000
Evaluated coordinates: 13160000
Evaluated coordinates: 13180000
Valid coordinates: 320000
Evaluated coordinates: 13200000
Evaluated coordinates: 13220000
Evaluated coordinates: 13240000
Evaluated coordinates: 13260000
Evaluated coordinates: 13280000
Evaluated coordinates: 13300000
Evaluated coordinates: 13320000
Evaluated coordinates: 13340000
Evaluated coordinates: 13360000
Evaluated coordinates: 13380000
Valid coordinates: 325000
Evaluated coordinates: 13400000
Evaluated coordinates: 13420000
Evaluated coordinates: 13440000
Evaluated coordinates: 13460000
Evaluated coordinates: 13480000
Evaluated coordinates: 13500000
Evaluated coordinates: 13520000
Evaluated coordinates: 13540000
Evaluated coordinates: 13560000
Evaluated coordinates: 13580000
Valid coordinates: 330000
Evaluated coordinates: 13600000
Evaluated coordinates: 13620000
Evaluated coordinates: 13640000
Evaluated coordinates: 13660000
Evaluated coordinates: 13680000
Evaluated coordinates: 13700000
Evaluated coordinates: 13720000
Evaluated coordinates: 13740000
Evaluated coordinates: 13760000
Evaluated coordinates: 13780000
Valid coordinates: 335000
Evaluated coordinates: 13800000
Evaluated coordinates: 13820000
Evaluated coordinates: 13840000
Evaluated coordinates: 13860000
Evaluated coordinates: 13880000
Evaluated coordinates: 13900000
Evaluated coordinates: 13920000
Evaluated coordinates: 13940000
Evaluated coordinates: 13960000
Evaluated coordinates: 13980000
Evaluated coordinates: 14000000
Valid coordinates: 340000
Evaluated coordinates: 14020000
Evaluated coordinates: 14040000
Evaluated coordinates: 14060000
Evaluated coordinates: 14080000
Evaluated coordinates: 14100000
Evaluated coordinates: 14120000
Evaluated coordinates: 14140000
Evaluated coordinates: 14160000
Evaluated coordinates: 14180000
Evaluated coordinates: 14200000
Valid coordinates: 345000
Evaluated coordinates: 14220000
Evaluated coordinates: 14240000
Evaluated coordinates: 14260000
Evaluated coordinates: 14280000
Evaluated coordinates: 14300000
Evaluated coordinates: 14320000
Evaluated coordinates: 14340000
Evaluated coordinates: 14360000
Evaluated coordinates: 14380000
Evaluated coordinates: 14400000
Valid coordinates: 350000
Evaluated coordinates: 14420000
Evaluated coordinates: 14440000
Evaluated coordinates: 14460000
Evaluated coordinates: 14480000
Evaluated coordinates: 14500000
Evaluated coordinates: 14520000
Evaluated coordinates: 14540000
Evaluated coordinates: 14560000
Evaluated coordinates: 14580000
Evaluated coordinates: 14600000
Evaluated coordinates: 14620000
Valid coordinates: 355000
Evaluated coordinates: 14640000
Evaluated coordinates: 14660000
Evaluated coordinates: 14680000
Evaluated coordinates: 14700000
Evaluated coordinates: 14720000
Evaluated coordinates: 14740000
Evaluated coordinates: 14760000
Evaluated coordinates: 14780000
Evaluated coordinates: 14800000
Evaluated coordinates: 14820000
Valid coordinates: 360000
Evaluated coordinates: 14840000
Evaluated coordinates: 14860000
Evaluated coordinates: 14880000
Evaluated coordinates: 14900000
Evaluated coordinates: 14920000
Evaluated coordinates: 14940000
Evaluated coordinates: 14960000
Evaluated coordinates: 14980000
Evaluated coordinates: 15000000
Evaluated coordinates: 15020000
Valid coordinates: 365000
Evaluated coordinates: 15040000
Evaluated coordinates: 15060000
Evaluated coordinates: 15080000
Evaluated coordinates: 15100000
Evaluated coordinates: 15120000
Evaluated coordinates: 15140000
Evaluated coordinates: 15160000
Evaluated coordinates: 15180000
Evaluated coordinates: 15200000
Evaluated coordinates: 15220000
Valid coordinates: 370000
Evaluated coordinates: 15240000
Evaluated coordinates: 15260000
Evaluated coordinates: 15280000
Evaluated coordinates: 15300000
Evaluated coordinates: 15320000
Evaluated coordinates: 15340000
Evaluated coordinates: 15360000
Evaluated coordinates: 15380000
Evaluated coordinates: 15400000
Evaluated coordinates: 15420000
Evaluated coordinates: 15440000
Valid coordinates: 375000
Evaluated coordinates: 15460000
Evaluated coordinates: 15480000
Evaluated coordinates: 15500000
Evaluated coordinates: 15520000
Evaluated coordinates: 15540000
Evaluated coordinates: 15560000
Evaluated coordinates: 15580000
Evaluated coordinates: 15600000
Evaluated coordinates: 15620000
Evaluated coordinates: 15640000
Valid coordinates: 380000
Evaluated coordinates: 15660000
Evaluated coordinates: 15680000
Evaluated coordinates: 15700000
Evaluated coordinates: 15720000
Evaluated coordinates: 15740000
Evaluated coordinates: 15760000
Evaluated coordinates: 15780000
Evaluated coordinates: 15800000
Evaluated coordinates: 15820000
Evaluated coordinates: 15840000
Valid coordinates: 385000
Evaluated coordinates: 15860000
Evaluated coordinates: 15880000
Evaluated coordinates: 15900000
Evaluated coordinates: 15920000
Evaluated coordinates: 15940000
Evaluated coordinates: 15960000
Evaluated coordinates: 15980000
Evaluated coordinates: 16000000
Evaluated coordinates: 16020000
Evaluated coordinates: 16040000
Evaluated coordinates: 16060000
Valid coordinates: 390000
Evaluated coordinates: 16080000
Evaluated coordinates: 16100000
Evaluated coordinates: 16120000
Evaluated coordinates: 16140000
Evaluated coordinates: 16160000
Evaluated coordinates: 16180000
Evaluated coordinates: 16200000
Evaluated coordinates: 16220000
Evaluated coordinates: 16240000
Evaluated coordinates: 16260000
Valid coordinates: 395000
Evaluated coordinates: 16280000
Evaluated coordinates: 16300000
Evaluated coordinates: 16320000
Evaluated coordinates: 16340000
Evaluated coordinates: 16360000
Evaluated coordinates: 16380000
Evaluated coordinates: 16400000
Evaluated coordinates: 16420000
Evaluated coordinates: 16440000
Evaluated coordinates: 16460000
Valid coordinates: 400000
Valid/Tested configurations: 400000/16478611
Starting DOPT-anova
Step 0
 ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2
Fixed Factors: {}
Full data does not fit on budget
Computing D-Optimal Design
Updating Constraints
Updated Constraint: True and (((T2_I ==1 )or (T2_I %T1_I ==0 ))) and (((T2_J ==1 )or (T2_J %T1_J ==0 ))) and (((T2_K ==1 )or (T2_K %T1_K ==0 ))) and ((RT_I *RT_J +RT_I *RT_K +RT_J *RT_K <=150 )) and (((U_I ==1 )or (U_J ==1 )or (U_K ==1 )))
Computing D-Optimal Design with 36 experiments
Design Formula:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2
Starting "optMonteCarlo" run
       var low high center nLevels round factor   mix
1     T1_I   0    6      0       7     0  FALSE FALSE
2     T1_J   0    6      0       7     0  FALSE FALSE
3     T1_K   0    6      0       7     0  FALSE FALSE
4     T2_I   0    6      0       7     0  FALSE FALSE
5     T2_J   0    6      0       7     0  FALSE FALSE
6     T2_K   0    6      0       7     0  FALSE FALSE
7  ACOPY_x   0    1      0       2     0  FALSE FALSE
8  ACOPY_y   0    1      0       2     0  FALSE FALSE
9     U1_I   0   29      0      30     0  FALSE FALSE
10     U_I   0   29      0      30     0  FALSE FALSE
11     U_J   0   29      0      30     0  FALSE FALSE
12     U_K   0   29      0      30     0  FALSE FALSE
13    RT_I   0    2      0       3     0  FALSE FALSE
14    RT_J   0    2      0       3     0  FALSE FALSE
15    RT_K   0    2      0       3     0  FALSE FALSE
16     SCR   0    1      0       2     0  FALSE FALSE
17    VEC1   0    1      0       2     0  FALSE FALSE
18    VEC2   0    1      0       2     0  FALSE FALSE

   T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
1     4    2    1    2    6    3       0       0   23   0  20  27    1    0
2     5    2    5    3    3    5       0       0   21   9   0  29    0    0
3     0    6    6    2    4    5       0       1    5   0  28  19    1    0
4     0    0    1    2    0    1       1       1   29  17  20   0    0    1
5     6    1    1    0    2    5       1       0   15   0   9  14    0    1
6     3    5    0    1    0    1       0       0   23   2   0  16    2    0
7     5    3    5    4    4    0       0       1   19   0  16  22    0    2
8     5    3    4    0    4    5       1       1   13  29   0  23    0    0
9     1    6    2    4    5    1       1       1   16  28   0  29    1    0
10    6    0    4    6    1    6       1       1    5   0   8  28    1    1
11    0    2    1    5    2    6       0       0   23   1  10   0    0    0
12    3    0    3    4    3    4       0       1    3  28   0  25    2    0
13    5    5    0    0    4    2       0       0    8  25   0   5    0    1
14    5    3    1    6    2    5       1       0    5   5  27   0    2    0
15    0    0    3    2    2    5       0       1   2WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = iii
8  11  28   0    2    0
16    1    3    6    4    0    5       1       0   12  18   0  29    0    0
17    3    1    5    4    0    0       0       0    3  25  14   0    0    2
18    1    0    4    5    3    5       0       0   27   8   0   1    0    0
19    1    4    5    2    3    0       1       0    5  20  19   0    0    0
20    6    1    4    4    0    3       0       1    2   1   7   0    2    0
21    2    0    2    1    3    4       1       0    2  29   0  19    0    0
22    0    6    6    0    6    6       0       0   13   4   1   0    1    1
23    1    4    2    6    0    1       1       1   28  28   0  15    0    1
24    4    1    5    2    3    0       1       1    7  22  20   0    0    0
25    1    5    0    2    3    1       1       1    1   9   0  28    0    1
26    3    5    3    4    3    5       0       0   27  26   4   0    0    2
27    3    3    0    4    4    1       0       1    1   3   6   0    0    0
28    3    3    5    0    1    0       1       1   10   0   2  28    2    0
29    0    1    3    3    5    1       0       0    1   9   0  25    0    1
30    5    2    2    3    0    1       0       0   22   0  28  19    0    0
31    0    4    1    4    6    2       1       1   27   0   7  16    1    1
32    3    4    0    2    3    6       1       0    1   0  14  24    0    0
33    4    0    2    2    5    3       0       0    4   0  25  18    0    2
34    6    6    3    5    6    1       1       0   25   1  21   0    1    0
35    5    0    0    4    6    3       0       1   24  23  16   0    1    0
36    6    0    5    5    5    4       1       0   18  25  11   0    1    1
   RT_K SCR VEC1 VEC2
1     1   0    0    0
2     0   0    1    0
3     1   1    1    0
4     1   0    0    0
5     1   0    1    0
6     0   1    1    0
7     0   1    0    1
8     2   1    0    1
9     1   0    1    1
10    0   1    1    1
11    2   1    0    1
12    0   1    0    1
13    1   1    1    1
14    0   0    0    1
15    0   1    1    0
16    2   1    0    0
17    0   0    1    1
18    1   0    0    1
19    2   1    1    0
20    0   1    0    0
21    0   1    1    1
22    0   1    0    1
23    1   0    1    0
24    0   0    0    1
25    0   1    0    0
26    0   1    0    0
27    2   0    1    1
28    0   1    1    1
29    1   1    0    0
30    0   1    1    1
31    0   0    1    1
32    0   0    0    0
33    0   0    1    0
34    1   1    0    0
35    0   1    1    0
36    0   1    1    0

D-Efficiency Approximation: [1] 0.627

Measuring design of size 18
Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Design Line: [4, 2, 1, 2, 6, 3, 0, 0, 23, 0, 20, 27, 1, 0, 1, 0, 0, 0]
Fixed Factors: {}
Testing candidate 1: [4, 2, 1, 2, 6, 3, 0, 0, 23, 0, 20, 27, 1, 0, 1, 0, 0, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	23
        Max loop nest depth: 	5
        Additions: 		3451
        Multiplications: 	1062
        Divisions: 		0
        Logical: 		0
        Reads: 			5529
        Writes: 		604
        Comparisons:		23
        Gotos: 			0
        
digraph CFG {
	153 [label="153  int i;...",shape=box];
	153 -> ForLoop764;
	ForLoop833 [label="ForLoop833  for (i=ny-((ny-(0))%24); i<=ny-1; i=i+1) ...",shape=box];
	ForLoop833 -> 832;
	ForLoop833 -> _JOIN_833;
	145446 [label="145446  int k;...",shape=box];
	145446 -> ForLoop147536;
	555 [label="555  y[i]=0.0;...",shape=box];
	_JOIN_106969 [label="_JOIN_106969None...",shape=box];
	_JOIN_106969 -> _JOIN_8932;
	_JOIN_4024 [label="_JOIN_4024None...",shape=box];
	67725 [label="67725  tmp[it]=tmp[it]+A[it*ny+j]*x[j];...",shape=box];
	ForLoop106660 [label="ForLoop106660  for (k=kt; k<=min(ny-1,kk+15)-27; k=k+28) {...",shape=box];
	ForLoop106660 -> 99294;
	ForLoop106660 -> _JOIN_106660;
	_JOIN_143759 [label="_JOIN_143759None...",shape=box];
	_JOIN_143759 -> ForLoop143885;
	_JOIN_8932 [label="_JOIN_8932None...",shape=box];
	_JOIN_8932 -> _JOIN_8933;
	_JOIN_8933 [label="_JOIN_8933None...",shape=box];
	_JOIN_8933 -> _JOIN_8935;
	_JOIN_8935 [label="_JOIN_8935None...",shape=box];
	_JOIN_8935 -> ForLoop9105;
	73315 [label="73315  tmp[it]=tmp[it]+A[it*ny+j]*x[j];...",shape=box];
	ForLoop9031 [label="ForLoop9031  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) ...",shape=box];
	ForLoop9031 -> ForLoop9030;
	ForLoop9031 -> _JOIN_9031;
	12967 [label="12967  y[kt]=y[kt]+A[i*ny+kt]*tmp[i];...",shape=box];
	ForLoop147536 [label="ForLoop147536  for (k=kt; k<=min(ny-1,kk+15)-27; k=k+28) {...",shape=box];
	ForLoop147536 -> 146778;
	ForLoop147536 -> _JOIN_147536;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 153;
	147661 [label="147661  y[k]=y[k]+A[i*ny+k]*tmp[i];...",shape=box];
	147661 -> _JOIN_147662;
	832 [label="832  y[i]=0.0;...",shape=box];
	832 -> _JOIN_833;
	_JOIN_73190 [label="_JOIN_73190None...",shape=box];
	_JOIN_73190 -> ForLoop73520;
	_JOIN_833 [label="_JOIN_833None...",shape=box];
	_JOIN_833 -> 7621;
	_JOIN_147536 [label="_JOIN_147536None...",shape=box];
	_JOIN_147536 -> ForLoop147662;
	59023 [label="59023  int j;...",shape=box];
	59023 -> ForLoop73190;
	99294 [label="99294  y[k]=y[k]+A[it*ny+k]*tmp[it];...",shape=box];
	ForLoop143885 [label="ForLoop143885  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jj)+1)%21)+1; j<=min(ny-1,jj+31); j=j+1) ...",shape=box];
	ForLoop143885 -> 143884;
	ForLoop143885 -> _JOIN_143885;
	_JOIN_9030 [label="_JOIN_9030None...",shape=box];
	_JOIN_9030 -> _JOIN_9031;
	_JOIN_9031 [label="_JOIN_9031None...",shape=box];
	_JOIN_9031 -> ForLoop9103;
	ForLoop9103 [label="ForLoop9103  for (kkk=0; kkk<=ny-1; kkk=kkk+256) ...",shape=box];
	ForLoop9103 -> ForLoop9102;
	ForLoop9103 -> _JOIN_9103;
	87678 [label="87678  int k;...",shape=box];
	87678 -> ForLoop106660;
	_JOIN_143885 [label="_JOIN_143885None...",shape=box];
	_JOIN_143885 -> _JOIN_9030;
	ForLoop4024 [label="ForLoop4024  for (ii=0; ii<=nx-1; ii=ii+128) {...",shape=box];
	ForLoop4024 -> ForLoop8935;
	ForLoop4024 -> _JOIN_4024;
	_JOIN_73520 [label="_JOIN_73520None...",shape=box];
	_JOIN_73520 -> _JOIN_8860;
	143884 [label="143884  tmp[i]=tmp[i]+A[i*ny+j]*x[j];...",shape=box];
	143884 -> _JOIN_143885;
	ForLoop8932 [label="ForLoop8932  for (kk=kkk; kk<=min(ny-1,kkk+240); kk=kk+16) {...",shape=box];
	ForLoop8932 -> ForLoop9841;
	ForLoop8932 -> _JOIN_8932;
	ForLoop8933 [label="ForLoop8933  for (kkk=0; kkk<=ny-1; kkk=kkk+256) ...",shape=box];
	ForLoop8933 -> ForLoop8932;
	ForLoop8933 -> _JOIN_8933;
	ForLoop8935 [label="ForLoop8935  for (it=ii; it<=min(nx-1,ii+127)-7; it=it+8) {...",shape=box];
	ForLoop8935 -> 9116;
	ForLoop8935 -> _JOIN_8935;
	106785 [label="106785  y[k]=y[k]+A[it*ny+k]*tmp[it];...",shape=box];
	_JOIN_9841 [label="_JOIN_9841None...",shape=box];
	_JOIN_9841 -> 87678;
	_JOIN_147662 [label="_JOIN_147662None...",shape=box];
	_JOIN_147662 -> _JOIN_9102;
	ForLoop147662 [label="ForLoop147662  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kt)+1)%28)+1; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop147662 -> 147661;
	ForLoop147662 -> _JOIN_147662;
	_JOIN_764 [label="_JOIN_764None...",shape=box];
	_JOIN_764 -> ForLoop833;
	9116 [label="9116  tmp[it]=0;...",shape=box];
	9116 -> ForLoop8861;
	ForLoop12903 [label="ForLoop12903  for (kt=kk; kt<=min(ny-1,kk+15)-7; kt=kt+8) {...",shape=box];
	ForLoop12903 -> 12967;
	ForLoop12903 -> _JOIN_12903;
	ForLoop9105 [label="ForLoop9105  for (i=it; i<=min(nx-1,ii+127); i=i+1) {...",shape=box];
	ForLoop9105 -> 8959;
	ForLoop9105 -> _JOIN_9105;
	7621 [label="7621  double x_copy;...",shape=box];
	10161 [label="10161  y[kt]=y[kt]+A[it*ny+kt]*tmp[it];...",shape=box];
	ForLoop73520 [label="ForLoop73520  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jj)+1)%21)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop73520 -> 73315;
	ForLoop73520 -> _JOIN_73520;
	146778 [label="146778  y[k]=y[k]+A[i*ny+k]*tmp[i];...",shape=box];
	ForLoop9841 [label="ForLoop9841  for (kt=kk; kt<=min(ny-1,kk+15)-7; kt=kt+8) {...",shape=box];
	ForLoop9841 -> 10161;
	ForLoop9841 -> _JOIN_9841;
	_JOIN_8860 [label="_JOexpected=9369846271501.798828
actual=9369846271501.798828
IN_8860None...",shape=box];
	_JOIN_8860 -> _JOIN_8861;
	_JOIN_8861 [label="_JOIN_8861None...",shape=box];
	_JOIN_8861 -> ForLoop8933;
	ForLoop143759 [label="ForLoop143759  for (j=jj; j<=min(ny-1,jj+31)-20; j=j+21) {...",shape=box];
	ForLoop143759 -> 143257;
	ForLoop143759 -> _JOIN_143759;
	142340 [label="142340  int j;...",shape=box];
	142340 -> ForLoop143759;
	ForLoop73190 [label="ForLoop73190  for (j=jj; j<=min(ny-1,jj+31)-20; j=j+21) {...",shape=box];
	ForLoop73190 -> 67725;
	ForLoop73190 -> _JOIN_73190;
	_JOIN_12903 [label="_JOIN_12903None...",shape=box];
	_JOIN_12903 -> 145446;
	ForLoop9030 [label="ForLoop9030  for (jj=jjj; jj<=min(ny-1,jjj+2016); jj=jj+32) {...",shape=box];
	ForLoop9030 -> 142340;
	ForLoop9030 -> _JOIN_9030;
	_JOIN_106660 [label="_JOIN_106660None...",shape=box];
	_JOIN_106660 -> ForLoop106969;
	ForLoop764 [label="ForLoop764  for (i=0; i<=ny-24; i=i+24) {...",shape=box];
	ForLoop764 -> 555;
	ForLoop764 -> _JOIN_764;
	8959 [label="8959  tmp[i]=0;...",shape=box];
	8959 -> ForLoop9031;
	143257 [label="143257  tmp[i]=tmp[i]+A[i*ny+j]*x[j];...",shape=box];
	_JOIN_9103 [label="_JOIN_9103None...",shape=box];
	_JOIN_9103 -> _JOIN_9105;
	_JOIN_9102 [label="_JOIN_9102None...",shape=box];
	_JOIN_9102 -> _JOIN_9103;
	_JOIN_9105 [label="_JOIN_9105None...",shape=box];
	_JOIN_9105 -> _JOIN_4024;
	ForLoop9102 [label="ForLoop9102  for (kk=kkk; kk<=min(ny-1,kkk+240); kk=kk+16) {...",shape=box];
	ForLoop9102 -> ForLoop12903;
	ForLoop9102 -> _JOIN_9102;
	ForLoop8860 [label="ForLoop8860  for (jj=jjj; jj<=min(ny-1,jjj+2016); jj=jj+32) {...",shape=box];
	ForLoop8860 -> 59023;
	ForLoop8860 -> _JOIN_8860;
	ForLoop8861 [label="ForLoop8861  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) ...",shape=box];
	ForLoop8861 -> ForLoop8860;
	ForLoop8861 -> _JOIN_8861;
	ForLoop106969 [label="ForLoop106969  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kt)+1)%28)+1; k<=min(ny-1,kk+15); k=k+1) {...",shape=box];
	ForLoop106969 -> 106785;
	ForLoop106969 -> _JOIN_106969;

}

 compiling timer:
	gcc -O3 -fopenmp -DDYNAMIC -O0 -c -o timer_cpu.o timer_cpu.c
 building the original code:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -DORIGINAL -o __orio_perftest_original.exe __orio_perftest1.c timer_cpu.o -lm
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest1.exe __orio_perftest1.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest1.exe  
{'[4, 2, 1, 2, 6, 3, 0, 0, 23, 0, 20, 27, 1, 0, 1, 0, 0, 0]' : 0.10066}
{'[4, 2, 1, 2, 6, 3, 0, 0, 23, 0, 20, 27, 1, 0, 1, 0, 0, 0]' : 0.100689}
{'[4, 2, 1, 2, 6, 3, 0, 0, 23, 0, 20, 27, 1, 0, 1, 0, 0, 0]' : 0.100373}
{'[4, 2, 1, 2, 6, 3, 0, 0, 23, 0, 20, 27, 1, 0, 1, 0, 0, 0]' : 0.101332}
{'[4, 2, 1, 2, 6, 3, 0, 0, 23, 0, 20, 27, 1, 0, 1, 0, 0, 0]' : 0.100736}
{'[4, 2, 1, 2, 6, 3, 0, 0, 23, 0, 20, 27, 1, 0, 1, 0, 0, 0]' : 0.100687}
{'[4, 2, 1, 2, 6, 3, 0, 0, 23, 0, 20, 27, 1, 0, 1, 0, 0, 0]' : 0.100384}
{'[4, 2, 1, 2, 6, 3, 0, 0, 23, 0, 20, 27, 1, 0, 1, 0, 0, 0]' : 0.100462}
{'[4, 2, 1, 2, 6, 3, 0, 0, 23, 0, 20, 27, 1, 0, 1, 0, 0, 0]' : 0.100541}
{'[4, 2, 1, 2, 6, 3, 0, 0, 23, 0, 20, 27, 1, 0, 1, 0, 0, 0]' : 0.100626}
{'[4, 2, 1, 2, 6, 3, 0, 0, 23, 0, 20, 27, 1, 0, 1, 0, 0, 0]' : 0.100331}
{'[4, 2, 1, 2, 6, 3, 0, 0, 23, 0, 20, 27, 1, 0, 1, 0, 0, 0]' : 0.100269}
{'[4, 2, 1, 2, 6, 3, 0, 0, 23, 0, 20, 27, 1, 0, 1, 0, 0, 0]' : 0.100627}
{'[4, 2, 1, 2, 6, 3, 0, 0, 23, 0, 20, 27, 1, 0, 1, 0, 0, 0]' : 0.105327}
{'[4, 2, 1, 2, 6, 3, 0, 0, 23, 0, 20, 27, 1, 0, 1, 0, 0, 0]' : 0.100359}
{'[4, 2, 1, 2, 6, 3, 0, 0, 23, 0, 20, 27, 1, 0, 1, 0, 0, 0]' : 0.100359}
{'[4, 2, 1, 2, 6, 3, 0, 0, 23, 0, 20, 27, 1, 0, 1, 0, 0, 0]' : 0.100583}
{'[4, 2, 1, 2, 6, 3, 0, 0, 23, 0, 20, 27, 1, 0, 1, 0, 0, 0]' : 0.100658}
{'[4, 2, 1, 2, 6, 3, 0, 0, 23, 0, 20, 27, 1, 0, 1, 0, 0, 0]' : 0.100381}
{'[4, 2, 1, 2, 6, 3, 0, 0, 23, 0, 20, 27, 1, 0, 1, 0, 0, 0]' : 0.100263}
{'[4, 2, 1, 2, 6, 3, 0, 0, 23, 0, 20, 27, 1, 0, 1, 0, 0, 0]' : 0.100587}
{'[4, 2, 1, 2, 6, 3, 0, 0, 23, 0, 20, 27, 1, 0, 1, 0, 0, 0]' : 0.100619}
{'[4, 2, 1, 2, 6, 3, 0, 0, 23, 0, 20, 27, 1, 0, 1, 0, 0, 0]' : 0.101455}
{'[4, 2, 1, 2, 6, 3, 0, 0, 23, 0, 20, 27, 1, 0, 1, 0, 0, 0]' : 0.10024}
{'[4, 2, 1, 2, 6, 3, 0, 0, 23, 0, 20, 27, 1, 0, 1, 0, 0, 0]' : 0.100583}
{'[4, 2, 1, 2, 6, 3, 0, 0, 23, 0, 20, 27, 1, 0, 1, 0, 0, 0]' : 0.100668}
{'[4, 2, 1, 2, 6, 3, 0, 0, 23, 0, 20, 27, 1, 0, 1, 0, 0, 0]' : 0.100361}
{'[4, 2, 1, 2, 6, 3, 0, 0, 23, 0, 20, 27, 1, 0, 1, 0, 0, 0]' : 0.100302}
{'[4, 2, 1, 2, 6, 3, 0, 0, 23, 0, 20, 27, 1, 0, 1, 0, 0, 0]' : 0.105002}
{'[4, 2, 1, 2, 6, 3, 0, 0, 23, 0, 20, 27, 1, 0, 1, 0, 0, 0]' : 0.10067}

out:
 ["{'[4, 2, 1, 2, 6, 3, 0, 0, 23, 0, 20, 27, 1, 0, 1, 0, 0, 0]' : 0.10066}", "{'[4, 2, 1, 2, 6, 3, 0, 0, 23, 0, 20, 27, 1, 0, 1, 0, 0, 0]' : 0.100689}", "{'[4, 2, 1, 2, 6, 3, 0, 0, 23, 0, 20, 27, 1, 0, 1, 0, 0, 0]' : 0.100373}", "{'[4, 2, 1, 2, 6, 3, 0, 0, 23, 0, 20, 27, 1, 0, 1, 0, 0, 0]' : 0.101332}", "{'[4, 2, 1, 2, 6, 3, 0, 0, 23, 0, 20, 27, 1, 0, 1, 0, 0, 0]' : 0.100736}", "{'[4, 2, 1, 2, 6, 3, 0, 0, 23, 0, 20, 27, 1, 0, 1, 0, 0, 0]' : 0.100687}", "{'[4, 2, 1, 2, 6, 3, 0, 0, 23, 0, 20, 27, 1, 0, 1, 0, 0, 0]' : 0.100384}", "{'[4, 2, 1, 2, 6, 3, 0, 0, 23, 0, 20, 27, 1, 0, 1, 0, 0, 0]' : 0.100462}", "{'[4, 2, 1, 2, 6, 3, 0, 0, 23, 0, 20, 27, 1, 0, 1, 0, 0, 0]' : 0.100541}", "{'[4, 2, 1, 2, 6, 3, 0, 0, 23, 0, 20, 27, 1, 0, 1, 0, 0, 0]' : 0.100626}", "{'[4, 2, 1, 2, 6, 3, 0, 0, 23, 0, 20, 27, 1, 0, 1, 0, 0, 0]' : 0.100331}", "{'[4, 2, 1, 2, 6, 3, 0, 0, 23, 0, 20, 27, 1, 0, 1, 0, 0, 0]' : 0.100269}", "{'[4, 2, 1, 2, 6, 3, 0, 0, 23, 0, 20, 27, 1, 0, 1, 0, 0, 0]' : 0.100627}", "{'[4, 2, 1, 2, 6, 3, 0, 0, 23, 0, 20, 27, 1, 0, 1, 0, 0, 0]' : 0.105327}", "{'[4, 2, 1, 2, 6, 3, 0, 0, 23, 0, 20, 27, 1, 0, 1, 0, 0, 0]' : 0.100359}", "{'[4, 2, 1, 2, 6, 3, 0, 0, 23, 0, 20, 27, 1, 0, 1, 0, 0, 0]' : 0.100359}", "{'[4, 2, 1, 2, 6, 3, 0, 0, 23, 0, 20, 27, 1, 0, 1, 0, 0, 0]' : 0.100583}", "{'[4, 2, 1, 2, 6, 3, 0, 0, 23, 0, 20, 27, 1, 0, 1, 0, 0, 0]' : 0.100658}", "{'[4, 2, 1, 2, 6, 3, 0, 0, 23, 0, 20, 27, 1, 0, 1, 0, 0, 0]' : 0.100381}", "{'[4, 2, 1, 2, 6, 3, 0, 0, 23, 0, 20, 27, 1, 0, 1, 0, 0, 0]' : 0.100263}", "{'[4, 2, 1, 2, 6, 3, 0, 0, 23, 0, 20, 27, 1, 0, 1, 0, 0, 0]' : 0.100587}", "{'[4, 2, 1, 2, 6, 3, 0, 0, 23, 0, 20, 27, 1, 0, 1, 0, 0, 0]' : 0.100619}", "{'[4, 2, 1, 2, 6, 3, 0, 0, 23, 0, 20, 27, 1, 0, 1, 0, 0, 0]' : 0.101455}", "{'[4, 2, 1, 2, 6, 3, 0, 0, 23, 0, 20, 27, 1, 0, 1, 0, 0, 0]' : 0.10024}", "{'[4, 2, 1, 2, 6, 3, 0, 0, 23, 0, 20, 27, 1, 0, 1, 0, 0, 0]' : 0.100583}", "{'[4, 2, 1, 2, 6, 3, 0, 0, 23, 0, 20, 27, 1, 0, 1, 0, 0, 0]' : 0.100668}", "{'[4, 2, 1, 2, 6, 3, 0, 0, 23, 0, 20, 27, 1, 0, 1, 0, 0, 0]' : 0.100361}", "{'[4, 2, 1, 2, 6, 3, 0, 0, 23, 0, 20, 27, 1, 0, 1, 0, 0, 0]' : 0.100302}", "{'[4, 2, 1, 2, 6, 3, 0, 0, 23, 0, 20, 27, 1, 0, 1, 0, 0, 0]' : 0.105002}", "{'[4, 2, 1, 2, 6, 3, 0, 0, 23, 0, 20, 27, 1, 0, 1, 0, 0, 0]' : 0.10067}"]
returning from 'run': {'[4, 2, 1, 2, 6, 3, 0, 0, 23, 0, 20, 27, 1, 0, 1, 0, 0, 0]': ([0.10066, 0.100689, 0.100373, 0.101332, 0.100736, 0.100687, 0.100384, 0.100462, 0.100541, 0.100626, 0.100331, 0.100269, 0.100627, 0.105327, 0.100359, 0.100359, 0.100583, 0.100658, 0.100381, 0.100263, 0.100587, 0.100619, 0.101455, 0.10024, 0.100583, 0.100668, 0.100361, 0.100302, 0.105002, 0.10067], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.10066, 0.100689, 0.100373, 0.101332, 0.100736, 0.100687, 0.100384, 0.100462, 0.100541, 0.100626, 0.100331, 0.100269, 0.100627, 0.105327, 0.100359, 0.100359, 0.100583, 0.100658, 0.100381, 0.100263, 0.100587, 0.100619, 0.101455, 0.10024, 0.100583, 0.100668, 0.100361, 0.100302, 0.105002, 0.10067], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[4, 2, 1, 2, 6, 3, 0, 0, 23, 0, 20, 27, 1, 0, 1, 0, 0, 0]': ([0.10066, 0.100689, 0.100373, 0.101332, 0.100736, 0.100687, 0.100384, 0.100462, 0.100541, 0.100626, 0.100331, 0.100269, 0.100627, 0.105327, 0.100359, 0.100359, 0.100583, 0.100658, 0.100381, 0.100263, 0.100587, 0.100619, 0.101455, 0.10024, 0WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = iii
.100583, 0.100668, 0.100361, 0.100302, 0.105002, 0.10067], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [5, 2, 5, 3, 3, 5, 0, 0, 21, 9, 0, 29, 0, 0, 0, 0, 1, 0]
Fixed Factors: {}
Testing candidate 2: [5, 2, 5, 3, 3, 5, 0, 0, 21, 9, 0, 29, 0, 0, 0, 0, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	5
        Additions: 		2359
        Multiplications: 	704
        Divisions: 		0
        Logical: 		0
        Reads: 			3727
        Writes: 		427
        Comparisons:		19
        Gotos: 			0
        
digraph CFG {
	_JOIN_173564 [label="_JOIN_173564None...",shape=box];
	ForLoop219458 [label="ForLoop219458  for (j=jj; j<=min(ny-1,jj+31); j=j+1) ...",shape=box];
	ForLoop219458 -> 219457;
	ForLoop219458 -> _JOIN_219458;
	170110 [label="170110  y[i]=0.0;...",shape=box];
	170110 -> _JOIN_170111;
	186851 [label="186851  int i;...",shape=box];
	186851 -> ForLoop219277;
	220413 [label="220413  y[k]=y[k]+A[i*ny+k]*tmp[i];...",shape=box];
	220413 -> _JOIN_220414;
	ForLoop220417 [label="ForLoop220417  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) ...",shape=box];
	ForLoop220417 -> ForLoop220416;
	ForLoop220417 -> _JOIN_220417;
	_JOIN_219460 [label="_JOIN_219460None...",shape=box];
	_JOIN_219460 -> ForLoop220417;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 169479;
	209046 [label="209046  y[k]=y[k]+A[i*ny+k]*tmp[i];...",shape=box];
	169851 [label="169851  y[i]=0.0;...",shape=box];
	_JOIN_220419 [label="_JOIN_220419None...",shape=box];
	_JOIN_220419 -> _JOIN_173564;
	_JOIN_170042 [label="_JOIN_170042None...",shape=box];
	_JOIN_170042 -> 170350;
	_JOIN_219458 [label="_JOIN_219458None...",shape=box];
	_JOIN_219458 -> _JOIN_219459;
	219035 [label="219035  y[k]=y[k]+A[i*ny+k]*tmp[i];...",shape=box];
	ForLoop219459 [label="ForLoop219459  for (jj=jjj; jj<=min(ny-1,jjj+224); jj=jj+32) ...",shape=box];
	ForLoop219459 -> ForLoop219458;
	ForLoop219459 -> _JOIN_219459;
	ForLoop173564 [label="ForLoop173564  for (ii=0; ii<=nx-1; ii=ii+256) {...",shape=box];
	ForLoop173564 -> 186851;
	ForLoop173564 -> _JOIN_173564;
	177161 [label="177161  double x_copy;...",shape=box];
	219388 [label="219388  tmp[i]=0;...",shape=box];
	219388 -> ForLoop219460;
	ForLoop208963 [label="ForLoop208963  for (jj=jjj; jj<=min(ny-1,jjj+224); jj=jj+32) {...",shape=box];
	ForLoop208963 -> ForLoop208961;
	ForLoop208963 -> _JOIN_208963;
	ForLoop220419 [label="ForLoop220419  for (i=(min(nx-1,ii+255))-(((min(nx-1,ii+255))-(ii)+1)%10)+1; i<=min(nx-1,ii+255); i=i+1) {...",shape=box];
	ForLoop220419 -> 219388;
	ForLoop220419 -> _JOIN_220419;
	ForLoop208961 [label="ForLoop208961  for (j=jj; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop208961 -> 208698;
	ForLoop208961 -> _JOIN_208961;
	ForLoop220416 [label="ForLoop220416  for (kk=kkk; kk<=min(ny-1,kkk+768); kk=kk+256) {...",shape=box];
	ForLoop220416 -> 219492;
	ForLoop220416 -> _JOIN_220416;
	_JOIN_219271 [label="_JOIN_219271None...",shape=box];
	_JOIN_219271 -> _JOIN_219273;
	_JOIN_220414 [label="_JOIN_220414None...",shape=box];
	_JOIN_220414 -> _JOIN_220416;
	ForLoop208965 [label="ForLoop208965  for (jjj=0; jjj<=ny-1; jjj=jjj+256) {...",shape=box];
	ForLoop208965 -> ForLoop208963;
	ForLoop208965 -> _JOIN_208965;
	169479 [label="169479  int i;...",shape=box];
	ForLoop219460 [label="ForLoop219460  for (jjj=0; jjj<=ny-1; jjj=jjj+256) ...",shape=box];
	ForLoop219460 -> ForLoop219459;
	ForLoop219460 -> _JOIN_219460;
	_JOIN_218968 [label="_JOIN_218968None...",shape=box];
	_JOIN_218968 -> ForLoop219271;
	_JOIN_220346 [label="_JOIN_220346None...",shape=box];
	_JOIN_220346 -> ForLoop220414;
	ForLoop219275 [label="ForLoop219275  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop219275 -> ForLoop219273;
	ForLoop219275 -> _JOIN_219275;
	ForLoop170111 [label="ForLoop170111  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop170111 -> 170110;
	ForLoop170111 -> _JOIN_170111;
	ForLoop219277 [label="ForLoop219277  for (i=ii; i<=min(nx-1,ii+255)-9expected=9369846271501.798828
actual=9369846271501.798828
; i=i+10) {...",shape=box];
	ForLoop219277 -> 208548;
	ForLoop219277 -> _JOIN_219277;
	ForLoop219271 [label="ForLoop219271  for (k=(min(ny-1,kk+255))-(((min(ny-1,kk+255))-(kk)+1)%30)+1; k<=min(ny-1,kk+255); k=k+1) {...",shape=box];
	ForLoop219271 -> 219035;
	ForLoop219271 -> _JOIN_219271;
	ForLoop219273 [label="ForLoop219273  for (kk=kkk; kk<=min(ny-1,kkk+768); kk=kk+256) {...",shape=box];
	ForLoop219273 -> 208997;
	ForLoop219273 -> _JOIN_219273;
	_JOIN_219275 [label="_JOIN_219275None...",shape=box];
	_JOIN_219275 -> _JOIN_219277;
	208997 [label="208997  int k;...",shape=box];
	ForLoop220414 [label="ForLoop220414  for (k=(min(ny-1,kk+255))-(((min(ny-1,kk+255))-(kk)+1)%30)+1; k<=min(ny-1,kk+255); k=k+1) ...",shape=box];
	ForLoop220414 -> 220413;
	ForLoop220414 -> _JOIN_220414;
	_JOIN_220417 [label="_JOIN_220417None...",shape=box];
	_JOIN_220417 -> _JOIN_220419;
	_JOIN_219459 [label="_JOIN_219459None...",shape=box];
	_JOIN_219459 -> _JOIN_219460;
	_JOIN_219277 [label="_JOIN_219277None...",shape=box];
	_JOIN_219277 -> ForLoop220419;
	ForLoop218968 [label="ForLoop218968  for (k=kk; k<=min(ny-1,kk+255)-29; k=k+30) {...",shape=box];
	ForLoop218968 -> 209046;
	ForLoop218968 -> _JOIN_218968;
	208548 [label="208548  tmp[i]=0;...",shape=box];
	_JOIN_220416 [label="_JOIN_220416None...",shape=box];
	_JOIN_220416 -> _JOIN_220417;
	_JOIN_208963 [label="_JOIN_208963None...",shape=box];
	_JOIN_208963 -> _JOIN_208965;
	_JOIN_208961 [label="_JOIN_208961None...",shape=box];
	_JOIN_208961 -> _JOIN_208963;
	_JOIN_208965 [label="_JOIN_208965None...",shape=box];
	_JOIN_208965 -> ForLoop219275;
	219492 [label="219492  int k;...",shape=box];
	219492 -> ForLoop220346;
	_JOIN_170111 [label="_JOIN_170111None...",shape=box];
	_JOIN_170111 -> 177161;
	219532 [label="219532  y[k]=y[k]+A[i*ny+k]*tmp[i];...",shape=box];
	_JOIN_219273 [label="_JOIN_219273None...",shape=box];
	_JOIN_219273 -> _JOIN_219275;
	170350 [label="170350  register int cbv_2, cbv_3;...",shape=box];
	ForLoop170042 [label="ForLoop170042  for (i=0; i<=cbv_1; i=i+22) {...",shape=box];
	ForLoop170042 -> 169851;
	ForLoop170042 -> _JOIN_170042;
	ForLoop220346 [label="ForLoop220346  for (k=kk; k<=min(ny-1,kk+255)-29; k=k+30) {...",shape=box];
	ForLoop220346 -> 219532;
	ForLoop220346 -> _JOIN_220346;
	208698 [label="208698  tmp[i]=tmp[i]+A[i*ny+j]*x[j];...",shape=box];
	219457 [label="219457  tmp[i]=tmp[i]+A[i*ny+j]*x[j];...",shape=box];
	219457 -> _JOIN_219458;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest2.exe __orio_perftest2.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest2.exe  
{'[5, 2, 5, 3, 3, 5, 0, 0, 21, 9, 0, 29, 0, 0, 0, 0, 1, 0]' : 0.112391}
{'[5, 2, 5, 3, 3, 5, 0, 0, 21, 9, 0, 29, 0, 0, 0, 0, 1, 0]' : 0.112004}
{'[5, 2, 5, 3, 3, 5, 0, 0, 21, 9, 0, 29, 0, 0, 0, 0, 1, 0]' : 0.112168}
{'[5, 2, 5, 3, 3, 5, 0, 0, 21, 9, 0, 29, 0, 0, 0, 0, 1, 0]' : 0.11202}
{'[5, 2, 5, 3, 3, 5, 0, 0, 21, 9, 0, 29, 0, 0, 0, 0, 1, 0]' : 0.111966}
{'[5, 2, 5, 3, 3, 5, 0, 0, 21, 9, 0, 29, 0, 0, 0, 0, 1, 0]' : 0.112051}
{'[5, 2, 5, 3, 3, 5, 0, 0, 21, 9, 0, 29, 0, 0, 0, 0, 1, 0]' : 0.113797}
{'[5, 2, 5, 3, 3, 5, 0, 0, 21, 9, 0, 29, 0, 0, 0, 0, 1, 0]' : 0.112103}
{'[5, 2, 5, 3, 3, 5, 0, 0, 21, 9, 0, 29, 0, 0, 0, 0, 1, 0]' : 0.112225}
{'[5, 2, 5, 3, 3, 5, 0, 0, 21, 9, 0, 29, 0, 0, 0, 0, 1, 0]' : 0.112024}
{'[5, 2, 5, 3, 3, 5, 0, 0, 21, 9, 0, 29, 0, 0, 0, 0, 1, 0]' : 0.112029}
{'[5, 2, 5, 3, 3, 5, 0, 0, 21, 9, 0, 29, 0, 0, 0, 0, 1, 0]' : 0.112045}
{'[5, 2, 5, 3, 3, 5, 0, 0, 21, 9, 0, 29, 0, 0, 0, 0, 1, 0]' : 0.111992}
{'[5, 2, 5, 3, 3, 5, 0, 0, 21, 9, 0, 29, 0, 0, 0, 0, 1, 0]' : 0.111978}
{'[5, 2, 5, 3, 3, 5, 0, 0, 21, 9, 0, 29, 0, 0, 0, 0, 1, 0]' : 0.11204}
{'[5, 2, 5, 3, 3, 5, 0, 0, 21, 9, 0, 29, 0, 0, 0, 0, 1, 0]' : 0.112054}
{'[5, 2, 5, 3, 3, 5, 0, 0, 21, 9, 0, 29, 0, 0, 0, 0, 1, 0]' : 0.113038}
{'[5, 2, 5, 3, 3, 5, 0, 0, 21, 9, 0, 29, 0, 0, 0, 0, 1, 0]' : 0.112116}
{'[5, 2, 5, 3, 3, 5, 0, 0, 21, 9, 0, 29, 0, 0, 0, 0, 1, 0]' : 0.11203}
{'[5, 2, 5, 3, 3, 5, 0, 0, 21, 9, 0, 29, 0, 0, 0, 0, 1, 0]' : 0.112054}
{'[5, 2, 5, 3, 3, 5, 0, 0, 21, 9, 0, 29, 0, 0, 0, 0, 1, 0]' : 0.111973}
{'[5, 2, 5, 3, 3, 5, 0, 0, 21, 9, 0, 29, 0, 0, 0, 0, 1, 0]' : 0.112014}
{'[5, 2, 5, 3, 3, 5, 0, 0, 21, 9, 0, 29, 0, 0, 0, 0, 1, 0]' : 0.112279}
{'[5, 2, 5, 3, 3, 5, 0, 0, 21, 9, 0, 29, 0, 0, 0, 0, 1, 0]' : 0.112067}
{'[5, 2, 5, 3, 3, 5, 0, 0, 21, 9, 0, 29, 0, 0, 0, 0, 1, 0]' : 0.112168}
{'[5, 2, 5, 3, 3, 5, 0, 0, 21, 9, 0, 29, 0, 0, 0, 0, 1, 0]' : 0.112087}
{'[5, 2, 5, 3, 3, 5, 0, 0, 21, 9, 0, 29, 0, 0, 0, 0, 1, 0]' : 0.112167}
{'[5, 2, 5, 3, 3, 5, 0, 0, 21, 9, 0, 29, 0, 0, 0, 0, 1, 0]' : 0.112058}
{'[5, 2, 5, 3, 3, 5, 0, 0, 21, 9, 0, 29, 0, 0, 0, 0, 1, 0]' : 0.112056}
{'[5, 2, 5, 3, 3, 5, 0, 0, 21, 9, 0, 29, 0, 0, 0, 0, 1, 0]' : 0.112124}

out:
 ["{'[5, 2, 5, 3, 3, 5, 0, 0, 21, 9, 0, 29, 0, 0, 0, 0, 1, 0]' : 0.112391}", "{'[5, 2, 5, 3, 3, 5, 0, 0, 21, 9, 0, 29, 0, 0, 0, 0, 1, 0]' : 0.112004}", "{'[5, 2, 5, 3, 3, 5, 0, 0, 21, 9, 0, 29, 0, 0, 0, 0, 1, 0]' : 0.112168}", "{'[5, 2, 5, 3, 3, 5, 0, 0, 21, 9, 0, 29, 0, 0, 0, 0, 1, 0]' : 0.11202}", "{'[5, 2, 5, 3, 3, 5, 0, 0, 21, 9, 0, 29, 0, 0, 0, 0, 1, 0]' : 0.111966}", "{'[5, 2, 5, 3, 3, 5, 0, 0, 21, 9, 0, 29, 0, 0, 0, 0, 1, 0]' : 0.112051}", "{'[5, 2, 5, 3, 3, 5, 0, 0, 21, 9, 0, 29, 0, 0, 0, 0, 1, 0]' : 0.113797}", "{'[5, 2, 5, 3, 3, 5, 0, 0, 21, 9, 0, 29, 0, 0, 0, 0, 1, 0]' : 0.112103}", "{'[5, 2, 5, 3, 3, 5, 0, 0, 21, 9, 0, 29, 0, 0, 0, 0, 1, 0]' : 0.112225}", "{'[5, 2, 5, 3, 3, 5, 0, 0, 21, 9, 0, 29, 0, 0, 0, 0, 1, 0]' : 0.112024}", "{'[5, 2, 5, 3, 3, 5, 0, 0, 21, 9, 0, 29, 0, 0, 0, 0, 1, 0]' : 0.112029}", "{'[5, 2, 5, 3, 3, 5, 0, 0, 21, 9, 0, 29, 0, 0, 0, 0, 1, 0]' : 0.112045}", "{'[5, 2, 5, 3, 3, 5, 0, 0, 21, 9, 0, 29, 0, 0, 0, 0, 1, 0]' : 0.111992}", "{'[5, 2, 5, 3, 3, 5, 0, 0, 21, 9, 0, 29, 0, 0, 0, 0, 1, 0]' : 0.111978}", "{'[5, 2, 5, 3, 3, 5, 0, 0, 21, 9, 0, 29, 0, 0, 0, 0, 1, 0]' : 0.11204}", "{'[5, 2, 5, 3, 3, 5, 0, 0, 21, 9, 0, 29, 0, 0, 0, 0, 1, 0]' : 0.112054}", "{'[5, 2, 5, 3, 3, 5, 0, 0, 21, 9, 0, 29, 0, 0, 0, 0, 1, 0]' : 0.113038}", "{'[5, 2, 5, 3, 3, 5, 0, 0, 21, 9, 0, 29, 0, 0, 0, 0, 1, 0]' : 0.112116}", "{'[5, 2, 5, 3, 3, 5, 0, 0, 21, 9, 0, 29, 0, 0, 0, 0, 1, 0]' : 0.11203}", "{'[5, 2, 5, 3, 3, 5, 0, 0, 21, 9, 0, 29, 0, 0, 0, 0, 1, 0]' : 0.112054}", "{'[5, 2, 5, 3, 3, 5, 0, 0, 21, 9, 0, 29, 0, 0, 0, 0, 1, 0]' : 0.111973}", "{'[5, 2, 5, 3, 3, 5, 0, 0, 21, 9, 0, 29, 0, 0, 0, 0, 1, 0]' : 0.112014}", "{'[5, 2, 5, 3, 3, 5, 0, 0, 21, 9, 0, 29, 0, 0, 0, 0, 1, 0]' : 0.112279}", "{'[5, 2, 5, 3, 3, 5, 0, 0, 21, 9, 0, 29, 0, 0, 0, 0, 1, 0]' : 0.112067}", "{'[5, 2, 5, 3, 3, 5, 0, 0, 21, 9, 0, 29, 0, 0, 0, 0, 1, 0]' : 0.112168}", "{'[5, 2, 5, 3, 3, 5, 0, 0, 21, 9, 0, 29, 0, 0, 0, 0, 1, 0]' : 0.112087}", "{'[5, 2, 5, 3, 3, 5, 0, 0, 21, 9, 0, 29, 0, 0, 0, 0, 1, 0]' : 0.112167}", "{'[5, 2, 5, 3, 3, 5, 0, 0, 21, 9, 0, 29, 0, 0, 0, 0, 1, 0]' : 0.112058}", "{'[5, 2, 5, 3, 3, 5, 0, 0, 21, 9, 0, 29, 0, 0, 0, 0, 1, 0]' : 0.112056}", "{'[5, 2, 5, 3, 3, 5, 0, 0, 21, 9, 0, 29, 0, 0, 0, 0, 1, 0]' : 0.112124}"]
returning from 'run': {'[5, 2, 5, 3, 3, 5, 0, 0, 21, 9, 0, 29, 0, 0, 0, 0, 1, 0]': ([0.112391, 0.112004, 0.112168, 0.11202, 0.111966, 0.112051, 0.113797, 0.112103, 0.112225, 0.112024, 0.112029, 0.112045, 0.111992, 0.111978, 0.11204, 0.112054, 0.113038, 0.112116, 0.11203, 0.112054, 0.111973, 0.112014, 0.112279, 0.112067, 0.112168, 0.112087, 0.112167, 0.112058, 0.112056, 0.112124], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.112391, 0.112004, 0.112168, 0.11202, 0.111966, 0.112051, 0.113797, 0.112103, 0.112225, 0.112024, 0.112029, 0.112045, 0.111992, 0.111978, 0.11204, 0.112054, 0.113038, 0.112116, 0.11203, 0.112054, 0.111973, 0.112014, 0.112279, 0.112067, 0.112168, 0.112087, 0.112167, 0.112058, 0.112056, 0.112124], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[5, 2, 5, 3, 3, 5, 0, 0, 21, 9, 0, 29, 0, 0, 0, 0, 1, 0]': ([0.112391, 0.112004, 0.112168, 0.11202, 0.111966, 0.112051, 0.113797, 0.1WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
12103, 0.112225, 0.112024, 0.112029, 0.112045, 0.111992, 0.111978, 0.11204, 0.112054, 0.113038, 0.112116, 0.11203, 0.112054, 0.111973, 0.112014, 0.112279, 0.112067, 0.112168, 0.112087, 0.112167, 0.112058, 0.112056, 0.112124], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [0, 6, 6, 2, 4, 5, 0, 1, 5, 0, 28, 19, 1, 0, 1, 1, 1, 0]
Fixed Factors: {}
Testing candidate 3: [0, 6, 6, 2, 4, 5, 0, 1, 5, 0, 28, 19, 1, 0, 1, 1, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	5
        Additions: 		1486
        Multiplications: 	684
        Divisions: 		0
        Logical: 		0
        Reads: 			2881
        Writes: 		480
        Comparisons:		21
        Gotos: 			0
        
digraph CFG {
	ForLoop232672 [label="ForLoop232672  for (i=0; i<=cbv_1; i=i+6) {...",shape=box];
	ForLoop232672 -> 232625;
	ForLoop232672 -> _JOIN_232672;
	404020 [label="404020  double scv_39, scv_40, scv_41, scv_42, scv_43, scv_44, scv_45, scv_46;...",shape=box];
	357628 [label="357628  double x_copy;...",shape=box];
	232493 [label="232493  int i;...",shape=box];
	ForLoop369432 [label="ForLoop369432  for (iii=0; iii<=nx-1; iii=iii+128) {...",shape=box];
	ForLoop369432 -> ForLoop368189;
	ForLoop369432 -> _JOIN_369432;
	ForLoop369430 [label="ForLoop369430  for (i=it; i<=min(nx-1,iii+127); i=i+1) {...",shape=box];
	ForLoop369430 -> 409590;
	ForLoop369430 -> _JOIN_369430;
	379932 [label="379932  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	409602 [label="409602  tmp[i]=scv_55;...",shape=box];
	409602 -> _JOIN_369430;
	_JOIN_232672 [label="_JOIN_232672None...",shape=box];
	_JOIN_232672 -> 232836;
	369101 [label="369101  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	369101 -> ForLoop369394;
	ForLoop369427 [label="ForLoop369427  for (kk=kkk; kk<=min(ny-1,kkk+512); kk=kk+512) {...",shape=box];
	ForLoop369427 -> 369101;
	ForLoop369427 -> _JOIN_369427;
	ForLoop369039 [label="ForLoop369039  for (jj=0; jj<=ny-1; jj=jj+512) {...",shape=box];
	ForLoop369039 -> 368227;
	ForLoop369039 -> _JOIN_369039;
	391192 [label="391192  double scv_31, scv_32, scv_33, scv_34, scv_35, scv_36, scv_37, scv_38;...",shape=box];
	ForLoop365563 [label="ForLoop365563  for (j=(min(ny-1,jj+511))-(((min(ny-1,jj+511))-(jj)+1)%29)+1; j<=min(ny-1,jj+511); j=j+1) {...",shape=box];
	ForLoop365563 -> 380799;
	ForLoop365563 -> _JOIN_365563;
	_JOIN_368969 [label="_JOIN_368969None...",shape=box];
	_JOIN_368969 -> ForLoop369037;
	ForLoop365565 [label="ForLoop365565  for (jj=0; jj<=ny-1; jj=jj+512) {...",shape=box];
	ForLoop365565 -> 357682;
	ForLoop365565 -> _JOIN_365565;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 232493;
	ForLoop368969 [label="ForLoop368969  for (j=jj; j<=min(ny-1,jj+511)-28; j=j+29) {...",shape=box];
	ForLoop368969 -> 368267;
	ForLoop368969 -> _JOIN_368969;
	ForLoop369394 [label="ForLoop369394  for (kt=kk; kt<=min(ny-1,kk+511)-7; kt=kt+8) {...",shape=box];
	ForLoop369394 -> 407200;
	ForLoop369394 -> _JOIN_369394;
	357682 [label="357682  int j;...",shape=box];
	357682 -> ForLoop365291;
	368227 [label="368227  int j;...",shape=box];
	368227 -> ForLoop368969;
	_JOIN_369039 [label="_JOIN_369039None...",shape=box];
	_JOIN_369039 -> ForLoop369428;
	_JOIN_369427 [label="_JOIN_369427None...",shape=box];
	_JOIN_369427 -> _JOIN_369428;
	365627 [label="365627  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	365627 -> ForLoop368153;
	_JOIN_369037 [label="_JOIN_369037None...",shape=box];
	_JOIN_369037 -> _JOIN_369039;
	232836 [label="232836  register int cbv_2, cbv_3;...",shape=box];
	232625 [label="232625  y[i]=0.0;...",shape=box];
	_JOIN_365291 [label="_JOIN_365291None...",shape=box];
	_JOIN_365291 -> ForLoop365563;
	409590 [label="409590  double scv_55;...",shape=box];
	380799 [label="380799  double scv_30;...",shape=box];
	_JOIN_232741 [label="_JOIN_232741None...",shape=box];
	_JOIN_232741 -> 357628;
	ForLoop368153 [label="ForLoop368153  for (kt=kk; kt<=minexpected=9369846271501.798828
actual=9369846271501.798828
(ny-1,kk+511)-7; kt=kt+8) {...",shape=box];
	ForLoop368153 -> 391192;
	ForLoop368153 -> _JOIN_368153;
	ForLoop369428 [label="ForLoop369428  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop369428 -> ForLoop369427;
	ForLoop369428 -> _JOIN_369428;
	ForLoop365291 [label="ForLoop365291  for (j=jj; j<=min(ny-1,jj+511)-28; j=j+29) {...",shape=box];
	ForLoop365291 -> 379932;
	ForLoop365291 -> _JOIN_365291;
	_JOIN_369430 [label="_JOIN_369430None...",shape=box];
	_JOIN_369430 -> _JOIN_369432;
	_JOIN_368153 [label="_JOIN_368153None...",shape=box];
	_JOIN_368153 -> 368184;
	368267 [label="368267  scv_55=scv_55+A[i*ny+j]*x[j];...",shape=box];
	ForLoop232741 [label="ForLoop232741  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop232741 -> 232740;
	ForLoop232741 -> _JOIN_232741;
	232740 [label="232740  y[i]=0.0;...",shape=box];
	232740 -> _JOIN_232741;
	369036 [label="369036  scv_55=scv_55+A[i*ny+j]*x[j];...",shape=box];
	369036 -> _JOIN_369037;
	368184 [label="368184  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	368184 -> _JOIN_368186;
	404032 [label="404032  tmp[it]=scv_39;...",shape=box];
	_JOIN_369394 [label="_JOIN_369394None...",shape=box];
	_JOIN_369394 -> 369425;
	ForLoop369037 [label="ForLoop369037  for (j=(min(ny-1,jj+511))-(((min(ny-1,jj+511))-(jj)+1)%29)+1; j<=min(ny-1,jj+511); j=j+1) {...",shape=box];
	ForLoop369037 -> 369036;
	ForLoop369037 -> _JOIN_369037;
	_JOIN_368189 [label="_JOIN_368189None...",shape=box];
	_JOIN_368189 -> ForLoop369430;
	_JOIN_365563 [label="_JOIN_365563None...",shape=box];
	_JOIN_365563 -> _JOIN_365565;
	_JOIN_365565 [label="_JOIN_365565None...",shape=box];
	_JOIN_365565 -> ForLoop368187;
	407200 [label="407200  double scv_47, scv_48, scv_49, scv_50, scv_51, scv_52, scv_53, scv_54;...",shape=box];
	ForLoop368186 [label="ForLoop368186  for (kk=kkk; kk<=min(ny-1,kkk+512); kk=kk+512) {...",shape=box];
	ForLoop368186 -> 365627;
	ForLoop368186 -> _JOIN_368186;
	ForLoop368187 [label="ForLoop368187  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop368187 -> ForLoop368186;
	ForLoop368187 -> _JOIN_368187;
	ForLoop368189 [label="ForLoop368189  for (it=iii; it<=min(nx-1,iii+127)-7; it=it+8) {...",shape=box];
	ForLoop368189 -> 404020;
	ForLoop368189 -> _JOIN_368189;
	369425 [label="369425  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	369425 -> _JOIN_369427;
	_JOIN_368186 [label="_JOIN_368186None...",shape=box];
	_JOIN_368186 -> _JOIN_368187;
	_JOIN_368187 [label="_JOIN_368187None...",shape=box];
	_JOIN_368187 -> 404032;
	_JOIN_369432 [label="_JOIN_369432None...",shape=box];
	_JOIN_369428 [label="_JOIN_369428None...",shape=box];
	_JOIN_369428 -> 409602;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest3.exe __orio_perftest3.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest3.exe  
{'[0, 6, 6, 2, 4, 5, 0, 1, 5, 0, 28, 19, 1, 0, 1, 1, 1, 0]' : 0.082242}
{'[0, 6, 6, 2, 4, 5, 0, 1, 5, 0, 28, 19, 1, 0, 1, 1, 1, 0]' : 0.08165}
{'[0, 6, 6, 2, 4, 5, 0, 1, 5, 0, 28, 19, 1, 0, 1, 1, 1, 0]' : 0.0816491}
{'[0, 6, 6, 2, 4, 5, 0, 1, 5, 0, 28, 19, 1, 0, 1, 1, 1, 0]' : 0.0816879}
{'[0, 6, 6, 2, 4, 5, 0, 1, 5, 0, 28, 19, 1, 0, 1, 1, 1, 0]' : 0.081677}
{'[0, 6, 6, 2, 4, 5, 0, 1, 5, 0, 28, 19, 1, 0, 1, 1, 1, 0]' : 0.0816441}
{'[0, 6, 6, 2, 4, 5, 0, 1, 5, 0, 28, 19, 1, 0, 1, 1, 1, 0]' : 0.0817051}
{'[0, 6, 6, 2, 4, 5, 0, 1, 5, 0, 28, 19, 1, 0, 1, 1, 1, 0]' : 0.0818002}
{'[0, 6, 6, 2, 4, 5, 0, 1, 5, 0, 28, 19, 1, 0, 1, 1, 1, 0]' : 0.0816598}
{'[0, 6, 6, 2, 4, 5, 0, 1, 5, 0, 28, 19, 1, 0, 1, 1, 1, 0]' : 0.0820222}
{'[0, 6, 6, 2, 4, 5, 0, 1, 5, 0, 28, 19, 1, 0, 1, 1, 1, 0]' : 0.0816989}
{'[0, 6, 6, 2, 4, 5, 0, 1, 5, 0, 28, 19, 1, 0, 1, 1, 1, 0]' : 0.0816889}
{'[0, 6, 6, 2, 4, 5, 0, 1, 5, 0, 28, 19, 1, 0, 1, 1, 1, 0]' : 0.081749}
{'[0, 6, 6, 2, 4, 5, 0, 1, 5, 0, 28, 19, 1, 0, 1, 1, 1, 0]' : 0.08166}
{'[0, 6, 6, 2, 4, 5, 0, 1, 5, 0, 28, 19, 1, 0, 1, 1, 1, 0]' : 0.0817318}
{'[0, 6, 6, 2, 4, 5, 0, 1, 5, 0, 28, 19, 1, 0, 1, 1, 1, 0]' : 0.0816591}
{'[0, 6, 6, 2, 4, 5, 0, 1, 5, 0, 28, 19, 1, 0, 1, 1, 1, 0]' : 0.0817471}
{'[0, 6, 6, 2, 4, 5, 0, 1, 5, 0, 28, 19, 1, 0, 1, 1, 1, 0]' : 0.0816889}
{'[0, 6, 6, 2, 4, 5, 0, 1, 5, 0, 28, 19, 1, 0, 1, 1, 1, 0]' : 0.0817249}
{'[0, 6, 6, 2, 4, 5, 0, 1, 5, 0, 28, 19, 1, 0, 1, 1, 1, 0]' : 0.082644}
{'[0, 6, 6, 2, 4, 5, 0, 1, 5, 0, 28, 19, 1, 0, 1, 1, 1, 0]' : 0.081742}
{'[0, 6, 6, 2, 4, 5, 0, 1, 5, 0, 28, 19, 1, 0, 1, 1, 1, 0]' : 0.0816629}
{'[0, 6, 6, 2, 4, 5, 0, 1, 5, 0, 28, 19, 1, 0, 1, 1, 1, 0]' : 0.0817292}
{'[0, 6, 6, 2, 4, 5, 0, 1, 5, 0, 28, 19, 1, 0, 1, 1, 1, 0]' : 0.0816741}
{'[0, 6, 6, 2, 4, 5, 0, 1, 5, 0, 28, 19, 1, 0, 1, 1, 1, 0]' : 0.081651}
{'[0, 6, 6, 2, 4, 5, 0, 1, 5, 0, 28, 19, 1, 0, 1, 1, 1, 0]' : 0.0816841}
{'[0, 6, 6, 2, 4, 5, 0, 1, 5, 0, 28, 19, 1, 0, 1, 1, 1, 0]' : 0.081691}
{'[0, 6, 6, 2, 4, 5, 0, 1, 5, 0, 28, 19, 1, 0, 1, 1, 1, 0]' : 0.082073}
{'[0, 6, 6, 2, 4, 5, 0, 1, 5, 0, 28, 19, 1, 0, 1, 1, 1, 0]' : 0.0816841}
{'[0, 6, 6, 2, 4, 5, 0, 1, 5, 0, 28, 19, 1, 0, 1, 1, 1, 0]' : 0.0817759}

out:
 ["{'[0, 6, 6, 2, 4, 5, 0, 1, 5, 0, 28, 19, 1, 0, 1, 1, 1, 0]' : 0.082242}", "{'[0, 6, 6, 2, 4, 5, 0, 1, 5, 0, 28, 19, 1, 0, 1, 1, 1, 0]' : 0.08165}", "{'[0, 6, 6, 2, 4, 5, 0, 1, 5, 0, 28, 19, 1, 0, 1, 1, 1, 0]' : 0.0816491}", "{'[0, 6, 6, 2, 4, 5, 0, 1, 5, 0, 28, 19, 1, 0, 1, 1, 1, 0]' : 0.0816879}", "{'[0, 6, 6, 2, 4, 5, 0, 1, 5, 0, 28, 19, 1, 0, 1, 1, 1, 0]' : 0.081677}", "{'[0, 6, 6, 2, 4, 5, 0, 1, 5, 0, 28, 19, 1, 0, 1, 1, 1, 0]' : 0.0816441}", "{'[0, 6, 6, 2, 4, 5, 0, 1, 5, 0, 28, 19, 1, 0, 1, 1, 1, 0]' : 0.0817051}", "{'[0, 6, 6, 2, 4, 5, 0, 1, 5, 0, 28, 19, 1, 0, 1, 1, 1, 0]' : 0.0818002}", "{'[0, 6, 6, 2, 4, 5, 0, 1, 5, 0, 28, 19, 1, 0, 1, 1, 1, 0]' : 0.0816598}", "{'[0, 6, 6, 2, 4, 5, 0, 1, 5, 0, 28, 19, 1, 0, 1, 1, 1, 0]' : 0.0820222}", "{'[0, 6, 6, 2, 4, 5, 0, 1, 5, 0, 28, 19, 1, 0, 1, 1, 1, 0]' : 0.0816989}", "{'[0, 6, 6, 2, 4, 5, 0, 1, 5, 0, 28, 19, 1, 0, 1, 1, 1, 0]' : 0.0816889}", "{'[0, 6, 6, 2, 4, 5, 0, 1, 5, 0, 28, 19, 1, 0, 1, 1, 1, 0]' : 0.081749}", "{'[0, 6, 6, 2, 4, 5, 0, 1, 5, 0, 28, 19, 1, 0, 1, 1, 1, 0]' : 0.08166}", "{'[0, 6, 6, 2, 4, 5, 0, 1, 5, 0, 28, 19, 1, 0, 1, 1, 1, 0]' : 0.0817318}", "{'[0, 6, 6, 2, 4, 5, 0, 1, 5, 0, 28, 19, 1, 0, 1, 1, 1, 0]' : 0.0816591}", "{'[0, 6, 6, 2, 4, 5, 0, 1, 5, 0, 28, 19, 1, 0, 1, 1, 1, 0]' : 0.0817471}", "{'[0, 6, 6, 2, 4, 5, 0, 1, 5, 0, 28, 19, 1, 0, 1, 1, 1, 0]' : 0.0816889}", "{'[0, 6, 6, 2, 4, 5, 0, 1, 5, 0, 28, 19, 1, 0, 1, 1, 1, 0]' : 0.0817249}", "{'[0, 6, 6, 2, 4, 5, 0, 1, 5, 0, 28, 19, 1, 0, 1, 1, 1, 0]' : 0.082644}", "{'[0, 6, 6, 2, 4, 5, 0, 1, 5, 0, 28, 19, 1, 0, 1, 1, 1, 0]' : 0.081742}", "{'[0, 6, 6, 2, 4, 5, 0, 1, 5, 0, 28, 19, 1, 0, 1, 1, 1, 0]' : 0.0816629}", "{'[0, 6, 6, 2, 4, 5, 0, 1, 5, 0, 28, 19, 1, 0, 1, 1, 1, 0]' : 0.0817292}", "{'[0, 6, 6, 2, 4, 5, 0, 1, 5, 0, 28, 19, 1, 0, 1, 1, 1, 0]' : 0.0816741}", "{'[0, 6, 6, 2, 4, 5, 0, 1, 5, 0, 28, 19, 1, 0, 1, 1, 1, 0]' : 0.081651}", "{'[0, 6, 6, 2, 4, 5, 0, 1, 5, 0, 28, 19, 1, 0, 1, 1, 1, 0]' : 0.0816841}", "{'[0, 6, 6, 2, 4, 5, 0, 1, 5, 0, 28, 19, 1, 0, 1, 1, 1, 0]' : 0.081691}", "{'[0, 6, 6, 2, 4, 5, 0, 1, 5, 0, 28, 19, 1, 0, 1, 1, 1, 0]' : 0.082073}", "{'[0, 6, 6, 2, 4, 5, 0, 1, 5, 0, 28, 19, 1, 0, 1, 1, 1, 0]' : 0.0816841}", "{'[0, 6, 6, 2, 4, 5, 0, 1, 5, 0, 28, 19, 1, 0, 1, 1, 1, 0]' : 0.0817759}"]
returning from 'run': {'[0, 6, 6, 2, 4, 5, 0, 1, 5, 0, 28, 19, 1, 0, 1, 1, 1, 0]': ([0.082242, 0.08165, 0.0816491, 0.0816879, 0.081677, 0.0816441, 0.0817051, 0.0818002, 0.0816598, 0.0820222, 0.0816989, 0.0816889, 0.081749, 0.08166, 0.0817318, 0.0816591, 0.0817471, 0.0816889, 0.0817249, 0.082644, 0.081742, 0.0816629, 0.0817292, 0.0816741, 0.081651, 0.0816841, 0.081691, 0.082073, 0.0816841, 0.0817759], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.082242, 0.08165, 0.0816491, 0.0816879, 0.081677, 0.0816441, 0.0817051, 0.0818002, 0.0816598, 0.0820222, 0.0816989, 0.0816889, 0.081749, 0.08166, 0.0817318, 0.0816591, 0.0817471, 0.0816889, 0.0817249, 0.082644, 0.081742, 0.0816629, 0.0817292, 0.0816741, 0.081651, 0.0816841, 0.081691, 0.082073, 0.0816841, 0.0817759], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 6, 2, 4, 5, 0, 1, 5, 0, 28, 19, 1, 0, 1, 1, 1, 0]': ([0.082242, 0.08165, 0.0816491, 0.0816879, 0.081677, 0.0816441, 0.0817051, 0.0818002, 0.0816598, 0.0820222, 0.0816989, 0.0816889, 0.081749, 0.08166, 0.0817318, 0.0816591, 0.0817471, 0.0816889, 0.0817249, 0.082644, 0.081742, 0.0816629, 0.0817292, 0.0816741, 0.081651, 0.0816841, 0.081691, 0.082073, 0.0816841, 0.0817759], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [0, 0, 1, 2, 0, 1, 1, 1, 29, 17, 20, 0, 0, 1, 1, 0, 0, 0]
Fixed Factors: {}
Testing candidate 4: [0, 0, 1, 2, 0, 1, 1, 1, 29, 17, 20, 0, 0, 1, 1, 0, 0, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	51
        Max loop nest depth: 	5
        Additions: 		2502
        Multiplications: 	608
        Divisions: 		0
        Logical: 		0
        Reads: 			3983
        Writes: 		494
        Comparisons:		51
        Gotos: 			0
        
digraph CFG {
	_JOIN_468152 [label="_JOIN_468152None...",shape=box];
	_JOIN_468152 -> _JOIN_468154;
	_JOIN_468150 [label="_JOIN_468150None...",shape=box];
	_JOIN_468150 -> _JOIN_468152;
	_JOIN_468154 [label="_JOIN_468154None...",shape=box];
	_JOIN_468154 -> ForLoop468873;
	ForLoop468871 [label="ForLoop468871  for (kkk=0; kkk<=ny-1; kkk=kkk+64) ...",shape=box];
	ForLoop468871 -> ForLoop468870;
	ForLoop468871 -> _JOIN_468871;
	ForLoop468870 [label="ForLoop468870  for (kk=kkk; kk<=min(ny-1,kkk+48); kk=kk+16) {...",shape=box];
	ForLoop468870 -> 468544;
	ForLoop468870 -> _JOIN_468870;
	ForLoop468873 [label="ForLoop468873  for (i=(min(nx-1,iii+127))-(((min(nx-1,iii+127))-(iii)+1)%18)+1; i<=min(nx-1,iii+127); i=i+1) {...",shape=box];
	ForLoop468873 -> 468265;
	ForLoop468873 -> _JOIN_468873;
	ForLoop468154 [label="ForLoop468154  for (i=iii; i<=min(nx-1,iii+127)-17; i=i+18) {...",shape=box];
	ForLoop468154 -> 456761;
	ForLoop468154 -> _JOIN_468154;
	ForLoop468152 [label="ForLoop468152  for (kkk=0; kkk<=ny-1; kkk=kkk+64) {...",shape=box];
	ForLoop468152 -> ForLoop468150;
	ForLoop468152 -> _JOIN_468152;
	ForLoop468150 [label="ForLoop468150  for (kk=kkk; kk<=min(ny-1,kkk+48); kk=kk+16) {...",shape=box];
	ForLoop468150 -> 461725;
	ForLoop468150 -> _JOIN_468150;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 417584;
	_JOIN_418408 [label="_JOIN_418408None...",shape=box];
	_JOIN_418408 -> 423693;
	ForLoop468837 [label="ForLoop468837  for (kt=kk; kt<=min(ny-1,kk+15)-7; kt=kt+8) {...",shape=box];
	ForLoop468837 -> 468590;
	ForLoop468837 -> _JOIN_468837;
	468868 [label="468868  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	468868 -> _JOIN_468870;
	ForLoop467590 [label="ForLoop467590  for (kt=kk; kt<=min(ny-1,kk+15)-7; kt=kt+8) {...",shape=box];
	ForLoop467590 -> 462298;
	ForLoop467590 -> _JOIN_467590;
	467621 [label="467621  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop418408 [label="ForLoop418408  for (i=ny-((ny-(0))%30); i<=ny-1; i=i+1) ...",shape=box];
	ForLoop418408 -> 418407;
	ForLoop418408 -> _JOIN_418408;
	418407 [label="418407  y[i]=0.0;...",shape=box];
	418407 -> _JOIN_418408;
	468544 [label="468544  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	468544 -> ForLoop468837;
	_JOIN_418339 [label="_JOIN_418339None...",shape=box];
	_JOIN_418339 -> ForLoop418408;
	468298 [label="468298  tmp[i]=tmp[i]+A[i*ny+jt]*x[jt];...",shape=box];
	435918 [label="435918  int i;...",shape=box];
	435918 -> ForLoop468154;
	_JOIN_467590 [label="_JOIN_467590None...",shape=box];
	_JOIN_467590 -> 467621;
	ForLoop418339 [label="ForLoop418339  for (i=0; i<=ny-30; i=i+30) {...",shape=box];
	ForLoop418339 -> 418076;
	ForLoop418339 -> _JOIN_418339;
	418076 [label="418076  y[i]=0.0;...",shape=box];
	_JOIN_468482 [label="_JOIN_468482None...",shape=box];
	_JOIN_468482 -> ForLoop468871;
	461725 [label="461725  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",sexpected=9369846271501.798828
actual=9369846271501.798828
hape=box];
	_JOIN_461663 [label="_JOIN_461663None...",shape=box];
	_JOIN_461663 -> ForLoop468152;
	ForLoop420404 [label="ForLoop420404  for (iii=0; iii<=nx-1; iii=iii+128) {...",shape=box];
	ForLoop420404 -> 435918;
	ForLoop420404 -> _JOIN_420404;
	ForLoop468482 [label="ForLoop468482  for (jt=0; jt<=ny-8; jt=jt+8) {...",shape=box];
	ForLoop468482 -> 468298;
	ForLoop468482 -> _JOIN_468482;
	462298 [label="462298  y_copy[(kt-kk)]=y_copy[(kt-kk)]+A[i*ny+kt]*tmp[i];...",shape=box];
	468590 [label="468590  y_copy[(kt-kk)]=y_copy[(kt-kk)]+A[i*ny+kt]*tmp[i];...",shape=box];
	456947 [label="456947  tmp[i]=tmp[i]+A[i*ny+jt]*x[jt];...",shape=box];
	456761 [label="456761  tmp[i]=0;...",shape=box];
	_JOIN_468837 [label="_JOIN_468837None...",shape=box];
	_JOIN_468837 -> 468868;
	468265 [label="468265  tmp[i]=0;...",shape=box];
	468265 -> ForLoop468482;
	_JOIN_468871 [label="_JOIN_468871None...",shape=box];
	_JOIN_468871 -> _JOIN_468873;
	_JOIN_468870 [label="_JOIN_468870None...",shape=box];
	_JOIN_468870 -> _JOIN_468871;
	_JOIN_468873 [label="_JOIN_468873None...",shape=box];
	_JOIN_468873 -> _JOIN_420404;
	417584 [label="417584  int i;...",shape=box];
	417584 -> ForLoop418339;
	ForLoop461663 [label="ForLoop461663  for (jt=0; jt<=ny-8; jt=jt+8) {...",shape=box];
	ForLoop461663 -> 456947;
	ForLoop461663 -> _JOIN_461663;
	_JOIN_420404 [label="_JOIN_420404None...",shape=box];
	423693 [label="423693  double x_copy;...",shape=box];

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest4.exe __orio_perftest4.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest4.exe  
{'[0, 0, 1, 2, 0, 1, 1, 1, 29, 17, 20, 0, 0, 1, 1, 0, 0, 0]' : 0.179815}
{'[0, 0, 1, 2, 0, 1, 1, 1, 29, 17, 20, 0, 0, 1, 1, 0, 0, 0]' : 0.179532}
{'[0, 0, 1, 2, 0, 1, 1, 1, 29, 17, 20, 0, 0, 1, 1, 0, 0, 0]' : 0.195234}
{'[0, 0, 1, 2, 0, 1, 1, 1, 29, 17, 20, 0, 0, 1, 1, 0, 0, 0]' : 0.213521}
{'[0, 0, 1, 2, 0, 1, 1, 1, 29, 17, 20, 0, 0, 1, 1, 0, 0, 0]' : 0.179579}
{'[0, 0, 1, 2, 0, 1, 1, 1, 29, 17, 20, 0, 0, 1, 1, 0, 0, 0]' : 0.17927}
{'[0, 0, 1, 2, 0, 1, 1, 1, 29, 17, 20, 0, 0, 1, 1, 0, 0, 0]' : 0.180357}
{'[0, 0, 1, 2, 0, 1, 1, 1, 29, 17, 20, 0, 0, 1, 1, 0, 0, 0]' : 0.179279}
{'[0, 0, 1, 2, 0, 1, 1, 1, 29, 17, 20, 0, 0, 1, 1, 0, 0, 0]' : 0.179222}
{'[0, 0, 1, 2, 0, 1, 1, 1, 29, 17, 20, 0, 0, 1, 1, 0, 0, 0]' : 0.179519}
{'[0, 0, 1, 2, 0, 1, 1, 1, 29, 17, 20, 0, 0, 1, 1, 0, 0, 0]' : 0.179271}
{'[0, 0, 1, 2, 0, 1, 1, 1, 29, 17, 20, 0, 0, 1, 1, 0, 0, 0]' : 0.179452}
{'[0, 0, 1, 2, 0, 1, 1, 1, 29, 17, 20, 0, 0, 1, 1, 0, 0, 0]' : 0.179363}
{'[0, 0, 1, 2, 0, 1, 1, 1, 29, 17, 20, 0, 0, 1, 1, 0, 0, 0]' : 0.179415}
{'[0, 0, 1, 2, 0, 1, 1, 1, 29, 17, 20, 0, 0, 1, 1, 0, 0, 0]' : 0.179219}
{'[0, 0, 1, 2, 0, 1, 1, 1, 29, 17, 20, 0, 0, 1, 1, 0, 0, 0]' : 0.179261}
{'[0, 0, 1, 2, 0, 1, 1, 1, 29, 17, 20, 0, 0, 1, 1, 0, 0, 0]' : 0.179348}
{'[0, 0, 1, 2, 0, 1, 1, 1, 29, 17, 20, 0, 0, 1, 1, 0, 0, 0]' : 0.180266}
{'[0, 0, 1, 2, 0, 1, 1, 1, 29, 17, 20, 0, 0, 1, 1, 0, 0, 0]' : 0.179432}
{'[0, 0, 1, 2, 0, 1, 1, 1, 29, 17, 20, 0, 0, 1, 1, 0, 0, 0]' : 0.179251}
{'[0, 0, 1, 2, 0, 1, 1, 1, 29, 17, 20, 0, 0, 1, 1, 0, 0, 0]' : 0.179174}
{'[0, 0, 1, 2, 0, 1, 1, 1, 29, 17, 20, 0, 0, 1, 1, 0, 0, 0]' : 0.179142}
{'[0, 0, 1, 2, 0, 1, 1, 1, 29, 17, 20, 0, 0, 1, 1, 0, 0, 0]' : 0.179175}
{'[0, 0, 1, 2, 0, 1, 1, 1, 29, 17, 20, 0, 0, 1, 1, 0, 0, 0]' : 0.179231}
{'[0, 0, 1, 2, 0, 1, 1, 1, 29, 17, 20, 0, 0, 1, 1, 0, 0, 0]' : 0.179266}
{'[0, 0, 1, 2, 0, 1, 1, 1, 29, 17, 20, 0, 0, 1, 1, 0, 0, 0]' : 0.181374}
{'[0, 0, 1, 2, 0, 1, 1, 1, 29, 17, 20, 0, 0, 1, 1, 0, 0, 0]' : 0.181581}
{'[0, 0, 1, 2, 0, 1, 1, 1, 29, 17, 20, 0, 0, 1, 1, 0, 0, 0]' : 0.181282}
{'[0, 0, 1, 2, 0, 1, 1, 1, 29, 17, 20, 0, 0, 1, 1, 0, 0, 0]' : 0.182405}
{'[0, 0, 1, 2, 0, 1, 1, 1, 29, 17, 20, 0, 0, 1, 1, 0, 0, 0]' : 0.179863}

out:
 ["{'[0, 0, 1, 2, 0, 1, 1, 1, 29, 17, 20, 0, 0, 1, 1, 0, 0, 0]' : 0.179815}", "{'[0, 0, 1, 2, 0, 1, 1, 1, 29, 17, 20, 0, 0, 1, 1, 0, 0, 0]' : 0.179532}", "{'[0, 0, 1, 2, 0, 1, 1, 1, 29, 17, 20, 0, 0, 1, 1, 0, 0, 0]' : 0.195234}", "{'[0, 0, 1, 2, 0, 1, 1, 1, 29, 17, 20, 0, 0, 1, 1, 0, 0, 0]' : 0.213521}", "{'[0, 0, 1, 2, 0, 1, 1, 1, 29, 17, 20, 0, 0, 1, 1, 0, 0, 0]' : 0.179579}", "{'[0, 0, 1, 2, 0, 1, 1, 1, 29, 17, 20, 0, 0, 1, 1, 0, 0, 0]' : 0.17927}", "{'[0, 0, 1, 2, 0, 1, 1, 1, 29, 17, 20, 0, 0, 1, 1, 0, 0, 0]' : 0.180357}", "{'[0, 0, 1, 2, 0, 1, 1, 1, 29, 17, 20, 0, 0, 1, 1, 0, 0, 0]' : 0.179279}", "{'[0, 0, 1, 2, 0, 1, 1, 1, 29, 17, 20, 0, 0, 1, 1, 0, 0, 0]' : 0.179222}", "{'[0, 0, 1, 2, 0, 1, 1, 1, 29, 17, 20, 0, 0, 1, 1, 0, 0, 0]' : 0.179519}", "{'[0, 0, 1, 2, 0, 1, 1, 1, 29, 17, 20, 0, 0, 1, 1, 0, 0, 0]' : 0.179271}", "{'[0, 0, 1, 2, 0, 1, 1, 1, 29, 17, 20, 0, 0, 1, 1, 0, 0, 0]' : 0.179452}", "{'[0, 0, 1, 2, 0, 1, 1, 1, 29, 17, 20, 0, 0, 1, 1, 0, 0, 0]' : 0.179363}", "{'[0, 0, 1, 2, 0, 1, 1, 1, 29, 17, 20, 0, 0, 1, 1, 0, 0, 0]' : 0.179415}", "{'[0, 0, 1, 2, 0, 1, 1, 1, 29, 17, 20, 0, 0, 1, 1, 0, 0, 0]' : 0.179219}", "{'[0, 0, 1, 2, 0, 1, 1, 1, 29, 17, 20, 0, 0, 1, 1, 0, 0, 0]' : 0.179261}", "{'[0, 0, 1, 2, 0, 1, 1, 1, 29, 17, 20, 0, 0, 1, 1, 0, 0, 0]' : 0.179348}", "{'[0, 0, 1, 2, 0, 1, 1, 1, 29, 17, 20, 0, 0, 1, 1, 0, 0, 0]' : 0.180266}", "{'[0, 0, 1, 2, 0, 1, 1, 1, 29, 17, 20, 0, 0, 1, 1, 0, 0, 0]' : 0.179432}", "{'[0, 0, 1, 2, 0, 1, 1, 1, 29, 17, 20, 0, 0, 1, 1, 0, 0, 0]' : 0.179251}", "{'[0, 0, 1, 2, 0, 1, 1, 1, 29, 17, 20, 0, 0, 1, 1, 0, 0, 0]' : 0.179174}", "{'[0, 0, 1, 2, 0, 1, 1, 1, 29, 17, 20, 0, 0, 1, 1, 0, 0, 0]' : 0.179142}", "{'[0, 0, 1, 2, 0, 1, 1, 1, 29, 17, 20, 0, 0, 1, 1, 0, 0, 0]' : 0.179175}", "{'[0, 0, 1, 2, 0, 1, 1, 1, 29, 17, 20, 0, 0, 1, 1, 0, 0, 0]' : 0.179231}", "{'[0, 0, 1, 2, 0, 1, 1, 1, 29, 17, 20, 0, 0, 1, 1, 0, 0, 0]' : 0.179266}", "{'[0, 0, 1, 2, 0, 1, 1, 1, 29, 17, 20, 0, 0, 1, 1, 0, 0, 0]' : 0.181374}", "{'[0, 0, 1, 2, 0, 1, 1, 1, 29, 17, 20, 0, 0, 1, 1, 0, 0, 0]' : 0.181581}", "{'[0, 0, 1, 2, 0, 1, 1, 1, 29, 17, 20, 0, 0, 1, 1, 0, 0, 0]' : 0.181282}", "{'[0, 0, 1, 2, 0, 1, 1, 1, 29, 17, 20, 0, 0, 1, 1, 0, 0, 0]' : 0.182405}", "{'[0, 0, 1, 2, 0, 1, 1, 1, 29, 17, 20, 0, 0, 1, 1, 0, 0, 0]' : 0.179863}"]
returning from 'run': {'[0, 0, 1, 2, 0, 1, 1, 1, 29, 17, 20, 0, 0, 1, 1, 0, 0, 0]': ([0.179815, 0.179532, 0.195234, 0.213521, 0.179579, 0.17927, 0.180357, 0.179279, 0.179222, 0.179519, 0.179271, 0.179452, 0.179363, 0.179415, 0.179219, 0.179261, 0.179348, 0.180266, 0.179432, 0.179251, 0.179174, 0.179142, 0.179175, 0.179231, 0.179266, 0.181374, 0.181581, 0.181282, 0.182405, 0.179863], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.179815, 0.179532, 0.195234, 0.213521, 0.179579, 0.17927, 0.180357, 0.179279, 0.179222, 0.179519, 0.179271, 0.179452, 0.179363, 0.179415, 0.179219, 0.179261, 0.179348, 0.180266, 0.179432, 0.179251, 0.179174, 0.179142, 0.179175, 0.179231, 0.179266, 0.181374, 0.181581, 0.181282, 0.182405, 0.179863], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 1, 2, 0, 1, 1, 1, 29, 17, 20, 0, 0, 1, 1, 0, 0, 0]': ([0.179815, 0.179532, 0.195234, 0.213521, 0.179579, 0.17927, 0.180357, 0.179279, 0.179222, 0.179519, 0.179271, 0.179452, 0.179363, 0.179415, 0.179219, 0.179261, 0.179348, 0.180266, 0.179432, 0.179251, 0.179174, 0.179142, 0.179175, 0.179231, 0.179266, 0.181374, 0.181581, 0.181282, 0.182405, 0.179863], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [6, 1, 1, 0, 2, 5, 1, 0, 15, 0, 9, 14, 0, 1, 1, 0, 1, 0]
Fixed Factors: {}
Testing candidate 5: [6, 1, 1, 0, 2, 5, 1, 0, 15, 0, 9, 14, 0, 1, 1, 0, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		214
        Multiplications: 	64
        Divisions: 		0
        Logical: 		0
        Reads: 			462
        Writes: 		80
        Comparisons:		13
        Gotos: 			0
        
digraph CFG {
	ForLoop481588 [label="ForLoop481588  for (i=0; i<=cbv_1; i=iexpected=9369846271501.798828
actual=9369846271501.798828
+16) {...",shape=box];
	ForLoop481588 -> 481451;
	ForLoop481588 -> _JOIN_481588;
	ForLoop503045 [label="ForLoop503045  for (k=kt; k<=min(ny-1,kk+15)-14; k=k+15) {...",shape=box];
	ForLoop503045 -> 502651;
	ForLoop503045 -> _JOIN_503045;
	ForLoop503171 [label="ForLoop503171  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kt)+1)%15)+1; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop503171 -> 503170;
	ForLoop503171 -> _JOIN_503171;
	489188 [label="489188  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	489188 -> ForLoop490871;
	502651 [label="502651  y[k]=y[k]+A[i*ny+k]*tmp[i];...",shape=box];
	_JOIN_485742 [label="_JOIN_485742None...",shape=box];
	_JOIN_485742 -> ForLoop487056;
	_JOIN_485741 [label="_JOIN_485741None...",shape=box];
	_JOIN_485741 -> _JOIN_485742;
	_JOIN_503171 [label="_JOIN_503171None...",shape=box];
	_JOIN_503171 -> _JOIN_487055;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 481169;
	_JOIN_485056 [label="_JOIN_485056None...",shape=box];
	481451 [label="481451  y[i]=0.0;...",shape=box];
	_JOIN_491405 [label="_JOIN_491405None...",shape=box];
	_JOIN_491405 -> 501904;
	_JOIN_490871 [label="_JOIN_490871None...",shape=box];
	_JOIN_490871 -> _JOIN_485741;
	481656 [label="481656  y[i]=0.0;...",shape=box];
	481656 -> _JOIN_481657;
	481169 [label="481169  int i;...",shape=box];
	503170 [label="503170  y[k]=y[k]+A[i*ny+k]*tmp[i];...",shape=box];
	503170 -> _JOIN_503171;
	ForLoop485056 [label="ForLoop485056  for (ii=0; ii<=nx-1; ii=ii+512) ...",shape=box];
	ForLoop485056 -> ForLoop485055;
	ForLoop485056 -> _JOIN_485056;
	ForLoop485055 [label="ForLoop485055  for (i=ii; i<=min(nx-1,ii+511); i=i+1) {...",shape=box];
	ForLoop485055 -> 484947;
	ForLoop485055 -> _JOIN_485055;
	_JOIN_481588 [label="_JOIN_481588None...",shape=box];
	_JOIN_481588 -> 481842;
	490941 [label="490941  tmp[i]=tmp[i]+A[i*ny+jt]*x_copy[(jt-jj)];...",shape=box];
	ForLoop487055 [label="ForLoop487055  for (kk=kkk; kk<=min(ny-1,kkk+1008); kk=kk+16) {...",shape=box];
	ForLoop487055 -> ForLoop491405;
	ForLoop487055 -> _JOIN_487055;
	ForLoop487056 [label="ForLoop487056  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) ...",shape=box];
	ForLoop487056 -> ForLoop487055;
	ForLoop487056 -> _JOIN_487056;
	484947 [label="484947  tmp[i]=0;...",shape=box];
	484947 -> ForLoop485742;
	491469 [label="491469  y[kt]=y[kt]+A[i*ny+kt]*tmp[i];...",shape=box];
	ForLoop490871 [label="ForLoop490871  for (jt=jj; jt<=min(ny-1,jj+15)-7; jt=jt+8) {...",shape=box];
	ForLoop490871 -> 490941;
	ForLoop490871 -> _JOIN_490871;
	_JOIN_485055 [label="_JOIN_485055None...",shape=box];
	_JOIN_485055 -> _JOIN_485056;
	ForLoop491405 [label="ForLoop491405  for (kt=kk; kt<=min(ny-1,kk+15)-7; kt=kt+8) {...",shape=box];
	ForLoop491405 -> 491469;
	ForLoop491405 -> _JOIN_491405;
	481842 [label="481842  register int cbv_2, cbv_3;...",shape=box];
	489136 [label="489136  double x_copy[16];...",shape=box];
	_JOIN_481657 [label="_JOIN_481657None...",shape=box];
	_JOIN_481657 -> 489136;
	ForLoop485742 [label="ForLoop485742  for (jjj=0; jjj<=ny-1; jjj=jjj+128) ...",shape=box];
	ForLoop485742 -> ForLoop485741;
	ForLoop485742 -> _JOIN_485742;
	ForLoop485741 [label="ForLoop485741  for (jj=jjj; jj<=min(ny-1,jjj+112); jj=jj+16) {...",shape=box];
	ForLoop485741 -> 489188;
	ForLoop485741 -> _JOIN_485741;
	_JOIN_503045 [label="_JOIN_503045None...",shape=box];
	_JOIN_503045 -> ForLoop503171;
	501904 [label="501904  int k;...",shape=box];
	501904 -> ForLoop503045;
	_JOIN_487055 [label="_JOIN_487055None...",shape=box];
	_JOIN_487055 -> _JOIN_487056;
	_JOIN_487056 [label="_JOIN_487056None...",shape=box];
	_JOIN_487056 -> _JOIN_485055;
	ForLoop481657 [label="ForLoop481657  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop481657 -> 481656;
	ForLoop481657 -> _JOIN_481657;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest5.exe __orio_perftest5.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest5.exe  
{'[6, 1, 1, 0, 2, 5, 1, 0, 15, 0, 9, 14, 0, 1, 1, 0, 1, 0]' : 0.184957}
{'[6, 1, 1, 0, 2, 5, 1, 0, 15, 0, 9, 14, 0, 1, 1, 0, 1, 0]' : 0.183847}
{'[6, 1, 1, 0, 2, 5, 1, 0, 15, 0, 9, 14, 0, 1, 1, 0, 1, 0]' : 0.18391}
{'[6, 1, 1, 0, 2, 5, 1, 0, 15, 0, 9, 14, 0, 1, 1, 0, 1, 0]' : 0.183839}
{'[6, 1, 1, 0, 2, 5, 1, 0, 15, 0, 9, 14, 0, 1, 1, 0, 1, 0]' : 0.184122}
{'[6, 1, 1, 0, 2, 5, 1, 0, 15, 0, 9, 14, 0, 1, 1, 0, 1, 0]' : 0.18389}
{'[6, 1, 1, 0, 2, 5, 1, 0, 15, 0, 9, 14, 0, 1, 1, 0, 1, 0]' : 0.183835}
{'[6, 1, 1, 0, 2, 5, 1, 0, 15, 0, 9, 14, 0, 1, 1, 0, 1, 0]' : 0.183908}
{'[6, 1, 1, 0, 2, 5, 1, 0, 15, 0, 9, 14, 0, 1, 1, 0, 1, 0]' : 0.184026}
{'[6, 1, 1, 0, 2, 5, 1, 0, 15, 0, 9, 14, 0, 1, 1, 0, 1, 0]' : 0.183905}
{'[6, 1, 1, 0, 2, 5, 1, 0, 15, 0, 9, 14, 0, 1, 1, 0, 1, 0]' : 0.183855}
{'[6, 1, 1, 0, 2, 5, 1, 0, 15, 0, 9, 14, 0, 1, 1, 0, 1, 0]' : 0.184825}
{'[6, 1, 1, 0, 2, 5, 1, 0, 15, 0, 9, 14, 0, 1, 1, 0, 1, 0]' : 0.184128}
{'[6, 1, 1, 0, 2, 5, 1, 0, 15, 0, 9, 14, 0, 1, 1, 0, 1, 0]' : 0.184218}
{'[6, 1, 1, 0, 2, 5, 1, 0, 15, 0, 9, 14, 0, 1, 1, 0, 1, 0]' : 0.183847}
{'[6, 1, 1, 0, 2, 5, 1, 0, 15, 0, 9, 14, 0, 1, 1, 0, 1, 0]' : 0.183826}
{'[6, 1, 1, 0, 2, 5, 1, 0, 15, 0, 9, 14, 0, 1, 1, 0, 1, 0]' : 0.18389}
{'[6, 1, 1, 0, 2, 5, 1, 0, 15, 0, 9, 14, 0, 1, 1, 0, 1, 0]' : 0.183966}
{'[6, 1, 1, 0, 2, 5, 1, 0, 15, 0, 9, 14, 0, 1, 1, 0, 1, 0]' : 0.183982}
{'[6, 1, 1, 0, 2, 5, 1, 0, 15, 0, 9, 14, 0, 1, 1, 0, 1, 0]' : 0.183876}
{'[6, 1, 1, 0, 2, 5, 1, 0, 15, 0, 9, 14, 0, 1, 1, 0, 1, 0]' : 0.184167}
{'[6, 1, 1, 0, 2, 5, 1, 0, 15, 0, 9, 14, 0, 1, 1, 0, 1, 0]' : 0.184123}
{'[6, 1, 1, 0, 2, 5, 1, 0, 15, 0, 9, 14, 0, 1, 1, 0, 1, 0]' : 0.184939}
{'[6, 1, 1, 0, 2, 5, 1, 0, 15, 0, 9, 14, 0, 1, 1, 0, 1, 0]' : 0.183851}
{'[6, 1, 1, 0, 2, 5, 1, 0, 15, 0, 9, 14, 0, 1, 1, 0, 1, 0]' : 0.183975}
{'[6, 1, 1, 0, 2, 5, 1, 0, 15, 0, 9, 14, 0, 1, 1, 0, 1, 0]' : 0.183845}
{'[6, 1, 1, 0, 2, 5, 1, 0, 15, 0, 9, 14, 0, 1, 1, 0, 1, 0]' : 0.183826}
{'[6, 1, 1, 0, 2, 5, 1, 0, 15, 0, 9, 14, 0, 1, 1, 0, 1, 0]' : 0.183986}
{'[6, 1, 1, 0, 2, 5, 1, 0, 15, 0, 9, 14, 0, 1, 1, 0, 1, 0]' : 0.183896}
{'[6, 1, 1, 0, 2, 5, 1, 0, 15, 0, 9, 14, 0, 1, 1, 0, 1, 0]' : 0.184091}

out:
 ["{'[6, 1, 1, 0, 2, 5, 1, 0, 15, 0, 9, 14, 0, 1, 1, 0, 1, 0]' : 0.184957}", "{'[6, 1, 1, 0, 2, 5, 1, 0, 15, 0, 9, 14, 0, 1, 1, 0, 1, 0]' : 0.183847}", "{'[6, 1, 1, 0, 2, 5, 1, 0, 15, 0, 9, 14, 0, 1, 1, 0, 1, 0]' : 0.18391}", "{'[6, 1, 1, 0, 2, 5, 1, 0, 15, 0, 9, 14, 0, 1, 1, 0, 1, 0]' : 0.183839}", "{'[6, 1, 1, 0, 2, 5, 1, 0, 15, 0, 9, 14, 0, 1, 1, 0, 1, 0]' : 0.184122}", "{'[6, 1, 1, 0, 2, 5, 1, 0, 15, 0, 9, 14, 0, 1, 1, 0, 1, 0]' : 0.18389}", "{'[6, 1, 1, 0, 2, 5, 1, 0, 15, 0, 9, 14, 0, 1, 1, 0, 1, 0]' : 0.183835}", "{'[6, 1, 1, 0, 2, 5, 1, 0, 15, 0, 9, 14, 0, 1, 1, 0, 1, 0]' : 0.183908}", "{'[6, 1, 1, 0, 2, 5, 1, 0, 15, 0, 9, 14, 0, 1, 1, 0, 1, 0]' : 0.184026}", "{'[6, 1, 1, 0, 2, 5, 1, 0, 15, 0, 9, 14, 0, 1, 1, 0, 1, 0]' : 0.183905}", "{'[6, 1, 1, 0, 2, 5, 1, 0, 15, 0, 9, 14, 0, 1, 1, 0, 1, 0]' : 0.183855}", "{'[6, 1, 1, 0, 2, 5, 1, 0, 15, 0, 9, 14, 0, 1, 1, 0, 1, 0]' : 0.184825}", "{'[6, 1, 1, 0, 2, 5, 1, 0, 15, 0, 9, 14, 0, 1, 1, 0, 1, 0]' : 0.184128}", "{'[6, 1, 1, 0, 2, 5, 1, 0, 15, 0, 9, 14, 0, 1, 1, 0, 1, 0]' : 0.184218}", "{'[6, 1, 1, 0, 2, 5, 1, 0, 15, 0, 9, 14, 0, 1, 1, 0, 1, 0]' : 0.183847}", "{'[6, 1, 1, 0, 2, 5, 1, 0, 15, 0, 9, 14, 0, 1, 1, 0, 1, 0]' : 0.183826}", "{'[6, 1, 1, 0, 2, 5, 1, 0, 15, 0, 9, 14, 0, 1, 1, 0, 1, 0]' : 0.18389}", "{'[6, 1, 1, 0, 2, 5, 1, 0, 15, 0, 9, 14, 0, 1, 1, 0, 1, 0]' : 0.183966}", "{'[6, 1, 1, 0, 2, 5, 1, 0, 15, 0, 9, 14, 0, 1, 1, 0, 1, 0]' : 0.183982}", "{'[6, 1, 1, 0, 2, 5, 1, 0, 15, 0, 9, 14, 0, 1, 1, 0, 1, 0]' : 0.183876}", "{'[6, 1, 1, 0, 2, 5, 1, 0, 15, 0, 9, 14, 0, 1, 1, 0, 1, 0]' : 0.184167}", "{'[6, 1, 1, 0, 2, 5, 1, 0, 15, 0, 9, 14, 0, 1, 1, 0, 1, 0]' : 0.184123}", "{'[6, 1, 1, 0, 2, 5, 1, 0, 15, 0, 9, 14, 0, 1, 1, 0, 1, 0]' : 0.184939}", "{'[6, 1, 1, 0, 2, 5, 1, 0, 15, 0, 9, 14, 0, 1, 1, 0, 1, 0]' : 0.183851}", "{'[6, 1, 1, 0, 2, 5, 1, 0, 15, 0, 9, 14, 0, 1, 1, 0, 1, 0]' : 0.183975}", "{'[6, 1, 1, 0, 2, 5, 1, 0, 15, 0, 9, 14, 0, 1, 1, 0, 1, 0]' : 0.183845}", "{'[6, 1, 1, 0, 2, 5, 1, 0, 15, 0, 9, 14, 0, 1, 1, 0, 1, 0]' : 0.183826}", "{'[6, 1, 1, 0, 2, 5, 1, 0, 15, 0, 9, 14, 0, 1, 1, 0, 1, 0]' : 0.183986}", "{'[6, 1, 1,WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
 0, 2, 5, 1, 0, 15, 0, 9, 14, 0, 1, 1, 0, 1, 0]' : 0.183896}", "{'[6, 1, 1, 0, 2, 5, 1, 0, 15, 0, 9, 14, 0, 1, 1, 0, 1, 0]' : 0.184091}"]
returning from 'run': {'[6, 1, 1, 0, 2, 5, 1, 0, 15, 0, 9, 14, 0, 1, 1, 0, 1, 0]': ([0.184957, 0.183847, 0.18391, 0.183839, 0.184122, 0.18389, 0.183835, 0.183908, 0.184026, 0.183905, 0.183855, 0.184825, 0.184128, 0.184218, 0.183847, 0.183826, 0.18389, 0.183966, 0.183982, 0.183876, 0.184167, 0.184123, 0.184939, 0.183851, 0.183975, 0.183845, 0.183826, 0.183986, 0.183896, 0.184091], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.184957, 0.183847, 0.18391, 0.183839, 0.184122, 0.18389, 0.183835, 0.183908, 0.184026, 0.183905, 0.183855, 0.184825, 0.184128, 0.184218, 0.183847, 0.183826, 0.18389, 0.183966, 0.183982, 0.183876, 0.184167, 0.184123, 0.184939, 0.183851, 0.183975, 0.183845, 0.183826, 0.183986, 0.183896, 0.184091], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[6, 1, 1, 0, 2, 5, 1, 0, 15, 0, 9, 14, 0, 1, 1, 0, 1, 0]': ([0.184957, 0.183847, 0.18391, 0.183839, 0.184122, 0.18389, 0.183835, 0.183908, 0.184026, 0.183905, 0.183855, 0.184825, 0.184128, 0.184218, 0.183847, 0.183826, 0.18389, 0.183966, 0.183982, 0.183876, 0.184167, 0.184123, 0.184939, 0.183851, 0.183975, 0.183845, 0.183826, 0.183986, 0.183896, 0.184091], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [3, 5, 0, 1, 0, 1, 0, 0, 23, 2, 0, 16, 2, 0, 0, 1, 1, 0]
Fixed Factors: {}
Testing candidate 6: [3, 5, 0, 1, 0, 1, 0, 0, 23, 2, 0, 16, 2, 0, 0, 1, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	4
        Additions: 		2854
        Multiplications: 	1368
        Divisions: 		0
        Logical: 		0
        Reads: 			5543
        Writes: 		941
        Comparisons:		21
        Gotos: 			0
        
digraph CFG {
	ForLoop507831 [label="ForLoop507831  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop507831 -> 507830;
	ForLoop507831 -> _JOIN_507831;
	_JOIN_686713 [label="_JOIN_686713None...",shape=box];
	_JOIN_686713 -> 755915;
	686153 [label="686153  int k;...",shape=box];
	686153 -> ForLoop686643;
	745335 [label="745335  tmp[(it+21)]=scv_20;...",shape=box];
	713753 [label="713753  double scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8, scv_9;...",shape=box];
	749657 [label="749657  double scv_70;...",shape=box];
	ForLoop685908 [label="ForLoop685908  for (k=kkk; k<=min(ny-1,kkk+63)-16; k=k+17) {...",shape=box];
	ForLoop685908 -> 749092;
	ForLoop685908 -> _JOIN_685908;
	745317 [label="745317  double scv_20, scv_21, scv_22, scv_23, scv_24, scv_25, scv_26, scv_27;...",shape=box];
	746699 [label="746699  double scv_52;...",shape=box];
	_JOIN_686139 [label="_JOIN_686139None...",shape=box];
	_JOIN_686139 -> ForLoop686713;
	ForLoop686138 [label="ForLoop686138  for (j=jj; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop686138 -> 686137;
	ForLoop686138 -> _JOIN_686138;
	ForLoop686139 [label="ForLoop686139  for (jj=0; jj<=ny-1; jj=jj+256) {...",shape=box];
	ForLoop686139 -> ForLoop686138;
	ForLoop686139 -> _JOIN_686139;
	755903 [label="755903  double scv_92;...",shape=box];
	ForLoop684260 [label="ForLoop684260  for (j=jj; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop684260 -> 746699;
	ForLoop684260 -> _JOIN_684260;
	ForLoop684262 [label="ForLoop684262  for (jj=0; jj<=ny-1; jj=jj+256) {...",shape=box];
	ForLoop684262 -> ForLoop684260;
	ForLoop684262 -> _JOIN_684262;
	684276 [label="684276  int k;...",shape=box];
	664058 [label="664058  double x_copy;...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 507151;
	688160 [label="688160  double scv_1;...",shape=box];
	ForLoop686643 [label="ForLoop686643  for (k=kkk; k<=min(ny-1,kkk+63)-16; k=k+17) {...",shape=box];
	ForLoop686643 -> 753922;
	ForLoop686643 -> _JOIN_686643;
	507830 [label="507830  y[i]=0.0;...",shape=box];
	507830 -> _JOIN_507831;
	_JOIN_665050 [label="_JOIN_665050None...",shape=box];
	_JOIN_665050 -> _JOIN_665051;
	_JOIN_507762 [label="_JOIN_507762None...",shape=box];
	_JOIN_507762 -> 508088;
	_JOIN_686718 [label="_JOIN_686718None...",shape=box];
	ForLoop683225 [label="ForLoop683225  for (k=kkk; k<=min(ny-1,kkk+63)-16; k=k+17) {...",shape=box];
	ForLoop683225 -> 713753;
	ForLoop683225 -> _JOIN_683225;
	ForLoop684100 [label="ForLoop684100  for (k=(min(ny-1,kkk+63))-(((min(ny-1,kkk+63))-(kkk)+1)%17)+1; k<=min(ny-1,kkk+63); k=k+1) {...",shape=box];
	ForLoop684100 -> 716348;
	ForLoop684100 -> _JOIN_684100;
	684105 [label="684105  int i;...",shape=box];
	684105 -> ForLoop686033;
	_JOIN_686711 [label="_JOIN_686711None...",shape=box];
	_JOIN_686711 -> _JOIN_686713;
	_JOIN_686715 [label="_JOIN_686715None...",shape=box];
	_JOIN_686715 -> _JOIN_686718;
	686137 [label="686137  scv_92=scv_92+A[i*ny+j]*x[j];...",shape=box];
	686137 -> _JOIN_686138;
	_JOIN_683225 [label="_JOIN_683225None...",shape=box];
	_JOIN_683225 -> ForLoop684100;
	755915 [label="755915  tmp[i]=scv_92;...",shape=box];
	755915 -> _JOIN_686715;
	ForLoop684102 [label="ForLoop684102  for (kkk=0; kkk<=ny-1; kkk=kkk+64) {...",shape=box];
	ForLoop684102 -> 665065;
	ForLoop684102 -> _JOIN_684102;
	_JOIN_507831 [label="_JOIN_507831None...",shape=box];
	_JOIN_507831 -> 664058;
	ForLoop684104 [label="ForLoop684104  for (it=ii; it<=min(nx-1,ii+63)-31; it=it+32) {...",shape=box];
	ForLoop684104 -> 745317;
	ForLoop684104 -> _JOIN_684104;
	_JOIN_685908 [label="_JOIN_685908None...",shape=box];
	_JOIN_685908 -> ForLoop686029;
	507151 [label="507151  int i;...",shape=box];
	753922 [label="753922  double scv_74, scv_75, scv_76, scv_77, scv_78, scv_79, scv_80, scv_81;...",shape=box];
	ForLoop686715 [label="ForLoop686715  for (i=(min(nx-1,ii+63))-(((min(nx-1,ii+63))-(it)+1)%3)+1; i<=min(nx-1,ii+63); i=i+1) {...",shape=box];
	ForLoop686715 -> 755903;
	ForLoop686715 -> _JOIN_686715;
	ForLoop686713 [label="ForLoop686713  for (kkk=0; kkk<=ny-1; kkk=kkk+64) {...",shape=box];
	ForLoop686713 -> 686153;
	ForLoop686713 -> _JOIN_686713;
	665065 [label="665065  int k;...",shape=box];
	665065 -> ForLoop683225;
	ForLoop686029 [label="ForLoop686029  for (k=(min(ny-1,kkk+63))-(((min(ny-1,kkk+63))-(kkk)+1)%17)+1; k<=min(ny-1,kkk+63); k=k+1) {...",shape=box];
	ForLoop686029 -> 749657;
	ForLoop686029 -> _JOIN_686029;
	507553 [label="507553  y[i]=0.0;...",shape=box];
	ForLoop665050 [label="ForLoop665050  for (j=jj; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop665050 -> 688160;
	ForLoop665050 -> _JOIN_665050;
	ForLoop665051 [label="ForLoop665051  for (jj=0; jj<=ny-1; jj=jj+256) {...",shape=box];
	ForLoop665051 -> ForLoop665050;
	ForLoop665051 -> _JOIN_665051;
	_JOIN_686138 [label="_JOIN_686138None...",shape=box];
	_JOIN_686138 -> _JOIN_686139;
	ForLoop686718 [label="ForLoop686718  for (ii=0; ii<=nx-1; ii=ii+64) {...",shape=box];
	ForLoop686718 -> ForLoop684104;
	ForLoop686718 -> _JOIN_686718;
	_JOIN_686029 [label="_JOIN_686029None...",shape=box];
	_JOIN_686029 -> _JOIN_686031;
	508088 [label="508088  register int cbv_2, cbv_3;...",shape=box];
	753001 [label="753001  tmp[(i+2)]=scv_71;...",shape=box];
	716348 [label="716348  double scv_19;...",shape=box];
	ForLoop686711 [label="ForLoop686711  for (k=(min(ny-1,kkk+63))-(((min(ny-1,kkk+63))-(kkk)+1)%17)+1; k<=min(ny-1,kkk+63); k=k+1) {...",shape=box];
	ForLoop686711 -> 754346;
	ForLoop686711 -> _JOIN_686711;
	_JOIN_665051 [label="_JOIN_665051None...",shape=box];
	_JOIN_665051 -> ForLoop684102;
	_JOIN_686033 [label="_JOIN_686033None...",shape=box];
	_JOIN_686033 -> ForLoop686715;
	749092 [label="749092  double scv_53, scv_54, scv_55, scv_56, scv_57, scv_58, scv_59, scv_60;...",shape=box];
	_JOIN_686031 [label="_JOIN_686031None...",shape=box];
	_JOIN_686031 -> 753001;
	ForLoop507762 [label="ForLoop507762  for (i=0; i<=cbv_1; i=i+24) {...",shape=box];
	ForLoop507762 -> 507553;
	ForLoop507762 -> _JOIN_507762;
	754346 [label="754346  double scv_91expected=9369846271501.798828
actual=9369846271501.798828
;...",shape=box];
	_JOIN_684104 [label="_JOIN_684104None...",shape=box];
	_JOIN_684104 -> 684105;
	_JOIN_686643 [label="_JOIN_686643None...",shape=box];
	_JOIN_686643 -> ForLoop686711;
	ForLoop686033 [label="ForLoop686033  for (i=it; i<=min(nx-1,ii+63)-2; i=i+3) {...",shape=box];
	ForLoop686033 -> 752983;
	ForLoop686033 -> _JOIN_686033;
	_JOIN_684100 [label="_JOIN_684100None...",shape=box];
	_JOIN_684100 -> _JOIN_684102;
	ForLoop686031 [label="ForLoop686031  for (kkk=0; kkk<=ny-1; kkk=kkk+64) {...",shape=box];
	ForLoop686031 -> 684276;
	ForLoop686031 -> _JOIN_686031;
	_JOIN_684102 [label="_JOIN_684102None...",shape=box];
	_JOIN_684102 -> 745335;
	752983 [label="752983  double scv_71, scv_72, scv_73;...",shape=box];
	_JOIN_684260 [label="_JOIN_684260None...",shape=box];
	_JOIN_684260 -> _JOIN_684262;
	_JOIN_684262 [label="_JOIN_684262None...",shape=box];
	_JOIN_684262 -> ForLoop686031;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest6.exe __orio_perftest6.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest6.exe  
{'[3, 5, 0, 1, 0, 1, 0, 0, 23, 2, 0, 16, 2, 0, 0, 1, 1, 0]' : 0.179535}
{'[3, 5, 0, 1, 0, 1, 0, 0, 23, 2, 0, 16, 2, 0, 0, 1, 1, 0]' : 0.179725}
{'[3, 5, 0, 1, 0, 1, 0, 0, 23, 2, 0, 16, 2, 0, 0, 1, 1, 0]' : 0.178866}
{'[3, 5, 0, 1, 0, 1, 0, 0, 23, 2, 0, 16, 2, 0, 0, 1, 1, 0]' : 0.178957}
{'[3, 5, 0, 1, 0, 1, 0, 0, 23, 2, 0, 16, 2, 0, 0, 1, 1, 0]' : 0.178886}
{'[3, 5, 0, 1, 0, 1, 0, 0, 23, 2, 0, 16, 2, 0, 0, 1, 1, 0]' : 0.178758}
{'[3, 5, 0, 1, 0, 1, 0, 0, 23, 2, 0, 16, 2, 0, 0, 1, 1, 0]' : 0.179343}
{'[3, 5, 0, 1, 0, 1, 0, 0, 23, 2, 0, 16, 2, 0, 0, 1, 1, 0]' : 0.179094}
{'[3, 5, 0, 1, 0, 1, 0, 0, 23, 2, 0, 16, 2, 0, 0, 1, 1, 0]' : 0.179258}
{'[3, 5, 0, 1, 0, 1, 0, 0, 23, 2, 0, 16, 2, 0, 0, 1, 1, 0]' : 0.178983}
{'[3, 5, 0, 1, 0, 1, 0, 0, 23, 2, 0, 16, 2, 0, 0, 1, 1, 0]' : 0.178795}
{'[3, 5, 0, 1, 0, 1, 0, 0, 23, 2, 0, 16, 2, 0, 0, 1, 1, 0]' : 0.178929}
{'[3, 5, 0, 1, 0, 1, 0, 0, 23, 2, 0, 16, 2, 0, 0, 1, 1, 0]' : 0.179989}
{'[3, 5, 0, 1, 0, 1, 0, 0, 23, 2, 0, 16, 2, 0, 0, 1, 1, 0]' : 0.178767}
{'[3, 5, 0, 1, 0, 1, 0, 0, 23, 2, 0, 16, 2, 0, 0, 1, 1, 0]' : 0.178898}
{'[3, 5, 0, 1, 0, 1, 0, 0, 23, 2, 0, 16, 2, 0, 0, 1, 1, 0]' : 0.178806}
{'[3, 5, 0, 1, 0, 1, 0, 0, 23, 2, 0, 16, 2, 0, 0, 1, 1, 0]' : 0.179346}
{'[3, 5, 0, 1, 0, 1, 0, 0, 23, 2, 0, 16, 2, 0, 0, 1, 1, 0]' : 0.17906}
{'[3, 5, 0, 1, 0, 1, 0, 0, 23, 2, 0, 16, 2, 0, 0, 1, 1, 0]' : 0.17886}
{'[3, 5, 0, 1, 0, 1, 0, 0, 23, 2, 0, 16, 2, 0, 0, 1, 1, 0]' : 0.179465}
{'[3, 5, 0, 1, 0, 1, 0, 0, 23, 2, 0, 16, 2, 0, 0, 1, 1, 0]' : 0.178583}
{'[3, 5, 0, 1, 0, 1, 0, 0, 23, 2, 0, 16, 2, 0, 0, 1, 1, 0]' : 0.179357}
{'[3, 5, 0, 1, 0, 1, 0, 0, 23, 2, 0, 16, 2, 0, 0, 1, 1, 0]' : 0.178744}
{'[3, 5, 0, 1, 0, 1, 0, 0, 23, 2, 0, 16, 2, 0, 0, 1, 1, 0]' : 0.179663}
{'[3, 5, 0, 1, 0, 1, 0, 0, 23, 2, 0, 16, 2, 0, 0, 1, 1, 0]' : 0.178769}
{'[3, 5, 0, 1, 0, 1, 0, 0, 23, 2, 0, 16, 2, 0, 0, 1, 1, 0]' : 0.179858}
{'[3, 5, 0, 1, 0, 1, 0, 0, 23, 2, 0, 16, 2, 0, 0, 1, 1, 0]' : 0.178941}
{'[3, 5, 0, 1, 0, 1, 0, 0, 23, 2, 0, 16, 2, 0, 0, 1, 1, 0]' : 0.178546}
{'[3, 5, 0, 1, 0, 1, 0, 0, 23, 2, 0, 16, 2, 0, 0, 1, 1, 0]' : 0.178936}
{'[3, 5, 0, 1, 0, 1, 0, 0, 23, 2, 0, 16, 2, 0, 0, 1, 1, 0]' : 0.179197}

out:
 ["{'[3, 5, 0, 1, 0, 1, 0, 0, 23, 2, 0, 16, 2, 0, 0, 1, 1, 0]' : 0.179535}", "{'[3, 5, 0, 1, 0, 1, 0, 0, 23, 2, 0, 16, 2, 0, 0, 1, 1, 0]' : 0.179725}", "{'[3, 5, 0, 1, 0, 1, 0, 0, 23, 2, 0, 16, 2, 0, 0, 1, 1, 0]' : 0.178866}", "{'[3, 5, 0, 1, 0, 1, 0, 0, 23, 2, 0, 16, 2, 0, 0, 1, 1, 0]' : 0.178957}", "{'[3, 5, 0, 1, 0, 1, 0, 0, 23, 2, 0, 16, 2, 0, 0, 1, 1, 0]' : 0.178886}", "{'[3, 5, 0, 1, 0, 1, 0, 0, 23, 2, 0, 16, 2, 0, 0, 1, 1, 0]' : 0.178758}", "{'[3, 5, 0, 1, 0, 1, 0, 0, 23, 2, 0, 16, 2, 0, 0, 1, 1, 0]' : 0.179343}", "{'[3, 5, 0, 1, 0, 1, 0, 0, 23, 2, 0, 16, 2, 0, 0, 1, 1, 0]' : 0.179094}", "{'[3, 5, 0, 1, 0, 1, 0, 0, 23, 2, 0, 16, 2, 0, 0, 1, 1, 0]' : 0.179258}", "{'[3, 5, 0, 1, 0, 1, 0, 0, 23, 2, 0, 16, 2, 0, 0, 1, 1, 0]' : 0.178983}", "{'[3, 5, 0, 1, 0, 1, 0, 0, 23, 2, 0, 16, 2, 0, 0, 1, 1, 0]' : 0.178795}", "{'[3, 5, 0, 1, 0, 1, 0, 0, 23, 2, 0, 16, 2, 0, 0, 1, 1, 0]' : 0.178929}", "{'[3, 5, 0, 1, 0, 1, 0, 0, 23, 2, 0, 16, 2, 0, 0, 1, 1, 0]' : 0.179989}", "{'[3, 5, 0, 1, 0, 1, 0, 0, 23, 2, 0, 16, 2, 0, 0, 1, 1, 0]' : 0.178767}", "{'[3, 5, 0, 1, 0, 1, 0, 0, 23, 2, 0, 16, 2, 0, 0, 1, 1, 0]' : 0.178898}", "{'[3, 5, 0, 1, 0, 1, 0, 0, 23, 2, 0, 16, 2, 0, 0, 1, 1, 0]' : 0.178806}", "{'[3, 5, 0, 1, 0, 1, 0, 0, 23, 2, 0, 16, 2, 0, 0, 1, 1, 0]' : 0.179346}", "{'[3, 5, 0, 1, 0, 1, 0, 0, 23, 2, 0, 16, 2, 0, 0, 1, 1, 0]' : 0.17906}", "{'[3, 5, 0, 1, 0, 1, 0, 0, 23, 2, 0, 16, 2, 0, 0, 1, 1, 0]' : 0.17886}", "{'[3, 5, 0, 1, 0, 1, 0, 0, 23, 2, 0, 16, 2, 0, 0, 1, 1, 0]' : 0.179465}", "{'[3, 5, 0, 1, 0, 1, 0, 0, 23, 2, 0, 16, 2, 0, 0, 1, 1, 0]' : 0.178583}", "{'[3, 5, 0, 1, 0, 1, 0, 0, 23, 2, 0, 16, 2, 0, 0, 1, 1, 0]' : 0.179357}", "{'[3, 5, 0, 1, 0, 1, 0, 0, 23, 2, 0, 16, 2, 0, 0, 1, 1, 0]' : 0.178744}", "{'[3, 5, 0, 1, 0, 1, 0, 0, 23, 2, 0, 16, 2, 0, 0, 1, 1, 0]' : 0.179663}", "{'[3, 5, 0, 1, 0, 1, 0, 0, 23, 2, 0, 16, 2, 0, 0, 1, 1, 0]' : 0.178769}", "{'[3, 5, 0, 1, 0, 1, 0, 0, 23, 2, 0, 16, 2, 0, 0, 1, 1, 0]' : 0.179858}", "{'[3, 5, 0, 1, 0, 1, 0, 0, 23, 2, 0, 16, 2, 0, 0, 1, 1, 0]' : 0.178941}", "{'[3, 5, 0, 1, 0, 1, 0, 0, 23, 2, 0, 16, 2, 0, 0, 1, 1, 0]' : 0.178546}", "{'[3, 5, 0, 1, 0, 1, 0, 0, 23, 2, 0, 16, 2, 0, 0, 1, 1, 0]' : 0.178936}", "{'[3, 5, 0, 1, 0, 1, 0, 0, 23, 2, 0, 16, 2, 0, 0, 1, 1, 0]' : 0.179197}"]
returning from 'run': {'[3, 5, 0, 1, 0, 1, 0, 0, 23, 2, 0, 16, 2, 0, 0, 1, 1, 0]': ([0.179535, 0.179725, 0.178866, 0.178957, 0.178886, 0.178758, 0.179343, 0.179094, 0.179258, 0.178983, 0.178795, 0.178929, 0.179989, 0.178767, 0.178898, 0.178806, 0.179346, 0.17906, 0.17886, 0.179465, 0.178583, 0.179357, 0.178744, 0.179663, 0.178769, 0.179858, 0.178941, 0.178546, 0.178936, 0.179197], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.179535, 0.179725, 0.178866, 0.178957, 0.178886, 0.178758, 0.179343, 0.179094, 0.179258, 0.178983, 0.178795, 0.178929, 0.179989, 0.178767, 0.178898, 0.178806, 0.179346, 0.17906, 0.17886, 0.179465, 0.178583, 0.179357, 0.178744, 0.179663, 0.178769, 0.179858, 0.178941, 0.178546, 0.178936, 0.179197], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[3, 5, 0, 1, 0, 1, 0, 0, 23, 2, 0, 16, 2, 0, 0, 1, 1, 0]': ([0.179535, 0.179725, 0.178866, 0.178957, 0.178886, 0.178758, 0.179343, 0.179094, 0.179258, 0.178983, 0.178795, 0.178929, 0.179989, 0.178767, 0.178898, 0.178806, 0.179346, 0.17906, 0.17886, 0.179465, 0.178583, 0.179357, 0.178744, 0.179663, 0.178769, 0.179858, 0.178941, 0.178546, 0.178936, 0.179197], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [5, 3, 5, 4, 4, 0, 0, 1, 19, 0, 16, 22, 0, 2, 0, 1, 0, 1]
Fixed Factors: {}
Testing candidate 7: [5, 3, 5, 4, 4, 0, 0, 1, 19, 0, 16, 22, 0, 2, 0, 1, 0, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	6
        Additions: 		441
        Multiplications: 	148
        Divisions: 		0
        Logical: 		0
        Reads: 			938
        Writes: 		185
        Comparisons:		15
        Gotos: 			0
        
digraph CFG {
	ForLoop818035 [label="ForLoop818035  for (j=jt; j<=cbv_2; j=j+17) {...",shape=box];
	ForLoop818035 -> 817633;
	ForLoop818035 -> _JOIN_818035;
	_JOIN_819016 [label="_JOIN_819016None...",shape=box];
	836257 [label="836257  register int cbv_6, cbv_7;...",shape=box];
	816657 [label="816657  double x_copy;...",shape=box];
	_JOIN_817592 [label="_JOIN_817592None...",shape=box];
	_JOIN_817592 -> 817593;
	_JOIN_818904 [label="_JOIN_818904None...",shape=box];
	_JOIN_818904 -> 836257;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 770876;
	ForLoop818904 [label="ForLoop818904  for (k=kk; k<=cbv_5; k=k+23) {...",shape=box];
	ForLoop818904 -> 825014;
	ForLoop81890expected=9369846271501.798828
actual=9369846271501.798828
4 -> _JOIN_818904;
	_JOIN_819012 [label="_JOIN_819012None...",shape=box];
	_JOIN_819012 -> 829312;
	ForLoop817592 [label="ForLoop817592  for (jt=jj; jt<=cbv_1; jt=jt+32) {...",shape=box];
	ForLoop817592 -> 816784;
	ForLoop817592 -> _JOIN_817592;
	_JOIN_818035 [label="_JOIN_818035None...",shape=box];
	_JOIN_818035 -> 835227;
	818102 [label="818102  scv_25=scv_25+A[i*ny+j]*x[j];...",shape=box];
	818102 -> _JOIN_818103;
	829312 [label="829312  tmp[i]=scv_25;...",shape=box];
	829312 -> _JOIN_819014;
	ForLoop771391 [label="ForLoop771391  for (i=0; i<=ny-20; i=i+20) {...",shape=box];
	ForLoop771391 -> 771218;
	ForLoop771391 -> _JOIN_771391;
	_JOIN_819014 [label="_JOIN_819014None...",shape=box];
	_JOIN_819014 -> _JOIN_819015;
	771218 [label="771218  y[i]=0.0;...",shape=box];
	ForLoop818103 [label="ForLoop818103  for (j=cbv_3; j<=cbv_4; j=j+1) {...",shape=box];
	ForLoop818103 -> 818102;
	ForLoop818103 -> _JOIN_818103;
	ForLoop818106 [label="ForLoop818106  for (jj=jjj; jj<=min(ny-1,jjj+448); jj=jj+64) {...",shape=box];
	ForLoop818106 -> 834766;
	ForLoop818106 -> _JOIN_818106;
	ForLoop818107 [label="ForLoop818107  for (jjj=0; jjj<=ny-1; jjj=jjj+512) {...",shape=box];
	ForLoop818107 -> ForLoop818106;
	ForLoop818107 -> _JOIN_818107;
	819010 [label="819010  for (k=kk; k<=min(ny-1,kk+255); k=k+1) ...",shape=box];
	819010 -> _JOIN_819012;
	_JOIN_818978 [label="_JOIN_818978None...",shape=box];
	_JOIN_818978 -> 819010;
	_JOIN_771460 [label="_JOIN_771460None...",shape=box];
	_JOIN_771460 -> 816657;
	_JOIN_771391 [label="_JOIN_771391None...",shape=box];
	_JOIN_771391 -> ForLoop771460;
	_JOIN_818107 [label="_JOIN_818107None...",shape=box];
	_JOIN_818107 -> ForLoop819012;
	835227 [label="835227  register int cbv_3, cbv_4;...",shape=box];
	834766 [label="834766  register int cbv_1;...",shape=box];
	818151 [label="818151  for (k=kk; k<=min(ny-1,kk+255); k=k+1) ...",shape=box];
	825667 [label="825667  double scv_24;...",shape=box];
	816784 [label="816784  scv_25=scv_25+A[i*ny+jt]*x[jt];...",shape=box];
	817593 [label="817593  int j;...",shape=box];
	_JOIN_819015 [label="_JOIN_819015None...",shape=box];
	_JOIN_819015 -> _JOIN_819016;
	829300 [label="829300  double scv_25;...",shape=box];
	ForLoop818978 [label="ForLoop818978  for (k=cbv_6; k<=cbv_7; k=k+1) {...",shape=box];
	ForLoop818978 -> 825667;
	ForLoop818978 -> _JOIN_818978;
	825014 [label="825014  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	ForLoop771460 [label="ForLoop771460  for (i=ny-((ny-(0))%20); i<=ny-1; i=i+1) ...",shape=box];
	ForLoop771460 -> 771459;
	ForLoop771460 -> _JOIN_771460;
	ForLoop819012 [label="ForLoop819012  for (kk=0; kk<=ny-1; kk=kk+256) {...",shape=box];
	ForLoop819012 -> 818151;
	ForLoop819012 -> _JOIN_819012;
	817633 [label="817633  scv_25=scv_25+A[i*ny+j]*x[j];...",shape=box];
	770876 [label="770876  int i;...",shape=box];
	770876 -> ForLoop771391;
	ForLoop819016 [label="ForLoop819016  for (iii=0; iii<=nx-1; iii=iii+512) {...",shape=box];
	ForLoop819016 -> ForLoop819015;
	ForLoop819016 -> _JOIN_819016;
	ForLoop819015 [label="ForLoop819015  for (ii=iii; ii<=min(nx-1,iii+256); ii=ii+256) {...",shape=box];
	ForLoop819015 -> ForLoop819014;
	ForLoop819015 -> _JOIN_819015;
	ForLoop819014 [label="ForLoop819014  for (i=ii; i<=min(nx-1,ii+255); i=i+1) {...",shape=box];
	ForLoop819014 -> 829300;
	ForLoop819014 -> _JOIN_819014;
	_JOIN_818103 [label="_JOIN_818103None...",shape=box];
	_JOIN_818103 -> _JOIN_818106;
	_JOIN_818106 [label="_JOIN_818106None...",shape=box];
	_JOIN_818106 -> _JOIN_818107;
	771459 [label="771459  y[i]=0.0;...",shape=box];
	771459 -> _JOIN_771460;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest7.exe __orio_perftest7.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest7.exe  
{'[5, 3, 5, 4, 4, 0, 0, 1, 19, 0, 16, 22, 0, 2, 0, 1, 0, 1]' : 0.167406}
{'[5, 3, 5, 4, 4, 0, 0, 1, 19, 0, 16, 22, 0, 2, 0, 1, 0, 1]' : 0.16757}
{'[5, 3, 5, 4, 4, 0, 0, 1, 19, 0, 16, 22, 0, 2, 0, 1, 0, 1]' : 0.167613}
{'[5, 3, 5, 4, 4, 0, 0, 1, 19, 0, 16, 22, 0, 2, 0, 1, 0, 1]' : 0.167365}
{'[5, 3, 5, 4, 4, 0, 0, 1, 19, 0, 16, 22, 0, 2, 0, 1, 0, 1]' : 0.167388}
{'[5, 3, 5, 4, 4, 0, 0, 1, 19, 0, 16, 22, 0, 2, 0, 1, 0, 1]' : 0.167311}
{'[5, 3, 5, 4, 4, 0, 0, 1, 19, 0, 16, 22, 0, 2, 0, 1, 0, 1]' : 0.168363}
{'[5, 3, 5, 4, 4, 0, 0, 1, 19, 0, 16, 22, 0, 2, 0, 1, 0, 1]' : 0.167366}
{'[5, 3, 5, 4, 4, 0, 0, 1, 19, 0, 16, 22, 0, 2, 0, 1, 0, 1]' : 0.167364}
{'[5, 3, 5, 4, 4, 0, 0, 1, 19, 0, 16, 22, 0, 2, 0, 1, 0, 1]' : 0.167364}
{'[5, 3, 5, 4, 4, 0, 0, 1, 19, 0, 16, 22, 0, 2, 0, 1, 0, 1]' : 0.167371}
{'[5, 3, 5, 4, 4, 0, 0, 1, 19, 0, 16, 22, 0, 2, 0, 1, 0, 1]' : 0.167639}
{'[5, 3, 5, 4, 4, 0, 0, 1, 19, 0, 16, 22, 0, 2, 0, 1, 0, 1]' : 0.167468}
{'[5, 3, 5, 4, 4, 0, 0, 1, 19, 0, 16, 22, 0, 2, 0, 1, 0, 1]' : 0.167452}
{'[5, 3, 5, 4, 4, 0, 0, 1, 19, 0, 16, 22, 0, 2, 0, 1, 0, 1]' : 0.167374}
{'[5, 3, 5, 4, 4, 0, 0, 1, 19, 0, 16, 22, 0, 2, 0, 1, 0, 1]' : 0.167362}
{'[5, 3, 5, 4, 4, 0, 0, 1, 19, 0, 16, 22, 0, 2, 0, 1, 0, 1]' : 0.167357}
{'[5, 3, 5, 4, 4, 0, 0, 1, 19, 0, 16, 22, 0, 2, 0, 1, 0, 1]' : 0.167404}
{'[5, 3, 5, 4, 4, 0, 0, 1, 19, 0, 16, 22, 0, 2, 0, 1, 0, 1]' : 0.168383}
{'[5, 3, 5, 4, 4, 0, 0, 1, 19, 0, 16, 22, 0, 2, 0, 1, 0, 1]' : 0.167731}
{'[5, 3, 5, 4, 4, 0, 0, 1, 19, 0, 16, 22, 0, 2, 0, 1, 0, 1]' : 0.167635}
{'[5, 3, 5, 4, 4, 0, 0, 1, 19, 0, 16, 22, 0, 2, 0, 1, 0, 1]' : 0.167343}
{'[5, 3, 5, 4, 4, 0, 0, 1, 19, 0, 16, 22, 0, 2, 0, 1, 0, 1]' : 0.16737}
{'[5, 3, 5, 4, 4, 0, 0, 1, 19, 0, 16, 22, 0, 2, 0, 1, 0, 1]' : 0.167579}
{'[5, 3, 5, 4, 4, 0, 0, 1, 19, 0, 16, 22, 0, 2, 0, 1, 0, 1]' : 0.167365}
{'[5, 3, 5, 4, 4, 0, 0, 1, 19, 0, 16, 22, 0, 2, 0, 1, 0, 1]' : 0.167415}
{'[5, 3, 5, 4, 4, 0, 0, 1, 19, 0, 16, 22, 0, 2, 0, 1, 0, 1]' : 0.167342}
{'[5, 3, 5, 4, 4, 0, 0, 1, 19, 0, 16, 22, 0, 2, 0, 1, 0, 1]' : 0.167333}
{'[5, 3, 5, 4, 4, 0, 0, 1, 19, 0, 16, 22, 0, 2, 0, 1, 0, 1]' : 0.167383}
{'[5, 3, 5, 4, 4, 0, 0, 1, 19, 0, 16, 22, 0, 2, 0, 1, 0, 1]' : 0.167686}

out:
 ["{'[5, 3, 5, 4, 4, 0, 0, 1, 19, 0, 16, 22, 0, 2, 0, 1, 0, 1]' : 0.167406}", "{'[5, 3, 5, 4, 4, 0, 0, 1, 19, 0, 16, 22, 0, 2, 0, 1, 0, 1]' : 0.16757}", "{'[5, 3, 5, 4, 4, 0, 0, 1, 19, 0, 16, 22, 0, 2, 0, 1, 0, 1]' : 0.167613}", "{'[5, 3, 5, 4, 4, 0, 0, 1, 19, 0, 16, 22, 0, 2, 0, 1, 0, 1]' : 0.167365}", "{'[5, 3, 5, 4, 4, 0, 0, 1, 19, 0, 16, 22, 0, 2, 0, 1, 0, 1]' : 0.167388}", "{'[5, 3, 5, 4, 4, 0, 0, 1, 19, 0, 16, 22, 0, 2, 0, 1, 0, 1]' : 0.167311}", "{'[5, 3, 5, 4, 4, 0, 0, 1, 19, 0, 16, 22, 0, 2, 0, 1, 0, 1]' : 0.168363}", "{'[5, 3, 5, 4, 4, 0, 0, 1, 19, 0, 16, 22, 0, 2, 0, 1, 0, 1]' : 0.167366}", "{'[5, 3, 5, 4, 4, 0, 0, 1, 19, 0, 16, 22, 0, 2, 0, 1, 0, 1]' : 0.167364}", "{'[5, 3, 5, 4, 4, 0, 0, 1, 19, 0, 16, 22, 0, 2, 0, 1, 0, 1]' : 0.167364}", "{'[5, 3, 5, 4, 4, 0, 0, 1, 19, 0, 16, 22, 0, 2, 0, 1, 0, 1]' : 0.167371}", "{'[5, 3, 5, 4, 4, 0, 0, 1, 19, 0, 16, 22, 0, 2, 0, 1, 0, 1]' : 0.167639}", "{'[5, 3, 5, 4, 4, 0, 0, 1, 19, 0, 16, 22, 0, 2, 0, 1, 0, 1]' : 0.167468}", "{'[5, 3, 5, 4, 4, 0, 0, 1, 19, 0, 16, 22, 0, 2, 0, 1, 0, 1]' : 0.167452}", "{'[5, 3, 5, 4, 4, 0, 0, 1, 19, 0, 16, 22, 0, 2, 0, 1, 0, 1]' : 0.167374}", "{'[5, 3, 5, 4, 4, 0, 0, 1, 19, 0, 16, 22, 0, 2, 0, 1, 0, 1]' : 0.167362}", "{'[5, 3, 5, 4, 4, 0, 0, 1, 19, 0, 16, 22, 0, 2, 0, 1, 0, 1]' : 0.167357}", "{'[5, 3, 5, 4, 4, 0, 0, 1, 19, 0, 16, 22, 0, 2, 0, 1, 0, 1]' : 0.167404}", "{'[5, 3, 5, 4, 4, 0, 0, 1, 19, 0, 16, 22, 0, 2, 0, 1, 0, 1]' : 0.168383}", "{'[5, 3, 5, 4, 4, 0, 0, 1, 19, 0, 16, 22, 0, 2, 0, 1, 0, 1]' : 0.167731}", "{'[5, 3, 5, 4, 4, 0, 0, 1, 19, 0, 16, 22, 0, 2, 0, 1, 0, 1]' : 0.167635}", "{'[5, 3, 5, 4, 4, 0, 0, 1, 19, 0, 16, 22, 0, 2, 0, 1, 0, 1]' : 0.167343}", "{'[5, 3, 5, 4, 4, 0, 0, 1, 19, 0, 16, 22, 0, 2, 0, 1, 0, 1]' : 0.16737}", "{'[5, 3, 5, 4, 4, 0, 0, 1, 19, 0, 16, 22, 0, 2, 0, 1, 0, 1]' : 0.167579}", "{'[5, 3, 5, 4, 4, 0, 0, 1, 19, 0, 16, 22, 0, 2, 0, 1, 0, 1]' : 0.167365}", "{'[5, 3, 5, 4, 4, 0, 0, 1, 19, 0, 16, 22, 0, 2, 0, 1, 0, 1]' : 0.167415}", "{'[5, 3, 5, 4, 4, 0, 0, 1, 19, 0, 16, 22, 0, 2, 0, 1, 0, 1]' : 0.167342}", "{'[5, 3, 5, 4, 4, 0, 0, 1, 19, 0, 16, 22, 0, 2, 0, 1, 0, 1]' : 0.167333}", "{'[5, 3, 5, 4, 4, 0, 0, 1, 19, 0, 16, 22, 0, 2, 0, 1, 0, 1]' : 0.167383}", "{'[5, 3, 5, 4, 4, 0, 0, 1, 19, 0, 16, 22, 0, 2, 0, 1, 0, 1]' : 0.167686}"]
returning from 'run': {'[5, 3, 5, 4, 4, 0, 0, 1, 19, 0, 16, 22, 0, 2, 0, 1, 0, 1]': ([0.167406, 0.16757, 0.167613, 0.167365, 0.167388, 0.167311, 0.168363, 0.167366, 0.167364, 0.167364, 0.167371, 0.167639, 0.167468, 0.167452, 0.167374, 0.167362, 0.167357, 0.167404, 0.168383, 0.167731, 0.167635, 0.167343, 0.16737, 0.167579, 0.167365, 0.167415, 0.167342, 0.167333, 0.167383, 0.167686], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.167406, 0.16757, 0.167613, 0.167365, 0.167388, 0.167311, 0.168363, 0.167366, 0.167364, 0.167364, 0.167371, 0.167639, 0.167468, 0.167452, 0.167374, 0.167362, 0.167357, 0.167404, 0.168383, 0.167731, 0.167635, 0.167343, 0.16737, 0.167579, 0.167365, 0.167415, 0.167342, 0.167333, 0.167383, 0.167686], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[5, 3, 5, 4, 4, 0, 0, 1, 19, 0, 16, 22, 0, 2, 0, 1, 0, 1]': ([0.167406, 0.16757, 0.167613, 0.167365, 0.167388, 0.167311, 0.168363, 0.167366, 0.167364, 0.167364, 0.167371, 0.167639, 0.167468, 0.167452, 0.167374, 0.167362, 0.167357, 0.167404, 0.168383, 0.167731, 0.167635, 0.167343, 0.16737, 0.167579, 0.167365, 0.167415, 0.167342, 0.167333, 0.167383, 0.167686], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [5, 3, 4, 0, 4, 5, 1, 1, 13, 29, 0, 23, 0, 0, 2, 1, 0, 1]
Fixed Factors: {}
Testing candidate 8: [5, 3, 4, 0, 4, 5, 1, 1, 13, 29, 0, 23, 0, 0, 2, 1, 0, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	110
        Max loop nest depth: 	5
        Additions: 		4720
        Multiplications: 	2046
        Divisions: 		0
        Logical: 		0
        Reads: 			9161
        Writes: 		1577
        Comparisons:		110
        Gotos: 			0
        
digraph CFG {
	ForLoop1074462 [label="ForLoop1074462  for (i=(min(nx-1,ii+255))-(((min(nx-1,ii+255))-(ii)+1)%30)+1; i<=min(nx-1,ii+255); i=i+1) {...",shape=box];
	ForLoop1074462 -> 1217220;
	ForLoop1074462 -> _JOIN_1074462;
	ForLoop1074459 [label="ForLoop1074459  for (kk=kkk; kk<=min(ny-1,kkk+896); kk=kk+128) {...",shape=box];
	ForLoop1074459 -> 1073293;
	ForLoop1074459 -> _JOIN_1074459;
	ForLoop1073228 [label="ForLoop1073228  for (j=jj; j<=cbv_3; j=j+1) {...",shape=box];
	ForLoop1073228 -> 1073227;
	ForLoop1073228 -> _JOIN_1073228;
	_JOIN_836955 [label="_JOIN_836955None...",shape=box];
	_JOIN_836955 -> 1032806;
	_JOIN_1073069 [label="_JOIN_1073069None...",shape=box];
	_JOIN_1073069 -> 1208198;
	_JOIN_1073067 [label="_JOIN_1073067None...",shape=box];
	_JOIN_1073067 -> _JOIN_1073069;
	1032806 [label="1032806  double x_copy[64];...",shape=box];
	_JOIN_1072135 [label="_JOIN_1072135None...",shape=box];
	_JOIN_1072135 -> 1072166;
	_JOIN_1035044 [label="_JOIN_1035044None...",shape=box];
	_JOIN_1035044 -> ForLoop1073069;
	ForLoop1074460 [label="ForLoop1074460  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop1074460 -> ForLoop1074459;
	ForLoop1074460 -> _JOIN_1074460;
	_JOIN_1035042 [label="_JOIN_1035042None...",shape=box];
	_JOIN_1035042 -> _JOIN_1035044;
	1217232 [label="1217232  tmp[i]=scv_96;...",shape=box];
	1217232 -> _JOIN_1074462;
	_JOIN_1035040 [label="_JOIN_1035040None...",shape=box];
	_JOIN_1035040 -> _JOIN_1035042;
	_JOIN_1074459 [label="_JOIN_1074459None...",shape=box];
	_JOIN_1074459 -> _JOIN_1074460;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 836515;
	836767 [label="836767  y[i]=0.0;...",shape=box];
	ForLoop1072135 [label="ForLoop1072135  for (kt=kk; kt<=cbv_2; kt=kt+32) {...",shape=box];
	ForLoop1072135 -> 1127251;
	ForLoop1072135 -> _JOIN_1072135;
	_JOIN_1073231 [label="_JOIN_1073231None...",shape=box];
	_JOIN_1073231 -> ForLoop1074460;
	_JOIN_1073230 [label="_JOIN_1073230None...",shape=box];
	_JOIN_1073230 -> _JOIN_107expected=9339882853735.613281
actual=9369846271501.798828
3231;
	_JOIN_836886 [label="_JOIN_836886None...",shape=box];
	_JOIN_836886 -> ForLoop836955;
	1073227 [label="1073227  scv_96=scv_96+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	1073227 -> _JOIN_1073228;
	1208198 [label="1208198  tmp[(i+20)]=scv_34;...",shape=box];
	_JOIN_1074426 [label="_JOIN_1074426None...",shape=box];
	_JOIN_1074426 -> 1074457;
	ForLoop1073071 [label="ForLoop1073071  for (i=ii; i<=min(nx-1,ii+255)-29; i=i+30) {...",shape=box];
	ForLoop1073071 -> 1208180;
	ForLoop1073071 -> _JOIN_1073071;
	1073293 [label="1073293  for (k=kk; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	836954 [label="836954  y[i]=0.0;...",shape=box];
	836954 -> _JOIN_836955;
	1073186 [label="1073186  for (j=jj; j<=min(ny-1,jj+63); j=j+1) ...",shape=box];
	1211763 [label="1211763  double scv_64, scv_65, scv_66, scv_67, scv_68, scv_69, scv_70, scv_71;...",shape=box];
	1072166 [label="1072166  for (k=kk; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	ForLoop1074464 [label="ForLoop1074464  for (ii=0; ii<=nx-1; ii=ii+256) {...",shape=box];
	ForLoop1074464 -> 1032821;
	ForLoop1074464 -> _JOIN_1074464;
	ForLoop1074426 [label="ForLoop1074426  for (kt=kk; kt<=cbv_4; kt=kt+32) {...",shape=box];
	ForLoop1074426 -> 1211763;
	ForLoop1074426 -> _JOIN_1074426;
	ForLoop1073231 [label="ForLoop1073231  for (jjj=0; jjj<=ny-1; jjj=jjj+512) {...",shape=box];
	ForLoop1073231 -> ForLoop1073230;
	ForLoop1073231 -> _JOIN_1073231;
	ForLoop1073230 [label="ForLoop1073230  for (jj=jjj; jj<=min(ny-1,jjj+448); jj=jj+64) {...",shape=box];
	ForLoop1073230 -> 1073186;
	ForLoop1073230 -> _JOIN_1073230;
	_JOIN_1073071 [label="_JOIN_1073071None...",shape=box];
	_JOIN_1073071 -> ForLoop1074462;
	ForLoop836955 [label="ForLoop836955  for (i=ny-((ny-(0))%14); i<=ny-1; i=i+1) ...",shape=box];
	ForLoop836955 -> 836954;
	ForLoop836955 -> _JOIN_836955;
	1217220 [label="1217220  double scv_96;...",shape=box];
	1033170 [label="1033170  for (j=jj; j<=min(ny-1,jj+63); j=j+1) ...",shape=box];
	_JOIN_1074462 [label="_JOIN_1074462None...",shape=box];
	_JOIN_1074462 -> _JOIN_1074464;
	_JOIN_1074460 [label="_JOIN_1074460None...",shape=box];
	_JOIN_1074460 -> 1217232;
	1074457 [label="1074457  for (k=kk; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	1074457 -> _JOIN_1074459;
	_JOIN_1074464 [label="_JOIN_1074464None...",shape=box];
	836515 [label="836515  int i;...",shape=box];
	836515 -> ForLoop836886;
	1035106 [label="1035106  for (k=kk; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	ForLoop836886 [label="ForLoop836886  for (i=0; i<=ny-14; i=i+14) {...",shape=box];
	ForLoop836886 -> 836767;
	ForLoop836886 -> _JOIN_836886;
	_JOIN_1073228 [label="_JOIN_1073228None...",shape=box];
	_JOIN_1073228 -> _JOIN_1073230;
	1127251 [label="1127251  double scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8, scv_9;...",shape=box];
	ForLoop1073067 [label="ForLoop1073067  for (kk=kkk; kk<=min(ny-1,kkk+896); kk=kk+128) {...",shape=box];
	ForLoop1073067 -> 1035106;
	ForLoop1073067 -> _JOIN_1073067;
	ForLoop1035042 [label="ForLoop1035042  for (jj=jjj; jj<=min(ny-1,jjj+448); jj=jj+64) {...",shape=box];
	ForLoop1035042 -> 1033170;
	ForLoop1035042 -> _JOIN_1035042;
	ForLoop1035040 [label="ForLoop1035040  for (j=jj; j<=cbv_1; j=j+1) {...",shape=box];
	ForLoop1035040 -> 1075909;
	ForLoop1035040 -> _JOIN_1035040;
	ForLoop1073069 [label="ForLoop1073069  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop1073069 -> ForLoop1073067;
	ForLoop1073069 -> _JOIN_1073069;
	1032821 [label="1032821  int i;...",shape=box];
	1032821 -> ForLoop1073071;
	ForLoop1035044 [label="ForLoop1035044  for (jjj=0; jjj<=ny-1; jjj=jjj+512) {...",shape=box];
	ForLoop1035044 -> ForLoop1035042;
	ForLoop1035044 -> _JOIN_1035044;
	1075909 [label="1075909  double scv_1;...",shape=box];
	1208180 [label="1208180  double scv_34, scv_35, scv_36, scv_37, scv_38, scv_39, scv_40, scv_41;...",shape=box];

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest8.exe __orio_perftest8.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest8.exe  
{'[5, 3, 4, 0, 4, 5, 1, 1, 13, 29, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.210585}
{'[5, 3, 4, 0, 4, 5, 1, 1, 13, 29, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.208386}
{'[5, 3, 4, 0, 4, 5, 1, 1, 13, 29, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.212146}
{'[5, 3, 4, 0, 4, 5, 1, 1, 13, 29, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.212371}
{'[5, 3, 4, 0, 4, 5, 1, 1, 13, 29, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.209319}
{'[5, 3, 4, 0, 4, 5, 1, 1, 13, 29, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.210066}
{'[5, 3, 4, 0, 4, 5, 1, 1, 13, 29, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.21122}
{'[5, 3, 4, 0, 4, 5, 1, 1, 13, 29, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.208582}
{'[5, 3, 4, 0, 4, 5, 1, 1, 13, 29, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.212028}
{'[5, 3, 4, 0, 4, 5, 1, 1, 13, 29, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.209267}
{'[5, 3, 4, 0, 4, 5, 1, 1, 13, 29, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.210164}
{'[5, 3, 4, 0, 4, 5, 1, 1, 13, 29, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.212059}
{'[5, 3, 4, 0, 4, 5, 1, 1, 13, 29, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.212122}
{'[5, 3, 4, 0, 4, 5, 1, 1, 13, 29, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.212088}
{'[5, 3, 4, 0, 4, 5, 1, 1, 13, 29, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.207769}
{'[5, 3, 4, 0, 4, 5, 1, 1, 13, 29, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.208076}
{'[5, 3, 4, 0, 4, 5, 1, 1, 13, 29, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.209243}
{'[5, 3, 4, 0, 4, 5, 1, 1, 13, 29, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.210293}
{'[5, 3, 4, 0, 4, 5, 1, 1, 13, 29, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.21055}
{'[5, 3, 4, 0, 4, 5, 1, 1, 13, 29, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.209703}
{'[5, 3, 4, 0, 4, 5, 1, 1, 13, 29, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.208624}
{'[5, 3, 4, 0, 4, 5, 1, 1, 13, 29, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.208989}
{'[5, 3, 4, 0, 4, 5, 1, 1, 13, 29, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.208445}
{'[5, 3, 4, 0, 4, 5, 1, 1, 13, 29, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.209382}
{'[5, 3, 4, 0, 4, 5, 1, 1, 13, 29, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.210062}
{'[5, 3, 4, 0, 4, 5, 1, 1, 13, 29, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.212268}
{'[5, 3, 4, 0, 4, 5, 1, 1, 13, 29, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.212089}
{'[5, 3, 4, 0, 4, 5, 1, 1, 13, 29, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.207857}
{'[5, 3, 4, 0, 4, 5, 1, 1, 13, 29, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.211376}
{'[5, 3, 4, 0, 4, 5, 1, 1, 13, 29, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.209898}

out:
 ["{'[5, 3, 4, 0, 4, 5, 1, 1, 13, 29, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.210585}", "{'[5, 3, 4, 0, 4, 5, 1, 1, 13, 29, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.208386}", "{'[5, 3, 4, 0, 4, 5, 1, 1, 13, 29, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.212146}", "{'[5, 3, 4, 0, 4, 5, 1, 1, 13, 29, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.212371}", "{'[5, 3, 4, 0, 4, 5, 1, 1, 13, 29, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.209319}", "{'[5, 3, 4, 0, 4, 5, 1, 1, 13, 29, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.210066}", "{'[5, 3, 4, 0, 4, 5, 1, 1, 13, 29, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.21122}", "{'[5, 3, 4, 0, 4, 5, 1, 1, 13, 29, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.208582}", "{'[5, 3, 4, 0, 4, 5, 1, 1, 13, 29, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.212028}", "{'[5, 3, 4, 0, 4, 5, 1, 1, 13, 29, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.209267}", "{'[5, 3, 4, 0, 4, 5, 1, 1, 13, 29, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.210164}", "{'[5, 3, 4, 0, 4, 5, 1, 1, 13, 29, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.212059}", "{'[5, 3, 4, 0, 4, 5, 1, 1, 13, 29, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.212122}", "{'[5, 3, 4, 0, 4, 5, 1, 1, 13, 29, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.212088}", "{'[5, 3, 4, 0, 4, 5, 1, 1, 13, 29, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.207769}", "{'[5, 3, 4, 0, 4, 5, 1, 1, 13, 29, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.208076}", "{'[5, 3, 4, 0, 4, 5, 1, 1, 13, 29, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.209243}", "{'[5, 3, 4, 0, 4, 5, 1, 1, 13, 29, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.210293}", "{'[5, 3, 4, 0, 4, 5, 1, 1, 13, 29, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.21055}", "{'[5, 3, 4, 0, 4, 5, 1, 1, 13, 29, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.209703}", "{'[5, 3, 4, 0, 4, 5, 1, 1, 13, 29, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.208624}", "{'[5, 3, 4, 0, 4, 5, 1, 1, 13, 29, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.208989}", "{'[5, 3, 4, 0, 4, 5, 1, 1, 13, 29, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.208445}", "{'[5, 3, 4, 0, 4, 5, 1, 1, 13, 29, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.209382}", "{'[5, 3, 4, 0, 4, 5, 1, 1, 13, 29, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.210062}", "{'[5, 3, 4, 0, 4, 5, 1, 1, 13, 29, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.212268}", "{'[5, 3, 4, 0, 4, 5, 1, 1, 13, 29, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.212089}", "{'[5, 3, 4, 0, 4, 5, 1, 1, 13, 29, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.207857}", "{'[5, 3, 4, 0, 4, 5, 1, 1, 13, 29, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.211376}", "{'[5, 3, 4, 0, 4, 5, 1, 1, 13, 29, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.209898}"]
returning from 'run': {'[5, 3, 4, 0, 4, 5, 1, 1, 13, 29, 0, 23, 0, 0, 2, 1, 0, 1]': ([0.210585, 0.208386, 0.212146, 0.212371, 0.209319, 0.210066, 0.21122, 0.208582, 0.212028, 0.209267, 0.210164, 0.212059, 0.212122, 0.212088, 0.207769, 0.208076, 0.209243, 0.210293, 0.21055, 0.209703, 0.208624, 0.208989, 0.208445, 0.209382, 0.210062, 0.212268, 0.212089, 0.207857, 0.211376, 0.209898], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.210585, 0.208386, 0.212146, 0.212371, 0.209319, 0.210066, 0.21122, 0.208582, 0.212028, 0.209267, 0.210164, 0.212059, 0.212122, 0.212088, 0.207769, 0.208076, 0.209243, 0.210293, 0.21055, 0.209703, 0.208624, 0.208989, 0.208445, 0.209382, 0.210062, 0.212268, 0.212089, 0.207857, 0.211376, 0.209898], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[5, 3, 4, 0, 4, 5, 1, 1, 13, 29, 0, 23, 0, 0, 2, 1, 0, 1]': ([0.210585, 0.208386, 0.212146, 0.212371, 0.209319, 0.210066, 0.21122, 0.208582, 0.212028, 0.209267, 0.210164, 0.212059, 0.212122, 0.212088, 0.207769, 0.208076, 0.209243, 0.210293, 0.21055, 0.209703, 0.208624, 0.208989, 0.208445, 0.209382, 0.210062, 0.212268, 0.212089, 0.207857, 0.211376, 0.209898], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [1, 6, 2, 4, 5, 1, 1, 1, 16, 28, 0, 29, 1, 0, 1, 0, 1, 1]
Fixed Factors: {}
Testing candidate 9: [1, 6, 2, 4, 5, 1, 1, 1, 16, 28, 0, 29, 1, 0, 1, 0, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	118
        Max loop nest depth: 	6
        Additions: 		3292
        Multiplications: 	684
        Divisions: 		0
        Logical: 		0
        Reads: 			5461
        Writes: 		729
        Comparisons:		118
        Gotos: 			0
        
digraph CFG {
	ForLoop1395096 [label="ForLoop1395096  for (kk=kkk; kk<=min(ny-1,kkk+32); kk=kk+32) {...",shape=box];
	ForLoop1395096 -> 1394770;
	ForLoop1395096 -> _JOIN_1395096;
	ForLoop1395097 [label="ForLoop1395097  for (kkk=0; kkk<=ny-1; kkk=kkk+64) ...",shape=box];
	ForLoop1395097 -> ForLoop1395096;
	ForLoop1395097 -> _JOIN_1395097;
	ForLoop1384035 [label="ForLoop1384035  for (j=jj; j<=cbv_3; j=j+1) {...",shape=box];
	ForLoop1384035 -> 1383137;
	ForLoop1384035 -> _JOIN_1384035;
	_JOIN_1394708 [label="_JOIN_1394708None...",shape=box];
	_JOIN_1394708 -> ForLoop1395097;
	_JOIN_1278162 [label="_JOIN_1278162None...",shape=box];
	_JOIN_1278162 -> 1276894;
	1395094 [label="1395094  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	1395094 -> _JOIN_1395096;
	_JOIN_1395096 [label="_JOIN_1395096None...",shape=box];
	_JOIN_1395096 -> _JOIN_1395097;
	1394663 [label="1394663  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	1394816 [label="1394816  y_copy[(kt-kk)]=y_copy[(kt-kk)]+A[i*ny+kt]*tmp[i];...",shape=box];
	ForLoop1263250 [label="ForLoop1263250  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop1263250 -> 1263249;
	ForLoop1263250 -> _JOIN_1263250;
	ForLoop1395099 [label="ForLoop1395099  for (i=(min(nx-1,ii+15))-(((min(nx-1,ii+15))-(it)+1)%29)+1; i<=min(nx-1,ii+15); i=i+1) {...",shape=box];
	ForLoop1395099 -> 1394601;
	ForLoop1395099 -> _JOIN_1395099;
	ForLoop1276755 [label="ForLoop1276755  for (jj=jjj; jj<=min(ny-1,jjj+512); jj=jj+512) {...",shape=box];
	ForLoop1276755 -> 1276711;
	ForLoop1276755 -> _JOIN_1276755;
	ForLoop1263181 [label="ForLoop1263181  for (i=0; i<=cbv_1; i=i+17) {...",shape=box];
	ForLoop1263181 -> 1263035;
	ForLoop1263181 -> _JOIN_1263181;
	ForLoop1276753 [label="ForLoop1276753  for (j=jj; j<=cbv_1; j=j+1) {...",shape=box];
	ForLoop1276753 -> 1277522;
	ForLoop1276753 -> _JOIN_1276753;
	ForLoop1394705 [label="ForLoop1394705  for (j=jj; j<=cbv_5; j=j+1) ...",shape=box];
	ForLoop1394705 -> 1394704;
	ForLoop1394705 -> _JOIN_1394705;
	ForLoop1393585 [label="ForLoop1393585  for (kt=kk; kt<=cbv_4; kt=kt+8) {...",shape=box];
	ForLoop1393585 -> 1385015;
	ForLoop1393585 -> _JOIN_1393585;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 1262738;
	1277522 [label="1277522  tmp[it]=tmp[it]+A[it*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop1394708 [label="ForLoop1394708  for (jjj=0; jjj<=ny-1; jjj=jjj+1024) ...",shape=box];
	ForLoop1394708 -> ForLoop1394707;
	ForLoop1394708 -> _JOIN_1394708;
	_JOIN_1393585 [label="_JOIN_1393585None...",shape=box];
	_JOIN_1393585 -> 1393616;
	1278542 [label="1278542  y_copy[(kt-kk)]=y_copy[(kt-kk)]+A[it*ny+kt]*tmp[it];...",shape=box];
	ForLoop1278162 [label="ForLoop1278162  for (kt=kk; kt<=cbv_2; kt=kt+8) {...",shape=box];
	ForLoop1278162 -> 1278542;
	ForLoop1278162 -> _JOIN_1278162;
	1277184 [label="1277184  tmp[it]=0;...",shape=box];
	1277184 -> ForLoop1276756;
	ForLoop1266848 [label="ForLoop1266848  for (ii=iii; ii<=min(nx-1,iii+496); ii=ii+16) {...",shape=box];
	ForLoop1266848 -> ForLoop1276899;
	ForLoop1266848 -> _JOIN_1266848;
	ForLoop1266849 [label="ForLoop1266849  for (iii=0; iii<=nx-1; iii=iii+512) ...",shape=box];
	ForLoop1266849 -> ForLoop1266848;
	ForLoop1266849 -> _JOIN_1266849;
	1393616 [label="1393616  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	_JOIN_1394490 [label="_JOIN_1394490None...",shape=box];
	_JOIN_1394490 -> ForLoop1395099;
	1385015 [label="1385015  y_copy[(kt-kk)]=y_copy[(kt-kk)]+A[i*ny+kt]*tmp[i];...",shape=box];
	1262738 [label="1262738  int i;...",shape=box];
	_JOIN_1395097 [label="_JOIN_1395097None...",shape=box];
	_JOIN_1395097 -> _JOIN_1395099;
	ForLoop1394490 [label="ForLoop1394490  for (i=it; i<=min(nx-1,ii+15)-28; i=i+29) {...",shape=box];
	ForLoop1394490 -> 1381914;
	ForLoop1394490 -> _JOIN_1394490;
	1273746 [label="1273746  double x_copy[512];...",shape=box];
	1263444 [label="1263444  register int cbv_2, cbv_3;...",shape=box];
	_JOIN_1394705 [label="_JOIN_1394705None...",shape=box];
	_JOIN_1394705 -> _JOIN_1394707;
	_JOIN_1276899 [label="_JOIN_1276899None...",shape=box];
	_JOIN_1276899 -> 1357400;
	1394601 [label="1394601  tmp[i]=0;...",shape=box];
	1394601 -> ForLoop1394708;
	_JOIN_1395099 [label="_JOIN_1395099None...",shape=box];
	_JOIN_1395099 -> _JOIN_1266848;
	ForLoop1395063 [label="ForLoop1395063  for (kt=kk; kt<=cbv_6; kt=kt+8) {...",shape=box];
	ForLoop1395063 -> 1394816;
	ForLoop1395063 -> _JOIN_1395063;
	1394770 [label="1394770  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	1384101 [label="1384101  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	_JOIN_1276896 [label="_JOIN_1276896None...",shape=box];
	_JOIN_1276896 -> _JOIN_1276897;
	_JOIN_1276897 [label="_JOIN_1276897None...",shape=box];
	_JOIN_1276897 -> _JOIN_1276899;
	1382228 [label="1382228  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	1276894 [label="1276894  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	1276894 -> _JOIN_1276896;
	_JOIN_1384039 [label="_JOIN_1384039None...",shape=box];
	_JOIN_1384039 -> ForLoop1394488;
	_JOIN_1263181 [label="_JOIN_1263181None...",shape=box];
	_JOIN_1263181 -> 1263444;
	_JOIN_1266848 [label="_JOIN_1266848None...",shape=box];
	_JOIN_1266848 -> _JOIN_1266849;
	_JOIN_1266849 [label="_JOIN_1266849None...",shape=box];
	_JOIN_1263250 [label="_JOIN_1263250None...",shape=box];
	_JOIN_1263250 -> 1273746;
	1263249 [label="1263249  y[i]=0.0;...",shape=box];
	1263249 -> _JOIN_1263250;
	_JOIN_1384037 [label="_JOIN_1384037None...",shape=box];
	_JOIN_1384037 -> _JOIN_1384039;
	_JOIN_1384035 [label="_JOIN_1384035None...",shape=box];
	_JOIN_1384035 -> _JOIN_1384037;
	1263035 [label="1263035  y[i]=0.0;...",shape=box];
	_JOIN_1395063 [label="_JOIN_1395063None...",shape=box];
	_JOIN_1395063 -> 1395094;
	1381914 [label="1381914  tmp[i]=0;...",shape=box];
	ForLoop1384039 [label="ForLoop1384039  for (jjj=0; jjj<=ny-1; jjjexpected=9369846271501.798828
actual=9369846271501.798828
=jjj+1024) {...",shape=box];
	ForLoop1384039 -> ForLoop1384037;
	ForLoop1384039 -> _JOIN_1384039;
	1276711 [label="1276711  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	ForLoop1384037 [label="ForLoop1384037  for (jj=jjj; jj<=min(ny-1,jjj+512); jj=jj+512) {...",shape=box];
	ForLoop1384037 -> 1382228;
	ForLoop1384037 -> _JOIN_1384037;
	_JOIN_1276753 [label="_JOIN_1276753None...",shape=box];
	_JOIN_1276753 -> _JOIN_1276755;
	1357400 [label="1357400  int i;...",shape=box];
	1357400 -> ForLoop1394490;
	_JOIN_1276755 [label="_JOIN_1276755None...",shape=box];
	_JOIN_1276755 -> _JOIN_1276756;
	_JOIN_1276756 [label="_JOIN_1276756None...",shape=box];
	_JOIN_1276756 -> ForLoop1276897;
	ForLoop1276896 [label="ForLoop1276896  for (kk=kkk; kk<=min(ny-1,kkk+32); kk=kk+32) {...",shape=box];
	ForLoop1276896 -> 1276818;
	ForLoop1276896 -> _JOIN_1276896;
	ForLoop1276897 [label="ForLoop1276897  for (kkk=0; kkk<=ny-1; kkk=kkk+64) ...",shape=box];
	ForLoop1276897 -> ForLoop1276896;
	ForLoop1276897 -> _JOIN_1276897;
	ForLoop1394488 [label="ForLoop1394488  for (kkk=0; kkk<=ny-1; kkk=kkk+64) {...",shape=box];
	ForLoop1394488 -> ForLoop1394486;
	ForLoop1394488 -> _JOIN_1394488;
	ForLoop1276756 [label="ForLoop1276756  for (jjj=0; jjj<=ny-1; jjj=jjj+1024) ...",shape=box];
	ForLoop1276756 -> ForLoop1276755;
	ForLoop1276756 -> _JOIN_1276756;
	_JOIN_1394486 [label="_JOIN_1394486None...",shape=box];
	_JOIN_1394486 -> _JOIN_1394488;
	1276818 [label="1276818  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	1383137 [label="1383137  tmp[i]=tmp[i]+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	1394704 [label="1394704  tmp[i]=tmp[i]+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	1394704 -> _JOIN_1394705;
	_JOIN_1394488 [label="_JOIN_1394488None...",shape=box];
	_JOIN_1394488 -> _JOIN_1394490;
	ForLoop1394486 [label="ForLoop1394486  for (kk=kkk; kk<=min(ny-1,kkk+32); kk=kk+32) {...",shape=box];
	ForLoop1394486 -> 1384101;
	ForLoop1394486 -> _JOIN_1394486;
	_JOIN_1394707 [label="_JOIN_1394707None...",shape=box];
	_JOIN_1394707 -> _JOIN_1394708;
	ForLoop1394707 [label="ForLoop1394707  for (jj=jjj; jj<=min(ny-1,jjj+512); jj=jj+512) {...",shape=box];
	ForLoop1394707 -> 1394663;
	ForLoop1394707 -> _JOIN_1394707;
	ForLoop1276899 [label="ForLoop1276899  for (it=ii; it<=min(nx-1,ii+15)-7; it=it+8) {...",shape=box];
	ForLoop1276899 -> 1277184;
	ForLoop1276899 -> _JOIN_1276899;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest9.exe __orio_perftest9.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest9.exe  
{'[1, 6, 2, 4, 5, 1, 1, 1, 16, 28, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.0986562}
{'[1, 6, 2, 4, 5, 1, 1, 1, 16, 28, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.0994499}
{'[1, 6, 2, 4, 5, 1, 1, 1, 16, 28, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.09831}
{'[1, 6, 2, 4, 5, 1, 1, 1, 16, 28, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.098268}
{'[1, 6, 2, 4, 5, 1, 1, 1, 16, 28, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.0984058}
{'[1, 6, 2, 4, 5, 1, 1, 1, 16, 28, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.0983891}
{'[1, 6, 2, 4, 5, 1, 1, 1, 16, 28, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.0982859}
{'[1, 6, 2, 4, 5, 1, 1, 1, 16, 28, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.0982461}
{'[1, 6, 2, 4, 5, 1, 1, 1, 16, 28, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.0983469}
{'[1, 6, 2, 4, 5, 1, 1, 1, 16, 28, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.0983632}
{'[1, 6, 2, 4, 5, 1, 1, 1, 16, 28, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.0983529}
{'[1, 6, 2, 4, 5, 1, 1, 1, 16, 28, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.0983241}
{'[1, 6, 2, 4, 5, 1, 1, 1, 16, 28, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.0989029}
{'[1, 6, 2, 4, 5, 1, 1, 1, 16, 28, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.098341}
{'[1, 6, 2, 4, 5, 1, 1, 1, 16, 28, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.0984108}
{'[1, 6, 2, 4, 5, 1, 1, 1, 16, 28, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.098285}
{'[1, 6, 2, 4, 5, 1, 1, 1, 16, 28, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.09828}
{'[1, 6, 2, 4, 5, 1, 1, 1, 16, 28, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.0982711}
{'[1, 6, 2, 4, 5, 1, 1, 1, 16, 28, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.098305}
{'[1, 6, 2, 4, 5, 1, 1, 1, 16, 28, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.0983081}
{'[1, 6, 2, 4, 5, 1, 1, 1, 16, 28, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.0983369}
{'[1, 6, 2, 4, 5, 1, 1, 1, 16, 28, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.098376}
{'[1, 6, 2, 4, 5, 1, 1, 1, 16, 28, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.0993578}
{'[1, 6, 2, 4, 5, 1, 1, 1, 16, 28, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.0981972}
{'[1, 6, 2, 4, 5, 1, 1, 1, 16, 28, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.0985792}
{'[1, 6, 2, 4, 5, 1, 1, 1, 16, 28, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.09834}
{'[1, 6, 2, 4, 5, 1, 1, 1, 16, 28, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.0983648}
{'[1, 6, 2, 4, 5, 1, 1, 1, 16, 28, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.0989232}
{'[1, 6, 2, 4, 5, 1, 1, 1, 16, 28, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.0983469}
{'[1, 6, 2, 4, 5, 1, 1, 1, 16, 28, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.09831}

out:
 ["{'[1, 6, 2, 4, 5, 1, 1, 1, 16, 28, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.0986562}", "{'[1, 6, 2, 4, 5, 1, 1, 1, 16, 28, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.0994499}", "{'[1, 6, 2, 4, 5, 1, 1, 1, 16, 28, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.09831}", "{'[1, 6, 2, 4, 5, 1, 1, 1, 16, 28, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.098268}", "{'[1, 6, 2, 4, 5, 1, 1, 1, 16, 28, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.0984058}", "{'[1, 6, 2, 4, 5, 1, 1, 1, 16, 28, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.0983891}", "{'[1, 6, 2, 4, 5, 1, 1, 1, 16, 28, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.0982859}", "{'[1, 6, 2, 4, 5, 1, 1, 1, 16, 28, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.0982461}", "{'[1, 6, 2, 4, 5, 1, 1, 1, 16, 28, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.0983469}", "{'[1, 6, 2, 4, 5, 1, 1, 1, 16, 28, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.0983632}", "{'[1, 6, 2, 4, 5, 1, 1, 1, 16, 28, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.0983529}", "{'[1, 6, 2, 4, 5, 1, 1, 1, 16, 28, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.0983241}", "{'[1, 6, 2, 4, 5, 1, 1, 1, 16, 28, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.0989029}", "{'[1, 6, 2, 4, 5, 1, 1, 1, 16, 28, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.098341}", "{'[1, 6, 2, 4, 5, 1, 1, 1, 16, 28, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.0984108}", "{'[1, 6, 2, 4, 5, 1, 1, 1, 16, 28, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.098285}", "{'[1, 6, 2, 4, 5, 1, 1, 1, 16, 28, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.09828}", "{'[1, 6, 2, 4, 5, 1, 1, 1, 16, 28, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.0982711}", "{'[1, 6, 2, 4, 5, 1, 1, 1, 16, 28, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.098305}", "{'[1, 6, 2, 4, 5, 1, 1, 1, 16, 28, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.0983081}", "{'[1, 6, 2, 4, 5, 1, 1, 1, 16, 28, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.0983369}", "{'[1, 6, 2, 4, 5, 1, 1, 1, 16, 28, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.098376}", "{'[1, 6, 2, 4, 5, 1, 1, 1, 16, 28, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.0993578}", "{'[1, 6, 2, 4, 5, 1, 1, 1, 16, 28, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.0981972}", "{'[1, 6, 2, 4, 5, 1, 1, 1, 16, 28, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.0985792}", "{'[1, 6, 2, 4, 5, 1, 1, 1, 16, 28, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.09834}", "{'[1, 6, 2, 4, 5, 1, 1, 1, 16, 28, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.0983648}", "{'[1, 6, 2, 4, 5, 1, 1, 1, 16, 28, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.0989232}", "{'[1, 6, 2, 4, 5, 1, 1, 1, 16, 28, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.0983469}", "{'[1, 6, 2, 4, 5, 1, 1, 1, 16, 28, 0, 29, 1, 0, 1, 0, 1, 1]' : 0.09831}"]
returning from 'run': {'[1, 6, 2, 4, 5, 1, 1, 1, 16, 28, 0, 29, 1, 0, 1, 0, 1, 1]': ([0.0986562, 0.0994499, 0.09831, 0.098268, 0.0984058, 0.0983891, 0.0982859, 0.0982461, 0.0983469, 0.0983632, 0.0983529, 0.0983241, 0.0989029, 0.098341, 0.0984108, 0.098285, 0.09828, 0.0982711, 0.098305, 0.0983081, 0.0983369, 0.098376, 0.0993578, 0.0981972, 0.0985792, 0.09834, 0.0983648, 0.0989232, 0.0983469, 0.09831], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.0986562, 0.0994499, 0.09831, 0.098268, 0.0984058, 0.0983891, 0.0982859, 0.0982461, 0.0983469, 0.0983632, 0.0983529, 0.0983241, 0.0989029, 0.098341, 0.0984108, 0.098285, 0.09828, 0.0982711, 0.098305, 0.0983081, 0.0983369, 0.098376, 0.0993578, 0.0981972, 0.0985792, 0.09834, 0.0983648, 0.0989232, 0.0983469, 0.09831], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[1, 6, 2, 4, 5, 1, 1, 1, 16, 28, 0, 29, 1, 0, 1, 0, 1, 1]': ([0.0986562, 0.0994499, 0.09831, 0.098268, 0.0984058, 0.0983891, 0.0982859, 0.0982461, 0.0983469, 0.0983632, 0.0983529, 0.0983241, 0.0989029, 0.098341, 0.0984108, 0.098285, 0.09828, 0.0982711, 0.098305, 0.0983081, 0.0983369, 0.098376, 0.0993578, 0.0981972, 0.0985792, 0.09834, 0.0983648, 0.0989232, 0.0983469, 0.09831], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [6, 0, 4, 6, 1, 6, 1, 1, 5, 0, 8, 28, 1, 1, 0, 1, 1, 1]
Fixed Factors: {}
Testing candidate 10: [6, 0, 4, 6, 1, 6, 1, 1, 5, 0, 8, 28, 1, 1, 0, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	6
        Additions: 		1643
        Multiplications: 	684
        Divisions: 		0
        Logical: 		0
        Reads: 			3208
        Writes: 		562
        Comparisons:		24
        Gotos: 			0
        
digraph CFG {
	_JOIN_1608130 [label="_JOIN_1608130None...",shape=box];
	_JOIN_1608130 -> 1680730;
	1597013 [label="1597013  double x_copy[64];...",shape=box];
	1657248 [label="1657248  double scv_77;...",shape=box];
	_JOIN_1440586 [label="_JOIN_1440586None...",shape=box];
	_JOIN_1440586 -> 1440750;
	_JOIN_1609899 [label="_JOIN_1609899None...",shape=box];
	_JOIN_1609899 -> _JOIN_1609900;
	1440750 [label="1440750  register int cbv_2, cbv_3;...",shape=box];
	_JOIN_1609905 [label="_JOIN_1609905None...",shape=box];
	_JOIN_1609902 [label="_JOIN_1609902None...",shape=box];
	_JOIN_1609902 -> _JOIN_1609904;
	_JOIN_1599449 [label="_JOIN_1599449None...",shape=box];
	_JOIN_1599449 -> _JOIN_1599451;
	_JOIN_1608784 [label="_JOIN_1608784None...",shape=box];
	_JOIN_1608784 -> ForLoop1609900;
	_JOIN_1440655 [label="_JOIN_1440655None...",shape=box];
	_JOIN_1440655 -> 1597013;
	_JOIN_1609900 [label="_JOIN_1609900None...",shape=box];
	_JOIN_1609900 -> 1657260;
	1440654 [label="1440654  y[i]=0.0;...",shape=box];
	1440654 -> _JOIN_1440655;
	1608577 [label="1608577  scv_77=scv_77+A[i*ny+jt]*x_copy[(jt-jjj)];...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 1440407;
	_JOIN_1608782 [label="_JOIN_1608782None...",shape=box];
	_JOIN_1608782 -> _JOIN_1608784;
	ForLoop1440586 [label="ForLoop1440586  for (i=0; i<=cbv_1; i=i+6) {...",shape=box];
	ForLoop1440586 -> 1440539;
	ForLoop1440586 -> _JOIN_1440586;
	1608846 [label="1608846  for (k=kk; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	1440539 [label="1440539  y[i]=0.0;...",shape=box];
	1682216 [label="1682216  register int cbv_7, cbv_8;...",shape=box];
	1597115 [label="1597115  for (j=jjj; j<=min(ny-1,jjj+63); j=j+1) ...",shape=box];
	1652051 [label="1652051  double scv_47, scv_48, scv_49, scv_50, scv_51, scv_52, scv_53, scv_54;...",shape=box];
	1657260 [label="1657260  tmp[i]=scv_77;...",shape=box];
	1657260 -> _JOIN_1609902;
	ForLoop1609865 [label="ForLoop1609865  for (k=cbv_7; k<=cbv_8; k=k+1) {...",shape=box];
	ForLoop1609865 -> 1652855;
	ForLoop1609865 -> _JOIN_1609865;
	1649435 [label="1649435  double scv_39, scv_40, scv_41, scv_42, scv_43, scv_44, scv_45, scv_46;...",shape=box];
	ForLoop1609904 [label="ForLoop1609904  for (ii=iii; ii<=min(nx-1,iii+1536); ii=ii+512) {...",shape=box];
	ForLoop1609904 -> ForLoop1608466;
	ForLoop1609904 -> _JOIN_1609904;
	ForLoop1609905 [label="ForLoop1609905  for (iii=0; iii<=nx-1; iii=iii+2048) {...",shape=box];
	ForLoop1609905 -> ForLoop1609904;
	ForLoop1609905 -> _JOIN_1609905;
	1626794 [label="1626794  double scv_9, scv_10, scv_11, scv_12, scv_13, scv_14, scv_15, scv_16;...",shape=box];
	ForLoop1599449 [label="ForLoop1599449  for (jt=jjj; jt<=cbv_1; jt=jt+8) {...",shape=box];
	ForLoop1599449 -> 1613131;
	ForLoop1599449 -> _JOIN_1599449;
	ForLoop1609900 [label="ForLoop1609900  for (kkk=0; kkk<=ny-1; kkk=kkk+2048) {...",shape=box];
	ForLoop1609900 -> ForLoop1609899;
	ForLoop1609900 -> _JOIN_1609900;
	_JOIN_1609865 [label="_JOIN_1609865None...",shape=box];
	_JOIN_1609865 -> 1609897;
	1652855 [label="1652855  double scv_76;...",shape=box];
	_JOIN_1609904 [label="_JOIN_1609904None...",shape=box];
	_expected=9369846271501.798828
actual=9369846271501.798828
JOIN_1609904 -> _JOIN_1609905;
	1608461 [label="1608461  for (k=kk; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	1608461 -> _JOIN_1608463;
	1608534 [label="1608534  for (j=jjj; j<=min(ny-1,jjj+63); j=j+1) ...",shape=box];
	ForLoop1599451 [label="ForLoop1599451  for (jjj=0; jjj<=ny-1; jjj=jjj+64) {...",shape=box];
	ForLoop1599451 -> 1597115;
	ForLoop1599451 -> _JOIN_1599451;
	ForLoop1609902 [label="ForLoop1609902  for (i=it; i<=min(nx-1,ii+511); i=i+1) {...",shape=box];
	ForLoop1609902 -> 1657248;
	ForLoop1609902 -> _JOIN_1609902;
	ForLoop1440655 [label="ForLoop1440655  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop1440655 -> 1440654;
	ForLoop1440655 -> _JOIN_1440655;
	1649447 [label="1649447  tmp[it]=scv_39;...",shape=box];
	1440407 [label="1440407  int i;...",shape=box];
	ForLoop1609791 [label="ForLoop1609791  for (k=kk; k<=cbv_6; k=k+29) {...",shape=box];
	ForLoop1609791 -> 1652051;
	ForLoop1609791 -> _JOIN_1609791;
	_JOIN_1599451 [label="_JOIN_1599451None...",shape=box];
	_JOIN_1599451 -> ForLoop1608464;
	ForLoop1608784 [label="ForLoop1608784  for (jjj=0; jjj<=ny-1; jjj=jjj+64) {...",shape=box];
	ForLoop1608784 -> 1608534;
	ForLoop1608784 -> _JOIN_1608784;
	ForLoop1608130 [label="ForLoop1608130  for (k=kk; k<=cbv_2; k=k+29) {...",shape=box];
	ForLoop1608130 -> 1626794;
	ForLoop1608130 -> _JOIN_1608130;
	ForLoop1608782 [label="ForLoop1608782  for (jt=jjj; jt<=cbv_5; jt=jt+8) {...",shape=box];
	ForLoop1608782 -> 1608577;
	ForLoop1608782 -> _JOIN_1608782;
	_JOIN_1609791 [label="_JOIN_1609791None...",shape=box];
	_JOIN_1609791 -> 1682216;
	_JOIN_1608463 [label="_JOIN_1608463None...",shape=box];
	_JOIN_1608463 -> _JOIN_1608464;
	_JOIN_1608466 [label="_JOIN_1608466None...",shape=box];
	_JOIN_1608466 -> ForLoop1609902;
	_JOIN_1608464 [label="_JOIN_1608464None...",shape=box];
	_JOIN_1608464 -> 1649447;
	1599513 [label="1599513  for (k=kk; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	_JOIN_1608429 [label="_JOIN_1608429None...",shape=box];
	_JOIN_1608429 -> 1608461;
	1680730 [label="1680730  register int cbv_3, cbv_4;...",shape=box];
	1613131 [label="1613131  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	1628299 [label="1628299  double scv_38;...",shape=box];
	ForLoop1609899 [label="ForLoop1609899  for (kk=kkk; kk<=min(ny-1,kkk+1920); kk=kk+128) {...",shape=box];
	ForLoop1609899 -> 1608846;
	ForLoop1609899 -> _JOIN_1609899;
	ForLoop1608466 [label="ForLoop1608466  for (it=ii; it<=min(nx-1,ii+511)-7; it=it+8) {...",shape=box];
	ForLoop1608466 -> 1649435;
	ForLoop1608466 -> _JOIN_1608466;
	ForLoop1608464 [label="ForLoop1608464  for (kkk=0; kkk<=ny-1; kkk=kkk+2048) {...",shape=box];
	ForLoop1608464 -> ForLoop1608463;
	ForLoop1608464 -> _JOIN_1608464;
	ForLoop1608429 [label="ForLoop1608429  for (k=cbv_3; k<=cbv_4; k=k+1) {...",shape=box];
	ForLoop1608429 -> 1628299;
	ForLoop1608429 -> _JOIN_1608429;
	ForLoop1608463 [label="ForLoop1608463  for (kk=kkk; kk<=min(ny-1,kkk+1920); kk=kk+128) {...",shape=box];
	ForLoop1608463 -> 1599513;
	ForLoop1608463 -> _JOIN_1608463;
	1609897 [label="1609897  for (k=kk; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	1609897 -> _JOIN_1609899;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest10.exe __orio_perftest10.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest10.exe  
{'[6, 0, 4, 6, 1, 6, 1, 1, 5, 0, 8, 28, 1, 1, 0, 1, 1, 1]' : 0.0833712}
{'[6, 0, 4, 6, 1, 6, 1, 1, 5, 0, 8, 28, 1, 1, 0, 1, 1, 1]' : 0.082963}
{'[6, 0, 4, 6, 1, 6, 1, 1, 5, 0, 8, 28, 1, 1, 0, 1, 1, 1]' : 0.0829659}
{'[6, 0, 4, 6, 1, 6, 1, 1, 5, 0, 8, 28, 1, 1, 0, 1, 1, 1]' : 0.082912}
{'[6, 0, 4, 6, 1, 6, 1, 1, 5, 0, 8, 28, 1, 1, 0, 1, 1, 1]' : 0.0829432}
{'[6, 0, 4, 6, 1, 6, 1, 1, 5, 0, 8, 28, 1, 1, 0, 1, 1, 1]' : 0.0829568}
{'[6, 0, 4, 6, 1, 6, 1, 1, 5, 0, 8, 28, 1, 1, 0, 1, 1, 1]' : 0.0829511}
{'[6, 0, 4, 6, 1, 6, 1, 1, 5, 0, 8, 28, 1, 1, 0, 1, 1, 1]' : 0.0829101}
{'[6, 0, 4, 6, 1, 6, 1, 1, 5, 0, 8, 28, 1, 1, 0, 1, 1, 1]' : 0.082952}
{'[6, 0, 4, 6, 1, 6, 1, 1, 5, 0, 8, 28, 1, 1, 0, 1, 1, 1]' : 0.0831072}
{'[6, 0, 4, 6, 1, 6, 1, 1, 5, 0, 8, 28, 1, 1, 0, 1, 1, 1]' : 0.0833001}
{'[6, 0, 4, 6, 1, 6, 1, 1, 5, 0, 8, 28, 1, 1, 0, 1, 1, 1]' : 0.082962}
{'[6, 0, 4, 6, 1, 6, 1, 1, 5, 0, 8, 28, 1, 1, 0, 1, 1, 1]' : 0.0829749}
{'[6, 0, 4, 6, 1, 6, 1, 1, 5, 0, 8, 28, 1, 1, 0, 1, 1, 1]' : 0.0830131}
{'[6, 0, 4, 6, 1, 6, 1, 1, 5, 0, 8, 28, 1, 1, 0, 1, 1, 1]' : 0.082969}
{'[6, 0, 4, 6, 1, 6, 1, 1, 5, 0, 8, 28, 1, 1, 0, 1, 1, 1]' : 0.0829389}
{'[6, 0, 4, 6, 1, 6, 1, 1, 5, 0, 8, 28, 1, 1, 0, 1, 1, 1]' : 0.082957}
{'[6, 0, 4, 6, 1, 6, 1, 1, 5, 0, 8, 28, 1, 1, 0, 1, 1, 1]' : 0.082947}
{'[6, 0, 4, 6, 1, 6, 1, 1, 5, 0, 8, 28, 1, 1, 0, 1, 1, 1]' : 0.082958}
{'[6, 0, 4, 6, 1, 6, 1, 1, 5, 0, 8, 28, 1, 1, 0, 1, 1, 1]' : 0.0829639}
{'[6, 0, 4, 6, 1, 6, 1, 1, 5, 0, 8, 28, 1, 1, 0, 1, 1, 1]' : 0.0829871}
{'[6, 0, 4, 6, 1, 6, 1, 1, 5, 0, 8, 28, 1, 1, 0, 1, 1, 1]' : 0.0839479}
{'[6, 0, 4, 6, 1, 6, 1, 1, 5, 0, 8, 28, 1, 1, 0, 1, 1, 1]' : 0.083035}
{'[6, 0, 4, 6, 1, 6, 1, 1, 5, 0, 8, 28, 1, 1, 0, 1, 1, 1]' : 0.082947}
{'[6, 0, 4, 6, 1, 6, 1, 1, 5, 0, 8, 28, 1, 1, 0, 1, 1, 1]' : 0.0830681}
{'[6, 0, 4, 6, 1, 6, 1, 1, 5, 0, 8, 28, 1, 1, 0, 1, 1, 1]' : 0.0829389}
{'[6, 0, 4, 6, 1, 6, 1, 1, 5, 0, 8, 28, 1, 1, 0, 1, 1, 1]' : 0.083004}
{'[6, 0, 4, 6, 1, 6, 1, 1, 5, 0, 8, 28, 1, 1, 0, 1, 1, 1]' : 0.082927}
{'[6, 0, 4, 6, 1, 6, 1, 1, 5, 0, 8, 28, 1, 1, 0, 1, 1, 1]' : 0.0829239}
{'[6, 0, 4, 6, 1, 6, 1, 1, 5, 0, 8, 28, 1, 1, 0, 1, 1, 1]' : 0.083317}

out:
 ["{'[6, 0, 4, 6, 1, 6, 1, 1, 5, 0, 8, 28, 1, 1, 0, 1, 1, 1]' : 0.0833712}", "{'[6, 0, 4, 6, 1, 6, 1, 1, 5, 0, 8, 28, 1, 1, 0, 1, 1, 1]' : 0.082963}", "{'[6, 0, 4, 6, 1, 6, 1, 1, 5, 0, 8, 28, 1, 1, 0, 1, 1, 1]' : 0.0829659}", "{'[6, 0, 4, 6, 1, 6, 1, 1, 5, 0, 8, 28, 1, 1, 0, 1, 1, 1]' : 0.082912}", "{'[6, 0, 4, 6, 1, 6, 1, 1, 5, 0, 8, 28, 1, 1, 0, 1, 1, 1]' : 0.0829432}", "{'[6, 0, 4, 6, 1, 6, 1, 1, 5, 0, 8, 28, 1, 1, 0, 1, 1, 1]' : 0.0829568}", "{'[6, 0, 4, 6, 1, 6, 1, 1, 5, 0, 8, 28, 1, 1, 0, 1, 1, 1]' : 0.0829511}", "{'[6, 0, 4, 6, 1, 6, 1, 1, 5, 0, 8, 28, 1, 1, 0, 1, 1, 1]' : 0.0829101}", "{'[6, 0, 4, 6, 1, 6, 1, 1, 5, 0, 8, 28, 1, 1, 0, 1, 1, 1]' : 0.082952}", "{'[6, 0, 4, 6, 1, 6, 1, 1, 5, 0, 8, 28, 1, 1, 0, 1, 1, 1]' : 0.0831072}", "{'[6, 0, 4, 6, 1, 6, 1, 1, 5, 0, 8, 28, 1, 1, 0, 1, 1, 1]' : 0.0833001}", "{'[6, 0, 4, 6, 1, 6, 1, 1, 5, 0, 8, 28, 1, 1, 0, 1, 1, 1]' : 0.082962}", "{'[6, 0, 4, 6, 1, 6, 1, 1, 5, 0, 8, 28, 1, 1, 0, 1, 1, 1]' : 0.0829749}", "{'[6, 0, 4, 6, 1, 6, 1, 1, 5, 0, 8, 28, 1, 1, 0, 1, 1, 1]' : 0.0830131}", "{'[6, 0, 4, 6, 1, 6, 1, 1, 5, 0, 8, 28, 1, 1, 0, 1, 1, 1]' : 0.082969}", "{'[6, 0, 4, 6, 1, 6, 1, 1, 5, 0, 8, 28, 1, 1, 0, 1, 1, 1]' : 0.0829389}", "{'[6, 0, 4, 6, 1, 6, 1, 1, 5, 0, 8, 28, 1, 1, 0, 1, 1, 1]' : 0.082957}", "{'[6, 0, 4, 6, 1, 6, 1, 1, 5, 0, 8, 28, 1, 1, 0, 1, 1, 1]' : 0.082947}", "{'[6, 0, 4, 6, 1, 6, 1, 1, 5, 0, 8, 28, 1, 1, 0, 1, 1, 1]' : 0.082958}", "{'[6, 0, 4, 6, 1, 6, 1, 1, 5, 0, 8, 28, 1, 1, 0, 1, 1, 1]' : 0.0829639}", "{'[6, 0, 4, 6, 1, 6, 1, 1, 5, 0, 8, 28, 1, 1, 0, 1, 1, 1]' : 0.0829871}", "{'[6, 0, 4, 6, 1, 6, 1, 1, 5, 0, 8, 28, 1, 1, 0, 1, 1, 1]' : 0.0839479}", "{'[6, 0, 4, 6, 1, 6, 1, 1, 5, 0, 8, 28, 1, 1, 0, 1, 1, 1]' : 0.083035}", "{'[6, 0, 4, 6, 1, 6, 1, 1, 5, 0, 8, 28, 1, 1, 0, 1, 1, 1]' : 0.082947}", "{'[6, 0, 4, 6, 1, 6, 1, 1, 5, 0, 8, 28, 1, 1, 0, 1, 1, 1]' : 0.0830681}", "{'[6, 0, 4, 6, 1, 6, 1, 1, 5, 0, 8, 28, 1, 1, 0, 1, 1, 1]' : 0.0829389}", "{'[6, 0, 4, 6, 1, 6, 1, 1, 5, 0, 8, 28, 1, 1, 0, 1, 1, 1]' : 0.083004}", "{'[6, 0, 4, 6, 1, 6, 1, 1, 5, 0, 8, 28, 1, 1, 0, 1, 1, 1]' : 0.082927}", "{'[6, 0, 4, 6, 1, 6, 1, 1, 5, 0, 8, 28, 1, 1, 0, 1, 1, 1]' : 0.0829239}", "{'[6, 0, 4, 6, 1, 6, 1, 1, 5, 0, 8, 28, 1, 1, 0, 1, 1, 1]' : 0.083317}"]
returning from 'run': {'[6, 0, 4, 6, 1, 6, 1, 1, 5, 0, 8, 28, 1, 1, 0, 1, 1, 1]': ([0.0833712, 0.082963, 0.0829659, 0.082912, 0.0829432, 0.0829568, 0.0829511, 0.0829101, 0.082952, 0.0831072, 0.0833001, 0.082962, 0.0829749, 0.0830131, 0.082969, 0.0829389, 0.082957, 0.082947, 0.082958, 0.0829639, 0.0829871, 0.0839479, 0.083035, 0.082947, 0.0830681, 0.0829389, 0.083004, 0.082927, 0.0829239, 0.083317], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.0833712, 0.082963, 0.0829659, 0.082912, 0.0829432, 0.0829568, 0.0829511, 0.0829101, 0.082952, 0.0831072, 0.0833001, 0.082962, 0.0829749, 0.0830131, 0.082969, 0.0829389, 0.082957, 0.082947, 0.082958, 0.0829639, 0.0829871, 0.0839479, 0.083035, 0.082947, 0.0830681, 0.0829389, 0.083004, 0.082927, 0.0829239, 0.083317], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 4, 6, 1, 6, 1, 1, 5, 0, 8, 28, 1, 1, 0, 1, 1, 1]': ([0.0833712, 0.082963, 0.0829659, 0.082912, 0.0829432, 0.0829568, 0.0829511, 0.0829101, 0.082952, 0.0831072, 0.0833001, 0.082962, 0.0829749, 0.0830131, 0.082969, 0.0829389, 0.082957, 0.082947, 0.082958, 0.0829639, 0.0829871, 0.0839479, 0.083035, 0.082947, 0.0830681, 0.0829389, 0.083004, 0.082927, 0.0829239, 0.083317], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [0, 2, 1, 5, 2, 6, 0, 0, 23, 1, 10, 0, 0, 0, 2, 1, 0, 1]
Fixed Factors: {}
Testing candidate 11: [0, 2, 1, 5, 2, 6, 0, 0, 23, 1, 10, 0, 0, 0, 2, 1, 0, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	5
        Additions: 		698
        Multiplications: 	270
        Divisions: 		0
        Logical: 		0
        Reads: 			1627
        Writes: 		365
        Comparisons:		21
        Gotos: 			0
        
digraph CFG {
	_JOIN_1737373 [label="_JOIN_1737373None...",shape=box];
	_JOIN_1737373 -> _JOIN_1737374;
	1755318 [label="1755318  double scv_80;...",shape=box];
	_JOIN_1737371 [label="_JOIN_1737371None...",shape=box];
	_JOIN_1737371 -> _JOIN_1737373;
	1766163 [label="1766163  register int cbv_4;...",shape=box];
	1767752 [label="1767752  register int cbv_9;...",shape=box];
	1734002 [label="1734002  int i;...",shape=box];
	1734002 -> ForLoop1736926;
	1737370 [label="1737370  scv_81=scv_81+A[i*ny+j]*x[j];...",shape=box];
	1737370 -> _JOIN_1737371;
	1764407 [label="1764407  register int cbv_2, cbv_3;...",shape=box];
	_JOIN_1734829 [label="_JOIN_1734829None...",shape=box];
	_JOIN_1734829 -> _JOIN_1734831;
	ForLoop1737303 [label="ForLoop1737303  for (j=jj; j<=cbv_6; j=j+11) {...",shape=box];
	ForLoop1737303 -> 1737051;
	ForLoop1737303 -> _JOIN_1737303;
	ForLoop1734731 [label="ForLoop1734731  for (j=jj; j<=cbv_1; j=j+11) {...",shape=box];
	ForLoop1734731 -> 1739346;
	ForLoop1734731 -> _JOIN_1734731;
	1754607 [label="1754607  double scv_48, scv_49, scv_50, scv_51, scv_52, scv_53, scv_54, scv_55;...",shape=box];
	1743991 [label="1743991  double scv_13, scv_14, scv_15, scv_16, scv_17, scv_18, scv_19, scv_20;...",shape=box];
	1766571 [label="1766571  register int cbv_7, cbv_8;...",shape=box];
	1751738 [label="1751738  double scv_46, scv_47;...",shape=box];
	ForLoop1738390 [label="ForLoop1738390  for (i=(min(nx-1,iii+1023))-(((min(nx-1,iii+1023))-(iii)+1)%2)+1; i<=min(nx-1,iii+1023); i=i+1) {...",shape=box];
	ForLoop1738390 -> 1759603;
	ForLoop1738390 -> _JOIN_1738390;
	1683174 [label="1683174  y[i]=0.0;...",shape=box];
	1683174 -> _JOIN_1683175;
	ForLoop1738392 [label="ForLoop1738392  for (iii=0; iii<=nx-1; iii=iii+1024) {...",shape=box];
	ForLoop1738392 -> 1734002;
	ForLoop1738392 -> _JOIN_1738392;
	1767810 [label="1767810  register int cbv_10;...",shape=box];
	ForLoop1736854 [label="ForLoop1736854  for (kt=kk; kt<=cbv_4; kt=kt+32) {...",shape=box];
	ForLoop1736854 -> 1743991;
	ForLoop1736854 -> _JOIN_1736854;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 1682495;
	ForLoop1734829 [label="ForLoop1734829  for (j=cbv_2; j<=cbv_3; j=j+1) {...",shape=box];
	ForLoop1734829 -> 1739587;
	ForLoop1734829 -> _JOIN_1734829;
	1737011 [label="1737011  int j;...",shape=box];
	1737051 [label="1737051  scv_81=scv_81+A[i*ny+j]*x[j];...",shape=box];
	1759615 [label="1759615  tmp[i]=scv_81;...",shape=box];
	1759615 -> _JOIN_1738390;
	1739587 [label="1739587  double scv_12;...",shape=box];
	_JOIN_1737374 [label="_JOIN_1737374None...",shape=box];
	_JOIN_1737374 -> ForLoop1738388;
	_JOIN_1738346 [label="_JOIN_1738346None...",shape=box];
	_JOIN_1738346 -> 1767810;
	_JOIN_1738390 [label="_JOIN_1738390None...",shape=box];
	_JOIN_1738390 -> _JOIN_1738392;
	1766238 [label="1766238  register int cbv_5;...",shape=box];
	_JOIN_1738392 [label="_JOIN_1738392None...",shape=box];
	ForLoop1738346 [label="ForLoop1738346  for (kt=kk; kt<=cbv_9; kt=kt+32) {...",shape=box];
	ForLoop1738346 -> 1754607;
	ForLoop1738346 -> _JOIN_1738346;
	_JOIN_1683175 [label="_JOIN_1683175None...",shape=box];
	_JOIN_1683175 -> 1733987;
	_JOIN_1737303 [label="_JOIN_1737303None...",shape=box];
	_JOIN_1737303 -> 1766571;
	1682897 [label="1682897  y[i]=0.0;...",shape=box];
	ForLoop1737374 [label="ForLoop1737374  for (jjj=0; jjj<=ny-1; jjj=jjj+128) {...",shape=box];
	ForLoop1737374 -> ForLoop1737373;
	ForLoop1737374 -> _JOIN_1737374;
	_JOIN_1734831 [label="_JOIN_1734831None...",shape=box];
	_JOIN_1734831 -> _JOIN_1734833;
	_JOIN_1734833 [label="_JOIN_1734833None...",shape=box];
	_JOIN_1734833 -> ForLoop1736924;
	1751756 [label="1751756  tmp[(i+1)]=scv_46;...",shape=box];
	1759603 [label="1759603  double scv_81;...",shape=box];
	ForLoop1683175 [label="ForLoop1683175  for (i=ny-((ny-(0))%24); i<=ny-1; i=i+1) ...",shape=box];
	ForLoop1683175 -> 1683174;
	ForLoop1683175 -> _JOIN_1683175;
	1739346 [label="1739346  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	ForLoop1738387 [label="ForLoop1738387  for (kk=kkk; kk<=min(ny-1,kkk+2032); kk=kk+16) {...",shape=box];
	ForLoop1738387 -> 1767752;
	ForLoop1738387 -> _JOIN_1738387;
	ForLoop1737373 [label="ForLoop1737373  for (jj=jjj; jj<=min(ny-1,jjj+96); jj=jj+32) {...",shape=box];
	ForLoop1737373 -> 1737011;
	ForLoop1737373 -> _JOIN_1737373;
	ForLoop1738385 [label="ForLoop1738385  for (k=kt; k<=cbv_10; k=k+1) {...",shape=box];
	ForLoop1738385 -> 1755318;
	ForLoop1738385 -> _JOIN_1738385;
	_JOIN_1734731 [label="_JOIN_1734731None...",shape=box];
	_JOIN_1734731 -> 1764407;
	ForLoop1734831 [label="ForLoop1734831  for (jj=jjj; jj<=min(ny-1,jjj+96); jj=jj+32) {...",shape=box];
	ForLoop1734831 -> 1734069;
	ForLoop1734831 -> _JOIN_1734831;
	ForLoop1734833 [label="ForLoop1734833  for (jjj=0; jjj<=ny-1; jjj=jjj+128) {...",shape=box];
	ForLoop1734833 -> ForLoop1734831;
	ForLoop1734833 -> _JOIN_1734833;
	ForLoop1737371 [label="ForLoop1737371  for (j=cbv_7; j<=cbv_8; j=j+1) {...",shape=box];
	ForLoop1737371 -> 1737370;
	ForLoop1737371 -> _JOIN_1737371;
	ForLoop1738388 [label="ForLoop1738388  for (kkk=0; kkk<=ny-1; kkk=kkk+2048) {...",shape=box];
	ForLoop1738388 -> ForLoop1738387;
	ForLoop1738388 -> _JOIN_1738388;
	1744803 [label="1744803  double scv_45;...",shape=box];
	ForLoop1736924 [label="ForLoop1736924  for (kkk=0; kkk<=ny-1; kkk=kkk+2048) {...",shape=box];
	ForLoop1736924 -> ForLoop1736922;
	ForLoop1736924 -> _JOIN_1736924;
	ForLoop1736926 [label="ForLoop1736926  for (i=iii; i<=min(nx-1,iii+1023)-1; i=i+2) {...",shape=box];
	ForLoop1736926 -> 1751738;
	ForLoop1736926 -> _JOIN_1736926;
	ForLoop1736920 [label="ForLoop1736920  for (k=kt; k<=cbv_5; k=k+1) {...",shape=box];
	ForLoop1736920 -> 1744803;
	ForLoop1736920 -> _JOIN_1736920;
	ForLoop1736922 [label="ForLoop1736922  for (kk=kkk; kk<=min(ny-1,kkk+2032); kk=kk+16) {...",shape=box];
	ForLoop1736922 -> 1766163;
	ForLoop1736922 -> _JOIN_1736922;
	_JOIN_1736924 [label="_JOIN_1736924None...",shape=box];
	_JOIN_1736924 -> 1751756;
	_JOIN_1736926 [label="_JOIN_1736926None...",shape=box];
	_JOIN_1736926 -> ForLoop1738390;
	1682495 [label="1682495  int i;...",shape=box];
	1682495 -> ForLoop1683106;
	_JOIN_1736920 [label="_JOIN_1736920None...",shape=box];
	_JOIN_1736920 -> _JOIN_1736922;
	_JOIN_1683106 [label="_JOIN_1683106None...",shape=box];
	_JOIN_1683106 -> ForLoop1683175;
	_JOIN_1736922 [label="_JOIN_1736922None...",shape=box];
	_JOIN_1736922 -> _JOIN_1736924;
	_JOIN_1738387 [label="_JOIN_1738387None...",shape=box];
	_JOIN_1738387 -> _JOIN_1738388;
	_JOIN_1738385 [label="_JOIN_1738385None...",shape=box]expected=9369846271501.798828
actual=9369846271501.798828
;
	_JOIN_1738385 -> _JOIN_1738387;
	1733987 [label="1733987  double x_copy;...",shape=box];
	_JOIN_1736854 [label="_JOIN_1736854None...",shape=box];
	_JOIN_1736854 -> 1766238;
	ForLoop1683106 [label="ForLoop1683106  for (i=0; i<=ny-24; i=i+24) {...",shape=box];
	ForLoop1683106 -> 1682897;
	ForLoop1683106 -> _JOIN_1683106;
	1734069 [label="1734069  int j;...",shape=box];
	_JOIN_1738388 [label="_JOIN_1738388None...",shape=box];
	_JOIN_1738388 -> 1759615;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest11.exe __orio_perftest11.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest11.exe  
{'[0, 2, 1, 5, 2, 6, 0, 0, 23, 1, 10, 0, 0, 0, 2, 1, 0, 1]' : 0.104421}
{'[0, 2, 1, 5, 2, 6, 0, 0, 23, 1, 10, 0, 0, 0, 2, 1, 0, 1]' : 0.104088}
{'[0, 2, 1, 5, 2, 6, 0, 0, 23, 1, 10, 0, 0, 0, 2, 1, 0, 1]' : 0.104172}
{'[0, 2, 1, 5, 2, 6, 0, 0, 23, 1, 10, 0, 0, 0, 2, 1, 0, 1]' : 0.104077}
{'[0, 2, 1, 5, 2, 6, 0, 0, 23, 1, 10, 0, 0, 0, 2, 1, 0, 1]' : 0.104064}
{'[0, 2, 1, 5, 2, 6, 0, 0, 23, 1, 10, 0, 0, 0, 2, 1, 0, 1]' : 0.104193}
{'[0, 2, 1, 5, 2, 6, 0, 0, 23, 1, 10, 0, 0, 0, 2, 1, 0, 1]' : 0.104063}
{'[0, 2, 1, 5, 2, 6, 0, 0, 23, 1, 10, 0, 0, 0, 2, 1, 0, 1]' : 0.104062}
{'[0, 2, 1, 5, 2, 6, 0, 0, 23, 1, 10, 0, 0, 0, 2, 1, 0, 1]' : 0.104436}
{'[0, 2, 1, 5, 2, 6, 0, 0, 23, 1, 10, 0, 0, 0, 2, 1, 0, 1]' : 0.104135}
{'[0, 2, 1, 5, 2, 6, 0, 0, 23, 1, 10, 0, 0, 0, 2, 1, 0, 1]' : 0.104048}
{'[0, 2, 1, 5, 2, 6, 0, 0, 23, 1, 10, 0, 0, 0, 2, 1, 0, 1]' : 0.104127}
{'[0, 2, 1, 5, 2, 6, 0, 0, 23, 1, 10, 0, 0, 0, 2, 1, 0, 1]' : 0.10512}
{'[0, 2, 1, 5, 2, 6, 0, 0, 23, 1, 10, 0, 0, 0, 2, 1, 0, 1]' : 0.104044}
{'[0, 2, 1, 5, 2, 6, 0, 0, 23, 1, 10, 0, 0, 0, 2, 1, 0, 1]' : 0.104213}
{'[0, 2, 1, 5, 2, 6, 0, 0, 23, 1, 10, 0, 0, 0, 2, 1, 0, 1]' : 0.104038}
{'[0, 2, 1, 5, 2, 6, 0, 0, 23, 1, 10, 0, 0, 0, 2, 1, 0, 1]' : 0.104128}
{'[0, 2, 1, 5, 2, 6, 0, 0, 23, 1, 10, 0, 0, 0, 2, 1, 0, 1]' : 0.104053}
{'[0, 2, 1, 5, 2, 6, 0, 0, 23, 1, 10, 0, 0, 0, 2, 1, 0, 1]' : 0.104042}
{'[0, 2, 1, 5, 2, 6, 0, 0, 23, 1, 10, 0, 0, 0, 2, 1, 0, 1]' : 0.104052}
{'[0, 2, 1, 5, 2, 6, 0, 0, 23, 1, 10, 0, 0, 0, 2, 1, 0, 1]' : 0.104089}
{'[0, 2, 1, 5, 2, 6, 0, 0, 23, 1, 10, 0, 0, 0, 2, 1, 0, 1]' : 0.10422}
{'[0, 2, 1, 5, 2, 6, 0, 0, 23, 1, 10, 0, 0, 0, 2, 1, 0, 1]' : 0.104078}
{'[0, 2, 1, 5, 2, 6, 0, 0, 23, 1, 10, 0, 0, 0, 2, 1, 0, 1]' : 0.104299}
{'[0, 2, 1, 5, 2, 6, 0, 0, 23, 1, 10, 0, 0, 0, 2, 1, 0, 1]' : 0.104055}
{'[0, 2, 1, 5, 2, 6, 0, 0, 23, 1, 10, 0, 0, 0, 2, 1, 0, 1]' : 0.104079}
{'[0, 2, 1, 5, 2, 6, 0, 0, 23, 1, 10, 0, 0, 0, 2, 1, 0, 1]' : 0.104055}
{'[0, 2, 1, 5, 2, 6, 0, 0, 23, 1, 10, 0, 0, 0, 2, 1, 0, 1]' : 0.104077}
{'[0, 2, 1, 5, 2, 6, 0, 0, 23, 1, 10, 0, 0, 0, 2, 1, 0, 1]' : 0.104062}
{'[0, 2, 1, 5, 2, 6, 0, 0, 23, 1, 10, 0, 0, 0, 2, 1, 0, 1]' : 0.104076}

out:
 ["{'[0, 2, 1, 5, 2, 6, 0, 0, 23, 1, 10, 0, 0, 0, 2, 1, 0, 1]' : 0.104421}", "{'[0, 2, 1, 5, 2, 6, 0, 0, 23, 1, 10, 0, 0, 0, 2, 1, 0, 1]' : 0.104088}", "{'[0, 2, 1, 5, 2, 6, 0, 0, 23, 1, 10, 0, 0, 0, 2, 1, 0, 1]' : 0.104172}", "{'[0, 2, 1, 5, 2, 6, 0, 0, 23, 1, 10, 0, 0, 0, 2, 1, 0, 1]' : 0.104077}", "{'[0, 2, 1, 5, 2, 6, 0, 0, 23, 1, 10, 0, 0, 0, 2, 1, 0, 1]' : 0.104064}", "{'[0, 2, 1, 5, 2, 6, 0, 0, 23, 1, 10, 0, 0, 0, 2, 1, 0, 1]' : 0.104193}", "{'[0, 2, 1, 5, 2, 6, 0, 0, 23, 1, 10, 0, 0, 0, 2, 1, 0, 1]' : 0.104063}", "{'[0, 2, 1, 5, 2, 6, 0, 0, 23, 1, 10, 0, 0, 0, 2, 1, 0, 1]' : 0.104062}", "{'[0, 2, 1, 5, 2, 6, 0, 0, 23, 1, 10, 0, 0, 0, 2, 1, 0, 1]' : 0.104436}", "{'[0, 2, 1, 5, 2, 6, 0, 0, 23, 1, 10, 0, 0, 0, 2, 1, 0, 1]' : 0.104135}", "{'[0, 2, 1, 5, 2, 6, 0, 0, 23, 1, 10, 0, 0, 0, 2, 1, 0, 1]' : 0.104048}", "{'[0, 2, 1, 5, 2, 6, 0, 0, 23, 1, 10, 0, 0, 0, 2, 1, 0, 1]' : 0.104127}", "{'[0, 2, 1, 5, 2, 6, 0, 0, 23, 1, 10, 0, 0, 0, 2, 1, 0, 1]' : 0.10512}", "{'[0, 2, 1, 5, 2, 6, 0, 0, 23, 1, 10, 0, 0, 0, 2, 1, 0, 1]' : 0.104044}", "{'[0, 2, 1, 5, 2, 6, 0, 0, 23, 1, 10, 0, 0, 0, 2, 1, 0, 1]' : 0.104213}", "{'[0, 2, 1, 5, 2, 6, 0, 0, 23, 1, 10, 0, 0, 0, 2, 1, 0, 1]' : 0.104038}", "{'[0, 2, 1, 5, 2, 6, 0, 0, 23, 1, 10, 0, 0, 0, 2, 1, 0, 1]' : 0.104128}", "{'[0, 2, 1, 5, 2, 6, 0, 0, 23, 1, 10, 0, 0, 0, 2, 1, 0, 1]' : 0.104053}", "{'[0, 2, 1, 5, 2, 6, 0, 0, 23, 1, 10, 0, 0, 0, 2, 1, 0, 1]' : 0.104042}", "{'[0, 2, 1, 5, 2, 6, 0, 0, 23, 1, 10, 0, 0, 0, 2, 1, 0, 1]' : 0.104052}", "{'[0, 2, 1, 5, 2, 6, 0, 0, 23, 1, 10, 0, 0, 0, 2, 1, 0, 1]' : 0.104089}", "{'[0, 2, 1, 5, 2, 6, 0, 0, 23, 1, 10, 0, 0, 0, 2, 1, 0, 1]' : 0.10422}", "{'[0, 2, 1, 5, 2, 6, 0, 0, 23, 1, 10, 0, 0, 0, 2, 1, 0, 1]' : 0.104078}", "{'[0, 2, 1, 5, 2, 6, 0, 0, 23, 1, 10, 0, 0, 0, 2, 1, 0, 1]' : 0.104299}", "{'[0, 2, 1, 5, 2, 6, 0, 0, 23, 1, 10, 0, 0, 0, 2, 1, 0, 1]' : 0.104055}", "{'[0, 2, 1, 5, 2, 6, 0, 0, 23, 1, 10, 0, 0, 0, 2, 1, 0, 1]' : 0.104079}", "{'[0, 2, 1, 5, 2, 6, 0, 0, 23, 1, 10, 0, 0, 0, 2, 1, 0, 1]' : 0.104055}", "{'[0, 2, 1, 5, 2, 6, 0, 0, 23, 1, 10, 0, 0, 0, 2, 1, 0, 1]' : 0.104077}", "{'[0, 2, 1, 5, 2, 6, 0, 0, 23, 1, 10, 0, 0, 0, 2, 1, 0, 1]' : 0.104062}", "{'[0, 2, 1, 5, 2, 6, 0, 0, 23, 1, 10, 0, 0, 0, 2, 1, 0, 1]' : 0.104076}"]
returning from 'run': {'[0, 2, 1, 5, 2, 6, 0, 0, 23, 1, 10, 0, 0, 0, 2, 1, 0, 1]': ([0.104421, 0.104088, 0.104172, 0.104077, 0.104064, 0.104193, 0.104063, 0.104062, 0.104436, 0.104135, 0.104048, 0.104127, 0.10512, 0.104044, 0.104213, 0.104038, 0.104128, 0.104053, 0.104042, 0.104052, 0.104089, 0.10422, 0.104078, 0.104299, 0.104055, 0.104079, 0.104055, 0.104077, 0.104062, 0.104076], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.104421, 0.104088, 0.104172, 0.104077, 0.104064, 0.104193, 0.104063, 0.104062, 0.104436, 0.104135, 0.104048, 0.104127, 0.10512, 0.104044, 0.104213, 0.104038, 0.104128, 0.104053, 0.104042, 0.104052, 0.104089, 0.10422, 0.104078, 0.104299, 0.104055, 0.104079, 0.104055, 0.104077, 0.104062, 0.104076], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 1, 5, 2, 6, 0, 0, 23, 1, 10, 0, 0, 0, 2, 1, 0, 1]': ([0.104421, 0.104088, 0.104172, 0.104077, 0.104064, 0.104193, 0.104063, 0.104062, 0.104436, 0.104135, 0.104048, 0.104127, 0.10512, 0.104044, 0.104213, 0.104038, 0.104128, 0.104053, 0.104042, 0.104052, 0.104089, 0.10422, 0.104078, 0.104299, 0.104055, 0.104079, 0.104055, 0.104077, 0.104062, 0.104076], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [3, 0, 3, 4, 3, 4, 0, 1, 3, 28, 0, 25, 2, 0, 0, 1, 0, 1]
Fixed Factors: {}
Testing candidate 12: [3, 0, 3, 4, 3, 4, 0, 1, 3, 28, 0, 25, 2, 0, 0, 1, 0, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	143
        Max loop nest depth: 	6
        Additions: 		10825
        Multiplications: 	3472
        Divisions: 		0
        Logical: 		0
        Reads: 			20883
        Writes: 		4016
        Comparisons:		143
        Gotos: 			0
        
digraph CFG {
	2279119 [label="2279119  for (k=kk; k<=min(ny-1,kk+63); k=k+1) ...",shape=box];
	2446895 [label="2446895  double scv_277;...",shape=box];
	_JOIN_2298410 [label="_JOIN_2298410None...",shape=box];
	_JOIN_2298410 -> 2298442;
	_JOIN_2299558 [label="_JOIN_2299558None...",shape=box];
	_JOIN_2299558 -> 2299590;
	2309922 [label="2309922  for (k=kk; k<=min(ny-1,kk+63); k=k+1) ...",shape=box];
	_JOIN_2302922 [label="_JOIN_2302922None...",shape=box];
	_JOIN_2302922 -> 2778419;
	ForLoop2279055 [label="ForLoop2279055  for (j=jjj; j<=cbv_5; j=j+1) {...",shape=box];
	ForLoop2279055 -> 2428132;
	ForLoop2279055 -> _JOIN_2279055;
	2308774 [label="2308774  for (k=kk; k<=min(ny-1,kk+63); k=k+1) ...",shape=box];
	ForLoop2279057 [label="ForLoop2279057  for (jjj=0; jjj<=ny-1; jjj=jjj+256) {...",shape=box];
	ForLoop2279057 -> 2752789;
	ForLoop2279057 -> _JOIN_2279057;
	2760029 [label="2760029  register int cbv_22, cbv_23;...",shape=box];
	_JOIN_2309810 [label="_JOIN_2309810None...",shape=box];
	_JOIN_2309810 -> 2785775;
	_JOIN_2304070 [label="_JOIN_2304070None...",shape=box];
	_JOIN_2304070 -> 2779645;
	_JOIN_2281110 [label="_JOIN_2281110None...",shape=box];
	_JOIN_2281110 -> 2755125;
	ForLoop2277874 [label="ForLoop2277874  for (k=cbv_3; k<=cbv_4; k=k+1) {...",shape=box];
	ForLoop2277874 -> 2360701;
	ForLoop2277874 -> _JOIN_2277874;
	_JOIN_2312106 [label="_JOIN_2312106None...",shape=box];
	_JOIN_2312106 -> 2788227;
	2777193 [label="2777193  register int cbv_64, cbv_65;...",shape=box];
	ForLoop2277908 [label="ForLoop2277908  for (kk=kkk; kk<=min(ny-1,kkk+448); kk=kk+64) {...",shape=box];
	ForLoop2277908 -> 2245516;
	ForLoop2277908 -> _JOIN_2277908;
	ForLoop2277909 [label="ForLoop2277909  for (kkk=0; kkk<=ny-1; kkk=kkk+512) {...",shape=box];
	ForLoop2277909 -> ForLoop2277908;
	ForLoop2277909 -> _JOIN_2277909;
	_JOIN_2279057 [label="_JOIN_2279057None...",shape=box];
	_JOIN_2279057 -> ForLoop2312222;
	2297294 [label="2297294  for (k=kk; k<=min(ny-1,kk+63); k=k+1) ...",shape=box];
	2303034 [label="2303034  for (k=kk; k<=min(ny-1,kk+63); k=k+1) ...",shape=box];
	2288110 [label="2288110  for (k=kk; k<=min(ny-1,kk+63); k=k+1) ...",shape=box];
	_JOIN_2286850 [label="_JOIN_2286850None...",shape=box];
	_JOIN_2286850 -> 2761255;
	2474171 [label="2474171  double scv_601;...",shape=box];
	ForLoop2309890 [label="ForLoop2309890  for (k=cbv_85; k<=cbv_86; k=k+1) {...",shape=box];
	ForLoop2309890 -> 2490082;
	ForLoop2309890 -> _JOIN_2309890;
	2757577 [label="2757577  register int cbv_16, cbv_17;...",shape=box];
	2771063 [label="2771063  register int cbv_49, cbv_50;...",shape=box];
	_JOIN_2277911 [label="_JOIN_2277911None...",shape=box];
	_JOIN_2277911 -> 2277912;
	2296146 [label="2296146  for (k=kk; k<=min(ny-1,kk+63); k=k+1) ...",shape=box];
	ForLoop2282338 [label="ForLoop2282338  for (k=cbv_13; k<=cbv_14; k=k+1) {...",shape=box];
	ForLoop2282338 -> 2435530;
	ForLoop2282338 -> _JOIN_2282338;
	ForLoop2290374 [label="ForLoop2290374  for (k=cbv_34; k<=cbv_35; k=k+1) {...",shape=box];
	ForLoop2290374 -> 2451441;
	ForLoop2290374 -> _JOIN_2290374;
	2762481 [label="2762481  register int cbv_28, cbv_29;...",shape=box];
	ForLoop2297262 [label="ForLoop2297262  for (k=cbv_52; k<=cbv_53; k=k+1) {...",shape=box];
	ForLoop2297262 -> 2465079;
	ForLoop2297262 -> _JOIN_2297262;
	2493890 [label="2493890  double scv_818, scv_819, scv_820, scv_821, scv_822, scv_823, scv_824, scv_825;...",shape=box];
	_JOIN_2282258 [label="_JOIN_2282258None...",shape=box];
	_JOIN_2282258 -> 2756351;
	ForLoop2312330 [label="ForLoop2312330  for (jjj=0; jjj<=ny-1; jjj=jjj+256) {...",shape=box];
	ForLoop2312330 -> 2788307;
	ForLoop2312330 -> _JOIN_2312330;
	_JOIN_2303002 [label="_JOIN_2303002None...",shape=box];
	_JOIN_2303002 -> 2303034;
	_JOIN_2294886 [label="_JOIN_2294886None...",shape=box];
	_JOIN_2294886 -> 2769837;
	2440076 [label="2440076  double scv_196;...",shape=box];
	2462068 [label="2462068  double scv_440, scv_441, scv_442, scv_443, scv_444, scv_445, scv_446, scv_447;...",shape=box];
	ForLoop2301854 [label="ForLoop2301854  for (k=cbv_64; k<=cbv_65; k=k+1) {...",shape=box];
	ForLoop2301854 -> 2474171;
	ForLoop2301854 -> _JOIN_2301854;
	2277912 [label="2277912  int i;...",shape=box];
	2277912 -> ForLoop2312224;
	2306478 [label="2306478  for (k=kk; k<=min(ny-1,kk+63); k=k+1) ...",shape=box];
	2494628 [label="2494628  double scv_844;...",shape=box];
	2614535 [label="2614535  tmp[(i+20)]=scv_845;...",shape=box];
	ForLoop2285782 [label="ForLoop2285782  for (k=cbv_22; k<=cbv_23; k=k+1) {...",shape=box];
	ForLoop2285782 -> 2442349;
	ForLoop2285782 -> _JOIN_2285782;
	ForLoop2313350 [label="ForLoop2313350  for (kkk=0; kkk<=ny-1; kkk=kkk+512) {...",shape=box];
	ForLoop2313350 -> ForLoop2313349;
	ForLoop2313350 -> _JOIN_2313350;
	2784549 [label="2784549  register int cbv_82, cbv_83;...",shape=box];
	ForLoop2277911 [label="ForLoop2277911  for (it=ii; it<=min(nx-1,ii+63)-31; it=it+32) {...",shape=box];
	ForLoop2277911 -> 2425292;
	ForLoop2277911 -> _JOIN_2277911;
	_JOIN_2312224 [label="_JOIN_2312224None...",shape=box];
	_JOIN_2312224 -> ForLoop2313352;
	2293850 [label="2293850  for (k=kk; k<=min(ny-1,kk+63); k=k+1) ...",shape=box];
	_JOIN_2312222 [label="_JOIN_2312222None...",shape=box];
	_JOIN_2312222 -> 2614535;
	_JOIN_2312220 [label="_JOIN_2312220None...",shape=box];
	_JOIN_2312220 -> _JOIN_2312222;
	ForLoop2245453 [label="ForLoop2245453  for (j=jjj; j<=cbv_1; j=j+1) {...",shape=box];
	ForLoop2245453 -> 2314798;
	ForLoop2245453 -> _JOIN_2245453;
	ForLoop2313352 [label="ForLoop2313352  for (i=(min(nx-1,ii+63))-(((min(nx-1,ii+63))-(it)+1)%29)+1; i<=min(nx-1,ii+63); i=i+1) {...",shape=box];
	ForLoop2313352 -> 2621858;
	ForLoop2313352 -> _JOIN_2313352;
	2307626 [label="2307626  for (k=kk; k<=min(ny-1,kk+63); k=k+1) ...",shape=box];
	ForLoop2313355 [label="ForLoop2313355  for (ii=iii; ii<=min(nx-1,iii+448); ii=ii+64) {...",shape=box];
	ForLoop2313355 -> ForLoop2277911;
	ForLoop2313355 -> _JOIN_2313355;
	ForLoop2313356 [label="ForLoop2313356  for (iii=0; iii<=nx-1; iii=iii+512) {...",shape=box];
	ForLoop2313356 -> ForLoop2313355;
	ForLoop2313356 -> _JOIN_2313356;
	ForLoop2245454 [label="ForLoop2245454  for (jjj=0; jjj<=ny-1; jjj=jjj+256) {...",shape=box];
	ForLoop2245454 -> 2735339;
	ForLoop2245454 -> _JOIN_2245454;
	_JOIN_2277908 [label="_JOIN_2277908None...",shape=box];
	_JOIN_2277908 -> _JOIN_2277909;
	_JOIN_2277909 [label="_JOIN_2277909None...",shape=box];
	_JOIN_2277909 -> 2425310;
	_JOIN_2288078 [label="_JOIN_2288078None...",shape=box];
	_JOIN_2288078 -> 2288110;
	ForLoop2285702 [label="ForLoop2285702  for (k=kk; k<=cbv_21; k=k+26) {...",shape=box];
	ForLoop2285702 -> 2441611;
	ForLoop2285702 -> _JOIN_2285702;
	_JOIN_2305218 [label="_JOIN_2305218None...",shape=box];
	_JOIN_2305218 -> 2780871;
	_JOIN_2311038 [label="_JOIN_2311038None...",shape=box];
	_JOIN_2311038 -> 2311070;
	2772289 [label="2772289  register int cbv_52, cbv_53;...",shape=box];
	ForLoop2293738 [label="ForLoop2293738  for (k=kk; k<=cbv_42; k=k+26) {...",shape=box];
	ForLoop2293738 -> 2457522;
	ForLoop2293738 -> _JOIN_2293738;
	_JOIN_2290294 [label="_JOIN_2290294None...",shape=box];
	_JOIN_2290294 -> 2764933;
	2292702 [label="2292702  for (k=kk; k<=min(ny-1,kk+63); k=k+1) ...",shape=box];
	2473433 [label="2473433  double scv_575, scv_576, scv_577, scv_578, scv_579, scv_580, scv_581, scv_582;...",shape=box];
	_JOIN_2309890 [label="_JOIN_2309890None...",shape=box];
	_JOIN_2309890 -> 2309922;
	ForLoop2280042 [label="ForLoop2280042  for (k=cbv_7; k<=cbv_8; k=k+1) {...",shape=box];
	ForLoop2280042 -> 2430984;
	ForLoop2280042 -> _JOIN_2280042;
	ForLoop2304150 [label="ForLoop2304150  for (k=cbv_70; k<=cbv_71; k=k+1) {...",shape=box];
	ForLoop2304150 -> 2478717;
	ForLoop2304150 -> _JOIN_2304150;
	2430984 [label="2430984  double scv_88;...",shape=box];
	_JOIN_2313315 [label="_JOIN_2313315None...",shape=box];
	_JOIN_2313315 -> 2313347;
	ForLoop1768265 [label="ForLoop1768265  for (i=ny-((ny-(0))%4); i<=ny-1; i=i+1) ...",shape=box];
	ForLoop1768265 -> 1768264;
	ForLoop1768265 -> _JOIN_1768265;
	2277906 [label="2277906  for (k=kk; k<=min(ny-1,kk+63); k=k+1) ...",shape=box];
	2277906 -> _JOIN_2277908;
	ForLoop2312329 [label="ForLoop2312329  for (j=jjj; j<=cbv_93; j=j+1) {...",shape=box];
	ForLoop2312329 -> 2312328;
	ForLoop2312329 -> _JOIN_2312329;
	_JOIN_2284634 [label="_JOIN_2284634None...",shape=box];
	_JOIN_2284634 -> 2284666;
	ForLoop2296114 [label="ForLoop2296114  for (k=cbv_49; k<=cbv_50; k=k+1) {...",shape=box];
	ForLoop2296114 -> 2462806;
	ForLoop2296114 -> _JOIN_2296114;
	_JOIN_2308662 [label="_JOIN_2308662None...",shape=box];
	_JOIN_2308662 -> 2784549;
	_JOIN_2292670 [label="_JOIN_2292670None...",shape=box];
	_JOIN_2292670 -> 2292702;
	ForLoop2299478 [label="ForLoop2299478  for (k=kk; k<=cbv_57; k=k+26) {...",shape=box];
	ForLoop2299478 -> 2468887;
	ForLoop2299478 -> _JOIN_2299478;
	2430255 [label="2430255  double scv_62, scv_63, scv_64, scv_65, scv_66, scv_67, scv_68, scv_69;...",shape=box];
	_JOIN_2290374 [label="_JOIN_2290374None...",shape=box];
	_JOIN_2290374 -> 2290406;
	2458260 [label="2458260  double scv_412;...",shape=box];
	2281222 [label="2281222  for (k=kk; k<=min(ny-1,kk+63); k=k+1) ...",shape=box];
	ForLoop2291442 [label="ForLoop2291442  for (k=kk; k<=cbv_36; k=k+26) {...",shape=box];
	ForLoop2291442 -> 2452976;
	ForLoop2291442 -> _JOIN_2291442;
	2782097 [label="2782097  register int cbv_76, cbv_77;...",shape=box];
	2301886 [label="2301886  for (k=kk; k<=min(ny-1,kk+63); k=k+1) ...",shape=box];
	2755125 [label="2755125  register int cbv_10, cbv_11;...",shape=box];
	2449168 [label="2449168  double scv_304;...",shape=box];
	2756351 [label="2756351  register int cbv_13, cbv_14;...",shape=box];
	ForLoop2308742 [label="ForLoop2308742  for (k=cbv_82; k<=cbv_83; k=k+1) {...",shape=box];
	ForLoop2308742 -> 2487809;
	ForLoop2308742 -> _JOIN_2308742;
	_JOIN_2297262 [label="_JOIN_2297262None...",shape=box];
	_JOIN_2297262 -> 2297294;
	ForLoop2307594 [label="ForLoop2307594  for (k=cbv_79; k<=cbv_80; k=k+1) {...",shape=box];
	ForLoop2307594 -> 2485536;
	ForLoop2307594 -> _JOIN_2307594;
	ForLoop2297182 [label="ForLoop2297182  for (k=kk; k<=cbv_51; k=k+26) {...",shape=box];
	ForLoop2297182 -> 2464341;
	ForLoop2297182 -> _JOIN_2297182;
	_JOIN_2282338 [label="_JOIN_2282338None...",shape=box];
	_JOIN_2282338 -> 2282370;
	_JOIN_2307594 [label="_JOIN_2307594None...",shape=box];
	_JOIN_2307594 -> 2307626;
	_JOIN_2279055 [label="_JOIN_2279055None...",shape=box];
	_JOIN_2279055 -> _JOIN_2279057;
	_JOIN_2277874 [label="_JOIN_2277874None...",shape=box];
	_JOIN_2277874 -> 2277906;
	_JOIN_1768196 [label="_JOIN_1768196None...",shape=box];
	_JOIN_1768196 -> ForLoop1768265;
	2618035 [label="2618035  double scv_900;...",shape=box];
	2778419 [label="2778419  register int cbv_67, cbv_68;...",shape=box];
	2480252 [label="2480252  double scv_656, scv_657, scv_658, scv_659, scv_660, scv_661, scv_662, scv_663;...",shape=box];
	ForLoop2303002 [label="ForLoop2303002  for (k=cbv_67; k<=cbv_68; k=k+1) {...",shape=box];
	ForLoop2303002 -> 2476444;
	ForLoop2303002 -> _JOIN_2303002;
	ForLoop2308662 [label="ForLoop2308662  for (k=kk; k<=cbv_81; k=k+26) {...",shape=box];
	ForLoop2308662 -> 2487071;
	ForLoop2308662 -> _JOIN_2308662;
	ForLoop2292670 [label="ForLoop2292670  for (k=cbv_40; k<=cbv_41; k=k+1) {...",shape=box];
	ForLoop2292670 -> 2455987;
	ForLoop2292670 -> _JOIN_2292670;
	2282370 [label="2282370  for (k=kk; k<=min(ny-1,kk+63); k=k+1) ...",shape=box];
	2780871 [label="2780871  register int cbv_73, cbv_74;...",shape=box];
	_JOIN_2300706 [label="_JOIN_2300706None...",shape=box];
	_JOIN_2300706 -> 2300738;
	_JOIN_2297182 [label="_JOIN_2297182None...",shape=box];
	_JOIN_2297182 -> 2772289;
	2773515 [label="2773515  register int cbv_55, cbv_56;...",shape=box];
	ForLoop2312224 [label="ForLoop2312224  for (i=it; i<=min(nx-1,ii+63)-28; i=i+29) {...",shape=box];
	ForLoop2312224 -> 2614517;
	ForLoop2312224 -> _JOIN_2312224;
	2452976 [label="2452976  double scv_332, scv_333, scv_334, scv_335, scv_336, scv_337, scv_338, scv_339;...",shape=box];
	ForLoop2312222 [label="ForLoop2312222  for (kkk=0; kkk<=ny-1; kkk=kkk+512) {...",shape=box];
	ForLoop2312222 -> ForLoop2312220;
	ForLoop2312222 -> _JOIN_2312222;
	ForLoop2312220 [label="ForLoop2312220  for (kk=kkk; kk<=min(ny-1,kkk+448); kk=kk+64) {...",shape=box];
	ForLoop2312220 -> 2279119;
	ForLoop2312220 -> _JOIN_2312220;
	_JOIN_2296114 [label="_JOIN_2296114None...",shape=box];
	_JOIN_2296114 -> 2296146;
	_JOIN_2312329 [label="_JOIN_2312329None...",shape=box];
	_JOIN_2312329 -> _JOIN_2312330;
	2787001 [label="2787001  register int cbv_88, cbv_89;...",shape=box];
	ForLoop2300706 [label="ForLoop2300706  for (k=cbv_61; k<=cbv_62; k=k+1) {...",shape=box];
	ForLoop2300706 -> 2471898;
	ForLoop2300706 -> _JOIN_2300706;
	2753899 [label="2753899  register int cbv_7, cbv_8;...",shape=box];
	ForLoop2286930 [label="ForLoop2286930  for (k=cbv_25; k<=cbv_26; k=k+1) {...",shape=box];
	ForLoop2286930 -> 2444622;
	ForLoop2286930 -> _JOIN_2286930;
	2437065 [label="2437065  double scv_143, scv_144, scv_145, scv_146, scv_147, scv_148, scv_149, scv_150;...",shape=box];
	_JOIN_2284554 [label="_JOIN_2284554None...",shape=box];
	_JOIN_2284554 -> 2758803;
	2788227 [label="2788227  register int cbv_91, cbv_92;...",shape=box];
	_JOIN_2310958 [label="_JOIN_2310958None...",shape=box];
	_JOIN_2310958 -> 2787001;
	2357057 [label="2357057  double scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8, scv_9;...",shape=box];
	ForLoop2293818 [label="ForLoop2293818  for (k=cbv_43; k<=cbv_44; k=k+1) {...",shape=box];
	ForLoop2293818 -> 2458260;
	ForLoop2293818 -> _JOIN_2293818;
	ForLoop2305298 [label="ForLoop2305298  for (k=cbv_73; k<=cbv_74; k=k+1) {...",shape=box];
	ForLoop2305298 -> 2480990;
	ForLoop2305298 -> _JOIN_2305298;
	2492355 [label="2492355  double scv_817;...",shape=box];
	2485536 [label="2485536  double scv_736;...",shape=box];
	ForLoop2276807 [label="ForLoop2276807  for (k=kk; k<=cbv_2; k=k+26) {...",shape=box];
	ForLoop2276807 -> 2357057;
	ForLoop2276807 -> _JOIN_2276807;
	2490082 [label="2490082  double scv_790;...",shape=box];
	2451441 [label="2451441  double scv_331;...",shape=box];
	ForLoop2289226 [label="ForLoop2289226  for (k=cbv_31; k<=cbv_32; k=k+1) {...",shape=box];
	ForLoop2289226 -> 2449168;
	ForLoop2289226 -> _JOIN_2289226;
	2789417 [label="2789417  register int cbv_95, cbv_96;...",shape=box];
	2478717 [label="2478717  double scv_655;...",shape=box];
	ForLoop2292590 [label="ForLoop2292590  for (k=kk; k<=cbv_39; k=k+26) {...",shape=box];
	ForLoop2292590 -> 2455249;
	ForLoop2292590 -> _JOIN_2292590;
	ForLoop2302922 [label="ForLoop2302922  for (k=kk; k<=cbv_66; k=k+26) {...",shape=box];
	ForLoop2302922 -> 2475706;
	ForLoop2302922 -> _JOIN_2302922;
	2464341 [label="2464341  double scv_467, scv_468, scv_469, scv_470, scv_471, scv_472, scv_473, scv_474;...",shape=box];
	2483263 [label="2483263  double scv_709;...",shape=box];
	_JOIN_2298330 [label="_JOIN_2298330None...",shape=box];
	_JOIN_2298330 -> 2773515;
	ForLoop2304070 [label="ForLoop2304070  for (k=kk; k<=cbv_69; k=k+26) {...",shape=box];
	ForLoop2304070 -> 2477979;
	ForLoop2304070 -> _JOIN_2304070;
	1768065 [label="1768065  int i;...",shape=box];
	1768065 -> ForLoop1768196;
	2764933 [label="2764933  register int cbv_34, cbv_35;...",shape=box];
	2768611 [label="2768611  register int cbv_43, cbv_44;...",shape=box];
	2471898 [label="2471898  double scv_574;...",shape=box];
	2457522 [label="2457522  double scv_386, scv_387, scv_388, scv_389, scv_390, scv_391, scv_392, scv_393;...",shape=box];
	_JOIN_2306446 [label="_JOIN_2306446None...",shape=box];
	_JOIN_2306446 -> 2306478;
	_JOIN_1768265 [label="_JOIN_1768265None...",shape=box];
	_JOIN_1768265 -> 2244443;
	2455987 [label="2455987  double scv_385;...",shape=box];
	2442349 [label="2442349  double scv_223;...",shape=box];
	ForLoop2283406 [label="ForLoop2283406  for (k=kk; k<=cbv_15; k=k+26) {...",shape=box];
	ForLoop2283406 -> 2437065;
	ForLoop2283406 -> _JOIN_2283406;
	2785775 [label="2785775  register int cbv_85, cbv_86;...",shape=box];
	2735339 [label="2735339  register int cbv_1;...",shape=box];
	_JOIN_2313241 [label="_JOIN_2313241None...",shape=box];
	_JOIN_2313241 -> 2789417;
	_JOIN_2285782 [label="_JOIN_2285782None...",shape=box];
	_JOIN_2285782 -> 2285814;
	2305330 [label="2305330  for (k=kk; k<=min(ny-1,kk+63); k=k+1) ...",shape=box];
	_JOIN_2313350 [label="_JOIN_2313350None...",shape=box];
	_JOIN_2313350 -> 2621870;
	2469625 [label="2469625  double scv_547;...",shape=box];
	2280074 [label="2280074  for (k=kk; k<=min(ny-1,kk+63); k=k+1) ...",shape=box];
	2444622 [label="2444622  double scv_250;...",shape=box];
	2433257 [label="2433257  double scv_115;...",shape=box];
	_JOIN_2292590 [label="_JOIN_2292590None...",shape=box];
	_JOIN_2292590 -> 2767385;
	2767385 [label="2767385  register int cbv_40, cbv_41;...",shape=box];
	ForLoop2283486 [label="ForLoop2283486  for (k=cbv_16; k<=cbv_17; k=k+1) {...",shape=box];
	ForLoop2283486 -> 2437803;
	ForLoop2283486 -> _JOIN_2283486;
	_JOIN_2285702 [label="_JOIN_2285702None...",shape=box];
	_JOIN_2285702 -> 2760029;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 1768065;
	ForLoop2313241 [label="ForLoop2313241  for (k=kk; k<=cbv_94; k=k+26) {...",shape=box];
	ForLoop2313241 -> 2617306;
	ForLoop2313241 -> _JOIN_2313241;
	2758803 [label="2758803  register int cbv_19, cbv_20;...",shape=box];
	2484798 [label="2484798  double scv_710, scv_711, scv_712, scv_713, scv_714, scv_715, scv_716, scv_717;...",shape=box];
	2459795 [label="2459795  double scv_413, scv_414, scv_415, scv_416, scv_417, scv_418, scv_419, scv_420;...",shape=box];
	ForLoop2289146 [label="ForLoop2289146  for (k=kk; k<=cbv_30; k=k+26) {...",shape=box];
	ForLoop2289146 -> 2448430;
	ForLoop2289146 -> _JOIN_2289146;
	2244443 [label="2244443  double x_copy;...",shape=box];
	ForLoop1768196 [label="ForLoop1768196  for (i=0; i<=ny-4; i=i+4) {...",shape=box];
	ForLoop1768196 -> 1768167;
	ForLoop1768196 -> _JOIN_1768196;
	2432519 [label="2432519  double scv_89, scv_90, scv_91, scv_92, scv_93, scv_94, scv_95, scv_96;...",shape=box];
	2425310 [label="2425310  tmp[(it+21)]=scv_29;...",shape=box];
	2779645 [label="2779645  register int cbv_70, cbv_71;...",shape=box];
	2425292 [label="2425292  double scv_29, scv_30, scv_31, scv_32, scv_33, scv_34, scv_35, scv_36;...",shape=box];
	_JOIN_2300626 [label="_JOIN_2300626None...",shape=box];
	_JOIN_2300626 -> 2775967;
	2428132 [label="2428132  double scv_61;...",shape=box];
	2617306 [label="2617306  double scv_874, scv_875, scv_876, scv_877, scv_878, scv_879, scv_880, scv_881;...",shape=box];
	_JOIN_2313356 [label="_JOIN_2313356None...",shape=box];
	2289258 [label="2289258  for (k=kk; k<=min(ny-1,kk+63); k=k+1) ...",shape=box];
	ForLoop2282258 [label="ForLoop2282258  for (k=kk; k<=cbv_12; k=k+26) {...",shape=box];
	ForLoop2282258 -> 2434792;
	ForLoop2282258 -> _JOIN_2282258;
	_JOIN_2293738 [label="_JOIN_2293738None...",shape=box];
	_JOIN_2293738 -> 2768611;
	ForLoop2286850 [label="ForLoop2286850  for (k=kk; k<=cbv_24; k=k+26) {...",shape=box];
	ForLoop2286850 -> 2443884;
	ForLoop2286850 -> _JOIN_2286850;
	ForLoop2290294 [label="ForLoop2290294  for (k=kk; k<=cbv_33; k=k+26) {...",shape=box];
	ForLoop2290294 -> 2450703;
	ForLoop2290294 -> _JOIN_2290294;
	2437803 [label="2437803  double scv_169;...",shape=box];
	2491617 [label="2491617  double scv_791, scv_792, scv_793, scv_794, scv_795, scv_796, scv_797, scv_798;...",shape=box];
	1768264 [label="1768264  y[i]=0.0;...",shape=box];
	1768264 -> _JOIN_1768265;
	ForLoop2311038 [label="ForLoop2311038  for (k=cbv_88; k<=cbv_89; k=k+1) {...",shape=box];
	ForLoop2311038 -> 2492355;
	ForLoop2311038 -> _JOIN_2311038;
	2774741 [label="2774741  register int cbv_58, cbv_59;...",shape=box];
	ForLoop2298410 [label="ForLoop2298410  for (k=cbv_55; k<=cbv_56; k=k+1) {...",shape=box];
	ForLoop2298410 -> 2467352;
	ForLoop2298410 -> _JOIN_2298410;
	_JOIN_2301774 [label="_JOIN_2301774None...",shape=box];
	_JOIN_2301774 -> 2777193;
	ForLoop2287998 [label="ForLoop2287998  for (k=kk; k<=cbv_27; k=k+26) {...",shape=box];
	ForLoop2287998 -> 2446157;
	ForLoop2287998 -> _JOIN_2287998;
	_JOIN_2296034 [label="_JOIN_2296034None...",shape=box];
	_JOIN_2296034 -> 2771063;
	2783323 [label="2783323  register int cbv_79, cbv_80;...",shape=box];
	_JOIN_2313352 [label="_JOIN_2313352None...",shape=box];
	_JOIN_2313352 -> _JOIN_2313355;
	2769837 [label="2769837  register int cbv_46, cbv_47;...",shape=box];
	ForLoop2294886 [label="ForLoop2294886  for (k=kk; k<=cbv_45; k=k+26) {...",shape=box];
	ForLoop2294886 -> 2459795;
	ForLoop2294886 -> _JOIN_2294886;
	2443884 [label="2443884  double scv_224, scv_225, scv_226, scv_227, scv_228, scv_229, scv_230, scv_231;...",shape=box];
	_JOIN_2313349 [label="_JOIN_2313349None...",shape=box];
	_JOIN_2313349 -> _JOIN_2313350;
	ForLoop2299558 [label="ForLoop2299558  for (k=cbv_58; k<=cbv_59; k=k+1) {...",shape=box];
	ForLoop2299558 -> 2469625;
	ForLoop2299558 -> _JOIN_2299558;
	2455249 [label="2455249  double scv_359, scv_360, scv_361, scv_362, scv_363, scv_364, scv_365, scv_366;...",shape=box];
	1768167 [label="1768167  y[i]=0.0;...",shape=box];
	ForLoop2306366 [label="ForLoop2306366  for (k=kk; k<=cbv_75; k=k+26) {...",shape=box];
	ForLoop2306366 -> 2482525;
	ForLoop2306366 -> _JOIN_2306366;
	2465079 [label="2465079  double scv_493;...",shape=box];
	ForLoop2305218 [label="ForLoop2305218  for (k=kk; k<=cbv_72; k=k+26) {...",shape=box];
	ForLoop2305218 -> 2480252;
	ForLoop2305218 -> _JOIN_2305218;
	2621870 [label="2621870  tmp[i]=scv_901;...",shape=box];
	2621870 -> _JOIN_2313352;
	2450703 [label="2450703  double scv_305, scv_306, scv_307, scv_308, scv_309, scv_310, scv_311, scv_312;...",shape=box];
	_JOIN_2312186 [label="_JOIN_2312186None...",shape=box];
	_JOIN_2312186 -> 2312218;
	_JOIN_2281190 [label="_JOIN_2281190None...",shape=box];
	_JOIN_2281190 -> 2281222;
	2294998 [label="2294998  for (k=kk; k<=min(ny-1,kk+63); k=k+1) ...",shape=box];
	_JOIN_2307514 [label="_JOIN_2307514None...",shape=box];
	_JOIN_2307514 -> 2783323;
	ForLoop2307514 [label="ForLoop2307514  for (k=kk; k<=cbv_78; k=k+26) {...",shape=box];
	ForLoop2307514 -> 2484798;
	ForLoop2307514 -> _JOIN_2307514;
	2299590 [label="2299590  for (k=kk; k<=min(ny-1,kk+63); k=k+1) ...",shape=box];
	ForLoop2312106 [label="ForLoop2312106  for (k=kk; k<=cbv_90; k=k+26) {...",shape=box];
	ForLoop2312106 -> 2493890;
	ForLoop2312106 -> _JOIN_2312106;
	2621858 [label="2621858  double scv_901;...",shape=box];
	ForLoop2291522 [label="ForLoop2291522  for (k=cbv_37; k<=cbv_38; k=k+1) {...",shape=box];
	ForLoop2291522 -> 2453714;
	ForLoop2291522 -> _JOIN_2291522;
	2283518 [label="2283518  for (k=kk; k<=min(ny-1,kk+63); k=k+1) ...",shape=box];
	ForLoop2310958 [label="ForLoop2310958  for (k=kk; k<=cbv_87; k=k+26) {...",shape=box];
	ForLoop2310958 -> 2491617;
	ForLoop2310958 -> _JOIN_2310958;
	2441611 [label="2441611  double scv_197, scv_198, scv_199, scv_200, scv_201, scv_202, scv_203, scv_204;...",shape=box];
	2312218 [label="2312218  for (k=kk; k<=min(ny-1,kk+63); k=k+1) ...",shape=box];
	2312218 -> _JOIN_2312220;
	2290406 [label="2290406  for (k=kk; k<=min(ny-1,kk+63); k=k+1) ...",shape=box];
	_JOIN_2299478 [label="_JOIN_2299478None...",shape=box];
	_JOIN_2299478 -> 2774741;
	2752228 [label="2752228  register int cbv_3, cbv_4;...",shape=box];
	_JOIN_2287998 [label="_JOIN_2287998None...",shape=box];
	_JOIN_2287998 -> 2762481;
	ForLoop2281110 [label="ForLoop2281110  for (k=kk; k<=cbv_9; k=k+26) {...",shape=box];
	ForLoop2281110 -> 2432519;
	ForLoop2281110 -> _JOIN_2281110;
	_JOIN_2301854 [label="_JOIN_2301854None...",shape=box];
	_JOIN_2301854 -> 2301886;
	_JOIN_2312330 [label="_JOIN_2312330None...",shape=box];
	_JOIN_2312330 -> ForLoop2313350;
	_JOIN_2313355 [label="_JOIN_2313355None...",shape=box];
	_JOIN_2313355 -> _JOIN_2313356;
	2477979 [label="2477979  double scv_629, scv_630, scv_631, scv_632, scv_633, scv_634, scv_635, scv_636;...",shape=box];
	_JOIN_2289146 [label="_JOIN_2289146None...",shape=box];
	_JOIN_2289146 -> 2763707;
	2448430 [label="2448430  double scv_278, scv_279, scv_280, scv_281, scv_282, scv_283, scv_284, scv_285;...",shape=box];
	2446157 [label="2446157  double scv_251, scv_252, scv_253, scv_254, scv_255, scv_256, scv_257, scv_258;...",shape=box];
	2471160 [label="2471160  double scv_548, scv_549, scv_550, scv_551, scv_552, scv_553, scv_554, scv_555;...",shape=box];
	2439338 [label="2439338  double scv_170, scv_171, scv_172, scv_173, scv_174, scv_175, scv_176, scv_177;...",shape=box];
	2360701 [label="2360701  double scv_28;...",shape=box];
	_JOIN_2294966 [label="_JOIN_2294966None...",shape=box];
	_JOIN_2294966 -> 2294998;
	2245516 [label="2245516  for (k=kk; k<=min(ny-1,kk+63); k=k+1) ...",shape=box];
	2314798 [label="2314798  double scv_1;...",shape=box];
	_JOIN_2304150 [label="_JOIN_2304150None...",shape=box];
	_JOIN_2304150 -> 2304182;
	_JOIN_2286930 [label="_JOIN_2286930None...",shape=box];
	_JOIN_2286930 -> 2286962;
	2752789 [label="2752789  register int cbv_5;...",shape=box];
	2311070 [label="2311070  for (k=kk; k<=min(ny-1,kk+63); k=k+1) ...",shape=box];
	_JOIN_2280042 [label="_JOIN_2280042None...",shape=box];
	_JOIN_2280042 -> 2280074;
	ForLoop2281190 [label="ForLoop2281190  for (k=cbv_10; k<=cbv_11; k=k+1) {...",shape=box];
	ForLoop2281190 -> 2433257;
	ForLoop2281190 -> _JOIN_2281190;
	2761255 [label="2761255  register int cbv_25, cbv_26;...",shape=box];
	ForLoop2284634 [label="ForLoop2284634  for (k=cbv_19; k<=cbv_20; k=k+1) {...",shape=box];
	ForLoop2284634 -> 2440076;
	ForLoop2284634 -> _JOIN_2284634;
	_JOIN_2308742 [label="_JOIN_2308742None...",shape=box];
	_JOIN_2308742 -> 2308774;
	2466614 [label="2466614  double scv_494, scv_495, scv_496, scv_497, scv_498, scv_499, scv_500, scv_501;...",shape=box];
	ForLoop2288078 [label="ForLoop2288078  for (k=cbv_28; k<=cbv_29; k=k+1) {...",shape=box];
	ForLoop2288078 -> 2446895;
	ForLoop2288078 -> _JOIN_2288078;
	2304182 [label="2304182  for (k=kk; k<=min(ny-1,kk+63); k=k+1) ...",shape=box];
	2475706 [label="2475706  double scv_602, scv_603, scv_604, scv_605, scv_606, scv_607, scv_608, scv_609;...",shape=box];
	2453714 [label="2453714  double scv_358;...",shape=box];
	2487071 [label="2487071  double scv_737, scv_738, scv_739, scv_740, scv_741, scv_742, scv_743, scv_744;...",shape=box];
	_JOIN_2276807 [label="_JOIN_2276807None...",shape=box];
	_JOIN_2276807 -> 2752228;
	2460533 [label="2460533  double scv_439;...",shape=box];
	2788307 [label="2788307  register int cbv_93;...",shape=box];
	2480990 [label="2480990  double scv_682;...",shape=box];
	ForLoop2313349 [label="ForLoop2313349  for (kk=kkk; kk<=min(ny-1,kkk+448); kk=kk+64) {...",shape=box];
	ForLoop2313349 -> 2312392;
	ForLoop2313349 -> _JOIN_2313349;
	ForLoop2313315 [label="ForLoop2313315  for (k=cbv_95; k<=cbv_96; k=k+1) {...",shape=box];
	ForLoop2313315 -> 2618035;
	ForLoop2313315 -> _JOIN_2313315;
	2313347 [label="2313347  for (k=kk; k<=min(ny-1,kk+63); k=k+1) ...",shape=box];
	2313347 -> _JOIN_2313349;
	2766159 [label="2766159  register int cbv_37, cbv_38;...",shape=box];
	2286962 [label="2286962  for (k=kk; k<=min(ny-1,kk+63); k=k+1) ...",shape=box];
	2312392 [label="2312392  for (k=kk; k<=min(ny-1,kk+63); k=k+1) ...",shape=box];
	ForLoop2294966 [label="ForLoop2294966  for (k=cbv_46; k<=cbv_47; k=k+1) {...",shape=box];
	ForLoop2294966 -> 2460533;
	ForLoop2294966 -> _JOIN_2294966;
	_JOIN_2245453 [label="_JOIN_2245453None...",shape=box];
	_JOIN_2245453 -> _JOIN_2245454;
	2467352 [label="2467352  double scv_520;...",shape=box];
	2614517 [label="2614517  double scv_845, scv_846, scv_847, scv_848, scv_849, scv_850, scv_851, scv_852;...",shape=box];
	2434792 [label="2434792  double scv_116, scv_117, scv_118, scv_119, scv_120, scv_121, scv_122, scv_123;...",shape=box];
	2284666 [label="2284666  for (k=kk; k<=min(ny-1,kk+63); k=k+1) ...",shape=box];
	2291554 [label="2291554  for (k=kk; k<=min(ny-1,kk+63); k=k+1) ...",shape=box];
	_JOIN_2245454 [label="_JOIN_2245454None...",shape=box];
	_JOIN_2245454 -> ForLoop2277909;
	ForLoop2284554 [label="ForLoop2284554  for (k=kk; k<=cbv_18; k=k+26) {...",shape=box];
	ForLoop2284554 -> 2439338;
	ForLoop2284554 -> _JOIN_2284554;
	_JOIN_2291442 [label="_JOIN_2291442None...",shape=box];
	_JOIN_2291442 -> 2766159;
	_JOIN_2283486 [label="_JOIN_2283486None...",shape=box];
	_JOIN_2283486 -> 2283518;
	2482525 [label="2482525  double scv_683, scv_684, scv_685, scv_686, scv_687, scv_688, scv_689, scv_690;...",shape=box];
	ForLoop2312186 [label="ForLoop2312186  for (k=cbv_91; k<=cbv_92; k=k+1) {...",shape=box];
	ForLoop2312186 -> 2494628;
	ForLoop2312186 -> _JOIN_2312186;
	2468887 [label="2468887  double scv_521, scv_522, scv_523, scv_524, scv_525, scv_526, scv_527, scv_528;...",shape=box];
	ForLoop2300626 [label="ForLoop2300626  for (k=kk; k<=cbv_60; k=k+26) {...",shape=box];
	ForLoop2300626 -> 2471160;
	ForLoop2300626 -> _JOIN_2300626;
	_JOIN_2291522 [label="_JOIN_2291522None...",shape=box];
	_JOIN_2291522 -> 2291554;
	2300738 [label="2300738  for (k=kk; k<=min(ny-1,kk+63); k=k+1) ...",shape=box];
	ForLoop2279968 [label="ForLoop2279968  for (k=kk; k<=cbv_6; k=k+26) {...",shape=box];
	ForLoop2279968 -> 2430255;
	ForLoop2279968 -> _JOIN_2279968;
	2487809 [label="2487809  double scv_763;...",shape=box];
	2489344 [label="2489344  double scv_764, scv_765, scv_766, scv_767, scv_768, scv_769, scv_770, scv_771;...",shape=box];
	_JOIN_2306366 [label="_JOIN_2306366None...",shape=box];
	_JOIN_2306366 -> 2782097;
	2435530 [label="2435530  double scv_142;...",shape=box];
	_JOIN_2283406 [label="_JOIN_2283406None...",shape=box];
	_JOIN_2283406 -> 2757577;
	2312328 [label="2312328  scv_901=scv_901+A[i*ny+j]*x[j];...",shape=box];
	2312328 -> _JOIN_2312329;
	ForLoop2309810 [label="ForLoop2309810  for (k=kk; k<=cbv_84; k=k+26) {...",shape=box];
	ForLoop2expected=9369846271501.798828
actual=9369846271501.798828
309810 -> 2489344;
	ForLoop2309810 -> _JOIN_2309810;
	2298442 [label="2298442  for (k=kk; k<=min(ny-1,kk+63); k=k+1) ...",shape=box];
	2763707 [label="2763707  register int cbv_31, cbv_32;...",shape=box];
	ForLoop2298330 [label="ForLoop2298330  for (k=kk; k<=cbv_54; k=k+26) {...",shape=box];
	ForLoop2298330 -> 2466614;
	ForLoop2298330 -> _JOIN_2298330;
	2462806 [label="2462806  double scv_466;...",shape=box];
	ForLoop2306446 [label="ForLoop2306446  for (k=cbv_76; k<=cbv_77; k=k+1) {...",shape=box];
	ForLoop2306446 -> 2483263;
	ForLoop2306446 -> _JOIN_2306446;
	_JOIN_2305298 [label="_JOIN_2305298None...",shape=box];
	_JOIN_2305298 -> 2305330;
	_JOIN_2279968 [label="_JOIN_2279968None...",shape=box];
	_JOIN_2279968 -> 2753899;
	2775967 [label="2775967  register int cbv_61, cbv_62;...",shape=box];
	_JOIN_2293818 [label="_JOIN_2293818None...",shape=box];
	_JOIN_2293818 -> 2293850;
	_JOIN_2289226 [label="_JOIN_2289226None...",shape=box];
	_JOIN_2289226 -> 2289258;
	2285814 [label="2285814  for (k=kk; k<=min(ny-1,kk+63); k=k+1) ...",shape=box];
	2476444 [label="2476444  double scv_628;...",shape=box];
	ForLoop2296034 [label="ForLoop2296034  for (k=kk; k<=cbv_48; k=k+26) {...",shape=box];
	ForLoop2296034 -> 2462068;
	ForLoop2296034 -> _JOIN_2296034;
	ForLoop2301774 [label="ForLoop2301774  for (k=kk; k<=cbv_63; k=k+26) {...",shape=box];
	ForLoop2301774 -> 2473433;
	ForLoop2301774 -> _JOIN_2301774;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest12.exe __orio_perftest12.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest12.exe  
{'[3, 0, 3, 4, 3, 4, 0, 1, 3, 28, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.157274}
{'[3, 0, 3, 4, 3, 4, 0, 1, 3, 28, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.157286}
{'[3, 0, 3, 4, 3, 4, 0, 1, 3, 28, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.156772}
{'[3, 0, 3, 4, 3, 4, 0, 1, 3, 28, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.157172}
{'[3, 0, 3, 4, 3, 4, 0, 1, 3, 28, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.156594}
{'[3, 0, 3, 4, 3, 4, 0, 1, 3, 28, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.156755}
{'[3, 0, 3, 4, 3, 4, 0, 1, 3, 28, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.156976}
{'[3, 0, 3, 4, 3, 4, 0, 1, 3, 28, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.156876}
{'[3, 0, 3, 4, 3, 4, 0, 1, 3, 28, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.156674}
{'[3, 0, 3, 4, 3, 4, 0, 1, 3, 28, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.156265}
{'[3, 0, 3, 4, 3, 4, 0, 1, 3, 28, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.156979}
{'[3, 0, 3, 4, 3, 4, 0, 1, 3, 28, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.157446}
{'[3, 0, 3, 4, 3, 4, 0, 1, 3, 28, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.156934}
{'[3, 0, 3, 4, 3, 4, 0, 1, 3, 28, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.157206}
{'[3, 0, 3, 4, 3, 4, 0, 1, 3, 28, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.156804}
{'[3, 0, 3, 4, 3, 4, 0, 1, 3, 28, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.156637}
{'[3, 0, 3, 4, 3, 4, 0, 1, 3, 28, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.157217}
{'[3, 0, 3, 4, 3, 4, 0, 1, 3, 28, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.156958}
{'[3, 0, 3, 4, 3, 4, 0, 1, 3, 28, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.15722}
{'[3, 0, 3, 4, 3, 4, 0, 1, 3, 28, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.157291}
{'[3, 0, 3, 4, 3, 4, 0, 1, 3, 28, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.157487}
{'[3, 0, 3, 4, 3, 4, 0, 1, 3, 28, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.157259}
{'[3, 0, 3, 4, 3, 4, 0, 1, 3, 28, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.157185}
{'[3, 0, 3, 4, 3, 4, 0, 1, 3, 28, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.156929}
{'[3, 0, 3, 4, 3, 4, 0, 1, 3, 28, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.157785}
{'[3, 0, 3, 4, 3, 4, 0, 1, 3, 28, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.156871}
{'[3, 0, 3, 4, 3, 4, 0, 1, 3, 28, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.156683}
{'[3, 0, 3, 4, 3, 4, 0, 1, 3, 28, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.156931}
{'[3, 0, 3, 4, 3, 4, 0, 1, 3, 28, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.156988}
{'[3, 0, 3, 4, 3, 4, 0, 1, 3, 28, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.157063}

out:
 ["{'[3, 0, 3, 4, 3, 4, 0, 1, 3, 28, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.157274}", "{'[3, 0, 3, 4, 3, 4, 0, 1, 3, 28, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.157286}", "{'[3, 0, 3, 4, 3, 4, 0, 1, 3, 28, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.156772}", "{'[3, 0, 3, 4, 3, 4, 0, 1, 3, 28, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.157172}", "{'[3, 0, 3, 4, 3, 4, 0, 1, 3, 28, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.156594}", "{'[3, 0, 3, 4, 3, 4, 0, 1, 3, 28, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.156755}", "{'[3, 0, 3, 4, 3, 4, 0, 1, 3, 28, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.156976}", "{'[3, 0, 3, 4, 3, 4, 0, 1, 3, 28, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.156876}", "{'[3, 0, 3, 4, 3, 4, 0, 1, 3, 28, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.156674}", "{'[3, 0, 3, 4, 3, 4, 0, 1, 3, 28, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.156265}", "{'[3, 0, 3, 4, 3, 4, 0, 1, 3, 28, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.156979}", "{'[3, 0, 3, 4, 3, 4, 0, 1, 3, 28, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.157446}", "{'[3, 0, 3, 4, 3, 4, 0, 1, 3, 28, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.156934}", "{'[3, 0, 3, 4, 3, 4, 0, 1, 3, 28, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.157206}", "{'[3, 0, 3, 4, 3, 4, 0, 1, 3, 28, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.156804}", "{'[3, 0, 3, 4, 3, 4, 0, 1, 3, 28, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.156637}", "{'[3, 0, 3, 4, 3, 4, 0, 1, 3, 28, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.157217}", "{'[3, 0, 3, 4, 3, 4, 0, 1, 3, 28, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.156958}", "{'[3, 0, 3, 4, 3, 4, 0, 1, 3, 28, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.15722}", "{'[3, 0, 3, 4, 3, 4, 0, 1, 3, 28, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.157291}", "{'[3, 0, 3, 4, 3, 4, 0, 1, 3, 28, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.157487}", "{'[3, 0, 3, 4, 3, 4, 0, 1, 3, 28, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.157259}", "{'[3, 0, 3, 4, 3, 4, 0, 1, 3, 28, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.157185}", "{'[3, 0, 3, 4, 3, 4, 0, 1, 3, 28, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.156929}", "{'[3, 0, 3, 4, 3, 4, 0, 1, 3, 28, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.157785}", "{'[3, 0, 3, 4, 3, 4, 0, 1, 3, 28, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.156871}", "{'[3, 0, 3, 4, 3, 4, 0, 1, 3, 28, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.156683}", "{'[3, 0, 3, 4, 3, 4, 0, 1, 3, 28, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.156931}", "{'[3, 0, 3, 4, 3, 4, 0, 1, 3, 28, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.156988}", "{'[3, 0, 3, 4, 3, 4, 0, 1, 3, 28, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.157063}"]
returning from 'run': {'[3, 0, 3, 4, 3, 4, 0, 1, 3, 28, 0, 25, 2, 0, 0, 1, 0, 1]': ([0.157274, 0.157286, 0.156772, 0.157172, 0.156594, 0.156755, 0.156976, 0.156876, 0.156674, 0.156265, 0.156979, 0.157446, 0.156934, 0.157206, 0.156804, 0.156637, 0.157217, 0.156958, 0.15722, 0.157291, 0.157487, 0.157259, 0.157185, 0.156929, 0.157785, 0.156871, 0.156683, 0.156931, 0.156988, 0.157063], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.157274, 0.157286, 0.156772, 0.157172, 0.156594, 0.156755, 0.156976, 0.156876, 0.156674, 0.156265, 0.156979, 0.157446, 0.156934, 0.157206, 0.156804, 0.156637, 0.157217, 0.156958, 0.15722, 0.157291, 0.157487, 0.157259, 0.157185, 0.156929, 0.157785, 0.156871, 0.156683, 0.156931, 0.156988, 0.157063], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[3, 0, 3, 4, 3, 4, 0, 1, 3, 28, 0, 25, 2, 0, 0, 1, 0, 1]': ([0.157274, 0.157286, 0.156772, 0.157172, 0.156594, 0.156755, 0.156976, 0.156876, 0.156674, 0.156265, 0.156979, 0.157446, 0.156934, 0.157206, 0.156804, 0.156637, 0.157217, 0.156958, 0.15722, 0.157291, 0.157487, 0.157259, 0.157185, 0.156929, 0.157785, 0.156871, 0.156683, 0.156931, 0.156988, 0.157063], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [5, 5, 0, 0, 4, 2, 0, 0, 8, 25, 0, 5, 0, 1, 1, 1, 1, 1]
Fixed Factors: {}
Testing candidate 13: [5, 5, 0, 0, 4, 2, 0, 0, 8, 25, 0, 5, 0, 1, 1, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	71
        Max loop nest depth: 	5
        Additions: 		3272
        Multiplications: 	1296
        Divisions: 		0
        Logical: 		0
        Reads: 			6788
        Writes: 		1390
        Comparisons:		71
        Gotos: 			0
        
digraph CFG {
	2959608 [label="2959608  double scv_101;...",shape=box];
	3044384 [label="3044384  register int cbv_84;...",shape=box];
	2960668 [label="2960668  double scv_115;...",shape=box];
	3038975 [label="3038975  register int cbv_41, cbv_42;...",shape=box];
	ForLoop2914457 [label="ForLoop2914457  for (k=cbv_41; k<=cbv_42; k=k+1) {...",shape=box];
	ForLoop2914457 -> 2960138;
	ForLoop2914457 -> _JOIN_2914457;
	ForLoop2915853 [label="ForLoop2915853  for (k=kt; k<=cbv_55; k=k+6) {...",shape=box];
	ForLoop2915853 -> 2962588;
	ForLoop2915853 -> _JOIN_2915853;
	2790325 [label="2790325  y[i]=0.0;...",shape=box];
	2790325 -> _JOIN_2790326;
	_JOIN_2914383 [label="_JOIN_2914383None...",shape=box];
	_JOIN_2914383 -> 3038975;
	_JOIN_2917985 [label="_JOIN_2917985None...",shape=box];
	_JOIN_2917985 -> 2917987;
	2929957 [label="2929957  double scv_9;...",shape=box];
	3044081 [label="3044081  register int cbv_83;...",shape=box];
	ForLoop2918631 [label="ForLoop2918631  for (j=jt; j<=cbv_83; j=j+1) {...",shape=box];
	ForLoop2918631 -> 2918630;
	ForLoop2918631 -> _JOIN_2918631;
	ForLoop2918633 [label="ForLoop2918633  for (jj=jjj; jj<=min(ny-1,jjj+256); jj=jj+256) {...",shape=box];
	ForLoop2918633 -> 3044034;
	ForLoop2918633 -> _JOIN_2918633;
	3034894 [label="3034894  register int cbv_8, cbv_9;...",shape=box];
	2963848 [label="2963848  double scv_157;...",shape=box];
	3005130 [label="3005130  double scv_226, scv_227, scv_228, scv_229, scv_230, scv_231, scv_232, scv_233;...",shape=box];
	2956428 [label="2956428  double scv_59;...",shape=box];
	ForLoop2917323 [label="ForLoop2917323  for (k=kt; k<=cbv_70; k=k+6) {...",shape=box];
	ForLoop2917323 -> 2965238;
	ForLoop2917323 -> _JOIN_2917323;
	_JOIN_2919146 [label="_JOIN_2919146None...",shape=box];
	_JOIN_2919146 -> 3007382;
	_JOIN_2919143 [label="_JOIN_2919143None...",shape=box];
	_JOIN_2919143 -> _JOIN_2919146;
	_JOIN_2914971 [label="_JOIN_2914971None...",shape=box];
	_JOIN_2914971 -> 3039717;
	2962588 [label="2962588  double scv_137, scv_138, scv_139, scv_140, scv_141, scv_142;...",shape=box];
	_JOIN_2910861 [label="_JOIN_2910861None...",shape=box];
	_JOIN_2910861 -> 3034523;
	2957818 [label="2957818  double scv_74, scv_75, scv_76, scv_77, scv_78, scv_79;...",shape=box];
	ForLoop2917397 [label="ForLoop2917397  for (k=cbv_71; k<=cbv_72; k=k+1) {...",shape=box];
	ForLoop2917397 -> 2965438;
	ForLoop2917397 -> _JOIN_2917397;
	_JOIN_2915927 [label="_JOIN_2915927None...",shape=box];
	_JOIN_2915927 -> 2915929;
	3043056 [label="3043056  register int cbv_74, cbv_75;...",shape=box];
	ForLoop2903058 [label="ForLoop2903058  for (jt=jj; jt<=cbv_1; jt=jt+8) {...",shape=box];
	ForLoop2903058 -> 2928654;
	ForLoop2903058 -> _JOIN_2903058;
	2966498 [label="2966498  double scv_192;...",shape=box];
	2958878 [label="2958878  double scv_88, scv_89, scv_90, scv_91, scv_92, scv_93;...",shape=box];
	2962258 [label="2962258  double scv_136;...",shape=box];
	2957488 [label="2957488  double scv_73;...",shape=box];
	ForLoop2914751 [label="ForLoop2914751  for (k=cbv_44; k<=cbv_45; k=k+1) {...",shape=box];
	ForLoop2914751 -> 2960668;
	ForLoop2914751 -> _JOIN_2914751;
	_JOIN_2911149 [label="_JOIN_2911149None...",shape=box];
	_JOIN_2911149 -> 3034894;
	_JOIN_2917323 [label="_JOIN_2917323None...",shape=box];
	_JOIN_2917323 -> 3042685;
	_JOIN_2914751 [label="_JOIN_2914751None...",shape=box];
	_JOIN_2914751 -> 2914753;
	2963118 [label="2963118  double scv_144, scv_145, scv_146, scv_147, scv_148, scv_149;...",shape=box];
	2959078 [label="2959078  double scv_94;...",shape=box];
	ForLoop2917691 [label="ForLoop2917691  for (k=cbv_74; k<=cbv_75; k=k+1) {...",shape=box];
	ForLoop2917691 -> 2965968;
	ForLoop2917691 -> _JOIN_2917691;
	_JOIN_2914163 [label="_JOIN_2914163None...",shape=box];
	_JOIN_2914163 -> 2914165;
	3035265 [label="3035265  register int cbv_11, cbv_12;...",shape=box];
	ForLoop2919150 [label="ForLoop2919150  for (ii=0; ii<=nx-1; ii=ii+256) {...",shape=box];
	ForLoop2919150 -> 2895884;
	ForLoop2919150 -> _JOIN_2919150;
	3002445 [label="3002445  double scv_200, scv_201, scv_202, scv_203, scv_204, scv_205, scv_206, scv_207;...",shape=box];
	3040830 [label="3040830  register int cbv_56, cbv_57;...",shape=box];
	_JOIN_2913869 [label="_JOIN_2913869None...",shape=box];
	_JOIN_2913869 -> 2913871;
	2917987 [label="2917987  int k;...",shape=box];
	3044034 [label="3044034  register int cbv_82;...",shape=box];
	ForLoop2911443 [label="ForLoop2911443  for (k=kt; k<=cbv_10; k=k+6) {...",shape=box];
	ForLoop2911443 -> 2954638;
	ForLoop2911443 -> _JOIN_2911443;
	3043427 [label="3043427  register int cbv_77, cbv_78;...",shape=box];
	2965238 [label="2965238  double scv_172, scv_173, scv_174, scv_175, scv_176, scv_177;...",shape=box];
	ForLoop2913795 [label="ForLoop2913795  for (k=kt; k<=cbv_34; k=k+6) {...",shape=box];
	ForLoop2913795 -> 2958878;
	ForLoop2913795 -> _JOIN_2913795;
	ForLoop2916809 [label="ForLoop2916809  for (k=cbv_65; k<=cbv_66; k=k+1) {...",shape=box];
	ForLoop2916809 -> 2964378;
	ForLoop2916809 -> _JOIN_2916809;
	_JOIN_2919150 [label="_JOIN_2919150None...",shape=box];
	2956958 [label="2956958  double scv_66;...",shape=box];
	2957288 [label="2957288  double scv_67, scv_68, scv_69, scv_70, scv_71, scv_72;...",shape=box];
	ForLoop2910678 [label="ForLoop2910678  for (kt=kkk; kt<=cbv_3; kt=kt+8) {...",shape=box];
	ForLoop2910678 -> 2952765;
	ForLoop2910678 -> _JOIN_2910678;
	2952765 [label="2952765  double scv_10, scv_11, scv_12, scv_13, scv_14, scv_15, scv_16, scv_17;...",shape=box];
	_JOIN_2913501 [label="_JOIN_2913501None...",shape=box];
	_JOIN_2913501 -> 3037862;
	_JOIN_2912619 [label="_JOIN_2912619None...",shape=box];
	_JOIN_2912619 -> 3036749;
	3036378 [label="3036378  register int cbv_20, cbv_21;...",shape=box];
	3029683 [label="3029683  register int cbv_1;...",shape=box];
	_JOIN_2912105 [label="_JOIN_2912105None...",shape=box];
	_JOIN_2912105 -> 2912107;
	2954308 [label="2954308  double scv_31;...",shape=box];
	3007382 [label="3007382  tmp[i]=scv_241;...",shape=box];
	3007382 -> _JOIN_2919148;
	2928654 [label="2928654  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	2895869 [label="2895869  double x_copy;...",shape=box];
	_JOIN_2913575 [label="_JOIN_2913575None...",shape=box];
	_JOIN_2913575 -> 2913577;
	2790006 [label="2790006  int i;...",shape=box];
	3039346 [label="3039346  register int cbv_44, cbv_45;...",shape=box];
	ForLoop2916735 [label="ForLoop2916735  for (k=kt; k<=cbv_64; k=k+6) {...",shape=box];
	ForLoop2916735 -> 2964178;
	ForLoop2916735 -> _JOIN_2916735;
	_JOIN_2919148 [label="_JOIN_2919148None...",shape=box];
	_JOIN_2919148 -> _JOIN_2919150;
	2954638 [label="2954638  double scv_32, scv_33, scv_34, scv_35, scv_36, scv_37;...",shape=box];
	_JOIN_2917397 [label="_JOIN_2917397None...",shape=box];
	_JOIN_2917397 -> 2917399;
	ForLoop2916221 [label="ForLoop2916221  for (k=cbv_59; k<=cbv_60; k=k+1) {...",shape=box];
	ForLoop2916221 -> 2963318;
	ForLoop2916221 -> _JOIN_2916221;
	ForLoop2790257 [label="ForLoop2790257  for (i=0; i<=cbv_1; i=i+9) {...",shape=box];
	ForLoop2790257 -> 2790183;
	ForLoop2790257 -> _JOIN_2790257;
	ForLoop2919143 [label="ForLoop2919143  for (k=cbv_86; k<=cbv_87; k=k+1) {...",shape=box];
	ForLoop2919143 -> 3005743;
	ForLoop2919143 -> _JOIN_2919143;
	2916811 [label="2916811  int k;...",shape=box];
	_JOIN_2915339 [label="_JOIN_2915339None...",shape=box];
	_JOIN_2915339 -> 2915341;
	_JOIN_2912987 [label="_JOIN_2912987None...",shape=box];
	_JOIN_2912987 -> 2912989;
	_JOIN_2916221 [label="_JOIN_2916221None...",shape=box];
	_JOIN_2916221 -> 2916223;
	_JOIN_2913281 [label="_JOIN_2913281None...",shape=box];
	_JOIN_2913281 -> 2913283;
	ForLoop2912399 [label="ForLoop2912399  for (k=cbv_20; k<=cbv_21; k=k+1) {...",shape=box];
	ForLoop2912399 -> 2956428;
	ForLoop2912399 -> _JOIN_2912399;
	3042685 [label="3042685  register int cbv_71, cbv_72;...",shape=box];
	ForLoop2911517 [label="ForLoop2911517  for (k=cbv_11; k<=cbv_12; k=k+1) {...",shape=box];
	ForLoop2911517 -> 2954838;
	ForLoop2911517 -> _JOIN_2911517;
	2964908 [label="2964908  double scv_171;...",shape=box];
	2914459 [label="2914459  int k;...",shape=box];
	_JOIN_2910678 [label="_JOIN_2910678None...",shape=box];
	_JOIN_2910678 -> 2910679;
	ForLoop2917617 [label="ForLoop2917617  for (k=kt; k<=cbv_73; k=k+6) {...",shape=box];
	ForLoop2917617 -> 2965768;
	ForLoop2917617 -> _JOIN_2917617;
	2965768 [label="2965768  double scv_179, scv_180, scv_181, scv_182, scv_183, scv_184;...",shape=box];
	2958018 [label="2958018  double scv_80;...",shape=box];
	_JOIN_2915265 [label="_JOIN_2915265None...",shape=box];
	_JOIN_2915265 -> 3040088;
	_JOIN_2913207 [label="_JOIN_2913207None...",shape=box];
	_JOIN_2913207 -> 3037491;
	ForLoop2918592 [label="ForLoop2918592  for (jt=jj; jt<=cbv_82; jt=jt+8) {...",shape=box];
	ForLoop2918592 -> 2918408;
	ForLoop2918592 -> _JOIN_2918592;
	_JOIN_2903058 [label="_JOIN_2903058None...",shape=box];
	_JOIN_2903058 -> 3030160;
	2910931 [label="2910931  int k;...",shape=box];
	2917105 [label="2917105  int k;...",shape=box];
	_JOIN_2912913 [label="_JOIN_2912913None...",shape=box];
	_JOIN_2912913 -> 3037120;
	2964378 [label="2964378  double scv_164;...",shape=box];
	2915047 [label="2915047  int k;...",shape=box];
	2918630 [label="2918630  scv_241=scv_241+A[i*ny+j]*x[j];...",shape=box];
	2918630 -> _JOIN_2918631;
	_JOIN_2914677 [label="_JOIN_2914677None...",shape=box];
	_JOIN_2914677 -> 3039346;
	2917399 [label="2917399  int k;...",shape=box];
	2911225 [label="2911225  int k;...",shape=box];
	_JOIN_2790257 [label="_JOIN_2790257None...",shape=box];
	_JOIN_2790257 -> 2790448;
	2964708 [label="2964708  double scv_165, scv_166, scv_167, scv_168, scv_169, scv_170;...",shape=box];
	2967028 [label="2967028  double scv_199;...",shape=box];
	ForLoop2910861 [label="ForLoop2910861  for (k=kt; k<=cbv_4; k=k+6) {...",shape=box];
	ForLoop2910861 -> 2953587;
	ForLoop2910861 -> _JOIN_2910861;
	3034206 [label="3034206  register int cbv_3;...",shape=box];
	ForLoop2915927 [label="ForLoop2915927  for (k=cbv_56; k<=cbv_57; k=k+1) {...",shape=box];
	ForLoop2915927 -> 2962788;
	ForLoop2915927 -> _JOIN_2915927;
	ForLoop2915559 [label="ForLoop2915559  for (k=kt; k<=cbv_52; k=k+6) {...",shape=box];
	ForLoop2915559 -> 2962058;
	ForLoop2915559 -> _JOIN_2915559;
	2960138 [label="2960138  double scv_108;...",shape=box];
	2913871 [label="2913871  int k;...",shape=box];
	3037862 [label="3037862  register int cbv_32, cbv_33;...",shape=box];
	ForLoop2913207 [label="ForLoop2913207  for (k=kt; k<=cbv_28; k=k+6) {...",shape=box];
	ForLoop2913207 -> 2957818;
	ForLoop2913207 -> _JOIN_2913207;
	2959408 [label="2959408  double scv_95, scv_96, scv_97, scv_98, scv_99, scv_100;...",shape=box];
	2917693 [label="2917693  int k;...",shape=box];
	_JOIN_2914457 [label="_JOIN_2914457None...",shape=box];
	_JOIN_2914457 -> 2914459;
	2912989 [label="2912989  int k;...",shape=box];
	2895884 [label="2895884  int i;...",shape=box];
	2895884 -> ForLoop2918284;
	3040088 [label="3040088  register int cbv_50, cbv_51;...",shape=box];
	2966298 [label="2966298  double scv_186, scv_187, scv_188, scv_189, scv_190, scv_191;...",shape=box];
	ForLoop2919146 [label="ForLoop2919146  for (kkk=0; kkk<=ny-1; kkk=kkk+128) {...",shape=box];
	ForLoop2919146 -> 3044384;
	ForLoop2919146 -> _JOIN_2919146;
	2960998 [label="2960998  double scv_116, scv_117, scv_118, scv_119, scv_120, scv_121;...",shape=box];
	3037120 [label="3037120  register int cbv_26, cbv_27;...",shape=box];
	2966828 [label="2966828  double scv_193, scv_194, scv_195, scv_196, scv_197, scv_198;...",shape=box];
	2956228 [label="2956228  double scv_53, scv_54, scv_55, scv_56, scv_57, scv_58;...",shape=box];
	_JOIN_2912693 [label="_JOIN_2912693None...",shape=box];
	_JOIN_2912693 -> 2912695;
	2962058 [label="2962058  double scv_130, scv_131, scv_132, scv_133, scv_134, scv_135;...",shape=box];
	ForLoop2918279 [label="ForLoop2918279  for (k=cbv_80; k<=cbv_81; k=k+1) {...",shape=box];
	ForLoop2918279 -> 2967028;
	ForLoop2918279 -> _JOIN_2918279;
	ForLoop2919075 [label="ForLoop2919075  for (k=kt; k<=cbv_85; k=k+6) {...",shape=box];
	ForLoop2919075 -> 3005552;
	ForLoop2919075 -> _JOIN_2919075;
	ForLoop2917911 [label="ForLoop2917911  for (k=kt; k<=cbv_76; k=k+6) {...",shape=box];
	ForLoop2917911 -> 2966298;
	ForLoop2917911 -> _JOIN_2917911;
	ForLoop2916515 [label="ForLoop2916515  for (k=cbv_62; k<=cbv_63; k=k+1) {...",shape=box];
	ForLoop2916515 -> 2963848;
	ForLoop2916515 -> _JOIN_2916515;
	_JOIN_2910929 [label="_JOIN_2910929None...",shape=box];
	_JOIN_2910929 -> 2910931;
	3005743 [label="3005743  double scv_240;...",shape=box];
	_JOIN_2790326 [label="_JOIN_2790326None...",shape=box];
	_JOIN_2790326 -> 2895869;
	3036749 [label="3036749  register int cbv_23, cbv_24;...",shape=box];
	_JOIN_2903825 [label="_JOIN_2903825None...",shape=box];
	_JOIN_2903825 -> _JOIN_2903827;
	_JOIN_2903827 [label="_JOIN_2903827None...",shape=box];
	_JOIN_2903827 -> ForLoop2918282;
	ForLoop2915633 [label="ForLoop2915633  for (k=cbv_53; k<=cbv_54; k=k+1) {...",shape=box];
	ForLoop2915633 -> 2962258;
	ForLoop2915633 -> _JOIN_2915633;
	_JOIN_2903823 [label="_JOIN_2903823None...",shape=box];
	_JOIN_2903823 -> _JOIN_2903825;
	3005552 [label="3005552  double scv_234, scv_235, scv_236, scv_237, scv_238, scv_239;...",shape=box];
	2965968 [label="2965968  double scv_185;...",shape=box];
	2961198 [label="2961198  double scv_122;...",shape=box];
	_JOIN_2916441 [label="_JOIN_2916441None...",shape=box];
	_JOIN_2916441 -> 3041572;
	3043798 [label="3043798  register int cbv_80, cbv_81;...",shape=box];
	2913577 [label="2913577  int k;...",shape=box];
	_JOIN_2911517 [label="_JOIN_2911517None...",shape=box];
	_JOIN_2911517 -> 2911519;
	ForLoop2917985 [label="ForLoop2917985  for (k=cbv_77; k<=cbv_78; k=k+1) {...",shape=box];
	ForLoop2917985 -> 2966498;
	ForLoop2917985 -> _JOIN_2917985;
	_JOIN_2915853 [label="_JOIN_2915853None...",shape=box];
	_JOIN_2915853 -> 3040830;
	ForLoop2912105 [label="ForLoop2912105  for (k=cbv_17; k<=cbv_18; k=k+1) {...",shape=box];
	ForLoop2912105 -> 2955898;
	ForLoop2912105 -> _JOIN_2912105;
	_JOIN_2918205 [label="_JOIN_2918205None...",shape=box];
	_JOIN_2918205 -> 3043798;
	3035636 [label="3035636  register int cbv_14, cbv_15;...",shape=box];
	3007370 [label="3007370  double scv_241;...",shape=box];
	_JOIN_2918592 [label="_JOIN_2918592None...",shape=box];
	_JOIN_2918592 -> 3044081;
	3034523 [label="3034523  register int cbv_5, cbv_6;...",shape=box];
	_JOIN_2918892 [label="_JOIN_2918892None...",shape=box];
	_JOIN_2918892 -> 2918893;
	_JOIN_2919075 [label="_JOIN_2919075None...",shape=box];
	_JOIN_2919075 -> 3044701;
	2915341 [label="2915341  int k;...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 2790006;
	2912401 [label="2912401  int k;...",shape=box];
	ForLoop2917029 [label="ForLoop2917029  for (k=kt; k<=cbv_67; k=k+6) {...",shape=box];
	ForLoop2917029 -> 2964708;
	ForLoop2917029 -> _JOIN_2917029;
	2911519 [label="2911519  int k;...",shape=box];
	2790448 [label="2790448  register int cbv_2, cbv_3;...",shape=box];
	ForLoop2913281 [label="ForLoop2913281  for (k=cbv_29; k<=cbv_30; k=k+1) {...",shape=box];
	ForLoop2913281 -> 2958018;
	ForLoop2913281 -> _JOIN_2913281;
	_JOIN_2918284 [label="_JOIN_2918284None...",shape=box];
	_JOIN_2918284 -> ForLoop2919148;
	_JOIN_2918282 [label="_JOIN_2918282None...",shape=box];
	_JOIN_2918282 -> 3002463;
	3041201 [label="3041201  register int cbv_59, cbv_60;...",shape=box];
	ForLoop2912325 [label="ForLoop2912325  for (k=kt; k<=cbv_19; k=k+6) {...",shape=box];
	ForLoop2912325 -> 2956228;
	ForLoop2912325 -> _JOIN_2912325;
	ForLoop2790326 [label="ForLoop2790326  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop2790326 -> 2790325;
	ForLoop2790326 -> _JOIN_2790326;
	ForLoop2911223 [label="ForLoop2911223  for (k=cbv_8; k<=cbv_9; k=k+1) {...",shape=box];
	ForLoop2911223 -> 2954308;
	ForLoop2911223 -> _JOIN_2911223;
	ForLoop2916441 [label="ForLoop2916441  for (k=kt; k<=cbv_61; k=k+6) {...",shape=box];
	ForLoop2916441 -> 2963648;
	ForLoop2916441 -> _JOIN_2916441;
	ForLoop2911737 [label="ForLoop2911737  for (k=kt; k<=cbv_13; k=k+6) {...",shape=box];
	ForLoop2911737 -> 2955168;
	ForLoop2911737 -> _JOIN_2911737;
	ForLoop2914383 [label="ForLoop2914383  for (k=kt; k<=cbv_40; k=k+6) {...",shape=box];
	ForLoop2914383 -> 2959938;
	ForLoop2914383 -> _JOIN_2914383;
	_JOIN_2912399 [label="_JOIN_2912399None...",shape=box];
	_JOIN_2912399 -> 2912401;
	ForLoop2917103 [label="ForLoop2917103  for (k=cbv_68; k<=cbv_69; k=k+1) {...",shape=box];
	ForLoop2917103 -> 2964908;
	ForLoop2917103 -> _JOIN_2917103;
	ForLoop2912031 [label="ForLoop2912031  for (k=kt; k<=cbv_16; k=k+6) {...",shape=box];
	ForLoop2912031 -> 2955698;
	ForLoop2912031 -> _JOIN_2912031;
	ForLoop2912987 [label="ForLoop2912987  for (k=cbv_26; k<=cbv_27; k=k+1) {...",shape=box];
	ForLoop2912987 -> 2957488;
	ForLoop2912987 -> _JOIN_2912987;
	3042314 [label="3042314  register int cbv_68, cbv_69;...",shape=box];
	_JOIN_2918633 [label="_JOIN_2918633None...",shape=box];
	_JOIN_2918633 -> _JOIN_2918634;
	_JOIN_2918634 [label="_JOIN_2918634None...",shape=box];
	_JOIN_2918634 -> ForLoop2919146;
	2916517 [label="2916517  int k;...",shape=box];
	_JOIN_2916735 [label="_JOIN_2916735None...",shape=box];
	_JOIN_2916735 -> 3041943;
	_JOIN_2913795 [label="_JOIN_2913795None...",shape=box];
	_JOIN_2913795 -> 3038233;
	_JOIN_2917103 [label="_JOIN_2917103None...",shape=box];
	_JOIN_2917103 -> 2917105;
	2912695 [label="2912695  int k;...",shape=box];
	ForLoop2914163 [label="ForLoop2914163  for (k=cbv_38; k<=cbv_39; k=k+1) {...",shape=box];
	ForLoop2914163 -> 2959608;
	ForLoop2914163 -> _JOIN_2914163;
	2961528 [label="2961528  double scv_123, scv_124, scv_125, scv_126, scv_127, scv_128;...",shape=box];
	2963648 [label="2963648  double scv_151, scv_152, scv_153, scv_154, scv_155, scv_156;...",shape=box];
	_JOIN_2915633 [label="_JOIN_2915633None...",shape=box];
	_JOIN_2915633 -> 2915635;
	_JOIN_2916147 [label="_JOIN_2916147None...",shape=box];
	_JOIN_2916147 -> 3041201;
	ForLoop2912913 [label="ForLoop2912913  for (k=kt; k<=cbv_25; k=k+6) {...",shape=box];
	ForLoop2912913 -> 2957288;
	ForLoop2912913 -> _JOIN_2912913;
	3044701 [label="3044701  register int cbv_86, cbv_87;...",shape=box];
	_JOIN_2911811 [label="_JOIN_2911811None...",shape=box];
	_JOIN_2911811 -> 2911813;
	ForLoop2919148 [label="ForLoop2919148  for (i=(min(nx-1,ii+255))-(((min(nx-1,ii+255))-(ii)+1)%26)+1; i<=min(nx-1,ii+255); i=i+1) {...",shape=box];
	ForLoop2919148 -> 3007370;
	ForLoop2919148 -> _JOIN_2919148;
	2958548 [label="2958548  double scv_87;...",shape=box];
	2958348 [label="2958348  double scv_81, scv_82, scv_83, scv_84, scv_85, scv_86;...",shape=box];
	3038604 [label="3038604  register int cbv_38, cbv_39;...",shape=box];
	_JOIN_2916809 [label="_JOIN_2916809None...",shape=box];
	_JOIN_2916809 -> 2916811;
	2915929 [label="2915929  int k;...",shape=box];
	2953778 [label="2953778  double scv_24;...",shape=box];
	ForLoop2913869 [label="ForLoop2913869  for (k=cbv_35; k<=cbv_36; k=k+1) {...",shape=box];
	ForLoop2913869 -> 2959078;
	ForLoop2913869 -> _JOIN_2913869;
	ForLoop2918892 [label="ForLoop2918892  for (kt=kkk; kt<=cbv_84; kt=kt+8) {...",shape=box];
	ForLoop2918892 -> 3005130;
	ForLoop2918892 -> _JOIN_2918892;
	2910679 [label="2910679  int k;...",shape=box];
	2959938 [label="2959938  double scv_102, scv_103, scv_104, scv_105, scv_106, scv_107;...",shape=box];
	2962788 [label="2962788  double scv_143;...",shape=box];
	ForLoop2903823 [label="ForLoop2903823  for (j=jt; j<=cbv_2; j=j+1) {...",shape=box];
	ForLoop2903823 -> 2929957;
	ForLoop2903823 -> _JOIN_2903823;
	ForLoop2903825 [label="ForLoop2903825  for (jj=jjj; jj<=min(ny-1,jjj+256); jj=jj+256) {...",shape=box];
	ForLoop2903825 -> 3029683;
	ForLoop2903825 -> _JOIN_2903825;
	ForLoop2903827 [label="ForLoop2903827  for (jjj=0; jjj<=ny-1; jjj=jjj+512) {...",shape=box];
	ForLoop2903827 -> ForLoop2903825;
	ForLoop2903827 -> _JOIN_2903827;
	ForLoop2912693 [label="ForLoop2912693  for (k=cbv_23; k<=cbv_24; k=k+1) {...",shape=box];
	ForLoop2912693 -> 2956958;
	ForLoop2912693 -> _JOIN_2912693;
	2914753 [label="2914753  int k;...",shape=box];
	_JOIN_2911737 [label="_JOIN_2911737None...",shape=box];
	_JOIN_2911737 -> 3035636;
	ForLoop2916147 [label="ForLoop2916147  for (k=kt; k<=cbv_58; k=k+6) {...",shape=box];
	ForLoop2916147 -> 2963118;
	ForLoop2916147 -> _JOIN_2916147;
	_JOIN_2918631 [label="_JOIN_2918631None...",shape=box];
	_JOIN_2918631 -> _JOIN_2918633;
	_JOIN_2915045 [label="_JOIN_2915045None...",shape=box];
	_JOIN_2915045 -> 2915047;
	2953587 [label="2953587  double scv_18, scv_19, scv_20, scv_21, scv_22, scv_23;...",shape=box];
	_JOIN_2917691 [label="_JOIN_2917691None...",shape=box];
	_JOIN_2917691 -> 2917693;
	ForLoop2912619 [label="ForLoop2912619  for (k=kt; k<=cbv_22; k=k+6) {...",shape=box];
	ForLoop2912619 -> 2956758;
	ForLoop2912619 -> _JOIN_2912619;
	ForLoop2918205 [label="ForLoop2918205  for (k=kt; k<=cbv_79; k=k+6) {...",shape=box];
	ForLoop2918205 -> 2966828;
	ForLoop2918205 -> _JOIN_2918205;
	ForLoop2913501 [label="ForLoop2913501  for (k=kt; k<=cbv_31; k=k+6) {...",shape=box];
	ForLoop2913501 -> 2958348;
	ForLoop2913501 -> _JOIN_2913501;
	3039717 [label="3039717  register int cbv_47, cbv_48;...",shape=box];
	2964178 [label="2964178  double scv_158, scv_159, scv_160, scv_161, scv_162, scv_163;...",shape=box];
	_JOIN_2917911 [label="_JOIN_2917911None...",shape=box];
	_JOIN_2917911 -> 3043427;
	2954108 [label="2954108  double scv_25, scv_26, scv_27, scv_28, scv_29, scv_30;...",shape=box];
	2955898 [label="2955898  double scv_52;...",shape=box];
	_JOIN_2912031 [label="_JOIN_2912031None...",shape=box];
	_JOIN_2912031 -> 3036007;
	3036007 [label="3036007  register int cbv_17, cbv_18;...",shape=box];
	2918893 [label="2918893  int k;...",shape=box];
	2965438 [label="2965438  double scv_178;...",shape=box];
	2914165 [label="2914165  int k;...",shape=box];
	3030160 [label="3030160  register int cbv_2;...",shape=box];
	2955698 [label="2955698  double scv_46, scv_47, scv_48, scv_49, scv_50, scv_51;...",shape=box];
	_JOIN_2916515 [label="_JOIN_2916515None...",shape=box];
	_JOIN_2916515 -> 2916517;
	2955168 [label="2955168  double scv_39, scv_40, scv_41, scv_42, scv_43, scv_44;...",shape=box];
	_JOIN_2917029 [label="_JOIN_2917029None...",shape=box];
	_JOIN_2917029 -> 3042314;
	ForLoop2914089 [label="ForLoop2914089  for (k=kt; k<=cbv_37; k=k+6) {...",shape=box];
	ForLoop2914089 -> 2959408;
	ForLoop2914089 -> _JOIN_2914089;
	_JOIN_2914089 [label="_JOIN_2914089None...",shape=box];
	_JOIN_2914089 -> 3038604;
	_JOIN_2911443 [label="_JOIN_2911443None...",shape=box];
	_JOIN_2911443 -> 3035265;
	ForLoop2910929 [label="ForLoop2910929  for (k=cbv_5; k<=cbv_6; k=k+1) {...",shape=box];
	ForLoop2910929 -> 2953778;
	ForLoop2910929 -> _JOIN_2910929;
	2790183 [label="2790183  y[i]=0.0;...",shape=box];
	3037491 [label="3037491  register int cbv_29, cbv_30;...",shape=box];
	ForLoop2915339 [label="ForLoop2915339  for (k=cbv_50; k<=cbv_51; k=k+1) {...",shape=box];
	ForLoop2915339 -> 2961728;
	ForLoop2915339 -> _JOIN_2915339;
	3038233 [label="3038233  register int cbv_35, cbv_36;...",shape=box];
	2960468 [label="2960468  double scv_109, scv_110, scv_111, scv_112, scv_113, scv_114;...",shape=box];
	3002463 [label="3002463  tmp[(i+20)]=scv_200;...",shape=box];
	2911813 [label="2911813  int k;...",shape=box];
	3041572 [label="3041572  register int cbv_62, cbv_63;...",shape=box];
	ForLoop2911811 [label="ForLoop2911811  for (k=cbv_14; k<=cbv_15; k=k+1) {...",shape=box];
	ForLoop2911811 -> 2955368;
	ForLoop2911811 -> _JOIN_2911811;
	ForLoop2914971 [label="ForLoop2914971  for (k=kt; k<=cbv_46; k=k+6) {...",shape=box];
	ForLoop2914971 -> 2960998;
	ForLoop2914971 -> _JOIN_2914971;
	2913283 [label="2913283  int k;...",shape=box];
	ForLoop2915265 [label="ForLoop2915265  for (k=kt; k<=cbv_49; k=k+6) {...",shape=box];
	ForLoop2915265 -> 2961528;
	ForLoop2915265 -> _JOIN_2915265;
	_JOIN_2912325 [label="_JOIN_2912325None...",shape=box];
	_JOIN_2912325 -> 3036378;
	ForLoop2913575 [label="ForLoop2913575  for (k=cbv_32; k<=cbv_33; k=k+1) {...",shape=box];
	ForLoop2913575 -> 2958548;
	ForLoop2913575 -> _JOIN_2913575;
	2954838 [label="2954838  double scv_38;...",shape=box];
	ForLoop2914677 [label="ForLoop2914677  for (k=kt; k<=cbv_43; k=k+6) {...",shape=box];
	ForLoop2914677 -> 2960468;
	ForLoop2914677 -> _JOIN_2914677;
	2961728 [label="2961728  double scv_129;...",shape=box];
	ForLoop2918634 [label="ForLoop2918634  for (jjj=0; jjj<=ny-1; jjj=jjj+512) {...",shape=box];
	ForLoop2918634 -> ForLoop2918633;
	ForLoop2918634 -> _JOIN_2918634;
	ForLoop2915045 [label="ForLoop2915045  for (k=cbv_47; k<=cbv_48; k=k+1) {...",shape=box];
	ForLoop2915045 -> 2961198;
	ForLoop2915045 -> _JOIN_2915045;
	ForLoop2918282 [label="ForLoop29expected=9369846271501.798828
actual=9369846271501.798828
18282  for (kkk=0; kkk<=ny-1; kkk=kkk+128) {...",shape=box];
	ForLoop2918282 -> 3034206;
	ForLoop2918282 -> _JOIN_2918282;
	2956758 [label="2956758  double scv_60, scv_61, scv_62, scv_63, scv_64, scv_65;...",shape=box];
	3040459 [label="3040459  register int cbv_53, cbv_54;...",shape=box];
	_JOIN_2911223 [label="_JOIN_2911223None...",shape=box];
	_JOIN_2911223 -> 2911225;
	3041943 [label="3041943  register int cbv_65, cbv_66;...",shape=box];
	_JOIN_2917617 [label="_JOIN_2917617None...",shape=box];
	_JOIN_2917617 -> 3043056;
	2955368 [label="2955368  double scv_45;...",shape=box];
	2963318 [label="2963318  double scv_150;...",shape=box];
	2915635 [label="2915635  int k;...",shape=box];
	_JOIN_2915559 [label="_JOIN_2915559None...",shape=box];
	_JOIN_2915559 -> 3040459;
	ForLoop2911149 [label="ForLoop2911149  for (k=kt; k<=cbv_7; k=k+6) {...",shape=box];
	ForLoop2911149 -> 2954108;
	ForLoop2911149 -> _JOIN_2911149;
	2912107 [label="2912107  int k;...",shape=box];
	_JOIN_2918279 [label="_JOIN_2918279None...",shape=box];
	_JOIN_2918279 -> _JOIN_2918282;
	ForLoop2918284 [label="ForLoop2918284  for (i=ii; i<=min(nx-1,ii+255)-25; i=i+26) {...",shape=box];
	ForLoop2918284 -> 3002445;
	ForLoop2918284 -> _JOIN_2918284;
	2916223 [label="2916223  int k;...",shape=box];
	2918408 [label="2918408  scv_241=scv_241+A[i*ny+jt]*x[jt];...",shape=box];

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest13.exe __orio_perftest13.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest13.exe  
{'[5, 5, 0, 0, 4, 2, 0, 0, 8, 25, 0, 5, 0, 1, 1, 1, 1, 1]' : 0.11199}
{'[5, 5, 0, 0, 4, 2, 0, 0, 8, 25, 0, 5, 0, 1, 1, 1, 1, 1]' : 0.111112}
{'[5, 5, 0, 0, 4, 2, 0, 0, 8, 25, 0, 5, 0, 1, 1, 1, 1, 1]' : 0.111249}
{'[5, 5, 0, 0, 4, 2, 0, 0, 8, 25, 0, 5, 0, 1, 1, 1, 1, 1]' : 0.111309}
{'[5, 5, 0, 0, 4, 2, 0, 0, 8, 25, 0, 5, 0, 1, 1, 1, 1, 1]' : 0.111177}
{'[5, 5, 0, 0, 4, 2, 0, 0, 8, 25, 0, 5, 0, 1, 1, 1, 1, 1]' : 0.111816}
{'[5, 5, 0, 0, 4, 2, 0, 0, 8, 25, 0, 5, 0, 1, 1, 1, 1, 1]' : 0.111583}
{'[5, 5, 0, 0, 4, 2, 0, 0, 8, 25, 0, 5, 0, 1, 1, 1, 1, 1]' : 0.112411}
{'[5, 5, 0, 0, 4, 2, 0, 0, 8, 25, 0, 5, 0, 1, 1, 1, 1, 1]' : 0.111391}
{'[5, 5, 0, 0, 4, 2, 0, 0, 8, 25, 0, 5, 0, 1, 1, 1, 1, 1]' : 0.111264}
{'[5, 5, 0, 0, 4, 2, 0, 0, 8, 25, 0, 5, 0, 1, 1, 1, 1, 1]' : 0.111575}
{'[5, 5, 0, 0, 4, 2, 0, 0, 8, 25, 0, 5, 0, 1, 1, 1, 1, 1]' : 0.111302}
{'[5, 5, 0, 0, 4, 2, 0, 0, 8, 25, 0, 5, 0, 1, 1, 1, 1, 1]' : 0.111454}
{'[5, 5, 0, 0, 4, 2, 0, 0, 8, 25, 0, 5, 0, 1, 1, 1, 1, 1]' : 0.111202}
{'[5, 5, 0, 0, 4, 2, 0, 0, 8, 25, 0, 5, 0, 1, 1, 1, 1, 1]' : 0.111429}
{'[5, 5, 0, 0, 4, 2, 0, 0, 8, 25, 0, 5, 0, 1, 1, 1, 1, 1]' : 0.111606}
{'[5, 5, 0, 0, 4, 2, 0, 0, 8, 25, 0, 5, 0, 1, 1, 1, 1, 1]' : 0.1116}
{'[5, 5, 0, 0, 4, 2, 0, 0, 8, 25, 0, 5, 0, 1, 1, 1, 1, 1]' : 0.111621}
{'[5, 5, 0, 0, 4, 2, 0, 0, 8, 25, 0, 5, 0, 1, 1, 1, 1, 1]' : 0.111686}
{'[5, 5, 0, 0, 4, 2, 0, 0, 8, 25, 0, 5, 0, 1, 1, 1, 1, 1]' : 0.111394}
{'[5, 5, 0, 0, 4, 2, 0, 0, 8, 25, 0, 5, 0, 1, 1, 1, 1, 1]' : 0.111352}
{'[5, 5, 0, 0, 4, 2, 0, 0, 8, 25, 0, 5, 0, 1, 1, 1, 1, 1]' : 0.111296}
{'[5, 5, 0, 0, 4, 2, 0, 0, 8, 25, 0, 5, 0, 1, 1, 1, 1, 1]' : 0.111452}
{'[5, 5, 0, 0, 4, 2, 0, 0, 8, 25, 0, 5, 0, 1, 1, 1, 1, 1]' : 0.111326}
{'[5, 5, 0, 0, 4, 2, 0, 0, 8, 25, 0, 5, 0, 1, 1, 1, 1, 1]' : 0.11235}
{'[5, 5, 0, 0, 4, 2, 0, 0, 8, 25, 0, 5, 0, 1, 1, 1, 1, 1]' : 0.111965}
{'[5, 5, 0, 0, 4, 2, 0, 0, 8, 25, 0, 5, 0, 1, 1, 1, 1, 1]' : 0.111232}
{'[5, 5, 0, 0, 4, 2, 0, 0, 8, 25, 0, 5, 0, 1, 1, 1, 1, 1]' : 0.111439}
{'[5, 5, 0, 0, 4, 2, 0, 0, 8, 25, 0, 5, 0, 1, 1, 1, 1, 1]' : 0.11121}
{'[5, 5, 0, 0, 4, 2, 0, 0, 8, 25, 0, 5, 0, 1, 1, 1, 1, 1]' : 0.111378}

out:
 ["{'[5, 5, 0, 0, 4, 2, 0, 0, 8, 25, 0, 5, 0, 1, 1, 1, 1, 1]' : 0.11199}", "{'[5, 5, 0, 0, 4, 2, 0, 0, 8, 25, 0, 5, 0, 1, 1, 1, 1, 1]' : 0.111112}", "{'[5, 5, 0, 0, 4, 2, 0, 0, 8, 25, 0, 5, 0, 1, 1, 1, 1, 1]' : 0.111249}", "{'[5, 5, 0, 0, 4, 2, 0, 0, 8, 25, 0, 5, 0, 1, 1, 1, 1, 1]' : 0.111309}", "{'[5, 5, 0, 0, 4, 2, 0, 0, 8, 25, 0, 5, 0, 1, 1, 1, 1, 1]' : 0.111177}", "{'[5, 5, 0, 0, 4, 2, 0, 0, 8, 25, 0, 5, 0, 1, 1, 1, 1, 1]' : 0.111816}", "{'[5, 5, 0, 0, 4, 2, 0, 0, 8, 25, 0, 5, 0, 1, 1, 1, 1, 1]' : 0.111583}", "{'[5, 5, 0, 0, 4, 2, 0, 0, 8, 25, 0, 5, 0, 1, 1, 1, 1, 1]' : 0.112411}", "{'[5, 5, 0, 0, 4, 2, 0, 0, 8, 25, 0, 5, 0, 1, 1, 1, 1, 1]' : 0.111391}", "{'[5, 5, 0, 0, 4, 2, 0, 0, 8, 25, 0, 5, 0, 1, 1, 1, 1, 1]' : 0.111264}", "{'[5, 5, 0, 0, 4, 2, 0, 0, 8, 25, 0, 5, 0, 1, 1, 1, 1, 1]' : 0.111575}", "{'[5, 5, 0, 0, 4, 2, 0, 0, 8, 25, 0, 5, 0, 1, 1, 1, 1, 1]' : 0.111302}", "{'[5, 5, 0, 0, 4, 2, 0, 0, 8, 25, 0, 5, 0, 1, 1, 1, 1, 1]' : 0.111454}", "{'[5, 5, 0, 0, 4, 2, 0, 0, 8, 25, 0, 5, 0, 1, 1, 1, 1, 1]' : 0.111202}", "{'[5, 5, 0, 0, 4, 2, 0, 0, 8, 25, 0, 5, 0, 1, 1, 1, 1, 1]' : 0.111429}", "{'[5, 5, 0, 0, 4, 2, 0, 0, 8, 25, 0, 5, 0, 1, 1, 1, 1, 1]' : 0.111606}", "{'[5, 5, 0, 0, 4, 2, 0, 0, 8, 25, 0, 5, 0, 1, 1, 1, 1, 1]' : 0.1116}", "{'[5, 5, 0, 0, 4, 2, 0, 0, 8, 25, 0, 5, 0, 1, 1, 1, 1, 1]' : 0.111621}", "{'[5, 5, 0, 0, 4, 2, 0, 0, 8, 25, 0, 5, 0, 1, 1, 1, 1, 1]' : 0.111686}", "{'[5, 5, 0, 0, 4, 2, 0, 0, 8, 25, 0, 5, 0, 1, 1, 1, 1, 1]' : 0.111394}", "{'[5, 5, 0, 0, 4, 2, 0, 0, 8, 25, 0, 5, 0, 1, 1, 1, 1, 1]' : 0.111352}", "{'[5, 5, 0, 0, 4, 2, 0, 0, 8, 25, 0, 5, 0, 1, 1, 1, 1, 1]' : 0.111296}", "{'[5, 5, 0, 0, 4, 2, 0, 0, 8, 25, 0, 5, 0, 1, 1, 1, 1, 1]' : 0.111452}", "{'[5, 5, 0, 0, 4, 2, 0, 0, 8, 25, 0, 5, 0, 1, 1, 1, 1, 1]' : 0.111326}", "{'[5, 5, 0, 0, 4, 2, 0, 0, 8, 25, 0, 5, 0, 1, 1, 1, 1, 1]' : 0.11235}", "{'[5, 5, 0, 0, 4, 2, 0, 0, 8, 25, 0, 5, 0, 1, 1, 1, 1, 1]' : 0.111965}", "{'[5, 5, 0, 0, 4, 2, 0, 0, 8, 25, 0, 5, 0, 1, 1, 1, 1, 1]' : 0.111232}", "{'[5, 5, 0, 0, 4, 2, 0, 0, 8, 25, 0, 5, 0, 1, 1, 1, 1, 1]' : 0.111439}", "{'[5, 5, 0, 0, 4, 2, 0, 0, 8, 25, 0, 5, 0, 1, 1, 1, 1, 1]' : 0.11121}", "{'[5, 5, 0, 0, 4, 2, 0, 0, 8, 25, 0, 5, 0, 1, 1, 1, 1, 1]' : 0.111378}"]
returning from 'run': {'[5, 5, 0, 0, 4, 2, 0, 0, 8, 25, 0, 5, 0, 1, 1, 1, 1, 1]': ([0.11199, 0.111112, 0.111249, 0.111309, 0.111177, 0.111816, 0.111583, 0.112411, 0.111391, 0.111264, 0.111575, 0.111302, 0.111454, 0.111202, 0.111429, 0.111606, 0.1116, 0.111621, 0.111686, 0.111394, 0.111352, 0.111296, 0.111452, 0.111326, 0.11235, 0.111965, 0.111232, 0.111439, 0.11121, 0.111378], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.11199, 0.111112, 0.111249, 0.111309, 0.111177, 0.111816, 0.111583, 0.112411, 0.111391, 0.111264, 0.111575, 0.111302, 0.111454, 0.111202, 0.111429, 0.111606, 0.1116, 0.111621, 0.111686, 0.111394, 0.111352, 0.111296, 0.111452, 0.111326, 0.11235, 0.111965, 0.111232, 0.111439, 0.11121, 0.111378], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[5, 5, 0, 0, 4, 2, 0, 0, 8, 25, 0, 5, 0, 1, 1, 1, 1, 1]': ([0.11199, 0.111112, 0.111249, 0.111309, 0.111177, 0.111816, 0.111583, 0.112411, 0.111391, 0.111264, 0.111575, 0.111302, 0.111454, 0.111202, 0.111429, 0.111606, 0.1116, 0.111621, 0.111686, 0.111394, 0.111352, 0.111296, 0.111452, 0.111326, 0.11235, 0.111965, 0.111232, 0.111439, 0.11121, 0.111378], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [5, 3, 1, 6, 2, 5, 1, 0, 5, 5, 27, 0, 2, 0, 0, 0, 0, 1]
Fixed Factors: {}
Testing candidate 14: [5, 3, 1, 6, 2, 5, 1, 0, 5, 5, 27, 0, 2, 0, 0, 0, 0, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	46
        Max loop nest depth: 	6
        Additions: 		9022
        Multiplications: 	2340
        Divisions: 		0
        Logical: 		0
        Reads: 			13297
        Writes: 		1312
        Comparisons:		46
        Gotos: 			0
        
digraph CFG {
	3435747 [label="3435747  register int cbv_9, cbv_10;...",shape=box];
	ForLoop3309094 [label="ForLoop3309094  for (j=cbv_6; j<=cbv_7; j=j+1) ...",shape=box];
	ForLoop3309094 -> 3309093;
	ForLoop3309094 -> _JOIN_3309094;
	3313682 [label="3313682  for (j=jj; j<=min(ny-1,jj+63); j=j+1) ...",shape=box];
	ForLoop3185725 [label="ForLoop3185725  for (j=cbv_2; j<=cbv_3; j=j+1) {...",shape=box];
	ForLoop3185725 -> 3184731;
	ForLoop3185725 -> _JOIN_3185725;
	_JOIN_3313570 [label="_JOIN_3313570None...",shape=box];
	_JOIN_3313570 -> 3439230;
	3045378 [label="3045378  y[i]=0.0;...",shape=box];
	3312543 [label="3312543  for (j=jj; j<=min(ny-1,jj+63); j=j+1) ...",shape=box];
	3045493 [label="3045493  y[i]=0.0;...",shape=box];
	3045493 -> _JOIN_3045494;
	ForLoop3311292 [label="ForLoop3311292  for (j=jj; j<=cbv_11; j=j+28) {...",shape=box];
	ForLoop3311292 -> 3310318;
	ForLoop3311292 -> _JOIN_3311292;
	3314788 [label="3314788  tmp[(i+5)]=tmp[(i+5)]+A[(i+5)*ny+j]*x_copy[(j-jj)];...",shape=box];
	3314788 -> _JOIN_3314789;
	3315174 [label="3315174  for (j=jj; j<=min(ny-1,jj+63); j=j+1) ...",shape=box];
	_JOIN_3312511 [label="_JOIN_3312511None...",shape=box];
	_JOIN_3312511 -> 3312543;
	3311371 [label="3311371  tmp[(i+2)]=tmp[(i+2)]+A[(i+2)*ny+j]*x_copy[(j-jj)];...",shape=box];
	3311371 -> _JOIN_3311372;
	_JOIN_3315949 [label="_JOIN_3315949None...",shape=box];
	_JOIN_3315949 -> 3441470;
	_JOIN_3056591 [label="_JOIN_3056591None...",shape=box];
	_JOIN_3056591 -> _JOIN_3056593;
	_JOIN_3056590 [label="_JOIN_3056590None...",shape=box];
	_JOIN_3056590 -> _JOIN_3056591;
	_JOIN_3056593 [label="_JOIN_3056593None...",shape=box];
	_JOIN_3056593 -> 3294491;
	3440605 [label="3440605  register int cbv_23;...",shape=box];
	_JOIN_3309094 [label="_JOIN_3309094None...",shape=box];
	_JOIN_3309094 -> 3309126;
	3045246 [label="3045246  int i;...",shape=box];
	3045246 -> ForLoop3045425;
	3441553 [label="3441553  register int cbv_27;...",shape=box];
	3311404 [label="3311404  for (j=jj; j<=min(ny-1,jj+63); j=j+1) ...",shape=box];
	ForLoop3310233 [label="ForLoop3310233  for (j=cbv_9; j<=cbv_10; j=j+1) ...",shape=box];
	ForLoop3310233 -> 3310232;
	ForLoop3310233 -> _JOIN_3310233;
	_JOIN_3310153 [label="_JOIN_3310153None...",shape=box];
	_JOIN_3310153 -> 3435747;
	_JOIN_3314997 [label="_JOIN_3314997None...",shape=box];
	_JOIN_3314997 -> _JOIN_3314999;
	_JOIN_3314995 [label="_JOIN_3314995None...",shape=box];
	_JOIN_3314995 -> _JOIN_3314997;
	3438069 [label="3438069  register int cbv_15, cbv_16;...",shape=box];
	ForLoop3309023 [label="ForLoop3309023  for (j=jj; j<=cbv_5; j=j+28) {...",shape=box];
	ForLoop3309023 -> 3308292;
	ForLoop3309023 -> _JOIN_3309023;
	3436908 [label="3436908  register int cbv_12, cbv_13;...",shape=box];
	3315112 [label="3315112  tmp[i]=0;...",shape=box];
	3315112 -> ForLoop3316024;
	ForLoop3184603 [label="ForLoop3184603  for (j=jj; j<=cbv_1; j=j+28) {...",shape=box];
	ForLoop3184603 -> 3152748;
	ForLoop3184603 -> _JOIN_3184603;
	_JOIN_3056589 [label="_JOIN_3056589None...",shape=box];
	_JOIN_3056589 -> _JOIN_3056590;
	_JOIN_3184603 [label="_JOIN_3184603None...",shape=box];
	_JOIN_3184603 -> 3432831;
	_JOIN_3311372 [label="_JOIN_3311372None...",shape=box];
	_JOIN_3311372 -> 3311404;
	3056809 [label="3056809  tmp[it]=0;...",shape=box];
	3056809 -> ForLoop3056519;
	ForLoop3313650 [label="ForLoop3313650  for (j=cbv_18; j<=cbv_19; j=j+1) ...",shape=box];
	ForLoop3313650 -> 3313649;
	ForLoop3313650 -> _JOIN_3313650;
	3434586 [label="3434586  register int cbv_6, cbv_7;...",shape=box];
	3309179 [label="3309179  tmp[(i+1)]=tmp[(i+1)]+A[(i+1)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 3045246;
	_JOIN_3316020 [label="_JOIN_3316020None...",shape=box];
	_JOIN_3316020 -> _JOIN_3316023;
	_JOIN_3316023 [label="_JOIN_3316023None...",shape=box];
	_JOIN_3316023 -> _JOIN_3316024;
	_JOIN_3316024 [label="_JOIN_3316024None...",shape=box];
	_JOIN_3316024 -> ForLoop3316096;
	ForLoop3314792 [label="ForLoop3314792  for (jj=jjj; jj<=min(ny-1,jjj+64); jj=jj+64) {...",shape=box];
	ForLoop3314792 -> 3308248;
	ForLoop3314792 -> _JOIN_3314792;
	ForLoop3314794 [label="ForLoop3314794  for (jjj=0; jjj<=ny-1; jjj=jjj+128) {...",shape=box];
	ForLoop3314794 -> ForLoop3314792;
	ForLoop3314794 -> _JOIN_3314794;
	ForLoop3314789 [label="ForLoop3314789  for (j=cbv_21; j<=cbv_22; j=j+1) ...",shape=box];
	ForLoop3314789 -> 3314788;
	ForLoop3314789 -> _JOIN_3314789;
	3058746 [label="3058746  y[k]=y[k]+A[it*ny+k]*tmp[it];...",shape=box];
	3440391 [label="3440391  register int cbv_21, cbv_22;...",shape=box];
	ForLoop3315949 [label="ForLoop3315949  for (j=jj; j<=cbv_24; j=j+28) {...",shape=box];
	ForLoop3315949 -> 3315218;
	ForLoop3315949 -> _JOIN_3315949;
	_JOIN_3309023 [label="_JOIN_3309023None...",shape=box];
	_JOIN_3309023 -> 3434586;
	_JOIN_3313650 [label="_JOIN_3313650None...",shape=box];
	_JOIN_3313650 -> 3313682;
	_JOIN_3315001 [label="_JOIN_3315001None...",shape=box];
	_JOIN_3315001 -> ForLoop3316098;
	_JOIN_3314794 [label="_JOIN_3314794None...",shape=box];
	_JOIN_3314794 -> ForLoop3314999;
	3308292 [label="3308292  tmp[i]=tmp[i]+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop3312431 [label="ForLoop3312431  for (j=jj; j<=cbv_14; j=j+28) {...",shape=box];
	ForLoop3312431 -> 3311457;
	ForLoop3312431 -> _JOIN_3312431;
	ForLoop3045425 [label="ForLoop3045425  for (i=0; i<=ny-6; i=i+6) {...",shape=box];
	ForLoop3045425 -> 3045378;
	ForLoop3045425 -> _JOIN_3045425;
	ForLoop3048875 [label="ForLoop3048875  for (ii=iii; ii<=min(nx-1,iii+1792); ii=ii+256) {...",shape=box];
	ForLoop3048875 -> ForLoop3056593;
	ForLoop3048875 -> _JOIN_3048875;
	3310265 [label="3310265  for (j=jj; j<=min(ny-1,jj+63); j=j+1) ...",shape=box];
	ForLoop3048876 [label="ForLoop3048876  for (iii=0; iii<=nx-1; iii=iii+2048) ...",shape=box];
	ForLoop3048876 -> ForLoop3048875;
	ForLoop3048876 -> _JOIN_3048876;
	3309126 [label="3309126  for (j=jj; j<=min(ny-1,jj+63); j=j+1) ...",shape=box];
	ForLoop3045494 [label="ForLoop3045494  for (i=ny-((ny-(0))%6); i<=ny-1; i=i+1) ...",shape=box];
	ForLoop3045494 -> 3045493;
	ForLoop3045494 -> _JOIN_3045494;
	3313649 [label="3313649  tmp[(i+4)]=tmp[(i+4)]+A[(i+4)*ny+j]*x_copy[(j-jj)];...",shape=box];
	3313649 -> _JOIN_3313650;
	3432831 [label="3432831  register int cbv_2, cbv_3;...",shape=box];
	ForLoop3314709 [label="ForLoop3314709  for (j=jj; j<=cbv_20; j=j+28) {...",shape=box];
	ForLoop3314709 -> 3313735;
	ForLoop3314709 -> _JOIN_3314709;
	3433721 [label="3433721  register int cbv_4;...",shape=box];
	3310318 [label="3310318  tmp[(i+2)]=tmp[(i+2)]+A[(i+2)*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop3310153 [label="ForLoop3310153  for (j=jj; j<=cbv_8; j=j+28) {...",shape=box];
	ForLoop3310153 -> 3309179;
	ForLoop3310153 -> _JOIN_3310153;
	_JOIN_3314709 [label="_JOIN_3314709None...",shape=box];
	_JOIN_3314709 -> 3440391;
	_JOIN_3314789 [label="_JOIN_3314789None...",shape=box];
	_JOIN_3314789 -> _JOIN_3314792;
	3152748 [label="3152748  tmp[it]=tmp[it]+A[it*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop3313570 [label="ForLoop3313570  for (j=jj; j<=cbv_17; j=j+28) {...",shape=box];
	ForLoop3313570 -> 3312596;
	ForLoop3313570 -> _JOIN_3313570;
	ForLoop3316095 [label="ForLoop3316095  for (kk=kkk; kk<=min(ny-1,kkk+1008); kk=kk+16) {...",shape=box];
	ForLoop3316095 -> 3441553;
	ForLoop3316095 -> _JOIN_3316095;
	3184731 [label="3184731  tmp[it]=tmp[it]+A[it*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop3316096 [label="ForLoop3316096  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) ...",shape=box];
	ForLoop3316096 -> ForLoop3316095;
	ForLoop3316096 -> _JOIN_3316096;
	3316019 [label="3316019  tmp[i]=tmp[i]+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	3316019 -> _JOIN_3316020;
	_JOIN_3048876 [label="_JOIN_3048876None...",shape=box];
	ForLoop3316098 [label="ForLoop3316098  for (i=(min(nx-1,ii+255))-(((min(nx-1,ii+255))-(it)+1)%6)+1; i<=min(nx-1,ii+255); i=i+1) {...",shape=box];
	ForLoop3316098 -> 3315112;
	ForLoop3316098 -> _JOIN_3316098;
	_JOIN_3314999 [label="_JOIN_3314999None...",shape=box];
	_JOIN_3314999 -> _JOIN_3315001;
	_JOIN_3185725 [label="_JOIN_3185725None...",shape=box];
	_JOIN_3185725 -> _JOIN_3056518;
	ForLoop3056589 [label="ForLoop3056589  for (k=kk; k<=cbv_4; k=k+1) {...",shape=box];
	ForLoop3056589 -> 3058746;
	ForLoop3056589 -> _JOIN_3056589;
	_JOIN_3311292 [label="_JOIN_3311292None...",shape=box];
	_JOIN_3311292 -> 3436908;
	3312510 [label="3312510  tmp[(i+3)]=tmp[(i+3)]+A[(i+3)*ny+j]*x_copy[(j-jj)];...",shape=box];
	3312510 -> _JOIN_3312511;
	ForLoop3315001 [label="ForLoop3315001  for (i=it; i<=min(nx-1,ii+255)-5; i=i+6) {...",shape=box];
	ForLoop3315001 -> 3308141;
	ForLoop3315001 -> _JOIN_3315001;
	ForLoop3312511 [label="ForLoop3312511  for (j=cbv_15; j<=cbv_16; j=j+1) ...",shape=box];
	ForLoop3312511 -> 3312510;
	ForLoop3312511 -> _JOIN_3312511;
	3312596 [label="3312596  tmp[(i+4)]=tmp[(i+4)]+A[(i+4)*ny+j]*x_copy[(j-jj)];...",shape=box];
	3056474 [label="3056474  for (j=jj; j<=min(ny-1,jj+63); j=j+1) ...",shape=box];
	_JOIN_3314792 [label="_JOIN_3314792None...",shape=box];
	_JOIN_3314792 -> _JOIN_3314794;
	_JOIN_3045425 [label="_JOIN_3045425None...",shape=box];
	_JOIN_3045425 -> ForLoop3045494;
	ForLoop3316094 [label="ForLoop3316094  for (k=kk; k<=cbv_27; k=k+1) ...",shape=box];
	ForLoop3316094 -> 3316093;
	ForLoop3316094 -> _JOIN_3316094;
	3311457 [label="3311457  tmp[(i+3)]=tmp[(i+3)]+A[(i+3)*ny+j]*x_copy[(j-jj)];...",shape=box];
	3313735 [label="3313735  tmp[(i+5)]=tmp[(i+5)]+A[(i+5)*ny+j]*x_copy[(j-jj)];...",shape=box];
	3308248 [label="3308248  for (j=jj; j<=min(ny-1,jj+63); j=j+1) ...",shape=box];
	ForLoop3316020 [label="ForLoop3316020  for (j=cbv_25; j<=cbv_26; j=j+1) ...",shape=box];
	ForLoop3316020 -> 3316019;
	ForLoop3316020 -> _JOIN_3316020;
	ForLoop3316023 [label="ForLoop3316023  for (jj=jjj; jj<=min(ny-1,jjj+64); jj=jj+64) {...",shape=box];
	ForLoop3316023 -> 3315174;
	ForLoop3316023 -> _JOIN_3316023;
	ForLoop3056519 [label="ForLoop3056519  for (jjj=0; jjj<=ny-1; jjj=jjj+128) ...",shape=box];
	ForLoop3056519 -> ForLoop3056518;
	ForLoop3056519 -> _JOIN_3056519;
	ForLoop3056518 [label="ForLoop3056518  for (jj=jjj; jj<=min(ny-1,jjj+64); jj=jj+64) {...",shape=box];
	ForLoop3056518 -> 3056474;
	ForLoop3056518 -> _JOIN_3056518;
	3310232 [label="3310232  tmp[(i+1)]=tmp[(i+1)]+A[(i+1)*ny+j]*x_copy[(j-jj)];...",shape=box];
	3310232 -> _JOIN_3310233;
	3315218 [label="3315218  tmp[i]=tmp[i]+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_3312431 [label="_JOIN_3312431None...",shape=box];
	_JOIN_3312431 -> 3438069;
	ForLoop3316024 [label="ForLoop3316024  for (jjj=0; jjj<=ny-1; jjj=jjj+128) ...",shape=box];
	ForLoop3316024 -> ForLoop3316023;
	ForLoop3316024 -> _JOIN_3316024;
	ForLoop3056591 [label="ForLoop3056591  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) ...",shape=box];
	ForLoop3056591 -> ForLoop3056590;
	ForLoop3056591 -> _JOIN_3056591;
	ForLoop3056590 [label="ForLoop3056590  for (kk=kkk; kk<=min(ny-1,kkk+1008); kk=kk+16) {...",shape=box];
	ForLoop3056590 -> 3433721;
	ForLoop3056590 -> _JOIN_3056590;
	ForLoop3056593 [label="ForLoop3056593  for (it=ii; it<=min(nx-1,ii+255)-31; it=it+32) {...",shape=box];
	ForLoop3056593 -> 3056809;
	ForLoop3056593 -> _JOIN_3056593;
	_JOIN_3048875 [label="_JOIN_3048875None...",shape=box];
	_JOIN_3048875 -> _JOIN_3048876;
	ForLoop3311372 [label="ForLoop3311372  for (j=cbv_12; j<=cbv_13; j=j+1) ...",shape=box];
	ForLoop3311372 -> 3311371;
	ForLoop3311372 -> _JOIN_3311372;
	ForLoop3314997 [label="ForLoop3314997  for (kk=kkk; kk<=min(ny-1,kkk+1008); kk=kk+16) {...",shape=box];
	ForLoop3314997 -> 3440605;
	ForLoop3314997 -> _JOIN_3314997;
	ForLoop3314995 [label="ForLoop3314995  for (k=kk; k<=cbv_23; k=k+1) {...",shape=box];
	ForLoop3314995 -> 3314863;
	ForLoop3314995 -> _JOIN_3314995;
	3316093 [label="3316093  y[k]=y[k]+A[i*ny+k]*tmp[i];...",shape=box];
	3316093 -> _JOIN_3316094;
	ForLoop3314999 [label="ForLoop3314999  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop3314999 -> ForLoop3314997;
	ForLoop3314999 -> _JOIN_3314999;
	3294491 [label="3294491  int i;...",shape=box];
	3294491 -> ForLoop3315001;
	_JOIN_3310233 [label="_JOIN_3310233None...",shape=box];
	_JOIN_3310233 -> 3310265;
	_JOIN_3056519 [label="_JOIN_3056519None...",shape=box];
	_JOIN_3056519 -> ForLoop3056591;
	_JOIN_3056518 [label="_JOIN_3056518None...",shape=box];
	_JOIN_3056518 -> _JOIN_3056519;
	_JOIN_3045494 [label="_JOIN_3045494None...",shape=box];
	_JOIN_3045494 -> 3054280;
	3441470 [label="3441470  register int cbv_25, cbv_26;...",shape=box];
	3309093 [label="3309093  tmp[i]=tmp[i]+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	3309093 -> _JOIexpected=9369846271501.798828
actual=9369846271501.798828
N_3309094;
	3308141 [label="3308141  tmp[i]=0;...",shape=box];
	3314863 [label="3314863  y[k]=y[k]+A[i*ny+k]*tmp[i];...",shape=box];
	3439230 [label="3439230  register int cbv_18, cbv_19;...",shape=box];
	_JOIN_3316098 [label="_JOIN_3316098None...",shape=box];
	_JOIN_3316098 -> _JOIN_3048875;
	_JOIN_3316095 [label="_JOIN_3316095None...",shape=box];
	_JOIN_3316095 -> _JOIN_3316096;
	_JOIN_3316094 [label="_JOIN_3316094None...",shape=box];
	_JOIN_3316094 -> _JOIN_3316095;
	_JOIN_3316096 [label="_JOIN_3316096None...",shape=box];
	_JOIN_3316096 -> _JOIN_3316098;
	3054280 [label="3054280  double x_copy[64];...",shape=box];

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest14.exe __orio_perftest14.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest14.exe  
{'[5, 3, 1, 6, 2, 5, 1, 0, 5, 5, 27, 0, 2, 0, 0, 0, 0, 1]' : 0.258456}
{'[5, 3, 1, 6, 2, 5, 1, 0, 5, 5, 27, 0, 2, 0, 0, 0, 0, 1]' : 0.259029}
{'[5, 3, 1, 6, 2, 5, 1, 0, 5, 5, 27, 0, 2, 0, 0, 0, 0, 1]' : 0.258495}
{'[5, 3, 1, 6, 2, 5, 1, 0, 5, 5, 27, 0, 2, 0, 0, 0, 0, 1]' : 0.257998}
{'[5, 3, 1, 6, 2, 5, 1, 0, 5, 5, 27, 0, 2, 0, 0, 0, 0, 1]' : 0.258322}
{'[5, 3, 1, 6, 2, 5, 1, 0, 5, 5, 27, 0, 2, 0, 0, 0, 0, 1]' : 0.258233}
{'[5, 3, 1, 6, 2, 5, 1, 0, 5, 5, 27, 0, 2, 0, 0, 0, 0, 1]' : 0.258262}
{'[5, 3, 1, 6, 2, 5, 1, 0, 5, 5, 27, 0, 2, 0, 0, 0, 0, 1]' : 0.258133}
{'[5, 3, 1, 6, 2, 5, 1, 0, 5, 5, 27, 0, 2, 0, 0, 0, 0, 1]' : 0.258082}
{'[5, 3, 1, 6, 2, 5, 1, 0, 5, 5, 27, 0, 2, 0, 0, 0, 0, 1]' : 0.259101}
{'[5, 3, 1, 6, 2, 5, 1, 0, 5, 5, 27, 0, 2, 0, 0, 0, 0, 1]' : 0.258441}
{'[5, 3, 1, 6, 2, 5, 1, 0, 5, 5, 27, 0, 2, 0, 0, 0, 0, 1]' : 0.25804}
{'[5, 3, 1, 6, 2, 5, 1, 0, 5, 5, 27, 0, 2, 0, 0, 0, 0, 1]' : 0.258114}
{'[5, 3, 1, 6, 2, 5, 1, 0, 5, 5, 27, 0, 2, 0, 0, 0, 0, 1]' : 0.258012}
{'[5, 3, 1, 6, 2, 5, 1, 0, 5, 5, 27, 0, 2, 0, 0, 0, 0, 1]' : 0.258361}
{'[5, 3, 1, 6, 2, 5, 1, 0, 5, 5, 27, 0, 2, 0, 0, 0, 0, 1]' : 0.258188}
{'[5, 3, 1, 6, 2, 5, 1, 0, 5, 5, 27, 0, 2, 0, 0, 0, 0, 1]' : 0.259389}
{'[5, 3, 1, 6, 2, 5, 1, 0, 5, 5, 27, 0, 2, 0, 0, 0, 0, 1]' : 0.258005}
{'[5, 3, 1, 6, 2, 5, 1, 0, 5, 5, 27, 0, 2, 0, 0, 0, 0, 1]' : 0.25803}
{'[5, 3, 1, 6, 2, 5, 1, 0, 5, 5, 27, 0, 2, 0, 0, 0, 0, 1]' : 0.258059}
{'[5, 3, 1, 6, 2, 5, 1, 0, 5, 5, 27, 0, 2, 0, 0, 0, 0, 1]' : 0.258204}
{'[5, 3, 1, 6, 2, 5, 1, 0, 5, 5, 27, 0, 2, 0, 0, 0, 0, 1]' : 0.2581}
{'[5, 3, 1, 6, 2, 5, 1, 0, 5, 5, 27, 0, 2, 0, 0, 0, 0, 1]' : 0.258366}
{'[5, 3, 1, 6, 2, 5, 1, 0, 5, 5, 27, 0, 2, 0, 0, 0, 0, 1]' : 0.257971}
{'[5, 3, 1, 6, 2, 5, 1, 0, 5, 5, 27, 0, 2, 0, 0, 0, 0, 1]' : 0.259045}
{'[5, 3, 1, 6, 2, 5, 1, 0, 5, 5, 27, 0, 2, 0, 0, 0, 0, 1]' : 0.25836}
{'[5, 3, 1, 6, 2, 5, 1, 0, 5, 5, 27, 0, 2, 0, 0, 0, 0, 1]' : 0.258068}
{'[5, 3, 1, 6, 2, 5, 1, 0, 5, 5, 27, 0, 2, 0, 0, 0, 0, 1]' : 0.257972}
{'[5, 3, 1, 6, 2, 5, 1, 0, 5, 5, 27, 0, 2, 0, 0, 0, 0, 1]' : 0.258489}
{'[5, 3, 1, 6, 2, 5, 1, 0, 5, 5, 27, 0, 2, 0, 0, 0, 0, 1]' : 0.258055}

out:
 ["{'[5, 3, 1, 6, 2, 5, 1, 0, 5, 5, 27, 0, 2, 0, 0, 0, 0, 1]' : 0.258456}", "{'[5, 3, 1, 6, 2, 5, 1, 0, 5, 5, 27, 0, 2, 0, 0, 0, 0, 1]' : 0.259029}", "{'[5, 3, 1, 6, 2, 5, 1, 0, 5, 5, 27, 0, 2, 0, 0, 0, 0, 1]' : 0.258495}", "{'[5, 3, 1, 6, 2, 5, 1, 0, 5, 5, 27, 0, 2, 0, 0, 0, 0, 1]' : 0.257998}", "{'[5, 3, 1, 6, 2, 5, 1, 0, 5, 5, 27, 0, 2, 0, 0, 0, 0, 1]' : 0.258322}", "{'[5, 3, 1, 6, 2, 5, 1, 0, 5, 5, 27, 0, 2, 0, 0, 0, 0, 1]' : 0.258233}", "{'[5, 3, 1, 6, 2, 5, 1, 0, 5, 5, 27, 0, 2, 0, 0, 0, 0, 1]' : 0.258262}", "{'[5, 3, 1, 6, 2, 5, 1, 0, 5, 5, 27, 0, 2, 0, 0, 0, 0, 1]' : 0.258133}", "{'[5, 3, 1, 6, 2, 5, 1, 0, 5, 5, 27, 0, 2, 0, 0, 0, 0, 1]' : 0.258082}", "{'[5, 3, 1, 6, 2, 5, 1, 0, 5, 5, 27, 0, 2, 0, 0, 0, 0, 1]' : 0.259101}", "{'[5, 3, 1, 6, 2, 5, 1, 0, 5, 5, 27, 0, 2, 0, 0, 0, 0, 1]' : 0.258441}", "{'[5, 3, 1, 6, 2, 5, 1, 0, 5, 5, 27, 0, 2, 0, 0, 0, 0, 1]' : 0.25804}", "{'[5, 3, 1, 6, 2, 5, 1, 0, 5, 5, 27, 0, 2, 0, 0, 0, 0, 1]' : 0.258114}", "{'[5, 3, 1, 6, 2, 5, 1, 0, 5, 5, 27, 0, 2, 0, 0, 0, 0, 1]' : 0.258012}", "{'[5, 3, 1, 6, 2, 5, 1, 0, 5, 5, 27, 0, 2, 0, 0, 0, 0, 1]' : 0.258361}", "{'[5, 3, 1, 6, 2, 5, 1, 0, 5, 5, 27, 0, 2, 0, 0, 0, 0, 1]' : 0.258188}", "{'[5, 3, 1, 6, 2, 5, 1, 0, 5, 5, 27, 0, 2, 0, 0, 0, 0, 1]' : 0.259389}", "{'[5, 3, 1, 6, 2, 5, 1, 0, 5, 5, 27, 0, 2, 0, 0, 0, 0, 1]' : 0.258005}", "{'[5, 3, 1, 6, 2, 5, 1, 0, 5, 5, 27, 0, 2, 0, 0, 0, 0, 1]' : 0.25803}", "{'[5, 3, 1, 6, 2, 5, 1, 0, 5, 5, 27, 0, 2, 0, 0, 0, 0, 1]' : 0.258059}", "{'[5, 3, 1, 6, 2, 5, 1, 0, 5, 5, 27, 0, 2, 0, 0, 0, 0, 1]' : 0.258204}", "{'[5, 3, 1, 6, 2, 5, 1, 0, 5, 5, 27, 0, 2, 0, 0, 0, 0, 1]' : 0.2581}", "{'[5, 3, 1, 6, 2, 5, 1, 0, 5, 5, 27, 0, 2, 0, 0, 0, 0, 1]' : 0.258366}", "{'[5, 3, 1, 6, 2, 5, 1, 0, 5, 5, 27, 0, 2, 0, 0, 0, 0, 1]' : 0.257971}", "{'[5, 3, 1, 6, 2, 5, 1, 0, 5, 5, 27, 0, 2, 0, 0, 0, 0, 1]' : 0.259045}", "{'[5, 3, 1, 6, 2, 5, 1, 0, 5, 5, 27, 0, 2, 0, 0, 0, 0, 1]' : 0.25836}", "{'[5, 3, 1, 6, 2, 5, 1, 0, 5, 5, 27, 0, 2, 0, 0, 0, 0, 1]' : 0.258068}", "{'[5, 3, 1, 6, 2, 5, 1, 0, 5, 5, 27, 0, 2, 0, 0, 0, 0, 1]' : 0.257972}", "{'[5, 3, 1, 6, 2, 5, 1, 0, 5, 5, 27, 0, 2, 0, 0, 0, 0, 1]' : 0.258489}", "{'[5, 3, 1, 6, 2, 5, 1, 0, 5, 5, 27, 0, 2, 0, 0, 0, 0, 1]' : 0.258055}"]
returning from 'run': {'[5, 3, 1, 6, 2, 5, 1, 0, 5, 5, 27, 0, 2, 0, 0, 0, 0, 1]': ([0.258456, 0.259029, 0.258495, 0.257998, 0.258322, 0.258233, 0.258262, 0.258133, 0.258082, 0.259101, 0.258441, 0.25804, 0.258114, 0.258012, 0.258361, 0.258188, 0.259389, 0.258005, 0.25803, 0.258059, 0.258204, 0.2581, 0.258366, 0.257971, 0.259045, 0.25836, 0.258068, 0.257972, 0.258489, 0.258055], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.258456, 0.259029, 0.258495, 0.257998, 0.258322, 0.258233, 0.258262, 0.258133, 0.258082, 0.259101, 0.258441, 0.25804, 0.258114, 0.258012, 0.258361, 0.258188, 0.259389, 0.258005, 0.25803, 0.258059, 0.258204, 0.2581, 0.258366, 0.257971, 0.259045, 0.25836, 0.258068, 0.257972, 0.258489, 0.258055], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[5, 3, 1, 6, 2, 5, 1, 0, 5, 5, 27, 0, 2, 0, 0, 0, 0, 1]': ([0.258456, 0.259029, 0.258495, 0.257998, 0.258322, 0.258233, 0.258262, 0.258133, 0.258082, 0.259101, 0.258441, 0.25804, 0.258114, 0.258012, 0.258361, 0.258188, 0.259389, 0.258005, 0.25803, 0.258059, 0.258204, 0.2581, 0.258366, 0.257971, 0.259045, 0.25836, 0.258068, 0.257972, 0.258489, 0.258055], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [0, 0, 3, 2, 2, 5, 0, 1, 28, 11, 28, 0, 2, 0, 0, 1, 1, 0]
Fixed Factors: {}
Testing candidate 15: [0, 0, 3, 2, 2, 5, 0, 1, 28, 11, 28, 0, 2, 0, 0, 1, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	52
        Max loop nest depth: 	5
        Additions: 		5773
        Multiplications: 	2790
        Divisions: 		0
        Logical: 		0
        Reads: 			10853
        Writes: 		1730
        Comparisons:		52
        Gotos: 			0
        
digraph CFG {
	ForLoop3772000 [label="ForLoop3772000  for (j=jjj; j<=min(ny-1,jjj+127)-28; j=j+29) {...",shape=box];
	ForLoop3772000 -> 3897530;
	ForLoop3772000 -> _JOIN_3772000;
	_JOIN_3759180 [label="_JOIN_3759180None...",shape=box];
	_JOIN_3759180 -> ForLoop3760314;
	3759242 [label="3759242  for (k=kk; k<=min(ny-1,kk+63); k=k+1) ...",shape=box];
	3759242 -> ForLoop3760280;
	3442982 [label="3442982  register int cbv_2, cbv_3;...",shape=box];
	ForLoop3774589 [label="ForLoop3774589  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop3774589 -> ForLoop3774588;
	ForLoop3774589 -> _JOIN_3774589;
	ForLoop3774588 [label="ForLoop3774588  for (kk=kkk; kk<=min(ny-1,kkk+960); kk=kk+64) {...",shape=box];
	ForLoop3774588 -> 3774510;
	ForLoop3774588 -> _JOIN_3774588;
	ForLoop3773191 [label="ForLoop3773191  for (k=kk; k<=min(ny-1,kk+63); k=k+1) {...",shape=box];
	ForLoop3773191 -> 3909683;
	ForLoop3773191 -> _JOIN_3773191;
	3897530 [label="3897530  double scv_64, scv_65, scv_66, scv_67, scv_68, scv_69, scv_70, scv_71;...",shape=box];
	ForLoop3774378 [label="ForLoop3774378  for (j=jjj; j<=min(ny-1,jjj+127)-28; j=j+29) {...",shape=box];
	ForLoop3774378 -> 3773676;
	ForLoop3774378 -> _JOIN_3774378;
	_JOIN_3760316 [label="_JOIN_3760316None...",shape=box];
	_JOIN_3760316 -> 3760317;
	_JOIN_3442680 [label="_JOIN_3442680None...",shape=box];
	_JOIN_3442680 -> 3727003;
	_JOIN_3774555 [label="_JOIN_3774555None...",shape=box];
	_JOIN_3774555 -> 3774586;
	3760311 [label="3760311  for (k=kk; k<=min(ny-1,kk+63); k=k+1) ...",shape=box];
	3760311 -> _JOIN_3760313;
	3923550 [label="3923550  tmp[(i+1)]=scv_95;...",shape=box];
	3760317 [label="3760317  int i;...",shape=box];
	3760317 -> ForLoop3773569;
	ForLoop3759178 [label="ForLoop3759178  for (j=(min(ny-1,jjj+127))-(((min(ny-1,jjj+127))-(jjj)+1)%29)+1; j<=min(ny-1,jjj+127); j=j+1) {...",shape=box];
	ForLoop3759178 -> 3819585;
	ForLoop3759178 -> _JOIN_3759178;
	3442357 [label="3442357  y[i]=0.0;...",shape=box];
	ForLoop3774555 [label="ForLoop3774555  for (k=kk; k<=min(ny-1,kk+63); k=k+1) {...",shape=box];
	ForLoop3774555 -> 3926607;
	ForLoop3774555 -> _JOIN_3774555;
	3879141 [label="3879141  double scv_32, scv_33, scv_34, scv_35, scv_36, scv_37, scv_38, scv_39;...",shape=box];
	3848768 [label="3848768  double scv_31;...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 3441880;
	_JOIN_3758210 [label="_JOIN_3758210None...",shape=box];
	_JOIN_3758210 -> ForLoop3759178;
	3898669 [label="3898669  double scv_93;...",shape=box];
	_JOIN_3774594 [label="_JOIN_3774594None...",shape=box];
	ForLoop3774446 [label="ForLoop3774446  for (j=(min(ny-1,jjj+127))-(((min(ny-1,jjj+127))-(jjj)+1)%29)+1; j<=min(ny-1,jjj+127); j=j+1) {...",shape=box];
	ForLoop3774446 -> 3774445;
	ForLoop3774446 -> _JOIN_3774446;
	3926607 [label="3926607  double scv_107;...",shape=box];
	3727057 [label="3727057  int j;...",shape=box];
	3727057 -> ForLoop3758210;
	_JOIN_3773569 [label="_JOIN_3773569None...",shape=box];
	_JOIN_3773569 -> ForLoop3774591;
	_JOIN_3760313 [label="_JOIN_3760313None...",shape=box];
	_JOIN_3760313 -> _JOIN_3760314;
	3927929 [label="3927929  double scv_108;...",shape=box];
	ForLoop3760280 [label="ForLoop3760280  for (k=kk; k<=min(ny-1,kk+63); k=k+1) {...",shape=box];
	ForLoop3760280 -> 3848768;
	ForLoop3760280 -> _JOIN_3760280;
	_JOIN_3760314 [label="_JOIN_3760314None...",shape=box];
	_JOIN_3760314 -> 3879159;
	_JOIN_3774448 [label="_JOIN_3774448None...",shape=box];
	_JOIN_3774448 -> ForLoop3774589;
	_JOIN_3773567 [label="_JOIN_3773567None...",shape=box];
	_JOIN_3773567 -> 3923550;
	ForLoop3772390 [label="ForLoop3772390  for (jjj=0; jjj<=ny-1; jjj=jjj+128) {...",shape=box];
	ForLoop3772390 -> 3760456;
	ForLoop3772390 -> _JOIN_3772390;
	_JOIN_3774588 [label="_JOIN_3774588None...",shape=box];
	_JOIN_3774588 -> _JOIN_3774589;
	3774510 [label="3774510  for (k=kk; k<=min(ny-1,kk+63); k=k+1) ...",shape=box];
	3774510 -> ForLoop3774555;
	3772452 [label="3772452  for (k=kk; k<=min(ny-1,kk+63); k=k+1) ...",shape=box];
	3773676 [label="3773676  scv_108=scv_108+A[i*ny+j]*x[j];...",shape=box];
	_JOIN_3759178 [label="_JOIN_3759178None...",shape=box];
	_JOIN_3759178 -> _JOIN_3759180;
	3441880 [label="3441880  int i;...",shape=box];
	_JOIN_3774589 [label="_JOIN_3774589None...",shape=box];
	_JOIN_3774589 -> 3927941;
	_JOIN_3772388 [label="_JOIN_3772388None...",shape=box];
	_JOIN_3772388 -> _JOIN_3772390;
	_JOIN_3773191 [label="_JOIN_3773191None...",shape=box];
	_JOIN_3773191 -> 3773222;
	3773636 [label="3773636  int j;...",shape=box];
	3773636 -> ForLoop3774378;
	ForLoop3774448 [label="ForLoop3774448  for (jjj=0; jjj<=ny-1; jjj=jjj+128) {...",shape=box];
	ForLoop3774448 -> 3773636;
	ForLoop3774448 -> _JOIN_3774448;
	_JOIN_3774591 [label="_JOIN_3774591None...",shape=box];
	_JOIN_3774591 -> _JOIN_3774594;
	3442679 [label="3442679  y[i]=0.0;...",shape=box];
	3442679 -> _JOIN_3442680;
	3909683 [label="3909683  double scv_94;...",shape=box];
	3923532 [label="3923532  double scv_95, scv_96, scv_97, scv_98, scv_99, scv_100, scv_101, scv_102;...",shape=box];
	3727003 [label="3727003  double x_copy;...",shape=box];expected=9369846271501.798828
actual=9369846271501.798828

	3817086 [label="3817086  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	3879159 [label="3879159  tmp[(it+21)]=scv_32;...",shape=box];
	ForLoop3774594 [label="ForLoop3774594  for (iii=0; iii<=nx-1; iii=iii+128) {...",shape=box];
	ForLoop3774594 -> ForLoop3760316;
	ForLoop3774594 -> _JOIN_3774594;
	_JOIN_3760280 [label="_JOIN_3760280None...",shape=box];
	_JOIN_3760280 -> 3760311;
	ForLoop3773567 [label="ForLoop3773567  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop3773567 -> ForLoop3773565;
	ForLoop3773567 -> _JOIN_3773567;
	ForLoop3760313 [label="ForLoop3760313  for (kk=kkk; kk<=min(ny-1,kkk+960); kk=kk+64) {...",shape=box];
	ForLoop3760313 -> 3759242;
	ForLoop3760313 -> _JOIN_3760313;
	ForLoop3773569 [label="ForLoop3773569  for (i=it; i<=min(nx-1,iii+127)-11; i=i+12) {...",shape=box];
	ForLoop3773569 -> 3923532;
	ForLoop3773569 -> _JOIN_3773569;
	3774586 [label="3774586  for (k=kk; k<=min(ny-1,kk+63); k=k+1) ...",shape=box];
	3774586 -> _JOIN_3774588;
	ForLoop3760316 [label="ForLoop3760316  for (it=iii; it<=min(nx-1,iii+127)-31; it=it+32) {...",shape=box];
	ForLoop3760316 -> 3879141;
	ForLoop3760316 -> _JOIN_3760316;
	3927941 [label="3927941  tmp[i]=scv_108;...",shape=box];
	3927941 -> _JOIN_3774591;
	ForLoop3760314 [label="ForLoop3760314  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop3760314 -> ForLoop3760313;
	ForLoop3760314 -> _JOIN_3760314;
	ForLoop3442680 [label="ForLoop3442680  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop3442680 -> 3442679;
	ForLoop3442680 -> _JOIN_3442680;
	3819585 [label="3819585  double scv_30;...",shape=box];
	3774445 [label="3774445  scv_108=scv_108+A[i*ny+j]*x[j];...",shape=box];
	3774445 -> _JOIN_3774446;
	3760456 [label="3760456  int j;...",shape=box];
	ForLoop3442611 [label="ForLoop3442611  for (i=0; i<=cbv_1; i=i+29) {...",shape=box];
	ForLoop3442611 -> 3442357;
	ForLoop3442611 -> _JOIN_3442611;
	ForLoop3774591 [label="ForLoop3774591  for (i=(min(nx-1,iii+127))-(((min(nx-1,iii+127))-(it)+1)%12)+1; i<=min(nx-1,iii+127); i=i+1) {...",shape=box];
	ForLoop3774591 -> 3927929;
	ForLoop3774591 -> _JOIN_3774591;
	_JOIN_3774446 [label="_JOIN_3774446None...",shape=box];
	_JOIN_3774446 -> _JOIN_3774448;
	_JOIN_3442611 [label="_JOIN_3442611None...",shape=box];
	_JOIN_3442611 -> 3442982;
	_JOIN_3773565 [label="_JOIN_3773565None...",shape=box];
	_JOIN_3773565 -> _JOIN_3773567;
	_JOIN_3772390 [label="_JOIN_3772390None...",shape=box];
	_JOIN_3772390 -> ForLoop3773567;
	3773222 [label="3773222  for (k=kk; k<=min(ny-1,kk+63); k=k+1) ...",shape=box];
	ForLoop3759180 [label="ForLoop3759180  for (jjj=0; jjj<=ny-1; jjj=jjj+128) {...",shape=box];
	ForLoop3759180 -> 3727057;
	ForLoop3759180 -> _JOIN_3759180;
	_JOIN_3774378 [label="_JOIN_3774378None...",shape=box];
	_JOIN_3774378 -> ForLoop3774446;
	_JOIN_3772000 [label="_JOIN_3772000None...",shape=box];
	_JOIN_3772000 -> ForLoop3772388;
	ForLoop3772388 [label="ForLoop3772388  for (j=(min(ny-1,jjj+127))-(((min(ny-1,jjj+127))-(jjj)+1)%29)+1; j<=min(ny-1,jjj+127); j=j+1) {...",shape=box];
	ForLoop3772388 -> 3898669;
	ForLoop3772388 -> _JOIN_3772388;
	ForLoop3758210 [label="ForLoop3758210  for (j=jjj; j<=min(ny-1,jjj+127)-28; j=j+29) {...",shape=box];
	ForLoop3758210 -> 3817086;
	ForLoop3758210 -> _JOIN_3758210;
	ForLoop3773565 [label="ForLoop3773565  for (kk=kkk; kk<=min(ny-1,kkk+960); kk=kk+64) {...",shape=box];
	ForLoop3773565 -> 3772452;
	ForLoop3773565 -> _JOIN_3773565;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest15.exe __orio_perftest15.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest15.exe  
{'[0, 0, 3, 2, 2, 5, 0, 1, 28, 11, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.227178}
{'[0, 0, 3, 2, 2, 5, 0, 1, 28, 11, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.229391}
{'[0, 0, 3, 2, 2, 5, 0, 1, 28, 11, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.22642}
{'[0, 0, 3, 2, 2, 5, 0, 1, 28, 11, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.226071}
{'[0, 0, 3, 2, 2, 5, 0, 1, 28, 11, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.227037}
{'[0, 0, 3, 2, 2, 5, 0, 1, 28, 11, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.226417}
{'[0, 0, 3, 2, 2, 5, 0, 1, 28, 11, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.226866}
{'[0, 0, 3, 2, 2, 5, 0, 1, 28, 11, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.226222}
{'[0, 0, 3, 2, 2, 5, 0, 1, 28, 11, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.22629}
{'[0, 0, 3, 2, 2, 5, 0, 1, 28, 11, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.227283}
{'[0, 0, 3, 2, 2, 5, 0, 1, 28, 11, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.227638}
{'[0, 0, 3, 2, 2, 5, 0, 1, 28, 11, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.22546}
{'[0, 0, 3, 2, 2, 5, 0, 1, 28, 11, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.227379}
{'[0, 0, 3, 2, 2, 5, 0, 1, 28, 11, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.227596}
{'[0, 0, 3, 2, 2, 5, 0, 1, 28, 11, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.228381}
{'[0, 0, 3, 2, 2, 5, 0, 1, 28, 11, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.226458}
{'[0, 0, 3, 2, 2, 5, 0, 1, 28, 11, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.226758}
{'[0, 0, 3, 2, 2, 5, 0, 1, 28, 11, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.226013}
{'[0, 0, 3, 2, 2, 5, 0, 1, 28, 11, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.229263}
{'[0, 0, 3, 2, 2, 5, 0, 1, 28, 11, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.225939}
{'[0, 0, 3, 2, 2, 5, 0, 1, 28, 11, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.226903}
{'[0, 0, 3, 2, 2, 5, 0, 1, 28, 11, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.225508}
{'[0, 0, 3, 2, 2, 5, 0, 1, 28, 11, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.225243}
{'[0, 0, 3, 2, 2, 5, 0, 1, 28, 11, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.227384}
{'[0, 0, 3, 2, 2, 5, 0, 1, 28, 11, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.226264}
{'[0, 0, 3, 2, 2, 5, 0, 1, 28, 11, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.225245}
{'[0, 0, 3, 2, 2, 5, 0, 1, 28, 11, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.226126}
{'[0, 0, 3, 2, 2, 5, 0, 1, 28, 11, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.226039}
{'[0, 0, 3, 2, 2, 5, 0, 1, 28, 11, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.226748}
{'[0, 0, 3, 2, 2, 5, 0, 1, 28, 11, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.225389}

out:
 ["{'[0, 0, 3, 2, 2, 5, 0, 1, 28, 11, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.227178}", "{'[0, 0, 3, 2, 2, 5, 0, 1, 28, 11, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.229391}", "{'[0, 0, 3, 2, 2, 5, 0, 1, 28, 11, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.22642}", "{'[0, 0, 3, 2, 2, 5, 0, 1, 28, 11, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.226071}", "{'[0, 0, 3, 2, 2, 5, 0, 1, 28, 11, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.227037}", "{'[0, 0, 3, 2, 2, 5, 0, 1, 28, 11, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.226417}", "{'[0, 0, 3, 2, 2, 5, 0, 1, 28, 11, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.226866}", "{'[0, 0, 3, 2, 2, 5, 0, 1, 28, 11, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.226222}", "{'[0, 0, 3, 2, 2, 5, 0, 1, 28, 11, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.22629}", "{'[0, 0, 3, 2, 2, 5, 0, 1, 28, 11, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.227283}", "{'[0, 0, 3, 2, 2, 5, 0, 1, 28, 11, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.227638}", "{'[0, 0, 3, 2, 2, 5, 0, 1, 28, 11, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.22546}", "{'[0, 0, 3, 2, 2, 5, 0, 1, 28, 11, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.227379}", "{'[0, 0, 3, 2, 2, 5, 0, 1, 28, 11, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.227596}", "{'[0, 0, 3, 2, 2, 5, 0, 1, 28, 11, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.228381}", "{'[0, 0, 3, 2, 2, 5, 0, 1, 28, 11, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.226458}", "{'[0, 0, 3, 2, 2, 5, 0, 1, 28, 11, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.226758}", "{'[0, 0, 3, 2, 2, 5, 0, 1, 28, 11, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.226013}", "{'[0, 0, 3, 2, 2, 5, 0, 1, 28, 11, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.229263}", "{'[0, 0, 3, 2, 2, 5, 0, 1, 28, 11, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.225939}", "{'[0, 0, 3, 2, 2, 5, 0, 1, 28, 11, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.226903}", "{'[0, 0, 3, 2, 2, 5, 0, 1, 28, 11, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.225508}", "{'[0, 0, 3, 2, 2, 5, 0, 1, 28, 11, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.225243}", "{'[0, 0, 3, 2, 2, 5, 0, 1, 28, 11, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.227384}", "{'[0, 0, 3, 2, 2, 5, 0, 1, 28, 11, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.226264}", "{'[0, 0, 3, 2, 2, 5, 0, 1, 28, 11, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.225245}", "{'[0, 0, 3, 2, 2, 5, 0, 1, 28, 11, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.226126}", "{'[0, 0, 3, 2, 2, 5, 0, 1, 28, 11, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.226039}", "{'[0, 0, 3, 2, 2, 5, 0, 1, 28, 11, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.226748}", "{'[0, 0, 3, 2, 2, 5, 0, 1, 28, 11, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.225389}"]
returning from 'run': {'[0, 0, 3, 2, 2, 5, 0, 1, 28, 11, 28, 0, 2, 0, 0, 1, 1, 0]': ([0.227178, 0.229391, 0.22642, 0.226071, 0.227037, 0.226417, 0.226866, 0.226222, 0.22629, 0.227283, 0.227638, 0.22546, 0.227379, 0.227596, 0.228381, 0.226458, 0.226758, 0.226013, 0.229263, 0.225939, 0.226903, 0.225508, 0.225243, 0.227384, 0.226264, 0.225245, 0.226126, 0.226039, 0.226748, 0.225389], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.227178, 0.229391, 0.22642, 0.226071, 0.227037, 0.226417, 0.226866, 0.226222, 0.22629, 0.227283, 0.227638, 0.22546, 0.227379, 0.227596, 0.228381, 0.226458, 0.226758, 0.226013, 0.229263, 0.225939, 0.226903, 0.225508, 0.225243, 0.227384, 0.226264, 0.225245, 0.226126, 0.226039, 0.226748, 0.225389], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 3, 2, 2, 5, 0, 1, 28, 11, 28, 0, 2, 0, 0, 1, 1, 0]': ([0.227178, 0.229391, 0.22642, 0.226071, 0.227037, 0.226417, 0.226866, 0.226222, 0.22629, 0.227283, 0.227638, 0.22546, 0.227379, 0.227596, 0.228381, 0.226458, 0.226758, 0.226013, 0.229263, 0.225939, 0.226903, 0.225508, 0.225243, 0.227384, 0.226264, 0.225245, 0.226126, 0.226039, 0.226748, 0.225389], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [1, 3, 6, 4, 0, 5, 1, 0, 12, 18, 0, 29, 0, 0, 2, 1, 0, 0]
Fixed Factors: {}
Testing candidate 16: [1, 3, 6, 4, 0, 5, 1, 0, 12, 18, 0, 29, 0, 0, 2, 1, 0, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	76
        Max loop nest depth: 	6
        Additions: 		6702
        Multiplications: 	2560
        Divisions: 		0
        Logical: 		0
        Reads: 			13942
        Writes: 		2895
        Comparisons:		76
        Gotos: 			0
        
digraph CFG {
	4452251 [label="4452251  double scv_642, scv_643, scv_644, scv_645, scv_646, scv_647, scv_648, scv_649;...",shape=box];
	4236622 [label="4236622  int k;...",shape=box];
	4236622 -> ForLoop4237656;
	ForLoop4229960 [label="ForLoop4229960  for (k=(min(ny-1,kk+511))-(((min(ny-1,kk+511))-(kt)+1)%30)+1; k<=min(ny-1,kk+511); k=k+1) {...",shape=box];
	ForLoop4229960 -> 4286748;
	ForLoop4229960 -> _JOIN_4229960;
	ForLoop4233216 [label="ForLoop4233216  for (k=kt; k<=min(ny-1,kk+511)-29; k=k+30) {...",shape=box];
	ForLoop4233216 -> 4292896;
	ForLoop4233216 -> _JOIN_4233216;
	4286748 [label="4286748  double scv_95;...",shape=box];
	ForLoop4232106 [label="ForLoop4232106  for (k=kt; k<=min(ny-1,kk+511)-29; k=k+30) {...",shape=box];
	ForLoop4232106 -> 4290611;
	ForLoop4232106 -> _JOIN_4232106;
	4307313 [label="4307313  double scv_374;...",shape=box];
	4229962 [label="4229962  int k;...",shape=box];
	4229962 -> ForLoop4230996;
	ForLoop4238840 [label="ForLoop4238840  for (k=(min(ny-1,kk+511))-(((min(ny-1,kk+511))-(kt)+1)%30)+1; k<=min(ny-1,kk+511); k=k+1) {...",shape=box];
	ForLoop4238840 -> 4305028;
	ForLoop4238840 -> _JOIN_4238840;
	ForLoop4247720 [label="ForLoop4247720  for (k=(min(ny-1,kk+511))-(((min(ny-1,kk+511))-(kt)+1)%30)+1; k<=min(ny-1,kk+511); k=k+1) {...",shape=box];
	ForLoop4247720 -> 4323308;
	ForLoop4247720 -> _JOIN_4247720;
	_JOIN_4246610 [label="_JOIN_4246610None...",shape=box];
	_JOIN_4246610 -> 4246612;
	ForLoop4248756 [label="ForLoop4248756  for (k=kt; k<=min(ny-1,kk+511)-29; k=k+30) {...",shape=box];
	ForLoop4248756 -> 4324886;
	ForLoop4248756 -> _JOIN_4248756;
	4302743 [label="4302743  double scv_312;...",shape=box];
	_JOIN_4248976 [label="_JOIN_4248976None...",shape=box];
	_JOIN_4248976 -> _JOIN_4248978;
	4454910 [label="4454910  double scv_704;...",shape=box];
	4323308 [label="4323308  double scv_591;...",shape=box];
	_JOIN_4234326 [label="_JOIN_4234326None...",shape=box];
	_JOIN_4234326 -> ForLoop4234400;
	4233292 [label="4233292  int k;...",shape=box];
	4233292 -> ForLoop4234326;
	ForLoop4235510 [label="ForLoop4235510  for (k=(min(ny-1,kk+511))-(((min(ny-1,kk+511))-(kt)+1)%30)+1; k<=min(ny-1,kk+511); k=k+1) {...",shape=box];
	ForLoop4235510 -> 4298173;
	ForLoop4235510 -> _JOIN_4235510;
	4449068 [label="4449068  double scv_623, scv_624, scv_625, scv_626, scv_627, scv_628, scv_629, scv_630;...",shape=box];
	4232182 [label="4232182  int k;...",shape=box];
	4232182 -> ForLoop4233216;
	4289033 [label="4289033  double scv_126;...",shape=box];
	4324886 [label="4324886  double scv_592, scv_593, scv_594, scv_595, scv_596, scv_597, scv_598, scv_599;...",shape=box];
	_JOIN_4234400 [label="_JOIN_4234400None...",shape=box];
	_JOIN_4234400 -> 4234402;
	_JOIN_4239950 [label="_JOIN_4239950None...",shape=box];
	_JOIN_4239950 -> 4239952;
	_JOIN_4241060 [label="_JOIN_4241060None...",shape=box];
	_JOIN_4241060 -> 4241062;
	ForLoop4234400 [label="ForLoop4234400  for (k=(min(ny-1,kk+511))-(((min(ny-1,kk+511))-(kt)+1)%30)+1; k<=min(ny-1,kk+511); k=k+1) {...",shape=box];
	ForLoop4234400 -> 4295888;
	ForLoop4234400 -> _JOIN_4234400;
	_JOIN_4236546 [label="_JOIN_4236546None...",shape=box];
	_JOIN_4236546 -> ForLoop4236620;
	_JOIN_4231070 [label="_JOIN_4231070None...",shape=box];
	_JOIN_4231070 -> 4231072;
	4315746 [label="4315746  double scv_468, scv_469, scv_470, scv_471, scv_472, scv_473, scv_474, scv_475;...",shape=box];
	_JOIN_4245500 [label="_JOIN_4245500None...",shape=box];
	_JOIN_4245500 -> 4245502;
	_JOIN_4248835 [label="_JOIN_4248835None...",shape=box];
	_JOIN_4248835 -> 4449086;
	ForLoop4227927 [label="ForLoop4227927  for (kt=kk; kt<=min(ny-1,kk+511)-31; kt=kt+32) {...",shape=box];
	ForLoop4227927 -> 4280652;
	ForLoop4227927 -> _JOIN_4227927;
	_JOIN_4248837 [label="_JOIN_4248837None...",shape=box];
	_JOIN_4248837 -> ForLoop4250879;
	ForLoop4242096 [label="ForLoop4242096  for (k=kt; k<=min(ny-1,kk+511)-29; k=k+30) {...",shape=box];
	ForLoop4242096 -> 4311176;
	ForLoop4242096 -> _JOIN_4242096;
	ForLoop4250881 [label="ForLoop4250881  for (ii=iii; ii<=min(nx-1,iii+496); ii=ii+16) {...",shape=box];
	ForLoop4250881 -> 4206135;
	ForLoop4250881 -> _JOIN_4250881;
	4249951 [label="4249951  int k;...",shape=box];
	4249951 -> ForLoop4250805;
	3957216 [label="3957216  int i;...",shape=box];
	3957216 -> ForLoop3957563;
	_JOIN_4207544 [label="_JOIN_4207544None...",shape=box];
	_JOIN_4207544 -> _JOIN_4207546;
	_JOIN_4207546 [label="_JOIN_4207546None...",shape=box];
	_JOIN_4207546 -> ForLoop4248835;
	_JOIN_4247720 [label="_JOIN_4247720None...",shape=box];
	_JOIN_4247720 -> 4247722;
	_JOIN_4235436 [label="_JOIN_4235436None...",shape=box];
	_JOIN_4235436 -> ForLoop4235510;
	4248975 [label="4248975  scv_705=scv_705+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	4248975 -> _JOIN_4248976;
	_JOIN_4249950 [label="_JOIN_4249950None...",shape=box];
	_JOIN_4249950 -> 4249951;
	4247722 [label="4247722  int k;...",shape=box];
	4247722 -> ForLoop4248756;
	4290611 [label="4290611  double scv_127, scv_128, scv_129, scv_130, scv_131, scv_132, scv_133, scv_134;...",shape=box];
	_JOIN_4245426 [label="_JOIN_4245426None...",shape=box];
	_JOIN_4245426 -> ForLoop4245500;
	ForLoop4233290 [label="ForLoop4233290  for (k=(min(ny-1,kk+511))-(((min(ny-1,kk+511))-(kt)+1)%30)+1; k<=min(ny-1,kk+511); k=k+1) {...",shape=box];
	ForLoop4233290 -> 4293603;
	ForLoop4233290 -> _JOIN_4233290;
	ForLoop4241060 [label="ForLoop4241060  for (k=(min(ny-1,kk+511))-(((min(ny-1,kk+511))-(kt)+1)%30)+1; k<=min(ny-1,kk+511); k=k+1) {...",shape=box];
	ForLoop4241060 -> 4309598;
	ForLoop4241060 -> _JOIN_4241060;
	4288326 [label="4288326  double scv_96, scv_97, scv_98, scv_99, scv_100, scv_101, scv_102, scv_103;...",shape=box];
	ForLoop4237656 [label="ForLoop4237656  for (k=kt; k<=min(ny-1,kk+511)-29; k=k+30) {...",shape=box];
	ForLoop4237656 -> 4302036;
	ForLoop4237656 -> _JOIN_4237656;
	ForLoop4244390 [label="ForLoop4244390  for (k=(min(ny-1,kk+511))-(((min(ny-1,kk+511))-(kt)+1)%30)+1; k<=min(ny-1,kk+511); k=k+1) {...",shape=box];
	ForLoop4244390 -> 4316453;
	ForLoop4244390 -> _JOIN_4244390;
	ForLoop4243206 [label="ForLoop4243206  for (k=kt; k<=min(ny-1,kk+511)-29; k=k+30) {...",shape=box];
	ForLoop4243206 -> 4313461;
	ForLoop4243206 -> _JOIN_4243206;
	4305028 [label="4305028  double scv_343;...",shape=box];
	4238842 [label="4238842  int k;...",shape=box];
	4238842 -> ForLoop4239876;
	ForLoop4207544 [label="ForLoop4207544  for (j=jj; j<=min(ny-1,jj+63); j=j+1) {...",shape=box];
	ForLoop4207544 -> 4251799;
	ForLoop4207544 -> _JOIN_4207544;
	ForLoop4207546 [label="ForLoop4207546  for (jj=0; jj<=ny-1; jj=jj+64) {...",shape=box];
	ForLoop4207546 -> 4206367;
	ForLoop4207546 -> _JOIN_4207546;
	4449086 [label="4449086  tmp[(i+12)]=scv_623;...",shape=box];
	ForLoop4249950 [label="ForLoop4249950  for (kt=kk; kt<=min(ny-1,kk+511)-31; kt=kt+32) {...",shape=box];
	ForLoop4249950 -> 4452251;
	ForLoop4249950 -> _JOIN_4249950;
	_JOIN_4243280 [label="_JOIN_4243280None...",shape=box];
	_JOIN_4243280 -> 4243282;
	ForLoop4244316 [label="ForLoop4244316  for (k=kt; k<=min(ny-1,kk+511)-29; k=k+30) {...",shape=box];
	ForLoop4244316 -> 4315746;
	ForLoop4244316 -> _JOIN_4244316;
	ForLoop4230996 [label="ForLoop4230996  for (k=kt; k<=min(ny-1,kk+511)-29; k=k+30) {...",shape=box];
	ForLoop4230996 -> 4288326;
	ForLoop4230996 -> _JOIN_4230996;
	ForLoop4228782 [label="ForLoop4228782  for (k=kt; k<=min(ny-1,kk+511)-29; k=k+30) {...",shape=box];
	ForLoop4228782 -> 4283765;
	ForLoop4228782 -> _JOIN_4228782;
	4244392 [label="4244392  int k;...",shape=box];
	4244392 -> ForLoop4245426;
	ForLoop4250805 [label="ForLoop4250805  for (k=kt; k<=min(ny-1,kk+511)-29; k=k+30) {...",shape=box];
	ForLoop4250805 -> 4454212;
	ForLoop4250805 -> _JOIN_4250805;
	_JOIN_4236620 [label="_JOIN_4236620None...",shape=box];
	_JOIN_4236620 -> 4236622;
	_JOIN_4238766 [label="_JOIN_4238766None...",shape=box];
	_JOIN_4238766 -> ForLoop4238840;
	_JOIN_4237656 [label="_JOIN_4237656None...",shape=box];
	_JOIN_4237656 -> ForLoop4237730;
	ForLoop4248978 [label="ForLoop4248978  for (jj=0; jj<=ny-1; jj=jj+64) {...",shape=box];
	ForLoop4248978 -> 4248934;
	ForLoop4248978 -> _JOIN_4248978;
	4462286 [label="4462286  tmp[i]=scv_705;...",shape=box];
	4462286 -> _JOIN_4250879;
	_JOIN_4243206 [label="_JOIN_4243206None...",shape=box];
	_JOIN_4243206 -> ForLoop4243280;
	4280652 [label="4280652  double scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8, scv_9;...",shape=box];
	4298173 [label="4298173  double scv_250;...",shape=box];
	ForLoop4232180 [label="ForLoop4232180  for (k=(min(ny-1,kk+511))-(((min(ny-1,kk+511))-(kt)+1)%30)+1; k<=min(ny-1,kk+511); k=k+1) {...",shape=box];
	ForLoop4232180 -> 4291318;
	ForLoop4232180 -> _JOIN_4232180;
	ForLoop4250882 [label="ForLoop4250882  for (iii=0; iii<=nx-1; iii=iii+512) {...",shape=box];
	ForLoop4250882 -> ForLoop4250881;
	ForLoop4250882 -> _JOIN_4250882;
	4251799 [label="4251799  double scv_1;...",shape=box];
	ForLoop4248976 [label="ForLoop4248976  for (j=jj; j<=min(ny-1,jj+63); j=j+1) {...",shape=box];
	ForLoop4248976 -> 4248975;
	ForLoop4248976 -> _JOIN_4248976;
	4235512 [label="4235512  int k;...",shape=box];
	4235512 -> ForLoop4236546;
	ForLoop4240986 [label="ForLoop4240986  for (k=kt; k<=min(ny-1,kk+511)-29; k=k+30) {...",shape=box];
	ForLoop4240986 -> 4308891;
	ForLoop4240986 -> _JOIN_4240986;
	4325593 [label="4325593  double scv_622;...",shape=box];
	4291318 [label="4291318  double scv_157;...",shape=box];
	4231072 [label="4231072  int k;...",shape=box];
	4231072 -> ForLoop4232106;
	4309598 [label="4309598  double scv_405;...",shape=box];
	4322601 [label="4322601  double scv_561, scv_562, scv_563, scv_564, scv_565, scv_566, scv_567, scv_568;...",shape=box];
	_JOIN_4227927 [label="_JOIN_4227927None...",shape=box];
	_JOIN_4227927 -> 4227928;
	_JOIN_4250805 [label="_JOIN_4250805None...",shape=box];
	_JOIN_4250805 -> ForLoop4250873;
	ForLoop4238766 [label="ForLoop4238766  for (k=kt; k<=min(ny-1,kk+511)-29; k=k+30) {...",shape=box];
	ForLoop4238766 -> 4304321;
	ForLoop4238766 -> _JOIN_4238766;
	ForLoop4246610 [label="ForLoop4246610  for (k=(min(ny-1,kk+511))-(((min(ny-1,kk+511))-(kt)+1)%30)+1; k<=min(ny-1,kk+511); k=k+1) {...",shape=box];
	ForLoop4246610 -> 4321023;
	ForLoop4246610 -> _JOIN_4246610;
	4206135 [label="4206135  int i;...",shape=box];
	4206135 -> ForLoop4248837;
	4246612 [label="4246612  int k;...",shape=box];
	4246612 -> ForLoop4247646;
	4311883 [label="4311883  double scv_436;...",shape=box];
	ForLoop4242170 [label="ForLoop4242170  for (k=(min(ny-1,kk+511))-(((min(ny-1,kk+511))-(kt)+1)%30)+1; k<=min(ny-1,kk+511); k=k+1) {...",shape=box];
	ForLoop4242170 -> 4311883;
	ForLoop4242170 -> _JOIN_4242170;
	ForLoop4245426 [label="ForLoop4245426  for (k=kt; k<=min(ny-1,kk+511)-29; k=k+30) {...",shape=box];
	ForLoop4245426 -> 4318031;
	ForLoop4245426 -> _JOIN_4245426;
	_JOIN_4235510 [label="_JOIN_4235510None...",shape=box];
	_JOIN_4235510 -> 4235512;
	ForLoop4243280 [label="ForLoop4243280  for (k=(min(ny-1,kk+511))-(((min(ny-1,kk+511))-(kt)+1)%30)+1; k<=min(ny-1,kk+511); k=k+1) {...",shape=box];
	ForLoop4243280 -> 4314168;
	ForLoop4243280 -> _JOIN_4243280;
	_JOIN_4237730 [label="_JOIN_4237730None...",shape=box];
	_JOIN_4237730 -> 4237732;
	4286041 [label="4286041  double scv_65, scv_66, scv_67, scv_68, scv_69, scv_70, scv_71, scv_72;...",shape=box];
	4239952 [label="4239952  int k;...",shape=box];
	4239952 -> ForLoop4240986;
	ForLoop3957632 [label="ForLoop3957632  for (i=ny-((ny-(0))%13); i<=ny-1; i=i+1) ...",shape=box];
	ForLoop3957632 -> 3957631;
	ForLoop3957632 -> _JOIN_3957632;
	_JOIN_3957563 [label="_JOIN_3957563None...",shape=box];
	_JOIN_3957563 -> ForLoop3957632;
	4321023 [label="4321023  double scv_560;...",shape=box];
	4295181 [label="4295181  double scv_189, scv_190, scv_191, scv_192, scv_193, scv_194, scv_195, scv_196;...",shape=box];
	_JOIN_4228782 [label="_JOIN_4228782None...",shape=box];
	_JOIN_4228782 -> ForLoop4228850;
	_JOIN_4232180 [label="_JOIN_4232180None...",shape=box];
	_JOIN_4232180 -> 4232182;
	ForLoop4235436 [label="ForLoop4235436  for (k=kt; k<=min(ny-1,kk+511)-29; k=k+30) {...",shape=box];
	ForLoop4235436 -> 4297466;
	ForLoop4235436 -> _JOIN_4235436;
	4314168 [label="4314168  double scv_467;...",shape=box];
	4242172 [label="4242172  int k;...",shape=box];
	4242172 -> ForLoop4243206;
	_JOIN_4244316 [label="_JOIN_4244316None...",shape=box];
	_JOIN_4244316 -> ForLoop4244390;
	4234402 [label="4234402  int k;...",shape=box];
	4234402 -> ForLoop4235436;
	_JOIN_4229886 [label="_JOIN_4229886None...",shape=box];
	_JOIN_4229886 -> ForLoop4229960;
	4318031 [label="4318031  double scv_499, scv_500, scv_501, scv_502, scv_503, scv_504, scv_505, scv_506;...",shape=box];
	3957631 [label="3957631  y[i]=0.0;...",shape=box];
	3957631 -> _JOIN_3957632;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 3957216;
	_JOIN_4246536 [label="_JOIN_4246536None...",shape=box];
	_JOIN_4246536 -> ForLoop4246610;
	4318738 [label="4318738  double scv_529;...",shape=box];
	4304321 [label="4304321  double scv_313, scv_314, scv_315, scv_316, scv_317, scv_318, scv_319, scv_320;...",shape=box];
	4206102 [label="4206102  double x_copy[64];...",shape=box];
	4299751 [label="4299751  double scv_251, scv_252, scv_253, scv_254, scv_255, scv_256, scv_257, scv_258;...",shape=box];
	4462274 [label="4462274  double scv_705;...",shape=box];
	_JOIN_4229960 [label="_JOIN_4229960None...",shape=box];
	_JOIN_4229960 -> 4229962;
	4243282 [label="4243282  int k;...",shape=box];
	4243282 -> ForLoop4244316;
	4300458 [label="4300458  double scv_281;...",shape=box];
	_JOIN_3957632 [label="_JOIN_3957632None...",shape=box];
	_JOIN_3957632 -> 4206102;
	4293603 [label="4293603  double scv_188;...",shape=box];
	ForLoop4250879 [label="ForLoop4250879  for (i=(min(nx-1,ii+15))-(((min(nx-1,ii+15))-(ii)+1)%19)+1; i<=min(nx-1,ii+15); i=i+1) {...",shape=box];
	ForLoop4250879 -> 4462274;
	ForLoop4250879 -> _JOIN_4250879;
	_JOIN_4233290 [label="_JOIN_4233290None...",shape=box];
	_JOIN_4233290 -> 4233292;
	4297466 [label="4297466  double scv_220, scv_221, scv_222, scv_223, scv_224, scv_225, scv_226, scv_227;...",shape=box];
	4248934 [label="4248934  for (j=jj; j<=min(ny-1,jj+63); j=j+1) ...",shape=box];
	4248934 -> ForLoop4248976;
	ForLoop4250873 [label="ForLoop4250873  for (k=(min(ny-1,kk+511))-(((min(ny-1,kk+511))-(kt)+1)%30)+1; k<=min(ny-1,kk+511); k=k+1) {...",shape=box];
	ForLoop4250873 -> 4454910;
	ForLoop4250873 -> _JOIN_4250873;
	4295888 [label="4295888  double scv_219;...",shape=box];
	ForLoop4250877 [label="ForLoop4250877  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop4250877 -> ForLoop4250876;
	ForLoop4250877 -> _JOIN_4250877;
	ForLoop4250876 [label="ForLoop4250876  for (kk=kkk; kk<=min(ny-1,kkk+512); kk=kk+512) {...",shape=box];
	ForLoop4250876 -> ForLoop4249950;
	ForLoop4250876 -> _JOIN_4250876;
	_JOIN_4247646 [label="_JOIN_4247646None...",shape=box];
	_JOIN_4247646 -> ForLoop4247720;
	ForLoop4234326 [label="ForLoop4234326  for (k=kt; k<=min(ny-1,kk+511)-29; k=k+30) {...",shape=box];
	ForLoop4234326 -> 4295181;
	ForLoop4234326 -> _JOIN_4234326;
	_JOIN_4242096 [label="_JOIN_4242096None...",shape=box];
	_JOIN_4242096 -> ForLoop4242170;
	ForLoop4246536 [label="ForLoop4246536  for (k=kt; k<=min(ny-1,kk+511)-29; k=k+30) {...",shape=box];
	ForLoop4246536 -> 4320316;
	ForLoop4246536 -> _JOIN_4246536;
	ForLoop4239876 [label="ForLoop4239876  for (k=kt; k<=min(ny-1,kk+511)-29; k=k+30) {...",shape=box];
	ForLoop4239876 -> 4306606;
	ForLoop4239876 -> _JOIN_4239876;
	_JOIN_4232106 [label="_JOIN_4232106None...",shape=box];
	_JOIN_4232106 -> ForLoop4232180;
	ForLoop4236620 [label="ForLoop4236620  for (k=(min(ny-1,kk+511))-(((min(ny-1,kk+511))-(kt)+1)%30)+1; k<=min(ny-1,kk+511); k=k+1) {...",shape=box];
	ForLoop4236620 -> 4300458;
	ForLoop4236620 -> _JOIN_4236620;
	_JOIN_4230996 [label="_JOIN_4230996None...",shape=box];
	_JOIN_4230996 -> ForLoop4231070;
	ForLoop4229886 [label="ForLoop4229886  for (k=kt; k<=min(ny-1,kk+511)-29; k=k+30) {...",shape=box];
	ForLoop4229886 -> 4286041;
	ForLoop4229886 -> _JOIN_4229886;
	4241062 [label="4241062  int k;...",shape=box];
	4241062 -> ForLoop4242096;
	_JOIN_4250881 [label="_JOIN_4250881None...",shape=box];
	_JOIN_4250881 -> _JOIN_4250882;
	_JOIN_4250882 [label="_JOIN_4250882None...",shape=box];
	ForLoop3957563 [label="ForLoop3957563  for (i=0; i<=ny-13; i=i+13) {...",shape=box];
	ForLoop3957563 -> 3957453;
	ForLoop3957563 -> _JOIN_3957563;
	ForLoop4231070 [label="ForLoop4231070  for (k=(min(ny-1,kk+511))-(((min(ny-1,kk+511))-(kt)+1)%30)+1; k<=min(ny-1,kk+511); k=k+1) {...",shape=box];
	ForLoop4231070 -> 4289033;
	ForLoop4231070 -> _JOIN_4231070;
	4454212 [label="4454212  double scv_674, scv_675, scv_676, scv_677, scv_678, scv_679, scv_680, scv_681;...",shape=box];
	ForLoop4239950 [label="ForLoop4239950  for (k=(min(ny-1,kk+511))-(((min(ny-1,kk+511))-(kt)+1)%30)+1; k<=min(ny-1,kk+511); k=k+1) {...",shape=box];
	ForLoop4239950 -> 4307313;
	ForLoop4239950 -> _JOIN_4239950;
	ForLoop4237730 [label="ForLoop4237730  for (k=(min(ny-1,kk+511))-(((min(ny-1,kk+511))-(kt)+1)%30)+1; k<=min(ny-1,kk+511); k=k+1) {...",shape=box];
	ForLoop4237730 -> 4302743;
	ForLoop4237730 -> _JOIN_4237730;
	ForLoop4247646 [label="ForLoop4247646  for (k=kt; k<=min(ny-1,kk+511)-29; k=k+30) {...",shape=box];
	ForLoop4247646 -> 4322601;
	ForLoop4247646 -> _JOIN_4247646;
	4206367 [label="4206367  for (j=jj; j<=min(ny-1,jj+63); j=j+1) ...",shape=box];
	4302036 [label="4302036  double scv_282, scv_283, scv_284, scv_285, scv_286, scv_287, scv_288, scv_289;...",shape=box];
	_JOIN_4244390 [label="_JOIN_4244390None...",shape=box];
	_JOIN_4244390 -> 4244392;
	4320316 [label="4320316  double scv_530, scv_531, scv_532, scv_533, scv_534, scv_535, scv_536, scv_537;...",shape=box];
	4227928 [label="4227928  int k;...",shape=box];
	4227928 -> ForLoop4228782;
	3957453 [label="3957453  y[i]=0.0;...",shape=box];
	_JOIN_4238840 [label="_JOIN_4238840None...",shape=box];
	_JOIN_4238840 -> 4238842;
	4292896 [label="4292896  double scv_158, scv_159, scv_160, scv_161, scv_162, scv_163, scv_164, scv_165;...",shape=box];
	4245502 [label="4245502  int k;...",shape=box];
	4245502 -> ForLoop4246536;
	ForLoop4248835 [label="ForLoop4248835  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop4248835 -> ForLoop4248833;
	ForLoop4248835 -> _JOIN_4248835;
	ForLoop4248837 [label="ForLoop4248837  for (i=ii; i<=min(nx-1,ii+15)-18; i=i+19) {...",shape=box];
	ForLoop4248837 -> 4449068;
	ForLoop4248837 -> _JOIN_4248837;
	ForLoop4248830 [label="ForLoop4248830  for (k=(min(ny-1,kk+511))-(((min(ny-1,kk+511))-(kt)expected=9369846271501.798828
actual=9369846271501.798828
+1)%30)+1; k<=min(ny-1,kk+511); k=k+1) {...",shape=box];
	ForLoop4248830 -> 4325593;
	ForLoop4248830 -> _JOIN_4248830;
	ForLoop4248833 [label="ForLoop4248833  for (kk=kkk; kk<=min(ny-1,kkk+512); kk=kk+512) {...",shape=box];
	ForLoop4248833 -> ForLoop4227927;
	ForLoop4248833 -> _JOIN_4248833;
	_JOIN_4233216 [label="_JOIN_4233216None...",shape=box];
	_JOIN_4233216 -> ForLoop4233290;
	_JOIN_4239876 [label="_JOIN_4239876None...",shape=box];
	_JOIN_4239876 -> ForLoop4239950;
	_JOIN_4248833 [label="_JOIN_4248833None...",shape=box];
	_JOIN_4248833 -> _JOIN_4248835;
	4283765 [label="4283765  double scv_34, scv_35, scv_36, scv_37, scv_38, scv_39, scv_40, scv_41;...",shape=box];
	4313461 [label="4313461  double scv_437, scv_438, scv_439, scv_440, scv_441, scv_442, scv_443, scv_444;...",shape=box];
	ForLoop4236546 [label="ForLoop4236546  for (k=kt; k<=min(ny-1,kk+511)-29; k=k+30) {...",shape=box];
	ForLoop4236546 -> 4299751;
	ForLoop4236546 -> _JOIN_4236546;
	_JOIN_4240986 [label="_JOIN_4240986None...",shape=box];
	_JOIN_4240986 -> ForLoop4241060;
	ForLoop4228850 [label="ForLoop4228850  for (k=(min(ny-1,kk+511))-(((min(ny-1,kk+511))-(kt)+1)%30)+1; k<=min(ny-1,kk+511); k=k+1) {...",shape=box];
	ForLoop4228850 -> 4284463;
	ForLoop4228850 -> _JOIN_4228850;
	4311176 [label="4311176  double scv_406, scv_407, scv_408, scv_409, scv_410, scv_411, scv_412, scv_413;...",shape=box];
	4316453 [label="4316453  double scv_498;...",shape=box];
	_JOIN_4248756 [label="_JOIN_4248756None...",shape=box];
	_JOIN_4248756 -> ForLoop4248830;
	_JOIN_4250879 [label="_JOIN_4250879None...",shape=box];
	_JOIN_4250879 -> _JOIN_4250881;
	_JOIN_4242170 [label="_JOIN_4242170None...",shape=box];
	_JOIN_4242170 -> 4242172;
	_JOIN_4248830 [label="_JOIN_4248830None...",shape=box];
	_JOIN_4248830 -> _JOIN_4248833;
	_JOIN_4250877 [label="_JOIN_4250877None...",shape=box];
	_JOIN_4250877 -> 4462286;
	_JOIN_4250876 [label="_JOIN_4250876None...",shape=box];
	_JOIN_4250876 -> _JOIN_4250877;
	_JOIN_4228850 [label="_JOIN_4228850None...",shape=box];
	_JOIN_4228850 -> 4228852;
	_JOIN_4250873 [label="_JOIN_4250873None...",shape=box];
	_JOIN_4250873 -> _JOIN_4250876;
	4228852 [label="4228852  int k;...",shape=box];
	4228852 -> ForLoop4229886;
	ForLoop4245500 [label="ForLoop4245500  for (k=(min(ny-1,kk+511))-(((min(ny-1,kk+511))-(kt)+1)%30)+1; k<=min(ny-1,kk+511); k=k+1) {...",shape=box];
	ForLoop4245500 -> 4318738;
	ForLoop4245500 -> _JOIN_4245500;
	4284463 [label="4284463  double scv_64;...",shape=box];
	4308891 [label="4308891  double scv_375, scv_376, scv_377, scv_378, scv_379, scv_380, scv_381, scv_382;...",shape=box];
	4237732 [label="4237732  int k;...",shape=box];
	4237732 -> ForLoop4238766;
	4306606 [label="4306606  double scv_344, scv_345, scv_346, scv_347, scv_348, scv_349, scv_350, scv_351;...",shape=box];
	_JOIN_4248978 [label="_JOIN_4248978None...",shape=box];
	_JOIN_4248978 -> ForLoop4250877;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest16.exe __orio_perftest16.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest16.exe  
{'[1, 3, 6, 4, 0, 5, 1, 0, 12, 18, 0, 29, 0, 0, 2, 1, 0, 0]' : 0.147345}
{'[1, 3, 6, 4, 0, 5, 1, 0, 12, 18, 0, 29, 0, 0, 2, 1, 0, 0]' : 0.148091}
{'[1, 3, 6, 4, 0, 5, 1, 0, 12, 18, 0, 29, 0, 0, 2, 1, 0, 0]' : 0.14718}
{'[1, 3, 6, 4, 0, 5, 1, 0, 12, 18, 0, 29, 0, 0, 2, 1, 0, 0]' : 0.147228}
{'[1, 3, 6, 4, 0, 5, 1, 0, 12, 18, 0, 29, 0, 0, 2, 1, 0, 0]' : 0.147114}
{'[1, 3, 6, 4, 0, 5, 1, 0, 12, 18, 0, 29, 0, 0, 2, 1, 0, 0]' : 0.147483}
{'[1, 3, 6, 4, 0, 5, 1, 0, 12, 18, 0, 29, 0, 0, 2, 1, 0, 0]' : 0.147138}
{'[1, 3, 6, 4, 0, 5, 1, 0, 12, 18, 0, 29, 0, 0, 2, 1, 0, 0]' : 0.14717}
{'[1, 3, 6, 4, 0, 5, 1, 0, 12, 18, 0, 29, 0, 0, 2, 1, 0, 0]' : 0.147142}
{'[1, 3, 6, 4, 0, 5, 1, 0, 12, 18, 0, 29, 0, 0, 2, 1, 0, 0]' : 0.147296}
{'[1, 3, 6, 4, 0, 5, 1, 0, 12, 18, 0, 29, 0, 0, 2, 1, 0, 0]' : 0.147254}
{'[1, 3, 6, 4, 0, 5, 1, 0, 12, 18, 0, 29, 0, 0, 2, 1, 0, 0]' : 0.147181}
{'[1, 3, 6, 4, 0, 5, 1, 0, 12, 18, 0, 29, 0, 0, 2, 1, 0, 0]' : 0.147201}
{'[1, 3, 6, 4, 0, 5, 1, 0, 12, 18, 0, 29, 0, 0, 2, 1, 0, 0]' : 0.147189}
{'[1, 3, 6, 4, 0, 5, 1, 0, 12, 18, 0, 29, 0, 0, 2, 1, 0, 0]' : 0.147118}
{'[1, 3, 6, 4, 0, 5, 1, 0, 12, 18, 0, 29, 0, 0, 2, 1, 0, 0]' : 0.14839}
{'[1, 3, 6, 4, 0, 5, 1, 0, 12, 18, 0, 29, 0, 0, 2, 1, 0, 0]' : 0.147173}
{'[1, 3, 6, 4, 0, 5, 1, 0, 12, 18, 0, 29, 0, 0, 2, 1, 0, 0]' : 0.147061}
{'[1, 3, 6, 4, 0, 5, 1, 0, 12, 18, 0, 29, 0, 0, 2, 1, 0, 0]' : 0.147143}
{'[1, 3, 6, 4, 0, 5, 1, 0, 12, 18, 0, 29, 0, 0, 2, 1, 0, 0]' : 0.147141}
{'[1, 3, 6, 4, 0, 5, 1, 0, 12, 18, 0, 29, 0, 0, 2, 1, 0, 0]' : 0.147097}
{'[1, 3, 6, 4, 0, 5, 1, 0, 12, 18, 0, 29, 0, 0, 2, 1, 0, 0]' : 0.147327}
{'[1, 3, 6, 4, 0, 5, 1, 0, 12, 18, 0, 29, 0, 0, 2, 1, 0, 0]' : 0.147182}
{'[1, 3, 6, 4, 0, 5, 1, 0, 12, 18, 0, 29, 0, 0, 2, 1, 0, 0]' : 0.147179}
{'[1, 3, 6, 4, 0, 5, 1, 0, 12, 18, 0, 29, 0, 0, 2, 1, 0, 0]' : 0.147163}
{'[1, 3, 6, 4, 0, 5, 1, 0, 12, 18, 0, 29, 0, 0, 2, 1, 0, 0]' : 0.147239}
{'[1, 3, 6, 4, 0, 5, 1, 0, 12, 18, 0, 29, 0, 0, 2, 1, 0, 0]' : 0.147169}
{'[1, 3, 6, 4, 0, 5, 1, 0, 12, 18, 0, 29, 0, 0, 2, 1, 0, 0]' : 0.147236}
{'[1, 3, 6, 4, 0, 5, 1, 0, 12, 18, 0, 29, 0, 0, 2, 1, 0, 0]' : 0.148021}
{'[1, 3, 6, 4, 0, 5, 1, 0, 12, 18, 0, 29, 0, 0, 2, 1, 0, 0]' : 0.147177}

out:
 ["{'[1, 3, 6, 4, 0, 5, 1, 0, 12, 18, 0, 29, 0, 0, 2, 1, 0, 0]' : 0.147345}", "{'[1, 3, 6, 4, 0, 5, 1, 0, 12, 18, 0, 29, 0, 0, 2, 1, 0, 0]' : 0.148091}", "{'[1, 3, 6, 4, 0, 5, 1, 0, 12, 18, 0, 29, 0, 0, 2, 1, 0, 0]' : 0.14718}", "{'[1, 3, 6, 4, 0, 5, 1, 0, 12, 18, 0, 29, 0, 0, 2, 1, 0, 0]' : 0.147228}", "{'[1, 3, 6, 4, 0, 5, 1, 0, 12, 18, 0, 29, 0, 0, 2, 1, 0, 0]' : 0.147114}", "{'[1, 3, 6, 4, 0, 5, 1, 0, 12, 18, 0, 29, 0, 0, 2, 1, 0, 0]' : 0.147483}", "{'[1, 3, 6, 4, 0, 5, 1, 0, 12, 18, 0, 29, 0, 0, 2, 1, 0, 0]' : 0.147138}", "{'[1, 3, 6, 4, 0, 5, 1, 0, 12, 18, 0, 29, 0, 0, 2, 1, 0, 0]' : 0.14717}", "{'[1, 3, 6, 4, 0, 5, 1, 0, 12, 18, 0, 29, 0, 0, 2, 1, 0, 0]' : 0.147142}", "{'[1, 3, 6, 4, 0, 5, 1, 0, 12, 18, 0, 29, 0, 0, 2, 1, 0, 0]' : 0.147296}", "{'[1, 3, 6, 4, 0, 5, 1, 0, 12, 18, 0, 29, 0, 0, 2, 1, 0, 0]' : 0.147254}", "{'[1, 3, 6, 4, 0, 5, 1, 0, 12, 18, 0, 29, 0, 0, 2, 1, 0, 0]' : 0.147181}", "{'[1, 3, 6, 4, 0, 5, 1, 0, 12, 18, 0, 29, 0, 0, 2, 1, 0, 0]' : 0.147201}", "{'[1, 3, 6, 4, 0, 5, 1, 0, 12, 18, 0, 29, 0, 0, 2, 1, 0, 0]' : 0.147189}", "{'[1, 3, 6, 4, 0, 5, 1, 0, 12, 18, 0, 29, 0, 0, 2, 1, 0, 0]' : 0.147118}", "{'[1, 3, 6, 4, 0, 5, 1, 0, 12, 18, 0, 29, 0, 0, 2, 1, 0, 0]' : 0.14839}", "{'[1, 3, 6, 4, 0, 5, 1, 0, 12, 18, 0, 29, 0, 0, 2, 1, 0, 0]' : 0.147173}", "{'[1, 3, 6, 4, 0, 5, 1, 0, 12, 18, 0, 29, 0, 0, 2, 1, 0, 0]' : 0.147061}", "{'[1, 3, 6, 4, 0, 5, 1, 0, 12, 18, 0, 29, 0, 0, 2, 1, 0, 0]' : 0.147143}", "{'[1, 3, 6, 4, 0, 5, 1, 0, 12, 18, 0, 29, 0, 0, 2, 1, 0, 0]' : 0.147141}", "{'[1, 3, 6, 4, 0, 5, 1, 0, 12, 18, 0, 29, 0, 0, 2, 1, 0, 0]' : 0.147097}", "{'[1, 3, 6, 4, 0, 5, 1, 0, 12, 18, 0, 29, 0, 0, 2, 1, 0, 0]' : 0.147327}", "{'[1, 3, 6, 4, 0, 5, 1, 0, 12, 18, 0, 29, 0, 0, 2, 1, 0, 0]' : 0.147182}", "{'[1, 3, 6, 4, 0, 5, 1, 0, 12, 18, 0, 29, 0, 0, 2, 1, 0, 0]' : 0.147179}", "{'[1, 3, 6, 4, 0, 5, 1, 0, 12, 18, 0, 29, 0, 0, 2, 1, 0, 0]' : 0.147163}", "{'[1, 3, 6, 4, 0, 5, 1, 0, 12, 18, 0, 29, 0, 0, 2, 1, 0, 0]' : 0.147239}", "{'[1, 3, 6, 4, 0, 5, 1, 0, 12, 18, 0, 29, 0, 0, 2, 1, 0, 0]' : 0.147169}", "{'[1, 3, 6, 4, 0, 5, 1, 0, 12, 18, 0, 29, 0, 0, 2, 1, 0, 0]' : 0.147236}", "{'[1, 3, 6, 4, 0, 5, 1, 0, 12, 18, 0, 29, 0, 0, 2, 1, 0, 0]' : 0.148021}", "{'[1, 3, 6, 4, 0, 5, 1, 0, 12, 18, 0, 29, 0, 0, 2, 1, 0, 0]' : 0.147177}"]
returning from 'run': {'[1, 3, 6, 4, 0, 5, 1, 0, 12, 18, 0, 29, 0, 0, 2, 1, 0, 0]': ([0.147345, 0.148091, 0.14718, 0.147228, 0.147114, 0.147483, 0.147138, 0.14717, 0.147142, 0.147296, 0.147254, 0.147181, 0.147201, 0.147189, 0.147118, 0.14839, 0.147173, 0.147061, 0.147143, 0.147141, 0.147097, 0.147327, 0.147182, 0.147179, 0.147163, 0.147239, 0.147169, 0.147236, 0.148021, 0.147177], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.147345, 0.148091, 0.14718, 0.147228, 0.147114, 0.147483, 0.147138, 0.14717, 0.147142, 0.147296, 0.147254, 0.147181, 0.147201, 0.147189, 0.147118, 0.14839, 0.147173, 0.147061, 0.147143, 0.147141, 0.147097, 0.147327, 0.147182, 0.147179, 0.147163, 0.147239, 0.147169, 0.147236, 0.148021, 0.147177], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[1, 3, 6, 4, 0, 5, 1, 0, 12, 18, 0, 29, 0, 0, 2, 1, 0, 0]': ([0.147345, 0.148091, 0.14718, 0.147228, 0.147114, 0.147483, 0.147138, 0.14717, 0.147142, 0.147296, 0.147254, 0.147181, 0.147201, 0.147189, 0.147118, 0.14839, 0.147173, 0.147061, 0.147143, 0.147141, 0.147097, 0.147327, 0.147182, 0.147179, 0.147163, 0.147239, 0.147169, 0.147236, 0.148021, 0.147177], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [3, 1, 5, 4, 0, 0, 0, 0, 3, 25, 14, 0, 0, 2, 0, 0, 1, 1]
Fixed Factors: {}
Testing candidate 17: [3, 1, 5, 4, 0, 0, 0, 0, 3, 25, 14, 0, 0, 2, 0, 0, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	68
        Max loop nest depth: 	5
        Additions: 		9236
        Multiplications: 	2646
        Divisions: 		0
        Logical: 		0
        Reads: 			14046
        Writes: 		1579
        Comparisons:		68
        Gotos: 			0
        
digraph CFG {
	ForLoop4683334 [label="ForLoop4683334  for (j=cbv_60; j<=cbv_61; j=j+1) ...",shape=box];
	ForLoop4683334 -> 4683333;
	ForLoop4683334 -> _JOIN_4683334;
	ForLoop4685758 [label="ForLoop4685758  for (j=cbv_72; j<=cbv_73; j=j+1) ...",shape=box];
	ForLoop4685758 -> 4685757;
	ForLoop4685758 -> _JOIN_4685758;
	4816650 [label="4816650  register int cbv_36, cbv_37;...",shape=box];
	4814673 [label="4814673  register int cbv_27, cbv_28;...",shape=box];
	4820604 [label="4820604  register int cbv_54, cbv_55;...",shape=box];
	_JOIN_4687678 [label="_JOIN_4687678None...",shape=box];
	_JOIN_4687678 -> _JOIN_4687680;
	ForLoop4676668 [label="ForLoop4676668  for (j=cbv_27; j<=cbv_28; j=j+1) ...",shape=box];
	ForLoop4676668 -> 4676667;
	ForLoop4676668 -> _JOIN_4676668;
	ForLoop4686893 [label="ForLoop4686893  for (j=jt; j<=cbv_77; j=j+15) {...",shape=box];
	ForLoop4686893 -> 4686415;
	ForLoop4686893 -> _JOIN_4686893;
	4682730 [label="4682730  int j;...",shape=box];
	_JOIN_4683863 [label="_JOIN_4683863None...",shape=box];
	_JOIN_4683863 -> 4822581;
	4675507 [label="4675507  tmp[(i+7)]=tmp[(i+7)]+A[(i+7)*ny+j]*x[j];...",shape=box];
	_JOIN_4689169 [label="_JOIN_4689169None...",shape=box];
	_JOIN_4689169 -> _JOIN_4689171;
	4680303 [label="4680303  tmp[(i+14)]=tmp[(i+14)]+A[(i+14)*ny+j]*x[j];...",shape=box];
	4680303 -> _JOIN_4680304;
	4810719 [label="4810719  register int cbv_9, cbv_10;...",shape=box];
	4680306 [label="4680306  int j;...",shape=box];
	4681515 [label="4681515  tmp[(i+16)]=tmp[(i+16)]+A[(i+16)*ny+j]*x[j];...",shape=box];
	4681515 -> _JOIN_4681516;
	_JOIN_4672955 [label="_JOIN_4672955None...",shape=box];
	_JOIN_4672955 -> 4810719;
	4687844 [label="4687844  tmp[i]=tmp[i]+A[i*ny+jt]*x[jt];...",shape=box];
	_JOIN_4685075 [label="_JOIN_4685075None...",shape=box];
	_JOIN_4685075 -> 4823899;
	_JOIN_4673032 [label="_JOIN_4673032None...",shape=box];
	_JOIN_4673032 -> 4673034;
	_JOIN_4671752 [label="_JOIN_4671752None...",shape=box];
	_JOIN_4671752 -> 4809401;
	_JOIN_4674244 [label="_JOIN_4674244None...",shape=box];
	_JOIN_4674244 -> 4674246;
	_JOIN_4672426 [label="_JOIN_4672426None...",shape=box];
	_JOIN_4672426 -> 4672428;
	4824558 [label="4824558  register int cbv_72, cbv_73;...",shape=box];
	ForLoop4675985 [label="ForLoop4675985  for (j=jt; j<=cbv_23; j=j+15) {...",shape=box];
	ForLoop4675985 -> 4675507;
	ForLoop4675985 -> _JOIN_4675985;
	_JOIN_4689116 [label="_JOIN_4689116None...",shape=box];
	_JOIN_4689116 -> ForLoop4689169;
	4680912 [label="4680912  int j;...",shape=box];
	4687024 [label="4687024  y[k]=y[k]+A[i*ny+k]*tmp[i];...",shape=box];
	ForLoop4678409 [label="ForLoop4678409  for (j=jt; j<=cbv_35; j=j+15) {...",shape=box];
	ForLoop4678409 -> 4677931;
	ForLoop4678409 -> _JOIN_4678409;
	4686969 [label="4686969  tmp[(i+25)]=tmp[(i+25)]+A[(i+25)*ny+j]*x[j];...",shape=box];
	4686969 -> _JOIN_4686970;
	ForLoop4680304 [label="ForLoop4680304  for (j=cbv_45; j<=cbv_46; j=j+1) ...",shape=box];
	ForLoop4680304 -> 4680303;
	ForLoop4680304 -> _JOIN_4680304;
	_JOIN_4671359 [label="_JOIN_4671359None...",shape=box];
	_JOIN_4671359 -> 4671360;
	4674295 [label="4674295  tmp[(i+5)]=tmp[(i+5)]+A[(i+5)*ny+j]*x[j];...",shape=box];
	_JOIN_4676591 [label="_JOIN_4676591None...",shape=box];
	_JOIN_4676591 -> 4814673;
	4689167 [label="4689167  y[k]=y[k]+A[i*ny+k]*tmp[i];...",shape=box];
	4689167 -> _JOIN_4689168;
	ForLoop4679015 [label="ForLoop4679015  for (j=jt; j<=cbv_38; j=j+15) {...",shape=box];
	ForLoop4679015 -> 4678537;
	ForLoop4679015 -> _JOIN_4679015;
	_JOIN_4675456 [label="_JOIN_4675456None...",shape=box];
	_JOIN_4675456 -> 4675458;
	_JOIN_4685152 [label="_JOIN_4685152None...",shape=box];
	_JOIN_4685152 -> 4685154;
	ForLoop4683940 [label="ForLoop4683940  for (j=cbv_63; j<=cbv_64; j=j+1) ...",shape=box];
	ForLoop4683940 -> 4683939;
	ForLoop4683940 -> _JOIN_4683940;
	4683939 [label="4683939  tmp[(i+20)]=tmp[(i+20)]+A[(i+20)*ny+j]*x[j];...",shape=box];
	4683939 -> _JOIN_4683940;
	ForLoop4682728 [label="ForLoop4682728  for (j=cbv_57; j<=cbv_58; j=j+1) ...",shape=box];
	ForLoop4682728 -> 4682727;
	ForLoop4682728 -> _JOIN_4682728;
	4674852 [label="4674852  int j;...",shape=box];
	ForLoop4671359 [label="ForLoop4671359  for (jt=jj; jt<=cbv_1; jt=jt+32) {...",shape=box];
	ForLoop4671359 -> 4643507;
	ForLoop4671359 -> _JOIN_4671359;
	_JOIN_4689171 [label="_JOIN_4689171None...",shape=box];
	_JOIN_4689171 -> _JOIN_4543985;
	ForLoop4676062 [label="ForLoop4676062  for (j=cbv_24; j<=cbv_25; j=j+1) ...",shape=box];
	ForLoop4676062 -> 4676061;
	ForLoop4676062 -> _JOIN_4676062;
	4682727 [label="4682727  tmp[(i+18)]=tmp[(i+18)]+A[(i+18)*ny+j]*x[j];...",shape=box];
	4682727 -> _JOIN_4682728;
	_JOIN_4681516 [label="_JOIN_4681516None...",shape=box];
	_JOIN_4681516 -> 4681518;
	4671819 [label="4671819  tmp[i]=tmp[i]+A[i*ny+j]*x[j];...",shape=box];
	4671819 -> _JOIN_4671820;
	ForLoop4674244 [label="ForLoop4674244  for (j=cbv_15; j<=cbv_16; j=j+1) ...",shape=box];
	ForLoop4674244 -> 4674243;
	ForLoop4674244 -> _JOIN_4674244;
	4815991 [label="4815991  register int cbv_33, cbv_34;...",shape=box];
	4677325 [label="4677325  tmp[(i+10)]=tmp[(i+10)]+A[(i+10)*ny+j]*x[j];...",shape=box];
	ForLoop4679092 [label="ForLoop4679092  for (j=cbv_39; j<=cbv_40; j=j+1) ...",shape=box];
	ForLoop4679092 -> 4679091;
	ForLoop4679092 -> _JOIN_4679092;
	ForLoop4673561 [label="ForLoop4673561  for (j=jt; j<=cbv_11; j=j+15) {...",shape=box];
	ForLoop4673561 -> 4673083;
	ForLoop4673561 -> _JOIN_4673561;
	_JOIN_4687680 [label="_JOIN_4687680None...",shape=box];
	_JOIN_4687680 -> ForLoop4689171;
	4811378 [label="4811378  register int cbv_12, cbv_13;...",shape=box];
	_JOIN_4673638 [label="_JOIN_4673638None...",shape=box];
	_JOIN_4673638 -> 4673640;
	4812696 [label="4812696  register int cbv_18, cbv_19;...",shape=box];
	4683385 [label="4683385  tmp[(i+20)]=tmp[(i+20)]+A[(i+20)*ny+j]*x[j];...",shape=box];
	_JOIN_4680910 [label="_JOIN_4680910None...",shape=box];
	_JOIN_4680910 -> 4680912;
	ForLoop4689169 [label="ForLoop4689169  for (kk=0; kk<=ny-1; kk=kk+256) {...",shape=box];
	ForLoop4689169 -> 4828032;
	ForLoop4689169 -> _JOIN_4689169;
	ForLoop4689168 [label="ForLoop4689168  for (k=kk; k<=cbv_85; k=k+1) ...",shape=box];
	ForLoop4689168 -> 4689167;
	ForLoop4689168 -> _JOIN_4689168;
	4823899 [label="4823899  register int cbv_69, cbv_70;...",shape=box];
	ForLoop4671820 [label="ForLoop4671820  for (j=cbv_3; j<=cbv_4; j=j+1) ...",shape=box];
	ForLoop4671820 -> 4671819;
	ForLoop4671820 -> _JOIN_4671820;
	4686366 [label="4686366  int j;...",shape=box];
	4674901 [label="4674901  tmp[(i+6)]=tmp[(i+6)]+A[(i+6)*ny+j]*x[j];...",shape=box];
	4688653 [label="4688653  int j;...",shape=box];
	4684597 [label="4684597  tmp[(i+22)]=tmp[(i+22)]+A[(i+22)*ny+j]*x[j];...",shape=box];
	_JOIN_4682045 [label="_JOIN_4682045None...",shape=box];
	_JOIN_4682045 -> 4820604;
	_JOIN_4673561 [label="_JOIN_4673561None...",shape=box];
	_JOIN_4673561 -> 4811378;
	4680909 [label="4680909  tmp[(i+15)]=tmp[(i+15)]+A[(i+15)*ny+j]*x[j];...",shape=box];
	4680909 -> _JOIN_4680910;
	_JOIN_4678486 [label="_JOIN_4678486None...",shape=box];
	_JOIN_4678486 -> 4678488;
	4674246 [label="4674246  int j;...",shape=box];
	4679700 [label="4679700  int j;...",shape=box];
	4679749 [label="4679749  tmp[(i+14)]=tmp[(i+14)]+A[(i+14)*ny+j]*x[j];...",shape=box];
	ForLoop4677274 [label="ForLoop4677274  for (j=cbv_30; j<=cbv_31; j=j+1) ...",shape=box];
	ForLoop4677274 -> 4677273;
	ForLoop4677274 -> _JOIN_4677274;
	4821922 [label="4821922  register int cbv_60, cbv_61;...",shape=box];
	4688693 [label="4688693  tmp[i]=tmp[i]+A[i*ny+j]*x[j];...",shape=box];
	4676113 [label="4676113  tmp[(i+8)]=tmp[(i+8)]+A[(i+8)*ny+j]*x[j];...",shape=box];
	_JOIN_4680304 [label="_JOIN_4680304None...",shape=box];
	_JOIN_4680304 -> 4680306;
	_JOIN_4680227 [label="_JOIN_4680227None...",shape=box];
	_JOIN_4680227 -> 4818627;
	4673083 [label="4673083  tmp[(i+3)]=tmp[(i+3)]+A[(i+3)*ny+j]*x[j];...",shape=box];
	_JOIN_4689168 [label="_JOIN_4689168None...",shape=box];
	_JOIN_4689168 -> _JOIN_4689169;
	4686415 [label="4686415  tmp[(i+25)]=tmp[(i+25)]+A[(i+25)*ny+j]*x[j];...",shape=box];
	4685203 [label="4685203  tmp[(i+23)]=tmp[(i+23)]+A[(i+23)*ny+j]*x[j];...",shape=box];
	ForLoop4675456 [label="ForLoop4675456  for (j=cbv_21; j<=cbv_22; j=j+1) ...",shape=box];
	ForLoop4675456 -> 4675455;
	ForLoop4675456 -> _JOIN_4675456;
	4677931 [label="4677931  tmp[(i+11)]=tmp[(i+11)]+A[(i+11)*ny+j]*x[j];...",shape=box];
	_JOIN_4678409 [label="_JOIN_4678409None...",shape=box];
	_JOIN_4678409 -> 4816650;
	ForLoop4682122 [label="ForLoop4682122  for (j=cbv_54; j<=cbv_55; j=j+1) ...",shape=box];
	ForLoop4682122 -> 4682121;
	ForLoop4682122 -> _JOIN_4682122;
	4685757 [label="4685757  tmp[(i+23)]=tmp[(i+23)]+A[(i+23)*ny+j]*x[j];...",shape=box];
	4685757 -> _JOIN_4685758;
	ForLoop4682045 [label="ForLoop4682045  for (j=jt; j<=cbv_53; j=j+15) {...",shape=box];
	ForLoop4682045 -> 4681567;
	ForLoop4682045 -> _JOIN_4682045;
	4673640 [label="4673640  int j;...",shape=box];
	_JOIN_4686364 [label="_JOIN_4686364None...",shape=box];
	_JOIN_4686364 -> 4686366;
	4821263 [label="4821263  register int cbv_57, cbv_58;...",shape=box];
	4823240 [label="4823240  register int cbv_66, cbv_67;...",shape=box];
	ForLoop4672955 [label="ForLoop4672955  for (j=jt; j<=cbv_8; j=j+15) {...",shape=box];
	ForLoop4672955 -> 4672477;
	ForLoop4672955 -> _JOIN_4672955;
	4672477 [label="4672477  tmp[(i+2)]=tmp[(i+2)]+A[(i+2)*ny+j]*x[j];...",shape=box];
	_JOIN_4677880 [label="_JOIN_4677880None...",shape=box];
	_JOIN_4677880 -> 4677882;
	_JOIN_4672349 [label="_JOIN_4672349None...",shape=box];
	_JOIN_4672349 -> 4810060;
	4671360 [label="4671360  int j;...",shape=box];
	4678537 [label="4678537  tmp[(i+12)]=tmp[(i+12)]+A[(i+12)*ny+j]*x[j];...",shape=box];
	ForLoop4683257 [label="ForLoop4683257  for (j=jt; j<=cbv_59; j=j+15) {...",shape=box];
	ForLoop4683257 -> 4682779;
	ForLoop4683257 -> _JOIN_4683257;
	4825876 [label="4825876  register int cbv_78, cbv_79;...",shape=box];
	4677273 [label="4677273  tmp[(i+9)]=tmp[(i+9)]+A[(i+9)*ny+j]*x[j];...",shape=box];
	4677273 -> _JOIN_4677274;
	_JOIN_4681439 [label="_JOIN_4681439None...",shape=box];
	_JOIN_4681439 -> 4819945;
	4677276 [label="4677276  int j;...",shape=box];
	ForLoop4676591 [label="ForLoop4676591  for (j=jt; j<=cbv_26; j=j+15) {...",shape=box];
	ForLoop4676591 -> 4676113;
	ForLoop4676591 -> _JOIN_4676591;
	ForLoop4673638 [label="ForLoop4673638  for (j=cbv_12; j<=cbv_13; j=j+1) ...",shape=box];
	ForLoop4673638 -> 4673637;
	ForLoop4673638 -> _JOIN_4673638;
	ForLoop4685075 [label="ForLoop4685075  for (j=jt; j<=cbv_68; j=j+15) {...",shape=box];
	ForLoop4685075 -> 4684597;
	ForLoop4685075 -> _JOIN_4685075;
	ForLoop4674773 [label="ForLoop4674773  for (j=jt; j<=cbv_17; j=j+15) {...",shape=box];
	ForLoop4674773 -> 4674295;
	ForLoop4674773 -> _JOIN_4674773;
	4671871 [label="4671871  tmp[(i+1)]=tmp[(i+1)]+A[(i+1)*ny+j]*x[j];...",shape=box];
	4810060 [label="4810060  register int cbv_6, cbv_7;...",shape=box];
	_JOIN_4683940 [label="_JOIN_4683940None...",shape=box];
	_JOIN_4683940 -> 4683942;
	ForLoop4683863 [label="ForLoop4683863  for (j=jt; j<=cbv_62; j=j+15) {...",shape=box];
	ForLoop4683863 -> 4683385;
	ForLoop4683863 -> _JOIN_4683863;
	4689112 [label="4689112  tmp[i]=tmp[i]+A[i*ny+j]*x[j];...",shape=box];
	4689112 -> _JOIN_4689113;
	_JOIN_4674773 [label="_JOIN_4674773None...",shape=box];
	_JOIN_4674773 -> 4812696;
	4687791 [label="4687791  tmp[i]=0;...",shape=box];
	4687791 -> ForLoop4689116;
	ForLoop4681439 [label="ForLoop4681439  for (j=jt; j<=cbv_50; j=j+15) {...",shape=box];
	ForLoop4681439 -> 4680961;
	ForLoop4681439 -> _JOIN_4681439;
	4540304 [label="4540304  int i;...",shape=box];
	_JOIN_4543985 [label="_JOIN_4543985None...",shape=box];
	_JOIN_4543985 -> _JOIN_4543986;
	_JOIN_4683334 [label="_JOIN_4683334None...",shape=box];
	_JOIN_4683334 -> 4683336;
	ForLoop4689171 [label="ForLoop4689171  for (i=(min(nx-1,ii+63))-(((min(nx-1,ii+63))-(ii)+1)%26)+1; i<=min(nx-1,ii+63); i=i+1) {...",shape=box];
	ForLoop4689171 -> 4687791;
	ForLoop4689171 -> _JOIN_4689171;
	4680355 [label="4680355  tmp[(i+15)]=tmp[(i+15)]+A[(i+15)*ny+j]*x[j];...",shape=box];
	4686363 [label="4686363  tmp[(i+24)]=tmp[(i+24)]+A[(i+24)*ny+j]*x[j];...",shape=box];
	4686363 -> _JOIN_4686364;
	ForLoop4688652 [label="ForLoop4688652  for (jt=jj; jt<=cbv_81; jt=jt+32) {...",shape=box];
	ForLoop4688652 -> 4687844;
	ForLoop4688652 -> _JOIN_4688652;
	4671400 [label="4671400  tmp[i]=tmp[i]+A[i*ny+j]*x[j];...",shape=box];
	_JOIN_4675379 [label="_JOIN_4675379None...",shape=box];
	_JOIN_4675379 -> 4813355;
	4683991 [label="4683991  tmp[(i+21)]=tmp[(i+21)]+A[(i+21)*ny+j]*x[j];...",shape=box];
	_JOIN_4679698 [label="_JOIN_4679698None...",shape=box];
	_JOIN_4679698 -> 4679700;
	_JOIN_4674167 [label="_JOIN_4674167None...",shape=box];
	_JOIN_4674167 -> 4812037;
	4677879 [label="4677879  tmp[(i+10)]=tmp[(i+10)]+A[(i+10)*ny+j]*x[j];...",shape=box];
	4677879 -> _JOIN_4677880;
	_JOIN_4679092 [label="_JOIN_4679092None...",shape=box];
	_JOIN_4679092 -> 4679094;
	_JOIN_4677803 [label="_JOIN_4677803None...",shape=box];
	_JOIN_4677803 -> 4815991;
	4827467 [label="4827467  register int cbv_81;...",shape=box];
	4674849 [label="4674849  tmp[(i+5)]=tmp[(i+5)]+A[(i+5)*ny+j]*x[j];...",shape=box];
	4674849 -> _JOIN_4674850;
	4822581 [label="4822581  register int cbv_63, cbv_64;...",shape=box];
	ForLoop4682651 [label="ForLoop4682651  for (j=jt; j<=cbv_56; j=j+15) {...",shape=box];
	ForLoop4682651 -> 4682173;
	ForLoop4682651 -> _JOIN_4682651;
	ForLoop4684469 [label="ForLoop4684469  for (j=jt; j<=cbv_65; j=j+15) {...",shape=box];
	ForLoop4684469 -> 4683991;
	ForLoop4684469 -> _JOIN_4684469;
	_JOIN_4676668 [label="_JOIN_4676668None...",shape=box];
	_JOIN_4676668 -> 4676670;
	4677882 [label="4677882  int j;...",shape=box];
	_JOIN_4677197 [label="_JOIN_4677197None...",shape=box];
	_JOIN_4677197 -> 4815332;
	4825217 [label="4825217  register int cbv_75, cbv_76;...",shape=box];
	ForLoop4675379 [label="ForLoop4675379  for (j=jt; j<=cbv_20; j=j+15) {...",shape=box];
	ForLoop4675379 -> 4674901;
	ForLoop4675379 -> _JOIN_4675379;
	4685760 [label="4685760  int j;...",shape=box];
	_JOIN_4540504 [label="_JOIN_4540504None...",shape=box];
	_JOIN_4540504 -> 4547641;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 4540304;
	4827949 [label="4827949  register int cbv_83, cbv_84;...",shape=box];
	ForLoop4674167 [label="ForLoop4674167  for (j=jt; j<=cbv_14; j=j+15) {...",shape=box];
	ForLoop4674167 -> 4673689;
	ForLoop4674167 -> _JOIN_4674167;
	4817309 [label="4817309  register int cbv_39, cbv_40;...",shape=box];
	_JOIN_4686893 [label="_JOIN_4686893None...",shape=box];
	_JOIN_4686893 -> 4825876;
	ForLoop4685681 [label="ForLoop4685681  for (j=jt; j<=cbv_71; j=j+15) {...",shape=box];
	ForLoop4685681 -> 4685203;
	ForLoop4685681 -> _JOIN_4685681;
	4682779 [label="4682779  tmp[(i+19)]=tmp[(i+19)]+A[(i+19)*ny+j]*x[j];...",shape=box];
	_JOIN_4540435 [label="_JOIN_4540435None...",shape=box];
	_JOIN_4540435 -> 4540581;
	4679697 [label="4679697  tmp[(i+13)]=tmp[(i+13)]+A[(i+13)*ny+j]*x[j];...",shape=box];
	4679697 -> _JOIN_4679698;
	_JOIN_4676062 [label="_JOIN_4676062None...",shape=box];
	_JOIN_4676062 -> 4676064;
	ForLoop4672349 [label="ForLoop4672349  for (j=jt; j<=cbv_5; j=j+15) {...",shape=box];
	ForLoop4672349 -> 4671871;
	ForLoop4672349 -> _JOIN_4672349;
	4676719 [label="4676719  tmp[(i+9)]=tmp[(i+9)]+A[(i+9)*ny+j]*x[j];...",shape=box];
	4682124 [label="4682124  int j;...",shape=box];
	4682121 [label="4682121  tmp[(i+17)]=tmp[(i+17)]+A[(i+17)*ny+j]*x[j];...",shape=box];
	4682121 -> _JOIN_4682122;
	ForLoop4680227 [label="ForLoop4680227  for (j=jt; j<=cbv_44; j=j+15) {...",shape=box];
	ForLoop4680227 -> 4679749;
	ForLoop4680227 -> _JOIN_4680227;
	4683336 [label="4683336  int j;...",shape=box];
	4818627 [label="4818627  register int cbv_45, cbv_46;...",shape=box];
	_JOIN_4679621 [label="_JOIN_4679621None...",shape=box];
	_JOIN_4679621 -> 4817968;
	4683333 [label="4683333  tmp[(i+19)]=tmp[(i+19)]+A[(i+19)*ny+j]*x[j];...",shape=box];
	4683333 -> _JOIN_4683334;
	ForLoop4680833 [label="ForLoop4680833  for (j=jt; j<=cbv_47; j=j+15) {...",shape=box];
	ForLoop4680833 -> 4680355;
	ForLoop4680833 -> _JOIN_4680833;
	4643507 [label="4643507  tmp[i]=tmp[i]+A[i*ny+jt]*x[jt];...",shape=box];
	ForLoop4687678 [label="ForLoop4687678  for (kk=0; kk<=ny-1; kk=kk+256) {...",shape=box];
	ForLoop4687678 -> 4826610;
	ForLoop4687678 -> _JOIN_4687678;
	ForLoop4540435 [label="ForLoop4540435  for (i=0; i<=cbv_1; i=i+4) {...",shape=box];
	ForLoop4540435 -> 4540406;
	ForLoop4540435 -> _JOIN_4540435;
	4679091 [label="4679091  tmp[(i+12)]=tmp[(i+12)]+A[(i+12)*ny+j]*x[j];...",shape=box];
	4679091 -> _JOIN_4679092;
	4673689 [label="4673689  tmp[(i+4)]=tmp[(i+4)]+A[(i+4)*ny+j]*x[j];...",shape=box];
	4676064 [label="4676064  int j;...",shape=box];
	4679094 [label="4679094  int j;...",shape=box];
	4547641 [label="4547641  double x_copy;...",shape=box];
	ForLoop4685152 [label="ForLoop4685152  for (j=cbv_69; j<=cbv_70; j=j+1) ...",shape=box];
	ForLoop4685152 -> 4685151;
	ForLoop4685152 -> _JOIN_4685152;
	4676061 [label="4676061  tmp[(i+7)]=tmp[(i+7)]+A[(i+7)*ny+j]*x[j];...",shape=box];
	4676061 -> _JOIN_4676062;
	ForLoop4677803 [label="ForLoop4677803  for (j=jt; j<=cbv_32; j=j+15) {...",shape=box];
	ForLoop4677803 -> 4677325;
	ForLoop4677803 -> _JOIN_4677803;
	4684545 [label="4684545  tmp[(i+21)]=tmp[(i+21)]+A[(i+21)*ny+j]*x[j];...",shape=box];
	4684545 -> _JOIN_4684546;
	_JOIN_4686970 [label="_JOIN_4686970None...",shape=box];
	_JOIN_4686970 -> _JOIN_4686973;
	_JOIN_4677274 [label="_JOIN_4677274None...",shape=box];
	_JOIN_4677274 -> 4677276;
	4681567 [label="4681567  tmp[(i+17)]=tmp[(i+17)]+A[(i+17)*ny+j]*x[j];...",shape=box];
	4676670 [label="4676670  int j;...",shape=box];
	4684548 [label="4684548  int j;...",shape=box];
	ForLoop4674850 [label="ForLoop4674850  for (j=cbv_18; j<=cbv_19; j=j+1) ...",shape=box];
	ForLoop4674850 -> 4674849;
	ForLoop4674850 -> _JOIN_4674850;
	ForLoop4689045 [label="ForLoop4689045  for (j=jt; j<=cbv_82; j=j+15) {...",shape=box];
	ForLoop4689045 -> 4688693;
	ForLoop4689045 -> _JOIN_4689045;
	_JOIN_4688652 [label="_JOIN_4688652None...",shape=box];
	_JOIN_4688652 -> 4688653;
	ForLoop4543985 [label="ForLoop4543985  for (ii=iii; ii<=min(nx-1,iii+448); ii=ii+64) {...",shape=box];
	ForLoop4543985 -> 4570556;
	ForLoop4543985 -> _JOIN_4543985;
	ForLoop4543986 [label="ForLoop4543986  for (iii=0; iii<=nx-1; iii=iii+512) ...",shape=box];
	ForLoop4543986 -> ForLoop4543985;
	ForLoop4543986 -> _JOIN_4543986;
	ForLoop4677880 [label="ForLoop4677880  for (j=cbv_33; j<=cbv_34; j=j+1) ...",shape=box];
	ForLoop4677880 -> 4677879;
	ForLoop4677880 -> _JOIN_4677880;
	ForLoop4689116 [label="ForLoop4689116  for (jj=0; jj<=ny-1; jj=jj+16) {...",shape=box];
	ForLoop4689116 -> 4827467;
	ForLoop4689116 -> _JOIN_4689116;
	4674243 [label="4674243  tmp[(i+4)]=tmp[(i+4)]+A[(i+4)*ny+j]*x[j];...",shape=box];
	4674243 -> _JOIN_4674244;
	ForLoop4540504 [label="ForLoop4540504  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop4540504 -> 4540503;
	ForLoop4540504 -> _JOIN_4540504;
	ForLoop4686364 [label="ForLoop4686364  for (j=cbv_75; j<=cbv_76; j=j+1) ...",shape=box];
	ForLoop4686364 -> 4686363;
	ForLoop4686364 -> _JOIN_4686364;
	ForLoop4681516 [label="ForLoop4681516  for (j=cbv_51; j<=cbv_52; j=j+1) ...",shape=box];
	ForLoop4681516 -> 4681515;
	ForLoop4681516 -> _JOIN_4681516;
	ForLoop4679621 [label="ForLoop4679621  for (j=jt; j<=cbv_41; j=j+15) {...",shape=box];
	ForLoop4679621 -> 4679143;
	ForLoop4679621 -> _JOIN_4679621;
	4540406 [label="4540406  y[i]=0.0;...",shape=box];
	4673637 [label="4673637  tmp[(i+3)]=tmp[(i+3)]+A[(i+3)*ny+j]*x[j];...",shape=box];
	4673637 -> _JOIN_4673638;
	_JOIN_4543986 [label="_JOIN_4543986None...",shape=box];
	ForLoop4677197 [label="ForLoop4677197  for (j=jt; j<=cbv_29; j=j+15) {...",shape=box];
	ForLoop4677197 -> 4676719;
	ForLoop4677197 -> _JOIN_4677197;
	_JOIN_4687676 [label="_JOIN_4687676None...",shape=box];
	_JOIN_4687676 -> _JOIN_4687678;
	4826610 [label="4826610  register int cbv_80;...",shape=box];
	ForLoop4686287 [label="ForLoop4686287  for (j=jt; j<=cbv_74; j=j+15) {...",shape=box];
	ForLoop4686287 -> 4685809;
	ForLoop4686287 -> _JOIN_4686287;
	ForLoop4687680 [label="ForLoop4687680  for (i=ii; i<=min(nx-1,ii+63)-25; i=i+26) {...",shape=box];
	ForLoop4687680 -> 4643229;
	ForLoop4687680 -> _JOIN_4687680;
	ForLoop4686973 [label="ForLoop4686973  for (jj=0; jj<=ny-1; jj=jj+16) {...",shape=box];
	ForLoop4686973 -> 4808919;
	ForLoop4686973 -> _JOIN_4686973;
	4540581 [label="4540581  register int cbv_2, cbv_3;...",shape=box];
	ForLoop4686970 [label="ForLoop4686970  for (j=cbv_78; j<=cbv_79; j=j+1) ...",shape=box];
	ForLoop4686970 -> 4686969;
	ForLoop4686970 -> _JOIN_4686970;
	4809401 [label="4809401  register int cbv_3, cbv_4;...",shape=box];
	_JOIN_4682728 [label="_JOIN_4682728None...",shape=box];
	_JOIN_4682728 -> 4682730;
	4671822 [label="4671822  int j;...",shape=box];
	4681518 [label="4681518  int j;...",shape=box];
	ForLoop4689113 [label="ForLoop4689113  for (j=cbv_83; j<=cbv_84; j=j+1) ...",shape=box];
	ForLoop4689113 -> 4689112;
	ForLoop4689113 -> _JOIN_4689113;
	4685154 [label="4685154  int j;...",shape=box];
	ForLoop4679698 [label="ForLoop4679698  for (j=cbv_42; j<=cbv_43; j=j+1) ...",shape=box];
	ForLoop4679698 -> 4679697;
	ForLoop4679698 -> _JOIN_4679698;
	_JOIN_4671820 [label="_JOIN_4671820None...",shape=box];
	_JOIN_4671820 -> 4671822;
	4685151 [label="4685151  tmp[(i+22)]=tmp[(i+22)]+A[(i+22)*ny+j]*x[j];...",shape=box];
	4685151 -> _JOIN_4685152;
	_JOIN_4682122 [label="_JOIN_4682122None...",shape=box];
	_JOIN_4682122 -> 4682124;
	4676667 [label="4676667  tmp[(i+8)]=tmp[(i+8)]+A[(i+8)*ny+j]*x[j];...",shape=box];
	4676667 -> _JOIN_4676668;
	4683942 [label="4683942  int j;...",shape=box];
	_JOIN_4686287 [label="_JOIN_4686287None...",shape=box];
	_JOIN_4686287 -> 4825217;
	4679143 [label="4679143  tmp[(i+13)]=tmp[(i+13)]+A[(i+13)*ny+j]*x[j];...",shape=box];
	ForLoop4680910 [label="ForLoop4680910  for (j=cbv_48; j<=cbv_49; j=j+1) ...",shape=box];
	ForLoop4680910 -> 4680909;
	ForLoop4680910 -> _JOIN_4680910;
	ForLoop4671752 [label="ForLoop4671752  for (j=jt; j<=cbv_2; j=j+15) {...",shape=box];
	ForLoop4671752 -> 4671400;
	ForLoop4671752 -> _JOIN_4671752;
	4673034 [label="4673034  int j;...",shape=box];
	4673031 [label="4673031  tmp[(i+2)]=tmp[(i+2)]+A[(i+2)*ny+j]*x[j];...",shape=box];
	4673031 -> _JOIN_4673032;
	4643229 [label="4643229  tmp[i]=0;...",shape=box];
	_JOIN_4684469 [label="_JOIN_4684469None...",shape=box];
	_JOIN_4684469 -> 4823240;
	4685809 [label="4685809  tmp[(i+24)]=tmp[(i+24)]+A[(i+24)*ny+j]*x[j];...",shape=box];
	ForLoop4673032 [label="ForLoop4673032  for (j=cbv_9; j<=cbv_10; j=j+1) ...",shape=box];
	ForLoop4673032 -> 4673031;
	ForLoop4673032 -> _JOIN_4673032;
	_JOIN_4683257 [label="_JOIN_4683257None...",shape=box];
	_JOIN_4683257 -> 4821922;
	_JOIN_4685758 [label="_JOIN_4685758None...",shape=box];
	_JOIN_4685758 -> 4685760;
	4819286 [label="4819286  register int cbv_48, cbv_49;...",shape=box];
	_JOIN_4675985 [label="_JOIN_4675985None...",shape=box];
	_JOIN_4675985 -> 4814014;
	4817968 [label="4817968  register int cbv_42, cbv_43;...",shape=box];
	4813355 [label="4813355  register int cbv_21,expected=9369846271501.798828
actual=9369846271501.798828
 cbv_22;...",shape=box];
	ForLoop4687676 [label="ForLoop4687676  for (k=kk; k<=cbv_80; k=k+1) {...",shape=box];
	ForLoop4687676 -> 4687024;
	ForLoop4687676 -> _JOIN_4687676;
	4815332 [label="4815332  register int cbv_30, cbv_31;...",shape=box];
	4675458 [label="4675458  int j;...",shape=box];
	ForLoop4678486 [label="ForLoop4678486  for (j=cbv_36; j<=cbv_37; j=j+1) ...",shape=box];
	ForLoop4678486 -> 4678485;
	ForLoop4678486 -> _JOIN_4678486;
	_JOIN_4674850 [label="_JOIN_4674850None...",shape=box];
	_JOIN_4674850 -> 4674852;
	_JOIN_4689113 [label="_JOIN_4689113None...",shape=box];
	_JOIN_4689113 -> _JOIN_4689116;
	ForLoop4672426 [label="ForLoop4672426  for (j=cbv_6; j<=cbv_7; j=j+1) ...",shape=box];
	ForLoop4672426 -> 4672425;
	ForLoop4672426 -> _JOIN_4672426;
	4814014 [label="4814014  register int cbv_24, cbv_25;...",shape=box];
	4675455 [label="4675455  tmp[(i+6)]=tmp[(i+6)]+A[(i+6)*ny+j]*x[j];...",shape=box];
	4675455 -> _JOIN_4675456;
	_JOIN_4686973 [label="_JOIN_4686973None...",shape=box];
	_JOIN_4686973 -> ForLoop4687678;
	4672428 [label="4672428  int j;...",shape=box];
	_JOIN_4680833 [label="_JOIN_4680833None...",shape=box];
	_JOIN_4680833 -> 4819286;
	4828032 [label="4828032  register int cbv_85;...",shape=box];
	_JOIN_4682651 [label="_JOIN_4682651None...",shape=box];
	_JOIN_4682651 -> 4821263;
	_JOIN_4689045 [label="_JOIN_4689045None...",shape=box];
	_JOIN_4689045 -> 4827949;
	_JOIN_4679015 [label="_JOIN_4679015None...",shape=box];
	_JOIN_4679015 -> 4817309;
	4808919 [label="4808919  register int cbv_1;...",shape=box];
	ForLoop4684546 [label="ForLoop4684546  for (j=cbv_66; j<=cbv_67; j=j+1) ...",shape=box];
	ForLoop4684546 -> 4684545;
	ForLoop4684546 -> _JOIN_4684546;
	4672425 [label="4672425  tmp[(i+1)]=tmp[(i+1)]+A[(i+1)*ny+j]*x[j];...",shape=box];
	4672425 -> _JOIN_4672426;
	4678488 [label="4678488  int j;...",shape=box];
	4819945 [label="4819945  register int cbv_51, cbv_52;...",shape=box];
	4540503 [label="4540503  y[i]=0.0;...",shape=box];
	4540503 -> _JOIN_4540504;
	4680961 [label="4680961  tmp[(i+16)]=tmp[(i+16)]+A[(i+16)*ny+j]*x[j];...",shape=box];
	4682173 [label="4682173  tmp[(i+18)]=tmp[(i+18)]+A[(i+18)*ny+j]*x[j];...",shape=box];
	_JOIN_4685681 [label="_JOIN_4685681None...",shape=box];
	_JOIN_4685681 -> 4824558;
	4812037 [label="4812037  register int cbv_15, cbv_16;...",shape=box];
	4570556 [label="4570556  int i;...",shape=box];
	4570556 -> ForLoop4687680;
	_JOIN_4684546 [label="_JOIN_4684546None...",shape=box];
	_JOIN_4684546 -> 4684548;
	4678485 [label="4678485  tmp[(i+11)]=tmp[(i+11)]+A[(i+11)*ny+j]*x[j];...",shape=box];
	4678485 -> _JOIN_4678486;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest17.exe __orio_perftest17.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest17.exe  
{'[3, 1, 5, 4, 0, 0, 0, 0, 3, 25, 14, 0, 0, 2, 0, 0, 1, 1]' : 0.151556}
{'[3, 1, 5, 4, 0, 0, 0, 0, 3, 25, 14, 0, 0, 2, 0, 0, 1, 1]' : 0.151665}
{'[3, 1, 5, 4, 0, 0, 0, 0, 3, 25, 14, 0, 0, 2, 0, 0, 1, 1]' : 0.151351}
{'[3, 1, 5, 4, 0, 0, 0, 0, 3, 25, 14, 0, 0, 2, 0, 0, 1, 1]' : 0.151551}
{'[3, 1, 5, 4, 0, 0, 0, 0, 3, 25, 14, 0, 0, 2, 0, 0, 1, 1]' : 0.151568}
{'[3, 1, 5, 4, 0, 0, 0, 0, 3, 25, 14, 0, 0, 2, 0, 0, 1, 1]' : 0.151628}
{'[3, 1, 5, 4, 0, 0, 0, 0, 3, 25, 14, 0, 0, 2, 0, 0, 1, 1]' : 0.151378}
{'[3, 1, 5, 4, 0, 0, 0, 0, 3, 25, 14, 0, 0, 2, 0, 0, 1, 1]' : 0.151338}
{'[3, 1, 5, 4, 0, 0, 0, 0, 3, 25, 14, 0, 0, 2, 0, 0, 1, 1]' : 0.15265}
{'[3, 1, 5, 4, 0, 0, 0, 0, 3, 25, 14, 0, 0, 2, 0, 0, 1, 1]' : 0.159273}
{'[3, 1, 5, 4, 0, 0, 0, 0, 3, 25, 14, 0, 0, 2, 0, 0, 1, 1]' : 0.151726}
{'[3, 1, 5, 4, 0, 0, 0, 0, 3, 25, 14, 0, 0, 2, 0, 0, 1, 1]' : 0.151504}
{'[3, 1, 5, 4, 0, 0, 0, 0, 3, 25, 14, 0, 0, 2, 0, 0, 1, 1]' : 0.151388}
{'[3, 1, 5, 4, 0, 0, 0, 0, 3, 25, 14, 0, 0, 2, 0, 0, 1, 1]' : 0.151496}
{'[3, 1, 5, 4, 0, 0, 0, 0, 3, 25, 14, 0, 0, 2, 0, 0, 1, 1]' : 0.151547}
{'[3, 1, 5, 4, 0, 0, 0, 0, 3, 25, 14, 0, 0, 2, 0, 0, 1, 1]' : 0.151567}
{'[3, 1, 5, 4, 0, 0, 0, 0, 3, 25, 14, 0, 0, 2, 0, 0, 1, 1]' : 0.151626}
{'[3, 1, 5, 4, 0, 0, 0, 0, 3, 25, 14, 0, 0, 2, 0, 0, 1, 1]' : 0.151505}
{'[3, 1, 5, 4, 0, 0, 0, 0, 3, 25, 14, 0, 0, 2, 0, 0, 1, 1]' : 0.151681}
{'[3, 1, 5, 4, 0, 0, 0, 0, 3, 25, 14, 0, 0, 2, 0, 0, 1, 1]' : 0.158244}
{'[3, 1, 5, 4, 0, 0, 0, 0, 3, 25, 14, 0, 0, 2, 0, 0, 1, 1]' : 0.15136}
{'[3, 1, 5, 4, 0, 0, 0, 0, 3, 25, 14, 0, 0, 2, 0, 0, 1, 1]' : 0.152472}
{'[3, 1, 5, 4, 0, 0, 0, 0, 3, 25, 14, 0, 0, 2, 0, 0, 1, 1]' : 0.151572}
{'[3, 1, 5, 4, 0, 0, 0, 0, 3, 25, 14, 0, 0, 2, 0, 0, 1, 1]' : 0.151409}
{'[3, 1, 5, 4, 0, 0, 0, 0, 3, 25, 14, 0, 0, 2, 0, 0, 1, 1]' : 0.151614}
{'[3, 1, 5, 4, 0, 0, 0, 0, 3, 25, 14, 0, 0, 2, 0, 0, 1, 1]' : 0.151711}
{'[3, 1, 5, 4, 0, 0, 0, 0, 3, 25, 14, 0, 0, 2, 0, 0, 1, 1]' : 0.151508}
{'[3, 1, 5, 4, 0, 0, 0, 0, 3, 25, 14, 0, 0, 2, 0, 0, 1, 1]' : 0.151561}
{'[3, 1, 5, 4, 0, 0, 0, 0, 3, 25, 14, 0, 0, 2, 0, 0, 1, 1]' : 0.151354}
{'[3, 1, 5, 4, 0, 0, 0, 0, 3, 25, 14, 0, 0, 2, 0, 0, 1, 1]' : 0.151943}

out:
 ["{'[3, 1, 5, 4, 0, 0, 0, 0, 3, 25, 14, 0, 0, 2, 0, 0, 1, 1]' : 0.151556}", "{'[3, 1, 5, 4, 0, 0, 0, 0, 3, 25, 14, 0, 0, 2, 0, 0, 1, 1]' : 0.151665}", "{'[3, 1, 5, 4, 0, 0, 0, 0, 3, 25, 14, 0, 0, 2, 0, 0, 1, 1]' : 0.151351}", "{'[3, 1, 5, 4, 0, 0, 0, 0, 3, 25, 14, 0, 0, 2, 0, 0, 1, 1]' : 0.151551}", "{'[3, 1, 5, 4, 0, 0, 0, 0, 3, 25, 14, 0, 0, 2, 0, 0, 1, 1]' : 0.151568}", "{'[3, 1, 5, 4, 0, 0, 0, 0, 3, 25, 14, 0, 0, 2, 0, 0, 1, 1]' : 0.151628}", "{'[3, 1, 5, 4, 0, 0, 0, 0, 3, 25, 14, 0, 0, 2, 0, 0, 1, 1]' : 0.151378}", "{'[3, 1, 5, 4, 0, 0, 0, 0, 3, 25, 14, 0, 0, 2, 0, 0, 1, 1]' : 0.151338}", "{'[3, 1, 5, 4, 0, 0, 0, 0, 3, 25, 14, 0, 0, 2, 0, 0, 1, 1]' : 0.15265}", "{'[3, 1, 5, 4, 0, 0, 0, 0, 3, 25, 14, 0, 0, 2, 0, 0, 1, 1]' : 0.159273}", "{'[3, 1, 5, 4, 0, 0, 0, 0, 3, 25, 14, 0, 0, 2, 0, 0, 1, 1]' : 0.151726}", "{'[3, 1, 5, 4, 0, 0, 0, 0, 3, 25, 14, 0, 0, 2, 0, 0, 1, 1]' : 0.151504}", "{'[3, 1, 5, 4, 0, 0, 0, 0, 3, 25, 14, 0, 0, 2, 0, 0, 1, 1]' : 0.151388}", "{'[3, 1, 5, 4, 0, 0, 0, 0, 3, 25, 14, 0, 0, 2, 0, 0, 1, 1]' : 0.151496}", "{'[3, 1, 5, 4, 0, 0, 0, 0, 3, 25, 14, 0, 0, 2, 0, 0, 1, 1]' : 0.151547}", "{'[3, 1, 5, 4, 0, 0, 0, 0, 3, 25, 14, 0, 0, 2, 0, 0, 1, 1]' : 0.151567}", "{'[3, 1, 5, 4, 0, 0, 0, 0, 3, 25, 14, 0, 0, 2, 0, 0, 1, 1]' : 0.151626}", "{'[3, 1, 5, 4, 0, 0, 0, 0, 3, 25, 14, 0, 0, 2, 0, 0, 1, 1]' : 0.151505}", "{'[3, 1, 5, 4, 0, 0, 0, 0, 3, 25, 14, 0, 0, 2, 0, 0, 1, 1]' : 0.151681}", "{'[3, 1, 5, 4, 0, 0, 0, 0, 3, 25, 14, 0, 0, 2, 0, 0, 1, 1]' : 0.158244}", "{'[3, 1, 5, 4, 0, 0, 0, 0, 3, 25, 14, 0, 0, 2, 0, 0, 1, 1]' : 0.15136}", "{'[3, 1, 5, 4, 0, 0, 0, 0, 3, 25, 14, 0, 0, 2, 0, 0, 1, 1]' : 0.152472}", "{'[3, 1, 5, 4, 0, 0, 0, 0, 3, 25, 14, 0, 0, 2, 0, 0, 1, 1]' : 0.151572}", "{'[3, 1, 5, 4, 0, 0, 0, 0, 3, 25, 14, 0, 0, 2, 0, 0, 1, 1]' : 0.151409}", "{'[3, 1, 5, 4, 0, 0, 0, 0, 3, 25, 14, 0, 0, 2, 0, 0, 1, 1]' : 0.151614}", "{'[3, 1, 5, 4, 0, 0, 0, 0, 3, 25, 14, 0, 0, 2, 0, 0, 1, 1]' : 0.151711}", "{'[3, 1, 5, 4, 0, 0, 0, 0, 3, 25, 14, 0, 0, 2, 0, 0, 1, 1]' : 0.151508}", "{'[3, 1, 5, 4, 0, 0, 0, 0, 3, 25, 14, 0, 0, 2, 0, 0, 1, 1]' : 0.151561}", "{'[3, 1, 5, 4, 0, 0, 0, 0, 3, 25, 14, 0, 0, 2, 0, 0, 1, 1]' : 0.151354}", "{'[3, 1, 5, 4, 0, 0, 0, 0, 3, 25, 14, 0, 0, 2, 0, 0, 1, 1]' : 0.151943}"]
returning from 'run': {'[3, 1, 5, 4, 0, 0, 0, 0, 3, 25, 14, 0, 0, 2, 0, 0, 1, 1]': ([0.151556, 0.151665, 0.151351, 0.151551, 0.151568, 0.151628, 0.151378, 0.151338, 0.15265, 0.159273, 0.151726, 0.151504, 0.151388, 0.151496, 0.151547, 0.151567, 0.151626, 0.151505, 0.151681, 0.158244, 0.15136, 0.152472, 0.151572, 0.151409, 0.151614, 0.151711, 0.151508, 0.151561, 0.151354, 0.151943], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.151556, 0.151665, 0.151351, 0.151551, 0.151568, 0.151628, 0.151378, 0.151338, 0.15265, 0.159273, 0.151726, 0.151504, 0.151388, 0.151496, 0.151547, 0.151567, 0.151626, 0.151505, 0.151681, 0.158244, 0.15136, 0.152472, 0.151572, 0.151409, 0.151614, 0.151711, 0.151508, 0.151561, 0.151354, 0.151943], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[3, 1, 5, 4, 0, 0, 0, 0, 3, 25, 14, 0, 0, 2, 0, 0, 1, 1]': ([0.151556, 0.151665, 0.151351, 0.151551, 0.151568, 0.151628, 0.151378, 0.151338, 0.15265, 0.159273, 0.151726, 0.151504, 0.151388, 0.151496, 0.151547, 0.151567, 0.151626, 0.151505, 0.151681, 0.158244, 0.15136, 0.152472, 0.151572, 0.151409, 0.151614, 0.151711, 0.151508, 0.151561, 0.151354, 0.151943], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [1, 0, 4, 5, 3, 5, 0, 0, 27, 8, 0, 1, 0, 0, 1, 0, 0, 1]
Fixed Factors: {}
Testing candidate 18: [1, 0, 4, 5, 3, 5, 0, 0, 27, 8, 0, 1, 0, 0, 1, 0, 0, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	36
        Max loop nest depth: 	6
        Additions: 		931
        Multiplications: 	240
        Divisions: 		0
        Logical: 		0
        Reads: 			1630
        Writes: 		265
        Comparisons:		36
        Gotos: 			0
        
digraph CFG {
	4858835 [label="4858835  int k;...",shape=box];
	4858832 [label="4858832  y[k]=y[k]+A[(i+2)*ny+k]*tmp[(i+2)];...",shape=box];
	4858832 -> _JOIN_4858833;
	ForLoop4860370 [label="ForLoop4860370  for (kk=kkk; kk<=min(ny-1,kkk+896); kk=kk+128) {...",shape=box];
	ForLoop4860370 -> 4874631;
	ForLoop4860370 -> _JOIN_4860370;
	4846883 [label="4846883  int i;...",shape=box];
	4846883 -> ForLoop4859788;
	ForLoop4860367 [label="ForLoop4860367  for (k=cbv_33; k<=cbv_34; k=k+1) ...",shape=box];
	ForLoop4860367 -> 4860366;
	ForLoop4860367 -> _JOIN_4860367;
	ForLoop4832158 [label="ForLoop4832158  for (ii=iii; ii<=min(nx-1,iii+1008); ii=ii+16) {...",shape=box];
	ForLoop4832158 -> 4846883;
	ForLoop4832158 -> _JOIN_4832158;
	ForLoop4832159 [label="ForLoop4832159  for (iii=0; iii<=nx-1; iii=iii+1024) ...",shape=box];
	ForLoop4832159 -> ForLoop4832158;
	ForLoop4832159 -> _JOIN_4832159;
	_JOIN_4829303 [label="_JOIN_4829303None...",shape=box];
	_JOIN_4829303 -> 4836105;
	4858565 [label="4858565  y[k]=y[k]+A[(i+1)*ny+k]*tmp[(i+1)];...",shape=box];
	_JOIN_4859307 [label="_JOIN_4859307None...",shape=box];
	_JOIN_4859307 -> 4859309;
	_JOIN_4860299 [label="_JOIN_4860299None...",shape=box];
	_JOIN_4860299 -> 4874791;
	4860269 [label="4860269  y[k]=y[k]+A[i*ny+k]*tmp[i];...",shape=box];
	4874631 [label="4874631  register int cbv_31;...",shape=box];
	ForLoop4860299 [label="ForLoop4860299  for (k=kt; k<=cbv_32; k=k+2) {...",shape=box];
	ForLoop4860299 -> 4860269;
	ForLoop4860299 -> _JOIN_4860299;
	4860366 [label="4860366  y[k]=y[k]+A[i*ny+k]*tmp[i];...",shape=box];
	4860366 -> _JOIN_4860367;
	ForLoop4859707 [label="ForLoop4859707  for (k=kt; k<=cbv_27; k=k+2) {...",shape=box];
	ForLoop4859707 -> 4859671;
	ForLoop4859707 -> _JOIN_4859707;
	4829302 [label="4829302  y[i]=0.0;...",shape=box];
	4829302 -> _JOIN_4829303;
	4873239 [label="4873239  register int cbv_13, cbv_14;...",shape=box];
	ForLoop4860373 [label="ForLoop4860373  for (i=(min(nx-1,ii+15))-(((min(nx-1,ii+15))-(ii)+1)%9)+1; i<=min(nx-1,ii+15); i=i+1) {...",shape=box];
	ForLoop4860373 -> 4859899;
	ForLoop4860373 -> _JOIN_4860373;
	ForLoop4860371 [label="ForLoop4860371  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) ...",shape=box];
	ForLoop4860371 -> ForLoop4860370;
	ForLoop4860371 -> _JOIN_4860371;
	_JOIN_4858917 [label="_JOIN_4858917None...",shape=box];
	_JOIN_4858917 -> 4873239;
	4858674 [label="4858674  y[k]=y[k]+A[(i+1)*ny+k]*tmp[(i+1)];...",shape=box];
	4858674 -> _JOIN_4858675;
	4858677 [label="4858677  int k;...",shape=box];
	ForLoop4859233 [label="ForLoop4859233  for (k=kt; k<=cbv_18; k=k+2) {...",shape=box];
	ForLoop4859233 -> 4859197;
	ForLoop4859233 -> _JOIN_4859233;
	_JOIN_4859952 [label="_JOIN_4859952None...",shape=box];
	_JOIN_4859952 -> ForLoop4860371;
	4859513 [label="4859513  y[k]=y[k]+A[(i+7)*ny+k]*tmp[(i+7)];...",shape=box];
	_JOIN_4858517 [label="_JOIN_4858517None...",shape=box];
	_JOIN_4858517 -> 4858519;
	4859151 [label="4859151  int k;...",shape=box];
	_JOIN_4858991 [label="_JOIN_4858991None...",shape=box];
	_JOIN_4858991 -> 4858993;
	ForLoop4859786 [label="ForLoop4859786  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop4859786 -> ForLoop4859784;
	ForLoop4859786 -> _JOIN_4859786;
	4855638 [label="4855638  tmp[i]=0;...",shape=box];
	ForLoop4859781 [label="ForLoop4859781  for (k=cbv_28; k<=cbv_29; k=k+1) ...",shape=box];
	ForLoop4859781 -> 4859780;
	ForLoop4859781 -> _JOIN_4859781;
	4859467 [label="4859467  int k;...",shape=box];
	4859464 [label="4859464  y[k]=y[k]+A[(i+6)*ny+k]*tmp[(i+6)];...",shape=box];
	4859464 -> _JOIN_4859465;
	ForLoop4859549 [label="ForLoop4859549  for (k=kt; k<=cbv_24; k=k+2) {...",shape=box];
	ForLoop4859549 -> 4859513;
	ForLoop4859549 -> _JOIN_4859549;
	_JOIN_4855997 [label="_JOIN_4855997None...",shape=box];
	_JOIN_4855997 -> ForLoop4859786;
	_JOIN_4855995 [label="_JOIN_4855995None...",shape=box];
	_JOIN_4855995 -> _JOIN_4855997;
	_JOIN_4860373 [label="_JOIN_4860373None...",shape=box];
	_JOIN_4860373 -> _JOIN_4832158;
	_JOIN_4860371 [label="_JOIN_4860371None...",shape=box];
	_JOIN_4860371 -> _JOIN_4860373;
	_JOIN_4860370 [label="_JOIN_4860370None...",shape=box];
	_JOIN_4860370 -> _JOIN_4860371;
	ForLoop4859952 [label="ForLoop4859952  for (jjj=0; jjj<=ny-1; jjj=jjj+256) {...",shape=box];
	ForLoop4859952 -> 4874377;
	ForLoop4859952 -> _JOIN_4859952;
	ForLoop4859951 [label="ForLoop4859951  for (j=jjj; j<=cbv_30; j=j+1) ...",shape=box];
	ForLoop4859951 -> 4859950;
	ForLoop4859951 -> _JOIN_4859951;
	ForLoop4858759 [label="ForLoop4858759  for (k=kt; k<=cbv_9; k=k+2) {...",shape=box];
	ForLoop4858759 -> 4858723;
	ForLoop4858759 -> _JOIN_4858759;
	4873872 [label="4873872  register int cbv_22, cbv_23;...",shape=box];
	_JOIN_4859465 [label="_JOIN_4859465None...",shape=box];
	_JOIN_4859465 -> 4859467;
	_JOIN_4858449 [label="_JOIN_4858449None...",shape=box];
	_JOIN_4858449 -> 4872606;
	4859148 [label="4859148  y[k]=y[k]+A[(i+4)*ny+k]*tmp[(i+4)];...",shape=box];
	4859148 -> _JOIN_4859149;
	_JOIN_4858759 [label="_JOIN_4858759None...",shape=box];
	_JOIN_4858759 -> 4873028;
	4860229 [label="4860229  int k;...",shape=box];
	ForLoop4859788 [label="ForLoop4859788  for (i=ii; i<=min(nx-1,ii+15)-8; i=i+9) {...",shape=box];
	ForLoop4859788 -> 4855638;
	ForLoop4859788 -> _JOIN_4859788;
	4828527 [label="4828527  int i;...",shape=box];
	4828527 -> ForLoop4829234;
	4836105 [label="4836105  double x_copy;...",shape=box];
	ForLoop4859784 [label="ForLoop4859784  for (kk=kkk; kk<=min(ny-1,kkk+896); kk=kk+128) {...",shape=box];
	ForLoop4859784 -> 4872446;
	ForLoop4859784 -> _JOIN_4859784;
	_JOIN_4858601 [label="_JOIN_4858601None...",shape=box];
	_JOIN_4858601 -> 4872817;
	4859309 [label="4859309  int k;...",shape=box];
	_JOIN_4829234 [label="_JOIN_4829234None...",shape=box];
	_JOIN_4829234 -> ForLoop4829303;
	4859780 [label="4859780  y[k]=y[k]+A[(i+8)*ny+k]*tmp[(i+8)];...",shape=box];
	4859780 -> _JOIN_4859781;
	_JOIN_4860367 [label="_JOIN_4860367None...",shape=box];
	_JOIN_4860367 -> _JOIN_4860370;
	4859306 [label="4859306  y[k]=y[k]+A[(i+5)*ny+k]*tmp[(i+5)];...",shape=box];
	4859306 -> _JOIN_4859307;
	4858516 [label="4858516  y[k]=y[k]+A[i*ny+k]*tmp[i];...",shape=box];
	4858516 -> _JOIN_4858517;
	4874294 [label="4874294  register int cbv_28, cbv_29;...",shape=box];
	_JOIN_4859075 [label="_JOIN_4859075None...",shape=box];
	_JOIN_4859075 -> 4873450;
	ForLoop4829234 [label="ForLoop4829234  for (i=0; i<=ny-28; i=i+28) {...",shape=box];
	ForLoop4829234 -> 4828989;
	ForLoop4829234 -> _JOIN_4829234;
	_JOIN_4860228 [label="_JOIN_4860228None...",shape=box];
	_JOIN_4860228 -> 4860229;
	_JOIN_4859391 [label="_JOIN_4859391None...",shape=box];
	_JOIN_4859391 -> 4873872;
	ForLoop4858449 [label="ForLoop4858449  for (k=kt; k<=cbv_3; k=k+2) {...",shape=box];
	ForLoop4858449 -> 4858419;
	ForLoop4858449 -> _JOIN_4858449;
	ForLoop4858601 [label="ForLoop4858601  for (k=kt; k<=cbv_6; k=k+2) {...",shape=box];
	ForLoop4858601 -> 4858565;
	ForLoop4858601 -> _JOIN_4858601;
	_JOIN_4859951 [label="_JOIN_4859951None...",shape=box];
	_JOIN_4859951 -> _JOIN_4859952;
	ForLoop4858378 [label="ForLoop4858378  for (kt=kk; kt<=cbv_2; kt=kt+8) {...",shape=box];
	ForLoop4858378 -> 4856068;
	ForLoop4858378 -> _JOIN_4858378;
	4874377 [label="4874377  register int cbv_30;...",shape=box];
	4858723 [label="4858723  y[k]=y[k]+A[(i+2)*ny+k]*tmp[(i+2)];...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 4828527;
	ForLoop4858833 [label="ForLoop4858833  for (k=cbv_10; k<=cbv_11; k=k+1) ...",shape=box];
	ForLoop4858833 -> 4858832;
	ForLoop4858833 -> _JOIN_4858833;
	_JOIN_4858378 [label="_JOIN_4858378None...",shape=box];
	_JOIN_4858378 -> 4858379;
	4873661 [label="4873661  register int cbv_19, cbv_20;...",shape=box];
	4858379 [label="4858379  int k;...",shape=box];
	4858881 [label="4858881  y[k]=y[k]+A[(i+3)*ny+k]*tmp[(i+3)];...",shape=box];
	_JOIN_4858833 [label="_JOIN_4858833None...",shape=box];
	_JOIN_4858833 -> 4858835;
	4860023 [label="4860023  y[kt]=y[kt]+A[i*ny+kt]*tmp[i];...",shape=box];
	_JOIN_4858675 [label="_JOIN_4858675None...",shape=box];
	_JOIN_4858675 -> 4858677;
	4859671 [label="4859671  y[k]=y[k]+A[(i+8)*ny+k]*tmp[(i+8)];...",shape=box];
	4872817 [label="4872817  register int cbv_7, cbv_8;...",shape=box];
	_JOIN_4832158 [label="_JOIN_4832158None...",shape=box];
	_JOIN_4832158 -> _JOIN_4832159;
	_JOIN_4832159 [label="_JOIN_4832159None...",shape=box];
	ForLoop4829303 [label="ForLoop4829303  for (i=ny-((ny-(0))%28); i<=ny-1; i=i+1) ...",shape=box];
	ForLoop4829303 -> 4829302;
	ForLoop4829303 -> _JOIN_4829303;
	4858519 [label="4858519  int k;...",shape=box];
	4828989 [label="4828989  y[i]=0.0;...",shape=box];
	_JOIN_4859788 [label="_JOIN_4859788None...",shape=box];
	_JOIN_4859788 -> ForLoop4860373;
	4859197 [label="4859197  y[k]=y[k]+A[(i+5)*ny+k]*tmp[(i+5)];...",shape=box];
	ForLoop4859075 [label="ForLoop4859075  for (k=kt; k<=cbv_15; k=k+2) {...",shape=box];
	ForLoop4859075 -> 4859039;
	ForLoop4859075 -> _JOIN_4859075;
	4856068 [label="4856068  y[kt]=y[kt]+A[i*ny+kt]*tmp[i];...",shape=box];
	4872446 [label="4872446  register int cbv_2;...",shape=box];
	_JOIN_4859781 [label="_JOIN_4859781None...",shape=box];
	_JOIN_4859781 -> _JOIN_4859784;
	_JOIN_4859786 [label="_JOIN_4859786None...",shape=box];
	_JOIN_4859786 -> _JOIN_4859788;
	_JOIN_4859784 [label="_JOIN_4859784None...",shape=box];
	_JOIN_4859784 -> _JOIN_4859786;
	ForLoop4859623 [label="ForLoop4859623  for (k=cbv_25; k<=cbv_26; k=k+1) ...",shape=box];
	ForLoop4859623 -> 4859622;
	ForLoop4859623 -> _JOIN_4859623;
	ForLoop4858517 [label="ForLoop4858517  for (k=cbv_4; k<=cbv_5; k=k+1) ...",shape=box];
	ForLoop4858517 -> 4858516;
	ForLoop4858517 -> _JOIN_4858517;
	4873028 [label="4873028  register int cbv_10, cbv_11;...",shape=box];
	_JOIN_4859707 [label="_JOIN_4859707None...",shape=box];
	_JOIN_4859707 -> 4874294;
	_JOIN_4859623 [label="_JOIN_4859623None...",shape=box];
	_JOIN_4859623 -> 4859625;
	_JOIN_4859233 [label="_JOIN_4859233None...",shape=box];
	_JOIN_4859233 -> 4873661;
	4859622 [label="4859622  y[k]=y[k]+A[(i+7)*ny+k]*tmp[(i+7)];...",shape=box];
	4859622 -> _JOIN_4859623;
	4859625 [label="4859625  int k;...",shape=box];
	ForLoop4859149 [label="ForLoop4859149  for (k=cbv_16; k<=cbv_17; k=k+1) ...",shape=box];
	ForLoop4859149 -> 4859148;
	ForLoop4859149 -> _JOIN_4859149;
	ForLoop4860228 [label="ForLoop4860228  for (kt=kk; kt<=cbv_31; kt=kt+8) {...",shape=box];
	ForLoop4860228 -> 4860023;
	ForLoop4860228 -> _JOIN_4860228;
	ForLoop4859465 [label="ForLoop4859465  for (k=cbv_22; k<=cbv_23; k=k+1) ...",shape=box];
	ForLoop4859465 -> 4859464;
	ForLoop4859465 -> _JOIN_4859465;
	4855761 [label="4855761  tmp[i]=tmp[i]+A[i*ny+j]*x[j];...",shape=box];
	ForLoop4858917 [label="ForLoop4858917  for (k=kt; k<=cbv_12; k=k+2) {...",shape=box];
	ForLoop4858917 -> 4858881;
	ForLoop4858917 -> _JOIN_4858917;
	_JOIN_4859549 [label="_JOIN_4859549None...",shape=box];
	_JOIN_4859549 -> 4874083;
	4859899 [label="4859899  tmp[i]=0;...",shape=box];
	4859899 -> ForLoop4859952;
	_JOIN_4859149 [label="_JOIN_4859149None...",shape=box];
	_JOIN_4859149 -> 4859151;
	4872606 [label="4872606  register int cbv_4, cbv_5;...",shape=box];
	4859950 [label="4859950  tmp[i]=tmp[i]+A[i*ny+j]*x[j];...",shape=box];
	4859950 -> _JOIN_4859951;
	4859355 [label="4859355  y[kexpected=9369846271501.798828
actual=9369846271501.798828
]=y[k]+A[(i+6)*ny+k]*tmp[(i+6)];...",shape=box];
	ForLoop4858991 [label="ForLoop4858991  for (k=cbv_13; k<=cbv_14; k=k+1) ...",shape=box];
	ForLoop4858991 -> 4858990;
	ForLoop4858991 -> _JOIN_4858991;
	ForLoop4859391 [label="ForLoop4859391  for (k=kt; k<=cbv_21; k=k+2) {...",shape=box];
	ForLoop4859391 -> 4859355;
	ForLoop4859391 -> _JOIN_4859391;
	ForLoop4855997 [label="ForLoop4855997  for (jjj=0; jjj<=ny-1; jjj=jjj+256) {...",shape=box];
	ForLoop4855997 -> 4870087;
	ForLoop4855997 -> _JOIN_4855997;
	ForLoop4855995 [label="ForLoop4855995  for (j=jjj; j<=cbv_1; j=j+1) {...",shape=box];
	ForLoop4855995 -> 4855761;
	ForLoop4855995 -> _JOIN_4855995;
	4874083 [label="4874083  register int cbv_25, cbv_26;...",shape=box];
	4858419 [label="4858419  y[k]=y[k]+A[i*ny+k]*tmp[i];...",shape=box];
	ForLoop4859307 [label="ForLoop4859307  for (k=cbv_19; k<=cbv_20; k=k+1) ...",shape=box];
	ForLoop4859307 -> 4859306;
	ForLoop4859307 -> _JOIN_4859307;
	ForLoop4858675 [label="ForLoop4858675  for (k=cbv_7; k<=cbv_8; k=k+1) ...",shape=box];
	ForLoop4858675 -> 4858674;
	ForLoop4858675 -> _JOIN_4858675;
	4874791 [label="4874791  register int cbv_33, cbv_34;...",shape=box];
	4870087 [label="4870087  register int cbv_1;...",shape=box];
	4858990 [label="4858990  y[k]=y[k]+A[(i+3)*ny+k]*tmp[(i+3)];...",shape=box];
	4858990 -> _JOIN_4858991;
	4859039 [label="4859039  y[k]=y[k]+A[(i+4)*ny+k]*tmp[(i+4)];...",shape=box];
	4873450 [label="4873450  register int cbv_16, cbv_17;...",shape=box];
	4858993 [label="4858993  int k;...",shape=box];

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest18.exe __orio_perftest18.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest18.exe  
{'[1, 0, 4, 5, 3, 5, 0, 0, 27, 8, 0, 1, 0, 0, 1, 0, 0, 1]' : 0.120107}
{'[1, 0, 4, 5, 3, 5, 0, 0, 27, 8, 0, 1, 0, 0, 1, 0, 0, 1]' : 0.119906}
{'[1, 0, 4, 5, 3, 5, 0, 0, 27, 8, 0, 1, 0, 0, 1, 0, 0, 1]' : 0.119912}
{'[1, 0, 4, 5, 3, 5, 0, 0, 27, 8, 0, 1, 0, 0, 1, 0, 0, 1]' : 0.120939}
{'[1, 0, 4, 5, 3, 5, 0, 0, 27, 8, 0, 1, 0, 0, 1, 0, 0, 1]' : 0.119881}
{'[1, 0, 4, 5, 3, 5, 0, 0, 27, 8, 0, 1, 0, 0, 1, 0, 0, 1]' : 0.120175}
{'[1, 0, 4, 5, 3, 5, 0, 0, 27, 8, 0, 1, 0, 0, 1, 0, 0, 1]' : 0.119924}
{'[1, 0, 4, 5, 3, 5, 0, 0, 27, 8, 0, 1, 0, 0, 1, 0, 0, 1]' : 0.120063}
{'[1, 0, 4, 5, 3, 5, 0, 0, 27, 8, 0, 1, 0, 0, 1, 0, 0, 1]' : 0.119876}
{'[1, 0, 4, 5, 3, 5, 0, 0, 27, 8, 0, 1, 0, 0, 1, 0, 0, 1]' : 0.119879}
{'[1, 0, 4, 5, 3, 5, 0, 0, 27, 8, 0, 1, 0, 0, 1, 0, 0, 1]' : 0.119857}
{'[1, 0, 4, 5, 3, 5, 0, 0, 27, 8, 0, 1, 0, 0, 1, 0, 0, 1]' : 0.119858}
{'[1, 0, 4, 5, 3, 5, 0, 0, 27, 8, 0, 1, 0, 0, 1, 0, 0, 1]' : 0.119988}
{'[1, 0, 4, 5, 3, 5, 0, 0, 27, 8, 0, 1, 0, 0, 1, 0, 0, 1]' : 0.120117}
{'[1, 0, 4, 5, 3, 5, 0, 0, 27, 8, 0, 1, 0, 0, 1, 0, 0, 1]' : 0.119899}
{'[1, 0, 4, 5, 3, 5, 0, 0, 27, 8, 0, 1, 0, 0, 1, 0, 0, 1]' : 0.120162}
{'[1, 0, 4, 5, 3, 5, 0, 0, 27, 8, 0, 1, 0, 0, 1, 0, 0, 1]' : 0.119861}
{'[1, 0, 4, 5, 3, 5, 0, 0, 27, 8, 0, 1, 0, 0, 1, 0, 0, 1]' : 0.119851}
{'[1, 0, 4, 5, 3, 5, 0, 0, 27, 8, 0, 1, 0, 0, 1, 0, 0, 1]' : 0.120213}
{'[1, 0, 4, 5, 3, 5, 0, 0, 27, 8, 0, 1, 0, 0, 1, 0, 0, 1]' : 0.119892}
{'[1, 0, 4, 5, 3, 5, 0, 0, 27, 8, 0, 1, 0, 0, 1, 0, 0, 1]' : 0.120888}
{'[1, 0, 4, 5, 3, 5, 0, 0, 27, 8, 0, 1, 0, 0, 1, 0, 0, 1]' : 0.119825}
{'[1, 0, 4, 5, 3, 5, 0, 0, 27, 8, 0, 1, 0, 0, 1, 0, 0, 1]' : 0.119896}
{'[1, 0, 4, 5, 3, 5, 0, 0, 27, 8, 0, 1, 0, 0, 1, 0, 0, 1]' : 0.119918}
{'[1, 0, 4, 5, 3, 5, 0, 0, 27, 8, 0, 1, 0, 0, 1, 0, 0, 1]' : 0.119884}
{'[1, 0, 4, 5, 3, 5, 0, 0, 27, 8, 0, 1, 0, 0, 1, 0, 0, 1]' : 0.119876}
{'[1, 0, 4, 5, 3, 5, 0, 0, 27, 8, 0, 1, 0, 0, 1, 0, 0, 1]' : 0.119928}
{'[1, 0, 4, 5, 3, 5, 0, 0, 27, 8, 0, 1, 0, 0, 1, 0, 0, 1]' : 0.119909}
{'[1, 0, 4, 5, 3, 5, 0, 0, 27, 8, 0, 1, 0, 0, 1, 0, 0, 1]' : 0.120127}
{'[1, 0, 4, 5, 3, 5, 0, 0, 27, 8, 0, 1, 0, 0, 1, 0, 0, 1]' : 0.119893}

out:
 ["{'[1, 0, 4, 5, 3, 5, 0, 0, 27, 8, 0, 1, 0, 0, 1, 0, 0, 1]' : 0.120107}", "{'[1, 0, 4, 5, 3, 5, 0, 0, 27, 8, 0, 1, 0, 0, 1, 0, 0, 1]' : 0.119906}", "{'[1, 0, 4, 5, 3, 5, 0, 0, 27, 8, 0, 1, 0, 0, 1, 0, 0, 1]' : 0.119912}", "{'[1, 0, 4, 5, 3, 5, 0, 0, 27, 8, 0, 1, 0, 0, 1, 0, 0, 1]' : 0.120939}", "{'[1, 0, 4, 5, 3, 5, 0, 0, 27, 8, 0, 1, 0, 0, 1, 0, 0, 1]' : 0.119881}", "{'[1, 0, 4, 5, 3, 5, 0, 0, 27, 8, 0, 1, 0, 0, 1, 0, 0, 1]' : 0.120175}", "{'[1, 0, 4, 5, 3, 5, 0, 0, 27, 8, 0, 1, 0, 0, 1, 0, 0, 1]' : 0.119924}", "{'[1, 0, 4, 5, 3, 5, 0, 0, 27, 8, 0, 1, 0, 0, 1, 0, 0, 1]' : 0.120063}", "{'[1, 0, 4, 5, 3, 5, 0, 0, 27, 8, 0, 1, 0, 0, 1, 0, 0, 1]' : 0.119876}", "{'[1, 0, 4, 5, 3, 5, 0, 0, 27, 8, 0, 1, 0, 0, 1, 0, 0, 1]' : 0.119879}", "{'[1, 0, 4, 5, 3, 5, 0, 0, 27, 8, 0, 1, 0, 0, 1, 0, 0, 1]' : 0.119857}", "{'[1, 0, 4, 5, 3, 5, 0, 0, 27, 8, 0, 1, 0, 0, 1, 0, 0, 1]' : 0.119858}", "{'[1, 0, 4, 5, 3, 5, 0, 0, 27, 8, 0, 1, 0, 0, 1, 0, 0, 1]' : 0.119988}", "{'[1, 0, 4, 5, 3, 5, 0, 0, 27, 8, 0, 1, 0, 0, 1, 0, 0, 1]' : 0.120117}", "{'[1, 0, 4, 5, 3, 5, 0, 0, 27, 8, 0, 1, 0, 0, 1, 0, 0, 1]' : 0.119899}", "{'[1, 0, 4, 5, 3, 5, 0, 0, 27, 8, 0, 1, 0, 0, 1, 0, 0, 1]' : 0.120162}", "{'[1, 0, 4, 5, 3, 5, 0, 0, 27, 8, 0, 1, 0, 0, 1, 0, 0, 1]' : 0.119861}", "{'[1, 0, 4, 5, 3, 5, 0, 0, 27, 8, 0, 1, 0, 0, 1, 0, 0, 1]' : 0.119851}", "{'[1, 0, 4, 5, 3, 5, 0, 0, 27, 8, 0, 1, 0, 0, 1, 0, 0, 1]' : 0.120213}", "{'[1, 0, 4, 5, 3, 5, 0, 0, 27, 8, 0, 1, 0, 0, 1, 0, 0, 1]' : 0.119892}", "{'[1, 0, 4, 5, 3, 5, 0, 0, 27, 8, 0, 1, 0, 0, 1, 0, 0, 1]' : 0.120888}", "{'[1, 0, 4, 5, 3, 5, 0, 0, 27, 8, 0, 1, 0, 0, 1, 0, 0, 1]' : 0.119825}", "{'[1, 0, 4, 5, 3, 5, 0, 0, 27, 8, 0, 1, 0, 0, 1, 0, 0, 1]' : 0.119896}", "{'[1, 0, 4, 5, 3, 5, 0, 0, 27, 8, 0, 1, 0, 0, 1, 0, 0, 1]' : 0.119918}", "{'[1, 0, 4, 5, 3, 5, 0, 0, 27, 8, 0, 1, 0, 0, 1, 0, 0, 1]' : 0.119884}", "{'[1, 0, 4, 5, 3, 5, 0, 0, 27, 8, 0, 1, 0, 0, 1, 0, 0, 1]' : 0.119876}", "{'[1, 0, 4, 5, 3, 5, 0, 0, 27, 8, 0, 1, 0, 0, 1, 0, 0, 1]' : 0.119928}", "{'[1, 0, 4, 5, 3, 5, 0, 0, 27, 8, 0, 1, 0, 0, 1, 0, 0, 1]' : 0.119909}", "{'[1, 0, 4, 5, 3, 5, 0, 0, 27, 8, 0, 1, 0, 0, 1, 0, 0, 1]' : 0.120127}", "{'[1, 0, 4, 5, 3, 5, 0, 0, 27, 8, 0, 1, 0, 0, 1, 0, 0, 1]' : 0.119893}"]
returning from 'run': {'[1, 0, 4, 5, 3, 5, 0, 0, 27, 8, 0, 1, 0, 0, 1, 0, 0, 1]': ([0.120107, 0.119906, 0.119912, 0.120939, 0.119881, 0.120175, 0.119924, 0.120063, 0.119876, 0.119879, 0.119857, 0.119858, 0.119988, 0.120117, 0.119899, 0.120162, 0.119861, 0.119851, 0.120213, 0.119892, 0.120888, 0.119825, 0.119896, 0.119918, 0.119884, 0.119876, 0.119928, 0.119909, 0.120127, 0.119893], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.120107, 0.119906, 0.119912, 0.120939, 0.119881, 0.120175, 0.119924, 0.120063, 0.119876, 0.119879, 0.119857, 0.119858, 0.119988, 0.120117, 0.119899, 0.120162, 0.119861, 0.119851, 0.120213, 0.119892, 0.120888, 0.119825, 0.119896, 0.119918, 0.119884, 0.119876, 0.119928, 0.119909, 0.120127, 0.119893], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 4, 5, 3, 5, 0, 0, 27, 8, 0, 1, 0, 0, 1, 0, 0, 1]': ([0.120107, 0.119906, 0.119912, 0.120939, 0.119881, 0.120175, 0.119924, 0.120063, 0.119876, 0.119879, 0.119857, 0.119858, 0.119988, 0.120117, 0.119899, 0.120162, 0.119861, 0.119851, 0.120213, 0.119892, 0.120888, 0.119825, 0.119896, 0.119918, 0.119884, 0.119876, 0.119928, 0.119909, 0.120127, 0.119893], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [1, 4, 5, 2, 3, 0, 1, 0, 5, 20, 19, 0, 0, 0, 2, 1, 1, 0]
Fixed Factors: {}
Testing candidate 19: [1, 4, 5, 2, 3, 0, 1, 0, 5, 20, 19, 0, 0, 0, 2, 1, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	82
        Max loop nest depth: 	6
        Additions: 		6101
        Multiplications: 	2376
        Divisions: 		0
        Logical: 		0
        Reads: 			10574
        Writes: 		1582
        Comparisons:		82
        Gotos: 			0
        
digraph CFG {
	5123105 [label="5123105  scv_47=scv_47+A[(i+16)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_5112728 [label="_JOIN_5112728None...",shape=box];
	_JOIN_5112728 -> ForLoop5112808;
	ForLoop5125573 [label="ForLoop5125573  for (j=(min(ny-1,jj+127))-(((min(ny-1,jj+127))-(jj)+1)%20)+1; j<=min(ny-1,jj+127); j=j+1) {...",shape=box];
	ForLoop5125573 -> 5125572;
	ForLoop5125573 -> _JOIN_5125573;
	5298252 [label="5298252  double scv_34, scv_35, scv_36, scv_37, scv_38, scv_39, scv_40, scv_41;...",shape=box];
	5113658 [label="5113658  scv_51=scv_51+A[(i+4)*ny+j]*x_copy[(j-jj)];...",shape=box];
	5113658 -> _JOIN_5113659;
	_JOIN_5123871 [label="_JOIN_5123871None...",shape=box];
	_JOIN_5123871 -> 5123903;
	_JOIN_5152109 [label="_JOIN_5152109None...",shape=box];
	_JOIN_5152109 -> _JOIN_5152111;
	_JOIN_5152111 [label="_JOIN_5152111None...",shape=box];
	_JOIN_5152111 -> 5308021;
	4875288 [label="4875288  y[i]=0.0;...",shape=box];
	5127274 [label="5127274  scv_34=scv_34+A[(i+20)*ny+j]*x_copy[(j-jj)];...",shape=box];
	5127274 -> _JOIN_5127275;
	ForLoop5152109 [label="ForLoop5152109  for (k=kt; k<=min(ny-1,kk+255); k=k+1) {...",shape=box];
	ForLoop5152109 -> 5304725;
	ForLoop5152109 -> _JOIN_5152109;
	ForLoop5127278 [label="ForLoop5127278  for (jj=jjj; jj<=min(ny-1,jjj+128); jj=jj+128) {...",shape=box];
	ForLoop5127278 -> 5109625;
	ForLoop5127278 -> _JOIN_5127278;
	_JOIN_5126344 [label="_JOIN_5126344None...",shape=box];
	_JOIN_5126344 -> ForLoop5126424;
	ForLoop5119616 [label="ForLoop5119616  for (j=(min(ny-1,jj+127))-(((min(ny-1,jj+127))-(jj)+1)%20)+1; j<=min(ny-1,jj+127); j=j+1) {...",shape=box];
	ForLoop5119616 -> 5119615;
	ForLoop5119616 -> _JOIN_5119616;
	_JOIN_5114430 [label="_JOIN_5114430None...",shape=box];
	_JOIN_5114430 -> ForLoop5114510;
	5123903 [label="5123903  for (j=jj; j<=min(ny-1,jj+127); j=j+1) ...",shape=box];
	_JOIN_5152115 [label="_JOIN_5152115None...",shape=box];
	_JOIN_5152115 -> _JOIN_5152116;
	_JOIN_5125493 [label="_JOIN_5125493None...",shape=box];
	_JOIN_5125493 -> ForLoop5125573;
	_JOIN_5113579 [label="_JOIN_5113579None...",shape=box];
	_JOIN_5113579 -> ForLoop5113659;
	ForLoop5151112 [label="ForLoop5151112  for (j=(min(ny-1,jj+127))-(((min(ny-1,jj+127))-(jj)+1)%20)+1; j<=min(ny-1,jj+127); j=j+1) {...",shape=box];
	ForLoop5151112 -> 5151111;
	ForLoop5151112 -> _JOIN_5151112;
	5125605 [label="5125605  for (j=jj; j<=min(ny-1,jj+127); j=j+1) ...",shape=box];
	5117062 [label="5117062  scv_54=scv_54+A[(i+8)*ny+j]*x_copy[(j-jj)];...",shape=box];
	5117062 -> _JOIN_5117063;
	5125572 [label="5125572  scv_53=scv_53+A[(i+18)*ny+j]*x_copy[(j-jj)];...",shape=box];
	5125572 -> _JOIN_5125573;
	ForLoop5115361 [label="ForLoop5115361  for (j=(min(ny-1,jj+127))-(((min(ny-1,jj+127))-(jj)+1)%20)+1; j<=min(ny-1,jj+127); j=j+1) {...",shape=box];
	ForLoop5115361 -> 5115360;
	ForLoop5115361 -> _JOIN_5115361;
	5112893 [label="5112893  scv_51=scv_51+A[(i+4)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_5124642 [label="_JOIN_5124642None...",shape=box];
	_JOIN_5124642 -> ForLoop5124722;
	5126456 [label="5126456  for (j=jj; j<=min(ny-1,jj+127); j=j+1) ...",shape=box];
	_JOIN_5127280 [label="_JOIN_5127280None...",shape=box];
	_JOIN_5127280 -> ForLoop5150365;
	_JOIN_5123791 [label="_JOIN_5123791None...",shape=box];
	_JOIN_5123791 -> ForLoop5123871;
	5117999 [label="5117999  scv_37=scv_37+A[(i+10)*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop4875335 [label="ForLoop4875335  for (i=0; i<=cbv_1; i=i+6) {...",shape=box];
	ForLoop4875335 -> 4875288;
	ForLoop4875335 -> _JOIN_4875335;
	5120499 [label="5120499  for (j=jj; j<=min(ny-1,jj+127); j=j+1) ...",shape=box];
	_JOIN_5152113 [label="_JOIN_5152113None...",shape=box];
	_JOIN_5152113 -> _JOIN_5152115;
	5122201 [label="5122201  for (j=jj; j<=min(ny-1,jj+127); j=j+1) ...",shape=box];
	_JOIN_5152116 [label="_JOIN_5152116None...",shape=box];
	_JOIN_5111026 [label="_JOIN_5111026None...",shape=box];
	_JOIN_5111026 -> ForLoop5111106;
	_JOIN_5122940 [label="_JOIN_5122940None...",shape=box];
	_JOIN_5122940 -> ForLoop5123020;
	_JOIN_5117834 [label="_JOIN_5117834None...",shape=box];
	_JOIN_5117834 -> ForLoop5117914;
	_JOIN_5125573 [label="_JOIN_5125573None...",shape=box];
	_JOIN_5125573 -> 5125605;
	5117913 [label="5117913  scv_46=scv_46+A[(i+9)*ny+j]*x_copy[(j-jj)];...",shape=box];
	5117913 -> _JOIN_5117914;
	5115446 [label="5115446  scv_42=scv_42+A[(i+7)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_5116132 [label="_JOIN_5116132None...",shape=box];
	_JOIN_5116132 -> ForLoop5116212;
	5117095 [label="5117095  for (j=jj; j<=min(ny-1,jj+127); j=j+1) ...",shape=box];
	5110287 [label="5110287  for (j=jj; j<=min(ny-1,jj+127); j=j+1) ...",shape=box];
	5120552 [label="5120552  scv_40=scv_40+A[(i+13)*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop5117063 [label="ForLoop5117063  for (j=(min(ny-1,jj+127))-(((min(ny-1,jj+127))-(jj)+1)%20)+1; j<=min(ny-1,jj+127); j=j+1) {...",shape=box];
	ForLoop5117063 -> 5117062;
	ForLoop5117063 -> _JOIN_5117063;
	ForLoop5114510 [label="ForLoop5114510  for (j=(min(ny-1,jj+127))-(((min(ny-1,jj+127))-(jj)+1)%20)+1; j<=min(ny-1,jj+127); j=j+1) {...",shape=box];
	ForLoop5114510 -> 5114509;
	ForLoop5114510 -> _JOIN_5114510;
	5126509 [label="5126509  scv_34=scv_34+A[(i+20)*ny+j]*x_copy[(j-jj)];...",shape=box];
	5118764 [label="5118764  scv_37=scv_37+A[(i+10)*ny+j]*x_copy[(j-jj)];...",shape=box];
	5118764 -> _JOIN_5118765;
	_JOIN_5110255 [label="_JOIN_5110255None...",shape=box];
	_JOIN_5110255 -> 5110287;
	5119615 [label="5119615  scv_50=scv_50+A[(i+11)*ny+j]*x_copy[(j-jj)];...",shape=box];
	5119615 -> _JOIN_5119616;
	ForLoop5110255 [label="ForLoop5110255  for (j=(min(ny-1,jj+127))-(((min(ny-1,jj+127))-(jj)+1)%20)+1; j<=min(ny-1,jj+127); j=j+1) {...",shape=box];
	ForLoop5110255 -> 5110254;
	ForLoop5110255 -> _JOIN_5110255;
	ForLoop5123020 [label="ForLoop5123020  for (j=(min(ny-1,jj+127))-(((min(ny-1,jj+127))-(jj)+1)%20)+1; j<=min(ny-1,jj+127); j=j+1) {...",shape=box];
	ForLoop5123020 -> 5123019;
	ForLoop5123020 -> _JOIN_5123020;
	_JOIN_5118765 [label="_JOIN_5118765None...",shape=box];
	_JOIN_5118765 -> 5118797;
	5112807 [label="5112807  scv_38=scv_38+A[(i+3)*ny+j]*x_copy[(j-jj)];...",shape=box];
	5112807 -> _JOIN_5112808;
	_JOIN_4875404 [label="_JOIN_4875404None...",shape=box];
	_JOIN_4875404 -> 5109324;
	5126423 [label="5126423  scv_45=scv_45+A[(i+19)*ny+j]*x_copy[(j-jj)];...",shape=box];
	5126423 -> _JOIN_5126424;
	5122168 [label="5122168  scv_41=scv_41+A[(i+14)*ny+j]*x_copy[(j-jj)];...",shape=box];
	5122168 -> _JOIN_5122169;
	_JOIN_5117914 [label="_JOIN_5117914None...",shape=box];
	_JOIN_5117914 -> 5117946;
	5114509 [label="5114509  scv_48=scv_48+A[(i+5)*ny+j]*x_copy[(j-jj)];...",shape=box];
	5114509 -> _JOIN_5114510;
	_JOIN_5124722 [label="_JOIN_5124722None...",shape=box];
	_JOIN_5124722 -> 5124754;
	5117148 [label="5117148  scv_46=scv_46+A[(i+9)*ny+j]*x_copy[(j-jj)];...",shape=box];
	5111956 [label="5111956  scv_49=scv_49+A[(i+2)*ny+j]*x_copy[(j-jj)];...",shape=box];
	5111956 -> _JOIN_5111957;
	5116244 [label="5116244  for (j=jj; j<=min(ny-1,jj+127); j=j+1) ...",shape=box];
	_JOIN_5151116 [label="_JOIN_5151116None...",shape=box];
	_JOIN_5151116 -> ForLoop5152111;
	_JOIN_5127278 [label="_JOIN_5127278None...",shape=box];
	_JOIN_5127278 -> _JOIN_5127280;
	5123052 [label="5123052  for (j=jj; j<=min(ny-1,jj+127); j=j+1) ...",shape=box];
	_JOIN_5127275 [label="_JOIN_5127275None...",shape=box];
	_JOIN_5127275 -> _JOIN_5127278;
	5243566 [label="5243566  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	ForLoop5111957 [label="ForLoop5111957  for (j=(min(ny-1,jj+127))-(((min(ny-1,jj+127))-(jj)+1)%20)+1; j<=min(ny-1,jj+127); j=j+1) {...",shape=box];
	ForLoop5111957 -> 5111956;
	ForLoop5111957 -> _JOIN_5111957;
	ForLoop5124642 [label="ForLoop5124642  for (j=jj; j<=min(ny-1,jj+127)-19; j=j+20) {...",shape=box];
	ForLoop5124642 -> 5123956;
	ForLoop5124642 -> _JOIN_5124642;
	_JOIN_5122169 [label="_JOIN_5122169None...",shape=box];
	_JOIN_5122169 -> 5122201;
	_JOIN_5150365 [label="_JOIN_5150365None...",shape=box];
	_JOIN_5150365 -> 5298270;
	5110254 [label="5110254  scv_39=scv_39+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	5110254 -> _JOIN_5110255;
	_JOIN_5150367 [label="_JOIN_5150367None...",shape=box];
	_JOIN_5150367 -> ForLoop5152113;
	_JOIN_5150363 [label="_JOIN_5150363None...",shape=box];
	_JOIN_5150363 -> _JOIN_5150365;
	_JOIN_5152070 [label="_JOIN_5152070None...",shape=box];
	_JOIN_5152070 -> ForLoop5152109;
	ForLoop5121238 [label="ForLoop5121238  for (j=jj; j<=min(ny-1,jj+127)-19; j=j+20) {...",shape=box];
	ForLoop5121238 -> 5120552;
	ForLoop5121238 -> _JOIN_5121238;
	ForLoop5117834 [label="ForLoop5117834  for (j=jj; j<=min(ny-1,jj+127)-19; j=j+20) {...",shape=box];
	ForLoop5117834 -> 5117148;
	ForLoop5117834 -> _JOIN_5117834;
	5121403 [label="5121403  scv_41=scv_41+A[(i+14)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_5120387 [label="_JOIN_5120387None...",shape=box];
	_JOIN_5120387 -> ForLoop5120467;
	_JOIN_5117063 [label="_JOIN_5117063None...",shape=box];
	_JOIN_5117063 -> 5117095;
	_JOIN_5123020 [label="_JOIN_5123020None...",shape=box];
	_JOIN_5123020 -> 5123052;
	5119648 [label="5119648  for (j=jj; j<=min(ny-1,jj+127); j=j+1) ...",shape=box];
	_JOIN_5116212 [label="_JOIN_5116212None...",shape=box];
	_JOIN_5116212 -> 5116244;
	5109625 [label="5109625  for (j=jj; j<=min(ny-1,jj+127); j=j+1) ...",shape=box];
	_JOIN_5116983 [label="_JOIN_5116983None...",shape=box];
	_JOIN_5116983 -> ForLoop5117063;
	5298270 [label="5298270  tmp[(i+20)]=scv_34;...",shape=box];
	5114595 [label="5114595  scv_43=scv_43+A[(i+6)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_4875335 [label="_JOIN_4875335None...",shape=box];
	_JOIN_4875335 -> 4875499;
	5121317 [label="5121317  scv_40=scv_40+A[(i+13)*ny+j]*x_copy[(j-jj)];...",shape=box];
	5121317 -> _JOIN_5121318;
	ForLoop5111026 [label="ForLoop5111026  for (j=jj; j<=min(ny-1,jj+127)-19; j=j+20) {...",shape=box];
	ForLoop5111026 -> 5110340;
	ForLoop5111026 -> _JOIN_5111026;
	ForLoop5150365 [label="ForLoop5150365  for (kk=0; kk<=ny-1; kk=kk+256) {...",shape=box];
	ForLoop5150365 -> ForLoop5149803;
	ForLoop5150365 -> _JOIN_5150365;
	5119701 [label="5119701  scv_35=scv_35+A[(i+12)*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop5150367 [label="ForLoop5150367  for (i=ii; i<=min(nx-1,ii+15)-20; i=i+21) {...",shape=box];
	ForLoop5150367 -> 5298252;
	ForLoop5150367 -> _JOIN_5150367;
	ForLoop5150363 [label="ForLoop5150363  for (k=kt; k<=min(ny-1,kk+255); k=k+1) {...",shape=box];
	ForLoop5150363 -> 5246278;
	ForLoop5150363 -> _JOIN_5150363;
	5118797 [label="5118797  for (j=jj; j<=min(ny-1,jj+127); j=j+1) ...",shape=box];
	ForLoop5127280 [label="ForLoop5127280  for (jjj=0; jjj<=ny-1; jjj=jjj+256) {...",shape=box];
	ForLoop5127280 -> ForLoop5127278;
	ForLoop5127280 -> _JOIN_5127280;
	ForLoop5127275 [label="ForLoop5127275  for (j=(min(ny-1,jj+127))-(((min(ny-1,jj+127))-(jj)+1)%20)+1; j<=min(ny-1,jj+127); j=j+1) {...",shape=box];
	ForLoop5127275 -> 5127274;
	ForLoop5127275 -> _JOIN_5127275;
	ForLoop5120387 [label="ForLoop5120387  for (j=jj; j<=min(ny-1,jj+127)-19; j=j+20) {...",shape=box];
	ForLoop5120387 -> 5119701;
	ForLoop5120387 -> _JOIN_5120387;
	ForLoop5113579 [label="ForLoop5113579  for (j=jj; j<=min(ny-1,jj+127)-19; j=j+20) {...",shape=box];
	ForLoop5113579 -> 5112893;
	ForLoop5113579 -> _JOIN_5113579;
	5113691 [label="5113691  for (j=jj; j<=min(ny-1,jj+127); j=j+1) ...",shape=box];
	_JOIN_5151041 [label="_JOIN_5151041None...",shape=box];
	_JOIN_5151041 -> ForLoop5151112;
	5308009 [label="5308009  double scv_88;...",shape=box];
	5115360 [label="5115360  scv_43=scv_43+A[(i+6)*ny+j]*x_copy[(j-jj)];...",shape=box];
	5115360 -> _JOIN_5115361;
	ForLoop5152111 [label="ForLoop5152111  for (kk=0; kk<=ny-1; kk=kk+256) {...",shape=box];
	ForLoop5152111 -> ForLoop5152070;
	ForLoop5152111 -> _JOIN_5152111;
	ForLoop5112808 [label="ForLoop5112808  for (j=(min(ny-1,jj+127))-(((min(ny-1,jj+127))-(jj)+1)%20)+1; j<=min(ny-1,jj+127); j=j+1) {...",shape=box];
	ForLoop5112808 -> 5112807;
	ForLoop5112808 -> _JOIN_5112808;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 4875156;
	5111138 [label="5111138  for (j=jj; j<=min(ny-1,jj+127); j=j+1) ...",shape=box];
	5118850 [label="5118850  scv_50=scv_50+A[(i+11)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_5127195 [label="_JOIN_5127195None...",shape=box];
	_JOIN_5127195 -> ForLoop5127275;
	ForLoop5116132 [label="ForLoop5116132  for (j=jj; j<=min(ny-1,jj+127)-19; j=j+20) {...",shape=box];
	ForLoop5116132 -> 5115446;
	ForLoop5116132 -> _JOIN_5116132;
	ForLoop5152113 [label="ForLoop5152113  for (i=(min(nx-1,ii+15))-(((min(nx-1,ii+15))-(ii)+1)%21)+1; i<=min(nx-1,ii+15); i=i+1) {...",shape=box];
	ForLoop5152113 -> 5308009;
	ForLoop5152113 -> _JOIN_5152113;
	5304014 [label="5304014  double scv_55, scv_56, scv_57, scv_58, scv_59, scv_60, scv_61, scv_62;...",shape=box];
	_JOIN_5121238 [label="_JOIN_5121238None...",shape=box];
	_JOIN_5121238 -> ForLoop5121318;
	ForLoop5111877 [label="ForLoop5111877  for (j=jj; j<=min(ny-1,jj+127)-19; j=j+20) {...",shape=box];
	ForLoop5111877 -> 5111191;
	ForLoop5111877 -> _JOIN_5111877;
	5304725 [label="5304725  double scv_87;...",shape=box];
	5125658 [label="5125658  scv_45=scv_45+A[(i+19)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_5112808 [label="_JOIN_5112808None...",shape=box];
	_JOIN_5112808 -> 5112840;
	ForLoop5126424 [label="ForLoop5126424  for (j=(min(ny-1,jj+127))-(((min(ny-1,jj+127))-(jj)+1)%20)+1; j<=min(ny-1,jj+127); j=j+1) {...",shape=box];
	ForLoop5126424 -> 5126423;
	ForLoop5126424 -> _JOIN_5126424;
	5113744 [label="5113744  scv_48=scv_48+A[(i+5)*ny+j]*x_copy[(j-jj)];...",shape=box];
	5123019 [label="5123019  scv_44=scv_44+A[(i+15)*ny+j]*x_copy[(j-jj)];...",shape=box];
	5123019 -> _JOIN_5123020;
	ForLoop5126344 [label="ForLoop5126344  for (j=jj; j<=min(ny-1,jj+127)-19; j=j+20) {...",shape=box];
	ForLoop5126344 -> 5125658;
	ForLoop5126344 -> _JOIN_5126344;
	ForLoop5121318 [label="ForLoop5121318  for (j=(min(ny-1,jj+127))-(((min(ny-1,jj+127))-(jj)+1)%20)+1; j<=min(ny-1,jj+127); j=j+1) {...",shape=box];
	ForLoop5121318 -> 5121317;
	ForLoop5121318 -> _JOIN_5121318;
	_JOIN_5110184 [label="_JOIN_5110184None...",shape=box];
	_JOIN_5110184 -> ForLoop5110255;
	ForLoop5124722 [label="ForLoop5124722  for (j=(min(ny-1,jj+127))-(((min(ny-1,jj+127))-(jj)+1)%20)+1; j<=min(ny-1,jj+127); j=j+1) {...",shape=box];
	ForLoop5124722 -> 5124721;
	ForLoop5124722 -> _JOIN_5124722;
	ForLoop5122089 [label="ForLoop5122089  for (j=jj; j<=min(ny-1,jj+127)-19; j=j+20) {...",shape=box];
	ForLoop5122089 -> 5121403;
	ForLoop5122089 -> _JOIN_5122089;
	_JOIN_5151112 [label="_JOIN_5151112None...",shape=box];
	_JOIN_5151112 -> _JOIN_5151115;
	5116297 [label="5116297  scv_54=scv_54+A[(i+8)*ny+j]*x_copy[(j-jj)];...",shape=box];
	5123956 [label="5123956  scv_52=scv_52+A[(i+17)*ny+j]*x_copy[(j-jj)];...",shape=box];
	4875156 [label="4875156  int i;...",shape=box];
	ForLoop5119536 [label="ForLoop5119536  for (j=jj; j<=min(ny-1,jj+127)-19; j=j+20) {...",shape=box];
	ForLoop5119536 -> 5118850;
	ForLoop5119536 -> _JOIN_5119536;
	4875403 [label="4875403  y[i]=0.0;...",shape=box];
	4875403 -> _JOIN_4875404;
	ForLoop4875404 [label="ForLoop4875404  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop4875404 -> 4875403;
	ForLoop4875404 -> _JOIN_4875404;
	ForLoop5122169 [label="ForLoop5122169  for (j=(min(ny-1,jj+127))-(((min(ny-1,jj+127))-(jj)+1)%20)+1; j<=min(ny-1,jj+127); j=j+1) {...",shape=box];
	ForLoop5122169 -> 5122168;
	ForLoop5122169 -> _JOIN_5122169;
	_JOIN_5111957 [label="_JOIN_5111957None...",shape=box];
	_JOIN_5111957 -> 5111989;
	ForLoop5123871 [label="ForLoop5123871  for (j=(min(ny-1,jj+127))-(((min(ny-1,jj+127))-(jj)+1)%20)+1; j<=min(ny-1,jj+127); j=j+1) {...",shape=box];
	ForLoop5123871 -> 5123870;
	ForLoop5123871 -> _JOIN_5123871;
	ForLoop5115281 [label="ForLoop5115281  for (j=jj; j<=min(ny-1,jj+127)-19; j=j+20) {...",shape=box];
	ForLoop5115281 -> 5114595;
	ForLoop5115281 -> _JOIN_5115281;
	5150482 [label="5150482  for (j=jj; j<=min(ny-1,jj+127); j=j+1) ...",shape=box];
	_JOIN_5126424 [label="_JOIN_5126424None...",shape=box];
	_JOIN_5126424 -> 5126456;
	5115393 [label="5115393  for (j=jj; j<=min(ny-1,jj+127); j=j+1) ...",shape=box];
	5116211 [label="5116211  scv_42=scv_42+A[(i+7)*ny+j]*x_copy[(j-jj)];...",shape=box];
	5116211 -> _JOIN_5116212;
	_JOIN_5119616 [label="_JOIN_5119616None...",shape=box];
	_JOIN_5119616 -> 5119648;
	5150526 [label="5150526  scv_88=scv_88+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop5122940 [label="ForLoop5122940  for (j=jj; j<=min(ny-1,jj+127)-19; j=j+20) {...",shape=box];
	ForLoop5122940 -> 5122254;
	ForLoop5122940 -> _JOIN_5122940;
	5112840 [label="5112840  for (j=jj; j<=min(ny-1,jj+127); j=j+1) ...",shape=box];
	5308021 [label="5308021  tmp[i]=scv_88;...",shape=box];
	5308021 -> _JOIN_5152113;
	5111989 [label="5111989  for (j=jj; j<=min(ny-1,jj+127); j=j+1) ...",shape=box];
	5111191 [label="5111191  scv_49=scv_49+A[(i+2)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_5111877 [label="_JOIN_5111877None...",shape=box];
	_JOIN_5111877 -> ForLoop5111957;
	_JOIN_5113659 [label="_JOIN_5113659None...",shape=box];
	_JOIN_5113659 -> 5113691;
	ForLoop5118685 [label="ForLoop5118685  for (j=jj; j<=min(ny-1,jj+127)-19; j=j+20) {...",shape=box];
	ForLoop5118685 -> 5117999;
	ForLoop5118685 -> _JOIN_5118685;
	ForLoop5149803 [label="ForLoop5149803  for (kt=kk; kt<=min(ny-1,kk+255)-31; kt=kt+32) {...",shape=box];
	ForLoop5149803 -> 5243566;
	ForLoop5149803 -> _JOIN_5149803;
	ForLoop5116983 [label="ForLoop5116983  for (j=jj; j<=min(ny-1,jj+127)-19; j=j+20) {...",shape=box];
	ForLoop5116983 -> 5116297;
	ForLoop5116983 -> _JOIN_5116983;
	_JOIN_5115281 [label="_JOIN_5115281None...",shape=box];
	_JOIN_5115281 -> ForLoop5115361;
	ForLoop5116212 [label="ForLoop5116212  for (j=(min(ny-1,jj+127))-(((min(ny-1,jj+127))-(jj)+1)%20)+1; j<=min(ny-1,jj+127); j=j+1) {...",shape=box];
	ForLoop5116212 -> 5116211;
	ForLoop5116212 -> _JOIN_5116212;
	5110340 [label="5110340  scv_36=scv_36+A[(i+1)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_5149803 [label="_JOIN_5149803None...",shape=box];
	_JOIN_5149803 -> ForLoop5150363;
	ForLoop5114430 [label="ForLoop5114430  for (j=jj; j<=min(ny-1,jj+127)-19; j=j+20) {...",shape=box];
	ForLoop5114430 -> 5113744;
	ForLoop5114430 -> _JOIN_5114430;
	_JOIN_5118685 [label="_JOIN_5118685None...",shape=box];
	_JOIN_5118685 -> ForLoop5118765;
	5124721 [label="5124721  scv_52=scv_52+A[(i+17)*ny+j]*x_copy[(j-jj)];...",shape=box];
	5124721 -> _JOIN_5124722;
	5112042 [label="5112042  scv_38=scv_38+A[(i+3)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_5114510 [label="_JOIN_5114510None...",shape=box];
	_JOIN_5114510 -> 5114542;
	5124807 [label="5124807  scv_53=scv_53+A[(i+18)*ny+j]*x_copy[(j-jj)];...",shape=box];
	4875499 [label="4875499  register int cbv_2, cbv_3;...",shape=box];
	5117946 [label="5117946  for (j=jj; j<=min(ny-1,jj+127); j=j+1) ...",shape=box];
	ForLoop5151115 [label="ForLoop5151115  for (jj=jjj; jj<=min(ny-1,jjj+128); jj=jj+128) {...",shape=box];
	ForLoop5151115 -> 5150482;
	ForLoop5151115 -> _JOIN_5151115;
	ForLoop5151116 [label="ForLoop5151116  for (jjj=0; jjj<=ny-1; jjj=jjj+256) {...",shape=box];
	ForLoop5151116 -> ForLoop5151115;
	ForLoop5151116 -> _JOIN_5151116;
	5120466 [label="5120466  scv_35=scv_35+A[(i+12)*ny+j]*x_copy[(j-jj)];...",shape=box];
	5120466 -> _JOIN_5120467;
	_JOIN_5119536 [label="_JOIN_5119536None...",shape=box];
	_JOIN_5119536 -> ForLoop5119616;
	5114542 [label="5114542  for (j=jj; j<=min(ny-1,jj+127); j=j+1) ...",shape=box];
	_JOIN_5115361 [label="_JOIN_5115361None...",shape=box];
	_JOIN_5115361 -> 5115393;
	5109324 [label="5109324  double x_copy[128];...",shape=box];
	ForLoop5127195 [label="ForLoop5127195  for (j=jj; j<=min(ny-1,jj+127)-19; j=j+20) {...",shape=box];
	ForLoop5127195 -> 5126509;
	ForLoop5127195 -> _JOIN_5127195;
	ForLoop5120467 [label="ForLoop5120467  for (j=(min(ny-1,jj+127))-(((min(ny-1,jj+127))-(jj)+1)%20)+1; j<=min(ny-1,jj+127); j=j+1) {...",shape=box];
	ForLoop5120467 -> 5120466;
	ForLoop5120467 -> _JOIN_5120467;
	_JOIN_5122089 [label="_JOIN_5122089None...",shape=box];
	_JOIN_5122089 -> ForLoop5122169;
	ForLoop5112728 [label="ForLoop5112728  for (j=jj; j<=min(ny-1,jj+127)-19; j=j+20) {...",shape=box];
	ForLoop5112728 -> 5112042;
	ForLoop5112728 -> _JOIN_5112728;
	5123870 [label="5123870  scv_47=scv_47+A[(i+16)*ny+j]*x_copy[(j-jj)];...",shape=box];
	5123870 -> _JOIN_5123871;
	ForLoop5110184 [label="ForLoop5110184  for (j=jj; j<=min(ny-1,jj+127)-19; j=j+20) {...",shape=box];
	ForLoop5110184 -> 5109669;
	ForLoop5110184 -> _JOIN_5110184;
	_JOIN_5120467 [label="_JOIN_5120467None...expected=9369846271501.798828
actual=9369846271501.798828
",shape=box];
	_JOIN_5120467 -> 5120499;
	5111105 [label="5111105  scv_36=scv_36+A[(i+1)*ny+j]*x_copy[(j-jj)];...",shape=box];
	5111105 -> _JOIN_5111106;
	5151111 [label="5151111  scv_88=scv_88+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	5151111 -> _JOIN_5151112;
	ForLoop5152115 [label="ForLoop5152115  for (ii=iii; ii<=min(nx-1,iii+112); ii=ii+16) {...",shape=box];
	ForLoop5152115 -> 5109357;
	ForLoop5152115 -> _JOIN_5152115;
	ForLoop5152116 [label="ForLoop5152116  for (iii=0; iii<=nx-1; iii=iii+128) {...",shape=box];
	ForLoop5152116 -> ForLoop5152115;
	ForLoop5152116 -> _JOIN_5152116;
	5121350 [label="5121350  for (j=jj; j<=min(ny-1,jj+127); j=j+1) ...",shape=box];
	5246278 [label="5246278  double scv_33;...",shape=box];
	ForLoop5151041 [label="ForLoop5151041  for (j=jj; j<=min(ny-1,jj+127)-19; j=j+20) {...",shape=box];
	ForLoop5151041 -> 5150526;
	ForLoop5151041 -> _JOIN_5151041;
	ForLoop5118765 [label="ForLoop5118765  for (j=(min(ny-1,jj+127))-(((min(ny-1,jj+127))-(jj)+1)%20)+1; j<=min(ny-1,jj+127); j=j+1) {...",shape=box];
	ForLoop5118765 -> 5118764;
	ForLoop5118765 -> _JOIN_5118765;
	5124754 [label="5124754  for (j=jj; j<=min(ny-1,jj+127); j=j+1) ...",shape=box];
	_JOIN_5121318 [label="_JOIN_5121318None...",shape=box];
	_JOIN_5121318 -> 5121350;
	ForLoop5125493 [label="ForLoop5125493  for (j=jj; j<=min(ny-1,jj+127)-19; j=j+20) {...",shape=box];
	ForLoop5125493 -> 5124807;
	ForLoop5125493 -> _JOIN_5125493;
	5122254 [label="5122254  scv_44=scv_44+A[(i+15)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_5111106 [label="_JOIN_5111106None...",shape=box];
	_JOIN_5111106 -> 5111138;
	ForLoop5152070 [label="ForLoop5152070  for (kt=kk; kt<=min(ny-1,kk+255)-31; kt=kt+32) {...",shape=box];
	ForLoop5152070 -> 5304014;
	ForLoop5152070 -> _JOIN_5152070;
	5109669 [label="5109669  scv_39=scv_39+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	5109357 [label="5109357  int i;...",shape=box];
	5109357 -> ForLoop5150367;
	ForLoop5117914 [label="ForLoop5117914  for (j=(min(ny-1,jj+127))-(((min(ny-1,jj+127))-(jj)+1)%20)+1; j<=min(ny-1,jj+127); j=j+1) {...",shape=box];
	ForLoop5117914 -> 5117913;
	ForLoop5117914 -> _JOIN_5117914;
	_JOIN_5151115 [label="_JOIN_5151115None...",shape=box];
	_JOIN_5151115 -> _JOIN_5151116;
	ForLoop5123791 [label="ForLoop5123791  for (j=jj; j<=min(ny-1,jj+127)-19; j=j+20) {...",shape=box];
	ForLoop5123791 -> 5123105;
	ForLoop5123791 -> _JOIN_5123791;
	ForLoop5111106 [label="ForLoop5111106  for (j=(min(ny-1,jj+127))-(((min(ny-1,jj+127))-(jj)+1)%20)+1; j<=min(ny-1,jj+127); j=j+1) {...",shape=box];
	ForLoop5111106 -> 5111105;
	ForLoop5111106 -> _JOIN_5111106;
	ForLoop5113659 [label="ForLoop5113659  for (j=(min(ny-1,jj+127))-(((min(ny-1,jj+127))-(jj)+1)%20)+1; j<=min(ny-1,jj+127); j=j+1) {...",shape=box];
	ForLoop5113659 -> 5113658;
	ForLoop5113659 -> _JOIN_5113659;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest19.exe __orio_perftest19.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest19.exe  
{'[1, 4, 5, 2, 3, 0, 1, 0, 5, 20, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.141628}
{'[1, 4, 5, 2, 3, 0, 1, 0, 5, 20, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.141622}
{'[1, 4, 5, 2, 3, 0, 1, 0, 5, 20, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.141611}
{'[1, 4, 5, 2, 3, 0, 1, 0, 5, 20, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.142608}
{'[1, 4, 5, 2, 3, 0, 1, 0, 5, 20, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.141551}
{'[1, 4, 5, 2, 3, 0, 1, 0, 5, 20, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.141914}
{'[1, 4, 5, 2, 3, 0, 1, 0, 5, 20, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.141539}
{'[1, 4, 5, 2, 3, 0, 1, 0, 5, 20, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.141625}
{'[1, 4, 5, 2, 3, 0, 1, 0, 5, 20, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.14158}
{'[1, 4, 5, 2, 3, 0, 1, 0, 5, 20, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.141572}
{'[1, 4, 5, 2, 3, 0, 1, 0, 5, 20, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.141664}
{'[1, 4, 5, 2, 3, 0, 1, 0, 5, 20, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.141649}
{'[1, 4, 5, 2, 3, 0, 1, 0, 5, 20, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.141655}
{'[1, 4, 5, 2, 3, 0, 1, 0, 5, 20, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.141563}
{'[1, 4, 5, 2, 3, 0, 1, 0, 5, 20, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.141602}
{'[1, 4, 5, 2, 3, 0, 1, 0, 5, 20, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.141608}
{'[1, 4, 5, 2, 3, 0, 1, 0, 5, 20, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.141925}
{'[1, 4, 5, 2, 3, 0, 1, 0, 5, 20, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.142575}
{'[1, 4, 5, 2, 3, 0, 1, 0, 5, 20, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.141742}
{'[1, 4, 5, 2, 3, 0, 1, 0, 5, 20, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.141613}
{'[1, 4, 5, 2, 3, 0, 1, 0, 5, 20, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.141566}
{'[1, 4, 5, 2, 3, 0, 1, 0, 5, 20, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.1416}
{'[1, 4, 5, 2, 3, 0, 1, 0, 5, 20, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.141539}
{'[1, 4, 5, 2, 3, 0, 1, 0, 5, 20, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.141516}
{'[1, 4, 5, 2, 3, 0, 1, 0, 5, 20, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.141683}
{'[1, 4, 5, 2, 3, 0, 1, 0, 5, 20, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.14161}
{'[1, 4, 5, 2, 3, 0, 1, 0, 5, 20, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.141687}
{'[1, 4, 5, 2, 3, 0, 1, 0, 5, 20, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.141842}
{'[1, 4, 5, 2, 3, 0, 1, 0, 5, 20, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.14155}
{'[1, 4, 5, 2, 3, 0, 1, 0, 5, 20, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.141565}

out:
 ["{'[1, 4, 5, 2, 3, 0, 1, 0, 5, 20, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.141628}", "{'[1, 4, 5, 2, 3, 0, 1, 0, 5, 20, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.141622}", "{'[1, 4, 5, 2, 3, 0, 1, 0, 5, 20, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.141611}", "{'[1, 4, 5, 2, 3, 0, 1, 0, 5, 20, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.142608}", "{'[1, 4, 5, 2, 3, 0, 1, 0, 5, 20, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.141551}", "{'[1, 4, 5, 2, 3, 0, 1, 0, 5, 20, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.141914}", "{'[1, 4, 5, 2, 3, 0, 1, 0, 5, 20, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.141539}", "{'[1, 4, 5, 2, 3, 0, 1, 0, 5, 20, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.141625}", "{'[1, 4, 5, 2, 3, 0, 1, 0, 5, 20, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.14158}", "{'[1, 4, 5, 2, 3, 0, 1, 0, 5, 20, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.141572}", "{'[1, 4, 5, 2, 3, 0, 1, 0, 5, 20, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.141664}", "{'[1, 4, 5, 2, 3, 0, 1, 0, 5, 20, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.141649}", "{'[1, 4, 5, 2, 3, 0, 1, 0, 5, 20, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.141655}", "{'[1, 4, 5, 2, 3, 0, 1, 0, 5, 20, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.141563}", "{'[1, 4, 5, 2, 3, 0, 1, 0, 5, 20, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.141602}", "{'[1, 4, 5, 2, 3, 0, 1, 0, 5, 20, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.141608}", "{'[1, 4, 5, 2, 3, 0, 1, 0, 5, 20, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.141925}", "{'[1, 4, 5, 2, 3, 0, 1, 0, 5, 20, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.142575}", "{'[1, 4, 5, 2, 3, 0, 1, 0, 5, 20, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.141742}", "{'[1, 4, 5, 2, 3, 0, 1, 0, 5, 20, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.141613}", "{'[1, 4, 5, 2, 3, 0, 1, 0, 5, 20, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.141566}", "{'[1, 4, 5, 2, 3, 0, 1, 0, 5, 20, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.1416}", "{'[1, 4, 5, 2, 3, 0, 1, 0, 5, 20, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.141539}", "{'[1, 4, 5, 2, 3, 0, 1, 0, 5, 20, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.141516}", "{'[1, 4, 5, 2, 3, 0, 1, 0, 5, 20, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.141683}", "{'[1, 4, 5, 2, 3, 0, 1, 0, 5, 20, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.14161}", "{'[1, 4, 5, 2, 3, 0, 1, 0, 5, 20, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.141687}", "{'[1, 4, 5, 2, 3, 0, 1, 0, 5, 20, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.141842}", "{'[1, 4, 5, 2, 3, 0, 1, 0, 5, 20, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.14155}", "{'[1, 4, 5, 2, 3, 0, 1, 0, 5, 20, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.141565}"]
returning from 'run': {'[1, 4, 5, 2, 3, 0, 1, 0, 5, 20, 19, 0, 0, 0, 2, 1, 1, 0]': ([0.141628, 0.141622, 0.141611, 0.142608, 0.141551, 0.141914, 0.141539, 0.141625, 0.14158, 0.141572, 0.141664, 0.141649, 0.141655, 0.141563, 0.141602, 0.141608, 0.141925, 0.142575, 0.141742, 0.141613, 0.141566, 0.1416, 0.141539, 0.141516, 0.141683, 0.14161, 0.141687, 0.141842, 0.14155, 0.141565], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.141628, 0.141622, 0.141611, 0.142608, 0.141551, 0.141914, 0.141539, 0.141625, 0.14158, 0.141572, 0.141664, 0.141649, 0.141655, 0.141563, 0.141602, 0.141608, 0.141925, 0.142575, 0.141742, 0.141613, 0.141566, 0.1416, 0.141539, 0.141516, 0.141683, 0.14161, 0.141687, WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
0.141842, 0.14155, 0.141565], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[1, 4, 5, 2, 3, 0, 1, 0, 5, 20, 19, 0, 0, 0, 2, 1, 1, 0]': ([0.141628, 0.141622, 0.141611, 0.142608, 0.141551, 0.141914, 0.141539, 0.141625, 0.14158, 0.141572, 0.141664, 0.141649, 0.141655, 0.141563, 0.141602, 0.141608, 0.141925, 0.142575, 0.141742, 0.141613, 0.141566, 0.1416, 0.141539, 0.141516, 0.141683, 0.14161, 0.141687, 0.141842, 0.14155, 0.141565], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [6, 1, 4, 4, 0, 3, 0, 1, 2, 1, 7, 0, 2, 0, 0, 1, 0, 0]
Fixed Factors: {}
Testing candidate 20: [6, 1, 4, 4, 0, 3, 0, 1, 2, 1, 7, 0, 2, 0, 0, 1, 0, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	32
        Max loop nest depth: 	5
        Additions: 		1497
        Multiplications: 	700
        Divisions: 		0
        Logical: 		0
        Reads: 			3023
        Writes: 		524
        Comparisons:		32
        Gotos: 			0
        
digraph CFG {
	ForLoop5488675 [label="ForLoop5488675  for (j=jj; j<=min(ny-1,jj+15)-7; j=j+8) {...",shape=box];
	ForLoop5488675 -> 5525317;
	ForLoop5488675 -> _JOIN_5488675;
	5489121 [label="5489121  scv_56=scv_56+A[i*ny+j]*x[j];...",shape=box];
	_JOIN_5489366 [label="_JOIN_5489366None...",shape=box];
	_JOIN_5489366 -> _JOIN_5489368;
	ForLoop5488140 [label="ForLoop5488140  for (it=ii; it<=min(nx-1,ii+511)-31; it=it+32) {...",shape=box];
	ForLoop5488140 -> 5523408;
	ForLoop5488140 -> _JOIN_5488140;
	5489081 [label="5489081  int j;...",shape=box];
	5489081 -> ForLoop5489298;
	5477540 [label="5477540  int j;...",shape=box];
	5477540 -> ForLoop5486034;
	_JOIN_5489508 [label="_JOIN_5489508None...",shape=box];
	_JOIN_5489508 -> _JOIN_5489509;
	5488190 [label="5488190  int j;...",shape=box];
	_JOIN_5488946 [label="_JOIN_5488946None...",shape=box];
	_JOIN_5488946 -> 5488977;
	5525521 [label="5525521  double scv_51;...",shape=box];
	_JOIN_5489475 [label="_JOIN_5489475None...",shape=box];
	_JOIN_5489475 -> 5489506;
	_JOIN_5489368 [label="_JOIN_5489368None...",shape=box];
	_JOIN_5489368 -> ForLoop5489509;
	_JOIN_5488775 [label="_JOIN_5488775None...",shape=box];
	_JOIN_5488775 -> ForLoop5489012;
	5367611 [label="5367611  y[i]=0.0;...",shape=box];
	5367611 -> _JOIN_5367612;
	5489506 [label="5489506  for (k=kk; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	5489506 -> _JOIN_5489508;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 5367436;
	ForLoop5488137 [label="ForLoop5488137  for (kk=kkk; kk<=min(ny-1,kkk+128); kk=kk+128) {...",shape=box];
	ForLoop5488137 -> 5487066;
	ForLoop5488137 -> _JOIN_5488137;
	_JOIN_5488675 [label="_JOIN_5488675None...",shape=box];
	_JOIN_5488675 -> ForLoop5488773;
	ForLoop5486034 [label="ForLoop5486034  for (j=jj; j<=min(ny-1,jj+15)-7; j=j+8) {...",shape=box];
	ForLoop5486034 -> 5501220;
	ForLoop5486034 -> _JOIN_5486034;
	_JOIN_5487004 [label="_JOIN_5487004None...",shape=box];
	_JOIN_5487004 -> ForLoop5488138;
	5367523 [label="5367523  y[i]=0.0;...",shape=box];
	_JOIN_5487002 [label="_JOIN_5487002None...",shape=box];
	_JOIN_5487002 -> _JOIN_5487004;
	5501220 [label="5501220  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	5489430 [label="5489430  for (k=kk; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	5489430 -> ForLoop5489475;
	ForLoop5489511 [label="ForLoop5489511  for (i=(min(nx-1,ii+511))-(((min(nx-1,ii+511))-(it)+1)%2)+1; i<=min(nx-1,ii+511); i=i+1) {...",shape=box];
	ForLoop5489511 -> 5529154;
	ForLoop5489511 -> _JOIN_5489511;
	_JOIN_5367543 [label="_JOIN_5367543None...",shape=box];
	_JOIN_5367543 -> ForLoop5367612;
	5512526 [label="5512526  double scv_10;...",shape=box];
	5488141 [label="5488141  int i;...",shape=box];
	5488141 -> ForLoop5489014;
	_JOIN_5489511 [label="_JOIN_5489511None...",shape=box];
	_JOIN_5489511 -> _JOIN_5489514;
	_JOIN_5488137 [label="_JOIN_5488137None...",shape=box];
	_JOIN_5488137 -> _JOIN_5488138;
	_JOIN_5489509 [label="_JOIN_5489509None...",shape=box];
	_JOIN_5489509 -> 5529166;
	ForLoop5489514 [label="ForLoop5489514  for (ii=0; ii<=nx-1; ii=ii+512) {...",shape=box];
	ForLoop5489514 -> ForLoop5488140;
	ForLoop5489514 -> _JOIN_5489514;
	ForLoop5488775 [label="ForLoop5488775  for (jj=0; jj<=ny-1; jj=jj+16) {...",shape=box];
	ForLoop5488775 -> 5488190;
	ForLoop5488775 -> _JOIN_5488775;
	5477486 [label="5477486  double x_copy;...",shape=box];
	_JOIN_5488773 [label="_JOIN_5488773None...",shape=box];
	_JOIN_5488773 -> _JOIN_5488775;
	5487066 [label="5487066  for (k=kk; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	5487066 -> ForLoop5488104;
	ForLoop5489368 [label="ForLoop5489368  for (jj=0; jj<=ny-1; jj=jj+16) {...",shape=box];
	ForLoop5489368 -> 5489081;
	ForLoop5489368 -> _JOIN_5489368;
	5527560 [label="5527560  tmp[(i+1)]=scv_53;...",shape=box];
	ForLoop5487004 [label="ForLoop5487004  for (jj=0; jj<=ny-1; jj=jj+16) {...",shape=box];
	ForLoop5487004 -> 5477540;
	ForLoop5487004 -> _JOIN_5487004;
	5526214 [label="5526214  double scv_52;...",shape=box];
	ForLoop5487002 [label="ForLoop5487002  for (j=(min(ny-1,jj+15))-(((min(ny-1,jj+15))-(jj)+1)%8)+1; j<=min(ny-1,jj+15); j=j+1) {...",shape=box];
	ForLoop5487002 -> 5502834;
	ForLoop5487002 -> _JOIN_5487002;
	_JOIN_5489514 [label="_JOIN_5489514None...",shape=box];
	ForLoop5488138 [label="ForLoop5488138  for (kkk=0; kkk<=ny-1; kkk=kkk+256) {...",shape=box];
	ForLoop5488138 -> ForLoop5488137;
	ForLoop5488138 -> _JOIN_5488138;
	_JOIN_5367612 [label="_JOIN_5367612None...",shape=box];
	_JOIN_5367612 -> 5477486;
	ForLoop5489366 [label="ForLoop5489366  for (j=(min(ny-1,jj+15))-(((min(ny-1,jj+15))-(jj)+1)%8)+1; j<=min(ny-1,jj+15); j=j+1) {...",shape=box];
	ForLoop5489366 -> 5489365;
	ForLoop5489366 -> _JOIN_5489366;
	ForLoop5367543 [label="ForLoop5367543  for (i=0; i<=ny-3; i=i+3) {...",shape=box];
	ForLoop5367543 -> 5367523;
	ForLoop5367543 -> _JOIN_5367543;
	5367436 [label="5367436  int i;...",shape=box];
	5367436 -> ForLoop5367543;
	5523420 [label="5523420  tmp[it]=scv_11;...",shape=box];
	5488977 [label="5488977  for (k=kk; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	5523408 [label="5523408  double scv_11, scv_12, scv_13, scv_14, scv_15, scv_16, scv_17, scv_18;...",shape=box];
	ForLoop5367612 [label="ForLoop5367612  for (i=ny-((ny-(0))%3); i<=ny-1; i=i+1) ...",shape=box];
	ForLoop5367612 -> 5367611;
	ForLoop5367612 -> _JOIN_5367612;
	_JOIN_5489298 [label="_JOIN_5489298None...",shape=box];
	_JOIN_5489298 -> ForLoop5489366;
	5489365 [label="5489365  scv_56=scv_56+A[i*ny+j]*x[j];...",shape=box];
	5489365 -> _JOIN_5489366;
	5502834 [label="5502834  double scv_9;...",shape=box];
	_JOIN_5488138 [label="_JOIN_5488138None...",shape=box];
	_JOIN_5488138 -> 5523420;
	5527542 [label="5527542  double scv_53, scv_54;...",shape=box];
	5488837 [label="5488837  for (k=kk; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	5529154 [label="5529154  double scv_56;...",shape=box];
	ForLoop5489012 [label="ForLoop5489012  for (kkk=0; kkk<=ny-1; kkk=kkk+256) {...",shape=box];
	ForLoop5489012 -> ForLoop5489010;
	ForLoop5489012 -> _JOIN_5489012;
	ForLoop5489508 [label="ForLoop5489508  for (kk=kkk; kk<=min(ny-1,kkk+128); kk=kk+128) {...",shape=box];
	ForLoop5489508 -> 5489430;
	ForLoop5489508 -> _JOIN_5489508;
	ForLoop5489010 [label="ForLoop5489010  for (kk=kkk; kk<=min(ny-1,kkk+128); kk=kk+128) {...",shape=box];
	ForLoop5489010 -> 5488837;
	ForLoop5489010 -> _JOIN_5489010;
	_JOIN_5488104 [label="_JOIN_5488104None...",shape=box];
	_JOIN_5488104 -> 5488135;
	ForLoop5489298 [label="ForLoop5489298  for (j=jj; j<=min(ny-1,jj+15)-7; j=j+8) {...",shape=box];
	ForLoop5489298 -> 5489121;
	ForLoop5489298 -> _JOIN_5489298;
	5525317 [label="5525317  double scv_43, scv_44, scv_45, scv_46, scv_47, scv_48, scv_49, scv_50;...",shape=box];
	ForLoop5489014 [label="ForLoop5489014  for (i=it; i<=min(nx-1,ii+511)-1; i=i+2) {...",shape=box];
	ForLoop5489014 -> 5527542;
	ForLoop5489014 -> _JOIN_5489014;
	5529166 [label="5529166  tmp[i]=scv_56;...",shape=box];
	5529166 -expected=9369846271501.798828
actual=9369846271501.798828
> _JOIN_5489511;
	5528357 [label="5528357  double scv_55;...",shape=box];
	ForLoop5488773 [label="ForLoop5488773  for (j=(min(ny-1,jj+15))-(((min(ny-1,jj+15))-(jj)+1)%8)+1; j<=min(ny-1,jj+15); j=j+1) {...",shape=box];
	ForLoop5488773 -> 5525521;
	ForLoop5488773 -> _JOIN_5488773;
	5488135 [label="5488135  for (k=kk; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	5488135 -> _JOIN_5488137;
	ForLoop5488946 [label="ForLoop5488946  for (k=kk; k<=min(ny-1,kk+127); k=k+1) {...",shape=box];
	ForLoop5488946 -> 5526214;
	ForLoop5488946 -> _JOIN_5488946;
	_JOIN_5486034 [label="_JOIN_5486034None...",shape=box];
	_JOIN_5486034 -> ForLoop5487002;
	ForLoop5489475 [label="ForLoop5489475  for (k=kk; k<=min(ny-1,kk+127); k=k+1) {...",shape=box];
	ForLoop5489475 -> 5528357;
	ForLoop5489475 -> _JOIN_5489475;
	_JOIN_5489014 [label="_JOIN_5489014None...",shape=box];
	_JOIN_5489014 -> ForLoop5489511;
	_JOIN_5488140 [label="_JOIN_5488140None...",shape=box];
	_JOIN_5488140 -> 5488141;
	_JOIN_5489012 [label="_JOIN_5489012None...",shape=box];
	_JOIN_5489012 -> 5527560;
	ForLoop5489509 [label="ForLoop5489509  for (kkk=0; kkk<=ny-1; kkk=kkk+256) {...",shape=box];
	ForLoop5489509 -> ForLoop5489508;
	ForLoop5489509 -> _JOIN_5489509;
	_JOIN_5489010 [label="_JOIN_5489010None...",shape=box];
	_JOIN_5489010 -> _JOIN_5489012;
	ForLoop5488104 [label="ForLoop5488104  for (k=kk; k<=min(ny-1,kk+127); k=k+1) {...",shape=box];
	ForLoop5488104 -> 5512526;
	ForLoop5488104 -> _JOIN_5488104;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest20.exe __orio_perftest20.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest20.exe  
{'[6, 1, 4, 4, 0, 3, 0, 1, 2, 1, 7, 0, 2, 0, 0, 1, 0, 0]' : 0.190672}
{'[6, 1, 4, 4, 0, 3, 0, 1, 2, 1, 7, 0, 2, 0, 0, 1, 0, 0]' : 0.18894}
{'[6, 1, 4, 4, 0, 3, 0, 1, 2, 1, 7, 0, 2, 0, 0, 1, 0, 0]' : 0.189586}
{'[6, 1, 4, 4, 0, 3, 0, 1, 2, 1, 7, 0, 2, 0, 0, 1, 0, 0]' : 0.189095}
{'[6, 1, 4, 4, 0, 3, 0, 1, 2, 1, 7, 0, 2, 0, 0, 1, 0, 0]' : 0.189648}
{'[6, 1, 4, 4, 0, 3, 0, 1, 2, 1, 7, 0, 2, 0, 0, 1, 0, 0]' : 0.193555}
{'[6, 1, 4, 4, 0, 3, 0, 1, 2, 1, 7, 0, 2, 0, 0, 1, 0, 0]' : 0.190269}
{'[6, 1, 4, 4, 0, 3, 0, 1, 2, 1, 7, 0, 2, 0, 0, 1, 0, 0]' : 0.190396}
{'[6, 1, 4, 4, 0, 3, 0, 1, 2, 1, 7, 0, 2, 0, 0, 1, 0, 0]' : 0.190745}
{'[6, 1, 4, 4, 0, 3, 0, 1, 2, 1, 7, 0, 2, 0, 0, 1, 0, 0]' : 0.189282}
{'[6, 1, 4, 4, 0, 3, 0, 1, 2, 1, 7, 0, 2, 0, 0, 1, 0, 0]' : 0.189217}
{'[6, 1, 4, 4, 0, 3, 0, 1, 2, 1, 7, 0, 2, 0, 0, 1, 0, 0]' : 0.190227}
{'[6, 1, 4, 4, 0, 3, 0, 1, 2, 1, 7, 0, 2, 0, 0, 1, 0, 0]' : 0.189394}
{'[6, 1, 4, 4, 0, 3, 0, 1, 2, 1, 7, 0, 2, 0, 0, 1, 0, 0]' : 0.194486}
{'[6, 1, 4, 4, 0, 3, 0, 1, 2, 1, 7, 0, 2, 0, 0, 1, 0, 0]' : 0.190008}
{'[6, 1, 4, 4, 0, 3, 0, 1, 2, 1, 7, 0, 2, 0, 0, 1, 0, 0]' : 0.188814}
{'[6, 1, 4, 4, 0, 3, 0, 1, 2, 1, 7, 0, 2, 0, 0, 1, 0, 0]' : 0.189391}
{'[6, 1, 4, 4, 0, 3, 0, 1, 2, 1, 7, 0, 2, 0, 0, 1, 0, 0]' : 0.187971}
{'[6, 1, 4, 4, 0, 3, 0, 1, 2, 1, 7, 0, 2, 0, 0, 1, 0, 0]' : 0.189115}
{'[6, 1, 4, 4, 0, 3, 0, 1, 2, 1, 7, 0, 2, 0, 0, 1, 0, 0]' : 0.189176}
{'[6, 1, 4, 4, 0, 3, 0, 1, 2, 1, 7, 0, 2, 0, 0, 1, 0, 0]' : 0.188969}
{'[6, 1, 4, 4, 0, 3, 0, 1, 2, 1, 7, 0, 2, 0, 0, 1, 0, 0]' : 0.193702}
{'[6, 1, 4, 4, 0, 3, 0, 1, 2, 1, 7, 0, 2, 0, 0, 1, 0, 0]' : 0.19035}
{'[6, 1, 4, 4, 0, 3, 0, 1, 2, 1, 7, 0, 2, 0, 0, 1, 0, 0]' : 0.18885}
{'[6, 1, 4, 4, 0, 3, 0, 1, 2, 1, 7, 0, 2, 0, 0, 1, 0, 0]' : 0.189086}
{'[6, 1, 4, 4, 0, 3, 0, 1, 2, 1, 7, 0, 2, 0, 0, 1, 0, 0]' : 0.189797}
{'[6, 1, 4, 4, 0, 3, 0, 1, 2, 1, 7, 0, 2, 0, 0, 1, 0, 0]' : 0.190162}
{'[6, 1, 4, 4, 0, 3, 0, 1, 2, 1, 7, 0, 2, 0, 0, 1, 0, 0]' : 0.189471}
{'[6, 1, 4, 4, 0, 3, 0, 1, 2, 1, 7, 0, 2, 0, 0, 1, 0, 0]' : 0.190084}
{'[6, 1, 4, 4, 0, 3, 0, 1, 2, 1, 7, 0, 2, 0, 0, 1, 0, 0]' : 0.192987}

out:
 ["{'[6, 1, 4, 4, 0, 3, 0, 1, 2, 1, 7, 0, 2, 0, 0, 1, 0, 0]' : 0.190672}", "{'[6, 1, 4, 4, 0, 3, 0, 1, 2, 1, 7, 0, 2, 0, 0, 1, 0, 0]' : 0.18894}", "{'[6, 1, 4, 4, 0, 3, 0, 1, 2, 1, 7, 0, 2, 0, 0, 1, 0, 0]' : 0.189586}", "{'[6, 1, 4, 4, 0, 3, 0, 1, 2, 1, 7, 0, 2, 0, 0, 1, 0, 0]' : 0.189095}", "{'[6, 1, 4, 4, 0, 3, 0, 1, 2, 1, 7, 0, 2, 0, 0, 1, 0, 0]' : 0.189648}", "{'[6, 1, 4, 4, 0, 3, 0, 1, 2, 1, 7, 0, 2, 0, 0, 1, 0, 0]' : 0.193555}", "{'[6, 1, 4, 4, 0, 3, 0, 1, 2, 1, 7, 0, 2, 0, 0, 1, 0, 0]' : 0.190269}", "{'[6, 1, 4, 4, 0, 3, 0, 1, 2, 1, 7, 0, 2, 0, 0, 1, 0, 0]' : 0.190396}", "{'[6, 1, 4, 4, 0, 3, 0, 1, 2, 1, 7, 0, 2, 0, 0, 1, 0, 0]' : 0.190745}", "{'[6, 1, 4, 4, 0, 3, 0, 1, 2, 1, 7, 0, 2, 0, 0, 1, 0, 0]' : 0.189282}", "{'[6, 1, 4, 4, 0, 3, 0, 1, 2, 1, 7, 0, 2, 0, 0, 1, 0, 0]' : 0.189217}", "{'[6, 1, 4, 4, 0, 3, 0, 1, 2, 1, 7, 0, 2, 0, 0, 1, 0, 0]' : 0.190227}", "{'[6, 1, 4, 4, 0, 3, 0, 1, 2, 1, 7, 0, 2, 0, 0, 1, 0, 0]' : 0.189394}", "{'[6, 1, 4, 4, 0, 3, 0, 1, 2, 1, 7, 0, 2, 0, 0, 1, 0, 0]' : 0.194486}", "{'[6, 1, 4, 4, 0, 3, 0, 1, 2, 1, 7, 0, 2, 0, 0, 1, 0, 0]' : 0.190008}", "{'[6, 1, 4, 4, 0, 3, 0, 1, 2, 1, 7, 0, 2, 0, 0, 1, 0, 0]' : 0.188814}", "{'[6, 1, 4, 4, 0, 3, 0, 1, 2, 1, 7, 0, 2, 0, 0, 1, 0, 0]' : 0.189391}", "{'[6, 1, 4, 4, 0, 3, 0, 1, 2, 1, 7, 0, 2, 0, 0, 1, 0, 0]' : 0.187971}", "{'[6, 1, 4, 4, 0, 3, 0, 1, 2, 1, 7, 0, 2, 0, 0, 1, 0, 0]' : 0.189115}", "{'[6, 1, 4, 4, 0, 3, 0, 1, 2, 1, 7, 0, 2, 0, 0, 1, 0, 0]' : 0.189176}", "{'[6, 1, 4, 4, 0, 3, 0, 1, 2, 1, 7, 0, 2, 0, 0, 1, 0, 0]' : 0.188969}", "{'[6, 1, 4, 4, 0, 3, 0, 1, 2, 1, 7, 0, 2, 0, 0, 1, 0, 0]' : 0.193702}", "{'[6, 1, 4, 4, 0, 3, 0, 1, 2, 1, 7, 0, 2, 0, 0, 1, 0, 0]' : 0.19035}", "{'[6, 1, 4, 4, 0, 3, 0, 1, 2, 1, 7, 0, 2, 0, 0, 1, 0, 0]' : 0.18885}", "{'[6, 1, 4, 4, 0, 3, 0, 1, 2, 1, 7, 0, 2, 0, 0, 1, 0, 0]' : 0.189086}", "{'[6, 1, 4, 4, 0, 3, 0, 1, 2, 1, 7, 0, 2, 0, 0, 1, 0, 0]' : 0.189797}", "{'[6, 1, 4, 4, 0, 3, 0, 1, 2, 1, 7, 0, 2, 0, 0, 1, 0, 0]' : 0.190162}", "{'[6, 1, 4, 4, 0, 3, 0, 1, 2, 1, 7, 0, 2, 0, 0, 1, 0, 0]' : 0.189471}", "{'[6, 1, 4, 4, 0, 3, 0, 1, 2, 1, 7, 0, 2, 0, 0, 1, 0, 0]' : 0.190084}", "{'[6, 1, 4, 4, 0, 3, 0, 1, 2, 1, 7, 0, 2, 0, 0, 1, 0, 0]' : 0.192987}"]
returning from 'run': {'[6, 1, 4, 4, 0, 3, 0, 1, 2, 1, 7, 0, 2, 0, 0, 1, 0, 0]': ([0.190672, 0.18894, 0.189586, 0.189095, 0.189648, 0.193555, 0.190269, 0.190396, 0.190745, 0.189282, 0.189217, 0.190227, 0.189394, 0.194486, 0.190008, 0.188814, 0.189391, 0.187971, 0.189115, 0.189176, 0.188969, 0.193702, 0.19035, 0.18885, 0.189086, 0.189797, 0.190162, 0.189471, 0.190084, 0.192987], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.190672, 0.18894, 0.189586, 0.189095, 0.189648, 0.193555, 0.190269, 0.190396, 0.190745, 0.189282, 0.189217, 0.190227, 0.189394, 0.194486, 0.190008, 0.188814, 0.189391, 0.187971, 0.189115, 0.189176, 0.188969, 0.193702, 0.19035, 0.18885, 0.189086, 0.189797, 0.190162, 0.189471, 0.190084, 0.192987], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[6, 1, 4, 4, 0, 3, 0, 1, 2, 1, 7, 0, 2, 0, 0, 1, 0, 0]': ([0.190672, 0.18894, 0.189586, 0.189095, 0.189648, 0.193555, 0.190269, 0.190396, 0.190745, 0.189282, 0.189217, 0.190227, 0.189394, 0.194486, 0.190008, 0.188814, 0.189391, 0.187971, 0.189115, 0.189176, 0.188969, 0.193702, 0.19035, 0.18885, 0.189086, 0.189797, 0.190162, 0.189471, 0.190084, 0.192987], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [2, 0, 2, 1, 3, 4, 1, 0, 2, 29, 0, 19, 0, 0, 0, 1, 1, 1]
Fixed Factors: {}
Testing candidate 21: [2, 0, 2, 1, 3, 4, 1, 0, 2, 29, 0, 19, 0, 0, 0, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	49
        Max loop nest depth: 	6
        Additions: 		2933
        Multiplications: 	1364
        Divisions: 		0
        Logical: 		0
        Reads: 			5777
        Writes: 		1004
        Comparisons:		49
        Gotos: 			0
        
digraph CFG {
	5668182 [label="5668182  double x_copy[256];...",shape=box];
	ForLoop5692188 [label="ForLoop5692188  for (kkk=0; kkk<=ny-1; kkk=kkk+512) {...",shape=box];
	ForLoop5692188 -> ForLoop5692187;
	ForLoop5692188 -> _JOIN_5692188;
	5779085 [label="5779085  tmp[i]=scv_74;...",shape=box];
	5779085 -> _JOIN_5692190;
	_JOIN_5691509 [label="_JOIN_5691509None...",shape=box];
	_JOIN_5691509 -> _JOIN_5691511;
	5537539 [label="5537539  y[i]=0.0;...",shape=box];
	5779073 [label="5779073  double scv_74;...",shape=box];
	_JOIN_5692117 [label="_JOIN_5692117None...",shape=box];
	_JOIN_5692117 -> 5823637;
	_JOIN_5692187 [label="_JOIN_5692187None...",shape=box];
	_JOIN_5692187 -> _JOIN_5692188;
	5537627 [label="5537627  y[i]=0.0;...",shape=box];
	5537627 -> _JOIN_5537628;
	ForLoop5691366 [label="ForLoop5691366  for (kk=kkk; kk<=min(ny-1,kkk+480); kk=kk+32) {...",shape=box];
	ForLoop5691366 -> 5670450;
	ForLoop5691366 -> _JOIN_5691366;
	ForLoop5691364 [label="ForLoop5691364  for (k=cbv_3; k<=cbv_4; k=k+1) {...",shape=box];
	ForLoop5691364 -> 5725390;
	ForLoop5691364 -> _JOIN_5691364;
	ForLoop5691509 [label="ForLoop5691509  for (j=jjj; j<=cbv_5; j=j+1) {...",shape=box];
	ForLoop5691509 -> 5691508;
	ForLoop5691509 -> _JOIN_5691509;
	ForLoop5691368 [label="ForLoop5691368  for (kkk=0; kkk<=ny-1; kkk=kkk+512) {...",shape=box];
	ForLoop5691368 -> ForLoop5691366;
	ForLoop5691368 -> _JOIN_5691368;
	ForLoop5690541 [label="ForLoop5690541  for (k=kk; k<=cbv_2; k=k+20) {...",shape=box];
	ForLoop5690541 -> 5722698;
	ForLoop5690541 -> _JOIN_5690541;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 5537452;
	5670450 [label="5670450  int k;...",shape=box];
	5775911 [label="5775911  double scv_53, scv_54, scv_55, scv_56, scv_57, scv_58, scv_59, scv_60;...",shape=box];
	_JOIN_5692192 [label="_JOIN_5692192None...",shape=box];
	_JOIN_5692192 -> _JOIN_5692193;
	ForLoop5537559 [label="ForLoop5537559  for (i=0; i<=cbv_1; i=i+3) {...",shape=box];
	ForLoop5537559 -> 5537539;
	ForLoop5537559 -> _JOIN_5537559;
	5822761 [label="5822761  register int cbv_3, cbv_4;...",shape=box];
	5693638 [label="5693638  double scv_1;...",shape=box];
	ForLoop5692187 [label="ForLoop5692187  for (kk=kkk; kk<=min(ny-1,kkk+480); kk=kk+32) {...",shape=box];
	ForLoop5692187 -> 5691543;
	ForLoop5692187 -> _JOIN_5692187;
	ForLoop5692185 [label="ForLoop5692185  for (k=cbv_7; k<=cbv_8; k=k+1) {...",shape=box];
	ForLoop5692185 -> 5776398;
	ForLoop5692185 -> _JOIN_5692185;
	_JOIN_5537628 [label="_JOIN_5537628None...",shape=box];
	_JOIN_5537628 -> 5668182;
	5537696 [label="5537696  register int cbv_2, cbv_3;...",shape=box];
	5773648 [label="5773648  tmp[(i+20)]=scv_23;...",shape=box];
	_JOIN_5537559 [label="_JOIN_5537559None...",shape=box];
	_JOIN_5537559 -> 5537696;
	5537452 [label="5537452  int i;...",shape=box];
	5691543 [label="5691543  int k;...",shape=box];
	5725390 [label="5725390  double scv_22;...",shape=box];
	5691467 [label="5691467  for (j=jjj; j<=min(ny-1,jjj+255); j=j+1) ...",shape=box];
	_JOIN_5670418 [label="_JOIN_5670418None...",shape=box];
	_JOIN_5670418 -> ForLoop5691368;
	ForLoop5692117 [label="ForLoop5692117  for (k=kk; k<=cbv_6; k=k+20) {...",shape=box];
	ForLoop5692117 -> 5775911;
	ForLoop5692117 -> _JOIN_5692117;
	5668215 [label="5668215  int i;...",shape=box];
	5668215 -> ForLoop5691370;
	_JOIN_5692190 [label="_JOIN_5692190None...",shape=box];
	_JOIN_5692190 -> _JOIN_5692192;
	5776398 [label="5776398  double scv_73;...",shape=box];
	_JOIN_5692193 [label="_JOIN_5692193None...",shape=box];
	ForLoop5537628 [label="ForLoop5537628  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop5537628 -> 5537627;
	ForLoop5537628 -> _JOIN_5537628;
	_JOIN_5691511 [label="_JOIN_5691511None...",shape=box];
	_JOIN_5691511 -> ForLoop5692188;
	_JOIN_5670416 [label="_JOIN_5670416None...",shape=box];
	_JOIN_5670416 -> _JOIN_5670418;
	5823637 [label="5823637  register int cbv_7, cbv_8;...",shape=box];
	_JOIN_5691366 [label="_JOIN_5691366None...",shape=box];
	_JOIN_5691366 -> _JOIN_5691368;
	5773630 [label="5773630  double scv_23, scv_24, scv_25, scv_26, scv_27, scv_28, scv_29, scv_30;...",shape=box];
	_JOIN_5691364 [label="_JOIN_5691364None...",shape=box];
	_JOIN_5691364 -> _JOIN_5691366;
	ForLoop5691370 [label="ForLoop5691370  for (i=ii; i<=min(nx-1,ii+31)-29; i=i+30) {...",shape=box];
	ForLoop5691370 -> expected=9369846271501.798828
actual=9369846271501.798828
5773630;
	ForLoop5691370 -> _JOIN_5691370;
	5668546 [label="5668546  for (j=jjj; j<=min(ny-1,jjj+255); j=j+1) ...",shape=box];
	ForLoop5670416 [label="ForLoop5670416  for (j=jjj; j<=cbv_1; j=j+1) {...",shape=box];
	ForLoop5670416 -> 5693638;
	ForLoop5670416 -> _JOIN_5670416;
	ForLoop5670418 [label="ForLoop5670418  for (jjj=0; jjj<=ny-1; jjj=jjj+256) {...",shape=box];
	ForLoop5670418 -> 5668546;
	ForLoop5670418 -> _JOIN_5670418;
	_JOIN_5691368 [label="_JOIN_5691368None...",shape=box];
	_JOIN_5691368 -> 5773648;
	_JOIN_5691370 [label="_JOIN_5691370None...",shape=box];
	_JOIN_5691370 -> ForLoop5692190;
	_JOIN_5690541 [label="_JOIN_5690541None...",shape=box];
	_JOIN_5690541 -> 5822761;
	_JOIN_5692185 [label="_JOIN_5692185None...",shape=box];
	_JOIN_5692185 -> _JOIN_5692187;
	_JOIN_5692188 [label="_JOIN_5692188None...",shape=box];
	_JOIN_5692188 -> 5779085;
	ForLoop5692190 [label="ForLoop5692190  for (i=(min(nx-1,ii+31))-(((min(nx-1,ii+31))-(ii)+1)%30)+1; i<=min(nx-1,ii+31); i=i+1) {...",shape=box];
	ForLoop5692190 -> 5779073;
	ForLoop5692190 -> _JOIN_5692190;
	ForLoop5692193 [label="ForLoop5692193  for (iii=0; iii<=nx-1; iii=iii+64) {...",shape=box];
	ForLoop5692193 -> ForLoop5692192;
	ForLoop5692193 -> _JOIN_5692193;
	ForLoop5692192 [label="ForLoop5692192  for (ii=iii; ii<=min(nx-1,iii+32); ii=ii+32) {...",shape=box];
	ForLoop5692192 -> 5668215;
	ForLoop5692192 -> _JOIN_5692192;
	5722698 [label="5722698  double scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8, scv_9;...",shape=box];
	5691508 [label="5691508  scv_74=scv_74+A[i*ny+j]*x_copy[(j-jjj)];...",shape=box];
	5691508 -> _JOIN_5691509;
	ForLoop5691511 [label="ForLoop5691511  for (jjj=0; jjj<=ny-1; jjj=jjj+256) {...",shape=box];
	ForLoop5691511 -> 5691467;
	ForLoop5691511 -> _JOIN_5691511;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest21.exe __orio_perftest21.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest21.exe  
{'[2, 0, 2, 1, 3, 4, 1, 0, 2, 29, 0, 19, 0, 0, 0, 1, 1, 1]' : 0.149559}
{'[2, 0, 2, 1, 3, 4, 1, 0, 2, 29, 0, 19, 0, 0, 0, 1, 1, 1]' : 0.149622}
{'[2, 0, 2, 1, 3, 4, 1, 0, 2, 29, 0, 19, 0, 0, 0, 1, 1, 1]' : 0.149363}
{'[2, 0, 2, 1, 3, 4, 1, 0, 2, 29, 0, 19, 0, 0, 0, 1, 1, 1]' : 0.150426}
{'[2, 0, 2, 1, 3, 4, 1, 0, 2, 29, 0, 19, 0, 0, 0, 1, 1, 1]' : 0.149483}
{'[2, 0, 2, 1, 3, 4, 1, 0, 2, 29, 0, 19, 0, 0, 0, 1, 1, 1]' : 0.149397}
{'[2, 0, 2, 1, 3, 4, 1, 0, 2, 29, 0, 19, 0, 0, 0, 1, 1, 1]' : 0.149415}
{'[2, 0, 2, 1, 3, 4, 1, 0, 2, 29, 0, 19, 0, 0, 0, 1, 1, 1]' : 0.149889}
{'[2, 0, 2, 1, 3, 4, 1, 0, 2, 29, 0, 19, 0, 0, 0, 1, 1, 1]' : 0.149334}
{'[2, 0, 2, 1, 3, 4, 1, 0, 2, 29, 0, 19, 0, 0, 0, 1, 1, 1]' : 0.149367}
{'[2, 0, 2, 1, 3, 4, 1, 0, 2, 29, 0, 19, 0, 0, 0, 1, 1, 1]' : 0.149524}
{'[2, 0, 2, 1, 3, 4, 1, 0, 2, 29, 0, 19, 0, 0, 0, 1, 1, 1]' : 0.149468}
{'[2, 0, 2, 1, 3, 4, 1, 0, 2, 29, 0, 19, 0, 0, 0, 1, 1, 1]' : 0.14937}
{'[2, 0, 2, 1, 3, 4, 1, 0, 2, 29, 0, 19, 0, 0, 0, 1, 1, 1]' : 0.149403}
{'[2, 0, 2, 1, 3, 4, 1, 0, 2, 29, 0, 19, 0, 0, 0, 1, 1, 1]' : 0.14933}
{'[2, 0, 2, 1, 3, 4, 1, 0, 2, 29, 0, 19, 0, 0, 0, 1, 1, 1]' : 0.149272}
{'[2, 0, 2, 1, 3, 4, 1, 0, 2, 29, 0, 19, 0, 0, 0, 1, 1, 1]' : 0.149483}
{'[2, 0, 2, 1, 3, 4, 1, 0, 2, 29, 0, 19, 0, 0, 0, 1, 1, 1]' : 0.15074}
{'[2, 0, 2, 1, 3, 4, 1, 0, 2, 29, 0, 19, 0, 0, 0, 1, 1, 1]' : 0.14968}
{'[2, 0, 2, 1, 3, 4, 1, 0, 2, 29, 0, 19, 0, 0, 0, 1, 1, 1]' : 0.149394}
{'[2, 0, 2, 1, 3, 4, 1, 0, 2, 29, 0, 19, 0, 0, 0, 1, 1, 1]' : 0.149536}
{'[2, 0, 2, 1, 3, 4, 1, 0, 2, 29, 0, 19, 0, 0, 0, 1, 1, 1]' : 0.149388}
{'[2, 0, 2, 1, 3, 4, 1, 0, 2, 29, 0, 19, 0, 0, 0, 1, 1, 1]' : 0.149442}
{'[2, 0, 2, 1, 3, 4, 1, 0, 2, 29, 0, 19, 0, 0, 0, 1, 1, 1]' : 0.149581}
{'[2, 0, 2, 1, 3, 4, 1, 0, 2, 29, 0, 19, 0, 0, 0, 1, 1, 1]' : 0.149451}
{'[2, 0, 2, 1, 3, 4, 1, 0, 2, 29, 0, 19, 0, 0, 0, 1, 1, 1]' : 0.149471}
{'[2, 0, 2, 1, 3, 4, 1, 0, 2, 29, 0, 19, 0, 0, 0, 1, 1, 1]' : 0.149449}
{'[2, 0, 2, 1, 3, 4, 1, 0, 2, 29, 0, 19, 0, 0, 0, 1, 1, 1]' : 0.149665}
{'[2, 0, 2, 1, 3, 4, 1, 0, 2, 29, 0, 19, 0, 0, 0, 1, 1, 1]' : 0.149243}
{'[2, 0, 2, 1, 3, 4, 1, 0, 2, 29, 0, 19, 0, 0, 0, 1, 1, 1]' : 0.149491}

out:
 ["{'[2, 0, 2, 1, 3, 4, 1, 0, 2, 29, 0, 19, 0, 0, 0, 1, 1, 1]' : 0.149559}", "{'[2, 0, 2, 1, 3, 4, 1, 0, 2, 29, 0, 19, 0, 0, 0, 1, 1, 1]' : 0.149622}", "{'[2, 0, 2, 1, 3, 4, 1, 0, 2, 29, 0, 19, 0, 0, 0, 1, 1, 1]' : 0.149363}", "{'[2, 0, 2, 1, 3, 4, 1, 0, 2, 29, 0, 19, 0, 0, 0, 1, 1, 1]' : 0.150426}", "{'[2, 0, 2, 1, 3, 4, 1, 0, 2, 29, 0, 19, 0, 0, 0, 1, 1, 1]' : 0.149483}", "{'[2, 0, 2, 1, 3, 4, 1, 0, 2, 29, 0, 19, 0, 0, 0, 1, 1, 1]' : 0.149397}", "{'[2, 0, 2, 1, 3, 4, 1, 0, 2, 29, 0, 19, 0, 0, 0, 1, 1, 1]' : 0.149415}", "{'[2, 0, 2, 1, 3, 4, 1, 0, 2, 29, 0, 19, 0, 0, 0, 1, 1, 1]' : 0.149889}", "{'[2, 0, 2, 1, 3, 4, 1, 0, 2, 29, 0, 19, 0, 0, 0, 1, 1, 1]' : 0.149334}", "{'[2, 0, 2, 1, 3, 4, 1, 0, 2, 29, 0, 19, 0, 0, 0, 1, 1, 1]' : 0.149367}", "{'[2, 0, 2, 1, 3, 4, 1, 0, 2, 29, 0, 19, 0, 0, 0, 1, 1, 1]' : 0.149524}", "{'[2, 0, 2, 1, 3, 4, 1, 0, 2, 29, 0, 19, 0, 0, 0, 1, 1, 1]' : 0.149468}", "{'[2, 0, 2, 1, 3, 4, 1, 0, 2, 29, 0, 19, 0, 0, 0, 1, 1, 1]' : 0.14937}", "{'[2, 0, 2, 1, 3, 4, 1, 0, 2, 29, 0, 19, 0, 0, 0, 1, 1, 1]' : 0.149403}", "{'[2, 0, 2, 1, 3, 4, 1, 0, 2, 29, 0, 19, 0, 0, 0, 1, 1, 1]' : 0.14933}", "{'[2, 0, 2, 1, 3, 4, 1, 0, 2, 29, 0, 19, 0, 0, 0, 1, 1, 1]' : 0.149272}", "{'[2, 0, 2, 1, 3, 4, 1, 0, 2, 29, 0, 19, 0, 0, 0, 1, 1, 1]' : 0.149483}", "{'[2, 0, 2, 1, 3, 4, 1, 0, 2, 29, 0, 19, 0, 0, 0, 1, 1, 1]' : 0.15074}", "{'[2, 0, 2, 1, 3, 4, 1, 0, 2, 29, 0, 19, 0, 0, 0, 1, 1, 1]' : 0.14968}", "{'[2, 0, 2, 1, 3, 4, 1, 0, 2, 29, 0, 19, 0, 0, 0, 1, 1, 1]' : 0.149394}", "{'[2, 0, 2, 1, 3, 4, 1, 0, 2, 29, 0, 19, 0, 0, 0, 1, 1, 1]' : 0.149536}", "{'[2, 0, 2, 1, 3, 4, 1, 0, 2, 29, 0, 19, 0, 0, 0, 1, 1, 1]' : 0.149388}", "{'[2, 0, 2, 1, 3, 4, 1, 0, 2, 29, 0, 19, 0, 0, 0, 1, 1, 1]' : 0.149442}", "{'[2, 0, 2, 1, 3, 4, 1, 0, 2, 29, 0, 19, 0, 0, 0, 1, 1, 1]' : 0.149581}", "{'[2, 0, 2, 1, 3, 4, 1, 0, 2, 29, 0, 19, 0, 0, 0, 1, 1, 1]' : 0.149451}", "{'[2, 0, 2, 1, 3, 4, 1, 0, 2, 29, 0, 19, 0, 0, 0, 1, 1, 1]' : 0.149471}", "{'[2, 0, 2, 1, 3, 4, 1, 0, 2, 29, 0, 19, 0, 0, 0, 1, 1, 1]' : 0.149449}", "{'[2, 0, 2, 1, 3, 4, 1, 0, 2, 29, 0, 19, 0, 0, 0, 1, 1, 1]' : 0.149665}", "{'[2, 0, 2, 1, 3, 4, 1, 0, 2, 29, 0, 19, 0, 0, 0, 1, 1, 1]' : 0.149243}", "{'[2, 0, 2, 1, 3, 4, 1, 0, 2, 29, 0, 19, 0, 0, 0, 1, 1, 1]' : 0.149491}"]
returning from 'run': {'[2, 0, 2, 1, 3, 4, 1, 0, 2, 29, 0, 19, 0, 0, 0, 1, 1, 1]': ([0.149559, 0.149622, 0.149363, 0.150426, 0.149483, 0.149397, 0.149415, 0.149889, 0.149334, 0.149367, 0.149524, 0.149468, 0.14937, 0.149403, 0.14933, 0.149272, 0.149483, 0.15074, 0.14968, 0.149394, 0.149536, 0.149388, 0.149442, 0.149581, 0.149451, 0.149471, 0.149449, 0.149665, 0.149243, 0.149491], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.149559, 0.149622, 0.149363, 0.150426, 0.149483, 0.149397, 0.149415, 0.149889, 0.149334, 0.149367, 0.149524, 0.149468, 0.14937, 0.149403, 0.14933, 0.149272, 0.149483, 0.15074, 0.14968, 0.149394, 0.149536, 0.149388, 0.149442, 0.149581, 0.149451, 0.149471, 0.149449, 0.149665, 0.149243, 0.149491], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 2, 1, 3, 4, 1, 0, 2, 29, 0, 19, 0, 0, 0, 1, 1, 1]': ([0.149559, 0.149622, 0.149363, 0.150426, 0.149483, 0.149397, 0.149415, 0.149889, 0.149334, 0.149367, 0.149524, 0.149468, 0.14937, 0.149403, 0.14933, 0.149272, 0.149483, 0.15074, 0.14968, 0.149394, 0.149536, 0.149388, 0.149442, 0.149581, 0.149451, 0.149471, 0.149449, 0.149665, 0.149243, 0.149491], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [0, 6, 6, 0, 6, 6, 0, 0, 13, 4, 1, 0, 1, 1, 0, 1, 0, 1]
Fixed Factors: {}
Testing candidate 22: [0, 6, 6, 0, 6, 6, 0, 0, 13, 4, 1, 0, 1, 1, 0, 1, 0, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Addiexpected=9369846271501.798828
actual=9369846271501.798828
tions: 		417
        Multiplications: 	192
        Divisions: 		0
        Logical: 		0
        Reads: 			873
        Writes: 		168
        Comparisons:		11
        Gotos: 			0
        
digraph CFG {
	5823915 [label="5823915  int i;...",shape=box];
	5823915 -> ForLoop5824286;
	5893337 [label="5893337  double scv_12;...",shape=box];
	_JOIN_5882948 [label="_JOIN_5882948None...",shape=box];
	_JOIN_5882948 -> 5898928;
	5880246 [label="5880246  double x_copy;...",shape=box];
	ForLoop5883481 [label="ForLoop5883481  for (it=0; it<=nx-8; it=it+8) {...",shape=box];
	ForLoop5883481 -> 5896747;
	ForLoop5883481 -> _JOIN_5883481;
	5898397 [label="5898397  register int cbv_1;...",shape=box];
	5899138 [label="5899138  register int cbv_5;...",shape=box];
	_JOIN_5883481 [label="_JOIN_5883481None...",shape=box];
	5896759 [label="5896759  tmp[it]=scv_13;...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 5823915;
	5898928 [label="5898928  register int cbv_3, cbv_4;...",shape=box];
	5824167 [label="5824167  y[i]=0.0;...",shape=box];
	ForLoop5824355 [label="ForLoop5824355  for (i=ny-((ny-(0))%14); i<=ny-1; i=i+1) ...",shape=box];
	ForLoop5824355 -> 5824354;
	ForLoop5824355 -> _JOIN_5824355;
	_JOIN_5824286 [label="_JOIN_5824286None...",shape=box];
	_JOIN_5824286 -> ForLoop5824355;
	5886491 [label="5886491  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	ForLoop5883224 [label="ForLoop5883224  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop5883224 -> ForLoop5883223;
	ForLoop5883224 -> _JOIN_5883224;
	ForLoop5883223 [label="ForLoop5883223  for (jj=jjj; jj<=min(ny-1,jjj+1536); jj=jj+512) {...",shape=box];
	ForLoop5883223 -> 5898397;
	ForLoop5883223 -> _JOIN_5883223;
	ForLoop5883220 [label="ForLoop5883220  for (j=cbv_3; j<=cbv_4; j=j+1) {...",shape=box];
	ForLoop5883220 -> 5887690;
	ForLoop5883220 -> _JOIN_5883220;
	_JOIN_5824355 [label="_JOIN_5824355None...",shape=box];
	_JOIN_5824355 -> 5880246;
	ForLoop5883478 [label="ForLoop5883478  for (kk=kkk; kk<=min(ny-1,kkk+1536); kk=kk+512) {...",shape=box];
	ForLoop5883478 -> 5899138;
	ForLoop5883478 -> _JOIN_5883478;
	5882440 [label="5882440  int j;...",shape=box];
	5896747 [label="5896747  double scv_13, scv_14, scv_15, scv_16, scv_17, scv_18, scv_19, scv_20;...",shape=box];
	ForLoop5882439 [label="ForLoop5882439  for (jt=jj; jt<=cbv_1; jt=jt+8) {...",shape=box];
	ForLoop5882439 -> 5886491;
	ForLoop5882439 -> _JOIN_5882439;
	_JOIN_5883478 [label="_JOIN_5883478None...",shape=box];
	_JOIN_5883478 -> _JOIN_5883479;
	_JOIN_5883479 [label="_JOIN_5883479None...",shape=box];
	_JOIN_5883479 -> 5896759;
	5887312 [label="5887312  double scv_9, scv_10;...",shape=box];
	_JOIN_5882439 [label="_JOIN_5882439None...",shape=box];
	_JOIN_5882439 -> 5882440;
	_JOIN_5883223 [label="_JOIN_5883223None...",shape=box];
	_JOIN_5883223 -> _JOIN_5883224;
	ForLoop5824286 [label="ForLoop5824286  for (i=0; i<=ny-14; i=i+14) {...",shape=box];
	ForLoop5824286 -> 5824167;
	ForLoop5824286 -> _JOIN_5824286;
	_JOIN_5883220 [label="_JOIN_5883220None...",shape=box];
	_JOIN_5883220 -> _JOIN_5883223;
	ForLoop5882948 [label="ForLoop5882948  for (j=jt; j<=cbv_2; j=j+2) {...",shape=box];
	ForLoop5882948 -> 5887312;
	ForLoop5882948 -> _JOIN_5882948;
	_JOIN_5883224 [label="_JOIN_5883224None...",shape=box];
	_JOIN_5883224 -> ForLoop5883479;
	5887690 [label="5887690  double scv_11;...",shape=box];
	ForLoop5883479 [label="ForLoop5883479  for (kkk=0; kkk<=ny-1; kkk=kkk+2048) {...",shape=box];
	ForLoop5883479 -> ForLoop5883478;
	ForLoop5883479 -> _JOIN_5883479;
	ForLoop5883477 [label="ForLoop5883477  for (k=kk; k<=cbv_5; k=k+1) {...",shape=box];
	ForLoop5883477 -> 5893337;
	ForLoop5883477 -> _JOIN_5883477;
	5824354 [label="5824354  y[i]=0.0;...",shape=box];
	5824354 -> _JOIN_5824355;
	_JOIN_5883477 [label="_JOIN_5883477None...",shape=box];
	_JOIN_5883477 -> _JOIN_5883478;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest22.exe __orio_perftest22.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest22.exe  
{'[0, 6, 6, 0, 6, 6, 0, 0, 13, 4, 1, 0, 1, 1, 0, 1, 0, 1]' : 0.0811191}
{'[0, 6, 6, 0, 6, 6, 0, 0, 13, 4, 1, 0, 1, 1, 0, 1, 0, 1]' : 0.0807521}
{'[0, 6, 6, 0, 6, 6, 0, 0, 13, 4, 1, 0, 1, 1, 0, 1, 0, 1]' : 0.0816009}
{'[0, 6, 6, 0, 6, 6, 0, 0, 13, 4, 1, 0, 1, 1, 0, 1, 0, 1]' : 0.0806148}
{'[0, 6, 6, 0, 6, 6, 0, 0, 13, 4, 1, 0, 1, 1, 0, 1, 0, 1]' : 0.080667}
{'[0, 6, 6, 0, 6, 6, 0, 0, 13, 4, 1, 0, 1, 1, 0, 1, 0, 1]' : 0.0807562}
{'[0, 6, 6, 0, 6, 6, 0, 0, 13, 4, 1, 0, 1, 1, 0, 1, 0, 1]' : 0.080647}
{'[0, 6, 6, 0, 6, 6, 0, 0, 13, 4, 1, 0, 1, 1, 0, 1, 0, 1]' : 0.080678}
{'[0, 6, 6, 0, 6, 6, 0, 0, 13, 4, 1, 0, 1, 1, 0, 1, 0, 1]' : 0.0806959}
{'[0, 6, 6, 0, 6, 6, 0, 0, 13, 4, 1, 0, 1, 1, 0, 1, 0, 1]' : 0.081135}
{'[0, 6, 6, 0, 6, 6, 0, 0, 13, 4, 1, 0, 1, 1, 0, 1, 0, 1]' : 0.080652}
{'[0, 6, 6, 0, 6, 6, 0, 0, 13, 4, 1, 0, 1, 1, 0, 1, 0, 1]' : 0.080652}
{'[0, 6, 6, 0, 6, 6, 0, 0, 13, 4, 1, 0, 1, 1, 0, 1, 0, 1]' : 0.0806952}
{'[0, 6, 6, 0, 6, 6, 0, 0, 13, 4, 1, 0, 1, 1, 0, 1, 0, 1]' : 0.0806668}
{'[0, 6, 6, 0, 6, 6, 0, 0, 13, 4, 1, 0, 1, 1, 0, 1, 0, 1]' : 0.080775}
{'[0, 6, 6, 0, 6, 6, 0, 0, 13, 4, 1, 0, 1, 1, 0, 1, 0, 1]' : 0.0806251}
{'[0, 6, 6, 0, 6, 6, 0, 0, 13, 4, 1, 0, 1, 1, 0, 1, 0, 1]' : 0.0807259}
{'[0, 6, 6, 0, 6, 6, 0, 0, 13, 4, 1, 0, 1, 1, 0, 1, 0, 1]' : 0.080677}
{'[0, 6, 6, 0, 6, 6, 0, 0, 13, 4, 1, 0, 1, 1, 0, 1, 0, 1]' : 0.080703}
{'[0, 6, 6, 0, 6, 6, 0, 0, 13, 4, 1, 0, 1, 1, 0, 1, 0, 1]' : 0.0806851}
{'[0, 6, 6, 0, 6, 6, 0, 0, 13, 4, 1, 0, 1, 1, 0, 1, 0, 1]' : 0.080621}
{'[0, 6, 6, 0, 6, 6, 0, 0, 13, 4, 1, 0, 1, 1, 0, 1, 0, 1]' : 0.0806808}
{'[0, 6, 6, 0, 6, 6, 0, 0, 13, 4, 1, 0, 1, 1, 0, 1, 0, 1]' : 0.0806782}
{'[0, 6, 6, 0, 6, 6, 0, 0, 13, 4, 1, 0, 1, 1, 0, 1, 0, 1]' : 0.080796}
{'[0, 6, 6, 0, 6, 6, 0, 0, 13, 4, 1, 0, 1, 1, 0, 1, 0, 1]' : 0.080652}
{'[0, 6, 6, 0, 6, 6, 0, 0, 13, 4, 1, 0, 1, 1, 0, 1, 0, 1]' : 0.080672}
{'[0, 6, 6, 0, 6, 6, 0, 0, 13, 4, 1, 0, 1, 1, 0, 1, 0, 1]' : 0.080785}
{'[0, 6, 6, 0, 6, 6, 0, 0, 13, 4, 1, 0, 1, 1, 0, 1, 0, 1]' : 0.08217}
{'[0, 6, 6, 0, 6, 6, 0, 0, 13, 4, 1, 0, 1, 1, 0, 1, 0, 1]' : 0.080708}
{'[0, 6, 6, 0, 6, 6, 0, 0, 13, 4, 1, 0, 1, 1, 0, 1, 0, 1]' : 0.080827}

out:
 ["{'[0, 6, 6, 0, 6, 6, 0, 0, 13, 4, 1, 0, 1, 1, 0, 1, 0, 1]' : 0.0811191}", "{'[0, 6, 6, 0, 6, 6, 0, 0, 13, 4, 1, 0, 1, 1, 0, 1, 0, 1]' : 0.0807521}", "{'[0, 6, 6, 0, 6, 6, 0, 0, 13, 4, 1, 0, 1, 1, 0, 1, 0, 1]' : 0.0816009}", "{'[0, 6, 6, 0, 6, 6, 0, 0, 13, 4, 1, 0, 1, 1, 0, 1, 0, 1]' : 0.0806148}", "{'[0, 6, 6, 0, 6, 6, 0, 0, 13, 4, 1, 0, 1, 1, 0, 1, 0, 1]' : 0.080667}", "{'[0, 6, 6, 0, 6, 6, 0, 0, 13, 4, 1, 0, 1, 1, 0, 1, 0, 1]' : 0.0807562}", "{'[0, 6, 6, 0, 6, 6, 0, 0, 13, 4, 1, 0, 1, 1, 0, 1, 0, 1]' : 0.080647}", "{'[0, 6, 6, 0, 6, 6, 0, 0, 13, 4, 1, 0, 1, 1, 0, 1, 0, 1]' : 0.080678}", "{'[0, 6, 6, 0, 6, 6, 0, 0, 13, 4, 1, 0, 1, 1, 0, 1, 0, 1]' : 0.0806959}", "{'[0, 6, 6, 0, 6, 6, 0, 0, 13, 4, 1, 0, 1, 1, 0, 1, 0, 1]' : 0.081135}", "{'[0, 6, 6, 0, 6, 6, 0, 0, 13, 4, 1, 0, 1, 1, 0, 1, 0, 1]' : 0.080652}", "{'[0, 6, 6, 0, 6, 6, 0, 0, 13, 4, 1, 0, 1, 1, 0, 1, 0, 1]' : 0.080652}", "{'[0, 6, 6, 0, 6, 6, 0, 0, 13, 4, 1, 0, 1, 1, 0, 1, 0, 1]' : 0.0806952}", "{'[0, 6, 6, 0, 6, 6, 0, 0, 13, 4, 1, 0, 1, 1, 0, 1, 0, 1]' : 0.0806668}", "{'[0, 6, 6, 0, 6, 6, 0, 0, 13, 4, 1, 0, 1, 1, 0, 1, 0, 1]' : 0.080775}", "{'[0, 6, 6, 0, 6, 6, 0, 0, 13, 4, 1, 0, 1, 1, 0, 1, 0, 1]' : 0.0806251}", "{'[0, 6, 6, 0, 6, 6, 0, 0, 13, 4, 1, 0, 1, 1, 0, 1, 0, 1]' : 0.0807259}", "{'[0, 6, 6, 0, 6, 6, 0, 0, 13, 4, 1, 0, 1, 1, 0, 1, 0, 1]' : 0.080677}", "{'[0, 6, 6, 0, 6, 6, 0, 0, 13, 4, 1, 0, 1, 1, 0, 1, 0, 1]' : 0.080703}", "{'[0, 6, 6, 0, 6, 6, 0, 0, 13, 4, 1, 0, 1, 1, 0, 1, 0, 1]' : 0.0806851}", "{'[0, 6, 6, 0, 6, 6, 0, 0, 13, 4, 1, 0, 1, 1, 0, 1, 0, 1]' : 0.080621}", "{'[0, 6, 6, 0, 6, 6, 0, 0, 13, 4, 1, 0, 1, 1, 0, 1, 0, 1]' : 0.0806808}", "{'[0, 6, 6, 0, 6, 6, 0, 0, 13, 4, 1, 0, 1, 1, 0, 1, 0, 1]' : 0.0806782}", "{'[0, 6, 6, 0, 6, 6, 0, 0, 13, 4, 1, 0, 1, 1, 0, 1, 0, 1]' : 0.080796}", "{'[0, 6, 6, 0, 6, 6, 0, 0, 13, 4, 1, 0, 1, 1, 0, 1, 0, 1]' : 0.080652}", "{'[0, 6, 6, 0, 6, 6, 0, 0, 13, 4, 1, 0, 1, 1, 0, 1, 0, 1]' : 0.080672}", "{'[0, 6, 6, 0, 6, 6, 0, 0, 13, 4, 1, 0, 1, 1, 0, 1, 0, 1]' : 0.080785}", "{'[0, 6, 6, 0, 6, 6, 0, 0, 13, 4, 1, 0, 1, 1, 0, 1, 0, 1]' : 0.08217}", "{'[0, 6, 6, 0, 6, 6, 0, 0, 13, 4, 1, 0, 1, 1, 0, 1, 0, 1]' : 0.080708}", "{'[0, 6, 6, 0, 6, 6, 0, 0, 13, 4, 1, 0, 1, 1, 0, 1, 0, 1]' : 0.080827}"]
returning from 'run': {'[0, 6, 6, 0, 6, 6, 0, 0, 13, 4, 1, 0, 1, 1, 0, 1, 0, 1]': ([0.0811191, 0.0807521, 0.0816009, 0.0806148, 0.080667, 0.0807562, 0.080647, 0.080678, 0.0806959, 0.081135, 0.080652, 0.080652, 0.0806952, 0.0806668, 0.080775, 0.0806251, 0.0807259, 0.080677, 0.080703, 0.0806851, 0.080621, 0.0806808, 0.0806782, 0.080796, 0.080652, 0.080672, 0.080785, 0.08217, 0.080708, 0.080827], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.0811191, 0.0807521, 0.0816009, 0.0806148, 0.080667, 0.0807562, 0.080647, 0.080678, 0.0806959, 0.081135, 0.080652, 0.080652, 0.0806952, 0.0806668, 0.080775, 0.0806251, 0.0807259, 0.080677, 0.080703, 0.0806851, 0.080621, 0.0806808, 0.0806782, 0.080796, 0.080652, 0.080672, 0.080785, 0.08217, 0.080708, 0.080827], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 6, 0, 6, 6, 0, 0, 13, 4, 1, 0, 1, 1, 0, 1, 0, 1]': ([0.0811191, 0.0807521, 0.0816009, 0.0806148, 0.080667, 0.0807562, 0.080647, 0.080678, 0.0806959, 0.081135, 0.080652, 0.080652, 0.0806952, 0.0806668, 0.080775, 0.0806251, 0.0807259, 0.080677, 0.080703, 0.0806851, 0.080621, 0.0806808, 0.0806782, 0.080796, 0.080652, 0.080672, 0.080785, 0.08217, 0.080708, 0.080827], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [1, 4, 2, 6, 0, 1, 1, 1, 28, 28, 0, 15, 0, 1, 1, 0, 1, 0]
Fixed Factors: {}
Testing candidate 23: [1, 4, 2, 6, 0, 1, 1, 1, 28, 28, 0, 15, 0, 1, 1, 0, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	106
        Max loop nest depth: 	6
        Additions: 		4324
        Multiplications: 	960
        Divisions: 		0
        Logical: 		0
        Reads: 			6830
        Writes: 		845
        Comparisons:		106
        Gotos: 			0
        
digraph CFG {
	ForLoop5983835 [label="ForLoop5983835  for (jt=jj; jt<=min(ny-1,jj+127)-7; jt=jt+8) {...",shape=box];
	ForLoop5983835 -> 5983630;
	ForLoop5983835 -> _JOIN_5983835;
	5973957 [label="5973957  y_copy[(kt-kk)]=y_copy[(kt-kk)]+A[i*ny+kt]*tmp[i];...",shape=box];
	5983587 [label="5983587  for (j=jj; j<=min(ny-1,jj+127); j=j+1) ...",shape=box];
	5983587 -> ForLoop5983835;
	_JOIN_5983835 [label="_JOIN_5983835None...",shape=box];
	_JOIN_5983835 -> _JOIN_5983837;
	5982558 [label="5982558  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	_JOIN_5983428 [label="_JOIN_5983428None...",shape=box];
	_JOIN_5983428 -> _JOIN_5983430;
	ForLoop5984228 [label="ForLoop5984228  for (i=(min(nx-1,ii+15))-(((min(nx-1,ii+15))-(ii)+1)%29)+1; i<=min(nx-1,ii+15); i=i+1) {...",shape=box];
	ForLoop5984228 -> 5983543;
	ForLoop5984228 -> _JOIN_5984228;
	ForLoop5983428 [label="ForLoop5983428  for (kk=kkk; kk<=min(ny-1,kkk+32); kk=kk+32) {...",shape=box];
	ForLoop5983428 -> 5973043;
	ForLoop5983428 -> _JOIN_5983428;
	5909845 [label="5909845  double x_copy[128];...",shape=box];
	_JOIN_5972981 [label="_JOIN_5972981None...",shape=box];
	_JOIN_5972981 -> ForLoop5983430;
	5900454 [label="5900454  register int cbv_2, cbv_3;...",shape=box];
	ForLoop5984225 [label="ForLoop5984225  for (kk=kkk; kk<=min(ny-1,kkk+32); kk=kk+32) {...",shape=box];
	ForLoop5984225 -> 5983899;
	ForLoop5984225 -> _JOIN_5984225;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 5899352;
	ForLoop5984226 [label="ForLoop5984226  for (kkk=0; kkk<=ny-1; kkk=kkk+64) ...",shape=box];
	ForLoop5984226 -> ForLoop5984225;
	ForLoop5984226 -> _JOIN_5984226;
	5927575 [label="5927575  int i;...",shape=box];
	5927575 -> ForLoop5983432;
	_JOIN_5984192 [label="_JOIN_5984192None...",shape=box];
	_JOIN_5984192 -> 5984expected=9369846271501.798828
actual=9369846271501.798828
223;
	_JOIN_5983432 [label="_JOIN_5983432None...",shape=box];
	_JOIN_5983432 -> ForLoop5984228;
	5983899 [label="5983899  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	5983899 -> ForLoop5984192;
	_JOIN_5903858 [label="_JOIN_5903858None...",shape=box];
	_JOIN_5903858 -> _JOIN_5903859;
	ForLoop5972979 [label="ForLoop5972979  for (jt=jj; jt<=min(ny-1,jj+127)-7; jt=jt+8) {...",shape=box];
	ForLoop5972979 -> 5964836;
	ForLoop5972979 -> _JOIN_5972979;
	5984223 [label="5984223  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	5984223 -> _JOIN_5984225;
	ForLoop5900083 [label="ForLoop5900083  for (i=0; i<=cbv_1; i=i+29) {...",shape=box];
	ForLoop5900083 -> 5899829;
	ForLoop5900083 -> _JOIN_5900083;
	ForLoop5900152 [label="ForLoop5900152  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop5900152 -> 5900151;
	ForLoop5900152 -> _JOIN_5900152;
	_JOIN_5984228 [label="_JOIN_5984228None...",shape=box];
	_JOIN_5984228 -> _JOIN_5903858;
	5899829 [label="5899829  y[i]=0.0;...",shape=box];
	_JOIN_5983430 [label="_JOIN_5983430None...",shape=box];
	_JOIN_5983430 -> _JOIN_5983432;
	5963629 [label="5963629  tmp[i]=0;...",shape=box];
	5963925 [label="5963925  for (j=jj; j<=min(ny-1,jj+127); j=j+1) ...",shape=box];
	_JOIN_5900152 [label="_JOIN_5900152None...",shape=box];
	_JOIN_5900152 -> 5909845;
	_JOIN_5984225 [label="_JOIN_5984225None...",shape=box];
	_JOIN_5984225 -> _JOIN_5984226;
	ForLoop5984192 [label="ForLoop5984192  for (kt=kk; kt<=min(ny-1,kk+31)-7; kt=kt+8) {...",shape=box];
	ForLoop5984192 -> 5983945;
	ForLoop5984192 -> _JOIN_5984192;
	_JOIN_5972979 [label="_JOIN_5972979None...",shape=box];
	_JOIN_5972979 -> _JOIN_5972981;
	5900151 [label="5900151  y[i]=0.0;...",shape=box];
	5900151 -> _JOIN_5900152;
	_JOIN_5983837 [label="_JOIN_5983837None...",shape=box];
	_JOIN_5983837 -> ForLoop5984226;
	5983630 [label="5983630  tmp[i]=tmp[i]+A[i*ny+jt]*x_copy[(jt-jj)];...",shape=box];
	5983945 [label="5983945  y_copy[(kt-kk)]=y_copy[(kt-kk)]+A[i*ny+kt]*tmp[i];...",shape=box];
	ForLoop5983430 [label="ForLoop5983430  for (kkk=0; kkk<=ny-1; kkk=kkk+64) {...",shape=box];
	ForLoop5983430 -> ForLoop5983428;
	ForLoop5983430 -> _JOIN_5983430;
	ForLoop5983432 [label="ForLoop5983432  for (i=ii; i<=min(nx-1,ii+15)-28; i=i+29) {...",shape=box];
	ForLoop5983432 -> 5963629;
	ForLoop5983432 -> _JOIN_5983432;
	5973043 [label="5973043  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	ForLoop5983837 [label="ForLoop5983837  for (jj=0; jj<=ny-1; jj=jj+128) {...",shape=box];
	ForLoop5983837 -> 5983587;
	ForLoop5983837 -> _JOIN_5983837;
	_JOIN_5982527 [label="_JOIN_5982527None...",shape=box];
	_JOIN_5982527 -> 5982558;
	_JOIN_5900083 [label="_JOIN_5900083None...",shape=box];
	_JOIN_5900083 -> 5900454;
	5983543 [label="5983543  tmp[i]=0;...",shape=box];
	5983543 -> ForLoop5983837;
	_JOIN_5984226 [label="_JOIN_5984226None...",shape=box];
	_JOIN_5984226 -> _JOIN_5984228;
	_JOIN_5903859 [label="_JOIN_5903859None...",shape=box];
	ForLoop5982527 [label="ForLoop5982527  for (kt=kk; kt<=min(ny-1,kk+31)-7; kt=kt+8) {...",shape=box];
	ForLoop5982527 -> 5973957;
	ForLoop5982527 -> _JOIN_5982527;
	ForLoop5972981 [label="ForLoop5972981  for (jj=0; jj<=ny-1; jj=jj+128) {...",shape=box];
	ForLoop5972981 -> 5963925;
	ForLoop5972981 -> _JOIN_5972981;
	5899352 [label="5899352  int i;...",shape=box];
	5964836 [label="5964836  tmp[i]=tmp[i]+A[i*ny+jt]*x_copy[(jt-jj)];...",shape=box];
	ForLoop5903859 [label="ForLoop5903859  for (iii=0; iii<=nx-1; iii=iii+2048) ...",shape=box];
	ForLoop5903859 -> ForLoop5903858;
	ForLoop5903859 -> _JOIN_5903859;
	ForLoop5903858 [label="ForLoop5903858  for (ii=iii; ii<=min(nx-1,iii+2032); ii=ii+16) {...",shape=box];
	ForLoop5903858 -> 5927575;
	ForLoop5903858 -> _JOIN_5903858;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest23.exe __orio_perftest23.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest23.exe  
{'[1, 4, 2, 6, 0, 1, 1, 1, 28, 28, 0, 15, 0, 1, 1, 0, 1, 0]' : 0.249057}
{'[1, 4, 2, 6, 0, 1, 1, 1, 28, 28, 0, 15, 0, 1, 1, 0, 1, 0]' : 0.247976}
{'[1, 4, 2, 6, 0, 1, 1, 1, 28, 28, 0, 15, 0, 1, 1, 0, 1, 0]' : 0.247983}
{'[1, 4, 2, 6, 0, 1, 1, 1, 28, 28, 0, 15, 0, 1, 1, 0, 1, 0]' : 0.248109}
{'[1, 4, 2, 6, 0, 1, 1, 1, 28, 28, 0, 15, 0, 1, 1, 0, 1, 0]' : 0.248387}
{'[1, 4, 2, 6, 0, 1, 1, 1, 28, 28, 0, 15, 0, 1, 1, 0, 1, 0]' : 0.248228}
{'[1, 4, 2, 6, 0, 1, 1, 1, 28, 28, 0, 15, 0, 1, 1, 0, 1, 0]' : 0.248074}
{'[1, 4, 2, 6, 0, 1, 1, 1, 28, 28, 0, 15, 0, 1, 1, 0, 1, 0]' : 0.248083}
{'[1, 4, 2, 6, 0, 1, 1, 1, 28, 28, 0, 15, 0, 1, 1, 0, 1, 0]' : 0.249264}
{'[1, 4, 2, 6, 0, 1, 1, 1, 28, 28, 0, 15, 0, 1, 1, 0, 1, 0]' : 0.248167}
{'[1, 4, 2, 6, 0, 1, 1, 1, 28, 28, 0, 15, 0, 1, 1, 0, 1, 0]' : 0.248274}
{'[1, 4, 2, 6, 0, 1, 1, 1, 28, 28, 0, 15, 0, 1, 1, 0, 1, 0]' : 0.248131}
{'[1, 4, 2, 6, 0, 1, 1, 1, 28, 28, 0, 15, 0, 1, 1, 0, 1, 0]' : 0.248303}
{'[1, 4, 2, 6, 0, 1, 1, 1, 28, 28, 0, 15, 0, 1, 1, 0, 1, 0]' : 0.248143}
{'[1, 4, 2, 6, 0, 1, 1, 1, 28, 28, 0, 15, 0, 1, 1, 0, 1, 0]' : 0.248085}
{'[1, 4, 2, 6, 0, 1, 1, 1, 28, 28, 0, 15, 0, 1, 1, 0, 1, 0]' : 0.248148}
{'[1, 4, 2, 6, 0, 1, 1, 1, 28, 28, 0, 15, 0, 1, 1, 0, 1, 0]' : 0.249155}
{'[1, 4, 2, 6, 0, 1, 1, 1, 28, 28, 0, 15, 0, 1, 1, 0, 1, 0]' : 0.248427}
{'[1, 4, 2, 6, 0, 1, 1, 1, 28, 28, 0, 15, 0, 1, 1, 0, 1, 0]' : 0.248118}
{'[1, 4, 2, 6, 0, 1, 1, 1, 28, 28, 0, 15, 0, 1, 1, 0, 1, 0]' : 0.24815}
{'[1, 4, 2, 6, 0, 1, 1, 1, 28, 28, 0, 15, 0, 1, 1, 0, 1, 0]' : 0.248267}
{'[1, 4, 2, 6, 0, 1, 1, 1, 28, 28, 0, 15, 0, 1, 1, 0, 1, 0]' : 0.24825}
{'[1, 4, 2, 6, 0, 1, 1, 1, 28, 28, 0, 15, 0, 1, 1, 0, 1, 0]' : 0.24817}
{'[1, 4, 2, 6, 0, 1, 1, 1, 28, 28, 0, 15, 0, 1, 1, 0, 1, 0]' : 0.248335}
{'[1, 4, 2, 6, 0, 1, 1, 1, 28, 28, 0, 15, 0, 1, 1, 0, 1, 0]' : 0.249164}
{'[1, 4, 2, 6, 0, 1, 1, 1, 28, 28, 0, 15, 0, 1, 1, 0, 1, 0]' : 0.248156}
{'[1, 4, 2, 6, 0, 1, 1, 1, 28, 28, 0, 15, 0, 1, 1, 0, 1, 0]' : 0.248152}
{'[1, 4, 2, 6, 0, 1, 1, 1, 28, 28, 0, 15, 0, 1, 1, 0, 1, 0]' : 0.248207}
{'[1, 4, 2, 6, 0, 1, 1, 1, 28, 28, 0, 15, 0, 1, 1, 0, 1, 0]' : 0.248138}
{'[1, 4, 2, 6, 0, 1, 1, 1, 28, 28, 0, 15, 0, 1, 1, 0, 1, 0]' : 0.248453}

out:
 ["{'[1, 4, 2, 6, 0, 1, 1, 1, 28, 28, 0, 15, 0, 1, 1, 0, 1, 0]' : 0.249057}", "{'[1, 4, 2, 6, 0, 1, 1, 1, 28, 28, 0, 15, 0, 1, 1, 0, 1, 0]' : 0.247976}", "{'[1, 4, 2, 6, 0, 1, 1, 1, 28, 28, 0, 15, 0, 1, 1, 0, 1, 0]' : 0.247983}", "{'[1, 4, 2, 6, 0, 1, 1, 1, 28, 28, 0, 15, 0, 1, 1, 0, 1, 0]' : 0.248109}", "{'[1, 4, 2, 6, 0, 1, 1, 1, 28, 28, 0, 15, 0, 1, 1, 0, 1, 0]' : 0.248387}", "{'[1, 4, 2, 6, 0, 1, 1, 1, 28, 28, 0, 15, 0, 1, 1, 0, 1, 0]' : 0.248228}", "{'[1, 4, 2, 6, 0, 1, 1, 1, 28, 28, 0, 15, 0, 1, 1, 0, 1, 0]' : 0.248074}", "{'[1, 4, 2, 6, 0, 1, 1, 1, 28, 28, 0, 15, 0, 1, 1, 0, 1, 0]' : 0.248083}", "{'[1, 4, 2, 6, 0, 1, 1, 1, 28, 28, 0, 15, 0, 1, 1, 0, 1, 0]' : 0.249264}", "{'[1, 4, 2, 6, 0, 1, 1, 1, 28, 28, 0, 15, 0, 1, 1, 0, 1, 0]' : 0.248167}", "{'[1, 4, 2, 6, 0, 1, 1, 1, 28, 28, 0, 15, 0, 1, 1, 0, 1, 0]' : 0.248274}", "{'[1, 4, 2, 6, 0, 1, 1, 1, 28, 28, 0, 15, 0, 1, 1, 0, 1, 0]' : 0.248131}", "{'[1, 4, 2, 6, 0, 1, 1, 1, 28, 28, 0, 15, 0, 1, 1, 0, 1, 0]' : 0.248303}", "{'[1, 4, 2, 6, 0, 1, 1, 1, 28, 28, 0, 15, 0, 1, 1, 0, 1, 0]' : 0.248143}", "{'[1, 4, 2, 6, 0, 1, 1, 1, 28, 28, 0, 15, 0, 1, 1, 0, 1, 0]' : 0.248085}", "{'[1, 4, 2, 6, 0, 1, 1, 1, 28, 28, 0, 15, 0, 1, 1, 0, 1, 0]' : 0.248148}", "{'[1, 4, 2, 6, 0, 1, 1, 1, 28, 28, 0, 15, 0, 1, 1, 0, 1, 0]' : 0.249155}", "{'[1, 4, 2, 6, 0, 1, 1, 1, 28, 28, 0, 15, 0, 1, 1, 0, 1, 0]' : 0.248427}", "{'[1, 4, 2, 6, 0, 1, 1, 1, 28, 28, 0, 15, 0, 1, 1, 0, 1, 0]' : 0.248118}", "{'[1, 4, 2, 6, 0, 1, 1, 1, 28, 28, 0, 15, 0, 1, 1, 0, 1, 0]' : 0.24815}", "{'[1, 4, 2, 6, 0, 1, 1, 1, 28, 28, 0, 15, 0, 1, 1, 0, 1, 0]' : 0.248267}", "{'[1, 4, 2, 6, 0, 1, 1, 1, 28, 28, 0, 15, 0, 1, 1, 0, 1, 0]' : 0.24825}", "{'[1, 4, 2, 6, 0, 1, 1, 1, 28, 28, 0, 15, 0, 1, 1, 0, 1, 0]' : 0.24817}", "{'[1, 4, 2, 6, 0, 1, 1, 1, 28, 28, 0, 15, 0, 1, 1, 0, 1, 0]' : 0.248335}", "{'[1, 4, 2, 6, 0, 1, 1, 1, 28, 28, 0, 15, 0, 1, 1, 0, 1, 0]' : 0.249164}", "{'[1, 4, 2, 6, 0, 1, 1, 1, 28, 28, 0, 15, 0, 1, 1, 0, 1, 0]' : 0.248156}", "{'[1, 4, 2, 6, 0, 1, 1, 1, 28, 28, 0, 15, 0, 1, 1, 0, 1, 0]' : 0.248152}", "{'[1, 4, 2, 6, 0, 1, 1, 1, 28, 28, 0, 15,WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = iii
 0, 1, 1, 0, 1, 0]' : 0.248207}", "{'[1, 4, 2, 6, 0, 1, 1, 1, 28, 28, 0, 15, 0, 1, 1, 0, 1, 0]' : 0.248138}", "{'[1, 4, 2, 6, 0, 1, 1, 1, 28, 28, 0, 15, 0, 1, 1, 0, 1, 0]' : 0.248453}"]
returning from 'run': {'[1, 4, 2, 6, 0, 1, 1, 1, 28, 28, 0, 15, 0, 1, 1, 0, 1, 0]': ([0.249057, 0.247976, 0.247983, 0.248109, 0.248387, 0.248228, 0.248074, 0.248083, 0.249264, 0.248167, 0.248274, 0.248131, 0.248303, 0.248143, 0.248085, 0.248148, 0.249155, 0.248427, 0.248118, 0.24815, 0.248267, 0.24825, 0.24817, 0.248335, 0.249164, 0.248156, 0.248152, 0.248207, 0.248138, 0.248453], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.249057, 0.247976, 0.247983, 0.248109, 0.248387, 0.248228, 0.248074, 0.248083, 0.249264, 0.248167, 0.248274, 0.248131, 0.248303, 0.248143, 0.248085, 0.248148, 0.249155, 0.248427, 0.248118, 0.24815, 0.248267, 0.24825, 0.24817, 0.248335, 0.249164, 0.248156, 0.248152, 0.248207, 0.248138, 0.248453], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[1, 4, 2, 6, 0, 1, 1, 1, 28, 28, 0, 15, 0, 1, 1, 0, 1, 0]': ([0.249057, 0.247976, 0.247983, 0.248109, 0.248387, 0.248228, 0.248074, 0.248083, 0.249264, 0.248167, 0.248274, 0.248131, 0.248303, 0.248143, 0.248085, 0.248148, 0.249155, 0.248427, 0.248118, 0.24815, 0.248267, 0.24825, 0.24817, 0.248335, 0.249164, 0.248156, 0.248152, 0.248207, 0.248138, 0.248453], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [4, 1, 5, 2, 3, 0, 1, 1, 7, 22, 20, 0, 0, 0, 0, 0, 0, 1]
Fixed Factors: {}
Testing candidate 24: [4, 1, 5, 2, 3, 0, 1, 1, 7, 22, 20, 0, 0, 0, 0, 0, 0, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	133
        Max loop nest depth: 	5
        Additions: 		4882
        Multiplications: 	1104
        Divisions: 		0
        Logical: 		0
        Reads: 			7689
        Writes: 		997
        Comparisons:		133
        Gotos: 			0
        
digraph CFG {
	6136549 [label="6136549  register int cbv_29, cbv_30;...",shape=box];
	_JOIN_6093003 [label="_JOIN_6093003None...",shape=box];
	_JOIN_6093003 -> 6093035;
	6103357 [label="6103357  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	6146548 [label="6146548  register int cbv_62, cbv_63;...",shape=box];
	ForLoop6092036 [label="ForLoop6092036  for (j=jj; j<=cbv_37; j=j+21) {...",shape=box];
	ForLoop6092036 -> 6091314;
	ForLoop6092036 -> _JOIN_6092036;
	6095663 [label="6095663  tmp[(i+16)]=tmp[(i+16)]+A[(i+16)*ny+j]*x_copy[(j-jj)];...",shape=box];
	6095663 -> _JOIN_6095664;
	ForLoop6102467 [label="ForLoop6102467  for (k=kk; k<=cbv_70; k=k+1) {...",shape=box];
	ForLoop6102467 -> 6101761;
	ForLoop6102467 -> _JOIN_6102467;
	ForLoop6103184 [label="ForLoop6103184  for (i=ii; i<=min(nx-1,ii+127)-22; i=i+23) {...",shape=box];
	ForLoop6103184 -> 6080555;
	ForLoop6103184 -> _JOIN_6103184;
	_JOIN_6085020 [label="_JOIN_6085020None...",shape=box];
	_JOIN_6085020 -> 6085052;
	6093035 [label="6093035  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	_JOIN_6081401 [label="_JOIN_6081401None...",shape=box];
	_JOIN_6081401 -> 6128368;
	ForLoop6025918 [label="ForLoop6025918  for (i=ny-((ny-(0))%8); i<=ny-1; i=i+1) ...",shape=box];
	ForLoop6025918 -> 6025917;
	ForLoop6025918 -> _JOIN_6025918;
	6148366 [label="6148366  register int cbv_68, cbv_69;...",shape=box];
	_JOIN_6102467 [label="_JOIN_6102467None...",shape=box];
	_JOIN_6102467 -> 6102498;
	ForLoop6100991 [label="ForLoop6100991  for (jjj=0; jjj<=ny-1; jjj=jjj+256) {...",shape=box];
	ForLoop6100991 -> ForLoop6100989;
	ForLoop6100991 -> _JOIN_6100991;
	_JOIN_6025918 [label="_JOIN_6025918None...",shape=box];
	_JOIN_6025918 -> 6033780;
	ForLoop6081401 [label="ForLoop6081401  for (j=jj; j<=cbv_1; j=j+21) {...",shape=box];
	ForLoop6081401 -> 6080859;
	ForLoop6081401 -> _JOIN_6081401;
	6095749 [label="6095749  tmp[(i+17)]=tmp[(i+17)]+A[(i+17)*ny+j]*x_copy[(j-jj)];...",shape=box];
	6087680 [label="6087680  tmp[(i+7)]=tmp[(i+7)]+A[(i+7)*ny+j]*x_copy[(j-jj)];...",shape=box];
	6087680 -> _JOIN_6087681;
	6081504 [label="6081504  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	_JOIN_6098325 [label="_JOIN_6098325None...",shape=box];
	_JOIN_6098325 -> 6098357;
	6099244 [label="6099244  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	_JOIN_6093890 [label="_JOIN_6093890None...",shape=box];
	_JOIN_6093890 -> 6093922;
	6083278 [label="6083278  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	6085105 [label="6085105  tmp[(i+5)]=tmp[(i+5)]+A[(i+5)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_6104142 [label="_JOIN_6104142None...",shape=box];
	_JOIN_6104142 -> _JOIN_6029109;
	6087766 [label="6087766  tmp[(i+8)]=tmp[(i+8)]+A[(i+8)*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop6097438 [label="ForLoop6097438  for (j=cbv_56; j<=cbv_57; j=j+1) ...",shape=box];
	ForLoop6097438 -> 6097437;
	ForLoop6097438 -> _JOIN_6097438;
	_JOIN_6104018 [label="_JOIN_6104018None...",shape=box];
	_JOIN_6104018 -> ForLoop6104140;
	6104106 [label="6104106  y_copy[(k-kk)]=y_copy[(k-kk)]+A[i*ny+k]*tmp[i];...",shape=box];
	6104106 -> _JOIN_6104107;
	_JOIN_6104014 [label="_JOIN_6104014None...",shape=box];
	_JOIN_6104014 -> _JOIN_6104017;
	_JOIN_6104017 [label="_JOIN_6104017None...",shape=box];
	_JOIN_6104017 -> _JOIN_6104018;
	6093002 [label="6093002  tmp[(i+13)]=tmp[(i+13)]+A[(i+13)*ny+j]*x_copy[(j-jj)];...",shape=box];
	6093002 -> _JOIN_6093003;
	6096550 [label="6096550  tmp[(i+17)]=tmp[(i+17)]+A[(i+17)*ny+j]*x_copy[(j-jj)];...",shape=box];
	6096550 -> _JOIN_6096551;
	6097523 [label="6097523  tmp[(i+19)]=tmp[(i+19)]+A[(i+19)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_6082359 [label="_JOIN_6082359None...",shape=box];
	_JOIN_6082359 -> 6082391;
	_JOIN_6097438 [label="_JOIN_6097438None...",shape=box];
	_JOIN_6097438 -> 6097470;
	ForLoop6093810 [label="ForLoop6093810  for (j=jj; j<=cbv_43; j=j+21) {...",shape=box];
	ForLoop6093810 -> 6093088;
	ForLoop6093810 -> _JOIN_6093810;
	6086793 [label="6086793  tmp[(i+6)]=tmp[(i+6)]+A[(i+6)*ny+j]*x_copy[(j-jj)];...",shape=box];
	6086793 -> _JOIN_6086794;
	ForLoop6086714 [label="ForLoop6086714  for (j=jj; j<=cbv_19; j=j+21) {...",shape=box];
	ForLoop6086714 -> 6085992;
	ForLoop6086714 -> _JOIN_6086714;
	_JOIN_6084053 [label="_JOIN_6084053None...",shape=box];
	_JOIN_6084053 -> 6131095;
	6088567 [label="6088567  tmp[(i+8)]=tmp[(i+8)]+A[(i+8)*ny+j]*x_copy[(j-jj)];...",shape=box];
	6088567 -> _JOIN_6088568;
	_JOIN_6100099 [label="_JOIN_6100099None...",shape=box];
	_JOIN_6100099 -> 6100131;
	ForLoop6099212 [label="ForLoop6099212  for (j=cbv_62; j<=cbv_63; j=j+1) ...",shape=box];
	ForLoop6099212 -> 6099211;
	ForLoop6099212 -> _JOIN_6099212;
	_JOIN_6100906 [label="_JOIN_6100906None...",shape=box];
	_JOIN_6100906 -> 6148366;
	ForLoop6100989 [label="ForLoop6100989  for (jj=jjj; jj<=min(ny-1,jjj+240); jj=jj+16) {...",shape=box];
	ForLoop6100989 -> 6080815;
	ForLoop6100989 -> _JOIN_6100989;
	6131095 [label="6131095  register int cbv_11, cbv_12;...",shape=box];
	ForLoop6100099 [label="ForLoop6100099  for (j=cbv_65; j<=cbv_66; j=j+1) ...",shape=box];
	ForLoop6100099 -> 6100098;
	ForLoop6100099 -> _JOIN_6100099;
	6142912 [label="6142912  register int cbv_50, cbv_51;...",shape=box];
	ForLoop6100906 [label="ForLoop6100906  for (j=jj; j<=cbv_67; j=j+21) {...",shape=box];
	ForLoop6100906 -> 6100184;
	ForLoop6100906 -> _JOIN_6100906;
	ForLoop6086794 [label="ForLoop6086794  for (j=cbv_20; j<=cbv_21; j=j+1) ...",shape=box];
	ForLoop6086794 -> 6086793;
	ForLoop6086794 -> _JOIN_6086794;
	6090427 [label="6090427  tmp[(i+11)]=tmp[(i+11)]+A[(i+11)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_6100989 [label="_JOIN_6100989None...",shape=box];
	_JOIN_6100989 -> _JOIN_6100991;
	6085052 [label="6085052  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	_JOIN_6089455 [label="_JOIN_6089455None...",shape=box];
	_JOIN_6089455 -> 6089487;
	_JOIN_6025849 [label="_JOIN_6025849None...",shape=box];
	_JOIN_6025849 -> ForLoop6025918;
	_JOIN_6084940 [label="_JOIN_6084940None...",shape=box];
	_JOIN_6084940 -> 6132004;
	6088653 [label="6088653  tmp[(i+9)]=tmp[(i+9)]+A[(i+9)*ny+j]*x_copy[(j-jj)];...",shape=box];
	6093088 [label="6093088  tmp[(i+14)]=tmp[(i+14)]+A[(i+14)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_6096551 [label="_JOIN_6096551None...",shape=box];
	_JOIN_6096551 -> 6096583;
	6104062 [label="6104062  for (k=kk; k<=min(ny-1,kk+255); k=k+1) ...",shape=box];
	_JOIN_6100019 [label="_JOIN_6100019None...",shape=box];
	_JOIN_6100019 -> 6147457;
	ForLoop6090342 [label="ForLoop6090342  for (j=cbv_32; j<=cbv_33; j=j+1) ...",shape=box];
	ForLoop6090342 -> 6090341;
	ForLoop6090342 -> _JOIN_6090342;
	6091261 [label="6091261  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	_JOIN_6099212 [label="_JOIN_6099212None...",shape=box];
	_JOIN_6099212 -> 6099244;
	6099211 [label="6099211  tmp[(i+20)]=tmp[(i+20)]+A[(i+20)*ny+j]*x_copy[(j-jj)];...",shape=box];
	6099211 -> _JOIN_6099212;
	6090341 [label="6090341  tmp[(i+10)]=tmp[(i+10)]+A[(i+10)*ny+j]*x_copy[(j-jj)];...",shape=box];
	6090341 -> _JOIN_6090342;
	ForLoop6104018 [label="ForLoop6104018  for (jjj=0; jjj<=ny-1; jjj=jjj+256) ...",shape=box];
	ForLoop6104018 -> ForLoop6104017;
	ForLoop6104018 -> _JOIN_6104018;
	_JOIN_6095584 [label="_JOIN_6095584None...",shape=box];
	_JOIN_6095584 -> 6142912;
	6087713 [label="6087713  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	6096583 [label="6096583  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	ForLoop6083166 [label="ForLoop6083166  for (j=jj; j<=cbv_7; j=j+21) {...",shape=box];
	ForLoop6083166 -> 6082444;
	ForLoop6083166 -> _JOIN_6083166;
	ForLoop6085827 [label="ForLoop6085827  for (j=jj; j<=cbv_16; j=j+21) {...",shape=box];
	ForLoop6085827 -> 6085105;
	ForLoop6085827 -> _JOIN_6085827;
	ForLoop6094697 [label="ForLoop6094697  for (j=jj; j<=cbv_46; j=j+21) {...",shape=box];
	ForLoop6094697 -> 6093975;
	ForLoop6094697 -> _JOIN_6094697;
	ForLoop6104017 [label="ForLoop6104017  for (jj=jjj; jj<=min(ny-1,jjj+240); jj=jj+16) {...",shape=box];
	ForLoop6104017 -> 6103357;
	ForLoop6104017 -> _JOIN_6104017;
	_JOIN_6100986 [label="_JOIN_6100986None...",shape=box];
	_JOIN_6100986 -> _JOIN_6100989;
	_JOIN_6100991 [label="_JOIN_6100991None...",shape=box];
	_JOIN_6100991 -> ForLoop6103182;
	ForLoop6087601 [label="ForLoop6087601  for (j=jj; j<=cbv_22; j=j+21) {...",shape=box];
	ForLoop6087601 -> 6086879;
	ForLoop6087601 -> _JOIN_6087601;
	6091314 [label="6091314  tmp[(i+12)]=tmp[(i+12)]+A[(i+12)*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop6093003 [label="ForLoop6093003  for (j=cbv_41; j<=cbv_42; j=j+1) ...",shape=box];
	ForLoop6093003 -> 6093002;
	ForLoop6093003 -> _JOIN_6093003;
	ForLoop6082279 [label="ForLoop6082279  for (j=jj; j<=cbv_4; j=j+21) {...",shape=box];
	ForLoop6082279 -> 6081557;
	ForLoop6082279 -> _JOIN_6082279;
	ForLoop6088488 [label="ForLoop6088488  for (j=jj; j<=cbv_25; j=j+21) {...",shape=box];
	ForLoop6088488 -> 6087766;
	ForLoop6088488 -> _JOIN_6088488;
	6084132 [label="6084132  tmp[(i+3)]=tmp[(i+3)]+A[(i+3)*ny+j]*x_copy[(j-jj)];...",shape=box];
	6084132 -> _JOIN_6084133;
	6093889 [label="6093889  tmp[(i+14)]=tmp[(i+14)]+A[(i+14)*ny+j]*x_copy[(j-jj)];...",shape=box];
	6093889 -> _JOIN_6093890;
	6025917 [label="6025917  y[i]=0.0;...",shape=box];
	6025917 -> _JOIN_6025918;
	ForLoop6096471 [label="ForLoop6096471  for (j=jj; j<=cbv_52; j=j+21) {...",shape=box];
	ForLoop6096471 -> 6095749;
	ForLoop6096471 -> _JOIN_6096471;
	ForLoop6093890 [label="ForLoop6093890  for (j=cbv_44; j<=cbv_45; j=j+1) ...",shape=box];
	ForLoop6093890 -> 6093889;
	ForLoop6093890 -> _JOIN_6093890;
	6089487 [label="6089487  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	_JOIN_6090262 [label="_JOIN_6090262None...",shape=box];
	_JOIN_6090262 -> 6137458;
	ForLoop6084940 [label="ForLoop6084940  for (j=jj; j<=cbv_13; j=j+21) {...",shape=box];
	ForLoop6084940 -> 6084218;
	ForLoop6084940 -> _JOIN_6084940;
	_JOIN_6092923 [label="_JOIN_6092923None...",shape=box];
	_JOIN_6092923 -> 6140185;
	6025784 [label="6025784  y[i]=0.0;...",shape=box];
	6094776 [label="6094776  tmp[(i+15)]=tmp[(i+15)]+A[(i+15)*ny+j]*x_copy[(j-jj)];...",shape=box];
	6094776 -> _JOIN_6094777;
	6103401 [label="6103401  tmp[i]=tmp[i]+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	6141094 [label="6141094  register int cbv_44, cbv_45;...",shape=box];
	6100098 [label="6100098  tmp[(i+21)]=tmp[(i+21)]+A[(i+21)*ny+j]*x_copy[(j-jj)];...",shape=box];
	6100098 -> _JOIN_6100099;
	_JOIN_6092036 [label="_JOIN_6092036None...",shape=box];
	_JOIN_6092036 -> 6139276;
	_JOIN_6091229 [label="_JOIN_6091229None...",shape=box];
	_JOIN_6091229 -> 6091261;
	ForLoop6104142 [label="ForLoop6104142  for (i=(min(nx-1,ii+127))-(((min(nx-1,ii+127))-(ii)+1)%23)+1; i<=min(nx-1,ii+127); i=i+1) {...",shape=box];
	ForLoop6104142 -> 6103295;
	ForLoop6104142 -> _JOIN_6104142;
	6149836 [label="6149836  register int cbv_72, cbv_73;...",shape=box];
	ForLoop6104140 [label="ForLoop6104140  for (kk=0; kk<=ny-1; kk=kk+256) {...",shape=box];
	ForLoop6104140 -> 6104062;
	ForLoop6104140 -> _JOIN_6104140;
	6104013 [label="6104013  tmp[i]=tmp[i]+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	6104013 -> _JOIN_6104014;
	_JOIN_6086714 [label="_JOIN_6086714None...",shape=box];
	_JOIN_6086714 -> 6133822;
	_JOIN_6097358 [label="_JOIN_6097358None...",shape=box];
	_JOIN_6097358 -> 6144730;
	_JOIN_6089375 [label="_JOIN_6089375None...",shape=box];
	_JOIN_6089375 -> 6136549;
	ForLoop6091229 [label="ForLoop6091229  for (j=cbv_35; j<=cbv_36; j=j+1) ...",shape=box];
	ForLoop6091229 -> 6091228;
	ForLoop6091229 -> _JOIN_6091229;
	6084218 [label="6084218  tmp[(i+4)]=tmp[(i+4)]+A[(i+4)*ny+j]*x_copy[(j-jj)];...",shape=box];
	6083331 [label="6083331  tmp[(i+3)]=tmp[(i+3)]+A[(i+3)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_6103184 [label="_JOIN_6103184None...",shape=box];
	_JOIN_6103184 -> ForLoop6104142;
	_JOIN_6086794 [label="_JOIN_6086794None...",shape=box];
	_JOIN_6086794 -> 6086826;
	6098324 [label="6098324  tmp[(i+19)]=tmp[(i+19)]+A[(i+19)*ny+j]*x_copy[(j-jj)];...",shape=box];
	6098324 -> _JOIN_6098325;
	6082444 [label="6082444  tmp[(i+2)]=tmp[(i+2)]+A[(i+2)*ny+j]*x_copy[(j-jj)];...",shape=box];
	6132004 [label="6132004  register int cbv_14, cbv_15;...",shape=box];
	ForLoop6087681 [label="ForLoop6087681  for (j=cbv_23; j<=cbv_24; j=j+1) ...",shape=box];
	ForLoop6087681 -> 6087680;
	ForLoop6087681 -> _JOIN_6087681;
	6104138 [label="6104138  for (k=kk; k<=min(ny-1,kk+255); k=k+1) ...",shape=box];
	6104138 -> _JOIN_6104140;
	ForLoop6089455 [label="ForLoop6089455  for (j=cbv_29; j<=cbv_30; j=j+1) ...",shape=box];
	ForLoop6089455 -> 6089454;
	ForLoop6089455 -> _JOIN_6089455;
	6089454 [label="6089454  tmp[(i+9)]=tmp[(i+9)]+A[(i+9)*ny+j]*x_copy[(j-jj)];...",shape=box];
	6089454 -> _JOIN_6089455;
	6103295 [label="6103295  tmp[i]=0;...",shape=box];
	6103295 -> ForLoop6104018;
	6099297 [label="6099297  tmp[(i+21)]=tmp[(i+21)]+A[(i+21)*ny+j]*x_copy[(j-jj)];...",shape=box];
	6085992 [label="6085992  tmp[(i+6)]=tmp[(i+6)]+A[(i+6)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_6083166 [label="_JOIN_6083166None...",shape=box];
	_JOIN_6083166 -> 6130186;
	6134731 [label="6134731  register int cbv_23, cbv_24;...",shape=box];
	ForLoop6098245 [label="ForLoop6098245  for (j=jj; j<=cbv_58; j=j+21) {...",shape=box];
	ForLoop6098245 -> 6097523;
	ForLoop6098245 -> _JOIN_6098245;
	ForLoop6098325 [label="ForLoop6098325  for (j=cbv_59; j<=cbv_60; j=j+1) ...",shape=box];
	ForLoop6098325 -> 6098324;
	ForLoop6098325 -> _JOIN_6098325;
	6101035 [label="6101035  for (k=kk; k<=min(ny-1,kk+255); k=k+1) ...",shape=box];
	6082391 [label="6082391  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	6043499 [label="6043499  int i;...",shape=box];
	6043499 -> ForLoop6103184;
	ForLoop6099132 [label="ForLoop6099132  for (j=jj; j<=cbv_61; j=j+21) {...",shape=box];
	ForLoop6099132 -> 6098410;
	ForLoop6099132 -> _JOIN_6099132;
	_JOIN_6085827 [label="_JOIN_6085827None...",shape=box];
	_JOIN_6085827 -> 6132913;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 6025622;
	_JOIN_6104107 [label="_JOIN_6104107None...",shape=box];
	_JOIN_6104107 -> 6104138;
	6090374 [label="6090374  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	6085906 [label="6085906  tmp[(i+5)]=tmp[(i+5)]+A[(i+5)*ny+j]*x_copy[(j-jj)];...",shape=box];
	6085906 -> _JOIN_6085907;
	ForLoop6100986 [label="ForLoop6100986  for (j=cbv_68; j<=cbv_69; j=j+1) ...",shape=box];
	ForLoop6100986 -> 6100985;
	ForLoop6100986 -> _JOIN_6100986;
	6086879 [label="6086879  tmp[(i+7)]=tmp[(i+7)]+A[(i+7)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_6085907 [label="_JOIN_6085907None...",shape=box];
	_JOIN_6085907 -> 6085939;
	ForLoop6092116 [label="ForLoop6092116  for (j=cbv_38; j<=cbv_39; j=j+1) ...",shape=box];
	ForLoop6092116 -> 6092115;
	ForLoop6092116 -> _JOIN_6092116;
	_JOIN_6098245 [label="_JOIN_6098245None...",shape=box];
	_JOIN_6098245 -> 6145639;
	6100184 [label="6100184  tmp[(i+22)]=tmp[(i+22)]+A[(i+22)*ny+j]*x_copy[(j-jj)];...",shape=box];
	6092115 [label="6092115  tmp[(i+12)]=tmp[(i+12)]+A[(i+12)*ny+j]*x_copy[(j-jj)];...",shape=box];
	6092115 -> _JOIN_6092116;
	6088600 [label="6088600  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	6082358 [label="6082358  tmp[(i+1)]=tmp[(i+1)]+A[(i+1)*ny+j]*x_copy[(j-jj)];...",shape=box];
	6082358 -> _JOIN_6082359;
	6080859 [label="6080859  tmp[i]=tmp[i]+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop6103943 [label="ForLoop6103943  for (j=jj; j<=cbv_71; j=j+21) {...",shape=box];
	ForLoop6103943 -> 6103401;
	ForLoop6103943 -> _JOIN_6103943;
	_JOIN_6029109 [label="_JOIN_6029109None...",shape=box];
	6097470 [label="6097470  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	ForLoop6082359 [label="ForLoop6082359  for (j=cbv_5; j<=cbv_6; j=j+1) ...",shape=box];
	ForLoop6082359 -> 6082358;
	ForLoop6082359 -> _JOIN_6082359;
	ForLoop6091149 [label="ForLoop6091149  for (j=jj; j<=cbv_34; j=j+21) {...",shape=box];
	ForLoop6091149 -> 6090427;
	ForLoop6091149 -> _JOIN_6091149;
	6092201 [label="6092201  tmp[(i+13)]=tmp[(i+13)]+A[(i+13)*ny+j]*x_copy[(j-jj)];...",shape=box];
	6100985 [label="6100985  tmp[(i+22)]=tmp[(i+22)]+A[(i+22)*ny+j]*x_copy[(j-jj)];...",shape=box];
	6100985 -> _JOIN_6100986;
	_JOIN_6091149 [label="_JOIN_6091149None...",shape=box];
	_JOIN_6091149 -> 6138367;
	_JOIN_6081472 [label="_JOIN_6081472None...",shape=box];
	_JOIN_6081472 -> 6081504;
	_JOIN_6099132 [label="_JOIN_6099132None...",shape=box];
	_JOIN_6099132 -> 6146548;
	6143821 [label="6143821  register int cbv_53, cbv_54;...",shape=box];
	ForLoop6088568 [label="ForLoop6088568  for (j=cbv_26; j<=cbv_27; j=j+1) ...",shape=box];
	ForLoop6088568 -> 6088567;
	ForLoop6088568 -> _JOIN_6088568;
	ForLoop6104014 [label="ForLoop6104014  for (j=cbv_72; j<=cbv_73; j=j+1) ...",shape=box];
	ForLoop6104014 -> 6104013;
	ForLoop6104014 -> _JOIN_6104014;
	_JOIN_6092116 [label="_JOIN_6092116None...",shape=box];
	_JOIN_6092116 -> 6092148;
	_JOIN_6087601 [label="_JOIN_6087601None...",shape=box];
	_JOIN_6087601 -> 6134731;
	ForLoop6094777 [label="ForLoop6094777  for (j=cbv_47; j<=cbv_48; j=j+1) ...",shape=box];
	ForLoop6094777 -> 6094776;
	ForLoop6094777 -> _JOIN_6094777;
	6139276 [label="6139276  register int cbv_38, cbv_39;...",shape=box];
	6025622 [label="6025622  int i;...",shape=box];
	6025622 -> ForLoop6025849;
	6147457 [label="6147457  register int cbv_65, cbv_66;...",shape=box];
	6085019 [label="6085019  tmp[(i+4)]=tmp[(i+4)]+A[(i+4)*ny+j]*x_copy[(j-jj)];...",shape=box];
	6085019 -> _JOIN_6085020;
	6140185 [label="6140185  register int cbv_41, cbv_42;...",shape=box];
	ForLoop6081472 [label="ForLoop6081472  for (j=cbv_2; j<=cbv_3; j=j+1) ...",shape=box];
	ForLoop6081472 -> 6081471;
	ForLoop6081472 -> _JOIN_6081472;
	6096636 [label="6096636  tmp[(i+18)]=tmp[(i+18)]+A[(i+18)*ny+j]*x_copy[(j-jj)];...",shape=box];
	6145639 [label="6145639  register int cbv_59, cbv_60;...",shape=box];
	6093975 [label="6093975  tmp[(i+15)]=tmp[(i+15)]+A[(i+15)*ny+j]*x_copy[(j-jj)];...",shape=box];
	6130186 [label="6130186  register int cbv_8, cbv_9;...",shape=box];
	ForLoop6084133 [label="ForLoop6084133  for (j=cbv_11; j<=cbv_12; j=j+1) ...",shape=box];
	ForLoop6084133 -> 6084132;
	ForLoop6084133 -> _JOIN_6084133;
	_JOIN_6083246 [label="_JOIN_6083246None...",shape=box];
	_JOIN_6083246 -> 6083278;
	_JOIN_6104140 [label="_JOIN_6104140None...",shape=box];
	_JOIN_6104140 -> _JOIN_6104142;
	_JOIN_6094697 [label="_JOIN_6094697None...",shape=box];
	_JOIN_6094697 -> 6142003;
	6137458 [label="6137458  register int cbv_32, cbv_33;...",shape=box];
	6094862 [label="6094862  tmp[(i+16)]=tmp[(i+16)]+A[(i+16)*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop6092923 [label="ForLoop6092923  for (j=jj; j<=cbv_40; j=j+21) {...",shape=box];
	ForLoop6092923 -> 6092201;
	ForLoop6092923 -> _JOIN_6092923;
	6081557 [label="6081557  tmp[(i+1)]=tmp[(i+1)]+A[(i+1)*ny+j]*x_copy[(j-jj)];...",shape=box];
	6144730 [label="6144730  register int cbv_56, cbv_57;...",shape=box];
	ForLoop6090262 [label="ForLoop6090262  for (j=jj; j<=cbv_31; j=j+21) {...",shape=box];
	ForLoop6090262 -> 6089540;
	ForLoop6090262 -> _JOIN_6090262;
	6091228 [label="6091228  tmp[(i+11)]=tmp[(i+11)]+A[(i+11)*ny+j]*x_copy[(j-jj)];...",shape=box];
	6091228 -> _JOIN_6091229;
	_JOIN_6096471 [label="_JOIN_6096471None...",shape=box];
	_JOIN_6096471 -> 6143821;
	6135640 [label="6135640  register int cbv_26, cbv_27;...",shape=box];
	6094809 [label="6094809  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	ForLoop6096551 [label="ForLoop6096551  for (j=cbv_53; j<=cbv_54; j=j+1) ...",shape=box];
	ForLoop6096551 -> 6096550;
	ForLoop6096551 -> _JOIN_6096551;
	6080815 [label="6080815  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	ForLoop6085907 [label="ForLoop6085907  for (j=cbv_17; j<=cbv_18; j=j+1) ...",shape=box];
	ForLoop6085907 -> 6085906;
	ForLoop6085907 -> _JOIN_6085907;
	_JOIN_6103182 [label="_JOIN_6103182None...",shape=box];
	_JOIN_6103182 -> _JOIN_6103184;
	_JOIN_6088568 [label="_JOIN_6088568None...",shape=box];
	_JOIN_6088568 -> 6088600;
	6098357 [label="6098357  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	ForLoop6085020 [label="ForLoop6085020  for (j=cbv_14; j<=cbv_15; j=j+1) ...",shape=box];
	ForLoop6085020 -> 6085019;
	ForLoop6085020 -> _JOIN_6085020;
	ForLoop6097358 [label="ForLoop6097358  for (j=jj; j<=cbv_55; j=j+21) {...",shape=box];
	ForLoop6097358 -> 6096636;
	ForLoop6097358 -> _JOIN_6097358;
	6133822 [label="6133822  register int cbv_20, cbv_21;...",shape=box];
	6083245 [label="6083245  tmp[(i+2)]=tmp[(i+2)]+A[(i+2)*ny+j]*x_copy[(j-jj)];...",shape=box];
	6083245 -> _JOIN_6083246;
	ForLoop6095584 [label="ForLoop6095584  for (j=jj; j<=cbv_49; j=j+21) {...",shape=box];
	ForLoop6095584 -> 6094862;
	ForLoop6095584 -> _JOIN_6095584;
	6142003 [label="6142003  register int cbv_47, cbv_48;...",shape=box];
	6132913 [label="6132913  register int cbv_17, cbv_18;...",shape=box];
	6101761 [label="6101761  y_copy[(k-kk)]=y_copy[(k-kk)]+A[i*ny+k]*tmp[i];...",shape=box];
	ForLoop6083246 [label="ForLoop6083246  for (j=cbv_8; j<=cbv_9; j=j+1) ...",shape=box];
	ForLoop6083246 -> 6083245;
	ForLoop6083246 -> _JOIN_6083246;
	6097437 [label="6097437  tmp[(i+18)]=tmp[(i+18)]+A[(i+18)*ny+j]*x_copy[(j-jj)];...",shape=box];
	6097437 -> _JOIN_6097438;
	6100131 [label="6100131  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	6098410 [label="6098410  tmp[(i+20)]=tmp[(i+20)]+A[(i+20)*ny+j]*x_copy[(j-jj)];...",shape=box];
	6138367 [label="6138367  register int cbv_35, cbv_36;...",shape=box];
	_JOIN_6088488 [label="_JOIN_6088488None...",shape=box];
	_JOIN_6088488 -> 6135640;
	6102498 [label="6102498  for (k=kk; k<=min(ny-1,kk+255); k=k+1) ...",shape=box];
	ForLoop6029109 [label="ForLoop6029109  for (ii=0; ii<=nx-1; ii=ii+128) {...",shape=box];
	ForLoop6029109 -> 6043499;
	ForLoop6029109 -> _JOIN_6029109;
	_JOIN_6082279 [label="_JOIN_6082279None...",shape=box];
	_JOIN_6082279 -> 6129277;
	_JOIN_6087681 [label="_JOIN_6087681None...",shape=box];
	_JOIN_6087681 -> 6087713;
	6080555 [label="6080555  tmp[i]=0;...",shape=box];
	_JOIN_6093810 [label="_JOIN_6093810None...",shape=box];
	_JOIN_6093810 -> 6141094;
	_JOIN_6095664 [label="_JOIN_6095664None...",shape=box];
	_JOIN_6095664 -> 6095696;
	ForLoop6104107 [label="ForLoop6104107  for (k=kk; k<=cbv_74; k=k+1) ...",shape=box];
	ForLoop6104107 -> 6104106;
	ForLoop6104107 -> _JOIN_6104107;
	_JOIN_6103943 [label="_JOIN_6103943expected=9369846271501.798828
actual=9369846271501.798828
None...",shape=box];
	_JOIN_6103943 -> 6149836;
	6089540 [label="6089540  tmp[(i+10)]=tmp[(i+10)]+A[(i+10)*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop6103182 [label="ForLoop6103182  for (kk=0; kk<=ny-1; kk=kk+256) {...",shape=box];
	ForLoop6103182 -> 6101035;
	ForLoop6103182 -> _JOIN_6103182;
	6086826 [label="6086826  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	_JOIN_6084133 [label="_JOIN_6084133None...",shape=box];
	_JOIN_6084133 -> 6084165;
	6084165 [label="6084165  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	6093922 [label="6093922  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	_JOIN_6090342 [label="_JOIN_6090342None...",shape=box];
	_JOIN_6090342 -> 6090374;
	ForLoop6025849 [label="ForLoop6025849  for (i=0; i<=ny-8; i=i+8) {...",shape=box];
	ForLoop6025849 -> 6025784;
	ForLoop6025849 -> _JOIN_6025849;
	6085939 [label="6085939  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	6033780 [label="6033780  double x_copy[16];...",shape=box];
	6128368 [label="6128368  register int cbv_2, cbv_3;...",shape=box];
	ForLoop6095664 [label="ForLoop6095664  for (j=cbv_50; j<=cbv_51; j=j+1) ...",shape=box];
	ForLoop6095664 -> 6095663;
	ForLoop6095664 -> _JOIN_6095664;
	ForLoop6084053 [label="ForLoop6084053  for (j=jj; j<=cbv_10; j=j+21) {...",shape=box];
	ForLoop6084053 -> 6083331;
	ForLoop6084053 -> _JOIN_6084053;
	6092148 [label="6092148  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	ForLoop6089375 [label="ForLoop6089375  for (j=jj; j<=cbv_28; j=j+21) {...",shape=box];
	ForLoop6089375 -> 6088653;
	ForLoop6089375 -> _JOIN_6089375;
	6095696 [label="6095696  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	6129277 [label="6129277  register int cbv_5, cbv_6;...",shape=box];
	ForLoop6100019 [label="ForLoop6100019  for (j=jj; j<=cbv_64; j=j+21) {...",shape=box];
	ForLoop6100019 -> 6099297;
	ForLoop6100019 -> _JOIN_6100019;
	6081471 [label="6081471  tmp[i]=tmp[i]+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	6081471 -> _JOIN_6081472;
	_JOIN_6094777 [label="_JOIN_6094777None...",shape=box];
	_JOIN_6094777 -> 6094809;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest24.exe __orio_perftest24.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest24.exe  
{'[4, 1, 5, 2, 3, 0, 1, 1, 7, 22, 20, 0, 0, 0, 0, 0, 0, 1]' : 0.282585}
{'[4, 1, 5, 2, 3, 0, 1, 1, 7, 22, 20, 0, 0, 0, 0, 0, 0, 1]' : 0.282004}
{'[4, 1, 5, 2, 3, 0, 1, 1, 7, 22, 20, 0, 0, 0, 0, 0, 0, 1]' : 0.282233}
{'[4, 1, 5, 2, 3, 0, 1, 1, 7, 22, 20, 0, 0, 0, 0, 0, 0, 1]' : 0.28323}
{'[4, 1, 5, 2, 3, 0, 1, 1, 7, 22, 20, 0, 0, 0, 0, 0, 0, 1]' : 0.282329}
{'[4, 1, 5, 2, 3, 0, 1, 1, 7, 22, 20, 0, 0, 0, 0, 0, 0, 1]' : 0.28218}
{'[4, 1, 5, 2, 3, 0, 1, 1, 7, 22, 20, 0, 0, 0, 0, 0, 0, 1]' : 0.282113}
{'[4, 1, 5, 2, 3, 0, 1, 1, 7, 22, 20, 0, 0, 0, 0, 0, 0, 1]' : 0.282144}
{'[4, 1, 5, 2, 3, 0, 1, 1, 7, 22, 20, 0, 0, 0, 0, 0, 0, 1]' : 0.28169}
{'[4, 1, 5, 2, 3, 0, 1, 1, 7, 22, 20, 0, 0, 0, 0, 0, 0, 1]' : 0.281963}
{'[4, 1, 5, 2, 3, 0, 1, 1, 7, 22, 20, 0, 0, 0, 0, 0, 0, 1]' : 0.283258}
{'[4, 1, 5, 2, 3, 0, 1, 1, 7, 22, 20, 0, 0, 0, 0, 0, 0, 1]' : 0.282354}
{'[4, 1, 5, 2, 3, 0, 1, 1, 7, 22, 20, 0, 0, 0, 0, 0, 0, 1]' : 0.28185}
{'[4, 1, 5, 2, 3, 0, 1, 1, 7, 22, 20, 0, 0, 0, 0, 0, 0, 1]' : 0.281904}
{'[4, 1, 5, 2, 3, 0, 1, 1, 7, 22, 20, 0, 0, 0, 0, 0, 0, 1]' : 0.282019}
{'[4, 1, 5, 2, 3, 0, 1, 1, 7, 22, 20, 0, 0, 0, 0, 0, 0, 1]' : 0.281852}
{'[4, 1, 5, 2, 3, 0, 1, 1, 7, 22, 20, 0, 0, 0, 0, 0, 0, 1]' : 0.282385}
{'[4, 1, 5, 2, 3, 0, 1, 1, 7, 22, 20, 0, 0, 0, 0, 0, 0, 1]' : 0.282977}
{'[4, 1, 5, 2, 3, 0, 1, 1, 7, 22, 20, 0, 0, 0, 0, 0, 0, 1]' : 0.281899}
{'[4, 1, 5, 2, 3, 0, 1, 1, 7, 22, 20, 0, 0, 0, 0, 0, 0, 1]' : 0.281901}
{'[4, 1, 5, 2, 3, 0, 1, 1, 7, 22, 20, 0, 0, 0, 0, 0, 0, 1]' : 0.281926}
{'[4, 1, 5, 2, 3, 0, 1, 1, 7, 22, 20, 0, 0, 0, 0, 0, 0, 1]' : 0.28195}
{'[4, 1, 5, 2, 3, 0, 1, 1, 7, 22, 20, 0, 0, 0, 0, 0, 0, 1]' : 0.282269}
{'[4, 1, 5, 2, 3, 0, 1, 1, 7, 22, 20, 0, 0, 0, 0, 0, 0, 1]' : 0.281837}
{'[4, 1, 5, 2, 3, 0, 1, 1, 7, 22, 20, 0, 0, 0, 0, 0, 0, 1]' : 0.283156}
{'[4, 1, 5, 2, 3, 0, 1, 1, 7, 22, 20, 0, 0, 0, 0, 0, 0, 1]' : 0.281968}
{'[4, 1, 5, 2, 3, 0, 1, 1, 7, 22, 20, 0, 0, 0, 0, 0, 0, 1]' : 0.282071}
{'[4, 1, 5, 2, 3, 0, 1, 1, 7, 22, 20, 0, 0, 0, 0, 0, 0, 1]' : 0.28211}
{'[4, 1, 5, 2, 3, 0, 1, 1, 7, 22, 20, 0, 0, 0, 0, 0, 0, 1]' : 0.281788}
{'[4, 1, 5, 2, 3, 0, 1, 1, 7, 22, 20, 0, 0, 0, 0, 0, 0, 1]' : 0.282122}

out:
 ["{'[4, 1, 5, 2, 3, 0, 1, 1, 7, 22, 20, 0, 0, 0, 0, 0, 0, 1]' : 0.282585}", "{'[4, 1, 5, 2, 3, 0, 1, 1, 7, 22, 20, 0, 0, 0, 0, 0, 0, 1]' : 0.282004}", "{'[4, 1, 5, 2, 3, 0, 1, 1, 7, 22, 20, 0, 0, 0, 0, 0, 0, 1]' : 0.282233}", "{'[4, 1, 5, 2, 3, 0, 1, 1, 7, 22, 20, 0, 0, 0, 0, 0, 0, 1]' : 0.28323}", "{'[4, 1, 5, 2, 3, 0, 1, 1, 7, 22, 20, 0, 0, 0, 0, 0, 0, 1]' : 0.282329}", "{'[4, 1, 5, 2, 3, 0, 1, 1, 7, 22, 20, 0, 0, 0, 0, 0, 0, 1]' : 0.28218}", "{'[4, 1, 5, 2, 3, 0, 1, 1, 7, 22, 20, 0, 0, 0, 0, 0, 0, 1]' : 0.282113}", "{'[4, 1, 5, 2, 3, 0, 1, 1, 7, 22, 20, 0, 0, 0, 0, 0, 0, 1]' : 0.282144}", "{'[4, 1, 5, 2, 3, 0, 1, 1, 7, 22, 20, 0, 0, 0, 0, 0, 0, 1]' : 0.28169}", "{'[4, 1, 5, 2, 3, 0, 1, 1, 7, 22, 20, 0, 0, 0, 0, 0, 0, 1]' : 0.281963}", "{'[4, 1, 5, 2, 3, 0, 1, 1, 7, 22, 20, 0, 0, 0, 0, 0, 0, 1]' : 0.283258}", "{'[4, 1, 5, 2, 3, 0, 1, 1, 7, 22, 20, 0, 0, 0, 0, 0, 0, 1]' : 0.282354}", "{'[4, 1, 5, 2, 3, 0, 1, 1, 7, 22, 20, 0, 0, 0, 0, 0, 0, 1]' : 0.28185}", "{'[4, 1, 5, 2, 3, 0, 1, 1, 7, 22, 20, 0, 0, 0, 0, 0, 0, 1]' : 0.281904}", "{'[4, 1, 5, 2, 3, 0, 1, 1, 7, 22, 20, 0, 0, 0, 0, 0, 0, 1]' : 0.282019}", "{'[4, 1, 5, 2, 3, 0, 1, 1, 7, 22, 20, 0, 0, 0, 0, 0, 0, 1]' : 0.281852}", "{'[4, 1, 5, 2, 3, 0, 1, 1, 7, 22, 20, 0, 0, 0, 0, 0, 0, 1]' : 0.282385}", "{'[4, 1, 5, 2, 3, 0, 1, 1, 7, 22, 20, 0, 0, 0, 0, 0, 0, 1]' : 0.282977}", "{'[4, 1, 5, 2, 3, 0, 1, 1, 7, 22, 20, 0, 0, 0, 0, 0, 0, 1]' : 0.281899}", "{'[4, 1, 5, 2, 3, 0, 1, 1, 7, 22, 20, 0, 0, 0, 0, 0, 0, 1]' : 0.281901}", "{'[4, 1, 5, 2, 3, 0, 1, 1, 7, 22, 20, 0, 0, 0, 0, 0, 0, 1]' : 0.281926}", "{'[4, 1, 5, 2, 3, 0, 1, 1, 7, 22, 20, 0, 0, 0, 0, 0, 0, 1]' : 0.28195}", "{'[4, 1, 5, 2, 3, 0, 1, 1, 7, 22, 20, 0, 0, 0, 0, 0, 0, 1]' : 0.282269}", "{'[4, 1, 5, 2, 3, 0, 1, 1, 7, 22, 20, 0, 0, 0, 0, 0, 0, 1]' : 0.281837}", "{'[4, 1, 5, 2, 3, 0, 1, 1, 7, 22, 20, 0, 0, 0, 0, 0, 0, 1]' : 0.283156}", "{'[4, 1, 5, 2, 3, 0, 1, 1, 7, 22, 20, 0, 0, 0, 0, 0, 0, 1]' : 0.281968}", "{'[4, 1, 5, 2, 3, 0, 1, 1, 7, 22, 20, 0, 0, 0, 0, 0, 0, 1]' : 0.282071}", "{'[4, 1, 5, 2, 3, 0, 1, 1, 7, 22, 20, 0, 0, 0, 0, 0, 0, 1]' : 0.28211}", "{'[4, 1, 5, 2, 3, 0, 1, 1, 7, 22, 20, 0, 0, 0, 0, 0, 0, 1]' : 0.281788}", "{'[4, 1, 5, 2, 3, 0, 1, 1, 7, 22, 20, 0, 0, 0, 0, 0, 0, 1]' : 0.282122}"]
returning from 'run': {'[4, 1, 5, 2, 3, 0, 1, 1, 7, 22, 20, 0, 0, 0, 0, 0, 0, 1]': ([0.282585, 0.282004, 0.282233, 0.28323, 0.282329, 0.28218, 0.282113, 0.282144, 0.28169, 0.281963, 0.283258, 0.282354, 0.28185, 0.281904, 0.282019, 0.281852, 0.282385, 0.282977, 0.281899, 0.281901, 0.281926, 0.28195, 0.282269, 0.281837, 0.283156, 0.281968, 0.282071, 0.28211, 0.281788, 0.282122], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.282585, 0.282004, 0.282233, 0.28323, 0.282329, 0.28218, 0.282113, 0.282144, 0.28169, 0.281963, 0.283258, 0.282354, 0.28185, 0.281904, 0.282019, 0.281852, 0.282385, 0.282977, 0.281899, 0.281901, 0.281926, 0.28195, 0.282269, 0.281837, 0.283156, 0.281968, 0.282071, 0.28211, 0.281788, 0.282122], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[4, 1, 5, 2, 3, 0, 1, 1, 7, 22, 20, 0, 0, 0, 0, 0, 0, 1]': ([0.282585, 0.282004, 0.282233, 0.28323, 0.282329, 0.28218, 0.282113, 0.282144, 0.28169, 0.281963, 0.283258, 0.282354, 0.28185, 0.281904, 0.282019, 0.281852, 0.282385, 0.282977, 0.281899, 0.281901, 0.281926, 0.28195, 0.282269, 0.281837, 0.283156, 0.281968, 0.282071, 0.28211, 0.281788, 0.282122], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = jjj
inf, inf, inf, inf])}
Initial Design Line: [1, 5, 0, 2, 3, 1, 1, 1, 1, 9, 0, 28, 0, 1, 0, 1, 0, 0]
Fixed Factors: {}
Testing candidate 25: [1, 5, 0, 2, 3, 1, 1, 1, 1, 9, 0, 28, 0, 1, 0, 1, 0, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	67
        Max loop nest depth: 	5
        Additions: 		3240
        Multiplications: 	836
        Divisions: 		0
        Logical: 		0
        Reads: 			6367
        Writes: 		1289
        Comparisons:		67
        Gotos: 			0
        
digraph CFG {
	ForLoop6257421 [label="ForLoop6257421  for (k=(min(ny-1,kkk+63))-(((min(ny-1,kkk+63))-(kkk)+1)%29)+1; k<=min(ny-1,kkk+63); k=k+1) {...",shape=box];
	ForLoop6257421 -> 6279141;
	ForLoop6257421 -> _JOIN_6257421;
	ForLoop6270225 [label="ForLoop6270225  for (k=(min(ny-1,kkk+63))-(((min(ny-1,kkk+63))-(kkk)+1)%29)+1; k<=min(ny-1,kkk+63); k=k+1) {...",shape=box];
	ForLoop6270225 -> 6338007;
	ForLoop6270225 -> _JOIN_6270225;
	6295982 [label="6295982  double scv_219, scv_220, scv_221, scv_222, scv_223, scv_224, scv_225, scv_226;...",shape=box];
	_JOIN_6270264 [label="_JOIN_6270264None...",shape=box];
	_JOIN_6270261 [label="_JOIN_6270261None...",shape=box];
	_JOIN_6270261 -> _JOIN_6270263;
	_JOIN_6270263 [label="_JOIN_6270263None...",shape=box];
	_JOIN_6270263 -> _JOIN_6270264;
	6286707 [label="6286707  double scv_128;...",shape=box];
	ForLoop6262469 [label="ForLoop6262469  for (k=(min(ny-1,kkk+63))-(((min(ny-1,kkk+63))-(kkk)+1)%29)+1; k<=min(ny-1,kkk+63); k=k+1) {...",shape=box];
	ForLoop6262469 -> 6289229;
	ForLoop6262469 -> _JOIN_6262469;
	ForLoop6270151 [label="ForLoop6270151  for (k=kkk; k<=min(ny-1,kkk+63)-28; k=k+29) {...",shape=box];
	ForLoop6270151 -> 6337203;
	ForLoop6270151 -> _JOIN_6270151;
	ForLoop6150536 [label="ForLoop6150536  for (i=ny-((ny-(0))%2); i<=ny-1; i=i+1) ...",shape=box];
	ForLoop6150536 -> 6150535;
	ForLoop6150536 -> _JOIN_6150536;
	6253103 [label="6253103  double x_copy[256];...",shape=box];
	6150384 [label="6150384  int i;...",shape=box];
	6150384 -> ForLoop6150467;
	6267549 [label="6267549  for (k=kkk; k<=min(ny-1,kkk+63); k=k+1) ...",shape=box];
	_JOIN_6150536 [label="_JOIN_6150536None...",shape=box];
	_JOIN_6150536 -> 6253103;
	6261239 [label="6261239  for (k=kkk; k<=min(ny-1,kkk+63); k=k+1) ...",shape=box];
	6258715 [label="6258715  for (k=kkk; k<=min(ny-1,kkk+63); k=k+1) ...",shape=box];
	_JOIN_6263731 [label="_JOIN_6263731None...",shape=box];
	_JOIN_6263731 -> 6263763;
	6266287 [label="6266287  for (k=kkk; k<=min(ny-1,kkk+63); k=k+1) ...",shape=box];
	_JOIN_6266175 [label="_JOIN_6266175None...",shape=box];
	_JOIN_6266175 -> ForLoop6266255;
	6279141 [label="6279141  double scv_38;...",shape=box];
	ForLoop6264913 [label="ForLoop6264913  for (k=kkk; k<=min(ny-1,kkk+63)-28; k=k+29) {...",shape=box];
	ForLoop6264913 -> 6293460;
	ForLoop6264913 -> _JOIN_6264913;
	ForLoop6263731 [label="ForLoop6263731  for (k=(min(ny-1,kkk+63))-(((min(ny-1,kkk+63))-(kkk)+1)%29)+1; k<=min(ny-1,kkk+63); k=k+1) {...",shape=box];
	ForLoop6263731 -> 6291751;
	ForLoop6263731 -> _JOIN_6263731;
	_JOIN_6262389 [label="_JOIN_6262389None...",shape=box];
	_JOIN_6262389 -> ForLoop6262469;
	_JOIN_6262469 [label="_JOIN_6262469None...",shape=box];
	_JOIN_6262469 -> 6262501;
	6338007 [label="6338007  double scv_348;...",shape=box];
	6334447 [label="6334447  double scv_309, scv_310, scv_311, scv_312, scv_313, scv_314, scv_315, scv_316;...",shape=box];
	ForLoop6258603 [label="ForLoop6258603  for (k=kkk; k<=min(ny-1,kkk+63)-28; k=k+29) {...",shape=box];
	ForLoop6258603 -> 6280850;
	ForLoop6258603 -> _JOIN_6258603;
	ForLoop6264993 [label="ForLoop6264993  for (k=(min(ny-1,kkk+63))-(((min(ny-1,kkk+63))-(kkk)+1)%29)+1; k<=min(ny-1,kkk+63); k=k+1) {...",shape=box];
	ForLoop6264993 -> 6294273;
	ForLoop6264993 -> _JOIN_6264993;
	ForLoop6267517 [label="ForLoop6267517  for (k=(min(ny-1,kkk+63))-(((min(ny-1,kkk+63))-(kkk)+1)%29)+1; k<=min(ny-1,kkk+63); k=k+1) {...",shape=box];
	ForLoop6267517 -> 6299317;
	ForLoop6267517 -> _JOIN_6267517;
	ForLoop6150467 [label="ForLoop6150467  for (i=0; i<=ny-2; i=i+2) {...",shape=box];
	ForLoop6150467 -> 6150456;
	ForLoop6150467 -> _JOIN_6150467;
	ForLoop6269162 [label="ForLoop6269162  for (jj=0; jj<=ny-1; jj=jj+256) {...",shape=box];
	ForLoop6269162 -> 6268912;
	ForLoop6269162 -> _JOIN_6269162;
	_JOIN_6259865 [label="_JOIN_6259865None...",shape=box];
	_JOIN_6259865 -> ForLoop6259945;
	ForLoop6258683 [label="ForLoop6258683  for (k=(min(ny-1,kkk+63))-(((min(ny-1,kkk+63))-(kkk)+1)%29)+1; k<=min(ny-1,kkk+63); k=k+1) {...",shape=box];
	ForLoop6258683 -> 6281663;
	ForLoop6258683 -> _JOIN_6258683;
	_JOIN_6263651 [label="_JOIN_6263651None...",shape=box];
	_JOIN_6263651 -> ForLoop6263731;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 6150384;
	_JOIN_6268815 [label="_JOIN_6268815None...",shape=box];
	_JOIN_6268815 -> ForLoop6270261;
	6289229 [label="6289229  double scv_158;...",shape=box];
	6285894 [label="6285894  double scv_99, scv_100, scv_101, scv_102, scv_103, scv_104, scv_105, scv_106;...",shape=box];
	ForLoop6268779 [label="ForLoop6268779  for (k=(min(ny-1,kkk+63))-(((min(ny-1,kkk+63))-(kkk)+1)%29)+1; k<=min(ny-1,kkk+63); k=k+1) {...",shape=box];
	ForLoop6268779 -> 6301839;
	ForLoop6268779 -> _JOIN_6268779;
	ForLoop6269160 [label="ForLoop6269160  for (jt=jj; jt<=min(ny-1,jj+255)-7; jt=jt+8) {...",shape=box];
	ForLoop6269160 -> 6268955;
	ForLoop6269160 -> _JOIN_6269160;
	ForLoop6261207 [label="ForLoop6261207  for (k=(min(ny-1,kkk+63))-(((min(ny-1,kkk+63))-(kkk)+1)%29)+1; k<=min(ny-1,kkk+63); k=k+1) {...",shape=box];
	ForLoop6261207 -> 6286707;
	ForLoop6261207 -> _JOIN_6261207;
	ForLoop6262389 [label="ForLoop6262389  for (k=kkk; k<=min(ny-1,kkk+63)-28; k=k+29) {...",shape=box];
	ForLoop6262389 -> 6288416;
	ForLoop6262389 -> _JOIN_6262389;
	6150535 [label="6150535  y[i]=0.0;...",shape=box];
	6150535 -> _JOIN_6150536;
	ForLoop6261127 [label="ForLoop6261127  for (k=kkk; k<=min(ny-1,kkk+63)-28; k=k+29) {...",shape=box];
	ForLoop6261127 -> 6285894;
	ForLoop6261127 -> _JOIN_6261127;
	ForLoop6266255 [label="ForLoop6266255  for (k=(min(ny-1,kkk+63))-(((min(ny-1,kkk+63))-(kkk)+1)%29)+1; k<=min(ny-1,kkk+63); k=k+1) {...",shape=box];
	ForLoop6266255 -> 6296795;
	ForLoop6266255 -> _JOIN_6266255;
	6268912 [label="6268912  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	6268912 -> ForLoop6269160;
	_JOIN_6268813 [label="_JOIN_6268813None...",shape=box];
	_JOIN_6268813 -> 6334465;
	ForLoop6270259 [label="ForLoop6270259  for (kkk=0; kkk<=ny-1; kkk=kkk+64) {...",shape=box];
	ForLoop6270259 -> 6269206;
	ForLoop6270259 -> _JOIN_6270259;
	_JOIN_6261207 [label="_JOIN_6261207None...",shape=box];
	_JOIN_6261207 -> 6261239;
	6278337 [label="6278337  double scv_9, scv_10, scv_11, scv_12, scv_13, scv_14, scv_15, scv_16;...",shape=box];
	6265025 [label="6265025  for (k=kkk; k<=min(ny-1,kkk+63); k=k+1) ...",shape=box];
	6269206 [label="6269206  for (k=kkk; k<=min(ny-1,kkk+63); k=k+1) ...",shape=box];
	ForLoop6263651 [label="ForLoop6263651  for (k=kkk; k<=min(ny-1,kkk+63)-28; k=k+29) {...",shape=box];
	ForLoop6263651 -> 6290938;
	ForLoop6263651 -> _JOIN_6263651;
	_JOIN_6270225 [label="_JOIN_6270225None...",shape=box];
	_JOIN_6270225 -> 6270257;
	6270257 [label="6270257  for (k=kkk; k<=min(ny-1,kkk+63); k=k+1) ...",shape=box];
	6270257 -> _JOIN_6270259;
	6334465 [label="6334465  tmp[(i+1)]=scv_309;...",shape=box];
	ForLoop6268813 [label="ForLoop6268813  for (kkk=0; kkk<=ny-1; kkk=kkk+64) {...",shape=box];
	ForLoop6268813 -> 6256402;
	ForLoop6268813 -> _JOIN_6268813;
	_JOIN_6150467 [label="_JOIN_6150467None...",shape=box];
	_JOIN_6150467 -> ForLoop6150536;
	ForLoop6268815 [label="ForLoop6268815  for (i=ii; i<=min(nx-1,ii+15)-9; i=i+10) {...",shape=box];
	ForLoop6268815 -> 6334447;
	ForLoop6268815 -> _JOIN_6268815;
	ForLoop6270261 [label="ForLoop6270261  for (i=(min(nx-1,ii+15))-(((min(nx-1,ii+15))-(ii)+1)%10)+1; i<=min(nx-1,ii+15); i=i+1) {...",shape=box];
	ForLoop6270261 -> 6341049;
	ForLoop6270261 -> _JOIN_6270261;
	ForLoop6270263 [label="ForLoop6270263  for (ii=iii; ii<=min(nx-1,iii+112); ii=ii+16) {...",shape=box];
	ForLoop6270263 -> 6253136;
	ForLoop6270263 -> _JOIN_6270263;
	ForLoop6270264 [label="ForLoop6270264  for (iii=0; iii<=nx-1; iii=iii+128) {...",shape=box];
	ForLoop6270264 -> ForLoop6270263;
	ForLoop6270264 -> _JOIN_6270264;
	_JOIN_6268779 [label="_JOIN_6268779None...",shape=box];
	_JOIN_6268779 -> 6268811;
	6280850 [label="6280850  double scv_39, scv_40, scv_41, scv_42, scv_43, scv_44, scv_45, scv_46;...",shape=box];
	6281663 [label="6281663  double scv_68;...",shape=box];
	ForLoop6257347 [label="ForLoop6257347  for (k=kkk; k<=min(ny-1,kkk+63)-28; k=k+29) {...",shape=box];
	ForLoop6257347 -> 6278337;
	ForLoop6257347 -> _JOIN_6257347;
	ForLoop6267437 [label="ForLoop6267437  for (k=kkk; k<=min(ny-1,kkk+63)-28; k=k+29) {...",shape=box];
	ForLoop6267437 -> 6298504;
	ForLoop6267437 -> _JOIN_6267437;
	6301026 [label="6301026  double scv_279, scv_280, scv_281, scv_282, scv_283, scv_284, scv_285, scv_286;...",shape=box];
	_JOIN_6267517 [label="_JOIN_6267517None...",shape=box];
	_JOIN_6267517 -> 6267549;
	_JOIN_6261127 [label="_JOIN_6261127None...",shape=box];
	_JOIN_6261127 -> ForLoop6261207;
	_JOIN_6257347 [label="_JOIN_6257347None...",shape=box];
	_JOIN_6257347 -> ForLoop6257421;
	_JOIN_6268699 [label="_JOIN_6268699None...",shape=box];
	_JOIN_6268699 -> ForLoop6268779;
	6262501 [label="6262501  for (k=kkk; k<=min(ny-1,kkk+63); k=k+1) ...",shape=box];
	_JOIN_6257421 [label="_JOIN_6257421None...",shape=box];
	_JOIN_6257421 -> 6257453;
	_JOIN_6264993 [label="_JOIN_6264993None...",shape=box];
	_JOIN_6264993 -> 6265025;
	6294273 [label="6294273  double scv_218;...",shape=box];
	6337203 [label="6337203  double scv_319, scv_320, scv_321, scv_322, scv_323, scv_324, scv_325, scv_326;...",shape=box];
	_JOIN_6270259 [label="_JOIN_6270259None...",shape=box];
	_JOIN_6270259 -> 6341061;
	6256402 [label="6256402  for (k=kkk; k<=min(ny-1,kkk+63); k=k+1) ...",shape=box];
	_JOIN_6256358 [label="_JOIN_6256358None...",shape=box];
	_JOIN_6256358 -> ForLoop6268813;
	6274083 [label="6274083  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	_JOIN_6256356 [label="_JOIN_6256356None...",shape=box];
	_JOIN_6256356 -> _JOIN_6256358;
	6291751 [label="6291751  double scv_188;...",shape=box];
	_JOIN_6270151 [label="_JOIN_6270151None...",shape=box];
	_JOIN_6270151 -> ForLoop6270225;
	6293460 [label="6293460  double scv_189, scv_190, scv_191, scv_192, scv_193, scv_194, scv_195, scv_196;...",shape=box];
	6259977 [label="6259977  for (k=kkk; k<=min(ny-1,kkk+63); k=k+1) ...",shape=box];
	6253136 [label="6253136  int i;...",shape=box];
	6253136 -> ForLoop6268815;
	ForLoop6266175 [label="ForLoop6266175  for (k=kkk; k<=min(ny-1,kkk+63)-28; k=k+29) {...",shape=box];
	ForLoop6266175 -> 6295982;
	ForLoop6266175 -> _JOIN_6266175;
	_JOIN_6258603 [label="_JOIN_6258603None...",shape=box];
	_JOIN_6258603 -> ForLoop6258683;
	6296795 [label="6296795  double scv_248;...",shape=box];
	_JOIN_6266255 [label="_JOIN_6266255None...",shape=box];
	_JOIN_6266255 -> 6266287;
	6253287 [label="6253287  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	ForLoop6256358 [label="ForLoop6256358  for (jj=0; jj<=ny-1; jj=jj+256) {...",shape=box];
	ForLoop6256358 -> 6253287;
	ForLoop6256358 -> _JOIN_6256358;
	6288416 [label="6288416  double scv_129, scv_130, scv_131, scv_132, scv_133, scv_134, scv_135, scv_136;...",shape=box];
	6257453 [label="6257453  for (k=kkk; k<=min(ny-1,kkk+63); k=k+1) ...",shape=box];
	ForLoop6256356 [label="ForLoop6256356  for (jt=jj; jt<=min(ny-1,jj+255)-7; jt=jt+8) {...",shape=box];
	ForLoop6256356 -> 6274083;
	ForLoop6256356 -> _JOIN_6256356;
	_JOIN_6259945 [label="_JOIN_6259945None...",shape=box];
	_JOIN_6259945 -> 6259977;
	_JOIN_6264913 [label="_JOIN_6264913None...",shape=box];
	_JOIN_6264913 -> ForLoop6264993;
	6263763 [label="6263763  for (k=kkk; k<=min(ny-1,kkk+63); k=k+1) ...",shape=box];
	6290938 [label="6290938  double scv_159, scv_160, scv_161, scv_162, scv_163, scv_164, scv_165, scv_166;...",shape=box];
	6150456 [label="6150456  y[i]=0.0;...",shape=box];
	ForLoop6268699 [label="ForLoop6268699  for (k=kkk; k<=min(ny-1,kkk+63)-28; k=k+29) {...",shape=box];
	ForLoop6268699 -> 6301026;
	ForLoop6268699 -> _JOIN_6268699;
	_JOIN_6267437 [label="_JOIN_62674expected=9369846271501.798828
actual=9369846271501.798828
37None...",shape=box];
	_JOIN_6267437 -> ForLoop6267517;
	6268811 [label="6268811  for (k=kkk; k<=min(ny-1,kkk+63); k=k+1) ...",shape=box];
	6268811 -> _JOIN_6268813;
	6284185 [label="6284185  double scv_98;...",shape=box];
	6301839 [label="6301839  double scv_308;...",shape=box];
	6268955 [label="6268955  scv_349=scv_349+A[i*ny+jt]*x_copy[(jt-jj)];...",shape=box];
	6283372 [label="6283372  double scv_69, scv_70, scv_71, scv_72, scv_73, scv_74, scv_75, scv_76;...",shape=box];
	6299317 [label="6299317  double scv_278;...",shape=box];
	6341049 [label="6341049  double scv_349;...",shape=box];
	6298504 [label="6298504  double scv_249, scv_250, scv_251, scv_252, scv_253, scv_254, scv_255, scv_256;...",shape=box];
	6341061 [label="6341061  tmp[i]=scv_349;...",shape=box];
	6341061 -> _JOIN_6270261;
	ForLoop6259945 [label="ForLoop6259945  for (k=(min(ny-1,kkk+63))-(((min(ny-1,kkk+63))-(kkk)+1)%29)+1; k<=min(ny-1,kkk+63); k=k+1) {...",shape=box];
	ForLoop6259945 -> 6284185;
	ForLoop6259945 -> _JOIN_6259945;
	_JOIN_6258683 [label="_JOIN_6258683None...",shape=box];
	_JOIN_6258683 -> 6258715;
	ForLoop6259865 [label="ForLoop6259865  for (k=kkk; k<=min(ny-1,kkk+63)-28; k=k+29) {...",shape=box];
	ForLoop6259865 -> 6283372;
	ForLoop6259865 -> _JOIN_6259865;
	_JOIN_6269160 [label="_JOIN_6269160None...",shape=box];
	_JOIN_6269160 -> _JOIN_6269162;
	_JOIN_6269162 [label="_JOIN_6269162None...",shape=box];
	_JOIN_6269162 -> ForLoop6270259;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest25.exe __orio_perftest25.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest25.exe  
{'[1, 5, 0, 2, 3, 1, 1, 1, 1, 9, 0, 28, 0, 1, 0, 1, 0, 0]' : 0.174365}
{'[1, 5, 0, 2, 3, 1, 1, 1, 1, 9, 0, 28, 0, 1, 0, 1, 0, 0]' : 0.174082}
{'[1, 5, 0, 2, 3, 1, 1, 1, 1, 9, 0, 28, 0, 1, 0, 1, 0, 0]' : 0.17409}
{'[1, 5, 0, 2, 3, 1, 1, 1, 1, 9, 0, 28, 0, 1, 0, 1, 0, 0]' : 0.174228}
{'[1, 5, 0, 2, 3, 1, 1, 1, 1, 9, 0, 28, 0, 1, 0, 1, 0, 0]' : 0.174205}
{'[1, 5, 0, 2, 3, 1, 1, 1, 1, 9, 0, 28, 0, 1, 0, 1, 0, 0]' : 0.174242}
{'[1, 5, 0, 2, 3, 1, 1, 1, 1, 9, 0, 28, 0, 1, 0, 1, 0, 0]' : 0.174133}
{'[1, 5, 0, 2, 3, 1, 1, 1, 1, 9, 0, 28, 0, 1, 0, 1, 0, 0]' : 0.174084}
{'[1, 5, 0, 2, 3, 1, 1, 1, 1, 9, 0, 28, 0, 1, 0, 1, 0, 0]' : 0.174143}
{'[1, 5, 0, 2, 3, 1, 1, 1, 1, 9, 0, 28, 0, 1, 0, 1, 0, 0]' : 0.174078}
{'[1, 5, 0, 2, 3, 1, 1, 1, 1, 9, 0, 28, 0, 1, 0, 1, 0, 0]' : 0.175102}
{'[1, 5, 0, 2, 3, 1, 1, 1, 1, 9, 0, 28, 0, 1, 0, 1, 0, 0]' : 0.174102}
{'[1, 5, 0, 2, 3, 1, 1, 1, 1, 9, 0, 28, 0, 1, 0, 1, 0, 0]' : 0.174506}
{'[1, 5, 0, 2, 3, 1, 1, 1, 1, 9, 0, 28, 0, 1, 0, 1, 0, 0]' : 0.174101}
{'[1, 5, 0, 2, 3, 1, 1, 1, 1, 9, 0, 28, 0, 1, 0, 1, 0, 0]' : 0.174084}
{'[1, 5, 0, 2, 3, 1, 1, 1, 1, 9, 0, 28, 0, 1, 0, 1, 0, 0]' : 0.174077}
{'[1, 5, 0, 2, 3, 1, 1, 1, 1, 9, 0, 28, 0, 1, 0, 1, 0, 0]' : 0.174266}
{'[1, 5, 0, 2, 3, 1, 1, 1, 1, 9, 0, 28, 0, 1, 0, 1, 0, 0]' : 0.174127}
{'[1, 5, 0, 2, 3, 1, 1, 1, 1, 9, 0, 28, 0, 1, 0, 1, 0, 0]' : 0.174083}
{'[1, 5, 0, 2, 3, 1, 1, 1, 1, 9, 0, 28, 0, 1, 0, 1, 0, 0]' : 0.174068}
{'[1, 5, 0, 2, 3, 1, 1, 1, 1, 9, 0, 28, 0, 1, 0, 1, 0, 0]' : 0.174124}
{'[1, 5, 0, 2, 3, 1, 1, 1, 1, 9, 0, 28, 0, 1, 0, 1, 0, 0]' : 0.174353}
{'[1, 5, 0, 2, 3, 1, 1, 1, 1, 9, 0, 28, 0, 1, 0, 1, 0, 0]' : 0.175101}
{'[1, 5, 0, 2, 3, 1, 1, 1, 1, 9, 0, 28, 0, 1, 0, 1, 0, 0]' : 0.174077}
{'[1, 5, 0, 2, 3, 1, 1, 1, 1, 9, 0, 28, 0, 1, 0, 1, 0, 0]' : 0.174071}
{'[1, 5, 0, 2, 3, 1, 1, 1, 1, 9, 0, 28, 0, 1, 0, 1, 0, 0]' : 0.174072}
{'[1, 5, 0, 2, 3, 1, 1, 1, 1, 9, 0, 28, 0, 1, 0, 1, 0, 0]' : 0.17407}
{'[1, 5, 0, 2, 3, 1, 1, 1, 1, 9, 0, 28, 0, 1, 0, 1, 0, 0]' : 0.174028}
{'[1, 5, 0, 2, 3, 1, 1, 1, 1, 9, 0, 28, 0, 1, 0, 1, 0, 0]' : 0.174171}
{'[1, 5, 0, 2, 3, 1, 1, 1, 1, 9, 0, 28, 0, 1, 0, 1, 0, 0]' : 0.174572}

out:
 ["{'[1, 5, 0, 2, 3, 1, 1, 1, 1, 9, 0, 28, 0, 1, 0, 1, 0, 0]' : 0.174365}", "{'[1, 5, 0, 2, 3, 1, 1, 1, 1, 9, 0, 28, 0, 1, 0, 1, 0, 0]' : 0.174082}", "{'[1, 5, 0, 2, 3, 1, 1, 1, 1, 9, 0, 28, 0, 1, 0, 1, 0, 0]' : 0.17409}", "{'[1, 5, 0, 2, 3, 1, 1, 1, 1, 9, 0, 28, 0, 1, 0, 1, 0, 0]' : 0.174228}", "{'[1, 5, 0, 2, 3, 1, 1, 1, 1, 9, 0, 28, 0, 1, 0, 1, 0WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = jjj
, 0]' : 0.174205}", "{'[1, 5, 0, 2, 3, 1, 1, 1, 1, 9, 0, 28, 0, 1, 0, 1, 0, 0]' : 0.174242}", "{'[1, 5, 0, 2, 3, 1, 1, 1, 1, 9, 0, 28, 0, 1, 0, 1, 0, 0]' : 0.174133}", "{'[1, 5, 0, 2, 3, 1, 1, 1, 1, 9, 0, 28, 0, 1, 0, 1, 0, 0]' : 0.174084}", "{'[1, 5, 0, 2, 3, 1, 1, 1, 1, 9, 0, 28, 0, 1, 0, 1, 0, 0]' : 0.174143}", "{'[1, 5, 0, 2, 3, 1, 1, 1, 1, 9, 0, 28, 0, 1, 0, 1, 0, 0]' : 0.174078}", "{'[1, 5, 0, 2, 3, 1, 1, 1, 1, 9, 0, 28, 0, 1, 0, 1, 0, 0]' : 0.175102}", "{'[1, 5, 0, 2, 3, 1, 1, 1, 1, 9, 0, 28, 0, 1, 0, 1, 0, 0]' : 0.174102}", "{'[1, 5, 0, 2, 3, 1, 1, 1, 1, 9, 0, 28, 0, 1, 0, 1, 0, 0]' : 0.174506}", "{'[1, 5, 0, 2, 3, 1, 1, 1, 1, 9, 0, 28, 0, 1, 0, 1, 0, 0]' : 0.174101}", "{'[1, 5, 0, 2, 3, 1, 1, 1, 1, 9, 0, 28, 0, 1, 0, 1, 0, 0]' : 0.174084}", "{'[1, 5, 0, 2, 3, 1, 1, 1, 1, 9, 0, 28, 0, 1, 0, 1, 0, 0]' : 0.174077}", "{'[1, 5, 0, 2, 3, 1, 1, 1, 1, 9, 0, 28, 0, 1, 0, 1, 0, 0]' : 0.174266}", "{'[1, 5, 0, 2, 3, 1, 1, 1, 1, 9, 0, 28, 0, 1, 0, 1, 0, 0]' : 0.174127}", "{'[1, 5, 0, 2, 3, 1, 1, 1, 1, 9, 0, 28, 0, 1, 0, 1, 0, 0]' : 0.174083}", "{'[1, 5, 0, 2, 3, 1, 1, 1, 1, 9, 0, 28, 0, 1, 0, 1, 0, 0]' : 0.174068}", "{'[1, 5, 0, 2, 3, 1, 1, 1, 1, 9, 0, 28, 0, 1, 0, 1, 0, 0]' : 0.174124}", "{'[1, 5, 0, 2, 3, 1, 1, 1, 1, 9, 0, 28, 0, 1, 0, 1, 0, 0]' : 0.174353}", "{'[1, 5, 0, 2, 3, 1, 1, 1, 1, 9, 0, 28, 0, 1, 0, 1, 0, 0]' : 0.175101}", "{'[1, 5, 0, 2, 3, 1, 1, 1, 1, 9, 0, 28, 0, 1, 0, 1, 0, 0]' : 0.174077}", "{'[1, 5, 0, 2, 3, 1, 1, 1, 1, 9, 0, 28, 0, 1, 0, 1, 0, 0]' : 0.174071}", "{'[1, 5, 0, 2, 3, 1, 1, 1, 1, 9, 0, 28, 0, 1, 0, 1, 0, 0]' : 0.174072}", "{'[1, 5, 0, 2, 3, 1, 1, 1, 1, 9, 0, 28, 0, 1, 0, 1, 0, 0]' : 0.17407}", "{'[1, 5, 0, 2, 3, 1, 1, 1, 1, 9, 0, 28, 0, 1, 0, 1, 0, 0]' : 0.174028}", "{'[1, 5, 0, 2, 3, 1, 1, 1, 1, 9, 0, 28, 0, 1, 0, 1, 0, 0]' : 0.174171}", "{'[1, 5, 0, 2, 3, 1, 1, 1, 1, 9, 0, 28, 0, 1, 0, 1, 0, 0]' : 0.174572}"]
returning from 'run': {'[1, 5, 0, 2, 3, 1, 1, 1, 1, 9, 0, 28, 0, 1, 0, 1, 0, 0]': ([0.174365, 0.174082, 0.17409, 0.174228, 0.174205, 0.174242, 0.174133, 0.174084, 0.174143, 0.174078, 0.175102, 0.174102, 0.174506, 0.174101, 0.174084, 0.174077, 0.174266, 0.174127, 0.174083, 0.174068, 0.174124, 0.174353, 0.175101, 0.174077, 0.174071, 0.174072, 0.17407, 0.174028, 0.174171, 0.174572], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.174365, 0.174082, 0.17409, 0.174228, 0.174205, 0.174242, 0.174133, 0.174084, 0.174143, 0.174078, 0.175102, 0.174102, 0.174506, 0.174101, 0.174084, 0.174077, 0.174266, 0.174127, 0.174083, 0.174068, 0.174124, 0.174353, 0.175101, 0.174077, 0.174071, 0.174072, 0.17407, 0.174028, 0.174171, 0.174572], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[1, 5, 0, 2, 3, 1, 1, 1, 1, 9, 0, 28, 0, 1, 0, 1, 0, 0]': ([0.174365, 0.174082, 0.17409, 0.174228, 0.174205, 0.174242, 0.174133, 0.174084, 0.174143, 0.174078, 0.175102, 0.174102, 0.174506, 0.174101, 0.174084, 0.174077, 0.174266, 0.174127, 0.174083, 0.174068, 0.174124, 0.174353, 0.175101, 0.174077, 0.174071, 0.174072, 0.17407, 0.174028, 0.174171, 0.174572], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [3, 5, 3, 4, 3, 5, 0, 0, 27, 26, 4, 0, 0, 2, 0, 1, 0, 0]
Fixed Factors: {}
Testing candidate 26: [3, 5, 3, 4, 3, 5, 0, 0, 27, 26, 4, 0, 0, 2, 0, 1, 0, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	72
        Max loop nest depth: 	6
        Additions: 		4935
        Multiplications: 	2184
        Divisions: 		0
        Logical: 		0
        Reads: 			8814
        Writes: 		1385
        Comparisons:		72
        Gotos: 			0
        
digraph CFG {
	_JOIN_6618362 [label="_JOIN_6618362None...",shape=box];
	_JOIN_6618362 -> 6618364;
	6613839 [label="6613839  scv_45=scv_45+A[(i+2)*ny+j]*x[j];...",shape=box];
	6613839 -> _JOIN_6613840;
	ForLoop6617032 [label="ForLoop6617032  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jt)+1)%5)+1; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop6617032 -> 6617031;
	ForLoop6617032 -> _JOIN_6617032;
	_JOIN_6620978 [label="_JOIN_6620978None...",shape=box];
	_JOIN_6620978 -> 6739839;
	6583849 [label="6583849  int i;...",shape=box];
	6583849 -> ForLoop6620980;
	ForLoop6616234 [label="ForLoop6616234  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jt)+1)%5)+1; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop6616234 -> 6616233;
	ForLoop6616234 -> _JOIN_6616234;
	_JOIN_6620974 [label="_JOIN_6620974None...",shape=box];
	_JOIN_6620974 -> _JOIN_6620976;
	ForLoop6622182 [label="ForLoop6622182  for (i=(min(nx-1,ii+63))-(((min(nx-1,ii+63))-(ii)+1)%27)+1; i<=min(nx-1,ii+63); i=i+1) {...",shape=box];
	ForLoop6622182 -> 6746532;
	ForLoop6622182 -> _JOIN_6622182;
	ForLoop6619958 [label="ForLoop6619958  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jt)+1)%5)+1; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop6619958 -> 6619957;
	ForLoop6619958 -> _JOIN_6619958;
	ForLoop6615625 [label="ForLoop6615625  for (j=jt; j<=min(ny-1,jj+255)-4; j=j+5) {...",shape=box];
	ForLoop6615625 -> 6615487;
	ForLoop6615625 -> _JOIN_6615625;
	_JOIN_6618285 [label="_JOIN_6618285None...",shape=box];
	_JOIN_6618285 -> ForLoop6618362;
	_JOIN_6616423 [label="_JOIN_6616423None...",shape=box];
	_JOIN_6616423 -> ForLoop6616500;
	6616285 [label="6616285  scv_35=scv_35+A[(i+12)*ny+j]*x[j];...",shape=box];
	ForLoop6620974 [label="ForLoop6620974  for (k=kk; k<=min(ny-1,kk+63); k=k+1) {...",shape=box];
	ForLoop6620974 -> 6705367;
	ForLoop6620974 -> _JOIN_6620974;
	_JOIN_6615436 [label="_JOIN_6615436None...",shape=box];
	_JOIN_6615436 -> 6615438;
	6619428 [label="6619428  int j;...",shape=box];
	6619428 -> ForLoop6619615;
	_JOIN_6619881 [label="_JOIN_6619881None...",shape=box];
	_JOIN_6619881 -> ForLoop6619958;
	6619425 [label="6619425  scv_58=scv_58+A[(i+23)*ny+j]*x[j];...",shape=box];
	6619425 -> _JOIN_6619426;
	6375981 [label="6375981  int i;...",shape=box];
	6375981 -> ForLoop6376688;
	_JOIN_6620980 [label="_JOIN_6620980None...",shape=box];
	_JOIN_6620980 -> ForLoop6622182;
	6622104 [label="6622104  scv_62=scv_62+A[i*ny+j]*x[j];...",shape=box];
	6622104 -> _JOIN_6622105;
	6661720 [label="6661720  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	ForLoop6614295 [label="ForLoop6614295  for (j=jt; j<=min(ny-1,jj+255)-4; j=j+5) {...",shape=box];
	ForLoop6614295 -> 6614157;
	ForLoop6614295 -> _JOIN_6614295;
	_JOIN_6622105 [label="_JOIN_6622105None...",shape=box];
	_JOIN_6622105 -> _JOIN_6622108;
	_JOIN_6617753 [label="_JOIN_6617753None...",shape=box];
	_JOIN_6617753 -> ForLoop6617830;
	6619743 [label="6619743  scv_50=scv_50+A[(i+25)*ny+j]*x[j];...",shape=box];
	ForLoop6620227 [label="ForLoop6620227  for (jj=0; jj<=ny-1; jj=jj+256) {...",shape=box];
	ForLoop6620227 -> ForLoop6613097;
	ForLoop6620227 -> _JOIN_6620227;
	6618095 [label="6618095  scv_39=scv_39+A[(i+18)*ny+j]*x[j];...",shape=box];
	6618095 -> _JOIN_6618096;
	ForLoop6619160 [label="ForLoop6619160  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jt)+1)%5)+1; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop6619160 -> 6619159;
	ForLoop6619160 -> _JOIN_6619160;
	6618896 [label="6618896  int j;...",shape=box];
	6618896 -> ForLoop6619083;
	6618893 [label="6618893  scv_37=scv_37+A[(i+21)*ny+j]*x[j];...",shape=box];
	6618893 -> _JOIN_6618894;
	_JOIN_6622182 [label="_JOIN_6622182None...",shape=box];
	_JOIN_6622182 -> _JOIN_6622184;
	_JOIN_6617298 [label="_JOIN_6617298None...",shape=box];
	_JOIN_6617298 -> 6617300;
	6746544 [label="6746544  tmp[i]=scv_62;...",shape=box];
	6746544 -> _JOIN_6622182;
	_JOIN_6622037 [label="_JOIN_6622037None...",shape=box];
	_JOIN_6622037 -> ForLoop6622105;
	_JOIN_6620227 [label="_JOIN_6620227None...",shape=box];
	_JOIN_6620227 -> ForLoop6620978;
	6616817 [label="6616817  scv_48=scv_48+A[(i+14)*ny+j]*x[j];...",shape=box];
	ForLoop6619881 [label="ForLoop6619881  for (j=jt; j<=min(ny-1,jj+255)-4; j=j+5) {...",shape=box];
	ForLoop6619881 -> 6619743;
	ForLoop6619881 -> _JOIN_6619881;
	6619477 [label="6619477  scv_51=scv_51+A[(i+24)*ny+j]*x[j];...",shape=box];
	_JOIN_6620976 [label="_JOIN_6620976None...",shape=box];
	_JOIN_6620976 -> _JOIN_6620978;
	_JOIN_6622180 [label="_JOIN_6622180None...",shape=box];
	_JOIN_6622180 -> 6746544;
	_JOIN_6619160 [label="_JOIN_6619160None...",shape=box];
	_JOIN_6619160 -> 6619162;
	ForLoop6614106 [label="ForLoop6614106  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jt)+1)%5)+1; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop6614106 -> 6614105;
	ForLoop6614106 -> _JOIN_6614106;
	_JOIN_6618019 [label="_JOIN_6618019None...",shape=box];
	_JOIN_6618019 -> ForLoop6618096;
	ForLoop6615968 [label="ForLoop6615968  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jt)+1)%5)+1; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop6615968 -> 6615967;
	ForLoop6615968 -> _JOIN_6615968;
	ForLoop6621894 [label="ForLoop6621894  for (jt=jj; jt<=min(ny-1,jj+255)-31; jt=jt+32) {...",shape=box];
	ForLoop6621894 -> 6621086;
	ForLoop6621894 -> _JOIN_6621894;
	_JOIN_6614638 [label="_JOIN_6614638None...",shape=box];
	_JOIN_6614638 -> 6614640;
	_JOIN_6619083 [label="_JOIN_6619083None...",shape=box];
	_JOIN_6619083 -> ForLoop6619160;
	6615172 [label="6615172  int j;...",shape=box];
	6615172 -> ForLoop6615359;
	_JOIN_6617221 [label="_JOIN_6617221None...",shape=box];
	_JOIN_6617221 -> ForLoop6617298;
	ForLoop6616157 [label="ForLoop6616157  for (j=jt; j<=min(ny-1,jj+255)-4; j=j+5) {...",shape=box];
	ForLoop6616157 -> 6616019;
	ForLoop6616157 -> _JOIN_6616157;
	6617566 [label="6617566  int j;...",shape=box];
	6617566 -> ForLoop6617753;
	6617083 [label="6617083  scv_49=scv_49+A[(i+15)*ny+j]*x[j];...",shape=box];
	6613842 [label="6613842  int j;...",shape=box];
	6613842 -> ForLoop6614029;
	6617563 [label="6617563  scv_52=scv_52+A[(i+16)*ny+j]*x[j];...",shape=box];
	6617563 -> _JOIN_6617564;
	_JOIN_6614561 [label="_JOIN_6614561None...",shape=box];
	_JOIN_6614561 -> ForLoop6614638;
	_JOIN_6613240 [label="_JOIN_6613240None...",shape=box];
	_JOIN_6613240 -> ForLoop6613308;
	6616768 [label="6616768  int j;...",shape=box];
	6616768 -> ForLoop6616955;
	ForLoop6615359 [label="ForLoop6615359  for (j=jt; j<=min(ny-1,jj+255)-4; j=j+5) {...",shape=box];
	ForLoop6615359 -> 6615221;
	ForLoop6615359 -> _JOIN_6615359;
	6615704 [label="6615704  int j;...",shape=box];
	6615704 -> ForLoop6615891;
	6614955 [label="6614955  scv_42=scv_42+A[(i+7)*ny+j]*x[j];...",shape=box];
	ForLoop6617830 [label="ForLoop6617830  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jt)+1)%5)+1; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop6617830 -> 6617829;
	ForLoop6617830 -> _JOIN_6617830;
	6615701 [label="6615701  scv_55=scv_55+A[(i+9)*ny+j]*x[j];...",shape=box];
	6615701 -> _JOIN_6615702;
	ForLoop6616955 [label="ForLoop6616955  for (j=jt; j<=min(ny-1,jj+255)-4; j=j+5) {...",shape=box];
	ForLoop6616955 -> 6616817;
	ForLoop6616955 -> _JOIN_6616955;
	ForLoop6618362 [label="ForLoop6618362  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jt)+1)%5)+1; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop6618362 -> 6618361;
	ForLoop6618362 -> _JOIN_6618362;
	6613359 [label="6613359  scv_57=scv_57+A[(i+1)*ny+j]*x[j];...",shape=box];
	6614157 [label="6614157  scv_54=scv_54+A[(i+4)*ny+j]*x[j];...",shape=box];
	6615970 [label="6615970  int j;...",shape=box];
	6615970 -> ForLoop6616157;
	ForLoop6614904 [label="ForLoop6614904  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jt)+1)%5)+1; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop6614904 -> 6614903;
	ForLoop6614904 -> _JOIN_6614904;
	6614640 [label="6614640  int j;...",shape=box];
	6614640 -> ForLoop6614827;
	6617829 [label="6617829  scv_60=scv_60+A[(i+17)*ny+j]*x[j];...",shape=box];
	6617829 -> _JOIN_6617830;
	_JOIN_6615968 [label="_JOIN_6615968None...",shape=box];
	_JOIN_6615968 -> 6615970;
	6616551 [label="6616551  scv_36=scv_36+A[(i+13)*ny+j]*x[j];...",shape=box];
	6617881 [label="6617881  scv_39=scv_39+A[(i+18)*ny+j]*x[j];...",shape=box];
	ForLoop6614372 [label="ForLoop6614372  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jt)+1)%5)+1; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop6614372 -> 6614371;
	ForLoop6614372 -> _JOIN_6614372;
	_JOIN_6613097 [label="_JOIN_6613097None...",shape=box];
	_JOIN_6613097 -> 6613098;
	6614374 [label="6614374  int j;...",shape=box];
	6614374 -> ForLoop6614561;
	ForLoop6617221 [label="ForLoop6617221  for (j=jt; j<=min(ny-1,jj+255)-4; j=j+5) {...",shape=box];
	ForLoop6617221 -> 6617083;
	ForLoop6617221 -> _JOIN_6617221;
	ForLoop6617564 [label="ForLoop6617564  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jt)+1)%5)+1; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop6617564 -> 6617563;
	ForLoop6617564 -> _JOIN_6617564;
	6614371 [label="6614371  scv_54=scv_54+A[(i+4)*ny+j]*x[j];...",shape=box];
	6614371 -> _JOIN_6614372;
	ForLoop6622184 [label="ForLoop6622184  for (ii=iii; ii<=min(nx-1,iii+448); ii=ii+64) {...",shape=box];
	ForLoop6622184 -> 6583849;
	ForLoop6622184 -> _JOIN_6622184;
	ForLoop6622185 [label="ForLoop6622185  for (iii=0; iii<=nx-1; iii=iii+512) {...",shape=box];
	ForLoop6622185 -> ForLoop6622184;
	ForLoop6622185 -> _JOIN_6622185;
	_JOIN_6615359 [label="_JOIN_6615359None...",shape=box];
	_JOIN_6615359 -> ForLoop6615436;
	_JOIN_6614029 [label="_JOIN_6614029None...",shape=box];
	_JOIN_6614029 -> ForLoop6614106;
	ForLoop6620976 [label="ForLoop6620976  for (kk=kkk; kk<=min(ny-1,kkk+960); kk=kk+64) {...",shape=box];
	ForLoop6620976 -> ForLoop6620974;
	ForLoop6620976 -> _JOIN_6620976;
	6615169 [label="6615169  scv_42=scv_42+A[(i+7)*ny+j]*x[j];...",shape=box];
	6615169 -> _JOIN_6615170;
	6376443 [label="6376443  y[i]=0.0;...",shape=box];
	ForLoop6622178 [label="ForLoop6622178  for (k=kk; k<=min(ny-1,kk+63); k=k+1) {...",shape=box];
	ForLoop6622178 -> 6745171;
	ForLoop6622178 -> _JOIN_6622178;
	ForLoop6619083 [label="ForLoop6619083  for (j=jt; j<=min(ny-1,jj+255)-4; j=j+5) {...",shape=box];
	ForLoop6619083 -> 6618945;
	ForLoop6619083 -> _JOIN_6619083;
	_JOIN_6618817 [label="_JOIN_6618817None...",shape=box];
	_JOIN_6618817 -> ForLoop6618894;
	6615967 [label="6615967  scv_47=scv_47+A[(i+10)*ny+j]*x[j];...",shape=box];
	6615967 -> _JOIN_6615968;
	ForLoop6622105 [label="ForLoop6622105  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jt)+1)%5)+1; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop6622105 -> 6622104;
	ForLoop6622105 -> _JOIN_6622105;
	_JOIN_6614106 [label="_JOIN_6614106None...",shape=box];
	_JOIN_6614106 -> 6614108;
	6619960 [label="6619960  int j;...",shape=box];
	6619960 -> ForLoop6620147;
	6619211 [label="6619211  scv_58=scv_58+A[(i+23)*ny+j]*x[j];...",shape=box];
	_JOIN_6619958 [label="_JOIN_6619958None...",shape=box];
	_JOIN_6619958 -> 6619960;
	_JOIN_6618894 [label="_JOIN_6618894None...",shape=box];
	_JOIN_6618894 -> 6618896;
	_JOIN_6613497 [label="_JOIN_6613497None...",shape=box];
	_JOIN_6613497 -> ForLoop6613574;
	ForLoop6618628 [label="ForLoop6618628  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jt)+1)%5)+1; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop6618628 -> 6618627;
	ForLoop6618628 -> _JOIN_6618628;
	ForLoop6613308 [label="ForLoop6613308  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jt)+1)%5)+1; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop6613308 -> 6613307;
	ForLoop6613308 -> _JOIN_6613308;
	6621086 [label="6621086  scv_62=scv_62+A[i*ny+jt]*x[jt];...",shape=box];
	_JOIN_6621894 [label="_JOIN_6621894None...",shape=box];
	_JOIN_6621894 -> 6621895;
	6614108 [label="6614108  int j;...",shape=box];
	6614108 -> ForLoop6614295;
	6614105 [label="6614105  scv_40=scv_40+A[(i+3)*ny+j]*x[j];...",shape=box];
	6614105 -> _JOIN_6614106;
	6376756 [label="6376756  y[i]=0.0;...",shape=box];
	6376756 -> _JOIN_6376757;
	ForLoop6619615 [label="ForLoop6619615  for (j=jt; j<=min(ny-1,jj+255)-4; j=j+5) {...",shape=box];
	ForLoop6619615 -> 6619477;
	ForLoop6619615 -> _JOIN_6619615;
	_JOIN_6617487 [label="_JOIN_6617487None...",shape=box];
	_JOIN_6617487 -> ForLoop6617564;
	ForLoop6614561 [label="ForLoop6614561  for (j=jt; j<=min(ny-1,jj+255)-4; j=j+5) {...",shape=box];
	ForLoop6614561 -> 6614423;
	ForLoop6614561 -> _JOIN_6614561;
	_JOIN_6618551 [label="_JOIN_6618551None...",shape=box];
	_JOIN_6618551 -> ForLoop6618628;
	6616019 [label="6616019  scv_53=scv_53+A[(i+11)*ny+j]*x[j];...",shape=box];
	_JOIN_6376688 [label="_JOIN_6376688None...",shape=box];
	_JOIN_6376688 -> ForLoop6376757;
	6617300 [label="6617300  int j;...",shape=box];
	6617300 -> ForLoop6617487;
	_JOIN_6619426 [label="_JOIN_6619426None...",shape=box];
	_JOIN_6619426 -> 6619428;
	_JOIN_6613574 [label="_JOIN_6613574None...",shape=box];
	_JOIN_6613574 -> 6613576;
	ForLoop6618019 [label="ForLoop6618019  for (j=jt; j<=min(ny-1,jj+255)-4; j=j+5) {...",shape=box];
	ForLoop6618019 -> 6617881;
	ForLoop6618019 -> _JOIN_6618019;
	6619159 [label="6619159  scv_59=scv_59+A[(i+22)*ny+j]*x[j];...",shape=box];
	6619159 -> _JOIN_6619160;
	ForLoop6617487 [label="ForLoop6617487  for (j=jt; j<=min(ny-1,jj+255)-4; j=j+5) {...",shape=box];
	ForLoop6617487 -> 6617349;
	ForLoop6617487 -> _JOIN_6617487;
	_JOIN_6614295 [label="_JOIN_6614295None...",shape=box];
	_JOIN_6614295 -> ForLoop6614372;
	6618627 [label="6618627  scv_34=scv_34+A[(i+20)*ny+j]*x[j];...",shape=box];
	6618627 -> _JOIN_6618628;
	ForLoop6620147 [label="ForLoop6620147  for (j=jt; j<=min(ny-1,jj+255)-4; j=j+5) {...",shape=box];
	ForLoop6620147 -> 6620009;
	ForLoop6620147 -> _JOIN_6620147;
	_JOIN_6613308 [label="_JOIN_6613308None...",shape=box];
	_JOIN_6613308 -> 6613310;
	ForLoop6615170 [label="ForLoop6615170  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jt)+1)%5)+1; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop6615170 -> 6615169;
	ForLoop6615170 -> _JOIN_6615170;
	_JOIN_6615891 [label="_JOIN_6615891None...",shape=box];
	_JOIN_6615891 -> ForLoop6615968;
	_JOIN_6615625 [label="_JOIN_6615625None...",shape=box];
	_JOIN_6615625 -> ForLoop6615702;
	ForLoop6620978 [label="ForLoop6620978  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop6620978 -> ForLoop6620976;
	ForLoop6620978 -> _JOIN_6620978;
	_JOIN_6622179 [label="_JOIN_6622179None...",shape=box];
	_JOIN_6622179 -> _JOIN_6622180;
	_JOIN_6622178 [label="_JOIN_6622178None...",shape=box];
	_JOIN_6622178 -> _JOIN_6622179;
	6616499 [label="6616499  scv_35=scv_35+A[(i+12)*ny+j]*x[j];...",shape=box];
	6616499 -> _JOIN_6616500;
	6617034 [label="6617034  int j;...",shape=box];
	6617034 -> ForLoop6617221;
	_JOIN_6616766 [label="_JOIN_6616766None...",shape=box];
	_JOIN_6616766 -> 6616768;
	6614689 [label="6614689  scv_43=scv_43+A[(i+6)*ny+j]*x[j];...",shape=box];
	_JOIN_6613840 [label="_JOIN_6613840None...",shape=box];
	_JOIN_6613840 -> 6613842;
	6618098 [label="6618098  int j;...",shape=box];
	6618098 -> ForLoop6618285;
	ForLoop6614827 [label="ForLoop6614827  for (j=jt; j<=min(ny-1,jj+255)-4; j=j+5) {...",shape=box];
	ForLoop6614827 -> 6614689;
	ForLoop6614827 -> _JOIN_6614827;
	ForLoop6615702 [label="ForLoop6615702  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jt)+1)%5)+1; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop6615702 -> 6615701;
	ForLoop6615702 -> _JOIN_6615702;
	6616236 [label="6616236  int j;...",shape=box];
	6616236 -> ForLoop6616423;
	_JOIN_6616500 [label="_JOIN_6616500None...",shape=box];
	_JOIN_6616500 -> 6616502;
	6621935 [label="6621935  scv_62=scv_62+A[i*ny+j]*x[j];...",shape=box];
	6615753 [label="6615753  scv_47=scv_47+A[(i+10)*ny+j]*x[j];...",shape=box];
	_JOIN_6620224 [label="_JOIN_6620224None...",shape=box];
	_JOIN_6620224 -> _JOIN_6620227;
	_JOIN_6618096 [label="_JOIN_6618096None...",shape=box];
	_JOIN_6618096 -> 6618098;
	6746532 [label="6746532  double scv_62;...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 6375981;
	_JOIN_6615702 [label="_JOIN_6615702None...",shape=box];
	_JOIN_6615702 -> 6615704;
	6614906 [label="6614906  int j;...",shape=box];
	6614906 -> ForLoop6615093;
	6619691 [label="6619691  scv_51=scv_51+A[(i+24)*ny+j]*x[j];...",shape=box];
	6619691 -> _JOIN_6619692;
	6614903 [label="6614903  scv_43=scv_43+A[(i+6)*ny+j]*x[j];...",shape=box];
	6614903 -> _JOIN_6614904;
	ForLoop6376757 [label="ForLoop6376757  for (i=ny-((ny-(0))%28); i<=ny-1; i=i+1) ...",shape=box];
	ForLoop6376757 -> 6376756;
	ForLoop6376757 -> _JOIN_6376757;
	ForLoop6620980 [label="ForLoop6620980  for (i=ii; i<=min(nx-1,ii+63)-26; i=i+27) {...",shape=box];
	ForLoop6620980 -> 6739821;
	ForLoop6620980 -> _JOIN_6620980;
	_JOIN_6376757 [label="_JOIN_6376757None...",shape=box];
	_JOIN_6376757 -> 6583816;
	ForLoop6618096 [label="ForLoop6618096  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jt)+1)%5)+1; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop6618096 -> 6618095;
	ForLoop6618096 -> _JOIN_6618096;
	ForLoop6619692 [label="ForLoop6619692  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jt)+1)%5)+1; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop6619692 -> 6619691;
	ForLoop6619692 -> _JOIN_6619692;
	6617031 [label="6617031  scv_48=scv_48+A[(i+14)*ny+j]*x[j];...",shape=box];
	6617031 -> _JOIN_6617032;
	6613573 [label="6613573  scv_57=scv_57+A[(i+1)*ny+j]*x[j];...",shape=box];
	6613573 -> _JOIN_6613574;
	_JOIN_6615170 [label="_JOIN_6615170None...",shape=box];
	_JOIN_6615170 -> 6615172;
	6617832 [label="6617832  int j;...",shape=box];
	6617832 -> ForLoop6618019;
	6613576 [label="6613576  int j;...",shape=box];
	6613576 -> ForLoop6613763;
	ForLoop6615891 [label="ForLoop6615891  for (j=jt; j<=min(ny-1,jj+255)-4; j=j+5) {...",shape=box];
	ForLoop6615891 -> 6615753;
	ForLoop6615891 -> _JOIN_6615891;
	ForLoop6622180 [label="ForLoop6622180  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop6622180 -> ForLoop6622179;
	ForLoop6622180 -> _JOIN_6622180;
	6618147 [label="6618147  scv_38=scv_38+A[(i+19)*ny+j]*x[j];...",shape=box];
	6618361 [label="6618361  scv_38=scv_38+A[(i+19)*ny+j]*x[j];...",shape=box];
	6618361 -> _JOIN_6618362;
	_JOIN_6622108 [label="_JOIN_6622108None...",shape=box];
	_JOIN_6622108 -> ForLoop6622180;
	ForLoop6613497 [label="ForLoop6613497  for (j=jt; j<=min(ny-1,jj+255)-4; j=j+5) {...",shape=box];
	ForLoop6613497 -> 6613359;
	ForLoop6613497 -> _JOIN_6613497;
	ForLoop6613097 [label="ForLoop6613097  for (jt=jj; jt<=min(ny-1,jj+255)-31; jt=jt+32) {...",shape=box];
	ForLoop6613097 -> 6661720;
	ForLoop6613097 -> _JOIN_6613097;
	6615221 [label="6615221  scv_56=scv_56+A[(i+8)*ny+j]*x[j];...",shape=box];
	ForLoop6613240 [label="ForLoop6613240  for (j=jt; j<=min(ny-1,jj+255)-4; j=j+5) {...",shape=box];
	ForLoop6613240 -> 6613138;
	ForLoop6613240 -> _JOIN_6613240;
	_JOIN_6616157 [label="_JOIN_6616157None...",shape=box];
	_JOIN_6616157 -> ForLoop6616234;
	6616502 [label="6616502  int j;...",shape=box];
	6616502 -> ForLoop6616689;
	_JOIN_6613763 [label="_JOIN_6613763None...",shape=box];
	_JOIN_6613763 -> ForLoop6613840;
	6617615 [label="6617615  scv_60=scv_60+A[(i+17)*ny+j]*x[j];...",shape=box];
	ForLoop6616689 [label="ForLoop6616689  for (j=jt; j<=min(ny-1,jj+255)-4; j=j+5) {...",shape=box];
	ForLoop6616689 -> 6616551;
	ForLoop6616689 -> _JOIN_6616689;
	ForLoop6614029 [label="ForLoop6614029  for (j=jt; j<=min(ny-1,jj+255)-4; j=j+5) {...",shape=box];
	ForLoop6614029 -> 6613891;
	ForLoop6614029 -> _JOIN_6614029;
	6613310 [label="6613310  int j;...",shape=box];
	6613310 -> ForLoop6613497;
	6616233 [label="6616233  scv_53=scv_53+A[(i+11)*ny+j]*x[j];...",shape=box];
	6616233 -> _JOIN_6616234;
	ForLoop6618285 [label="ForLoop6618285  for (j=jt; j<=min(ny-1,jj+255)-4; j=j+5) {...",shape=box];
	ForLoop6618285 -> 6618147;
	ForLoop6618285 -> _JOIN_6618285;
	6620223 [label="6620223  scv_46=scv_46+A[(i+26)*ny+j]*x[j];...",shape=box];
	6620223 -> _JOIN_6620224;
	ForLoop6616766 [label="ForLoop6616766  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jt)+1)%5)+1; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop6616766 -> 6616765;
	ForLoop6616766 -> _JOIN_6616766;
	6613098 [label="6613098  int j;...",shape=box];
	6613098 -> ForLoop6613240;
	_JOIN_6614372 [label="_JOIN_6614372None...",shape=box];
	_JOIN_6614372 -> 6614374;
	ForLoop6615093 [label="ForLoop6615093  for (j=jt; j<=min(ny-1,jj+255)-4; j=j+5) {...",shape=box];
	ForLoop6615093 -> 6614955;
	ForLoop6615093 -> _JOIN_6615093;
	_JOIN_6616955 [label="_JOIN_6616955None...",shape=box];
	_JOIN_6616955 -> ForLoop6617032;
	6613138 [label="6613138  scv_41=scv_41+A[i*ny+j]*x[j];...",shape=box];
	6739839 [label="6739839  tmp[(i+20)]=scv_34;...",shape=box];
	_JOIN_6617830 [label="_JOIN_6617830None...",shape=box];
	_JOIN_6617830 -> 6617832;
	_JOIN_6619349 [label="_JOIN_6619349None...",shape=box];
	_JOIN_6619349 -> ForLoop6619426;
	ForLoop6615436 [label="ForLoop6615436  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jt)+1)%5)+1; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop6615436 -> 6615435;
	ForLoop6615436 -> _JOIN_6615436;
	6614423 [label="6614423  scv_44=scv_44+A[(i+5)*ny+j]*x[j];...",shape=box];
	6617297 [label="6617297  scv_49=scv_49+A[(i+15)*ny+j]*x[j];...",shape=box];
	6617297 -> _JOIN_6617298;
	6619162 [label="6619162  int j;...",shape=box];
	6619162 -> ForLoop6619349;
	_JOIN_6614827 [label="_JOIN_6614827None...",shape=box];
	_JOIN_6614827 -> ForLoop6614904;
	ForLoop6622037 [label="ForLoop6622037  for (j=jt; j<=min(ny-1,jj+255)-4; j=j+5) {...",shape=box];
	ForLoop6622037 -> 6621935;
	ForLoop6622037 -> _JOIN_6622037;
	_JOIN_6618628 [label="_JOIN_6618628None...",shape=box];
	_JOIN_6618628 -> 6618630;
	_JOIN_6620147 [label="_JOIN_6620147None...",shape=box];
	_JOIN_6620147 -> ForLoop6620224;
	_JOIN_6616689 [label="_JOIN_6616689None...",shape=box];
	_JOIN_6616689 -> ForLoop6616766;
	6618679 [label="6618679  scv_37=scv_37+A[(i+21)*ny+j]*x[j];...",shape=box];
	ForLoop6613763 [label="ForLoop6613763  for (j=jt; j<=min(ny-1,jj+255)-4; j=j+5) {...",shape=box];
	ForLoop6613763 -> 6613625;
	ForLoop6613763 -> _JOIN_6613763;
	6615438 [label="6615438  int j;...",shape=box];
	6615438 -> ForLoop6615625;
	ForLoop6618551 [label="ForLoop6618551  for (j=jt; j<=min(ny-1,jj+255)-4; j=j+5) {...",shape=box];
	ForLoop6618551 -> 6618413;
	ForLoop6618551 -> _JOIN_6618551;
	_JOIN_6615093 [label="_JOIN_6615093None...",shape=box];
	_JOIN_6615093 -> ForLoop6615170;
	6613307 [label="6613307  scv_41=scv_41+A[i*ny+j]*x[j];...",shape=box];
	6613307 -> _JOIN_6613308;
	6613891 [label="6613891  scv_40=scv_40+A[(i+3)*ny+j]*x[j];...",shape=box];
	6614637 [label="6614637  scv_44=scv_44+A[(i+5)*ny+j]*x[j];...",shape=box];
	6614637 -> _JOIN_6614638;
	ForLoop6376688 [label="ForLoop6376688  for (i=0; i<=ny-28; i=i+28) {...",shape=box];
	ForLoop6376688 -> 6376443;
	ForLoop6376688 -> _JOIN_6376688;
	6615435 [label="6615435  scv_56=scv_56+A[(i+8)*ny+j]*x[j];...",shape=box];
	6615435 -> _JOIN_6615436;
	_JOIN_6622184 [label="_JOIN_6622184None...",shape=box];
	_JOIN_6622184 -> _JOIN_6622185;
	_JOIN_6622185 [label="_JOIN_6622185None...",shape=box];
	6621895 [label="6621895  int j;...",shape=box];
	6621895 -> ForLoop6622037;
	6583816 [label="6583816  double x_copy;...",shape=box];
	ForLoop6617298 [label="ForLoop6617298  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jt)+1)%5)+1; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop6617298 -> 6617297;
	ForLoop6617298 -> _JOIN_6617298;
	ForLoop6617753 [label="ForLoop6617753  for (j=jt; j<=min(ny-1,jj+255)-4; j=j+5) {...",shape=box];
	ForLoop6617753 -> 6617615;
	ForLoop6617753 -> _JOIN_6617753;
	_JOIN_6614904 [label="_JOIN_6614904None...",shape=box];
	_JOIN_6614904 -> 6614906;
	6619694 [label="6619694  int j;...",shape=box];
	6619694 -> ForLoop6619881;
	6618630 [label="6618630  int j;...",shape=box];
	6618630 -> ForLoop6618817;
	6617349 [label="6617349  scv_52=scv_52+A[(i+16)*ny+j]*x[j];...",shape=box];
	6615487 [label="6615487  scv_55=scv_55+A[(i+9)*ny+j]*x[j];...",shape=box];
	6739821 [label="6739821  double scv_34, scv_35, scv_36, scv_37, scv_38, scv_39, scv_40, scv_41;...",shape=box];
	ForLoop6618894 [label="ForLoop6618894  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jt)+1)%5)+1; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop6618894 -> 6618893;
	ForLoop6618894 -> _JOIN_6618894;
	6616765 [label="6616765  scv_36=scv_36+A[(i+13)*ny+j]*x[j];...",shape=box];
	6616765 -> _JOIN_6616766;
	ForLoop6613574 [label="ForLoop6613574  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jt)+1)%5)+1; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop6613574 -> 6613573;
	ForLoop6613574 -> _JOIN_6613574;
	6618364 [label="6618364  int j;...",shape=box];
	6618364 -> ForLoop6618551;
	_JOIN_6617564 [label="_JOIN_6617564None...",shape=box];
	_JOIN_expected=9369846271501.798828
actual=9369846271501.798828
6617564 -> 6617566;
	ForLoop6616500 [label="ForLoop6616500  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jt)+1)%5)+1; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop6616500 -> 6616499;
	ForLoop6616500 -> _JOIN_6616500;
	ForLoop6620224 [label="ForLoop6620224  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jt)+1)%5)+1; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop6620224 -> 6620223;
	ForLoop6620224 -> _JOIN_6620224;
	_JOIN_6616234 [label="_JOIN_6616234None...",shape=box];
	_JOIN_6616234 -> 6616236;
	6620009 [label="6620009  scv_46=scv_46+A[(i+26)*ny+j]*x[j];...",shape=box];
	ForLoop6616423 [label="ForLoop6616423  for (j=jt; j<=min(ny-1,jj+255)-4; j=j+5) {...",shape=box];
	ForLoop6616423 -> 6616285;
	ForLoop6616423 -> _JOIN_6616423;
	6619957 [label="6619957  scv_50=scv_50+A[(i+25)*ny+j]*x[j];...",shape=box];
	6619957 -> _JOIN_6619958;
	ForLoop6622179 [label="ForLoop6622179  for (kk=kkk; kk<=min(ny-1,kkk+960); kk=kk+64) {...",shape=box];
	ForLoop6622179 -> ForLoop6622178;
	ForLoop6622179 -> _JOIN_6622179;
	ForLoop6618817 [label="ForLoop6618817  for (j=jt; j<=min(ny-1,jj+255)-4; j=j+5) {...",shape=box];
	ForLoop6618817 -> 6618679;
	ForLoop6618817 -> _JOIN_6618817;
	6705367 [label="6705367  double scv_33;...",shape=box];
	ForLoop6619426 [label="ForLoop6619426  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jt)+1)%5)+1; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop6619426 -> 6619425;
	ForLoop6619426 -> _JOIN_6619426;
	6618413 [label="6618413  scv_34=scv_34+A[(i+20)*ny+j]*x[j];...",shape=box];
	_JOIN_6617032 [label="_JOIN_6617032None...",shape=box];
	_JOIN_6617032 -> 6617034;
	ForLoop6613840 [label="ForLoop6613840  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jt)+1)%5)+1; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop6613840 -> 6613839;
	ForLoop6613840 -> _JOIN_6613840;
	_JOIN_6619692 [label="_JOIN_6619692None...",shape=box];
	_JOIN_6619692 -> 6619694;
	6745171 [label="6745171  double scv_61;...",shape=box];
	6613625 [label="6613625  scv_45=scv_45+A[(i+2)*ny+j]*x[j];...",shape=box];
	6618945 [label="6618945  scv_59=scv_59+A[(i+22)*ny+j]*x[j];...",shape=box];
	ForLoop6619349 [label="ForLoop6619349  for (j=jt; j<=min(ny-1,jj+255)-4; j=j+5) {...",shape=box];
	ForLoop6619349 -> 6619211;
	ForLoop6619349 -> _JOIN_6619349;
	_JOIN_6619615 [label="_JOIN_6619615None...",shape=box];
	_JOIN_6619615 -> ForLoop6619692;
	ForLoop6622108 [label="ForLoop6622108  for (jj=0; jj<=ny-1; jj=jj+256) {...",shape=box];
	ForLoop6622108 -> ForLoop6621894;
	ForLoop6622108 -> _JOIN_6622108;
	ForLoop6614638 [label="ForLoop6614638  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jt)+1)%5)+1; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop6614638 -> 6614637;
	ForLoop6614638 -> _JOIN_6614638;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest26.exe __orio_perftest26.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest26.exe  
{'[3, 5, 3, 4, 3, 5, 0, 0, 27, 26, 4, 0, 0, 2, 0, 1, 0, 0]' : 0.137033}
{'[3, 5, 3, 4, 3, 5, 0, 0, 27, 26, 4, 0, 0, 2, 0, 1, 0, 0]' : 0.136768}
{'[3, 5, 3, 4, 3, 5, 0, 0, 27, 26, 4, 0, 0, 2, 0, 1, 0, 0]' : 0.136743}
{'[3, 5, 3, 4, 3, 5, 0, 0, 27, 26, 4, 0, 0, 2, 0, 1, 0, 0]' : 0.13789}
{'[3, 5, 3, 4, 3, 5, 0, 0, 27, 26, 4, 0, 0, 2, 0, 1, 0, 0]' : 0.136857}
{'[3, 5, 3, 4, 3, 5, 0, 0, 27, 26, 4, 0, 0, 2, 0, 1, 0, 0]' : 0.137184}
{'[3, 5, 3, 4, 3, 5, 0, 0, 27, 26, 4, 0, 0, 2, 0, 1, 0, 0]' : 0.137361}
{'[3, 5, 3, 4, 3, 5, 0, 0, 27, 26, 4, 0, 0, 2, 0, 1, 0, 0]' : 0.136925}
{'[3, 5, 3, 4, 3, 5, 0, 0, 27, 26, 4, 0, 0, 2, 0, 1, 0, 0]' : 0.136928}
{'[3, 5, 3, 4, 3, 5, 0, 0, 27, 26, 4, 0, 0, 2, 0, 1, 0, 0]' : 0.136708}
{'[3, 5, 3, 4, 3, 5, 0, 0, 27, 26, 4, 0, 0, 2, 0, 1, 0, 0]' : 0.137168}
{'[3, 5, 3, 4, 3, 5, 0, 0, 27, 26, 4, 0, 0, 2, 0, 1, 0, 0]' : 0.137224}
{'[3, 5, 3, 4, 3, 5, 0, 0, 27, 26, 4, 0, 0, 2, 0, 1, 0, 0]' : 0.136981}
{'[3, 5, 3, 4, 3, 5, 0, 0, 27, 26, 4, 0, 0, 2, 0, 1, 0, 0]' : 0.136649}
{'[3, 5, 3, 4, 3, 5, 0, 0, 27, 26, 4, 0, 0, 2, 0, 1, 0, 0]' : 0.136899}
{'[3, 5, 3, 4, 3, 5, 0, 0, 27, 26, 4, 0, 0, 2, 0, 1, 0, 0]' : 0.136973}
{'[3, 5, 3, 4, 3, 5, 0, 0, 27, 26, 4, 0, 0, 2, 0, 1, 0, 0]' : 0.136922}
{'[3, 5, 3, 4, 3, 5, 0, 0, 27, 26, 4, 0, 0, 2, 0, 1, 0, 0]' : 0.137479}
{'[3, 5, 3, 4, 3, 5, 0, 0, 27, 26, 4, 0, 0, 2, 0, 1, 0, 0]' : 0.137899}
{'[3, 5, 3, 4, 3, 5, 0, 0, 27, 26, 4, 0, 0, 2, 0, 1, 0, 0]' : 0.137072}
{'[3, 5, 3, 4, 3, 5, 0, 0, 27, 26, 4, 0, 0, 2, 0, 1, 0, 0]' : 0.13689}
{'[3, 5, 3, 4, 3, 5, 0, 0, 27, 26, 4, 0, 0, 2, 0, 1, 0, 0]' : 0.137227}
{'[3, 5, 3, 4, 3, 5, 0, 0, 27, 26, 4, 0, 0, 2, 0, 1, 0, 0]' : 0.136854}
{'[3, 5, 3, 4, 3, 5, 0, 0, 27, 26, 4, 0, 0, 2, 0, 1, 0, 0]' : 0.136784}
{'[3, 5, 3, 4, 3, 5, 0, 0, 27, 26, 4, 0, 0, 2, 0, 1, 0, 0]' : 0.136978}
{'[3, 5, 3, 4, 3, 5, 0, 0, 27, 26, 4, 0, 0, 2, 0, 1, 0, 0]' : 0.136849}
{'[3, 5, 3, 4, 3, 5, 0, 0, 27, 26, 4, 0, 0, 2, 0, 1, 0, 0]' : 0.136968}
{'[3, 5, 3, 4, 3, 5, 0, 0, 27, 26, 4, 0, 0, 2, 0, 1, 0, 0]' : 0.137005}
{'[3, 5, 3, 4, 3, 5, 0, 0, 27, 26, 4, 0, 0, 2, 0, 1, 0, 0]' : 0.137231}
{'[3, 5, 3, 4, 3, 5, 0, 0, 27, 26, 4, 0, 0, 2, 0, 1, 0, 0]' : 0.136809}

out:
 ["{'[3, 5, 3, 4, 3, 5, 0, 0, 27, 26, 4, 0, 0, 2, 0, 1, 0, 0]' : 0.137033}", "{'[3, 5, 3, 4, 3, 5, 0, 0, 27, 26, 4, 0, 0, 2, 0, 1, 0, 0]' : 0.136768}", "{'[3, 5, 3, 4, 3, 5, 0, 0, 27, 26, 4, 0, 0, 2, 0, 1, 0, 0]' : 0.136743}", "{'[3, 5, 3, 4, 3, 5, 0, 0, 27, 26, 4, 0, 0, 2, 0, 1, 0, 0]' : 0.13789}", "{'[3, 5, 3, 4, 3, 5, 0, 0, 27, 26, 4, 0, 0, 2, 0, 1, 0, 0]' : 0.136857}", "{'[3, 5, 3, 4, 3, 5, 0, 0, 27, 26, 4, 0, 0, 2, 0, 1, 0, 0]' : 0.137184}", "{'[3, 5, 3, 4, 3, 5, 0, 0, 27, 26, 4, 0, 0, 2, 0, 1, 0, 0]' : 0.137361}", "{'[3, 5, 3, 4, 3, 5, 0, 0, 27, 26, 4, 0, 0, 2, 0, 1, 0, 0]' : 0.136925}", "{'[3, 5, 3, 4, 3, 5, 0, 0, 27, 26, 4, 0, 0, 2, 0, 1, 0, 0]' : 0.136928}", "{'[3, 5, 3, 4, 3, 5, 0, 0, 27, 26, 4, 0, 0, 2, 0, 1, 0, 0]' : 0.136708}", "{'[3, 5, 3, 4, 3, 5, 0, 0, 27, 26, 4, 0, 0, 2, 0, 1, 0, 0]' : 0.137168}", "{'[3, 5, 3, 4, 3, 5, 0, 0, 27, 26, 4, 0, 0, 2, 0, 1, 0, 0]' : 0.137224}", "{'[3, 5, 3, 4, 3, 5, 0, 0, 27, 26, 4, 0, 0, 2, 0, 1, 0, 0]' : 0.136981}", "{'[3, 5, 3, 4, 3, 5, 0, 0, 27, 26, 4, 0, 0, 2, 0, 1, 0, 0]' : 0.136649}", "{'[3, 5, 3, 4, 3, 5, 0, 0, 27, 26, 4, 0, 0, 2, 0, 1, 0, 0]' : 0.136899}", "{'[3, 5, 3, 4, 3, 5, 0, 0, 27, 26, 4, 0, 0, 2, 0, 1, 0, 0]' : 0.136973}", "{'[3, 5, 3, 4, 3, 5, 0, 0, 27, 26, 4, 0, 0, 2, 0, 1, 0, 0]' : 0.136922}", "{'[3, 5, 3, 4, 3, 5, 0, 0, 27, 26, 4, 0, 0, 2, 0, 1, 0, 0]' : 0.137479}", "{'[3, 5, 3, 4, 3, 5, 0, 0, 27, 26, 4, 0, 0, 2, 0, 1, 0, 0]' : 0.137899}", "{'[3, 5, 3, 4, 3, 5, 0, 0, 27, 26, 4, 0, 0, 2, 0, 1, 0, 0]' : 0.137072}", "{'[3, 5, 3, 4, 3, 5, 0, 0, 27, 26, 4, 0, 0, 2, 0, 1, 0, 0]' : 0.13689}", "{'[3, 5, 3, 4, 3, 5, 0, 0, 27, 26, 4, 0, 0, 2, 0, 1, 0, 0]' : 0.137227}", "{'[3, 5, 3, 4, 3, 5, 0, 0, 27, 26, 4, 0, 0, 2, 0, 1, 0, 0]' : 0.136854}", "{'[3, 5, 3, 4, 3, 5, 0, 0, 27, 26, 4, 0, 0, 2, 0, 1, 0, 0]' : 0.136784}", "{'[3, 5, 3, 4, 3, 5, 0, 0, 27, 26, 4, 0, 0, 2, 0, 1, 0, 0]' : 0.136978}", "{'[3, 5, 3, 4, 3, 5, 0, 0, 27, 26, 4, 0, 0, 2, 0, 1, 0, 0]' : 0.136849}", "{'[3, 5, 3, 4, 3, 5, 0, 0, 27, 26, 4, 0, 0, 2, 0, 1, 0, 0]' : 0.136968}", "{'[3, 5, 3, 4, 3, 5, 0, 0, 27, 26, 4, 0, 0, 2, 0, 1, 0, 0]' : 0.137005}", "{'[3, 5, 3, 4, 3, 5, 0, 0, 27, 26, 4, 0, 0, 2, 0, 1, 0, 0]' : 0.137231}", "{'[3, 5, 3, 4, 3, 5, 0, 0, 27, 26, 4, 0, 0, 2, 0, 1, 0, 0]' : 0.136809}"]
returning from 'run': {'[3, 5, 3, 4, 3, 5, 0, 0, 27, 26, 4, 0, 0, 2, 0, 1, 0, 0]': ([0.137033, 0.136768, 0.136743, 0.13789, 0.136857, 0.137184, 0.137361, 0.136925, 0.136928, 0.136708, 0.137168, 0.137224, 0.136981, 0.136649, 0.136899, 0.136973, 0.136922, 0.137479, 0.137899, 0.137072, 0.13689, 0.137227, 0.136854, 0.136784, 0.136978, 0.136849, 0.136968, 0.137005, 0.137231, 0.136809], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.137033, 0.136768, 0.136743, 0.13789, 0.136857, 0.137184, 0.137361, 0.136925, 0.136928, 0.136708, 0.137168, 0.137224, 0.136981, 0.136649, 0.136899, 0.136973, 0.136922, 0.137479, 0.137899, 0.137072, 0.13689, 0.137227, 0.136854, 0.136784, 0.136978, 0.136849, 0.136968, 0.137005, 0.137231, 0.136809], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[3, 5, 3, 4, 3, 5, 0, 0, 27, 26, 4, 0, 0, 2, 0, 1, 0, 0]': ([0.137033, 0.136768, 0.136743, 0.13789, 0.136857, 0.137184, 0.137361, 0.136925, 0.136928, 0.136708, 0.137168, 0.137224, 0.136981, 0.136649, 0.136899, 0.136973, 0.136922, 0.137479, 0.137899, 0.137072, 0.13689, 0.137227, 0.136854, 0.136784, 0.136978, 0.136849, 0.136968, 0.137005, 0.137231, 0.136809], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [3, 3, 0, 4, 4, 1, 0, 1, 1, 3, 6, 0, 0, 0, 2, 0, 1, 1]
Fixed Factors: {}
Testing candidate 27: [3, 3, 0, 4, 4, 1, 0, 1, 1, 3, 6, 0, 0, 0, 2, 0, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	28
        Max loop nest depth: 	6
        Additions: 		1635
        Multiplications: 	400
        Divisions: 		0
        Logical: 		0
        Reads: 			2604
        Writes: 		285
        Comparisons:		28
        Gotos: 			0
        
digraph CFG {
	6795876 [label="6795876  int i;...",shape=box];
	6796027 [label="6796027  y[i]=0.0;...",shape=box];
	6796027 -> _JOIN_6796028;
	6848406 [label="6848406  tmp[i]=tmp[i]+A[i*ny+j]*x[j];...",shape=box];
	ForLoop6796028 [label="ForLoop6796028  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop6796028 -> 6796027;
	ForLoop6796028 -> _JOIN_6796028;
	6849600 [label="6849600  y_copy[(kt-kkk)]=y_copy[(kt-kkk)]+A[i*ny+kt]*tmp[i];...",shape=box];
	_JOIN_6854755 [label="_JOIN_6854755None...",shape=box];
	_JOIN_6854755 -> _JOIN_6854757;
	_JOIN_6799141 [label="_JOIN_6799141None...",shape=box];
	_JOIN_6799141 -> _JOIN_6799142;
	_JOIN_6854757 [label="_JOIN_6854757None...",shape=box];
	_JOIN_6854757 -> _JOIN_6854758;
	6849461 [label="6849461  for (k=kkk; k<=min(ny-1,kkk+63); k=k+1) ...",shape=box];
	_JOIN_6849413 [label="_JOIN_6849413None...",shape=box];
	_JOIN_6849413 -> _JOIN_6849415;
	_JOIN_6855970 [label="_JOIN_6855970None...",shape=box];
	_JOIN_6855970 -> _JOIN_6799141;
	ForLoop6795959 [label="ForLoop6795959  for (i=0; i<=cbv_1; i=i+2) {...",shape=box];
	ForLoop6795959 -> 6795948;
	ForLoop6795959 -> _JOIN_6795959;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 6795876;
	6804217 [label="6804217  double x_copy;...",shape=box];
	6872332 [label="6872332  register int cbv_2, cbv_3;...",shape=box];
	ForLoop6855935 [label="ForLoop6855935  for (kt=kkk; kt<=cbv_8; kt=kt+32) {...",shape=box];
	ForLoop6855935 -> 6854848;
	ForLoop6855935 -> _JOIN_6855935;
	ForLoop6855970 [label="ForLoop6855970  for (i=(min(nx-1,ii+63))-(((min(nx-1,ii+63))-(ii)+1)%4)+1; i<=min(nx-1,ii+63); i=i+1) {...",shape=box];
	ForLoop6855970 -> 6854463;
	ForLoop6855970 -> _JOIN_6855970;
	_JOIN_6849415 [label="_JOIN_6849415None...",shape=box];
	_JOIN_6849415 -> _JOIN_6849417;
	6854495 [label="6854495  int j;...",shape=box];
	6833475 [label="6833475  int i;...",shape=box];
	6833475 -> ForLoop6854352;
	6854255 [label="6854255  for (k=kkk; k<=min(ny-1,kkk+63); k=k+1) ...",shape=box];
	_JOIN_6849417 [label="_JOIN_6849417None...",shape=box];
	_JOIN_6849417 -> ForLoop6854350;
	ForLoop6849415 [label="ForLoop6849415  for (jj=jjj; jj<=min(ny-1,jjj+448); jj=jj+64) {...",shape=box];
	ForLoop6849415 -> 6848363;
	ForLoop6849415 -> _JOIN_6849415;
	_JOIN_6796028 [label="_JOIN_6796028None...",shape=box];
	_JOIN_6796028 -> 6804217;
	ForLoop6849417 [label="ForLoop6849417  for (jjj=0; jjj<=ny-1; jjj=jjj+512) {...",shape=box];
	ForLoop6849417 -> ForLoop6849415;
	ForLoop6849417 -> _JOIN_6849417;
	_JOIN_6855935 [label="_JOIN_6855935None...",shape=box];
	_JOIN_6855935 -> 6855966;
	6855966 [label="6855966  for (k=kkk; k<=min(ny-1,kkk+63); k=k+1) ...",shape=box];
	6855966 -> _JOIN_6855968;
	ForLoop6849413 [label="ForLoop6849413  for (j=cbv_2; j<=cbv_3; j=j+1) {...",shape=box];
	ForLoop6849413 -> 6849324;
	ForLoop6849413 -> _JOIN_6849413;
	ForLoop6855968 [label="ForLoop6855968  for (kkk=0; kkk<=ny-1; kkk=kkk+64) {...",shape=boxexpected=9339882853735.613281
actual=9369846271501.798828
];
	ForLoop6855968 -> 6854802;
	ForLoop6855968 -> _JOIN_6855968;
	6849324 [label="6849324  tmp[i]=tmp[i]+A[i*ny+j]*x[j];...",shape=box];
	ForLoop6854687 [label="ForLoop6854687  for (j=jj; j<=cbv_5; j=j+7) {...",shape=box];
	ForLoop6854687 -> 6854535;
	ForLoop6854687 -> _JOIN_6854687;
	6854463 [label="6854463  tmp[i]=0;...",shape=box];
	6854463 -> ForLoop6854758;
	6854848 [label="6854848  y_copy[(kt-kkk)]=y_copy[(kt-kkk)]+A[i*ny+kt]*tmp[i];...",shape=box];
	6854802 [label="6854802  for (k=kkk; k<=min(ny-1,kkk+63); k=k+1) ...",shape=box];
	ForLoop6854224 [label="ForLoop6854224  for (kt=kkk; kt<=cbv_4; kt=kt+32) {...",shape=box];
	ForLoop6854224 -> 6849600;
	ForLoop6854224 -> _JOIN_6854224;
	_JOIN_6854758 [label="_JOIN_6854758None...",shape=box];
	_JOIN_6854758 -> ForLoop6855968;
	6795948 [label="6795948  y[i]=0.0;...",shape=box];
	_JOIN_6854350 [label="_JOIN_6854350None...",shape=box];
	_JOIN_6854350 -> _JOIN_6854352;
	_JOIN_6854687 [label="_JOIN_6854687None...",shape=box];
	_JOIN_6854687 -> 6877328;
	6848304 [label="6848304  tmp[i]=0;...",shape=box];
	6848363 [label="6848363  int j;...",shape=box];
	ForLoop6849257 [label="ForLoop6849257  for (j=jj; j<=cbv_1; j=j+7) {...",shape=box];
	ForLoop6849257 -> 6848406;
	ForLoop6849257 -> _JOIN_6849257;
	_JOIN_6854352 [label="_JOIN_6854352None...",shape=box];
	_JOIN_6854352 -> ForLoop6855970;
	_JOIN_6849257 [label="_JOIN_6849257None...",shape=box];
	_JOIN_6849257 -> 6872332;
	_JOIN_6795959 [label="_JOIN_6795959None...",shape=box];
	_JOIN_6795959 -> 6796087;
	6854754 [label="6854754  tmp[i]=tmp[i]+A[i*ny+j]*x[j];...",shape=box];
	6854754 -> _JOIN_6854755;
	6854535 [label="6854535  tmp[i]=tmp[i]+A[i*ny+j]*x[j];...",shape=box];
	_JOIN_6799142 [label="_JOIN_6799142None...",shape=box];
	_JOIN_6854224 [label="_JOIN_6854224None...",shape=box];
	_JOIN_6854224 -> 6854255;
	_JOIN_6855968 [label="_JOIN_6855968None...",shape=box];
	_JOIN_6855968 -> _JOIN_6855970;
	6796087 [label="6796087  register int cbv_2, cbv_3;...",shape=box];
	ForLoop6854755 [label="ForLoop6854755  for (j=cbv_6; j<=cbv_7; j=j+1) ...",shape=box];
	ForLoop6854755 -> 6854754;
	ForLoop6854755 -> _JOIN_6854755;
	ForLoop6854757 [label="ForLoop6854757  for (jj=jjj; jj<=min(ny-1,jjj+448); jj=jj+64) {...",shape=box];
	ForLoop6854757 -> 6854495;
	ForLoop6854757 -> _JOIN_6854757;
	ForLoop6854758 [label="ForLoop6854758  for (jjj=0; jjj<=ny-1; jjj=jjj+512) ...",shape=box];
	ForLoop6854758 -> ForLoop6854757;
	ForLoop6854758 -> _JOIN_6854758;
	ForLoop6799142 [label="ForLoop6799142  for (iii=0; iii<=nx-1; iii=iii+512) ...",shape=box];
	ForLoop6799142 -> ForLoop6799141;
	ForLoop6799142 -> _JOIN_6799142;
	ForLoop6799141 [label="ForLoop6799141  for (ii=iii; ii<=min(nx-1,iii+448); ii=ii+64) {...",shape=box];
	ForLoop6799141 -> 6833475;
	ForLoop6799141 -> _JOIN_6799141;
	ForLoop6854350 [label="ForLoop6854350  for (kkk=0; kkk<=ny-1; kkk=kkk+64) {...",shape=box];
	ForLoop6854350 -> 6849461;
	ForLoop6854350 -> _JOIN_6854350;
	6877328 [label="6877328  register int cbv_6, cbv_7;...",shape=box];
	ForLoop6854352 [label="ForLoop6854352  for (i=ii; i<=min(nx-1,ii+63)-3; i=i+4) {...",shape=box];
	ForLoop6854352 -> 6848304;
	ForLoop6854352 -> _JOIN_6854352;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest27.exe __orio_perftest27.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest27.exe  
{'[3, 3, 0, 4, 4, 1, 0, 1, 1, 3, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.12673}
{'[3, 3, 0, 4, 4, 1, 0, 1, 1, 3, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.126294}
{'[3, 3, 0, 4, 4, 1, 0, 1, 1, 3, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.126315}
{'[3, 3, 0, 4, 4, 1, 0, 1, 1, 3, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.126415}
{'[3, 3, 0, 4, 4, 1, 0, 1, 1, 3, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.126286}
{'[3, 3, 0, 4, 4, 1, 0, 1, 1, 3, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.126446}
{'[3, 3, 0, 4, 4, 1, 0, 1, 1, 3, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.1263}
{'[3, 3, 0, 4, 4, 1, 0, 1, 1, 3, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.126381}
{'[3, 3, 0, 4, 4, 1, 0, 1, 1, 3, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.126302}
{'[3, 3, 0, 4, 4, 1, 0, 1, 1, 3, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.126297}
{'[3, 3, 0, 4, 4, 1, 0, 1, 1, 3, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.12759}
{'[3, 3, 0, 4, 4, 1, 0, 1, 1, 3, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.12636}
{'[3, 3, 0, 4, 4, 1, 0, 1, 1, 3, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.126379}
{'[3, 3, 0, 4, 4, 1, 0, 1, 1, 3, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.126316}
{'[3, 3, 0, 4, 4, 1, 0, 1, 1, 3, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.12629}
{'[3, 3, 0, 4, 4, 1, 0, 1, 1, 3, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.126323}
{'[3, 3, 0, 4, 4, 1, 0, 1, 1, 3, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.126309}
{'[3, 3, 0, 4, 4, 1, 0, 1, 1, 3, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.126318}
{'[3, 3, 0, 4, 4, 1, 0, 1, 1, 3, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.126539}
{'[3, 3, 0, 4, 4, 1, 0, 1, 1, 3, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.12631}
{'[3, 3, 0, 4, 4, 1, 0, 1, 1, 3, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.126328}
{'[3, 3, 0, 4, 4, 1, 0, 1, 1, 3, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.126426}
{'[3, 3, 0, 4, 4, 1, 0, 1, 1, 3, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.126643}
{'[3, 3, 0, 4, 4, 1, 0, 1, 1, 3, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.126287}
{'[3, 3, 0, 4, 4, 1, 0, 1, 1, 3, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.126289}
{'[3, 3, 0, 4, 4, 1, 0, 1, 1, 3, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.126343}
{'[3, 3, 0, 4, 4, 1, 0, 1, 1, 3, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.127275}
{'[3, 3, 0, 4, 4, 1, 0, 1, 1, 3, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.126251}
{'[3, 3, 0, 4, 4, 1, 0, 1, 1, 3, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.12638}
{'[3, 3, 0, 4, 4, 1, 0, 1, 1, 3, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.126319}

out:
 ["{'[3, 3, 0, 4, 4, 1, 0, 1, 1, 3, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.12673}", "{'[3, 3, 0, 4, 4, 1, 0, 1, 1, 3, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.126294}", "{'[3, 3, 0, 4, 4, 1, 0, 1, 1, 3, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.126315}", "{'[3, 3, 0, 4, 4, 1, 0, 1, 1, 3, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.126415}", "{'[3, 3, 0, 4, 4, 1, 0, 1, 1, 3, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.126286}", "{'[3, 3, 0, 4, 4, 1, 0, 1, 1, 3, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.126446}", "{'[3, 3, 0, 4, 4, 1, 0, 1, 1, 3, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.1263}", "{'[3, 3, 0, 4, 4, 1, 0, 1, 1, 3, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.126381}", "{'[3, 3, 0, 4, 4, 1, 0, 1, 1, 3, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.126302}", "{'[3, 3, 0, 4, 4, 1, 0, 1, 1, 3, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.126297}", "{'[3, 3, 0, 4, 4, 1, 0, 1, 1, 3, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.12759}", "{'[3, 3, 0, 4, 4, 1, 0, 1, 1, 3, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.12636}", "{'[3, 3, 0, 4, 4, 1, 0, 1, 1, 3, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.126379}", "{'[3, 3, 0, 4, 4, 1, 0, 1, 1, 3, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.126316}", "{'[3, 3, 0, 4, 4, 1, 0, 1, 1, 3, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.12629}", "{'[3, 3, 0, 4, 4, 1, 0, 1, 1, 3, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.126323}", "{'[3, 3, 0, 4, 4, 1, 0, 1, 1, 3, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.126309}", "{'[3, 3, 0, 4, 4, 1, 0, 1, 1, 3, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.126318}", "{'[3, 3, 0, 4, 4, 1, 0, 1, 1, 3, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.126539}", "{'[3, 3, 0, 4, 4, 1, 0, 1, 1, 3, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.12631}", "{'[3, 3, 0, 4, 4, 1, 0, 1, 1, 3, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.126328}", "{'[3, 3, 0, 4, 4, 1, 0, 1, 1, 3, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.126426}", "{'[3, 3, 0, 4, 4, 1, 0, 1, 1, 3, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.126643}", "{'[3, 3, 0, 4, 4, 1, 0, 1, 1, 3, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.126287}", "{'[3, 3, 0, 4, 4, 1, 0, 1, 1, 3, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.126289}", "{'[3, 3, 0, 4, 4, 1, 0, 1, 1, 3, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.126343}", "{'[3, 3, 0, 4, 4, 1, 0, 1, 1, 3, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.127275}", "{'[3, 3, 0, 4, 4, 1, 0, 1, 1, 3, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.126251}", "{'[3, 3, 0, 4, 4, 1, 0, 1, 1, 3, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.12638}", "{'[3, 3, 0, 4, 4, 1, 0, 1, 1, 3, 6, 0, 0, 0, 2, 0, 1, 1]' : 0.126319}"]
returning from 'run': {'[3, 3, 0, 4, 4, 1, 0, 1, 1, 3, 6, 0, 0, 0, 2, 0, 1, 1]': ([0.12673, 0.126294, 0.126315, 0.126415, 0.126286, 0.126446, 0.1263, 0.126381, 0.126302, 0.126297, 0.12759, 0.12636, 0.126379, 0.126316, 0.12629, 0.126323, 0.126309, 0.126318, 0.126539, 0.12631, 0.126328, 0.126426, 0.126643, 0.126287, 0.126289, 0.126343, 0.127275, 0.126251, 0.12638, 0.126319], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.12673, 0.126294, 0.126315WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
, 0.126415, 0.126286, 0.126446, 0.1263, 0.126381, 0.126302, 0.126297, 0.12759, 0.12636, 0.126379, 0.126316, 0.12629, 0.126323, 0.126309, 0.126318, 0.126539, 0.12631, 0.126328, 0.126426, 0.126643, 0.126287, 0.126289, 0.126343, 0.127275, 0.126251, 0.12638, 0.126319], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[3, 3, 0, 4, 4, 1, 0, 1, 1, 3, 6, 0, 0, 0, 2, 0, 1, 1]': ([0.12673, 0.126294, 0.126315, 0.126415, 0.126286, 0.126446, 0.1263, 0.126381, 0.126302, 0.126297, 0.12759, 0.12636, 0.126379, 0.126316, 0.12629, 0.126323, 0.126309, 0.126318, 0.126539, 0.12631, 0.126328, 0.126426, 0.126643, 0.126287, 0.126289, 0.126343, 0.127275, 0.126251, 0.12638, 0.126319], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [3, 3, 5, 0, 1, 0, 1, 1, 10, 0, 2, 28, 2, 0, 0, 1, 1, 1]
Fixed Factors: {}
Testing candidate 28: [3, 3, 5, 0, 1, 0, 1, 1, 10, 0, 2, 28, 2, 0, 0, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	23
        Max loop nest depth: 	4
        Additions: 		4716
        Multiplications: 	2244
        Divisions: 		0
        Logical: 		0
        Reads: 			8807
        Writes: 		1393
        Comparisons:		23
        Gotos: 			0
        
digraph CFG {
	_JOIN_7199720 [label="_JOIN_7199720None...",shape=box];
	_JOIN_7199720 -> 7311859;
	7163698 [label="7163698  for (k=kk; k<=min(ny-1,kk+255); k=k+1) ...",shape=box];
	_JOIN_7199722 [label="_JOIN_7199722None...",shape=box];
	_JOIN_7199722 -> ForLoop7201063;
	7199834 [label="7199834  scv_97=scv_97+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	7316322 [label="7316322  double scv_96;...",shape=box];
	ForLoop7201065 [label="ForLoop7201065  for (ii=0; ii<=nx-1; ii=ii+64) {...",shape=box];
	ForLoop7201065 -> ForLoop7199722;
	ForLoop7201065 -> _JOIN_7201065;
	ForLoop7201063 [label="ForLoop7201063  for (i=it; i<=min(nx-1,ii+63); i=i+1) {...",shape=box];
	ForLoop7201063 -> 7319260;
	ForLoop7201063 -> _JOIN_7201063;
	7199960 [label="7199960  scv_97=scv_97+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	7199960 -> _JOIN_7199961;
	ForLoop7201061 [label="ForLoop7201061  for (kk=0; kk<=ny-1; kk=kk+256) {...",shape=box];
	ForLoop7201061 -> 7200008;
	ForLoop7201061 -> _JOIN_7201061;
	7363940 [label="7363940  register int cbv_5, cbv_6;...",shape=box];
	ForLoop7199720 [label="ForLoop7199720  for (kk=0; kk<=ny-1; kk=kk+256) {...",shape=box];
	ForLoop7199720 -> 7163698;
	ForLoop7199720 -> _JOIN_7199720;
	_JOIN_7200953 [label="_JOIN_7200953None...",shape=box];
	_JOIN_7200953 -> 7365409;
	_JOIN_7201065 [label="_JOIN_7201065None...",shape=box];
	_JOIN_7198619 [label="_JOIN_7198619None...",shape=box];
	_JOIN_7198619 -> 7363940;
	ForLoop7201027 [label="ForLoop7201027  for (k=cbv_11; k<=cbv_12; k=k+1) {...",shape=box];
	ForLoop7201027 -> 7316322;
	ForLoop7201027 -> _JOIN_7201027;
	7257053 [label="7257053  double scv_5, scv_6, scv_7, scv_8, scv_9, scv_10, scv_11, scv_12;...",shape=box];
	ForLoop7199961 [label="ForLoop7199961  for (j=cbv_8; j<=cbv_9; j=j+1) {...",shape=box];
	ForLoop7199961 -> 7199960;
	ForLoop7199961 -> _JOIN_7199961;
	6879117 [label="6879117  y[i]=0.0;...",shape=box];
	6879117 -> _JOIN_6879118;
	7201059 [label="7201059  for (k=kk; k<=min(ny-1,kk+255); k=k+1) ...",shape=box];
	7201059 -> _JOIN_7201061;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 6878750;
	_JOIN_7201063 [label="_JOIN_7201063None...",shape=box];
	_JOIN_7201063 -> _JOIN_7201065;
	_JOIN_7201061 [label="_JOIN_7201061None...",shape=box];
	_JOIN_7201061 -> 7319272;
	_JOIN_6879049 [label="_JOIN_6879049None...",shape=box];
	_JOIN_6879049 -> 6879258;
	7207182 [label="7207182  double scv_4;...",shape=box];
	7311841 [label="7311841  double scv_35, scv_36, scv_37, scv_38, scv_39, scv_40, scv_41, scv_42;...",shape=box];
	_JOIN_7199686 [label="_JOIN_7199686None...",shape=box];
	_JOIN_7199686 -> 7199718;
	6878957 [label="6878957  y[i]=0expected=9369846271501.798828
actual=9369846271501.798828
.0;...",shape=box];
	ForLoop7199964 [label="ForLoop7199964  for (jj=0; jj<=ny-1; jj=jj+64) {...",shape=box];
	ForLoop7199964 -> 7199790;
	ForLoop7199964 -> _JOIN_7199964;
	ForLoop7200953 [label="ForLoop7200953  for (k=kk; k<=cbv_10; k=k+29) {...",shape=box];
	ForLoop7200953 -> 7315518;
	ForLoop7200953 -> _JOIN_7200953;
	ForLoop7162587 [label="ForLoop7162587  for (j=jj; j<=cbv_1; j=j+3) {...",shape=box];
	ForLoop7162587 -> 7205672;
	ForLoop7162587 -> _JOIN_7162587;
	7319260 [label="7319260  double scv_97;...",shape=box];
	7205672 [label="7205672  double scv_1, scv_2, scv_3;...",shape=box];
	ForLoop7199686 [label="ForLoop7199686  for (k=cbv_5; k<=cbv_6; k=k+1) {...",shape=box];
	ForLoop7199686 -> 7260958;
	ForLoop7199686 -> _JOIN_7199686;
	ForLoop6879049 [label="ForLoop6879049  for (i=0; i<=cbv_1; i=i+11) {...",shape=box];
	ForLoop6879049 -> 6878957;
	ForLoop6879049 -> _JOIN_6879049;
	7364150 [label="7364150  register int cbv_8, cbv_9;...",shape=box];
	_JOIN_7163654 [label="_JOIN_7163654None...",shape=box];
	_JOIN_7163654 -> ForLoop7199720;
	7200008 [label="7200008  for (k=kk; k<=min(ny-1,kk+255); k=k+1) ...",shape=box];
	ForLoop7198619 [label="ForLoop7198619  for (k=kk; k<=cbv_4; k=k+29) {...",shape=box];
	ForLoop7198619 -> 7257053;
	ForLoop7198619 -> _JOIN_7198619;
	_JOIN_7199961 [label="_JOIN_7199961None...",shape=box];
	_JOIN_7199961 -> _JOIN_7199964;
	7319272 [label="7319272  tmp[i]=scv_97;...",shape=box];
	7319272 -> _JOIN_7201063;
	_JOIN_7199964 [label="_JOIN_7199964None...",shape=box];
	_JOIN_7199964 -> ForLoop7201061;
	6879258 [label="6879258  register int cbv_2, cbv_3;...",shape=box];
	7199718 [label="7199718  for (k=kk; k<=min(ny-1,kk+255); k=k+1) ...",shape=box];
	7199718 -> _JOIN_7199720;
	ForLoop7163651 [label="ForLoop7163651  for (j=cbv_2; j<=cbv_3; j=j+1) {...",shape=box];
	ForLoop7163651 -> 7207182;
	ForLoop7163651 -> _JOIN_7163651;
	7315518 [label="7315518  double scv_67, scv_68, scv_69, scv_70, scv_71, scv_72, scv_73, scv_74;...",shape=box];
	ForLoop7199722 [label="ForLoop7199722  for (it=ii; it<=min(nx-1,ii+63)-31; it=it+32) {...",shape=box];
	ForLoop7199722 -> 7311841;
	ForLoop7199722 -> _JOIN_7199722;
	ForLoop7163654 [label="ForLoop7163654  for (jj=0; jj<=ny-1; jj=jj+64) {...",shape=box];
	ForLoop7163654 -> 7159263;
	ForLoop7163654 -> _JOIN_7163654;
	_JOIN_7201027 [label="_JOIN_7201027None...",shape=box];
	_JOIN_7201027 -> 7201059;
	7311859 [label="7311859  tmp[(it+21)]=scv_35;...",shape=box];
	_JOIN_6879118 [label="_JOIN_6879118None...",shape=box];
	_JOIN_6879118 -> 7159179;
	7199790 [label="7199790  for (j=jj; j<=min(ny-1,jj+63); j=j+1) ...",shape=box];
	7260958 [label="7260958  double scv_34;...",shape=box];
	ForLoop6879118 [label="ForLoop6879118  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop6879118 -> 6879117;
	ForLoop6879118 -> _JOIN_6879118;
	7159179 [label="7159179  double x_copy[64];...",shape=box];
	7365409 [label="7365409  register int cbv_11, cbv_12;...",shape=box];
	6878750 [label="6878750  int i;...",shape=box];
	_JOIN_7163651 [label="_JOIN_7163651None...",shape=box];
	_JOIN_7163651 -> _JOIN_7163654;
	ForLoop7199890 [label="ForLoop7199890  for (j=jj; j<=cbv_7; j=j+3) {...",shape=box];
	ForLoop7199890 -> 7199834;
	ForLoop7199890 -> _JOIN_7199890;
	_JOIN_7162587 [label="_JOIN_7162587None...",shape=box];
	_JOIN_7162587 -> 7345135;
	_JOIN_7199890 [label="_JOIN_7199890None...",shape=box];
	_JOIN_7199890 -> 7364150;
	7159263 [label="7159263  for (j=jj; j<=min(ny-1,jj+63); j=j+1) ...",shape=box];
	7345135 [label="7345135  register int cbv_2, cbv_3;...",shape=box];

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest28.exe __orio_perftest28.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest28.exe  
{'[3, 3, 5, 0, 1, 0, 1, 1, 10, 0, 2, 28, 2, 0, 0, 1, 1, 1]' : 0.156565}
{'[3, 3, 5, 0, 1, 0, 1, 1, 10, 0, 2, 28, 2, 0, 0, 1, 1, 1]' : 0.156284}
{'[3, 3, 5, 0, 1, 0, 1, 1, 10, 0, 2, 28, 2, 0, 0, 1, 1, 1]' : 0.157127}
{'[3, 3, 5, 0, 1, 0, 1, 1, 10, 0, 2, 28, 2, 0, 0, 1, 1, 1]' : 0.156183}
{'[3, 3, 5, 0, 1, 0, 1, 1, 10, 0, 2, 28, 2, 0, 0, 1, 1, 1]' : 0.155877}
{'[3, 3, 5, 0, 1, 0, 1, 1, 10, 0, 2, 28, 2, 0, 0, 1, 1, 1]' : 0.156094}
{'[3, 3, 5, 0, 1, 0, 1, 1, 10, 0, 2, 28, 2, 0, 0, 1, 1, 1]' : 0.156252}
{'[3, 3, 5, 0, 1, 0, 1, 1, 10, 0, 2, 28, 2, 0, 0, 1, 1, 1]' : 0.155956}
{'[3, 3, 5, 0, 1, 0, 1, 1, 10, 0, 2, 28, 2, 0, 0, 1, 1, 1]' : 0.156419}
{'[3, 3, 5, 0, 1, 0, 1, 1, 10, 0, 2, 28, 2, 0, 0, 1, 1, 1]' : 0.155857}
{'[3, 3, 5, 0, 1, 0, 1, 1, 10, 0, 2, 28, 2, 0, 0, 1, 1, 1]' : 0.156291}
{'[3, 3, 5, 0, 1, 0, 1, 1, 10, 0, 2, 28, 2, 0, 0, 1, 1, 1]' : 0.155802}
{'[3, 3, 5, 0, 1, 0, 1, 1, 10, 0, 2, 28, 2, 0, 0, 1, 1, 1]' : 0.155946}
{'[3, 3, 5, 0, 1, 0, 1, 1, 10, 0, 2, 28, 2, 0, 0, 1, 1, 1]' : 0.155862}
{'[3, 3, 5, 0, 1, 0, 1, 1, 10, 0, 2, 28, 2, 0, 0, 1, 1, 1]' : 0.155693}
{'[3, 3, 5, 0, 1, 0, 1, 1, 10, 0, 2, 28, 2, 0, 0, 1, 1, 1]' : 0.157058}
{'[3, 3, 5, 0, 1, 0, 1, 1, 10, 0, 2, 28, 2, 0, 0, 1, 1, 1]' : 0.155959}
{'[3, 3, 5, 0, 1, 0, 1, 1, 10, 0, 2, 28, 2, 0, 0, 1, 1, 1]' : 0.156247}
{'[3, 3, 5, 0, 1, 0, 1, 1, 10, 0, 2, 28, 2, 0, 0, 1, 1, 1]' : 0.155898}
{'[3, 3, 5, 0, 1, 0, 1, 1, 10, 0, 2, 28, 2, 0, 0, 1, 1, 1]' : 0.155817}
{'[3, 3, 5, 0, 1, 0, 1, 1, 10, 0, 2, 28, 2, 0, 0, 1, 1, 1]' : 0.155684}
{'[3, 3, 5, 0, 1, 0, 1, 1, 10, 0, 2, 28, 2, 0, 0, 1, 1, 1]' : 0.156123}
{'[3, 3, 5, 0, 1, 0, 1, 1, 10, 0, 2, 28, 2, 0, 0, 1, 1, 1]' : 0.155659}
{'[3, 3, 5, 0, 1, 0, 1, 1, 10, 0, 2, 28, 2, 0, 0, 1, 1, 1]' : 0.155726}
{'[3, 3, 5, 0, 1, 0, 1, 1, 10, 0, 2, 28, 2, 0, 0, 1, 1, 1]' : 0.155398}
{'[3, 3, 5, 0, 1, 0, 1, 1, 10, 0, 2, 28, 2, 0, 0, 1, 1, 1]' : 0.155947}
{'[3, 3, 5, 0, 1, 0, 1, 1, 10, 0, 2, 28, 2, 0, 0, 1, 1, 1]' : 0.155859}
{'[3, 3, 5, 0, 1, 0, 1, 1, 10, 0, 2, 28, 2, 0, 0, 1, 1, 1]' : 0.156186}
{'[3, 3, 5, 0, 1, 0, 1, 1, 10, 0, 2, 28, 2, 0, 0, 1, 1, 1]' : 0.157011}
{'[3, 3, 5, 0, 1, 0, 1, 1, 10, 0, 2, 28, 2, 0, 0, 1, 1, 1]' : 0.15608}

out:
 ["{'[3, 3, 5, 0, 1, 0, 1, 1, 10, 0, 2, 28, 2, 0, 0, 1, 1, 1]' : 0.156565}", "{'[3, 3, 5, 0, 1, 0, 1, 1, 10, 0, 2, 28, 2, 0, 0, 1, 1, 1]' : 0.156284}", "{'[3, 3, 5, 0, 1, 0, 1, 1, 10, 0, 2, 28, 2, 0, 0, 1, 1, 1]' : 0.157127}", "{'[3, 3, 5, 0, 1, 0, 1, 1, 10, 0, 2, 28, 2, 0, 0, 1, 1, 1]' : 0.156183}", "{'[3, 3, 5, 0, 1, 0, 1, 1, 10, 0, 2, 28, 2, 0, 0, 1, 1, 1]' : 0.155877}", "{'[3, 3, 5, 0, 1, 0, 1, 1, 10, 0, 2, 28, 2, 0, 0, 1, 1, 1]' : 0.156094}", "{'[3, 3, 5, 0, 1, 0, 1, 1, 10, 0, 2, 28, 2, 0, 0, 1, 1, 1]' : 0.156252}", "{'[3, 3, 5, 0, 1, 0, 1, 1, 10, 0, 2, 28, 2, 0, 0, 1, 1, 1]' : 0.155956}", "{'[3, 3, 5, 0, 1, 0, 1, 1, 10, 0, 2, 28, 2, 0, 0, 1, 1, 1]' : 0.156419}", "{'[3, 3, 5, 0, 1, 0, 1, 1, 10, 0, 2, 28, 2, 0, 0, 1, 1, 1]' : 0.155857}", "{'[3, 3, 5, 0, 1, 0, 1, 1, 10, 0, 2, 28, 2, 0, 0, 1, 1, 1]' : 0.156291}", "{'[3, 3, 5, 0, 1, 0, 1, 1, 10, 0, 2, 28, 2, 0, 0, 1, 1, 1]' : 0.155802}", "{'[3, 3, 5, 0, 1, 0, 1, 1, 10, 0, 2, 28, 2, 0, 0, 1, 1, 1]' : 0.155946}", "{'[3, 3, 5, 0, 1, 0, 1, 1, 10, 0, 2, 28, 2, 0, 0, 1, 1, 1]' : 0.155862}", "{'[3, 3, 5, 0, 1, 0, 1, 1, 10, 0, 2, 28, 2, 0, 0, 1, 1, 1]' : 0.155693}", "{'[3, 3, 5, 0, 1, 0, 1, 1, 10, 0, 2, 28, 2, 0, 0, 1, 1, 1]' : 0.157058}", "{'[3, 3, 5, 0, 1, 0, 1, 1, 10, 0, 2, 28, 2, 0, 0, 1, 1, 1]' : 0.155959}", "{'[3, 3, 5, 0, 1, 0, 1, 1, 10, 0, 2, 28, 2, 0, 0, 1, 1, 1]' : 0.156247}", "{'[3, 3, 5, 0, 1, 0, 1, 1, 10, 0, 2, 28, 2, 0, 0, 1, 1, 1]' : 0.155898}", "{'[3, 3, 5, 0, 1, 0, 1, 1, 10, 0, 2, 28, 2, 0, 0, 1, 1, 1]' : 0.155817}", "{'[3, 3, 5, 0, 1, 0, 1, 1, 10, 0, 2, 28, 2, 0, 0, 1, 1, 1]' : 0.155684}", "{'[3, 3, 5, 0, 1, 0, 1, 1, 10, 0, 2, 28, 2, 0, 0, 1, 1, 1]' : 0.156123}", "{'[3, 3, 5, 0, 1, 0, 1, 1, 10, 0, 2, 28, 2, 0, 0, 1, 1, 1]' : 0.155659}", "{'[3, 3, 5, 0, 1, 0, 1, 1, 10, 0, 2, 28, 2, 0, 0, 1, 1, 1]' : 0.155726}", "{'[3, 3, 5, 0, 1, 0, 1, 1, 10, 0, 2, 28, 2, 0, 0, 1, 1, 1]' : 0.155398}", "{'[3, 3, 5, 0, 1, 0, 1, 1, 10, 0, 2, 28, 2, 0, 0, 1, 1, 1]' : 0.155947}", "{'[3, 3, 5, 0, 1, 0, 1, 1, 10, 0, 2, 28, 2, 0, 0, 1, 1, 1]' : 0.155859}", "{'[3, 3, 5, 0, 1, 0, 1, 1, 10, 0, 2, 28, 2, 0, 0, 1, 1, 1]' : 0.156186}", "{'[3, 3, 5, 0, 1, 0, 1, 1, 10, 0, 2, 28, 2, 0, 0, 1, 1, 1]' : 0.157011}", "{'[3, 3, 5, 0, 1, 0, 1, 1, 10, 0, 2, 28, 2, 0, 0, 1, 1, 1]' : 0.15608}"]
returning from 'run': {'[3, 3, 5, 0, 1, 0,WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = kkk
 1, 1, 10, 0, 2, 28, 2, 0, 0, 1, 1, 1]': ([0.156565, 0.156284, 0.157127, 0.156183, 0.155877, 0.156094, 0.156252, 0.155956, 0.156419, 0.155857, 0.156291, 0.155802, 0.155946, 0.155862, 0.155693, 0.157058, 0.155959, 0.156247, 0.155898, 0.155817, 0.155684, 0.156123, 0.155659, 0.155726, 0.155398, 0.155947, 0.155859, 0.156186, 0.157011, 0.15608], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.156565, 0.156284, 0.157127, 0.156183, 0.155877, 0.156094, 0.156252, 0.155956, 0.156419, 0.155857, 0.156291, 0.155802, 0.155946, 0.155862, 0.155693, 0.157058, 0.155959, 0.156247, 0.155898, 0.155817, 0.155684, 0.156123, 0.155659, 0.155726, 0.155398, 0.155947, 0.155859, 0.156186, 0.157011, 0.15608], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[3, 3, 5, 0, 1, 0, 1, 1, 10, 0, 2, 28, 2, 0, 0, 1, 1, 1]': ([0.156565, 0.156284, 0.157127, 0.156183, 0.155877, 0.156094, 0.156252, 0.155956, 0.156419, 0.155857, 0.156291, 0.155802, 0.155946, 0.155862, 0.155693, 0.157058, 0.155959, 0.156247, 0.155898, 0.155817, 0.155684, 0.156123, 0.155659, 0.155726, 0.155398, 0.155947, 0.155859, 0.156186, 0.157011, 0.15608], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [0, 1, 3, 3, 5, 1, 0, 0, 1, 9, 0, 25, 0, 1, 1, 1, 0, 0]
Fixed Factors: {}
Testing candidate 29: [0, 1, 3, 3, 5, 1, 0, 0, 1, 9, 0, 25, 0, 1, 1, 1, 0, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	39
        Max loop nest depth: 	5
        Additions: 		2641
        Multiplications: 	968
        Divisions: 		0
        Logical: 		0
        Reads: 			5694
        Writes: 		1233
        Comparisons:		39
        Gotos: 			0
        
digraph CFG {
	7365840 [label="7365840  y[i]=0.0;...",shape=box];
	7365840 -> _JOIN_7365841;
	ForLoop7452065 [label="ForLoop7452065  for (j=jt; j<=min(ny-1,jj+15); j=j+1) {...",shape=box];
	ForLoop7452065 -> 7469887;
	ForLoop7452065 -> _JOIN_7452065;
	ForLoop7452067 [label="ForLoop7452067  for (jj=jjj; jj<=min(ny-1,jjj+1008); jj=jj+16) {...",shape=box];
	ForLoop7452067 -> ForLoop7451764;
	ForLoop7452067 -> _JOIN_7452067;
	ForLoop7452069 [label="ForLoop7452069  for (jjj=0; jjj<=ny-1; jjj=jjj+1024) {...",shape=box];
	ForLoop7452069 -> ForLoop7452067;
	ForLoop7452069 -> _JOIN_7452069;
	7462327 [label="7462327  int k;...",shape=box];
	7462327 -> ForLoop7463225;
	7536113 [label="7536113  double scv_333;...",shape=box];
	ForLoop7462325 [label="ForLoop7462325  for (k=(min(ny-1,kk+63))-(((min(ny-1,kk+63))-(kt)+1)%26)+1; k<=min(ny-1,kk+63); k=k+1) {...",shape=box];
	ForLoop7462325 -> 7494718;
	ForLoop7462325 -> _JOIN_7462325;
	ForLoop7451764 [label="ForLoop7451764  for (jt=jj; jt<=min(ny-1,jj+15)-7; jt=jt+8) {...",shape=box];
	ForLoop7451764 -> 7469336;
	ForLoop7451764 -> _JOIN_7451764;
	7480767 [label="7480767  double scv_44;...",shape=box];
	ForLoop7461351 [label="ForLoop7461351  for (k=(min(ny-1,kk+63))-(((min(ny-1,kk+63))-(kt)+1)%26)+1; k<=min(ny-1,kk+63); k=k+1) {...",shape=box];
	ForLoop7461351 -> 7492725;
	ForLoop7461351 -> _JOIN_7461351;
	_JOIN_7365841 [label="_JOIN_7365841None...",shape=box];
	_JOIN_7365841 -> 7448991;
	_JOIN_7464273 [label="_JOIN_7464273None...",shape=box];
	_JOIN_7464273 -> _JOIN_7464276;
	_JOIN_7464276 [label="_JOIN_7464276None...",shape=box];
	_JOIN_7464276 -> 7529127;
	7458431 [label="7458431  int k;...",shape=box];
	7458431 -> ForLoop7459329;
	ForLoop7464628 [label="ForLoop7464628  for (jjj=0; jjj<=ny-1; jjj=jjj+1024) {...",shape=box];
	ForLoop7464628 -> ForLoop7464627;
	ForLoop7464628 -> _JOIN_7464628;
	ForLoop7454696 [label="ForLoop7454696  for (kt=kk; kt<=min(ny-1,kk+63)-7; kt=kt+8) {...",shape=box];
	ForLoop7454696 -> 7478727;
	ForLoop7454696 -> _JOIN_7454696;
	7492102 [label="7492102  double scv_180, scv_181, scv_182, scv_183, scv_184, scv_185, scv_186, scv_187;...",shape=box];
	7484130 [label="7484130  double scv_72, scv_73, scv_74, scv_75, scv_76, scv_77, scv_78, scv_79;...",shape=box];
	ForLoop7464627 [label="ForLoop7464627  for (jj=jjj; jj<=min(ny-1,jjj+1008); jj=jj+16) {...",shape=box];
	ForLoop7464627 -> ForLoop7464586;
	ForLoop7464627 -> _JOIN_7464627;
	7461353 [label="7461353  int k;...",shape=box];
	7461353 -> ForLoop7462251;
	ForLoop7464625 [label="ForLoop7464625  for (j=jt; j<=min(ny-1,jj+15); j=j+1) {...",shape=box];
	ForLoop7464625 -> 7464624;
	ForLoop7464625 -> _JOIN_7464625;
	_JOIN_7458429 [label="_JOIN_7458429None...",shape=box];
	_JOIN_7458429 -> 7458431;
	ForLoop7460377 [label="ForLoop7460377  for (k=(min(ny-1,kk+63))-(((min(ny-1,kk+63))-(kt)+1)%26)+1; k<=min(ny-1,kk+63); k=k+1) {...",shape=box];
	ForLoop7460377 -> 7490732;
	ForLoop7460377 -> _JOIN_7460377;
	ForLoop7457455 [label="ForLoop7457455  for (k=(min(ny-1,kk+63))-(((min(ny-1,kk+63))-(kt)+1)%26)+1; k<=min(ny-1,kk+63); k=k+1) {...",shape=box];
	ForLoop7457455 -> 7484753;
	ForLoop7457455 -> _JOIN_7457455;
	7531144 [label="7531144  double scv_298, scv_299, scv_300, scv_301, scv_302, scv_303, scv_304, scv_305;...",shape=box];
	7498081 [label="7498081  double scv_261, scv_262, scv_263, scv_264, scv_265, scv_266, scv_267, scv_268;...",shape=box];
	ForLoop7462251 [label="ForLoop7462251  for (k=kt; k<=min(ny-1,kk+63)-25; k=k+26) {...",shape=box];
	ForLoop7462251 -> 7494095;
	ForLoop7462251 -> _JOIN_7462251;
	_JOIN_7465697 [label="_JOIN_7465697None...",shape=box];
	_JOIN_7465697 -> _JOIN_7465700;
	_JOIN_7465702 [label="_JOIN_7465702None...",shape=box];
	_JOIN_7465702 -> _JOIN_7465704;
	7464887 [label="7464887  int k;...",shape=box];
	7464887 -> ForLoop7465629;
	_JOIN_7465700 [label="_JOIN_7465700None...",shape=box];
	_JOIN_7465700 -> 7536125;
	_JOIN_7465704 [label="_JOIN_7465704None...",shape=box];
	7482760 [label="7482760  double scv_71;...",shape=box];
	ForLoop7458355 [label="ForLoop7458355  for (k=kt; k<=min(ny-1,kk+63)-25; k=k+26) {...",shape=box];
	ForLoop7458355 -> 7486123;
	ForLoop7458355 -> _JOIN_7458355;
	_JOIN_7460377 [label="_JOIN_7460377None...",shape=box];
	_JOIN_7460377 -> 7460379;
	_JOIN_7465629 [label="_JOIN_7465629None...",shape=box];
	_JOIN_7465629 -> ForLoop7465697;
	7449006 [label="7449006  int i;...",shape=box];
	7449006 -> ForLoop7464278;
	ForLoop7457381 [label="ForLoop7457381  for (k=kt; k<=min(ny-1,kk+63)-25; k=k+26) {...",shape=box];
	ForLoop7457381 -> 7484130;
	ForLoop7457381 -> _JOIN_7457381;
	7486123 [label="7486123  double scv_99, scv_100, scv_101, scv_102, scv_103, scv_104, scv_105, scv_106;...",shape=box];
	7464402 [label="7464402  scv_333=scv_333+A[i*ny+jt]*x[jt];...",shape=box];
	ForLoop7465629 [label="ForLoop7465629  for (k=kt; k<=min(ny-1,kk+63)-25; k=k+26) {...",shape=box];
	ForLoop7465629 -> 7532426;
	ForLoop7465629 -> _JOIN_7465629;
	ForLoop7463225 [label="ForLoop7463225  for (k=kt; k<=min(ny-1,kk+63)-25; k=k+26) {...",shape=box];
	ForLoop7463225 -> 7496088;
	ForLoop7463225 -> _JOIN_7463225;
	_JOIN_7462325 [label="_JOIN_7462325None...",shape=box];
	_JOIN_7462325 -> 7462327;
	ForLoop7456407 [label="ForLoop7456407  for (k=kt; k<=min(ny-1,kk+63)-25; k=k+26) {...",shape=box];
	ForLoop7456407 -> 7482137;
	ForLoop7456407 -> _JOIN_7456407;
	7456483 [label="7456483  int k;...",shape=box];
	7456483 -> ForLoop7457381;
	ForLoop7461277 [label="ForLoop7461277  for (k=kt; k<=min(ny-1,kk+63)-25; k=k+26) {...",shape=box];
	ForLoop7461277 -> 7492102;
	ForLoop7461277 -> _JOIN_7461277;
	_JOIN_7460303 [label="_JOIN_7460303None...",shape=box];
	_JOIN_7460303 -> ForLoop7460377;
	7488739 [label="7488739  double scv_152;...",shape=box];
	ForLoop7464199 [label="ForLoop7464199  for (k=kt; k<=min(ny-1,kk+63)-25; k=k+26) {...",shape=box];
	ForLoop7464199 -> 7498081;
	ForLoop7464199 -> _JOIN_7464199;
	7455509 [label="7455509  int k;...",shape=box];
	7455509 -> ForLoop7456407;
	7454697 [label="7454697  int k;...",shape=box];
	7454697 -> ForLoop7455439;
	7536125 [label="7536125  tmp[i]=scv_333;...",shape=box];
	7536125 -> _JOIN_7465702;
	ForLoop7456481 [label="ForLoop7456481  for (k=(min(ny-1,kk+63))-(((min(ny-1,kk+63))-(kt)+1)%26)+1; k<=min(ny-1,kk+63); k=k+1) {...",shape=box];
	ForLoop7456481 -> 7482760;
	ForLoop7456481 -> _JOIN_7456481;
	_JOIN_7464278 [label="_JOIN_7464278None...",shape=box];
	_JOIN_7464278 -> ForLoop7465702;
	ForLoop7459403 [label="ForLoop7459403  for (k=(min(ny-1,kk+63))-(((min(ny-1,kk+63))-(kt)+1)%26)+1; k<=min(ny-1,kk+63); k=k+1) {...",shape=box];
	ForLoop7459403 -> 7488739;
	ForLoop7459403 -> _JOIN_7459403;
	_JOIN_7457455 [label="_JOIN_7457455None...",shape=box];
	_JOIN_7457455 -> 7457457;
	ForLoop7464586 [label="ForLoop7464586  for (jt=jj; jt<=min(ny-1,jj+15)-7; jt=jt+8) {...",shape=box];
	ForLoop7464586 -> 7464402;
	ForLoop7464586 -> _JOIN_7464586;
	_JOIN_7452069 [label="_JOIN_7452069None...",shape=box];
	_JOIN_7452069 -> ForLoop7464276;
	7498704 [label="7498704  double scv_287;...",shape=box];
	_JOIN_7452065 [label="_JOIN_7452065None...",shape=box];
	_JOIN_7452065 -> _JOIN_7452067;
	_JOIN_7452067 [label="_JOIN_7452067None...",shape=box];
	_JOIN_7452067 -> _JOIN_7452069;
	ForLoop7465697 [label="ForLoop7465697  for (k=(min(ny-1,kk+63))-(((min(ny-1,kk+63))-(kt)+1)%26)+1; k<=min(ny-1,kk+63); k=k+1) {...",shape=box];
	ForLoop7465697 -> 7533040;
	ForLoop7465697 -> _JOIN_7465697;
	7480153 [label="7480153  double scv_18, scv_19, scv_20, scv_21, scv_22, scv_23, scv_24, scv_25;...",shape=box];
	_JOIN_7459329 [label="_JOIN_7459329None...",shape=box];
	_JOIN_7459329 -> ForLoop7459403;
	7484753 [label="7484753  double scv_98;...",shape=box];
	_JOIN_7459403 [label="_JOIN_7459403None...",shape=box];
	_JOIN_7459403 -> 7459405;
	_JOIN_7463299 [label="_JOIN_7463299None...",shape=box];
	_JOIN_7463299 -> 7463301;
	ForLoop7463299 [label="ForLoop7463299  for (k=(min(ny-1,kk+63))-(((min(ny-1,kk+63))-(kt)+1)%26)+1; k<=min(ny-1,kk+63); k=k+1) {...",shape=box];
	ForLoop7463299 -> 7496711;
	ForLoop7463299 -> _JOIN_7463299;
	7459405 [label="7459405  int k;...",shape=box];
	7459405 -> ForLoop7460303;
	_JOIN_7365772 [label="_JOIN_7365772None...",shape=box];
	_JOIN_7365772 -> ForLoop7365841;
	7529109 [label="7529109  double scv_288, scv_289, scv_290, scv_291, scv_292, scv_293, scv_294, scv_295;...",shape=box];
	_JOIN_7455439 [label="_JOIN_7455439None...",shape=box];
	_JOIN_7455439 -> ForLoop7455507;
	7494095 [label="7494095  double scv_207, scv_208, scv_209, scv_210, scv_211, scv_212, scv_213, scv_214;...",shape=box];
	ForLoop7455439 [label="ForLoop7455439  for (k=kt; k<=min(ny-1,kk+63)-25; k=k+26) {...",shape=box];
	ForLoop7455439 -> 7480153;
	ForLoop7455439 -> _JOIN_7455439;
	_JOIN_7464886 [label="_JOIN_7464886None...",shape=box];
	_JOIN_7464886 -> 7464887;
	ForLoop7460303 [label="ForLoop7460303  for (k=kt; k<=min(ny-1,kk+63)-25; k=k+26) {...",shape=box];
	ForLoop7460303 -> 7490109;
	ForLoop7460303 -> _JOIN_7460303;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 7365689;
	ForLoop7464278 [label="ForLoop7464278  for (i=iii; i<=min(nx-1,iii+255)-9; i=i+10) {...",shape=box];
	ForLoop7464278 -> 7529109;
	ForLoop7464278 -> _JOIN_7464278;
	_JOIN_7463225 [label="_JOIN_7463225None...",shape=box];
	_JOIN_7463225 -> ForLoop7463299;
	7469336 [label="7469336  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	7478727 [label="7478727  double scv_10, scv_11, scv_12, scv_13, scv_14, scv_15, scv_16, scv_17;...",shape=box];
	ForLoop7464273 [label="ForLoop7464273  for (k=(min(ny-1,kk+63))-(((min(ny-1,kk+63))-(kt)+1)%26)+1; k<=min(ny-1,kk+63); k=k+1) {...",shape=box];
	ForLoop7464273 -> 7498704;
	ForLoop7464273 -> _JOIN_7464273;
	ForLoop7464276 [label="ForLoop7464276  for (kk=0; kk<=ny-1; kk=kk+64) {...",shape=box];
	ForLoop7464276 -> ForLoop7454696;
	ForLoop7464276 -> _JOIN_7464276;
	_JOIN_7451764 [label="_JOIN_7451764None...",shape=box];
	_JOIN_7451764 -> ForLoop7452065;
	_JOIN_7464627 [label="_JOIN_7464627None...",shape=box];
	_JOIN_7464627 -> _JOIN_7464628;
	_JOIN_7464625 [label="_JOIN_7464625None...",shape=box];
	_JOIN_7464625 -> _JOIN_7464627;
	_JOIN_7458355 [label="_JOIN_7458355None...",shape=box];
	_JOIN_7458355 -> ForLoop7458429;
	ForLoop7365841 [label="ForLoop7365841  for (i=ny-((ny-(0))%2); i<=ny-1; i=i+1) ...",shape=box];
	ForLoop7365841 -> 7365840;
	ForLoop7365841 -> _JOIN_7365841;
	_JOIN_7464628 [label="_JOIN_7464628None...",shape=box];
	_JOIN_7464628 -> ForLoop7465700;
	7457457 [label="7457457  int k;...",shape=box];
	7457457 -> ForLoop7458355;
	7490109 [label="7490109  double scv_153, scv_154, scv_155, scv_156, scv_157, scv_158, scv_159, scv_160;...",shape=box];
	7494718 [label="7494718  double scv_233;...",shape=box];
	_JOIN_7462251 [label="_JOIN_7462251None...",shape=box];
	_JOIN_7462251 -> ForLoop7462325;
	_JOIN_7455507 [label="_JOIN_7455507None...",shape=box];
	_JOIN_7455507 -> 7455509;
	7488116 [label="7488116  double scv_126, scv_127, scv_128, scv_129, scv_130, scv_131, scv_132, scv_133;...",shape=box];
	_JOIN_7464586 [label="_JOIN_7464586None...",shape=box];
	_JOIN_7464586 -> ForLoop7464625;
	7490732 [label="7490732  double scv_179;...",shape=box];
	_JOIN_7461351 [label="_JOIN_7461351None...",shape=box];
	_JOIN_7461351 -> 7461353;
	7448991 [label="7448991  double x_copy;...",shape=box];
	7365761 [label="7365761  y[i]=0.0;...",shape=box];
	ForLoop7465704 [label="ForLoop7465704  for (iii=0; iii<=nx-1; iii=iii+256) {...",shape=box];
	ForLoop7465704 -> 7449006;
	ForLoop7465704 -> _JOIN_7465704;
	ForLoop7465702 [label="ForLoop7465702  for (i=(min(nx-1,iii+255))-(((min(nx-1,iii+255))-(iii)+1)%10)+1; i<=min(nx-1,iii+255); i=i+1) {...",shape=box];
	ForLoop7465702 -> 7536113;
	ForLoop7465702 -> _JOIN_7465702;
	ForLoop7465700 [label="ForLoop7465700  for (kk=0; kk<=ny-1; kk=kk+64) {...",shape=box];
	ForLoop7465700 -> ForLoop7464886;
	ForLoop7465700 -> _JOIN_7465700;
	ForLoop7459329 [label="ForLoop7459329  for (k=kt; k<=min(ny-1,kk+63)-25; k=k+26) {...",shape=box];
	ForLoop7459329 -> 7488116;
	ForLoop7459329 -> _JOIN_7459329;
	7469887 [label="7469887  double scv_9;...",shape=box];
	7486746 [label="7486746  double scv_125;...",shape=box];
	7463301 [label="7463301  int k;...",shape=box];
	7463301 -> ForLoop7464199;
	7496088 [label="7496088  double scv_234, scv_235, scv_236, scv_237, scv_238, scv_239, scv_240, scv_241;...",shape=box];
	ForLoop7464886 [label="ForLoop7464886  for (kt=kk; kt<=min(ny-1,kk+63)-7; kt=kt+8) {...",shape=box];
	ForLoop7464886 -> 7531144;
	ForLoop7464886 -> _JOIN_7464886;
	7532426 [label="7532426  double scv_306, scv_307, scv_308, scv_309, scv_310, scv_311, scv_312, scv_313;...",shape=box];
	7460379 [label="7460379  int k;...",shape=box];
	7460379 -> ForLoop7461277;
	_JOIN_7464199 [label="_JOIN_7464199None...",shape=box];
	_JOIN_7464199 -> ForLoop7464273;
	7492725 [label="7492725  double scv_206;...",shape=box];
	7464624 [label="7464624  scv_333=scv_333+A[i*ny+j]*x[j];...",shape=box];
	7464624 -> _JOIN_7464625;
	_JOIN_7454696 [label="_JOIN_7454696None...",shape=box];
	_JOIN_7454696 -> 7454697;
	ForLoop7455507 [label="ForLoop7455507  for (k=(min(ny-1,kk+63))-(((min(ny-1,kk+63))-(kt)+1)%26)+1; k<=min(ny-1,kk+63); k=k+1) {...",shape=box];
	ForLoop7455507 -> 7480767;
	ForLoop7455507 -> _JOIN_7455507;
	ForLoop7458429 [label="ForLoop7458429  for (k=(min(ny-1,kk+63))-(((min(ny-1,kk+63))-(kt)+1)%26)+1; k<=min(ny-1,kk+63); k=k+1) {...",shape=box];
	ForLoop7458429 -> 7486746;
	ForLoop7458429 -> _JOIN_7458429;
	_JOIN_7456481 [label="_JOIN_7456481None...",shape=box];
	_JOIN_7456481 -> 7456483;
	_JOIN_7457381 [label="_JOIN_7457381None...",shape=box];
	_JOIN_7457381 -> ForLoop7457455;
	_JOIN_7456407 [label="_JOIN_7456407None...",shape=box];
	_JOIN_7456407 -> ForLoop7456481;
	ForLoop7365772 [label="ForLoop7365772  for (i=0; i<=ny-2; i=i+2) {...",shape=box];
	ForLoop7365772 -> 7365761;
	ForLoop7365772 -> _JOIN_7365772;
	7496711 [label="7496711  double scv_260;...",shape=box];
	7365689 [label="7365689  int i;...",shape=box];
	7365689 -> ForLoop7365772;
	7482137 [label="7482137  double scv_45, scv_46, scv_47, scv_48, scv_49, scv_50, scv_51, scv_52;...",shape=box];
	7529127 [label="7529127  tmp[(i+1)]=scv_288;...",shape=box];
	_JOIN_7461277 [label="_JOIN_7461277None...",shape=box];
	_JOIN_7461277 -> ForLoop7461351;
	7533040 [label="7533040  double scv_332;...",shape=box];

}

 buildiexpected=9369846271501.798828
actual=9369846271501.798828
ng test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest29.exe __orio_perftest29.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest29.exe  
{'[0, 1, 3, 3, 5, 1, 0, 0, 1, 9, 0, 25, 0, 1, 1, 1, 0, 0]' : 0.077842}
{'[0, 1, 3, 3, 5, 1, 0, 0, 1, 9, 0, 25, 0, 1, 1, 1, 0, 0]' : 0.077419}
{'[0, 1, 3, 3, 5, 1, 0, 0, 1, 9, 0, 25, 0, 1, 1, 1, 0, 0]' : 0.077378}
{'[0, 1, 3, 3, 5, 1, 0, 0, 1, 9, 0, 25, 0, 1, 1, 1, 0, 0]' : 0.0773339}
{'[0, 1, 3, 3, 5, 1, 0, 0, 1, 9, 0, 25, 0, 1, 1, 1, 0, 0]' : 0.0773001}
{'[0, 1, 3, 3, 5, 1, 0, 0, 1, 9, 0, 25, 0, 1, 1, 1, 0, 0]' : 0.077424}
{'[0, 1, 3, 3, 5, 1, 0, 0, 1, 9, 0, 25, 0, 1, 1, 1, 0, 0]' : 0.077379}
{'[0, 1, 3, 3, 5, 1, 0, 0, 1, 9, 0, 25, 0, 1, 1, 1, 0, 0]' : 0.0773239}
{'[0, 1, 3, 3, 5, 1, 0, 0, 1, 9, 0, 25, 0, 1, 1, 1, 0, 0]' : 0.077328}
{'[0, 1, 3, 3, 5, 1, 0, 0, 1, 9, 0, 25, 0, 1, 1, 1, 0, 0]' : 0.0773151}
{'[0, 1, 3, 3, 5, 1, 0, 0, 1, 9, 0, 25, 0, 1, 1, 1, 0, 0]' : 0.077317}
{'[0, 1, 3, 3, 5, 1, 0, 0, 1, 9, 0, 25, 0, 1, 1, 1, 0, 0]' : 0.0774422}
{'[0, 1, 3, 3, 5, 1, 0, 0, 1, 9, 0, 25, 0, 1, 1, 1, 0, 0]' : 0.077347}
{'[0, 1, 3, 3, 5, 1, 0, 0, 1, 9, 0, 25, 0, 1, 1, 1, 0, 0]' : 0.0773461}
{'[0, 1, 3, 3, 5, 1, 0, 0, 1, 9, 0, 25, 0, 1, 1, 1, 0, 0]' : 0.077327}
{'[0, 1, 3, 3, 5, 1, 0, 0, 1, 9, 0, 25, 0, 1, 1, 1, 0, 0]' : 0.0775528}
{'[0, 1, 3, 3, 5, 1, 0, 0, 1, 9, 0, 25, 0, 1, 1, 1, 0, 0]' : 0.0773139}
{'[0, 1, 3, 3, 5, 1, 0, 0, 1, 9, 0, 25, 0, 1, 1, 1, 0, 0]' : 0.077358}
{'[0, 1, 3, 3, 5, 1, 0, 0, 1, 9, 0, 25, 0, 1, 1, 1, 0, 0]' : 0.077692}
{'[0, 1, 3, 3, 5, 1, 0, 0, 1, 9, 0, 25, 0, 1, 1, 1, 0, 0]' : 0.0772998}
{'[0, 1, 3, 3, 5, 1, 0, 0, 1, 9, 0, 25, 0, 1, 1, 1, 0, 0]' : 0.077266}
{'[0, 1, 3, 3, 5, 1, 0, 0, 1, 9, 0, 25, 0, 1, 1, 1, 0, 0]' : 0.077363}
{'[0, 1, 3, 3, 5, 1, 0, 0, 1, 9, 0, 25, 0, 1, 1, 1, 0, 0]' : 0.077352}
{'[0, 1, 3, 3, 5, 1, 0, 0, 1, 9, 0, 25, 0, 1, 1, 1, 0, 0]' : 0.077503}
{'[0, 1, 3, 3, 5, 1, 0, 0, 1, 9, 0, 25, 0, 1, 1, 1, 0, 0]' : 0.0783491}
{'[0, 1, 3, 3, 5, 1, 0, 0, 1, 9, 0, 25, 0, 1, 1, 1, 0, 0]' : 0.077374}
{'[0, 1, 3, 3, 5, 1, 0, 0, 1, 9, 0, 25, 0, 1, 1, 1, 0, 0]' : 0.0772851}
{'[0, 1, 3, 3, 5, 1, 0, 0, 1, 9, 0, 25, 0, 1, 1, 1, 0, 0]' : 0.0773389}
{'[0, 1, 3, 3, 5, 1, 0, 0, 1, 9, 0, 25, 0, 1, 1, 1, 0, 0]' : 0.0773389}
{'[0, 1, 3, 3, 5, 1, 0, 0, 1, 9, 0, 25, 0, 1, 1, 1, 0, 0]' : 0.0772831}

out:
 ["{'[0, 1, 3, 3, 5, 1, 0, 0, 1, 9, 0, 25, 0, 1, 1, 1, 0, 0]' : 0.077842}", "{'[0, 1, 3, 3, 5, 1, 0, 0, 1, 9, 0, 25, 0, 1, 1, 1, 0, 0]' : 0.077419}", "{'[0, 1, 3, 3, 5, 1, 0, 0, 1, 9, 0, 25, 0, 1, 1, 1, 0, 0]' : 0.077378}", "{'[0, 1, 3, 3, 5, 1, 0, 0, 1, 9, 0, 25, 0, 1, 1, 1, 0, 0]' : 0.0773339}", "{'[0, 1, 3, 3, 5, 1, 0, 0, 1, 9, 0, 25, 0, 1, 1, 1, 0, 0]' : 0.0773001}", "{'[0, 1, 3, 3, 5, 1, 0, 0, 1, 9, 0, 25, 0, 1, 1, 1, 0, 0]' : 0.077424}", "{'[0, 1, 3, 3, 5, 1, 0, 0, 1, 9, 0, 25, 0, 1, 1, 1, 0, 0]' : 0.077379}", "{'[0, 1, 3, 3, 5, 1, 0, 0, 1, 9, 0, 25, 0, 1, 1, 1, 0, 0]' : 0.0773239}", "{'[0, 1, 3, 3, 5, 1, 0, 0, 1, 9, 0, 25, 0, 1, 1, 1, 0, 0]' : 0.077328}", "{'[0, 1, 3, 3, 5, 1, 0, 0, 1, 9, 0, 25, 0, 1, 1, 1, 0, 0]' : 0.0773151}", "{'[0, 1, 3, 3, 5, 1, 0, 0, 1, 9, 0, 25, 0, 1, 1, 1, 0, 0]' : 0.077317}", "{'[0, 1, 3, 3, 5, 1, 0, 0, 1, 9, 0, 25, 0, 1, 1, 1, 0, 0]' : 0.0774422}", "{'[0, 1, 3, 3, 5, 1, 0, 0, 1, 9, 0, 25, 0, 1, 1, 1, 0, 0]' : 0.077347}", "{'[0, 1, 3, 3, 5, 1, 0, 0, 1, 9, 0, 25, 0, 1, 1, 1, 0, 0]' : 0.0773461}", "{'[0, 1, 3, 3, 5, 1, 0, 0, 1, 9, 0, 25, 0, 1, 1, 1, 0, 0]' : 0.077327}", "{'[0, 1, 3, 3, 5, 1, 0, 0, 1, 9, 0, 25, 0, 1, 1, 1, 0, 0]' : 0.0775528}", "{'[0, 1, 3, 3, 5, 1, 0, 0, 1, 9, 0, 25, 0, 1, 1, 1, 0, 0]' : 0.0773139}", "{'[0, 1, 3, 3, 5, 1, 0, 0, 1, 9, 0, 25, 0, 1, 1, 1, 0, 0]' : 0.077358}", "{'[0, 1, 3, 3, 5, 1, 0, 0, 1, 9, 0, 25, 0, 1, 1, 1, 0, 0]' : 0.077692}", "{'[0, 1, 3, 3, 5, 1, 0, 0, 1, 9, 0, 25, 0, 1, 1, 1, 0, 0]' : 0.0772998}", "{'[0, 1, 3, 3, 5, 1, 0, 0, 1, 9, 0, 25, 0, 1, 1, 1, 0, 0]' : 0.077266}", "{'[0, 1, 3, 3, 5, 1, 0, 0, 1, 9, 0, 25, 0, 1, 1, 1, 0, 0]' : 0.077363}", "{'[0, 1, 3, 3, 5, 1, 0, 0, 1, 9, 0, 25, 0, 1, 1, 1, 0, 0]' : 0.077352}", "{'[0, 1, 3, 3, 5, 1, 0, 0, 1, 9, 0, 25, 0, 1, 1, 1, 0, 0]' : 0.077503}", "{WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = iii
'[0, 1, 3, 3, 5, 1, 0, 0, 1, 9, 0, 25, 0, 1, 1, 1, 0, 0]' : 0.0783491}", "{'[0, 1, 3, 3, 5, 1, 0, 0, 1, 9, 0, 25, 0, 1, 1, 1, 0, 0]' : 0.077374}", "{'[0, 1, 3, 3, 5, 1, 0, 0, 1, 9, 0, 25, 0, 1, 1, 1, 0, 0]' : 0.0772851}", "{'[0, 1, 3, 3, 5, 1, 0, 0, 1, 9, 0, 25, 0, 1, 1, 1, 0, 0]' : 0.0773389}", "{'[0, 1, 3, 3, 5, 1, 0, 0, 1, 9, 0, 25, 0, 1, 1, 1, 0, 0]' : 0.0773389}", "{'[0, 1, 3, 3, 5, 1, 0, 0, 1, 9, 0, 25, 0, 1, 1, 1, 0, 0]' : 0.0772831}"]
returning from 'run': {'[0, 1, 3, 3, 5, 1, 0, 0, 1, 9, 0, 25, 0, 1, 1, 1, 0, 0]': ([0.077842, 0.077419, 0.077378, 0.0773339, 0.0773001, 0.077424, 0.077379, 0.0773239, 0.077328, 0.0773151, 0.077317, 0.0774422, 0.077347, 0.0773461, 0.077327, 0.0775528, 0.0773139, 0.077358, 0.077692, 0.0772998, 0.077266, 0.077363, 0.077352, 0.077503, 0.0783491, 0.077374, 0.0772851, 0.0773389, 0.0773389, 0.0772831], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.077842, 0.077419, 0.077378, 0.0773339, 0.0773001, 0.077424, 0.077379, 0.0773239, 0.077328, 0.0773151, 0.077317, 0.0774422, 0.077347, 0.0773461, 0.077327, 0.0775528, 0.0773139, 0.077358, 0.077692, 0.0772998, 0.077266, 0.077363, 0.077352, 0.077503, 0.0783491, 0.077374, 0.0772851, 0.0773389, 0.0773389, 0.0772831], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 3, 3, 5, 1, 0, 0, 1, 9, 0, 25, 0, 1, 1, 1, 0, 0]': ([0.077842, 0.077419, 0.077378, 0.0773339, 0.0773001, 0.077424, 0.077379, 0.0773239, 0.077328, 0.0773151, 0.077317, 0.0774422, 0.077347, 0.0773461, 0.077327, 0.0775528, 0.0773139, 0.077358, 0.077692, 0.0772998, 0.077266, 0.077363, 0.077352, 0.077503, 0.0783491, 0.077374, 0.0772851, 0.0773389, 0.0773389, 0.0772831], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [5, 2, 2, 3, 0, 1, 0, 0, 22, 0, 28, 19, 0, 0, 0, 1, 1, 1]
Fixed Factors: {}
Testing candidate 30: [5, 2, 2, 3, 0, 1, 0, 0, 22, 0, 28, 19, 0, 0, 0, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	5
        Additions: 		288
        Multiplications: 	102
        Divisions: 		0
        Logical: 		0
        Reads: 			663
        Writes: 		151
        Comparisons:		11
        Gotos: 			0
        
digraph CFG {
	7576071 [label="7576071  double scv_21;...",shape=box];
	ForLoop7571914 [label="ForLoop7571914  for (j=jj; j<=cbv_1; j=j+29) {...",shape=box];
	ForLoop7571914 -> 7571212;
	ForLoop7571914 -> _JOIN_7571914;
	7552995 [label="7552995  y[i]=0.0;...",shape=box];
	7552995 -> _JOIN_7552996;
	_JOIN_7571914 [label="_JOIN_7571914None...",shape=box];
	_JOIN_7571914 -> 7581807;
	ForLoop7552927 [label="ForLoop7552927  for (i=0; i<=cbv_1; i=i+23) {...",shape=box];
	ForLoop7552927 -> 7552727;
	ForLoop7552927 -> _JOIN_7552927;
	7571172 [label="7571172  int j;...",shape=box];
	_JOIN_7552996 [label="_JOIN_7552996None...",shape=box];
	_JOIN_7552996 -> 7571120;
	ForLoop7571984 [label="ForLoop7571984  for (jj=0; jj<=ny-1; jj=jj+32) {...",shape=box];
	ForLoop7571984 -> 7571172;
	ForLoop7571984 -> _JOIN_7571984;
	_JOIN_7572658 [label="_JOIN_7572658None...",shape=box];
	_JOIN_7572658 -> _JOIN_7572660;
	ForLoop7571982 [label="ForLoop7571982  for (j=cbv_2; j<=cbv_3; j=j+1) {...",shape=box];
	ForLoop7571982 -> 7571981;
	ForLoop7571982 -> _JOIN_7571982;
	7579455 [label="7579455  double scv_22;...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 7552340;
	_JOIN_7572590 [label="_JOIN_7572590None...",shape=box];
	_JOIN_7572590 -> 7582635;
	_JOIN_7572664 [label="_JOIN_7572664None...",shape=box];
	7575584 [label="7575584  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	ForLoop7572590 [label="ForLoop7572590  for (k=kk; k<=cbv_4; k=k+20) {...",shape=box];
	ForLoop7572590 -> 7575584;
	ForLoop7572590 -> _JOIN_75725expected=9369846271501.798828
actual=9369846271501.798828
90;
	_JOIN_7572663 [label="_JOIN_7572663None...",shape=box];
	_JOIN_7572663 -> _JOIN_7572664;
	_JOIN_7572660 [label="_JOIN_7572660None...",shape=box];
	_JOIN_7572660 -> _JOIN_7572661;
	_JOIN_7572661 [label="_JOIN_7572661None...",shape=box];
	_JOIN_7572661 -> 7579467;
	ForLoop7572658 [label="ForLoop7572658  for (k=cbv_5; k<=cbv_6; k=k+1) {...",shape=box];
	ForLoop7572658 -> 7576071;
	ForLoop7572658 -> _JOIN_7572658;
	ForLoop7552996 [label="ForLoop7552996  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop7552996 -> 7552995;
	ForLoop7552996 -> _JOIN_7552996;
	7553244 [label="7553244  register int cbv_2, cbv_3;...",shape=box];
	7579467 [label="7579467  tmp[i]=scv_22;...",shape=box];
	7579467 -> _JOIN_7572663;
	_JOIN_7552927 [label="_JOIN_7552927None...",shape=box];
	_JOIN_7552927 -> 7553244;
	7572016 [label="7572016  int k;...",shape=box];
	7571120 [label="7571120  double x_copy;...",shape=box];
	7581807 [label="7581807  register int cbv_2, cbv_3;...",shape=box];
	7552340 [label="7552340  int i;...",shape=box];
	_JOIN_7571982 [label="_JOIN_7571982None...",shape=box];
	_JOIN_7571982 -> _JOIN_7571984;
	7571981 [label="7571981  scv_22=scv_22+A[i*ny+j]*x[j];...",shape=box];
	7571981 -> _JOIN_7571982;
	_JOIN_7571984 [label="_JOIN_7571984None...",shape=box];
	_JOIN_7571984 -> ForLoop7572661;
	7552727 [label="7552727  y[i]=0.0;...",shape=box];
	7582635 [label="7582635  register int cbv_5, cbv_6;...",shape=box];
	7571212 [label="7571212  scv_22=scv_22+A[i*ny+j]*x[j];...",shape=box];
	ForLoop7572663 [label="ForLoop7572663  for (i=ii; i<=min(nx-1,ii+255); i=i+1) {...",shape=box];
	ForLoop7572663 -> 7579455;
	ForLoop7572663 -> _JOIN_7572663;
	ForLoop7572660 [label="ForLoop7572660  for (kk=kkk; kk<=min(ny-1,kkk+32); kk=kk+32) {...",shape=box];
	ForLoop7572660 -> 7572016;
	ForLoop7572660 -> _JOIN_7572660;
	ForLoop7572661 [label="ForLoop7572661  for (kkk=0; kkk<=ny-1; kkk=kkk+64) {...",shape=box];
	ForLoop7572661 -> ForLoop7572660;
	ForLoop7572661 -> _JOIN_7572661;
	ForLoop7572664 [label="ForLoop7572664  for (ii=0; ii<=nx-1; ii=ii+256) {...",shape=box];
	ForLoop7572664 -> ForLoop7572663;
	ForLoop7572664 -> _JOIN_7572664;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest30.exe __orio_perftest30.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest30.exe  
{'[5, 2, 2, 3, 0, 1, 0, 0, 22, 0, 28, 19, 0, 0, 0, 1, 1, 1]' : 0.137528}
{'[5, 2, 2, 3, 0, 1, 0, 0, 22, 0, 28, 19, 0, 0, 0, 1, 1, 1]' : 0.137605}
{'[5, 2, 2, 3, 0, 1, 0, 0, 22, 0, 28, 19, 0, 0, 0, 1, 1, 1]' : 0.137741}
{'[5, 2, 2, 3, 0, 1, 0, 0, 22, 0, 28, 19, 0, 0, 0, 1, 1, 1]' : 0.137799}
{'[5, 2, 2, 3, 0, 1, 0, 0, 22, 0, 28, 19, 0, 0, 0, 1, 1, 1]' : 0.137599}
{'[5, 2, 2, 3, 0, 1, 0, 0, 22, 0, 28, 19, 0, 0, 0, 1, 1, 1]' : 0.137609}
{'[5, 2, 2, 3, 0, 1, 0, 0, 22, 0, 28, 19, 0, 0, 0, 1, 1, 1]' : 0.137573}
{'[5, 2, 2, 3, 0, 1, 0, 0, 22, 0, 28, 19, 0, 0, 0, 1, 1, 1]' : 0.137675}
{'[5, 2, 2, 3, 0, 1, 0, 0, 22, 0, 28, 19, 0, 0, 0, 1, 1, 1]' : 0.137662}
{'[5, 2, 2, 3, 0, 1, 0, 0, 22, 0, 28, 19, 0, 0, 0, 1, 1, 1]' : 0.137681}
{'[5, 2, 2, 3, 0, 1, 0, 0, 22, 0, 28, 19, 0, 0, 0, 1, 1, 1]' : 0.137597}
{'[5, 2, 2, 3, 0, 1, 0, 0, 22, 0, 28, 19, 0, 0, 0, 1, 1, 1]' : 0.137655}
{'[5, 2, 2, 3, 0, 1, 0, 0, 22, 0, 28, 19, 0, 0, 0, 1, 1, 1]' : 0.137627}
{'[5, 2, 2, 3, 0, 1, 0, 0, 22, 0, 28, 19, 0, 0, 0, 1, 1, 1]' : 0.13769}
{'[5, 2, 2, 3, 0, 1, 0, 0, 22, 0, 28, 19, 0, 0, 0, 1, 1, 1]' : 0.138822}
{'[5, 2, 2, 3, 0, 1, 0, 0, 22, 0, 28, 19, 0, 0, 0, 1, 1, 1]' : 0.138704}
{'[5, 2, 2, 3, 0, 1, 0, 0, 22, 0, 28, 19, 0, 0, 0, 1, 1, 1]' : 0.137626}
{'[5, 2, 2, 3, 0, 1, 0, 0, 22, 0, 28, 19, 0, 0, 0, 1, 1, 1]' : 0.137618}
{'[5, 2, 2, 3, 0, 1, 0, 0, 22, 0, 28, 19, 0, 0, 0, 1, 1, 1]' : 0.13761}
{'[5, 2, 2, 3, 0, 1, 0, 0, 22, 0, 28, 19, 0, 0, 0, 1, 1, 1]' : 0.137694}
{'[5, 2, 2, 3, 0, 1, 0, 0, 22, 0, 28, 19, 0, 0, 0, 1, 1, 1]' : 0.137602}
{'[5, 2, 2, 3, 0, 1, 0, 0, 22, 0, 28, 19, 0, 0, 0, 1, 1, 1]' : 0.137792}
{'[5, 2, 2, 3, 0, 1, 0, 0, 22, 0, 28, 19, 0, 0, 0, 1, 1, 1]' : 0.137648}
{'[5, 2, 2, 3, 0, 1, 0, 0, 22, 0, 28, 19, 0, 0, 0, 1, 1, 1]' : 0.137752}
{'[5, 2, 2, 3, 0, 1, 0, 0, 22, 0, 28, 19, 0, 0, 0, 1, 1, 1]' : 0.137622}
{'[5, 2, 2, 3, 0, 1, 0, 0, 22, 0, 28, 19, 0, 0, 0, 1, 1, 1]' : 0.137854}
{'[5, 2, 2, 3, 0, 1, 0, 0, 22, 0, 28, 19, 0, 0, 0, 1, 1, 1]' : 0.137649}
{'[5, 2, 2, 3, 0, 1, 0, 0, 22, 0, 28, 19, 0, 0, 0, 1, 1, 1]' : 0.137626}
{'[5, 2, 2, 3, 0, 1, 0, 0, 22, 0, 28, 19, 0, 0, 0, 1, 1, 1]' : 0.138691}
{'[5, 2, 2, 3, 0, 1, 0, 0, 22, 0, 28, 19, 0, 0, 0, 1, 1, 1]' : 0.137744}

out:
 ["{'[5, 2, 2, 3, 0, 1, 0, 0, 22, 0, 28, 19, 0, 0, 0, 1, 1, 1]' : 0.137528}", "{'[5, 2, 2, 3, 0, 1, 0, 0, 22, 0, 28, 19, 0, 0, 0, 1, 1, 1]' : 0.137605}", "{'[5, 2, 2, 3, 0, 1, 0, 0, 22, 0, 28, 19, 0, 0, 0, 1, 1, 1]' : 0.137741}", "{'[5, 2, 2, 3, 0, 1, 0, 0, 22, 0, 28, 19, 0, 0, 0, 1, 1, 1]' : 0.137799}", "{'[5, 2, 2, 3, 0, 1, 0, 0, 22, 0, 28, 19, 0, 0, 0, 1, 1, 1]' : 0.137599}", "{'[5, 2, 2, 3, 0, 1, 0, 0, 22, 0, 28, 19, 0, 0, 0, 1, 1, 1]' : 0.137609}", "{'[5, 2, 2, 3, 0, 1, 0, 0, 22, 0, 28, 19, 0, 0, 0, 1, 1, 1]' : 0.137573}", "{'[5, 2, 2, 3, 0, 1, 0, 0, 22, 0, 28, 19, 0, 0, 0, 1, 1, 1]' : 0.137675}", "{'[5, 2, 2, 3, 0, 1, 0, 0, 22, 0, 28, 19, 0, 0, 0, 1, 1, 1]' : 0.137662}", "{'[5, 2, 2, 3, 0, 1, 0, 0, 22, 0, 28, 19, 0, 0, 0, 1, 1, 1]' : 0.137681}", "{'[5, 2, 2, 3, 0, 1, 0, 0, 22, 0, 28, 19, 0, 0, 0, 1, 1, 1]' : 0.137597}", "{'[5, 2, 2, 3, 0, 1, 0, 0, 22, 0, 28, 19, 0, 0, 0, 1, 1, 1]' : 0.137655}", "{'[5, 2, 2, 3, 0, 1, 0, 0, 22, 0, 28, 19, 0, 0, 0, 1, 1, 1]' : 0.137627}", "{'[5, 2, 2, 3, 0, 1, 0, 0, 22, 0, 28, 19, 0, 0, 0, 1, 1, 1]' : 0.13769}", "{'[5, 2, 2, 3, 0, 1, 0, 0, 22, 0, 28, 19, 0, 0, 0, 1, 1, 1]' : 0.138822}", "{'[5, 2, 2, 3, 0, 1, 0, 0, 22, 0, 28, 19, 0, 0, 0, 1, 1, 1]' : 0.138704}", "{'[5, 2, 2, 3, 0, 1, 0, 0, 22, 0, 28, 19, 0, 0, 0, 1, 1, 1]' : 0.137626}", "{'[5, 2, 2, 3, 0, 1, 0, 0, 22, 0, 28, 19, 0, 0, 0, 1, 1, 1]' : 0.137618}", "{'[5, 2, 2, 3, 0, 1, 0, 0, 22, 0, 28, 19, 0, 0, 0, 1, 1, 1]' : 0.13761}", "{'[5, 2, 2, 3, 0, 1, 0, 0, 22, 0, 28, 19, 0, 0, 0, 1, 1, 1]' : 0.137694}", "{'[5, 2, 2, 3, 0, 1, 0, 0, 22, 0, 28, 19, 0, 0, 0, 1, 1, 1]' : 0.137602}", "{'[5, 2, 2, 3, 0, 1, 0, 0, 22, 0, 28, 19, 0, 0, 0, 1, 1, 1]' : 0.137792}", "{'[5, 2, 2, 3, 0, 1, 0, 0, 22, 0, 28, 19, 0, 0, 0, 1, 1, 1]' : 0.137648}", "{'[5, 2, 2, 3, 0, 1, 0, 0, 22, 0, 28, 19, 0, 0, 0, 1, 1, 1]' : 0.137752}", "{'[5, 2, 2, 3, 0, 1, 0, 0, 22, 0, 28, 19, 0, 0, 0, 1, 1, 1]' : 0.137622}", "{'[5, 2, 2, 3, 0, 1, 0, 0, 22, 0, 28, 19, 0, 0, 0, 1, 1, 1]' : 0.137854}", "{'[5, 2, 2, 3, 0, 1, 0, 0, 22, 0, 28, 19, 0, 0, 0, 1, 1, 1]' : 0.137649}", "{'[5, 2, 2, 3, 0, 1, 0, 0, 22, 0, 28, 19, 0, 0, 0, 1, 1, 1]' : 0.137626}", "{'[5, 2, 2, 3, 0, 1, 0, 0, 22, 0, 28, 19, 0, 0, 0, 1, 1, 1]' : 0.138691}", "{'[5, 2, 2, 3, 0, 1, 0, 0, 22, 0, 28, 19, 0, 0, 0, 1, 1, 1]' : 0.137744}"]
returning from 'run': {'[5, 2, 2, 3, 0, 1, 0, 0, 22, 0, 28, 19, 0, 0, 0, 1, 1, 1]': ([0.137528, 0.137605, 0.137741, 0.137799, 0.137599, 0.137609, 0.137573, 0.137675, 0.137662, 0.137681, 0.137597, 0.137655, 0.137627, 0.13769, 0.138822, 0.138704, 0.137626, 0.137618, 0.13761, 0.137694, 0.137602, 0.137792, 0.137648, 0.137752, 0.137622, 0.137854, 0.137649, 0.137626, 0.138691, 0.137744], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.137528, 0.137605, 0.137741, 0.137799, 0.137599, 0.137609, 0.137573, 0.137675, 0.137662, 0.137681, 0.137597, 0.137655, 0.137627, 0.13769, 0.138822, 0.138704, 0.137626, 0.137618, 0.13761, 0.137694, 0.137602, 0.137792, 0.137648, 0.137752, 0.137622, 0.137854, 0.137649, 0.137626, 0.138691, 0.137744], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[5, 2, 2, 3, 0, 1, 0, 0, 22, 0, 28, 19, 0, 0, 0, 1, 1, 1]': ([0.137528, 0.137605, 0.137741, 0.137799, 0.137599, 0.137609, 0.137573, 0.137675, 0.137662, 0.137681, 0.137597, 0.137655, 0.137627, 0.13769, 0.138822, 0.138704, 0.137626, 0.137618, 0.13761, 0.137694, 0.137602, 0.137792, 0.137648, 0.137752, 0.137622, 0.137854, 0.137649, 0.137626, 0.138691, 0.137744], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [0, 4, 1, 4, 6, 2, 1, 1, 27, 0, 7, 16, 1, 1, 0, 0, 1, 1]
Fixed Factors: {}
Testing candidate 31: [0, 4, 1, 4, 6, 2, 1, 1, 27, 0, 7, 16, 1, 1, 0, 0, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	5
        Additions: 		1969
        Multiplications: 	468
        Divisions: 		0
        Logical: 		0
        Reads: 			3021
        Writes: 		332
        Comparisons:		25
        Gotos: 			0
        
digraph CFG {
	7667940 [label="7667940  y_copy[(k-kk)]=y_copy[(k-kk)]+A[it*ny+k]*tmp[it];...",shape=box];
	7594453 [label="7594453  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	7594453 -> _JOIN_7594455;
	ForLoop7668166 [label="ForLoop7668166  for (k=cbv_3; k<=cbv_4; k=k+1) {...",shape=box];
	ForLoop7668166 -> 7667940;
	ForLoop7668166 -> _JOIN_7668166;
	ForLoop7689473 [label="ForLoop7689473  for (k=cbv_7; k<=cbv_8; k=k+1) ...",shape=box];
	ForLoop7689473 -> 7689472;
	ForLoop7689473 -> _JOIN_7689473;
	7709551 [label="7709551  register int cbv_7, cbv_8;...",shape=box];
	ForLoop7594871 [label="ForLoop7594871  for (jt=jj; jt<=cbv_1; jt=jt+8) {...",shape=box];
	ForLoop7594871 -> 7595200;
	ForLoop7594871 -> _JOIN_7594871;
	_JOIN_7594458 [label="_JOIN_7594458None...",shape=box];
	_JOIN_7594458 -> _JOIN_7586404;
	ForLoop7689341 [label="ForLoop7689341  for (k=kk; k<=cbv_6; k=k+17) {...",shape=box];
	ForLoop7689341 -> 7688827;
	ForLoop7689341 -> _JOIN_7689341;
	7708603 [label="7708603  register int cbv_3, cbv_4;...",shape=box];
	7594377 [label="7594377  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 7582885;
	7593996 [label="7593996  for (j=jj; j<=min(ny-1,jj+127); j=j+1) ...",shape=box];
	_JOIN_7594455 [label="_JOIN_7594455None...",shape=box];
	_JOIN_7594455 -> _JOIN_7594456;
	ForLoop7594182 [label="ForLoop7594182  for (kkk=0; kkk<=ny-1; kkk=kkk+128) ...",shape=box];
	ForLoop7594182 -> ForLoop7594181;
	ForLoop7594182 -> _JOIN_7594182;
	ForLoop7594181 [label="ForLoop7594181  for (kk=kkk; kk<=min(ny-1,kkk+112); kk=kk+16) {...",shape=box];
	ForLoop7594181 -> 7594103;
	ForLoop7594181 -> _JOIN_7594181;
	_JOIN_7594456 [label="_JOIN_7594456None...",shape=box];
	_JOIN_7594456 -> _JOIN_7594458;
	7583954 [label="7583954  register int cbv_2, cbv_3;...",shape=box];
	ForLoop7594184 [label="ForLoop7594184  for (it=iii; it<=min(nx-1,iii+511)-7; it=it+8) {...",shape=box];
	ForLoop7594184 -> 7594469;
	ForLoop7594184 -> _JOIN_7594184;
	7662815 [label="7662815  y_copy[(k-kk)]=y_copy[(k-kk)]+A[it*ny+k]*tmp[it];...",shape=box];
	7594469 [label="7594469  tmp[it]=0;...",shape=box];
	7594469 -> ForLoop7594041;
	_JOIN_7594314 [label="_JOIN_7594314None...",shape=box];
	_JOIN_7594314 -> _JOIN_7594315;
	ForLoop7594458 [label="ForLoop7594458  for (i=it; i<=min(nx-1,iii+511); i=i+1) {...",shape=box];
	ForLoop7594458 -> 7594208;
	ForLoop7594458 -> _JOIN_7594458;
	_JOIN_7594315 [label="_JOIN_7594315None...",shape=box];
	_JOIN_7594315 -> ForLoop7594456;
	_JOIN_7667809 [label="_JOIN_7667809None...",shape=box];
	_JOIN_7667809 -> 7708603;
	7689472 [label="7689472  y_copy[(k-kk)]=y_copy[(k-kk)]+A[i*ny+k]*tmp[i];...",shape=box];
	7689472 -> _JOIN_7689473;
	_JOIN_7594871 [label="_JOIN_7594871None...",shape=box];
	_JOIN_7594871 -> _JOIN_7594040;
	7594179 [label="7594179  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	7594179 -> _JOIN_7594181;
	7598753 [label="7598753  tmp[i]=tmp[i]+A[i*ny+jt]*x_copy[(jt-jj)];...",shape=box];
	_JOIN_7586404 [label="_JOIN_7586404None...",shape=box];
	_JOIN_7594184 [label="_JOIN_7594184None...",shape=box];
	_JOIN_7594184 -> ForLoop7594458;
	ForLoop7594455 [label="ForLoop7594455  for (kk=kkk; kk<=min(ny-1,kkk+112); kk=kk+16) {...",shape=box];
	ForLoop7594455 -> 7594377;
	ForLoop7594455 -> _JOIN_7594455;
	_JOIN_7594182 [label="_JOIN_7594182None...",shape=box];
	_JOIN_7594182 -> _JOIN_7594184;
	_JOIN_7594181 [label="_JOIN_7594181None...",expected=9369846271501.798828
actual=9369846271501.798828
shape=box];
	_JOIN_7594181 -> _JOIN_7594182;
	7591639 [label="7591639  double x_copy[128];...",shape=box];
	ForLoop7667809 [label="ForLoop7667809  for (k=kk; k<=cbv_2; k=k+17) {...",shape=box];
	ForLoop7667809 -> 7662815;
	ForLoop7667809 -> _JOIN_7667809;
	ForLoop7586404 [label="ForLoop7586404  for (iii=0; iii<=nx-1; iii=iii+512) {...",shape=box];
	ForLoop7586404 -> ForLoop7594184;
	ForLoop7586404 -> _JOIN_7586404;
	7688827 [label="7688827  y_copy[(k-kk)]=y_copy[(k-kk)]+A[i*ny+k]*tmp[i];...",shape=box];
	7582885 [label="7582885  int i;...",shape=box];
	ForLoop7594040 [label="ForLoop7594040  for (jj=jjj; jj<=min(ny-1,jjj+1920); jj=jj+128) {...",shape=box];
	ForLoop7594040 -> 7593996;
	ForLoop7594040 -> _JOIN_7594040;
	ForLoop7594041 [label="ForLoop7594041  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) ...",shape=box];
	ForLoop7594041 -> ForLoop7594040;
	ForLoop7594041 -> _JOIN_7594041;
	ForLoop7594456 [label="ForLoop7594456  for (kkk=0; kkk<=ny-1; kkk=kkk+128) ...",shape=box];
	ForLoop7594456 -> ForLoop7594455;
	ForLoop7594456 -> _JOIN_7594456;
	ForLoop7583661 [label="ForLoop7583661  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop7583661 -> 7583660;
	ForLoop7583661 -> _JOIN_7583661;
	7583660 [label="7583660  y[i]=0.0;...",shape=box];
	7583660 -> _JOIN_7583661;
	7583347 [label="7583347  y[i]=0.0;...",shape=box];
	_JOIN_7598683 [label="_JOIN_7598683None...",shape=box];
	_JOIN_7598683 -> _JOIN_7594314;
	7594208 [label="7594208  tmp[i]=0;...",shape=box];
	7594208 -> ForLoop7594315;
	ForLoop7583592 [label="ForLoop7583592  for (i=0; i<=cbv_1; i=i+28) {...",shape=box];
	ForLoop7583592 -> 7583347;
	ForLoop7583592 -> _JOIN_7583592;
	ForLoop7598683 [label="ForLoop7598683  for (jt=jj; jt<=cbv_5; jt=jt+8) {...",shape=box];
	ForLoop7598683 -> 7598753;
	ForLoop7598683 -> _JOIN_7598683;
	_JOIN_7668166 [label="_JOIN_7668166None...",shape=box];
	_JOIN_7668166 -> 7594179;
	_JOIN_7689473 [label="_JOIN_7689473None...",shape=box];
	_JOIN_7689473 -> 7594453;
	_JOIN_7689341 [label="_JOIN_7689341None...",shape=box];
	_JOIN_7689341 -> 7709551;
	ForLoop7594314 [label="ForLoop7594314  for (jj=jjj; jj<=min(ny-1,jjj+1920); jj=jj+128) {...",shape=box];
	ForLoop7594314 -> 7594270;
	ForLoop7594314 -> _JOIN_7594314;
	ForLoop7594315 [label="ForLoop7594315  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) ...",shape=box];
	ForLoop7594315 -> ForLoop7594314;
	ForLoop7594315 -> _JOIN_7594315;
	_JOIN_7594040 [label="_JOIN_7594040None...",shape=box];
	_JOIN_7594040 -> _JOIN_7594041;
	_JOIN_7594041 [label="_JOIN_7594041None...",shape=box];
	_JOIN_7594041 -> ForLoop7594182;
	_JOIN_7583592 [label="_JOIN_7583592None...",shape=box];
	_JOIN_7583592 -> 7583954;
	7594270 [label="7594270  for (j=jj; j<=min(ny-1,jj+127); j=j+1) ...",shape=box];
	7594103 [label="7594103  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	_JOIN_7583661 [label="_JOIN_7583661None...",shape=box];
	_JOIN_7583661 -> 7591639;
	7595200 [label="7595200  tmp[it]=tmp[it]+A[it*ny+jt]*x_copy[(jt-jj)];...",shape=box];

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest31.exe __orio_perftest31.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest31.exe  
{'[0, 4, 1, 4, 6, 2, 1, 1, 27, 0, 7, 16, 1, 1, 0, 0, 1, 1]' : 0.0898221}
{'[0, 4, 1, 4, 6, 2, 1, 1, 27, 0, 7, 16, 1, 1, 0, 0, 1, 1]' : 0.0894639}
{'[0, 4, 1, 4, 6, 2, 1, 1, 27, 0, 7, 16, 1, 1, 0, 0, 1, 1]' : 0.0894821}
{'[0, 4, 1, 4, 6, 2, 1, 1, 27, 0, 7, 16, 1, 1, 0, 0, 1, 1]' : 0.0896089}
{'[0, 4, 1, 4, 6, 2, 1, 1, 27, 0, 7, 16, 1, 1, 0, 0, 1, 1]' : 0.089468}
{'[0, 4, 1, 4, 6, 2, 1, 1, 27, 0, 7, 16, 1, 1, 0, 0, 1, 1]' : 0.089545}
{'[0, 4, 1, 4, 6, 2, 1, 1, 27, 0, 7, 16, 1, 1, 0, 0, 1, 1]' : 0.0895019}
{'[0, 4, 1, 4, 6, 2, 1, 1, 27, 0, 7, 16, 1, 1, 0, 0, 1, 1]' : 0.089402}
{'[0, 4, 1, 4, 6, 2, 1, 1, 27, 0, 7, 16, 1, 1, 0, 0, 1, 1]' : 0.089525}
{'[0, 4, 1, 4, 6, 2, 1, 1, 27, 0, 7, 16, 1, 1, 0, 0, 1, 1]' : 0.0895519}
{'[0, 4, 1, 4, 6, 2, 1, 1, 27, 0, 7, 16, 1, 1, 0, 0, 1, 1]' : 0.08953}
{'[0, 4, 1, 4, 6, 2, 1, 1, 27, 0, 7, 16, 1, 1, 0, 0, 1, 1]' : 0.0895169}
{'[0, 4, 1, 4, 6, 2, 1, 1, 27, 0, 7, 16, 1, 1, 0, 0, 1, 1]' : 0.0895231}
{'[0, 4, 1, 4, 6, 2, 1, 1, 27, 0, 7, 16, 1, 1, 0, 0, 1, 1]' : 0.0894949}
{'[0, 4, 1, 4, 6, 2, 1, 1, 27, 0, 7, 16, 1, 1, 0, 0, 1, 1]' : 0.090565}
{'[0, 4, 1, 4, 6, 2, 1, 1, 27, 0, 7, 16, 1, 1, 0, 0, 1, 1]' : 0.0895751}
{'[0, 4, 1, 4, 6, 2, 1, 1, 27, 0, 7, 16, 1, 1, 0, 0, 1, 1]' : 0.0898111}
{'[0, 4, 1, 4, 6, 2, 1, 1, 27, 0, 7, 16, 1, 1, 0, 0, 1, 1]' : 0.0895119}
{'[0, 4, 1, 4, 6, 2, 1, 1, 27, 0, 7, 16, 1, 1, 0, 0, 1, 1]' : 0.0895209}
{'[0, 4, 1, 4, 6, 2, 1, 1, 27, 0, 7, 16, 1, 1, 0, 0, 1, 1]' : 0.0894668}
{'[0, 4, 1, 4, 6, 2, 1, 1, 27, 0, 7, 16, 1, 1, 0, 0, 1, 1]' : 0.0895119}
{'[0, 4, 1, 4, 6, 2, 1, 1, 27, 0, 7, 16, 1, 1, 0, 0, 1, 1]' : 0.089483}
{'[0, 4, 1, 4, 6, 2, 1, 1, 27, 0, 7, 16, 1, 1, 0, 0, 1, 1]' : 0.089503}
{'[0, 4, 1, 4, 6, 2, 1, 1, 27, 0, 7, 16, 1, 1, 0, 0, 1, 1]' : 0.0895309}
{'[0, 4, 1, 4, 6, 2, 1, 1, 27, 0, 7, 16, 1, 1, 0, 0, 1, 1]' : 0.0895231}
{'[0, 4, 1, 4, 6, 2, 1, 1, 27, 0, 7, 16, 1, 1, 0, 0, 1, 1]' : 0.0895951}
{'[0, 4, 1, 4, 6, 2, 1, 1, 27, 0, 7, 16, 1, 1, 0, 0, 1, 1]' : 0.089499}
{'[0, 4, 1, 4, 6, 2, 1, 1, 27, 0, 7, 16, 1, 1, 0, 0, 1, 1]' : 0.0894518}
{'[0, 4, 1, 4, 6, 2, 1, 1, 27, 0, 7, 16, 1, 1, 0, 0, 1, 1]' : 0.0895319}
{'[0, 4, 1, 4, 6, 2, 1, 1, 27, 0, 7, 16, 1, 1, 0, 0, 1, 1]' : 0.0896211}

out:
 ["{'[0, 4, 1, 4, 6, 2, 1, 1, 27, 0, 7, 16, 1, 1, 0, 0, 1, 1]' : 0.0898221}", "{'[0, 4, 1, 4, 6, 2, 1, 1, 27, 0, 7, 16, 1, 1, 0, 0, 1, 1]' : 0.0894639}", "{'[0, 4, 1, 4, 6, 2, 1, 1, 27, 0, 7, 16, 1, 1, 0, 0, 1, 1]' : 0.0894821}", "{'[0, 4, 1, 4, 6, 2, 1, 1, 27, 0, 7, 16, 1, 1, 0, 0, 1, 1]' : 0.0896089}", "{'[0, 4, 1, 4, 6, 2, 1, 1, 27, 0, 7, 16, 1, 1, 0, 0, 1, 1]' : 0.089468}", "{'[0, 4, 1, 4, 6, 2, 1, 1, 27, 0, 7, 16, 1, 1, 0, 0, 1, 1]' : 0.089545}", "{'[0, 4, 1, 4, 6, 2, 1, 1, 27, 0, 7, 16, 1, 1, 0, 0, 1, 1]' : 0.0895019}", "{'[0, 4, 1, 4, 6, 2, 1, 1, 27, 0, 7, 16, 1, 1, 0, 0, 1, 1]' : 0.089402}", "{'[0, 4, 1, 4, 6, 2, 1, 1, 27, 0, 7, 16, 1, 1, 0, 0, 1, 1]' : 0.089525}", "{'[0, 4, 1, 4, 6, 2, 1, 1, 27, 0, 7, 16, 1, 1, 0, 0, 1, 1]' : 0.0895519}", "{'[0, 4, 1, 4, 6, 2, 1, 1, 27, 0, 7, 16, 1, 1, 0, 0, 1, 1]' : 0.08953}", "{'[0, 4, 1, 4, 6, 2, 1, 1, 27, 0, 7, 16, 1, 1, 0, 0, 1, 1]' : 0.0895169}", "{'[0, 4, 1, 4, 6, 2, 1, 1, 27, 0, 7, 16, 1, 1, 0, 0, 1, 1]' : 0.0895231}", "{'[0, 4, 1, 4, 6, 2, 1, 1, 27, 0, 7, 16, 1, 1, 0, 0, 1, 1]' : 0.0894949}", "{'[0, 4, 1, 4, 6, 2, 1, 1, 27, 0, 7, 16, 1, 1, 0, 0, 1, 1]' : 0.090565}", "{'[0, 4, 1, 4, 6, 2, 1, 1, 27, 0, 7, 16, 1, 1, 0, 0, 1, 1]' : 0.0895751}", "{'[0, 4, 1, 4, 6, 2, 1, 1, 27, 0, 7, 16, 1, 1, 0, 0, 1, 1]' : 0.0898111}", "{'[0, 4, 1, 4, 6, 2, 1, 1, 27, 0, 7, 16, 1, 1, 0, 0, 1, 1]' : 0.0895119}", "{'[0, 4, 1, 4, 6, 2, 1, 1, 27, 0, 7, 16, 1, 1, 0, 0, 1, 1]' : 0.0895209}", "{'[0, 4, 1, 4, 6, 2, 1, 1, 27, 0, 7, 16, 1, 1, 0, 0, 1, 1]' : 0.0894668}", "{'[0, 4, 1, 4, 6, 2, 1, 1, 27, 0, 7, 16, 1, 1, 0, 0, 1, 1]' : 0.0895119}", "{'[0, 4, 1, 4, 6, 2, 1, 1, 27, 0, 7, 16, 1, 1, 0, 0, 1, 1]' : 0.089483}", "{'[0, 4, 1, 4, 6, 2, 1, 1, 27, 0, 7, 16, 1, 1, 0, 0, 1, 1]' : 0.089503}", "{'[0, 4, 1, 4, 6, 2, 1, 1, 27, 0, 7, 16, 1, 1, 0, 0, 1, 1]' : 0.0895309}", "{'[0, 4, 1, 4, 6, 2, 1, 1, 27, 0, 7, 16, 1, 1, 0, 0, 1, 1]' : 0.0895231}", "{'[0, 4, 1, 4, 6, 2, 1, 1, 27, 0, 7, 16, 1, 1, 0, 0, 1, 1]' : 0.0895951}", "{'[0, 4, 1, 4, 6, 2, 1, 1, 27, 0, 7, 16, 1, 1, 0, 0, 1, 1]' : 0.089499}", "{'[0, 4, 1, 4, 6, 2, 1, 1, 27, 0, 7, 16, 1, 1, 0, 0, 1, 1]' : 0.0894518}", "{'[0, 4, 1, 4, 6, 2, 1, 1, 27, 0, 7, 16, 1, 1, 0, 0, 1, 1]' : 0.0895319}", "{'[0, 4, 1, 4, 6, 2, 1, 1, 27, 0, 7, 16, 1, 1, 0, 0, 1, 1]' : 0.0896211}"]
returning from 'run': {'[0, 4, 1, 4, 6, 2, 1, 1, 27, 0, 7, 16, 1, 1, 0, 0, 1, 1]': ([0.0898221, 0.0894639, 0.0894821, 0.0896089, 0.089468, 0.089545, 0.0895019, 0.089402, 0.089525, 0.0895519, 0.08953, 0.0895169, 0.0895231, 0.0894949, 0.090565, 0.0895751, 0.0898111, 0.0895119, 0.0895209, 0.0894668, 0.0895119, 0.089483, 0.089503, 0.0895309, 0.0895231, 0.0895951, 0.089499, 0.0894518, 0.0895319, 0.0896211], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.0898221, 0.0894639, 0.0894821, 0.0896089, 0.089468, 0.089545, 0.0895019, 0.089402, 0.089525, 0.0895519, 0.08953, 0.0895169, 0.0895231, 0.0894949, 0.090565, 0.0895751, 0.0898111, 0.0895119, 0.0895209, 0.0894668, 0.0895119, 0.089483, 0.089503, 0.0895309, 0.0895231, 0.0895951, 0.089499, 0.0894518, 0.0895319, 0.0896211], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[0, 4, 1, 4, 6, 2, 1, 1, 27, 0, 7, 16, 1, 1, 0, 0, 1, 1]': ([0.0898221, 0.0894639, 0.0894821, 0.0896089, 0.089468, 0.089545, 0.0895019, 0.089402, 0.089525, 0.0895519, 0.08953, 0.0895169, 0.0895231, 0.0894949, 0.090565, 0.0895751, 0.0898111, 0.0895119, 0.0895209, 0.0894668, 0.0895119, 0.089483, 0.089503, 0.0895309, 0.0895231, 0.0895951, 0.089499, 0.0894518, 0.0895319, 0.0896211], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [3, 4, 0, 2, 3, 6, 1, 0, 1, 0, 14, 24, 0, 0, 0, 0, 0, 0]
Fixed Factors: {}
Testing candidate 32: [3, 4, 0, 2, 3, 6, 1, 0, 1, 0, 14, 24, 0, 0, 0, 0, 0, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	6
        Additions: 		259
        Multiplications: 	84
        Divisions: 		0
        Logical: 		0
        Reads: 			540
        Writes: 		73
        Comparisons:		13
        Gotos: 			0
        
digraph CFG {
	ForLoop7726704 [label="ForLoop7726704  for (k=(min(ny-1,kkk+2047))-(((min(ny-1,kkk+2047))-(kkk)+1)%25)+1; k<=min(ny-1,kkk+2047); k=k+1) ...",shape=box];
	ForLoop7726704 -> 7726703;
	ForLoop7726704 -> _JOIN_7726704;
	ForLoop7709914 [label="ForLoop7709914  for (i=0; i<=ny-2; i=i+2) {...",shape=box];
	ForLoop7709914 -> 7709903;
	ForLoop7709914 -> _JOIN_7709914;
	7709982 [label="7709982  y[i]=0.0;...",shape=box];
	7709982 -> _JOIN_7709983;
	ForLoop7723422 [label="ForLoop7723422  for (j=jj; j<=min(ny-1,jj+127)-14; j=j+15) {...",shape=box];
	ForLoop7723422 -> 7723042;
	ForLoop7723422 -> _JOIN_7723422;
	7723042 [label="7723042  tmp[i]=tmp[i]+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop7715111 [label="ForLoop7715111  for (kkk=0; kkk<=ny-1; kkk=kkk+2048) {...",shape=box];
	ForLoop7715111 -> 7724707;
	ForLoop7715111 -> _JOIN_7715111;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 7709831;
	7726703 [label="7726703  y[k]=y[k]+A[i*ny+k]*tmp[i];...",shape=box];
	7726703 -> _JOIN_7726704;
	7725904 [label="7725904  y[k]=y[k]+A[i*ny+k]*tmp[i];...",shape=box];
	_JOIN_7715111 [label="_JOIN_7715111None...",shape=box];
	_JOIN_7715111 -> _JOIN_7713013;
	7717677 [label="7717677  for (j=jj; j<=min(ny-1,jj+127); j=j+1) ...",shape=box];
	ForLoop7713013 [label="ForLoop7713013  for (i=ii; i<=min(nx-1,ii+63); i=i+1) {...",shape=box];
	ForLoop7713013 -> 7712924;
	ForLoop7713013 -> _JOIN_7713013;
	_JOIN_7709914 [label="_JOIN_7709914None...",shape=box];
	_JOIN_7709914 -> ForLoop7709983;
	ForLoop7713014 [label="ForLoop7713014  for (ii=iii; ii<=min(nx-1,iii+64); ii=ii+64) ...",shape=box];
	ForLoop7713014 -> ForLoop7713013;
	ForLoop7713014 -> _JOIN_7713014;
	ForLoop7713015 [label="ForLoop7713015  for (iii=0; iii<=nx-1; iii=iii+128) ...",shape=box];
	ForLoop7713015 -> ForLoop7713014;
	ForLoop7713015 -> _JOIN_7713015;
	7724707 [label="7724707  int k;...",shape=box];
	7724707 -> ForLoop7726578;
	7709831 [label="7709831  int i;...",shape=box];
	7709831 -> ForLoop7709914;
	_JOIN_7713014 [label="_JOIN_7713014None...",shape=box];
	_JOIN_7713014 -> _JOIN_7713015;
	_JOIN_7713015 [label="_JOIN_7713015None...",shape=box];
	ForLoop7726578 [label="ForLoop7726578  for (k=kkk; k<=min(ny-1,kkk+2047)-24; k=k+25) {...",shape=box];
	ForLoop7726578 -> 7725904;
	ForLoop7726578 -> _JOIN_7726578;
	_JOIN_7713013 [label="_JOIN_7713013None...",shape=box];
	_JOIN_7713013 -> _JOIN_7713014;
	ForLoop7723551 [label="ForLoop7723551  for (j=(min(ny-1,jj+127))-(((min(ny-1,jj+127))-(jj)+1)%15)+1; j<=min(ny-1,jj+127); j=j+1) ...",shape=box];
	ForLoop7723551 -> 7723550;
	ForLooexpected=9369846271501.798828
actual=9369846271501.798828
p7723551 -> _JOIN_7723551;
	ForLoop7709983 [label="ForLoop7709983  for (i=ny-((ny-(0))%2); i<=ny-1; i=i+1) ...",shape=box];
	ForLoop7709983 -> 7709982;
	ForLoop7709983 -> _JOIN_7709983;
	_JOIN_7723551 [label="_JOIN_7723551None...",shape=box];
	_JOIN_7723551 -> _JOIN_7713755;
	_JOIN_7723422 [label="_JOIN_7723422None...",shape=box];
	_JOIN_7723422 -> ForLoop7723551;
	7709903 [label="7709903  y[i]=0.0;...",shape=box];
	7723550 [label="7723550  tmp[i]=tmp[i]+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	7723550 -> _JOIN_7723551;
	7712924 [label="7712924  tmp[i]=0;...",shape=box];
	7712924 -> ForLoop7713756;
	7717625 [label="7717625  double x_copy[128];...",shape=box];
	_JOIN_7726704 [label="_JOIN_7726704None...",shape=box];
	_JOIN_7726704 -> _JOIN_7715111;
	_JOIN_7713755 [label="_JOIN_7713755None...",shape=box];
	_JOIN_7713755 -> _JOIN_7713756;
	_JOIN_7709983 [label="_JOIN_7709983None...",shape=box];
	_JOIN_7709983 -> 7717625;
	_JOIN_7713756 [label="_JOIN_7713756None...",shape=box];
	_JOIN_7713756 -> ForLoop7715111;
	ForLoop7713755 [label="ForLoop7713755  for (jj=jjj; jj<=min(ny-1,jjj+128); jj=jj+128) {...",shape=box];
	ForLoop7713755 -> 7717677;
	ForLoop7713755 -> _JOIN_7713755;
	_JOIN_7726578 [label="_JOIN_7726578None...",shape=box];
	_JOIN_7726578 -> ForLoop7726704;
	ForLoop7713756 [label="ForLoop7713756  for (jjj=0; jjj<=ny-1; jjj=jjj+256) ...",shape=box];
	ForLoop7713756 -> ForLoop7713755;
	ForLoop7713756 -> _JOIN_7713756;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest32.exe __orio_perftest32.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest32.exe  
{'[3, 4, 0, 2, 3, 6, 1, 0, 1, 0, 14, 24, 0, 0, 0, 0, 0, 0]' : 0.235426}
{'[3, 4, 0, 2, 3, 6, 1, 0, 1, 0, 14, 24, 0, 0, 0, 0, 0, 0]' : 0.177636}
{'[3, 4, 0, 2, 3, 6, 1, 0, 1, 0, 14, 24, 0, 0, 0, 0, 0, 0]' : 0.169523}
{'[3, 4, 0, 2, 3, 6, 1, 0, 1, 0, 14, 24, 0, 0, 0, 0, 0, 0]' : 0.169501}
{'[3, 4, 0, 2, 3, 6, 1, 0, 1, 0, 14, 24, 0, 0, 0, 0, 0, 0]' : 0.169575}
{'[3, 4, 0, 2, 3, 6, 1, 0, 1, 0, 14, 24, 0, 0, 0, 0, 0, 0]' : 0.1698}
{'[3, 4, 0, 2, 3, 6, 1, 0, 1, 0, 14, 24, 0, 0, 0, 0, 0, 0]' : 0.169527}
{'[3, 4, 0, 2, 3, 6, 1, 0, 1, 0, 14, 24, 0, 0, 0, 0, 0, 0]' : 0.16975}
{'[3, 4, 0, 2, 3, 6, 1, 0, 1, 0, 14, 24, 0, 0, 0, 0, 0, 0]' : 0.1695}
{'[3, 4, 0, 2, 3, 6, 1, 0, 1, 0, 14, 24, 0, 0, 0, 0, 0, 0]' : 0.169702}
{'[3, 4, 0, 2, 3, 6, 1, 0, 1, 0, 14, 24, 0, 0, 0, 0, 0, 0]' : 0.16953}
{'[3, 4, 0, 2, 3, 6, 1, 0, 1, 0, 14, 24, 0, 0, 0, 0, 0, 0]' : 0.169551}
{'[3, 4, 0, 2, 3, 6, 1, 0, 1, 0, 14, 24, 0, 0, 0, 0, 0, 0]' : 0.169561}
{'[3, 4, 0, 2, 3, 6, 1, 0, 1, 0, 14, 24, 0, 0, 0, 0, 0, 0]' : 0.169589}
{'[3, 4, 0, 2, 3, 6, 1, 0, 1, 0, 14, 24, 0, 0, 0, 0, 0, 0]' : 0.169547}
{'[3, 4, 0, 2, 3, 6, 1, 0, 1, 0, 14, 24, 0, 0, 0, 0, 0, 0]' : 0.169575}
{'[3, 4, 0, 2, 3, 6, 1, 0, 1, 0, 14, 24, 0, 0, 0, 0, 0, 0]' : 0.169478}
{'[3, 4, 0, 2, 3, 6, 1, 0, 1, 0, 14, 24, 0, 0, 0, 0, 0, 0]' : 0.169699}
{'[3, 4, 0, 2, 3, 6, 1, 0, 1, 0, 14, 24, 0, 0, 0, 0, 0, 0]' : 0.169658}
{'[3, 4, 0, 2, 3, 6, 1, 0, 1, 0, 14, 24, 0, 0, 0, 0, 0, 0]' : 0.169507}
{'[3, 4, 0, 2, 3, 6, 1, 0, 1, 0, 14, 24, 0, 0, 0, 0, 0, 0]' : 0.169508}
{'[3, 4, 0, 2, 3, 6, 1, 0, 1, 0, 14, 24, 0, 0, 0, 0, 0, 0]' : 0.169503}
{'[3, 4, 0, 2, 3, 6, 1, 0, 1, 0, 14, 24, 0, 0, 0, 0, 0, 0]' : 0.169524}
{'[3, 4, 0, 2, 3, 6, 1, 0, 1, 0, 14, 24, 0, 0, 0, 0, 0, 0]' : 0.169639}
{'[3, 4, 0, 2, 3, 6, 1, 0, 1, 0, 14, 24, 0, 0, 0, 0, 0, 0]' : 0.169681}
{'[3, 4, 0, 2, 3, 6, 1, 0, 1, 0, 14, 24, 0, 0, 0, 0, 0, 0]' : 0.169691}
{'[3, 4, 0, 2, 3, 6, 1, 0, 1, 0, 14, 24, 0, 0, 0, 0, 0, 0]' : 0.169507}
{'[3, 4, 0, 2, 3, 6, 1, 0, 1, 0, 14, 24, 0, 0, 0, 0, 0, 0]' : 0.169687}
{'[3, 4, 0, 2, 3, 6, 1, 0, 1, 0, 14, 24, 0, 0, 0, 0, 0, 0]' : 0.16952}
{'[3, 4, 0, 2, 3, 6, 1, 0, 1, 0, 14, 24, 0, 0, 0, 0, 0, 0]' : 0.169752}

out:
 ["{'[3, 4, 0, 2, 3, 6, 1, 0, 1, 0, 14, 24, 0, 0, 0, 0, 0, 0]' : 0.235426}", "{'[3, 4, 0, 2, 3, 6, 1, 0, 1, 0, 14, 24, 0, 0, 0, 0, 0, 0]' : 0.177636}", "{'[3, 4, 0, 2, 3, 6, 1, 0, 1, 0, 14, 24, 0, 0, 0, 0, 0, 0]' : 0.169523}", "{'[3, 4, 0, 2, 3, 6, 1, 0, 1, 0, 14, 24, 0, 0, 0, 0, 0, 0]' : 0.169501}", "{'[3, 4, 0, 2, 3, 6, WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = iii
1, 0, 1, 0, 14, 24, 0, 0, 0, 0, 0, 0]' : 0.169575}", "{'[3, 4, 0, 2, 3, 6, 1, 0, 1, 0, 14, 24, 0, 0, 0, 0, 0, 0]' : 0.1698}", "{'[3, 4, 0, 2, 3, 6, 1, 0, 1, 0, 14, 24, 0, 0, 0, 0, 0, 0]' : 0.169527}", "{'[3, 4, 0, 2, 3, 6, 1, 0, 1, 0, 14, 24, 0, 0, 0, 0, 0, 0]' : 0.16975}", "{'[3, 4, 0, 2, 3, 6, 1, 0, 1, 0, 14, 24, 0, 0, 0, 0, 0, 0]' : 0.1695}", "{'[3, 4, 0, 2, 3, 6, 1, 0, 1, 0, 14, 24, 0, 0, 0, 0, 0, 0]' : 0.169702}", "{'[3, 4, 0, 2, 3, 6, 1, 0, 1, 0, 14, 24, 0, 0, 0, 0, 0, 0]' : 0.16953}", "{'[3, 4, 0, 2, 3, 6, 1, 0, 1, 0, 14, 24, 0, 0, 0, 0, 0, 0]' : 0.169551}", "{'[3, 4, 0, 2, 3, 6, 1, 0, 1, 0, 14, 24, 0, 0, 0, 0, 0, 0]' : 0.169561}", "{'[3, 4, 0, 2, 3, 6, 1, 0, 1, 0, 14, 24, 0, 0, 0, 0, 0, 0]' : 0.169589}", "{'[3, 4, 0, 2, 3, 6, 1, 0, 1, 0, 14, 24, 0, 0, 0, 0, 0, 0]' : 0.169547}", "{'[3, 4, 0, 2, 3, 6, 1, 0, 1, 0, 14, 24, 0, 0, 0, 0, 0, 0]' : 0.169575}", "{'[3, 4, 0, 2, 3, 6, 1, 0, 1, 0, 14, 24, 0, 0, 0, 0, 0, 0]' : 0.169478}", "{'[3, 4, 0, 2, 3, 6, 1, 0, 1, 0, 14, 24, 0, 0, 0, 0, 0, 0]' : 0.169699}", "{'[3, 4, 0, 2, 3, 6, 1, 0, 1, 0, 14, 24, 0, 0, 0, 0, 0, 0]' : 0.169658}", "{'[3, 4, 0, 2, 3, 6, 1, 0, 1, 0, 14, 24, 0, 0, 0, 0, 0, 0]' : 0.169507}", "{'[3, 4, 0, 2, 3, 6, 1, 0, 1, 0, 14, 24, 0, 0, 0, 0, 0, 0]' : 0.169508}", "{'[3, 4, 0, 2, 3, 6, 1, 0, 1, 0, 14, 24, 0, 0, 0, 0, 0, 0]' : 0.169503}", "{'[3, 4, 0, 2, 3, 6, 1, 0, 1, 0, 14, 24, 0, 0, 0, 0, 0, 0]' : 0.169524}", "{'[3, 4, 0, 2, 3, 6, 1, 0, 1, 0, 14, 24, 0, 0, 0, 0, 0, 0]' : 0.169639}", "{'[3, 4, 0, 2, 3, 6, 1, 0, 1, 0, 14, 24, 0, 0, 0, 0, 0, 0]' : 0.169681}", "{'[3, 4, 0, 2, 3, 6, 1, 0, 1, 0, 14, 24, 0, 0, 0, 0, 0, 0]' : 0.169691}", "{'[3, 4, 0, 2, 3, 6, 1, 0, 1, 0, 14, 24, 0, 0, 0, 0, 0, 0]' : 0.169507}", "{'[3, 4, 0, 2, 3, 6, 1, 0, 1, 0, 14, 24, 0, 0, 0, 0, 0, 0]' : 0.169687}", "{'[3, 4, 0, 2, 3, 6, 1, 0, 1, 0, 14, 24, 0, 0, 0, 0, 0, 0]' : 0.16952}", "{'[3, 4, 0, 2, 3, 6, 1, 0, 1, 0, 14, 24, 0, 0, 0, 0, 0, 0]' : 0.169752}"]
returning from 'run': {'[3, 4, 0, 2, 3, 6, 1, 0, 1, 0, 14, 24, 0, 0, 0, 0, 0, 0]': ([0.235426, 0.177636, 0.169523, 0.169501, 0.169575, 0.1698, 0.169527, 0.16975, 0.1695, 0.169702, 0.16953, 0.169551, 0.169561, 0.169589, 0.169547, 0.169575, 0.169478, 0.169699, 0.169658, 0.169507, 0.169508, 0.169503, 0.169524, 0.169639, 0.169681, 0.169691, 0.169507, 0.169687, 0.16952, 0.169752], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.235426, 0.177636, 0.169523, 0.169501, 0.169575, 0.1698, 0.169527, 0.16975, 0.1695, 0.169702, 0.16953, 0.169551, 0.169561, 0.169589, 0.169547, 0.169575, 0.169478, 0.169699, 0.169658, 0.169507, 0.169508, 0.169503, 0.169524, 0.169639, 0.169681, 0.169691, 0.169507, 0.169687, 0.16952, 0.169752], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[3, 4, 0, 2, 3, 6, 1, 0, 1, 0, 14, 24, 0, 0, 0, 0, 0, 0]': ([0.235426, 0.177636, 0.169523, 0.169501, 0.169575, 0.1698, 0.169527, 0.16975, 0.1695, 0.169702, 0.16953, 0.169551, 0.169561, 0.169589, 0.169547, 0.169575, 0.169478, 0.169699, 0.169658, 0.169507, 0.169508, 0.169503, 0.169524, 0.169639, 0.169681, 0.169691, 0.169507, 0.169687, 0.16952, 0.169752], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [4, 0, 2, 2, 5, 3, 0, 0, 4, 0, 25, 18, 0, 2, 0, 0, 1, 0]
Fixed Factors: {}
Testing candidate 33: [4, 0, 2, 2, 5, 3, 0, 0, 4, 0, 25, 18, 0, 2, 0, 0, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		383
        Multiplications: 	158
        Divisions: 		0
        Logical: 		0
        Reads: 			894
        Writes: 		113
        Comparisons:		12
        Gotos: 			0
        
digraph CFG {
	7732188 [label="7732188  register int cbv_2, cbv_3;...",shape=box];
	7754451 [label="7754451  tmp[i]=tmp[i]+A[i*ny+j]*x[j];...",shape=box];
	7754451 -> _JOIN_7754452;
	7757666 [label="7757666  y[k]=y[k]+A[i*ny+k]*tmp[i];...",shape=box];
	7757666 -> _JOIN_7757667;
	7731878 [label="7731878  int i;...",shape=box];
	ForLoop7754326 [label="ForLoop7754326  for (j=jt; j<=min(ny-1,jjj+1023)-25; j=j+26) {...",shape=box];
	ForLoop7754326 -> 7753699;
	ForLoop7754326 -> _JOIN_7754326;
	7732101 [label="7732101  y[i]=0.0;...",shape=box];
	7732101 -> _JOIN_7732102;
	ForLoop7732102 [label="ForLoop7732102  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop7732102 -> 7732101;
	ForLoop7732102 -> _JOIN_7732102;
	ForLoop7757667 [label="ForLoop7757667  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kk)+1)%19)+1; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	ForLoop7757667 -> 7757666;
	ForLoop7757667 -> _JOIN_7757667;
	7757035 [label="7757035  y[k]=y[k]+A[i*ny+k]*tmp[i];...",shape=box];
	ForLoop7738814 [label="ForLoop7738814  for (jt=jjj; jt<=min(ny-1,jjj+1023)-31; jt=jt+32) {...",shape=box];
	ForLoop7738814 -> 7738878;
	ForLoop7738814 -> _JOIN_7738814;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 7731878;
	7738878 [label="7738878  tmp[i]=tmp[i]+A[i*ny+jt]*x[jt];...",shape=box];
	ForLoop7734895 [label="ForLoop7734895  for (ii=0; ii<=nx-1; ii=ii+128) ...",shape=box];
	ForLoop7734895 -> ForLoop7734894;
	ForLoop7734895 -> _JOIN_7734895;
	ForLoop7734894 [label="ForLoop7734894  for (i=ii; i<=min(nx-1,ii+127); i=i+1) {...",shape=box];
	ForLoop7734894 -> 7734805;
	ForLoop7734894 -> _JOIN_7734894;
	_JOIN_7754326 [label="_JOIN_7754326None...",shape=box];
	_JOIN_7754326 -> ForLoop7754452;
	7753699 [label="7753699  tmp[i]=tmp[i]+A[i*ny+j]*x[j];...",shape=box];
	_JOIN_7732102 [label="_JOIN_7732102None...",shape=box];
	_JOIN_7732102 -> 7737831;
	_JOIN_7757667 [label="_JOIN_7757667None...",shape=box];
	_JOIN_7757667 -> _JOIN_7736485;
	_JOIN_7738814 [label="_JOIN_7738814None...",shape=box];
	_JOIN_7738814 -> 7752582;
	7756108 [label="7756108  int k;...",shape=box];
	7756108 -> ForLoop7757541;
	_JOIN_7734895 [label="_JOIN_7734895None...",shape=box];
	_JOIN_7734894 [label="_JOIN_7734894None...",shape=box];
	_JOIN_7734894 -> _JOIN_7734895;
	_JOIN_7754452 [label="_JOIN_7754452None...",shape=box];
	_JOIN_7754452 -> _JOIN_7735386;
	_JOIN_7736486 [label="_JOIN_7736486None...",shape=box];
	_JOIN_7736486 -> _JOIN_7734894;
	_JOIN_7757541 [label="_JOIN_7757541None...",shape=box];
	_JOIN_7757541 -> ForLoop7757667;
	ForLoop7732033 [label="ForLoop7732033  for (i=0; i<=cbv_1; i=i+5) {...",shape=box];
	ForLoop7732033 -> 7731995;
	ForLoop7732033 -> _JOIN_7732033;
	7731995 [label="7731995  y[i]=0.0;...",shape=box];
	_JOIN_7736485 [label="_JOIN_7736485None...",shape=box];
	_JOIN_7736485 -> _JOIN_7736486;
	7752582 [label="7752582  int j;...",shape=box];
	7752582 -> ForLoop7754326;
	ForLoop7735386 [label="ForLoop7735386  for (jjj=0; jjj<=ny-1; jjj=jjj+1024) {...",shape=box];
	ForLoop7735386 -> ForLoop7738814;
	ForLoop7735386 -> _JOIN_7735386;
	_JOIN_7732033 [label="_JOIN_7732033None...",shape=box];
	_JOIN_7732033 -> 7732188;
	ForLoop7757541 [label="ForLoop7757541  for (k=kk; k<=min(ny-1,kk+31)-18; k=k+19) {...",shape=box];
	ForLoop7757541 -> 7757035;
	ForLoop7757541 -> _JOIN_7757541;
	7734805 [label="7734805  tmp[i]=0;...",shape=box];
	7734805 -> ForLoop7735386;
	ForLoop7736485 [label="ForLoop7736485  for (kk=kkk; kk<=min(ny-1,kkk+224); kk=kk+32) {...",shape=box];
	ForLoop7736485 -> 7756108;
	ForLoop7736485 -> _JOIN_7736485;
	ForLoop7736486 [label="ForLoop7736486  for (kkk=0; kkk<=ny-1; kkk=kkk+256) ...",shape=box];
	ForLoop7736486 -> ForLoop7736485;
	ForLoop7736486 -> _JOIN_7736486;
	ForLoop7754452 [label="ForLoop7754452  for (j=(min(ny-1,jjj+1023))-(((min(ny-1,jjj+1023))-(jt)+1)%26)+1; j<=min(ny-1,jjj+1023); j=j+1) ...",shape=box];
	ForLoop7754452 -> 7754451;
	ForLoop7754452 -> _JOIN_7754452;
	_JOIN_7735386 [label="_JOIN_7735386None...",shape=box];
	_JOIN_7735386 -> ForLoop7736486;
	7737831 [label="7737831  double x_copy;...",shape=box];

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest33.exe __orio_perftest33.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest33.exe  expected=9369846271501.798828
actual=9369846271501.798828

{'[4, 0, 2, 2, 5, 3, 0, 0, 4, 0, 25, 18, 0, 2, 0, 0, 1, 0]' : 0.166571}
{'[4, 0, 2, 2, 5, 3, 0, 0, 4, 0, 25, 18, 0, 2, 0, 0, 1, 0]' : 0.167611}
{'[4, 0, 2, 2, 5, 3, 0, 0, 4, 0, 25, 18, 0, 2, 0, 0, 1, 0]' : 0.166546}
{'[4, 0, 2, 2, 5, 3, 0, 0, 4, 0, 25, 18, 0, 2, 0, 0, 1, 0]' : 0.166765}
{'[4, 0, 2, 2, 5, 3, 0, 0, 4, 0, 25, 18, 0, 2, 0, 0, 1, 0]' : 0.166586}
{'[4, 0, 2, 2, 5, 3, 0, 0, 4, 0, 25, 18, 0, 2, 0, 0, 1, 0]' : 0.166679}
{'[4, 0, 2, 2, 5, 3, 0, 0, 4, 0, 25, 18, 0, 2, 0, 0, 1, 0]' : 0.166588}
{'[4, 0, 2, 2, 5, 3, 0, 0, 4, 0, 25, 18, 0, 2, 0, 0, 1, 0]' : 0.166725}
{'[4, 0, 2, 2, 5, 3, 0, 0, 4, 0, 25, 18, 0, 2, 0, 0, 1, 0]' : 0.166597}
{'[4, 0, 2, 2, 5, 3, 0, 0, 4, 0, 25, 18, 0, 2, 0, 0, 1, 0]' : 0.166605}
{'[4, 0, 2, 2, 5, 3, 0, 0, 4, 0, 25, 18, 0, 2, 0, 0, 1, 0]' : 0.16654}
{'[4, 0, 2, 2, 5, 3, 0, 0, 4, 0, 25, 18, 0, 2, 0, 0, 1, 0]' : 0.166559}
{'[4, 0, 2, 2, 5, 3, 0, 0, 4, 0, 25, 18, 0, 2, 0, 0, 1, 0]' : 0.166563}
{'[4, 0, 2, 2, 5, 3, 0, 0, 4, 0, 25, 18, 0, 2, 0, 0, 1, 0]' : 0.167573}
{'[4, 0, 2, 2, 5, 3, 0, 0, 4, 0, 25, 18, 0, 2, 0, 0, 1, 0]' : 0.166624}
{'[4, 0, 2, 2, 5, 3, 0, 0, 4, 0, 25, 18, 0, 2, 0, 0, 1, 0]' : 0.166681}
{'[4, 0, 2, 2, 5, 3, 0, 0, 4, 0, 25, 18, 0, 2, 0, 0, 1, 0]' : 0.166577}
{'[4, 0, 2, 2, 5, 3, 0, 0, 4, 0, 25, 18, 0, 2, 0, 0, 1, 0]' : 0.166554}
{'[4, 0, 2, 2, 5, 3, 0, 0, 4, 0, 25, 18, 0, 2, 0, 0, 1, 0]' : 0.166536}
{'[4, 0, 2, 2, 5, 3, 0, 0, 4, 0, 25, 18, 0, 2, 0, 0, 1, 0]' : 0.166681}
{'[4, 0, 2, 2, 5, 3, 0, 0, 4, 0, 25, 18, 0, 2, 0, 0, 1, 0]' : 0.166533}
{'[4, 0, 2, 2, 5, 3, 0, 0, 4, 0, 25, 18, 0, 2, 0, 0, 1, 0]' : 0.166719}
{'[4, 0, 2, 2, 5, 3, 0, 0, 4, 0, 25, 18, 0, 2, 0, 0, 1, 0]' : 0.166581}
{'[4, 0, 2, 2, 5, 3, 0, 0, 4, 0, 25, 18, 0, 2, 0, 0, 1, 0]' : 0.166585}
{'[4, 0, 2, 2, 5, 3, 0, 0, 4, 0, 25, 18, 0, 2, 0, 0, 1, 0]' : 0.166702}
{'[4, 0, 2, 2, 5, 3, 0, 0, 4, 0, 25, 18, 0, 2, 0, 0, 1, 0]' : 0.167641}
{'[4, 0, 2, 2, 5, 3, 0, 0, 4, 0, 25, 18, 0, 2, 0, 0, 1, 0]' : 0.16658}
{'[4, 0, 2, 2, 5, 3, 0, 0, 4, 0, 25, 18, 0, 2, 0, 0, 1, 0]' : 0.166566}
{'[4, 0, 2, 2, 5, 3, 0, 0, 4, 0, 25, 18, 0, 2, 0, 0, 1, 0]' : 0.166565}
{'[4, 0, 2, 2, 5, 3, 0, 0, 4, 0, 25, 18, 0, 2, 0, 0, 1, 0]' : 0.166553}

out:
 ["{'[4, 0, 2, 2, 5, 3, 0, 0, 4, 0, 25, 18, 0, 2, 0, 0, 1, 0]' : 0.166571}", "{'[4, 0, 2, 2, 5, 3, 0, 0, 4, 0, 25, 18, 0, 2, 0, 0, 1, 0]' : 0.167611}", "{'[4, 0, 2, 2, 5, 3, 0, 0, 4, 0, 25, 18, 0, 2, 0, 0, 1, 0]' : 0.166546}", "{'[4, 0, 2, 2, 5, 3, 0, 0, 4, 0, 25, 18, 0, 2, 0, 0, 1, 0]' : 0.166765}", "{'[4, 0, 2, 2, 5, 3, 0, 0, 4, 0, 25, 18, 0, 2, 0, 0, 1, 0]' : 0.166586}", "{'[4, 0, 2, 2, 5, 3, 0, 0, 4, 0, 25, 18, 0, 2, 0, 0, 1, 0]' : 0.166679}", "{'[4, 0, 2, 2, 5, 3, 0, 0, 4, 0, 25, 18, 0, 2, 0, 0, 1, 0]' : 0.166588}", "{'[4, 0, 2, 2, 5, 3, 0, 0, 4, 0, 25, 18, 0, 2, 0, 0, 1, 0]' : 0.166725}", "{'[4, 0, 2, 2, 5, 3, 0, 0, 4, 0, 25, 18, 0, 2, 0, 0, 1, 0]' : 0.166597}", "{'[4, 0, 2, 2, 5, 3, 0, 0, 4, 0, 25, 18, 0, 2, 0, 0, 1, 0]' : 0.166605}", "{'[4, 0, 2, 2, 5, 3, 0, 0, 4, 0, 25, 18, 0, 2, 0, 0, 1, 0]' : 0.16654}", "{'[4, 0, 2, 2, 5, 3, 0, 0, 4, 0, 25, 18, 0, 2, 0, 0, 1, 0]' : 0.166559}", "{'[4, 0, 2, 2, 5, 3, 0, 0, 4, 0, 25, 18, 0, 2, 0, 0, 1, 0]' : 0.166563}", "{'[4, 0, 2, 2, 5, 3, 0, 0, 4, 0, 25, 18, 0, 2, 0, 0, 1, 0]' : 0.167573}", "{'[4, 0, 2, 2, 5, 3, 0, 0, 4, 0, 25, 18, 0, 2, 0, 0, 1, 0]' : 0.166624}", "{'[4, 0, 2, 2, 5, 3, 0, 0, 4, 0, 25, 18, 0, 2, 0, 0, 1, 0]' : 0.166681}", "{'[4, 0, 2, 2, 5, 3, 0, 0, 4, 0, 25, 18, 0, 2, 0, 0, 1, 0]' : 0.166577}", "{'[4, 0, 2, 2, 5, 3, 0, 0, 4, 0, 25, 18, 0, 2, 0, 0, 1, 0]' : 0.166554}", "{'[4, 0, 2, 2, 5, 3, 0, 0, 4, 0, 25, 18, 0, 2, 0, 0, 1, 0]' : 0.166536}", "{'[4, 0, 2, 2, 5, 3, 0, 0, 4, 0, 25, 18, 0, 2, 0, 0, 1, 0]' : 0.166681}", "{'[4, 0, 2, 2, 5, 3, 0, 0, 4, 0, 25, 18, 0, 2, 0, 0, 1, 0]' : 0.166533}", "{'[4, 0, 2, 2, 5, 3, 0, 0, 4, 0, 25, 18, 0, 2, 0, 0, 1, 0]' : 0.166719}", "{'[4, 0, 2, 2, 5, 3, 0, 0, 4, 0, 25, 18, 0, 2, 0, 0, 1, 0]' : 0.166581}", "{'[4, 0, 2, 2, 5, 3, 0, 0, 4, 0, 25, 18, 0, 2, 0, 0, 1, 0]' : 0.166585}", "{'[4, 0, 2, 2, 5, 3, 0, 0, 4, 0, 25, 18, 0, 2, 0, 0, 1, 0]' : 0.166702}", "{'[4, 0, 2, 2, 5, 3, 0, 0, 4, 0, 25, 18, 0, 2, 0, 0, 1WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = kkk
, 0]' : 0.167641}", "{'[4, 0, 2, 2, 5, 3, 0, 0, 4, 0, 25, 18, 0, 2, 0, 0, 1, 0]' : 0.16658}", "{'[4, 0, 2, 2, 5, 3, 0, 0, 4, 0, 25, 18, 0, 2, 0, 0, 1, 0]' : 0.166566}", "{'[4, 0, 2, 2, 5, 3, 0, 0, 4, 0, 25, 18, 0, 2, 0, 0, 1, 0]' : 0.166565}", "{'[4, 0, 2, 2, 5, 3, 0, 0, 4, 0, 25, 18, 0, 2, 0, 0, 1, 0]' : 0.166553}"]
returning from 'run': {'[4, 0, 2, 2, 5, 3, 0, 0, 4, 0, 25, 18, 0, 2, 0, 0, 1, 0]': ([0.166571, 0.167611, 0.166546, 0.166765, 0.166586, 0.166679, 0.166588, 0.166725, 0.166597, 0.166605, 0.16654, 0.166559, 0.166563, 0.167573, 0.166624, 0.166681, 0.166577, 0.166554, 0.166536, 0.166681, 0.166533, 0.166719, 0.166581, 0.166585, 0.166702, 0.167641, 0.16658, 0.166566, 0.166565, 0.166553], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.166571, 0.167611, 0.166546, 0.166765, 0.166586, 0.166679, 0.166588, 0.166725, 0.166597, 0.166605, 0.16654, 0.166559, 0.166563, 0.167573, 0.166624, 0.166681, 0.166577, 0.166554, 0.166536, 0.166681, 0.166533, 0.166719, 0.166581, 0.166585, 0.166702, 0.167641, 0.16658, 0.166566, 0.166565, 0.166553], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[4, 0, 2, 2, 5, 3, 0, 0, 4, 0, 25, 18, 0, 2, 0, 0, 1, 0]': ([0.166571, 0.167611, 0.166546, 0.166765, 0.166586, 0.166679, 0.166588, 0.166725, 0.166597, 0.166605, 0.16654, 0.166559, 0.166563, 0.167573, 0.166624, 0.166681, 0.166577, 0.166554, 0.166536, 0.166681, 0.166533, 0.166719, 0.166581, 0.166585, 0.166702, 0.167641, 0.16658, 0.166566, 0.166565, 0.166553], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [6, 6, 3, 5, 6, 1, 1, 0, 25, 1, 21, 0, 1, 0, 1, 1, 0, 0]
Fixed Factors: {}
Testing candidate 34: [6, 6, 3, 5, 6, 1, 1, 0, 25, 1, 21, 0, 1, 0, 1, 1, 0, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	34
        Max loop nest depth: 	6
        Additions: 		1681
        Multiplications: 	704
        Divisions: 		0
        Logical: 		0
        Reads: 			3242
        Writes: 		554
        Comparisons:		34
        Gotos: 			0
        
digraph CFG {
	ForLoop7920832 [label="ForLoop7920832  for (j=jj; j<=min(ny-1,jj+511)-21; j=j+22) {...",shape=box];
	ForLoop7920832 -> 7920263;
	ForLoop7920832 -> _JOIN_7920832;
	_JOIN_7917740 [label="_JOIN_7917740None...",shape=box];
	_JOIN_7917740 -> ForLoop7920119;
	7969914 [label="7969914  double scv_60;...",shape=box];
	_JOIN_7920832 [label="_JOIN_7920832None...",shape=box];
	_JOIN_7920832 -> ForLoop7920903;
	_JOIN_7921831 [label="_JOIN_7921831None...",shape=box];
	_JOIN_7921831 -> ForLoop7922414;
	7956550 [label="7956550  double scv_33, scv_34, scv_35, scv_36, scv_37, scv_38, scv_39, scv_40;...",shape=box];
	7963549 [label="7963549  double scv_41, scv_42, scv_43, scv_44, scv_45, scv_46, scv_47, scv_48;...",shape=box];
	_JOIN_7917739 [label="_JOIN_7917739None...",shape=box];
	_JOIN_7917739 -> _JOIN_7917740;
	7920902 [label="7920902  scv_51=scv_51+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	7920902 -> _JOIN_7920903;
	ForLoop7920903 [label="ForLoop7920903  for (j=(min(ny-1,jj+511))-(((min(ny-1,jj+511))-(jj)+1)%22)+1; j<=min(ny-1,jj+511); j=j+1) {...",shape=box];
	ForLoop7920903 -> 7920902;
	ForLoop7920903 -> _JOIN_7920903;
	_JOIN_7917736 [label="_JOIN_7917736None...",shape=box];
	_JOIN_7917736 -> _JOIN_7917739;
	_JOIN_7919895 [label="_JOIN_7919895None...",shape=box];
	_JOIN_7919895 -> ForLoop7920117;
	_JOIN_7920121 [label="_JOIN_7920121None...",shape=box];
	_JOIN_7920121 -> 7920122;
	7764413 [label="7764413  y[i]=0.0;...",shape=box];
	7764413 -> _JOIN_7764414;
	7920988 [label="7920988  scv_50=scv_50+A[(i+1)*ny+j]*x_copy[(j-jj)];...",shape=box];
	7932707 [label="7932707  double scv_23;...",shape=box];
	_JOIN_7923144 [label="_JOIN_7923144None...",shape=box];
	_JOIN_7923144 -> ForLoop7923215;
	ForLoop7923523 [label="ForLoop7923523  for (ii=iii; ii<=min(nx-1,iii+512); ii=ii+512) {...",shape=box];
	ForLoop7923523 -> ForLoop7920121;
	ForLoop7923523 -> _JOIN_7923523;
	ForLoop7923520 [label="ForLoop7923520  for (i=(min(nx-1,ii+511))-(((min(nx-1,ii+511))-(it)+1)%2)+1; i<=min(nx-1,ii+511); i=i+1) {...",shape=box];
	ForLoop7923520 -> 7971470;
	ForLoop7923520 -> _JOIN_7923520;
	ForLoop7923524 [label="ForLoop7923524  for (iii=0; iii<=nx-1; iii=iii+1024) {...",shape=box];
	ForLoop7923524 -> ForLoop7923523;
	ForLoop7923524 -> _JOIN_7923524;
	ForLoop7923518 [label="ForLoop7923518  for (kk=0; kk<=ny-1; kk=kk+64) {...",shape=box];
	ForLoop7923518 -> ForLoop7923477;
	ForLoop7923518 -> _JOIN_7923518;
	7920935 [label="7920935  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	7764118 [label="7764118  y[i]=0.0;...",shape=box];
	ForLoop7923215 [label="ForLoop7923215  for (j=(min(ny-1,jj+511))-(((min(ny-1,jj+511))-(jj)+1)%22)+1; j<=min(ny-1,jj+511); j=j+1) {...",shape=box];
	ForLoop7923215 -> 7923214;
	ForLoop7923215 -> _JOIN_7923215;
	ForLoop7917740 [label="ForLoop7917740  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop7917740 -> ForLoop7917739;
	ForLoop7917740 -> _JOIN_7917740;
	_JOIN_7920119 [label="_JOIN_7920119None...",shape=box];
	_JOIN_7920119 -> 7956562;
	ForLoop7917440 [label="ForLoop7917440  for (j=jj; j<=min(ny-1,jj+511)-21; j=j+22) {...",shape=box];
	ForLoop7917440 -> 7931895;
	ForLoop7917440 -> _JOIN_7917440;
	ForLoop7923219 [label="ForLoop7923219  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop7923219 -> ForLoop7923218;
	ForLoop7923219 -> _JOIN_7923219;
	ForLoop7923218 [label="ForLoop7923218  for (jj=jjj; jj<=min(ny-1,jjj+1536); jj=jj+512) {...",shape=box];
	ForLoop7923218 -> 7922531;
	ForLoop7923218 -> _JOIN_7923218;
	7966697 [label="7966697  tmp[(i+1)]=scv_50;...",shape=box];
	7922531 [label="7922531  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 7763686;
	7920219 [label="7920219  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	ForLoop7920121 [label="ForLoop7920121  for (it=ii; it<=min(nx-1,ii+511)-7; it=it+8) {...",shape=box];
	ForLoop7920121 -> 7956550;
	ForLoop7920121 -> _JOIN_7920121;
	_JOIN_7920903 [label="_JOIN_7920903None...",shape=box];
	_JOIN_7920903 -> 7920935;
	7966679 [label="7966679  double scv_50, scv_51;...",shape=box];
	7969710 [label="7969710  double scv_52, scv_53, scv_54, scv_55, scv_56, scv_57, scv_58, scv_59;...",shape=box];
	7963806 [label="7963806  double scv_49;...",shape=box];
	_JOIN_7917440 [label="_JOIN_7917440None...",shape=box];
	_JOIN_7917440 -> ForLoop7917736;
	ForLoop7764414 [label="ForLoop7764414  for (i=ny-((ny-(0))%26); i<=ny-1; i=i+1) ...",shape=box];
	ForLoop7764414 -> 7764413;
	ForLoop7764414 -> _JOIN_7764414;
	_JOIN_7921829 [label="_JOIN_7921829None...",shape=box];
	_JOIN_7921829 -> _JOIN_7921831;
	7911311 [label="7911311  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	_JOIN_7921826 [label="_JOIN_7921826None...",shape=box];
	_JOIN_7921826 -> _JOIN_7921829;
	7956562 [label="7956562  tmp[it]=scv_33;...",shape=box];
	_JOIN_7922412 [label="_JOIN_7922412None...",shape=box];
	_JOIN_7922412 -> _JOIN_7922414;
	_JOIN_7922414 [label="_JOIN_7922414None...",shape=box];
	_JOIN_7922414 -> 7966697;
	7923214 [label="7923214  scv_61=scv_61+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	7923214 -> _JOIN_7923215;
	_JOIN_7922416 [label="_JOIN_7922416None...",shape=box];
	_JOIN_7922416 -> ForLoop7923520;
	7911191 [label="7911191  double x_copy[512];...",shape=box];
	_JOIN_7923477 [label="_JOIN_7923477None...",shape=box];
	_JOIN_7923477 -> ForLoop7923516;
	ForLoop7923144 [label="ForLoop7923144  for (j=jj; j<=min(ny-1,jj+511)-21; j=j+22) {...",shape=box];
	ForLoop7923144 -> 7922575;
	ForLoop7923144 -> _JOIN_7923144;
	7920122 [label="7920122  int i;...",shape=box];
	7920122 -> ForLoop7922416;
	7971470 [label="7971470  double scv_61;...",shape=box];
	7922575 [label="7922575  scv_61=scv_61+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop7764345 [label="ForLoop7764345  for (i=0; i<=ny-26; i=i+26) {...",shape=box];
	ForLoop7764345 -> 7764118;
	ForLoop7764345 -> _JOIN_7764345;
	ForLoop7923477 [label="ForLoop7923477  for (kt=kk; kt<=min(ny-1,kk+63)-7; kt=kt+8) {...",shape=box];
	ForLoop7923477 -> 7969710;
	ForLoop7923477 -> _JOIN_7923477;
	7921825 [label="7921825  scv_50=scv_50+A[(i+1)*ny+j]*x_copy[(j-jj)];...",shape=box];
	7921825 -> _JOIN_7921826;
	_JOIN_7764345 [label="_JOIN_7764345None...",shape=box];
	_JOIN_7764345 -> ForLoop7764414;
	ForLoop7919895 [label="ForLoop7919895  for (kt=kk; kt<=min(ny-1,kk+63)-7; kt=kt+8) {...",shape=box];
	ForLoop7919895 -> 7946636;
	ForLoop7919895 -> _JOIN_7919895;
	ForLoop7920117 [label="ForLoop7920117  for (k=kt; k<=min(ny-1,kk+63); k=k+1) {...",shape=box];
	ForLoop7920117 -> 7947205;
	ForLoop7920117 -> _JOIN_7920117;
	ForLoop7917736 [label="ForLoop7917736  for (j=(min(ny-1,jj+511))-(((min(ny-1,jj+511))-(jj)+1)%22)+1; j<=min(ny-1,jj+511); j=j+1) {...",shape=box];
	ForLoop7917736 -> 7932707;
	ForLoop7917736 -> _JOIN_7917736;
	ForLoop7917739 [label="ForLoop7917739  for (jj=jjj; jj<=min(ny-1,jjj+1536); jj=jj+512) {...",shape=box];
	ForLoop7917739 -> 7911311;
	ForLoop7917739 -> _JOIN_7917739;
	ForLoop7920119 [label="ForLoop7920119  for (kk=0; kk<=ny-1; kk=kk+64) {...",shape=box];
	ForLoop7920119 -> ForLoop7919895;
	ForLoop7920119 -> _JOIN_7920119;
	7920263 [label="7920263  scv_51=scv_51+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_7923518 [label="_JOIN_7923518None...",shape=box];
	_JOIN_7923518 -> 7971482;
	ForLoop7921829 [label="ForLoop7921829  for (jj=jjj; jj<=min(ny-1,jjj+1536); jj=jj+512) {...",shape=box];
	ForLoop7921829 -> 7920219;
	ForLoop7921829 -> _JOIN_7921829;
	ForLoop7921826 [label="ForLoop7921826  for (j=(min(ny-1,jj+511))-(((min(ny-1,jj+511))-(jj)+1)%22)+1; j<=min(ny-1,jj+511); j=j+1) {...",shape=box];
	ForLoop7921826 -> 7921825;
	ForLoop7921826 -> _JOIN_7921826;
	_JOIN_7923516 [label="_JOIN_7923516None...",shape=box];
	_JOIN_7923516 -> _JOIN_7923518;
	7931895 [label="7931895  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	_JOIN_7923215 [label="_JOIN_7923215None...",shape=box];
	_JOIN_7923215 -> _JOIN_7923218;
	_JOIN_7922346 [label="_JOIN_7922346None...",shape=box];
	_JOIN_7922346 -> ForLoop7922412;
	_JOIN_7923219 [label="_JOIN_7923219None...",shape=box];
	_JOIN_7923219 -> ForLoop7923518;
	_JOIN_7923218 [label="_JOIN_7923218None...",shape=box];
	_JOIN_7923218 -> _JOIN_7923219;
	7763686 [label="7763686  int i;...",shape=box];
	7763686 -> ForLoop7764345;
	ForLoop7921746 [label="ForLoop7921746  for (j=jj; j<=min(ny-1,jj+511)-21; j=j+22) {...",shape=box];
	ForLoop7921746 -> 7920988;
	ForLoop7921746 -> _JOIN_7921746;
	ForLoop7922346 [label="ForLoop7922346  for (kt=kk; kt<=min(ny-1,kk+63)-7; kt=kt+8) {...",shape=box];
	ForLoop7922346 -> 7963549;
	ForLoop7922346 -> _JOIN_7922346;
	ForLoop7923516 [label="ForLoop7923516  for (k=kt; k<=min(ny-1,kk+63); k=k+1) {...",shape=box];
	ForLoop7923516 -> 7969914;
	ForLoop7923516 -> _JOIN_7923516;
	7947205 [label="7947205  double scv_32;...",shape=box];
	_JOIN_7764414 [label="_JOIN_7764414None...",shape=box];
	_JOIN_7764414 -> 7911191;
	_JOIN_7923524 [label="_JOIN_7923524None...",shape=box];
	_JOIN_7923523 [label="_JOIN_7923523None...",shape=box];
	_JOIN_7923523 -> _JOIN_7923524;
	_JOIN_7923520 [label="_JOIN_7923520None...",shape=box];
	_JOIN_7923520 -> _JOIN_7923523;
	_JOIN_7920117 [label="_JOIN_7920117None...",shape=box];
	_JOIN_7920117 -> _JOIN_7920119;
	ForLoop7921831 [label="ForLoop7921831  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop7921831 -> ForLoop7921829;
	ForLoop7921831 -> _JOIN_7921831;
	ForLoop7922412 [label="ForLoop7922412  for (k=kt; k<=min(ny-1,kk+63); k=k+1) {...",shape=box];
	ForLoop7922412 -> 7963806;
	ForLoop7922412 -> _JOIN_7922412;
	ForLoop7922414 [label="ForLoop7922414  for (kk=0; kk<=ny-1; kk=kk+64) {...",shape=box];
	ForLoop7922414 -> ForLoop7922346;
	ForLoop7922414 -> _JOIN_7922414;
	ForLoop7922416 [label="ForLoop7922416  for (i=it; i<=min(nx-1,ii+511)-1; i=i+2) {...",shape=box];
	ForLoop7922416 -> 7966679;
	ForLoop7922416 -> _JOIN_7922416;
	7971482 [label="7971482  expected=9369846271501.798828
actual=9369846271501.798828
tmp[i]=scv_61;...",shape=box];
	7971482 -> _JOIN_7923520;
	_JOIN_7921746 [label="_JOIN_7921746None...",shape=box];
	_JOIN_7921746 -> ForLoop7921826;
	7946636 [label="7946636  double scv_24, scv_25, scv_26, scv_27, scv_28, scv_29, scv_30, scv_31;...",shape=box];

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest34.exe __orio_perftest34.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest34.exe  
{'[6, 6, 3, 5, 6, 1, 1, 0, 25, 1, 21, 0, 1, 0, 1, 1, 0, 0]' : 0.0798869}
{'[6, 6, 3, 5, 6, 1, 1, 0, 25, 1, 21, 0, 1, 0, 1, 1, 0, 0]' : 0.0784009}
{'[6, 6, 3, 5, 6, 1, 1, 0, 25, 1, 21, 0, 1, 0, 1, 1, 0, 0]' : 0.078424}
{'[6, 6, 3, 5, 6, 1, 1, 0, 25, 1, 21, 0, 1, 0, 1, 1, 0, 0]' : 0.0788012}
{'[6, 6, 3, 5, 6, 1, 1, 0, 25, 1, 21, 0, 1, 0, 1, 1, 0, 0]' : 0.0783079}
{'[6, 6, 3, 5, 6, 1, 1, 0, 25, 1, 21, 0, 1, 0, 1, 1, 0, 0]' : 0.0783582}
{'[6, 6, 3, 5, 6, 1, 1, 0, 25, 1, 21, 0, 1, 0, 1, 1, 0, 0]' : 0.0782979}
{'[6, 6, 3, 5, 6, 1, 1, 0, 25, 1, 21, 0, 1, 0, 1, 1, 0, 0]' : 0.0783939}
{'[6, 6, 3, 5, 6, 1, 1, 0, 25, 1, 21, 0, 1, 0, 1, 1, 0, 0]' : 0.0784831}
{'[6, 6, 3, 5, 6, 1, 1, 0, 25, 1, 21, 0, 1, 0, 1, 1, 0, 0]' : 0.078445}
{'[6, 6, 3, 5, 6, 1, 1, 0, 25, 1, 21, 0, 1, 0, 1, 1, 0, 0]' : 0.078428}
{'[6, 6, 3, 5, 6, 1, 1, 0, 25, 1, 21, 0, 1, 0, 1, 1, 0, 0]' : 0.07846}
{'[6, 6, 3, 5, 6, 1, 1, 0, 25, 1, 21, 0, 1, 0, 1, 1, 0, 0]' : 0.0785348}
{'[6, 6, 3, 5, 6, 1, 1, 0, 25, 1, 21, 0, 1, 0, 1, 1, 0, 0]' : 0.0784161}
{'[6, 6, 3, 5, 6, 1, 1, 0, 25, 1, 21, 0, 1, 0, 1, 1, 0, 0]' : 0.078434}
{'[6, 6, 3, 5, 6, 1, 1, 0, 25, 1, 21, 0, 1, 0, 1, 1, 0, 0]' : 0.078438}
{'[6, 6, 3, 5, 6, 1, 1, 0, 25, 1, 21, 0, 1, 0, 1, 1, 0, 0]' : 0.078402}
{'[6, 6, 3, 5, 6, 1, 1, 0, 25, 1, 21, 0, 1, 0, 1, 1, 0, 0]' : 0.078568}
{'[6, 6, 3, 5, 6, 1, 1, 0, 25, 1, 21, 0, 1, 0, 1, 1, 0, 0]' : 0.078337}
{'[6, 6, 3, 5, 6, 1, 1, 0, 25, 1, 21, 0, 1, 0, 1, 1, 0, 0]' : 0.078299}
{'[6, 6, 3, 5, 6, 1, 1, 0, 25, 1, 21, 0, 1, 0, 1, 1, 0, 0]' : 0.0783229}
{'[6, 6, 3, 5, 6, 1, 1, 0, 25, 1, 21, 0, 1, 0, 1, 1, 0, 0]' : 0.0784302}
{'[6, 6, 3, 5, 6, 1, 1, 0, 25, 1, 21, 0, 1, 0, 1, 1, 0, 0]' : 0.0787799}
{'[6, 6, 3, 5, 6, 1, 1, 0, 25, 1, 21, 0, 1, 0, 1, 1, 0, 0]' : 0.0784409}
{'[6, 6, 3, 5, 6, 1, 1, 0, 25, 1, 21, 0, 1, 0, 1, 1, 0, 0]' : 0.078464}
{'[6, 6, 3, 5, 6, 1, 1, 0, 25, 1, 21, 0, 1, 0, 1, 1, 0, 0]' : 0.0794539}
{'[6, 6, 3, 5, 6, 1, 1, 0, 25, 1, 21, 0, 1, 0, 1, 1, 0, 0]' : 0.0783601}
{'[6, 6, 3, 5, 6, 1, 1, 0, 25, 1, 21, 0, 1, 0, 1, 1, 0, 0]' : 0.0785339}
{'[6, 6, 3, 5, 6, 1, 1, 0, 25, 1, 21, 0, 1, 0, 1, 1, 0, 0]' : 0.0783231}
{'[6, 6, 3, 5, 6, 1, 1, 0, 25, 1, 21, 0, 1, 0, 1, 1, 0, 0]' : 0.0784609}

out:
 ["{'[6, 6, 3, 5, 6, 1, 1, 0, 25, 1, 21, 0, 1, 0, 1, 1, 0, 0]' : 0.0798869}", "{'[6, 6, 3, 5, 6, 1, 1, 0, 25, 1, 21, 0, 1, 0, 1, 1, 0, 0]' : 0.0784009}", "{'[6, 6, 3, 5, 6, 1, 1, 0, 25, 1, 21, 0, 1, 0, 1, 1, 0, 0]' : 0.078424}", "{'[6, 6, 3, 5, 6, 1, 1, 0, 25, 1, 21, 0, 1, 0, 1, 1, 0, 0]' : 0.0788012}", "{'[6, 6, 3, 5, 6, 1, 1, 0, 25, 1, 21, 0, 1, 0, 1, 1, 0, 0]' : 0.0783079}", "{'[6, 6, 3, 5, 6, 1, 1, 0, 25, 1, 21, 0, 1, 0, 1, 1, 0, 0]' : 0.0783582}", "{'[6, 6, 3, 5, 6, 1, 1, 0, 25, 1, 21, 0, 1, 0, 1, 1, 0, 0]' : 0.0782979}", "{'[6, 6, 3, 5, 6, 1, 1, 0, 25, 1, 21, 0, 1, 0, 1, 1, 0, 0]' : 0.0783939}", "{'[6, 6, 3, 5, 6, 1, 1, 0, 25, 1, 21, 0, 1, 0, 1, 1, 0, 0]' : 0.0784831}", "{'[6, 6, 3, 5, 6, 1, 1, 0, 25, 1, 21, 0, 1, 0, 1, 1, 0, 0]' : 0.078445}", "{'[6, 6, 3, 5, 6, 1, 1, 0, 25, 1, 21, 0, 1, 0, 1, 1, 0, 0]' : 0.078428}", "{'[6, 6, 3, 5, 6, 1, 1, 0, 25, 1, 21, 0, 1, 0, 1, 1, 0, 0]' : 0.07846}", "{'[6, 6, 3, 5, 6, 1, 1, 0, 25, 1, 21, 0, 1, 0, 1, 1, 0, 0]' : 0.0785348}", "{'[6, 6, 3, 5, 6, 1, 1, 0, 25, 1, 21, 0, 1, 0, 1, 1, 0, 0]' : 0.0784161}", "{'[6, 6, 3, 5, 6, 1, 1, 0, 25, 1, 21, 0, 1, 0, 1, 1, 0, 0]' : 0.078434}", "{'[6, 6, 3, 5, 6, 1, 1, 0, 25, 1, 21, 0, 1, 0, 1, 1, 0, 0]' : 0.078438}", "{'[6, 6, 3, 5, 6, 1, 1, 0, 25, 1, 21, 0, 1, 0, 1, 1, 0, 0]' : 0.078402}", "{'[6, 6, 3, 5, 6, 1, 1, 0, 25, 1, 21, 0, 1, 0, 1, 1, 0, 0]' : 0.078568}", "{'[6, 6, 3, 5, 6, 1, 1, 0, 25, 1, 21, 0, 1, 0, 1, 1, 0, 0]' : 0.078337}", "{'[6, 6, 3, 5, 6, 1, 1, 0, 25, 1, 21, 0, 1, 0, 1, 1, 0, 0]' : 0.078299}", "{'[6, 6, 3, 5, 6, 1, 1, 0, 25, 1, 21, 0, 1, 0, 1, 1, 0, 0]' : 0.0783229}", "{'[6, 6, 3, 5, 6, 1, 1, 0, 25, 1, 21, 0, 1, 0, 1, 1, 0, 0]' : 0.0784302}", "{'[6, 6, 3, 5, 6, 1, 1, 0, 25, 1, 21, 0, 1, 0, 1, 1, 0, 0]' : 0.0787799}", "{'[6, 6, 3, 5, 6, 1, 1, 0, 25, 1, 21, 0, 1, 0, 1, 1, 0, 0]' : 0.0784409}", "{'[6, 6, 3, 5, 6, 1, 1, 0, 25, 1, 21, 0, 1, 0, 1, 1, 0, 0]' : 0.078464}", "{'[6, 6, 3, 5, 6, 1, 1, 0, 25, 1, 21, 0, 1, 0, 1, 1, 0, 0]' : 0.0794539}", "{'[6, 6, 3, 5, 6, 1, 1, 0, 25, 1, 21, 0, 1, 0, 1, 1, 0, 0]' : 0.0783601}", "{'[6, 6, 3, 5, 6, 1, 1, 0, 25, 1, 21, 0, 1, 0, 1, 1, 0, 0]' : 0.0785339}", "{'[6, 6, 3, 5, 6, 1, 1, 0, 25, 1, 21, 0, 1, 0, 1, 1, 0, 0]' : 0.0783231}", "{'[6, 6, 3, 5, 6, 1, 1, 0, 25, 1, 21, 0, 1, 0, 1, 1, 0, 0]' : 0.0784609}"]
returning from 'run': {'[6, 6, 3, 5, 6, 1, 1, 0, 25, 1, 21, 0, 1, 0, 1, 1, 0, 0]': ([0.0798869, 0.0784009, 0.078424, 0.0788012, 0.0783079, 0.0783582, 0.0782979, 0.0783939, 0.0784831, 0.078445, 0.078428, 0.07846, 0.0785348, 0.0784161, 0.078434, 0.078438, 0.078402, 0.078568, 0.078337, 0.078299, 0.0783229, 0.0784302, 0.0787799, 0.0784409, 0.078464, 0.0794539, 0.0783601, 0.0785339, 0.0783231, 0.0784609], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.0798869, 0.0784009, 0.078424, 0.0788012, 0.0783079, 0.0783582, 0.0782979, 0.0783939, 0.0784831, 0.078445, 0.078428, 0.07846, 0.0785348, 0.0784161, 0.078434, 0.078438, 0.078402, 0.078568, 0.078337, 0.078299, 0.0783229, 0.0784302, 0.0787799, 0.0784409, 0.078464, 0.0794539, 0.0783601, 0.0785339, 0.0783231, 0.0784609], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 3, 5, 6, 1, 1, 0, 25, 1, 21, 0, 1, 0, 1, 1, 0, 0]': ([0.0798869, 0.0784009, 0.078424, 0.0788012, 0.0783079, 0.0783582, 0.0782979, 0.0783939, 0.0784831, 0.078445, 0.078428, 0.07846, 0.0785348, 0.0784161, 0.078434, 0.078438, 0.078402, 0.078568, 0.078337, 0.078299, 0.0783229, 0.0784302, 0.0787799, 0.0784409, 0.078464, 0.0794539, 0.0783601, 0.0785339, 0.0783231, 0.0784609], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [5, 0, 0, 4, 6, 3, 0, 1, 24, 23, 16, 0, 1, 0, 0, 1, 1, 0]
Fixed Factors: {}
Testing candidate 35: [5, 0, 0, 4, 6, 3, 0, 1, 24, 23, 16, 0, 1, 0, 0, 1, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	74
        Max loop nest depth: 	5
        Additions: 		2799
        Multiplications: 	1254
        Divisions: 		0
        Logical: 		0
        Reads: 			5599
        Writes: 		990
        Comparisons:		74
        Gotos: 			0
        
digraph CFG {
	8189973 [label="8189973  double scv_45;...",shape=box];
	8224066 [label="8224066  tmp[i]=scv_72;...",shape=box];
	8224066 -> _JOIN_8153092;
	_JOIN_8150102 [label="_JOIN_8150102None...",shape=box];
	_JOIN_8150102 -> ForLoop8152387;
	ForLoop8151641 [label="ForLoop8151641  for (k=kkk; k<=min(ny-1,kkk+255); k=k+1) {...",shape=box];
	ForLoop8151641 -> 8203554;
	ForLoop8151641 -> _JOIN_8151641;
	_JOIN_8153092 [label="_JOIN_8153092None...",shape=box];
	_JOIN_8153092 -> _JOIN_8153095;
	ForLoop8149364 [label="ForLoop8149364  for (j=jjj; j<=min(ny-1,jjj+2047)-16; j=j+17) {...",shape=box];
	ForLoop8149364 -> 8188427;
	ForLoop8149364 -> _JOIN_8149364;
	_JOIN_8153090 [label="_JOIN_8153090None...",shape=box];
	_JOIN_8153090 -> 8224066;
	_JOIN_8153096 [label="_JOIN_8153096None...",shape=box];
	ForLoop8134849 [label="ForLoop8134849  for (j=jjj; j<=min(ny-1,jjj+2047)-16; j=j+17) {...",shape=box];
	ForLoop8134849 -> 8159252;
	ForLoop8134849 -> _JOIN_8134849;
	8169345 [label="8169345  tmp[it]=scv_20;...",shape=box];
	_JOIN_8135123 [label="_JOIN_8135123None...",shape=box];
	_JOIN_8135123 -> ForLoop8135470;
	8159902 [label="8159902  double scv_18;...",shape=box];
	_JOIN_8135121 [label="_JOIN_8135121None...",shape=box];
	_JOIN_8135121 -> _JOIN_8135123;
	8153088 [label="8153088  for (k=kkk; k<=min(ny-1,kkk+255); k=k+1) ...",shape=box];
	8153088 -> _JOIN_8153090;
	_JOIN_8134849 [label="_JOIN_8134849None...",shape=box];
	_JOIN_8134849 -> ForLoop8135121;
	8150146 [label="8150146  for (k=kkk; k<=min(ny-1,kkk+255); k=k+1) ...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 7988932;
	ForLoop8152968 [label="ForLoop8152968  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop8152968 -> 8152456;
	ForLoop8152968 -> _JOIN_8152968;
	ForLoop7989567 [label="ForLoop7989567  for (i=0; i<=cbv_1; i=i+25) {...",shape=box];
	ForLoop7989567 -> 7989349;
	ForLoop7989567 -> _JOIN_7989567;
	ForLoop8150100 [label="ForLoop8150100  for (j=(min(ny-1,jjj+2047))-(((min(ny-1,jjj+2047))-(jjj)+1)%17)+1; j<=min(ny-1,jjj+2047); j=j+1) {...",shape=box];
	ForLoop8150100 -> 8189973;
	ForLoop8150100 -> _JOIN_8150100;
	7989635 [label="7989635  y[i]=0.0;...",shape=box];
	7989635 -> _JOIN_7989636;
	8220527 [label="8220527  tmp[(i+20)]=scv_47;...",shape=box];
	8153012 [label="8153012  for (k=kkk; k<=min(ny-1,kkk+255); k=k+1) ...",shape=box];
	8153012 -> ForLoop8153057;
	8130396 [label="8130396  int j;...",shape=box];
	8130396 -> ForLoop8134849;
	8220509 [label="8220509  double scv_47, scv_48, scv_49, scv_50, scv_51, scv_52, scv_53, scv_54;...",shape=box];
	8188427 [label="8188427  double scv_28, scv_29, scv_30, scv_31, scv_32, scv_33, scv_34, scv_35;...",shape=box];
	ForLoop8153092 [label="ForLoop8153092  for (i=(min(nx-1,ii+255))-(((min(nx-1,ii+255))-(it)+1)%24)+1; i<=min(nx-1,ii+255); i=i+1) {...",shape=box];
	ForLoop8153092 -> 8224054;
	ForLoop8153092 -> _JOIN_8153092;
	ForLoop8150102 [label="ForLoop8150102  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop8150102 -> 8135720;
	ForLoop8150102 -> _JOIN_8150102;
	ForLoop8153090 [label="ForLoop8153090  for (kkk=0; kkk<=ny-1; kkk=kkk+256) {...",shape=box];
	ForLoop8153090 -> 8153012;
	ForLoop8153090 -> _JOIN_8153090;
	ForLoop8153096 [label="ForLoop8153096  for (iii=0; iii<=nx-1; iii=iii+512) {...",shape=box];
	ForLoop8153096 -> ForLoop8153095;
	ForLoop8153096 -> _JOIN_8153096;
	ForLoop8153095 [label="ForLoop8153095  for (ii=iii; ii<=min(nx-1,iii+256); ii=ii+256) {...",shape=box];
	ForLoop8153095 -> ForLoop8135472;
	ForLoop8153095 -> _JOIN_8153095;
	8159252 [label="8159252  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	7989902 [label="7989902  register int cbv_2, cbv_3;...",shape=box];
	ForLoop8152898 [label="ForLoop8152898  for (j=jjj; j<=min(ny-1,jjj+2047)-16; j=j+17) {...",shape=box];
	ForLoop8152898 -> 8152496;
	ForLoop8152898 -> _JOIN_8152898;
	8152456 [label="8152456  int j;...",shape=box];
	8152456 -> ForLoop8152898;
	ForLoop8152966 [label="ForLoop8152966  for (j=(min(ny-1,jjj+2047))-(((min(ny-1,jjj+2047))-(jjj)+1)%17)+1; j<=min(ny-1,jjj+2047); j=j+1) {...",shape=box];
	ForLoop8152966 -> 8152965;
	ForLoop8152966 -> _JOIN_8152966;
	8135720 [label="8135720  int j;...",shape=box];
	_JOIN_8152389 [label="_JOIN_8152389None...",shape=box];
	_JOIN_8152389 -> ForLoop8153092;
	_JOIN_8152968 [label="_JOIN_8152968None...",shape=box];
	_JOIN_8152968 -> ForLoop8153090;
	8152496 [label="8152496  scv_72=scv_72+A[i*ny+j]*x[j];...",shape=box];
	7988932 [label="7988932  int i;...",shape=box];
	ForLoop8135123 [label="ForLoop8135123  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop8135123 -> 8130396;
	ForLoop8135123 -> _JOIN_8135123;
	8135468 [label="8135468  for (k=kkk; k<=min(ny-1,kkk+255); k=k+1) ...",shape=box];
	8135468 -> _JOIN_8135470;
	ForLoop8135121 [label="ForLoop8135121  for (j=(min(ny-1,jjj+2047))-(((min(ny-1,jjj+2047))-(jjj)+1)%17)+1; j<=min(ny-1,jjj+2047); j=j+1) {...",shape=box];
	ForLoop8135121 -> 8159902;
	ForLoop8135121 -> _JOIN_8135121;
	_JOIN_8152387 [label="_JOIN_8152387None...",shape=box];
	_JOIN_8152387 -> 8220527;
	_JOIN_7989567 [label="_JOIN_7989567None...",shape=box];
	_JOIN_7989567 -> 7989902;
	ForLoop8135470 [label="ForLoop8135470  for (kkk=0; kkk<=ny-1; kkk=kkk+256) {...",shape=box];
	ForLoop8135470 -> expected=9369846271501.798828
actual=9369846271501.798828
8135167;
	ForLoop8135470 -> _JOIN_8135470;
	_JOIN_8152966 [label="_JOIN_8152966None...",shape=box];
	_JOIN_8152966 -> _JOIN_8152968;
	ForLoop8135472 [label="ForLoop8135472  for (it=ii; it<=min(nx-1,ii+255)-7; it=it+8) {...",shape=box];
	ForLoop8135472 -> 8169333;
	ForLoop8135472 -> _JOIN_8135472;
	_JOIN_8150100 [label="_JOIN_8150100None...",shape=box];
	_JOIN_8150100 -> _JOIN_8150102;
	8203554 [label="8203554  double scv_46;...",shape=box];
	7989349 [label="7989349  y[i]=0.0;...",shape=box];
	8223201 [label="8223201  double scv_71;...",shape=box];
	ForLoop8135437 [label="ForLoop8135437  for (k=kkk; k<=min(ny-1,kkk+255); k=k+1) {...",shape=box];
	ForLoop8135437 -> 8164484;
	ForLoop8135437 -> _JOIN_8135437;
	8169333 [label="8169333  double scv_20, scv_21, scv_22, scv_23, scv_24, scv_25, scv_26, scv_27;...",shape=box];
	_JOIN_8135437 [label="_JOIN_8135437None...",shape=box];
	_JOIN_8135437 -> 8135468;
	_JOIN_8153057 [label="_JOIN_8153057None...",shape=box];
	_JOIN_8153057 -> 8153088;
	ForLoop8153057 [label="ForLoop8153057  for (k=kkk; k<=min(ny-1,kkk+255); k=k+1) {...",shape=box];
	ForLoop8153057 -> 8223201;
	ForLoop8153057 -> _JOIN_8153057;
	8164484 [label="8164484  double scv_19;...",shape=box];
	8151672 [label="8151672  for (k=kkk; k<=min(ny-1,kkk+255); k=k+1) ...",shape=box];
	_JOIN_8152898 [label="_JOIN_8152898None...",shape=box];
	_JOIN_8152898 -> ForLoop8152966;
	_JOIN_8149364 [label="_JOIN_8149364None...",shape=box];
	_JOIN_8149364 -> ForLoop8150100;
	8224054 [label="8224054  double scv_72;...",shape=box];
	_JOIN_7989636 [label="_JOIN_7989636None...",shape=box];
	_JOIN_7989636 -> 8130324;
	8135473 [label="8135473  int i;...",shape=box];
	8135473 -> ForLoop8152389;
	_JOIN_8135470 [label="_JOIN_8135470None...",shape=box];
	_JOIN_8135470 -> 8169345;
	8152965 [label="8152965  scv_72=scv_72+A[i*ny+j]*x[j];...",shape=box];
	8152965 -> _JOIN_8152966;
	_JOIN_8135472 [label="_JOIN_8135472None...",shape=box];
	_JOIN_8135472 -> 8135473;
	ForLoop8152387 [label="ForLoop8152387  for (kkk=0; kkk<=ny-1; kkk=kkk+256) {...",shape=box];
	ForLoop8152387 -> 8150146;
	ForLoop8152387 -> _JOIN_8152387;
	ForLoop8152389 [label="ForLoop8152389  for (i=it; i<=min(nx-1,ii+255)-23; i=i+24) {...",shape=box];
	ForLoop8152389 -> 8220509;
	ForLoop8152389 -> _JOIN_8152389;
	8130324 [label="8130324  double x_copy;...",shape=box];
	8135167 [label="8135167  for (k=kkk; k<=min(ny-1,kkk+255); k=k+1) ...",shape=box];
	8135167 -> ForLoop8135437;
	_JOIN_8151641 [label="_JOIN_8151641None...",shape=box];
	_JOIN_8151641 -> 8151672;
	_JOIN_8153095 [label="_JOIN_8153095None...",shape=box];
	_JOIN_8153095 -> _JOIN_8153096;
	ForLoop7989636 [label="ForLoop7989636  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop7989636 -> 7989635;
	ForLoop7989636 -> _JOIN_7989636;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest35.exe __orio_perftest35.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest35.exe  
{'[5, 0, 0, 4, 6, 3, 0, 1, 24, 23, 16, 0, 1, 0, 0, 1, 1, 0]' : 0.090148}
{'[5, 0, 0, 4, 6, 3, 0, 1, 24, 23, 16, 0, 1, 0, 0, 1, 1, 0]' : 0.0897789}
{'[5, 0, 0, 4, 6, 3, 0, 1, 24, 23, 16, 0, 1, 0, 0, 1, 1, 0]' : 0.0898652}
{'[5, 0, 0, 4, 6, 3, 0, 1, 24, 23, 16, 0, 1, 0, 0, 1, 1, 0]' : 0.0897989}
{'[5, 0, 0, 4, 6, 3, 0, 1, 24, 23, 16, 0, 1, 0, 0, 1, 1, 0]' : 0.0898359}
{'[5, 0, 0, 4, 6, 3, 0, 1, 24, 23, 16, 0, 1, 0, 0, 1, 1, 0]' : 0.0898221}
{'[5, 0, 0, 4, 6, 3, 0, 1, 24, 23, 16, 0, 1, 0, 0, 1, 1, 0]' : 0.0899661}
{'[5, 0, 0, 4, 6, 3, 0, 1, 24, 23, 16, 0, 1, 0, 0, 1, 1, 0]' : 0.0897789}
{'[5, 0, 0, 4, 6, 3, 0, 1, 24, 23, 16, 0, 1, 0, 0, 1, 1, 0]' : 0.089721}
{'[5, 0, 0, 4, 6, 3, 0, 1, 24, 23, 16, 0, 1, 0, 0, 1, 1, 0]' : 0.089777}
{'[5, 0, 0, 4, 6, 3, 0, 1, 24, 23, 16, 0, 1, 0, 0, 1, 1, 0]' : 0.089854}
{'[5, 0, 0, 4, 6, 3, 0, 1, 24, 23, 16, 0, 1, 0, 0, 1, 1, 0]' : 0.0900321}
{'[5, 0, 0, 4, 6, 3, 0, 1, 24, 23, 16, 0, 1, 0, 0, 1, 1, 0]' : 0.0897939}
{'[5, 0, 0, 4, 6, 3, 0, 1, 24, 23, 16, 0, 1, 0, 0, 1, 1, 0]' : 0.0908711}
{'[5, 0, 0, 4, 6, 3, 0, 1, 24, 23, 16, 0, 1, 0, 0, 1, 1, 0]' : 0.089808}
{'[5, 0, 0, 4, 6, 3, 0, 1, 24, 23, 16, 0, 1, 0, 0, 1, 1, 0]' : 0.089891}
{'[5, 0, 0, 4, 6, 3, 0, 1, 24, 23, 16, 0, 1, 0, 0, 1, 1, 0]' : 0.0897892}
{'[5, 0, 0, 4, 6, 3, 0, 1, 24, 23, 16, 0, 1, 0, 0, 1, 1, 0]' : 0.0898118}
{'[5, 0, 0, 4, 6, 3, 0, 1, 24, 23, 16, 0, 1, 0, 0, 1, 1, 0]' : 0.0898018}
{'[5, 0, 0, 4, 6, 3, 0, 1, 24, 23, 16, 0, 1, 0, 0, 1, 1, 0]' : 0.0897532}
{'[5, 0, 0, 4, 6, 3, 0, 1, 24, 23, 16, 0, 1, 0, 0, 1, 1, 0]' : 0.089807}
{'[5, 0, 0, 4, 6, 3, 0, 1, 24, 23, 16, 0, 1, 0, 0, 1, 1, 0]' : 0.0898008}
{'[5, 0, 0, 4, 6, 3, 0, 1, 24, 23, 16, 0, 1, 0, 0, 1, 1, 0]' : 0.0898001}
{'[5, 0, 0, 4, 6, 3, 0, 1, 24, 23, 16, 0, 1, 0, 0, 1, 1, 0]' : 0.089855}
{'[5, 0, 0, 4, 6, 3, 0, 1, 24, 23, 16, 0, 1, 0, 0, 1, 1, 0]' : 0.0898879}
{'[5, 0, 0, 4, 6, 3, 0, 1, 24, 23, 16, 0, 1, 0, 0, 1, 1, 0]' : 0.0899181}
{'[5, 0, 0, 4, 6, 3, 0, 1, 24, 23, 16, 0, 1, 0, 0, 1, 1, 0]' : 0.089767}
{'[5, 0, 0, 4, 6, 3, 0, 1, 24, 23, 16, 0, 1, 0, 0, 1, 1, 0]' : 0.090168}
{'[5, 0, 0, 4, 6, 3, 0, 1, 24, 23, 16, 0, 1, 0, 0, 1, 1, 0]' : 0.0898318}
{'[5, 0, 0, 4, 6, 3, 0, 1, 24, 23, 16, 0, 1, 0, 0, 1, 1, 0]' : 0.0898728}

out:
 ["{'[5, 0, 0, 4, 6, 3, 0, 1, 24, 23, 16, 0, 1, 0, 0, 1, 1, 0]' : 0.090148}", "{'[5, 0, 0, 4, 6, 3, 0, 1, 24, 23, 16, 0, 1, 0, 0, 1, 1, 0]' : 0.0897789}", "{'[5, 0, 0, 4, 6, 3, 0, 1, 24, 23, 16, 0, 1, 0, 0, 1, 1, 0]' : 0.0898652}", "{'[5, 0, 0, 4, 6, 3, 0, 1, 24, 23, 16, 0, 1, 0, 0, 1, 1, 0]' : 0.0897989}", "{'[5, 0, 0, 4, 6, 3, 0, 1, 24, 23, 16, 0, 1, 0, 0, 1, 1, 0]' : 0.0898359}", "{'[5, 0, 0, 4, 6, 3, 0, 1, 24, 23, 16, 0, 1, 0, 0, 1, 1, 0]' : 0.0898221}", "{'[5, 0, 0, 4, 6, 3, 0, 1, 24, 23, 16, 0, 1, 0, 0, 1, 1, 0]' : 0.0899661}", "{'[5, 0, 0, 4, 6, 3, 0, 1, 24, 23, 16, 0, 1, 0, 0, 1, 1, 0]' : 0.0897789}", "{'[5, 0, 0, 4, 6, 3, 0, 1, 24, 23, 16, 0, 1, 0, 0, 1, 1, 0]' : 0.089721}", "{'[5, 0, 0, 4, 6, 3, 0, 1, 24, 23, 16, 0, 1, 0, 0, 1, 1, 0]' : 0.089777}", "{'[5, 0, 0, 4, 6, 3, 0, 1, 24, 23, 16, 0, 1, 0, 0, 1, 1, 0]' : 0.089854}", "{'[5, 0, 0, 4, 6, 3, 0, 1, 24, 23, 16, 0, 1, 0, 0, 1, 1, 0]' : 0.0900321}", "{'[5, 0, 0, 4, 6, 3, 0, 1, 24, 23, 16, 0, 1, 0, 0, 1, 1, 0]' : 0.0897939}", "{'[5, 0, 0, 4, 6, 3, 0, 1, 24, 23, 16, 0, 1, 0, 0, 1, 1, 0]' : 0.0908711}", "{'[5, 0, 0, 4, 6, 3, 0, 1, 24, 23, 16, 0, 1, 0, 0, 1, 1, 0]' : 0.089808}", "{'[5, 0, 0, 4, 6, 3, 0, 1, 24, 23, 16, 0, 1, 0, 0, 1, 1, 0]' : 0.089891}", "{'[5, 0, 0, 4, 6, 3, 0, 1, 24, 23, 16, 0, 1, 0, 0, 1, 1, 0]' : 0.0897892}", "{'[5, 0, 0, 4, 6, 3, 0, 1, 24, 23, 16, 0, 1, 0, 0, 1, 1, 0]' : 0.0898118}", "{'[5, 0, 0, 4, 6, 3, 0, 1, 24, 23, 16, 0, 1, 0, 0, 1, 1, 0]' : 0.0898018}", "{'[5, 0, 0, 4, 6, 3, 0, 1, 24, 23, 16, 0, 1, 0, 0, 1, 1, 0]' : 0.0897532}", "{'[5, 0, 0, 4, 6, 3, 0, 1, 24, 23, 16, 0, 1, 0, 0, 1, 1, 0]' : 0.089807}", "{'[5, 0, 0, 4, 6, 3, 0, 1, 24, 23, 16, 0, 1, 0, 0, 1, 1, 0]' : 0.0898008}", "{'[5, 0, 0, 4, 6, 3, 0, 1, 24, 23, 16, 0, 1, 0, 0, 1, 1, 0]' : 0.0898001}", "{'[5, 0, 0, 4, 6, 3, 0, 1, 24, 23, 16, 0, 1, 0, 0, 1, 1, 0]' : 0.089855}", "{'[5, 0, 0, 4, 6, 3, 0, 1, 24, 23, 16, 0, 1, 0, 0, 1, 1, 0]' : 0.0898879}", "{'[5, 0, 0, 4, 6, 3, 0, 1, 24, 23, 16, 0, 1, 0, 0, 1, 1, 0]' : 0.0899181}", "{'[5, 0, 0, 4, 6, 3, 0, 1, 24, 23, 16, 0, 1, 0, 0, 1, 1, 0]' : 0.089767}", "{'[5, 0, 0, 4, 6, 3, 0, 1, 24, 23, 16, 0, 1, 0, 0, 1, 1, 0]' : 0.090168}", "{'[5, 0, 0, 4, 6, 3, 0, 1, 24, 23, 16, 0, 1, 0, 0, 1, 1, 0]' : 0.0898318}", "{'[5, 0, 0, 4, 6, 3, 0, 1, 24, 23, 16, 0, 1, 0, 0, 1, 1, 0]' : 0.0898728}"]
returning from 'run': {'[5, 0, 0, 4, 6, 3, 0, 1, 24, 23, 16, 0, 1, 0, 0, 1, 1, 0]': ([0.090148, 0.0897789, 0.0898652, 0.0897989, 0.0898359, 0.0898221, 0.0899661, 0.0897789, 0.089721, 0.089777, 0.089854, 0.0900321, 0.0897939, 0.0908711, 0.089808, 0.089891, 0.0897892, 0.0898118, 0.0898018, 0.0897532, 0.089807, 0.0898008, 0.0898001, 0.089855, 0.0898879, 0.0899181, 0.089767, 0.090168, 0.0898318, 0.0898728], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.090148, 0.0897789, 0.0898652, 0.0897989, 0.0898359, 0.0898221, 0.0899661, 0.0897789, 0.089721, 0.089777, 0.089854, 0.0900321, 0.0897939, 0.0908711, 0.089808, 0.089891, 0.0897892, 0.0898118, 0.0898018, 0.0897532, 0.089807, 0.0898008, 0.0898001, 0.089855, 0.0898879, 0.0899181, 0.089767, 0.090168, 0.0898318, 0.0898728], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[5, 0, 0, 4, 6, 3, 0, 1, 24, 23, 16, 0, 1, 0, 0, 1, 1, 0]': ([0.090148, 0.0897789, 0.0898652, 0.0897989, 0.0898359, 0.0898221, 0.0899661, 0.0897789, 0.089721, 0.089777, 0.089854, 0.0900321, 0.0897939, 0.0908711, 0.089808, 0.089891, 0.0897892, 0.0898118, 0.0898018, 0.0897532, 0.089807, 0.0898008, 0.0898001, 0.089855, 0.0898879, 0.0899181, 0.089767, 0.090168, 0.0898318, 0.0898728], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [6, 0, 5, 5, 5, 4, 1, 0, 18, 25, 11, 0, 1, 1, 0, 1, 1, 0]
Fixed Factors: {}
Testing candidate 36: [6, 0, 5, 5, 5, 4, 1, 0, 18, 25, 11, 0, 1, 1, 0, 1, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	50
        Max loop nest depth: 	6
        Additions: 		1476
        Multiplications: 	630
        Divisions: 		0
        Logical: 		0
        Reads: 			3065
        Writes: 		586
        Comparisons:		50
        Gotos: 			0
        
digraph CFG {
	_JOIN_8254456 [label="_JOIN_8254456None...",shape=box];
	_JOIN_8254456 -> 8254737;
	ForLoop8254525 [label="ForLoop8254525  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop8254525 -> 8254524;
	ForLoop8254525 -> _JOIN_8254525;
	8425436 [label="8425436  double scv_53;...",shape=box];
	8423760 [label="8423760  double scv_27, scv_28, scv_29, scv_30, scv_31, scv_32, scv_33, scv_34;...",shape=box];
	_JOIN_8387608 [label="_JOIN_8387608None...",shape=box];
	_JOIN_8387608 -> _JOIN_8387610;
	8378774 [label="8378774  for (j=jjj; j<=min(ny-1,jjj+1023); j=j+1) ...",shape=box];
	8396432 [label="8396432  tmp[it]=scv_10;...",shape=box];
	8375885 [label="8375885  for (j=jjj; j<=min(ny-1,jjj+1023); j=j+1) ...",shape=box];
	8375885 -> ForLoop8378219;
	_JOIN_8378221 [label="_JOIN_8378221None...",shape=box];
	_JOIN_8378221 -> ForLoop8378476;
	_JOIN_8388029 [label="_JOIN_8388029None...",shape=box];
	_JOIN_8388029 -> _JOIN_8388030;
	8253965 [label="8253965  int i;...",shape=box];
	ForLoop8388029 [label="ForLoop8388029  for (k=kk; k<=min(ny-1,kk+255); k=k+1) {...",shape=box];
	ForLoop8388029 -> 8425436;
	ForLoop8388029 -> _JOIN_8388029;
	ForLoop8387606 [label="ForLoop8387606  for (k=kk; k<=min(ny-1,kk+255); k=k+1) {...",shape=box];
	ForLoop8387606 -> 8414740;
	ForLoop8387606 -> _JOIN_8387606;
	ForLoop8387608 [label="ForLoop8387608  for (kk=kkk; kk<=min(ny-1,kkk+256); kk=kk+256) {...",shape=box];
	ForLoop8387608 -> ForLoop8387606;
	ForLoop8387608 -> _JOIN_8387608;
	_JOIN_8387612 [label="_JOIN_8387612None...",shape=box];
	_JOIN_8387612 -> ForLoop8388033;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 8253965;
	8254292 [label="8254292  y[i]=0.0;...",shape=box];
	8426027 [label="8426027  tmp[i]=scv_54;...",shape=box];
	8426027 -> _JOIN_8388033;
	ForLoop8388030 [label="ForLoop8388030  for (kk=kkk; kk<=min(ny-1,kkk+256); kk=kk+256) {...",shape=box];
	ForLoop8388030 -> ForLoop8388029;
	ForLoop8388030 -> _JOIN_8388030;
	ForLoop8378474 [label="ForLoop8378474  for (k=kk; k<=min(ny-1,kk+255); k=k+1) {...",shape=box];
	ForLoop8378474 -> 8393701;
	ForLoop8378474 -> _JOIN_8378474;
	ForLoop8378475 [label="ForLoop8378475  for (kk=kkk; kk<=min(ny-1,kkk+256); kk=kk+256) {...",shape=box];
	ForLoop8378475 -> ForLoop8378474;
	ForLoop8378475 -> _JOIN_8378475;
	ForLoop8378476 [label="ForLoop8378476  for (kkk=0; kkk<=ny-1; kkk=kkk+512) {...",shape=box];
	ForLoop8378476 -> ForLoop8378475;
	ForLoop8378476 -> _JOIN_8378476;
	8254524 [label="8254524  y[i]=0.0;...",shape=box];
	8254524 -> _JOIN_8254525;
	ForLoop8378478 [label="ForLoop8378478  for (it=ii; it<=min(nx-1,ii+511)-7; it=it+8) {...",shape=box];
	ForLoop8378478 -> 8396420;
	ForLoop8378478 -> _JOIN_8378478;
	_JOIN_8388033 [label="_JOIN_8388033None...",shape=box];
	_JOIN_8388033 -> _JOIN_8388036;
	8375783 [label="8375783  double x_copy[1024];...",shape=box];
	ForLoop8387959 [label="ForLoop8387959  for (jjj=0; jjj<=ny-1; jjj=jjj+1024) {...",shape=box];
	ForLoop8387959 -> 8387709;
	ForLoop8387959 -> _JOIN_8387959;
	ForLoop8378221 [label="ForLoop8378221  for (jjj=0; jjj<=ny-1; jjj=jjj+1024) {...",shape=box];
	ForLoop8378221 -> 8375885;
	ForLoop8378221 -> _JOIN_8378221;
	_JOIN_8387610 [label="_JOIN_8387610None...",shape=box];
	_JOIN_8387610 -> 8423778;
	_JOIN_8378474 [label="_JOIN_8378474None...",shape=box];
	_JOIN_8378474 -> _JOIN_8378475;
	_JOIN_8378475 [label="_JOIN_8378475None...",shape=box];
	_JOIN_8378475 -> _JOIN_8378476;
	_JOIN_8378476 [label="_JOIN_8378476None...",shape=box];
	_JOIN_8378476 -> 8396432;
	_JOIN_8388030 [label="_JOIN_8388030None...",shape=box];
	_JOIN_8388030 -> _JOIN_8388031;
	8423778 [label="8423778  tmp[(i+20)]=scv_27;...",shape=box];
	_JOIN_8388037 [label="_JOIN_8388037None...",shape=box];
	_JOIN_8378219 [label="_JOIN_8378219None...",shape=box];
	_JOIN_8378219 -> _JOIN_8378221;
	8387709 [label="8387709  for (j=jjj; j<=min(ny-1,jjj+1023); j=j+1) ...",shape=box];
	8387709 -> ForLoop8387957;
	8396420 [label="8396420  double scv_10, scv_11, scv_12, scv_13, scv_14, scv_15, scv_16, scv_17;...",shape=box];
	ForLoop8387612 [label="ForLoop8387612  for (i=it; i<=min(nx-1,ii+511)-25; i=i+26) {...",shape=box];
	ForLoop8387612 -> 8423760;
	ForLoop8387612 -> _JOIN_8387612;
	8387752 [label="8387752  scv_54=scv_54+A[i*ny+jt]*x_copy[(jt-jjj)];...",shape=box];
	ForLoop8387610 [label="ForLoop8387610  for (kkk=0; kkk<=ny-1; kkk=kkk+512) {...",shape=box];
	ForLoop8387610 -> ForLoop8387608;
	ForLoop8387610 -> _JOIN_8387610;
	8391263 [label="8391263  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	ForLoop8386885 [label="ForLoop8386885  for (jjj=0; jjj<=ny-1; jjj=jjj+1024) {...",shape=box];
	ForLoop8386885 -> 8378774;
	ForLoop8386885 -> _JOIN_8386885;
	_JOIN_8254525 [label="_JOIN_8254525None...",shape=box];
	_JOIN_8254525 -> 8375783;
	ForLoop8254456 [label="ForLoop8254456  for (i=0; i<=cbv_1; i=i+19) {...",shape=box];
	ForLoop8254456 -> 8254292;
	ForLoop8254456 -> _JOIN_8254456;
	ForLoop8388033 [label="ForLoop8388033  for (i=(min(nx-1,ii+511))-(((min(nx-1,ii+511))-(it)+1)%26)+1; i<=min(nx-1,ii+511); i=i+1) {...",shape=box];
	ForLoop8388033 -> 8426015;
	ForLoop8388033 -> _JOIN_8388033;
	_JOIN_8388036 [label="_JOIN_8388036None...",shape=box];
	_JOIN_8388036 -> _JOIN_8388037;
	ForLoop8388031 [label="ForLoop8388031  for (kkk=0; kkk<=ny-1; kkk=kkk+512) {...",shape=box];
	ForLoop8388031 -> ForLoop8388030;
	ForLoop8388031 -> _JOIN_8388031;
	_JOIN_8387606 [label="_JOIN_8387606None...",shape=box];
	_JOIN_8387606 -> _JOIN_8387608;
	ForLoop8388037 [label="ForLoop8388037  for (iii=0; iii<=nx-1; iii=iii+1024) {...",shape=box];
	ForLoop8388037 -> ForLoop8388036;
	ForLoop8388037 -> _JOIN_8388037;
	ForLoop8388036 [label="ForLoop8388036  for (ii=iii; ii<=min(nx-1,iii+512); ii=ii+512) {...",shape=box];
	ForLoop8388036 -> ForLoop8378478;
	ForLoop8388036 -> _JOIN_8388036;
	_JOIN_8388031 [label="_JOIN_8388031None...",shape=box];
	_JOIN_8388031 -> 8426027;
	8414740 [label="8414740  double scv_26;...",shape=box];
	8393701 [label="8393701  double scv_9;...",shape=box];
	8254737 [label="8254737  register int cbv_2, cbv_3;...",shape=box];
	_JOIN_8387957 [label="_JOIN_8387957None...",shape=box];
	_JOIN_8387957 -> _JOIN_8387959;
	_JOIN_8386885 [label="_JOIN_8386885None...",shape=box];
	_JOIN_8386885 -> ForLoop8387610;
	8378479 [label="8378479  int i;...",shape=box];
	8378479 -> ForLoop8387612;
	_JOIN_8387959 [label="_JOIN_8387959None...",shape=box];
	_JOIN_8387959 -> ForLoop8388031;
	_JOIN_8378478 [label="_JOIN_8378478None...",shape=box];
	_JOIN_8378478 -> 8378479;
	8406665 [label="8406665  double scv_18, scv_19, scv_20, scv_21, scv_22, scv_23, scv_24, scv_25;...",shape=box];
	ForLoop8386883 [label="ForLoop8386883  for (jt=jjj; jt<=min(ny-1,jjj+1023)-7; jt=jt+8) {...",shape=box];
	ForLoop8386883 -> 8406665;
	ForLoop8386883 -> _JOIN_8386883;
	ForLoop8expected=9369846271501.798828
actual=9369846271501.798828
387957 [label="ForLoop8387957  for (jt=jjj; jt<=min(ny-1,jjj+1023)-7; jt=jt+8) {...",shape=box];
	ForLoop8387957 -> 8387752;
	ForLoop8387957 -> _JOIN_8387957;
	ForLoop8378219 [label="ForLoop8378219  for (jt=jjj; jt<=min(ny-1,jjj+1023)-7; jt=jt+8) {...",shape=box];
	ForLoop8378219 -> 8391263;
	ForLoop8378219 -> _JOIN_8378219;
	8426015 [label="8426015  double scv_54;...",shape=box];
	_JOIN_8386883 [label="_JOIN_8386883None...",shape=box];
	_JOIN_8386883 -> _JOIN_8386885;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest36.exe __orio_perftest36.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest36.exe  
{'[6, 0, 5, 5, 5, 4, 1, 0, 18, 25, 11, 0, 1, 1, 0, 1, 1, 0]' : 0.0909951}
{'[6, 0, 5, 5, 5, 4, 1, 0, 18, 25, 11, 0, 1, 1, 0, 1, 1, 0]' : 0.0906179}
{'[6, 0, 5, 5, 5, 4, 1, 0, 18, 25, 11, 0, 1, 1, 0, 1, 1, 0]' : 0.0905781}
{'[6, 0, 5, 5, 5, 4, 1, 0, 18, 25, 11, 0, 1, 1, 0, 1, 1, 0]' : 0.0905859}
{'[6, 0, 5, 5, 5, 4, 1, 0, 18, 25, 11, 0, 1, 1, 0, 1, 1, 0]' : 0.0906539}
{'[6, 0, 5, 5, 5, 4, 1, 0, 18, 25, 11, 0, 1, 1, 0, 1, 1, 0]' : 0.0906072}
{'[6, 0, 5, 5, 5, 4, 1, 0, 18, 25, 11, 0, 1, 1, 0, 1, 1, 0]' : 0.0906298}
{'[6, 0, 5, 5, 5, 4, 1, 0, 18, 25, 11, 0, 1, 1, 0, 1, 1, 0]' : 0.0906191}
{'[6, 0, 5, 5, 5, 4, 1, 0, 18, 25, 11, 0, 1, 1, 0, 1, 1, 0]' : 0.090776}
{'[6, 0, 5, 5, 5, 4, 1, 0, 18, 25, 11, 0, 1, 1, 0, 1, 1, 0]' : 0.090636}
{'[6, 0, 5, 5, 5, 4, 1, 0, 18, 25, 11, 0, 1, 1, 0, 1, 1, 0]' : 0.090632}
{'[6, 0, 5, 5, 5, 4, 1, 0, 18, 25, 11, 0, 1, 1, 0, 1, 1, 0]' : 0.090565}
{'[6, 0, 5, 5, 5, 4, 1, 0, 18, 25, 11, 0, 1, 1, 0, 1, 1, 0]' : 0.090662}
{'[6, 0, 5, 5, 5, 4, 1, 0, 18, 25, 11, 0, 1, 1, 0, 1, 1, 0]' : 0.090904}
{'[6, 0, 5, 5, 5, 4, 1, 0, 18, 25, 11, 0, 1, 1, 0, 1, 1, 0]' : 0.0905881}
{'[6, 0, 5, 5, 5, 4, 1, 0, 18, 25, 11, 0, 1, 1, 0, 1, 1, 0]' : 0.0916491}
{'[6, 0, 5, 5, 5, 4, 1, 0, 18, 25, 11, 0, 1, 1, 0, 1, 1, 0]' : 0.0906429}
{'[6, 0, 5, 5, 5, 4, 1, 0, 18, 25, 11, 0, 1, 1, 0, 1, 1, 0]' : 0.0907331}
{'[6, 0, 5, 5, 5, 4, 1, 0, 18, 25, 11, 0, 1, 1, 0, 1, 1, 0]' : 0.0906861}
{'[6, 0, 5, 5, 5, 4, 1, 0, 18, 25, 11, 0, 1, 1, 0, 1, 1, 0]' : 0.090569}
{'[6, 0, 5, 5, 5, 4, 1, 0, 18, 25, 11, 0, 1, 1, 0, 1, 1, 0]' : 0.090615}
{'[6, 0, 5, 5, 5, 4, 1, 0, 18, 25, 11, 0, 1, 1, 0, 1, 1, 0]' : 0.0905998}
{'[6, 0, 5, 5, 5, 4, 1, 0, 18, 25, 11, 0, 1, 1, 0, 1, 1, 0]' : 0.0905881}
{'[6, 0, 5, 5, 5, 4, 1, 0, 18, 25, 11, 0, 1, 1, 0, 1, 1, 0]' : 0.0905821}
{'[6, 0, 5, 5, 5, 4, 1, 0, 18, 25, 11, 0, 1, 1, 0, 1, 1, 0]' : 0.090642}
{'[6, 0, 5, 5, 5, 4, 1, 0, 18, 25, 11, 0, 1, 1, 0, 1, 1, 0]' : 0.090909}
{'[6, 0, 5, 5, 5, 4, 1, 0, 18, 25, 11, 0, 1, 1, 0, 1, 1, 0]' : 0.0906849}
{'[6, 0, 5, 5, 5, 4, 1, 0, 18, 25, 11, 0, 1, 1, 0, 1, 1, 0]' : 0.0906231}
{'[6, 0, 5, 5, 5, 4, 1, 0, 18, 25, 11, 0, 1, 1, 0, 1, 1, 0]' : 0.0905969}
{'[6, 0, 5, 5, 5, 4, 1, 0, 18, 25, 11, 0, 1, 1, 0, 1, 1, 0]' : 0.0906792}

out:
 ["{'[6, 0, 5, 5, 5, 4, 1, 0, 18, 25, 11, 0, 1, 1, 0, 1, 1, 0]' : 0.0909951}", "{'[6, 0, 5, 5, 5, 4, 1, 0, 18, 25, 11, 0, 1, 1, 0, 1, 1, 0]' : 0.0906179}", "{'[6, 0, 5, 5, 5, 4, 1, 0, 18, 25, 11, 0, 1, 1, 0, 1, 1, 0]' : 0.0905781}", "{'[6, 0, 5, 5, 5, 4, 1, 0, 18, 25, 11, 0, 1, 1, 0, 1, 1, 0]' : 0.0905859}", "{'[6, 0, 5, 5, 5, 4, 1, 0, 18, 25, 11, 0, 1, 1, 0, 1, 1, 0]' : 0.0906539}", "{'[6, 0, 5, 5, 5, 4, 1, 0, 18, 25, 11, 0, 1, 1, 0, 1, 1, 0]' : 0.0906072}", "{'[6, 0, 5, 5, 5, 4, 1, 0, 18, 25, 11, 0, 1, 1, 0, 1, 1, 0]' : 0.0906298}", "{'[6, 0, 5, 5, 5, 4, 1, 0, 18, 25, 11, 0, 1, 1, 0, 1, 1, 0]' : 0.0906191}", "{'[6, 0, 5, 5, 5, 4, 1, 0, 18, 25, 11, 0, 1, 1, 0, 1, 1, 0]' : 0.090776}", "{'[6, 0, 5, 5, 5, 4, 1, 0, 18, 25, 11, 0, 1, 1, 0, 1, 1, 0]' : 0.090636}", "{'[6, 0, 5, 5, 5, 4, 1, 0, 18, 25, 11, 0, 1, 1, 0, 1, 1, 0]' : 0.090632}", "{'[6, 0, 5, 5, 5, 4, 1, 0, 18, 25, 11, 0, 1, 1, 0, 1, 1, 0]' : 0.090565}", "{'[6, 0, 5, 5, 5, 4, 1, 0, 18, 25, 11, 0, 1, 1, 0, 1, 1, 0]' : 0.090662}", "{'[6, 0, 5, 5, 5, 4, 1, 0, 18, 25, 11, 0, 1, 1, 0, 1, 1, 0]' : 0.090904}", "{'[6, 0, 5, 5, 5, 4, 1, 0, 18, 25, 11, 0, 1, 1, 0, 1, 1, 0]' : 0.0905881}", "{'[6, 0, 5, 5, 5, 4, 1, 0, 18, 25, 11, 0, 1, 1, 0, 1, 1, 0]' : 0.0916491}", "{'[6, 0, 5, 5, 5, 4, 1, 0, 18, 25, 11, 0, 1, 1, 0, 1, 1, 0]' : 0.0906429}", "{'[6, 0, 5, 5, 5, 4, 1, 0, 18, 25, 11, 0, 1, 1, 0, 1, 1, 0]' : 0.0907331}", "{'[6, 0, 5, 5, 5, 4, 1, 0, 18, 25, 11, 0, 1, 1, 0, 1, 1, 0]' : 0.0906861}", "{'[6, 0, 5, 5, 5, 4, 1, 0, 18, 25, 11, 0, 1, 1, 0, 1, 1, 0]' : 0.090569}", "{'[6, 0, 5, 5, 5, 4, 1, 0, 18, 25, 11, 0, 1, 1, 0, 1, 1, 0]' : 0.090615}", "{'[6, 0, 5, 5, 5, 4, 1, 0, 18, 25, 11, 0, 1, 1, 0, 1, 1, 0]' : 0.0905998}", "{'[6, 0, 5, 5, 5, 4, 1, 0, 18, 25, 11, 0, 1, 1, 0, 1, 1, 0]' : 0.0905881}", "{'[6, 0, 5, 5, 5, 4, 1, 0, 18, 25, 11, 0, 1, 1, 0, 1, 1, 0]' : 0.0905821}", "{'[6, 0, 5, 5, 5, 4, 1, 0, 18, 25, 11, 0, 1, 1, 0, 1, 1, 0]' : 0.090642}", "{'[6, 0, 5, 5, 5, 4, 1, 0, 18, 25, 11, 0, 1, 1, 0, 1, 1, 0]' : 0.090909}", "{'[6, 0, 5, 5, 5, 4, 1, 0, 18, 25, 11, 0, 1, 1, 0, 1, 1, 0]' : 0.0906849}", "{'[6, 0, 5, 5, 5, 4, 1, 0, 18, 25, 11, 0, 1, 1, 0, 1, 1, 0]' : 0.0906231}", "{'[6, 0, 5, 5, 5, 4, 1, 0, 18, 25, 11, 0, 1, 1, 0, 1, 1, 0]' : 0.0905969}", "{'[6, 0, 5, 5, 5, 4, 1, 0, 18, 25, 11, 0, 1, 1, 0, 1, 1, 0]' : 0.0906792}"]
returning from 'run': {'[6, 0, 5, 5, 5, 4, 1, 0, 18, 25, 11, 0, 1, 1, 0, 1, 1, 0]': ([0.0909951, 0.0906179, 0.0905781, 0.0905859, 0.0906539, 0.0906072, 0.0906298, 0.0906191, 0.090776, 0.090636, 0.090632, 0.090565, 0.090662, 0.090904, 0.0905881, 0.0916491, 0.0906429, 0.0907331, 0.0906861, 0.090569, 0.090615, 0.0905998, 0.0905881, 0.0905821, 0.090642, 0.090909, 0.0906849, 0.0906231, 0.0905969, 0.0906792], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.0909951, 0.0906179, 0.0905781, 0.0905859, 0.0906539, 0.0906072, 0.0906298, 0.0906191, 0.090776, 0.090636, 0.090632, 0.090565, 0.090662, 0.090904, 0.0905881, 0.0916491, 0.0906429, 0.0907331, 0.0906861, 0.090569, 0.090615, 0.0905998, 0.0905881, 0.0905821, 0.090642, 0.090909, 0.0906849, 0.0906231, 0.0905969, 0.0906792], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 5, 5, 5, 4, 1, 0, 18, 25, 11, 0, 1, 1, 0, 1, 1, 0]': ([0.0909951, 0.0906179, 0.0905781, 0.0905859, 0.0906539, 0.0906072, 0.0906298, 0.0906191, 0.090776, 0.090636, 0.090632, 0.090565, 0.090662, 0.090904, 0.0905881, 0.0916491, 0.0906429, 0.0907331, 0.0906861, 0.090569, 0.090615, 0.0905998, 0.0905881, 0.0905821, 0.090642, 0.090909, 0.0906849, 0.0906231, 0.0905969, 0.0906792], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Measurements: [0.10087113333333333, 0.11217060000000001, 0.08176990999999999, 0.18140330000000005, 0.18404503333333336, 0.17909713333333335, 0.16750340000000002, 0.2101675666666666, 0.09845446666666668, 0.08303707666666667, 0.10415553333333333, 0.15701723333333334, 0.11150569999999999, 0.25831266666666663, 0.22669696666666664, 0.14729426666666665, 0.15209153333333333, 0.12001679999999999, 0.14170013333333334, 0.19011483333333334, 0.14954119999999999, 0.08080377000000001, 0.24831846666666665, 0.28220223333333333, 0.17422683333333333, 0.13704193333333334, 0.1264347, 0.15609533333333336, 0.07741639666666665, 0.13776983333333334, 0.08957124333333333, 0.17205489999999998, 0.16670620000000003, 0.07852285666666667, 0.08988688666666668, 0.09069501333333331]
   T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
1     4    2    1    2    6    3       0       0   23   0  20  27    1    0
2     5    2    5    3    3    5       0       0   21   9   0  29    0    0
3     0    6    6    2    4    5       0       1    5   0  28  19    1    0
4     0    0    1    2    0    1       1       1   29  17  20   0    0    1
5     6    1    1    0    2    5       1       0   15   0   9  14    0    1
6     3    5    0    1    0    1       0       0   23   2   0  16    2    0
7     5    3    5    4    4    0       0       1   19   0  16  22    0    2
8     5    3    4    0    4    5       1       1   13  29   0  23    0    0
9     1    6    2    4    5    1       1       1   16  28   0  29    1    0
10    6    0    4    6    1    6       1       1    5   0   8  28    1    1
11    0    2    1    5    2    6       0       0   23   1  10   0    0    0
12    3    0    3    4    3    4       0       1    3  28   0  25    2    0
13    5    5    0    0    4    2       0       0    8  25   0   5    0    1
14    5    3    1    6    2    5       1       0    5   5  27   0    2    0
15    0    0    3    2    2    5       0       1   28  11  28   0    2    0
16    1    3    6    4    0    5       1       0   12  18   0  29    0    0
17    3    1    5    4    0    0       0       0    3  25  14   0    0    2
18    1    0    4    5    3    5       0       0   27   8   0   1    0    0
19    1    4    5    2    3    0       1       0    5  20  19   0    0    0
20    6    1    4    4    0    3       0       1    2   1   7   0    2    0
21    2    0    2    1    3    4       1       0    2  29   0  19    0    0
22    0    6    6    0    6    6       0       0   13   4   1   0    1    1
23    1    4    2    6    0    1       1       1   28  28   0  15    0    1
24    4    1    5    2    3    0       1       1    7  22  20   0    0    0
25    1    5    0    2    3    1       1       1    1   9   0  28    0    1
26    3    5    3    4    3    5       0       0   27  26   4   0    0    2
27    3    3    0    4    4    1       0       1    1   3   6   0    0    0
28    3    3    5    0    1    0       1       1   10   0   2  28    2    0
29    0    1    3    3    5    1       0       0    1   9   0  25    0    1
30    5    2    2    3    0    1       0       0   22   0  28  19    0    0
31    0    4    1    4    6    2       1       1   27   0   7  16    1    1
32    3    4    0    2    3    6       1       0    1   0  14  24    0    0
33    4    0    2    2    5    3       0       0    4   0  25  18    0    2
34    6    6    3    5    6    1       1       0   25   1  21   0    1    0
35    5    0    0    4    6    3       0       1   24  23  16   0    1    0
36    6    0    5    5    5    4       1       0   18  25  11   0    1    1
   RT_K SCR VEC1 VEC2  cost_mean
1     1   0    0    0 0.10087113
2     0   0    1    0 0.11217060
3     1   1    1    0 0.08176991
4     1   0    0    0 0.18140330
5     1   0    1    0 0.18404503
6     0   1    1    0 0.17909713
7     0   1    0    1 0.16750340
8     2   1    0    1 0.21016757
9     1   0    1    1 0.09845447
10    0   1    1    1 0.08303708
11    2   1    0    1 0.10415553
12    0   1    0    1 0.15701723
13    1   1    1    1 0.11150570
14    0   0    0    1 0.25831267
15    0   1    1    0 0.22669697
16    2   1    0    0 0.14729427
17    0   0    1    1 0.15209153
18    1   0    0    1 0.12001680
19    2   1    1    0 0.14170013
20    0   1    0    0 0.19011483
21    0   1    1    1 0.14954120
22    0   1    0    1 0.08080377
23    1   0    1    0 0.24831847
24    0   0    0    1 0.28220223
25    0   1    0    0 0.17422683
26    0   1    0    0 0.13704193
27    2   0    1    1 0.12643470
28    0   1    1    1 0.15609533
29    1   1    0    0 0.07741640
30    0   1    1    1 0.13776983
31    0   0    1    1 0.08957124
32    0   0    0    0 0.17205490
33    0   0    1    0 0.16670620
34    1   1    0    0 0.07852286
35    0   1    1    0 0.08988689
36    0   1    1    0 0.09069501

Step Space Names:  [1] "T1_I"    "T1_J"    "T1_K"    "T2_I"    "T2_J"    "T2_K"    "ACOPY_x"
 [8] "ACOPY_y" "U1_I"    "U_I"     "U_J"     "U_K"     "RT_I"    "RT_J"   
[15] "RT_K"    "SCR"     "VEC1"    "VEC2"   

Heteroscedasticity Test p-value: 0.000274351304994
Power Transform Step:
Heteroscedasticity Test p-value: 0.0259566372328
Regression Step:            Df Sum Sq Mean Sq F value   Pr(>F)    
T1_I         1 0.0637  0.0637   0.456 0.508706    
T1_J         1 0.2287  0.2287   1.635 0.218152    
T1_K         1 0.0977  0.0977   0.699 0.414706    
T2_I         1 0.2620  0.2620   1.874 0.188883    
T2_J         1 2.4942  2.4942  17.838 0.000572 ***
T2_K         1 0.0743  0.0743   0.532 0.475824 expected=9369846271501.798828
actual=9369846271501.798828
   
ACOPY_x      1 0.2427  0.2427   1.736 0.205187    
ACOPY_y      1 0.1736  0.1736   1.241 0.280689    
U1_I         1 0.0032  0.0032   0.023 0.881994    
U_I          1 0.1685  0.1685   1.205 0.287658    
U_J          1 0.3446  0.3446   2.465 0.134869    
U_K          1 0.0360  0.0360   0.257 0.618593    
RT_I         1 0.0071  0.0071   0.051 0.824719    
RT_J         1 0.0106  0.0106   0.076 0.785923    
RT_K         1 0.0608  0.0608   0.435 0.518549    
SCR          1 0.4387  0.4387   3.137 0.094441 .  
VEC1         1 0.6614  0.6614   4.731 0.044035 *  
VEC2         1 0.0027  0.0027   0.019 0.891652    
Residuals   17 2.3770  0.1398                     
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Predicting Best
Identical predictions (tol = 1e-5): 1
Getting fixed variables
Fixed Variables: {'T2_J': 6, 'VEC1': 1}
Pruning Data
Dimensions of Pruned Data: [1] 32392    18
Pruning Model
Pruned Search Space Size: 18
Best Predicted:        T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
194932    0    1    4    6    6    3       0       0   24   4   0   2    0    0
       RT_K SCR VEC1 VEC2
194932    2   1    1    1

Pruned Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC2']
Fixed Factors: {'T2_J': 6, 'VEC1': 1}
Fixed Factors: {'T2_J': 6, 'VEC1': 1}
Length of requested configs: 1
Code stats:
        Number of loops: 	4
        Max loop nest depth: 	2
        Additions: 		12
        Multiplications: 	4
        Divisions: 		0
        Logical: 		0
        Reads: 			44
        Writes: 		12
        Comparisons:		4
        Gotos: 			0
        
digraph CFG {
	8442441 [label="8442441  y[i]=0.0;...",shape=box];
	8442441 -> _JOIN_8442442;
	ForLoop8444241 [label="ForLoop8444241  for (j=0; j<=ny-1; j=j+1) ...",shape=box];
	ForLoop8444241 -> 8444240;
	ForLoop8444241 -> _JOIN_8444241;
	ForLoop8442442 [label="ForLoop8442442  for (i=0; i<=ny-1; i++ ) ...",shape=box];
	ForLoop8442442 -> 8442441;
	ForLoop8442442 -> _JOIN_8442442;
	8444943 [label="8444943  double x_copy;...",shape=box];
	ForLoop8444022 [label="ForLoop8444022  for (i=0; i<=nx-1; i=i+1) {...",shape=box];
	ForLoop8444022 -> 8443952;
	ForLoop8444022 -> _JOIN_8444022;
	8443952 [label="8443952  tmp[i]=0;...",shape=box];
	8443952 -> ForLoop8444241;
	8444240 [label="8444240  tmp[i]=tmp[i]+A[i*ny+j]*x[j];...",shape=box];
	8444240 -> _JOIN_8444241;
	_JOIN_8444593 [label="_JOIN_8444593None...",shape=box];
	_JOIN_8444593 -> _JOIN_8444022;
	8444592 [label="8444592  y[k]=y[k]+A[i*ny+k]*tmp[i];...",shape=box];
	8444592 -> _JOIN_8444593;
	_JOIN_8444241 [label="_JOIN_8444241None...",shape=box];
	_JOIN_8444241 -> ForLoop8444593;
	_JOIN_8442442 [label="_JOIN_8442442None...",shape=box];
	_JOIN_8442442 -> 8444943;
	ForLoop8444593 [label="ForLoop8444593  for (k=0; k<=ny-1; k=k+1) ...",shape=box];
	ForLoop8444593 -> 8444592;
	ForLoop8444593 -> _JOIN_8444593;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> ForLoop8442442;
	_JOIN_8444022 [label="_JOIN_8444022None...",shape=box];

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest37.exe __orio_perftest37.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest37.exe  
{'[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.128938}
{'[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.128931}
{'[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.128964}
{'[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.128929}
{'[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.12906}
{'[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.12894}
{'[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.129059}
{'[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.129338}
{'[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.128942}
{'[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.128978}
{'[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.129014}
{'[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.129218}
{'[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.129973}
{'[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.12898}
{'[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.128945}
{'[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.128996}
{'[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.128926}
{'[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.128979}
{'[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.128996}
{'[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.128995}
{'[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.129083}
{'[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.12903}
{'[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.128868}
{'[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.129175}
{'[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.128933}
{'[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.129045}
{'[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.128976}
{'[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.129005}
{'[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.129957}
{'[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.129008}

out:
 ["{'[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.128938}", "{'[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.128931}", "{'[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.128964}", "{'[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.128929}", "{'[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.12906}", "{'[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.12894}", "{'[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.129059}", "{'[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.129338}", "{'[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.128942}", "{'[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.128978}", "{'[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.129014}", "{'[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.129218}", "{'[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.129973}", "{'[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.12898}", "{'[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.128945}", "{'[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.128996}", "{'[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.128926}", "{'[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.128979}", "{'[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.128996}", "{'[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.128995}", "{'[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.129083}", "{'[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.12903}", "{'[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.128868}", "{'[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.129175}", "{'[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.128933}", "{'[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.129045}", "{'[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.128976}", "{'[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.129005}", "{'[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.129957}", "{'[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.129008}"]
returning from 'run': {'[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]': ([0.128938, 0.128931, 0.128964, 0.128929, 0.12906, 0.12894, 0.129059, 0.129338, 0.128942, 0.128978, 0.129014, 0.129218, 0.129973, 0.12898, 0.128945, 0.128996, 0.128926, 0.128979, 0.128996, 0.128995, 0.129083, 0.12903, 0.128868, 0.129175, 0.128933, 0.129045, 0.128976, 0.129005, 0.129957, 0.129008], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.128938, 0.128931, 0.128964, 0.128929, 0.12906, 0.12894, 0.129059, 0.129338, 0.128942, 0.128978, 0.129014, 0.129218, 0.129973, 0.12898, 0.128945, 0.128996, 0.128926, 0.128979, 0.128996, 0.128995, 0.129083, 0.12903, 0.128868, 0.129175, 0.128933, 0.129045, 0.128976, 0.129005, 0.129957, 0.129008], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]': ([0.128938, 0.128931, 0.128964, 0.128929, 0.12906, 0.12894, 0.129059, 0.129338, 0.128942, 0.128978, 0.129014, 0.129218, 0.129973, 0.12898, 0.128945, 0.128996, 0.128926, 0.128979, 0.128996, 0.128995, 0.129083, 0.12903, 0.128868, 0.129175, 0.128933, 0.129045, 0.128976, 0.129005, 0.129957, 0.129008], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
0.1290727
[0, 1, 4, 6, 6, 3, 0, 0, 24, 4, 0, 2, 0, 0, 2, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	29
        Max loop nest depth: 	5
        Additions: 		1125
        Multiplications: 	444
        Divisions: 		0
        Logical: 		0
        Reads: 			2449
        Writes: 		526
        Comparisons:		29
        Gotos: 			0
        
digraph CFG {
	8561882 [label="8561882  register int cbv_19;...",shape=box];
	8542112 [label="8542112  tmp[(i+2)]=scv_54;...",shape=box];
	8549347 [label="8549347  tmp[i]=scv_95;...",shape=box];
	8549347 -> _JOIN_8515484;
	8513273 [label="8513273  int k;...",shape=box];
	8515312 [label="8515312  int k;...",shape=box];
	ForLoop8515482 [label="ForLoop8515482  for (kkk=0; kkk<=ny-1; kkk=kkk+256) {...",shape=box];
	ForLoop8515482 -> ForLoop8515481;
	ForLoop8515482 -> _JOIN_8515482;
	ForLoop8515481 [label="ForLoop8515481  for (kk=kkk; kk<=min(ny-1,kkk+128); kk=kk+128) {...",shape=box];
	ForLoop8515481 -> 8561882;
	ForLoop8515481 -> _JOIN_8515481;
	8514017 [label="8514017  int k;...",shape=box];
	8446481 [label="8446481  y[i]=0.0;...",shape=box];
	8446481 -> _JOIN_8446482;
	8559876 [label="8559876  register int cbv_7, cbv_8;...",shape=box];
	ForLoop8514212 [label="ForLoop8514212  for (kkk=0; kkk<=ny-1; kkk=kkk+256) {...",shape=box];
	ForLoop8514212 -> ForLoop8514210;
	ForLoop8514212 -> _JOIN_8514212;
	ForLoop8514214 [label="ForLoop8514214  for (i=iii; i<=min(nx-1,iii+2047)-4; i=i+5) {...",shape=box];
	ForLoop8514214 -> 8542094;
	ForLoop8514214 -> _JOIN_8514214;
	_JOIN_8515486 [label="_JOIN_8515486None...",shape=box];
	8525102 [label="8525102  double scv_45;...",shape=box];
	_JOIN_8513272 [label="_JOIN_8513272None...",shape=box];
	_JOIN_8513272 -> 8513273;
	ForLoop8515478 [label="ForLoop8515478  for (k=cbv_21; k<=cbv_22; k=k+1) {...",shape=box];
	ForLoop8515478 -> 8544910;
	ForLoop8515478 -> _JOIN_8515478;
	ForLoop8513272 [label="ForLoop8513272  for (kt=kk; kt<=cbv_2; kt=kt+32) {...",shape=box];
	ForLoop8513272 -> 8523296;
	ForLoop8513272 -> _JOIN_8513272;
	ForLoop8513371 [label="ForLoop8513371  for (k=kt; k<=cbv_3; k=k+3) {...",shape=box];
	ForLoop8513371 -> 8524352;
	ForLoop8513371 -> _JOIN_8513371;
	8525587 [label="8525587  double scv_50, scv_51, scv_52;...",shape=box];
	ForLoop8514207 [label="ForLoop8514207  for (k=cbv_16; k<=cbv_17; k=k+1) {...",shape=box];
	ForLoop8514207 -> 8525724;
	ForLoop8514207 -> _JOIN_8514207;
	8515713 [label="8515713  double scv_1;...",shape=box];
	_JOIN_8508011 [label="_JOIN_8508011None...",shape=box];
	_JOIN_8508011 -> ForLoop8514212;
	8560736 [label="8560736  register int cbv_18;...",shape=box];
	ForLoop8446482 [label="ForLoop8446482  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop8446482 -> 8446481;
	ForLoop8446482 -> _JOIN_8446482;
	_JOIN_8513371 [label="_JOIN_8513371None...",shape=box];
	_JOIN_8513371 -> 8559616;
	8524791 [label="8524791  double scv_41;...",shape=box];
	_JOIN_8513631 [label="_JOIN_8513631None...",shape=box];
	_JOIN_8513631 -> 8513633;
	_JOIN_8508009 [label="_JOIN_8508009None...",shape=box];
	_JOIN_8508009 -> _JOIN_8508011;
	8555862 [label="8555862  register int cbv_1;...",shape=box];
	_JOIN_8508007 [label="_JOIN_8508007None...",shape=box];
	_JOIN_8508007 -> _JOIN_8508009;
	8560136 [label="8560136  register int cbv_10, cbv_11;...",shape=box];
	8524654 [label="8524654  double scv_38, scv_39, scv_40;...",shape=box];
	ForLoop8515486 [label="ForLoop8515486  for (iii=0; iii<=nx-1; iii=iii+2048) {...",shape=box];
	ForLoop8515486 -> 8507758;
	ForLoop8515486 -> _JOIN_8515486;
	ForLoop8515484 [label="ForLoop8515484  for (i=(min(nx-1,iii+2047))-(((min(nx-1,iii+2047))-(iii)+1)%5)+1; i<=min(nx-1,iii+2047); i=i+1) {...",shape=box];
	ForLoop8515484 -> 8549335;
	ForLoop8515484 -> _JOIN_8515484;
	8544782 [label="8544782  double scv_91, scv_92, scv_93;...",shape=box];
	8560396 [label="8560396  register int cbv_13, cbv_14;...",shape=box];
	8544910 [label="8544910  double scv_94;...",shape=box];
	_JOIN_8513941 [label="_JOIN_8513941None...",shape=box];
	_JOIN_8513941 -> 8560396;
	8523296 [label="8523296  double scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8, scv_9;...",shape=box];
	_JOIN_8513823 [label="_JOIN_8513823None...",shape=box];
	_JOIN_8513823 -> 8513825;
	_JOIN_8514339 [label="_JOIN_8514339None...",shape=box];
	_JOIN_8514339 -> ForLoop8515482;
	_JOIN_8514338 [label="_JOIN_8514338None...",shape=box];
	_JOIN_8514338 -> _JOIN_8514339;
	_JOIN_8514337 [label="_JOIN_8514337None...",shape=box];
	_JOIN_8514337 -> _JOIN_8514338;
	ForLoop8515410 [label="ForLoop8515410  for (k=kt; k<=cbv_20; k=k+3) {...",shape=box];
	ForLoop8515410 -> 8544782;
	ForLoop8515410 -> _JOIN_8515410;
	_JOIN_8515478 [label="_JOIN_8515478None...",shape=box];
	_JOIN_8515478 -> _JOIN_8515481;
	ForLoop8515311 [label="ForLoop8515311  for (kt=kk; kt<=cbv_19; kt=kt+32) {...",shape=box];
	ForLoop8515311 -> 8543982;
	ForLoop8515311 -> _JOIN_8515311;
	8560656 [label="8560656  register int cbv_16, cbv_17;...",shape=box];
	ForLoop8513749 [label="ForLoop8513749  for (k=kt; k<=cbv_9; k=k+3) {...",shape=box];
	ForLoop8513749 -> 8524965;
	ForLoop8513749 -> _JOIN_8513749;
	8524965 [label="8524965  double scv_42, scv_43, scv_44;...",shape=box];
	ForLoop8513439 [label="ForLoop8513439  for (k=cbv_4; k<=cbv_5; k=k+1) {...",shape=box];
	ForLoop8513439 -> 8524480;
	ForLoop8513439 -> _JOIN_8513439;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 8445778;
	_JOIN_8514015 [label="_JOIN_8514015None...",shape=box];
	_JOIN_8514015 -> 8514017;
	8543982 [label="8543982  double scv_59, scv_60, scv_61, scv_62, scv_63, scv_64, scv_65, scv_66;...",shape=box];
	ForLoop8514015 [label="ForLoop8514015  for (k=cbv_13; k<=cbv_14; k=k+1) {...",shape=box];
	ForLoop8514015 -> 8525413;
	ForLoop8514015 -> _JOIN_8514015;
	_JOIN_8514207 [label="_JOIN_8514207None...",shape=box];
	_JOIN_8514207 -> _JOIN_8514210;
	8445778 [label="8445778  int i;...",shape=box];
	8524480 [label="8524480  double scv_37;...",shape=box];
	8525724 [label="8525724  double scv_53;...",shape=box];
	ForLoop8513823 [label="ForLoop8513823  for (k=cbv_10; k<=cbv_11; k=k+1) {...",shape=box];
	ForLoop8513823 -> 8525102;
	ForLoop8513823 -> _JOIN_8513823;
	8513825 [label="8513825  int k;...",shape=box];
	8514336 [label="8514336  scv_95=scv_95+A[i*ny+j]*x[j];...",shape=box];
	8514336 -> _JOIN_8514337;
	ForLoop8513631 [label="ForLoop8513631  for (k=cbv_7; k<=cbv_8; k=k+1) {...",shape=box];
	ForLoop8513631 -> 8524791;
	ForLoop8513631 -> _JOIN_8513631;
	_JOIN_8513439 [label="_JOIN_8513439None...",shape=box];
	_JOIN_8513439 -> 8513441;
	ForLoop8514210 [label="ForLoop8514210  for (kk=kkk; kk<=min(ny-1,kkk+128); kk=kk+128) {...",shape=box];
	ForLoop8514210 -> 8559401;
	ForLoop8514210 -> _JOIN_8514210;
	8446195 [label="8446195  y[i]=0.0;...",shape=box];
	_JOIN_8515311 [label="_JOIN_8515311None...",shape=box];
	_JOIN_8515311 -> 8515312;
	8549335 [label="8549335  double scv_95;...",shape=box];
	_JOIN_8514214 [label="_JOIN_8514214None...",shape=box];
	_JOIN_8514214 -> ForLoop8515484;
	_JOIN_8514210 [label="_JOIN_8514210None...",shape=box];
	_JOIN_8514210 -> _JOIN_8514212;
	_JOIN_8515410 [label="_JOIN_8515410None...",shape=box];
	_JOIN_8515410 -> 8562097;
	_JOIN_8514212 [label="_JOIN_8514212None...",shape=box];
	_JOIN_8514212 -> 8542112;
	8525413expected=9369846271501.798828
actual=9369846271501.798828
 [label="8525413  double scv_49;...",shape=box];
	8513633 [label="8513633  int k;...",shape=box];
	8542094 [label="8542094  double scv_54, scv_55, scv_56, scv_57, scv_58;...",shape=box];
	ForLoop8513941 [label="ForLoop8513941  for (k=kt; k<=cbv_12; k=k+3) {...",shape=box];
	ForLoop8513941 -> 8525276;
	ForLoop8513941 -> _JOIN_8513941;
	8513441 [label="8513441  int k;...",shape=box];
	8524352 [label="8524352  double scv_34, scv_35, scv_36;...",shape=box];
	8507758 [label="8507758  int i;...",shape=box];
	8507758 -> ForLoop8514214;
	_JOIN_8515481 [label="_JOIN_8515481None...",shape=box];
	_JOIN_8515481 -> _JOIN_8515482;
	8559401 [label="8559401  register int cbv_2;...",shape=box];
	ForLoop8513557 [label="ForLoop8513557  for (k=kt; k<=cbv_6; k=k+3) {...",shape=box];
	ForLoop8513557 -> 8524654;
	ForLoop8513557 -> _JOIN_8513557;
	_JOIN_8514133 [label="_JOIN_8514133None...",shape=box];
	_JOIN_8514133 -> 8560656;
	8562097 [label="8562097  register int cbv_21, cbv_22;...",shape=box];
	8559616 [label="8559616  register int cbv_4, cbv_5;...",shape=box];
	_JOIN_8446482 [label="_JOIN_8446482None...",shape=box];
	_JOIN_8446482 -> 8507743;
	ForLoop8514337 [label="ForLoop8514337  for (j=jj; j<=cbv_18; j=j+1) {...",shape=box];
	ForLoop8514337 -> 8514336;
	ForLoop8514337 -> _JOIN_8514337;
	ForLoop8514133 [label="ForLoop8514133  for (k=kt; k<=cbv_15; k=k+3) {...",shape=box];
	ForLoop8514133 -> 8525587;
	ForLoop8514133 -> _JOIN_8514133;
	ForLoop8508007 [label="ForLoop8508007  for (j=jj; j<=cbv_1; j=j+1) {...",shape=box];
	ForLoop8508007 -> 8515713;
	ForLoop8508007 -> _JOIN_8508007;
	8525276 [label="8525276  double scv_46, scv_47, scv_48;...",shape=box];
	ForLoop8508009 [label="ForLoop8508009  for (jj=jjj; jj<=min(ny-1,jjj+2032); jj=jj+16) {...",shape=box];
	ForLoop8508009 -> 8555862;
	ForLoop8508009 -> _JOIN_8508009;
	_JOIN_8515484 [label="_JOIN_8515484None...",shape=box];
	_JOIN_8515484 -> _JOIN_8515486;
	_JOIN_8515482 [label="_JOIN_8515482None...",shape=box];
	_JOIN_8515482 -> 8549347;
	ForLoop8514339 [label="ForLoop8514339  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop8514339 -> ForLoop8514338;
	ForLoop8514339 -> _JOIN_8514339;
	ForLoop8514338 [label="ForLoop8514338  for (jj=jjj; jj<=min(ny-1,jjj+2032); jj=jj+16) {...",shape=box];
	ForLoop8514338 -> 8560736;
	ForLoop8514338 -> _JOIN_8514338;
	8507743 [label="8507743  double x_copy;...",shape=box];
	_JOIN_8446413 [label="_JOIN_8446413None...",shape=box];
	_JOIN_8446413 -> 8446748;
	ForLoop8446413 [label="ForLoop8446413  for (i=0; i<=cbv_1; i=i+25) {...",shape=box];
	ForLoop8446413 -> 8446195;
	ForLoop8446413 -> _JOIN_8446413;
	_JOIN_8513749 [label="_JOIN_8513749None...",shape=box];
	_JOIN_8513749 -> 8560136;
	_JOIN_8513557 [label="_JOIN_8513557None...",shape=box];
	_JOIN_8513557 -> 8559876;
	ForLoop8508011 [label="ForLoop8508011  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop8508011 -> ForLoop8508009;
	ForLoop8508011 -> _JOIN_8508011;
	8446748 [label="8446748  register int cbv_2, cbv_3;...",shape=box];

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest38.exe __orio_perftest38.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest38.exe  
{'[0, 1, 4, 6, 6, 3, 0, 0, 24, 4, 0, 2, 0, 0, 2, 1, 1, 1]' : 0.0988059}
{'[0, 1, 4, 6, 6, 3, 0, 0, 24, 4, 0, 2, 0, 0, 2, 1, 1, 1]' : 0.0984471}
{'[0, 1, 4, 6, 6, 3, 0, 0, 24, 4, 0, 2, 0, 0, 2, 1, 1, 1]' : 0.098491}
{'[0, 1, 4, 6, 6, 3, 0, 0, 24, 4, 0, 2, 0, 0, 2, 1, 1, 1]' : 0.098583}
{'[0, 1, 4, 6, 6, 3, 0, 0, 24, 4, 0, 2, 0, 0, 2, 1, 1, 1]' : 0.0984719}
{'[0, 1, 4, 6, 6, 3, 0, 0, 24, 4, 0, 2, 0, 0, 2, 1, 1, 1]' : 0.098511}
{'[0, 1, 4, 6, 6, 3, 0, 0, 24, 4, 0, 2, 0, 0, 2, 1, 1, 1]' : 0.0984571}
{'[0, 1, 4, 6, 6, 3, 0, 0, 24, 4, 0, 2, 0, 0, 2, 1, 1, 1]' : 0.09849}
{'[0, 1, 4, 6, 6, 3, 0, 0, 24, 4, 0, 2, 0, 0, 2, 1, 1, 1]' : 0.0985188}
{'[0, 1, 4, 6, 6, 3, 0, 0, 24, 4, 0, 2, 0, 0, 2, 1, 1, 1]' : 0.0987461}
{'[0, 1, 4, 6, 6, 3, 0, 0, 24, 4, 0, 2, 0, 0, 2, 1, 1, 1]' : 0.09952}
{'[0, 1, 4, 6, 6, 3, 0, 0, 24, 4, 0, 2, 0, 0, 2, 1, 1, 1]' : 0.0984819}
{'[0, 1, 4, 6, 6, 3, 0, 0, 24, 4, 0, 2, 0, 0, 2, 1, 1, 1]' : 0.0985439}
{'[0, 1, 4, 6, 6, 3, 0, 0, 24, 4, 0, 2, 0, 0, 2, 1, 1, 1]' : 0.0984862}
{'[0, 1, 4, 6, 6, 3, 0, 0, 24, 4, 0, 2, 0, 0, 2, 1, 1, 1]' : 0.098485}
{'[0, 1, 4, 6, 6, 3, 0, 0, 24, 4, 0, 2, 0, 0, 2, 1, 1, 1]' : 0.0985041}
{'[0, 1, 4, 6, 6, 3, 0, 0, 24, 4, 0, 2, 0, 0, 2, 1, 1, 1]' : 0.0985029}
{'[0, 1, 4, 6, 6, 3, 0, 0, 24, 4, 0, 2, 0, 0, 2, 1, 1, 1]' : 0.098439}
{'[0, 1, 4, 6, 6, 3, 0, 0, 24, 4, 0, 2, 0, 0, 2, 1, 1, 1]' : 0.0984659}
{'[0, 1, 4, 6, 6, 3, 0, 0, 24, 4, 0, 2, 0, 0, 2, 1, 1, 1]' : 0.0984969}
{'[0, 1, 4, 6, 6, 3, 0, 0, 24, 4, 0, 2, 0, 0, 2, 1, 1, 1]' : 0.098597}
{'[0, 1, 4, 6, 6, 3, 0, 0, 24, 4, 0, 2, 0, 0, 2, 1, 1, 1]' : 0.0984888}
{'[0, 1, 4, 6, 6, 3, 0, 0, 24, 4, 0, 2, 0, 0, 2, 1, 1, 1]' : 0.0986071}
{'[0, 1, 4, 6, 6, 3, 0, 0, 24, 4, 0, 2, 0, 0, 2, 1, 1, 1]' : 0.098495}
{'[0, 1, 4, 6, 6, 3, 0, 0, 24, 4, 0, 2, 0, 0, 2, 1, 1, 1]' : 0.098788}
{'[0, 1, 4, 6, 6, 3, 0, 0, 24, 4, 0, 2, 0, 0, 2, 1, 1, 1]' : 0.0984561}
{'[0, 1, 4, 6, 6, 3, 0, 0, 24, 4, 0, 2, 0, 0, 2, 1, 1, 1]' : 0.0984981}
{'[0, 1, 4, 6, 6, 3, 0, 0, 24, 4, 0, 2, 0, 0, 2, 1, 1, 1]' : 0.098464}
{'[0, 1, 4, 6, 6, 3, 0, 0, 24, 4, 0, 2, 0, 0, 2, 1, 1, 1]' : 0.098506}
{'[0, 1, 4, 6, 6, 3, 0, 0, 24, 4, 0, 2, 0, 0, 2, 1, 1, 1]' : 0.0985038}

out:
 ["{'[0, 1, 4, 6, 6, 3, 0, 0, 24, 4, 0, 2, 0, 0, 2, 1, 1, 1]' : 0.0988059}", "{'[0, 1, 4, 6, 6, 3, 0, 0, 24, 4, 0, 2, 0, 0, 2, 1, 1, 1]' : 0.0984471}", "{'[0, 1, 4, 6, 6, 3, 0, 0, 24, 4, 0, 2, 0, 0, 2, 1, 1, 1]' : 0.098491}", "{'[0, 1, 4, 6, 6, 3, 0, 0, 24, 4, 0, 2, 0, 0, 2, 1, 1, 1]' : 0.098583}", "{'[0, 1, 4, 6, 6, 3, 0, 0, 24, 4, 0, 2, 0, 0, 2, 1, 1, 1]' : 0.0984719}", "{'[0, 1, 4, 6, 6, 3, 0, 0, 24, 4, 0, 2, 0, 0, 2, 1, 1, 1]' : 0.098511}", "{'[0, 1, 4, 6, 6, 3, 0, 0, 24, 4, 0, 2, 0, 0, 2, 1, 1, 1]' : 0.0984571}", "{'[0, 1, 4, 6, 6, 3, 0, 0, 24, 4, 0, 2, 0, 0, 2, 1, 1, 1]' : 0.09849}", "{'[0, 1, 4, 6, 6, 3, 0, 0, 24, 4, 0, 2, 0, 0, 2, 1, 1, 1]' : 0.0985188}", "{'[0, 1, 4, 6, 6, 3, 0, 0, 24, 4, 0, 2, 0, 0, 2, 1, 1, 1]' : 0.0987461}", "{'[0, 1, 4, 6, 6, 3, 0, 0, 24, 4, 0, 2, 0, 0, 2, 1, 1, 1]' : 0.09952}", "{'[0, 1, 4, 6, 6, 3, 0, 0, 24, 4, 0, 2, 0, 0, 2, 1, 1, 1]' : 0.0984819}", "{'[0, 1, 4, 6, 6, 3, 0, 0, 24, 4, 0, 2, 0, 0, 2, 1, 1, 1]' : 0.0985439}", "{'[0, 1, 4, 6, 6, 3, 0, 0, 24, 4, 0, 2, 0, 0, 2, 1, 1, 1]' : 0.0984862}", "{'[0, 1, 4, 6, 6, 3, 0, 0, 24, 4, 0, 2, 0, 0, 2, 1, 1, 1]' : 0.098485}", "{'[0, 1, 4, 6, 6, 3, 0, 0, 24, 4, 0, 2, 0, 0, 2, 1, 1, 1]' : 0.0985041}", "{'[0, 1, 4, 6, 6, 3, 0, 0, 24, 4, 0, 2, 0, 0, 2, 1, 1, 1]' : 0.0985029}", "{'[0, 1, 4, 6, 6, 3, 0, 0, 24, 4, 0, 2, 0, 0, 2, 1, 1, 1]' : 0.098439}", "{'[0, 1, 4, 6, 6, 3, 0, 0, 24, 4, 0, 2, 0, 0, 2, 1, 1, 1]' : 0.0984659}", "{'[0, 1, 4, 6, 6, 3, 0, 0, 24, 4, 0, 2, 0, 0, 2, 1, 1, 1]' : 0.0984969}", "{'[0, 1, 4, 6, 6, 3, 0, 0, 24, 4, 0, 2, 0, 0, 2, 1, 1, 1]' : 0.098597}", "{'[0, 1, 4, 6, 6, 3, 0, 0, 24, 4, 0, 2, 0, 0, 2, 1, 1, 1]' : 0.0984888}", "{'[0, 1, 4, 6, 6, 3, 0, 0, 24, 4, 0, 2, 0, 0, 2, 1, 1, 1]' : 0.0986071}", "{'[0, 1, 4, 6, 6, 3, 0, 0, 24, 4, 0, 2, 0, 0, 2, 1, 1, 1]' : 0.098495}", "{'[0, 1, 4, 6, 6, 3, 0, 0, 24, 4, 0, 2, 0, 0, 2, 1, 1, 1]' : 0.098788}", "{'[0, 1, 4, 6, 6, 3, 0, 0, 24, 4, 0, 2, 0, 0, 2, 1, 1, 1]' : 0.0984561}", "{'[0, 1, 4, 6, 6, 3, 0, 0, 24, 4, 0, 2, 0, 0, 2, 1, 1, 1]' : 0.0984981}", "{'[0, 1, 4, 6, 6, 3, 0, 0, 24, 4, 0, 2, 0, 0, 2, 1, 1, 1]' : 0.098464}", "{'[0, 1, 4, 6, 6, 3, 0, 0, 24, 4, 0, 2, 0, 0, 2, 1, 1, 1]' : 0.098506}", "{'[0, 1, 4, 6, 6, 3, 0, 0, 24, 4, 0, 2, 0, 0, 2, 1, 1, 1]' : 0.0985038}"]
returning from 'run': {'[0, 1, 4, 6, 6, 3, 0, 0, 24, 4, 0, 2, 0, 0, 2, 1, 1, 1]': ([0.0988059, 0.0984471, 0.098491, 0.098583, 0.0984719, 0.098511, 0.0984571, 0.09849, 0.0985188, 0.0987461, 0.09952, 0.0984819, 0.0985439, 0.0984862, 0.098485, 0.0985041, 0.0985029, 0.098439, 0.0984659, 0.0984969, 0.098597, 0.0984888, 0.0986071, 0.098495, 0.098788, 0.0984561, 0.0984981, 0.098464, 0.098506, 0.0985038], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.0988059, 0.0984471, 0.098491, 0.098583, 0.0984719, 0.098511, 0.0984571, 0.09849, 0.0985188, 0.0987461, 0.09952, 0.0984819, 0.0985439, 0.0984862, 0.098485, 0.0985041, 0.0985029, 0.098439, 0.0984659, 0.0984969, 0.098597, 0.0984888, 0.0986071, 0.098495, 0.098788, 0.0984561, 0.0984981, 0.098464, 0.098506, 0.0985038], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 4, 6, 6, 3, 0, 0, 24, 4, 0, 2, 0, 0, 2, 1, 1, 1]': ([0.0988059, 0.0984471, 0.098491, 0.098583, 0.0984719, 0.098511, 0.0984571, 0.09849, 0.0985188, 0.0987461, 0.09952, 0.0984819, 0.0985439, 0.0984862, 0.098485, 0.0985041, 0.0985029, 0.098439, 0.0984659, 0.0984969, 0.098597, 0.0984888, 0.0986071, 0.098495, 0.098788, 0.0984561, 0.0984981, 0.098464, 0.098506, 0.0985038], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Slowdown: 0.763613994284
Budget: 36/1
Step 1
 ~ T1_I + T1_J + T1_K + T2_I + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC2
Fixed Factors: {'T2_J': 6, 'VEC1': 1}
Full data does not fit on budget
Computing D-Optimal Design
Updating Constraints
Updated Constraint: True and (((T2_I ==1 )or (T2_I %T1_I ==0 ))) and (((T2_J ==1 )or (T2_J %T1_J ==0 ))) and (((T2_K ==1 )or (T2_K %T1_K ==0 ))) and ((RT_I *RT_J +RT_I *RT_K +RT_J *RT_K <=150 )) and (((U_I ==1 )or (U_J ==1 )or (U_K ==1 )))
Computing D-Optimal Design with 32 experiments
Design Formula:  ~ T1_I + T1_J + T1_K + T2_I + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC2
Starting "optMonteCarlo" run
       var low high center nLevels round factor   mix
1     T1_I   0    6      0       7     0  FALSE FALSE
2     T1_J   0    6      0       7     0  FALSE FALSE
3     T1_K   0    6      0       7     0  FALSE FALSE
4     T2_I   0    6      0       7     0  FALSE FALSE
5     T2_K   0    6      0       7     0  FALSE FALSE
6  ACOPY_x   0    1      0       2     0  FALSE FALSE
7  ACOPY_y   0    1      0       2     0  FALSE FALSE
8     U1_I   0   29      0      30     0  FALSE FALSE
9      U_I   0   29      0      30     0  FALSE FALSE
10     U_J   0   29      0      30     0  FALSE FALSE
11     U_K   0   29      0      30     0  FALSE FALSE
12    RT_I   0    2      0       3     0  FALSE FALSE
13    RT_J   0    2      0       3     0  FALSE FALSE
14    RT_K   0    2      0       3     0  FALSE FALSE
15     SCR   0    1      0       2     0  FALSE FALSE
16    VEC2   0    1      0       2     0  FALSE FALSE

   T1_I T1_J T1_K T2_I T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J RT_K SCR
1     1    1    5    0    3       0       1   15  25  29   0    1    0    1   1
2     5    6    1    4    5       0       0   25   0  13  18    1    0    0   1
3     0    0    4    1    2       1       0    5  12   0  21    0    0    0   1
4     1    6    1    1    0       0       1   14  10   0  28    2    0    0   0
5     4    3    6    2    0       0       0   23   0   2  12    0    1    1   1
6     6    6    1    0    6       1       1   17   3   5   0    0    2    0   0
7     5    4    5    0    6       0       0    9  14  24   0    0    0    0   1
8     1    1    1    5    3       0       1    7   0  15   4    2    0    0   0
9     3    3    0    4    1       0       1   26   4   0  23    0    0    0   1
10    6    6    5    4    3       1       1    3  12  18   0    1    0    1   1
11    5    5    1    5    1       1       1   13   0  25  23    0    2    0   1
12    0    6    1    5    6       1       0   12  25   5   0    1    0    1   0
13    6    0    4    5    2       0       1   14   0  28  29    0    0    0   0
14    4    0    1    4    6       1       0   29   0  21  16    1    0    1   0
15    5    5    0    0    2       1       1   26  26   0   1    2    0    0   1
16    1    5    5    1    5       1       1   26   0   7   2    0    0    0   0
17    4    2    2    3    0       1       0   28   0  25  27    2    0    0   0
18    5 WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = kkk
   1    2    5    2       0       1   19   3   9   0    0    0    2   1
19    4    5    0    6    3       0       0    3  29   0  26    1    1    0   1
20    1    6    5    0    5       0       0   27  22   0  20    0    1    1   0
21    3    5    0    4    0       1       0    1  22   9   0    0    2    0   0
22    1    6    4    5    4       0       1   10   1   2   0    1    1    0   1
23    4    6    2    6    4       1       0    4   0  22   5    0    0    2   0
24    2    1    4    6    5       1       1    3  18   0  28    1    0    1   1
25    6    3    2    4    6       0       1    5  24   0  22    1    1    0   0
26    6    3    4    6    3       1       1   20  28  20   0    0    0    1   0
27    2    1    6    5    6       1       0   19  22   0  11    1    1    0   1
28    0    2    0    4    6       0       1    0  23  25   0    1    1    0   1
29    6    2    1    0    1       0       0    8  23   0  13    0    0    0   0
30    1    6    2    4    1       0       1   23  28  22   0    0    0    1   0
31    2    2    2    0    3       1       0   10   0   5  25    0    0    2   1
32    5    2    5    4    0       1       1   27  16   4   0    0    2    0   0
   VEC2
1     1
2     1
3     1
4     1
5     0
6     1
7     0
8     0
9     0
10    0
11    0
12    1
13    1
14    0
15    0
16    0
17    1
18    1
19    0
20    1
21    0
22    1
23    0
24    1
25    0
26    1
27    0
28    1
29    1
30    0
31    0
32    0

D-Efficiency Approximation: [1] 0.706

Measuring design of size 16
Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Design Line: [1, 1, 5, 0, 3, 0, 1, 15, 25, 29, 0, 1, 0, 1, 1, 1]
Fixed Factors: {'T2_J': 6, 'VEC1': 1}
Testing candidate 1: [1, 1, 5, 0, 6, 3, 0, 1, 15, 25, 29, 0, 1, 0, 1, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	80
        Max loop nest depth: 	5
        Additions: 		5828
        Multiplications: 	2730
        Divisions: 		0
        Logical: 		0
        Reads: 			11106
        Writes: 		1821
        Comparisons:		80
        Gotos: 			0
        
digraph CFG {
	8562710 [label="8562710  y[i]=0.0;...",shape=box];
	_JOIN_8838608 [label="_JOIN_8838608None...",shape=box];
	_JOIN_8838608 -> 8838609;
	ForLoop8562847 [label="ForLoop8562847  for (i=0; i<=cbv_1; i=i+16) {...",shape=box];
	ForLoop8562847 -> 8562710;
	ForLoop8562847 -> _JOIN_8562847;
	9050569 [label="9050569  tmp[(i+20)]=scv_87;...",shape=box];
	ForLoop8836002 [label="ForLoop8836002  for (jj=jjj; jj<=min(ny-1,jjj+2032); jj=jj+16) {...",shape=box];
	ForLoop8836002 -> 8827856;
	ForLoop8836002 -> _JOIN_8836002;
	ForLoop8836003 [label="ForLoop8836003  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop8836003 -> ForLoop8836002;
	ForLoop8836003 -> _JOIN_8836003;
	8562428 [label="8562428  int i;...",shape=box];
	_JOIN_8562847 [label="_JOIN_8562847None...",shape=box];
	_JOIN_8562847 -> 8563101;
	ForLoop8874398 [label="ForLoop8874398  for (kt=kk; kt<=cbv_8; kt=kt+8) {...",shape=box];
	ForLoop8874398 -> 9012888;
	ForLoop8874398 -> _JOIN_8874398;
	_JOIN_8865853 [label="_JOIN_8865853None...",shape=box];
	_JOIN_8865853 -> _JOIN_8865855;
	9056311 [label="9056311  double scv_113, scv_114, scv_115, scv_116, scv_117, scv_118, scv_119, scv_120;...",shape=box];
	8827784 [label="8827784  double x_copy;...",shape=box];
	ForLoop8876503 [label="ForLoop8876503  for (i=(min(nx-1,ii+15))-(((min(nx-1,ii+15))-(it)+1)%26)+1; i<=min(nx-1,ii+15); i=i+1) {...",shape=box];
	ForLoop8876503 -> 9058303;
	ForLoop8876503 -> _JOIN_8876503;
	ForLoop8876060 [label="ForLoop8876060  for (j=jj; j<=cbv_9; j=j+30) {...",shape=box];
	ForLoop8876060 -> 8875333;
	ForLoop8876060 -> _JOIN_8876060;
	9114865 [label="9114865  register int cbv_10, cbv_11;...",shape=box];
	_JOIN_8876503 [label="_JOIN_8876503None...",shape=box];
	_JOIN_8876503 -> _JOIN_8876506;
	_JOIN_8876131 [label="_JOIN_8876131None...",shape=box];
	_JOIN_8876131 -> ForLoop8876501;
	_JOIN_8876501 [label="_JOIN_8876501None...",shape=box];
	_JOIN_8876501 -> 9058315;
	8874429 [label="8874429  for (k=kk; k<=min(ny-1,kk+255); k=k+1) ...",shape=box];
	_JOIN_8876468 [label="_JOIN_8876468None...",shape=box];
	_JOIN_8876468 -> 8876499;
	_JOIN_8876506 [label="_JOIN_8876506None...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 8562428;
	9110016 [label="9110016  register int cbv_6, cbv_7;...",shape=box];
	8838609 [label="8838609  int i;...",shape=box];
	8838609 -> ForLoop8875208;
	ForLoop8865059 [label="ForLoop8865059  for (j=jj; j<=cbv_5; j=j+30) {...",shape=box];
	ForLoop8865059 -> 8953760;
	ForLoop8865059 -> _JOIN_8865059;
	8906141 [label="8906141  double scv_32, scv_33, scv_34, scv_35, scv_36, scv_37, scv_38, scv_39;...",shape=box];
	8865901 [label="8865901  for (k=kk; k<=min(ny-1,kk+255); k=k+1) ...",shape=box];
	_JOIN_8876060 [label="_JOIN_8876060None...",shape=box];
	_JOIN_8876060 -> 9114865;
	_JOIN_8875208 [label="_JOIN_8875208None...",shape=box];
	_JOIN_8875208 -> ForLoop8876503;
	8827856 [label="8827856  int j;...",shape=box];
	8838604 [label="8838604  for (k=kk; k<=min(ny-1,kk+255); k=k+1) ...",shape=box];
	8838604 -> _JOIN_8838606;
	8563101 [label="8563101  register int cbv_2, cbv_3;...",shape=box];
	ForLoop8865855 [label="ForLoop8865855  for (jj=jjj; jj<=min(ny-1,jjj+2032); jj=jj+16) {...",shape=box];
	ForLoop8865855 -> 8838892;
	ForLoop8865855 -> _JOIN_8865855;
	ForLoop8865857 [label="ForLoop8865857  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop8865857 -> ForLoop8865855;
	ForLoop8865857 -> _JOIN_8865857;
	9050551 [label="9050551  double scv_87, scv_88, scv_89, scv_90, scv_91, scv_92, scv_93, scv_94;...",shape=box];
	8876127 [label="8876127  scv_121=scv_121+A[i*ny+j]*x[j];...",shape=box];
	8876127 -> _JOIN_8876128;
	ForLoop8865853 [label="ForLoop8865853  for (j=cbv_6; j<=cbv_7; j=j+1) {...",shape=box];
	ForLoop8865853 -> 8955887;
	ForLoop8865853 -> _JOIN_8865853;
	8836047 [label="8836047  for (k=kk; k<=min(ny-1,kk+255); k=k+1) ...",shape=box];
	8876499 [label="8876499  for (k=kk; k<=min(ny-1,kk+255); k=k+1) ...",shape=box];
	8876499 -> _JOIN_8876501;
	_JOIN_8835728 [label="_JOIN_8835728None...",shape=box];
	_JOIN_8835728 -> 9093043;
	_JOIN_8876128 [label="_JOIN_8876128None...",shape=box];
	_JOIN_8876128 -> _JOIN_8876130;
	ForLoop8836000 [label="ForLoop8836000  for (j=cbv_2; j<=cbv_3; j=j+1) {...",shape=box];
	ForLoop8836000 -> 8888253;
	ForLoop8836000 -> _JOIN_8836000;
	8562915 [label="8562915  y[i]=0.0;...",shape=box];
	8562915 -> _JOIN_8562916;
	_JOIN_8836002 [label="_JOIN_8836002None...",shape=box];
	_JOIN_8836002 -> _JOIN_8836003;
	_JOIN_8836003 [label="_JOIN_8836003None...",shape=box];
	_JOIN_8836003 -> ForLoop8838606;
	_JOIN_8836000 [label="_JOIN_8836000None...",shape=box];
	_JOIN_8836000 -> _JOIN_8836002;
	_JOIN_8865855 [label="_JOIN_8865855None...",shape=box];
	_JOIN_8865855 -> _JOIN_8865857;
	ForLoop8838608 [label="ForLoop8838608  for (it=ii; it<=min(nx-1,ii+15)-7; it=it+8) {...",shape=box];
	ForLoop8838608 -> 8917370;
	ForLoop8838608 -> _JOIN_8838608;
	ForLoop8838606 [label="ForLoop8838606  for (kk=0; kk<=ny-1; kk=kk+256) {...",shape=box];
	ForLoop8838606 -> 8836047;
	ForLoop8838606 -> _JOIN_8838606;
	ForLoop8562916 [label="ForLoop8562916  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop8562916 -> 8562915;
	ForLoop8562916 -> _JOIN_8562916;
	_JOIN_8562916 [label="_JOIN_8562916None...",shape=box];
	_JOIN_8562916 -> 8827784;
	8917370 [label="8917370  double scv_40, scv_41, scv_42, scv_43, scv_44, scv_45, scv_46, scv_47;...",shape=box];
	8876175 [label="8876175  for (k=kk; k<=min(ny-1,kk+255); k=k+1) ...",shape=box];
	ForLoop8875206 [label="ForLoop8875206  for (kk=0; kk<=ny-1; kk=kk+256) {...",shape=box];
	ForLoop8875206 -> 8865901;
	ForLoop8875206 -> _JOIN_8875206;
	ForLoop8875208 [label="ForLoop8875208  for (i=it; i<=min(nx-1,ii+15)-25; i=i+26) {...",shape=box];
	ForLoop8875208 -> 9050551;
	ForLoop8875208 -> _JOIN_8875208;
	_JOIN_8838573 [label="_JOIN_8838expected=9369846271501.798828
actual=9369846271501.798828
573None...",shape=box];
	_JOIN_8838573 -> 8838604;
	_JOIN_8865059 [label="_JOIN_8865059None...",shape=box];
	_JOIN_8865059 -> 9110016;
	8875293 [label="8875293  int j;...",shape=box];
	ForLoop8876501 [label="ForLoop8876501  for (kk=0; kk<=ny-1; kk=kk+256) {...",shape=box];
	ForLoop8876501 -> 8876175;
	ForLoop8876501 -> _JOIN_8876501;
	8887368 [label="8887368  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	_JOIN_8865857 [label="_JOIN_8865857None...",shape=box];
	_JOIN_8865857 -> ForLoop8875206;
	ForLoop8876506 [label="ForLoop8876506  for (ii=0; ii<=nx-1; ii=ii+16) {...",shape=box];
	ForLoop8876506 -> ForLoop8838608;
	ForLoop8876506 -> _JOIN_8876506;
	ForLoop8876468 [label="ForLoop8876468  for (kt=kk; kt<=cbv_12; kt=kt+8) {...",shape=box];
	ForLoop8876468 -> 9056311;
	ForLoop8876468 -> _JOIN_8876468;
	9093043 [label="9093043  register int cbv_2, cbv_3;...",shape=box];
	8838892 [label="8838892  int j;...",shape=box];
	9058303 [label="9058303  double scv_121;...",shape=box];
	9058315 [label="9058315  tmp[i]=scv_121;...",shape=box];
	9058315 -> _JOIN_8876503;
	ForLoop8876130 [label="ForLoop8876130  for (jj=jjj; jj<=min(ny-1,jjj+2032); jj=jj+16) {...",shape=box];
	ForLoop8876130 -> 8875293;
	ForLoop8876130 -> _JOIN_8876130;
	ForLoop8838573 [label="ForLoop8838573  for (kt=kk; kt<=cbv_4; kt=kt+8) {...",shape=box];
	ForLoop8838573 -> 8906141;
	ForLoop8838573 -> _JOIN_8838573;
	9012888 [label="9012888  double scv_79, scv_80, scv_81, scv_82, scv_83, scv_84, scv_85, scv_86;...",shape=box];
	8917382 [label="8917382  tmp[it]=scv_40;...",shape=box];
	8875333 [label="8875333  scv_121=scv_121+A[i*ny+j]*x[j];...",shape=box];
	ForLoop8876131 [label="ForLoop8876131  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop8876131 -> ForLoop8876130;
	ForLoop8876131 -> _JOIN_8876131;
	8955887 [label="8955887  double scv_78;...",shape=box];
	8888253 [label="8888253  double scv_31;...",shape=box];
	ForLoop8876128 [label="ForLoop8876128  for (j=cbv_10; j<=cbv_11; j=j+1) {...",shape=box];
	ForLoop8876128 -> 8876127;
	ForLoop8876128 -> _JOIN_8876128;
	ForLoop8835728 [label="ForLoop8835728  for (j=jj; j<=cbv_1; j=j+30) {...",shape=box];
	ForLoop8835728 -> 8887368;
	ForLoop8835728 -> _JOIN_8835728;
	_JOIN_8874398 [label="_JOIN_8874398None...",shape=box];
	_JOIN_8874398 -> 8874429;
	8953760 [label="8953760  double scv_48, scv_49, scv_50, scv_51, scv_52, scv_53, scv_54, scv_55;...",shape=box];
	_JOIN_8876130 [label="_JOIN_8876130None...",shape=box];
	_JOIN_8876130 -> _JOIN_8876131;
	_JOIN_8838606 [label="_JOIN_8838606None...",shape=box];
	_JOIN_8838606 -> 8917382;
	_JOIN_8875206 [label="_JOIN_8875206None...",shape=box];
	_JOIN_8875206 -> 9050569;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest39.exe __orio_perftest39.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest39.exe  
{'[1, 1, 5, 0, 6, 3, 0, 1, 15, 25, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.080055}
{'[1, 1, 5, 0, 6, 3, 0, 1, 15, 25, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0796461}
{'[1, 1, 5, 0, 6, 3, 0, 1, 15, 25, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0796759}
{'[1, 1, 5, 0, 6, 3, 0, 1, 15, 25, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0796711}
{'[1, 1, 5, 0, 6, 3, 0, 1, 15, 25, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0796578}
{'[1, 1, 5, 0, 6, 3, 0, 1, 15, 25, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0797381}
{'[1, 1, 5, 0, 6, 3, 0, 1, 15, 25, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.079947}
{'[1, 1, 5, 0, 6, 3, 0, 1, 15, 25, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.079711}
{'[1, 1, 5, 0, 6, 3, 0, 1, 15, 25, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.079699}
{'[1, 1, 5, 0, 6, 3, 0, 1, 15, 25, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.079627}
{'[1, 1, 5, 0, 6, 3, 0, 1, 15, 25, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.079742}
{'[1, 1, 5, 0, 6, 3, 0, 1, 15, 25, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0796502}
{'[1, 1, 5, 0, 6, 3, 0, 1, 15, 25, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0796909}
{'[1, 1, 5, 0, 6, 3, 0, 1, 15, 25, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0796831}
{'[1, 1, 5, 0, 6, 3, 0, 1, 15, 25, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.07968}
{'[1, 1, 5, 0, 6, 3, 0, 1, 15, 25, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.079659}
{'[1, 1, 5, 0, 6, 3, 0, 1, 15, 25, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0797019}
{'[1, 1, 5, 0, 6, 3, 0, 1, 15, 25, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0797331}
{'[1, 1, 5, 0, 6, 3, 0, 1, 15, 25, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0797079}
{'[1, 1, 5, 0, 6, 3, 0, 1, 15, 25, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0797732}
{'[1, 1, 5, 0, 6, 3, 0, 1, 15, 25, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.07971}
{'[1, 1, 5, 0, 6, 3, 0, 1, 15, 25, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0796459}
{'[1, 1, 5, 0, 6, 3, 0, 1, 15, 25, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.079742}
{'[1, 1, 5, 0, 6, 3, 0, 1, 15, 25, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0797181}
{'[1, 1, 5, 0, 6, 3, 0, 1, 15, 25, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0796292}
{'[1, 1, 5, 0, 6, 3, 0, 1, 15, 25, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0800269}
{'[1, 1, 5, 0, 6, 3, 0, 1, 15, 25, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0796661}
{'[1, 1, 5, 0, 6, 3, 0, 1, 15, 25, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0797369}
{'[1, 1, 5, 0, 6, 3, 0, 1, 15, 25, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0796869}
{'[1, 1, 5, 0, 6, 3, 0, 1, 15, 25, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.079772}

out:
 ["{'[1, 1, 5, 0, 6, 3, 0, 1, 15, 25, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.080055}", "{'[1, 1, 5, 0, 6, 3, 0, 1, 15, 25, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0796461}", "{'[1, 1, 5, 0, 6, 3, 0, 1, 15, 25, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0796759}", "{'[1, 1, 5, 0, 6, 3, 0, 1, 15, 25, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0796711}", "{'[1, 1, 5, 0, 6, 3, 0, 1, 15, 25, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0796578}", "{'[1, 1, 5, 0, 6, 3, 0, 1, 15, 25, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0797381}", "{'[1, 1, 5, 0, 6, 3, 0, 1, 15, 25, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.079947}", "{'[1, 1, 5, 0, 6, 3, 0, 1, 15, 25, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.079711}", "{'[1, 1, 5, 0, 6, 3, 0, 1, 15, 25, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.079699}", "{'[1, 1, 5, 0, 6, 3, 0, 1, 15, 25, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.079627}", "{'[1, 1, 5, 0, 6, 3, 0, 1, 15, 25, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.079742}", "{'[1, 1, 5, 0, 6, 3, 0, 1, 15, 25, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0796502}", "{'[1, 1, 5, 0, 6, 3, 0, 1, 15, 25, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0796909}", "{'[1, 1, 5, 0, 6, 3, 0, 1, 15, 25, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0796831}", "{'[1, 1, 5, 0, 6, 3, 0, 1, 15, 25, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.07968}", "{'[1, 1, 5, 0, 6, 3, 0, 1, 15, 25, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.079659}", "{'[1, 1, 5, 0, 6, 3, 0, 1, 15, 25, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0797019}", "{'[1, 1, 5, 0, 6, 3, 0, 1, 15, 25, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0797331}", "{'[1, 1, 5, 0, 6, 3, 0, 1, 15, 25, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0797079}", "{'[1, 1, 5, 0, 6, 3, 0, 1, 15, 25, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0797732}", "{'[1, 1, 5, 0, 6, 3, 0, 1, 15, 25, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.07971}", "{'[1, 1, 5, 0, 6, 3, 0, 1, 15, 25, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0796459}", "{'[1, 1, 5, 0, 6, 3, 0, 1, 15, 25, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.079742}", "{'[1, 1, 5, 0, 6, 3, 0, 1, 15, 25, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0797181}", "{'[1, 1, 5, 0, 6, 3, 0, 1, 15, 25, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0796292}", "{'[1, 1, 5, 0, 6, 3, 0, 1, 15, 25, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0800269}", "{'[1, 1, 5, 0, 6, 3, 0, 1, 15, 25, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0796661}", "{'[1, 1, 5, 0, 6, 3, 0, 1, 15, 25, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0797369}", "{'[1, 1, 5, 0, 6, 3, 0, 1, 15, 25, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0796869}", "{'[1, 1, 5, 0, 6, 3, 0, 1, 15, 25, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.079772}"]
returning from 'run': {'[1, 1, 5, 0, 6, 3, 0, 1, 15, 25, 29, 0, 1, 0, 1, 1, 1, 1]': ([0.080055, 0.0796461, 0.0796759, 0.0796711, 0.0796578, 0.0797381, 0.079947, 0.079711, 0.079699, 0.079627, 0.079742, 0.0796502, 0.0796909, 0.0796831, 0.07968, 0.079659, 0.0797019, 0.0797331, 0.0797079, 0.0797732, 0.07971, 0.0796459, 0.079742, 0.0797181, 0.0796292, 0.0800269, 0.0796661, 0.0797369, 0.0796869, 0.079772], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.080055, 0.0796461, 0.0796759, 0.0796711, 0.0796578, 0.0797381, 0.079947, 0.079711, 0.079699, 0.079627, 0.079742, 0.0796502, 0.0796909, 0.0796831, 0.07968, 0.079659, 0.0797019, 0.0797331, 0.0797079, 0.0797732, 0.07971, 0.0796459, 0.079742, 0.0797181, 0.0796292, 0.0800269, 0.0796661, 0.0797369, 0.0796869, 0.079772], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[1, 1, 5, 0, 6, 3, 0, 1, 15, 25, 29, 0, 1, 0, 1, 1, 1, 1]': ([0.080055, 0.0796461, 0.0796759, 0.0796711, 0.0796578, 0.0797381, 0.079947, 0.079711, 0.079699, 0.079627, 0.079742, 0.0796502, 0.0796909, 0.0796831, 0.07968, 0.079659, 0.0797019, 0.0797331, 0.0797079, 0.0797732, 0.07971, 0.0796459, 0.079742, 0.0797181, 0.0796292, 0.0800269, 0.0796661, 0.0797369, 0.0796869, 0.079772], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [5, 6, 1, 4, 5, 0, 0, 25, 0, 13, 18, 1, 0, 0, 1, 1]
Fixed Factors: {'T2_J': 6, 'VEC1': 1}
Testing candidate 2: [5, 6, 1, 4, 6, 5, 0, 0, 25, 0, 13, 18, 1, 0, 0, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	6
        Additions: 		1394
        Multiplications: 	630
        Divisions: 		0
        Logical: 		0
        Reads: 			2803
        Writes: 		516
        Comparisons:		22
        Gotos: 			0
        
digraph CFG {
	_JOIN_9227601 [label="_JOIN_9227601None...",shape=box];
	_JOIN_9227601 -> _JOIN_9227603;
	_JOIN_9227603 [label="_JOIN_9227603None...",shape=box];
	_JOIN_9227603 -> _JOIN_9227604;
	9218277 [label="9218277  double x_copy;...",shape=box];
	_JOIN_9116184 [label="_JOIN_9116184None...",shape=box];
	_JOIN_9116184 -> 9116528;
	9293317 [label="9293317  register int cbv_11, cbv_12;...",shape=box];
	ForLoop9228029 [label="ForLoop9228029  for (j=jj; j<=cbv_7; j=j+14) {...",shape=box];
	ForLoop9228029 -> 9227702;
	ForLoop9228029 -> _JOIN_9228029;
	ForLoop9227350 [label="ForLoop9227350  for (k=kk; k<=cbv_4; k=k+19) {...",shape=box];
	ForLoop9227350 -> 9248374;
	ForLoop9227350 -> _JOIN_9227350;
	9234419 [label="9234419  double scv_15;...",shape=box];
	9265371 [label="9265371  double scv_36, scv_37, scv_38, scv_39, scv_40, scv_41, scv_42, scv_43;...",shape=box];
	_JOIN_9228100 [label="_JOIN_9228100None...",shape=box];
	_JOIN_9228100 -> ForLoop9228749;
	_JOIN_9116253 [label="_JOIN_9116253None...",shape=box];
	_JOIN_9116253 -> 9218277;
	ForLoop9227604 [label="ForLoop9227604  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop9227604 -> ForLoop9227603;
	ForLoop9227604 -> _JOIN_9227604;
	ForLoop9227606 [label="ForLoop9227606  for (it=ii; it<=min(nx-1,ii+255)-7; it=it+8) {...",shape=box];
	ForLoop9227606 -> 9265371;
	ForLoop9227606 -> _JOIN_9227606;
	ForLoop9227601 [label="ForLoop9227601  for (k=cbv_5; k<=cbv_6; k=k+1) {...",shape=box];
	ForLoop9227601 -> 9249359;
	ForLoop9227601 -> _JOIN_9227601;
	9116528 [label="9116528  register int cbv_2, cbv_3;...",shape=box];
	ForLoop9227603 [label="ForLoop9227603  for (kk=kkk; kk<=min(ny-1,kkk+1008); kk=kk+16) {...",shape=box];
	ForLoop9227603 -> 9222338;
	ForLoop9227603 -> _JOIN_9227603;
	ForLoop9228097 [label="ForLoop9228097  for (j=cbv_8; j<=cbv_9; j=j+1) {...",shape=box];
	ForLoop9228097 -> 9228096;
	ForLoop9228097 -> _JOIN_9228097;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 9115525;
	_JOIN_9227604 [label="_JOIN_9227604None...",shape=box];
	_JOIN_9227604 -> 9265383;
	9271675 [label="9271675  double scv_64;...",shape=box];
	9233824 [label="9233824  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	9288666 [label="9288666  register int cbv_2, cbv_3;...",shape=box];
	_JOIN_9227606 [label="_JOIN_9227606None...",shape=box];
	_JOIN_9227606 -> ForLoop9228751;
	_JOIN_9222031 [label="_JOIN_9222031None...",shape=box];
	_JOIN_9222031 -> 9288666;
	9292092 [label="9292092  register int cbv_5, cbv_6;...",shape=box];
	9222338 [label="9222338  int k;...",shape=box];
	9115957 [label="9115957  y[i]=0.0;...",shape=box];
	ForLoop9228746 [label="ForLoop9228746  for (k=cbv_11; k<=cbv_12; k=k+1) {...",shape=box];
	ForLoop9228746 -> 9268754;
	ForLoop9228746 -> _JOIN_9228746;
	9228132 [label="9228132  int k;...",shape=box];
	_JOIN_9228753 [label="_JOIN_9228753None...",shape=box];
	_JOIN_9228753 -> _JOIN_9228754;
	9271687 [label="9271687  tmp[i]=scv_64;...",shape=box];
	9271687 -> _JOIN_9228751;
	9248374 [label="9248374  double scv_16, scv_17, scv_18, scv_19, scv_20, scv_21, scv_22, scv_23;...",shape=box];
	9292523 [label="9292523  register int cbv_8, cbv_9;...",shape=box];
	ForLoop9228749 [label="ForLoop9228749  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop9228749 -> ForLoop9228748;
	ForLoop9228749 -> _JOIN_9228749;
	ForLoop9228748 [label="ForLoop9228748  for (kk=kkk; kk<=min(ny-1,kkk+1008); kk=kk+16) {...",shape=box];
	ForLoop9228748 -> 9228132;
	ForLoop9228748 -> _JOIN_9228748;
	9265383 [label="9265383  tmp[it]=scv_36;...",shape=box];
	9268754 [label="9268754  double scv_63;...",shape=box];
	_JOIN_9228099 [label="_JOIN_9228099None...",shape=box];
	_JOIN_9228099 -> _JOIN_9228100;
	_JOIN_9228097 [label="_JOIN_9228097None...",shape=box];
	_JOIN_9228097 -> _JOIN_9228099;
	ForLoop9228751 [label="ForLoop9228751  for (i=it; i<=min(nx-1,ii+255); i=i+1) {...",shape=box];
	ForLoop9228751 -> 9271675;
	ForLoop9228751 -> _JOIN_9228751;
	9268288 [label="9268288  double scv_44, scv_45, scv_46, scv_47, scv_48, scv_49, scv_50, scv_51;...",shape=box];
	ForLoop9222303 [label="ForLoop9222303  for (j=cbv_2; j<=cbv_3; j=j+1) {...",shape=box];
	ForLoop9222303 -> 9234419;
	ForLoop9222303 -> _JOIN_9222303;
	9116252 [label="9116252  y[i]=0.0;...",shape=box];
	9116252 -> _JOIN_9116253;
	_JOIN_9228751 [label="_JOIN_9228751None...",shape=box];
	_JOIN_9228751 -> _JOIN_9228753;
	ForLoop9228099 [label="ForLoop9228099  for (jj=jjj; jj<=min(ny-1,jjj+1536); jj=jj+512) {...",shape=box];
	ForLoop9228099 -> 9227662;
	ForLoop9228099 -> _JOIN_9228099;
	ForLoop9222306 [label="ForLoop9222306  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop9222306 -> ForLoop9222305;
	ForLoop9222306 -> _JOIN_9222306;
	ForLoop9222305 [label="ForLoop9222305  for (jj=jjj; jj<=min(ny-1,jjj+1536); jj=jj+512) {...",shape=box];
	ForLoop9222305 -> 9218367;
	ForLoop9222305 -> _JOIN_9222305;
	9228096 [label="9228096  scv_64=scv_64+A[i*ny+j]*x[j];...",shape=box];
	9228096 -> _JOIN_9228097;
	_JOIN_9222306 [label="_JOIN_9222306None...",shape=box];
	_JOIN_9222306 -> ForLoop9227604;
	_JOIN_9222305 [label="_JOIN_9222305None...",shape=box];
	_JOIN_9222305 -> _JOIN_9222306;
	_JOIN_9222303 [label="_JOIN_9222303None...",shape=box];
	_JOIN_9222303 -> _JOIN_9222305;
	9218367 [label="9218367  int j;...",shape=box];
	ForLoop9228678 [label="ForLoop9228678  for (k=kk; k<=cbv_10; k=k+19) {...",shape=box];
	ForLoop9228678 -> 9268288;
	ForLoop9228678 -> _JOIN_9228678;
	_JOIN_9228746 [label="_JOIN_9228746None...",shape=box];
	_JOIN_9228746 -> _JOIN_9228748;
	_JOIN_9228029 [label="_JOIN_9228029None...",shape=box];
	_JOIN_9228029 -> 9292523;
	9249359 [label="9249359  double scv_35;...",shape=box];
	ForLoop9116253 [label="ForLoop9116253  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop9116253 -> 9116252;
	ForLoop9116253 -> _JOIN_9116253;
	ForLoop9222031 [label="ForLoop9222031  for (j=jj; j<=cbv_1; j=j+14) {...",shape=box];
	ForLoop9222031 -> 9233824;
	ForLoop9222031 -> _JOIN_9222031;
	9115525 [label="9115525  int i;...",shape=box];
	_JOIN_9228678 [label="_JOIN_9228678None...",shape=box];
	_JOIN_9228678 -> 9293317;
	ForLoop9228754 [label="ForLoop9228754  for (iii=0; iii<=nx-1; iii=iii+512) {...",shape=box];
	ForLoop9228754 -> ForLoop9228753;
	ForLoop9228754 -> _JOIN_9228754;
	9227662 [label="9227662  int j;...",shape=box];
	ForLoop9228753 [label="ForLoop9228753  for (ii=iii; ii<=min(nx-1,iii+256); ii=ii+256) {...",shape=box];
	ForLoop9228753 -> ForLoop9227606;
	ForLoop9228753 -> _JOIN_9228753;
	_JOIN_9227350 [label="_JOIN_9227350None...",shape=box];
	_JOIN_9227350 -> 9292092;
	_JOIN_9228754 [label="_JOIN_9228754None...",shape=box];
	ForLoop9228100 [label="ForLoop9228100  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop9228100 -> ForLoop9228099;
	ForLoop9228100 -> _JOIN_9228100;
	_JOIN_9228749 [label="_JOIN_9228749None...",shape=boexpected=9369846271501.798828
actual=9369846271501.798828
x];
	_JOIN_9228749 -> 9271687;
	_JOIN_9228748 [label="_JOIN_9228748None...",shape=box];
	_JOIN_9228748 -> _JOIN_9228749;
	9227702 [label="9227702  scv_64=scv_64+A[i*ny+j]*x[j];...",shape=box];
	ForLoop9116184 [label="ForLoop9116184  for (i=0; i<=cbv_1; i=i+26) {...",shape=box];
	ForLoop9116184 -> 9115957;
	ForLoop9116184 -> _JOIN_9116184;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest40.exe __orio_perftest40.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest40.exe  
{'[5, 6, 1, 4, 6, 5, 0, 0, 25, 0, 13, 18, 1, 0, 0, 1, 1, 1]' : 0.0868568}
{'[5, 6, 1, 4, 6, 5, 0, 0, 25, 0, 13, 18, 1, 0, 0, 1, 1, 1]' : 0.0863771}
{'[5, 6, 1, 4, 6, 5, 0, 0, 25, 0, 13, 18, 1, 0, 0, 1, 1, 1]' : 0.0865641}
{'[5, 6, 1, 4, 6, 5, 0, 0, 25, 0, 13, 18, 1, 0, 0, 1, 1, 1]' : 0.0864949}
{'[5, 6, 1, 4, 6, 5, 0, 0, 25, 0, 13, 18, 1, 0, 0, 1, 1, 1]' : 0.0864489}
{'[5, 6, 1, 4, 6, 5, 0, 0, 25, 0, 13, 18, 1, 0, 0, 1, 1, 1]' : 0.0864131}
{'[5, 6, 1, 4, 6, 5, 0, 0, 25, 0, 13, 18, 1, 0, 0, 1, 1, 1]' : 0.086411}
{'[5, 6, 1, 4, 6, 5, 0, 0, 25, 0, 13, 18, 1, 0, 0, 1, 1, 1]' : 0.086426}
{'[5, 6, 1, 4, 6, 5, 0, 0, 25, 0, 13, 18, 1, 0, 0, 1, 1, 1]' : 0.0865359}
{'[5, 6, 1, 4, 6, 5, 0, 0, 25, 0, 13, 18, 1, 0, 0, 1, 1, 1]' : 0.0864031}
{'[5, 6, 1, 4, 6, 5, 0, 0, 25, 0, 13, 18, 1, 0, 0, 1, 1, 1]' : 0.0866709}
{'[5, 6, 1, 4, 6, 5, 0, 0, 25, 0, 13, 18, 1, 0, 0, 1, 1, 1]' : 0.086524}
{'[5, 6, 1, 4, 6, 5, 0, 0, 25, 0, 13, 18, 1, 0, 0, 1, 1, 1]' : 0.0864918}
{'[5, 6, 1, 4, 6, 5, 0, 0, 25, 0, 13, 18, 1, 0, 0, 1, 1, 1]' : 0.0864031}
{'[5, 6, 1, 4, 6, 5, 0, 0, 25, 0, 13, 18, 1, 0, 0, 1, 1, 1]' : 0.0864029}
{'[5, 6, 1, 4, 6, 5, 0, 0, 25, 0, 13, 18, 1, 0, 0, 1, 1, 1]' : 0.0864}
{'[5, 6, 1, 4, 6, 5, 0, 0, 25, 0, 13, 18, 1, 0, 0, 1, 1, 1]' : 0.0864191}
{'[5, 6, 1, 4, 6, 5, 0, 0, 25, 0, 13, 18, 1, 0, 0, 1, 1, 1]' : 0.0864539}
{'[5, 6, 1, 4, 6, 5, 0, 0, 25, 0, 13, 18, 1, 0, 0, 1, 1, 1]' : 0.0864828}
{'[5, 6, 1, 4, 6, 5, 0, 0, 25, 0, 13, 18, 1, 0, 0, 1, 1, 1]' : 0.0864038}
{'[5, 6, 1, 4, 6, 5, 0, 0, 25, 0, 13, 18, 1, 0, 0, 1, 1, 1]' : 0.0874562}
{'[5, 6, 1, 4, 6, 5, 0, 0, 25, 0, 13, 18, 1, 0, 0, 1, 1, 1]' : 0.0863981}
{'[5, 6, 1, 4, 6, 5, 0, 0, 25, 0, 13, 18, 1, 0, 0, 1, 1, 1]' : 0.0863931}
{'[5, 6, 1, 4, 6, 5, 0, 0, 25, 0, 13, 18, 1, 0, 0, 1, 1, 1]' : 0.0864379}
{'[5, 6, 1, 4, 6, 5, 0, 0, 25, 0, 13, 18, 1, 0, 0, 1, 1, 1]' : 0.0864089}
{'[5, 6, 1, 4, 6, 5, 0, 0, 25, 0, 13, 18, 1, 0, 0, 1, 1, 1]' : 0.086401}
{'[5, 6, 1, 4, 6, 5, 0, 0, 25, 0, 13, 18, 1, 0, 0, 1, 1, 1]' : 0.0864198}
{'[5, 6, 1, 4, 6, 5, 0, 0, 25, 0, 13, 18, 1, 0, 0, 1, 1, 1]' : 0.0866859}
{'[5, 6, 1, 4, 6, 5, 0, 0, 25, 0, 13, 18, 1, 0, 0, 1, 1, 1]' : 0.0864069}
{'[5, 6, 1, 4, 6, 5, 0, 0, 25, 0, 13, 18, 1, 0, 0, 1, 1, 1]' : 0.086426}

out:
 ["{'[5, 6, 1, 4, 6, 5, 0, 0, 25, 0, 13, 18, 1, 0, 0, 1, 1, 1]' : 0.0868568}", "{'[5, 6, 1, 4, 6, 5, 0, 0, 25, 0, 13, 18, 1, 0, 0, 1, 1, 1]' : 0.0863771}", "{'[5, 6, 1, 4, 6, 5, 0, 0, 25, 0, 13, 18, 1, 0, 0, 1, 1, 1]' : 0.0865641}", "{'[5, 6, 1, 4, 6, 5, 0, 0, 25, 0, 13, 18, 1, 0, 0, 1, 1, 1]' : 0.0864949}", "{'[5, 6, 1, 4, 6, 5, 0, 0, 25, 0, 13, 18, 1, 0, 0, 1, 1, 1]' : 0.0864489}", "{'[5, 6, 1, 4, 6, 5, 0, 0, 25, 0, 13, 18, 1, 0, 0, 1, 1, 1]' : 0.0864131}", "{'[5, 6, 1, 4, 6, 5, 0, 0, 25, 0, 13, 18, 1, 0, 0, 1, 1, 1]' : 0.086411}", "{'[5, 6, 1, 4, 6, 5, 0, 0, 25, 0, 13, 18, 1, 0, 0, 1, 1, 1]' : 0.086426}", "{'[5, 6, 1, 4, 6, 5, 0, 0, 25, 0, 13, 18, 1, 0, 0, 1, 1, 1]' : 0.0865359}", "{'[5, 6, 1, 4, 6, 5, 0, 0, 25, 0, 13, 18, 1, 0, 0, 1, 1, 1]' : 0.0864031}", "{'[5, 6, 1, 4, 6, 5, 0, 0, 25, 0, 13, 18, 1, 0, 0, 1, 1, 1]' : 0.0866709}", "{'[5, 6, 1, 4, 6, 5, 0, 0, 25, 0, 13, 18, 1, 0, 0, 1, 1, 1]' : 0.086524}", "{'[5, 6, 1, 4, 6, 5, 0, 0, 25, 0, 13, 18, 1, 0, 0, 1, 1, 1]' : 0.0864918}", "{'[5, 6, 1, 4, 6, 5, 0, 0, 25, 0, 13, 18, 1, 0, 0, 1, 1, 1]' : 0.0864031}", "{'[5, 6, 1, 4, 6, 5, 0, 0, 25, 0, 13, 18, 1, 0, 0, 1, 1, 1]' : 0.0864029}", "{'[5, 6, 1, 4, 6, 5, 0, 0, 25, 0, 13, 18, 1, 0, 0, 1, 1, 1]' : 0.0864}", "{'[5, 6, 1, 4, 6, 5, 0, 0, 25, 0, 13, 18, 1, 0, 0, 1, 1, 1]' : 0.0864191}", "{'[5, 6, 1, 4, 6, 5, 0, 0, 25, 0, 13, 18, 1, 0, 0, 1, 1, 1]' : WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = kkk
0.0864539}", "{'[5, 6, 1, 4, 6, 5, 0, 0, 25, 0, 13, 18, 1, 0, 0, 1, 1, 1]' : 0.0864828}", "{'[5, 6, 1, 4, 6, 5, 0, 0, 25, 0, 13, 18, 1, 0, 0, 1, 1, 1]' : 0.0864038}", "{'[5, 6, 1, 4, 6, 5, 0, 0, 25, 0, 13, 18, 1, 0, 0, 1, 1, 1]' : 0.0874562}", "{'[5, 6, 1, 4, 6, 5, 0, 0, 25, 0, 13, 18, 1, 0, 0, 1, 1, 1]' : 0.0863981}", "{'[5, 6, 1, 4, 6, 5, 0, 0, 25, 0, 13, 18, 1, 0, 0, 1, 1, 1]' : 0.0863931}", "{'[5, 6, 1, 4, 6, 5, 0, 0, 25, 0, 13, 18, 1, 0, 0, 1, 1, 1]' : 0.0864379}", "{'[5, 6, 1, 4, 6, 5, 0, 0, 25, 0, 13, 18, 1, 0, 0, 1, 1, 1]' : 0.0864089}", "{'[5, 6, 1, 4, 6, 5, 0, 0, 25, 0, 13, 18, 1, 0, 0, 1, 1, 1]' : 0.086401}", "{'[5, 6, 1, 4, 6, 5, 0, 0, 25, 0, 13, 18, 1, 0, 0, 1, 1, 1]' : 0.0864198}", "{'[5, 6, 1, 4, 6, 5, 0, 0, 25, 0, 13, 18, 1, 0, 0, 1, 1, 1]' : 0.0866859}", "{'[5, 6, 1, 4, 6, 5, 0, 0, 25, 0, 13, 18, 1, 0, 0, 1, 1, 1]' : 0.0864069}", "{'[5, 6, 1, 4, 6, 5, 0, 0, 25, 0, 13, 18, 1, 0, 0, 1, 1, 1]' : 0.086426}"]
returning from 'run': {'[5, 6, 1, 4, 6, 5, 0, 0, 25, 0, 13, 18, 1, 0, 0, 1, 1, 1]': ([0.0868568, 0.0863771, 0.0865641, 0.0864949, 0.0864489, 0.0864131, 0.086411, 0.086426, 0.0865359, 0.0864031, 0.0866709, 0.086524, 0.0864918, 0.0864031, 0.0864029, 0.0864, 0.0864191, 0.0864539, 0.0864828, 0.0864038, 0.0874562, 0.0863981, 0.0863931, 0.0864379, 0.0864089, 0.086401, 0.0864198, 0.0866859, 0.0864069, 0.086426], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.0868568, 0.0863771, 0.0865641, 0.0864949, 0.0864489, 0.0864131, 0.086411, 0.086426, 0.0865359, 0.0864031, 0.0866709, 0.086524, 0.0864918, 0.0864031, 0.0864029, 0.0864, 0.0864191, 0.0864539, 0.0864828, 0.0864038, 0.0874562, 0.0863981, 0.0863931, 0.0864379, 0.0864089, 0.086401, 0.0864198, 0.0866859, 0.0864069, 0.086426], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[5, 6, 1, 4, 6, 5, 0, 0, 25, 0, 13, 18, 1, 0, 0, 1, 1, 1]': ([0.0868568, 0.0863771, 0.0865641, 0.0864949, 0.0864489, 0.0864131, 0.086411, 0.086426, 0.0865359, 0.0864031, 0.0866709, 0.086524, 0.0864918, 0.0864031, 0.0864029, 0.0864, 0.0864191, 0.0864539, 0.0864828, 0.0864038, 0.0874562, 0.0863981, 0.0863931, 0.0864379, 0.0864089, 0.086401, 0.0864198, 0.0866859, 0.0864069, 0.086426], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [0, 0, 4, 1, 2, 1, 0, 5, 12, 0, 21, 0, 0, 0, 1, 1]
Fixed Factors: {'T2_J': 6, 'VEC1': 1}
Testing candidate 3: [0, 0, 4, 1, 6, 2, 1, 0, 5, 12, 0, 21, 0, 0, 0, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	29
        Max loop nest depth: 	4
        Additions: 		1496
        Multiplications: 	672
        Divisions: 		0
        Logical: 		0
        Reads: 			3041
        Writes: 		561
        Comparisons:		29
        Gotos: 			0
        
digraph CFG {
	9293742 [label="9293742  y[i]=0.0;...",shape=box];
	_JOIN_9361358 [label="_JOIN_9361358None...",shape=box];
	_JOIN_9361358 -> 9412734;
	_JOIN_9360188 [label="_JOIN_9360188None...",shape=box];
	_JOIN_9360188 -> 9411790;
	ForLoop9361358 [label="ForLoop9361358  for (k=kk; k<=cbv_6; k=k+22) {...",shape=box];
	ForLoop9361358 -> 9394920;
	ForLoop9361358 -> _JOIN_9361358;
	9349851 [label="9349851  for (j=jjj; j<=min(ny-1,jjj+2047); j=j+1) ...",shape=box];
	9412734 [label="9412734  register int cbv_7, cbv_8;...",shape=box];
	ForLoop9350652 [label="ForLoop9350652  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop9350652 -> 9349851;
	ForLoop9350652 -> _JOIN_9350652;
	9360670 [label="9360670  for (j=jjj; j<=min(ny-1,jjj+2047); j=j+1) ...",shape=box];
	ForLoop9350650 [label="ForLoop9350650  for (j=jjj; j<=cbv_1; j=j+1) {...",shape=box];
	ForLoop9350650 -> 9362061;
	ForLoop9350650 -> _JOIN_9350650;
	_JOIN_9360571 [label="_JOIN_9360571None...",shape=box];
	_JOIN_9360571 -> 9393278;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 9293610;
	ForLoop9293858 [label="ForLoop9293858  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop9293858 -> 9293857;
	ForLoop9293858 -> _JOIN_9293858;
	ForLoop9360571 [label="ForLoop9360571  for (kk=0; kk<=ny-1; kk=kk+128) {...",shape=box];
	ForLoop9360571 -> 9350666;
	ForLoop9360571 -> _JOIN_9360571;
	ForLoop9360573 [label="ForLoop9360573  for (i=iii; i<=min(nx-1,iii+63)-12; i=i+13) {...",shape=box];
	ForLoop9360573 -> 9393260;
	ForLoop9360573 -> _JOIN_9360573;
	9350666 [label="9350666  int k;...",shape=box];
	9349658 [label="9349658  double x_copy[2048];...",shape=box];
	_JOIN_9293858 [label="_JOIN_9293858None...",shape=box];
	_JOIN_9293858 -> 9349658;
	9411790 [label="9411790  register int cbv_3, cbv_4;...",shape=box];
	_JOIN_9360573 [label="_JOIN_9360573None...",shape=box];
	_JOIN_9360573 -> ForLoop9361430;
	9393260 [label="9393260  double scv_25, scv_26, scv_27, scv_28, scv_29, scv_30, scv_31, scv_32;...",shape=box];
	9349673 [label="9349673  int i;...",shape=box];
	9349673 -> ForLoop9360573;
	ForLoop9361428 [label="ForLoop9361428  for (kk=0; kk<=ny-1; kk=kk+128) {...",shape=box];
	ForLoop9361428 -> 9360728;
	ForLoop9361428 -> _JOIN_9361428;
	ForLoop9361426 [label="ForLoop9361426  for (k=cbv_7; k<=cbv_8; k=k+1) {...",shape=box];
	ForLoop9361426 -> 9395449;
	ForLoop9361426 -> _JOIN_9361426;
	_JOIN_9361432 [label="_JOIN_9361432None...",shape=box];
	9394920 [label="9394920  double scv_38, scv_39, scv_40, scv_41, scv_42, scv_43, scv_44, scv_45;...",shape=box];
	9377328 [label="9377328  double scv_24;...",shape=box];
	9397412 [label="9397412  tmp[i]=scv_61;...",shape=box];
	9397412 -> _JOIN_9361430;
	ForLoop9360712 [label="ForLoop9360712  for (j=jjj; j<=cbv_5; j=j+1) {...",shape=box];
	ForLoop9360712 -> 9360711;
	ForLoop9360712 -> _JOIN_9360712;
	ForLoop9360188 [label="ForLoop9360188  for (k=kk; k<=cbv_2; k=k+22) {...",shape=box];
	ForLoop9360188 -> 9375838;
	ForLoop9360188 -> _JOIN_9360188;
	ForLoop9360714 [label="ForLoop9360714  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop9360714 -> 9360670;
	ForLoop9360714 -> _JOIN_9360714;
	9375838 [label="9375838  double scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8, scv_9;...",shape=box];
	_JOIN_9361430 [label="_JOIN_9361430None...",shape=box];
	_JOIN_9361430 -> _JOIN_9361432;
	9395449 [label="9395449  double scv_60;...",shape=box];
	9293953 [label="9293953  register int cbv_2, cbv_3;...",shape=box];
	ForLoop9360569 [label="ForLoop9360569  for (k=cbv_3; k<=cbv_4; k=k+1) {...",shape=box];
	ForLoop9360569 -> 9377328;
	ForLoop9360569 -> _JOIN_9360569;
	_JOIN_9360712 [label="_JOIN_9360712None...",shape=box];
	_JOIN_9360712 -> _JOIN_9360714;
	_JOIN_9360569 [label="_JOIN_9360569None...",shape=box];
	_JOIN_9360569 -> _JOIN_9360571;
	9293610 [label="9293610  int i;...",shape=box];
	9362061 [label="9362061  double scv_1;...",shape=box];
	9397400 [label="9397400  double scv_61;...",shape=box];
	9293857 [label="9293857  y[i]=0.0;...",shape=box];
	9293857 -> _JOIN_9293858;
	_JOIN_9350652 [label="_JOIN_9350652None...",shape=box];
	_JOIN_9350652 -> ForLoop9360571;
	_JOIN_9350650 [label="_JOIN_9350650None...",shape=box];
	_JOIN_9350650 -> _JOIN_9350652;
	9360728 [label="9360728  int k;...",shape=box];
	_JOIN_9361426 [label="_JOIN_9361426None...",shape=box];
	_JOIN_9361426 -> _JOIN_9361428;
	9360711 [label="9360711  scv_61=scv_61+A[i*ny+j]*x_copy[(j-jjj)];...",shape=box];
	9360711 -> _JOIN_9360712;
	ForLoop9293789 [label="ForLoop9293789  for (i=0; i<=cbv_1; i=i+6) {...",shape=box];
	ForLoop9293789 -> 9293742;
	ForLoop9293789 -> _JOIN_9293789;
	_JOIN_9361428 [label="_JOIN_9361428None...",shape=box];
	_JOIN_9361428 -> 9397412;
	ForLoop9361432 [label="ForLoop9361432  for (iii=0; iii<=nx-1; iii=iii+64) {...",shape=box];
	ForLoop9361432 -> 9349673;
	ForLoop9361432 -> _JOIN_9361432;
	_JOIN_9293789 [label="_JOIN_9293789None...",shape=box];
	_JOIN_9293789 -> 9293953;
	ForLoop9361430 [label="ForLoop9361430  for (i=(min(nx-1,iii+63))-(((min(nx-1,iii+63))-(iii)+1)%13)+1; i<=min(nx-1,iii+63); i=i+1) {...",shape=box];
	ForLoop9361430 -> 9397400;
	ForLoopexpected=9369846271501.798828
actual=9369846271501.798828
9361430 -> _JOIN_9361430;
	9393278 [label="9393278  tmp[(i+12)]=scv_25;...",shape=box];
	_JOIN_9360714 [label="_JOIN_9360714None...",shape=box];
	_JOIN_9360714 -> ForLoop9361428;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest41.exe __orio_perftest41.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest41.exe  
{'[0, 0, 4, 1, 6, 2, 1, 0, 5, 12, 0, 21, 0, 0, 0, 1, 1, 1]' : 0.126311}
{'[0, 0, 4, 1, 6, 2, 1, 0, 5, 12, 0, 21, 0, 0, 0, 1, 1, 1]' : 0.125708}
{'[0, 0, 4, 1, 6, 2, 1, 0, 5, 12, 0, 21, 0, 0, 0, 1, 1, 1]' : 0.125695}
{'[0, 0, 4, 1, 6, 2, 1, 0, 5, 12, 0, 21, 0, 0, 0, 1, 1, 1]' : 0.126812}
{'[0, 0, 4, 1, 6, 2, 1, 0, 5, 12, 0, 21, 0, 0, 0, 1, 1, 1]' : 0.125736}
{'[0, 0, 4, 1, 6, 2, 1, 0, 5, 12, 0, 21, 0, 0, 0, 1, 1, 1]' : 0.125664}
{'[0, 0, 4, 1, 6, 2, 1, 0, 5, 12, 0, 21, 0, 0, 0, 1, 1, 1]' : 0.125816}
{'[0, 0, 4, 1, 6, 2, 1, 0, 5, 12, 0, 21, 0, 0, 0, 1, 1, 1]' : 0.125633}
{'[0, 0, 4, 1, 6, 2, 1, 0, 5, 12, 0, 21, 0, 0, 0, 1, 1, 1]' : 0.125608}
{'[0, 0, 4, 1, 6, 2, 1, 0, 5, 12, 0, 21, 0, 0, 0, 1, 1, 1]' : 0.125634}
{'[0, 0, 4, 1, 6, 2, 1, 0, 5, 12, 0, 21, 0, 0, 0, 1, 1, 1]' : 0.125757}
{'[0, 0, 4, 1, 6, 2, 1, 0, 5, 12, 0, 21, 0, 0, 0, 1, 1, 1]' : 0.125643}
{'[0, 0, 4, 1, 6, 2, 1, 0, 5, 12, 0, 21, 0, 0, 0, 1, 1, 1]' : 0.125911}
{'[0, 0, 4, 1, 6, 2, 1, 0, 5, 12, 0, 21, 0, 0, 0, 1, 1, 1]' : 0.125707}
{'[0, 0, 4, 1, 6, 2, 1, 0, 5, 12, 0, 21, 0, 0, 0, 1, 1, 1]' : 0.125641}
{'[0, 0, 4, 1, 6, 2, 1, 0, 5, 12, 0, 21, 0, 0, 0, 1, 1, 1]' : 0.125601}
{'[0, 0, 4, 1, 6, 2, 1, 0, 5, 12, 0, 21, 0, 0, 0, 1, 1, 1]' : 0.125689}
{'[0, 0, 4, 1, 6, 2, 1, 0, 5, 12, 0, 21, 0, 0, 0, 1, 1, 1]' : 0.125704}
{'[0, 0, 4, 1, 6, 2, 1, 0, 5, 12, 0, 21, 0, 0, 0, 1, 1, 1]' : 0.125692}
{'[0, 0, 4, 1, 6, 2, 1, 0, 5, 12, 0, 21, 0, 0, 0, 1, 1, 1]' : 0.126618}
{'[0, 0, 4, 1, 6, 2, 1, 0, 5, 12, 0, 21, 0, 0, 0, 1, 1, 1]' : 0.125777}
{'[0, 0, 4, 1, 6, 2, 1, 0, 5, 12, 0, 21, 0, 0, 0, 1, 1, 1]' : 0.125655}
{'[0, 0, 4, 1, 6, 2, 1, 0, 5, 12, 0, 21, 0, 0, 0, 1, 1, 1]' : 0.125679}
{'[0, 0, 4, 1, 6, 2, 1, 0, 5, 12, 0, 21, 0, 0, 0, 1, 1, 1]' : 0.125585}
{'[0, 0, 4, 1, 6, 2, 1, 0, 5, 12, 0, 21, 0, 0, 0, 1, 1, 1]' : 0.125891}
{'[0, 0, 4, 1, 6, 2, 1, 0, 5, 12, 0, 21, 0, 0, 0, 1, 1, 1]' : 0.125674}
{'[0, 0, 4, 1, 6, 2, 1, 0, 5, 12, 0, 21, 0, 0, 0, 1, 1, 1]' : 0.125745}
{'[0, 0, 4, 1, 6, 2, 1, 0, 5, 12, 0, 21, 0, 0, 0, 1, 1, 1]' : 0.125583}
{'[0, 0, 4, 1, 6, 2, 1, 0, 5, 12, 0, 21, 0, 0, 0, 1, 1, 1]' : 0.125714}
{'[0, 0, 4, 1, 6, 2, 1, 0, 5, 12, 0, 21, 0, 0, 0, 1, 1, 1]' : 0.125707}

out:
 ["{'[0, 0, 4, 1, 6, 2, 1, 0, 5, 12, 0, 21, 0, 0, 0, 1, 1, 1]' : 0.126311}", "{'[0, 0, 4, 1, 6, 2, 1, 0, 5, 12, 0, 21, 0, 0, 0, 1, 1, 1]' : 0.125708}", "{'[0, 0, 4, 1, 6, 2, 1, 0, 5, 12, 0, 21, 0, 0, 0, 1, 1, 1]' : 0.125695}", "{'[0, 0, 4, 1, 6, 2, 1, 0, 5, 12, 0, 21, 0, 0, 0, 1, 1, 1]' : 0.126812}", "{'[0, 0, 4, 1, 6, 2, 1, 0, 5, 12, 0, 21, 0, 0, 0, 1, 1, 1]' : 0.125736}", "{'[0, 0, 4, 1, 6, 2, 1, 0, 5, 12, 0, 21, 0, 0, 0, 1, 1, 1]' : 0.125664}", "{'[0, 0, 4, 1, 6, 2, 1, 0, 5, 12, 0, 21, 0, 0, 0, 1, 1, 1]' : 0.125816}", "{'[0, 0, 4, 1, 6, 2, 1, 0, 5, 12, 0, 21, 0, 0, 0, 1, 1, 1]' : 0.125633}", "{'[0, 0, 4, 1, 6, 2, 1, 0, 5, 12, 0, 21, 0, 0, 0, 1, 1, 1]' : 0.125608}", "{'[0, 0, 4, 1, 6, 2, 1, 0, 5, 12, 0, 21, 0, 0, 0, 1, 1, 1]' : 0.125634}", "{'[0, 0, 4, 1, 6, 2, 1, 0, 5, 12, 0, 21, 0, 0, 0, 1, 1, 1]' : 0.125757}", "{'[0, 0, 4, 1, 6, 2, 1, 0, 5, 12, 0, 21, 0, 0, 0, 1, 1, 1]' : 0.125643}", "{'[0, 0, 4, 1, 6, 2, 1, 0, 5, 12, 0, 21, 0, 0, 0, 1, 1, 1]' : 0.125911}", "{'[0, 0, 4, 1, 6, 2, 1, 0, 5, 12, 0, 21, 0, 0, 0, 1, 1, 1]' : 0.125707}", "{'[0, 0, 4, 1, 6, 2, 1, 0, 5, 12, 0, 21, 0, 0, 0, 1, 1, 1]' : 0.125641}", "{'[0, 0, 4, 1, 6, 2, 1, 0, 5, 12, 0, 21, 0, 0, 0, 1, 1, 1]' : 0.125601}", "{'[0, 0, 4, 1, 6, 2, 1, 0, 5, 12, 0, 21, 0, 0, 0, 1, 1, 1]' : 0.125689}", "{'[0, 0, 4, 1, 6, 2, 1, 0, 5, 12, 0, 21, 0, 0, 0, 1, 1, 1]' : 0.125704}", "{'[0, 0, 4, 1, 6, 2, 1, 0, 5, 12, 0, 21, 0, 0, 0, 1, 1, 1]' : 0.125692}", "{'[0, 0, 4, 1, 6, 2, 1, 0, 5, 12, 0, 21, 0, 0, 0, 1, 1, 1]' : 0.126618}", "{'[0, 0, 4, 1, 6, 2, 1, 0, 5, 12, 0, 21, 0, 0, 0, 1, 1, 1]' : 0.125777}", "{'[0, 0, 4, 1, 6, 2, 1, 0, 5, 12, 0, 21, 0, 0, 0, 1, 1, 1]' : 0.125655}", "{'[0, 0, 4, 1, 6, 2, 1, 0, 5, 12, 0, 21, 0, 0, 0, 1, 1, 1]' : 0.125679}", "{'[0, 0, 4, 1, 6, 2, 1, 0, 5, 12, 0, 21, 0, 0, 0, 1, 1, 1]' : 0.125585}", "{'[0, 0, 4, 1, 6, 2, 1, 0, 5, 12, 0, 21, 0, 0, 0, 1, 1, 1]' : 0.125891}", "{'[0, 0, 4, 1, 6, 2, 1, 0, 5, 12, 0, 21, 0, 0, 0, 1, 1, 1]' : 0.125674}", "{'[0, 0, 4, 1, 6, 2, 1, 0, 5, 12, 0, 21, 0, 0, 0, 1, 1, 1]' : 0.125745}", "{'[0, 0, 4, 1, 6, 2, 1, 0, 5, 12, 0, 21, 0, 0, 0, 1, 1, 1]' : 0.125583}", "{'[0, 0, 4, 1, 6, 2, 1, 0, 5, 12, 0, 21, 0, 0, 0, 1, 1, 1]' : 0.125714}", "{'[0, 0, 4, 1, 6, 2, 1, 0, 5, 12, 0, 21, 0, 0, 0, 1, 1, 1]' : 0.125707}"]
returning from 'run': {'[0, 0, 4, 1, 6, 2, 1, 0, 5, 12, 0, 21, 0, 0, 0, 1, 1, 1]': ([0.126311, 0.125708, 0.125695, 0.126812, 0.125736, 0.125664, 0.125816, 0.125633, 0.125608, 0.125634, 0.125757, 0.125643, 0.125911, 0.125707, 0.125641, 0.125601, 0.125689, 0.125704, 0.125692, 0.126618, 0.125777, 0.125655, 0.125679, 0.125585, 0.125891, 0.125674, 0.125745, 0.125583, 0.125714, 0.125707], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.126311, 0.125708, 0.125695, 0.126812, 0.125736, 0.125664, 0.125816, 0.125633, 0.125608, 0.125634, 0.125757, 0.125643, 0.125911, 0.125707, 0.125641, 0.125601, 0.125689, 0.125704, 0.125692, 0.126618, 0.125777, 0.125655, 0.125679, 0.125585, 0.125891, 0.125674, 0.125745, 0.125583, 0.125714, 0.125707], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 4, 1, 6, 2, 1, 0, 5, 12, 0, 21, 0, 0, 0, 1, 1, 1]': ([0.126311, 0.125708, 0.125695, 0.126812, 0.125736, 0.125664, 0.125816, 0.125633, 0.125608, 0.125634, 0.125757, 0.125643, 0.125911, 0.125707, 0.125641, 0.125601, 0.125689, 0.125704, 0.125692, 0.126618, 0.125777, 0.125655, 0.125679, 0.125585, 0.125891, 0.125674, 0.125745, 0.125583, 0.125714, 0.125707], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [1, 6, 1, 1, 0, 0, 1, 14, 10, 0, 28, 2, 0, 0, 0, 1]
Fixed Factors: {'T2_J': 6, 'VEC1': 1}
Testing candidate 4: [1, 6, 1, 1, 6, 0, 0, 1, 14, 10, 0, 28, 2, 0, 0, 0, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	71
        Max loop nest depth: 	6
        Additions: 		12045
        Multiplications: 	2728
        Divisions: 		0
        Logical: 		0
        Reads: 			17095
        Writes: 		1606
        Comparisons:		71
        Gotos: 			0
        
digraph CFG {
	_JOIN_9684904 [label="_JOIN_9684904None...",shape=box];
	_JOIN_9684904 -> _JOIN_9417047;
	_JOIN_9683803 [label="_JOIN_9683803None...",shape=box];
	_JOIN_9683803 -> _JOIN_9683804;
	_JOIN_9683805 [label="_JOIN_9683805None...",shape=box];
	_JOIN_9683805 -> ForLoop9684902;
	_JOIN_9673410 [label="_JOIN_9673410None...",shape=box];
	_JOIN_9673410 -> 9830786;
	ForLoop9413398 [label="ForLoop9413398  for (i=0; i<=cbv_1; i=i+15) {...",shape=box];
	ForLoop9413398 -> 9413270;
	ForLoop9413398 -> _JOIN_9413398;
	_JOIN_9684902 [label="_JOIN_9684902None...",shape=box];
	_JOIN_9684902 -> _JOIN_9684904;
	_JOIN_9683586 [label="_JOIN_9683586None...",shape=box];
	_JOIN_9683586 -> 9683618;
	9413643 [label="9413643  register int cbv_2, cbv_3;...",shape=box];
	9413003 [label="9413003  int i;...",shape=box];
	_JOIN_9673490 [label="_JOIN_9673490None...",shape=box];
	_JOIN_9673490 -> 9673522;
	9678654 [label="9678654  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+7)*ny+k]*tmp[(i+7)];...",shape=box];
	_JOIN_9683804 [label="_JOIN_9683804None...",shape=box];
	_JOIN_9683804 -> _JOIN_9683805;
	_JOIN_9683506 [label="_JOIN_9683506None...",shape=box];
	_JOIN_9683506 -> 9840810;
	_JOIN_9675934 [label="_JOIN_9675934None...",shape=box];
	_JOIN_9675934 -> 9833292;
	ForLoop9669901 [label="ForLoop9669901  for (jj=jjj; jj<=min(ny-1,jjj+1536); jj=jj+512) {...",shape=box];
	ForLoop9669901 -> 9827242;
	ForLoop9669901 -> _JOIN_9669901;
	ForLoop9669903 [label="ForLoop9669903  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop9669903 -> ForLoop9669901;
	ForLoop9669903 -> _JOIN_9669903;
	ForLoop9684904 [label="ForLoop9684904  for (i=(min(nx-1,ii+15))-(((min(nx-1,ii+15))-(it)+1)%11)+1; i<=min(nx-1,ii+15); i=i+1) {...",shape=box];
	ForLoop9684904 -> 9683733;
	ForLoop9684904 -> _JOIN_9684904;
	ForLoop9684902 [label="ForLoop9684902  for (kk=0; kk<=ny-1; kk=kk+16) {...",shape=box];
	ForLoop9684902 -> 9683849;
	ForLoop9684902 -> _JOIN_9684902;
	_JOIN_9679800 [label="_JOIN_9679800None...",shape=box];
	_JOIN_9679800 -> 9679832;
	9424569 [label="9424569  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	9424569 -> _JOIN_9424571;
	9683618 [label="9683618  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	9683618 -> _JOIN_9683620;
	_JOIN_9424448 [label="_JOIN_9424448None...",shape=box];
	_JOIN_9424448 -> _JOIN_9424449;
	_JOIN_9424449 [label="_JOIN_9424449None...",shape=box];
	_JOIN_9424449 -> ForLoop9424571;
	ForLoop9565458 [label="ForLoop9565458  for (k=cbv_3; k<=cbv_4; k=k+1) {...",shape=box];
	ForLoop9565458 -> 9564464;
	ForLoop9565458 -> _JOIN_9565458;
	9676130 [label="9676130  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+5)*ny+k]*tmp[(i+5)];...",shape=box];
	9674751 [label="9674751  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+3)*ny+k]*tmp[(i+3)];...",shape=box];
	9674751 -> _JOIN_9674752;
	_JOIN_9424447 [label="_JOIN_9424447None...",shape=box];
	_JOIN_9424447 -> _JOIN_9424448;
	9834545 [label="9834545  register int cbv_22, cbv_23;...",shape=box];
	9828280 [label="9828280  register int cbv_7, cbv_8;...",shape=box];
	ForLoop9677276 [label="ForLoop9677276  for (k=cbv_22; k<=cbv_23; k=k+1) ...",shape=box];
	ForLoop9677276 -> 9677275;
	ForLoop9677276 -> _JOIN_9677276;
	ForLoop9679720 [label="ForLoop9679720  for (k=kk; k<=cbv_27; k=k+29) {...",shape=box];
	ForLoop9679720 -> 9678654;
	ForLoop9679720 -> _JOIN_9679720;
	9679799 [label="9679799  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+7)*ny+k]*tmp[(i+7)];...",shape=box];
	9679799 -> _JOIN_9679800;
	ForLoop9564333 [label="ForLoop9564333  for (k=kk; k<=cbv_2; k=k+29) {...",shape=box];
	ForLoop9564333 -> 9529459;
	ForLoop9564333 -> _JOIN_9564333;
	9678570 [label="9678570  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop9679800 [label="ForLoop9679800  for (k=cbv_28; k<=cbv_29; k=k+1) ...",shape=box];
	ForLoop9679800 -> 9679799;
	ForLoop9679800 -> _JOIN_9679800;
	_JOIN_9564333 [label="_JOIN_9564333None...",shape=box];
	_JOIN_9564333 -> 9826868;
	9681094 [label="9681094  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	9835798 [label="9835798  register int cbv_25, cbv_26;...",shape=box];
	9841931 [label="9841931  register int cbv_41, cbv_42;...",shape=box];
	_JOIN_9684868 [label="_JOIN_9684868None...",shape=box];
	_JOIN_9684868 -> 9684900;
	9832039 [label="9832039  register int cbv_16, cbv_17;...",shape=box];
	_JOIN_9672148 [label="_JOIN_9672148None...",shape=box];
	_JOIN_9672148 -> 9829533;
	_JOIN_9670966 [label="_JOIN_9670966None...",shape=box];
	_JOIN_9670966 -> 9670998;
	9826868 [label="9826868  register int cbv_3, cbv_4;...",shape=box];
	ForLoop9672148 [label="ForLoop9672148  for (k=kk; k<=cbv_9; k=k+29) {...",shape=box];
	ForLoop9672148 -> 9671082;
	ForLoop9672148 -> _JOIN_9672148;
	ForLoop9673490 [label="ForLoop9673490  for (k=cbv_13; k<=cbv_14; k=k+1) ...",shape=box];
	ForLoop9673490 -> 9673489;
	ForLoop9673490 -> _JOIN_9673490;
	9669947 [label="9669947  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	_JOIN_9417047 [label="_JOIN_9417047None...",shape=box];
	_JOIN_9417047 -> _JOIN_9417048;
	9677308 [label="9677308  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	9683585 [label="9683585  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+10)*ny+k]*tmp[(i+10)];...",shape=box];
	9683585 -> _JOIN_9683586;
	_JOIN_9669901 [label="_JOIN_9669901None...",shape=box];
	_JOIN_9669901 -> _JOIN_9669903;
	_JOIN_9669903 [label="_JOIN_9669903None...",shape=box];
	_JOIN_9669903 -> ForLoop9683620;
	9424493 [label="9424493  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	9672260 [label="9672260  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	_JOIN_9413467 [label="_JOIN_9413467None...",shape=box];
	_JOIN_9413467 -> 9422453;
	9683849 [label="9683849  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop9670892 [label="ForLoop9670892  for (k=kk; k<=cbv_6; k=k+29) {...",shape=box];
	ForLoop9670892 -> 9669994;
	ForLoop9670892 -> _JOIN_9670892;
	9670965 [label="9670965  y_copy[(k-kk)]=y_copy[(k-kk)]+A[i*ny+k]*tmp[i];...",shape=box];
	9670965 -> _JOIN_9670966;
	9678537 [label="9678537  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+6)*ny+k]*tmp[(i+6)];...",shape=box];
	9678537 -> _JOIN_9678538;
	9837051 [label="9837051  register int cbv_28, cbv_29;...",shape=box];
	9413466 [label="9413466  y[i]=0.0;...",shape=box];
	9413466 -> _JOIN_9413467;
	9676013 [label="9676013  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+4)*ny+k]*tmp[(i+4)];...",shape=box];
	9676013 -> _JOIN_9676014;
	ForLoop9684868 [label="ForLoop9684868  for (k=cbv_41; k<=cbv_42; k=k+1) ...",shape=box];
	ForLoop9684868 -> 9684867;
	ForLoop9684868 -> _JOIN_9684868;
	9833292 [label="9833292  register int cbv_19, cbv_20;...",shape=box];
	9683733 [label="9683733  tmp[i]=0;...",shape=box];
	9683733 -> ForLoop9683805;
	_JOIN_9417048 [label="_JOIN_9417048None...",shape=box];
	9669607 [label="9669607  tmp[i]=tmp[i]+A[i*ny+j]*x[j];...",shape=box];
	_JOIN_9683622 [label="_JOIN_9683622None...",shape=box];
	_JOIN_9683622 -> ForLoop9684904;
	9673522 [label="9673522  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop9675934 [label="ForLoop9675934  for (k=kk; k<=cbv_18; k=k+29) {...",shape=box];
	ForLoop9675934 -> 9674868;
	ForLoop9675934 -> _JOIN_9675934;
	9684867 [label="9684867  y_copy[(k-kk)]=y_copy[(k-kk)]+A[i*ny+k]*tmp[i];...",shape=box];
	9684867 -> _JOIN_9684868;
	9840810 [label="9840810  register int cbv_37, cbv_38;...",shape=box];
	ForLoop9673410 [label="ForLoop9673410  for (k=kk; k<=cbv_12; k=k+29) {...",shape=box];
	ForLoop9673410 -> 9672344;
	ForLoop9673410 -> _JOIN_9673410;
	9682356 [label="9682356  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	9683802 [label="9683802  tmp[i]=tmp[i]+A[i*ny+j]*x[j];...",shape=box];
	9683802 -> _JOIN_9683803;
	ForLoop9682244 [label="ForLoop9682244  for (k=kk; k<=cbv_33; k=k+29) {...",shape=box];
	ForLoop9682244 -> 9681178;
	ForLoop9682244 -> _JOIN_9682244;
	ForLoop9670966 [label="ForLoop9670966  for (k=cbv_7; k<=cbv_8; k=k+1) ...",shape=box];
	ForLoop9670966 -> 9670965;
	ForLoop9670966 -> _JOIN_9670966;
	ForLoop9424448 [label="ForLoop9424448  for (jj=jjj; jj<=min(ny-1,jjj+1536); jj=jj+512) {...",shape=box];
	ForLoop9424448 -> 9790861;
	ForLoop9424448 -> _JOIN_9424448;
	ForLoop9424449 [label="ForLoop9424449  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) ...",shape=box];
	ForLoop9424449 -> ForLoop9424448;
	ForLoop9424449 -> _JOIN_9424449;
	_JOIN_9676014 [label="_JOIN_9676014None...",shape=box];
	_JOIN_9676014 -> 9676046;
	_JOIN_9678538 [label="_JOIN_9678538None...",shape=box];
	_JOIN_9678538 -> 9678570;
	9679832 [label="9679832  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop9676014 [label="ForLoop9676014  for (k=cbv_19; k<=cbv_20; k=k+1) ...",shape=box];
	ForLoop9676014 -> 9676013;
	ForLoop9676014 -> _JOIN_9676014;
	ForLoop9424447 [label="ForLoop9424447  for (j=jj; j<=cbv_1; j=j+1) {...",shape=box];
	ForLoop9424447 -> 9425378;
	ForLoop9424447 -> _JOIN_9424447;
	9674868 [label="9674868  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+4)*ny+k]*tmp[(i+4)];...",shape=box];
	ForLoop9681062 [label="ForLoop9681062  for (k=cbv_31; k<=cbv_32; k=k+1) ...",shape=box];
	ForLoop9681062 -> 9681061;
	ForLoop9681062 -> _JOIN_9681062;
	ForLoop9674672 [label="ForLoop9674672  for (k=kk; k<=cbv_15; k=k+29) {...",shape=box];
	ForLoop9674672 -> 9673606;
	ForLoop9674672 -> _JOIN_9674672;
	ForLoop9678458 [label="ForLoop9678458  for (k=kk; k<=cbv_24; k=k+29) {...",shape=box];
	ForLoop9678458 -> 9677392;
	ForLoop9678458 -> _JOIN_9678458;
	9830786 [label="9830786  register int cbv_13, cbv_14;...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 9413003;
	_JOIN_9683620 [label="_JOIN_9683620None...",shape=box];
	_JOIN_9683620 -> _JOIN_9683622;
	_JOIN_9565458 [label="_JOIN_9565458None...",shape=box];
	_JOIN_9565458 -> 9424569;
	9677392 [label="9677392  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+6)*ny+k]*tmp[(i+6)];...",shape=box];
	ForLoop9424571 [label="ForLoop9424571  for (kk=0; kk<=ny-1; kk=kk+16) {...",shape=box];
	ForLoop9424571 -> 9424493;
	ForLoop9424571 -> _JOIN_9424571;
	ForLoop9417048 [label="ForLoop9417048  for (iii=0; iii<=nx-1; iii=iii+64) ...",shape=box];
	ForLoop9417048 -> ForLoop9417047;
	ForLoop9417048 -> _JOIN_9417048;
	ForLoop9424573 [label="ForLoop9424573  for (it=ii; it<=min(nx-1,ii+15)-31; it=it+32) {...",shape=box];
	ForLoop9424573 -> 9424804;
	ForLoop9424573 -> _JOIN_9424573;
	ForLoop9417047 [label="ForLoop9417047  for (ii=iii; ii<=min(nx-1,iii+48); ii=ii+16) {...",shape=box];
	ForLoop9417047 -> ForLoop9424573;
	ForLoop9417047 -> _JOIN_9417047;
	9645023 [label="9645023  int i;...",shape=box];
	9645023 -> ForLoop9683622;
	9682323 [label="9682323  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+9)*ny+k]*tmp[(i+9)];...",shape=box];
	9682323 -> _JOIN_9682324;
	9564464 [label="9564464  y_copy[(k-kk)]=y_copy[(k-kk)]+A[it*ny+k]*tmp[it];...",shape=box];
	_JOIN_9677276 [label="_JOIN_9677276None...",shape=box];
	_JOIN_9677276 -> 9677308;
	_JOIN_9682324 [label="_JOIN_9682324None...",shape=box];
	_JOIN_9682324 -> 9682356;
	9677275 [label="9677275  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+5)*ny+k]*tmp[(i+5)];...",shape=box];
	9677275 -> _JOIN_9677276;
	_JOIN_9682244 [label="_JOIN_9682244None...",shape=box];
	_JOIN_9682244 -> 9839557;
	9529459 [label="9529459  y_copy[(k-kk)]=y_copy[(k-kk)]+A[it*ny+k]*tmp[it];...",shape=box];
	_JOIN_9669899 [label="_JOIN_9669899None...",shape=box];
	_JOIN_9669899 -> _JOIN_9669901;
	9827242 [label="9827242  register int cbv_5;...",shape=box];
	_JOIN_9679720 [label="_JOIN_9679720None...",shape=box];
	_JOIN_9679720 -> 9837051;
	_JOIN_9680982 [label="_JOIN_9680982None...",shape=box];
	_JOIN_9680982 -> 9838304;
	9671082 [label="9671082  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+1)*ny+k]*tmp[(i+1)];...",shape=box];
	9669448 [label="9669448  tmp[i]=0;...",shape=box];
	_JOIN_9674672 [label="_JOIN_9674672None...",shape=box];
	_JOIN_9674672 -> 9832039;
	ForLoop9669899 [label="ForLoop9669899  for (j=jj; j<=cbv_5; j=j+1) {...",shape=box];
	ForLoop9669899 -> 9669607;
	ForLoop9669899 -> _JOIN_9669899;
	9829533 [label="9829533  register int cbv_10, cbv_11;...",shape=box];
	9682440 [label="9682440  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+10)*ny+k]*tmp[(i+10)];...",shape=box];
	ForLoop9683805 [label="ForLoop9683805  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) ...",shape=box];
	ForLoop9683805 -> ForLoop9683804;
	ForLoop9683805 -> _JOIN_9683805;
	ForLoop9683804 [label="ForLoop9683804  for (jj=jjj; jj<=min(ny-1,jjj+1536); jj=jj+512) {...",shape=box];
	ForLoop9683804 -> 9840893;
	ForLoop9683804 -> _JOIN_9683804;
	9672344 [label="9672344  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+2)*ny+k]*tmp[(i+2)];...",shape=box];
	9679916 [label="9679916  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+8)*ny+k]*tmp[(i+8)];...",shape=box];
	ForLoop9672228 [label="ForLoop9672228  for (k=cbv_10; k<=cbv_11; k=k+1) ...",shape=box];
	ForLoop9672228 -> 9672227;
	ForLoop9672228 -> _JOIN_9672228;
	ForLoop9683803 [label="ForLoop9683803  for (j=jj; j<=cbv_39; j=j+1) ...",shape=box];
	ForLoop9683803 -> 9683802;
	ForLoop9683803 -> _JOIN_9683803;
	9672227 [label="9672227  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+1)*ny+k]*tmp[(i+1)];...",shape=box];
	9672227 -> _JOIN_9672228;
	ForLoop9678538 [label="ForLoop9678538  for (k=cbv_25; k<=cbv_26; k=k+1) ...",shape=box];
	ForLoop9678538 -> 9678537;
	ForLoop9678538 -> _JOIN_9678538;
	_JOIN_9424571 [label="_JOIN_9424571None...",shape=box];
	_JOIN_9424571 -> _JOIN_9424573;
	_JOIN_9424573 [label="_JOIN_9424573None...",shape=box];
	_JOIN_9424573 -> 9645023;
	9790861 [label="9790861  register int cbv_1;...",shape=box];
	9676046 [label="9676046  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	9681061 [label="9681061  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+8)*ny+k]*tmp[(i+8)];...",shape=box];
	9681061 -> _JOIN_9681062;
	9670998 [label="9670998  foexpected=9369846271501.798828
actual=9369846271501.798828
r (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	9413270 [label="9413270  y[i]=0.0;...",shape=box];
	9673606 [label="9673606  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+3)*ny+k]*tmp[(i+3)];...",shape=box];
	9669994 [label="9669994  y_copy[(k-kk)]=y_copy[(k-kk)]+A[i*ny+k]*tmp[i];...",shape=box];
	_JOIN_9681062 [label="_JOIN_9681062None...",shape=box];
	_JOIN_9681062 -> 9681094;
	_JOIN_9413398 [label="_JOIN_9413398None...",shape=box];
	_JOIN_9413398 -> 9413643;
	_JOIN_9670892 [label="_JOIN_9670892None...",shape=box];
	_JOIN_9670892 -> 9828280;
	ForLoop9682324 [label="ForLoop9682324  for (k=cbv_34; k<=cbv_35; k=k+1) ...",shape=box];
	ForLoop9682324 -> 9682323;
	ForLoop9682324 -> _JOIN_9682324;
	ForLoop9674752 [label="ForLoop9674752  for (k=cbv_16; k<=cbv_17; k=k+1) ...",shape=box];
	ForLoop9674752 -> 9674751;
	ForLoop9674752 -> _JOIN_9674752;
	ForLoop9413467 [label="ForLoop9413467  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop9413467 -> 9413466;
	ForLoop9413467 -> _JOIN_9413467;
	_JOIN_9684794 [label="_JOIN_9684794None...",shape=box];
	_JOIN_9684794 -> 9841931;
	9422453 [label="9422453  double x_copy;...",shape=box];
	ForLoop9684794 [label="ForLoop9684794  for (k=kk; k<=cbv_40; k=k+29) {...",shape=box];
	ForLoop9684794 -> 9683896;
	ForLoop9684794 -> _JOIN_9684794;
	ForLoop9677196 [label="ForLoop9677196  for (k=kk; k<=cbv_21; k=k+29) {...",shape=box];
	ForLoop9677196 -> 9676130;
	ForLoop9677196 -> _JOIN_9677196;
	_JOIN_9672228 [label="_JOIN_9672228None...",shape=box];
	_JOIN_9672228 -> 9672260;
	_JOIN_9678458 [label="_JOIN_9678458None...",shape=box];
	_JOIN_9678458 -> 9835798;
	9683896 [label="9683896  y_copy[(k-kk)]=y_copy[(k-kk)]+A[i*ny+k]*tmp[i];...",shape=box];
	9425378 [label="9425378  tmp[it]=tmp[it]+A[it*ny+j]*x[j];...",shape=box];
	9673489 [label="9673489  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+2)*ny+k]*tmp[(i+2)];...",shape=box];
	9673489 -> _JOIN_9673490;
	_JOIN_9677196 [label="_JOIN_9677196None...",shape=box];
	_JOIN_9677196 -> 9834545;
	9681178 [label="9681178  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+9)*ny+k]*tmp[(i+9)];...",shape=box];
	9684900 [label="9684900  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	9684900 -> _JOIN_9684902;
	ForLoop9683506 [label="ForLoop9683506  for (k=kk; k<=cbv_36; k=k+29) {...",shape=box];
	ForLoop9683506 -> 9682440;
	ForLoop9683506 -> _JOIN_9683506;
	9424804 [label="9424804  tmp[it]=0;...",shape=box];
	9424804 -> ForLoop9424449;
	9838304 [label="9838304  register int cbv_31, cbv_32;...",shape=box];
	ForLoop9680982 [label="ForLoop9680982  for (k=kk; k<=cbv_30; k=k+29) {...",shape=box];
	ForLoop9680982 -> 9679916;
	ForLoop9680982 -> _JOIN_9680982;
	9839557 [label="9839557  register int cbv_34, cbv_35;...",shape=box];
	ForLoop9683620 [label="ForLoop9683620  for (kk=0; kk<=ny-1; kk=kk+16) {...",shape=box];
	ForLoop9683620 -> 9669947;
	ForLoop9683620 -> _JOIN_9683620;
	9840893 [label="9840893  register int cbv_39;...",shape=box];
	ForLoop9683622 [label="ForLoop9683622  for (i=it; i<=min(nx-1,ii+15)-10; i=i+11) {...",shape=box];
	ForLoop9683622 -> 9669448;
	ForLoop9683622 -> _JOIN_9683622;
	_JOIN_9674752 [label="_JOIN_9674752None...",shape=box];
	_JOIN_9674752 -> 9674784;
	9674784 [label="9674784  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop9683586 [label="ForLoop9683586  for (k=cbv_37; k<=cbv_38; k=k+1) ...",shape=box];
	ForLoop9683586 -> 9683585;
	ForLoop9683586 -> _JOIN_9683586;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest42.exe __orio_perftest42.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest42.exe  
{'[1, 6, 1, 1, 6, 0, 0, 1, 14, 10, 0, 28, 2, 0, 0, 0, 1, 1]' : 0.196829}
{'[1, 6, 1, 1, 6, 0, 0, 1, 14, 10, 0, 28, 2, 0, 0, 0, 1, 1]' : 0.195364}
{'[1, 6, 1, 1, 6, 0, 0, 1, 14, 10, 0, 28, 2, 0, 0, 0, 1, 1]' : 0.195548}
{'[1, 6, 1, 1, 6, 0, 0, 1, 14, 10, 0, 28, 2, 0, 0, 0, 1, 1]' : 0.195621}
{'[1, 6, 1, 1, 6, 0, 0, 1, 14, 10, 0, 28, 2, 0, 0, 0, 1, 1]' : 0.195441}
{'[1, 6, 1, 1, 6, 0, 0, 1, 14, 10, 0, 28, 2, 0, 0, 0, 1, 1]' : 0.195496}
{'[1, 6, 1, 1, 6, 0, 0, 1, 14, 10, 0, 28, 2, 0, 0, 0, 1, 1]' : 0.194701}
{'[1, 6, 1, 1, 6, 0, 0, 1, 14, 10, 0, 28, 2, 0, 0, 0, 1, 1]' : 0.19439}
{'[1, 6, 1, 1, 6, 0, 0, 1, 14, 10, 0, 28, 2, 0, 0, 0, 1, 1]' : 0.1943}
{'[1, 6, 1, 1, 6, 0, 0, 1, 14, 10, 0, 28, 2, 0, 0, 0, 1, 1]' : 0.194342}
{'[1, 6, 1, 1, 6, 0, 0, 1, 14, 10, 0, 28, 2, 0, 0, 0, 1, 1]' : 0.195411}
{'[1, 6, 1, 1, 6, 0, 0, 1, 14, 10, 0, 28, 2, 0, 0, 0, 1, 1]' : 0.194361}
{'[1, 6, 1, 1, 6, 0, 0, 1, 14, 10, 0, 28, 2, 0, 0, 0, 1, 1]' : 0.194299}
{'[1, 6, 1, 1, 6, 0, 0, 1, 14, 10, 0, 28, 2, 0, 0, 0, 1, 1]' : 0.194398}
{'[1, 6, 1, 1, 6, 0, 0, 1, 14, 10, 0, 28, 2, 0, 0, 0, 1, 1]' : 0.194453}
{'[1, 6, 1, 1, 6, 0, 0, 1, 14, 10, 0, 28, 2, 0, 0, 0, 1, 1]' : 0.19462}
{'[1, 6, 1, 1, 6, 0, 0, 1, 14, 10, 0, 28, 2, 0, 0, 0, 1, 1]' : 0.194574}
{'[1, 6, 1, 1, 6, 0, 0, 1, 14, 10, 0, 28, 2, 0, 0, 0, 1, 1]' : 0.195472}
{'[1, 6, 1, 1, 6, 0, 0, 1, 14, 10, 0, 28, 2, 0, 0, 0, 1, 1]' : 0.195369}
{'[1, 6, 1, 1, 6, 0, 0, 1, 14, 10, 0, 28, 2, 0, 0, 0, 1, 1]' : 0.195449}
{'[1, 6, 1, 1, 6, 0, 0, 1, 14, 10, 0, 28, 2, 0, 0, 0, 1, 1]' : 0.196446}
{'[1, 6, 1, 1, 6, 0, 0, 1, 14, 10, 0, 28, 2, 0, 0, 0, 1, 1]' : 0.195591}
{'[1, 6, 1, 1, 6, 0, 0, 1, 14, 10, 0, 28, 2, 0, 0, 0, 1, 1]' : 0.195566}
{'[1, 6, 1, 1, 6, 0, 0, 1, 14, 10, 0, 28, 2, 0, 0, 0, 1, 1]' : 0.19549}
{'[1, 6, 1, 1, 6, 0, 0, 1, 14, 10, 0, 28, 2, 0, 0, 0, 1, 1]' : 0.195551}
{'[1, 6, 1, 1, 6, 0, 0, 1, 14, 10, 0, 28, 2, 0, 0, 0, 1, 1]' : 0.195539}
{'[1, 6, 1, 1, 6, 0, 0, 1, 14, 10, 0, 28, 2, 0, 0, 0, 1, 1]' : 0.195443}
{'[1, 6, 1, 1, 6, 0, 0, 1, 14, 10, 0, 28, 2, 0, 0, 0, 1, 1]' : 0.195439}
{'[1, 6, 1, 1, 6, 0, 0, 1, 14, 10, 0, 28, 2, 0, 0, 0, 1, 1]' : 0.195432}
{'[1, 6, 1, 1, 6, 0, 0, 1, 14, 10, 0, 28, 2, 0, 0, 0, 1, 1]' : 0.195568}

out:
 ["{'[1, 6, 1, 1, 6, 0, 0, 1, 14, 10, 0, 28, 2, 0, 0, 0, 1, 1]' : 0.196829}", "{'[1, 6, 1, 1, 6, 0, 0, 1, 14, 10, 0, 28, 2, 0, 0, 0, 1, 1]' : 0.195364}", "{'[1, 6, 1, 1, 6, 0, 0, 1, 14, 10, 0, 28, 2, 0, 0, 0, 1, 1]' : 0.195548}", "{'[1, 6, 1, 1, 6, 0, 0, 1, 14, 10, 0, 28, 2, 0, 0, 0, 1, 1]' : 0.195621}", "{'[1, 6, 1, 1, 6, 0, 0, 1, 14, 10, 0, 28, 2, 0, 0, 0, 1, 1]' : 0.195441}", "{'[1, 6, 1, 1, 6, 0, 0, 1, 14, 10, 0, 28, 2, 0, 0, 0, 1, 1]' : 0.195496}", "{'[1, 6, 1, 1, 6, 0, 0, 1, 14, 10, 0, 28, 2, 0, 0, 0, 1, 1]' : 0.194701}", "{'[1, 6, 1, 1, 6, 0, 0, 1, 14, 10, 0, 28, 2, 0, 0, 0, 1, 1]' : 0.19439}", "{'[1, 6, 1, 1, 6, 0, 0, 1, 14, 10, 0, 28, 2, 0, 0, 0, 1, 1]' : 0.1943}", "{'[1, 6, 1, 1, 6, 0, 0, 1, 14, 10, 0, 28, 2, 0, 0, 0, 1, 1]' : 0.194342}", "{'[1, 6, 1, 1, 6, 0, 0, 1, 14, 10, 0, 28, 2, 0, 0, 0, 1, 1]' : 0.195411}", "{'[1, 6, 1, 1, 6, 0, 0, 1, 14, 10, 0, 28, 2, 0, 0, 0, 1, 1]' : 0.194361}", "{'[1, 6, 1, 1, 6, 0, 0, 1, 14, 10, 0, 28, 2, 0, 0, 0, 1, 1]' : 0.194299}", "{'[1, 6, 1, 1, 6, 0, 0, 1, 14, 10, 0, 28, 2, 0, 0, 0, 1, 1]' : 0.194398}", "{'[1, 6, 1, 1, 6, 0, 0, 1, 14, 10, 0, 28, 2, 0, 0, 0, 1, 1]' : 0.194453}", "{'[1, 6, 1, 1, 6, 0, 0, 1, 14, 10, 0, 28, 2, 0, 0, 0, 1, 1]' : 0.19462}", "{'[1, 6, 1, 1, 6, 0, 0, 1, 14, 10, 0, 28, 2, 0, 0, 0, 1, 1]' : 0.194574}", "{'[1, 6, 1, 1, 6, 0, 0, 1, 14, 10, 0, 28, 2, 0, 0, 0, 1, 1]' : 0.195472}", "{'[1, 6, 1, 1, 6, 0, 0, 1, 14, 10, 0, 28, 2, 0, 0, 0, 1, 1]' : 0.195369}", "{'[1, 6, 1, 1, 6, 0, 0, 1, 14, 10, 0, 28, 2, 0, 0, 0, 1, 1]' : 0.195449}", "{'[1, 6, 1, 1, 6, 0, 0, 1, 14, 10, 0, 28, 2, 0, 0, 0, 1, 1]' : 0.196446}", "{'[1, 6, 1, 1, 6, 0, 0, 1, 14, 10, 0, 28, 2, 0, 0, 0, 1, 1]' : 0.195591}", "{'[1, 6, 1, 1, 6, 0, 0, 1, 14, 10, 0, 28, 2, 0, 0, 0, 1, 1]' : 0.195566}", "{'[1, 6, 1, 1, 6, 0, 0, 1, 14, 10, 0, 28, 2, 0, 0, 0, 1, 1]' : 0.19549}", "{'[1, 6, 1, 1, 6, 0, 0, 1, 14, 10, 0, 28, 2, 0, 0, 0, 1, 1]' : 0.195551}", "{'[1, 6, 1, 1, 6, 0, 0, 1, 14, 10, 0, 28, 2, 0, 0, 0, 1, 1]' : 0.195539}", "{'[1, 6, 1, 1, 6, 0, 0, 1, 14, 10, 0, 28, 2, 0, 0, 0, 1, 1]' : 0.195443}", "{'[1, 6, 1, 1, 6, 0, 0, 1, 14, 10, 0, 28, 2, 0, 0, 0, 1, 1]' : 0.195439}", "{'[1, 6, 1, 1, 6, 0, 0, 1, 14, 10, 0, 28, 2, 0, 0, 0, 1, 1]' : 0.195432}", "{'[1, 6, 1, 1, 6, 0, 0, 1, 14, 10, 0, 28, 2, 0, 0, 0, 1, 1]' : 0.195568}"]
returning from 'run': {'[1, 6, 1, 1, 6, 0, 0, 1, 14, 10, 0, 28, 2, 0, 0, 0, 1, 1]': ([0.196829, 0.195364, 0.195548, 0.195621, 0.195441, 0.195496, 0.1947WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = iii
01, 0.19439, 0.1943, 0.194342, 0.195411, 0.194361, 0.194299, 0.194398, 0.194453, 0.19462, 0.194574, 0.195472, 0.195369, 0.195449, 0.196446, 0.195591, 0.195566, 0.19549, 0.195551, 0.195539, 0.195443, 0.195439, 0.195432, 0.195568], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.196829, 0.195364, 0.195548, 0.195621, 0.195441, 0.195496, 0.194701, 0.19439, 0.1943, 0.194342, 0.195411, 0.194361, 0.194299, 0.194398, 0.194453, 0.19462, 0.194574, 0.195472, 0.195369, 0.195449, 0.196446, 0.195591, 0.195566, 0.19549, 0.195551, 0.195539, 0.195443, 0.195439, 0.195432, 0.195568], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[1, 6, 1, 1, 6, 0, 0, 1, 14, 10, 0, 28, 2, 0, 0, 0, 1, 1]': ([0.196829, 0.195364, 0.195548, 0.195621, 0.195441, 0.195496, 0.194701, 0.19439, 0.1943, 0.194342, 0.195411, 0.194361, 0.194299, 0.194398, 0.194453, 0.19462, 0.194574, 0.195472, 0.195369, 0.195449, 0.196446, 0.195591, 0.195566, 0.19549, 0.195551, 0.195539, 0.195443, 0.195439, 0.195432, 0.195568], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [4, 3, 6, 2, 0, 0, 0, 23, 0, 2, 12, 0, 1, 1, 1, 0]
Fixed Factors: {'T2_J': 6, 'VEC1': 1}
Testing candidate 5: [4, 3, 6, 2, 6, 0, 0, 0, 23, 0, 2, 12, 0, 1, 1, 1, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		225
        Multiplications: 	68
        Divisions: 		0
        Logical: 		0
        Reads: 			536
        Writes: 		135
        Comparisons:		13
        Gotos: 			0
        
digraph CFG {
	ForLoop9866419 [label="ForLoop9866419  for (kk=0; kk<=ny-1; kk=kk+512) {...",shape=box];
	ForLoop9866419 -> ForLoop9865969;
	ForLoop9866419 -> _JOIN_9866419;
	ForLoop9843018 [label="ForLoop9843018  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop9843018 -> 9843017;
	ForLoop9843018 -> _JOIN_9843018;
	_JOIN_9865969 [label="_JOIN_9865969None...",shape=box];
	_JOIN_9865969 -> 9865970;
	9843017 [label="9843017  y[i]=0.0;...",shape=box];
	9843017 -> _JOIN_9843018;
	_JOIN_9866419 [label="_JOIN_9866419None...",shape=box];
	_JOIN_9866419 -> 9871433;
	9868855 [label="9868855  double scv_9, scv_10, scv_11, scv_12, scv_13, scv_14, scv_15, scv_16;...",shape=box];
	ForLoop9865969 [label="ForLoop9865969  for (kt=kk; kt<=min(ny-1,kk+511)-7; kt=kt+8) {...",shape=box];
	ForLoop9865969 -> 9868132;
	ForLoop9865969 -> _JOIN_9865969;
	9865706 [label="9865706  scv_23=scv_23+A[i*ny+j]*x[j];...",shape=box];
	9865706 -> _JOIN_9865707;
	9865970 [label="9865970  int k;...",shape=box];
	9865970 -> ForLoop9866348;
	9865587 [label="9865587  scv_23=scv_23+A[i*ny+j]*x[j];...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 9842338;
	_JOIN_9866416 [label="_JOIN_9866416None...",shape=box];
	_JOIN_9866416 -> _JOIN_9866419;
	9865362 [label="9865362  scv_23=scv_23+A[i*ny+jt]*x[jt];...",shape=box];
	9871421 [label="9871421  double scv_23;...",shape=box];
	_JOIN_9842949 [label="_JOIN_9842949None...",shape=box];
	_JOIN_9842949 -> 9843275;
	_JOIN_9865639 [label="_JOIN_9865639None...",shape=box];
	_JOIN_9865639 -> ForLoop9865707;
	ForLoop9865639 [label="ForLoop9865639  for (j=jt; j<=min(ny-1,jj+63)-2; j=j+3) {...",shape=box];
	ForLoop9865639 -> 9865587;
	ForLoop9865639 -> _JOIN_9865639;
	ForLoop9865711 [label="ForLoop9865711  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop9865711 -> ForLoop9865710;
	ForLoop9865711 -> _JOIN_9865711;
	ForLoop9865710 [label="ForLoop9865710  for (jj=jjj; jj<=min(ny-1,jjj+1984); jj=jj+64) {...",shape=box];
	ForLoop9865710 -> ForLoop9865546;
	ForLoop9865710 -> _JOIN_9865710;
	_JOIN_9843018 [label="_JOIN_9843018None...",shape=box];
	_JOIN_9843018 -> 9865253;
	ForLoop9865546 [label="ForLoop9865546  for (jt=jj; jt<=min(ny-1,jj+63)-7expected=9369846271501.798828
actual=9369846271501.798828
; jt=jt+8) {...",shape=box];
	ForLoop9865546 -> 9865362;
	ForLoop9865546 -> _JOIN_9865546;
	_JOIN_9865711 [label="_JOIN_9865711None...",shape=box];
	_JOIN_9865711 -> ForLoop9866419;
	9842740 [label="9842740  y[i]=0.0;...",shape=box];
	_JOIN_9865546 [label="_JOIN_9865546None...",shape=box];
	_JOIN_9865546 -> 9865547;
	9865547 [label="9865547  int j;...",shape=box];
	9865547 -> ForLoop9865639;
	9842338 [label="9842338  int i;...",shape=box];
	ForLoop9842949 [label="ForLoop9842949  for (i=0; i<=cbv_1; i=i+24) {...",shape=box];
	ForLoop9842949 -> 9842740;
	ForLoop9842949 -> _JOIN_9842949;
	9868132 [label="9868132  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	ForLoop9866348 [label="ForLoop9866348  for (k=kt; k<=min(ny-1,kk+511)-12; k=k+13) {...",shape=box];
	ForLoop9866348 -> 9868855;
	ForLoop9866348 -> _JOIN_9866348;
	ForLoop9866421 [label="ForLoop9866421  for (i=ii; i<=min(nx-1,ii+127); i=i+1) {...",shape=box];
	ForLoop9866421 -> 9871421;
	ForLoop9866421 -> _JOIN_9866421;
	ForLoop9866422 [label="ForLoop9866422  for (ii=0; ii<=nx-1; ii=ii+128) {...",shape=box];
	ForLoop9866422 -> ForLoop9866421;
	ForLoop9866422 -> _JOIN_9866422;
	_JOIN_9866348 [label="_JOIN_9866348None...",shape=box];
	_JOIN_9866348 -> ForLoop9866416;
	_JOIN_9865710 [label="_JOIN_9865710None...",shape=box];
	_JOIN_9865710 -> _JOIN_9865711;
	_JOIN_9866421 [label="_JOIN_9866421None...",shape=box];
	_JOIN_9866421 -> _JOIN_9866422;
	_JOIN_9866422 [label="_JOIN_9866422None...",shape=box];
	ForLoop9866416 [label="ForLoop9866416  for (k=(min(ny-1,kk+511))-(((min(ny-1,kk+511))-(kt)+1)%13)+1; k<=min(ny-1,kk+511); k=k+1) {...",shape=box];
	ForLoop9866416 -> 9869194;
	ForLoop9866416 -> _JOIN_9866416;
	9865253 [label="9865253  double x_copy;...",shape=box];
	9871433 [label="9871433  tmp[i]=scv_23;...",shape=box];
	9871433 -> _JOIN_9866421;
	9843275 [label="9843275  register int cbv_2, cbv_3;...",shape=box];
	9869194 [label="9869194  double scv_22;...",shape=box];
	_JOIN_9865707 [label="_JOIN_9865707None...",shape=box];
	_JOIN_9865707 -> _JOIN_9865710;
	ForLoop9865707 [label="ForLoop9865707  for (j=(min(ny-1,jj+63))-(((min(ny-1,jj+63))-(jt)+1)%3)+1; j<=min(ny-1,jj+63); j=j+1) {...",shape=box];
	ForLoop9865707 -> 9865706;
	ForLoop9865707 -> _JOIN_9865707;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest43.exe __orio_perftest43.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest43.exe  
{'[4, 3, 6, 2, 6, 0, 0, 0, 23, 0, 2, 12, 0, 1, 1, 1, 1, 0]' : 0.124082}
{'[4, 3, 6, 2, 6, 0, 0, 0, 23, 0, 2, 12, 0, 1, 1, 1, 1, 0]' : 0.124037}
{'[4, 3, 6, 2, 6, 0, 0, 0, 23, 0, 2, 12, 0, 1, 1, 1, 1, 0]' : 0.123978}
{'[4, 3, 6, 2, 6, 0, 0, 0, 23, 0, 2, 12, 0, 1, 1, 1, 1, 0]' : 0.124022}
{'[4, 3, 6, 2, 6, 0, 0, 0, 23, 0, 2, 12, 0, 1, 1, 1, 1, 0]' : 0.123991}
{'[4, 3, 6, 2, 6, 0, 0, 0, 23, 0, 2, 12, 0, 1, 1, 1, 1, 0]' : 0.124998}
{'[4, 3, 6, 2, 6, 0, 0, 0, 23, 0, 2, 12, 0, 1, 1, 1, 1, 0]' : 0.124066}
{'[4, 3, 6, 2, 6, 0, 0, 0, 23, 0, 2, 12, 0, 1, 1, 1, 1, 0]' : 0.124069}
{'[4, 3, 6, 2, 6, 0, 0, 0, 23, 0, 2, 12, 0, 1, 1, 1, 1, 0]' : 0.124042}
{'[4, 3, 6, 2, 6, 0, 0, 0, 23, 0, 2, 12, 0, 1, 1, 1, 1, 0]' : 0.123994}
{'[4, 3, 6, 2, 6, 0, 0, 0, 23, 0, 2, 12, 0, 1, 1, 1, 1, 0]' : 0.124012}
{'[4, 3, 6, 2, 6, 0, 0, 0, 23, 0, 2, 12, 0, 1, 1, 1, 1, 0]' : 0.124019}
{'[4, 3, 6, 2, 6, 0, 0, 0, 23, 0, 2, 12, 0, 1, 1, 1, 1, 0]' : 0.124254}
{'[4, 3, 6, 2, 6, 0, 0, 0, 23, 0, 2, 12, 0, 1, 1, 1, 1, 0]' : 0.124138}
{'[4, 3, 6, 2, 6, 0, 0, 0, 23, 0, 2, 12, 0, 1, 1, 1, 1, 0]' : 0.124045}
{'[4, 3, 6, 2, 6, 0, 0, 0, 23, 0, 2, 12, 0, 1, 1, 1, 1, 0]' : 0.124069}
{'[4, 3, 6, 2, 6, 0, 0, 0, 23, 0, 2, 12, 0, 1, 1, 1, 1, 0]' : 0.124051}
{'[4, 3, 6, 2, 6, 0, 0, 0, 23, 0, 2, 12, 0, 1, 1, 1, 1, 0]' : 0.123995}
{'[4, 3, 6, 2, 6, 0, 0, 0, 23, 0, 2, 12, 0, 1, 1, 1, 1, 0]' : 0.124046}
{'[4, 3, 6, 2, 6, 0, 0, 0, 23, 0, 2, 12, 0, 1, 1, 1, 1, 0]' : 0.124018}
{'[4, 3, 6, 2, 6, 0, 0, 0, 23, 0, 2, 12, 0, 1, 1, 1, 1, 0]' : 0.12411}
{'[4, 3, 6, 2, 6, 0, 0, 0, 23, 0, 2, 12, 0, 1, 1, 1, 1, 0]' : 0.125079}
{'[4, 3, 6, 2, 6, 0, 0, 0, 23, 0, 2, 12, 0, 1, 1, 1, 1, 0]' : 0.124065}
{'[4, 3, 6, 2, 6, 0, 0, 0, 23, 0, 2, 12, 0, 1, 1, 1, 1, 0]' : 0.124252}
{'[4, 3, 6, 2, 6, 0, 0, 0, 23, 0, 2, 12, 0, 1, 1, 1, 1, 0]' : 0.12431}
{'[4, 3, 6, 2, 6, 0, 0, 0, 23, 0, 2, 12, 0, 1, 1, 1, 1, 0]' : 0.124011}
{'[4, 3, 6, 2, 6, 0, 0, 0, 23, 0, 2, 12, 0, 1, 1, 1, 1, 0]' : 0.124086}
{'[4, 3, 6, 2, 6, 0, 0, 0, 23, 0, 2, 12, 0, 1, 1, 1, 1, 0]' : 0.124038}
{'[4, 3, 6, 2, 6, 0, 0, 0, 23, 0, 2, 12, 0, 1, 1, 1, 1, 0]' : 0.124006}
{'[4, 3, 6, 2, 6, 0, 0, 0, 23, 0, 2, 12, 0, 1, 1, 1, 1, 0]' : 0.124094}

out:
 ["{'[4, 3, 6, 2, 6, 0, 0, 0, 23, 0, 2, 12, 0, 1, 1, 1, 1, 0]' : 0.124082}", "{'[4, 3, 6, 2, 6, 0, 0, 0, 23, 0, 2, 12, 0, 1, 1, 1, 1, 0]' : 0.124037}", "{'[4, 3, 6, 2, 6, 0, 0, 0, 23, 0, 2, 12, 0, 1, 1, 1, 1, 0]' : 0.123978}", "{'[4, 3, 6, 2, 6, 0, 0, 0, 23, 0, 2, 12, 0, 1, 1, 1, 1, 0]' : 0.124022}", "{'[4, 3, 6, 2, 6, 0, 0, 0, 23, 0, 2, 12, 0, 1, 1, 1, 1, 0]' : 0.123991}", "{'[4, 3, 6, 2, 6, 0, 0, 0, 23, 0, 2, 12, 0, 1, 1, 1, 1, 0]' : 0.124998}", "{'[4, 3, 6, 2, 6, 0, 0, 0, 23, 0, 2, 12, 0, 1, 1, 1, 1, 0]' : 0.124066}", "{'[4, 3, 6, 2, 6, 0, 0, 0, 23, 0, 2, 12, 0, 1, 1, 1, 1, 0]' : 0.124069}", "{'[4, 3, 6, 2, 6, 0, 0, 0, 23, 0, 2, 12, 0, 1, 1, 1, 1, 0]' : 0.124042}", "{'[4, 3, 6, 2, 6, 0, 0, 0, 23, 0, 2, 12, 0, 1, 1, 1, 1, 0]' : 0.123994}", "{'[4, 3, 6, 2, 6, 0, 0, 0, 23, 0, 2, 12, 0, 1, 1, 1, 1, 0]' : 0.124012}", "{'[4, 3, 6, 2, 6, 0, 0, 0, 23, 0, 2, 12, 0, 1, 1, 1, 1, 0]' : 0.124019}", "{'[4, 3, 6, 2, 6, 0, 0, 0, 23, 0, 2, 12, 0, 1, 1, 1, 1, 0]' : 0.124254}", "{'[4, 3, 6, 2, 6, 0, 0, 0, 23, 0, 2, 12, 0, 1, 1, 1, 1, 0]' : 0.124138}", "{'[4, 3, 6, 2, 6, 0, 0, 0, 23, 0, 2, 12, 0, 1, 1, 1, 1, 0]' : 0.124045}", "{'[4, 3, 6, 2, 6, 0, 0, 0, 23, 0, 2, 12, 0, 1, 1, 1, 1, 0]' : 0.124069}", "{'[4, 3, 6, 2, 6, 0, 0, 0, 23, 0, 2, 12, 0, 1, 1, 1, 1, 0]' : 0.124051}", "{'[4, 3, 6, 2, 6, 0, 0, 0, 23, 0, 2, 12, 0, 1, 1, 1, 1, 0]' : 0.123995}", "{'[4, 3, 6, 2, 6, 0, 0, 0, 23, 0, 2, 12, 0, 1, 1, 1, 1, 0]' : 0.124046}", "{'[4, 3, 6, 2, 6, 0, 0, 0, 23, 0, 2, 12, 0, 1, 1, 1, 1, 0]' : 0.124018}", "{'[4, 3, 6, 2, 6, 0, 0, 0, 23, 0, 2, 12, 0, 1, 1, 1, 1, 0]' : 0.12411}", "{'[4, 3, 6, 2, 6, 0, 0, 0, 23, 0, 2, 12, 0, 1, 1, 1, 1, 0]' : 0.125079}", "{'[4, 3, 6, 2, 6, 0, 0, 0, 23, 0, 2, 12, 0, 1, 1, 1, 1, 0]' : 0.124065}", "{'[4, 3, 6, 2, 6, 0, 0, 0, 23, 0, 2, 12, 0, 1, 1, 1, 1, 0]' : 0.124252}", "{'[4, 3, 6, 2, 6, 0, 0, 0, 23, 0, 2, 12, 0, 1, 1, 1, 1, 0]' : 0.12431}", "{'[4, 3, 6, 2, 6, 0, 0, 0, 23, 0, 2, 12, 0, 1, 1, 1, 1, 0]' : 0.124011}", "{'[4, 3, 6, 2, 6, 0, 0, 0, 23, 0, 2, 12, 0, 1, 1, 1, 1, 0]' : 0.124086}", "{'[4, 3, 6, 2, 6, 0, 0, 0, 23, 0, 2, 12, 0, 1, 1, 1, 1, 0]' : 0.124038}", "{'[4, 3, 6, 2, 6, 0, 0, 0, 23, 0, 2, 12, 0, 1, 1, 1, 1, 0]' : 0.124006}", "{'[4, 3, 6, 2, 6, 0, 0, 0, 23, 0, 2, 12, 0, 1, 1, 1, 1, 0]' : 0.124094}"]
returning from 'run': {'[4, 3, 6, 2, 6, 0, 0, 0, 23, 0, 2, 12, 0, 1, 1, 1, 1, 0]': ([0.124082, 0.124037, 0.123978, 0.124022, 0.123991, 0.124998, 0.124066, 0.124069, 0.124042, 0.123994, 0.124012, 0.124019, 0.124254, 0.124138, 0.124045, 0.124069, 0.124051, 0.123995, 0.124046, 0.124018, 0.12411, 0.125079, 0.124065, 0.124252, 0.12431, 0.124011, 0.124086, 0.124038, 0.124006, 0.124094], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.124082, 0.124037, 0.123978, 0.124022, 0.123991, 0.124998, 0.124066, 0.124069, 0.124042, 0.123994, 0.124012, 0.124019, 0.124254, 0.124138, 0.124045, 0.124069, 0.124051, 0.123995, 0.124046, 0.124018, 0.12411, 0.125079, 0.124065, 0.124252, 0.12431, 0.124011, 0.124086, 0.124038, 0.124006, 0.124094], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[4, 3, 6, 2, 6, 0, 0, 0, 23, 0, 2, 12, 0, 1, 1, 1, 1, 0]': ([0.124082, 0.124037, 0.123978, 0.124022, 0.123991, 0.124998, 0.124066, 0.124069, 0.124042, 0.123994, 0.124012, 0.124019, 0.124254, 0.124138, 0.124045, 0.124069, 0.124051, 0.123995, 0.124046, 0.124018, 0.12411, 0.125079, 0.124065, 0.124252, 0.12431, 0.124011, 0.124086, 0.124038, 0.124006, 0.124094], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [6, 6, 1, 0, 6, 1, 1, 17, 3, 5, 0, 0, 2, 0, 0, 1]
Fixed Factors: {'T2_J': 6, 'VEC1': 1}
Testing candidate 6: [6, 6, 1, 0, 6, 6, 1, 1, 17, 3, 5, 0, 0, 2, 0, 0, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	32
        Max loop nest depth: 	5
        Additions: 		1243
        Multiplications: 	330
        Divisions: 		0
        Logical: 		0
        Reads: 			2173
        Writes: 		275
        Comparisons:		32
        Gotos: 			0
        
digraph CFG {
	_JOIN_9926430 [label="_JOIN_9926430None...",shape=box];
	_JOIN_9926430 -> _JOIN_9926432;
	9882139 [label="9882139  double x_copy[512];...",shape=box];
	_JOIN_9926432 [label="_JOIN_9926432None...",shape=box];
	_JOIN_9926432 -> _JOIN_9926433;
	_JOIN_9926433 [label="_JOIN_9926433None...",shape=box];
	_JOIN_9926433 -> ForLoop9926574;
	9926571 [label="9926571  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	9926571 -> _JOIN_9926573;
	_JOIN_9926573 [label="_JOIN_9926573None...",shape=box];
	_JOIN_9926573 -> _JOIN_9926574;
	9925486 [label="9925486  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	9925085 [label="9925085  y_copy[(k-kk)]=y_copy[(k-kk)]+A[i*ny+k]*tmp[i];...",shape=box];
	ForLoop9926433 [label="ForLoop9926433  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) ...",shape=box];
	ForLoop9926433 -> ForLoop9926432;
	ForLoop9926433 -> _JOIN_9926433;
	9920599 [label="9920599  tmp[i]=tmp[i]+A[i*ny+jt]*x_copy[(jt-jj)];...",shape=box];
	_JOIN_9926574 [label="_JOIN_9926574None...",shape=box];
	_JOIN_9926574 -> _JOIN_9926576;
	_JOIN_9926576 [label="_JOIN_9926576None...",shape=box];
	_JOIN_9926576 -> _JOIN_9876904;
	ForLoop9926430 [label="ForLoop9926430  for (jt=jj; jt<=cbv_3; jt=jt+32) {...",shape=box];
	ForLoop9926430 -> 9925529;
	ForLoop9926430 -> _JOIN_9926430;
	ForLoop9926432 [label="ForLoop9926432  for (jj=jjj; jj<=min(ny-1,jjj+1536); jj=jj+512) {...",shape=box];
	ForLoop9926432 -> 9925486;
	ForLoop9926432 -> _JOIN_9926432;
	_JOIN_9925313 [label="_JOIN_9925313None...",shape=box];
	_JOIN_9925313 -> ForLoop9926576;
	9926539 [label="9926539  y_copy[(k-kk)]=y_copy[(k-kk)]+A[i*ny+k]*tmp[i];...",shape=box];
	9926539 -> _JOIN_9926540;
	ForLoop9926573 [label="ForLoop9926573  for (kk=kkk; kk<=min(ny-1,kkk+2032); kk=kk+16) {...",shape=box];
	ForLoop9926573 -> 9926495;
	ForLoop9926573 -> _JOIN_9926573;
	9925214 [label="9925214  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 9872951;
	ForLoop9926576 [label="ForLoop9926576  for (i=(min(nx-1,ii+511))-(((min(nx-1,ii+511))-(ii)+1)%4)+1; i<=min(nx-1,ii+511); i=i+1) {...",shape=box];
	ForLoop9926576 -> 9925424;
	ForLoop9926576 -> _JOIN_9926576;
	ForLoop9925309 [label="ForLoop9925309  for (kk=kkk; kk<=min(ny-1,kkk+2032); kk=kk+16) {...",shape=box];
	ForLoop9925309 -> 9924948;
	ForLoop9925309 -> _JOIN_9925309;
	9925529 [label="9925529  tmp[i]=tmp[i]+A[i*ny+jt]*x_copy[(jt-jj)];...",shape=box];
	_JOIN_9873418 [label="_JOIN_9873418None...",shape=box];
	_JOIN_9873418 -> 9873690;
	ForLoop9876904 [label="ForLoop9876904  for (ii=0; ii<=nx-1; ii=ii+512) {...",shape=box];
	ForLoop9876904 -> 9908061;
	ForLoop9876904 -> _JOIN_9876904;
	ForLoop9926574 [label="ForLoop9926574  for (kkk=0; kkk<=ny-1; kkk=kkk+2048) ...",shape=box];
	ForLoop9926574 -> ForLoop9926573;
	ForLoop9926574 -> _JOIN_9926574;
	ForLoop9924886 [label="ForLoop9924886  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop9924886 -> ForLoop9924884;
	ForLoop9924886 -> _JOIN_9924886;
	ForLoop9925183 [label="ForLoop9925183  for (k=kk; k<=cbv_2; k=k+1) {...",shape=box];
	ForLoop9925183 -> 9925085;
	ForLoop9925183 -> _JOIN_9925183;
	ForLoop9924884 [label="ForLoop9924884  for (jj=jjj; jj<=min(ny-1,jjj+1536); jj=jj+512) {...",shape=box];
	ForLoop9924884 -> 9920463;
	ForLoop9924884 -> _JOIN_9924884;
	ForLoop9924882 [label="ForLoop9924882  for (jt=jj; jt<=cexpected=0.000000
actual=9369846271501.798828
bv_1; jt=jt+32) {...",shape=box];
	ForLoop9924882 -> 9920599;
	ForLoop9924882 -> _JOIN_9924882;
	ForLoop9873487 [label="ForLoop9873487  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop9873487 -> 9873486;
	ForLoop9873487 -> _JOIN_9873487;
	9873486 [label="9873486  y[i]=0.0;...",shape=box];
	9873486 -> _JOIN_9873487;
	9872951 [label="9872951  int i;...",shape=box];
	_JOIN_9876904 [label="_JOIN_9876904None...",shape=box];
	_JOIN_9924882 [label="_JOIN_9924882None...",shape=box];
	_JOIN_9924882 -> _JOIN_9924884;
	_JOIN_9926540 [label="_JOIN_9926540None...",shape=box];
	_JOIN_9926540 -> 9926571;
	_JOIN_9924886 [label="_JOIN_9924886None...",shape=box];
	_JOIN_9924886 -> ForLoop9925311;
	_JOIN_9924884 [label="_JOIN_9924884None...",shape=box];
	_JOIN_9924884 -> _JOIN_9924886;
	ForLoop9926540 [label="ForLoop9926540  for (k=kk; k<=cbv_4; k=k+1) ...",shape=box];
	ForLoop9926540 -> 9926539;
	ForLoop9926540 -> _JOIN_9926540;
	9920374 [label="9920374  tmp[i]=0;...",shape=box];
	9920463 [label="9920463  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	9926495 [label="9926495  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	9873690 [label="9873690  register int cbv_2, cbv_3;...",shape=box];
	_JOIN_9925183 [label="_JOIN_9925183None...",shape=box];
	_JOIN_9925183 -> 9925214;
	9908061 [label="9908061  int i;...",shape=box];
	9908061 -> ForLoop9925313;
	9873263 [label="9873263  y[i]=0.0;...",shape=box];
	9924948 [label="9924948  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop9873418 [label="ForLoop9873418  for (i=0; i<=cbv_1; i=i+18) {...",shape=box];
	ForLoop9873418 -> 9873263;
	ForLoop9873418 -> _JOIN_9873418;
	ForLoop9925311 [label="ForLoop9925311  for (kkk=0; kkk<=ny-1; kkk=kkk+2048) {...",shape=box];
	ForLoop9925311 -> ForLoop9925309;
	ForLoop9925311 -> _JOIN_9925311;
	ForLoop9925313 [label="ForLoop9925313  for (i=ii; i<=min(nx-1,ii+511)-3; i=i+4) {...",shape=box];
	ForLoop9925313 -> 9920374;
	ForLoop9925313 -> _JOIN_9925313;
	_JOIN_9925311 [label="_JOIN_9925311None...",shape=box];
	_JOIN_9925311 -> _JOIN_9925313;
	_JOIN_9873487 [label="_JOIN_9873487None...",shape=box];
	_JOIN_9873487 -> 9882139;
	_JOIN_9925309 [label="_JOIN_9925309None...",shape=box];
	_JOIN_9925309 -> _JOIN_9925311;
	9925424 [label="9925424  tmp[i]=0;...",shape=box];
	9925424 -> ForLoop9926433;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest44.exe __orio_perftest44.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest44.exe  
{'[6, 6, 1, 0, 6, 6, 1, 1, 17, 3, 5, 0, 0, 2, 0, 0, 1, 1]' : 0.185219}
{'[6, 6, 1, 0, 6, 6, 1, 1, 17, 3, 5, 0, 0, 2, 0, 0, 1, 1]' : 0.184887}
{'[6, 6, 1, 0, 6, 6, 1, 1, 17, 3, 5, 0, 0, 2, 0, 0, 1, 1]' : 0.184884}
{'[6, 6, 1, 0, 6, 6, 1, 1, 17, 3, 5, 0, 0, 2, 0, 0, 1, 1]' : 0.18609}
{'[6, 6, 1, 0, 6, 6, 1, 1, 17, 3, 5, 0, 0, 2, 0, 0, 1, 1]' : 0.184912}
{'[6, 6, 1, 0, 6, 6, 1, 1, 17, 3, 5, 0, 0, 2, 0, 0, 1, 1]' : 0.184869}
{'[6, 6, 1, 0, 6, 6, 1, 1, 17, 3, 5, 0, 0, 2, 0, 0, 1, 1]' : 0.184851}
{'[6, 6, 1, 0, 6, 6, 1, 1, 17, 3, 5, 0, 0, 2, 0, 0, 1, 1]' : 0.185016}
{'[6, 6, 1, 0, 6, 6, 1, 1, 17, 3, 5, 0, 0, 2, 0, 0, 1, 1]' : 0.184928}
{'[6, 6, 1, 0, 6, 6, 1, 1, 17, 3, 5, 0, 0, 2, 0, 0, 1, 1]' : 0.18501}
{'[6, 6, 1, 0, 6, 6, 1, 1, 17, 3, 5, 0, 0, 2, 0, 0, 1, 1]' : 0.184865}
{'[6, 6, 1, 0, 6, 6, 1, 1, 17, 3, 5, 0, 0, 2, 0, 0, 1, 1]' : 0.184852}
{'[6, 6, 1, 0, 6, 6, 1, 1, 17, 3, 5, 0, 0, 2, 0, 0, 1, 1]' : 0.184884}
{'[6, 6, 1, 0, 6, 6, 1, 1, 17, 3, 5, 0, 0, 2, 0, 0, 1, 1]' : 0.1859}
{'[6, 6, 1, 0, 6, 6, 1, 1, 17, 3, 5, 0, 0, 2, 0, 0, 1, 1]' : 0.18503}
{'[6, 6, 1, 0, 6, 6, 1, 1, 17, 3, 5, 0, 0, 2, 0, 0, 1, 1]' : 0.185032}
{'[6, 6, 1, 0, 6, 6, 1, 1, 17, 3, 5, 0, 0, 2, 0, 0, 1, 1]' : 0.184865}
{'[6, 6, 1, 0, 6, 6, 1, 1, 17, 3, 5, 0, 0, 2, 0, 0, 1, 1]' : 0.184843}
{'[6, 6, 1, 0, 6, 6, 1, 1, 17, 3, 5, 0, 0, 2, 0, 0, 1, 1]' : 0.184866}
{'[6, 6, 1, 0, 6, 6, 1, 1, 17, 3, 5, 0, 0, 2, 0, 0, 1, 1]' : 0.185083}
{'[6, 6, 1, 0, 6, 6, 1, 1, 17, 3, 5, 0, 0, 2, 0, 0, 1, 1]' : 0.184935}
{'[6, 6, 1, 0, 6, 6, 1, 1, 17, 3, 5, 0, 0, 2, 0, 0, 1, 1]' : 0.184847}
{'[6, 6, 1, 0, 6, 6, 1, 1, 17, 3, 5, 0, 0, 2, 0, 0, 1, 1]' : 0.184833}
{'[6, 6, 1, 0, 6, 6, 1, 1, 17, 3, 5, 0, 0, 2, 0, 0, 1, 1]' : 0.185015}
{'[6, 6, 1, 0, 6, 6, 1, 1, 17, 3, 5, 0, 0, 2, 0, 0, 1, 1]' : 0.185881}
{'[6, 6, 1, 0, 6, 6, 1, 1, 17, 3, 5, 0, 0, 2, 0, 0, 1, 1]' : 0.18489}
{'[6, 6, 1, 0, 6, 6, 1, 1, 17, 3, 5, 0, 0, 2, 0, 0, 1, 1]' : 0.184852}
{'[6, 6, 1, 0, 6, 6, 1, 1, 17, 3, 5, 0, 0, 2, 0, 0, 1, 1]' : 0.184863}
{'[6, 6, 1, 0, 6, 6, 1, 1, 17, 3, 5, 0, 0, 2, 0, 0, 1, 1]' : 0.184829}
{'[6, 6, 1, 0, 6, 6, 1, 1, 17, 3, 5, 0, 0, 2, 0, 0, 1, 1]' : 0.184823}

out:
 ["{'[6, 6, 1, 0, 6, 6, 1, 1, 17, 3, 5, 0, 0, 2, 0, 0, 1, 1]' : 0.185219}", "{'[6, 6, 1, 0, 6, 6, 1, 1, 17, 3, 5, 0, 0, 2, 0, 0, 1, 1]' : 0.184887}", "{'[6, 6, 1, 0, 6, 6, 1, 1, 17, 3, 5, 0, 0, 2, 0, 0, 1, 1]' : 0.184884}", "{'[6, 6, 1, 0, 6, 6, 1, 1, 17, 3, 5, 0, 0, 2, 0, 0, 1, 1]' : 0.18609}", "{'[6, 6, 1, 0, 6, 6, 1, 1, 17, 3, 5, 0, 0, 2, 0, 0, 1, 1]' : 0.184912}", "{'[6, 6, 1, 0, 6, 6, 1, 1, 17, 3, 5, 0, 0, 2, 0, 0, 1, 1]' : 0.184869}", "{'[6, 6, 1, 0, 6, 6, 1, 1, 17, 3, 5, 0, 0, 2, 0, 0, 1, 1]' : 0.184851}", "{'[6, 6, 1, 0, 6, 6, 1, 1, 17, 3, 5, 0, 0, 2, 0, 0, 1, 1]' : 0.185016}", "{'[6, 6, 1, 0, 6, 6, 1, 1, 17, 3, 5, 0, 0, 2, 0, 0, 1, 1]' : 0.184928}", "{'[6, 6, 1, 0, 6, 6, 1, 1, 17, 3, 5, 0, 0, 2, 0, 0, 1, 1]' : 0.18501}", "{'[6, 6, 1, 0, 6, 6, 1, 1, 17, 3, 5, 0, 0, 2, 0, 0, 1, 1]' : 0.184865}", "{'[6, 6, 1, 0, 6, 6, 1, 1, 17, 3, 5, 0, 0, 2, 0, 0, 1, 1]' : 0.184852}", "{'[6, 6, 1, 0, 6, 6, 1, 1, 17, 3, 5, 0, 0, 2, 0, 0, 1, 1]' : 0.184884}", "{'[6, 6, 1, 0, 6, 6, 1, 1, 17, 3, 5, 0, 0, 2, 0, 0, 1, 1]' : 0.1859}", "{'[6, 6, 1, 0, 6, 6, 1, 1, 17, 3, 5, 0, 0, 2, 0, 0, 1, 1]' : 0.18503}", "{'[6, 6, 1, 0, 6, 6, 1, 1, 17, 3, 5, 0, 0, 2, 0, 0, 1, 1]' : 0.185032}", "{'[6, 6, 1, 0, 6, 6, 1, 1, 17, 3, 5, 0, 0, 2, 0, 0, 1, 1]' : 0.184865}", "{'[6, 6, 1, 0, 6, 6, 1, 1, 17, 3, 5, 0, 0, 2, 0, 0, 1, 1]' : 0.184843}", "{'[6, 6, 1, 0, 6, 6, 1, 1, 17, 3, 5, 0, 0, 2, 0, 0, 1, 1]' : 0.184866}", "{'[6, 6, 1, 0, 6, 6, 1, 1, 17, 3, 5, 0, 0, 2, 0, 0, 1, 1]' : 0.185083}", "{'[6, 6, 1, 0, 6, 6, 1, 1, 17, 3, 5, 0, 0, 2, 0, 0, 1, 1]' : 0.184935}", "{'[6, 6, 1, 0, 6, 6, 1, 1, 17, 3, 5, 0, 0, 2, 0, 0, 1, 1]' : 0.184847}", "{'[6, 6, 1, 0, 6, 6, 1, 1, 17, 3, 5, 0, 0, 2, 0, 0, 1, 1]' : 0.184833}", "{'[6, 6, 1, 0, 6, 6, 1, 1, 17, 3, 5, 0, 0, 2, 0, 0, 1, 1]' : 0.185015}", "{'[6, 6, 1, 0, 6, 6, 1, 1, 17, 3, 5, 0, 0, 2, 0, 0, 1, 1]' : 0.185881}", "{'[6, 6, 1, 0, 6, 6, 1, 1, 17, 3, 5, 0, 0, 2, 0, 0, 1, 1]' : 0.18489}", "{'[6, 6, 1, 0, 6, 6, 1, 1, 17, 3, 5, 0, 0, 2, 0, 0, 1, 1]' : 0.184852}", "{'[6, 6, 1, 0, 6, 6, 1, 1, 17, 3, 5, 0, 0, 2, 0, 0, 1, 1]' : 0.184863}", "{'[6, 6, 1, 0, 6, 6, 1, 1, 17, 3, 5, 0, 0, 2, 0, 0, 1, 1]' : 0.184829}", "{'[6, 6, 1, 0, 6, 6, 1, 1, 17, 3, 5, 0, 0, 2, 0, 0, 1, 1]' : 0.184823}"]
returning from 'run': {'[6, 6, 1, 0, 6, 6, 1, 1, 17, 3, 5, 0, 0, 2, 0, 0, 1, 1]': ([0.185219, 0.184887, 0.184884, 0.18609, 0.184912, 0.184869, 0.184851, 0.185016, 0.184928, 0.18501, 0.184865, 0.184852, 0.184884, 0.1859, 0.18503, 0.185032, 0.184865, 0.184843, 0.184866, 0.185083, 0.184935, 0.184847, 0.184833, 0.185015, 0.185881, 0.18489, 0.184852, 0.184863, 0.184829, 0.184823], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.185219, 0.184887, 0.184884, 0.18609, 0.184912, 0.184869, 0.184851, 0.185016, 0.184928, 0.18501, 0.184865, 0.184852, 0.184884, 0.1859, 0.18503, 0.185032, 0.184865, 0.184843, 0.184866, 0.185083, 0.184935, 0.184847, 0.184833, 0.185015, 0.185881, 0.18489, 0.184852, 0.184863, 0.184829, 0.184823], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 1, 0, 6, 6, 1, 1, 17, 3, 5, 0, 0, 2, 0, 0, 1, 1]': ([0.185219, 0.184887, 0.184884, 0.18609, 0.184912, 0.184869, 0.184851, 0.185016, 0.184928, 0.18501, 0.184865, 0.184852, 0.184884, 0.1859, 0.18503, 0.185032, 0.184865, 0.184843, 0.184866, 0.185083, 0.184935, 0.184847, 0.184833, 0.185015, 0.185881, 0.18489, 0.184852, 0.184863, 0.184829, 0.184823], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [5, 4, 5, 0, 6, 0, 0, 9, 14, 24, 0, 0, 0, 0, 1, 0]
Fixed Factors: {'T2_J': 6, 'VEC1': 1}
Testing candidate 7: [5, 4, 5, 0, 6, 6, 0, 0, 9, 14, 24, 0, 0, 0, 0, 1, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	5
        Additions: 		1794
        Multiplications: 	864
        Divisions: 		0
        Logical: 		0
        Reads: 			3413
        Writes: 		562
        Comparisons:		19
        Gotos: 			0
        
digraph CFG {
	_JOIN_10023574 [label="_JOIN_10023574None...",shape=box];
	_JOIN_10023574 -> _JOIN_10023575;
	9938817 [label="9938817  y[i]=0.0;...",shape=box];
	9938817 -> _JOIN_9938818;
	10082617 [label="10082617  tmp[i]=scv_44;...",shape=box];
	10082617 -> _JOIN_10023577;
	_JOIN_9938818 [label="_JOIN_9938818None...",shape=box];
	_JOIN_9938818 -> 10009100;
	10022830 [label="10022830  scv_44=scv_44+A[i*ny+j]*x[j];...",shape=box];
	ForLoop10023579 [label="ForLoop10023579  for (ii=0; ii<=nx-1; ii=ii+256) {...",shape=box];
	ForLoop10023579 -> 10009115;
	ForLoop10023579 -> _JOIN_10023579;
	ForLoop9938749 [label="ForLoop9938749  for (i=0; i<=cbv_1; i=i+10) {...",shape=box];
	ForLoop9938749 -> 9938666;
	ForLoop9938749 -> _JOIN_9938749;
	10081573 [label="10081573  double scv_43;...",shape=box];
	ForLoop10023500 [label="ForLoop10023500  for (j=(min(ny-1,jj+127))-(((min(ny-1,jj+127))-(jj)+1)%25)+1; j<=min(ny-1,jj+127); j=j+1) {...",shape=box];
	ForLoop10023500 -> 10023499;
	ForLoop10023500 -> _JOIN_10023500;
	ForLoop10023503 [label="ForLoop10023503  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop10023503 -> ForLoop10023502;
	ForLoop10023503 -> _JOIN_10023503;
	10077918 [label="10077918  tmp[(i+12)]=scv_28;...",shape=box];
	_JOIN_10023502 [label="_JOIN_10023502None...",shape=box];
	_JOIN_10023502 -> _JOIN_10023503;
	10023499 [label="10023499  scv_44=scv_44+A[i*ny+j]*x[j];...",shape=box];
	10023499 -> _JOIN_10023500;
	ForLoop10022699 [label="ForLoop10022699  for (k=kk; k<=min(ny-1,kk+255); k=k+1) {...",shape=box];
	ForLoop10022699 -> 10065195;
	ForLoop10022699 -> _JOIN_10022699;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 9938474;
	_JOIN_10023500 [label="_JOIN_10023500None...",shape=box];
	_JOIN_10023500 -> _JOIN_10023502;
	_JOIN_10022701 [label="_JOIN_10022701None...",shape=box];
	_JOIN_10022701 -> _JOIN_10022703;
	10009115 [label="10009115  int i;...",shape=box];
	10009115 -> ForLoop10022705;
	10009299 [label="10009299  int j;...",shape=box];
	ForLoop10022262 [label="ForLoop10022262  for (jj=jjj; jj<=min(ny-1,jjj+1920); jj=jj+128) {...",shape=box];
	ForLoop10022262 -> 10009299;
	ForLoop10022262 -> _JOIN_10022262;
	ForLoop10022260 [label="ForLoop10022260  for (j=(min(ny-1,jj+127))-(((min(ny-1,jj+127))-(jj)+1)%25)+1; j<=min(ny-1,jj+127); j=j+1) {...",shape=box];
	ForLoop10022260 -> 10041917;
	ForLoop10022260 -> _JOIN_10022260;
	_JOIN_9938749 [label="_JOIN_9938749None...",shape=box];
	_JOIN_9938749 -> 9938949;
	_JOIN_10022260 [label="_JOIN_10022260None...",shape=box];
	_JOIN_10022260 -> _JOIN_10022262;
	_JOIN_10021785 [label="_JOIN_10021785None...",shape=box];
	_JOIN_10021785 -> ForLoop10022260;
	_JOIN_10022264 [label="_JOIN_10022264None...",shape=box];
	_JOIN_10022264 -> ForLoop10022703;
	10040674 [label="10040674  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	_JOIN_10023575 [label="_JOIN_10023575None...",shape=box];
	_JOIN_10023575 -> 10082617;
	_JOIN_10023577 [label="_JOIN_10023577None...",shape=box];
	_JOIN_10023577 -> _JOIN_10023579;
	ForLoop10023574 [label="ForLoop10023574  for (kk=kkk; kk<=min(ny-1,kkk+1792); kk=kk+256) {...",shape=box];
	ForLoop10023574 -> ForLoop10023573;
	ForLoop10023574 -> _JOIN_10023574;
	_JOIN_10023573 [label="_JOIN_10023573None...",shape=box];
	_JOIN_10023573 -> _JOIN_10023574;
	10022790 [label="10022790  int j;...",shape=box];
	10022790 -> ForLoop10023432;
	_JOIN_1002357expected=9369846271501.798828
actual=9369846271501.798828
9 [label="_JOIN_10023579None...",shape=box];
	9938474 [label="9938474  int i;...",shape=box];
	ForLoop9938818 [label="ForLoop9938818  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop9938818 -> 9938817;
	ForLoop9938818 -> _JOIN_9938818;
	10082605 [label="10082605  double scv_44;...",shape=box];
	ForLoop10023573 [label="ForLoop10023573  for (k=kk; k<=min(ny-1,kk+255); k=k+1) {...",shape=box];
	ForLoop10023573 -> 10081573;
	ForLoop10023573 -> _JOIN_10023573;
	ForLoop10023432 [label="ForLoop10023432  for (j=jj; j<=min(ny-1,jj+127)-24; j=j+25) {...",shape=box];
	ForLoop10023432 -> 10022830;
	ForLoop10023432 -> _JOIN_10023432;
	ForLoop10022701 [label="ForLoop10022701  for (kk=kkk; kk<=min(ny-1,kkk+1792); kk=kk+256) {...",shape=box];
	ForLoop10022701 -> ForLoop10022699;
	ForLoop10022701 -> _JOIN_10022701;
	ForLoop10022703 [label="ForLoop10022703  for (kkk=0; kkk<=ny-1; kkk=kkk+2048) {...",shape=box];
	ForLoop10022703 -> ForLoop10022701;
	ForLoop10022703 -> _JOIN_10022703;
	ForLoop10023575 [label="ForLoop10023575  for (kkk=0; kkk<=ny-1; kkk=kkk+2048) {...",shape=box];
	ForLoop10023575 -> ForLoop10023574;
	ForLoop10023575 -> _JOIN_10023575;
	ForLoop10022705 [label="ForLoop10022705  for (i=ii; i<=min(nx-1,ii+255)-14; i=i+15) {...",shape=box];
	ForLoop10022705 -> 10077900;
	ForLoop10022705 -> _JOIN_10022705;
	10041917 [label="10041917  double scv_26;...",shape=box];
	10065195 [label="10065195  double scv_27;...",shape=box];
	_JOIN_10022703 [label="_JOIN_10022703None...",shape=box];
	_JOIN_10022703 -> 10077918;
	ForLoop10022264 [label="ForLoop10022264  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop10022264 -> ForLoop10022262;
	ForLoop10022264 -> _JOIN_10022264;
	ForLoop10021785 [label="ForLoop10021785  for (j=jj; j<=min(ny-1,jj+127)-24; j=j+25) {...",shape=box];
	ForLoop10021785 -> 10040674;
	ForLoop10021785 -> _JOIN_10021785;
	10077900 [label="10077900  double scv_28, scv_29, scv_30, scv_31, scv_32, scv_33, scv_34, scv_35;...",shape=box];
	10009100 [label="10009100  double x_copy;...",shape=box];
	ForLoop10023577 [label="ForLoop10023577  for (i=(min(nx-1,ii+255))-(((min(nx-1,ii+255))-(ii)+1)%15)+1; i<=min(nx-1,ii+255); i=i+1) {...",shape=box];
	ForLoop10023577 -> 10082605;
	ForLoop10023577 -> _JOIN_10023577;
	9938666 [label="9938666  y[i]=0.0;...",shape=box];
	9938949 [label="9938949  register int cbv_2, cbv_3;...",shape=box];
	_JOIN_10022705 [label="_JOIN_10022705None...",shape=box];
	_JOIN_10022705 -> ForLoop10023577;
	ForLoop10023502 [label="ForLoop10023502  for (jj=jjj; jj<=min(ny-1,jjj+1920); jj=jj+128) {...",shape=box];
	ForLoop10023502 -> 10022790;
	ForLoop10023502 -> _JOIN_10023502;
	_JOIN_10023503 [label="_JOIN_10023503None...",shape=box];
	_JOIN_10023503 -> ForLoop10023575;
	_JOIN_10022262 [label="_JOIN_10022262None...",shape=box];
	_JOIN_10022262 -> _JOIN_10022264;
	_JOIN_10022699 [label="_JOIN_10022699None...",shape=box];
	_JOIN_10022699 -> _JOIN_10022701;
	_JOIN_10023432 [label="_JOIN_10023432None...",shape=box];
	_JOIN_10023432 -> ForLoop10023500;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest45.exe __orio_perftest45.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest45.exe  
{'[5, 4, 5, 0, 6, 6, 0, 0, 9, 14, 24, 0, 0, 0, 0, 1, 1, 0]' : 0.098284}
{'[5, 4, 5, 0, 6, 6, 0, 0, 9, 14, 24, 0, 0, 0, 0, 1, 1, 0]' : 0.0983181}
{'[5, 4, 5, 0, 6, 6, 0, 0, 9, 14, 24, 0, 0, 0, 0, 1, 1, 0]' : 0.0978549}
{'[5, 4, 5, 0, 6, 6, 0, 0, 9, 14, 24, 0, 0, 0, 0, 1, 1, 0]' : 0.097991}
{'[5, 4, 5, 0, 6, 6, 0, 0, 9, 14, 24, 0, 0, 0, 0, 1, 1, 0]' : 0.0979519}
{'[5, 4, 5, 0, 6, 6, 0, 0, 9, 14, 24, 0, 0, 0, 0, 1, 1, 0]' : 0.097918}
{'[5, 4, 5, 0, 6, 6, 0, 0, 9, 14, 24, 0, 0, 0, 0, 1, 1, 0]' : 0.0978999}
{'[5, 4, 5, 0, 6, 6, 0, 0, 9, 14, 24, 0, 0, 0, 0, 1, 1, 0]' : 0.0980151}
{'[5, 4, 5, 0, 6, 6, 0, 0, 9, 14, 24, 0, 0, 0, 0, 1, 1, 0]' : 0.0980589}
{'[5, 4, 5, 0, 6, 6, 0, 0, 9, 14, 24, 0, 0, 0, 0, 1, 1, 0]' : 0.0978899}
{'[5, 4, 5, 0, 6, 6, 0, 0, 9, 14, 24, 0, 0, 0, 0, 1, 1, 0]' : 0.098031}
{'[5, 4, 5, 0, 6, 6, 0, 0, 9, 14, 24, 0, 0, 0, 0, 1, 1, 0]' : 0.0980392}
{'[5, 4, 5, 0, 6, 6, 0, 0, 9, 14, 24, 0, 0, 0, 0, 1, 1, 0]' : 0.0979619}
{'[5, 4, 5, 0, 6, 6, 0, 0, 9, 14, 24, 0, 0, 0, 0, 1, 1, 0]' : 0.0978699}
{'[5, 4, 5, 0, 6, 6, 0, 0, 9, 14, 24, 0, 0, 0, 0, 1, 1, 0]' : 0.097966}
{'[5, 4, 5, 0, 6, 6, 0, 0, 9, 14, 24, 0, 0, 0, 0, 1, 1, 0]' : 0.0979991}
{'[5, 4, 5, 0, 6, 6, 0, 0, 9, 14, 24, 0, 0, 0, 0, 1, 1, 0]' : 0.0979679}
{'[5, 4, 5, 0, 6, 6, 0, 0, 9, 14, 24, 0, 0, 0, 0, 1, 1, 0]' : 0.098264}
{'[5, 4, 5, 0, 6, 6, 0, 0, 9, 14, 24, 0, 0, 0, 0, 1, 1, 0]' : 0.0989301}
{'[5, 4, 5, 0, 6, 6, 0, 0, 9, 14, 24, 0, 0, 0, 0, 1, 1, 0]' : 0.0979609}
{'[5, 4, 5, 0, 6, 6, 0, 0, 9, 14, 24, 0, 0, 0, 0, 1, 1, 0]' : 0.097913}
{'[5, 4, 5, 0, 6, 6, 0, 0, 9, 14, 24, 0, 0, 0, 0, 1, 1, 0]' : 0.0978549}
{'[5, 4, 5, 0, 6, 6, 0, 0, 9, 14, 24, 0, 0, 0, 0, 1, 1, 0]' : 0.0979011}
{'[5, 4, 5, 0, 6, 6, 0, 0, 9, 14, 24, 0, 0, 0, 0, 1, 1, 0]' : 0.097821}
{'[5, 4, 5, 0, 6, 6, 0, 0, 9, 14, 24, 0, 0, 0, 0, 1, 1, 0]' : 0.0979822}
{'[5, 4, 5, 0, 6, 6, 0, 0, 9, 14, 24, 0, 0, 0, 0, 1, 1, 0]' : 0.0979879}
{'[5, 4, 5, 0, 6, 6, 0, 0, 9, 14, 24, 0, 0, 0, 0, 1, 1, 0]' : 0.0978191}
{'[5, 4, 5, 0, 6, 6, 0, 0, 9, 14, 24, 0, 0, 0, 0, 1, 1, 0]' : 0.0979121}
{'[5, 4, 5, 0, 6, 6, 0, 0, 9, 14, 24, 0, 0, 0, 0, 1, 1, 0]' : 0.0981851}
{'[5, 4, 5, 0, 6, 6, 0, 0, 9, 14, 24, 0, 0, 0, 0, 1, 1, 0]' : 0.0978148}

out:
 ["{'[5, 4, 5, 0, 6, 6, 0, 0, 9, 14, 24, 0, 0, 0, 0, 1, 1, 0]' : 0.098284}", "{'[5, 4, 5, 0, 6, 6, 0, 0, 9, 14, 24, 0, 0, 0, 0, 1, 1, 0]' : 0.0983181}", "{'[5, 4, 5, 0, 6, 6, 0, 0, 9, 14, 24, 0, 0, 0, 0, 1, 1, 0]' : 0.0978549}", "{'[5, 4, 5, 0, 6, 6, 0, 0, 9, 14, 24, 0, 0, 0, 0, 1, 1, 0]' : 0.097991}", "{'[5, 4, 5, 0, 6, 6, 0, 0, 9, 14, 24, 0, 0, 0, 0, 1, 1, 0]' : 0.0979519}", "{'[5, 4, 5, 0, 6, 6, 0, 0, 9, 14, 24, 0, 0, 0, 0, 1, 1, 0]' : 0.097918}", "{'[5, 4, 5, 0, 6, 6, 0, 0, 9, 14, 24, 0, 0, 0, 0, 1, 1, 0]' : 0.0978999}", "{'[5, 4, 5, 0, 6, 6, 0, 0, 9, 14, 24, 0, 0, 0, 0, 1, 1, 0]' : 0.0980151}", "{'[5, 4, 5, 0, 6, 6, 0, 0, 9, 14, 24, 0, 0, 0, 0, 1, 1, 0]' : 0.0980589}", "{'[5, 4, 5, 0, 6, 6, 0, 0, 9, 14, 24, 0, 0, 0, 0, 1, 1, 0]' : 0.0978899}", "{'[5, 4, 5, 0, 6, 6, 0, 0, 9, 14, 24, 0, 0, 0, 0, 1, 1, 0]' : 0.098031}", "{'[5, 4, 5, 0, 6, 6, 0, 0, 9, 14, 24, 0, 0, 0, 0, 1, 1, 0]' : 0.0980392}", "{'[5, 4, 5, 0, 6, 6, 0, 0, 9, 14, 24, 0, 0, 0, 0, 1, 1, 0]' : 0.0979619}", "{'[5, 4, 5, 0, 6, 6, 0, 0, 9, 14, 24, 0, 0, 0, 0, 1, 1, 0]' : 0.0978699}", "{'[5, 4, 5, 0, 6, 6, 0, 0, 9, 14, 24, 0, 0, 0, 0, 1, 1, 0]' : 0.097966}", "{'[5, 4, 5, 0, 6, 6, 0, 0, 9, 14, 24, 0, 0, 0, 0, 1, 1, 0]' : 0.0979991}", "{'[5, 4, 5, 0, 6, 6, 0, 0, 9, 14, 24, 0, 0, 0, 0, 1, 1, 0]' : 0.0979679}", "{'[5, 4, 5, 0, 6, 6, 0, 0, 9, 14, 24, 0, 0, 0, 0, 1, 1, 0]' : 0.098264}", "{'[5, 4, 5, 0, 6, 6, 0, 0, 9, 14, 24, 0, 0, 0, 0, 1, 1, 0]' : 0.0989301}", "{'[5, 4, 5, 0, 6, 6, 0, 0, 9, 14, 24, 0, 0, 0, 0, 1, 1, 0]' : 0.0979609}", "{'[5, 4, 5, 0, 6, 6, 0, 0, 9, 14, 24, 0, 0, 0, 0, 1, 1, 0]' : 0.097913}", "{'[5, 4, 5, 0, 6, 6, 0, 0, 9, 14, 24, 0, 0, 0, 0, 1, 1, 0]' : 0.0978549}", "{'[5, 4, 5, 0, 6, 6, 0, 0, 9, 14, 24, 0, 0, 0, 0, 1, 1, 0]' : 0.0979011}", "{'[5, 4, 5, 0, 6, 6, 0, 0, 9, 14, 24, 0, 0, 0, 0, 1, 1, 0]' : 0.097821}", "{'[5, 4, 5, 0, 6, 6, 0, 0, 9, 14, 24, 0, 0, 0, 0, 1, 1, 0]' : 0.0979822}", "{'[5, 4, 5, 0, 6, 6, 0, 0, 9, 14, 24, 0, 0, 0, 0, 1, 1, 0]' : 0.0979879}", "{'[5, 4, 5, 0, 6, 6, 0, 0, 9, 14, 24, 0, 0, 0, 0, 1, 1, 0]' : 0.0978191}", "{'[5, 4, 5, 0, 6, 6, 0, 0, 9, 14, 24, 0, 0, 0, 0, 1, 1, 0]' : 0.0979121}", "{'[5, 4, 5, 0, 6, 6, 0, 0, 9, 14, 24, 0, 0, 0, 0, 1, 1, 0]' : 0.0981851}", "{'[5, 4, 5, 0, 6, 6, 0, 0, 9, 14, 24, 0, 0, 0, 0, 1, 1, 0]' : 0.0978148}"]
returning from 'run': {'[5, 4, 5, 0, 6, 6, 0, 0, 9, 14, 24, 0, 0, 0, 0, 1, 1, 0]': ([0.098284, 0.0983181, 0.0978549, 0.097991, 0.0979519, 0.097918, 0.0978999, 0.0980151, 0.0980589, 0.0978899, 0.098031, 0.0980392, 0.0979619, 0.0978699, 0.097966, 0.0979991, 0.0979679, 0.098264, 0.0989301, 0.0979609, 0.097913, 0.0978549, 0.0979011, 0.097821, 0.0979822, 0.0979879, 0.0978191, 0.0979121, 0.0981851, 0.0978148], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.098284, 0.0983181, 0.0978549, 0.097991, 0.0979519, 0.097918, 0.0978999, 0.0980151, 0.0980589, 0.0978899, 0.098031, 0.0980392, 0.0979619, 0.0978699, 0.097966, 0.0979991, 0.0979679, 0.098264, 0.0989301, 0.0979609, 0.097913, 0.0978549, 0.0979011, 0.097821, 0.0979822, 0.0979879, 0.0978191, 0.0979121, 0.0981851, 0.0978148], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[5, 4, 5, 0, 6, 6, 0, 0, 9, 14, 24, 0, 0, 0, 0, 1, 1, 0]': ([0.098284, 0.0983181, 0.0978549, 0.097991, 0.0979519, 0.097918, 0.0978999, 0.0980151, 0.0980589, 0.0978899, 0.098031, 0.0980392, 0.0979619, 0.0978699, 0.097966, 0.0979991, 0.0979679, 0.098264, 0.0989301, 0.0979609, 0.097913, 0.0978549, 0.0979011, 0.097821, 0.0979822, 0.0979879, 0.0978191, 0.0979121, 0.0981851, 0.0978148], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [1, 1, 1, 5, 3, 0, 1, 7, 0, 15, 4, 2, 0, 0, 0, 0]
Fixed Factors: {'T2_J': 6, 'VEC1': 1}
Testing candidate 8: [1, 1, 1, 5, 6, 3, 0, 1, 7, 0, 15, 4, 2, 0, 0, 0, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	26
        Max loop nest depth: 	6
        Additions: 		5379
        Multiplications: 	1518
        Divisions: 		0
        Logical: 		0
        Reads: 			8220
        Writes: 		829
        Comparisons:		26
        Gotos: 			0
        
digraph CFG {
	_JOIN_10104463 [label="_JOIN_10104463None...",shape=box];
	_JOIN_10104463 -> _JOIN_10095806;
	_JOIN_10104460 [label="_JOIN_10104460None...",shape=box];
	_JOIN_10104460 -> _JOIN_10104461;
	ForLoop10092289 [label="ForLoop10092289  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop10092289 -> 10092288;
	ForLoop10092289 -> _JOIN_10092289;
	10101814 [label="10101814  double x_copy;...",shape=box];
	10293906 [label="10293906  y_copy[(k-kk)]=y_copy[(k-kk)]+A[i*ny+k]*tmp[i];...",shape=box];
	_JOIN_10294168 [label="_JOIN_10294168None...",shape=box];
	_JOIN_10294168 -> 10104458;
	ForLoop10104463 [label="ForLoop10104463  for (i=it; i<=min(nx-1,ii+15); i=i+1) {...",shape=box];
	ForLoop10104463 -> 10104248;
	ForLoop10104463 -> _JOIN_10104463;
	ForLoop10104460 [label="ForLoop10104460  for (kk=kkk; kk<=min(ny-1,kkk+240); kk=kk+16) {...",shape=box];
	ForLoop10104460 -> 10104382;
	ForLoop10104460 -> _JOIN_10104460;
	ForLoop10104461 [label="ForLoop10104461  for (kkk=0; kkk<=ny-1; kkk=kkk+256) ...",shape=box];
	ForLoop10104461 -> ForLoop10104460;
	ForLoop10104461 -> _JOIN_10104461;
	_JOIN_10104319 [label="_JOIN_10104319None...",shape=box];
	_JOIN_10104319 -> _JOIN_10104320;
	ForLoop10292329 [label="ForLoop10292329  for (j=jj; j<=min(ny-1,jj+15)-15; j=j+16) {...",shape=box];
	ForLoop10292329 -> 10291952;
	ForLoop10292329 -> _JOIN_10292329;
	ForLoop10294036 [label="ForLoop10294036  for (k=kk; k<=min(ny-1,kk+15)-4; k=k+5) {...",shape=box];
	ForLoop10294036 -> 10293906;
	ForLoop10294036 -> _JOIN_10294036;
	ForLoop10104080 [label="ForLoop10104080  for (jj=jjj; jj<=min(ny-1,jjj+2032); jj=jj+16) {...",shape=box];
	ForLoop10104080 -> 10150871;
	ForLoop10104080 -> _JOIN_10104080;
	ForLoop10104081 [label="ForLoop10104081  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) ...",shape=box];
	ForLoop10104081 -> ForLoop10104080;
	ForLoop10104081 -> _JOIN_10104081;
	10092288 [label="10092288  y[i]=0.0;...",shape=box];
	10092288 -> _JOIN_10092289;
	10292454 [label="10292454  tmp[i]=tmp[i]+A[i*ny+j]*x[j];...",shape=box];
	10292454 -> _JOIN_10292455;
	ForLoop10095807 [label="ForLoop10095807  for (iii=0; iii<=nx-1; iii=iii+1024) ...",shape=box];
	ForLoop10095807 -> ForLoop10095806;
	ForLoop10095807 -> _JOIN_10095807;
	ForLoop10095806 [label="ForLoop10095806  for (ii=iii; ii<=min(nx-1,iii+1008); ii=ii+16) {...",shape=box];
	ForLoop10095806 -> ForLoop10104224;
	ForLoop10095806 -> _JOIN_10095806;
	10104248 [label="10104248  tmp[i]=0;...",shape=box];
	10104248 -> ForLoop10104320;
	_JOIN_10294036 [label="_JOIN_10294036None...",shape=box];
	_JOIN_10294036 -> ForLoop10294168;
	10294167 [label="10294167  y_copy[(k-kk)]=y_copy[(k-kk)]+A[i*ny+k]*tmp[i];...",shape=box];
	10294167 -> _JOIN_10294168;
	_JOIN_10195010 [label="_JOIN_10195010None...",shape=box];
	_JOIN_10195010 -> ForLoop10196036;
	10177924 [label="10177924  tmp[it]=tmp[it]+A[it*ny+j]*x[j];...",shape=box];
	_JOIN_10251917 [label="_JOIN_10251917None...",shape=box];
	_JOIN_10251917 -> 10104219;
	ForLoop10292455 [label="ForLoop10292455  for (j=(min(ny-1,jj+15))-(((min(ny-1,jj+15))-(jj)+1)%16)+1; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	ForLoop10292455 -> 10292454;
	ForLoop10292455 -> _JOIN_10292455;
	ForLoop10104319 [label="ForLoop10104319  for (jj=jjj; jj<=min(ny-1,jjj+2032); jj=jj+16) {...",shape=box];
	ForLoop10104319 -> 10291235;
	ForLoop10104319 -> _JOIN_10104319;
	10104382 [label="10104382  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop10251917 [label="ForLoop10251917  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kk)+1)%5)+1; k<=min(ny-1,kk+15); k=k+1) {...",shape=box];
	ForLoop10251917 -> 10250923;
	ForLoop10251917 -> _JOIN_10251917;
	_JOIN_10104080 [label="_JOIN_10104080None...",shape=box];
	_JOIN_10104080 -> _JOIN_10104081;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 10091993;
	_JOIN_10196036 [label="_JOIN_10196036None...",shape=box];
	_JOIN_10196036 -> _JOIN_10104080;
	10104474 [label="10104474  tmp[it]=0;...",shape=box];
	10104474 -> ForLoop10104081;
	ForLoop10196036 [label="ForLoop10196036  for (j=(min(ny-1,jj+15))-(((min(ny-1,jj+15))-(jj)+1)%16)+1; j<=min(ny-1,jj+15); j=j+1) {...",shape=box];
	ForLoop10196036 -> 10195135;
	ForLoop10196036 -> _JOIN_10196036;
	_JOIN_10104081 [label="_JOIN_10104081None...",shape=box];
	_JOIN_10104081 -> ForLoop10104222;
	10291952 [label="10291952  tmp[i]=tmp[i]+A[i*ny+j]*x[j];...",shape=box];
	_JOIN_10292455 [label="_JOIN_10292455None...",shape=box];
	_JOIN_10292455 -> _JOIN_10104319;
	_JOIN_10104461 [label="_JOIN_10104461None...",shape=box];
	_JOIN_10104461 -> _JOIN_10104463;
	_JOIN_10292329 [label="_JOIN_10292329None...",shape=box];
	_JOIN_10292329 -> ForLoop10292455;
	ForLoop10250792 [label="ForLoop10250792  for (k=kk; k<=min(ny-1,kk+15)-4; k=k+5) {...",shape=box];
	ForLoop10250792 -> 10244958;
	ForLoop10250792 -> _JOIN_10250792;
	10104458 [label="10104458  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	10104458 -> _JOIN_10104460;
	10104219 [label="10104219  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	10104219 -> _JOIN_10104221;
	10092402 [label="10092402  register int cbv_2, cbv_3;...",shape=box];
	10195135 [label="10195135  tmp[it]=tmp[it]+A[it*ny+j]*x[j];...",shape=box];
	_JOIN_10092220 [label="_JOIN_10092220None...",shape=box];
	_JOIN_10092220 -> 10092402;
	10244958 [label="10244958  y_copy[(k-kk)]=y_copy[(k-kk)]+A[it*ny+k]*tmp[it];...",shape=box];
	_JOIN_10104221 [label="_JOIN_10104221None...",shape=box];
	_JOIN_10104221 -> _JOIN_10104222;
	_JOIN_10104222 [label="_JOIN_10104222None...",shape=box];
	_JOIN_10104222 -> _JOIN_10104224;
	10092155 [label="10092155  y[i]=0.0;...",shape=box];
	_JOIN_10104224 [label="_JOIN_10104224None...",shape=box];
	_JOIN_10104224 -> ForLoop10104463;
	_JOIN_10104320 [label="_JOIN_10104320None...",shape=box];
	_JOIN_10104320 -> ForLoop10104461;
	10291235 [label="10291235  int j;...",shape=box];
	10291235 -> ForLoop10292329;
	ForLoop10104224 [label="ForLoop10104224  for (it=ii; it<=min(nx-1,ii+15)-31; it=it+32) {...",shape=box];
	ForLoop10104224 -> 10104474;
	ForLoop10104224 -> _JOIN_10104224;
	ForLoop10104320 [label="ForLoop10104320  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) ...",shape=box];
	ForLoop10104320 -> ForLoop10104319;
	ForLoop10104320 -> _JOIN_10104320;
	ForLoop10294168 [label="ForLoop10294168  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kk)+1)%5)+1; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop10294168 -> 10294167;
	ForLoop10294168 -> _JOIN_10294168;
	10250923 [label="10250923  y_copy[(k-kk)]=y_copy[(k-kk)]+A[it*ny+k]*tmp[it];...",shape=box];
	ForLoop10104221 [label="ForLoop10104221  for (kk=kkk; kk<=min(ny-1,kkk+240);expected=9369846271501.798828
actual=9369846271501.798828
 kk=kk+16) {...",shape=box];
	ForLoop10104221 -> 10104143;
	ForLoop10104221 -> _JOIN_10104221;
	ForLoop10104222 [label="ForLoop10104222  for (kkk=0; kkk<=ny-1; kkk=kkk+256) ...",shape=box];
	ForLoop10104222 -> ForLoop10104221;
	ForLoop10104222 -> _JOIN_10104222;
	_JOIN_10095806 [label="_JOIN_10095806None...",shape=box];
	_JOIN_10095806 -> _JOIN_10095807;
	10150871 [label="10150871  int j;...",shape=box];
	10150871 -> ForLoop10195010;
	10104143 [label="10104143  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	10091993 [label="10091993  int i;...",shape=box];
	_JOIN_10250792 [label="_JOIN_10250792None...",shape=box];
	_JOIN_10250792 -> ForLoop10251917;
	ForLoop10195010 [label="ForLoop10195010  for (j=jj; j<=min(ny-1,jj+15)-15; j=j+16) {...",shape=box];
	ForLoop10195010 -> 10177924;
	ForLoop10195010 -> _JOIN_10195010;
	ForLoop10092220 [label="ForLoop10092220  for (i=0; i<=cbv_1; i=i+8) {...",shape=box];
	ForLoop10092220 -> 10092155;
	ForLoop10092220 -> _JOIN_10092220;
	_JOIN_10095807 [label="_JOIN_10095807None...",shape=box];
	_JOIN_10092289 [label="_JOIN_10092289None...",shape=box];
	_JOIN_10092289 -> 10101814;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest46.exe __orio_perftest46.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest46.exe  
{'[1, 1, 1, 5, 6, 3, 0, 1, 7, 0, 15, 4, 2, 0, 0, 0, 1, 0]' : 0.260331}
{'[1, 1, 1, 5, 6, 3, 0, 1, 7, 0, 15, 4, 2, 0, 0, 0, 1, 0]' : 0.26019}
{'[1, 1, 1, 5, 6, 3, 0, 1, 7, 0, 15, 4, 2, 0, 0, 0, 1, 0]' : 0.260076}
{'[1, 1, 1, 5, 6, 3, 0, 1, 7, 0, 15, 4, 2, 0, 0, 0, 1, 0]' : 0.261189}
{'[1, 1, 1, 5, 6, 3, 0, 1, 7, 0, 15, 4, 2, 0, 0, 0, 1, 0]' : 0.260134}
{'[1, 1, 1, 5, 6, 3, 0, 1, 7, 0, 15, 4, 2, 0, 0, 0, 1, 0]' : 0.260102}
{'[1, 1, 1, 5, 6, 3, 0, 1, 7, 0, 15, 4, 2, 0, 0, 0, 1, 0]' : 0.26024}
{'[1, 1, 1, 5, 6, 3, 0, 1, 7, 0, 15, 4, 2, 0, 0, 0, 1, 0]' : 0.260304}
{'[1, 1, 1, 5, 6, 3, 0, 1, 7, 0, 15, 4, 2, 0, 0, 0, 1, 0]' : 0.260064}
{'[1, 1, 1, 5, 6, 3, 0, 1, 7, 0, 15, 4, 2, 0, 0, 0, 1, 0]' : 0.260117}
{'[1, 1, 1, 5, 6, 3, 0, 1, 7, 0, 15, 4, 2, 0, 0, 0, 1, 0]' : 0.261118}
{'[1, 1, 1, 5, 6, 3, 0, 1, 7, 0, 15, 4, 2, 0, 0, 0, 1, 0]' : 0.260182}
{'[1, 1, 1, 5, 6, 3, 0, 1, 7, 0, 15, 4, 2, 0, 0, 0, 1, 0]' : 0.260149}
{'[1, 1, 1, 5, 6, 3, 0, 1, 7, 0, 15, 4, 2, 0, 0, 0, 1, 0]' : 0.26007}
{'[1, 1, 1, 5, 6, 3, 0, 1, 7, 0, 15, 4, 2, 0, 0, 0, 1, 0]' : 0.260187}
{'[1, 1, 1, 5, 6, 3, 0, 1, 7, 0, 15, 4, 2, 0, 0, 0, 1, 0]' : 0.260226}
{'[1, 1, 1, 5, 6, 3, 0, 1, 7, 0, 15, 4, 2, 0, 0, 0, 1, 0]' : 0.260107}
{'[1, 1, 1, 5, 6, 3, 0, 1, 7, 0, 15, 4, 2, 0, 0, 0, 1, 0]' : 0.260074}
{'[1, 1, 1, 5, 6, 3, 0, 1, 7, 0, 15, 4, 2, 0, 0, 0, 1, 0]' : 0.261409}
{'[1, 1, 1, 5, 6, 3, 0, 1, 7, 0, 15, 4, 2, 0, 0, 0, 1, 0]' : 0.260109}
{'[1, 1, 1, 5, 6, 3, 0, 1, 7, 0, 15, 4, 2, 0, 0, 0, 1, 0]' : 0.260077}
{'[1, 1, 1, 5, 6, 3, 0, 1, 7, 0, 15, 4, 2, 0, 0, 0, 1, 0]' : 0.260158}
{'[1, 1, 1, 5, 6, 3, 0, 1, 7, 0, 15, 4, 2, 0, 0, 0, 1, 0]' : 0.260173}
{'[1, 1, 1, 5, 6, 3, 0, 1, 7, 0, 15, 4, 2, 0, 0, 0, 1, 0]' : 0.2603}
{'[1, 1, 1, 5, 6, 3, 0, 1, 7, 0, 15, 4, 2, 0, 0, 0, 1, 0]' : 0.260177}
{'[1, 1, 1, 5, 6, 3, 0, 1, 7, 0, 15, 4, 2, 0, 0, 0, 1, 0]' : 0.260082}
{'[1, 1, 1, 5, 6, 3, 0, 1, 7, 0, 15, 4, 2, 0, 0, 0, 1, 0]' : 0.26103}
{'[1, 1, 1, 5, 6, 3, 0, 1, 7, 0, 15, 4, 2, 0, 0, 0, 1, 0]' : 0.260112}
{'[1, 1, 1, 5, 6, 3, 0, 1, 7, 0, 15, 4, 2, 0, 0, 0, 1, 0]' : 0.260057}
{'[1, 1, 1, 5, 6, 3, 0, 1, 7, 0, 15, 4, 2, 0, 0, 0, 1, 0]' : 0.260061}

out:
 ["{'[1, 1, 1, 5, 6, 3, 0, 1, 7, 0, 15, 4, 2, 0, 0, 0, 1, 0]' : 0.260331}", "{'[1, 1, 1, 5, 6, 3, 0, 1, 7, 0, 15, 4, 2, 0, 0, 0, 1, 0]' : 0.26019}", "{'[1, 1, 1, 5, 6, 3, 0, 1, 7, 0, 15, 4, 2, 0, 0, 0, 1, 0]' : 0.260076}", "{'[1, 1, 1, 5, 6, 3, 0, 1, 7, 0, 15, 4, 2, 0, 0, 0, 1, 0]' : 0.261189}", "{'[1, 1, 1, 5, 6, 3, 0, 1, 7, 0, 15, 4, 2, 0, 0, 0, 1, 0]' : 0.260134}", "{'[1, 1, 1, 5, 6, 3, 0, 1, 7, 0, 15, 4, 2, 0, 0, 0, 1, 0]' : 0.260102}", "{'[1, 1, 1, 5, 6, 3, 0, 1, 7, 0, 15, 4, 2, 0, 0, 0, 1, 0]' : 0.26024}", "{'[1, 1, 1, 5, 6, 3, 0, 1, 7, 0, 15, 4, 2, 0, 0, 0, 1, 0]' : 0.260304}", "{'[1, 1, 1, 5, 6, 3, 0, 1, 7, 0, 15, 4, 2, 0, 0, 0, 1, 0]' : 0.260064}", "{'[1, 1, 1, 5, 6, 3, 0, 1, 7, 0, 15, 4, 2, 0, 0, 0, 1, 0]' : 0.260117}", "{'[1, 1, 1, 5, 6, 3, 0, 1, 7, 0, 15, 4, 2, 0, 0, 0, 1, 0]' : 0.261118}", "{'[1, 1, 1, 5, 6, 3, 0, 1, 7, 0, 15, 4, 2, 0, 0, 0, 1, 0]' : 0.260182}", "{'[1, 1, 1, 5, 6, 3, 0, 1, 7, 0, 15, 4, 2, 0, 0, 0, 1, 0]' : 0.260149}", "{'[1, 1, 1, 5, 6, 3, 0, 1, 7, 0, 15, 4, 2, 0, 0, 0, 1, 0]' : 0.26007}", "{'[1, 1, 1, 5, 6, 3, 0, 1, 7, 0, 15, 4, 2, 0, 0, 0, 1, 0]' : 0.260187}", "{'[1, 1, 1, 5, 6, 3, 0, 1, 7, 0, 15, 4, 2, 0, 0, 0, 1, 0]' : 0.260226}", "{'[1, 1, 1, 5, 6, 3, 0, 1, 7, 0, 15, 4, 2, 0, 0, 0, 1, 0]' : 0.260107}", "{'[1, 1, 1, 5, 6, 3, 0, 1, 7, 0, 15, 4, 2, 0, 0, 0, 1, 0]' : 0.260074}", "{'[1, 1, 1, 5, 6, 3, 0, 1, 7, 0, 15, 4, 2, 0, 0, 0, 1, 0]' : 0.261409}", "{'[1, 1, 1, 5, 6, 3, 0, 1, 7, 0, 15, 4, 2, 0, 0, 0, 1, 0]' : 0.260109}", "{'[1, 1, 1, 5, 6, 3, 0, 1, 7, 0, 15, 4, 2, 0, 0, 0, 1, 0]' : 0.260077}", "{'[1, 1, 1, 5, 6, 3, 0, 1, 7, 0, 15, 4, 2, 0, 0, 0, 1, 0]' : 0.260158}", "{'[1, 1, 1, 5, 6, 3, 0, 1, 7, 0, 15, 4, 2, 0, 0, 0, 1, 0]' : 0.260173}", "{'[1, 1, 1, 5, 6, 3, 0, 1, 7, 0, 15, 4, 2, 0, 0, 0, 1, 0]' : 0.2603}", "{'[1, 1, 1, 5, 6, 3, 0, 1, 7, 0, 15, 4, 2, 0, 0, 0, 1, 0]' : 0.260177}", "{'[1, 1, 1, 5, 6, 3, 0, 1, 7, 0, 15, 4, 2, 0, 0, 0, 1, 0]' : 0.260082}", "{'[1, 1, 1, 5, 6, 3, 0, 1, 7, 0, 15, 4, 2, 0, 0, 0, 1, 0]' : 0.26103}", "{'[1, 1, 1, 5, 6, 3, 0, 1, 7, 0, 15, 4, 2, 0, 0, 0, 1, 0]' : 0.260112}", "{'[1, 1, 1, 5, 6, 3, 0, 1, 7, 0, 15, 4, 2, 0, 0, 0, 1, 0]' : 0.260057}", "{'[1, 1, 1, 5, 6, 3, 0, 1, 7, 0, 15, 4, 2, 0, 0, 0, 1, 0]' : 0.260061}"]
returning from 'run': {'[1, 1, 1, 5, 6, 3, 0, 1, 7, 0, 15, 4, 2, 0, 0, 0, 1, 0]': ([0.260331, 0.26019, 0.260076, 0.261189, 0.260134, 0.260102, 0.26024, 0.260304, 0.260064, 0.260117, 0.261118, 0.260182, 0.260149, 0.26007, 0.260187, 0.260226, 0.260107, 0.260074, 0.261409, 0.260109, 0.260077, 0.260158, 0.260173, 0.2603, 0.260177, 0.260082, 0.26103, 0.260112, 0.260057, 0.260061], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.260331, 0.26019, 0.260076, 0.261189, 0.260134, 0.260102, 0.26024, 0.260304, 0.260064, 0.260117, 0.261118, 0.260182, 0.260149, 0.26007, 0.260187, 0.260226, 0.260107, 0.260074, 0.261409, 0.260109, 0.260077, 0.260158, 0.260173, 0.2603, 0.260177, 0.260082, 0.26103, 0.260112, 0.260057, 0.260061], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[1, 1, 1, 5, 6, 3, 0, 1, 7, 0, 15, 4, 2, 0, 0, 0, 1, 0]': ([0.260331, 0.26019, 0.260076, 0.261189, 0.260134, 0.260102, 0.26024, 0.260304, 0.260064, 0.260117, 0.261118, 0.260182, 0.260149, 0.26007, 0.260187, 0.260226, 0.260107, 0.260074, 0.261409, 0.260109, 0.260077, 0.260158, 0.260173, 0.2603, 0.260177, 0.260082, 0.26103, 0.260112, 0.260057, 0.260061], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [3, 3, 0, 4, 1, 0, 1, 26, 4, 0, 23, 0, 0, 0, 1, 0]
Fixed Factors: {'T2_J': 6, 'VEC1': 1}
Testing candidate 9: [3, 3, 0, 4, 6, 1, 0, 1, 26, 4, 0, 23, 0, 0, 0, 1, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	38
        Max loop nest depth: 	6
        Additions: 		1356
        Multiplications: 	312
        Divisions: 		0
        Logical: 		0
        Reads: 			2742
        Writes: 		594
        Comparisons:		38
        Gotos: 			0
        
digraph CFG {
	ForLoop10399181 [label="ForLoop10399181  for (k=kkk; k<=min(ny-1,kkk+63)-23; k=k+24) {...",shape=box];
	ForLoop10399181 -> 10406411;
	ForLoop10399181 -> _JOIN_10399181;
	_JOIN_10402391 [label="_JOIN_10402391None...",shape=box];
	_JOIN_10402391 -> ForLoop10402471;
	_JOIN_10403702 [label="_JOIN_10403702None...",shape=box];
	_JOIN_10403702 -> _JOIN_10403703;
	ForLoop10404533 [label="ForLoop10404533  for (k=kkk; k<=min(ny-1,kkk+63)-23; k=k+24) {...",shape=box];
	ForLoop10404533 -> 10429846;
	ForLoop10404533 -> _JOIN_10404533;
	_JOIN_10398348 [label="_JOIN_10398348None...",shape=box];
	_JOIN_10398348 -> _JOIN_10398350;
	10428290 [label="10428290  tmp[(i+2)]=scv_127;...",shape=box];
	10428272 [label="10428272  double scv_127, scv_128, scv_129, scv_130, scv_131;...",shape=box];
	ForLoop10404607 [label="ForLoop10404607  for (k=(min(ny-1,kkk+63))-(((min(ny-1,kkk+63))-(kkk)+1)%24)+1; k<=min(ny-1,kkk+63); k=k+1) {...",shape=box];
	ForLoop10404607 -> 10430524;
	ForLoop10404607 -> _JOIN_10404607;
	10430524 [label="10430524  double scv_156;...",shape=box];
	ForLoop10403577 [label="ForLoop10403577  for (kkk=0; kkk<=ny-1; kkk=kkk+64) {...",shape=box];
	ForLoop10403577 -> 10398396;
	ForLoop10403577 -> _JOIN_10403577;
	_JOIN_10400247 [label="_JOIN_10400247None...",shape=box];
	_JOIN_10400247 -> ForLoop10400327;
	ForLoop10403702 [label="ForLoop10403702  for (j=jj; j<=min(ny-1,jj+63); j=j+1) {...",shape=box];
	ForLoop10403702 -> 10403701;
	ForLoop10403702 -> _JOIN_10403702;
	ForLoop10399255 [label="ForLoop10399255  for (k=(min(ny-1,kkk+63))-(((min(ny-1,kkk+63))-(kkk)+1)%24)+1; k<=min(ny-1,kkk+63); k=k+1) {...",shape=box];
	ForLoop10399255 -> 10407089;
	ForLoop10399255 -> _JOIN_10399255;
	ForLoop10403704 [label="ForLoop10403704  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop10403704 -> ForLoop10403703;
	ForLoop10403704 -> _JOIN_10403704;
	ForLoop10400327 [label="ForLoop10400327  for (k=(min(ny-1,kkk+63))-(((min(ny-1,kkk+63))-(kkk)+1)%24)+1; k<=min(ny-1,kkk+63); k=k+1) {...",shape=box];
	ForLoop10400327 -> 10409195;
	ForLoop10400327 -> _JOIN_10400327;
	_JOIN_10348943 [label="_JOIN_10348943None...",shape=box];
	_JOIN_10348943 -> 10398066;
	ForLoop10398352 [label="ForLoop10398352  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop10398352 -> ForLoop10398350;
	ForLoop10398352 -> _JOIN_10398352;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 10348191;
	ForLoop10403579 [label="ForLoop10403579  for (i=ii; i<=min(nx-1,ii+63)-4; i=i+5) {...",shape=box];
	ForLoop10403579 -> 10428272;
	ForLoop10403579 -> _JOIN_10403579;
	_JOIN_10404646 [label="_JOIN_10404646None...",shape=box];
	10408508 [label="10408508  double scv_27, scv_28, scv_29, scv_30, scv_31, scv_32, scv_33, scv_34;...",shape=box];
	10411301 [label="10411301  double scv_76;...",shape=box];
	_JOIN_10403704 [label="_JOIN_10403704None...",shape=box];
	_JOIN_10403704 -> ForLoop10404641;
	ForLoop10403543 [label="ForLoop10403543  for (k=(min(ny-1,kkk+63))-(((min(ny-1,kkk+63))-(kkk)+1)%24)+1; k<=min(ny-1,kkk+63); k=k+1) {...",shape=box];
	ForLoop10403543 -> 10415513;
	ForLoop10403543 -> _JOIN_10403543;
	10432957 [label="10432957  tmp[i]=scv_157;...",shape=box];
	10432957 -> _JOIN_10404643;
	ForLoop10401399 [label="ForLoop10401399  for (k=(min(ny-1,kkk+63))-(((min(ny-1,kkk+63))-(kkk)+1)%24)+1; k<=min(ny-1,kkk+63); k=k+1) {...",shape=box];
	ForLoop10401399 -> 10411301;
	ForLoop10401399 -> _JOIN_10401399;
	10409195 [label="10409195  double scv_51;...",shape=box];
	_JOIN_10404607 [label="_JOIN_10404607None...",shape=box];
	_JOIN_10404607 -> 10404639;
	ForLoop10401319 [label="ForLoop10401319  for (k=kkk; k<=min(ny-1,kkk+63)-23; k=k+24) {...",shape=box];
	ForLoop10401319 -> 10410614;
	ForLoop10401319 -> _JOIN_10401319;
	10398066 [label="10398066  double x_copy;...",shape=box];
	_JOIN_10399181 [label="_JOIN_10399181None...",shape=box];
	_JOIN_10399181 -> ForLoop10399255;
	ForLoop10398350 [label="ForLoop10398350  for (jj=jjj; jj<=min(ny-1,jjj+1984); jj=jj+64) {...",shape=box];
	ForLoop10398350 -> ForLoop10398348;
	ForLoop10398350 -> _JOIN_10398350;
	_JOIN_10398352 [label="_JOIN_10398352None...",shape=box];
	_JOIN_10398352 -> ForLoop10403577;
	ForLoop10400247 [label="ForLoop10400247  for (k=kkk; k<=min(ny-1,kkk+63)-23; k=k+24) {...",shape=box];
	ForLoop10400247 -> 10408508;
	ForLoop10400247 -> _JOIN_10400247;
	_JOIN_10398350 [label="_JOIN_10398350None...",shape=box];
	_JOIN_10398350 -> _JOIN_10398352;
	10413407 [label="10413407  double scv_101;...",shape=box];
	10398396 [label="10398396  for (k=kkk; k<=min(ny-1,kkk+63); k=k+1) ...",shape=box];
	ForLoop10403703 [label="ForLoop10403703  for (jj=jjj; jj<=min(ny-1,jjj+1984); jj=jj+64) {...",shape=box];
	ForLoop10403703 -> ForLoop10403702;
	ForLoop10403703 -> _JOIN_10403703;
	_JOIN_10403579 [label="_JOIN_10403579None...",shape=box];
	_JOIN_10403579 -> ForLoop10404643;
	10410614 [label="10410614  double scv_52, scv_53, scv_54, scv_55, scv_56, scv_57, scv_58, scv_59;...",shape=box];
	_JOIN_10403577 [label="_JOIN_10403577None...",shape=box];
	_JOIN_10403577 -> 10428290;
	10403748 [label="10403748  for (k=kkk; k<=min(ny-1,kkk+63); k=k+1) ...",shape=box];
	10415513 [label="10415513  double scv_126;...",shape=box];
	10402503 [label="10402503  for (k=kkk; k<=min(ny-1,kkk+63); k=k+1) ...",shape=box];
	ForLoop10348874 [label="ForLoop10348874  for (i=0; i<=cbv_1; i=i+27) {...",shape=box];
	ForLoop10348874 -> 10348638;
	ForLoop10348874 -> _JOIN_10348874;
	_JOIN_10399255 [label="_JOIN_10399255None...",shape=box];
	_JOIN_10399255 -> 10399287;
	_JOIN_10404645 [label="_JOIN_10404645None...",shape=box];
	_JOIN_10404645 -> _JOIN_10404646;
	ForLoop10404643 [label="ForLoop10404643  for (i=(min(nx-1,ii+63))-(((min(nx-1,ii+63))-(ii)+1)%5)+1; i<=min(nx-1,ii+63); i=i+1) {...",shape=box];
	ForLoop10404643 -> 10432945;
	ForLoop10404643 -> _JOIN_10404643;
	ForLoop10398348 [label="ForLoop10398348  for (j=jj; j<=min(ny-1,jj+63); j=j+1) {...",shape=box];
	ForLoop10398348 -> 10404873;
	ForLoop10398348 -> _JOIN_10398348;
	10398099 [label="10398099  int i;...",shape=box];
	10398099 -> ForLoop10403579;
	ForLoop10404646 [label="ForLoop10404646  for (iii=0; iii<=nx-1; iii=iii+512) {...",shape=box];
	ForLoop10404646 -> ForLoop10404645;
	ForLoop10404646 -> _JOIN_10404646;
	ForLoop10348943 [label="ForLoop10348943  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop10348943 -> 10348942;
	ForLoop10348943 -> _JOIN_10348943;
	10348191 [label="10348191  int i;...",shape=box];
	10414826 [label="10414826  double scv_102, scv_103, scv_104, scv_105, scv_106, scv_107, scv_108, scv_109;...",shape=box];
	_JOIN_10348874 [label="_JOIN_10348874None...",shape=box];
	_JOIN_10348874 -> 10349227;
	ForLoop10402471 [label="ForLoop10402471  for (k=(min(ny-1,kkk+63))-(((min(ny-1,kkk+63))-(kkk)+1)%24)+1; k<=min(ny-1,kkk+63); k=k+1) {...",shape=box];
	ForLoop10402471 -> 10413407;
	ForLoop10402471 -> _JOIN_10402471;
	ForLoop10403463 [label="ForLoop10403463  for (k=kkk; k<=min(ny-1,kkk+63)-23; k=k+24) {...",shape=box];
	ForLoop10403463 -> 10414826;
	ForLoop10403463 -> _JOIN_10403463;
	_JOIN_10404533 [label="_JOIN_10404533None...",shape=box];
	_JOIN_10404533 -> ForLoop10404607;
	10399287 [label="10399287  for (k=kkk; k<=min(ny-1,kkk+63); k=k+1) ...",shape=box];
	10403575 [label="10403575  for (k=kkk; k<=min(ny-1,kkk+63); k=k+1) ...",shape=box];
	10403575 -> _JOIN_10403577;
	10403701 [label="10403701  scv_157=scv_157+A[i*ny+j]*x[j];...",shape=box];
	10403701 -> _JOIN_10403702;
	_JOIN_10402471 [label="_JOIN_10402471None...",shape=box];
	_JOIN_10402471 -> 10402503;
	_JOIN_10400327 [label="_JOIN_10400327None...",shape=box];
	_JOIN_10400327 -> 10400359;
	10401431 [label="10401431  for (k=kkk; k<=min(ny-1,kkk+63); k=k+1) ...",shape=box];
	10404873 [label="10404873  double scv_1;...",shape=box];
	10432945 [label="10432945  double scv_157;...",shape=box];
	10406411 [label="10406411  double scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8, scv_9;...",shape=box];
	ForLoop10402391 [label="ForLoop10402391  for (k=kkk; k<=min(ny-1,kkk+63)-23; k=k+24) {...",shape=box];
	ForLoop10402391 -> 10412720;
	ForLoop10402391 -> _JOIN_10402391;
	10348638 [label="10348638  y[i]=0.0;...",shape=box];
	10429846 [label="10429846  double scv_132, scv_133, scv_134, scv_135, scv_136, scv_137, scv_138, scv_139;...",shape=box];
	_JOIN_10401399 [label="_JOIN_10401399None...",shape=box];
	_JOIN_10401399 -> 10401431;
	10400359 [label="10400359  for (k=kkk; k<=min(ny-1,kkk+63); k=k+1) ...",shape=box];
	10404639 [label="10404639  for (k=kkk; k<=min(ny-1,kkk+63); k=k+1) ...",shape=box];
	10404639 -> _JOIN_10404641;
	ForLoop10404641 [label="ForLoop10404641  for (kkk=0; kkk<=ny-1; kkk=kkk+64) {...",shape=box];
	ForLoop10404641 ->expected=9369846271501.798828
actual=9369846271501.798828
 10403748;
	ForLoop10404641 -> _JOIN_10404641;
	10348942 [label="10348942  y[i]=0.0;...",shape=box];
	10348942 -> _JOIN_10348943;
	_JOIN_10403703 [label="_JOIN_10403703None...",shape=box];
	_JOIN_10403703 -> _JOIN_10403704;
	_JOIN_10401319 [label="_JOIN_10401319None...",shape=box];
	_JOIN_10401319 -> ForLoop10401399;
	_JOIN_10403543 [label="_JOIN_10403543None...",shape=box];
	_JOIN_10403543 -> 10403575;
	ForLoop10404645 [label="ForLoop10404645  for (ii=iii; ii<=min(nx-1,iii+448); ii=ii+64) {...",shape=box];
	ForLoop10404645 -> 10398099;
	ForLoop10404645 -> _JOIN_10404645;
	10349227 [label="10349227  register int cbv_2, cbv_3;...",shape=box];
	10407089 [label="10407089  double scv_26;...",shape=box];
	_JOIN_10404641 [label="_JOIN_10404641None...",shape=box];
	_JOIN_10404641 -> 10432957;
	10412720 [label="10412720  double scv_77, scv_78, scv_79, scv_80, scv_81, scv_82, scv_83, scv_84;...",shape=box];
	_JOIN_10404643 [label="_JOIN_10404643None...",shape=box];
	_JOIN_10404643 -> _JOIN_10404645;
	_JOIN_10403463 [label="_JOIN_10403463None...",shape=box];
	_JOIN_10403463 -> ForLoop10403543;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest47.exe __orio_perftest47.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest47.exe  
{'[3, 3, 0, 4, 6, 1, 0, 1, 26, 4, 0, 23, 0, 0, 0, 1, 1, 0]' : 0.13624}
{'[3, 3, 0, 4, 6, 1, 0, 1, 26, 4, 0, 23, 0, 0, 0, 1, 1, 0]' : 0.135873}
{'[3, 3, 0, 4, 6, 1, 0, 1, 26, 4, 0, 23, 0, 0, 0, 1, 1, 0]' : 0.135874}
{'[3, 3, 0, 4, 6, 1, 0, 1, 26, 4, 0, 23, 0, 0, 0, 1, 1, 0]' : 0.135871}
{'[3, 3, 0, 4, 6, 1, 0, 1, 26, 4, 0, 23, 0, 0, 0, 1, 1, 0]' : 0.137112}
{'[3, 3, 0, 4, 6, 1, 0, 1, 26, 4, 0, 23, 0, 0, 0, 1, 1, 0]' : 0.135868}
{'[3, 3, 0, 4, 6, 1, 0, 1, 26, 4, 0, 23, 0, 0, 0, 1, 1, 0]' : 0.135852}
{'[3, 3, 0, 4, 6, 1, 0, 1, 26, 4, 0, 23, 0, 0, 0, 1, 1, 0]' : 0.135878}
{'[3, 3, 0, 4, 6, 1, 0, 1, 26, 4, 0, 23, 0, 0, 0, 1, 1, 0]' : 0.135863}
{'[3, 3, 0, 4, 6, 1, 0, 1, 26, 4, 0, 23, 0, 0, 0, 1, 1, 0]' : 0.135913}
{'[3, 3, 0, 4, 6, 1, 0, 1, 26, 4, 0, 23, 0, 0, 0, 1, 1, 0]' : 0.135827}
{'[3, 3, 0, 4, 6, 1, 0, 1, 26, 4, 0, 23, 0, 0, 0, 1, 1, 0]' : 0.135988}
{'[3, 3, 0, 4, 6, 1, 0, 1, 26, 4, 0, 23, 0, 0, 0, 1, 1, 0]' : 0.135842}
{'[3, 3, 0, 4, 6, 1, 0, 1, 26, 4, 0, 23, 0, 0, 0, 1, 1, 0]' : 0.136113}
{'[3, 3, 0, 4, 6, 1, 0, 1, 26, 4, 0, 23, 0, 0, 0, 1, 1, 0]' : 0.135865}
{'[3, 3, 0, 4, 6, 1, 0, 1, 26, 4, 0, 23, 0, 0, 0, 1, 1, 0]' : 0.136078}
{'[3, 3, 0, 4, 6, 1, 0, 1, 26, 4, 0, 23, 0, 0, 0, 1, 1, 0]' : 0.135863}
{'[3, 3, 0, 4, 6, 1, 0, 1, 26, 4, 0, 23, 0, 0, 0, 1, 1, 0]' : 0.135852}
{'[3, 3, 0, 4, 6, 1, 0, 1, 26, 4, 0, 23, 0, 0, 0, 1, 1, 0]' : 0.136915}
{'[3, 3, 0, 4, 6, 1, 0, 1, 26, 4, 0, 23, 0, 0, 0, 1, 1, 0]' : 0.135879}
{'[3, 3, 0, 4, 6, 1, 0, 1, 26, 4, 0, 23, 0, 0, 0, 1, 1, 0]' : 0.135894}
{'[3, 3, 0, 4, 6, 1, 0, 1, 26, 4, 0, 23, 0, 0, 0, 1, 1, 0]' : 0.135854}
{'[3, 3, 0, 4, 6, 1, 0, 1, 26, 4, 0, 23, 0, 0, 0, 1, 1, 0]' : 0.135848}
{'[3, 3, 0, 4, 6, 1, 0, 1, 26, 4, 0, 23, 0, 0, 0, 1, 1, 0]' : 0.135861}
{'[3, 3, 0, 4, 6, 1, 0, 1, 26, 4, 0, 23, 0, 0, 0, 1, 1, 0]' : 0.135847}
{'[3, 3, 0, 4, 6, 1, 0, 1, 26, 4, 0, 23, 0, 0, 0, 1, 1, 0]' : 0.135977}
{'[3, 3, 0, 4, 6, 1, 0, 1, 26, 4, 0, 23, 0, 0, 0, 1, 1, 0]' : 0.136138}
{'[3, 3, 0, 4, 6, 1, 0, 1, 26, 4, 0, 23, 0, 0, 0, 1, 1, 0]' : 0.135919}
{'[3, 3, 0, 4, 6, 1, 0, 1, 26, 4, 0, 23, 0, 0, 0, 1, 1, 0]' : 0.135913}
{'[3, 3, 0, 4, 6, 1, 0, 1, 26, 4, 0, 23, 0, 0, 0, 1, 1, 0]' : 0.135851}

out:
 ["{'[3, 3, 0, 4, 6, 1, 0, 1, 26, 4, 0, 23, 0, 0, 0, 1, 1, 0]' : 0.13624}", "{'[3, 3, 0, 4, 6, 1, 0, 1, 26, 4, 0, 23, 0, 0, 0, 1, 1, 0]' : 0.135873}", "{'[3, 3, 0, 4, 6, 1, 0, 1, 26, 4, 0, 23, 0, 0, 0, 1, 1, 0]' : 0.135874}", "{'[3, 3, 0, 4, 6, 1, 0, 1, 26, 4, 0, 23, 0, 0, 0, 1, 1, 0]' : 0.135871}", "{'[3, 3, 0, 4, 6, 1, 0, 1, 26, 4, 0, 23, 0, 0, 0, 1, 1, 0]' : 0.137112}", "{'[3, 3, 0, 4, 6, 1, 0, 1, 26, 4, 0, 23, 0, 0, 0, 1, 1, 0]' : 0.135868}", "{'[3, 3, 0, 4, 6, 1, 0, 1, 26, 4, 0, 23, 0, 0, 0, 1, 1, 0]' : 0.135852}", "{'[3, 3, 0, 4, 6, 1, 0, 1, 26, 4, 0, 23, 0, 0, 0, 1, 1, 0]' : 0.135878}", "{'[3, 3, 0, 4, 6, 1, 0, 1, 26, 4, 0, 23, 0, 0, 0, 1, 1, 0]' WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = kkk
: 0.135863}", "{'[3, 3, 0, 4, 6, 1, 0, 1, 26, 4, 0, 23, 0, 0, 0, 1, 1, 0]' : 0.135913}", "{'[3, 3, 0, 4, 6, 1, 0, 1, 26, 4, 0, 23, 0, 0, 0, 1, 1, 0]' : 0.135827}", "{'[3, 3, 0, 4, 6, 1, 0, 1, 26, 4, 0, 23, 0, 0, 0, 1, 1, 0]' : 0.135988}", "{'[3, 3, 0, 4, 6, 1, 0, 1, 26, 4, 0, 23, 0, 0, 0, 1, 1, 0]' : 0.135842}", "{'[3, 3, 0, 4, 6, 1, 0, 1, 26, 4, 0, 23, 0, 0, 0, 1, 1, 0]' : 0.136113}", "{'[3, 3, 0, 4, 6, 1, 0, 1, 26, 4, 0, 23, 0, 0, 0, 1, 1, 0]' : 0.135865}", "{'[3, 3, 0, 4, 6, 1, 0, 1, 26, 4, 0, 23, 0, 0, 0, 1, 1, 0]' : 0.136078}", "{'[3, 3, 0, 4, 6, 1, 0, 1, 26, 4, 0, 23, 0, 0, 0, 1, 1, 0]' : 0.135863}", "{'[3, 3, 0, 4, 6, 1, 0, 1, 26, 4, 0, 23, 0, 0, 0, 1, 1, 0]' : 0.135852}", "{'[3, 3, 0, 4, 6, 1, 0, 1, 26, 4, 0, 23, 0, 0, 0, 1, 1, 0]' : 0.136915}", "{'[3, 3, 0, 4, 6, 1, 0, 1, 26, 4, 0, 23, 0, 0, 0, 1, 1, 0]' : 0.135879}", "{'[3, 3, 0, 4, 6, 1, 0, 1, 26, 4, 0, 23, 0, 0, 0, 1, 1, 0]' : 0.135894}", "{'[3, 3, 0, 4, 6, 1, 0, 1, 26, 4, 0, 23, 0, 0, 0, 1, 1, 0]' : 0.135854}", "{'[3, 3, 0, 4, 6, 1, 0, 1, 26, 4, 0, 23, 0, 0, 0, 1, 1, 0]' : 0.135848}", "{'[3, 3, 0, 4, 6, 1, 0, 1, 26, 4, 0, 23, 0, 0, 0, 1, 1, 0]' : 0.135861}", "{'[3, 3, 0, 4, 6, 1, 0, 1, 26, 4, 0, 23, 0, 0, 0, 1, 1, 0]' : 0.135847}", "{'[3, 3, 0, 4, 6, 1, 0, 1, 26, 4, 0, 23, 0, 0, 0, 1, 1, 0]' : 0.135977}", "{'[3, 3, 0, 4, 6, 1, 0, 1, 26, 4, 0, 23, 0, 0, 0, 1, 1, 0]' : 0.136138}", "{'[3, 3, 0, 4, 6, 1, 0, 1, 26, 4, 0, 23, 0, 0, 0, 1, 1, 0]' : 0.135919}", "{'[3, 3, 0, 4, 6, 1, 0, 1, 26, 4, 0, 23, 0, 0, 0, 1, 1, 0]' : 0.135913}", "{'[3, 3, 0, 4, 6, 1, 0, 1, 26, 4, 0, 23, 0, 0, 0, 1, 1, 0]' : 0.135851}"]
returning from 'run': {'[3, 3, 0, 4, 6, 1, 0, 1, 26, 4, 0, 23, 0, 0, 0, 1, 1, 0]': ([0.13624, 0.135873, 0.135874, 0.135871, 0.137112, 0.135868, 0.135852, 0.135878, 0.135863, 0.135913, 0.135827, 0.135988, 0.135842, 0.136113, 0.135865, 0.136078, 0.135863, 0.135852, 0.136915, 0.135879, 0.135894, 0.135854, 0.135848, 0.135861, 0.135847, 0.135977, 0.136138, 0.135919, 0.135913, 0.135851], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.13624, 0.135873, 0.135874, 0.135871, 0.137112, 0.135868, 0.135852, 0.135878, 0.135863, 0.135913, 0.135827, 0.135988, 0.135842, 0.136113, 0.135865, 0.136078, 0.135863, 0.135852, 0.136915, 0.135879, 0.135894, 0.135854, 0.135848, 0.135861, 0.135847, 0.135977, 0.136138, 0.135919, 0.135913, 0.135851], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[3, 3, 0, 4, 6, 1, 0, 1, 26, 4, 0, 23, 0, 0, 0, 1, 1, 0]': ([0.13624, 0.135873, 0.135874, 0.135871, 0.137112, 0.135868, 0.135852, 0.135878, 0.135863, 0.135913, 0.135827, 0.135988, 0.135842, 0.136113, 0.135865, 0.136078, 0.135863, 0.135852, 0.136915, 0.135879, 0.135894, 0.135854, 0.135848, 0.135861, 0.135847, 0.135977, 0.136138, 0.135919, 0.135913, 0.135851], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [6, 6, 5, 4, 3, 1, 1, 3, 12, 18, 0, 1, 0, 1, 1, 0]
Fixed Factors: {'T2_J': 6, 'VEC1': 1}
Testing candidate 10: [6, 6, 5, 4, 6, 3, 1, 1, 3, 12, 18, 0, 1, 0, 1, 1, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	93
        Max loop nest depth: 	5
        Additions: 		3497
        Multiplications: 	1232
        Divisions: 		0
        Logical: 		0
        Reads: 			6231
        Writes: 		982
        Comparisons:		93
        Gotos: 			0
        
digraph CFG {
	10641355 [label="10641355  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	10631759 [label="10631759  scv_50=scv_50+A[(i+7)*ny+j]*x_copy[(j-jj)];...",shape=box];
	10627631 [label="10627631  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	10731280 [label="10731280  double scv_45, scv_46, scv_47, scv_48, scv_49, scv_50, scv_51, scv_52;...",shape=box];
	10629261 [label="10629261  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	_JOIN_10642334 [label="_JOIN_10642334None...",shape=box];
	_JOIN_10642334 -> _JOIN_10642337;
	ForLoop10627599 [label="ForLoop10627599  for (j=(min(ny-1,jj+511))-(((min(ny-1,jj+511))-(jj)+1)%19)+1; j<=min(ny-1,jj+511); j=j+1) {...",shape=box];
	ForLoop10627599 -> 10627598;
	ForLoop10627599 -> _JOIN_10627599;
	10650320 [label="10650320  double scv_20;...",shape=box];
	10734824 [label="10734824  double scv_58, scv_59, scv_60, scv_61, scv_62, scv_63, scv_64, scv_65;...",shape=box];
	ForLoop10642334 [label="ForLoop10642334  for (i=(min(nx-1,ii+511))-(((min(nx-1,ii+511))-(it)+1)%13)+1; i<=min(nx-1,ii+511); i=i+1) {...",shape=box];
	ForLoop10642334 -> 10736615;
	ForLoop10642334 -> _JOIN_10642334;
	_JOIN_10634934 [label="_JOIN_10634934None...",shape=box];
	_JOIN_10634934 -> 10634966;
	10630944 [label="10630944  scv_51=scv_51+A[(i+6)*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop10628334 [label="ForLoop10628334  for (j=jj; j<=min(ny-1,jj+511)-18; j=j+19) {...",shape=box];
	ForLoop10628334 -> 10627684;
	ForLoop10628334 -> _JOIN_10628334;
	10635019 [label="10635019  scv_54=scv_54+A[(i+11)*ny+j]*x_copy[(j-jj)];...",shape=box];
	10632488 [label="10632488  scv_50=scv_50+A[(i+7)*ny+j]*x_copy[(j-jj)];...",shape=box];
	10632488 -> _JOIN_10632489;
	10736615 [label="10736615  double scv_66;...",shape=box];
	_JOIN_10627519 [label="_JOIN_10627519None...",shape=box];
	_JOIN_10627519 -> ForLoop10627599;
	_JOIN_10635669 [label="_JOIN_10635669None...",shape=box];
	_JOIN_10635669 -> ForLoop10635749;
	_JOIN_10628334 [label="_JOIN_10628334None...",shape=box];
	_JOIN_10628334 -> ForLoop10628414;
	ForLoop10641238 [label="ForLoop10641238  for (kk=0; kk<=ny-1; kk=kk+256) {...",shape=box];
	ForLoop10641238 -> 10636613;
	ForLoop10641238 -> _JOIN_10641238;
	10633389 [label="10633389  scv_56=scv_56+A[(i+9)*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop10447890 [label="ForLoop10447890  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop10447890 -> 10447889;
	ForLoop10447890 -> _JOIN_10447890;
	ForLoop10642332 [label="ForLoop10642332  for (kk=0; kk<=ny-1; kk=kk+256) {...",shape=box];
	ForLoop10642332 -> 10642006;
	ForLoop10642332 -> _JOIN_10642332;
	10713432 [label="10713432  double scv_37, scv_38, scv_39, scv_40, scv_41, scv_42, scv_43, scv_44;...",shape=box];
	ForLoop10623378 [label="ForLoop10623378  for (jj=jjj; jj<=min(ny-1,jjj+1536); jj=jj+512) {...",shape=box];
	ForLoop10623378 -> 10617787;
	ForLoop10623378 -> _JOIN_10623378;
	ForLoop10623379 [label="ForLoop10623379  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop10623379 -> ForLoop10623378;
	ForLoop10623379 -> _JOIN_10623379;
	10633303 [label="10633303  scv_57=scv_57+A[(i+8)*ny+j]*x_copy[(j-jj)];...",shape=box];
	10633303 -> _JOIN_10633304;
	_JOIN_10629964 [label="_JOIN_10629964None...",shape=box];
	_JOIN_10629964 -> ForLoop10630044;
	10634151 [label="10634151  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	ForLoop10629229 [label="ForLoop10629229  for (j=(min(ny-1,jj+511))-(((min(ny-1,jj+511))-(jj)+1)%19)+1; j<=min(ny-1,jj+511); j=j+1) {...",shape=box];
	ForLoop10629229 -> 10629228;
	ForLoop10629229 -> _JOIN_10629229;
	_JOIN_10635749 [label="_JOIN_10635749None...",shape=box];
	_JOIN_10635749 -> 10635781;
	ForLoop10623375 [label="ForLoop10623375  for (j=(min(ny-1,jj+511))-(((min(ny-1,jj+511))-(jj)+1)%19)+1; j<=min(ny-1,jj+511); j=j+1) {...",shape=box];
	ForLoop10623375 -> 10650320;
	ForLoop10623375 -> _JOIN_10623375;
	10628446 [label="10628446  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	10635834 [label="10635834  scv_45=scv_45+A[(i+12)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_10630779 [label="_JOIN_10630779None...",shape=box];
	_JOIN_10630779 -> ForLoop10630859;
	_JOIN_10634119 [label="_JOIN_10634119None...",shape=box];
	_JOIN_10634119 -> 10634151;
	10630129 [label="10630129  scv_52=scv_52+A[(i+5)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_10625949 [label="_JOIN_10625949None...",shape=box];
	_JOIN_10625949 -> 10625980;
	_JOIN_10630859 [label="_JOIN_10630859None...",shape=box];
	_JOIN_10630859 -> 10630891;
	ForLoop10627519 [label="ForLoop10627519  for (j=jj; j<=min(ny-1,jj+511)-18; j=j+19) {...",shape=box];
	ForLoop10627519 -> 10626869;
	ForLoop10627519 -> _JOIN_10627519;
	_JOIN_10629229 [label="_JOIN_10629229None...",shape=box];
	_JOIN_10629229 -> 10629261;
	ForLoop10447821 [label="ForLoop10447821  for (i=0; i<=cbv_1; i=i+4) {...",shape=box];
	ForLoop10447821 -> 10447792;
	ForLoop10447821 -> _JOIN_10447821;
	ForLoop10623079 [label="ForLoop10623079  for (j=jj; j<=min(ny-1,jj+511)-18; j=j+19) {...",shape=box];
	ForLoop10623079 -> 10649568;
	ForLoop10623079 -> _JOIN_10623079;
	10630076 [label="10630076  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	ForLoop10640833 [label="ForLoop10640833  for (kt=kk; kt<=min(ny-1,kk+255)-7; kt=kt+8) {...",shape=box];
	ForLoop10640833 -> 10713432;
	ForLoop10640833 -> _JOIN_10640833;
	ForLoop10635669 [label="ForLoop10635669  for (j=jj; j<=min(ny-1,jj+511)-18; j=j+19) {...",shape=box];
	ForLoop10635669 -> 10635019;
	ForLoop10635669 -> _JOIN_10635669;
	10649568 [label="10649568  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	_JOIN_10631594 [label="_JOIN_10631594None...",shape=box];
	_JOIN_10631594 -> ForLoop10631674;
	10634118 [label="10634118  scv_56=scv_56+A[(i+9)*ny+j]*x_copy[(j-jj)];...",shape=box];
	10634118 -> _JOIN_10634119;
	10447792 [label="10447792  y[i]=0.0;...",shape=box];
	10634204 [label="10634204  scv_47=scv_47+A[(i+10)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_10641958 [label="_JOIN_10641958None...",shape=box];
	_JOIN_10641958 -> _JOIN_10641961;
	_JOIN_10641240 [label="_JOIN_10641240None...",shape=box];
	_JOIN_10641240 -> ForLoop10642334;
	10628499 [label="10628499  scv_48=scv_48+A[(i+3)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_10634039 [label="_JOIN_10634039None...",shape=box];
	_JOIN_10634039 -> ForLoop10634119;
	10617685 [label="10617685  double x_copy[512];...",shape=box];
	ForLoop10641240 [label="ForLoop10641240  for (i=it; i<=min(nx-1,ii+511)-12; i=i+13) {...",shape=box];
	ForLoop10641240 -> 10731280;
	ForLoop10641240 -> _JOIN_10641240;
	10447889 [label="10447889  y[i]=0.0;...",shape=box];
	10447889 -> _JOIN_10447890;
	10642006 [label="10642006  for (k=kk; k<=min(ny-1,kk+255); k=k+1) ...",shape=box];
	10642006 -> ForLoop10642299;
	_JOIN_10642337 [label="_JOIN_10642337None...",shape=box];
	10630043 [label="10630043  scv_55=scv_55+A[(i+4)*ny+j]*x_copy[(j-jj)];...",shape=box];
	10630043 -> _JOIN_10630044;
	ForLoop10642337 [label="ForLoop10642337  for (ii=0; ii<=nx-1; ii=ii+512) {...",shape=box];
	ForLoop10642337 -> ForLoop10625984;
	ForLoop10642337 -> _JOIN_10642337;
	_JOIN_10636567 [label="_JOIN_10636567None...",shape=box];
	_JOIN_10636567 -> _JOIN_10636569;
	_JOIN_10636564 [label="_JOIN_10636564None...",shape=box];
	_JOIN_10636564 -> _JOIN_10636567;
	_JOIN_10636569 [label="_JOIN_10636569None...",shape=box];
	_JOIN_10636569 -> ForLoop10641238;
	_JOIN_10633304 [label="_JOIN_10633304None...",shape=box];
	_JOIN_10633304 -> 10633336;
	ForLoop10625984 [label="ForLoop10625984  for (it=ii; it<=min(nx-1,ii+511)-7; it=it+8) {...",shape=box];
	ForLoop10625984 -> 10672003;
	ForLoop10625984 -> _JOIN_10625984;
	10634966 [label="10634966  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	10630891 [label="10630891  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	ForLoop10625982 [label="ForLoop10625982  for (kk=0; kk<=ny-1; kk=kk+256) {...",shape=box];
	ForLoop10625982 -> 10623423;
	ForLoop10625982 -> _JOIN_10625982;
	10629314 [label="10629314  scv_55=scv_55+A[(i+4)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_10641887 [label="_JOIN_10641887None...",shape=box];
	_JOIN_10641887 -> ForLoop10641958;
	ForLoop10641962 [label="ForLoop10641962  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop10641962 -> ForLoop10641961;
	ForLoop10641962 -> _JOIN_10641962;
	10635748 [label="10635748  scv_54=scv_54+A[(i+11)*ny+j]*x_copy[(j-jj)];...",shape=box];
	10635748 -> _JOIN_10635749;
	10447690 [label="10447690  int i;...",shape=box];
	10626181 [label="10626181  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	10630858 [label="10630858  scv_52=scv_52+A[(i+5)*ny+j]*x_copy[(j-jj)];...",shape=box];
	10630858 -> _JOIN_10630859;
	_JOIN_10626784 [label="_JOIN_10626784None...",shape=box];
	_JOIN_10626784 -> 10626816;
	_JOIN_10629149 [label="_JOIN_10629149None...",shape=box];
	_JOIN_10629149 -> ForLoop10629229;
	ForLoop10641887 [label="ForLoop10641887  for (j=jj; j<=min(ny-1,jj+511)-18; j=j+19) {...",shape=box];
	ForLoop10641887 -> 10641399;
	ForLoop10641887 -> _JOIN_10641887;
	ForLoop10634854 [label="ForLoop10634854  for (j=jj; j<=min(ny-1,jj+511)-18; j=j+19) {...",shape=box];
	ForLoop10634854 -> 10634204;
	ForLoop10634854 -> _JOIN_10634854;
	10636563 [label="10636563  scv_45=scv_45+A[(i+12)*ny+j]*x_copy[(j-jj)];...",shape=box];
	10636563 -> _JOIN_10636564;
	_JOIN_10631674 [label="_JOIN_10631674None...",shape=box];
	_JOIN_10631674 -> 10631706;
	_JOIN_10641961 [label="_JOIN_10641961None...",shape=box];
	_JOIN_10641961 -> _JOIN_10641962;
	ForLoop10631674 [label="ForLoop10631674  for (j=(min(ny-1,jj+511))-(((min(ny-1,jj+511))-(jj)+1)%19)+1; j<=min(ny-1,jj+511); j=j+1) {...",shape=box];
	ForLoop10631674 -> 10631673;
	ForLoop10631674 -> _JOIN_10631674;
	10626869 [label="10626869  scv_46=scv_46+A[(i+1)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_10623379 [label="_JOIN_10623379None...",shape=box];
	_JOIN_10623379 -> ForLoop10625982;
	10641957 [label="10641957  scv_66=scv_66+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	10641957 -> _JOIN_10641958;
	ForLoop10634119 [label="ForLoop10634119  for (j=(min(ny-1,jj+511))-(((min(ny-1,jj+511))-(jj)+1)%19)+1; j<=min(ny-1,jj+511); j=j+1) {...",shape=box];
	ForLoop10634119 -> 10634118;
	ForLoop10634119 -> _JOIN_10634119;
	ForLoop10626713 [label="ForLoop10626713  for (j=jj; j<=min(ny-1,jj+511)-18; j=j+19) {...",shape=box];
	ForLoop10626713 -> 10626225;
	ForLoop10626713 -> _JOIN_10626713;
	_JOIN_10641962 [label="_JOIN_10641962None...",shape=box];
	_JOIN_10641962 -> ForLoop10642332;
	ForLoop10633304 [label="ForLoop10633304  for (j=(min(ny-1,jj+511))-(((min(ny-1,jj+511))-(jj)+1)%19)+1; j<=min(ny-1,jj+511); j=j+1) {...",shape=box];
	ForLoop10633304 -> 10633303;
	ForLoop10633304 -> _JOIN_10633304;
	10632521 [label="10632521  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	ForLoop10633224 [label="ForLoop10633224  for (j=jj; j<=min(ny-1,jj+511)-18; j=j+19) {...",shape=box];
	ForLoop10633224 -> 10632574;
	ForLoop10633224 -> _JOIN_10633224;
	10633336 [label="10633336  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	10631706 [label="10631706  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	_JOIN_10628414 [label="_JOIN_10628414None...",shape=box];
	_JOIN_10628414 -> 10628446;
	10629228 [label="10629228  scv_48=scv_48+A[(i+3)*ny+j]*x_copy[(j-jj)];...",shape=box];
	10629228 -> _JOIN_10629229;
	10625980 [label="10625980  for (k=kk; k<=min(ny-1,kk+255); k=k+1) ...",shape=box];
	10625980 -> _JOIN_10625982;
	10625985 [label="10625985  int i;...",shape=box];
	10625985 -> ForLoop10641240;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 10447690;
	10626783 [label="10626783  scv_49=scv_49+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	10626783 -> _JOIN_10626784;
	ForLoop10636484 [label="ForLoop10636484  for (j=jj; j<=min(ny-1,jj+511)-18; j=j+19) {...",shape=box];
	ForLoop10636484 -> 10635834;
	ForLoop10636484 -> _JOIN_10636484;
	_JOIN_10623375 [label="_JOIN_10623375None...",shape=box];
	_JOIN_10623375 -> _JOIN_10623378;
	ForLoop10629964 [label="ForLoop10629964  for (j=jj; j<=min(ny-1,jj+511)-18; j=j+19) {...",shape=box];
	ForLoop10629964 -> 10629314;
	ForLoop10629964 -> _JOIN_10629964;
	_JOIN_10623378 [label="_JOIN_10623378None...",shape=box];
	_JOIN_10623378 -> _JOIN_10623379;
	10617787 [label="10617787  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	10628413 [label="10628413  scv_53=scv_53+A[(i+2)*ny+j]*x_copy[(j-jj)];...",shape=box];
	10628413 -> _JOIN_10628414;
	_JOIN_10634854 [label="_JOIN_10634854None...",shape=box];
	_JOIN_10634854 -> ForLoop10634934;
	ForLoop10642299 [label="ForLoop10642299  for (kt=kk; kt<=min(ny-1,kk+255)-7; kt=kt+8) {...",shape=box];
	ForLoop10642299 -> 10734824;
	ForLoop10642299 -> _JOIN_10642299;
	_JOIN_10623079 [label="_JOIN_10623079None...",shape=box];
	_JOIN_10623079 -> ForLoop10623375;
	ForLoop10641958 [label="ForLoop10641958  for (j=(min(ny-1,jj+511))-(((min(ny-1,jj+511))-(jj)+1)%19)+1; j<=min(ny-1,jj+511); j=j+1) {...",shape=box];
	ForLoop10641958 -> 10641957;
	ForLoop10641958 -> _JOIN_10641958;
	10627598 [label="10627598  scv_46=scv_46+A[(i+1)*ny+j]*x_copy[(j-jj)];...",shape=box];
	10627598 -> _JOIN_10627599;
	ForLoop10641961 [label="ForLoop10641961  for (jj=jjj; jj<=min(ny-1,jjj+1536); jj=jj+512) {...",shape=box];
	ForLoop10641961 -> 10641355;
	ForLoop10641961 -> _JOIN_10641961;
	ForLoop10626784 [label="ForLoop10626784  for (j=(min(ny-1,jj+511))-(((min(ny-1,jj+511))-(jj)+1)%19)+1; j<=min(ny-1,jj+511); j=j+1) {...",shape=box];
	ForLoop10626784 -> 10626783;
	ForLoop10626784 -> _JOIN_10626784;
	ForLoop10634039 [label="ForLoop10634039  for (j=jj; j<=min(ny-1,jj+511)-18; j=j+19) {...",shape=box];
	ForLoop10634039 -> 10633389;
	ForLoop10634039 -> _JOIN_10634039;
	_JOIN_10447890 [label="_JOIN_10447890None...",shape=box];
	_JOIN_10447890 -> 10617685;
	_JOIN_10632489 [label="_JOIN_10632489None...",shape=box];
	_JOIN_10632489 -> 10632521;
	ForLoop10634934 [label="ForLoop10634934  for (j=(min(ny-1,jj+511))-(((min(ny-1,jj+511))-(jj)+1)%19)+1; j<=min(ny-1,jj+511); j=j+1) {...",shape=box];
	ForLoop10634934 -> 10634933;
	ForLoop10634934 -> _JOIN_10634934;
	10627684 [label="10627684  scv_53=scv_53+A[(i+2)*ny+j]*x_copy[(j-jj)];...",shape=box];
	10663253 [label="10663253  double scv_21, scv_22, scv_23, scv_24, scv_25, scv_26, scv_27, scv_28;...",shape=box];
	_JOIN_10632409 [label="_JOIN_10632409None...",shape=box];
	_JOIN_10632409 -> ForLoop10632489;
	_JOIN_10625982 [label="_JOIN_10625982None...",shape=box];
	_JOIN_10625982 -> 10672015;
	_JOIN_10625984 [label="_JOIN_10625984None...",shape=box];
	_JOIN_10625984 -> 10625985;
	ForLoop10631594 [label="ForLoop10631594  for (j=jj; j<=min(ny-1,jj+511)-18; j=j+19) {...",shape=box];
	ForLoop10631594 -> 10630944;
	ForLoop10631594 -> _JOIN_10631594;
	_JOIN_10626713 [label="_JOIN_10626713None...",shape=box];
	_JOIN_10626713 -> ForLoop10626784;
	ForLoop10635749 [label="ForLoop10635749  for (j=(min(ny-1,jj+511))-(((min(ny-1,jj+511))-(jj)+1)%19)+1; j<=min(ny-1,jj+511); j=j+1) {...",shape=box];
	ForLoop10635749 -> 10635748;
	ForLoop10635749 -> _JOIN_10635749;
	ForLoop10630779 [label="ForLoop10630779  for (j=jj; j<=min(ny-1,jj+511)-18; j=j+19) {...",shape=box];
	ForLoop10630779 -> 10630129;
	ForLoop10630779 -> _JOIN_10630779;
	10634933 [label="10634933  scv_47=scv_47+A[(i+10)*ny+j]*x_copy[(j-jj)];...",shape=box];
	10634933 -> _JOIN_10634934;
	_JOIN_10447821 [label="_JOIN_10447821None...",shape=box];
	_JOIN_10447821 -> 10447967;
	10641399 [label="10641399  scv_66=scv_66+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop10632409 [label="ForLoop10632409  for (j=jj; j<=min(ny-1,jj+511)-18; j=j+19) {...",shape=box];
	ForLoop10632409 -> 10631759;
	ForLoop10632409 -> _JOIN_10632409;
	ForLoop10628414 [label="ForLoop10628414  for (j=(min(ny-1,jj+511))-(((min(ny-1,jj+511))-(jj)+1)%19)+1; j<=min(ny-1,jj+511); j=j+1) {...",shape=box];
	ForLoop10628414 -> 10628413;
	ForLoop10628414 -> _JOIN_10628414;
	ForLoop10632489 [label="ForLoop10632489  for (j=(min(ny-1,jj+511))-(((min(ny-1,jj+511))-(jj)+1)%19)+1; j<=min(ny-1,jj+511); j=j+1) {...",shape=box];
	ForLoop10632489 -> 10632488;
	ForLoop10632489 -> _JOIN_10632489;
	10642330 [label="10642330  for (k=kk; k<=min(ny-1,kk+255); k=k+1) ...",shape=box];
	10642330 -> _JOIN_10642332;
	_JOIN_10642299 [label="_JOIN_10642299None...",shape=box];
	_JOIN_10642299 -> 10642330;
	10632574 [label="10632574  scv_57=scv_57+A[(i+8)*ny+j]*x_copy[(j-jj)];...",shape=box];
	10631673 [label="10631673  scv_51=scv_51+A[(i+6)*ny+j]*x_copy[(j-jj)];...",shape=box];
	10631673 -> _JOIN_10631674;
	10636613 [label="10636613  for (k=kk; k<=min(ny-1,kk+255); k=k+1) ...",shape=box];
	10672003 [label="10672003  double scv_29, scv_30, scv_31, scv_32, scv_33, scv_34, scv_35, scv_36;...",shape=box];
	10447967 [label="10447967  register int cbv_2, cbv_3;...",shape=box];
	10731298 [label="10731298  tmpexpected=9369846271501.798828
actual=9369846271501.798828
[(i+12)]=scv_45;...",shape=box];
	_JOIN_10633224 [label="_JOIN_10633224None...",shape=box];
	_JOIN_10633224 -> ForLoop10633304;
	_JOIN_10636484 [label="_JOIN_10636484None...",shape=box];
	_JOIN_10636484 -> ForLoop10636564;
	_JOIN_10630044 [label="_JOIN_10630044None...",shape=box];
	_JOIN_10630044 -> 10630076;
	ForLoop10629149 [label="ForLoop10629149  for (j=jj; j<=min(ny-1,jj+511)-18; j=j+19) {...",shape=box];
	ForLoop10629149 -> 10628499;
	ForLoop10629149 -> _JOIN_10629149;
	10626816 [label="10626816  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	_JOIN_10627599 [label="_JOIN_10627599None...",shape=box];
	_JOIN_10627599 -> 10627631;
	ForLoop10630859 [label="ForLoop10630859  for (j=(min(ny-1,jj+511))-(((min(ny-1,jj+511))-(jj)+1)%19)+1; j<=min(ny-1,jj+511); j=j+1) {...",shape=box];
	ForLoop10630859 -> 10630858;
	ForLoop10630859 -> _JOIN_10630859;
	10635781 [label="10635781  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	10626225 [label="10626225  scv_49=scv_49+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	10640864 [label="10640864  for (k=kk; k<=min(ny-1,kk+255); k=k+1) ...",shape=box];
	_JOIN_10641238 [label="_JOIN_10641238None...",shape=box];
	_JOIN_10641238 -> 10731298;
	10672015 [label="10672015  tmp[it]=scv_29;...",shape=box];
	ForLoop10625949 [label="ForLoop10625949  for (kt=kk; kt<=min(ny-1,kk+255)-7; kt=kt+8) {...",shape=box];
	ForLoop10625949 -> 10663253;
	ForLoop10625949 -> _JOIN_10625949;
	ForLoop10636569 [label="ForLoop10636569  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop10636569 -> ForLoop10636567;
	ForLoop10636569 -> _JOIN_10636569;
	ForLoop10636567 [label="ForLoop10636567  for (jj=jjj; jj<=min(ny-1,jjj+1536); jj=jj+512) {...",shape=box];
	ForLoop10636567 -> 10626181;
	ForLoop10636567 -> _JOIN_10636567;
	ForLoop10636564 [label="ForLoop10636564  for (j=(min(ny-1,jj+511))-(((min(ny-1,jj+511))-(jj)+1)%19)+1; j<=min(ny-1,jj+511); j=j+1) {...",shape=box];
	ForLoop10636564 -> 10636563;
	ForLoop10636564 -> _JOIN_10636564;
	ForLoop10630044 [label="ForLoop10630044  for (j=(min(ny-1,jj+511))-(((min(ny-1,jj+511))-(jj)+1)%19)+1; j<=min(ny-1,jj+511); j=j+1) {...",shape=box];
	ForLoop10630044 -> 10630043;
	ForLoop10630044 -> _JOIN_10630044;
	10623423 [label="10623423  for (k=kk; k<=min(ny-1,kk+255); k=k+1) ...",shape=box];
	10623423 -> ForLoop10625949;
	_JOIN_10642332 [label="_JOIN_10642332None...",shape=box];
	_JOIN_10642332 -> 10736627;
	_JOIN_10640833 [label="_JOIN_10640833None...",shape=box];
	_JOIN_10640833 -> 10640864;
	10736627 [label="10736627  tmp[i]=scv_66;...",shape=box];
	10736627 -> _JOIN_10642334;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest48.exe __orio_perftest48.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest48.exe  
{'[6, 6, 5, 4, 6, 3, 1, 1, 3, 12, 18, 0, 1, 0, 1, 1, 1, 0]' : 0.0955651}
{'[6, 6, 5, 4, 6, 3, 1, 1, 3, 12, 18, 0, 1, 0, 1, 1, 1, 0]' : 0.0950768}
{'[6, 6, 5, 4, 6, 3, 1, 1, 3, 12, 18, 0, 1, 0, 1, 1, 1, 0]' : 0.095036}
{'[6, 6, 5, 4, 6, 3, 1, 1, 3, 12, 18, 0, 1, 0, 1, 1, 1, 0]' : 0.094969}
{'[6, 6, 5, 4, 6, 3, 1, 1, 3, 12, 18, 0, 1, 0, 1, 1, 1, 0]' : 0.094959}
{'[6, 6, 5, 4, 6, 3, 1, 1, 3, 12, 18, 0, 1, 0, 1, 1, 1, 0]' : 0.0950019}
{'[6, 6, 5, 4, 6, 3, 1, 1, 3, 12, 18, 0, 1, 0, 1, 1, 1, 0]' : 0.094969}
{'[6, 6, 5, 4, 6, 3, 1, 1, 3, 12, 18, 0, 1, 0, 1, 1, 1, 0]' : 0.0949891}
{'[6, 6, 5, 4, 6, 3, 1, 1, 3, 12, 18, 0, 1, 0, 1, 1, 1, 0]' : 0.095036}
{'[6, 6, 5, 4, 6, 3, 1, 1, 3, 12, 18, 0, 1, 0, 1, 1, 1, 0]' : 0.095016}
{'[6, 6, 5, 4, 6, 3, 1, 1, 3, 12, 18, 0, 1, 0, 1, 1, 1, 0]' : 0.0953879}
{'[6, 6, 5, 4, 6, 3, 1, 1, 3, 12, 18, 0, 1, 0, 1, 1, 1, 0]' : 0.0951481}
{'[6, 6, 5, 4, 6, 3, 1, 1, 3, 12, 18, 0, 1, 0, 1, 1, 1, 0]' : 0.095005}
{'[6, 6, 5, 4, 6, 3, 1, 1, 3, 12, 18, 0, 1, 0, 1, 1, 1, 0]' : 0.095053}
{'[6, 6, 5, 4, 6, 3, 1, 1, 3, 12, 18, 0, 1, 0, 1, 1, 1, 0]' : 0.094991}
{'[6, 6, 5, 4, 6, 3, 1, 1, 3, 12, 18, 0, 1, 0, 1, 1, 1, 0]' : 0.094996}
{'[6, 6, 5, 4, 6, 3, 1, 1, 3, 12, 18, 0, 1, 0, 1, 1, 1, 0]' : 0.0949712}
{'[6, 6, 5, 4, 6, 3, 1, 1, 3, 12, 18, 0, 1, 0, 1, 1, 1, 0]' : 0.095078}
{'[6, 6, 5, 4, 6, 3, 1, 1, 3, 12, 18, 0, 1, 0, 1, 1, 1, 0]' : 0.095001}
{'[6, 6, 5, 4, 6, 3, 1, 1, 3, 12, 18, 0, 1, 0, 1, 1, 1, 0]' : 0.094945}
{'[6, 6, 5, 4, 6, 3, 1, 1, 3, 12, 18, 0, 1, 0, 1, 1, 1, 0]' : 0.09604}
{'[6, 6, 5, 4, 6, 3, 1, 1, 3, 12, 18, 0, 1, 0, 1, 1, 1, 0]' : 0.0949941}
{'[6, 6, 5, 4, 6, 3, 1, 1, 3, 12, 18, 0, 1, 0, 1, 1, 1, 0]' : 0.095026}
{'[6, 6, 5, 4, 6, 3, 1, 1, 3, 12, 18, 0, 1, 0, 1, 1, 1, 0]' : 0.0952232}
{'[6, 6, 5, 4, 6, 3, 1, 1, 3, 12, 18, 0, 1, 0, 1, 1, 1, 0]' : 0.095047}
{'[6, 6, 5, 4, 6, 3, 1, 1, 3, 12, 18, 0, 1, 0, 1, 1, 1, 0]' : 0.0950041}
{'[6, 6, 5, 4, 6, 3, 1, 1, 3, 12, 18, 0, 1, 0, 1, 1, 1, 0]' : 0.0952711}
{'[6, 6, 5, 4, 6, 3, 1, 1, 3, 12, 18, 0, 1, 0, 1, 1, 1, 0]' : 0.0950041}
{'[6, 6, 5, 4, 6, 3, 1, 1, 3, 12, 18, 0, 1, 0, 1, 1, 1, 0]' : 0.0949869}
{'[6, 6, 5, 4, 6, 3, 1, 1, 3, 12, 18, 0, 1, 0, 1, 1, 1, 0]' : 0.0950041}

out:
 ["{'[6, 6, 5, 4, 6, 3, 1, 1, 3, 12, 18, 0, 1, 0, 1, 1, 1, 0]' : 0.0955651}", "{'[6, 6, 5, 4, 6, 3, 1, 1, 3, 12, 18, 0, 1, 0, 1, 1, 1, 0]' : 0.0950768}", "{'[6, 6, 5, 4, 6, 3, 1, 1, 3, 12, 18, 0, 1, 0, 1, 1, 1, 0]' : 0.095036}", "{'[6, 6, 5, 4, 6, 3, 1, 1, 3, 12, 18, 0, 1, 0, 1, 1, 1, 0]' : 0.094969}", "{'[6, 6, 5, 4, 6, 3, 1, 1, 3, 12, 18, 0, 1, 0, 1, 1, 1, 0]' : 0.094959}", "{'[6, 6, 5, 4, 6, 3, 1, 1, 3, 12, 18, 0, 1, 0, 1, 1, 1, 0]' : 0.0950019}", "{'[6, 6, 5, 4, 6, 3, 1, 1, 3, 12, 18, 0, 1, 0, 1, 1, 1, 0]' : 0.094969}", "{'[6, 6, 5, 4, 6, 3, 1, 1, 3, 12, 18, 0, 1, 0, 1, 1, 1, 0]' : 0.0949891}", "{'[6, 6, 5, 4, 6, 3, 1, 1, 3, 12, 18, 0, 1, 0, 1, 1, 1, 0]' : 0.095036}", "{'[6, 6, 5, 4, 6, 3, 1, 1, 3, 12, 18, 0, 1, 0, 1, 1, 1, 0]' : 0.095016}", "{'[6, 6, 5, 4, 6, 3, 1, 1, 3, 12, 18, 0, 1, 0, 1, 1, 1, 0]' : 0.0953879}", "{'[6, 6, 5, 4, 6, 3, 1, 1, 3, 12, 18, 0, 1, 0, 1, 1, 1, 0]' : 0.0951481}", "{'[6, 6, 5, 4, 6, 3, 1, 1, 3, 12, 18, 0, 1, 0, 1, 1, 1, 0]' : 0.095005}", "{'[6, 6, 5, 4, 6, 3, 1, 1, 3, 12, 18, 0, 1, 0, 1, 1, 1, 0]' : 0.095053}", "{'[6, 6, 5, 4, 6, 3, 1, 1, 3, 12, 18, 0, 1, 0, 1, 1, 1, 0]' : 0.094991}", "{'[6, 6, 5, 4, 6, 3, 1, 1, 3, 12, 18, 0, 1, 0, 1, 1, 1, 0]' : 0.094996}", "{'[6, 6, 5, 4, 6, 3, 1, 1, 3, 12, 18, 0, 1, 0, 1, 1, 1, 0]' : 0.0949712}", "{'[6, 6, 5, 4, 6, 3, 1, 1, 3, 12, 18, 0, 1, 0, 1, 1, 1, 0]' : 0.095078}", "{'[6, 6, 5, 4, 6, 3, 1, 1, 3, 12, 18, 0, 1, 0, 1, 1, 1, 0]' : 0.095001}", "{'[6, 6, 5, 4, 6, 3, 1, 1, 3, 12, 18, 0, 1, 0, 1, 1, 1, 0]' : 0.094945}", "{'[6, 6, 5, 4, 6, 3, 1, 1, 3, 12, 18, 0, 1, 0, 1, 1, 1, 0]' : 0.09604}", "{'[6, 6, 5, 4, 6, 3, 1, 1, 3, 12, 18, 0, 1, 0, 1, 1, 1, 0]' : 0.0949941}", "{'[6, 6, 5, 4, 6, 3, 1, 1, 3, 12, 18, 0, 1, 0, 1, 1, 1, 0]' : 0.095026}", "{'[6, 6, 5, 4, 6, 3, 1, 1, 3, 12, 18, 0, 1, 0, 1, 1, 1, 0]' : 0.0952232}", "{'[6, 6, 5, 4, 6, 3, 1, 1, 3, 12, 18, 0, 1, 0, 1, 1, 1, 0]' : 0.095047}", "{'[6, 6, 5, 4, 6, 3, 1, 1, 3, 12, 18, 0, 1, 0, 1, 1, 1, 0]' : 0.0950041}", "{'[6, 6, 5, 4, 6, 3, 1, 1, 3, 12, 18, 0, 1, 0, 1, 1, 1, 0]' : 0.0952711}", "{'[6, 6, 5, 4, 6, 3, 1, 1, 3, 12, 18, 0, 1, 0, 1, 1, 1, 0]' : 0.0950041}", "{'[6, 6, 5, 4, 6, 3, 1, 1, 3, 12, 18, 0, 1, 0, 1, 1, 1, 0]' : 0.0949869}", "{'[6, 6, 5, 4, 6, 3, 1, 1, 3, 12, 18, 0, 1, 0, 1, 1, 1, 0]' : 0.0950041}"]
returning from 'run': {'[6, 6, 5, 4, 6, 3, 1, 1, 3, 12, 18, 0, 1, 0, 1, 1, 1, 0]': ([0.0955651, 0.0950768, 0.095036, 0.094969, 0.094959, 0.0950019, 0.094969, 0.0949891, 0.095036, 0.095016, 0.0953879, 0.0951481, 0.095005, 0.095053, 0.094991, 0.094996, 0.0949712, 0.095078, 0.095001, 0.094945, 0.09604, 0.0949941, 0.095026, 0.0952232, 0.095047, 0.0950041, 0.0952711, 0.0950041, 0.0949869, 0.0950041], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.0955651, 0.0950768, 0.095036, 0.094969, 0.094959, 0.0950019, 0.094969, 0.0949891, 0.095036, 0.095016, 0.0953879, 0.0951481, 0.095005, 0.095053, 0.094991, 0.094996, 0.0949712, 0.095078, 0.095001, 0.094945, 0.09604, 0.0949941, 0.095026, 0.0952232, 0.095047, 0.0950041, 0.0952711, 0.0950041, 0.0949869, 0.0950041], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 5, 4, 6, 3, 1, 1, 3, 12, 18, 0, 1, 0, 1, 1, 1, 0]': ([0.0955651, 0.0950768, 0.095036, 0.094969, 0.094959, 0.0950019, 0.094969, 0.0949891, 0.095036, 0.095016, 0.0953879, 0.0951481, 0.095005, 0.095053, 0.094991, 0.094996, 0.0949712, 0.095078, 0.095001, 0.094945, 0.09604, 0.0949941, 0.095026, 0.0952232, 0.095047, 0.0950041, 0.0952711, 0.0950041, 0.0949869, 0.0950041], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [5, 5, 1, 5, 1, 1, 1, 13, 0, 25, 23, 0, 2, 0, 1, 0]
Fixed Factors: {'T2_J': 6, 'VEC1': 1}
Testing candidate 11: [5, 5, 1, 5, 6, 1, 1, 1, 13, 0, 25, 23, 0, 2, 0, 1, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	6
        Additions: 		397
        Multiplications: 	114
        Divisions: 		0
        Logical: 		0
        Reads: 			822
        Writes: 		161
        Comparisons:		15
        Gotos: 			0
        
digraph CFG {
	ForLoop10804965 [label="ForLoop10804965  for (k=kk; k<=min(ny-1,kk+15)-23; k=k+24) {...",shape=box];
	ForLoop10804965 -> 10809790;
	ForLoop10804965 -> _JOIN_10804965;
	10803171 [label="10803171  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	10803171 -> ForLoop10804115;
	10805071 [label="10805071  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	10805071 -> _JOIN_10805073;
	_JOIN_10804115 [label="_JOIN_10804115None...",shape=box];
	_JOIN_10804115 -> _JOIN_10804117;
	10803214 [label="10803214  scv_26=scv_26+A[i*ny+jt]*x_copy[(jt-jj)];...",shape=box];
	_JOIN_10754715 [label="_JOIN_10754715None...",shape=box];
	_JOIN_10754715 -> 10754951;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 10754344;
	10814986 [label="10814986  tmp[i]=scv_26;...",shape=box];
	10814986 -> _JOIN_10805076;
	10804180 [label="10804180  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	_JOIN_10804965 [label="_JOIN_10804965None...",shape=box];
	_JOIN_10804965 -> ForLoop10805039;
	_JOIN_10805039 [label="_JOIN_10805039None...",shape=box];
	_JOIN_10805039 -> 10805071;
	_JOIN_10805078 [label="_JOIN_10805078None...",shape=box];
	ForLoop10754715 [label="ForLoop10754715  for (i=0; i<=cbv_1; i=i+14) {...",shape=box];
	ForLoop10754715 -> 10754596;
	ForLoop10754715 -> _JOIN_10754715;
	10754344 [label="10754344  int i;...",shape=box];
	_JOIN_10805074 [label="_JOIN_10805074None...",shape=box];
	_JOIN_10805074 -> 10814986;
	_JOIN_10805077 [label="_JOIN_10805077None...",shape=box];
	_JOIN_10805077 -> _JOIN_10805078;
	_JOIN_10805076 [label="_JOIN_10805076None...",shape=box];
	_JOIN_10805076 -> _JOIN_10805077;
	_JOIN_10805073 [label="_JOIN_10805073None...",shape=box];
	_JOIN_10805073 -> _JOIN_10805074;
	10814974 [label="10814974  double scv_26;...",shape=box];
	ForLoop10805078 [label="ForLoop10805078  for (iii=0; iii<=nx-1; iii=iii+1024) {...",shape=box];
	ForLoop10805078 -> ForLoop10805077;
	ForLoop10805078 -> _JOIN_10805078;
	10754596 [label="10754596  y[i]=0.0;...",shape=box];
	ForLoop10805074 [label="ForLoop10805074  for (kkk=0; kkk<=ny-1; kkk=kkk+64) {...",shape=box];
	ForLoop10805074 -> ForLoop10805073;
	ForLoop10805074 -> _JOIN_10805074;
	ForLoop10805077 [label="ForLoop10805077  for (ii=iii; ii<=min(nx-1,iii+768); ii=ii+256) {...",shape=box];
	ForLoop10805077 -> ForLoop10805076;
	ForLoop10805077 -> _JOIN_10805077;
	ForLoop10805076 [label="ForLoop10805076  for (i=ii; i<=min(nx-1,ii+255); i=i+1) {...",shape=box];
	ForLoop10805076 -> 10814974;
	ForLoop10805076 -> _JOIN_10805076;
	10809790 [label="10809790  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	ForLoop10805073 [label="ForLoop10805073  for (kk=kkk; kk<=min(ny-1,kkk+48); kk=kk+16) {...",shape=box];
	ForLoop10805073 -> 10804180;
	ForLoop10805073 -> _JOIN_10805073;
	ForLoop10805039 [label="ForLoop10805039  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kk)+1)%24)+1; k<=min(ny-1,kk+15); k=k+1) {...",shape=box];
	ForLoop10805039 -> 10810468;
	ForLoop1expected=0.000000
actual=9369846271501.798828
0805039 -> _JOIN_10805039;
	_JOIN_10804118 [label="_JOIN_10804118None...",shape=box];
	_JOIN_10804118 -> ForLoop10805074;
	ForLoop10804115 [label="ForLoop10804115  for (jt=jj; jt<=min(ny-1,jj+255)-31; jt=jt+32) {...",shape=box];
	ForLoop10804115 -> 10803214;
	ForLoop10804115 -> _JOIN_10804115;
	ForLoop10804117 [label="ForLoop10804117  for (jj=jjj; jj<=min(ny-1,jjj+1792); jj=jj+256) {...",shape=box];
	ForLoop10804117 -> 10803171;
	ForLoop10804117 -> _JOIN_10804117;
	_JOIN_10754784 [label="_JOIN_10754784None...",shape=box];
	_JOIN_10754784 -> 10803053;
	ForLoop10804118 [label="ForLoop10804118  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop10804118 -> ForLoop10804117;
	ForLoop10804118 -> _JOIN_10804118;
	10810468 [label="10810468  double scv_25;...",shape=box];
	ForLoop10754784 [label="ForLoop10754784  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop10754784 -> 10754783;
	ForLoop10754784 -> _JOIN_10754784;
	_JOIN_10804117 [label="_JOIN_10804117None...",shape=box];
	_JOIN_10804117 -> _JOIN_10804118;
	10754951 [label="10754951  register int cbv_2, cbv_3;...",shape=box];
	10803053 [label="10803053  double x_copy[256];...",shape=box];
	10754783 [label="10754783  y[i]=0.0;...",shape=box];
	10754783 -> _JOIN_10754784;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest49.exe __orio_perftest49.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest49.exe  
{'[5, 5, 1, 5, 6, 1, 1, 1, 13, 0, 25, 23, 0, 2, 0, 1, 1, 0]' : 0.298382}
{'[5, 5, 1, 5, 6, 1, 1, 1, 13, 0, 25, 23, 0, 2, 0, 1, 1, 0]' : 0.29851}
{'[5, 5, 1, 5, 6, 1, 1, 1, 13, 0, 25, 23, 0, 2, 0, 1, 1, 0]' : 0.298413}
{'[5, 5, 1, 5, 6, 1, 1, 1, 13, 0, 25, 23, 0, 2, 0, 1, 1, 0]' : 0.298268}
{'[5, 5, 1, 5, 6, 1, 1, 1, 13, 0, 25, 23, 0, 2, 0, 1, 1, 0]' : 0.299336}
{'[5, 5, 1, 5, 6, 1, 1, 1, 13, 0, 25, 23, 0, 2, 0, 1, 1, 0]' : 0.298236}
{'[5, 5, 1, 5, 6, 1, 1, 1, 13, 0, 25, 23, 0, 2, 0, 1, 1, 0]' : 0.298249}
{'[5, 5, 1, 5, 6, 1, 1, 1, 13, 0, 25, 23, 0, 2, 0, 1, 1, 0]' : 0.298397}
{'[5, 5, 1, 5, 6, 1, 1, 1, 13, 0, 25, 23, 0, 2, 0, 1, 1, 0]' : 0.298203}
{'[5, 5, 1, 5, 6, 1, 1, 1, 13, 0, 25, 23, 0, 2, 0, 1, 1, 0]' : 0.298279}
{'[5, 5, 1, 5, 6, 1, 1, 1, 13, 0, 25, 23, 0, 2, 0, 1, 1, 0]' : 0.299238}
{'[5, 5, 1, 5, 6, 1, 1, 1, 13, 0, 25, 23, 0, 2, 0, 1, 1, 0]' : 0.298366}
{'[5, 5, 1, 5, 6, 1, 1, 1, 13, 0, 25, 23, 0, 2, 0, 1, 1, 0]' : 0.298373}
{'[5, 5, 1, 5, 6, 1, 1, 1, 13, 0, 25, 23, 0, 2, 0, 1, 1, 0]' : 0.298189}
{'[5, 5, 1, 5, 6, 1, 1, 1, 13, 0, 25, 23, 0, 2, 0, 1, 1, 0]' : 0.298494}
{'[5, 5, 1, 5, 6, 1, 1, 1, 13, 0, 25, 23, 0, 2, 0, 1, 1, 0]' : 0.298297}
{'[5, 5, 1, 5, 6, 1, 1, 1, 13, 0, 25, 23, 0, 2, 0, 1, 1, 0]' : 0.298272}
{'[5, 5, 1, 5, 6, 1, 1, 1, 13, 0, 25, 23, 0, 2, 0, 1, 1, 0]' : 0.299187}
{'[5, 5, 1, 5, 6, 1, 1, 1, 13, 0, 25, 23, 0, 2, 0, 1, 1, 0]' : 0.298362}
{'[5, 5, 1, 5, 6, 1, 1, 1, 13, 0, 25, 23, 0, 2, 0, 1, 1, 0]' : 0.298249}
{'[5, 5, 1, 5, 6, 1, 1, 1, 13, 0, 25, 23, 0, 2, 0, 1, 1, 0]' : 0.298301}
{'[5, 5, 1, 5, 6, 1, 1, 1, 13, 0, 25, 23, 0, 2, 0, 1, 1, 0]' : 0.298387}
{'[5, 5, 1, 5, 6, 1, 1, 1, 13, 0, 25, 23, 0, 2, 0, 1, 1, 0]' : 0.298259}
{'[5, 5, 1, 5, 6, 1, 1, 1, 13, 0, 25, 23, 0, 2, 0, 1, 1, 0]' : 0.298321}
{'[5, 5, 1, 5, 6, 1, 1, 1, 13, 0, 25, 23, 0, 2, 0, 1, 1, 0]' : 0.29926}
{'[5, 5, 1, 5, 6, 1, 1, 1, 13, 0, 25, 23, 0, 2, 0, 1, 1, 0]' : 0.298283}
{'[5, 5, 1, 5, 6, 1, 1, 1, 13, 0, 25, 23, 0, 2, 0, 1, 1, 0]' : 0.298213}
{'[5, 5, 1, 5, 6, 1, 1, 1, 13, 0, 25, 23, 0, 2, 0, 1, 1, 0]' : 0.298388}
{'[5, 5, 1, 5, 6, 1, 1, 1, 13, 0, 25, 23, 0, 2, 0, 1, 1, 0]' : 0.298476}
{'[5, 5, 1, 5, 6, 1, 1, 1, 13, 0, 25, 23, 0, 2, 0, 1, 1, 0]' : 0.298318}

out:
 ["{'[5, 5, 1, 5, 6, 1, 1, 1, 13, 0, 25, 23, 0, 2, 0, 1, 1, 0]' : 0.298382}", "{'[5, 5, 1, 5, 6, 1, 1, 1, 13, 0, 25, 23, 0, 2, 0, 1, 1, 0]' : 0.29851}", "{'[5, 5, 1, 5, 6, 1, 1, 1, 13, 0, 25, 23, 0, 2, 0, 1, 1, 0]' : 0.298413}", "{'[5, 5, 1, 5, 6, 1, 1, 1, 13, 0, 25, 23, 0, 2, 0, 1, 1, 0]' : 0.298268}", "{'[5, 5, 1, 5, 6, 1, 1, 1, 13, 0, 25, 23, 0, 2, 0, 1, 1, 0]' : 0.299336}", "{'[5, 5, 1, 5, 6, 1, 1, 1, 13, 0, 25, 23, 0, 2, 0, 1, 1, 0]' : 0.298236}", "{'[5, 5, 1, 5, 6, 1, 1, 1, 13, 0, 25, 23, 0, 2, 0, 1, 1, 0]' : 0.298249}", "{'[5, 5, 1, 5, 6, 1, 1, 1, 13, 0, 25, 23, 0, 2, 0, 1, 1, 0]' : 0.298397}", "{'[5, 5, 1, 5, 6, 1, 1, 1, 13, 0, 25, 23, 0, 2, 0, 1, 1, 0]' : 0.298203}", "{'[5, 5, 1, 5, 6, 1, 1, 1, 13, 0, 25, 23, 0, 2, 0, 1, 1, 0]' : 0.298279}", "{'[5, 5, 1, 5, 6, 1, 1, 1, 13, 0, 25, 23, 0, 2, 0, 1, 1, 0]' : 0.299238}", "{'[5, 5, 1, 5, 6, 1, 1, 1, 13, 0, 25, 23, 0, 2, 0, 1, 1, 0]' : 0.298366}", "{'[5, 5, 1, 5, 6, 1, 1, 1, 13, 0, 25, 23, 0, 2, 0, 1, 1, 0]' : 0.298373}", "{'[5, 5, 1, 5, 6, 1, 1, 1, 13, 0, 25, 23, 0, 2, 0, 1, 1, 0]' : 0.298189}", "{'[5, 5, 1, 5, 6, 1, 1, 1, 13, 0, 25, 23, 0, 2, 0, 1, 1, 0]' : 0.298494}", "{'[5, 5, 1, 5, 6, 1, 1, 1, 13, 0, 25, 23, 0, 2, 0, 1, 1, 0]' : 0.298297}", "{'[5, 5, 1, 5, 6, 1, 1, 1, 13, 0, 25, 23, 0, 2, 0, 1, 1, 0]' : 0.298272}", "{'[5, 5, 1, 5, 6, 1, 1, 1, 13, 0, 25, 23, 0, 2, 0, 1, 1, 0]' : 0.299187}", "{'[5, 5, 1, 5, 6, 1, 1, 1, 13, 0, 25, 23, 0, 2, 0, 1, 1, 0]' : 0.298362}", "{'[5, 5, 1, 5, 6, 1, 1, 1, 13, 0, 25, 23, 0, 2, 0, 1, 1, 0]' : 0.298249}", "{'[5, 5, 1, 5, 6, 1, 1, 1, 13, 0, 25, 23, 0, 2, 0, 1, 1, 0]' : 0.298301}", "{'[5, 5, 1, 5, 6, 1, 1, 1, 13, 0, 25, 23, 0, 2, 0, 1, 1, 0]' : 0.298387}", "{'[5, 5, 1, 5, 6, 1, 1, 1, 13, 0, 25, 23, 0, 2, 0, 1, 1, 0]' : 0.298259}", "{'[5, 5, 1, 5, 6, 1, 1, 1, 13, 0, 25, 23, 0, 2, 0, 1, 1, 0]' : 0.298321}", "{'[5, 5, 1, 5, 6, 1, 1, 1, 13, 0, 25, 23, 0, 2, 0, 1, 1, 0]' : 0.29926}", "{'[5, 5, 1, 5, 6, 1, 1, 1, 13, 0, 25, 23, 0, 2, 0, 1, 1, 0]' : 0.298283}", "{'[5, 5, 1, 5, 6, 1, 1, 1, 13, 0, 25, 23, 0, 2, 0, 1, 1, 0]' : 0.298213}", "{'[5, 5, 1, 5, 6, 1, 1, 1, 13, 0, 25, 23, 0, 2, 0, 1, 1, 0]' : 0.298388}", "{'[5, 5, 1, 5, 6, 1, 1, 1, 13, 0, 25, 23, 0, 2, 0, 1, 1, 0]' : 0.298476}", "{'[5, 5, 1, 5, 6, 1, 1, 1, 13, 0, 25, 23, 0, 2, 0, 1, 1, 0]' : 0.298318}"]
returning from 'run': {'[5, 5, 1, 5, 6, 1, 1, 1, 13, 0, 25, 23, 0, 2, 0, 1, 1, 0]': ([0.298382, 0.29851, 0.298413, 0.298268, 0.299336, 0.298236, 0.298249, 0.298397, 0.298203, 0.298279, 0.299238, 0.298366, 0.298373, 0.298189, 0.298494, 0.298297, 0.298272, 0.299187, 0.298362, 0.298249, 0.298301, 0.298387, 0.298259, 0.298321, 0.29926, 0.298283, 0.298213, 0.298388, 0.298476, 0.298318], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.298382, 0.29851, 0.298413, 0.298268, 0.299336, 0.298236, 0.298249, 0.298397, 0.298203, 0.298279, 0.299238, 0.298366, 0.298373, 0.298189, 0.298494, 0.298297, 0.298272, 0.299187, 0.298362, 0.298249, 0.298301, 0.298387, 0.298259, 0.298321, 0.29926, 0.298283, 0.298213, 0.298388, 0.298476, 0.298318], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[5, 5, 1, 5, 6, 1, 1, 1, 13, 0, 25, 23, 0, 2, 0, 1, 1, 0]': ([0.298382, 0.29851, 0.298413, 0.298268, 0.299336, 0.298236, 0.298249, 0.298397, 0.298203, 0.298279, 0.299238, 0.298366, 0.298373, 0.298189, 0.298494, 0.298297, 0.298272, 0.299187, 0.298362, 0.298249, 0.298301, 0.298387, 0.298259, 0.298321, 0.29926, 0.298283, 0.298213, 0.298388, 0.298476, 0.298318], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [0, 6, 1, 5, 6, 1, 0, 12, 25, 5, 0, 1, 0, 1, 0, 1]
Fixed Factors: {'T2_J': 6, 'VEC1': 1}
Testing candidate 12: [0, 6, 1, 5, 6, 6, 1, 0, 12, 25, 5, 0, 1, 0, 1, 0, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	108
        Max loop nest depth: 	5
        Additions: 		4375
        Multiplications: 	1120
        Divisions: 		0
        Logical: 		0
        Reads: 			7111
        Writes: 		939
        Comparisons:		108
        Gotos: 			0
        
digraph CFG {
	_JOIN_10936122 [label="_JOIN_10936122None...",shape=box];
	_JOIN_10936122 -> 10936154;
	10935807 [label="10935807  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	10941326 [label="10941326  tmp[(i+19)]=tmp[(i+19)]+A[(i+19)*ny+j]*x_copy[(j-jj)];...",shape=box];
	10941326 -> _JOIN_10941327;
	ForLoop10939859 [label="ForLoop10939859  for (j=jj; j<=cbv_51; j=j+6) {...",shape=box];
	ForLoop10939859 -> 10939677;
	ForLoop10939859 -> _JOIN_10939859;
	10936501 [label="10936501  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	10978348 [label="10978348  register int cbv_7, cbv_8;...",shape=box];
	ForLoop10940980 [label="ForLoop10940980  for (j=cbv_61; j<=cbv_62; j=j+1) ...",shape=box];
	ForLoop10940980 -> 10940979;
	ForLoop10940980 -> _JOIN_10940980;
	ForLoop10936389 [label="ForLoop10936389  for (j=jj; j<=cbv_21; j=j+6) {...",shape=box];
	ForLoop10936389 -> 10936207;
	ForLoop10936389 -> _JOIN_10936389;
	_JOIN_10938818 [label="_JOIN_10938818None...",shape=box];
	_JOIN_10938818 -> 10982776;
	10936154 [label="10936154  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	_JOIN_10934734 [label="_JOIN_10934734None...",shape=box];
	_JOIN_10934734 -> 10934766;
	10979455 [label="10979455  register int cbv_16, cbv_17;...",shape=box];
	10828543 [label="10828543  tmp[it]=0;...",shape=box];
	10828543 -> ForLoop10828253;
	_JOIN_10938898 [label="_JOIN_10938898None...",shape=box];
	_JOIN_10938898 -> 10938930;
	10984621 [label="10984621  register int cbv_58, cbv_59;...",shape=box];
	10819954 [label="10819954  register int cbv_2, cbv_3;...",shape=box];
	ForLoop10942635 [label="ForLoop10942635  for (j=jj; j<=cbv_75; j=j+6) {...",shape=box];
	ForLoop10942635 -> 10942453;
	ForLoop10942635 -> _JOIN_10942635;
	10935460 [label="10935460  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	10941706 [label="10941706  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	10980193 [label="10980193  register int cbv_22, cbv_23;...",shape=box];
	ForLoop10936736 [label="ForLoop10936736  for (j=jj; j<=cbv_24; j=j+6) {...",shape=box];
	ForLoop10936736 -> 10936554;
	ForLoop10936736 -> _JOIN_10936736;
	_JOIN_10951408 [label="_JOIN_10951408None...",shape=box];
	_JOIN_10951408 -> ForLoop10951726;
	ForLoop10935775 [label="ForLoop10935775  for (j=cbv_16; j<=cbv_17; j=j+1) ...",shape=box];
	ForLoop10935775 -> 10935774;
	ForLoop10935775 -> _JOIN_10935775;
	10951152 [label="10951152  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	10940632 [label="10940632  tmp[(i+17)]=tmp[(i+17)]+A[(i+17)*ny+j]*x_copy[(j-jj)];...",shape=box];
	10940632 -> _JOIN_10940633;
	ForLoop10941247 [label="ForLoop10941247  for (j=jj; j<=cbv_63; j=j+6) {...",shape=box];
	ForLoop10941247 -> 10941065;
	ForLoop10941247 -> _JOIN_10941247;
	10831839 [label="10831839  y[k]=y[k]+A[it*ny+k]*tmp[it];...",shape=box];
	10940318 [label="10940318  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	10951479 [label="10951479  y[kt]=y[kt]+A[i*ny+kt]*tmp[i];...",shape=box];
	_JOIN_10951407 [label="_JOIN_10951407None...",shape=box];
	_JOIN_10951407 -> _JOIN_10951408;
	_JOIN_10951404 [label="_JOIN_10951404None...",shape=box];
	_JOIN_10951404 -> _JOIN_10951407;
	ForLoop10819727 [label="ForLoop10819727  for (i=0; i<=cbv_1; i=i+13) {...",shape=box];
	ForLoop10819727 -> 10819617;
	ForLoop10819727 -> _JOIN_10819727;
	10937248 [label="10937248  tmp[(i+8)]=tmp[(i+8)]+A[(i+8)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_10938551 [label="_JOIN_10938551None...",shape=box];
	_JOIN_10938551 -> 10938583;
	_JOIN_10943062 [label="_JOIN_10943062None...",shape=box];
	_JOIN_10943062 -> 10943094;
	10942053 [label="10942053  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	10982038 [label="10982038  register int cbv_37, cbv_38;...",shape=box];
	10934195 [label="10934195  tmp[i]=0;...",shape=box];
	_JOIN_10939592 [label="_JOIN_10939592None...",shape=box];
	_JOIN_10939592 -> 10939624;
	ForLoop10940633 [label="ForLoop10940633  for (j=cbv_58; j<=cbv_59; j=j+1) ...",shape=box];
	ForLoop10940633 -> 10940632;
	ForLoop10940633 -> _JOIN_10940633;
	ForLoop10937857 [label="ForLoop10937857  for (j=cbv_34; j<=cbv_35; j=j+1) ...",shape=box];
	ForLoop10937857 -> 10937856;
	ForLoop10937857 -> _JOIN_10937857;
	10937889 [label="10937889  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	10951196 [label="10951196  tmp[i]=tmp[i]+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	10935774 [label="10935774  tmp[(i+3)]=tmp[(i+3)]+A[(i+3)*ny+j]*x_copy[(j-jj)];...",shape=box];
	10935774 -> _JOIN_10935775;
	_JOIN_10940633 [label="_JOIN_10940633None...",shape=box];
	_JOIN_10940633 -> 10940665;
	_JOIN_10935428 [label="_JOIN_10935428None...",shape=box];
	_JOIN_10935428 -> 10935460;
	_JOIN_10950977 [label="_JOIN_10950977None...",shape=box];
	_JOIN_10950977 -> _JOIN_10950979;
	_JOIN_10951725 [label="_JOIN_10951725None...",shape=box];
	_JOIN_10951725 -> _JOIN_10951726;
	10983145 [label="10983145  register int cbv_46, cbv_47;...",shape=box];
	ForLoop10951723 [label="ForLoop10951723  for (k=kt; k<=cbv_90; k=k+1) ...",shape=box];
	ForLoop10951723 -> 10951722;
	ForLoop10951723 -> _JOIN_10951723;
	_JOIN_10942715 [label="_JOIN_10942715None...",shape=box];
	_JOIN_10942715 -> 10942747;
	10985728 [label="10985728  register int cbv_67, cbv_68;...",shape=box];
	_JOIN_10942288 [label="_JOIN_10942288None...",shape=box];
	_JOIN_10942288 -> 10986466;
	10934766 [label="10934766  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	ForLoop10937083 [label="ForLoop10937083  for (j=jj; j<=cbv_27; j=j+6) {...",shape=box];
	ForLoop10937083 -> 10936901;
	ForLoop10937083 -> _JOIN_10937083;
	ForLoop10939165 [label="ForLoop10939165  for (j=jj; j<=cbv_45; j=j+6) {...",shape=box];
	ForLoop10939165 -> 10938983;
	ForLoop10939165 -> _JOIN_10939165;
	ForLoop10939512 [label="ForLoop10939512  for (j=jj; j<=cbv_48; j=j+6) {...",shape=box];
	ForLoop10939512 -> 10939330;
	ForLoop10939512 -> _JOIN_10939512;
	ForLoop10941327 [label="ForLoop10941327  for (j=cbv_64; j<=cbv_65; j=j+1) ...",shape=box];
	ForLoop10941327 -> 10941326;
	ForLoop10941327 -> _JOIN_10941327;
	_JOIN_10937430 [label="_JOIN_10937430None...",shape=box];
	_JOIN_10937430 -> 10981300;
	_JOIN_10941594 [label="_JOIN_10941594None...",shape=box];
	_JOIN_10941594 -> 10985728;
	10941673 [label="10941673  tmp[(i+20)]=tmp[(i+20)]+A[(i+20)*ny+j]*x_copy[(j-jj)];...",shape=box];
	10941673 -> _JOIN_10941674;
	10938550 [label="10938550  tmp[(i+11)]=tmp[(i+11)]+A[(i+11)*ny+j]*x_copy[(j-jj)];...",shape=box];
	10938550 -> _JOIN_10938551;
	ForLoop10937163 [label="ForLoop10937163  for (j=cbv_28; j<=cbv_29; j=j+1) ...",shape=box];
	ForLoop10937163 -> 10937162;
	ForLoop10937163 -> _JOIN_10937163;
	_JOIN_10935695 [label="_JOIN_10935695None...",shape=box];
	_JOIN_10935695 -> 10979455;
	10937542 [label="10937542  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	ForLoop10935348 [label="ForLoop10935348  for (j=jj; j<=cbv_12; j=j+6) {...",shape=box];
	ForLoop10935348 -> 10935166;
	ForLoop10935348 -> _JOIN_10935348;
	10940665 [label="10940665  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	10984252 [label="10984252  register int cbv_55, cbv_56;...",shape=box];
	ForLoop10939592 [label="ForLoop10939592  for (j=cbv_49; j<=cbv_50; j=j+1) ...",shape=box];
	ForLoop10939592 -> 10939591;
	ForLoop10939592 -> _JOIN_10939592;
	ForLoop10819796 [label="ForLoop10819796  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop10819796 -> 10819795;
	ForLoop10819796 -> _JOIN_10819796;
	10939624 [label="10939624  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	_JOIN_10939165 [label="_JOIN_10939165None...",shape=box];
	_JOIN_10939165 -> 10983145;
	10940979 [label="10940979  tmp[(i+18)]=tmp[(i+18)]+A[(i+18)*ny+j]*x_copy[(j-jj)];...",shape=box];
	10940979 -> _JOIN_10940980;
	10983883 [label="10983883  register int cbv_52, cbv_53;...",shape=box];
	10882767 [label="10882767  tmp[it]=tmp[it]+A[it*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_10940900 [label="_JOIN_10940900None...",shape=box];
	_JOIN_10940900 -> 10984990;
	ForLoop10936042 [label="ForLoop10936042  for (j=jj; j<=cbv_18; j=j+6) {...",shape=box];
	ForLoop10936042 -> 10935860;
	ForLoop10936042 -> _JOIN_10936042;
	10978077 [label="10978077  register int cbv_5;...",shape=box];
	10937942 [label="10937942  tmp[(i+10)]=tmp[(i+10)]+A[(i+10)*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop10951408 [label="ForLoop10951408  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) ...",shape=box];
	ForLoop10951408 -> ForLoop10951407;
	ForLoop10951408 -> _JOIN_10951408;
	10819617 [label="10819617  y[i]=0.0;...",shape=box];
	ForLoop10938898 [label="ForLoop10938898  for (j=cbv_43; j<=cbv_44; j=j+1) ...",shape=box];
	ForLoop10938898 -> 10938897;
	ForLoop10938898 -> _JOIN_10938898;
	10984990 [label="10984990  register int cbv_61, cbv_62;...",shape=box];
	10935166 [label="10935166  tmp[(i+2)]=tmp[(i+2)]+A[(i+2)*ny+j]*x_copy[(j-jj)];...",shape=box];
	10986835 [label="10986835  register int cbv_76, cbv_77;...",shape=box];
	10937595 [label="10937595  tmp[(i+9)]=tmp[(i+9)]+A[(i+9)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_10942368 [label="_JOIN_10942368None...",shape=box];
	_JOIN_10942368 -> 10942400;
	ForLoop10951407 [label="ForLoop10951407  for (jj=jjj; jj<=min(ny-1,jjj+1536); jj=jj+512) {...",shape=box];
	ForLoop10951407 -> 10951152;
	ForLoop10951407 -> _JOIN_10951407;
	_JOIN_10937857 [label="_JOIN_10937857None...",shape=box];
	_JOIN_10937857 -> 10937889;
	_JOIN_10943414 [label="_JOIN_10943414None...",shape=box];
	_JOIN_10943414 -> ForLoop10950977;
	ForLoop10938471 [label="ForLoop10938471  for (j=jj; j<=cbv_39; j=j+6) {...",shape=box];
	ForLoop10938471 -> 10938289;
	ForLoop10938471 -> _JOIN_10938471;
	10935080 [label="10935080  tmp[(i+1)]=tmp[(i+1)]+A[(i+1)*ny+j]*x_copy[(j-jj)];...",shape=box];
	10935080 -> _JOIN_10935081;
	_JOIN_10936736 [label="_JOIN_10936736None...",shape=box];
	_JOIN_10936736 -> 10980562;
	_JOIN_10935348 [label="_JOIN_10935348None...",shape=box];
	_JOIN_10935348 -> 10979086;
	_JOIN_10939512 [label="_JOIN_10939512None...",shape=box];
	_JOIN_10939512 -> 10983514;
	10995716 [label="10995716  register int cbv_89;...",shape=box];
	ForLoop10936816 [label="ForLoop10936816  for (j=cbv_25; j<=cbv_26; j=j+1) ...",shape=box];
	ForLoop10936816 -> 10936815;
	ForLoop10936816 -> _JOIN_10936816;
	_JOIN_10822404 [label="_JOIN_10822404None...",shape=box];
	ForLoop10940553 [label="ForLoop10940553  for (j=jj; j<=cbv_57; j=j+6) {...",shape=box];
	ForLoop10940553 -> 10940371;
	ForLoop10940553 -> _JOIN_10940553;
	ForLoop10942288 [label="ForLoop10942288  for (j=jj; j<=cbv_72; j=j+6) {...",shape=box];
	ForLoop10942288 -> 10942106;
	ForLoop10942288 -> _JOIN_10942288;
	10982407 [label="10982407  register int cbv_40, cbv_41;...",shape=box];
	10942400 [label="10942400  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	ForLoop10951333 [label="ForLoop10951333  for (j=jj; j<=cbv_86; j=j+6) {...",shape=box];
	ForLoop10951333 -> 10951196;
	ForLoop10951333 -> _JOIN_10951333;
	10936554 [label="10936554  tmp[(i+6)]=tmp[(i+6)]+A[(i+6)*ny+j]*x_copy[(j-jj)];...",shape=box];
	10995766 [label="10995766  register int cbv_90;...",shape=box];
	ForLoop10934734 [label="ForLoop10934734  for (j=cbv_7; j<=cbv_8; j=j+1) ...",shape=box];
	ForLoop10934734 -> 10934733;
	ForLoop10934734 -> _JOIN_10934734;
	10981669 [label="10981669  register int cbv_34, cbv_35;...",shape=box];
	_JOIN_10940553 [label="_JOIN_10940553None...",shape=box];
	_JOIN_10940553 -> 10984621;
	10987204 [label="10987204  register int cbv_79, cbv_80;...",shape=box];
	_JOIN_10941941 [label="_JOIN_10941941None...",shape=box];
	_JOIN_10941941 -> 10986097;
	10938236 [label="10938236  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	10979086 [label="10979086  register int cbv_13, cbv_14;...",shape=box];
	ForLoop10935081 [label="ForLoop10935081  for (j=cbv_10; j<=cbv_11; j=j+1) ...",shape=box];
	ForLoop10935081 -> 10935080;
	ForLoop10935081 -> _JOIN_10935081;
	10941359 [label="10941359  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	10986097 [label="10986097  register int cbv_70, cbv_71;...",shape=box];
	10938930 [label="10938930  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	_JOIN_10935081 [label="_JOIN_10935081None...",shape=box];
	_JOIN_10935081 -> 10935113;
	_JOIN_10951728 [label="_JOIN_10951728None...",shape=box];
	_JOIN_10951728 -> _JOIN_10822404;
	_JOIN_10937510 [label="_JOIN_10937510None...",shape=box];
	_JOIN_10937510 -> 10937542;
	10934819 [label="10934819  tmp[(i+1)]=tmp[(i+1)]+A[(i+1)*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop10951726 [label="ForLoop10951726  for (kkk=0; kkk<=ny-1; kkk=kkk+2048) ...",shape=box];
	ForLoop10951726 -> ForLoop10951725;
	ForLoop10951726 -> _JOIN_10951726;
	10942020 [label="10942020  tmp[(i+21)]=tmp[(i+21)]+A[(i+21)*ny+j]*x_copy[(j-jj)];...",shape=box];
	10942020 -> _JOIN_10942021;
	10995427 [label="10995427  register int cbv_87, cbv_88;...",shape=box];
	_JOIN_10943409 [label="_JOIN_10943409None...",shape=box];
	_JOIN_10943409 -> _JOIN_10943412;
	ForLoop10935001 [label="ForLoop10935001  for (j=jj; j<=cbv_9; j=j+6) {...",shape=box];
	ForLoop10935001 -> 10934819;
	ForLoop10935001 -> _JOIN_10935001;
	ForLoop10936469 [label="ForLoop10936469  for (j=cbv_22; j<=cbv_23; j=j+1) ...",shape=box];
	ForLoop10936469 -> 10936468;
	ForLoop10936469 -> _JOIN_10936469;
	_JOIN_10942982 [label="_JOIN_10942982None...",shape=box];
	_JOIN_10942982 -> 10987204;
	_JOIN_10951333 [label="_JOIN_10951333None...",shape=box];
	_JOIN_10951333 -> 10995427;
	_JOIN_10942635 [label="_JOIN_10942635None...",shape=box];
	_JOIN_10942635 -> 10986835;
	10939330 [label="10939330  tmp[(i+14)]=tmp[(i+14)]+A[(i+14)*ny+j]*x_copy[(j-jj)];...",shape=box];
	10938983 [label="10938983  tmp[(i+13)]=tmp[(i+13)]+A[(i+13)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_10935001 [label="_JOIN_10935001None...",shape=box];
	_JOIN_10935001 -> 10978717;
	ForLoop10943329 [label="ForLoop10943329  for (j=jj; j<=cbv_81; j=j+6) {...",shape=box];
	ForLoop10943329 -> 10943147;
	ForLoop10943329 -> _JOIN_10943329;
	ForLoop10941941 [label="ForLoop10941941  for (j=jj; j<=cbv_69; j=j+6) {...",shape=box];
	ForLoop10941941 -> 10941759;
	ForLoop10941941 -> _JOIN_10941941;
	10942714 [label="10942714  tmp[(i+23)]=tmp[(i+23)]+A[(i+23)*ny+j]*x_copy[(j-jj)];...",shape=box];
	10942714 -> _JOIN_10942715;
	10937162 [label="10937162  tmp[(i+7)]=tmp[(i+7)]+A[(i+7)*ny+j]*x_copy[(j-jj)];...",shape=box];
	10937162 -> _JOIN_10937163;
	10981300 [label="10981300  register int cbv_31, cbv_32;...",shape=box];
	ForLoop10936122 [label="ForLoop10936122  for (j=cbv_19; j<=cbv_20; j=j+1) ...",shape=box];
	ForLoop10936122 -> 10936121;
	ForLoop10936122 -> _JOIN_10936122;
	_JOIN_10884742 [label="_JOIN_10884742None...",shape=box];
	_JOIN_10884742 -> _JOIN_10828252;
	10951722 [label="10951722  y[k]=y[k]+A[i*ny+k]*tmp[i];...",shape=box];
	10951722 -> _JOIN_10951723;
	ForLoop10941594 [label="ForLoop10941594  for (j=jj; j<=cbv_66; j=j+6) {...",shape=box];
	ForLoop10941594 -> 10941412;
	ForLoop10941594 -> _JOIN_10941594;
	10985359 [label="10985359  register int cbv_64, cbv_65;...",shape=box];
	ForLoop10941674 [label="ForLoop10941674  for (j=cbv_67; j<=cbv_68; j=j+1) ...",shape=box];
	ForLoop10941674 -> 10941673;
	ForLoop10941674 -> _JOIN_10941674;
	ForLoop10951404 [label="ForLoop10951404  for (j=cbv_87; j<=cbv_88; j=j+1) ...",shape=box];
	ForLoop10951404 -> 10951403;
	ForLoop10951404 -> _JOIN_10951404;
	ForLoop10950975 [label="ForLoop10950975  for (kk=kkk; kk<=min(ny-1,kkk+2032); kk=kk+16) {...",shape=box];
	ForLoop10950975 -> 10994455;
	ForLoop10950975 -> _JOIN_10950975;
	ForLoop10828324 [label="ForLoop10828324  for (kk=kkk; kk<=min(ny-1,kkk+2032); kk=kk+16) {...",shape=box];
	ForLoop10828324 -> 10977844;
	ForLoop10828324 -> _JOIN_10828324;
	ForLoop10828325 [label="ForLoop10828325  for (kkk=0; kkk<=ny-1; kkk=kkk+2048) ...",shape=box];
	ForLoop10828325 -> ForLoop10828324;
	ForLoop10828325 -> _JOIN_10828325;
	ForLoop10828327 [label="ForLoop10828327  for (it=iii; it<=min(nx-1,iii+1023)-7; it=it+8) {...",shape=box];
	ForLoop10828327 -> 10828543;
	ForLoop10828327 -> _JOIN_10828327;
	ForLoop10937510 [label="ForLoop10937510  for (j=cbv_31; j<=cbv_32; j=j+1) ...",shape=box];
	ForLoop10937510 -> 10937509;
	ForLoop10937510 -> _JOIN_10937510;
	10942800 [label="10942800  tmp[(i+24)]=tmp[(i+24)]+A[(i+24)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 10819380;
	ForLoop10939939 [label="ForLoop10939939  for (j=cbv_52; j<=cbv_53; j=j+1) ...",shape=box];
	ForLoop10939939 -> 10939938;
	ForLoop10939939 -> _JOIN_10939939;
	ForLoop10938551 [label="ForLoop10938551  for (j=cbv_40; j<=cbv_41; j=j+1) ...",shape=box];
	ForLoop10938551 -> 10938550;
	ForLoop10938551 -> _JOIN_10938551;
	10938583 [label="10938583  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	10943094 [label="10943094  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	10950321 [label="10950321  y[k]=y[k]+A[i*ny+k]*tmp[i];...",shape=box];
	_JOIN_10936816 [label="_JOIN_10936816None...",shape=box];
	_JOIN_10936816 -> 10936848;
	10935427 [label="10935427  tmp[(i+2)]=tmp[(i+2)]+A[(i+2)*ny+j]*x_copy[(j-jj)];...",shape=box];
	10935427 -> _JOIN_10935428;
	10938636 [label="10938636  tmp[(i+12)]=tmp[(i+12)]+A[(i+12)*ny+j]*x_copy[(j-jj)];...",shape=box];
	10936815 [label="10936815  tmp[(i+6)]=tmp[(i+6)]+A[(i+6)*ny+j]*x_copy[(j-jj)];...",shape=box];
	10936815 -> _JOIN_10936816;
	_JOIN_10938204 [label="_JOIN_10938204None...",shape=box];
	_JOIN_10938204 -> 10938236;
	10979824 [label="10979824  register int cbv_19, cbv_20;...",shape=box];
	_JOIN_10943329 [label="_JOIN_10943329None...",shape=box];
	_JOIN_10943329 -> 10987573;
	_JOIN_10941674 [label="_JOIN_10941674None...",shape=box];
	_JOIN_10941674 -> 10941706;
	ForLoop10950283 [label="ForLoop10950283  for (kt=kk; kt<=cbv_84; kt=kt+8) {...",shape=box];
	ForLoop10950283 -> 10943485;
	ForLoop10950283 -> _JOIN_10950283;
	10937195 [label="10937195  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	10980562 [label="10980562  register int cbv_25, cbv_26;...",shape=box];
	_JOIN_10938124 [label="_JOIN_10938124None...",shape=box];
	_JOIN_10938124 -> 10982038;
	10940371 [label="10940371  tmp[(i+17)]=tmp[(i+17)]+A[(i+17)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_10940980 [label="_JOIN_10940980None...",shape=box];
	_JOIN_10940980 -> 10941012;
	_JOIN_10937777 [label="_JOIN_10937777None...",shape=box];
	_JOIN_10937777 -> 10981669;
	_JOIN_10950975 [label="_JOIN_10950975None...",shape=box];
	_JOIN_10950975 -> _JOIN_10950977;
	_JOIN_10937163 [label="_JOIN_10937163None...",shape=box];
	_JOIN_10937163 -> 10937195;
	ForLoop10951728 [label="ForLoop10951728  for (i=(min(nx-1,iii+1023))-(((min(nx-1,iii+1023))-(it)+1)%26)+1; i<=min(nx-1,iii+1023); i=i+1) {...",shape=box];
	ForLoop10951728 -> 10951090;
	ForLoop10951728 -> _JOIN_10951728;
	ForLoop10829404 [label="ForLoop10829404  for (k=kt; k<=cbv_5; k=k+1) {...",shape=box];
	ForLoop10829404 -> 10831839;
	ForLoop10829404 -> _JOIN_10829404;
	ForLoop10943062 [label="ForLoop10943062  for (j=cbv_79; j<=cbv_80; j=j+1) ...",shape=box];
	ForLoop10943062 -> 10943061;
	ForLoop10943062 -> _JOIN_10943062;
	ForLoop10935428 [label="ForLoop10935428  for (j=cbv_13; j<=cbv_14; j=j+1) ...",shape=box];
	ForLoop10935428 -> 10935427;
	ForLoop10935428 -> _JOIN_10935428;
	_JOIN_10934663 [label="_JOIN_10934663None...",shape=box];
	_JOIN_10934663 -> 10978348;
	10936901 [label="10936901  tmp[(i+7)]=tmp[(i+7)]+A[(i+7)*ny+j]*x_copy[(j-jj)];...",shape=box];
	10819380 [label="10819380  int i;...",shape=box];
	10951090 [label="10951090  tmp[i]=0;...",shape=box];
	10951090 -> ForLoop10951408;
	10941759 [label="10941759  tmp[(i+21)]=tmp[(i+21)]+A[(i+21)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_10951726 [label="_JOIN_10951726None...",shape=box];
	_JOIN_10951726 -> _JOIN_10951728;
	10941065 [label="10941065  tmp[(i+19)]=tmp[(i+19)]+A[(i+19)*ny+j]*x_copy[(j-jj)];...",shape=box];
	10935860 [label="10935860  tmp[(i+4)]=tmp[(i+4)]+A[(i+4)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_10939939 [label="_JOIN_10939939None...",shape=box];
	_JOIN_10939939 -> 10939971;
	10986466 [label="10986466  register int cbv_73, cbv_74;...",shape=box];
	_JOIN_10828253 [label="_JOIN_10828253None...",shape=box];
	_JOIN_10828253 -> ForLoop10828325;
	10978717 [label="10978717  register int cbv_10, cbv_11;...",shape=box];
	ForLoop10828252 [label="ForLoop10828252  for (jj=jjj; jj<=min(ny-1,jjj+1536); jj=jj+512) {...",shape=box];
	ForLoop10828252 -> 10828208;
	ForLoop10828252 -> _JOIN_10828252;
	ForLoop10828253 [label="ForLoop10828253  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) ...",shape=box];
	ForLoop10828253 -> ForLoop10828252;
	ForLoop10828253 -> _JOIN_10828253;
	10934526 [label="10934526  tmp[i]=tmp[i]+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_10950973 [label="_JOIN_10950973None...",shape=box];
	_JOIN_10950973 -> _JOIN_10950975;
	10937509 [label="10937509  tmp[(i+8)]=tmp[(i+8)]+A[(i+8)*ny+j]*x_copy[(j-jj)];...",shape=box];
	10937509 -> _JOIN_10937510;
	10937856 [label="10937856  tmp[(i+9)]=tmp[(i+9)]+A[(i+9)*ny+j]*x_copy[(j-jj)];...",shape=box];
	10937856 -> _JOIN_10937857;
	10934482 [label="10934482  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	ForLoop10829365 [label="ForLoop10829365  for (kt=kk; kt<=cbv_4; kt=kt+8) {...",shape=box];
	ForLoop10829365 -> 10829685;
	ForLoop10829365 -> _JOIN_10829365;
	_JOIN_10936042 [label="_JOIN_10936042None...",shape=box];
	_JOIN_10936042 -> 10979824;
	ForLoop10942982 [label="ForLoop10942982  for (j=jj; j<=cbv_78; j=j+6) {...",shape=box];
	ForLoop10942982 -> 10942800;
	ForLoop10942982 -> _JOIN_10942982;
	ForLoop10942021 [label="ForLoop10942021  for (j=cbv_70; j<=cbv_71; j=j+1) ...",shape=box];
	ForLoop10942021 -> 10942020;
	ForLoop10942021 -> _JOIN_10942021;
	ForLoop10938818 [label="ForLoop10938818  for (j=jj; j<=cbv_42; j=j+6) {...",shape=box];
	ForLoop10938818 -> 10938636;
	ForLoop10938818 -> _JOIN_10938818;
	_JOIN_10951723 [label="_JOIN_10951723None...",shape=box];
	_JOIN_10951723 -> _JOIN_10951725;
	ForLoop10939245 [label="ForLoop10939245  for (j=cbv_46; j<=cbv_47; j=j+1) ...",shape=box];
	ForLoop10939245 -> 10939244;
	ForLoop10939245 -> _JOIN_10939245;
	ForLoop10884388 [label="ForLoop10884388  for (j=jj; j<=cbv_1; j=j+6) {...",shape=box];
	ForLoop10884388 -> 10882767;
	ForLoop10884388 -> _JOIN_10884388;
	10951403 [label="10951403  tmp[i]=tmp[i]+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	10951403 -> _JOIN_10951404;
	_JOIN_10829365 [label="_JOIN_10829365None...",shape=box];
	_JOIN_10829365 -> 10978077;
	10936468 [label="10936468  tmp[(i+5)]=tmp[(i+5)]+A[(i+5)*ny+j]*x_copy[(j-jj)];...",shape=box];
	10936468 -> _JOIN_10936469;
	10982776 [label="10982776  register int cbv_43, cbv_44;...",shape=box];
	10939591 [label="10939591  tmp[(i+14)]=tmp[(i+14)]+A[(i+14)*ny+j]*x_copy[(j-jj)];...",shape=box];
	10939591 -> _JOIN_10939592;
	_JOIN_10829404 [label="_JOIN_10829404None...",shape=box];
	_JOIN_10829404 -> _JOIN_10828324;
	_JOIN_10942021 [label="_JOIN_10942021None...",shape=box];
	_JOIN_10942021 -> 10942053;
	ForLoop10935695 [label="ForLoop10935695  for (j=jj; j<=cbv_15; j=j+6) {...",shape=box];
	ForLoop10935695 -> 10935513;
	ForLoop10935695 -> _JOIN_10935695;
	10938203 [label="10938203  tmp[(i+10)]=tmp[(i+10)]+A[(i+10)*ny+j]*x_copy[(j-jj)];...",shape=box];
	10938203 -> _JOIN_10938204;
	_JOIN_10938471 [label="_JOIN_10938471None...",shape=box];
	_JOIN_10938471 -> 10982407;
	ForLoop10951725 [label="ForLoop10951725  for (kk=kkk; kk<=min(ny-1,kkk+2032); kk=kk+16) {...",shape=box];
	ForLoop10951725 -> 10995716;
	ForLoop10951725 -> _JOIN_10951725;
	_JOIN_10935775 [label="_JOIN_10935775None...",shape=box];
	_JOIN_10935775 -> 10935807;
	ForLoop10934663 [label="ForLoop10934663  for (j=jj; j<=cbv_6; j=j+6) {...",shape=box];
	ForLoop10934663 -> 10934526;
	ForLoop10934663 -> _JOIN_10934663;
	_JOIN_10950979 [label="_JOIN_10950979None...",shape=box];
	_JOIN_10950979 -> ForLoop10951728;
	10943061 [label="10943061  tmp[(i+24)]=tmp[(i+24)]+A[(i+24)*ny+j]*x_copy[(j-jj)];...",shape=box];
	10943061 -> _JOIN_10943062;
	10938897 [label="10938897  tmp[(i+12)]=tmp[(i+12)]+A[(i+12)*ny+j]*x_copy[(j-jj)];...",shape=box];
	10938897 -> _JOIN_10938898;
	10939277 [label="10939277  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	_JOIN_10941247 [label="_JOIN_10941247None...",shape=box];
	_JOIN_10941247 -> 10985359;
	_JOIN_10828252 [label="_JOIN_10828252None...",shape=box];
	_JOIN_10828252 -> _JOIN_10828253;
	_JOIN_10819796 [label="_JOIN_10819796None...",shape=box];
	_JOIN_10819796 -> 10826484;
	10994455 [label="10994455  register int cbv_84;...",shape=box];
	_JOIN_10939859 [label="_JOIN_10939859None...",shape=box];
	_JOIN_10939859 -> 10983883;
	10941012 [label="10941012  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	10826484 [label="10826484  double x_copy[512];...",shape=box];
	10940718 [label="10940718  tmp[(i+18)]=tmp[(i+18)]+A[(i+18)*ny+j]*x_copy[(j-jj)];...",shape=box];
	10828208 [label="10828208  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	ForLoop10943409 [label="ForLoop10943409  for (j=cbv_82; j<=cbv_83; j=j+1) ...",shape=box];
	ForLoop10943409 -> 10943408;
	ForLoop10943409 -> _JOIN_10943409;
	10939971 [label="10939971  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	10940285 [label="10940285  tmp[(i+16)]=tmp[(i+16)]+A[(i+16)*ny+j]*x_copy[(j-jj)];...",shape=box];
	10940285 -> _JOIN_10940286;
	10934733 [label="10934733  tmp[i]=tmp[i]+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	10934733 -> _JOIN_10934734;
	ForLoop10937430 [label="ForLoop10937430  for (j=jj; j<=cbv_30; j=j+6) {...",shape=box];
	ForLoop10937430 -> 10937248;
	ForLoop10937430 -> _JOIN_10937430;
	ForLoop10938204 [label="ForLoop10938204  for (j=cbv_37; j<=cbv_38; j=j+1) ...",shape=box];
	ForLoop10938204 -> 10938203;
	ForLoop10938204 -> _JOIN_10938204;
	10936207 [label="10936207  tmp[(i+5)]=tmp[(i+5)]+A[(i+5)*ny+j]*x_copy[(j-jj)];...",shape=box];
	10829685 [label="10829685  y[kt]=y[kt]+A[it*ny+kt]*tmp[it];...",shape=box];
	ForLoop10884742 [label="ForLoop10884742  for (j=cbv_2; j<=cbv_3; j=j+1) {...",shape=box];
	ForLoop10884742 -> 10884516;
	ForLoop10884742 -> _JOIN_10884742;
	ForLoop10822404 [label="ForLoop10822404  for (iii=0; iii<=nx-1; iii=iii+1024) {...",shape=box];
	ForLoop10822404 -> ForLoop10828327;
	ForLoop10822404 -> _JOIN_10822404;
	10939677 [label="10939677  tmp[(i+15)]=tmp[(i+15)]+A[(i+15)*ny+j]*x_copy[(j-jj)];...",shape=box];
	10943408 [label="10943408  tmp[(i+25)]=tmp[(i+25)]+A[(i+25)*ny+j]*x_copy[(j-jj)];...",shape=box];
	10943408 -> _JOIN_10943409;
	ForLoop10938124 [label="ForLoop10938124  for (j=jj; j<=cbv_36; j=j+6) {...",shape=box];
	ForLoop10938124 -> 10937942;
	ForLoop10938124 -> _JOIN_10938124;
	_JOIN_10937083 [label="_JOIN_10937083None...",shape=box];
	_JOIN_10937083 -> 10980931;
	10977844 [label="10977844  register int cbv_4;...",shape=box];
	ForLoop10942368 [label="ForLoop10942368  for (j=cbv_73; j<=cbv_74; j=j+1) ...",shape=box];
	ForLoop10942368 -> 10942367;
	ForLoop10942368 -> _JOIN_10942368;
	10936121 [label="10936121  tmp[(i+4)]=tmp[(i+4)]+A[(i+4)*ny+j]*x_copy[(j-jj)];...",shape=box];
	10936121 -> _JOIN_10936122;
	ForLoop10940900 [label="ForLoop10940900  for (j=jj; j<=cbv_60; j=j+6) {...",shape=box];
	ForLoop10940900 -> 10940718;
	ForLoop10940900 -> _JOIN_10940900;
	_JOIN_10936469 [label="_JOIN_10936469None...",shape=box];
	_JOIN_10936469 -> 10936501;
	_JOIN_10939245 [label="_JOIN_10939245None...",shape=box];
	_JOIN_10939245 -> 10939277;
	_JOIN_10884388 [label="_JOIN_10884388None...",shape=box];
	_JOIN_10884388 -> 10975658;
	10935113 [label="10935113  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	ForLoop10951684 [label="ForLoop10951684  for (kt=kk; kt<=cbv_89; kt=kt+8) {...",shape=box];
	ForLoop10951684 -> 10951479;
	ForLoop10951684 -> _JOIN_10951684;
	_JOIN_10951684 [label="_JOIN_10951684None...",shape=box];
	_JOIN_10951684 -> 10995766;
	10940024 [label="10940024  tmp[(i+16)]=tmp[(i+16)]+A[(i+16)*ny+j]*x_copy[(j-jj)];...",shape=box];
	10942747 [label="10942747  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	10819795 [label="10819795  y[i]=0.0;...",shape=box];
	10819795 -> _JOIN_10819796;
	10903808 [label="10903808  int i;...",shape=box];
	10903808 -> ForLoop10950979;
	10939244 [label="10939244  tmp[(i+13)]=tmp[(i+13)]+A[(i+13)*ny+j]*x_copy[(j-jj)];...",shape=box];
	10939244 -> _JOIN_10939245;
	10942106 [label="10942106  tmp[(i+22)]=tmp[(i+22)]+A[(i+22)*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop10943412 [label="ForLoop10943412  for (jj=jjj; jj<=min(ny-1,jjj+1536); jj=jj+512) {...",shape=box];
	ForLoop10943412 -> 10934482;
	ForLoop10943412 -> _JOIN_10943412;
	10941412 [label="10941412  tmp[(i+20)]=tmp[(i+20)]+A[(i+20)*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop10942715 [label="ForLoop10942715  for (j=cbv_76; j<=cbv_77; j=j+1) ...",shape=box];
	ForLoop10942715 -> 10942714;
	ForLoop10942715 -> _JOIN_10942715;
	ForLoop10950979 [label="ForLoop10950979  for (i=it; i<=min(nx-1,iii+1023)-25; i=i+26) {...",shape=box];
	ForLoexpected=9369846271501.798828
actual=9369846271501.798828
op10950979 -> 10934195;
	ForLoop10950979 -> _JOIN_10950979;
	ForLoop10943414 [label="ForLoop10943414  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop10943414 -> ForLoop10943412;
	ForLoop10943414 -> _JOIN_10943414;
	ForLoop10940206 [label="ForLoop10940206  for (j=jj; j<=cbv_54; j=j+6) {...",shape=box];
	ForLoop10940206 -> 10940024;
	ForLoop10940206 -> _JOIN_10940206;
	_JOIN_10943412 [label="_JOIN_10943412None...",shape=box];
	_JOIN_10943412 -> _JOIN_10943414;
	ForLoop10950977 [label="ForLoop10950977  for (kkk=0; kkk<=ny-1; kkk=kkk+2048) {...",shape=box];
	ForLoop10950977 -> ForLoop10950975;
	ForLoop10950977 -> _JOIN_10950977;
	_JOIN_10819727 [label="_JOIN_10819727None...",shape=box];
	_JOIN_10819727 -> 10819954;
	_JOIN_10828324 [label="_JOIN_10828324None...",shape=box];
	_JOIN_10828324 -> _JOIN_10828325;
	_JOIN_10828325 [label="_JOIN_10828325None...",shape=box];
	_JOIN_10828325 -> _JOIN_10828327;
	ForLoop10950973 [label="ForLoop10950973  for (k=kt; k<=cbv_85; k=k+1) {...",shape=box];
	ForLoop10950973 -> 10950321;
	ForLoop10950973 -> _JOIN_10950973;
	_JOIN_10828327 [label="_JOIN_10828327None...",shape=box];
	_JOIN_10828327 -> 10903808;
	10938289 [label="10938289  tmp[(i+11)]=tmp[(i+11)]+A[(i+11)*ny+j]*x_copy[(j-jj)];...",shape=box];
	10943147 [label="10943147  tmp[(i+25)]=tmp[(i+25)]+A[(i+25)*ny+j]*x_copy[(j-jj)];...",shape=box];
	10936848 [label="10936848  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	10983514 [label="10983514  register int cbv_49, cbv_50;...",shape=box];
	10942453 [label="10942453  tmp[(i+23)]=tmp[(i+23)]+A[(i+23)*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop10937777 [label="ForLoop10937777  for (j=jj; j<=cbv_33; j=j+6) {...",shape=box];
	ForLoop10937777 -> 10937595;
	ForLoop10937777 -> _JOIN_10937777;
	_JOIN_10940286 [label="_JOIN_10940286None...",shape=box];
	_JOIN_10940286 -> 10940318;
	10980931 [label="10980931  register int cbv_28, cbv_29;...",shape=box];
	10987573 [label="10987573  register int cbv_82, cbv_83;...",shape=box];
	_JOIN_10950283 [label="_JOIN_10950283None...",shape=box];
	_JOIN_10950283 -> 10995156;
	10935513 [label="10935513  tmp[(i+3)]=tmp[(i+3)]+A[(i+3)*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop10940286 [label="ForLoop10940286  for (j=cbv_55; j<=cbv_56; j=j+1) ...",shape=box];
	ForLoop10940286 -> 10940285;
	ForLoop10940286 -> _JOIN_10940286;
	10939938 [label="10939938  tmp[(i+15)]=tmp[(i+15)]+A[(i+15)*ny+j]*x_copy[(j-jj)];...",shape=box];
	10939938 -> _JOIN_10939939;
	10995156 [label="10995156  register int cbv_85;...",shape=box];
	10884516 [label="10884516  tmp[it]=tmp[it]+A[it*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_10940206 [label="_JOIN_10940206None...",shape=box];
	_JOIN_10940206 -> 10984252;
	_JOIN_10941327 [label="_JOIN_10941327None...",shape=box];
	_JOIN_10941327 -> 10941359;
	10942367 [label="10942367  tmp[(i+22)]=tmp[(i+22)]+A[(i+22)*ny+j]*x_copy[(j-jj)];...",shape=box];
	10942367 -> _JOIN_10942368;
	10943485 [label="10943485  y[kt]=y[kt]+A[i*ny+kt]*tmp[i];...",shape=box];
	_JOIN_10936389 [label="_JOIN_10936389None...",shape=box];
	_JOIN_10936389 -> 10980193;
	10975658 [label="10975658  register int cbv_2, cbv_3;...",shape=box];

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest50.exe __orio_perftest50.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest50.exe  
{'[0, 6, 1, 5, 6, 6, 1, 0, 12, 25, 5, 0, 1, 0, 1, 0, 1, 1]' : 0.10067}
{'[0, 6, 1, 5, 6, 6, 1, 0, 12, 25, 5, 0, 1, 0, 1, 0, 1, 1]' : 0.100391}
{'[0, 6, 1, 5, 6, 6, 1, 0, 12, 25, 5, 0, 1, 0, 1, 0, 1, 1]' : 0.100315}
{'[0, 6, 1, 5, 6, 6, 1, 0, 12, 25, 5, 0, 1, 0, 1, 0, 1, 1]' : 0.10043}
{'[0, 6, 1, 5, 6, 6, 1, 0, 12, 25, 5, 0, 1, 0, 1, 0, 1, 1]' : 0.100326}
{'[0, 6, 1, 5, 6, 6, 1, 0, 12, 25, 5, 0, 1, 0, 1, 0, 1, 1]' : 0.100623}
{'[0, 6, 1, 5, 6, 6, 1, 0, 12, 25, 5, 0, 1, 0, 1, 0, 1, 1]' : 0.100179}
{'[0, 6, 1, 5, 6, 6, 1, 0, 12, 25, 5, 0, 1, 0, 1, 0, 1, 1]' : 0.100123}
{'[0, 6, 1, 5, 6, 6, 1, 0, 12, 25, 5, 0, 1, 0, 1, 0, 1, 1]' : 0.100361}
{'[0, 6, 1, 5, 6, 6, 1, 0, 12, 25, 5, 0, 1, 0, 1, 0, 1, 1]' : 0.100319}
{'[0, 6, 1, 5, 6, 6, 1, 0, 12, 25, 5, 0, 1, 0, 1, 0, 1, 1]' : 0.100259}
{'[0, 6, 1, 5, 6, 6, 1, 0, 12, 25, 5, 0, 1, 0, 1, 0, 1, 1]' : 0.100231}
{'[0, 6, 1, 5, 6, 6, 1, 0, 12, 25, 5, 0, 1, 0, 1, 0, 1, 1]' : 0.100384}
{'[0, 6, 1, 5, 6, 6, 1, 0, 12, 25, 5, 0, 1, 0, 1, 0, 1, 1]' : 0.101309}
{'[0, 6, 1, 5, 6, 6, 1, 0, 12, 25, 5, 0, 1, 0, 1, 0, 1, 1]' : 0.100324}
{'[0, 6, 1, 5, 6, 6, 1, 0, 12, 25, 5, 0, 1, 0, 1, 0, 1, 1]' : 0.100342}
{'[0, 6, 1, 5, 6, 6, 1, 0, 12, 25, 5, 0, 1, 0, 1, 0, 1, 1]' : 0.10031}
{'[0, 6, 1, 5, 6, 6, 1, 0, 12, 25, 5, 0, 1, 0, 1, 0, 1, 1]' : 0.100339}
{'[0, 6, 1, 5, 6, 6, 1, 0, 12, 25, 5, 0, 1, 0, 1, 0, 1, 1]' : 0.100247}
{'[0, 6, 1, 5, 6, 6, 1, 0, 12, 25, 5, 0, 1, 0, 1, 0, 1, 1]' : 0.100219}
{'[0, 6, 1, 5, 6, 6, 1, 0, 12, 25, 5, 0, 1, 0, 1, 0, 1, 1]' : 0.100643}
{'[0, 6, 1, 5, 6, 6, 1, 0, 12, 25, 5, 0, 1, 0, 1, 0, 1, 1]' : 0.100385}
{'[0, 6, 1, 5, 6, 6, 1, 0, 12, 25, 5, 0, 1, 0, 1, 0, 1, 1]' : 0.100302}
{'[0, 6, 1, 5, 6, 6, 1, 0, 12, 25, 5, 0, 1, 0, 1, 0, 1, 1]' : 0.100428}
{'[0, 6, 1, 5, 6, 6, 1, 0, 12, 25, 5, 0, 1, 0, 1, 0, 1, 1]' : 0.100328}
{'[0, 6, 1, 5, 6, 6, 1, 0, 12, 25, 5, 0, 1, 0, 1, 0, 1, 1]' : 0.100414}
{'[0, 6, 1, 5, 6, 6, 1, 0, 12, 25, 5, 0, 1, 0, 1, 0, 1, 1]' : 0.100372}
{'[0, 6, 1, 5, 6, 6, 1, 0, 12, 25, 5, 0, 1, 0, 1, 0, 1, 1]' : 0.100269}
{'[0, 6, 1, 5, 6, 6, 1, 0, 12, 25, 5, 0, 1, 0, 1, 0, 1, 1]' : 0.100263}
{'[0, 6, 1, 5, 6, 6, 1, 0, 12, 25, 5, 0, 1, 0, 1, 0, 1, 1]' : 0.100304}

out:
 ["{'[0, 6, 1, 5, 6, 6, 1, 0, 12, 25, 5, 0, 1, 0, 1, 0, 1, 1]' : 0.10067}", "{'[0, 6, 1, 5, 6, 6, 1, 0, 12, 25, 5, 0, 1, 0, 1, 0, 1, 1]' : 0.100391}", "{'[0, 6, 1, 5, 6, 6, 1, 0, 12, 25, 5, 0, 1, 0, 1, 0, 1, 1]' : 0.100315}", "{'[0, 6, 1, 5, 6, 6, 1, 0, 12, 25, 5, 0, 1, 0, 1, 0, 1, 1]' : 0.10043}", "{'[0, 6, 1, 5, 6, 6, 1, 0, 12, 25, 5, 0, 1, 0, 1, 0, 1, 1]' : 0.100326}", "{'[0, 6, 1, 5, 6, 6, 1, 0, 12, 25, 5, 0, 1, 0, 1, 0, 1, 1]' : 0.100623}", "{'[0, 6, 1, 5, 6, 6, 1, 0, 12, 25, 5, 0, 1, 0, 1, 0, 1, 1]' : 0.100179}", "{'[0, 6, 1, 5, 6, 6, 1, 0, 12, 25, 5, 0, 1, 0, 1, 0, 1, 1]' : 0.100123}", "{'[0, 6, 1, 5, 6, 6, 1, 0, 12, 25, 5, 0, 1, 0, 1, 0, 1, 1]' : 0.100361}", "{'[0, 6, 1, 5, 6, 6, 1, 0, 12, 25, 5, 0, 1, 0, 1, 0, 1, 1]' : 0.100319}", "{'[0, 6, 1, 5, 6, 6, 1, 0, 12, 25, 5, 0, 1, 0, 1, 0, 1, 1]' : 0.100259}", "{'[0, 6, 1, 5, 6, 6, 1, 0, 12, 25, 5, 0, 1, 0, 1, 0, 1, 1]' : 0.100231}", "{'[0, 6, 1, 5, 6, 6, 1, 0, 12, 25, 5, 0, 1, 0, 1, 0, 1, 1]' : 0.100384}", "{'[0, 6, 1, 5, 6, 6, 1, 0, 12, 25, 5, 0, 1, 0, 1, 0, 1, 1]' : 0.101309}", "{'[0, 6, 1, 5, 6, 6, 1, 0, 12, 25, 5, 0, 1, 0, 1, 0, 1, 1]' : 0.100324}", "{'[0, 6, 1, 5, 6, 6, 1, 0, 12, 25, 5, 0, 1, 0, 1, 0, 1, 1]' : 0.100342}", "{'[0, 6, 1, 5, 6, 6, 1, 0, 12, 25, 5, 0, 1, 0, 1, 0, 1, 1]' : 0.10031}", "{'[0, 6, 1, 5, 6, 6, 1, 0, 12, 25, 5, 0, 1, 0, 1, 0, 1, 1]' : 0.100339}", "{'[0, 6, 1, 5, 6, 6, 1, 0, 12, 25, 5, 0, 1, 0, 1, 0, 1, 1]' : 0.100247}", "{'[0, 6, 1, 5, 6, 6, 1, 0, 12, 25, 5, 0, 1, 0, 1, 0, 1, 1]' : 0.100219}", "{'[0, 6, 1, 5, 6, 6, 1, 0, 12, 25, 5, 0, 1, 0, 1, 0, 1, 1]' : 0.100643}", "{'[0, 6, 1, 5, 6, 6, 1, 0, 12, 25, 5, 0, 1, 0, 1, 0, 1, 1]' : 0.100385}", "{'[0, 6, 1, 5, 6, 6, 1, 0, 12, 25, 5, 0, 1, 0, 1, 0, 1, 1]' : 0.100302}", "{'[0, 6, 1, 5, 6, 6, 1, 0, 12, 25, 5, 0, 1, 0, 1, 0, 1, 1]' : 0.100428}", "{'[0, 6, 1, 5, 6, 6, 1, 0, 12, 25, 5, 0, 1, 0, 1, 0, 1, 1]' : 0.100328}", "{'[0, 6, 1, 5, 6, 6, 1, 0, 12, 25, 5, 0, 1, 0, 1, 0, 1, 1]' : 0.100414}", "{'[0, 6, 1, 5, 6, 6, 1, 0, 12, 25, 5, 0, 1, 0, 1, 0, 1, 1]' : 0.100372}", "{'[0, 6, 1, 5, 6, 6, 1, 0, 12, 25, 5, 0, 1, 0, 1, 0, 1, 1]' : 0.100269}", "{'[0, 6, 1, 5, 6, 6, 1, 0, 12, 25, 5, 0, 1, 0, 1, 0, 1, 1]' : 0.100263}", "{'[0, 6, 1, 5, 6, 6, 1, 0, 12, 25, 5, 0, 1, 0, 1, 0, 1, 1]' : 0.100304}"]
returning from 'run': {'[0, 6, 1, 5, 6, 6, 1, 0, 12, 25, 5, 0, 1, 0, 1, 0, 1, 1]': ([0.10067, 0.100391, 0.100315, 0.10043, 0.100326, 0.100623, 0.100179, 0.100123, 0.100361, 0.100319, 0.100259, 0.100231, 0.100384, 0.101309, 0.100324, 0.100342, 0.10031, 0.100339, 0.100247, 0.100219, 0.100643, 0.100385, 0.100302, 0.100428, 0.100328, 0.100414, 0.100372, 0.100269, 0.100263, 0.100304], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inWARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = kkk
f, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.10067, 0.100391, 0.100315, 0.10043, 0.100326, 0.100623, 0.100179, 0.100123, 0.100361, 0.100319, 0.100259, 0.100231, 0.100384, 0.101309, 0.100324, 0.100342, 0.10031, 0.100339, 0.100247, 0.100219, 0.100643, 0.100385, 0.100302, 0.100428, 0.100328, 0.100414, 0.100372, 0.100269, 0.100263, 0.100304], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 1, 5, 6, 6, 1, 0, 12, 25, 5, 0, 1, 0, 1, 0, 1, 1]': ([0.10067, 0.100391, 0.100315, 0.10043, 0.100326, 0.100623, 0.100179, 0.100123, 0.100361, 0.100319, 0.100259, 0.100231, 0.100384, 0.101309, 0.100324, 0.100342, 0.10031, 0.100339, 0.100247, 0.100219, 0.100643, 0.100385, 0.100302, 0.100428, 0.100328, 0.100414, 0.100372, 0.100269, 0.100263, 0.100304], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [6, 0, 4, 5, 2, 0, 1, 14, 0, 28, 29, 0, 0, 0, 0, 1]
Fixed Factors: {'T2_J': 6, 'VEC1': 1}
Testing candidate 13: [6, 0, 4, 5, 6, 2, 0, 1, 14, 0, 28, 29, 0, 0, 0, 0, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		400
        Multiplications: 	122
        Divisions: 		0
        Logical: 		0
        Reads: 			825
        Writes: 		115
        Comparisons:		13
        Gotos: 			0
        
digraph CFG {
	ForLoop11010621 [label="ForLoop11010621  for (j=jjj; j<=cbv_1; j=j+29) {...",shape=box];
	ForLoop11010621 -> 11009919;
	ForLoop11010621 -> _JOIN_11010621;
	10996769 [label="10996769  y[i]=0.0;...",shape=box];
	10996769 -> _JOIN_10996770;
	ForLoop10996701 [label="ForLoop10996701  for (i=0; i<=cbv_1; i=i+15) {...",shape=box];
	ForLoop10996701 -> 10996573;
	ForLoop10996701 -> _JOIN_10996701;
	ForLoop11001785 [label="ForLoop11001785  for (kk=0; kk<=ny-1; kk=kk+128) {...",shape=box];
	ForLoop11001785 -> 11003414;
	ForLoop11001785 -> _JOIN_11001785;
	11010746 [label="11010746  tmp[i]=tmp[i]+A[i*ny+j]*x[j];...",shape=box];
	11010746 -> _JOIN_11010747;
	11003456 [label="11003456  for (k=kk; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	11003456 -> _JOIN_11001785;
	_JOIN_11014361 [label="_JOIN_11014361None...",shape=box];
	_JOIN_11014361 -> 11023507;
	11004329 [label="11004329  double x_copy;...",shape=box];
	ForLoop11014493 [label="ForLoop11014493  for (k=cbv_5; k<=cbv_6; k=k+1) ...",shape=box];
	ForLoop11014493 -> 11014492;
	ForLoop11014493 -> _JOIN_11014493;
	11003414 [label="11003414  for (k=kk; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 10996306;
	_JOIN_10996701 [label="_JOIN_10996701None...",shape=box];
	_JOIN_10996701 -> 10996946;
	11022402 [label="11022402  register int cbv_2, cbv_3;...",shape=box];
	_JOIN_11000459 [label="_JOIN_11000459None...",shape=box];
	_JOIN_11000459 -> ForLoop11001785;
	_JOIN_11010621 [label="_JOIN_11010621None...",shape=box];
	_JOIN_11010621 -> 11022402;
	_JOIN_11010747 [label="_JOIN_11010747None...",shape=box];
	_JOIN_11010747 -> _JOIN_11000459;
	ForLoop10996770 [label="ForLoop10996770  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop10996770 -> 10996769;
	ForLoop10996770 -> _JOIN_10996770;
	_JOIN_11001785 [label="_JOIN_11001785None...",shape=box];
	_JOIN_11001785 -> _JOIN_10999823;
	10999734 [label="10999734  tmp[i]=0;...",shape=box];
	10999734 -> ForLoop11000459;
	11013431 [label="11013431  y_copy[(k-kk)]=y_copy[(k-kk)]+A[i*ny+k]*tmp[i];...",shape=box];
	_JOIN_10999824 [label="_JOIN_10999824None...",shape=box];
	_JOIN_10999824 -> _JOIN_10999825;
	_JOIN_10999825 [label="_JOIN_10999825None...",shape=box];
	_JOIN_10999823 [label="_JOIN_10999823None...",shape=box];
	_JOIN_10999823 -> _JOIN_10999824;
	11023507 [label="11023507  register int cbv_5, cbv_6;...",shape=box];
	10996946 [label="10996946  register int cbv_2, cbv_3;...",shape=box];
	109965expected=9369846271501.798828
actual=9369846271501.798828
73 [label="10996573  y[i]=0.0;...",shape=box];
	_JOIN_10996770 [label="_JOIN_10996770None...",shape=box];
	_JOIN_10996770 -> 11004329;
	11014492 [label="11014492  y_copy[(k-kk)]=y_copy[(k-kk)]+A[i*ny+k]*tmp[i];...",shape=box];
	11014492 -> _JOIN_11014493;
	ForLoop11000459 [label="ForLoop11000459  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop11000459 -> 11008682;
	ForLoop11000459 -> _JOIN_11000459;
	11008682 [label="11008682  int j;...",shape=box];
	ForLoop11014361 [label="ForLoop11014361  for (k=kk; k<=cbv_4; k=k+30) {...",shape=box];
	ForLoop11014361 -> 11013431;
	ForLoop11014361 -> _JOIN_11014361;
	ForLoop11010747 [label="ForLoop11010747  for (j=cbv_2; j<=cbv_3; j=j+1) ...",shape=box];
	ForLoop11010747 -> 11010746;
	ForLoop11010747 -> _JOIN_11010747;
	_JOIN_11014493 [label="_JOIN_11014493None...",shape=box];
	_JOIN_11014493 -> 11003456;
	11009919 [label="11009919  tmp[i]=tmp[i]+A[i*ny+j]*x[j];...",shape=box];
	ForLoop10999824 [label="ForLoop10999824  for (ii=iii; ii<=min(nx-1,iii+512); ii=ii+512) ...",shape=box];
	ForLoop10999824 -> ForLoop10999823;
	ForLoop10999824 -> _JOIN_10999824;
	ForLoop10999825 [label="ForLoop10999825  for (iii=0; iii<=nx-1; iii=iii+1024) ...",shape=box];
	ForLoop10999825 -> ForLoop10999824;
	ForLoop10999825 -> _JOIN_10999825;
	10996306 [label="10996306  int i;...",shape=box];
	ForLoop10999823 [label="ForLoop10999823  for (i=ii; i<=min(nx-1,ii+511); i=i+1) {...",shape=box];
	ForLoop10999823 -> 10999734;
	ForLoop10999823 -> _JOIN_10999823;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest51.exe __orio_perftest51.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest51.exe  
{'[6, 0, 4, 5, 6, 2, 0, 1, 14, 0, 28, 29, 0, 0, 0, 0, 1, 1]' : 0.157705}
{'[6, 0, 4, 5, 6, 2, 0, 1, 14, 0, 28, 29, 0, 0, 0, 0, 1, 1]' : 0.157363}
{'[6, 0, 4, 5, 6, 2, 0, 1, 14, 0, 28, 29, 0, 0, 0, 0, 1, 1]' : 0.157545}
{'[6, 0, 4, 5, 6, 2, 0, 1, 14, 0, 28, 29, 0, 0, 0, 0, 1, 1]' : 0.15763}
{'[6, 0, 4, 5, 6, 2, 0, 1, 14, 0, 28, 29, 0, 0, 0, 0, 1, 1]' : 0.158416}
{'[6, 0, 4, 5, 6, 2, 0, 1, 14, 0, 28, 29, 0, 0, 0, 0, 1, 1]' : 0.157423}
{'[6, 0, 4, 5, 6, 2, 0, 1, 14, 0, 28, 29, 0, 0, 0, 0, 1, 1]' : 0.157408}
{'[6, 0, 4, 5, 6, 2, 0, 1, 14, 0, 28, 29, 0, 0, 0, 0, 1, 1]' : 0.157357}
{'[6, 0, 4, 5, 6, 2, 0, 1, 14, 0, 28, 29, 0, 0, 0, 0, 1, 1]' : 0.157374}
{'[6, 0, 4, 5, 6, 2, 0, 1, 14, 0, 28, 29, 0, 0, 0, 0, 1, 1]' : 0.157379}
{'[6, 0, 4, 5, 6, 2, 0, 1, 14, 0, 28, 29, 0, 0, 0, 0, 1, 1]' : 0.157444}
{'[6, 0, 4, 5, 6, 2, 0, 1, 14, 0, 28, 29, 0, 0, 0, 0, 1, 1]' : 0.157447}
{'[6, 0, 4, 5, 6, 2, 0, 1, 14, 0, 28, 29, 0, 0, 0, 0, 1, 1]' : 0.157672}
{'[6, 0, 4, 5, 6, 2, 0, 1, 14, 0, 28, 29, 0, 0, 0, 0, 1, 1]' : 0.157419}
{'[6, 0, 4, 5, 6, 2, 0, 1, 14, 0, 28, 29, 0, 0, 0, 0, 1, 1]' : 0.157373}
{'[6, 0, 4, 5, 6, 2, 0, 1, 14, 0, 28, 29, 0, 0, 0, 0, 1, 1]' : 0.157477}
{'[6, 0, 4, 5, 6, 2, 0, 1, 14, 0, 28, 29, 0, 0, 0, 0, 1, 1]' : 0.157398}
{'[6, 0, 4, 5, 6, 2, 0, 1, 14, 0, 28, 29, 0, 0, 0, 0, 1, 1]' : 0.15837}
{'[6, 0, 4, 5, 6, 2, 0, 1, 14, 0, 28, 29, 0, 0, 0, 0, 1, 1]' : 0.157396}
{'[6, 0, 4, 5, 6, 2, 0, 1, 14, 0, 28, 29, 0, 0, 0, 0, 1, 1]' : 0.157528}
{'[6, 0, 4, 5, 6, 2, 0, 1, 14, 0, 28, 29, 0, 0, 0, 0, 1, 1]' : 0.157361}
{'[6, 0, 4, 5, 6, 2, 0, 1, 14, 0, 28, 29, 0, 0, 0, 0, 1, 1]' : 0.157396}
{'[6, 0, 4, 5, 6, 2, 0, 1, 14, 0, 28, 29, 0, 0, 0, 0, 1, 1]' : 0.157541}
{'[6, 0, 4, 5, 6, 2, 0, 1, 14, 0, 28, 29, 0, 0, 0, 0, 1, 1]' : 0.157577}
{'[6, 0, 4, 5, 6, 2, 0, 1, 14, 0, 28, 29, 0, 0, 0, 0, 1, 1]' : 0.157402}
{'[6, 0, 4, 5, 6, 2, 0, 1, 14, 0, 28, 29, 0, 0, 0, 0, 1, 1]' : 0.157375}
{'[6, 0, 4, 5, 6, 2, 0, 1, 14, 0, 28, 29, 0, 0, 0, 0, 1, 1]' : 0.157379}
{'[6, 0, 4, 5, 6, 2, 0, 1, 14, 0, 28, 29, 0, 0, 0, 0, 1, 1]' : 0.157379}
{'[6, 0, 4, 5, 6, 2, 0, 1, 14, 0, 28, 29, 0, 0, 0, 0, 1, 1]' : 0.15735}
{'[6, 0, 4, 5, 6, 2, 0, 1, 14, 0, 28, 29, 0, 0, 0, 0, 1, 1]' : 0.157333}

out:
 ["{'[6, 0, 4, 5, 6, 2, 0, 1, 14, 0, 28, 29, 0, 0, 0, 0, 1, 1]' : 0.157705}", "{'[6, 0, 4, 5, 6, 2, 0, 1, 14, 0, 28, 29, 0, 0, 0, 0, 1, 1]' : 0.157363}", "{'[6, 0, 4, 5, 6, 2, 0, 1, 14, 0, 28, 29, 0, 0, 0, 0, 1, 1]' : 0.157545}", "{'[6, 0, 4, 5, 6, 2, 0, 1, 14, 0, 28, 29, 0, 0, 0, 0, 1, 1]' : 0.15763}", "{'[6, 0, 4, 5, 6, 2, 0, 1, 14, 0, 28, 29, 0, 0, 0, 0, 1, 1]' : 0.158416}", "{'[6, 0, 4, 5, 6, 2, 0, 1, 14, 0, 28, 29, 0, 0, 0, 0, 1, 1]' : 0.157423}", "{'[6, 0, 4, 5, 6, 2, 0, 1, 14, 0, 28, 29, 0, 0, 0, 0, 1, 1]' : 0.157408}", "{'[6, 0, 4, 5, 6, 2, 0, 1, 14, 0, 28, 29, 0, 0, 0, 0, 1, 1]' : 0.157357}", "{'[6, 0, 4, 5, 6, 2, 0, 1, 14, 0, 28, 29, 0, 0, 0, 0, 1, 1]' : 0.157374}", "{'[6, 0, 4, 5, 6, 2, 0, 1, 14, 0, 28, 29, 0, 0, 0, 0, 1, 1]' : 0.157379}", "{'[6, 0, 4, 5, 6, 2, 0, 1, 14, 0, 28, 29, 0, 0, 0, 0, 1, 1]' : 0.157444}", "{'[6, 0, 4, 5, 6, 2, 0, 1, 14, 0, 28, 29, 0, 0, 0, 0, 1, 1]' : 0.157447}", "{'[6, 0, 4, 5, 6, 2, 0, 1, 14, 0, 28, 29, 0, 0, 0, 0, 1, 1]' : 0.157672}", "{'[6, 0, 4, 5, 6, 2, 0, 1, 14, 0, 28, 29, 0, 0, 0, 0, 1, 1]' : 0.157419}", "{'[6, 0, 4, 5, 6, 2, 0, 1, 14, 0, 28, 29, 0, 0, 0, 0, 1, 1]' : 0.157373}", "{'[6, 0, 4, 5, 6, 2, 0, 1, 14, 0, 28, 29, 0, 0, 0, 0, 1, 1]' : 0.157477}", "{'[6, 0, 4, 5, 6, 2, 0, 1, 14, 0, 28, 29, 0, 0, 0, 0, 1, 1]' : 0.157398}", "{'[6, 0, 4, 5, 6, 2, 0, 1, 14, 0, 28, 29, 0, 0, 0, 0, 1, 1]' : 0.15837}", "{'[6, 0, 4, 5, 6, 2, 0, 1, 14, 0, 28, 29, 0, 0, 0, 0, 1, 1]' : 0.157396}", "{'[6, 0, 4, 5, 6, 2, 0, 1, 14, 0, 28, 29, 0, 0, 0, 0, 1, 1]' : 0.157528}", "{'[6, 0, 4, 5, 6, 2, 0, 1, 14, 0, 28, 29, 0, 0, 0, 0, 1, 1]' : 0.157361}", "{'[6, 0, 4, 5, 6, 2, 0, 1, 14, 0, 28, 29, 0, 0, 0, 0, 1, 1]' : 0.157396}", "{'[6, 0, 4, 5, 6, 2, 0, 1, 14, 0, 28, 29, 0, 0, 0, 0, 1, 1]' : 0.157541}", "{'[6, 0, 4, 5, 6, 2, 0, 1, 14, 0, 28, 29, 0, 0, 0, 0, 1, 1]' : 0.157577}", "{'[6, 0, 4, 5, 6, 2, 0, 1, 14, 0, 28, 29, 0, 0, 0, 0, 1, 1]' : 0.157402}", "{'[6, 0, 4, 5, 6, 2, 0, 1, 14, 0, 28, 29, 0, 0, 0, 0, 1, 1]' : 0.157375}", "{'[6, 0, 4, 5, 6, 2, 0, 1, 14, 0, 28, 29, 0, 0, 0, 0, 1, 1]' : 0.157379}", "{'[6, 0, 4, 5, 6, 2, 0, 1, 14, 0, 28, 29, 0, 0, 0, 0, 1, 1]' : 0.157379}", "{'[6, 0, 4, 5, 6, 2, 0, 1, 14, 0, 28, 29, 0, 0, 0, 0, 1, 1]' : 0.15735}", "{'[6, 0, 4, 5, 6, 2, 0, 1, 14, 0, 28, 29, 0, 0, 0, 0, 1, 1]' : 0.157333}"]
returning from 'run': {'[6, 0, 4, 5, 6, 2, 0, 1, 14, 0, 28, 29, 0, 0, 0, 0, 1, 1]': ([0.157705, 0.157363, 0.157545, 0.15763, 0.158416, 0.157423, 0.157408, 0.157357, 0.157374, 0.157379, 0.157444, 0.157447, 0.157672, 0.157419, 0.157373, 0.157477, 0.157398, 0.15837, 0.157396, 0.157528, 0.157361, 0.157396, 0.157541, 0.157577, 0.157402, 0.157375, 0.157379, 0.157379, 0.15735, 0.157333], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.157705, 0.157363, 0.157545, 0.15763, 0.158416, 0.157423, 0.157408, 0.157357, 0.157374, 0.157379, 0.157444, 0.157447, 0.157672, 0.157419, 0.157373, 0.157477, 0.157398, 0.15837, 0.157396, 0.157528, 0.157361, 0.157396, 0.157541, 0.157577, 0.157402, 0.157375, 0.157379, 0.157379, 0.15735, 0.157333], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 4, 5, 6, 2, 0, 1, 14, 0, 28, 29, 0, 0, 0, 0, 1, 1]': ([0.157705, 0.157363, 0.157545, 0.15763, 0.158416, 0.157423, 0.157408, 0.157357, 0.157374, 0.157379, 0.157444, 0.157447, 0.157672, 0.157419, 0.157373, 0.157477, 0.157398, 0.15837, 0.157396, 0.157528, 0.157361, 0.157396, 0.157541, 0.157577, 0.157402, 0.157375, 0.157379, 0.157379, 0.15735, 0.157333], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [4, 0, 1, 4, 6, 1, 0, 29, 0, 21, 16, 1, 0, 1, 0, 0]
Fixed Factors: {'T2_J': 6, 'VEC1': 1}
Testing candidate 14: [4, 0, 1, 4, 6, 6, 1, 0, 29, 0, 21, 16, 1, 0, 1, 0, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	6
        Additions: 		3077
        Multiplications: 	882
        Divisions: 		0
        Logical: 		0
        Reads: 			4871
        Writes: 		527
        Comparisons:		24
        Gotos: 			0
        
digraph CFG {
	ForLoop11038277 [label="ForLoop11038277  for (kt=kk; kt<=min(ny-1,kk+15)-7; kt=kt+8) {...",shape=box];
	ForLoop11038277 -> 11038341;
	ForLoop11038277 -> _JOIN_11038277;
	11126444 [label="11126444  y[k]=y[k]+A[it*ny+k]*tmp[it];...",shape=box];
	ForLoop11034257 [label="ForLoop11034257  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop11034257 -> 11034213;
	ForLoop11034257 -> _JOIN_11034257;
	11034355 [label="11034355  tmp[i]=0;...",shape=box];
	11034355 -> ForLoop11034443;
	11035566 [label="11035566  y[kt]=y[kt]+A[it*ny+kt]*tmp[it];...",shape=box];
	_JOIN_11034517 [label="_JOIN_11034517None...",shape=box];
	_JOIN_11034517 -> _JOIN_11027770;
	ForLoop11034331 [label="ForLoop11034331  for (it=ii; it<=min(nx-1,ii+127)-7; it=it+8) {...",shape=box];
	ForLoop11034331 -> 11034528;
	ForLoop11034331 -> _JOIN_11034331;
	_JOIN_11034514 [label="_JOIN_11034514None...",shape=box];
	_JOIN_11034514 -> _JOIN_11034515;
	_JOIN_11131193 [label="_JOIN_11131193None...",shape=box];
	_JOIN_11131193 -> _JOIN_11034328;
	ForLoop11160243 [label="ForLoop11160243  for (j=(min(ny-1,jjj+2047))-(((min(ny-1,jjj+2047))-(jjj)+1)%22)+1; j<=min(ny-1,jjj+2047); j=j+1) ...",shape=box];
	ForLoop11160243 -> 11160242;
	ForLoop11160243 -> _JOIN_11160243;
	11162679 [label="11162679  y[k]=y[k]+A[i*ny+k]*tmp[i];...",shape=box];
	11162679 -> _JOIN_11162680;
	11034213 [label="11034213  for (j=jjj; j<=min(ny-1,jjj+2047); j=j+1) ...",shape=box];
	ForLoop11034328 [label="ForLoop11034328  for (kk=kkk; kk<=min(ny-1,kkk+2032); kk=kk+16) {...",shape=box];
	ForLoop11034328 -> ForLoop11035246;
	ForLoop11034328 -> _JOIN_11034328;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 11023757;
	11119338 [label="11119338  int k;...",shape=box];
	11119338 -> ForLoop11130884;
	ForLoop11024581 [label="ForLoop11024581  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop11024581 -> 11024580;
	ForLoop11024581 -> _JOIN_11024581;
	11161267 [label="11161267  int k;...",shape=box];
	11161267 -> ForLoop11162554;
	_JOIN_11024512 [label="_JOIN_11024512None...",shape=box];
	_JOIN_11024512 -> 11024892;
	11034528 [label="11034528  tmp[it]=0;...",shape=box];
	11034528 -> ForLoop11034257;
	_JOIN_11034257 [label="_JOIN_11034257None...",shape=box];
	_JOIN_11034257 -> ForLoop11034329;
	_JOIN_11034331 [label="_JOIN_11034331None...",shape=box];
	_JOIN_11034331 -> ForLoop11034517;
	11103871 [label="11103871  tmp[it]=tmp[it]+A[it*ny+j]*x_copy[(j-jjj)];...",shape=box];
	11034399 [label="11034399  for (j=jjj; j<=min(ny-1,jjj+2047); j=j+1) ...",shape=box];
	ForLoop11109956 [label="ForLoop11109956  for (j=jjj; j<=min(ny-1,jjj+2047)-21; j=j+22) {...",shape=box];
	ForLoop11109956 -> 11103871;
	ForLoop11109956 -> _JOIN_11109956;
	ForLoop11110310 [label="ForLoop11110310  for (j=(min(ny-1,jjj+2047))-(((min(ny-1,jjj+2047))-(jjj)+1)%22)+1; j<=min(ny-1,jjj+2047); j=j+1) {...",shape=box];
	ForLoop11110310 -> 11110084;
	ForLoop11110310 -> _JOIN_11110310;
	_JOIN_11160114 [label="_JOIN_11160114None...",shape=box];
	_JOIN_11160114 -> ForLoop11160243;
	ForLoop11034515 [label="ForLoop11034515  for (kkk=0; kkk<=ny-1; kkk=kkk+2048) ...",shape=box];
	ForLoop11034515 -> ForLoop11034514;
	ForLoop11034515 -> _JOIN_11034515;
	ForLoop11034514 [label="ForLoop11034514  for (kk=kkk; kk<=min(ny-1,kkk+2032); kk=kk+16) {...",shape=box];
	ForLoop11034514 -> ForLoop11038277;
	ForLoop11034514 -> _JOIN_11034514;
	ForLoop11034517 [label="ForLoop11034517  for (i=it; i<=min(nx-1,ii+127); i=i+1) {...",shape=box];
	ForLoop11034517 -> 11034355;
	ForLoop11034517 -> _JOIN_11034517;
	ForLoop11035246 [label="ForLoop11035246  for (kt=kk; kt<=min(ny-1,kk+15)-7; kt=kt+8) {...",shape=box];
	ForLoop11035246 -> 11035566;
	ForLoop11035246 -> _JOIN_11035246;
	11038341 [label="11038341  y[kt]=y[kt]+A[i*ny+kt]*tmp[i];...",shape=box];
	_JOIN_11034328 [label="_JOIN_11034328None...",shape=box];
	_JOIN_11034328 -> _JOIN_11034329;
	_JOIN_11034329 [label="_JOIN_11034329None...",shape=box];
	_JOIN_11034329 -> _JOIN_11034331;
	_JOIN_11038277 [label="_JOIN_11038277None...",shape=box];
	_JOIN_11038277 -> 11161267;
	_JOIN_11109956 [labexpected=9369846271501.798828
actual=9369846271501.798828
el="_JOIN_11109956None...",shape=box];
	_JOIN_11109956 -> ForLoop11110310;
	ForLoop11162680 [label="ForLoop11162680  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kt)+1)%17)+1; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop11162680 -> 11162679;
	ForLoop11162680 -> _JOIN_11162680;
	ForLoop11024512 [label="ForLoop11024512  for (i=0; i<=cbv_1; i=i+30) {...",shape=box];
	ForLoop11024512 -> 11024249;
	ForLoop11024512 -> _JOIN_11024512;
	ForLoop11034329 [label="ForLoop11034329  for (kkk=0; kkk<=ny-1; kkk=kkk+2048) ...",shape=box];
	ForLoop11034329 -> ForLoop11034328;
	ForLoop11034329 -> _JOIN_11034329;
	ForLoop11160114 [label="ForLoop11160114  for (j=jjj; j<=min(ny-1,jjj+2047)-21; j=j+22) {...",shape=box];
	ForLoop11160114 -> 11159545;
	ForLoop11160114 -> _JOIN_11160114;
	11131009 [label="11131009  y[k]=y[k]+A[it*ny+k]*tmp[it];...",shape=box];
	ForLoop11130884 [label="ForLoop11130884  for (k=kt; k<=min(ny-1,kk+15)-16; k=k+17) {...",shape=box];
	ForLoop11130884 -> 11126444;
	ForLoop11130884 -> _JOIN_11130884;
	11110084 [label="11110084  tmp[it]=tmp[it]+A[it*ny+j]*x_copy[(j-jjj)];...",shape=box];
	ForLoop11027771 [label="ForLoop11027771  for (iii=0; iii<=nx-1; iii=iii+512) ...",shape=box];
	ForLoop11027771 -> ForLoop11027770;
	ForLoop11027771 -> _JOIN_11027771;
	ForLoop11027770 [label="ForLoop11027770  for (ii=iii; ii<=min(nx-1,iii+384); ii=ii+128) {...",shape=box];
	ForLoop11027770 -> ForLoop11034331;
	ForLoop11027770 -> _JOIN_11027770;
	_JOIN_11034515 [label="_JOIN_11034515None...",shape=box];
	_JOIN_11034515 -> _JOIN_11034517;
	_JOIN_11162554 [label="_JOIN_11162554None...",shape=box];
	_JOIN_11162554 -> ForLoop11162680;
	_JOIN_11034443 [label="_JOIN_11034443None...",shape=box];
	_JOIN_11034443 -> ForLoop11034515;
	11162104 [label="11162104  y[k]=y[k]+A[i*ny+k]*tmp[i];...",shape=box];
	_JOIN_11035246 [label="_JOIN_11035246None...",shape=box];
	_JOIN_11035246 -> 11119338;
	_JOIN_11027771 [label="_JOIN_11027771None...",shape=box];
	_JOIN_11027770 [label="_JOIN_11027770None...",shape=box];
	_JOIN_11027770 -> _JOIN_11027771;
	11024580 [label="11024580  y[i]=0.0;...",shape=box];
	11024580 -> _JOIN_11024581;
	_JOIN_11160243 [label="_JOIN_11160243None...",shape=box];
	_JOIN_11160243 -> _JOIN_11034443;
	11159545 [label="11159545  tmp[i]=tmp[i]+A[i*ny+j]*x_copy[(j-jjj)];...",shape=box];
	_JOIN_11110310 [label="_JOIN_11110310None...",shape=box];
	_JOIN_11110310 -> _JOIN_11034257;
	_JOIN_11130884 [label="_JOIN_11130884None...",shape=box];
	_JOIN_11130884 -> ForLoop11131193;
	ForLoop11034443 [label="ForLoop11034443  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop11034443 -> 11034399;
	ForLoop11034443 -> _JOIN_11034443;
	11032274 [label="11032274  double x_copy[2048];...",shape=box];
	11023757 [label="11023757  int i;...",shape=box];
	ForLoop11162554 [label="ForLoop11162554  for (k=kt; k<=min(ny-1,kk+15)-16; k=k+17) {...",shape=box];
	ForLoop11162554 -> 11162104;
	ForLoop11162554 -> _JOIN_11162554;
	11024892 [label="11024892  register int cbv_2, cbv_3;...",shape=box];
	11160242 [label="11160242  tmp[i]=tmp[i]+A[i*ny+j]*x_copy[(j-jjj)];...",shape=box];
	11160242 -> _JOIN_11160243;
	ForLoop11131193 [label="ForLoop11131193  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kt)+1)%17)+1; k<=min(ny-1,kk+15); k=k+1) {...",shape=box];
	ForLoop11131193 -> 11131009;
	ForLoop11131193 -> _JOIN_11131193;
	11024249 [label="11024249  y[i]=0.0;...",shape=box];
	_JOIN_11024581 [label="_JOIN_11024581None...",shape=box];
	_JOIN_11024581 -> 11032274;
	_JOIN_11162680 [label="_JOIN_11162680None...",shape=box];
	_JOIN_11162680 -> _JOIN_11034514;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest52.exe __orio_perftest52.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest52.exe  
{'[4, 0, 1, 4, 6, 6, 1, 0, 29, 0, 21, 16, 1, 0, 1, 0, 1, 0]' : 0.102502}
{'[4, 0, 1, 4, 6, 6, 1, 0, 29, 0, 21, 16, 1, 0, 1, 0, 1, 0]' : 0.102387}
{'[4, 0, 1, 4, 6, 6, 1, 0, 29, 0, 21, 16, 1, 0, 1, 0, 1, 0]' : 0.102125}
{'[4, 0, 1, 4, 6, 6, 1, 0, 29, 0, 21, 16, 1, 0, 1, 0, 1, 0]' : 0.102092}
{'[4, 0, 1, 4, 6, 6, 1, 0, 29, 0, 21, 16, 1, 0, 1, 0, 1, 0]' : 0.102255}
{'[4, 0, 1, 4, 6, 6, 1, 0, 29, 0, 21, 16, 1, 0, 1, 0, 1, 0]' : 0.102353}
{'[4, 0, 1, 4, 6, 6, 1, 0, 29, 0, 21, 16, 1, 0, 1, 0, 1, 0]' : 0.102244}
{'[4, 0, 1, 4, 6, 6, 1, 0, 29, 0, 21, 16, 1, 0, 1, 0, 1, 0]' : 0.10202}
{'[4, 0, 1, 4, 6, 6, 1, 0, 29, 0, 21, 16, 1, 0, 1, 0, 1, 0]' : 0.102263}
{'[4, 0, 1, 4, 6, 6, 1, 0, 29, 0, 21, 16, 1, 0, 1, 0, 1, 0]' : 0.102345}
{'[4, 0, 1, 4, 6, 6, 1, 0, 29, 0, 21, 16, 1, 0, 1, 0, 1, 0]' : 0.102074}
{'[4, 0, 1, 4, 6, 6, 1, 0, 29, 0, 21, 16, 1, 0, 1, 0, 1, 0]' : 0.102271}
{'[4, 0, 1, 4, 6, 6, 1, 0, 29, 0, 21, 16, 1, 0, 1, 0, 1, 0]' : 0.10234}
{'[4, 0, 1, 4, 6, 6, 1, 0, 29, 0, 21, 16, 1, 0, 1, 0, 1, 0]' : 0.102446}
{'[4, 0, 1, 4, 6, 6, 1, 0, 29, 0, 21, 16, 1, 0, 1, 0, 1, 0]' : 0.102093}
{'[4, 0, 1, 4, 6, 6, 1, 0, 29, 0, 21, 16, 1, 0, 1, 0, 1, 0]' : 0.102098}
{'[4, 0, 1, 4, 6, 6, 1, 0, 29, 0, 21, 16, 1, 0, 1, 0, 1, 0]' : 0.102355}
{'[4, 0, 1, 4, 6, 6, 1, 0, 29, 0, 21, 16, 1, 0, 1, 0, 1, 0]' : 0.102366}
{'[4, 0, 1, 4, 6, 6, 1, 0, 29, 0, 21, 16, 1, 0, 1, 0, 1, 0]' : 0.102069}
{'[4, 0, 1, 4, 6, 6, 1, 0, 29, 0, 21, 16, 1, 0, 1, 0, 1, 0]' : 0.101989}
{'[4, 0, 1, 4, 6, 6, 1, 0, 29, 0, 21, 16, 1, 0, 1, 0, 1, 0]' : 0.102279}
{'[4, 0, 1, 4, 6, 6, 1, 0, 29, 0, 21, 16, 1, 0, 1, 0, 1, 0]' : 0.10232}
{'[4, 0, 1, 4, 6, 6, 1, 0, 29, 0, 21, 16, 1, 0, 1, 0, 1, 0]' : 0.102158}
{'[4, 0, 1, 4, 6, 6, 1, 0, 29, 0, 21, 16, 1, 0, 1, 0, 1, 0]' : 0.101985}
{'[4, 0, 1, 4, 6, 6, 1, 0, 29, 0, 21, 16, 1, 0, 1, 0, 1, 0]' : 0.10234}
{'[4, 0, 1, 4, 6, 6, 1, 0, 29, 0, 21, 16, 1, 0, 1, 0, 1, 0]' : 0.102471}
{'[4, 0, 1, 4, 6, 6, 1, 0, 29, 0, 21, 16, 1, 0, 1, 0, 1, 0]' : 0.102345}
{'[4, 0, 1, 4, 6, 6, 1, 0, 29, 0, 21, 16, 1, 0, 1, 0, 1, 0]' : 0.102009}
{'[4, 0, 1, 4, 6, 6, 1, 0, 29, 0, 21, 16, 1, 0, 1, 0, 1, 0]' : 0.102229}
{'[4, 0, 1, 4, 6, 6, 1, 0, 29, 0, 21, 16, 1, 0, 1, 0, 1, 0]' : 0.102436}

out:
 ["{'[4, 0, 1, 4, 6, 6, 1, 0, 29, 0, 21, 16, 1, 0, 1, 0, 1, 0]' : 0.102502}", "{'[4, 0, 1, 4, 6, 6, 1, 0, 29, 0, 21, 16, 1, 0, 1, 0, 1, 0]' : 0.102387}", "{'[4, 0, 1, 4, 6, 6, 1, 0, 29, 0, 21, 16, 1, 0, 1, 0, 1, 0]' : 0.102125}", "{'[4, 0, 1, 4, 6, 6, 1, 0, 29, 0, 21, 16, 1, 0, 1, 0, 1, 0]' : 0.102092}", "{'[4, 0, 1, 4, 6, 6, 1, 0, 29, 0, 21, 16, 1, 0, 1, 0, 1, 0]' : 0.102255}", "{'[4, 0, 1, 4, 6, 6, 1, 0, 29, 0, 21, 16, 1, 0, 1, 0, 1, 0]' : 0.102353}", "{'[4, 0, 1, 4, 6, 6, 1, 0, 29, 0, 21, 16, 1, 0, 1, 0, 1, 0]' : 0.102244}", "{'[4, 0, 1, 4, 6, 6, 1, 0, 29, 0, 21, 16, 1, 0, 1, 0, 1, 0]' : 0.10202}", "{'[4, 0, 1, 4, 6, 6, 1, 0, 29, 0, 21, 16, 1, 0, 1, 0, 1, 0]' : 0.102263}", "{'[4, 0, 1, 4, 6, 6, 1, 0, 29, 0, 21, 16, 1, 0, 1, 0, 1, 0]' : 0.102345}", "{'[4, 0, 1, 4, 6, 6, 1, 0, 29, 0, 21, 16, 1, 0, 1, 0, 1, 0]' : 0.102074}", "{'[4, 0, 1, 4, 6, 6, 1, 0, 29, 0, 21, 16, 1, 0, 1, 0, 1, 0]' : 0.102271}", "{'[4, 0, 1, 4, 6, 6, 1, 0, 29, 0, 21, 16, 1, 0, 1, 0, 1, 0]' : 0.10234}", "{'[4, 0, 1, 4, 6, 6, 1, 0, 29, 0, 21, 16, 1, 0, 1, 0, 1, 0]' : 0.102446}", "{'[4, 0, 1, 4, 6, 6, 1, 0, 29, 0, 21, 16, 1, 0, 1, 0, 1, 0]' : 0.102093}", "{'[4, 0, 1, 4, 6, 6, 1, 0, 29, 0, 21, 16, 1, 0, 1, 0, 1, 0]' : 0.102098}", "{'[4, 0, 1, 4, 6, 6, 1, 0, 29, 0, 21, 16, 1, 0, 1, 0, 1, 0]' : 0.102355}", "{'[4, 0, 1, 4, 6, 6, 1, 0, 29, 0, 21, 16, 1, 0, 1, 0, 1, 0]' : 0.102366}", "{'[4, 0, 1, 4, 6, 6, 1, 0, 29, 0, 21, 16, 1, 0, 1, 0, 1, 0]' : 0.102069}", "{'[4, 0, 1, 4, 6, 6, 1, 0, 29, 0, 21, 16, 1, 0, 1, 0, 1, 0]' : 0.101989}", "{'[4, 0, 1, 4, 6, 6, 1, 0, 29, 0, 21, 16, 1, 0, 1, 0, 1, 0]' : 0.102279}", "{'[4, 0, 1, 4, 6, 6, 1, 0, 29, 0, 21, 16, 1, 0, 1, 0, 1, 0]' : 0.10232}", "{'[4, 0, 1, 4, 6, 6, 1, 0, 29, 0, 21, 16, 1, 0, 1, 0, 1, 0]' : 0.102158}", "{'[4, 0, 1, 4, 6, 6, 1, 0, 29, 0, 21, 16, 1, 0, 1, 0, 1, 0]' : 0.101985}", "{'[4, 0, 1, 4, 6, 6, 1, 0, 29, 0, 21, 16, 1, 0, 1, 0, 1, 0]' : 0.10234}", "{'[4, 0, 1, 4, 6, 6, 1, 0, 29, 0, 21, 16, 1, 0, 1, 0, 1, 0]' : 0.102471}", "{'[4, 0, 1, 4, 6, 6, 1, 0, 29, 0, 21, 16, 1, 0, 1, 0, 1, 0]' : 0.102345}", "{'[4, 0, 1, 4, 6, 6, 1, 0, 29, 0, 21, 16, 1, 0, 1, 0, 1, 0]' : 0.102009}", "{'[4, 0, 1, 4, 6, 6, 1, 0, 29, 0, 21, 16, 1, 0, 1, 0, 1, 0]' : 0.102229}", "{'[4, 0, 1, 4, 6, 6, 1, 0, 29, 0, 21, 16, 1, 0, 1, 0, 1, 0]' : 0.102436}"]
returning from 'run': {'[4, 0, 1, 4, 6, 6, 1, 0, 29, 0, 21, 16, 1, 0, 1, 0, 1, 0]': ([0.102502, 0.102387, 0.102125, 0.102092, 0.102255, 0.102353, 0.102244, 0.10202, 0.102263, 0.102345, 0.102074, 0.102271, 0.10234, 0.102446, 0.102093, 0.102098, 0.102355, 0.102366, 0.102069, 0.101989, 0.102279, 0.10232, 0.102158, 0.101985, 0.10234, 0.102471, 0.102345, 0.102009, 0.102229, 0.102436], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.102502, 0.102387, 0.102125, 0.102092, 0.102255, 0.102353, 0.102244, 0.10202, 0.102263, 0.102345, 0.102074, 0.102271, 0.10234, 0.102446, 0.102093, 0.102098, 0.102355, 0.102366, 0.102069, 0.101989, 0.102279, 0.10232, 0.102158, 0.101985, 0.10234, 0.102471, 0.102345, 0.102009, 0.102229, 0.102436], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[4, 0, 1, 4, 6, 6, 1, 0, 29, 0, 21, 16, 1, 0, 1, 0, 1, 0]': ([0.102502, 0.102387, 0.102125, 0.102092, 0.102255, 0.102353, 0.102244, 0.10202, 0.102263, 0.102345, 0.102074, 0.102271, 0.10234, 0.102446, 0.102093, 0.102098, 0.102355, 0.102366, 0.102069, 0.101989, 0.102279, 0.10232, 0.102158, 0.101985, 0.10234, 0.102471, 0.102345, 0.102009, 0.102229, 0.102436], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [5, 5, 0, 0, 2, 1, 1, 26, 26, 0, 1, 2, 0, 0, 1, 0]
Fixed Factors: {'T2_J': 6, 'VEC1': 1}
Testing candidate 15: [5, 5, 0, 0, 6, 2, 1, 1, 26, 26, 0, 1, 2, 0, 0, 1, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	163
        Max loop nest depth: 	5
        Additions: 		2014
        Multiplications: 	480
        Divisions: 		0
        Logical: 		0
        Reads: 			4517
        Writes: 		1009
        Comparisons:		163
        Gotos: 			0
        
digraph CFG {
	ForLoop11311081 [label="ForLoop11311081  for (k=kkk; k<=min(ny-1,kkk+127)-1; k=k+2) {...",shape=box];
	ForLoop11311081 -> 11337432;
	ForLoop11311081 -> _JOIN_11311081;
	11305882 [label="11305882  for (k=kkk; k<=min(ny-1,kkk+127); k=k+1) ...",shape=box];
	11305882 -> _JOIN_11305884;
	11336733 [label="11336733  double scv_70;...",shape=box];
	11334374 [label="11334374  double scv_44, scv_45;...",shape=box];
	11305887 [label="11305887  int i;...",shape=box];
	11305887 -> ForLoop11314265;
	_JOIN_11313285 [label="_JOIN_11313285None...",shape=box];
	_JOIN_11313285 -> 11313317;
	_JOIN_11307890 [label="_JOIN_11307890None...",shape=box];
	_JOIN_11307890 -> _JOIN_11307892;
	_JOIN_11311397 [label="_JOIN_11311397None...",shape=box];
	_JOIN_11311397 -> 11311429;
	_JOIN_11307892 [label="_JOIN_11307892None...",shape=box];
	_JOIN_11307892 -> _JOIN_11307894;
	_JOIN_11307894 [label="_JOIN_11307894None...",shape=box];
	_JOIN_11307894 -> ForLoop11314263;
	_JOIN_11312969 [label="_JOIN_11312969None...",shape=box];
	_JOIN_11312969 -> ForLoop11313049;
	ForLoop11312733 [label="ForLoop11312733  for (k=kkk; k<=min(ny-1,kkk+127)-1; k=k+2) {...",shape=box];
	ForLoop11312733 -> 11339378;
	ForLoop11312733 -> _JOIN_11312733;
	_JOIN_11311553 [label="_JOIN_11311553None...",shape=box];
	_JOIN_11311553 -> ForLoop11311633;
	ForLoop11313285 [label="ForLoop11313285  for (k=(min(ny-1,kkk+127))-(((min(ny-1,kkk+127))-(kkk)+1)%2)+1; k<=min(ny-1,kkk+127); k=k+1) {...",shape=box];
	ForLoop11313285 -> 11340069;
	ForLoop11313285 -> _JOIN_11313285;
	ForLoop11308801 [label="ForLoop11308801  for (k=(min(ny-1,kkk+127))-(((min(ny-1,kkk+127))-(kkk)+1)%2)+1; k<=min(ny-1,kkk+127); k=k+1) {...",shape=box];
	ForLoop11308801 -> 11334787;
	ForLoop11308801 -> _JOIN_11308801;
	11359098 [label="11359098  double scv_149;...",shape=box];
	ForLoop11314624 [label="ForLoop11314624  for (k=(min(ny-1,kkk+127))-(((min(ny-1,kkk+127))-(kkk)+1)%2)+1; k<=min(ny-1,kkk+127); k=k+1) {...",shape=box];
	ForLoop11314624 -> 11358407;
	ForLoop11314624 -> _JOIN_11314624;
	11339934 [label="11339934  double scv_104, scv_105;...",shape=box];
	11338544 [label="11338544  double scv_89, scv_90;...",shape=box];
	_JOIN_11309037 [label="_JOIN_11309037None...",shape=box];
	_JOIN_11309037 -> 11309069;
	_JOIN_11309509 [label="_JOIN_11309509None...",shape=box];
	_JOIN_11309509 -> 11309541;
	_JOIN_11309745 [label="_JOIN_11309745None...",shape=box];
	_JOIN_11309745 -> 11309777;
	ForLoop11308721 [label="ForLoop11308721  for (k=kkk; k<=min(ny-1,kkk+127)-1; k=k+2) {...",shape=box];
	ForLoop11308721 -> 11334652;
	ForLoop11308721 -> _JOIN_11308721;
	_JOIN_11313993 [label="_JOIN_11313993None...",shape=box];
	_JOIN_11313993 -> 11314025;
	ForLoop11311633 [label="ForLoop11311633  for (k=(min(ny-1,kkk+127))-(((min(ny-1,kkk+127))-(kkk)+1)%2)+1; k<=min(ny-1,kkk+127); k=k+1) {...",shape=box];
	ForLoop11311633 -> 11338123;
	ForLoop11311633 -> _JOIN_11311633;
	11310249 [label="11310249  for (k=kkk; k<=min(ny-1,kkk+127); k=k+1) ...",shape=box];
	11335208 [label="11335208  double scv_53, scv_54;...",shape=box];
	_JOIN_11309429 [label="_JOIN_11309429None...",shape=box];
	_JOIN_11309429 -> ForLoop11309509;
	11312609 [label="11312609  for (k=kkk; k<=min(ny-1,kkk+127); k=k+1) ...",shape=box];
	ForLoop11314422 [label="ForLoop11314422  for (j=jj; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop11314422 -> 11314421;
	ForLoop11314422 -> _JOIN_11314422;
	ForLoop11312577 [label="ForLoop11312577  for (k=(min(ny-1,kkk+127))-(((min(ny-1,kkk+127))-(kkk)+1)%2)+1; k<=min(ny-1,kkk+127); k=k+1) {...",shape=box];
	ForLoop11312577 -> 11339235;
	ForLoop11312577 -> _JOIN_11312577;
	11309541 [label="11309541  for (k=kkk; k<=min(ny-1,kkk+127); k=k+1) ...",shape=box];
	11308125 [label="11308125  for (k=kkk; k<=min(ny-1,kkk+127); k=k+1) ...",shape=box];
	_JOIN_11308721 [label="_JOIN_11308721None...",shape=box];
	_JOIN_11308721 -> ForLoop11308801;
	11340490 [label="11340490  double scv_110, scv_111;...",shape=box];
	ForLoop11310609 [label="ForLoop11310609  for (k=kkk; k<=min(ny-1,kkk+127)-1; k=k+2) {...",shape=box];
	ForLoop11310609 -> 11336876;
	ForLoop11310609 -> _JOIN_11310609;
	ForLoop11314424 [label="ForLoop11314424  for (jj=jjj; jj<=min(ny-1,jjj+1792); jj=jj+256) {...",shape=box];
	ForLoop11314424 -> 11314380;
	ForLoop11314424 -> _JOIN_11314424;
	_JOIN_11313521 [label="_JOIN_11313521None...",shape=box];
	_JOIN_11313521 -> 11313553;
	ForLoop11305884 [label="ForLoop11305884  for (kkk=0; kkk<=ny-1; kkk=kkk+128) {...",shape=box];
	ForLoop11305884 -> 11302532;
	ForLoop11305884 -> _JOIN_11305884;
	ForLoop11302487 [label="ForLoop11302487  for (jj=jjj; jj<=min(ny-1,jjj+1792); jj=jj+256) {...",shape=box];
	ForLoop11302487 -> 11301450;
	ForLoop11302487 -> _JOIN_11302487;
	_JOIN_11314624 [label="_JOIN_11314624None...",shape=box];
	_JOIN_11314624 -> 11314656;
	11308833 [label="11308833  for (k=kkk; k<=min(ny-1,kkk+127); k=k+1) ...",shape=box];
	_JOIN_11314422 [label="_JOIN_11314422None...",shape=box];
	_JOIN_11314422 -> _JOIN_11314424;
	_JOIN_11314424 [label="_JOIN_11314424None...",shape=box];
	_JOIN_11314424 -> _JOIN_11314425;
	ForLoop11305886 [label="ForLoop11305886  for (it=ii; it<=min(nx-1,ii+255)-31; it=it+32) {...",shape=box];
	ForLoop11305886 -> 11328408;
	ForLoop11305886 -> _JOIN_11305886;
	ForLoop11311317 [label="ForLoop11311317  for (k=kkk; k<=min(ny-1,kkk+127)-1; k=k+2) {...",shape=box];
	ForLoop11311317 -> 11337710;
	ForLoop11311317 -> _JOIN_11311317;
	11334652 [label="11334652  double scv_47, scv_48;...",shape=box];
	11312845 [label="11312845  for (k=kkk; k<=min(ny-1,kkk+127); k=k+1) ...",shape=box];
	ForLoop11308249 [label="ForLoop11308249  for (k=kkk; k<=min(ny-1,kkk+127)-1; k=k+2) {...",shape=box];
	ForLoop11308249 -> 11334096;
	ForLoop11308249 -> _JOIN_11308249;
	11339378 [label="11339378  double scv_98, scv_99;...",shape=box];
	ForLoop11309429 [label="ForLoop11309429  for (k=kkk; k<=min(ny-1,kkk+127)-1; k=k+2) {...",shape=box];
	ForLoop11309429 -> 11335486;
	ForLoop11309429 -> _JOIN_11309429;
	11336177 [label="11336177  double scv_64;...",shape=box];
	ForLoop11196957 [label="ForLoop11196957  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop11196957 -> 11196956;
	ForLoop11196957 -> _JOIN_11196957;
	ForLoop11308957 [label="ForLoop11308957  for (k=kkk; k<=min(ny-1,kkk+127)-1; k=k+2) {...",shape=box];
	ForLoop11308957 -> 11334930;
	ForLoop11308957 -> _JOIN_11308957;
	ForLoop11310137 [label="ForLoop11310137  for (k=kkk; k<=min(ny-1,kkk+127)-1; k=k+2) {...",shape=box];
	ForLoop11310137 -> 11336320;
	ForLoop11310137 -> _JOIN_11310137;
	_JOIN_11305884 [label="_JOIN_11305884None...",shape=box];
	_JOIN_11305884 -> 11328420;
	_JOIN_11305886 [label="_JOIN_11305886None...",shape=box];
	_JOIN_11305886 -> 11305887;
	11328420 [label="11328420  tmp[it]=scv_5;...",shape=box];
	ForLoop11309509 [label="ForLoop11309509  for (k=(min(ny-1,kkk+127))-(((min(ny-1,kkk+127))-(kkk)+1)%2)+1; k<=min(ny-1,kkk+127); k=k+1) {...",shape=box];
	ForLoop11309509 -> 11335621;
	ForLoop11309509 -> _JOIN_11309509;
	11196956 [label="11196956  y[i]=0.0;...",shape=box];
	11196956 -> _JOIN_11196957;
	11311429 [label="11311429  for (k=kkk; k<=min(ny-1,kkk+127); k=k+1) ...",shape=box];
	11336876 [label="11336876  double scv_71, scv_72;...",shape=box];
	ForLoop11304783 [label="ForLoop11304783  for (k=kkk; k<=min(ny-1,kkk+127)-1; k=k+2) {...",shape=box];
	ForLoop11304783 -> 11321072;
	ForLoop11304783 -> _JOIN_11304783;
	11335764 [label="11335764  double scv_59, scv_60;...",shape=box];
	_JOIN_11313441 [label="_JOIN_11313441None...",shape=box];
	_JOIN_11313441 -> ForLoop11313521;
	_JOIN_11304783 [label="_JOIN_11304783None...",shape=box];
	_JOIN_11304783 -> ForLoop11305850;
	11333827 [label="11333827  double scv_38, scv_39;...",shape=box];
	_JOIN_11311317 [label="_JOIN_11311317None...",shape=box];
	_JOIN_11311317 -> ForLoop11311397;
	_JOIN_11308329 [label="_JOIN_11308329None...",shape=box];
	_JOIN_11308329 -> 11308361;
	ForLoop11309745 [label="ForLoop11309745  for (k=(min(ny-1,kkk+127))-(((min(ny-1,kkk+127))-(kkk)+1)%2)+1; k<=min(ny-1,kkk+127); k=k+1) {...",shape=box];
	ForLoop11309745 -> 11335899;
	ForLoop11309745 -> _JOIN_11309745;
	11338957 [label="11338957  double scv_94;...",shape=box];
	11316204 [label="11316204  double scv_1;...",shape=box];
	11337154 [label="11337154  double scv_74, scv_75;...",shape=box];
	ForLoop11311553 [label="ForLoop11311553  for (k=kkk; k<=min(ny-1,kkk+127)-1; k=k+2) {...",shape=box];
	ForLoop11311553 -> 11337988;
	ForLoop11311553 -> _JOIN_11311553;
	_JOIN_11312341 [label="_JOIN_11312341None...",shape=box];
	_JOIN_11312341 -> 11312373;
	11335065 [label="11335065  double scv_52;...",shape=box];
	ForLoop11314149 [label="ForLoop11314149  for (k=kkk; k<=min(ny-1,kkk+127)-1; k=k+2) {...",shape=box];
	ForLoop11314149 -> 11341046;
	ForLoop11314149 -> _JOIN_11314149;
	11314025 [label="11314025  for (k=kkk; k<=min(ny-1,kkk+127); k=k+1) ...",shape=box];
	11309069 [label="11309069  for (k=kkk; k<=min(ny-1,kkk+127); k=k+1) ...",shape=box];
	11336042 [label="11336042  double scv_62, scv_63;...",shape=box];
	_JOIN_11314425 [label="_JOIN_11314425None...",shape=box];
	_JOIN_11314425 -> ForLoop11314658;
	11314261 [label="11314261  for (k=kkk; k<=min(ny-1,kkk+127); k=k+1) ...",shape=box];
	11314261 -> _JOIN_11314263;
	11314656 [label="11314656  for (k=kkk; k<=min(ny-1,kkk+127); k=k+1) ...",shape=box];
	11314656 -> _JOIN_11314658;
	11337988 [label="11337988  double scv_83, scv_84;...",shape=box];
	11334096 [label="11334096  double scv_41, scv_42;...",shape=box];
	ForLoop11312025 [label="ForLoop11312025  for (k=kkk; k<=min(ny-1,kkk+127)-1; k=k+2) {...",shape=box];
	ForLoop11312025 -> 11338544;
	ForLoop11312025 -> _JOIN_11312025;
	ForLoop11314658 [label="ForLoop11314658  for (kkk=0; kkk<=ny-1; kkk=kkk+128) {...",shape=box];
	ForLoop11314658 -> 11314469;
	ForLoop11314658 -> _JOIN_11314658;
	_JOIN_11312105 [label="_JOIN_11312105None...",shape=box];
	_JOIN_11312105 -> 11312137;
	ForLoop11310689 [label="ForLoop11310689  for (k=(min(ny-1,kkk+127))-(((min(ny-1,kkk+127))-(kkk)+1)%2)+1; k<=min(ny-1,kkk+127); k=k+1) {...",shape=box];
	ForLoop11310689 -> 11337011;
	ForLoop11310689 -> _JOIN_11310689;
	_JOIN_11313205 [label="_JOIN_11313205None...",shape=box];
	_JOIN_11313205 -> ForLoop11313285;
	11341046 [label="11341046  double scv_116, scv_117;...",shape=box];
	_JOIN_11312025 [label="_JOIN_11312025None...",shape=box];
	_JOIN_11312025 -> ForLoop11312105;
	ForLoop11312105 [label="ForLoop11312105  for (k=(min(ny-1,kkk+127))-(((min(ny-1,kkk+127))-(kkk)+1)%2)+1; k<=min(ny-1,kkk+127); k=k+1) {...",shape=box];
	ForLoop11312105 -> 11338679;
	ForLoop11312105 -> _JOIN_11312105;
	_JOIN_11314149 [label="_JOIN_11314149None...",shape=box];
	_JOIN_11314149 -> ForLoop11314229;
	11314380 [label="11314380  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	11314380 -> ForLoop11314422;
	_JOIN_11310609 [label="_JOIN_11310609None...",shape=box];
	_JOIN_11310609 -> ForLoop11310689;
	ForLoop11313441 [label="ForLoop11313441  for (k=kkk; k<=min(ny-1,kkk+127)-1; k=k+2) {...",shape=box];
	ForLoop11313441 -> 11340212;
	ForLoop11313441 -> _JOIN_11313441;
	11338266 [label="11338266  double scv_86, scv_87;...",shape=box];
	ForLoop11311869 [label="ForLoop11311869  for (k=(min(ny-1,kkk+127))-(((min(ny-1,kkk+127))-(kkk)+1)%2)+1; k<=min(ny-1,kkk+127); k=k+1) {...",shape=box];
	ForLoop11311869 -> 11338401;
	ForLoop11311869 -> _JOIN_11311869;
	_JOIN_11310137 [label="_JOIN_11310137None...",shape=box];
	_JOIN_11310137 -> ForLoop11310217;
	11339791 [label="11339791  double scv_103;...",shape=box];
	ForLoop11313677 [label="ForLoop11313677  for (k=kkk; k<=min(ny-1,kkk+127)-1; k=k+2) {...",shape=box];
	ForLoop11313677 -> 11340490;
	ForLoop11313677 -> _JOIN_11313677;
	ForLoop11313757 [label="ForLoop11313757  for (k=(min(ny-1,kkk+127))-(((min(ny-1,kkk+127))-(kkk)+1)%2)+1; k<=min(ny-1,kkk+127); k=k+1) {...",shape=box];
	ForLoop11313757 -> 11340625;
	ForLoop11313757 -> _JOIN_11313757;
	ForLoop11313521 [label="ForLoop11313521  for (k=(min(ny-1,kkk+127))-(((min(ny-1,kkk+127))-(kkk)+1)%2)+1; k<=min(ny-1,kkk+127); k=k+1) {...",shape=box];
	ForLoop11313521 -> 11340347;
	ForLoop11313521 -> _JOIN_11313521;
	ForLoop11311397 [label="ForLoop11311397  for (k=(min(ny-1,kkk+127))-(((min(ny-1,kkk+127))-(kkk)+1)%2)+1; k<=min(ny-1,kkk+127); k=k+1) {...",shape=box];
	ForLoop11311397 -> 11337845;
	ForLoop11311397 -> _JOIN_11311397;
	11333953 [label="11333953  double scv_40;...",shape=box];
	11196205 [label="11196205  int i;...",shape=box];
	11306209 [label="11306209  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	11339656 [label="11339656  double scv_101, scv_102;...",shape=box];
	11340625 [label="11340625  double scv_112;...",shape=box];
	ForLoop11312341 [label="ForLoop11312341  for (k=(min(ny-1,kkk+127))-(((min(ny-1,kkk+127))-(kkk)+1)%2)+1; k<=min(ny-1,kkk+127); k=k+1) {...",shape=box];
	ForLoop11312341 -> 11338957;
	ForLoop11312341 -> _JOIN_11312341;
	11334930 [label="11334930  double scv_50, scv_51;...",shape=box];
	ForLoop11313049 [label="ForLoop11313049  for (k=(min(ny-1,kkk+127))-(((min(ny-1,kkk+127))-(kkk)+1)%2)+1; k<=min(ny-1,kkk+127); k=k+1) {...",shape=box];
	ForLoop11313049 -> 11339791;
	ForLoop11313049 -> _JOIN_11313049;
	11311665 [label="11311665  for (k=kkk; k<=min(ny-1,kkk+127); k=k+1) ...",shape=box];
	_JOIN_11308249 [label="_JOIN_11308249None...",shape=box];
	_JOIN_11308249 -> ForLoop11308329;
	_JOIN_11308019 [label="_JOIN_11308019None...",shape=box];
	_JOIN_11308019 -> ForLoop11308093;
	11308597 [label="11308597  for (k=kkk; k<=min(ny-1,kkk+127); k=k+1) ...",shape=box];
	_JOIN_11314229 [label="_JOIN_11314229None...",shape=box];
	_JOIN_11314229 -> 11314261;
	_JOIN_11308565 [label="_JOIN_11308565None...",shape=box];
	_JOIN_11308565 -> 11308597;
	_JOIN_11196888 [label="_JOIN_11196888None...",shape=box];
	_JOIN_11196888 -> 11197241;
	11308361 [label="11308361  for (k=kkk; k<=min(ny-1,kkk+127); k=k+1) ...",shape=box];
	11328408 [label="11328408  double scv_5, scv_6, scv_7, scv_8, scv_9, scv_10, scv_11, scv_12;...",shape=box];
	ForLoop11313993 [label="ForLoop11313993  for (k=(min(ny-1,kkk+127))-(((min(ny-1,kkk+127))-(kkk)+1)%2)+1; k<=min(ny-1,kkk+127); k=k+1) {...",shape=box];
	ForLoop11313993 -> 11340903;
	ForLoop11313993 -> _JOIN_11313993;
	_JOIN_11310845 [label="_JOIN_11310845None...",shape=box];
	_JOIN_11310845 -> ForLoop11310925;
	_JOIN_11310925 [label="_JOIN_11310925None...",shape=box];
	_JOIN_11310925 -> 11310957;
	11336455 [label="11336455  double scv_67;...",shape=box];
	11310013 [label="11310013  for (k=kkk; k<=min(ny-1,kkk+127); k=k+1) ...",shape=box];
	_JOIN_11308093 [label="_JOIN_11308093None...",shape=box];
	_JOIN_11308093 -> 11308125;
	11340069 [label="11340069  double scv_106;...",shape=box];
	_JOIN_11311869 [label="_JOIN_11311869None...",shape=box];
	_JOIN_11311869 -> 11311901;
	ForLoop11314550 [label="ForLoop11314550  for (k=kkk; k<=min(ny-1,kkk+127)-1; k=k+2) {...",shape=box];
	ForLoop11314550 -> 11358281;
	ForLoop11314550 -> _JOIN_11314550;
	11340347 [label="11340347  double scv_109;...",shape=box];
	_JOIN_11308957 [label="_JOIN_11308957None...",shape=box];
	_JOIN_11308957 -> ForLoop11309037;
	_JOIN_11314658 [label="_JOIN_11314658None...",shape=box];
	_JOIN_11314658 -> 11359110;
	11312373 [label="11312373  for (k=kkk; k<=min(ny-1,kkk+127); k=k+1) ...",shape=box];
	11340903 [label="11340903  double scv_115;...",shape=box];
	11310721 [label="11310721  for (k=kkk; k<=min(ny-1,kkk+127); k=k+1) ...",shape=box];
	ForLoop11311789 [label="ForLoop11311789  for (k=kkk; k<=min(ny-1,kkk+127)-1; k=k+2) {...",shape=box];
	ForLoop11311789 -> 11338266;
	ForLoop11311789 -> _JOIN_11311789;
	11337710 [label="11337710  double scv_80, scv_81;...",shape=box];
	11334787 [label="11334787  double scv_49;...",shape=box];
	11335899 [label="11335899  double scv_61;...",shape=box];
	ForLoop11196888 [label="ForLoop11196888  for (i=0; i<=cbv_1; i=i+27) {...",shape=box];
	ForLoop11196888 -> 11196652;
	ForLoop11196888 -> _JOIN_11196888;
	_JOIN_11310453 [label="_JOIN_11310453None...",shape=box];
	_JOIN_11310453 -> 11310485;
	11310485 [label="11310485  for (k=kkk; k<=min(ny-1,kkk+127); k=k+1) ...",shape=box];
	11322625 [label="11322625  double scv_4;...",shape=box];
	11341181 [label="11341181  double scv_118;...",shape=box];
	11340212 [label="11340212  double scv_107, scv_108;...",shape=box];
	ForLoop11312969 [label="ForLoop11312969  for (k=kkk; k<=min(ny-1,kkk+127)-1; k=k+2) {...",shape=box];
	ForLoop11312969 -> 11339656;
	ForLoop11312969 -> _JOIN_11312969;
	_JOIN_11196957 [label="_JOIN_11196957None...",shape=box];
	_JOIN_11196957 -> 11301348;
	11359110 [label="11359110  tmp[i]=scv_149;...",shape=box];
	11359110 -> _JOIN_11314660;
	ForLoop11310925 [label="ForLoop11310925  for (k=(min(ny-1,kkk+127))-(((min(ny-1,kkk+127))-(kkk)+1)%2)+1; k<=min(ny-1,kkk+127); k=k+1) {...",shape=box];
	ForLoop11310925 -> 11337289;
	ForLoop11310925 -> _JOIN_11310925;
	_JOIN_11309665 [label="_JOIN_11309665None...",shape=box];
	_JOIN_11309665 -> ForLoop11309745;
	ForLoop11314663 [label="ForLoop11314663  for (ii=0; ii<=nx-1; ii=ii+256) {...",shape=box];
	ForLoop11314663 -> ForLoop11305886;
	ForLoop11314663 -> _JOIN_11314663;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 11196205;
	11314469 [label="11314469  for (k=kkk; k<=min(ny-1,kkk+127); k=k+1) ...",shape=box];
	11336598 [label="11336598  double scv_68, scv_69;...",shape=box];
	11311901 [label="11311901  for (k=kkk; k<=min(ny-1,kkk+127); k=k+1) ...",shape=box];
	ForLoop11308485 [label="ForLoop11308485  for (k=kkk; k<=min(ny-1,kkk+127)-1; k=k+2) {...",shape=box];
	ForLoop11308485 -> 11334374;
	ForLoop11308485 -> _JOIN_11308485;
	ForLoop11310845 [label="ForLoop11310845  for (k=kkk; k<=min(ny-1,kkk+127)-1; k=k+2) {...",shape=box];
	ForLoop11310845 -> 11337154;
	ForLoop11310845 -> _JOIN_11310845;
	ForLoop11309273 [label="ForLoop11309273  for (k=(min(ny-1,kkk+127))-(((min(ny-1,kkk+127))-(kkk)+1)%2)+1; k<=min(ny-1,kkk+127); k=k+1) {...",shape=box];
	ForLoop11309273 -> 11335343;
	ForLoop11309273 -> _JOIN_11309273;
	_JOIN_11313049 [label="_JOIN_11313049None...",shape=box];
	_JOIN_11313049 -> 11313081;
	11334231 [label="11334231  double scv_43;...",shape=box];
	ForLoop11314263 [label="ForLoop11314263  for (kkk=0; kkk<=ny-1; kkk=kkk+128) {...",shape=box];
	ForLoop11314263 -> 11307938;
	ForLoop11314263 -> _JOIN_11314263;
	_JOIN_11311081 [label="_JOIN_11311081None...",shape=box];
	_JOIN_11311081 -> ForLoop11311161;
	11338123 [label="11338123  double scv_85;...",shape=box];
	ForLoop11314265 [label="ForLoop11314265  for (i=it; i<=min(nx-1,ii+255)-26; i=i+27) {...",shape=box];
	ForLoop11314265 -> 11357268;
	ForLoop11314265 -> _JOIN_11314265;
	11330474 [label="11330474  double scv_37;...",shape=box];
	ForLoop11305850 [label="ForLoop11305850  for (k=(min(ny-1,kkk+127))-(((min(ny-1,kkk+127))-(kkk)+1)%2)+1; k<=min(ny-1,kkk+127); k=k+1) {...",shape=box];
	ForLoop11305850 -> 11322625;
	ForLoop11305850 -> _JOIN_11305850;
	_JOIN_11302485 [label="_JOIN_11302485None...",shape=box];
	_JOIN_11302485 -> _JOIN_11302487;
	ForLoop11308565 [label="ForLoop11308565  for (k=(min(ny-1,kkk+127))-(((min(ny-1,kkk+127))-(kkk)+1)%2)+1; k<=min(ny-1,kkk+127); k=k+1) {...",shape=box];
	ForLoop11308565 -> 11334509;
	ForLoop11308565 -> _JOIN_11308565;
	_JOIN_11302487 [label="_JOIN_11302487None...",shape=box];
	_JOIN_11302487 -> _JOIN_11302488;
	11337011 [label="11337011  double scv_73;...",shape=box];
	_JOIN_11302488 [label="_JOIN_11302488None...",shape=box];
	_JOIN_11302488 -> ForLoop11305884;
	11309777 [label="11309777  for (k=kkk; k<=min(ny-1,kkk+127); k=k+1) ...",shape=box];
	11339100 [label="11339100  double scv_95, scv_96;...",shape=box];
	_JOIN_11312733 [label="_JOIN_11312733None...",shape=box];
	_JOIN_11312733 -> ForLoop11312813;
	ForLoop11309901 [label="ForLoop11309901  for (k=kkk; k<=min(ny-1,kkk+127)-1; k=k+2) {...",shape=box];
	ForLoop11309901 -> 11336042;
	ForLoop11309901 -> _JOIN_11309901;
	_JOIN_11312813 [label="_JOIN_11312813None...",shape=box];
	_JOIN_11312813 -> 11312845;
	ForLoop11313913 [label="ForLoop11313913  for (k=kkk; k<=min(ny-1,kkk+127)-1; k=k+2) {...",shape=box];
	ForLoop11313913 -> 11340768;
	ForLoop11313913 -> _JOIN_11313913;
	11337432 [label="11337432  double scv_77, scv_78;...",shape=box];
	_JOIN_11305850 [label="_JOIN_11305850None...",shape=box];
	_JOIN_11305850 -> 11305882;
	11358281 [label="11358281  double scv_146, scv_147;...",shape=box];
	_JOIN_11310689 [label="_JOIN_11310689None...",shape=box];
	_JOIN_11310689 -> 11310721;
	11312137 [label="11312137  for (k=kkk; k<=min(ny-1,kkk+127); k=k+1) ...",shape=box];
	_JOIN_11309273 [label="_JOIN_11309273None...",shape=box];
	_JOIN_11309273 -> 11309305;
	_JOIN_11314663 [label="_JOIN_11314663None...",shape=box];
	_JOIN_11314660 [label="_JOIN_11314660None...",shape=box];
	_JOIN_11314660 -> _JOIN_11314663;
	ForLoop11308019 [label="ForLoop11308019  for (k=kkk; k<=min(ny-1,kkk+127)-1; k=k+2) {...",shape=box];
	ForLoop11308019 -> 11333827;
	ForLoop11308019 -> _JOIN_11308019;
	_JOIN_11308485 [label="_JOIN_11308485None...",shape=box];
	_JOIN_11308485 -> ForLoop11308565;
	11313789 [label="11313789  for (k=kkk; k<=min(ny-1,kkk+127); k=k+1) ...",shape=box];
	ForLoop11313205 [label="ForLoop11313205  for (k=kkk; k<=min(ny-1,kkk+127)-1; k=k+2) {...",shape=box];
	ForLoop11313205 -> 11339934;
	ForLoop11313205 -> _JOIN_11313205;
	11335486 [label="11335486  double scv_56, scv_57;...",shape=box];
	ForLoop11309981 [label="ForLoop11309981  for (k=(min(ny-1,kkk+127))-(((min(ny-1,kkk+127))-(kkk)+1)%2)+1; k<=min(ny-1,kkk+127); k=k+1) {...",shape=box];
	ForLoop11309981 -> 11336177;
	ForLoop11309981 -> _JOIN_11309981;
	11358407 [label="11358407  double scv_148;...",shape=box];
	ForLoop11309037 [label="ForLoop11309037  for (k=(min(ny-1,kkk+127))-(((min(ny-1,kkk+127))-(kkk)+1)%2)+1; k<=min(ny-1,kkk+127); k=k+1) {...",shape=box];
	ForLoop11309037 -> 11335065;
	ForLoop11309037 -> _JOIN_11309037;
	11340768 [label="11340768  double scv_113, scv_114;...",shape=box];
	ForLoop11311161 [label="ForLoop11311161  for (k=(min(ny-1,kkk+127))-(((min(ny-1,kkk+127))-(kkk)+1)%2)+1; k<=min(ny-1,kkk+127); k=k+1) {...",shape=box];
	ForLoop11311161 -> 11337567;
	ForLoop11311161 -> _JOIN_11311161;
	ForLoop11302485 [label="ForLoop11302485  for (j=jj; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop11302485 -> 11316204;
	ForLoop11302485 -> _JOIN_11302485;
	_JOIN_11308801 [label="_JOIN_11308801None...",shape=box];
	_JOIN_11308801 -> 11308833;
	11314421 [label="11314421  scv_149=scv_149+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	11314421 -> _JOIN_11314422;
	ForLoop11302488 [label="ForLoop11302488  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop11302488 -> ForLoop11302487;
	ForLoop11302488 -> _JOIN_11302488;
	_JOIN_11310373 [label="_JOIN_11310373None...",shape=box];
	_JOIN_11310373 -> ForLoop11310453;
	_JOIN_11314263 [label="_JOIN_11314263None...",shape=box];
	_JOIN_11314263 -> 11357286;
	11307938 [label="11307938  for (k=kkk; k<=min(ny-1,kkk+127); k=k+1) ...",shape=box];
	ForLoop11308093 [label="ForLoop11308093  for (k=(min(ny-1,kkk+127))-(((min(ny-1,kkk+127))-(kkk)+1)%2)+1; k<=min(ny-1,kkk+127); k=k+1) {...",shape=box];
	ForLoop11308093 -> 11333953;
	ForLoop11308093 -> _JOIN_11308093;
	ForLoop11309665 [label="ForLoop11309665  for (k=kkk; k<=min(ny-1,kkk+127)-1; k=k+2) {...",shape=box];
	ForLoop11309665 -> 11335764;
	ForLoop11309665 -> _JOIN_11309665;
	11357268 [label="11357268  double scv_119, scv_120, scv_121, scv_122, scv_123, scv_124, scv_125, scv_126;...",shape=box];
	11337289 [label="11337289  double scv_76;...",shape=box];
	ForLoop11314229 [label="ForLoop11314229  for (k=(min(ny-1,kkk+127))-(((min(ny-1,kkk+127))-(kkk)+1)%2)+1; k<=min(ny-1,kkk+127); k=k+1) {...",shape=box];
	ForLoop11314229 -> 11341181;
	ForLoop11314229 -> _JOIN_11314229;
	_JOIN_11313677 [label="_JOIN_11313677None...",shape=box];
	_JOIN_11313677 -> ForLoop11313757;
	_JOIN_11309981 [label="_JOIN_11309981None...",shape=box];
	_JOIN_11309981 -> 11310013;
	11338679 [label="11338679  double scv_91;...",shape=box];
	11357286 [label="11357286  tmp[(i+20)]=scv_119;...",shape=box];
	ForLoop11314425 [label="ForLoop11314425  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop11314425 -> ForLoop11314424;
	ForLoop11314425 -> _JOIN_11314425;
	11335621 [label="11335621  double scv_58;...",shape=box];
	11338822 [label="11338822  double scv_92, scv_93;...",shape=box];
	_JOIN_11314265 [label="_JOIN_11314265None...",shape=box];
	_JOIN_11314265 -> ForLoop11314660;
	11196652 [label="11196652  y[i]=0.0;...",shape=box];
	11313553 [label="11313553  for (k=kkk; k<=min(ny-1,kkk+127); k=k+1) ...",shape=box];
	11337845 [label="11337845  double scv_82;...",shape=box];
	11302532 [label="11302532  for (k=kkk; k<=min(ny-1,kkk+127); k=k+1) ...",shape=box];
	ForLoop11314660 [label="ForLoop11314660  for (i=(min(nx-1,ii+255))-(((min(nx-1,ii+255))-(it)+1)%27)+1; i<=min(nx-1,ii+255); i=i+1) {...",shape=box];
	ForLoop11314660 -> 11359098;
	ForLoop11314660 -> _JOIN_11314660;
	11335343 [label="11335343  double scv_55;...",shape=box];
	11301450 [label="11301450  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	11301450 -> ForLoop11302485;
	11311193 [label="11311193  for (k=kkk; k<=min(ny-1,kkk+127); k=k+1) ...",shape=box];
	11301348 [label="11301348  double x_copy[256];...",shape=box];
	ForLoop11310217 [label="ForLoop11310217  for (k=(min(ny-1,kkk+127))-(((min(ny-1,kkk+127))-(kkk)+1)%2)+1; k<=min(ny-1,kkk+127); k=k+1) {...",shape=box];
	ForLoop11310217 -> 11336455;
	ForLoop11310217 -> _JOIN_11310217;
	_JOIN_11311161 [label="_JOIN_11311161None...",shape=box];
	_JOIN_11311161 -> 11311193;
	_JOIN_11312261 [label="_JOIN_11312261None...",shape=box];
	_JOIN_11312261 -> ForLoop11312341;
	_JOIN_11312497 [label="_JOIN_11312497None...",shape=box];
	_JOIN_11312497 -> ForLoop11312577;
	ForLoop11312261 [label="ForLoop11312261  for (k=kkk; k<=min(ny-1,kkk+127)-1; k=k+2) {...",shape=box];
	ForLoop11312261 -> 11338822;
	ForLoop11312261 -> _JOIN_11312261;
	11339513 [label="11339513  double scv_100;...",shape=box];
	ForLoop11312813 [label="ForLoop11312813  for (k=(min(ny-1,kkk+127))-(((min(ny-1,kkk+127))-(kkk)+1)%2)+1; k<=min(ny-1,kkk+127); k=k+1) {...",shape=box];
	ForLoop11312813 -> 11339513;
	ForLoop11312813 -> _JOIN_11312813;
	ForLoop11307890 [label="ForLoop11307890  for (j=jj; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop11307890 -> 11330474;
	ForLoop11307890 -> _JOIN_11307890;
	ForLoop11307892 [label="ForLoop11307892  for (jj=jjj; jj<=min(ny-1,jjj+1792); jj=jj+256) {...",shape=box];
	ForLoop11307892 -> 11306209;
	ForLoop11307892 -> _JOIN_11307892;
	ForLoop11307894 [label="ForLoop1130789expected=9369846271501.798828
actual=9369846271501.798828
4  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop11307894 -> ForLoop11307892;
	ForLoop11307894 -> _JOIN_11307894;
	11338401 [label="11338401  double scv_88;...",shape=box];
	11334509 [label="11334509  double scv_46;...",shape=box];
	ForLoop11309193 [label="ForLoop11309193  for (k=kkk; k<=min(ny-1,kkk+127)-1; k=k+2) {...",shape=box];
	ForLoop11309193 -> 11335208;
	ForLoop11309193 -> _JOIN_11309193;
	11336320 [label="11336320  double scv_65, scv_66;...",shape=box];
	_JOIN_11311789 [label="_JOIN_11311789None...",shape=box];
	_JOIN_11311789 -> ForLoop11311869;
	11321072 [label="11321072  double scv_2, scv_3;...",shape=box];
	11339235 [label="11339235  double scv_97;...",shape=box];
	11310957 [label="11310957  for (k=kkk; k<=min(ny-1,kkk+127); k=k+1) ...",shape=box];
	ForLoop11312497 [label="ForLoop11312497  for (k=kkk; k<=min(ny-1,kkk+127)-1; k=k+2) {...",shape=box];
	ForLoop11312497 -> 11339100;
	ForLoop11312497 -> _JOIN_11312497;
	_JOIN_11314550 [label="_JOIN_11314550None...",shape=box];
	_JOIN_11314550 -> ForLoop11314624;
	11313081 [label="11313081  for (k=kkk; k<=min(ny-1,kkk+127); k=k+1) ...",shape=box];
	11337567 [label="11337567  double scv_79;...",shape=box];
	_JOIN_11313913 [label="_JOIN_11313913None...",shape=box];
	_JOIN_11313913 -> ForLoop11313993;
	_JOIN_11309901 [label="_JOIN_11309901None...",shape=box];
	_JOIN_11309901 -> ForLoop11309981;
	11309305 [label="11309305  for (k=kkk; k<=min(ny-1,kkk+127); k=k+1) ...",shape=box];
	_JOIN_11312577 [label="_JOIN_11312577None...",shape=box];
	_JOIN_11312577 -> 11312609;
	_JOIN_11313757 [label="_JOIN_11313757None...",shape=box];
	_JOIN_11313757 -> 11313789;
	ForLoop11308329 [label="ForLoop11308329  for (k=(min(ny-1,kkk+127))-(((min(ny-1,kkk+127))-(kkk)+1)%2)+1; k<=min(ny-1,kkk+127); k=k+1) {...",shape=box];
	ForLoop11308329 -> 11334231;
	ForLoop11308329 -> _JOIN_11308329;
	11313317 [label="11313317  for (k=kkk; k<=min(ny-1,kkk+127); k=k+1) ...",shape=box];
	ForLoop11310373 [label="ForLoop11310373  for (k=kkk; k<=min(ny-1,kkk+127)-1; k=k+2) {...",shape=box];
	ForLoop11310373 -> 11336598;
	ForLoop11310373 -> _JOIN_11310373;
	11197241 [label="11197241  register int cbv_2, cbv_3;...",shape=box];
	_JOIN_11310217 [label="_JOIN_11310217None...",shape=box];
	_JOIN_11310217 -> 11310249;
	_JOIN_11309193 [label="_JOIN_11309193None...",shape=box];
	_JOIN_11309193 -> ForLoop11309273;
	_JOIN_11311633 [label="_JOIN_11311633None...",shape=box];
	_JOIN_11311633 -> 11311665;
	ForLoop11310453 [label="ForLoop11310453  for (k=(min(ny-1,kkk+127))-(((min(ny-1,kkk+127))-(kkk)+1)%2)+1; k<=min(ny-1,kkk+127); k=k+1) {...",shape=box];
	ForLoop11310453 -> 11336733;
	ForLoop11310453 -> _JOIN_11310453;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest53.exe __orio_perftest53.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest53.exe  
{'[5, 5, 0, 0, 6, 2, 1, 1, 26, 26, 0, 1, 2, 0, 0, 1, 1, 0]' : 0.153773}
{'[5, 5, 0, 0, 6, 2, 1, 1, 26, 26, 0, 1, 2, 0, 0, 1, 1, 0]' : 0.153439}
{'[5, 5, 0, 0, 6, 2, 1, 1, 26, 26, 0, 1, 2, 0, 0, 1, 1, 0]' : 0.153444}
{'[5, 5, 0, 0, 6, 2, 1, 1, 26, 26, 0, 1, 2, 0, 0, 1, 1, 0]' : 0.153637}
{'[5, 5, 0, 0, 6, 2, 1, 1, 26, 26, 0, 1, 2, 0, 0, 1, 1, 0]' : 0.153301}
{'[5, 5, 0, 0, 6, 2, 1, 1, 26, 26, 0, 1, 2, 0, 0, 1, 1, 0]' : 0.15348}
{'[5, 5, 0, 0, 6, 2, 1, 1, 26, 26, 0, 1, 2, 0, 0, 1, 1, 0]' : 0.153709}
{'[5, 5, 0, 0, 6, 2, 1, 1, 26, 26, 0, 1, 2, 0, 0, 1, 1, 0]' : 0.153483}
{'[5, 5, 0, 0, 6, 2, 1, 1, 26, 26, 0, 1, 2, 0, 0, 1, 1, 0]' : 0.154699}
{'[5, 5, 0, 0, 6, 2, 1, 1, 26, 26, 0, 1, 2, 0, 0, 1, 1, 0]' : 0.153373}
{'[5, 5, 0, 0, 6, 2, 1, 1, 26, 26, 0, 1, 2, 0, 0, 1, 1, 0]' : 0.153685}
{'[5, 5, 0, 0, 6, 2, 1, 1, 26, 26, 0, 1, 2, 0, 0, 1, 1, 0]' : 0.153352}
{'[5, 5, 0, 0, 6, 2, 1, 1, 26, 26, 0, 1, 2, 0, 0, 1, 1, 0]' : 0.153373}
{'[5, 5, 0, 0, 6, 2, 1, 1, 26, 26, 0, 1, 2, 0, 0, 1, 1, 0]' : 0.153395}
{'[5, 5, 0, 0, 6, 2, 1, 1, 26, 26, 0, 1, 2, 0, 0, 1, 1, 0]' : 0.153306}
{'[5, 5, 0, 0, 6, 2, 1, 1, 26, 26, 0, 1, 2, 0, 0, 1, 1, 0]' : 0.153411}
{'[5, 5, 0, 0, 6, 2, 1, 1, 26, 26, 0, 1, 2, 0, 0, 1, 1, 0]' : 0.153427}
{'[5, 5, 0, 0, 6, 2, 1, 1, 26, 26, 0, 1, 2, 0, 0, 1, 1, 0]' : 0.153735}
{'[5, 5, 0, 0, 6, 2, 1, 1, 26, 26, 0, 1, 2, 0, 0, 1, 1, 0]' : 0.153312}
{'[5, 5, 0, 0, 6, 2, 1, 1, 26, 26, 0, 1, 2, 0, 0, 1, 1, 0]' : 0.153664}
{'[5, 5, 0, 0, 6, 2, 1, 1, 26, 26, 0, 1, 2, 0, 0, 1, 1, 0]' : 0.153857}
{'[5, 5, 0, 0, 6, 2, 1, 1, 26, 26, 0, 1, 2, 0, 0, 1, 1, 0]' : 0.154616}
{'[5, 5, 0, 0, 6, 2, 1, 1, 26, 26, 0, 1, 2, 0, 0, 1, 1, 0]' : 0.153591}
{'[5, 5, 0, 0, 6, 2, 1, 1, 26, 26, 0, 1, 2, 0, 0, 1, 1, 0]' : 0.153291}
{'[5, 5, 0, 0, 6, 2, 1, 1, 26, 26, 0, 1, 2, 0, 0, 1, 1, 0]' : 0.153567}
{'[5, 5, 0, 0, 6, 2, 1, 1, 26, 26, 0, 1, 2, 0, 0, 1, 1, 0]' : 0.153574}
{'[5, 5, 0, 0, 6, 2, 1, 1, 26, 26, 0, 1, 2, 0, 0, 1, 1, 0]' : 0.15334}
{'[5, 5, 0, 0, 6, 2, 1, 1, 26, 26, 0, 1, 2, 0, 0, 1, 1, 0]' : 0.153716}
{'[5, 5, 0, 0, 6, 2, 1, 1, 26, 26, 0, 1, 2, 0, 0, 1, 1, 0]' : 0.153296}
{'[5, 5, 0, 0, 6, 2, 1, 1, 26, 26, 0, 1, 2, 0, 0, 1, 1, 0]' : 0.153637}

out:
 ["{'[5, 5, 0, 0, 6, 2, 1, 1, 26, 26, 0, 1, 2, 0, 0, 1, 1, 0]' : 0.153773}", "{'[5, 5, 0, 0, 6, 2, 1, 1, 26, 26, 0, 1, 2, 0, 0, 1, 1, 0]' : 0.153439}", "{'[5, 5, 0, 0, 6, 2, 1, 1, 26, 26, 0, 1, 2, 0, 0, 1, 1, 0]' : 0.153444}", "{'[5, 5, 0, 0, 6, 2, 1, 1, 26, 26, 0, 1, 2, 0, 0, 1, 1, 0]' : 0.153637}", "{'[5, 5, 0, 0, 6, 2, 1, 1, 26, 26, 0, 1, 2, 0, 0, 1, 1, 0]' : 0.153301}", "{'[5, 5, 0, 0, 6, 2, 1, 1, 26, 26, 0, 1, 2, 0, 0, 1, 1, 0]' : 0.15348}", "{'[5, 5, 0, 0, 6, 2, 1, 1, 26, 26, 0, 1, 2, 0, 0, 1, 1, 0]' : 0.153709}", "{'[5, 5, 0, 0, 6, 2, 1, 1, 26, 26, 0, 1, 2, 0, 0, 1, 1, 0]' : 0.153483}", "{'[5, 5, 0, 0, 6, 2, 1, 1, 26, 26, 0, 1, 2, 0, 0, 1, 1, 0]' : 0.154699}", "{'[5, 5, 0, 0, 6, 2, 1, 1, 26, 26, 0, 1, 2, 0, 0, 1, 1, 0]' : 0.153373}", "{'[5, 5, 0, 0, 6, 2, 1, 1, 26, 26, 0, 1, 2, 0, 0, 1, 1, 0]' : 0.153685}", "{'[5, 5, 0, 0, 6, 2, 1, 1, 26, 26, 0, 1, 2, 0, 0, 1, 1, 0]' : 0.153352}", "{'[5, 5, 0, 0, 6, 2, 1, 1, 26, 26, 0, 1, 2, 0, 0, 1, 1, 0]' : 0.153373}", "{'[5, 5, 0, 0, 6, 2, 1, 1, 26, 26, 0, 1, 2, 0, 0, 1, 1, 0]' : 0.153395}", "{'[5, 5, 0, 0, 6, 2, 1, 1, 26, 26, 0, 1, 2, 0, 0, 1, 1, 0]' : 0.153306}", "{'[5, 5, 0, 0, 6, 2, 1, 1, 26, 26, 0, 1, 2, 0, 0, 1, 1, 0]' : 0.153411}", "{'[5, 5, 0, 0, 6, 2, 1, 1, 26, 26, 0, 1, 2, 0, 0, 1, 1, 0]' : 0.153427}", "{'[5, 5, 0, 0, 6, 2, 1, 1, 26, 26, 0, 1, 2, 0, 0, 1, 1, 0]' : 0.153735}", "{'[5, 5, 0, 0, 6, 2, 1, 1, 26, 26, 0, 1, 2, 0, 0, 1, 1, 0]' : 0.153312}", "{'[5, 5, 0, 0, 6, 2, 1, 1, 26, 26, 0, 1, 2, 0, 0, 1, 1, 0]' : 0.153664}", "{'[5, 5, 0, 0, 6, 2, 1, 1, 26, 26, 0, 1, 2, 0, 0, 1, 1, 0]' : 0.153857}", "{'[5, 5, 0, 0, 6, 2, 1, 1, 26, 26, 0, 1, 2, 0, 0, 1, 1, 0]' : 0.154616}", "{'[5, 5, 0, 0, 6, 2, 1, 1, 26, 26, 0, 1, 2, 0, 0, 1, 1, 0]' : 0.153591}", "{'[5, 5, 0, 0, 6, 2, 1, 1, 26, 26, 0, 1, 2, 0, 0, 1, 1, 0]' : 0.153291}", "{'[5, 5, 0, 0, 6, 2, 1, 1, 26, 26, 0, 1, 2, 0, 0, 1, 1, 0]' : 0.153567}", "{'[5, 5, 0, 0, 6, 2, 1, 1, 26, 26, 0, 1, 2, 0, 0, 1, 1, 0]' : 0.153574}", "{'[5, 5, 0, 0, 6, 2, 1, 1, 26, 26, 0, 1, 2, 0, 0, 1, 1, 0]' : 0.15334}", "{'[5, 5, 0, 0, 6, 2, 1, 1, 26, 26, 0, 1, 2, 0, 0, 1, 1, 0]' : 0.153716}", "{'[5, 5, 0, 0, 6, 2, 1, 1, 26, 26, 0, 1, 2, 0, 0, 1, 1, 0]' : 0.153296}", "{'[5, 5, 0, 0, 6, 2, 1, 1, 26, 26, 0, 1, 2, 0, 0, 1, 1, 0]' : 0.153637}"]
returning from 'run': {'[5, 5, 0, 0, 6, 2, 1, 1, 26, 26, 0, 1, 2, 0, 0, 1, 1, 0]': ([0.153773, 0.153439, 0.153444, 0.153637, 0.153301, 0.15348, 0.153709, 0.153483, 0.154699, 0.153373, 0.153685, 0.153352, 0.153373, 0.153395, 0.153306, 0.153411, 0.153427, 0.153735, 0.153312, 0.153664, 0.153857, 0.154616, 0.153591, 0.153291, 0.153567, 0.153574, 0.15334, 0.153716, 0.153296, 0.153637], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.153773, 0.153439, 0.153444, 0.153637, 0.153301, 0.15348, 0.153709, 0.153483, 0.154699, 0.153373, 0.153685, 0.153352, 0.153373, 0.153395, 0.153306, 0.153411, 0.153427, 0.153735, 0.153312, 0.153664, 0.153857, 0.154616, 0.153591, 0.153291, 0.153567, 0.153574, 0.15334, 0.153716, 0.153296, 0.153637], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[5, 5, 0, 0, 6, 2, 1, 1, 26, 26, 0, 1, 2, 0, 0, 1, 1, 0]': ([0.153773, 0.153439, 0.153444, 0.153637, 0.153301, 0.15348, 0.153709, 0.153483, 0.154699, 0.153373, 0.153685, 0.153352, 0.153373, 0.153395, 0.153306, 0.153411, 0.153427, 0.153735, 0.153312, 0.153664, 0.153857, 0.154616, 0.153591, 0.153291, 0.153567, 0.153574, 0.15334, 0.153716, 0.153296, 0.153637], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [1, 5, 5, 1, 5, 1, 1, 26, 0, 7, 2, 0, 0, 0, 0, 0]
Fixed Factors: {'T2_J': 6, 'VEC1': 1}
Testing candidate 16: [1, 5, 5, 1, 6, 5, 1, 1, 26, 0, 7, 2, 0, 0, 0, 0, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	6
        Additions: 		158
        Multiplications: 	26
        Divisions: 		0
        Logical: 		0
        Reads: 			338
        Writes: 		80
        Comparisons:		16
        Gotos: 			0
        
digraph CFG {
	ForLoop11392438 [label="ForLoop11392438  for (k=(min(ny-1,kk+255))-(((min(ny-1,kk+255))-(kk)+1)%3)+1; k<=min(ny-1,kk+255); k=k+1) ...",shape=box];
	ForLoop11392438 -> 11392437;
	ForLoop11392438 -> _JOIN_11392438;
	_JOIN_11376288 [label="_JOIN_11376288None...",shape=box];
	_JOIN_11376288 -> _JOIN_11376289;
	_JOIN_11391070 [label="_JOIN_11391070None...",shape=box];
	_JOIN_11391070 -> ForLoop11391199;
	_JOIN_11392306 [label="_JOIN_11392306None...",shape=box];
	_JOIN_11392306 -> ForLoop11392438;
	_JOIN_11376287 [label="_JOIN_11376287None...",shape=box];
	_JOIN_11376287 -> _JOIN_11376288;
	ForLoop11372600 [label="ForLoop11372600  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop11372600 -> 11372599;
	ForLoop11372600 -> _JOIN_11372600;
	_JOIN_11376289 [label="_JOIN_11376289None...",shape=box];
	_JOIN_11391199 [label="_JOIN_11391199None...",shape=box];
	_JOIN_11391199 -> _JOIN_11377136;
	_JOIN_11378813 [label="_JOIN_11378813None...",shape=box];
	_JOIN_11378813 -> _JOIN_11376287;
	_JOIN_11378812 [label="_JOIN_11378812None...",shape=box];
	_JOIN_11378812 -> _JOIN_11378813;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 11371848;
	_JOIN_11372531 [label="_JOIN_11372531None...",shape=box];
	_JOIN_11372531 -> 11372884;
	11383238 [label="11383238  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	11372295 [label="11372295  y[i]=0.0;...",shape=box];
	_JOIN_11377136 [label="_JOIN_11377136None...",shape=box];
	_JOIN_11377136 -> _JOIN_11377137;
	ForLoop11391199 [label="ForLoop11391199  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jj)+1)%8)+1; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	ForLoop11391199 -> 11391198;
	ForLoop11391199 -> _JOIN_11391199;
	11390879 [label="11390879  tmp[i]=tmp[i]+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop11377136 [label="ForLoop11377136  for (jj=jjj; jj<=min(ny-1,jjj+1792); jj=jj+256) {...",shape=box];
	ForLoop11377136 -> 11383238;
	ForLoop11377136 -> _JOIN_11377136;
	11372599 [label="11372599  y[i]=0.0;...",shape=box];
	11372599 -> _JOIN_11372600;
	ForLoop11392306 [label="ForLoop11392306  for (k=kk; k<=min(ny-1,kk+255)-2; k=k+3) {...",shape=box];
	ForLoop11392306 -> 11392240;
	ForLoop11392306 -> _JOIN_11392306;
	11392240 [label="11392240  y_copy[(k-kk)]=y_copy[(k-kk)]+A[i*ny+k]*tmp[i];...",shape=box];
	11372884 [label="11372884  register int cbv_2, cbv_3;...",shape=box];
	ForLoop11377137 [label="ForLoop11377137  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) ...",shape=box];
	ForLoop11377137 -> ForLoop11377136;
	ForLoop11377137 -> _JOIN_11377137;
	11371848 [label="11371848  int i;...",shape=box];
	ForLoop11378813 [label="ForLoop11378813  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) ...",shape=box];
	ForLoop11378813 -> ForLoop11378812;
	ForLoop11378813 -> _JOIN_11378813;
	ForLoop11376288 [label="ForLoop11376288  for (ii=iii; ii<=min(nx-1,iii+48); ii=ii+16) ...",shape=box];
	ForLoop11376288 -> ForLoop11376287;
	ForLoop11376288 -> _JOIN_11376288;
	ForLoop11376289 [label="ForLoop113762expected=9369846271501.798828
actual=9369846271501.798828
89  for (iii=0; iii<=nx-1; iii=iii+64) ...",shape=box];
	ForLoop11376289 -> ForLoop11376288;
	ForLoop11376289 -> _JOIN_11376289;
	11392437 [label="11392437  y_copy[(k-kk)]=y_copy[(k-kk)]+A[i*ny+k]*tmp[i];...",shape=box];
	11392437 -> _JOIN_11392438;
	11376179 [label="11376179  tmp[i]=0;...",shape=box];
	11376179 -> ForLoop11377137;
	11381102 [label="11381102  for (k=kk; k<=min(ny-1,kk+255); k=k+1) ...",shape=box];
	11381102 -> _JOIN_11378812;
	11381060 [label="11381060  for (k=kk; k<=min(ny-1,kk+255); k=k+1) ...",shape=box];
	ForLoop11376287 [label="ForLoop11376287  for (i=ii; i<=min(nx-1,ii+15); i=i+1) {...",shape=box];
	ForLoop11376287 -> 11376179;
	ForLoop11376287 -> _JOIN_11376287;
	_JOIN_11372600 [label="_JOIN_11372600None...",shape=box];
	_JOIN_11372600 -> 11383186;
	11391198 [label="11391198  tmp[i]=tmp[i]+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	11391198 -> _JOIN_11391199;
	ForLoop11372531 [label="ForLoop11372531  for (i=0; i<=cbv_1; i=i+27) {...",shape=box];
	ForLoop11372531 -> 11372295;
	ForLoop11372531 -> _JOIN_11372531;
	11383186 [label="11383186  double x_copy[256];...",shape=box];
	ForLoop11391070 [label="ForLoop11391070  for (j=jj; j<=min(ny-1,jj+255)-7; j=j+8) {...",shape=box];
	ForLoop11391070 -> 11390879;
	ForLoop11391070 -> _JOIN_11391070;
	ForLoop11378812 [label="ForLoop11378812  for (kk=kkk; kk<=min(ny-1,kkk+768); kk=kk+256) {...",shape=box];
	ForLoop11378812 -> 11381060;
	ForLoop11378812 -> _JOIN_11378812;
	_JOIN_11392438 [label="_JOIN_11392438None...",shape=box];
	_JOIN_11392438 -> 11381102;
	_JOIN_11377137 [label="_JOIN_11377137None...",shape=box];
	_JOIN_11377137 -> ForLoop11378813;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest54.exe __orio_perftest54.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest54.exe  
{'[1, 5, 5, 1, 6, 5, 1, 1, 26, 0, 7, 2, 0, 0, 0, 0, 1, 0]' : 0.222749}
{'[1, 5, 5, 1, 6, 5, 1, 1, 26, 0, 7, 2, 0, 0, 0, 0, 1, 0]' : 0.222813}
{'[1, 5, 5, 1, 6, 5, 1, 1, 26, 0, 7, 2, 0, 0, 0, 0, 1, 0]' : 0.222797}
{'[1, 5, 5, 1, 6, 5, 1, 1, 26, 0, 7, 2, 0, 0, 0, 0, 1, 0]' : 0.22265}
{'[1, 5, 5, 1, 6, 5, 1, 1, 26, 0, 7, 2, 0, 0, 0, 0, 1, 0]' : 0.22271}
{'[1, 5, 5, 1, 6, 5, 1, 1, 26, 0, 7, 2, 0, 0, 0, 0, 1, 0]' : 0.223696}
{'[1, 5, 5, 1, 6, 5, 1, 1, 26, 0, 7, 2, 0, 0, 0, 0, 1, 0]' : 0.222795}
{'[1, 5, 5, 1, 6, 5, 1, 1, 26, 0, 7, 2, 0, 0, 0, 0, 1, 0]' : 0.222908}
{'[1, 5, 5, 1, 6, 5, 1, 1, 26, 0, 7, 2, 0, 0, 0, 0, 1, 0]' : 0.222685}
{'[1, 5, 5, 1, 6, 5, 1, 1, 26, 0, 7, 2, 0, 0, 0, 0, 1, 0]' : 0.222807}
{'[1, 5, 5, 1, 6, 5, 1, 1, 26, 0, 7, 2, 0, 0, 0, 0, 1, 0]' : 0.222681}
{'[1, 5, 5, 1, 6, 5, 1, 1, 26, 0, 7, 2, 0, 0, 0, 0, 1, 0]' : 0.222773}
{'[1, 5, 5, 1, 6, 5, 1, 1, 26, 0, 7, 2, 0, 0, 0, 0, 1, 0]' : 0.222654}
{'[1, 5, 5, 1, 6, 5, 1, 1, 26, 0, 7, 2, 0, 0, 0, 0, 1, 0]' : 0.222757}
{'[1, 5, 5, 1, 6, 5, 1, 1, 26, 0, 7, 2, 0, 0, 0, 0, 1, 0]' : 0.223981}
{'[1, 5, 5, 1, 6, 5, 1, 1, 26, 0, 7, 2, 0, 0, 0, 0, 1, 0]' : 0.222782}
{'[1, 5, 5, 1, 6, 5, 1, 1, 26, 0, 7, 2, 0, 0, 0, 0, 1, 0]' : 0.222601}
{'[1, 5, 5, 1, 6, 5, 1, 1, 26, 0, 7, 2, 0, 0, 0, 0, 1, 0]' : 0.222616}
{'[1, 5, 5, 1, 6, 5, 1, 1, 26, 0, 7, 2, 0, 0, 0, 0, 1, 0]' : 0.223004}
{'[1, 5, 5, 1, 6, 5, 1, 1, 26, 0, 7, 2, 0, 0, 0, 0, 1, 0]' : 0.222718}
{'[1, 5, 5, 1, 6, 5, 1, 1, 26, 0, 7, 2, 0, 0, 0, 0, 1, 0]' : 0.222963}
{'[1, 5, 5, 1, 6, 5, 1, 1, 26, 0, 7, 2, 0, 0, 0, 0, 1, 0]' : 0.222632}
{'[1, 5, 5, 1, 6, 5, 1, 1, 26, 0, 7, 2, 0, 0, 0, 0, 1, 0]' : 0.222751}
{'[1, 5, 5, 1, 6, 5, 1, 1, 26, 0, 7, 2, 0, 0, 0, 0, 1, 0]' : 0.223756}
{'[1, 5, 5, 1, 6, 5, 1, 1, 26, 0, 7, 2, 0, 0, 0, 0, 1, 0]' : 0.222922}
{'[1, 5, 5, 1, 6, 5, 1, 1, 26, 0, 7, 2, 0, 0, 0, 0, 1, 0]' : 0.222702}
{'[1, 5, 5, 1, 6, 5, 1, 1, 26, 0, 7, 2, 0, 0, 0, 0, 1, 0]' : 0.222657}
{'[1, 5, 5, 1, 6, 5, 1, 1, 26, 0, 7, 2, 0, 0, 0, 0, 1, 0]' : 0.223023}
{'[1, 5, 5, 1, 6, 5, 1, 1, 26, 0, 7, 2, 0, 0, 0, 0, 1, 0]' : 0.222687}
{'[1, 5, 5, 1, 6, 5, 1, 1, 26, 0, 7, 2, 0, 0, 0, 0, 1, 0]' : 0.222792}

out:
 ["{'[1, 5, 5, 1, 6, 5, 1, 1, 26, 0, 7, 2, 0, 0, 0, 0, 1, 0]' : 0.222749}", "{'[1, 5, 5, 1, 6, 5, 1, 1, 26, 0, 7, 2, 0, 0, 0, 0, 1, 0]' : 0.222813}", "{'[1, 5, 5, 1, 6, 5, 1, 1, 26, 0, 7, 2, 0, 0, 0, 0, 1, 0]' : 0.222797}", "{'[1, 5, 5, 1, 6, 5, 1, 1, 26, 0, 7, 2, 0, 0, 0, 0, 1, 0]' : 0.22265}", "{'[1, 5, 5, 1, 6, 5, 1, 1, 26, 0, 7, 2, 0, 0, 0, 0, 1, 0]' : 0.22271}", "{'[1, 5, 5, 1, 6, 5, 1, 1, 26, 0, 7, 2, 0, 0, 0, 0, 1, 0]' : 0.223696}", "{'[1, 5, 5, 1, 6, 5, 1, 1, 26, 0, 7, 2, 0, 0, 0, 0, 1, 0]' : 0.222795}", "{'[1, 5, 5, 1, 6, 5, 1, 1, 26, 0, 7, 2, 0, 0, 0, 0, 1, 0]' : 0.222908}", "{'[1, 5, 5, 1, 6, 5, 1, 1, 26, 0, 7, 2, 0, 0, 0, 0, 1, 0]' : 0.222685}", "{'[1, 5, 5, 1, 6, 5, 1, 1, 26, 0, 7, 2, 0, 0, 0, 0, 1, 0]' : 0.222807}", "{'[1, 5, 5, 1, 6, 5, 1, 1, 26, 0, 7, 2, 0, 0, 0, 0, 1, 0]' : 0.222681}", "{'[1, 5, 5, 1, 6, 5, 1, 1, 26, 0, 7, 2, 0, 0, 0, 0, 1, 0]' : 0.222773}", "{'[1, 5, 5, 1, 6, 5, 1, 1, 26, 0, 7, 2, 0, 0, 0, 0, 1, 0]' : 0.222654}", "{'[1, 5, 5, 1, 6, 5, 1, 1, 26, 0, 7, 2, 0, 0, 0, 0, 1, 0]' : 0.222757}", "{'[1, 5, 5, 1, 6, 5, 1, 1, 26, 0, 7, 2, 0, 0, 0, 0, 1, 0]' : 0.223981}", "{'[1, 5, 5, 1, 6, 5, 1, 1, 26, 0, 7, 2, 0, 0, 0, 0, 1, 0]' : 0.222782}", "{'[1, 5, 5, 1, 6, 5, 1, 1, 26, 0, 7, 2, 0, 0, 0, 0, 1, 0]' : 0.222601}", "{'[1, 5, 5, 1, 6, 5, 1, 1, 26, 0, 7, 2, 0, 0, 0, 0, 1, 0]' : 0.222616}", "{'[1, 5, 5, 1, 6, 5, 1, 1, 26, 0, 7, 2, 0, 0, 0, 0, 1, 0]' : 0.223004}", "{'[1, 5, 5, 1, 6, 5, 1, 1, 26, 0, 7, 2, 0, 0, 0, 0, 1, 0]' : 0.222718}", "{'[1, 5, 5, 1, 6, 5, 1, 1, 26, 0, 7, 2, 0, 0, 0, 0, 1, 0]' : 0.222963}", "{'[1, 5, 5, 1, 6, 5, 1, 1, 26, 0, 7, 2, 0, 0, 0, 0, 1, 0]' : 0.222632}", "{'[1, 5, 5, 1, 6, 5, 1, 1, 26, 0, 7, 2, 0, 0, 0, 0, 1, 0]' : 0.222751}", "{'[1, 5, 5, 1, 6, 5, 1, 1, 26, 0, 7, 2, 0, 0, 0, 0, 1, 0]' : 0.223756}", "{'[1, 5, 5, 1, 6, 5, 1, 1, 26, 0, 7, 2, 0, 0, 0, 0, 1, 0]' : 0.222922}", "{'[1, 5, 5, 1, 6, 5, 1, 1, 26, 0, 7, 2, 0, 0, 0, 0, 1, 0]' : 0.222702}", "{'[1, 5, 5, 1, 6, 5, 1, 1, 26, 0, 7, 2, 0, 0, 0, 0, 1, 0]' : 0.222657}", "{'[1, 5, 5, 1, 6, 5, 1, 1, 26, 0, 7, 2, 0, 0, 0, 0, 1, 0]' : 0.223023}", "{'[1, 5, 5, 1, 6, 5, 1, 1, 26, 0, 7, 2, 0, 0, 0, 0, 1, 0]' : 0.222687}", "{'[1, 5, 5, 1, 6, 5, 1, 1, 26, 0, 7, 2, 0, 0, 0, 0, 1, 0]' : 0.222792}"]
returning from 'run': {'[1, 5, 5, 1, 6, 5, 1, 1, 26, 0, 7, 2, 0, 0, 0, 0, 1, 0]': ([0.222749, 0.222813, 0.222797, 0.22265, 0.22271, 0.223696, 0.222795, 0.222908, 0.222685, 0.222807, 0.222681, 0.222773, 0.222654, 0.222757, 0.223981, 0.222782, 0.222601, 0.222616, 0.223004, 0.222718, 0.222963, 0.222632, 0.222751, 0.223756, 0.222922, 0.222702, 0.222657, 0.223023, 0.222687, 0.222792], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.222749, 0.222813, 0.222797, 0.22265, 0.22271, 0.223696, 0.222795, 0.222908, 0.222685, 0.222807, 0.222681, 0.222773, 0.222654, 0.222757, 0.223981, 0.222782, 0.222601, 0.222616, 0.223004, 0.222718, 0.222963, 0.222632, 0.222751, 0.223756, 0.222922, 0.222702, 0.222657, 0.223023, 0.222687, 0.222792], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[1, 5, 5, 1, 6, 5, 1, 1, 26, 0, 7, 2, 0, 0, 0, 0, 1, 0]': ([0.222749, 0.222813, 0.222797, 0.22265, 0.22271, 0.223696, 0.222795, 0.222908, 0.222685, 0.222807, 0.222681, 0.222773, 0.222654, 0.222757, 0.223981, 0.222782, 0.222601, 0.222616, 0.223004, 0.222718, 0.222963, 0.222632, 0.222751, 0.223756, 0.222922, 0.222702, 0.222657, 0.223023, 0.222687, 0.222792], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [4, 2, 2, 3, 0, 1, 0, 28, 0, 25, 27, 2, 0, 0, 0, 1]
Fixed Factors: {'T2_J': 6, 'VEC1': 1}
Testing candidate 17: [4, 2, 2, 3, 6, 0, 1, 0, 28, 0, 25, 27, 2, 0, 0, 0, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	6
        Additions: 		13352
        Multiplications: 	3696
        Divisions: 		0
        Logical: 		0
        Reads: 			19633
        Writes: 		1941
        Comparisons:		22
        Gotos: 			0
        
digraph CFG {
	ForLoop11666480 [label="ForLoop11666480  for (k=kk; k<=cbv_4; k=k+28) {...",shape=box];
	ForLoop11666480 -> 11636458;
	ForLoop11666480 -> _JOIN_11666480;
	ForLoop11406671 [label="ForLoop11406671  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) ...",shape=box];
	ForLoop11406671 -> ForLoop11406670;
	ForLoop11406671 -> _JOIN_11406671;
	ForLoop11406670 [label="ForLoop11406670  for (jj=jjj; jj<=min(ny-1,jjj+2016); jj=jj+32) {...",shape=box];
	ForLoop11406670 -> 11406626;
	ForLoop11406670 -> _JOIN_11406670;
	11926526 [label="11926526  register int cbv_2, cbv_3;...",shape=box];
	ForLoop11396056 [label="ForLoop11396056  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop11396056 -> 11396055;
	ForLoop11396056 -> _JOIN_11396056;
	11666605 [label="11666605  y[k]=y[k]+A[it*ny+k]*tmp[it];...",shape=box];
	11406626 [label="11406626  for (j=jj; j<=min(ny-1,jj+31); j=j+1) ...",shape=box];
	_JOIN_11395987 [label="_JOIN_11395987None...",shape=box];
	_JOIN_11395987 -> 11396358;
	ForLoop11766067 [label="ForLoop11766067  for (k=kk; k<=cbv_10; k=k+28) {...",shape=box];
	ForLoop11766067 -> 11765309;
	ForLoop11766067 -> _JOIN_11766067;
	11495857 [label="11495857  tmp[it]=tmp[it]+A[it*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop11667413 [label="ForLoop11667413  for (k=cbv_5; k<=cbv_6; k=k+1) {...",shape=box];
	ForLoop11667413 -> 11666605;
	ForLoop11667413 -> _JOIN_11667413;
	11406750 [label="11406750  tmp[i]=0;...",shape=box];
	11406750 -> ForLoop11406857;
	ForLoop11399762 [label="ForLoop11399762  for (ii=iii; ii<=min(nx-1,iii+128); ii=ii+128) {...",shape=box];
	ForLoop11399762 -> ForLoop11406726;
	ForLoop11399762 -> _JOIN_11399762;
	ForLoop11399763 [label="ForLoop11399763  for (iii=0; iii<=nx-1; iii=iii+256) ...",shape=box];
	ForLoop11399763 -> ForLoop11399762;
	ForLoop11399763 -> _JOIN_11399763;
	11765309 [label="11765309  y[k]=y[k]+A[i*ny+k]*tmp[i];...",shape=box];
	11957518 [label="11957518  register int cbv_5, cbv_6;...",shape=box];
	11406812 [label="11406812  for (j=jj; j<=min(ny-1,jj+31); j=j+1) ...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 11395256;
	11395733 [label="11395733  y[i]=0.0;...",shape=box];
	ForLoop11766193 [label="ForLoop11766193  for (k=cbv_11; k<=cbv_12; k=k+1) ...",shape=box];
	ForLoop11766193 -> 11766192;
	ForLoop11766193 -> _JOIN_11766193;
	_JOIN_11667413 [label="_JOIN_11667413None...",shape=box];
	_JOIN_11667413 -> _JOIN_11406724;
	ForLoop11762098 [label="ForLoop11762098  for (j=jj; j<=cbv_7; j=j+26) {...",shape=box];
	ForLoop11762098 -> 11761421;
	ForLoop11762098 -> _JOIN_11762098;
	11763977 [label="11763977  int k;...",shape=box];
	ForLoop11526548 [label="ForLoop11526548  for (j=cbv_2; j<=cbv_3; j=j+1) {...",shape=box];
	ForLoop11526548 -> 11525554;
	ForLoop11526548 -> _JOIN_11526548;
	_JOIN_11526548 [label="_JOIN_11526548None...",shape=box];
	_JOIN_11526548 -> _JOIN_11406670;
	11395256 [label="11395256  int i;...",shape=box];
	_JOIN_11766193 [label="_JOIN_11766193None...",shape=box];
	_JOIN_11766193 -> _JOIN_11406910;
	_JOIN_11762098 [label="_JOIN_11762098None...",shape=box];
	_JOIN_11762098 -> 11958364;
	11959285 [label="11959285  register int cbv_11, cbv_12;...",shape=box];
	_JOIN_11406671 [label="_JOIN_11406671None...",shape=box];
	_JOIN_11406671 -> ForLoop11406724;
	ForLoop11395987 [label="ForLoop11395987  for (i=0; i<=cbv_1; i=i+29) {...",shape=box];
	ForLoop11395987 -> 11395733;
	ForLoop11395987 -> _JOIN_11395987;
	_JOIN_11406910 [label="_JOIN_11406910None...",shape=box];
	_JOIN_11406910 -> _JOIN_11406912;
	_JOIN_11406670 [label="_JOIN_11406670None...",shape=box];
	_JOIN_11406670 -> _JOIN_11406671;
	11404703 [label="11404703  double x_copy[32];...",shape=box];
	11396358 [label="11396358  register int cbv_2, cbv_3;...",shape=box];
	11762226 [label="11762226  tmp[i]=tmp[i]+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	11762226 -> _JOIN_11762227;
	_JOIN_11399762 [label="_JOIN_11399762None...",shape=box];
	_JOIN_11399762 -> _JOIN_11399763;
	_JOIN_11399763 [label="_JOIN_11399763None...",shape=box];
	ForLoop11406912 [label="ForLoop11406912  for (i=it; i<=min(nx-1expected=9369846271501.798828
actual=9369846271501.798828
,ii+127); i=i+1) {...",shape=box];
	ForLoop11406912 -> 11406750;
	ForLoop11406912 -> _JOIN_11406912;
	ForLoop11406724 [label="ForLoop11406724  for (kk=0; kk<=ny-1; kk=kk+32) {...",shape=box];
	ForLoop11406724 -> 11589682;
	ForLoop11406724 -> _JOIN_11406724;
	ForLoop11406910 [label="ForLoop11406910  for (kk=0; kk<=ny-1; kk=kk+32) {...",shape=box];
	ForLoop11406910 -> 11763977;
	ForLoop11406910 -> _JOIN_11406910;
	ForLoop11406726 [label="ForLoop11406726  for (it=ii; it<=min(nx-1,ii+127)-31; it=it+32) {...",shape=box];
	ForLoop11406726 -> 11406923;
	ForLoop11406726 -> _JOIN_11406726;
	ForLoop11406857 [label="ForLoop11406857  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) ...",shape=box];
	ForLoop11406857 -> ForLoop11406856;
	ForLoop11406857 -> _JOIN_11406857;
	ForLoop11406856 [label="ForLoop11406856  for (jj=jjj; jj<=min(ny-1,jjj+2016); jj=jj+32) {...",shape=box];
	ForLoop11406856 -> 11406812;
	ForLoop11406856 -> _JOIN_11406856;
	_JOIN_11525426 [label="_JOIN_11525426None...",shape=box];
	_JOIN_11525426 -> 11926526;
	_JOIN_11406856 [label="_JOIN_11406856None...",shape=box];
	_JOIN_11406856 -> _JOIN_11406857;
	11958364 [label="11958364  register int cbv_8, cbv_9;...",shape=box];
	_JOIN_11406912 [label="_JOIN_11406912None...",shape=box];
	_JOIN_11406912 -> _JOIN_11399762;
	_JOIN_11406724 [label="_JOIN_11406724None...",shape=box];
	_JOIN_11406724 -> _JOIN_11406726;
	ForLoop11762227 [label="ForLoop11762227  for (j=cbv_8; j<=cbv_9; j=j+1) ...",shape=box];
	ForLoop11762227 -> 11762226;
	ForLoop11762227 -> _JOIN_11762227;
	_JOIN_11406726 [label="_JOIN_11406726None...",shape=box];
	_JOIN_11406726 -> ForLoop11406912;
	11406923 [label="11406923  tmp[it]=0;...",shape=box];
	11406923 -> ForLoop11406671;
	11396055 [label="11396055  y[i]=0.0;...",shape=box];
	11396055 -> _JOIN_11396056;
	11766192 [label="11766192  y[k]=y[k]+A[i*ny+k]*tmp[i];...",shape=box];
	11766192 -> _JOIN_11766193;
	_JOIN_11396056 [label="_JOIN_11396056None...",shape=box];
	_JOIN_11396056 -> 11404703;
	ForLoop11525426 [label="ForLoop11525426  for (j=jj; j<=cbv_1; j=j+26) {...",shape=box];
	ForLoop11525426 -> 11495857;
	ForLoop11525426 -> _JOIN_11525426;
	_JOIN_11762227 [label="_JOIN_11762227None...",shape=box];
	_JOIN_11762227 -> _JOIN_11406856;
	11589682 [label="11589682  int k;...",shape=box];
	11761421 [label="11761421  tmp[i]=tmp[i]+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	11525554 [label="11525554  tmp[it]=tmp[it]+A[it*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_11406857 [label="_JOIN_11406857None...",shape=box];
	_JOIN_11406857 -> ForLoop11406910;
	11636458 [label="11636458  y[k]=y[k]+A[it*ny+k]*tmp[it];...",shape=box];
	_JOIN_11666480 [label="_JOIN_11666480None...",shape=box];
	_JOIN_11666480 -> 11957518;
	_JOIN_11766067 [label="_JOIN_11766067None...",shape=box];
	_JOIN_11766067 -> 11959285;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest55.exe __orio_perftest55.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest55.exe  
{'[4, 2, 2, 3, 6, 0, 1, 0, 28, 0, 25, 27, 2, 0, 0, 0, 1, 1]' : 0.277926}
{'[4, 2, 2, 3, 6, 0, 1, 0, 28, 0, 25, 27, 2, 0, 0, 0, 1, 1]' : 0.278154}
{'[4, 2, 2, 3, 6, 0, 1, 0, 28, 0, 25, 27, 2, 0, 0, 0, 1, 1]' : 0.278838}
{'[4, 2, 2, 3, 6, 0, 1, 0, 28, 0, 25, 27, 2, 0, 0, 0, 1, 1]' : 0.277932}
{'[4, 2, 2, 3, 6, 0, 1, 0, 28, 0, 25, 27, 2, 0, 0, 0, 1, 1]' : 0.277738}
{'[4, 2, 2, 3, 6, 0, 1, 0, 28, 0, 25, 27, 2, 0, 0, 0, 1, 1]' : 0.277997}
{'[4, 2, 2, 3, 6, 0, 1, 0, 28, 0, 25, 27, 2, 0, 0, 0, 1, 1]' : 0.278293}
{'[4, 2, 2, 3, 6, 0, 1, 0, 28, 0, 25, 27, 2, 0, 0, 0, 1, 1]' : 0.278003}
{'[4, 2, 2, 3, 6, 0, 1, 0, 28, 0, 25, 27, 2, 0, 0, 0, 1, 1]' : 0.277939}
{'[4, 2, 2, 3, 6, 0, 1, 0, 28, 0, 25, 27, 2, 0, 0, 0, 1, 1]' : 0.279066}
{'[4, 2, 2, 3, 6, 0, 1, 0, 28, 0, 25, 27, 2, 0, 0, 0, 1, 1]' : 0.277877}
{'[4, 2, 2, 3, 6, 0, 1, 0, 28, 0, 25, 27, 2, 0, 0, 0, 1, 1]' : 0.278049}
{'[4, 2, 2, 3, 6, 0, 1, 0, 28, 0, 25, 27, 2, 0, 0, 0, 1, 1]' : 0.277906}
{'[4, 2, 2, 3, 6, 0, 1, 0, 28, 0, 25, 27, 2, 0, 0, 0, 1, 1]' : 0.278005}
{'[4, 2, 2, 3, 6, 0, 1, 0, 28, 0, 25, 27, 2, 0, 0, 0, 1, 1]' : 0.277837}
{'[4, 2, 2, 3, 6, 0, 1, 0, 28, 0, 25, 27, 2, 0, 0, 0, 1, 1]' : 0.277728}
{'[4, 2, 2, 3, 6, 0, 1, 0, 28, 0, 25, 27, 2, 0, 0, 0, 1, 1]' : 0.278122}
{'[4, 2, 2, 3, 6, 0, 1, 0, 28, 0, 25, 27, 2, 0, 0, 0, 1, 1]' : 0.279353}
{'[4, 2, 2, 3, 6, 0, 1, 0, 28, 0, 25, 27, 2, 0, 0, 0, 1, 1]' : 0.278044}
{'[4, 2, 2, 3, 6, 0, 1, 0, 28, 0, 25, 27, 2, 0, 0, 0, 1, 1]' : 0.277738}
{'[4, 2, 2, 3, 6, 0, 1, 0, 28, 0, 25, 27, 2, 0, 0, 0, 1, 1]' : 0.278237}
{'[4, 2, 2, 3, 6, 0, 1, 0, 28, 0, 25, 27, 2, 0, 0, 0, 1, 1]' : 0.278334}
{'[4, 2, 2, 3, 6, 0, 1, 0, 28, 0, 25, 27, 2, 0, 0, 0, 1, 1]' : 0.277861}
{'[4, 2, 2, 3, 6, 0, 1, 0, 28, 0, 25, 27, 2, 0, 0, 0, 1, 1]' : 0.277648}
{'[4, 2, 2, 3, 6, 0, 1, 0, 28, 0, 25, 27, 2, 0, 0, 0, 1, 1]' : 0.278629}
{'[4, 2, 2, 3, 6, 0, 1, 0, 28, 0, 25, 27, 2, 0, 0, 0, 1, 1]' : 0.2781}
{'[4, 2, 2, 3, 6, 0, 1, 0, 28, 0, 25, 27, 2, 0, 0, 0, 1, 1]' : 0.27778}
{'[4, 2, 2, 3, 6, 0, 1, 0, 28, 0, 25, 27, 2, 0, 0, 0, 1, 1]' : 0.277876}
{'[4, 2, 2, 3, 6, 0, 1, 0, 28, 0, 25, 27, 2, 0, 0, 0, 1, 1]' : 0.27797}
{'[4, 2, 2, 3, 6, 0, 1, 0, 28, 0, 25, 27, 2, 0, 0, 0, 1, 1]' : 0.278198}

out:
 ["{'[4, 2, 2, 3, 6, 0, 1, 0, 28, 0, 25, 27, 2, 0, 0, 0, 1, 1]' : 0.277926}", "{'[4, 2, 2, 3, 6, 0, 1, 0, 28, 0, 25, 27, 2, 0, 0, 0, 1, 1]' : 0.278154}", "{'[4, 2, 2, 3, 6, 0, 1, 0, 28, 0, 25, 27, 2, 0, 0, 0, 1, 1]' : 0.278838}", "{'[4, 2, 2, 3, 6, 0, 1, 0, 28, 0, 25, 27, 2, 0, 0, 0, 1, 1]' : 0.277932}", "{'[4, 2, 2, 3, 6, 0, 1, 0, 28, 0, 25, 27, 2, 0, 0, 0, 1, 1]' : 0.277738}", "{'[4, 2, 2, 3, 6, 0, 1, 0, 28, 0, 25, 27, 2, 0, 0, 0, 1, 1]' : 0.277997}", "{'[4, 2, 2, 3, 6, 0, 1, 0, 28, 0, 25, 27, 2, 0, 0, 0, 1, 1]' : 0.278293}", "{'[4, 2, 2, 3, 6, 0, 1, 0, 28, 0, 25, 27, 2, 0, 0, 0, 1, 1]' : 0.278003}", "{'[4, 2, 2, 3, 6, 0, 1, 0, 28, 0, 25, 27, 2, 0, 0, 0, 1, 1]' : 0.277939}", "{'[4, 2, 2, 3, 6, 0, 1, 0, 28, 0, 25, 27, 2, 0, 0, 0, 1, 1]' : 0.279066}", "{'[4, 2, 2, 3, 6, 0, 1, 0, 28, 0, 25, 27, 2, 0, 0, 0, 1, 1]' : 0.277877}", "{'[4, 2, 2, 3, 6, 0, 1, 0, 28, 0, 25, 27, 2, 0, 0, 0, 1, 1]' : 0.278049}", "{'[4, 2, 2, 3, 6, 0, 1, 0, 28, 0, 25, 27, 2, 0, 0, 0, 1, 1]' : 0.277906}", "{'[4, 2, 2, 3, 6, 0, 1, 0, 28, 0, 25, 27, 2, 0, 0, 0, 1, 1]' : 0.278005}", "{'[4, 2, 2, 3, 6, 0, 1, 0, 28, 0, 25, 27, 2, 0, 0, 0, 1, 1]' : 0.277837}", "{'[4, 2, 2, 3, 6, 0, 1, 0, 28, 0, 25, 27, 2, 0, 0, 0, 1, 1]' : 0.277728}", "{'[4, 2, 2, 3, 6, 0, 1, 0, 28, 0, 25, 27, 2, 0, 0, 0, 1, 1]' : 0.278122}", "{'[4, 2, 2, 3, 6, 0, 1, 0, 28, 0, 25, 27, 2, 0, 0, 0, 1, 1]' : 0.279353}", "{'[4, 2, 2, 3, 6, 0, 1, 0, 28, 0, 25, 27, 2, 0, 0, 0, 1, 1]' : 0.278044}", "{'[4, 2, 2, 3, 6, 0, 1, 0, 28, 0, 25, 27, 2, 0, 0, 0, 1, 1]' : 0.277738}", "{'[4, 2, 2, 3, 6, 0, 1, 0, 28, 0, 25, 27, 2, 0, 0, 0, 1, 1]' : 0.278237}", "{'[4, 2, 2, 3, 6, 0, 1, 0, 28, 0, 25, 27, 2, 0, 0, 0, 1, 1]' : 0.278334}", "{'[4, 2, 2, 3, 6, 0, 1, 0, 28, 0, 25, 27, 2, 0, 0, 0, 1, 1]' : 0.277861}", "{'[4, 2, 2, 3, 6, 0, 1, 0, 28, 0, 25, 27, 2, 0, 0, 0, 1, 1]' : 0.277648}", "{'[4, 2, 2, 3, 6, 0, 1, 0, 28, 0, 25, 27, 2, 0, 0, 0, 1, 1]' : 0.278629}", "{'[4, 2, 2, 3, 6, 0, 1, 0, 28, 0, 25, 27, 2, 0, 0, 0, 1, 1]' : 0.2781}", "{'[4, 2, 2, 3, 6, 0, 1, 0, 28, 0, 25, 27, 2, 0, 0, 0, 1, 1]' : 0.27778}", "{'[4, 2, 2, 3, 6, 0, 1, 0, 28, 0, 25, 27, 2, 0, 0, 0, 1, 1]' : 0.277876}", "{'[4, 2, 2, 3, 6, 0, 1, 0, 28, 0, 25, 27, 2, 0, 0, 0, 1, 1]' : 0.27797}", "{'[4, 2, 2, 3, 6, 0, 1, 0, 28, 0, 25, 27, 2, 0, 0, 0, 1, 1]' : 0.278198}"]
returning from 'run': {'[4, 2, 2, 3, 6, 0, 1, 0, 28, 0, 25, 27, 2, 0, 0, 0, 1, 1]': ([0.277926, 0.278154, 0.278838, 0.277932, 0.277738, 0.277997, 0.278293, 0.278003, 0.277939, 0.279066, 0.277877, 0.278049, 0.277906, 0.278005, 0.277837, 0.277728, 0.278122, 0.279353, 0.278044, 0.277738, 0.278237, 0.278334, 0.277861, 0.277648, 0.278629, 0.2781, 0.27778, 0.277876, 0.27797, 0.278198], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.277926, 0.278154, 0.278838, 0.277932, 0.277738, 0.277997, 0.278293, 0.278003, 0.277939, 0.279066, 0.277877, 0.278049, 0.277906, 0.278005, 0.277837, 0.277728, 0.278122, 0.279353, 0.278044, 0.277738, 0.278237, 0.278334, 0.277861, 0.277648, 0.278629, 0.2781, 0.27778, 0.277876, 0.27797, 0.278198], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[4, 2, 2, 3, 6, 0, 1, 0, 28, 0, 25, 27, 2, 0, 0, 0, 1, 1]': ([0.277926, 0.278154, 0.278838, 0.277932, 0.277738, 0.277997, 0.278293, 0.278003, 0.277939, 0.279066, 0.277877, 0.278049, 0.277906, 0.278005, 0.277837, 0.277728, 0.278122, 0.279353, 0.278044, 0.277738, 0.278237, 0.278334, 0.277861, 0.277648, 0.278629, 0.2781, 0.27778, 0.277876, 0.27797, 0.278198], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [5, 1, 2, 5, 2, 0, 1, 19, 3, 9, 0, 0, 0, 2, 1, 1]
Fixed Factors: {'T2_J': 6, 'VEC1': 1}
Testing candidate 18: [5, 1, 2, 5, 6, 2, 0, 1, 19, 3, 9, 0, 0, 0, 2, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	30
        Max loop nest depth: 	6
        Additions: 		1182
        Multiplications: 	430
        Divisions: 		0
        Logical: 		0
        Reads: 			2420
        Writes: 		471
        Comparisons:		30
        Gotos: 			0
        
digraph CFG {
	ForLoop12053376 [label="ForLoop12053376  for (jj=jjj; jj<=min(ny-1,jjj+2032); jj=jj+16) {...",shape=box];
	ForLoop12053376 -> 12053039;
	ForLoop12053376 -> _JOIN_12053376;
	_JOIN_12054611 [label="_JOIN_12054611None...",shape=box];
	11960153 [label="11960153  y[i]=0.0;...",shape=box];
	11960153 -> _JOIN_11960154;
	_JOIN_12054606 [label="_JOIN_12054606None...",shape=box];
	_JOIN_12054606 -> 12088746;
	_JOIN_12053374 [label="_JOIN_12053374None...",shape=box];
	_JOIN_12053374 -> _JOIN_12053376;
	_JOIN_12054605 [label="_JOIN_12054605None...",shape=box];
	_JOIN_12054605 -> _JOIN_12054606;
	ForLoop12052824 [label="ForLoop12052824  for (kt=kk; kt<=cbv_4; kt=kt+32) {...",shape=box];
	ForLoop12052824 -> 12065787;
	ForLoop12052824 -> _JOIN_12052824;
	_JOIN_12052950 [label="_JOIN_12052950None...",shape=box];
	_JOIN_12052950 -> _JOIN_12052952;
	_JOIN_12054608 [label="_JOIN_12054608None...",shape=box];
	_JOIN_12054608 -> _JOIN_12054610;
	ForLoop11960154 [label="ForLoop11960154  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop11960154 -> 11960153;
	ForLoop11960154 -> _JOIN_11960154;
	_JOIN_12053306 [label="_JOIN_12053306None...",shape=box];
	_JOIN_12053306 -> 12105725;
	12053439 [label="12053439  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	_JOIN_12052952 [label="_JOIN_12052952None...",shape=box];
	_JOIN_12052952 -> 12079823;
	ForLoop12054608 [label="ForLoop12054608  for (i=(min(nx-1,ii+255))-(((min(nx-1,ii+255))-(ii)+1)%4)+1; i<=min(nx-1,ii+255); i=i+1) {...",shape=box];
	ForLoop12054608 -> 12088734;
	ForLoop12054608 -> _JOIN_12054608;
	12046479 [label="12046479  int i;...",shape=box];
	12046479 -> ForLoop12052954;
	ForLoop12054606 [label="ForLoop12054606  for (kkk=0; kkk<=ny-1; kkk=kkk+128) {...",shape=box];
	ForLoop12054606 -> ForLoop12054605;
	ForLoop12054606 -> _JOIN_12054606;
	12053373 [label="12053373  scv_80=scv_80+A[i*ny+j]*x[j];...",shape=box];
	12053373 -> _JOIN_12053374;
	12056724 [label="12056724  double scv_11;...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 11959570;
	12088734 [label="12088734  double scv_80;...",shape=box];
	_JOIN_11960154 [label="_JOIN_11960154None...",shape=box];
	_JOIN_11960154 -> 12046446;
	ForLoop12054605 [label="ForLoop12054605  for (kk=kkk; kk<=min(ny-1,kkk+96); kk=kk+32) {...",shape=box];
	ForLoop12054605 -> 12053439;
	ForLoop12054605 -> _JOIN_12054605;
	ForLoop12053306 [label="ForLoop12053306  for (j=jj; j<=cbv_5; j=j+10) {...",shape=box];
	ForLoop12053306 -> 12053079;
	ForLoop12053306 -> _JOIN_12053306;
	ForLoop12047997 [label="ForLoop12047997  for (jj=jjj; jj<=min(ny-1,jjj+2032); jj=jj+16) {...",shape=box];
	ForLoop12047997 -> 12046564;
	ForLoop12047997 -> _JOIN_12047997;
	11959912 [label="11959912  y[i]=0.0;...",shape=box];
	ForLoop12047999 [label="ForLoop12047999  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop12047999 -> ForLoop12047997;
	ForLoop12047999 -> _JOIN_12047999;
	_JOIN_12053377 [label="_JOIN_12053377None...",shape=box];
	_JOIN_12053377 -> ForLoop12054606;
	12105725 [label="12105725  register int cbv_6, cbv_7;...",shape=box];
	12056397 [label="12056397  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	12065787 [label="12065787  double scv_12, scv_13, scv_14, scv_15, scv_16, scv_17, scv_18, scv_19;...",shape=box];
	_JOIN_12054572 [label="_JOIN_12054572None...",shape=box];
	_JOIN_12054572 -> 12054603;
	12053079 [label="12053079  scv_80=scv_80+A[i*ny+j]*x[j];...",shape=box];
	ForLoop12047839 [label="ForLoop12047839  for (j=jj; j<=cbv_1; j=j+10) {...",shape=box];
	ForLoop12047839 -> 12056397;
	ForLoop12047839 -> _JOIN_12047839;
	12054603 [label="12054603  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	12054603 -> _JOIN_12054605;
	_JOIN_12052824 [label="_JOIN_12052824None...",shape=box];
	_JOIN_12052824 -> 12052855;
	ForLoop12052950 [label="ForLoop12052950  for (kk=kkk; kk<=min(ny-1,kkk+96); kk=kk+32) {...",shape=box];
	ForLoop12052950 -> 12048061;
	ForLoop12052950 -> _JOIN_12052950;
	_JOIN_12054610 [label="_JOIN_12054610None...",shape=box];
	_JOIN_12054610 -> _JOIN_12054611;
	ForLoop12052952 [label="ForLoop12052952  for (kkk=0; kkk<=ny-1; kkk=kkk+128) {...",shape=box];
	ForLoop12052952 -> ForLoop12052950;
	ForLoop12052952 -> _JOIN_12052952;
	_JOIN_12047999 [label="_JOIN_12047999None...",shape=box];
	_JOIN_12047999 -> ForLoop12052952;
	ForLoop12052954 [label="ForLoop12052954  for (i=ii; i<=min(nx-1,ii+255)-3; i=i+4) {...",shape=box];
	ForLoop12052954 -> 12079805;
	ForLoop12052954 -> _JOIN_12052954;
	_JOIN_12053376 [label="_JOIN_12053376None...",shape=box];
	_JOIN_12053376 -> _JOIN_12053377;
	11959570 [label="11959570  int i;...",shape=box];
	12088746 [label="12088746  tmp[i]=scv_80;...",shape=box];
	12088746 -> _JOIN_12054608;
	_JOIN_12047997 [label="_JOIN_12047997None...",shape=box];
	_JOIN_12047997 -> _JOIN_12047999;
	_JOIN_12047995 [label="_JOIN_12047995None...",shape=box];
	_JOIN_12047995 -> _JOIN_12047997;
	12046564 [label="12046564  int j;...",shape=box];
	12079805 [label="12079805  double scv_44, scv_45, scv_46, scv_47;...",shape=box];
	12083014 [label="12083014  double scv_48, scv_49, scv_50, scv_51, scv_52, scv_53, scv_54, scv_55;...",shape=box];
	12046446 [label="12046446  double x_copy;...",shape=box];
	ForLoop12054611 [label="ForLoop12054611  for (iii=0; iii<=nx-1; iii=iii+1024) {...",shape=box];
	ForLoop12054611 -> ForLoop12054610;
	ForLoop12054611 -> _JOIN_12054611;
	ForLoop12054610 [label="ForLoop12054610  for (ii=iii; ii<=min(nx-1,iii+768); ii=ii+256) {...",shape=box];
	ForLoop12054610 -> 12046479;
	ForLoop12054610 -> _JOIN_12054610;
	12102313 [label="12102313  register int cbv_2, cbv_3;...",shape=box];
	_JOIN_12047839 [label="_JOIN_12047839None...",shape=box];
	_JOIN_12047839 -> 12102313;
	ForLoop12054572 [label="ForLoop12054572  for (kt=kk; kt<=cbv_8; kt=kt+32) {...",shape=box];
	ForLoop12054572 -> 12083014;
	ForLoop12054572 -> _JOIN_12054572;
	12079823 [label="12079823  tmp[(i+2)]=scv_44;...",shape=box];
	12048061 [label="12048061  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	ForLoop12047995 [label="ForLoop12047995  for (j=cbv_2; j<=cbv_3; j=j+1) {...",shape=box];
	ForLoop12047995 -> 12056724;
	ForLoop12047995 -> _JOIN_12047995;
	12052855 [label="12052855  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	_JOIN_11960085 [label="_JOIN_11960085None...",shape=box];
	_JOIN_11960085 -> 11960375;
	ForLoop12053377 [label="ForLoop12053377  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop12053377 -> ForLoop12053376;
	ForLoop12053377 -> _JOIN_12053377;
	_JOIN_12052954 [label="_JOIN_12052954None...",shape=box];
	_JOIN_12052954 -> ForLoop12054608;
	ForLoop12053374 [label="ForLoop12053374  for (j=cbv_6; j<=cbv_7; j=j+1) {...",shape=box];
	ForLoop12053374 -> 12053373;
	ForLoop12053374 -> _JOIN_12053374;
	12053039 [label="12053039  int j;...",shape=box];
	11960375 [label="11960375  register int expected=9339882853735.613281
actual=9369846271501.798828
cbv_2, cbv_3;...",shape=box];
	ForLoop11960085 [label="ForLoop11960085  for (i=0; i<=cbv_1; i=i+20) {...",shape=box];
	ForLoop11960085 -> 11959912;
	ForLoop11960085 -> _JOIN_11960085;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest56.exe __orio_perftest56.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest56.exe  
{'[5, 1, 2, 5, 6, 2, 0, 1, 19, 3, 9, 0, 0, 0, 2, 1, 1, 1]' : 0.132945}
{'[5, 1, 2, 5, 6, 2, 0, 1, 19, 3, 9, 0, 0, 0, 2, 1, 1, 1]' : 0.132706}
{'[5, 1, 2, 5, 6, 2, 0, 1, 19, 3, 9, 0, 0, 0, 2, 1, 1, 1]' : 0.132458}
{'[5, 1, 2, 5, 6, 2, 0, 1, 19, 3, 9, 0, 0, 0, 2, 1, 1, 1]' : 0.132487}
{'[5, 1, 2, 5, 6, 2, 0, 1, 19, 3, 9, 0, 0, 0, 2, 1, 1, 1]' : 0.13251}
{'[5, 1, 2, 5, 6, 2, 0, 1, 19, 3, 9, 0, 0, 0, 2, 1, 1, 1]' : 0.132421}
{'[5, 1, 2, 5, 6, 2, 0, 1, 19, 3, 9, 0, 0, 0, 2, 1, 1, 1]' : 0.13259}
{'[5, 1, 2, 5, 6, 2, 0, 1, 19, 3, 9, 0, 0, 0, 2, 1, 1, 1]' : 0.132509}
{'[5, 1, 2, 5, 6, 2, 0, 1, 19, 3, 9, 0, 0, 0, 2, 1, 1, 1]' : 0.132548}
{'[5, 1, 2, 5, 6, 2, 0, 1, 19, 3, 9, 0, 0, 0, 2, 1, 1, 1]' : 0.132508}
{'[5, 1, 2, 5, 6, 2, 0, 1, 19, 3, 9, 0, 0, 0, 2, 1, 1, 1]' : 0.132575}
{'[5, 1, 2, 5, 6, 2, 0, 1, 19, 3, 9, 0, 0, 0, 2, 1, 1, 1]' : 0.132628}
{'[5, 1, 2, 5, 6, 2, 0, 1, 19, 3, 9, 0, 0, 0, 2, 1, 1, 1]' : 0.132514}
{'[5, 1, 2, 5, 6, 2, 0, 1, 19, 3, 9, 0, 0, 0, 2, 1, 1, 1]' : 0.132573}
{'[5, 1, 2, 5, 6, 2, 0, 1, 19, 3, 9, 0, 0, 0, 2, 1, 1, 1]' : 0.132472}
{'[5, 1, 2, 5, 6, 2, 0, 1, 19, 3, 9, 0, 0, 0, 2, 1, 1, 1]' : 0.132525}
{'[5, 1, 2, 5, 6, 2, 0, 1, 19, 3, 9, 0, 0, 0, 2, 1, 1, 1]' : 0.132818}
{'[5, 1, 2, 5, 6, 2, 0, 1, 19, 3, 9, 0, 0, 0, 2, 1, 1, 1]' : 0.132429}
{'[5, 1, 2, 5, 6, 2, 0, 1, 19, 3, 9, 0, 0, 0, 2, 1, 1, 1]' : 0.132537}
{'[5, 1, 2, 5, 6, 2, 0, 1, 19, 3, 9, 0, 0, 0, 2, 1, 1, 1]' : 0.132566}
{'[5, 1, 2, 5, 6, 2, 0, 1, 19, 3, 9, 0, 0, 0, 2, 1, 1, 1]' : 0.132468}
{'[5, 1, 2, 5, 6, 2, 0, 1, 19, 3, 9, 0, 0, 0, 2, 1, 1, 1]' : 0.132581}
{'[5, 1, 2, 5, 6, 2, 0, 1, 19, 3, 9, 0, 0, 0, 2, 1, 1, 1]' : 0.132713}
{'[5, 1, 2, 5, 6, 2, 0, 1, 19, 3, 9, 0, 0, 0, 2, 1, 1, 1]' : 0.132564}
{'[5, 1, 2, 5, 6, 2, 0, 1, 19, 3, 9, 0, 0, 0, 2, 1, 1, 1]' : 0.132585}
{'[5, 1, 2, 5, 6, 2, 0, 1, 19, 3, 9, 0, 0, 0, 2, 1, 1, 1]' : 0.132513}
{'[5, 1, 2, 5, 6, 2, 0, 1, 19, 3, 9, 0, 0, 0, 2, 1, 1, 1]' : 0.132409}
{'[5, 1, 2, 5, 6, 2, 0, 1, 19, 3, 9, 0, 0, 0, 2, 1, 1, 1]' : 0.13254}
{'[5, 1, 2, 5, 6, 2, 0, 1, 19, 3, 9, 0, 0, 0, 2, 1, 1, 1]' : 0.132528}
{'[5, 1, 2, 5, 6, 2, 0, 1, 19, 3, 9, 0, 0, 0, 2, 1, 1, 1]' : 0.13252}

out:
 ["{'[5, 1, 2, 5, 6, 2, 0, 1, 19, 3, 9, 0, 0, 0, 2, 1, 1, 1]' : 0.132945}", "{'[5, 1, 2, 5, 6, 2, 0, 1, 19, 3, 9, 0, 0, 0, 2, 1, 1, 1]' : 0.132706}", "{'[5, 1, 2, 5, 6, 2, 0, 1, 19, 3, 9, 0, 0, 0, 2, 1, 1, 1]' : 0.132458}", "{'[5, 1, 2, 5, 6, 2, 0, 1, 19, 3, 9, 0, 0, 0, 2, 1, 1, 1]' : 0.132487}", "{'[5, 1, 2, 5, 6, 2, 0, 1, 19, 3, 9, 0, 0, 0, 2, 1, 1, 1]' : 0.13251}", "{'[5, 1, 2, 5, 6, 2, 0, 1, 19, 3, 9, 0, 0, 0, 2, 1, 1, 1]' : 0.132421}", "{'[5, 1, 2, 5, 6, 2, 0, 1, 19, 3, 9, 0, 0, 0, 2, 1, 1, 1]' : 0.13259}", "{'[5, 1, 2, 5, 6, 2, 0, 1, 19, 3, 9, 0, 0, 0, 2, 1, 1, 1]' : 0.132509}", "{'[5, 1, 2, 5, 6, 2, 0, 1, 19, 3, 9, 0, 0, 0, 2, 1, 1, 1]' : 0.132548}", "{'[5, 1, 2, 5, 6, 2, 0, 1, 19, 3, 9, 0, 0, 0, 2, 1, 1, 1]' : 0.132508}", "{'[5, 1, 2, 5, 6, 2, 0, 1, 19, 3, 9, 0, 0, 0, 2, 1, 1, 1]' : 0.132575}", "{'[5, 1, 2, 5, 6, 2, 0, 1, 19, 3, 9, 0, 0, 0, 2, 1, 1, 1]' : 0.132628}", "{'[5, 1, 2, 5, 6, 2, 0, 1, 19, 3, 9, 0, 0, 0, 2, 1, 1, 1]' : 0.132514}", "{'[5, 1, 2, 5, 6, 2, 0, 1, 19, 3, 9, 0, 0, 0, 2, 1, 1, 1]' : 0.132573}", "{'[5, 1, 2, 5, 6, 2, 0, 1, 19, 3, 9, 0, 0, 0, 2, 1, 1, 1]' : 0.132472}", "{'[5, 1, 2, 5, 6, 2, 0, 1, 19, 3, 9, 0, 0, 0, 2, 1, 1, 1]' : 0.132525}", "{'[5, 1, 2, 5, 6, 2, 0, 1, 19, 3, 9, 0, 0, 0, 2, 1, 1, 1]' : 0.132818}", "{'[5, 1, 2, 5, 6, 2, 0, 1, 19, 3, 9, 0, 0, 0, 2, 1, 1, 1]' : 0.132429}", "{'[5, 1, 2, 5, 6, 2, 0, 1, 19, 3, 9, 0, 0, 0, 2, 1, 1, 1]' : 0.132537}", "{'[5, 1, 2, 5, 6, 2, 0, 1, 19, 3, 9, 0, 0, 0, 2, 1, 1, 1]' : 0.132566}", "{'[5, 1, 2, 5, 6, 2, 0, 1, 19, 3, 9, 0, 0, 0, 2, 1, 1, 1]' : 0.132468}", "{'[5, 1, 2, 5, 6, 2, 0, 1, 19, 3, 9, 0, 0, 0, 2, 1, 1, 1]' : 0.132581}", "{'[5, 1, 2, 5, 6, 2, 0, 1, 19, 3, 9, 0, 0, 0, 2, 1, 1, 1]' : 0.132713}", "{'[5, 1, 2, 5, 6, 2, 0, 1, 19, 3, 9, 0, 0, 0, 2, 1, 1, 1]' : 0.132564}", "{'[5, 1, 2, 5, 6, 2, 0, 1, 19, 3, 9, 0, 0, 0, 2, 1, 1, 1]' : 0.132585}", "{'[5, 1, 2, 5, 6, 2, 0, 1, 19, 3, 9, 0, 0, 0, 2, 1, 1, 1]' : 0.132513}", "{'[5, 1, 2, 5, 6, 2, 0, 1, 19, 3, 9, 0, 0, 0, 2, 1, 1, 1]' : 0.132409}", "{'[5, 1, 2, 5, 6, 2, 0, 1, 19, 3, 9, 0, 0, 0, 2, 1, 1, 1]' : 0.13254}", "{'[5, 1, 2, 5, 6, 2, 0, 1, 19, 3, 9, 0, 0, 0, 2, 1, 1, 1]' : 0.132528}", "{'[5, 1, 2, 5, 6, 2, 0, 1, 19, 3, 9, 0, 0, 0, 2, 1, 1, 1]' : 0.13252}"]
returning from 'run': {'[5, 1, 2, 5, 6, 2, 0, 1, 19, 3, 9, 0, 0, 0, 2, 1, 1, 1]': ([0.132945, 0.132706, 0.132458, 0.132487, 0.13251, 0.132421, 0.13259, 0.132509, 0.132548, 0.132508, 0.132575, 0.132628, 0.132514, 0.132573, 0.132472, 0.132525, 0.132818, 0.132429, 0.132537, 0.132566, 0.132468, 0.132581, 0.132713, 0.132564, 0.132585, 0.132513, 0.132409, 0.13254, 0.132528, 0.13252], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.132945, 0.132706, 0.132458, 0.132487, 0.13251, 0.132421, 0.13259, 0.132509, 0.132548, 0.132508, 0.132575, 0.132628, 0.132514, 0.132573, 0.132472, 0.132525, 0.132818, 0.132429, 0.132537, 0.132566, 0.132468, 0.132581, 0.132713, 0.132564, 0.132585, 0.132513, 0.132409, 0.13254, 0.132528, 0.13252], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[5, 1, 2, 5, 6, 2, 0, 1, 19, 3, 9, 0, 0, 0, 2, 1, 1, 1]': ([0.132945, 0.132706, 0.132458, 0.132487, 0.13251, 0.132421, 0.13259, 0.132509, 0.132548, 0.132508, 0.132575, 0.132628, 0.132514, 0.132573, 0.132472, 0.132525, 0.132818, 0.132429, 0.132537, 0.132566, 0.132468, 0.132581, 0.132713, 0.132564, 0.132585, 0.132513, 0.132409, 0.13254, 0.132528, 0.13252], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [4, 5, 0, 6, 3, 0, 0, 3, 29, 0, 26, 1, 1, 0, 1, 0]
Fixed Factors: {'T2_J': 6, 'VEC1': 1}
Testing candidate 19: [4, 5, 0, 6, 6, 3, 0, 0, 3, 29, 0, 26, 1, 1, 0, 1, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	28
        Max loop nest depth: 	6
        Additions: 		5879
        Multiplications: 	2886
        Divisions: 		0
        Logical: 		0
        Reads: 			11146
        Writes: 		1803
        Comparisons:		28
        Gotos: 			0
        
digraph CFG {
	_JOIN_12471266 [label="_JOIN_12471266None...",shape=box];
	_JOIN_12471266 -> _JOIN_12471269;
	ForLoop12425211 [label="ForLoop12425211  for (jt=jj; jt<=min(ny-1,jj+255)-7; jt=jt+8) {...",shape=box];
	ForLoop12425211 -> 12474280;
	ForLoop12425211 -> _JOIN_12425211;
	ForLoop12441145 [label="ForLoop12441145  for (jt=jj; jt<=min(ny-1,jj+255)-7; jt=jt+8) {...",shape=box];
	ForLoop12441145 -> 12515377;
	ForLoop12441145 -> _JOIN_12441145;
	ForLoop12442026 [label="ForLoop12442026  for (j=jt; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop12442026 -> 12516868;
	ForLoop12442026 -> _JOIN_12442026;
	ForLoop12442028 [label="ForLoop12442028  for (jj=jjj; jj<=min(ny-1,jjj+1792); jj=jj+256) {...",shape=box];
	ForLoop12442028 -> ForLoop12441145;
	ForLoop12442028 -> _JOIN_12442028;
	ForLoop12470056 [label="ForLoop12470056  for (k=(min(ny-1,kkk+255))-(((min(ny-1,kkk+255))-(kkk)+1)%27)+1; k<=min(ny-1,kkk+255); k=k+1) {...",shape=box];
	ForLoop12470056 -> 12572577;
	ForLoop12470056 -> _JOIN_12470056;
	ForLoop12425457 [label="ForLoop12425457  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop12425457 -> ForLoop12425456;
	ForLoop12425457 -> _JOIN_12425457;
	ForLoop12425456 [label="ForLoop12425456  for (jj=jjj; jj<=min(ny-1,jjj+1792); jj=jj+256) {...",shape=box];
	ForLoop12425456 -> ForLoop12425211;
	ForLoop12425456 -> _JOIN_12425456;
	12628937 [label="12628937  tmp[i]=scv_141;...",shape=box];
	12628937 -> _JOIN_12471266;
	ForLoop12425454 [label="ForLoop12425454  for (j=jt; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop12425454 -> 12474737;
	ForLoop12425454 -> _JOIN_12425454;
	ForLoop12432862 [label="ForLoop12432862  for (k=(min(ny-1,kkk+255))-(((min(ny-1,kkk+255))-(kkk)+1)%27)+1; k<=min(ny-1,kkk+255); k=k+1) {...",shape=box];
	ForLoop12432862 -> 12490144;
	ForLoop12432862 -> _JOIN_12432862;
	12470406 [label="12470406  scv_141=scv_141+A[i*ny+j]*x[j];...",shape=box];
	12470406 -> _JOIN_12470407;
	12621695 [label="12621695  tmp[(i+20)]=scv_83;...",shape=box];
	_JOIN_12471262 [label="_JOIN_12471262None...",shape=box];
	_JOIN_12471262 -> _JOIN_12471264;
	ForLoop12471269 [label="ForLoop12471269  for (ii=iii; ii<=min(nx-1,iii+1920); ii=ii+128) {...",shape=box];
	ForLoop12471269 -> ForLoop12432866;
	ForLoop12471269 -> _JOIN_12471269;
	_JOIN_12471264 [label="_JOIN_12471264None...",shape=box];
	_JOIN_12471264 -> 12628937;
	ForLoop12432864 [label="ForLoop12432864  for (kkk=0; kkk<=ny-1; kkk=kkk+256) {...",shape=box];
	ForLoop12432864 -> 12425471;
	ForLoop12432864 -> _JOIN_12432864;
	12107453 [label="12107453  y[i]=0.0;...",shape=box];
	_JOIN_12469233 [label="_JOIN_12469233None...",shape=box];
	_JOIN_12469233 -> ForLoop12470056;
	ForLoop12470058 [label="ForLoop12470058  for (kkk=0; kkk<=ny-1; kkk=kkk+256) {...",shape=box];
	ForLoop12470058 -> 12442044;
	ForLoop12470058 -> _JOIN_12470058;
	12107351 [label="12107351  int i;...",shape=box];
	12107628 [label="12107628  register int cbv_2, cbv_3;...",shape=box];
	12422980 [label="12422980  double x_copy;...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 12107351;
	ForLoop12471262 [label="ForLoop12471262  for (k=(min(ny-1,kkk+255))-(((min(ny-1,kkk+255))-(kkk)+1)%27)+1; k<=min(ny-1,kkk+255); k=k+1) {...",shape=box];
	ForLoop12471262 -> 12626402;
	ForLoop12471262 -> _JOIN_12471262;
	_JOIN_12425211 [label="_JOIN_12425211None...",shape=box];
	_JOIN_12425211 -> ForLoop12425454;
	ForLoop12471264 [label="ForLoop12471264  for (kkk=0; kkk<=ny-1; kkk=kkk+256) {...",shape=box];
	ForLoop12471264 -> 12470424;
	ForLoop12471264 -> _JOIN_12471264;
	12442044 [label="12442044  int k;...",shape=box];
	_JOIN_12107482 [label="_JOIN_12107482None...",shape=box];
	_JOIN_12107482 -> 12107628;
	12488878 [label="12488878  double scv_10, scv_11, scv_12, scv_13, scv_14, scv_15, scv_16, scv_17;...",shape=box];
	12572577 [label="12572577  double scv_82;...",shape=box];
	12470184 [label="12470184  scv_141=scv_141+A[i*ny+jt]*x[jt];...",shape=box];
	12569331 [label="12569331  double scv_55, scv_56, scv_57, scv_58, scv_59, scv_60, scv_61, scv_62;...",shape=box];
	12425471 [label="12425471  int k;...",shape=box];
	12425471 -> ForLoop12432611;
	_JOIN_12470056 [label="_JOIN_12470056None...",shape=box];
	_JOIN_12470056 -> _JOIN_12470058;
	_JOIN_12470409 [label="_JOIN_12470409None...",shape=box];
	_JOIN_12470409 -> _JOIN_12470410;
	12474280 [label="12474280  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	_JOIN_12442028 [label="_JOIN_12442028None...",shape=box];
	_JOIN_12442028 -> _JOIN_12442030;
	12515377 [label="12515377  double scv_46, scv_47, scv_48, scv_49, scv_50, scv_51, scv_52, scv_53;...",shape=box];
	_JOIN_12432866 [label="_JOIN_12432866None...",shape=box];
	_JOIN_12432866 -> 12432867;
	_JOIN_12432864 [label="_JOIN_12432864None...",shape=box];
	_JOIN_12432864 -> 12503903;
	_JOIN_12442026 [label="_JOIN_12442026None...",shape=box];
	_JOIN_12442026 -> _JOIN_12442028;
	_JOIN_12432862 [label="_JOIN_12432862None...",shape=box];
	_JOIN_12432862 -> _JOIN_12432864;
	_JOIN_12470407 [label="_JOIN_12470407None...",shape=box];
	_JOIN_12470407 -> _JOIN_12470409;
	ForLoop12442030 [label="ForLoop12442030  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop12442030 -> ForLoop12442028;
	ForLoop12442030 -> _JOIN_12442030;
	12432867 [label="12432867  int i;...",shape=box];
	12432867 -> ForLoop12470060;
	_JOIN_12471269 [label="_JOIN_12471269None...",shape=box];
	_JOIN_12471269 -> _JOIN_12471270;
	ForLoop12470407 [label="ForLoop12470407  for (j=jt; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop12470407 -> 12470406;
	ForLoop12470407 -> _JOIN_12470407;
	_JOIN_12107551 [label="_JOIN_12107551None...",shape=box];
	_JOIN_12107551 -> 12422980;
	12107550 [label="12107550  y[i]=0.0;...",shape=box];
	12107550 -> _JOIN_12107551;
	12516868 [label="12516868  double scv_54;...",shape=box];
	ForLoop12432611 [label="ForLoop12432611  for (k=kkk; k<=min(ny-1,kkk+255)-26; k=k+27) {...",shape=box];
	ForLoop12432611 -> 12488878;
	ForLoop12432611 -> _JOIN_12432611;
	ForLoop12107482 [label="ForLoop12107482  for (i=0; i<=cbv_1; i=i+4) {...",shape=box];
	ForLoop12107482 -> 12107453;
	ForLoop12107482 -> _JOIN_12107482;
	ForLoop12471266 [label="ForLoop12471266  for (i=(min(nx-1,ii+127))-(((min(nx-1,ii+127))-(it)+1)%30)+1; i<=min(nx-1,ii+127); i=i+1) {...",shape=box];
	ForLoop12471266 -> 12628925;
	ForLoop12471266 -> _JOIN_12471266;
	12503891 [label="12503891  double scv_38, scv_39, scv_40, scv_41, scv_42, scv_43, scv_44, scv_45;...",shape=box];
	_JOIN_12432611 [label="_JOIN_12432611None...",shape=box];
	_JOIN_12432611 -> ForLoop12432862;
	ForLoop12469233 [label="ForLoop12469233  for (k=kkk; k<=min(ny-1,kkk+255)-26; k=k+27) {...",shape=box];
	ForLoop12469233 -> 12569331;
	ForLoop12469233 -> _JOIN_12469233;
	_JOIN_12471270 [label="_JOIN_12471270None...",shape=box];
	ForLoop12470060 [label="ForLoop12470060  for (i=it; i<=min(nx-1,ii+127)-29; i=i+30) {...",shape=box];
	ForLoop12470060 -> 12621677;
	ForLoop12470060 -> _JOIN_12470060;
	12626402 [label="12626402  double scv_140;...",shape=box];
	_JOIN_12470410 [label="_JOIN_12470410None...",shape=box];
	_JOIN_12470410 -> ForLoop12471264;
	_JOIN_12425457 [label="_JOIN_12425457None...",shape=box];
	_JOIN_12425457 -> ForLoop12432864;
	_JOIN_12425456 [label="_JOIN_12425456None...",shape=box];
	_JOIN_12425456 -> _JOIN_12425457;
	ForLoop12471270 [label="ForLoop12471270  for (iii=0; iii<=nx-1; iii=iii+2048) {...",shape=box];
	ForLoop12471270 -> ForLoop12471269;
	ForLoop12471270 -> _JOIN_12471270;
	_JOIN_12425454 [label="_JOIN_12425454None...",shape=box];
	_JOIN_12425454 -> _JOIN_12425456;
	12470424 [label="12470424  int k;...",shape=box];
	12470424 -> ForLoop12471194;
	_JOIN_12471194 [label="_JOIN_12471194None...",shape=box];
	_JOIN_12471194 -> ForLoop12471262;
	_JOIN_12470058 [label="_JOIN_12470058None...",shape=box];
	_JOIN_12470058 -> 12621695;
	12625767 [label="12625767  double scv_113, scv_114, scv_115, scv_116, scv_117, scv_118, scv_119, scv_120;...",shape=box];
	_JOIN_12442030 [label="_JOIN_12442030None...",shape=box];
	_JOIN_12442030 -> ForLoop12470058;
	_JOIN_12470368 [label="_JOIN_12470368None...",shape=box];
	_JOIN_12470368 -> ForLoop12470407;
	ForLoop12107551 [label="ForLoop12107551  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop12107551 -> 12107550;
	ForLoop12107551 -> _JOIN_12107551;
	12628925 [label="12628925  double scv_141;...",shape=box];
	_JOIN_12470060 [label="_JOIN_12470060None...",shape=box];
	_JOIN_12470060 -> ForLoop12471266;
	ForLoop12471194 [label="ForLoop12471194  for (k=kkk; k<=min(ny-1,kkk+255)-26; k=k+27) {...",shape=box];
	ForLoop12471194 -> 12625767;
	ForLoop12471194 -> _JOIN_12471194;
	12503903 [label="12503903  tmp[it]=scv_38;...",shape=box];
	_JOIN_12441145 [label="_JOIN_12441145None...",shape=box];
	_JOIN_12441145 -> ForLoop12442026;
	ForLoop12470409 [label="ForLoop12470409  for (jj=jjj; jj<=min(ny-1,jjj+1792); jj=jj+256) {...",shape=box];
	ForLoop12470409 -> ForLoop12470368;
	ForLoop12470409 -> _JOIN_12470409;
	12490144 [label="12490144  double scv_37;...",shape=box];
	ForLoop12470410 [label="ForLoop12470410  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop12470410 -> ForLoop12470409;
	ForLoop12470410 -> _JOIN_12470410;
	ForLoop12470368 [label="ForLoop12470368  for (jt=jj; jt<=min(ny-1,jj+255)-7; jt=jt+8) {...",shape=box];
	ForLoop12470368 -> 12470184;
	ForLoop12470368 -> _JOIN_12470368;
	ForLoop12432866 [label="ForLoop12432866  for (it=ii; it<=min(nx-1,ii+127)-7; it=it+8) {...",shape=box];
	ForLoop12432866 -> 12503891;
	ForLoop12432866 -> _JOIN_12432866;
	12621677 [label="12621677  double scv_83, scv_84, scv_85expected=9369846271501.798828
actual=9369846271501.798828
, scv_86, scv_87, scv_88, scv_89, scv_90;...",shape=box];
	12474737 [label="12474737  double scv_9;...",shape=box];

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest57.exe __orio_perftest57.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest57.exe  
{'[4, 5, 0, 6, 6, 3, 0, 0, 3, 29, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0882289}
{'[4, 5, 0, 6, 6, 3, 0, 0, 3, 29, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0877869}
{'[4, 5, 0, 6, 6, 3, 0, 0, 3, 29, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0877819}
{'[4, 5, 0, 6, 6, 3, 0, 0, 3, 29, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0877781}
{'[4, 5, 0, 6, 6, 3, 0, 0, 3, 29, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0877681}
{'[4, 5, 0, 6, 6, 3, 0, 0, 3, 29, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0878398}
{'[4, 5, 0, 6, 6, 3, 0, 0, 3, 29, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0881128}
{'[4, 5, 0, 6, 6, 3, 0, 0, 3, 29, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0877931}
{'[4, 5, 0, 6, 6, 3, 0, 0, 3, 29, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.087779}
{'[4, 5, 0, 6, 6, 3, 0, 0, 3, 29, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0879278}
{'[4, 5, 0, 6, 6, 3, 0, 0, 3, 29, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0887971}
{'[4, 5, 0, 6, 6, 3, 0, 0, 3, 29, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0878022}
{'[4, 5, 0, 6, 6, 3, 0, 0, 3, 29, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0878611}
{'[4, 5, 0, 6, 6, 3, 0, 0, 3, 29, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0879271}
{'[4, 5, 0, 6, 6, 3, 0, 0, 3, 29, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.087863}
{'[4, 5, 0, 6, 6, 3, 0, 0, 3, 29, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.087743}
{'[4, 5, 0, 6, 6, 3, 0, 0, 3, 29, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.087826}
{'[4, 5, 0, 6, 6, 3, 0, 0, 3, 29, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0877762}
{'[4, 5, 0, 6, 6, 3, 0, 0, 3, 29, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0878358}
{'[4, 5, 0, 6, 6, 3, 0, 0, 3, 29, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.087801}
{'[4, 5, 0, 6, 6, 3, 0, 0, 3, 29, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0878451}
{'[4, 5, 0, 6, 6, 3, 0, 0, 3, 29, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.087914}
{'[4, 5, 0, 6, 6, 3, 0, 0, 3, 29, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.08776}
{'[4, 5, 0, 6, 6, 3, 0, 0, 3, 29, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0881009}
{'[4, 5, 0, 6, 6, 3, 0, 0, 3, 29, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0879841}
{'[4, 5, 0, 6, 6, 3, 0, 0, 3, 29, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0878029}
{'[4, 5, 0, 6, 6, 3, 0, 0, 3, 29, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0878289}
{'[4, 5, 0, 6, 6, 3, 0, 0, 3, 29, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0878401}
{'[4, 5, 0, 6, 6, 3, 0, 0, 3, 29, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0878229}
{'[4, 5, 0, 6, 6, 3, 0, 0, 3, 29, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0878561}

out:
 ["{'[4, 5, 0, 6, 6, 3, 0, 0, 3, 29, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0882289}", "{'[4, 5, 0, 6, 6, 3, 0, 0, 3, 29, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0877869}", "{'[4, 5, 0, 6, 6, 3, 0, 0, 3, 29, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0877819}", "{'[4, 5, 0, 6, 6, 3, 0, 0, 3, 29, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0877781}", "{'[4, 5, 0, 6, 6, 3, 0, 0, 3, 29, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0877681}", "{'[4, 5, 0, 6, 6, 3, 0, 0, 3, 29, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0878398}", "{'[4, 5, 0, 6, 6, 3, 0, 0, 3, 29, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0881128}", "{'[4, 5, 0, 6, 6, 3, 0, 0, 3, 29, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0877931}", "{'[4, 5, 0, 6, 6, 3, 0, 0, 3, 29, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.087779}", "{'[4, 5, 0, 6, 6, 3, 0, 0, 3, 29, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0879278}", "{'[4, 5, 0, 6, 6, 3, 0, 0, 3, 29, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0887971}", "{'[4, 5, 0, 6, 6, 3, 0, 0, 3, 29, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0878022}", "{'[4, 5, 0, 6, 6, 3, 0, 0, 3, 29, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0878611}", "{'[4, 5, 0, 6, 6, 3, 0, 0, 3, 29, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0879271}", "{'[4, 5, 0, 6, 6, 3, 0, 0, 3, 29, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.087863}", "{'[4, 5, 0, 6, 6, 3, 0, 0, 3, 29, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.087743}", "{'[4, 5, 0, 6, 6, 3, 0, 0, 3, 29, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.087826}", "{'[4, 5, 0, 6, 6, 3, 0, 0, 3, 29, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0877762}", "{'[4, 5, 0, 6, 6, 3, 0, 0, 3, 29, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0878358}", "{'[4, 5, 0, 6, 6, 3, 0, 0, 3, 29, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.087801}", "{'[4, 5, 0, 6, 6, 3, 0, 0, 3, 29, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0878451}", "{'[4, 5, 0, 6, 6, 3, 0, 0, 3, 29, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.087914}", "{'[4, 5, 0, 6, 6, 3, 0, 0, 3, 29, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.08776}", "{'[4, 5, 0, 6, 6, 3, 0, 0, 3, 29, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0881009}", "{'[4, 5, 0, 6, 6, 3, 0, 0, 3, 29, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0879841}", "{'[4, 5, 0, 6, 6, 3, 0, 0, 3, 29, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0878029}", "{'[4, 5, 0, 6, 6, 3, 0, 0, 3, 29, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0878289}", "{'[4, 5, 0, 6, 6, 3, 0, 0, 3, 29, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0878401}", "{'[4, 5, 0, 6, 6, 3, 0, 0, 3, 29, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0878229}", "{'[4, 5, 0, 6, 6, 3, 0, 0, 3, 29, 0, 26, 1, 1, 0, 1, 1, 0]' : 0.0878561}"]
returning from 'run': {'[4, 5, 0, 6, 6, 3, 0, 0, 3, 29, 0, 26, 1, 1, 0, 1, 1, 0]': ([0.0882289, 0.0877869, 0.0877819, 0.0877781, 0.0877681, 0.0878398, 0.0881128, 0.0877931, 0.087779, 0.0879278, 0.0887971, 0.0878022, 0.0878611, 0.0879271, 0.087863, 0.087743, 0.087826, 0.0877762, 0.0878358, 0.087801, 0.0878451, 0.087914, 0.08776, 0.0881009, 0.0879841, 0.0878029, 0.0878289, 0.0878401, 0.0878229, 0.0878561], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.0882289, 0.0877869, 0.0877819, 0.0877781, 0.0877681, 0.0878398, 0.0881128, 0.0877931, 0.087779, 0.0879278, 0.0887971, 0.0878022, 0.0878611, 0.0879271, 0.087863, 0.087743, 0.087826, 0.0877762, 0.0878358, 0.087801, 0.0878451, 0.087914, 0.08776, 0.0881009, 0.0879841, 0.0878029, 0.0878289, 0.0878401, 0.0878229, 0.0878561], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[4, 5, 0, 6, 6, 3, 0, 0, 3, 29, 0, 26, 1, 1, 0, 1, 1, 0]': ([0.0882289, 0.0877869, 0.0877819, 0.0877781, 0.0877681, 0.0878398, 0.0881128, 0.0877931, 0.087779, 0.0879278, 0.0887971, 0.0878022, 0.0878611, 0.0879271, 0.087863, 0.087743, 0.087826, 0.0877762, 0.0878358, 0.087801, 0.0878451, 0.087914, 0.08776, 0.0881009, 0.0879841, 0.0878029, 0.0878289, 0.0878401, 0.0878229, 0.0878561], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [1, 6, 5, 0, 5, 0, 0, 27, 22, 0, 20, 0, 1, 1, 0, 1]
Fixed Factors: {'T2_J': 6, 'VEC1': 1}
Testing candidate 20: [1, 6, 5, 0, 6, 5, 0, 0, 27, 22, 0, 20, 0, 1, 1, 0, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	67
        Max loop nest depth: 	5
        Additions: 		6566
        Multiplications: 	1872
        Divisions: 		0
        Logical: 		0
        Reads: 			10185
        Writes: 		1204
        Comparisons:		67
        Gotos: 			0
        
digraph CFG {
	ForLoop12785124 [label="ForLoop12785124  for (k=kt; k<=cbv_10; k=k+21) {...",shape=box];
	ForLoop12785124 -> 12784442;
	ForLoop12785124 -> _JOIN_12785124;
	ForLoop12791556 [label="ForLoop12791556  for (k=kt; k<=cbv_34; k=k+21) {...",shape=box];
	ForLoop12791556 -> 12790874;
	ForLoop12791556 -> _JOIN_12791556;
	_JOIN_12788340 [label="_JOIN_12788340None...",shape=box];
	_JOIN_12788340 -> 12854093;
	_JOIN_12800474 [label="_JOIN_12800474None...",shape=box];
	_JOIN_12800474 -> 12800476;
	ForLoop12802644 [label="ForLoop12802644  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) ...",shape=box];
	ForLoop12802644 -> ForLoop12802643;
	ForLoop12802644 -> _JOIN_12802644;
	_JOIN_12793164 [label="_JOIN_12793164None...",shape=box];
	_JOIN_12793164 -> 12859235;
	_JOIN_12801278 [label="_JOIN_12801278None...",shape=box];
	_JOIN_12801278 -> _JOIN_12801281;
	ForLoop12786732 [label="ForLoop12786732  for (k=kt; k<=cbv_16; k=k+21) {...",shape=box];
	ForLoop12786732 -> 12786050;
	ForLoop12786732 -> _JOIN_12786732;
	ForLoop12787536 [label="ForLoop12787536  for (k=kt; k<=cbv_19; k=k+21) {...",shape=box];
	ForLoop12787536 -> 12786854;
	ForLoop12787536 -> _JOIN_12787536;
	_JOIN_12776838 [label="_JOIN_12776838None...",shape=box];
	_JOIN_12776838 -> _JOIN_12776840;
	ForLoop12793164 [label="ForLoop12793164  for (k=kt; k<=cbv_40; k=k+21) {...",shape=box];
	ForLoop12793164 -> 12792482;
	ForLoop12793164 -> _JOIN_12793164;
	12790874 [label="12790874  y[k]=y[k]+A[(i+10)*ny+k]*tmp[(i+10)];...",shape=box];
	ForLoop12802572 [label="ForLoop12802572  for (k=kt; k<=cbv_76; k=k+21) {...",shape=box];
	ForLoop12802572 -> 12802010;
	ForLoop12802572 -> _JOIN_12802572;
	ForLoop12790826 [label="ForLoop12790826  for (k=cbv_32; k<=cbv_33; k=k+1) ...",shape=box];
	ForLoop12790826 -> 12790825;
	ForLoop12790826 -> _JOIN_12790826;
	12801277 [label="12801277  y[k]=y[k]+A[(i+22)*ny+k]*tmp[(i+22)];...",shape=box];
	12801277 -> _JOIN_12801278;
	12785197 [label="12785197  y[k]=y[k]+A[(i+2)*ny+k]*tmp[(i+2)];...",shape=box];
	12785197 -> _JOIN_12785198;
	12793237 [label="12793237  y[k]=y[k]+A[(i+12)*ny+k]*tmp[(i+12)];...",shape=box];
	12793237 -> _JOIN_12793238;
	_JOIN_12801285 [label="_JOIN_12801285None...",shape=box];
	_JOIN_12801285 -> ForLoop12802646;
	12776198 [label="12776198  tmp[i]=tmp[i]+A[i*ny+j]*x[j];...",shape=box];
	ForLoop12795650 [label="ForLoop12795650  for (k=cbv_50; k<=cbv_51; k=k+1) ...",shape=box];
	ForLoop12795650 -> 12795649;
	ForLoop12795650 -> _JOIN_12795650;
	12857521 [label="12857521  register int cbv_35, cbv_36;...",shape=box];
	12786808 [label="12786808  int k;...",shape=box];
	12798914 [label="12798914  y[k]=y[k]+A[(i+20)*ny+k]*tmp[(i+20)];...",shape=box];
	12786805 [label="12786805  y[k]=y[k]+A[(i+4)*ny+k]*tmp[(i+4)];...",shape=box];
	12786805 -> _JOIN_12786806;
	12868073 [label="12868073  register int cbv_73;...",shape=box];
	ForLoop12797988 [label="ForLoop12797988  for (k=kt; k<=cbv_58; k=k+21) {...",shape=box];
	ForLoop12797988 -> 12797306;
	ForLoop12797988 -> _JOIN_12797988;
	_JOIN_12789218 [label="_JOIN_12789218None...",shape=box];
	_JOIN_12789218 -> 12789220;
	ForLoop12801651 [label="ForLoop12801651  for (jt=jj; jt<=cbv_73; jt=jt+8) {...",shape=box];
	ForLoop12801651 -> 12801467;
	ForLoop12801651 -> _JOIN_12801651;
	_JOIN_12802644 [label="_JOIN_12802644None...",shape=box];
	_JOIN_12802644 -> _JOIN_12802646;
	_JOIN_12798792 [label="_JOIN_12798792None...",shape=box];
	_JOIN_12798792 -> 12865234;
	ForLoop12801278 [label="ForLoop12801278  for (k=cbv_71; k<=cbv_72; k=k+1) ...",shape=box];
	ForLoop12801278 -> 12801277;
	ForLoop12801278 -> _JOIN_12801278;
	12793286 [label="12793286  y[k]=y[k]+A[(i+13)*ny+k]*tmp[(i+13)];...",shape=box];
	12790070 [label="12790070  y[k]=y[k]+A[(i+9)*ny+k]*tmp[(i+9)];...",shape=box];
	ForLoop12802646 [label="ForLoop12802646  for (i=(min(nx-1,ii+15))-(((min(nx-1,ii+15))-(ii)+1)%23)+1; i<=min(nx-1,ii+15); i=i+1) {...",shape=box];
	ForLoop12802646 -> 12801396;
	ForLoop12802646 -> _JOIN_12802646;
	12853236 [label="12853236  register int cbv_20, cbv_21;...",shape=box];
	12851522 [label="12851522  register int cbv_14, cbv_15;...",shape=box];
	ForLoop12798062 [label="ForLoop12798062  for (k=cbv_59; k<=cbv_60; k=k+1) ...",shape=box];
	ForLoop12798062 -> 12798061;
	ForLoop12798062 -> _JOIN_12798062;
	_JOIN_12784394 [label="_JOIN_12784394None...",shape=box];
	_JOIN_12784394 -> 12784396;
	12785200 [label="12785200  int k;...",shape=box];
	12795652 [label="12795652  int k;...",shape=box];
	ForLoop12799670 [label="ForLoop12799670  for (k=cbv_65; k<=cbv_66; k=k+1) ...",shape=box];
	ForLoop12799670 -> 12799669;
	ForLoop12799670 -> _JOIN_12799670;
	ForLoop12785198 [label="ForLoop12785198  for (k=cbv_11; k<=cbv_12; k=k+1) ...",shape=box];
	ForLoop12785198 -> 12785197;
	ForLoop12785198 -> _JOIN_12785198;
	12865234 [label="12865234  register int cbv_62, cbv_63;...",shape=box];
	ForLoop12796454 [label="ForLoop12796454  for (k=cbv_53; k<=cbv_54; k=k+1) ...",shape=box];
	ForLoop12796454 -> 12796453;
	ForLoop12796454 -> _JOIN_12796454;
	_JOIN_12791630 [label="_JOIN_12791630None...",shape=box];
	_JOIN_12791630 -> 12791632;
	ForLoop12789948 [label="ForLoop12789948  for (k=kt; k<=cbv_28; k=k+21) {...",shape=box];
	ForLoop12789948 -> 12789266;
	ForLoop12789948 -> _JOIN_12789948;
	12860949 [label="12860949  register int cbv_47, cbv_48;...",shape=box];
	12801689 [label="12801689  tmp[i]=tmp[i]+A[i*ny+j]*x[j];...",shape=box];
	12801689 -> _JOIN_12801690;
	12794894 [label="12794894  y[k]=y[k]+A[(i+15)*ny+k]*tmp[(i+15)];...",shape=box];
	ForLoop12689901 [label="ForLoop12689901  for (i=0; i<=cbv_1; i=i+28) {...",shape=box];
	ForLoop12689901 -> 12689656;
	ForLoop12689901 -> _JOIN_12689901;
	12842204 [label="12842204  register int cbv_2;...",shape=box];
	12801764 [label="12801764  y[kt]=y[kt]+A[i*ny+kt]*tmp[i];...",shape=box];
	ForLoop12785928 [label="ForLoop12785928  for (k=kt; k<=cbv_13; k=k+21) {...",shape=box];
	ForLoop12785928 -> 12785246;
	ForLoop12785928 -> _JOIN_12785928;
	ForLoop12793968 [label="ForLoop12793968  for (k=kt; k<=cbv_43; k=k+21) {...",shape=box];
	ForLoop12793968 -> 12793286;
	ForLoop12793968 -> _JOIN_12793968;
	_JOIN_12783522 [label="_JOIN_12783522None...",shape=box];
	_JOIN_12783522 -> 12848951;
	12792482 [label="12792482  y[k]=y[k]+A[(i+12)*ny+k]*tmp[(i+12)];...",shape=box];
	12869069 [label="12869069  register int cbv_77, cbv_78;...",shape=box];
	12689969 [label="12689969  y[i]=0.0;...",shape=box];
	12689969 -> _JOIN_12689970;
	ForLoop12783590 [label="ForLoop12783590  for (k=cbv_5; k<=cbv_6; k=k+1) ...",shape=box];
	ForLoop12783590 -> 12783589;
	ForLoop12783590 -> _JOIN_12783590;
	_JOIN_12787610 [label="_JOIN_12787610None...",shape=box];
	_JOIN_12787610 -> 12787612;
	ForLoop12797184 [label="ForLoop12797184  for (k=kt; k<=cbv_55; k=k+21) {...",shape=box];
	ForLoop12797184 -> 12796502;
	ForLoop12797184 -> _JOIN_12797184;
	ForLoop12789218 [label="ForLoop12789218  for (k=cbv_26; k<=cbv_27; k=k+1) ...",shape=box];
	ForLoop12789218 -> 12789217;
	ForLoop12789218 -> _JOIN_12789218;
	ForLoop12790022 [label="ForLoop12790022  for (k=cbv_29; k<=cbv_30; k=k+1) ...",shape=box];
	ForLoop12790022 -> 12790021;
	ForLoop12790022 -> _JOIN_12790022;
	_JOIN_12784320 [label="_JOIN_12784320None...",shape=box];
	_JOIN_12784320 -> 12849808;
	ForLoop12792360 [label="ForLoop12792360  for (k=kt; k<=cbv_37; k=k+21) {...",shape=box];
	ForLoop12792360 -> 12791678;
	ForLoop12792360 -> _JOIN_12792360;
	12791632 [label="12791632  int k;...",shape=box];
	ForLoop12799596 [label="ForLoop12799596  for (k=kt; k<=cbv_64; k=k+21) {...",shape=box];
	ForLoop12799596 -> 12798914;
	ForLoop12799596 -> _JOIN_12799596;
	_JOIN_12797184 [label="_JOIN_12797184None...",shape=box];
	_JOIN_12797184 -> 12863520;
	12784393 [label="12784393  y[k]=y[k]+A[(i+1)*ny+k]*tmp[(i+1)];...",shape=box];
	12784393 -> _JOIN_12784394;
	12784396 [label="12784396  int k;...",shape=box];
	12769840 [label="12769840  tmp[i]=0;...",shape=box];
	ForLoop12800400 [label="ForLoop12800400  for (k=kt; k<=cbv_67; k=k+21) {...",shape=box];
	ForLoop12800400 -> 12799718;
	ForLoop12800400 -> _JOIN_12800400;
	_JOIN_12799596 [label="_JOIN_12799596None...",shape=box];
	_JOIN_12799596 -> 12866091;
	12788462 [label="12788462  y[k]=y[k]+A[(i+7)*ny+k]*tmp[(i+7)];...",shape=box];
	ForLoop12801690 [label="ForLoop12801690  for (j=jt; j<=cbv_74; j=j+1) ...",shape=box];
	ForLoop12801690 -> 12801689;
	ForLoop12801690 -> _JOIN_12801690;
	ForLoop12801969 [label="ForLoop12801969  for (kt=kk; kt<=cbv_75; kt=kt+8) {...",shape=box];
	ForLoop12801969 -> 12801764;
	ForLoop12801969 -> _JOIN_12801969;
	12792433 [label="12792433  y[k]=y[k]+A[(i+11)*ny+k]*tmp[(i+11)];...",shape=box];
	12792433 -> _JOIN_12792434;
	12787612 [label="12787612  int k;...",shape=box];
	_JOIN_12789144 [label="_JOIN_12789144None...",shape=box];
	_JOIN_12789144 -> 12854950;
	_JOIN_12689970 [label="_JOIN_12689970None...",shape=box];
	_JOIN_12689970 -> 12697074;
	12802639 [label="12802639  y[k]=y[k]+A[i*ny+k]*tmp[i];...",shape=box];
	12802639 -> _JOIN_12802640;
	_JOIN_12801651 [label="_JOIN_12801651None...",shape=box];
	_JOIN_12801651 -> 12868123;
	12862663 [label="12862663  register int cbv_53, cbv_54;...",shape=box];
	ForLoop12800474 [label="ForLoop12800474  for (k=cbv_68; k<=cbv_69; k=k+1) ...",shape=box];
	ForLoop12800474 -> 12800473;
	ForLoop12800474 -> _JOIN_12800474;
	_JOIN_12794772 [label="_JOIN_12794772None...",shape=box];
	_JOIN_12794772 -> 12860949;
	12793240 [label="12793240  int k;...",shape=box];
	12789266 [label="12789266  y[k]=y[k]+A[(i+8)*ny+k]*tmp[(i+8)];...",shape=box];
	_JOIN_12786806 [label="_JOIN_12786806None...",shape=box];
	_JOIN_12786806 -> 12786808;
	12791629 [label="12791629  y[k]=y[k]+A[(i+10)*ny+k]*tmp[(i+10)];...",shape=box];
	12791629 -> _JOIN_12791630;
	_JOIN_12792434 [label="_JOIN_12792434None...",shape=box];
	_JOIN_12792434 -> 12792436;
	_JOIN_12795576 [label="_JOIN_12795576None...",shape=box];
	_JOIN_12795576 -> 12861806;
	_JOIN_12802643 [label="_JOIN_12802643None...",shape=box];
	_JOIN_12802643 -> _JOIN_12802644;
	ForLoop12788340 [label="ForLoop12788340  for (k=kt; k<=cbv_22; k=k+21) {...",shape=box];
	ForLoop12788340 -> 12787658;
	ForLoop12788340 -> _JOIN_12788340;
	12858378 [label="12858378  register int cbv_38, cbv_39;...",shape=box];
	ForLoop12801281 [label="ForLoop12801281  for (kk=kkk; kk<=min(ny-1,kkk+768); kk=kk+256) {...",shape=box];
	ForLoop12801281 -> 12848259;
	ForLoop12801281 -> _JOIN_12801281;
	_JOIN_12796454 [label="_JOIN_12796454None...",shape=box];
	_JOIN_12796454 -> 12796456;
	_JOIN_12799670 [label="_JOIN_12799670None...",shape=box];
	_JOIN_12799670 -> 12799672;
	12697074 [label="12697074  double x_copy;...",shape=box];
	12790024 [label="12790024  int k;...",shape=box];
	12795649 [label="12795649  y[k]=y[k]+A[(i+15)*ny+k]*tmp[(i+15)];...",shape=box];
	12795649 -> _JOIN_12795650;
	12790021 [label="12790021  y[k]=y[k]+A[(i+8)*ny+k]*tmp[(i+8)];...",shape=box];
	12790021 -> _JOIN_12790022;
	ForLoop12802643 [label="ForLoop12802643  for (kk=kkk; kk<=min(ny-1,kkk+768); kk=kk+256) {...",shape=box];
	ForLoop12802643 -> 12868377;
	ForLoop12802643 -> _JOIN_12802643;
	ForLoop12790752 [label="ForLoop12790752  for (k=kt; k<=cbv_31; k=k+21) {...",shape=box];
	ForLoop12790752 -> 12790070;
	ForLoop12790752 -> _JOIN_12790752;
	12797260 [label="12797260  int k;...",shape=box];
	_JOIN_12776840 [label="_JOIN_12776840None...",shape=box];
	_JOIN_12776840 -> _JOIN_12776842;
	_JOIN_12801283 [label="_JOIN_12801283None...",shape=box];
	_JOIN_12801283 -> _JOIN_12801285;
	_JOIN_12776842 [label="_JOIN_12776842None...",shape=box];
	_JOIN_12776842 -> ForLoop12801283;
	12800476 [label="12800476  int k;...",shape=box];
	ForLoop12802640 [label="ForLoop12802640  for (k=cbv_77; k<=cbv_78; k=k+1) ...",shape=box];
	ForLoop12802640 -> 12802639;
	ForLoop12802640 -> _JOIN_12802640;
	12689656 [label="12689656  y[i]=0.0;...",shape=box];
	12868377 [label="12868377  register int cbv_75;...",shape=box];
	12799718 [label="12799718  y[k]=y[k]+A[(i+21)*ny+k]*tmp[(i+21)];...",shape=box];
	12787609 [label="12787609  y[k]=y[k]+A[(i+5)*ny+k]*tmp[(i+5)];...",shape=box];
	12787609 -> _JOIN_12787610;
	ForLoop12776840 [label="ForLoop12776840  for (jj=jjj; jj<=min(ny-1,jjj+1536); jj=jj+512) {...",shape=box];
	ForLoop12776840 -> 12841515;
	ForLoop12776840 -> _JOIN_12776840;
	ForLoop12776842 [label="ForLoop12776842  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop12776842 -> ForLoop12776840;
	ForLoop12776842 -> _JOIN_12776842;
	12690263 [label="12690263  register int cbv_2, cbv_3;...",shape=box];
	12849808 [label="12849808  register int cbv_8, cbv_9;...",shape=box];
	12868123 [label="12868123  register int cbv_74;...",shape=box];
	ForLoop12801692 [label="ForLoop12801692  for (jj=jjj; jj<=min(ny-1,jjj+1536); jj=jj+512) {...",shape=box];
	ForLoop12801692 -> 12868073;
	ForLoop12801692 -> _JOIN_12801692;
	12796502 [label="12796502  y[k]=y[k]+A[(i+17)*ny+k]*tmp[(i+17)];...",shape=box];
	12795698 [label="12795698  y[k]=y[k]+A[(i+16)*ny+k]*tmp[(i+16)];...",shape=box];
	_JOIN_12793238 [label="_JOIN_12793238None...",shape=box];
	_JOIN_12793238 -> 12793240;
	12855807 [label="12855807  register int cbv_29, cbv_30;...",shape=box];
	12860092 [label="12860092  register int cbv_44, cbv_45;...",shape=box];
	_JOIN_12795650 [label="_JOIN_12795650None...",shape=box];
	_JOIN_12795650 -> 12795652;
	12800522 [label="12800522  y[k]=y[k]+A[(i+22)*ny+k]*tmp[(i+22)];...",shape=box];
	12861806 [label="12861806  register int cbv_50, cbv_51;...",shape=box];
	_JOIN_12788414 [label="_JOIN_12788414None...",shape=box];
	_JOIN_12788414 -> 12788416;
	_JOIN_12802572 [label="_JOIN_12802572None...",shape=box];
	_JOIN_12802572 -> 12869069;
	12715192 [label="12715192  int i;...",shape=box];
	12715192 -> ForLoop12801285;
	_JOIN_12793968 [label="_JOIN_12793968None...",shape=box];
	_JOIN_12793968 -> 12860092;
	12848259 [label="12848259  register int cbv_3;...",shape=box];
	ForLoop12693477 [label="ForLoop12693477  for (ii=0; ii<=nx-1; ii=ii+16) {...",shape=box];
	ForLoop12693477 -> 12715192;
	ForLoop12693477 -> _JOIN_12693477;
	_JOIN_12797258 [label="_JOIN_12797258None...",shape=box];
	_JOIN_12797258 -> 12797260;
	ForLoop12801204 [label="ForLoop12801204  for (k=kt; k<=cbv_70; k=k+21) {...",shape=box];
	ForLoop12801204 -> 12800522;
	ForLoop12801204 -> _JOIN_12801204;
	12850665 [label="12850665  register int cbv_11, cbv_12;...",shape=box];
	ForLoop12783522 [label="ForLoop12783522  for (k=kt; k<=cbv_4; k=k+21) {...",shape=box];
	ForLoop12783522 -> 12782960;
	ForLoop12783522 -> _JOIN_12783522;
	12796453 [label="12796453  y[k]=y[k]+A[(i+16)*ny+k]*tmp[(i+16)];...",shape=box];
	12796453 -> _JOIN_12796454;
	ForLoop12786002 [label="ForLoop12786002  for (k=cbv_14; k<=cbv_15; k=k+1) ...",shape=box];
	ForLoop12786002 -> 12786001;
	ForLoop12786002 -> _JOIN_12786002;
	12798868 [label="12798868  int k;...",shape=box];
	ForLoop12689970 [label="ForLoop12689970  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop12689970 -> 12689969;
	ForLoop12689970 -> _JOIN_12689970;
	12792436 [label="12792436  int k;...",shape=box];
	12799669 [label="12799669  y[k]=y[k]+A[(i+20)*ny+k]*tmp[(i+20)];...",shape=box];
	12799669 -> _JOIN_12799670;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 12689194;
	ForLoop12776160 [label="ForLoop12776160  for (jt=jj; jt<=cbv_1; jt=jt+8) {...",shape=box];
	ForLoop12776160 -> 12770109;
	ForLoop12776160 -> _JOIN_12776160;
	12796456 [label="12796456  int k;...",shape=box];
	_JOIN_12801692 [label="_JOIN_12801692None...",shape=box];
	_JOIN_12801692 -> _JOIN_12801693;
	ForLoop12786806 [label="ForLoop12786806  for (k=cbv_17; k<=cbv_18; k=k+1) ...",shape=box];
	ForLoop12786806 -> 12786805;
	ForLoop12786806 -> _JOIN_12786806;
	_JOIN_12800400 [label="_JOIN_12800400None...",shape=box];
	_JOIN_12800400 -> 12866948;
	12863520 [label="12863520  register int cbv_56, cbv_57;...",shape=box];
	_JOIN_12790752 [label="_JOIN_12790752None...",shape=box];
	_JOIN_12790752 -> 12856664;
	ForLoop12782919 [label="ForLoop12782919  for (kt=kk; kt<=cbv_3; kt=kt+8) {...",shape=box];
	ForLoop12782919 -> 12776913;
	ForLoop12782919 -> _JOIN_12782919;
	12798865 [label="12798865  y[k]=y[k]+A[(i+19)*ny+k]*tmp[(i+19)];...",shape=box];
	12798865 -> _JOIN_12798866;
	12841515 [label="12841515  register int cbv_1;...",shape=box];
	12848951 [label="12848951  register int cbv_5, cbv_6;...",shape=box];
	_JOIN_12783590 [label="_JOIN_12783590None...",shape=box];
	_JOIN_12783590 -> 12783592;
	_JOIN_12782919 [label="_JOIN_12782919None...",shape=box];
	_JOIN_12782919 -> 12782920;
	ForLoop12792434 [label="ForLoop12792434  for (k=cbv_38; k<=cbv_39; k=k+1) ...",shape=box];
	ForLoop12792434 -> 12792433;
	ForLoop12792434 -> _JOIN_12792434;
	12785246 [label="12785246  y[k]=y[k]+A[(i+3)*ny+k]*tmp[(i+3)];...",shape=box];
	_JOIN_12801693 [label="_JOIN_12801693None...",shape=box];
	_JOIN_12801693 -> ForLoop12802644;
	_JOIN_12785198 [label="_JOIN_12785198None...",shape=box];
	_JOIN_12785198 -> 12785200;
	12790828 [label="12790828  int k;...",shape=box];
	12791678 [label="12791678  y[k]=y[k]+A[(i+11)*ny+k]*tmp[(i+11)];...",shape=box];
	12790825 [label="12790825  y[k]=y[k]+A[(i+9)*ny+k]*tmp[(i+9)];...",shape=box];
	12790825 -> _JOIN_12790826;
	_JOIN_12787536 [label="_JOIN_12787536None...",shape=box];
	_JOIN_12787536 -> 12853236;
	_JOIN_12801281 [label="_JOIN_12801281None...",shape=box];
	_JOIN_12801281 -> _JOIN_12801283;
	ForLoop12793238 [label="ForLoop12793238  for (k=cbv_41; k<=cbv_42; k=k+1) ...",shape=box];
	ForLoop12793238 -> 12793237;
	ForLoop12793238 -> _JOIN_12793238;
	12783589 [label="12783589  y[k]=y[k]+A[i*ny+k]*tmp[i];...",shape=box];
	12783589 -> _JOIN_12783590;
	ForLoop12789144 [label="ForLoop12789144  for (k=kt; k<=cbv_25; k=k+21) {...",shape=box];
	ForLoop12789144 -> 12788462;
	ForLoop12789144 -> _JOIN_12789144;
	12867805 [label="12867805  register int cbv_71, cbv_72;...",shape=box];
	_JOIN_12796380 [label="_JOIN_12796380None...",shape=box];
	_JOIN_12796380 -> 12862663;
	12786854 [label="12786854  y[k]=y[k]+A[(i+5)*ny+k]*tmp[(i+5)];...",shape=box];
	12784442 [label="12784442  y[k]=y[k]+A[(i+2)*ny+k]*tmp[(i+2)];...",shape=box];
	ForLoop12788414 [label="ForLoop12788414  for (k=cbv_23; k<=cbv_24; k=k+1) ...",shape=box];
	ForLoop12788414 -> 12788413;
	ForLoop12788414 -> _JOIN_12788414;
	12866948 [label="12866948  register int cbv_68, cbv_69;...",shape=box];
	_JOIN_12790022 [label="_JOIN_12790022None...",shape=box];
	_JOIN_12790022 -> 12790024;
	12788413 [label="12788413  y[k]=y[k]+A[(i+6)*ny+k]*tmp[(i+6)];...",shape=box];
	12788413 -> _JOIN_12788414;
	12787658 [label="12787658  y[k]=y[k]+A[(i+6)*ny+k]*tmp[(i+6)];...",shape=box];
	12788416 [label="12788416  int k;...",shape=box];
	_JOIN_12689901 [label="_JOIN_12689901None...",shape=box];
	_JOIN_12689901 -> 12690263;
	_JOIN_12798866 [label="_JOIN_12798866None...",shape=box];
	_JOIN_12798866 -> 12798868;
	ForLoop12794772 [label="ForLoop12794772  for (k=kt; k<=cbv_46; k=k+21) {...",shape=box];
	ForLoop12794772 -> 12794090;
	ForLoop12794772 -> _JOIN_12794772;
	ForLoop12801285 [label="ForLoop12801285  for (i=ii; i<=min(nx-1,ii+15)-22; i=i+23) {...",shape=box];
	ForLoop12801285 -> 12769840;
	ForLoop12801285 -> _JOIN_12801285;
	12786050 [label="12786050  y[k]=y[k]+A[(i+4)*ny+k]*tmp[(i+4)];...",shape=box];
	ForLoop12801283 [label="ForLoop12801283  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop12801283 -> ForLoop12801281;
	ForLoop12801283 -> _JOIN_12801283;
	ForLoop12798866 [label="ForLoop12798866  for (k=cbv_62; k<=cbv_63; k=k+1) ...",shape=box];
	ForLoop12798866 -> 12798865;
	ForLoop12798866 -> _JOIN_12798866;
	_JOIN_12786732 [label="_JOIN_12786732None...",shape=box];
	_JOIN_12786732 -> 12852379;
	12859235 [label="12859235  register int cbv_41, cbv_42;...",shape=box];
	12794090 [label="12794090  y[k]=y[k]+A[(i+14)*ny+k]*tmp[(i+14)];...",shape=box];
	12854093 [label="12854093  register int cbv_23, cbv_24;...",shape=box];
	ForLoop12797258 [label="ForLoop12797258  for (k=cbv_56; k<=cbv_57; k=k+1) ...",shape=box];
	ForLoop12797258 -> 12797257;
	ForLoop12797258 -> _JOIN_12797258;
	12864377 [label="12864377  register int cbv_59, cbv_60;...",shape=box];
	12797257 [label="12797257  y[k]=y[k]+A[(i+17)*ny+k]*tmp[(i+17)];...",shape=box];
	12797257 -> _JOIN_12797258;
	ForLoop12776838 [label="ForLoop12776838  for (j=jt; j<=cbv_2; j=j+1) {...",shape=box];
	ForLoop12776838 -> 12776198;
	ForLoop12776838 -> _JOIN_12776838;
	_JOIN_12794846 [label="_JOIN_12794846None...",shape=box];
	_JOIN_12794846 -> 12794848;
	_JOIN_12802640 [label="_JOIN_12802640None...",shape=box];
	_JOIN_12802640 -> _JOIN_12802643;
	ForLoop12784394 [label="ForLoop12784394  for (k=cbv_8; k<=cbv_9; k=k+1) ...",shape=box];
	ForLoop12784394 -> 12784393;
	ForLoop12784394 -> _JOIN_12784394;
	12783592 [label="12783592  int k;...",shape=box];
	12801396 [label="12801396  tmp[i]=0;...",shape=box];
	12801396 -> ForLoop12801693;
	12797306 [label="12797306  y[k]=y[k]+A[(i+18)*ny+k]*tmp[(i+18)];...",shape=box];
	12782960 [label="12782960  y[k]=y[k]+A[i*ny+k]*tmp[i];...",shape=box];
	ForLoop12795576 [label="ForLoop12795576  for (k=kt; k<=cbv_49; k=k+21) {...",shape=box];
	ForLoop12795576 -> 12794894;
	ForLoop12795576 -> _JOIN_12795576;
	12856664 [label="12856664  register int cbv_32, cbv_33;...",shape=box];
	12789220 [label="12789220  int k;...",shape=box];
	ForLoop12796380 [label="ForLoop12796380  for (k=kt; k<=cbv_52; k=k+21) {...",shape=box];
	ForLoop12796380 -> 12795698;
	ForLoop12796380 -> _JOIN_12796380;
	_JOIN_12786002 [label="_JOIN_12786002None...",shape=box];
	_JOIN_12786002 -> 12786004;
	_JOIN_12801690 [label="_JOIN_12801690None...",shape=box];
	_JOIN_12801690 -> _JOIN_12801692;
	ForLoop12801693 [label="ForLoop12801693  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) ...",shape=box];
	ForLoop12801693 -> ForLoop12801692;
	ForLoop12801693 -> _JOIN_12801693;
	_JOIN_12789948 [label="_JOIN_12789948None..."expected=9369846271501.798828
actual=9369846271501.798828
,shape=box];
	_JOIN_12789948 -> 12855807;
	_JOIN_12794042 [label="_JOIN_12794042None...",shape=box];
	_JOIN_12794042 -> 12794044;
	_JOIN_12801204 [label="_JOIN_12801204None...",shape=box];
	_JOIN_12801204 -> 12867805;
	ForLoop12794042 [label="ForLoop12794042  for (k=cbv_44; k<=cbv_45; k=k+1) ...",shape=box];
	ForLoop12794042 -> 12794041;
	ForLoop12794042 -> _JOIN_12794042;
	12799672 [label="12799672  int k;...",shape=box];
	_JOIN_12797988 [label="_JOIN_12797988None...",shape=box];
	_JOIN_12797988 -> 12864377;
	12782920 [label="12782920  int k;...",shape=box];
	12776913 [label="12776913  y[kt]=y[kt]+A[i*ny+kt]*tmp[i];...",shape=box];
	ForLoop12794846 [label="ForLoop12794846  for (k=cbv_47; k<=cbv_48; k=k+1) ...",shape=box];
	ForLoop12794846 -> 12794845;
	ForLoop12794846 -> _JOIN_12794846;
	ForLoop12791630 [label="ForLoop12791630  for (k=cbv_35; k<=cbv_36; k=k+1) ...",shape=box];
	ForLoop12791630 -> 12791629;
	ForLoop12791630 -> _JOIN_12791630;
	ForLoop12784320 [label="ForLoop12784320  for (k=kt; k<=cbv_7; k=k+21) {...",shape=box];
	ForLoop12784320 -> 12783638;
	ForLoop12784320 -> _JOIN_12784320;
	12786004 [label="12786004  int k;...",shape=box];
	ForLoop12787610 [label="ForLoop12787610  for (k=cbv_20; k<=cbv_21; k=k+1) ...",shape=box];
	ForLoop12787610 -> 12787609;
	ForLoop12787610 -> _JOIN_12787610;
	12783638 [label="12783638  y[k]=y[k]+A[(i+1)*ny+k]*tmp[(i+1)];...",shape=box];
	12786001 [label="12786001  y[k]=y[k]+A[(i+3)*ny+k]*tmp[(i+3)];...",shape=box];
	12786001 -> _JOIN_12786002;
	12854950 [label="12854950  register int cbv_26, cbv_27;...",shape=box];
	12800473 [label="12800473  y[k]=y[k]+A[(i+21)*ny+k]*tmp[(i+21)];...",shape=box];
	12800473 -> _JOIN_12800474;
	12689194 [label="12689194  int i;...",shape=box];
	_JOIN_12693477 [label="_JOIN_12693477None...",shape=box];
	_JOIN_12785928 [label="_JOIN_12785928None...",shape=box];
	_JOIN_12785928 -> 12851522;
	12770109 [label="12770109  tmp[i]=tmp[i]+A[i*ny+jt]*x[jt];...",shape=box];
	12852379 [label="12852379  register int cbv_17, cbv_18;...",shape=box];
	12794044 [label="12794044  int k;...",shape=box];
	12866091 [label="12866091  register int cbv_65, cbv_66;...",shape=box];
	12794041 [label="12794041  y[k]=y[k]+A[(i+13)*ny+k]*tmp[(i+13)];...",shape=box];
	12794041 -> _JOIN_12794042;
	12789217 [label="12789217  y[k]=y[k]+A[(i+7)*ny+k]*tmp[(i+7)];...",shape=box];
	12789217 -> _JOIN_12789218;
	12802010 [label="12802010  y[k]=y[k]+A[i*ny+k]*tmp[i];...",shape=box];
	12798061 [label="12798061  y[k]=y[k]+A[(i+18)*ny+k]*tmp[(i+18)];...",shape=box];
	12798061 -> _JOIN_12798062;
	ForLoop12798792 [label="ForLoop12798792  for (k=kt; k<=cbv_61; k=k+21) {...",shape=box];
	ForLoop12798792 -> 12798110;
	ForLoop12798792 -> _JOIN_12798792;
	12798064 [label="12798064  int k;...",shape=box];
	_JOIN_12790826 [label="_JOIN_12790826None...",shape=box];
	_JOIN_12790826 -> 12790828;
	_JOIN_12801969 [label="_JOIN_12801969None...",shape=box];
	_JOIN_12801969 -> 12801970;
	_JOIN_12791556 [label="_JOIN_12791556None...",shape=box];
	_JOIN_12791556 -> 12857521;
	12801467 [label="12801467  tmp[i]=tmp[i]+A[i*ny+jt]*x[jt];...",shape=box];
	12794845 [label="12794845  y[k]=y[k]+A[(i+14)*ny+k]*tmp[(i+14)];...",shape=box];
	12794845 -> _JOIN_12794846;
	_JOIN_12798062 [label="_JOIN_12798062None...",shape=box];
	_JOIN_12798062 -> 12798064;
	_JOIN_12802646 [label="_JOIN_12802646None...",shape=box];
	_JOIN_12802646 -> _JOIN_12693477;
	_JOIN_12785124 [label="_JOIN_12785124None...",shape=box];
	_JOIN_12785124 -> 12850665;
	_JOIN_12792360 [label="_JOIN_12792360None...",shape=box];
	_JOIN_12792360 -> 12858378;
	12801970 [label="12801970  int k;...",shape=box];
	12798110 [label="12798110  y[k]=y[k]+A[(i+19)*ny+k]*tmp[(i+19)];...",shape=box];
	12794848 [label="12794848  int k;...",shape=box];
	_JOIN_12776160 [label="_JOIN_12776160None...",shape=box];
	_JOIN_12776160 -> 12842204;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest58.exe __orio_perftest58.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest58.exe  
{'[1, 6, 5, 0, 6, 5, 0, 0, 27, 22, 0, 20, 0, 1, 1, 0, 1, 1]' : 0.14474}
{'[1, 6, 5, 0, 6, 5, 0, 0, 27, 22, 0, 20, 0, 1, 1, 0, 1, 1]' : 0.144655}
{'[1, 6, 5, 0, 6, 5, 0, 0, 27, 22, 0, 20, 0, 1, 1, 0, 1, 1]' : 0.145744}
{'[1, 6, 5, 0, 6, 5, 0, 0, 27, 22, 0, 20, 0, 1, 1, 0, 1, 1]' : 0.144709}
{'[1, 6, 5, 0, 6, 5, 0, 0, 27, 22, 0, 20, 0, 1, 1, 0, 1, 1]' : 0.14733}
{'[1, 6, 5, 0, 6, 5, 0, 0, 27, 22, 0, 20, 0, 1, 1, 0, 1, 1]' : 0.144722}
{'[1, 6, 5, 0, 6, 5, 0, 0, 27, 22, 0, 20, 0, 1, 1, 0, 1, 1]' : 0.144715}
{'[1, 6, 5, 0, 6, 5, 0, 0, 27, 22, 0, 20, 0, 1, 1, 0, 1, 1]' : 0.144629}
{'[1, 6, 5, 0, 6, 5, 0, 0, 27, 22, 0, 20, 0, 1, 1, 0, 1, 1]' : 0.144667}
{'[1, 6, 5, 0, 6, 5, 0, 0, 27, 22, 0, 20, 0, 1, 1, 0, 1, 1]' : 0.144701}
{'[1, 6, 5, 0, 6, 5, 0, 0, 27, 22, 0, 20, 0, 1, 1, 0, 1, 1]' : 0.144663}
{'[1, 6, 5, 0, 6, 5, 0, 0, 27, 22, 0, 20, 0, 1, 1, 0, 1, 1]' : 0.14466}
{'[1, 6, 5, 0, 6, 5, 0, 0, 27, 22, 0, 20, 0, 1, 1, 0, 1, 1]' : 0.144644}
{'[1, 6, 5, 0, 6, 5, 0, 0, 27, 22, 0, 20, 0, 1, 1, 0, 1, 1]' : 0.144671}
{'[1, 6, 5, 0, 6, 5, 0, 0, 27, 22, 0, 20, 0, 1, 1, 0, 1, 1]' : 0.14725}
{'[1, 6, 5, 0, 6, 5, 0, 0, 27, 22, 0, 20, 0, 1, 1, 0, 1, 1]' : 0.144661}
{'[1, 6, 5, 0, 6, 5, 0, 0, 27, 22, 0, 20, 0, 1, 1, 0, 1, 1]' : 0.145762}
{'[1, 6, 5, 0, 6, 5, 0, 0, 27, 22, 0, 20, 0, 1, 1, 0, 1, 1]' : 0.144719}
{'[1, 6, 5, 0, 6, 5, 0, 0, 27, 22, 0, 20, 0, 1, 1, 0, 1, 1]' : 0.144663}
{'[1, 6, 5, 0, 6, 5, 0, 0, 27, 22, 0, 20, 0, 1, 1, 0, 1, 1]' : 0.144716}
{'[1, 6, 5, 0, 6, 5, 0, 0, 27, 22, 0, 20, 0, 1, 1, 0, 1, 1]' : 0.144642}
{'[1, 6, 5, 0, 6, 5, 0, 0, 27, 22, 0, 20, 0, 1, 1, 0, 1, 1]' : 0.144737}
{'[1, 6, 5, 0, 6, 5, 0, 0, 27, 22, 0, 20, 0, 1, 1, 0, 1, 1]' : 0.144662}
{'[1, 6, 5, 0, 6, 5, 0, 0, 27, 22, 0, 20, 0, 1, 1, 0, 1, 1]' : 0.144791}
{'[1, 6, 5, 0, 6, 5, 0, 0, 27, 22, 0, 20, 0, 1, 1, 0, 1, 1]' : 0.144659}
{'[1, 6, 5, 0, 6, 5, 0, 0, 27, 22, 0, 20, 0, 1, 1, 0, 1, 1]' : 0.14728}
{'[1, 6, 5, 0, 6, 5, 0, 0, 27, 22, 0, 20, 0, 1, 1, 0, 1, 1]' : 0.144678}
{'[1, 6, 5, 0, 6, 5, 0, 0, 27, 22, 0, 20, 0, 1, 1, 0, 1, 1]' : 0.144685}
{'[1, 6, 5, 0, 6, 5, 0, 0, 27, 22, 0, 20, 0, 1, 1, 0, 1, 1]' : 0.144697}
{'[1, 6, 5, 0, 6, 5, 0, 0, 27, 22, 0, 20, 0, 1, 1, 0, 1, 1]' : 0.14472}

out:
 ["{'[1, 6, 5, 0, 6, 5, 0, 0, 27, 22, 0, 20, 0, 1, 1, 0, 1, 1]' : 0.14474}", "{'[1, 6, 5, 0, 6, 5, 0, 0, 27, 22, 0, 20, 0, 1, 1, 0, 1, 1]' : 0.144655}", "{'[1, 6, 5, 0, 6, 5, 0, 0, 27, 22, 0, 20, 0, 1, 1, 0, 1, 1]' : 0.145744}", "{'[1, 6, 5, 0, 6, 5, 0, 0, 27, 22, 0, 20, 0, 1, 1, 0, 1, 1]' : 0.144709}", "{'[1, 6, 5, 0, 6, 5, 0, 0, 27, 22, 0, 20, 0, 1, 1, 0, 1, 1]' : 0.14733}", "{'[1, 6, 5, 0, 6, 5, 0, 0, 27, 22, 0, 20, 0, 1, 1, 0, 1, 1]' : 0.144722}", "{'[1, 6, 5, 0, 6, 5, 0, 0, 27, 22, 0, 20, 0, 1, 1, 0, 1, 1]' : 0.144715}", "{'[1, 6, 5, 0, 6, 5, 0, 0, 27, 22, 0, 20, 0, 1, 1, 0, 1, 1]' : 0.144629}", "{'[1, 6, 5, 0, 6, 5, 0, 0, 27, 22, 0, 20, 0, 1, 1, 0, 1, 1]' : 0.144667}", "{'[1, 6, 5, 0, 6, 5, 0, 0, 27, 22, 0, 20, 0, 1, 1, 0, 1, 1]' : 0.144701}", "{'[1, 6, 5, 0, 6, 5, 0, 0, 27, 22, 0, 20, 0, 1, 1, 0, 1, 1]' : 0.144663}", "{'[1, 6, 5, 0, 6, 5, 0, 0, 27, 22, 0, 20, 0, 1, 1, 0, 1, 1]' : 0.14466}", "{'[1, 6, 5, 0, 6, 5, 0, 0, 27, 22, 0, 20, 0, 1, 1, 0, 1, 1]' : 0.144644}", "{'[1, 6, 5, 0, 6, 5, 0, 0, 27, 22, 0, 20, 0, 1, 1, 0, 1, 1]' : 0.144671}", "{'[1, 6, 5, 0, 6, 5, 0, 0, 27, 22, 0, 20, 0, 1, 1, 0, 1, 1]' : 0.14725}", "{'[1, 6, 5, 0, 6, 5, 0, 0, 27, 22, 0, 20, 0, 1, 1, 0, 1, 1]' : 0.144661}", "{'[1, 6, 5, 0, 6, 5, 0, 0, 27, 22, 0, 20, 0, 1, 1, 0, 1, 1]' : 0.145762}", "{'[1, 6, 5, 0, 6, 5, 0, 0, 27, 22, 0, 20, 0, 1, 1, 0, 1, 1]' : 0.144719}", "{'[1, 6, 5, 0, 6, 5, 0, 0, 27, 22, 0, 20, 0, 1, 1, 0, 1, 1]' : 0.144663}", "{'[1, 6, 5, 0, 6, 5, 0, 0, 27, 22, 0, 20, 0, 1, 1, 0, 1, 1]' : 0.144716}", "{'[1, 6, 5, 0, 6, 5, 0, 0, 27, 22, 0, 20, 0, 1, 1, 0, 1, 1]' : 0.144642}", "{'[1, 6, 5, 0, 6, 5, 0, 0, 27, 22, 0, 20, 0, 1, 1, 0, 1, 1]' : 0.144737}", "{'[1, 6, 5, 0, 6, 5, 0, 0, 27, 22, 0, 20, 0, 1, 1, 0, 1, 1]' : 0.144662}", "{'[1, 6, 5, 0, 6, 5, 0, 0, 27, 22, 0, 20, 0, 1, 1, 0, 1, 1]' : 0.144791}", "{'[1, 6, 5, 0, 6, 5, 0, 0, 27, 22, 0, 20, 0, 1, 1, 0, 1, 1]' : 0.144659}", "{'[1, 6, 5, 0, 6, 5, 0, 0, 27, 22, 0, 20, 0, 1, 1, 0, 1, 1]' : 0.14728}", "{'[1, 6, 5, 0, 6, 5, 0, 0, 27, 22, 0, 20, 0, 1, 1, 0, 1, 1]' : 0.144678}", "{'[1, 6, 5, 0, 6, 5, 0, 0, 27, 22, 0, 20, 0, 1, 1, 0, 1, 1]' : 0.144685}", "{'[1, 6, 5, 0, 6, 5, 0, 0, 27, 22, 0, 20, 0, 1, 1, 0, 1, 1]' : 0.144697}", "{'[1, 6, 5, 0, 6, 5, 0, 0, 27, 22, 0, 20, 0, 1, 1, 0, 1, 1]' : 0.14472}"]
returning from 'run': {'[1, 6, 5, 0, 6, 5, 0, 0, 27, 22, 0, 20, 0, 1, 1, 0, 1, 1]': ([0.14474, 0.144655, 0.145744, 0.144709, 0.14733, 0.144722, 0.144715, 0.144629, 0.144667, 0.144701, 0.144663, 0.14466, 0.144644, 0.144671, 0.14725, 0.144661, 0.145762, 0.144719, 0.144663, 0.144716, 0.144642, 0.144737, 0.144662, 0.144791, 0.144659, 0.14728, 0.144678, 0.144685, 0.144697, 0.14472], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.14474, 0.144655, 0.145744, 0.144709, 0.14733, 0.144722, 0.144715, 0.144629, 0.144667, 0.144701, 0.144663, 0.14466, 0.144644, 0.144671, 0.14725, 0.144661, 0.145762, 0.144719, 0.144663, 0.144716, 0.144642, 0.144737, 0.144662, 0.144791, 0.144659, 0.14728, 0.144678, 0.144685, 0.144697, 0.14472], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[1, 6, 5, 0, 6, 5, 0, 0, 27, 22, 0, 20, 0, 1, 1, 0, 1, 1]': ([0.14474, 0.144655, 0.145744, 0.144709, 0.14733, 0.144722, 0.144715, 0.144629, 0.144667, 0.144701, 0.144663, 0.14466, 0.144644, 0.144671, 0.14725, 0.144661, 0.145762, 0.144719, 0.144663, 0.144716, 0.144642, 0.144737, 0.144662, 0.144791, 0.144659, 0.14728, 0.144678, 0.144685, 0.144697, 0.14472], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [3, 5, 0, 4, 0, 1, 0, 1, 22, 9, 0, 0, 2, 0, 0, 0]
Fixed Factors: {'T2_J': 6, 'VEC1': 1}
Testing candidate 21: [3, 5, 0, 4, 6, 0, 1, 0, 1, 22, 9, 0, 0, 2, 0, 0, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	38
        Max loop nest depth: 	6
        Additions: 		6165
        Multiplications: 	1584
        Divisions: 		0
        Logical: 		0
        Reads: 			9126
        Writes: 		922
        Comparisons:		38
        Gotos: 			0
        
digraph CFG {
	ForLoop12872854 [label="ForLoop12872854  for (iii=0; iii<=nx-1; iii=iii+512) ...",shape=box];
	ForLoop12872854 -> ForLoop12872853;
	ForLoop12872854 -> _JOIN_12872854;
	ForLoop12869671 [label="ForLoop12869671  for (i=0; i<=cbv_1; i=i+2) {...",shape=box];
	ForLoop12869671 -> 12869660;
	ForLoop12869671 -> _JOIN_12869671;
	_JOIN_12869740 [label="_JOIN_12869740None...",shape=box];
	_JOIN_12869740 -> 12877057;
	_JOIN_12872854 [label="_JOIN_12872854None...",shape=box];
	_JOIN_12872853 [label="_JOIN_12872853None...",shape=box];
	_JOIN_12872853 -> _JOIN_12872854;
	ForLoop12982103 [label="ForLoop12982103  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) ...",shape=box];
	ForLoop12982103 -> ForLoop12982102;
	ForLoop12982103 -> _JOIN_12982103;
	_JOIN_12982100 [label="_JOIN_12982100None...",shape=box];
	_JOIN_12982100 -> _JOIN_12982102;
	_JOIN_12982103 [label="_JOIN_12982103None...",shape=box];
	_JOIN_12982103 -> ForLoop12982137;
	_JOIN_12982102 [label="_JOIN_12982102None...",shape=box];
	_JOIN_12982102 -> _JOIN_12982103;
	12980407 [label="12980407  y[k]=y[k]+A[i*ny+k]*tmp[i];...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 12869588;
	12982136 [label="12982136  y[k]=y[k]+A[i*ny+k]*tmp[i];...",shape=box];
	12982136 -> _JOIN_12982137;
	12877057 [label="12877057  double x_copy[256];...",shape=box];
	12869739 [label="12869739  y[i]=0.0;...",shape=box];
	12869739 -> _JOIN_12869740;
	12869799 [label="12869799  register int cbv_2, cbv_3;...",shape=box];
	ForLoop12982137 [label="ForLoop12982137  for (k=0; k<=ny-1; k=k+1) ...",shape=box];
	ForLoop12982137 -> 12982136;
	ForLoop12982137 -> _JOIN_12982137;
	ForLoop12982139 [label="ForLoop12982139  for (i=(min(nx-1,ii+63))-(((min(nx-1,ii+63))-(ii)+1)%23)+1; i<=min(nx-1,ii+63); i=iexpected=0.000000
actual=9369846271501.798828
+1) {...",shape=box];
	ForLoop12982139 -> 12981094;
	ForLoop12982139 -> _JOIN_12982139;
	12953550 [label="12953550  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	_JOIN_12980981 [label="_JOIN_12980981None...",shape=box];
	_JOIN_12980981 -> _JOIN_12980983;
	12981156 [label="12981156  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	12981156 -> ForLoop12982100;
	12903545 [label="12903545  int i;...",shape=box];
	12903545 -> ForLoop12980983;
	_JOIN_12869671 [label="_JOIN_12869671None...",shape=box];
	_JOIN_12869671 -> 12869799;
	ForLoop12869740 [label="ForLoop12869740  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop12869740 -> 12869739;
	ForLoop12869740 -> _JOIN_12869740;
	ForLoop12980374 [label="ForLoop12980374  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop12980374 -> ForLoop12980372;
	ForLoop12980374 -> _JOIN_12980374;
	12869588 [label="12869588  int i;...",shape=box];
	12981199 [label="12981199  tmp[i]=tmp[i]+A[i*ny+jt]*x_copy[(jt-jj)];...",shape=box];
	_JOIN_12982137 [label="_JOIN_12982137None...",shape=box];
	_JOIN_12982137 -> _JOIN_12982139;
	ForLoop12980370 [label="ForLoop12980370  for (jt=jj; jt<=min(ny-1,jj+255)-31; jt=jt+32) {...",shape=box];
	ForLoop12980370 -> 12954275;
	ForLoop12980370 -> _JOIN_12980370;
	ForLoop12980372 [label="ForLoop12980372  for (jj=jjj; jj<=min(ny-1,jjj+1792); jj=jj+256) {...",shape=box];
	ForLoop12980372 -> 12953550;
	ForLoop12980372 -> _JOIN_12980372;
	12953290 [label="12953290  tmp[i]=0;...",shape=box];
	12981094 [label="12981094  tmp[i]=0;...",shape=box];
	12981094 -> ForLoop12982103;
	_JOIN_12982139 [label="_JOIN_12982139None...",shape=box];
	_JOIN_12982139 -> _JOIN_12872853;
	ForLoop12872853 [label="ForLoop12872853  for (ii=iii; ii<=min(nx-1,iii+448); ii=ii+64) {...",shape=box];
	ForLoop12872853 -> 12903545;
	ForLoop12872853 -> _JOIN_12872853;
	ForLoop12980983 [label="ForLoop12980983  for (i=ii; i<=min(nx-1,ii+63)-22; i=i+23) {...",shape=box];
	ForLoop12980983 -> 12953290;
	ForLoop12980983 -> _JOIN_12980983;
	ForLoop12980981 [label="ForLoop12980981  for (k=0; k<=ny-1; k=k+1) {...",shape=box];
	ForLoop12980981 -> 12980407;
	ForLoop12980981 -> _JOIN_12980981;
	_JOIN_12980374 [label="_JOIN_12980374None...",shape=box];
	_JOIN_12980374 -> ForLoop12980981;
	_JOIN_12980983 [label="_JOIN_12980983None...",shape=box];
	_JOIN_12980983 -> ForLoop12982139;
	_JOIN_12980370 [label="_JOIN_12980370None...",shape=box];
	_JOIN_12980370 -> _JOIN_12980372;
	ForLoop12982100 [label="ForLoop12982100  for (jt=jj; jt<=min(ny-1,jj+255)-31; jt=jt+32) {...",shape=box];
	ForLoop12982100 -> 12981199;
	ForLoop12982100 -> _JOIN_12982100;
	_JOIN_12980372 [label="_JOIN_12980372None...",shape=box];
	_JOIN_12980372 -> _JOIN_12980374;
	ForLoop12982102 [label="ForLoop12982102  for (jj=jjj; jj<=min(ny-1,jjj+1792); jj=jj+256) {...",shape=box];
	ForLoop12982102 -> 12981156;
	ForLoop12982102 -> _JOIN_12982102;
	12869660 [label="12869660  y[i]=0.0;...",shape=box];
	12954275 [label="12954275  tmp[i]=tmp[i]+A[i*ny+jt]*x_copy[(jt-jj)];...",shape=box];

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest59.exe __orio_perftest59.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest59.exe  
{'[3, 5, 0, 4, 6, 0, 1, 0, 1, 22, 9, 0, 0, 2, 0, 0, 1, 0]' : 0.142197}
{'[3, 5, 0, 4, 6, 0, 1, 0, 1, 22, 9, 0, 0, 2, 0, 0, 1, 0]' : 0.141927}
{'[3, 5, 0, 4, 6, 0, 1, 0, 1, 22, 9, 0, 0, 2, 0, 0, 1, 0]' : 0.141686}
{'[3, 5, 0, 4, 6, 0, 1, 0, 1, 22, 9, 0, 0, 2, 0, 0, 1, 0]' : 0.142116}
{'[3, 5, 0, 4, 6, 0, 1, 0, 1, 22, 9, 0, 0, 2, 0, 0, 1, 0]' : 0.141821}
{'[3, 5, 0, 4, 6, 0, 1, 0, 1, 22, 9, 0, 0, 2, 0, 0, 1, 0]' : 0.142088}
{'[3, 5, 0, 4, 6, 0, 1, 0, 1, 22, 9, 0, 0, 2, 0, 0, 1, 0]' : 0.142086}
{'[3, 5, 0, 4, 6, 0, 1, 0, 1, 22, 9, 0, 0, 2, 0, 0, 1, 0]' : 0.141999}
{'[3, 5, 0, 4, 6, 0, 1, 0, 1, 22, 9, 0, 0, 2, 0, 0, 1, 0]' : 0.142088}
{'[3, 5, 0, 4, 6, 0, 1, 0, 1, 22, 9, 0, 0, 2, 0, 0, 1, 0]' : 0.141853}
{'[3, 5, 0, 4, 6, 0, 1, 0, 1, 22, 9, 0, 0, 2, 0, 0, 1, 0]' : 0.142022}
{'[3, 5, 0, 4, 6, 0, 1, 0, 1, 22, 9, 0, 0, 2, 0, 0, 1, 0]' : 0.141949}
{'[3, 5, 0, 4, 6, 0, 1, 0, 1, 22, 9, 0, 0, 2, 0, 0, 1, 0]' : 0.143032}
{'[3, 5, 0, 4, 6, 0, 1, 0, 1, 22, 9, 0, 0, 2, 0, 0, 1, 0]' : 0.141887}
{'[3, 5, 0, 4, 6, 0, 1, 0, 1, 22, 9, 0, 0, 2, 0, 0, 1, 0]' : 0.142191}
{'[3, 5, 0, 4, 6, 0, 1, 0, 1, 22, 9, 0, 0, 2, 0, 0, 1, 0]' : 0.141944}
{'[3, 5, 0, 4, 6, 0, 1, 0, 1, 22, 9, 0, 0, 2, 0, 0, 1, 0]' : 0.1419}
{'[3, 5, 0, 4, 6, 0, 1, 0, 1, 22, 9, 0, 0, 2, 0, 0, 1, 0]' : 0.142069}
{'[3, 5, 0, 4, 6, 0, 1, 0, 1, 22, 9, 0, 0, 2, 0, 0, 1, 0]' : 0.141998}
{'[3, 5, 0, 4, 6, 0, 1, 0, 1, 22, 9, 0, 0, 2, 0, 0, 1, 0]' : 0.142126}
{'[3, 5, 0, 4, 6, 0, 1, 0, 1, 22, 9, 0, 0, 2, 0, 0, 1, 0]' : 0.141814}
{'[3, 5, 0, 4, 6, 0, 1, 0, 1, 22, 9, 0, 0, 2, 0, 0, 1, 0]' : 0.141994}
{'[3, 5, 0, 4, 6, 0, 1, 0, 1, 22, 9, 0, 0, 2, 0, 0, 1, 0]' : 0.141975}
{'[3, 5, 0, 4, 6, 0, 1, 0, 1, 22, 9, 0, 0, 2, 0, 0, 1, 0]' : 0.141843}
{'[3, 5, 0, 4, 6, 0, 1, 0, 1, 22, 9, 0, 0, 2, 0, 0, 1, 0]' : 0.141869}
{'[3, 5, 0, 4, 6, 0, 1, 0, 1, 22, 9, 0, 0, 2, 0, 0, 1, 0]' : 0.142203}
{'[3, 5, 0, 4, 6, 0, 1, 0, 1, 22, 9, 0, 0, 2, 0, 0, 1, 0]' : 0.142945}
{'[3, 5, 0, 4, 6, 0, 1, 0, 1, 22, 9, 0, 0, 2, 0, 0, 1, 0]' : 0.14185}
{'[3, 5, 0, 4, 6, 0, 1, 0, 1, 22, 9, 0, 0, 2, 0, 0, 1, 0]' : 0.141976}
{'[3, 5, 0, 4, 6, 0, 1, 0, 1, 22, 9, 0, 0, 2, 0, 0, 1, 0]' : 0.142044}

out:
 ["{'[3, 5, 0, 4, 6, 0, 1, 0, 1, 22, 9, 0, 0, 2, 0, 0, 1, 0]' : 0.142197}", "{'[3, 5, 0, 4, 6, 0, 1, 0, 1, 22, 9, 0, 0, 2, 0, 0, 1, 0]' : 0.141927}", "{'[3, 5, 0, 4, 6, 0, 1, 0, 1, 22, 9, 0, 0, 2, 0, 0, 1, 0]' : 0.141686}", "{'[3, 5, 0, 4, 6, 0, 1, 0, 1, 22, 9, 0, 0, 2, 0, 0, 1, 0]' : 0.142116}", "{'[3, 5, 0, 4, 6, 0, 1, 0, 1, 22, 9, 0, 0, 2, 0, 0, 1, 0]' : 0.141821}", "{'[3, 5, 0, 4, 6, 0, 1, 0, 1, 22, 9, 0, 0, 2, 0, 0, 1, 0]' : 0.142088}", "{'[3, 5, 0, 4, 6, 0, 1, 0, 1, 22, 9, 0, 0, 2, 0, 0, 1, 0]' : 0.142086}", "{'[3, 5, 0, 4, 6, 0, 1, 0, 1, 22, 9, 0, 0, 2, 0, 0, 1, 0]' : 0.141999}", "{'[3, 5, 0, 4, 6, 0, 1, 0, 1, 22, 9, 0, 0, 2, 0, 0, 1, 0]' : 0.142088}", "{'[3, 5, 0, 4, 6, 0, 1, 0, 1, 22, 9, 0, 0, 2, 0, 0, 1, 0]' : 0.141853}", "{'[3, 5, 0, 4, 6, 0, 1, 0, 1, 22, 9, 0, 0, 2, 0, 0, 1, 0]' : 0.142022}", "{'[3, 5, 0, 4, 6, 0, 1, 0, 1, 22, 9, 0, 0, 2, 0, 0, 1, 0]' : 0.141949}", "{'[3, 5, 0, 4, 6, 0, 1, 0, 1, 22, 9, 0, 0, 2, 0, 0, 1, 0]' : 0.143032}", "{'[3, 5, 0, 4, 6, 0, 1, 0, 1, 22, 9, 0, 0, 2, 0, 0, 1, 0]' : 0.141887}", "{'[3, 5, 0, 4, 6, 0, 1, 0, 1, 22, 9, 0, 0, 2, 0, 0, 1, 0]' : 0.142191}", "{'[3, 5, 0, 4, 6, 0, 1, 0, 1, 22, 9, 0, 0, 2, 0, 0, 1, 0]' : 0.141944}", "{'[3, 5, 0, 4, 6, 0, 1, 0, 1, 22, 9, 0, 0, 2, 0, 0, 1, 0]' : 0.1419}", "{'[3, 5, 0, 4, 6, 0, 1, 0, 1, 22, 9, 0, 0, 2, 0, 0, 1, 0]' : 0.142069}", "{'[3, 5, 0, 4, 6, 0, 1, 0, 1, 22, 9, 0, 0, 2, 0, 0, 1, 0]' : 0.141998}", "{'[3, 5, 0, 4, 6, 0, 1, 0, 1, 22, 9, 0, 0, 2, 0, 0, 1, 0]' : 0.142126}", "{'[3, 5, 0, 4, 6, 0, 1, 0, 1, 22, 9, 0, 0, 2, 0, 0, 1, 0]' : 0.141814}", "{'[3, 5, 0, 4, 6, 0, 1, 0, 1, 22, 9, 0, 0, 2, 0, 0, 1, 0]' : 0.141994}", "{'[3, 5, 0, 4, 6, 0, 1, 0, 1, 22, 9, 0, 0, 2, 0, 0, 1, 0]' : 0.141975}", "{'[3, 5, 0, 4, 6, 0, 1, 0, 1, 22, 9, 0, 0, 2, 0, 0, 1, 0]' : 0.141843}", "{'[3, 5, 0, 4, 6, 0, 1, 0, 1, 22, 9, 0, 0, 2, 0, 0, 1, 0]' : 0.141869}", "{'[3, 5, 0, 4, 6, 0, 1, 0, 1, 22, 9, 0, 0, 2, 0, 0, 1, 0]' : 0.142203}", "{'[3, 5, 0, 4, 6, 0, 1, 0, 1, 22, 9, 0, 0, 2, 0, 0, 1, 0]' : 0.142945}", "{'[3, 5, 0, 4, 6, 0, 1, 0, 1, 22, 9, 0, 0, 2, 0, 0, 1, 0]' : 0.14185}", "{'[3, 5, 0, 4, 6, 0, 1, 0, 1, 22, 9, 0, 0, 2, 0, 0, 1, 0]' : 0.141976}", "{'[3, 5, 0, 4, 6, 0, 1, 0, 1, 22, 9, 0, 0, 2, 0, 0, 1, 0]' : 0.142044}"]
returning from 'run': {'[3, 5, 0, 4, 6, 0, 1, 0, 1, 22, 9, 0, 0, 2, 0, 0, 1, 0]': ([0.142197, 0.141927, 0.141686, 0.142116, 0.141821, 0.142088, 0.142086, 0.141999, 0.142088, 0.141853, 0.142022, 0.141949, 0.143032, 0.141887, 0.142191, 0.141944, 0.1419, 0.142069, 0.141998, 0.142126, 0.141814, 0.141994, 0.141975, 0.141843, 0.141869, 0.142203, 0.142945, 0.14185, 0.141976, 0.142044], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.142197, 0.141927, 0.141686, 0.142116, 0.141821, 0.142088, 0.142086, 0.141999, 0.142088, 0.141853, 0.142022, 0.141949, 0.143032, 0.141887, 0.142191, 0.141944, 0.1419, 0.142069, 0.141998, 0.142126, 0.141814, 0.141994, 0.141975, 0.141843, 0.141869, 0.142203, 0.142945, 0.14185, 0.141976, 0.142044], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[3, 5, 0, 4, 6, 0, 1, 0, 1, 22, 9, 0, 0, 2, 0, 0, 1, 0]': ([0.142197, 0.141927, 0.141686, 0.142116, 0.141821, 0.142088, 0.142086, 0.141999, 0.142088, 0.141853, 0.142022, 0.141949, 0.143032, 0.141887, 0.142191, 0.141944, 0.1419, 0.142069, 0.141998, 0.142126, 0.141814, 0.141994, 0.141975, 0.141843, 0.141869, 0.142203, 0.142945, 0.14185, 0.141976, 0.142044], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [1, 6, 4, 5, 4, 0, 1, 10, 1, 2, 0, 1, 1, 0, 1, 1]
Fixed Factors: {'T2_J': 6, 'VEC1': 1}
Testing candidate 22: [1, 6, 4, 5, 6, 4, 0, 1, 10, 1, 2, 0, 1, 1, 0, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	41
        Max loop nest depth: 	6
        Additions: 		729
        Multiplications: 	286
        Divisions: 		0
        Logical: 		0
        Reads: 			1572
        Writes: 		318
        Comparisons:		41
        Gotos: 			0
        
digraph CFG {
	13154943 [label="13154943  for (k=kk; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	13154943 -> _JOIN_13154945;
	13154087 [label="13154087  scv_31=scv_31+A[(i+1)*ny+j]*x[j];...",shape=box];
	13154087 -> _JOIN_13154088;
	13152872 [label="13152872  for (k=kk; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	ForLoop13153142 [label="ForLoop13153142  for (k=kk; k<=cbv_5; k=k+1) {...",shape=box];
	ForLoop13153142 -> 13165703;
	ForLoop13153142 -> _JOIN_13153142;
	_JOIN_13153890 [label="_JOIN_13153890None...",shape=box];
	_JOIN_13153890 -> 13153892;
	13154641 [label="13154641  int j;...",shape=box];
	ForLoop13151762 [label="ForLoop13151762  for (jt=jj; jt<=cbv_1; jt=jt+8) {...",shape=box];
	ForLoop13151762 -> 13157962;
	ForLoop13151762 -> _JOIN_13151762;
	13153730 [label="13153730  int j;...",shape=box];
	13188439 [label="13188439  register int cbv_14;...",shape=box];
	ForLoop13154640 [label="ForLoop13154640  for (jt=jj; jt<=cbv_14; jt=jt+8) {...",shape=box];
	ForLoop13154640 -> 13154456;
	ForLoop13154640 -> _JOIN_13154640;
	13188606 [label="13188606  register int cbv_16, cbv_17;...",shape=box];
	ForLoop13154088 [label="ForLoop13154088  for (j=cbv_11; j<=cbv_12; j=j+1) {...",shape=box];
	ForLoop13154088 -> 13154087;
	ForLoop13154088 -> _JOIN_13154088;
	ForLoop13153822 [label="ForLoop13153822  for (j=jt; j<=cbv_7; j=j+3) {...",shape=box];
	ForLoop13153822 -> 13153770;
	ForLoop13153822 -> _JOIN_13153822;
	ForLoop13152809 [label="ForLoop13152809  for (jj=jjj; jj<=min(ny-1,jjj+1536); jj=jj+512) {...",shape=box];
	ForLoop13152809 -> 13186463;
	ForLoop13152809 -> _JOIN_13152809;
	ForLoop13152806 [label="ForLoop13152806  for (j=cbv_3; j<=cbv_4; j=j+1) {...",shape=box];
	ForLoop13152806 -> 13159541;
	ForLoop13152806 -> _JOIN_13152806;
	_JOIN_13153176 [label="_JOIN_13153176None...",shape=box];
	_JOIN_13153176 -> 13169574;
	_JOIN_13154801 [label="_JOIN_13154801None...",shape=box];
	_JOIN_13154801 -> _JOIN_13154804;
	_JOIN_13154912 [label="_JOIN_13154912None...",shape=box];
	_JOIN_13154912 -> 13154943;
	13154867 [label="13154867  for (k=kk; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	ForLoop13152534 [label="ForLoop13152534  for (j=jt; j<=cbv_2; j=j+3) {...",shape=box];
	ForLoop13152534 -> 13159145;
	ForLoop13152534 -> _JOIN_13152534;
	13154155 [label="13154155  for (k=kk; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	13186463 [label="13186463  register int cbv_1;...",shape=box];
	_JOIN_13154804 [label="_JOIN_13154804None...",shape=box];
	_JOIN_13154804 -> _JOIN_13154805;
	13170604 [label="13170604  double scv_22, scv_23, scv_24, scv_25, scv_26, scv_27, scv_28, scv_29;...",shape=box];
	_JOIN_13154264 [label="_JOIN_13154264None...",shape=box];
	_JOIN_13154264 -> 13154295;
	ForLoop13154264 [label="ForLoop13154264  for (k=kk; k<=cbv_13; k=k+1) {...",shape=box];
	ForLoop13154264 -> 13172952;
	ForLoop13154264 -> _JOIN_13154264;
	_JOIN_13154640 [label="_JOIN_13154640None...",shape=box];
	_JOIN_13154640 -> 13154641;
	13153892 [label="13153892  int j;...",shape=box];
	13153941 [label="13153941  scv_31=scv_31+A[(i+1)*ny+j]*x[j];...",shape=box];
	13174577 [label="13174577  tmp[(i+1)]=scv_31;...",shape=box];
	ForLoop13154948 [label="ForLoop13154948  for (i=(min(nx-1,ii+15))-(((min(nx-1,ii+15))-(it)+1)%2)+1; i<=min(nx-1,ii+15); i=i+1) {...",shape=box];
	ForLoop13154948 -> 13176960;
	ForLoop13154948 -> _JOIN_13154948;
	ForLoop13154946 [label="ForLoop13154946  for (kkk=0; kkk<=ny-1; kkk=kkk+512) {...",shape=box];
	ForLoop13154946 -> ForLoop13154945;
	ForLoop13154946 -> _JOIN_13154946;
	ForLoop13154945 [label="ForLoop13154945  for (kk=kkk; kk<=min(ny-1,kkk+384); kk=kk+128) {...",shape=box];
	ForLoop13154945 -> 13154867;
	ForLoop13154945 -> _JOIN_13154945;
	ForLoop13153729 [label="ForLoop13153729  for (jt=jj; jt<=cbv_6; jt=jt+8) {...",shape=box];
	ForLoop13153729 -> 13170604;
	ForLoop13153729 -> _JOIN_13153729;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 13040023;
	_JOIN_13153175 [label="_JOIN_13153175None...",shape=box];
	_JOIN_13153175 -> _JOIN_13153176;
	_JOIN_13153178 [label="_JOIN_13153178None...",shape=box];
	_JOIN_13153178 -> 13153179;
	13151763 [label="13151763  int j;...",shape=box];
	_JOIN_13154011 [label="_JOIN_13154011None...",shape=box];
	_JOIN_13154011 -> 13188124;
	13159541 [label="13159541  double scv_12;...",shape=box];
	13153889 [label="13153889  scv_32=scv_32+A[i*ny+j]*x[j];...",shape=box];
	13153889 -> _JOIN_13153890;
	13159145 [label="13159145  double scv_9, scv_10, scv_11;...",shape=box];
	_JOIN_13154088 [label="_JOIN_13154088None...",shape=box];
	_JOIN_13154088 -> _JOIN_13154091;
	ForLoop13154951 [label="ForLoop13154951  for (ii=iii; ii<=min(nx-1,iii+1008); ii=ii+16) {...",shape=box];
	ForLoop13154951 -> ForLoop13153178;
	ForLoop13154951 -> _JOIN_13154951;
	ForLoop13154952 [label="ForLoop13154952  for (iii=0; iii<=nx-1; iii=iii+1024) {...",shape=box];
	ForLoop13154952 -> ForLoop13154951;
	ForLoop13154952 -> _JOIN_13154952;
	ForLoop13154328 [label="ForLoop13154328  for (kk=kkk; kk<=min(ny-1,kkk+384); kk=kk+128) {...",shape=box];
	ForLoop13154328 -> 13154155;
	ForLoop13154328 -> _JOIN_13154328;
	13187745 [label="13187745  register int cbv_6;...",shape=box];
	_JOIN_13154093 [label="_JOIN_13154093None...",shape=box];
	_JOIN_13154093 -> ForLoop13154330;
	ForLoop13154733 [label="ForLoop13154733  for (j=jt; j<=cbv_15; j=j+3) {...",shape=box];
	ForLoop13154733 -> 13154681;
	ForLoop13154733 -> _JOIN_13154733;
	13154456 [label="13154456  scv_34=scv_34+A[i*ny+jt]*x[jt];...",shape=box];
	13172952 [label="13172952  double scv_30;...",shape=box];
	_JOIN_13154805 [label="_JOIN_13154805None...",shape=box];
	_JOIN_13154805 -> ForLoop13154946;
	13174559 [label="13174559  double scv_31, scv_32;...",shape=box];
	13153770 [label="13153770  scv_32=scv_32+A[i*ny+j]*x[j];...",shape=box];
	ForLoop13154801 [label="ForLoop13154801  for (j=cbv_16; j<=cbv_17; j=j+1) {...",shape=box];
	ForLoop13154801 -> 13154800;
	ForLoop13154801 -> _JOIN_13154801;
	ForLoop13154804 [label="ForLoop13154804  for (jj=jjj; jj<=min(ny-1,jjj+1536); jj=jj+512) {...",shape=box];
	ForLoop13154804 -> 13188439;
	ForLoop13154804 -> _JOIN_13154804;
	ForLoop13154805 [label="ForLoop13154805  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop13154805 -> ForLoop13154804;
	ForLoop13154805 -> _JOIN_13154805;
	ForLoop13040322 [label="ForLoop13040322  for (i=0; i<=cbv_1; i=i+11) {...",shape=box];
	ForLoop13040322 -> 13040230;
	ForLoop13040322 -> _JOIN_13040322;
	13154681 [label="13154681  scv_34=scv_34+A[i*ny+j]*x[j];...",shape=box];
	13157962 [label="13157962  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	_JOIN_13154091 [label="_JOIN_13154091None...",shape=box];
	_JOIN_13154091 -> _JOIN_13154093;
	13169574 [label="13169574  tmp[it]=scv_14;...",shape=box];
	13154800 [label="13154800  scv_34=scv_34+A[i*ny+j]*x[j];...",shape=box];
	13154800 -> _JOIN_13154801;
	13153179 [label="13153179  int i;...",shape=box];
	13153179 -> ForLoop13154332;
	13153173 [label="13153173  for (k=kk; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	13153173 -> _JOIN_13153175;
	ForLoop13154330 [label="ForLoop13154330  for (kkk=0; kkk<=ny-1; kkk=kkk+512) {...",shape=box];
	ForLoop13154330 -> ForLoop13154328;
	ForLoop13154330 -> _JOIN_13154330;
	ForLoop13154332 [label="ForLoop13154332  for (i=it; i<=min(nx-1,ii+15)-1; i=i+2) {...",shape=box];
	ForLoop13154332 -> 13174559;
	ForLoop13154332 -> _JOIN_13154332;
	_JOIN_13153729 [label="_JOIN_13153729None...",shape=box];
	_JOIN_13153729 -> 13153730;
	_JOIN_13154733 [label="_JOIN_13154733None...",shape=box];
	_JOIN_13154733 -> 13188606;
	_JOIN_13040391 [label="_JOIN_13040391None...",shape=box];
	_JOIN_13040391 -> 13149531;
	_JOIN_13154951 [label="_JOIN_13154951None...",shape=box];
	_JOIN_13154951 -> _JOIN_13154952;
	_JOIN_13154952 [label="_JOIN_13154952None...",shape=box];
	ForLoop13040391 [label="ForLoop13040391  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop13040391 -> 13040390;
	ForLoop13040391 -> _JOIN_13040391;
	_JOIN_13152534 [label="_JOIN_13152534None...",shape=box];
	_JOIN_13152534 -> 13187152;
	ForLoop13153176 [label="ForLoop13153176  for (kkk=0; kkk<=ny-1; kkk=kkk+512) {...",shape=box];
	ForLoop13153176 -> ForLoop13153175;
	ForLoop13153176 -> _JOIN_13153176;
	13154295 [label="13154295  for (k=kk; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	ForLoop13153178 [label="ForLoop13153178  for (it=ii; it<=min(nx-1,ii+15)-7; it=it+8) {...",shape=box];
	ForLoop13153178 -> 13169562;
	ForLoop13153178 -> _JOIN_13153178;
	13187912 [label="13187912  register int cbv_8, cbv_9;...",shape=box];
	13169562 [label="13169562  double scv_14, scv_15, scv_16, scv_17, scv_18, scv_19, scv_20, scv_21;...",shape=box];
	13188124 [label="13188124  register int cbv_11, cbv_12;...",shape=box];
	13176972 [label="13176972  tmp[i]=scv_34;...",shape=box];
	13176972 -> _JOIN_13154948;
	_JOIN_13152806 [label="_JOIN_13152806None...",shape=box];
	_JOIN_13152806 -> _JOIN_13152809;
	_JOIN_13152809 [label="_JOIN_13152809None...",shape=box];
	_JOIN_13152809 -> _JOIN_13152810;
	_JOIN_13040322 [label="_JOIN_13040322None...",shape=box];
	_JOIN_13040322 -> 13040531;
	13040390 [label="13040390  y[i]=0.0;...",shape=box];
	13040390 -> _JOIN_13040391;
	13040023 [label="13040023  int i;...",shape=box];
	_JOIN_13154948 [label="_JOIN_13154948None...",shape=box];
	_JOIN_13154948 -> _JOIN_13154951;
	_JOIN_13154946 [label="_JOIN_13154946None...",shape=box];
	_JOIN_13154946 -> 13176972;
	_JOIN_13154945 [label="_JOIN_13154945None...",shape=box];
	_JOIN_13154945 -> _JOIN_13154946;
	ForLoop13153890 [label="ForLoop13153890  for (j=cbv_8; j<=cbv_9; j=j+1) {...",shape=box];
	ForLoop13153890 -> 13153889;
	ForLoop13153890 -> _JOIN_13153890;
	13149531 [label="13149531  double x_copy;...",shape=box];
	13040230 [label="13040230  y[i]=0.0;...",shape=box];
	13176960 [label="13176960  double scv_34;...",shape=box];
	_JOIN_13154330 [label="_JOIN_13154330None...",shape=box];
	_JOIN_13154330 -> 13174577;
	_JOIN_13154332 [label="_JOIN_13154332None...",shape=box];
	_JOIN_13154332 -> ForLoop13154948;
	_JOIN_13152810 [label="_JOIN_13152810None...",shape=box];
	_JOIN_13152810 -> ForLoop13153176;
	13176043 [label="13176043  double scv_33;...",shape=box];
	13187152 [label="13187152  register int cbv_3, cbv_4;...",shape=box];
	13165703 [label="13165703  double scv_13;...",shape=box];
	_JOIN_13151762 [label="_JOIN_13151762None...",shape=box];
	_JOIN_13151762 -> 13151763;
	ForLoop13154912 [label="ForLoop13154912  for (k=kk; k<=cbv_18; k=k+1) {...",shape=box];
	ForLoop13154912 -> 13176043;
	ForLoop13154912 -> _JOIN_13154912;
	ForLoop13154011 [label="ForLoop13154011  for (j=jt; j<=cbv_10; j=j+3) {...",shape=box];
	ForLoop13154011 -> 13153941;
	ForLoop13154011 -> _JOIN_13154011;
	13040531 [label="13040531  register int cbv_2, cbv_3;...",shape=box];
	_JOIN_13154328 [label="_JOIN_13154328None...",shape=box];
	_JOIN_13154328 -> _JOIN_13expected=9369846271501.798828
actual=9369846271501.798828
154330;
	_JOIN_13153822 [label="_JOIN_13153822None...",shape=box];
	_JOIN_13153822 -> 13187912;
	ForLoop13153175 [label="ForLoop13153175  for (kk=kkk; kk<=min(ny-1,kkk+384); kk=kk+128) {...",shape=box];
	ForLoop13153175 -> 13152872;
	ForLoop13153175 -> _JOIN_13153175;
	_JOIN_13153142 [label="_JOIN_13153142None...",shape=box];
	_JOIN_13153142 -> 13153173;
	ForLoop13154091 [label="ForLoop13154091  for (jj=jjj; jj<=min(ny-1,jjj+1536); jj=jj+512) {...",shape=box];
	ForLoop13154091 -> 13187745;
	ForLoop13154091 -> _JOIN_13154091;
	ForLoop13154093 [label="ForLoop13154093  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop13154093 -> ForLoop13154091;
	ForLoop13154093 -> _JOIN_13154093;
	ForLoop13152810 [label="ForLoop13152810  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop13152810 -> ForLoop13152809;
	ForLoop13152810 -> _JOIN_13152810;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest60.exe __orio_perftest60.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest60.exe  
{'[1, 6, 4, 5, 6, 4, 0, 1, 10, 1, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.0860479}
{'[1, 6, 4, 5, 6, 4, 0, 1, 10, 1, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.0856829}
{'[1, 6, 4, 5, 6, 4, 0, 1, 10, 1, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.0856779}
{'[1, 6, 4, 5, 6, 4, 0, 1, 10, 1, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.0856001}
{'[1, 6, 4, 5, 6, 4, 0, 1, 10, 1, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.0856879}
{'[1, 6, 4, 5, 6, 4, 0, 1, 10, 1, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.0856261}
{'[1, 6, 4, 5, 6, 4, 0, 1, 10, 1, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.0856369}
{'[1, 6, 4, 5, 6, 4, 0, 1, 10, 1, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.085578}
{'[1, 6, 4, 5, 6, 4, 0, 1, 10, 1, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.085582}
{'[1, 6, 4, 5, 6, 4, 0, 1, 10, 1, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.0856659}
{'[1, 6, 4, 5, 6, 4, 0, 1, 10, 1, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.085711}
{'[1, 6, 4, 5, 6, 4, 0, 1, 10, 1, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.085613}
{'[1, 6, 4, 5, 6, 4, 0, 1, 10, 1, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.086642}
{'[1, 6, 4, 5, 6, 4, 0, 1, 10, 1, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.0855839}
{'[1, 6, 4, 5, 6, 4, 0, 1, 10, 1, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.085645}
{'[1, 6, 4, 5, 6, 4, 0, 1, 10, 1, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.0858099}
{'[1, 6, 4, 5, 6, 4, 0, 1, 10, 1, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.0857818}
{'[1, 6, 4, 5, 6, 4, 0, 1, 10, 1, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.0856452}
{'[1, 6, 4, 5, 6, 4, 0, 1, 10, 1, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.085613}
{'[1, 6, 4, 5, 6, 4, 0, 1, 10, 1, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.085546}
{'[1, 6, 4, 5, 6, 4, 0, 1, 10, 1, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.0855911}
{'[1, 6, 4, 5, 6, 4, 0, 1, 10, 1, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.085598}
{'[1, 6, 4, 5, 6, 4, 0, 1, 10, 1, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.085609}
{'[1, 6, 4, 5, 6, 4, 0, 1, 10, 1, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.085676}
{'[1, 6, 4, 5, 6, 4, 0, 1, 10, 1, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.0856071}
{'[1, 6, 4, 5, 6, 4, 0, 1, 10, 1, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.0856462}
{'[1, 6, 4, 5, 6, 4, 0, 1, 10, 1, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.0856359}
{'[1, 6, 4, 5, 6, 4, 0, 1, 10, 1, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.0856261}
{'[1, 6, 4, 5, 6, 4, 0, 1, 10, 1, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.085614}
{'[1, 6, 4, 5, 6, 4, 0, 1, 10, 1, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.085716}

out:
 ["{'[1, 6, 4, 5, 6, 4, 0, 1, 10, 1, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.0860479}", "{'[1, 6, 4, 5, 6, 4, 0, 1, 10, 1, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.0856829}", "{'[1, 6, 4, 5, 6, 4, 0, 1, 10, 1, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.0856779}", "{'[1, 6, 4, 5, 6, 4, 0, 1, 10, 1, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.0856001}", "{'[1, 6, 4, 5, 6, 4, 0, 1, 10, 1, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.0856879}", "{'[1, 6, 4, 5, 6, 4, 0, 1, 10, 1, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.0856261}", "{'[1, 6, 4, 5, 6, 4, 0, 1, 10, 1, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.0856369}", "{'[1, 6, 4, 5, 6, 4, 0, 1, 10, 1, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.085578}", "{'[1, 6, 4, 5, 6, 4, 0, 1, 10, 1, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.085582}", "{'[1, 6, 4, 5, 6, 4, 0, 1, 10, 1, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.0856659}", "{'[1, 6, 4, 5, 6, 4, 0, 1, 10, 1, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.085711}", "{'[1, 6, 4, 5, 6, 4, 0, 1, 10, 1, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.085613}", "{'[1, 6, 4, 5, 6, 4, 0, 1, 10, 1, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.086642}", "{'[1, 6, 4, 5, 6, 4, 0, 1, 10, 1, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.0855839}", "{'[1, 6, 4, 5, 6, 4, 0, 1, 10, 1, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.085645}", "{'[1, 6, 4, 5, 6, 4, 0, 1, 10, 1, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.0858099}", "{'[1, 6, 4, 5, 6, 4, 0, 1, 10, 1, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.0857818}", "{'[1, 6, 4, 5, 6, 4, 0, 1, 10, 1, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.0856452}", "{'[1, 6, 4, 5, 6, 4, 0, 1, 10, 1, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.085613}", "{'[1, 6, 4, 5, 6, 4, 0, 1, 10, 1, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.085546}", "{'[1, 6, 4, 5, 6, 4, 0, 1, 10, 1, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.0855911}", "{'[1, 6, 4, 5, 6, 4, 0, 1, 10, 1, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.085598}", "{'[1, 6, 4, 5, 6, 4, 0, 1, 10, 1, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.085609}", "{'[1, 6, 4, 5, 6, 4, 0, 1, 10, 1, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.085676}", "{'[1, 6, 4, 5, 6, 4, 0, 1, 10, 1, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.0856071}", "{'[1, 6, 4, 5, 6, 4, 0, 1, 10, 1, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.0856462}", "{'[1, 6, 4, 5, 6, 4, 0, 1, 10, 1, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.0856359}", "{'[1, 6, 4, 5, 6, 4, 0, 1, 10, 1, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.0856261}", "{'[1, 6, 4, 5, 6, 4, 0, 1, 10, 1, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.085614}", "{'[1, 6, 4, 5, 6, 4, 0, 1, 10, 1, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.085716}"]
returning from 'run': {'[1, 6, 4, 5, 6, 4, 0, 1, 10, 1, 2, 0, 1, 1, 0, 1, 1, 1]': ([0.0860479, 0.0856829, 0.0856779, 0.0856001, 0.0856879, 0.0856261, 0.0856369, 0.085578, 0.085582, 0.0856659, 0.085711, 0.085613, 0.086642, 0.0855839, 0.085645, 0.0858099, 0.0857818, 0.0856452, 0.085613, 0.085546, 0.0855911, 0.085598, 0.085609, 0.085676, 0.0856071, 0.0856462, 0.0856359, 0.0856261, 0.085614, 0.085716], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.0860479, 0.0856829, 0.0856779, 0.0856001, 0.0856879, 0.0856261, 0.0856369, 0.085578, 0.085582, 0.0856659, 0.085711, 0.085613, 0.086642, 0.0855839, 0.085645, 0.0858099, 0.0857818, 0.0856452, 0.085613, 0.085546, 0.0855911, 0.085598, 0.085609, 0.085676, 0.0856071, 0.0856462, 0.0856359, 0.0856261, 0.085614, 0.085716], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[1, 6, 4, 5, 6, 4, 0, 1, 10, 1, 2, 0, 1, 1, 0, 1, 1, 1]': ([0.0860479, 0.0856829, 0.0856779, 0.0856001, 0.0856879, 0.0856261, 0.0856369, 0.085578, 0.085582, 0.0856659, 0.085711, 0.085613, 0.086642, 0.0855839, 0.085645, 0.0858099, 0.0857818, 0.0856452, 0.085613, 0.085546, 0.0855911, 0.085598, 0.085609, 0.085676, 0.0856071, 0.0856462, 0.0856359, 0.0856261, 0.085614, 0.085716], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [4, 6, 2, 6, 4, 1, 0, 4, 0, 22, 5, 0, 0, 2, 0, 0]
Fixed Factors: {'T2_J': 6, 'VEC1': 1}
Testing candidate 23: [4, 6, 2, 6, 6, 4, 1, 0, 4, 0, 22, 5, 0, 0, 2, 0, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	6
        Additions: 		371
        Multiplications: 	126
        Divisions: 		0
        Logical: 		0
        Reads: 			784
        Writes: 		104
        Comparisons:		15
        Gotos: 			0
        
digraph CFG {
	ForLoop13189167 [label="ForLoop13189167  for (i=0; i<=cbv_1; i=i+5) {...",shape=box];
	ForLoop13189167 -> 13189129;
	ForLoop13189167 -> _JOIN_13189167;
	_JOIN_13195251 [label="_JOIN_13195251None...",shape=box];
	_JOIN_13195251 -> _JOIN_13192725;
	13226307 [label="13226307  y[k]=y[k]+A[i*ny+k]*tmp[i];...",shape=box];
	13198131 [label="13198131  double x_copy[512];...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 13189012;
	ForLoop13195250 [label="ForLoop13195250  for (kk=kkk; kk<=min(ny-1,kkk+480); kk=kk+32) {...",shape=box];
	ForLoop13195250 -> ForLoop13200475;
	ForLoop13195250 -> _JOIN_13195250;
	ForLoop13195251 [label="ForLoop13195251  for (kkk=0; kkk<=ny-1; kkk=kkk+512) ...",shape=box];
	ForLoop13195251 -> ForLoop13195250;
	ForLoop13195251 -> _JOIN_13195251;
	ForLoop13200475 [label="ForLoop13200475  for (kt=kk; kt<=min(ny-1,kk+31)-31; kt=kt+32) {...",shape=box];
	ForLoop13200475 -> 13200539;
	ForLoop13200475 -> _JOIN_13200475;
	13198183 [label="13198183  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	13200539 [label="13200539  y[kt]=y[kt]+A[i*ny+kt]*tmp[i];...",shape=box];
	13222719 [label="13222719  tmp[i]=tmp[i]+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop13226449 [label="ForLoop13226449  for (k=kt; k<=min(ny-1,kk+31)-5; k=k+6) {...",shape=box];
	ForLoop13226449 -> 13226307;
	ForLoop13226449 -> _JOIN_13226449;
	13189129 [label="13189129  y[i]=0.0;...",shape=box];
	13225965 [label="13225965  int k;...",shape=box];
	13225965 -> ForLoop13226449;
	13192617 [label="13192617  tmp[i]=0;...",shape=box];
	13192617 -> ForLoop13193575;
	ForLoop13193575 [label="ForLoop13193575  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) ...",shape=box];
	ForLoop13193575 -> ForLoop13193574;
	ForLoop13193575 -> _JOIN_13193575;
	ForLoop13193574 [label="ForLoop13193574  for (jj=jjj; jj<=min(ny-1,jjj+1536); jj=jj+512) {...",shape=box];
	ForLoop13193574 -> 13198183;
	ForLoop13193574 -> _JOIN_13193574;
	ForLoop13223444 [label="ForLoop13223444  for (j=(min(ny-1,jj+511))-(((min(ny-1,jj+511))-(jj)+1)%23)+1; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	ForLoop13223444 -> 13223443;
	ForLoop13223444 -> _JOIN_13223444;
	ForLoop13192725 [label="ForLoop13192725  for (i=ii; i<=min(nx-1,ii+127); i=i+1) {...",shape=box];
	ForLoop13192725 -> 13192617;
	ForLoop13192725 -> _JOIN_13192725;
	13226574 [label="13226574  y[k]=y[k]+A[i*ny+k]*tmp[i];...",shape=box];
	13226574 -> _JOIN_13226575;
	ForLoop13192727 [label="ForLoop13192727  for (iii=0; iii<=nx-1; iii=iii+2048) ...",shape=box];
	ForLoop13192727 -> ForLoop13192726;
	ForLoop13192727 -> _JOIN_13192727;
	ForLoop13192726 [label="ForLoop13192726  for (ii=iii; ii<=min(nx-1,iii+1920); ii=ii+128) ...",shape=box];
	ForLoop13192726 -> ForLoop13192725;
	ForLoop13192726 -> _JOIN_13192726;
	_JOIN_13192725 [label="_JOIN_13192725None...",shape=box];
	_JOIN_13192725 -> _JOIN_13192726;
	_JOIN_13192727 [label="_JOIN_13192727None...",shape=box];
	_JOIN_13192726 [label="_JOIN_13192726None...",shape=box];
	_JOIN_13192726 -> _JOIN_13192727;
	_JOIN_13223315 [label="_JOIN_13223315None...",shape=box];
	_JOIN_13223315 -> ForLoop13223444;
	_JOIN_13226449 [label="_JOIN_13226449None...",shape=box];
	_JOIN_13226449 -> ForLoop13226575;
	_JOIN_13200475 [label="_JOIN_13200475None...",shape=box];
	_JOIN_13200475 -> 13225965;
	_JOIN_13223444 [label="_JOIN_13223444None...",shape=box];
	_JOIN_13223444 -> _JOIN_13193574;
	_JOIN_13195250 [label="_JOIN_13195250None...",shape=box];
	_JOIN_13195250 -> _JOIN_13195251;
	13189235 [label="13189235  y[i]=0.0;...",shape=box];
	13189235 -> _JOIN_13189236;
	_JOIN_13193575 [label="_JOIN_13193575None...",shape=box];
	_JOIN_13193575 -> ForLoop13195251;
	_JOIN_13193574 [label="_JOIN_13193574None...",shape=box];
	_JOIN_13193574 -> _JOIN_13193575;
	13189012 [label="13189012  int i;...",shape=box];
	13189322 [label="13189322  register int cbv_2, cbv_3;...",shape=box];
	ForLoop13223315 [label="ForLoop13223315  for (j=jj; j<=min(ny-1,jj+511)-22; j=j+23) {...",shape=box];
	ForLoop13223315 -> 13222719;
	ForLoop13223315 -> _JOIN_13223315;
	13223443 [label="13223443  tmp[i]=tmp[i]+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	13223443 -> _JOIN_13223444;
	_JOIN_13226575 [label="_JOIN_13226575None...",shape=box];
	_JOIN_13226575 -> _JOIN_13195250;
	_JOIN_13189236 [label="_JOIN_13189236None...",shape=box];
	_JOIN_13189236 -> 13198131;
	ForLoop13226575 [label="ForLoop13226575  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kt)+1)%6)+1; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	ForLoop13226575 -> 13226574;
	ForLoop13226575 -> _JOIN_13226575;
	_JOIN_13189167 [label="_JOIN_13189167None...",shape=box];
	_JOIN_13189167 -> 13189322;
	ForLoop13189236 [label="ForLoop13189236  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop1318923expected=9369846271501.798828
actual=9369846271501.798828
6 -> 13189235;
	ForLoop13189236 -> _JOIN_13189236;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest61.exe __orio_perftest61.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest61.exe  
{'[4, 6, 2, 6, 6, 4, 1, 0, 4, 0, 22, 5, 0, 0, 2, 0, 1, 0]' : 0.182538}
{'[4, 6, 2, 6, 6, 4, 1, 0, 4, 0, 22, 5, 0, 0, 2, 0, 1, 0]' : 0.182272}
{'[4, 6, 2, 6, 6, 4, 1, 0, 4, 0, 22, 5, 0, 0, 2, 0, 1, 0]' : 0.182391}
{'[4, 6, 2, 6, 6, 4, 1, 0, 4, 0, 22, 5, 0, 0, 2, 0, 1, 0]' : 0.183387}
{'[4, 6, 2, 6, 6, 4, 1, 0, 4, 0, 22, 5, 0, 0, 2, 0, 1, 0]' : 0.182407}
{'[4, 6, 2, 6, 6, 4, 1, 0, 4, 0, 22, 5, 0, 0, 2, 0, 1, 0]' : 0.182318}
{'[4, 6, 2, 6, 6, 4, 1, 0, 4, 0, 22, 5, 0, 0, 2, 0, 1, 0]' : 0.182291}
{'[4, 6, 2, 6, 6, 4, 1, 0, 4, 0, 22, 5, 0, 0, 2, 0, 1, 0]' : 0.182376}
{'[4, 6, 2, 6, 6, 4, 1, 0, 4, 0, 22, 5, 0, 0, 2, 0, 1, 0]' : 0.182553}
{'[4, 6, 2, 6, 6, 4, 1, 0, 4, 0, 22, 5, 0, 0, 2, 0, 1, 0]' : 0.182475}
{'[4, 6, 2, 6, 6, 4, 1, 0, 4, 0, 22, 5, 0, 0, 2, 0, 1, 0]' : 0.1824}
{'[4, 6, 2, 6, 6, 4, 1, 0, 4, 0, 22, 5, 0, 0, 2, 0, 1, 0]' : 0.18253}
{'[4, 6, 2, 6, 6, 4, 1, 0, 4, 0, 22, 5, 0, 0, 2, 0, 1, 0]' : 0.182405}
{'[4, 6, 2, 6, 6, 4, 1, 0, 4, 0, 22, 5, 0, 0, 2, 0, 1, 0]' : 0.182391}
{'[4, 6, 2, 6, 6, 4, 1, 0, 4, 0, 22, 5, 0, 0, 2, 0, 1, 0]' : 0.183431}
{'[4, 6, 2, 6, 6, 4, 1, 0, 4, 0, 22, 5, 0, 0, 2, 0, 1, 0]' : 0.182389}
{'[4, 6, 2, 6, 6, 4, 1, 0, 4, 0, 22, 5, 0, 0, 2, 0, 1, 0]' : 0.182602}
{'[4, 6, 2, 6, 6, 4, 1, 0, 4, 0, 22, 5, 0, 0, 2, 0, 1, 0]' : 0.182312}
{'[4, 6, 2, 6, 6, 4, 1, 0, 4, 0, 22, 5, 0, 0, 2, 0, 1, 0]' : 0.182319}
{'[4, 6, 2, 6, 6, 4, 1, 0, 4, 0, 22, 5, 0, 0, 2, 0, 1, 0]' : 0.182313}
{'[4, 6, 2, 6, 6, 4, 1, 0, 4, 0, 22, 5, 0, 0, 2, 0, 1, 0]' : 0.182483}
{'[4, 6, 2, 6, 6, 4, 1, 0, 4, 0, 22, 5, 0, 0, 2, 0, 1, 0]' : 0.182383}
{'[4, 6, 2, 6, 6, 4, 1, 0, 4, 0, 22, 5, 0, 0, 2, 0, 1, 0]' : 0.182262}
{'[4, 6, 2, 6, 6, 4, 1, 0, 4, 0, 22, 5, 0, 0, 2, 0, 1, 0]' : 0.182344}
{'[4, 6, 2, 6, 6, 4, 1, 0, 4, 0, 22, 5, 0, 0, 2, 0, 1, 0]' : 0.18235}
{'[4, 6, 2, 6, 6, 4, 1, 0, 4, 0, 22, 5, 0, 0, 2, 0, 1, 0]' : 0.183503}
{'[4, 6, 2, 6, 6, 4, 1, 0, 4, 0, 22, 5, 0, 0, 2, 0, 1, 0]' : 0.182393}
{'[4, 6, 2, 6, 6, 4, 1, 0, 4, 0, 22, 5, 0, 0, 2, 0, 1, 0]' : 0.182597}
{'[4, 6, 2, 6, 6, 4, 1, 0, 4, 0, 22, 5, 0, 0, 2, 0, 1, 0]' : 0.182327}
{'[4, 6, 2, 6, 6, 4, 1, 0, 4, 0, 22, 5, 0, 0, 2, 0, 1, 0]' : 0.182399}

out:
 ["{'[4, 6, 2, 6, 6, 4, 1, 0, 4, 0, 22, 5, 0, 0, 2, 0, 1, 0]' : 0.182538}", "{'[4, 6, 2, 6, 6, 4, 1, 0, 4, 0, 22, 5, 0, 0, 2, 0, 1, 0]' : 0.182272}", "{'[4, 6, 2, 6, 6, 4, 1, 0, 4, 0, 22, 5, 0, 0, 2, 0, 1, 0]' : 0.182391}", "{'[4, 6, 2, 6, 6, 4, 1, 0, 4, 0, 22, 5, 0, 0, 2, 0, 1, 0]' : 0.183387}", "{'[4, 6, 2, 6, 6, 4, 1, 0, 4, 0, 22, 5, 0, 0, 2, 0, 1, 0]' : 0.182407}", "{'[4, 6, 2, 6, 6, 4, 1, 0, 4, 0, 22, 5, 0, 0, 2, 0, 1, 0]' : 0.182318}", "{'[4, 6, 2, 6, 6, 4, 1, 0, 4, 0, 22, 5, 0, 0, 2, 0, 1, 0]' : 0.182291}", "{'[4, 6, 2, 6, 6, 4, 1, 0, 4, 0, 22, 5, 0, 0, 2, 0, 1, 0]' : 0.182376}", "{'[4, 6, 2, 6, 6, 4, 1, 0, 4, 0, 22, 5, 0, 0, 2, 0, 1, 0]' : 0.182553}", "{'[4, 6, 2, 6, 6, 4, 1, 0, 4, 0, 22, 5, 0, 0, 2, 0, 1, 0]' : 0.182475}", "{'[4, 6, 2, 6, 6, 4, 1, 0, 4, 0, 22, 5, 0, 0, 2, 0, 1, 0]' : 0.1824}", "{'[4, 6, 2, 6, 6, 4, 1, 0, 4, 0, 22, 5, 0, 0, 2, 0, 1, 0]' : 0.18253}", "{'[4, 6, 2, 6, 6, 4, 1, 0, 4, 0, 22, 5, 0, 0, 2, 0, 1, 0]' : 0.182405}", "{'[4, 6, 2, 6, 6, 4, 1, 0, 4, 0, 22, 5, 0, 0, 2, 0, 1, 0]' : 0.182391}", "{'[4, 6, 2, 6, 6, 4, 1, 0, 4, 0, 22, 5, 0, 0, 2, 0, 1, 0]' : 0.183431}", "{'[4, 6, 2, 6, 6, 4, 1, 0, 4, 0, 22, 5, 0, 0, 2, 0, 1, 0]' : 0.182389}", "{'[4, 6, 2, 6, 6, 4, 1, 0, 4, 0, 22, 5, 0, 0, 2, 0, 1, 0]' : 0.182602}", "{'[4, 6, 2, 6, 6, 4, 1, 0, 4, 0, 22, 5, 0, 0, 2, 0, 1, 0]' : 0.182312}", "{'[4, 6, 2, 6, 6, 4, 1, 0, 4, 0, 22, 5, 0, 0, 2, 0, 1, 0]' : 0.182319}", "{'[4, 6, 2, 6, 6, 4, 1, 0, 4, 0, 22, 5, 0, 0, 2, 0, 1, 0]' : 0.182313}", "{'[4, 6, 2, 6, 6, 4, 1, 0, 4, 0, 22, 5, 0, 0, 2, 0, 1, 0]' : 0.182483}", "{'[4, 6, 2, 6, 6, 4, 1, 0, 4, 0, 22, 5, 0, 0, 2, 0, 1, 0]' : 0.182383}", "{'[4, 6, 2, 6, 6, 4, 1, 0, 4, 0, 22, 5, 0, 0, 2, 0, 1, 0]' : 0.182262}", "{'[4, 6, 2, 6, 6, 4, 1, 0, 4, 0, 22, 5, 0, 0, 2, 0, 1, 0]' : 0.182344}", "{'[4, 6, 2, 6, 6, 4, 1, 0, 4, 0, 22, 5, 0, 0, 2, 0, 1, 0]' : 0.18235}", "{'[4, 6, 2, 6, 6, 4, 1, 0, 4, 0, 22, 5, 0, 0, 2, 0, 1, 0]' : 0.183503}", "{'[4, 6, 2, 6, 6, 4, 1, 0, 4, 0, 22, 5, 0, 0, 2, 0, 1, 0]' : 0.182393}", "{'[4, 6, 2, 6, 6, 4, 1, 0, 4, 0, 22, 5, 0, 0, 2, 0, 1, 0]' : 0.182597}", "{'[4, 6, 2, 6, 6, 4, 1, 0, 4, 0, 22, 5, 0, 0, 2, 0, 1, 0]' : 0.182327}", "{'[4, 6, 2, 6, 6, 4, 1, 0, 4, 0, 22, 5, 0, 0, 2, 0, 1, 0]' : 0.182399}"]
returning from 'run': {'[4, 6, 2, 6, 6, 4, 1, 0, 4, 0, 22, 5, 0, 0, 2, 0, 1, 0]': ([0.182538, 0.182272, 0.182391, 0.183387, 0.182407, 0.182318, 0.182291, 0.182376, 0.182553, 0.182475, 0.1824, 0.18253, 0.182405, 0.182391, 0.183431, 0.182389, 0.182602, 0.182312, 0.182319, 0.182313, 0.182483, 0.182383, 0.182262, 0.182344, 0.18235, 0.183503, 0.182393, 0.182597, 0.182327, 0.182399], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.182538, 0.182272, 0.182391, 0.183387, 0.182407, 0.182318, 0.182291, 0.182376, 0.182553, 0.182475, 0.1824, 0.18253, 0.182405, 0.182391, 0.183431, 0.182389, 0.182602, 0.182312, 0.182319, 0.182313, 0.182483, 0.182383, 0.182262, 0.182344, 0.18235, 0.183503, 0.182393, 0.182597, 0.182327, 0.182399], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[4, 6, 2, 6, 6, 4, 1, 0, 4, 0, 22, 5, 0, 0, 2, 0, 1, 0]': ([0.182538, 0.182272, 0.182391, 0.183387, 0.182407, 0.182318, 0.182291, 0.182376, 0.182553, 0.182475, 0.1824, 0.18253, 0.182405, 0.182391, 0.183431, 0.182389, 0.182602, 0.182312, 0.182319, 0.182313, 0.182483, 0.182383, 0.182262, 0.182344, 0.18235, 0.183503, 0.182393, 0.182597, 0.182327, 0.182399], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [2, 1, 4, 6, 5, 1, 1, 3, 18, 0, 28, 1, 0, 1, 1, 1]
Fixed Factors: {'T2_J': 6, 'VEC1': 1}
Testing candidate 24: [2, 1, 4, 6, 6, 5, 1, 1, 3, 18, 0, 28, 1, 0, 1, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	88
        Max loop nest depth: 	6
        Additions: 		1406
        Multiplications: 	504
        Divisions: 		0
        Logical: 		0
        Reads: 			3102
        Writes: 		632
        Comparisons:		88
        Gotos: 			0
        
digraph CFG {
	13383250 [label="13383250  for (k=kk; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	ForLoop13381720 [label="ForLoop13381720  for (kt=kk; kt<=cbv_2; kt=kt+8) {...",shape=box];
	ForLoop13381720 -> 13394948;
	ForLoop13381720 -> _JOIN_13381720;
	13235428 [label="13235428  y[i]=0.0;...",shape=box];
	ForLoop13389444 [label="ForLoop13389444  for (kt=kk; kt<=cbv_4; kt=kt+8) {...",shape=box];
	ForLoop13389444 -> 13411975;
	ForLoop13389444 -> _JOIN_13389444;
	_JOIN_13381720 [label="_JOIN_13381720None...",shape=box];
	_JOIN_13381720 -> 13381751;
	ForLoop13390196 [label="ForLoop13390196  for (j=jj; j<=cbv_5; j=j+1) {...",shape=box];
	ForLoop13390196 -> 13390195;
	ForLoop13390196 -> _JOIN_13390196;
	_JOIN_13390554 [label="_JOIN_13390554None...",shape=box];
	_JOIN_13390554 -> 13390585;
	13431616 [label="13431616  double scv_54;...",shape=box];
	13402208 [label="13402208  double scv_18;...",shape=box];
	13235603 [label="13235603  register int cbv_2, cbv_3;...",shape=box];
	ForLoop13390554 [label="ForLoop13390554  for (kt=kk; kt<=cbv_6; kt=kt+8) {...",shape=box];
	ForLoop13390554 -> 13429915;
	ForLoop13390554 -> _JOIN_13390554;
	_JOIN_13383188 [label="_JOIN_13383188None...",shape=box];
	_JOIN_13383188 -> ForLoop13390037;
	13389475 [label="13389475  for (k=kk; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	_JOIN_13390590 [label="_JOIN_13390590None...",shape=box];
	_JOIN_13390590 -> _JOIN_13390593;
	_JOIN_13383184 [label="_JOIN_13383184None...",shape=box];
	_JOIN_13383184 -> _JOIN_13383186;
	_JOIN_13383186 [label="_JOIN_13383186None...",shape=box];
	_JOIN_13383186 -> _JOIN_13383188;
	_JOIN_13390039 [label="_JOIN_13390039None...",shape=box];
	_JOIN_13390039 -> ForLoop13390590;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 13235326;
	13379194 [label="13379194  for (k=kk; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	ForLoop13390588 [label="ForLoop13390588  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop13390588 -> ForLoop13390587;
	ForLoop13390588 -> _JOIN_13390588;
	ForLoop13390198 [label="ForLoop13390198  for (jj=jjj; jj<=min(ny-1,jjj+2032); jj=jj+16) {...",shape=box];
	ForLoop13390198 -> 13390154;
	ForLoop13390198 -> _JOIN_13390198;
	ForLoop13390199 [label="ForLoop13390199  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop13390199 -> ForLoop13390198;
	ForLoop13390199 -> _JOIN_13390199;
	_JOIN_13389444 [label="_JOIN_13389444None...",shape=box];
	_JOIN_13389444 -> 13389475;
	_JOIN_13390594 [label="_JOIN_13390594None...",shape=box];
	ForLoop13383188 [label="ForLoop13383188  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop13383188 -> ForLoop13383186;
	ForLoop13383188 -> _JOIN_13383188;
	_JOIN_13235457 [label="_JOIN_13235457None...",shape=box];
	_JOIN_13235457 -> 13235603;
	_JOIN_13379129 [label="_JOIN_13379129None...",shape=box];
	_JOIN_13379129 -> _JOIN_13379131;
	13401065 [label="13401065  double scv_10, scv_11, scv_12, scv_13, scv_14, scv_15, scv_16, scv_17;...",shape=box];
	_JOIN_13390198 [label="_JOIN_13390198None...",shape=box];
	_JOIN_13390198 -> _JOIN_13390199;
	13378862 [label="13378862  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	_JOIN_13390587 [label="_JOIN_13390587None...",shape=box];
	_JOIN_13390587 -> _JOIN_13390588;
	13390983 [label="13390983  double scv_1;...",shape=box];
	13390195 [label="13390195  scv_54=scv_54+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	13390195 -> _JOIN_13390196;
	13428697 [label="13428697  tmp[(i+17)]=scv_27;...",shape=box];
	13390585 [label="13390585  for (k=kk; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	13390585 -> _JOIN_13390587;
	ForLoop13235526 [label="ForLoop13235526  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop13235526 -> 13235525;
	ForLoop13235526 -> _JOIN_13235526;
	ForLoop13390587 [label="ForLoop13390587  for (kk=kkk; kk<=min(ny-1,kkk+896); kk=kk+128) {...",shape=box];
	ForLoop13390587 -> 13390261;
	ForLoop13390587 -> _JOIN_13390587;
	_JOIN_13390196 [label="_JOIN_13390196None...",shape=box];
	_JOIN_13390196 -> _JOIN_13390198;
	ForLoop13390039 [label="ForLoop13390039  for (i=it; i<=min(nx-1,ii+31)-18; i=i+19) {...",shape=box];
	ForLoop13390039 -> 13428679;
	ForLoop13390039 -> _JOIN_13390039;
	13390154 [label="13390154  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	ForLoop13379129 [label="ForLoop13379129  for (j=jj; j<=cbv_1; j=j+1) {...",shape=box];
	ForLoop13379129 -> 13390983;
	ForLoop13379129 -> _JOIN_13379129;
	ForLoop13381756 [label="ForLoop13381756  for (it=ii; it<=min(nx-1,ii+31)-7; it=it+8) {...",shape=box];
	ForLoop13381756 -> 13401065;
	ForLoop13381756 -> _JOIN_13381756;
	_JOIN_13381753 [label="_JOIN_13381753None...",shape=box];
	_JOIN_13381753 -> _JOIN_13381754;
	ForLoop13381754 [label="ForLoop13381754  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop13381754 -> ForLoop13381753;
	ForLoop13381754 -> _JOIN_13381754;
	_JOIN_13381756 [label="_JOIN_13381756None...",shape=box];
	_JOIN_13381756 -> 13381757;
	ForLoop13381753 [label="ForLoop13381753  for (kk=kkk; kk<=min(ny-1,kkk+896); kk=kk+128) {...",shape=box];
	ForLoop13381753 -> 13379194;
	ForLoop13381753 -> _JOIN_13381753;
	_JOIN_13381754 [label="_JOIN_13381754None...",shape=box];
	_JOIN_13381754 -> 13401077;
	_JOIN_13390588 [label="_JOIN_13390588None...",shape=box];
	_JOIN_13390588 -> 13431628;
	_JOIN_13390593 [label="_JOIN_13390593None...",shape=box];
	_JOIN_13390593 -> _JOIN_13390594;
	13431628 [label="13431628  tmp[i]=scv_54;...",shape=box];
	13431628 -> _JOIN_13390590;
	ForLoop13390594 [label="ForLoop13390594  for (iii=0; iii<=nx-1; iii=iii+2048) {...",shape=box];
	ForLoop13390594 -> ForLoop13390593;
	ForLoop13390594 -> _JOIN_13390594;
	13381751 [label="13381751  forexpected=9369846271501.798828
actual=9369846271501.798828
 (k=kk; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	13381751 -> _JOIN_13381753;
	13235326 [label="13235326  int i;...",shape=box];
	13429915 [label="13429915  double scv_46, scv_47, scv_48, scv_49, scv_50, scv_51, scv_52, scv_53;...",shape=box];
	13235525 [label="13235525  y[i]=0.0;...",shape=box];
	13235525 -> _JOIN_13235526;
	_JOIN_13390035 [label="_JOIN_13390035None...",shape=box];
	_JOIN_13390035 -> _JOIN_13390037;
	_JOIN_13390037 [label="_JOIN_13390037None...",shape=box];
	_JOIN_13390037 -> 13428697;
	13390261 [label="13390261  for (k=kk; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	13378742 [label="13378742  double x_copy[16];...",shape=box];
	_JOIN_13379131 [label="_JOIN_13379131None...",shape=box];
	_JOIN_13379131 -> _JOIN_13379132;
	13394948 [label="13394948  double scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8, scv_9;...",shape=box];
	ForLoop13235457 [label="ForLoop13235457  for (i=0; i<=cbv_1; i=i+4) {...",shape=box];
	ForLoop13235457 -> 13235428;
	ForLoop13235457 -> _JOIN_13235457;
	_JOIN_13379132 [label="_JOIN_13379132None...",shape=box];
	_JOIN_13379132 -> ForLoop13381754;
	ForLoop13390593 [label="ForLoop13390593  for (ii=iii; ii<=min(nx-1,iii+2016); ii=ii+32) {...",shape=box];
	ForLoop13390593 -> ForLoop13381756;
	ForLoop13390593 -> _JOIN_13390593;
	ForLoop13390590 [label="ForLoop13390590  for (i=(min(nx-1,ii+31))-(((min(nx-1,ii+31))-(it)+1)%19)+1; i<=min(nx-1,ii+31); i=i+1) {...",shape=box];
	ForLoop13390590 -> 13431616;
	ForLoop13390590 -> _JOIN_13390590;
	_JOIN_13235526 [label="_JOIN_13235526None...",shape=box];
	_JOIN_13235526 -> 13378742;
	_JOIN_13390199 [label="_JOIN_13390199None...",shape=box];
	_JOIN_13390199 -> ForLoop13390588;
	ForLoop13390035 [label="ForLoop13390035  for (kk=kkk; kk<=min(ny-1,kkk+896); kk=kk+128) {...",shape=box];
	ForLoop13390035 -> 13383250;
	ForLoop13390035 -> _JOIN_13390035;
	ForLoop13390037 [label="ForLoop13390037  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop13390037 -> ForLoop13390035;
	ForLoop13390037 -> _JOIN_13390037;
	ForLoop13383184 [label="ForLoop13383184  for (j=jj; j<=cbv_3; j=j+1) {...",shape=box];
	ForLoop13383184 -> 13402208;
	ForLoop13383184 -> _JOIN_13383184;
	13401077 [label="13401077  tmp[it]=scv_10;...",shape=box];
	13382007 [label="13382007  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	13411975 [label="13411975  double scv_19, scv_20, scv_21, scv_22, scv_23, scv_24, scv_25, scv_26;...",shape=box];
	ForLoop13379131 [label="ForLoop13379131  for (jj=jjj; jj<=min(ny-1,jjj+2032); jj=jj+16) {...",shape=box];
	ForLoop13379131 -> 13378862;
	ForLoop13379131 -> _JOIN_13379131;
	13428679 [label="13428679  double scv_27, scv_28, scv_29, scv_30, scv_31, scv_32, scv_33, scv_34;...",shape=box];
	ForLoop13379132 [label="ForLoop13379132  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop13379132 -> ForLoop13379131;
	ForLoop13379132 -> _JOIN_13379132;
	13381757 [label="13381757  int i;...",shape=box];
	13381757 -> ForLoop13390039;
	ForLoop13383186 [label="ForLoop13383186  for (jj=jjj; jj<=min(ny-1,jjj+2032); jj=jj+16) {...",shape=box];
	ForLoop13383186 -> 13382007;
	ForLoop13383186 -> _JOIN_13383186;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest62.exe __orio_perftest62.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest62.exe  
{'[2, 1, 4, 6, 6, 5, 1, 1, 3, 18, 0, 28, 1, 0, 1, 1, 1, 1]' : 0.081172}
{'[2, 1, 4, 6, 6, 5, 1, 1, 3, 18, 0, 28, 1, 0, 1, 1, 1, 1]' : 0.0808961}
{'[2, 1, 4, 6, 6, 5, 1, 1, 3, 18, 0, 28, 1, 0, 1, 1, 1, 1]' : 0.0808759}
{'[2, 1, 4, 6, 6, 5, 1, 1, 3, 18, 0, 28, 1, 0, 1, 1, 1, 1]' : 0.0808241}
{'[2, 1, 4, 6, 6, 5, 1, 1, 3, 18, 0, 28, 1, 0, 1, 1, 1, 1]' : 0.080858}
{'[2, 1, 4, 6, 6, 5, 1, 1, 3, 18, 0, 28, 1, 0, 1, 1, 1, 1]' : 0.0810258}
{'[2, 1, 4, 6, 6, 5, 1, 1, 3, 18, 0, 28, 1, 0, 1, 1, 1, 1]' : 0.0808361}
{'[2, 1, 4, 6, 6, 5, 1, 1, 3, 18, 0, 28, 1, 0, 1, 1, 1, 1]' : 0.0808761}
{'[2, 1, 4, 6, 6, 5, 1, 1, 3, 18, 0, 28, 1, 0, 1, 1, 1, 1]' : 0.0809238}
{'[2, 1, 4, 6, 6, 5, 1, 1, 3, 18, 0, 28, 1, 0, 1, 1, 1, 1]' : 0.080883}
{'[2, 1, 4, 6, 6, 5, 1, 1, 3, 18, 0, 28, 1, 0, 1, 1, 1, 1]' : 0.080806}
{'[2, 1, 4, 6, 6, 5, 1, 1, 3, 18, 0, 28, 1, 0, 1, 1, 1, 1]' : 0.080853}
{'[2, 1, 4, 6, 6, 5, 1, 1, 3, 18, 0, 28, 1, 0, 1, 1, 1, 1]' : 0.0809062}
{'[2, 1, 4, 6, 6, 5, 1, 1, 3, 18, 0, 28, 1, 0, 1, 1, 1, 1]' : 0.0808618}
{'[2, 1, 4, 6, 6, 5, 1, 1, 3, 18, 0, 28, 1, 0, 1, 1, 1, 1]' : 0.0809159}
{'[2, 1, 4, 6, 6, 5, 1, 1, 3, 18, 0, 28, 1, 0, 1, 1, 1, 1]' : 0.0808671}
{'[2, 1, 4, 6, 6, 5, 1, 1, 3, 18, 0, 28, 1, 0, 1, 1, 1, 1]' : 0.081296}
{'[2, 1, 4, 6, 6, 5, 1, 1, 3, 18, 0, 28, 1, 0, 1, 1, 1, 1]' : 0.0819979}
{'[2, 1, 4, 6, 6, 5, 1, 1, 3, 18, 0, 28, 1, 0, 1, 1, 1, 1]' : 0.0808811}
{'[2, 1, 4, 6, 6, 5, 1, 1, 3, 18, 0, 28, 1, 0, 1, 1, 1, 1]' : 0.0808611}
{'[2, 1, 4, 6, 6, 5, 1, 1, 3, 18, 0, 28, 1, 0, 1, 1, 1, 1]' : 0.0809619}
{'[2, 1, 4, 6, 6, 5, 1, 1, 3, 18, 0, 28, 1, 0, 1, 1, 1, 1]' : 0.080862}
{'[2, 1, 4, 6, 6, 5, 1, 1, 3, 18, 0, 28, 1, 0, 1, 1, 1, 1]' : 0.0810649}
{'[2, 1, 4, 6, 6, 5, 1, 1, 3, 18, 0, 28, 1, 0, 1, 1, 1, 1]' : 0.0808952}
{'[2, 1, 4, 6, 6, 5, 1, 1, 3, 18, 0, 28, 1, 0, 1, 1, 1, 1]' : 0.0808809}
{'[2, 1, 4, 6, 6, 5, 1, 1, 3, 18, 0, 28, 1, 0, 1, 1, 1, 1]' : 0.0808811}
{'[2, 1, 4, 6, 6, 5, 1, 1, 3, 18, 0, 28, 1, 0, 1, 1, 1, 1]' : 0.080838}
{'[2, 1, 4, 6, 6, 5, 1, 1, 3, 18, 0, 28, 1, 0, 1, 1, 1, 1]' : 0.0808718}
{'[2, 1, 4, 6, 6, 5, 1, 1, 3, 18, 0, 28, 1, 0, 1, 1, 1, 1]' : 0.0808492}
{'[2, 1, 4, 6, 6, 5, 1, 1, 3, 18, 0, 28, 1, 0, 1, 1, 1, 1]' : 0.080966}

out:
 ["{'[2, 1, 4, 6, 6, 5, 1, 1, 3, 18, 0, 28, 1, 0, 1, 1, 1, 1]' : 0.081172}", "{'[2, 1, 4, 6, 6, 5, 1, 1, 3, 18, 0, 28, 1, 0, 1, 1, 1, 1]' : 0.0808961}", "{'[2, 1, 4, 6, 6, 5, 1, 1, 3, 18, 0, 28, 1, 0, 1, 1, 1, 1]' : 0.0808759}", "{'[2, 1, 4, 6, 6, 5, 1, 1, 3, 18, 0, 28, 1, 0, 1, 1, 1, 1]' : 0.0808241}", "{'[2, 1, 4, 6, 6, 5, 1, 1, 3, 18, 0, 28, 1, 0, 1, 1, 1, 1]' : 0.080858}", "{'[2, 1, 4, 6, 6, 5, 1, 1, 3, 18, 0, 28, 1, 0, 1, 1, 1, 1]' : 0.0810258}", "{'[2, 1, 4, 6, 6, 5, 1, 1, 3, 18, 0, 28, 1, 0, 1, 1, 1, 1]' : 0.0808361}", "{'[2, 1, 4, 6, 6, 5, 1, 1, 3, 18, 0, 28, 1, 0, 1, 1, 1, 1]' : 0.0808761}", "{'[2, 1, 4, 6, 6, 5, 1, 1, 3, 18, 0, 28, 1, 0, 1, 1, 1, 1]' : 0.0809238}", "{'[2, 1, 4, 6, 6, 5, 1, 1, 3, 18, 0, 28, 1, 0, 1, 1, 1, 1]' : 0.080883}", "{'[2, 1, 4, 6, 6, 5, 1, 1, 3, 18, 0, 28, 1, 0, 1, 1, 1, 1]' : 0.080806}", "{'[2, 1, 4, 6, 6, 5, 1, 1, 3, 18, 0, 28, 1, 0, 1, 1, 1, 1]' : 0.080853}", "{'[2, 1, 4, 6, 6, 5, 1, 1, 3, 18, 0, 28, 1, 0, 1, 1, 1, 1]' : 0.0809062}", "{'[2, 1, 4, 6, 6, 5, 1, 1, 3, 18, 0, 28, 1, 0, 1, 1, 1, 1]' : 0.0808618}", "{'[2, 1, 4, 6, 6, 5, 1, 1, 3, 18, 0, 28, 1, 0, 1, 1, 1, 1]' : 0.0809159}", "{'[2, 1, 4, 6, 6, 5, 1, 1, 3, 18, 0, 28, 1, 0, 1, 1, 1, 1]' : 0.0808671}", "{'[2, 1, 4, 6, 6, 5, 1, 1, 3, 18, 0, 28, 1, 0, 1, 1, 1, 1]' : 0.081296}", "{'[2, 1, 4, 6, 6, 5, 1, 1, 3, 18, 0, 28, 1, 0, 1, 1, 1, 1]' : 0.0819979}", "{'[2, 1, 4, 6, 6, 5, 1, 1, 3, 18, 0, 28, 1, 0, 1, 1, 1, 1]' : 0.0808811}", "{'[2, 1, 4, 6, 6, 5, 1, 1, 3, 18, 0, 28, 1, 0, 1, 1, 1, 1]' : 0.0808611}", "{'[2, 1, 4, 6, 6, 5, 1, 1, 3, 18, 0, 28, 1, 0, 1, 1, 1, 1]' : 0.0809619}", "{'[2, 1, 4, 6, 6, 5, 1, 1, 3, 18, 0, 28, 1, 0, 1, 1, 1, 1]' : 0.080862}", "{'[2, 1, 4, 6, 6, 5, 1, 1, 3, 18, 0, 28, 1, 0, 1, 1, 1, 1]' : 0.0810649}", "{'[2, 1, 4, 6, 6, 5, 1, 1, 3, 18, 0, 28, 1, 0, 1, 1, 1, 1]' : 0.0808952}", "{'[2, 1, 4, 6, 6, 5, 1, 1, 3, 18, 0, 28, 1, 0, 1, 1, 1, 1]' : 0.0808809}", "{'[2, 1, 4, 6, 6, 5, 1, 1, 3, 18, 0, 28, 1, 0, 1, 1, 1, 1]' : 0.0808811}", "{'[2, 1, 4, 6, 6, 5, 1, 1, 3, 18, 0, 28, 1, 0, 1, 1, 1, 1]' : 0.080838}", "{'[2, 1, 4, 6, 6, 5, 1, 1, 3, 18, 0, 28, 1, 0, 1, 1, 1, 1]' : 0.0808718}", "{'[2, 1, 4, 6, 6, 5, 1, 1, 3, 18, 0, 28, 1, 0, 1, 1, 1, 1]' : 0.0808492}", "{'[2, 1, 4, 6, 6, 5, 1, 1, 3, 18, 0, 28, 1, 0, 1, 1, 1, 1]' : 0.080966}"]
returning from 'run': {'[2, 1, 4, 6, 6, 5, 1, 1, 3, 18, 0, 28, 1, 0, 1, 1, 1, 1]': ([0.081172, 0.0808961, 0.0808759, 0.0808241, 0.080858, 0.0810258, 0.0808361, 0.0808761, 0.0809238, 0.080883, 0.080806, 0.080853, 0.0809062, 0.0808618, 0.0809159, 0.0808671, 0.081296, 0.0819979, 0.0808811, 0.0808611, 0.0809619, 0.080862, 0.0810649, 0.0808952, 0.0808809, 0.0808811, 0.080838, 0.0808718, 0.0808492, 0.080966], [inf,WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
 inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.081172, 0.0808961, 0.0808759, 0.0808241, 0.080858, 0.0810258, 0.0808361, 0.0808761, 0.0809238, 0.080883, 0.080806, 0.080853, 0.0809062, 0.0808618, 0.0809159, 0.0808671, 0.081296, 0.0819979, 0.0808811, 0.0808611, 0.0809619, 0.080862, 0.0810649, 0.0808952, 0.0808809, 0.0808811, 0.080838, 0.0808718, 0.0808492, 0.080966], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[2, 1, 4, 6, 6, 5, 1, 1, 3, 18, 0, 28, 1, 0, 1, 1, 1, 1]': ([0.081172, 0.0808961, 0.0808759, 0.0808241, 0.080858, 0.0810258, 0.0808361, 0.0808761, 0.0809238, 0.080883, 0.080806, 0.080853, 0.0809062, 0.0808618, 0.0809159, 0.0808671, 0.081296, 0.0819979, 0.0808811, 0.0808611, 0.0809619, 0.080862, 0.0810649, 0.0808952, 0.0808809, 0.0808811, 0.080838, 0.0808718, 0.0808492, 0.080966], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [6, 3, 2, 4, 6, 0, 1, 5, 24, 0, 22, 1, 1, 0, 0, 0]
Fixed Factors: {'T2_J': 6, 'VEC1': 1}
Testing candidate 25: [6, 3, 2, 4, 6, 6, 0, 1, 5, 24, 0, 22, 1, 1, 0, 0, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	132
        Max loop nest depth: 	5
        Additions: 		9678
        Multiplications: 	2244
        Divisions: 		0
        Logical: 		0
        Reads: 			14216
        Writes: 		1477
        Comparisons:		132
        Gotos: 			0
        
digraph CFG {
	13648689 [label="13648689  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	_JOIN_13660985 [label="_JOIN_13660985None...",shape=box];
	_JOIN_13660985 -> ForLoop13661065;
	13643603 [label="13643603  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+5)*ny+k]*tmp[(i+5)];...",shape=box];
	ForLoop13664612 [label="ForLoop13664612  for (jj=jjj; jj<=min(ny-1,jjj+1984); jj=jj+64) {...",shape=box];
	ForLoop13664612 -> ForLoop13664571;
	ForLoop13664612 -> _JOIN_13664612;
	ForLoop13652793 [label="ForLoop13652793  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kk)+1)%23)+1; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	ForLoop13652793 -> 13652792;
	ForLoop13652793 -> _JOIN_13652793;
	13660063 [label="13660063  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	ForLoop13657963 [label="ForLoop13657963  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kk)+1)%23)+1; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	ForLoop13657963 -> 13657962;
	ForLoop13657963 -> _JOIN_13657963;
	13664199 [label="13664199  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	13664199 -> _JOIN_13664201;
	13664387 [label="13664387  tmp[i]=tmp[i]+A[i*ny+jt]*x[jt];...",shape=box];
	13453860 [label="13453860  y[i]=0.0;...",shape=box];
	_JOIN_13542395 [label="_JOIN_13542395None...",shape=box];
	_JOIN_13542395 -> 13463766;
	_JOIN_13453976 [label="_JOIN_13453976None...",shape=box];
	_JOIN_13453976 -> 13461899;
	ForLoop13457285 [label="ForLoop13457285  for (ii=0; ii<=nx-1; ii=ii+512) {...",shape=box];
	ForLoop13457285 -> ForLoop13463771;
	ForLoop13457285 -> _JOIN_13457285;
	13659113 [label="13659113  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+20)*ny+k]*tmp[(i+20)];...",shape=box];
	ForLoop13656929 [label="ForLoop13656929  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kk)+1)%23)+1; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	ForLoop13656929 -> 13656928;
	ForLoop13656929 -> _JOIN_13656929;
	_JOIN_13665502 [label="_JOIN_13665502None...",shape=box];
	_JOIN_13665502 -> 13665534;
	_JOIN_13652793 [label="_JOIN_13652793None...",shape=box];
	_JOIN_13652793 -> 13652825;
	ForLoop13640385 [label="ForLoop13640385  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kk)+1)%23)+1; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	ForLoop13640385 -> 13640384;
	ForLoop13640385 -> _JOIN_13640385;
	ForLoop13453907 [label="ForLoop13453907  for (i=0; i<=cbv_1; i=i+6) {...",shape=box];
	ForLoop13453907 -> 13453860;
	ForLoop13453907 -> _JOIN_13453907;
	13661097 [label="13661097  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	13648773 [label="13648773  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+10)*ny+k]*tmp[(i+10)];...",shape=box];
	13464021 [label="13464021  tmp[it]=0;...",shape=box];
	13464021 -> ForLoop13463628;
	13641418 [label="13641418  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+2)*ny+k]*tmp[(i+2)];...",shape=box];
	13641418 -> _JOIN_13641419;
	13645671 [label="13645671  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+7)*ny+k]*tmp[(i+7)];...",shape=box];
	_JOIN_13645475 [label="_JOIN_13645475None...",shape=box];
	_JOIN_13645475 -> ForLoop13645555;
	_JOIN_13664571 [label="_JOIN_13664571None...",shape=box];
	_JOIN_13664571 -> ForLoop13664610;
	_JOIN_13641339 [label="_JOIN_13641339None...",shape=box];
	_JOIN_13641339 -> ForLoop13641419;
	13649723 [label="13649723  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	_JOIN_13662099 [label="_JOIN_13662099None...",shape=box];
	_JOIN_13662099 -> 13662131;
	13652909 [label="13652909  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+14)*ny+k]*tmp[(i+14)];...",shape=box];
	13660030 [label="13660030  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+20)*ny+k]*tmp[(i+20)];...",shape=box];
	13660030 -> _JOIN_13660031;
	13647622 [label="13647622  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+8)*ny+k]*tmp[(i+8)];...",shape=box];
	13647622 -> _JOIN_13647623;
	ForLoop13640305 [label="ForLoop13640305  for (k=kk; k<=min(ny-1,kk+31)-22; k=k+23) {...",shape=box];
	ForLoop13640305 -> 13639467;
	ForLoop13640305 -> _JOIN_13640305;
	13453975 [label="13453975  y[i]=0.0;...",shape=box];
	13453975 -> _JOIN_13453976;
	_JOIN_13648657 [label="_JOIN_13648657None...",shape=box];
	_JOIN_13648657 -> 13648689;
	13644553 [label="13644553  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	13637760 [label="13637760  tmp[i]=tmp[i]+A[i*ny+j]*x[j];...",shape=box];
	13641535 [label="13641535  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+3)*ny+k]*tmp[(i+3)];...",shape=box];
	13657045 [label="13657045  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+18)*ny+k]*tmp[(i+18)];...",shape=box];
	ForLoop13463628 [label="ForLoop13463628  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) ...",shape=box];
	ForLoop13463628 -> ForLoop13463627;
	ForLoop13463628 -> _JOIN_13463628;
	ForLoop13665537 [label="ForLoop13665537  for (kkk=0; kkk<=ny-1; kkk=kkk+2048) ...",shape=box];
	ForLoop13665537 -> ForLoop13665536;
	ForLoop13665537 -> _JOIN_13665537;
	13640384 [label="13640384  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+1)*ny+k]*tmp[(i+1)];...",shape=box];
	13640384 -> _JOIN_13640385;
	13642569 [label="13642569  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+4)*ny+k]*tmp[(i+4)];...",shape=box];
	_JOIN_13639351 [label="_JOIN_13639351None...",shape=box];
	_JOIN_13639351 -> 13639383;
	ForLoop13463627 [label="ForLoop13463627  for (jj=jjj; jj<=min(ny-1,jjj+1984); jj=jj+64) {...",shape=box];
	ForLoop13463627 -> ForLoop13464344;
	ForLoop13463627 -> _JOIN_13463627;
	13650757 [label="13650757  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	13653859 [label="13653859  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	13642485 [label="13642485  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	ForLoop13660985 [label="ForLoop13660985  for (k=kk; k<=min(ny-1,kk+31)-22; k=k+23) {...",shape=box];
	ForLoop13660985 -> 13660147;
	ForLoop13660985 -> _JOIN_13660985;
	13656928 [label="13656928  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+17)*ny+k]*tmp[(i+17)];...",shape=box];
	13656928 -> _JOIN_13656929;
	ForLoop13645555 [label="ForLoop13645555  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kk)+1)%23)+1; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	ForLoop13645555 -> 13645554;
	ForLoop13645555 -> _JOIN_13645555;
	13658996 [label="13658996  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+19)*ny+k]*tmp[(i+19)];...",shape=box];
	13658996 -> _JOIN_13658997;
	13647739 [label="13647739  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+9)*ny+k]*tmp[(i+9)];...",shape=box];
	_JOIN_13654781 [label="_JOIN_13654781None...",shape=box];
	_JOIN_13654781 -> ForLoop13654861;
	13644637 [label="13644637  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+6)*ny+k]*tmp[(i+6)];...",shape=box];
	_JOIN_13463627 [label="_JOIN_13463627None...",shape=box];
	_JOIN_13463627 -> _JOIN_13463628;
	13662215 [label="13662215  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+23)*ny+k]*tmp[(i+23)];...",shape=box];
	ForLoop13651759 [label="ForLoop13651759  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kk)+1)%23)+1; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	ForLoop13651759 -> 13651758;
	ForLoop13651759 -> _JOIN_13651759;
	13542169 [label="13542169  y_copy[(k-kk)]=y_copy[(k-kk)]+A[it*ny+k]*tmp[it];...",shape=box];
	ForLoop13654861 [label="ForLoop13654861  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kk)+1)%23)+1; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	ForLoop13654861 -> 13654860;
	ForLoop13654861 -> _JOIN_13654861;
	13644520 [label="13644520  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+5)*ny+k]*tmp[(i+5)];...",shape=box];
	13644520 -> _JOIN_13644521;
	13660147 [label="13660147  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+21)*ny+k]*tmp[(i+21)];...",shape=box];
	ForLoop13662019 [label="ForLoop13662019  for (k=kk; k<=min(ny-1,kk+31)-22; k=k+23) {...",shape=box];
	ForLoop13662019 -> 13661181;
	ForLoop13662019 -> _JOIN_13662019;
	_JOIN_13644521 [label="_JOIN_13644521None...",shape=box];
	_JOIN_13644521 -> 13644553;
	13650724 [label="13650724  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+11)*ny+k]*tmp[(i+11)];...",shape=box];
	13650724 -> _JOIN_13650725;
	13659029 [label="13659029  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	_JOIN_13658917 [label="_JOIN_13658917None...",shape=box];
	_JOIN_13658917 -> ForLoop13658997;
	13639467 [label="13639467  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+1)*ny+k]*tmp[(i+1)];...",shape=box];
	_JOIN_13655815 [label="_JOIN_13655815None...",shape=box];
	_JOIN_13655815 -> ForLoop13655895;
	13461899 [label="13461899  double x_copy;...",shape=box];
	ForLoop13654781 [label="ForLoop13654781  for (k=kk; k<=min(ny-1,kk+31)-22; k=k+23) {...",shape=box];
	ForLoop13654781 -> 13653943;
	ForLoop13654781 -> _JOIN_13654781;
	13646588 [label="13646588  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+7)*ny+k]*tmp[(i+7)];...",shape=box];
	13646588 -> _JOIN_13646589;
	_JOIN_13664205 [label="_JOIN_13664205None...",shape=box];
	_JOIN_13664205 -> ForLoop13665539;
	_JOIN_13542038 [label="_JOIN_13542038None...",shape=box];
	_JOIN_13542038 -> ForLoop13542395;
	13640417 [label="13640417  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	ForLoop13653827 [label="ForLoop13653827  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kk)+1)%23)+1; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	ForLoop13653827 -> 13653826;
	ForLoop13653827 -> _JOIN_13653827;
	_JOIN_13649691 [label="_JOIN_13649691None...",shape=box];
	_JOIN_13649691 -> 13649723;
	_JOIN_13663133 [label="_JOIN_13663133None...",shape=box];
	_JOIN_13663133 -> 13663165;
	_JOIN_13638462 [label="_JOIN_13638462None...",shape=box];
	_JOIN_13638462 -> ForLoop13664203;
	13639383 [label="13639383  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	_JOIN_13638460 [label="_JOIN_13638460None...",shape=box];
	_JOIN_13638460 -> _JOIN_13638462;
	13653826 [label="13653826  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+14)*ny+k]*tmp[(i+14)];...",shape=box];
	13653826 -> _JOIN_13653827;
	ForLoop13648657 [label="ForLoop13648657  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kk)+1)%23)+1; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	ForLoop13648657 -> 13648656;
	ForLoop13648657 -> _JOIN_13648657;
	ForLoop13464383 [label="ForLoop13464383  for (j=jt; j<=min(ny-1,jj+63); j=j+1) {...",shape=box];
	ForLoop13464383 -> 13466797;
	ForLoop13464383 -> _JOIN_13464383;
	_JOIN_13457285 [label="_JOIN_13457285None...",shape=box];
	13654893 [label="13654893  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	ForLoop13641339 [label="ForLoop13641339  for (k=kk; k<=min(ny-1,kk+31)-22; k=k+23) {...",shape=box];
	ForLoop13641339 -> 13640501;
	ForLoop13641339 -> _JOIN_13641339;
	ForLoop13641419 [label="ForLoop13641419  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kk)+1)%23)+1; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	ForLoop13641419 -> 13641418;
	ForLoop13641419 -> _JOIN_13641419;
	ForLoop13638462 [label="ForLoop13638462  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop13638462 -> ForLoop13638460;
	ForLoop13638462 -> _JOIN_13638462;
	ForLoop13638460 [label="ForLoop13638460  for (jj=jjj; jj<=min(ny-1,jjj+1984); jj=jj+64) {...",shape=box];
	ForLoop13638460 -> ForLoop13637722;
	ForLoop13638460 -> _JOIN_13638460;
	13662131 [label="13662131  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	_JOIN_13643487 [label="_JOIN_13643487None...",shape=box];
	_JOIN_13643487 -> 13643519;
	_JOIN_13464344 [label="_JOIN_13464344None...",shape=box];
	_JOIN_13464344 -> ForLoop13464383;
	_JOIN_13664610 [label="_JOIN_13664610None...",shape=box];
	_JOIN_13664610 -> _JOIN_13664612;
	_JOIN_13646509 [label="_JOIN_13646509None...",shape=box];
	_JOIN_13646509 -> ForLoop13646589;
	ForLoop13639277 [label="ForLoop13639277  for (k=kk; k<=min(ny-1,kk+31)-22; k=k+23) {...",shape=box];
	ForLoop13639277 -> 13638571;
	ForLoop13639277 -> _JOIN_13639277;
	13656011 [label="13656011  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+17)*ny+k]*tmp[(i+17)];...",shape=box];
	ForLoop13664087 [label="ForLoop13664087  for (k=kk; k<=min(ny-1,kk+31)-22; k=k+23) {...",shape=box];
	ForLoop13664087 -> 13663249;
	ForLoop13664087 -> _JOIN_13664087;
	13651758 [label="13651758  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+12)*ny+k]*tmp[(i+12)];...",shape=box];
	13651758 -> _JOIN_13651759;
	ForLoop13665539 [label="ForLoop13665539  for (i=(min(nx-1,ii+511))-(((min(nx-1,ii+511))-(it)+1)%25)+1; i<=min(nx-1,ii+511); i=i+1) {...",shape=box];
	ForLoop13665539 -> 13664316;
	ForLoop13665539 -> _JOIN_13665539;
	13664316 [label="13664316  tmp[i]=0;...",shape=box];
	13664316 -> ForLoop13664613;
	13641451 [label="13641451  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	13661064 [label="13661064  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+21)*ny+k]*tmp[(i+21)];...",shape=box];
	13661064 -> _JOIN_13661065;
	13645554 [label="13645554  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+6)*ny+k]*tmp[(i+6)];...",shape=box];
	13645554 -> _JOIN_13645555;
	_JOIN_13655895 [label="_JOIN_13655895None...",shape=box];
	_JOIN_13655895 -> 13655927;
	_JOIN_13453907 [label="_JOIN_13453907None...",shape=box];
	_JOIN_13453907 -> 13454071;
	13664675 [label="13664675  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	13654977 [label="13654977  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+16)*ny+k]*tmp[(i+16)];...",shape=box];
	ForLoop13651679 [label="ForLoop13651679  for (k=kk; k<=min(ny-1,kk+31)-22; k=k+23) {...",shape=box];
	ForLoop13651679 -> 13650841;
	ForLoop13651679 -> _JOIN_13651679;
	_JOIN_13644441 [label="_JOIN_13644441None...",shape=box];
	_JOIN_13644441 -> ForLoop13644521;
	ForLoop13463771 [label="ForLoop13463771  for (it=ii; it<=min(nx-1,ii+511)-7; it=it+8) {...",shape=box];
	ForLoop13463771 -> 13464021;
	ForLoop13463771 -> _JOIN_13463771;
	13631137 [label="13631137  tmp[i]=tmp[i]+A[i*ny+jt]*x[jt];...",shape=box];
	ForLoop13662099 [label="ForLoop13662099  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kk)+1)%23)+1; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	ForLoop13662099 -> 13662098;
	ForLoop13662099 -> _JOIN_13662099;
	_JOIN_13463628 [label="_JOIN_13463628None...",shape=box];
	_JOIN_13463628 -> ForLoop13463769;
	_JOIN_13661065 [label="_JOIN_13661065None...",shape=box];
	_JOIN_13661065 -> 13661097;
	ForLoop13665428 [label="ForLoop13665428  for (k=kk; k<=min(ny-1,kk+31)-22; k=k+23) {...",shape=box];
	ForLoop13665428 -> 13664722;
	ForLoop13665428 -> _JOIN_13665428;
	_JOIN_13658997 [label="_JOIN_13658997None...",shape=box];
	_JOIN_13658997 -> 13659029;
	_JOIN_13650725 [label="_JOIN_13650725None...",shape=box];
	_JOIN_13650725 -> 13650757;
	_JOIN_13463768 [label="_JOIN_13463768None...",shape=box];
	_JOIN_13463768 -> _JOIN_13463769;
	_JOIN_13463769 [label="_JOIN_13463769None...",shape=box];
	_JOIN_13463769 -> _JOIN_13463771;
	_JOIN_13664167 [label="_JOIN_13664167None...",shape=box];
	_JOIN_13664167 -> 13664199;
	13661181 [label="13661181  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+22)*ny+k]*tmp[(i+22)];...",shape=box];
	_JOIN_13639277 [label="_JOIN_13639277None...",shape=box];
	_JOIN_13639277 -> ForLoop13639351;
	ForLoop13650645 [label="ForLoop13650645  for (k=kk; k<=min(ny-1,kk+31)-22; k=k+23) {...",shape=box];
	ForLoop13650645 -> 13649807;
	ForLoop13650645 -> _JOIN_13650645;
	13658079 [label="13658079  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+19)*ny+k]*tmp[(i+19)];...",shape=box];
	13464643 [label="13464643  tmp[it]=tmp[it]+A[it*ny+jt]*x[jt];...",shape=box];
	ForLoop13649691 [label="ForLoop13649691  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kk)+1)%23)+1; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	ForLoop13649691 -> 13649690;
	ForLoop13649691 -> _JOIN_13649691;
	13466797 [label="13466797  tmp[it]=tmp[it]+A[it*ny+j]*x[j];...",shape=box];
	_JOIN_13640305 [label="_JOIN_13640305None...",shape=box];
	_JOIN_13640305 -> ForLoop13640385;
	ForLoop13653747 [label="ForLoop13653747  for (k=kk; k<=min(ny-1,kk+31)-22; k=k+23) {...",shape=box];
	ForLoop13653747 -> 13652909;
	ForLoop13653747 -> _JOIN_13653747;
	_JOIN_13663053 [label="_JOIN_13663053None...",shape=box];
	_JOIN_13663053 -> ForLoop13663133;
	ForLoop13655895 [label="ForLoop13655895  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kk)+1)%23)+1; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	ForLoop13655895 -> 13655894;
	ForLoop13655895 -> _JOIN_13655895;
	13639350 [label="13639350  y_copy[(k-kk)]=y_copy[(k-kk)]+A[i*ny+k]*tmp[i];...",shape=box];
	13639350 -> _JOIN_13639351;
	ForLoop13665536 [label="ForLoop13665536  for (kk=kkk; kk<=min(ny-1,kkk+2016); kk=kk+32) {...",shape=box];
	ForLoop13665536 -> 13664675;
	ForLoop13665536 -> _JOIN_13665536;
	ForLoop13463768 [label="ForLoop13463768  for (kk=kkk; kk<=min(ny-1,kkk+2016); kk=kk+32) {...",shape=box];
	ForLoop13463768 -> 13463690;
	ForLoop13463768 -> _JOIN_13463768;
	ForLoop13463769 [label="ForLoop13463769  for (kkk=0; kkk<=ny-1; kkk=kkk+2048) ...",shape=box];
	ForLoop13463769 -> ForLoop13463768;
	ForLoop13463769 -> _JOIN_13463769;
	ForLoop13647623 [label="ForLoop13647623  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kk)+1)%23)+1; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	ForLoop13647623 -> 13647622;
	ForLoop13647623 -> _JOIN_13647623;
	_JOIN_13657883 [label="_JOIN_13657883None...",shape=box];
	_JOIN_13657883 -> ForLoop13657963;
	ForLoop13642453 [label="ForLoop13642453  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kk)+1)%23)+1; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	ForLoop13642453 -> 13642452;
	ForLoop13642453 -> _JOIN_13642453;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 13453728;
	13655894 [label="13655894  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+16)*ny+k]*tmp[(i+16)];...",shape=box];
	13655894 -> _JOIN_13655895;
	_JOIN_13657963 [label="_JOIN_13657963None...",shape=box];
	_JOIN_13657963 -> 13657995;
	ForLoop13656849 [label="ForLoop13656849  for (k=kk; k<=min(ny-1,kk+31)-22; k=k+23) {...",shape=box];
	ForLoop13656849 -> 13656011;
	ForLoop13656849 -> _JOIN_13656849;
	ForLoop13647543 [label="ForLoop13647543  for (k=kk; k<=min(ny-1,kk+31)-22; k=k+23) {...",shape=box];
	ForLoop13647543 -> 13646705;
	ForLoop13647543 -> _JOIN_13647543;
	_JOIN_13651759 [label="_JOIN_13651759None...",shape=box];
	_JOIN_13651759 -> 13651791;
	_JOIN_13643407 [label="_JOIN_13643407None...",shape=box];
	_JOIN_13643407 -> ForLoop13643487;
	_JOIN_13642373 [label="_JOIN_13642373None...",shape=box];
	_JOIN_13642373 -> ForLoop13642453;
	13649807 [label="13649807  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+11)*ny+k]*tmp[(i+11)];...",shape=box];
	ForLoop13658917 [label="ForLoop13658917  for (k=kk; k<=min(ny-1,kk+31)-22; k=k+23) {...",shape=box];
	ForLoop13658917 -> 13658079;
	ForLoop13658917 -> _JOIN_13658917;
	13652825 [label="13652825  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	_JOIN_13647623 [label="_JOIN_13647623None...",shape=box];
	_JOIN_13647623 -> 13647655;
	ForLoop13663053 [label="ForLoop13663053  for (k=kk; k<=min(ny-1,kk+31)-22; k=k+23) {...",shape=box];
	ForLoop13663053 -> 13662215;
	ForLoop13663053 -> _JOIN_13663053;
	ForLoop13637722 [label="ForLoop13637722  for (jt=jj; jt<=min(ny-1,jj+63)-7; jt=jt+8) {...",shape=box];
	ForLoop13637722 -> 13631137;
	ForLoop13637722 -> _JOIN_13637722;
	_JOIN_13463771 [label="_JOIN_13463771None...",shape=box];
	_JOIN_13463771 -> 13573893;
	13643486 [label="13643486  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+4)*ny+k]*tmp[(i+4)];...",shape=box];
	13643486 -> _JOIN_13643487;
	_JOIN_13664613 [label="_JOIN_13664613None...",shape=box];
	_JOIN_13664613 -> ForLoop13665537;
	ForLoop13659951 [label="ForLoop13659951  for (k=kk; k<=min(ny-1,kk+31)-22; k=k+23) {...",shape=box];
	ForLoop13659951 -> 13659113;
	ForLoop13659951 -> _JOIN_13659951;
	_JOIN_13646589 [label="_JOIN_13646589None...",shape=box];
	_JOIN_13646589 -> 13646621;
	ForLoop13648577 [label="ForLoop13648577  for (k=kk; k<=min(ny-1,kk+31)-22; k=k+23) {...",shape=box];
	ForLoop13648577 -> 13647739;
	ForLoop13648577 -> _JOIN_13648577;
	13657995 [label="13657995  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	_JOIN_13659951 [label="_JOIN_13659951None...",shape=box];
	_JOIN_13659951 -> ForLoop13660031;
	ForLoop13660031 [label="ForLoop13660031  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kk)+1)%23)+1; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	ForLoop13660031 -> 13660030;
	ForLoop13660031 -> _JOIN_13660031;
	13463690 [label="13463690  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	13665501 [label="13665501  y_copy[(k-kk)]=y_copy[(k-kk)]+A[i*ny+k]*tmp[i];...",shape=box];
	13665501 -> _JOIN_13665502;
	13573893 [label="13573893  int i;...",shape=box];
	13573893 -> ForLoop13664205;
	13646705 [label="13646705  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+8)*ny+k]*tmp[(i+8)];...",shape=box];
	_JOIN_13641419 [label="_JOIN_13641419None...",shape=box];
	_JOIN_13641419 -> 13641451;
	_JOIN_13642453 [label="_JOIN_13642453None...",shape=box];
	_JOIN_13642453 -> 13642485;
	13638571 [label="13638571  y_copy[(k-kk)]=y_copy[(k-kk)]+A[i*ny+k]*tmp[i];...",shape=box];
	13640501 [label="13640501  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+2)*ny+k]*tmp[(i+2)];...",shape=box];
	13664166 [label="13664166  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+24)*ny+k]*tmp[(i+24)];...",shape=box];
	13664166 -> _JOIN_13664167;
	_JOIN_13662019 [label="_JOIN_13662019None...",shape=box];
	_JOIN_13662019 -> ForLoop13662099;
	13656961 [label="13656961  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	13535256 [label="13535256  y_copy[(k-kk)]=y_copy[(k-kk)]+A[it*ny+k]*tmp[it];...",shape=box];
	ForLoop13664610 [label="ForLoop13664610  for (j=jt; j<=min(ny-1,jj+63); j=j+1) ...",shape=box];
	ForLoop13664610 -> 13664609;
	ForLoop13664610 -> _JOIN_13664610;
	_JOIN_13665537 [label="_JOIN_13665537None...",shape=box];
	_JOIN_13665537 -> _JOIN_13665539;
	_JOIN_13664612 [label="_JOIN_13664612None...",shape=box];
	_JOIN_13664612 -> _JOIN_13664613;
	ForLoop13657883 [label="ForLoop13657883  for (k=kk; k<=min(ny-1,kk+31)-22; k=k+23) {...",shape=box];
	ForLoop13657883 -> 13657045;
	ForLoop13657883 -> _JOIN_13657883;
	_JOIN_13649611 [label="_JOIN_13649611None...",shape=box];
	_JOIN_13649611 -> ForLoop13649691;
	_JOIN_13654861 [label="_JOIN_13654861None...",shape=box];
	_JOIN_13654861 -> 13654893;
	ForLoop13649611 [label="ForLoop13649611  for (k=kk; k<=min(ny-1,kk+31)-22; k=k+23) {...",shape=box];
	ForLoop13649611 -> 13648773;
	ForLoop13649611 -> _JOIN_13649611;
	13630850 [label="13630850  tmp[i]=0;...",shape=box];
	13657962 [label="13657962  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+18)*ny+k]*tmp[(i+18)];...",shape=box];
	13657962 -> _JOIN_13657963;
	_JOIN_13640385 [label="_JOIN_13640385None...",shape=box];
	_JOIN_13640385 -> 13640417;
	13453728 [label="13453728  int i;...",shape=box];
	13654860 [label="13654860  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+15)*ny+k]*tmp[(i+15)];...",shape=box];
	13654860 -> _JOIN_13654861;
	13651791 [label="13651791  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	ForLoop13655815 [label="ForLoop13655815  for (k=kk; k<=min(ny-1,kk+31)-22; k=k+23) {...",shape=box];
	ForLoop13655815 -> 13654977;
	ForLoop13655815 -> _JOIN_13655815;
	_JOIN_13637722 [label="_JOIN_13637722None...",shape=box];
	_JOIN_13637722 -> ForLoop13638458;
	13653943 [label="13653943  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+15)*ny+k]*tmp[(i+15)];...",shape=box];
	13662098 [label="13662098  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+22)*ny+k]*tmp[(i+22)];...",shape=box];
	13662098 -> _JOIN_13662099;
	ForLoop13542038 [label="ForLoop13542038  for (k=kk; k<=min(ny-1,kk+31)-22; k=k+23) {...",shape=box];
	ForLoop13542038 -> 13535256;
	ForLoop13542038 -> _JOIN_13542038;
	13454071 [label="13454071  register int cbv_2, cbv_3;...",shape=box];
	ForLoop13638458 [label="ForLoop13638458  for (j=jt; j<=min(ny-1,jj+63); j=j+1) {...",shape=box];
	ForLoop13638458 -> 13637760;
	ForLoop13638458 -> _JOIN_13638458;
	_JOIN_13653747 [label="_JOIN_13653747None...",shape=box];
	_JOIN_13653747 -> ForLoop13653827;
	_JOIN_13656929 [label="_JOIN_13656929None...",shape=box];
	_JOIN_13656929 -> 13656961;
	_JOIN_13647543 [label="_JOIN_13647543None...",shape=box];
	_JOIN_13647543 -> ForLoop13647623;
	13645587 [label="13645587  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	ForLoop13664571 [label="ForLoop13664571  for (jt=jj; jt<=min(ny-1,jj+63)-7; jt=jt+8) {...",shape=box];
	ForLoop13664571 -> 13664387;
	ForLoop13664571 -> _JOIN_13664571;
	_JOIN_13652713 [label="_JOIN_13652713None...",shape=box];
	_JOIN_13652713 -> ForLoop13652793;
	13463766 [label="13463766  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	13463766 -> _JOIN_13463768;
	ForLoop13652713 [label="ForLoop13652713  for (k=kk; k<=min(ny-1,kk+31)-22; k=k+23) {...",shape=box];
	ForLoop13652713 -> 13651875;
	ForLoop13652713 -> _JOIN_13652713;
	_JOIN_13665536 [label="_JOIN_13665536None...",shape=box];
	_JOIN_13665536 -> _JOIN_13665537;
	13642452 [label="13642452  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+3)*ny+k]*tmp[(i+3)];...",shape=box];
	13642452 -> _JOIN_13642453;
	_JOIN_13664201 [label="_JOIN_13664201None...",shape=box];
	_JOIN_13664201 -> _JOIN_13664203;
	13643519 [label="13643519  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	13650841 [label="13650841  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+12)*ny+k]*tmp[(i+12)];...",shape=box];
	13663132 [label="13663132  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+23)*ny+k]*tmp[(i+23)];...",shape=box];
	13663132 -> _JOIN_13663133;
	ForLoop13665502 [label="ForLoop13665502  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kk)+1)%23)+1; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	ForLoop13665502 -> 13665501;
	ForLoop13665502 -> _JOIN_13665502;
	ForLoop13642373 [label="ForLoop13642373  for (k=kk; k<=min(ny-1,kk+31)-22; k=k+23) {...",shape=box];
	ForLoop13642373 -> 13641535;
	ForLoop13642373 -> _JOIN_13642373;
	_JOIN_13665539 [label="_JOIN_13665539None...",shape=box];
	_JOIN_13665539 -> _JOIN_13457285;
	ForLoop13643487 [label="ForLoop13643487  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kk)+1)%23)+1; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	ForLoop13643487 -> 13643486;
	ForLoop13643487 -> _JOIN_13643487;
	ForLoop13645475 [label="ForLoop13645475  for (k=kk; k<=min(ny-1,kk+31)-22; k=k+23) {...",shape=box];
	ForLoop13645475 -> 13644637;
	ForLoop13645475 -> _JOIN_13645475;
	ForLoop13663133 [label="ForLoop13663133  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kk)+1)%23)+1; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	ForLoop13663133 -> 13663132;
	ForLoop13663133 -> _JOIN_13663133;
	ForLoop13464344 [label="ForLoop13464344  for (jt=jj; jt<=min(ny-1,jj+63)-7; jt=jt+8) {...",shape=box];
	ForLoop13464344 -> 13464643;
	ForLoop13464344 -> _JOIN_13464344;
	13648656 [label="13648656  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+9)*ny+k]*tmp[(i+9)];...",shape=box];
	13648656 -> _JOIN_13648657;
	13663249 [label="13663249  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+24)*ny+k]*tmp[(i+24)];...",shape=box];
	_JOIN_13664203 [label="_JOIN_13664203None...",shape=box];
	_JOIN_13664203 -> _JOIN_13664205;
	ForLoop13639351 [label="ForLoop13639351  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kk)+1)%23)+1; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	ForLoop13639351 -> 13639350;
	ForLoop13639351 -> _JOIN_13639351;
	_JOIN_13650645 [label="_JOIN_13650645None...",shape=box];
	_JOIN_13650645 -> ForLoop13650725;
	ForLoop13643407 [label="ForLoop13643407  for (k=kk; k<=min(ny-1,kk+31)-22; k=k+23) {...",shape=box];
	ForLoop13643407 -> 13642569;
	ForLoop13643407 -> _JOIN_13643407;
	13663165 [label="13663165  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	_JOIN_13651679 [label="_JOIN_13651679None...",shape=box];
	_JOIN_13651679 -> ForLoop13651759;
	13665534 [label="13665534  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	13665534 -> _JOIN_13665536;
	ForLoop13664205 [label="ForLoop13664205  for (i=it; i<=min(nx-1,ii+511)-24; i=i+25) {...",shape=box];
	ForLoop13664205 -> 13630850;
	ForLoop13664205 -> _JOIN_13664205;
	13655927 [label="13655927  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	ForLoop13664203 [label="ForLoop13664203  for (kkk=0; kkk<=ny-1; kkk=kkk+2048) {...",shape=box];
	ForLoop13664203 -> ForLoop13664201;
	ForLoop13664203 -> _JOIN_13664203;
	ForLoop13664201 [label="ForLoop13664201  for (kk=kkk; kk<=min(ny-1,kkk+2016); kk=kk+32) {...",shape=box];
	ForLoop13664201 -> 13638524;
	ForLoop13664201 -> _JOIN_13664201;
	ForLoop13664167 [label="ForLoop13664167  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kk)+1)%23)+1; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	ForLoop13664167 -> 13664166;
	ForLoop13664167 -> _JOIN_13664167;
	ForLoop13658997 [label="ForLoop13658997  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kk)+1)%23)+1; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	ForLoop13658997 -> 13658996;
	ForLoop13658997 -> _JOIN_13658997;
	13652792 [label="13652792  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+13)*ny+k]*tmp[(i+13)];...",shape=box];
	13652792 -> _JOIN_13652793;
	13651875 [label="13651875  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+13)*ny+k]*tmp[(i+13)];...",shape=box];
	_JOIN_13648577 [label="_JOIN_13648577None...",shape=box];
	_JOIN_13648577 -> ForLoop13648657;
	13664722 [label="13664722  y_copy[(k-kk)]=y_copy[(k-kk)]+A[i*ny+k]*tmp[i];...",shape=box];
	_JOIN_13464383 [label="_JOIN_13464383None...",shape=box];
	_JOIN_13464383 -> _JOIN_13463627;
	ForLoop13644521 [label="ForLoop13644521  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kk)+1)%23)+1; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	ForLoop13644521 -> 13644520;
	ForLoop13644521 -> _JOIN_13644521;
	_JOIN_13665428 [label="_JOIN_13665428None...",shape=box];
	_JOIN_13665428 -> ForLoop13665502;
	ForLoop13646509 [label="ForLoop13646509  for (k=kk; k<=min(ny-1,kk+31)-22; k=k+23) {...",shape=box];
	ForLoop13646509 -> 13645671;
	ForLoop13646509 -> _JOIN_13646509;
	ForLoop13650725 [label="ForLoop13650725  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kk)+1)%23)+1; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	ForLoop13650725 -> 13650724;
	ForLoop13650725 -> _JOIN_13650725;
	13649690 [label="13649690  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+10)*ny+k]*tmp[(i+10)];...",shape=box];
	13649690 -> _JOIN_13649691;
	ForLoop13453976 [label="ForLoop13453976  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop13453976 -> 13453975;
	ForLoop13453976 -> _JOIN_13453976;
	ForLoop13644441 [label="ForLoop13644441  for (k=kk; k<=min(ny-1,kk+31)-22; k=k+23) {...",shape=box];
	ForLoop13644441 -> 13643603;
	ForLoop13644441 -> _JOIN_13644441;
	ForLoop13646589 [label="ForLoop13646589  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kk)+1)%23)+1; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	ForLoop13646589 -> 13646588;
	ForLoop13646589 -> _JOIN_13646589;
	ForLoop13542395 [label="ForLoop13542395  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kk)+1)%23)+1; k<=min(ny-1,kk+31); k=k+1) {...",shape=box];
	ForLoop13542395 -> 13542169;
	ForLoop13542395 -> _JOIN_13542395;
	_JOIN_13645555 [label="_JOIN_13645555None...",shape=box];
	_JOIN_13645555 -> 13645587;
	_JOIN_13638458 [label="_JOIN_13638458None...",shape=box];
	_JOIN_13638458 -> _JOIN_13638460;
	_JOIN_13656849 [label="_JOIN_13656849None...",shape=box];
	_JOIN_13656849 -> ForLoop13656929;
	ForLoop13664613 [label="ForLoop13664613  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) ...",shape=box];
	ForLoop13664613 -> ForLoop13664612;
	ForLoop13664613 -> _JOIN_13664613;
	_JOIN_13653827 [label="_JOIN_13653827None...",shape=box];
	_JOIN_13653827 -> 13653859;
	ForLoop13661065 [label="ForLoop13661065  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kk)+1)%23)+1; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	ForLoop13661065 -> 13661064;
	ForLoop13661065 -> _JOIN_13661065;
	_JOIN_13660031 [label="_JOIN_13660031None...",shape=box];
	_JOIN_13660031 -> 13660063;
	_JOIN_13664087 [label="_JOIN_13664087None...",shape=expected=9369846271501.798828
actual=9369846271501.798828
box];
	_JOIN_13664087 -> ForLoop13664167;
	13638524 [label="13638524  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	13647655 [label="13647655  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	13646621 [label="13646621  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	13664609 [label="13664609  tmp[i]=tmp[i]+A[i*ny+j]*x[j];...",shape=box];
	13664609 -> _JOIN_13664610;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest63.exe __orio_perftest63.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest63.exe  
{'[6, 3, 2, 4, 6, 6, 0, 1, 5, 24, 0, 22, 1, 1, 0, 0, 1, 0]' : 0.0985429}
{'[6, 3, 2, 4, 6, 6, 0, 1, 5, 24, 0, 22, 1, 1, 0, 0, 1, 0]' : 0.0988119}
{'[6, 3, 2, 4, 6, 6, 0, 1, 5, 24, 0, 22, 1, 1, 0, 0, 1, 0]' : 0.0982461}
{'[6, 3, 2, 4, 6, 6, 0, 1, 5, 24, 0, 22, 1, 1, 0, 0, 1, 0]' : 0.0981419}
{'[6, 3, 2, 4, 6, 6, 0, 1, 5, 24, 0, 22, 1, 1, 0, 0, 1, 0]' : 0.0983291}
{'[6, 3, 2, 4, 6, 6, 0, 1, 5, 24, 0, 22, 1, 1, 0, 0, 1, 0]' : 0.0983009}
{'[6, 3, 2, 4, 6, 6, 0, 1, 5, 24, 0, 22, 1, 1, 0, 0, 1, 0]' : 0.0992889}
{'[6, 3, 2, 4, 6, 6, 0, 1, 5, 24, 0, 22, 1, 1, 0, 0, 1, 0]' : 0.0981791}
{'[6, 3, 2, 4, 6, 6, 0, 1, 5, 24, 0, 22, 1, 1, 0, 0, 1, 0]' : 0.0983}
{'[6, 3, 2, 4, 6, 6, 0, 1, 5, 24, 0, 22, 1, 1, 0, 0, 1, 0]' : 0.098362}
{'[6, 3, 2, 4, 6, 6, 0, 1, 5, 24, 0, 22, 1, 1, 0, 0, 1, 0]' : 0.098248}
{'[6, 3, 2, 4, 6, 6, 0, 1, 5, 24, 0, 22, 1, 1, 0, 0, 1, 0]' : 0.098196}
{'[6, 3, 2, 4, 6, 6, 0, 1, 5, 24, 0, 22, 1, 1, 0, 0, 1, 0]' : 0.0984199}
{'[6, 3, 2, 4, 6, 6, 0, 1, 5, 24, 0, 22, 1, 1, 0, 0, 1, 0]' : 0.0983121}
{'[6, 3, 2, 4, 6, 6, 0, 1, 5, 24, 0, 22, 1, 1, 0, 0, 1, 0]' : 0.098279}
{'[6, 3, 2, 4, 6, 6, 0, 1, 5, 24, 0, 22, 1, 1, 0, 0, 1, 0]' : 0.098084}
{'[6, 3, 2, 4, 6, 6, 0, 1, 5, 24, 0, 22, 1, 1, 0, 0, 1, 0]' : 0.098865}
{'[6, 3, 2, 4, 6, 6, 0, 1, 5, 24, 0, 22, 1, 1, 0, 0, 1, 0]' : 0.0983551}
{'[6, 3, 2, 4, 6, 6, 0, 1, 5, 24, 0, 22, 1, 1, 0, 0, 1, 0]' : 0.0984521}
{'[6, 3, 2, 4, 6, 6, 0, 1, 5, 24, 0, 22, 1, 1, 0, 0, 1, 0]' : 0.0981951}
{'[6, 3, 2, 4, 6, 6, 0, 1, 5, 24, 0, 22, 1, 1, 0, 0, 1, 0]' : 0.098321}
{'[6, 3, 2, 4, 6, 6, 0, 1, 5, 24, 0, 22, 1, 1, 0, 0, 1, 0]' : 0.0984671}
{'[6, 3, 2, 4, 6, 6, 0, 1, 5, 24, 0, 22, 1, 1, 0, 0, 1, 0]' : 0.098213}
{'[6, 3, 2, 4, 6, 6, 0, 1, 5, 24, 0, 22, 1, 1, 0, 0, 1, 0]' : 0.098088}
{'[6, 3, 2, 4, 6, 6, 0, 1, 5, 24, 0, 22, 1, 1, 0, 0, 1, 0]' : 0.0983331}
{'[6, 3, 2, 4, 6, 6, 0, 1, 5, 24, 0, 22, 1, 1, 0, 0, 1, 0]' : 0.098315}
{'[6, 3, 2, 4, 6, 6, 0, 1, 5, 24, 0, 22, 1, 1, 0, 0, 1, 0]' : 0.0981789}
{'[6, 3, 2, 4, 6, 6, 0, 1, 5, 24, 0, 22, 1, 1, 0, 0, 1, 0]' : 0.0991142}
{'[6, 3, 2, 4, 6, 6, 0, 1, 5, 24, 0, 22, 1, 1, 0, 0, 1, 0]' : 0.0983}
{'[6, 3, 2, 4, 6, 6, 0, 1, 5, 24, 0, 22, 1, 1, 0, 0, 1, 0]' : 0.0983429}

out:
 ["{'[6, 3, 2, 4, 6, 6, 0, 1, 5, 24, 0, 22, 1, 1, 0, 0, 1, 0]' : 0.0985429}", "{'[6, 3, 2, 4, 6, 6, 0, 1, 5, 24, 0, 22, 1, 1, 0, 0, 1, 0]' : 0.0988119}", "{'[6, 3, 2, 4, 6, 6, 0, 1, 5, 24, 0, 22, 1, 1, 0, 0, 1, 0]' : 0.0982461}", "{'[6, 3, 2, 4, 6, 6, 0, 1, 5, 24, 0, 22, 1, 1, 0, 0, 1, 0]' : 0.0981419}", "{'[6, 3, 2, 4, 6, 6, 0, 1, 5, 24, 0, 22, 1, 1, 0, 0, 1, 0]' : 0.0983291}", "{'[6, 3, 2, 4, 6, 6, 0, 1, 5, 24, 0, 22, 1, 1, 0, 0, 1, 0]' : 0.0983009}", "{'[6, 3, 2, 4, 6, 6, 0, 1, 5, 24, 0, 22, 1, 1, 0, 0, 1, 0]' : 0.0992889}", "{'[6, 3, 2, 4, 6, 6, 0, 1, 5, 24, 0, 22, 1, 1, 0, 0, 1, 0]' : 0.0981791}", "{'[6, 3, 2, 4, 6, 6, 0, 1, 5, 24, 0, 22, 1, 1, 0, 0, 1, 0]' : 0.0983}", "{'[6, 3, 2, 4, 6, 6, 0, 1, 5, 24, 0, 22, 1, 1, 0, 0, 1, 0]' : 0.098362}", "{'[6, 3, 2, 4, 6, 6, 0, 1, 5, 24, 0, 22, 1, 1, 0, 0, 1, 0]' : 0.098248}", "{'[6, 3, 2, 4, 6, 6, 0, 1, 5, 24, 0, 22, 1, 1, 0, 0, 1, 0]' : 0.098196}", "{'[6, 3, 2, 4, 6, 6, 0, 1, 5, 24, 0, 22, 1, 1, 0, 0, 1, 0]' : 0.0984199}", "{'[6, 3, 2, 4, 6, 6, 0, 1, 5, 24, 0, 22, 1, 1, 0, 0, 1, 0]' : 0.0983121}", "{'[6, 3, 2, 4, 6, 6, 0, 1, 5, 24, 0, 22, 1, 1, 0, 0, 1, 0]' : 0.098279}", "{'[6, 3, 2, 4, 6, 6, 0, 1, 5, 24, 0, 22, 1, 1, 0, 0, 1, 0]' : 0.098084}", "{'[6, 3, 2, 4, 6, 6, 0, 1, 5, 24, 0, 22, 1, 1, 0, 0, 1, 0]' : 0.098865}", "{'[6, 3, 2, 4, 6, 6, 0, 1, 5, 24, 0, 22, 1, 1, 0, 0, 1, 0]' : 0.0983551}", "{'[6, 3, 2, 4, 6, 6, 0, 1, 5, 24, 0, 22, 1, 1, 0, 0, 1, 0]' : 0.0984521}", "{'[6, 3, 2, 4, 6, 6, 0, 1, 5, 24, 0, 22, 1, 1, 0, 0, 1, 0]' : 0.0981951}", "{'[6, 3, 2, 4, 6, 6, 0, 1, 5, 24, 0, 22, 1, 1, 0, 0, 1, 0]' : 0.098321}", "{'[6, 3, 2, 4, 6, 6, 0, 1, 5, 24, 0, 22, 1, 1, 0, 0, 1, 0]' : 0.0984671}", "{'[6, 3, 2, 4, 6, 6, 0, 1, 5, 24, 0, 22, 1, 1, 0, 0, 1, 0]' : 0.098213}", "{'[6, 3, 2, 4, 6, 6, 0, 1, 5, 24, 0, 22, 1, 1, 0, 0, 1, 0]' : 0.098088}", "{'[6, 3, 2, 4, 6, 6, 0, 1, 5, 24, 0, 22, 1, 1, 0, 0, 1, 0]' : 0.0983331}", "{'[6, 3, 2, 4, 6, 6, 0, 1, 5, 24, 0, 22, 1, 1, 0, 0, 1, 0]' : 0.098315}", "{'[6, 3, 2, 4, 6, 6, 0, 1, 5, 24, 0, 22, 1, 1, 0, 0, 1, 0]' : 0.0981789}", "{'[6, 3, 2, 4, 6, 6, 0, 1, 5, 24, 0, 22, 1, 1, 0, 0, 1, 0]' : 0.0991142}", "{'[6, 3, 2, 4, 6, 6, 0, 1, 5, 24, 0, 22, 1, 1, 0, 0, 1, 0]' : 0.0983}", "{'[6, 3, 2, 4, 6, 6, 0, 1, 5, 24, 0, 22, 1, 1, 0, 0, 1, 0]' : 0.0983429}"]
returning from 'run': {'[6, 3, 2, 4, 6, 6, 0, 1, 5, 24, 0, 22, 1, 1, 0, 0, 1, 0]': ([0.0985429, 0.0988119, 0.0982461, 0.0981419, 0.0983291, 0.0983009, 0.0992889, 0.0981791, 0.0983, 0.098362, 0.098248, 0.098196, 0.0984199, 0.0983121, 0.098279, 0.098084, 0.098865, 0.0983551, 0.0984521, 0.0981951, 0.098321, 0.0984671, 0.098213, 0.098088, 0.0983331, 0.098315, 0.0981789, 0.0991142, 0.0983, 0.0983429], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.0985429, 0.0988119, 0.0982461, 0.0981419, 0.0983291, 0.0983009, 0.0992889, 0.0981791, 0.0983, 0.098362, 0.098248, 0.098196, 0.0984199, 0.0983121, 0.098279, 0.098084, 0.098865, 0.0983551, 0.0984521, 0.0981951, 0.098321, 0.0984671, 0.098213, 0.098088, 0.0983331, 0.098315, 0.0981789, 0.0991142, 0.0983, 0.0983429], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[6, 3, 2, 4, 6, 6, 0, 1, 5, 24, 0, 22, 1, 1, 0, 0, 1, 0]': ([0.0985429, 0.0988119, 0.0982461, 0.0981419, 0.0983291, 0.0983009, 0.0992889, 0.0981791, 0.0983, 0.098362, 0.098248, 0.098196, 0.0984199, 0.0983121, 0.098279, 0.098084, 0.098865, 0.0983551, 0.0984521, 0.0981951, 0.098321, 0.0984671, 0.098213, 0.098088, 0.0983331, 0.098315, 0.0981789, 0.0991142, 0.0983, 0.0983429], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [6, 3, 4, 6, 3, 1, 1, 20, 28, 20, 0, 0, 0, 1, 0, 1]
Fixed Factors: {'T2_J': 6, 'VEC1': 1}
Testing candidate 26: [6, 3, 4, 6, 6, 3, 1, 1, 20, 28, 20, 0, 0, 0, 1, 0, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	166
        Max loop nest depth: 	6
        Additions: 		8010
        Multiplications: 	1800
        Divisions: 		0
        Logical: 		0
        Reads: 			12158
        Writes: 		1469
        Comparisons:		166
        Gotos: 			0
        
digraph CFG {
	13804798 [label="13804798  for (j=jj; j<=min(ny-1,jj+63); j=j+1) ...",shape=box];
	13822538 [label="13822538  for (j=jj; j<=min(ny-1,jj+63); j=j+1) ...",shape=box];
	13816329 [label="13816329  for (j=jj; j<=min(ny-1,jj+63); j=j+1) ...",shape=box];
	ForLoop13838230 [label="ForLoop13838230  for (jj=jjj; jj<=min(ny-1,jjj+1984); jj=jj+64) {...",shape=box];
	ForLoop13838230 -> 13837570;
	ForLoop13838230 -> _JOIN_13838230;
	_JOIN_13837397 [label="_JOIN_13837397None...",shape=box];
	_JOIN_13837397 -> ForLoop13838622;
	_JOIN_13836492 [label="_JOIN_13836492None...",shape=box];
	_JOIN_13836492 -> 13836523;
	_JOIN_13822426 [label="_JOIN_13822426None...",shape=box];
	_JOIN_13822426 -> 13935144;
	13809286 [label="13809286  tmp[(i+9)]=tmp[(i+9)]+A[(i+9)*ny+j]*x_copy[(j-jj)];...",shape=box];
	13810974 [label="13810974  tmp[(i+10)]=tmp[(i+10)]+A[(i+10)*ny+j]*x_copy[(j-jj)];...",shape=box];
	13810974 -> _JOIN_13810975;
	13929690 [label="13929690  register int cbv_53, cbv_54;...",shape=box];
	_JOIN_13816217 [label="_JOIN_13816217None...",shape=box];
	_JOIN_13816217 -> 13928781;
	13827922 [label="13827922  y_copy[(kt-kk)]=y_copy[(kt-kk)]+A[i*ny+kt]*tmp[i];...",shape=box];
	_JOIN_13824200 [label="_JOIN_13824200None...",shape=box];
	_JOIN_13824200 -> 13936962;
	ForLoop13802912 [label="ForLoop13802912  for (j=jj; j<=cbv_4; j=j+21) {...",shape=box];
	ForLoop13802912 -> 13802190;
	ForLoop13802912 -> _JOIN_13802912;
	13806625 [label="13806625  tmp[(i+6)]=tmp[(i+6)]+A[(i+6)*ny+j]*x_copy[(j-jj)];...",shape=box];
	13804765 [label="13804765  tmp[(i+3)]=tmp[(i+3)]+A[(i+3)*ny+j]*x_copy[(j-jj)];...",shape=box];
	13804765 -> _JOIN_13804766;
	13809200 [label="13809200  tmp[(i+8)]=tmp[(i+8)]+A[(i+8)*ny+j]*x_copy[(j-jj)];...",shape=box];
	13809200 -> _JOIN_13809201;
	13925145 [label="13925145  register int cbv_38, cbv_39;...",shape=box];
	ForLoop13838619 [label="ForLoop13838619  for (kk=kkk; kk<=min(ny-1,kkk+128); kk=kk+128) {...",shape=box];
	ForLoop13838619 -> 13838293;
	ForLoop13838619 -> _JOIN_13838619;
	13838226 [label="13838226  tmp[i]=tmp[i]+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	13838226 -> _JOIN_13838227;
	_JOIN_13817991 [label="_JOIN_13817991None...",shape=box];
	_JOIN_13817991 -> 13930599;
	_JOIN_13838230 [label="_JOIN_13838230None...",shape=box];
	_JOIN_13838230 -> _JOIN_13838231;
	_JOIN_13838231 [label="_JOIN_13838231None...",shape=box];
	_JOIN_13838231 -> ForLoop13838620;
	_JOIN_13819765 [label="_JOIN_13819765None...",shape=box];
	_JOIN_13819765 -> 13932417;
	_JOIN_13818878 [label="_JOIN_13818878None...",shape=box];
	_JOIN_13818878 -> 13931508;
	13810087 [label="13810087  tmp[(i+9)]=tmp[(i+9)]+A[(i+9)*ny+j]*x_copy[(j-jj)];...",shape=box];
	13810087 -> _JOIN_13810088;
	_JOIN_13838622 [label="_JOIN_13838622None...",shape=box];
	_JOIN_13838622 -> _JOIN_13714606;
	ForLoop13802992 [label="ForLoop13802992  for (j=cbv_5; j<=cbv_6; j=j+1) ...",shape=box];
	ForLoop13802992 -> 13802991;
	ForLoop13802992 -> _JOIN_13802992;
	_JOIN_13810008 [label="_JOIN_13810008None...",shape=box];
	_JOIN_13810008 -> 13922418;
	13801492 [label="13801492  tmp[i]=tmp[i]+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_13838156 [label="_JOIN_13838156None...",shape=box];
	_JOIN_13838156 -> 13949027;
	13826139 [label="13826139  tmp[(i+28)]=tmp[(i+28)]+A[(i+28)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_13826054 [label="_JOIN_13826054None...",shape=box];
	_JOIN_13826054 -> 13826086;
	ForLoop13803799 [label="ForLoop13803799  for (j=jj; j<=cbv_7; j=j+21) {...",shape=box];
	ForLoop13803799 -> 13803077;
	ForLoop13803799 -> _JOIN_13803799;
	13817269 [label="13817269  tmp[(i+18)]=tmp[(i+18)]+A[(i+18)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_13710972 [label="_JOIN_13710972None...",shape=box];
	_JOIN_13710972 -> 13721504;
	_JOIN_13810088 [label="_JOIN_13810088None...",shape=box];
	_JOIN_13810088 -> 13810120;
	13815442 [label="13815442  for (j=jj; j<=min(ny-1,jj+63); j=j+1) ...",shape=box];
	ForLoop13805653 [label="ForLoop13805653  for (j=cbv_14; j<=cbv_15; j=j+1) ...",shape=box];
	ForLoop13805653 -> 13805652;
	ForLoop13805653 -> _JOIN_13805653;
	13915146 [label="13915146  register int cbv_5, cbv_6;...",shape=box];
	_JOIN_13838620 [label="_JOIN_13838620None...",shape=box];
	_JOIN_13838620 -> _JOIN_13838622;
	13811861 [label="13811861  tmp[(i+11)]=tmp[(i+11)]+A[(i+11)*ny+j]*x_copy[(j-jj)];...",shape=box];
	13811861 -> _JOIN_13811862;
	_JOIN_13802105 [label="_JOIN_13802105None...",shape=box];
	_JOIN_13802105 -> 13802137;
	13837614 [label="13837614  tmp[i]=tmp[i]+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_13825087 [label="_JOIN_13825087None...",shape=box];
	_JOIN_13825087 -> 13937871;
	13806539 [label="13806539  tmp[(i+5)]=tmp[(i+5)]+A[(i+5)*ny+j]*x_copy[(j-jj)];...",shape=box];
	13806539 -> _JOIN_13806540;
	_JOIN_13805573 [label="_JOIN_13805573None...",shape=box];
	_JOIN_13805573 -> 13917873;
	ForLoop13819845 [label="ForLoop13819845  for (j=cbv_62; j<=cbv_63; j=j+1) ...",shape=box];
	ForLoop13819845 -> 13819844;
	ForLoop13819845 -> _JOIN_13819845;
	_JOIN_13817104 [label="_JOIN_13817104None...",shape=box];
	_JOIN_13817104 -> 13929690;
	ForLoop13819765 [label="ForLoop13819765  for (j=jj; j<=cbv_61; j=j+21) {...",shape=box];
	ForLoop13819765 -> 13819043;
	ForLoop13819765 -> _JOIN_13819765;
	ForLoop13811782 [label="ForLoop13811782  for (j=jj; j<=cbv_34; j=j+21) {...",shape=box];
	ForLoop13811782 -> 13811060;
	ForLoop13811782 -> _JOIN_13811782;
	13939689 [label="13939689  register int cbv_86, cbv_87;...",shape=box];
	_JOIN_13815410 [label="_JOIN_13815410None...",shape=box];
	_JOIN_13815410 -> 13815442;
	_JOIN_13823313 [label="_JOIN_13823313None...",shape=box];
	_JOIN_13823313 -> 13936053;
	ForLoop13824280 [label="ForLoop13824280  for (j=cbv_77; j<=cbv_78; j=j+1) ...",shape=box];
	ForLoop13824280 -> 13824279;
	ForLoop13824280 -> _JOIN_13824280;
	13811060 [label="13811060  tmp[(i+11)]=tmp[(i+11)]+A[(i+11)*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop13825974 [label="ForLoop13825974  for (j=jj; j<=cbv_82; j=j+21) {...",shape=box];
	ForLoop13825974 -> 13825252;
	ForLoop13825974 -> _JOIN_13825974;
	_JOIN_13838227 [label="_JOIN_13838227None...",shape=box];
	_JOIN_13838227 -> _JOIN_13838230;
	ForLoop13818878 [label="ForLoop13818878  for (j=jj; j<=cbv_58; j=j+21) {...",shape=box];
	ForLoop13818878 -> 13818156;
	ForLoop13818878 -> _JOIN_13818878;
	ForLoop13813636 [label="ForLoop13813636  for (j=cbv_41; j<=cbv_42; j=j+1) ...",shape=box];
	ForLoop13813636 -> 13813635;
	ForLoop13813636 -> _JOIN_13813636;
	_JOIN_13817184 [label="_JOIN_13817184None...",shape=box];
	_JOIN_13817184 -> 13817216;
	13804851 [label="13804851  tmp[(i+4)]=tmp[(i+4)]+A[(i+4)*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop13826861 [label="ForLoop13826861  for (j=jj; j<=cbv_85; j=j+21) {...",shape=box];
	ForLoop13826861 -> 13826139;
	ForLoop13826861 -> _JOIN_13826861;
	13811894 [label="13811894  for (j=jj; j<=min(ny-1,jj+63); j=j+1) ...",shape=box];
	13935144 [label="13935144  register int cbv_71, cbv_72;...",shape=box];
	13949027 [label="13949027  register int cbv_90, cbv_91;...",shape=box];
	ForLoop13822426 [label="ForLoop13822426  for (j=jj; j<=cbv_70; j=j+21) {...",shape=box];
	ForLoop13822426 -> 13821704;
	ForLoop13822426 -> _JOIN_13822426;
	ForLoop13710903 [label="ForLoop13710903  for (i=0; i<=cbv_1; i=i+21) {...",shape=box];
	ForLoop13710903 -> 13710721;
	ForLoop13710903 -> _JOIN_13710903;
	13818990 [label="13818990  for (j=jj; j<=min(ny-1,jj+63); j=j+1) ...",shape=box];
	13802190 [label="13802190  tmp[(i+1)]=tmp[(i+1)]+A[(i+1)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_13837393 [label="_JOIN_13837393None...",shape=box];
	_JOIN_13837393 -> _JOIN_13837395;
	ForLoop13810975 [label="ForLoop13810975  for (j=cbv_32; j<=cbv_33; j=j+1) ...",shape=box];
	ForLoop13810975 -> 13810974;
	ForLoop13810975 -> _JOIN_13810975;
	_JOIN_13816297 [label="_JOIN_13816297None...",shape=box];
	_JOIN_13816297 -> 13816329;
	13810173 [label="13810173  tmp[(i+10)]=tmp[(i+10)]+A[(i+10)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_13837395 [label="_JOIN_13837395None...",shape=box];
	_JOIN_13837395 -> _JOIN_13837397;
	ForLoop13825167 [label="ForLoop13825167  for (j=cbv_80; j<=cbv_81; j=j+1) ...",shape=box];
	ForLoop13825167 -> 13825166;
	ForLoop13825167 -> _JOIN_13825167;
	13809233 [label="13809233  for (j=jj; j<=min(ny-1,jj+63); j=j+1) ...",shape=box];
	13821704 [label="13821704  tmp[(i+23)]=tmp[(i+23)]+A[(i+23)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_13811862 [label="_JOIN_13811862None...",shape=box];
	_JOIN_13811862 -> 13811894;
	ForLoop13714606 [label="ForLoop13714606  for (ii=iii; ii<=min(nx-1,iii+1536); ii=ii+512) {...",shape=box];
	ForLoop13714606 -> 13740090;
	ForLoop13714606 -> _JOIN_13714606;
	ForLoop13714607 [label="ForLoop13714607  for (iii=0; iii<=nx-1; iii=iii+2048) ...",shape=box];
	ForLoop13714607 -> ForLoop13714606;
	ForLoop13714607 -> _JOIN_13714607;
	_JOIN_13710903 [label="_JOIN_13710903None...",shape=box];
	_JOIN_13710903 -> 13711202;
	13803024 [label="13803024  for (j=jj; j<=min(ny-1,jj+63); j=j+1) ...",shape=box];
	13808313 [label="13808313  tmp[(i+7)]=tmp[(i+7)]+A[(i+7)*ny+j]*x_copy[(j-jj)];...",shape=box];
	13808313 -> _JOIN_13808314;
	ForLoop13813556 [label="ForLoop13813556  for (j=jj; j<=cbv_40; j=j+21) {...",shape=box];
	ForLoop13813556 -> 13812834;
	ForLoop13813556 -> _JOIN_13813556;
	13814555 [label="13814555  for (j=jj; j<=min(ny-1,jj+63); j=j+1) ...",shape=box];
	13802104 [label="13802104  tmp[i]=tmp[i]+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	13802104 -> _JOIN_13802105;
	13812781 [label="13812781  for (j=jj; j<=min(ny-1,jj+63); j=j+1) ...",shape=box];
	13823392 [label="13823392  tmp[(i+24)]=tmp[(i+24)]+A[(i+24)*ny+j]*x_copy[(j-jj)];...",shape=box];
	13823392 -> _JOIN_13823393;
	13808399 [label="13808399  tmp[(i+8)]=tmp[(i+8)]+A[(i+8)*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop13822506 [label="ForLoop13822506  for (j=cbv_71; j<=cbv_72; j=j+1) ...",shape=box];
	ForLoop13822506 -> 13822505;
	ForLoop13822506 -> _JOIN_13822506;
	13821651 [label="13821651  for (j=jj; j<=min(ny-1,jj+63); j=j+1) ...",shape=box];
	ForLoop13838622 [label="ForLoop13838622  for (i=(min(nx-1,ii+511))-(((min(nx-1,ii+511))-(ii)+1)%29)+1; i<=min(nx-1,ii+511); i=i+1) {...",shape=box];
	ForLoop13838622 -> 13837508;
	ForLoop13838622 -> _JOIN_13838622;
	ForLoop13838227 [label="ForLoop13838227  for (j=cbv_90; j<=cbv_91; j=j+1) ...",shape=box];
	ForLoop13838227 -> 13838226;
	ForLoop13838227 -> _JOIN_13838227;
	ForLoop13820652 [label="ForLoop13820652  for (j=jj; j<=cbv_64; j=j+21) {...",shape=box];
	ForLoop13820652 -> 13819930;
	ForLoop13820652 -> _JOIN_13820652;
	13914237 [label="13914237  register int cbv_2, cbv_3;...",shape=box];
	13826053 [label="13826053  tmp[(i+27)]=tmp[(i+27)]+A[(i+27)*ny+j]*x_copy[(j-jj)];...",shape=box];
	13826053 -> _JOIN_13826054;
	13802991 [label="13802991  tmp[(i+1)]=tmp[(i+1)]+A[(i+1)*ny+j]*x_copy[(j-jj)];...",shape=box];
	13802991 -> _JOIN_13802992;
	13825252 [label="13825252  tmp[(i+27)]=tmp[(i+27)]+A[(i+27)*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop13818958 [label="ForLoop13818958  for (j=cbv_59; j<=cbv_60; j=j+1) ...",shape=box];
	ForLoop13818958 -> 13818957;
	ForLoop13818958 -> _JOIN_13818958;
	13811947 [label="13811947  tmp[(i+12)]=tmp[(i+12)]+A[(i+12)*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop13826944 [label="ForLoop13826944  for (jj=jjj; jj<=min(ny-1,jjj+1984); jj=jj+64) {...",shape=box];
	ForLoop13826944 -> 13801448;
	ForLoop13826944 -> _JOIN_13826944;
	ForLoop13826946 [label="ForLoop13826946  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop13826946 -> ForLoop13826944;
	ForLoop13826946 -> _JOIN_13826946;
	13805652 [label="13805652  tmp[(i+4)]=tmp[(i+4)]+A[(i+4)*ny+j]*x_copy[(j-jj)];...",shape=box];
	13805652 -> _JOIN_13805653;
	_JOIN_13803879 [label="_JOIN_13803879None...",shape=box];
	_JOIN_13803879 -> 13803911;
	ForLoop13812669 [label="ForLoop13812669  for (j=jj; j<=cbv_37; j=j+21) {...",shape=box];
	ForLoop13812669 -> 13811947;
	ForLoop13812669 -> _JOIN_13812669;
	ForLoop13815330 [label="ForLoop13815330  for (j=jj; j<=cbv_46; j=j+21) {...",shape=box];
	ForLoop13815330 -> 13814608;
	ForLoop13815330 -> _JOIN_13815330;
	13816382 [label="13816382  tmp[(i+17)]=tmp[(i+17)]+A[(i+17)*ny+j]*x_copy[(j-jj)];...",shape=box];
	13805738 [label="13805738  tmp[(i+5)]=tmp[(i+5)]+A[(i+5)*ny+j]*x_copy[(j-jj)];...",shape=box];
	13819930 [label="13819930  tmp[(i+21)]=tmp[(i+21)]+A[(i+21)*ny+j]*x_copy[(j-jj)];...",shape=box];
	13810120 [label="13810120  for (j=jj; j<=min(ny-1,jj+63); j=j+1) ...",shape=box];
	13826940 [label="13826940  tmp[(i+28)]=tmp[(i+28)]+A[(i+28)*ny+j]*x_copy[(j-jj)];...",shape=box];
	13826940 -> _JOIN_13826941;
	13802137 [label="13802137  for (j=jj; j<=min(ny-1,jj+63); j=j+1) ...",shape=box];
	ForLoop13802105 [label="ForLoop13802105  for (j=cbv_2; j<=cbv_3; j=j+1) ...",shape=box];
	ForLoop13802105 -> 13802104;
	ForLoop13802105 -> _JOIN_13802105;
	_JOIN_13806540 [label="_JOIN_13806540None...",shape=box];
	_JOIN_13806540 -> 13806572;
	ForLoop13810008 [label="ForLoop13810008  for (j=jj; j<=cbv_28; j=j+21) {...",shape=box];
	ForLoop13810008 -> 13809286;
	ForLoop13810008 -> _JOIN_13810008;
	_JOIN_13814523 [label="_JOIN_13814523None...",shape=box];
	_JOIN_13814523 -> 13814555;
	13807459 [label="13807459  for (j=jj; j<=min(ny-1,jj+63); j=j+1) ...",shape=box];
	ForLoop13812749 [label="ForLoop13812749  for (j=cbv_38; j<=cbv_39; j=j+1) ...",shape=box];
	ForLoop13812749 -> 13812748;
	ForLoop13812749 -> _JOIN_13812749;
	13838293 [label="13838293  for (k=kk; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	_JOIN_13809201 [label="_JOIN_13809201None...",shape=box];
	_JOIN_13809201 -> 13809233;
	13807512 [label="13807512  tmp[(i+7)]=tmp[(i+7)]+A[(i+7)*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop13806460 [label="ForLoop13806460  for (j=jj; j<=cbv_16; j=j+21) {...",shape=box];
	ForLoop13806460 -> 13805738;
	ForLoop13806460 -> _JOIN_13806460;
	13813635 [label="13813635  tmp[(i+13)]=tmp[(i+13)]+A[(i+13)*ny+j]*x_copy[(j-jj)];...",shape=box];
	13813635 -> _JOIN_13813636;
	13936962 [label="13936962  register int cbv_77, cbv_78;...",shape=box];
	13824312 [label="13824312  for (j=jj; j<=min(ny-1,jj+63); j=j+1) ...",shape=box];
	13926054 [label="13926054  register int cbv_41, cbv_42;...",shape=box];
	13916055 [label="13916055  register int cbv_8, cbv_9;...",shape=box];
	13801134 [label="13801134  tmp[i]=0;...",shape=box];
	13823425 [label="13823425  for (j=jj; j<=min(ny-1,jj+63); j=j+1) ...",shape=box];
	ForLoop13817104 [label="ForLoop13817104  for (j=jj; j<=cbv_52; j=j+21) {...",shape=box];
	ForLoop13817104 -> 13816382;
	ForLoop13817104 -> _JOIN_13817104;
	_JOIN_13822506 [label="_JOIN_13822506None...",shape=box];
	_JOIN_13822506 -> 13822538;
	_JOIN_13818958 [label="_JOIN_13818958None...",shape=box];
	_JOIN_13818958 -> 13818990;
	13819877 [label="13819877  for (j=jj; j<=min(ny-1,jj+63); j=j+1) ...",shape=box];
	_JOIN_13825167 [label="_JOIN_13825167None...",shape=box];
	_JOIN_13825167 -> 13825199;
	ForLoop13836492 [label="ForLoop13836492  for (kt=kk; kt<=cbv_88; kt=kt+8) {...",shape=box];
	ForLoop13836492 -> 13827922;
	ForLoop13836492 -> _JOIN_13836492;
	_JOIN_13815330 [label="_JOIN_13815330None...",shape=box];
	_JOIN_13815330 -> 13927872;
	13817183 [label="13817183  tmp[(i+17)]=tmp[(i+17)]+A[(i+17)*ny+j]*x_copy[(j-jj)];...",shape=box];
	13817183 -> _JOIN_13817184;
	13822591 [label="13822591  tmp[(i+24)]=tmp[(i+24)]+A[(i+24)*ny+j]*x_copy[(j-jj)];...",shape=box];
	13825166 [label="13825166  tmp[(i+26)]=tmp[(i+26)]+A[(i+26)*ny+j]*x_copy[(j-jj)];...",shape=box];
	13825166 -> _JOIN_13825167;
	13934235 [label="13934235  register int cbv_68, cbv_69;...",shape=box];
	ForLoop13817184 [label="ForLoop13817184  for (j=cbv_53; j<=cbv_54; j=j+1) ...",shape=box];
	ForLoop13817184 -> 13817183;
	ForLoop13817184 -> _JOIN_13817184;
	ForLoop13818071 [label="ForLoop13818071  for (j=cbv_56; j<=cbv_57; j=j+1) ...",shape=box];
	ForLoop13818071 -> 13818070;
	ForLoop13818071 -> _JOIN_13818071;
	ForLoop13817991 [label="ForLoop13817991  for (j=jj; j<=cbv_55; j=j+21) {...",shape=box];
	ForLoop13817991 -> 13817269;
	ForLoop13817991 -> _JOIN_13817991;
	13836523 [label="13836523  for (k=kk; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	13826086 [label="13826086  for (j=jj; j<=min(ny-1,jj+63); j=j+1) ...",shape=box];
	_JOIN_13804766 [label="_JOIN_13804766None...",shape=box];
	_JOIN_13804766 -> 13804798;
	_JOIN_13810975 [label="_JOIN_13810975None...",shape=box];
	_JOIN_13810975 -> 13811007;
	_JOIN_13838619 [label="_JOIN_13838619None...",shape=box];
	_JOIN_13838619 -> _JOIN_13838620;
	13922418 [label="13922418  register int cbv_29, cbv_30;...",shape=box];
	13803964 [label="13803964  tmp[(i+3)]=tmp[(i+3)]+A[(i+3)*ny+j]*x_copy[(j-jj)];...",shape=box];
	13930599 [label="13930599  register int cbv_56, cbv_57;...",shape=box];
	13936053 [label="13936053  register int cbv_74, cbv_75;...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 13710364;
	13818957 [label="13818957  tmp[(i+19)]=tmp[(i+19)]+A[(i+19)*ny+j]*x_copy[(j-jj)];...",shape=box];
	13818957 -> _JOIN_13818958;
	ForLoop13807347 [label="ForLoop13807347  for (j=jj; j<=cbv_19; j=j+21) {...",shape=box];
	ForLoop13807347 -> 13806625;
	ForLoop13807347 -> _JOIN_13807347;
	13814608 [label="13814608  tmp[(i+15)]=tmp[(i+15)]+A[(i+15)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_13812749 [label="_JOIN_13812749None...",shape=box];
	_JOIN_13812749 -> 13812781;
	ForLoop13814523 [label="ForLoop13814523  for (j=cbv_44; j<=cbv_45; j=j+1) ...",shape=box];
	ForLoop13814523 -> 13814522;
	ForLoop13814523 -> _JOIN_13814523;
	_JOIN_13804686 [label="_JOIN_13804686None...",shape=box];
	_JOIN_13804686 -> 13916964;
	ForLoop13710972 [label="ForLoop13710972  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop13710972 -> 13710971;
	ForLoop13710972 -> _JOIN_13710972;
	13837570 [label="13837570  for (j=jj; j<=min(ny-1,jj+63); j=j+1) ...",shape=box];
	_JOIN_13825974 [label="_JOIN_13825974None...",shape=box];
	_JOIN_13825974 -> 13938780;
	13931508 [label="13931508  register int cbv_59, cbv_60;...",shape=box];
	13820764 [label="13820764  for (j=jj; j<=min(ny-1,jj+63); j=j+1) ...",shape=box];
	_JOIN_13813636 [label="_JOIN_13813636None...",shape=box];
	_JOIN_13813636 -> 13813668;
	ForLoop13808314 [label="ForLoop13808314  for (j=cbv_23; j<=cbv_24; j=j+1) ...",shape=box];
	ForLoop13808314 -> 13808313;
	ForLoop13808314 -> _JOIN_13808314;
	_JOIN_13826944 [label="_JOIN_13826944None...",shape=box];
	_JOIN_13826944 -> _JOIN_13826946;
	13920600 [label="13920600  register int cbv_23, cbv_24;...",shape=box];
	13710721 [label="13710721  y[i]=0.0;...",shape=box];
	13818156 [label="13818156  tmp[(i+19)]=tmp[(i+19)]+A[(i+19)*ny+j]*x_copy[(j-jj)];...",shape=box];
	13938780 [label="13938780  register int cbv_83, cbv_84;...",shape=box];
	ForLoop13838156 [label="ForLoop13838156  for (j=jj; j<=cbv_89; j=j+21) {...",shape=box];
	ForLoop13838156 -> 13837614;
	ForLoop13838156 -> _JOIN_13838156;
	13803077 [label="13803077  tmp[(i+2)]=tmp[(i+2)]+A[(i+2)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_13826861 [label="_JOIN_13826861None...",shape=box];
	_JOIN_13826861 -> 13939689;
	ForLoop13814443 [label="ForLoop13814443  for (j=jj; j<=cbv_43; j=j+21) {...",shape=box];
	ForLoop13814443 -> 13813721;
	ForLoop13814443 -> _JOIN_13814443;
	ForLoop13810088 [label="ForLoop13810088  for (j=cbv_29; j<=cbv_30; j=j+1) ...",shape=box];
	ForLoop13810088 -> 13810087;
	ForLoop13810088 -> _JOIN_13810088;
	_JOIN_13826941 [label="_JOIN_13826941None...",shape=box];
	_JOIN_13826941 -> _JOIN_13826944;
	13819043 [label="13819043  tmp[(i+20)]=tmp[(i+20)]+A[(i+20)*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop13811862 [label="ForLoop13811862  for (j=cbv_35; j<=cbv_36; j=j+1) ...",shape=box];
	ForLoop13811862 -> 13811861;
	ForLoop13811862 -> _JOIN_13811862;
	_JOIN_13838586 [label="_JOIN_13838586None...",shape=box];
	_JOIN_13838586 -> 13838617;
	13932417 [label="13932417  register int cbv_62, cbv_63;...",shape=box];
	_JOIN_13826946 [label="_JOIN_13826946None...",shape=box];
	_JOIN_13826946 -> ForLoop13837395;
	_JOIN_13714606 [label="_JOIN_13714606None...",shape=box];
	_JOIN_13714606 -> _JOIN_13714607;
	13803878 [label="13803878  tmp[(i+2)]=tmp[(i+2)]+A[(i+2)*ny+j]*x_copy[(j-jj)];...",shape=box];
	13803878 -> _JOIN_13803879;
	_JOIN_13714607 [label="_JOIN_13714607None...",shape=box];
	ForLoop13823313 [label="ForLoop13823313  for (j=jj; j<=cbv_73; j=j+21) {...",shape=box];
	ForLoop13823313 -> 13822591;
	ForLoop13823313 -> _JOIN_13823313;
	ForLoop13826941 [label="ForLoop13826941  for (j=cbv_86; j<=cbv_87; j=j+1) ...",shape=box];
	ForLoop13826941 -> 13826940;
	ForLoop13826941 -> _JOIN_13826941;
	13918782 [label="13918782  register int cbv_17, cbv_18;...",shape=box];
	_JOIN_13803799 [label="_JOIN_13803799None...",shape=box];
	_JOIN_13803799 -> 13916055;
	13815409 [label="13815409  tmp[(i+15)]=tmp[(i+15)]+A[(i+15)*ny+j]*x_copy[(j-jj)];...",shape=box];
	13815409 -> _JOIN_13815410;
	ForLoop13821619 [label="ForLoop13821619  for (j=cbv_68; j<=cbv_69; j=j+1) ...",shape=box];
	ForLoop13821619 -> 13821618;
	ForLoop13821619 -> _JOIN_13821619;
	13822505 [label="13822505  tmp[(i+23)]=tmp[(i+23)]+A[(i+23)*ny+j]*x_copy[(j-jj)];...",shape=box];
	13822505 -> _JOIN_13822506;
	13819844 [label="13819844  tmp[(i+20)]=tmp[(i+20)]+A[(i+20)*ny+j]*x_copy[(j-jj)];...",shape=box];
	13819844 -> _JOIN_13819845;
	_JOIN_13819845 [label="_JOIN_13819845None...",shape=box];
	_JOIN_13819845 -> 13819877;
	_JOIN_13808314 [label="_JOIN_13808314None...",shape=box];
	_JOIN_13808314 -> 13808346;
	ForLoop13816297 [label="ForLoop13816297  for (j=cbv_50; j<=cbv_51; j=j+1) ...",shape=box];
	ForLoop13816297 -> 13816296;
	ForLoop13816297 -> _JOIN_13816297;
	13801448 [label="13801448  for (j=jj; j<=min(ny-1,jj+63); j=j+1) ...",shape=box];
	_JOIN_13818071 [label="_JOIN_13818071None...",shape=box];
	_JOIN_13818071 -> 13818103;
	ForLoop13823393 [label="ForLoop13823393  for (j=cbv_74; j<=cbv_75; j=j+1) ...",shape=box];
	ForLoop13823393 -> 13823392;
	ForLoop13823393 -> _JOIN_13823393;
	_JOIN_13820652 [label="_JOIN_13820652None...",shape=box];
	_JOIN_13820652 -> 13933326;
	ForLoop13838620 [label="ForLoop13838620  for (kkk=0; kkk<=ny-1; kkk=kkk+256) ...",shape=box];
	ForLoop13838620 -> ForLoop13838619;
	ForLoop13838620 -> _JOIN_13838620;
	ForLoop13803879 [label="ForLoop13803879  for (j=cbv_8; j<=cbv_9; j=j+1) ...",shape=box];
	ForLoop13803879 -> 13803878;
	ForLoop13803879 -> _JOIN_13803879;
	13824279 [label="13824279  tmp[(i+25)]=tmp[(i+25)]+A[(i+25)*ny+j]*x_copy[(j-jj)];...",shape=box];
	13824279 -> _JOIN_13824280;
	13710971 [label="13710971  y[i]=0.0;...",shape=box];
	13710971 -> _JOIN_13710972;
	13820817 [label="13820817  tmp[(i+22)]=tmp[(i+22)]+A[(i+22)*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop13826054 [label="ForLoop13826054  for (j=cbv_83; j<=cbv_84; j=j+1) ...",shape=box];
	ForLoop13826054 -> 13826053;
	ForLoop13826054 -> _JOIN_13826054;
	ForLoop13824200 [label="ForLoop13824200  for (j=jj; j<=cbv_76; j=j+21) {...",shape=box];
	ForLoop13824200 -> 13823478;
	ForLoop13824200 -> _JOIN_13824200;
	_JOIN_13823393 [label="_JOIN_13823393None...",shape=box];
	_JOIN_13823393 -> 13823425;
	13812834 [label="13812834  tmp[(i+13)]=tmp[(i+13)]+A[(i+13)*ny+j]*x_copy[(j-jj)];...",shape=box];
	13818103 [label="13818103  for (j=jj; j<=min(ny-1,jj+63); j=j+1) ...",shape=box];
	13924236 [label="13924236  register int cbv_35, cbv_36;...",shape=box];
	13710364 [label="13710364  int i;...",shape=box];
	_JOIN_13802034 [label="_JOIN_13802034None...",shape=box];
	_JOIN_13802034 -> 13914237;
	ForLoop13805573 [label="ForLoop13805573  for (j=jj; j<=cbv_13; j=j+21) {...",shape=box];
	ForLoop13805573 -> 13804851;
	ForLoop13805573 -> _JOIN_13805573;
	_JOIN_13811782 [label="_JOIN_13811782None...",shape=box];
	_JOIN_13811782 -> 13924236;
	13933326 [label="13933326  register int cbv_65, cbv_66;...",shape=box];
	ForLoop13838231 [label="ForLoop13838231  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) ...",shape=box];
	ForLoop13838231 -> ForLoop13838230;
	ForLoop13838231 -> _JOIN_13838231;
	ForLoop13815410 [label="ForLoop13815410  for (j=cbv_47; j<=cbv_48; j=j+1) ...",shape=box];
	ForLoop13815410 -> 13815409;
	ForLoop13815410 -> _JOIN_13815410;
	_JOIN_13814443 [label="_JOIN_13814443None...",shape=box];
	_JOIN_13814443 -> 13926963;
	13916964 [label="13916964  register int cbv_11, cbv_12;...",shape=box];
	_JOIN_13809121 [label="_JOIN_13809121None...",shape=box];
	_JOIN_13809121 -> 13921509;
	ForLoop13802034 [label="ForLoop13802034  for (j=jj; j<=cbv_1; j=j+21) {...",shape=box];
	ForLoop13802034 -> 13801492;
	ForLoop13802034 -> _JOIN_13802034;
	13919691 [label="13919691  register int cbv_20, cbv_21;...",shape=box];
	_JOIN_13813556 [label="_JOIN_13813556None...",shape=box];
	_JOIN_13813556 -> 13926054;
	_JOIN_13805653 [label="_JOIN_13805653None...",shape=box];
	_JOIN_13805653 -> 13805685;
	_JOIN_13821619 [label="_JOIN_13821619None...",shape=box];
	_JOIN_13821619 -> 13821651;
	ForLoop13809201 [label="ForLoop13809201  for (j=cbv_26; j<=cbv_27; j=j+1) ...",shape=box];
	ForLoop13809201 -> 13809200;
	ForLoop13809201 -> _JOIN_13809201;
	13815495 [label="13815495  tmp[(i+16)]=tmp[(i+16)]+A[(i+16)*ny+j]*x_copy[(j-jj)];...",shape=box];
	13807426 [label="13807426  tmp[(i+6)]=tmp[(i+6)]+A[(i+6)*ny+j]*x_copy[(j-jj)];...",shape=box];
	13807426 -> _JOIN_13807427;
	13937871 [label="13937871  register int cbv_80, cbv_81;...",shape=box];
	13823478 [label="13823478  tmp[(i+25)]=tmp[(i+25)]+A[(i+25)*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop13816217 [label="ForLoop13816217  for (j=jj; j<=cbv_49; j=j+21) {...",shape=box];
	ForLoop13816217 -> 13815495;
	ForLoop13816217 -> _JOIN_13816217;
	13838617 [label="13838617  for (k=kk; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	13838617 -> _JOIN_13838619;
	13812748 [label="13812748  tmp[(i+12)]=tmp[(i+12)]+A[(i+12)*ny+j]*x_copy[(j-jj)];...",shape=box];
	13812748 -> _JOIN_13812749;
	ForLoop13809121 [label="ForLoop13809121  for (j=jj; j<=cbv_25; j=j+21) {...",shape=box];
	ForLoop13809121 -> 13808399;
	ForLoop13809121 -> _JOIN_13809121;
	13921509 [label="13921509  register int cbv_26, cbv_27;...",shape=box];
	_JOIN_13808234 [label="_JOIN_13808234None...",shape=box];
	_JOIN_13808234 -> 13920600;
	ForLoop13838586 [label="ForLoop13838586  for (kt=kk; kt<=cbv_92; kt=kt+8) {...",shape=box];
	ForLoop13838586 -> 13838339;
	ForLoop13838586 -> _JOIN_13838586;
	13923327 [label="13923327  register int cbv_32, cbv_33;...",shape=box];
	ForLoop13808234 [label="ForLoop13808234  for (j=jj; j<=cbv_22; j=j+21) {...",shape=box];
	ForLoop13808234 -> 13807512;
	ForLoop13808234 -> _JOIN_13808234;
	ForLoop13837393 [label="ForLoop13837393  for (kk=kkk; kk<=min(ny-1,kkk+128); kk=kk+128) {...",shape=box];
	ForLoop13837393 -> 13827008;
	ForLoop13837393 -> _JOIN_13837393;
	13825199 [label="13825199  for (j=jj; j<=min(ny-1,jj+63); j=j+1) ...",shape=box];
	13818070 [label="13818070  tmp[(i+18)]=tmp[(i+18)]+A[(i+18)*ny+j]*x_copy[(j-jj)];...",shape=box];
	13818070 -> _JOIN_13818071;
	ForLoop13837397 [label="ForLoop13837397  for (i=ii; i<=min(nx-1,ii+511)-28; i=i+29) {...",shape=box];
	ForLoop13837397 -> 13801134;
	ForLoop13837397 -> _JOIN_13837397;
	13824365 [label="13824365  tmp[(i+26)]=tmp[(i+26)]+A[(i+26)*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop13837395 [label="ForLoop13837395  for (kkk=0; kkk<=ny-1; kkk=kkk+256) {...",shape=box];
	ForLoop13837395 -> ForLoop13837393;
	ForLoop13837395 -> _JOIN_13837395;
	13821618 [label="13821618  tmp[(i+22)]=tmp[(i+22)]+A[(i+22)*ny+j]*x_copy[(j-jj)];...",shape=box];
	13821618 -> _JOIN_13821619;
	ForLoop13820732 [label="ForLoop13820732  for (j=cbv_65; j<=cbv_66; j=j+1) ...",shape=box];
	ForLoop13820732 -> 13820731;
	ForLoop13820732 -> _JOIN_13820732;
	ForLoop13804686 [label="ForLoop13804686  for (j=jj; j<=cbv_10; j=j+21) {...",shape=box];
	ForLoop13804686 -> 13803964;
	ForLoop13804686 -> _JOIN_13804686;
	_JOIN_13820732 [label="_JOIN_13820732None...",shape=box];
	_JOIN_13820732 -> 13820764;
	_JOIN_13824280 [label="_JOIN_13824280None...",shape=box];
	_JOIN_13824280 -> 13824312;
	13808346 [label="13808346  for (j=jj; j<=min(ny-1,jj+63); j=j+1) ...",shape=box];
	13817216 [label="13817216  for (j=jj; j<=min(ny-1,jj+63); j=j+1) ...",shape=box];
	_JOIN_13821539 [label="_JOIN_13821539None...",shape=box];
	_JOIN_13821539 -> 13934235;
	_JOIN_13807347 [label="_JOIN_13807347None...",shape=box];
	_JOIN_13807347 -> 13919691;
	13926963 [label="13926963  register int cbv_44, cbv_45;...",shape=box];
	13838339 [label="13838339  y_copy[(kt-kk)]=y_copy[(kt-kk)]+A[i*ny+kt]*tmp[i];...",shape=box];
	13827008 [label="13827008  for (k=kk; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	13813668 [label="13813668  for (j=jj; j<=min(ny-1,jj+63); j=j+1) ...",shape=box];
	_JOIN_13806460 [label="_JOIN_13806460None...",shape=box];
	_JOIN_13806460 -> 13918782;
	ForLoop13821539 [label="ForLoop13821539  for (j=jj; j<=cbv_67; j=j+21) {...",shape=box];
	ForLoop13821539 -> 13820817;
	ForLoop13821539 -> _JOIN_13821539;
	ForLoop13810895 [label="ForLoop13810895  for (j=jj; j<=cbv_31; j=j+21) {...",shape=box];
	ForLoop13810895 -> 13810173;
	ForLoop13810895 -> _JOIN_13810895;
	ForLoop13807427 [label="ForLoop13807427  for (j=cbv_20; j<=cbv_21; j=j+1) ...",shape=box];
	ForLoop13807427 -> 13807426;
	ForLoop13807427 -> _JOIN_13807427;
	13811007 [label="13811007  for (j=jj; j<=min(ny-1,jj+63); j=j+1) ...",shape=box];
	13803911 [label="13803911  for (j=jj; j<=min(ny-1,jj+63); j=j+1) ...",shape=box];
	13927872 [label="13927872  register int cbv_47, cbv_48;...",shape=box];
	13814522 [label="13814522  tmp[(i+14)]=tmp[(i+14)]+A[(i+14)*ny+j]*x_copy[(j-jj)];...",shape=box];
	13814522 -> _JOIN_13814523;
	13820731 [label="13820731  tmp[(i+21)]=tmp[(i+21)]+A[(i+21)*ny+j]*x_copy[(j-jj)];...",shape=box];
	13820731 -> _JOIN_13820732;
	_JOIN_13802992 [label="_JOIN_13802992None...",shape=box];
	_JOIN_13802992 -> 1380expected=9369846271501.798828
actual=9369846271501.798828
3024;
	ForLoop13806540 [label="ForLoop13806540  for (j=cbv_17; j<=cbv_18; j=j+1) ...",shape=box];
	ForLoop13806540 -> 13806539;
	ForLoop13806540 -> _JOIN_13806540;
	13813721 [label="13813721  tmp[(i+14)]=tmp[(i+14)]+A[(i+14)*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop13825087 [label="ForLoop13825087  for (j=jj; j<=cbv_79; j=j+21) {...",shape=box];
	ForLoop13825087 -> 13824365;
	ForLoop13825087 -> _JOIN_13825087;
	_JOIN_13810895 [label="_JOIN_13810895None...",shape=box];
	_JOIN_13810895 -> 13923327;
	13816296 [label="13816296  tmp[(i+16)]=tmp[(i+16)]+A[(i+16)*ny+j]*x_copy[(j-jj)];...",shape=box];
	13816296 -> _JOIN_13816297;
	13805685 [label="13805685  for (j=jj; j<=min(ny-1,jj+63); j=j+1) ...",shape=box];
	13740090 [label="13740090  int i;...",shape=box];
	13740090 -> ForLoop13837397;
	ForLoop13804766 [label="ForLoop13804766  for (j=cbv_11; j<=cbv_12; j=j+1) ...",shape=box];
	ForLoop13804766 -> 13804765;
	ForLoop13804766 -> _JOIN_13804766;
	13917873 [label="13917873  register int cbv_14, cbv_15;...",shape=box];
	13928781 [label="13928781  register int cbv_50, cbv_51;...",shape=box];
	_JOIN_13807427 [label="_JOIN_13807427None...",shape=box];
	_JOIN_13807427 -> 13807459;
	_JOIN_13812669 [label="_JOIN_13812669None...",shape=box];
	_JOIN_13812669 -> 13925145;
	13711202 [label="13711202  register int cbv_2, cbv_3;...",shape=box];
	13806572 [label="13806572  for (j=jj; j<=min(ny-1,jj+63); j=j+1) ...",shape=box];
	13837508 [label="13837508  tmp[i]=0;...",shape=box];
	13837508 -> ForLoop13838231;
	13721504 [label="13721504  double x_copy[64];...",shape=box];
	_JOIN_13802912 [label="_JOIN_13802912None...",shape=box];
	_JOIN_13802912 -> 13915146;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest64.exe __orio_perftest64.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest64.exe  
{'[6, 3, 4, 6, 6, 3, 1, 1, 20, 28, 20, 0, 0, 0, 1, 0, 1, 1]' : 0.262256}
{'[6, 3, 4, 6, 6, 3, 1, 1, 20, 28, 20, 0, 0, 0, 1, 0, 1, 1]' : 0.266074}
{'[6, 3, 4, 6, 6, 3, 1, 1, 20, 28, 20, 0, 0, 0, 1, 0, 1, 1]' : 0.263005}
{'[6, 3, 4, 6, 6, 3, 1, 1, 20, 28, 20, 0, 0, 0, 1, 0, 1, 1]' : 0.260141}
{'[6, 3, 4, 6, 6, 3, 1, 1, 20, 28, 20, 0, 0, 0, 1, 0, 1, 1]' : 0.260712}
{'[6, 3, 4, 6, 6, 3, 1, 1, 20, 28, 20, 0, 0, 0, 1, 0, 1, 1]' : 0.25793}
{'[6, 3, 4, 6, 6, 3, 1, 1, 20, 28, 20, 0, 0, 0, 1, 0, 1, 1]' : 0.260629}
{'[6, 3, 4, 6, 6, 3, 1, 1, 20, 28, 20, 0, 0, 0, 1, 0, 1, 1]' : 0.26043}
{'[6, 3, 4, 6, 6, 3, 1, 1, 20, 28, 20, 0, 0, 0, 1, 0, 1, 1]' : 0.260826}
{'[6, 3, 4, 6, 6, 3, 1, 1, 20, 28, 20, 0, 0, 0, 1, 0, 1, 1]' : 0.262188}
{'[6, 3, 4, 6, 6, 3, 1, 1, 20, 28, 20, 0, 0, 0, 1, 0, 1, 1]' : 0.259461}
{'[6, 3, 4, 6, 6, 3, 1, 1, 20, 28, 20, 0, 0, 0, 1, 0, 1, 1]' : 0.264591}
{'[6, 3, 4, 6, 6, 3, 1, 1, 20, 28, 20, 0, 0, 0, 1, 0, 1, 1]' : 0.263643}
{'[6, 3, 4, 6, 6, 3, 1, 1, 20, 28, 20, 0, 0, 0, 1, 0, 1, 1]' : 0.265241}
{'[6, 3, 4, 6, 6, 3, 1, 1, 20, 28, 20, 0, 0, 0, 1, 0, 1, 1]' : 0.266202}
{'[6, 3, 4, 6, 6, 3, 1, 1, 20, 28, 20, 0, 0, 0, 1, 0, 1, 1]' : 0.261012}
{'[6, 3, 4, 6, 6, 3, 1, 1, 20, 28, 20, 0, 0, 0, 1, 0, 1, 1]' : 0.262769}
{'[6, 3, 4, 6, 6, 3, 1, 1, 20, 28, 20, 0, 0, 0, 1, 0, 1, 1]' : 0.264186}
{'[6, 3, 4, 6, 6, 3, 1, 1, 20, 28, 20, 0, 0, 0, 1, 0, 1, 1]' : 0.260808}
{'[6, 3, 4, 6, 6, 3, 1, 1, 20, 28, 20, 0, 0, 0, 1, 0, 1, 1]' : 0.262057}
{'[6, 3, 4, 6, 6, 3, 1, 1, 20, 28, 20, 0, 0, 0, 1, 0, 1, 1]' : 0.260218}
{'[6, 3, 4, 6, 6, 3, 1, 1, 20, 28, 20, 0, 0, 0, 1, 0, 1, 1]' : 0.259345}
{'[6, 3, 4, 6, 6, 3, 1, 1, 20, 28, 20, 0, 0, 0, 1, 0, 1, 1]' : 0.261407}
{'[6, 3, 4, 6, 6, 3, 1, 1, 20, 28, 20, 0, 0, 0, 1, 0, 1, 1]' : 0.260635}
{'[6, 3, 4, 6, 6, 3, 1, 1, 20, 28, 20, 0, 0, 0, 1, 0, 1, 1]' : 0.26203}
{'[6, 3, 4, 6, 6, 3, 1, 1, 20, 28, 20, 0, 0, 0, 1, 0, 1, 1]' : 0.262063}
{'[6, 3, 4, 6, 6, 3, 1, 1, 20, 28, 20, 0, 0, 0, 1, 0, 1, 1]' : 0.265061}
{'[6, 3, 4, 6, 6, 3, 1, 1, 20, 28, 20, 0, 0, 0, 1, 0, 1, 1]' : 0.259651}
{'[6, 3, 4, 6, 6, 3, 1, 1, 20, 28, 20, 0, 0, 0, 1, 0, 1, 1]' : 0.260883}
{'[6, 3, 4, 6, 6, 3, 1, 1, 20, 28, 20, 0, 0, 0, 1, 0, 1, 1]' : 0.264923}

out:
 ["{'[6, 3, 4, 6, 6, 3, 1, 1, 20, 28, 20, 0, 0, 0, 1, 0, 1, 1]' : 0.262256}", "{'[6, 3, 4, 6, 6, 3, 1, 1, 20, 28, 20, 0, 0, 0, 1, 0, 1, 1]' : 0.266074}", "{'[6, 3, 4, 6, 6, 3, 1, 1, 20, 28, 20, 0, 0, 0, 1, 0, 1, 1]' : 0.263005}", "{'[6, 3, 4, 6, 6, 3, 1, 1, 20, 28, 20, 0, 0, 0, 1, 0, 1, 1]' : 0.260141}", "{'[6, 3, 4, 6, 6, 3, 1, 1, 20, 28, 20, 0, 0, 0, 1, 0, 1, 1]' : 0.260712}", "{'[6, 3, 4, 6, 6, 3, 1, 1, 20, 28, 20, 0, 0, 0, 1, 0, 1, 1]' : 0.25793}", "{'[6, 3, 4, 6, 6, 3, 1, 1, 20, 28, 20, 0, 0, 0, 1, 0, 1, 1]' : 0.260629}", "{'[6, 3, 4, 6, 6, 3, 1, 1, 20, 28, 20, 0, 0, 0, 1, 0, 1, 1]' : 0.26043}", "{'[6, 3, 4, 6, 6, 3, 1, 1, 20, 28, 20, 0, 0, 0, 1, 0, 1, 1]' : 0.260826}", "{'[6, 3, 4, 6, 6, 3, 1, 1, 20, 28, 20, 0, 0, 0, 1, 0, 1, 1]' : 0.262188}", "{'[6, 3, 4, 6, 6, 3, 1, 1, 20, 28, 20, 0, 0, 0, 1, 0, 1, 1]' : 0.259461}", "{'[6, 3, 4, 6, 6, 3, 1, 1, 20, 28, 20, 0, 0, 0, 1, 0, 1, 1]' : 0.264591}", "{'[6, 3, 4, 6, 6, 3, 1, 1, 20, 28, 20, 0, 0, 0, 1, 0, 1, 1]' : 0.263643}", "{'[6, 3, 4, 6, 6, 3, 1, 1, 20, 28, 20, 0, 0, 0, 1, 0, 1, 1]' : 0.265241}", "{'[6, 3, 4, 6, 6, 3, 1, 1, 20, 28, 20, 0, 0, 0, 1, 0, 1, 1]' : 0.266202}", "{'[6, 3, 4, 6, 6, 3, 1, 1, 20, 28, 20, 0, 0, 0, 1, 0, 1, 1]' : 0.261012}", "{'[6, 3, 4, 6, 6, 3, 1, 1, 20, 28, 20, 0, 0, 0, 1, 0, 1, 1]' : 0.262769}", "{'[6, 3, 4, 6, 6, 3, 1, 1, 20, 28, 20, 0, 0, 0, 1, 0, 1, 1]' : 0.264186}", "{'[6, 3, 4, 6, 6, 3, 1, 1, 20, 28, 20, 0, 0, 0, 1, 0, 1, 1]' : 0.260808}", "{'[6, 3, 4, 6, 6, 3, 1, 1, 20, 28, 20, 0, 0, 0, 1, 0, 1, 1]' : 0.262057}", "{'[6, 3, 4, 6, 6, 3, 1, 1, 20, 28, 20, 0, 0, 0, 1, 0, 1, 1]' : 0.260218}", "{'[6, 3, 4, 6, 6, 3, 1, 1, 20, 28, 20, 0, 0, 0, 1, 0, 1, 1]' : 0.259345}", "{'[6, 3, 4, 6, 6, 3, 1, 1, 20, 28, 20, 0, 0, 0, 1, 0, 1, 1]' : 0.261407}", "{'[6, 3, 4, 6, 6, 3, 1, 1, 20, 28, 20, 0, 0, 0, 1, 0, 1, 1]' : 0.260635}", "{'[6, 3, 4, 6, 6, 3, 1, 1, 20, 28, 20, 0, 0, 0, 1, 0, 1, 1]' : 0.26203}", "{'[6, 3, 4, 6, 6, 3, 1, 1, 20, 28, 20, 0, 0, 0, 1, 0, 1, 1]' : 0.262063}", "{'[6, 3, 4, 6, 6, 3, 1, 1, 20, 28, 20, 0, 0, 0, 1, 0, 1, 1]' : 0.265061}", "{'[6, 3, 4, 6, 6, 3, 1, 1, 20, 28, 20, 0, 0, 0, 1, 0, 1, 1]' : 0.259651}", "{'[6, 3, 4, 6, 6, 3, 1, 1, 20, 28, 20, 0, 0, 0, 1, 0, 1, 1]' : 0.260883}", "{'[6, 3, 4, 6, 6, 3, 1, 1, 20, 28, 20, 0, 0, 0, 1, 0, 1, 1]' : 0.264923}"]
returning from 'run': {'[6, 3, 4, 6, 6, 3, 1, 1, 20, 28, 20, 0, 0, 0, 1, 0, 1, 1]': ([0.262256, 0.266074, 0.263005, 0.260141, 0.260712, 0.25793, 0.260629, 0.26043, 0.260826, 0.262188, 0.259461, 0.264591, 0.263643, 0.265241, 0.266202, 0.261012, 0.262769, 0.264186, 0.260808, 0.262057, 0.260218, 0.259345, 0.261407, 0.260635, 0.26203, 0.262063, 0.265061, 0.259651, 0.260883, 0.264923], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.262256, 0.266074, 0.263005, 0.260141, 0.260712, 0.25793, 0.260629, 0.26043, 0.260826, 0.262188, 0.259461, 0.264591, 0.263643, 0.265241, 0.266202, 0.261012, 0.262769, 0.264186, 0.260808, 0.262057, 0.260218, 0.259345, 0.261407, 0.260635, 0.26203, 0.262063, 0.265061, 0.259651, 0.260883, 0.264923], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[6, 3, 4, 6, 6, 3, 1, 1, 20, 28, 20, 0, 0, 0, 1, 0, 1, 1]': ([0.262256, 0.266074, 0.263005, 0.260141, 0.260712, 0.25793, 0.260629, 0.26043, 0.260826, 0.262188, 0.259461, 0.264591, 0.263643, 0.265241, 0.266202, 0.261012, 0.262769, 0.264186, 0.260808, 0.262057, 0.260218, 0.259345, 0.261407, 0.260635, 0.26203, 0.262063, 0.265061, 0.259651, 0.260883, 0.264923], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [2, 1, 6, 5, 6, 1, 0, 19, 22, 0, 11, 1, 1, 0, 1, 0]
Fixed Factors: {'T2_J': 6, 'VEC1': 1}
Testing candidate 27: [2, 1, 6, 5, 6, 6, 1, 0, 19, 22, 0, 11, 1, 1, 0, 1, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	53
        Max loop nest depth: 	6
        Additions: 		2939
        Multiplications: 	1344
        Divisions: 		0
        Logical: 		0
        Reads: 			5779
        Writes: 		1010
        Comparisons:		53
        Gotos: 			0
        
digraph CFG {
	_JOIN_14159226 [label="_JOIN_14159226None...",shape=box];
	_JOIN_14159226 -> ForLoop14159477;
	14159483 [label="14159483  int i;...",shape=box];
	14159483 -> ForLoop14176788;
	14200227 [label="14200227  tmp[it]=scv_22;...",shape=box];
	ForLoop14177153 [label="ForLoop14177153  for (jj=jjj; jj<=min(ny-1,jjj+2032); jj=jj+16) {...",shape=box];
	ForLoop14177153 -> 14176903;
	ForLoop14177153 -> _JOIN_14177153;
	_JOIN_14159477 [label="_JOIN_14159477None...",shape=box];
	_JOIN_14159477 -> _JOIN_14159479;
	14269274 [label="14269274  tmp[i]=scv_87;...",shape=box];
	14269274 -> _JOIN_14177609;
	14234243 [label="14234243  double scv_38, scv_39, scv_40, scv_41, scv_42, scv_43, scv_44, scv_45;...",shape=box];
	ForLoop14177606 [label="ForLoop14177606  for (kk=kkk; kk<=min(ny-1,kkk+1536); kk=kk+512) {...",shape=box];
	ForLoop14177606 -> 14177186;
	ForLoop14177606 -> _JOIN_14177606;
	ForLoop14177536 [label="ForLoop14177536  for (k=kk; k<=min(ny-1,kk+511)-11; k=k+12) {...",shape=box];
	ForLoop14177536 -> 14266911;
	ForLoop14177536 -> _JOIN_14177536;
	_JOIN_14159479 [label="_JOIN_14159479None...",shape=box];
	_JOIN_14159479 -> _JOIN_14159480;
	ForLoop14166935 [label="ForLoop14166935  for (jj=jjj; jj<=min(ny-1,jjj+2032); jj=jj+16) {...",shape=box];
	ForLoop14166935 -> 14159769;
	ForLoop14166935 -> _JOIN_14166935;
	ForLoop14159482 [label="ForLoop14159482  for (it=ii; it<=min(nx-1,ii+31)-7; it=it+8) {...",shape=box];
	ForLoop14159482 -> 14200215;
	ForLoop14159482 -> _JOIN_14159482;
	ForLoop14177613 [label="ForLoop14177613  for (iii=0; iii<=nx-1; iii=iii+1024) {...",shape=box];
	ForLoop14177613 -> ForLoop14177612;
	ForLoop14177613 -> _JOIN_14177613;
	ForLoop14159480 [label="ForLoop14159480  for (kkk=0; kkk<=ny-1; kkk=kkk+2048) {...",shape=box];
	ForLoop14159480 -> ForLoop14159479;
	ForLoop14159480 -> _JOIN_14159480;
	14264302 [label="14264302  tmp[(i+20)]=scv_51;...",shape=box];
	13950700 [label="13950700  register int cbv_2, cbv_3;...",shape=box];
	_JOIN_14177154 [label="_JOIN_14177154None...",shape=box];
	_JOIN_14177154 -> ForLoop14177607;
	_JOIN_14177153 [label="_JOIN_14177153None...",shape=box];
	_JOIN_14177153 -> _JOIN_14177154;
	ForLoop14177604 [label="ForLoop14177604  for (k=(min(ny-1,kk+511))-(((min(ny-1,kk+511))-(kk)+1)%12)+1; k<=min(ny-1,kk+511); k=k+1) {...",shape=box];
	ForLoop14177604 -> 14267229;
	ForLoop14177604 -> _JOIN_14177604;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 13949895;
	ForLoop14177607 [label="ForLoop14177607  for (kkk=0; kkk<=ny-1; kkk=kkk+2048) {...",shape=box];
	ForLoop14177607 -> ForLoop14177606;
	ForLoop14177607 -> _JOIN_14177607;
	14176946 [label="14176946  scv_87=scv_87+A[i*ny+jt]*x_copy[(jt-jj)];...",shape=box];
	_JOIN_14177613 [label="_JOIN_14177613None...",shape=box];
	14180839 [label="14180839  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	ForLoop13950410 [label="ForLoop13950410  for (i=0; i<=cbv_1; i=i+20) {...",shape=box];
	ForLoop13950410 -> 13950237;
	ForLoop13950410 -> _JOIN_13950410;
	_JOIN_14177607 [label="_JOIN_14177607None...",shape=box];
	_JOIN_14177607 -> 14269274;
	ForLoop14177151 [label="ForLoop14177151  for (jt=jj; jt<=min(ny-1,jj+15)-7; jt=jt+8) {...",shape=box];
	ForLoop14177151 -> 14176946;
	ForLoop14177151 -> _JOIN_14177151;
	14269262 [label="14269262  double scv_87;...",shape=box];
	13950478 [label="13950478  y[i]=0.0;...",shape=box];
	13950478 -> _JOIN_13950479;
	ForLoop14177154 [label="ForLoop14177154  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop14177154 -> ForLoop14177153;
	ForLoop14177154 -> _JOIN_14177154;
	14159769 [label="14159769  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	14267229 [label="14267229  double scv_86;...",shape=box];
	ForLoop14159226 [label="ForLoop14159226  for (k=kk; k<=min(ny-1,kk+511)-11; k=k+12) {...",shape=box];
	ForLoop14159226 -> 14189297;
	ForLoop14159226 -> _JOIN_14159226;
	14190036 [label="14190036  double scv_21;...",shape=box];
	14166969 [label="14166969  int k;...",shape=box];
	14156076 [label="14156076  int k;...",shape=box];
	14156076 -> ForLoop14159226;
	14264284 [label="14264284  double scv_51, scv_52, scv_53, scv_54, scv_55, scv_56, scv_57, scv_58;...",shape=box];
	_JOIN_14177604 [label="_JOIN_14177604None...",shape=box];
	_JOIN_14177604 -> _JOIN_14177606;
	_JOIN_14177151 [label="_JOIN_14177151None...",shape=box];
	_JOIN_14177151 -> _JOIN_14177153;
	14209404 [label="14209404  double scv_30, scv_31, scv_32, scv_33, scv_34, scv_35, scv_36, scv_37;...",shape=box];
	ForLoop13950479 [label="ForLoop13950479  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop13950479 -> 13950478;
	ForLoop13950479 -> _JOIN_13950479;
	14266911 [label="14266911  double scv_74, scv_75, scv_76, scv_77, scv_78, scv_79, scv_80, scv_81;...",shape=box];
	_JOIN_14177606 [label="_JOIN_14177606None...",shape=box];
	_JOIN_14177606 -> _JOIN_14177607;
	ForLoop14176788 [label="ForLoop14176788  for (i=it; i<=min(nx-1,ii+31)-22; i=i+23) {...",shape=box];
	ForLoop14176788 -> 14264284;
	ForLoop14176788 -> _JOIN_14176788;
	14176903 [label="14176903  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	14176903 -> ForLoop14177151;
	_JOIN_14156043 [label="_JOIN_14156043None...",shape=box];
	_JOIN_14156043 -> _JOIN_14156044;
	14200215 [label="14200215  double scv_22, scv_23, scv_24, scv_25, scv_26, scv_27, scv_28, scv_29;...",shape=box];
	_JOIN_14156041 [label="_JOIN_14156041None...",shape=box];
	_JOIN_14156041 -> _JOIN_14156043;
	ForLoop14176141 [label="ForLoop14176141  for (k=kk; k<=min(ny-1,kk+511)-11; k=k+12) {...",shape=box];
	ForLoop14176141 -> 14234243;
	ForLoop14176141 -> _JOIN_14176141;
	_JOIN_14156044 [label="_JOIN_14156044None...",shape=box];
	_JOIN_14156044 -> ForLoop14159480;
	14177186 [label="14177186  int k;...",shape=box];
	14177186 -> ForLoop14177536;
	_JOIN_13950410 [label="_JOIN_13950410None...",shape=box];
	_JOIN_13950410 -> 13950700;
	14153587 [label="14153587  double x_copy[16];...",shape=box];
	ForLoop14176786 [label="ForLoop14176786  for (kkk=0; kkk<=ny-1; kkk=kkk+2048) {...",shape=box];
	ForLoop14176786 -> ForLoop14176784;
	ForLoop14176786 -> _JOIN_14176786;
	14153707 [label="14153707  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	14153707 -> ForLoop14156041;
	ForLoop14177612 [label="ForLoop14177612  for (ii=iii; ii<=min(nx-1,iii+992); ii=ii+32) {...",shape=box];
	ForLoop14177612 -> ForLoop14159482;
	ForLoop14177612 -> _JOIN_14177612;
	13950237 [label="13950237  y[i]=0.0;...",shape=box];
	_JOIN_14177536 [label="_JOIN_14177536None...",shape=box];
	_JOIN_14177536 -> ForLoop14177604;
	_JOIN_14176788 [label="_JOIN_14176788None...",shape=box];
	_JOIN_14176788 -> ForLoop14177609;
	_JOIN_13950479 [label="_JOIN_13950479None...",shape=box];
	_JOIN_13950479 -> 14153587;
	_JOIN_14177612 [label="_JOIN_14177612None...",shape=box];
	_JOIN_14177612 -> _JOIN_14177613;
	_JOIN_14177609 [label="_JOIN_14177609None...",shape=box];
	_JOIN_14177609 -> _JOIN_14177612;
	ForLoop14156044 [label="ForLoop14156044  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop14156044 -> ForLoop14156043;
	ForLoop14156044 -> _JOIN_14156044;
	ForLoop14156043 [label="ForLoop14156043  for (jj=jjj; jj<=min(ny-1,jjj+2032); jj=jj+16) {...",shape=box];
	ForLoop14156043 -> 14153707;
	ForLoop14156043 -> _JOIN_14156043;
	ForLoop14156041 [label="ForLoop14156041  for (jt=jj; jt<=min(ny-1,jj+15)-7; jt=jt+8) {...",shape=box];
	ForLoop14156041 -> 14180839;
	ForLoop14156041 -> _JOIN_14156041;
	ForLoop14177609 [label="ForLoop14177609  for (i=(min(nx-1,ii+31))-(((min(nx-1,ii+31))-(it)+1)%23)+1; i<=min(nx-1,ii+31); i=i+1) {...",shape=box];
	ForLoop14177609 -> 14269262;
	ForLoop14177609 -> _JOIN_14177609;
	14235882 [label="14235882  double scv_50;...",shape=box];
	_JOIN_14176784 [label="_JOIN_14176784None...",shape=box];
	_JOIN_14176784 -> _JOIN_14176786;
	ForLoop14166933 [label="ForLoop14166933  for (jt=jj; jt<=min(ny-1,jj+15)-7; jt=jt+8) {...",shape=box];
	ForLoop14166933 -> 14209404;
	ForLoop14166933 -> _JOIN_14166933;
	_JOIN_14159482 [label="_JOIN_1415948expected=9369846271501.798828
actual=9369846271501.798828
2None...",shape=box];
	_JOIN_14159482 -> 14159483;
	13949895 [label="13949895  int i;...",shape=box];
	_JOIN_14159480 [label="_JOIN_14159480None...",shape=box];
	_JOIN_14159480 -> 14200227;
	ForLoop14166937 [label="ForLoop14166937  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop14166937 -> ForLoop14166935;
	ForLoop14166937 -> _JOIN_14166937;
	_JOIN_14176782 [label="_JOIN_14176782None...",shape=box];
	_JOIN_14176782 -> _JOIN_14176784;
	_JOIN_14166935 [label="_JOIN_14166935None...",shape=box];
	_JOIN_14166935 -> _JOIN_14166937;
	_JOIN_14166937 [label="_JOIN_14166937None...",shape=box];
	_JOIN_14166937 -> ForLoop14176786;
	_JOIN_14176786 [label="_JOIN_14176786None...",shape=box];
	_JOIN_14176786 -> 14264302;
	14189297 [label="14189297  double scv_9, scv_10, scv_11, scv_12, scv_13, scv_14, scv_15, scv_16;...",shape=box];
	ForLoop14159479 [label="ForLoop14159479  for (kk=kkk; kk<=min(ny-1,kkk+1536); kk=kk+512) {...",shape=box];
	ForLoop14159479 -> 14156076;
	ForLoop14159479 -> _JOIN_14159479;
	_JOIN_14166933 [label="_JOIN_14166933None...",shape=box];
	_JOIN_14166933 -> _JOIN_14166935;
	ForLoop14159477 [label="ForLoop14159477  for (k=(min(ny-1,kk+511))-(((min(ny-1,kk+511))-(kk)+1)%12)+1; k<=min(ny-1,kk+511); k=k+1) {...",shape=box];
	ForLoop14159477 -> 14190036;
	ForLoop14159477 -> _JOIN_14159477;
	_JOIN_14176141 [label="_JOIN_14176141None...",shape=box];
	_JOIN_14176141 -> ForLoop14176782;
	ForLoop14176784 [label="ForLoop14176784  for (kk=kkk; kk<=min(ny-1,kkk+1536); kk=kk+512) {...",shape=box];
	ForLoop14176784 -> 14166969;
	ForLoop14176784 -> _JOIN_14176784;
	ForLoop14176782 [label="ForLoop14176782  for (k=(min(ny-1,kk+511))-(((min(ny-1,kk+511))-(kk)+1)%12)+1; k<=min(ny-1,kk+511); k=k+1) {...",shape=box];
	ForLoop14176782 -> 14235882;
	ForLoop14176782 -> _JOIN_14176782;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest65.exe __orio_perftest65.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest65.exe  
{'[2, 1, 6, 5, 6, 6, 1, 0, 19, 22, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0763352}
{'[2, 1, 6, 5, 6, 6, 1, 0, 19, 22, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.075835}
{'[2, 1, 6, 5, 6, 6, 1, 0, 19, 22, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0759079}
{'[2, 1, 6, 5, 6, 6, 1, 0, 19, 22, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.075891}
{'[2, 1, 6, 5, 6, 6, 1, 0, 19, 22, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.075819}
{'[2, 1, 6, 5, 6, 6, 1, 0, 19, 22, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0758519}
{'[2, 1, 6, 5, 6, 6, 1, 0, 19, 22, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.075841}
{'[2, 1, 6, 5, 6, 6, 1, 0, 19, 22, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.075819}
{'[2, 1, 6, 5, 6, 6, 1, 0, 19, 22, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0758312}
{'[2, 1, 6, 5, 6, 6, 1, 0, 19, 22, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.075835}
{'[2, 1, 6, 5, 6, 6, 1, 0, 19, 22, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.076848}
{'[2, 1, 6, 5, 6, 6, 1, 0, 19, 22, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.075841}
{'[2, 1, 6, 5, 6, 6, 1, 0, 19, 22, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0759029}
{'[2, 1, 6, 5, 6, 6, 1, 0, 19, 22, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0758471}
{'[2, 1, 6, 5, 6, 6, 1, 0, 19, 22, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0758948}
{'[2, 1, 6, 5, 6, 6, 1, 0, 19, 22, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0757968}
{'[2, 1, 6, 5, 6, 6, 1, 0, 19, 22, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.075815}
{'[2, 1, 6, 5, 6, 6, 1, 0, 19, 22, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0758591}
{'[2, 1, 6, 5, 6, 6, 1, 0, 19, 22, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.076256}
{'[2, 1, 6, 5, 6, 6, 1, 0, 19, 22, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0758431}
{'[2, 1, 6, 5, 6, 6, 1, 0, 19, 22, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.07584}
{'[2, 1, 6, 5, 6, 6, 1, 0, 19, 22, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0758278}
{'[2, 1, 6, 5, 6, 6, 1, 0, 19, 22, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.075844}
{'[2, 1, 6, 5, 6, 6, 1, 0, 19, 22, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0761092}
{'[2, 1, 6, 5, 6, 6, 1, 0, 19, 22, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.075768}
{'[2, 1, 6, 5, 6, 6, 1, 0, 19, 22, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0758059}
{'[2, 1, 6, 5, 6, 6, 1, 0, 19, 22, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0758328}
{'[2, 1, 6, 5, 6, 6, 1, 0, 19, 22, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.075891}
{'[2, 1, 6, 5, 6, 6, 1, 0, 19, 22, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.075778}
{'[2, 1, 6, 5, 6, 6, 1, 0, 19, 22, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0758171}

out:
 ["{'[2, 1, 6, 5, 6, 6, 1, 0, 19, 22, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0763352}", "{'[2, 1, 6, 5, 6, 6, 1, 0, 19, 22, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.075835}", "{'[2, 1, 6, 5, 6, 6, 1, 0, 19, 22, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0759079}", "{'[2, 1, 6, 5, 6, 6, 1, 0, 19, 22, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.075891}", "{'[2, 1, 6, 5, 6, 6, 1, 0, 19, 22, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.075819}", "{'[2, 1, 6, 5, 6, 6, 1, 0, 19, 22, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0758519}", "{'[2, 1, 6, 5, 6, 6, 1, 0, 19, 22, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.075841}", "{'[2, 1, 6, 5, 6, 6, 1, 0, 19, 22, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.075819}", "{'[2, 1, 6, 5, 6, 6, 1, 0, 19, 22, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0758312}", "{'[2, 1, 6, 5, 6, 6, 1, 0, 19, 22, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.075835}", "{'[2, 1, 6, 5, 6, 6, 1, 0, 19, 22, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.076848}", "{'[2, 1, 6, 5, 6, 6, 1, 0, 19, 22, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.075841}", "{'[2, 1, 6, 5, 6, 6, 1, 0, 19, 22, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0759029}", "{'[2, 1, 6, 5, 6, 6, 1, 0, 19, 22, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0758471}", "{'[2, 1, 6, 5, 6, 6, 1, 0, 19, 22, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0758948}", "{'[2, 1, 6, 5, 6, 6, 1, 0, 19, 22, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0757968}", "{'[2, 1, 6, 5, 6, 6, 1, 0, 19, 22, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.075815}", "{'[2, 1, 6, 5, 6, 6, 1, 0, 19, 22, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0758591}", "{'[2, 1, 6, 5, 6, 6, 1, 0, 19, 22, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.076256}", "{'[2, 1, 6, 5, 6, 6, 1, 0, 19, 22, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0758431}", "{'[2, 1, 6, 5, 6, 6, 1, 0, 19, 22, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.07584}", "{'[2, 1, 6, 5, 6, 6, 1, 0, 19, 22, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0758278}", "{'[2, 1, 6, 5, 6, 6, 1, 0, 19, 22, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.075844}", "{'[2, 1, 6, 5, 6, 6, 1, 0, 19, 22, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0761092}", "{'[2, 1, 6, 5, 6, 6, 1, 0, 19, 22, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.075768}", "{'[2, 1, 6, 5, 6, 6, 1, 0, 19, 22, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0758059}", "{'[2, 1, 6, 5, 6, 6, 1, 0, 19, 22, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0758328}", "{'[2, 1, 6, 5, 6, 6, 1, 0, 19, 22, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.075891}", "{'[2, 1, 6, 5, 6, 6, 1, 0, 19, 22, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.075778}", "{'[2, 1, 6, 5, 6, 6, 1, 0, 19, 22, 0, 11, 1, 1, 0, 1, 1, 0]' : 0.0758171}"]
returning from 'run': {'[2, 1, 6, 5, 6, 6, 1, 0, 19, 22, 0, 11, 1, 1, 0, 1, 1, 0]': ([0.0763352, 0.075835, 0.0759079, 0.075891, 0.075819, 0.0758519, 0.075841, 0.075819, 0.0758312, 0.075835, 0.076848, 0.075841, 0.0759029, 0.0758471, 0.0758948, 0.0757968, 0.075815, 0.0758591, 0.076256, 0.0758431, 0.07584, 0.0758278, 0.075844, 0.0761092, 0.075768, 0.0758059, 0.0758328, 0.075891, 0.075778, 0.0758171], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.0763352, 0.075835, 0.0759079, 0.075891, 0.075819, 0.0758519, 0.075841, 0.075819, 0.0758312, 0.075835, 0.076848, 0.075841, 0.0759029, 0.0758471, 0.0758948, 0.0757968, 0.075815, 0.0758591, 0.076256, 0.0758431, 0.07584, 0.0758278, 0.075844, 0.0761092, 0.075768, 0.0758059, 0.0758328, 0.075891, 0.075778, 0.0758171], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[2, 1, 6, 5, 6, 6, 1, 0, 19, 22, 0, 11, 1, 1, 0, 1, 1, 0]': ([0.0763352, 0.075835, 0.0759079, 0.075891, 0.075819, 0.0758519, 0.075841, 0.075819, 0.0758312, 0.075835, 0.076848, 0.075841, 0.0759029, 0.0758471, 0.0758948, 0.0757968, 0.075815, 0.0758591, 0.076256, 0.0758431, 0.07584, 0.0758278, 0.075844, 0.0761092, 0.075768, 0.0758059, 0.0758328, 0.075891, 0.075778, 0.0758171], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [0, 2, 0, 4, 6, 0, 1, 0, 23, 25, 0, 1, 1, 0, 1, 1]
Fixed Factors: {'T2_J': 6, 'VEC1': 1}
Testing candidate 28: [0, 2, 0, 4, 6, 6, 0, 1, 0, 23, 25, 0, 1, 1, 0, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	124
        Max loop nest depth: 	5
        Additions: 		5939
        Multiplications: 	2376
        Divisions: 		0
        Logical: 		0
        Reads: 			10768
        Writes: 		1715
        Comparisons:		124
        Gotos: 			0
        
digraph CFG {
	14571822 [label="14571822  scv_55=scv_55+A[(i+12)*ny+j]*x[j];...",shape=box];
	14571822 -> _JOIN_14571823;
	14582652 [label="14582652  for (k=kkk; k<=min(ny-1,kkk+2047); k=k+1) ...",shape=box];
	14571825 [label="14571825  int j;...",shape=box];
	ForLoop14552704 [label="ForLoop14552704  for (it=iii; it<=min(nx-1,iii+511)-7; it=it+8) {...",shape=box];
	ForLoop14552704 -> 14625117;
	ForLoop14552704 -> _JOIN_14552704;
	ForLoop14586032 [label="ForLoop14586032  for (k=kkk; k<=cbv_84; k=k+1) {...",shape=box];
	ForLoop14586032 -> 14766762;
	ForLoop14586032 -> _JOIN_14586032;
	ForLoop14578683 [label="ForLoop14578683  for (j=cbv_65; j<=cbv_66; j=j+1) {...",shape=box];
	ForLoop14578683 -> 14578682;
	ForLoop14578683 -> _JOIN_14578683;
	_JOIN_14568883 [label="_JOIN_14568883None...",shape=box];
	_JOIN_14568883 -> 14568885;
	ForLoop14552702 [label="ForLoop14552702  for (kkk=0; kkk<=ny-1; kkk=kkk+2048) {...",shape=box];
	ForLoop14552702 -> 14552399;
	ForLoop14552702 -> _JOIN_14552702;
	_JOIN_14563983 [label="_JOIN_14563983None...",shape=box];
	_JOIN_14563983 -> 14563985;
	_JOIN_14559327 [label="_JOIN_14559327None...",shape=box];
	_JOIN_14559327 -> 14559328;
	_JOIN_14545258 [label="_JOIN_14545258None...",shape=box];
	_JOIN_14545258 -> 14545259;
	14821667 [label="14821667  register int cbv_59, cbv_60;...",shape=box];
	14552700 [label="14552700  for (k=kkk; k<=min(ny-1,kkk+2047); k=k+1) ...",shape=box];
	14552700 -> _JOIN_14552702;
	_JOIN_14572726 [label="_JOIN_14572726None...",shape=box];
	_JOIN_14572726 -> 14818611;
	14823195 [label="14823195  register int cbv_65, cbv_66;...",shape=box];
	14768097 [label="14768097  tmp[i]=scv_79;...",shape=box];
	14768097 -> _JOIN_14586067;
	14552705 [label="14552705  int i;...",shape=box];
	14552705 -> ForLoop14584895;
	14820903 [label="14820903  register int cbv_56, cbv_57;...",shape=box];
	14817083 [label="14817083  register int cbv_41, cbv_42;...",shape=box];
	_JOIN_14586067 [label="_JOIN_14586067None...",shape=box];
	_JOIN_14586067 -> _JOIN_14586070;
	ForLoop14585942 [label="ForLoop14585942  for (jj=jjj; jj<=min(ny-1,jjj+2016); jj=jj+32) {...",shape=box];
	ForLoop14585942 -> 14826940;
	ForLoop14585942 -> _JOIN_14585942;
	ForLoop14585943 [label="ForLoop14585943  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop14585943 -> ForLoop14585942;
	ForLoop14585943 -> _JOIN_14585943;
	14589080 [label="14589080  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	14578685 [label="14578685  int j;...",shape=box];
	_JOIN_14579586 [label="_JOIN_14579586None...",shape=box];
	_JOIN_14579586 -> 14823959;
	ForLoop14561946 [label="ForLoop14561946  for (j=jt; j<=cbv_13; j=j+26) {...",shape=box];
	ForLoop14561946 -> 14561094;
	ForLoop14561946 -> _JOIN_14561946;
	14543045 [label="14543045  double x_copy;...",shape=box];
	14577754 [label="14577754  scv_58=scv_58+A[(i+19)*ny+j]*x[j];...",shape=box];
	14570894 [label="14570894  scv_55=scv_55+A[(i+12)*ny+j]*x[j];...",shape=box];
	ForLoop14584895 [label="ForLoop14584895  for (i=it; i<=min(nx-1,iii+511)-23; i=i+24) {...",shape=box];
	ForLoop14584895 -> 14761112;
	ForLoop14584895 -> _JOIN_14584895;
	ForLoop14584893 [label="ForLoop14584893  for (kkk=0; kkk<=ny-1; kkk=kkk+2048) {...",shape=box];
	ForLoop14584893 -> 14582652;
	ForLoop14584893 -> _JOIN_14584893;
	_JOIN_14566846 [label="_JOIN_14566846None...",shape=box];
	_JOIN_14566846 -> 14814027;
	ForLoop14579586 [label="ForLoop14579586  for (j=jt; j<=cbv_67; j=j+26) {...",shape=box];
	ForLoop14579586 -> 14578734;
	ForLoop14579586 -> _JOIN_14579586;
	ForLoop14571823 [label="ForLoop14571823  for (j=cbv_44; j<=cbv_45; j=j+1) {...",shape=box];
	ForLoop14571823 -> 14571822;
	ForLoop14571823 -> _JOIN_14571823;
	14761130 [label="14761130  tmp[(i+20)]=scv_54;...",shape=box];
	_JOIN_14585871 [label="_JOIN_14585871None...",shape=box];
	_JOIN_14585871 -> 14827590;
	14560114 [label="14560114  scv_74=scv_74+A[(i+1)*ny+j]*x[j];...",shape=box];
	_JOIN_14580643 [label="_JOIN_14580643None...",shape=box];
	_JOIN_14580643 -> 14580645;
	14818611 [label="14818611  register int cbv_47, cbv_48;...",shape=box];
	14574765 [label="14574765  int j;...",shape=box];
	14574762 [label="14574762  scv_68=scv_68+A[(i+15)*ny+j]*x[j];...",shape=box];
	14574762 -> _JOIN_14574763;
	_JOIN_14567903 [label="_JOIN_14567903None...",shape=box];
	_JOIN_14567903 -> 14567905;
	_JOIN_14579663 [label="_JOIN_14579663None...",shape=box];
	_JOIN_14579663 -> 14579665;
	14552399 [label="14552399  for (k=kkk; k<=min(ny-1,kkk+2047); k=k+1) ...",shape=box];
	14825487 [label="14825487  register int cbv_74, cbv_75;...",shape=box];
	_JOIN_14561043 [label="_JOIN_14561043None...",shape=box];
	_JOIN_14561043 -> 14561045;
	14822431 [label="14822431  register int cbv_62, cbv_63;...",shape=box];
	_JOIN_14569863 [label="_JOIN_14569863None...",shape=box];
	_JOIN_14569863 -> 14569865;
	_JOIN_14586032 [label="_JOIN_14586032None...",shape=box];
	_JOIN_14586032 -> 14586063;
	14562025 [label="14562025  int j;...",shape=box];
	ForLoop14563003 [label="ForLoop14563003  for (j=cbv_17; j<=cbv_18; j=j+1) {...",shape=box];
	ForLoop14563003 -> 14563002;
	ForLoop14563003 -> _JOIN_14563003;
	_JOIN_14568806 [label="_JOIN_14568806None...",shape=box];
	_JOIN_14568806 -> 14815555;
	14727821 [label="14727821  double scv_53;...",shape=box];
	14814027 [label="14814027  register int cbv_29, cbv_30;...",shape=box];
	ForLoop14585939 [label="ForLoop14585939  for (j=cbv_82; j<=cbv_83; j=j+1) {...",shape=box];
	ForLoop14585939 -> 14585938;
	ForLoop14585939 -> _JOIN_14585939;
	_JOIN_14581546 [label="_JOIN_14581546None...",shape=box];
	_JOIN_14581546 -> 14825487;
	ForLoop14574763 [label="ForLoop14574763  for (j=cbv_53; j<=cbv_54; j=j+1) {...",shape=box];
	ForLoop14574763 -> 14574762;
	ForLoop14574763 -> _JOIN_14574763;
	14768085 [label="14768085  double scv_79;...",shape=box];
	14573834 [label="14573834  scv_68=scv_68+A[(i+15)*ny+j]*x[j];...",shape=box];
	ForLoop14567903 [label="ForLoop14567903  for (j=cbv_32; j<=cbv_33; j=j+1) {...",shape=box];
	ForLoop14567903 -> 14567902;
	ForLoop14567903 -> _JOIN_14567903;
	14562022 [label="14562022  scv_65=scv_65+A[(i+2)*ny+j]*x[j];...",shape=box];
	14562022 -> _JOIN_14562023;
	14574814 [label="14574814  scv_69=scv_69+A[(i+16)*ny+j]*x[j];...",shape=box];
	ForLoop14561043 [label="ForLoop14561043  for (j=cbv_11; j<=cbv_12; j=j+1) {...",shape=box];
	ForLoop14561043 -> 14561042;
	ForLoop14561043 -> _JOIN_14561043;
	_JOIN_14585203 [label="_JOIN_14585203None...",shape=box];
	_JOIN_14585203 -> 14585204;
	_JOIN_14563906 [label="_JOIN_14563906None...",shape=box];
	_JOIN_14563906 -> 14811735;
	14563002 [label="14563002  scv_60=scv_60+A[(i+3)*ny+j]*x[j];...",shape=box];
	14563002 -> _JOIN_14563003;
	ForLoop14567826 [label="ForLoop14567826  for (j=jt; j<=cbv_31; j=j+26) {...",shape=box];
	ForLoop14567826 -> 14566974;
	ForLoop14567826 -> _JOIN_14567826;
	14566974 [label="14566974  scv_73=scv_73+A[(i+8)*ny+j]*x[j];...",shape=box];
	14563005 [label="14563005  int j;...",shape=box];
	14810971 [label="14810971  register int cbv_17, cbv_18;...",shape=box];
	14820139 [label="14820139  register int cbv_53, cbv_54;...",shape=box];
	ForLoop14560966 [label="ForLoop14560966  for (j=jt; j<=cbv_10; j=j+26) {...",shape=box];
	ForLoop14560966 -> 14560114;
	ForLoop14560966 -> _JOIN_14560966;
	_JOIN_14564963 [label="_JOIN_14564963None...",shape=box];
	_JOIN_14564963 -> 14564965;
	ForLoop14586070 [label="ForLoop14586070  for (iii=0; iii<=nx-1; iii=iii+512) {...",shape=box];
	ForLoop14586070 -> ForLoop14552704;
	ForLoop14586070 -> _JOIN_14586070;
	14577705 [label="14577705  int j;...",shape=box];
	14598589 [label="14598589  double scv_9, scv_10, scv_11, scv_12, scv_13, scv_14, scv_15, scv_16;...",shape=box];
	14564965 [label="14564965  int j;...",shape=box];
	14808679 [label="14808679  register int cbv_8, cbv_9;...",shape=box];
	_JOIN_14584895 [label="_JOIN_14584895None...",shape=box];
	_JOIN_14584895 -> ForLoop14586067;
	14564962 [label="14564962  scv_64=scv_64+A[(i+5)*ny+j]*x[j];...",shape=box];
	14564962 -> _JOIN_14564963;
	_JOIN_14577626 [label="_JOIN_14577626None...",shape=box];
	_JOIN_14577626 -> 14822431;
	ForLoop14565943 [label="ForLoop14565943  for (j=cbv_26; j<=cbv_27; j=j+1) {...",shape=box];
	ForLoop14565943 -> 14565942;
	ForLoop14565943 -> _JOIN_14565943;
	14579714 [label="14579714  scv_57=scv_57+A[(i+21)*ny+j]*x[j];...",shape=box];
	14616242 [label="14616242  double scv_36;...",shape=box];
	14565014 [label="14565014  scv_63=scv_63+A[(i+6)*ny+j]*x[j];...",shape=box];
	14824723 [label="14824723  register int cbv_71, cbv_72;...",shape=box];
	ForLoop14570843 [label="ForLoop14570843  for (j=cbv_41; j<=cbv_42; j=j+1) {...",shape=box];
	ForLoop14570843 -> 14570842;
	ForLoop14570843 -> _JOIN_14570843;
	_JOIN_14578606 [label="_JOIN_14578606None...",shape=box];
	_JOIN_14578606 -> 14823195;
	14581674 [label="14581674  scv_75=scv_75+A[(i+23)*ny+j]*x[j];...",shape=box];
	14566925 [label="14566925  int j;...",shape=box];
	14568934 [label="14568934  scv_66=scv_66+A[(i+10)*ny+j]*x[j];...",shape=box];
	14804136 [label="14804136  register int cbv_3, cbv_4;...",shape=box];
	14826940 [label="14826940  register int cbv_80;...",shape=box];
	_JOIN_14552669 [label="_JOIN_14552669None...",shape=box];
	_JOIN_14552669 -> 14552700;
	14563982 [label="14563982  scv_71=scv_71+A[(i+4)*ny+j]*x[j];...",shape=box];
	14563982 -> _JOIN_14563983;
	_JOIN_14578683 [label="_JOIN_14578683None...",shape=box];
	_JOIN_14578683 -> 14578685;
	ForLoop14573783 [label="ForLoop14573783  for (j=cbv_50; j<=cbv_51; j=j+1) {...",shape=box];
	ForLoop14573783 -> 14573782;
	ForLoop14573783 -> _JOIN_14573783;
	14300426 [label="14300426  register int cbv_1;...",shape=box];
	14563985 [label="14563985  int j;...",shape=box];
	ForLoop14571746 [label="ForLoop14571746  for (j=jt; j<=cbv_43; j=j+26) {...",shape=box];
	ForLoop14571746 -> 14570894;
	ForLoop14571746 -> _JOIN_14571746;
	ForLoop14564886 [label="ForLoop14564886  for (j=jt; j<=cbv_22; j=j+26) {...",shape=box];
	ForLoop14564886 -> 14564034;
	ForLoop14564886 -> _JOIN_14564886;
	ForLoop14577703 [label="ForLoop14577703  for (j=cbv_62; j<=cbv_63; j=j+1) {...",shape=box];
	ForLoop14577703 -> 14577702;
	ForLoop14577703 -> _JOIN_14577703;
	_JOIN_14560063 [label="_JOIN_14560063None...",shape=box];
	_JOIN_14560063 -> 14560065;
	ForLoop14566846 [label="ForLoop14566846  for (j=jt; j<=cbv_28; j=j+26) {...",shape=box];
	ForLoop14566846 -> 14565994;
	ForLoop14566846 -> _JOIN_14566846;
	ForLoop14582603 [label="ForLoop14582603  for (j=cbv_77; j<=cbv_78; j=j+1) {...",shape=box];
	ForLoop14582603 -> 14582602;
	ForLoop14582603 -> _JOIN_14582603;
	_JOIN_14580566 [label="_JOIN_14580566None...",shape=box];
	_JOIN_14580566 -> 14824723;
	14585204 [label="14585204  int j;...",shape=box];
	14586063 [label="14586063  for (k=kkk; k<=min(ny-1,kkk+2047); k=k+1) ...",shape=box];
	14586063 -> _JOIN_14586065;
	_JOIN_14570766 [label="_JOIN_14570766None...",shape=box];
	_JOIN_14570766 -> 14817083;
	ForLoop14586065 [label="ForLoop14586065  for (kkk=0; kkk<=ny-1; kkk=kkk+2048) {...",shape=box];
	ForLoop14586065 -> 14585987;
	ForLoop14586065 -> _JOIN_14586065;
	_JOIN_14577703 [label="_JOIN_14577703None...",shape=box];
	_JOIN_14577703 -> 14577705;
	ForLoop14586067 [label="ForLoop14586067  for (i=(min(nx-1,iii+511))-(((min(nx-1,iii+511))-(it)+1)%24)+1; i<=min(nx-1,iii+511); i=i+1) {...",shape=box];
	ForLoop14586067 -> 14768085;
	ForLoop14586067 -> _JOIN_14586067;
	ForLoop14580566 [label="ForLoop14580566  for (j=jt; j<=cbv_70; j=j+26) {...",shape=box];
	ForLoop14580566 -> 14579714;
	ForLoop14580566 -> _JOIN_14580566;
	14576774 [label="14576774  scv_59=scv_59+A[(i+18)*ny+j]*x[j];...",shape=box];
	_JOIN_14562926 [label="_JOIN_14562926None...",shape=box];
	_JOIN_14562926 -> 14810971;
	14559368 [label="14559368  scv_61=scv_61+A[i*ny+j]*x[j];...",shape=box];
	ForLoop14565866 [label="ForLoop14565866  for (j=jt; j<=cbv_25; j=j+26) {...",shape=box];
	ForLoop14565866 -> 14565014;
	ForLoop14565866 -> _JOIN_14565866;
	ForLoop14572803 [label="ForLoop14572803  for (j=cbv_47; j<=cbv_48; j=j+1) {...",shape=box];
	ForLoop14572803 -> 14572802;
	ForLoop14572803 -> _JOIN_14572803;
	14568885 [label="14568885  int j;...",shape=box];
	_JOIN_14563003 [label="_JOIN_14563003None...",shape=box];
	_JOIN_14563003 -> 14563005;
	14575794 [label="14575794  scv_77=scv_77+A[(i+17)*ny+j]*x[j];...",shape=box];
	ForLoop14564963 [label="ForLoop14564963  for (j=cbv_23; j<=cbv_24; j=j+1) {...",shape=box];
	ForLoop14564963 -> 14564962;
	ForLoop14564963 -> _JOIN_14564963;
	_JOIN_14564886 [label="_JOIN_14564886None...",shape=box];
	_JOIN_14564886 -> 14812499;
	ForLoop14575666 [label="ForLoop14575666  for (j=jt; j<=cbv_55; j=j+26) {...",shape=box];
	ForLoop14575666 -> 14574814;
	ForLoop14575666 -> _JOIN_14575666;
	_JOIN_14574763 [label="_JOIN_14574763None...",shape=box];
	_JOIN_14574763 -> 14574765;
	ForLoop14569863 [label="ForLoop14569863  for (j=cbv_38; j<=cbv_39; j=j+1) {...",shape=box];
	ForLoop14569863 -> 14569862;
	ForLoop14569863 -> _JOIN_14569863;
	14570845 [label="14570845  int j;...",shape=box];
	14578682 [label="14578682  scv_58=scv_58+A[(i+19)*ny+j]*x[j];...",shape=box];
	14578682 -> _JOIN_14578683;
	14578734 [label="14578734  scv_54=scv_54+A[(i+20)*ny+j]*x[j];...",shape=box];
	14573785 [label="14573785  int j;...",shape=box];
	14567954 [label="14567954  scv_72=scv_72+A[(i+9)*ny+j]*x[j];...",shape=box];
	14827590 [label="14827590  register int cbv_82, cbv_83;...",shape=box];
	14573782 [label="14573782  scv_67=scv_67+A[(i+14)*ny+j]*x[j];...",shape=box];
	14573782 -> _JOIN_14573783;
	ForLoop14559327 [label="ForLoop14559327  for (jt=jj; jt<=cbv_6; jt=jt+8) {...",shape=box];
	ForLoop14559327 -> 14634601;
	ForLoop14559327 -> _JOIN_14559327;
	_JOIN_14574686 [label="_JOIN_14574686None...",shape=box];
	_JOIN_14574686 -> 14820139;
	_JOIN_14571746 [label="_JOIN_14571746None...",shape=box];
	_JOIN_14571746 -> 14817847;
	ForLoop14584147 [label="ForLoop14584147  for (k=kkk; k<=cbv_79; k=k+1) {...",shape=box];
	ForLoop14584147 -> 14727821;
	ForLoop14584147 -> _JOIN_14584147;
	ForLoop14580643 [label="ForLoop14580643  for (j=cbv_71; j<=cbv_72; j=j+1) {...",shape=box];
	ForLoop14580643 -> 14580642;
	ForLoop14580643 -> _JOIN_14580643;
	ForLoop14568806 [label="ForLoop14568806  for (j=jt; j<=cbv_34; j=j+26) {...",shape=box];
	ForLoop14568806 -> 14567954;
	ForLoop14568806 -> _JOIN_14568806;
	14570842 [label="14570842  scv_70=scv_70+A[(i+11)*ny+j]*x[j];...",shape=box];
	14570842 -> _JOIN_14570843;
	14569865 [label="14569865  int j;...",shape=box];
	14565994 [label="14565994  scv_62=scv_62+A[(i+7)*ny+j]*x[j];...",shape=box];
	_JOIN_14566923 [label="_JOIN_14566923None...",shape=box];
	_JOIN_14566923 -> 14566925;
	14569862 [label="14569862  scv_66=scv_66+A[(i+10)*ny+j]*x[j];...",shape=box];
	14569862 -> _JOIN_14569863;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 14300426;
	14816319 [label="14816319  register int cbv_38, cbv_39;...",shape=box];
	14567905 [label="14567905  int j;...",shape=box];
	14572805 [label="14572805  int j;...",shape=box];
	14567902 [label="14567902  scv_73=scv_73+A[(i+8)*ny+j]*x[j];...",shape=box];
	14567902 -> _JOIN_14567903;
	ForLoop14572726 [label="ForLoop14572726  for (j=jt; j<=cbv_46; j=j+26) {...",shape=box];
	ForLoop14572726 -> 14571874;
	ForLoop14572726 -> _JOIN_14572726;
	14814791 [label="14814791  register int cbv_32, cbv_33;...",shape=box];
	_JOIN_14576646 [label="_JOIN_14576646None...",shape=box];
	_JOIN_14576646 -> 14821667;
	_JOIN_14584147 [label="_JOIN_14584147None...",shape=box];
	_JOIN_14584147 -> 14584178;
	14761112 [label="14761112  double scv_54, scv_55, scv_56, scv_57, scv_58, scv_59, scv_60, scv_61;...",shape=box];
	14561045 [label="14561045  int j;...",shape=box];
	14572802 [label="14572802  scv_56=scv_56+A[(i+13)*ny+j]*x[j];...",shape=box];
	14572802 -> _JOIN_14572803;
	ForLoop14552355 [label="ForLoop14552355  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop14552355 -> ForLoop14552354;
	ForLoop14552355 -> _JOIN_14552355;
	ForLoop14552354 [label="ForLoop14552354  for (jj=jjj; jj<=min(ny-1,jjj+2016); jj=jj+32) {...",shape=box];
	ForLoop14552354 -> 14799810;
	ForLoop14552354 -> _JOIN_14552354;
	ForLoop14568883 [label="ForLoop14568883  for (j=cbv_35; j<=cbv_36; j=j+1) {...",shape=box];
	ForLoop14568883 -> 14568882;
	ForLoop14568883 -> _JOIN_14568883;
	ForLoop14552351 [label="ForLoop14552351  for (j=cbv_3; j<=cbv_4; j=j+1) {...",shape=box];
	ForLoop14552351 -> 14599402;
	ForLoop14552351 -> _JOIN_14552351;
	14561042 [label="14561042  scv_74=scv_74+A[(i+1)*ny+j]*x[j];...",shape=box];
	14561042 -> _JOIN_14561043;
	_JOIN_14565866 [label="_JOIN_14565866None...",shape=box];
	_JOIN_14565866 -> 14813263;
	14545259 [label="14545259  int j;...",shape=box];
	ForLoop14562926 [label="ForLoop14562926  for (j=jt; j<=cbv_16; j=j+26) {...",shape=box];
	ForLoop14562926 -> 14562074;
	ForLoop14562926 -> _JOIN_14562926;
	ForLoop14579663 [label="ForLoop14579663  for (j=cbv_68; j<=cbv_69; j=j+1) {...",shape=box];
	ForLoop14579663 -> 14579662;
	ForLoop14579663 -> _JOIN_14579663;
	_JOIN_14582603 [label="_JOIN_14582603None...",shape=box];
	_JOIN_14582603 -> _JOIN_14582606;
	14813263 [label="14813263  register int cbv_26, cbv_27;...",shape=box];
	_JOIN_14572803 [label="_JOIN_14572803None...",shape=box];
	_JOIN_14572803 -> 14572805;
	_JOIN_14560966 [label="_JOIN_14560966None...",shape=box];
	_JOIN_14560966 -> 14809443;
	14563054 [label="14563054  scv_71=scv_71+A[(i+4)*ny+j]*x[j];...",shape=box];
	_JOIN_14565943 [label="_JOIN_14565943None...",shape=box];
	_JOIN_14565943 -> 14565945;
	14579665 [label="14579665  int j;...",shape=box];
	14571874 [label="14571874  scv_56=scv_56+A[(i+13)*ny+j]*x[j];...",shape=box];
	ForLoop14552669 [label="ForLoop14552669  for (k=kkk; k<=cbv_5; k=k+1) {...",shape=box];
	ForLoop14552669 -> 14616242;
	ForLoop14552669 -> _JOIN_14552669;
	ForLoop14552079 [label="ForLoop14552079  for (j=jt; j<=cbv_2; j=j+26) {...",shape=box];
	ForLoop14552079 -> 14598589;
	ForLoop14552079 -> _JOIN_14552079;
	ForLoop14570766 [label="ForLoop14570766  for (j=jt; j<=cbv_40; j=j+26) {...",shape=box];
	ForLoop14570766 -> 14569914;
	ForLoop14570766 -> _JOIN_14570766;
	ForLoop14577626 [label="ForLoop14577626  for (j=jt; j<=cbv_61; j=j+26) {...",shape=box];
	ForLoop14577626 -> 14576774;
	ForLoop14577626 -> _JOIN_14577626;
	_JOIN_14552079 [label="_JOIN_14552079None...",shape=box];
	_JOIN_14552079 -> 14804136;
	_JOIN_14582606 [label="_JOIN_14582606None...",shape=box];
	_JOIN_14582606 -> _JOIN_14582608;
	14584178 [label="14584178  for (k=kkk; k<=min(ny-1,kkk+2047); k=k+1) ...",shape=box];
	14575745 [label="14575745  int j;...",shape=box];
	14580645 [label="14580645  int j;...",shape=box];
	_JOIN_14575666 [label="_JOIN_14575666None...",shape=box];
	_JOIN_14575666 -> 14820903;
	_JOIN_14567826 [label="_JOIN_14567826None...",shape=box];
	_JOIN_14567826 -> 14814791;
	14580642 [label="14580642  scv_57=scv_57+A[(i+21)*ny+j]*x[j];...",shape=box];
	14580642 -> _JOIN_14580643;
	ForLoop14560063 [label="ForLoop14560063  for (j=cbv_8; j<=cbv_9; j=j+1) {...",shape=box];
	ForLoop14560063 -> 14560062;
	ForLoop14560063 -> _JOIN_14560063;
	_JOIN_14559995 [label="_JOIN_14559995None...",shape=box];
	_JOIN_14559995 -> 14808679;
	_JOIN_14582608 [label="_JOIN_14582608None...",shape=box];
	_JOIN_14582608 -> ForLoop14584893;
	14569914 [label="14569914  scv_70=scv_70+A[(i+11)*ny+j]*x[j];...",shape=box];
	14585987 [label="14585987  for (k=kkk; k<=min(ny-1,kkk+2047); k=k+1) ...",shape=box];
	ForLoop14585871 [label="ForLoop14585871  for (j=jt; j<=cbv_81; j=j+26) {...",shape=box];
	ForLoop14585871 -> 14585244;
	ForLoop14585871 -> _JOIN_14585871;
	14819375 [label="14819375  register int cbv_50, cbv_51;...",shape=box];
	_JOIN_14571823 [label="_JOIN_14571823None...",shape=box];
	_JOIN_14571823 -> 14571825;
	14815555 [label="14815555  register int cbv_35, cbv_36;...",shape=box];
	14826251 [label="14826251  register int cbv_77, cbv_78;...",shape=box];
	_JOIN_14586065 [label="_JOIN_14586065None...",shape=box];
	_JOIN_14586065 -> 14768097;
	_JOIN_14586070 [label="_JOIN_14586070None...",shape=box];
	_JOIN_14569786 [label="_JOIN_14569786None...",shape=box];
	_JOIN_14569786 -> 14816319;
	_JOIN_14582526 [label="_JOIN_14582526None...",shape=box];
	_JOIN_14582526 -> 14826251;
	14585019 [label="14585019  scv_79=scv_79+A[i*ny+jt]*x[jt];...",shape=box];
	14625129 [label="14625129  tmp[it]=scv_37;...",shape=box];
	ForLoop14563983 [label="ForLoop14563983  for (j=cbv_20; j<=cbv_21; j=j+1) {...",shape=box];
	ForLoop14563983 -> 14563982;
	ForLoop14563983 -> _JOIN_14563983;
	ForLoop14569786 [label="ForLoop14569786  for (j=jt; j<=cbv_37; j=j+26) {...",shape=box];
	ForLoop14569786 -> 14568934;
	ForLoop14569786 -> _JOIN_14569786;
	ForLoop14576646 [label="ForLoop14576646  for (j=jt; j<=cbv_58; j=j+26) {...",shape=box];
	ForLoop14576646 -> 14575794;
	ForLoop14576646 -> _JOIN_14576646;
	14582602 [label="14582602  scv_75=scv_75+A[(i+23)*ny+j]*x[j];...",shape=box];
	14582602 -> _JOIN_14582603;
	ForLoop14300399 [label="ForLoop14300399  for (i=0; i<=cbv_1; i++ ) ...",shape=box];
	ForLoop14300399 -> 14300398;
	ForLoop14300399 -> _JOIN_14300399;
	14808029 [label="14808029  register int cbv_6;...",shape=box];
	ForLoop14559995 [label="ForLoop14559995  for (j=jt; j<=cbv_7; j=j+26) {...",shape=box];
	ForLoop14559995 -> 14559368;
	ForLoop14559995 -> _JOIN_14559995;
	14579662 [label="14579662  scv_54=scv_54+A[(i+20)*ny+j]*x[j];...",shape=box];
	14579662 -> _JOIN_14579663;
	14823959 [label="14823959  register int cbv_68, cbv_69;...",shape=box];
	ForLoop14562023 [label="ForLoop14562023  for (j=cbv_14; j<=cbv_15; j=j+1) {...",shape=box];
	ForLoop14562023 -> 14562022;
	ForLoop14562023 -> _JOIN_14562023;
	_JOIN_14561946 [label="_JOIN_14561946None...",shape=box];
	_JOIN_14561946 -> 14810207;
	_JOIN_14585943 [label="_JOIN_14585943None...",shape=box];
	_JOIN_14585943 -> ForLoop14586065;
	14560065 [label="14560065  int j;...",shape=box];
	_JOIN_14585939 [label="_JOIN_14585939None...",shape=box];
	_JOIN_14585939 -> _JOIN_14585942;
	14564034 [label="14564034  scv_64=scv_64+A[(i+5)*ny+j]*x[j];...",shape=box];
	14585938 [label="14585938  scv_79=scv_79+A[i*ny+j]*x[j];...",shape=box];
	14585938 -> _JOIN_14585939;
	_JOIN_14562023 [label="_JOIN_14562023None...",shape=box];
	_JOIN_14562023 -> 14562025;
	14560062 [label="14560062  scv_61=scv_61+A[i*ny+j]*x[j];...",shape=box];
	14560062 -> _JOIN_14560063;
	14599402 [label="14599402  double scv_35;...",shape=box];
	14562074 [label="14562074  scv_60=scv_60+A[(i+3)*ny+j]*x[j];...",shape=box];
	14561094 [label="14561094  scv_65=scv_65+A[(i+2)*ny+j]*x[j];...",shape=box];
	ForLoop14581546 [label="ForLoop14581546  for (j=jt; j<=cbv_73; j=j+26) {...",shape=box];
	ForLoop14581546 -> 14580694;
	ForLoop14581546 -> _JOIN_14581546;
	ForLoop14581623 [label="ForLoop14581623  for (j=cbv_74; j<=cbv_75; j=j+1) {...",shape=box];
	ForLoop14581623 -> 14581622;
	ForLoop14581623 -> _JOIN_14581623;
	ForLoop14545258 [label="ForLoop14545258  for (jt=jj; jt<=cbv_1; jt=jt+8) {...",shape=box];
	ForLoop14545258 -> 14589080;
	ForLoop14545258 -> _JOIN_14545258;
	14809443 [label="14809443  register int cbv_11, cbv_12;...",shape=box];
	ForLoop14582526 [label="ForLoop14582526  for (j=jt; j<=cbv_76; j=j+26) {...",shape=box];
	ForLoop14582526 -> 14581674;
	ForLoop14582526 -> _JOIN_14582526;
	14625117 [label="14625117  double scv_37, scv_38, scv_39, scv_40, scv_41, scv_42, scv_43, scv_44;...",shape=box];
	14634601 [label="14634601  double scv_45, scv_46, scv_47, scv_48, scv_49, scv_50, scv_51, scv_52;...",shape=box];
	14576722 [label="14576722  scv_77=scv_77+A[(i+17)*ny+j]*x[j];...",shape=box];
	14576722 -> _JOIN_14576723;
	14576725 [label="14576725  int j;...",shape=box];
	14568882 [label="14568882  scv_72=scv_72+A[(i+9)*ny+j]*x[j];...",shape=box];
	14568882 -> _JOIN_14568883;
	ForLoop14574686 [label="ForLoop14574686  for (j=jt; j<=cbv_52; j=j+26) {...",shape=box];
	ForLoop14574686 -> 14573834;
	ForLoop14574686 -> _JOIN_14574686;
	14581622 [label="14581622  scv_76=scv_76+A[(i+22)*ny+j]*x[j];...",shape=box];
	14581622 -> _JOIN_14581623;
	_JOIN_14570843 [label="_JOIN_14570843None...",shape=box];
	_JOIN_14570843 -> 14570845;
	ForLoop14573706 [label="ForLoop14573706  for (j=jt; j<=cexpected=9369846271501.798828
actual=9369846271501.798828
bv_49; j=j+26) {...",shape=box];
	ForLoop14573706 -> 14572854;
	ForLoop14573706 -> _JOIN_14573706;
	_JOIN_14300399 [label="_JOIN_14300399None...",shape=box];
	_JOIN_14300399 -> 14543045;
	ForLoop14582608 [label="ForLoop14582608  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop14582608 -> ForLoop14582606;
	ForLoop14582608 -> _JOIN_14582608;
	ForLoop14585203 [label="ForLoop14585203  for (jt=jj; jt<=cbv_80; jt=jt+8) {...",shape=box];
	ForLoop14585203 -> 14585019;
	ForLoop14585203 -> _JOIN_14585203;
	_JOIN_14576723 [label="_JOIN_14576723None...",shape=box];
	_JOIN_14576723 -> 14576725;
	ForLoop14582606 [label="ForLoop14582606  for (jj=jjj; jj<=min(ny-1,jjj+2016); jj=jj+32) {...",shape=box];
	ForLoop14582606 -> 14808029;
	ForLoop14582606 -> _JOIN_14582606;
	14566922 [label="14566922  scv_62=scv_62+A[(i+7)*ny+j]*x[j];...",shape=box];
	14566922 -> _JOIN_14566923;
	14300398 [label="14300398  y[i]=0.0;...",shape=box];
	14300398 -> _JOIN_14300399;
	_JOIN_14573706 [label="_JOIN_14573706None...",shape=box];
	_JOIN_14573706 -> 14819375;
	14766762 [label="14766762  double scv_78;...",shape=box];
	ForLoop14575743 [label="ForLoop14575743  for (j=cbv_56; j<=cbv_57; j=j+1) {...",shape=box];
	ForLoop14575743 -> 14575742;
	ForLoop14575743 -> _JOIN_14575743;
	_JOIN_14552702 [label="_JOIN_14552702None...",shape=box];
	_JOIN_14552702 -> 14625129;
	14577702 [label="14577702  scv_59=scv_59+A[(i+18)*ny+j]*x[j];...",shape=box];
	14577702 -> _JOIN_14577703;
	_JOIN_14552704 [label="_JOIN_14552704None...",shape=box];
	_JOIN_14552704 -> 14552705;
	14812499 [label="14812499  register int cbv_23, cbv_24;...",shape=box];
	14811735 [label="14811735  register int cbv_20, cbv_21;...",shape=box];
	14575742 [label="14575742  scv_69=scv_69+A[(i+16)*ny+j]*x[j];...",shape=box];
	14575742 -> _JOIN_14575743;
	_JOIN_14552355 [label="_JOIN_14552355None...",shape=box];
	_JOIN_14552355 -> ForLoop14552702;
	_JOIN_14552354 [label="_JOIN_14552354None...",shape=box];
	_JOIN_14552354 -> _JOIN_14552355;
	ForLoop14566923 [label="ForLoop14566923  for (j=cbv_29; j<=cbv_30; j=j+1) {...",shape=box];
	ForLoop14566923 -> 14566922;
	ForLoop14566923 -> _JOIN_14566923;
	14572854 [label="14572854  scv_67=scv_67+A[(i+14)*ny+j]*x[j];...",shape=box];
	_JOIN_14552351 [label="_JOIN_14552351None...",shape=box];
	_JOIN_14552351 -> _JOIN_14552354;
	_JOIN_14581623 [label="_JOIN_14581623None...",shape=box];
	_JOIN_14581623 -> 14581625;
	_JOIN_14573783 [label="_JOIN_14573783None...",shape=box];
	_JOIN_14573783 -> 14573785;
	14559328 [label="14559328  int j;...",shape=box];
	ForLoop14578606 [label="ForLoop14578606  for (j=jt; j<=cbv_64; j=j+26) {...",shape=box];
	ForLoop14578606 -> 14577754;
	ForLoop14578606 -> _JOIN_14578606;
	14810207 [label="14810207  register int cbv_14, cbv_15;...",shape=box];
	_JOIN_14585942 [label="_JOIN_14585942None...",shape=box];
	_JOIN_14585942 -> _JOIN_14585943;
	14585244 [label="14585244  scv_79=scv_79+A[i*ny+j]*x[j];...",shape=box];
	_JOIN_14584893 [label="_JOIN_14584893None...",shape=box];
	_JOIN_14584893 -> 14761130;
	14581625 [label="14581625  int j;...",shape=box];
	14580694 [label="14580694  scv_76=scv_76+A[(i+22)*ny+j]*x[j];...",shape=box];
	ForLoop14563906 [label="ForLoop14563906  for (j=jt; j<=cbv_19; j=j+26) {...",shape=box];
	ForLoop14563906 -> 14563054;
	ForLoop14563906 -> _JOIN_14563906;
	_JOIN_14575743 [label="_JOIN_14575743None...",shape=box];
	_JOIN_14575743 -> 14575745;
	14565942 [label="14565942  scv_63=scv_63+A[(i+6)*ny+j]*x[j];...",shape=box];
	14565942 -> _JOIN_14565943;
	ForLoop14576723 [label="ForLoop14576723  for (j=cbv_59; j<=cbv_60; j=j+1) {...",shape=box];
	ForLoop14576723 -> 14576722;
	ForLoop14576723 -> _JOIN_14576723;
	14817847 [label="14817847  register int cbv_44, cbv_45;...",shape=box];
	14565945 [label="14565945  int j;...",shape=box];
	14799810 [label="14799810  register int cbv_1;...",shape=box];

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest66.exe __orio_perftest66.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest66.exe  
{'[0, 2, 0, 4, 6, 6, 0, 1, 0, 23, 25, 0, 1, 1, 0, 1, 1, 1]' : 0.090137}
{'[0, 2, 0, 4, 6, 6, 0, 1, 0, 23, 25, 0, 1, 1, 0, 1, 1, 1]' : 0.0887098}
{'[0, 2, 0, 4, 6, 6, 0, 1, 0, 23, 25, 0, 1, 1, 0, 1, 1, 1]' : 0.088639}
{'[0, 2, 0, 4, 6, 6, 0, 1, 0, 23, 25, 0, 1, 1, 0, 1, 1, 1]' : 0.0890911}
{'[0, 2, 0, 4, 6, 6, 0, 1, 0, 23, 25, 0, 1, 1, 0, 1, 1, 1]' : 0.0886819}
{'[0, 2, 0, 4, 6, 6, 0, 1, 0, 23, 25, 0, 1, 1, 0, 1, 1, 1]' : 0.0886641}
{'[0, 2, 0, 4, 6, 6, 0, 1, 0, 23, 25, 0, 1, 1, 0, 1, 1, 1]' : 0.0886559}
{'[0, 2, 0, 4, 6, 6, 0, 1, 0, 23, 25, 0, 1, 1, 0, 1, 1, 1]' : 0.088675}
{'[0, 2, 0, 4, 6, 6, 0, 1, 0, 23, 25, 0, 1, 1, 0, 1, 1, 1]' : 0.0886469}
{'[0, 2, 0, 4, 6, 6, 0, 1, 0, 23, 25, 0, 1, 1, 0, 1, 1, 1]' : 0.08866}
{'[0, 2, 0, 4, 6, 6, 0, 1, 0, 23, 25, 0, 1, 1, 0, 1, 1, 1]' : 0.088629}
{'[0, 2, 0, 4, 6, 6, 0, 1, 0, 23, 25, 0, 1, 1, 0, 1, 1, 1]' : 0.088768}
{'[0, 2, 0, 4, 6, 6, 0, 1, 0, 23, 25, 0, 1, 1, 0, 1, 1, 1]' : 0.088686}
{'[0, 2, 0, 4, 6, 6, 0, 1, 0, 23, 25, 0, 1, 1, 0, 1, 1, 1]' : 0.088819}
{'[0, 2, 0, 4, 6, 6, 0, 1, 0, 23, 25, 0, 1, 1, 0, 1, 1, 1]' : 0.088728}
{'[0, 2, 0, 4, 6, 6, 0, 1, 0, 23, 25, 0, 1, 1, 0, 1, 1, 1]' : 0.0886409}
{'[0, 2, 0, 4, 6, 6, 0, 1, 0, 23, 25, 0, 1, 1, 0, 1, 1, 1]' : 0.088716}
{'[0, 2, 0, 4, 6, 6, 0, 1, 0, 23, 25, 0, 1, 1, 0, 1, 1, 1]' : 0.0886521}
{'[0, 2, 0, 4, 6, 6, 0, 1, 0, 23, 25, 0, 1, 1, 0, 1, 1, 1]' : 0.0887179}
{'[0, 2, 0, 4, 6, 6, 0, 1, 0, 23, 25, 0, 1, 1, 0, 1, 1, 1]' : 0.088722}
{'[0, 2, 0, 4, 6, 6, 0, 1, 0, 23, 25, 0, 1, 1, 0, 1, 1, 1]' : 0.089046}
{'[0, 2, 0, 4, 6, 6, 0, 1, 0, 23, 25, 0, 1, 1, 0, 1, 1, 1]' : 0.088696}
{'[0, 2, 0, 4, 6, 6, 0, 1, 0, 23, 25, 0, 1, 1, 0, 1, 1, 1]' : 0.088733}
{'[0, 2, 0, 4, 6, 6, 0, 1, 0, 23, 25, 0, 1, 1, 0, 1, 1, 1]' : 0.089684}
{'[0, 2, 0, 4, 6, 6, 0, 1, 0, 23, 25, 0, 1, 1, 0, 1, 1, 1]' : 0.088901}
{'[0, 2, 0, 4, 6, 6, 0, 1, 0, 23, 25, 0, 1, 1, 0, 1, 1, 1]' : 0.088784}
{'[0, 2, 0, 4, 6, 6, 0, 1, 0, 23, 25, 0, 1, 1, 0, 1, 1, 1]' : 0.08867}
{'[0, 2, 0, 4, 6, 6, 0, 1, 0, 23, 25, 0, 1, 1, 0, 1, 1, 1]' : 0.088697}
{'[0, 2, 0, 4, 6, 6, 0, 1, 0, 23, 25, 0, 1, 1, 0, 1, 1, 1]' : 0.088798}
{'[0, 2, 0, 4, 6, 6, 0, 1, 0, 23, 25, 0, 1, 1, 0, 1, 1, 1]' : 0.0887539}

out:
 ["{'[0, 2, 0, 4, 6, 6, 0, 1, 0, 23, 25, 0, 1, 1, 0, 1, 1, 1]' : 0.090137}", "{'[0, 2, 0, 4, 6, 6, 0, 1, 0, 23, 25, 0, 1, 1, 0, 1, 1, 1]' : 0.0887098}", "{'[0, 2, 0, 4, 6, 6, 0, 1, 0, 23, 25, 0, 1, 1, 0, 1, 1, 1]' : 0.088639}", "{'[0, 2, 0, 4, 6, 6, 0, 1, 0, 23, 25, 0, 1, 1, 0, 1, 1, 1]' : 0.0890911}", "{'[0, 2, 0, 4, 6, 6, 0, 1, 0, 23, 25, 0, 1, 1, 0, 1, 1, 1]' : 0.0886819}", "{'[0, 2, 0, 4, 6, 6, 0, 1, 0, 23, 25, 0, 1, 1, 0, 1, 1, 1]' : 0.0886641}", "{'[0, 2, 0, 4, 6, 6, 0, 1, 0, 23, 25, 0, 1, 1, 0, 1, 1, 1]' : 0.0886559}", "{'[0, 2, 0, 4, 6, 6, 0, 1, 0, 23, 25, 0, 1, 1, 0, 1, 1, 1]' : 0.088675}", "{'[0, 2, 0, 4, 6, 6, 0, 1, 0, 23, 25, 0, 1, 1, 0, 1, 1, 1]' : 0.0886469}", "{'[0, 2, 0, 4, 6, 6, 0, 1, 0, 23, 25, 0, 1, 1, 0, 1, 1, 1]' : 0.08866}", "{'[0, 2, 0, 4, 6, 6, 0, 1, 0, 23, 25, 0, 1, 1, 0, 1, 1, 1]' : 0.088629}", "{'[0, 2, 0, 4, 6, 6, 0, 1, 0, 23, 25, 0, 1, 1, 0, 1, 1, 1]' : 0.088768}", "{'[0, 2, 0, 4, 6, 6, 0, 1, 0, 23, 25, 0, 1, 1, 0, 1, 1, 1]' : 0.088686}", "{'[0, 2, 0, 4, 6, 6, 0, 1, 0, 23, 25, 0, 1, 1, 0, 1, 1, 1]' : 0.088819}", "{'[0, 2, 0, 4, 6, 6, 0, 1, 0, 23, 25, 0, 1, 1, 0, 1, 1, 1]' : 0.088728}", "{'[0, 2, 0, 4, 6, 6, 0, 1, 0, 23, 25, 0, 1, 1, 0, 1, 1, 1]' : 0.0886409}", "{'[0, 2, 0, 4, 6, 6, 0, 1, 0, 23, 25, 0, 1, 1, 0, 1, 1, 1]' : 0.088716}", "{'[0, 2, 0, 4, 6, 6, 0, 1, 0, 23, 25, 0, 1, 1, 0, 1, 1, 1]' : 0.0886521}", "{'[0, 2, 0, 4, 6, 6, 0, 1, 0, 23, 25, 0, 1, 1, 0, 1, 1, 1]' : 0.0887179}", "{'[0, 2, 0, 4, 6, 6, 0, 1, 0, 23, 25, 0, 1, 1, 0, 1, 1, 1]' : 0.088722}", "{'[0, 2, 0, 4, 6, 6, 0, 1, 0, 23, 25, 0, 1, 1, 0, 1, 1, 1]' : 0.089046}", "{'[0, 2, 0, 4, 6, 6, 0, 1, 0, 23, 25, 0, 1, 1, 0, 1, 1, 1]' : 0.088696}", "{'[0, 2, 0, 4, 6, 6, 0, 1, 0, 23, 25, 0, 1, 1, 0, 1, 1, 1]' : 0.088733}", "{'[0, 2, 0, 4, 6, 6, 0, 1, 0, 23, 25, 0, 1, 1, 0, 1, 1, 1]' : 0.089684}", "{'[0, 2, 0, 4, 6, 6, 0, 1, 0, 23, 25, 0, 1, 1, 0, 1, 1, 1]' : 0.088901}", "{'[0, 2, 0, 4, 6, 6, 0, 1, 0, 23, 25, 0, 1, 1, 0, 1, 1, 1]' : 0.088784}", "{'[0, 2, 0, 4, 6, 6, 0, 1, 0, 23, 25, 0, 1, 1, 0, 1, 1, 1]' : 0.08867}", "{'[0, 2, 0, 4, 6, 6, 0, 1, 0, 23, 25, 0, 1, 1, 0, 1, 1, 1]' : 0.088697}", "{'[0, 2, 0, 4, 6, 6, 0, 1, 0, 23, 25, 0, 1, 1, 0, 1, 1, 1]' : 0.088798}", "{'[0, 2, 0, 4, 6, 6, 0, 1, 0, 23, 25, 0, 1, 1, 0, 1, 1, 1]' : 0.0887539}"]
returning from 'run': {'[0, 2, 0, 4, 6, 6, 0, 1, 0, 23, 25, 0, 1, 1, 0, 1, 1, 1]': ([0.090137, 0.0887098, 0.088639, 0.0890911, 0.0886819, 0.0886641, 0.0886559, 0.088675, 0.0886469, 0.08866, 0.088629, 0.088768, 0.088686, 0.088819, 0.088728, 0.0886409, 0.088716, 0.0886521, 0.0887179, 0.088722, 0.089046, 0.088696, 0.088733, 0.089684, 0.088901, 0.088784, 0.08867, 0.088697, 0.088798, 0.0887539], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.090137, 0.0887098, 0.088639, 0.0890911, 0.0886819, 0.0886641, 0.0886559, 0.088675, 0.0886469, 0.08866, 0.088629, 0.088768, 0.088686, 0.088819, 0.088728, 0.0886409, 0.088716, 0.0886521, 0.0887179, 0.088722, 0.089046, 0.088696, 0.088733, 0.089684, 0.088901, 0.088784, 0.08867, 0.088697, 0.088798, 0.0887539], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 0, 4, 6, 6, 0, 1, 0, 23, 25, 0, 1, 1, 0, 1, 1, 1]': ([0.090137, 0.0887098, 0.088639, 0.0890911, 0.0886819, 0.0886641, 0.0886559, 0.088675, 0.0886469, 0.08866, 0.088629, 0.088768, 0.088686, 0.088819, 0.088728, 0.0886409, 0.088716, 0.0886521, 0.0887179, 0.088722, 0.089046, 0.088696, 0.088733, 0.089684, 0.088901, 0.088784, 0.08867, 0.088697, 0.088798, 0.0887539], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [6, 2, 1, 0, 1, 0, 0, 8, 23, 0, 13, 0, 0, 0, 0, 1]
Fixed Factors: {'T2_J': 6, 'VEC1': 1}
Testing candidate 29: [6, 2, 1, 0, 6, 1, 0, 0, 8, 23, 0, 13, 0, 0, 0, 0, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	5
        Additions: 		2648
        Multiplications: 	800
        Divisions: 		0
        Logical: 		0
        Reads: 			4225
        Writes: 		484
        Comparisons:		19
        Gotos: 			0
        
digraph CFG {
	14828518 [label="14828518  y[i]=0.0;...",shape=box];
	14828518 -> _JOIN_14828519;
	14908416 [label="14908416  register int cbv_7, cbv_8;...",shape=box];
	ForLoop14881759 [label="ForLoop14881759  for (kk=kkk; kk<=min(ny-1,kkk+48); kk=kk+16) {...",shape=box];
	ForLoop14881759 -> 14881283;
	ForLoop14881759 -> _JOIN_14881759;
	14881179 [label="14881179  tmp[i]=0;...",shape=box];
	14881179 -> ForLoop14881251;
	ForLoop14869170 [label="ForLoop14869170  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop14869170 -> ForLoop14869168;
	ForLoop14869170 -> _JOIN_14869170;
	ForLoop14881757 [label="ForLoop14881757  for (k=cbv_7; k<=cbv_8; k=k+1) ...",shape=box];
	ForLoop14881757 -> 14881756;
	ForLoop14881757 -> _JOIN_14881757;
	14828199 [label="14828199  int i;...",shape=box];
	14835452 [label="14835452  double x_copy;...",shape=box];
	_JOIN_14881689 [label="_JOIN_14881689None...",shape=box];
	_JOIN_14881689 -> 14908416;
	_JOIN_14881757 [label="_JOIN_14881757None...",shape=box];
	_JOIN_14881757 -> _JOIN_14881759;
	14868221 [label="14868221  tmp[i]=0;...",shape=box];
	14907839 [label="14907839  register int cbv_3, cbv_4;...",shape=box];
	_JOIN_14828450 [label="_JOIN_14828450None...",shape=box];
	_JOIN_14828450 -> 14828641;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 14828199;
	_JOIN_14881250 [label="_JOIN_14881250None...",shape=box];
	_JOIN_14881250 -> _JOIN_14881251;
	14842182 [label="14842182  int i;...",shape=box];
	14842182 -> ForLoop14881068;
	14881283 [label="14881283  int k;...",shape=box];
	_JOIN_14869170 [label="_JOIN_14869170None...",shape=box];
	_JOIN_14869170 -> ForLoop14881066;
	_JOIN_14869166 [label="_JOIN_14869166None...",shape=box];
	_JOIN_14869166 -> _JOIN_14869168;
	_JOIN_14869168 [label="_JOIN_14869168None...",shape=box];
	_JOIN_14869168 -> _JOIN_14869170;
	ForLoop14881689 [label="ForLoop14881689  for (k=kk; k<=cbv_6; k=k+14) {...",shape=box];
	ForLoop14881689 -> 14881323;
	ForLoop14881689 -> _JOIN_14881689;
	ForLoop14880395 [label="ForLoop14880395  for (k=kk; k<=cbv_2; k=k+14) {...",shape=box];
	ForLoop14880395 -> 14869265;
	ForLoop14880395 -> _JOIN_14880395;
	14828641 [label="14828641  register int cbv_2, cbv_3;...",shape=box];
	_JOIN_14881251 [label="_JOIN_14881251None...",shape=box];
	_JOIN_14881251 -> ForLoop14881760;
	14828376 [label="14828376  y[i]=0.0;...",shape=box];
	ForLoop14881068 [label="ForLoop14881068  for (i=ii; i<=min(nx-1,ii+511)-23; i=i+24) {...",shape=box];
	ForLoop14881068 -> 14868221;
	ForLoop14881068 -> _JOIN_14881068;
	ForLoop14881251 [label="ForLoop14881251  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) ...",shape=box];
	ForLoop14881251 -> ForLoop14881250;
	ForLoop14881251 -> _JOIN_14881251;
	ForLoop14881250 [label="ForLoop14881250  for (jj=jjj; jj<=min(ny-1,jjj+2016); jj=jj+32) {...",shape=box];
	ForLoop14881250 -> 14907922;
	ForLoop14881250 -> _JOIN_14881250;
	_JOIN_14831855 [label="_JOIN_14831855None...",shape=box];
	ForLoop14881062 [label="ForLoop14881062  for (k=cbv_3; k<=cbv_4; k=k+1) {...",shape=box];
	ForLoop14881062 -> 14880462;
	ForLoop14881062 -> _JOIN_14881062;
	ForLoop14881066 [label="ForLoop14881066  for (kkk=0; kkk<=ny-1; kkk=kkk+64) {...",shape=box];
	ForLoop14881066 -> ForLoop14881064;
	ForLoop14881066 -> _JOIN_14881066;
	_JOIN_14880395 [label="_JOIN_14880395None...",shape=box];
	_JOIN_14880395 -> 14907839;
	ForLoop14881064 [label="ForLoop14881064  for (kk=kkk; kk<=min(ny-1,kkk+48); kk=kk+16) {...",shape=box];
	ForLoop14881064 -> 14869202;
	ForLoop14881064 -> _JOIN_14881064;
	_JOIN_14828519 [label="_JOIN_14828519None...",shape=box];
	_JOIN_14828519 -> 14835452;
	_JOIN_14881759 [label="_JOIN_14881759None...",shape=box];
	_JOIN_14881759 -> _JOIN_14881760;
	ForLoop14881762 [label="ForLoop14881762  for (i=(min(nx-1,ii+511))-(((min(nx-1,ii+511))-(ii)+1)%24)+1; i<=min(nx-1,ii+511); i=i+1) {...",shape=box];
	ForLoop14881762 -> 14881179;
	ForLoop14881762 -> _JOIN_14881762;
	ForLoop14869168 [label="ForLoop14869168  for (jj=jjj; jj<=min(ny-1,jjj+2016); jj=jj+32) {...",shape=box];
	ForLoop14869168 -> 14895982;
	ForLoop14869168 -> _JOIN_14869168;
	ForLoop14881760 [label="ForLoop14881760  for (kkk=0; kkk<=ny-1; kkk=kkk+64) ...",shape=box];
	ForLoop14881760 -> ForLoop14881759;
	ForLoop14881760 -> _JOIN_14881760;
	ForLoop14869166 [label="ForLoop14869166  for (j=jj; j<=cbv_1; j=j+1) {...",shape=box];
	ForLoop14869166 -> 14868497;
	ForLoop14869166 -> _JOIN_14869166;
	ForLoop14828519 [label="ForLoop14828519  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop14828519 -> 14828518;
	ForLoop14828519 -> _JOIN_14828519;
	14907922 [label="14907922  register int cbv_5;...",shape=box];
	14895982 [label="14895982  register int cbv_1;...",shape=box];
	14881756 [label="14881756  y[k]=y[k]+A[i*ny+k]*tmp[i];...",shape=box];
	14881756 -> _JOIN_14881757;
	ForLoop14828450 [label="ForLoop14828450  for (i=0; i<=cbv_1; i=i+9) {...",shape=box];
	ForLoop14828450 -> 14828376;
	ForLoop14828450 -> _JOIN_14828450;
	_JOIN_14881249 [label="_JOIN_14881249None...",shape=box];
	_JOIN_14881249 -> _JOIN_14881250;
	_JOIN_14881760 [label="_JOIN_14881760None...",shape=box];
	_JOIN_14881760 -> _JOIN_14881762;
	14869202 [label="14869202  int k;...",shape=box];
	_JOIN_14881762 [label="_JOIN_14881762None...",shape=box];
	_JOIN_14881762 -> _JOIN_14831855;
	14869265 [label="14869265  y[k]=y[k]+A[i*ny+k]*tmp[i];...",shape=box];
	14868497 [label="14868497  tmp[i]=tmp[i]+A[i*ny+j]*x[j];...",shape=box];
	14881248 [label="14881248  tmp[i]=tmp[i]+A[i*ny+j]*x[j];...",shape=box];
	14881248 -> _JOIN_14881249;
	ForLoop14831855 [label="ForLoop14831855  for (ii=0; ii<=nx-1; ii=ii+512) {...",shape=box];
	ForLoop14831855 -> 14842182;
	ForLoop14831855 -> _JOIN_14831855;
	_JOIN_14881068 [label="_JOIN_14881068None...",shape=box];
	_JOIN_14881068 -> ForLoop14881762;
	14880462 [label="14880462  y[k]=y[k]+A[i*ny+k]*tmp[i]expected=9369846271501.798828
actual=9369846271501.798828
;...",shape=box];
	_JOIN_14881066 [label="_JOIN_14881066None...",shape=box];
	_JOIN_14881066 -> _JOIN_14881068;
	_JOIN_14881064 [label="_JOIN_14881064None...",shape=box];
	_JOIN_14881064 -> _JOIN_14881066;
	ForLoop14881249 [label="ForLoop14881249  for (j=jj; j<=cbv_5; j=j+1) ...",shape=box];
	ForLoop14881249 -> 14881248;
	ForLoop14881249 -> _JOIN_14881249;
	_JOIN_14881062 [label="_JOIN_14881062None...",shape=box];
	_JOIN_14881062 -> _JOIN_14881064;
	14881323 [label="14881323  y[k]=y[k]+A[i*ny+k]*tmp[i];...",shape=box];

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest67.exe __orio_perftest67.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest67.exe  
{'[6, 2, 1, 0, 6, 1, 0, 0, 8, 23, 0, 13, 0, 0, 0, 0, 1, 1]' : 0.131742}
{'[6, 2, 1, 0, 6, 1, 0, 0, 8, 23, 0, 13, 0, 0, 0, 0, 1, 1]' : 0.131481}
{'[6, 2, 1, 0, 6, 1, 0, 0, 8, 23, 0, 13, 0, 0, 0, 0, 1, 1]' : 0.131526}
{'[6, 2, 1, 0, 6, 1, 0, 0, 8, 23, 0, 13, 0, 0, 0, 0, 1, 1]' : 0.131583}
{'[6, 2, 1, 0, 6, 1, 0, 0, 8, 23, 0, 13, 0, 0, 0, 0, 1, 1]' : 0.131514}
{'[6, 2, 1, 0, 6, 1, 0, 0, 8, 23, 0, 13, 0, 0, 0, 0, 1, 1]' : 0.131753}
{'[6, 2, 1, 0, 6, 1, 0, 0, 8, 23, 0, 13, 0, 0, 0, 0, 1, 1]' : 0.131503}
{'[6, 2, 1, 0, 6, 1, 0, 0, 8, 23, 0, 13, 0, 0, 0, 0, 1, 1]' : 0.131426}
{'[6, 2, 1, 0, 6, 1, 0, 0, 8, 23, 0, 13, 0, 0, 0, 0, 1, 1]' : 0.131667}
{'[6, 2, 1, 0, 6, 1, 0, 0, 8, 23, 0, 13, 0, 0, 0, 0, 1, 1]' : 0.131638}
{'[6, 2, 1, 0, 6, 1, 0, 0, 8, 23, 0, 13, 0, 0, 0, 0, 1, 1]' : 0.131496}
{'[6, 2, 1, 0, 6, 1, 0, 0, 8, 23, 0, 13, 0, 0, 0, 0, 1, 1]' : 0.175}
{'[6, 2, 1, 0, 6, 1, 0, 0, 8, 23, 0, 13, 0, 0, 0, 0, 1, 1]' : 0.135973}
{'[6, 2, 1, 0, 6, 1, 0, 0, 8, 23, 0, 13, 0, 0, 0, 0, 1, 1]' : 0.131576}
{'[6, 2, 1, 0, 6, 1, 0, 0, 8, 23, 0, 13, 0, 0, 0, 0, 1, 1]' : 0.131476}
{'[6, 2, 1, 0, 6, 1, 0, 0, 8, 23, 0, 13, 0, 0, 0, 0, 1, 1]' : 0.131531}
{'[6, 2, 1, 0, 6, 1, 0, 0, 8, 23, 0, 13, 0, 0, 0, 0, 1, 1]' : 0.131421}
{'[6, 2, 1, 0, 6, 1, 0, 0, 8, 23, 0, 13, 0, 0, 0, 0, 1, 1]' : 0.131603}
{'[6, 2, 1, 0, 6, 1, 0, 0, 8, 23, 0, 13, 0, 0, 0, 0, 1, 1]' : 0.131544}
{'[6, 2, 1, 0, 6, 1, 0, 0, 8, 23, 0, 13, 0, 0, 0, 0, 1, 1]' : 0.131446}
{'[6, 2, 1, 0, 6, 1, 0, 0, 8, 23, 0, 13, 0, 0, 0, 0, 1, 1]' : 0.13167}
{'[6, 2, 1, 0, 6, 1, 0, 0, 8, 23, 0, 13, 0, 0, 0, 0, 1, 1]' : 0.131572}
{'[6, 2, 1, 0, 6, 1, 0, 0, 8, 23, 0, 13, 0, 0, 0, 0, 1, 1]' : 0.131596}
{'[6, 2, 1, 0, 6, 1, 0, 0, 8, 23, 0, 13, 0, 0, 0, 0, 1, 1]' : 0.131452}
{'[6, 2, 1, 0, 6, 1, 0, 0, 8, 23, 0, 13, 0, 0, 0, 0, 1, 1]' : 0.131504}
{'[6, 2, 1, 0, 6, 1, 0, 0, 8, 23, 0, 13, 0, 0, 0, 0, 1, 1]' : 0.131578}
{'[6, 2, 1, 0, 6, 1, 0, 0, 8, 23, 0, 13, 0, 0, 0, 0, 1, 1]' : 0.131739}
{'[6, 2, 1, 0, 6, 1, 0, 0, 8, 23, 0, 13, 0, 0, 0, 0, 1, 1]' : 0.131622}
{'[6, 2, 1, 0, 6, 1, 0, 0, 8, 23, 0, 13, 0, 0, 0, 0, 1, 1]' : 0.131533}
{'[6, 2, 1, 0, 6, 1, 0, 0, 8, 23, 0, 13, 0, 0, 0, 0, 1, 1]' : 0.131443}

out:
 ["{'[6, 2, 1, 0, 6, 1, 0, 0, 8, 23, 0, 13, 0, 0, 0, 0, 1, 1]' : 0.131742}", "{'[6, 2, 1, 0, 6, 1, 0, 0, 8, 23, 0, 13, 0, 0, 0, 0, 1, 1]' : 0.131481}", "{'[6, 2, 1, 0, 6, 1, 0, 0, 8, 23, 0, 13, 0, 0, 0, 0, 1, 1]' : 0.131526}", "{'[6, 2, 1, 0, 6, 1, 0, 0, 8, 23, 0, 13, 0, 0, 0, 0, 1, 1]' : 0.131583}", "{'[6, 2, 1, 0, 6, 1, 0, 0, 8, 23, 0, 13, 0, 0, 0, 0, 1, 1]' : 0.131514}", "{'[6, 2, 1, 0, 6, 1, 0, 0, 8, 23, 0, 13, 0, 0, 0, 0, 1, 1]' : 0.131753}", "{'[6, 2, 1, 0, 6, 1, 0, 0, 8, 23, 0, 13, 0, 0, 0, 0, 1, 1]' : 0.131503}", "{'[6, 2, 1, 0, 6, 1, 0, 0, 8, 23, 0, 13, 0, 0, 0, 0, 1, 1]' : 0.131426}", "{'[6, 2, 1, 0, 6, 1, 0, 0, 8, 23, 0, 13, 0, 0, 0, 0, 1, 1]' : 0.131667}", "{'[6, 2, 1, 0, 6, 1, 0, 0, 8, 23, 0, 13, 0, 0, 0, 0, 1, 1]' : 0.131638}", "{'[6, 2, 1, 0, 6, 1, 0, 0, 8, 23, 0, 13, 0, 0, 0, 0, 1, 1]' : 0.131496}", "{'[6, 2, 1, 0, 6, 1, 0, 0, 8, 23, 0, 13, 0, 0, 0, 0, 1, 1]' : 0.175}", "{'[6, 2, 1, 0, 6, 1, 0, 0, 8, 23, 0, 13, 0, 0, 0, 0, 1, 1]' : 0.135973}", "{'[6, 2, 1, 0, 6, 1, 0, 0, 8, 23, 0, 13, 0, 0, 0, 0, 1, 1]' : 0.131576}", "{'[6, 2, 1, 0, 6, 1, 0, 0, 8, 23, 0, 13, 0, 0, 0, 0, 1, 1]' : 0.131476}", "{'[6, 2, 1, 0, 6, 1, 0, 0, 8, 23, 0, 13, 0, 0, 0, 0, 1, 1]' : 0.131531}", "{'[6, 2, 1, 0, 6, 1, 0, 0, 8, 23, 0, 13, 0, 0, 0, 0, 1, 1]' : 0.131421}", "{'[6, 2, 1, 0, 6, 1, 0, 0, 8, 23, 0, 13, 0, 0, 0, 0, 1, 1]' : 0.131603}", "{'[6, 2, 1, 0, 6, 1, 0, 0, 8, 23, 0, 13, 0, 0, 0, 0, 1, 1]' : 0.131544}", "{'[6, 2, 1, 0, 6, 1, 0, 0, 8, 23, 0, 13, 0, 0, 0, 0, 1, 1]' : 0.131446}", "{'[6, 2, 1, 0, 6, 1, 0, 0, 8, 23, 0, 13, 0, 0, 0, 0, 1, 1]' : 0.13167}", "{'[6, 2, 1, 0, 6, 1, 0, 0, 8, 23, 0, 13, 0, 0, 0, 0, 1, 1]' : 0.131572}", "{'[6, 2, 1, 0, 6, 1, 0, 0, 8, 23, 0, 13, 0, 0, 0, 0, 1, 1]' : 0.131596}", "{'[6, 2, 1, 0, 6, 1, 0, 0, 8, 23, 0, 13, 0, 0, 0, 0, 1, 1]' : 0.131452}", "{'[6, 2, 1, 0, 6, 1, 0, 0, 8, 23, 0, 13, 0, 0, 0, 0, 1, 1]' : 0.131504}", "{'[6, 2, 1, 0, 6, 1, 0, 0, 8, 23, 0, 13, 0, 0, 0, 0, 1, 1]' : 0.131578}", "{'[6, 2, 1, 0, 6, 1, 0, 0, 8, 23, 0, 13, 0, 0, 0, 0, 1, 1]' : 0.131739}", "{'[6, 2, 1, 0, 6, 1, 0, 0, 8, 23, 0, 13, 0, 0, 0, 0, 1, 1]' : 0.131622}", "{'[6, 2, 1, 0, 6, 1, 0, 0, 8, 23, 0, 13, 0, 0, 0, 0, 1, 1]' : 0.131533}", "{'[6, 2, 1, 0, 6, 1, 0, 0, 8, 23, 0, 13, 0, 0, 0, 0, 1, 1]' : 0.131443}"]
returning from 'run': {'[6, 2, 1, 0, 6, 1, 0, 0, 8, 23, 0, 13, 0, 0, 0, 0, 1, 1]': ([0.131742, 0.131481, 0.131526, 0.131583, 0.131514, 0.131753, 0.131503, 0.131426, 0.131667, 0.131638, 0.131496, 0.175, 0.135973, 0.131576, 0.131476, 0.131531, 0.131421, 0.131603, 0.131544, 0.131446, 0.13167, 0.131572, 0.131596, 0.131452, 0.131504, 0.131578, 0.131739, 0.131622, 0.131533, 0.131443], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.131742, 0.131481, 0.131526, 0.131583, 0.131514, 0.131753, 0.131503, 0.131426, 0.131667, 0.131638, 0.131496, 0.175, 0.135973, 0.131576, 0.131476, 0.131531, 0.131421, 0.131603, 0.131544, 0.131446, 0.13167, 0.131572, 0.131596, 0.131452, 0.131504, 0.131578, 0.131739, 0.131622, 0.131533, 0.131443], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[6, 2, 1, 0, 6, 1, 0, 0, 8, 23, 0, 13, 0, 0, 0, 0, 1, 1]': ([0.131742, 0.131481, 0.131526, 0.131583, 0.131514, 0.131753, 0.131503, 0.131426, 0.131667, 0.131638, 0.131496, 0.175, 0.135973, 0.131576, 0.131476, 0.131531, 0.131421, 0.131603, 0.131544, 0.131446, 0.13167, 0.131572, 0.131596, 0.131452, 0.131504, 0.131578, 0.131739, 0.131622, 0.131533, 0.131443], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [1, 6, 2, 4, 1, 0, 1, 23, 28, 22, 0, 0, 0, 1, 0, 0]
Fixed Factors: {'T2_J': 6, 'VEC1': 1}
Testing candidate 30: [1, 6, 2, 4, 6, 1, 0, 1, 23, 28, 22, 0, 0, 0, 1, 0, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	80
        Max loop nest depth: 	6
        Additions: 		7193
        Multiplications: 	1920
        Divisions: 		0
        Logical: 		0
        Reads: 			11056
        Writes: 		1238
        Comparisons:		80
        Gotos: 			0
        
digraph CFG {
	ForLoop15032392 [label="ForLoop15032392  for (i=(min(nx-1,ii+15))-(((min(nx-1,ii+15))-(ii)+1)%29)+1; i<=min(nx-1,ii+15); i=i+1) {...",shape=box];
	ForLoop15032392 -> 15031306;
	ForLoop15032392 -> _JOIN_15032392;
	ForLoop14913037 [label="ForLoop14913037  for (iii=0; iii<=nx-1; iii=iii+512) ...",shape=box];
	ForLoop14913037 -> ForLoop14913036;
	ForLoop14913037 -> _JOIN_14913037;
	ForLoop14913036 [label="ForLoop14913036  for (ii=iii; ii<=min(nx-1,iii+496); ii=ii+16) {...",shape=box];
	ForLoop14913036 -> 14936189;
	ForLoop14913036 -> _JOIN_14913036;
	ForLoop15030290 [label="ForLoop15030290  for (kt=kk; kt<=min(ny-1,kk+31)-7; kt=kt+8) {...",shape=box];
	ForLoop15030290 -> 15021720;
	ForLoop15030290 -> _JOIN_15030290;
	15032109 [label="15032109  y_copy[(kt-kk)]=y_copy[(kt-kk)]+A[i*ny+kt]*tmp[i];...",shape=box];
	15032063 [label="15032063  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	15032063 -> ForLoop15032356;
	ForLoop15031998 [label="ForLoop15031998  for (j=(min(ny-1,jj+511))-(((min(ny-1,jj+511))-(jj)+1)%23)+1; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	ForLoop15031998 -> 15031997;
	ForLoop15031998 -> _JOIN_15031998;
	ForLoop15032390 [label="ForLoop15032390  for (kkk=0; kkk<=ny-1; kkk=kkk+64) ...",shape=box];
	ForLoop15032390 -> ForLoop15032389;
	ForLoop15032390 -> _JOIN_15032390;
	_JOIN_14909306 [label="_JOIN_14909306None...",shape=box];
	_JOIN_14909306 -> 14909632;
	_JOIN_15032389 [label="_JOIN_15032389None...",shape=box];
	_JOIN_15032389 -> _JOIN_15032390;
	_JOIN_15030290 [label="_JOIN_15030290None...",shape=box];
	_JOIN_15030290 -> 15030321;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 14908695;
	ForLoop14909375 [label="ForLoop14909375  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop14909375 -> 14909374;
	ForLoop14909375 -> _JOIN_14909375;
	15019926 [label="15019926  tmp[i]=tmp[i]+A[i*ny+j]*x[j];...",shape=box];
	ForLoop15032356 [label="ForLoop15032356  for (kt=kk; kt<=min(ny-1,kk+31)-7; kt=kt+8) {...",shape=box];
	ForLoop15032356 -> 15032109;
	ForLoop15032356 -> _JOIN_15032356;
	_JOIN_15032000 [label="_JOIN_15032000None...",shape=box];
	_JOIN_15032000 -> _JOIN_15032001;
	ForLoop15031930 [label="ForLoop15031930  for (j=jj; j<=min(ny-1,jj+511)-22; j=j+23) {...",shape=box];
	ForLoop15031930 -> 15031378;
	ForLoop15031930 -> _JOIN_15031930;
	_JOIN_15031193 [label="_JOIN_15031193None...",shape=box];
	_JOIN_15031193 -> _JOIN_15031195;
	ForLoop15019859 [label="ForLoop15019859  for (j=jj; j<=min(ny-1,jj+511)-22; j=j+23) {...",shape=box];
	ForLoop15019859 -> 14997551;
	ForLoop15019859 -> _JOIN_15019859;
	15031306 [label="15031306  tmp[i]=0;...",shape=box];
	15031306 -> ForLoop15032001;
	14909632 [label="14909632  register int cbv_2, cbv_3;...",shape=box];
	15021720 [label="15021720  y_copy[(kt-kk)]=y_copy[(kt-kk)]+A[i*ny+kt]*tmp[i];...",shape=box];
	14997483 [label="14997483  int j;...",shape=box];
	ForLoop15020744 [label="ForLoop15020744  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop15020744 -> ForLoop15020742;
	ForLoop15020744 -> _JOIN_15020744;
	ForLoop15020742 [label="ForLoop15020742  for (jj=jjj; jj<=min(ny-1,jjj+1536); jj=jj+512) {...",shape=box];
	ForLoop15020742 -> 14997483;
	ForLoop15020742 -> _JOIN_15020742;
	ForLoop15020740 [label="ForLoop15020740  for (j=(min(ny-1,jj+511))-(((min(ny-1,jj+511))-(jj)+1)%23)+1; j<=min(ny-1,jj+511); j=j+1) {...",shape=box];
	ForLoop15020740 -> 15019926;
	ForLoop15020740 -> _JOIN_15020740;
	_JOIN_15031195 [label="_JOIN_15031195None...",shape=box];
	_JOIN_15031195 -> ForLoop15032392;
	ForLoop15032001 [label="ForLoop15032001  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) ...",shape=box];
	ForLoop15032001 -> ForLoop15032000;
	ForLoop15032001 -> _JOIN_15032001;
	ForLoop15032000 [label="ForLoop15032000  for (jj=jjj; jj<=min(ny-1,jjj+1536); jj=jj+512) {...",shape=box];
	ForLoop15032000 -> 15031338;
	ForLoop15032000 -> _JOIN_15032000;
	_JOIN_15031191 [label="_JOIN_15031191None...",shape=box];
	_JOIN_15031191 -> _JOIN_15031193;
	15030321 [label="15030321  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	ForLoop15032389 [label="ForLoop15032389  for (kk=kkk; kk<=min(ny-1,kkk+32); kk=kk+32) {...",shape=box];
	ForLoop15032389 -> 15032063;
	ForLoop15032389 -> _JOIN_15032389;
	14919044 [label="14919044  double x_copy;...",shape=box];
	_JOIN_14909375 [label="_JOIN_14909375None...",shape=box];
	_JOIN_14909375 -> 14919044;
	_JOIN_15032392 [label="_JOIN_15032392None...",shape=box];
	_JOIN_15032392 -> _JOIN_14913036;
	15032387 [label="15032387  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	15032387 -> _JOIN_15032389;
	_JOIN_15032390 [label="_JOIN_15032390None...",shape=box];
	_JOIN_15032390 -> _JOIN_15032392;
	ForLoop15031191 [label="ForLoop15031191  for (kk=kkk; kk<=min(ny-1,kkk+32); kk=kk+32) {...",shape=box];
	ForLoop15031191 -> 15020806;
	ForLoop15031191 -> _JOIN_15031191;
	_JOIN_15032001 [label="_JOIN_15032001None...",shape=box];
	_JOIN_15032001 -> ForLoop15032390;
	ForLoop15031193 [label="ForLoop15031193  for (kkk=0; kkk<=ny-1; kkk=kkk+64) {...",shape=box];
	ForLoop15031193 -> ForLoop15031191;
	ForLoop15031193 -> _JOIN_15031193;
	ForLoop15031195 [labexpected=9369846271501.798828
actual=9369846271501.798828
el="ForLoop15031195  for (i=ii; i<=min(nx-1,ii+15)-28; i=i+29) {...",shape=box];
	ForLoop15031195 -> 14997199;
	ForLoop15031195 -> _JOIN_15031195;
	_JOIN_15019859 [label="_JOIN_15019859None...",shape=box];
	_JOIN_15019859 -> ForLoop15020740;
	15020806 [label="15020806  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	_JOIN_15032356 [label="_JOIN_15032356None...",shape=box];
	_JOIN_15032356 -> 15032387;
	15031997 [label="15031997  tmp[i]=tmp[i]+A[i*ny+j]*x[j];...",shape=box];
	15031997 -> _JOIN_15031998;
	_JOIN_14913037 [label="_JOIN_14913037None...",shape=box];
	_JOIN_14913036 [label="_JOIN_14913036None...",shape=box];
	_JOIN_14913036 -> _JOIN_14913037;
	15031378 [label="15031378  tmp[i]=tmp[i]+A[i*ny+j]*x[j];...",shape=box];
	14997551 [label="14997551  tmp[i]=tmp[i]+A[i*ny+j]*x[j];...",shape=box];
	_JOIN_15031930 [label="_JOIN_15031930None...",shape=box];
	_JOIN_15031930 -> ForLoop15031998;
	14997199 [label="14997199  tmp[i]=0;...",shape=box];
	14936189 [label="14936189  int i;...",shape=box];
	14936189 -> ForLoop15031195;
	ForLoop14909306 [label="ForLoop14909306  for (i=0; i<=cbv_1; i=i+24) {...",shape=box];
	ForLoop14909306 -> 14909097;
	ForLoop14909306 -> _JOIN_14909306;
	14909097 [label="14909097  y[i]=0.0;...",shape=box];
	_JOIN_15031998 [label="_JOIN_15031998None...",shape=box];
	_JOIN_15031998 -> _JOIN_15032000;
	14909374 [label="14909374  y[i]=0.0;...",shape=box];
	14909374 -> _JOIN_14909375;
	14908695 [label="14908695  int i;...",shape=box];
	_JOIN_15020742 [label="_JOIN_15020742None...",shape=box];
	_JOIN_15020742 -> _JOIN_15020744;
	_JOIN_15020740 [label="_JOIN_15020740None...",shape=box];
	_JOIN_15020740 -> _JOIN_15020742;
	15031338 [label="15031338  int j;...",shape=box];
	15031338 -> ForLoop15031930;
	_JOIN_15020744 [label="_JOIN_15020744None...",shape=box];
	_JOIN_15020744 -> ForLoop15031193;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest68.exe __orio_perftest68.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest68.exe  
{'[1, 6, 2, 4, 6, 1, 0, 1, 23, 28, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.223334}
{'[1, 6, 2, 4, 6, 1, 0, 1, 23, 28, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.223517}
{'[1, 6, 2, 4, 6, 1, 0, 1, 23, 28, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.224266}
{'[1, 6, 2, 4, 6, 1, 0, 1, 23, 28, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.223353}
{'[1, 6, 2, 4, 6, 1, 0, 1, 23, 28, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.223274}
{'[1, 6, 2, 4, 6, 1, 0, 1, 23, 28, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.223321}
{'[1, 6, 2, 4, 6, 1, 0, 1, 23, 28, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.223407}
{'[1, 6, 2, 4, 6, 1, 0, 1, 23, 28, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.223315}
{'[1, 6, 2, 4, 6, 1, 0, 1, 23, 28, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.223418}
{'[1, 6, 2, 4, 6, 1, 0, 1, 23, 28, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.2233}
{'[1, 6, 2, 4, 6, 1, 0, 1, 23, 28, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.223344}
{'[1, 6, 2, 4, 6, 1, 0, 1, 23, 28, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.224308}
{'[1, 6, 2, 4, 6, 1, 0, 1, 23, 28, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.223538}
{'[1, 6, 2, 4, 6, 1, 0, 1, 23, 28, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.223339}
{'[1, 6, 2, 4, 6, 1, 0, 1, 23, 28, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.223302}
{'[1, 6, 2, 4, 6, 1, 0, 1, 23, 28, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.223525}
{'[1, 6, 2, 4, 6, 1, 0, 1, 23, 28, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.223406}
{'[1, 6, 2, 4, 6, 1, 0, 1, 23, 28, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.223276}
{'[1, 6, 2, 4, 6, 1, 0, 1, 23, 28, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.22342}
{'[1, 6, 2, 4, 6, 1, 0, 1, 23, 28, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.223328}
{'[1, 6, 2, 4, 6, 1, 0, 1, 23, 28, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.224857}
{'[1, 6, 2, 4, 6, 1, 0, 1, 23, 28, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.223451}
{'[1, 6, 2, 4, 6, 1, 0, 1, 23, 28, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.223256}
{'[1, 6, 2, 4, 6, 1, 0, 1, 23, 28, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.223309}
{'[1, 6, 2, 4, 6, 1, 0, 1, 23, 28, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.223381}
{'[1, 6, 2, 4, 6, 1, 0, 1, 23, 28, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.223395}
{'[1, 6, 2, 4, 6, 1, 0, 1, 23, 28, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.223284}
{'[1, 6, 2, 4, 6, 1, 0, 1, 23, 28, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.223256}
{'[1, 6, 2, 4, 6, 1, 0, 1, 23, 28, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.223395}
{'[1, 6, 2, 4, 6, 1, 0, 1, 23, 28, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.224315}

out:
 ["{'[1, 6, 2, 4, 6, 1, 0, 1, 23, 28, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.223334}", "{'[1, 6, 2, 4, 6, 1, 0, 1, 23, 28, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.223517}", "{'[1, 6, 2, 4, 6, 1, 0, 1, 23, 28, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.224266}", "{'[1, 6, 2, 4, 6, 1, 0, 1, 23, 28, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.223353}", "{'[1, 6, 2, 4, 6, 1, 0, 1, 23, 28, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.223274}", "{'[1, 6, 2, 4, 6, 1, 0, 1, 23, 28, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.223321}", "{'[1, 6, 2, 4, 6, 1, 0, 1, 23, 28, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.223407}", "{'[1, 6, 2, 4, 6, 1, 0, 1, 23, 28, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.223315}", "{'[1, 6, 2, 4, 6, 1, 0, 1, 23, 28, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.223418}", "{'[1, 6, 2, 4, 6, 1, 0, 1, 23, 28, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.2233}", "{'[1, 6, 2, 4, 6, 1, 0, 1, 23, 28, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.223344}", "{'[1, 6, 2, 4, 6, 1, 0, 1, 23, 28, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.224308}", "{'[1, 6, 2, 4, 6, 1, 0, 1, 23, 28, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.223538}", "{'[1, 6, 2, 4, 6, 1, 0, 1, 23, 28, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.223339}", "{'[1, 6, 2, 4, 6, 1, 0, 1, 23, 28, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.223302}", "{'[1, 6, 2, 4, 6, 1, 0, 1, 23, 28, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.223525}", "{'[1, 6, 2, 4, 6, 1, 0, 1, 23, 28, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.223406}", "{'[1, 6, 2, 4, 6, 1, 0, 1, 23, 28, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.223276}", "{'[1, 6, 2, 4, 6, 1, 0, 1, 23, 28, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.22342}", "{'[1, 6, 2, 4, 6, 1, 0, 1, 23, 28, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.223328}", "{'[1, 6, 2, 4, 6, 1, 0, 1, 23, 28, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.224857}", "{'[1, 6, 2, 4, 6, 1, 0, 1, 23, 28, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.223451}", "{'[1, 6, 2, 4, 6, 1, 0, 1, 23, 28, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.223256}", "{'[1, 6, 2, 4, 6, 1, 0, 1, 23, 28, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.223309}", "{'[1, 6, 2, 4, 6, 1, 0, 1, 23, 28, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.223381}", "{'[1, 6, 2, 4, 6, 1, 0, 1, 23, 28, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.223395}", "{'[1, 6, 2, 4, 6, 1, 0, 1, 23, 28, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.223284}", "{'[1, 6, 2, 4, 6, 1, 0, 1, 23, 28, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.223256}", "{'[1, 6, 2, 4, 6, 1, 0, 1, 23, 28, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.223395}", "{'[1, 6, 2, 4, 6, 1, 0, 1, 23, 28, 22, 0, 0, 0, 1, 0, 1, 0]' : 0.224315}"]
returning from 'run': {'[1, 6, 2, 4, 6, 1, 0, 1, 23, 28, 22, 0, 0, 0, 1, 0, 1, 0]': ([0.223334, 0.223517, 0.224266, 0.223353, 0.223274, 0.223321, 0.223407, 0.223315, 0.223418, 0.2233, 0.223344, 0.224308, 0.223538, 0.223339, 0.223302, 0.223525, 0.223406, 0.223276, 0.22342, 0.223328, 0.224857, 0.223451, 0.223256, 0.223309, 0.223381, 0.223395, 0.223284, 0.223256, 0.223395, 0.224315], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.223334, 0.223517, 0.224266, 0.223353, 0.223274, 0.223321, 0.223407, 0.223315, 0.223418, 0.2233, 0.223344, 0.224308, 0.223538, 0.223339, 0.223302, 0.223525, 0.223406, 0.223276, 0.22342, 0.223328, 0.224857, 0.223451, 0.223256, 0.223309, 0.223381, 0.223395, 0.223284, 0.223256, 0.223395, 0.224315], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[1, 6, 2, 4, 6, 1, 0, 1, 23, 28, 22, 0, 0, 0, 1, 0, 1, 0]': ([0.223334, 0.223517, 0.224266, 0.223353, 0.223274, 0.223321, 0.223407, 0.223315, 0.223418, 0.2233, 0.223344, 0.224308, 0.223538, 0.223339, 0.223302, 0.223525, 0.223406, 0.223276, 0.22342, 0.223328, 0.224857, 0.223451, 0.223256, 0.223309, 0.223381, 0.223395, 0.223284, 0.223256, 0.223395, 0.224315], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [2, 2, 2, 0, 3, 1, 0, 10, 0, 5, 25, 0, 0, 2, 1, 0]
Fixed Factors: {'T2_J': 6, 'VEC1': 1}
Testing candidate 31: [2, 2, 2, 0, 6, 3, 1, 0, 10, 0, 5, 25, 0, 0, 2, 1, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		389
        Multiplications: 	132
        Divisions: 		0
        Logical: 		0
        Reads: 			970
        Writes: 		231
        Comparisons:		14
        Gotos: 			0
        
digraph CFG {
	_JOIN_15144485 [label="_JOIN_15144485None...",shape=box];
	_JOIN_15144485 -> _JOIN_15144486;
	ForLoop15143668 [label="ForLoop15143668  for (kt=kk; kt<=min(ny-1,kk+31)-31; kt=kt+32) {...",shape=box];
	ForLoop15143668 -> 15146886;
	ForLoop15143668 -> _JOIN_15143668;
	15103195 [label="15103195  y[i]=0.0;...",shape=box];
	15142691 [label="15142691  scv_60=scv_60+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	15142691 -> _JOIN_15142692;
	15156423 [label="15156423  double scv_60;...",shape=box];
	15103496 [label="15103496  register int cbv_2, cbv_3;...",shape=box];
	_JOIN_15142621 [label="_JOIN_15142621None...",shape=box];
	_JOIN_15142621 -> ForLoop15142692;
	_JOIN_15144479 [label="_JOIN_15144479None...",shape=box];
	_JOIN_15144479 -> _JOIN_15144482;
	ForLoop15103356 [label="ForLoop15103356  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop15103356 -> 15103355;
	ForLoop15103356 -> _JOIN_15103356;
	ForLoop15144411 [label="ForLoop15144411  for (k=kt; k<=min(ny-1,kk+31)-25; k=k+26) {...",shape=box];
	ForLoop15144411 -> 15148675;
	ForLoop15144411 -> _JOIN_15144411;
	_JOIN_15144411 [label="_JOIN_15144411None...",shape=box];
	_JOIN_15144411 -> ForLoop15144479;
	_JOIN_15103356 [label="_JOIN_15103356None...",shape=box];
	_JOIN_15103356 -> 15142340;
	15103355 [label="15103355  y[i]=0.0;...",shape=box];
	15103355 -> _JOIN_15103356;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 15102988;
	15102988 [label="15102988  int i;...",shape=box];
	ForLoop15144479 [label="ForLoop15144479  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kt)+1)%26)+1; k<=min(ny-1,kk+31); k=k+1) {...",shape=box];
	ForLoop15144479 -> 15149289;
	ForLoop15144479 -> _JOIN_15144479;
	ForLoop15142621 [label="ForLoop15142621  for (j=jj; j<=min(ny-1,jj+31)-5; j=j+6) {...",shape=box];
	ForLoop15142621 -> 15142484;
	ForLoop15142621 -> _JOIN_15142621;
	15149289 [label="15149289  double scv_59;...",shape=box];
	_JOIN_15142692 [label="_JOIN_15142692None...",shape=box];
	_JOIN_15142692 -> _JOIN_15142695;
	_JOIN_15142696 [label="_JOIN_15142696None...",shape=box];
	_JOIN_15142696 -> ForLoop15144483;
	_JOIN_15142695 [label="_JOIN_15142695None...",shape=box];
	_JOIN_15142695 -> _JOIN_15142696;
	ForLoop15144485 [label="ForLoop15144485  for (i=ii; i<=min(nx-1,ii+31); i=i+1) {...",shape=box];
	ForLoop15144485 -> 15156423;
	ForLoop15144485 -> _JOIN_15144485;
	15156435 [label="15156435  tmp[i]=scv_60;...",shape=box];
	15156435 -> _JOIN_15144485;
	_JOIN_15144482 [label="_JOIN_15144482None...",shape=box];
	_JOIN_15144482 -> _JOIN_15144483;
	15148675 [label="15148675  double scv_33, scv_34, scv_35, scv_36, scv_37, scv_38, scv_39, scv_40;...",shape=box];
	_JOIN_15143668 [label="_JOIN_15143668None...",shape=box];
	_JOIN_15143668 -> 15143669;
	ForLoop15142692 [label="ForLoop15142692  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jj)+1)%6)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop15142692 -> 15142691;
	ForLoop15142692 -> _JOIN_15142692;
	_JOIN_15103287 [label="_JOIN_15103287None...",shape=box];
	_JOIN_15103287 -> 15103496;
	_JOIN_15144486 [label="_JOIN_15144486None...",shape=box];
	ForLoop15142696 [label="ForLoop15142696  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop15142696 -> ForLoop15142695;
	ForLoop15142696 -> _JOIN_15142696;
	15146886 [label="15146886  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	ForLoop15142695 [label="ForLoop15142695  for (jj=jjj; jj<=min(ny-1,jjj+2016); jj=jj+32) {...",shape=box];
	ForLoop15142695 -> 15142440;
	ForLoop15142695 -> _JOIN_15142695;
	15142484 [label="15142484  scv_60=scv_60+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop15103287 [label="ForLoop15103287  for (i=0; i<=cbv_1; i=i+11) {...",shape=box];
	ForLoop15103287 -> 15103195;
	Fexpected=9369846271501.798828
actual=9369846271501.798828
orLoop15103287 -> _JOIN_15103287;
	_JOIN_15144483 [label="_JOIN_15144483None...",shape=box];
	_JOIN_15144483 -> 15156435;
	15142440 [label="15142440  for (j=jj; j<=min(ny-1,jj+31); j=j+1) ...",shape=box];
	15142340 [label="15142340  double x_copy[32];...",shape=box];
	15143669 [label="15143669  int k;...",shape=box];
	15143669 -> ForLoop15144411;
	ForLoop15144486 [label="ForLoop15144486  for (ii=0; ii<=nx-1; ii=ii+32) {...",shape=box];
	ForLoop15144486 -> ForLoop15144485;
	ForLoop15144486 -> _JOIN_15144486;
	ForLoop15144483 [label="ForLoop15144483  for (kkk=0; kkk<=ny-1; kkk=kkk+256) {...",shape=box];
	ForLoop15144483 -> ForLoop15144482;
	ForLoop15144483 -> _JOIN_15144483;
	ForLoop15144482 [label="ForLoop15144482  for (kk=kkk; kk<=min(ny-1,kkk+224); kk=kk+32) {...",shape=box];
	ForLoop15144482 -> ForLoop15143668;
	ForLoop15144482 -> _JOIN_15144482;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest69.exe __orio_perftest69.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest69.exe  
{'[2, 2, 2, 0, 6, 3, 1, 0, 10, 0, 5, 25, 0, 0, 2, 1, 1, 0]' : 0.141667}
{'[2, 2, 2, 0, 6, 3, 1, 0, 10, 0, 5, 25, 0, 0, 2, 1, 1, 0]' : 0.140753}
{'[2, 2, 2, 0, 6, 3, 1, 0, 10, 0, 5, 25, 0, 0, 2, 1, 1, 0]' : 0.140569}
{'[2, 2, 2, 0, 6, 3, 1, 0, 10, 0, 5, 25, 0, 0, 2, 1, 1, 0]' : 0.14057}
{'[2, 2, 2, 0, 6, 3, 1, 0, 10, 0, 5, 25, 0, 0, 2, 1, 1, 0]' : 0.145162}
{'[2, 2, 2, 0, 6, 3, 1, 0, 10, 0, 5, 25, 0, 0, 2, 1, 1, 0]' : 0.140623}
{'[2, 2, 2, 0, 6, 3, 1, 0, 10, 0, 5, 25, 0, 0, 2, 1, 1, 0]' : 0.140648}
{'[2, 2, 2, 0, 6, 3, 1, 0, 10, 0, 5, 25, 0, 0, 2, 1, 1, 0]' : 0.140708}
{'[2, 2, 2, 0, 6, 3, 1, 0, 10, 0, 5, 25, 0, 0, 2, 1, 1, 0]' : 0.140601}
{'[2, 2, 2, 0, 6, 3, 1, 0, 10, 0, 5, 25, 0, 0, 2, 1, 1, 0]' : 0.140578}
{'[2, 2, 2, 0, 6, 3, 1, 0, 10, 0, 5, 25, 0, 0, 2, 1, 1, 0]' : 0.140553}
{'[2, 2, 2, 0, 6, 3, 1, 0, 10, 0, 5, 25, 0, 0, 2, 1, 1, 0]' : 0.140555}
{'[2, 2, 2, 0, 6, 3, 1, 0, 10, 0, 5, 25, 0, 0, 2, 1, 1, 0]' : 0.140578}
{'[2, 2, 2, 0, 6, 3, 1, 0, 10, 0, 5, 25, 0, 0, 2, 1, 1, 0]' : 0.140572}
{'[2, 2, 2, 0, 6, 3, 1, 0, 10, 0, 5, 25, 0, 0, 2, 1, 1, 0]' : 0.14156}
{'[2, 2, 2, 0, 6, 3, 1, 0, 10, 0, 5, 25, 0, 0, 2, 1, 1, 0]' : 0.14062}
{'[2, 2, 2, 0, 6, 3, 1, 0, 10, 0, 5, 25, 0, 0, 2, 1, 1, 0]' : 0.140559}
{'[2, 2, 2, 0, 6, 3, 1, 0, 10, 0, 5, 25, 0, 0, 2, 1, 1, 0]' : 0.140672}
{'[2, 2, 2, 0, 6, 3, 1, 0, 10, 0, 5, 25, 0, 0, 2, 1, 1, 0]' : 0.140559}
{'[2, 2, 2, 0, 6, 3, 1, 0, 10, 0, 5, 25, 0, 0, 2, 1, 1, 0]' : 0.140594}
{'[2, 2, 2, 0, 6, 3, 1, 0, 10, 0, 5, 25, 0, 0, 2, 1, 1, 0]' : 0.140599}
{'[2, 2, 2, 0, 6, 3, 1, 0, 10, 0, 5, 25, 0, 0, 2, 1, 1, 0]' : 0.140727}
{'[2, 2, 2, 0, 6, 3, 1, 0, 10, 0, 5, 25, 0, 0, 2, 1, 1, 0]' : 0.140704}
{'[2, 2, 2, 0, 6, 3, 1, 0, 10, 0, 5, 25, 0, 0, 2, 1, 1, 0]' : 0.140708}
{'[2, 2, 2, 0, 6, 3, 1, 0, 10, 0, 5, 25, 0, 0, 2, 1, 1, 0]' : 0.140514}
{'[2, 2, 2, 0, 6, 3, 1, 0, 10, 0, 5, 25, 0, 0, 2, 1, 1, 0]' : 0.140609}
{'[2, 2, 2, 0, 6, 3, 1, 0, 10, 0, 5, 25, 0, 0, 2, 1, 1, 0]' : 0.140598}
{'[2, 2, 2, 0, 6, 3, 1, 0, 10, 0, 5, 25, 0, 0, 2, 1, 1, 0]' : 0.140593}
{'[2, 2, 2, 0, 6, 3, 1, 0, 10, 0, 5, 25, 0, 0, 2, 1, 1, 0]' : 0.141778}
{'[2, 2, 2, 0, 6, 3, 1, 0, 10, 0, 5, 25, 0, 0, 2, 1, 1, 0]' : 0.140624}

out:
 ["{'[2, 2, 2, 0, 6, 3, 1, 0, 10, 0, 5, 25, 0, 0, 2, 1, 1, 0]' : 0.141667}", "{'[2, 2, 2, 0, 6, 3, 1, 0, 10, 0, 5, 25, 0, 0, 2, 1, 1, 0]' : 0.140753}", "{'[2, 2, 2, 0, 6, 3, 1, 0, 10, 0, 5, 25, 0, 0, 2, 1, 1, 0]' : 0.140569}", "{'[2, 2, 2, 0, 6, 3, 1, 0, 10, 0, 5, 25, 0, 0, 2, 1, 1, 0]' : 0.14057}", "{'[2, 2, 2, 0, 6, 3, 1, 0, 10, 0, 5, 25, 0, 0, 2, 1, 1, 0]' : 0.145162}", "{'[2, 2, 2, 0, 6, 3, 1, 0, 10, 0, 5, 25, 0, 0, 2, 1, 1, 0]' : 0.140623}", "{'[2, 2, 2, 0, 6, 3, 1, 0, 10, 0, 5, 25, 0, 0, 2, 1, 1, 0]' : 0.140648}", "{'[2, 2, 2, 0, 6, 3, 1, 0, 10, 0, 5, 25, 0, 0, 2, 1, 1, 0]' : 0.140708}", "{'[2, 2, 2, 0, 6, 3, 1, 0, 10, 0, 5, 25, 0, 0, 2, 1, 1, 0]' : 0.140601}", "{'[2, 2, 2, 0, 6, 3, 1, 0, 10, 0, 5, 25, 0, 0, 2, 1, 1, 0]' : 0.140578}", "{'[2, 2, 2, 0, 6, 3, 1, 0, 10, 0, 5, 25, 0, 0, 2, 1, 1, 0]' : 0.140553}", "{'[2, 2, 2, 0, 6, 3, 1, 0, 10, 0, 5, 25, 0, 0, 2, 1, 1, 0]' : 0.140555}", "{'[2, 2, 2, 0, 6, 3, 1, 0, 10, 0, 5, 25, 0, 0, 2, 1, 1, 0]' : 0.140578}", "{'[2, 2, 2, 0, 6, 3, 1, 0, 10, 0, 5, 25, 0, 0, 2, 1, 1, 0]' : 0.140572}", "{'[2, 2, 2, 0, 6, 3, 1, 0, 10, 0, 5, 25, 0, 0, 2, 1, 1, 0]' : 0.14156}", "{'[2, 2, 2, 0, 6, 3, 1, 0, 10, 0, 5, 25, 0, 0, 2, 1, 1, 0]' : 0.14062}", "{'[2, 2, 2, 0, 6, 3, 1, 0, 10, 0, 5, 25, 0, 0, 2, 1, 1, 0]' : 0.140559}", "{'[2, 2, 2, 0, 6, 3, 1, 0, 10, 0, 5, 25, 0, 0, 2, 1, 1, 0]' : 0.140672}", "{'[2, 2, 2, 0, 6, 3, 1, 0, 10, 0, 5, 25, 0, 0, 2, 1, 1, 0]' : 0.140559}", "{'[2, 2, 2, 0, 6, 3, 1, 0, 10, 0, 5, 25, 0, 0, 2, 1, 1, 0]' : 0.140594}", "{'[2, 2, 2, 0, 6, 3, 1, 0, 10, 0, 5, 25, 0, 0, 2, 1, 1, 0]' : 0.140599}", "{'[2, 2, 2, 0, 6, 3, 1, 0, 10, 0, 5, 25, 0, 0, 2, 1, 1, 0]' : 0.140727}", "{'[2, 2, 2, 0, 6, 3, 1, 0, 10, 0, 5, 25, 0, 0, 2, 1, 1, 0]' : 0.140704}", "{'[2, 2, 2, 0, 6, 3, 1, 0, 10, 0, 5, 25, 0, 0, 2, 1, 1, 0]' : 0.140708}", "{'[2, 2, 2, 0, 6, 3, 1, 0, 10, 0, 5, 25, 0, 0, 2, 1, 1, 0]' : 0.140514}", "{'[2, 2, 2, 0, 6, 3, 1, 0, 10, 0, 5, 25, 0, 0, 2, 1, 1, 0]' : 0.140609}", "{'[2, 2, 2, 0, 6, 3, 1, 0, 10, 0, 5, 25, 0, 0, 2, 1, 1, 0]' : 0.140598}", "{'[2, 2, 2, 0, 6, 3, 1, 0, 10, 0, 5, 25, 0, 0, 2, 1, 1, 0]' : 0.140593}", "{'[2, 2, 2, 0, 6, 3, 1, 0, 10, 0, 5, 25, 0, 0, 2, 1, 1, 0]' : 0.141778}", "{'[2, 2, 2, 0, 6, 3, 1, 0, 10, 0, 5, 25, 0, 0, 2, 1, 1, 0]' : 0.140624}"]
returning from 'run': {'[2, 2, 2, 0, 6, 3, 1, 0, 10, 0, 5, 25, 0, 0, 2, 1, 1, 0]': ([0.141667, 0.140753, 0.140569, 0.14057, 0.145162, 0.140623, 0.140648, 0.140708, 0.140601, 0.140578, 0.140553, 0.140555, 0.140578, 0.140572, 0.14156, 0.14062, 0.140559, 0.140672, 0.140559, 0.140594, 0.140599, 0.140727, 0.140704, 0.140708, 0.140514, 0.140609, 0.140598, 0.140593, 0.141778, 0.140624], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.141667, 0.140753, 0.140569, 0.14057, 0.145162, 0.140623, 0.140648, 0.140708, 0.140601, 0.140578, 0.140553, 0.140555, 0.140578, 0.140572, 0.14156, 0.14062, 0.140559, 0.140672, 0.140559, 0.140594, 0.140599, 0.140727, 0.140704, 0.140708, 0.140514, 0.140609, 0.140598, 0.140593, 0.141778, 0.140624], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[2, 2, 2, 0, 6, 3, 1, 0, 10, 0, 5, 25, 0, 0, 2, 1, 1, 0]': ([0.141667, 0.140753, 0.140569, 0.14057, 0.145162, 0.140623, 0.140648, 0.140708, 0.140601, 0.140578, 0.140553, 0.140555, 0.140578, 0.140572, 0.14156, 0.14062, 0.140559, 0.140672, 0.140559, 0.140594, 0.140599, 0.140727, 0.140704, 0.140708, 0.140514, 0.140609, 0.140598, 0.140593, 0.141778, 0.140624], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [5, 2, 5, 4, 0, 1, 1, 27, 16, 4, 0, 0, 2, 0, 0, 0]
Fixed Factors: {'T2_J': 6, 'VEC1': 1}
Testing candidate 32: [5, 2, 5, 4, 6, 0, 1, 1, 27, 16, 4, 0, 0, 2, 0, 0, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	70
        Max loop nest depth: 	6
        Additions: 		4799
        Multiplications: 	1188
        Divisions: 		0
        Logical: 		0
        Reads: 			7404
        Writes: 		838
        Comparisons:		70
        Gotos: 			0
        
digraph CFG {
	_JOIN_15261072 [label="_JOIN_15261072None...",shape=box];
	_JOIN_15261072 -> 15261103;
	ForLoop15260983 [label="ForLoop15260983  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) ...",shape=box];
	ForLoop15260983 -> ForLoop15260982;
	ForLoop15260983 -> _JOIN_15260983;
	15261027 [label="15261027  for (k=kk; k<=min(ny-1,kk+255); k=k+1) ...",shape=box];
	15261027 -> ForLoop15261072;
	15258278 [label="15258278  for (k=kk; k<=min(ny-1,kk+255); k=k+1) ...",shape=box];
	ForLoop15159911 [label="ForLoop15159911  for (i=0; i<=cbv_1; i=i+28) {...",shape=box];
	ForLoop15159911 -> 15159666;
	ForLoop15159911 -> _JOIN_15159911;
	ForLoop15260982 [label="ForLoop15260982  for (jj=jjj; jj<=min(ny-1,jjj+2016); jj=jj+32) {...",shape=box];
	ForLoop15260982 -> 15260036;
	ForLoop15260982 -> _JOIN_15260982;
	15238484 [label="15238484  for (j=jj; j<=min(ny-1,jj+31); j=j+1) ...",shape=box];
	15159204 [label="15159204  int i;...",shape=box];
	ForLoop15259863 [label="ForLoop15259863  for (i=ii; i<=min(nx-1,ii+255)-16; i=i+17) {...",shape=box];
	ForLoop15259863 -> 15238278;
	ForLoop15259863 -> _JOIN_15259863;
	15260036 [label="15260036  for (j=jj; j<=min(ny-1,jj+31); j=j+1) ...",shape=box];
	15260036 -> ForLoop15260980;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 15159204;
	_JOIN_15261105 [label="_JOIN_15261105None...",shape=box];
	_JOIN_15261105 -> _JOIN_15261107;
	15160273 [label="15160273  register int cbv_2, cbv_3;...",shape=box];
	15259363 [label="15259363  for (k=kk; k<=min(ny-1,kk+255); k=k+1) ...",shape=box];
	ForLoop15261105 [label="ForLoop15261105  for (kk=0; kk<=ny-1; kk=kk+256) {...",shape=box];
	ForLoop15261105 -> 15261027;
	ForLoop15261105 -> _JOIN_15261105;
	_JOIN_15260983 [label="_JOIN_15260983None...",shape=box];
	_JOIN_15260983 -> ForLoop15261105;
	_JOIN_15260982 [label="_JOIN_15260982None...",shape=box];
	_JOIN_15260982 -> _JOIN_15260983;
	_JOIN_15260980 [label="_JOIN_15260980None...",shape=box];
	_JOIN_15260980 -> _JOIN_15260982;
	15258818 [label="15258818  y_copy[(k-kk)]=y_copy[(k-kk)]+A[i*ny+k]*tmp[i];...",shape=box];
	ForLoop15159980 [label="ForLoop15159980  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop15159980 -> 15159979;
	ForLoop15159980 -> _JOIN_15159980;
	15159666 [label="15159666  y[i]=0.0;...",shape=box];
	_JOIN_15159980 [label="_JOIN_15159980None...",shape=box];
	_JOIN_15159980 -> 15169916;
	15198775 [label="15198775  int i;...",shape=box];
	15198775 -> ForLoop15259863;
	15260079 [label="15260079  tmp[i]=tmp[i]+A[i*ny+jt]*x_copy[(jt-jj)];...",shape=box];
	15159979 [label="15159979  y[i]=0.0;...",shape=box];
	15159979 -> _JOIN_15159980;
	15238278 [label="15238278  tmp[i]=0;...",shape=box];
	15239023 [label="15239023  tmp[i]=tmp[i]+A[i*ny+jt]*x_copy[(jt-jj)];...",shape=box];
	15259974 [label="15259974  tmp[i]=0;...",shape=box];
	15259974 -> ForLoop15260983;
	ForLoop15260980 [label="ForLoop15260980  for (jt=jj; jt<=min(ny-1,jj+31)-31; jt=jt+32) {...",shape=box];
	ForLoop15260980 -> 15260079;
	ForLoop15260980 -> _JOIN_15260980;
	_JOIN_15259332 [label="_JOIN_15259332None...",shape=box];
	_JOIN_15259332 -> 15259363;
	_JOIN_15163677 [label="_JOIN_15163677None...",shape=box];
	_JOIN_15163677 -> _JOIN_15163678;
	_JOIN_15261107 [label="_JOIN_15261107None...",shape=box];
	_JOIN_15261107 -> _JOIN_15163677;
	_JOIN_15163678 [label="_JOIN_15163678None...",shape=box];
	15261103 [label="15261103  for (k=kk; k<=min(ny-1,kk+255); k=k+1) ...",shape=box];
	15261103 -> _JOIN_15261105;
	ForLoop15261072 [label="ForLoop15261072  for (k=kk; k<=min(ny-1,kk+255); k=k+1) ...",shape=box];
	ForLoop15261072 -> 15261071;
	ForLoop15261072 -> _JOIN_15261072;
	_JOIN_15258232 [label="_JOIN_15258232None...",shape=box];
	_JOIN_15258232 -> _JOIN_15258234;
	_JOIN_15258230 [label="_JOIN_15258230None...",shape=box];
	_JOIN_15258230 -> _JOIN_15258232;
	_JOIN_15258234 [label="_JOIN_15258234None...",shape=box];
	_JOIN_15258234 -> ForLoop15259861;
	_JOIN_15159911 [label="_JOIN_15159911None...",shape=box];
	_JOIN_15159911 -> 15160273;
	_JOIN_15259861 [label="_JOIN_15259861None...",shape=box];
	_JOIN_15259861 -> _JOIN_15259863;
	_JOIN_15259863 [label="_JOIN_15259863None...",shape=box];
	_JOIN_15259863 -> ForLoop15261107;
	ForLoop15259861 [label="ForLoop15259861  for (kk=0; kk<=ny-1; kk=kk+256) {...",shape=box];
	ForLoop15259861 -> 15258278;
	ForLoop15259861 -> _JOIN_15259861;
	ForLoop15259332 [label="ForLoop15259332  for (k=kk; k<=min(ny-1,kk+255); k=k+1) {...",shape=box];
	ForLoop15259332 -> 15258818;
	ForLoop15259332 -> _JOIN_15259332;
	15261071 [label="15261071  y_copy[(k-kk)]=y_copy[(k-kk)]+A[i*ny+k]*tmp[i];...",shape=box];
	15261071 -> _JOIN_15261072;
	ForLoop15258232 [label="ForLoop15258232  for (jj=jjj; jj<=min(ny-1,jjj+2016); jj=jj+32) {...",shape=box];
	ForLoop15258232 -> 15238484;
	ForLoop15258232 -> _JOIN_15258232;
	ForLoopexpected=0.000000
actual=9369846271501.798828
15163678 [label="ForLoop15163678  for (iii=0; iii<=nx-1; iii=iii+512) ...",shape=box];
	ForLoop15163678 -> ForLoop15163677;
	ForLoop15163678 -> _JOIN_15163678;
	ForLoop15258230 [label="ForLoop15258230  for (jt=jj; jt<=min(ny-1,jj+31)-31; jt=jt+32) {...",shape=box];
	ForLoop15258230 -> 15239023;
	ForLoop15258230 -> _JOIN_15258230;
	ForLoop15261107 [label="ForLoop15261107  for (i=(min(nx-1,ii+255))-(((min(nx-1,ii+255))-(ii)+1)%17)+1; i<=min(nx-1,ii+255); i=i+1) {...",shape=box];
	ForLoop15261107 -> 15259974;
	ForLoop15261107 -> _JOIN_15261107;
	15169916 [label="15169916  double x_copy[32];...",shape=box];
	ForLoop15258234 [label="ForLoop15258234  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop15258234 -> ForLoop15258232;
	ForLoop15258234 -> _JOIN_15258234;
	ForLoop15163677 [label="ForLoop15163677  for (ii=iii; ii<=min(nx-1,iii+256); ii=ii+256) {...",shape=box];
	ForLoop15163677 -> 15198775;
	ForLoop15163677 -> _JOIN_15163677;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest70.exe __orio_perftest70.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest70.exe  
{'[5, 2, 5, 4, 6, 0, 1, 1, 27, 16, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.177751}
{'[5, 2, 5, 4, 6, 0, 1, 1, 27, 16, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.16974}
{'[5, 2, 5, 4, 6, 0, 1, 1, 27, 16, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.169728}
{'[5, 2, 5, 4, 6, 0, 1, 1, 27, 16, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.169763}
{'[5, 2, 5, 4, 6, 0, 1, 1, 27, 16, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.169724}
{'[5, 2, 5, 4, 6, 0, 1, 1, 27, 16, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.169614}
{'[5, 2, 5, 4, 6, 0, 1, 1, 27, 16, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.169705}
{'[5, 2, 5, 4, 6, 0, 1, 1, 27, 16, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.169766}
{'[5, 2, 5, 4, 6, 0, 1, 1, 27, 16, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.169854}
{'[5, 2, 5, 4, 6, 0, 1, 1, 27, 16, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.176606}
{'[5, 2, 5, 4, 6, 0, 1, 1, 27, 16, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.169704}
{'[5, 2, 5, 4, 6, 0, 1, 1, 27, 16, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.169525}
{'[5, 2, 5, 4, 6, 0, 1, 1, 27, 16, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.170741}
{'[5, 2, 5, 4, 6, 0, 1, 1, 27, 16, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.169757}
{'[5, 2, 5, 4, 6, 0, 1, 1, 27, 16, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.169735}
{'[5, 2, 5, 4, 6, 0, 1, 1, 27, 16, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.169732}
{'[5, 2, 5, 4, 6, 0, 1, 1, 27, 16, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.16963}
{'[5, 2, 5, 4, 6, 0, 1, 1, 27, 16, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.169603}
{'[5, 2, 5, 4, 6, 0, 1, 1, 27, 16, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.17664}
{'[5, 2, 5, 4, 6, 0, 1, 1, 27, 16, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.169739}
{'[5, 2, 5, 4, 6, 0, 1, 1, 27, 16, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.169714}
{'[5, 2, 5, 4, 6, 0, 1, 1, 27, 16, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.169677}
{'[5, 2, 5, 4, 6, 0, 1, 1, 27, 16, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.169732}
{'[5, 2, 5, 4, 6, 0, 1, 1, 27, 16, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.169589}
{'[5, 2, 5, 4, 6, 0, 1, 1, 27, 16, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.170812}
{'[5, 2, 5, 4, 6, 0, 1, 1, 27, 16, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.169746}
{'[5, 2, 5, 4, 6, 0, 1, 1, 27, 16, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.169651}
{'[5, 2, 5, 4, 6, 0, 1, 1, 27, 16, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.176623}
{'[5, 2, 5, 4, 6, 0, 1, 1, 27, 16, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.169623}
{'[5, 2, 5, 4, 6, 0, 1, 1, 27, 16, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.169558}

out:
 ["{'[5, 2, 5, 4, 6, 0, 1, 1, 27, 16, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.177751}", "{'[5, 2, 5, 4, 6, 0, 1, 1, 27, 16, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.16974}", "{'[5, 2, 5, 4, 6, 0, 1, 1, 27, 16, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.169728}", "{'[5, 2, 5, 4, 6, 0, 1, 1, 27, 16, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.169763}", "{'[5, 2, 5, 4, 6, 0, 1, 1, 27, 16, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.169724}", "{'[5, 2, 5, 4, 6, 0, 1, 1, 27, 16, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.169614}", "{'[5, 2, 5, 4, 6, 0, 1, 1, 27, 16, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.169705}", "{'[5, 2, 5, 4, 6, 0, 1, 1, 27, 16, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.169766}", "{'[5, 2, 5, 4, 6, 0, 1, 1, 27, 16, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.169854}", "{'[5, 2, 5, 4, 6, 0, 1, 1, 27, 16, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.176606}", "{'[5, 2, 5, 4, 6, 0, 1, 1, 27, 16, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.169704}", "{'[5, 2, 5, 4, 6, 0, 1, 1, 27, 16, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.169525}", "{'[5, 2, 5, 4, 6, 0, 1, 1, 27, 16, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.170741}", "{'[5, 2, 5, 4, 6, 0, 1, 1, 27, 16, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.169757}", "{'[5, 2, 5, 4, 6, 0, 1, 1, 27, 16, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.169735}", "{'[5, 2, 5, 4, 6, 0, 1, 1, 27, 16, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.169732}", "{'[5, 2, 5, 4, 6, 0, 1, 1, 27, 16, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.16963}", "{'[5, 2, 5, 4, 6, 0, 1, 1, 27, 16, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.169603}", "{'[5, 2, 5, 4, 6, 0, 1, 1, 27, 16, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.17664}", "{'[5, 2, 5, 4, 6, 0, 1, 1, 27, 16, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.169739}", "{'[5, 2, 5, 4, 6, 0, 1, 1, 27, 16, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.169714}", "{'[5, 2, 5, 4, 6, 0, 1, 1, 27, 16, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.169677}", "{'[5, 2, 5, 4, 6, 0, 1, 1, 27, 16, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.169732}", "{'[5, 2, 5, 4, 6, 0, 1, 1, 27, 16, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.169589}", "{'[5, 2, 5, 4, 6, 0, 1, 1, 27, 16, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.170812}", "{'[5, 2, 5, 4, 6, 0, 1, 1, 27, 16, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.169746}", "{'[5, 2, 5, 4, 6, 0, 1, 1, 27, 16, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.169651}", "{'[5, 2, 5, 4, 6, 0, 1, 1, 27, 16, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.176623}", "{'[5, 2, 5, 4, 6, 0, 1, 1, 27, 16, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.169623}", "{'[5, 2, 5, 4, 6, 0, 1, 1, 27, 16, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.169558}"]
returning from 'run': {'[5, 2, 5, 4, 6, 0, 1, 1, 27, 16, 4, 0, 0, 2, 0, 0, 1, 0]': ([0.177751, 0.16974, 0.169728, 0.169763, 0.169724, 0.169614, 0.169705, 0.169766, 0.169854, 0.176606, 0.169704, 0.169525, 0.170741, 0.169757, 0.169735, 0.169732, 0.16963, 0.169603, 0.17664, 0.169739, 0.169714, 0.169677, 0.169732, 0.169589, 0.170812, 0.169746, 0.169651, 0.176623, 0.169623, 0.169558], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.177751, 0.16974, 0.169728, 0.169763, 0.169724, 0.169614, 0.169705, 0.169766, 0.169854, 0.176606, 0.169704, 0.169525, 0.170741, 0.169757, 0.169735, 0.169732, 0.16963, 0.169603, 0.17664, 0.169739, 0.169714, 0.169677, 0.169732, 0.169589, 0.170812, 0.169746, 0.169651, 0.176623, 0.169623, 0.169558], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[5, 2, 5, 4, 6, 0, 1, 1, 27, 16, 4, 0, 0, 2, 0, 0, 1, 0]': ([0.177751, 0.16974, 0.169728, 0.169763, 0.169724, 0.169614, 0.169705, 0.169766, 0.169854, 0.176606, 0.169704, 0.169525, 0.170741, 0.169757, 0.169735, 0.169732, 0.16963, 0.169603, 0.17664, 0.169739, 0.169714, 0.169677, 0.169732, 0.169589, 0.170812, 0.169746, 0.169651, 0.176623, 0.169623, 0.169558], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Measurements: [0.07972611, 0.08650056666666667, 0.1257863333333333, 0.1952167666666667, 0.12413256666666667, 0.18502180000000001, 0.09801209666666667, 0.2602868333333333, 0.13598893333333334, 0.09509315666666669, 0.29845020000000005, 0.1003803, 0.15750723333333333, 0.10224196666666666, 0.15358276666666668, 0.2228687333333333, 0.2781059333333334, 0.132558, 0.08789279666666666, 0.1450190666666667, 0.14204973333333332, 0.08568986000000002, 0.18250470000000005, 0.08094960000000001, 0.09838607666666667, 0.2620125666666667, 0.07591279333333335, 0.08881341666666667, 0.13315360000000004, 0.2235063333333333, 0.14087183333333334, 0.17072606666666665]
   T1_I T1_J T1_K T2_I T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J RT_K SCR
1     1    1    5    0    3       0       1   15  25  29   0    1    0    1   1
2     5    6    1    4    5       0       0   25   0  13  18    1    0    0   1
3     0    0    4    1    2       1       0    5  12   0  21    0    0    0   1
4     1    6    1    1    0       0       1   14  10   0  28    2    0    0   0
5     4    3    6    2    0       0       0   23   0   2  12    0    1    1   1
6     6    6    1    0    6       1       1   17   3   5   0    0    2    0   0
7     5    4    5    0    6       0       0    9  14  24   0    0    0    0   1
8     1    1    1    5    3       0       1    7   0  15   4    2    0    0   0
9     3    3    0    4    1       0       1   26   4   0  23    0    0    0   1
10    6    6    5    4    3       1       1    3  12  18   0    1    0    1   1
11    5    5    1    5    1       1       1   13   0  25  23    0    2    0   1
12    0    6    1    5    6       1       0   12  25   5   0    1    0    1   0
13    6    0    4    5    2       0       1   14   0  28  29    0    0    0   0
14    4    0    1    4    6       1       0   29   0  21  16    1    0    1   0
15    5    5    0    0    2       1       1   26  26   0   1    2    0    0   1
16    1    5    5    1    5       1       1   26   0   7   2    0    0    0   0
17    4    2    2    3    0       1       0   28   0  25  27    2    0    0   0
18    5    1    2    5    2       0       1   19   3   9   0    0    0    2   1
19    4    5    0    6    3       0       0    3  29   0  26    1    1    0   1
20    1    6    5    0    5       0       0   27  22   0  20    0    1    1   0
21    3    5    0    4    0       1       0    1  22   9   0    0    2    0   0
22    1    6    4    5    4       0       1   10   1   2   0    1    1    0   1
23    4    6    2    6    4       1       0    4   0  22   5    0    0    2   0
24    2    1    4    6    5       1       1    3  18   0  28    1    0    1   1
25    6    3    2    4    6       0       1    5  24   0  22    1    1    0   0
26    6    3    4    6    3       1       1   20  28  20   0    0    0    1   0
27    2    1    6    5    6       1       0   19  22   0  11    1    1    0   1
28    0    2    0    4    6       0       1    0  23  25   0    1    1    0   1
29    6    2    1    0    1       0       0    8  23   0  13    0    0    0   0
30    1    6    2    4    1       0       1   23  28  22   0    0    0    1   0
31    2    2    2    0    3       1       0   10   0   5  25    0    0    2   1
32    5    2    5    4    0       1       1   27  16   4   0    0    2    0   0
   VEC2  cost_mean
1     1 0.07972611
2     1 0.08650057
3     1 0.12578633
4     1 0.19521677
5     0 0.12413257
6     1 0.18502180
7     0 0.09801210
8     0 0.26028683
9     0 0.13598893
10    0 0.09509316
11    0 0.29845020
12    1 0.10038030
13    1 0.15750723
14    0 0.10224197
15    0 0.15358277
16    0 0.22286873
17    1 0.27810593
18    1 0.13255800
19    0 0.08789280
20    1 0.14501907
21    0 0.14204973
22    1 0.08568986
23    0 0.18250470
24    1 0.08094960
25    0 0.09838608
26    1 0.26201257
27    0 0.07591279
28    1 0.08881342
29    1 0.13315360
30    0 0.22350633
31    0 0.14087183
32    0 0.17072607

Step Space Names:  [1] "T1_I"    "T1_J"    "T1_K"    "T2_I"    "T2_J"    "T2_K"    "ACOPY_x"
 [8] "ACOPY_y" "U1_I"    "U_I"     "U_J"     "U_K"     "RT_I"    "RT_J"   
[15] "RT_K"    "SCR"     "VEC1"    "VEC2"   

Heteroscedasticity Test p-value: 0.0294685060178
Power Transform Step:
Heteroscedasticity Test p-value: 0.713191081791
Regression Step:            Df Sum Sq Mean Sq F value   Pr(>F)    
T1_I         1  13.10   13.10   1.732 0.207852    
T1_J         1  10.28   10.28   1.359 0.261910    
T1_K         1  14.55   14.55   1.925 0.185601    
T2_I         1  11.87   11.87   1.570 0.229367    
T2_K         1 128.59  128.59  17.007 0.000901 ***
ACOPY_x      1  32.49   32.49   4.298 0.055810 .  
ACOPY_y      1  20.42   20.42   2.701 0.121084    
U1_I         1  24.61   24.61   3.255 0.091330 .  
U_I          1  23.38   23.38   3.092 0.099053 .  
U_J          1  13.64   13.64   1.804 0.199196    
U_K          1   0.03    0.03   0.004 0.948689    
RT_I         1  24.11   24.11   3.189 0.094358 .  
RT_J         1   1.65    1.65   0.218 0.647561    
RT_K         1   1.16    1.16   0.154 0.700214    
SCR          1 100.03  100.03  13.230 0.002432 ** 
VEC2         1   2.97    2.97   0.393 0.539937    
Residuals   15 113.41    7.56                     
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Predicting Best
Identical predictions (tol = 1e-5): 1
Getting fixed variables
Fixed Variables: {'T2_K': 5, 'T2_J': 6, 'SCR': 1, 'VEC1': 1}
Pruning Data
Dimensions of Pruned Data: [1] 2632   18
Pruning Model
Pruned Search Space Size: 18
Best Predicted:        T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
147093    4    5    5    6    6    5       0       0    2  29   0  15    2    0
       RT_K SCR VEC1 VEC2
147093    0   1    1    1

Pruned Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'VEC2']
Fixed Factors: {'T2_K': 5, 'T2_J': 6, 'SCR': 1, 'VEC1': 1}
Fixed Factors: {'T2_K': 5, 'T2_J': 6, 'SCR': 1, 'VEC1': 1}
Length of requested configs: 1
Coordinate was computed before
No coordinates to evaluate
0.1290727
[4, 5, 5, 6, 6, 5, 0, 0, 2, 29, 0, 15, 2, 0, 0, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	28
        Max loop nest depth: 	6
        Additions: 		4624
        Multiplications: 	2268
        Divisions: 		0
        Logical: 		0
        Reads: 			8895
        Writes: 		1471
        Comparisons:		28
        Gotos: 			0
        
digraph CFG {
	15306961 [label="15306961  int i;...",shape=box];
	15772820 [label="15772820  double scv_116;...",shape=box];
	15842773 [label="15842773  register int cbv_11, cbv_12;...",shape=box];
	ForLoop15307137 [label="ForLoop15307137  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop15307137 -> 15307136;
	ForLoop15307137 -> _JOIN_15307137;
	_JOIN_15630848 [label="_JOIN_15630848None...",shape=box];
	_JOIN_15630848 -> _JOIN_15630850;
	_JOIN_15594763 [label="_JOIN_15594763None...",shape=box];
	_JOIN_15594763 -> _JOIN_15594764;
	_JOIN_15594762 [label="_JOIN_15594762None...",shape=box];
	_JOIN_15594762 -> _JOIN_15594763;
	15701215 [label="15701215  double scv_19, scv_20, scv_21, scv_22, scv_23, scv_24, scv_25, scv_26;...",shape=box];
	_JOIN_15594764 [label="_JOIN_15594764None...",shape=box];
	_JOIN_15594764 -> ForLoop15612752;
	_JOIN_15612749 [label="_JOIN_15612749None...",shape=box];
	_JOIN_15612749 -> _JOIN_15612751;
	15770192 [label="15770192  double scv_99, scv_100, scv_101, scv_102, scv_103, scv_104, scv_105, scv_106;...",shape=box];
	ForLoop15612752 [label="ForLoop15612752  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop15612752 -> ForLoop15612751;
	ForLoop15612752 -> _JOIN_15612752;
	15770594 [label="15770594  double scv_115;...",shape=box];
	15594796 [label="15594796  int k;...",shape=box];
	15307205 [label="15307205  register int cbv_2, cbv_3;...",shape=box];
	ForLoop15594764 [label="ForLoop15594764  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop15594764 -> ForLoop15594763;
	ForLoop15594764 -> _JOIN_15594764;
	15307048 [label="15307048  y[i]=0.0;...",shape=box];
	ForLoop15594762 [label="ForLoop15594762  for (j=jj; j<=cbv_1; j=j+1) {...",shape=box];
	ForLoop15594762 -> 15632992;
	ForLoop15594762 -> _JOIN_15594762;
	ForLoop15611874 [label="ForLoop15611874  for (k=kk; k<=cbv_2; k=k+16) {...",shape=box];
	ForLoop15611874 -> 15658030;
	ForLoop15611874 -> _JOIN_15611874;
	_JOIN_15307068 [label="_JOIN_15307068None...",shape=box];
	_JOIN_15307068 -> 15307205;
	ForLoop15613958 [label="ForLoop15613958  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop15613958 -> ForLoop15613956;
	ForLoop15613958 -> _JOIN_15613958;
	ForLoop15613956 [label="ForLoop15613956  for (jj=jjj; jj<=min(ny-1,jjj+1792); jj=jj+256) {...",shape=box];
	ForLoop15613956 -> 15832130;
	ForLoop15613956 -> _JOIN_15613956;
	ForLoop15613954 [label="ForLoop15613954  for (j=jj; j<=cbv_5; j=j+1) {...",shape=box];
	ForLoop15613954 -> 15703780;
	ForLoop15613954 -> _JOIN_15613954;
	15630976 [label="15630976  scv_116=scv_116+A[i*ny+j]*x[j];...",shape=box];
	15630976 -> _JOIN_15630977;
	15632992 [label="15632992  double scv_1;...",shape=box];
	15613990 [label="15613990  int k;...",shape=box];
	15832130 [label="15832130  register int cbv_5;...",shape=box];
	15831552 [label="15831552  register int cbv_3, cbv_4;...",shape=box];
	_JOIN_15631550 [label="_JOIN_15631550None...",shape=box];
	15703780 [label="15703780  double scv_51;...",shape=box];
	15307136 [label="15307136  y[i]=0.0;...",shape=box];
	15307136 -> _JOIN_15307137;
	_JOIN_15612754 [label="_JOIN_15612754None...",shape=box];
	_JOIN_15612754 -> 15612755;
	_JOIN_15612752 [label="_JOIN_15612752None...",shape=box];
	_JOIN_15612752 -> 15701233;
	_JOIN_15612751 [label="_JOIN_15612751None...",shape=box];
	_JOIN_15612751 -> _JOIN_15612752;
	ForLoop15631549 [label="ForLoop15631549  for (ii=iii; ii<=min(nx-1,iii+1920); ii=ii+128) {...",shape=box];
	ForLoop15631549 -> ForLoop15612754;
	ForLoop15631549 -> _JOIN_15631549;
	_JOIN_15611874 [label="_JOIN_15611874None...",shape=box];
	_JOIN_15611874 -> 15831552;
	ForLoop15631541 [label="ForLoop15631541  for (k=cbv_11; k<=cbv_12; k=k+1) {...",shape=box];
	ForLoop15631541 -> 15770594;
	ForLoop15631541 -> _JOIN_15631541;
	ForLoop15631543 [label="ForLoop15631543  for (kk=kkk; kk<=min(ny-1,kkk+768); kk=kk+256) {...",shape=box];
	ForLoop15631543 -> 15631011;
	ForLoop15631543 -> _JOIN_15631543;
	ForLoop15612754 [label="ForLoop15612754  for (it=ii; it<=min(nx-1,ii+127)-31; it=it+32) {...",shape=box];
	ForLoop15612754 -> 15701215;
	ForLoop15612754 -> _JOIN_15612754;
	ForLoop15631544 [label="ForLoop15631544  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop15631544 -> ForLoop15631543;
	ForLoop15631544 -> _JOIN_15631544;
	ForLoop15612751 [label="ForLoop15612751  for (kk=kkk; kk<=min(ny-1,kkk+768); kk=kk+256) {...",shape=box];
	ForLoop15612751 -> 15594796;
	ForLoop15612751 -> _JOIN_15612751;
	ForLoop15631546 [label="ForLoop15631546  for (i=(min(nx-1,ii+127))-(((min(nx-1,ii+127))-(it)+1)%30)+1; i<=min(nx-1,ii+127); i=i+1) {...",shape=box];
	ForLoop15631546 -> 15772820;
	ForLoop15631546 -> _JOIN_15631546;
	15768189 [label="15768189  tmp[(i+20)]=scv_69;...",shape=box];
	15842037 [label="15842037  register int cbv_7, cbv_8;...",shape=box];
	15727256 [label="15727256  double scv_52, scv_53, scv_54, scv_55, scv_56, scv_57, scv_58, scv_59;...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 15306961;
	_JOIN_15631549 [label="_JOIN_15631549None...",shape=box];
	_JOIN_15631549 -> _JOIN_15631550;
	ForLoop15631473 [label="ForLoop15631473  for (k=kk; k<=cbv_10; k=k+16) {...",shape=box];
	ForLoop15631473 -> 15770192;
	ForLoop15631473 -> _JOIN_15631473;
	ForLoop15630848 [label="ForLoop15630848  for (k=cbv_7; k<=cbv_8; k=k+1) {...",shape=box];
	ForLoop15630848 -> 15729631;
	ForLoop15630848 -> _JOIN_15630848;
	_JOIN_15631544 [label="_JOIN_15631544None...",shape=box];
	_JOIN_15631544 -> 15772832;
	15612755 [label="15612755  int i;...",shape=box];
	15612755 -> ForLoop15630854;
	_JOIN_15631546 [label="_JOIN_15631546None...",shape=box];
	_JOIN_15631546 -> _JOIN_15631549;
	_JOIN_15631541 [label="_JOIN_15631541None...",shape=box];
	_JOIN_15631541 -> _JOIN_15631543;
	_JOIN_15631543 [label="_JOIN_15631543None...",shape=box];
	_JOIN_15631543 -> _JOIN_15631544;
	15768171 [label="15768171  double scv_69, scv_70, scv_71, scv_72, scv_73, scv_74, scv_75, scv_76;...",shape=box];
	ForLoop15612749 [label="ForLoop15612749  for (k=cbv_3; k<=cbv_4; k=k+1) {...",shape=box];
	ForLoop15612749 -> 15660541;
	ForLoop15612749 -> _JOIN_15612749;
	ForLoop15631550 [label="ForLoop15631550  for (iii=0; iii<=nx-1; iii=iii+2048) {...",shape=box];
	ForLoop15631550 -> ForLoop15631549;
	ForLoop15631550 -> _JOIN_15631550;
	_JOIN_15630977 [label="_JOIN_15630977None...",shape=box];
	_JOIN_15630977 -> _JOIN_15630978;
	_JOIN_15630979 [label="_JOIN_15630979None...",shape=box];
	_JOIN_15630979 -> ForLoop15631544;
	_JOIN_15630978 [label="_JOIN_15630978None...",shape=box];
	_JOIN_15630978 -> _JOIN_15630979;
	_JOIN_15631473 [label="_JOIN_15631473None...",shape=box];
	_JOIN_15631473 -> 15842773;
	ForLoop15307068 [label="ForLoop15307068  for (i=0; i<=cbv_1; i=i+3) {...",shape=box];
	ForLoop15307068 -> 15307048;
	ForLoop15307068 -> _JOIN_15307068;
	ForLoop15630854 [label="ForLoop15630854  for (i=it; i<=min(nx-1,ii+127)-29; i=i+30) {...",shape=box];
	ForLoop15630854expected=9369846271501.798828
actual=9369846271501.798828
 -> 15768171;
	ForLoop15630854 -> _JOIN_15630854;
	ForLoop15630850 [label="ForLoop15630850  for (kk=kkk; kk<=min(ny-1,kkk+768); kk=kk+256) {...",shape=box];
	ForLoop15630850 -> 15613990;
	ForLoop15630850 -> _JOIN_15630850;
	ForLoop15630852 [label="ForLoop15630852  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop15630852 -> ForLoop15630850;
	ForLoop15630852 -> _JOIN_15630852;
	15658030 [label="15658030  double scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8, scv_9;...",shape=box];
	_JOIN_15613958 [label="_JOIN_15613958None...",shape=box];
	_JOIN_15613958 -> ForLoop15630852;
	_JOIN_15613956 [label="_JOIN_15613956None...",shape=box];
	_JOIN_15613956 -> _JOIN_15613958;
	_JOIN_15613954 [label="_JOIN_15613954None...",shape=box];
	_JOIN_15613954 -> _JOIN_15613956;
	15842117 [label="15842117  register int cbv_9;...",shape=box];
	_JOIN_15630025 [label="_JOIN_15630025None...",shape=box];
	_JOIN_15630025 -> 15842037;
	15631011 [label="15631011  int k;...",shape=box];
	ForLoop15630025 [label="ForLoop15630025  for (k=kk; k<=cbv_6; k=k+16) {...",shape=box];
	ForLoop15630025 -> 15727256;
	ForLoop15630025 -> _JOIN_15630025;
	15701233 [label="15701233  tmp[(it+21)]=scv_19;...",shape=box];
	15772832 [label="15772832  tmp[i]=scv_116;...",shape=box];
	15772832 -> _JOIN_15631546;
	15821007 [label="15821007  register int cbv_1;...",shape=box];
	15729631 [label="15729631  double scv_68;...",shape=box];
	15660541 [label="15660541  double scv_18;...",shape=box];
	_JOIN_15630850 [label="_JOIN_15630850None...",shape=box];
	_JOIN_15630850 -> _JOIN_15630852;
	_JOIN_15630852 [label="_JOIN_15630852None...",shape=box];
	_JOIN_15630852 -> 15768189;
	_JOIN_15630854 [label="_JOIN_15630854None...",shape=box];
	_JOIN_15630854 -> ForLoop15631546;
	ForLoop15630979 [label="ForLoop15630979  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop15630979 -> ForLoop15630978;
	ForLoop15630979 -> _JOIN_15630979;
	ForLoop15630978 [label="ForLoop15630978  for (jj=jjj; jj<=min(ny-1,jjj+1792); jj=jj+256) {...",shape=box];
	ForLoop15630978 -> 15842117;
	ForLoop15630978 -> _JOIN_15630978;
	ForLoop15630977 [label="ForLoop15630977  for (j=jj; j<=cbv_9; j=j+1) {...",shape=box];
	ForLoop15630977 -> 15630976;
	ForLoop15630977 -> _JOIN_15630977;
	15593734 [label="15593734  double x_copy;...",shape=box];
	_JOIN_15307137 [label="_JOIN_15307137None...",shape=box];
	_JOIN_15307137 -> 15593734;
	ForLoop15594763 [label="ForLoop15594763  for (jj=jjj; jj<=min(ny-1,jjj+1792); jj=jj+256) {...",shape=box];
	ForLoop15594763 -> 15821007;
	ForLoop15594763 -> _JOIN_15594763;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest71.exe __orio_perftest71.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest71.exe  
{'[4, 5, 5, 6, 6, 5, 0, 0, 2, 29, 0, 15, 2, 0, 0, 1, 1, 1]' : 0.180464}
{'[4, 5, 5, 6, 6, 5, 0, 0, 2, 29, 0, 15, 2, 0, 0, 1, 1, 1]' : 0.180112}
{'[4, 5, 5, 6, 6, 5, 0, 0, 2, 29, 0, 15, 2, 0, 0, 1, 1, 1]' : 0.179462}
{'[4, 5, 5, 6, 6, 5, 0, 0, 2, 29, 0, 15, 2, 0, 0, 1, 1, 1]' : 0.180229}
{'[4, 5, 5, 6, 6, 5, 0, 0, 2, 29, 0, 15, 2, 0, 0, 1, 1, 1]' : 0.180192}
{'[4, 5, 5, 6, 6, 5, 0, 0, 2, 29, 0, 15, 2, 0, 0, 1, 1, 1]' : 0.179494}
{'[4, 5, 5, 6, 6, 5, 0, 0, 2, 29, 0, 15, 2, 0, 0, 1, 1, 1]' : 0.18036}
{'[4, 5, 5, 6, 6, 5, 0, 0, 2, 29, 0, 15, 2, 0, 0, 1, 1, 1]' : 0.179858}
{'[4, 5, 5, 6, 6, 5, 0, 0, 2, 29, 0, 15, 2, 0, 0, 1, 1, 1]' : 0.179805}
{'[4, 5, 5, 6, 6, 5, 0, 0, 2, 29, 0, 15, 2, 0, 0, 1, 1, 1]' : 0.179847}
{'[4, 5, 5, 6, 6, 5, 0, 0, 2, 29, 0, 15, 2, 0, 0, 1, 1, 1]' : 0.17964}
{'[4, 5, 5, 6, 6, 5, 0, 0, 2, 29, 0, 15, 2, 0, 0, 1, 1, 1]' : 0.181679}
{'[4, 5, 5, 6, 6, 5, 0, 0, 2, 29, 0, 15, 2, 0, 0, 1, 1, 1]' : 0.179859}
{'[4, 5, 5, 6, 6, 5, 0, 0, 2, 29, 0, 15, 2, 0, 0, 1, 1, 1]' : 0.180297}
{'[4, 5, 5, 6, 6, 5, 0, 0, 2, 29, 0, 15, 2, 0, 0, 1, 1, 1]' : 0.180083}
{'[4, 5, 5, 6, 6, 5, 0, 0, 2, 29, 0, 15, 2, 0, 0, 1, 1, 1]' : 0.180003}
{'[4, 5, 5, 6, 6, 5, 0, 0, 2, 29, 0, 15, 2, 0, 0, 1, 1, 1]' : 0.18015}
{'[4, 5, 5, 6, 6, 5, 0, 0, 2, 29, 0, 15, 2, 0, 0, 1, 1, 1]' : 0.180057}
{'[4, 5, 5, 6, 6, 5, 0, 0, 2, 29, 0, 15, 2, 0, 0, 1, 1, 1]' : 0.180476}
{'[4, 5, 5, 6, 6, 5, 0, 0, 2, 29, 0, 15, 2, 0, 0, 1, 1, 1]' : 0.179514}
{'[4, 5, 5, 6, 6, 5, 0, 0, 2, 29, 0, 15, 2, 0, 0, 1, 1, 1]' : 0.179826}
{'[4, 5, 5, 6, 6, 5, 0, 0, 2, 29, 0, 15, 2, 0, 0, 1, 1, 1]' : 0.179609}
{'[4, 5, 5, 6, 6, 5, 0, 0, 2, 29, 0, 15, 2, 0, 0, 1, 1, 1]' : 0.180288}
{'[4, 5, 5, 6, 6, 5, 0, 0, 2, 29, 0, 15, 2, 0, 0, 1, 1, 1]' : 0.180487}
{'[4, 5, 5, 6, 6, 5, 0, 0, 2, 29, 0, 15, 2, 0, 0, 1, 1, 1]' : 0.179711}
{'[4, 5, 5, 6, 6, 5, 0, 0, 2, 29, 0, 15, 2, 0, 0, 1, 1, 1]' : 0.179562}
{'[4, 5, 5, 6, 6, 5, 0, 0, 2, 29, 0, 15, 2, 0, 0, 1, 1, 1]' : 0.179726}
{'[4, 5, 5, 6, 6, 5, 0, 0, 2, 29, 0, 15, 2, 0, 0, 1, 1, 1]' : 0.180172}
{'[4, 5, 5, 6, 6, 5, 0, 0, 2, 29, 0, 15, 2, 0, 0, 1, 1, 1]' : 0.180062}
{'[4, 5, 5, 6, 6, 5, 0, 0, 2, 29, 0, 15, 2, 0, 0, 1, 1, 1]' : 0.18004}

out:
 ["{'[4, 5, 5, 6, 6, 5, 0, 0, 2, 29, 0, 15, 2, 0, 0, 1, 1, 1]' : 0.180464}", "{'[4, 5, 5, 6, 6, 5, 0, 0, 2, 29, 0, 15, 2, 0, 0, 1, 1, 1]' : 0.180112}", "{'[4, 5, 5, 6, 6, 5, 0, 0, 2, 29, 0, 15, 2, 0, 0, 1, 1, 1]' : 0.179462}", "{'[4, 5, 5, 6, 6, 5, 0, 0, 2, 29, 0, 15, 2, 0, 0, 1, 1, 1]' : 0.180229}", "{'[4, 5, 5, 6, 6, 5, 0, 0, 2, 29, 0, 15, 2, 0, 0, 1, 1, 1]' : 0.180192}", "{'[4, 5, 5, 6, 6, 5, 0, 0, 2, 29, 0, 15, 2, 0, 0, 1, 1, 1]' : 0.179494}", "{'[4, 5, 5, 6, 6, 5, 0, 0, 2, 29, 0, 15, 2, 0, 0, 1, 1, 1]' : 0.18036}", "{'[4, 5, 5, 6, 6, 5, 0, 0, 2, 29, 0, 15, 2, 0, 0, 1, 1, 1]' : 0.179858}", "{'[4, 5, 5, 6, 6, 5, 0, 0, 2, 29, 0, 15, 2, 0, 0, 1, 1, 1]' : 0.179805}", "{'[4, 5, 5, 6, 6, 5, 0, 0, 2, 29, 0, 15, 2, 0, 0, 1, 1, 1]' : 0.179847}", "{'[4, 5, 5, 6, 6, 5, 0, 0, 2, 29, 0, 15, 2, 0, 0, 1, 1, 1]' : 0.17964}", "{'[4, 5, 5, 6, 6, 5, 0, 0, 2, 29, 0, 15, 2, 0, 0, 1, 1, 1]' : 0.181679}", "{'[4, 5, 5, 6, 6, 5, 0, 0, 2, 29, 0, 15, 2, 0, 0, 1, 1, 1]' : 0.179859}", "{'[4, 5, 5, 6, 6, 5, 0, 0, 2, 29, 0, 15, 2, 0, 0, 1, 1, 1]' : 0.180297}", "{'[4, 5, 5, 6, 6, 5, 0, 0, 2, 29, 0, 15, 2, 0, 0, 1, 1, 1]' : 0.180083}", "{'[4, 5, 5, 6, 6, 5, 0, 0, 2, 29, 0, 15, 2, 0, 0, 1, 1, 1]' : 0.180003}", "{'[4, 5, 5, 6, 6, 5, 0, 0, 2, 29, 0, 15, 2, 0, 0, 1, 1, 1]' : 0.18015}", "{'[4, 5, 5, 6, 6, 5, 0, 0, 2, 29, 0, 15, 2, 0, 0, 1, 1, 1]' : 0.180057}", "{'[4, 5, 5, 6, 6, 5, 0, 0, 2, 29, 0, 15, 2, 0, 0, 1, 1, 1]' : 0.180476}", "{'[4, 5, 5, 6, 6, 5, 0, 0, 2, 29, 0, 15, 2, 0, 0, 1, 1, 1]' : 0.179514}", "{'[4, 5, 5, 6, 6, 5, 0, 0, 2, 29, 0, 15, 2, 0, 0, 1, 1, 1]' : 0.179826}", "{'[4, 5, 5, 6, 6, 5, 0, 0, 2, 29, 0, 15, 2, 0, 0, 1, 1, 1]' : 0.179609}", "{'[4, 5, 5, 6, 6, 5, 0, 0, 2, 29, 0, 15, 2, 0, 0, 1, 1, 1]' : 0.180288}", "{'[4, 5, 5, 6, 6, 5, 0, 0, 2, 29, 0, 15, 2, 0, 0, 1, 1, 1]' : 0.180487}", "{'[4, 5, 5, 6, 6, 5, 0, 0, 2, 29, 0, 15, 2, 0, 0, 1, 1, 1]' : 0.179711}", "{'[4, 5, 5, 6, 6, 5, 0, 0, 2, 29, 0, 15, 2, 0, 0, 1, 1, 1]' : 0.179562}", "{'[4, 5, 5, 6, 6, 5, 0, 0, 2, 29, 0, 15, 2, 0, 0, 1, 1, 1]' : 0.179726}", "{'[4, 5, 5, 6, 6, 5, 0, 0, 2, 29, 0, 15, 2, 0, 0, 1, 1, 1]' : 0.180172}", "{'[4, 5, 5, 6, 6, 5, 0, 0, 2, 29, 0, 15, 2, 0, 0, 1, 1, 1]' : 0.180062}", "{'[4, 5, 5, 6, 6, 5, 0, 0, 2, 29, 0, 15, 2, 0, 0, 1, 1, 1]' : 0.18004}"]
returning from 'run': {'[4, 5, 5, 6, 6, 5, 0, 0, 2, 29, 0, 15, 2, 0, 0, 1, 1, 1]': ([0.180464, 0.180112, 0.179462, 0.180229, 0.180192, 0.179494, 0.18036, 0.179858, 0.179805, 0.179847, 0.17964, 0.181679, 0.179859, 0.180297, 0.180083, 0.180003, 0.18015, 0.180057, 0.180476, 0.179514, 0.179826, 0.179609, 0.180288, 0.180487, 0.179711, 0.179562, 0.179726, 0.180172, 0.180062, 0.18004], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.180464, 0.180112, 0.179462, 0.180229, 0.180192, 0.179494, 0.18036, 0.179858, 0.179805, 0.179847, 0.17964, 0.181679, 0.179859, 0.180297, 0.180083, 0.180003, 0.18015, 0.180057, 0.180476, 0.179514, 0.179826, 0.179609, 0.180288, 0.180487, 0.179711, 0.179562, 0.179726, 0.180172, 0.180062, 0.18004], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[4, 5, 5, 6, 6, 5, 0, 0, 2, 29, 0, 15, 2, 0, 0, 1, 1, 1]': ([0.180464, 0.180112, 0.179462, 0.180229, 0.180192, 0.179494, 0.18036, 0.179858, 0.179805, 0.179847, 0.17964, 0.181679, 0.179859, 0.180297, 0.180083, 0.180003, 0.18015, 0.180057, 0.180476, 0.179514, 0.179826, 0.179609, 0.180288, 0.180487, 0.179711, 0.179562, 0.179726, 0.180172, 0.180062, 0.18004], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Slowdown: 1.39483768966
Budget: 68/1
Step 2
 ~ T1_I + T1_J + T1_K + T2_I + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + VEC2
Fixed Factors: {'T2_K': 5, 'T2_J': 6, 'SCR': 1, 'VEC1': 1}
Full data does not fit on budget
Computing D-Optimal Design
Updating Constraints
Updated Constraint: True and (((T2_I ==1 )or (T2_I %T1_I ==0 ))) and (((T2_J ==1 )or (T2_J %T1_J ==0 ))) and (((T2_K ==1 )or (T2_K %T1_K ==0 ))) and ((RT_I *RT_J +RT_I *RT_K +RT_J *RT_K <=150 )) and (((U_I ==1 )or (U_J ==1 )or (U_K ==1 )))
Computing D-Optimal Design with 28 experiments
Design Formula:  ~ T1_I + T1_J + T1_K + T2_I + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + VEC2
Starting "optMonteCarlo" run
       var low high center nLevels round factor   mix
1     T1_I   0    6      0       7     0  FALSE FALSE
2     T1_J   0    6      0       7     0  FALSE FALSE
3     T1_K   0    6      0       7     0  FALSE FALSE
4     T2_I   0    6      0       7     0  FALSE FALSE
5  ACOPY_x   0    1      0       2     0  FALSE FALSE
6  ACOPY_y   0    1      0       2     0  FALSE FALSE
7     U1_I   0   29      0      30     0  FALSE FALSE
8      U_I   0   29      0      30     0  FALSE FALSE
9      U_J   0   29      0      30     0  FALSE FALSE
10     U_K   0   29      0      30     0  FALSE FALSE
11    RT_I   0    2      0       3     0  FALSE FALSE
12    RT_J   0    2      0       3     0  FALSE FALSE
13    RT_K   0    2      0       3     0  FALSE FALSE
14    VEC2   0    1      0       2     0  FALSE FALSE

   T1_I T1_J T1_K T2_I ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J RT_K VEC2
1     1    1    5    1       1       1   24  11  22   0    0    2    0    0
2     3    0    6    3       1       1    2  29   0  22    0    0    2    1
3     5    0    1    0       0       1   18  28  18   0    1    1    0    1
4     1    5    2    6       1       0    2   4   0  26    0    1    1    1
5     2    1    2    4       1       0   19  16   3   0    0    0    0    1
6     0    3    1    6       0       0    5  11  26   0    0    0    0    0
7     1    4    4    0       1       0    3  11  16   0    0    2    0    0
8     1    0    6    5       1       1   17   0   1   3    0    0    1    0
9     2    1    0    3       1       1    3   0  17  10    2    0    0    0
10    6    3    1    6       0       1    0  12   0  21    0    1    0    0
11    0    1    5    1       0       1   23   0  26  24    1    0    1    0
12    2    5    4    0       0       1    6   4   0   3    1    0    1    0
13    5    5    2    0       1       0   13  27   0  21    0    1    0    0
14    0    4    6    5       0       0   18   0   3   1    0    1    1    1
15    1    3    5    0       1       0   27   0  21  21    0    0    0    0
16    1    0    5    1       0       0    5  17   1   0    2    0    0    1
17    2    1    5    6       0       0   15  27   0  27    1    1    0    0
18    2    6    6    2       0       1   16  27  25   0    0    0    0    1
19    2    1    1    6       0       0   25   0  23  19    2    0    0    1
20    1    1    4    4       1       0    3  29  25   0    0    0    2    0
21    6    3    6    5       1       0    0  17   4   0    1    1    0    0
22    6    4    5    4       1       0   10   0  29  28    0    1    0    0
23    1    6    1    4       0       0   16  18  23   0    0    0    2    0
24    3    6    1    6       1       1   24  26   0  11    1    1    0    1
25    5    5    5    0       0       0    1   0  20   3    1    0    0    1
26    6    2    0    4       0       0   28  11   0   8    1    0    1    0
27    6    0    3    6       1       1   19   0  20   5    0    2    0    1
28    3    5    5    5       1       1   21  20  16   0    2    0    0    0

D-Efficiency Approximation: [1] 0.68

Measuring design of size 14
Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Design Line: [1, 1, 5, 1, 1, 1, 24, 11, 22, 0, 0, 2, 0, 0]
Fixed Factors: {'T2_K': 5, 'T2_J': 6, 'SCR': 1, 'VEC1': 1}
Testing candidate 1: [1, 1, 5, 1, 6, 5, 1, 1, 24, 11, 22, 0, 0, 2, 0, 1, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	57
        Max loop nest depth: 	6
        Additions: 		2018
        Multiplications: 	858
        Divisions: 		0
        Logical: 		0
        Reads: 			3946
        Writes: 		686
        Comparisons:		57
        Gotos: 			0
        
digraph CFG {
	15978639 [label="15978639  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	15978639 -> ForLoop15979583;
	ForLoop15978524 [label="ForLoop15978524  for (i=ii; i<=min(nx-1,ii+15)-11; i=i+12) {...",shape=box];
	ForLoop15978524 -> 16037480;
	ForLoop15978524 -> _JOIN_15978524;
	ForLoop15843724 [label="ForLoop15843724  for (i=0; i<=cbv_1; i=i+25) {...",shape=box];
	ForLoop15843724 -> 15843506;
	ForLoop15843724 -> _JOIN_15843724;
	_JOIN_15979727 [label="_JOIN_15979727None...",shape=box];
	_JOIN_15979727 -> 16043593;
	ForLoop15978520 [label="ForLoop15978520  for (kk=kkk; kk<=min(ny-1,kkk+768); kk=kk+256) {...",shape=box];
	ForLoop15978520 -> 15977407;
	ForLoop15978520 -> _JOIN_15978520;
	ForLoop15978522 [label="ForLoop15978522  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop15978522 -> ForLoop15978520;
	ForLoop15978522 -> _JOIN_15978522;
	_JOIN_15979731 [label="_JOIN_15979731None...",shape=box];
	_JOIN_15979731 -> _JOIN_15979732;
	15844059 [label="15844059  register int cbv_2, cbv_3;...",shape=box];
	_JOIN_15979726 [label="_JOIN_15979726None...",shape=box];
	_JOIN_15979726 -> _JOIN_15979727;
	ForLoop15979726 [label="ForLoop15979726  for (kk=kkk; kk<=min(ny-1,kkk+768); kk=kk+256) {...",shape=box];
	ForLoop15979726 -> 15979648;
	ForLoop15979726 -> _JOIN_15979726;
	_JOIN_15979583 [label="_JOIN_15979583None...",shape=box];
	_JOIN_15979583 -> _JOIN_15979585;
	15978177 [label="15978177  for (k=kk; k<=min(ny-1,kk+255); k=k+1) ...",shape=box];
	_JOIN_15843793 [label="_JOIN_15843793None...",shape=box];
	_JOIN_15843793 -> 15963270;
	ForLoop15979729 [label="ForLoop15979729  for (i=(min(nx-1,ii+15))-(((min(nx-1,ii+15))-(ii)+1)%12)+1; i<=min(nx-1,ii+15); i=i+1) {...",shape=box];
	ForLoop15979729 -> 16043581;
	ForLoop15979729 -> _JOIN_15979729;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 15843089;
	_JOIN_15979585 [label="_JOIN_15979585None...",shape=box];
	_JOIN_15979585 -> _JOIN_15979586;
	ForLoop15979583 [label="ForLoop15979583  for (jt=jj; jt<=min(ny-1,jj+15)-31; jt=jt+32) {...",shape=box];
	ForLoop15979583 -> 15978682;
	ForLoop15979583 -> _JOIN_15979583;
	ForLoop15978146 [label="ForLoop15978146  for (k=kk; k<=min(ny-1,kk+255); k=k+1) {...",shape=box];
	ForLoop15978146 -> 16022513;
	ForLoop15978146 -> _JOIN_15978146;
	15979724 [label="15979724  for (k=kk; k<=min(ny-1,kk+255); k=k+1) ...",shape=box];
	15979724 -> _JOIN_15979726;
	16037480 [label="16037480  double scv_34, scv_35, scv_36, scv_37, scv_38, scv_39, scv_40, scv_41;...",shape=box];
	15843506 [label="15843506  y[i]=0.0;...",shape=box];
	15963270 [label="15963270  double x_copy[16];...",shape=box];
	ForLoop15843793 [label="ForLoop15843793  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop15843793 -> 15843792;
	ForLoop15843793 -> _JOIN_15843793;
	_JOIN_15978520 [label="_JOIN_15978520None...",shape=box];
	_JOIN_15978520 -> _JOIN_15978522;
	16043593 [label="16043593  tmp[i]=scv_47;...",shape=box];
	16043593 -> _JOIN_15979729;
	16022513 [label="16022513  double scv_33;...",shape=box];
	_JOIN_15977345 [label="_JOIN_15977345Nonexpected=0.000000
actual=9369846271501.798828
e...",shape=box];
	_JOIN_15977345 -> ForLoop15978522;
	ForLoop15979586 [label="ForLoop15979586  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop15979586 -> ForLoop15979585;
	ForLoop15979586 -> _JOIN_15979586;
	15998047 [label="15998047  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	16043581 [label="16043581  double scv_47;...",shape=box];
	_JOIN_15977341 [label="_JOIN_15977341None...",shape=box];
	_JOIN_15977341 -> _JOIN_15977343;
	15843089 [label="15843089  int i;...",shape=box];
	_JOIN_15977343 [label="_JOIN_15977343None...",shape=box];
	_JOIN_15977343 -> _JOIN_15977345;
	15963490 [label="15963490  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	_JOIN_15978522 [label="_JOIN_15978522None...",shape=box];
	_JOIN_15978522 -> 16037498;
	_JOIN_15978524 [label="_JOIN_15978524None...",shape=box];
	_JOIN_15978524 -> ForLoop15979729;
	ForLoop15979585 [label="ForLoop15979585  for (jj=jjj; jj<=min(ny-1,jjj+2032); jj=jj+16) {...",shape=box];
	ForLoop15979585 -> 15978639;
	ForLoop15979585 -> _JOIN_15979585;
	_JOIN_15979729 [label="_JOIN_15979729None...",shape=box];
	_JOIN_15979729 -> _JOIN_15979731;
	ForLoop15977345 [label="ForLoop15977345  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop15977345 -> ForLoop15977343;
	ForLoop15977345 -> _JOIN_15977345;
	15979648 [label="15979648  for (k=kk; k<=min(ny-1,kk+255); k=k+1) ...",shape=box];
	15979648 -> ForLoop15979693;
	ForLoop15979732 [label="ForLoop15979732  for (iii=0; iii<=nx-1; iii=iii+64) {...",shape=box];
	ForLoop15979732 -> ForLoop15979731;
	ForLoop15979732 -> _JOIN_15979732;
	ForLoop15979731 [label="ForLoop15979731  for (ii=iii; ii<=min(nx-1,iii+48); ii=ii+16) {...",shape=box];
	ForLoop15979731 -> 15963303;
	ForLoop15979731 -> _JOIN_15979731;
	ForLoop15977343 [label="ForLoop15977343  for (jj=jjj; jj<=min(ny-1,jjj+2032); jj=jj+16) {...",shape=box];
	ForLoop15977343 -> 15963490;
	ForLoop15977343 -> _JOIN_15977343;
	16042076 [label="16042076  double scv_46;...",shape=box];
	_JOIN_15978146 [label="_JOIN_15978146None...",shape=box];
	_JOIN_15978146 -> 15978177;
	_JOIN_15979693 [label="_JOIN_15979693None...",shape=box];
	_JOIN_15979693 -> 15979724;
	16037498 [label="16037498  tmp[(i+1)]=scv_34;...",shape=box];
	15843792 [label="15843792  y[i]=0.0;...",shape=box];
	15843792 -> _JOIN_15843793;
	15978682 [label="15978682  scv_47=scv_47+A[i*ny+jt]*x_copy[(jt-jj)];...",shape=box];
	15977407 [label="15977407  for (k=kk; k<=min(ny-1,kk+255); k=k+1) ...",shape=box];
	ForLoop15979693 [label="ForLoop15979693  for (k=kk; k<=min(ny-1,kk+255); k=k+1) {...",shape=box];
	ForLoop15979693 -> 16042076;
	ForLoop15979693 -> _JOIN_15979693;
	_JOIN_15979586 [label="_JOIN_15979586None...",shape=box];
	_JOIN_15979586 -> ForLoop15979727;
	_JOIN_15979732 [label="_JOIN_15979732None...",shape=box];
	15963303 [label="15963303  int i;...",shape=box];
	15963303 -> ForLoop15978524;
	ForLoop15979727 [label="ForLoop15979727  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop15979727 -> ForLoop15979726;
	ForLoop15979727 -> _JOIN_15979727;
	_JOIN_15843724 [label="_JOIN_15843724None...",shape=box];
	_JOIN_15843724 -> 15844059;
	ForLoop15977341 [label="ForLoop15977341  for (jt=jj; jt<=min(ny-1,jj+15)-31; jt=jt+32) {...",shape=box];
	ForLoop15977341 -> 15998047;
	ForLoop15977341 -> _JOIN_15977341;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest72.exe __orio_perftest72.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest72.exe  
{'[1, 1, 5, 1, 6, 5, 1, 1, 24, 11, 22, 0, 0, 2, 0, 1, 1, 0]' : 0.136338}
{'[1, 1, 5, 1, 6, 5, 1, 1, 24, 11, 22, 0, 0, 2, 0, 1, 1, 0]' : 0.136258}
{'[1, 1, 5, 1, 6, 5, 1, 1, 24, 11, 22, 0, 0, 2, 0, 1, 1, 0]' : 0.136064}
{'[1, 1, 5, 1, 6, 5, 1, 1, 24, 11, 22, 0, 0, 2, 0, 1, 1, 0]' : 0.137151}
{'[1, 1, 5, 1, 6, 5, 1, 1, 24, 11, 22, 0, 0, 2, 0, 1, 1, 0]' : 0.136118}
{'[1, 1, 5, 1, 6, 5, 1, 1, 24, 11, 22, 0, 0, 2, 0, 1, 1, 0]' : 0.136164}
{'[1, 1, 5, 1, 6, 5, 1, 1, 24, 11, 22, 0, 0, 2, 0, 1, 1, 0]' : 0.136057}
{'[1, 1, 5, 1, 6, 5, 1, 1, 24, 11, 22, 0, 0, 2, 0, 1, 1, 0]' : 0.136067}
{'[1, 1, 5, 1, 6, 5, 1, 1, 24, 11, 22, 0, 0, 2, 0, 1, 1, 0]' : 0.136102}
{'[1, 1, 5, 1, 6, 5, 1, 1, 24, 11, 22, 0, 0, 2, 0, 1, 1, 0]' : 0.136095}
{'[1, 1, 5, 1, 6, 5, 1, 1, 24, 11, 22, 0, 0, 2, 0, 1, 1, 0]' : 0.136187}
{'[1, 1, 5, 1, 6, 5, 1, 1, 24, 11, 22, 0, 0, 2, 0, 1, 1, 0]' : 0.136162}
{'[1, 1, 5, 1, 6, 5, 1, 1, 24, 11, 22, 0, 0, 2, 0, 1, 1, 0]' : 0.13633}
{'[1, 1, 5, 1, 6, 5, 1, 1, 24, 11, 22, 0, 0, 2, 0, 1, 1, 0]' : 0.136102}
{'[1, 1, 5, 1, 6, 5, 1, 1, 24, 11, 22, 0, 0, 2, 0, 1, 1, 0]' : 0.136065}
{'[1, 1, 5, 1, 6, 5, 1, 1, 24, 11, 22, 0, 0, 2, 0, 1, 1, 0]' : 0.136076}
{'[1, 1, 5, 1, 6, 5, 1, 1, 24, 11, 22, 0, 0, 2, 0, 1, 1, 0]' : 0.136101}
{'[1, 1, 5, 1, 6, 5, 1, 1, 24, 11, 22, 0, 0, 2, 0, 1, 1, 0]' : 0.136155}
{'[1, 1, 5, 1, 6, 5, 1, 1, 24, 11, 22, 0, 0, 2, 0, 1, 1, 0]' : 0.137084}
{'[1, 1, 5, 1, 6, 5, 1, 1, 24, 11, 22, 0, 0, 2, 0, 1, 1, 0]' : 0.136199}
{'[1, 1, 5, 1, 6, 5, 1, 1, 24, 11, 22, 0, 0, 2, 0, 1, 1, 0]' : 0.136082}
{'[1, 1, 5, 1, 6, 5, 1, 1, 24, 11, 22, 0, 0, 2, 0, 1, 1, 0]' : 0.136112}
{'[1, 1, 5, 1, 6, 5, 1, 1, 24, 11, 22, 0, 0, 2, 0, 1, 1, 0]' : 0.136062}
{'[1, 1, 5, 1, 6, 5, 1, 1, 24, 11, 22, 0, 0, 2, 0, 1, 1, 0]' : 0.136296}
{'[1, 1, 5, 1, 6, 5, 1, 1, 24, 11, 22, 0, 0, 2, 0, 1, 1, 0]' : 0.136169}
{'[1, 1, 5, 1, 6, 5, 1, 1, 24, 11, 22, 0, 0, 2, 0, 1, 1, 0]' : 0.136178}
{'[1, 1, 5, 1, 6, 5, 1, 1, 24, 11, 22, 0, 0, 2, 0, 1, 1, 0]' : 0.136047}
{'[1, 1, 5, 1, 6, 5, 1, 1, 24, 11, 22, 0, 0, 2, 0, 1, 1, 0]' : 0.136276}
{'[1, 1, 5, 1, 6, 5, 1, 1, 24, 11, 22, 0, 0, 2, 0, 1, 1, 0]' : 0.136109}
{'[1, 1, 5, 1, 6, 5, 1, 1, 24, 11, 22, 0, 0, 2, 0, 1, 1, 0]' : 0.136125}

out:
 ["{'[1, 1, 5, 1, 6, 5, 1, 1, 24, 11, 22, 0, 0, 2, 0, 1, 1, 0]' : 0.136338}", "{'[1, 1, 5, 1, 6, 5, 1, 1, 24, 11, 22, 0, 0, 2, 0, 1, 1, 0]' : 0.136258}", "{'[1, 1, 5, 1, 6, 5, 1, 1, 24, 11, 22, 0, 0, 2, 0, 1, 1, 0]' : 0.136064}", "{'[1, 1, 5, 1, 6, 5, 1, 1, 24, 11, 22, 0, 0, 2, 0, 1, 1, 0]' : 0.137151}", "{'[1, 1, 5, 1, 6, 5, 1, 1, 24, 11, 22, 0, 0, 2, 0, 1, 1, 0]' : 0.136118}", "{'[1, 1, 5, 1, 6, 5, 1, 1, 24, 11, 22, 0, 0, 2, 0, 1, 1, 0]' : 0.136164}", "{'[1, 1, 5, 1, 6, 5, 1, 1, 24, 11, 22, 0, 0, 2, 0, 1, 1, 0]' : 0.136057}", "{'[1, 1, 5, 1, 6, 5, 1, 1, 24, 11, 22, 0, 0, 2, 0, 1, 1, 0]' : 0.136067}", "{'[1, 1, 5, 1, 6, 5, 1, 1, 24, 11, 22, 0, 0, 2, 0, 1, 1, 0]' : 0.136102}", "{'[1, 1, 5, 1, 6, 5, 1, 1, 24, 11, 22, 0, 0, 2, 0, 1, 1, 0]' : 0.136095}", "{'[1, 1, 5, 1, 6, 5, 1, 1, 24, 11, 22, 0, 0, 2, 0, 1, 1, 0]' : 0.136187}", "{'[1, 1, 5, 1, 6, 5, 1, 1, 24, 11, 22, 0, 0, 2, 0, 1, 1, 0]' : 0.136162}", "{'[1, 1, 5, 1, 6, 5, 1, 1, 24, 11, 22, 0, 0, 2, 0, 1, 1, 0]' : 0.13633}", "{'[1, 1, 5, 1, 6, 5, 1, 1, 24, 11, 22, 0, 0, 2, 0, 1, 1, 0]' : 0.136102}", "{'[1, 1, 5, 1, 6, 5, 1, 1, 24, 11, 22, 0, 0, 2, 0, 1, 1, 0]' : 0.136065}", "{'[1, 1, 5, 1, 6, 5, 1, 1, 24, 11, 22, 0, 0, 2, 0, 1, 1, 0]' : 0.136076}", "{'[1, 1, 5, 1, 6, 5, 1, 1, 24, 11, 22, 0, 0, 2, 0, 1, 1, 0]' : 0.136101}", "{'[1, 1, 5, 1, 6, 5, 1, 1, 24, 11, 22, 0, 0, 2, 0, 1, 1, 0]' : 0.136155}", "{'[1, 1, 5, 1, 6, 5, 1, 1, 24, 11, 22, 0, 0, 2, 0, 1, 1, 0]' : 0.137084}", "{'[1, 1, 5, 1, 6, 5, 1, 1, 24, 11, 22, 0, 0, 2, 0, 1, 1, 0]' : 0.136199}", "{'[1, 1, 5, 1, 6, 5, 1, 1, 24, 11, 22, 0, 0, 2, 0, 1, 1, 0]' : 0.136082}", "{'[1, 1, 5, 1, 6, 5, 1, 1, 24, 11, 22, 0, 0, 2, 0, 1, 1, 0]' : 0.136112}", "{'[1, 1, 5, 1, 6, 5, 1, 1, 24, 11, 22, 0, 0, 2, 0, 1, 1, 0]' : 0.136062}", "{'[1, 1, 5, 1, 6, 5, 1, 1, 24, 11, 22, 0, 0, 2, 0, 1, 1, 0]' : 0.136296}", "{'[1, 1, 5, 1, 6, 5, 1, 1, 24, 11, 22, 0, 0, 2, 0, 1, 1, 0]' : 0.136169}", "{'[1, 1, 5, 1, 6, 5, 1, 1, 24, 11, 22, 0, 0, 2, 0, 1, 1, 0]' : 0.136178}", "{'[1, 1, 5, 1, 6, 5, 1, 1, 24, 11, 22, 0, 0, 2, 0, 1, 1, 0]' : 0.136047}", "{'[1, 1, 5, 1, 6, 5, 1, 1, 24, 11, 22, 0, 0, 2, 0, 1, 1, 0]' : 0.136276}", "{'[1, 1, 5, 1, 6, 5, 1, 1, 24, 11, 22, 0, 0, 2, 0, 1, 1, 0]' : 0.136109}", "{'[1, 1, 5, 1, 6, 5, 1, 1, 24, 11, 22, 0, 0, 2, 0, 1, 1, 0]' : 0.136125}"]
returning from 'run': {'[1, 1, 5, 1, 6, 5, 1, 1, 24, 11, 22, 0, 0, 2, 0, 1, 1, 0]': ([0.136338, 0.136258, 0.136064, 0.137151, 0.136118, 0.136164, 0.136057, 0.136067, 0.136102, 0.136095, 0.136187, 0.136162, 0.13633, 0.136102, 0.136065, 0.136076, 0.136101, 0.136155, 0.137084, 0.136199, 0.136082, 0.136112, 0.136062, 0.136296, 0.136169, 0.136178, 0.136047, 0.136276, 0.136109, 0.136125], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.136338, 0.136258, 0.136064, 0.137151, 0.136118, 0.136164, 0.136057, 0.136067, 0.136102, 0.136095, 0.136187, 0.136162, 0.13633, 0.136102, 0.136065, 0.136076, 0.136101, 0.136155, 0.137084, 0.136199, 0.136082, 0.136112, 0.136062, 0.136296, 0.136169, 0.136178, 0.136047, 0.136276, 0.136109, 0.136125], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[1, 1, 5, 1, 6, 5, 1, 1, 24, 11, 22, 0, 0, 2, 0, 1, 1, 0]': ([0.136338, 0.136258, 0.136064, 0.137151, 0.136118, 0.136164, 0.136057, 0.136067, 0.136102, 0.136095, 0.136187, 0.136162, 0.13633, 0.136102, 0.136065, 0.136076, 0.136101, 0.136155, 0.137084, 0.136199, 0.136082, 0.136112, 0.136062, 0.136296, 0.136169, 0.136178, 0.136047, 0.136276, 0.136109, 0.136125], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [3, 0, 6, 3, 1, 1, 2, 29, 0, 22, 0, 0, 2, 1]
Fixed Factors: {'T2_K': 5, 'T2_J': 6, 'SCR': 1, 'VEC1': 1}
Testing candidate 2: [3, 0, 6, 3, 6, 5, 1, 1, 2, 29, 0, 22, 0, 0, 2, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	109
        Max loop nest depth: 	6
        Additions: 		4706
        Multiplications: 	2046
        Divisions: 		0
        Logical: 		0
        Reads: 			9138
        Writes: 		1567
        Comparisons:		109
        Gotos: 			0
        
digraph CFG {
	ForLoop16345975 [label="ForLoop16345975  for (j=jjj; j<=cbv_3; j=j+1) {...",shape=box];
	ForLoop16345975 -> 16345974;
	ForLoop16345975 -> _JOIN_16345975;
	16344931 [label="16344931  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	_JOIN_16064751 [label="_JOIN_16064751None...",shape=box];
	_JOIN_16064751 -> 16064888;
	16064644 [label="16064644  int i;...",shape=box];
	16345974 [label="16345974  scv_96=scv_96+A[i*ny+j]*x_copy[(j-jjj)];...",shape=box];
	16345974 -> _JOIN_16345975;
	16064888 [label="16064888  register int cbv_2, cbv_3;...",shape=box];
	16345933 [label="16345933  for (j=jjj; j<=min(ny-1,jjj+2047); j=j+1) ...",shape=box];
	_JOIN_16064820 [label="_JOIN_16064820None...",shape=box];
	_JOIN_16064820 -> 16305573;
	_JOIN_16347205 [label="_JOIN_16347205None...",shape=box];
	_JOIN_16347205 -> _JOIN_16347206;
	16305573 [label="16305573  double x_copy[2048];...",shape=box];
	_JOIN_16347206 [label="_JOIN_16347206None...",shape=box];
	_JOIN_16347206 -> 16488040;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 16064644;
	ForLoop16347210 [label="ForLoop16347210  for (ii=iii; ii<=min(nx-1,iii+192); ii=ii+64) {...",shape=box];
	ForLoop16347210 -> 16305606;
	ForLoop16347210 -> _JOIN_16347210;
	ForLoop16347211 [label="ForLoop16347211  for (iii=0; iii<=nx-1; iii=iii+256) {...",shape=box];
	ForLoop16347211 -> ForLoop16347210;
	ForLoop16347211 -> _JOIN_16347211;
	_JOIN_16347210 [label="_JOIN_16347210None...",shape=box];
	_JOIN_16347210 -> _JOIN_16347211;
	ForLoop16345832 [label="ForLoop16345832  for (kk=kkk; kk<=min(ny-1,kkk+512); kk=kk+512) {...",shape=box];
	ForLoop16345832 -> 16307871;
	ForLoop16345832 -> _JOIN_16345832;
	_JOIN_16344900 [label="_JOIN_16344900None...",shape=box];
	_JOIN_16344900 -> 16344931;
	16479132 [label="16479132  tmp[(i+20)]=scv_34;...",shape=box];
	_JOIN_16345977 [label="_JOIN_16345977None...",shape=box];
	_JOIN_16345977 -> ForLoop16347206;
	16346039 [label="16346039  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	ForLoop16064751 [label="ForLoop16064751  for (i=0; i<=cbv_1; i=i+3) {...",shape=box];
	ForLoop16064751 -> 16064731;
	ForLoop16064751 -> _JOIN_16064751;
	16479114 [label="16479114  double scv_34, scv_35, scv_36, scv_37, scv_38, scexpected=9339882853735.613281
actual=9369846271501.798828
v_39, scv_40, scv_41;...",shape=box];
	16347203 [label="16347203  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	16347203 -> _JOIN_16347205;
	_JOIN_16347211 [label="_JOIN_16347211None...",shape=box];
	ForLoop16347206 [label="ForLoop16347206  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop16347206 -> ForLoop16347205;
	ForLoop16347206 -> _JOIN_16347206;
	_JOIN_16347172 [label="_JOIN_16347172None...",shape=box];
	_JOIN_16347172 -> 16347203;
	16305937 [label="16305937  for (j=jjj; j<=min(ny-1,jjj+2047); j=j+1) ...",shape=box];
	ForLoop16344900 [label="ForLoop16344900  for (kt=kk; kt<=cbv_2; kt=kt+32) {...",shape=box];
	ForLoop16344900 -> 16398205;
	ForLoop16344900 -> _JOIN_16344900;
	_JOIN_16345975 [label="_JOIN_16345975None...",shape=box];
	_JOIN_16345975 -> _JOIN_16345977;
	16348656 [label="16348656  double scv_1;...",shape=box];
	_JOIN_16345836 [label="_JOIN_16345836None...",shape=box];
	_JOIN_16345836 -> ForLoop16347208;
	_JOIN_16345834 [label="_JOIN_16345834None...",shape=box];
	_JOIN_16345834 -> 16479132;
	16064731 [label="16064731  y[i]=0.0;...",shape=box];
	ForLoop16345836 [label="ForLoop16345836  for (i=ii; i<=min(nx-1,ii+63)-29; i=i+30) {...",shape=box];
	ForLoop16345836 -> 16479114;
	ForLoop16345836 -> _JOIN_16345836;
	16307871 [label="16307871  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	ForLoop16345834 [label="ForLoop16345834  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop16345834 -> ForLoop16345832;
	ForLoop16345834 -> _JOIN_16345834;
	ForLoop16347172 [label="ForLoop16347172  for (kt=kk; kt<=cbv_4; kt=kt+32) {...",shape=box];
	ForLoop16347172 -> 16482591;
	ForLoop16347172 -> _JOIN_16347172;
	16482591 [label="16482591  double scv_64, scv_65, scv_66, scv_67, scv_68, scv_69, scv_70, scv_71;...",shape=box];
	ForLoop16064820 [label="ForLoop16064820  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop16064820 -> 16064819;
	ForLoop16064820 -> _JOIN_16064820;
	ForLoop16347205 [label="ForLoop16347205  for (kk=kkk; kk<=min(ny-1,kkk+512); kk=kk+512) {...",shape=box];
	ForLoop16347205 -> 16346039;
	ForLoop16347205 -> _JOIN_16347205;
	16488040 [label="16488040  tmp[i]=scv_96;...",shape=box];
	16488040 -> _JOIN_16347208;
	ForLoop16307807 [label="ForLoop16307807  for (j=jjj; j<=cbv_1; j=j+1) {...",shape=box];
	ForLoop16307807 -> 16348656;
	ForLoop16307807 -> _JOIN_16307807;
	ForLoop16307809 [label="ForLoop16307809  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop16307809 -> 16305937;
	ForLoop16307809 -> _JOIN_16307809;
	16398205 [label="16398205  double scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8, scv_9;...",shape=box];
	16305606 [label="16305606  int i;...",shape=box];
	16305606 -> ForLoop16345836;
	ForLoop16347208 [label="ForLoop16347208  for (i=(min(nx-1,ii+63))-(((min(nx-1,ii+63))-(ii)+1)%30)+1; i<=min(nx-1,ii+63); i=i+1) {...",shape=box];
	ForLoop16347208 -> 16488028;
	ForLoop16347208 -> _JOIN_16347208;
	ForLoop16345977 [label="ForLoop16345977  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop16345977 -> 16345933;
	ForLoop16345977 -> _JOIN_16345977;
	_JOIN_16347208 [label="_JOIN_16347208None...",shape=box];
	_JOIN_16347208 -> _JOIN_16347210;
	_JOIN_16307809 [label="_JOIN_16307809None...",shape=box];
	_JOIN_16307809 -> ForLoop16345834;
	_JOIN_16307807 [label="_JOIN_16307807None...",shape=box];
	_JOIN_16307807 -> _JOIN_16307809;
	16488028 [label="16488028  double scv_96;...",shape=box];
	_JOIN_16345832 [label="_JOIN_16345832None...",shape=box];
	_JOIN_16345832 -> _JOIN_16345834;
	16064819 [label="16064819  y[i]=0.0;...",shape=box];
	16064819 -> _JOIN_16064820;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest73.exe __orio_perftest73.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest73.exe  
{'[3, 0, 6, 3, 6, 5, 1, 1, 2, 29, 0, 22, 0, 0, 2, 1, 1, 1]' : 0.188344}
{'[3, 0, 6, 3, 6, 5, 1, 1, 2, 29, 0, 22, 0, 0, 2, 1, 1, 1]' : 0.188574}
{'[3, 0, 6, 3, 6, 5, 1, 1, 2, 29, 0, 22, 0, 0, 2, 1, 1, 1]' : 0.238536}
{'[3, 0, 6, 3, 6, 5, 1, 1, 2, 29, 0, 22, 0, 0, 2, 1, 1, 1]' : 0.187758}
{'[3, 0, 6, 3, 6, 5, 1, 1, 2, 29, 0, 22, 0, 0, 2, 1, 1, 1]' : 0.188854}
{'[3, 0, 6, 3, 6, 5, 1, 1, 2, 29, 0, 22, 0, 0, 2, 1, 1, 1]' : 0.188866}
{'[3, 0, 6, 3, 6, 5, 1, 1, 2, 29, 0, 22, 0, 0, 2, 1, 1, 1]' : 0.188343}
{'[3, 0, 6, 3, 6, 5, 1, 1, 2, 29, 0, 22, 0, 0, 2, 1, 1, 1]' : 0.18789}
{'[3, 0, 6, 3, 6, 5, 1, 1, 2, 29, 0, 22, 0, 0, 2, 1, 1, 1]' : 0.188335}
{'[3, 0, 6, 3, 6, 5, 1, 1, 2, 29, 0, 22, 0, 0, 2, 1, 1, 1]' : 0.1883}
{'[3, 0, 6, 3, 6, 5, 1, 1, 2, 29, 0, 22, 0, 0, 2, 1, 1, 1]' : 0.188661}
{'[3, 0, 6, 3, 6, 5, 1, 1, 2, 29, 0, 22, 0, 0, 2, 1, 1, 1]' : 0.188823}
{'[3, 0, 6, 3, 6, 5, 1, 1, 2, 29, 0, 22, 0, 0, 2, 1, 1, 1]' : 0.188086}
{'[3, 0, 6, 3, 6, 5, 1, 1, 2, 29, 0, 22, 0, 0, 2, 1, 1, 1]' : 0.187999}
{'[3, 0, 6, 3, 6, 5, 1, 1, 2, 29, 0, 22, 0, 0, 2, 1, 1, 1]' : 0.188636}
{'[3, 0, 6, 3, 6, 5, 1, 1, 2, 29, 0, 22, 0, 0, 2, 1, 1, 1]' : 0.18868}
{'[3, 0, 6, 3, 6, 5, 1, 1, 2, 29, 0, 22, 0, 0, 2, 1, 1, 1]' : 0.188206}
{'[3, 0, 6, 3, 6, 5, 1, 1, 2, 29, 0, 22, 0, 0, 2, 1, 1, 1]' : 0.188511}
{'[3, 0, 6, 3, 6, 5, 1, 1, 2, 29, 0, 22, 0, 0, 2, 1, 1, 1]' : 0.18855}
{'[3, 0, 6, 3, 6, 5, 1, 1, 2, 29, 0, 22, 0, 0, 2, 1, 1, 1]' : 0.188917}
{'[3, 0, 6, 3, 6, 5, 1, 1, 2, 29, 0, 22, 0, 0, 2, 1, 1, 1]' : 0.188944}
{'[3, 0, 6, 3, 6, 5, 1, 1, 2, 29, 0, 22, 0, 0, 2, 1, 1, 1]' : 0.188377}
{'[3, 0, 6, 3, 6, 5, 1, 1, 2, 29, 0, 22, 0, 0, 2, 1, 1, 1]' : 0.188358}
{'[3, 0, 6, 3, 6, 5, 1, 1, 2, 29, 0, 22, 0, 0, 2, 1, 1, 1]' : 0.188734}
{'[3, 0, 6, 3, 6, 5, 1, 1, 2, 29, 0, 22, 0, 0, 2, 1, 1, 1]' : 0.188063}
{'[3, 0, 6, 3, 6, 5, 1, 1, 2, 29, 0, 22, 0, 0, 2, 1, 1, 1]' : 0.188181}
{'[3, 0, 6, 3, 6, 5, 1, 1, 2, 29, 0, 22, 0, 0, 2, 1, 1, 1]' : 0.188821}
{'[3, 0, 6, 3, 6, 5, 1, 1, 2, 29, 0, 22, 0, 0, 2, 1, 1, 1]' : 0.188244}
{'[3, 0, 6, 3, 6, 5, 1, 1, 2, 29, 0, 22, 0, 0, 2, 1, 1, 1]' : 0.188294}
{'[3, 0, 6, 3, 6, 5, 1, 1, 2, 29, 0, 22, 0, 0, 2, 1, 1, 1]' : 0.188482}

out:
 ["{'[3, 0, 6, 3, 6, 5, 1, 1, 2, 29, 0, 22, 0, 0, 2, 1, 1, 1]' : 0.188344}", "{'[3, 0, 6, 3, 6, 5, 1, 1, 2, 29, 0, 22, 0, 0, 2, 1, 1, 1]' : 0.188574}", "{'[3, 0, 6, 3, 6, 5, 1, 1, 2, 29, 0, 22, 0, 0, 2, 1, 1, 1]' : 0.238536}", "{'[3, 0, 6, 3, 6, 5, 1, 1, 2, 29, 0, 22, 0, 0, 2, 1, 1, 1]' : 0.187758}", "{'[3, 0, 6, 3, 6, 5, 1, 1, 2, 29, 0, 22, 0, 0, 2, 1, 1, 1]' : 0.188854}", "{'[3, 0, 6, 3, 6, 5, 1, 1, 2, 29, 0, 22, 0, 0, 2, 1, 1, 1]' : 0.188866}", "{'[3, 0, 6, 3, 6, 5, 1, 1, 2, 29, 0, 22, 0, 0, 2, 1, 1, 1]' : 0.188343}", "{'[3, 0, 6, 3, 6, 5, 1, 1, 2, 29, 0, 22, 0, 0, 2, 1, 1, 1]' : 0.18789}", "{'[3, 0, 6, 3, 6, 5, 1, 1, 2, 29, 0, 22, 0, 0, 2, 1, 1, 1]' : 0.188335}", "{'[3, 0, 6, 3, 6, 5, 1, 1, 2, 29, 0, 22, 0, 0, 2, 1, 1, 1]' : 0.1883}", "{'[3, 0, 6, 3, 6, 5, 1, 1, 2, 29, 0, 22, 0, 0, 2, 1, 1, 1]' : 0.188661}", "{'[3, 0, 6, 3, 6, 5, 1, 1, 2, 29, 0, 22, 0, 0, 2, 1, 1, 1]' : 0.188823}", "{'[3, 0, 6, 3, 6, 5, 1, 1, 2, 29, 0, 22, 0, 0, 2, 1, 1, 1]' : 0.188086}", "{'[3, 0, 6, 3, 6, 5, 1, 1, 2, 29, 0, 22, 0, 0, 2, 1, 1, 1]' : 0.187999}", "{'[3, 0, 6, 3, 6, 5, 1, 1, 2, 29, 0, 22, 0, 0, 2, 1, 1, 1]' : 0.188636}", "{'[3, 0, 6, 3, 6, 5, 1, 1, 2, 29, 0, 22, 0, 0, 2, 1, 1, 1]' : 0.18868}", "{'[3, 0, 6, 3, 6, 5, 1, 1, 2, 29, 0, 22, 0, 0, 2, 1, 1, 1]' : 0.188206}", "{'[3, 0, 6, 3, 6, 5, 1, 1, 2, 29, 0, 22, 0, 0, 2, 1, 1, 1]' : 0.188511}", "{'[3, 0, 6, 3, 6, 5, 1, 1, 2, 29, 0, 22, 0, 0, 2, 1, 1, 1]' : 0.18855}", "{'[3, 0, 6, 3, 6, 5, 1, 1, 2, 29, 0, 22, 0, 0, 2, 1, 1, 1]' : 0.188917}", "{'[3, 0, 6, 3, 6, 5, 1, 1, 2, 29, 0, 22, 0, 0, 2, 1, 1, 1]' : 0.188944}", "{'[3, 0, 6, 3, 6, 5, 1, 1, 2, 29, 0, 22, 0, 0, 2, 1, 1, 1]' : 0.188377}", "{'[3, 0, 6, 3, 6, 5, 1, 1, 2, 29, 0, 22, 0, 0, 2, 1, 1, 1]' : 0.188358}", "{'[3, 0, 6, 3, 6, 5, 1, 1, 2, 29, 0, 22, 0, 0, 2, 1, 1, 1]' : 0.188734}", "{'[3, 0, 6, 3, 6, 5, 1, 1, 2, 29, 0, 22, 0, 0, 2, 1, 1, 1]' : 0.188063}", "{'[3, 0, 6, 3, 6, 5, 1, 1, 2, 29, 0, 22, 0, 0, 2, 1, 1, 1]' : 0.188181}", "{'[3, 0, 6, 3, 6, 5, 1, 1, 2, 29, 0, 22, 0, 0, 2, 1, 1, 1]' : 0.188821}", "{'[3, 0, 6, 3, 6, 5, 1, 1, 2, 29, 0, 22, 0, 0, 2, 1, 1, 1]' : 0.188244}", "{'[3, 0, 6, 3, 6, 5, 1, 1, 2, 29, 0, 22, 0, 0, 2, 1, 1, 1]' : 0.188294}", "{'[3, 0, 6, 3, 6, 5, 1, 1, 2, 29, 0, 22, 0, 0, 2, 1, 1, 1]' : 0.188482}"]
returning from 'run': {'[3, 0, 6, 3, 6, 5, 1, 1, 2, 29, 0, 22, 0, 0, 2, 1, 1, 1]': ([0.188344, 0.188574, 0.238536, 0.187758, 0.188854, 0.188866, 0.188343, 0.18789, 0.188335, 0.1883, 0.188661, 0.188823, 0.188086, 0.187999, 0.188636, 0.18868, 0.188206, 0.188511, 0.18855, 0.188917, 0.188944, 0.188377, 0.188358, 0.188734, 0.188063, 0.188181, 0.188821, 0.188244, 0.188294, 0.188482], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.188344, 0.188574, 0.238536, 0.187758, 0.188854, 0.188866, 0.188343, 0.18789, 0.188335, 0.1883, 0.188661, 0.188823, 0.188086, 0.187999, 0.188636, 0.18868, 0.188206, 0.188511, 0.18855, 0.188917, 0.188944, 0.188377, 0.188358, 0.188734, 0.188063, 0.188181, 0.188821, 0.188244, 0.188294, 0.188482], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[3, 0, 6, 3, 6, 5, 1, 1, 2, 29, 0, 22, 0, 0, 2, 1, 1, 1]': ([0.188344, 0.188574, 0.238536, 0.187758, 0.188854, 0.188866, 0.188343, 0.18789, 0.188335, 0.1883, 0.188661, 0.188823, 0.188086, 0.187999, 0.188636, 0.18868, 0.188206, 0.188511, 0.18855, 0.188917, 0.188944, 0.188377, 0.188358, 0.188734, 0.188063, 0.188181, 0.188821, 0.188244, 0.188294, 0.188482], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [5, 0, 1, 0, 0, 1, 18, 28, 18, 0, 1, 1, 0, 1]
Fixed Factors: {'T2_K': 5, 'T2_J': 6, 'SCR': 1, 'VEC1': 1}
Testing candidate 3: [5, 0, 1, 0, 6, 5, 0, 1, 18, 28, 18, 0, 1, 1, 0, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	145
        Max loop nest depth: 	5
        Additions: 		5657
        Multiplications: 	2204
        Divisions: 		0
        Logical: 		0
        Reads: 			10394
        Writes: 		1725
        Comparisons:		145
        Gotos: 			0
        
digraph CFG {
	16824854 [label="16824854  double scv_28;...",shape=box];
	_JOIN_16799196 [label="_JOIN_16799196None...",shape=box];
	_JOIN_16799196 -> 16999094;
	16799324 [label="16799324  scv_62=scv_62+A[(i+14)*ny+j]*x[j];...",shape=box];
	16804466 [label="16804466  scv_47=scv_47+A[(i+20)*ny+j]*x[j];...",shape=box];
	16804466 -> _JOIN_16804467;
	ForLoop16794821 [label="ForLoop16794821  for (j=cbv_29; j<=cbv_30; j=j+1) {...",shape=box];
	ForLoop16794821 -> 16794820;
	ForLoop16794821 -> _JOIN_16794821;
	16789626 [label="16789626  scv_55=scv_55+A[i*ny+j]*x[j];...",shape=box];
	16789626 -> _JOIN_16789627;
	16806002 [label="16806002  scv_73=scv_73+A[(i+23)*ny+j]*x[j];...",shape=box];
	ForLoop16791853 [label="ForLoop16791853  for (j=cbv_17; j<=cbv_18; j=j+1) {...",shape=box];
	ForLoop16791853 -> 16791852;
	ForLoop16791853 -> _JOIN_16791853;
	_JOIN_16813183 [label="_JOIN_16813183None...",shape=box];
	_JOIN_16813183 -> ForLoop16814180;
	ForLoop16805132 [label="ForLoop16805132  for (j=jt; j<=cbv_70; j=j+19) {...",shape=box];
	ForLoop16805132 -> 16804518;
	ForLoop16805132 -> _JOIN_16805132;
	_JOIN_16792518 [label="_JOIN_16792518None...",shape=box];
	_JOIN_16792518 -> 16993730;
	_JOIN_16791853 [label="_JOIN_16791853None...",shape=box];
	_JOIN_16791853 -> 16791855;
	17003266 [label="17003266  register int cbv_68, cbv_69;...",shape=box];
	_JOIN_16558472 [label="_JOIN_16558472None...",shape=box];
	_JOIN_16558472 -> 16558753;
	16805950 [label="16805950  scv_74=scv_74+A[(i+22)*ny+j]*x[j];...",shape=box];
	16805950 -> _JOIN_16805951;
	_JOIN_16780713 [label="_JOIN_16780713None...",shape=box];
	_JOIN_16780713 -> ForLoop16781079;
	ForLoop16798531 [label="ForLoop16798531  for (j=cbv_44; j<=cbv_45; j=j+1) {...",shape=box];
	ForLoop16798531 -> 16798530;
	ForLoop16798531 -> _JOIN_16798531;
	ForLoop16814034 [label="ForLoop16814034  for (j=cbv_97; j<=cbv_98; j=j+1) {...",shape=box];
	ForLoop16814034 -> 16814033;
	ForLoop16814034 -> _JOIN_16814034;
	16790368 [label="16790368  scv_72=scv_72+A[(i+1)*ny+j]*x[j];...",shape=box];
	16790368 -> _JOIN_16790369;
	_JOIN_16796305 [label="_JOIN_16796305None...",shape=box];
	_JOIN_16796305 -> 16796307;
	_JOIN_16794744 [label="_JOIN_16794744None...",shape=box];
	_JOIN_16794744 -> 16995518;
	_JOIN_16803648 [label="_JOIN_16803648None...",shape=box];
	_JOIN_16803648 -> 17002670;
	16796356 [label="16796356  scv_61=scv_61+A[(i+10)*ny+j]*x[j];...",shape=box];
	16808179 [label="16808179  int j;...",shape=box];
	16911113 [label="16911113  double scv_46;...",shape=box];
	16775459 [label="16775459  int j;...",shape=box];
	16800808 [label="16800808  scv_67=scv_67+A[(i+16)*ny+j]*x[j];...",shape=box];
	16805260 [label="16805260  scv_74=scv_74+A[(i+22)*ny+j]*x[j];...",shape=box];
	16805211 [label="16805211  int j;...",shape=box];
	16813474 [label="16813474  int j;...",shape=box];
	ForLoop16790369 [label="ForLoop16790369  for (j=cbv_11; j<=cbv_12; j=j+1) {...",shape=box];
	ForLoop16790369 -> 16790368;
	ForLoop16790369 -> _JOIN_16790369;
	_JOIN_16781078 [label="_JOIN_16781078None...",shape=box];
	_JOIN_16781078 -> _JOIN_16781079;
	_JOIN_16781079 [label="_JOIN_16781079None...",shape=box];
	_JOIN_16781079 -> 16839382;
	ForLoop16806616 [label="ForLoop16806616  for (j=jt; j<=cbv_76; j=j+19) {...",shape=box];
	ForLoop16806616 -> 16806002;
	ForLoop16806616 -> _JOIN_16806616;
	ForLoop16780438 [label="ForLoop16780438  for (j=jt; j<=cbv_2; j=j+19) {...",shape=box];
	ForLoop16780438 -> 16824168;
	ForLoop16780438 -> _JOIN_16780438;
	16800014 [label="16800014  scv_62=scv_62+A[(i+14)*ny+j]*x[j];...",shape=box];
	16800014 -> _JOIN_16800015;
	ForLoop16814037 [label="ForLoop16814037  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop16814037 -> 17008808;
	ForLoop16814037 -> _JOIN_16814037;
	_JOIN_16807435 [label="_JOIN_16807435None...",shape=box];
	_JOIN_16807435 -> 16807437;
	17004458 [label="17004458  register int cbv_74, cbv_75;...",shape=box];
	ForLoop16814180 [label="ForLoop16814180  for (i=(min(nx-1,ii+255))-(((min(nx-1,ii+255))-(it)+1)%29)+1; i<=min(nx-1,ii+255); i=i+1) {...",shape=box];
	ForLoop16814180 -> 16952564;
	ForLoop16814180 -> _JOIN_16814180;
	ForLoop16802241 [label="ForLoop16802241  for (j=cbv_59; j<=cbv_60; j=j+1) {...",shape=box];
	ForLoop16802241 -> 16802240;
	ForLoop16802241 -> _JOIN_16802241;
	16810468 [label="16810468  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	_JOIN_16809661 [label="_JOIN_16809661None...",shape=box];
	_JOIN_16809661 -> 16809663;
	16794872 [label="16794872  scv_71=scv_71+A[(i+8)*ny+j]*x[j];...",shape=box];
	_JOIN_16793337 [label="_JOIN_16793337None...",shape=box];
	_JOIN_16793337 -> 16793339;
	16797788 [label="16797788  scv_68=scv_68+A[(i+11)*ny+j]*x[j];...",shape=box];
	16797788 -> _JOIN_16797789;
	_JOIN_16805951 [label="_JOIN_16805951None...",shape=box];
	_JOIN_16805951 -> 16805953;
	ForLoop16775458 [label="ForLoop16775458  for (jt=jjj; jt<=cbv_1; jt=jt+8) {...",shape=box];
	ForLoop16775458 -> 16817193;
	ForLoop16775458 -> _JOIN_16775458;
	16951267 [label="16951267  double scv_76;...",shape=box];
	ForLoop16803648 [label="ForLoop16803648  for (j=jt; j<=cbv_64; j=j+19) {...",shape=box];
	ForLoop16803648 -> 16803034;
	ForLoop16803648 -> _JOIN_16803648;
	16804518 [label="16804518  scv_50=scv_50+A[(i+21)*ny+j]*x[j];...",shape=box];
	_JOIN_16814178 [label="_JOIN_16814178None...",shape=box];
	_JOIN_16814178 -> 16952576;
	_JOIN_16809584 [label="_JOIN_16809584None...",shape=box];
	_JOIN_16809584 -> 17007438;
	ForLoop16813179 [label="ForLoop16813179  for (kk=kkk; kk<=min(ny-1,kkk+1008); kk=kk+16) {...",shape=box];
	ForLoop16813179 -> 16810468;
	ForLoop16813179 -> _JOIN_16813179;
	16557981 [label="16557981  int i;...",shape=box];
	16795562 [label="16795562  scv_71=scv_71+A[(i+8)*ny+j]*x[j];...",shape=box];
	16795562 -> _JOIN_16795563;
	16795565 [label="16795565  int j;...",shape=box];
	ForLoop16808919 [label="ForLoop16808919  for (j=cbv_86; j<=cbv_87; j=j+1) {...",shape=box];
	ForLoop16808919 -> 16808918;
	ForLoop16808919 -> _JOIN_16808919;
	ForLoop16790292 [label="ForLoop16790292  for (j=jt; j<=cbv_10; j=j+19) {...",shape=box];
	ForLoop16790292 -> 16789678;
	ForLoop16790292 -> _JOIN_16790292;
	16993730 [label="16993730  register int cbv_20, cbv_21;...",shape=box];
	ForLoop16793260 [label="ForLoop16793260  for (j=jt; j<=cbv_22; j=j+19) {...",shape=box];
	ForLoop16793260 -> 16792646;
	ForLoop16793260 -> _JOIN_16793260;
	_JOIN_16804467 [label="_JOIN_16804467None...",shape=box];
	_JOIN_16804467 -> 16804469;
	_JOIN_16780710 [label="_JOIN_16780710None...",shape=box];
	_JOIN_16780710 -> _JOIN_16780713;
	16791162 [label="16791162  scv_54=scv_54+A[(i+3)*ny+j]*x[j];...",shape=box];
	16992538 [label="16992538  register int cbv_14, cbv_15;...",shape=box];
	_JOIN_16798454 [label="_JOIN_16798454None...",shape=box];
	_JOIN_16798454 -> 16998498;
	17002074 [label="17002074  register int cbv_62, cbv_63;...",shape=box];
	16831817 [label="16831817  double scv_29;...",shape=box];
	17001478 [label="17001478  register int cbv_59, cbv_60;...",shape=box];
	ForLoop16789066 [label="ForLoop16789066  for (jt=jjj; jt<=cbv_6; jt=jt+8) {...",shape=box];
	ForLoop16789066 -> 16850577;
	ForLoop16789066 -> _JOIN_16789066;
	16806695 [label="16806695  int j;...",shape=box];
	ForLoop16558472 [label="ForLoop16558472  for (i=0; i<=cbv_1; i=i+19) {...",shape=box];
	ForLoop16558472 -> 16558308;
	ForLoop16558472 -> _JOIN_16558472;
	_JOIN_16808842 [label="_JOIN_16808842None...",shape=box];
	_JOIN_16808842 -> 17006842;
	ForLoop16814183 [label="ForLoop16814183  for (ii=0; ii<=nx-1; ii=ii+256) {...",shape=box];
	ForLoop16814183 -> ForLoop16781081;
	ForLoop16814183 -> _JOIN_16814183;
	16803776 [label="16803776  scv_47=scv_47+A[(i+20)*ny+j]*x[j];...",shape=box];
	16798530 [label="16798530  scv_48=scv_48+A[(i+12)*ny+j]*x[j];...",shape=box];
	16798530 -> _JOIN_16798531;
	16798533 [label="16798533  int j;...",shape=box];
	_JOIN_16796228 [label="_JOIN_16796228None...",shape=box];
	_JOIN_16796228 -> 16996710;
	16807434 [label="16807434  scv_66=scv_66+A[(i+24)*ny+j]*x[j];...",shape=box];
	16807434 -> _JOIN_16807435;
	16789067 [label="16789067  int j;...",shape=box];
	ForLoop16808177 [label="ForLoop16808177  for (j=cbv_83; j<=cbv_84; j=j+1) {...",shape=box];
	ForLoop16808177 -> 16808176;
	ForLoop16808177 -> _JOIN_16808177;
	16993134 [label="16993134  register int cbv_17, cbv_18;...",shape=box];
	16999094 [label="16999094  register int cbv_47, cbv_48;...",shape=box];
	16809712 [label="16809712  scv_63=scv_63+A[(i+28)*ny+j]*x[j];...",shape=box];
	16558540 [label="16558540  y[i]=0.0;...",shape=box];
	16558540 -> _JOIN_16558541;
	16996114 [label="16996114  register int cbv_32, cbv_33;...",shape=box];
	_JOIN_16802906 [label="_JOIN_16802906None...",shape=box];
	_JOIN_16802906 -> 17002074;
	_JOIN_16791111 [label="_JOIN_16791111None...",shape=box];
	_JOIN_16791111 -> 16791113;
	16808970 [label="16808970  scv_53=scv_53+A[(i+27)*ny+j]*x[j];...",shape=box];
	ForLoop16791111 [label="ForLoop16791111  for (j=cbv_14; j<=cbv_15; j=j+1) {...",shape=box];
	ForLoop16791111 -> 16791110;
	ForLoop16791111 -> _JOIN_16791111;
	16994922 [label="16994922  register int cbv_26, cbv_27;...",shape=box];
	16806744 [label="16806744  scv_66=scv_66+A[(i+24)*ny+j]*x[j];...",shape=box];
	16800017 [label="16800017  int j;...",shape=box];
	_JOIN_16800757 [label="_JOIN_16800757None...",shape=box];
	_JOIN_16800757 -> 16800759;
	_JOIN_16792595 [label="_JOIN_16792595None...",shape=box];
	_JOIN_16792595 -> 16792597;
	_JOIN_16802164 [label="_JOIN_16802164None...",shape=box];
	_JOIN_16802164 -> 17001478;
	ForLoop16809661 [label="ForLoop16809661  for (j=cbv_89; j<=cbv_90; j=j+1) {...",shape=box];
	ForLoop16809661 -> 16809660;
	ForLoop16809661 -> _JOIN_16809661;
	16794078 [label="16794078  scv_57=scv_57+A[(i+6)*ny+j]*x[j];...",shape=box];
	16794078 -> _JOIN_16794079;
	16799275 [label="16799275  int j;...",shape=box];
	ForLoop16797712 [label="ForLoop16797712  for (j=jt; j<=cbv_40; j=j+19) {...",shape=box];
	ForLoop16797712 -> 16797098;
	ForLoop16797712 -> _JOIN_16797712;
	16800756 [label="16800756  scv_64=scv_64+A[(i+15)*ny+j]*x[j];...",shape=box];
	16800756 -> _JOIN_16800757;
	_JOIN_16789066 [label="_JOIN_16789066None...",shape=box];
	_JOIN_16789066 -> 16789067;
	16794081 [label="16794081  int j;...",shape=box];
	ForLoop16796305 [label="ForLoop16796305  for (j=cbv_35; j<=cbv_36; j=j+1) {...",shape=box];
	ForLoop16796305 -> 16796304;
	ForLoop16796305 -> _JOIN_16796305;
	_JOIN_16799938 [label="_JOIN_16799938None...",shape=box];
	_JOIN_16799938 -> 16999690;
	ForLoop16812278 [label="ForLoop16812278  for (k=kk; k<=cbv_94; k=k+1) {...",shape=box];
	ForLoop16812278 -> 16911113;
	ForLoop16812278 -> _JOIN_16812278;
	16791110 [label="16791110  scv_59=scv_59+A[(i+2)*ny+j]*x[j];...",shape=box];
	16791110 -> _JOIN_16791111;
	16791113 [label="16791113  int j;...",shape=box];
	ForLoop16789627 [label="ForLoop16789627  for (j=cbv_8; j<=cbv_9; j=j+1) {...",shape=box];
	ForLoop16789627 -> 16789626;
	ForLoop16789627 -> _JOIN_16789627;
	_JOIN_16798531 [label="_JOIN_16798531None...",shape=box];
	_JOIN_16798531 -> 16798533;
	_JOIN_16805874 [label="_JOIN_16805874None...",shape=box];
	_JOIN_16805874 -> 17004458;
	16994326 [label="16994326  register int cbv_23, cbv_24;...",shape=box];
	_JOIN_16814180 [label="_JOIN_16814180None...",shape=box];
	_JOIN_16814180 -> _JOIN_16814183;
	ForLoop16801422 [label="ForLoop16801422  for (j=jt; j<=cbv_55; j=j+19) {...",shape=box];
	ForLoop16801422 -> 16800808;
	ForLoop16801422 -> _JOIN_16801422;
	16806692 [label="16806692  scv_73=scv_73+A[(i+23)*ny+j]*x[j];...",shape=box];
	16806692 -> _JOIN_16806693;
	16791855 [label="16791855  int j;...",shape=box];
	ForLoop16814178 [label="ForLoop16814178  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop16814178 -> ForLoop16814177;
	ForLoop16814178 -> _JOIN_16814178;
	16804469 [label="16804469  int j;...",shape=box];
	16990843 [label="16990843  register int cbv_6;...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 16557981;
	16791852 [label="16791852  scv_54=scv_54+A[(i+3)*ny+j]*x[j];...",shape=box];
	16791852 -> _JOIN_16791853;
	17006842 [label="17006842  register int cbv_86, cbv_87;...",shape=box];
	16781082 [label="16781082  int i;...",shape=box];
	16781082 -> ForLoop16813183;
	ForLoop16796228 [label="ForLoop16796228  for (j=jt; j<=cbv_34; j=j+19) {...",shape=box];
	ForLoop16796228 -> 16795614;
	ForLoop16796228 -> _JOIN_16796228;
	16813289 [label="16813289  scv_77=scv_77+A[i*ny+jt]*x[jt];...",shape=box];
	16797791 [label="16797791  int j;...",shape=box];
	16799272 [label="16799272  scv_49=scv_49+A[(i+13)*ny+j]*x[j];...",shape=box];
	16799272 -> _JOIN_16799273;
	_JOIN_16789627 [label="_JOIN_16789627None...",shape=box];
	_JOIN_16789627 -> 16789629;
	_JOIN_16794079 [label="_JOIN_16794079None...",shape=box];
	_JOIN_16794079 -> 16794081;
	ForLoop16814177 [label="ForLoop16814177  for (kk=kkk; kk<=min(ny-1,kkk+1008); kk=kk+16) {...",shape=box];
	ForLoop16814177 -> 16814099;
	ForLoop16814177 -> _JOIN_16814177;
	_JOIN_16808100 [label="_JOIN_16808100None...",shape=box];
	_JOIN_16808100 -> 17006246;
	16805208 [label="16805208  scv_50=scv_50+A[(i+21)*ny+j]*x[j];...",shape=box];
	16805208 -> _JOIN_16805209;
	16795614 [label="16795614  scv_70=scv_70+A[(i+9)*ny+j]*x[j];...",shape=box];
	16796304 [label="16796304  scv_70=scv_70+A[(i+9)*ny+j]*x[j];...",shape=box];
	16796304 -> _JOIN_16796305;
	_JOIN_16806693 [label="_JOIN_16806693None...",shape=box];
	_JOIN_16806693 -> 16806695;
	_JOIN_16797712 [label="_JOIN_16797712None...",shape=box];
	_JOIN_16797712 -> 16997902;
	16796307 [label="16796307  int j;...",shape=box];
	16809663 [label="16809663  int j;...",shape=box];
	16809660 [label="16809660  scv_53=scv_53+A[(i+27)*ny+j]*x[j];...",shape=box];
	16809660 -> _JOIN_16809661;
	ForLoop16814144 [label="ForLoop16814144  for (k=kk; k<=cbv_99; k=k+1) {...",shape=box];
	ForLoop16814144 -> 16951267;
	ForLoop16814144 -> _JOIN_16814144;
	ForLoop16801499 [label="ForLoop16801499  for (j=cbv_56; j<=cbv_57; j=j+1) {...",shape=box];
	ForLoop16801499 -> 16801498;
	ForLoop16801499 -> _JOIN_16801499;
	ForLoop16808842 [label="ForLoop16808842  for (j=jt; j<=cbv_85; j=j+19) {...",shape=box];
	ForLoop16808842 -> 16808228;
	ForLoop16808842 -> _JOIN_16808842;
	ForLoop16797789 [label="ForLoop16797789  for (j=cbv_41; j<=cbv_42; j=j+1) {...",shape=box];
	ForLoop16797789 -> 16797788;
	ForLoop16797789 -> _JOIN_16797789;
	_JOIN_16790292 [label="_JOIN_16790292None...",shape=box];
	_JOIN_16790292 -> 16991942;
	16839382 [label="16839382  tmp[it]=scv_30;...",shape=box];
	ForLoop16813966 [label="ForLoop16813966  for (j=jt; j<=cbv_96; j=j+19) {...",shape=box];
	ForLoop16813966 -> 16813514;
	ForLoop16813966 -> _JOIN_16813966;
	17006246 [label="17006246  register int cbv_83, cbv_84;...",shape=box];
	17007438 [label="17007438  register int cbv_89, cbv_90;...",shape=box];
	_JOIN_16814034 [label="_JOIN_16814034None...",shape=box];
	_JOIN_16814034 -> _JOIN_16814037;
	_JOIN_16814037 [label="_JOIN_16814037None...",shape=box];
	_JOIN_16814037 -> ForLoop16814178;
	_JOIN_16800680 [label="_JOIN_16800680None...",shape=box];
	_JOIN_16800680 -> 17000286;
	_JOIN_16802983 [label="_JOIN_16802983None...",shape=box];
	_JOIN_16802983 -> 16802985;
	16780775 [label="16780775  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	_JOIN_16797789 [label="_JOIN_16797789None...",shape=box];
	_JOIN_16797789 -> 16797791;
	_JOIN_16810326 [label="_JOIN_16810326None...",shape=box];
	_JOIN_16810326 -> 17008034;
	_JOIN_16796970 [label="_JOIN_16796970None...",shape=box];
	_JOIN_16796970 -> 16997306;
	ForLoop16781045 [label="ForLoop16781045  for (k=kk; k<=cbv_5; k=k+1) {...",shape=box];
	ForLoop16781045 -> 16831817;
	ForLoop16781045 -> _JOIN_16781045;
	ForLoop16807358 [label="ForLoop16807358  for (j=jt; j<=cbv_79; j=j+19) {...",shape=box];
	ForLoop16807358 -> 16806744;
	ForLoop16807358 -> _JOIN_16807358;
	16991346 [label="16991346  register int cbv_8, cbv_9;...",shape=box];
	ForLoop16799938 [label="ForLoop16799938  for (j=jt; j<=cbv_49; j=j+19) {...",shape=box];
	ForLoop16799938 -> 16799324;
	ForLoop16799938 -> _JOIN_16799938;
	16791904 [label="16791904  scv_69=scv_69+A[(i+4)*ny+j]*x[j];...",shape=box];
	ForLoop16791776 [label="ForLoop16791776  for (j=jt; j<=cbv_16; j=j+19) {...",shape=box];
	ForLoop16791776 -> 16791162;
	ForLoop16791776 -> _JOIN_16791776;
	_JOIN_16802241 [label="_JOIN_16802241None...",shape=box];
	_JOIN_16802241 -> 16802243;
	16773263 [label="16773263  double x_copy;...",shape=box];
	_JOIN_16791776 [label="_JOIN_16791776None...",shape=box];
	_JOIN_16791776 -> 16993134;
	ForLoop16813183 [label="ForLoop16813183  for (i=it; i<=min(nx-1,ii+255)-28; i=i+29) {...",shape=box];
	ForLoop16813183 -> 16947016;
	ForLoop16813183 -> _JOIN_16813183;
	ForLoop16805951 [label="ForLoop16805951  for (j=cbv_74; j<=cbv_75; j=j+1) {...",shape=box];
	ForLoop16805951 -> 16805950;
	ForLoop16805951 -> _JOIN_16805951;
	ForLoop16800757 [label="ForLoop16800757  for (j=cbv_53; j<=cbv_54; j=j+1) {...",shape=box];
	ForLoop16800757 -> 16800756;
	ForLoop16800757 -> _JOIN_16800757;
	16997306 [label="16997306  register int cbv_38, cbv_39;...",shape=box];
	ForLoop16796970 [label="ForLoop16796970  for (j=jt; j<=cbv_37; j=j+19) {...",shape=box];
	ForLoop16796970 -> 16796356;
	ForLoop16796970 -> _JOIN_16796970;
	ForLoop16793337 [label="ForLoop16793337  for (j=cbv_23; j<=cbv_24; j=j+1) {...",shape=box];
	ForLoop16793337 -> 16793336;
	ForLoop16793337 -> _JOIN_16793337;
	16789629 [label="16789629  int j;...",shape=box];
	ForLoop16791034 [label="ForLoop16791034  for (j=jt; j<=cbv_13; j=j+19) {...",shape=box];
	ForLoop16791034 -> 16790420;
	ForLoop16791034 -> _JOIN_16791034;
	_JOIN_16813966 [label="_JOIN_16813966None...",shape=box];
	_JOIN_16813966 -> 17009311;
	16801501 [label="16801501  int j;...",shape=box];
	_JOIN_16814183 [label="_JOIN_16814183None...",shape=box];
	ForLoop16794744 [label="ForLoop16794744  for (j=jt; j<=cbv_28; j=j+19) {...",shape=box];
	ForLoop16794744 -> 16794130;
	ForLoop16794744 -> _JOIN_16794744;
	_JOIN_16808919 [label="_JOIN_16808919None...",shape=box];
	_JOIN_16808919 -> 16808921;
	_JOIN_16806616 [label="_JOIN_16806616None...",shape=box];
	_JOIN_16806616 -> 17005054;
	_JOIN_16791034 [label="_JOIN_16791034None...",shape=box];
	_JOIN_16791034 -> 16992538;
	_JOIN_16790369 [label="_JOIN_16790369None...",shape=box];
	_JOIN_16790369 -> 16790371;
	16813514 [label="16813514  scv_77=scv_77+A[i*ny+j]*x[j];...",shape=box];
	ForLoop16781081 [label="ForLoop16781081  for (it=ii; it<=min(nx-1,ii+255)-7; it=it+8) {...",shape=box];
	ForLoop16781081 -> 16839370;
	ForLoop16781081 -> _JOIN_16781081;
	17000286 [label="17000286  register int cbv_53, cbv_54;...",shape=box];
	_JOIN_16789559 [label="_JOIN_16789559None...",shape=box];
	_JOIN_16789559 -> 16991346;
	17009311 [label="17009311  register int cbv_97, cbv_98;...",shape=box];
	17003862 [label="17003862  register int cbv_71, cbv_72;...",shape=box];
	ForLoop16789559 [label="ForLoop16789559  for (j=jt; j<=cbv_7; j=j+19) {...",shape=box];
	ForLoop16789559 -> 16789107;
	ForLoop16789559 -> _JOIN_16789559;
	ForLoop16810403 [label="ForLoop16810403  for (j=cbv_92; j<=cbv_93; j=j+1) {...",shape=box];
	ForLoop16810403 -> 16810402;
	ForLoop16810403 -> _JOIN_16810403;
	ForLoop16804390 [label="ForLoop16804390  for (j=jt; j<=cbv_67; j=j+19) {...",shape=box];
	ForLoop16804390 -> 16803776;
	ForLoop16804390 -> _JOIN_16804390;
	ForLoop16810406 [label="ForLoop16810406  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop16810406 -> 16990843;
	ForLoop16810406 -> _JOIN_16810406;
	16794823 [label="16794823  int j;...",shape=box];
	ForLoop16558541 [label="ForLoop16558541  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop16558541 -> 16558540;
	ForLoop16558541 -> _JOIN_16558541;
	ForLoop16809584 [label="ForLoop16809584  for (j=jt; j<=cbv_88; j=j+19) {...",shape=box];
	ForLoop16809584 -> 16808970;
	ForLoop16809584 -> _JOIN_16809584;
	_JOIN_16781045 [label="_JOIN_16781045None...",shape=box];
	_JOIN_16781045 -> 16781076;
	16797098 [label="16797098  scv_68=scv_68+A[(i+11)*ny+j]*x[j];...",shape=box];
	_JOIN_16813179 [label="_JOIN_16813179None...",shape=box];
	_JOIN_16813179 -> _JOIN_16813181;
	ForLoop16781078 [label="ForLoop16781078  for (kk=kkk; kk<=min(ny-1,kkk+1008); kk=kk+16) {...",shape=box];
	ForLoop16781078 -> 16780775;
	ForLoop16781078 -> _JOIN_16781078;
	ForLoop16781079 [label="ForLoop16781079  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop16781079 -> ForLoop16781078;
	ForLoop16781079 -> _JOIN_16781079;
	_JOIN_16795486 [label="_JOIN_16795486None...",shape=box];
	_JOIN_16795486 -> 16996114;
	_JOIN_16799273 [label="_JOIN_16799273None...",shape=box];
	_JOIN_16799273 -> 16799275;
	ForLoop16780710 [label="ForLoop16780710  for (j=cbv_3; j<=cbv_4; j=j+1) {...",shape=box];
	ForLoop16780710 -> 16824854;
	ForLoop16780710 -> _JOIN_16780710;
	16824168 [label="16824168  double scv_9, scv_10, scv_11, scv_12, scv_13, scv_14, scv_15, scv_16;...",shape=box];
	ForLoop16780713 [label="ForLoop16780713  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop16780713 -> 16982981;
	ForLoop16780713 -> _JOIN_16780713;
	16982981 [label="16982981  register int cbv_1;...",shape=box];
	16814099 [label="16814099  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	16794820 [label="16794820  scv_56=scv_56+A[(i+7)*ny+j]*x[j];...",shape=box];
	16794820 -> _JOIN_16794821;
	16839370 [label="16839370  double scv_30, scv_31, scv_32, scv_33, scv_34, scv_35, scv_36, scv_37;...",shape=box];
	16792594 [label="16792594  scv_69=scv_69+A[(i+4)*ny+j]*x[j];...",shape=box];
	16792594 -> _JOIN_16792595;
	16792597 [label="16792597  int j;...",shape=box];
	16808176 [label="16808176  scv_65=scv_65+A[(i+25)*ny+j]*x[j];...",shape=box];
	16808176 -> _JOIN_16808177;
	_JOIN_16558541 [label="_JOIN_16558541None...",shape=box];
	_JOIN_16558541 -> 16773263;
	_JOIN_16813181 [label="_JOIN_16813181None...",shape=box];
	_JOIN_16813181 -> 16947034;
	16798582 [label="16798582  scv_49=scv_49+A[(i+13)*ny+j]*x[j];...",shape=box];
	16790420 [label="16790420  scv_59=scv_59+A[(i+2)*ny+j]*x[j];...",shape=box];
	ForLoop16802164 [label="ForLoop16802164  for (j=jt; j<=cbv_58; j=j+19) {...",shape=box];
	ForLoop16802164 -> 16801550;
	ForLoop16802164 -> _JOIN_16802164;
	ForLoop16795563 [label="ForLoop16795563  for (j=cbv_32; j<=cbv_33; j=j+1) {...",shape=box];
	ForLoop16795563 -> 16795562;
	ForLoop16795563 -> _JOIN_16795563;
	16805953 [label="16805953  int j;...",shape=box];
	ForLoop16802906 [label="ForLoop16802906  for (j=jt; j<=cbv_61; j=j+19) {...",shape=box];
	ForLoop16802906 -> 16802292;
	ForLoop16802906 -> _JOIN_16802906;
	_JOIN_16794821 [label="_JOIN_16794821None...",shape=box];
	_JOIN_16794821 -> 16794823;
	16792646 [label="16792646  scv_58=scv_58+A[(i+5)*ny+j]*x[j];...",shape=box];
	16793336 [label="16793336  scv_58=scv_58+A[(i+5)*ny+j]*x[j];...",shape=box];
	16793336 -> _JOIN_16793337;
	ForLoop16799273 [label="ForLoop16799273  for (j=cbv_47; j<=cbv_48; j=j+1) {...",shape=box];
	ForLoop16799273 -> 16799272;
	ForLoop16799273 -> _JOIN_16799273;
	ForLoop16800680 [label="ForLoop16800680  for (j=jt; j<=cbv_52; j=j+19) {...",shape=box];
	ForLoop16800680 -> 16800066;
	ForLoop16800680 -> _JOIN_16800680;
	_JOIN_16801499 [label="_JOIN_16801499None...",shape=box];
	_JOIN_16801499 -> 16801501;
	_JOIN_16804390 [label="_JOIN_16804390None...",shape=box];
	_JOIN_16804390 -> 17003266;
	16850577 [label="16850577  double scv_38, scv_39, scv_40, scv_41, scv_42, scv_43, scv_44, scv_45;...",shape=box];
	16558308 [label="16558308  y[i]=0.0;...",shape=box];
	16997902 [label="16997902  register int cbv_41, cbv_42;...",shape=box];
	16947016 [label="16947016  double scv_47, scv_48, scv_49, scv_50, scv_51, scv_52, scv_53, scv_54;...",shape=box];
	_JOIN_16813473 [label="_JOIN_16813473None...",shape=box];
	_JOIN_16813473 -> 16813474;
	16793339 [label="16793339  int j;...",shape=box];
	17005054 [label="17005054  register int cbv_77, cbv_78;...",shape=box];
	16803034 [label="16803034  scv_51=scv_51+A[(i+19)*ny+j]*x[j];...",shape=box];
	_JOIN_16793260 [label="_JOIN_16793260None...",shape=box];
	_JOIN_16793260 -> 16994326;
	ForLoop16804467 [label="ForLoop16804467  for (j=cbv_68; j<=cbv_69; j=j+1) {...",shape=box];
	ForLoop16804467 -> 16804466;
	ForLoop16804467 -> _JOIN_16804467;
	16802240 [label="16802240  scv_75=scv_75+A[(i+17)*ny+j]*x[j];...",shape=box];
	16802240 -> _JOIN_16802241;
	16802243 [label="16802243  int j;...",shape=box];
	16802985 [label="16802985  int j;...",shape=box];
	16802982 [label="16802982  scv_52=scv_52+A[(i+18)*ny+j]*x[j];...",shape=box];
	16802982 -> _JOIN_16802983;
	16996710 [label="16996710  register int cbv_35, cbv_36;...",shape=box];
	16995518 [label="16995518  register int cbv_29, cbv_30;...",shape=box];
	16817193 [label="16817193  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	_JOIN_16780438 [label="_JOIN_16780438None...",shape=box];
	_JOIN_16780438 -> 16986200;
	ForLoop16794002 [label="ForLoop16794002  for (j=jt; j<=cbv_25; j=j+19) {...",shape=box];
	ForLoop16794002 -> 16793388;
	ForLoop16794002 -> _JOIN_16794002;
	17008808 [label="17008808  register int cbv_95;...",shape=box];
	16794130 [label="16794130  scv_56=scv_56+A[(i+7)*ny+j]*x[j];...",shape=box];
	_JOIN_16808177 [label="_JOIN_16808177None...",shape=box];
	_JOIN_16808177 -> 16808179;
	17008034 [label="17008034  register int cbv_92, cbv_93;...",shape=box];
	ForLoop16813473 [label="ForLoop16813473  for (jt=jjj; jt<=cbv_95; jt=jt+8) {...",shape=box];
	ForLoop16813473 -> 16813289;
	ForLoop16813473 -> _JOIN_16813473;
	_JOIN_16814144 [label="_JOIN_16814144None...",shape=box];
	_JOIN_16814144 -> 16814175;
	16952564 [label="16952564  double scv_77;...",shape=box];
	ForLoop16810326 [label="ForLoop16810326  for (j=jt; j<=cbv_91; j=j+19) {...",shape=box];
	ForLoop16810326 -> 16809712;
	ForLoop16810326 -> _JOIN_16810326;
	16797049 [label="16797049  int j;...",shape=box];
	_JOIN_16801422 [label="_JOIN_16801422None...",shape=box];
	_JOIN_16801422 -> 17000882;
	ForLoop16805209 [label="ForLoop16805209  for (j=cbv_71; j<=cbv_72; j=j+1) {...",shape=box];
	ForLoop16805209 -> 16805208;
	ForLoop16805209 -> _JOIN_16805209;
	ForLoop16798454 [label="ForLoop16798454  for (j=jt; j<=cbv_43; j=j+19) {...",shape=box];
	ForLoop16798454 -> 16797840;
	ForLoop16798454 -> _JOIN_16798454;
	ForLoop16807435 [label="ForLoop16807435  for (j=cbv_80; j<=cbv_81; j=j+1) {...",shape=box];
	ForLoop16807435 -> 16807434;
	ForLoop16807435 -> _JOIN_16807435;
	ForLoop16792518 [label="ForLoop16792518  for (j=jt; j<=cbv_19; j=j+19) {...",shape=box];
	ForLoop16792518 -> 16791904;
	ForLoop16792518 -> _JOIN_16792518;
	16810402 [label="16810402  scv_63=scv_63+A[(i+28)*ny+j]*x[j];...",shape=box];
	16810402 -> _JOIN_16810403;
	16797046 [label="16797046  scv_61=scv_61+A[(i+10)*ny+j]*x[j];...",shape=box];
	16797046 -> _JOIN_16797047;
	_JOIN_16794002 [label="_JOIN_16794002None...",shape=box];
	_JOIN_16794002 -> 16994922;
	16812309 [label="16812309  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	17002670 [label="17002670  register int cbv_65, cbv_66;...",shape=box];
	16986200 [label="16986200  register int cbv_3, cbv_4;...",shape=box];
	16991942 [label="16991942  register int cbv_11, cbv_12;...",shape=box];
	_JOIN_16807358 [label="_JOIN_16807358None...",shape=box];
	_JOIN_16807358 -> 17005650;
	ForLoop16794079 [label="ForLoop16794079  for (j=cbv_26; j<=cbv_27; j=j+1) {...",shape=box];
	ForLoop16794079 -> 16794078;
	ForLoop16794079 -> _JOIN_16794079;
	16807486 [label="16807486  scv_65=scv_65+A[(i+25)*ny+j]*x[j];...",shape=box];
	ForLoop16792595 [label="ForLoop16792595  for (j=cbv_20; j<=cbv_21; j=j+1) {...",shape=box];
	ForLoop16792595 -> 16792594;
	ForLoop16792595 -> _JOIN_16792595;
	17005650 [label="17005650  register int cbv_80, cbv_81;...",shape=box];
	_JOIN_16810403 [label="_JOIN_16810403None...",shape=box];
	_JOIN_16810403 -> _JOIN_16810406;
	ForLoop16803725 [label="ForLoop16803725  for (j=cbv_65; j<=cbv_66; j=j+1) {...",shape=box];
	ForLoop16803725 -> 16803724;
	ForLoop16803725 -> _JOIN_16803725;
	_JOIN_16797047 [label="_JOIN_16797047None...",shape=box];
	_JOIN_16797047 -> 16797049;
	ForLoop16795486 [label="ForLoop16795486  for (j=jt; j<=cbv_31; j=j+19) {...",shape=box];
	ForLoop16795486 -> 16794872;
	ForLoop16795486 -> _JOIN_16795486;
	16789107 [label="16789107  scv_55=scv_55+A[i*ny+j]*x[j];...",shape=box];
	16808228 [label="16808228  scv_60=scv_60+A[(i+26)*ny+j]*x[j];...",shape=box];
	16807437 [label="16807437  int j;...",shape=box];
	ForLoop16800015 [label="ForLoop16800015  for (j=cbv_50; j<=cbv_51; j=j+1) {...",shape=box];
	ForLoop16800015 -> 16800014;
	ForLoop16800015 -> _JOIN_16800015;
	_JOIN_16805132 [label="_JOIN_16805132None...",shape=box];
	_JOIN_16805132 -> 17003862;
	16803724 [label="16803724  scv_51=scv_51+A[(i+19)*ny+j]*x[j];...",shape=box];
	16803724 -> _JOIN_16803725;
	16803727 [label="16803727  int j;...",shape=box];
	_JOIN_16800015 [label="_JOIN_16800015None...",shape=box];
	_JOIN_16800015 -> 16800017;
	16789678 [label="16789678  scv_72=scv_72+A[(i+1)*ny+j]*x[j];...",shape=box];
	16797840 [label="16797840  scv_48=scv_48+A[(i+12)*ny+j]*x[j];...",shape=box];
	_JOIN_16814177 [label="_JOIN_16814177None...",shape=box];
	_JOIN_16814177 -> _JOIN_16814178;
	16999690 [label="16999690  register int cbv_50, cbv_51;...",shape=box];
	16802292 [label="16802292  scv_52=scv_52+A[(i+18)*ny+j]*x[j];...",shape=box];
	16952576 [label="16952576  tmp[i]=scv_77;...",shape=box];
	16952576 -> _JOIN_16814180;
	_JOIN_16803725 [label="_JOIN_16803725None...",shape=box];
	_JOIN_16803725 -> 16803727;
	ForLoop16806693 [label="ForLoop16806693  for (j=cbv_77; j<=cbv_78; j=j+1) {...",shape=box];
	ForLoop16806693 -> 16806692;
	ForLoop16806693 -> _JOIN_16806693;
	_JOIN_16781081 [label="_JOIN_16781081None...",shape=box];
	_JOIN_16781081 -> 16781082;
	16781076 [label="16781076  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	16781076 -> _JOIN_16781078;
	17000882 [label="17000882  register int cbv_56, cbv_57;...",shape=box];
	16814175 [label="16814175  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	16814175 -> _JOIN_16814177;
	16808918 [label="16808918  scv_60=scv_60+A[(i+26)*ny+j]*x[j];...",shape=box];
	16808918 -> _JOIN_16808919;
	ForLoop16799196 [label="ForLoop16799196  for (j=jt; j<=cbv_46; j=j+19) {...",shape=box];
	ForLoop16799196 -> 16798582;
	ForLoop16799196 -> _JOIN_16799196;
	ForLoop16797047 [label="ForLoop16797047  for (j=cbv_38; j<=cbv_39; j=j+1) {...",shape=box];
	ForLoop16797047 -> 16797046;
	ForLoop16797047 -> _JOIN_16797047;
	16801550 [label="16801550  scv_75=scv_75+A[(i+17)*ny+j]*x[j];...",shape=box];
	16800759 [label="16800759  int j;...",shape=box];
	16793388 [label="16793388  scv_57=scv_57+A[(i+6)*ny+j]*x[j];...",shape=box];
	_JOIN_1680expected=9369846271501.798828
actual=9369846271501.798828
5209 [label="_JOIN_16805209None...",shape=box];
	_JOIN_16805209 -> 16805211;
	16947034 [label="16947034  tmp[(i+20)]=scv_47;...",shape=box];
	16558753 [label="16558753  register int cbv_2, cbv_3;...",shape=box];
	ForLoop16802983 [label="ForLoop16802983  for (j=cbv_62; j<=cbv_63; j=j+1) {...",shape=box];
	ForLoop16802983 -> 16802982;
	ForLoop16802983 -> _JOIN_16802983;
	16998498 [label="16998498  register int cbv_44, cbv_45;...",shape=box];
	16790371 [label="16790371  int j;...",shape=box];
	16800066 [label="16800066  scv_64=scv_64+A[(i+15)*ny+j]*x[j];...",shape=box];
	_JOIN_16795563 [label="_JOIN_16795563None...",shape=box];
	_JOIN_16795563 -> 16795565;
	_JOIN_16775458 [label="_JOIN_16775458None...",shape=box];
	_JOIN_16775458 -> 16775459;
	ForLoop16808100 [label="ForLoop16808100  for (j=jt; j<=cbv_82; j=j+19) {...",shape=box];
	ForLoop16808100 -> 16807486;
	ForLoop16808100 -> _JOIN_16808100;
	_JOIN_16812278 [label="_JOIN_16812278None...",shape=box];
	_JOIN_16812278 -> 16812309;
	ForLoop16805874 [label="ForLoop16805874  for (j=jt; j<=cbv_73; j=j+19) {...",shape=box];
	ForLoop16805874 -> 16805260;
	ForLoop16805874 -> _JOIN_16805874;
	16801498 [label="16801498  scv_67=scv_67+A[(i+16)*ny+j]*x[j];...",shape=box];
	16801498 -> _JOIN_16801499;
	16814033 [label="16814033  scv_77=scv_77+A[i*ny+j]*x[j];...",shape=box];
	16814033 -> _JOIN_16814034;
	16808921 [label="16808921  int j;...",shape=box];
	ForLoop16813181 [label="ForLoop16813181  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop16813181 -> ForLoop16813179;
	ForLoop16813181 -> _JOIN_16813181;
	_JOIN_16810406 [label="_JOIN_16810406None...",shape=box];
	_JOIN_16810406 -> ForLoop16813181;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest74.exe __orio_perftest74.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest74.exe  
{'[5, 0, 1, 0, 6, 5, 0, 1, 18, 28, 18, 0, 1, 1, 0, 1, 1, 1]' : 0.0902448}
{'[5, 0, 1, 0, 6, 5, 0, 1, 18, 28, 18, 0, 1, 1, 0, 1, 1, 1]' : 0.0898609}
{'[5, 0, 1, 0, 6, 5, 0, 1, 18, 28, 18, 0, 1, 1, 0, 1, 1, 1]' : 0.0897832}
{'[5, 0, 1, 0, 6, 5, 0, 1, 18, 28, 18, 0, 1, 1, 0, 1, 1, 1]' : 0.0898628}
{'[5, 0, 1, 0, 6, 5, 0, 1, 18, 28, 18, 0, 1, 1, 0, 1, 1, 1]' : 0.0898139}
{'[5, 0, 1, 0, 6, 5, 0, 1, 18, 28, 18, 0, 1, 1, 0, 1, 1, 1]' : 0.089782}
{'[5, 0, 1, 0, 6, 5, 0, 1, 18, 28, 18, 0, 1, 1, 0, 1, 1, 1]' : 0.0902009}
{'[5, 0, 1, 0, 6, 5, 0, 1, 18, 28, 18, 0, 1, 1, 0, 1, 1, 1]' : 0.089848}
{'[5, 0, 1, 0, 6, 5, 0, 1, 18, 28, 18, 0, 1, 1, 0, 1, 1, 1]' : 0.0897961}
{'[5, 0, 1, 0, 6, 5, 0, 1, 18, 28, 18, 0, 1, 1, 0, 1, 1, 1]' : 0.089864}
{'[5, 0, 1, 0, 6, 5, 0, 1, 18, 28, 18, 0, 1, 1, 0, 1, 1, 1]' : 0.0898168}
{'[5, 0, 1, 0, 6, 5, 0, 1, 18, 28, 18, 0, 1, 1, 0, 1, 1, 1]' : 0.0898409}
{'[5, 0, 1, 0, 6, 5, 0, 1, 18, 28, 18, 0, 1, 1, 0, 1, 1, 1]' : 0.0908749}
{'[5, 0, 1, 0, 6, 5, 0, 1, 18, 28, 18, 0, 1, 1, 0, 1, 1, 1]' : 0.089792}
{'[5, 0, 1, 0, 6, 5, 0, 1, 18, 28, 18, 0, 1, 1, 0, 1, 1, 1]' : 0.0898321}
{'[5, 0, 1, 0, 6, 5, 0, 1, 18, 28, 18, 0, 1, 1, 0, 1, 1, 1]' : 0.0897629}
{'[5, 0, 1, 0, 6, 5, 0, 1, 18, 28, 18, 0, 1, 1, 0, 1, 1, 1]' : 0.089793}
{'[5, 0, 1, 0, 6, 5, 0, 1, 18, 28, 18, 0, 1, 1, 0, 1, 1, 1]' : 0.0897679}
{'[5, 0, 1, 0, 6, 5, 0, 1, 18, 28, 18, 0, 1, 1, 0, 1, 1, 1]' : 0.0897901}
{'[5, 0, 1, 0, 6, 5, 0, 1, 18, 28, 18, 0, 1, 1, 0, 1, 1, 1]' : 0.089793}
{'[5, 0, 1, 0, 6, 5, 0, 1, 18, 28, 18, 0, 1, 1, 0, 1, 1, 1]' : 0.089767}
{'[5, 0, 1, 0, 6, 5, 0, 1, 18, 28, 18, 0, 1, 1, 0, 1, 1, 1]' : 0.089797}
{'[5, 0, 1, 0, 6, 5, 0, 1, 18, 28, 18, 0, 1, 1, 0, 1, 1, 1]' : 0.0898631}
{'[5, 0, 1, 0, 6, 5, 0, 1, 18, 28, 18, 0, 1, 1, 0, 1, 1, 1]' : 0.090282}
{'[5, 0, 1, 0, 6, 5, 0, 1, 18, 28, 18, 0, 1, 1, 0, 1, 1, 1]' : 0.0898199}
{'[5, 0, 1, 0, 6, 5, 0, 1, 18, 28, 18, 0, 1, 1, 0, 1, 1, 1]' : 0.0898318}
{'[5, 0, 1, 0, 6, 5, 0, 1, 18, 28, 18, 0, 1, 1, 0, 1, 1, 1]' : 0.0898712}
{'[5, 0, 1, 0, 6, 5, 0, 1, 18, 28, 18, 0, 1, 1, 0, 1, 1, 1]' : 0.089843}
{'[5, 0, 1, 0, 6, 5, 0, 1, 18, 28, 18, 0, 1, 1, 0, 1, 1, 1]' : 0.089803}
{'[5, 0, 1, 0, 6, 5, 0, 1, 18, 28, 18, 0, 1, 1, 0, 1, 1, 1]' : 0.089808}

out:
 ["{'[5, 0, 1, 0, 6, 5, 0, 1, 18, 28, 18, 0, 1, 1, 0, 1, 1, 1]' : 0.0902448}", "{'[5, 0, 1, 0, 6, 5, 0, 1, 18, 28, 18, 0, 1, 1, 0, 1, 1, 1]' : 0.0898609}", "{'[5, 0, 1, 0, 6, 5, 0, 1, 18, 28, 18, 0, 1, 1, 0, 1, 1, 1]' : 0.0897832}", "{'[5, 0, 1, 0, 6, 5, 0, 1, 18, 28, 18, 0, 1, 1, 0, 1, 1, 1]' : 0.0898628}", "{'[5, 0, 1, 0, 6, 5, 0, 1, 18, 28, 18, 0, 1, 1, 0, 1, 1, 1]' : 0.0898139}", "{'[5, 0, 1, 0, 6, 5, 0, 1, 18, 28, 18, 0, 1, 1, 0, 1, 1, 1]' : 0.089782}", "{'[5, 0, 1, 0, 6, 5, 0, 1, 18, 28, 18, 0, 1, 1, 0, 1, 1, 1]' : 0.0902009}", "{'[5, 0, 1, 0, 6, 5, 0, 1, 18, 28, 18, 0, 1, 1, 0, 1, 1, 1]' : 0.089848}", "{'[5, 0, 1, 0, 6, 5, 0, 1, 18, 28, 18, 0, 1, 1, 0, 1, 1, 1]' : 0.0897961}", "{'[5, 0, 1, 0, 6, 5, 0, 1, 18, 28, 18, 0, 1, 1, 0, 1, 1, 1]' : 0.089864}", "{'[5, 0, 1, 0, 6, 5, 0, 1, 18, 28, 18, 0, 1, 1, 0, 1, 1, 1]' : 0.0898168}", "{'[5, 0, 1, 0, 6, 5, 0, 1, 18, 28, 18, 0, 1, 1, 0, 1, 1, 1]' : 0.0898409}", "{'[5, 0, 1, 0, 6, 5, 0, 1, 18, 28, 18, 0, 1, 1, 0, 1, 1, 1]' : 0.0908749}", "{'[5, 0, 1, 0, 6, 5, 0, 1, 18, 28, 18, 0, 1, 1, 0, 1, 1, 1]' : 0.089792}", "{'[5, 0, 1, 0, 6, 5, 0, 1, 18, 28, 18, 0, 1, 1, 0, 1, 1, 1]' : 0.0898321}", "{'[5, 0, 1, 0, 6, 5, 0, 1, 18, 28, 18, 0, 1, 1, 0, 1, 1, 1]' : 0.0897629}", "{'[5, 0, 1, 0, 6, 5, 0, 1, 18, 28, 18, 0, 1, 1, 0, 1, 1, 1]' : 0.089793}", "{'[5, 0, 1, 0, 6, 5, 0, 1, 18, 28, 18, 0, 1, 1, 0, 1, 1, 1]' : 0.0897679}", "{'[5, 0, 1, 0, 6, 5, 0, 1, 18, 28, 18, 0, 1, 1, 0, 1, 1, 1]' : 0.0897901}", "{'[5, 0, 1, 0, 6, 5, 0, 1, 18, 28, 18, 0, 1, 1, 0, 1, 1, 1]' : 0.089793}", "{'[5, 0, 1, 0, 6, 5, 0, 1, 18, 28, 18, 0, 1, 1, 0, 1, 1, 1]' : 0.089767}", "{'[5, 0, 1, 0, 6, 5, 0, 1, 18, 28, 18, 0, 1, 1, 0, 1, 1, 1]' : 0.089797}", "{'[5, 0, 1, 0, 6, 5, 0, 1, 18, 28, 18, 0, 1, 1, 0, 1, 1, 1]' : 0.0898631}", "{'[5, 0, 1, 0, 6, 5, 0, 1, 18, 28, 18, 0, 1, 1, 0, 1, 1, 1]' : 0.090282}", "{'[5, 0, 1, 0, 6, 5, 0, 1, 18, 28, 18, 0, 1, 1, 0, 1, 1, 1]' : 0.0898199}", "{'[5, 0, 1, 0, 6, 5, 0, 1, 18, 28, 18, 0, 1, 1, 0, 1, 1, 1]' : 0.0898318}", "{'[5, 0, 1, 0, 6, 5, 0, 1, 18, 28, 18, 0, 1, 1, 0, 1, 1, 1]' : 0.0898712}", "{'[5, 0, 1, 0, 6, 5, 0, 1, 18, 28, 18, 0, 1, 1, 0, 1, 1, 1]' : 0.089843}", "{'[5, 0, 1, 0, 6, 5, 0, 1, 18, 28, 18, 0, 1, 1, 0, 1, 1, 1]' : 0.089803}", "{'[5, 0, 1, 0, 6, 5, 0, 1, 18, 28, 18, 0, 1, 1, 0, 1, 1, 1]' : 0.089808}"]
returning from 'run': {'[5, 0, 1, 0, 6, 5, 0, 1, 18, 28, 18, 0, 1, 1, 0, 1, 1, 1]': ([0.0902448, 0.0898609, 0.0897832, 0.0898628, 0.0898139, 0.089782, 0.0902009, 0.089848, 0.0897961, 0.089864, 0.0898168, 0.0898409, 0.0908749, 0.089792, 0.0898321, 0.0897629, 0.089793, 0.0897679, 0.0897901, 0.089793, 0.089767, 0.089797, 0.0898631, 0.090282, 0.0898199, 0.0898318, 0.0898712, 0.089843, 0.089803, 0.089808], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.0902448, 0.0898609, 0.0897832, 0.0898628, 0.0898139, 0.089782, 0.0902009, 0.089848, 0.0897961, 0.089864, 0.0898168, 0.0898409, 0.0908749, 0.089792, 0.0898321, 0.0897629, 0.089793, 0.0897679, 0.0897901, 0.089793, 0.089767, 0.089797, 0.0898631, 0.090282, 0.0898199, 0.0898318, 0.0898712, 0.089843, 0.089803, 0.089808], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[5, 0, 1, 0, 6, 5, 0, 1, 18, 28, 18, 0, 1, 1, 0, 1, 1, 1]': ([0.0902448, 0.0898609, 0.0897832, 0.0898628, 0.0898139, 0.089782, 0.0902009, 0.089848, 0.0897961, 0.089864, 0.0898168, 0.0898409, 0.0908749, 0.089792, 0.0898321, 0.0897629, 0.089793, 0.0897679, 0.0897901, 0.089793, 0.089767, 0.089797, 0.0898631, 0.090282, 0.0898199, 0.0898318, 0.0898712, 0.089843, 0.089803, 0.089808], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [1, 5, 2, 6, 1, 0, 2, 4, 0, 26, 0, 1, 1, 1]
Fixed Factors: {'T2_K': 5, 'T2_J': 6, 'SCR': 1, 'VEC1': 1}
Testing candidate 4: [1, 5, 2, 6, 6, 5, 1, 0, 2, 4, 0, 26, 0, 1, 1, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	36
        Max loop nest depth: 	6
        Additions: 		1508
        Multiplications: 	528
        Divisions: 		0
        Logical: 		0
        Reads: 			3398
        Writes: 		765
        Comparisons:		36
        Gotos: 			0
        
digraph CFG {
	17089428 [label="17089428  int k;...",shape=box];
	17138421 [label="17138421  double scv_170, scv_171, scv_172, scv_173, scv_174, scv_175, scv_176, scv_177;...",shape=box];
	17109907 [label="17109907  double scv_101, scv_102, scv_103, scv_104, scv_105, scv_106, scv_107, scv_108;...",shape=box];
	ForLoop17094947 [label="ForLoop17094947  for (kt=kk; kt<=cbv_19; kt=kt+8) {...",shape=box];
	ForLoop17094947 -> 17137096;
	ForLoop17094947 -> _JOIN_17094947;
	17111973 [label="17111973  double scv_129, scv_130, scv_131, scv_132, scv_133, scv_134, scv_135, scv_136;...",shape=box];
	_JOIN_17091274 [label="_JOIN_17091274None...",shape=box];
	_JOIN_17091274 -> 17091276;
	17097694 [label="17097694  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	_JOIN_17094670 [label="_JOIN_17094670None...",shape=box];
	_JOIN_17094670 -> _JOIN_17094671;
	_JOIN_17094671 [label="_JOIN_17094671None...",shape=box];
	_JOIN_17094671 -> ForLoop17095790;
	17106419 [label="17106419  double scv_72;...",shape=box];
	_JOIN_17089427 [label="_JOIN_17089427None...",shape=box];
	_JOIN_17089427 -> 17089428;
	ForLoop17094303 [label="ForLoop17094303  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop17094303 -> ForLoop17094301;
	ForLoop17094303 -> _JOIN_17094303;
	ForLoop17094301 [label="ForLoop17094301  for (kk=kkk; kk<=min(ny-1,kkk+992); kk=kk+32) {...",shape=box];
	ForLoop17094301 -> 17163825;
	ForLoop17094301 -> _JOIN_17094301;
	ForLoop17094305 [label="ForLoop17094305  for (i=ii; i<=min(nx-1,ii+15)-4; i=i+5) {...",shape=box];
	ForLoop17094305 -> 17135396;
	ForLoop17094305 -> _JOIN_17094305;
	_JOIN_17088100 [label="_JOIN_17088100None...",shape=box];
	_JOIN_17088100 -> _JOIN_17088102;
	_JOIN_17088102 [label="_JOIN_17088102None...",shape=box];
	_JOIN_17088102 -> ForLoop17094303;
	_JOIN_17090198 [label="_JOIN_17090198None...",shape=box];
	_JOIN_17090198 -> 17164859;
	17171062 [label="17171062  register int cbv_21, cbv_22;...",shape=box];
	ForLoop17093290 [label="ForLoop17093290  for (k=cbv_13; k<=cbv_14; k=k+1) {...",shape=box];
	ForLoop17093290 -> 17110551;
	ForLoop17093290 -> _JOIN_17093290;
	_JOIN_17095792 [label="_JOIN_17095792None...",shape=box];
	_JOIN_17095792 -> _JOIN_17095794;
	_JOIN_17095790 [label="_JOIN_17095790None...",shape=box];
	_JOIN_17095790 -> 17143660;
	ForLoop17090266 [label="ForLoop17090266  for (k=cbv_4; k<=cbv_5; k=k+1) {...",shape=box];
	ForLoop17090266 -> 17104353;
	ForLoop17090266 -> _JOIN_17090266;
	_JOIN_17094668 [label="_JOIN_17094668None...",shape=box];
	_JOIN_17094668 -> _JOIN_17094670;
	_JOIN_17095794 [label="_JOIN_17095794None...",shape=box];
	_JOIN_17095794 -> _JOIN_17095795;
	_JOIN_17095795 [label="_JOIN_17095795None...",shape=box];
	ForLoop17090198 [label="ForLoop17090198  for (k=kt; k<=cbv_3; k=k+27) {...",shape=box];
	ForLoop17090198 -> 17103718;
	ForLoop17090198 -> _JOIN_17090198;
	17093292 [label="17093292  int k;...",shape=box];
	17170028 [label="17170028  register int cbv_19;...",shape=box];
	17103718 [label="17103718  double scv_17, scv_18, scv_19, scv_20, scv_21, scv_22, scv_23, scv_24;...",shape=box];
	ForLoop17094668 [label="ForLoop17094668  for (jt=jj; jt<=cbv_18; jt=jt+8) {...",shape=box];
	ForLoop17094668 -> 17094463;
	ForLoop17094668 -> _JOIN_17094668;
	17108485 [label="17108485  double scv_100;...",shape=box];
	ForLoop17091274 [label="ForLoop17091274  for (k=cbv_7; k<=cbv_8; k=k+1) {...",shape=box];
	ForLoop17091274 -> 17106419;
	ForLoop17091274 -> _JOIN_17091274;
	17112617 [label="17112617  double scv_156;...",shape=box];
	17086447 [label="17086447  double x_copy[256];...",shape=box];
	17086604 [label="17086604  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	17135396 [label="17135396  double scv_157, scv_158, scv_159, scv_160, scv_161;...",shape=box];
	17107841 [label="17107841  double scv_73, scv_74, scv_75, scv_76, scv_77, scv_78, scv_79, scv_80;...",shape=box];
	_JOIN_17094303 [label="_JOIN_17094303None...",shape=box];
	_JOIN_17094303 -> 17135414;
	_JOIN_17094301 [label="_JOIN_17094301None...",shape=box];
	_JOIN_17094301 -> _JOIN_17094303;
	17135414 [label="17135414  tmp[(i+2)]=scv_157;...",shape=box];
	ForLoop17094670 [label="ForLoop17094670  for (jj=jjj; jj<=min(ny-1,jjj+1792); jj=jj+256) {...",shape=box];
	ForLoop17094670 -> 17094420;
	ForLoop17094670 -> _JOIN_17094670;
	ForLoop17094671 [label="ForLoop17094671  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop17094671 -> ForLoop17094670;
	ForLoop17094671 -> _JOIN_17094671;
	ForLoop17093216 [label="ForLoop17093216  for (k=kt; k<=cbv_12; k=k+27) {...",shape=box];
	ForLoop17093216 -> 17109907;
	ForLoop17093216 -> _JOIN_17093216;
	_JOIN_17095718 [label="_JOIN_17095718None...",shape=box];
	_JOIN_17095718 -> 17171062;
	17092284 [label="17092284  int k;...",shape=box];
	17163825 [label="17163825  register int cbv_2;...",shape=box];
	ForLoop17091200 [label="ForLoop17091200  for (k=kt; k<=cbv_6; k=k+27) {...",shape=box];
	ForLoop17091200 -> 17105775;
	ForLoop17091200 -> _JOIN_17091200;
	ForLoop17094298 [label="ForLoop17094298  for (k=cbv_16; k<=cbv_17; k=k+1) {...",shape=box];
	ForLoop17094298 -> 17112617;
	ForLoop17094298 -> _JOIN_17094298;
	_JOIN_17010151 [label="_JOIN_17010151None...",shape=box];
	_JOIN_17010151 -> 17086447;
	_JOIN_17090266 [label="_JOIN_17090266None...",shape=box];
	_JOIN_17090266 -> 17090268;
	_JOIN_17088098 [label="_JOIN_17088098None...",shape=box];
	_JOIN_17088098 -> _JOIN_17088100;
	17010150 [label="17010150  y[i]=0.0;...",shape=box];
	17010150 -> _JOIN_17010151;
	17094463 [label="17094463  scv_198=scv_198+A[i*ny+jt]*x_copy[(jt-jj)];...",shape=box];
	17010062 [label="17010062  y[i]=0.0;...",shape=box];
	17090268 [label="17090268  int k;...",shape=box];
	_JOIN_17094947 [label="_JOIN_17094947None...",shape=box];
	_JOIN_17094947 -> 17094948;
	_JOIN_17093216 [label="_JOIN_17093216None...",shape=box];
	_JOIN_17093216 -> 17168312;
	17010219 [label="17010219  register int cbv_2, cbv_3;...",shape=box];
	17167161 [label="17167161  register int cbv_10, cbv_11;...",shape=box];
	ForLoop17088100 [label="ForLoop17088100  for (jj=jjj; jj<=min(ny-1,jjj+1792); jj=jj+256) {...",shape=box];
	ForLoop17088100 -> 17086604;
	ForLoop17088100 -> _JOIN_17088100;
	ForLoop17088102 [label="ForLoop17088102  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop17088102 -> ForLoop17088100;
	ForLoop17088102 -> _JOIN_17088102;
	_JOIN_17093290 [label="_JOIN_17093290None...",shape=box];
	_JOIN_17093290 -> 17093292;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 17009975;
	17143648 [label="17143648  double scv_198;...",shape=box];
	ForLoop17095786 [label="ForLoop17095786  for (k=cbv_21; k<=cbv_22; k=k+1) {...",shape=box];
	ForLoop17095786 -> 17139056;
	ForLoop17095786 -> _JOIN_17095786;
	ForLoop17095789 [label="ForLoop17095789  for (kk=kkk; kk<=min(ny-1,kkk+992); kk=kk+32) {...",shape=box];
	ForLoop17095789 -> 17170028;
	ForLoop17095789 -> _JOIN_17095789;
	ForLoop17094224 [label="ForLoop17094224  for (k=kt; k<=cbv_15; k=k+27) {...",shape=box];
	ForLoop17094224 -> 17111973;
	ForLoop17094224 -> _JOIN_17094224;
	_JOIN_17010082 [label="_JOIN_17010082None...",shape=box];
	_JOIN_17010082 -> 17010219;
	17139056 [label="17139056  double scv_197;...",shape=box];
	_JOIN_17092282 [label="_JOIN_17092282None...",shape=box];
	_JOIN_17092282 -> 17092284;
	17094948 [label="17094948  int k;...",shape=box];
	17009975 [label="17009975  int i;...",shape=box];
	_JOIN_17091200 [label="_JOIN_17091200None...",shape=box];
	_JOIN_17091200 -> 17166010;
	ForLoop17095794 [label="ForLoop17095794  for (ii=iii; ii<=min(nx-1,iii+2032); ii=ii+16) {...",shape=box];
	ForLoop17095794 -> 17086480;
	ForLoop17095794 -> _JOIN_17095794;
	ForLoop17095795 [label="ForLoop17095795  for (iii=0; iii<=nx-1; iii=iii+2048) {...",shape=box];
	ForLoop17095795 -> ForLoop17095794;
	ForLoop17095795 -> _JOIN_17095795;
	ForLoop17095792 [label="ForLoop17095792  for (i=(miexpected=9369846271501.798828
actual=9369846271501.798828
n(nx-1,ii+15))-(((min(nx-1,ii+15))-(ii)+1)%5)+1; i<=min(nx-1,ii+15); i=i+1) {...",shape=box];
	ForLoop17095792 -> 17143648;
	ForLoop17095792 -> _JOIN_17095792;
	ForLoop17095790 [label="ForLoop17095790  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop17095790 -> ForLoop17095789;
	ForLoop17095790 -> _JOIN_17095790;
	ForLoop17092282 [label="ForLoop17092282  for (k=cbv_10; k<=cbv_11; k=k+1) {...",shape=box];
	ForLoop17092282 -> 17108485;
	ForLoop17092282 -> _JOIN_17092282;
	17091276 [label="17091276  int k;...",shape=box];
	ForLoop17092208 [label="ForLoop17092208  for (k=kt; k<=cbv_9; k=k+27) {...",shape=box];
	ForLoop17092208 -> 17107841;
	ForLoop17092208 -> _JOIN_17092208;
	_JOIN_17094305 [label="_JOIN_17094305None...",shape=box];
	_JOIN_17094305 -> ForLoop17095792;
	ForLoop17095718 [label="ForLoop17095718  for (k=kt; k<=cbv_20; k=k+27) {...",shape=box];
	ForLoop17095718 -> 17138421;
	ForLoop17095718 -> _JOIN_17095718;
	17168312 [label="17168312  register int cbv_13, cbv_14;...",shape=box];
	ForLoop17010082 [label="ForLoop17010082  for (i=0; i<=cbv_1; i=i+3) {...",shape=box];
	ForLoop17010082 -> 17010062;
	ForLoop17010082 -> _JOIN_17010082;
	_JOIN_17095786 [label="_JOIN_17095786None...",shape=box];
	_JOIN_17095786 -> _JOIN_17095789;
	_JOIN_17094224 [label="_JOIN_17094224None...",shape=box];
	_JOIN_17094224 -> 17169463;
	ForLoop17089427 [label="ForLoop17089427  for (kt=kk; kt<=cbv_2; kt=kt+8) {...",shape=box];
	ForLoop17089427 -> 17102329;
	ForLoop17089427 -> _JOIN_17089427;
	ForLoop17088098 [label="ForLoop17088098  for (jt=jj; jt<=cbv_1; jt=jt+8) {...",shape=box];
	ForLoop17088098 -> 17097694;
	ForLoop17088098 -> _JOIN_17088098;
	_JOIN_17092208 [label="_JOIN_17092208None...",shape=box];
	_JOIN_17092208 -> 17167161;
	17143660 [label="17143660  tmp[i]=scv_198;...",shape=box];
	17143660 -> _JOIN_17095792;
	17137096 [label="17137096  double scv_162, scv_163, scv_164, scv_165, scv_166, scv_167, scv_168, scv_169;...",shape=box];
	17102329 [label="17102329  double scv_9, scv_10, scv_11, scv_12, scv_13, scv_14, scv_15, scv_16;...",shape=box];
	17110551 [label="17110551  double scv_128;...",shape=box];
	ForLoop17010151 [label="ForLoop17010151  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop17010151 -> 17010150;
	ForLoop17010151 -> _JOIN_17010151;
	17105775 [label="17105775  double scv_45, scv_46, scv_47, scv_48, scv_49, scv_50, scv_51, scv_52;...",shape=box];
	17104353 [label="17104353  double scv_44;...",shape=box];
	_JOIN_17095789 [label="_JOIN_17095789None...",shape=box];
	_JOIN_17095789 -> _JOIN_17095790;
	_JOIN_17094298 [label="_JOIN_17094298None...",shape=box];
	_JOIN_17094298 -> _JOIN_17094301;
	17086480 [label="17086480  int i;...",shape=box];
	17086480 -> ForLoop17094305;
	17094420 [label="17094420  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	17166010 [label="17166010  register int cbv_7, cbv_8;...",shape=box];
	17169463 [label="17169463  register int cbv_16, cbv_17;...",shape=box];
	17164859 [label="17164859  register int cbv_4, cbv_5;...",shape=box];

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest75.exe __orio_perftest75.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest75.exe  
{'[1, 5, 2, 6, 6, 5, 1, 0, 2, 4, 0, 26, 0, 1, 1, 1, 1, 1]' : 0.097275}
{'[1, 5, 2, 6, 6, 5, 1, 0, 2, 4, 0, 26, 0, 1, 1, 1, 1, 1]' : 0.097018}
{'[1, 5, 2, 6, 6, 5, 1, 0, 2, 4, 0, 26, 0, 1, 1, 1, 1, 1]' : 0.0970449}
{'[1, 5, 2, 6, 6, 5, 1, 0, 2, 4, 0, 26, 0, 1, 1, 1, 1, 1]' : 0.096987}
{'[1, 5, 2, 6, 6, 5, 1, 0, 2, 4, 0, 26, 0, 1, 1, 1, 1, 1]' : 0.096931}
{'[1, 5, 2, 6, 6, 5, 1, 0, 2, 4, 0, 26, 0, 1, 1, 1, 1, 1]' : 0.097295}
{'[1, 5, 2, 6, 6, 5, 1, 0, 2, 4, 0, 26, 0, 1, 1, 1, 1, 1]' : 0.0969489}
{'[1, 5, 2, 6, 6, 5, 1, 0, 2, 4, 0, 26, 0, 1, 1, 1, 1, 1]' : 0.0969911}
{'[1, 5, 2, 6, 6, 5, 1, 0, 2, 4, 0, 26, 0, 1, 1, 1, 1, 1]' : 0.09692}
{'[1, 5, 2, 6, 6, 5, 1, 0, 2, 4, 0, 26, 0, 1, 1, 1, 1, 1]' : 0.096976}
{'[1, 5, 2, 6, 6, 5, 1, 0, 2, 4, 0, 26, 0, 1, 1, 1, 1, 1]' : 0.098}
{'[1, 5, 2, 6, 6, 5, 1, 0, 2, 4, 0, 26, 0, 1, 1, 1, 1, 1]' : 0.096957}
{'[1, 5, 2, 6, 6, 5, 1, 0, 2, 4, 0, 26, 0, 1, 1, 1, 1, 1]' : 0.097034}
{'[1, 5, 2, 6, 6, 5, 1, 0, 2, 4, 0, 26, 0, 1, 1, 1, 1, 1]' : 0.096941}
{'[1, 5, 2, 6, 6, 5, 1, 0, 2, 4, 0, 26, 0, 1, 1, 1, 1, 1]' : 0.0969481}
{'[1, 5, 2, 6, 6, 5, 1, 0, 2, 4, 0, 26, 0, 1, 1, 1, 1, 1]' : 0.0969601}
{'[1, 5, 2, 6, 6, 5, 1, 0, 2, 4, 0, 26, 0, 1, 1, 1, 1, 1]' : 0.0969911}
{'[1, 5, 2, 6, 6, 5, 1, 0, 2, 4, 0, 26, 0, 1, 1, 1, 1, 1]' : 0.0969629}
{'[1, 5, 2, 6, 6, 5, 1, 0, 2, 4, 0, 26, 0, 1, 1, 1, 1, 1]' : 0.0969861}
{'[1, 5, 2, 6, 6, 5, 1, 0, 2, 4, 0, 26, 0, 1, 1, 1, 1, 1]' : 0.097008}
{'[1, 5, 2, 6, 6, 5, 1, 0, 2, 4, 0, 26, 0, 1, 1, 1, 1, 1]' : 0.09728}
{'[1, 5, 2, 6, 6, 5, 1, 0, 2, 4, 0, 26, 0, 1, 1, 1, 1, 1]' : 0.097074}
{'[1, 5, 2, 6, 6, 5, 1, 0, 2, 4, 0, 26, 0, 1, 1, 1, 1, 1]' : 0.097017}
{'[1, 5, 2, 6, 6, 5, 1, 0, 2, 4, 0, 26, 0, 1, 1, 1, 1, 1]' : 0.096998}
{'[1, 5, 2, 6, 6, 5, 1, 0, 2, 4, 0, 26, 0, 1, 1, 1, 1, 1]' : 0.096945}
{'[1, 5, 2, 6, 6, 5, 1, 0, 2, 4, 0, 26, 0, 1, 1, 1, 1, 1]' : 0.0970111}
{'[1, 5, 2, 6, 6, 5, 1, 0, 2, 4, 0, 26, 0, 1, 1, 1, 1, 1]' : 0.0969481}
{'[1, 5, 2, 6, 6, 5, 1, 0, 2, 4, 0, 26, 0, 1, 1, 1, 1, 1]' : 0.0969999}
{'[1, 5, 2, 6, 6, 5, 1, 0, 2, 4, 0, 26, 0, 1, 1, 1, 1, 1]' : 0.096947}
{'[1, 5, 2, 6, 6, 5, 1, 0, 2, 4, 0, 26, 0, 1, 1, 1, 1, 1]' : 0.0969419}

out:
 ["{'[1, 5, 2, 6, 6, 5, 1, 0, 2, 4, 0, 26, 0, 1, 1, 1, 1, 1]' : 0.097275}", "{'[1, 5, 2, 6, 6, 5, 1, 0, 2, 4, 0, 26, 0, 1, 1, 1, 1, 1]' : 0.097018}", "{'[1, 5, 2, 6, 6, 5, 1, 0, 2, 4, 0, 26, 0, 1, 1, 1, 1, 1]' : 0.0970449}", "{'[1, 5, 2, 6, 6, 5, 1, 0, 2, 4, 0, 26, 0, 1, 1, 1, 1, 1]' : 0.096987}", "{'[1, 5, 2, 6, 6, 5, 1, 0, 2, 4, 0, 26, 0, 1, 1, 1, 1, 1]' : 0.096931}", "{'[1, 5, 2, 6, 6, 5, 1, 0, 2, 4, 0, 26, 0, 1, 1, 1, 1, 1]' : 0.097295}", "{'[1, 5, 2, 6, 6, 5, 1, 0, 2, 4, 0, 26, 0, 1, 1, 1, 1, 1]' : 0.0969489}", "{'[1, 5, 2, 6, 6, 5, 1, 0, 2, 4, 0, 26, 0, 1, 1, 1, 1, 1]' : 0.0969911}", "{'[1, 5, 2, 6, 6, 5, 1, 0, 2, 4, 0, 26, 0, 1, 1, 1, 1, 1]' : 0.09692}", "{'[1, 5, 2, 6, 6, 5, 1, 0, 2, 4, 0, 26, 0, 1, 1, 1, 1, 1]' : 0.096976}", "{'[1, 5, 2, 6, 6, 5, 1, 0, 2, 4, 0, 26, 0, 1, 1, 1, 1, 1]' : 0.098}", "{'[1, 5, 2, 6, 6, 5, 1, 0, 2, 4, 0, 26, 0, 1, 1, 1, 1, 1]' : 0.096957}", "{'[1, 5, 2, 6, 6, 5, 1, 0, 2, 4, 0, 26, 0, 1, 1, 1, 1, 1]' : 0.097034}", "{'[1, 5, 2, 6, 6, 5, 1, 0, 2, 4, 0, 26, 0, 1, 1, 1, 1, 1]' : 0.096941}", "{'[1, 5, 2, 6, 6, 5, 1, 0, 2, 4, 0, 26, 0, 1, 1, 1, 1, 1]' : 0.0969481}", "{'[1, 5, 2, 6, 6, 5, 1, 0, 2, 4, 0, 26, 0, 1, 1, 1, 1, 1]' : 0.0969601}", "{'[1, 5, 2, 6, 6, 5, 1, 0, 2, 4, 0, 26, 0, 1, 1, 1, 1, 1]' : 0.0969911}", "{'[1, 5, 2, 6, 6, 5, 1, 0, 2, 4, 0, 26, 0, 1, 1, 1, 1, 1]' : 0.0969629}", "{'[1, 5, 2, 6, 6, 5, 1, 0, 2, 4, 0, 26, 0, 1, 1, 1, 1, 1]' : 0.0969861}", "{'[1, 5, 2, 6, 6, 5, 1, 0, 2, 4, 0, 26, 0, 1, 1, 1, 1, 1]' : 0.097008}", "{'[1, 5, 2, 6, 6, 5, 1, 0, 2, 4, 0, 26, 0, 1, 1, 1, 1, 1]' : 0.09728}", "{'[1, 5, 2, 6, 6, 5, 1, 0, 2, 4, 0, 26, 0, 1, 1, 1, 1, 1]' : 0.097074}", "{'[1, 5, 2, 6, 6, 5, 1, 0, 2, 4, 0, 26, 0, 1, 1, 1, 1, 1]' : 0.097017}", "{'[1, 5, 2, 6, 6, 5, 1, 0, 2, 4, 0, 26, 0, 1, 1, 1, 1, 1]' : 0.096998}", "{'[1, 5, 2, 6, 6, 5, 1, 0, 2, 4, 0, 26, 0, 1, 1, 1, 1, 1]' : 0.096945}", "{'[1, 5, 2, 6, 6, 5, 1, 0, 2, 4, 0, 26, 0, 1, 1, 1, 1, 1]' : 0.0970111}", "{'[1, 5, 2, 6, 6, 5, 1, 0, 2, 4, 0, 26, 0, 1, 1, 1, 1, 1]' : 0.0969481}", "{'[1, 5, 2, 6, 6, 5, 1, 0, 2, 4, 0, 26, 0, 1, 1, 1, 1, 1]' : 0.0969999}", "{'[1, 5, 2, 6, 6, 5, 1, 0, 2, 4, 0, 26, 0, 1, 1, 1, 1, 1]' : 0.096947}", "{'[1, 5, 2, 6, 6, 5, 1, 0, 2, 4, 0, 26, 0, 1, 1, 1, 1, 1]' : 0.0969419}"]
returning from 'run': {'[1, 5, 2, 6, 6, 5, 1, 0, 2, 4, 0, 26, 0, 1, 1, 1, 1, 1]': ([0.097275, 0.097018, 0.0970449, 0.096987, 0.096931, 0.097295, 0.0969489, 0.0969911, 0.09692, 0.096976, 0.098, 0.096957, 0.097034, 0.096941, 0.0969481, 0.0969601, 0.0969911, 0.0969629, 0.0969861, 0.097008, 0.09728, 0.097074, 0.097017, 0.096998, 0.096945, 0.0970111, 0.0969481, 0.0969999, 0.096947, 0.0969419], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.097275, 0.097018, 0.0970449, 0.096987, 0.096931, 0.097295, 0.0969489, 0.0969911, 0.09692, 0.096976, 0.098, 0.096957, 0.097034, 0.096941, 0.0969481, 0.0969601, 0.0969911, 0.0969629, 0.0969861, 0.097008, 0.09728, 0.097074, 0.097017, 0.096998, 0.096945, 0.0970111, 0.0969481, 0.0969999, 0.096947, 0.0969419], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[1, 5, 2, 6, 6, 5, 1, 0, 2, 4, 0, 26, 0, 1, 1, 1, 1, 1]': ([0.097275, 0.097018, 0.0970449, 0.096987, 0.096931, 0.097295, 0.0969489, 0.0969911, 0.09692, 0.096976, 0.098, 0.096957, 0.097034, 0.096941, 0.0969481, 0.0969601, 0.0969911, 0.0969629, 0.0969861, 0.097008, 0.09728, 0.097074, 0.097017, 0.096998, 0.096945, 0.0970111, 0.0969481, 0.0969999, 0.096947, 0.0969419], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [2, 1, 2, 4, 1, 0, 19, 16, 3, 0, 0, 0, 0, 1]
Fixed Factors: {'T2_K': 5, 'T2_J': 6, 'SCR': 1, 'VEC1': 1}
Testing candidate 5: [2, 1, 2, 4, 6, 5, 1, 0, 19, 16, 3, 0, 0, 0, 0, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	70
        Max loop nest depth: 	6
        Additions: 		975
        Multiplications: 	216
        Divisions: 		0
        Logical: 		0
        Reads: 			1878
        Writes: 		404
        Comparisons:		70
        Gotos: 			0
        
digraph CFG {
	17244493 [label="17244493  double scv_19;...",shape=box];
	17259829 [label="17259829  register int cbv_54, cbv_55;...",shape=box];
	17220169 [label="17220169  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	ForLoop17221576 [label="ForLoop17221576  for (i=(min(nx-1,ii+31))-(((min(nx-1,ii+31))-(ii)+1)%17)+1; i<=min(nx-1,ii+31); i=i+1) {...",shape=box];
	ForLoop17221576 -> 17245044;
	ForLoop17221576 -> _JOIN_17221576;
	17256788 [label="17256788  register int cbv_20, cbv_21;...",shape=box];
	17216647 [label="17216647  scv_14=scv_14+A[(i+2)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_17221578 [label="_JOIN_17221578None...",shape=box];
	_JOIN_17221578 -> _JOIN_17221579;
	_JOIN_17221576 [label="_JOIN_17221576None...",shape=box];
	_JOIN_17221576 -> _JOIN_17221578;
	ForLoop17219862 [label="ForLoop17219862  for (j=cbv_41; j<=cbv_42; j=j+1) {...",shape=box];
	ForLoop17219862 -> 17219861;
	ForLoop17219862 -> _JOIN_17219862;
	17219311 [label="17219311  scv_15=scv_15+A[(i+11)*ny+j]*x_copy[(j-jj)];...",shape=box];
	17219311 -> _JOIN_17219312;
	17217144 [label="17217144  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	17217386 [label="17217386  scv_16=scv_16+A[(i+4)*ny+j]*x_copy[(j-jj)];...",shape=box];
	17217386 -> _JOIN_17217387;
	ForLoop17217032 [label="ForLoop17217032  for (j=jj; j<=cbv_10; j=j+4) {...",shape=box];
	ForLoop17217032 -> 17216922;
	ForLoop17217032 -> _JOIN_17217032;
	ForLoop17216216 [label="ForLoop17216216  for (j=jj; j<=cbv_1; j=j+4) {...",shape=box];
	ForLoop17216216 -> 17216133;
	ForLoop17216216 -> _JOIN_17216216;
	17221497 [label="17221497  scv_20=scv_20+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	17221497 -> _JOIN_17221498;
	17217661 [label="17217661  scv_13=scv_13+A[(i+5)*ny+j]*x_copy[(j-jj)];...",shape=box];
	17217661 -> _JOIN_17217662;
	ForLoop17216482 [label="ForLoop17216482  for (j=jj; j<=cbv_4; j=j+4) {...",shape=box];
	ForLoop17216482 -> 17216372;
	ForLoop17216482 -> _JOIN_17216482;
	_JOIN_17218762 [label="_JOIN_17218762None...",shape=box];
	_JOIN_17218762 -> 17218794;
	ForLoop17218957 [label="ForLoop17218957  for (j=jj; j<=cbv_31; j=j+4) {...",shape=box];
	ForLoop17218957 -> 17218847;
	ForLoop17218957 -> _JOIN_17218957;
	ForLoop17217582 [label="ForLoop17217582  for (j=jj; j<=cbv_16; j=j+4) {...",shape=box];
	ForLoop17217582 -> 17217472;
	ForLoop17217582 -> _JOIN_17217582;
	17257036 [label="17257036  register int cbv_23, cbv_24;...",shape=box];
	_JOIN_17217387 [label="_JOIN_17217387None...",shape=box];
	_JOIN_17217387 -> 17217419;
	17219397 [label="17219397  scv_2=scv_2+A[(i+12)*ny+j]*x_copy[(j-jj)];...",shape=box];
	17216922 [label="17216922  scv_5=scv_5+A[(i+3)*ny+j]*x_copy[(j-jj)];...",shape=box];
	17172201 [label="17172201  register int cbv_2, cbv_3;...",shape=box];
	ForLoop17220687 [label="ForLoop17220687  for (j=cbv_50; j<=cbv_51; j=j+1) {...",shape=box];
	ForLoop17220687 -> 17220686;
	ForLoop17220687 -> _JOIN_17220687;
	17256540 [label="17256540  register int cbv_17, cbv_18;...",shape=box];
	ForLoop17220332 [label="ForLoop17220332  for (j=jj; j<=cbv_46; j=j+4) {...",shape=box];
	ForLoop17220332 -> 17220222;
	ForLoop17220332 -> _JOIN_17220332;
	17171396 [label="17171396  int i;...",shape=box];
	ForLoop17217307 [label="ForLoop17217307  for (j=jj; j<=cbv_13; j=j+4) {...",shape=box];
	ForLoop17217307 -> 17217197;
	ForLoop17217307 -> _JOIN_17217307;
	ForLoop17220137 [label="ForLoop17220137  for (j=cbv_44; j<=cbv_45; j=j+1) {...",shape=box];
	ForLoop17220137 -> 17220136;
	ForLoop17220137 -> _JOIN_17220137;
	17217936 [label="17217936  scv_10=scv_10+A[(i+6)*ny+j]*x_copy[(j-jj)];...",shape=box];
	17217936 -> _JOIN_17217937;
	17216089 [label="17216089  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	_JOIN_17221427 [label="_JOIN_17221427None...",shape=box];
	_JOIN_17221427 -> 17259829;
	17219036 [label="17219036  scv_4=scv_4+A[(i+10)*ny+j]*x_copy[(j-jj)];...",shape=box];
	17219036 -> _JOIN_17219037;
	17257532 [label="17257532  register int cbv_29, cbv_30;...",shape=box];
	_JOIN_17219507 [label="_JOIN_17219507None...",shape=box];
	_JOIN_17219507 -> 17258276;
	_JOIN_17218407 [label="_JOIN_17218407None...",shape=box];
	_JOIN_17218407 -> 17257284;
	17216561 [label="17216561  scv_3=scv_3+A[(i+1)*ny+j]*x_copy[(j-jj)];...",shape=box];
	17216561 -> _JOIN_17216562;
	ForLoop17217387 [label="ForLoop17217387  for (j=cbv_14; j<=cbv_15; j=j+1) {...",shape=box];
	ForLoop17217387 -> 17217386;
	ForLoop17217387 -> _JOIN_17217387;
	_JOIN_17220412 [label="_JOIN_17220412None...",shape=box];
	_JOIN_17220412 -> 17220444;
	17215857 [label="17215857  int i;...",shape=box];
	17215857 -> ForLoop17221185;
	_JOIN_17218487 [label="_JOIN_17218487None...",shape=box];
	_JOIN_17218487 -> 17218519;
	17218572 [label="17218572  scv_17=scv_17+A[(i+9)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_17219862 [label="_JOIN_17219862None...",shape=box];
	_JOIN_17219862 -> 17219894;
	ForLoop17218682 [label="ForLoop17218682  for (j=jj; j<=cbv_28; j=j+4) {...",shape=box];
	ForLoop17218682 -> 17218572;
	ForLoop17218682 -> _JOIN_17218682;
	ForLoop17171911 [label="ForLoop17171911  for (i=0; i<=cbv_1; i=i+20) {...",shape=box];
	ForLoop17171911 -> 17171738;
	ForLoop17171911 -> _JOIN_17171911;
	_JOIN_17219782 [label="_JOIN_17219782None...",shape=box];
	_JOIN_17219782 -> 17258524;
	ForLoop17216837 [label="ForLoop17216837  for (j=cbv_8; j<=cbv_9; j=j+1) {...",shape=box];
	ForLoop17216837 -> 17216836;
	ForLoop17216837 -> _JOIN_17216837;
	_JOIN_17221498 [label="_JOIN_17221498None...",shape=box];
	_JOIN_17221498 -> _JOIN_17221501;
	17216286 [label="17216286  scv_6=scv_6+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	17216286 -> _JOIN_17216287;
	17216836 [label="17216836  scv_14=scv_14+A[(i+2)*ny+j]*x_copy[(j-jj)];...",shape=box];
	17216836 -> _JOIN_17216837;
	ForLoop17219312 [label="ForLoop17219312  for (j=cbv_35; j<=cbv_36; j=j+1) {...",shape=box];
	ForLoop17219312 -> 17219311;
	ForLoop17219312 -> _JOIN_17219312;
	17258524 [label="17258524  register int cbv_41, cbv_42;...",shape=box];
	_JOIN_17216562 [label="_JOIN_17216562None...",shape=box];
	_JOIN_17216562 -> 17216594;
	17259631 [label="17259631  register int cbv_52;...",shape=box];
	17221300 [label="17221300  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	17220686 [label="17220686  scv_12=scv_12+A[(i+16)*ny+j]*x_copy[(j-jj)];...",shape=box];
	17220686 -> _JOIN_17220687;
	17219861 [label="17219861  scv_7=scv_7+A[(i+13)*ny+j]*x_copy[(j-jj)];...",shape=box];
	17219861 -> _JOIN_17219862;
	17220444 [label="17220444  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	ForLoop17218132 [label="ForLoop17218132  for (j=jj; j<=cbv_22; j=j+4) {...",shape=box];
	ForLoop17218132 -> 17218022;
	ForLoop17218132 -> _JOIN_17218132;
	_JOIN_17217307 [label="_JOIN_17217307None...",shape=box];
	_JOIN_17217307 -> 17256292;
	17217747 [label="17217747  scv_10=scv_10+A[(i+6)*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop17217857 [label="ForLoop17217857  for (j=jj; j<=cbv_19; j=j+4) {...",shape=box];
	ForLoop17217857 -> 17217747;
	ForLoop17217857 -> _JOIN_17217857;
	ForLoop17219587 [label="ForLoop17219587  for (j=cbv_38; j<=cbv_39; j=j+1) {...",shape=box];
	ForLoop17219587 -> 17219586;
	ForLoop17219587 -> _JOIN_17219587;
	ForLoop17219782 [label="ForLoop17219782  for (j=jj; j<=cbv_40; j=j+4) {...",shape=box];
	ForLoop17219782 -> 17219672;
	ForLoop17219782 -> _JOIN_17219782;
	ForLoop17220690 [label="ForLoop17220690  for (jj=jjj; jj<=min(ny-1,jjj+2032); jj=jj+16) {...",shape=box];
	ForLoop17220690 -> 17216089;
	ForLoop17220690 -> _JOIN_17220690;
	17171738 [label="17171738  y[i]=0.0;...",shape=box];
	17218486 [label="17218486  scv_18=scv_18+A[(i+8)*ny+j]*x_copy[(j-jj)];...",shape=box];
	17218486 -> _JOIN_17218487;
	ForLoop17219037 [label="ForLoop17219037  for (j=cbv_32; j<=cbv_33; j=j+1) {...",shape=box];
	ForLoop17219037 -> 17219036;
	ForLoop17219037 -> _JOIN_17219037;
	17218847 [label="17218847  scv_4=scv_4+A[(i+10)*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop17171980 [label="ForLoop17171980  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop17171980 -> 17171979;
	ForLoop17171980 -> _JOIN_17171980;
	ForLoop17220692 [label="ForLoop17220692  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop17220692 -> ForLoop17220690;
	ForLoop17220692 -> _JOIN_17220692;
	ForLoop17219507 [label="ForLoop17219507  for (j=jj; j<=cbv_37; j=j+4) {...",shape=box];
	ForLoop17219507 -> 17219397;
	ForLoop17219507 -> _JOIN_17219507;
	17217111 [label="17217111  scv_5=scv_5+A[(i+3)*ny+j]*x_copy[(j-jj)];...",shape=box];
	17217111 -> _JOIN_17217112;
	_JOIN_17221181 [label="_JOIN_17221181None...",shape=box];
	_JOIN_17221181 -> _JOIN_17221183;
	ForLoop17219232 [label="ForLoop17219232  for (j=jj; j<=cbv_34; j=j+4) {...",shape=box];
	ForLoop17219232 -> 17219122;
	ForLoop17219232 -> _JOIN_17219232;
	17217694 [label="17217694  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	_JOIN_17216482 [label="_JOIN_17216482None...",shape=box];
	_JOIN_17216482 -> 17255548;
	_JOIN_17217032 [label="_JOIN_17217032None...",shape=box];
	_JOIN_17217032 -> 17256044;
	17218794 [label="17218794  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	17217197 [label="17217197  scv_16=scv_16+A[(i+4)*ny+j]*x_copy[(j-jj)];...",shape=box];
	17218244 [label="17218244  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	_JOIN_17221579 [label="_JOIN_17221579None...",shape=box];
	ForLoop17221574 [label="ForLoop17221574  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop17221574 -> ForLoop17221573;
	ForLoop17221574 -> _JOIN_17221574;
	ForLoop17221573 [label="ForLoop17221573  for (kk=kkk; kk<=min(ny-1,kkk+992); kk=kk+32) {...",shape=box];
	ForLoop17221573 -> 17259920;
	ForLoop17221573 -> _JOIN_17221573;
	ForLoop17221572 [label="ForLoop17221572  for (k=kk; k<=cbv_56; k=k+1) {...",shape=box];
	ForLoop17221572 -> 17244493;
	ForLoop17221572 -> _JOIN_17221572;
	_JOIN_17221573 [label="_JOIN_17221573None...",shape=box];
	_JOIN_17221573 -> _JOIN_17221574;
	_JOIN_17221572 [label="_JOIN_17221572None...",shape=box];
	_JOIN_17221572 -> _JOIN_17221573;
	_JOIN_17216837 [label="_JOIN_17216837None...",shape=box];
	_JOIN_17216837 -> 17216869;
	ForLoop17216562 [label="ForLoop17216562  for (j=cbv_5; j<=cbv_6; j=j+1) {...",shape=box];
	ForLoop17216562 -> 17216561;
	ForLoop17216562 -> _JOIN_17216562;
	_JOIN_17217937 [label="_JOIN_17217937None...",shape=box];
	_JOIN_17217937 -> 17217969;
	ForLoop17221579 [label="ForLoop17221579  for (iii=0; iii<=nx-1; iii=iii+512) {...",shape=box];
	ForLoop17221579 -> ForLoop17221578;
	ForLoop17221579 -> _JOIN_17221579;
	ForLoop17221578 [label="ForLoop17221578  for (ii=iii; ii<=min(nx-1,iii+480); ii=ii+32) {...",shape=box];
	ForLoop17221578 -> 17215857;
	ForLoop17221578 -> _JOIN_17221578;
	_JOIN_17220687 [label="_JOIN_17220687None...",shape=box];
	_JOIN_17220687 -> _JOIN_17220690;
	17243183 [label="17243183  tmp[(i+12)]=scv_2;...",shape=box];
	ForLoop17218212 [label="ForLoop17218212  for (j=cbv_23; j<=cbv_24; j=j+1) {...",shape=box];
	ForLoop17218212 -> 17218211;
	ForLoop17218212 -> _JOIN_17218212;
	_JOIN_17217662 [label="_JOIN_17217662None...",shape=box];
	_JOIN_17217662 -> 17217694;
	ForLoop17221179 [label="ForLoop17221179  for (k=kk; k<=cbv_52; k=k+1) {...",shape=box];
	ForLoop17221179 -> 17236994;
	ForLoop17221179 -> _JOIN_17221179;
	_JOIN_17218682 [label="_JOIN_17218682None...",shape=box];
	_JOIN_17218682 -> 17257532;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 17171396;
	ForLoop17221502 [label="ForLoop17221502  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop17221502 -> ForLoop17221501;
	ForLoop17221502 -> _JOIN_17221502;
	ForLoop17217937 [label="ForLoop17217937  for (j=cbv_20; j<=cbv_21; j=j+1) {...",shape=box];
	ForLoop17217937 -> 17217936;
	ForLoop17217937 -> _JOIN_17217937;
	17220136 [label="17220136  scv_8=scv_8+A[(i+14)*ny+j]*x_copy[(j-jj)];...",shape=box];
	17220136 -> _JOIN_17220137;
	17216594 [label="17216594  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	17217419 [label="17217419  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	ForLoop17221427 [label="ForLoop17221427  for (j=jj; j<=cbv_53; j=j+4) {...",shape=box];
	ForLoop17221427 -> 17221344;
	ForLoop17221427 -> _JOIN_17221427;
	17258276 [label="17258276  register int cbv_38, cbv_39;...",shape=box];
	17259920 [label="17259920  register int cbv_56;...",shape=box];
	_JOIN_17221183 [label="_JOIN_17221183None...",shape=box];
	_JOIN_17221183 -> 17243183;
	ForLoop17221501 [label="ForLoop17221501  for (jj=jjj; jj<=min(ny-1,jjj+2032); jj=jj+16) {...",shape=box];
	ForLoop17221501 -> 17221300;
	ForLoop17221501 -> _JOIN_17221501;
	_JOIN_17218212 [label="_JOIN_17218212None...",shape=box];
	_JOIN_17218212 -> 17218244;
	17220222 [label="17220222  scv_11=scv_11+A[(i+15)*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop17221185 [label="ForLoop17221185  for (i=ii; i<=min(nx-1,ii+31)-16; i=i+17) {...",shape=box];
	ForLoop17221185 -> 17243165;
	ForLoop17221185 -> _JOIN_17221185;
	ForLoop17220057 [label="ForLoop17220057  for (j=jj; j<=cbv_43; j=j+4) {...",shape=box];
	ForLoop17220057 -> 17219947;
	ForLoop17220057 -> _JOIN_17220057;
	ForLoop17221183 [label="ForLoop17221183  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop17221183 -> ForLoop17221181;
	ForLoop17221183 -> _JOIN_17221183;
	ForLoop17221181 [label="ForLoop17221181  for (kk=kkk; kk<=min(ny-1,kkk+992); kk=kk+32) {...",shape=box];
	ForLoop17221181 -> 17259631;
	ForLoop17221181 -> _JOIN_17221181;
	_JOIN_17218132 [label="_JOIN_17218132None...",shape=box];
	_JOIN_17218132 -> 17257036;
	17245056 [label="17245056  tmp[i]=scv_20;...",shape=box];
	17245056 -> _JOIN_17221576;
	_JOIN_17220057 [label="_JOIN_17220057None...",shape=box];
	_JOIN_17220057 -> 17258772;
	17219122 [label="17219122  scv_15=scv_15+A[(i+11)*ny+j]*x_copy[(j-jj)];...",shape=box];
	17255796 [label="17255796  register int cbv_8, cbv_9;...",shape=box];
	17218022 [label="17218022  scv_9=scv_9+A[(i+7)*ny+j]*x_copy[(j-jj)];...",shape=box];
	17258772 [label="17258772  register int cbv_44, cbv_45;...",shape=box];
	_JOIN_17221185 [label="_JOIN_17221185None...",shape=box];
	_JOIN_17221185 -> ForLoop17221576;
	ForLoop17217662 [label="ForLoop17217662  for (j=cbv_17; j<=cbv_18; j=j+1) {...",shape=box];
	ForLoop17217662 -> 17217661;
	ForLoop17217662 -> _JOIN_17217662;
	ForLoop17218487 [label="ForLoop17218487  for (j=cbv_26; j<=cbv_27; j=j+1) {...",shape=box];
	ForLoop17218487 -> 17218486;
	ForLoop17218487 -> _JOIN_17218487;
	_JOIN_17220692 [label="_JOIN_17220692None...",shape=box];
	_JOIN_17220692 -> ForLoop17221183;
	_JOIN_17221502 [label="_JOIN_17221502None...",shape=box];
	_JOIN_17221502 -> ForLoop17221574;
	_JOIN_17221501 [label="_JOIN_17221501None...",shape=box];
	_JOIN_17221501 -> _JOIN_17221502;
	17257780 [label="17257780  register int cbv_32, cbv_33;...",shape=box];
	17219894 [label="17219894  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	17216319 [label="17216319  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	ForLoop17216757 [label="ForLoop17216757  for (j=jj; j<=cbv_7; j=j+4) {...",shape=box];
	ForLoop17216757 -> 17216647;
	ForLoop17216757 -> _JOIN_17216757;
	17219672 [label="17219672  scv_7=scv_7+A[(i+13)*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop17220607 [label="ForLoop17220607  for (j=jj; j<=cbv_49; j=j+4) {...",shape=box];
	ForLoop17220607 -> 17220497;
	ForLoop17220607 -> _JOIN_17220607;
	_JOIN_17221179 [label="_JOIN_17221179None...",shape=box];
	_JOIN_17221179 -> _JOIN_17221181;
	_JOIN_17219232 [label="_JOIN_17219232None...",shape=box];
	_JOIN_17219232 -> 17258028;
	_JOIN_17220607 [label="_JOIN_17220607None...",shape=box];
	_JOIN_17220607 -> 17259268;
	_JOIN_17217112 [label="_JOIN_17217112None...",shape=box];
	_JOIN_17217112 -> 17217144;
	ForLoop17220412 [label="ForLoop17220412  for (j=cbv_47; j<=cbv_48; j=j+1) {...",shape=box];
	ForLoop17220412 -> 17220411;
	ForLoop17220412 -> _JOIN_17220412;
	17217969 [label="17217969  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	17245044 [label="17245044  double scv_20;...",shape=box];
	17171979 [label="17171979  y[i]=0.0;...",shape=box];
	17171979 -> _JOIN_17171980;
	ForLoop17221498 [label="ForLoop17221498  for (j=cbv_54; j<=cbv_55; j=j+1) {...",shape=box];
	ForLoop17221498 -> 17221497;
	ForLoop17221498 -> _JOIN_17221498;
	_JOIN_17217857 [label="_JOIN_17217857None...",shape=box];
	_JOIN_17217857 -> 17256788;
	17219344 [label="17219344  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	ForLoop17218762 [label="ForLoop17218762  for (j=cbv_29; j<=cbv_30; j=j+1) {...",shape=box];
	ForLoop17218762 -> 17218761;
	ForLoop17218762 -> _JOIN_17218762;
	_JOIN_17217582 [label="_JOIN_17217582None...",shape=box];
	_JOIN_17217582 -> 17256540;
	17216133 [label="17216133  scv_6=scv_6+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	17221344 [label="17221344  scv_20=scv_20+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	17255548 [label="17255548  register int cbv_5, cbv_6;...",shape=box];
	17259020 [label="17259020  register int cbv_47, cbv_48;...",shape=box];
	17255300 [label="17255300  register int cbv_2, cbv_3;...",shape=box];
	_JOIN_17171980 [label="_JOIN_17171980None...",shape=box];
	_JOIN_17171980 -> 17215824;
	ForLoop17217112 [label="ForLoop17217112  for (j=cbv_11; j<=cbv_12; j=j+1) {...",shape=box];
	ForLoop17217112 -> 17217111;
	ForLoop17217112 -> _JOIN_17217112;
	17217472 [label="17217472  scv_13=scv_13+A[(i+5)*ny+j]*x_copy[(j-jj)];...",shape=box];
	17215824 [label="17215824  double x_copy[16];...",shape=box];
	17256292 [label="17256292  register int cbv_14, cbv_15;...",shape=box];
	17219619 [label="17219619  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	_JOIN_17216216 [label="_JOIN_17216216None...",shape=box];
	_JOIN_17216216 -> 17255300;
	_JOIN_17171911 [label="_JOIN_17171911None...",shape=box];
	_JOIN_17171911 -> 17172201;
	_JOIN_17220137 [label="_JOIN_17220137None...",shape=box];
	_JOIN_17220137 -> 17220169;
	17220497 [label="17220497  scv_12=scv_12+A[(i+16)*ny+j]*x_copy[(j-jj)];...",shape=box];
	17219069 [label="17219069  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	ForLoop17218407 [label="ForLoop17218407  for (j=jj; j<=cbv_25; j=j+4) {...",shape=box];
	ForLoop17218407 -> 17218297;
	ForLoop17218407 -> _JOIN_17218407;
	_JOIN_17219587 [label="_JOIN_17219587None...",shape=box];
	_JOIN_17219587 -> 17219619;
	17258028 [label="17258028  register int cbv_35, cbv_36;...",shape=box];
	ForLoop17216287 [label="ForLoop17216287  for (j=cbv_2; j<=cbv_3; j=j+1) {...",shape=box];
	ForLoop17216287 -> 17216286;
	ForLoop17216287 -> _JOIN_17216287;
	17216869 [label="17216869  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	17236994 [label="17236994  double scv_1;...",shape=box];
	17218211 [label="17218211  scv_9=scv_9+A[(i+7)*ny+j]*x_copy[(j-jj)];...",shape=box];
	17218211 -> _JOIN_17218212;
	17256044 [label="17256044  register int cbv_11, cbv_12;...",shape=box];
	_JOIN_17220332 [label="_JOIN_17220332None...",shape=box];
	_JOIN_17220332 -> 17259020;
	_JOIN_17219312 [label="_JOIN_17219312None...",shape=box];
	_JOIN_17219312 -> 17219344expected=9369846271501.798828
actual=9369846271501.798828
;
	_JOIN_17218957 [label="_JOIN_17218957None...",shape=box];
	_JOIN_17218957 -> 17257780;
	17218761 [label="17218761  scv_17=scv_17+A[(i+9)*ny+j]*x_copy[(j-jj)];...",shape=box];
	17218761 -> _JOIN_17218762;
	_JOIN_17219037 [label="_JOIN_17219037None...",shape=box];
	_JOIN_17219037 -> 17219069;
	_JOIN_17216287 [label="_JOIN_17216287None...",shape=box];
	_JOIN_17216287 -> 17216319;
	17216372 [label="17216372  scv_3=scv_3+A[(i+1)*ny+j]*x_copy[(j-jj)];...",shape=box];
	17220411 [label="17220411  scv_11=scv_11+A[(i+15)*ny+j]*x_copy[(j-jj)];...",shape=box];
	17220411 -> _JOIN_17220412;
	_JOIN_17220690 [label="_JOIN_17220690None...",shape=box];
	_JOIN_17220690 -> _JOIN_17220692;
	17218297 [label="17218297  scv_18=scv_18+A[(i+8)*ny+j]*x_copy[(j-jj)];...",shape=box];
	17218519 [label="17218519  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	17259268 [label="17259268  register int cbv_50, cbv_51;...",shape=box];
	17219586 [label="17219586  scv_2=scv_2+A[(i+12)*ny+j]*x_copy[(j-jj)];...",shape=box];
	17219586 -> _JOIN_17219587;
	_JOIN_17221574 [label="_JOIN_17221574None...",shape=box];
	_JOIN_17221574 -> 17245056;
	17257284 [label="17257284  register int cbv_26, cbv_27;...",shape=box];
	17219947 [label="17219947  scv_8=scv_8+A[(i+14)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_17216757 [label="_JOIN_17216757None...",shape=box];
	_JOIN_17216757 -> 17255796;
	17243165 [label="17243165  double scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8, scv_9;...",shape=box];

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest76.exe __orio_perftest76.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest76.exe  
{'[2, 1, 2, 4, 6, 5, 1, 0, 19, 16, 3, 0, 0, 0, 0, 1, 1, 1]' : 0.148731}
{'[2, 1, 2, 4, 6, 5, 1, 0, 19, 16, 3, 0, 0, 0, 0, 1, 1, 1]' : 0.147596}
{'[2, 1, 2, 4, 6, 5, 1, 0, 19, 16, 3, 0, 0, 0, 0, 1, 1, 1]' : 0.147551}
{'[2, 1, 2, 4, 6, 5, 1, 0, 19, 16, 3, 0, 0, 0, 0, 1, 1, 1]' : 0.147619}
{'[2, 1, 2, 4, 6, 5, 1, 0, 19, 16, 3, 0, 0, 0, 0, 1, 1, 1]' : 0.147629}
{'[2, 1, 2, 4, 6, 5, 1, 0, 19, 16, 3, 0, 0, 0, 0, 1, 1, 1]' : 0.147598}
{'[2, 1, 2, 4, 6, 5, 1, 0, 19, 16, 3, 0, 0, 0, 0, 1, 1, 1]' : 0.147583}
{'[2, 1, 2, 4, 6, 5, 1, 0, 19, 16, 3, 0, 0, 0, 0, 1, 1, 1]' : 0.148015}
{'[2, 1, 2, 4, 6, 5, 1, 0, 19, 16, 3, 0, 0, 0, 0, 1, 1, 1]' : 0.147639}
{'[2, 1, 2, 4, 6, 5, 1, 0, 19, 16, 3, 0, 0, 0, 0, 1, 1, 1]' : 0.147758}
{'[2, 1, 2, 4, 6, 5, 1, 0, 19, 16, 3, 0, 0, 0, 0, 1, 1, 1]' : 0.147578}
{'[2, 1, 2, 4, 6, 5, 1, 0, 19, 16, 3, 0, 0, 0, 0, 1, 1, 1]' : 0.147605}
{'[2, 1, 2, 4, 6, 5, 1, 0, 19, 16, 3, 0, 0, 0, 0, 1, 1, 1]' : 0.147581}
{'[2, 1, 2, 4, 6, 5, 1, 0, 19, 16, 3, 0, 0, 0, 0, 1, 1, 1]' : 0.148615}
{'[2, 1, 2, 4, 6, 5, 1, 0, 19, 16, 3, 0, 0, 0, 0, 1, 1, 1]' : 0.147767}
{'[2, 1, 2, 4, 6, 5, 1, 0, 19, 16, 3, 0, 0, 0, 0, 1, 1, 1]' : 0.147677}
{'[2, 1, 2, 4, 6, 5, 1, 0, 19, 16, 3, 0, 0, 0, 0, 1, 1, 1]' : 0.147544}
{'[2, 1, 2, 4, 6, 5, 1, 0, 19, 16, 3, 0, 0, 0, 0, 1, 1, 1]' : 0.147755}
{'[2, 1, 2, 4, 6, 5, 1, 0, 19, 16, 3, 0, 0, 0, 0, 1, 1, 1]' : 0.147672}
{'[2, 1, 2, 4, 6, 5, 1, 0, 19, 16, 3, 0, 0, 0, 0, 1, 1, 1]' : 0.147586}
{'[2, 1, 2, 4, 6, 5, 1, 0, 19, 16, 3, 0, 0, 0, 0, 1, 1, 1]' : 0.147726}
{'[2, 1, 2, 4, 6, 5, 1, 0, 19, 16, 3, 0, 0, 0, 0, 1, 1, 1]' : 0.147699}
{'[2, 1, 2, 4, 6, 5, 1, 0, 19, 16, 3, 0, 0, 0, 0, 1, 1, 1]' : 0.147589}
{'[2, 1, 2, 4, 6, 5, 1, 0, 19, 16, 3, 0, 0, 0, 0, 1, 1, 1]' : 0.147551}
{'[2, 1, 2, 4, 6, 5, 1, 0, 19, 16, 3, 0, 0, 0, 0, 1, 1, 1]' : 0.147573}
{'[2, 1, 2, 4, 6, 5, 1, 0, 19, 16, 3, 0, 0, 0, 0, 1, 1, 1]' : 0.147563}
{'[2, 1, 2, 4, 6, 5, 1, 0, 19, 16, 3, 0, 0, 0, 0, 1, 1, 1]' : 0.147611}
{'[2, 1, 2, 4, 6, 5, 1, 0, 19, 16, 3, 0, 0, 0, 0, 1, 1, 1]' : 0.148838}
{'[2, 1, 2, 4, 6, 5, 1, 0, 19, 16, 3, 0, 0, 0, 0, 1, 1, 1]' : 0.147691}
{'[2, 1, 2, 4, 6, 5, 1, 0, 19, 16, 3, 0, 0, 0, 0, 1, 1, 1]' : 0.147764}

out:
 ["{'[2, 1, 2, 4, 6, 5, 1, 0, 19, 16, 3, 0, 0, 0, 0, 1, 1, 1]' : 0.148731}", "{'[2, 1, 2, 4, 6, 5, 1, 0, 19, 16, 3, 0, 0, 0, 0, 1, 1, 1]' : 0.147596}", "{'[2, 1, 2, 4, 6, 5, 1, 0, 19, 16, 3, 0, 0, 0, 0, 1, 1, 1]' : 0.147551}", "{'[2, 1, 2, 4, 6, 5, 1, 0, 19, 16, 3, 0, 0, 0, 0, 1, 1, 1]' : 0.147619}", "{'[2, 1, 2, 4, 6, 5, 1, 0, 19, 16, 3, 0, 0, 0, 0, 1, 1, 1]' : 0.147629}", "{'[2, 1, 2, 4, 6, 5, 1, 0, 19, 16, 3, 0, 0, 0, 0, 1, 1, 1]' : 0.147598}", "{'[2, 1, 2, 4, 6, 5, 1, 0, 19, 16, 3, 0, 0, 0, 0, 1, 1, 1]' : 0.147583}", "{'[2, 1, 2, 4, 6, 5, 1, 0, 19, 16, 3, 0, 0, 0, 0, 1, 1, 1]' : 0.148015}", "{'[2, 1, 2, 4, 6, 5, 1, 0, 19, 16, 3, 0, 0, 0, 0, 1, 1, 1]' : 0.147639}", "{'[2, 1, 2, 4, 6, 5, 1, 0, 19, 16, 3, 0, 0, 0, 0, 1, 1, 1]' : 0.147758}", "{'[2, 1, 2, 4, 6, 5, 1, 0, 19, 16, 3, 0, 0, 0, 0, 1, 1, 1]' : 0.147578}", "{'[2, 1, 2, 4, 6, 5, 1, 0, 19, 16, 3, 0, 0, 0, 0, 1, 1, 1]' : 0.147605}", "{'[2, 1, 2, 4, 6, 5, 1, 0, 19, 16, 3, 0, 0, 0, 0, 1, 1, 1]' : 0.147581}", "{'[2, 1, 2, 4, 6, 5, 1, 0, 19, 16, 3, 0, 0, 0, 0, 1, 1, 1]' : 0.148615}", "{'[2, 1, 2, 4, 6, 5, 1, 0, 19, 16, 3, 0, 0, 0, 0, 1, 1, 1]' : 0.147767}", "{'[2, 1, 2, 4, 6, 5, 1, 0, 19, 16, 3, 0, 0, 0, 0, 1, 1, 1]' : 0.147677}", "{'[2, 1, 2, 4, 6, 5, 1, 0, 19, 16, 3, 0, 0, 0, 0, 1, 1, 1]' : 0.147544}", "{'[2, 1, 2, 4, 6, 5, 1, 0, 19, 16, 3, 0, 0, 0, 0, 1, 1, 1]' : 0.147755}", "{'[2, 1, 2, 4, 6, 5, 1, 0, 19, 16, 3, 0, 0, 0, 0, 1, 1, 1]' : 0.147672}", "{'[2, 1, 2, 4, 6, 5, 1, 0, 19, 16, 3, 0, 0, 0, 0, 1, 1, 1]' : 0.147586}", "{'[2, 1, 2, 4, 6, 5, 1, 0, 19, 16, 3, 0, 0, 0, 0, 1, 1, 1]' : 0.147726}", "{'[2, 1, 2, 4, 6, 5, 1, 0, 19, 16, 3, 0, 0, 0, 0, 1, 1, 1]' : 0.147699}", "{'[2, 1, 2, 4, 6, 5, 1, 0, 19, 16, 3, 0, 0, 0, 0, 1, 1, 1]' : 0.147589}", "{'[2, 1, 2, 4, 6, 5, 1, 0, 19, 16, 3, 0, 0, 0, 0, 1, 1, 1]' : 0.147551}", "{'[2, 1, 2, 4, 6, 5, 1, 0, 19, 16, 3, 0, 0, 0, 0, 1, 1, 1]' : 0.147573}", "{'[2, 1, 2, 4, 6, 5, 1, 0, 19, 16, 3, 0, 0, 0, 0, 1, 1, 1]' : 0.147563}", "{'[2, 1, 2, 4, 6, 5, 1, 0, 19, 16, 3, 0, 0, 0, 0, 1, 1, 1]' : 0.147611}", "{'[2, 1, 2, 4, 6, 5, 1, 0, 19, 16, 3, 0, 0, 0, 0, 1, 1, 1]' : 0.148838}", "{'[2, 1, 2, 4, 6, 5, 1, 0, 19, 16, 3, 0, 0, 0, 0, 1, 1, 1]' : 0.147691}", "{'[2, 1, 2, 4, 6, 5, 1, 0, 19, 16, 3, 0, 0, 0, 0, 1, 1, 1]' : 0.147764}"]
returning from 'run': {'[2, 1, 2, 4, 6, 5, 1, 0, 19, 16, 3, 0, 0, 0, 0, 1, 1, 1]': ([0.148731, 0.147596, 0.147551, 0.147619, 0.147629, 0.147598, 0.147583, 0.148015, 0.147639, 0.147758, 0.147578, 0.147605, 0.147581, 0.148615, 0.147767, 0.147677, 0.147544, 0.147755, 0.147672, 0.147586, 0.147726, 0.147699, 0.147589, 0.147551, 0.147573, 0.147563, 0.147611, 0.148838, 0.147691, 0.147764], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.148731, 0.147596, 0.147551, 0.147619, 0.147629, 0.147598, 0.147583, 0.148015, 0.147639, 0.147758, 0.147578, 0.147605, 0.147581, 0.148615, 0.147767, 0.147677, 0.147544, 0.147755, 0.147672, 0.147586, 0.147726, 0.147699, 0.147589, 0.147551, 0.147573, 0.147563, 0.147611, 0.148838, 0.147691, 0.147764], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[2, 1, 2, 4, 6, 5, 1, 0, 19, 16, 3, 0, 0, 0, 0, 1, 1, 1]': ([0.148731, 0.147596, 0.147551, 0.147619, 0.147629, 0.147598, 0.147583, 0.148015, 0.147639, 0.147758, 0.147578, 0.147605, 0.147581, 0.148615, 0.147767, 0.147677, 0.147544, 0.147755, 0.147672, 0.147586, 0.147726, 0.147699, 0.147589, 0.147551, 0.147573, 0.147563, 0.147611, 0.148838, 0.147691, 0.147764], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [0, 3, 1, 6, 0, 0, 5, 11, 26, 0, 0, 0, 0, 0]
Fixed Factors: {'T2_K': 5, 'T2_J': 6, 'SCR': 1, 'VEC1': 1}
Testing candidate 6: [0, 3, 1, 6, 6, 5, 0, 0, 5, 11, 26, 0, 0, 0, 0, 1, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	5
        Additions: 		1573
        Multiplications: 	754
        Divisions: 		0
        Logical: 		0
        Reads: 			3007
        Writes: 		496
        Comparisons:		19
        Gotos: 			0
        
digraph CFG {
	17382757 [label="17382757  tmp[(i+1)]=scv_30;...",shape=box];
	ForLoop17335858 [label="ForLoop17335858  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop17335858 -> ForLoop17335857;
	ForLoop17335858 -> _JOIN_17335858;
	_JOIN_17334643 [label="_JOIN_17334643None...",shape=box];
	_JOIN_17334643 -> _JOIN_17334645;
	_JOIN_17334645 [label="_JOIN_17334645None...",shape=box];
	_JOIN_17334645 -> _JOIN_17334647;
	_JOIN_17334647 [label="_JOIN_17334647None...",shape=box];
	_JOIN_17334647 -> ForLoop17335008;
	17382739 [label="17382739  double scv_30, scv_31, scv_32, scv_33, scv_34, scv_35, scv_36, scv_37;...",shape=box];
	ForLoop17335934 [label="ForLoop17335934  for (iii=0; iii<=nx-1; iii=iii+2048) {...",shape=box];
	ForLoop17335934 -> 17323352;
	ForLoop17335934 -> _JOIN_17335934;
	ForLoop17334647 [label="ForLoop17334647  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop17334647 -> ForLoop17334645;
	ForLoop17334647 -> _JOIN_17334647;
	ForLoop17335857 [label="ForLoop17335857  for (jj=jjj; jj<=min(ny-1,jjj+1984); jj=jj+64) {...",shape=box];
	ForLoop17335857 -> 17335095;
	ForLoop17335857 -> _JOIN_17335857;
	ForLoop17334643 [label="ForLoop17334643  for (j=(min(ny-1,jj+63))-(((min(ny-1,jj+63))-(jj)+1)%27)+1; j<=min(ny-1,jj+63); j=j+1) {...",shape=box];
	ForLoop17334643 -> 17351769;
	ForLoop17334643 -> _JOIN_17334643;
	17335854 [label="17335854  scv_43=scv_43+A[i*ny+j]*x[j];...",shape=box];
	17335854 -> _JOIN_17335855;
	17260461 [label="17260461  y[i]=0.0;...",shape=box];
	17386421 [label="17386421  double scv_42;...",shape=box];
	_JOIN_17335858 [label="_JOIN_17335858None...",shape=box];
	_JOIN_17335858 -> ForLoop17335930;
	_JOIN_17335934 [label="_JOIN_17335934None...",shape=box];
	_JOIN_17335857 [label="_JOIN_17335857None...",shape=box];
	_JOIN_17335857 -> _JOIN_17335858;
	_JOIN_17335855 [label="_JOIN_17335855None...",shape=box];
	_JOIN_17335855 -> _JOIN_17335857;
	17371822 [label="17371822  double scv_29;...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 17260329;
	_JOIN_17335932 [label="_JOIN_17335932None...",shape=box];
	_JOIN_17335932 -> _JOIN_17335934;
	17323509 [label="17323509  int j;...",shape=box];
	17351769 [label="17351769  double scv_28;...",shape=box];
	_JOIN_17335010 [label="_JOIN_17335010None...",shape=box];
	_JOIN_17335010 -> ForLoop17335932;
	ForLoop17335010 [label="ForLoop17335010  for (i=iii; i<=min(nx-1,iii+2047)-11; i=i+12) {...",shape=box];
	ForLoop17335010 -> 17382739;
	ForLoop17335010 -> _JOIN_17335010;
	_JOIN_17335930 [label="_JOIN_17335930None...",shape=box];
	_JOIN_17335930 -> 17387515;
	17323352 [label="17323352  int i;...",shape=box];
	17323352 -> ForLoop17335010;
	ForLoop17334645 [label="ForLoop17334645  for (jj=jjj; jj<=min(ny-1,jjj+1984); jj=jj+64) {...",shape=box];
	ForLoop17334645 -> 17323509;
	ForLoop17334645 -> _JOIN_17334645;
	ForLoop17260577 [label="ForLoop17260577  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop17260577 -> 17260576;
	ForLoop17260577 -> _JOIN_17260577;
	ForLoop17335928 [label="ForLoop17335928  for (k=kk; k<=min(ny-1,kk+15); k=k+1) {...",shape=box];
	ForLoop17335928 -> 17386421;
	ForLoop17335928 -> _JOIN_17335928;
	17350674 [label="17350674  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	17323337 [label="17323337  double x_copy;...",shape=box];
	17260329 [label="17260329  int i;...",shape=box];
	_JOIN_17260508 [label="_JOIN_17260508None...",shape=box];
	_JOIN_17260508 -> 17260672;
	ForLoop17335930 [label="ForLoop17335930  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop17335930 -> ForLoop17335929;
	ForLoop17335930 -> _JOIN_17335930;
	ForLoop17335787 [label="ForLoop17335787  for (j=jj; j<=min(ny-1,jj+63)-26; j=j+27) {...",shape=box];
	ForLoop17335787 -> 17335135;
	ForLoop17335787 -> _JOIN_17335787;
	17387515 [label="17387515  tmp[i]=scv_43;...",shape=box];
	17387515 -> _JOIN_17335932;
	_JOIN_17335928 [label="_JOIN_17335928None...",shape=box];
	_JOIN_17335928 -> _JOIN_17335929;
	_JOIN_17335929 [label="_JOIN_17335929None...",shape=box];
	_JOIN_17335929 -> _JOIN_17335930;
	ForLoop17335855 [label="ForLoop17335855  for (j=(mexpected=9369846271501.798828
actual=9369846271501.798828
in(ny-1,jj+63))-(((min(ny-1,jj+63))-(jj)+1)%27)+1; j<=min(ny-1,jj+63); j=j+1) {...",shape=box];
	ForLoop17335855 -> 17335854;
	ForLoop17335855 -> _JOIN_17335855;
	_JOIN_17335787 [label="_JOIN_17335787None...",shape=box];
	_JOIN_17335787 -> ForLoop17335855;
	17260576 [label="17260576  y[i]=0.0;...",shape=box];
	17260576 -> _JOIN_17260577;
	ForLoop17335932 [label="ForLoop17335932  for (i=(min(nx-1,iii+2047))-(((min(nx-1,iii+2047))-(iii)+1)%12)+1; i<=min(nx-1,iii+2047); i=i+1) {...",shape=box];
	ForLoop17335932 -> 17387503;
	ForLoop17335932 -> _JOIN_17335932;
	17260672 [label="17260672  register int cbv_2, cbv_3;...",shape=box];
	ForLoop17335929 [label="ForLoop17335929  for (kk=kkk; kk<=min(ny-1,kkk+1008); kk=kk+16) {...",shape=box];
	ForLoop17335929 -> ForLoop17335928;
	ForLoop17335929 -> _JOIN_17335929;
	ForLoop17260508 [label="ForLoop17260508  for (i=0; i<=cbv_1; i=i+6) {...",shape=box];
	ForLoop17260508 -> 17260461;
	ForLoop17260508 -> _JOIN_17260508;
	_JOIN_17334255 [label="_JOIN_17334255None...",shape=box];
	_JOIN_17334255 -> ForLoop17334643;
	17335095 [label="17335095  int j;...",shape=box];
	17335095 -> ForLoop17335787;
	_JOIN_17335004 [label="_JOIN_17335004None...",shape=box];
	_JOIN_17335004 -> _JOIN_17335006;
	17387503 [label="17387503  double scv_43;...",shape=box];
	_JOIN_17335006 [label="_JOIN_17335006None...",shape=box];
	_JOIN_17335006 -> _JOIN_17335008;
	_JOIN_17335008 [label="_JOIN_17335008None...",shape=box];
	_JOIN_17335008 -> 17382757;
	_JOIN_17260577 [label="_JOIN_17260577None...",shape=box];
	_JOIN_17260577 -> 17323337;
	ForLoop17335004 [label="ForLoop17335004  for (k=kk; k<=min(ny-1,kk+15); k=k+1) {...",shape=box];
	ForLoop17335004 -> 17371822;
	ForLoop17335004 -> _JOIN_17335004;
	ForLoop17335006 [label="ForLoop17335006  for (kk=kkk; kk<=min(ny-1,kkk+1008); kk=kk+16) {...",shape=box];
	ForLoop17335006 -> ForLoop17335004;
	ForLoop17335006 -> _JOIN_17335006;
	17335135 [label="17335135  scv_43=scv_43+A[i*ny+j]*x[j];...",shape=box];
	ForLoop17335008 [label="ForLoop17335008  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop17335008 -> ForLoop17335006;
	ForLoop17335008 -> _JOIN_17335008;
	ForLoop17334255 [label="ForLoop17334255  for (j=jj; j<=min(ny-1,jj+63)-26; j=j+27) {...",shape=box];
	ForLoop17334255 -> 17350674;
	ForLoop17334255 -> _JOIN_17334255;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest77.exe __orio_perftest77.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest77.exe  
{'[0, 3, 1, 6, 6, 5, 0, 0, 5, 11, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.0941389}
{'[0, 3, 1, 6, 6, 5, 0, 0, 5, 11, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.093734}
{'[0, 3, 1, 6, 6, 5, 0, 0, 5, 11, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.0937109}
{'[0, 3, 1, 6, 6, 5, 0, 0, 5, 11, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.093786}
{'[0, 3, 1, 6, 6, 5, 0, 0, 5, 11, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.0937262}
{'[0, 3, 1, 6, 6, 5, 0, 0, 5, 11, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.093755}
{'[0, 3, 1, 6, 6, 5, 0, 0, 5, 11, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.0937421}
{'[0, 3, 1, 6, 6, 5, 0, 0, 5, 11, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.094717}
{'[0, 3, 1, 6, 6, 5, 0, 0, 5, 11, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.0937068}
{'[0, 3, 1, 6, 6, 5, 0, 0, 5, 11, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.09373}
{'[0, 3, 1, 6, 6, 5, 0, 0, 5, 11, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.0937371}
{'[0, 3, 1, 6, 6, 5, 0, 0, 5, 11, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.0937769}
{'[0, 3, 1, 6, 6, 5, 0, 0, 5, 11, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.0937421}
{'[0, 3, 1, 6, 6, 5, 0, 0, 5, 11, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.0940342}
{'[0, 3, 1, 6, 6, 5, 0, 0, 5, 11, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.0937669}
{'[0, 3, 1, 6, 6, 5, 0, 0, 5, 11, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.0937281}
{'[0, 3, 1, 6, 6, 5, 0, 0, 5, 11, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.0938139}
{'[0, 3, 1, 6, 6, 5, 0, 0, 5, 11, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.0937822}
{'[0, 3, 1, 6, 6, 5, 0, 0, 5, 11, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.0936952}
{'[0, 3, 1, 6, 6, 5, 0, 0, 5, 11, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.0936408}
{'[0, 3, 1, 6, 6, 5, 0, 0, 5, 11, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.09376}
{'[0, 3, 1, 6, 6, 5, 0, 0, 5, 11, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.093713}
{'[0, 3, 1, 6, 6, 5, 0, 0, 5, 11, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.093678}
{'[0, 3, 1, 6, 6, 5, 0, 0, 5, 11, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.093745}
{'[0, 3, 1, 6, 6, 5, 0, 0, 5, 11, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.093689}
{'[0, 3, 1, 6, 6, 5, 0, 0, 5, 11, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.093816}
{'[0, 3, 1, 6, 6, 5, 0, 0, 5, 11, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.093708}
{'[0, 3, 1, 6, 6, 5, 0, 0, 5, 11, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.0937898}
{'[0, 3, 1, 6, 6, 5, 0, 0, 5, 11, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.0948911}
{'[0, 3, 1, 6, 6, 5, 0, 0, 5, 11, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.094084}

out:
 ["{'[0, 3, 1, 6, 6, 5, 0, 0, 5, 11, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.0941389}", "{'[0, 3, 1, 6, 6, 5, 0, 0, 5, 11, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.093734}", "{'[0, 3, 1, 6, 6, 5, 0, 0, 5, 11, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.0937109}", "{'[0, 3, 1, 6, 6, 5, 0, 0, 5, 11, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.093786}", "{'[0, 3, 1, 6, 6, 5, 0, 0, 5, 11, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.0937262}", "{'[0, 3, 1, 6, 6, 5, 0, 0, 5, 11, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.093755}", "{'[0, 3, 1, 6, 6, 5, 0, 0, 5, 11, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.0937421}", "{'[0, 3, 1, 6, 6, 5, 0, 0, 5, 11, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.094717}", "{'[0, 3, 1, 6, 6, 5, 0, 0, 5, 11, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.0937068}", "{'[0, 3, 1, 6, 6, 5, 0, 0, 5, 11, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.09373}", "{'[0, 3, 1, 6, 6, 5, 0, 0, 5, 11, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.0937371}", "{'[0, 3, 1, 6, 6, 5, 0, 0, 5, 11, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.0937769}", "{'[0, 3, 1, 6, 6, 5, 0, 0, 5, 11, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.0937421}", "{'[0, 3, 1, 6, 6, 5, 0, 0, 5, 11, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.0940342}", "{'[0, 3, 1, 6, 6, 5, 0, 0, 5, 11, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.0937669}", "{'[0, 3, 1, 6, 6, 5, 0, 0, 5, 11, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.0937281}", "{'[0, 3, 1, 6, 6, 5, 0, 0, 5, 11, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.0938139}", "{'[0, 3, 1, 6, 6, 5, 0, 0, 5, 11, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.0937822}", "{'[0, 3, 1, 6, 6, 5, 0, 0, 5, 11, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.0936952}", "{'[0, 3, 1, 6, 6, 5, 0, 0, 5, 11, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.0936408}", "{'[0, 3, 1, 6, 6, 5, 0, 0, 5, 11, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.09376}", "{'[0, 3, 1, 6, 6, 5, 0, 0, 5, 11, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.093713}", "{'[0, 3, 1, 6, 6, 5, 0, 0, 5, 11, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.093678}", "{'[0, 3, 1, 6, 6, 5, 0, 0, 5, 11, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.093745}", "{'[0, 3, 1, 6, 6, 5, 0, 0, 5, 11, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.093689}", "{'[0, 3, 1, 6, 6, 5, 0, 0, 5, 11, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.093816}", "{'[0, 3, 1, 6, 6, 5, 0, 0, 5, 11, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.093708}", "{'[0, 3, 1, 6, 6, 5, 0, 0, 5, 11, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.0937898}", "{'[0, 3, 1, 6, 6, 5, 0, 0, 5, 11, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.0948911}", "{'[0, 3, 1, 6, 6, 5, 0, 0, 5, 11, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.094084}"]
returning from 'run': {'[0, 3, 1, 6, 6, 5, 0, 0, 5, 11, 26, 0, 0, 0, 0, 1, 1, 0]': ([0.0941389, 0.093734, 0.0937109, 0.093786, 0.0937262, 0.093755, 0.0937421, 0.094717, 0.0937068, 0.09373, 0.0937371, 0.0937769, 0.0937421, 0.0940342, 0.0937669, 0.0937281, 0.0938139, 0.0937822, 0.0936952, 0.0936408, 0.09376, 0.093713, 0.093678, 0.093745, 0.093689, 0.093816, 0.093708, 0.0937898, 0.0948911, 0.094084], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.0941389, 0.093734, 0.0937109, 0.093786, 0.0937262, 0.093755, 0.0937421, 0.094717, 0.0937068, 0.09373, 0.0937371, 0.0937769, 0.0937421, 0.0940342, 0.0937669, 0.0937281, 0.0938139, 0.0937822, 0.0936952, 0.0936408, 0.09376, 0.093713, 0.093678, 0.093745, 0.093689, 0.093816, 0.093708, 0.0937898, 0.0948911, 0.094084], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[0, 3, 1, 6, 6, 5, 0, 0, 5, 11, 26, 0, 0, 0, 0, 1, 1, 0]': ([0.0941389, 0.093734, 0.0937109, 0.093786, 0.0937262, 0.093755, 0.0937421, 0.094717, 0.0937068, 0.09373, 0.0937371, 0.0937769, 0.0937421, 0.0940342, 0.0937669, 0.0937281, 0.0938139, 0.0937822, 0.0936952, 0.0936408, 0.09376, 0.093713, 0.093678, 0.093745, 0.093689, 0.093816, 0.093708, 0.0937898, 0.0948911, 0.094084], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [1, 4, 4, 0, 1, 0, 3, 11, 16, 0, 0, 2, 0, 0]
Fixed Factors: {'T2_K': 5, 'T2_J': 6, 'SCR': 1, 'VEC1': 1}
Testing candidate 7: [1, 4, 4, 0, 6, 5, 1, 0, 3, 11, 16, 0, 0, 2, 0, 1, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	30
        Max loop nest depth: 	5
        Additions: 		1886
        Multiplications: 	858
        Divisions: 		0
        Logical: 		0
        Reads: 			3581
        Writes: 		585
        Comparisons:		30
        Gotos: 			0
        
digraph CFG {
	17557933 [label="17557933  tmp[(i+1)]=scv_34;...",shape=box];
	17545204 [label="17545204  double scv_33;...",shape=box];
	17486940 [label="17486940  double x_copy[128];...",shape=box];
	ForLoop17500995 [label="ForLoop17500995  for (jj=jjj; jj<=min(ny-1,jjj+1920); jj=jj+128) {...",shape=box];
	ForLoop17500995 -> 17487142;
	ForLoop17500995 -> _JOIN_17500995;
	_JOIN_17501360 [label="_JOIN_17501360None...",shape=box];
	_JOIN_17501360 -> ForLoop17502496;
	ForLoop17500997 [label="ForLoop17500997  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop17500997 -> ForLoop17500995;
	ForLoop17500997 -> _JOIN_17500997;
	_JOIN_17502498 [label="_JOIN_17502498None...",shape=box];
	ForLoop17500993 [label="ForLoop17500993  for (jt=jj; jt<=min(ny-1,jj+127)-31; jt=jt+32) {...",shape=box];
	ForLoop17500993 -> 17520813;
	ForLoop17500993 -> _JOIN_17500993;
	ForLoop17502498 [label="ForLoop17502498  for (ii=0; ii<=nx-1; ii=ii+16) {...",shape=box];
	ForLoop17502498 -> 17486955;
	ForLoop17502498 -> _JOIN_17502498;
	ForLoop17502496 [label="ForLoop17502496  for (i=(min(nx-1,ii+15))-(((min(nx-1,ii+15))-(ii)+1)%12)+1; i<=min(nx-1,ii+15); i=i+1) {...",shape=box];
	ForLoop17502496 -> 17563797;
	ForLoop17502496 -> _JOIN_17502496;
	17557915 [label="17557915  double scv_34, scv_35, scv_36, scv_37, scv_38, scv_39, scv_40, scv_41;...",shape=box];
	ForLoop17502494 [label="ForLoop17502494  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop17502494 -> ForLoop17502493;
	ForLoop17502494 -> _JOIN_17502494;
	ForLoop17502492 [label="ForLoop17502492  for (k=kk; k<=min(ny-1,kk+127); k=k+1) {...",shape=box];
	ForLoop17502492 -> 17562502;
	ForLoop17502492 -> _JOIN_17502492;
	_JOIN_17502422 [label="_JOIN_17502422None...",shape=box];
	_JOIN_17502422 -> ForLoop17502494;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 17395815;
	17563797 [label="17563797  double scv_47;...",shape=box];
	_JOIN_17502492 [label="_JOIN_17502492None...",shape=box];
	_JOIN_17502492 -> _JOIN_17502493;
	ForLoop17502493 [label="ForLoop17502493  for (kk=kkk; kk<=min(ny-1,kkk+896); kk=kk+128) {...",shape=box];
	ForLoop17502493 -> ForLoop17502492;
	ForLoop17502493 -> _JOIN_17502493;
	ForLoop17501358 [label="ForLoop17501358  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop17501358 -> ForLoop17501356;
	ForLoop17501358 -> _JOIN_17501358;
	_JOIN_17502421 [label="_JOIN_17502421None...",shape=box];
	_JOIN_17502421 -> _JOIN_17502422;
	ForLoop17501354 [label="ForLoop17501354  for (k=kk; k<=min(ny-1,kk+127); k=k+1) {...",shape=box];
	ForLoop17501354 -> 17545204;
	ForLoop17501354 -> _JOIN_17501354;
	ForLoop17501356 [label="ForLoop17501356  for (kk=kkk; kk<=min(ny-1,kkk+896); kk=kk+128) {...",shape=box];
	ForLoop17501356 -> ForLoop17501354;
	ForLoop17501356 -> _JOIN_17501356;
	17501475 [label="17501475  for (j=jj; j<=min(ny-1,jj+127); j=j+1) ...",shape=box];
	17501475 -> ForLoop17502419;
	ForLoop17502419 [label="ForLoop17502419  for (jt=jj; jt<=min(ny-1,jj+127)-31; jt=jt+32) {...",shape=box];
	ForLoop17502419 -> 17501518;
	ForLoop17502419 -> _JOIN_17502419;
	_JOIN_17501354 [label="_JOIN_17501354None...",shape=box];
	_JOIN_17501354 -> _JOIN_17501356;
	17486955 [label="17486955  int i;...",shape=box];
	17486955 -expected=0.000000
actual=9369846271501.798828
> ForLoop17501360;
	_JOIN_17501356 [label="_JOIN_17501356None...",shape=box];
	_JOIN_17501356 -> _JOIN_17501358;
	17395815 [label="17395815  int i;...",shape=box];
	_JOIN_17501358 [label="_JOIN_17501358None...",shape=box];
	_JOIN_17501358 -> 17557933;
	17395917 [label="17395917  y[i]=0.0;...",shape=box];
	_JOIN_17395946 [label="_JOIN_17395946None...",shape=box];
	_JOIN_17395946 -> 17396092;
	17487142 [label="17487142  for (j=jj; j<=min(ny-1,jj+127); j=j+1) ...",shape=box];
	17396014 [label="17396014  y[i]=0.0;...",shape=box];
	17396014 -> _JOIN_17396015;
	_JOIN_17502493 [label="_JOIN_17502493None...",shape=box];
	_JOIN_17502493 -> _JOIN_17502494;
	_JOIN_17396015 [label="_JOIN_17396015None...",shape=box];
	_JOIN_17396015 -> 17486940;
	17501518 [label="17501518  scv_47=scv_47+A[i*ny+jt]*x_copy[(jt-jj)];...",shape=box];
	17520813 [label="17520813  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	ForLoop17395946 [label="ForLoop17395946  for (i=0; i<=cbv_1; i=i+4) {...",shape=box];
	ForLoop17395946 -> 17395917;
	ForLoop17395946 -> _JOIN_17395946;
	17562502 [label="17562502  double scv_46;...",shape=box];
	_JOIN_17502419 [label="_JOIN_17502419None...",shape=box];
	_JOIN_17502419 -> _JOIN_17502421;
	_JOIN_17500993 [label="_JOIN_17500993None...",shape=box];
	_JOIN_17500993 -> _JOIN_17500995;
	17396092 [label="17396092  register int cbv_2, cbv_3;...",shape=box];
	_JOIN_17500995 [label="_JOIN_17500995None...",shape=box];
	_JOIN_17500995 -> _JOIN_17500997;
	17563809 [label="17563809  tmp[i]=scv_47;...",shape=box];
	17563809 -> _JOIN_17502496;
	_JOIN_17500997 [label="_JOIN_17500997None...",shape=box];
	_JOIN_17500997 -> ForLoop17501358;
	_JOIN_17502496 [label="_JOIN_17502496None...",shape=box];
	_JOIN_17502496 -> _JOIN_17502498;
	ForLoop17501360 [label="ForLoop17501360  for (i=ii; i<=min(nx-1,ii+15)-11; i=i+12) {...",shape=box];
	ForLoop17501360 -> 17557915;
	ForLoop17501360 -> _JOIN_17501360;
	_JOIN_17502494 [label="_JOIN_17502494None...",shape=box];
	_JOIN_17502494 -> 17563809;
	ForLoop17396015 [label="ForLoop17396015  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop17396015 -> 17396014;
	ForLoop17396015 -> _JOIN_17396015;
	ForLoop17502422 [label="ForLoop17502422  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop17502422 -> ForLoop17502421;
	ForLoop17502422 -> _JOIN_17502422;
	ForLoop17502421 [label="ForLoop17502421  for (jj=jjj; jj<=min(ny-1,jjj+1920); jj=jj+128) {...",shape=box];
	ForLoop17502421 -> 17501475;
	ForLoop17502421 -> _JOIN_17502421;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest78.exe __orio_perftest78.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest78.exe  
{'[1, 4, 4, 0, 6, 5, 1, 0, 3, 11, 16, 0, 0, 2, 0, 1, 1, 0]' : 0.12654}
{'[1, 4, 4, 0, 6, 5, 1, 0, 3, 11, 16, 0, 0, 2, 0, 1, 1, 0]' : 0.126546}
{'[1, 4, 4, 0, 6, 5, 1, 0, 3, 11, 16, 0, 0, 2, 0, 1, 1, 0]' : 0.126471}
{'[1, 4, 4, 0, 6, 5, 1, 0, 3, 11, 16, 0, 0, 2, 0, 1, 1, 0]' : 0.126349}
{'[1, 4, 4, 0, 6, 5, 1, 0, 3, 11, 16, 0, 0, 2, 0, 1, 1, 0]' : 0.126304}
{'[1, 4, 4, 0, 6, 5, 1, 0, 3, 11, 16, 0, 0, 2, 0, 1, 1, 0]' : 0.126363}
{'[1, 4, 4, 0, 6, 5, 1, 0, 3, 11, 16, 0, 0, 2, 0, 1, 1, 0]' : 0.126339}
{'[1, 4, 4, 0, 6, 5, 1, 0, 3, 11, 16, 0, 0, 2, 0, 1, 1, 0]' : 0.127362}
{'[1, 4, 4, 0, 6, 5, 1, 0, 3, 11, 16, 0, 0, 2, 0, 1, 1, 0]' : 0.126349}
{'[1, 4, 4, 0, 6, 5, 1, 0, 3, 11, 16, 0, 0, 2, 0, 1, 1, 0]' : 0.126298}
{'[1, 4, 4, 0, 6, 5, 1, 0, 3, 11, 16, 0, 0, 2, 0, 1, 1, 0]' : 0.126326}
{'[1, 4, 4, 0, 6, 5, 1, 0, 3, 11, 16, 0, 0, 2, 0, 1, 1, 0]' : 0.126329}
{'[1, 4, 4, 0, 6, 5, 1, 0, 3, 11, 16, 0, 0, 2, 0, 1, 1, 0]' : 0.126401}
{'[1, 4, 4, 0, 6, 5, 1, 0, 3, 11, 16, 0, 0, 2, 0, 1, 1, 0]' : 0.126456}
{'[1, 4, 4, 0, 6, 5, 1, 0, 3, 11, 16, 0, 0, 2, 0, 1, 1, 0]' : 0.126365}
{'[1, 4, 4, 0, 6, 5, 1, 0, 3, 11, 16, 0, 0, 2, 0, 1, 1, 0]' : 0.126423}
{'[1, 4, 4, 0, 6, 5, 1, 0, 3, 11, 16, 0, 0, 2, 0, 1, 1, 0]' : 0.126355}
{'[1, 4, 4, 0, 6, 5, 1, 0, 3, 11, 16, 0, 0, 2, 0, 1, 1, 0]' : 0.126406}
{'[1, 4, 4, 0, 6, 5, 1, 0, 3, 11, 16, 0, 0, 2, 0, 1, 1, 0]' : 0.126348}
{'[1, 4, 4, 0, 6, 5, 1, 0, 3, 11, 16, 0, 0, 2, 0, 1, 1, 0]' : 0.12632}
{'[1, 4, 4, 0, 6, 5, 1, 0, 3, 11, 16, 0, 0, 2, 0, 1, 1, 0]' : 0.126389}
{'[1, 4, 4, 0, 6, 5, 1, 0, 3, 11, 16, 0, 0, 2, 0, 1, 1, 0]' : 0.126332}
{'[1, 4, 4, 0, 6, 5, 1, 0, 3, 11, 16, 0, 0, 2, 0, 1, 1, 0]' : 0.126351}
{'[1, 4, 4, 0, 6, 5, 1, 0, 3, 11, 16, 0, 0, 2, 0, 1, 1, 0]' : 0.127574}
{'[1, 4, 4, 0, 6, 5, 1, 0, 3, 11, 16, 0, 0, 2, 0, 1, 1, 0]' : 0.126512}
{'[1, 4, 4, 0, 6, 5, 1, 0, 3, 11, 16, 0, 0, 2, 0, 1, 1, 0]' : 0.12633}
{'[1, 4, 4, 0, 6, 5, 1, 0, 3, 11, 16, 0, 0, 2, 0, 1, 1, 0]' : 0.126446}
{'[1, 4, 4, 0, 6, 5, 1, 0, 3, 11, 16, 0, 0, 2, 0, 1, 1, 0]' : 0.126363}
{'[1, 4, 4, 0, 6, 5, 1, 0, 3, 11, 16, 0, 0, 2, 0, 1, 1, 0]' : 0.126304}
{'[1, 4, 4, 0, 6, 5, 1, 0, 3, 11, 16, 0, 0, 2, 0, 1, 1, 0]' : 0.131502}

out:
 ["{'[1, 4, 4, 0, 6, 5, 1, 0, 3, 11, 16, 0, 0, 2, 0, 1, 1, 0]' : 0.12654}", "{'[1, 4, 4, 0, 6, 5, 1, 0, 3, 11, 16, 0, 0, 2, 0, 1, 1, 0]' : 0.126546}", "{'[1, 4, 4, 0, 6, 5, 1, 0, 3, 11, 16, 0, 0, 2, 0, 1, 1, 0]' : 0.126471}", "{'[1, 4, 4, 0, 6, 5, 1, 0, 3, 11, 16, 0, 0, 2, 0, 1, 1, 0]' : 0.126349}", "{'[1, 4, 4, 0, 6, 5, 1, 0, 3, 11, 16, 0, 0, 2, 0, 1, 1, 0]' : 0.126304}", "{'[1, 4, 4, 0, 6, 5, 1, 0, 3, 11, 16, 0, 0, 2, 0, 1, 1, 0]' : 0.126363}", "{'[1, 4, 4, 0, 6, 5, 1, 0, 3, 11, 16, 0, 0, 2, 0, 1, 1, 0]' : 0.126339}", "{'[1, 4, 4, 0, 6, 5, 1, 0, 3, 11, 16, 0, 0, 2, 0, 1, 1, 0]' : 0.127362}", "{'[1, 4, 4, 0, 6, 5, 1, 0, 3, 11, 16, 0, 0, 2, 0, 1, 1, 0]' : 0.126349}", "{'[1, 4, 4, 0, 6, 5, 1, 0, 3, 11, 16, 0, 0, 2, 0, 1, 1, 0]' : 0.126298}", "{'[1, 4, 4, 0, 6, 5, 1, 0, 3, 11, 16, 0, 0, 2, 0, 1, 1, 0]' : 0.126326}", "{'[1, 4, 4, 0, 6, 5, 1, 0, 3, 11, 16, 0, 0, 2, 0, 1, 1, 0]' : 0.126329}", "{'[1, 4, 4, 0, 6, 5, 1, 0, 3, 11, 16, 0, 0, 2, 0, 1, 1, 0]' : 0.126401}", "{'[1, 4, 4, 0, 6, 5, 1, 0, 3, 11, 16, 0, 0, 2, 0, 1, 1, 0]' : 0.126456}", "{'[1, 4, 4, 0, 6, 5, 1, 0, 3, 11, 16, 0, 0, 2, 0, 1, 1, 0]' : 0.126365}", "{'[1, 4, 4, 0, 6, 5, 1, 0, 3, 11, 16, 0, 0, 2, 0, 1, 1, 0]' : 0.126423}", "{'[1, 4, 4, 0, 6, 5, 1, 0, 3, 11, 16, 0, 0, 2, 0, 1, 1, 0]' : 0.126355}", "{'[1, 4, 4, 0, 6, 5, 1, 0, 3, 11, 16, 0, 0, 2, 0, 1, 1, 0]' : 0.126406}", "{'[1, 4, 4, 0, 6, 5, 1, 0, 3, 11, 16, 0, 0, 2, 0, 1, 1, 0]' : 0.126348}", "{'[1, 4, 4, 0, 6, 5, 1, 0, 3, 11, 16, 0, 0, 2, 0, 1, 1, 0]' : 0.12632}", "{'[1, 4, 4, 0, 6, 5, 1, 0, 3, 11, 16, 0, 0, 2, 0, 1, 1, 0]' : 0.126389}", "{'[1, 4, 4, 0, 6, 5, 1, 0, 3, 11, 16, 0, 0, 2, 0, 1, 1, 0]' : 0.126332}", "{'[1, 4, 4, 0, 6, 5, 1, 0, 3, 11, 16, 0, 0, 2, 0, 1, 1, 0]' : 0.126351}", "{'[1, 4, 4, 0, 6, 5, 1, 0, 3, 11, 16, 0, 0, 2, 0, 1, 1, 0]' : 0.127574}", "{'[1, 4, 4, 0, 6, 5, 1, 0, 3, 11, 16, 0, 0, 2, 0, 1, 1, 0]' : 0.126512}", "{'[1, 4, 4, 0, 6, 5, 1, 0, 3, 11, 16, 0, 0, 2, 0, 1, 1, 0]' : 0.12633}", "{'[1, 4, 4, 0, 6, 5, 1, 0, 3, 11, 16, 0, 0, 2, 0, 1, 1, 0]' : 0.126446}", "{'[1, 4, 4, 0, 6, 5, 1, 0, 3, 11, 16, 0, 0, 2, 0, 1, 1, 0]' : 0.126363}", "{'[1, 4, 4, 0, 6, 5, 1, 0, 3, 11, 16, 0, 0, 2, 0, 1, 1, 0]' : 0.126304}", "{'[1, 4, 4, 0, 6, 5, 1, 0, 3, 11, 16, 0, 0, 2, 0, 1, 1, 0]' : 0.131502}"]
returning from 'run': {'[1, 4, 4, 0, 6, 5, 1, 0, 3, 11, 16, 0, 0, 2, 0, 1, 1, 0]': ([0.12654, 0.126546, 0.126471, 0.126349, 0.126304, 0.126363, 0.126339, 0.127362, 0.126349, 0.126298, 0.126326, 0.126329, 0.126401, 0.126456, 0.126365, 0.126423, 0.126355, 0.126406, 0.126348, 0.12632, 0.126389, 0.126332, 0.126351, 0.127574, 0.126512, 0.12633, 0.126446, 0.126363, 0.126304, 0.131502], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.12654, 0.126546, 0.126471, 0.126349, 0.126304, 0.126363, 0.126339, 0.127362, 0.126349, 0.126298, 0.126326, 0.126329, 0.126401, 0.126456, 0.126365, 0.126423, 0.126355, 0.126406, 0.126348, 0.12632, 0.126389, 0.126332, 0.126351, 0.127574, 0.126512, 0.12633, 0.126446, 0.126363, 0.126304, 0.131502], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[1, 4, 4, 0, 6, 5, 1, 0, 3, 11, 16, 0, 0, 2, 0, 1, 1, 0]': ([0.12654, 0.126546, 0.126471, 0.126349, 0.126304, 0.126363, 0.126339, 0.127362, 0.126349, 0.126298, 0.126326, 0.126329, 0.126401, 0.126456, 0.126365, 0.126423, 0.126355, 0.126406, 0.126348, 0.12632, 0.126389, 0.126332, 0.126351, 0.127574, 0.126512, 0.12633, 0.126446, 0.126363, 0.126304, 0.131502], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [1, 0, 6, 5, 1, 1, 17, 0, 1, 3, 0, 0, 1, 0]
Fixed Factors: {'T2_K': 5, 'T2_J': 6, 'SCR': 1, 'VEC1': 1}
Testing candidate 8: [1, 0, 6, 5, 6, 5, 1, 1, 17, 0, 1, 3, 0, 0, 1, 1, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		135
        Multiplications: 	22
        Divisions: 		0
        Logical: 		0
        Reads: 			307
        Writes: 		83
        Comparisons:		14
        Gotos: 			0
        
digraph CFG {
	17598188 [label="17598188  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	17598188 -> ForLoop17598481;
	_JOIN_17598481 [label="_JOIN_17598481None...",shape=box];
	_JOIN_17598481 -> 17598512;
	_JOIN_17574111 [label="_JOIN_17574111None...",shape=box];
	_JOIN_17574111 -> 17574383;
	17599310 [label="17599310  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	17597979 [label="17597979  for (j=jjj; j<=min(ny-1,jjj+2047); j=j+1) ...",shape=box];
	17574179 [label="17574179  y[i]=0.0;...",shape=box];
	17574179 -> _JOIN_17574180;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 17573644;
	ForLoop17598518 [label="ForLoop17598518  for (ii=iii; ii<=min(nx-1,iii+1008); ii=ii+16) {...",shape=box];
	ForLoop17598518 -> ForLoop17598517;
	ForLoop17598518 -> _JOIN_17598518;
	ForLoop17598519 [label="ForLoop17598519  for (iii=0; iii<=nx-1; iii=iii+1024) {...",shape=box];
	ForLoop17598519 -> ForLoop17598518;
	ForLoop17598519 -> _JOIN_17598519;
	ForLoop17598514 [label="ForLoop17598514  for (kk=kkk; kk<=min(ny-1,kkk+512); kk=kk+512) {...",shape=box];
	ForLoop17598514 -> 17598188;
	ForLoop17598514 -> _JOIN_17598514;
	ForLoop17598515 [label="ForLoop17598515  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop17598515 -> ForLoop17598514;
	ForLoop17598515 -> _JOIN_17598515;
	ForLoop17598517 [label="ForLoop17598517  for (i=ii; i<=min(nx-1,ii+15); i=i+1) {...",shape=box];
	ForLoop17598517 -> 17601065;
	ForLoop17598517 -> _JOIN_17598517;
	17573956 [label="17573956  y[i]=0.0;...",shape=box];
	17601077 [label="17601077  tmp[i]=scv_9;...",shape=box];
	17601077 -> _JOIN_17598517;
	17601065 [label="17601065  double scv_9;...",shape=box];
	17598122 [label="17598122  scv_9=scv_9+A[i*ny+j]*x_copy[(j-jjj)];...",shape=box];
	17598122 -> _JOIN_17598123;
	17598512 [label="17598512  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	17598512 -> _JOIN_17598514;
	ForLoop17574180 [label="ForLoop17574180  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop17574180 -> 17574179;
	ForLoop17574180 -> _JOIN_17574180;
	_JOIN_17598517 [label="_JOIN_17598517None...",shape=box];
	_JOIN_17598517 -> _JOIN_17598518;
	ForLoop17598126 [label="ForLoop17598126  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop17598126 -> 17597979;
	ForLoop17598126 -> _JOIN_17598126;
	ForLoop17598123 [label="ForLoop17598123  for (j=(min(ny-1,jjj+2047))-(((min(ny-1,jjj+2047))-(jjj)+1)%2)+1; j<=min(ny-1,jjj+2047); j=j+1) {...",shape=box];
	ForLoop17598123 -> 17598122;
	ForLoop17598123 -> _JOIN_17598123;
	_JOIN_17598052 [label="_JOIN_17598052None...",shape=box];
	_JOIN_17598052 -> ForLoop17598123;
	ForLoop17598481 [label="ForLoop17598481  for (kt=kk; kt<=min(ny-1,kk+511)-7; kt=kt+8) {...",shape=box];
	ForLoop17598481 -> 17599310;
	ForLoop17598481 -> _JOIN_17598481;
	_JOIN_17598518 [label="_JOIN_17598518None...",shape=box];
	_JOIN_17598518 -> _JOIN_17598519;
	_JOIN_17598519 [label="_JOIN_17598519None...",shape=box];
	17574383 [label="17574383  register int cbv_2, cbv_3;...",shape=box];
	_JOIN_17598514 [label="_JOIN_17598514None...",shape=box];
	_JOIN_17expected=9369846271501.798828
actual=9369846271501.798828
598514 -> _JOIN_17598515;
	_JOIN_17598515 [label="_JOIN_17598515None...",shape=box];
	_JOIN_17598515 -> 17601077;
	17597879 [label="17597879  double x_copy[2048];...",shape=box];
	ForLoop17574111 [label="ForLoop17574111  for (i=0; i<=cbv_1; i=i+18) {...",shape=box];
	ForLoop17574111 -> 17573956;
	ForLoop17574111 -> _JOIN_17574111;
	_JOIN_17574180 [label="_JOIN_17574180None...",shape=box];
	_JOIN_17574180 -> 17597879;
	17573644 [label="17573644  int i;...",shape=box];
	17598023 [label="17598023  scv_9=scv_9+A[i*ny+j]*x_copy[(j-jjj)];...",shape=box];
	ForLoop17598052 [label="ForLoop17598052  for (j=jjj; j<=min(ny-1,jjj+2047)-1; j=j+2) {...",shape=box];
	ForLoop17598052 -> 17598023;
	ForLoop17598052 -> _JOIN_17598052;
	_JOIN_17598123 [label="_JOIN_17598123None...",shape=box];
	_JOIN_17598123 -> _JOIN_17598126;
	_JOIN_17598126 [label="_JOIN_17598126None...",shape=box];
	_JOIN_17598126 -> ForLoop17598515;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest79.exe __orio_perftest79.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest79.exe  
{'[1, 0, 6, 5, 6, 5, 1, 1, 17, 0, 1, 3, 0, 0, 1, 1, 1, 0]' : 0.182125}
{'[1, 0, 6, 5, 6, 5, 1, 1, 17, 0, 1, 3, 0, 0, 1, 1, 1, 0]' : 0.182123}
{'[1, 0, 6, 5, 6, 5, 1, 1, 17, 0, 1, 3, 0, 0, 1, 1, 1, 0]' : 0.182085}
{'[1, 0, 6, 5, 6, 5, 1, 1, 17, 0, 1, 3, 0, 0, 1, 1, 1, 0]' : 0.182173}
{'[1, 0, 6, 5, 6, 5, 1, 1, 17, 0, 1, 3, 0, 0, 1, 1, 1, 0]' : 0.182549}
{'[1, 0, 6, 5, 6, 5, 1, 1, 17, 0, 1, 3, 0, 0, 1, 1, 1, 0]' : 0.18228}
{'[1, 0, 6, 5, 6, 5, 1, 1, 17, 0, 1, 3, 0, 0, 1, 1, 1, 0]' : 0.182075}
{'[1, 0, 6, 5, 6, 5, 1, 1, 17, 0, 1, 3, 0, 0, 1, 1, 1, 0]' : 0.182104}
{'[1, 0, 6, 5, 6, 5, 1, 1, 17, 0, 1, 3, 0, 0, 1, 1, 1, 0]' : 0.183107}
{'[1, 0, 6, 5, 6, 5, 1, 1, 17, 0, 1, 3, 0, 0, 1, 1, 1, 0]' : 0.182085}
{'[1, 0, 6, 5, 6, 5, 1, 1, 17, 0, 1, 3, 0, 0, 1, 1, 1, 0]' : 0.182085}
{'[1, 0, 6, 5, 6, 5, 1, 1, 17, 0, 1, 3, 0, 0, 1, 1, 1, 0]' : 0.18204}
{'[1, 0, 6, 5, 6, 5, 1, 1, 17, 0, 1, 3, 0, 0, 1, 1, 1, 0]' : 0.182104}
{'[1, 0, 6, 5, 6, 5, 1, 1, 17, 0, 1, 3, 0, 0, 1, 1, 1, 0]' : 0.182368}
{'[1, 0, 6, 5, 6, 5, 1, 1, 17, 0, 1, 3, 0, 0, 1, 1, 1, 0]' : 0.182202}
{'[1, 0, 6, 5, 6, 5, 1, 1, 17, 0, 1, 3, 0, 0, 1, 1, 1, 0]' : 0.182163}
{'[1, 0, 6, 5, 6, 5, 1, 1, 17, 0, 1, 3, 0, 0, 1, 1, 1, 0]' : 0.182075}
{'[1, 0, 6, 5, 6, 5, 1, 1, 17, 0, 1, 3, 0, 0, 1, 1, 1, 0]' : 0.182076}
{'[1, 0, 6, 5, 6, 5, 1, 1, 17, 0, 1, 3, 0, 0, 1, 1, 1, 0]' : 0.182072}
{'[1, 0, 6, 5, 6, 5, 1, 1, 17, 0, 1, 3, 0, 0, 1, 1, 1, 0]' : 0.182039}
{'[1, 0, 6, 5, 6, 5, 1, 1, 17, 0, 1, 3, 0, 0, 1, 1, 1, 0]' : 0.183121}
{'[1, 0, 6, 5, 6, 5, 1, 1, 17, 0, 1, 3, 0, 0, 1, 1, 1, 0]' : 0.182403}
{'[1, 0, 6, 5, 6, 5, 1, 1, 17, 0, 1, 3, 0, 0, 1, 1, 1, 0]' : 0.182111}
{'[1, 0, 6, 5, 6, 5, 1, 1, 17, 0, 1, 3, 0, 0, 1, 1, 1, 0]' : 0.1821}
{'[1, 0, 6, 5, 6, 5, 1, 1, 17, 0, 1, 3, 0, 0, 1, 1, 1, 0]' : 0.18216}
{'[1, 0, 6, 5, 6, 5, 1, 1, 17, 0, 1, 3, 0, 0, 1, 1, 1, 0]' : 0.18229}
{'[1, 0, 6, 5, 6, 5, 1, 1, 17, 0, 1, 3, 0, 0, 1, 1, 1, 0]' : 0.182233}
{'[1, 0, 6, 5, 6, 5, 1, 1, 17, 0, 1, 3, 0, 0, 1, 1, 1, 0]' : 0.182104}
{'[1, 0, 6, 5, 6, 5, 1, 1, 17, 0, 1, 3, 0, 0, 1, 1, 1, 0]' : 0.182065}
{'[1, 0, 6, 5, 6, 5, 1, 1, 17, 0, 1, 3, 0, 0, 1, 1, 1, 0]' : 0.182408}

out:
 ["{'[1, 0, 6, 5, 6, 5, 1, 1, 17, 0, 1, 3, 0, 0, 1, 1, 1, 0]' : 0.182125}", "{'[1, 0, 6, 5, 6, 5, 1, 1, 17, 0, 1, 3, 0, 0, 1, 1, 1, 0]' : 0.182123}", "{'[1, 0, 6, 5, 6, 5, 1, 1, 17, 0, 1, 3, 0, 0, 1, 1, 1, 0]' : 0.182085}", "{'[1, 0, 6, 5, 6, 5, 1, 1, 17, 0, 1, 3, 0, 0, 1, 1, 1, 0]' : 0.182173}", "{'[1, 0, 6, 5, 6, 5, 1, 1, 17, 0, 1, 3, 0, 0, 1, 1, 1, 0]' : 0.182549}", "{'[1, 0, 6, 5, 6, 5, 1, 1, 17, 0, 1, 3, 0, 0, 1, 1, 1, 0]' : 0.18228}", "{'[1, 0, 6, 5, 6, 5, 1, 1, 17, 0, 1, 3, 0, 0, 1, 1, 1, 0]' : 0.182075}", "{'[1, 0, 6, 5, 6, 5, 1, 1, 17, 0, 1, 3, 0, 0, 1, 1, 1, 0]' : 0.182104}", "{'[1, 0, 6, 5, 6, 5, 1, 1, 17, 0, 1, 3, 0, 0, 1, 1, 1, 0]' : 0.183107}", "{'[1, 0, 6, 5, 6, 5, 1, 1, 17, 0, 1, 3, 0, 0, 1, 1, 1, 0]' : 0.182085}", "{'[1, 0, 6, 5, 6, 5, 1, 1, 17, 0, 1, 3, 0, 0, 1, 1, 1, 0]' : 0.182085}", "{'[1, 0, 6, 5, 6, 5, 1, 1, 17, 0, 1, 3, 0, 0, 1, 1, 1, 0]' : 0.18204}", "{'[1, 0, 6, 5, 6, 5, 1, 1, 17, 0, 1, 3, 0, 0, 1, 1, 1, 0]' : 0.182104}", "{'[1, 0, 6, 5, 6, 5, 1, 1, 17, 0, 1, 3, 0, 0, 1, 1, 1, 0]' : 0.182368}", "{'[1, 0, 6, 5, 6, 5, 1, 1, 17, 0, 1, 3, 0, 0, 1, 1, 1, 0]' : 0.182202}", "{'[1, 0, 6, 5, 6, 5, 1, 1, 17, 0, 1, 3, 0, 0, 1, 1, 1, 0]' : 0.182163}", "{'[1, 0, 6, 5, 6, 5, 1, 1, 17, 0, 1, 3, 0, 0, 1, 1, 1, 0]' : 0.182075}", "{'[1, 0, 6, 5, 6, 5, 1, 1, 17, 0, 1, 3, 0, 0, 1, 1, 1, 0]' : 0.182076}", "{'[1, 0, 6, 5, 6, 5, 1, 1, 17, 0, 1, 3, 0, 0, 1, 1, 1, 0]' : 0.182072}", "{'[1, 0, 6, 5, 6, 5, 1, 1, 17, 0, 1, 3, 0, 0, 1, 1, 1, 0]' : 0.182039}", "{'[1, 0, 6, 5, 6, 5, 1, 1, 17, 0, 1, 3, 0, 0, 1, 1, 1, 0]' : 0.183121}", "{'[1, 0, 6, 5, 6, 5, 1, 1, 17, 0, 1, 3, 0, 0, 1, 1, 1, 0]' : 0.182403}", "{'[1, 0, 6, 5, 6, 5, 1, 1, 17, 0, 1, 3, 0, 0, 1, 1, 1, 0]' : 0.182111}", "{'[1, 0, 6, 5, 6, 5, 1, 1, 17, 0, 1, 3, 0, 0, 1, 1, 1, 0]' : 0.1821}", "{'[1, 0, 6, 5, 6, 5, 1, 1, 17, 0, 1, 3, 0, 0, 1, 1, 1, 0]' : 0.18216}", "{'[1, 0, 6, 5, 6, 5, 1, 1, 17, 0, 1, 3, 0, 0, 1, 1, 1, 0]' : 0.18229}", "{'[1, 0, 6, 5, 6, 5, 1, 1, 17, 0, 1, 3, 0, 0, 1, 1, 1, 0]' : 0.182233}", "{'[1, 0, 6, 5, 6, 5, 1, 1, 17, 0, 1, 3, 0, 0, 1, 1, 1, 0]' : 0.182104}", "{'[1, 0, 6, 5, 6, 5, 1, 1, 17, 0, 1, 3, 0, 0, 1, 1, 1, 0]' : 0.182065}", "{'[1, 0, 6, 5, 6, 5, 1, 1, 17, 0, 1, 3, 0, 0, 1, 1, 1, 0]' : 0.182408}"]
returning from 'run': {'[1, 0, 6, 5, 6, 5, 1, 1, 17, 0, 1, 3, 0, 0, 1, 1, 1, 0]': ([0.182125, 0.182123, 0.182085, 0.182173, 0.182549, 0.18228, 0.182075, 0.182104, 0.183107, 0.182085, 0.182085, 0.18204, 0.182104, 0.182368, 0.182202, 0.182163, 0.182075, 0.182076, 0.182072, 0.182039, 0.183121, 0.182403, 0.182111, 0.1821, 0.18216, 0.18229, 0.182233, 0.182104, 0.182065, 0.182408], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.182125, 0.182123, 0.182085, 0.182173, 0.182549, 0.18228, 0.182075, 0.182104, 0.183107, 0.182085, 0.182085, 0.18204, 0.182104, 0.182368, 0.182202, 0.182163, 0.182075, 0.182076, 0.182072, 0.182039, 0.183121, 0.182403, 0.182111, 0.1821, 0.18216, 0.18229, 0.182233, 0.182104, 0.182065, 0.182408], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 6, 5, 6, 5, 1, 1, 17, 0, 1, 3, 0, 0, 1, 1, 1, 0]': ([0.182125, 0.182123, 0.182085, 0.182173, 0.182549, 0.18228, 0.182075, 0.182104, 0.183107, 0.182085, 0.182085, 0.18204, 0.182104, 0.182368, 0.182202, 0.182163, 0.182075, 0.182076, 0.182072, 0.182039, 0.183121, 0.182403, 0.182111, 0.1821, 0.18216, 0.18229, 0.182233, 0.182104, 0.182065, 0.182408], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [2, 1, 0, 3, 1, 1, 3, 0, 17, 10, 2, 0, 0, 0]
Fixed Factors: {'T2_K': 5, 'T2_J': 6, 'SCR': 1, 'VEC1': 1}
Testing candidate 9: [2, 1, 0, 3, 6, 5, 1, 1, 3, 0, 17, 10, 2, 0, 0, 1, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	26
        Max loop nest depth: 	6
        Additions: 		4244
        Multiplications: 	2046
        Divisions: 		0
        Logical: 		0
        Reads: 			7899
        Writes: 		1224
        Comparisons:		26
        Gotos: 			0
        
digraph CFG {
	_JOIN_17949589 [label="_JOIN_17949589None...",shape=box];
	_JOIN_17949589 -> _JOIN_17949590;
	ForLoop17949590 [label="ForLoop17949590  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop17949590 -> ForLoop17949589;
	ForLoop17949590 -> _JOIN_17949590;
	17927933 [label="17927933  double x_copy[16];...",shape=box];
	17602842 [label="17602842  y[i]=0.0;...",shape=box];
	17602842 -> _JOIN_17602843;
	17602920 [label="17602920  register int cbv_2, cbv_3;...",shape=box];
	_JOIN_17963878 [label="_JOIN_17963878None...",shape=box];
	_JOIN_17963878 -> ForLoop17965067;
	ForLoop17965070 [label="ForLoop17965070  for (iii=0; iii<=nx-1; iii=iii+256) {...",shape=box];
	ForLoop17965070 -> ForLoop17965069;
	ForLoop17965070 -> _JOIN_17965070;
	_JOIN_17602843 [label="_JOIN_17602843None...",shape=box];
	_JOIN_17602843 -> 17927933;
	_JOIN_17964469 [label="_JOIN_17964469None...",shape=box];
	_JOIN_17964469 -> ForLoop17964540;
	18091397 [label="18091397  double scv_64, scv_65, scv_66, scv_67, scv_68, scv_69, scv_70, scv_71;...",shape=box];
	_JOIN_17964544 [label="_JOIN_17964544None...",shape=box];
	_JOIN_17964544 -> ForLoop17965065;
	17963874 [label="17963874  for (k=kkk; k<=min(ny-1,kkk+1023); k=k+1) ...",shape=box];
	17963874 -> _JOIN_17963876;
	17992657 [label="17992657  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	_JOIN_17964540 [label="_JOIN_17964540None...",shape=box];
	_JOIN_17964540 -> _JOIN_17964543;
	ForLoop17963878 [label="ForLoop17963878  for (it=ii; it<=min(nx-1,ii+31)-31; it=it+32) {...",shape=box];
	ForLoop17963878 -> 18086512;
	ForLoop17963878 -> _JOIN_17963878;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 17602643;
	_JOIN_17964543 [label="_JOIN_17964543None...",shape=box];
	_JOIN_17964543 -> _JOIN_17964544;
	_JOIN_17602774 [label="_JOIN_17602774None...",shape=box];
	_JOIN_17602774 -> 17602920;
	_JOIN_17965069 [label="_JOIN_17965069None...",shape=box];
	_JOIN_17965069 -> _JOIN_17965070;
	17949634 [label="17949634  for (k=kkk; k<=min(ny-1,kkk+1023); k=k+1) ...",shape=box];
	_JOIN_17962775 [label="_JOIN_17962775None...",shape=box];
	_JOIN_17962775 -> ForLoop17963842;
	_JOIN_17965065 [label="_JOIN_17965065None...",shape=box];
	_JOIN_17965065 -> 18093680;
	_JOIN_17965067 [label="_JOIN_17965067None...",shape=box];
	_JOIN_17965067 -> _JOIN_17965069;
	ForLoop17948522 [label="ForLoop17948522  for (j=jj; j<=min(ny-1,jj+15)-17; j=j+18) {...",shape=box];
	ForLoop17948522 -> 17992657;
	ForLoop17948522 -> _JOIN_17948522;
	18086530 [label="18086530  tmp[(it+21)]=scv_32;...",shape=box];
	ForLoop17965031 [label="ForLoop17965031  for (k=(min(ny-1,kkk+1023))-(((min(ny-1,kkk+1023))-(kkk)+1)%11)+1; k<=min(ny-1,kkk+1023); k=k+1) {...",shape=box];
	ForLoop17965031 -> 18091749;
	ForLoop17965031 -> _JOIN_17965031;
	17965063 [label="17965063  for (k=kkk; k<=min(ny-1,kkk+1023); k=k+1) ...",shape=box];
	17965063 -> _JOIN_17965065;
	17994829 [label="17994829  double scv_19;...",shape=box];
	18086512 [label="18086512  double scv_32, scv_33, scv_34, scv_35, scv_36, scv_37, scv_38, scv_39;...",shape=box];
	_JOIN_17948522 [label="_JOIN_17948522None...",shape=box];
	_JOIN_17948522 -> ForLoop17949586;
	18091749 [label="18091749  double scv_75;...",shape=box];
	ForLoop17602774 [label="ForLoop17602774  for (i=0; i<=cbv_1; i=i+4) {...",shape=box];
	ForLoop17602774 -> 17602745;
	ForLoop17602774 -> _JOIN_17602774;
	17964588 [label="17964588  for (k=kkk; k<=min(ny-1,kkk+1023); k=k+1) ...",shape=box];
	17602643 [label="17602643  int i;...",shape=box];
	_JOIN_17963842 [label="_JOIN_17963842None...",shape=box];
	_JOIN_17963842 -> 17963874;
	ForLoop17949586 [label="ForLoop17949586  for (j=(min(ny-1,jj+15))-(((min(ny-1,jj+15))-(jj)+1)%18)+1; j<=min(ny-1,jj+15); j=j+1) {...",shape=box];
	ForLoop17949586 -> 17994829;
	ForLoop17949586 -> _JOIN_17949586;
	ForLoop17962775 [label="ForLoop17962775  for (k=kkk; k<=min(ny-1,kkk+1023)-10; k=k+11) {...",shape=box];
	ForLoop17962775 -> 18047548;
	ForLoop17962775 -> _JOIN_17962775;
	ForLoop17965069 [label="ForLoop17965069  for (ii=iii; ii<=min(nx-1,iii+224); ii=ii+32) {...",shape=box];
	ForLoop17965069 -> ForLoop17963878;
	ForLoop17965069 -> _JOIN_17965069;
	_JOIN_17964957 [label="_JOIN_17964957None...",shape=box];
	_JOIN_17964957 -> ForLoop17965031;
	ForLoop17965065 [label="ForLoop17965065  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop17965065 -> 17964588;
	ForLoop17965065 -> _JOIN_17965065;
	_JOIN_17949590 [label="_JOIN_17949590None...",shape=box];
	_JOIN_17949590 -> ForLoop17963876;
	ForLoop17965067 [label="ForLoop17965067  for (i=it; i<=min(nx-1,ii+31); i=i+1) {...",shape=box];
	ForLoop17965067 -> 18093668;
	ForLoop17965067 -> _JOIN_17965067;
	ForLoop17949589 [label="ForLoop17949589  for (jj=jjj; jj<=min(ny-1,jjj+2032); jj=jj+16) {...",shape=boexpected=9369846271501.798828
actual=9369846271501.798828
x];
	ForLoop17949589 -> 17928053;
	ForLoop17949589 -> _JOIN_17949589;
	17602745 [label="17602745  y[i]=0.0;...",shape=box];
	ForLoop17602843 [label="ForLoop17602843  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop17602843 -> 17602842;
	ForLoop17602843 -> _JOIN_17602843;
	18093680 [label="18093680  tmp[i]=scv_76;...",shape=box];
	18093680 -> _JOIN_17965067;
	ForLoop17963842 [label="ForLoop17963842  for (k=(min(ny-1,kkk+1023))-(((min(ny-1,kkk+1023))-(kkk)+1)%11)+1; k<=min(ny-1,kkk+1023); k=k+1) {...",shape=box];
	ForLoop17963842 -> 18049885;
	ForLoop17963842 -> _JOIN_17963842;
	_JOIN_17949586 [label="_JOIN_17949586None...",shape=box];
	_JOIN_17949586 -> _JOIN_17949589;
	17964539 [label="17964539  scv_76=scv_76+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	17964539 -> _JOIN_17964540;
	ForLoop17964469 [label="ForLoop17964469  for (j=jj; j<=min(ny-1,jj+15)-17; j=j+18) {...",shape=box];
	ForLoop17964469 -> 17964008;
	ForLoop17964469 -> _JOIN_17964469;
	17963964 [label="17963964  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	17964008 [label="17964008  scv_76=scv_76+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop17964957 [label="ForLoop17964957  for (k=kkk; k<=min(ny-1,kkk+1023)-10; k=k+11) {...",shape=box];
	ForLoop17964957 -> 18091397;
	ForLoop17964957 -> _JOIN_17964957;
	_JOIN_17963876 [label="_JOIN_17963876None...",shape=box];
	_JOIN_17963876 -> 18086530;
	18049885 [label="18049885  double scv_31;...",shape=box];
	_JOIN_17965070 [label="_JOIN_17965070None...",shape=box];
	ForLoop17964543 [label="ForLoop17964543  for (jj=jjj; jj<=min(ny-1,jjj+2032); jj=jj+16) {...",shape=box];
	ForLoop17964543 -> 17963964;
	ForLoop17964543 -> _JOIN_17964543;
	17928053 [label="17928053  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	ForLoop17964544 [label="ForLoop17964544  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop17964544 -> ForLoop17964543;
	ForLoop17964544 -> _JOIN_17964544;
	ForLoop17963876 [label="ForLoop17963876  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop17963876 -> 17949634;
	ForLoop17963876 -> _JOIN_17963876;
	ForLoop17964540 [label="ForLoop17964540  for (j=(min(ny-1,jj+15))-(((min(ny-1,jj+15))-(jj)+1)%18)+1; j<=min(ny-1,jj+15); j=j+1) {...",shape=box];
	ForLoop17964540 -> 17964539;
	ForLoop17964540 -> _JOIN_17964540;
	_JOIN_17965031 [label="_JOIN_17965031None...",shape=box];
	_JOIN_17965031 -> 17965063;
	18047548 [label="18047548  double scv_20, scv_21, scv_22, scv_23, scv_24, scv_25, scv_26, scv_27;...",shape=box];
	18093668 [label="18093668  double scv_76;...",shape=box];

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest80.exe __orio_perftest80.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest80.exe  
{'[2, 1, 0, 3, 6, 5, 1, 1, 3, 0, 17, 10, 2, 0, 0, 1, 1, 0]' : 0.181351}
{'[2, 1, 0, 3, 6, 5, 1, 1, 3, 0, 17, 10, 2, 0, 0, 1, 1, 0]' : 0.181424}
{'[2, 1, 0, 3, 6, 5, 1, 1, 3, 0, 17, 10, 2, 0, 0, 1, 1, 0]' : 0.182669}
{'[2, 1, 0, 3, 6, 5, 1, 1, 3, 0, 17, 10, 2, 0, 0, 1, 1, 0]' : 0.181485}
{'[2, 1, 0, 3, 6, 5, 1, 1, 3, 0, 17, 10, 2, 0, 0, 1, 1, 0]' : 0.181549}
{'[2, 1, 0, 3, 6, 5, 1, 1, 3, 0, 17, 10, 2, 0, 0, 1, 1, 0]' : 0.182331}
{'[2, 1, 0, 3, 6, 5, 1, 1, 3, 0, 17, 10, 2, 0, 0, 1, 1, 0]' : 0.181151}
{'[2, 1, 0, 3, 6, 5, 1, 1, 3, 0, 17, 10, 2, 0, 0, 1, 1, 0]' : 0.181166}
{'[2, 1, 0, 3, 6, 5, 1, 1, 3, 0, 17, 10, 2, 0, 0, 1, 1, 0]' : 0.181381}
{'[2, 1, 0, 3, 6, 5, 1, 1, 3, 0, 17, 10, 2, 0, 0, 1, 1, 0]' : 0.181166}
{'[2, 1, 0, 3, 6, 5, 1, 1, 3, 0, 17, 10, 2, 0, 0, 1, 1, 0]' : 0.181485}
{'[2, 1, 0, 3, 6, 5, 1, 1, 3, 0, 17, 10, 2, 0, 0, 1, 1, 0]' : 0.182472}
{'[2, 1, 0, 3, 6, 5, 1, 1, 3, 0, 17, 10, 2, 0, 0, 1, 1, 0]' : 0.18165}
{'[2, 1, 0, 3, 6, 5, 1, 1, 3, 0, 17, 10, 2, 0, 0, 1, 1, 0]' : 0.182687}
{'[2, 1, 0, 3, 6, 5, 1, 1, 3, 0, 17, 10, 2, 0, 0, 1, 1, 0]' : 0.181786}
{'[2, 1, 0, 3, 6, 5, 1, 1, 3, 0, 17, 10, 2, 0, 0, 1, 1, 0]' : 0.18149}
{'[2, 1, 0, 3, 6, 5, 1, 1, 3, 0, 17, 10, 2, 0, 0, 1, 1, 0]' : 0.181466}
{'[2, 1, 0, 3, 6, 5, 1, 1, 3, 0, 17, 10, 2, 0, 0, 1, 1, 0]' : 0.181476}
{'[2, 1, 0, 3, 6, 5, 1, 1, 3, 0, 17, 10, 2, 0, 0, 1, 1, 0]' : 0.180858}
{'[2, 1, 0, 3, 6, 5, 1, 1, 3, 0, 17, 10, 2, 0, 0, 1, 1, 0]' : 0.181743}
{'[2, 1, 0, 3, 6, 5, 1, 1, 3, 0, 17, 10, 2, 0, 0, 1, 1, 0]' : 0.181769}
{'[2, 1, 0, 3, 6, 5, 1, 1, 3, 0, 17, 10, 2, 0, 0, 1, 1, 0]' : 0.180452}
{'[2, 1, 0, 3, 6, 5, 1, 1, 3, 0, 17, 10, 2, 0, 0, 1, 1, 0]' : 0.18188}
{'[2, 1, 0, 3, 6, 5, 1, 1, 3, 0, 17, 10, 2, 0, 0, 1, 1, 0]' : 0.181136}
{'[2, 1, 0, 3, 6, 5, 1, 1, 3, 0, 17, 10, 2, 0, 0, 1, 1, 0]' : 0.183318}
{'[2, 1, 0, 3, 6, 5, 1, 1, 3, 0, 17, 10, 2, 0, 0, 1, 1, 0]' : 0.181631}
{'[2, 1, 0, 3, 6, 5, 1, 1, 3, 0, 17, 10, 2, 0, 0, 1, 1, 0]' : 0.181885}
{'[2, 1, 0, 3, 6, 5, 1, 1, 3, 0, 17, 10, 2, 0, 0, 1, 1, 0]' : 0.18161}
{'[2, 1, 0, 3, 6, 5, 1, 1, 3, 0, 17, 10, 2, 0, 0, 1, 1, 0]' : 0.181246}
{'[2, 1, 0, 3, 6, 5, 1, 1, 3, 0, 17, 10, 2, 0, 0, 1, 1, 0]' : 0.181557}

out:
 ["{'[2, 1, 0, 3, 6, 5, 1, 1, 3, 0, 17, 10, 2, 0, 0, 1, 1, 0]' : 0.181351}", "{'[2, 1, 0, 3, 6, 5, 1, 1, 3, 0, 17, 10, 2, 0, 0, 1, 1, 0]' : 0.181424}", "{'[2, 1, 0, 3, 6, 5, 1, 1, 3, 0, 17, 10, 2, 0, 0, 1, 1, 0]' : 0.182669}", "{'[2, 1, 0, 3, 6, 5, 1, 1, 3, 0, 17, 10, 2, 0, 0, 1, 1, 0]' : 0.181485}", "{'[2, 1, 0, 3, 6, 5, 1, 1, 3, 0, 17, 10, 2, 0, 0, 1, 1, 0]' : 0.181549}", "{'[2, 1, 0, 3, 6, 5, 1, 1, 3, 0, 17, 10, 2, 0, 0, 1, 1, 0]' : 0.182331}", "{'[2, 1, 0, 3, 6, 5, 1, 1, 3, 0, 17, 10, 2, 0, 0, 1, 1, 0]' : 0.181151}", "{'[2, 1, 0, 3, 6, 5, 1, 1, 3, 0, 17, 10, 2, 0, 0, 1, 1, 0]' : 0.181166}", "{'[2, 1, 0, 3, 6, 5, 1, 1, 3, 0, 17, 10, 2, 0, 0, 1, 1, 0]' : 0.181381}", "{'[2, 1, 0, 3, 6, 5, 1, 1, 3, 0, 17, 10, 2, 0, 0, 1, 1, 0]' : 0.181166}", "{'[2, 1, 0, 3, 6, 5, 1, 1, 3, 0, 17, 10, 2, 0, 0, 1, 1, 0]' : 0.181485}", "{'[2, 1, 0, 3, 6, 5, 1, 1, 3, 0, 17, 10, 2, 0, 0, 1, 1, 0]' : 0.182472}", "{'[2, 1, 0, 3, 6, 5, 1, 1, 3, 0, 17, 10, 2, 0, 0, 1, 1, 0]' : 0.18165}", "{'[2, 1, 0, 3, 6, 5, 1, 1, 3, 0, 17, 10, 2, 0, 0, 1, 1, 0]' : 0.182687}", "{'[2, 1, 0, 3, 6, 5, 1, 1, 3, 0, 17, 10, 2, 0, 0, 1, 1, 0]' : 0.181786}", "{'[2, 1, 0, 3, 6, 5, 1, 1, 3, 0, 17, 10, 2, 0, 0, 1, 1, 0]' : 0.18149}", "{'[2, 1, 0, 3, 6, 5, 1, 1, 3, 0, 17, 10, 2, 0, 0, 1, 1, 0]' : 0.181466}", "{'[2, 1, 0, 3, 6, 5, 1, 1, 3, 0, 17, 10, 2, 0, 0, 1, 1, 0]' : 0.181476}", "{'[2, 1, 0, 3, 6, 5, 1, 1, 3, 0, 17, 10, 2, 0, 0, 1, 1, 0]' : 0.180858}", "{'[2, 1, 0, 3, 6, 5, 1, 1, 3, 0, 17, 10, 2, 0, 0, 1, 1, 0]' : 0.181743}", "{'[2, 1, 0, 3, 6, 5, 1, 1, 3, 0, 17, 10, 2, 0, 0, 1, 1, 0]' : 0.181769}", "{'[2, 1, 0, 3, 6, 5, 1, 1, 3, 0, 17, 10, 2, 0, 0, 1, 1, 0]' : 0.180452}", "{'[2, 1, 0, 3, 6, 5, 1, 1, 3, 0, 17, 10, 2, 0, 0, 1, 1, 0]' : 0.18188}", "{'[2, 1, 0, 3, 6, 5, 1, 1, 3, 0, 17, 10, 2, 0, 0, 1, 1, 0]' : 0.181136}", "{'[2, 1, 0, 3, 6, 5, 1, 1, 3, 0, 17, 10, 2, 0, 0, 1, 1, 0]' : 0.183318}", "{'[2, 1, 0, 3, 6, 5, 1, 1, 3, 0, 17, 10, 2, 0, 0, 1, 1, 0]' : 0.181631}", "{'[2, 1, 0, 3, 6, 5, 1, 1, 3, 0, 17, 10, 2, 0, 0, 1, 1, 0]' : 0.181885}", "{'[2, 1, 0, 3, 6, 5, 1, 1, 3, 0, 17, 10, 2, 0, 0, 1, 1, 0]' : 0.18161}", "{'[2, 1, 0, 3, 6, 5, 1, 1, 3, 0, 17, 10, 2, 0, 0, 1, 1, 0]' : 0.181246}", "{'[2, 1, 0, 3, 6, 5, 1, 1, 3, 0, 17, 10, 2, 0, 0, 1, 1, 0]' : 0.181557}"]
returning from 'run': {'[2, 1, 0, 3, 6, 5, 1, 1, 3, 0, 17, 10, 2, 0, 0, 1, 1, 0]': ([0.181351, 0.181424, 0.182669, 0.181485, 0.181549, 0.182331, 0.181151, 0.181166, 0.181381, 0.181166, 0.181485, 0.182472, 0.18165, 0.182687, 0.181786, 0.18149, 0.181466, 0.181476, 0.180858, 0.181743, 0.181769, 0.180452, 0.18188, 0.181136, 0.183318, 0.181631, 0.181885, 0.18161, 0.181246, 0.181557], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.181351, 0.181424, 0.182669, 0.181485, 0.181549, 0.182331, 0.181151, 0.181166, 0.181381, 0.181166, 0.181485, 0.182472, 0.18165, 0.182687, 0.181786, 0.18149, 0.181466, 0.181476, 0.180858, 0.181743, 0.181769, 0.180452, 0.18188, 0.181136, 0.183318, 0.181631, 0.181885, 0.18161, 0.181246, 0.181557], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[2, 1, 0, 3, 6, 5, 1, 1, 3, 0, 17, 10, 2, 0, 0, 1, 1, 0]': ([0.181351, 0.181424, 0.182669, 0.181485, 0.181549, 0.182331, 0.181151, 0.181166, 0.181381, 0.181166, 0.181485, 0.182472, 0.18165, 0.182687, 0.181786, 0.18149, 0.181466, 0.181476, 0.180858, 0.181743, 0.181769, 0.180452, 0.18188, 0.181136, 0.183318, 0.181631, 0.181885, 0.18161, 0.181246, 0.181557], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [6, 3, 1, 6, 0, 1, 0, 12, 0, 21, 0, 1, 0, 0]
Fixed Factors: {'T2_K': 5, 'T2_J': 6, 'SCR': 1, 'VEC1': 1}
Testing candidate 10: [6, 3, 1, 6, 6, 5, 0, 1, 0, 12, 0, 21, 0, 1, 0, 1, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	73
        Max loop nest depth: 	6
        Additions: 		3335
        Multiplications: 	896
        Divisions: 		0
        Logical: 		0
        Reads: 			6549
        Writes: 		1319
        Comparisons:		73
        Gotos: 			0
        
digraph CFG {
	18136085 [label="18136085  y[i]=0.0;...",shape=box];
	18136085 -> _JOIN_18136086;
	18300502 [label="18300502  double scv_263, scv_264, scv_265, scv_266, scv_267, scv_268, scv_269, scv_270;...",shape=box];
	18302442 [label="18302442  double scv_286, scv_287, scv_288, scv_289, scv_290, scv_291, scv_292, scv_293;...",shape=box];
	18270579 [label="18270579  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	ForLoop18264561 [label="ForLoop18264561  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kk)+1)%22)+1; k<=min(ny-1,kk+15); k=k+1) {...",shape=box];
	ForLoop18264561 -> 18303079;
	ForLoop18264561 -> _JOIN_18264561;
	_JOIN_18252535 [label="_JOIN_18252535None...",shape=box];
	_JOIN_18252535 -> ForLoop18252609;
	ForLoop18264481 [label="ForLoop18264481  for (k=kk; k<=min(ny-1,kk+15)-21; k=k+22) {...",shape=box];
	ForLoop18264481 -> 18302442;
	ForLoop18264481 -> _JOIN_18264481;
	18279171 [label="18279171  double scv_10, scv_11, scv_12, scv_13, scv_14, scv_15, scv_16, scv_17;...",shape=box];
	_JOIN_18260497 [label="_JOIN_18260497None...",shape=box];
	_JOIN_18260497 -> ForLoop18260577;
	18258617 [label="18258617  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	_JOIN_18261573 [label="_JOIN_18261573None...",shape=box];
	_JOIN_18261573 -> 18261605;
	_JOIN_18262569 [label="_JOIN_18262569None...",shape=box];
	_JOIN_18262569 -> 18262601;
	18261605 [label="18261605  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop18265840 [label="ForLoop18265840  for (kk=kkk; kk<=min(ny-1,kkk+1008); kk=kk+16) {...",shape=box];
	ForLoop18265840 -> 18265011;
	ForLoop18265840 -> _JOIN_18265840;
	ForLoop18265841 [label="ForLoop18265841  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop18265841 -> ForLoop18265840;
	ForLoop18265841 -> _JOIN_18265841;
	_JOIN_18264481 [label="_JOIN_18264481None...",shape=box];
	_JOIN_18264481 -> ForLoop18264561;
	ForLoop18265843 [label="ForLoop18265843  for (i=(min(nx-1,ii+511))-(((min(nx-1,ii+511))-(ii)+1)%13)+1; i<=min(nx-1,ii+511); i=i+1) {...",shape=box];
	ForLoop18265843 -> 18359552;
	ForLoop18265843 -> _JOIN_18265843;
	_JOIN_18251748 [label="_JOIN_18251748None...",shape=box];
	_JOIN_18251748 -> _JOIN_18251750;
	18256625 [label="18256625  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop18264949 [label="ForLoop18264949  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop18264949 -> ForLoop18264948;
	ForLoop18264949 -> _JOIN_18264949;
	ForLoop18252535 [label="ForLoop18252535  for (k=kk; k<=min(ny-1,kk+15)-21; k=k+22) {...",shape=box];
	ForLoop18252535 -> 18279171;
	ForLoop18252535 -> _JOIN_18252535;
	ForLoop18263565 [label="ForLoop18263565  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kk)+1)%22)+1; k<=min(ny-1,kk+15); k=k+1) {...",shape=box];
	ForLoop18263565 -> 18301139;
	ForLoop18263565 -> _JOIN_18263565;
	18355968 [label="18355968  double scv_344;...",shape=box];
	ForLoop18254601 [label="ForLoop18254601  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kk)+1)%22)+1; k<=min(ny-1,kk+15); k=k+1) {...",shape=box];
	ForLoop18254601 -> 18283679;
	ForLoop18254601 -> _JOIN_18254601;
	ForLoop18265806 [label="ForLoop18265806  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kk)+1)%22)+1; k<=min(ny-1,kk+15); k=k+1) {...",shape=box];
	ForLoop18265806 -> 18355968;
	ForLoop18265806 -> _JOIN_18265806;
	_JOIN_18258505 [label="_JOIN_18258505None...",shape=box];
	_JOIN_18258505 -> ForLoop18258585;
	18287559 [label="18287559  double scv_124;...",shape=box];
	18352519 [label="18352519  double scv_309, scv_310, scv_311, scv_312, scv_313, scv_314, scv_315, scv_316;...",shape=box];
	18259613 [label="18259613  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	_JOIN_18265845 [label="_JOIN_18265845None...",shape=box];
	_JOIN_18265845 -> _JOIN_18265846;
	_JOIN_18265846 [label="_JOIN_18265846None...",shape=box];
	_JOIN_18253525 [label="_JOIN_18253525None...",shape=box];
	_JOIN_18253525 -> ForLoop18253605;
	_JOIN_18264946 [label="_JOIN_18264946None...",shape=box];
	_JOIN_18264946 -> _JOIN_18264948;
	_JOIN_18265841 [label="_JOIN_18265841None...",shape=box];
	_JOIN_18265841 -> 18359564;
	ForLoop18253525 [label="ForLoop18253525  for (k=kk; k<=min(ny-1,kk+15)-21; k=k+22) {...",shape=box];
	ForLoop18253525 -> 18281102;
	ForLoop18253525 -> _JOIN_18253525;
	_JOIN_18258585 [label="_JOIN_18258585None...",shape=box];
	_JOIN_18258585 -> 18258617;
	_JOIN_18251752 [label="_JOIN_18251752None...",shape=box];
	_JOIN_18251752 -> ForLoop18264597;
	18247741 [label="18247741  double x_copy;...",shape=box];
	_JOIN_18251750 [label="_JOIN_18251750None...",shape=box];
	_JOIN_18251750 -> _JOIN_18251752;
	ForLoop18259581 [label="ForLoop18259581  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kk)+1)%22)+1; k<=min(ny-1,kk+15); k=k+1) {...",shape=box];
	ForLoop18259581 -> 18293379;
	ForLoop18259581 -> _JOIN_18259581;
	18295319 [label="18295319  double scv_216;...",shape=box];
	_JOIN_18260577 [label="_JOIN_18260577None...",shape=box];
	_JOIN_18260577 -> 18260609;
	18292742 [label="18292742  double scv_171, scv_172, scv_173, scv_174, scv_175, scv_176, scv_177, scv_178;...",shape=box];
	ForLoop18258505 [label="ForLoop18258505  for (k=kk; k<=min(ny-1,kk+15)-21; k=k+22) {...",shape=box];
	ForLoop18258505 -> 18290802;
	ForLoop18258505 -> _JOIN_18258505;
	ForLoop18265732 [label="ForLoop18265732  for (k=kk; k<=min(ny-1,kk+15)-21; k=k+22) {...",shape=box];
	ForLoop18265732 -> 18355340;
	ForLoop18265732 -> _JOIN_18265732;
	ForLoop18264946 [label="ForLoop18264946  for (j=jt; j<=min(ny-1,jj+63); j=j+1) {...",shape=box];
	ForLoop18264946 -> 18264945;
	ForLoop18264946 -> _JOIN_18264946;
	ForLoop18264948 [label="ForLoop18264948  for (jj=jjj; jj<=min(ny-1,jjj+1984); jj=jj+64) {...",shape=box];
	ForLoop18264948 -> ForLoop18264907;
	ForLoop18264948 -> _JOIN_18264948;
	ForLoop18263485 [label="ForLoop18263485  for (k=kk; k<=min(ny-1,kk+15)-21; k=k+22) {...",shape=box];
	ForLoop18263485 -> 18300502;
	ForLoop18263485 -> _JOIN_18263485;
	_JOIN_18254601 [label="_JOIN_18254601None...",shape=box];
	_JOIN_18254601 -> 18254633;
	18299199 [label="18299199  double scv_262;...",shape=box];
	ForLoop18258585 [label="ForLoop18258585  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kk)+1)%22)+1; k<=min(ny-1,kk+15); k=k+1) {...",shape=box];
	ForLoop18258585 -> 18291439;
	ForLoop18258585 -> _JOIN_18258585;
	_JOIN_18252609 [label="_JOIN_18252609None...",shape=box];
	_JOIN_18252609 -> 18252641;
	18247774 [label="18247774  int i;...",shape=box];
	18247774 -> ForLoop18264599;
	18355340 [label="18355340  double scv_322, scv_323, scv_324, scv_325, scv_326, scv_327, scv_328, scv_329;...",shape=box];
	18262601 [label="18262601  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	18301139 [label="18301139  double scv_285;...",shape=box];
	ForLoop18262569 [label="ForLoop18262569  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kk)+1)%22)+1; k<=min(ny-1,kk+15); k=k+1) {...",shape=box];
	ForLoop18262569 -> 18299199;
	ForLoop18262569 -> _JOIN_18262569;
	_JOIN_18265843 [label="_JOIN_18265843None...",shape=box];
	_JOIN_18265843 -> _JOIN_18265845;
	_JOIN_18263565 [label="_JOIN_18263565None...",shape=box];
	_JOIN_18263565 -> 18263597;
	18264593 [label="18264593  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	18264593 -> _JOIN_18264595;
	18265838 [label="18265838  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	18265838 -> _JOIN_18265840;
	ForLoop18251752 [label="ForLoop18251752  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop18251752 -> ForLoop18251750;
	ForLoop18251752 -> _JOIN_18251752;
	ForLoop18251750 [label="ForLoop18251750  for (jj=jjj; jj<=min(ny-1,jjj+1984); jj=jj+64) {...",shape=box];
	ForLoop18251750 -> ForLoop18251360;
	ForLoop18251750 -> _JOIN_18251750;
	_JOIN_18264948 [label="_JOIN_18264948None...",shape=box];
	_JOIN_18264948 -> _JOIN_18264949;
	18303079 [label="18303079  double scv_308;...",shape=box];
	18136113 [label="18136113  register int cbv_1;...",shape=box];
	ForLoop18251360 [label="ForLoop18251360  for (jt=jj; jt<=min(ny-1,jj+63)-7; jt=jt+8) {...",shape=box];
	ForLoop18251360 -> 18270579;
	ForLoop18251360 -> _JOIN_18251360;
	18279799 [label="18279799  double scv_32;...",shape=box];
	_JOIN_18263485 [label="_JOIN_18263485None...",shape=box];
	_JOIN_18263485 -> ForLoop18263565;
	ForLoop18260577 [label="ForLoop18260577  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kk)+1)%22)+1; k<=min(ny-1,kk+15); k=k+1) {...",shape=box];
	ForLoop18260577 -> 18295319;
	ForLoop18260577 -> _JOIN_18260577;
	ForLoop18259501 [label="ForLoop18259501  for (k=kk; k<=min(ny-1,kk+15)-21; k=k+22) {...",shape=box];
	ForLoop18259501 -> 18292742;
	ForLoop18259501 -> _JOIN_18259501;
	_JOIN_18264599 [label="_JOIN_18264599None...",shape=box];
	_JOIN_18264599 -> ForLoop18265843;
	_JOIN_18265840 [label="_JOIN_18265840None...",shape=box];
	_JOIN_18265840 -> _JOIN_18265841;
	18254633 [label="18254633  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	18298562 [label="18298562  double scv_240, scv_241, scv_242, scv_243, scv_244, scv_245, scv_246, scv_247;...",shape=box];
	_JOIN_18264595 [label="_JOIN_18264595None...",shape=box];
	_JOIN_18264595 -> _JOIN_18264597;
	_JOIN_18264597 [label="_JOIN_18264597None...",shape=box];
	_JOIN_18264597 -> 18352537;
	18257621 [label="18257621  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	_JOIN_18265806 [label="_JOIN_18265806None...",shape=box];
	_JOIN_18265806 -> 18265838;
	_JOIN_18255597 [label="_JOIN_18255597None...",shape=box];
	_JOIN_18255597 -> 18255629;
	ForLoop18260497 [label="ForLoop18260497  for (k=kk; k<=min(ny-1,kk+15)-21; k=k+22) {...",shape=box];
	ForLoop18260497 -> 18294682;
	ForLoop18260497 -> _JOIN_18260497;
	ForLoop18251748 [label="ForLoop18251748  for (j=jt; j<=min(ny-1,jj+63); j=j+1) {...",shape=box];
	ForLoop18251748 -> 18271271;
	ForLoop18251748 -> _JOIN_18251748;
	18265011 [label="18265011  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	_JOIN_18259501 [label="_JOIN_18259501None...",shape=box];
	_JOIN_18259501 -> ForLoop18259581;
	18281102 [label="18281102  double scv_33, scv_34, scv_35, scv_36, scv_37, scv_38, scv_39, scv_40;...",shape=box];
	ForLoop18253605 [label="ForLoop18253605  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kk)+1)%22)+1; k<=min(ny-1,kk+15); k=k+1) {...",shape=box];
	ForLoop18253605 -> 18281739;
	ForLoop18253605 -> _JOIN_18253605;
	ForLoop18255517 [label="ForLoop18255517  for (k=kk; k<=min(ny-1,kk+15)-21; k=k+22) {...",shape=box];
	ForLoop18255517 -> 18284982;
	ForLoop18255517 -> _JOIN_18255517;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 18136113;
	ForLoop18261573 [label="ForLoop18261573  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kk)+1)%22)+1; k<=min(ny-1,kk+15); k=k+1) {...",shape=box];
	ForLoop18261573 -> 18297259;
	ForLoop18261573 -> _JOIN_18261573;
	18290802 [label="18290802  double scv_148, scv_149, scv_150, scv_151, scv_152, scv_153, scv_154, scv_155;...",shape=box];
	18263597 [label="18263597  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop18264599 [label="ForLoop18264599  for (i=ii; i<=min(nx-1,ii+511)-12; i=i+13) {...",shape=box];
	ForLoop18264599 -> 18352519;
	ForLoop18264599 -> _JOIN_18264599;
	18252641 [label="18252641  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	18294682 [label="18294682  double scv_194, scv_195, scv_196, scv_197, scv_198, scv_199, scv_200, scv_201;...",shape=box];
	18264723 [label="18264723  scv_345=scv_345+A[i*ny+jt]*x[jt];...",shape=box];
	ForLoop18264597 [label="ForLoop18264597  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop18264597 -> ForLoop18264595;
	ForLoop18264597 -> _JOIN_18264597;
	_JOIN_18262489 [label="_JOIN_18262489None...",shape=box];
	_JOIN_18262489 -> ForLoop18262569;
	_JOIN_18264949 [label="_JOIN_18264949None...",shape=box];
	_JOIN_18264949 -> ForLoop18265841;
	ForLoop18254521 [label="ForLoop18254521  for (k=kk; k<=min(ny-1,kk+15)-21; k=k+22) {...",shape=box];
	ForLoop18254521 -> 18283042;
	ForLoop18254521 -> _JOIN_18254521;
	18284982 [label="18284982  double scv_79, scv_80, scv_81, scv_82, scv_83, scv_84, scv_85, scv_86;...",shape=box];
	ForLoop18261493 [label="ForLoop18261493  for (k=kk; k<=min(ny-1,kk+15)-21; k=k+22) {...",shape=box];
	ForLoop18261493 -> 18296622;
	ForLoop18261493 -> _JOIN_18261493;
	18283042 [label="18283042  double scv_56, scv_57, scv_58, scv_59, scv_60, scv_61, scv_62, scv_63;...",shape=box];
	18296622 [label="18296622  double scv_217, scv_218, scv_219, scv_220, scv_221, scv_222, scv_223, scv_224;...",shape=box];
	18260609 [label="18260609  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	_JOIN_18255517 [label="_JOIN_18255517None...",shape=box];
	_JOIN_18255517 -> ForLoop18255597;
	_JOIN_18264907 [label="_JOIN_18264907None...",shape=box];
	_JOIN_18264907 -> ForLoop18264946;
	_JOIN_18259581 [label="_JOIN_18259581None...",shape=box];
	_JOIN_18259581 -> 18259613;
	_JOIN_18253605 [label="_JOIN_18253605None...",shape=box];
	_JOIN_18253605 -> 18253637;
	_JOIN_18256593 [label="_JOIN_18256593None...",shape=box];
	_JOIN_18256593 -> 18256625;
	_JOIN_18257509 [label="_JOIN_18257509None...",shape=box];
	_JOIN_18257509 -> ForLoop18257589;
	_JOIN_18254521 [label="_JOIN_18254521None...",shape=box];
	_JOIN_18254521 -> ForLoop18254601;
	18291439 [label="18291439  double scv_170;...",shape=box];
	18359564 [label="18359564  tmp[i]=scv_345;...",shape=box];
	18359564 -> _JOIN_18265843;
	ForLoop18256513 [label="ForLoop18256513  for (k=kk; k<=min(ny-1,kk+15)-21; k=k+22) {...",shape=box];
	ForLoop18256513 -> 18286922;
	ForLoop18256513 -> _JOIN_18256513;
	ForLoop18257589 [label="ForLoop18257589  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kk)+1)%22)+1; k<=min(ny-1,kk+15); k=k+1) {...",shape=box];
	ForLoop18257589 -> 18289499;
	ForLoop18257589 -> _JOIN_18257589;
	_JOIN_18251360 [label="_JOIN_18251360None...",shape=box];
	_JOIN_18251360 -> ForLoop18251748;
	18281739 [label="18281739  double scv_55;...",shape=box];
	_JOIN_18256513 [label="_JOIN_18256513None...",shape=box];
	_JOIN_18256513 -> ForLoop18256593;
	ForLoop18257509 [label="ForLoop18257509  for (k=kk; k<=min(ny-1,kk+15)-21; k=k+22) {...",shape=box];
	ForLoop18257509 -> 18288862;
	ForLoop18257509 -> _JOIN_18257509;
	18255629 [label="18255629  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop18262489 [label="ForLoop18262489  for (k=kk; k<=min(ny-1,kk+15)-21; k=k+22) {...",shape=box];
	ForLoop18262489 -> 18298562;
	ForLoop18262489 -> _JOIN_18262489;
	ForLoop18264907 [label="ForLoop18264907  for (jt=jj; jt<=min(ny-1,jj+63)-7; jt=jt+8) {...",shape=box];
	ForLoop18264907 -> 18264723;
	ForLoop18264907 -> _JOIN_18264907;
	18288862 [label="18288862  double scv_125, scv_126, scv_127, scv_128, scv_129, scv_130, scv_131, scv_132;...",shape=box];
	18251814 [label="18251814  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop18264595 [label="ForLoop18264595  for (kk=kkk; kk<=min(ny-1,kkk+1008); kk=kk+16) {...",shape=box];
	ForLoop18264595 -> 18251814;
	ForLoop18264595 -> _JOIN_18264595;
	ForLoop18256593 [label="ForLoop18256593  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kk)+1)%22)+1; k<=min(ny-1,kk+15); k=k+1) {...",shape=box];
	ForLoop18256593 -> 18287559;
	ForLoop18256593 -> _JOIN_18256593;
	18289499 [label="18289499  double scv_147;...",shape=box];
	ForLoop18265845 [label="ForLoop18265845  for (ii=iii; ii<=min(nx-1,iii+1536); ii=ii+512) {...",shape=box];
	ForLoop18265845 -> expected=9369846271501.798828
actual=9369846271501.798828
18247774;
	ForLoop18265845 -> _JOIN_18265845;
	ForLoop18265846 [label="ForLoop18265846  for (iii=0; iii<=nx-1; iii=iii+2048) {...",shape=box];
	ForLoop18265846 -> ForLoop18265845;
	ForLoop18265846 -> _JOIN_18265846;
	_JOIN_18136086 [label="_JOIN_18136086None...",shape=box];
	_JOIN_18136086 -> 18247741;
	18297259 [label="18297259  double scv_239;...",shape=box];
	ForLoop18255597 [label="ForLoop18255597  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kk)+1)%22)+1; k<=min(ny-1,kk+15); k=k+1) {...",shape=box];
	ForLoop18255597 -> 18285619;
	ForLoop18255597 -> _JOIN_18255597;
	18271271 [label="18271271  double scv_9;...",shape=box];
	18293379 [label="18293379  double scv_193;...",shape=box];
	ForLoop18136086 [label="ForLoop18136086  for (i=0; i<=cbv_1; i++ ) ...",shape=box];
	ForLoop18136086 -> 18136085;
	ForLoop18136086 -> _JOIN_18136086;
	18359552 [label="18359552  double scv_345;...",shape=box];
	ForLoop18252609 [label="ForLoop18252609  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kk)+1)%22)+1; k<=min(ny-1,kk+15); k=k+1) {...",shape=box];
	ForLoop18252609 -> 18279799;
	ForLoop18252609 -> _JOIN_18252609;
	_JOIN_18264561 [label="_JOIN_18264561None...",shape=box];
	_JOIN_18264561 -> 18264593;
	18286922 [label="18286922  double scv_102, scv_103, scv_104, scv_105, scv_106, scv_107, scv_108, scv_109;...",shape=box];
	18283679 [label="18283679  double scv_78;...",shape=box];
	18253637 [label="18253637  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	18352537 [label="18352537  tmp[(i+12)]=scv_309;...",shape=box];
	_JOIN_18265732 [label="_JOIN_18265732None...",shape=box];
	_JOIN_18265732 -> ForLoop18265806;
	18285619 [label="18285619  double scv_101;...",shape=box];
	18264945 [label="18264945  scv_345=scv_345+A[i*ny+j]*x[j];...",shape=box];
	18264945 -> _JOIN_18264946;
	_JOIN_18261493 [label="_JOIN_18261493None...",shape=box];
	_JOIN_18261493 -> ForLoop18261573;
	_JOIN_18257589 [label="_JOIN_18257589None...",shape=box];
	_JOIN_18257589 -> 18257621;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest81.exe __orio_perftest81.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest81.exe  
{'[6, 3, 1, 6, 6, 5, 0, 1, 0, 12, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.243334}
{'[6, 3, 1, 6, 6, 5, 0, 1, 0, 12, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.242955}
{'[6, 3, 1, 6, 6, 5, 0, 1, 0, 12, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.242906}
{'[6, 3, 1, 6, 6, 5, 0, 1, 0, 12, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.243499}
{'[6, 3, 1, 6, 6, 5, 0, 1, 0, 12, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.24279}
{'[6, 3, 1, 6, 6, 5, 0, 1, 0, 12, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.242923}
{'[6, 3, 1, 6, 6, 5, 0, 1, 0, 12, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.24285}
{'[6, 3, 1, 6, 6, 5, 0, 1, 0, 12, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.242997}
{'[6, 3, 1, 6, 6, 5, 0, 1, 0, 12, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.242889}
{'[6, 3, 1, 6, 6, 5, 0, 1, 0, 12, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.242969}
{'[6, 3, 1, 6, 6, 5, 0, 1, 0, 12, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.243045}
{'[6, 3, 1, 6, 6, 5, 0, 1, 0, 12, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.243048}
{'[6, 3, 1, 6, 6, 5, 0, 1, 0, 12, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.242998}
{'[6, 3, 1, 6, 6, 5, 0, 1, 0, 12, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.242881}
{'[6, 3, 1, 6, 6, 5, 0, 1, 0, 12, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.243018}
{'[6, 3, 1, 6, 6, 5, 0, 1, 0, 12, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.243072}
{'[6, 3, 1, 6, 6, 5, 0, 1, 0, 12, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.24317}
{'[6, 3, 1, 6, 6, 5, 0, 1, 0, 12, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.243011}
{'[6, 3, 1, 6, 6, 5, 0, 1, 0, 12, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.243027}
{'[6, 3, 1, 6, 6, 5, 0, 1, 0, 12, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.243123}
{'[6, 3, 1, 6, 6, 5, 0, 1, 0, 12, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.242801}
{'[6, 3, 1, 6, 6, 5, 0, 1, 0, 12, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.242864}
{'[6, 3, 1, 6, 6, 5, 0, 1, 0, 12, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.243222}
{'[6, 3, 1, 6, 6, 5, 0, 1, 0, 12, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.242925}
{'[6, 3, 1, 6, 6, 5, 0, 1, 0, 12, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.24299}
{'[6, 3, 1, 6, 6, 5, 0, 1, 0, 12, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.242849}
{'[6, 3, 1, 6, 6, 5, 0, 1, 0, 12, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.242912}
{'[6, 3, 1, 6, 6, 5, 0, 1, 0, 12, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.24291}
{'[6, 3, 1, 6, 6, 5, 0, 1, 0, 12, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.243343}
{'[6, 3, 1, 6, 6, 5, 0, 1, 0, 12, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.24292}

out:
 ["{'[6, 3, 1, 6, 6, 5, 0, 1, 0, 12, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.243334}", "{'[6, 3, 1, 6, 6, 5, 0, 1, 0, 12, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.242955}", "{'[6, 3, 1, 6, 6, 5, 0, 1, 0, 12, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.242906}", "{'[6, 3, 1, 6, 6, 5, 0, 1, 0, 12, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.243499}", "{'[6, 3, 1, 6, 6, 5, 0, 1, 0, 12, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.24279}", "{'[6, 3, 1, 6, 6, 5, 0, 1, 0, 12, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.242923}", "{'[6, 3, 1, 6, 6, 5, 0, 1, 0, 12, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.24285}", "{'[6, 3, 1, 6, 6, 5, 0, 1, 0, 12, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.242997}", "{'[6, 3, 1, 6, 6, 5, 0, 1, 0, 12, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.242889}", "{'[6, 3, 1, 6, 6, 5, 0, 1, 0, 12, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.242969}", "{'[6, 3, 1, 6, 6, 5, 0, 1, 0, 12, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.243045}", "{'[6, 3, 1, 6, 6, 5, 0, 1, 0, 12, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.243048}", "{'[6, 3, 1, 6, 6, 5, 0, 1, 0, 12, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.242998}", "{'[6, 3, 1, 6, 6, 5, 0, 1, 0, 12, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.242881}", "{'[6, 3, 1, 6, 6, 5, 0, 1, 0, 12, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.243018}", "{'[6, 3, 1, 6, 6, 5, 0, 1, 0, 12, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.243072}", "{'[6, 3, 1, 6, 6, 5, 0, 1, 0, 12, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.24317}", "{'[6, 3, 1, 6, 6, 5, 0, 1, 0, 12, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.243011}", "{'[6, 3, 1, 6, 6, 5, 0, 1, 0, 12, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.243027}", "{'[6, 3, 1, 6, 6, 5, 0, 1, 0, 12, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.243123}", "{'[6, 3, 1, 6, 6, 5, 0, 1, 0, 12, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.242801}", "{'[6, 3, 1, 6, 6, 5, 0, 1, 0, 12, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.242864}", "{'[6, 3, 1, 6, 6, 5, 0, 1, 0, 12, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.243222}", "{'[6, 3, 1, 6, 6, 5, 0, 1, 0, 12, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.242925}", "{'[6, 3, 1, 6, 6, 5, 0, 1, 0, 12, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.24299}", "{'[6, 3, 1, 6, 6, 5, 0, 1, 0, 12, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.242849}", "{'[6, 3, 1, 6, 6, 5, 0, 1, 0, 12, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.242912}", "{'[6, 3, 1, 6, 6, 5, 0, 1, 0, 12, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.24291}", "{'[6, 3, 1, 6, 6, 5, 0, 1, 0, 12, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.243343}", "{'[6, 3, 1, 6, 6, 5, 0, 1, 0, 12, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.24292}"]
returning from 'run': {'[6, 3, 1, 6, 6, 5, 0, 1, 0, 12, 0, 21, 0, 1, 0, 1, 1, 0]': ([0.243334, 0.242955, 0.242906, 0.243499, 0.24279, 0.242923, 0.24285, 0.242997, 0.242889, 0.242969, 0.243045, 0.243048, 0.242998, 0.242881, 0.243018, 0.243072, 0.24317, 0.243011, 0.243027, 0.243123, 0.242801, 0.242864, 0.243222, 0.242925, 0.24299, 0.242849, 0.242912, 0.24291, 0.243343, 0.24292], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.243334, 0.242955, 0.242906, 0.243499, 0.24279, 0.242923, 0.24285, 0.242997, 0.242889, 0.242969, 0.243045, 0.243048, 0.242998, 0.242881, 0.243018, 0.243072, 0.24317, 0.243011, 0.243027, 0.243123, 0.242801, 0.242864, 0.243222, 0.242925, 0.24299, 0.242849, 0.242912, 0.24291, 0.243343, 0.24292], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[6, 3, 1, 6, 6, 5, 0, 1, 0, 12, 0, 21, 0, 1, 0, 1, 1, 0]': ([0.243334, 0.242955, 0.242906, 0.243499, 0.24279, 0.242923, 0.24285, 0.242997, 0.242889, 0.242969, 0.243045, 0.243048, 0.242998, 0.242881, 0.243018, 0.243072, 0.24317, 0.243011, 0.243027, 0.243123, 0.242801, 0.242864, 0.243222, 0.242925, 0.24299, 0.242849, 0.242912, 0.24291, 0.243343, 0.24292], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [0, 1, 5, 1, 0, 1, 23, 0, 26, 24, 1, 0, 1, 0]
Fixed Factors: {'T2_K': 5, 'T2_J': 6, 'SCR': 1, 'VEC1': 1}
Testing candidate 11: [0, 1, 5, 1, 6, 5, 0, 1, 23, 0, 26, 24, 1, 0, 1, 1, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	23
        Max loop nest depth: 	5
        Additions: 		1438
        Multiplications: 	648
        Divisions: 		0
        Logical: 		0
        Reads: 			2797
        Writes: 		482
        Comparisons:		23
        Gotos: 			0
        
digraph CFG {
	_JOIN_18536162 [label="_JOIN_18536162None...",shape=box];
	_JOIN_18536162 -> _JOIN_18536163;
	ForLoop18396358 [label="ForLoop18396358  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop18396358 -> 18396357;
	ForLoop18396358 -> _JOIN_18396358;
	_JOIN_18536160 [label="_JOIN_18536160None...",shape=box];
	_JOIN_18536160 -> _JOIN_18536162;
	_JOIN_18536163 [label="_JOIN_18536163None...",shape=box];
	_JOIN_18536163 -> ForLoop18538785;
	18396080 [label="18396080  y[i]=0.0;...",shape=box];
	18528733 [label="18528733  double x_copy;...",shape=box];
	18536225 [label="18536225  for (k=kk; k<=min(ny-1,kk+255); k=k+1) ...",shape=box];
	18536225 -> ForLoop18538751;
	18539602 [label="18539602  scv_53=scv_53+A[i*ny+j]*x[j];...",shape=box];
	18539602 -> _JOIN_18539603;
	18396615 [label="18396615  register int cbv_2, cbv_3;...",shape=box];
	18528805 [label="18528805  int j;...",shape=box];
	18528805 -> ForLoop18535888;
	_JOIN_18539995 [label="_JOIN_18539995None...",shape=box];
	_JOIN_18539995 -> 18585670;
	ForLoop18539961 [label="ForLoop18539961  for (kt=kk; kt<=min(ny-1,kk+255)-7; kt=kt+8) {...",shape=box];
	ForLoop18539961 -> 18583298;
	ForLoop18539961 -> _JOIN_18539961;
	18549775 [label="18549775  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	_JOIN_18396289 [label="_JOIN_18396289None...",shape=box];
	_JOIN_18396289 -> 18396615;
	ForLoop18539535 [label="ForLoop18539535  for (j=jj; j<=min(ny-1,jj+15)-26; j=j+27) {...",shape=box];
	ForLoop18539535 -> 18538883;
	ForLoop18539535 -> _JOIN_18539535;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 18395678;
	18550606 [label="18550606  double scv_28;...",shape=box];
	ForLoop18396289 [label="ForLoop18396289  for (i=0; i<=cbv_1; i=i+24) {...",shape=box];
	ForLoop18396289 -> 18396080;
	ForLoop18396289 -> _JOIN_18396289;
	_JOIN_18539999 [label="_JOIN_18539999None...",shape=box];
	18585670 [label="18585670  tmp[i]=scv_53;...",shape=box];
	18585670 -> _JOIN_18539997;
	18539668 [label="18539668  for (k=kk; k<=min(ny-1,kk+255); k=k+1) ...",shape=box];
	18539668 -> ForLoop18539961;
	18538883 [label="18538883  scv_53=scv_53+A[i*ny+j]*x[j];...",shape=box];
	18583298 [label="18583298  double scv_45, scv_46, scv_47, scv_48, scv_49, scv_50, scv_51, scv_52;...",shape=box];
	ForLoop18538751 [label="ForLoop18538751  for (kt=kk; kt<=min(ny-1,kk+255)-7; kt=kt+8) {...",shape=box];
	ForLoop18538751 -> 18567102;
	ForLoop18538751 -> _JOIN_18538751;
	ForLoop18539997 [label="ForLoop18539997  for (i=it; i<=min(nx-1,iii+63); i=i+1) {...",shape=box];
	ForLoop18539997 -> 18585658;
	ForLoop18539997 -> _JOIN_18539997;
	ForLoop18539995 [label="ForLoop18539995  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop18539995 -> ForLoop18539994;
	ForLoop18539995 -> _JOIN_18539995;
	18585658 [label="18585658  double scv_53;...",shape=box];
	ForLoop18535888 [label="ForLoop18535888  for (j=jj; j<=min(ny-1,jj+15)-26; j=j+27) {...",shape=box];
	ForLoop18535888 -> 18549775;
	ForLoop18535888 -> _JOIN_18535888;
	18579486 [label="18579486  double scv_37, scv_38, scv_39, scv_40, scv_41, scv_42, scv_43, scv_44;...",shape=box];
	_JOIN_18539605 [label="_JOIN_18539605None...",shape=box];
	_JOIN_18539605 -> _JOIN_18539606;
	_JOIN_18539603 [label="_JOIN_18539603None...",shape=box];
	_JOIN_18539603 -> _JOIN_18539605;
	18579498 [label="18579498  tmp[it]=scv_37;...",shape=box];
	ForLoop18538784 [label="ForLoop18538784  for (kk=kkk; kk<=min(ny-1,kkk+768); kk=kk+256) {...",shape=box];
	ForLoop18538784 -> 18536225;
	ForLoop18538784 -> _JOIN_18538784;
	ForLoop18538785 [label="ForLoop18538785  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop18538785 -> ForLoop18expected=9369846271501.798828
actual=9369846271501.798828
538784;
	ForLoop18538785 -> _JOIN_18538785;
	ForLoop18538787 [label="ForLoop18538787  for (it=iii; it<=min(nx-1,iii+63)-7; it=it+8) {...",shape=box];
	ForLoop18538787 -> 18579486;
	ForLoop18538787 -> _JOIN_18538787;
	18567102 [label="18567102  double scv_29, scv_30, scv_31, scv_32, scv_33, scv_34, scv_35, scv_36;...",shape=box];
	ForLoop18539603 [label="ForLoop18539603  for (j=(min(ny-1,jj+15))-(((min(ny-1,jj+15))-(jj)+1)%27)+1; j<=min(ny-1,jj+15); j=j+1) {...",shape=box];
	ForLoop18539603 -> 18539602;
	ForLoop18539603 -> _JOIN_18539603;
	ForLoop18539999 [label="ForLoop18539999  for (iii=0; iii<=nx-1; iii=iii+64) {...",shape=box];
	ForLoop18539999 -> ForLoop18538787;
	ForLoop18539999 -> _JOIN_18539999;
	ForLoop18539606 [label="ForLoop18539606  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop18539606 -> ForLoop18539605;
	ForLoop18539606 -> _JOIN_18539606;
	_JOIN_18539997 [label="_JOIN_18539997None...",shape=box];
	_JOIN_18539997 -> _JOIN_18539999;
	_JOIN_18539994 [label="_JOIN_18539994None...",shape=box];
	_JOIN_18539994 -> _JOIN_18539995;
	ForLoop18539605 [label="ForLoop18539605  for (jj=jjj; jj<=min(ny-1,jjj+2032); jj=jj+16) {...",shape=box];
	ForLoop18539605 -> 18538843;
	ForLoop18539605 -> _JOIN_18539605;
	_JOIN_18539606 [label="_JOIN_18539606None...",shape=box];
	_JOIN_18539606 -> ForLoop18539995;
	_JOIN_18538784 [label="_JOIN_18538784None...",shape=box];
	_JOIN_18538784 -> _JOIN_18538785;
	_JOIN_18538785 [label="_JOIN_18538785None...",shape=box];
	_JOIN_18538785 -> 18579498;
	ForLoop18539994 [label="ForLoop18539994  for (kk=kkk; kk<=min(ny-1,kkk+768); kk=kk+256) {...",shape=box];
	ForLoop18539994 -> 18539668;
	ForLoop18539994 -> _JOIN_18539994;
	_JOIN_18538787 [label="_JOIN_18538787None...",shape=box];
	_JOIN_18538787 -> ForLoop18539997;
	_JOIN_18539535 [label="_JOIN_18539535None...",shape=box];
	_JOIN_18539535 -> ForLoop18539603;
	18396357 [label="18396357  y[i]=0.0;...",shape=box];
	18396357 -> _JOIN_18396358;
	ForLoop18536162 [label="ForLoop18536162  for (jj=jjj; jj<=min(ny-1,jjj+2032); jj=jj+16) {...",shape=box];
	ForLoop18536162 -> 18528805;
	ForLoop18536162 -> _JOIN_18536162;
	ForLoop18536163 [label="ForLoop18536163  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop18536163 -> ForLoop18536162;
	ForLoop18536163 -> _JOIN_18536163;
	ForLoop18536160 [label="ForLoop18536160  for (j=(min(ny-1,jj+15))-(((min(ny-1,jj+15))-(jj)+1)%27)+1; j<=min(ny-1,jj+15); j=j+1) {...",shape=box];
	ForLoop18536160 -> 18550606;
	ForLoop18536160 -> _JOIN_18536160;
	_JOIN_18538751 [label="_JOIN_18538751None...",shape=box];
	_JOIN_18538751 -> 18538782;
	_JOIN_18396358 [label="_JOIN_18396358None...",shape=box];
	_JOIN_18396358 -> 18528733;
	18395678 [label="18395678  int i;...",shape=box];
	18538843 [label="18538843  int j;...",shape=box];
	18538843 -> ForLoop18539535;
	18538782 [label="18538782  for (k=kk; k<=min(ny-1,kk+255); k=k+1) ...",shape=box];
	18538782 -> _JOIN_18538784;
	_JOIN_18535888 [label="_JOIN_18535888None...",shape=box];
	_JOIN_18535888 -> ForLoop18536160;
	_JOIN_18539961 [label="_JOIN_18539961None...",shape=box];
	_JOIN_18539961 -> 18539992;
	18539992 [label="18539992  for (k=kk; k<=min(ny-1,kk+255); k=k+1) ...",shape=box];
	18539992 -> _JOIN_18539994;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest82.exe __orio_perftest82.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest82.exe  
{'[0, 1, 5, 1, 6, 5, 0, 1, 23, 0, 26, 24, 1, 0, 1, 1, 1, 0]' : 0.079133}
{'[0, 1, 5, 1, 6, 5, 0, 1, 23, 0, 26, 24, 1, 0, 1, 1, 1, 0]' : 0.0787439}
{'[0, 1, 5, 1, 6, 5, 0, 1, 23, 0, 26, 24, 1, 0, 1, 1, 1, 0]' : 0.0788441}
{'[0, 1, 5, 1, 6, 5, 0, 1, 23, 0, 26, 24, 1, 0, 1, 1, 1, 0]' : 0.0787489}
{'[0, 1, 5, 1, 6, 5, 0, 1, 23, 0, 26, 24, 1, 0, 1, 1, 1, 0]' : 0.0786421}
{'[0, 1, 5, 1, 6, 5, 0, 1, 23, 0, 26, 24, 1, 0, 1, 1, 1, 0]' : 0.0786898}
{'[0, 1, 5, 1, 6, 5, 0, 1, 23, 0, 26, 24, 1, 0, 1, 1, 1, 0]' : 0.0787141}
{'[0, 1, 5, 1, 6, 5, 0, 1, 23, 0, 26, 24, 1, 0, 1, 1, 1, 0]' : 0.0787189}
{'[0, 1, 5, 1, 6, 5, 0, 1, 23, 0, 26, 24, 1, 0, 1, 1, 1, 0]' : 0.0787411}
{'[0, 1, 5, 1, 6, 5, 0, 1, 23, 0, 26, 24, 1, 0, 1, 1, 1, 0]' : 0.078716}
{'[0, 1, 5, 1, 6, 5, 0, 1, 23, 0, 26, 24, 1, 0, 1, 1, 1, 0]' : 0.0786541}
{'[0, 1, 5, 1, 6, 5, 0, 1, 23, 0, 26, 24, 1, 0, 1, 1, 1, 0]' : 0.078675}
{'[0, 1, 5, 1, 6, 5, 0, 1, 23, 0, 26, 24, 1, 0, 1, 1, 1, 0]' : 0.078743}
{'[0, 1, 5, 1, 6, 5, 0, 1, 23, 0, 26, 24, 1, 0, 1, 1, 1, 0]' : 0.0787179}
{'[0, 1, 5, 1, 6, 5, 0, 1, 23, 0, 26, 24, 1, 0, 1, 1, 1, 0]' : 0.0788519}
{'[0, 1, 5, 1, 6, 5, 0, 1, 23, 0, 26, 24, 1, 0, 1, 1, 1, 0]' : 0.0801871}
{'[0, 1, 5, 1, 6, 5, 0, 1, 23, 0, 26, 24, 1, 0, 1, 1, 1, 0]' : 0.078716}
{'[0, 1, 5, 1, 6, 5, 0, 1, 23, 0, 26, 24, 1, 0, 1, 1, 1, 0]' : 0.078711}
{'[0, 1, 5, 1, 6, 5, 0, 1, 23, 0, 26, 24, 1, 0, 1, 1, 1, 0]' : 0.078748}
{'[0, 1, 5, 1, 6, 5, 0, 1, 23, 0, 26, 24, 1, 0, 1, 1, 1, 0]' : 0.0787859}
{'[0, 1, 5, 1, 6, 5, 0, 1, 23, 0, 26, 24, 1, 0, 1, 1, 1, 0]' : 0.0786948}
{'[0, 1, 5, 1, 6, 5, 0, 1, 23, 0, 26, 24, 1, 0, 1, 1, 1, 0]' : 0.0786631}
{'[0, 1, 5, 1, 6, 5, 0, 1, 23, 0, 26, 24, 1, 0, 1, 1, 1, 0]' : 0.0787089}
{'[0, 1, 5, 1, 6, 5, 0, 1, 23, 0, 26, 24, 1, 0, 1, 1, 1, 0]' : 0.0786681}
{'[0, 1, 5, 1, 6, 5, 0, 1, 23, 0, 26, 24, 1, 0, 1, 1, 1, 0]' : 0.078692}
{'[0, 1, 5, 1, 6, 5, 0, 1, 23, 0, 26, 24, 1, 0, 1, 1, 1, 0]' : 0.078773}
{'[0, 1, 5, 1, 6, 5, 0, 1, 23, 0, 26, 24, 1, 0, 1, 1, 1, 0]' : 0.0787449}
{'[0, 1, 5, 1, 6, 5, 0, 1, 23, 0, 26, 24, 1, 0, 1, 1, 1, 0]' : 0.078846}
{'[0, 1, 5, 1, 6, 5, 0, 1, 23, 0, 26, 24, 1, 0, 1, 1, 1, 0]' : 0.0788031}
{'[0, 1, 5, 1, 6, 5, 0, 1, 23, 0, 26, 24, 1, 0, 1, 1, 1, 0]' : 0.078685}

out:
 ["{'[0, 1, 5, 1, 6, 5, 0, 1, 23, 0, 26, 24, 1, 0, 1, 1, 1, 0]' : 0.079133}", "{'[0, 1, 5, 1, 6, 5, 0, 1, 23, 0, 26, 24, 1, 0, 1, 1, 1, 0]' : 0.0787439}", "{'[0, 1, 5, 1, 6, 5, 0, 1, 23, 0, 26, 24, 1, 0, 1, 1, 1, 0]' : 0.0788441}", "{'[0, 1, 5, 1, 6, 5, 0, 1, 23, 0, 26, 24, 1, 0, 1, 1, 1, 0]' : 0.0787489}", "{'[0, 1, 5, 1, 6, 5, 0, 1, 23, 0, 26, 24, 1, 0, 1, 1, 1, 0]' : 0.0786421}", "{'[0, 1, 5, 1, 6, 5, 0, 1, 23, 0, 26, 24, 1, 0, 1, 1, 1, 0]' : 0.0786898}", "{'[0, 1, 5, 1, 6, 5, 0, 1, 23, 0, 26, 24, 1, 0, 1, 1, 1, 0]' : 0.0787141}", "{'[0, 1, 5, 1, 6, 5, 0, 1, 23, 0, 26, 24, 1, 0, 1, 1, 1, 0]' : 0.0787189}", "{'[0, 1, 5, 1, 6, 5, 0, 1, 23, 0, 26, 24, 1, 0, 1, 1, 1, 0]' : 0.0787411}", "{'[0, 1, 5, 1, 6, 5, 0, 1, 23, 0, 26, 24, 1, 0, 1, 1, 1, 0]' : 0.078716}", "{'[0, 1, 5, 1, 6, 5, 0, 1, 23, 0, 26, 24, 1, 0, 1, 1, 1, 0]' : 0.0786541}", "{'[0, 1, 5, 1, 6, 5, 0, 1, 23, 0, 26, 24, 1, 0, 1, 1, 1, 0]' : 0.078675}", "{'[0, 1, 5, 1, 6, 5, 0, 1, 23, 0, 26, 24, 1, 0, 1, 1, 1, 0]' : 0.078743}", "{'[0, 1, 5, 1, 6, 5, 0, 1, 23, 0, 26, 24, 1, 0, 1, 1, 1, 0]' : 0.0787179}", "{'[0, 1, 5, 1, 6, 5, 0, 1, 23, 0, 26, 24, 1, 0, 1, 1, 1, 0]' : 0.0788519}", "{'[0, 1, 5, 1, 6, 5, 0, 1, 23, 0, 26, 24, 1, 0, 1, 1, 1, 0]' : 0.0801871}", "{'[0, 1, 5, 1, 6, 5, 0, 1, 23, 0, 26, 24, 1, 0, 1, 1, 1, 0]' : 0.078716}", "{'[0, 1, 5, 1, 6, 5, 0, 1, 23, 0, 26, 24, 1, 0, 1, 1, 1, 0]' : 0.078711}", "{'[0, 1, 5, 1, 6, 5, 0, 1, 23, 0, 26, 24, 1, 0, 1, 1, 1, 0]' : 0.078748}", "{'[0, 1, 5, 1, 6, 5, 0, 1, 23, 0, 26, 24, 1, 0, 1, 1, 1, 0]' : 0.0787859}", "{'[0, 1, 5, 1, 6, 5, 0, 1, 23, 0, 26, 24, 1, 0, 1, 1, 1, 0]' : 0.0786948}", "{'[0, 1, 5, 1, 6, 5, 0, 1, 23, 0, 26, 24, 1, 0, 1, 1, 1, 0]' : 0.0786631}", "{'[0, 1, 5, 1, 6, 5, 0, 1, 23, 0, 26, 24, 1, 0, 1, 1, 1, 0]' : 0.0787089}", "{'[0, 1, 5, 1, 6, 5, 0, 1, 23, 0, 26, 24, 1, 0, 1, 1, 1, 0]' : 0.0786681}", "{'[0, 1, 5, 1, 6, 5, 0, 1, 23, 0, 26, 24, 1, 0, 1, 1, 1, 0]' : 0.078692}", "{'[0, 1, 5, 1, 6, 5, 0, 1, 23, 0, 26, 24, 1, 0, 1, 1, 1, 0]' : 0.078773}", "{'[0, 1, 5, 1, 6, 5, 0, 1, 23, 0, 26, 24, 1, 0, 1, 1, 1, 0]' : 0.0787449}", "{'[0, 1, 5, 1, 6, 5, 0, 1, 23, 0, 26, 24, 1, 0, 1, 1, 1, 0]' : 0.078846}", "{'[0, 1, 5, 1, 6, 5, 0, 1, 23, 0, 26, 24, 1, 0, 1, 1, 1, 0]' : 0.0788031}", "{'[0, 1, 5, 1, 6, 5, 0, 1, 23, 0, 26, 24, 1, 0, 1, 1, 1, 0]' : 0.078685}"]
returning from 'run': {'[0, 1, 5, 1, 6, 5, 0, 1, 23, 0, 26, 24, 1, 0, 1, 1, 1, 0]': ([0.079133, 0.0787439, 0.0788441, 0.0787489, 0.0786421, 0.0786898, 0.0787141, 0.0787189, 0.0787411, 0.078716, 0.0786541, 0.078675, 0.078743, 0.0787179, 0.0788519, 0.0801871, 0.078716, 0.078711, 0.078748, 0.0787859, 0.0786948, 0.0786631, 0.0787089, 0.0786681, 0.078692, 0.078773, 0.0787449, 0.078846, 0.0788031, 0.078685], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.079133, 0.0787439, 0.0788441, 0.0787489, 0.0786421, 0.0786898, 0.0787141, 0.0787189, 0.0787411, 0.078716, 0.0786541, 0.078675, 0.078743, 0.0787179, 0.0788519, 0.0801871, 0.078716, 0.078711, 0.078748, 0.0787859, 0.0786948, 0.0786631, 0.0787089, 0.0786681, 0.078692, 0.078773, 0.0787449, 0.078846, 0.0788031, 0.078685], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 5, 1, 6, 5, 0, 1, 23, 0, 26, 24, 1, 0, 1, 1, 1, 0]': ([0.079133, 0.0787439, 0.0788441, 0.0787489, 0.0786421, 0.0786898, 0.0787141, 0.0787189, 0.0787411, 0.078716, 0.0786541, 0.078675, 0.078743, 0.0787179, 0.0788519, 0.0801871, 0.078716, 0.078711, 0.078748, 0.0787859, 0.0786948, 0.0786631, 0.0787089, 0.0786681, 0.078692, 0.078773, 0.0787449, 0.078846, 0.0788031, 0.078685], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [2, 5, 4, 0, 0, 1, 6, 4, 0, 3, 1, 0, 1, 0]
Fixed Factors: {'T2_K': 5, 'T2_J': 6, 'SCR': 1, 'VEC1': 1}
Testing candidate 12: [2, 5, 4, 0, 6, 5, 0, 1, 6, 4, 0, 3, 1, 0, 1, 1, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	38
        Max loop nest depth: 	5
        Additions: 		703
        Multiplications: 	252
        Divisions: 		0
        Logical: 		0
        Reads: 			1518
        Writes: 		312
        Comparisons:		38
        Gotos: 			0
        
digraph CFG {
	_JOIN_18688002 [label="_JOIN_18688002None...",shape=box];
	_JOIN_18688002 -> 18688003;
	_JOIN_18689906 [label="_JOIN_18689906None...",shape=box];
	_JOIN_18689906 -> 18689937;
	ForLoop18687999 [label="ForLoop18687999  for (kk=kkk; kk<=min(ny-1,kkk+896); kk=kk+128) {...",shape=box];
	ForLoop18687999 -> 18685440;
	ForLoop18687999 -> _JOIN_18687999;
	ForLoop18688254 [label="ForLoop18688254  for (jj=jjj; jj<=min(ny-1,jjj+1792); jj=jj+256) {...",shape=box];
	ForLoop18688254 -> ForLoop18688252;
	ForLoop18688254 -> _JOIN_18688254;
	ForLoop18688256 [label="ForLoop18688256  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop18688256 -> ForLoop18688254;
	ForLoop18688256 -> _JOIN_18688256;
	ForLoop18690191 [label="ForLoop18690191  for (jj=jjj; jj<=min(ny-1,jjj+1792); jj=jj+256) {...",shape=box];
	ForLoop18690191 -> ForLoop18690190;
	ForLoop18690191 -> _JOIN_18690191;
	_JOIN_18688254 [label="_JOIN_18688254None...",shape=box];
	_JOIN_18688254 -> _JOIN_18688256;
	18694842 [label="18694842  double scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8, scv_9;...",shape=box];
	_JOIN_18593539 [label="_JOIN_18593539None...",shape=box];
	_JOIN_18593539 -> 18593712;
	ForLoop18690192 [label="ForLoop18690192  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop18690192 -> ForLoop18690191;
	ForLoop18690192 -> _JOIN_18690192;
	ForLoop18685376 [label="ForLoop18685376  for (j=jj; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop18685376 -> 18690948;
	ForLoop18685376 -> _JOIN_18685376;
	ForLoop18685377 [label="ForLoop18685377  for (jj=jjj; jj<=min(ny-1,jjj+1792); jj=jj+256) {...",shape=box];
	ForLoop18685377 -> ForLoop18685376;
	ForLoop18685377 -> _JOIN_18685377;
	ForLoop18685378 [label="ForLoop18685378  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop18685378 -> ForLoop18685377;
	ForLoop18685378 -> _JOIN_18685378;
	_JOIN_18690063 [label="_JOIN_18690063None...",shape=box];
	_JOIN_18690063 -> _JOIN_18690065;
	ForLoop18690586 [label="ForLoop18690586  for (ii=0; ii<=nx-1; ii=ii+32) {...",shape=box];
	ForLoop18690586 -> ForLoop18688002;
	ForLoop18690586 -> _JOIN_18690586;
	ForLoop18690581 [label="ForLoop18690581  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop18690581 -> ForLoop18690580;
	ForLoop18690581 -> _JOIN_18690581;
	_JOIN_18690067 [label="_JOIN_18690067None...",shape=box];
	_JOIN_18690067 -> ForLoop18690583;
	_JOIN_18593608 [label="_JOIN_18593608None...",shape=box];
	_JOIN_18593608 -> 18685062;
	_JOIN_18690065 [label="_JOIN_18690065None...",shape=box];
	_JOIN_18690065 -> 18708518;
	_JOIN_18690586 [label="_JOIN_18690586None...",shape=box];
	18700925 [label="18700925  double scv_10, scv_11, scv_12, scv_13, scv_14, scv_15, scv_16, scv_17;...",shape=box];
	_JOIN_18690580 [label="_JOIN_18690580None...",shape=box];
	_JOIN_18690580 -> _JOIN_18690581;
	_JOIN_18690583 [label="_JOIN_18690583None...",shape=box];
	_JOIN_18690583 -> _JOIN_18690586;
	ForLoop18689906 [label="ForLoop18689906  for (kt=kk; kt<=min(ny-1,kk+127)-7; kt=kt+8) {...",shape=box];
	ForLoop18689906 -> 18703700;
	ForLoop18689906 -> _JOIN_18689906;
	18687997 [label="18687997  for (k=kk; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	18687997 -> _JOIN_18687999;
	_JOIN_18685376 [label="_JOIN_18685376None...",shape=box];
	_JOIN_18685376 -> _JOIN_18685377;
	_JOIN_18685377 [label="_JOIN_18685377None...",shape=box];
	_JOIN_18685377 -> _JOIN_18685378;
	18688003 [label="18688003  int i;...",shape=box];
	18688003 -> ForLoop18690067;
	ForLoop18690580 [label="ForLoop18690580  for (kk=kkk; kk<=min(ny-1,kkk+896); kk=kk+128) {...",shape=box];
	ForLoop18690580 -> 18690254;
	ForLoop18690580 -> _JOIN_18690580;
	18703700 [label="18703700  double scv_19, scv_20, scv_21, scv_22, scv_23, scv_24, scv_25, scv_26;...",shape=box];
	ForLoop18688000 [label="ForLoop18688000  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop18688000 -> ForLoop18687999;
	ForLoop18688000 -> _JOIN_18688000;
	18593712 [label="18593712  register int cbv_2, cbv_3;...",shape=box];
	ForLoop18688002 [label="ForLoop18688002  for (it=ii; it<=min(nx-1,ii+31)-7; it=it+8) {...",shape=box];
	ForLoop18688002 -> 18700925;
	ForLoop18688002 -> _JOIN_18688002;
	18708518 [label="18708518  tmp[(i+2)]=scv_27;...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 18593336;
	18689937 [label="18689937  for (k=kk; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	ForLoop18690067 [label="ForLoop18690067  for (i=it; i<=min(nx-1,ii+31)-4; i=i+5) {...",shape=box];
	ForLoop18690067 -> 18708500;
	ForLoop18690067 -> _JOIN_18690067;
	ForLoop18690190 [label="ForLoop18690190  for (j=jj; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop18690190 -> 18690189;
	ForLoop18690190 -> _JOIN_18690190;
	ForLoop18690065 [label="ForLoop18690065  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop18690065 -> ForLoop18690063;
	ForLoop18690065 -> _JOIN_18690065;
	18690189 [label="18690189  scv_40=scv_40+A[i*ny+j]*x[j];...",shape=box];
	18690189 -> _JOIN_18690190;
	_JOIN_18688252 [label="_JOIN_18688252None...",shape=box];
	_JOIN_18688252 -> _JOIN_18688254;
	18685440 [label="18685440  for (k=kk; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	18685440 -> ForLoop18687966;
	_JOIN_18690191 [label="_JOIN_18690191None...",shape=box];
	_JOIN_18690191 -> _JOIN_18690192;
	_JOIN_18687966 [label="_JOIN_18687966None...",shape=box];
	_JOIN_18687966 -> 18687997;
	18709240 [label="18709240  double scv_32, scv_33, scv_34, scv_35, scv_36, scv_37, scv_38, scv_39;...",shape=box];
	18690578 [label="18690578  for (k=kk; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	18690578 -> _JOIN_18690580;
	_JOIN_18690547 [label="_JOIN_18690547None...",shape=box];
	_JOIN_18690547 -> 18690578;
	18710907 [label="18710907  double scv_40;...",shape=box];
	_JOIN_18690581 [label="_JOIN_18690581None...",shape=box];
	_JOIN_18690581 -> 18710919;
	18690948 [label="18690948  double scv_1;...",shape=box];
	ForLoop18688252 [label="ForLoop18688252  for (j=jj; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop18688252 -> 18701378;
	ForLoop18688252 -> _JOIN_18688252;
	ForLoop18593608 [label="ForLoop18593608  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop18593608 -> 18593607;
	ForLoop18593608 -> _JOIN_18593608;
	_JOIN_18685378 [label="_JOIN_18685378None...",shape=box];
	_JOIN_18685378 -> ForLoop18688000;
	18688318 [expected=9369846271501.798828
actual=9369846271501.798828
label="18688318  for (k=kk; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	ForLoop18690583 [label="ForLoop18690583  for (i=(min(nx-1,ii+31))-(((min(nx-1,ii+31))-(it)+1)%5)+1; i<=min(nx-1,ii+31); i=i+1) {...",shape=box];
	ForLoop18690583 -> 18710907;
	ForLoop18690583 -> _JOIN_18690583;
	ForLoop18690547 [label="ForLoop18690547  for (kt=kk; kt<=min(ny-1,kk+127)-7; kt=kt+8) {...",shape=box];
	ForLoop18690547 -> 18709240;
	ForLoop18690547 -> _JOIN_18690547;
	_JOIN_18687999 [label="_JOIN_18687999None...",shape=box];
	_JOIN_18687999 -> _JOIN_18688000;
	ForLoop18687966 [label="ForLoop18687966  for (kt=kk; kt<=min(ny-1,kk+127)-7; kt=kt+8) {...",shape=box];
	ForLoop18687966 -> 18694842;
	ForLoop18687966 -> _JOIN_18687966;
	18685062 [label="18685062  double x_copy;...",shape=box];
	ForLoop18593539 [label="ForLoop18593539  for (i=0; i<=cbv_1; i=i+7) {...",shape=box];
	ForLoop18593539 -> 18593483;
	ForLoop18593539 -> _JOIN_18593539;
	18700937 [label="18700937  tmp[it]=scv_10;...",shape=box];
	18593336 [label="18593336  int i;...",shape=box];
	ForLoop18690063 [label="ForLoop18690063  for (kk=kkk; kk<=min(ny-1,kkk+896); kk=kk+128) {...",shape=box];
	ForLoop18690063 -> 18688318;
	ForLoop18690063 -> _JOIN_18690063;
	_JOIN_18690192 [label="_JOIN_18690192None...",shape=box];
	_JOIN_18690192 -> ForLoop18690581;
	18690254 [label="18690254  for (k=kk; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	18690254 -> ForLoop18690547;
	_JOIN_18690190 [label="_JOIN_18690190None...",shape=box];
	_JOIN_18690190 -> _JOIN_18690191;
	18593483 [label="18593483  y[i]=0.0;...",shape=box];
	18710919 [label="18710919  tmp[i]=scv_40;...",shape=box];
	18710919 -> _JOIN_18690583;
	_JOIN_18688256 [label="_JOIN_18688256None...",shape=box];
	_JOIN_18688256 -> ForLoop18690065;
	_JOIN_18688000 [label="_JOIN_18688000None...",shape=box];
	_JOIN_18688000 -> 18700937;
	18701378 [label="18701378  double scv_18;...",shape=box];
	18593607 [label="18593607  y[i]=0.0;...",shape=box];
	18593607 -> _JOIN_18593608;
	18708500 [label="18708500  double scv_27, scv_28, scv_29, scv_30, scv_31;...",shape=box];

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest83.exe __orio_perftest83.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest83.exe  
{'[2, 5, 4, 0, 6, 5, 0, 1, 6, 4, 0, 3, 1, 0, 1, 1, 1, 0]' : 0.0832701}
{'[2, 5, 4, 0, 6, 5, 0, 1, 6, 4, 0, 3, 1, 0, 1, 1, 1, 0]' : 0.0829229}
{'[2, 5, 4, 0, 6, 5, 0, 1, 6, 4, 0, 3, 1, 0, 1, 1, 1, 0]' : 0.0829582}
{'[2, 5, 4, 0, 6, 5, 0, 1, 6, 4, 0, 3, 1, 0, 1, 1, 1, 0]' : 0.082983}
{'[2, 5, 4, 0, 6, 5, 0, 1, 6, 4, 0, 3, 1, 0, 1, 1, 1, 0]' : 0.0829911}
{'[2, 5, 4, 0, 6, 5, 0, 1, 6, 4, 0, 3, 1, 0, 1, 1, 1, 0]' : 0.0829909}
{'[2, 5, 4, 0, 6, 5, 0, 1, 6, 4, 0, 3, 1, 0, 1, 1, 1, 0]' : 0.0831141}
{'[2, 5, 4, 0, 6, 5, 0, 1, 6, 4, 0, 3, 1, 0, 1, 1, 1, 0]' : 0.082963}
{'[2, 5, 4, 0, 6, 5, 0, 1, 6, 4, 0, 3, 1, 0, 1, 1, 1, 0]' : 0.0839539}
{'[2, 5, 4, 0, 6, 5, 0, 1, 6, 4, 0, 3, 1, 0, 1, 1, 1, 0]' : 0.0830052}
{'[2, 5, 4, 0, 6, 5, 0, 1, 6, 4, 0, 3, 1, 0, 1, 1, 1, 0]' : 0.082927}
{'[2, 5, 4, 0, 6, 5, 0, 1, 6, 4, 0, 3, 1, 0, 1, 1, 1, 0]' : 0.0830169}
{'[2, 5, 4, 0, 6, 5, 0, 1, 6, 4, 0, 3, 1, 0, 1, 1, 1, 0]' : 0.0830171}
{'[2, 5, 4, 0, 6, 5, 0, 1, 6, 4, 0, 3, 1, 0, 1, 1, 1, 0]' : 0.083086}
{'[2, 5, 4, 0, 6, 5, 0, 1, 6, 4, 0, 3, 1, 0, 1, 1, 1, 0]' : 0.0832679}
{'[2, 5, 4, 0, 6, 5, 0, 1, 6, 4, 0, 3, 1, 0, 1, 1, 1, 0]' : 0.082988}
{'[2, 5, 4, 0, 6, 5, 0, 1, 6, 4, 0, 3, 1, 0, 1, 1, 1, 0]' : 0.0829771}
{'[2, 5, 4, 0, 6, 5, 0, 1, 6, 4, 0, 3, 1, 0, 1, 1, 1, 0]' : 0.082948}
{'[2, 5, 4, 0, 6, 5, 0, 1, 6, 4, 0, 3, 1, 0, 1, 1, 1, 0]' : 0.0830359}
{'[2, 5, 4, 0, 6, 5, 0, 1, 6, 4, 0, 3, 1, 0, 1, 1, 1, 0]' : 0.0829489}
{'[2, 5, 4, 0, 6, 5, 0, 1, 6, 4, 0, 3, 1, 0, 1, 1, 1, 0]' : 0.083091}
{'[2, 5, 4, 0, 6, 5, 0, 1, 6, 4, 0, 3, 1, 0, 1, 1, 1, 0]' : 0.08301}
{'[2, 5, 4, 0, 6, 5, 0, 1, 6, 4, 0, 3, 1, 0, 1, 1, 1, 0]' : 0.0829978}
{'[2, 5, 4, 0, 6, 5, 0, 1, 6, 4, 0, 3, 1, 0, 1, 1, 1, 0]' : 0.083091}
{'[2, 5, 4, 0, 6, 5, 0, 1, 6, 4, 0, 3, 1, 0, 1, 1, 1, 0]' : 0.0830052}
{'[2, 5, 4, 0, 6, 5, 0, 1, 6, 4, 0, 3, 1, 0, 1, 1, 1, 0]' : 0.0829568}
{'[2, 5, 4, 0, 6, 5, 0, 1, 6, 4, 0, 3, 1, 0, 1, 1, 1, 0]' : 0.0829382}
{'[2, 5, 4, 0, 6, 5, 0, 1, 6, 4, 0, 3, 1, 0, 1, 1, 1, 0]' : 0.0829549}
{'[2, 5, 4, 0, 6, 5, 0, 1, 6, 4, 0, 3, 1, 0, 1, 1, 1, 0]' : 0.082979}
{'[2, 5, 4, 0, 6, 5, 0, 1, 6, 4, 0, 3, 1, 0, 1, 1, 1, 0]' : 0.0829911}

out:
 ["{'[2, 5, 4, 0, 6, 5, 0, 1, 6, 4, 0, 3, 1, 0, 1, 1, 1, 0]' : 0.0832701}", "{'[2, 5, 4, 0, 6, 5, 0, 1, 6, 4, 0, 3, 1, 0, 1, 1, 1, 0]' : 0.0829229}", "{'[2, 5, 4, 0, 6, 5, 0, 1, 6, 4, 0, 3, 1, 0, 1, 1, 1, 0]' : 0.0829582}", "{'[2, 5, 4, 0, 6, 5, 0, 1, 6, 4, 0, 3, 1, 0, 1, 1, 1, 0]' : 0.082983}", "{'[2, 5, 4, 0, 6, 5, 0, 1, 6, 4, 0, 3, 1, 0, 1, 1, 1, 0]' : 0.0829911}", "{'[2, 5, 4, 0, 6, 5, 0, 1, 6, 4, 0, 3, 1, 0, 1, 1, 1, 0]' : 0.0829909}", "{'[2, 5, 4, 0, 6, 5, 0, 1, 6, 4, 0, 3, 1, 0, 1, 1, 1, 0]' : 0.0831141}", "{'[2, 5, 4, 0, 6, 5, 0, 1, 6, 4, 0, 3, 1, 0, 1, 1, 1, 0]' : 0.082963}", "{'[2, 5, 4, 0, 6, 5, 0, 1, 6, 4, 0, 3, 1, 0, 1, 1, 1, 0]' : 0.0839539}", "{'[2, 5, 4, 0, 6, 5, 0, 1, 6, 4, 0, 3, 1, 0, 1, 1, 1, 0]' : 0.0830052}", "{'[2, 5, 4, 0, 6, 5, 0, 1, 6, 4, 0, 3, 1, 0, 1, 1, 1, 0]' : 0.082927}", "{'[2, 5, 4, 0, 6, 5, 0, 1, 6, 4, 0, 3, 1, 0, 1, 1, 1, 0]' : 0.0830169}", "{'[2, 5, 4, 0, 6, 5, 0, 1, 6, 4, 0, 3, 1, 0, 1, 1, 1, 0]' : 0.0830171}", "{'[2, 5, 4, 0, 6, 5, 0, 1, 6, 4, 0, 3, 1, 0, 1, 1, 1, 0]' : 0.083086}", "{'[2, 5, 4, 0, 6, 5, 0, 1, 6, 4, 0, 3, 1, 0, 1, 1, 1, 0]' : 0.0832679}", "{'[2, 5, 4, 0, 6, 5, 0, 1, 6, 4, 0, 3, 1, 0, 1, 1, 1, 0]' : 0.082988}", "{'[2, 5, 4, 0, 6, 5, 0, 1, 6, 4, 0, 3, 1, 0, 1, 1, 1, 0]' : 0.0829771}", "{'[2, 5, 4, 0, 6, 5, 0, 1, 6, 4, 0, 3, 1, 0, 1, 1, 1, 0]' : 0.082948}", "{'[2, 5, 4, 0, 6, 5, 0, 1, 6, 4, 0, 3, 1, 0, 1, 1, 1, 0]' : 0.0830359}", "{'[2, 5, 4, 0, 6, 5, 0, 1, 6, 4, 0, 3, 1, 0, 1, 1, 1, 0]' : 0.0829489}", "{'[2, 5, 4, 0, 6, 5, 0, 1, 6, 4, 0, 3, 1, 0, 1, 1, 1, 0]' : 0.083091}", "{'[2, 5, 4, 0, 6, 5, 0, 1, 6, 4, 0, 3, 1, 0, 1, 1, 1, 0]' : 0.08301}", "{'[2, 5, 4, 0, 6, 5, 0, 1, 6, 4, 0, 3, 1, 0, 1, 1, 1, 0]' : 0.0829978}", "{'[2, 5, 4, 0, 6, 5, 0, 1, 6, 4, 0, 3, 1, 0, 1, 1, 1, 0]' : 0.083091}", "{'[2, 5, 4, 0, 6, 5, 0, 1, 6, 4, 0, 3, 1, 0, 1, 1, 1, 0]' : 0.0830052}", "{'[2, 5, 4, 0, 6, 5, 0, 1, 6, 4, 0, 3, 1, 0, 1, 1, 1, 0]' : 0.0829568}", "{'[2, 5, 4, 0, 6, 5, 0, 1, 6, 4, 0, 3, 1, 0, 1, 1, 1, 0]' : 0.0829382}", "{'[2, 5, 4, 0, 6, 5, 0, 1, 6, 4, 0, 3, 1, 0, 1, 1, 1, 0]' : 0.0829549}", "{'[2, 5, 4, 0, 6, 5, 0, 1, 6, 4, 0, 3, 1, 0, 1, 1, 1, 0]' : 0.082979}", "{'[2, 5, 4, 0, 6, 5, 0, 1, 6, 4, 0, 3, 1, 0, 1, 1, 1, 0]' : 0.0829911}"]
returning from 'run': {'[2, 5, 4, 0, 6, 5, 0, 1, 6, 4, 0, 3, 1, 0, 1, 1, 1, 0]': ([0.0832701, 0.0829229, 0.0829582, 0.082983, 0.0829911, 0.0829909, 0.0831141, 0.082963, 0.0839539, 0.0830052, 0.082927, 0.0830169, 0.0830171, 0.083086, 0.0832679, 0.082988, 0.0829771, 0.082948, 0.0830359, 0.0829489, 0.083091, 0.08301, 0.0829978, 0.083091, 0.0830052, 0.0829568, 0.0829382, 0.0829549, 0.082979, 0.0829911], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.0832701, 0.0829229, 0.0829582, 0.082983, 0.0829911, 0.0829909, 0.0831141, 0.082963, 0.0839539, 0.0830052, 0.082927, 0.0830169, 0.0830171, 0.083086, 0.0832679, 0.082988, 0.0829771, 0.082948, 0.0830359, 0.0829489, 0.083091, 0.08301, 0.0829978, 0.083091, 0.0830052, 0.0829568, 0.0829382, 0.0829549, 0.082979, 0.0829911], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[2, 5, 4, 0, 6, 5, 0, 1, 6, 4, 0, 3, 1, 0, 1, 1, 1, 0]': ([0.0832701, 0.0829229, 0.0829582, 0.082983, 0.0829911, 0.0829909, 0.0831141, 0.082963, 0.0839539, 0.0830052, 0.082927, 0.0830169, 0.0830171, 0.083086, 0.0832679, 0.082988, 0.0829771, 0.082948, 0.0830359, 0.0829489, 0.083091, 0.08301, 0.0829978, 0.083091, 0.0830052, 0.0829568, 0.0829382, 0.0829549, 0.082979, 0.0829911], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [5, 5, 2, 0, 1, 0, 13, 27, 0, 21, 0, 1, 0, 0]
Fixed Factors: {'T2_K': 5, 'T2_J': 6, 'SCR': 1, 'VEC1': 1}
Testing candidate 13: [5, 5, 2, 0, 6, 5, 1, 0, 13, 27, 0, 21, 0, 1, 0, 1, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	48
        Max loop nest depth: 	5
        Additions: 		3829
        Multiplications: 	1798
        Divisions: 		0
        Logical: 		0
        Reads: 			7337
        Writes: 		1229
        Comparisons:		48
        Gotos: 			0
        
digraph CFG {
	_JOIN_18886441 [label="_JOIN_18886441None...",shape=box];
	_JOIN_18886441 -> _JOIN_18886443;
	_JOIN_18886443 [label="_JOIN_18886443None...",shape=box];
	_JOIN_18886443 -> _JOIN_18886444;
	18855889 [label="18855889  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	_JOIN_18886444 [label="_JOIN_18886444None...",shape=box];
	_JOIN_18886444 -> ForLoop18887177;
	19005811 [label="19005811  tmp[i]=scv_83;...",shape=box];
	19005811 -> _JOIN_18887179;
	_JOIN_18887176 [label="_JOIN_18887176None...",shape=box];
	_JOIN_18887176 -> _JOIN_18887177;
	_JOIN_18887177 [label="_JOIN_18887177None...",shape=box];
	_JOIN_18887177 -> 19005811;
	_JOIN_18715640 [label="_JOIN_18715640None...",shape=box];
	_JOIN_18715640 -> 18855543;
	_JOIN_18715571 [label="_JOIN_18715571None...",shape=box];
	_JOIN_18715571 -> 18715807;
	_JOIN_18864632 [label="_JOIN_18864632None...",shape=box];
	_JOIN_18864632 -> ForLoop18886076;
	_JOIN_18864630 [label="_JOIN_18864630None...",shape=box];
	_JOIN_18864630 -> _JOIN_18864632;
	ForLoop18715571 [label="ForLoop18715571  for (i=0; i<=cbv_1; i=i+14) {...",shape=box];
	ForLoop18715571 -> 18715452;
	ForLoop18715571 -> _JOIN_18715571;
	ForLoop18864628 [label="ForLoop18864628  for (jt=jj; jt<=min(ny-1,jj+255)-7; jt=jt+8) {...",shape=box];
	ForLoop18864628 -> 18897912;
	ForLoop18864628 -> _JOIN_18864628;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 18715200;
	_JOIN_18887106 [label="_JOIN_18887106None...",shape=box];
	_JOIN_18887106 -> ForLoop18887174;
	18940961 [label="18940961  double scv_9, scv_10, scv_11, scv_12, scv_13, scv_14, scv_15, scv_16;...",shape=box];
	ForLoop18887179 [label="ForLoop18887179  for (i=(min(nx-1,ii+255))-(((min(nx-1,ii+255))-(ii)+1)%28)+1; i<=min(nx-1,ii+255); i=i+1) {...",shape=box];
	ForLoop18887179 -> 19005799;
	ForLoop18887179 -> _JOIN_18887179;
	ForLoop18885301 [label="ForLoop18885301  for (k=kk; k<=min(ny-1,kk+31)-21; k=k+22) {...",shape=box];
	ForLoop18885301 -> 18940961;
	ForLoop18885301 -> _JOIN_18885301;
	18897912 [label="18897912  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	_JOIN_18887174 [label="_JOIN_18887174None...",shape=box];
	_JOIN_18887174 -> _JOIN_18887176;
	_JOIN_18887179 [label="_JOIN_18887179None...",shape=box];
	_JOIN_18887179 -> _JOIN_18887181;
	ForLoop18887176 [label="ForLoop18887176  for (kk=kkk; kk<=min(ny-1,kkk+992); kk=kk+32) {...",shape=box];
	ForLoop18887176 -> 18886476;
	ForLoop18887176 -> _JOIN_18887176;
	ForLoop18887177 [label="ForLoop18887177  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop18887177 -> ForLoop18887176;
	ForLoop18887177 -> _JOIN_18887177;
	18715200 [label="18715200  int i;...",shape=box];
	18855543 [label="18855543  double x_copy[256];...",shape=box];
	_JOIN_18886072 [label="_JOIN_18886072None...",shape=box];
	_JOIN_18886072 -> _JOIN_18886074;
	_JOIN_18886074 [label="_JOIN_18886074None...",shape=box];
	_JOIN_18886074 -> _JOIN_18886076;
	18715452 [label="18715452  y[i]=0.0;...",shape=box];
	_JOIN_18886076 [label="_JOIN_18886076None...",shape=box];
	_JOIN_18886076 -> 18998589;
	_JOIN_18886078 [label="_JOIN_18886078None...",shape=box];
	_JOIN_18886078 -> ForLoop18887179;
	18864664 [label="18864664  int k;...",shape=box];
	18715639 [label="18715639  y[i]=0.0;...",shape=box];
	18715639 -> _JOIN_18715640;
	ForLoop18887174 [label="ForLoop18887174  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kk)+1)%22)+1; k<=min(ny-1,kk+31); k=k+1) {...",shape=box];
	ForLoop18887174 -> 19002683;
	ForLoop18887174 -> _JOIN_18887174;
	ForLoop18886078 [label="ForLoop18886078  for (i=ii; i<=expected=9369846271501.798828
actual=9369846271501.798828
min(nx-1,ii+255)-27; i=i+28) {...",shape=box];
	ForLoop18886078 -> 18998571;
	ForLoop18886078 -> _JOIN_18886078;
	19002683 [label="19002683  double scv_82;...",shape=box];
	ForLoop18715640 [label="ForLoop18715640  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop18715640 -> 18715639;
	ForLoop18715640 -> _JOIN_18715640;
	ForLoop18886074 [label="ForLoop18886074  for (kk=kkk; kk<=min(ny-1,kkk+992); kk=kk+32) {...",shape=box];
	ForLoop18886074 -> 18864664;
	ForLoop18886074 -> _JOIN_18886074;
	ForLoop18886072 [label="ForLoop18886072  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kk)+1)%22)+1; k<=min(ny-1,kk+31); k=k+1) {...",shape=box];
	ForLoop18886072 -> 18943651;
	ForLoop18886072 -> _JOIN_18886072;
	ForLoop18864632 [label="ForLoop18864632  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop18864632 -> ForLoop18864630;
	ForLoop18864632 -> _JOIN_18864632;
	_JOIN_18887181 [label="_JOIN_18887181None...",shape=box];
	ForLoop18864630 [label="ForLoop18864630  for (jj=jjj; jj<=min(ny-1,jjj+1792); jj=jj+256) {...",shape=box];
	ForLoop18864630 -> 18855889;
	ForLoop18864630 -> _JOIN_18864630;
	18943651 [label="18943651  double scv_31;...",shape=box];
	18715807 [label="18715807  register int cbv_2, cbv_3;...",shape=box];
	ForLoop18886076 [label="ForLoop18886076  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop18886076 -> ForLoop18886074;
	ForLoop18886076 -> _JOIN_18886076;
	_JOIN_18885301 [label="_JOIN_18885301None...",shape=box];
	_JOIN_18885301 -> ForLoop18886072;
	18998571 [label="18998571  double scv_32, scv_33, scv_34, scv_35, scv_36, scv_37, scv_38, scv_39;...",shape=box];
	_JOIN_18864628 [label="_JOIN_18864628None...",shape=box];
	_JOIN_18864628 -> _JOIN_18864630;
	ForLoop18886441 [label="ForLoop18886441  for (jt=jj; jt<=min(ny-1,jj+255)-7; jt=jt+8) {...",shape=box];
	ForLoop18886441 -> 18886236;
	ForLoop18886441 -> _JOIN_18886441;
	ForLoop18886443 [label="ForLoop18886443  for (jj=jjj; jj<=min(ny-1,jjj+1792); jj=jj+256) {...",shape=box];
	ForLoop18886443 -> 18886193;
	ForLoop18886443 -> _JOIN_18886443;
	ForLoop18886444 [label="ForLoop18886444  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop18886444 -> ForLoop18886443;
	ForLoop18886444 -> _JOIN_18886444;
	ForLoop18887181 [label="ForLoop18887181  for (ii=0; ii<=nx-1; ii=ii+256) {...",shape=box];
	ForLoop18887181 -> 18855558;
	ForLoop18887181 -> _JOIN_18887181;
	18855558 [label="18855558  int i;...",shape=box];
	18855558 -> ForLoop18886078;
	19002154 [label="19002154  double scv_60, scv_61, scv_62, scv_63, scv_64, scv_65, scv_66, scv_67;...",shape=box];
	18998589 [label="18998589  tmp[(i+20)]=scv_32;...",shape=box];
	19005799 [label="19005799  double scv_83;...",shape=box];
	18886236 [label="18886236  scv_83=scv_83+A[i*ny+jt]*x_copy[(jt-jj)];...",shape=box];
	18886476 [label="18886476  int k;...",shape=box];
	18886476 -> ForLoop18887106;
	ForLoop18887106 [label="ForLoop18887106  for (k=kk; k<=min(ny-1,kk+31)-21; k=k+22) {...",shape=box];
	ForLoop18887106 -> 19002154;
	ForLoop18887106 -> _JOIN_18887106;
	18886193 [label="18886193  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	18886193 -> ForLoop18886441;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest84.exe __orio_perftest84.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest84.exe  
{'[5, 5, 2, 0, 6, 5, 1, 0, 13, 27, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.148622}
{'[5, 5, 2, 0, 6, 5, 1, 0, 13, 27, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.148558}
{'[5, 5, 2, 0, 6, 5, 1, 0, 13, 27, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.14829}
{'[5, 5, 2, 0, 6, 5, 1, 0, 13, 27, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.149481}
{'[5, 5, 2, 0, 6, 5, 1, 0, 13, 27, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.148269}
{'[5, 5, 2, 0, 6, 5, 1, 0, 13, 27, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.14874}
{'[5, 5, 2, 0, 6, 5, 1, 0, 13, 27, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.148451}
{'[5, 5, 2, 0, 6, 5, 1, 0, 13, 27, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.148664}
{'[5, 5, 2, 0, 6, 5, 1, 0, 13, 27, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.148452}
{'[5, 5, 2, 0, 6, 5, 1, 0, 13, 27, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.148374}
{'[5, 5, 2, 0, 6, 5, 1, 0, 13, 27, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.148566}
{'[5, 5, 2, 0, 6, 5, 1, 0, 13, 27, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.14852}
{'[5, 5, 2, 0, 6, 5, 1, 0, 13, 27, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.148711}
{'[5, 5, 2, 0, 6, 5, 1, 0, 13, 27, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.148663}
{'[5, 5, 2, 0, 6, 5, 1, 0, 13, 27, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.148695}
{'[5, 5, 2, 0, 6, 5, 1, 0, 13, 27, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.148616}
{'[5, 5, 2, 0, 6, 5, 1, 0, 13, 27, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.17128}
{'[5, 5, 2, 0, 6, 5, 1, 0, 13, 27, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.168312}
{'[5, 5, 2, 0, 6, 5, 1, 0, 13, 27, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.148422}
{'[5, 5, 2, 0, 6, 5, 1, 0, 13, 27, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.148631}
{'[5, 5, 2, 0, 6, 5, 1, 0, 13, 27, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.148403}
{'[5, 5, 2, 0, 6, 5, 1, 0, 13, 27, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.148582}
{'[5, 5, 2, 0, 6, 5, 1, 0, 13, 27, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.148513}
{'[5, 5, 2, 0, 6, 5, 1, 0, 13, 27, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.148515}
{'[5, 5, 2, 0, 6, 5, 1, 0, 13, 27, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.148356}
{'[5, 5, 2, 0, 6, 5, 1, 0, 13, 27, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.148339}
{'[5, 5, 2, 0, 6, 5, 1, 0, 13, 27, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.14855}
{'[5, 5, 2, 0, 6, 5, 1, 0, 13, 27, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.148558}
{'[5, 5, 2, 0, 6, 5, 1, 0, 13, 27, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.148517}
{'[5, 5, 2, 0, 6, 5, 1, 0, 13, 27, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.148568}

out:
 ["{'[5, 5, 2, 0, 6, 5, 1, 0, 13, 27, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.148622}", "{'[5, 5, 2, 0, 6, 5, 1, 0, 13, 27, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.148558}", "{'[5, 5, 2, 0, 6, 5, 1, 0, 13, 27, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.14829}", "{'[5, 5, 2, 0, 6, 5, 1, 0, 13, 27, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.149481}", "{'[5, 5, 2, 0, 6, 5, 1, 0, 13, 27, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.148269}", "{'[5, 5, 2, 0, 6, 5, 1, 0, 13, 27, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.14874}", "{'[5, 5, 2, 0, 6, 5, 1, 0, 13, 27, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.148451}", "{'[5, 5, 2, 0, 6, 5, 1, 0, 13, 27, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.148664}", "{'[5, 5, 2, 0, 6, 5, 1, 0, 13, 27, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.148452}", "{'[5, 5, 2, 0, 6, 5, 1, 0, 13, 27, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.148374}", "{'[5, 5, 2, 0, 6, 5, 1, 0, 13, 27, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.148566}", "{'[5, 5, 2, 0, 6, 5, 1, 0, 13, 27, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.14852}", "{'[5, 5, 2, 0, 6, 5, 1, 0, 13, 27, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.148711}", "{'[5, 5, 2, 0, 6, 5, 1, 0, 13, 27, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.148663}", "{'[5, 5, 2, 0, 6, 5, 1, 0, 13, 27, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.148695}", "{'[5, 5, 2, 0, 6, 5, 1, 0, 13, 27, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.148616}", "{'[5, 5, 2, 0, 6, 5, 1, 0, 13, 27, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.17128}", "{'[5, 5, 2, 0, 6, 5, 1, 0, 13, 27, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.168312}", "{'[5, 5, 2, 0, 6, 5, 1, 0, 13, 27, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.148422}", "{'[5, 5, 2, 0, 6, 5, 1, 0, 13, 27, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.148631}", "{'[5, 5, 2, 0, 6, 5, 1, 0, 13, 27, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.148403}", "{'[5, 5, 2, 0, 6, 5, 1, 0, 13, 27, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.148582}", "{'[5, 5, 2, 0, 6, 5, 1, 0, 13, 27, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.148513}", "{'[5, 5, 2, 0, 6, 5, 1, 0, 13, 27, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.148515}", "{'[5, 5, 2, 0, 6, 5, 1, 0, 13, 27, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.148356}", "{'[5, 5, 2, 0, 6, 5, 1, 0, 13, 27, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.148339}", "{'[5, 5, 2, 0, 6, 5, 1, 0, 13, 27, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.14855}", "{'[5, 5, 2, 0, 6, 5, 1, 0, 13, 27, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.148558}", "{'[5, 5, 2, 0, 6, 5, 1, 0, 13, 27, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.148517}", "{'[5, 5, 2, 0, 6, 5, 1, 0, 13, 27, 0, 21, 0, 1, 0, 1, 1, 0]' : 0.148568}"]
returning from 'run': {'[5, 5, 2, 0, 6, 5, 1, 0, 13, 27, 0, 21, 0, 1, 0, 1, 1, 0]': ([0.148622, 0.148558, 0.14829, 0.149481, 0.148269, 0.14874, 0.148451, 0.148664, 0.148452, 0.148374, 0.148566, 0.14852, 0.148711, 0.148663, 0.148695, 0.148616, 0.17128, 0.168312, 0.148422, 0.148631, 0.148403, 0.148582, 0.148513, 0.148515, 0.148356, 0.148339, 0.14855, 0.148558, 0.148517, 0.148568], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.148622, 0.148558, 0.14829, 0.149481, 0.148269, 0.14874, 0.148451, 0.148664, 0.148452, 0.148374, 0.148566, 0.14852, 0.148711, 0.148663, 0.148695, 0.148616, 0.17128, 0.168312, 0.148422, 0.148631, 0.148403, 0.148582, 0.148513, 0.148515, 0.148356, 0.148339, 0.14855, 0.148558, 0.148517, 0.148568], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[5, 5, 2, 0, 6, 5, 1, 0, 13, 27, 0, 21, 0, 1, 0, 1, 1, 0]': ([0.148622, 0.148558, 0.14829, 0.149481, 0.148269, 0.14874, 0.148451, 0.148664, 0.148452, 0.148374, 0.148566, 0.14852, 0.148711, 0.148663, 0.148695, 0.148616, 0.17128, 0.168312, 0.148422, 0.148631, 0.148403, 0.148582, 0.148513, 0.148515, 0.148356, 0.148339, 0.14855, 0.148558, 0.148517, 0.148568], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [0, 4, 6, 5, 0, 0, 18, 0, 3, 1, 0, 1, 1, 1]
Fixed Factors: {'T2_K': 5, 'T2_J': 6, 'SCR': 1, 'VEC1': 1}
Testing candidate 14: [0, 4, 6, 5, 6, 5, 0, 0, 18, 0, 3, 1, 0, 1, 1, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		172
        Multiplications: 	48
        Divisions: 		0
        Logical: 		0
        Reads: 			414
        Writes: 		108
        Comparisons:		14
        Gotos: 			0
        
digraph CFG {
	19026061 [label="19026061  y[i]=0.0;...",shape=box];
	_JOIN_19048714 [label="_JOIN_19048714None...",shape=box];
	_JOIN_19048714 -> _JOIN_19048717;
	ForLoop19049139 [label="ForLoop19049139  for (i=iii; i<=min(nx-1,iii+1023); i=i+1) {...",shape=box];
	ForLoop19049139 -> 19053284;
	ForLoop19049139 -> _JOIN_19049139;
	_JOIN_19048717 [label="_JOIN_19048717None...",shape=box];
	_JOIN_19048717 -> _JOIN_19048718;
	ForLoop19049137 [label="ForLoop19049137  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop19049137 -> ForLoop19049136;
	ForLoop19049137 -> _JOIN_19049137;
	ForLoop19049136 [label="ForLoop19049136  for (kk=kkk; kk<=min(ny-1,kkk+512); kk=kk+512) {...",shape=box];
	ForLoop19049136 -> 19054977;
	ForLoop19049136 -> _JOIN_19049136;
	19053284 [label="19053284  double scv_12;...",shape=box];
	_JOIN_19048718 [label="_JOIN_19048718None...",shape=box];
	_JOIN_19048718 -> ForLoop19049137;
	19048529 [label="19048529  int j;...",shape=box];
	_JOIN_19049139 [label="_JOIN_19049139None...",shape=box];
	_JOIN_19049139 -> _JOIN_19049140;
	_JOIN_19048994 [label="_JOIN_19048994None...",shape=box];
	_JOIN_19048994 -> 19048995;
	19048569 [label="19048569  scv_12=scv_12+A[i*ny+j]*x[j];...",shape=box];
	19048344 [label="19048344  scv_12=scv_12+A[i*ny+jt]*x[jt];...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 19025734;
	_JOIN_19026294 [label="_JOIN_19026294None...",shape=box];
	_JOIN_19026294 -> 19048235;
	19026506 [label="19026506  register int cbv_2, cbv_3;...",shape=box];
	_JOIN_19049133 [label="_JOIN_19049133None...",shape=box];
	_JOIN_19049133 -> _JOIN_19049136;
	19051297 [label="19051297  double scv_11;...",shape=box];
	19054451 [label="19054451  register int cbv_1;...",shape=box];
	ForLoop19048646 [label="ForLoop19048646  for (j=jt; j<=cbv_2; j=j+4) {...",shape=box];
	ForLoop19048646 -> 19048569;
	ForLoop19048646 -> _JOIN_19048646;
	ForLoop19048528 [label="ForLoop19048528  for (jt=jj; jt<=cbv_1; jt=jt+8) {...",shape=box];
	ForLoop19048528 -> 19048344;
	ForLoop19048528 -> _JOIN_19048528;
	19055158 [label="19055158  register int cbv_7, cbv_8;...",shape=box];
	ForLoop19026294 [label="ForLoop19026294  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop19026294 -> 19026293;
	ForLoop19026294 -> _JOIN_19026294;
	_JOIN_19049140 [label="_JOIN_19049140None...",shape=box];
	19051190 [label="19051190  double scv_9, scv_10;...",shape=box];
	ForLoop19049133 [label="ForLoexpected=9369846271501.798828
actual=9369846271501.798828
op19049133  for (k=cbv_7; k<=cbv_8; k=k+1) {...",shape=box];
	ForLoop19049133 -> 19051297;
	ForLoop19049133 -> _JOIN_19049133;
	_JOIN_19049065 [label="_JOIN_19049065None...",shape=box];
	_JOIN_19049065 -> 19055158;
	_JOIN_19049136 [label="_JOIN_19049136None...",shape=box];
	_JOIN_19049136 -> _JOIN_19049137;
	_JOIN_19049137 [label="_JOIN_19049137None...",shape=box];
	_JOIN_19049137 -> 19053296;
	19054639 [label="19054639  register int cbv_3, cbv_4;...",shape=box];
	_JOIN_19026225 [label="_JOIN_19026225None...",shape=box];
	_JOIN_19026225 -> 19026506;
	19048235 [label="19048235  double x_copy;...",shape=box];
	19048995 [label="19048995  int k;...",shape=box];
	19050940 [label="19050940  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	_JOIN_19048528 [label="_JOIN_19048528None...",shape=box];
	_JOIN_19048528 -> 19048529;
	ForLoop19049065 [label="ForLoop19049065  for (k=kt; k<=cbv_6; k=k+2) {...",shape=box];
	ForLoop19049065 -> 19051190;
	ForLoop19049065 -> _JOIN_19049065;
	19026293 [label="19026293  y[i]=0.0;...",shape=box];
	19026293 -> _JOIN_19026294;
	ForLoop19026225 [label="ForLoop19026225  for (i=0; i<=cbv_1; i=i+19) {...",shape=box];
	ForLoop19026225 -> 19026061;
	ForLoop19026225 -> _JOIN_19026225;
	ForLoop19049140 [label="ForLoop19049140  for (iii=0; iii<=nx-1; iii=iii+1024) {...",shape=box];
	ForLoop19049140 -> ForLoop19049139;
	ForLoop19049140 -> _JOIN_19049140;
	_JOIN_19048646 [label="_JOIN_19048646None...",shape=box];
	_JOIN_19048646 -> 19054639;
	ForLoop19048994 [label="ForLoop19048994  for (kt=kk; kt<=cbv_5; kt=kt+8) {...",shape=box];
	ForLoop19048994 -> 19050940;
	ForLoop19048994 -> _JOIN_19048994;
	19025734 [label="19025734  int i;...",shape=box];
	ForLoop19048718 [label="ForLoop19048718  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop19048718 -> ForLoop19048717;
	ForLoop19048718 -> _JOIN_19048718;
	ForLoop19048717 [label="ForLoop19048717  for (jj=jjj; jj<=min(ny-1,jjj+1920); jj=jj+128) {...",shape=box];
	ForLoop19048717 -> 19054451;
	ForLoop19048717 -> _JOIN_19048717;
	ForLoop19048714 [label="ForLoop19048714  for (j=cbv_3; j<=cbv_4; j=j+1) {...",shape=box];
	ForLoop19048714 -> 19048713;
	ForLoop19048714 -> _JOIN_19048714;
	19054977 [label="19054977  register int cbv_5;...",shape=box];
	19053296 [label="19053296  tmp[i]=scv_12;...",shape=box];
	19053296 -> _JOIN_19049139;
	19048713 [label="19048713  scv_12=scv_12+A[i*ny+j]*x[j];...",shape=box];
	19048713 -> _JOIN_19048714;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest85.exe __orio_perftest85.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest85.exe  
{'[0, 4, 6, 5, 6, 5, 0, 0, 18, 0, 3, 1, 0, 1, 1, 1, 1, 1]' : 0.123651}
{'[0, 4, 6, 5, 6, 5, 0, 0, 18, 0, 3, 1, 0, 1, 1, 1, 1, 1]' : 0.123565}
{'[0, 4, 6, 5, 6, 5, 0, 0, 18, 0, 3, 1, 0, 1, 1, 1, 1, 1]' : 0.123478}
{'[0, 4, 6, 5, 6, 5, 0, 0, 18, 0, 3, 1, 0, 1, 1, 1, 1, 1]' : 0.124839}
{'[0, 4, 6, 5, 6, 5, 0, 0, 18, 0, 3, 1, 0, 1, 1, 1, 1, 1]' : 0.123521}
{'[0, 4, 6, 5, 6, 5, 0, 0, 18, 0, 3, 1, 0, 1, 1, 1, 1, 1]' : 0.123608}
{'[0, 4, 6, 5, 6, 5, 0, 0, 18, 0, 3, 1, 0, 1, 1, 1, 1, 1]' : 0.123561}
{'[0, 4, 6, 5, 6, 5, 0, 0, 18, 0, 3, 1, 0, 1, 1, 1, 1, 1]' : 0.123532}
{'[0, 4, 6, 5, 6, 5, 0, 0, 18, 0, 3, 1, 0, 1, 1, 1, 1, 1]' : 0.123538}
{'[0, 4, 6, 5, 6, 5, 0, 0, 18, 0, 3, 1, 0, 1, 1, 1, 1, 1]' : 0.12353}
{'[0, 4, 6, 5, 6, 5, 0, 0, 18, 0, 3, 1, 0, 1, 1, 1, 1, 1]' : 0.123533}
{'[0, 4, 6, 5, 6, 5, 0, 0, 18, 0, 3, 1, 0, 1, 1, 1, 1, 1]' : 0.123597}
{'[0, 4, 6, 5, 6, 5, 0, 0, 18, 0, 3, 1, 0, 1, 1, 1, 1, 1]' : 0.123559}
{'[0, 4, 6, 5, 6, 5, 0, 0, 18, 0, 3, 1, 0, 1, 1, 1, 1, 1]' : 0.123512}
{'[0, 4, 6, 5, 6, 5, 0, 0, 18, 0, 3, 1, 0, 1, 1, 1, 1, 1]' : 0.123565}
{'[0, 4, 6, 5, 6, 5, 0, 0, 18, 0, 3, 1, 0, 1, 1, 1, 1, 1]' : 0.123671}
{'[0, 4, 6, 5, 6, 5, 0, 0, 18, 0, 3, 1, 0, 1, 1, 1, 1, 1]' : 0.123651}
{'[0, 4, 6, 5, 6, 5, 0, 0, 18, 0, 3, 1, 0, 1, 1, 1, 1, 1]' : 0.123517}
{'[0, 4, 6, 5, 6, 5, 0, 0, 18, 0, 3, 1, 0, 1, 1, 1, 1, 1]' : 0.123516}
{'[0, 4, 6, 5, 6, 5, 0, 0, 18, 0, 3, 1, 0, 1, 1, 1, 1, 1]' : 0.124545}
{'[0, 4, 6, 5, 6, 5, 0, 0, 18, 0, 3, 1, 0, 1, 1, 1, 1, 1]' : 0.123766}
{'[0, 4, 6, 5, 6, 5, 0, 0, 18, 0, 3, 1, 0, 1, 1, 1, 1, 1]' : 0.123516}
{'[0, 4, 6, 5, 6, 5, 0, 0, 18, 0, 3, 1, 0, 1, 1, 1, 1, 1]' : 0.123539}
{'[0, 4, 6, 5, 6, 5, 0, 0, 18, 0, 3, 1, 0, 1, 1, 1, 1, 1]' : 0.123612}
{'[0, 4, 6, 5, 6, 5, 0, 0, 18, 0, 3, 1, 0, 1, 1, 1, 1, 1]' : 0.123511}
{'[0, 4, 6, 5, 6, 5, 0, 0, 18, 0, 3, 1, 0, 1, 1, 1, 1, 1]' : 0.123549}
{'[0, 4, 6, 5, 6, 5, 0, 0, 18, 0, 3, 1, 0, 1, 1, 1, 1, 1]' : 0.123504}
{'[0, 4, 6, 5, 6, 5, 0, 0, 18, 0, 3, 1, 0, 1, 1, 1, 1, 1]' : 0.12362}
{'[0, 4, 6, 5, 6, 5, 0, 0, 18, 0, 3, 1, 0, 1, 1, 1, 1, 1]' : 0.123949}
{'[0, 4, 6, 5, 6, 5, 0, 0, 18, 0, 3, 1, 0, 1, 1, 1, 1, 1]' : 0.123647}

out:
 ["{'[0, 4, 6, 5, 6, 5, 0, 0, 18, 0, 3, 1, 0, 1, 1, 1, 1, 1]' : 0.123651}", "{'[0, 4, 6, 5, 6, 5, 0, 0, 18, 0, 3, 1, 0, 1, 1, 1, 1, 1]' : 0.123565}", "{'[0, 4, 6, 5, 6, 5, 0, 0, 18, 0, 3, 1, 0, 1, 1, 1, 1, 1]' : 0.123478}", "{'[0, 4, 6, 5, 6, 5, 0, 0, 18, 0, 3, 1, 0, 1, 1, 1, 1, 1]' : 0.124839}", "{'[0, 4, 6, 5, 6, 5, 0, 0, 18, 0, 3, 1, 0, 1, 1, 1, 1, 1]' : 0.123521}", "{'[0, 4, 6, 5, 6, 5, 0, 0, 18, 0, 3, 1, 0, 1, 1, 1, 1, 1]' : 0.123608}", "{'[0, 4, 6, 5, 6, 5, 0, 0, 18, 0, 3, 1, 0, 1, 1, 1, 1, 1]' : 0.123561}", "{'[0, 4, 6, 5, 6, 5, 0, 0, 18, 0, 3, 1, 0, 1, 1, 1, 1, 1]' : 0.123532}", "{'[0, 4, 6, 5, 6, 5, 0, 0, 18, 0, 3, 1, 0, 1, 1, 1, 1, 1]' : 0.123538}", "{'[0, 4, 6, 5, 6, 5, 0, 0, 18, 0, 3, 1, 0, 1, 1, 1, 1, 1]' : 0.12353}", "{'[0, 4, 6, 5, 6, 5, 0, 0, 18, 0, 3, 1, 0, 1, 1, 1, 1, 1]' : 0.123533}", "{'[0, 4, 6, 5, 6, 5, 0, 0, 18, 0, 3, 1, 0, 1, 1, 1, 1, 1]' : 0.123597}", "{'[0, 4, 6, 5, 6, 5, 0, 0, 18, 0, 3, 1, 0, 1, 1, 1, 1, 1]' : 0.123559}", "{'[0, 4, 6, 5, 6, 5, 0, 0, 18, 0, 3, 1, 0, 1, 1, 1, 1, 1]' : 0.123512}", "{'[0, 4, 6, 5, 6, 5, 0, 0, 18, 0, 3, 1, 0, 1, 1, 1, 1, 1]' : 0.123565}", "{'[0, 4, 6, 5, 6, 5, 0, 0, 18, 0, 3, 1, 0, 1, 1, 1, 1, 1]' : 0.123671}", "{'[0, 4, 6, 5, 6, 5, 0, 0, 18, 0, 3, 1, 0, 1, 1, 1, 1, 1]' : 0.123651}", "{'[0, 4, 6, 5, 6, 5, 0, 0, 18, 0, 3, 1, 0, 1, 1, 1, 1, 1]' : 0.123517}", "{'[0, 4, 6, 5, 6, 5, 0, 0, 18, 0, 3, 1, 0, 1, 1, 1, 1, 1]' : 0.123516}", "{'[0, 4, 6, 5, 6, 5, 0, 0, 18, 0, 3, 1, 0, 1, 1, 1, 1, 1]' : 0.124545}", "{'[0, 4, 6, 5, 6, 5, 0, 0, 18, 0, 3, 1, 0, 1, 1, 1, 1, 1]' : 0.123766}", "{'[0, 4, 6, 5, 6, 5, 0, 0, 18, 0, 3, 1, 0, 1, 1, 1, 1, 1]' : 0.123516}", "{'[0, 4, 6, 5, 6, 5, 0, 0, 18, 0, 3, 1, 0, 1, 1, 1, 1, 1]' : 0.123539}", "{'[0, 4, 6, 5, 6, 5, 0, 0, 18, 0, 3, 1, 0, 1, 1, 1, 1, 1]' : 0.123612}", "{'[0, 4, 6, 5, 6, 5, 0, 0, 18, 0, 3, 1, 0, 1, 1, 1, 1, 1]' : 0.123511}", "{'[0, 4, 6, 5, 6, 5, 0, 0, 18, 0, 3, 1, 0, 1, 1, 1, 1, 1]' : 0.123549}", "{'[0, 4, 6, 5, 6, 5, 0, 0, 18, 0, 3, 1, 0, 1, 1, 1, 1, 1]' : 0.123504}", "{'[0, 4, 6, 5, 6, 5, 0, 0, 18, 0, 3, 1, 0, 1, 1, 1, 1, 1]' : 0.12362}", "{'[0, 4, 6, 5, 6, 5, 0, 0, 18, 0, 3, 1, 0, 1, 1, 1, 1, 1]' : 0.123949}", "{'[0, 4, 6, 5, 6, 5, 0, 0, 18, 0, 3, 1, 0, 1, 1, 1, 1, 1]' : 0.123647}"]
returning from 'run': {'[0, 4, 6, 5, 6, 5, 0, 0, 18, 0, 3, 1, 0, 1, 1, 1, 1, 1]': ([0.123651, 0.123565, 0.123478, 0.124839, 0.123521, 0.123608, 0.123561, 0.123532, 0.123538, 0.12353, 0.123533, 0.123597, 0.123559, 0.123512, 0.123565, 0.123671, 0.123651, 0.123517, 0.123516, 0.124545, 0.123766, 0.123516, 0.123539, 0.123612, 0.123511, 0.123549, 0.123504, 0.12362, 0.123949, 0.123647], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.123651, 0.123565, 0.123478, 0.124839, 0.123521, 0.123608, 0.123561, 0.123532, 0.123538, 0.12353, 0.123533, 0.123597, 0.123559, 0.123512, 0.123565, 0.123671, 0.123651, 0.123517, 0.123516, 0.124545, 0.123766, 0.123516, 0.123539, 0.123612, 0.123511, 0.123549, 0.123504, 0.12362, 0.123949, 0.123647], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[0, 4, 6, 5, 6, 5, 0, 0, 18, 0, 3, 1, 0, 1, 1, 1, 1, 1]': ([0.123651, 0.123565, 0.123478, 0.124839, 0.123521, 0.123608, 0.123561, 0.123532, 0.123538, 0.12353, 0.123533, 0.123597, 0.123559, 0.123512, 0.123565, 0.123671, 0.123651, 0.123517, 0.123516, 0.124545, 0.123766, 0.123516, 0.123539, 0.123612, 0.123511, 0.123549, 0.123504, 0.12362, 0.123949, 0.123647], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [1, 3, 5, 0, 1, 0, 27, 0, 21, 21, 0, 0, 0, 0]
Fixed Factors: {'T2_K': 5, 'T2_J': 6, 'SCR': 1, 'VEC1': 1}
Testing candidate 15: [1, 3, 5, 0, 6, 5, 1, 0, 27, 0, 21, 21, 0, 0, 0, 1, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		305
        Multiplications: 	92
        Divisions: 		0
        Logical: 		0
        Reads: 			673
        Writes: 		154
        Comparisons:		13
        Gotos: 			0
        
digraph CFG {
	ForLoop19078295 [label="ForLoop19078295  for (j=(min(ny-1,jj+63))-(((min(ny-1,jj+63))-(jj)+1)%22)+1; j<=min(ny-1,jj+63); j=j+1) {...",shape=box];
	ForLoop19078295 -> 19078294;
	ForLoop19078295 -> _JOIN_19078295;
	_JOIN_19079029 [label="_JOIN_19079029None...",shape=box];
	_JOIN_19079029 -> _JOIN_19079031;
	19086577 [label="19086577  tmp[i]=scv_24;...",shape=box];
	19086577 -> _JOIN_19079034;
	ForLoop19078298 [label="ForLoop19078298  for (jj=jjj; jj<=min(ny-1,jjj+1984); jj=jj+64) {...",shape=box];
	ForLoop19078298 -> 19077611;
	ForLoop19078298 -> _JOIN_19078298;
	ForLoop19078299 [label="ForLoop19078299  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop19078299 -> ForLoop19078298;
	ForLoop19078299 -> _JOIN_19078299;
	19077511 [label="19077511  double x_copy[64];...",shape=box];
	_JOIN_19056197 [label="_JOIN_19056197None...",shape=box];
	_JOIN_19056197 -> 19077511;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 19055421;
	19078331 [label="19078331  int k;...",shape=box];
	19078331 -> ForLoop19078961;
	_JOIN_19078961 [label="_JOIN_19078961None...",shape=box];
	_JOIN_19078961 -> ForLoop19079029;
	ForLoop19079029 [label="ForLoop19079029  for (k=(min(ny-1,kk+255))-(((min(ny-1,kk+255))-(kk)+1)%22)+1; k<=min(ny-1,kk+255); k=k+1) {...",shape=box];
	ForLoop19079029 -> 19083040;
	ForLoop19079029 -> _JOIN_19079029;
	ForLoop19078961 [label="ForLoop19078961  for (k=kk; k<=min(ny-1,kk+255)-21; k=k+22) {...",shape=box];
	ForLoop19078961 -> 19082511;
	ForLoop19078961 -> _JOIN_19078961;
	ForLoop19056128 [label="ForLoop19056128  for (i=0; i<=cbv_1; i=i+28) {...",shape=box];
	ForLoop19056128 -> 19055883;
	ForLoop19056128 -> _JOIN_19056128;
	19078294 [label="19078294  scv_24=scv_24+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	19078294 -> _JOIN_19078295;
	19082511 [label="19082511  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	ForLoop19079032 [label="ForLoop19079032  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop19079032 -> ForLoop19079031;
	ForLoop19079032 -> _JOIN_19079032;
	ForLoop19079031 [label="ForLoop19079031  for (kk=kkk; kk<=min(ny-1,kkk+768); kk=kk+256) {...",shape=box];
	ForLoop19079031 -> 19078331;
	ForLoop19079031 -> _JOIN_19079031;
	19055421 [label="19055421  int i;...",shape=box];
	_JOIN_19079031 [label="_JOIN_19079031None...",shape=box];
	_JOIN_19079031 -> _JOIN_19079032;
	ForLoop19079035 [label="ForLoop19079035  for (ii=0; ii<=nx-1; ii=ii+16) {...",shape=box];
	ForLoop19079035 -> ForLoop19079034;
	ForLoop19079035 -> _JOIN_19079035;
	ForLoop19079034 [label="ForLoop19079034  for (i=ii; i<=min(nx-1,ii+15); i=i+1) {...",shape=box];
	ForLoop19079034 -> 19086565;
	ForLoop19079034 -> _JOIN_19079034;
	19056196 [label="19056196  y[i]=0.0;...",shape=box];
	19056196 -> _JOIN_19056197;
	19086565 [label="19086565  double scv_24;...",shape=box];
	_JOIN_19079032 [label="_JOIN_19079032None...",shape=box];
	_JOIN_19079032 -> 19086577;
	19056490 [label="19056490  register int cbv_2, cbv_3;...",shape=box];
	_JOIN_19079035 [label="_JOIN_19079035None...",shape=box];
	_JOIN_19079034 [label="_JOIN_19079034None...",shape=box];
	_JOIN_19079034 -> _JOIN_19079035;
	ForLoop19056197 [label="ForLoop19056197  for (i=cbv_2; iexpected=9369846271501.798828
actual=9369846271501.798828
<=cbv_3; i=i+1) ...",shape=box];
	ForLoop19056197 -> 19056196;
	ForLoop19056197 -> _JOIN_19056197;
	19055883 [label="19055883  y[i]=0.0;...",shape=box];
	_JOIN_19078224 [label="_JOIN_19078224None...",shape=box];
	_JOIN_19078224 -> ForLoop19078295;
	19077655 [label="19077655  scv_24=scv_24+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop19078224 [label="ForLoop19078224  for (j=jj; j<=min(ny-1,jj+63)-21; j=j+22) {...",shape=box];
	ForLoop19078224 -> 19077655;
	ForLoop19078224 -> _JOIN_19078224;
	19077611 [label="19077611  for (j=jj; j<=min(ny-1,jj+63); j=j+1) ...",shape=box];
	19083040 [label="19083040  double scv_23;...",shape=box];
	_JOIN_19078295 [label="_JOIN_19078295None...",shape=box];
	_JOIN_19078295 -> _JOIN_19078298;
	_JOIN_19056128 [label="_JOIN_19056128None...",shape=box];
	_JOIN_19056128 -> 19056490;
	_JOIN_19078298 [label="_JOIN_19078298None...",shape=box];
	_JOIN_19078298 -> _JOIN_19078299;
	_JOIN_19078299 [label="_JOIN_19078299None...",shape=box];
	_JOIN_19078299 -> ForLoop19079032;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest86.exe __orio_perftest86.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest86.exe  
{'[1, 3, 5, 0, 6, 5, 1, 0, 27, 0, 21, 21, 0, 0, 0, 1, 1, 0]' : 0.137224}
{'[1, 3, 5, 0, 6, 5, 1, 0, 27, 0, 21, 21, 0, 0, 0, 1, 1, 0]' : 0.137051}
{'[1, 3, 5, 0, 6, 5, 1, 0, 27, 0, 21, 21, 0, 0, 0, 1, 1, 0]' : 0.137233}
{'[1, 3, 5, 0, 6, 5, 1, 0, 27, 0, 21, 21, 0, 0, 0, 1, 1, 0]' : 0.137086}
{'[1, 3, 5, 0, 6, 5, 1, 0, 27, 0, 21, 21, 0, 0, 0, 1, 1, 0]' : 0.137029}
{'[1, 3, 5, 0, 6, 5, 1, 0, 27, 0, 21, 21, 0, 0, 0, 1, 1, 0]' : 0.137054}
{'[1, 3, 5, 0, 6, 5, 1, 0, 27, 0, 21, 21, 0, 0, 0, 1, 1, 0]' : 0.137078}
{'[1, 3, 5, 0, 6, 5, 1, 0, 27, 0, 21, 21, 0, 0, 0, 1, 1, 0]' : 0.137039}
{'[1, 3, 5, 0, 6, 5, 1, 0, 27, 0, 21, 21, 0, 0, 0, 1, 1, 0]' : 0.138142}
{'[1, 3, 5, 0, 6, 5, 1, 0, 27, 0, 21, 21, 0, 0, 0, 1, 1, 0]' : 0.137253}
{'[1, 3, 5, 0, 6, 5, 1, 0, 27, 0, 21, 21, 0, 0, 0, 1, 1, 0]' : 0.137035}
{'[1, 3, 5, 0, 6, 5, 1, 0, 27, 0, 21, 21, 0, 0, 0, 1, 1, 0]' : 0.137023}
{'[1, 3, 5, 0, 6, 5, 1, 0, 27, 0, 21, 21, 0, 0, 0, 1, 1, 0]' : 0.137064}
{'[1, 3, 5, 0, 6, 5, 1, 0, 27, 0, 21, 21, 0, 0, 0, 1, 1, 0]' : 0.137072}
{'[1, 3, 5, 0, 6, 5, 1, 0, 27, 0, 21, 21, 0, 0, 0, 1, 1, 0]' : 0.137031}
{'[1, 3, 5, 0, 6, 5, 1, 0, 27, 0, 21, 21, 0, 0, 0, 1, 1, 0]' : 0.137182}
{'[1, 3, 5, 0, 6, 5, 1, 0, 27, 0, 21, 21, 0, 0, 0, 1, 1, 0]' : 0.137064}
{'[1, 3, 5, 0, 6, 5, 1, 0, 27, 0, 21, 21, 0, 0, 0, 1, 1, 0]' : 0.137235}
{'[1, 3, 5, 0, 6, 5, 1, 0, 27, 0, 21, 21, 0, 0, 0, 1, 1, 0]' : 0.13704}
{'[1, 3, 5, 0, 6, 5, 1, 0, 27, 0, 21, 21, 0, 0, 0, 1, 1, 0]' : 0.137107}
{'[1, 3, 5, 0, 6, 5, 1, 0, 27, 0, 21, 21, 0, 0, 0, 1, 1, 0]' : 0.137303}
{'[1, 3, 5, 0, 6, 5, 1, 0, 27, 0, 21, 21, 0, 0, 0, 1, 1, 0]' : 0.137064}
{'[1, 3, 5, 0, 6, 5, 1, 0, 27, 0, 21, 21, 0, 0, 0, 1, 1, 0]' : 0.13807}
{'[1, 3, 5, 0, 6, 5, 1, 0, 27, 0, 21, 21, 0, 0, 0, 1, 1, 0]' : 0.137089}
{'[1, 3, 5, 0, 6, 5, 1, 0, 27, 0, 21, 21, 0, 0, 0, 1, 1, 0]' : 0.137112}
{'[1, 3, 5, 0, 6, 5, 1, 0, 27, 0, 21, 21, 0, 0, 0, 1, 1, 0]' : 0.137054}
{'[1, 3, 5, 0, 6, 5, 1, 0, 27, 0, 21, 21, 0, 0, 0, 1, 1, 0]' : 0.137062}
{'[1, 3, 5, 0, 6, 5, 1, 0, 27, 0, 21, 21, 0, 0, 0, 1, 1, 0]' : 0.137054}
{'[1, 3, 5, 0, 6, 5, 1, 0, 27, 0, 21, 21, 0, 0, 0, 1, 1, 0]' : 0.137054}
{'[1, 3, 5, 0, 6, 5, 1, 0, 27, 0, 21, 21, 0, 0, 0, 1, 1, 0]' : 0.13713}

out:
 ["{'[1, 3, 5, 0, 6, 5, 1, 0, 27, 0, 21, 21, 0, 0, 0, 1, 1, 0]' : 0.137224}", "{'[1, 3, 5, 0, 6, 5, 1, 0, 27, 0, 21, 21, 0, 0, 0, 1, 1, 0]' : 0.137051}", "{'[1, 3, 5, 0, 6, 5, 1, 0, 27, 0, 21, 21, 0, 0, 0, 1, 1, 0]' : 0.137233}", "{'[1, 3, 5, 0, 6, 5, 1, 0, 27, 0, 21, 21, 0, 0, 0, 1, 1, 0]' : 0.137086}", "{'[1, 3, 5, 0, 6, 5, 1, 0, 27, 0, 21, 21, 0, 0, 0, 1, 1, 0]' : 0.137029}", "{'[1, 3, 5, 0, 6, 5, 1, 0, 27, 0, 21, 21, 0, 0, 0, 1, 1, 0]' : 0.137054}", "{'[1, 3, 5, 0, 6, 5, 1, 0, 27, 0, 21, 21, 0, 0, 0, 1, 1, 0]' : 0.137078}", "{'[1, 3, 5, 0, 6, 5, 1, 0, 27, 0, 21, 21, 0, 0, 0, 1, 1, 0]' : 0.137039}", "{'[1, 3, 5, 0, 6, 5, 1, 0, 27, 0, 21, 21, 0, 0, 0, 1, 1, 0]' : 0.138142}", "{'[1, 3, 5, 0, 6, 5, 1, 0, 27, 0, 21, 21, 0, 0, 0, 1, 1, 0]' : 0.137253}", "{'[1, 3, 5, 0, 6, 5, 1, 0, 27, 0, 21, 21, 0, 0, 0, 1, 1, 0]' : 0.137035}", "{'[1, 3, 5, 0, 6, 5, 1, 0, 27, 0, 21, 21, 0, 0, 0, 1, 1, 0]' : 0.137023}", "{'[1, 3, 5, 0, 6, 5, 1, 0, 27, 0, 21, 21, 0, 0, 0, 1, 1, 0]' : 0.137064}", "{'[1, 3, 5, 0, 6, 5, 1, 0, 27, 0, 21, 21, 0, 0, 0, 1, 1, 0]' : 0.137072}", "{'[1, 3, 5, 0, 6, 5, 1, 0, 27, 0, 21, 21, 0, 0, 0, 1, 1, 0]' : 0.137031}", "{'[1, 3, 5, 0, 6, 5, 1, 0, 27, 0, 21, 21, 0, 0, 0, 1, 1, 0]' : 0.137182}", "{'[1, 3, 5, 0, 6, 5, 1, 0, 27, 0, 21, 21, 0, 0, 0, 1, 1, 0]' : 0.137064}", "{'[1, 3, 5, 0, 6, 5, 1, 0, 27, 0, 21, 21, 0, 0, 0, 1, 1, 0]' : 0.137235}", "{'[1, 3, 5, 0, 6, 5, 1, 0, 27, 0, 21, 21, 0, 0, 0, 1, 1, 0]' : 0.13704}", "{'[1, 3, 5, 0, 6, 5, 1, 0, 27, 0, 21, 21, 0, 0, 0, 1, 1, 0]' : 0.137107}", "{'[1, 3, 5, 0, 6, 5, 1, 0, 27, 0, 21, 21, 0, 0, 0, 1, 1, 0]' : 0.137303}", "{'[1, 3, 5, 0, 6, 5, 1, 0, 27, 0, 21, 21, 0, 0, 0, 1, 1, 0]' : 0.137064}", "{'[1, 3, 5, 0, 6, 5, 1, 0, 27, 0, 21, 21, 0, 0, 0, 1, 1, 0]' : 0.13807}", "{'[1, 3, 5, 0, 6, 5, 1, 0, 27, 0, 21, 21, 0, 0, 0, 1, 1, 0]' : 0.137089}", "{'[1, 3, 5, 0, 6, 5, 1, 0, 27, 0, 21, 21, 0, 0, 0, 1, 1, 0]' : 0.137112}", "{'[1, 3, 5, 0, 6, 5, 1, 0, 27, 0, 21, 21, 0, 0, 0, 1, 1, 0]' : 0.137054}", "{'[1, 3, 5, 0, 6, 5, 1, 0, 27, 0, 21, 21, 0, 0, 0, 1, 1, 0]' : 0.137062}", "{'[1, 3, 5, 0, 6, 5, 1, 0, 27, 0, 21, 21, 0, 0, 0, 1, 1, 0]' : 0.137054}", "{'[1, 3, 5, 0, 6, 5, 1, 0, 27, 0, 21, 21, 0, 0, 0, 1, 1, 0]' : 0.137054}", "{'[1, 3, 5, 0, 6, 5, 1, 0, 27, 0, 21, 21, 0, 0, 0, 1, 1, 0]' : 0.13713}"]
returning from 'run': {'[1, 3, 5, 0, 6, 5, 1, 0, 27, 0, 21, 21, 0, 0, 0, 1, 1, 0]': ([0.137224, 0.137051, 0.137233, 0.137086, 0.137029, 0.137054, 0.137078, 0.137039, 0.138142, 0.137253, 0.137035, 0.137023, 0.137064, 0.137072, 0.137031, 0.137182, 0.137064, 0.137235, 0.13704, 0.137107, 0.137303, 0.137064, 0.13807, 0.137089, 0.137112, 0.137054, 0.137062, 0.137054, 0.137054, 0.13713], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.137224, 0.137051, 0.137233, 0.137086, 0.137029, 0.137054, 0.137078, 0.137039, 0.138142, 0.137253, 0.137035, 0.137023, 0.137064, 0.137072, 0.137031, 0.137182, 0.137064, 0.137235, 0.13704, 0.137107, 0.137303, 0.137064, 0.13807, 0.137089, 0.137112, 0.137054, 0.137062, 0.137054, 0.137054, 0.13713], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[1, 3, 5, 0, 6, 5, 1, 0, 27, 0, 21, 21, 0, 0, 0, 1, 1, 0]': ([0.137224, 0.137051, 0.137233, 0.137086, 0.137029, 0.137054, 0.137078, 0.137039, 0.138142, 0.137253, 0.137035, 0.137023, 0.137064, 0.137072, 0.137031, 0.137182, 0.137064, 0.137235, 0.13704, 0.137107, 0.137303, 0.137064, 0.13807, 0.137089, 0.137112, 0.137054, 0.137062, 0.137054, 0.137054, 0.13713], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [1, 0, 5, 1, 0, 0, 5, 17, 1, 0, 2, 0, 0, 1]
Fixed Factors: {'T2_K': 5, 'T2_J': 6, 'SCR': 1, 'VEC1': 1}
Testing candidate 16: [1, 0, 5, 1, 6, 5, 0, 0, 5, 17, 1, 0, 2, 0, 0, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	6
        Additions: 		865
        Multiplications: 	408
        Divisions: 		0
        Logical: 		0
        Reads: 			2012
        Writes: 		410
        Comparisons:		25
        Gotos: 			0
        
digraph CFG {
	_JOIN_19088679 [label="_JOIN_19088679None...",shape=box];
	_JOIN_19088679 -> 19175144;
	_JOIN_19181653 [label="_JOIN_19181653None...",shape=box];
	_JOIN_19181653 -> 19219404;
	ForLoop19181000 [label="ForLoop19181000  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop19181000 -> 19179281;
	ForLoop19181000 -> _JOIN_19181000;
	ForLoop19181517 [label="ForLoop19181517  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop19181517 -> ForLoop19181515;
	ForLoop19181517 -> _JOIN_19181517;
	19218880 [label="19218880  register int cbv_6, cbv_7;...",shape=box];
	ForLoop19181793 [label="ForLoop19181793  for (k=kk; k<=cbv_12; k=k+1) {...",shape=box];
	ForLoop19181793 -> 19204611;
	ForLoop19181793 -> _JOIN_19181793;
	19181720 [label="19181720  scv_60=scv_60+A[i*ny+j]*x[j];...",shape=box];
	19181720 -> _JOIN_19181721;
	19181626 [label="19181626  scv_60=scv_60+A[i*ny+j]*x[j];...",shape=box];
	_JOIN_19180436 [label="_JOIN_19180436None...",shape=box];
	_JOIN_19180436 -> 19218880;
	19179281 [label="19179281  int j;...",shape=box];
	_JOIN_19088610 [label="_JOIN_19088610None...",shape=box];
	_JOIN_19088610 -> 19088774;
	19217203 [label="19217203  register int cbv_2, cbv_3;...",shape=box];
	_JOIN_19181515 [label="_JOIN_19181515None...",shape=box];
	_JOIN_19181515 -> _JOIN_19181517;
	_JOIN_19181519 [label="_JOIN_19181519None...",shape=box];
	_JOIN_19181519 -> ForLoop19181797;
	19175216 [label="19175216  int j;...",shape=box];
	ForLoop19179084 [label="ForLoop19179084  for (kk=kkk; kk<=min(ny-1,kkk+768); kk=kk+256) {...",shape=box];
	ForLoop19179084 -> 19217821;
	ForLoop19179084 -> _JOIN_19179084;
	ForLoop19179085 [label="ForLoop19179085  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop19179085 -> ForLoop19179084;
	ForLoop19179085 -> _JOIN_19179085;
	19186073 [label="19186073  double scv_3;...",shape=box];
	ForLoop19179087 [label="ForLoop19179087  for (it=ii; it<=min(nx-1,ii+15)-31; it=it+32) {...",shape=box];
	ForLoop19179087 -> 19195106;
	ForLoop19179087 -> _JOIN_19179087;
	_JOIN_19181517 [label="_JOIN_19181517None...",shape=box];
	_JOIN_19181517 -> 19203803;
	19195118 [label="19195118  tmp[it]=scv_5;...",shape=box];
	_JOIN_19177236 [label="_JOIN_19177236None...",shape=box];
	_JOIN_19177236 -> 19217203;
	19203785 [label="19203785  double scv_41, scv_42, scv_43, scv_44, scv_45, scv_46, scv_47, scv_48;...",shape=box];
	ForLoop19181723 [label="ForLoop19181723  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop19181723 -> 19181586;
	ForLoop19181723 -> _JOIN_19181723;
	_JOIN_19181793 [label="_JOIN_19181793None...",shape=box];
	_JOIN_19181793 -> _JOIN_19181794;
	ForLoop19181721 [label="ForLoop19181721  for (j=cbv_10; j<=cbv_11; j=j+1) {...",shape=box];
	ForLoop19181721 -> 19181720;
	ForLoop19181721 -> _JOIN_19181721;
	_JOIN_19181794 [label="_JOIN_19181794None...",shape=box];
	_JOIN_19181794 -> _JOIN_19181795;
	ForLoop19179083 [label="ForLoop19179083  for (k=kk; k<=cbv_4; k=k+1) {...",shape=box];
	ForLoop19179083 -> 19190002;
	ForLoop19179083 -> _JOIN_19179083;
	_JOIN_19181795 [label="_JOIN_19181795None...",shape=box];
	_JOIN_19181795 -> 19205060;
	19198359 [label="19198359  double scv_39;...",shape=box];
	19205060 [label="19205060  tmp[i]=scv_60;...",shape=box];
	19205060 -> _JOIN_19181797;
	19203803 [label="19203803  tmp[(i+12)]=scv_41;...",shape=box];
	19200625 [label="19200625  double scv_40;...",shape=box];
	19205048 [label="19205048  double scv_60;...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 19088431;
	19219404 [label="19219404  register int cbv_10, cbv_11;...",shape=box];
	_JOIN_19181513 [label="_JOIN_19181513None...",shape=box];
	_JOIN_19181513 -> _JOIN_19181515;
	19219495 [label="19219495  register int cbv_12;...",shape=box];
	_JOIN_19181723 [label="_JOIN_19181723None...",shape=box];
	_JOIN_19181723 -> ForLoop19181795;
	19184711 [label="19184711  double scv_1, scv_2;...",shape=box];
	19088431 [label="19088431  int i;...",shape=box];
	ForLoop19181797 [label="ForLoop19181797  for (i=(min(nx-1,ii+15))-(((min(nx-1,ii+15))-(it)+1)%18)+1; i<=min(nx-1,ii+15); i=i+1) {...",shape=box];
	ForLoop19181797 -> 19205048;
	ForLoop19181797 -> _JOIN_19181797;
	ForLoop19181794 [label="ForLoop19181794  for (kk=kkk; kk<=min(ny-1,kkk+768); kk=kk+256) {...",shape=box];
	ForLoop19181794 -> 19219495;
	ForLoop19181794 -> _JOIN_19181794;
	ForLoop19181795 [label="ForLoop19181795  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop19181795 -> ForLoop19181794;
	ForLoop19181795 -> _JOIN_19181795;
	ForLoop19181653 [label="ForLoop19181653  for (j=jjj; j<=cbv_9; j=j+2) {...",shape=box];
	ForLoop19181653 -> 19181626;
	ForLoop19181653 -> _JOIN_19181653;
	_JOIN_19178204 [label="_JOIN_19178204None...",shape=box];
	_JOIN_19178204 -> _JOIN_19178206;
	_JOIN_19181000 [label="_JOIN_19181000None...",shape=box];
	_JOIN_19181000 -> ForLoop19181517;
	ForLoop19088679 [label="ForLoop19088679  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop19088679 -> 19088678;
	ForLoop19088679 -> _JOIN_19088679;
	_JOIN_19178206 [label="_JOIN_19178206None...",shape=box];
	_JOIN_19178206 -> ForLoop19179085;
	_JOIN_19181800 [label="_JOIN_19181800None...",shape=box];
	_JOIN_19181800 -> _JOIN_19181801;
	19195106 [label="19195106  double scv_5, scv_6, scv_7, scv_8, scv_9, scv_10, scv_11, scv_12;...",shape=box];
	_JOIN_19181797 [label="_JOIN_19181797None...",shape=box];
	_JOIN_19181797 -> _JOIN_19181800;
	ForLoop19177236 [label="ForLoop19177236  for (j=jjj; j<=cbv_1; j=j+2) {...",shape=box];
	ForLoop19177236 -> 19184711;
	ForLoop19177236 -> _JOIN_19177236;
	ForLoop19088610 [label="ForLoop19088610  for (i=0; i<=cbv_1; i=i+6) {...",shape=box];
	ForLoop19088610 -> 19088563;
	ForLoop19088610 -> _JOIN_19088610;
	19197571 [label="19197571  double scv_37, scv_38;...",shape=box];
	19088678 [label="19088678  y[i]=0.0;...",shape=box];
	19088678 -> _JOIN_19088679;
	ForLoop19180436 [label="ForLoop19180436  for (j=jjj; j<=cbv_5; j=j+2) {...",shape=box];
	ForLoop19180436 -> 19197571;
	ForLoop19180436 -> _JOIN_19180436;
	19217821 [label="19217821  register int cbv_4;...",shape=box];
	19088774 [label="19088774  register int cbv_2, cbv_3;...",shape=box];
	ForLoop19181800 [label="ForLoop19181800  for (ii=iii; ii<=min(nx-1,iii+48); ii=ii+16) {...",shape=box];
	ForLoop19181800 -> ForLoop19179087;
	ForLoop19181800 -> _JOIN_19181800;
	19190002 [label="19190002  double scv_4;...",shape=box];
	ForLoop19181519 [label="ForLoop19181519  for (i=it; i<=min(nx-1,ii+15)-17; i=i+18) {...",shape=box];
	ForLoop19181519 -> 19203785;
	ForLoop19181519 -> _JOIN_19181519;
	19175144 [label="19175144  double x_copy;...",shape=box];
	19179088 [label="19179088  int i;...",shape=box];
	19179088 -> ForLoop19181519;
	19181586 [label="19181586  int j;...",shape=box];
	ForLoop19181515 [label="ForLoop19181515  for (kk=kkk; kk<=min(ny-1,kkk+768); kk=kk+256) {...",shape=box];
	ForLoop19181515 -> 19219260;
	ForLoop19181515 -> _JOIN_19181515;
	_JOIN_19179083 [label="_JOIN_19179083None...",shape=box];
	_JOIN_19179083 -> _JOIN_19179084;
	_JOIN_19180998 [label="_JOIN_19180998None...",shape=box];
	_JOIN_19180998 -> _JOIN_19181000;
	_JOIN_19179085 [label="_JOIN_19179085None...",shape=box];
	_JOIN_19179085 -> 19195118;
	_JOIN_19179084 [label="_JOIN_19179084None...",shape=box];
	_JOIN_19179084 -> _JOIN_19179085;
	_JOIN_19179087 [label="_JOIN_19179087None...",shape=box];
	_JOIN_19179087 -> 19179088;
	ForLoop19181513 [label="ForLoop19181513  for (k=kk; k<=cbv_8; k=k+1) {...",shape=box];
	ForLoop19181513 -> 19200625;
	ForLoop19181513 -> _JOIN_19181513;
	_JOIN_19181721 [label="_JOIN_19181721None...",shape=box];
	_JOIN_19181721 -> _JOIN_19181723;
	19219260 [label="19219260  register int cbv_8;...",shape=box];
	_JOIN_19181801 [label="_JOIN_19181801None...",shape=box];
	19204611 [label="19204611  double scv_59;...",shape=box];
	19088563 [label="19088563  y[i]=0.0;...",shape=box];
	ForLoop19181801 [label="ForLoop19181801  for (iii=0; iii<=nx-1; iii=iii+64) {...",shape=box];
	ForLoop19181801 -> ForLoop19181800;
	ForLoop19181801 -> _JOIN_19181801;
	ForLoop19178204 [label="ForLoop19178204  for (j=cbv_2; j<=cbv_3; j=j+1) {...",shape=box];
	ForLoop19178204 -> 19186073;
	ForLoop19178204 -> _JOIN_19178204;
	ForLoop19178206 [label="ForLoop19178206  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop19178206 -> 19175216;
	ForLoop19178206 -> _JOIN_19178206;
	ForLoop19180998 [label="ForLoop19180998  for (j=cbv_6; j<=cbv_7; j=j+1) {...",shape=box];
	ForLoop19180998 -> 19198359;
	ForLoop19180998 -> _JOIN_19180998;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest87.exe __orio_perftest87.c timer_cpu.o -lm
 running test:
	 .expected=9369846271501.798828
actual=9369846271501.798828
/__orio_perftest87.exe  
{'[1, 0, 5, 1, 6, 5, 0, 0, 5, 17, 1, 0, 2, 0, 0, 1, 1, 1]' : 0.131631}
{'[1, 0, 5, 1, 6, 5, 0, 0, 5, 17, 1, 0, 2, 0, 0, 1, 1, 1]' : 0.131456}
{'[1, 0, 5, 1, 6, 5, 0, 0, 5, 17, 1, 0, 2, 0, 0, 1, 1, 1]' : 0.131526}
{'[1, 0, 5, 1, 6, 5, 0, 0, 5, 17, 1, 0, 2, 0, 0, 1, 1, 1]' : 0.131643}
{'[1, 0, 5, 1, 6, 5, 0, 0, 5, 17, 1, 0, 2, 0, 0, 1, 1, 1]' : 0.131747}
{'[1, 0, 5, 1, 6, 5, 0, 0, 5, 17, 1, 0, 2, 0, 0, 1, 1, 1]' : 0.131535}
{'[1, 0, 5, 1, 6, 5, 0, 0, 5, 17, 1, 0, 2, 0, 0, 1, 1, 1]' : 0.131459}
{'[1, 0, 5, 1, 6, 5, 0, 0, 5, 17, 1, 0, 2, 0, 0, 1, 1, 1]' : 0.131561}
{'[1, 0, 5, 1, 6, 5, 0, 0, 5, 17, 1, 0, 2, 0, 0, 1, 1, 1]' : 0.131506}
{'[1, 0, 5, 1, 6, 5, 0, 0, 5, 17, 1, 0, 2, 0, 0, 1, 1, 1]' : 0.131469}
{'[1, 0, 5, 1, 6, 5, 0, 0, 5, 17, 1, 0, 2, 0, 0, 1, 1, 1]' : 0.131572}
{'[1, 0, 5, 1, 6, 5, 0, 0, 5, 17, 1, 0, 2, 0, 0, 1, 1, 1]' : 0.131458}
{'[1, 0, 5, 1, 6, 5, 0, 0, 5, 17, 1, 0, 2, 0, 0, 1, 1, 1]' : 0.131493}
{'[1, 0, 5, 1, 6, 5, 0, 0, 5, 17, 1, 0, 2, 0, 0, 1, 1, 1]' : 0.131479}
{'[1, 0, 5, 1, 6, 5, 0, 0, 5, 17, 1, 0, 2, 0, 0, 1, 1, 1]' : 0.131513}
{'[1, 0, 5, 1, 6, 5, 0, 0, 5, 17, 1, 0, 2, 0, 0, 1, 1, 1]' : 0.131731}
{'[1, 0, 5, 1, 6, 5, 0, 0, 5, 17, 1, 0, 2, 0, 0, 1, 1, 1]' : 0.13152}
{'[1, 0, 5, 1, 6, 5, 0, 0, 5, 17, 1, 0, 2, 0, 0, 1, 1, 1]' : 0.131539}
{'[1, 0, 5, 1, 6, 5, 0, 0, 5, 17, 1, 0, 2, 0, 0, 1, 1, 1]' : 0.131585}
{'[1, 0, 5, 1, 6, 5, 0, 0, 5, 17, 1, 0, 2, 0, 0, 1, 1, 1]' : 0.131615}
{'[1, 0, 5, 1, 6, 5, 0, 0, 5, 17, 1, 0, 2, 0, 0, 1, 1, 1]' : 0.131478}
{'[1, 0, 5, 1, 6, 5, 0, 0, 5, 17, 1, 0, 2, 0, 0, 1, 1, 1]' : 0.131438}
{'[1, 0, 5, 1, 6, 5, 0, 0, 5, 17, 1, 0, 2, 0, 0, 1, 1, 1]' : 0.131479}
{'[1, 0, 5, 1, 6, 5, 0, 0, 5, 17, 1, 0, 2, 0, 0, 1, 1, 1]' : 0.131485}
{'[1, 0, 5, 1, 6, 5, 0, 0, 5, 17, 1, 0, 2, 0, 0, 1, 1, 1]' : 0.131517}
{'[1, 0, 5, 1, 6, 5, 0, 0, 5, 17, 1, 0, 2, 0, 0, 1, 1, 1]' : 0.131671}
{'[1, 0, 5, 1, 6, 5, 0, 0, 5, 17, 1, 0, 2, 0, 0, 1, 1, 1]' : 0.13145}
{'[1, 0, 5, 1, 6, 5, 0, 0, 5, 17, 1, 0, 2, 0, 0, 1, 1, 1]' : 0.131844}
{'[1, 0, 5, 1, 6, 5, 0, 0, 5, 17, 1, 0, 2, 0, 0, 1, 1, 1]' : 0.131478}
{'[1, 0, 5, 1, 6, 5, 0, 0, 5, 17, 1, 0, 2, 0, 0, 1, 1, 1]' : 0.13145}

out:
 ["{'[1, 0, 5, 1, 6, 5, 0, 0, 5, 17, 1, 0, 2, 0, 0, 1, 1, 1]' : 0.131631}", "{'[1, 0, 5, 1, 6, 5, 0, 0, 5, 17, 1, 0, 2, 0, 0, 1, 1, 1]' : 0.131456}", "{'[1, 0, 5, 1, 6, 5, 0, 0, 5, 17, 1, 0, 2, 0, 0, 1, 1, 1]' : 0.131526}", "{'[1, 0, 5, 1, 6, 5, 0, 0, 5, 17, 1, 0, 2, 0, 0, 1, 1, 1]' : 0.131643}", "{'[1, 0, 5, 1, 6, 5, 0, 0, 5, 17, 1, 0, 2, 0, 0, 1, 1, 1]' : 0.131747}", "{'[1, 0, 5, 1, 6, 5, 0, 0, 5, 17, 1, 0, 2, 0, 0, 1, 1, 1]' : 0.131535}", "{'[1, 0, 5, 1, 6, 5, 0, 0, 5, 17, 1, 0, 2, 0, 0, 1, 1, 1]' : 0.131459}", "{'[1, 0, 5, 1, 6, 5, 0, 0, 5, 17, 1, 0, 2, 0, 0, 1, 1, 1]' : 0.131561}", "{'[1, 0, 5, 1, 6, 5, 0, 0, 5, 17, 1, 0, 2, 0, 0, 1, 1, 1]' : 0.131506}", "{'[1, 0, 5, 1, 6, 5, 0, 0, 5, 17, 1, 0, 2, 0, 0, 1, 1, 1]' : 0.131469}", "{'[1, 0, 5, 1, 6, 5, 0, 0, 5, 17, 1, 0, 2, 0, 0, 1, 1, 1]' : 0.131572}", "{'[1, 0, 5, 1, 6, 5, 0, 0, 5, 17, 1, 0, 2, 0, 0, 1, 1, 1]' : 0.131458}", "{'[1, 0, 5, 1, 6, 5, 0, 0, 5, 17, 1, 0, 2, 0, 0, 1, 1, 1]' : 0.131493}", "{'[1, 0, 5, 1, 6, 5, 0, 0, 5, 17, 1, 0, 2, 0, 0, 1, 1, 1]' : 0.131479}", "{'[1, 0, 5, 1, 6, 5, 0, 0, 5, 17, 1, 0, 2, 0, 0, 1, 1, 1]' : 0.131513}", "{'[1, 0, 5, 1, 6, 5, 0, 0, 5, 17, 1, 0, 2, 0, 0, 1, 1, 1]' : 0.131731}", "{'[1, 0, 5, 1, 6, 5, 0, 0, 5, 17, 1, 0, 2, 0, 0, 1, 1, 1]' : 0.13152}", "{'[1, 0, 5, 1, 6, 5, 0, 0, 5, 17, 1, 0, 2, 0, 0, 1, 1, 1]' : 0.131539}", "{'[1, 0, 5, 1, 6, 5, 0, 0, 5, 17, 1, 0, 2, 0, 0, 1, 1, 1]' : 0.131585}", "{'[1, 0, 5, 1, 6, 5, 0, 0, 5, 17, 1, 0, 2, 0, 0, 1, 1, 1]' : 0.131615}", "{'[1, 0, 5, 1, 6, 5, 0, 0, 5, 17, 1, 0, 2, 0, 0, 1, 1, 1]' : 0.131478}", "{'[1, 0, 5, 1, 6, 5, 0, 0, 5, 17, 1, 0, 2, 0, 0, 1, 1, 1]' : 0.131438}", "{'[1, 0, 5, 1, 6, 5, 0, 0, 5, 17, 1, 0, 2, 0, 0, 1, 1, 1]' : 0.131479}", "{'[1, 0, 5, 1, 6, 5, 0, 0, 5, 17, 1, 0, 2, 0, 0, 1, 1, 1]' : 0.131485}", "{'[1, 0, 5, 1, 6, 5, 0, 0, 5, 17, 1, 0, 2, 0, 0, 1, 1, 1]' : 0.131517}", "{'[1, 0, 5, 1, 6, 5, 0, 0, 5, 17, 1, 0, 2, 0, 0, 1, 1, 1]' : 0.131671}", "{'[1, 0, 5, 1, 6, 5, 0, 0, 5, 17, 1, 0, 2, 0, 0, 1, 1, 1]' : 0.13145}", "{'[1, 0, 5, 1, 6, 5, 0, 0, 5, 17, 1, 0, 2, 0, 0, 1, 1, 1]' : 0.131844}", "{'[1, 0, 5, 1, 6, 5, 0, 0, 5, 17, 1, 0, 2, 0, 0, 1, 1, 1]' : 0.131478}", "{'[1, 0, 5, 1, 6, 5, 0, 0, 5, 17, 1, 0, 2, 0, 0, 1, 1, 1]' : 0.13145}"]
returning from 'run': {'[1, 0, 5, 1, 6, 5, 0, 0, 5, 17, 1, 0, 2, 0, 0, 1, 1, 1]': ([0.131631, 0.131456, 0.131526, 0.131643, 0.131747, 0.131535, 0.131459, 0.131561, 0.131506, 0.131469, 0.131572, 0.131458, 0.131493, 0.131479, 0.131513, 0.131731, 0.13152, 0.131539, 0.131585, 0.131615, 0.131478, 0.131438, 0.131479, 0.131485, 0.131517, 0.131671, 0.13145, 0.131844, 0.131478, 0.13145], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.131631, 0.131456, 0.131526, 0.131643, 0.131747, 0.131535, 0.131459, 0.131561, 0.131506, 0.131469, 0.131572, 0.131458, 0.131493, 0.131479, 0.131513, 0.131731, 0.13152, 0.131539, 0.131585, 0.131615, 0.131478, 0.131438, 0.131479, 0.131485, 0.131517, 0.131671, 0.13145, 0.131844, 0.131478, 0.13145], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 5, 1, 6, 5, 0, 0, 5, 17, 1, 0, 2, 0, 0, 1, 1, 1]': ([0.131631, 0.131456, 0.131526, 0.131643, 0.131747, 0.131535, 0.131459, 0.131561, 0.131506, 0.131469, 0.131572, 0.131458, 0.131493, 0.131479, 0.131513, 0.131731, 0.13152, 0.131539, 0.131585, 0.131615, 0.131478, 0.131438, 0.131479, 0.131485, 0.131517, 0.131671, 0.13145, 0.131844, 0.131478, 0.13145], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [2, 1, 5, 6, 0, 0, 15, 27, 0, 27, 1, 1, 0, 0]
Fixed Factors: {'T2_K': 5, 'T2_J': 6, 'SCR': 1, 'VEC1': 1}
Testing candidate 17: [2, 1, 5, 6, 6, 5, 0, 0, 15, 27, 0, 27, 1, 1, 0, 1, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	31
        Max loop nest depth: 	6
        Additions: 		5759
        Multiplications: 	2812
        Divisions: 		0
        Logical: 		0
        Reads: 			10936
        Writes: 		1784
        Comparisons:		31
        Gotos: 			0
        
digraph CFG {
	ForLoop19589554 [label="ForLoop19589554  for (k=(min(ny-1,kk+255))-(((min(ny-1,kk+255))-(kk)+1)%28)+1; k<=min(ny-1,kk+255); k=k+1) {...",shape=box];
	ForLoop19589554 -> 19695799;
	ForLoop19589554 -> _JOIN_19589554;
	_JOIN_19590816 [label="_JOIN_19590816None...",shape=box];
	_JOIN_19590816 -> _JOIN_19590817;
	ForLoop19589556 [label="ForLoop19589556  for (kk=kkk; kk<=min(ny-1,kkk+768); kk=kk+256) {...",shape=box];
	ForLoop19589556 -> 19562470;
	ForLoop19589556 -> _JOIN_19589556;
	_JOIN_19589910 [label="_JOIN_19589910None...",shape=box];
	_JOIN_19589910 -> ForLoop19590811;
	_JOIN_19590811 [label="_JOIN_19590811None...",shape=box];
	_JOIN_19590811 -> 19771372;
	_JOIN_19590810 [label="_JOIN_19590810None...",shape=box];
	_JOIN_19590810 -> _JOIN_19590811;
	ForLoop19589558 [label="ForLoop19589558  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop19589558 -> ForLoop19589556;
	ForLoop19589558 -> _JOIN_19589558;
	_JOIN_19590813 [label="_JOIN_19590813None...",shape=box];
	_JOIN_19590813 -> _JOIN_19590816;
	19692658 [label="19692658  double scv_56, scv_57, scv_58, scv_59, scv_60, scv_61, scv_62, scv_63;...",shape=box];
	19546222 [label="19546222  int k;...",shape=box];
	19546222 -> ForLoop19553628;
	19762923 [label="19762923  double scv_85, scv_86, scv_87, scv_88, scv_89, scv_90, scv_91, scv_92;...",shape=box];
	ForLoop19589560 [label="ForLoop19589560  for (i=it; i<=min(nx-1,ii+31)-27; i=i+28) {...",shape=box];
	ForLoop19589560 -> 19762923;
	ForLoop19589560 -> _JOIN_19589560;
	_JOIN_19545944 [label="_JOIN_19545944None...",shape=box];
	_JOIN_19545944 -> ForLoop19546187;
	_JOIN_19589907 [label="_JOIN_19589907None...",shape=box];
	_JOIN_19589907 -> _JOIN_19589909;
	19641007 [label="19641007  double scv_47, scv_48, scv_49, scv_50, scv_51, scv_52, scv_53, scv_54;...",shape=box];
	_JOIN_19589909 [label="_JOIN_19589909None...",shape=box];
	_JOIN_19589909 -> _JOIN_19589910;
	ForLoop19590740 [label="ForLoop19590740  for (k=kk; k<=min(ny-1,kk+255)-27; k=k+28) {...",shape=box];
	ForLoop19590740 -> 19766952;
	ForLoop19590740 -> _JOIN_19590740;
	19589942 [label="19589942  int k;...",shape=box];
	19589942 -> ForLoop19590740;
	ForLoop19588783 [label="ForLoop19588783  for (k=kk; k<=min(ny-1,kk+255)-27; k=k+28) {...",shape=box];
	ForLoop19588783 -> 19692658;
	ForLoop19588783 -> _JOIN_19588783;
	_JOIN_19589868 [label="_JOIN_19589868None...",shape=box];
	_JOIN_19589868 -> ForLoop19589907;
	19642404 [label="19642404  double scv_55;...",shape=box];
	19608790 [label="19608790  double scv_10, scv_11, scv_12, scv_13, scv_14, scv_15, scv_16, scv_17;...",shape=box];
	19562470 [label="19562470  int k;...",shape=box];
	_JOIN_19553881 [label="_JOIN_19553881None...",shape=box];
	_JOIN_19553881 -> _JOIN_19553882;
	ForLoop19546190 [label="ForLoop19546190  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop19546190 -> ForLoop19546189;
	ForLoop19546190 -> _JOIN_19546190;
	_JOIN_19553882 [label="_JOIN_19553882None...",shape=box];
	_JOIN_19553882 -> 19630259;
	_JOIN_19553884 [label="_JOIN_19553884None...",shape=box];
	_JOIN_19553884 -> 19553885;
	ForLoop19220255 [label="ForLoop19220255  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop19220255 -> 19220254;
	ForLoop19220255 -> _JOIN_19220255;
	19553885 [label="19553885  int i;...",shape=box];
	19553885 -> ForLoop19589560;
	ForLoop19553879 [label="ForLoop19553879  for (k=(min(ny-1,kk+255))-(((min(ny-1,kk+255))-(kk)+1)%28)+1; k<=min(ny-1,kk+255); k=k+1) {...",shape=box];
	ForLoop19553879 -> 19610091;
	ForLoop19553879 -> _JOIN_19553879;
	_JOIN_19561611 [label="_JOIN_19561611None...",shape=box];
	_JOIN_19561611 -> ForLoop19562434;
	ForLoop19546187 [label="ForLoop19546187  for (j=jt; j<=min(ny-1,jj+15); j=j+1) {...",shape=box];
	ForLoop19546187 -> 19594284;
	ForLoop19546187 -> _JOIN_19546187;
	19766952 [label="19766952  double scv_113, scv_114, scv_115, scv_116, scv_117, scv_118, scv_119, scv_120;...",shape=box];
	_JOIN_19588783 [label="_JOIN_19588783None...",shape=box];
	_JOIN_19588783 -> ForLoop19589554;
	ForLoop19546189 [label="ForLoop19546189  for (jj=jjj; jj<=min(ny-1,jjj+2032); jj=jj+16) {...",shape=box];
	ForLoop19546189 -> ForLoop19545944;
	ForLoop19546189 -> _JOIN_19546189;
	ForLoop19589868 [label="ForLoop19589868  for (jt=jj; jt<=min(ny-1,jj+15)-7; jt=jt+8) {...",shape=box];
	ForLoop19589868 -> 19589684;
	ForLoop19589868 -> _JOIN_19589868;
	_JOIN_19546189 [label="_JOIN_19546189None...",shape=box];
	_JOIN_19546189 -> _JOIN_19546190;
	ForLoop19561611 [label="ForLoop19561611  for (jt=jj; jt<=min(ny-1,jj+15)-7; jt=jt+8) {...",shape=box];
	ForLoop19561611 -> 19641007;
	ForLoop19561611 -> _JOIN_19561611;
	_JOIN_19546187 [label="_JOIN_19546187None...",shape=box];
	_JOIN_19546187 -> _JOIN_19546189;
	ForLoop19545944 [label="ForLoop19545944  for (jt=jj; jt<=min(ny-1,jj+15)-7; jt=jt+8) {...",shape=box];
	ForLoop19545944 -> 19593827;
	ForLoop19545944 -> _JOIN_19545944;
	ForLoop19589907 [label="ForLoop19589907  for (j=jt; j<=min(ny-1,jj+15); j=j+1) {...",shape=box];
	ForLoop19589907 -> 19589906;
	ForLoop19589907 -> _JOIN_19589907;
	19219767 [label="19219767  int i;...",shape=box];
	_JOIN_19589560 [label="_JOIN_19589560None...",shape=box];
	_JOIN_19589560 -> ForLoop19590813;
	ForLoop19589909 [label="ForLoop19589909  for (jj=jjj; jj<=min(ny-1,jjj+2032); jj=jj+16) {...",shape=box];
	ForLoop19589909 -> ForLoop19589868;
	ForLoop19589909 -> _JOIN_19589909;
	ForLoop19553881 [label="ForLoop19553881  for (kk=kkk; kk<=min(ny-1,kkk+768); kk=kk+256) {...",shape=box];
	ForLoop19553881 -> 19546222;
	ForLoop19553881 -> _JOIN_19553881;
	ForLoop19553882 [label="ForLoop19553882  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop19553882 -> ForLoop19553881;
	ForLoop19553882 -> _JOIN_19553882;
	ForLoop19553884 [label="ForLoop19553884  for (it=ii; it<=min(nx-1,ii+31)-7; it=it+8) {...",shape=box];
	ForLoop19553884 -> 19630247;
	ForLoop19553884 -> _JOIN_19553884;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 19219767;
	ForLoop19553628 [label="ForLoop19553628  for (k=kk; k<=min(ny-1,kk+255)-27; k=k+28) {...",shape=box];
	ForLoop19553628 -> 19608790;
	ForLoop19553628 -> _JOIN_19553628;
	_JOIN_19562438 [label="_JOIN_19562438None...",shape=box];
	_JOIN_19562438 -> ForLoop19589558;
	19610091 [label="19610091  double scv_38;...",shape=box];
	_JOIN_19562434 [label="_JOIN_19562434None...",shape=box];
	_JOIN_19562434 -> _JOIN_19562436;
	_JOIN_19546190 [label="_JOIN_19546190None...",shape=box];
	_JOIN_19546190 -> ForLoop19553882;
	_JOIN_19562436 [label="_JOIN_19562436None...",shape=box];
	_JOIN_19562436 -> _JOIN_19562438;
	_JOIN_19553628 [label="_JOIN_19553628None...",shape=box];
	_JOIN_19553628 -> ForLoop19553879;
	_JOIN_19589554 [label="_JOIN_19589554None...",shape=box];
	_JOIN_19589554 -> _JOIN_19589556;
	_JOIN_19589556 [label="_JOIN_19589556None...",shape=box];
	_JOIN_19589556 -> _JOIN_19589558;
	ForLoop19589910 [label="ForLoop19589910  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop19589910 -> ForLoop19589909;
	ForLoop19589910 -> _JOIN_19589910;
	_JOIN_19220186 [label="_JOIN_19220186None...",shape=box];
	_JOIN_19220186 -> 19220440;
	19220254 [label="19220254  y[i]=0.0;...",shape=box];
	19220254 -> _JOIN_19220255;
	_JOIN_19589558 [label="_JOIN_19589558None...",shape=box];
	_JOIN_19589558 -> 19762941;
	19589906 [label="19589906  scv_142=scv_142+A[i*ny+j]*x[j];...",shape=box];
	19589906 -> _JOIN_19589907;
	ForLoop19220186 [label="ForLoop19220186  for (i=0; i<=cbv_1; i=i+16) {...",shape=box];
	ForLoop19220186 -> 19220049;
	ForLoop19220186 -> _JOIN_19220186;
	19543713 [label="19543713  double x_copy;...",shape=box];
	ForLoop19562438 [label="ForLoop19562438  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop19562438 -> ForLoop19562436;
	ForLoop19562438 -> _JOIN_19562438;
	19630259 [label="19630259  tmp[it]=scv_39;...",shape=box];
	19767608 [label="19767608  double scv_141;...",shape=box];
	ForLoop19562434 [label="ForLoop19562434  for (j=jt; j<=min(ny-1,jj+15); j=j+1) {...",shape=box];
	ForLoop19562434 -> 19642404;
	ForLoop19562434 -> _JOIN_19562434;
	ForLoop19562436 [label="ForLoop19562436  for (jj=jjj; jj<=min(ny-1,jjj+2032); jj=jj+16) {...",shape=box];
	ForLoop19562436 -> ForLoop19561611;
	ForLoop19562436 -> _JOIN_19562436;
	19593827 [label="19593827  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	19220440 [label="19220440  register int cbv_2, cbv_3;...",shape=box];
	ForLoop19590813 [label="ForLoop19590813  for (i=(min(nx-1,ii+31))-(((min(nx-1,ii+31))-(it)+1)%28)+1; i<=min(nx-1,ii+31); i=i+1) {...",shape=box];
	ForLoop19590813 -> 19771360;
	ForLoop19590813 -> _JOIN_19590813;
	ForLoop19590811 [label="ForLoop19590811  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop19590811 -> ForLoop19590810;
	ForLoop19590811 -> _JOIN_19590811;
	19220049 [label="19220049  y[i]=0.0;...",shape=box];
	ForLoop19590817 [label="ForLoop19590817  for (iii=0; iii<=nx-1; iii=iii+2048) {...",shape=box];
	ForLoop19590817 -> ForLoop19590816;
	ForLoop19590817 -> _JOIN_19590817;
	ForLoop19590816 [label="ForLoop19590816  for (ii=iii; ii<=min(nx-1,iii+2016); ii=ii+32) {...",shape=box];
	ForLoop19590816 -> ForLoop19553884;
	ForLoop19590816 -> _JOIN_19590816;
	19762941 [label="19762941  tmp[(i+20)]=scv_85;...",shape=box];
	19771360 [label="19771360  double scv_142;...",shape=box];
	19630247 [label="19630247  double scv_39, scv_40, scv_41, scv_42, scv_43, scv_44, scv_45, scv_46;...",shape=box];
	_JOIN_19590808 [label="_JOIN_19590808None...",shape=box];
	_JOIN_19590808 -> _JOIN_19590810;
	19594284 [label="19594284  double scv_9;...",shape=box];
	19695799 [label="19695799  double scv_84;...",shape=box];
	ForLoop19590810 [label="ForLoop19590810  for (kk=kkk; kk<=min(ny-1,kkk+768); kk=kk+256) {...",shape=box];
	ForLoop19590810 -> 19589942;
	ForLoop19590810 -> _JOIN_19590810;
	_JOIN_19590817 [label="_JOIN_19590817None...",shape=box];
	19771372 [label="19771372  tmp[i]=scv_142;...",shape=boexpected=9369846271501.798828
actual=9369846271501.798828
x];
	19771372 -> _JOIN_19590813;
	ForLoop19590808 [label="ForLoop19590808  for (k=(min(ny-1,kk+255))-(((min(ny-1,kk+255))-(kk)+1)%28)+1; k<=min(ny-1,kk+255); k=k+1) {...",shape=box];
	ForLoop19590808 -> 19767608;
	ForLoop19590808 -> _JOIN_19590808;
	_JOIN_19590740 [label="_JOIN_19590740None...",shape=box];
	_JOIN_19590740 -> ForLoop19590808;
	_JOIN_19553879 [label="_JOIN_19553879None...",shape=box];
	_JOIN_19553879 -> _JOIN_19553881;
	19589684 [label="19589684  scv_142=scv_142+A[i*ny+jt]*x[jt];...",shape=box];
	_JOIN_19220255 [label="_JOIN_19220255None...",shape=box];
	_JOIN_19220255 -> 19543713;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest88.exe __orio_perftest88.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest88.exe  
{'[2, 1, 5, 6, 6, 5, 0, 0, 15, 27, 0, 27, 1, 1, 0, 1, 1, 0]' : 0.0885801}
{'[2, 1, 5, 6, 6, 5, 0, 0, 15, 27, 0, 27, 1, 1, 0, 1, 1, 0]' : 0.088032}
{'[2, 1, 5, 6, 6, 5, 0, 0, 15, 27, 0, 27, 1, 1, 0, 1, 1, 0]' : 0.0880301}
{'[2, 1, 5, 6, 6, 5, 0, 0, 15, 27, 0, 27, 1, 1, 0, 1, 1, 0]' : 0.0880458}
{'[2, 1, 5, 6, 6, 5, 0, 0, 15, 27, 0, 27, 1, 1, 0, 1, 1, 0]' : 0.088001}
{'[2, 1, 5, 6, 6, 5, 0, 0, 15, 27, 0, 27, 1, 1, 0, 1, 1, 0]' : 0.0880091}
{'[2, 1, 5, 6, 6, 5, 0, 0, 15, 27, 0, 27, 1, 1, 0, 1, 1, 0]' : 0.0880139}
{'[2, 1, 5, 6, 6, 5, 0, 0, 15, 27, 0, 27, 1, 1, 0, 1, 1, 0]' : 0.0879879}
{'[2, 1, 5, 6, 6, 5, 0, 0, 15, 27, 0, 27, 1, 1, 0, 1, 1, 0]' : 0.0879779}
{'[2, 1, 5, 6, 6, 5, 0, 0, 15, 27, 0, 27, 1, 1, 0, 1, 1, 0]' : 0.0884469}
{'[2, 1, 5, 6, 6, 5, 0, 0, 15, 27, 0, 27, 1, 1, 0, 1, 1, 0]' : 0.0880961}
{'[2, 1, 5, 6, 6, 5, 0, 0, 15, 27, 0, 27, 1, 1, 0, 1, 1, 0]' : 0.0882039}
{'[2, 1, 5, 6, 6, 5, 0, 0, 15, 27, 0, 27, 1, 1, 0, 1, 1, 0]' : 0.0890651}
{'[2, 1, 5, 6, 6, 5, 0, 0, 15, 27, 0, 27, 1, 1, 0, 1, 1, 0]' : 0.0883451}
{'[2, 1, 5, 6, 6, 5, 0, 0, 15, 27, 0, 27, 1, 1, 0, 1, 1, 0]' : 0.088141}
{'[2, 1, 5, 6, 6, 5, 0, 0, 15, 27, 0, 27, 1, 1, 0, 1, 1, 0]' : 0.088032}
{'[2, 1, 5, 6, 6, 5, 0, 0, 15, 27, 0, 27, 1, 1, 0, 1, 1, 0]' : 0.087991}
{'[2, 1, 5, 6, 6, 5, 0, 0, 15, 27, 0, 27, 1, 1, 0, 1, 1, 0]' : 0.0879822}
{'[2, 1, 5, 6, 6, 5, 0, 0, 15, 27, 0, 27, 1, 1, 0, 1, 1, 0]' : 0.0880129}
{'[2, 1, 5, 6, 6, 5, 0, 0, 15, 27, 0, 27, 1, 1, 0, 1, 1, 0]' : 0.0880041}
{'[2, 1, 5, 6, 6, 5, 0, 0, 15, 27, 0, 27, 1, 1, 0, 1, 1, 0]' : 0.0880129}
{'[2, 1, 5, 6, 6, 5, 0, 0, 15, 27, 0, 27, 1, 1, 0, 1, 1, 0]' : 0.0880129}
{'[2, 1, 5, 6, 6, 5, 0, 0, 15, 27, 0, 27, 1, 1, 0, 1, 1, 0]' : 0.0880408}
{'[2, 1, 5, 6, 6, 5, 0, 0, 15, 27, 0, 27, 1, 1, 0, 1, 1, 0]' : 0.0881989}
{'[2, 1, 5, 6, 6, 5, 0, 0, 15, 27, 0, 27, 1, 1, 0, 1, 1, 0]' : 0.087997}
{'[2, 1, 5, 6, 6, 5, 0, 0, 15, 27, 0, 27, 1, 1, 0, 1, 1, 0]' : 0.0880351}
{'[2, 1, 5, 6, 6, 5, 0, 0, 15, 27, 0, 27, 1, 1, 0, 1, 1, 0]' : 0.0885069}
{'[2, 1, 5, 6, 6, 5, 0, 0, 15, 27, 0, 27, 1, 1, 0, 1, 1, 0]' : 0.088042}
{'[2, 1, 5, 6, 6, 5, 0, 0, 15, 27, 0, 27, 1, 1, 0, 1, 1, 0]' : 0.0880101}
{'[2, 1, 5, 6, 6, 5, 0, 0, 15, 27, 0, 27, 1, 1, 0, 1, 1, 0]' : 0.0880661}

out:
 ["{'[2, 1, 5, 6, 6, 5, 0, 0, 15, 27, 0, 27, 1, 1, 0, 1, 1, 0]' : 0.0885801}", "{'[2, 1, 5, 6, 6, 5, 0, 0, 15, 27, 0, 27, 1, 1, 0, 1, 1, 0]' : 0.088032}", "{'[2, 1, 5, 6, 6, 5, 0, 0, 15, 27, 0, 27, 1, 1, 0, 1, 1, 0]' : 0.0880301}", "{'[2, 1, 5, 6, 6, 5, 0, 0, 15, 27, 0, 27, 1, 1, 0, 1, 1, 0]' : 0.0880458}", "{'[2, 1, 5, 6, 6, 5, 0, 0, 15, 27, 0, 27, 1, 1, 0, 1, 1, 0]' : 0.088001}", "{'[2, 1, 5, 6, 6, 5, 0, 0, 15, 27, 0, 27, 1, 1, 0, 1, 1, 0]' : 0.0880091}", "{'[2, 1, 5, 6, 6, 5, 0, 0, 15, 27, 0, 27, 1, 1, 0, 1, 1, 0]' : 0.0880139}", "{'[2, 1, 5, 6, 6, 5, 0, 0, 15, 27, 0, 27, 1, 1, 0, 1, 1, 0]' : 0.0879879}", "{'[2, 1, 5, 6, 6, 5, 0, 0, 15, 27, 0, 27, 1, 1, 0, 1, 1, 0]' : 0.0879779}", "{'[2, 1, 5, 6, 6, 5, 0, 0, 15, 27, 0, 27, 1, 1, 0, 1, 1, 0]' : 0.0884469}", "{'[2, 1, 5, 6, 6, 5, 0, 0, 15, 27, 0, 27, 1, 1, 0, 1, 1, 0]' : 0.0880961}", "{'[2, 1, 5, 6, 6, 5, 0, 0, 15, 27, 0, 27, 1, 1, 0, 1, 1, 0]' : 0.0882039}", "{'[2, 1, 5, 6, 6, 5, 0, 0, 15, 27, 0, 27, 1, 1, 0, 1, 1, 0]' : 0.0890651}", "{'[2, 1, 5, 6, 6, 5, 0, 0, 15, 27, 0, 27, 1, 1, 0, 1, 1, 0]' : 0.0883451}", "{'[2, 1, 5, 6, 6, 5, 0, 0, 15, 27, 0, 27, 1, 1, 0, 1, 1, 0]' : 0.088141}", "{'[2, 1, 5, 6, 6, 5, 0, 0, 15, 27, 0, 27, 1, 1, 0, 1, 1, 0]' : 0.088032}", "{'[2, 1, 5, 6, 6, 5, 0, 0, 15, 27, 0, 27, 1, 1, 0, 1, 1, 0]' : 0.087991}", "{'[2, 1, 5, 6, 6, 5, 0, 0, 15, 27, 0, 27, 1, 1, 0, 1, 1, 0]' : 0.0879822}", "{'[2, 1, 5, 6, 6, 5, 0, 0, 15, 27, 0, 27, 1, 1, 0, 1, 1, 0]' : 0.0880129}", "{'[2, 1, 5, 6, 6, 5, 0, 0, 15, 27, 0, 27, 1, 1, 0, 1, 1, 0]' : 0.0880041}", "{'[2, 1, 5, 6, 6, 5, 0, 0, 15, 27, 0, 27, 1, 1, 0, 1, 1, 0]' : 0.0880129}", "{'[2, 1, 5, 6, 6, 5, 0, 0, 15, 27, 0, 27, 1, 1, 0, 1, 1, 0]' : 0.0880129}", "{'[2, 1, 5, 6, 6, 5, 0, 0, 15, 27, 0, 27, 1, 1, 0, 1, 1, 0]' : 0.0880408}", "{'[2, 1, 5, 6, 6, 5, 0, 0, 15, 27, 0, 27, 1, 1, 0, 1, 1, 0]' : 0.0881989}", "{'[2, 1, 5, 6, 6, 5, 0, 0, 15, 27, 0, 27, 1, 1, 0, 1, 1, 0]' : 0.087997}", "{'[2, 1, 5, 6, 6, 5, 0, 0, 15, 27, 0, 27, 1, 1, 0, 1, 1, 0]' : 0.0880351}", "{'[2, 1, 5, 6, 6, 5, 0, 0, 15, 27, 0, 27, 1, 1, 0, 1, 1, 0]' : 0.0885069}", "{'[2, 1, 5, 6, 6, 5, 0, 0, 15, 27, 0, 27, 1, 1, 0, 1, 1, 0]' : 0.088042}", "{'[2, 1, 5, 6, 6, 5, 0, 0, 15, 27, 0, 27, 1, 1, 0, 1, 1, 0]' : 0.0880101}", "{'[2, 1, 5, 6, 6, 5, 0, 0, 15, 27, 0, 27, 1, 1, 0, 1, 1, 0]' : 0.0880661}"]
returning from 'run': {'[2, 1, 5, 6, 6, 5, 0, 0, 15, 27, 0, 27, 1, 1, 0, 1, 1, 0]': ([0.0885801, 0.088032, 0.0880301, 0.0880458, 0.088001, 0.0880091, 0.0880139, 0.0879879, 0.0879779, 0.0884469, 0.0880961, 0.0882039, 0.0890651, 0.0883451, 0.088141, 0.088032, 0.087991, 0.0879822, 0.0880129, 0.0880041, 0.0880129, 0.0880129, 0.0880408, 0.0881989, 0.087997, 0.0880351, 0.0885069, 0.088042, 0.0880101, 0.0880661], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.0885801, 0.088032, 0.0880301, 0.0880458, 0.088001, 0.0880091, 0.0880139, 0.0879879, 0.0879779, 0.0884469, 0.0880961, 0.0882039, 0.0890651, 0.0883451, 0.088141, 0.088032, 0.087991, 0.0879822, 0.0880129, 0.0880041, 0.0880129, 0.0880129, 0.0880408, 0.0881989, 0.087997, 0.0880351, 0.0885069, 0.088042, 0.0880101, 0.0880661], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[2, 1, 5, 6, 6, 5, 0, 0, 15, 27, 0, 27, 1, 1, 0, 1, 1, 0]': ([0.0885801, 0.088032, 0.0880301, 0.0880458, 0.088001, 0.0880091, 0.0880139, 0.0879879, 0.0879779, 0.0884469, 0.0880961, 0.0882039, 0.0890651, 0.0883451, 0.088141, 0.088032, 0.087991, 0.0879822, 0.0880129, 0.0880041, 0.0880129, 0.0880129, 0.0880408, 0.0881989, 0.087997, 0.0880351, 0.0885069, 0.088042, 0.0880101, 0.0880661], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [2, 6, 6, 2, 0, 1, 16, 27, 25, 0, 0, 0, 0, 1]
Fixed Factors: {'T2_K': 5, 'T2_J': 6, 'SCR': 1, 'VEC1': 1}
Testing candidate 18: [2, 6, 6, 2, 6, 5, 0, 1, 16, 27, 25, 0, 0, 0, 0, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	78
        Max loop nest depth: 	6
        Additions: 		3547
        Multiplications: 	1624
        Divisions: 		0
        Logical: 		0
        Reads: 			6905
        Writes: 		1173
        Comparisons:		78
        Gotos: 			0
        
digraph CFG {
	ForLoop20015328 [label="ForLoop20015328  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop20015328 -> ForLoop20015326;
	ForLoop20015328 -> _JOIN_20015328;
	ForLoop20018009 [label="ForLoop20018009  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop20018009 -> ForLoop20018007;
	ForLoop20018009 -> _JOIN_20018009;
	20054407 [label="20054407  double scv_27;...",shape=box];
	19989744 [label="19989744  int i;...",shape=box];
	19989744 -> ForLoop20018011;
	_JOIN_20018980 [label="_JOIN_20018980None...",shape=box];
	ForLoop20018763 [label="ForLoop20018763  for (j=jj; j<=cbv_5; j=j+26) {...",shape=box];
	ForLoop20018763 -> 20018136;
	ForLoop20018763 -> _JOIN_20018763;
	19830383 [label="19830383  int i;...",shape=box];
	ForLoop20018941 [label="ForLoop20018941  for (k=kk; k<=cbv_8; k=k+1) {...",shape=box];
	ForLoop20018941 -> 20133779;
	ForLoop20018941 -> _JOIN_20018941;
	ForLoop20018007 [label="ForLoop20018007  for (kk=kkk; kk<=min(ny-1,kkk+512); kk=kk+512) {...",shape=box];
	ForLoop20018007 -> 20015390;
	ForLoop20018007 -> _JOIN_20018007;
	ForLoop20015324 [label="ForLoop20015324  for (j=cbv_2; j<=cbv_3; j=j+1) {...",shape=box];
	ForLoop20015324 -> 20054407;
	ForLoop20015324 -> _JOIN_20015324;
	ForLoop20015326 [label="ForLoop20015326  for (jj=jjj; jj<=min(ny-1,jjj+1536); jj=jj+512) {...",shape=box];
	ForLoop20015326 -> 19990045;
	ForLoop20015326 -> _JOIN_20015326;
	19830894 [label="19830894  y[i]=0.0;...",shape=box];
	19830894 -> _JOIN_19830895;
	ForLoop19830895 [label="ForLoop19830895  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop19830895 -> 19830894;
	ForLoop19830895 -> _JOIN_19830895;
	20017168 [label="20017168  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	20018096 [label="20018096  int j;...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 19830383;
	20186338 [label="20186338  register int cbv_2, cbv_3;...",shape=box];
	20129000 [label="20129000  double scv_29, scv_30, scv_31, scv_32, scv_33, scv_34, scv_35, scv_36;...",shape=box];
	_JOIN_20018009 [label="_JOIN_20018009None...",shape=box];
	_JOIN_20018009 -> 20129018;
	_JOIN_20018007 [label="_JOIN_20018007None...",shape=box];
	_JOIN_20018007 -> _JOIN_20018009;
	20187542 [label="20187542  register int cbv_6, cbv_7;...",shape=box];
	_JOIN_20017137 [label="_JOIN_20017137None...",shape=box];
	_JOIN_20017137 -> 20017168;
	ForLoop20018977 [label="ForLoop20018977  for (i=(min(nx-1,ii+31))-(((min(nx-1,ii+31))-(ii)+1)%28)+1; i<=min(nx-1,ii+31); i=i+1) {...",shape=box];
	ForLoop20018977 -> 20135046;
	ForLoop20018977 -> _JOIN_20018977;
	_JOIN_20018979 [label="_JOIN_20018979None...",shape=box];
	_JOIN_20018979 -> _JOIN_20018980;
	ForLoop20018833 [label="ForLoop20018833  for (jj=jjj; jj<=min(ny-1,jjj+1536); jj=jj+512) {...",shape=box];
	ForLoop20018833 -> 20018096;
	ForLoop20018833 -> _JOIN_20018833;
	19989711 [label="19989711  double x_copy;...",shape=box];
	20018136 [label="20018136  scv_58=scv_58+A[i*ny+j]*x[j];...",shape=box];
	ForLoop20018834 [label="ForLoop20018834  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop20018834 -> ForLoop20018833;
	ForLoop20018834 -> _JOIN_20018834;
	ForLoop19830826 [label="ForLoop19830826  for (i=0; i<=cbv_1; i=i+17) {...",shape=box];
	ForLoop19830826 -> 19830680;
	ForLoop19830826 -> _JOIN_19830826;
	20018830 [label="20018830  scv_58=scv_58+A[i*ny+j]*x[j];...",shape=box];
	20018830 -> _JOIN_20018831;
	ForLoop20018975 [label="ForLoop20018975  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop20018975 -> ForLoop20018974;
	ForLoop20018975 -> _JOIN_20018975;
	ForLoop20018979 [label="ForLoop20018979  for (ii=iii; ii<=min(nx-1,iii+96); ii=ii+32) {...",shape=box];
	ForLoop20018979 -> 19989744;
	ForLoop20018979 -> _JOIN_20018979;
	19830680 [label="19830680  y[i]=0.0;...",shape=box];
	_JOIN_20014472 [label="_JOIN_20014472None...",shape=box];
	_JOIN_20014472 -> 20186338;
	ForLoop20018011 [label="ForLoop20018011  for (i=ii; i<=min(nx-1,ii+31)-27; i=i+28) {...",shape=box];
	ForLoop20018011 -> 20129000;
	ForLoop20018011 -> _JOIN_20018011;
	_JOIN_20018763 [label="_JOIN_20018763None...",shape=box];
	_JOIN_20018763 -> 20187542;
	ForLoop20018974 [label="ForLoop20018974  for (kk=kkk; kk<=min(ny-1,kkk+512); kk=kk+512) {...",shape=box];
	ForLoop20018974 -> 20018896;
	ForLoop20018974 -> _JOIN_20018974;
	_JOIN_20018977 [label="_JOIN_20018977None...",shape=box];
	_JOIN_20018977 -> _JOIN_20018979;
	ForLoop20018831 [label="ForLoop20018831  for (j=cbv_6; j<=cbv_7; j=j+1) {...",shape=box];
	ForLoop20018831 -> 20018830;
	ForLoop20018831 -> _JOIN_20018831;
	_JOIN_20018975 [label="_JOIN_20018975None...",shape=box];
	_JOIN_20018975 -> 20135058;
	19831089 [label="19831089  register int cbv_2, cbv_3;...",shape=box];
	_JOIN_20015324 [label="_JOIN_20015324None...",shape=box];
	_JOIN_20015324 -> _JOIN_20015326;
	200188expected=9369846271501.798828
actual=9369846271501.798828
96 [label="20018896  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	_JOIN_20015326 [label="_JOIN_20015326None...",shape=box];
	_JOIN_20015326 -> _JOIN_20015328;
	_JOIN_20018974 [label="_JOIN_20018974None...",shape=box];
	_JOIN_20018974 -> _JOIN_20018975;
	ForLoop20017137 [label="ForLoop20017137  for (k=kk; k<=cbv_4; k=k+1) {...",shape=box];
	ForLoop20017137 -> 20099487;
	ForLoop20017137 -> _JOIN_20017137;
	_JOIN_20018834 [label="_JOIN_20018834None...",shape=box];
	_JOIN_20018834 -> ForLoop20018975;
	_JOIN_19830895 [label="_JOIN_19830895None...",shape=box];
	_JOIN_19830895 -> 19989711;
	20052294 [label="20052294  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	_JOIN_20015328 [label="_JOIN_20015328None...",shape=box];
	_JOIN_20015328 -> ForLoop20018009;
	_JOIN_20018831 [label="_JOIN_20018831None...",shape=box];
	_JOIN_20018831 -> _JOIN_20018833;
	ForLoop20018980 [label="ForLoop20018980  for (iii=0; iii<=nx-1; iii=iii+128) {...",shape=box];
	ForLoop20018980 -> ForLoop20018979;
	ForLoop20018980 -> _JOIN_20018980;
	20135046 [label="20135046  double scv_58;...",shape=box];
	20015390 [label="20015390  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	20129018 [label="20129018  tmp[(i+20)]=scv_29;...",shape=box];
	ForLoop20014472 [label="ForLoop20014472  for (j=jj; j<=cbv_1; j=j+26) {...",shape=box];
	ForLoop20014472 -> 20052294;
	ForLoop20014472 -> _JOIN_20014472;
	19990045 [label="19990045  int j;...",shape=box];
	_JOIN_20018833 [label="_JOIN_20018833None...",shape=box];
	_JOIN_20018833 -> _JOIN_20018834;
	20099487 [label="20099487  double scv_28;...",shape=box];
	_JOIN_20018011 [label="_JOIN_20018011None...",shape=box];
	_JOIN_20018011 -> ForLoop20018977;
	20135058 [label="20135058  tmp[i]=scv_58;...",shape=box];
	20135058 -> _JOIN_20018977;
	_JOIN_20018941 [label="_JOIN_20018941None...",shape=box];
	_JOIN_20018941 -> 20018972;
	20133779 [label="20133779  double scv_57;...",shape=box];
	_JOIN_19830826 [label="_JOIN_19830826None...",shape=box];
	_JOIN_19830826 -> 19831089;
	20018972 [label="20018972  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	20018972 -> _JOIN_20018974;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest89.exe __orio_perftest89.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest89.exe  
{'[2, 6, 6, 2, 6, 5, 0, 1, 16, 27, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.171042}
{'[2, 6, 6, 2, 6, 5, 0, 1, 16, 27, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.170607}
{'[2, 6, 6, 2, 6, 5, 0, 1, 16, 27, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.170822}
{'[2, 6, 6, 2, 6, 5, 0, 1, 16, 27, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.170982}
{'[2, 6, 6, 2, 6, 5, 0, 1, 16, 27, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.170839}
{'[2, 6, 6, 2, 6, 5, 0, 1, 16, 27, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.171189}
{'[2, 6, 6, 2, 6, 5, 0, 1, 16, 27, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.170897}
{'[2, 6, 6, 2, 6, 5, 0, 1, 16, 27, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.17098}
{'[2, 6, 6, 2, 6, 5, 0, 1, 16, 27, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.17093}
{'[2, 6, 6, 2, 6, 5, 0, 1, 16, 27, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.170677}
{'[2, 6, 6, 2, 6, 5, 0, 1, 16, 27, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.172047}
{'[2, 6, 6, 2, 6, 5, 0, 1, 16, 27, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.170945}
{'[2, 6, 6, 2, 6, 5, 0, 1, 16, 27, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.171141}
{'[2, 6, 6, 2, 6, 5, 0, 1, 16, 27, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.170775}
{'[2, 6, 6, 2, 6, 5, 0, 1, 16, 27, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.170914}
{'[2, 6, 6, 2, 6, 5, 0, 1, 16, 27, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.170991}
{'[2, 6, 6, 2, 6, 5, 0, 1, 16, 27, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.170976}
{'[2, 6, 6, 2, 6, 5, 0, 1, 16, 27, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.170947}
{'[2, 6, 6, 2, 6, 5, 0, 1, 16, 27, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.17101}
{'[2, 6, 6, 2, 6, 5, 0, 1, 16, 27, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.171079}
{'[2, 6, 6, 2, 6, 5, 0, 1, 16, 27, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.171119}
{'[2, 6, 6, 2, 6, 5, 0, 1, 16, 27, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.171101}
{'[2, 6, 6, 2, 6, 5, 0, 1, 16, 27, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.171724}
{'[2, 6, 6, 2, 6, 5, 0, 1, 16, 27, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.171129}
{'[2, 6, 6, 2, 6, 5, 0, 1, 16, 27, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.171111}
{'[2, 6, 6, 2, 6, 5, 0, 1, 16, 27, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.170865}
{'[2, 6, 6, 2, 6, 5, 0, 1, 16, 27, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.170702}
{'[2, 6, 6, 2, 6, 5, 0, 1, 16, 27, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.171548}
{'[2, 6, 6, 2, 6, 5, 0, 1, 16, 27, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.170735}
{'[2, 6, 6, 2, 6, 5, 0, 1, 16, 27, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.171366}

out:
 ["{'[2, 6, 6, 2, 6, 5, 0, 1, 16, 27, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.171042}", "{'[2, 6, 6, 2, 6, 5, 0, 1, 16, 27, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.170607}", "{'[2, 6, 6, 2, 6, 5, 0, 1, 16, 27, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.170822}", "{'[2, 6, 6, 2, 6, 5, 0, 1, 16, 27, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.170982}", "{'[2, 6, 6, 2, 6, 5, 0, 1, 16, 27, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.170839}", "{'[2, 6, 6, 2, 6, 5, 0, 1, 16, 27, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.171189}", "{'[2, 6, 6, 2, 6, 5, 0, 1, 16, 27, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.170897}", "{'[2, 6, 6, 2, 6, 5, 0, 1, 16, 27, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.17098}", "{'[2, 6, 6, 2, 6, 5, 0, 1, 16, 27, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.17093}", "{'[2, 6, 6, 2, 6, 5, 0, 1, 16, 27, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.170677}", "{'[2, 6, 6, 2, 6, 5, 0, 1, 16, 27, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.172047}", "{'[2, 6, 6, 2, 6, 5, 0, 1, 16, 27, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.170945}", "{'[2, 6, 6, 2, 6, 5, 0, 1, 16, 27, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.171141}", "{'[2, 6, 6, 2, 6, 5, 0, 1, 16, 27, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.170775}", "{'[2, 6, 6, 2, 6, 5, 0, 1, 16, 27, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.170914}", "{'[2, 6, 6, 2, 6, 5, 0, 1, 16, 27, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.170991}", "{'[2, 6, 6, 2, 6, 5, 0, 1, 16, 27, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.170976}", "{'[2, 6, 6, 2, 6, 5, 0, 1, 16, 27, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.170947}", "{'[2, 6, 6, 2, 6, 5, 0, 1, 16, 27, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.17101}", "{'[2, 6, 6, 2, 6, 5, 0, 1, 16, 27, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.171079}", "{'[2, 6, 6, 2, 6, 5, 0, 1, 16, 27, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.171119}", "{'[2, 6, 6, 2, 6, 5, 0, 1, 16, 27, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.171101}", "{'[2, 6, 6, 2, 6, 5, 0, 1, 16, 27, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.171724}", "{'[2, 6, 6, 2, 6, 5, 0, 1, 16, 27, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.171129}", "{'[2, 6, 6, 2, 6, 5, 0, 1, 16, 27, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.171111}", "{'[2, 6, 6, 2, 6, 5, 0, 1, 16, 27, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.170865}", "{'[2, 6, 6, 2, 6, 5, 0, 1, 16, 27, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.170702}", "{'[2, 6, 6, 2, 6, 5, 0, 1, 16, 27, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.171548}", "{'[2, 6, 6, 2, 6, 5, 0, 1, 16, 27, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.170735}", "{'[2, 6, 6, 2, 6, 5, 0, 1, 16, 27, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.171366}"]
returning from 'run': {'[2, 6, 6, 2, 6, 5, 0, 1, 16, 27, 25, 0, 0, 0, 0, 1, 1, 1]': ([0.171042, 0.170607, 0.170822, 0.170982, 0.170839, 0.171189, 0.170897, 0.17098, 0.17093, 0.170677, 0.172047, 0.170945, 0.171141, 0.170775, 0.170914, 0.170991, 0.170976, 0.170947, 0.17101, 0.171079, 0.171119, 0.171101, 0.171724, 0.171129, 0.171111, 0.170865, 0.170702, 0.171548, 0.170735, 0.171366], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.171042, 0.170607, 0.170822, 0.170982, 0.170839, 0.171189, 0.170897, 0.17098, 0.17093, 0.170677, 0.172047, 0.170945, 0.171141, 0.170775, 0.170914, 0.170991, 0.170976, 0.170947, 0.17101, 0.171079, 0.171119, 0.171101, 0.171724, 0.171129, 0.171111, 0.170865, 0.170702, 0.171548, 0.170735, 0.171366], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[2, 6, 6, 2, 6, 5, 0, 1, 16, 27, 25, 0, 0, 0, 0, 1, 1, 1]': ([0.171042, 0.170607, 0.170822, 0.170982, 0.170839, 0.171189, 0.170897, 0.17098, 0.17093, 0.170677, 0.172047, 0.170945, 0.171141, 0.170775, 0.170914, 0.170991, 0.170976, 0.170947, 0.17101, 0.171079, 0.171119, 0.171101, 0.171724, 0.171129, 0.171111, 0.170865, 0.170702, 0.171548, 0.170735, 0.171366], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [2, 1, 1, 6, 0, 0, 25, 0, 23, 19, 2, 0, 0, 1]
Fixed Factors: {'T2_K': 5, 'T2_J': 6, 'SCR': 1, 'VEC1': 1}
Testing candidate 19: [2, 1, 1, 6, 6, 5, 0, 0, 25, 0, 23, 19, 2, 0, 0, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	6
        Additions: 		6160
        Multiplications: 	3036
        Divisions: 		0
        Logical: 		0
        Reads: 			11420
        Writes: 		1781
        Comparisons:		22
        Gotos: 			0
        
digraph CFG {
	_JOIN_20670380 [label="_JOIN_20670380None...",shape=box];
	_JOIN_20670380 -> _JOIN_20670381;
	20868368 [label="20868368  double scv_100;...",shape=box];
	20865089 [label="20865089  double scv_99;...",shape=box];
	20786114 [label="20786114  double scv_46;...",shape=box];
	ForLoop20645671 [label="ForLoop20645671  for (j=jj; j<=cbv_1; j=j+24) {...",shape=box];
	ForLoop20645671 -> 20705548;
	ForLoop20645671 -> _JOIN_20645671;
	20669700 [label="20669700  scv_100=scv_100+A[i*ny+j]*x[j];...",shape=box];
	20669700 -> _JOIN_20669701;
	20783270 [label="20783270  double scv_26, scv_27, scv_28, scv_29, scv_30, scv_31, scv_32, scv_33;...",shape=box];
	ForLoop20670378 [label="ForLoop20670378  for (k=cbv_11; k<=cbv_12; k=k+1) {...",shape=box];
	ForLoop20670378 -> 20865089;
	ForLoop20670378 -> _JOIN_20670378;
	_JOIN_20645671 [label="_JOIN_20645671None...",shape=box];
	_JOIN_20645671 -> 20944687;
	_JOIN_20668080 [label="_JOIN_20668080None...",shape=box];
	_JOIN_20668080 -> 20957760;
	_JOIN_20670383 [label="_JOIN_20670383None...",shape=box];
	_JOIN_20670383 -> _JOIN_20670385;
	ForLoop20646639 [label="ForLoop20646639  for (j=cbv_2; j<=cbv_3; j=j+1) {...",shape=box];
	ForLoop20646639 -> 20707836;
	ForLoop20646639 -> _JOIN_20646639;
	_JOIN_20670310 [label="_JOIN_20670310None...",shape=box];
	_JOIN_20670310 -> 20959229;
	_JOIN_20646641 [label="_JOIN_20646641None...",shape=box];
	_JOIN_20646641 -> _JOIN_20646642;
	_JOIN_20646642 [label="_JOIN_20646642None...",shape=box];
	_JOIN_20646642 -> ForLoop20668958;
	_JOIN_20668960 [label="_JOIN_20668960None...",shape=box];
	_JOIN_20668960 -> ForLoop20670383;
	_JOIN_20669633 [label="_JOIN_20669633None...",shape=box];
	_JOIN_20669633 -> 20958401;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 20187890;
	_JOIN_20670385 [label="_JOIN_20670385None...",shape=box];
	_JOIN_20670385 -> _JOIN_20670386;
	ForLoop20668960 [label="ForLoop20668960  for (it=ii; it<=min(nx-1,ii+31)-31; it=it+32) {...",shape=box];
	ForLoop20668960 -> 20858411;
	ForLoop20668960 -> _JOIN_20668960;
	20868380 [label="20868380  tmp[i]=scv_100;...",shape=box];
	20868380 -> _JOIN_20670383;
	20957760 [label="20957760  register int cbv_5, cbv_6;...",shape=box];
	ForLoop20188618 [label="ForLoop20188618  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop20188618 -> 20188617;
	ForLoop20188618 -> _JOIN_20188618;
	20864602 [label="20864602  double scv_79, scv_80, scv_81, scv_82, scv_83, scv_84, scv_85, scv_86;...",shape=box];
	ForLoop20670380 [label="ForLoop20670380  for (kk=kkk; kk<=min(ny-1,kkk+1008); kk=kk+16) {...",shape=box];
	ForLoop20670380 -> 20669736;
	ForLoop20670380 -> _JOIN_20670380;
	_JOIN_20669703 [label="_JOIN_20669703None...",shape=box];
	_JOIN_20669703 -> _JOIN_20669704;
	_JOIN_20668958 [label="_JOIN_20668958None...",shape=box];
	_JOIN_20668958 -> 20858429;
	ForLoop20670381 [label="ForLoop20670381  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop20670381 -> ForLoop20670380;
	ForLoop20670381 -> _JOIN_20670381;
	ForLoop20670383 [label="ForLoop20670383  for (i=it; i<=min(nx-1,ii+31); i=i+1) {...",shape=box];
	ForLoop20670383 -> 20868368;
	ForLoop20670383 -> _JOIN_20670383;
	20669016 [label="20669016  int j;...",shape=box];
	ForLoop20670385 [label="ForLoop20670385  for (ii=iii; ii<=min(nx-1,iii+2016); ii=ii+32) {...",shape=box];
	ForLoop20670385 -> ForLoop20668960;
	ForLoop20670385 -> _JOIN_20670385;
	ForLoop20670386 [label="ForLoop20670386  for (iii=0; iii<=nx-1; iii=iii+2048) {...",shape=box];
	ForLoop20670386 -> ForLoop20670385;
	ForLoop20670386 -> _JOIN_20670386;
	20619823 [label="20619823  double x_copy;...",shape=box];
	20858429 [label="20858429  tmp[(it+21)]=scv_47;...",shape=box];
	_JOIN_20668955 [label="_JOIN_20668955None...",shape=box];
	_JOIN_20668955 -> _JOIN_20668957;
	_JOIN_20668957 [label="_JOIN_20668957None...",shape=box];
	_JOIN_20668957 -> _JOIN_20668958;
	20669056 [label="20669056  scv_100=scv_100+A[i*ny+j]*x[j];...",shape=box];
	_JOIN_20670381 [label="_JOIN_20670381None...",shape=box];
	_JOIN_20670381 -> 20868380;
	20188617 [label="20188617  y[i]=0.0;...",shape=box];
	20188617 -> _JOIN_20188618;
	_JOIN_20188549 [label="_JOIN_20188549None...",shape=box];
	_JOIN_20188549 -> 20188893;
	_JOIN_20670386 [label="_JOIN_20670386None...",shape=box];
	20944687 [label="20944687  register int cbv_2, cbv_3;...",shape=box];
	ForLoop20669703 [label="ForLoop20669703  for (jj=jjj; jj<=min(ny-1,jjj+2032); jj=jj+16) {...",shape=box];
	ForLoop20669703 -> 20669016;
	ForLoop20669703 -> _JOIN_20669703;
	ForLoop20669701 [label="ForLoop20669701  for (j=cbv_8; j<=cbv_9; j=j+1) {...",shape=box];
	ForLoop20669701 -> 20669700;
	ForLoop20669701 -> _JOIN_20669701;
	_JOIN_20188618 [label="_JOIN_20188618None...",shape=box];
	_JOIN_20188618 -> 20619823;
	20188893 [label="20188893  register int cbv_2, cbv_3;...",shape=box];
	ForLoop20669704 [label="ForLoop20669704  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop20669704 -> ForLoop20669703;
	ForLoop20669704 -> _JOIN_20669704;
	ForLoop20669633 [label="ForLoop20669633  for (j=jj; j<=cbv_7; j=j+24) {...",shape=box];
	ForLoop20669633 -> 20669056;
	ForLoop20669633 -> _JOIN_20669633;
	20669736 [label="20669736  int k;...",shape=box];
	ForLoop20668957 [label="ForLoop20668957  for (kk=kkk; kk<=min(ny-1,kkk+1008); kk=kk+16) {...",shape=box];
	ForLoop20668957 -> 20646674;
	ForLoop20668957 -> _JOIN_20668957;
	20188322 [label="20188322  y[i]=0.0;...",shape=box];
	_JOIN_20646639 [label="_JOIN_20646639None...",shape=box];
	_JOIN_20646639 -> _JOIN_20646641;
	_JOIN_20669704 [label="_JOIN_20669704None...",shape=box];
	_JOIN_20669704 -> ForLoop20670381;
	ForLoop20670310 [label="ForLoop20670310  for (k=kk; k<=cbv_10; k=k+20) {...",shape=box];
	ForLoop20670310 -> 20864602;
	ForLoop20670310 -> _JOIN_20670310;
	ForLoop20188549 [label="ForLoop20188549  for (i=0; i<=cbv_1; i=i+26) {...",shape=box];
	ForLoop20188549 -> 20188322;
	ForLoop20188549 -> _JOIN_20188549;
	_JOIN_20669701 [label="_JOIN_20669701None...",shape=box];
	_JOIN_20669701 -> _JOIN_20669703;
	ForLoop20668955 [label="ForLoop20668955  for (k=cbv_5; k<=cbv_6; k=k+1) {...",shape=box];
	ForLoop20668955 -> 20786114;
	ForLoop20668955 -> _JOIN_20668955;
	20619913 [label="20619913  int j;...",shape=box];
	20646674 [label="20646674  int k;...",shape=box];
	20705548 [label="20705548  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	ForLoop20668958 [label="ForLoop20668958  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop20668958 -> ForLoop20668957;
	ForLoop20668958 -> _JOIN_20668958;
	ForLoop20646641 [label="ForLoop20646641  for (jj=jjj; jj<=min(ny-1,jjj+2032); jj=jj+16) {...",shape=box];
	ForLoop20646641 -> 20619913;
	ForLoop20646641 -> _JOIN_20646641;
	ForLoop20646642 [label="ForLoop20646642  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop20646642 -> ForLoop20646641;
	ForLoop20646642 -> _JOIN_20646642;
	20707836 [label="20707836  double scv_25;...",shape=box];
	_JOIN_20670378 [label="_JOIN_20670378None...",shape=box];
	_JOIN_20670378 -> _JOIN_20670380;
	20958401 [label="20958401  register int cbv_8, cbv_9;...",shape=box];
	ForLoop20668080 [label="ForLoop20668080  for (k=kk; k<=cbv_4; k=k+20) {...",shape=box];
	ForLoop20668080 -> 20783270;
	ForLoop20668080 -> _JOIN_20668080;
	20187890 [label="20187890  int i;...",shape=box];
	20858411 [label="20858411  double scv_47, scv_48, scv_49, scv_50, scv_51, scv_52, scv_53, scv_54;...",shape=box];
	20959229 [label="20959229  register int cbv_11, cbv_12;...",shape=expected=9369846271501.798828
actual=9369846271501.798828
box];

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest90.exe __orio_perftest90.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest90.exe  
{'[2, 1, 1, 6, 6, 5, 0, 0, 25, 0, 23, 19, 2, 0, 0, 1, 1, 1]' : 0.166541}
{'[2, 1, 1, 6, 6, 5, 0, 0, 25, 0, 23, 19, 2, 0, 0, 1, 1, 1]' : 0.167122}
{'[2, 1, 1, 6, 6, 5, 0, 0, 25, 0, 23, 19, 2, 0, 0, 1, 1, 1]' : 0.166716}
{'[2, 1, 1, 6, 6, 5, 0, 0, 25, 0, 23, 19, 2, 0, 0, 1, 1, 1]' : 0.167837}
{'[2, 1, 1, 6, 6, 5, 0, 0, 25, 0, 23, 19, 2, 0, 0, 1, 1, 1]' : 0.166773}
{'[2, 1, 1, 6, 6, 5, 0, 0, 25, 0, 23, 19, 2, 0, 0, 1, 1, 1]' : 0.166886}
{'[2, 1, 1, 6, 6, 5, 0, 0, 25, 0, 23, 19, 2, 0, 0, 1, 1, 1]' : 0.166976}
{'[2, 1, 1, 6, 6, 5, 0, 0, 25, 0, 23, 19, 2, 0, 0, 1, 1, 1]' : 0.166336}
{'[2, 1, 1, 6, 6, 5, 0, 0, 25, 0, 23, 19, 2, 0, 0, 1, 1, 1]' : 0.166727}
{'[2, 1, 1, 6, 6, 5, 0, 0, 25, 0, 23, 19, 2, 0, 0, 1, 1, 1]' : 0.167072}
{'[2, 1, 1, 6, 6, 5, 0, 0, 25, 0, 23, 19, 2, 0, 0, 1, 1, 1]' : 0.167465}
{'[2, 1, 1, 6, 6, 5, 0, 0, 25, 0, 23, 19, 2, 0, 0, 1, 1, 1]' : 0.16667}
{'[2, 1, 1, 6, 6, 5, 0, 0, 25, 0, 23, 19, 2, 0, 0, 1, 1, 1]' : 0.166788}
{'[2, 1, 1, 6, 6, 5, 0, 0, 25, 0, 23, 19, 2, 0, 0, 1, 1, 1]' : 0.166517}
{'[2, 1, 1, 6, 6, 5, 0, 0, 25, 0, 23, 19, 2, 0, 0, 1, 1, 1]' : 0.16601}
{'[2, 1, 1, 6, 6, 5, 0, 0, 25, 0, 23, 19, 2, 0, 0, 1, 1, 1]' : 0.16614}
{'[2, 1, 1, 6, 6, 5, 0, 0, 25, 0, 23, 19, 2, 0, 0, 1, 1, 1]' : 0.166797}
{'[2, 1, 1, 6, 6, 5, 0, 0, 25, 0, 23, 19, 2, 0, 0, 1, 1, 1]' : 0.166393}
{'[2, 1, 1, 6, 6, 5, 0, 0, 25, 0, 23, 19, 2, 0, 0, 1, 1, 1]' : 0.166517}
{'[2, 1, 1, 6, 6, 5, 0, 0, 25, 0, 23, 19, 2, 0, 0, 1, 1, 1]' : 0.166991}
{'[2, 1, 1, 6, 6, 5, 0, 0, 25, 0, 23, 19, 2, 0, 0, 1, 1, 1]' : 0.166196}
{'[2, 1, 1, 6, 6, 5, 0, 0, 25, 0, 23, 19, 2, 0, 0, 1, 1, 1]' : 0.166006}
{'[2, 1, 1, 6, 6, 5, 0, 0, 25, 0, 23, 19, 2, 0, 0, 1, 1, 1]' : 0.16736}
{'[2, 1, 1, 6, 6, 5, 0, 0, 25, 0, 23, 19, 2, 0, 0, 1, 1, 1]' : 0.166866}
{'[2, 1, 1, 6, 6, 5, 0, 0, 25, 0, 23, 19, 2, 0, 0, 1, 1, 1]' : 0.166381}
{'[2, 1, 1, 6, 6, 5, 0, 0, 25, 0, 23, 19, 2, 0, 0, 1, 1, 1]' : 0.166916}
{'[2, 1, 1, 6, 6, 5, 0, 0, 25, 0, 23, 19, 2, 0, 0, 1, 1, 1]' : 0.166529}
{'[2, 1, 1, 6, 6, 5, 0, 0, 25, 0, 23, 19, 2, 0, 0, 1, 1, 1]' : 0.166476}
{'[2, 1, 1, 6, 6, 5, 0, 0, 25, 0, 23, 19, 2, 0, 0, 1, 1, 1]' : 0.167116}
{'[2, 1, 1, 6, 6, 5, 0, 0, 25, 0, 23, 19, 2, 0, 0, 1, 1, 1]' : 0.165987}

out:
 ["{'[2, 1, 1, 6, 6, 5, 0, 0, 25, 0, 23, 19, 2, 0, 0, 1, 1, 1]' : 0.166541}", "{'[2, 1, 1, 6, 6, 5, 0, 0, 25, 0, 23, 19, 2, 0, 0, 1, 1, 1]' : 0.167122}", "{'[2, 1, 1, 6, 6, 5, 0, 0, 25, 0, 23, 19, 2, 0, 0, 1, 1, 1]' : 0.166716}", "{'[2, 1, 1, 6, 6, 5, 0, 0, 25, 0, 23, 19, 2, 0, 0, 1, 1, 1]' : 0.167837}", "{'[2, 1, 1, 6, 6, 5, 0, 0, 25, 0, 23, 19, 2, 0, 0, 1, 1, 1]' : 0.166773}", "{'[2, 1, 1, 6, 6, 5, 0, 0, 25, 0, 23, 19, 2, 0, 0, 1, 1, 1]' : 0.166886}", "{'[2, 1, 1, 6, 6, 5, 0, 0, 25, 0, 23, 19, 2, 0, 0, 1, 1, 1]' : 0.166976}", "{'[2, 1, 1, 6, 6, 5, 0, 0, 25, 0, 23, 19, 2, 0, 0, 1, 1, 1]' : 0.166336}", "{'[2, 1, 1, 6, 6, 5, 0, 0, 25, 0, 23, 19, 2, 0, 0, 1, 1, 1]' : 0.166727}", "{'[2, 1, 1, 6, 6, 5, 0, 0, 25, 0, 23, 19, 2, 0, 0, 1, 1, 1]' : 0.167072}", "{'[2, 1, 1, 6, 6, 5, 0, 0, 25, 0, 23, 19, 2, 0, 0, 1, 1, 1]' : 0.167465}", "{'[2, 1, 1, 6, 6, 5, 0, 0, 25, 0, 23, 19, 2, 0, 0, 1, 1, 1]' : 0.16667}", "{'[2, 1, 1, 6, 6, 5, 0, 0, 25, 0, 23, 19, 2, 0, 0, 1, 1, 1]' : 0.166788}", "{'[2, 1, 1, 6, 6, 5, 0, 0, 25, 0, 23, 19, 2, 0, 0, 1, 1, 1]' : 0.166517}", "{'[2, 1, 1, 6, 6, 5, 0, 0, 25, 0, 23, 19, 2, 0, 0, 1, 1, 1]' : 0.16601}", "{'[2, 1, 1, 6, 6, 5, 0, 0, 25, 0, 23, 19, 2, 0, 0, 1, 1, 1]' : 0.16614}", "{'[2, 1, 1, 6, 6, 5, 0, 0, 25, 0, 23, 19, 2, 0, 0, 1, 1, 1]' : 0.166797}", "{'[2, 1, 1, 6, 6, 5, 0, 0, 25, 0, 23, 19, 2, 0, 0, 1, 1, 1]' : 0.166393}", "{'[2, 1, 1, 6, 6, 5, 0, 0, 25, 0, 23, 19, 2, 0, 0, 1, 1, 1]' : 0.166517}", "{'[2, 1, 1, 6, 6, 5, 0, 0, 25, 0, 23, 19, 2, 0, 0, 1, 1, 1]' : 0.166991}", "{'[2, 1, 1, 6, 6, 5, 0, 0, 25, 0, 23, 19, 2, 0, 0, 1, 1, 1]' : 0.166196}", "{'[2, 1, 1, 6, 6, 5, 0, 0, 25, 0, 23, 19, 2, 0, 0, 1, 1, 1]' : 0.166006}", "{'[2, 1, 1, 6, 6, 5, 0, 0, 25, 0, 23, 19, 2, 0, 0, 1, 1, 1]' : 0.16736}", "{'[2, 1, 1, 6, 6, 5, 0, 0, 25, 0, 23, 19, 2, 0, 0, 1, 1, 1]' : 0.166866}", "{'[2, 1, 1, 6, 6, 5, 0, 0, 25, 0, 23, 19, 2, 0, 0, 1, 1, 1]' : 0.166381}", "{'[2, 1, 1, 6, 6, 5, 0, 0, 25, 0, 23, 19, 2, 0, 0, 1, 1, 1]' : 0.166916}", "{'[2, 1, 1, 6, 6, 5, 0, 0, 25, 0, 23, 19, 2, 0, 0, 1, 1, 1]' : 0.166529}", "{'[2, 1, 1, 6, 6, 5, 0, 0, 25, 0, 23, 19, 2, 0, 0, 1, 1, 1]' : 0.166476}", "{'[2, 1, 1, 6, 6, 5, 0, 0, 25, 0, 23, 19, 2, 0, 0, 1, 1, 1]' : 0.167116}", "{'[2, 1, 1, 6, 6, 5, 0, 0, 25, 0, 23, 19, 2, 0, 0, 1, 1, 1]' : 0.165987}"]
returning from 'run': {'[2, 1, 1, 6, 6, 5, 0, 0, 25, 0, 23, 19, 2, 0, 0, 1, 1, 1]': ([0.166541, 0.167122, 0.166716, 0.167837, 0.166773, 0.166886, 0.166976, 0.166336, 0.166727, 0.167072, 0.167465, 0.16667, 0.166788, 0.166517, 0.16601, 0.16614, 0.166797, 0.166393, 0.166517, 0.166991, 0.166196, 0.166006, 0.16736, 0.166866, 0.166381, 0.166916, 0.166529, 0.166476, 0.167116, 0.165987], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.166541, 0.167122, 0.166716, 0.167837, 0.166773, 0.166886, 0.166976, 0.166336, 0.166727, 0.167072, 0.167465, 0.16667, 0.166788, 0.166517, 0.16601, 0.16614, 0.166797, 0.166393, 0.166517, 0.166991, 0.166196, 0.166006, 0.16736, 0.166866, 0.166381, 0.166916, 0.166529, 0.166476, 0.167116, 0.165987], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[2, 1, 1, 6, 6, 5, 0, 0, 25, 0, 23, 19, 2, 0, 0, 1, 1, 1]': ([0.166541, 0.167122, 0.166716, 0.167837, 0.166773, 0.166886, 0.166976, 0.166336, 0.166727, 0.167072, 0.167465, 0.16667, 0.166788, 0.166517, 0.16601, 0.16614, 0.166797, 0.166393, 0.166517, 0.166991, 0.166196, 0.166006, 0.16736, 0.166866, 0.166381, 0.166916, 0.166529, 0.166476, 0.167116, 0.165987], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [1, 1, 4, 4, 1, 0, 3, 29, 25, 0, 0, 0, 2, 0]
Fixed Factors: {'T2_K': 5, 'T2_J': 6, 'SCR': 1, 'VEC1': 1}
Testing candidate 20: [1, 1, 4, 4, 6, 5, 1, 0, 3, 29, 25, 0, 0, 0, 2, 1, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	111
        Max loop nest depth: 	6
        Additions: 		9675
        Multiplications: 	3720
        Divisions: 		0
        Logical: 		0
        Reads: 			16371
        Writes: 		2346
        Comparisons:		111
        Gotos: 			0
        
digraph CFG {
	_JOIN_21328250 [label="_JOIN_21328250None...",shape=box];
	_JOIN_21328250 -> ForLoop21328330;
	20959799 [label="20959799  register int cbv_2, cbv_3;...",shape=box];
	21331563 [label="21331563  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	_JOIN_21379330 [label="_JOIN_21379330None...",shape=box];
	_JOIN_21379330 -> _JOIN_21379331;
	_JOIN_21379284 [label="_JOIN_21379284None...",shape=box];
	_JOIN_21379284 -> ForLoop21379323;
	21340152 [label="21340152  scv_47=scv_47+A[(i+26)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_21379328 [label="_JOIN_21379328None...",shape=box];
	_JOIN_21379328 -> _JOIN_21379330;
	21313391 [label="21313391  scv_42=scv_42+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	21313391 -> _JOIN_21313392;
	_JOIN_21313392 [label="_JOIN_21313392None...",shape=box];
	_JOIN_21313392 -> 21313424;
	_JOIN_21339987 [label="_JOIN_21339987None...",shape=box];
	_JOIN_21339987 -> ForLoop21340067;
	ForLoop21327263 [label="ForLoop21327263  for (j=(min(ny-1,jj+15))-(((min(ny-1,jj+15))-(jj)+1)%26)+1; j<=min(ny-1,jj+15); j=j+1) {...",shape=box];
	ForLoop21327263 -> 21327262;
	ForLoop21327263 -> _JOIN_21327263;
	_JOIN_21327183 [label="_JOIN_21327183None...",shape=box];
	_JOIN_21327183 -> ForLoop21327263;
	21326195 [label="21326195  scv_35=scv_35+A[(i+12)*ny+j]*x_copy[(j-jj)];...",shape=box];
	21326195 -> _JOIN_21326196;
	21339032 [label="21339032  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	21338018 [label="21338018  scv_53=scv_53+A[(i+24)*ny+j]*x_copy[(j-jj)];...",shape=box];
	21329429 [label="21329429  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	21341133 [label="21341133  scv_47=scv_47+A[(i+26)*ny+j]*x_copy[(j-jj)];...",shape=box];
	21341133 -> _JOIN_21341134;
	21328362 [label="21328362  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	ForLoop21339987 [label="ForLoop21339987  for (j=jj; j<=min(ny-1,jj+15)-25; j=j+26) {...",shape=box];
	ForLoop21339987 -> 21339085;
	ForLoop21339987 -> _JOIN_21339987;
	_JOIN_21322995 [label="_JOIN_21322995None...",shape=box];
	_JOIN_21322995 -> 21323027;
	21327348 [label="21327348  scv_49=scv_49+A[(i+14)*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop21339000 [label="ForLoop21339000  for (j=(min(ny-1,jj+15))-(((min(ny-1,jj+15))-(jj)+1)%26)+1; j<=min(ny-1,jj+15); j=j+1) {...",shape=box];
	ForLoop21339000 -> 21338999;
	ForLoop21339000 -> _JOIN_21339000;
	ForLoop21340067 [label="ForLoop21340067  for (j=(min(ny-1,jj+15))-(((min(ny-1,jj+15))-(jj)+1)%26)+1; j<=min(ny-1,jj+15); j=j+1) {...",shape=box];
	ForLoop21340067 -> 21340066;
	ForLoop21340067 -> _JOIN_21340067;
	_JOIN_20959722 [label="_JOIN_20959722None...",shape=box];
	_JOIN_20959722 -> 21312218;
	21321960 [label="21321960  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	21340066 [label="21340066  scv_52=scv_52+A[(i+25)*ny+j]*x_copy[(j-jj)];...",shape=box];
	21340066 -> _JOIN_21340067;
	ForLoop21331531 [label="ForLoop21331531  for (j=(min(ny-1,jj+15))-(((min(ny-1,jj+15))-(jj)+1)%26)+1; j<=min(ny-1,jj+15); j=j+1) {...",shape=box];
	ForLoop21331531 -> 21331530;
	ForLoop21331531 -> _JOIN_21331531;
	21323027 [label="21323027  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	_JOIN_21377401 [label="_JOIN_21377401None...",shape=box];
	_JOIN_21377401 -> ForLoop21379328;
	ForLoop21324062 [label="ForLoop21324062  for (j=(min(ny-1,jj+15))-(((min(ny-1,jj+15))-(jj)+1)%26)+1; j<=min(ny-1,jj+15); j=j+1) {...",shape=box];
	ForLoop21324062 -> 21324061;
	ForLoop21324062 -> _JOIN_21324062;
	ForLoop21337933 [label="ForLoop21337933  for (j=(min(ny-1,jj+15))-(((min(ny-1,jj+15))-(jj)+1)%26)+1; j<=min(ny-1,jj+15); j=j+1) {...",shape=box];
	ForLoop21337933 -> 21337932;
	ForLoop21337933 -> _JOIN_21337933;
	ForLoop21316593 [label="ForLoop21316593  for (j=(min(ny-1,jj+15))-(((min(ny-1,jj+15))-(jj)+1)%26)+1; j<=min(ny-1,jj+15); j=j+1) {...",shape=box];
	ForLoop21316593 -> 21316592;
	ForLoop21316593 -> _JOIN_21316593;
	_JOIN_21344338 [label="_JOIN_21344338None...",shape=box];
	_JOIN_21344338 -> _JOIN_21344340;
	_JOIN_21316593 [label="_JOIN_21316593None...",shape=box];
	_JOIN_21316593 -> 21316625;
	21316678 [label="21316678  scv_56=scv_56+A[(i+4)*ny+j]*x_copy[(j-jj)];...",shape=box];
	21326228 [label="21326228  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	_JOIN_21333665 [label="_JOIN_21333665None...",shape=box];
	_JOIN_21333665 -> 21333697;
	_JOIN_21329397 [label="_JOIN_21329397None...",shape=box];
	_JOIN_21329397 -> 21329429;
	ForLoop21329397 [label="ForLoop21329397  for (j=(min(ny-1,jj+15))-(((min(ny-1,jj+15))-(jj)+1)%26)+1; j<=min(ny-1,jj+15); j=j+1) {...",shape=box];
	ForLoop21329397 -> 21329396;
	ForLoop21329397 -> _JOIN_21329397;
	ForLoop21341054 [label="ForLoop21341054  for (j=jj; j<=min(ny-1,jj+15)-25; j=j+26) {...",shape=box];
	ForLoop21341054 -> 21340152;
	ForLoop21341054 -> _JOIN_21341054;
	21334764 [label="21334764  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	_JOIN_21317580 [label="_JOIN_21317580None...",shape=box];
	_JOIN_21317580 -> ForLoop21317660;
	21340099 [label="21340099  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	_JOIN_21376601 [label="_JOIN_21376601None...",shape=box];
	_JOIN_21376601 -> ForLoop21377395;
	21314458 [label="21314458  scv_59=scv_59+A[(i+1)*ny+j]*x_copy[(j-jj)];...",shape=box];
	21314458 -> _JOIN_21314459;
	_JOIN_21316513 [label="_JOIN_21316513None...",shape=box];
	_JOIN_21316513 -> ForLoop21316593;
	21327295 [label="21327295  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	ForLoop21336786 [label="ForLoop21336786  for (j=jj; j<=min(ny-1,jj+15)-25; j=j+26) {...",shape=box];
	ForLoop21336786 -> 21335884;
	ForLoop21336786 -> _JOIN_21336786;
	_JOIN_21331531 [label="_JOIN_21331531None...",shape=box];
	_JOIN_21331531 -> 21331563;
	ForLoop20959722 [label="ForLoop20959722  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop20959722 -> 20959721;
	ForLoop20959722 -> _JOIN_20959722;
	21331616 [label="21331616  scv_39=scv_39+A[(i+18)*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop21318647 [label="ForLoop21318647  for (j=jj; j<=min(ny-1,jj+15)-25; j=j+26) {...",shape=box];
	ForLoop21318647 -> 21317745;
	ForLoop21318647 -> _JOIN_21318647;
	_JOIN_21343268 [label="_JOIN_21343268None...",shape=box];
	_JOIN_21343268 -> 21343300;
	_JOIN_21329317 [label="_JOIN_21329317None...",shape=box];
	_JOIN_21329317 -> ForLoop21329397;
	21320860 [label="21320860  scv_43=scv_43+A[(i+7)*ny+j]*x_copy[(j-jj)];...",shape=box];
	21320860 -> _JOIN_21320861;
	ForLoop21338920 [label="ForLoop21338920  for (j=jj; j<=min(ny-1,jj+15)-25; j=j+26) {...",shape=box];
	ForLoop21338920 -> 21338018;
	ForLoop21338920 -> _JOIN_21338920;
	ForLoop21344340 [label="ForLoop21344340  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop21344340 -> ForLoop21344338;
	ForLoop21344340 -> _JOIN_21344340;
	21325128 [label="21325128  scv_55=scv_55+A[(i+11)*ny+j]*x_copy[(j-jj)];...",shape=box];
	21325128 -> _JOIN_21325129;
	ForLoop21315526 [label="ForLoop21315526  for (j=(min(ny-1,jj+15))-(((min(ny-1,jj+15))-(jj)+1)%26)+1; j<=min(ny-1,jj+15); j=j+1) {...",shape=box];
	ForLoop21315526 -> 21315525;
	ForLoop21315526 -> _JOIN_21315526;
	ForLoop21343188 [label="ForLoop21343188  for (j=jj; j<=min(ny-1,jj+15)-25; j=j+26) {...",shape=box];
	ForLoop21343188 -> 21342286;
	ForLoop21343188 -> _JOIN_21343188;
	21339085 [label="21339085  scv_52=scv_52+A[(i+25)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_21317660 [label="_JOIN_21317660None...",shape=box];
	_JOIN_21317660 -> 21317692;
	ForLoop21334732 [label="ForLoop21334732  for (j=(min(ny-1,jj+15))-(((min(ny-1,jj+15))-(jj)+1)%26)+1; j<=min(ny-1,jj+15); j=j+1) {...",shape=box];
	ForLoop21334732 -> 21334731;
	ForLoop21334732 -> _JOIN_21334732;
	ForLoop21332518 [label="ForLoop21332518  for (j=jj; j<=min(ny-1,jj+15)-25; j=j+26) {...",shape=box];
	ForLoop21332518 -> 21331616;
	ForLoop21332518 -> _JOIN_21332518;
	ForLoop21344335 [label="ForLoop21344335  for (j=(min(ny-1,jj+15))-(((min(ny-1,jj+15))-(jj)+1)%26)+1; j<=min(ny-1,jj+15); j=j+1) {...",shape=box];
	ForLoop21344335 -> 21344334;
	ForLoop21344335 -> _JOIN_21344335;
	_JOIN_21324062 [label="_JOIN_21324062None...",shape=box];
	_JOIN_21324062 -> 21324094;
	21378307 [label="21378307  scv_97=scv_97+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	21378307 -> _JOIN_21378308;
	21641210 [label="21641210  double scv_34, scv_35, scv_36, scv_37, scv_38, scv_39, scv_40, scv_41;...",shape=box];
	21332630 [label="21332630  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	21317692 [label="21317692  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	ForLoop21326196 [label="ForLoop21326196  for (j=(min(ny-1,jj+15))-(((min(ny-1,jj+15))-(jj)+1)%26)+1; j<=min(ny-1,jj+15); j=j+1) {...",shape=box];
	ForLoop21326196 -> 21326195;
	ForLoop21326196 -> _JOIN_21326196;
	21336865 [label="21336865  scv_61=scv_61+A[(i+22)*ny+j]*x_copy[(j-jj)];...",shape=box];
	21336865 -> _JOIN_21336866;
	ForLoop21313321 [label="ForLoop21313321  for (j=jj; j<=min(ny-1,jj+15)-25; j=j+26) {...",shape=box];
	ForLoop21313321 -> 21312644;
	ForLoop21313321 -> _JOIN_21313321;
	21337965 [label="21337965  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	21333750 [label="21333750  scv_34=scv_34+A[(i+20)*ny+j]*x_copy[(j-jj)];...",shape=box];
	21318759 [label="21318759  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	ForLoop21333585 [label="ForLoop21333585  for (j=jj; j<=min(ny-1,jj+15)-25; j=j+26) {...",shape=box];
	ForLoop21333585 -> 21332683;
	ForLoop21333585 -> _JOIN_21333585;
	21343353 [label="21343353  scv_62=scv_62+A[(i+29)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_21318727 [label="_JOIN_21318727None...",shape=box];
	_JOIN_21318727 -> 21318759;
	_JOIN_21326116 [label="_JOIN_21326116None...",shape=box];
	_JOIN_21326116 -> ForLoop21326196;
	ForLoop21328250 [label="ForLoop21328250  for (j=jj; j<=min(ny-1,jj+15)-25; j=j+26) {...",shape=box];
	ForLoop21328250 -> 21327348;
	ForLoop21328250 -> _JOIN_21328250;
	ForLoop21326116 [label="ForLoop21326116  for (j=jj; j<=min(ny-1,jj+15)-25; j=j+26) {...",shape=box];
	ForLoop21326116 -> 21325214;
	ForLoop21326116 -> _JOIN_21326116;
	21328415 [label="21328415  scv_51=scv_51+A[(i+15)*ny+j]*x_copy[(j-jj)];...",shape=box];
	20959522 [label="20959522  int i;...",shape=box];
	ForLoop21320861 [label="ForLoop21320861  for (j=(min(ny-1,jj+15))-(((min(ny-1,jj+15))-(jj)+1)%26)+1; j<=min(ny-1,jj+15); j=j+1) {...",shape=box];
	ForLoop21320861 -> 21320860;
	ForLoop21320861 -> _JOIN_21320861;
	_JOIN_21314379 [label="_JOIN_21314379None...",shape=box];
	_JOIN_21314379 -> ForLoop21314459;
	_JOIN_21377395 [label="_JOIN_21377395None...",shape=box];
	_JOIN_21377395 -> _JOIN_21377397;
	_JOIN_21315446 [label="_JOIN_21315446None...",shape=box];
	_JOIN_21315446 -> ForLoop21315526;
	_JOIN_21377397 [label="_JOIN_21377397None...",shape=box];
	_JOIN_21377397 -> _JOIN_21377399;
	ForLoop21316513 [label="ForLoop21316513  for (j=jj; j<=min(ny-1,jj+15)-25; j=j+26) {...",shape=box];
	ForLoop21316513 -> 21315611;
	ForLoop21316513 -> _JOIN_21316513;
	20959721 [label="20959721  y[i]=0.0;...",shape=box];
	20959721 -> _JOIN_20959722;
	ForLoop21344255 [label="ForLoop21344255  for (j=jj; j<=min(ny-1,jj+15)-25; j=j+26) {...",shape=box];
	ForLoop21344255 -> 21343353;
	ForLoop21344255 -> _JOIN_21344255;
	_JOIN_21377399 [label="_JOIN_21377399None...",shape=box];
	_JOIN_21377399 -> 21641228;
	_JOIN_21326196 [label="_JOIN_21326196None...",shape=box];
	_JOIN_21326196 -> 21326228;
	ForLoop21377399 [label="ForLoop21377399  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop21377399 -> ForLoop21377397;
	ForLoop21377399 -> _JOIN_21377399;
	21330549 [label="21330549  scv_63=scv_63+A[(i+17)*ny+j]*x_copy[(j-jj)];...",shape=box];
	21641228 [label="21641228  tmp[(i+20)]=scv_34;...",shape=box];
	ForLoop21377401 [label="ForLoop21377401  for (i=ii; i<=min(nx-1,ii+15)-29; i=i+30) {...",shape=box];
	ForLoop21377401 -> 21641210;
	ForLoop21377401 -> _JOIN_21377401;
	21314544 [label="21314544  scv_46=scv_46+A[(i+2)*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop21344338 [label="ForLoop21344338  for (jj=jjj; jj<=min(ny-1,jjj+2032); jj=jj+16) {...",shape=box];
	ForLoop21344338 -> 21312600;
	ForLoop21344338 -> _JOIN_21344338;
	21324061 [label="21324061  scv_48=scv_48+A[(i+10)*ny+j]*x_copy[(j-jj)];...",shape=box];
	21324061 -> _JOIN_21324062;
	ForLoop21319794 [label="ForLoop21319794  for (j=(min(ny-1,jj+15))-(((min(ny-1,jj+15))-(jj)+1)%26)+1; j<=min(ny-1,jj+15); j=j+1) {...",shape=box];
	ForLoop21319794 -> 21319793;
	ForLoop21319794 -> _JOIN_21319794;
	21323080 [label="21323080  scv_48=scv_48+A[(i+10)*ny+j]*x_copy[(j-jj)];...",shape=box];
	21648776 [label="21648776  double scv_64, scv_65, scv_66, scv_67, scv_68, scv_69, scv_70, scv_71;...",shape=box];
	ForLoop21320781 [label="ForLoop21320781  for (j=jj; j<=min(ny-1,jj+15)-25; j=j+26) {...",shape=box];
	ForLoop21320781 -> 21319879;
	ForLoop21320781 -> _JOIN_21320781;
	_JOIN_21321848 [label="_JOIN_21321848None...",shape=box];
	_JOIN_21321848 -> ForLoop21321928;
	21320893 [label="21320893  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	ForLoop21342121 [label="ForLoop21342121  for (j=jj; j<=min(ny-1,jj+15)-25; j=j+26) {...",shape=box];
	ForLoop21342121 -> 21341219;
	ForLoop21342121 -> _JOIN_21342121;
	ForLoop21336866 [label="ForLoop21336866  for (j=(min(ny-1,jj+15))-(((min(ny-1,jj+15))-(jj)+1)%26)+1; j<=min(ny-1,jj+15); j=j+1) {...",shape=box];
	ForLoop21336866 -> 21336865;
	ForLoop21336866 -> _JOIN_21336866;
	_JOIN_21321928 [label="_JOIN_21321928None...",shape=box];
	_JOIN_21321928 -> 21321960;
	21333664 [label="21333664  scv_38=scv_38+A[(i+19)*ny+j]*x_copy[(j-jj)];...",shape=box];
	21333664 -> _JOIN_21333665;
	21317745 [label="21317745  scv_45=scv_45+A[(i+5)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_21313321 [label="_JOIN_21313321None...",shape=box];
	_JOIN_21313321 -> ForLoop21313392;
	_JOIN_21340067 [label="_JOIN_21340067None...",shape=box];
	_JOIN_21340067 -> 21340099;
	ForLoop21319714 [label="ForLoop21319714  for (j=jj; j<=min(ny-1,jj+15)-25; j=j+26) {...",shape=box];
	ForLoop21319714 -> 21318812;
	ForLoop21319714 -> _JOIN_21319714;
	_JOIN_21378237 [label="_JOIN_21378237None...",shape=box];
	_JOIN_21378237 -> ForLoop21378308;
	_JOIN_21378308 [label="_JOIN_21378308None...",shape=box];
	_JOIN_21378308 -> _JOIN_21378311;
	21654235 [label="21654235  double scv_97;...",shape=box];
	_JOIN_21320781 [label="_JOIN_21320781None...",shape=box];
	_JOIN_21320781 -> ForLoop21320861;
	21313477 [label="21313477  scv_59=scv_59+A[(i+1)*ny+j]*x_copy[(j-jj)];...",shape=box];
	21329482 [label="21329482  scv_54=scv_54+A[(i+16)*ny+j]*x_copy[(j-jj)];...",shape=box];
	21312600 [label="21312600  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	21312218 [label="21312218  double x_copy[16];...",shape=box];
	21319879 [label="21319879  scv_43=scv_43+A[(i+7)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_20959653 [label="_JOIN_20959653None...",shape=box];
	_JOIN_20959653 -> 20959799;
	21333697 [label="21333697  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	_JOIN_21342201 [label="_JOIN_21342201None...",shape=box];
	_JOIN_21342201 -> 21342233;
	21322994 [label="21322994  scv_57=scv_57+A[(i+9)*ny+j]*x_copy[(j-jj)];...",shape=box];
	21322994 -> _JOIN_21322995;
	ForLoop21378237 [label="ForLoop21378237  for (j=jj; j<=min(ny-1,jj+15)-25; j=j+26) {...",shape=box];
	ForLoop21378237 -> 21377560;
	ForLoop21378237 -> _JOIN_21378237;
	21331530 [label="21331530  scv_63=scv_63+A[(i+17)*ny+j]*x_copy[(j-jj)];...",shape=box];
	21331530 -> _JOIN_21331531;
	_JOIN_21328330 [label="_JOIN_21328330None...",shape=box];
	_JOIN_21328330 -> 21328362;
	ForLoop21321848 [label="ForLoop21321848  for (j=jj; j<=min(ny-1,jj+15)-25; j=j+26) {...",shape=box];
	ForLoop21321848 -> 21320946;
	ForLoop21321848 -> _JOIN_21321848;
	ForLoop21321928 [label="ForLoop21321928  for (j=(min(ny-1,jj+15))-(((min(ny-1,jj+15))-(jj)+1)%26)+1; j<=min(ny-1,jj+15); j=j+1) {...",shape=box];
	ForLoop21321928 -> 21321927;
	ForLoop21321928 -> _JOIN_21321928;
	21314491 [label="21314491  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	21318812 [label="21318812  scv_44=scv_44+A[(i+6)*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop21313392 [label="ForLoop21313392  for (j=(min(ny-1,jj+15))-(((min(ny-1,jj+15))-(jj)+1)%26)+1; j<=min(ny-1,jj+15); j=j+1) {...",shape=box];
	ForLoop21313392 -> 21313391;
	ForLoop21313392 -> _JOIN_21313392;
	_JOIN_21314459 [label="_JOIN_21314459None...",shape=box];
	_JOIN_21314459 -> 21314491;
	ForLoop21334652 [label="ForLoop21334652  for (j=jj; j<=min(ny-1,jj+15)-25; j=j+26) {...",shape=box];
	ForLoop21334652 -> 21333750;
	ForLoop21334652 -> _JOIN_21334652;
	ForLoop21376601 [label="ForLoop21376601  for (kt=kk; kt<=min(ny-1,kk+127)-31; kt=kt+32) {...",shape=box];
	ForLoop21376601 -> 21533124;
	ForLoop21376601 -> _JOIN_21376601;
	21343300 [label="21343300  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	ForLoop21327183 [label="ForLoop21327183  for (j=jj; j<=min(ny-1,jj+15)-25; j=j+26) {...",shape=box];
	ForLoop21327183 -> 21326281;
	ForLoop21327183 -> _JOIN_21327183;
	21654247 [label="21654247  tmp[i]=scv_97;...",shape=box];
	21654247 -> _JOIN_21379328;
	ForLoop21328330 [label="ForLoop21328330  for (j=(min(ny-1,jj+15))-(((min(ny-1,jj+15))-(jj)+1)%26)+1; j<=min(ny-1,jj+15); j=j+1) {...",shape=box];
	ForLoop21328330 -> 21328329;
	ForLoop21328330 -> _JOIN_21328330;
	ForLoop21379284 [label="ForLoop21379284  for (kt=kk; kt<=min(ny-1,kk+127)-31; kt=kt+32) {...",shape=box];
	ForLoop21379284 -> 21648776;
	ForLoop21379284 -> _JOIN_21379284;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 20959522;
	_JOIN_21378311 [label="_JOIN_21378311None...",shape=box];
	_JOIN_21378311 -> _JOIN_21378312;
	_JOIN_21378312 [label="_JOIN_21378312None...",shape=box];
	_JOIN_21378312 -> ForLoop21379326;
	_JOIN_21344255 [label="_JOIN_21344255None...",shape=box];
	_JOIN_21344255 -> ForLoop21344335;
	21377516 [label="21377516  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	21338999 [label="21338999  scv_53=scv_53+A[(i+24)*ny+j]*x_copy[(j-jj)];...",shape=box];
	21338999 -> _JOIN_21339000;
	_JOIN_21334652 [label="_JOIN_21334652None...",shape=box];
	_JOIN_21334652 -> ForLoop21334732;
	21315558 [label="21315558  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	21336898 [label="21336898  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	_JOIN_21344335 [label="_JOIN_21344335None...",shape=box];
	_JOIN_21344335 -> _JOIN_21344338;
	20959624 [label="20959624  y[i]=0.0;...",shape=box];
	21328329 [label="21328329  scv_49=scv_49+A[(i+14)*ny+j]*x_copy[(j-jj)];...",shape=box];
	21328329 -> _JOIN_21328330;
	ForLoop21337853 [label="ForLoop21337853  for (j=jj; j<=min(ny-1,jj+15)-25; j=j+26) {...",shape=box];
	ForLoop21337853 -> 21336951;
	ForLoop21337853 -> _JOIN_21337853;
	_JOIN_21343188 [label="_JOIN_21343188None...",shape=box];
	_JOIN_21343188 -> ForLoop21343268;
	ForLoop21342201 [label="ForLoop21342201  for (j=(min(ny-1,jj+15))-(((min(ny-1,jj+15))-(jj)+1)%26)+1; j<=min(ny-1,jj+15); j=j+1) {...",shape=box];
	ForLoop21342201 -> 21342200;
	ForLoop21342201 -> _JOIN_21342201;
	ForLoop21379323 [label="ForLoop21379323  for (k=kt; k<=min(ny-1,kk+127); k=k+1) {...",shape=box];
	ForLoop21379323 -> 21649487;
	ForLoop21379323 -> _JOIN_21379323;
	ForLoop21314459 [label="ForLoop21314459  for (j=(min(ny-1,jj+15))-(((min(ny-1,jj+15))-(jj)+1)%26)+1; j<=min(ny-1,jj+15); j=j+1) {...",shape=box];
	ForLoop21314459 -> 21314458;
	ForLoop21314459 -> _JOIN_21314459;
	21325214 [label="21325214  scv_35=scv_35+A[(i+12)*ny+j]*x_copy[(j-jj)];...",shape=box];
	21319826 [label="21319826  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	ForLoop21325049 [label="ForLoop21325049  for (j=jj; j<=min(ny-1,jj+15)-25; j=j+26) {...",shape=box];
	ForLoop21325049 -> 21324147;
	ForLoop21325049 -> _JOIN_21325049;
	ForLoop21378312 [label="ForLoop21378312  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop21378312 -> ForLoop21378311;
	ForLoop21378312 -> _JOIN_21378312;
	_JOIN_21319794 [label="_JOIN_21319794None...",shape=box];
	_JOIN_21319794 -> 21319826;
	ForLoop20959653 [label="ForLoop20959653  for (i=0; i<=cbv_1; i=i+4) {...",shape=box];
	ForLoop20959653 -> 20959624;
	ForLoop20959653 -> _JOIN_20959653;
	ForLoop21318727 [label="ForLoop21318727  for (j=(min(ny-1,jj+15))-(((min(ny-1,jj+15))-(jj)+1)%26)+1; j<=min(ny-1,jj+15); j=j+1) {...",shape=box];
	ForLoop21318727 -> 21318726;
	ForLoop21318727 -> _JOIN_21318727;
	ForLoop21379328 [label="ForLoop21379328  for (i=(min(nx-1,ii+15))-(((min(nx-1,ii+15))-(ii)+1)%30)+1; i<=min(nx-1,ii+15); i=i+1) {...",shape=box];
	ForLoop21379328 -> 21654235;
	ForLoop21379328 -> _JOIN_21379328;
	21337932 [label="21337932  scv_60=scv_60+A[(i+23)*ny+j]*x_copy[(j-jj)];...",shape=box];
	21337932 -> _JOIN_21337933;
	21329396 [label="21329396  scv_51=scv_51+A[(i+15)*ny+j]*x_copy[(j-jj)];...",shape=box];
	21329396 -> _JOIN_21329397;
	_JOIN_21341134 [label="_JOIN_21341134None...",shape=box];
	_JOIN_21341134 -> 21341166;
	_JOIN_21336786 [label="_JOIN_21336786None...",shape=box];
	_JOIN_21336786 -> ForLoop21336866;
	21342233 [label="21342233  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	ForLoop21317660 [label="ForLoop21317660  for (j=(min(ny-1,jj+15))-(((min(ny-1,jj+15))-(jj)+1)%26)+1; j<=min(ny-1,jj+15); j=j+1) {...",shape=box];
	ForLoop21317660 -> 21317659;
	ForLoop21317660 -> _JOIN_21317660;
	ForLoop21379326 [label="ForLoop21379326  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop21379326 -> ForLoop21379325;
	ForLoop21379326 -> _JOIN_21379326;
	21341166 [label="21341166  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	_JOIN_21336866 [label="_JOIN_21336866None...",shape=box];
	_JOIN_21336866 -> 21336898;
	_JOIN_21319714 [label="_JOIN_21319714None...",shape=box];
	_JOIN_21319714 -> ForLoop21319794;
	ForLoop21325129 [label="ForLoop21325129  for (j=(min(ny-1,jj+15))-(((min(ny-1,jj+15))-(jj)+1)%26)+1; j<=min(ny-1,jj+15); j=j+1) {...",shape=box];
	ForLoop21325129 -> 21325128;
	ForLoop21325129 -> _JOIN_21325129;
	21332683 [label="21332683  scv_38=scv_38+A[(i+19)*ny+j]*x_copy[(j-jj)];...",shape=box];
	21330496 [label="21330496  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	ForLoop21341134 [label="ForLoop21341134  for (j=(min(ny-1,jj+15))-(((min(ny-1,jj+15))-(jj)+1)%26)+1; j<=min(ny-1,jj+15); j=j+1) {...",shape=box];
	ForLoop21341134 -> 21341133;
	ForLoop21341134 -> _JOIN_21341134;
	21315611 [label="21315611  scv_41=scv_41+A[(i+3)*ny+j]*x_copy[(j-jj)];...",shape=box];
	21325161 [label="21325161  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	21335831 [label="21335831  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	21341219 [label="21341219  scv_40=scv_40+A[(i+27)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_21338920 [label="_JOIN_21338920None...",shape=box];
	_JOIN_21338920 -> ForLoop21339000;
	21320946 [label="21320946  scv_58=scv_58+A[(i+8)*ny+j]*x_copy[(j-jj)];...",shape=box];
	21332597 [label="21332597  scv_39=scv_39+A[(i+18)*ny+j]*x_copy[(j-jj)];...",shape=box];
	21332597 -> _JOIN_21332598;
	ForLoop21377395 [label="ForLoop21377395  for (k=kt; k<=min(ny-1,kk+127); k=k+1) {...",shape=box];
	ForLoop21377395 -> 21536736;
	ForLoop21377395 -> _JOIN_21377395;
	ForLoop21315446 [label="ForLoop21315446  for (j=jj; j<=min(ny-1,jj+15)-25; j=j+26) {...",shape=box];
	ForLoop21315446 -> 21314544;
	ForLoop21315446 -> _JOIN_21315446;
	ForLoop21377397 [label="ForLoop21377397  for (kk=kkk; kk<=min(ny-1,kkk+896); kk=kk+128) {...",shape=box];
	ForLoop21377397 -> ForLoop21376601;
	ForLoop21377397 -> _JOIN_21377397;
	ForLoop21379330 [label="ForLoop21379330  for (ii=iii; ii<=min(nx-1,iii+496); ii=ii+16) {...",shape=box];
	ForLoop21379330 -> 21312251;
	ForLoop21379330 -> _JOIN_21379330;
	ForLoop21379331 [label="ForLoop21379331  for (iii=0; iii<=nx-1; iii=iii+512) {...",shape=box];
	ForLoop21379331 -> ForLoop21379330;
	ForLoop21379331 -> _JOIN_21379331;
	21319793 [label="21319793  scv_44=scv_44+A[(i+6)*ny+j]*x_copy[(j-jj)];...",shape=box];
	21319793 -> _JOIN_21319794;
	_JOIN_21379323 [label="_JOIN_21379323None...",shape=box];
	_JOIN_21379323 -> _JOIN_21379325;
	_JOIN_21332598 [label="_JOIN_21332598None...",shape=box];
	_JOIN_21332598 -> 21332630;
	ForLoop21335799 [label="ForLoop21335799  for (j=(min(ny-1,jj+15))-(((min(ny-1,jj+15))-(jj)+1)%26)+1; j<=min(ny-1,jj+15); j=j+1) {...",shape=box];
	ForLoop21335799 -> 21335798;
	ForLoop21335799 -> _JOIN_21335799;
	_JOIN_21379326 [label="_JOIN_21379326None...",shape=box];
	_JOIN_21379326 -> 21654247;
	_JOIN_21379325 [label="_JOIN_21379325None...",shape=box];
	_JOIN_21379325 -> _JOIN_21379326;
	ForLoop21378311 [label="ForLoop21378311  for (jj=jjj; jj<=min(ny-1,jjj+2032); jj=jj+16) {...",shape=box];
	ForLoop21378311 -> 21377516;
	ForLoop21378311 -> _JOIN_21378311;
	21342200 [label="21342200  scv_40=scv_40+A[(i+27)*ny+j]*x_copy[(j-jj)];...",shape=box];
	21342200 -> _JOIN_21342201;
	ForLoop21317580 [label="ForLoop21317580  for (j=jj; j<=min(ny-1,jj+15)-25; j=j+26) {...",shape=box];
	ForLoop21317580 -> 21316678;
	ForLoop21317580 -> _JOIN_21317580;
	_JOIN_21337853 [label="_JOIN_21337853None...",shape=box];
	_JOIN_21337853 -> ForLoop21337933;
	ForLoop21322915 [label="ForLoop21322915  for (j=jj; j<=min(ny-1,jj+15)-25; j=j+26) {...",shape=box];
	ForLoop21322915 -> 21322013;
	ForLoop21322915 -> _JOIN_21322915;
	21315525 [label="21315525  scv_46=scv_46+A[(i+2)*ny+j]*x_copy[(j-jj)];...",shape=box];
	21315525 -> _JOIN_21315526;
	21312251 [label="21312251  int i;...",shape=box];
	21312251 -> ForLoop21377401;
	ForLoop21330464 [label="ForLoop21330464  for (j=(min(ny-1,jj+15))-(((min(ny-1,jj+15))-(jj)+1)%26)+1; j<=min(ny-1,jj+15); j=j+1) {...",shape=box];
	ForLoop21330464 -> 21330463;
	ForLoop21330464 -> _JOIN_21330464;
	21336951 [label="21336951  scv_60=scv_60+A[(i+23)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_21331451 [label="_JOIN_21331451None...",shape=box];
	_JOIN_21331451 -> ForLoop21331531;
	21334731 [label="21334731  scv_34=scv_34+A[(i+20)*ny+j]*x_copy[(j-jj)];...",shape=box];
	21334731 -> _JOIN_21334732;
	21649487 [label="21649487  double scv_96;...",shape=box];
	ForLoop21333665 [label="ForLoop21333665  for (j=(min(ny-1,jj+15))-(((min(ny-1,jj+15))-(jj)+1)%26)+1; j<=min(ny-1,jj+15); j=j+1) {...",shape=box];
	ForLoop21333665 -> 21333664;
	ForLoop21333665 -> _JOIN_21333665;
	_JOIN_21327263 [label="_JOIN_21327263None...",shape=box];
	_JOIN_21327263 -> 21327295;
	21334817 [label="21334817  scv_37=scv_37+A[(i+21)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_21379331 [label="_JOIN_21379331None...",shape=box];
	21317659 [label="21317659  scv_56=scv_56+A[(i+4)*ny+j]*x_copy[(j-jj)];...",shape=box];
	21317659 -> _JOIN_21317660;
	21316625 [label="21316625  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	ForLoop21322995 [label="ForLoop21322995  for (j=(min(ny-1,jj+15))-(((min(ny-1,jj+15))-(jj)+1)%26)+1; j<=min(ny-1,jj+15); j=j+1) {...",shape=box];
	ForLoop21322995 -> 21322994;
	ForLoop21322995 -> _JOIN_21322995;
	21313424 [label="21313424  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	_JOIN_21332518 [label="_JOIN_21332518None...",shape=box];
	_JOIN_21332518 -> ForLoop21332598;
	ForLoop21314379 [label="ForLoop21314379  for (j=jj; j<=min(ny-1,jj+15)-25; j=j+26) {...",shape=box];
	ForLoop21314379 -> 21313477;
	ForLoop21314379 -> _JOIN_21314379;
	ForLoop21323982 [label="ForLoop21323982  for (j=jj; j<=min(ny-1,jj+15)-25; j=j+26) {...",shape=box];
	ForLoop21323982 -> 21323080;
	ForLoop21323982 -> _JOIN_21323982;
	ForLoop21343268 [label="ForLoop21343268  for (j=(min(ny-1,jj+15))-(((min(ny-1,jj+15))-(jj)+1)%26)+1; j<=min(ny-1,jj+15); j=j+1) {...",shape=box];
	ForLoop21343268 -> 21343267;
	ForLoop21343268 -> _JOIN_21343268;
	_JOIN_21333585 [label="_JOIN_21333585None...",shape=box];
	_JOIN_21333585 -> ForLoop21333665;
	_JOIN_21330464 [label="_JOIN_21330464None...",shape=box];
	_JOIN_21330464 -> 21330496;
	_JOIN_21315526 [label="_JOIN_21315526None...",shape=box];
	_JOIN_21315526 -> 21315558;
	ForLoop21330384 [label="ForLoop21330384  for (j=jj; j<=min(ny-1,jj+15)-25; j=j+26) {...",shape=box];
	ForLoop21330384 -> 21329482;
	ForLoop21330384 -> _JOIN_21330384;
	21316592 [label="21316592  scv_41=scv_41+A[(i+3)*ny+j]*x_copy[(j-jj)];...",shape=box];
	21316592 -> _JOIN_21316593;
	21321927 [label="21321927  scv_58=scv_58+A[(i+8)*ny+j]*x_copy[(j-jj)];...",shape=box];
	21321927 -> _JOIN_21321928;
	21335884 [label="21335884  scv_61=scv_61+A[(i+22)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_21320861 [label="_JOIN_21320861None...",shape=box];
	_JOIN_21320861 -> 21320893;
	21326281 [label="21326281  scv_36=scv_36+A[(i+13)*ny+j]*x_copy[(j-jj)];...",shape=box];
	21335798 [label="21335798  scv_37=scv_37+A[(i+21)*ny+j]*x_copy[(j-jj)];...",shape=box];
	21335798 -> _JOIN_21335799;
	21327262 [label="21327262  scv_36=scv_36+A[(i+13)*ny+j]*x_copy[(j-jj)];...",shape=box];
	21327262 -> _JOIN_21327263;
	21318726 [label="21318726  scv_45=scv_45+A[(i+5)*ny+j]*x_copy[(j-jj)];...",shape=box];
	21318726 -> _JOIN_21318727;
	21324147 [label="21324147  scv_55=scv_55+A[(i+11)*ny+j]*x_copy[(j-jj)];...",shape=box];
	21330463 [label="21330463  scv_54=scv_54+A[(i+16)*ny+j]*x_copy[(j-jj)];...",shape=box];
	21330463 -> _JOIN_21330464;
	_JOIN_21322915 [label="_JOIN_21322915None...",shape=box];
	_JOIN_21322915 -> ForLoop21322995;
	21344334 [label="21344334  scv_62=scv_62+A[(i+29)*ny+j]*x_copy[(j-jj)];...",shape=box];
	21344334 -> _JOIN_21344335;
	_JOIN_21318647 [label="_JOIN_21318647None...",shape=box];
	_JOIN_21318647 -> ForLoop21318727;
	ForLoop21378308 [label="ForLoop21378308  for (j=(min(ny-1,jj+15))-(((min(ny-1,jj+15))-(jj)+1)%26)+1; j<=min(ny-1,jj+15); j=j+1) {...",shape=box];
	ForLoop21378308 -> 21378307;
	ForLoop21378308 -> _JOIN_21378308;
	ForLoop21331451 [label="ForLoop21331451  for (j=jj; j<=min(ny-1,jj+15)-25; j=j+26) {...",shape=box];
	ForLoop21331451 -> 21330549;
	ForLoop21331451 -> _JOIN_21331451;
	_JOIN_21341054 [label="_JOIN_21341054None...",shape=box];
	_JOIN_21341054 -> ForLoop21341134;
	ForLoop21379325 [label="ForLoop21379325  for (kk=kkk; kk<=min(ny-1,kkk+896); kk=kk+128) {...",shape=box];
	ForLoop21379325 -> ForLoop21379284;
	ForLoop21379325 -> _JOIN_21379325;
	_JOIN_21339000 [label="_JOIN_21339000None...",shape=box];
	_JOIN_21339000 -> 21339032;
	_JOIN_2132expected=9369846271501.798828
actual=9369846271501.798828
3982 [label="_JOIN_21323982None...",shape=box];
	_JOIN_21323982 -> ForLoop21324062;
	_JOIN_21337933 [label="_JOIN_21337933None...",shape=box];
	_JOIN_21337933 -> 21337965;
	21343267 [label="21343267  scv_50=scv_50+A[(i+28)*ny+j]*x_copy[(j-jj)];...",shape=box];
	21343267 -> _JOIN_21343268;
	_JOIN_21342121 [label="_JOIN_21342121None...",shape=box];
	_JOIN_21342121 -> ForLoop21342201;
	_JOIN_21335799 [label="_JOIN_21335799None...",shape=box];
	_JOIN_21335799 -> 21335831;
	ForLoop21329317 [label="ForLoop21329317  for (j=jj; j<=min(ny-1,jj+15)-25; j=j+26) {...",shape=box];
	ForLoop21329317 -> 21328415;
	ForLoop21329317 -> _JOIN_21329317;
	21533124 [label="21533124  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	_JOIN_21325049 [label="_JOIN_21325049None...",shape=box];
	_JOIN_21325049 -> ForLoop21325129;
	21377560 [label="21377560  scv_97=scv_97+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_21334732 [label="_JOIN_21334732None...",shape=box];
	_JOIN_21334732 -> 21334764;
	_JOIN_21335719 [label="_JOIN_21335719None...",shape=box];
	_JOIN_21335719 -> ForLoop21335799;
	_JOIN_21344340 [label="_JOIN_21344340None...",shape=box];
	_JOIN_21344340 -> ForLoop21377399;
	21324094 [label="21324094  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	21322013 [label="21322013  scv_57=scv_57+A[(i+9)*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop21332598 [label="ForLoop21332598  for (j=(min(ny-1,jj+15))-(((min(ny-1,jj+15))-(jj)+1)%26)+1; j<=min(ny-1,jj+15); j=j+1) {...",shape=box];
	ForLoop21332598 -> 21332597;
	ForLoop21332598 -> _JOIN_21332598;
	_JOIN_21325129 [label="_JOIN_21325129None...",shape=box];
	_JOIN_21325129 -> 21325161;
	_JOIN_21330384 [label="_JOIN_21330384None...",shape=box];
	_JOIN_21330384 -> ForLoop21330464;
	21342286 [label="21342286  scv_50=scv_50+A[(i+28)*ny+j]*x_copy[(j-jj)];...",shape=box];
	21536736 [label="21536736  double scv_33;...",shape=box];
	ForLoop21335719 [label="ForLoop21335719  for (j=jj; j<=min(ny-1,jj+15)-25; j=j+26) {...",shape=box];
	ForLoop21335719 -> 21334817;
	ForLoop21335719 -> _JOIN_21335719;
	21312644 [label="21312644  scv_42=scv_42+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest91.exe __orio_perftest91.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest91.exe  
{'[1, 1, 4, 4, 6, 5, 1, 0, 3, 29, 25, 0, 0, 0, 2, 1, 1, 0]' : 0.166117}
{'[1, 1, 4, 4, 6, 5, 1, 0, 3, 29, 25, 0, 0, 0, 2, 1, 1, 0]' : 0.167155}
{'[1, 1, 4, 4, 6, 5, 1, 0, 3, 29, 25, 0, 0, 0, 2, 1, 1, 0]' : 0.166064}
{'[1, 1, 4, 4, 6, 5, 1, 0, 3, 29, 25, 0, 0, 0, 2, 1, 1, 0]' : 0.166091}
{'[1, 1, 4, 4, 6, 5, 1, 0, 3, 29, 25, 0, 0, 0, 2, 1, 1, 0]' : 0.166065}
{'[1, 1, 4, 4, 6, 5, 1, 0, 3, 29, 25, 0, 0, 0, 2, 1, 1, 0]' : 0.166282}
{'[1, 1, 4, 4, 6, 5, 1, 0, 3, 29, 25, 0, 0, 0, 2, 1, 1, 0]' : 0.166075}
{'[1, 1, 4, 4, 6, 5, 1, 0, 3, 29, 25, 0, 0, 0, 2, 1, 1, 0]' : 0.166351}
{'[1, 1, 4, 4, 6, 5, 1, 0, 3, 29, 25, 0, 0, 0, 2, 1, 1, 0]' : 0.166068}
{'[1, 1, 4, 4, 6, 5, 1, 0, 3, 29, 25, 0, 0, 0, 2, 1, 1, 0]' : 0.166154}
{'[1, 1, 4, 4, 6, 5, 1, 0, 3, 29, 25, 0, 0, 0, 2, 1, 1, 0]' : 0.166059}
{'[1, 1, 4, 4, 6, 5, 1, 0, 3, 29, 25, 0, 0, 0, 2, 1, 1, 0]' : 0.166111}
{'[1, 1, 4, 4, 6, 5, 1, 0, 3, 29, 25, 0, 0, 0, 2, 1, 1, 0]' : 0.166163}
{'[1, 1, 4, 4, 6, 5, 1, 0, 3, 29, 25, 0, 0, 0, 2, 1, 1, 0]' : 0.167062}
{'[1, 1, 4, 4, 6, 5, 1, 0, 3, 29, 25, 0, 0, 0, 2, 1, 1, 0]' : 0.166373}
{'[1, 1, 4, 4, 6, 5, 1, 0, 3, 29, 25, 0, 0, 0, 2, 1, 1, 0]' : 0.16621}
{'[1, 1, 4, 4, 6, 5, 1, 0, 3, 29, 25, 0, 0, 0, 2, 1, 1, 0]' : 0.166087}
{'[1, 1, 4, 4, 6, 5, 1, 0, 3, 29, 25, 0, 0, 0, 2, 1, 1, 0]' : 0.166052}
{'[1, 1, 4, 4, 6, 5, 1, 0, 3, 29, 25, 0, 0, 0, 2, 1, 1, 0]' : 0.166123}
{'[1, 1, 4, 4, 6, 5, 1, 0, 3, 29, 25, 0, 0, 0, 2, 1, 1, 0]' : 0.1662}
{'[1, 1, 4, 4, 6, 5, 1, 0, 3, 29, 25, 0, 0, 0, 2, 1, 1, 0]' : 0.166133}
{'[1, 1, 4, 4, 6, 5, 1, 0, 3, 29, 25, 0, 0, 0, 2, 1, 1, 0]' : 0.16609}
{'[1, 1, 4, 4, 6, 5, 1, 0, 3, 29, 25, 0, 0, 0, 2, 1, 1, 0]' : 0.16606}
{'[1, 1, 4, 4, 6, 5, 1, 0, 3, 29, 25, 0, 0, 0, 2, 1, 1, 0]' : 0.166283}
{'[1, 1, 4, 4, 6, 5, 1, 0, 3, 29, 25, 0, 0, 0, 2, 1, 1, 0]' : 0.166086}
{'[1, 1, 4, 4, 6, 5, 1, 0, 3, 29, 25, 0, 0, 0, 2, 1, 1, 0]' : 0.166029}
{'[1, 1, 4, 4, 6, 5, 1, 0, 3, 29, 25, 0, 0, 0, 2, 1, 1, 0]' : 0.167091}
{'[1, 1, 4, 4, 6, 5, 1, 0, 3, 29, 25, 0, 0, 0, 2, 1, 1, 0]' : 0.16613}
{'[1, 1, 4, 4, 6, 5, 1, 0, 3, 29, 25, 0, 0, 0, 2, 1, 1, 0]' : 0.166062}
{'[1, 1, 4, 4, 6, 5, 1, 0, 3, 29, 25, 0, 0, 0, 2, 1, 1, 0]' : 0.166072}

out:
 ["{'[1, 1, 4, 4, 6, 5, 1, 0, 3, 29, 25, 0, 0, 0, 2, 1, 1, 0]' : 0.166117}", "{'[1, 1, 4, 4, 6, 5, 1, 0, 3, 29, 25, 0, 0, 0, 2, 1, 1, 0]' : 0.167155}", "{'[1, 1, 4, 4, 6, 5, 1, 0, 3, 29, 25, 0, 0, 0, 2, 1, 1, 0]' : 0.166064}", "{'[1, 1, 4, 4, 6, 5, 1, 0, 3, 29, 25, 0, 0, 0, 2, 1, 1, 0]' : 0.166091}", "{'[1, 1, 4, 4, 6, 5, 1, 0, 3, 29, 25, 0, 0, 0, 2, 1, 1, 0]' : 0.166065}", "{'[1, 1, 4, 4, 6, 5, 1, 0, 3, 29, 25, 0, 0, 0, 2, 1, 1, 0]' : 0.166282}", "{'[1, 1, 4, 4, 6, 5, 1, 0, 3, 29, 25, 0, 0, 0, 2, 1, 1, 0]' : 0.166075}", "{'[1, 1, 4, 4, 6, 5, 1, 0, 3, 29, 25, 0, 0, 0, 2, 1, 1, 0]' : 0.166351}", "{'[1, 1, 4, 4, 6, 5, 1, 0, 3, 29, 25, 0, 0, 0, 2, 1, 1, 0]' : 0.166068}", "{'[1, 1, 4, 4, 6, 5, 1, 0, 3, 29, 25, 0, 0, 0, 2, 1, 1, 0]' : 0.166154}", "{'[1, 1, 4, 4, 6, 5, 1, 0, 3, 29, 25, 0, 0, 0, 2, 1, 1, 0]' : 0.166059}", "{'[1, 1, 4, 4, 6, 5, 1, 0, 3, 29, 25, 0, 0, 0, 2, 1, 1, 0]' : 0.166111}", "{'[1, 1, 4, 4, 6, 5, 1, 0, 3, 29, 25, 0, 0, 0, 2, 1, 1, 0]' : 0.166163}", "{'[1, 1, 4, 4, 6, 5, 1, 0, 3, 29, 25, 0, 0, 0, 2, 1, 1, 0]' : 0.167062}", "{'[1, 1, 4, 4, 6, 5, 1, 0, 3, 29, 25, 0, 0, 0, 2, 1, 1, 0]' : 0.166373}", "{'[1, 1, 4, 4, 6, 5, 1, 0, 3, 29, 25, 0, 0, 0, 2, 1, 1, 0]' : 0.16621}", "{'[1, 1, 4, 4, 6, 5, 1, 0, 3, 29, 25, 0, 0, 0, 2, 1, 1, 0]' : 0.166087}", "{'[1, 1, 4, 4, 6, 5, 1, 0, 3, 29, 25, 0, 0, 0, 2, 1, 1, 0]' : 0.166052}", "{'[1, 1, 4, 4, 6, 5, 1, 0, 3, 29, 25, 0, 0, 0, 2, 1, 1, 0]' : 0.166123}", "{'[1, 1, 4, 4, 6, 5, 1, 0, 3, 29, 25, 0, 0, 0, 2, 1, 1, 0]' : 0.1662}", "{'[1, 1, 4, 4, 6, 5, 1, 0, 3, 29, 25, 0, 0, 0, 2, 1, 1, 0]' : 0.166133}", "{'[1, 1, 4, 4, 6, 5, 1, 0, 3, 29, 25, 0, 0, 0, 2, 1, 1, 0]' : 0.16609}", "{'[1, 1, 4, 4, 6, 5, 1, 0, 3, 29, 25, 0, 0, 0, 2, 1, 1, 0]' : 0.16606}", "{'[1, 1, 4, 4, 6, 5, 1, 0, 3, 29, 25, 0, 0, 0, 2, 1, 1, 0]' : 0.166283}", "{'[1, 1, 4, 4, 6, 5, 1, 0, 3, 29, 25, 0, 0, 0, 2, 1, 1, 0]' : 0.166086}", "{'[1, 1, 4, 4, 6, 5, 1, 0, 3, 29, 25, 0, 0, 0, 2, 1, 1, 0]' : 0.166029}", "{'[1, 1, 4, 4, 6, 5, 1, 0, 3, 29, 25, 0, 0, 0, 2, 1, 1, 0]' : 0.167091}", "{'[1, 1, 4, 4, 6, 5, 1, 0, 3, 29, 25, 0, 0, 0, 2, 1, 1, 0]' : 0.16613}", "{'[1, 1, 4, 4, 6, 5, 1, 0, 3, 29, 25, 0, 0, 0, 2, 1, 1, 0]' : 0.166062}", "{'[1, 1, 4, 4, 6, 5, 1, 0, 3, 29, 25, 0, 0, 0, 2, 1, 1, 0]' : 0.166072}"]
returning from 'run': {'[1, 1, 4, 4, 6, 5, 1, 0, 3, 29, 25, 0, 0, 0, 2, 1, 1, 0]': ([0.166117, 0.167155, 0.166064, 0.166091, 0.166065, 0.166282, 0.166075, 0.166351, 0.166068, 0.166154, 0.166059, 0.166111, 0.166163, 0.167062, 0.166373, 0.16621, 0.166087, 0.166052, 0.166123, 0.1662, 0.166133, 0.16609, 0.16606, 0.166283, 0.166086, 0.166029, 0.167091, 0.16613, 0.166062, 0.166072], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.166117, 0.167155, 0.166064, 0.166091, 0.166065, 0.166282, 0.166075, 0.166351, 0.166068, 0.166154, 0.166059, 0.166111, 0.166163, 0.167062, 0.166373, 0.16621, 0.166087, 0.166052, 0.166123, 0.1662, 0.166133, 0.16609, 0.16606, 0.166283, 0.166086, 0.166029, 0.167091, 0.16613, 0.166062, 0.166072], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[1, 1, 4, 4, 6, 5, 1, 0, 3, 29, 25, 0, 0, 0, 2, 1, 1, 0]': ([0.166117, 0.167155, 0.166064, 0.166091, 0.166065, 0.166282, 0.166075, 0.166351, 0.166068, 0.166154, 0.166059, 0.166111, 0.166163, 0.167062, 0.166373, 0.16621, 0.166087, 0.166052, 0.166123, 0.1662, 0.166133, 0.16609, 0.16606, 0.166283, 0.166086, 0.166029, 0.167091, 0.16613, 0.166062, 0.166072], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [6, 3, 6, 5, 1, 0, 0, 17, 4, 0, 1, 1, 0, 0]
Fixed Factors: {'T2_K': 5, 'T2_J': 6, 'SCR': 1, 'VEC1': 1}
Testing candidate 21: [6, 3, 6, 5, 6, 5, 1, 0, 0, 17, 4, 0, 1, 1, 0, 1, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	44
        Max loop nest depth: 	6
        Additions: 		1142
        Multiplications: 	486
        Divisions: 		0
        Logical: 		0
        Reads: 			2381
        Writes: 		449
        Comparisons:		44
        Gotos: 			0
        
digraph CFG {
	ForLoop21877166 [label="ForLoop21877166  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop21877166 -> ForLoop21877164;
	ForLoop21877166 -> _JOIN_21877166;
	21885279 [label="21885279  double scv_9;...",shape=box];
	ForLoop21870814 [label="ForLoop21870814  for (it=ii; it<=min(nx-1,ii+511)-7; it=it+8) {...",shape=box];
	ForLoop21870814 -> 21888018;
	ForLoop21870814 -> _JOIN_21870814;
	21914230 [label="21914230  tmp[i]=scv_46;...",shape=box];
	21914230 -> _JOIN_21877608;
	ForLoop21870812 [label="ForLoop21870812  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop21870812 -> ForLoop21870811;
	ForLoop21870812 -> _JOIN_21870812;
	ForLoop21870811 [label="ForLoop21870811  for (kk=kkk; kk<=min(ny-1,kkk+512); kk=kk+512) {...",shape=box];
	ForLoop21870811 -> ForLoop21870810;
	ForLoop21870811 -> _JOIN_21870811;
	ForLoop21870810 [label="ForLoop21870810  for (k=kk; k<=min(ny-1,kk+511); k=k+1) {...",shape=box];
	ForLoop21870810 -> 21885279;
	ForLoop21870810 -> _JOIN_21870810;
	ForLoop21877605 [label="ForLoop21877605  for (kk=kkk; kk<=min(ny-1,kkk+512); kk=kk+512) {...",shape=box];
	ForLoop21877605 -> ForLoop21877604;
	ForLoop21877605 -> _JOIN_21877605;
	_JOIN_21877608 [label="_JOIN_21877608None...",shape=box];
	_JOIN_21877608 -> _JOIN_21877611;
	21871056 [label="21871056  for (j=jj; j<=min(ny-1,jj+63); j=j+1) ...",shape=box];
	ForLoop21746572 [label="ForLoop21746572  for (i=0; i<=cbv_1; i++ ) ...",shape=box];
	ForLoop21746572 -> 21746571;
	ForLoop21746572 -> _JOIN_21746572;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 21746599;
	_JOIN_21877162 [label="_JOIN_21877162None...",shape=box];
	_JOIN_21877162 -> _JOIN_21877164;
	21746571 [label="21746571  y[i]=0.0;...",shape=box];
	21746571 -> _JOIN_21746572;
	21905593 [label="21905593  double scv_26;...",shape=box];
	21746599 [label="21746599  register int cbv_1;...",shape=box];
	_JOIN_21877166 [label="_JOIN_21877166None...",shape=box];
	_JOIN_21877166 -> 21911947;
	_JOIN_21877164 [label="_JOIN_21877164None...",shape=box];
	_JOIN_21877164 -> _JOIN_21877166;
	_JOIN_21876649 [label="_JOIN_21876649None...",shape=box];
	_JOIN_21876649 -> ForLoop21877166;
	_JOIN_21877168 [label="_JOIN_21877168None...",shape=box];
	_JOIN_21877168 -> ForLoop21877608;
	_JOIN_21877605 [label="_JOIN_21877605None...",shape=box];
	_JOIN_21877605 -> _JOIN_21877606;
	_JOIN_21877604 [label="_JOIN_21877604None...",shape=box];
	_JOIN_21877604 -> _JOIN_21877605;
	_JOIN_21877531 [label="_JOIN_21877531None...",shape=box];
	_JOIN_21877531 -> _JOIN_21877533;
	ForLoop21876649 [label="ForLoop21876649  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop21876649 -> ForLoop21876647;
	ForLoop21876649 -> _JOIN_21876649;
	_JOIN_21877533 [label="_JOIN_21877533None...",shape=box];
	_JOIN_21877533 -> _JOIN_21877534;
	_JOIN_21870814 [label="_JOIN_21870814None...",shape=box];
	_JOIN_21870814 -> 21870815;
	_JOIN_21870812 [label="_JOIN_21870812None...",shape=box];
	_JOIN_21870812 -> 21888030;
	_JOIN_21870811 [label="_JOIN_21870811None...",shape=box];
	_JOIN_21870811 -> _JOIN_21870812;
	_JOIN_21870810 [label="_JOIN_21870810None...",shape=box];
	_JOIN_21870810 -> _JOIN_21870811;
	ForLoop21877611 [label="ForLoop21877611  for (ii=iii; ii<=min(nx-1,iii+512); ii=ii+512) {...",shape=box];
	ForLoop21877611 -> ForLoop21870814;
	ForLoop21877611 -> _JOIN_21877611;
	ForLoop21877612 [label="ForLoop21877612  for (iii=0; iii<=nx-1; iii=iii+1024) {...",shape=box];
	ForLoop21877612 -> ForLoop21877611;
	ForLoop21877612 -> _JOIN_21877612;
	ForLoop21876645 [label="ForLoop21876645  for (jt=jj; jt<=min(ny-1,jj+63)-7; jt=jt+8) {...",shape=box];
	ForLoop21876645 -> 21895191;
	ForLoop21876645 -> _JOIN_21876645;
	ForLoop21876647 [label="ForLoop21876647  for (jj=jjj; jj<=min(ny-1,jjj+1984); jj=jj+64) {...",shape=box];
	ForLoop21876647 -> 21871056;
	ForLoop21876647 -> _JOIN_21876647;
	ForLoop21877164 [label="ForLoop21877164  for (kk=kkk; kk<=min(ny-1,kkk+512); kk=kk+512) {...",shape=box];
	ForLoop21877164 -> ForLoop21877162;
	ForLoop21877164 -> _JOIN_21877164;
	ForLoop21877608 [label="ForLoop21877608  for (i=(min(nx-1,ii+511))-(((min(nx-1,ii+511))-(it)+1)%18)+1; i<=min(nx-1,ii+511); i=i+1) {...",shape=box];
	ForLoop21877608 -> 21914218;
	ForLoop21877608 -> _JOIN_21877608;
	ForLoop21870556 [label="ForLoop21870556  for (jj=jjj; jj<=min(ny-1,jjj+1984); jj=jj+64) {...",shape=box];
	ForLoop21870556 -> 21868220;
	ForLoop21870556 -> _JOIN_21870556;
	ForLoop21870557 [label="ForLoop21870557  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop21870557 -> ForLoop21870556;
	ForLoop21870557 -> _JOIN_21870557;
	ForLoop21870554 [label="ForLoop21870554  for (jt=jj; jt<=min(ny-1,jj+63)-7; jt=jt+8) {...",shape=box];
	ForLoop21870554 -> 21880838;
	ForLoop21870554 -> _JOIN_21870554;
	21911929 [label="21911929  double scv_27, scv_28, scv_29, scv_30, scv_31, scv_32, scv_33, scv_34;...",shape=box];
	_JOIN_21877534 [label="_JOIN_21877534None...",shape=box];
	_JOIN_21877534 -> ForLoop21877606;
	_JOIN_21877611 [label="_JOIN_21877611None...",shape=box];
	_JOIN_21877611 -> _JOIN_21877612;
	21911947 [label="21911947  tmp[(i+12)]=scv_27;...",shape=box];
	21868220 [label="21868220  for (j=jj; j<=min(ny-1,jj+63); j=j+1) ...",shape=box];
	21868220 -> ForLoop21870554;
	21880838 [label="21880838  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	21913619 [label="21913619  double scv_45;...",shape=box];
	21877283 [label="21877283  for (j=jj; j<=min(ny-1,jj+63); j=j+1) ...",shape=box];
	21877283 -> ForLoop21877531;
	ForLoop21877168 [label="ForLoop21877168  for (i=it; i<=min(nx-1,ii+511)-17; i=i+18) {...",shape=box];
	ForLoop21877168 -> 21911929;
	ForLoop21877168 -> _JOIN_21877168;
	_JOIN_21870556 [label="_JOIN_21870556None...",shape=box];
	_JOIN_21870556 -> _JOIN_21870557;
	_JOIN_21870557 [label="_JOIN_21870557None...",shape=box];
	_JOIN_21870557 -> ForLoop21870812;
	_JOIN_21870554 [label="_JOIN_21870554None...",shape=box];
	_JOIN_21870554 -> _JOIN_21870556;
	21914218 [label="21914218  double scv_46;...",shape=box];
	_JOIN_21876645 [label="_JOIN_21876645None...",shape=box];
	_JOIN_21876645 -> _JOIN_21876647;
	ForLoop21877162 [label="ForLoop21877162  for (k=kk; k<=min(ny-1,kk+511); k=k+1) {...",shape=box];
	ForLoop21877162 -> 21905593;
	ForLoop21877162 -> _JOIN_21877162;
	_JOIN_21877606 [label="_JOIN_21877606None...",shape=box];
	_JOIN_21877606 -> 21914230;
	21888030 [label="21888030  tmp[it]=scv_10;...",shape=box];
	21895191 [label="21895191  double scv_18, scv_19, scv_20, scv_21, scv_22, scv_23, scv_24, scv_25;...",shape=box];
	21888018 [label="21888018  double scv_10, scv_11, scv_12, scv_13, scv_14, scv_15, scv_16, scv_17;...",shape=box];
	21877326 [label="21877326  scv_46=scv_46+A[i*ny+jt]*x_copy[(jt-jj)];...",shape=box];
	21870815 [label="21870815  int i;...",shape=box];
	21870815 -> ForLoop21877168;
	_JOIN_21877612 [label="_JOIN_21877612None...",shape=box];
	21868100 [label="21868100  double x_copy[64];...",shape=box];
	ForLoop21877534 [label="ForLoop21877534  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop21877534 -> ForLoop21877533;
	ForLoop21877534 -> _JOIN_21877534;
	_JOIN_21746572 [label="_JOIN_21746572None...",shape=box];
	_JOIN_21746572 -> 21868100;
	_JOIN_21876647 [label="_JOIN_21876647None...",shape=box];
	_JOIN_21876647 -> _JOIN_21876649;
	ForLoop21877531 [label="ForLoop21877531  for (jt=jj; jt<=min(ny-1,jj+63)-7; jt=jt+8) {...",shape=box];
	ForLoop21877531 -> 21877326;
	ForLoop21877531 -> _JOIN_21877531;
	ForLoop21877606 [label="ForLoop21877606  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];expected=9369846271501.798828
actual=9369846271501.798828

	ForLoop21877606 -> ForLoop21877605;
	ForLoop21877606 -> _JOIN_21877606;
	ForLoop21877533 [label="ForLoop21877533  for (jj=jjj; jj<=min(ny-1,jjj+1984); jj=jj+64) {...",shape=box];
	ForLoop21877533 -> 21877283;
	ForLoop21877533 -> _JOIN_21877533;
	ForLoop21877604 [label="ForLoop21877604  for (k=kk; k<=min(ny-1,kk+511); k=k+1) {...",shape=box];
	ForLoop21877604 -> 21913619;
	ForLoop21877604 -> _JOIN_21877604;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest92.exe __orio_perftest92.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest92.exe  
{'[6, 3, 6, 5, 6, 5, 1, 0, 0, 17, 4, 0, 1, 1, 0, 1, 1, 0]' : 0.087182}
{'[6, 3, 6, 5, 6, 5, 1, 0, 0, 17, 4, 0, 1, 1, 0, 1, 1, 0]' : 0.08675}
{'[6, 3, 6, 5, 6, 5, 1, 0, 0, 17, 4, 0, 1, 1, 0, 1, 1, 0]' : 0.0866179}
{'[6, 3, 6, 5, 6, 5, 1, 0, 0, 17, 4, 0, 1, 1, 0, 1, 1, 0]' : 0.0868132}
{'[6, 3, 6, 5, 6, 5, 1, 0, 0, 17, 4, 0, 1, 1, 0, 1, 1, 0]' : 0.0867012}
{'[6, 3, 6, 5, 6, 5, 1, 0, 0, 17, 4, 0, 1, 1, 0, 1, 1, 0]' : 0.0867929}
{'[6, 3, 6, 5, 6, 5, 1, 0, 0, 17, 4, 0, 1, 1, 0, 1, 1, 0]' : 0.0871279}
{'[6, 3, 6, 5, 6, 5, 1, 0, 0, 17, 4, 0, 1, 1, 0, 1, 1, 0]' : 0.0868971}
{'[6, 3, 6, 5, 6, 5, 1, 0, 0, 17, 4, 0, 1, 1, 0, 1, 1, 0]' : 0.0869179}
{'[6, 3, 6, 5, 6, 5, 1, 0, 0, 17, 4, 0, 1, 1, 0, 1, 1, 0]' : 0.0866301}
{'[6, 3, 6, 5, 6, 5, 1, 0, 0, 17, 4, 0, 1, 1, 0, 1, 1, 0]' : 0.0867391}
{'[6, 3, 6, 5, 6, 5, 1, 0, 0, 17, 4, 0, 1, 1, 0, 1, 1, 0]' : 0.086653}
{'[6, 3, 6, 5, 6, 5, 1, 0, 0, 17, 4, 0, 1, 1, 0, 1, 1, 0]' : 0.0867651}
{'[6, 3, 6, 5, 6, 5, 1, 0, 0, 17, 4, 0, 1, 1, 0, 1, 1, 0]' : 0.0866508}
{'[6, 3, 6, 5, 6, 5, 1, 0, 0, 17, 4, 0, 1, 1, 0, 1, 1, 0]' : 0.086781}
{'[6, 3, 6, 5, 6, 5, 1, 0, 0, 17, 4, 0, 1, 1, 0, 1, 1, 0]' : 0.0867081}
{'[6, 3, 6, 5, 6, 5, 1, 0, 0, 17, 4, 0, 1, 1, 0, 1, 1, 0]' : 0.086735}
{'[6, 3, 6, 5, 6, 5, 1, 0, 0, 17, 4, 0, 1, 1, 0, 1, 1, 0]' : 0.086839}
{'[6, 3, 6, 5, 6, 5, 1, 0, 0, 17, 4, 0, 1, 1, 0, 1, 1, 0]' : 0.0866821}
{'[6, 3, 6, 5, 6, 5, 1, 0, 0, 17, 4, 0, 1, 1, 0, 1, 1, 0]' : 0.0870831}
{'[6, 3, 6, 5, 6, 5, 1, 0, 0, 17, 4, 0, 1, 1, 0, 1, 1, 0]' : 0.0866661}
{'[6, 3, 6, 5, 6, 5, 1, 0, 0, 17, 4, 0, 1, 1, 0, 1, 1, 0]' : 0.086735}
{'[6, 3, 6, 5, 6, 5, 1, 0, 0, 17, 4, 0, 1, 1, 0, 1, 1, 0]' : 0.0866892}
{'[6, 3, 6, 5, 6, 5, 1, 0, 0, 17, 4, 0, 1, 1, 0, 1, 1, 0]' : 0.0871842}
{'[6, 3, 6, 5, 6, 5, 1, 0, 0, 17, 4, 0, 1, 1, 0, 1, 1, 0]' : 0.086772}
{'[6, 3, 6, 5, 6, 5, 1, 0, 0, 17, 4, 0, 1, 1, 0, 1, 1, 0]' : 0.0867219}
{'[6, 3, 6, 5, 6, 5, 1, 0, 0, 17, 4, 0, 1, 1, 0, 1, 1, 0]' : 0.086817}
{'[6, 3, 6, 5, 6, 5, 1, 0, 0, 17, 4, 0, 1, 1, 0, 1, 1, 0]' : 0.0867271}
{'[6, 3, 6, 5, 6, 5, 1, 0, 0, 17, 4, 0, 1, 1, 0, 1, 1, 0]' : 0.0867231}
{'[6, 3, 6, 5, 6, 5, 1, 0, 0, 17, 4, 0, 1, 1, 0, 1, 1, 0]' : 0.0867651}

out:
 ["{'[6, 3, 6, 5, 6, 5, 1, 0, 0, 17, 4, 0, 1, 1, 0, 1, 1, 0]' : 0.087182}", "{'[6, 3, 6, 5, 6, 5, 1, 0, 0, 17, 4, 0, 1, 1, 0, 1, 1, 0]' : 0.08675}", "{'[6, 3, 6, 5, 6, 5, 1, 0, 0, 17, 4, 0, 1, 1, 0, 1, 1, 0]' : 0.0866179}", "{'[6, 3, 6, 5, 6, 5, 1, 0, 0, 17, 4, 0, 1, 1, 0, 1, 1, 0]' : 0.0868132}", "{'[6, 3, 6, 5, 6, 5, 1, 0, 0, 17, 4, 0, 1, 1, 0, 1, 1, 0]' : 0.0867012}", "{'[6, 3, 6, 5, 6, 5, 1, 0, 0, 17, 4, 0, 1, 1, 0, 1, 1, 0]' : 0.0867929}", "{'[6, 3, 6, 5, 6, 5, 1, 0, 0, 17, 4, 0, 1, 1, 0, 1, 1, 0]' : 0.0871279}", "{'[6, 3, 6, 5, 6, 5, 1, 0, 0, 17, 4, 0, 1, 1, 0, 1, 1, 0]' : 0.0868971}", "{'[6, 3, 6, 5, 6, 5, 1, 0, 0, 17, 4, 0, 1, 1, 0, 1, 1, 0]' : 0.0869179}", "{'[6, 3, 6, 5, 6, 5, 1, 0, 0, 17, 4, 0, 1, 1, 0, 1, 1, 0]' : 0.0866301}", "{'[6, 3, 6, 5, 6, 5, 1, 0, 0, 17, 4, 0, 1, 1, 0, 1, 1, 0]' : 0.0867391}", "{'[6, 3, 6, 5, 6, 5, 1, 0, 0, 17, 4, 0, 1, 1, 0, 1, 1, 0]' : 0.086653}", "{'[6, 3, 6, 5, 6, 5, 1, 0, 0, 17, 4, 0, 1, 1, 0, 1, 1, 0]' : 0.0867651}", "{'[6, 3, 6, 5, 6, 5, 1, 0, 0, 17, 4, 0, 1, 1, 0, 1, 1, 0]' : 0.0866508}", "{'[6, 3, 6, 5, 6, 5, 1, 0, 0, 17, 4, 0, 1, 1, 0, 1, 1, 0]' : 0.086781}", "{'[6, 3, 6, 5, 6, 5, 1, 0, 0, 17, 4, 0, 1, 1, 0, 1, 1, 0]' : 0.0867081}", "{'[6, 3, 6, 5, 6, 5, 1, 0, 0, 17, 4, 0, 1, 1, 0, 1, 1, 0]' : 0.086735}", "{'[6, 3, 6, 5, 6, 5, 1, 0, 0, 17, 4, 0, 1, 1, 0, 1, 1, 0]' : 0.086839}", "{'[6, 3, 6, 5,WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
 6, 5, 1, 0, 0, 17, 4, 0, 1, 1, 0, 1, 1, 0]' : 0.0866821}", "{'[6, 3, 6, 5, 6, 5, 1, 0, 0, 17, 4, 0, 1, 1, 0, 1, 1, 0]' : 0.0870831}", "{'[6, 3, 6, 5, 6, 5, 1, 0, 0, 17, 4, 0, 1, 1, 0, 1, 1, 0]' : 0.0866661}", "{'[6, 3, 6, 5, 6, 5, 1, 0, 0, 17, 4, 0, 1, 1, 0, 1, 1, 0]' : 0.086735}", "{'[6, 3, 6, 5, 6, 5, 1, 0, 0, 17, 4, 0, 1, 1, 0, 1, 1, 0]' : 0.0866892}", "{'[6, 3, 6, 5, 6, 5, 1, 0, 0, 17, 4, 0, 1, 1, 0, 1, 1, 0]' : 0.0871842}", "{'[6, 3, 6, 5, 6, 5, 1, 0, 0, 17, 4, 0, 1, 1, 0, 1, 1, 0]' : 0.086772}", "{'[6, 3, 6, 5, 6, 5, 1, 0, 0, 17, 4, 0, 1, 1, 0, 1, 1, 0]' : 0.0867219}", "{'[6, 3, 6, 5, 6, 5, 1, 0, 0, 17, 4, 0, 1, 1, 0, 1, 1, 0]' : 0.086817}", "{'[6, 3, 6, 5, 6, 5, 1, 0, 0, 17, 4, 0, 1, 1, 0, 1, 1, 0]' : 0.0867271}", "{'[6, 3, 6, 5, 6, 5, 1, 0, 0, 17, 4, 0, 1, 1, 0, 1, 1, 0]' : 0.0867231}", "{'[6, 3, 6, 5, 6, 5, 1, 0, 0, 17, 4, 0, 1, 1, 0, 1, 1, 0]' : 0.0867651}"]
returning from 'run': {'[6, 3, 6, 5, 6, 5, 1, 0, 0, 17, 4, 0, 1, 1, 0, 1, 1, 0]': ([0.087182, 0.08675, 0.0866179, 0.0868132, 0.0867012, 0.0867929, 0.0871279, 0.0868971, 0.0869179, 0.0866301, 0.0867391, 0.086653, 0.0867651, 0.0866508, 0.086781, 0.0867081, 0.086735, 0.086839, 0.0866821, 0.0870831, 0.0866661, 0.086735, 0.0866892, 0.0871842, 0.086772, 0.0867219, 0.086817, 0.0867271, 0.0867231, 0.0867651], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.087182, 0.08675, 0.0866179, 0.0868132, 0.0867012, 0.0867929, 0.0871279, 0.0868971, 0.0869179, 0.0866301, 0.0867391, 0.086653, 0.0867651, 0.0866508, 0.086781, 0.0867081, 0.086735, 0.086839, 0.0866821, 0.0870831, 0.0866661, 0.086735, 0.0866892, 0.0871842, 0.086772, 0.0867219, 0.086817, 0.0867271, 0.0867231, 0.0867651], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[6, 3, 6, 5, 6, 5, 1, 0, 0, 17, 4, 0, 1, 1, 0, 1, 1, 0]': ([0.087182, 0.08675, 0.0866179, 0.0868132, 0.0867012, 0.0867929, 0.0871279, 0.0868971, 0.0869179, 0.0866301, 0.0867391, 0.086653, 0.0867651, 0.0866508, 0.086781, 0.0867081, 0.086735, 0.086839, 0.0866821, 0.0870831, 0.0866661, 0.086735, 0.0866892, 0.0871842, 0.086772, 0.0867219, 0.086817, 0.0867271, 0.0867231, 0.0867651], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [6, 4, 5, 4, 1, 0, 10, 0, 29, 28, 0, 1, 0, 0]
Fixed Factors: {'T2_K': 5, 'T2_J': 6, 'SCR': 1, 'VEC1': 1}
Testing candidate 22: [6, 4, 5, 4, 6, 5, 1, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		238
        Multiplications: 	76
        Divisions: 		0
        Logical: 		0
        Reads: 			584
        Writes: 		141
        Comparisons:		12
        Gotos: 			0
        
digraph CFG {
	21927284 [label="21927284  int i;...",shape=box];
	21927651 [label="21927651  y[i]=0.0;...",shape=box];
	21927651 -> _JOIN_21927652;
	21950607 [label="21950607  int k;...",shape=box];
	21950607 -> ForLoop21951433;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 21927284;
	_JOIN_21950572 [label="_JOIN_21950572None...",shape=box];
	_JOIN_21950572 -> _JOIN_21950574;
	_JOIN_21950575 [label="_JOIN_21950575None...",shape=box];
	_JOIN_21950575 -> ForLoop21951504;
	_JOIN_21950574 [label="_JOIN_21950574None...",shape=box];
	_JOIN_21950574 -> _JOIN_21950575;
	ForLoop21951507 [label="ForLoop21951507  for (ii=0; ii<=nx-1; ii=ii+512) {...",shape=box];
	ForLoop21951507 -> ForLoop21951506;
	ForLoop21951507 -> _JOIN_21951507;
	ForLoop21951506 [label="ForLoop21951506  for (i=ii; i<=min(nx-1,ii+511); i=i+1) {...",shape=box];
	ForLoop21951506 -> 21958266;
	ForLoop21951506 -> _JOIN_21951506;
	ForLoop21951504 [label="ForLoop21951504  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop21951504 -> ForLoop21951503;
	ForLoop21951504 -> _JOIN_21951504;
	ForLoop21expected=9369846271501.798828
actual=9369846271501.798828
951503 [label="ForLoop21951503  for (kk=kkk; kk<=min(ny-1,kkk+768); kk=kk+256) {...",shape=box];
	ForLoop21951503 -> 21950607;
	ForLoop21951503 -> _JOIN_21951503;
	21950224 [label="21950224  double x_copy[128];...",shape=box];
	ForLoop21951501 [label="ForLoop21951501  for (k=(min(ny-1,kk+255))-(((min(ny-1,kk+255))-(kk)+1)%29)+1; k<=min(ny-1,kk+255); k=k+1) {...",shape=box];
	ForLoop21951501 -> 21954420;
	ForLoop21951501 -> _JOIN_21951501;
	_JOIN_21951503 [label="_JOIN_21951503None...",shape=box];
	_JOIN_21951503 -> _JOIN_21951504;
	21927792 [label="21927792  register int cbv_2, cbv_3;...",shape=box];
	_JOIN_21951501 [label="_JOIN_21951501None...",shape=box];
	_JOIN_21951501 -> _JOIN_21951503;
	21953743 [label="21953743  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	_JOIN_21951506 [label="_JOIN_21951506None...",shape=box];
	_JOIN_21951506 -> _JOIN_21951507;
	_JOIN_21951504 [label="_JOIN_21951504None...",shape=box];
	_JOIN_21951504 -> 21958278;
	ForLoop21927652 [label="ForLoop21927652  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop21927652 -> 21927651;
	ForLoop21927652 -> _JOIN_21927652;
	21954420 [label="21954420  double scv_30;...",shape=box];
	_JOIN_21927652 [label="_JOIN_21927652None...",shape=box];
	_JOIN_21927652 -> 21950224;
	21927491 [label="21927491  y[i]=0.0;...",shape=box];
	ForLoop21927583 [label="ForLoop21927583  for (i=0; i<=cbv_1; i=i+11) {...",shape=box];
	ForLoop21927583 -> 21927491;
	ForLoop21927583 -> _JOIN_21927583;
	21958278 [label="21958278  tmp[i]=scv_31;...",shape=box];
	21958278 -> _JOIN_21951506;
	ForLoop21950572 [label="ForLoop21950572  for (jt=jj; jt<=min(ny-1,jj+127)-7; jt=jt+8) {...",shape=box];
	ForLoop21950572 -> 21950367;
	ForLoop21950572 -> _JOIN_21950572;
	ForLoop21950575 [label="ForLoop21950575  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop21950575 -> ForLoop21950574;
	ForLoop21950575 -> _JOIN_21950575;
	ForLoop21950574 [label="ForLoop21950574  for (jj=jjj; jj<=min(ny-1,jjj+1920); jj=jj+128) {...",shape=box];
	ForLoop21950574 -> 21950324;
	ForLoop21950574 -> _JOIN_21950574;
	_JOIN_21927583 [label="_JOIN_21927583None...",shape=box];
	_JOIN_21927583 -> 21927792;
	21950324 [label="21950324  for (j=jj; j<=min(ny-1,jj+127); j=j+1) ...",shape=box];
	21950324 -> ForLoop21950572;
	_JOIN_21951507 [label="_JOIN_21951507None...",shape=box];
	21958266 [label="21958266  double scv_31;...",shape=box];
	ForLoop21951433 [label="ForLoop21951433  for (k=kk; k<=min(ny-1,kk+255)-28; k=k+29) {...",shape=box];
	ForLoop21951433 -> 21953743;
	ForLoop21951433 -> _JOIN_21951433;
	21950367 [label="21950367  scv_31=scv_31+A[i*ny+jt]*x_copy[(jt-jj)];...",shape=box];
	_JOIN_21951433 [label="_JOIN_21951433None...",shape=box];
	_JOIN_21951433 -> ForLoop21951501;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest93.exe __orio_perftest93.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest93.exe  
{'[6, 4, 5, 4, 6, 5, 1, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.164629}
{'[6, 4, 5, 4, 6, 5, 1, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.165493}
{'[6, 4, 5, 4, 6, 5, 1, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.164682}
{'[6, 4, 5, 4, 6, 5, 1, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.164488}
{'[6, 4, 5, 4, 6, 5, 1, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.164467}
{'[6, 4, 5, 4, 6, 5, 1, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.164787}
{'[6, 4, 5, 4, 6, 5, 1, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.164529}
{'[6, 4, 5, 4, 6, 5, 1, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.164594}
{'[6, 4, 5, 4, 6, 5, 1, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.164537}
{'[6, 4, 5, 4, 6, 5, 1, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.164496}
{'[6, 4, 5, 4, 6, 5, 1, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.164489}
{'[6, 4, 5, 4, 6, 5, 1, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.164569}
{'[6, 4, 5, 4, 6, 5, 1, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.164474}
{'[6, 4, 5, 4, 6, 5, 1, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.165522}
{'[6, 4, 5, 4, 6, 5, 1, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.164843}
{'[6, 4, 5, 4, 6, 5, 1, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.164659}
{'[6, 4, 5, 4, 6, 5, 1, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.164471}
{'[6, 4, 5, 4, 6, 5, 1, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.164489}
{'[6, 4, 5, 4, 6, 5, 1, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.164474}
{'[6, 4, 5, 4, 6, 5, 1, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.164529}
{'[6, 4, 5, 4, 6, 5, 1, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.164484}
{'[6, 4, 5, 4, 6, 5, 1, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.1645}
{'[6, 4, 5, 4, 6, 5, 1, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.164448}
{'[6, 4, 5, 4, 6, 5, 1, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.164751}
{'[6, 4, 5, 4, 6, 5, 1, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.164472}
{'[6, 4, 5, 4, 6, 5, 1, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.165562}
{'[6, 4, 5, 4, 6, 5, 1, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.164495}
{'[6, 4, 5, 4, 6, 5, 1, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.164504}
{'[6, 4, 5, 4, 6, 5, 1, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.164443}
{'[6, 4, 5, 4, 6, 5, 1, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.164486}

out:
 ["{'[6, 4, 5, 4, 6, 5, 1, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.164629}", "{'[6, 4, 5, 4, 6, 5, 1, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.165493}", "{'[6, 4, 5, 4, 6, 5, 1, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.164682}", "{'[6, 4, 5, 4, 6, 5, 1, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.164488}", "{'[6, 4, 5, 4, 6, 5, 1, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.164467}", "{'[6, 4, 5, 4, 6, 5, 1, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.164787}", "{'[6, 4, 5, 4, 6, 5, 1, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.164529}", "{'[6, 4, 5, 4, 6, 5, 1, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.164594}", "{'[6, 4, 5, 4, 6, 5, 1, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.164537}", "{'[6, 4, 5, 4, 6, 5, 1, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.164496}", "{'[6, 4, 5, 4, 6, 5, 1, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.164489}", "{'[6, 4, 5, 4, 6, 5, 1, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.164569}", "{'[6, 4, 5, 4, 6, 5, 1, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.164474}", "{'[6, 4, 5, 4, 6, 5, 1, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.165522}", "{'[6, 4, 5, 4, 6, 5, 1, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.164843}", "{'[6, 4, 5, 4, 6, 5, 1, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.164659}", "{'[6, 4, 5, 4, 6, 5, 1, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.164471}", "{'[6, 4, 5, 4, 6, 5, 1, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.164489}", "{'[6, 4, 5, 4, 6, 5, 1, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.164474}", "{'[6, 4, 5, 4, 6, 5, 1, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.164529}", "{'[6, 4, 5, 4, 6, 5, 1, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.164484}", "{'[6, 4, 5, 4, 6, 5, 1, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.1645}", "{'[6, 4, 5, 4, 6, 5, 1, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.164448}", "{'[6, 4, 5, 4, 6, 5, 1, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.164751}", "{'[6, 4, 5, 4, 6, 5, 1, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.164472}", "{'[6, 4, 5, 4, 6, 5, 1, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.165562}", "{'[6, 4, 5, 4, 6, 5, 1, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.164495}", "{'[6, 4, 5, 4, 6, 5, 1, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.164504}", "{'[6, 4, 5, 4, 6, 5, 1, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.164443}", "{'[6, 4, 5, 4, 6, 5, 1, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]' : 0.164486}"]
returning from 'run': {'[6, 4, 5, 4, 6, 5, 1, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]': ([0.164629, 0.165493, 0.164682, 0.164488, 0.164467, 0.164787, 0.164529, 0.164594, 0.164537, 0.164496, 0.164489, 0.164569, 0.164474, 0.165522, 0.164843, 0.164659, 0.164471, 0.164489, 0.164474, 0.164529, 0.164484, 0.1645, 0.164448, 0.164751, 0.164472, 0.165562, 0.164495, 0.164504, 0.164443, 0.164486], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.164629, 0.165493, 0.164682, 0.164488, 0.164467, 0.164787, 0.164529, 0.164594, 0.164537, 0.164496, 0.164489, 0.164569, 0.164474, 0.165522, 0.164843, 0.164659, 0.164471, 0.164489, 0.164474, 0.164529, 0.164484, 0.1645, 0.164448, 0.164751, 0.164472, 0.165562, 0.164495, 0.164504, 0.164443, 0.164486], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[6, 4, 5, 4, 6, 5, 1, 0, 10, 0, 29, 28, 0, 1, 0, 1, 1, 0]': ([0.164629, 0.165493, 0.164682, 0.164488, 0.164467, 0.164787, 0.164529, 0.164594, 0.164537, 0.164496, 0.164489, 0.164569, 0.164474, 0.165522, 0.164843, 0.164659, 0.164471, 0.164489, 0.164474, 0.164529, 0.164484, 0.1645, 0.164448, 0.164751, 0.164472, 0.165562, 0.164495, 0.164504, 0.164443, 0.164486], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [1, 6, 1, 4, 0, 0, 16, 18, 23, 0, 0, 0, 2, 0]
Fixed Factors: {'T2_K': 5, 'T2_J': 6, 'SCR': 1, 'VEC1': 1}
Testing candidate 23: [1, 6, 1, 4, 6, 5, 0, 0, 16, 18, 23, 0, 0, 0, 2, 1, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	6
        Additions: 		4760
        Multiplications: 	2320
        Divisions: 		0
        Logical: 		0
        Reads: 			8952
        Writes: 		1442
        Comparisons:		22
        Gotos: 			0
        
digraph CFG {
	_JOIN_22222223 [label="_JOIN_22222223None...",shape=box];
	_JOIN_22222223 -> _JOIN_22222224;
	ForLoop22222221 [label="ForLoop22222221  for (k=kt; k<=min(ny-1,kk+15); k=k+1) {...",shape=box];
	ForLoop22222221 -> 22369260;
	ForLoop22222221 -> _JOIN_22222221;
	_JOIN_22222226 [label="_JOIN_22222226None...",shape=box];
	_JOIN_22222226 -> _JOIN_22222228;
	ForLoop22199538 [label="ForLoop22199538  for (j=(min(ny-1,jj+511))-(((min(ny-1,jj+511))-(jj)+1)%24)+1; j<=min(ny-1,jj+511); j=j+1) {...",shape=box];
	ForLoop22199538 -> 22244521;
	ForLoop22199538 -> _JOIN_22199538;
	22373870 [label="22373870  double scv_111;...",shape=box];
	_JOIN_22222228 [label="_JOIN_22222228None...",shape=box];
	_JOIN_22222228 -> _JOIN_22222229;
	_JOIN_22222229 [label="_JOIN_22222229None...",shape=box];
	22368549 [label="22368549  double scv_78, scv_79, scv_80, scv_81, scv_82, scv_83, scv_84, scv_85;...",shape=box];
	ForLoop21960478 [label="ForLoop21960478  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop21960478 -> 21960477;
	ForLoop21960478 -> _JOIN_21960478;
	_JOIN_21960409 [label="_JOIN_21960409None...",shape=box];
	_JOIN_21960409 -> 21960672;
	ForLoop22222224 [label="ForLoop22222224  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop22222224 -> ForLoop22222223;
	ForLoop22222224 -> _JOIN_22222224;
	22243052 [label="22243052  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	_JOIN_22221139 [label="_JOIN_22221139None...",shape=box];
	_JOIN_22221139 -> ForLoop22221207;
	ForLoop22219923 [label="ForLoop22219923  for (kt=kk; kt<=min(ny-1,kk+15)-31; kt=kt+32) {...",shape=box];
	ForLoop22219923 -> 22299854;
	ForLoop22219923 -> _JOIN_22219923;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 21959966;
	_JOIN_22199538 [label="_JOIN_22199538None...",shape=box];
	_JOIN_22199538 -> _JOIN_22199540;
	_JOIN_22221209 [label="_JOIN_22221209None...",shape=box];
	_JOIN_22221209 -> _JOIN_22221210;
	_JOIN_22222224 [label="_JOIN_22222224None...",shape=box];
	_JOIN_22222224 -> 22373882;
	_JOIN_22221207 [label="_JOIN_22221207None...",shape=box];
	_JOIN_22221207 -> _JOIN_22221209;
	_JOIN_22222182 [label="_JOIN_22222182None...",shape=box];
	_JOIN_22222182 -> ForLoop22222221;
	21960477 [label="21960477  y[i]=0.0;...",shape=box];
	21960477 -> _JOIN_21960478;
	ForLoop22221210 [label="ForLoop22221210  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop22221210 -> ForLoop22221209;
	ForLoop22221210 -> _JOIN_22221210;
	21959966 [label="21959966  int i;...",shape=box];
	21960263 [label="21960263  y[i]=0.0;...",shape=box];
	ForLoop22221139 [label="ForLoop22221139  for (j=jj; j<=min(ny-1,jj+511)-23; j=j+24) {...",shape=box];
	ForLoop22221139 -> 22220562;
	ForLoop22221139 -> _JOIN_22221139;
	ForLoop21960409 [label="ForLoop21960409  for (i=0; i<=cbv_1; i=i+17) {...",shape=box];
	ForLoop21960409 -> 21960263;
	ForLoop21960409 -> _JOIN_21960409;
	22183714 [label="22183714  int j;...",shape=box];
	_JOIN_22220431 [label="_JOIN_22220431None...",shape=box];
	_JOIN_22220431 -> _JOIN_22220433;
	ForLoop22222182 [label="ForLoop22222182  for (kt=kk; kt<=min(ny-1,kk+15)-31; kt=kt+32) {...",shape=box];
	ForLoop22222182 -> 22368549;
	ForLoop22222182 -> _JOIN_22222182;
	_JOIN_22220433 [label="_JOIN_22220433None...",shape=box];
	_JOIN_22220433 -> _JOIN_22220435;
	_JOIN_22220435 [label="_JOIN_22220435None...",shape=box];
	_JOIN_22220435 -> 22362723;
	22183494 [label="22183494  int i;...",shape=box];
	22183494 -> ForLoop22220437;
	_JOIN_22220437 [label="_JOIN_22220437None...",shape=box];
	_JOIN_22220437 -> ForLoop22222226;
	ForLoop22198947 [label="ForLoop22198947  for (j=jj; j<=min(ny-1,jj+511)-23; j=j+24) {...",shape=box];
	ForLoop22198947 -> 22243052;
	ForLoop22198947 -> _JOIN_22198947;
	22369260 [label="22369260  double scv_110;...",shape=box];
	ForLoop22220431 [label="ForLoop22220431  for (k=kt; k<=min(ny-1,kk+15); k=k+1) {...",shape=box];
	ForLoop22220431 -> 22302366;
	ForLoop22220431 -> _JOIN_22220431;
	22362705 [label="22362705  double scv_59, scv_60, scv_61, scv_62, scv_63, scv_64, scv_65, scv_66;...",shape=box];
	22373882 [label="22373882  tmp[i]=scv_111;...",shape=box];
	22373882 -> _JOIN_22222226;
	_JOIN_21960478 [label="_JOIN_21960478None...",shape=box];
	_JOIN_21960478 -> 22183461;
	_JOIN_22222221 [label="_JOIN_22222221None...",shape=box];
	_JOIN_22222221 -> _JOIN_22222223;
	_JOIN_22219923 [label="_JOIN_22219923None...",shape=box];
	_JOIN_22219923 -> ForLoop22220431;
	ForLoop22199540 [label="ForLoop22199540  for (jj=jjj; jj<=min(ny-1,jjj+1536); jj=jj+512) {...",shape=box];
	ForLoop22199540 -> 22183714;
	ForLoop22199540 -> _JOIN_22199540;
	ForLoop22199542 [label="ForLoop22199542  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop22199542 -> ForLoop22199540;
	ForLoop22199542 -> _JOIN_22199542;
	22221206 [label="22221206  scv_111=scv_111+A[i*ny+j]*x[j];...",shape=box];
	22221206 -> _JOIN_22221207;
	ForLoop22222228 [label="ForLoop22222228  for (ii=iii; ii<=min(nx-1,iii+496); ii=ii+16) {...",shape=box];
	ForLoop22222228 -> 22183494;
	ForLoop22222228 -> _JOIN_22222228;
	ForLoop22222229 [label="ForLoop22222229  for (iii=0; iii<=nx-1; iii=iii+512) {...",shape=box];
	ForLoop22222229 -> ForLoop22222228;
	ForLoop22222229 -> _JOIN_22222229;
	22244521 [label="22244521  double scv_25;...",shape=box];
	22220522 [label="22220522  int j;...",shape=box];
	22220522 -> ForLoop22221139;
	ForLoop22221207 [label="ForLoop22221207  for (j=(min(ny-1,jj+511))-(((min(ny-1,jj+511))-(jj)+1)%24)+1; j<=min(ny-1,jj+511); j=j+1) {...",shape=box];
	ForLoop22221207 -> 22221206;
	ForLoop22221207 -> _JOIN_22221207;
	22302366 [label="22302366  double scv_58;...",shape=box];
	22220562 [label="22220562  scv_111=scv_111+A[i*ny+j]*x[j];...",shape=box];
	21960672 [label="21960672  register int cbv_2, cbv_3;...",shape=box];
	ForLoop22222226 [label="ForLoop22222226  for (i=(min(nx-1,ii+15))-(((min(nx-1,ii+15))-(ii)+1)%19)+1; i<=min(nx-1,ii+15); i=i+1) {...",shape=box];
	ForLoop22222226 -> 22373870;
	ForLoop22222226 -> _JOIN_22222226;
	22183461 [label="22183461  double x_copy;...",shape=box];
	_JOIN_22221210 [label="_JOIN_22221210None...",shape=box];
	_JOIN_22221210 -> ForLoop22222224;
	_JOIN_22199540 [label="_JOIN_22199540None...",shape=box];
	_JOIN_22199540 -> _JOIN_22199542;
	ForLoop22221209 [label="ForLoop22221209  for (jj=jjj; jj<=min(ny-1,jjj+1536); jj=jj+512) {...",shape=box];
	ForLoop22221209 -> 22220522;
	ForLoop22221209 -> _JOIN_22221209;
	_JOIN_22199542 [label="_JOIN_22199542None...",shape=box];
	_JOIN_22199542 -> ForLoop22220435;
	22362723 [label="22362723  tmp[(i+12)]=scv_59;...",shape=box];
	ForLoop22222223 [label="ForLoop22222223  for (kk=kkk; kk<=min(ny-1,kkk+1008); kk=kk+16) {...",shape=box];
	ForLoop22222223 -> ForLoop22222182;
	ForLoop22222223 -> _JOIN_22222223;
	_JOIN_22198947 [label="_JOIN_22198947None...",shape=box];
	_JOIN_22198947 -> ForLoop22199538;
	ForLoop22220433 [expected=9369846271501.798828
actual=9369846271501.798828
label="ForLoop22220433  for (kk=kkk; kk<=min(ny-1,kkk+1008); kk=kk+16) {...",shape=box];
	ForLoop22220433 -> ForLoop22219923;
	ForLoop22220433 -> _JOIN_22220433;
	22299854 [label="22299854  double scv_26, scv_27, scv_28, scv_29, scv_30, scv_31, scv_32, scv_33;...",shape=box];
	ForLoop22220435 [label="ForLoop22220435  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop22220435 -> ForLoop22220433;
	ForLoop22220435 -> _JOIN_22220435;
	ForLoop22220437 [label="ForLoop22220437  for (i=ii; i<=min(nx-1,ii+15)-18; i=i+19) {...",shape=box];
	ForLoop22220437 -> 22362705;
	ForLoop22220437 -> _JOIN_22220437;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest94.exe __orio_perftest94.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest94.exe  
{'[1, 6, 1, 4, 6, 5, 0, 0, 16, 18, 23, 0, 0, 0, 2, 1, 1, 0]' : 0.155679}
{'[1, 6, 1, 4, 6, 5, 0, 0, 16, 18, 23, 0, 0, 0, 2, 1, 1, 0]' : 0.155579}
{'[1, 6, 1, 4, 6, 5, 0, 0, 16, 18, 23, 0, 0, 0, 2, 1, 1, 0]' : 0.155623}
{'[1, 6, 1, 4, 6, 5, 0, 0, 16, 18, 23, 0, 0, 0, 2, 1, 1, 0]' : 0.155594}
{'[1, 6, 1, 4, 6, 5, 0, 0, 16, 18, 23, 0, 0, 0, 2, 1, 1, 0]' : 0.155543}
{'[1, 6, 1, 4, 6, 5, 0, 0, 16, 18, 23, 0, 0, 0, 2, 1, 1, 0]' : 0.155597}
{'[1, 6, 1, 4, 6, 5, 0, 0, 16, 18, 23, 0, 0, 0, 2, 1, 1, 0]' : 0.155544}
{'[1, 6, 1, 4, 6, 5, 0, 0, 16, 18, 23, 0, 0, 0, 2, 1, 1, 0]' : 0.156582}
{'[1, 6, 1, 4, 6, 5, 0, 0, 16, 18, 23, 0, 0, 0, 2, 1, 1, 0]' : 0.155953}
{'[1, 6, 1, 4, 6, 5, 0, 0, 16, 18, 23, 0, 0, 0, 2, 1, 1, 0]' : 0.155865}
{'[1, 6, 1, 4, 6, 5, 0, 0, 16, 18, 23, 0, 0, 0, 2, 1, 1, 0]' : 0.155526}
{'[1, 6, 1, 4, 6, 5, 0, 0, 16, 18, 23, 0, 0, 0, 2, 1, 1, 0]' : 0.155611}
{'[1, 6, 1, 4, 6, 5, 0, 0, 16, 18, 23, 0, 0, 0, 2, 1, 1, 0]' : 0.155588}
{'[1, 6, 1, 4, 6, 5, 0, 0, 16, 18, 23, 0, 0, 0, 2, 1, 1, 0]' : 0.155683}
{'[1, 6, 1, 4, 6, 5, 0, 0, 16, 18, 23, 0, 0, 0, 2, 1, 1, 0]' : 0.15557}
{'[1, 6, 1, 4, 6, 5, 0, 0, 16, 18, 23, 0, 0, 0, 2, 1, 1, 0]' : 0.155605}
{'[1, 6, 1, 4, 6, 5, 0, 0, 16, 18, 23, 0, 0, 0, 2, 1, 1, 0]' : 0.155512}
{'[1, 6, 1, 4, 6, 5, 0, 0, 16, 18, 23, 0, 0, 0, 2, 1, 1, 0]' : 0.15555}
{'[1, 6, 1, 4, 6, 5, 0, 0, 16, 18, 23, 0, 0, 0, 2, 1, 1, 0]' : 0.155806}
{'[1, 6, 1, 4, 6, 5, 0, 0, 16, 18, 23, 0, 0, 0, 2, 1, 1, 0]' : 0.155596}
{'[1, 6, 1, 4, 6, 5, 0, 0, 16, 18, 23, 0, 0, 0, 2, 1, 1, 0]' : 0.156575}
{'[1, 6, 1, 4, 6, 5, 0, 0, 16, 18, 23, 0, 0, 0, 2, 1, 1, 0]' : 0.155583}
{'[1, 6, 1, 4, 6, 5, 0, 0, 16, 18, 23, 0, 0, 0, 2, 1, 1, 0]' : 0.155551}
{'[1, 6, 1, 4, 6, 5, 0, 0, 16, 18, 23, 0, 0, 0, 2, 1, 1, 0]' : 0.155543}
{'[1, 6, 1, 4, 6, 5, 0, 0, 16, 18, 23, 0, 0, 0, 2, 1, 1, 0]' : 0.155575}
{'[1, 6, 1, 4, 6, 5, 0, 0, 16, 18, 23, 0, 0, 0, 2, 1, 1, 0]' : 0.155545}
{'[1, 6, 1, 4, 6, 5, 0, 0, 16, 18, 23, 0, 0, 0, 2, 1, 1, 0]' : 0.155658}
{'[1, 6, 1, 4, 6, 5, 0, 0, 16, 18, 23, 0, 0, 0, 2, 1, 1, 0]' : 0.155575}
{'[1, 6, 1, 4, 6, 5, 0, 0, 16, 18, 23, 0, 0, 0, 2, 1, 1, 0]' : 0.156137}
{'[1, 6, 1, 4, 6, 5, 0, 0, 16, 18, 23, 0, 0, 0, 2, 1, 1, 0]' : 0.155569}

out:
 ["{'[1, 6, 1, 4, 6, 5, 0, 0, 16, 18, 23, 0, 0, 0, 2, 1, 1, 0]' : 0.155679}", "{'[1, 6, 1, 4, 6, 5, 0, 0, 16, 18, 23, 0, 0, 0, 2, 1, 1, 0]' : 0.155579}", "{'[1, 6, 1, 4, 6, 5, 0, 0, 16, 18, 23, 0, 0, 0, 2, 1, 1, 0]' : 0.155623}", "{'[1, 6, 1, 4, 6, 5, 0, 0, 16, 18, 23, 0, 0, 0, 2, 1, 1, 0]' : 0.155594}", "{'[1, 6, 1, 4, 6, 5, 0, 0, 16, 18, 23, 0, 0, 0, 2, 1, 1, 0]' : 0.155543}", "{'[1, 6, 1, 4, 6, 5, 0, 0, 16, 18, 23, 0, 0, 0, 2, 1, 1, 0]' : 0.155597}", "{'[1, 6, 1, 4, 6, 5, 0, 0, 16, 18, 23, 0, 0, 0, 2, 1, 1, 0]' : 0.155544}", "{'[1, 6, 1, 4, 6, 5, 0, 0, 16, 18, 23, 0, 0, 0, 2, 1, 1, 0]' : 0.156582}", "{'[1, 6, 1, 4, 6, 5, 0, 0, 16, 18, 23, 0, 0, 0, 2, 1, 1, 0]' : 0.155953}", "{'[1, 6, 1, 4, 6, 5, 0, 0, 16, 18, 23, 0, 0, 0, 2, 1, 1, 0]' : 0.155865}", "{'[1, 6, 1, 4, 6, 5, 0, 0, 16, 18, 23, 0, 0, 0, 2, 1, 1, 0]' : 0.155526}", "{'[1, 6, 1, 4, 6, 5, 0, 0, 16, 18, 23, 0, 0, 0, 2, 1, 1, 0]' : 0.155611}", "{'[1, 6, 1, 4, 6, 5, 0, 0, 16, 18, 23, 0, 0, 0, 2, 1, 1, 0]' : 0.155588}", "{'[1, 6, 1, 4, 6, 5, 0, 0, 16, 18, 23, 0, 0, 0, 2, 1, 1, 0]' : 0.155683}", "{'[1, 6, 1, 4, 6, 5, 0, 0, 16, 18, 23, 0, 0, 0, 2, 1, 1, 0]' : 0.15557}", "{'[1, 6, 1, 4, 6, 5, 0, 0, 16, 18, 23, 0, 0, 0, 2, 1, 1, 0]' : 0.155605}", "{'[1, 6, 1, 4, 6, 5, 0, 0, 16, 18, 23, 0, 0, 0, 2, 1, 1, 0]' : 0.155512}", "{'[1, 6, 1, 4, 6, 5, 0, 0, 16, 18, 23, 0, 0, 0, 2, 1, 1, 0]' : 0.15555}", "{'[1, 6, 1, 4, 6, 5, 0, 0, 16, 18, 23, 0, 0, 0, 2, 1, 1, 0]' : 0.155806}", "{'[1, 6, 1, 4, 6, 5, 0, 0, 16, 18, 23, 0, 0, 0, 2, 1, 1, 0]' : 0.155596}", "{'[1, 6, 1, 4, 6, 5, 0, 0, 16, 18, 23, 0, 0, 0, 2, 1, 1, 0]' : 0.156575}", "{'[1, 6, 1, 4, 6, 5, 0, 0, 16, 18, 23, 0, 0, 0, 2, 1, 1, 0]' : 0.155583}", "{'[1, 6, 1, 4, 6, 5, 0, 0, 16, 18, 23, 0, 0, 0, 2, 1, 1, 0]' : 0.155551}", "{'[1, 6, 1, 4, 6, 5, 0, 0, 16, 18, 23, 0, 0, 0, 2, 1, 1, 0]' : 0.155543}", "{'[1, 6, 1, 4, 6, 5, 0, 0, 16, 18, 23, 0, 0, 0, 2, 1, 1, 0]' : 0.155575}", "{'[1, 6, 1, 4, 6, 5, 0, 0, 16, 18, 23, 0, 0, 0, 2, 1, 1, 0]' : 0.155545}", "{'[1, 6, 1, 4, 6, 5, 0, 0, 16, 18, 23, 0, 0, 0, 2, 1, 1, 0]' : 0.155658}", "{'[1, 6, 1, 4, 6, 5, 0, 0, 16, 18, 23, 0, 0, 0, 2, 1, 1, 0]' : 0.155575}", "{'[1, 6, 1, 4, 6, 5, 0, 0, 16, 18, 23, 0, 0, 0, 2, 1, 1, 0]' : 0.156137}", "{'[1, 6, 1, 4, 6, 5, 0, 0, 16, 18, 23, 0, 0, 0, 2, 1, 1, 0]' : 0.155569}"]
returning from 'run': {'[1, 6, 1, 4, 6, 5, 0, 0, 16, 18, 23, 0, 0, 0, 2, 1, 1, 0]': ([0.155679, 0.155579, 0.155623, 0.155594, 0.155543, 0.155597, 0.155544, 0.156582, 0.155953, 0.155865, 0.155526, 0.155611, 0.155588, 0.155683, 0.15557, 0.155605, 0.155512, 0.15555, 0.155806, 0.155596, 0.156575, 0.155583, 0.155551, 0.155543, 0.155575, 0.155545, 0.155658, 0.155575, 0.156137, 0.155569], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.155679, 0.155579, 0.155623, 0.155594, 0.155543, 0.155597, 0.155544, 0.156582, 0.155953, 0.155865, 0.155526, 0.155611, 0.155588, 0.155683, 0.15557, 0.155605, 0.155512, 0.15555, 0.155806, 0.155596, 0.156575, 0.155583, 0.155551, 0.155543, 0.155575, 0.155545, 0.155658, 0.155575, 0.156137, 0.155569], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[1, 6, 1, 4, 6, 5, 0, 0, 16, 18, 23, 0, 0, 0, 2, 1, 1, 0]': ([0.155679, 0.155579, 0.155623, 0.155594, 0.155543, 0.155597, 0.155544, 0.156582, 0.155953, 0.155865, 0.155526, 0.155611, 0.155588, 0.155683, 0.15557, 0.155605, 0.155512, 0.15555, 0.155806, 0.155596, 0.156575, 0.155583, 0.155551, 0.155543, 0.155575, 0.155545, 0.155658, 0.155575, 0.156137, 0.155569], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [3, 6, 1, 6, 1, 1, 24, 26, 0, 11, 1, 1, 0, 1]
Fixed Factors: {'T2_K': 5, 'T2_J': 6, 'SCR': 1, 'VEC1': 1}
Testing candidate 24: [3, 6, 1, 6, 6, 5, 1, 1, 24, 26, 0, 11, 1, 1, 0, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	167
        Max loop nest depth: 	6
        Additions: 		5266
        Multiplications: 	1512
        Divisions: 		0
        Logical: 		0
        Reads: 			10579
        Writes: 		2167
        Comparisons:		167
        Gotos: 			0
        
digraph CFG {
	22689074 [label="22689074  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	22759547 [label="22759547  double scv_116, scv_117, scv_118, scv_119, scv_120, scv_121, scv_122, scv_123;...",shape=box];
	22927926 [label="22927926  register int cbv_49, cbv_50;...",shape=box];
	22936564 [label="22936564  register int cbv_89, cbv_90;...",shape=box];
	ForLoop22693274 [label="ForLoop22693274  for (k=kk; k<=cbv_39; k=k+12) {...",shape=box];
	ForLoop22693274 -> 22765092;
	ForLoop22693274 -> _JOIN_22693274;
	_JOIN_22692738 [label="_JOIN_22692738None...",shape=box];
	_JOIN_22692738 -> 22692770;
	22780618 [label="22780618  double scv_363, scv_364, scv_365, scv_366, scv_367, scv_368, scv_369, scv_370;...",shape=box];
	22696466 [label="22696466  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	22919476 [label="22919476  register int cbv_10, cbv_11;...",shape=box];
	22776568 [label="22776568  double scv_323;...",shape=box];
	ForLoop22702998 [label="ForLoop22702998  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop22702998 -> ForLoop22702997;
	ForLoop22702998 -> _JOIN_22702998;
	_JOIN_22701978 [label="_JOIN_22701978None...",shape=box];
	_JOIN_22701978 -> 22702010;
	_JOIN_22691506 [label="_JOIN_22691506None...",shape=box];
	_JOIN_22691506 -> 22691538;
	ForLoop22690810 [label="ForLoop22690810  for (k=kk; k<=cbv_27; k=k+12) {...",shape=box];
	ForLoop22690810 -> 22760656;
	ForLoop22690810 -> _JOIN_22690810;
	_JOIN_22686037 [label="_JOIN_22686037None...",shape=box];
	_JOIN_22686037 -> _JOIN_22686039;
	22776182 [label="22776182  double scv_311, scv_312, scv_313, scv_314, scv_315, scv_316, scv_317, scv_318;...",shape=box];
	_JOIN_22686039 [label="_JOIN_22686039None...",shape=box];
	_JOIN_22686039 -> _JOIN_22686041;
	ForLoop22687730 [label="ForLoop22687730  for (k=kk; k<=cbv_12; k=k+12) {...",shape=box];
	ForLoop22687730 -> 22755111;
	ForLoop22687730 -> _JOIN_22687730;
	_JOIN_22695202 [label="_JOIN_22695202None...",shape=box];
	_JOIN_22695202 -> 22695234;
	ForLoop22702997 [label="ForLoop22702997  for (jj=jjj; jj<=min(ny-1,jjj+1536); jj=jj+512) {...",shape=box];
	ForLoop22702997 -> 22702747;
	ForLoop22702997 -> _JOIN_22702997;
	ForLoop22688346 [label="ForLoop22688346  for (k=kk; k<=cbv_15; k=k+12) {...",shape=box];
	ForLoop22688346 -> 22756220;
	ForLoop22688346 -> _JOIN_22688346;
	22702626 [label="22702626  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	22702626 -> _JOIN_22702628;
	22924676 [label="22924676  register int cbv_34, cbv_35;...",shape=box];
	22671004 [label="22671004  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	22755111 [label="22755111  double scv_64, scv_65, scv_66, scv_67, scv_68, scv_69, scv_70, scv_71;...",shape=box];
	22737792 [label="22737792  double scv_30, scv_31, scv_32, scv_33, scv_34, scv_35, scv_36, scv_37;...",shape=box];
	ForLoop22689042 [label="ForLoop22689042  for (k=cbv_19; k<=cbv_20; k=k+1) {...",shape=box];
	ForLoop22689042 -> 22757715;
	ForLoop22689042 -> _JOIN_22689042;
	_JOIN_22688426 [label="_JOIN_22688426None...",shape=box];
	_JOIN_22688426 -> 22688458;
	22698314 [label="22698314  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop22690890 [label="ForLoop22690890  for (k=cbv_28; k<=cbv_29; k=k+1) {...",shape=box];
	ForLoop22690890 -> 22761042;
	ForLoop22690890 -> _JOIN_22690890;
	ForLoop22686037 [label="ForLoop22686037  for (jt=jj; jt<=cbv_5; jt=jt+8) {...",shape=box];
	ForLoop22686037 -> 22737792;
	ForLoop22686037 -> _JOIN_22686037;
	ForLoop22702995 [label="ForLoop22702995  for (jt=jj; jt<=cbv_87; jt=jt+8) {...",shape=box];
	ForLoop22702995 -> 22702790;
	ForLoop22702995 -> _JOIN_22702995;
	_JOIN_22703569 [label="_JOIN_22703569None...",shape=box];
	_JOIN_22703569 -> _JOIN_22703570;
	22922076 [label="22922076  register int cbv_22, cbv_23;...",shape=box];
	22853665 [label="22853665  double scv_429;...",shape=box];
	_JOIN_22677288 [label="_JOIN_22677288None...",shape=box];
	_JOIN_22677288 -> 22727079;
	22670884 [label="22670884  double x_copy[512];...",shape=box];
	ForLoop22701282 [label="ForLoop22701282  for (k=kk; k<=cbv_78; k=k+12) {...",shape=box];
	ForLoop22701282 -> 22779509;
	ForLoop22701282 -> _JOIN_22701282;
	ForLoop22698202 [label="ForLoop22698202  for (k=kk; k<=cbv_63; k=k+12) {...",shape=box];
	ForLoop22698202 -> 22773964;
	ForLoop22698202 -> _JOIN_22698202;
	22716525 [label="22716525  double scv_21;...",shape=box];
	22773964 [label="22773964  double scv_285, scv_286, scv_287, scv_288, scv_289, scv_290, scv_291, scv_292;...",shape=box];
	ForLoop22692042 [label="ForLoop22692042  for (k=kk; k<=cbv_33; k=k+12) {...",shape=box];
	ForLoop22692042 -> 22762874;
	ForLoop22692042 -> _JOIN_22692042;
	_JOIN_22677287 [label="_JOIN_22677287None...",shape=box];
	_JOIN_22677287 -> _JOIN_22677288;
	_JOIN_22700666 [label="_JOIN_22700666None...",shape=box];
	_JOIN_22700666 -> 22933776;
	_JOIN_22694586 [label="_JOIN_22694586None...",shape=box];
	_JOIN_22694586 -> 22694618;
	ForLoop22702514 [label="ForLoop22702514  for (k=kk; k<=cbv_84; k=k+12) {...",shape=box];
	ForLoop22702514 -> 22781727;
	ForLoop22702514 -> _JOIN_22702514;
	ForLoop22703461 [label="ForLoop22703461  for (k=kk; k<=cbv_88; k=k+12) {...",shape=box];
	ForLoop22703461 -> 22850892;
	ForLoop22703461 -> _JOIN_22703461;
	22764369 [label="22764369  double scv_180;...",shape=box];
	22930526 [label="22930526  register int cbv_61, cbv_62;...",shape=box];
	22692154 [label="22692154  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop22694506 [label="ForLoop22694506  for (k=kk; k<=cbv_45; k=k+12) {...",shape=box];
	ForLoop22694506 -> 22767310;
	ForLoop22694506 -> _JOIN_22694506;
	22422886 [label="22422886  y[i]=0.0;...",shape=box];
	22422886 -> _JOIN_22422887;
	_JOIN_22693354 [label="_JOIN_22693354None...",shape=box];
	_JOIN_22693354 -> 22693386;
	ForLoop22700130 [label="ForLoop22700130  for (k=cbv_73; k<=cbv_74; k=k+1) {...",shape=box];
	ForLoop22700130 -> 22777677;
	ForLoop22700130 -> _JOIN_22700130;
	_JOIN_22687730 [label="_JOIN_22687730None...",shape=box];
	_JOIN_22687730 -> 22920126;
	22778400 [label="22778400  double scv_337, scv_338, scv_339, scv_340, scv_341, scv_342, scv_343, scv_344;...",shape=box];
	_JOIN_22700050 [label="_JOIN_22700050None...",shape=box];
	_JOIN_22700050 -> 22933126;
	22771746 [label="22771746  double scv_259, scv_260, scv_261, scv_262, scv_263, scv_264, scv_265, scv_266;...",shape=box];
	22706802 [label="22706802  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	ForLoop22422818 [label="ForLoop22422818  for (i=0; i<=cbv_1; i=i+25) {...",shape=box];
	ForLoop22422818 -> 22422600;
	ForLoop22422818 -> _JOIN_22422818;
	_JOIN_22694506 [label="_JOIN_22694506None...",shape=box];
	_JOIN_22694506 -> 22927276;
	ForLoop22702594 [label="ForLoop22702594  for (k=cbv_85; k<=cbv_86; k=k+1) {...",shape=box];
	ForLoop22702594 -> 22782113;
	ForLoop22702594 -> _JOIN_22702594;
	22703060 [label="22703060  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	_JOIN_22422887 [label="_JOIN_22422887None...",shape=box];
	_JOIN_22422887 -> 22670884;
	22920776 [label="22920776  register int cbv_16, cbv_17;...",shape=box];
	22753279 [label="22753279  double scv_50;...",shape=box];
	ForLoop22694586 [label="ForLoop22694586  for (k=cbv_46; k<=cbv_47; k=k+1) {...",shape=box];
	ForLoop22694586 -> 22767696;
	ForLoop22694586 -> _JOIN_22694586;
	ForLoop22677253 [label="ForLoop22677253  for (k=cbv_3; k<=cbv_4; k=k+1) {...",shape=box];
	ForLoop22677253 -> 22716525;
	ForLoop22677253 -> _JOIN_22677253;
	_JOIN_22701898 [label="_JOIN_22701898None...",shape=box];
	_JOIN_22701898 -> 22935076;
	22768419 [label="22768419  double scv_220, scv_221, scv_222, scv_223, scv_224, scv_225, scv_226, scv_227;...",shape=box];
	ForLoop22699514 [label="ForLoop22699514  for (k=cbv_70; k<=cbv_71; k=k+1) {...",shape=box];
	ForLoop22699514 -> 22776568;
	ForLoop22699514 -> _JOIN_22699514;
	22702790 [label="22702790  scv_429=scv_429+A[i*ny+jt]*x_copy[(jt-jj)];...",shape=box];
	22762874 [label="22762874  double scv_155, scv_156, scv_157, scv_158, scv_159, scv_160, scv_161, scv_162;...",shape=box];
	22777291 [label="22777291  double scv_324, scv_325, scv_326, scv_327, scv_328, scv_329, scv_330, scv_331;...",shape=box];
	22769528 [label="22769528  double scv_233, scv_234, scv_235, scv_236, scv_237, scv_238, scv_239, scv_240;...",shape=box];
	ForLoop22690274 [label="ForLoop22690274  for (k=cbv_25; k<=cbv_26; k=k+1) {...",shape=box];
	ForLoop22690274 -> 22759933;
	ForLoop22690274 -> _JOIN_22690274;
	_JOIN_22677290 [label="_JOIN_22677290None...",shape=box];
	_JOIN_22677290 -> 22677291;
	22422600 [label="22422600  y[i]=0.0;...",shape=box];
	_JOIN_22695818 [label="_JOIN_22695818None...",shape=box];
	_JOIN_22695818 -> 22695850;
	22677613 [label="22677613  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	22922726 [label="22922726  register int cbv_25, cbv_26;...",shape=box];
	22690306 [label="22690306  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop22422887 [label="ForLoop22422887  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop22422887 -> 22422886;
	ForLoop22422887 -> _JOIN_22422887;
	22935076 [label="22935076  register int cbv_82, cbv_83;...",shape=box];
	22758824 [label="22758824  double scv_115;...",shape=box];
	ForLoop22686504 [label="ForLoop22686504  for (k=kk; k<=cbv_6; k=k+12) {...",shape=box];
	ForLoop22686504 -> 22752902;
	ForLoop22686504 -> _JOIN_22686504;
	ForLoop22687114 [label="ForLoop22687114  for (k=kk; k<=cbv_9; k=k+12) {...",shape=box];
	ForLoop22687114 -> 22754002;
	ForLoop22687114 -> _JOIN_22687114;
	_JOIN_22422818 [label="_JOIN_22422818None...",shape=box];
	_JOIN_22422818 -> 22423153;
	_JOIN_22696434 [label="_JOIN_22696434None...",shape=box];
	_JOIN_22696434 -> 22696466;
	_JOIN_22702594 [label="_JOIN_22702594None...",shape=box];
	_JOIN_22702594 -> 22702626;
	22921426 [label="22921426  register int cbv_19, cbv_20;...",shape=box];
	22677291 [label="22677291  int i;...",shape=box];
	22677291 -> ForLoop22702632;
	22715685 [label="22715685  double scv_9, scv_10, scv_11, scv_12, scv_13, scv_14, scv_15, scv_16;...",shape=box];
	ForLoop22673338 [label="ForLoop22673338  for (jt=jj; jt<=cbv_1; jt=jt+8) {...",shape=box];
	ForLoop22673338 -> 22706802;
	ForLoop22673338 -> _JOIN_22673338;
	ForLoop22687810 [label="ForLoop22687810  for (k=cbv_13; k<=cbv_14; k=k+1) {...",shape=box];
	ForLoop22687810 -> 22755497;
	ForLoop22687810 -> _JOIN_22687810;
	22772132 [label="22772132  double scv_271;...",shape=box];
	22697698 [label="22697698  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	22689690 [label="22689690  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	22701394 [label="22701394  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop22693890 [label="ForLoop22693890  for (k=kk; k<=cbv_42; k=k+12) {...",shape=box];
	ForLoop22693890 -> 22766201;
	ForLoop22693890 -> _JOIN_22693890;
	22766587 [label="22766587  double scv_206;...",shape=box];
	22781727 [label="22781727  double scv_376, scv_377, scv_378, scv_379, scv_380, scv_381, scv_382, scv_383;...",shape=box];
	_JOIN_22702514 [label="_JOIN_22702514None...",shape=box];
	_JOIN_22702514 -> 22935726;
	ForLoop22700746 [label="ForLoop22700746  for (k=cbv_76; k<=cbv_77; k=k+1) {...",shape=box];
	ForLoop22700746 -> 22778786;
	ForLoop22700746 -> _JOIN_22700746;
	22772855 [label="22772855  double scv_272, scv_273, scv_274, scv_275, scv_276, scv_277, scv_278, scv_279;...",shape=box];
	_JOIN_22687810 [label="_JOIN_22687810None...",shape=box];
	_JOIN_22687810 -> 22687842;
	_JOIN_22693890 [label="_JOIN_22693890None...",shape=box];
	_JOIN_22693890 -> 22926626;
	22765478 [label="22765478  double scv_193;...",shape=box];
	22754002 [label="22754002  double scv_51, scv_52, scv_53, scv_54, scv_55, scv_56, scv_57, scv_58;...",shape=box];
	22775073 [label="22775073  double scv_298, scv_299, scv_300, scv_301, scv_302, scv_303, scv_304, scv_305;...",shape=box];
	22933126 [label="22933126  register int cbv_73, cbv_74;...",shape=box];
	_JOIN_22677253 [label="_JOIN_22677253None...",shape=box];
	_JOIN_22677253 -> 22677285;
	22673403 [label="22673403  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop22686039 [label="ForLoop22686039  for (jj=jjj; jj<=min(ny-1,jjj+1536); jj=jj+512) {...",shape=box];
	ForLoop22686039 -> 22677613;
	ForLoop22686039 -> _JOIN_22686039;
	22782113 [label="22782113  double scv_388;...",shape=box];
	22693386 [label="22693386  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	_JOIN_22686578 [label="_JOIN_22686578None...",shape=box];
	_JOIN_22686578 -> 22686610;
	22687226 [label="22687226  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop22700666 [label="ForLoop22700666  for (k=kk; k<=cbv_75; k=k+12) {...",shape=box];
	ForLoop22700666 -> 22778400;
	ForLoop22700666 -> _JOIN_22700666;
	ForLoop22697666 [label="ForLoop22697666  for (k=cbv_61; k<=cbv_62; k=k+1) {...",shape=box];
	ForLoop22697666 -> 22773241;
	ForLoop22697666 -> _JOIN_22697666;
	22924026 [label="22924026  register int cbv_31, cbv_32;...",shape=box];
	22925326 [label="22925326  register int cbv_37, cbv_38;...",shape=box];
	ForLoop22693354 [label="ForLoop22693354  for (k=cbv_40; k<=cbv_41; k=k+1) {...",shape=box];
	ForLoop22693354 -> 22765478;
	ForLoop22693354 -> _JOIN_22693354;
	_JOIN_22692042 [label="_JOIN_22692042None...",shape=box];
	_JOIN_22692042 -> 22924676;
	22757329 [label="22757329  double scv_90, scv_91, scv_92, scv_93, scv_94, scv_95, scv_96, scv_97;...",shape=box];
	_JOIN_22673338 [label="_JOIN_22673338None...",shape=box];
	_JOIN_22673338 -> _JOIN_22673340;
	_JOIN_22697050 [label="_JOIN_22697050None...",shape=box];
	_JOIN_22697050 -> 22697082;
	22763983 [label="22763983  double scv_168, scv_169, scv_170, scv_171, scv_172, scv_173, scv_174, scv_175;...",shape=box];
	ForLoop22692658 [label="ForLoop22692658  for (k=kk; k<=cbv_36; k=k+12) {...",shape=box];
	ForLoop22692658 -> 22763983;
	ForLoop22692658 -> _JOIN_22692658;
	ForLoop22703572 [label="ForLoop22703572  for (i=(min(nx-1,ii+63))-(((min(nx-1,ii+63))-(it)+1)%27)+1; i<=min(nx-1,ii+63); i=i+1) {...",shape=box];
	ForLoop22703572 -> 22853665;
	ForLoop22703572 -> _JOIN_22703572;
	22703567 [label="22703567  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	22703567 -> _JOIN_22703569;
	ForLoop22703575 [label="ForLoop22703575  for (ii=iii; ii<=min(nx-1,iii+1984); ii=ii+64) {...",shape=box];
	ForLoop22703575 -> ForLoop22677290;
	ForLoop22703575 -> _JOIN_22703575;
	ForLoop22703576 [label="ForLoop22703576  for (iii=0; iii<=nx-1; iii=iii+2048) {...",shape=box];
	ForLoop22703576 -> ForLoop22703575;
	ForLoop22703576 -> _JOIN_22703576;
	22759933 [label="22759933  double scv_128;...",shape=box];
	22760656 [label="22760656  double scv_129, scv_130, scv_131, scv_132, scv_133, scv_134, scv_135, scv_136;...",shape=box];
	ForLoop22673341 [label="ForLoop22673341  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop22673341 -> ForLoop22673340;
	ForLoop22673341 -> _JOIN_22673341;
	ForLoop22673340 [label="ForLoop22673340  for (jj=jjj; jj<=min(ny-1,jjj+1536); jj=jj+512) {...",shape=box];
	ForLoop22673340 -> 22671004;
	ForLoop22673340 -> _JOIN_22673340;
	22761042 [label="22761042  double scv_141;...",shape=box];
	ForLoop22703570 [label="ForLoop22703570  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop22703570 -> ForLoop22703569;
	ForLoop22703570 -> _JOIN_22703570;
	_JOIN_22703576 [label="_JOIN_22703576None...",shape=box];
	_JOIN_22703570 [label="_JOIN_22703570None...",shape=box];
	_JOIN_22703570 -> 22853677;
	_JOIN_22703572 [label="_JOIN_22703572None...",shape=box];
	_JOIN_22703572 -> _JOIN_22703575;
	ForLoop22697586 [label="ForLoop22697586  for (k=kk; k<=cbv_60; k=k+12) {...",shape=box];
	ForLoop22697586 -> 22772855;
	ForLoop22697586 -> _JOIN_22697586;
	_JOIN_22693274 [label="_JOIN_22693274None...",shape=box];
	_JOIN_22693274 -> 22925976;
	22765092 [label="22765092  double scv_181, scv_182, scv_183, scv_184, scv_185, scv_186, scv_187, scv_188;...",shape=box];
	22754388 [label="22754388  double scv_63;...",shape=box];
	ForLoop22696970 [label="ForLoop22696970  for (k=kk; k<=cbv_57; k=k+12) {...",shape=box];
	ForLoop22696970 -> 22771746;
	ForLoop22696970 -> _JOIN_22696970;
	ForLoop22687194 [label="ForLoop22687194  for (k=cbv_10; k<=cbv_11; k=k+1) {...",shape=box];
	ForLoop22687194 -> 22754388;
	ForLoop22687194 -> _JOIN_22687194;
	_JOIN_22673341 [label="_JOIN_22673341None...",shape=box];
	_JOIN_22673341 -> ForLoop22677288;
	22755497 [label="22755497  double scv_76;...",shape=box];
	22686103 [label="22686103  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	22918826 [label="22918826  register int cbv_7, cbv_8;...",shape=box];
	22778786 [label="22778786  double scv_349;...",shape=box];
	_JOIN_22698282 [label="_JOIN_22698282None...",shape=box];
	_JOIN_22698282 -> 22698314;
	22934426 [label="22934426  register int cbv_79, cbv_80;...",shape=box];
	22763260 [label="22763260  double scv_167;...",shape=box];
	22727079 [label="22727079  tmp[it]=scv_22;...",shape=box];
	22422183 [label="22422183  int i;...",shape=box];
	22779509 [label="22779509  double scv_350, scv_351, scv_352, scv_353, scv_354, scv_355, scv_356, scv_357;...",shape=box];
	22932476 [label="22932476  register int cbv_70, cbv_71;...",shape=box];
	22697082 [label="22697082  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop22686041 [label="ForLoop22686041  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop22686041 -> ForLoop22686039;
	ForLoop22686041 -> _JOIN_22686041;
	_JOIN_22702632 [label="_JOIN_22702632None...",shape=box];
	_JOIN_22702632 -> ForLoop22703572;
	22926626 [label="22926626  register int cbv_43, cbv_44;...",shape=box];
	_JOIN_22696354 [label="_JOIN_22696354None...",shape=box];
	_JOIN_22696354 -> 22929226;
	22929876 [label="22929876  register int cbv_58, cbv_59;...",shape=box];
	ForLoop22703569 [label="ForLoop22703569  for (kk=kkk; kk<=min(ny-1,kkk+1008); kk=kk+16) {...",shape=box];
	ForLoop22703569 -> 22703060;
	ForLoop22703569 -> _JOIN_22703569;
	_JOIN_22690890 [label="_JOIN_22690890None...",shape=box];
	_JOIN_22690890 -> 22690922;
	ForLoop22697050 [label="ForLoop22697050  for (k=cbv_58; k<=cbv_59; k=k+1) {...",shape=box];
	ForLoop22697050 -> 22772132;
	ForLoop22697050 -> _JOIN_22697050;
	22847993 [label="22847993  double scv_389, scv_390, scv_391, scv_392, scv_393, scv_394, scv_395, scv_396;...",shape=box];
	22770637 [label="22770637  double scv_246, scv_247, scv_248, scv_249, scv_250, scv_251, scv_252, scv_253;...",shape=box];
	ForLoop22696354 [label="ForLoop22696354  for (k=kk; k<=cbv_54; k=k+12) {...",shape=box];
	ForLoop22696354 -> 22770637;
	ForLoop22696354 -> _JOIN_22696354;
	ForLoop22696434 [label="ForLoop22696434  for (k=cbv_55; k<=cbv_56; k=k+1) {...",shape=box];
	ForLoop22696434 -> 22771023;
	ForLoop22696434 -> _JOIN_22696434;
	ForLoop22701898 [label="ForLoop22701898  for (k=kk; k<=cbv_81; k=k+12) {...",shape=box];
	ForLoop22701898 -> 22780618;
	ForLoop22701898 -> _JOIN_22701898;
	ForLoop22691506 [label="ForLoop22691506  for (k=cbv_31; k<=cbv_32; k=k+1) {...",shape=box];
	ForLoop22691506 -> 22762151;
	ForLoop22691506 -> _JOIN_22691506;
	ForLoop22691426 [label="ForLoop22691426  for (k=kk; k<=cbv_30; k=k+12) {...",shape=box];
	ForLoop22691426 -> 22761765;
	ForLoop22691426 -> _JOIN_22691426;
	ForLoop22676954 [label="ForLoop22676954  for (k=kk; k<=cbv_2; k=k+12) {...",shape=box];
	ForLoop22676954 -> 22715685;
	ForLoop22676954 -> _JOIN_22676954;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 22422183;
	_JOIN_22689658 [label="_JOIN_22689658None...",shape=box];
	_JOIN_22689658 -> 22689690;
	22692770 [label="22692770  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	22700778 [label="22700778  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	_JOIN_22690810 [label="_JOIN_22690810None...",shape=box];
	_JOIN_22690810 -> 22923376;
	ForLoop22693970 [label="ForLoop22693970  for (k=cbv_43; k<=cbv_44; k=k+1) {...",shape=box];
	ForLoop22693970 -> 22766587;
	ForLoop22693970 -> _JOIN_22693970;
	22779895 [label="22779895  double scv_362;...",shape=box];
	22927276 [label="22927276  register int cbv_46, cbv_47;...",shape=box];
	_JOIN_22691426 [label="_JOIN_22691426None...",shape=box];
	_JOIN_22691426 -> 22924026;
	22700162 [label="22700162  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	_JOIN_22695738 [label="_JOIN_22695738None...",shape=box];
	_JOIN_22695738 -> 22928576;
	22775459 [label="22775459  double scv_310;...",shape=box];
	22756606 [label="22756606  double scv_89;...",shape=box];
	_JOIN_22688346 [label="_JOIN_22688346None...",shape=box];
	_JOIN_22688346 -> 22920776;
	_JOIN_22699514 [label="_JOIN_22699514None...",shape=box];
	_JOIN_22699514 -> 22699546;
	22702747 [label="22702747  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	22695850 [label="22695850  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	_JOIN_22697666 [label="_JOIN_22697666None...",shape=box];
	_JOIN_22697666 -> 22697698;
	22929226 [label="22929226  register int cbv_55, cbv_56;...",shape=box];
	22931826 [label="22931826  register int cbv_67, cbv_68;...",shape=box];
	22935726 [label="22935726  register int cbv_85, cbv_86;...",shape=box];
	22767696 [label="22767696  double scv_219;...",shape=box];
	_JOIN_22703575 [label="_JOIN_22703575None...",shape=box];
	_JOIN_22703575 -> _JOIN_22703576;
	22691538 [label="22691538  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	22773241 [label="22773241  double scv_284;...",shape=box];
	22694618 [label="22694618  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	_JOIN_22698202 [label="_JOIN_22698202None...",shape=box];
	_JOIN_22698202 -> 22931176;
	22702010 [label="22702010  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	_JOIN_22697586 [label="_JOIN_22697586None...",shape=box];
	_JOIN_22697586 -> 22930526;
	22928576 [label="22928576  register int cbv_52, cbv_53;...",shape=box];
	ForLoop22702628 [label="ForLoop22702628  for (kk=kkk; kk<=min(ny-1,kkk+1008); kk=kk+16) {...",shape=box];
	ForLoop22702628 -> 22686103;
	ForLoop22702628 -> _JOIN_22702628;
	ForLoop22692122 [label="ForLoop22692122  for (k=cbv_34; k<=cbv_35; k=k+1) {...",shape=box];
	ForLoop22692122 -> 22763260;
	ForLoop22692122 -> _JOIN_22692122;
	_JOIN_22686041 [label="_JOIN_22686041None...",shape=box];
	_JOIN_22686041 -> ForLoop22702630;
	22690922 [label="22690922  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop22698898 [label="ForLoop22698898  for (k=cbv_67; k<=cbv_68; k=k+1) {...",shape=box];
	ForLoop22698898 -> 22775459;
	ForLoop22698898 -> _JOIN_22698898;
	22688458 [label="22688458  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	22699546 [label="22699546  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop22698818 [label="ForLoop22698818  for (k=kk; k<=cbv_66; k=k+12) {...",shape=box];
	ForLoop22698818 -> 22775073;
	ForLoop22698818 -> _JOIN_22698818;
	22694002 [label="22694002  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	22761765 [label="22761765  double scv_142, scv_143, scv_144, scv_145, scv_146, scv_147, scv_148, scv_149;...",shape=box];
	22931176 [label="22931176  register int cbv_64, cbv_65;...",shape=box];
	22756220 [label="22756220  double scv_77, scv_78, scv_79, scv_80, scv_81, scv_82, scv_83, scv_84;...",shape=box];
	ForLoop22695818 [label="ForLoop22695818  for (k=cbv_52; k<=cbv_53; k=k+1) {...",shape=box];
	ForLoop22695818 -> 22769914;
	ForLoop22695818 -> _JOIN_22695818;
	ForLoop22677290 [label="ForLoop22677290  for (it=ii; it<=min(nx-1,ii+63)-7; it=it+8) {...",shape=box];
	ForLoop22677290 -> 22727067;
	ForLoop22677290 -> _JOIN_22677290;
	_JOIN_22687114 [label="_JOIN_22687114None...",shape=box];
	_JOIN_22687114 -> 22919476;
	22925976 [label="22925976  register int cbv_40, cbv_41;...",shape=box];
	_JOIN_22689042 [label="_JOIN_22689042None...",shape=box];
	_JOIN_22689042 -> 22689074;
	22920126 [label="22920126  register int cbv_13, cbv_14;...",shape=box];
	22686610 [label="22686610  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	_JOIN_22690274 [label="_JOIN_22690274None...",shape=box];
	_JOIN_22690274 -> 22690306;
	22774350 [label="22774350  double scv_297;...",shape=box];
	22848011 [label="22848011  tmp[(i+20)]=scv_389;...",shape=box];
	_JOIN_22695122 [label="_JOIN_22695122None...",shape=box];
	_JOIN_22695122 -> 22927926;
	ForLoop22688426 [label="ForLoop22688426  for (k=cbv_16; k<=cbv_17; k=k+1) {...",shape=box];
	ForLoop22688426 -> 22756606;
	ForLoop22688426 -> _JOIN_22688426;
	22767310 [label="22767310  double scv_207, scv_208, scv_209, scv_210, scv_211, scv_212, scv_213, scv_214;...",shape=box];
	22777677 [label="22777677  double scv_336;...",shape=box];
	ForLoop22701362 [label="ForLoop22701362  for (k=cbv_79; k<=cbv_80; k=k+1) {...",shape=box];
	ForLoop22701362 -> 22779895;
	ForLoop22701362 -> _JOIN_22701362;
	_JOIN_22686504 [label="_JOIN_22686504None...",shape=box];
	_JOIN_22686504 -> 22918826;
	_JOIN_22700130 [label="_JOIN_22700130None...",shape=box];
	_JOIN_22700130 -> 22700162;
	ForLoop22700050 [label="ForLoop22700050  for (k=kk; k<=cbv_72; k=k+12) {...",shape=box];
	ForLoop22700050 -> 22777291;
	ForLoop22700050 -> _JOIN_22700050;
	22850892 [label="22850892  double scv_416, scv_417, scv_418, scv_419, scv_420, scv_421, scv_422, scv_423;...",shape=box];
	_JOIN_22689578 [label="_JOIN_22689578None...",shape=box];
	_JOIN_22689578 -> 22922076;
	ForLoop22701978 [label="ForLoop22701978  for (k=cbv_82; k<=cbv_83; k=k+1) {...",shape=box];
	ForLoop22701978 -> 22781004;
	ForLoop22701978 -> _JOIN_22701978;
	22698930 [label="22698930  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	_JOIN_22692658 [label="_JOIN_22692658None...",shape=box];
	_JOIN_22692658 -> 22925326;
	22687842 [label="22687842  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop22686578 [label="ForLoop22686578  for (k=cbv_7; k<=cbv_8; k=k+1) {...",shape=box];
	ForLoop22686578 -> 22753279;
	ForLoop22686578 -> _JOIN_22686578;
	22933776 [label="22933776  register int cbv_76, cbv_77;...",shape=box];
	ForLoop22702632 [label="ForLoop22702632  for (i=it; i<=min(nx-1,ii+63)-26; i=i+27) {...",shape=box];
	ForLoop22702632 -> 22847993;
	ForLoop22702632 -> _JOIN_22702632;
	ForLoop22695122 [label="ForLoop22695122  for (k=kk; k<=cbv_48; k=k+12) {...",shape=box];
	ForLoop22695122 -> 22768419;
	ForLoop22695122 -> _JOIN_22695122;
	_JOIN_22700746 [label="_JOIN_22700746None...",shape=box];
	_JOIN_22700746 -> 22700778;
	ForLoop22677288 [label="ForLoop22677288  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop22677288 -> ForLoop22677287;
	ForLoop22677288 -> _JOIN_22677288;
	_JOIN_22701282 [label="_JOIN_22701282None...",shape=box];
	_JOIN_22701282 -> 22934426;
	ForLoop22688962 [label="ForLoop22688962  for (k=kk; k<=cbv_18; k=k+12) {...",shape=box];
	ForLoop22688962 -> 22757329;
	ForLoop22688962 -> _JOIN_22688962;
	_JOIN_22698818 [label="_JOIN_22698818None...",shape=box];
	_JOIN_22698818 -> 22931826;
	ForLoop22702630 [label="ForLoop22702630  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop22702630 -> ForLoop22702628;
	ForLoop22702630 -> _JOIN_22702630;
	22758438 [label="22758438  double scv_103, scv_104, scv_105, scv_106, scv_107, scv_108, scv_109, scv_110;...",shape=box];
	ForLoop22677287 [label="ForLoop22677287  for (kk=kkk; kk<=min(ny-1,kkk+1008); kk=kk+16) {...",shape=box];
	ForLoop22677287 -> 22673403;
	ForLoop22677287 -> _JOIN_22677287;
	22423153 [label="22423153  register int cbv_2, cbv_3;...",shape=box];
	ForLoop22689658 [label="ForLoop22689658  for (k=cbv_22; k<=cbv_23; k=k+1) {...",shape=box];
	ForLoop22689658 -> 22758824;
	ForLoop22689658 -> _JOIN_22689658;
	ForLoop22695202 [label="ForLoop22695202  for (k=cbv_49; k<=cbv_50; k=k+1) {...",shape=box];
	ForLoop22695202 -> 22768805;
	ForLoop22695202 -> _JOIN_22695202;
	_JOIN_22702997 [label="_JOIN_22702997None...",shape=box];
	_JOIN_22702997 -> _JOIN_22702998;
	_JOIN_22673340 [label="_JOIN_22673340None...",shape=box];
	_JOIN_22673340 -> _JOIN_22673341;
	22757715 [label="22757715  double scv_102;...",shape=box];
	22766201 [label="22766201  double scv_194, scv_195, scv_196, scv_197, scv_198, scv_199, scv_200, scv_201;...",shape=box];
	_JOIN_22702998 [label="_JOIN_22702998None...",shape=box];
	_JOIN_22702998 -> ForLoop22703570;
	_JOIN_22703535 [label="_JOIN_22703535None...",shape=box];
	_JOIN_22703535 -> 22703567;
	ForLoop22703535 [label="ForLoop22703535  for (k=cbv_89; k<=cbv_90; k=k+1) {...",shape=box];
	ForLoop22703535 -> 22851269;
	ForLoop22703535 -> _JOIN_22703535;
	_JOIN_22702628 [label="_JOIN_22702628None...",shape=box];
	_JOIN_22702628 -> _JOIN_22702630;
	ForLoop22695738 [label="ForLoop22695738  for (k=kk; k<=cbv_51; k=k+12) {...",shape=box];
	ForLoop22695738 -> 22769528;
	ForLoop22695738 -> _JOIN_22695738;
	_JOIN_22701362 [label="_JOIN_22701362None...",shape=box];
	_JOIN_22701362 -> 22701394;
	22771023 [label="22771023  double scv_258;...",shape=box];
	ForLoop22692738 [label="ForLoop22692738  for (k=cbv_37; k<=cbv_38; k=k+1) {...",shape=box];
	ForLoop22692738 -> 22764369;
	ForLoop22692738 -> _JOIN_22692738;
	ForLoop22698282 [label="ForLoop22698282  for (k=cbv_64; k<=cbv_65; k=k+1) {...",shape=box];
	ForLoop22698282 -> 22774350;
	ForLoop22698282 -> _JOIN_22698282;
	22769914 [label="22769914  double scv_245;...",shape=box];
	_JOIN_22696970 [label="_JOIN_22696970None...",shape=box];
	_JOIN_22696970 -> 22929876;
	22781004 [label="22781004  double scv_375;...",shape=box];
	_JOIN_22688962 [label="_JOIN_22688962None...",shape=box];
	_JOIN_22688962 -> 22921426;
	_JOIN_22687194 [label="_JOIN_22687194None...",shape=box];
	_JOIN_22687194 -> 22expected=9369846271501.798828
actual=9369846271501.798828
687226;
	_JOIN_22690194 [label="_JOIN_22690194None...",shape=box];
	_JOIN_22690194 -> 22922726;
	22851269 [label="22851269  double scv_428;...",shape=box];
	_JOIN_22703461 [label="_JOIN_22703461None...",shape=box];
	_JOIN_22703461 -> 22936564;
	_JOIN_22693970 [label="_JOIN_22693970None...",shape=box];
	_JOIN_22693970 -> 22694002;
	_JOIN_22692122 [label="_JOIN_22692122None...",shape=box];
	_JOIN_22692122 -> 22692154;
	ForLoop22699434 [label="ForLoop22699434  for (k=kk; k<=cbv_69; k=k+12) {...",shape=box];
	ForLoop22699434 -> 22776182;
	ForLoop22699434 -> _JOIN_22699434;
	_JOIN_22702995 [label="_JOIN_22702995None...",shape=box];
	_JOIN_22702995 -> _JOIN_22702997;
	22677285 [label="22677285  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	22677285 -> _JOIN_22677287;
	ForLoop22690194 [label="ForLoop22690194  for (k=kk; k<=cbv_24; k=k+12) {...",shape=box];
	ForLoop22690194 -> 22759547;
	ForLoop22690194 -> _JOIN_22690194;
	22727067 [label="22727067  double scv_22, scv_23, scv_24, scv_25, scv_26, scv_27, scv_28, scv_29;...",shape=box];
	22853677 [label="22853677  tmp[i]=scv_429;...",shape=box];
	22853677 -> _JOIN_22703572;
	22762151 [label="22762151  double scv_154;...",shape=box];
	_JOIN_22698898 [label="_JOIN_22698898None...",shape=box];
	_JOIN_22698898 -> 22698930;
	_JOIN_22699434 [label="_JOIN_22699434None...",shape=box];
	_JOIN_22699434 -> 22932476;
	_JOIN_22676954 [label="_JOIN_22676954None...",shape=box];
	_JOIN_22676954 -> 22914069;
	22923376 [label="22923376  register int cbv_28, cbv_29;...",shape=box];
	22752902 [label="22752902  double scv_38, scv_39, scv_40, scv_41, scv_42, scv_43, scv_44, scv_45;...",shape=box];
	22695234 [label="22695234  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop22689578 [label="ForLoop22689578  for (k=kk; k<=cbv_21; k=k+12) {...",shape=box];
	ForLoop22689578 -> 22758438;
	ForLoop22689578 -> _JOIN_22689578;
	22914069 [label="22914069  register int cbv_3, cbv_4;...",shape=box];
	22768805 [label="22768805  double scv_232;...",shape=box];
	_JOIN_22702630 [label="_JOIN_22702630None...",shape=box];
	_JOIN_22702630 -> 22848011;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest95.exe __orio_perftest95.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest95.exe  
{'[3, 6, 1, 6, 6, 5, 1, 1, 24, 26, 0, 11, 1, 1, 0, 1, 1, 1]' : 0.0929198}
{'[3, 6, 1, 6, 6, 5, 1, 1, 24, 26, 0, 11, 1, 1, 0, 1, 1, 1]' : 0.0923619}
{'[3, 6, 1, 6, 6, 5, 1, 1, 24, 26, 0, 11, 1, 1, 0, 1, 1, 1]' : 0.092346}
{'[3, 6, 1, 6, 6, 5, 1, 1, 24, 26, 0, 11, 1, 1, 0, 1, 1, 1]' : 0.0923791}
{'[3, 6, 1, 6, 6, 5, 1, 1, 24, 26, 0, 11, 1, 1, 0, 1, 1, 1]' : 0.0923591}
{'[3, 6, 1, 6, 6, 5, 1, 1, 24, 26, 0, 11, 1, 1, 0, 1, 1, 1]' : 0.092375}
{'[3, 6, 1, 6, 6, 5, 1, 1, 24, 26, 0, 11, 1, 1, 0, 1, 1, 1]' : 0.09252}
{'[3, 6, 1, 6, 6, 5, 1, 1, 24, 26, 0, 11, 1, 1, 0, 1, 1, 1]' : 0.093421}
{'[3, 6, 1, 6, 6, 5, 1, 1, 24, 26, 0, 11, 1, 1, 0, 1, 1, 1]' : 0.0923481}
{'[3, 6, 1, 6, 6, 5, 1, 1, 24, 26, 0, 11, 1, 1, 0, 1, 1, 1]' : 0.092391}
{'[3, 6, 1, 6, 6, 5, 1, 1, 24, 26, 0, 11, 1, 1, 0, 1, 1, 1]' : 0.0926099}
{'[3, 6, 1, 6, 6, 5, 1, 1, 24, 26, 0, 11, 1, 1, 0, 1, 1, 1]' : 0.0925941}
{'[3, 6, 1, 6, 6, 5, 1, 1, 24, 26, 0, 11, 1, 1, 0, 1, 1, 1]' : 0.0924149}
{'[3, 6, 1, 6, 6, 5, 1, 1, 24, 26, 0, 11, 1, 1, 0, 1, 1, 1]' : 0.092329}
{'[3, 6, 1, 6, 6, 5, 1, 1, 24, 26, 0, 11, 1, 1, 0, 1, 1, 1]' : 0.092412}
{'[3, 6, 1, 6, 6, 5, 1, 1, 24, 26, 0, 11, 1, 1, 0, 1, 1, 1]' : 0.0922821}
{'[3, 6, 1, 6, 6, 5, 1, 1, 24, 26, 0, 11, 1, 1, 0, 1, 1, 1]' : 0.0922999}
{'[3, 6, 1, 6, 6, 5, 1, 1, 24, 26, 0, 11, 1, 1, 0, 1, 1, 1]' : 0.092464}
{'[3, 6, 1, 6, 6, 5, 1, 1, 24, 26, 0, 11, 1, 1, 0, 1, 1, 1]' : 0.0923879}
{'[3, 6, 1, 6, 6, 5, 1, 1, 24, 26, 0, 11, 1, 1, 0, 1, 1, 1]' : 0.09236}
{'[3, 6, 1, 6, 6, 5, 1, 1, 24, 26, 0, 11, 1, 1, 0, 1, 1, 1]' : 0.0924749}
{'[3, 6, 1, 6, 6, 5, 1, 1, 24, 26, 0, 11, 1, 1, 0, 1, 1, 1]' : 0.0923791}
{'[3, 6, 1, 6, 6, 5, 1, 1, 24, 26, 0, 11, 1, 1, 0, 1, 1, 1]' : 0.0924091}
{'[3, 6, 1, 6, 6, 5, 1, 1, 24, 26, 0, 11, 1, 1, 0, 1, 1, 1]' : 0.09235}
{'[3, 6, 1, 6, 6, 5, 1, 1, 24, 26, 0, 11, 1, 1, 0, 1, 1, 1]' : 0.092371}
{'[3, 6, 1, 6, 6, 5, 1, 1, 24, 26, 0, 11, 1, 1, 0, 1, 1, 1]' : 0.0923939}
{'[3, 6, 1, 6, 6, 5, 1, 1, 24, 26, 0, 11, 1, 1, 0, 1, 1, 1]' : 0.0922961}
{'[3, 6, 1, 6, 6, 5, 1, 1, 24, 26, 0, 11, 1, 1, 0, 1, 1, 1]' : 0.092684}
{'[3, 6, 1, 6, 6, 5, 1, 1, 24, 26, 0, 11, 1, 1, 0, 1, 1, 1]' : 0.095412}
{'[3, 6, 1, 6, 6, 5, 1, 1, 24, 26, 0, 11, 1, 1, 0, 1, 1, 1]' : 0.092381}

out:
 ["{'[3, 6, 1, 6, 6, 5, 1, 1, 24, 26, 0, 11, 1, 1, 0, 1, 1, 1]' : 0.0929198}", "{'[3, 6, 1, 6, 6, 5, 1, 1, 24, 26, 0, 11, 1, 1, 0, 1, 1, 1]' : 0.0923619}", "{'[3, 6, 1, 6, 6, 5, 1, 1, 24, 26, 0, 11, 1, 1, 0, 1, 1, 1]' : 0.092346}", "{'[3, 6, 1, 6, 6, 5, 1, 1, 24, 26, 0, 11, 1, 1, 0, 1, 1, 1]' : 0.0923791}", "{'[3, 6, 1, 6, 6, 5, 1, 1, 24, 26, 0, 11, 1, 1, 0, 1, 1, 1]' : 0.0923591}", "{'[3, 6, 1, 6, 6, 5, 1, 1, 24, 26, 0, 11, 1, 1, 0, 1, 1, 1]' : 0.092375}", "{'[3, 6, 1, 6, 6, 5, 1, 1, 24, 26, 0, 11, 1, 1, 0, 1, 1, 1]' : 0.09252}", "{'[3, 6, 1, 6, 6, 5, 1, 1, 24, 26, 0, 11, 1, 1, 0, 1, 1, 1]' : 0.093421}", "{'[3, 6, 1, 6, 6, 5, 1, 1, 24, 26, 0, 11, 1, 1, 0, 1, 1, 1]' : 0.0923481}", "{'[3, 6, 1, 6, 6, 5, 1, 1, 24, 26, 0, 11, 1, 1, 0, 1, 1, 1]' : 0.092391}", "{'[3, 6, 1, 6, 6, 5, 1, 1, 24, 26, 0, 11, 1, 1, 0, 1, 1, 1]' : 0.0926099}", "{'[3, 6, 1, 6, 6, 5, 1, 1, 24, 26, 0, 11, 1, 1, 0, 1, 1, 1]' : 0.0925941}", "{'[3, 6, 1, 6, 6, 5, 1, 1, 24, 26, 0, 11, 1, 1, 0, 1, 1, 1]' : 0.0924149}", "{'[3, 6, 1, 6, 6, 5, 1, 1, 24, 26, 0, 11, 1, 1, 0, 1, 1, 1]' : 0.092329}", "{'[3, 6, 1, 6, 6, 5, 1, 1, 24, 26, 0, 11, 1, 1, 0, 1, 1, 1]' : 0.092412}", "{'[3, 6, 1, 6, 6, 5, 1, 1, 24, 26, 0, 11, 1, 1, 0, 1, 1, 1]' : 0.0922821}", "{'[3, 6, 1, 6, 6, 5, 1, 1, 24, 26, 0, 11, 1, 1, 0, 1, 1, 1]' : 0.0922999}", "{'[3, 6, 1, 6, 6, 5, 1, 1, 24, 26, 0, 11, 1, 1, 0, 1, 1, 1]' : 0.092464}", "{'[3, 6, 1, 6, 6, 5, 1, 1, 24, 26, 0, 11, 1, 1, 0, 1, 1, 1]' : 0.0923879}", "{'[3, 6, 1, 6, 6, 5, 1, 1, 24, 26, 0, 11, 1, 1, 0, 1, 1, 1]' : 0.09236}", "{'[3, 6, 1, 6, 6, 5, 1, 1, 24, 26, 0, 11, 1, 1, 0, 1, 1, 1]' : 0.0924749}", "{'[3, 6, 1, 6, 6, 5, 1, 1, 24, 26, 0, 11, 1, 1, 0, 1, 1, 1]' : 0.0923791}", "{'[3, 6, 1, 6, 6, 5, 1, 1, 24, 26, 0, 11, 1, 1, 0, 1, 1, 1]' : 0.0924091}", "{'[3, 6, 1, 6, 6, 5, 1, 1, 24, 26, 0, 11, 1, 1, 0, 1, 1, 1]' : 0.09235}", "{'[3, 6, 1, 6, 6, 5, 1, 1, 24, 26, 0, 11, 1, 1, 0, 1, 1, 1]' : 0.092371}", "{'[3, 6, 1, 6, 6, 5, 1, 1, 24, 26, 0, 11, 1, 1, 0, 1, 1, 1]' : 0.0923939}", "{'[3, 6, 1, 6, 6, 5, 1, 1, 24, 26, 0, 11, 1, 1, 0, 1, 1, 1]' : 0.0922961}", "{'[3, 6, 1, 6, 6, 5, 1, 1, 24, 26, 0, 11, 1, 1, 0, 1, 1, 1]' : 0.092684}", "{'[3, 6, 1, 6, 6, 5, 1, 1, 24, 26, 0, 11, 1, 1, 0, 1, 1, 1]' : 0.095412}", "{'[3, 6, 1, 6, 6, 5, 1, 1, 24, 26, 0, 11, 1, 1, 0, 1, 1, 1]' : 0.092381}"]
returning from 'run': {'[3, 6, 1, 6, 6, 5, 1, 1, 24, 26, 0, 11, 1, 1, 0, 1, 1, 1]': ([0.0929198, 0.0923619, 0.092346, 0.0923791, 0.0923591, 0.092375, 0.09252, 0.093421, 0.0923481, 0.092391, 0.0926099, 0.0925941, 0.0924149, 0.092329, 0.092412, 0.0922821, 0.0922999, 0.092464, 0.0923879, 0.09236, 0.0924749, 0.0923791, 0.0924091, 0.09235, 0.092371, 0.0923939, 0.0922961, 0.092684, 0.095412, 0.092381], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.0929198, 0.0923619, 0.092346, 0.0923791, 0.0923591, 0.092375, 0.09252, 0.093421, 0.0923481, 0.092391, 0.0926099, 0.0925941, 0.0924149, 0.092329, 0.092412, 0.0922821, 0.0922999, 0.092464, 0.0923879, 0.09236, 0.0924749, 0.0923791, 0.0924091, 0.09235, 0.092371, 0.0923939, 0.0922961, 0.092684, 0.095412, 0.092381], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[3, 6, 1, 6, 6, 5, 1, 1, 24, 26, 0, 11, 1, 1, 0, 1, 1, 1]': ([0.0929198, 0.0923619, 0.092346, 0.0923791, 0.0923591, 0.092375, 0.09252, 0.093421, 0.0923481, 0.092391, 0.0926099, 0.0925941, 0.0924149, 0.092329, 0.092412, 0.0922821, 0.0922999, 0.092464, 0.0923879, 0.09236, 0.0924749, 0.0923791, 0.0924091, 0.09235, 0.092371, 0.0923939, 0.0922961, 0.092684, 0.095412, 0.092381], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [5, 5, 5, 0, 0, 0, 1, 0, 20, 3, 1, 0, 0, 1]
Fixed Factors: {'T2_K': 5, 'T2_J': 6, 'SCR': 1, 'VEC1': 1}
Testing candidate 25: [5, 5, 5, 0, 6, 5, 0, 0, 1, 0, 20, 3, 1, 0, 0, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	5
        Additions: 		1049
        Multiplications: 	486
        Divisions: 		0
        Logical: 		0
        Reads: 			2092
        Writes: 		365
        Comparisons:		21
        Gotos: 			0
        
digraph CFG {
	ForLoop23016944 [label="ForLoop23016944  for (k=kk; k<=cbv_10; k=k+4) {...",shape=box];
	ForLoop23016944 -> 23048878;
	ForLoop23016944 -> _JOIN_23016944;
	ForLoop22937295 [label="ForLoop22937295  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop22937295 -> 22937294;
	ForLoop22937295 -> _JOIN_22937295;
	23061056 [label="23061056  register int cbv_8, cbv_9;...",shape=box];
	23050497 [label="23050497  double scv_41;...",shape=box];
	23016213 [label="23016213  scv_41=scv_41+A[i*ny+j]*x[j];...",shape=box];
	22937215 [label="22937215  y[i]=0.0;...",shape=box];
	23016818 [label="23016818  int k;...",shape=box];
	_JOIN_23016115 [label="_JOIN_23016115None...",shape=box];
	_JOIN_23016115 -> 23045996;
	23014839 [label="23014839  int k;...",shape=box];
	_JOIN_22937295 [label="_JOIN_22937295None...",shape=box];
	_JOIN_22937295 -> 23008955;
	ForLoop23017014 [label="ForLoop23017014  for (kk=kkk; kk<=min(ny-1,kkk+768); kk=kk+256) {...",shape=box];
	ForLoop23017014 -> 23016818;
	ForLoop23017014 -> _JOIN_23017014;
	ForLoop23017015 [label="ForLoop23017015  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop23017015 -> ForLoop23017014;
	ForLoop23017015 -> _JOIN_23017015;
	23024623 [label="23024623  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	_JOIN_23017014 [label="_JOIN_23017014None...",shape=box];
	_JOIN_23017014 -> _JOIN_23017015;
	_JOIN_23016715 [label="_JOIN_23016715None...",shape=box];
	_JOIN_23016715 -> 23061056;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 22937143;
	ForLoop23017019 [label="ForLoop23017019  for (ii=0; ii<=nx-1; ii=ii+256) {...",shape=box];
	ForLoop23017019 -> ForLoop23016117;
	ForLoop23017019 -> _JOIN_23017019;
	23016173 [label="23016173  int j;...",shape=box];
	ForLoop22937226 [label="ForLoop22937226  for (i=0; i<=cbv_1; i=i+2) {...",shape=box];
	ForLoop22937226 -> 22937215;
	ForLoop22937226 -> _JOIN_22937226;
	23037533 [label="23037533  double scv_27;...",shape=box];
	23016782 [label="23016782  scv_41=scv_41+A[i*ny+j]*x[j];...",shape=box];
	23016782 -> _JOIN_23016783;
	23059559 [label="23059559  register int cbv_2, cbv_3;...",shape=box];
	ForLoop23016783 [label="ForLoop23016783  for (j=cbv_8; j<=cbv_9; j=j+1) {...",shape=box];
	ForLoop23016783 -> 23016782;
	ForLoop23016783 -> _JOIN_23016783;
	23060478 [label="23060478  register int cbv_5, cbv_6;...",shape=box];
	_JOIN_23016944 [label="_JOIN_23016944None...",shape=box];
	_JOIN_23016944 -> 23061338;
	_JOIN_23014804 [label="_JOIN_23014804None...",shape=box];
	_JOIN_23014804 -> _JOIN_23014806;
	_JOIN_23016783 [label="_JOIN_23016783None...",shape=box];
	_JOIN_23016783 -> _JOIN_23016785;
	_JOIN_23017019 [label="_JOIN_23017019None...",shape=box];
	_JOIN_23016785 [label="_JOIN_23016785None...",shape=box];
	_JOIN_23016785 -> _JOIN_23016786;
	22937354 [label="22937354  register int cbv_2, cbv_3;...",shape=box];
	23061338 [label="23061338  register int cbv_11, cbv_12;...",shape=box];
	23045984 [label="23045984  double scv_28, scv_29, scv_30, scv_31, scv_32, scv_33, scv_34, scv_35;...",shape=box];
	ForLoop23016114 [label="ForLoop23016114  for (kk=kkk; kk<=min(ny-1,kkk+768); kk=kk+256) {...",shape=box];
	ForLoop23016114 -> 23014839;
	ForLoop23016114 -> _JOIN_23016114;
	ForLoop23016115 [label="ForLoop23016115  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop23016115 -> ForLoop23016114;
	ForLoop2301expected=9369846271501.798828
actual=9369846271501.798828
6115 -> _JOIN_23016115;
	ForLoop23016117 [label="ForLoop23016117  for (it=ii; it<=min(nx-1,ii+255)-7; it=it+8) {...",shape=box];
	ForLoop23016117 -> 23045984;
	ForLoop23016117 -> _JOIN_23016117;
	ForLoop23016112 [label="ForLoop23016112  for (k=cbv_5; k<=cbv_6; k=k+1) {...",shape=box];
	ForLoop23016112 -> 23037533;
	ForLoop23016112 -> _JOIN_23016112;
	ForLoop23014804 [label="ForLoop23014804  for (j=cbv_2; j<=cbv_3; j=j+1) {...",shape=box];
	ForLoop23014804 -> 23025345;
	ForLoop23014804 -> _JOIN_23014804;
	ForLoop23014806 [label="ForLoop23014806  for (jj=jjj; jj<=min(ny-1,jjj+1792); jj=jj+256) {...",shape=box];
	ForLoop23014806 -> 23009027;
	ForLoop23014806 -> _JOIN_23014806;
	ForLoop23014807 [label="ForLoop23014807  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop23014807 -> ForLoop23014806;
	ForLoop23014807 -> _JOIN_23014807;
	ForLoop23016785 [label="ForLoop23016785  for (jj=jjj; jj<=min(ny-1,jjj+1792); jj=jj+256) {...",shape=box];
	ForLoop23016785 -> 23016173;
	ForLoop23016785 -> _JOIN_23016785;
	_JOIN_23016786 [label="_JOIN_23016786None...",shape=box];
	_JOIN_23016786 -> ForLoop23017015;
	ForLoop23016786 [label="ForLoop23016786  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop23016786 -> ForLoop23016785;
	ForLoop23016786 -> _JOIN_23016786;
	23025345 [label="23025345  double scv_22;...",shape=box];
	_JOIN_23017015 [label="_JOIN_23017015None...",shape=box];
	_JOIN_23017015 -> 23050509;
	23050509 [label="23050509  tmp[i]=scv_41;...",shape=box];
	23050509 -> _JOIN_23017017;
	23008955 [label="23008955  double x_copy;...",shape=box];
	23037075 [label="23037075  double scv_23, scv_24, scv_25, scv_26;...",shape=box];
	23048878 [label="23048878  double scv_36, scv_37, scv_38, scv_39;...",shape=box];
	ForLoop23014532 [label="ForLoop23014532  for (j=jj; j<=cbv_1; j=j+21) {...",shape=box];
	ForLoop23014532 -> 23024623;
	ForLoop23014532 -> _JOIN_23014532;
	_JOIN_23015861 [label="_JOIN_23015861None...",shape=box];
	_JOIN_23015861 -> 23060478;
	_JOIN_23014807 [label="_JOIN_23014807None...",shape=box];
	_JOIN_23014807 -> ForLoop23016115;
	ForLoop23017017 [label="ForLoop23017017  for (i=it; i<=min(nx-1,ii+255); i=i+1) {...",shape=box];
	ForLoop23017017 -> 23050497;
	ForLoop23017017 -> _JOIN_23017017;
	_JOIN_23017012 [label="_JOIN_23017012None...",shape=box];
	_JOIN_23017012 -> _JOIN_23017014;
	_JOIN_23016112 [label="_JOIN_23016112None...",shape=box];
	_JOIN_23016112 -> _JOIN_23016114;
	ForLoop23016715 [label="ForLoop23016715  for (j=jj; j<=cbv_7; j=j+21) {...",shape=box];
	ForLoop23016715 -> 23016213;
	ForLoop23016715 -> _JOIN_23016715;
	_JOIN_23016114 [label="_JOIN_23016114None...",shape=box];
	_JOIN_23016114 -> _JOIN_23016115;
	_JOIN_23014532 [label="_JOIN_23014532None...",shape=box];
	_JOIN_23014532 -> 23059559;
	_JOIN_23016117 [label="_JOIN_23016117None...",shape=box];
	_JOIN_23016117 -> ForLoop23017017;
	ForLoop23015861 [label="ForLoop23015861  for (k=kk; k<=cbv_4; k=k+4) {...",shape=box];
	ForLoop23015861 -> 23037075;
	ForLoop23015861 -> _JOIN_23015861;
	22937294 [label="22937294  y[i]=0.0;...",shape=box];
	22937294 -> _JOIN_22937295;
	_JOIN_23014806 [label="_JOIN_23014806None...",shape=box];
	_JOIN_23014806 -> _JOIN_23014807;
	_JOIN_22937226 [label="_JOIN_22937226None...",shape=box];
	_JOIN_22937226 -> 22937354;
	_JOIN_23017017 [label="_JOIN_23017017None...",shape=box];
	_JOIN_23017017 -> _JOIN_23017019;
	ForLoop23017012 [label="ForLoop23017012  for (k=cbv_11; k<=cbv_12; k=k+1) {...",shape=box];
	ForLoop23017012 -> 23049027;
	ForLoop23017012 -> _JOIN_23017012;
	23009027 [label="23009027  int j;...",shape=box];
	23049027 [label="23049027  double scv_40;...",shape=box];
	23045996 [label="23045996  tmp[it]=scv_28;...",shape=box];
	22937143 [label="22937143  int i;...",shape=box];

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest96.exe __orio_perftest96.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest96.exe  
{'[5, 5, 5, 0, 6, 5, 0, 0, 1, 0, 20, 3, 1, 0, 0, 1, 1, 1]' : 0.078084}
{'[5, 5, 5, 0, 6, 5, 0, 0, 1, 0, 20, 3, 1, 0, 0, 1, 1, 1]' : 0.0771241}
{'[5, 5, 5, 0, 6, 5, 0, 0, 1, 0, 20, 3, 1, 0, 0, 1, 1, 1]' : 0.077035}
{'[5, 5, 5, 0, 6, 5, 0, 0, 1, 0, 20, 3, 1, 0, 0, 1, 1, 1]' : 0.0772049}
{'[5, 5, 5, 0, 6, 5, 0, 0, 1, 0, 20, 3, 1, 0, 0, 1, 1, 1]' : 0.0781291}
{'[5, 5, 5, 0, 6, 5, 0, 0, 1, 0, 20, 3, 1, 0, 0, 1, 1, 1]' : 0.0771739}
{'[5, 5, 5, 0, 6, 5, 0, 0, 1, 0, 20, 3, 1, 0, 0, 1, 1, 1]' : 0.077059}
{'[5, 5, 5, 0, 6, 5, 0, 0, 1, 0, 20, 3, 1, 0, 0, 1, 1, 1]' : 0.077178}
{'[5, 5, 5, 0, 6, 5, 0, 0, 1, 0, 20, 3, 1, 0, 0, 1, 1, 1]' : 0.077172}
{'[5, 5, 5, 0, 6, 5, 0, 0, 1, 0, 20, 3, 1, 0, 0, 1, 1, 1]' : 0.0771251}
{'[5, 5, 5, 0, 6, 5, 0, 0, 1, 0, 20, 3, 1, 0, 0, 1, 1, 1]' : 0.0771089}
{'[5, 5, 5, 0, 6, 5, 0, 0, 1, 0, 20, 3, 1, 0, 0, 1, 1, 1]' : 0.077121}
{'[5, 5, 5, 0, 6, 5, 0, 0, 1, 0, 20, 3, 1, 0, 0, 1, 1, 1]' : 0.077112}
{'[5, 5, 5, 0, 6, 5, 0, 0, 1, 0, 20, 3, 1, 0, 0, 1, 1, 1]' : 0.0771289}
{'[5, 5, 5, 0, 6, 5, 0, 0, 1, 0, 20, 3, 1, 0, 0, 1, 1, 1]' : 0.0771201}
{'[5, 5, 5, 0, 6, 5, 0, 0, 1, 0, 20, 3, 1, 0, 0, 1, 1, 1]' : 0.0771132}
{'[5, 5, 5, 0, 6, 5, 0, 0, 1, 0, 20, 3, 1, 0, 0, 1, 1, 1]' : 0.077482}
{'[5, 5, 5, 0, 6, 5, 0, 0, 1, 0, 20, 3, 1, 0, 0, 1, 1, 1]' : 0.077179}
{'[5, 5, 5, 0, 6, 5, 0, 0, 1, 0, 20, 3, 1, 0, 0, 1, 1, 1]' : 0.0771899}
{'[5, 5, 5, 0, 6, 5, 0, 0, 1, 0, 20, 3, 1, 0, 0, 1, 1, 1]' : 0.077023}
{'[5, 5, 5, 0, 6, 5, 0, 0, 1, 0, 20, 3, 1, 0, 0, 1, 1, 1]' : 0.077142}
{'[5, 5, 5, 0, 6, 5, 0, 0, 1, 0, 20, 3, 1, 0, 0, 1, 1, 1]' : 0.0771489}
{'[5, 5, 5, 0, 6, 5, 0, 0, 1, 0, 20, 3, 1, 0, 0, 1, 1, 1]' : 0.0771441}
{'[5, 5, 5, 0, 6, 5, 0, 0, 1, 0, 20, 3, 1, 0, 0, 1, 1, 1]' : 0.077055}
{'[5, 5, 5, 0, 6, 5, 0, 0, 1, 0, 20, 3, 1, 0, 0, 1, 1, 1]' : 0.0771179}
{'[5, 5, 5, 0, 6, 5, 0, 0, 1, 0, 20, 3, 1, 0, 0, 1, 1, 1]' : 0.077141}
{'[5, 5, 5, 0, 6, 5, 0, 0, 1, 0, 20, 3, 1, 0, 0, 1, 1, 1]' : 0.0771561}
{'[5, 5, 5, 0, 6, 5, 0, 0, 1, 0, 20, 3, 1, 0, 0, 1, 1, 1]' : 0.0770459}
{'[5, 5, 5, 0, 6, 5, 0, 0, 1, 0, 20, 3, 1, 0, 0, 1, 1, 1]' : 0.0771379}
{'[5, 5, 5, 0, 6, 5, 0, 0, 1, 0, 20, 3, 1, 0, 0, 1, 1, 1]' : 0.077193}

out:
 ["{'[5, 5, 5, 0, 6, 5, 0, 0, 1, 0, 20, 3, 1, 0, 0, 1, 1, 1]' : 0.078084}", "{'[5, 5, 5, 0, 6, 5, 0, 0, 1, 0, 20, 3, 1, 0, 0, 1, 1, 1]' : 0.0771241}", "{'[5, 5, 5, 0, 6, 5, 0, 0, 1, 0, 20, 3, 1, 0, 0, 1, 1, 1]' : 0.077035}", "{'[5, 5, 5, 0, 6, 5, 0, 0, 1, 0, 20, 3, 1, 0, 0, 1, 1, 1]' : 0.0772049}", "{'[5, 5, 5, 0, 6, 5, 0, 0, 1, 0, 20, 3, 1, 0, 0, 1, 1, 1]' : 0.0781291}", "{'[5, 5, 5, 0, 6, 5, 0, 0, 1, 0, 20, 3, 1, 0, 0, 1, 1, 1]' : 0.0771739}", "{'[5, 5, 5, 0, 6, 5, 0, 0, 1, 0, 20, 3, 1, 0, 0, 1, 1, 1]' : 0.077059}", "{'[5, 5, 5, 0, 6, 5, 0, 0, 1, 0, 20, 3, 1, 0, 0, 1, 1, 1]' : 0.077178}", "{'[5, 5, 5, 0, 6, 5, 0, 0, 1, 0, 20, 3, 1, 0, 0, 1, 1, 1]' : 0.077172}", "{'[5, 5, 5, 0, 6, 5, 0, 0, 1, 0, 20, 3, 1, 0, 0, 1, 1, 1]' : 0.0771251}", "{'[5, 5, 5, 0, 6, 5, 0, 0, 1, 0, 20, 3, 1, 0, 0, 1, 1, 1]' : 0.0771089}", "{'[5, 5, 5, 0, 6, 5, 0, 0, 1, 0, 20, 3, 1, 0, 0, 1, 1, 1]' : 0.077121}", "{'[5, 5, 5, 0, 6, 5, 0, 0, 1, 0, 20, 3, 1, 0, 0, 1, 1, 1]' : 0.077112}", "{'[5, 5, 5, 0, 6, 5, 0, 0, 1, 0, 20, 3, 1, 0, 0, 1, 1, 1]' : 0.0771289}", "{'[5, 5, 5, 0, 6, 5, 0, 0, 1, 0, 20, 3, 1, 0, 0, 1, 1, 1]' : 0.0771201}", "{'[5, 5, 5, 0, 6, 5, 0, 0, 1, 0, 20, 3, 1, 0, 0, 1, 1, 1]' : 0.0771132}", "{'[5, 5, 5, 0, 6, 5, 0, 0, 1, 0, 20, 3, 1, 0, 0, 1, 1, 1]' : 0.077482}", "{'[5, 5, 5, 0, 6, 5, 0, 0, 1, 0, 20, 3, 1, 0, 0, 1, 1, 1]' : 0.077179}", "{'[5, 5, 5, 0, 6, 5, 0, 0, 1, 0, 20, 3, 1, 0, 0, 1, 1, 1]' : 0.0771899}", "{'[5, 5, 5, 0, 6, 5, 0, 0, 1, 0, 20, 3, 1, 0, 0, 1, 1, 1]' : 0.077023}", "{'[5, 5, 5, 0, 6, 5, 0, 0, 1, 0, 20, 3, 1, 0, 0, 1, 1, 1]' : 0.077142}", "{'[5, 5, 5, 0, 6, 5, 0, 0, 1, 0, 20, 3, 1, 0, 0, 1, 1, 1]' : 0.0771489}", "{'[5, 5, 5, 0, 6, 5, 0, 0, 1, 0, 20, 3, 1, 0, 0, 1, 1, 1]' : 0.0771441}", "{'[5, 5, 5, 0, 6, 5, 0, 0, 1, 0, 20, 3, 1, 0, 0, 1, 1, 1]' : 0.077055}", "{'[5, 5, 5, 0, 6, 5, 0, 0, 1, 0, 20, 3, 1, 0, 0, 1, 1, 1]' : 0.0771179}", "{'[5, 5, 5, 0, 6, 5, 0, 0, 1, 0, 20, 3, 1, 0, 0, 1, 1, 1]' : 0.077141}", "{'[5, 5, 5, 0, 6, 5, 0, 0, 1, 0, 20, 3, 1, 0, 0, 1, 1, 1]' : 0.0771561}", "{'[5, 5, 5, 0, 6, 5, 0, 0, 1, 0, 20, 3, 1, 0, 0, 1, 1, 1]' : 0.0770459}", "{'[5, 5, 5, 0,WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
 6, 5, 0, 0, 1, 0, 20, 3, 1, 0, 0, 1, 1, 1]' : 0.0771379}", "{'[5, 5, 5, 0, 6, 5, 0, 0, 1, 0, 20, 3, 1, 0, 0, 1, 1, 1]' : 0.077193}"]
returning from 'run': {'[5, 5, 5, 0, 6, 5, 0, 0, 1, 0, 20, 3, 1, 0, 0, 1, 1, 1]': ([0.078084, 0.0771241, 0.077035, 0.0772049, 0.0781291, 0.0771739, 0.077059, 0.077178, 0.077172, 0.0771251, 0.0771089, 0.077121, 0.077112, 0.0771289, 0.0771201, 0.0771132, 0.077482, 0.077179, 0.0771899, 0.077023, 0.077142, 0.0771489, 0.0771441, 0.077055, 0.0771179, 0.077141, 0.0771561, 0.0770459, 0.0771379, 0.077193], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.078084, 0.0771241, 0.077035, 0.0772049, 0.0781291, 0.0771739, 0.077059, 0.077178, 0.077172, 0.0771251, 0.0771089, 0.077121, 0.077112, 0.0771289, 0.0771201, 0.0771132, 0.077482, 0.077179, 0.0771899, 0.077023, 0.077142, 0.0771489, 0.0771441, 0.077055, 0.0771179, 0.077141, 0.0771561, 0.0770459, 0.0771379, 0.077193], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[5, 5, 5, 0, 6, 5, 0, 0, 1, 0, 20, 3, 1, 0, 0, 1, 1, 1]': ([0.078084, 0.0771241, 0.077035, 0.0772049, 0.0781291, 0.0771739, 0.077059, 0.077178, 0.077172, 0.0771251, 0.0771089, 0.077121, 0.077112, 0.0771289, 0.0771201, 0.0771132, 0.077482, 0.077179, 0.0771899, 0.077023, 0.077142, 0.0771489, 0.0771441, 0.077055, 0.0771179, 0.077141, 0.0771561, 0.0770459, 0.0771379, 0.077193], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [6, 2, 0, 4, 0, 0, 28, 11, 0, 8, 1, 0, 1, 0]
Fixed Factors: {'T2_K': 5, 'T2_J': 6, 'SCR': 1, 'VEC1': 1}
Testing candidate 26: [6, 2, 0, 4, 6, 5, 0, 0, 28, 11, 0, 8, 1, 0, 1, 1, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	49
        Max loop nest depth: 	5
        Additions: 		2080
        Multiplications: 	798
        Divisions: 		0
        Logical: 		0
        Reads: 			4377
        Writes: 		916
        Comparisons:		49
        Gotos: 			0
        
digraph CFG {
	23184131 [label="23184131  int k;...",shape=box];
	23184131 -> ForLoop23184451;
	_JOIN_23182075 [label="_JOIN_23182075None...",shape=box];
	_JOIN_23182075 -> ForLoop23182149;
	ForLoop23182941 [label="ForLoop23182941  for (k=(min(ny-1,kkk+1023))-(((min(ny-1,kkk+1023))-(kt)+1)%9)+1; k<=min(ny-1,kkk+1023); k=k+1) {...",shape=box];
	ForLoop23182941 -> 23212136;
	ForLoop23182941 -> _JOIN_23182941;
	ForLoop23183659 [label="ForLoop23183659  for (k=kt; k<=min(ny-1,kkk+1023)-8; k=k+9) {...",shape=box];
	ForLoop23183659 -> 23213372;
	ForLoop23183659 -> _JOIN_23183659;
	_JOIN_23183733 [label="_JOIN_23183733None...",shape=box];
	_JOIN_23183733 -> 23183735;
	ForLoop23182545 [label="ForLoop23182545  for (k=(min(ny-1,kkk+1023))-(((min(ny-1,kkk+1023))-(kt)+1)%9)+1; k<=min(ny-1,kkk+1023); k=k+1) {...",shape=box];
	ForLoop23182545 -> 23211386;
	ForLoop23182545 -> _JOIN_23182545;
	23217386 [label="23217386  double scv_156;...",shape=box];
	_JOIN_23181357 [label="_JOIN_23181357None...",shape=box];
	_JOIN_23181357 -> 23181359;
	_JOIN_23184055 [label="_JOIN_23184055None...",shape=box];
	_JOIN_23184055 -> ForLoop23184129;
	23061628 [label="23061628  int i;...",shape=box];
	23194417 [label="23194417  double scv_19;...",shape=box];
	_JOIN_23177347 [label="_JOIN_23177347None...",shape=box];
	_JOIN_23177347 -> 23177348;
	23235657 [label="23235657  double scv_177, scv_178, scv_179, scv_180, scv_181, scv_182, scv_183, scv_184;...",shape=box];
	_JOIN_23177345 [label="_JOIN_23177345None...",shape=box];
	_JOIN_23177345 -> 23202292;
	_JOIN_23174738 [label="_JOIN_23174738None...",shape=box];
	_JOIN_23174738 -> 23174739;
	ForLoop23183263 [label="ForLoop23183263  for (k=kt; k<=min(ny-1,kkk+1023)-8; k=k+9) {...",shape=box];
	ForLoop23183263 -> 23212622;
	ForLoop23183263 -> _JOIN_23183263;
	_JOIN_23177342 [label="_JOIN_23177342None...",shape=box];
	_JOIN_23177342 -> _JOIN_23177345;
	_JOIN_23186441 [label="_JOIN_23186441None...",shape=box];
	_JOIN_23186441 -> _JOIN_23186444;
	ForLoop23185841 [label="ForLoop23185841  for (j=jj; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop23185841 -> 23185840;
	ForLoop23185841 -> _JOIN_23185841;
	ForLoop23185843 [label="ForLoop23185843  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop23185843 -> ForLoop23185842;
	ForLoop23185843 -> _JOIN_23185843;
	ForLoop23185842 [label="ForLoop23185842  for (jj=jjj; jj<=min(ny-1,jjj+2016); jj=jj+32) {...",shape=box];
	ForLoop23185842 -> ForLoop23185841;
	ForLoop23185842 -> _JOIN_23185842;
	23214872 [label="23214872  double scv_117, scv_118, scv_119, scv_120, scv_121, scv_122, scv_123, scv_124;...",shape=box];
	ForLoop23186441 [label="ForLoop23186441  for (i=(min(nx-1,ii+511))-(((min(nx-1,ii+511))-(it)+1)%12)+1; i<=min(nx-1,ii+511); i=i+1) {...",shape=box];
	ForLoop23186441 -> 23237533;
	ForLoop23186441 -> _JOIN_23186441;
	23062730 [label="23062730  register int cbv_2, cbv_3;...",shape=box];
	ForLoop23186444 [label="ForLoop23186444  for (ii=0; ii<=nx-1; ii=ii+512) {...",shape=box];
	ForLoop23186444 -> ForLoop23177347;
	ForLoop23186444 -> _JOIN_23186444;
	23210636 [label="23210636  double scv_66;...",shape=box];
	23185840 [label="23185840  scv_187=scv_187+A[i*ny+j]*x[j];...",shape=box];
	23185840 -> _JOIN_23185841;
	23062105 [label="23062105  y[i]=0.0;...",shape=box];
	ForLoop23177347 [label="ForLoop23177347  for (it=ii; it<=min(nx-1,ii+511)-7; it=it+8) {...",shape=box];
	ForLoop23177347 -> 23202280;
	ForLoop23177347 -> _JOIN_23177347;
	ForLoop23177345 [label="ForLoop23177345  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop23177345 -> ForLoop23174738;
	ForLoop23177345 -> _JOIN_23177345;
	ForLoop23062428 [label="ForLoop23062428  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop23062428 -> 23062427;
	ForLoop23062428 -> _JOIN_23062428;
	ForLoop23177342 [label="ForLoop23177342  for (k=(min(ny-1,kkk+1023))-(((min(ny-1,kkk+1023))-(kt)+1)%9)+1; k<=min(ny-1,kkk+1023); k=k+1) {...",shape=box];
	ForLoop23177342 -> 23194417;
	ForLoop23177342 -> _JOIN_23177342;
	23184923 [label="23184923  int k;...",shape=box];
	23184923 -> ForLoop23185243;
	23185319 [label="23185319  int k;...",shape=box];
	23185319 -> ForLoop23185639;
	ForLoop23062359 [label="ForLoop23062359  for (i=0; i<=cbv_1; i=i+29) {...",shape=box];
	ForLoop23062359 -> 23062105;
	ForLoop23062359 -> _JOIN_23062359;
	23181023 [label="23181023  int k;...",shape=box];
	23181023 -> ForLoop23181289;
	23211122 [label="23211122  double scv_67, scv_68, scv_69, scv_70, scv_71, scv_72, scv_73, scv_74;...",shape=box];
	23209886 [label="23209886  double scv_56;...",shape=box];
	_JOIN_23181289 [label="_JOIN_23181289None...",shape=box];
	_JOIN_23181289 -> ForLoop23181357;
	_JOIN_23186368 [label="_JOIN_23186368None...",shape=box];
	_JOIN_23186368 -> ForLoop23186436;
	23215886 [label="23215886  double scv_136;...",shape=box];
	ForLoop23184525 [label="ForLoop23184525  for (k=(min(ny-1,kkk+1023))-(((min(ny-1,kkk+1023))-(kt)+1)%9)+1; k<=min(ny-1,kkk+1023); k=k+1) {...",shape=box];
	ForLoop23184525 -> 23215136;
	ForLoop23184525 -> _JOIN_23184525;
	23182943 [label="23182943  int k;...",shape=box];
	23182943 -> ForLoop23183263;
	23190292 [label="23190292  double scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8, scv_9;...",shape=box];
	23184527 [label="23184527  int k;...",shape=box];
	23184527 -> ForLoop23184847;
	ForLoop23182075 [label="ForLoop23182075  for (k=kt; k<=min(ny-1,kkk+1023)-8; k=k+9) {...",shape=box];
	ForLoop23182075 -> 23210372;
	ForLoop23182075 -> _JOIN_23182075;
	23181755 [label="23181755  int k;...",shape=box];
	23181755 -> ForLoop23182075;
	23234107 [label="23234107  double scv_157, scv_158, scv_159, scv_160, scv_161, scv_162, scv_163, scv_164;...",shape=box];
	_JOIN_23177863 [label="_JOIN_23177863None...",shape=box];
	_JOIN_23177863 -> _JOIN_23177865;
	_JOIN_23177867 [label="_JOIN_23177867None...",shape=box];
	_JOIN_23177867 -> ForLoop23185716;
	ForLoop23183733 [label="ForLoop23183733  for (k=(min(ny-1,kkk+1023))-(((min(ny-1,kkk+1023))-(kt)+1)%9)+1; k<=min(ny-1,kkk+1023); k=k+1) {...",shape=box];
	ForLoop23183733 -> 23213636;
	ForLoop23183733 -> _JOIN_23183733;
	_JOIN_23177865 [label="_JOIN_23177865None...",shape=box];
	_JOIN_23177865 -> _JOIN_23177867;
	23062427 [label="23062427  y[i]=0.0;...",shape=box];
	23062427 -> _JOIN_23062428;
	23217122 [label="23217122  double scv_147, scv_148, scv_149, scv_150, scv_151, scv_152, scv_153, scv_154;...",shape=box];
	23186102 [label="23186102  int k;...",shape=box];
	23186102 -> ForLoop23186368;
	23237533 [label="23237533  double scv_187;...",shape=box];
	23177348 [label="23177348  int i;...",shape=box];
	23177348 -> ForLoop23185718;
	_JOIN_23177091 [label="_JOIN_23177091None...",shape=box];
	_JOIN_23177091 -> ForLoop23177342;
	_JOIN_23186444 [label="_JOIN_23186444None...",shape=box];
	23182547 [label="23182547  int k;...",shape=box];
	23182547 -> ForLoop23182867;
	23181359 [label="23181359  int k;...",shape=box];
	23181359 -> ForLoop23181679;
	_JOIN_23182867 [label="_JOIN_23182867None...",shape=box];
	_JOIN_23182867 -> ForLoop23182941;
	ForLoop23177867 [label="ForLoop23177867  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop23177867 -> ForLoop23177865;
	ForLoop23177867 -> _JOIN_23177867;
	ForLoop23177865 [label="ForLoop23177865  for (jj=jjj; jj<=min(ny-1,jjj+2016); jj=jj+32) {...",shape=box];
	ForLoop23177865 -> ForLoop23177863;
	ForLoop23177865 -> _JOIN_23177865;
	_JOIN_23182941 [label="_JOIN_23182941None...",shape=box];
	_JOIN_23182941 -> 23182943;
	ForLoop23177863 [label="ForLoop23177863  for (j=jj; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop23177863 -> 23203128;
	ForLoop23177863 -> _JOIN_23177863;
	ForLoop23184847 [label="ForLoop23184847  for (k=kt; k<=min(ny-1,kkk+1023)-8; k=k+9) {...",shape=box];
	ForLoop23184847 -> 23215622;
	ForLoop23184847 -> _JOIN_23184847;
	23186806 [label="23186806  double scv_1;...",shape=box];
	ForLoop23177091 [label="ForLoop23177091  for (k=kt; k<=min(ny-1,kkk+1023)-8; k=k+9) {...",shape=box];
	ForLoop23177091 -> 23193783;
	ForLoop23177091 -> _JOIN_23177091;
	23212886 [label="23212886  double scv_96;...",shape=box];
	ForLoop23185718 [label="ForLoop23185718  for (i=it; i<=min(nx-1,ii+511)-11; i=i+12) {...",shape=box];
	ForLoop23185718 -> 23234107;
	ForLoop23185718 -> _JOIN_23185718;
	_JOIN_23184921 [label="_JOIN_23184921None...",shape=box];
	_JOIN_23184921 -> 23184923;
	23208881 [label="23208881  double scv_37, scv_38, scv_39, scv_40, scv_41, scv_42, scv_43, scv_44;...",shape=box];
	23208154 [label="23208154  double scv_29, scv_30, scv_31, scv_32, scv_33, scv_34, scv_35, scv_36;...",shape=box];
	_JOIN_23186101 [label="_JOIN_23186101None...",shape=box];
	_JOIN_23186101 -> 23186102;
	23213636 [label="23213636  double scv_106;...",shape=box];
	23202292 [label="23202292  tmp[it]=scv_20;...",shape=box];
	ForLoop23181679 [label="ForLoop23181679  for (k=kt; k<=min(ny-1,kkk+1023)-8; k=k+9) {...",shape=box];
	ForLoop23181679 -> 23209622;
	ForLoop23181679 -> _JOIN_23181679;
	_JOIN_23182471 [label="_JOIN_23182471None...",shape=box];
	_JOIN_23182471 -> ForLoop23182545;
	ForLoop23186368 [label="ForLoop23186368  for (k=kt; k<=min(ny-1,kkk+1023)-8; k=k+9) {...",shape=box];
	ForLoop23186368 -> 23235657;
	ForLoop23186368 -> _JOIN_23186368;
	23216636 [label="23216636  double scv_146;...",shape=box];
	23214122 [label="23214122  double scv_107, scv_108, scv_109, scv_110, scv_111, scv_112, scv_113, scv_114;...",shape=box];
	ForLoop23181022 [label="ForLoop23181022  for (kt=kkk; kt<=min(ny-1,kkk+1023)-7; kt=kt+8) {...",shape=box];
	ForLoop23181022 -> 23208154;
	ForLoop23181022 -> _JOIN_23181022;
	ForLoop23182149 [label="ForLoop23182149  for (k=(min(ny-1,kkk+1023))-(((min(ny-1,kkk+1023))-(kt)+1)%9)+1; k<=min(ny-1,kkk+1023); k=k+1) {...",shape=box];
	ForLoop23182149 -> 23210636;
	ForLoop23182149 -> _JOIN_23182149;
	23183339 [label="23183339  int k;...",shape=box];
	23183339 -> ForLoop23183659;
	23237545 [label="23237545  tmp[i]=scv_187;...",shape=box];
	23237545 -> _JOIN_23186441;
	23234125 [label="23234125  tmp[(i+1)]=scv_157;...",shape=box];
	23211386 [label="23211386  double scv_76;...",shape=box];
	23193783 [label="23193783  double scv_10, scv_11, scv_12, scv_13, scv_14, scv_15, scv_16, scv_17;...",shape=box];
	_JOIN_23186436 [label="_JOIN_23186436None...",shape=box];
	_JOIN_23186436 -> _JOIN_23186439;
	_JOIN_23186439 [label="_JOIN_23186439None...",shape=box];
	_JOIN_23186439 -> 23237545;
	23213372 [label="23213372  double scv_97, scv_98, scv_99, scv_100, scv_101, scv_102, scv_103, scv_104;...",shape=box];
	ForLoop23184055 [label="ForLoop23184055  for (k=kt; k<=min(ny-1,kkk+1023)-8; k=k+9) {...",shape=box];
	ForLoop23184055 -> 23214122;
	ForLoop23184055 -> _JOIN_23184055;
	_JOIN_23184847 [label="_JOIN_23184847None...",shape=box];
	_JOIN_23184847 -> ForLoop23184921;
	ForLoop23184451 [label="ForLoop23184451  for (k=kt; k<=min(ny-1,kkk+1023)-8; k=k+9) {...",shape=box];
	ForLoop23184451 -> 23214872;
	ForLoop23184451 -> _JOIN_23184451;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 23061628;
	23202280 [label="23202280  double scv_20, scv_21, scv_22, scv_23, scv_24, scv_25, scv_26, scv_27;...",shape=box];
	_JOIN_23184451 [label="_JOIN_23184451None...",shape=box];
	_JOIN_23184451 -> ForLoop23184525;
	23235106 [label="23235106  double scv_169, scv_170, scv_171, scv_172, scv_173, scv_174, scv_175, scv_176;...",shape=box];
	_JOIN_23181022 [label="_JOIN_23181022None...",shape=box];
	_JOIN_23181022 -> 23181023;
	_JOIN_23183659 [label="_JOIN_23183659None...",shape=box];
	_JOIN_23183659 -> ForLoop23183733;
	23215622 [label="23215622  double scv_127, scv_128, scv_129, scv_130, scv_131, scv_132, scv_133, scv_134;...",shape=box];
	ForLoop23181289 [label="ForLoop23181289  for (k=kt; k<=min(ny-1,kkk+1023)-8; k=k+9) {...",shape=box];
	ForLoop23181289 -> 23208881;
	ForLoop23181289 -> _JOIN_23181289;
	23183735 [label="23183735  int k;...",shape=box];
	23183735 -> ForLoop23184055;
	23210372 [label="23210372  double scv_57, scv_58, scv_59, scv_60, scv_61, scv_62, scv_63, scv_64;...",shape=box];
	23212622 [label="23212622  double scv_87, scv_88, scv_89, scv_90, scv_91, scv_92, scv_93, scv_94;...",shape=box];
	ForLoop23185639 [label="ForLoop23185639  for (k=kt; k<=min(ny-1,kkk+1023)-8; k=k+9) {...",shape=box];
	ForLoop23185639 -> 23217122;
	ForLoop23185639 -> _JOIN_23185639;
	ForLoop23184129 [label="ForLoop23184129  for (k=(min(ny-1,kkk+1023))-(((min(ny-1,kkk+1023))-(kt)+1)%9)+1; k<=min(ny-1,kkk+1023); k=k+1) {...",shape=box];
	ForLoop23184129 -> 23214386;
	ForLoop23184129 -> _JOIN_23184129;
	23235912 [label="23235912  double scv_186;...",shape=box];
	23215136 [label="23215136  double scv_126;...",shape=box];
	ForLoop23174738 [label="ForLoop23174738  for (kt=kkk; kt<=min(ny-1,kkk+1023)-7; kt=kt+8) {...",shape=box];
	ForLoop23174738 -> 23190292;
	ForLoop23174738 -> _JOIN_23174738;
	_JOIN_23185317 [label="_JOIN_23185317None...",shape=box];
	_JOIN_23185317 -> 23185319;
	_JOIN_23183263 [label="_JOIN_23183263None...",shape=box];
	_JOIN_23183263 -> ForLoop23183337;
	ForLoop23181357 [label="ForLoop23181357  for (k=(min(ny-1,kkk+1023))-(((min(ny-1,kkk+1023))-(kt)+1)%9)+1; k<=min(ny-1,kkk+1023); k=k+1) {...",shape=box];
	ForLoop23181357 -> 23209136;
	ForLoop23181357 -> _JOIN_23181357;
	_JOIN_23062428 [label="_JOIN_23062428None...",shape=box];
	_JOIN_23062428 -> 23172267;
	_JOIN_23181753 [label="_JOIN_23181753None...",shape=box];
	_JOIN_23181753 -> 23181755;
	ForLoop23184921 [label="ForLoop23184921  for (k=(min(ny-1,kkk+1023))-(((min(ny-1,kkk+1023))-(kt)+1)%9)+1; k<=min(ny-1,kkk+1023); k=k+1) {...",shape=box];
	ForLoop23184921 -> 23215886;
	ForLoop23184921 -> _JOIN_23184921;
	23172267 [label="23172267  double x_copy;...",shape=box];
	ForLoop23181753 [label="ForLoop23181753  for (k=(min(ny-1,kkk+1023))-(((min(ny-1,kkk+1023))-(kt)+1)%9)+1; k<=min(ny-1,kkk+1023); k=k+1) {...",shape=box];
	ForLoop23181753 -> 23209886;
	ForLoop23181753 -> _JOIN_23181753;
	23214386 [label="23214386  double scv_116;...",shape=box];
	_JOIN_23185718 [label="_JOIN_23185718None...",shape=box];
	_JOIN_23185718 -> ForLoop23186441;
	_JOIN_23183337 [label="_JOIN_23183337None...",shape=box];
	_JOIN_23183337 -> 23183339;
	_JOIN_23185716 [label="_JOIN_23185716None...",shape=box];
	_JOIN_23185716 -> 23234125;
	_JOIN_23185713 [label="_JOIN_23185713None...",shape=box];
	_JOIN_23185713 -> _JOIN_23185716;
	ForLoop23172582 [label="ForLoop23172582  for (jj=jjj; jj<=min(ny-1,jjj+2016); jj=jj+32) {...",shape=box];
	ForLoop23172582 -> ForLoop23172581;
	ForLoop23172582 -> _JOIN_23172582;
	ForLoop23172583 [label="ForLoop23172583  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop23172583 -> ForLoop23172582;
	ForLoop23172583 -> _JOIN_23172583;
	ForLoop23172581 [label="ForLoop23172581  for (j=jj; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop23172581 -> 23186806;
	ForLoop23172581 -> _JOIN_23172581;
	_JOIN_23185841 [label="_JOIN_23185841None...",shape=box];
	_JOIN_23185841 -> _JOIN_23185842;
	_JOIN_23185843 [label="_JOIN_23185843None...",shape=box];
	_JOIN_23185843 -> ForLoop23186439;
	_JOIN_23185842 [label="_JOIN_23185842None...",shape=box];
	_JOIN_23185842 -> _JOIN_23185843;
	ForLoop23186439 [label="ForLoop23186439  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop23186439 -> ForLoop23186101;
	ForLoop23186439 -> _JOIN_23186439;
	23211872 [label="23211872  double scv_77, scv_78, scv_79, scv_80, scv_81, scv_82, scv_83, scv_84;...",shape=box];
	23174739 [label="23174739  int k;...",shape=box];
	23174739 -> ForLoop23177091;
	_JOIN_23185243 [label="_JOIN_23185243None...",shape=box];
	_JOIN_23185243 -> ForLoop23185317;
	ForLoop23186436 [label="ForLoop23186436  for (k=(min(ny-1,kkk+1023))-(((min(ny-1,kkk+1023))-(kt)+1)%9)+1; k<=min(ny-1,kkk+1023); k=k+1) {...",shape=box];
	ForLoop23186436 -> 23235912;
	ForLoop23186436 -> _JOIN_23186436;
	ForLoop23185243 [label="ForLoop23185243  for (k=kt; k<=min(ny-1,kkk+1023)-8; k=k+9) {...",shape=box];
	ForLoop23185243 -> 23216372;
	ForLoop23185243 -> _JOIN_23185243;
	23203128 [label="23203128  double scv_28;...",shape=box];
	23216372 [label="23216372  double scv_137, scv_138, scv_139, scv_140, scv_141, scv_142, scv_143, scv_144;...",shape=box];
	ForLoop23183337 [label="ForLoop23183337  for (k=(min(ny-1,kkk+1023))-(((min(ny-1,kkk+1023))-(kt)+1)%9)+1; k<=min(ny-1,kkk+1023); k=k+1) {...",shape=box];
	ForLoop23183337 -> 23212886;
	ForLoop23183337 -> _JOIN_23183337;
	23209622 [label="23209622  double scv_47, scv_48, scv_49, scv_50, scv_51, scv_52, scv_53, scv_54;...",shape=box];
	_JOIN_23062359 [label="_JOIN_23062359None...",shape=box];
	_JOIN_23062359 -> 23062730;
	ForLoop23186101 [label="ForLoop23186101  for (kt=kkk; kt<=min(ny-1,kkk+1023)-7; kt=kt+8) {...",shape=box];
	ForLoop23186101 -> 23235106;
	ForLoop23186101 -> _JOIN_23186101;
	ForLoop23185716 [label="ForLoop23185716  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop23185716 -> ForLoop23181022;
	ForLoop23185716 -> _JOIN_23185716;
	ForLoop23185713 [label="ForLoop23185713  for (k=(min(ny-1,kkk+1023))-(((min(ny-1,kkk+1023))-(kt)+1)%9)+1; k<=min(ny-1,kkk+1023); k=k+1) {...",shape=box];
	ForLoop23185713 -> 23217386;
	ForLoop23185713 -> _JOIN_23185713;
	_JOIN_23185639 [label="_JOIN_23185639None...",shape=box];
	_JOIN_23185639 -> ForLoop23185713;
	ForLoop23182867 [label="ForLoop23182867  for (k=kt; k<=min(ny-1,kkk+1023)-8; k=k+9) {...",shape=box];
	ForLoop23182867 -> 23211872;
	ForLoop23182867 -> _JOIN_23182867;
	23182151 [label="23182151  int k;...",shape=box];
	23182151 -> ForLoop23182471;
	_JOIN_23184129 [label="_JOIN_23184129None...",shape=box];
	_JOIN_23184129 -> 23184131;
	23209136 [label="23209136  double scv_46;...",shape=box];
	_JOIN_23182149 [label="_JOIN_23182149None...",shape=box];
	_JOIN_23182149 -> 23182151;
	23212136 [label="23212136  double scv_86;...",shape=box];
	_JOIN_23182545 [label="_JOIN_23182545None...",shape=box];
	_JOIN_23182545 -> 23182547;
	_JOIN_23181679 [label="_JOIN_23181679None...",shape=box];
	_JOIN_23181679 -> ForLoop23181753;
	ForLoop23182471 [label="ForLoop23182471  for (k=kt; k<=min(ny-1,kkk+1023)-8; k=k+9) {...",shape=box];
	ForLoop23182471 -> 23211122;
	ForLoop23182471 -> _JOIN_23182471;
	ForLoop23185317 [label="ForLoop23185317  for (k=(min(ny-1,kkk+1023))-(((min(ny-1,kkk+1023))-(kt)+1)%9expected=9369846271501.798828
actual=9369846271501.798828
)+1; k<=min(ny-1,kkk+1023); k=k+1) {...",shape=box];
	ForLoop23185317 -> 23216636;
	ForLoop23185317 -> _JOIN_23185317;
	_JOIN_23172582 [label="_JOIN_23172582None...",shape=box];
	_JOIN_23172582 -> _JOIN_23172583;
	_JOIN_23172583 [label="_JOIN_23172583None...",shape=box];
	_JOIN_23172583 -> ForLoop23177345;
	_JOIN_23172581 [label="_JOIN_23172581None...",shape=box];
	_JOIN_23172581 -> _JOIN_23172582;
	_JOIN_23184525 [label="_JOIN_23184525None...",shape=box];
	_JOIN_23184525 -> 23184527;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest97.exe __orio_perftest97.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest97.exe  
{'[6, 2, 0, 4, 6, 5, 0, 0, 28, 11, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0802362}
{'[6, 2, 0, 4, 6, 5, 0, 0, 28, 11, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0792449}
{'[6, 2, 0, 4, 6, 5, 0, 0, 28, 11, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0794291}
{'[6, 2, 0, 4, 6, 5, 0, 0, 28, 11, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0803499}
{'[6, 2, 0, 4, 6, 5, 0, 0, 28, 11, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.079303}
{'[6, 2, 0, 4, 6, 5, 0, 0, 28, 11, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0793531}
{'[6, 2, 0, 4, 6, 5, 0, 0, 28, 11, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0793679}
{'[6, 2, 0, 4, 6, 5, 0, 0, 28, 11, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0792992}
{'[6, 2, 0, 4, 6, 5, 0, 0, 28, 11, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.079314}
{'[6, 2, 0, 4, 6, 5, 0, 0, 28, 11, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.079335}
{'[6, 2, 0, 4, 6, 5, 0, 0, 28, 11, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0793319}
{'[6, 2, 0, 4, 6, 5, 0, 0, 28, 11, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.079299}
{'[6, 2, 0, 4, 6, 5, 0, 0, 28, 11, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0793722}
{'[6, 2, 0, 4, 6, 5, 0, 0, 28, 11, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.079354}
{'[6, 2, 0, 4, 6, 5, 0, 0, 28, 11, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0793638}
{'[6, 2, 0, 4, 6, 5, 0, 0, 28, 11, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0797682}
{'[6, 2, 0, 4, 6, 5, 0, 0, 28, 11, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.079366}
{'[6, 2, 0, 4, 6, 5, 0, 0, 28, 11, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.079334}
{'[6, 2, 0, 4, 6, 5, 0, 0, 28, 11, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0794079}
{'[6, 2, 0, 4, 6, 5, 0, 0, 28, 11, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0793769}
{'[6, 2, 0, 4, 6, 5, 0, 0, 28, 11, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0793629}
{'[6, 2, 0, 4, 6, 5, 0, 0, 28, 11, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.079314}
{'[6, 2, 0, 4, 6, 5, 0, 0, 28, 11, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0794559}
{'[6, 2, 0, 4, 6, 5, 0, 0, 28, 11, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.07935}
{'[6, 2, 0, 4, 6, 5, 0, 0, 28, 11, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0794141}
{'[6, 2, 0, 4, 6, 5, 0, 0, 28, 11, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0793998}
{'[6, 2, 0, 4, 6, 5, 0, 0, 28, 11, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0793209}
{'[6, 2, 0, 4, 6, 5, 0, 0, 28, 11, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0793309}
{'[6, 2, 0, 4, 6, 5, 0, 0, 28, 11, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0803552}
{'[6, 2, 0, 4, 6, 5, 0, 0, 28, 11, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0793619}

out:
 ["{'[6, 2, 0, 4, 6, 5, 0, 0, 28, 11, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0802362}", "{'[6, 2, 0, 4, 6, 5, 0, 0, 28, 11, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0792449}", "{'[6, 2, 0, 4, 6, 5, 0, 0, 28, 11, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0794291}", "{'[6, 2, 0, 4, 6, 5, 0, 0, 28, 11, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0803499}", "{'[6, 2, 0, 4, 6, 5, 0, 0, 28, 11, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.079303}", "{'[6, 2, 0, 4, 6, 5, 0, 0, 28, 11, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0793531}", "{'[6, 2, 0, 4, 6, 5, 0, 0, 28, 11, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0793679}", "{'[6, 2, 0, 4, 6, 5, 0, 0, 28, 11, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0792992}", "{'[6, 2, 0, 4, 6, 5, 0, 0, 28, 11, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.079314}", "{'[6, 2, 0, 4, 6, 5, 0, 0, 28, 11, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.079335}", "{'[6, 2, 0, 4, 6, 5, 0, 0, 28, 11, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0793319}", "{'[6, 2, 0, 4, 6, 5, 0, 0, 28, 11, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.079299}", "{'[6, 2, 0, 4, 6, 5, 0, 0, 28, 11, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0793722}", "{'[6, 2, 0, 4, 6, 5, 0, 0, 28, 11, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.079354}", "{'[6, 2, 0, 4, 6, 5, 0, 0, 28, 11, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0793638}", "{'[6, 2, 0, 4, 6, 5, 0, 0, 28, 11, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0797682}", "{'[6, 2, 0, 4, 6, 5, 0, 0, 28, 11, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.079366}", "{'[6, 2, 0, 4, 6, 5, 0, 0, 28, 11, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.079334}", "{'[6, 2, 0, 4, 6, 5, 0, 0, 28, 11, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0794079}", "{'[6, 2, 0, 4, 6, 5, 0, 0, 28, 11, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0793769}", "{'[6, 2, 0, 4, 6, 5, 0, 0, 28, 11, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0793629}", "{'[6, 2, 0, 4, 6, 5, 0, 0, 28, 11, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.079314}", "{'[6, 2, 0, 4, 6, 5, 0, 0, 28, 11, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0794559}", "{'[6, 2, 0, 4, 6, 5, 0, 0, 28, 11, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.07935}", "{'[6, 2, 0, 4, 6, 5, 0, 0, 28, 11, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0794141}", "{'[6, 2, 0, 4, 6, 5, 0, 0, 28, 11, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0793998}", "{'[6, 2, 0, 4, 6, 5, 0, 0, 28, 11, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0793209}", "{'[6, 2, 0, 4, 6, 5, 0, 0, 28, 11, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0793309}", "{'[6, 2, 0, 4, 6, 5, 0, 0, 28, 11, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0803552}", "{'[6, 2, 0, 4, 6, 5, 0, 0, 28, 11, 0, 8, 1, 0, 1, 1, 1, 0]' : 0.0793619}"]
returning from 'run': {'[6, 2, 0, 4, 6, 5, 0, 0, 28, 11, 0, 8, 1, 0, 1, 1, 1, 0]': ([0.0802362, 0.0792449, 0.0794291, 0.0803499, 0.079303, 0.0793531, 0.0793679, 0.0792992, 0.079314, 0.079335, 0.0793319, 0.079299, 0.0793722, 0.079354, 0.0793638, 0.0797682, 0.079366, 0.079334, 0.0794079, 0.0793769, 0.0793629, 0.079314, 0.0794559, 0.07935, 0.0794141, 0.0793998, 0.0793209, 0.0793309, 0.0803552, 0.0793619], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.0802362, 0.0792449, 0.0794291, 0.0803499, 0.079303, 0.0793531, 0.0793679, 0.0792992, 0.079314, 0.079335, 0.0793319, 0.079299, 0.0793722, 0.079354, 0.0793638, 0.0797682, 0.079366, 0.079334, 0.0794079, 0.0793769, 0.0793629, 0.079314, 0.0794559, 0.07935, 0.0794141, 0.0793998, 0.0793209, 0.0793309, 0.0803552, 0.0793619], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[6, 2, 0, 4, 6, 5, 0, 0, 28, 11, 0, 8, 1, 0, 1, 1, 1, 0]': ([0.0802362, 0.0792449, 0.0794291, 0.0803499, 0.079303, 0.0793531, 0.0793679, 0.0792992, 0.079314, 0.079335, 0.0793319, 0.079299, 0.0793722, 0.079354, 0.0793638, 0.0797682, 0.079366, 0.079334, 0.0794079, 0.0793769, 0.0793629, 0.079314, 0.0794559, 0.07935, 0.0794141, 0.0793998, 0.0793209, 0.0793309, 0.0803552, 0.0793619], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [6, 0, 3, 6, 1, 1, 19, 0, 20, 5, 0, 2, 0, 1]
Fixed Factors: {'T2_K': 5, 'T2_J': 6, 'SCR': 1, 'VEC1': 1}
Testing candidate 27: [6, 0, 3, 6, 6, 5, 1, 1, 19, 0, 20, 5, 0, 2, 0, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		274
        Multiplications: 	78
        Divisions: 		0
        Logical: 		0
        Reads: 			565
        Writes: 		115
        Comparisons:		14
        Gotos: 			0
        
digraph CFG {
	ForLoop23289602 [label="ForLoop23289602  for (kk=kkk; kk<=min(ny-1,kkk+960); kk=kk+64) {...",shape=box];
	ForLoop23289602 -> 23289285;
	ForLoop23289602 -> _JOIN_23289602;
	ForLoop23289603 [label="ForLoop23289603  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop23289603 -> ForLoop23289602;
	ForLoop23289603 -> _JOIN_23289603;
	ForLoop23289606 [label="ForLoop23289606  for (ii=iii; ii<=min(nx-1,iii+1536); ii=ii+512) {...",shape=box];
	ForLoop23289606 -> ForLoop23289605;
	ForLoop23289606 -> _JOIN_23289606;
	ForLoop23289607 [label="ForLoop23289607  for (iii=0; iii<=nx-1; iii=iii+2048) {...",shape=box];
	ForLoop23289607 -> ForLoop23289606;
	ForLoop23289607 -> _JOIN_23289607;
	23250462 [label="23250462  y[i]=0.0;...",shape=box];
	23250462 -> _JOIN_23250463;
	ForLoop23289605 [label="ForLoop23289605  for (i=ii; i<=min(nx-1,ii+511); i=i+1) {...",shape=box];
	ForLoop23289605 -> 23294976;
	ForLoop23289605 -> _JOIN_expected=0.000000
actual=9369846271501.798828
23289605;
	_JOIN_23289221 [label="_JOIN_23289221None...",shape=box];
	_JOIN_23289221 -> _JOIN_23289223;
	23289600 [label="23289600  for (k=kk; k<=min(ny-1,kk+63); k=k+1) ...",shape=box];
	23289600 -> _JOIN_23289602;
	_JOIN_23250463 [label="_JOIN_23250463None...",shape=box];
	_JOIN_23250463 -> 23288177;
	23288320 [label="23288320  scv_8=scv_8+A[i*ny+jt]*x_copy[(jt-jjj)];...",shape=box];
	ForLoop23289223 [label="ForLoop23289223  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop23289223 -> 23288277;
	ForLoop23289223 -> _JOIN_23289223;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 23249879;
	_JOIN_23289568 [label="_JOIN_23289568None...",shape=box];
	_JOIN_23289568 -> 23289600;
	_JOIN_23250394 [label="_JOIN_23250394None...",shape=box];
	_JOIN_23250394 -> 23250684;
	ForLoop23250463 [label="ForLoop23250463  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop23250463 -> 23250462;
	ForLoop23250463 -> _JOIN_23250463;
	ForLoop23289221 [label="ForLoop23289221  for (jt=jjj; jt<=cbv_1; jt=jt+32) {...",shape=box];
	ForLoop23289221 -> 23288320;
	ForLoop23289221 -> _JOIN_23289221;
	_JOIN_23289223 [label="_JOIN_23289223None...",shape=box];
	_JOIN_23289223 -> ForLoop23289603;
	ForLoop23250394 [label="ForLoop23250394  for (i=0; i<=cbv_1; i=i+20) {...",shape=box];
	ForLoop23250394 -> 23250221;
	ForLoop23250394 -> _JOIN_23250394;
	23292656 [label="23292656  double scv_7;...",shape=box];
	_JOIN_23289494 [label="_JOIN_23289494None...",shape=box];
	_JOIN_23289494 -> 23298910;
	23294976 [label="23294976  double scv_8;...",shape=box];
	23288177 [label="23288177  double x_copy[2048];...",shape=box];
	23298910 [label="23298910  register int cbv_3, cbv_4;...",shape=box];
	23292430 [label="23292430  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6;...",shape=box];
	23250684 [label="23250684  register int cbv_2, cbv_3;...",shape=box];
	23294988 [label="23294988  tmp[i]=scv_8;...",shape=box];
	23294988 -> _JOIN_23289605;
	ForLoop23289568 [label="ForLoop23289568  for (k=cbv_3; k<=cbv_4; k=k+1) {...",shape=box];
	ForLoop23289568 -> 23292656;
	ForLoop23289568 -> _JOIN_23289568;
	23250221 [label="23250221  y[i]=0.0;...",shape=box];
	23289285 [label="23289285  for (k=kk; k<=min(ny-1,kk+63); k=k+1) ...",shape=box];
	23288277 [label="23288277  for (j=jjj; j<=min(ny-1,jjj+2047); j=j+1) ...",shape=box];
	_JOIN_23289606 [label="_JOIN_23289606None...",shape=box];
	_JOIN_23289606 -> _JOIN_23289607;
	_JOIN_23289607 [label="_JOIN_23289607None...",shape=box];
	_JOIN_23289605 [label="_JOIN_23289605None...",shape=box];
	_JOIN_23289605 -> _JOIN_23289606;
	_JOIN_23289602 [label="_JOIN_23289602None...",shape=box];
	_JOIN_23289602 -> _JOIN_23289603;
	_JOIN_23289603 [label="_JOIN_23289603None...",shape=box];
	_JOIN_23289603 -> 23294988;
	23249879 [label="23249879  int i;...",shape=box];
	ForLoop23289494 [label="ForLoop23289494  for (k=kk; k<=cbv_2; k=k+6) {...",shape=box];
	ForLoop23289494 -> 23292430;
	ForLoop23289494 -> _JOIN_23289494;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest98.exe __orio_perftest98.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest98.exe  
{'[6, 0, 3, 6, 6, 5, 1, 1, 19, 0, 20, 5, 0, 2, 0, 1, 1, 1]' : 0.194313}
{'[6, 0, 3, 6, 6, 5, 1, 1, 19, 0, 20, 5, 0, 2, 0, 1, 1, 1]' : 0.193024}
{'[6, 0, 3, 6, 6, 5, 1, 1, 19, 0, 20, 5, 0, 2, 0, 1, 1, 1]' : 0.193022}
{'[6, 0, 3, 6, 6, 5, 1, 1, 19, 0, 20, 5, 0, 2, 0, 1, 1, 1]' : 0.193006}
{'[6, 0, 3, 6, 6, 5, 1, 1, 19, 0, 20, 5, 0, 2, 0, 1, 1, 1]' : 0.193083}
{'[6, 0, 3, 6, 6, 5, 1, 1, 19, 0, 20, 5, 0, 2, 0, 1, 1, 1]' : 0.193035}
{'[6, 0, 3, 6, 6, 5, 1, 1, 19, 0, 20, 5, 0, 2, 0, 1, 1, 1]' : 0.193147}
{'[6, 0, 3, 6, 6, 5, 1, 1, 19, 0, 20, 5, 0, 2, 0, 1, 1, 1]' : 0.193184}
{'[6, 0, 3, 6, 6, 5, 1, 1, 19, 0, 20, 5, 0, 2, 0, 1, 1, 1]' : 0.193176}
{'[6, 0, 3, 6, 6, 5, 1, 1, 19, 0, 20, 5, 0, 2, 0, 1, 1, 1]' : 0.193129}
{'[6, 0, 3, 6, 6, 5, 1, 1, 19, 0, 20, 5, 0, 2, 0, 1, 1, 1]' : 0.193055}
{'[6, 0, 3, 6, 6, 5, 1, 1, 19, 0, 20, 5, 0, 2, 0, 1, 1, 1]' : 0.194023}
{'[6, 0, 3, 6, 6, 5, 1, 1, 19, 0, 20, 5, 0, 2, 0, 1, 1, 1]' : 0.193088}
{'[6, 0, 3, 6, 6, 5, 1, 1, 19, 0, 20, 5, 0, 2, 0, 1, 1, 1]' : 0.192983}
{'[6, 0, 3, 6, 6, 5, 1, 1, 19, 0, 20, 5, 0, 2, 0, 1, 1, 1]' : 0.19304}
{'[6, 0, 3, 6, 6, 5, 1, 1, 19, 0, 20, 5, 0, 2, 0, 1, 1, 1]' : 0.192996}
{'[6, 0, 3, 6, 6, 5, 1, 1, 19, 0, 20, 5, 0, 2, 0, 1, 1, 1]' : 0.193339}
{'[6, 0, 3, 6, 6, 5, 1, 1, 19, 0, 20, 5, 0, 2, 0, 1, 1, 1]' : 0.193058}
{'[6, 0, 3, 6, 6, 5, 1, 1, 19, 0, 20, 5, 0, 2, 0, 1, 1, 1]' : 0.193047}
{'[6, 0, 3, 6, 6, 5, 1, 1, 19, 0, 20, 5, 0, 2, 0, 1, 1, 1]' : 0.193069}
{'[6, 0, 3, 6, 6, 5, 1, 1, 19, 0, 20, 5, 0, 2, 0, 1, 1, 1]' : 0.193023}
{'[6, 0, 3, 6, 6, 5, 1, 1, 19, 0, 20, 5, 0, 2, 0, 1, 1, 1]' : 0.194363}
{'[6, 0, 3, 6, 6, 5, 1, 1, 19, 0, 20, 5, 0, 2, 0, 1, 1, 1]' : 0.193038}
{'[6, 0, 3, 6, 6, 5, 1, 1, 19, 0, 20, 5, 0, 2, 0, 1, 1, 1]' : 0.19306}
{'[6, 0, 3, 6, 6, 5, 1, 1, 19, 0, 20, 5, 0, 2, 0, 1, 1, 1]' : 0.19322}
{'[6, 0, 3, 6, 6, 5, 1, 1, 19, 0, 20, 5, 0, 2, 0, 1, 1, 1]' : 0.193033}
{'[6, 0, 3, 6, 6, 5, 1, 1, 19, 0, 20, 5, 0, 2, 0, 1, 1, 1]' : 0.193109}
{'[6, 0, 3, 6, 6, 5, 1, 1, 19, 0, 20, 5, 0, 2, 0, 1, 1, 1]' : 0.193072}
{'[6, 0, 3, 6, 6, 5, 1, 1, 19, 0, 20, 5, 0, 2, 0, 1, 1, 1]' : 0.193167}
{'[6, 0, 3, 6, 6, 5, 1, 1, 19, 0, 20, 5, 0, 2, 0, 1, 1, 1]' : 0.19302}

out:
 ["{'[6, 0, 3, 6, 6, 5, 1, 1, 19, 0, 20, 5, 0, 2, 0, 1, 1, 1]' : 0.194313}", "{'[6, 0, 3, 6, 6, 5, 1, 1, 19, 0, 20, 5, 0, 2, 0, 1, 1, 1]' : 0.193024}", "{'[6, 0, 3, 6, 6, 5, 1, 1, 19, 0, 20, 5, 0, 2, 0, 1, 1, 1]' : 0.193022}", "{'[6, 0, 3, 6, 6, 5, 1, 1, 19, 0, 20, 5, 0, 2, 0, 1, 1, 1]' : 0.193006}", "{'[6, 0, 3, 6, 6, 5, 1, 1, 19, 0, 20, 5, 0, 2, 0, 1, 1, 1]' : 0.193083}", "{'[6, 0, 3, 6, 6, 5, 1, 1, 19, 0, 20, 5, 0, 2, 0, 1, 1, 1]' : 0.193035}", "{'[6, 0, 3, 6, 6, 5, 1, 1, 19, 0, 20, 5, 0, 2, 0, 1, 1, 1]' : 0.193147}", "{'[6, 0, 3, 6, 6, 5, 1, 1, 19, 0, 20, 5, 0, 2, 0, 1, 1, 1]' : 0.193184}", "{'[6, 0, 3, 6, 6, 5, 1, 1, 19, 0, 20, 5, 0, 2, 0, 1, 1, 1]' : 0.193176}", "{'[6, 0, 3, 6, 6, 5, 1, 1, 19, 0, 20, 5, 0, 2, 0, 1, 1, 1]' : 0.193129}", "{'[6, 0, 3, 6, 6, 5, 1, 1, 19, 0, 20, 5, 0, 2, 0, 1, 1, 1]' : 0.193055}", "{'[6, 0, 3, 6, 6, 5, 1, 1, 19, 0, 20, 5, 0, 2, 0, 1, 1, 1]' : 0.194023}", "{'[6, 0, 3, 6, 6, 5, 1, 1, 19, 0, 20, 5, 0, 2, 0, 1, 1, 1]' : 0.193088}", "{'[6, 0, 3, 6, 6, 5, 1, 1, 19, 0, 20, 5, 0, 2, 0, 1, 1, 1]' : 0.192983}", "{'[6, 0, 3, 6, 6, 5, 1, 1, 19, 0, 20, 5, 0, 2, 0, 1, 1, 1]' : 0.19304}", "{'[6, 0, 3, 6, 6, 5, 1, 1, 19, 0, 20, 5, 0, 2, 0, 1, 1, 1]' : 0.192996}", "{'[6, 0, 3, 6, 6, 5, 1, 1, 19, 0, 20, 5, 0, 2, 0, 1, 1, 1]' : 0.193339}", "{'[6, 0, 3, 6, 6, 5, 1, 1, 19, 0, 20, 5, 0, 2, 0, 1, 1, 1]' : 0.193058}", "{'[6, 0, 3, 6, 6, 5, 1, 1, 19, 0, 20, 5, 0, 2, 0, 1, 1, 1]' : 0.193047}", "{'[6, 0, 3, 6, 6, 5, 1, 1, 19, 0, 20, 5, 0, 2, 0, 1, 1, 1]' : 0.193069}", "{'[6, 0, 3, 6, 6, 5, 1, 1, 19, 0, 20, 5, 0, 2, 0, 1, 1, 1]' : 0.193023}", "{'[6, 0, 3, 6, 6, 5, 1, 1, 19, 0, 20, 5, 0, 2, 0, 1, 1, 1]' : 0.194363}", "{'[6, 0, 3, 6, 6, 5, 1, 1, 19, 0, 20, 5, 0, 2, 0, 1, 1, 1]' : 0.193038}", "{'[6, 0, 3, 6, 6, 5, 1, 1, 19, 0, 20, 5, 0, 2, 0, 1, 1, 1]' : 0.19306}", "{'[6, 0, 3, 6, 6, 5, 1, 1, 19, 0, 20, 5, 0, 2, 0, 1, 1, 1]' : 0.19322}", "{'[6, 0, 3, 6, 6, 5, 1, 1, 19, 0, 20, 5, 0, 2, 0, 1, 1, 1]' : 0.193033}", "{'[6, 0, 3, 6, 6, 5, 1, 1, 19, 0, 20, 5, 0, 2, 0, 1, 1, 1]' : 0.193109}", "{'[6, 0, 3, 6, 6, 5, 1, 1, 19, 0, 20, 5, 0, 2, 0, 1, 1, 1]' : 0.193072}", "{'[6, 0, 3, 6, 6, 5, 1, 1, 19, 0, 20, 5, 0, 2, 0, 1, 1, 1]' : 0.193167}", "{'[6, 0, 3, 6, 6, 5, 1, 1, 19, 0, 20, 5, 0, 2, 0, 1, 1, 1]' : 0.19302}"]
returning from 'run': {'[6, 0, 3, 6, 6, 5, 1, 1, 19, 0, 20, 5, 0, 2, 0, 1, 1, 1]': ([0.194313, 0.193024, 0.193022, 0.193006, 0.193083, 0.193035, 0.193147, 0.193184, 0.193176, 0.193129, 0.193055, 0.194023, 0.193088, 0.192983, 0.19304, 0.192996, 0.193339, 0.193058, 0.193047, 0.193069, 0.193023, 0.194363, 0.193038, 0.19306, 0.19322, 0.193033, 0.193109, 0.193072, 0.193167, 0.19302], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.194313, 0.193024, 0.193022, 0.193006, 0.193083, 0.193035, 0.193147, 0.193184, 0.193176, 0.193129, 0.193055, 0.194023, 0.193088, 0.192983, 0.19304, 0.192996, 0.193339, 0.193058, 0.193047, 0.193069, 0.193023, 0.194363, 0.193038, 0.19306, 0.19322, 0.193033, 0.193109, 0.193072, 0.193167, 0.19302], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 3, 6, 6, 5, 1, 1, 19, 0, 20, 5, 0, 2, 0, 1, 1, 1]': ([0.194313, 0.193024, 0.193022, 0.193006, 0.193083, 0.193035, 0.193147, 0.193184, 0.193176, 0.193129, 0.193055, 0.194023, 0.193088, 0.192983, 0.19304, 0.192996, 0.193339, 0.193058, 0.193047, 0.193069, 0.193023, 0.194363, 0.193038, 0.19306, 0.19322, 0.193033, 0.193109, 0.193072, 0.193167, 0.19302], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [3, 5, 5, 5, 1, 1, 21, 20, 16, 0, 2, 0, 0, 0]
Fixed Factors: {'T2_K': 5, 'T2_J': 6, 'SCR': 1, 'VEC1': 1}
Testing candidate 28: [3, 5, 5, 5, 6, 5, 1, 1, 21, 20, 16, 0, 2, 0, 0, 1, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	137
        Max loop nest depth: 	6
        Additions: 		5511
        Multiplications: 	2052
        Divisions: 		0
        Logical: 		0
        Reads: 			9853
        Writes: 		1550
        Comparisons:		137
        Gotos: 			0
        
digraph CFG {
	23818545 [label="23818545  tmp[i]=scv_75;...",shape=box];
	23818545 -> _JOIN_23654997;
	_JOIN_23650670 [label="_JOIN_23650670None...",shape=box];
	_JOIN_23650670 -> 23650702;
	23683184 [label="23683184  double scv_18;...",shape=box];
	ForLoop23648441 [label="ForLoop23648441  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jj)+1)%17)+1; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop23648441 -> 23648440;
	ForLoop23648441 -> _JOIN_23648441;
	23636479 [label="23636479  int i;...",shape=box];
	23636479 -> ForLoop23654186;
	_JOIN_23652159 [label="_JOIN_23652159None...",shape=box];
	_JOIN_23652159 -> _JOIN_23652161;
	_JOIN_23641754 [label="_JOIN_23641754None...",shape=box];
	_JOIN_23641754 -> 23641786;
	ForLoop23646875 [label="ForLoop23646875  for (j=jj; j<=min(ny-1,jj+255)-16; j=j+17) {...",shape=box];
	ForLoop23646875 -> 23646297;
	ForLoop23646875 -> _JOIN_23646875;
	ForLoop23645389 [label="ForLoop23645389  for (j=jj; j<=min(ny-1,jj+255)-16; j=j+17) {...",shape=box];
	ForLoop23645389 -> 23644811;
	ForLoop23645389 -> _JOIN_23645389;
	23636473 [label="23636473  for (k=kk; k<=min(ny-1,kk+255); k=k+1) ...",shape=box];
	23636473 -> _JOIN_23636475;
	_JOIN_23646875 [label="_JOIN_23646875None...",shape=box];
	_JOIN_23646875 -> ForLoop23646955;
	_JOIN_23643240 [label="_JOIN_23643240None...",shape=box];
	_JOIN_23643240 -> 23643272;
	23792916 [label="23792916  double scv_52;...",shape=box];
	ForLoop23655001 [label="ForLoop23655001  for (iii=0; iii<=nx-1; iii=iii+1024) {...",shape=box];
	ForLoop23655001 -> ForLoop23655000;
	ForLoop23655001 -> _JOIN_23655001;
	_JOIN_23636476 [label="_JOIN_23636476None...",shape=box];
	_JOIN_23636476 -> 23737395;
	_JOIN_23636475 [label="_JOIN_23636475None...",shape=box];
	_JOIN_23636475 -> _JOIN_23636476;
	23652155 [label="23652155  scv_53=scv_53+A[(i+20)*ny+j]*x_copy[(j-jj)];...",shape=box];
	23652155 -> _JOIN_23652156;
	ForLoop23637225 [label="ForLoop23637225  for (j=jj; j<=min(ny-1,jj+255)-16; j=j+17) {...",shape=box];
	ForLoop23637225 -> 23636791;
	ForLoop23637225 -> _JOIN_23637225;
	_JOIN_23655000 [label="_JOIN_23655000None...",shape=box];
	_JOIN_23655000 -> _JOIN_23655001;
	_JOIN_23636478 [label="_JOIN_23636478None...",shape=box];
	_JOIN_23636478 -> 23636479;
	23299531 [label="23299531  y[i]=0.0;...",shape=box];
	23641753 [label="23641753  scv_62=scv_62+A[(i+6)*ny+j]*x_copy[(j-jj)];...",shape=box];
	23641753 -> _JOIN_23641754;
	ForLoop23647618 [label="ForLoop23647618  for (j=jj; j<=min(ny-1,jj+255)-16; j=j+17) {...",shape=box];
	ForLoop23647618 -> 23647040;
	ForLoop23647618 -> _JOIN_23647618;
	23642496 [label="23642496  scv_61=scv_61+A[(i+7)*ny+j]*x_copy[(j-jj)];...",shape=box];
	23642496 -> _JOIN_23642497;
	23651445 [label="23651445  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	23645554 [label="23645554  scv_54=scv_54+A[(i+12)*ny+j]*x_copy[(j-jj)];...",shape=box];
	23638124 [label="23638124  scv_68=scv_68+A[(i+2)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_23652156 [label="_JOIN_23652156None...",shape=box];
	_JOIN_23652156 -> _JOIN_23652159;
	ForLoop23638702 [label="ForLoop23638702  for (j=jj; j<=min(ny-1,jj+255)-16; j=j+17) {...",shape=box];
	ForLoop23638702 -> 23638124;
	ForLoop23638702 -> _JOIN_23638702;
	23648440 [label="23648440  scv_63=scv_63+A[(i+15)*ny+j]*x_copy[(j-jj)];...",shape=box];
	23648440 -> _JOIN_23648441;
	ForLoop23650670 [label="ForLoop23650670  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jj)+1)%17)+1; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop23650670 -> 23650669;
	ForLoop23650670 -> _JOIN_23650670;
	23814158 [label="23814158  tmp[(i+20)]=scv_53;...",shape=box];
	ForLoop23641011 [label="ForLoop23641011  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jj)+1)%17)+1; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop23641011 -> 23641010;
	ForLoop23641011 -> _JOIN_23641011;
	23654345 [label="23654345  scv_75=scv_75+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_23639525 [label="_JOIN_23639525None...",shape=box];
	_JOIN_23639525 -> 23639557;
	23647040 [label="23647040  scv_60=scv_60+A[(i+14)*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop23648361 [label="ForLoop23648361  for (j=jj; j<=min(ny-1,jj+255)-16; j=j+17) {...",shape=box];
	ForLoop23648361 -> 23647783;
	ForLoop23648361 -> _JOIN_23648361;
	23643272 [label="23643272  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	_JOIN_23653529 [label="_JOIN_23653529None...",shape=box];
	_JOIN_23653529 -> 23653560;
	_JOIN_23639445 [label="_JOIN_23639445None...",shape=box];
	_JOIN_23639445 -> ForLoop23639525;
	23654849 [label="23654849  scv_75=scv_75+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	23654849 -> _JOIN_23654850;
	_JOIN_23644726 [label="_JOIN_23644726None...",shape=box];
	_JOIN_23644726 -> 23644758;
	ForLoop23646132 [label="ForLoop23646132  for (j=jj; j<=min(ny-1,jj+255)-16; j=j+17) {...",shape=box];
	ForLoop23646132 -> 23645554;
	ForLoop23646132 -> _JOIN_23646132;
	ForLoop23636478 [label="ForLoop23636478  for (it=ii; it<=min(nx-1,ii+63)-31; it=it+32) {...",shape=box];
	ForLoop23636478 -> 23737377;
	ForLoop23636478 -> _JOIN_23636478;
	ForLoop23636442 [label="ForLoop23636442  for (k=kk; k<=min(ny-1,kk+255); k=k+1) {...",shape=box];
	ForLoop23636442 -> 23718051;
	ForLoop23636442 -> _JOIN_23636442;
	23652223 [label="23652223  for (k=kk; k<=min(ny-1,kk+255); k=k+1) ...",shape=box];
	23640353 [label="23640353  scv_67=scv_67+A[(i+5)*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop23651413 [label="ForLoop23651413  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jj)+1)%17)+1; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop23651413 -> 23651412;
	ForLoop23651413 -> _JOIN_23651413;
	_JOIN_23635338 [label="_JOIN_23635338None...",shape=box];
	_JOIN_23635338 -> _JOIN_23635341;
	23648473 [label="23648473  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	ForLoop23645469 [label="ForLoop23645469  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jj)+1)%17)+1; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop23645469 -> 23645468;
	ForLoop23645469 -> _JOIN_23645469;
	23644015 [label="23644015  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	23737395 [label="23737395  tmp[(it+21)]=scv_20;...",shape=box];
	23814140 [label="23814140  double scv_53, scv_54, scv_55, scv_56, scv_57, scv_58, scv_59, scv_60;...",shape=box];
	ForLoop23652161 [label="ForLoop23652161  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop23652161 -> ForLoop23652159;
	ForLoop23652161 -> _JOIN_23652161;
	ForLoop23655000 [label="ForLoop23655000  for (ii=iii; ii<=min(nx-1,iii+960); ii=ii+64) {...",shape=box];
	ForLoop23655000 -> ForLoop23636478;
	ForLoop23655000 -> _JOIN_23655000;
	ForLoop23650590 [label="ForLoop23650590  for (j=jj; j<=min(ny-1,jj+255)-16; j=j+17) {...",shape=box];
	ForLoop23650590 -> 23650012;
	ForLoop23650590 -> _JOIN_23650590;
	23639610 [label="23639610  scv_70=scv_70+A[(i+4)*ny+j]*x_copy[(j-jj)];...",shape=box];
	23737377 [label="23737377  double scv_20, scv_21, scv_22, scv_23, scv_24, scv_25, scv_26, scv_27;...",shape=box];
	23641839 [label="23641839  scv_61=scv_61+A[(i+7)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_23652076 [label="_JOIN_23652076None...",shape=box];
	_JOIN_23652076 -> ForLoop23652156;
	ForLoop23654182 [label="ForLoop23654182  for (kk=kkk; kk<=min(ny-1,kkk+768); kk=kk+256) {...",shape=box];
	ForLoop23654182 -> 23652223;
	ForLoop23654182 -> _JOIN_23654182;
	ForLoop23654186 [label="ForLoop23654186  for (i=it; i<=min(nx-1,ii+63)-20; i=i+21) {...",shape=box];
	ForLoop23654186 -> 23814140;
	ForLoop23654186 -> _JOIN_23654186;
	ForLoop23654184 [label="ForLoop23654184  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop23654184 -> ForLoop23654182;
	ForLoop23654184 -> _JOIN_23654184;
	_JOIN_23654853 [label="_JOIN_23654853None...",shape=box];
	_JOIN_23654853 -> _JOIN_23654854;
	_JOIN_23655001 [label="_JOIN_23655001None...",shape=box];
	23650755 [label="23650755  scv_64=scv_64+A[(i+19)*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop23638039 [label="ForLoop23638039  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jj)+1)%17)+1; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop23638039 -> 23638038;
	ForLoop23638039 -> _JOIN_23638039;
	ForLoop23640931 [label="ForLoop23640931  for (j=jj; j<=min(ny-1,jj+255)-16; j=j+17) {...",shape=box];
	ForLoop23640931 -> 23640353;
	ForLoop23640931 -> _JOIN_23640931;
	23644725 [label="23644725  scv_56=scv_56+A[(i+10)*ny+j]*x_copy[(j-jj)];...",shape=box];
	23644725 -> _JOIN_23644726;
	23299790 [label="23299790  y[i]=0.0;...",shape=box];
	23299790 -> _JOIN_23299791;
	ForLoop23635342 [label="ForLoop23635342  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop23635342 -> ForLoop23635341;
	ForLoop23635342 -> _JOIN_23635342;
	23646244 [label="23646244  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	23300030 [label="23300030  register int cbv_2, cbv_3;...",shape=box];
	ForLoop23646212 [label="ForLoop23646212  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jj)+1)%17)+1; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop23646212 -> 23646211;
	ForLoop23646212 -> _JOIN_23646212;
	23646987 [label="23646987  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	23647783 [label="23647783  scv_63=scv_63+A[(i+15)*ny+j]*x_copy[(j-jj)];...",shape=box];
	23718051 [label="23718051  double scv_19;...",shape=box];
	23638867 [label="23638867  scv_57=scv_57+A[(i+3)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_23646212 [label="_JOIN_23646212None...",shape=box];
	_JOIN_23646212 -> 23646244;
	ForLoop23647698 [label="ForLoop23647698  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jj)+1)%17)+1; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop23647698 -> 23647697;
	ForLoop23647698 -> _JOIN_23647698;
	ForLoop23652156 [label="ForLoop23652156  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jj)+1)%17)+1; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop23652156 -> 23652155;
	ForLoop23652156 -> _JOIN_23652156;
	23614828 [label="23614828  double x_copy[256];...",shape=box];
	_JOIN_23651413 [label="_JOIN_23651413None...",shape=box];
	_JOIN_23651413 -> 23651445;
	_JOIN_23654997 [label="_JOIN_23654997None...",shape=box];
	_JOIN_23654997 -> _JOIN_23655000;
	_JOIN_23654850 [label="_JOIN_23654850None...",shape=box];
	_JOIN_23654850 -> _JOIN_23654853;
	_JOIN_23641011 [label="_JOIN_23641011None...",shape=box];
	_JOIN_23641011 -> 23641043;
	_JOIN_23654994 [label="_JOIN_23654994None...",shape=box];
	_JOIN_23654994 -> _JOIN_23654995;
	23653560 [label="23653560  for (k=kk; k<=min(ny-1,kk+255); k=k+1) ...",shape=box];
	23650012 [label="23650012  scv_72=scv_72+A[(i+18)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_23638039 [label="_JOIN_23638039None...",shape=box];
	_JOIN_23638039 -> 23638071;
	_JOIN_23638702 [label="_JOIN_23638702None...",shape=box];
	_JOIN_23638702 -> ForLoop23638782;
	_JOIN_23654182 [label="_JOIN_23654182None...",shape=box];
	_JOIN_23654182 -> _JOIN_23654184;
	_JOIN_23654186 [label="_JOIN_23654186None...",shape=box];
	_JOIN_23654186 -> ForLoop23654997;
	_JOIN_23640931 [label="_JOIN_23640931None...",shape=box];
	_JOIN_23640931 -> ForLoop23641011;
	_JOIN_23654184 [label="_JOIN_23654184None...",shape=box];
	_JOIN_23654184 -> 23814158;
	_JOIN_23299791 [label="_JOIN_23299791None...",shape=box];
	_JOIN_23299791 -> 23614828;
	23649959 [label="23649959  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	23638071 [label="23638071  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	_JOIN_23648441 [label="_JOIN_23648441None...",shape=box];
	_JOIN_23648441 -> 23648473;
	23637295 [label="23637295  scv_58=scv_58+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	23637295 -> _JOIN_23637296;
	_JOIN_23637959 [label="_JOIN_23637959None...",shape=box];
	_JOIN_23637959 -> ForLoop23638039;
	_JOIN_23637225 [label="_JOIN_23637225None...",shape=box];
	_JOIN_23637225 -> ForLoop23637296;
	23636747 [label="23636747  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	23642582 [label="23642582  scv_73=scv_73+A[(i+8)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_23646132 [label="_JOIN_23646132None...",shape=box];
	_JOIN_23646132 -> ForLoop23646212;
	_JOIN_23643903 [label="_JOIN_23643903None...",shape=box];
	_JOIN_23643903 -> ForLoop23643983;
	ForLoop23639445 [label="ForLoop23639445  for (j=jj; j<=min(ny-1,jj+255)-16; j=j+17) {...",shape=box];
	ForLoop23639445 -> 23638867;
	ForLoop23639445 -> _JOIN_23639445;
	ForLoop23643160 [label="ForLoop23643160  for (j=jj; j<=min(ny-1,jj+255)-16; j=j+17) {...",shape=box];
	ForLoop23643160 -> 23642582;
	ForLoop23643160 -> _JOIN_23643160;
	ForLoop23639525 [label="ForLoop23639525  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jj)+1)%17)+1; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop23639525 -> 23639524;
	ForLoop23639525 -> _JOIN_23639525;
	23681056 [label="23681056  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	23654992 [label="23654992  for (k=kk; k<=min(ny-1,kk+255); k=k+1) ...",shape=box];
	23654992 -> _JOIN_23654994;
	_JOIN_23646955 [label="_JOIN_23646955None...",shape=box];
	_JOIN_23646955 -> 23646987;
	23646297 [label="23646297  scv_59=scv_59+A[(i+13)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_23637296 [label="_JOIN_23637296None...",shape=box];
	_JOIN_23637296 -> 23637328;
	_JOIN_23652161 [label="_JOIN_23652161None...",shape=box];
	_JOIN_23652161 -> ForLoop23654184;
	23638814 [label="23638814  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	23646954 [label="23646954  scv_59=scv_59+A[(i+13)*ny+j]*x_copy[(j-jj)];...",shape=box];
	23646954 -> _JOIN_23646955;
	ForLoop23640188 [label="ForLoop23640188  for (j=jj; j<=min(ny-1,jj+255)-16; j=j+17) {...",shape=box];
	ForLoop23640188 -> 23639610;
	ForLoop23640188 -> _JOIN_23640188;
	23651412 [label="23651412  scv_64=scv_64+A[(i+19)*ny+j]*x_copy[(j-jj)];...",shape=box];
	23651412 -> _JOIN_23651413;
	23637328 [label="23637328  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	_JOIN_23643983 [label="_JOIN_23643983None...",shape=box];
	_JOIN_23643983 -> 23644015;
	23640300 [label="23640300  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 23299159;
	23641010 [label="23641010  scv_67=scv_67+A[(i+5)*ny+j]*x_copy[(j-jj)];...",shape=box];
	23641010 -> _JOIN_23641011;
	ForLoop23654961 [label="ForLoop23654961  for (k=kk; k<=min(ny-1,kk+255); k=k+1) {...",shape=box];
	ForLoop23654961 -> 23817421;
	ForLoop23654961 -> _JOIN_23654961;
	23651498 [label="23651498  scv_53=scv_53+A[(i+20)*ny+j]*x_copy[(j-jj)];...",shape=box];
	23650702 [label="23650702  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	23640267 [label="23640267  scv_70=scv_70+A[(i+4)*ny+j]*x_copy[(j-jj)];...",shape=box];
	23640267 -> _JOIN_23640268;
	_JOIN_23654779 [label="_JOIN_23654779None...",shape=box];
	_JOIN_23654779 -> ForLoop23654850;
	ForLoop23652159 [label="ForLoop23652159  for (jj=jjj; jj<=min(ny-1,jjj+1792); jj=jj+256) {...",shape=box];
	ForLoop23652159 -> 23636747;
	ForLoop23652159 -> _JOIN_23652159;
	ForLoop23644726 [label="ForLoop23644726  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jj)+1)%17)+1; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop23644726 -> 23644725;
	ForLoop23644726 -> _JOIN_23644726;
	ForLoop23654997 [label="ForLoop23654997  for (i=(min(nx-1,ii+63))-(((min(nx-1,ii+63))-(it)+1)%21)+1; i<=min(nx-1,ii+63); i=i+1) {...",shape=box];
	ForLoop23654997 -> 23818533;
	ForLoop23654997 -> _JOIN_23654997;
	ForLoop23654779 [label="ForLoop23654779  for (j=jj; j<=min(ny-1,jj+255)-16; j=j+17) {...",shape=box];
	ForLoop23654779 -> 23654345;
	ForLoop23654779 -> _JOIN_23654779;
	_JOIN_23299722 [label="_JOIN_23299722None...",shape=box];
	_JOIN_23299722 -> 23300030;
	_JOIN_23649847 [label="_JOIN_23649847None...",shape=box];
	_JOIN_23649847 -> ForLoop23649927;
	23641096 [label="23641096  scv_62=scv_62+A[(i+6)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_23649184 [label="_JOIN_23649184None...",shape=box];
	_JOIN_23649184 -> 23649216;
	ForLoop23641754 [label="ForLoop23641754  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jj)+1)%17)+1; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop23641754 -> 23641753;
	ForLoop23641754 -> _JOIN_23641754;
	ForLoop23649927 [label="ForLoop23649927  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jj)+1)%17)+1; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop23649927 -> 23649926;
	ForLoop23649927 -> _JOIN_23649927;
	23643239 [label="23643239  scv_73=scv_73+A[(i+8)*ny+j]*x_copy[(j-jj)];...",shape=box];
	23643239 -> _JOIN_23643240;
	ForLoop23654995 [label="ForLoop23654995  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop23654995 -> ForLoop23654994;
	ForLoop23654995 -> _JOIN_23654995;
	23646211 [label="23646211  scv_54=scv_54+A[(i+12)*ny+j]*x_copy[(j-jj)];...",shape=box];
	23646211 -> _JOIN_23646212;
	23654301 [label="23654301  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	23639557 [label="23639557  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	_JOIN_23649104 [label="_JOIN_23649104None...",shape=box];
	_JOIN_23649104 -> ForLoop23649184;
	_JOIN_23643160 [label="_JOIN_23643160None...",shape=box];
	_JOIN_23643160 -> ForLoop23643240;
	_JOIN_23640268 [label="_JOIN_23640268None...",shape=box];
	_JOIN_23640268 -> 23640300;
	23299159 [label="23299159  int i;...",shape=box];
	_JOIN_23636442 [label="_JOIN_23636442None...",shape=box];
	_JOIN_23636442 -> 23636473;
	23645501 [label="23645501  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	23642529 [label="23642529  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	23644758 [label="23644758  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	23654916 [label="23654916  for (k=kk; k<=min(ny-1,kk+255); k=k+1) ...",shape=box];
	23654916 -> ForLoop23654961;
	23645468 [label="23645468  scv_69=scv_69+A[(i+11)*ny+j]*x_copy[(j-jj)];...",shape=box];
	23645468 -> _JOIN_23645469;
	ForLoop23643240 [label="ForLoop23643240  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jj)+1)%17)+1; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop23643240 -> 23643239;
	ForLoop23643240 -> _JOIN_23643240;
	23648526 [label="23648526  scv_66=scv_66+A[(i+16)*ny+j]*x_copy[(j-jj)];...",shape=box];
	23644811 [label="23644811  scv_69=scv_69+A[(i+11)*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop23653529 [label="ForLoop23653529  for (k=kk; k<=min(ny-1,kk+255); k=k+1) {...",shape=box];
	ForLoop23653529 -> 23792916;
	ForLoop23653529 -> _JOIN_23653529;
	_JOIN_23645469 [label="_JOIN_23645469None...",shape=box];
	_JOIN_23645469 -> 23645501;
	23647697 [label="23647697  scv_60=scv_60+A[(i+14)*ny+j]*x_copy[(j-jj)];...",shape=box];
	23647697 -> _JOIN_23647698;
	23641786 [label="23641786  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	23817421 [label="23817421  double scv_74;...",shape=box];
	ForLoop23640268 [label="ForLoop23640268  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jj)+1)%17)+1; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop23640268 -> 23640267;
	ForLoop23640268 -> _JOIN_23640268;
	ForLoop23649184 [label="ForLoop23649184  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jj)+1)%17)+1; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop23649184 -> 23649183;
	ForLoop23649184 -> _JOIN_23649184;
	23636791 [label="23636791  scv_58=scv_58+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop23654994 [label="ForLoop23654994  for (kk=kkk; kk<=min(ny-1,kkk+768); kk=kk+256) {...",shape=box];
	ForLoop23654994 -> 23654916;
	ForLoop23654994 -> _JOIN_23654994;
	_JOIN_23642417 [label="_JOIN_23642417None...",shape=box];
	_JOIN_23642417 -> ForLoop23642497;
	ForLoop23649847 [label="ForLoop23649847  for (j=jj; j<=min(ny-1,jj+255)-16; j=j+17) {...",shape=box];
	ForLoop23649847 -> 23649269;
	ForLoop23649847 -> _JOIN_23649847;
	_JOIN_23654961 [label="_JOIN_23654961None...",shape=box];
	_JOIN_23654961 -> 23654992;
	_JOIN_23641674 [label="_JOIN_23641674None...",shape=box];
	_JOIN_23641674 -> ForLoop23641754;
	_JOIN_23651333 [label="_JOIN_23651333None...",shape=box];
	_JOIN_23651333 -> ForLoop23651413;
	23643325 [label="23643325  scv_65=scv_65+A[(i+9)*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop23649104 [label="ForLoop23649104  for (j=jj; j<=min(ny-1,jj+255)-16; j=j+17) {...",shape=box];
	ForLoop23649104 -> 23648526;
	ForLoop23649104 -> _JOIN_23649104;
	_JOIN_23644646 [label="_JOIN_23644646None...",shape=box];
	_JOIN_23644646 -> ForLoop23644726;
	23639524 [label="23639524  scv_57=scv_57+A[(i+3)*ny+j]*x_copy[(j-jj)];...",shape=box];
	23639524 -> _JOIN_23639525;
	_JOIN_23635341 [label="_JOIN_23635341None...",shape=box];
	_JOIN_23635341 -> _JOIN_23635342;
	_JOIN_23635342 [label="_JOIN_23635342None...",shape=box];
	_JOIN_23635342 -> ForLoop23636476;
	23649216 [label="23649216  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	ForLoop23636476 [label="ForLoop23636476  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop23636476 -> ForLoop23636475;
	ForLoop23636476 -> _JOIN_23636476;
	ForLoop23636475 [label="ForLoop23636475  for (kk=kkk; kk<=min(ny-1,kkk+768); kk=kk+256) {...",shape=box];
	ForLoop23636475 -> 23635404;
	ForLoop23636475 -> _JOIN_23636475;
	ForLoop23643903 [label="ForLoop23643903  for (j=jj; j<=min(ny-1,jj+255)-16; j=j+17) {...",shape=box];
	ForLoop23643903 -> 23643325;
	ForLoop23643903 -> _JOIN_23643903;
	ForLoop23642417 [label="ForLoop23642417  for (j=jj; j<=min(ny-1,jj+255)-16; j=j+17) {...",shape=box];
	ForLoop23642417 -> 23641839;
	ForLoop23642417 -> _JOIN_23642417;
	_JOIN_23645389 [label="_JOIN_23645389None...",shape=box];
	_JOIN_23645389 -> ForLoop23645469;
	_JOIN_23647618 [label="_JOIN_23647618None...",shape=box];
	_JOIN_23647618 -> ForLoop23647698;
	ForLoop23299722 [label="ForLoop23299722  for (i=0; i<=cbv_1; i=i+22) {...",shape=box];
	ForLoop23299722 -> 23299531;
	ForLoop23299722 -> _JOIN_23299722;
	23637381 [label="23637381  scv_55=scv_55+A[(i+1)*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop23651333 [label="ForLoop23651333  for (j=jj; j<=min(ny-1,jj+255)-16; j=j+17) {...",shape=box];
	ForLoop23651333 -> 23650755;
	ForLoop23651333 -> _JOIN_23651333;
	23644068 [label="23644068  scv_56=scv_56+A[(i+10)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_23647698 [label="_JOIN_23647698None...",shape=box];
	_JOIN_23647698 -> 23647730;
	ForLoop23637959 [label="ForLoop23637959  for (j=jj; j<=min(ny-1,jj+255)-16; j=j+17) {...",shape=box];
	ForLoop23637959 -> 23637381;
	ForLoop23637959 -> _JOIN_23637959;
	23635404 [label="23635404  for (k=kk; k<=min(ny-1,kk+255); k=k+1) ...",shape=box];
	23635404 -> ForLoop23636442;
	ForLoop23641674 [label="ForLoop23641674  for (j=jj; j<=min(ny-1,jj+255)-16; j=j+17) {...",shape=box];
	ForLoop23641674 -> 23641096;
	ForLoop23641674 -> _JOIN_23641674;
	ForLoop23643983 [label="ForLoop23643983  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jj)+1)%17)+1; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop23643983 -> 23643982;
	ForLoop23643983 -> _JOIN_23643983;
	ForLoop23642497 [label="ForLoop23642497  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jj)+1)%17)+1; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop23642497 -> 23642496;
	ForLoop23642497 -> _JOIN_23642497;
	23638781 [label="23638781  scv_68=scv_68+A[(i+2)*ny+j]*x_copy[(j-jj)];...",shape=box];
	23638781 -> _JOIN_23638782;
	23614948 [label="23614948  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	_JOIN_23640188 [label="_JOIN_23640188None...",shape=box];
	_JOIN_23640188 -> ForLoop23640268;
	ForLoop23635341 [label="ForLoop23635341  for (jj=jjj; jj<=min(ny-1,jjj+1792); jj=jj+256) {...",shape=box];
	ForLoop23635341 -> 23614948;
	ForLoop23635341 -> _JOIN_23635341;
	_JOIN_23650590 [label="_JOIN_23650590None...",shape=box];
	_JOIN_23650590 -> ForLoop23650670;
	ForLoop23638782 [label="ForLoop23638782  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jj)+1)%17)+1; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop23638782 -> 23638781;
	ForLoop23638782 -> _JOIN_23638782;
	ForLoop23637296 [label="ForLoop23637296  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jj)+1)%17)+1; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop23637296 -> 23637295;
	ForLoop23637296 -> _JOIN_23637296;
	ForLoop23644646 [label="ForLoop23644646  for (j=jj; j<=min(ny-1,jj+255)-16; j=j+17) {...",shape=box];
	ForLoop23644646 -> 23644068;
	ForLoop23644646 -> _JOIN_23644646;
	ForLoop23299791 [label="ForLoop23299791  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop23299791 -> 23299790;
	ForLoop23299791 -> _JOIN_23299791;
	ForLoop23652076 [label="ForLoop23652076  for (j=jj; j<=min(ny-1,jj+255)-16; j=j+17) {...",shape=box];
	ForLoop23652076 -> 23651498;
	ForLoop23652076 -> _JOIN_23652076;
	23649269 [label="23649269  scv_71=scv_71+A[(i+17)*ny+j]*x_copy[(j-jj)];...",shape=box];
	23649183 [label="23649183  scv_66=scv_66+A[(i+16)*ny+j]*x_copy[(j-jj)];...",shape=box];
	23649183 -> _JOIN_23649184;
	23649926 [label="23649926  scv_71=scv_71+A[(i+17)*ny+j]*x_copy[(j-jj)];...",shape=box];
	23649926 -> _JOIN_23649927;
	_JOIN_23654995 [label="_JOIN_23654995None...",shape=box];
	_JOIN_23654995 -> 23818545;
	23650669 [label="23650669  scv_72=scv_72+A[(i+18)*ny+j]*x_copy[(j-jj)];...",shape=box];
	23650669 -> _JOIN_23650670;
	ForLoop23634274 [label="ForLoop23634274  for (j=jj; j<=min(ny-1,jj+255)-16; j=j+17) {...",shape=box];
	ForLoop23634274 -> 23681056;
	ForLoop23634274 -> _JOIN_23634274;
	23647730 [label="23647730  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	ForLoop23635338 [label="ForLoop23635338  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jj)+1)%17)+1; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop23635338 -> 23683184;
	ForLoop23635338 -> _JOIN_23635338;
	23641043 [label="23641043  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	_JOIN_23638782 [label="_JOIN_23638782None...",shape=box];
	_JOIN_23638782 -> 23638814;
	23638038 [label="23638038  scv_55=scv_55+A[(i+1)*ny+j]*x_copy[(j-jj)];...",shape=box];
	23638038 -> _JOIN_23638039;
	_JOIN_23649927 [label="_JOIN_23649927None...",shape=box];
	_JOIN_23649927 -> 23649959;
	_JOIN_23642497 [label="_JOIN_23642497None...",shape=box];
	_JOIN_23642497 -> 23642529;
	ForLoop23646955 [label="ForLoop23646955  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jj)+1)%17)+1; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop23646955 -> 23646954;
	ForLoop23646955 -> _JOIN_23646955;
	_JOIN_23634274 [label="_JOIN_23634274None...",shape=box];
	_JOIN_23634274 -> ForLoop23635338;
	ForLoop23654850 [label="ForLoop23654850  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jj)+1)%17)+1; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop23654850 -> 23654849;
	ForLoop23654850 -> _JOIN_23654850;
	ForLoop23654853 [label="ForLoop23654853  for (jj=jjj; jj<=min(ny-1,jjj+1792); jj=jj+256) {...",shape=box];
	ForLoop23654853 -> 23654301;
	ForLoop23654853 -> _JOIN_23654853;
	23818533 [label="23818533  double scv_75;...",shape=box];
	ForLoop23654854 [label="ForLoop23654854  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop23654854 -> ForLoop23654853;
	ForLoop23654854 -> _JOIN_23654854;
	23643982 [label="23643982  scv_65=scv_65+A[(i+9)*ny+j]*x_copy[(j-jj)];...",shape=box];
	23643982 -> _JOIN_23643983;
	_JOIN_23654854 [label="_JOIN_23654854None...",shape=box];
	_JOIN_23654854 -> ForLoop23654995;
	_JOIN_23648361 [label="_JOIN_23648361None...",shape=box];
	_JOIN_23648361 -> ForLoop23648441;

}

 building test:
	gcc -Oexpected=9369846271501.798828
actual=9369846271501.798828
3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest99.exe __orio_perftest99.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest99.exe  
{'[3, 5, 5, 5, 6, 5, 1, 1, 21, 20, 16, 0, 2, 0, 0, 1, 1, 0]' : 0.197062}
{'[3, 5, 5, 5, 6, 5, 1, 1, 21, 20, 16, 0, 2, 0, 0, 1, 1, 0]' : 0.197281}
{'[3, 5, 5, 5, 6, 5, 1, 1, 21, 20, 16, 0, 2, 0, 0, 1, 1, 0]' : 0.196009}
{'[3, 5, 5, 5, 6, 5, 1, 1, 21, 20, 16, 0, 2, 0, 0, 1, 1, 0]' : 0.196214}
{'[3, 5, 5, 5, 6, 5, 1, 1, 21, 20, 16, 0, 2, 0, 0, 1, 1, 0]' : 0.197064}
{'[3, 5, 5, 5, 6, 5, 1, 1, 21, 20, 16, 0, 2, 0, 0, 1, 1, 0]' : 0.195749}
{'[3, 5, 5, 5, 6, 5, 1, 1, 21, 20, 16, 0, 2, 0, 0, 1, 1, 0]' : 0.197109}
{'[3, 5, 5, 5, 6, 5, 1, 1, 21, 20, 16, 0, 2, 0, 0, 1, 1, 0]' : 0.196236}
{'[3, 5, 5, 5, 6, 5, 1, 1, 21, 20, 16, 0, 2, 0, 0, 1, 1, 0]' : 0.195942}
{'[3, 5, 5, 5, 6, 5, 1, 1, 21, 20, 16, 0, 2, 0, 0, 1, 1, 0]' : 0.195593}
{'[3, 5, 5, 5, 6, 5, 1, 1, 21, 20, 16, 0, 2, 0, 0, 1, 1, 0]' : 0.197034}
{'[3, 5, 5, 5, 6, 5, 1, 1, 21, 20, 16, 0, 2, 0, 0, 1, 1, 0]' : 0.197238}
{'[3, 5, 5, 5, 6, 5, 1, 1, 21, 20, 16, 0, 2, 0, 0, 1, 1, 0]' : 0.196721}
{'[3, 5, 5, 5, 6, 5, 1, 1, 21, 20, 16, 0, 2, 0, 0, 1, 1, 0]' : 0.197184}
{'[3, 5, 5, 5, 6, 5, 1, 1, 21, 20, 16, 0, 2, 0, 0, 1, 1, 0]' : 0.196769}
{'[3, 5, 5, 5, 6, 5, 1, 1, 21, 20, 16, 0, 2, 0, 0, 1, 1, 0]' : 0.195774}
{'[3, 5, 5, 5, 6, 5, 1, 1, 21, 20, 16, 0, 2, 0, 0, 1, 1, 0]' : 0.197112}
{'[3, 5, 5, 5, 6, 5, 1, 1, 21, 20, 16, 0, 2, 0, 0, 1, 1, 0]' : 0.196384}
{'[3, 5, 5, 5, 6, 5, 1, 1, 21, 20, 16, 0, 2, 0, 0, 1, 1, 0]' : 0.195976}
{'[3, 5, 5, 5, 6, 5, 1, 1, 21, 20, 16, 0, 2, 0, 0, 1, 1, 0]' : 0.197411}
{'[3, 5, 5, 5, 6, 5, 1, 1, 21, 20, 16, 0, 2, 0, 0, 1, 1, 0]' : 0.19617}
{'[3, 5, 5, 5, 6, 5, 1, 1, 21, 20, 16, 0, 2, 0, 0, 1, 1, 0]' : 0.198535}
{'[3, 5, 5, 5, 6, 5, 1, 1, 21, 20, 16, 0, 2, 0, 0, 1, 1, 0]' : 0.197584}
{'[3, 5, 5, 5, 6, 5, 1, 1, 21, 20, 16, 0, 2, 0, 0, 1, 1, 0]' : 0.197766}
{'[3, 5, 5, 5, 6, 5, 1, 1, 21, 20, 16, 0, 2, 0, 0, 1, 1, 0]' : 0.198107}
{'[3, 5, 5, 5, 6, 5, 1, 1, 21, 20, 16, 0, 2, 0, 0, 1, 1, 0]' : 0.197569}
{'[3, 5, 5, 5, 6, 5, 1, 1, 21, 20, 16, 0, 2, 0, 0, 1, 1, 0]' : 0.19765}
{'[3, 5, 5, 5, 6, 5, 1, 1, 21, 20, 16, 0, 2, 0, 0, 1, 1, 0]' : 0.196458}
{'[3, 5, 5, 5, 6, 5, 1, 1, 21, 20, 16, 0, 2, 0, 0, 1, 1, 0]' : 0.196838}
{'[3, 5, 5, 5, 6, 5, 1, 1, 21, 20, 16, 0, 2, 0, 0, 1, 1, 0]' : 0.197332}

out:
 ["{'[3, 5, 5, 5, 6, 5, 1, 1, 21, 20, 16, 0, 2, 0, 0, 1, 1, 0]' : 0.197062}", "{'[3, 5, 5, 5, 6, 5, 1, 1, 21, 20, 16, 0, 2, 0, 0, 1, 1, 0]' : 0.197281}", "{'[3, 5, 5, 5, 6, 5, 1, 1, 21, 20, 16, 0, 2, 0, 0, 1, 1, 0]' : 0.196009}", "{'[3, 5, 5, 5, 6, 5, 1, 1, 21, 20, 16, 0, 2, 0, 0, 1, 1, 0]' : 0.196214}", "{'[3, 5, 5, 5, 6, 5, 1, 1, 21, 20, 16, 0, 2, 0, 0, 1, 1, 0]' : 0.197064}", "{'[3, 5, 5, 5, 6, 5, 1, 1, 21, 20, 16, 0, 2, 0, 0, 1, 1, 0]' : 0.195749}", "{'[3, 5, 5, 5, 6, 5, 1, 1, 21, 20, 16, 0, 2, 0, 0, 1, 1, 0]' : 0.197109}", "{'[3, 5, 5, 5, 6, 5, 1, 1, 21, 20, 16, 0, 2, 0, 0, 1, 1, 0]' : 0.196236}", "{'[3, 5, 5, 5, 6, 5, 1, 1, 21, 20, 16, 0, 2, 0, 0, 1, 1, 0]' : 0.195942}", "{'[3, 5, 5, 5, 6, 5, 1, 1, 21, 20, 16, 0, 2, 0, 0, 1, 1, 0]' : 0.195593}", "{'[3, 5, 5, 5, 6, 5, 1, 1, 21, 20, 16, 0, 2, 0, 0, 1, 1, 0]' : 0.197034}", "{'[3, 5, 5, 5, 6, 5, 1, 1, 21, 20, 16, 0, 2, 0, 0, 1, 1, 0]' : 0.197238}", "{'[3, 5, 5, 5, 6, 5, 1, 1, 21, 20, 16, 0, 2, 0, 0, 1, 1, 0]' : 0.196721}", "{'[3, 5, 5, 5, 6, 5, 1, 1, 21, 20, 16, 0, 2, 0, 0, 1, 1, 0]' : 0.197184}", "{'[3, 5, 5, 5, 6, 5, 1, 1, 21, 20, 16, 0, 2, 0, 0, 1, 1, 0]' : 0.196769}", "{'[3, 5, 5, 5, 6, 5, 1, 1, 21, 20, 16, 0, 2, 0, 0, 1, 1, 0]' : 0.195774}", "{'[3, 5, 5, 5, 6, 5, 1, 1, 21, 20, 16, 0, 2, 0, 0, 1, 1, 0]' : 0.197112}", "{'[3, 5, 5, 5, 6, 5, 1, 1, 21, 20, 16, 0, 2, 0, 0, 1, 1, 0]' : 0.196384}", "{'[3, 5, 5, 5, 6, 5, 1, 1, 21, 20, 16, 0, 2, 0, 0, 1, 1, 0]' : 0.195976}", "{'[3, 5, 5, 5, 6, 5, 1, 1, 21, 20, 16, 0, 2, 0, 0, 1, 1, 0]' : 0.197411}", "{'[3, 5, 5, 5, 6, 5, 1, 1, 21, 20, 16, 0, 2, 0, 0, 1, 1, 0]' : 0.19617}", "{'[3, 5, 5, 5, 6, 5, 1, 1, 21, 20, 16, 0, 2, 0, 0, 1, 1, 0]' : 0.198535}", "{'[3, 5, 5, 5, 6, 5, 1, 1, 21, 20, 16, 0, 2, 0, 0, 1, 1, 0]' : 0.197584}", "{'[3, 5, 5, 5, 6, 5, 1, 1, 21, 20, 16, 0, 2, 0, 0, 1, 1, 0]' : 0.197766}", "{'[3, 5, 5, 5, 6, 5, 1, 1, 21, 20, 16, 0, 2, 0, 0, 1, 1, 0]' : 0.198107}", "{'[3, 5, 5, 5, 6, 5, 1, 1, 21, 20, 16, 0, 2, 0, 0, 1, 1, 0]' : 0.197569}", "{'[3, 5, 5, 5, 6, 5, 1, 1, 21, 20, 16, 0, 2, 0, 0, 1, 1, 0]' : 0.19765}", "{'[3, 5, 5, 5, 6, 5, 1, 1, 21, 20, 16, 0, 2, 0, 0, 1, 1, 0]' : 0.196458}", "{'[3, 5, 5, 5, 6, 5, 1, 1, 21, 20, 16, 0, 2, 0, 0, 1, 1, 0]' : 0.196838}", "{'[3, 5, 5, 5, 6, 5, 1, 1, 21, 20, 16, 0, 2, 0, 0, 1, 1, 0]' : 0.197332}"]
returning from 'run': {'[3, 5, 5, 5, 6, 5, 1, 1, 21, 20, 16, 0, 2, 0, 0, 1, 1, 0]': ([0.197062, 0.197281, 0.196009, 0.196214, 0.197064, 0.195749, 0.197109, 0.196236, 0.195942, 0.195593, 0.197034, 0.197238, 0.196721, 0.197184, 0.196769, 0.195774, 0.197112, 0.196384, 0.195976, 0.197411, 0.19617, 0.198535, 0.197584, 0.197766, 0.198107, 0.197569, 0.19765, 0.196458, 0.196838, 0.197332], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.197062, 0.197281, 0.196009, 0.196214, 0.197064, 0.195749, 0.197109, 0.196236, 0.195942, 0.195593, 0.197034, 0.197238, 0.196721, 0.197184, 0.196769, 0.195774, 0.197112, 0.196384, 0.195976, 0.197411, 0.19617, 0.198535, 0.197584, 0.197766, 0.198107, 0.197569, 0.19765, 0.196458, 0.196838, 0.197332], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[3, 5, 5, 5, 6, 5, 1, 1, 21, 20, 16, 0, 2, 0, 0, 1, 1, 0]': ([0.197062, 0.197281, 0.196009, 0.196214, 0.197064, 0.195749, 0.197109, 0.196236, 0.195942, 0.195593, 0.197034, 0.197238, 0.196721, 0.197184, 0.196769, 0.195774, 0.197112, 0.196384, 0.195976, 0.197411, 0.19617, 0.198535, 0.197584, 0.197766, 0.198107, 0.197569, 0.19765, 0.196458, 0.196838, 0.197332], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Measurements: [0.13621103333333334, 0.1901122333333333, 0.08989354000000001, 0.09704457333333334, 0.14775679999999997, 0.09384460666666666, 0.1266251, 0.18223083333333326, 0.18164233333333332, 0.2430080333333333, 0.07879202333333332, 0.08304600666666666, 0.14997393333333334, 0.12365673333333335, 0.1371678, 0.1315442666666667, 0.08813069333333336, 0.17103966666666665, 0.16670356666666666, 0.16622993333333333, 0.08679557333333333, 0.16464553333333332, 0.15569723333333332, 0.09255753000000001, 0.07720482999999997, 0.07946239333333333, 0.19319739999999996, 0.19686236666666668]
   T1_I T1_J T1_K T2_I ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J RT_K VEC2
1     1    1    5    1       1       1   24  11  22   0    0    2    0    0
2     3    0    6    3       1       1    2  29   0  22    0    0    2    1
3     5    0    1    0       0       1   18  28  18   0    1    1    0    1
4     1    5    2    6       1       0    2   4   0  26    0    1    1    1
5     2    1    2    4       1       0   19  16   3   0    0    0    0    1
6     0    3    1    6       0       0    5  11  26   0    0    0    0    0
7     1    4    4    0       1       0    3  11  16   0    0    2    0    0
8     1    0    6    5       1       1   17   0   1   3    0    0    1    0
9     2    1    0    3       1       1    3   0  17  10    2    0    0    0
10    6    3    1    6       0       1    0  12   0  21    0    1    0    0
11    0    1    5    1       0       1   23   0  26  24    1    0    1    0
12    2    5    4    0       0       1    6   4   0   3    1    0    1    0
13    5    5    2    0       1       0   13  27   0  21    0    1    0    0
14    0    4    6    5       0       0   18   0   3   1    0    1    1    1
15    1    3    5    0       1       0   27   0  21  21    0    0    0    0
16    1    0    5    1       0       0    5  17   1   0    2    0    0    1
17    2    1    5    6       0       0   15  27   0  27    1    1    0    0
18    2    6    6    2       0       1   16  27  25   0    0    0    0    1
19    2    1    1    6       0       0   25   0  23  19    2    0    0    1
20    1    1    4    4       1       0    3  29  25   0    0    0    2    0
21    6    3    6    5       1       0    0  17   4   0    1    1    0    0
22    6    4    5    4       1       0   10   0  29  28    0    1    0    0
23    1    6    1    4       0       0   16  18  23   0    0    0    2    0
24    3    6    1    6       1       1   24  26   0  11    1    1    0    1
25    5    5    5    0       0       0    1   0  20   3    1    0    0    1
26    6    2    0    4       0       0   28  11   0   8    1    0    1    0
27    6    0    3    6       1       1   19   0  20   5    0    2    0    1
28    3    5    5    5       1       1   21  20  16   0    2    0    0    0
    cost_mean
1  0.13621103
2  0.19011223
3  0.08989354
4  0.09704457
5  0.14775680
6  0.09384461
7  0.12662510
8  0.18223083
9  0.18164233
10 0.24300803
11 0.07879202
12 0.08304601
13 0.14997393
14 0.12365673
15 0.13716780
16 0.13154427
17 0.08813069
18 0.17103967
19 0.16670357
20 0.16622993
21 0.08679557
22 0.16464553
23 0.15569723
24 0.09255753
25 0.07720483
26 0.07946239
27 0.19319740
28 0.19686237

Step Space Names:  [1] "T1_I"    "T1_J"    "T1_K"    "T2_I"    "T2_J"    "T2_K"    "ACOPY_x"
 [8] "ACOPY_y" "U1_I"    "U_I"     "U_J"     "U_K"     "RT_I"    "RT_J"   
[15] "RT_K"    "SCR"     "VEC1"    "VEC2"   

Heteroscedasticity Test p-value: 0.841648884954
Regression Step:            Df  Sum Sq  Mean Sq F value Pr(>F)
T1_I         1 0.00082 0.000817   0.310  0.587
T1_J         1 0.00136 0.001360   0.517  0.485
T1_K         1 0.00004 0.000037   0.014  0.907
T2_I         1 0.00352 0.003520   1.337  0.268
ACOPY_x      1 0.00418 0.004183   1.590  0.230
ACOPY_y      1 0.00454 0.004540   1.725  0.212
U1_I         1 0.00067 0.000672   0.255  0.622
U_I          1 0.00000 0.000002   0.001  0.980
U_J          1 0.00212 0.002123   0.807  0.385
U_K          1 0.00013 0.000133   0.050  0.826
RT_I         1 0.00106 0.001064   0.404  0.536
RT_J         1 0.00208 0.002085   0.792  0.390
RT_K         1 0.00044 0.000443   0.169  0.688
VEC2         1 0.00001 0.000006   0.002  0.963
Residuals   13 0.03421 0.002632               

Predicting Best
Identical predictions (tol = 1e-5): 1
Getting fixed variables
Fixed Variables: {'ACOPY_x': 0, 'ACOPY_y': 0, 'T2_K': 5, 'T2_J': 6, 'VEC1': 1, 'SCR': 1}
Pruning Data
Dimensions of Pruned Data: [1] 657  18
Pruning Model
Pruned Search Space Size: 18
Best Predicted:        T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
385252    1    6    6    0    6    5       0       0   28  11   0  22    0    2
       RT_K SCR VEC1 VEC2
385252    0   1    1    1

Pruned Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'VEC2']
Fixed Factors: {'ACOPY_x': 0, 'ACOPY_y': 0, 'T2_K': 5, 'T2_J': 6, 'VEC1': 1, 'SCR': 1}
Fixed Factors: {'ACOPY_x': 0, 'ACOPY_y': 0, 'T2_K': 5, 'T2_J': 6, 'VEC1': 1, 'SCR': 1}
Length of requested configs: 1
Coordinate was computed before
No coordinates to evaluate
0.1290727
[1, 6, 6, 0, 6, 5, 0, 0, 28, 11, 0, 22, 0, 2, 0, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	5
        Additions: 		3089
        Multiplications: 	1482
        Divisions: 		0
        Logical: 		0
        Reads: 			5931
        Writes: 		994
        Comparisons:		21
        Gotos: 			0
        
digraph CFG {
	_JOIN_24022770 [label="_JOIN_24022770None...",shape=box];
	_JOIN_24022770 -> 24153213;
	ForLoop24013555 [label="ForLoop24013555  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop24013555 -> ForLoop24013553;
	ForLoop24013555 -> _JOIN_24013555;
	_JOIN_24023125 [label="_JOIN_24023125None...",shape=box];
	_JOIN_24023125 -> _JOIN_24023127;
	ForLoop24013551 [label="ForLoop24013551  for (j=jt; j<=cbv_2; j=j+1) {...",shape=box];
	ForLoop24013551 -> 24043516;
	ForLoop24013551 -> _JOIN_24013551;
	ForLoop24013192 [label="ForLoop24013192  for (jt=jj; jt<=cbv_1; jt=jt+32) {...",shape=box];
	ForLoop24013192 -> 24042340;
	ForLoop24013192 -> _JOIN_24013192;
	ForLoop24013553 [label="ForLoop24013553  for (jj=jjj; jj<=min(ny-1,jjj+1536); jj=jj+512) {...",shape=box];
	ForLoop24013553 -> 24147107;
	ForLoop24013553 -> _JOIN_24013553;
	_JOIN_24023131 [label="_JOIN_24023131None...",shape=box];
	_JOIN_24023131 -> ForLoop24024868;
	23873897 [label="23873897  y[i]=0.0;...",shape=box];
	ForLoop24023131 [label="ForLoop24023131  for (i=ii; i<=min(nx-1,ii+15)-11; i=i+12) {...",shape=box];
	ForLoop24023131 -> 24113924;
	ForLoop24023131 -> _JOIN_24023131;
	24154024 [label="24154024  register int cbv_7;...",shape=box];
	24042340 [label="24042340  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	ForLoop24024866 [label="ForLoop24024866  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop24024866 -> ForLoop24024865;
	ForLoop24024866 -> _JOIN_24024866;
	23873420 [label="23873420  int i;...",shape=box];
	24000291 [label="24000291  double x_copy;...",shape=box];
	_JOIN_24023129 [label="_JOIN_24023129None...",shape=box];
	_JOIN_24023129 -> 24113942;
	_JOIN_24013551 [label="_JOIN_24013551None...",shape=box];
	_JOIN_24013551 -> _JOIN_24013553;
	23874219 [label="23874219  y[i]=0.0;...",shape=box];
	23874219 -> _JOIN_23874220;
	_JOIN_24013553 [label="_JOIN_24013553None...",shape=box];
	_JOIN_24013553 -> _JOIN_24013555;
	_JOIN_24013555 [label="_JOIN_24013555None...",shape=box];
	_JOIN_24013555 -> ForLoop24023129;
	ForLoop24023125 [label="ForLoop24023125  for (k=cbv_4; k<=cbv_5; k=k+1) {...",shape=box];
	ForLoop24023125 -> 24080500;
	ForLoop24023125 -> _JOIN_24023125;
	24153213 [label="24153213  register int cbv_4, cbv_5;...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 23873420;
	_JOIN_24024063 [label="_JOIN_24024063None...",shape=box];
	_JOIN_24024063 -> 24154024;
	24154919 [label="24154919  register int cbv_9, cbv_10;...",shape=box];
	24024137 [label="24024137  int k;...",shape=box];
	ForLoop24024063 [label="ForLoop24024063  for (jt=jj; jt<=cbv_6; jt=jt+32) {...",shape=box];
	ForLoop24024063 -> 24023255;
	ForLoop24024063 -> _JOIN_24024063;
	24119436 [label="24119436  double scv_70, scv_71, scv_72, scv_73, scv_74, scv_75, scv_76, scv_77;...",shape=box];
	24079047 [label="24079047  double scv_34, scv_35, scv_36, scv_37, scv_38, scv_39, scv_40, scv_41;...",shape=box];
	24153977 [label="24153977  register int cbv_6;...",shape=box];
	_JOIN_24024102 [label="_JOIN_24024102None...",shape=box];
	_JOIN_24024102 -> _JOIN_24024104;
	_JOIN_23874151 [label="_JOIN_23874151None...",shape=box];
	_JOIN_23874151 -> 23874522;
	_JOIN_24024105 [label="_JOIN_24024105None...",shape=box];
	_JOIN_24024105 -> ForLoop24024866;
	ForLoop24024102 [label="ForLoop24024102  for (j=jt; j<=cbv_7; j=j+1) {...",shape=box];
	ForLoop24024102 -> 24024101;
	ForLoop24024102 -> _JOIN_24024102;
	ForLoop24024105 [label="ForLoop24024105  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop24024105 -> ForLoop24024104;
	ForLoop24024105 -> _JOIN_24024105;
	ForLoop24024868 [label="ForLoop24024868  for (i=(min(nx-1,ii+15))-(((min(nx-1,ii+15))-(ii)+1)%12)+1; i<=min(nx-1,ii+15); i=i+1) {...",shape=box];
	ForLoop24024868 -> 24123819;
	ForLoop24024868 -> _JOIN_24024868;
	24113924 [label="24113924  double scv_58, scv_59, scv_60, scv_61, scv_62, scv_63, scv_64, scv_65;...",shape=box];
	ForLoop24024104 [label="ForLoop24024104  for (jj=jjj; jj<=min(ny-1,jjj+1536); jj=jj+512) {...",shape=box];
	ForLoop24024104 -> 24153977;
	ForLoop24024104 -> _JOIN_24024104;
	_JOIN_24023127 [label="_JOIN_24023127None...",shape=box];
	_JOIN_24023127 -> _JOIN_24023129;
	24113942 [label="24113942  tmp[(i+1)]=scv_58;...",shape=box];
	ForLoop24023129 [label="ForLoop24023129  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop24023129 -> ForLoop24023127;
	ForLoop24023129 -> _JOIN_24023129;
	24147346 [label="24147346  register int cbv_2;...",shape=box];
	_JOIN_24013192 [label="_JOIN_24013192None...",shape=box];
	_JOIN_24013192 -> 24147346;
	24080500 [label="24080500  double scv_57;...",shape=box];
	_JOIN_24024104 [label="_JOIN_24024104None...",shape=box];
	_JOIN_24024104 -> _expected=9369846271501.798828
actual=9369846271501.798828
JOIN_24024105;
	24147107 [label="24147107  register int cbv_1;...",shape=box];
	24024101 [label="24024101  scv_94=scv_94+A[i*ny+j]*x[j];...",shape=box];
	24024101 -> _JOIN_24024102;
	ForLoop23874220 [label="ForLoop23874220  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop23874220 -> 23874219;
	ForLoop23874220 -> _JOIN_23874220;
	ForLoop24023127 [label="ForLoop24023127  for (kk=kkk; kk<=min(ny-1,kkk+512); kk=kk+512) {...",shape=box];
	ForLoop24023127 -> 24013587;
	ForLoop24023127 -> _JOIN_24023127;
	24023255 [label="24023255  scv_94=scv_94+A[i*ny+jt]*x[jt];...",shape=box];
	24119986 [label="24119986  double scv_93;...",shape=box];
	_JOIN_24024870 [label="_JOIN_24024870None...",shape=box];
	24043516 [label="24043516  double scv_33;...",shape=box];
	ForLoop24024870 [label="ForLoop24024870  for (ii=0; ii<=nx-1; ii=ii+16) {...",shape=box];
	ForLoop24024870 -> 24000306;
	ForLoop24024870 -> _JOIN_24024870;
	23874522 [label="23874522  register int cbv_2, cbv_3;...",shape=box];
	ForLoop23874151 [label="ForLoop23874151  for (i=0; i<=cbv_1; i=i+29) {...",shape=box];
	ForLoop23874151 -> 23873897;
	ForLoop23874151 -> _JOIN_23874151;
	_JOIN_24024795 [label="_JOIN_24024795None...",shape=box];
	_JOIN_24024795 -> 24154919;
	_JOIN_24024868 [label="_JOIN_24024868None...",shape=box];
	_JOIN_24024868 -> _JOIN_24024870;
	24000306 [label="24000306  int i;...",shape=box];
	24000306 -> ForLoop24023131;
	ForLoop24022770 [label="ForLoop24022770  for (k=kk; k<=cbv_3; k=k+23) {...",shape=box];
	ForLoop24022770 -> 24079047;
	ForLoop24022770 -> _JOIN_24022770;
	_JOIN_24024865 [label="_JOIN_24024865None...",shape=box];
	_JOIN_24024865 -> _JOIN_24024866;
	24123819 [label="24123819  double scv_94;...",shape=box];
	_JOIN_24024863 [label="_JOIN_24024863None...",shape=box];
	_JOIN_24024863 -> _JOIN_24024865;
	24123831 [label="24123831  tmp[i]=scv_94;...",shape=box];
	24123831 -> _JOIN_24024868;
	_JOIN_24024866 [label="_JOIN_24024866None...",shape=box];
	_JOIN_24024866 -> 24123831;
	_JOIN_23874220 [label="_JOIN_23874220None...",shape=box];
	_JOIN_23874220 -> 24000291;
	ForLoop24024865 [label="ForLoop24024865  for (kk=kkk; kk<=min(ny-1,kkk+512); kk=kk+512) {...",shape=box];
	ForLoop24024865 -> 24024137;
	ForLoop24024865 -> _JOIN_24024865;
	24013587 [label="24013587  int k;...",shape=box];
	ForLoop24024795 [label="ForLoop24024795  for (k=kk; k<=cbv_8; k=k+23) {...",shape=box];
	ForLoop24024795 -> 24119436;
	ForLoop24024795 -> _JOIN_24024795;
	ForLoop24024863 [label="ForLoop24024863  for (k=cbv_9; k<=cbv_10; k=k+1) {...",shape=box];
	ForLoop24024863 -> 24119986;
	ForLoop24024863 -> _JOIN_24024863;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest100.exe __orio_perftest100.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest100.exe  
{'[1, 6, 6, 0, 6, 5, 0, 0, 28, 11, 0, 22, 0, 2, 0, 1, 1, 1]' : 0.105945}
{'[1, 6, 6, 0, 6, 5, 0, 0, 28, 11, 0, 22, 0, 2, 0, 1, 1, 1]' : 0.10628}
{'[1, 6, 6, 0, 6, 5, 0, 0, 28, 11, 0, 22, 0, 2, 0, 1, 1, 1]' : 0.155802}
{'[1, 6, 6, 0, 6, 5, 0, 0, 28, 11, 0, 22, 0, 2, 0, 1, 1, 1]' : 0.124455}
{'[1, 6, 6, 0, 6, 5, 0, 0, 28, 11, 0, 22, 0, 2, 0, 1, 1, 1]' : 0.105935}
{'[1, 6, 6, 0, 6, 5, 0, 0, 28, 11, 0, 22, 0, 2, 0, 1, 1, 1]' : 0.105777}
{'[1, 6, 6, 0, 6, 5, 0, 0, 28, 11, 0, 22, 0, 2, 0, 1, 1, 1]' : 0.10559}
{'[1, 6, 6, 0, 6, 5, 0, 0, 28, 11, 0, 22, 0, 2, 0, 1, 1, 1]' : 0.105772}
{'[1, 6, 6, 0, 6, 5, 0, 0, 28, 11, 0, 22, 0, 2, 0, 1, 1, 1]' : 0.105739}
{'[1, 6, 6, 0, 6, 5, 0, 0, 28, 11, 0, 22, 0, 2, 0, 1, 1, 1]' : 0.105612}
{'[1, 6, 6, 0, 6, 5, 0, 0, 28, 11, 0, 22, 0, 2, 0, 1, 1, 1]' : 0.105599}
{'[1, 6, 6, 0, 6, 5, 0, 0, 28, 11, 0, 22, 0, 2, 0, 1, 1, 1]' : 0.10583}
{'[1, 6, 6, 0, 6, 5, 0, 0, 28, 11, 0, 22, 0, 2, 0, 1, 1, 1]' : 0.105606}
{'[1, 6, 6, 0, 6, 5, 0, 0, 28, 11, 0, 22, 0, 2, 0, 1, 1, 1]' : 0.105668}
{'[1, 6, 6, 0, 6, 5, 0, 0, 28, 11, 0, 22, 0, 2, 0, 1, 1, 1]' : 0.105608}
{'[1, 6, 6, 0, 6, 5, 0, 0, 28, 11, 0, 22, 0, 2, 0, 1, 1, 1]' : 0.105572}
{'[1, 6, 6, 0, 6, 5, 0, 0, 28, 11, 0, 22, 0, 2, 0, 1, 1, 1]' : 0.105628}
{'[1, 6, 6, 0, 6, 5, 0, 0, 28, 11, 0, 22, 0, 2, 0, 1, 1, 1]' : 0.105608}
{'[1, 6, 6, 0, 6, 5, 0, 0, 28, 11, 0, 22, 0, 2, 0, 1, 1, 1]' : 0.105634}
{'[1, 6, 6, 0, 6, 5, 0, 0, 28, 11, 0, 22, 0, 2, 0, 1, 1, 1]' : 0.105611}
{'[1, 6, 6, 0, 6, 5, 0, 0, 28, 11, 0, 22, 0, 2, 0, 1, 1, 1]' : 0.105675}
{'[1, 6, 6, 0, 6, 5, 0, 0, 28, 11, 0, 22, 0, 2, 0, 1, 1, 1]' : 0.105592}
{'[1, 6, 6, 0, 6, 5, 0, 0, 28, 11, 0, 22, 0, 2, 0, 1, 1, 1]' : 0.105783}
{'[1, 6, 6, 0, 6, 5, 0, 0, 28, 11, 0, 22, 0, 2, 0, 1, 1, 1]' : 0.105682}
{'[1, 6, 6, 0, 6, 5, 0, 0, 28, 11, 0, 22, 0, 2, 0, 1, 1, 1]' : 0.105607}
{'[1, 6, 6, 0, 6, 5, 0, 0, 28, 11, 0, 22, 0, 2, 0, 1, 1, 1]' : 0.105678}
{'[1, 6, 6, 0, 6, 5, 0, 0, 28, 11, 0, 22, 0, 2, 0, 1, 1, 1]' : 0.105641}
{'[1, 6, 6, 0, 6, 5, 0, 0, 28, 11, 0, 22, 0, 2, 0, 1, 1, 1]' : 0.105613}
{'[1, 6, 6, 0, 6, 5, 0, 0, 28, 11, 0, 22, 0, 2, 0, 1, 1, 1]' : 0.105635}
{'[1, 6, 6, 0, 6, 5, 0, 0, 28, 11, 0, 22, 0, 2, 0, 1, 1, 1]' : 0.105629}

out:
 ["{'[1, 6, 6, 0, 6, 5, 0, 0, 28, 11, 0, 22, 0, 2, 0, 1, 1, 1]' : 0.105945}", "{'[1, 6, 6, 0, 6, 5, 0, 0, 28, 11, 0, 22, 0, 2, 0, 1, 1, 1]' : 0.10628}", "{'[1, 6, 6, 0, 6, 5, 0, 0, 28, 11, 0, 22, 0, 2, 0, 1, 1, 1]' : 0.155802}", "{'[1, 6, 6, 0, 6, 5, 0, 0, 28, 11, 0, 22, 0, 2, 0, 1, 1, 1]' : 0.124455}", "{'[1, 6, 6, 0, 6, 5, 0, 0, 28, 11, 0, 22, 0, 2, 0, 1, 1, 1]' : 0.105935}", "{'[1, 6, 6, 0, 6, 5, 0, 0, 28, 11, 0, 22, 0, 2, 0, 1, 1, 1]' : 0.105777}", "{'[1, 6, 6, 0, 6, 5, 0, 0, 28, 11, 0, 22, 0, 2, 0, 1, 1, 1]' : 0.10559}", "{'[1, 6, 6, 0, 6, 5, 0, 0, 28, 11, 0, 22, 0, 2, 0, 1, 1, 1]' : 0.105772}", "{'[1, 6, 6, 0, 6, 5, 0, 0, 28, 11, 0, 22, 0, 2, 0, 1, 1, 1]' : 0.105739}", "{'[1, 6, 6, 0, 6, 5, 0, 0, 28, 11, 0, 22, 0, 2, 0, 1, 1, 1]' : 0.105612}", "{'[1, 6, 6, 0, 6, 5, 0, 0, 28, 11, 0, 22, 0, 2, 0, 1, 1, 1]' : 0.105599}", "{'[1, 6, 6, 0, 6, 5, 0, 0, 28, 11, 0, 22, 0, 2, 0, 1, 1, 1]' : 0.10583}", "{'[1, 6, 6, 0, 6, 5, 0, 0, 28, 11, 0, 22, 0, 2, 0, 1, 1, 1]' : 0.105606}", "{'[1, 6, 6, 0, 6, 5, 0, 0, 28, 11, 0, 22, 0, 2, 0, 1, 1, 1]' : 0.105668}", "{'[1, 6, 6, 0, 6, 5, 0, 0, 28, 11, 0, 22, 0, 2, 0, 1, 1, 1]' : 0.105608}", "{'[1, 6, 6, 0, 6, 5, 0, 0, 28, 11, 0, 22, 0, 2, 0, 1, 1, 1]' : 0.105572}", "{'[1, 6, 6, 0, 6, 5, 0, 0, 28, 11, 0, 22, 0, 2, 0, 1, 1, 1]' : 0.105628}", "{'[1, 6, 6, 0, 6, 5, 0, 0, 28, 11, 0, 22, 0, 2, 0, 1, 1, 1]' : 0.105608}", "{'[1, 6, 6, 0, 6, 5, 0, 0, 28, 11, 0, 22, 0, 2, 0, 1, 1, 1]' : 0.105634}", "{'[1, 6, 6, 0, 6, 5, 0, 0, 28, 11, 0, 22, 0, 2, 0, 1, 1, 1]' : 0.105611}", "{'[1, 6, 6, 0, 6, 5, 0, 0, 28, 11, 0, 22, 0, 2, 0, 1, 1, 1]' : 0.105675}", "{'[1, 6, 6, 0, 6, 5, 0, 0, 28, 11, 0, 22, 0, 2, 0, 1, 1, 1]' : 0.105592}", "{'[1, 6, 6, 0, 6, 5, 0, 0, 28, 11, 0, 22, 0, 2, 0, 1, 1, 1]' : 0.105783}", "{'[1, 6, 6, 0, 6, 5, 0, 0, 28, 11, 0, 22, 0, 2, 0, 1, 1, 1]' : 0.105682}", "{'[1, 6, 6, 0, 6, 5, 0, 0, 28, 11, 0, 22, 0, 2, 0, 1, 1, 1]' : 0.105607}", "{'[1, 6, 6, 0, 6, 5, 0, 0, 28, 11, 0, 22, 0, 2, 0, 1, 1, 1]' : 0.105678}", "{'[1, 6, 6, 0, 6, 5, 0, 0, 28, 11, 0, 22, 0, 2, 0, 1, 1, 1]' : 0.105641}", "{'[1, 6, 6, 0, 6, 5, 0, 0, 28, 11, 0, 22, 0, 2, 0, 1, 1, 1]' : 0.105613}", "{'[1, 6, 6, 0, 6, 5, 0, 0, 28, 11, 0, 22, 0, 2, 0, 1, 1, 1]' : 0.105635}", "{'[1, 6, 6, 0, 6, 5, 0, 0, 28, 11, 0, 22, 0, 2, 0, 1, 1, 1]' : 0.105629}"]
returning from 'run': {'[1, 6, 6, 0, 6, 5, 0, 0, 28, 11, 0, 22, 0, 2, 0, 1, 1, 1]': ([0.105945, 0.10628, 0.155802, 0.124455, 0.105935, 0.105777, 0.10559, 0.105772, 0.105739, 0.105612, 0.105599, 0.10583, 0.105606, 0.105668, 0.105608, 0.105572, 0.105628, 0.105608, 0.105634, 0.105611, 0.105675, 0.105592, 0.105783, 0.105682, 0.105607, 0.105678, 0.105641, 0.105613, 0.105635, 0.105629], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.105945, 0.10628, 0.155802, 0.124455, 0.105935, 0.105777, 0.10559, 0.105772, 0.105739, 0.105612, 0.105599, 0.10583, 0.105606, 0.105668, 0.105608, 0.105572, 0.105628, 0.105608, 0.105634, 0.105611, 0.105675, 0.105592, 0.105783, 0.105682, 0.105607, 0.105678, 0.105641, 0.105613, 0.105635, 0.105629], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[1, 6, 6, 0, 6, 5, 0, 0, 28, 11, 0, 22, 0, 2, 0, 1, 1, 1]': ([0.105945, 0.10628, 0.155802, 0.124455, 0.105935, 0.105777, 0.10559, 0.105772, 0.105739, 0.105612, 0.105599, 0.10583, 0.105606, 0.105668, 0.105608, 0.105572, 0.105628, 0.105608, 0.105634, 0.105611, 0.105675, 0.105592, 0.105783, 0.105682, 0.105607, 0.105678, 0.105641, 0.105613, 0.105635, 0.105629], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Slowdown: 0.836687644508
Budget: 96/1
Step 3
 ~ T1_I + T1_J + T1_K + T2_I + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + VEC2
Fixed Factors: {'ACOPY_x': 0, 'ACOPY_y': 0, 'T2_K': 5, 'T2_J': 6, 'VEC1': 1, 'SCR': 1}
Full data does not fit on budget
Computing D-Optimal Design
Updating Constraints
Updated Constraint: True and (((T2_I ==1 )or (T2_I %T1_I ==0 ))) and (((T2_J ==1 )or (T2_J %T1_J ==0 ))) and (((T2_K ==1 )or (T2_K %T1_K ==0 ))) and ((RT_I *RT_J +RT_I *RT_K +RT_J *RT_K <=150 )) and (((U_I ==1 )or (U_J ==1 )or (U_K ==1 )))
Computing D-Optimal Design with 24 experiments
Design Formula:  ~ T1_I + T1_J + T1_K + T2_I + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + VEC2
Starting "optMonteCarlo" run
    var low high center nLevels round factor   mix
1  T1_I   0    6      0       7     0  FALSE FALSE
2  T1_J   0    6      0       7     0  FALSE FALSE
3  T1_K   0    6      0       7     0  FALSE FALSE
4  T2_I   0    6      0       7     0  FALSE FALSE
5  U1_I   0   29      0      30     0  FALSE FALSE
6   U_I   0   29      0      30     0  FALSE FALSE
7   U_J   0   29      0      30     0  FALSE FALSE
8   U_K   0   29      0      30     0  FALSE FALSE
9  RT_I   0    2      0       3     0  FALSE FALSE
10 RT_J   0    2      0       3     0  FALSE FALSE
11 RT_K   0    2      0       3     0  FALSE FALSE
12 VEC2   0    1      0       2     0  FALSE FALSE

   T1_I T1_J T1_K T2_I U1_I U_I U_J U_K RT_I RT_J RT_K VEC2
1     2    2    1    5   20   9   7   0    2    0    0    0
2     2    3    4    6   20   3  18   0    2    0    0    1
3     1    6    4    1   19  29   0  29    1    0    0    0
4     2    5    3    6   11  25   0  21    0    2    0    1
5     0    5    5    6   13   3  28   0    0    1    1    1
6     1    5    3    5    1   2   0  15    0    0    2    0
7     6    2    4    6   27  27  18   0    0    2    0    0
8     5    5    6    4    0  13  28   0    0    0    1    1
9     5    1    6    6   19   5   0  18    1    0    1    1
10    4    2    2    3   18   0  29  29    0    0    1    0
11    2    2    6    4   29   0   8  17    0    0    0    0
12    6    5    1    0    3   0  15  19    1    1    0    1
13    0    1    6    2    3  13   0  27    1    0    1    1
14    2    0    1    6    6   0  18  22    0    2    0    1
15    1    5    1    0   29   0  24  27    1    0    1    1
16    4    5    4    0   28   0  12   1    0    2    0    0
17    1    2    5    1   10  27  29   0    1    1    0    0
18    6    3    1    0    2  27  21   0    1    0    0    0
19    2    3    1    4    2  23   0   2    0    0    0    1
20    0    1    3    0    1  15  13   0    0    1    0    1
21    2    0    3    1   25  11  26   0    0    0    2    1
22    4    2    0    2   27  24   0   3    0    0    2    1
23    2    0    6    1    8   4   0   8    0    0    2    0
24    4    0    4    4   29  26   0  27    1    0    0    1

D-Efficiency Approximation: [1] 0.711

Measuring design of size 12
Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Design Line: [2, 2, 1, 5, 20, 9, 7, 0, 2, 0, 0, 0]
Fixed Factors: {'ACOPY_x': 0, 'ACOPY_y': 0, 'T2_K': 5, 'T2_J': 6, 'VEC1': 1, 'SCR': 1}
Testing candidate 1: [2, 2, 1, 5, 6, 5, 0, 0, 20, 9, 7, 0, 2, 0, 0, 1, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	28
        Max loop nest depth: 	6
        Additions: 		1801
        Multiplications: 	860
        Divisions: 		0
        Logical: 		0
        Reads: 			3607
        Writes: 		633
        Comparisons:		28
        Gotos: 			0
        
digraph CFG {
	ForLoop24318508 [label="ForLoop24318508  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jj)+1)%8)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop24318508 -> 24366532;
	ForLoop24318508 -> _JOIN_24318508;
	ForLoop24319195 [label="ForLoop24319195  for (jj=jjj; jj<=min(ny-1,jjj+2016); jj=jj+32) {...",shape=box];
	ForLoop24319195 -> 24318908;
	ForLoop24319195 -> _JOIN_24319195;
	ForLoop24318817 [label="ForLoop24318817  for (k=kk; k<=min(ny-1,kk+15); k=k+1) {...",shape=box];
	ForLoop24318817 -> 24372249;
	ForLoop24318817 -> _JOIN_24318817;
	24372249 [label="24372249  double scv_52;...",shape=box];
	ForLoop24155818 [label="ForLoop24155818  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop24155818 -> 24155817;
	ForLoop24155818 -> _JOIN_24155818;
	24155210 [label="24155210  int i;...",shape=box];
	ForLoop24319196 [label="ForLoop24319196  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop24319196 -> ForLoop24319195;
	ForLoop24319196 -> _JOIN_24319196;
	ForLoop24319274 [label="ForLoop24319274  for (iii=0; iii<=nx-1; iii=iii+1024) {...",shape=box];
	ForLoop24319274 -> ForLoop24319273;
	ForLoop24319274 -> _JOIN_24319274;
	ForLoop24319273 [label="ForLoop24319273  for (ii=iii; ii<=min(nx-1,iii+992); ii=ii+32) {...",shape=box];
	ForLoop24319273 -> ForLoop24315409;
	ForLoop24319273 -> _JOIN_24319273;
	ForLoop24319270 [label="ForLoop24319270  for (i=(min(nx-1,ii+31))-(((min(nx-1,ii+31))-(it)+1)%10)+1; i<=min(nx-1,ii+31); i=i+1) {...",shape=box];
	ForLoop24319270 -> 24377926;
	ForLoop24319270 -> _JOIN_24319270;
	24155567 [label="24155567  y[i]=0.0;...",shape=box];
	_JOIN_24155818 [label="_JOIN_24155818None...",shape=box];
	_JOIN_24155818 -> 24304973;
	24315410 [label="24315410  int i;...",shape=box];
	24315410 -> ForLoop24318823;
	24330980 [label="24330980  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 24155210;
	ForLoop24318821 [label="ForLoop24318821  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop24318821 -> ForLoop24318819;
	ForLoop24318821 -> _JOIN_24318821;
	ForLoop24315409 [label="ForLoop24315409  for (it=ii; it<=min(nx-1,ii+31)-31; it=it+32) {...",shape=box];
	ForLoop24315409 -> 24361107;
	ForLoop24315409 -> _JOIN_24315409;
	_JOIN_24314525 [label="_JOIN_24314525None...",shape=box];
	_JOIN_24314525 -> _JOIN_24314527;
	24361119 [label="24361119  tmp[it]=scv_11;...",shape=box];
	24156048 [label="24156048  register int cbv_2, cbv_3;...",shape=box];
	_JOIN_24319196 [label="_JOIN_24319196None...",shape=box];
	_JOIN_24319196 -> ForLoop24319268;
	_JOIN_24319273 [label="_JOIN_24319273None...",shape=box];
	_JOIN_24319273 -> _JOIN_24319274;
	_JOIN_24314528 [label="_JOIN_24314528None...",shape=box];
	_JOIN_24314528 -> ForLoop24315407;
	_JOIN_24319266 [label="_JOIN_24319266None...",shape=box];
	_JOIN_24319266 -> _JOIN_24319267;
	ForLoop24315405 [label="ForLoop24315405  for (k=kk; k<=min(ny-1,kk+15); k=k+1) {...",shape=box];
	ForLoop24315405 -> 24350415;
	ForLoop24315405 -> _JOIN_24315405;
	_JOIN_24319195 [label="_JOIN_24319195None...",shape=box];
	_JOIN_24319195 -> _JOIN_24319196;
	ForLoop24315407 [label="ForLoop24315407  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop24315407 -> ForLoop24315406;
	ForLoop24315407 -> _JOIN_24315407;
	ForLoop24315406 [label="ForLoop24315406  for (kk=kkk; kk<=min(ny-1,kkk+1008); kk=kk+16) {...",shape=box];
	ForLoop24315406 -> ForLoop24315405;
	ForLoop24315406 -> _JOIN_24315406;
	_JOIN_24318510 [label="_JOIN_24318510None...",shape=box];
	_JOIN_24318510 -> _JOIN_24318512;
	ForLoop24314528 [label="ForLoop24314528  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop24314528 -> ForLoop24314527;
	ForLoop24314528 -> _JOIN_24314528;
	_JOIN_24318512 [label="_JOIN_24318512None...",shape=box];
	_JOIN_24318512 -> ForLoop24318821;
	_JOIN_24315407 [label="_JOIN_24315407None...",shape=box];
	_JOIN_24315407 -> 24361119;
	_JOIN_24318821 [label="_JOIN_24318821None...",shape=box];
	_JOIN_24318821 -> 24375899;
	ForLoop24313557 [label="ForLoop24313557  for (j=jj; j<=min(ny-1,jj+31)-7; j=j+8) {...",shape=box];
	ForLoop24313557 -> 24330980;
	ForLoop24313557 -> _JOIN_24313557;
	_JOIN_24318823 [label="_JOIN_24318823None...",shape=box];
	_JOIN_24318823 -> ForLoop24319270;
	_JOIN_24319193 [label="_JOIN_24319193None...",shape=box];
	_JOIN_24319193 -> _JOIN_24319195;
	_JOIN_24319274 [label="_JOIN_24319274None...",shape=box];
	ForLoop24314525 [label="ForLoop24314525  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jj)+1)%8)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop24314525 -> 24332594;
	ForLoop24314525 -> _JOIN_24314525;
	24375899 [label="24375899  tmp[(i+1)]=scv_53;...",shape=box];
	ForLoop24314527 [label="ForLoop24314527  for (jj=jjj; jj<=min(ny-1,jjj+2016); jj=jj+32) {...",shape=box];
	ForLoop24314527 -> 24305063;
	ForLoop24314527 -> _JOIN_24314527;
	_JOIN_24319268 [label="_JOIN_24319268None...",shape=box];
	_JOIN_24319268 -> 24377938;
	_JOIN_24315409 [label="_JOIN_24315409None...",shape=box];
	_JOIN_24315409 -> 24315410;
	ForLoop24155749 [label="ForLoop24155749  for (i=0; i<=cbv_1; i=i+21) {...",shape=box];
	ForLoop24155749 -> 24155567;
	ForLoop24155749 -> _JOIN_24155749;
	_JOIN_24318178 [label="_JOIN_24318178None...",shape=box];
	_JOIN_24318178 -> ForLoop24318508;
	ForLoop24318823 [label="ForLoop24318823  for (i=it; i<=min(nx-1,ii+31)-9; i=i+10) {...",shape=box];
	ForLoop24318823 -> 24375881;
	ForLoop24318823 -> _JOIN_24318823;
	ForLoop24318510 [label="ForLoop24318510  for (jj=jjj; jj<=min(ny-1,jjj+2016); jj=jj+32) {...",shape=box];
	ForLoop24318510 -> 24315549;
	ForLoop24318510 -> _JOIN_24318510;
	ForLoop24318512 [label="ForLoop24318512  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop24318512 -> ForLoop24318510;
	ForLoop24318512 -> _JOIN_24318512;
	ForLoop24319125 [label="ForLoop24319125  for (j=jj; j<=min(ny-1,jj+31)-7; j=j+8) {...",shape=box];
	ForLoop24319125 -> 24318948;
	ForLoop24319125 -> _JOIN_24319125;
	_JOIN_24315405 [label="_JOIN_24315405None...",shape=box];
	_JOIN_24315405 -> _JOIN_24315406;
	_JOIN_24313557 [label="_JOIN_24313557None...",shape=box];
	_JOIN_24313557 -> ForLoop24314525;
	_JOIN_24315406 [label="_JOIN_24315406None...",shape=box];
	_JOIN_24315406 -> _JOIN_24315407;
	ForLoop24319268 [label="ForLoop24319268  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop24319268 -> ForLoop24319267;
	ForLoop24319268 -> _JOIN_24319268;
	ForLoop24318178 [label="ForLoop24318178  for (j=jj; j<=min(ny-1,jj+31)-7; j=j+8) {...",shape=box];
	ForLoop24318178 -> 24365952;
	ForLoop24318178 -> _JOIN_24318178;
	_JOIN_24319125 [label="_JOIN_24319125None...",shape=box];
	_JOIN_24319125 -> ForLoop24319193;
	_JOIN_24155749 [label="_JOIN_24155749None...",shape=box];
	_JOIN_24155749 -> 24156048;
	24304973 [label="24304973  double x_copy;...",shape=box];
	24319192 [label="24319192  scv_64=scv_64+A[i*ny+j]*x[j];...",shape=box];
	24319192 -> _JOIN_24319193;
	24377319 [label="24377319  double scv_63;...",shape=box];
	24350415 [label="24350415  double scv_10;...",shape=box];
	_JOIN_24319267 [label="_JOIN_24319267None...",shape=box];
	_JOIN_24319267 -> _JOIN_24319268;
	ForLoop24319267 [label="ForLoop24319267  for (kk=kkk; kk<=min(ny-1,kkk+1008); kk=kk+16) {...",shape=box];
	ForLoop24319267 -> ForLoop24319266;
	ForLoop24319267 -> _JOIN_24319267;
	ForLoop24319266 [label="ForLoop24319266  for (k=kk; k<=min(ny-1,kk+15); k=k+1) {...",shape=box];
	ForLoop24319266 -> 24377319;
	ForLoop24319266 -> _JOIN_24319266;
	24366532 [label="24366532  double scv_51;...",shape=box];
	24305063 [label="24305063  int j;...",shape=box];
	24305063 -> ForLoop24313557;
	24155817 [label="24155817  y[i]=0.0;...",shape=box];
	24155817 -> _JOIN_24155818;
	_JOIN_24314527 [label="_JOIN_24314527None...",shape=box];
	_JOIN_24314527 -> _JOIN_24314528;
	_JOIN_24318508 [label="_JOIN_24318508None...",shape=box];
	_JOIN_24318508 -> expected=9369846271501.798828
actual=9369846271501.798828
_JOIN_24318510;
	24361107 [label="24361107  double scv_11, scv_12, scv_13, scv_14, scv_15, scv_16, scv_17, scv_18;...",shape=box];
	24318908 [label="24318908  int j;...",shape=box];
	24318908 -> ForLoop24319125;
	ForLoop24318819 [label="ForLoop24318819  for (kk=kkk; kk<=min(ny-1,kkk+1008); kk=kk+16) {...",shape=box];
	ForLoop24318819 -> ForLoop24318817;
	ForLoop24318819 -> _JOIN_24318819;
	24377938 [label="24377938  tmp[i]=scv_64;...",shape=box];
	24377938 -> _JOIN_24319270;
	_JOIN_24318819 [label="_JOIN_24318819None...",shape=box];
	_JOIN_24318819 -> _JOIN_24318821;
	24332594 [label="24332594  double scv_9;...",shape=box];
	_JOIN_24319270 [label="_JOIN_24319270None...",shape=box];
	_JOIN_24319270 -> _JOIN_24319273;
	24377926 [label="24377926  double scv_64;...",shape=box];
	24365952 [label="24365952  double scv_43, scv_44, scv_45, scv_46, scv_47, scv_48, scv_49, scv_50;...",shape=box];
	24375881 [label="24375881  double scv_53, scv_54, scv_55, scv_56, scv_57, scv_58, scv_59, scv_60;...",shape=box];
	ForLoop24319193 [label="ForLoop24319193  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jj)+1)%8)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop24319193 -> 24319192;
	ForLoop24319193 -> _JOIN_24319193;
	24318948 [label="24318948  scv_64=scv_64+A[i*ny+j]*x[j];...",shape=box];
	_JOIN_24318817 [label="_JOIN_24318817None...",shape=box];
	_JOIN_24318817 -> _JOIN_24318819;
	24315549 [label="24315549  int j;...",shape=box];

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest101.exe __orio_perftest101.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest101.exe  
{'[2, 2, 1, 5, 6, 5, 0, 0, 20, 9, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.203024}
{'[2, 2, 1, 5, 6, 5, 0, 0, 20, 9, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.201967}
{'[2, 2, 1, 5, 6, 5, 0, 0, 20, 9, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.203327}
{'[2, 2, 1, 5, 6, 5, 0, 0, 20, 9, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.203434}
{'[2, 2, 1, 5, 6, 5, 0, 0, 20, 9, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.202849}
{'[2, 2, 1, 5, 6, 5, 0, 0, 20, 9, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.203247}
{'[2, 2, 1, 5, 6, 5, 0, 0, 20, 9, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.202437}
{'[2, 2, 1, 5, 6, 5, 0, 0, 20, 9, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.20261}
{'[2, 2, 1, 5, 6, 5, 0, 0, 20, 9, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.202127}
{'[2, 2, 1, 5, 6, 5, 0, 0, 20, 9, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.201826}
{'[2, 2, 1, 5, 6, 5, 0, 0, 20, 9, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.203595}
{'[2, 2, 1, 5, 6, 5, 0, 0, 20, 9, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.203367}
{'[2, 2, 1, 5, 6, 5, 0, 0, 20, 9, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.203503}
{'[2, 2, 1, 5, 6, 5, 0, 0, 20, 9, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.206299}
{'[2, 2, 1, 5, 6, 5, 0, 0, 20, 9, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.203324}
{'[2, 2, 1, 5, 6, 5, 0, 0, 20, 9, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.203245}
{'[2, 2, 1, 5, 6, 5, 0, 0, 20, 9, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.203502}
{'[2, 2, 1, 5, 6, 5, 0, 0, 20, 9, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.20401}
{'[2, 2, 1, 5, 6, 5, 0, 0, 20, 9, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.203243}
{'[2, 2, 1, 5, 6, 5, 0, 0, 20, 9, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.202209}
{'[2, 2, 1, 5, 6, 5, 0, 0, 20, 9, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.202944}
{'[2, 2, 1, 5, 6, 5, 0, 0, 20, 9, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.20235}
{'[2, 2, 1, 5, 6, 5, 0, 0, 20, 9, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.202642}
{'[2, 2, 1, 5, 6, 5, 0, 0, 20, 9, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.203427}
{'[2, 2, 1, 5, 6, 5, 0, 0, 20, 9, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.202232}
{'[2, 2, 1, 5, 6, 5, 0, 0, 20, 9, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.202724}
{'[2, 2, 1, 5, 6, 5, 0, 0, 20, 9, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.202831}
{'[2, 2, 1, 5, 6, 5, 0, 0, 20, 9, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.202998}
{'[2, 2, 1, 5, 6, 5, 0, 0, 20, 9, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.202076}
{'[2, 2, 1, 5, 6, 5, 0, 0, 20, 9, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.202637}

out:
 ["{'[2, 2, 1, 5, 6, 5, 0, 0, 20, 9, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.203024}", "{'[2, 2, 1, 5, 6, 5, 0, 0, 20, 9, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.201967}", "{'[2, 2, 1, 5, 6, 5, 0, 0, 20, 9, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.203327}", "{'[2, 2, 1, 5, 6, 5, 0, 0, 20, 9, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.203434}", "{'[2, 2, 1, 5, 6, 5, 0, 0, 20, 9, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.202849}", "{'[2, 2, 1, 5, 6, 5, 0, 0, 20, 9, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.203247}", "{'[2, 2, 1, 5, 6, 5, 0, 0, 20, 9, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.202437}", "{'[2, 2, 1, 5, 6, 5, 0, 0, 20, 9, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.20261}", "{'[2, 2, 1, 5, 6, 5, 0, 0, 20, 9, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.202127}", "{'[2, 2, 1, 5, 6, 5, 0, 0, 20, 9, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.201826}", "{'[2, 2, 1, 5, 6, 5, 0, 0, 20, 9, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.203595}", "{'[2, 2, 1, 5, 6, 5, 0, 0, 20, 9, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.203367}", "{'[2, 2, 1, 5, 6, 5, 0, 0, 20, 9, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.203503}", "{'[2, 2, 1, 5, 6, 5, 0, 0, 20, 9, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.206299}", "{'[2, 2, 1, 5, 6, 5, 0, 0, 20, 9, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.203324}", "{'[2, 2, 1, 5, 6, 5, 0, 0, 20, 9, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.203245}", "{'[2, 2, 1, 5, 6, 5, 0, 0, 20, 9, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.203502}", "{'[2, 2, 1, 5, 6, 5, 0, 0, 20, 9, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.20401}", "{'[2, 2, 1, 5, 6, 5, 0, 0, 20, 9, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.203243}", "{'[2, 2, 1, 5, 6, 5, 0, 0, 20, 9, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.202209}", "{'[2, 2, 1, 5, 6, 5, 0, 0, 20, 9, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.202944}", "{'[2, 2, 1, 5, 6, 5, 0, 0, 20, 9, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.20235}", "{'[2, 2, 1, 5, 6, 5, 0, 0, 20, 9, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.202642}", "{'[2, 2, 1, 5, 6, 5, 0, 0, 20, 9, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.203427}", "{'[2, 2, 1, 5, 6, 5, 0, 0, 20, 9, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.202232}", "{'[2, 2, 1, 5, 6, 5, 0, 0, 20, 9, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.202724}", "{'[2, 2, 1, 5, 6, 5, 0, 0, 20, 9, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.202831}", "{'[2, 2, 1, 5, 6, 5, 0, 0, 20, 9, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.202998}", "{'[2, 2, 1, 5, 6, 5, 0, 0, 20, 9, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.202076}", "{'[2, 2, 1, 5, 6, 5, 0, 0, 20, 9, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.202637}"]
returning from 'run': {'[2, 2, 1, 5, 6, 5, 0, 0, 20, 9, 7, 0, 2, 0, 0, 1, 1, 0]': ([0.203024, 0.201967, 0.203327, 0.203434, 0.202849, 0.203247, 0.202437, 0.20261, 0.202127, 0.201826, 0.203595, 0.203367, 0.203503, 0.206299, 0.203324, 0.203245, 0.203502, 0.20401, 0.203243, 0.202209, 0.202944, 0.20235, 0.202642, 0.203427, 0.202232, 0.202724, 0.202831, 0.202998, 0.202076, 0.202637], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.203024, 0.201967, 0.203327, 0.203434, 0.202849, 0.203247, 0.202437, 0.20261, 0.202127, 0.201826, 0.203595, 0.203367, 0.203503, 0.206299, 0.203324, 0.203245, 0.203502, 0.20401, 0.203243, 0.202209, 0.202944, 0.20235, 0.202642, 0.203427, 0.202232, 0.202724, 0.202831, 0.202998, 0.202076, 0.202637], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[2, 2, 1, 5, 6, 5, 0, 0, 20, 9, 7, 0, 2, 0, 0, 1, 1, 0]': ([0.203024, 0.201967, 0.203327, 0.203434, 0.202849, 0.203247, 0.202437, 0.20261, 0.202127, 0.201826, 0.203595, 0.203367, 0.203503, 0.206299, 0.203324, 0.203245, 0.203502, 0.20401, 0.203243, 0.202209, 0.202944, 0.20235, 0.202642, 0.203427, 0.202232, 0.202724, 0.202831, 0.202998, 0.202076, 0.202637], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [2, 3, 4, 6, 20, 3, 18, 0, 2, 0, 0, 1]
Fixed Factors: {'ACOPY_x': 0, 'ACOPY_y': 0, 'T2_K': 5, 'T2_J': 6, 'VEC1': 1, 'SCR': 1}
Testing candidate 2: [2, 3, 4, 6, 6, 5, 0, 0, 20, 3, 18, 0, 2, 0, 0, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	28
        Max loop nest depth: 	6
        Additions: 		3195
        Multiplications: 	1554
        Divisions: 		0
        Logical: 		0
        Reads: 			6095
        Writes: 		996
        Comparisons:		28
        Gotos: 			0
        
digraph CFG {
	_JOIN_24657520 [label="_JOIN_24657520None...",shape=box];
	_JOIN_24657520 -> ForLoop24658399;
	24661305 [label="24661305  int j;...",shape=box];
	ForLoop24397708 [label="ForLoop24397708  for (i=0; i<=cbv_1; i=i+21) {...",shape=box];
	ForLoop24397708 -> 24397526;
	ForLoop24397708 -> _JOIN_24397708;
	24814776 [label="24814776  register int cbv_8;...",shape=box];
	ForLoop24661867 [label="ForLoop24661867  for (jj=jjj; jj<=min(ny-1,jjj+1984); jj=jj+64) {...",shape=box];
	ForLoop24661867 -> 24661305;
	ForLoop24661867 -> _JOIN_24661867;
	ForLoop24661865 [label="ForLoop24661865  for (j=cbv_10; j<=cbv_11; j=j+1) {...",shape=box];
	ForLoop24661865 -> 24661864;
	ForLoop24661865 -> _JOIN_24661865;
	24764613 [label="24764613  double scv_75, scv_76, scv_77, scv_78;...",shape=box];
	ForLoop24661945 [label="ForLoop24661945  for (ii=iii; ii<=min(nx-1,iii+2016); ii=ii+32) {...",shape=box];
	ForLoop24661945 -> ForLoop24658401;
	ForLoop24661945 -> _JOIN_24661945;
	ForLoop24661946 [label="ForLoop24661946  for (iii=0; iii<=nx-1; iii=iii+2048) {...",shape=box];
	ForLoop24661946 -> ForLoop24661945;
	ForLoop24661946 -> _JOIN_24661946;
	ForLoop24661868 [label="ForLoop24661868  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop24661868 -> ForLoop24661867;
	ForLoop24661868 -> _JOIN_24661868;
	ForLoop24661940 [label="ForLoop24661940  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop24661940 -> ForLoop24661939;
	ForLoop24661940 -> _JOIN_24661940;
	ForLoop24661942 [label="ForLoop24661942  for (i=(min(nx-1,ii+31))-(((min(nx-1,ii+31))-(it)+1)%4)+1; i<=min(nx-1,ii+31); i=i+1) {...",shape=box];
	ForLoop24661942 -> 24767776;
	ForLoop24661942 -> _JOIN_24661942;
	_JOIN_24661797 [label="_JOIN_24661797None...",shape=box];
	_JOIN_24661797 -> 24815277;
	ForLoop24661063 [label="ForLoop24661063  for (jj=jjj; jj<=min(ny-1,jjj+1984); jj=jj+64) {...",shape=box];
	ForLoop24661063 -> 24658487;
	ForLoop24661063 -> _JOIN_24661063;
	ForLoop24661061 [label="ForLoop24661061  for (j=cbv_6; j<=cbv_7; j=j+1) {...",shape=box];
	ForLoop24661061 -> 24756758;
	ForLoop24661061 -> _JOIN_24661061;
	ForLoop24661065 [label="ForLoop24661065  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop24661065 -> ForLoop24661063;
	ForLoop24661065 -> _JOIN_24661065;
	24398007 [label="24398007  register int cbv_2, cbv_3;...",shape=box];
	24756304 [label="24756304  double scv_54, scv_55, scv_56, scv_57, scv_58, scv_59, scv_60, scv_61;...",shape=box];
	_JOIN_24397708 [label="_JOIN_24397708None...",shape=box];
	_JOIN_24397708 -> 24398007;
	24691856 [label="24691856  double scv_20;...",shape=box];
	24812921 [label="24812921  register int cbv_4;...",shape=box];
	_JOIN_24658401 [label="_JOIN_24658401None...",shape=box];
	_JOIN_24658401 -> 24658402;
	_JOIN_24658397 [label="_JOIN_24658397None...",shape=box];
	_JOIN_24658397 -> _JOIN_24658398;
	_JOIN_24658399 [label="_JOIN_24658399None...",shape=box];
	_JOIN_24658399 -> 24751017;
	_JOIN_24658398 [label="_JOIN_24658398None...",shape=box];
	_JOIN_24658398 -> _JOIN_24658399;
	24767788 [label="24767788  tmp[i]=scv_80;...",shape=box];
	24767788 -> _JOIN_24661942;
	24636096 [label="24636096  double x_copy;...",shape=box];
	ForLoop24657519 [label="ForLoop24657519  for (jj=jjj; jj<=min(ny-1,jjj+1984); jj=jj+64) {...",shape=box];
	ForLoop24657519 -> 24636186;
	ForLoop24657519 -> _JOIN_24657519;
	ForLoop24657517 [label="ForLoop24657517  for (j=cbv_2; j<=cbv_3; j=j+1) {...",shape=box];
	ForLoop24657517 -> 24691856;
	ForLoop24657517 -> _JOIN_24657517;
	24661345 [label="24661345  scv_80=scv_80+A[i*ny+j]*x[j];...",shape=box];
	24730097 [label="24730097  double scv_21;...",shape=box];
	24397169 [label="24397169  int i;...",shape=box];
	24397776 [label="24397776  y[i]=0.0;...",shape=box];
	24397776 -> _JOIN_24397777;
	ForLoop24661214 [label="ForLoop24661214  for (k=kk; k<=cbv_8; k=k+1) {...",shape=box];
	ForLoop24661214 -> 24761713;
	ForLoop24661214 -> _JOIN_24661214;
	ForLoop24661216 [label="ForLoop24661216  for (kk=kkk; kk<=min(ny-1,kkk+896); kk=kk+128) {...",shape=box];
	ForLoop24661216 -> 24814776;
	ForLoop24661216 -> _JOIN_24661216;
	ForLoop24661218 [label="ForLoop24661218  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop24661218 -> ForLoop24661216;
	ForLoop24661218 -> _JOIN_24661218;
	24764631 [label="24764631  tmp[(i+2)]=scv_75;...",shape=box];
	24689778 [label="24689778  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	24756758 [label="24756758  double scv_73;...",shape=box];
	_JOIN_24661939 [label="_JOIN_24661939None...",shape=box];
	_JOIN_24661939 -> _JOIN_24661940;
	_JOIN_24661938 [label="_JOIN_24661938None...",shape=box];
	_JOIN_24661938 -> _JOIN_24661939;
	ForLoop24660905 [label="ForLoop24660905  for (j=jj; j<=cbv_5; j=j+19) {...",shape=box];
	ForLoop24660905 -> 24756304;
	ForLoop24660905 -> _JOIN_24660905;
	24812303 [label="24812303  register int cbv_2, cbv_3;...",shape=box];
	_JOIN_24661220 [label="_JOIN_24661220None...",shape=box];
	_JOIN_24661220 -> ForLoop24661942;
	_JOIN_24661940 [label="_JOIN_24661940None...",shape=box];
	_JOIN_24661940 -> 24767788;
	24815277 [label="24815277  register int cbv_10, cbv_11;...",shape=box];
	ForLoop24656549 [label="ForLoop24656549  for (j=jj; j<=cbv_1; j=j+19) {...",shape=box];
	ForLoop24656549 -> 24689778;
	ForLoop24656549 -> _JOIN_24656549;
	_JOIN_24656549 [label="_JOIN_24656549None...",shape=box];
	_JOIN_24656549 -> 24812303;
	24750999 [label="24750999  double scv_22, scv_23, scv_24, scv_25, scv_26, scv_27, scv_28, scv_29;...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 24397169;
	_JOIN_24661218 [label="_JOIN_24661218None...",shape=box];
	_JOIN_24661218 -> 24764631;
	24814634 [label="24814634  register int cbv_6, cbv_7;...",shape=box];
	24636186 [label="24636186  int j;...",shape=box];
	_JOIN_24661214 [label="_JOIN_24661214None...",shape=box];
	_JOIN_24661214 -> _JOIN_24661216;
	_JOIN_24661216 [label="_JOIN_24661216None...",shape=box];
	_JOIN_24661216 -> _JOIN_24661218;
	ForLoop24661797 [label="ForLoop24661797  for (j=jj; j<=cbv_9; j=j+19) {...",shape=box];
	ForLoop24661797 -> 24661345;
	ForLoop24661797 -> _JOIN_24661797;
	_JOIN_24660905 [label="_JOIN_24660905None...",shape=box];
	_JOIN_24660905 -> 24814634;
	ForLoop24661220 [label="ForLoop24661220  for (i=it; i<=min(nx-1,ii+31)-3; i=i+4) {...",shape=box];
	ForLoop24661220 -> 24764613;
	ForLoop24661220 -> _JOIN_24661220;
	24658402 [label="24658402  int i;...",shape=box];
	24658402 -> ForLoop24661220;
	24815368 [label="24815368  register int cbv_12;...",shape=box];
	_JOIN_24657519 [label="_JOIN_24657519None...",shape=box];
	_JOIN_24657519 -> _JOIN_24657520;
	ForLoop24661939 [label="ForLoop24661939  for (kk=kkk; kk<=min(ny-1,kkk+896); kk=kk+128) {...",shape=box];
	ForLoop24661939 -> 24815368;
	ForLoop24661939 -> _JOIN_24661939;
	ForLoop24661938 [label="ForLoop24661938  for (k=kk; k<=cbv_12; k=k+1) {...",shape=box];
	ForLoop24661938 -> 24766894;
	ForLoop24661938 -> _JOIN_24661938;
	24397526 [label="24397526  y[i]=0.0;...",shape=box];
	_JOIN_24657517 [label="_JOIN_24657517None...",shape=box];
	_JOIN_24657517 -> _JOIN_24657519;
	ForLoop24658401 [label="ForLoop24658401  for (it=ii; it<=min(nx-1,ii+31)-31; it=it+32) {...",shape=box];
	ForLoop24658401 -> 24750999;
	ForLoop24658401 -> _JOIN_24658401;
	24751017 [label="24751017  tmp[(it+21)]=scv_22;...",shape=box];
	24766894 [label="24766894  double scv_79;...",shape=box];
	_JOIN_24397777 [label="_JOIN_24397777None...",shape=box];
	_JOIN_24397777 -> 24636096;
	24767776 [label="24767776  double scv_80;...",shape=box];
	_JOIN_24661942 [label="_JOIN_24661942None...",shape=box];
	_JOIN_24661942 -> _JOIN_24661945;
	_JOIN_24661945 [label="_JOIN_24661945None...",shape=box];
	_JOIN_24661945 -> _JOIN_24661946;
	_JOIN_24661946 [label="_JOIN_24661946None...",shape=box];
	ForLoop24397777 [label="ForLoop24397777  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop24397777 -> 24397776;
	ForLoop24397777 -> _JOIN_24397777;
	_JOIN_24661868 [label="_JOIN_24661868None...",shape=box];
	_JOIN_24661868 -> ForLoop24661940;
	ForLoop24657520 [label="ForLoop24657520  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop24657520 -> ForLoop24657519;
	ForLoop24657520 -> _JOIN_24657520;
	_JOIN_24661867 [label="_JOIN_24661867None...",shape=box];
	_JOIN_24661867 -> _JOIN_24661868;expected=9369846271501.798828
actual=9369846271501.798828

	_JOIN_24661865 [label="_JOIN_24661865None...",shape=box];
	_JOIN_24661865 -> _JOIN_24661867;
	_JOIN_24661063 [label="_JOIN_24661063None...",shape=box];
	_JOIN_24661063 -> _JOIN_24661065;
	_JOIN_24661061 [label="_JOIN_24661061None...",shape=box];
	_JOIN_24661061 -> _JOIN_24661063;
	_JOIN_24661065 [label="_JOIN_24661065None...",shape=box];
	_JOIN_24661065 -> ForLoop24661218;
	ForLoop24658397 [label="ForLoop24658397  for (k=kk; k<=cbv_4; k=k+1) {...",shape=box];
	ForLoop24658397 -> 24730097;
	ForLoop24658397 -> _JOIN_24658397;
	ForLoop24658399 [label="ForLoop24658399  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop24658399 -> ForLoop24658398;
	ForLoop24658399 -> _JOIN_24658399;
	ForLoop24658398 [label="ForLoop24658398  for (kk=kkk; kk<=min(ny-1,kkk+896); kk=kk+128) {...",shape=box];
	ForLoop24658398 -> 24812921;
	ForLoop24658398 -> _JOIN_24658398;
	24658487 [label="24658487  int j;...",shape=box];
	24661864 [label="24661864  scv_80=scv_80+A[i*ny+j]*x[j];...",shape=box];
	24661864 -> _JOIN_24661865;
	24761713 [label="24761713  double scv_74;...",shape=box];

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest102.exe __orio_perftest102.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest102.exe  
{'[2, 3, 4, 6, 6, 5, 0, 0, 20, 3, 18, 0, 2, 0, 0, 1, 1, 1]' : 0.239431}
{'[2, 3, 4, 6, 6, 5, 0, 0, 20, 3, 18, 0, 2, 0, 0, 1, 1, 1]' : 0.239318}
{'[2, 3, 4, 6, 6, 5, 0, 0, 20, 3, 18, 0, 2, 0, 0, 1, 1, 1]' : 0.240422}
{'[2, 3, 4, 6, 6, 5, 0, 0, 20, 3, 18, 0, 2, 0, 0, 1, 1, 1]' : 0.23992}
{'[2, 3, 4, 6, 6, 5, 0, 0, 20, 3, 18, 0, 2, 0, 0, 1, 1, 1]' : 0.240232}
{'[2, 3, 4, 6, 6, 5, 0, 0, 20, 3, 18, 0, 2, 0, 0, 1, 1, 1]' : 0.239848}
{'[2, 3, 4, 6, 6, 5, 0, 0, 20, 3, 18, 0, 2, 0, 0, 1, 1, 1]' : 0.239287}
{'[2, 3, 4, 6, 6, 5, 0, 0, 20, 3, 18, 0, 2, 0, 0, 1, 1, 1]' : 0.23985}
{'[2, 3, 4, 6, 6, 5, 0, 0, 20, 3, 18, 0, 2, 0, 0, 1, 1, 1]' : 0.239702}
{'[2, 3, 4, 6, 6, 5, 0, 0, 20, 3, 18, 0, 2, 0, 0, 1, 1, 1]' : 0.239841}
{'[2, 3, 4, 6, 6, 5, 0, 0, 20, 3, 18, 0, 2, 0, 0, 1, 1, 1]' : 0.240408}
{'[2, 3, 4, 6, 6, 5, 0, 0, 20, 3, 18, 0, 2, 0, 0, 1, 1, 1]' : 0.239697}
{'[2, 3, 4, 6, 6, 5, 0, 0, 20, 3, 18, 0, 2, 0, 0, 1, 1, 1]' : 0.239878}
{'[2, 3, 4, 6, 6, 5, 0, 0, 20, 3, 18, 0, 2, 0, 0, 1, 1, 1]' : 0.239719}
{'[2, 3, 4, 6, 6, 5, 0, 0, 20, 3, 18, 0, 2, 0, 0, 1, 1, 1]' : 0.239392}
{'[2, 3, 4, 6, 6, 5, 0, 0, 20, 3, 18, 0, 2, 0, 0, 1, 1, 1]' : 0.239849}
{'[2, 3, 4, 6, 6, 5, 0, 0, 20, 3, 18, 0, 2, 0, 0, 1, 1, 1]' : 0.238905}
{'[2, 3, 4, 6, 6, 5, 0, 0, 20, 3, 18, 0, 2, 0, 0, 1, 1, 1]' : 0.239588}
{'[2, 3, 4, 6, 6, 5, 0, 0, 20, 3, 18, 0, 2, 0, 0, 1, 1, 1]' : 0.240268}
{'[2, 3, 4, 6, 6, 5, 0, 0, 20, 3, 18, 0, 2, 0, 0, 1, 1, 1]' : 0.238806}
{'[2, 3, 4, 6, 6, 5, 0, 0, 20, 3, 18, 0, 2, 0, 0, 1, 1, 1]' : 0.240732}
{'[2, 3, 4, 6, 6, 5, 0, 0, 20, 3, 18, 0, 2, 0, 0, 1, 1, 1]' : 0.240732}
{'[2, 3, 4, 6, 6, 5, 0, 0, 20, 3, 18, 0, 2, 0, 0, 1, 1, 1]' : 0.240193}
{'[2, 3, 4, 6, 6, 5, 0, 0, 20, 3, 18, 0, 2, 0, 0, 1, 1, 1]' : 0.239144}
{'[2, 3, 4, 6, 6, 5, 0, 0, 20, 3, 18, 0, 2, 0, 0, 1, 1, 1]' : 0.239989}
{'[2, 3, 4, 6, 6, 5, 0, 0, 20, 3, 18, 0, 2, 0, 0, 1, 1, 1]' : 0.288843}
{'[2, 3, 4, 6, 6, 5, 0, 0, 20, 3, 18, 0, 2, 0, 0, 1, 1, 1]' : 0.24356}
{'[2, 3, 4, 6, 6, 5, 0, 0, 20, 3, 18, 0, 2, 0, 0, 1, 1, 1]' : 0.239603}
{'[2, 3, 4, 6, 6, 5, 0, 0, 20, 3, 18, 0, 2, 0, 0, 1, 1, 1]' : 0.240145}
{'[2, 3, 4, 6, 6, 5, 0, 0, 20, 3, 18, 0, 2, 0, 0, 1, 1, 1]' : 0.239105}

out:
 ["{'[2, 3, 4, 6, 6, 5, 0, 0, 20, 3, 18, 0, 2, 0, 0, 1, 1, 1]' : 0.239431}", "{'[2, 3, 4, 6, 6, 5, 0, 0, 20, 3, 18, 0, 2, 0, 0, 1, 1, 1]' : 0.239318}", "{'[2, 3, 4, 6, 6, 5, 0, 0, 20, 3, 18, 0, 2, 0, 0, 1, 1, 1]' : 0.240422}", "{'[2, 3, 4, 6, 6, 5, 0, 0, 20, 3, 18, 0, 2, 0, 0, 1, 1, 1]' : 0.23992}", "{'[2, 3, 4, 6, 6, 5, 0, 0, 20, 3, 18, 0, 2, 0, 0, 1, 1, 1]' : 0.240232}", "{'[2, 3, 4, 6, 6, 5, 0, 0, 20, 3, 18, 0, 2, 0, 0, 1, 1, 1]' : 0.239848}", "{'[2, 3, 4, 6, 6, 5, 0, 0, 20, 3, 18, 0, 2, 0, 0, 1, 1, 1]' : 0.239287}", "{'[2, 3, 4, 6, 6, 5, 0, 0, 20, 3, 18, 0, 2, 0, 0, 1, 1, 1]' : 0.23985}", "{'[2, 3, 4, 6, 6, 5, 0, 0, 20, 3, 18, 0, 2, 0, 0, 1, 1, 1]' : 0.239702}", "{'[2, 3, 4, 6, 6, 5, 0, 0, 20, 3, 18, 0, 2, 0, 0, 1, 1, 1]' : 0.239841}", "{'[2, 3, 4, 6, 6, 5, 0, 0, 20, 3, 18, 0, 2, 0, 0, 1, 1, 1]' : 0.240408}", "{'[2, 3, 4, 6, 6, 5, 0, 0, 20, 3, 18, 0, 2, 0, 0, 1, 1, 1]' : 0.239697}", "{'[2, 3, 4, 6, 6, 5, 0, 0, 20, 3, 18, 0, 2, 0, 0, 1, 1, 1]' : 0.239878}", "{'[2, 3, 4, 6, 6, 5, 0, 0, 20, 3, 18, 0, 2, 0, 0, 1, 1, 1]' : 0.239719}", "{'[2, 3, 4, 6, 6, 5, 0, 0, 20, 3, 18, 0, 2, 0, 0, 1, 1, 1]' : 0.239392}", "{'[2, 3, 4, 6, 6, 5, 0, 0, 20, 3, 18, 0, 2, 0, 0, 1, 1, 1]' : 0.239849}", "{'[2, 3, 4, 6, 6, 5, 0, 0, 20, 3, 18, 0, 2, 0, 0, 1, 1, 1]' : 0.238905}", "{'[2, 3, 4, 6, 6, 5, 0, 0, 20, 3, 18, 0, 2, 0, 0, 1, 1, 1]' : 0.239588}", "{'[2, 3, 4, 6, 6, 5, 0, 0, 20, 3, 18, 0, 2, 0, 0, 1, 1, 1]' : 0.240268}", "{'[2, 3, 4, 6, 6, 5, 0, 0, 20, 3, 18, 0, 2, 0, 0, 1, 1, 1]' : 0.238806}", "{'[2, 3, 4, 6, 6, 5, 0, 0, 20, 3, 18, 0, 2, 0, 0, 1, 1, 1]' : 0.240732}", "{'[2, 3, 4, 6, 6, 5, 0, 0, 20, 3, 18, 0, 2, 0, 0, 1, 1, 1]' : 0.240732}", "{'[2, 3, 4, 6, 6, 5, 0, 0, 20, 3, 18, 0, 2, 0, 0, 1, 1, 1]' : 0.240193}", "{'[2, 3, 4, 6, 6, 5, 0, 0, 20, 3, 18, 0, 2, 0, 0, 1, 1, 1]' : 0.239144}", "{'[2, 3, 4, 6, 6, 5, 0, 0, 20, 3, 18, 0, 2, 0, 0, 1, 1, 1]' : 0.239989}", "{'[2, 3, 4, 6, 6, 5, 0, 0, 20, 3, 18, 0, 2, 0, 0, 1, 1, 1]' : 0.288843}", "{'[2, 3, 4, 6, 6, 5, 0, 0, 20, 3, 18, 0, 2, 0, 0, 1, 1, 1]' : 0.24356}", "{'[2, 3, 4, 6, 6, 5, 0, 0, 20, 3, 18, 0, 2, 0, 0, 1, 1, 1]' : 0.239603}", "{'[2, 3, 4, 6, 6, 5, 0, 0, 20, 3, 18, 0, 2, 0, 0, 1, 1, 1]' : 0.240145}", "{'[2, 3, 4, 6, 6, 5, 0, 0, 20, 3, 18, 0, 2, 0, 0, 1, 1, 1]' : 0.239105}"]
returning from 'run': {'[2, 3, 4, 6, 6, 5, 0, 0, 20, 3, 18, 0, 2, 0, 0, 1, 1, 1]': ([0.239431, 0.239318, 0.240422, 0.23992, 0.240232, 0.239848, 0.239287, 0.23985, 0.239702, 0.239841, 0.240408, 0.239697, 0.239878, 0.239719, 0.239392, 0.239849, 0.238905, 0.239588, 0.240268, 0.238806, 0.240732, 0.240732, 0.240193, 0.239144, 0.239989, 0.288843, 0.24356, 0.239603, 0.240145, 0.239105], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.239431, 0.239318, 0.240422, 0.23992, 0.240232, 0.239848, 0.239287, 0.23985, 0.239702, 0.239841, 0.240408, 0.239697, 0.239878, 0.239719, 0.239392, 0.239849, 0.238905, 0.239588, 0.240268, 0.238806, 0.240732, 0.240732, 0.240193, 0.239144, 0.239989, 0.288843, 0.24356, 0.239603, 0.240145, 0.239105], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[2, 3, 4, 6, 6, 5, 0, 0, 20, 3, 18, 0, 2, 0, 0, 1, 1, 1]': ([0.239431, 0.239318, 0.240422, 0.23992, 0.240232, 0.239848, 0.239287, 0.23985, 0.239702, 0.239841, 0.240408, 0.239697, 0.239878, 0.239719, 0.239392, 0.239849, 0.238905, 0.239588, 0.240268, 0.238806, 0.240732, 0.240732, 0.240193, 0.239144, 0.239989, 0.288843, 0.24356, 0.239603, 0.240145, 0.239105], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [1, 6, 4, 1, 19, 29, 0, 29, 1, 0, 0, 0]
Fixed Factors: {'ACOPY_x': 0, 'ACOPY_y': 0, 'T2_K': 5, 'T2_J': 6, 'VEC1': 1, 'SCR': 1}
Testing candidate 3: [1, 6, 4, 1, 6, 5, 0, 0, 19, 29, 0, 29, 1, 0, 0, 1, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	28
        Max loop nest depth: 	6
        Additions: 		5163
        Multiplications: 	2496
        Divisions: 		0
        Logical: 		0
        Reads: 			9811
        Writes: 		1626
        Comparisons:		28
        Gotos: 			0
        
digraph CFG {
	25067715 [label="25067715  double x_copy;...",shape=box];
	25267034 [label="25267034  double scv_134;...",shape=box];
	_JOIN_25107742 [label="_JOIN_25107742None...",shape=box];
	_JOIN_25107742 -> ForLoop25108565;
	25108728 [label="25108728  int k;...",shape=box];
	25108728 -> ForLoop25109582;
	_JOIN_25108571 [label="_JOIN_25108571None...",shape=box];
	_JOIN_25108571 -> ForLoop25109655;
	_JOIN_25108696 [label="_JOIN_25108696None...",shape=box];
	_JOIN_25108696 -> ForLoop25109653;
	25122796 [label="25122796  double scv_32;...",shape=box];
	_JOIN_25109652 [label="_JOIN_25109652None...",shape=box];
	_JOIN_25109652 -> _JOIN_25109653;
	ForLoop25076019 [label="ForLoop25076019  for (k=kk; k<=min(ny-1,kk+127)-29; k=k+30) {...",shape=box];
	ForLoop25076019 -> 25121425;
	ForLoop25076019 -> _JOIN_25076019;
	_JOIN_24816164 [label="_JOIN_24816164None...",shape=box];
	_JOIN_24816164 -> 24816454;
	ForLoop24816233 [label="ForLoop24816233  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop24816233 -> 24816232;
	ForLoop24816233 -> _JOIN_24816233;
	ForLoop25108569 [label="ForLoop25108569  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop25108569 -> ForLoop25108567;
	ForLoop25108569 -> _JOIN_25108569;
	_JOIN_25109655 [label="_JOIN_25109655None...",shape=box];
	_JOIN_25109655 -> _JOIN_25109658;
	24816232 [label="24816232  y[i]=0.0;...",shape=box];
	24816232 -> _JOIN_24816233;
	ForLoop25109582 [label="ForLoop25109582  for (k=kk; k<=min(ny-1,kk+127)-29; k=k+30) {...",shape=box];
	ForLoop25109582 -> 25262592;
	ForLoop25109582 -> _JOIN_25109582;
	ForLoop25076270 [label="ForLoop25076270  for (k=(min(ny-1,kk+127))-(((min(ny-1,kk+127))-(kk)+1)%30)+1; k<=min(ny-1,kk+127); k=k+1) {...",shape=box];
	ForLoop25076270 -> 25122796;
	ForLoop25076270 -> _JOIN_25076270;
	_JOIN_25109659 [label="_JOIN_25109659None...",shape=box];
	25144022 [label="25144022  double scv_41;...",shape=box];
	_JOIN_25109658 [label="_JOIN_25109658None...",shape=box];
	_JOIN_25109658 -> _JOIN_25109659;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 24815649;
	ForLoop25077477 [label="ForLoop25077477  for (jj=jjj; jj<=min(ny-1,jjj+1536); jj=jj+512) {...",shape=box];
	ForLoop25077477 -> ForLoop25077475;
	ForLoop25077477 -> _JOIN_25077477;
	25190259 [label="25190259  double scv_72;...",shape=box];
	25121425 [label="25121425  double scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8, scv_9;...",shape=box];
	25262592 [label="25262592  double scv_103, scv_104, scv_105, scv_106, scv_107, scv_108, scv_109, scv_110;...",shape=box];
	_JOIN_25109582 [label="_JOIN_25109582None...",shape=box];
	_JOIN_25109582 -> ForLoop25109650;
	24815649 [label="24815649  int i;...",shape=box];
	ForLoop25108571 [label="ForLoop25108571  for (i=it; i<=min(nx-1,ii+15)-29; i=i+30) {...",shape=box];
	ForLoop25108571 -> 25259549;
	ForLoop25108571 -> _JOIN_25108571;
	_JOIN_25077477 [label="_JOIN_25077477None...",shape=box];
	_JOIN_25077477 -> _JOIN_25077479;
	ForLoop25077479 [label="ForLoop25077479  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop25077479 -> ForLoop25077477;
	ForLoop25077479 -> _JOIN_25077479;
	ForLoop24816164 [label="ForLoop24816164  for (i=0; i<=cbv_1; i=i+20) {...",shape=box];
	ForLoop24816164 -> 24815991;
	ForLoop24816164 -> _JOIN_24816164;
	ForLoop25077475 [label="ForLoop25077475  for (j=jj; j<=min(ny-1,jj+511); j=j+1) {...",shape=box];
	ForLoop25077475 -> 25144022;
	ForLoop25077475 -> _JOIN_25077475;
	25108693 [label="25108693  scv_134=scv_134+A[i*ny+j]*x[j];...",shape=box];
	25108693 -> _JOIN_25108694;
	24815991 [label="24815991  y[i]=0.0;...",shape=box];
	_JOIN_25108695 [label="_JOIN_25108695None...",shape=box];
	_JOIN_25108695 -> _JOIN_25108696;
	_JOIN_25108694 [label="_JOIN_25108694None...",shape=box];
	_JOIN_25108694 -> _JOIN_25108695;
	ForLoop25108565 [label="ForLoop25108565  for (k=(min(ny-1,kk+127))-(((min(ny-1,kk+127))-(kk)+1)%30)+1; k<=min(ny-1,kk+127); k=k+1) {...",shape=box];
	ForLoop25108565 -> 25190259;
	ForLoop25108565 -> _JOIN_25108565;
	25142272 [label="25142272  tmp[it]=scv_33;...",shape=box];
	_JOIN_25077479 [label="_JOIN_25077479None...",shape=box];
	_JOIN_25077479 -> ForLoop25108569;
	ForLoop25107742 [label="ForLoop25107742  for (k=kk; k<=min(ny-1,kk+127)-29; k=k+30) {...",shape=box];
	ForLoop25107742 -> 25186776;
	ForLoop25107742 -> _JOIN_25107742;
	25077511 [label="25077511  int k;...",shape=box];
	25259567 [label="25259567  tmp[(i+20)]=scv_73;...",shape=box];
	ForLoop25076275 [label="ForLoop25076275  for (it=ii; it<=min(nx-1,ii+15)-7; it=it+8) {...",shape=box];
	ForLoop25076275 -> 25142260;
	ForLoop25076275 -> _JOIN_25076275;
	25110021 [label="25110021  double scv_1;...",shape=box];
	ForLoop25068047 [label="ForLoop25068047  for (j=jj; j<=min(ny-1,jj+511); j=j+1) {...",shape=box];
	ForLoop25068047 -> 25110021;
	ForLoop25068047 -> _JOIN_25068047;
	ForLoop25076273 [label="ForLoop25076273  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop25076273 -> ForLoop25076272;
	ForLoop25076273 -> _JOIN_25076273;
	ForLoop25076272 [label="ForLoop25076272  for (kk=kkk; kk<=min(ny-1,kkk+896); kk=kk+128) {...",shape=box];
	ForLoop25076272 -> 25068081;
	ForLoop25076272 -> _JOIN_25076272;
	ForLoop25108695 [label="ForLoop25108695  for (jj=jjj; jj<=min(ny-1,jjj+1536); jj=jj+512) {...",shape=box];
	ForLoop25108695 -> ForLoop25108694;
	ForLoop25108695 -> _JOIN_25108695;
	_JOIN_25076019 [label="_JOIN_25076019None...",shape=box];
	_JOIN_25076019 -> ForLoop25076270;
	_JOIN_24816233 [label="_JOIN_24816233None...",shape=box];
	_JOIN_24816233 -> 25067715;
	25186776 [label="25186776  double scv_42, scv_43, scv_44, scv_45, scv_46, scv_47, scv_48, scv_49;...",shape=box];
	_JOIN_25076275 [label="_JOIN_25076275None...",shape=box];
	_JOIN_25076275 -> 25076276;
	_JOIN_25109650 [label="_JOIN_25109650None...",shape=box];
	_JOIN_25109650 -> _JOIN_25109652;
	25259549 [label="25259549  double scv_73, scv_74, scv_75, scv_76, scv_77, scv_78, scv_79, scv_80;...",shape=box];
	_JOIN_25076270 [label="_JOIN_25076270None...",shape=box];
	_JOIN_25076270 -> _JOIN_25076272;
	_JOIN_25076273 [label="_JOIN_25076273None...",shape=box];
	_JOIN_25076273 -> 25142272;
	_JOIN_25076272 [label="_JOIN_25076272None...",shape=box];
	_JOIN_25076272 -> _JOIN_25076273;
	ForLoop25109658 [label="ForLoop25109658  for (ii=iii; ii<=min(nx-1,iii+48); ii=ii+16) {...",shape=box];
	ForLoop25109658 -> ForLoop25076275;
	ForLoop25109658 -> _JOIN_25109658;
	ForLoop25109659 [label="ForLoop25109659  for (iii=0; iii<=nx-1; iii=iii+64) {...",shape=box];
	ForLoop25109659 -> ForLoop25109658;
	ForLoop25109659 -> _JOIN_25109659;
	_JOIN_25109653 [label="_JOIN_25109653None...",shape=box];
	_JOIN_25109653 -> 25267046;
	ForLoop25108567 [label="ForLoop25108567  for (kk=kkk; kk<=min(ny-1,kkk+896); kk=kk+128) {...",shape=box];
	ForLoop25108567 -> 25077511;
	ForLoop25108567 -> _JOIN_25108567;
	ForLoop25109653 [label="ForLoop25109653  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop25109653 -> ForLoop25109652;
	ForLoop25109653 -> _JOIN_25109653;
	ForLoop25109650 [label="ForLoop25109650  for (k=(min(ny-1,kk+127))-(((min(ny-1,kk+127))-(kk)+1)%30)+1; k<=min(ny-1,kk+127); k=k+1) {...",shape=box];
	ForLoop25109650 -> 25263290;
	ForLoop25109650 -> _JOIN_25109650;
	ForLoop25068049 [label="ForLoop25068049  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop25068049 -> ForLoop25068048;
	ForLoop25068049 -> _JOIN_25068049;
	ForLoop25068048 [label="ForLoop25068048  for (jj=jjj; jj<=min(ny-1,jjj+1536); jj=jj+512) {...",shape=box];
	ForLoop25068048 -> ForLoop25068047;
	ForLoop25068048 -> _JOIN_25068048;
	24816454 [label="24816454  register int cbv_2, cbv_3;...",shape=box];
	ForLoop25109655 [label="ForLoop25109655  for (i=(min(nx-1,ii+15))-(((min(nx-1,ii+15))-(it)+1)%30)+1; i<=min(nx-1,ii+15); i=i+1) {...",shape=box];
	ForLoop25109655 -> 25267034;
	ForLoop25109655 -> _JOIN_25109655;
	_JOIN_25068049 [label="_JOIN_25068049None...",shape=box];
	_JOIN_25068049 -> ForLoop25076273;
	_JOIN_25068048 [label="_JOIN_25068048None...",shape=box];
	_JOIN_25068048 -> _JOIN_25068049;
	ForLoop25109652 [label="ForLoop25109652  for (kk=kkk; kk<=min(ny-1,kkk+896); kk=kk+128) {...",shape=box];
	ForLoop25109652 -> 25108728;
	ForLoop25109652 -> _JOIN_25109652;
	25263290 [label="25263290  double scv_133;...",shape=box];
	25068081 [label="25068081  int k;...",shape=box];
	25068081 -> ForLoop25076019;
	_JOIN_25108565 [label="_JOIN_25108565None...",shape=box];
	_JOIN_25108565 -> _JOIN_25108567;
	_JOIN_25077475 [label="_JOIN_25077475None...",shape=box];
	_JOIN_25077475 -> _JOIN_25077477;
	_JOIN_25108567 [label="_JOIN_25108567None...",shape=box];
	_JOIN_25108567 ->expected=9369846271501.798828
actual=9369846271501.798828
 _JOIN_25108569;
	ForLoop25108694 [label="ForLoop25108694  for (j=jj; j<=min(ny-1,jj+511); j=j+1) {...",shape=box];
	ForLoop25108694 -> 25108693;
	ForLoop25108694 -> _JOIN_25108694;
	25142260 [label="25142260  double scv_33, scv_34, scv_35, scv_36, scv_37, scv_38, scv_39, scv_40;...",shape=box];
	ForLoop25108696 [label="ForLoop25108696  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop25108696 -> ForLoop25108695;
	ForLoop25108696 -> _JOIN_25108696;
	25267046 [label="25267046  tmp[i]=scv_134;...",shape=box];
	25267046 -> _JOIN_25109655;
	_JOIN_25108569 [label="_JOIN_25108569None...",shape=box];
	_JOIN_25108569 -> 25259567;
	_JOIN_25068047 [label="_JOIN_25068047None...",shape=box];
	_JOIN_25068047 -> _JOIN_25068048;
	25076276 [label="25076276  int i;...",shape=box];
	25076276 -> ForLoop25108571;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest103.exe __orio_perftest103.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest103.exe  
{'[1, 6, 4, 1, 6, 5, 0, 0, 19, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.0924439}
{'[1, 6, 4, 1, 6, 5, 0, 0, 19, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.092093}
{'[1, 6, 4, 1, 6, 5, 0, 0, 19, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.0920682}
{'[1, 6, 4, 1, 6, 5, 0, 0, 19, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.0920939}
{'[1, 6, 4, 1, 6, 5, 0, 0, 19, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.092109}
{'[1, 6, 4, 1, 6, 5, 0, 0, 19, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.0921271}
{'[1, 6, 4, 1, 6, 5, 0, 0, 19, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.0920401}
{'[1, 6, 4, 1, 6, 5, 0, 0, 19, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.0920861}
{'[1, 6, 4, 1, 6, 5, 0, 0, 19, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.092098}
{'[1, 6, 4, 1, 6, 5, 0, 0, 19, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.0921738}
{'[1, 6, 4, 1, 6, 5, 0, 0, 19, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.0920851}
{'[1, 6, 4, 1, 6, 5, 0, 0, 19, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.092134}
{'[1, 6, 4, 1, 6, 5, 0, 0, 19, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.0922699}
{'[1, 6, 4, 1, 6, 5, 0, 0, 19, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.0923822}
{'[1, 6, 4, 1, 6, 5, 0, 0, 19, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.0920548}
{'[1, 6, 4, 1, 6, 5, 0, 0, 19, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.0920582}
{'[1, 6, 4, 1, 6, 5, 0, 0, 19, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.092041}
{'[1, 6, 4, 1, 6, 5, 0, 0, 19, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.0921359}
{'[1, 6, 4, 1, 6, 5, 0, 0, 19, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.092057}
{'[1, 6, 4, 1, 6, 5, 0, 0, 19, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.092129}
{'[1, 6, 4, 1, 6, 5, 0, 0, 19, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.092088}
{'[1, 6, 4, 1, 6, 5, 0, 0, 19, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.0921791}
{'[1, 6, 4, 1, 6, 5, 0, 0, 19, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.0920839}
{'[1, 6, 4, 1, 6, 5, 0, 0, 19, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.0920961}
{'[1, 6, 4, 1, 6, 5, 0, 0, 19, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.0922079}
{'[1, 6, 4, 1, 6, 5, 0, 0, 19, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.0920441}
{'[1, 6, 4, 1, 6, 5, 0, 0, 19, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.0920749}
{'[1, 6, 4, 1, 6, 5, 0, 0, 19, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.0920861}
{'[1, 6, 4, 1, 6, 5, 0, 0, 19, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.0920839}
{'[1, 6, 4, 1, 6, 5, 0, 0, 19, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.092042}

out:
 ["{'[1, 6, 4, 1, 6, 5, 0, 0, 19, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.0924439}", "{'[1, 6, 4, 1, 6, 5, 0, 0, 19, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.092093}", "{'[1, 6, 4, 1, 6, 5, 0, 0, 19, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.0920682}", "{'[1, 6, 4, 1, 6, 5, 0, 0, 19, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.0920939}", "{'[1, 6, 4, 1, 6, 5, 0, 0, 19, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.092109}", "{'[1, 6, 4, 1, 6, 5, 0, 0, 19, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.0921271}", "{'[1, 6, 4, 1, 6, 5, 0, 0, 19, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.0920401}", "{'[1, 6, 4, 1, 6, 5, 0, 0, 19, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.0920861}", "{'[1, 6, 4, 1, 6, 5, 0, 0, 19, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.092098}", "{'[1, 6, 4, 1, 6, 5, 0, 0, 19, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.0921738}", "{'[1, 6, 4, 1, 6, 5, 0, 0, 19, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.0920851}", "{'[1, 6, 4, 1, 6, 5, 0, 0, 19, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.092134}", "{'[1, 6, 4, 1, 6, 5, 0, 0, 19, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.0922699}", "{'[1, 6, 4, 1, 6, 5, 0, 0, 19, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.0923822}", "{'[1, 6, 4, 1, 6, 5, 0, 0, 19, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.0920548}", "{'[1, 6, 4, 1, 6, 5, 0, 0, 19, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.0920582}", "{'[1, 6, 4, 1, 6, 5, 0, 0, 19, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.092041}", "{'[1, 6, 4, 1, 6, 5, 0, 0, 19, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.0921359}", "{'[1, 6, 4, 1, 6, 5, 0, 0, 19, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.092057}", "{'[1, 6, 4, 1, 6, 5, 0, 0, 19, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.092129}", "{'[1, 6, 4, 1, 6, 5, 0, 0, 19, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.092088}", "{'[1, 6, 4, 1, 6, 5, 0, 0, 19, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.0921791}", "{'[1, 6, 4, 1, 6, 5, 0, 0, 19, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.0920839}", "{'[1, 6, 4, 1, 6, 5, 0, 0, 19, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.0920961}", "{'[1, 6, 4, 1, 6, 5, 0, 0, 19, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.0922079}", "{'[1, 6, 4, 1, 6, 5, 0, 0, 19, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.0920441}", "{'[1, 6, 4, 1, 6, 5, 0, 0, 19, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.0920749}", "{'[1, 6, 4, 1, 6, 5, 0, 0, 19, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.0920861}", "{'[1, 6, 4, 1, 6, 5, 0, 0, 19, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.0920839}", "{'[1, 6, 4, 1, 6, 5, 0, 0, 19, 29, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.092042}"]
returning from 'run': {'[1, 6, 4, 1, 6, 5, 0, 0, 19, 29, 0, 29, 1, 0, 0, 1, 1, 0]': ([0.0924439, 0.092093, 0.0920682, 0.0920939, 0.092109, 0.0921271, 0.0920401, 0.0920861, 0.092098, 0.0921738, 0.0920851, 0.092134, 0.0922699, 0.0923822, 0.0920548, 0.0920582, 0.092041, 0.0921359, 0.092057, 0.092129, 0.092088, 0.0921791, 0.0920839, 0.0920961, 0.0922079, 0.0920441, 0.0920749, 0.0920861, 0.0920839, 0.092042], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.0924439, 0.092093, 0.0920682, 0.0920939, 0.092109, 0.0921271, 0.0920401, 0.0920861, 0.092098, 0.0921738, 0.0920851, 0.092134, 0.0922699, 0.0923822, 0.0920548, 0.0920582, 0.092041, 0.0921359, 0.092057, 0.092129, 0.092088, 0.0921791, 0.0920839, 0.0920961, 0.0922079, 0.0920441, 0.0920749, 0.0920861, 0.0920839, 0.092042], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[1, 6, 4, 1, 6, 5, 0, 0, 19, 29, 0, 29, 1, 0, 0, 1, 1, 0]': ([0.0924439, 0.092093, 0.0920682, 0.0920939, 0.092109, 0.0921271, 0.0920401, 0.0920861, 0.092098, 0.0921738, 0.0920851, 0.092134, 0.0922699, 0.0923822, 0.0920548, 0.0920582, 0.092041, 0.0921359, 0.092057, 0.092129, 0.092088, 0.0921791, 0.0920839, 0.0920961, 0.0922079, 0.0920441, 0.0920749, 0.0920861, 0.0920839, 0.092042], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [2, 5, 3, 6, 11, 25, 0, 21, 0, 2, 0, 1]
Fixed Factors: {'ACOPY_x': 0, 'ACOPY_y': 0, 'T2_K': 5, 'T2_J': 6, 'VEC1': 1, 'SCR': 1}
Testing candidate 4: [2, 5, 3, 6, 6, 5, 0, 0, 11, 25, 0, 21, 0, 2, 0, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	6
        Additions: 		6129
        Multiplications: 	3024
        Divisions: 		0
        Logical: 		0
        Reads: 			11387
        Writes: 		1788
        Comparisons:		22
        Gotos: 			0
        
digraph CFG {
	25319955 [label="25319955  int i;...",shape=box];
	_JOIN_25646560 [label="_JOIN_25646560None...",shape=box];
	_JOIN_25646560 -> _JOIN_25646561;
	_JOIN_25646485 [label="_JOIN_25646485None...",shape=box];
	_JOIN_25646485 -> 25936345;
	25595961 [label="25595961  double x_copy;...",shape=box];
	25841625 [label="25841625  double scv_105;...",shape=box];
	_JOIN_25646561 [label="_JOIN_25646561None...",shape=box];
	25845362 [label="25845362  tmp[i]=scv_106;...",shape=box];
	25845362 -> _JOIN_25646558;
	25320496 [label="25320496  register int cbv_2, cbv_3;...",shape=box];
	_JOIN_25320347 [label="_JOIN_25320347None...",shape=box];
	_JOIN_25320347 -> 25595961;
	ForLoop25645781 [label="ForLoop25645781  for (jt=jj; jt<=cbv_6; jt=jt+32) {...",shape=box];
	ForLoop25645781 -> 25644973;
	ForLoop25645781 -> _JOIN_25645781;
	ForLoop25624933 [label="ForLoop25624933  for (j=jt; j<=cbv_2; j=j+1) {...",shape=box];
	ForLoop25624933 -> 25686795;
	ForLoop25624933 -> _JOIN_25624933;
	25644973 [label="25644973  scv_106=scv_106+A[i*ny+jt]*x[jt];...",shape=box];
	25834111 [label="25834111  double scv_57, scv_58, scv_59, scv_60, scv_61, scv_62, scv_63, scv_64;...",shape=box];
	ForLoop25624937 [label="ForLoop25624937  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop25624937 -> ForLoop25624935;
	ForLoop25624937 -> _JOIN_25624937;
	ForLoop25646485 [label="ForLoop25646485  for (k=kk; k<=cbv_8; k=k+22) {...",shape=box];
	ForLoop25646485 -> 25841096;
	ForLoop25646485 -> _JOIN_25646485;
	ForLoop25624935 [label="ForLoop25624935  for (jj=jjj; jj<=min(ny-1,jjj+1792); jj=jj+256) {...",shape=box];
	ForLoop25624935 -> 25922510;
	ForLoop25624935 -> _JOIN_25624935;
	_JOIN_25645820 [label="_JOIN_25645820None...",shape=box];
	_JOIN_25645820 -> _JOIN_25645822;
	ForLoop25320347 [label="ForLoop25320347  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop25320347 -> 25320346;
	ForLoop25320347 -> _JOIN_25320347;
	25922510 [label="25922510  register int cbv_1;...",shape=box];
	25624969 [label="25624969  int k;...",shape=box];
	_JOIN_25624933 [label="_JOIN_25624933None...",shape=box];
	_JOIN_25624933 -> _JOIN_25624935;
	25845350 [label="25845350  double scv_106;...",shape=box];
	ForLoop25645822 [label="ForLoop25645822  for (jj=jjj; jj<=min(ny-1,jjj+1792); jj=jj+256) {...",shape=box];
	ForLoop25645822 -> 25935437;
	ForLoop25645822 -> _JOIN_25645822;
	_JOIN_25624937 [label="_JOIN_25624937None...",shape=box];
	_JOIN_25624937 -> ForLoop25644847;
	_JOIN_25644843 [label="_JOIN_25644843None...",shape=box];
	_JOIN_25644843 -> _JOIN_25644845;
	_JOIN_25624935 [label="_JOIN_25624935None...",shape=box];
	_JOIN_25624935 -> _JOIN_25624937;
	_JOIN_25646558 [label="_JOIN_25646558None...",shape=box];
	_JOIN_25646558 -> _JOIN_25646560;
	ForLoop25645820 [label="ForLoop25645820  for (j=jt; j<=cbv_7; j=j+1) {...",shape=box];
	ForLoop25645820 -> 25645819;
	ForLoop25645820 -> _JOIN_25645820;
	_JOIN_25624168 [label="_JOIN_25624168None...",shape=box];
	_JOIN_25624168 -> 25922987;
	ForLoop25644843 [label="ForLoop25644843  for (k=cbv_4; k<=cbv_5; k=k+1) {...",shape=box];
	ForLoop25644843 -> 25765033;
	ForLoop25644843 -> _JOIN_25644843;
	ForLoop25645823 [label="ForLoop25645823  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop25645823 -> ForLoop25645822;
	ForLoop25645823 -> _JOIN_25645823;
	ForLoop25644845 [label="ForLoop25644845  for (kk=kkk; kk<=min(ny-1,kkk+960); kk=kk+64) {...",shape=box];
	ForLoop25644845 -> 25624969;
	ForLoop25644845 -> _JOIN_25644845;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 25319955;
	ForLoop25644847 [label="ForLoop25644847  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop25644847 -> ForLoop25644845;
	ForLoop25644847 -> _JOIN_25644847;
	ForLoop25644849 [label="ForLoop25644849  for (i=ii; i<=min(nx-1,ii+31)-25; i=i+26) {...",shape=box];
	ForLoop25644849 -> 25834111;
	ForLoop25644849 -> _JOIN_25644849;
	ForLoop25646561 [label="ForLoop25646561  for (iii=0; iii<=nx-1; iii=iii+2048) {...",shape=box];
	ForLoop25646561 -> ForLoop25646560;
	ForLoop25646561 -> _JOIN_25646561;
	25922987 [label="25922987  register int cbv_2;...",shape=box];
	25320177 [label="25320177  y[i]=0.0;...",shape=box];
	_JOIN_25644847 [label="_JOIN_25644847None...",shape=box];
	_JOIN_25644847 -> 25834129;
	_JOIN_25645823 [label="_JOIN_25645823None...",shape=box];
	_JOIN_25645823 -> ForLoop25646556;
	ForLoop25646560 [label="ForLoop25646560  for (ii=iii; ii<=min(nx-1,iii+2016); ii=ii+32) {...",shape=box];
	ForLoop25646560 -> 25595994;
	ForLoop25646560 -> _JOIN_25646560;
	ForLoop25624168 [label="ForLoop25624168  for (jt=jj; jt<=cbv_1; jt=jt+32) {...",expected=9369846271501.798828
actual=9369846271501.798828
shape=box];
	ForLoop25624168 -> 25684625;
	ForLoop25624168 -> _JOIN_25624168;
	_JOIN_25644124 [label="_JOIN_25644124None...",shape=box];
	_JOIN_25644124 -> 25934673;
	_JOIN_25644849 [label="_JOIN_25644849None...",shape=box];
	_JOIN_25644849 -> ForLoop25646558;
	25762503 [label="25762503  double scv_34, scv_35, scv_36, scv_37, scv_38, scv_39, scv_40, scv_41;...",shape=box];
	25686795 [label="25686795  double scv_33;...",shape=box];
	_JOIN_25645822 [label="_JOIN_25645822None...",shape=box];
	_JOIN_25645822 -> _JOIN_25645823;
	_JOIN_25320278 [label="_JOIN_25320278None...",shape=box];
	_JOIN_25320278 -> 25320496;
	25595994 [label="25595994  int i;...",shape=box];
	25595994 -> ForLoop25644849;
	_JOIN_25646556 [label="_JOIN_25646556None...",shape=box];
	_JOIN_25646556 -> 25845362;
	25645819 [label="25645819  scv_106=scv_106+A[i*ny+j]*x[j];...",shape=box];
	25645819 -> _JOIN_25645820;
	25320346 [label="25320346  y[i]=0.0;...",shape=box];
	25320346 -> _JOIN_25320347;
	_JOIN_25644845 [label="_JOIN_25644845None...",shape=box];
	_JOIN_25644845 -> _JOIN_25644847;
	25934673 [label="25934673  register int cbv_4, cbv_5;...",shape=box];
	25684625 [label="25684625  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	ForLoop25320278 [label="ForLoop25320278  for (i=0; i<=cbv_1; i=i+12) {...",shape=box];
	ForLoop25320278 -> 25320177;
	ForLoop25320278 -> _JOIN_25320278;
	25841096 [label="25841096  double scv_83, scv_84, scv_85, scv_86, scv_87, scv_88, scv_89, scv_90;...",shape=box];
	25834129 [label="25834129  tmp[(i+20)]=scv_57;...",shape=box];
	ForLoop25646555 [label="ForLoop25646555  for (kk=kkk; kk<=min(ny-1,kkk+960); kk=kk+64) {...",shape=box];
	ForLoop25646555 -> 25645855;
	ForLoop25646555 -> _JOIN_25646555;
	_JOIN_25645781 [label="_JOIN_25645781None...",shape=box];
	_JOIN_25645781 -> 25935484;
	ForLoop25646556 [label="ForLoop25646556  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop25646556 -> ForLoop25646555;
	ForLoop25646556 -> _JOIN_25646556;
	25645855 [label="25645855  int k;...",shape=box];
	25765033 [label="25765033  double scv_56;...",shape=box];
	ForLoop25646553 [label="ForLoop25646553  for (k=cbv_9; k<=cbv_10; k=k+1) {...",shape=box];
	ForLoop25646553 -> 25841625;
	ForLoop25646553 -> _JOIN_25646553;
	25936345 [label="25936345  register int cbv_9, cbv_10;...",shape=box];
	_JOIN_25646555 [label="_JOIN_25646555None...",shape=box];
	_JOIN_25646555 -> _JOIN_25646556;
	25935484 [label="25935484  register int cbv_7;...",shape=box];
	ForLoop25644124 [label="ForLoop25644124  for (k=kk; k<=cbv_3; k=k+22) {...",shape=box];
	ForLoop25644124 -> 25762503;
	ForLoop25644124 -> _JOIN_25644124;
	25935437 [label="25935437  register int cbv_6;...",shape=box];
	ForLoop25646558 [label="ForLoop25646558  for (i=(min(nx-1,ii+31))-(((min(nx-1,ii+31))-(ii)+1)%26)+1; i<=min(nx-1,ii+31); i=i+1) {...",shape=box];
	ForLoop25646558 -> 25845350;
	ForLoop25646558 -> _JOIN_25646558;
	_JOIN_25646553 [label="_JOIN_25646553None...",shape=box];
	_JOIN_25646553 -> _JOIN_25646555;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest104.exe __orio_perftest104.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest104.exe  
{'[2, 5, 3, 6, 6, 5, 0, 0, 11, 25, 0, 21, 0, 2, 0, 1, 1, 1]' : 0.113146}
{'[2, 5, 3, 6, 6, 5, 0, 0, 11, 25, 0, 21, 0, 2, 0, 1, 1, 1]' : 0.112997}
{'[2, 5, 3, 6, 6, 5, 0, 0, 11, 25, 0, 21, 0, 2, 0, 1, 1, 1]' : 0.11385}
{'[2, 5, 3, 6, 6, 5, 0, 0, 11, 25, 0, 21, 0, 2, 0, 1, 1, 1]' : 0.112998}
{'[2, 5, 3, 6, 6, 5, 0, 0, 11, 25, 0, 21, 0, 2, 0, 1, 1, 1]' : 0.112927}
{'[2, 5, 3, 6, 6, 5, 0, 0, 11, 25, 0, 21, 0, 2, 0, 1, 1, 1]' : 0.113022}
{'[2, 5, 3, 6, 6, 5, 0, 0, 11, 25, 0, 21, 0, 2, 0, 1, 1, 1]' : 0.112901}
{'[2, 5, 3, 6, 6, 5, 0, 0, 11, 25, 0, 21, 0, 2, 0, 1, 1, 1]' : 0.113046}
{'[2, 5, 3, 6, 6, 5, 0, 0, 11, 25, 0, 21, 0, 2, 0, 1, 1, 1]' : 0.112915}
{'[2, 5, 3, 6, 6, 5, 0, 0, 11, 25, 0, 21, 0, 2, 0, 1, 1, 1]' : 0.11283}
{'[2, 5, 3, 6, 6, 5, 0, 0, 11, 25, 0, 21, 0, 2, 0, 1, 1, 1]' : 0.113077}
{'[2, 5, 3, 6, 6, 5, 0, 0, 11, 25, 0, 21, 0, 2, 0, 1, 1, 1]' : 0.113205}
{'[2, 5, 3, 6, 6, 5, 0, 0, 11, 25, 0, 21, 0, 2, 0, 1, 1, 1]' : 0.113066}
{'[2, 5, 3, 6, 6, 5, 0, 0, 11, 25, 0, 21, 0, 2, 0, 1, 1, 1]' : 0.113208}
{'[2, 5, 3, 6, 6, 5, 0, 0, 11, 25, 0, 21, 0, 2, 0, 1, 1, 1]' : 0.112856}
{'[2, 5, 3, 6, 6, 5, 0, 0, 11, 25, 0, 21, 0, 2, 0, 1, 1, 1]' : 0.112966}
{'[2, 5, 3, 6, 6, 5, 0, 0, 11, 25, 0, 21, 0, 2, 0, 1, 1, 1]' : 0.112975}
{'[2, 5, 3, 6, 6, 5, 0, 0, 11, 25, 0, 21, 0, 2, 0, 1, 1, 1]' : 0.11306}
{'[2, 5, 3, 6, 6, 5, 0, 0, 11, 25, 0, 21, 0, 2, 0, 1, 1, 1]' : 0.112955}
{'[2, 5, 3, 6, 6, 5, 0, 0, 11, 25, 0, 21, 0, 2, 0, 1, 1, 1]' : 0.113953}
{'[2, 5, 3, 6, 6, 5, 0, 0, 11, 25, 0, 21, 0, 2, 0, 1, 1, 1]' : 0.11296}
{'[2, 5, 3, 6, 6, 5, 0, 0, 11, 25, 0, 21, 0, 2, 0, 1, 1, 1]' : 0.112976}
{'[2, 5, 3, 6, 6, 5, 0, 0, 11, 25, 0, 21, 0, 2, 0, 1, 1, 1]' : 0.112982}
{'[2, 5, 3, 6, 6, 5, 0, 0, 11, 25, 0, 21, 0, 2, 0, 1, 1, 1]' : 0.112936}
{'[2, 5, 3, 6, 6, 5, 0, 0, 11, 25, 0, 21, 0, 2, 0, 1, 1, 1]' : 0.113173}
{'[2, 5, 3, 6, 6, 5, 0, 0, 11, 25, 0, 21, 0, 2, 0, 1, 1, 1]' : 0.113058}
{'[2, 5, 3, 6, 6, 5, 0, 0, 11, 25, 0, 21, 0, 2, 0, 1, 1, 1]' : 0.113041}
{'[2, 5, 3, 6, 6, 5, 0, 0, 11, 25, 0, 21, 0, 2, 0, 1, 1, 1]' : 0.113005}
{'[2, 5, 3, 6, 6, 5, 0, 0, 11, 25, 0, 21, 0, 2, 0, 1, 1, 1]' : 0.112951}
{'[2, 5, 3, 6, 6, 5, 0, 0, 11, 25, 0, 21, 0, 2, 0, 1, 1, 1]' : 0.112924}

out:
 ["{'[2, 5, 3, 6, 6, 5, 0, 0, 11, 25, 0, 21, 0, 2, 0, 1, 1, 1]' : 0.113146}", "{'[2, 5, 3, 6, 6, 5, 0, 0, 11, 25, 0, 21, 0, 2, 0, 1, 1, 1]' : 0.112997}", "{'[2, 5, 3, 6, 6, 5, 0, 0, 11, 25, 0, 21, 0, 2, 0, 1, 1, 1]' : 0.11385}", "{'[2, 5, 3, 6, 6, 5, 0, 0, 11, 25, 0, 21, 0, 2, 0, 1, 1, 1]' : 0.112998}", "{'[2, 5, 3, 6, 6, 5, 0, 0, 11, 25, 0, 21, 0, 2, 0, 1, 1, 1]' : 0.112927}", "{'[2, 5, 3, 6, 6, 5, 0, 0, 11, 25, 0, 21, 0, 2, 0, 1, 1, 1]' : 0.113022}", "{'[2, 5, 3, 6, 6, 5, 0, 0, 11, 25, 0, 21, 0, 2, 0, 1, 1, 1]' : 0.112901}", "{'[2, 5, 3, 6, 6, 5, 0, 0, 11, 25, 0, 21, 0, 2, 0, 1, 1, 1]' : 0.113046}", "{'[2, 5, 3, 6, 6, 5, 0, 0, 11, 25, 0, 21, 0, 2, 0, 1, 1, 1]' : 0.112915}", "{'[2, 5, 3, 6, 6, 5, 0, 0, 11, 25, 0, 21, 0, 2, 0, 1, 1, 1]' : 0.11283}", "{'[2, 5, 3, 6, 6, 5, 0, 0, 11, 25, 0, 21, 0, 2, 0, 1, 1, 1]' : 0.113077}", "{'[2, 5, 3, 6, 6, 5, 0, 0, 11, 25, 0, 21, 0, 2, 0, 1, 1, 1]' : 0.113205}", "{'[2, 5, 3, 6, 6, 5, 0, 0, 11, 25, 0, 21, 0, 2, 0, 1, 1, 1]' : 0.113066}", "{'[2, 5, 3, 6, 6, 5, 0, 0, 11, 25, 0, 21, 0, 2, 0, 1, 1, 1]' : 0.113208}", "{'[2, 5, 3, 6, 6, 5, 0, 0, 11, 25, 0, 21, 0, 2, 0, 1, 1, 1]' : 0.112856}", "{'[2, 5, 3, 6, 6, 5, 0, 0, 11, 25, 0, 21, 0, 2, 0, 1, 1, 1]' : 0.112966}", "{'[2, 5, 3, 6, 6, 5, 0, 0, 11, 25, 0, 21, 0, 2, 0, 1, 1, 1]' : 0.112975}", "{'[2, 5, 3, 6, 6, 5, 0, 0, 11, 25, 0, 21, 0, 2, 0, 1, 1, 1]' : 0.11306}", "{'[2, 5, 3, 6, 6, 5, 0, 0, 11, 25, 0, 21, 0, 2, 0, 1, 1, 1]' : 0.112955}", "{'[2, 5, 3, 6, 6, 5, 0, 0, 11, 25, 0, 21, 0, 2, 0, 1, 1, 1]' : 0.113953}", "{'[2, 5, 3, 6, 6, 5, 0, 0, 11, 25, 0, 21, 0, 2, 0, 1, 1, 1]' : 0.11296}", "{'[2, 5, 3, 6, 6, 5, 0, 0, 11, 25, 0, 21, 0, 2, 0, 1, 1, 1]' : 0.112976}", "{'[2, 5, 3, 6, 6, 5, 0, 0, 11, 25, 0, 21, 0, 2, 0, 1, 1, 1]' : 0.112982}", "{'[2, 5, 3, 6, 6, 5, 0, 0, 11, 25, 0, 21, 0, 2, 0, 1, 1, 1]' : 0.112936}", "{'[2, 5, 3, 6, 6, 5, 0, 0, 11, 25, 0, 21, 0, 2, 0, 1, 1, 1]' : 0.113173}", "{'[2, 5, 3, 6, 6, 5, 0, 0, 11, 25, 0, 21, 0, 2, 0, 1, 1, 1]' : 0.113058}", "{'[2, 5, 3, 6, 6, 5, 0, 0, 11, 25, 0, 21, 0, 2, 0, 1, 1, 1]' : 0.113041}", "{'[2, 5, 3, 6, 6, 5, 0, 0, 11, 25, 0, 21, 0, 2, 0, 1, 1, 1]' : 0.113005}", "{'[2, 5, 3, 6, 6, 5, 0, 0, 11, 25, 0, 21, 0, 2, 0, 1, 1, 1]' : 0.112951}", "{'[2, 5, 3, 6, 6, 5, 0, 0, 11, 25, 0, 21, 0, 2, 0, 1, 1, 1]' : 0.112924}"]
returning from 'run': {'[2, 5, 3, 6, 6, 5, 0, 0, 11, 25, 0, 21, 0, 2, 0, 1, 1, 1]': ([0.113146, 0.112997, 0.11385, 0.112998, 0.112927, 0.113022, 0.112901, 0.113046, 0.112915, 0.11283, 0.113077, 0.113205, 0.113066, 0.113208, 0.112856, 0.112966, 0.112975, 0.11306, 0.112955, 0.113953, 0.11296, 0.112976, 0.112982, 0.112936, 0.113173, 0.113058, 0.113041, 0.113005, 0.112951, 0.112924], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.113146, 0.112997, 0.11385, 0.112998, 0.112927, 0.113022, 0.112901, 0.113046, 0.112915, 0.11283, 0.113077, 0.113205, 0.113066, 0.113208, 0.112856, 0.112966, 0.112975, 0.11306, 0.112955, 0.113953, 0.11296, 0.112976, 0.112982, 0.112936, 0.113173, 0.113058, 0.113041, 0.113005, 0.112951, 0.112924], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[2, 5, 3, 6, 6, 5, 0, 0, 11, 25, 0, 21, 0, 2, 0, 1, 1, 1]': ([0.113146, 0.112997, 0.11385, 0.112998, 0.112927, 0.113022, 0.112901, 0.113046, 0.112915, 0.11283, 0.113077, 0.113205, 0.113066, 0.113208, 0.112856, 0.112966, 0.112975, 0.11306, 0.112955, 0.113953, 0.11296, 0.112976, 0.112982, 0.112936, 0.113173, 0.113058, 0.113041, 0.113005, 0.112951, 0.112924], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [0, 5, 5, 6, 13, 3, 28, 0, 0, 1, 1, 1]
Fixed Factors: {'ACOPY_x': 0, 'ACOPY_y': 0, 'T2_K': 5, 'T2_J': 6, 'VEC1': 1, 'SCR': 1}
Testing candidate 5: [0, 5, 5, 6, 6, 5, 0, 0, 13, 3, 28, 0, 0, 1, 1, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	29
        Max loop nest depth: 	5
        Additions: 		1169
        Multiplications: 	470
        Divisions: 		0
        Logical: 		0
        Reads: 			2263
        Writes: 		391
        Comparisons:		29
        Gotos: 			0
        
digraph CFG {
	_JOIN_26000193 [label="_JOIN_26000193None...",shape=box];
	_JOIN_26000191 [label="_JOIN_26000191None...",shape=box];
	_JOIN_26000191 -> _JOIN_26000193;
	ForLoop25993501 [label="ForLoop25993501  for (jt=jj; jt<=cbv_1; jt=jt+8) {...",shape=box];
	ForLoop25993501 -> 26001623;
	ForLoop25993501 -> _JOIN_25993501;
	ForLoop25999871 [label="ForLoop25999871  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop25999871 -> ForLoop25999870;
	ForLoop25999871 -> _JOIN_25999871;
	ForLoop25999870 [label="ForLoop25999870  for (jj=jjj; jj<=min(ny-1,jjj+1792); jj=jj+256) {...",shape=box];
	ForLoop25999870 -> 26045838;
	ForLoop25999870 -> _JOIN_25999870;
	26045528 [label="26045528  register int cbv_14;...",shape=box];
	26046947 [label="26046947  register int cbv_21;...",shape=box];
	25999057 [label="25999057  int j;...",shape=box];
	ForLoop25937010 [label="ForLoop25937010  for (i=0; i<=cbv_1; i=i+14) {...",shape=box];
	ForLoop25937010 -> 25936891;
	ForLoop25937010 -> _JOIN_25937010;
	ForLoop25994244 [label="ForLoop25994244  for (j=jt; j<=cbv_2; j=j+29) {...",shape=box];
	ForLoop25994244 -> 25993542;
	ForLoop25994244 -> _JOIN_25994244;
	_JOIN_25937079 [label="_JOIN_25937079None...",shape=box];
	_JOIN_25937079 -> 25992384;
	ForLoop25999867 [label="ForLoop25999867  for (j=cbv_18; j<=cbv_19; j=j+1) {...",shape=box];
	ForLoop25999867 -> 25999866;
	ForLoop25999867 -> _JOIN_25999867;
	25936639 [label="25936639  int i;...",shape=box];
	_JOIN_26000189 [label="_JOIN_26000189None...",shape=box];
	_JOIN_26000189 -> 26034686;
	_JOIN_26000188 [label="_JOIN_26000188None...",shape=box];
	_JOIN_26000188 -> _JOIN_26000189;
	ForLoop25997558 [label="ForLoop25997558  for (j=cbv_12; j<=cbv_13; j=j+1) {...",shape=box];
	ForLoop25997558 -> 25997557;
	ForLoop25997558 -> _JOIN_25997558;
	26045637 [label="26045637  register int cbv_15;...",shape=box];
	_JOIN_25995317 [label="_JOIN_25995317None...",shape=box];
	_JOIN_25995317 -> 26043075;
	ForLoop25994312 [label="ForLoop25994312  for (j=cbv_3; j<=cbv_4; j=j+1) {...",shape=box];
	ForLoop25994312 -> 25994311;
	ForLoop25994312 -> _JOIN_25994312;
	ForLoop25996476 [label="ForLoop25996476  for (j=cbv_9; j<=cbv_10; j=j+1) {...",shape=box];
	ForLoop25996476 -> 25996475;
	ForLoop25996476 -> _JOIN_25996476;
	ForLoop25998624 [label="ForLoop25998624  for (kt=kk; kt<=cbv_14; kt=kt+8) {...",shape=box];
	ForLoop25998624 -> 26019215;
	ForLoop25998624 -> _JOIN_25998624;
	ForLoop25998746 [label="ForLoop25998746  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop25998746 -> ForLoop25998744;
	ForLoop25998746 -> _JOIN_25998746;
	ForLoop25998744 [label="ForLoop25998744  for (kk=kkk; kk<=min(ny-1,kkk+768); kk=kk+256) {...",shape=box];
	ForLoop25998744 -> 26045528;
	ForLoop25998744 -> _JOIN_25998744;
	ForLoop25998742 [label="ForLoop25998742  for (k=kt; k<=cbv_15; k=k+1) {...",shape=box];
	ForLoop25998742 -> 26019576;
	ForLoop25998742 -> _JOIN_25998742;
	ForLoop25998748 [label="ForLoop25998748  for (i=iii; i<=min(nx-1,iii+2047)-3; i=i+4) {...",shape=box];
	ForLoop25998748 -> 26027720;
	ForLoop25998748 -> _JOIN_25998748;
	ForLoop25999056 [label="ForLoop25999056  for (jt=jj; jt<=cbv_16; jt=jt+8) {...",shape=box];
	ForLoop25999056 -> 25998872;
	ForLoop25999056 -> _JOIN_25999056;
	25993542 [label="25993542  scv_21=scv_21+A[i*ny+j]*x[j];...",shape=box];
	25995396 [label="25995396  int j;...",shape=box];
	ForLoop25997481 [label="ForLoop25997481  for (j=jt; j<=cbv_11; j=j+29) {...",shape=box];
	ForLoop25997481 -> 25996527;
	ForLoop25997481 -> _JOIN_25997481;
	25995393 [label="25995393  scv_19=scv_19+A[(i+1)*ny+j]*x[j];...",shape=box];
	25995393 -> _JOIN_25995394;
	25992384 [label="25992384  double x_copy;...",shape=box];
	26032387 [label="26032387  double scv_30;...",shape=box];
	26027720 [label="26027720  double scv_18, scv_19, scv_20, scv_21;...",shape=box];
	ForLoop25937079 [label="ForLoop25937079  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop25937079 -> 25937078;
	ForLoop25937079 -> _JOIN_25937079;
	_JOIN_25997563 [label="_JOIN_25997563None...",shape=box];
	_JOIN_25997563 -> ForLoop25998746;
	_JOIN_25997561 [label="_JOIN_25997561None...",shape=box];
	_JOIN_25997561 -> _JOIN_25997563;
	ForLoop26000186 [label="ForLoop26000186  for (k=kt; k<=cbv_21; k=k+1) {...",shape=box];
	ForLoop26000186 -> 26032387;
	ForLoop26000186 -> _JOIN_26000186;
	25998872 [label="25998872  scv_31=scv_31+A[i*ny+jt]*x[jt];...",shape=box];
	_JOIN_25937010 [label="_JOIN_25937010None...",shape=box];
	_JOIN_25937010 -> 25937246;
	26046889 [label="26046889  register int cbv_20;...",shape=box];
	ForLoop26000189 [label="ForLoop26000189  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop26000189 -> ForLoop26000188;
	ForLoop26000189 -> _JOIN_26000189;
	ForLoop26000188 [label="ForLoop26000188  for (kk=kkk; kk<=min(ny-1,kkk+768); kk=kk+256) {...",shape=box];
	ForLoop26000188 -> 26046889;
	ForLoop26000188 -> _JOIN_26000188;
	_JOIN_25995394 [label="_JOIN_25995394None...",shape=box];
	_JOIN_25995394 -> 25995396;
	26044747 [label="26044747  register int cbv_12, cbv_13;...",shape=box];
	_JOIN_25999056 [label="_JOIN_25999056None...",shape=box];
	_JOIN_25999056 -> 25999057;
	_JOIN_25994312 [label="_JOIN_25994312None...",shape=box];
	_JOIN_25994312 -> 25994314;
	26043911 [label="26043911  register int cbv_9, cbv_10;...",shape=box];
	26043075 [label="26043075  register int cbv_6, cbv_7;...",shape=box];
	25992399 [label="25992399  int i;...",shape=box];
	25992399 -> ForLoop25998748;
	26032183 [label="26032183  double scv_22, scv_23, scv_24, scv_25, scv_26, scv_27, scv_28, scv_29;...",shape=box];
	25994311 [label="25994311  scv_21=scv_21+A[i*ny+j]*x[j];...",shape=box];
	25994311 -> _JOIN_25994312;
	26034686 [label="26034686  tmp[i]=scv_31;...",shape=box];
	26034686 -> _JOIN_26000191;
	_JOIN_25993501 [label="_JOIN_25993501None...",shape=box];
	_JOIN_25993501 -> 25993502;
	25996478 [label="25996478  int j;...",shape=box];
	26027738 [label="26027738  tmp[(i+2)]=scv_18;...",shape=box];
	ForLoop26000193 [label="ForLoop26000193  for (iii=0; iii<=nx-1; iii=iii+2048) {...",shape=box];
	ForLoop26000193 -> 25992399;
	ForLoop26000193 -> _JOIN_26000193;
	ForLoop26000191 [label="ForLoop26000191  for (i=(min(nx-1,iii+2047))-(((min(nx-1,iii+2047))-(iii)+1)%4)+1; i<=min(nx-1,iii+2047); i=i+1) {...",shape=box];
	ForLoop26000191 -> 26034674;
	ForLoop26000191 -> _JOIN_26000191;
	ForLoop25996399 [label="ForLoop25996399  for (j=jt; j<=cbv_8; j=j+29) {...",shape=box];
	ForLoop25996399 -> 25995445;
	ForLoop25996399 -> _JOIN_25996399;
	25937246 [label="25937246  register int cbv_2, cbv_3;...",shape=box];
	_JOIN_25996476 [label="_JOIN_25996476None...",shape=box];
	_JOIN_25996476 -> 25996478;
	_JOIN_25994244 [label="_JOIN_25994244None...",shape=box];
	_JOIN_25994244 -> 26042239;
	25999097 [label="25999097  scv_31=scv_31+A[i*ny+j]*x[j];...",shape=box];
	_JOIN_25999867 [label="_JOIN_25999867None...",shape=box];
	_JOIN_25999867 -> _JOIN_25999870;
	26046551 [label="26046551  register int cbv_18, cbv_19;...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 25936639;
	25994363 [label="25994363  scv_19=scv_19+A[(i+1)*ny+j]*x[j];...",shape=box];
	26034674 [label="26034674  double scv_31;...",shape=box];
	26042239 [label="26042239  register int cbv_3, cbv_4;...",shape=box];
	_JOIN_25998624 [label="_JOIN_25998624None...",shape=box];
	_JOIN_25998624 -> 26045637;
	25994314 [label="25994314  int j;...",shape=box];
	_JOIN_25998746 [label="_JOIN_25998746None...",shape=box];
	_JOIN_25998746 -> 26027738;
	_JOIN_25998744 [label="_JOIN_25998744None...",shape=box];
	_JOIN_25998744 -> _JOIN_25998746;
	_JOIN_25998742 [label="_JOIN_25998742None...",shape=box];
	_JOIN_25998742 -> _JOIN_25998744;
	_JOIN_25998748 [label="_JOIN_25998748None...",shape=box];
	_JOIN_25998748 -> ForLoop26000191;
	_JOIN_25997481 [label="_JOIN_25997481None...",shape=box];
	_JOIN_25997481 -> 26044747;
	25937078 [label="25937078  y[i]=0.0;...",shape=box];
	25937078 -> _JOIN_25937079;
	26019576 [label="26019576  double scv_17;...",shape=box];
	25997557 [label="25997557  scv_20=scv_20+A[(i+3)*ny+j]*x[j];...",shape=box];
	25997557 -> _JOIN_25997558;
	_JOIN_25999871 [label="_JOIN_25999871None...",shape=box];
	_JOIN_25999871 -> ForLoop26000189;
	_JOIN_25999870 [label="_JOIN_25999870None...",shape=box];
	_JOIN_25999870 -> _JOIN_25999871;
	25995445 [label="25995445  scv_18=scv_18+A[(i+2)*ny+j]*x[j];...",shape=box];
	25936891 [label="25936891  y[i]=0.0;...",shape=box];
	ForLoop26000147 [label="ForLoop26000147  for (kt=kk; kt<=cbv_20; kt=kt+8) {...",shape=box];
	ForLoop26000147 -> 26032183;
	ForLoop26000147 -> _JOIN_26000147;
	26045838 [label="26045838  register int cbv_16;...",shape=box];
	25996475 [label="25996475  scv_18=scv_18+A[(i+2)*ny+j]*x[j];...",shape=box];
	25996475 -> _JOIN_25996476;
	25999866 [label="25999866  scv_31=scv_31+A[i*ny+j]*x[j];...",shape=box];
	25999866 -> _JOIN_25999867;
	ForLoop25997563 [label="ForLoop25997563  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop25997563 -> ForLoop25997561;
	ForLoop25997563 -> _JOIN_25997563;
	ForLoop25997561 [label="ForLoop25997561  for (jj=jjj; jj<=min(ny-1,jjj+1792); jj=jj+256) {...",shape=box];
	ForLoop25997561 -> 26041526;
	ForLoop25997561 -> _JOIN_25997561;
	_JOIN_26000186 [label="_JOIN_26000186None...",shape=box];
	_JOIN_26000186 -> _JOIN_26000188;
	26001623 [label="26001623  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	_JOIN_26000147 [label="_JOIN_26000147None...",shape=box];
	_JOIN_26000147 -> 26046947;
	ForLoop25999799 [label="ForLoop25999799  for (j=jt; j<=cbv_17; j=j+29) {...",shape=box];
	ForLoop25999799 -> 25999097;
	ForLoop25999799 -> _JOIN_25999799;
	ForLoop25995317 [label="ForLoop25995317  for (j=jt; j<=cbv_5; j=j+29) {...",shape=box];
	ForLoop25995317 -> 25994363;
	ForLoop25995317 -> _JOIN_25995317;
	26041526 [label="26041526  register int cbv_1;...",shape=box];
	_JOIN_25996399 [label="_JOIN_25996399None...",shape=box];
	_JOIN_25996399 -> 26043911;
	26019215 [label="26019215  double scv_9, scv_10, scv_11, scv_12, scv_13, scv_14, scv_15, scv_16;...",shape=box];
	25996527 [label="25996527  scv_20=scv_20+A[(i+3)*ny+j]*x[j];...",shape=box];
	ForLoop25995394 [label="ForLoop25995394  for (j=cbv_6; j<=cbv_7; j=j+1) {...",shape=box];
	ForLoop25995394 -> 25995393;
	ForLoop25995394 -> _JOIN_25995394;
	_JOIN_25999799 [label="_JOIN_25999799None...",shape=box];
	_JOIN_25999799 -> 26046551;
	_JOIN_25997558 [label="_JOIN_25997558None...",shape=box];
	_JOIN_25997558 -> _JOIN_25997561;
	25993502 [label="25993502  int j;...",shape=box];

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest105.exe __orio_perftest105.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest1expected=9369846271501.798828
actual=9369846271501.798828
05.exe  
{'[0, 5, 5, 6, 6, 5, 0, 0, 13, 3, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.0809619}
{'[0, 5, 5, 6, 6, 5, 0, 0, 13, 3, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.080564}
{'[0, 5, 5, 6, 6, 5, 0, 0, 13, 3, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.0805609}
{'[0, 5, 5, 6, 6, 5, 0, 0, 13, 3, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.0805669}
{'[0, 5, 5, 6, 6, 5, 0, 0, 13, 3, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.081579}
{'[0, 5, 5, 6, 6, 5, 0, 0, 13, 3, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.0805409}
{'[0, 5, 5, 6, 6, 5, 0, 0, 13, 3, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.0805681}
{'[0, 5, 5, 6, 6, 5, 0, 0, 13, 3, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.0805261}
{'[0, 5, 5, 6, 6, 5, 0, 0, 13, 3, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.0806808}
{'[0, 5, 5, 6, 6, 5, 0, 0, 13, 3, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.080529}
{'[0, 5, 5, 6, 6, 5, 0, 0, 13, 3, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.0805621}
{'[0, 5, 5, 6, 6, 5, 0, 0, 13, 3, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.0805149}
{'[0, 5, 5, 6, 6, 5, 0, 0, 13, 3, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.0805159}
{'[0, 5, 5, 6, 6, 5, 0, 0, 13, 3, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.080554}
{'[0, 5, 5, 6, 6, 5, 0, 0, 13, 3, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.0805731}
{'[0, 5, 5, 6, 6, 5, 0, 0, 13, 3, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.0805311}
{'[0, 5, 5, 6, 6, 5, 0, 0, 13, 3, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.0806539}
{'[0, 5, 5, 6, 6, 5, 0, 0, 13, 3, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.0806379}
{'[0, 5, 5, 6, 6, 5, 0, 0, 13, 3, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.080889}
{'[0, 5, 5, 6, 6, 5, 0, 0, 13, 3, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.080754}
{'[0, 5, 5, 6, 6, 5, 0, 0, 13, 3, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.08056}
{'[0, 5, 5, 6, 6, 5, 0, 0, 13, 3, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.0804861}
{'[0, 5, 5, 6, 6, 5, 0, 0, 13, 3, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.080538}
{'[0, 5, 5, 6, 6, 5, 0, 0, 13, 3, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.0805659}
{'[0, 5, 5, 6, 6, 5, 0, 0, 13, 3, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.0805559}
{'[0, 5, 5, 6, 6, 5, 0, 0, 13, 3, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.0805309}
{'[0, 5, 5, 6, 6, 5, 0, 0, 13, 3, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.080564}
{'[0, 5, 5, 6, 6, 5, 0, 0, 13, 3, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.0805261}
{'[0, 5, 5, 6, 6, 5, 0, 0, 13, 3, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.0804811}
{'[0, 5, 5, 6, 6, 5, 0, 0, 13, 3, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.0815561}

out:
 ["{'[0, 5, 5, 6, 6, 5, 0, 0, 13, 3, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.0809619}", "{'[0, 5, 5, 6, 6, 5, 0, 0, 13, 3, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.080564}", "{'[0, 5, 5, 6, 6, 5, 0, 0, 13, 3, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.0805609}", "{'[0, 5, 5, 6, 6, 5, 0, 0, 13, 3, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.0805669}", "{'[0, 5, 5, 6, 6, 5, 0, 0, 13, 3, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.081579}", "{'[0, 5, 5, 6, 6, 5, 0, 0, 13, 3, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.0805409}", "{'[0, 5, 5, 6, 6, 5, 0, 0, 13, 3, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.0805681}", "{'[0, 5, 5, 6, 6, 5, 0, 0, 13, 3, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.0805261}", "{'[0, 5, 5, 6, 6, 5, 0, 0, 13, 3, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.0806808}", "{'[0, 5, 5, 6, 6, 5, 0, 0, 13, 3, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.080529}", "{'[0, 5, 5, 6, 6, 5, 0, 0, 13, 3, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.0805621}", "{'[0, 5, 5, 6, 6, 5, 0, 0, 13, 3, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.0805149}", "{'[0, 5, 5, 6, 6, 5, 0, 0, 13, 3, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.0805159}", "{'[0, 5, 5, 6, 6, 5, 0, 0, 13, 3, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.080554}", "{'[0, 5, 5, 6, 6, 5, 0, 0, 13, 3, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.0805731}", "{'[0, 5, 5, 6, 6, 5, 0, 0, 13, 3, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.0805311}", "{'[0, 5, 5, 6, 6, 5, 0, 0, 13, 3, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.0806539}", "{'[0, 5, 5, 6, 6, 5, 0, 0, 13, 3, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.0806379}", "{'[0, 5, 5, 6, 6, 5, 0, 0, 13, 3, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.080889}", "{'[0, 5, 5, 6, 6, 5, 0, 0, 13, 3, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.080754}", "{'[0, 5, 5, 6, 6, 5, 0, 0, 13, 3, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.08056}", "{'[0, 5, 5, 6, 6, 5, 0, 0, 13, 3, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.0804861}", "{'[0, 5, 5, 6, 6, 5, 0, 0, 13, 3, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.080538}", "{'[0, 5, 5, 6, 6, 5, 0, 0, 13, 3, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.0805659}", "{'[0, 5, 5, 6, 6, 5, 0, 0, 13, 3, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.0805559}", "{'[0, 5, 5, 6, 6, 5, 0, 0, 13, 3, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.0805309}", "{'[0, 5, 5, 6, 6, 5, 0, 0, 13, 3, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.080564}", "{'[0, 5, 5, 6, 6, 5, 0, 0, 13, 3, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.0805261}", "{'[0, 5, 5, 6, 6, 5, 0, 0, 13, 3, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.0804811}", "{'[0, 5, 5, 6, 6, 5, 0, 0, 13, 3, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.0815561}"]
returning from 'run': {'[0, 5, 5, 6, 6, 5, 0, 0, 13, 3, 28, 0, 0, 1, 1, 1, 1, 1]': ([0.0809619, 0.080564, 0.0805609, 0.0805669, 0.081579, 0.0805409, 0.0805681, 0.0805261, 0.0806808, 0.080529, 0.0805621, 0.0805149, 0.0805159, 0.080554, 0.0805731, 0.0805311, 0.0806539, 0.0806379, 0.080889, 0.080754, 0.08056, 0.0804861, 0.080538, 0.0805659, 0.0805559, 0.0805309, 0.080564, 0.0805261, 0.0804811, 0.0815561], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.0809619, 0.080564, 0.0805609, 0.0805669, 0.081579, 0.0805409, 0.0805681, 0.0805261, 0.0806808, 0.080529, 0.0805621, 0.0805149, 0.0805159, 0.080554, 0.0805731, 0.0805311, 0.0806539, 0.0806379, 0.080889, 0.080754, 0.08056, 0.0804861, 0.080538, 0.0805659, 0.0805559, 0.0805309, 0.080564, 0.0805261, 0.0804811, 0.0815561], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[0, 5, 5, 6, 6, 5, 0, 0, 13, 3, 28, 0, 0, 1, 1, 1, 1, 1]': ([0.0809619, 0.080564, 0.0805609, 0.0805669, 0.081579, 0.0805409, 0.0805681, 0.0805261, 0.0806808, 0.080529, 0.0805621, 0.0805149, 0.0805159, 0.080554, 0.0805731, 0.0805311, 0.0806539, 0.0806379, 0.080889, 0.080754, 0.08056, 0.0804861, 0.080538, 0.0805659, 0.0805559, 0.0805309, 0.080564, 0.0805261, 0.0804811, 0.0815561], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [1, 5, 3, 5, 1, 2, 0, 15, 0, 0, 2, 0]
Fixed Factors: {'ACOPY_x': 0, 'ACOPY_y': 0, 'T2_K': 5, 'T2_J': 6, 'VEC1': 1, 'SCR': 1}
Testing candidate 6: [1, 5, 3, 5, 6, 5, 0, 0, 1, 2, 0, 15, 0, 0, 2, 1, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	26
        Max loop nest depth: 	6
        Additions: 		1059
        Multiplications: 	400
        Divisions: 		0
        Logical: 		0
        Reads: 			2426
        Writes: 		535
        Comparisons:		26
        Gotos: 			0
        
digraph CFG {
	ForLoop26047395 [label="ForLoop26047395  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop26047395 -> 26047394;
	ForLoop26047395 -> _JOIN_26047395;
	ForLoop26126895 [label="ForLoop26126895  for (ii=iii; ii<=min(nx-1,iii+1008); ii=ii+16) {...",shape=box];
	ForLoop26126895 -> 26120175;
	ForLoop26126895 -> _JOIN_26126895;
	ForLoop26126896 [label="ForLoop26126896  for (iii=0; iii<=nx-1; iii=iii+1024) {...",shape=box];
	ForLoop26126896 -> ForLoop26126895;
	ForLoop26126896 -> _JOIN_26126896;
	26134321 [label="26134321  double scv_51, scv_52, scv_53, scv_54, scv_55, scv_56, scv_57, scv_58;...",shape=box];
	26133069 [label="26133069  double scv_34, scv_35, scv_36, scv_37, scv_38, scv_39, scv_40, scv_41;...",shape=box];
	ForLoop26126893 [label="ForLoop26126893  for (i=(min(nx-1,ii+15))-(((min(nx-1,ii+15))-(ii)+1)%3)+1; i<=min(nx-1,ii+15); i=i+1) {...",shape=box];
	ForLoop26126893 -> 26160426;
	ForLoop26126893 -> _JOIN_26126893;
	ForLoop26123916 [label="ForLoop26123916  for (k=kt; k<=min(ny-1,kk+63)-15; k=k+16) {...",shape=box];
	ForLoop26123916 -> 26133069;
	ForLoop26123916 -> _JOIN_26123916;
	_JOIN_26120350 [label="_JOIN_26120350None...",shape=box];
	_JOIN_26120350 -> _JOIN_26120352;
	_JOIN_26120352 [label="_JOIN_26120352None...",shape=box];
	_JOIN_26120352 -> ForLoop26125257;
	26047243 [label="26047243  int i;...",shape=box];
	_JOIN_26123984 [label="_JOIN_26123984None...",shape=box];
	_JOIN_26123984 -> 26123986;
	26120175 [label="26120175  int i;...",shape=box];
	26120175 -> ForLoop26125259;
	26125381 [label="26125381  scv_137=scv_137+A[i*ny+j]*x[j];...",shape=box];
	26125381 -> _JOIN_26125382;
	_JOIN_26126896 [label="_JOIN_26126896None...",shape=box];
	ForLoop26120350 [label="ForLoop26120350  for (jj=jjj; jj<=min(ny-1,jjj+1792); jj=jj+256) {...",shape=box];
	ForLoop26120350 -> ForLoop26120348;
	ForLoop26120350 -> _JOIN_26120350;
	_JOIN_26047326 [label="_JOIN_26047326None...",shape=box];
	_JOIN_26047326 -> 26047454;
	ForLoop26120352 [label="ForLoop26120352  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop26120352 -> ForLoop26120350;
	ForLoop26120352 -> _JOIN_26120352;
	_JOIN_26126887 [label="_JOIN_26126887None...",shape=box];
	_JOIN_26126887 -> _JOIN_26126890;
	26124620 [label="26124620  int k;...",shape=box];
	26124620 -> ForLoop26125178;
	ForLoop26126891 [label="ForLoop26126891  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop26126891 -> ForLoop26126890;
	ForLoop26126891 -> _JOIN_26126891;
	26135993 [label="26135993  double scv_84;...",shape=box];
	26127033 [label="26127033  double scv_1;...",shape=box];
	26160426 [label="26160426  double scv_137;...",shape=box];
	ForLoop26125259 [label="ForLoop26125259  for (i=ii; i<=min(nx-1,ii+15)-2; i=i+3) {...",shape=box];
	ForLoop26125259 -> 26151022;
	ForLoop26125259 -> _JOIN_26125259;
	_JOIN_26124544 [label="_JOIN_26124544None...",shape=box];
	_JOIN_26124544 -> ForLoop26124618;
	26131582 [label="26131582  double scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8, scv_9;...",shape=box];
	_JOIN_26126356 [label="_JOIN_26126356None...",shape=box];
	_JOIN_26126356 -> 26126357;
	ForLoop26123453 [label="ForLoop26123453  for (kt=kk; kt<=min(ny-1,kk+63)-31; kt=kt+32) {...",shape=box];
	ForLoop26123453 -> 26131582;
	ForLoop26123453 -> _JOIN_26123453;
	26133471 [label="26133471  double scv_50;...",shape=box];
	26154192 [label="26154192  double scv_120, scv_121, scv_122, scv_123, scv_124, scv_125, scv_126, scv_127;...",shape=box];
	ForLoop26125257 [label="ForLoop26125257  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop26125257 -> ForLoop26125255;
	ForLoop26125257 -> _JOIN_26125257;
	ForLoop26125255 [label="ForLoop26125255  for (kk=kkk; kk<=min(ny-1,kkk+960); kk=kk+64) {...",shape=box];
	ForLoop26125255 -> ForLoop26123453;
	ForLoop26125255 -> _JOIN_26125255;
	26126357 [label="26126357  int k;...",shape=box];
	26126357 -> ForLoop26126819;
	26160438 [label="26160438  tmp[i]=scv_137;...",shape=box];
	26160438 -> _JOIN_26126893;
	ForLoop26125178 [label="ForLoop26125178  for (k=kt; k<=min(ny-1,kk+63)-15; k=k+16) {...",shape=box];
	ForLoop26125178 -> 26135582;
	ForLoop26125178 -> _JOIN_26125178;
	ForLoop26124544 [label="ForLoop26124544  for (k=kt; k<=min(ny-1,kk+63)-15; k=k+16) {...",shape=box];
	ForLoop26124544 -> 26134321;
	ForLoop26124544 -> _JOIN_26124544;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 26047243;
	26123454 [label="26123454  int k;...",shape=box];
	26123454 -> ForLoop26123916;
	26154594 [label="26154594  double scv_136;...",shape=box];
	ForLoop26124618 [label="ForLoop26124618  for (k=(min(ny-1,kk+63))-(((min(ny-1,kk+63))-(kt)+1)%16)+1; k<=min(ny-1,kk+63); k=k+1) {...",shape=box];
	ForLoop26124618 -> 26134732;
	ForLoop26124618 -> _JOIN_26124618;
	ForLoop26126887 [label="ForLoop26126887  for (k=(min(ny-1,kk+63))-(((min(ny-1,kk+63))-(kt)+1)%16)+1; k<=min(ny-1,kk+63); k=k+1) {...",shape=box];
	ForLoop26126887 -> 26154594;
	ForLoop26126887 -> _JOIN_26126887;
	26047394 [label="26047394  y[i]=0.0;...",shape=box];
	26047394 -> _JOIN_26047395;
	_JOIN_26120348 [label="_JOIN_26120348None...",shape=box];
	_JOIN_26120348 -> _JOIN_26120350;
	26151040 [label="26151040  tmp[(i+2)]=scv_85;...",shape=box];
	_JOIN_26125252 [label="_JOIN_26125252None...",shape=box];
	_JOIN_26125252 -> _JOIN_26125255;
	26152833 [label="26152833  double scv_88, scv_89, scv_90, scv_91, scv_92, scv_93, scv_94, scv_95;...",shape=box];
	26123986 [label="26123986  int k;...",shape=box];
	26123986 -> ForLoop26124544;
	_JOIN_26123453 [label="_JOIN_26123453None...",shape=box];
	_JOIN_26123453 -> 26123454;
	_JOIN_26126819 [label="_JOIN_26126819None...",shape=box];
	_JOIN_26126819 -> ForLoop26126887;
	_JOIexpected=9369846271501.798828
actual=9369846271501.798828
N_26125255 [label="_JOIN_26125255None...",shape=box];
	_JOIN_26125255 -> _JOIN_26125257;
	_JOIN_26125257 [label="_JOIN_26125257None...",shape=box];
	_JOIN_26125257 -> 26151040;
	26151022 [label="26151022  double scv_85, scv_86, scv_87;...",shape=box];
	26047454 [label="26047454  register int cbv_2, cbv_3;...",shape=box];
	26047315 [label="26047315  y[i]=0.0;...",shape=box];
	_JOIN_26126895 [label="_JOIN_26126895None...",shape=box];
	_JOIN_26126895 -> _JOIN_26126896;
	ForLoop26120348 [label="ForLoop26120348  for (j=jj; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop26120348 -> 26127033;
	ForLoop26120348 -> _JOIN_26120348;
	_JOIN_26126890 [label="_JOIN_26126890None...",shape=box];
	_JOIN_26126890 -> _JOIN_26126891;
	_JOIN_26126891 [label="_JOIN_26126891None...",shape=box];
	_JOIN_26126891 -> 26160438;
	26120142 [label="26120142  double x_copy;...",shape=box];
	_JOIN_26126893 [label="_JOIN_26126893None...",shape=box];
	_JOIN_26126893 -> _JOIN_26126895;
	_JOIN_26124618 [label="_JOIN_26124618None...",shape=box];
	_JOIN_26124618 -> 26124620;
	ForLoop26125384 [label="ForLoop26125384  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop26125384 -> ForLoop26125383;
	ForLoop26125384 -> _JOIN_26125384;
	_JOIN_26123916 [label="_JOIN_26123916None...",shape=box];
	_JOIN_26123916 -> ForLoop26123984;
	ForLoop26125383 [label="ForLoop26125383  for (jj=jjj; jj<=min(ny-1,jjj+1792); jj=jj+256) {...",shape=box];
	ForLoop26125383 -> ForLoop26125382;
	ForLoop26125383 -> _JOIN_26125383;
	ForLoop26047326 [label="ForLoop26047326  for (i=0; i<=cbv_1; i=i+2) {...",shape=box];
	ForLoop26047326 -> 26047315;
	ForLoop26047326 -> _JOIN_26047326;
	ForLoop26125382 [label="ForLoop26125382  for (j=jj; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop26125382 -> 26125381;
	ForLoop26125382 -> _JOIN_26125382;
	_JOIN_26047395 [label="_JOIN_26047395None...",shape=box];
	_JOIN_26047395 -> 26120142;
	_JOIN_26125178 [label="_JOIN_26125178None...",shape=box];
	_JOIN_26125178 -> ForLoop26125252;
	26134732 [label="26134732  double scv_67;...",shape=box];
	ForLoop26123984 [label="ForLoop26123984  for (k=(min(ny-1,kk+63))-(((min(ny-1,kk+63))-(kt)+1)%16)+1; k<=min(ny-1,kk+63); k=k+1) {...",shape=box];
	ForLoop26123984 -> 26133471;
	ForLoop26123984 -> _JOIN_26123984;
	26135582 [label="26135582  double scv_68, scv_69, scv_70, scv_71, scv_72, scv_73, scv_74, scv_75;...",shape=box];
	ForLoop26126890 [label="ForLoop26126890  for (kk=kkk; kk<=min(ny-1,kkk+960); kk=kk+64) {...",shape=box];
	ForLoop26126890 -> ForLoop26126356;
	ForLoop26126890 -> _JOIN_26126890;
	_JOIN_26125259 [label="_JOIN_26125259None...",shape=box];
	_JOIN_26125259 -> ForLoop26126893;
	ForLoop26126356 [label="ForLoop26126356  for (kt=kk; kt<=min(ny-1,kk+63)-31; kt=kt+32) {...",shape=box];
	ForLoop26126356 -> 26152833;
	ForLoop26126356 -> _JOIN_26126356;
	ForLoop26125252 [label="ForLoop26125252  for (k=(min(ny-1,kk+63))-(((min(ny-1,kk+63))-(kt)+1)%16)+1; k<=min(ny-1,kk+63); k=k+1) {...",shape=box];
	ForLoop26125252 -> 26135993;
	ForLoop26125252 -> _JOIN_26125252;
	_JOIN_26125383 [label="_JOIN_26125383None...",shape=box];
	_JOIN_26125383 -> _JOIN_26125384;
	_JOIN_26125382 [label="_JOIN_26125382None...",shape=box];
	_JOIN_26125382 -> _JOIN_26125383;
	_JOIN_26125384 [label="_JOIN_26125384None...",shape=box];
	_JOIN_26125384 -> ForLoop26126891;
	ForLoop26126819 [label="ForLoop26126819  for (k=kt; k<=min(ny-1,kk+63)-15; k=k+16) {...",shape=box];
	ForLoop26126819 -> 26154192;
	ForLoop26126819 -> _JOIN_26126819;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest106.exe __orio_perftest106.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest106.exe  
{'[1, 5, 3, 5, 6, 5, 0, 0, 1, 2, 0, 15, 0, 0, 2, 1, 1, 0]' : 0.0873332}
{'[1, 5, 3, 5, 6, 5, 0, 0, 1, 2, 0, 15, 0, 0, 2, 1, 1, 0]' : 0.0867312}
{'[1, 5, 3, 5, 6, 5, 0, 0, 1, 2, 0, 15, 0, 0, 2, 1, 1, 0]' : 0.0868139}
{'[1, 5, 3, 5, 6, 5, 0, 0, 1, 2, 0, 15, 0, 0, 2, 1, 1, 0]' : 0.086828}
{'[1, 5, 3, 5, 6, 5, 0, 0, 1, 2, 0, 15, 0, 0, 2, 1, 1, 0]' : 0.086693}
{'[1, 5, 3, 5, 6, 5, 0, 0, 1, 2, 0, 15, 0, 0, 2, 1, 1, 0]' : 0.08671}
{'[1, 5, 3, 5, 6, 5, 0, 0, 1, 2, 0, 15, 0, 0, 2, 1, 1, 0]' : 0.086755}
{'[1, 5, 3, 5, 6, 5, 0, 0, 1, 2, 0, 15, 0, 0, 2, 1, 1, 0]' : 0.0866699}
{'[1, 5, 3, 5, 6, 5, 0, 0, 1, 2, 0, 15, 0, 0, 2, 1, 1, 0]' : 0.0867751}
{'[1, 5, 3, 5, 6, 5, 0, 0, 1, 2, 0, 15, 0, 0, 2, 1, 1, 0]' : 0.0867491}
{'[1, 5, 3, 5, 6, 5, 0, 0, 1, 2, 0, 15, 0, 0, 2, 1, 1, 0]' : 0.0866768}
{'[1, 5, 3, 5, 6, 5, 0, 0, 1, 2, 0, 15, 0, 0, 2, 1, 1, 0]' : 0.0870099}
{'[1, 5, 3, 5, 6, 5, 0, 0, 1, 2, 0, 15, 0, 0, 2, 1, 1, 0]' : 0.08671}
{'[1, 5, 3, 5, 6, 5, 0, 0, 1, 2, 0, 15, 0, 0, 2, 1, 1, 0]' : 0.0867112}
{'[1, 5, 3, 5, 6, 5, 0, 0, 1, 2, 0, 15, 0, 0, 2, 1, 1, 0]' : 0.0866849}
{'[1, 5, 3, 5, 6, 5, 0, 0, 1, 2, 0, 15, 0, 0, 2, 1, 1, 0]' : 0.086781}
{'[1, 5, 3, 5, 6, 5, 0, 0, 1, 2, 0, 15, 0, 0, 2, 1, 1, 0]' : 0.0867429}
{'[1, 5, 3, 5, 6, 5, 0, 0, 1, 2, 0, 15, 0, 0, 2, 1, 1, 0]' : 0.0867081}
{'[1, 5, 3, 5, 6, 5, 0, 0, 1, 2, 0, 15, 0, 0, 2, 1, 1, 0]' : 0.0867}
{'[1, 5, 3, 5, 6, 5, 0, 0, 1, 2, 0, 15, 0, 0, 2, 1, 1, 0]' : 0.0867231}
{'[1, 5, 3, 5, 6, 5, 0, 0, 1, 2, 0, 15, 0, 0, 2, 1, 1, 0]' : 0.086719}
{'[1, 5, 3, 5, 6, 5, 0, 0, 1, 2, 0, 15, 0, 0, 2, 1, 1, 0]' : 0.086643}
{'[1, 5, 3, 5, 6, 5, 0, 0, 1, 2, 0, 15, 0, 0, 2, 1, 1, 0]' : 0.0866952}
{'[1, 5, 3, 5, 6, 5, 0, 0, 1, 2, 0, 15, 0, 0, 2, 1, 1, 0]' : 0.0866928}
{'[1, 5, 3, 5, 6, 5, 0, 0, 1, 2, 0, 15, 0, 0, 2, 1, 1, 0]' : 0.086751}
{'[1, 5, 3, 5, 6, 5, 0, 0, 1, 2, 0, 15, 0, 0, 2, 1, 1, 0]' : 0.086679}
{'[1, 5, 3, 5, 6, 5, 0, 0, 1, 2, 0, 15, 0, 0, 2, 1, 1, 0]' : 0.0867388}
{'[1, 5, 3, 5, 6, 5, 0, 0, 1, 2, 0, 15, 0, 0, 2, 1, 1, 0]' : 0.0867572}
{'[1, 5, 3, 5, 6, 5, 0, 0, 1, 2, 0, 15, 0, 0, 2, 1, 1, 0]' : 0.0866809}
{'[1, 5, 3, 5, 6, 5, 0, 0, 1, 2, 0, 15, 0, 0, 2, 1, 1, 0]' : 0.08724}

out:
 ["{'[1, 5, 3, 5, 6, 5, 0, 0, 1, 2, 0, 15, 0, 0, 2, 1, 1, 0]' : 0.0873332}", "{'[1, 5, 3, 5, 6, 5, 0, 0, 1, 2, 0, 15, 0, 0, 2, 1, 1, 0]' : 0.0867312}", "{'[1, 5, 3, 5, 6, 5, 0, 0, 1, 2, 0, 15, 0, 0, 2, 1, 1, 0]' : 0.0868139}", "{'[1, 5, 3, 5, 6, 5, 0, 0, 1, 2, 0, 15, 0, 0, 2, 1, 1, 0]' : 0.086828}", "{'[1, 5, 3, 5, 6, 5, 0, 0, 1, 2, 0, 15, 0, 0, 2, 1, 1, 0]' : 0.086693}", "{'[1, 5, 3, 5, 6, 5, 0, 0, 1, 2, 0, 15, 0, 0, 2, 1, 1, 0]' : 0.08671}", "{'[1, 5, 3, 5, 6, 5, 0, 0, 1, 2, 0, 15, 0, 0, 2, 1, 1, 0]' : 0.086755}", "{'[1, 5, 3, 5, 6, 5, 0, 0, 1, 2, 0, 15, 0, 0, 2, 1, 1, 0]' : 0.0866699}", "{'[1, 5, 3, 5, 6, 5, 0, 0, 1, 2, 0, 15, 0, 0, 2, 1, 1, 0]' : 0.0867751}", "{'[1, 5, 3, 5, 6, 5, 0, 0, 1, 2, 0, 15, 0, 0, 2, 1, 1, 0]' : 0.0867491}", "{'[1, 5, 3, 5, 6, 5, 0, 0, 1, 2, 0, 15, 0, 0, 2, 1, 1, 0]' : 0.0866768}", "{'[1, 5, 3, 5, 6, 5, 0, 0, 1, 2, 0, 15, 0, 0, 2, 1, 1, 0]' : 0.0870099}", "{'[1, 5, 3, 5, 6, 5, 0, 0, 1, 2, 0, 15, 0, 0, 2, 1, 1, 0]' : 0.08671}", "{'[1, 5, 3, 5, 6, 5, 0, 0, 1, 2, 0, 15, 0, 0, 2, 1, 1, 0]' : 0.0867112}", "{'[1, 5, 3, 5, 6, 5, 0, 0, 1, 2, 0, 15, 0, 0, 2, 1, 1, 0]' : 0.0866849}", "{'[1, 5, 3, 5, 6, 5, 0, 0, 1, 2, 0, 15, 0, 0, 2, 1, 1, 0]' : 0.086781}", "{'[1, 5, 3, 5, 6, 5, 0, 0, 1, 2, 0, 15, 0, 0, 2, 1, 1, 0]' : 0.0867429}", "{'[1, 5, 3, 5, 6, 5, 0, 0, 1, 2, 0, 15, 0, 0, 2, 1, 1, 0]' : 0.0867081}", "{'[1, 5, 3, 5, 6, 5, 0, 0, 1, 2, 0, 15, 0, 0, 2, 1, 1, 0]' : 0.0867}", "{'[1, 5, 3, 5, 6, 5, 0, 0, 1, 2, 0, 15, 0, 0, 2, 1, 1, 0]' : 0.0867231}", "{'[1, 5, 3, 5, 6, 5, 0, 0, 1, 2, 0, 15, 0, 0, 2, 1, 1, 0]' : 0.086719}", "{'[1, 5, 3, 5, 6, 5, 0, 0, 1, 2, 0, 15, 0, 0, 2, 1, 1, 0]' : 0.086643}", "{'[1, 5, 3, 5, 6, 5, 0, 0, 1, 2, 0, 15, 0, 0, 2, 1, 1, 0]' : 0.0866952}", "{'[1, 5, 3, 5, 6, 5, 0, 0, 1, 2, 0, 15, 0, 0, 2, 1, 1, 0]' : 0.0866928}", "{'[1, 5, 3, 5, 6, 5, 0, 0, 1, 2, 0, 15, 0, 0, 2, 1, 1, 0]' : 0.086751}", "{'[1, 5, 3, 5, 6, 5, 0, 0, 1, 2, 0, 15, 0, 0, 2, 1, 1, 0]' : 0.086679}", "{'[1, 5, 3, 5, 6, 5, 0, 0, 1, 2, 0, 15, 0, 0, 2, 1, 1, 0]' : 0.0867388}", "{'[1, 5, 3, 5, 6, 5, 0, 0, 1, 2, 0, 15, 0, 0, 2, 1, 1, 0]' : 0.0867572}", "{'[1, 5, 3, 5, 6, 5, 0, 0, 1, 2, 0, 15, 0, 0, 2, 1, 1, 0]' : 0.0866809}", "{'[1, 5, 3, 5, 6, 5, 0, 0, 1, 2, 0, 15, 0, 0, 2, 1, 1, 0]' : 0.08724}"]
returning from 'run': {'[1, 5, 3, 5, 6, 5, 0, 0, 1, 2, 0, 15, 0, 0, 2, 1, 1, 0]': ([0.0873332, 0.0867312, 0.0868139, 0.086828, 0.086693, 0.08671, 0.086755, 0.0866699, 0.0867751, 0.0867491, 0.0866768, 0.0870099, 0.08671, 0.0867112, 0.0866849, 0.086781, 0.0867429, 0.0867081, 0.0867, 0.0867231, 0.086719, 0.086643, 0.0866952, 0.0866928, 0.086751, 0.086679, 0.0867388, 0.0867572, 0.0866809, 0.08724], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.0873332, 0.0867312, 0.0868139, 0.086828, 0.086693, 0.08671, 0.086755, 0.0866699, 0.0867751, 0.0867491, 0.0866768, 0.0870099, 0.08671, 0.0867112, 0.0866849, 0.086781, 0.0867429, 0.0867081, 0.0867, 0.0867231, 0.086719, 0.086643, 0.0866952, 0.0866928, 0.086751, 0.086679, 0.0867388, 0.0867572, 0.0866809, 0.08724], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[1, 5, 3, 5, 6, 5, 0, 0, 1, 2, 0, 15, 0, 0, 2, 1, 1, 0]': ([0.0873332, 0.0867312, 0.0868139, 0.086828, 0.086693, 0.08671, 0.086755, 0.0866699, 0.0867751, 0.0867491, 0.0866768, 0.0870099, 0.08671, 0.0867112, 0.0866849, 0.086781, 0.0867429, 0.0867081, 0.0867, 0.0867231, 0.086719, 0.086643, 0.0866952, 0.0866928, 0.086751, 0.086679, 0.0867388, 0.0867572, 0.0866809, 0.08724], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [6, 2, 4, 6, 27, 27, 18, 0, 0, 2, 0, 0]
Fixed Factors: {'ACOPY_x': 0, 'ACOPY_y': 0, 'T2_K': 5, 'T2_J': 6, 'VEC1': 1, 'SCR': 1}
Testing candidate 7: [6, 2, 4, 6, 6, 5, 0, 0, 27, 27, 18, 0, 0, 2, 0, 1, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	76
        Max loop nest depth: 	6
        Additions: 		7117
        Multiplications: 	3074
        Divisions: 		0
        Logical: 		0
        Reads: 			12386
        Writes: 		1844
        Comparisons:		76
        Gotos: 			0
        
digraph CFG {
	26502150 [label="26502150  int j;...",shape=box];
	26502150 -> ForLoop26502813;
	ForLoop26495393 [label="ForLoop26495393  for (j=jt; j<=min(ny-1,jj+31)-18; j=j+19) {...",shape=box];
	ForLoop26495393 -> 26494779;
	ForLoop26495393 -> _JOIN_26495393;
	ForLoop26493167 [label="ForLoop26493167  for (j=jt; j<=min(ny-1,jj+31)-18; j=j+19) {...",shape=box];
	ForLoop26493167 -> 26492553;
	ForLoop26493167 -> _JOIN_26493167;
	ForLoop26508826 [label="ForLoop26508826  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jt)+1)%19)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop26508826 -> 26508825;
	ForLoop26508826 -> _JOIN_26508826;
	26174269 [label="26174269  y[i]=0.0;...",shape=box];
	26727176 [label="26727176  tmp[(i+20)]=scv_34;...",shape=box];
	26489536 [label="26489536  int j;...",shape=box];
	26489536 -> ForLoop26490199;
	_JOIN_26493244 [label="_JOIN_26493244None...",shape=box];
	_JOIN_26493244 -> 26493246;
	_JOIN_26511925 [label="_JOIN_26511925None...",shape=box];
	_JOIN_26511925 -> _JOIN_26511926;
	26489533 [label="26489533  scv_42=scv_42+A[i*ny+j]*x[j];...",shape=box];
	26489533 -> _JOIN_26489534;
	ForLoop26503555 [label="ForLoop26503555  for (j=jt; j<=min(ny-1,jj+31)-18; j=j+19) {...",shape=box];
	ForLoop26503555 -> 26502941;
	ForLoop26503555 -> _JOIN_26503555;
	_JOIN_26511920 [label="_JOIN_26511920None...",shape=box];
	_JOIN_26511920 -> _JOIN_26511921;
	_JOIN_26511921 [label="_JOIN_26511921None...",shape=box];
	_JOIN_26511921 -> 26737485;
	ForLoop26497619 [label="ForLoop26497619  for (j=jt; j<=min(ny-1,jj+31)-18; j=j+19) {...",shape=box];
	ForLoop26497619 -> 26497005;
	ForLoop26497619 -> _JOIN_26497619;
	26492553 [label="26492553  scv_45=scv_45+A[(i+5)*ny+j]*x[j];...",shape=box];
	26737473 [label="26737473  double scv_63;...",shape=box];
	_JOIN_26503555 [label="_JOIN_26503555None...",shape=box];
	_JOIN_26503555 -> ForLoop26503632;
	26494037 [label="26494037  scv_43=scv_43+A[(i+7)*ny+j]*x[j];...",shape=box];
	26507341 [label="26507341  scv_52=scv_52+A[(i+24)*ny+j]*x[j];...",shape=box];
	26507341 -> _JOIN_26507342;
	_JOIN_26502071 [label="_JOIN_26502071None...",shape=box];
	_JOIN_26502071 -> ForLoop26502148;
	26507344 [label="26507344  int j;...",shape=box];
	26507344 -> ForLoop26508007;
	26499182 [label="26499182  int j;...",shape=box];
	26499182 -> ForLoop26499845;
	ForLoop26505858 [label="ForLoop26505858  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jt)+1)%19)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop26505858 -> 26505857;
	ForLoop26505858 -> _JOIN_26505858;
	26173807 [label="26173807  int i;...",shape=box];
	_JOIN_26510350 [label="_JOIN_26510350None...",shape=box];
	_JOIN_26510350 -> 26727176;
	_JOIN_26511926 [label="_JOIN_26511926None...",shape=box];
	_JOIN_26508084 [label="_JOIN_26508084None...",shape=box];
	_JOIN_26508084 -> 26508086;
	26499973 [label="26499973  scv_50=scv_50+A[(i+15)*ny+j]*x[j];...",shape=box];
	26496956 [label="26496956  int j;...",shape=box];
	26496956 -> ForLoop26497619;
	ForLoop26496954 [label="ForLoop26496954  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jt)+1)%19)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop26496954 -> 26496953;
	ForLoop26496954 -> _JOIN_26496954;
	ForLoop26490276 [label="ForLoop26490276  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jt)+1)%19)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop26490276 -> 26490275;
	ForLoop26490276 -> _JOIN_26490276;
	_JOIN_26509571 [label="_JOIN_26509571None...",shape=box];
	_JOIN_26509571 -> _JOIN_26509573;
	_JOIN_26490199 [label="_JOIN_26490199None...",shape=box];
	_JOIN_26490199 -> ForLoop26490276;
	ForLoop26493986 [label="ForLoop26493986  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jt)+1)%19)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop26493986 -> 26493985;
	ForLoop26493986 -> _JOIN_26493986;
	26497695 [label="26497695  scv_54=scv_54+A[(i+11)*ny+j]*x[j];...",shape=box];
	26497695 -> _JOIN_26497696;
	26678212 [label="26678212  double scv_33;...",shape=box];
	26497698 [label="26497698  int j;...",shape=box];
	26497698 -> ForLoop26498361;
	26504376 [label="26504376  int j;...",shape=box];
	26504376 -> ForLoop26505039;
	_JOIN_26508007 [label="_JOIN_26508007None...",shape=box];
	_JOIN_26508007 -> ForLoop26508084;
	ForLoop26511849 [label="ForLoop26511849  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop26511849 -> ForLoop26511848;
	ForLoop26511849 -> _JOIN_26511849;
	_JOIN_26509573 [label="_JOIN_26509573None...",shape=box];
	_JOIN_26509573 -> ForLoop26510350;
	ForLoop26489534 [label="ForLoop26489534  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jt)+1)%19)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop26489534 -> 26489533;
	ForLoop26489534 -> _JOIN_26489534;
	ForLoop26493909 [label="ForLoop26493909  for (j=jt; j<=min(ny-1,jj+31)-18; j=j+19) {...",shape=box];
	ForLoop26493909 -> 26493295;
	ForLoop26493909 -> _JOIN_26493909;
	ForLoop26502071 [label="ForLoop26502071  for (j=jt; j<=min(ny-1,jj+31)-18; j=j+19) {...",shape=box];
	ForLoop26502071 -> 26501457;
	ForLoop26502071 -> _JOIN_26502071;
	ForLoop26511777 [label="ForLoop26511777  for (j=jt; j<=min(ny-1,jj+31)-18; j=j+19) {...",shape=box];
	ForLoop26511777 -> 26511325;
	ForLoop26511777 -> _JOIN_26511777;
	26174876 [label="26174876  register int cbv_2, cbv_3;...",shape=box];
	_JOIN_26502148 [label="_JOIN_26502148None...",shape=box];
	_JOIN_26502148 -> 26502150;
	ForLoop26490941 [label="ForLoop26490941  for (j=jt; j<=min(ny-1,jj+31)-18; j=j+19) {...",shape=box];
	ForLoop26490941 -> 26490327;
	ForLoop26490941 -> _JOIN_26490941;
	26489585 [label="26489585  scv_58=scv_58+A[(i+1)*ny+j]*x[j];...",shape=box];
	26499231 [label="26499231  scv_49=scv_49+A[(i+14)*ny+j]*x[j];...",shape=box];
	26505167 [label="26505167  scv_60=scv_60+A[(i+22)*ny+j]*x[j];...",shape=box];
	26506651 [label="26506651  scv_52=scv_52+A[(i+24)*ny+j]*x[j];...",shape=box];
	ForLoop26499180 [label="ForLoop26499180  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jt)+1)%19)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop26499180 -> 26499179;
	ForLoop26499180 -> _JOIN_26499180;
	_JOIN_26498361 [label="_JOIN_26498361None...",shape=box];
	_JOIN_26498361 -> ForLoop26498438;
	_JOIN_26496135 [label="_JOIN_26496135None...",shape=box];
	_JOIN_26496135 -> ForLoop26496212;
	_JOIN_26505039 [label="_JOIN_26505039None...",shape=box];
	_JOIN_26505039 -> ForLoop26505116;
	26501457 [label="26501457  scv_61=scv_61+A[(i+17)*ny+j]*x[j];...",shape=box];
	_JOIN_26500587 [label="_JOIN_26500587None...",shape=box];
	_JOIN_26500587 -> ForLoop26500664;
	26497747 [label="26497747  scv_35=scv_35+A[(i+12)*ny+j]*x[j];...",shape=box];
	_JOIN_26488973 [label="_JOIN_26488973None...",shape=box];
	_JOIN_26488973 -> 26488974;
	ForLoop26492425 [label="ForLoop26492425  for (j=jt; j<=min(ny-1,jj+31)-18; j=j+19) {...",shape=box];
	ForLoop26492425 -> 26491811;
	ForLoop26492425 -> _JOIN_26492425;
	ForLoop26508749 [label="ForLoop26508749  for (j=jt; j<=min(ny-1,jj+31)-18; j=j+19) {...",shape=box];
	ForLoop26508749 -> 26508135;
	ForLoop26508749 -> _JOIN_26508749;
	ForLoop26497696 [label="ForLoop26497696  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jt)+1)%19)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop26497696 -> 26497695;
	ForLoop26497696 -> _JOIN_26497696;
	26498440 [label="26498440  int j;...",shape=box];
	26498440 -> ForLoop26499103;
	26495521 [label="26495521  scv_56=scv_56+A[(i+9)*ny+j]*x[j];...",shape=box];
	_JOIN_26502813 [label="_JOIN_26502813None...",shape=box];
	_JOIN_26502813 -> ForLoop26502890;
	26508877 [label="26508877  scv_40=scv_40+A[(i+27)*ny+j]*x[j];...",shape=box];
	26502147 [label="26502147  scv_61=scv_61+A[(i+17)*ny+j]*x[j];...",shape=box];
	26502147 -> _JOIN_26502148;
	26735742 [label="26735742  double scv_62;...",shape=box];
	ForLoop26505781 [label="ForLoop26505781  for (j=jt; j<=min(ny-1,jj+31)-18; j=j+19) {...",shape=box];
	ForLoop26505781 -> 26505167;
	ForLoop26505781 -> _JOIN_26505781;
	ForLoop26499103 [label="ForLoop26499103  for (j=jt; j<=min(ny-1,jj+31)-18; j=j+19) {...",shape=box];
	ForLoop26499103 -> 26498489;
	ForLoop26499103 -> _JOIN_26499103;
	26502941 [label="26502941  scv_38=scv_38+A[(i+19)*ny+j]*x[j];...",shape=box];
	ForLoop26511926 [label="ForLoop26511926  for (iii=0; iii<=nx-1; iii=iii+2048) {...",shape=box];
	ForLoop26511926 -> ForLoop26511925;
	ForLoop26511926 -> _JOIN_26511926;
	ForLoop26511925 [label="ForLoop26511925  for (ii=iii; ii<=min(nx-1,iii+1536); ii=ii+512) {...",shape=box];
	ForLoop26511925 -> 26458615;
	ForLoop26511925 -> _JOIN_26511925;
	ForLoop26511923 [label="ForLoop26511923  for (i=(min(nx-1,ii+511))-(((min(nx-1,ii+511))-(ii)+1)%28)+1; i<=min(nx-1,ii+511); i=i+1) {...",shape=box];
	ForLoop26511923 -> 26737473;
	ForLoop26511923 -> _JOIN_26511923;
	ForLoop26511920 [label="ForLoop26511920  for (kk=kkk; kk<=min(ny-1,kkk+896); kk=kk+128) {...",shape=box];
	ForLoop26511920 -> ForLoop26511919;
	ForLoop26511920 -> _JOIN_26511920;
	ForLoop26511921 [label="ForLoop26511921  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop26511921 -> ForLoop26511920;
	ForLoop26511921 -> _JOIN_26511921;
	26489014 [label="26489014  scv_42=scv_42+A[i*ny+j]*x[j];...",shape=box];
	26496953 [label="26496953  scv_48=scv_48+A[(i+10)*ny+j]*x[j];...",shape=box];
	26496953 -> _JOIN_26496954;
	26505115 [label="26505115  scv_37=scv_37+A[(i+21)*ny+j]*x[j];...",shape=box];
	26505115 -> _JOIN_26505116;
	_JOIN_26510352 [label="_JOIN_26510352None...",shape=box];
	_JOIN_26510352 -> ForLoop26511923;
	ForLoop26498361 [label="ForLoop26498361  for (j=jt; j<=min(ny-1,jj+31)-18; j=j+19) {...",shape=box];
	ForLoop26498361 -> 26497747;
	ForLoop26498361 -> _JOIN_26498361;
	26508083 [label="26508083  scv_51=scv_51+A[(i+25)*ny+j]*x[j];...",shape=box];
	26508083 -> _JOIN_26508084;
	26490327 [label="26490327  scv_46=scv_46+A[(i+2)*ny+j]*x[j];...",shape=box];
	26505857 [label="26505857  scv_60=scv_60+A[(i+22)*ny+j]*x[j];...",shape=box];
	26505857 -> _JOIN_26505858;
	26491020 [label="26491020  int j;...",shape=box];
	26491020 -> ForLoop26491683;
	26505118 [label="26505118  int j;...",shape=box];
	26505118 -> ForLoop26505781;
	26498437 [label="26498437  scv_35=scv_35+A[(i+12)*ny+j]*x[j];...",shape=box];
	26498437 -> _JOIN_26498438;
	26511325 [label="26511325  scv_63=scv_63+A[i*ny+j]*x[j];...",shape=box];
	ForLoop26510346 [label="ForLoop26510346  for (k=kk; k<=min(ny-1,kk+127); k=k+1) {...",shape=box];
	ForLoop26510346 -> 26678212;
	ForLoop26510346 -> _JOIN_26510346;
	_JOIN_26492502 [label="_JOIN_26492502None...",shape=box];
	_JOIN_26492502 -> 26492504;
	ForLoop26507265 [label="ForLoop26507265  for (j=jt; j<=min(ny-1,jj+31)-18; j=j+19) {...",shape=box];
	ForLoop26507265 -> 26506651;
	ForLoop26507265 -> _JOIN_26507265;
	26505860 [label="26505860  int j;...",shape=box];
	26505860 -> ForLoop26506523;
	_JOIN_26507342 [label="_JOIN_26507342None...",shape=box];
	_JOIN_26507342 -> 26507344;
	_JOIN_26490276 [label="_JOIN_26490276None...",shape=box];
	_JOIN_26490276 -> 26490278;
	ForLoop26502890 [label="ForLoop26502890  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jt)+1)%19)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop26502890 -> 26502889;
	ForLoop26502890 -> _JOIN_26502890;
	26511285 [label="26511285  int j;...",shape=box];
	26511285 -> ForLoop26511777;
	ForLoop26510348 [label="ForLoop26510348  for (kk=kkk; kk<=min(ny-1,kkk+896); kk=kk+128) {...",shape=box];
	ForLoop26510348 -> ForLoop26510346;
	ForLoop26510348 -> _JOIN_26510348;
	26507393 [label="26507393  scv_51=scv_51+A[(i+25)*ny+j]*x[j];...",shape=box];
	26496214 [label="26496214  int j;...",shape=box];
	26496214 -> ForLoop26496877;
	_JOIN_26174514 [label="_JOIN_26174514None...",shape=box];
	_JOIN_26174514 -> 26174876;
	26496211 [label="26496211  scv_56=scv_56+A[(i+9)*ny+j]*x[j];...",shape=box];
	26496211 -> _JOIN_26496212;
	26505909 [label="26505909  scv_59=scv_59+A[(i+23)*ny+j]*x[j];...",shape=box];
	ForLoop26490199 [label="ForLoop26490199  for (j=jt; j<=min(ny-1,jj+31)-18; j=j+19) {...",shape=box];
	ForLoop26490199 -> 26489585;
	ForLoop26490199 -> _JOIN_26490199;
	26492501 [label="26492501  scv_55=scv_55+A[(i+4)*ny+j]*x[j];...",shape=box];
	26492501 -> _JOIN_26492502;
	_JOIN_26511923 [label="_JOIN_26511923None...",shape=box];
	_JOIN_26511923 -> _JOIN_26511925;
	26494779 [label="26494779  scv_57=scv_57+A[(i+8)*ny+j]*x[j];...",shape=box];
	26493985 [label="26493985  scv_44=scv_44+A[(i+6)*ny+j]*x[j];...",shape=box];
	26493985 -> _JOIN_26493986;
	26511844 [label="26511844  scv_63=scv_63+A[i*ny+j]*x[j];...",shape=box];
	26511844 -> _JOIN_26511845;
	ForLoop26503632 [label="ForLoop26503632  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jt)+1)%19)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop26503632 -> 26503631;
	ForLoop26503632 -> _JOIN_26503632;
	26493988 [label="26493988  int j;...",shape=box];
	26493988 -> ForLoop26494651;
	_JOIN_26508826 [label="_JOIN_26508826None...",shape=box];
	_JOIN_26508826 -> 26508828;
	ForLoop26505039 [label="ForLoop26505039  for (j=jt; j<=min(ny-1,jj+31)-18; j=j+19) {...",shape=box];
	ForLoop26505039 -> 26504425;
	ForLoop26505039 -> _JOIN_26505039;
	_JOIN_26511284 [label="_JOIN_26511284None...",shape=box];
	_JOIN_26511284 -> 26511285;
	_JOIN_26511777 [label="_JOIN_26511777None...",shape=box];
	_JOIN_26511777 -> ForLoop26511845;
	_JOIN_26510346 [label="_JOIN_26510346None...",shape=box];
	_JOIN_26510346 -> _JOIN_26510348;
	26510476 [label="26510476  scv_63=scv_63+A[i*ny+jt]*x[jt];...",shape=box];
	26737485 [label="26737485  tmp[i]=scv_63;...",shape=box];
	26737485 -> _JOIN_26511923;
	_JOIN_26500664 [label="_JOIN_26500664None...",shape=box];
	_JOIN_26500664 -> 26500666;
	26509567 [label="26509567  scv_40=scv_40+A[(i+27)*ny+j]*x[j];...",shape=box];
	26509567 -> _JOIN_26509568;
	_JOIN_26502890 [label="_JOIN_26502890None...",shape=box];
	_JOIN_26502890 -> 26502892;
	ForLoop26491683 [label="ForLoop26491683  for (j=jt; j<=min(ny-1,jj+31)-18; j=j+19) {...",shape=box];
	ForLoop26491683 -> 26491069;
	ForLoop26491683 -> _JOIN_26491683;
	26493295 [label="26493295  scv_44=scv_44+A[(i+6)*ny+j]*x[j];...",shape=box];
	ForLoop26506600 [label="ForLoop26506600  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jt)+1)%19)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop26506600 -> 26506599;
	ForLoop26506600 -> _JOIN_26506600;
	26458582 [label="26458582  double x_copy;...",shape=box];
	_JOIN_26491760 [label="_JOIN_26491760None...",shape=box];
	_JOIN_26491760 -> 26491762;
	ForLoop26510352 [label="ForLoop26510352  for (i=ii; i<=min(nx-1,ii+511)-27; i=i+28) {...",shape=box];
	ForLoop26510352 -> 26727158;
	ForLoop26510352 -> _JOIN_26510352;
	26508086 [label="26508086  int j;...",shape=box];
	26508086 -> ForLoop26508749;
	ForLoop26510350 [label="ForLoop26510350  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop26510350 -> ForLoop26510348;
	ForLoop26510350 -> _JOIN_26510350;
	_JOIN_26506600 [label="_JOIN_26506600None...",shape=box];
	_JOIN_26506600 -> 26506602;
	ForLoop26508007 [label="ForLoop26508007  for (j=jt; j<=min(ny-1,jj+31)-18; j=j+19) {...",shape=box];
	ForLoop26508007 -> 26507393;
	ForLoop26508007 -> _JOIN_26508007;
	ForLoop26493244 [label="ForLoop26493244  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jt)+1)%19)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop26493244 -> 26493243;
	ForLoop26493244 -> _JOIN_26493244;
	_JOIN_26504374 [label="_JOIN_26504374None...",shape=box];
	_JOIN_26504374 -> 26504376;
	ForLoop26498438 [label="ForLoop26498438  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jt)+1)%19)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop26498438 -> 26498437;
	ForLoop26498438 -> _JOIN_26498438;
	ForLoop26499922 [label="ForLoop26499922  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jt)+1)%19)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop26499922 -> 26499921;
	ForLoop26499922 -> _JOIN_26499922;
	_JOIN_26501406 [label="_JOIN_26501406None...",shape=box];
	_JOIN_26501406 -> 26501408;
	26503683 [label="26503683  scv_34=scv_34+A[(i+20)*ny+j]*x[j];...",shape=box];
	_JOIN_26496954 [label="_JOIN_26496954None...",shape=box];
	_JOIN_26496954 -> 26496956;
	ForLoop26489466 [label="ForLoop26489466  for (j=jt; j<=min(ny-1,jj+31)-18; j=j+19) {...",shape=box];
	ForLoop26489466 -> 26489014;
	ForLoop26489466 -> _JOIN_26489466;
	_JOIN_26511849 [label="_JOIN_26511849None...",shape=box];
	_JOIN_26511849 -> ForLoop26511921;
	_JOIN_26511848 [label="_JOIN_26511848None...",shape=box];
	_JOIN_26511848 -> _JOIN_26511849;
	_JOIN_26511845 [label="_JOIN_26511845None...",shape=box];
	_JOIN_26511845 -> _JOIN_26511848;
	_JOIN_26499180 [label="_JOIN_26499180None...",shape=box];
	_JOIN_26499180 -> 26499182;
	_JOIN_26491018 [label="_JOIN_26491018None...",shape=box];
	_JOIN_26491018 -> 26491020;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 26173807;
	_JOIN_26495470 [label="_JOIN_26495470None...",shape=box];
	_JOIN_26495470 -> 26495472;
	_JOIN_26504297 [label="_JOIN_26504297None...",shape=box];
	_JOIN_26504297 -> ForLoop26504374;
	_JOIN_26509568 [label="_JOIN_26509568None...",shape=box];
	_JOIN_26509568 -> _JOIN_26509571;
	ForLoop26501329 [label="ForLoop26501329  for (j=jt; j<=min(ny-1,jj+31)-18; j=j+19) {...",shape=box];
	ForLoop26501329 -> 26500715;
	ForLoop26501329 -> _JOIN_26501329;
	ForLoop26494728 [label="ForLoop26494728  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jt)+1)%19)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop26494728 -> 26494727;
	ForLoop26494728 -> _JOIN_26494728;
	ForLoop26501406 [label="ForLoop26501406  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jt)+1)%19)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop26501406 -> 26501405;
	ForLoop26501406 -> _JOIN_26501406;
	26488974 [label="26488974  int j;...",shape=box];
	26488974 -> ForLoop26489466;
	26492504 [label="26492504  int j;...",shape=box];
	26492504 -> ForLoop26493167;
	26458615 [label="26458615  int i;...",shape=box];
	26458615 -> ForLoop26510352;
	ForLoop26495470 [label="ForLoop26495470  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jt)+1)%19)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop26495470 -> 26495469;
	ForLoop26495470 -> _JOIN_26495470;
	_JOIN_26489466 [label="_JOIN_26489466None...",shape=box];
	_JOIN_26489466 -> ForLoop26489534;
	26501408 [label="26501408  int j;...",shape=box];
	26501408 -> ForLoop26502071;
	ForLoop26511848 [label="ForLoop26511848  for (jj=jjj; jj<=min(ny-1,jjj+2016); jj=jj+32) {...",shape=box];
	ForLoop26511848 -> ForLoop26511284;
	ForLoop26511848 -> _JOIN_26511848;
	_JOIN_26499922 [label="_JOIN_26499922None...",shape=box];
	_JOIN_26499922 -> 26499924;
	ForLoop26509571 [label="ForLoop26509571  for (jj=jjj; jj<=min(ny-1,jjj+2016); jj=jj+32) {...",shape=box];
	ForLoop26509571 -> ForLoop26488973;
	ForLoop26509571 -> _JOIN_26509571;
	ForLoop26509573 [label="ForLoop26509573  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop26509573 -> ForLoop26509571;
	ForLoop26509573 -> _JOIN_26509573;
	_JOIN_26497619 [label="_JOIN_26497619None...",shape=box];
	_JOIN_26497619 -> ForLoop26497696;
	26493243 [label="26493243  scv_45=scv_45+A[(i+5)*ny+j]*x[j];...",shape=box];
	26493243 -> _JOIN_26493244;
	26493246 [label="26493246  int j;...",shape=box];
	26493246 -> ForLoop26493909;
	26501405 [label="26501405  scv_53=scv_53+A[(i+16)*ny+j]*x[j];...",shape=box];
	26501405 -> _JOIN_26501406;
	ForLoop26496135 [label="ForLoop26496135  for (j=jt; j<=min(ny-1,jj+31)-18; j=j+19) {...",shape=box];
	ForLoop26496135 -> 26495521;
	ForLoop26496135 -> _JOIN_26496135;
	26498489 [label="26498489  scv_36=scv_36+A[(i+13)*ny+j]*x[j];...",shape=box];
	_JOIN_26501329 [label="_JOIN_26501329None...",shape=box];
	_JOIN_26501329 -> ForLoop26501406;
	26497005 [label="26497005  scv_54=scv_54+A[(i+11)*ny+j]*x[j];...",shape=box];
	ForLoop26502813 [label="ForLoop26502813  for (j=jt; j<=min(ny-1,jj+31)-18; j=j+19) {...",shape=box];
	ForLoop26502813 -> 26502199;
	ForLoop26502813 -> _JOIN_26502813;
	26495469 [label="26495469  scv_57=scv_57+A[(i+8)*ny+j]*x[j];...",shape=box];
	26495469 -> _JOIN_26495470;
	26499179 [label="26499179  scv_36=scv_36+A[(i+13)*ny+j]*x[j];...",shape=box];
	26499179 -> _JOIN_26499180;
	26491811 [label="26491811  scv_55=scv_55+A[(i+4)*ny+j]*x[j];...",shape=box];
	_JOIN_26499845 [label="_JOIN_26499845None...",shape=box];
	_JOIN_26499845 -> ForLoop26499922;
	26499921 [label="26499921  scv_49=scv_49+A[(i+14)*ny+j]*x[j];...",shape=box];
	26499921 -> _JOIN_26499922;
	_JOIN_26503632 [label="_JOIN_26503632None...",shape=box];
	_JOIN_26503632 -> 26503634;
	_JOIN_26498438 [label="_JOIN_26498438None...",shape=box];
	_JOIN_26498438 -> 26498440;
	26504373 [label="26504373  scv_34=scv_34+A[(i+20)*ny+j]*x[j];...",shape=box];
	26504373 -> _JOIN_26504374;
	_JOIN_26496877 [label="_JOIN_26496877None...",shape=box];
	_JOIN_26496877 -> ForLoop26496954;
	ForLoop26502148 [label="ForLoop26502148  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jt)+1)%19)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop26502148 -> 26502147;
	ForLoop26502148 -> _JOIN_26502148;
	ForLoop26174583 [label="ForLoop26174583  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop26174583 -> 26174582;
	ForLoop26174583 -> _JOIN_26174583;
	ForLoop26508084 [label="ForLoop26508084  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jt)+1)%19)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop26508084 -> 26508083;
	ForLoop26508084 -> _JOIN_26508084;
	ForLoop26509568 [label="ForLoop26509568  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jt)+1)%19)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop26509568 -> 26509567;
	ForLoop26509568 -> _JOIN_26509568;
	_JOIN_26496212 [label="_JOIN_26496212None...",shape=box];
	_JOIN_26496212 -> 26496214;
	26491017 [label="26491017  scv_46=scv_46+A[(i+2)*ny+j]*x[j];...",shape=box];
	26491017 -> _JOIN_26491018;
	ForLoop26506523 [label="ForLoop26506523  for (j=jt; j<=min(ny-1,jj+31)-18; j=j+19) {...",shape=box];
	ForLoop26506523 -> 26505909;
	ForLoop26506523 -> _JOIN_26506523;
	26552932 [label="26552932  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	26174582 [label="26174582  y[i]=0.0;...",shape=box];
	26174582 -> _JOIN_26174583;
	_JOIN_26493167 [label="_JOIN_26493167None...",shape=box];
	_JOIN_26493167 -> ForLoop26493244;
	_JOIN_26495393 [label="_JOIN_26495393None...",shape=box];
	_JOIN_26495393 -> ForLoop26495470;
	_JOIN_26174583 [label="_JOIN_26174583None...",shape=box];
	_JOIN_26174583 -> 26458582;
	ForLoop26511284 [label="ForLoop26511284  for (jt=jj; jt<=min(ny-1,jj+31)-31; jt=jt+32) {...",shape=box];
	ForLoop26511284 -> 26510476;
	ForLoop26511284 -> _JOIN_26511284;
	ForLoop26504297 [label="ForLoop26504297  for (j=jt; j<=min(ny-1,jj+31)-18; j=j+19) {...",shape=box];
	ForLoop26504297 -> 26503683;
	ForLoop26504297 -> _JOIN_26504297;
	ForLoop26499845 [label="ForLoop26499845  for (j=jt; j<=min(ny-1,jj+31)-18; j=j+19) {...",shape=box];
	ForLoop26499845 -> 26499231;
	ForLoop26499845 -> _JOIN_26499845;
	26500666 [label="26500666  int j;...",shape=box];
	26500666 -> ForLoop26501329;
	_JOIN_26507265 [label="_JOIN_26507265None...",shape=box];
	_JOIN_26507265 -> ForLoop26507342;
	26500663 [label="26500663  scv_50=scv_50+A[(i+15)*ny+j]*x[j];...",shape=box];
	26500663 -> _JOIN_26500664;
	26502199 [label="26502199  scv_39=scv_39+A[(i+18)*ny+j]*x[j];...",shape=box];
	ForLoop26492502 [label="ForLoop26492502  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jt)+1)%19)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop26492502 -> 26492501;
	ForLoop26492502 -> _JOIN_26492502;
	26491762 [label="26491762  int j;...",shape=box];
	26491762 -> ForLoop26492425;
	ForLoop26174514 [label="ForLoop26174514  for (i=0; i<=cbv_1; i=i+28) {...",shape=box];
	ForLoop26174514 -> 26174269;
	ForLoop26174514 -> _JOIN_26174514;
	ForLoop26500664 [label="ForLoop26500664  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jt)+1)%19)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop26500664 -> 26500663;
	ForLoop26500664 -> _JOIN_26500664;
	26496263 [label="26496263  scv_48=scv_48+A[(i+10)*ny+j]*x[j];...",shape=box];
	26727158 [label="26727158  double scv_34, scv_35, scv_36, scv_37, scv_38, scv_39, scv_40, scv_41;...",shape=box];
	26495472 [label="26495472  int j;...",shape=box];
	26495472 -> ForLoop26496135;
	ForLoop26491760 [label="ForLoop26491760  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jt)+1)%19)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop26491760 -> 26491759;
	ForLoop26491760 -> _JOIN_26491760;
	ForLoop26496212 [label="ForLoop26496212  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jt)+1)%19)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop26496212 -> 26496211;
	ForLoop26496212 -> _JOIN_26496212;
	26499924 [label="26499924  int j;...",shape=box];
	26499924 -> ForLoop26500587;
	_JOIN_26491683 [label="_JOIN_26491683None...",shape=box];
	_JOIN_26491683 -> ForLoop26491760;
	_JOIN_26494651 [label="_JOIN_26494651None...",shape=box];
	_JOIN_26494651 -> ForLoop26494728;
	26494727 [label="26494727  scv_43=scv_43+A[(i+7)*ny+j]*x[j];...",shape=box];
	26494727 -> _JOIN_26494728;
	ForLoop26491018 [label="ForLoop26491018  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jt)+1)%19)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop26491018 -> 26491017;
	ForLoop26491018 -> _JOIN_26491018;
	ForLoop26505116 [label="ForLoop26505116  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jt)+1)%19)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop26505116 -> 26505115;
	ForLoop26505116 -> _JOIN_26505116;
	ForLoop26504374 [label="ForLoop26504374  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jt)+1)%19)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop26504374 -> 26504373;
	ForLoop26504374 -> _JOIN_26504374;
	_JOIN_26497696 [label="_JOIN_26497696None...",shape=box];
	_JOIN_26497696 -> 26497698;
	_JOIN_26511919 [label="_JOIN_26511919None...",shape=box];
	_JOIN_26511919 -> _JOIN_26511920;
	ForLoop26488973 [label="ForLoop26488973  for (jt=jj; jt<=min(ny-1,jj+31)-31; jt=jt+32) {...",shape=box];
	ForLoop26488973 -> 26552932;
	ForLoop26488973 -> _JOIN_26488973;
	26506599 [label="26506599  scv_59=scv_59+A[(i+23)*ny+j]*x[j];...",shape=box];
	26506599 -> _JOIN_26506600;
	26506602 [label="26506602  int j;...",shape=box];
	26506602 -> ForLoop26507265;
	26508135 [label="26508135  scv_47=scv_47+A[(i+26)*ny+j]*x[j];...",shape=box];
	26491069 [label="26491069  scv_41=scv_41+A[(i+3)*ny+j]*x[j];...",shape=box];
	26502892 [label="26502892  int j;...",shape=box];
	26502892 -> ForLoop26503555;
	ForLoop26496877 [label="ForLoop26496877  for (j=jt; j<=min(ny-1,jj+31)-18; j=j+19) {...",shape=box];
	ForLoop26496877 -> 26496263;
	ForLoop26496877 -> _JOIN_26496877;
	_JOIN_26499103 [label="_JOIN_26499103None...",shape=box];
	_JOIN_26499103 -> ForLoop26499180;
	26508828 [label="26508828  int j;...",shapexpected=9369846271501.798828
actual=9369846271501.798828
e=box];
	26508828 -> ForLoop26509491;
	26491759 [label="26491759  scv_41=scv_41+A[(i+3)*ny+j]*x[j];...",shape=box];
	26491759 -> _JOIN_26491760;
	26508825 [label="26508825  scv_47=scv_47+A[(i+26)*ny+j]*x[j];...",shape=box];
	26508825 -> _JOIN_26508826;
	ForLoop26511845 [label="ForLoop26511845  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jt)+1)%19)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop26511845 -> 26511844;
	ForLoop26511845 -> _JOIN_26511845;
	ForLoop26507342 [label="ForLoop26507342  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jt)+1)%19)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop26507342 -> 26507341;
	ForLoop26507342 -> _JOIN_26507342;
	_JOIN_26492425 [label="_JOIN_26492425None...",shape=box];
	_JOIN_26492425 -> ForLoop26492502;
	ForLoop26494651 [label="ForLoop26494651  for (j=jt; j<=min(ny-1,jj+31)-18; j=j+19) {...",shape=box];
	ForLoop26494651 -> 26494037;
	ForLoop26494651 -> _JOIN_26494651;
	26500715 [label="26500715  scv_53=scv_53+A[(i+16)*ny+j]*x[j];...",shape=box];
	_JOIN_26493986 [label="_JOIN_26493986None...",shape=box];
	_JOIN_26493986 -> 26493988;
	_JOIN_26505116 [label="_JOIN_26505116None...",shape=box];
	_JOIN_26505116 -> 26505118;
	_JOIN_26505781 [label="_JOIN_26505781None...",shape=box];
	_JOIN_26505781 -> ForLoop26505858;
	26503634 [label="26503634  int j;...",shape=box];
	26503634 -> ForLoop26504297;
	26494730 [label="26494730  int j;...",shape=box];
	26494730 -> ForLoop26495393;
	26503631 [label="26503631  scv_38=scv_38+A[(i+19)*ny+j]*x[j];...",shape=box];
	26503631 -> _JOIN_26503632;
	_JOIN_26506523 [label="_JOIN_26506523None...",shape=box];
	_JOIN_26506523 -> ForLoop26506600;
	_JOIN_26494728 [label="_JOIN_26494728None...",shape=box];
	_JOIN_26494728 -> 26494730;
	26504425 [label="26504425  scv_37=scv_37+A[(i+21)*ny+j]*x[j];...",shape=box];
	_JOIN_26509491 [label="_JOIN_26509491None...",shape=box];
	_JOIN_26509491 -> ForLoop26509568;
	_JOIN_26493909 [label="_JOIN_26493909None...",shape=box];
	_JOIN_26493909 -> ForLoop26493986;
	ForLoop26500587 [label="ForLoop26500587  for (j=jt; j<=min(ny-1,jj+31)-18; j=j+19) {...",shape=box];
	ForLoop26500587 -> 26499973;
	ForLoop26500587 -> _JOIN_26500587;
	_JOIN_26505858 [label="_JOIN_26505858None...",shape=box];
	_JOIN_26505858 -> 26505860;
	_JOIN_26510348 [label="_JOIN_26510348None...",shape=box];
	_JOIN_26510348 -> _JOIN_26510350;
	26490275 [label="26490275  scv_58=scv_58+A[(i+1)*ny+j]*x[j];...",shape=box];
	26490275 -> _JOIN_26490276;
	26502889 [label="26502889  scv_39=scv_39+A[(i+18)*ny+j]*x[j];...",shape=box];
	26502889 -> _JOIN_26502890;
	ForLoop26511919 [label="ForLoop26511919  for (k=kk; k<=min(ny-1,kk+127); k=k+1) {...",shape=box];
	ForLoop26511919 -> 26735742;
	ForLoop26511919 -> _JOIN_26511919;
	ForLoop26509491 [label="ForLoop26509491  for (j=jt; j<=min(ny-1,jj+31)-18; j=j+19) {...",shape=box];
	ForLoop26509491 -> 26508877;
	ForLoop26509491 -> _JOIN_26509491;
	_JOIN_26508749 [label="_JOIN_26508749None...",shape=box];
	_JOIN_26508749 -> ForLoop26508826;
	_JOIN_26490941 [label="_JOIN_26490941None...",shape=box];
	_JOIN_26490941 -> ForLoop26491018;
	_JOIN_26489534 [label="_JOIN_26489534None...",shape=box];
	_JOIN_26489534 -> 26489536;
	26490278 [label="26490278  int j;...",shape=box];
	26490278 -> ForLoop26490941;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest107.exe __orio_perftest107.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest107.exe  
{'[6, 2, 4, 6, 6, 5, 0, 0, 27, 27, 18, 0, 0, 2, 0, 1, 1, 0]' : 0.154284}
{'[6, 2, 4, 6, 6, 5, 0, 0, 27, 27, 18, 0, 0, 2, 0, 1, 1, 0]' : 0.153609}
{'[6, 2, 4, 6, 6, 5, 0, 0, 27, 27, 18, 0, 0, 2, 0, 1, 1, 0]' : 0.153332}
{'[6, 2, 4, 6, 6, 5, 0, 0, 27, 27, 18, 0, 0, 2, 0, 1, 1, 0]' : 0.153773}
{'[6, 2, 4, 6, 6, 5, 0, 0, 27, 27, 18, 0, 0, 2, 0, 1, 1, 0]' : 0.15451}
{'[6, 2, 4, 6, 6, 5, 0, 0, 27, 27, 18, 0, 0, 2, 0, 1, 1, 0]' : 0.154197}
{'[6, 2, 4, 6, 6, 5, 0, 0, 27, 27, 18, 0, 0, 2, 0, 1, 1, 0]' : 0.15422}
{'[6, 2, 4, 6, 6, 5, 0, 0, 27, 27, 18, 0, 0, 2, 0, 1, 1, 0]' : 0.153848}
{'[6, 2, 4, 6, 6, 5, 0, 0, 27, 27, 18, 0, 0, 2, 0, 1, 1, 0]' : 0.153958}
{'[6, 2, 4, 6, 6, 5, 0, 0, 27, 27, 18, 0, 0, 2, 0, 1, 1, 0]' : 0.154161}
{'[6, 2, 4, 6, 6, 5, 0, 0, 27, 27, 18, 0, 0, 2, 0, 1, 1, 0]' : 0.154106}
{'[6, 2, 4, 6, 6, 5, 0, 0, 27, 27, 18, 0, 0, 2, 0, 1, 1, 0]' : 0.154149}
{'[6, 2, 4, 6, 6, 5, 0, 0, 27, 27, 18, 0, 0, 2, 0, 1, 1, 0]' : 0.153919}
{'[6, 2, 4, 6, 6, 5, 0, 0, 27, 27, 18, 0, 0, 2, 0, 1, 1, 0]' : 0.154073}
{'[6, 2, 4, 6, 6, 5, 0, 0, 27, 27, 18, 0, 0, 2, 0, 1, 1, 0]' : 0.154023}
{'[6, 2, 4, 6, 6, 5, 0, 0, 27, 27, 18, 0, 0, 2, 0, 1, 1, 0]' : 0.153763}
{'[6, 2, 4, 6, 6, 5, 0, 0, 27, 27, 18, 0, 0, 2, 0, 1, 1, 0]' : 0.154276}
{'[6, 2, 4, 6, 6, 5, 0, 0, 27, 27, 18, 0, 0, 2, 0, 1, 1, 0]' : 0.153958}
{'[6, 2, 4, 6, 6, 5, 0, 0, 27, 27, 18, 0, 0, 2, 0, 1, 1, 0]' : 0.153999}
{'[6, 2, 4, 6, 6, 5, 0, 0, 27, 27, 18, 0, 0, 2, 0, 1, 1, 0]' : 0.153745}
{'[6, 2, 4, 6, 6, 5, 0, 0, 27, 27, 18, 0, 0, 2, 0, 1, 1, 0]' : 0.154044}
{'[6, 2, 4, 6, 6, 5, 0, 0, 27, 27, 18, 0, 0, 2, 0, 1, 1, 0]' : 0.153993}
{'[6, 2, 4, 6, 6, 5, 0, 0, 27, 27, 18, 0, 0, 2, 0, 1, 1, 0]' : 0.154027}
{'[6, 2, 4, 6, 6, 5, 0, 0, 27, 27, 18, 0, 0, 2, 0, 1, 1, 0]' : 0.153908}
{'[6, 2, 4, 6, 6, 5, 0, 0, 27, 27, 18, 0, 0, 2, 0, 1, 1, 0]' : 0.154692}
{'[6, 2, 4, 6, 6, 5, 0, 0, 27, 27, 18, 0, 0, 2, 0, 1, 1, 0]' : 0.15382}
{'[6, 2, 4, 6, 6, 5, 0, 0, 27, 27, 18, 0, 0, 2, 0, 1, 1, 0]' : 0.153658}
{'[6, 2, 4, 6, 6, 5, 0, 0, 27, 27, 18, 0, 0, 2, 0, 1, 1, 0]' : 0.154442}
{'[6, 2, 4, 6, 6, 5, 0, 0, 27, 27, 18, 0, 0, 2, 0, 1, 1, 0]' : 0.154257}
{'[6, 2, 4, 6, 6, 5, 0, 0, 27, 27, 18, 0, 0, 2, 0, 1, 1, 0]' : 0.153949}

out:
 ["{'[6, 2, 4, 6, 6, 5, 0, 0, 27, 27, 18, 0, 0, 2, 0, 1, 1, 0]' : 0.154284}", "{'[6, 2, 4, 6, 6, 5, 0, 0, 27, 27, 18, 0, 0, 2, 0, 1, 1, 0]' : 0.153609}", "{'[6, 2, 4, 6, 6, 5, 0, 0, 27, 27, 18, 0, 0, 2, 0, 1, 1, 0]' : 0.153332}", "{'[6, 2, 4, 6, 6, 5, 0, 0, 27, 27, 18, 0, 0, 2, 0, 1, 1, 0]' : 0.153773}", "{'[6, 2, 4, 6, 6, 5, 0, 0, 27, 27, 18, 0, 0, 2, 0, 1, 1, 0]' : 0.15451}", "{'[6, 2, 4, 6, 6, 5, 0, 0, 27, 27, 18, 0, 0, 2, 0, 1, 1, 0]' : 0.154197}", "{'[6, 2, 4, 6, 6, 5, 0, 0, 27, 27, 18, 0, 0, 2, 0, 1, 1, 0]' : 0.15422}", "{'[6, 2, 4, 6, 6, 5, 0, 0, 27, 27, 18, 0, 0, 2, 0, 1, 1, 0]' : 0.153848}", "{'[6, 2, 4, 6, 6, 5, 0, 0, 27, 27, 18, 0, 0, 2, 0, 1, 1, 0]' : 0.153958}", "{'[6, 2, 4, 6, 6, 5, 0, 0, 27, 27, 18, 0, 0, 2, 0, 1, 1, 0]' : 0.154161}", "{'[6, 2, 4, 6, 6, 5, 0, 0, 27, 27, 18, 0, 0, 2, 0, 1, 1, 0]' : 0.154106}", "{'[6, 2, 4, 6, 6, 5, 0, 0, 27, 27, 18, 0, 0, 2, 0, 1, 1, 0]' : 0.154149}", "{'[6, 2, 4, 6, 6, 5, 0, 0, 27, 27, 18, 0, 0, 2, 0, 1, 1, 0]' : 0.153919}", "{'[6, 2, 4, 6, 6, 5, 0, 0, 27, 27, 18, 0, 0, 2, 0, 1, 1, 0]' : 0.154073}", "{'[6, 2, 4, 6, 6, 5, 0, 0, 27, 27, 18, 0, 0, 2, 0, 1, 1, 0]' : 0.154023}", "{'[6, 2, 4, 6, 6, 5, 0, 0, 27, 27, 18, 0, 0, 2, 0, 1, 1, 0]' : 0.153763}", "{'[6, 2, 4, 6, 6, 5, 0, 0, 27, 27, 18, 0, 0, 2, 0, 1, 1, 0]' : 0.154276}", "{'[6, 2, 4, 6, 6, 5, 0, 0, 27, 27, 18, 0, 0, 2, 0, 1, 1, 0]' : 0.153958}", "{'[6, 2, 4, 6, 6, 5, 0, 0, 27, 27, 18, 0, 0, 2, 0, 1, 1, 0]' : 0.153999}", "{'[6, 2, 4, 6, 6, 5, 0, 0, 27, 27, 18, 0, 0, 2, 0, 1, 1, 0]' : 0.153745}", "{'[6, 2, 4, 6, 6, 5, 0, 0, 27, 27, 18, 0, 0, 2, 0, 1, 1, 0]' : 0.154044}", "{'[6, 2, 4, 6, 6, 5, 0, 0, 27, 27, 18, 0, 0, 2, 0, 1, 1, 0]' : 0.153993}", "{'[6, 2, 4, 6, 6, 5, 0, 0, 27, 27, 18, 0, 0, 2, 0, 1, 1, 0]' : 0.154027}", "{'[6, 2, 4, 6, 6, 5, 0, 0, 27, 27, 18, 0, 0, 2, 0, 1, 1, 0]' : 0.153908}", "{'[6, 2, 4, 6, 6, 5, 0, 0, 27, 27, 18, 0, 0, 2, 0, 1, 1, 0]' : 0.154692}", "{'[6, 2, 4, 6, 6, 5, 0, 0, 27, 27, 18, 0, 0, 2, 0, 1, 1, 0]' : 0.15382}", "{'[6, 2, 4, 6, 6, 5, 0, 0, 27, 27, 18, 0, 0, 2, 0, 1, 1, 0]' : 0.153658}", "{'[6, 2, 4, 6, 6, 5, 0, 0, 27, 27, 18, 0, 0, 2, 0, 1, 1, 0]' : 0.154442}", "{'[6, 2, 4, 6, 6, 5, 0, 0, 27, 27, 18, 0, 0, 2, 0, 1, 1, 0]' : 0.154257}", "{'[6, 2, 4, 6, 6, 5, 0, 0, 27, 27, 18, 0, 0, 2, 0, 1, 1, 0]' : 0.153949}"]
returning from 'run': {'[6, 2, 4, 6, 6, 5, 0, 0, 27, 27, 18, 0, 0, 2, 0, 1, 1, 0]': ([0.154284, 0.153609, 0.153332, 0.153773, 0.15451, 0.154197, 0.15422, 0.153848, 0.153958, 0.154161, 0.154106, 0.154149, 0.153919, 0.154073, 0.154023, 0.153763, 0.154276, 0.153958, 0.153999, 0.153745, 0.154044, 0.153993, 0.154027, 0.153908, 0.154692, 0.15382, 0.153658, 0.154442, 0.154257, 0.153949], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.154284, 0.153609, 0.153332, 0.153773, 0.15451, 0.154197, 0.15422, 0.153848, 0.153958, 0.154161, 0.154106, 0.154149, 0.153919, 0.154073, 0.154023, 0.153763, 0.154276, 0.153958, 0.153999, 0.153745, 0.154044, 0.153993, 0.154027, 0.153908, 0.154692, 0.15382, 0.153658, 0.154442, 0.154257, 0.153949], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[6, 2, 4, 6, 6, 5, 0, 0, 27, 27, 18, 0, 0, 2, 0, 1, 1, 0]': ([0.154284, 0.153609, 0.153332, 0.153773, 0.15451, 0.154197, 0.15422, 0.153848, 0.153958, 0.154161, 0.154106, 0.154149, 0.153919, 0.154073, 0.154023, 0.153763, 0.154276, 0.153958, 0.153999, 0.153745, 0.154044, 0.153993, 0.154027, 0.153908, 0.154692, 0.15382, 0.153658, 0.154442, 0.154257, 0.153949], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [5, 5, 6, 4, 0, 13, 28, 0, 0, 0, 1, 1]
Fixed Factors: {'ACOPY_x': 0, 'ACOPY_y': 0, 'T2_K': 5, 'T2_J': 6, 'VEC1': 1, 'SCR': 1}
Testing candidate 8: [5, 5, 6, 4, 6, 5, 0, 0, 0, 13, 28, 0, 0, 0, 1, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	6
        Additions: 		2401
        Multiplications: 	1170
        Divisions: 		0
        Logical: 		0
        Reads: 			4599
        Writes: 		750
        Comparisons:		21
        Gotos: 			0
        
digraph CFG {
	_JOIN_26938682 [label="_JOIN_26938682None...",shape=box];
	_JOIN_26938682 -> 27055976;
	ForLoop26939128 [label="ForLoop26939128  for (j=cbv_2; j<=cbv_3; j=j+1) {...",shape=box];
	ForLoop26939128 -> 26964211;
	ForLoop26939128 -> _JOIN_26939128;
	27055976 [label="27055976  register int cbv_2, cbv_3;...",shape=box];
	ForLoop26807928 [label="ForLoop26807928  for (i=0; i<=cbv_1; i++ ) ...",shape=box];
	ForLoop26807928 -> 26807927;
	ForLoop26807928 -> _JOIN_26807928;
	_JOIN_26943217 [label="_JOIN_26943217None...",shape=box];
	_JOIN_26943217 -> ForLoop26944435;
	_JOIN_26943215 [label="_JOIN_26943215None...",shape=box];
	_JOIN_26943215 -> 27016406;
	27021094 [label="27021094  double scv_62;...",shape=box];
	_JOIN_26943213 [label="_JOIN_26943213None...",shape=box];
	_JOIN_26943213 -> _JOIN_26943215;
	26962936 [label="26962936  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	26924999 [label="26924999  int i;...",shape=box];
	26924999 -> ForLoop26943217;
	ForLoop26944112 [label="ForLoop26944112  for (j=cbv_7; j<=cbv_8; j=j+1) {...",shape=box];
	ForLoop26944112 -> 26944111;
	ForLoop26944112 -> _JOIN_26944112;
	ForLoop26944115 [label="ForLoop26944115  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop26944115 -> ForLoop26944114;
	ForLoop26944115 -> _JOIN_26944115;
	ForLoop26944114 [label="ForLoop26944114  for (jj=jjj; jj<=min(ny-1,jjj+1792); jj=jj+256) {...",shape=box];
	ForLoop26944114 -> 26943302;
	ForLoop26944114 -> _JOIN_26944114;
	26994568 [label="26994568  double scv_39;...",shape=box];
	26925174 [label="26925174  int j;...",shape=box];
	_JOIN_26944115 [label="_JOIN_26944115None...",shape=box];
	_JOIN_26944115 -> ForLoop26944433;
	_JOIN_26944114 [label="_JOIN_26944114None...",shape=box];
	_JOIN_26944114 -> _JOIN_26944115;
	26807927 [label="26807927  y[i]=0.0;...",shape=box];
	26807927 -> _JOIN_26807928;
	26993687 [label="26993687  double scv_31, scv_32, scv_33, scv_34, scv_35, scv_36, scv_37, scv_38;...",shape=box];
	_JOIN_26944112 [label="_JOIN_26944112None...",shape=box];
	_JOIN_26944112 -> _JOIN_26944114;
	ForLoop26944435 [label="ForLoop26944435  for (i=(min(nx-1,ii+255))-(((min(nx-1,ii+255))-(ii)+1)%14)+1; i<=min(nx-1,ii+255); i=i+1) {...",shape=box];
	ForLoop26944435 -> 27023156;
	ForLoop26944435 -> _JOIN_26944435;
	27058257 [label="27058257  register int cbv_4;...",shape=box];
	_JOIN_26939128 [label="_JOIN_26939128None...",shape=box];
	_JOIN_26939128 -> _JOIN_26939130;
	ForLoop26944044 [label="ForLoop26944044  for (j=jj; j<=cbv_6; j=j+29) {...",shape=box];
	ForLoop26944044 -> 26943342;
	ForLoop26944044 -> _JOIN_26944044;
	_JOIN_26942833 [label="_JOIN_26942833None...",shape=box];
	_JOIN_26942833 -> 27058536;
	26924966 [label="26924966  double x_copy;...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 26807955;
	ForLoop26944433 [label="ForLoop26944433  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop26944433 -> ForLoop26944432;
	ForLoop26944433 -> _JOIN_26944433;
	ForLoop26938682 [label="ForLoop26938682  for (j=jj; j<=cbv_1; j=j+29) {...",shape=box];
	ForLoop26938682 -> 26962936;
	ForLoop26938682 -> _JOIN_26938682;
	26964211 [label="26964211  double scv_30;...",shape=box];
	27023156 [label="27023156  double scv_63;...",shape=box];
	_JOIN_26944432 [label="_JOIN_26944432None...",shape=box];
	_JOIN_26944432 -> _JOIN_26944433;
	ForLoop26944438 [label="ForLoop26944438  for (iii=0; iii<=nx-1; iii=iii+512) {...",shape=box];
	ForLoop26944438 -> ForLoop26944437;
	ForLoop26944438 -> _JOIN_26944438;
	_JOIN_26807928 [label="_JOIN_26807928None...",shape=box];
	_JOIN_26807928 -> 26924966;
	26943342 [label="26943342  scv_63=scv_63+A[i*ny+j]*x[j];...",shape=box];
	ForLoop26944432 [label="ForLoop26944432  for (kk=kkk; kk<=min(ny-1,kkk+512); kk=kk+512) {...",shape=box];
	ForLoop26944432 -> 27059585;
	ForLoop26944432 -> _JOIN_26944432;
	27016388 [label="27016388  double scv_40, scv_41, scv_42, scv_43, scv_44, scv_45, scv_46, scv_47;...",shape=box];
	ForLoop26944430 [label="ForLoop26944430  for (k=kt; k<=cbv_10; k=k+1) {...",shape=box];
	ForLoop26944430 -> 27021094;
	ForLoop26944430 -> _JOIN_26944430;
	26943302 [label="26943302  int j;...",shape=box];
	ForLoop26944437 [label="ForLoop26944437  for (ii=iii; ii<=min(nx-1,iii+256); ii=ii+256) {...",shape=box];
	ForLoop26944437 -> 26924999;
	ForLoop26944437 -> _JOIN_26944437;
	ForLoop26939132 [label="ForLoop26939132  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop26939132 -> ForLoop26939130;
	ForLoop26939132 -> _JOIN_26939132;
	ForLoop26942833 [label="ForLoop26942833  for (kt=kk; kt<=cbv_4; kt=kt+8) {...",shape=box];
	ForLoop26942833 -> 26993687;
	ForLoop26942833 -> _JOIN_26942833;
	26944111 [label="26944111  scv_63=scv_63+A[i*ny+j]*x[j];...",shape=box];
	26944111 -> _JOIN_26944112;
	27058536 [label="27058536  register int cbv_5;...",shape=box];
	_JOIN_26944044 [label="_JOIN_26944044None...",shape=box];
	_JOIN_26944044 -> 27059247;
	ForLoop26944391 [label="ForLoop26944391  for (kt=kk; kt<=cbv_9; kt=kt+8) {...",shape=box];
	ForLoop26944391 -> 27020890;
	ForLoop26944391 -> _JOIN_26944391;
	27023168 [label="27023168  tmp[i]=scv_63;...",shape=box];
	27023168 -> _JOIN_26944435;
	ForLoop26939130 [label="ForLoop26939130  for (jj=jjj; jj<=min(ny-1,jjj+1792); jj=jj+256) {...",shape=box];
	ForLoop26939130 -> 26925174;
	ForLoop26939130 -> _JOIN_26939130;
	27059247 [label="27059247  register int cbv_7, cbv_8;...",shape=box];
	_JOIN_26944433 [label="_JOIN_26944433None...",shape=box];
	_JOIN_26944433 -> 27023168;
	27016406 [label="27016406  tmp[(i+12)]=scv_40;...",shape=box];
	_JOIN_26939132 [label="_JOIN_26939132None...",shape=box];
	_JOIN_26939132 -> ForLoop26943215;
	_JOIN_26944430 [label="_JOIN_26944430None...",shape=box];
	_JOIN_26944430 -> _JOIN_26944432;
	_JOIN_26939130 [label="_JOIN_26939130None...",shape=box];
	_JOIN_26939130 -> _JOIN_26939132;
	_JOIN_26944437 [label="_JOIN_26944437None...",shape=box];
	_JOIN_26944437 -> _JOIN_26944438;
	27059585 [label="27059585  register int cbv_9;...",shape=box];
	ForLoop26943213 [label="ForLoop26943213  for (kk=kkk; kk<=min(ny-1,kkk+512); kk=kk+512) {...",shape=box];
	ForLoop26943213 -> 27058257;
	ForLoop26943213 -> _JOIN_26943213;
	ForLoop26943211 [label="ForLoop26943211  for (k=kt; k<=cbv_5; k=k+1) {...",shape=box];
	ForLoop26943211 -> 26994568;
	ForLoop26943211 -> _JOIN_26943211;
	_JOIN_26944435 [lexpected=9369846271501.798828
actual=9369846271501.798828
abel="_JOIN_26944435None...",shape=box];
	_JOIN_26944435 -> _JOIN_26944437;
	ForLoop26943217 [label="ForLoop26943217  for (i=ii; i<=min(nx-1,ii+255)-13; i=i+14) {...",shape=box];
	ForLoop26943217 -> 27016388;
	ForLoop26943217 -> _JOIN_26943217;
	_JOIN_26944438 [label="_JOIN_26944438None...",shape=box];
	ForLoop26943215 [label="ForLoop26943215  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop26943215 -> ForLoop26943213;
	ForLoop26943215 -> _JOIN_26943215;
	27020890 [label="27020890  double scv_54, scv_55, scv_56, scv_57, scv_58, scv_59, scv_60, scv_61;...",shape=box];
	26807955 [label="26807955  register int cbv_1;...",shape=box];
	_JOIN_26943211 [label="_JOIN_26943211None...",shape=box];
	_JOIN_26943211 -> _JOIN_26943213;
	_JOIN_26944391 [label="_JOIN_26944391None...",shape=box];
	_JOIN_26944391 -> 27059643;
	27059643 [label="27059643  register int cbv_10;...",shape=box];

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest108.exe __orio_perftest108.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest108.exe  
{'[5, 5, 6, 4, 6, 5, 0, 0, 0, 13, 28, 0, 0, 0, 1, 1, 1, 1]' : 0.080852}
{'[5, 5, 6, 4, 6, 5, 0, 0, 0, 13, 28, 0, 0, 0, 1, 1, 1, 1]' : 0.0801771}
{'[5, 5, 6, 4, 6, 5, 0, 0, 0, 13, 28, 0, 0, 0, 1, 1, 1, 1]' : 0.080183}
{'[5, 5, 6, 4, 6, 5, 0, 0, 0, 13, 28, 0, 0, 0, 1, 1, 1, 1]' : 0.0802312}
{'[5, 5, 6, 4, 6, 5, 0, 0, 0, 13, 28, 0, 0, 0, 1, 1, 1, 1]' : 0.0802159}
{'[5, 5, 6, 4, 6, 5, 0, 0, 0, 13, 28, 0, 0, 0, 1, 1, 1, 1]' : 0.080193}
{'[5, 5, 6, 4, 6, 5, 0, 0, 0, 13, 28, 0, 0, 0, 1, 1, 1, 1]' : 0.0802901}
{'[5, 5, 6, 4, 6, 5, 0, 0, 0, 13, 28, 0, 0, 0, 1, 1, 1, 1]' : 0.081274}
{'[5, 5, 6, 4, 6, 5, 0, 0, 0, 13, 28, 0, 0, 0, 1, 1, 1, 1]' : 0.080147}
{'[5, 5, 6, 4, 6, 5, 0, 0, 0, 13, 28, 0, 0, 0, 1, 1, 1, 1]' : 0.080194}
{'[5, 5, 6, 4, 6, 5, 0, 0, 0, 13, 28, 0, 0, 0, 1, 1, 1, 1]' : 0.0807579}
{'[5, 5, 6, 4, 6, 5, 0, 0, 0, 13, 28, 0, 0, 0, 1, 1, 1, 1]' : 0.0803142}
{'[5, 5, 6, 4, 6, 5, 0, 0, 0, 13, 28, 0, 0, 0, 1, 1, 1, 1]' : 0.0802889}
{'[5, 5, 6, 4, 6, 5, 0, 0, 0, 13, 28, 0, 0, 0, 1, 1, 1, 1]' : 0.080157}
{'[5, 5, 6, 4, 6, 5, 0, 0, 0, 13, 28, 0, 0, 0, 1, 1, 1, 1]' : 0.0802372}
{'[5, 5, 6, 4, 6, 5, 0, 0, 0, 13, 28, 0, 0, 0, 1, 1, 1, 1]' : 0.0801308}
{'[5, 5, 6, 4, 6, 5, 0, 0, 0, 13, 28, 0, 0, 0, 1, 1, 1, 1]' : 0.0802479}
{'[5, 5, 6, 4, 6, 5, 0, 0, 0, 13, 28, 0, 0, 0, 1, 1, 1, 1]' : 0.0801899}
{'[5, 5, 6, 4, 6, 5, 0, 0, 0, 13, 28, 0, 0, 0, 1, 1, 1, 1]' : 0.0802991}
{'[5, 5, 6, 4, 6, 5, 0, 0, 0, 13, 28, 0, 0, 0, 1, 1, 1, 1]' : 0.0802631}
{'[5, 5, 6, 4, 6, 5, 0, 0, 0, 13, 28, 0, 0, 0, 1, 1, 1, 1]' : 0.0804889}
{'[5, 5, 6, 4, 6, 5, 0, 0, 0, 13, 28, 0, 0, 0, 1, 1, 1, 1]' : 0.0801642}
{'[5, 5, 6, 4, 6, 5, 0, 0, 0, 13, 28, 0, 0, 0, 1, 1, 1, 1]' : 0.0802372}
{'[5, 5, 6, 4, 6, 5, 0, 0, 0, 13, 28, 0, 0, 0, 1, 1, 1, 1]' : 0.080224}
{'[5, 5, 6, 4, 6, 5, 0, 0, 0, 13, 28, 0, 0, 0, 1, 1, 1, 1]' : 0.0802078}
{'[5, 5, 6, 4, 6, 5, 0, 0, 0, 13, 28, 0, 0, 0, 1, 1, 1, 1]' : 0.080179}
{'[5, 5, 6, 4, 6, 5, 0, 0, 0, 13, 28, 0, 0, 0, 1, 1, 1, 1]' : 0.0801301}
{'[5, 5, 6, 4, 6, 5, 0, 0, 0, 13, 28, 0, 0, 0, 1, 1, 1, 1]' : 0.0802081}
{'[5, 5, 6, 4, 6, 5, 0, 0, 0, 13, 28, 0, 0, 0, 1, 1, 1, 1]' : 0.0801919}
{'[5, 5, 6, 4, 6, 5, 0, 0, 0, 13, 28, 0, 0, 0, 1, 1, 1, 1]' : 0.0805469}

out:
 ["{'[5, 5, 6, 4, 6, 5, 0, 0, 0, 13, 28, 0, 0, 0, 1, 1, 1, 1]' : 0.080852}", "{'[5, 5, 6, 4, 6, 5, 0, 0, 0, 13, 28, 0, 0, 0, 1, 1, 1, 1]' : 0.0801771}", "{'[5, 5, 6, 4, 6, 5, 0, 0, 0, 13, 28, 0, 0, 0, 1, 1, 1, 1]' : 0.080183}", "{'[5, 5, 6, 4, 6, 5, 0, 0, 0, 13, 28, 0, 0, 0, 1, 1, 1, 1]' : 0.0802312}", "{'[5, 5, 6, 4, 6, 5, 0, 0, 0, 13, 28, 0, 0, 0, 1, 1, 1, 1]' : 0.0802159}", "{'[5, 5, 6, 4, 6, 5, 0, 0, 0, 13, 28, 0, 0, 0, 1, 1, 1, 1]' : 0.080193}", "{'[5, 5, 6, 4, 6, 5, 0, 0, 0, 13, 28, 0, 0, 0, 1, 1, 1, 1]' : 0.0802901}", "{'[5, 5, 6, 4, 6, 5, 0, 0, 0, 13, 28, 0, 0, 0, 1, 1, 1, 1]' : 0.081274}", "{'[5, 5, 6, 4, 6, 5, 0, 0, 0, 13, 28, 0, 0, 0, 1, 1, 1, 1]' : 0.080147}", "{'[5, 5, 6, 4, 6, 5, 0, 0, 0, 13, 28, 0, 0, 0, 1, 1, 1, 1]' : 0.080194}", "{'[5, 5, 6, 4, 6, 5, 0, 0, 0, 13, 28, 0, 0, 0, 1, 1, 1, 1]' : 0.0807579}", "{'[5, 5, 6, 4, 6, 5, 0, 0, 0, 13, 28, 0, 0, 0, 1, 1, 1, 1]' : 0.0803142}", "{'[5, 5, 6, 4, 6, 5, 0, 0, 0, 13, 28, 0, 0, 0, 1, 1, 1, 1]' : 0.0802889}", "{'[5, 5, 6, 4, 6, 5, 0, 0, 0, 13, 28, 0, 0, 0, 1, 1, 1, 1]' : 0.080157}", "{'[5, 5, 6, 4, 6, 5, 0, 0, 0, 13, 28, 0, 0, 0, 1, 1, 1, 1]' : 0.0802372}", "{'[5, 5, 6, 4, 6, 5, 0, 0, 0, 13, 28, 0, 0, 0, 1, 1, 1, 1]' : 0.0801308}", "{'[5, 5, 6, 4, 6, 5, 0, 0, 0, 13, 28, 0, 0, 0, 1, 1, 1, 1]' : 0.0802479}", "{'[5, 5, 6, 4, 6, 5, 0, 0, 0, 13, 28, 0, 0, 0, 1, 1, 1, 1]' : 0.0801899}", "{'[5, 5, 6, 4, 6, 5, 0, 0, 0, 13, 28, 0, 0, 0, 1, 1, 1, 1]' : 0.0802991}", "{'[5, 5, 6, 4, 6, 5, 0, 0, 0, 13, 28, 0, 0, 0, 1, 1, 1, 1]' : 0.0802631}", "{'[5, 5, 6, 4, 6, 5, 0, 0, 0, 13, 28, 0, 0, 0, 1, 1, 1, 1]' : 0.0804889}", "{'[5, 5, 6, 4, 6, 5, 0, 0, 0, 13, 28, 0, 0, 0, 1, 1, 1, 1]' : 0.0801642}", "{'[5, 5, 6, 4, 6, 5, 0, 0, 0, 13, 28, 0, 0, 0, 1, 1, 1, 1]' : 0.0802372}", "{'[5, 5, 6, 4, 6, 5, 0, 0, 0, 13, 28, 0, 0, 0, 1, 1, 1, 1]' : 0.080224}", "{'[5, 5, 6, 4, 6, 5, 0, 0, 0, 13, 28, 0, 0, 0, 1, 1, 1, 1]' : 0.0802078}", "{'[5, 5, 6, 4, 6, 5, 0, 0, 0, 13, 28, 0, 0, 0, 1, 1, 1, 1]' : 0.080179}", "{'[5, 5, 6, 4, 6, 5, 0, 0, 0, 13, 28, 0, 0, 0, 1, 1, 1, 1]' : 0.0801301}", "{'[5, 5, 6, 4, 6, 5, 0, 0, 0, 13, 28, 0, 0, 0, 1, 1, 1, 1]' : 0.0802081}", "{'[5, 5, 6, 4, 6, 5, 0, 0, 0, 13, 28, 0, 0, 0, 1, 1, 1, 1]' : 0.0801919}", "{'[5, 5, 6, 4, 6, 5, 0, 0, 0, 13, 28, 0, 0, 0, 1, 1, 1, 1]' : 0.0805469}"]
returning from 'run': {'[5, 5, 6, 4, 6, 5, 0, 0, 0, 13, 28, 0, 0, 0, 1, 1, 1, 1]': ([0.080852, 0.0801771, 0.080183, 0.0802312, 0.0802159, 0.080193, 0.0802901, 0.081274, 0.080147, 0.080194, 0.0807579, 0.0803142, 0.0802889, 0.080157, 0.0802372, 0.0801308, 0.0802479, 0.0801899, 0.0802991, 0.0802631, 0.0804889, 0.0801642, 0.0802372, 0.080224, 0.0802078, 0.080179, 0.0801301, 0.0802081, 0.0801919, 0.0805469], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.080852, 0.0801771, 0.080183, 0.0802312, 0.0802159, 0.080193, 0.0802901, 0.081274, 0.080147, 0.080194, 0.0807579, 0.0803142, 0.0802889, 0.080157, 0.0802372, 0.0801308, 0.0802479, 0.0801899, 0.0802991, 0.0802631, 0.0804889, 0.0801642, 0.0802372, 0.080224, 0.0802078, 0.080179, 0.0801301, 0.0802081, 0.0801919, 0.0805469], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[5, 5, 6, 4, 6, 5, 0, 0, 0, 13, 28, 0, 0, 0, 1, 1, 1, 1]': ([0.080852, 0.0801771, 0.080183, 0.0802312, 0.0802159, 0.080193, 0.0802901, 0.081274, 0.080147, 0.080194, 0.0807579, 0.0803142, 0.0802889, 0.080157, 0.0802372, 0.0801308, 0.0802479, 0.0801899, 0.0802991, 0.0802631, 0.0804889, 0.0801642, 0.0802372, 0.080224, 0.0802078, 0.080179, 0.0801301, 0.0802081, 0.0801919, 0.0805469], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [5, 1, 6, 6, 19, 5, 0, 18, 1, 0, 1, 1]
Fixed Factors: {'ACOPY_x': 0, 'ACOPY_y': 0, 'T2_K': 5, 'T2_J': 6, 'VEC1': 1, 'SCR': 1}
Testing candidate 9: [5, 1, 6, 6, 6, 5, 0, 0, 19, 5, 0, 18, 1, 0, 1, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	41
        Max loop nest depth: 	6
        Additions: 		2177
        Multiplications: 	870
        Divisions: 		0
        Logical: 		0
        Reads: 			4669
        Writes: 		979
        Comparisons:		41
        Gotos: 			0
        
digraph CFG {
	27274066 [label="27274066  double scv_66;...",shape=box];
	ForLoop27237791 [label="ForLoop27237791  for (k=cbv_21; k<=cbv_22; k=k+1) {...",shape=box];
	ForLoop27237791 -> 27279990;
	ForLoop27237791 -> _JOIN_27237791;
	27332444 [label="27332444  register int cbv_1;...",shape=box];
	27227082 [label="27227082  int k;...",shape=box];
	27234233 [label="27234233  int k;...",shape=box];
	_JOIN_27238532 [label="_JOIN_27238532None...",shape=box];
	_JOIN_27238532 -> 27301477;
	_JOIN_27238534 [label="_JOIN_27238534None...",shape=box];
	_JOIN_27238534 -> ForLoop27239556;
	_JOIN_27232641 [label="_JOIN_27232641None...",shape=box];
	_JOIN_27232641 -> _JOIN_27232643;
	27243408 [label="27243408  double scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8, scv_9;...",shape=box];
	27276553 [label="27276553  double scv_87, scv_88, scv_89, scv_90, scv_91, scv_92, scv_93, scv_94;...",shape=box];
	27333846 [label="27333846  register int cbv_2;...",shape=box];
	ForLoop27060412 [label="ForLoop27060412  for (i=0; i<=cbv_1; i=i+20) {...",shape=box];
	ForLoop27060412 -> 27060239;
	ForLoop27060412 -> _JOIN_27060412;
	27307222 [label="27307222  tmp[i]=scv_201;...",shape=box];
	27307222 -> _JOIN_27239556;
	ForLoop27232641 [label="ForLoop27232641  for (jj=jjj; jj<=min(ny-1,jjj+2032); jj=jj+16) {...",shape=box];
	ForLoop27232641 -> 27337409;
	ForLoop27232641 -> _JOIN_27232641;
	ForLoop27232643 [label="ForLoop27232643  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop27232643 -> ForLoop27232641;
	ForLoop27232643 -> _JOIN_27232643;
	27269345 [label="27269345  tmp[it]=scv_30;...",shape=box];
	27303258 [label="27303258  double scv_181, scv_182, scv_183, scv_184, scv_185, scv_186, scv_187, scv_188;...",shape=box];
	ForLoop27236245 [label="ForLoop27236245  for (k=kt; k<=cbv_14; k=k+19) {...",shape=box];
	ForLoop27236245 -> 27276553;
	ForLoop27236245 -> _JOIN_27236245;
	27232352 [label="27232352  int i;...",shape=box];
	27232352 -> ForLoop27238534;
	ForLoop27239560 [label="ForLoop27239560  for (iii=0; iii<=nx-1; iii=iii+2048) {...",shape=box];
	ForLoop27239560 -> ForLoop27239559;
	ForLoop27239560 -> _JOIN_27239560;
	_JOIN_27224908 [label="_JOIN_27224908None...",shape=box];
	_JOIN_27224908 -> ForLoop27232349;
	27275072 [label="27275072  double scv_67, scv_68, scv_69, scv_70, scv_71, scv_72, scv_73, scv_74;...",shape=box];
	27340070 [label="27340070  register int cbv_12, cbv_13;...",shape=box];
	_JOIN_27224906 [label="_JOIN_27224906None...",shape=box];
	_JOIN_27224906 -> _JOIN_27224907;
	27060480 [label="27060480  y[i]=0.0;...",shape=box];
	27060480 -> _JOIN_27060481;
	_JOIN_27239550 [label="_JOIN_27239550None...",shape=box];
	_JOIN_27239550 -> _JOIN_27239553;
	_JOIN_27239553 [label="_JOIN_27239553None...",shape=box];
	_JOIN_27239553 -> _JOIN_27239554;
	_JOIN_27239554 [label="_JOIN_27239554None...",shape=box];
	_JOIN_27239554 -> 27307222;
	27237057 [label="27237057  int k;...",shape=box];
	_JOIN_27236319 [label="_JOIN_27236319None...",shape=box];
	_JOIN_27236319 -> 27236321;
	_JOIN_27236245 [label="_JOIN_27236245None...",shape=box];
	_JOIN_27236245 -> 27340924;
	ForLoop27238658 [label="ForLoop27238658  for (jj=jjj; jj<=min(ny-1,jjj+2032); jj=jj+16) {...",shape=box];
	ForLoop27238658 -> 27343566;
	ForLoop27238658 -> _JOIN_27238658;
	27301459 [label="27301459  double scv_167, scv_168, scv_169, scv_170, scv_171, scv_172;...",shape=box];
	ForLoop27239556 [label="ForLoop27239556  for (i=(min(nx-1,ii+255))-(((min(nx-1,ii+255))-(it)+1)%6)+1; i<=min(nx-1,ii+255); i=i+1) {...",shape=box];
	ForLoop27239556 -> 27307210;
	ForLoop27239556 -> _JOIN_27239556;
	ForLoop27239550 [label="ForLoop27239550  for (k=cbv_29; k<=cbv_30; k=k+1) {...",shape=box];
	ForLoop27239550 -> 27303724;
	ForLoop27239550 -> _JOIN_27239550;
	ForLoop27237717 [label="ForLoop27237717  for (k=kt; k<=cbv_20; k=k+19) {...",shape=box];
	ForLoop27237717 -> 27279515;
	ForLoop27237717 -> _JOIN_27237717;
	_JOIN_27227081 [label="_JOIN_27227081None...",shape=box];
	_JOIN_27227081 -> 27227082;
	27269333 [label="27269333  double scv_30, scv_31, scv_32, scv_33, scv_34, scv_35, scv_36, scv_37;...",shape=box];
	ForLoop27239559 [label="ForLoop27239559  for (ii=iii; ii<=min(nx-1,iii+1792); ii=ii+256) {...",shape=box];
	ForLoop27239559 -> ForLoop27232351;
	ForLoop27239559 -> _JOIN_27239559;
	ForLoop27236981 [label="ForLoop27236981  for (k=kt; k<=cbv_17; k=k+19) {...",shape=box];
	ForLoop27236981 -> 27278034;
	ForLoop27236981 -> _JOIN_27236981;
	ForLoop27234779 [label="ForLoop27234779  for (k=kt; k<=cbv_8; k=k+19) {...",shape=box];
	ForLoop27234779 -> 27273600;
	ForLoop27234779 -> _JOIN_27234779;
	ForLoop27232345 [label="ForLoop27232345  for (k=cbv_4; k<=cbv_5; k=k+1) {...",shape=box];
	ForLoop27232345 -> 27251534;
	ForLoop27232345 -> _JOIN_27232345;
	_JOIN_27238530 [label="_JOIN_27238530None...",shape=box];
	_JOIN_27238530 -> _JOIN_27238532;
	_JOIN_27239560 [label="_JOIN_27239560None...",shape=box];
	_JOIN_27232643 [label="_JOIN_27232643None...",shape=box];
	_JOIN_27232643 -> ForLoop27238532;
	ForLoop27232349 [label="ForLoop27232349  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop27232349 -> ForLoop27232348;
	ForLoop27232349 -> _JOIN_27232349;
	ForLoop27232348 [label="ForLoop27232348  for (kk=kkk; kk<=min(ny-1,kkk+512); kk=kk+512) {...",shape=box];
	ForLoop27232348 -> 27333846;
	ForLoop27232348 -> _JOIN_27232348;
	27278509 [label="27278509  double scv_126;...",shape=box];
	_JOIN_27239556 [label="_JOIN_27239556None...",shape=box];
	_JOIN_27239556 -> _JOIN_27239559;
	27344630 [label="27344630  register int cbv_29, cbv_30;...",shape=box];
	27341778 [label="27341778  register int cbv_18, cbv_19;...",shape=box];
	27250549 [label="27250549  double scv_10, scv_11, scv_12, scv_13, scv_14, scv_15, scv_16, scv_17;...",shape=box];
	27343486 [label="27343486  register int cbv_24, cbv_25;...",shape=box];
	ForLoop27227081 [label="ForLoop27227081  for (kt=kk; kt<=cbv_2; kt=kt+8) {...",shape=box];
	ForLoop27227081 -> 27243408;
	ForLoop27227081 -> _JOIN_27227081;
	_JOIN_27060412 [label="_JOIN_27060412None...",shape=box];
	_JOIN_27060412 -> 27060702;
	_JOIN_27238657 [label="_JOIN_27238657None...",shape=box];
	_JOIN_27238657 -> _JOIN_27238658;
	ForLoop27239554 [label="ForLoop27239554  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop27239554 -> ForLoop27239553;
	ForLoop27239554 -> _JOIN_27239554;
	_JOIN_27238659 [label="_JOIN_27238659None...",shape=box];
	_JOIN_27238659 -> ForLoop27239554;
	27224574 [label="27224574  double x_copy;...",shape=box];
	ForLoop27238657 [label="ForLoop27238657  for (j=jj; j<=cbv_26; j=j+1) {...",shape=box];
	ForLoop27238657 -> 27238656;
	ForLoop27238657 -> _JOIN_27238657;
	27339216 [label="27339216  register int cbv_9, cbv_10;...",shape=box];
	ForLoop27238659 [label="ForLoop27238659  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop27238659 -> ForLoop27238658;
	ForLoop27238659 -> _JOIN_27238659;
	27338455 [label="27338455  register int cbv_7;...",shape=box];
	ForLoop27234847 [label="ForLoop27234847  for (k=cbv_9; k<=cbv_10; k=k+1) {...",shape=box];
	ForLoop27234847 -> 27274066;
	ForLoop27234847 -> _JOIN_27234847;
	27269991 [label="27269991  double scv_38;...",shape=box];
	_JOIN_27060481 [label="_JOIN_27060481None...",shape=box];
	_JOIN_27060481 -> 27224574;
	ForLoop27232351 [label="ForLoop27232351  for (it=ii; it<=min(nx-1,ii+255)-7; it=it+8) {...",shape=box];
	ForLoop27232351 -> 27269333;
	ForLoop27232351 -> _JOIN_27232351;
	ForLoop27239553 [label="ForLoop27239553  for (kk=kkk; kk<=min(ny-1,kkk+512); kk=kk+512) {...",shape=box];
	ForLoop27239553 -> 27343869;
	ForLoop27239553 -> _JOIN_27239553;
	_JOIN_27237717 [label="_JOIN_27237717None...",shape=box];
	_JOIN_27237717 -> 27342632;
	_JOIN_27234847 [label="_JOIN_27234847None...",shape=box];
	_JOIN_27234847 -> 27234849;
	ForLoop27238935 [label="ForLoop27238935  for (kt=kk; kt<=cbv_27; kt=kt+8) {...",shape=box];
	ForLoop27238935 -> 27302277;
	ForLoop27238935 -> _JOIN_27238935;
	_JOIN_27239482 [label="_JOIN_27239482None...",shape=box];
	_JOIN_27239482 -> 27344630;
	27060239 [label="27060239  y[i]=0.0;...",shape=box];
	_JOIN_27232639 [label="_JOIN_27232639None...",shape=box];
	_JOIN_27232639 -> _JOIN_27232641;
	27343566 [label="27343566  register int cbv_26;...",shape=box];
	27275547 [label="27275547  double scv_86;...",shape=box];
	27301477 [label="27301477  tmp[(i+1)]=scv_167;...",shape=box];
	27236321 [label="27236321  int k;...",shape=box];
	ForLoop27238527 [label="ForLoop27238527  for (k=cbv_24; k<=cbv_25; k=k+1) {...",shape=box];
	ForLoop27238527 -> 27281471;
	ForLoop27238527 -> _JOIN_27238527;
	ForLoop27238453 [label="ForLoop27238453  for (k=kt; k<=cbv_23; k=k+19) {...",shape=box];
	ForLoop27238453 -> 27280996;
	ForLoop27238453 -> _JOIN_27238453;
	_JOIN_27236981 [label="_JOIN_27236981None...",shape=box];
	_JOIN_27236981 -> 27341778;
	27340924 [label="27340924  register int cbv_15, cbv_16;...",shape=box];
	27251534 [label="27251534  double scv_29;...",shape=box];
	ForLoop27237055 [label="ForLoop27237055  for (k=cbv_18; k<=cbv_19; k=k+1) {...",shape=box];
	ForLoop27237055 -> 27278509;
	ForLoop27237055 -> _JOIN_27237055;
	27278034 [label="27278034  double scv_107, scv_108, scv_109, scv_110, scv_111, scv_112, scv_113, scv_114;...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 27059897;
	27059897 [label="27059897  int i;...",shape=box];
	_JOIN_27238527 [label="_JOIN_27238527None...",shape=box];
	_JOIN_27238527 -> _JOIN_27238530;
	_JOIN_27235509 [label="_JOIN_27235509None...",shape=box];
	_JOIN_27235509 -> 27340070;
	27337239 [label="27337239  register int cbv_4, cbv_5;...",shape=box];
	ForLoop27224906 [label="ForLoop27224906  for (j=jj; j<=cbv_1; j=j+1) {...",shape=box];
	ForLoop27224906 -> 27239922;
	ForLoop27224906 -> _JOIN_27224906;
	ForLoop27224907 [label="ForLoop27224907  for (jj=jjj; jj<=min(ny-1,jjj+2032); jj=jj+16) {...",shape=box];
	ForLoop27224907 -> 27332444;
	ForLoop27224907 -> _JOIN_27224907;
	_JOIN_27237791 [label="_JOIN_27237791None...",shape=box];
	_JOIN_27237791 -> 27237793;
	27239922 [label="27239922  double scv_1;...",shape=box];
	ForLoop27238530 [label="ForLoop27238530  for (kk=kkk; kk<=min(ny-1,kkk+512); kk=kk+512) {...",shape=box];
	ForLoop27238530 -> 27338455;
	ForLoop27238530 -> _JOIN_27238530;
	ForLoop27238532 [label="ForLoop27238532  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop27238532 -> ForLoop27238530;
	ForLoop27238532 -> _JOIN_27238532;
	ForLoop27224908 [label="ForLoop27224908  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop27224908 -> ForLoop27224907;
	ForLoop27224908 -> _JOIN_27224908;
	_JOIN_27235583 [label="_JOIN_27235583None...",shape=box];
	_JOIN_27235583 -> 27235585;
	27238936 [label="27238936  int k;...",shape=box];
	27337409 [label="27337409  register int cbv_6;...",shape=box];
	27303724 [label="27303724  double scv_200;...",shape=box];
	27237793 [label="27237793  int k;...",shape=box];
	27343869 [label="27343869  register int cbv_27;...",shape=box];
	ForLoop27232639 [label="ForLoop27232639  for (j=jj; j<=cbv_6; j=j+1) {...",shape=box];
	ForLoop27232639 -> 27269991;
	ForLoop27232639 -> _JOIN_27232639;
	27279515 [label="27279515  double scv_127, scv_128, scv_129, scv_130, scv_131, scv_132, scv_133, scv_134;...",shape=box];
	27307210 [label="27307210  double scv_201;...",shape=box];
	ForLoop27238534 [label="ForLoop27238534  for (i=it; i<=min(nx-1,ii+255)-5; i=i+6) {...",shape=box];
	ForLoop27238534 -> 27301459;
	ForLoop27238534 -> _JOIN_27238534;
	27302277 [label="27302277  double scv_173, scv_174, scv_175, scv_176, scv_177, scv_178, scv_179, scv_180;...",shape=box];
	27235585 [label="27235585  int k;...",shape=box];
	_JOIN_27232351 [label="_JOIN_27232351None...",shape=box];
	_JOIN_27232351 -> 27232352;
	27234849 [label="27234849  int k;...",shape=box];
	27273600 [label="27273600  double scv_47, scv_48, scv_49, scv_50, scv_51, scv_52, scv_53, scv_54;...",shape=box];
	27279990 [label="27279990  double scv_146;...",shape=box];
	_JOIN_27239559 [label="_JOIN_27239559None...",shape=box];
	_JOIN_27239559 -> _JOIN_27239560;
	_JOIN_27234232 [label="_JOIN_27234232None...",shape=box];
	_JOIN_27234232 -> 27234233;
	27277028 [label="27277028  double scv_106;...",shape=box];
	_JOIN_27238453 [label="_JOIN_27238453None...",shape=box];
	_JOIN_27238453 -> 27343486;
	27281471 [label="27281471  double scv_166;...",shape=box];
	27238656 [label="27238656  scv_201=scv_201+A[i*ny+j]*x[j];...",shape=box];
	27238656 -> _JOIN_27238657;
	_JOIN_27232345 [label="_JOIN_27232345None...",shape=box];
	_JOIN_27232345 -> _JOIN_27232348;
	ForLoop27234232 [label="ForLoop27234232  for (kt=kk; kt<=cbv_7; kt=kt+8) {...",shape=box];
	ForLoop27234232 -> 27272539;
	ForLoop27234232 -> _JOIN_27234232;
	_JOIN_27232094 [label="_JOIN_27232094None...",shape=box];
	_JOIN_27232094 -> 2733expected=9369846271501.798828
actual=9369846271501.798828
7239;
	_JOIN_27232349 [label="_JOIN_27232349None...",shape=box];
	_JOIN_27232349 -> 27269345;
	_JOIN_27232348 [label="_JOIN_27232348None...",shape=box];
	_JOIN_27232348 -> _JOIN_27232349;
	27342632 [label="27342632  register int cbv_21, cbv_22;...",shape=box];
	ForLoop27232094 [label="ForLoop27232094  for (k=kt; k<=cbv_3; k=k+19) {...",shape=box];
	ForLoop27232094 -> 27250549;
	ForLoop27232094 -> _JOIN_27232094;
	_JOIN_27224907 [label="_JOIN_27224907None...",shape=box];
	_JOIN_27224907 -> _JOIN_27224908;
	ForLoop27060481 [label="ForLoop27060481  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop27060481 -> 27060480;
	ForLoop27060481 -> _JOIN_27060481;
	27060702 [label="27060702  register int cbv_2, cbv_3;...",shape=box];
	27280996 [label="27280996  double scv_147, scv_148, scv_149, scv_150, scv_151, scv_152, scv_153, scv_154;...",shape=box];
	ForLoop27235583 [label="ForLoop27235583  for (k=cbv_12; k<=cbv_13; k=k+1) {...",shape=box];
	ForLoop27235583 -> 27275547;
	ForLoop27235583 -> _JOIN_27235583;
	ForLoop27239482 [label="ForLoop27239482  for (k=kt; k<=cbv_28; k=k+19) {...",shape=box];
	ForLoop27239482 -> 27303258;
	ForLoop27239482 -> _JOIN_27239482;
	_JOIN_27238935 [label="_JOIN_27238935None...",shape=box];
	_JOIN_27238935 -> 27238936;
	ForLoop27235509 [label="ForLoop27235509  for (k=kt; k<=cbv_11; k=k+19) {...",shape=box];
	ForLoop27235509 -> 27275072;
	ForLoop27235509 -> _JOIN_27235509;
	_JOIN_27234779 [label="_JOIN_27234779None...",shape=box];
	_JOIN_27234779 -> 27339216;
	27272539 [label="27272539  double scv_39, scv_40, scv_41, scv_42, scv_43, scv_44, scv_45, scv_46;...",shape=box];
	ForLoop27236319 [label="ForLoop27236319  for (k=cbv_15; k<=cbv_16; k=k+1) {...",shape=box];
	ForLoop27236319 -> 27277028;
	ForLoop27236319 -> _JOIN_27236319;
	_JOIN_27238658 [label="_JOIN_27238658None...",shape=box];
	_JOIN_27238658 -> _JOIN_27238659;
	_JOIN_27237055 [label="_JOIN_27237055None...",shape=box];
	_JOIN_27237055 -> 27237057;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest109.exe __orio_perftest109.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest109.exe  
{'[5, 1, 6, 6, 6, 5, 0, 0, 19, 5, 0, 18, 1, 0, 1, 1, 1, 1]' : 0.080368}
{'[5, 1, 6, 6, 6, 5, 0, 0, 19, 5, 0, 18, 1, 0, 1, 1, 1, 1]' : 0.079597}
{'[5, 1, 6, 6, 6, 5, 0, 0, 19, 5, 0, 18, 1, 0, 1, 1, 1, 1]' : 0.0797071}
{'[5, 1, 6, 6, 6, 5, 0, 0, 19, 5, 0, 18, 1, 0, 1, 1, 1, 1]' : 0.0796449}
{'[5, 1, 6, 6, 6, 5, 0, 0, 19, 5, 0, 18, 1, 0, 1, 1, 1, 1]' : 0.0796781}
{'[5, 1, 6, 6, 6, 5, 0, 0, 19, 5, 0, 18, 1, 0, 1, 1, 1, 1]' : 0.0798101}
{'[5, 1, 6, 6, 6, 5, 0, 0, 19, 5, 0, 18, 1, 0, 1, 1, 1, 1]' : 0.079566}
{'[5, 1, 6, 6, 6, 5, 0, 0, 19, 5, 0, 18, 1, 0, 1, 1, 1, 1]' : 0.0797079}
{'[5, 1, 6, 6, 6, 5, 0, 0, 19, 5, 0, 18, 1, 0, 1, 1, 1, 1]' : 0.0796852}
{'[5, 1, 6, 6, 6, 5, 0, 0, 19, 5, 0, 18, 1, 0, 1, 1, 1, 1]' : 0.0797868}
{'[5, 1, 6, 6, 6, 5, 0, 0, 19, 5, 0, 18, 1, 0, 1, 1, 1, 1]' : 0.0797141}
{'[5, 1, 6, 6, 6, 5, 0, 0, 19, 5, 0, 18, 1, 0, 1, 1, 1, 1]' : 0.079643}
{'[5, 1, 6, 6, 6, 5, 0, 0, 19, 5, 0, 18, 1, 0, 1, 1, 1, 1]' : 0.079704}
{'[5, 1, 6, 6, 6, 5, 0, 0, 19, 5, 0, 18, 1, 0, 1, 1, 1, 1]' : 0.079632}
{'[5, 1, 6, 6, 6, 5, 0, 0, 19, 5, 0, 18, 1, 0, 1, 1, 1, 1]' : 0.079623}
{'[5, 1, 6, 6, 6, 5, 0, 0, 19, 5, 0, 18, 1, 0, 1, 1, 1, 1]' : 0.079967}
{'[5, 1, 6, 6, 6, 5, 0, 0, 19, 5, 0, 18, 1, 0, 1, 1, 1, 1]' : 0.079726}
{'[5, 1, 6, 6, 6, 5, 0, 0, 19, 5, 0, 18, 1, 0, 1, 1, 1, 1]' : 0.0797641}
{'[5, 1, 6, 6, 6, 5, 0, 0, 19, 5, 0, 18, 1, 0, 1, 1, 1, 1]' : 0.0796809}
{'[5, 1, 6, 6, 6, 5, 0, 0, 19, 5, 0, 18, 1, 0, 1, 1, 1, 1]' : 0.0795581}
{'[5, 1, 6, 6, 6, 5, 0, 0, 19, 5, 0, 18, 1, 0, 1, 1, 1, 1]' : 0.0796819}
{'[5, 1, 6, 6, 6, 5, 0, 0, 19, 5, 0, 18, 1, 0, 1, 1, 1, 1]' : 0.079653}
{'[5, 1, 6, 6, 6, 5, 0, 0, 19, 5, 0, 18, 1, 0, 1, 1, 1, 1]' : 0.079844}
{'[5, 1, 6, 6, 6, 5, 0, 0, 19, 5, 0, 18, 1, 0, 1, 1, 1, 1]' : 0.0796452}
{'[5, 1, 6, 6, 6, 5, 0, 0, 19, 5, 0, 18, 1, 0, 1, 1, 1, 1]' : 0.0795889}
{'[5, 1, 6, 6, 6, 5, 0, 0, 19, 5, 0, 18, 1, 0, 1, 1, 1, 1]' : 0.0799}
{'[5, 1, 6, 6, 6, 5, 0, 0, 19, 5, 0, 18, 1, 0, 1, 1, 1, 1]' : 0.079679}
{'[5, 1, 6, 6, 6, 5, 0, 0, 19, 5, 0, 18, 1, 0, 1, 1, 1, 1]' : 0.0797369}
{'[5, 1, 6, 6, 6, 5, 0, 0, 19, 5, 0, 18, 1, 0, 1, 1, 1, 1]' : 0.079638}
{'[5, 1, 6, 6, 6, 5, 0, 0, 19, 5, 0, 18, 1, 0, 1, 1, 1, 1]' : 0.079597}

out:
 ["{'[5, 1, 6, 6, 6, 5, 0, 0, 19, 5, 0, 18, 1, 0, 1, 1, 1, 1]' : 0.080368}", "{'[5, 1, 6, 6, 6, 5, 0, 0, 19, 5, 0, 18, 1, 0, 1, 1, 1, 1]' : 0.079597}", "{'[5, 1, 6, 6, 6, 5, 0, 0, 19, 5, 0, 18, 1, 0, 1, 1, 1, 1]' : 0.0797071}", "{'[5, 1, 6, 6, 6, 5, 0, 0, 19, 5, 0, 18, 1, 0, 1, 1, 1, 1]' : 0.0796449}", "{'[5, 1, 6, 6, 6, 5, 0, 0, 19, 5, 0, 18, 1, 0, 1, 1, 1, 1]' : 0.0796781}", "{'[5, 1, 6, 6, 6, 5, 0, 0, 19, 5, 0, 18, 1, 0, 1, 1, 1, 1]' : 0.0798101}", "{'[5, 1, 6, 6, 6, 5, 0, 0, 19, 5, 0, 18, 1, 0, 1, 1, 1, 1]' : 0.079566}", "{'[5, 1, 6, 6, 6, 5, 0, 0, 19, 5, 0, 18, 1, 0, 1, 1, 1, 1]' : 0.0797079}", "{'[5, 1, 6, 6, 6, 5, 0, 0, 19, 5, 0, 18, 1, 0, 1, 1, 1, 1]' : 0.0796852}", "{'[5, 1, 6, 6, 6, 5, 0, 0, 19, 5, 0, 18, 1, 0, 1, 1, 1, 1]' : 0.0797868}", "{'[5, 1, 6, 6, 6, 5, 0, 0, 19, 5, 0, 18, 1, 0, 1, 1, 1, 1]' : 0.0797141}", "{'[5, 1, 6, 6, 6, 5, 0, 0, 19, 5, 0, 18, 1, 0, 1, 1, 1, 1]' : 0.079643}", "{'[5, 1, 6, 6, 6, 5, 0, 0, 19, 5, 0, 18, 1, 0, 1, 1, 1, 1]' : 0.079704}", "{'[5, 1, 6, 6, 6, 5, 0, 0, 19, 5, 0, 18, 1, 0, 1, 1, 1, 1]' : 0.079632}", "{'[5, 1, 6, 6, 6, 5, 0, 0, 19, 5, 0, 18, 1, 0, 1, 1, 1, 1]' : 0.079623}", "{'[5, 1, 6, 6, 6, 5, 0, 0, 19, 5, 0, 18, 1, 0, 1, 1, 1, 1]' : 0.079967}", "{'[5, 1, 6, 6, 6, 5, 0, 0, 19, 5, 0, 18, 1, 0, 1, 1, 1, 1]' : 0.079726}", "{'[5, 1, 6, 6, 6, 5, 0, 0, 19, 5, 0, 18, 1, 0, 1, 1, 1, 1]' : 0.0797641}", "{'[5, 1, 6, 6, 6, 5, 0, 0, 19, 5, 0, 18, 1, 0, 1, 1, 1, 1]' : 0.0796809}", "{'[5, 1, 6, 6, 6, 5, 0, 0, 19, 5, 0, 18, 1, 0, 1, 1, 1, 1]' : 0.0795581}", "{'[5, 1, 6, 6, 6, 5, 0, 0, 19, 5, 0, 18, 1, 0, 1, 1, 1, 1]' : 0.0796819}", "{'[5, 1, 6, 6, 6, 5, 0, 0, 19, 5, 0, 18, 1, 0, 1, 1, 1, 1]' : 0.079653}", "{'[5, 1, 6, 6, 6, 5, 0, 0, 19, 5, 0, 18, 1, 0, 1, 1, 1, 1]' : 0.079844}", "{'[5, 1, 6, 6, 6, 5, 0, 0, 19, 5, 0, 18, 1, 0, 1, 1, 1, 1]' : 0.0796452}", "{'[5, 1, 6, 6, 6, 5, 0, 0, 19, 5, 0, 18, 1, 0, 1, 1, 1, 1]' : 0.0795889}", "{'[5, 1, 6, 6, 6, 5, 0, 0, 19, 5, 0, 18, 1, 0, 1, 1, 1, 1]' : 0.0799}", "{'[5, 1, 6, 6, 6, 5, 0, 0, 19, 5, 0, 18, 1, 0, 1, 1, 1, 1]' : 0.079679}", "{'[5, 1, 6, 6, 6, 5, 0, 0, 19, 5, 0, 18, 1, 0, 1, 1, 1, 1]' : 0.0797369}", "{'[5, 1, 6, 6, 6, 5, 0, 0, 19, 5, 0, 18, 1, 0, 1, 1, 1, 1]' : 0.079638}", "{'[5, 1, 6, 6, 6, 5, 0, 0, 19, 5, 0, 18, 1, 0, 1, 1, 1, 1]' : 0.079597}"]
returning from 'run': {'[5, 1, 6, 6, 6, 5, 0, 0, 19, 5, 0, 18, 1, 0, 1, 1, 1, 1]': ([0.080368, 0.079597, 0.0797071, 0.0796449, 0.0796781, 0.0798101, 0.079566, 0.0797079, 0.0796852, 0.0797868, 0.0797141, 0.079643, 0.079704, 0.079632, 0.079623, 0.079967, 0.079726, 0.0797641, 0.0796809, 0.0795581, 0.0796819, 0.079653, 0.079844, 0.0796452, 0.0795889, 0.0799, 0.079679, 0.0797369, 0.079638, 0.079597], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.080368, 0.079597, 0.0797071, 0.0796449, 0.0796781, 0.0798101, 0.079566, 0.0797079, 0.0796852, 0.0797868, 0.0797141, 0.079643, 0.079704, 0.079632, 0.079623, 0.079967, 0.079726, 0.0797641, 0.0796809, 0.0795581, 0.0796819, 0.079653, 0.079844, 0.0796452, 0.0795889, 0.0799, 0.079679, 0.0797369, 0.079638, 0.079597], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[5, 1, 6, 6, 6, 5, 0, 0, 19, 5, 0, 18, 1, 0, 1, 1, 1, 1]': ([0.080368, 0.079597, 0.0797071, 0.0796449, 0.0796781, 0.0798101, 0.079566, 0.0797079, 0.0796852, 0.0797868, 0.0797141, 0.079643, 0.079704, 0.079632, 0.079623, 0.079967, 0.079726, 0.0797641, 0.0796809, 0.0795581, 0.0796819, 0.079653, 0.079844, 0.0796452, 0.0795889, 0.0799, 0.079679, 0.0797369, 0.079638, 0.079597], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [4, 2, 2, 3, 18, 0, 29, 29, 0, 0, 1, 0]
Fixed Factors: {'ACOPY_x': 0, 'ACOPY_y': 0, 'T2_K': 5, 'T2_J': 6, 'VEC1': 1, 'SCR': 1}
Testing candidate 10: [4, 2, 2, 3, 6, 5, 0, 0, 18, 0, 29, 29, 0, 0, 1, 1, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		385
        Multiplications: 	140
        Divisions: 		0
        Logical: 		0
        Reads: 			906
        Writes: 		202
        Comparisons:		14
        Gotos: 			0
        
digraph CFG {
	27391184 [label="27391184  double scv_40;...",shape=box];
	ForLoop27380235 [label="ForLoop27380235  for (iii=0; iii<=nx-1; iii=iii+256) {...",shape=box];
	ForLoop27380235 -> ForLoop27380234;
	ForLoop27380235 -> _JOIN_27380235;
	27378102 [label="27378102  double x_copy;...",shape=box];
	27379305 [label="27379305  int k;...",shape=box];
	27379305 -> ForLoop27380159;
	ForLoop27380233 [label="ForLoop27380233  for (i=ii; i<=min(nx-1,ii+127); i=i+1) {...",shape=box];
	ForLoop27380233 -> 27391184;
	ForLoop27380233 -> _JOIN_27380233;
	_JOIN_27345571 [label="_JOIN_27345571None...",shape=box];
	_JOIN_27345571 -> 27378102;
	ForLoop27380230 [label="ForLoop27380230  for (kk=kkk; kk<=min(ny-1,kkk+992); kk=kk+32) {...",shape=box];
	ForLoop27380230 -> ForLoop27379304;
	ForLoop27380230 -> _JOIN_27380230;
	ForLoop27379028 [label="ForLoop27379028  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop27379028 -> ForLoop27379027;
	ForLoop27379028 -> _JOIN_27379028;
	ForLoop27380234 [label="ForLoop27380234  for (ii=iii; ii<=min(nx-1,iii+128); ii=ii+128) {...",shape=box];
	ForLoop27380234 -> ForLoop27380233;
	ForLoop27380234 -> _JOIN_27380234;
	ForLoop27379027 [label="ForLoop27379027  for (jj=jjj; jj<=min(ny-1,jjj+2016); jj=jj+32) {...",shape=box];
	ForLoop27379027 -> 27378190;
	ForLoop27379027 -> _JOIN_27379027;
	ForLoop27379025 [label="ForLoop27379025  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jj)+1)%30)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop27379025 -> 27379024;
	ForLoop27379025 -> _JOIN_27379025;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 27345011;
	27345011 [label="27345011  int i;...",shape=box];
	27378190 [label="27378190  int j;...",shape=box];
	27378190 -> ForLoop27378957;
	_JOIN_27378957 [label="_JOIN_27378957None...",shape=box];
	_JOIN_27378957 -> ForLoop27379025;
	_JOIN_27380234 [label="_JOIN_27380234None...",shape=box];
	_JOIN_27380234 -> _JOIN_27380235;
	ForLoop27345571 [label="ForLoop27345571  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop27345571 -> 27345570;
	ForLoop27345571 -> _JOIN_27345571;
	ForLoop27379304 [label="ForLoop27379304  for (kt=kk; kt<=min(ny-1,kk+31)-7; kt=kt+8) {...",shape=box];
	ForLoop27379304 -> 27383587;
	ForLoop27379304 -> _JOIN_27379304;
	27345783 [label="27345783  register int cbv_2, cbv_3;...",shape=box];
	27345338 [label="27345338  y[i]=0.0;...",shape=box];
	ForLoop27378957 [label="ForLoop27378957  for (j=jj; j<=min(ny-1,jj+31)-29; j=j+30) {...",shape=box];
	ForLoop27378957 -> 27378230;
	ForLoop27378957 -> _JOIN_27378957;
	_JOIN_27380227 [label="_JOIN_27380227None...",shape=box];
	_JOIN_27380227 -> _JOIN_27380230;
	_JOIN_27380231 [label="_JOIN_27380231None...",shape=box];
	_JOIN_27380231 -> 27391196;
	27385041 [label="27385041  double scv_9, scv_10, scv_11, scv_12, scv_13, scv_14, scv_15, scv_16;...",shape=box];
	_JOIN_27379028 [label="_JOIN_27379028None...",shape=box];
	_JOIN_27379028 -> ForLoop27380231;
	_JOIN_27380159 [label="_JOIN_27380159None...",shape=box];
	_JOIN_27380159 -> ForLoop27380227;
	ForLoop27380227 [label="ForLoop27380227  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kt)+1)%30)+1; k<=min(ny-1,kk+31); k=k+1) {...",shape=box];
	ForLoop27380227 -> 27385739;
	ForLoop27380227 -> _JOIN_27380227;
	27385739 [label="27385739  double scv_39;...",shape=box];
	_JOIN_27379304 [label="_JOIN_27379304None...",shape=box];
	_JOIN_27379304 -> 27379305;
	_JOIN_27379027 [label="_JOIN_27379027None...",shape=box];
	_JOIN_27379027 -> _JOIN_27379028;
	_JOIN_27379025 [label="_JOIN_27379025None...",shape=box];
	_JOIN_27379025 -> _JOIN_expected=9369846271501.798828
actual=9369846271501.798828
27379027;
	_JOIN_27345502 [label="_JOIN_27345502None...",shape=box];
	_JOIN_27345502 -> 27345783;
	ForLoop27345502 [label="ForLoop27345502  for (i=0; i<=cbv_1; i=i+19) {...",shape=box];
	ForLoop27345502 -> 27345338;
	ForLoop27345502 -> _JOIN_27345502;
	ForLoop27380231 [label="ForLoop27380231  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop27380231 -> ForLoop27380230;
	ForLoop27380231 -> _JOIN_27380231;
	_JOIN_27380235 [label="_JOIN_27380235None...",shape=box];
	27383587 [label="27383587  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	_JOIN_27380233 [label="_JOIN_27380233None...",shape=box];
	_JOIN_27380233 -> _JOIN_27380234;
	27379024 [label="27379024  scv_40=scv_40+A[i*ny+j]*x[j];...",shape=box];
	27379024 -> _JOIN_27379025;
	_JOIN_27380230 [label="_JOIN_27380230None...",shape=box];
	_JOIN_27380230 -> _JOIN_27380231;
	ForLoop27380159 [label="ForLoop27380159  for (k=kt; k<=min(ny-1,kk+31)-29; k=k+30) {...",shape=box];
	ForLoop27380159 -> 27385041;
	ForLoop27380159 -> _JOIN_27380159;
	27378230 [label="27378230  scv_40=scv_40+A[i*ny+j]*x[j];...",shape=box];
	27391196 [label="27391196  tmp[i]=scv_40;...",shape=box];
	27391196 -> _JOIN_27380233;
	27345570 [label="27345570  y[i]=0.0;...",shape=box];
	27345570 -> _JOIN_27345571;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest110.exe __orio_perftest110.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest110.exe  
{'[4, 2, 2, 3, 6, 5, 0, 0, 18, 0, 29, 29, 0, 0, 1, 1, 1, 0]' : 0.13131}
{'[4, 2, 2, 3, 6, 5, 0, 0, 18, 0, 29, 29, 0, 0, 1, 1, 1, 0]' : 0.13089}
{'[4, 2, 2, 3, 6, 5, 0, 0, 18, 0, 29, 29, 0, 0, 1, 1, 1, 0]' : 0.130912}
{'[4, 2, 2, 3, 6, 5, 0, 0, 18, 0, 29, 29, 0, 0, 1, 1, 1, 0]' : 0.130903}
{'[4, 2, 2, 3, 6, 5, 0, 0, 18, 0, 29, 29, 0, 0, 1, 1, 1, 0]' : 0.130894}
{'[4, 2, 2, 3, 6, 5, 0, 0, 18, 0, 29, 29, 0, 0, 1, 1, 1, 0]' : 0.130841}
{'[4, 2, 2, 3, 6, 5, 0, 0, 18, 0, 29, 29, 0, 0, 1, 1, 1, 0]' : 0.130904}
{'[4, 2, 2, 3, 6, 5, 0, 0, 18, 0, 29, 29, 0, 0, 1, 1, 1, 0]' : 0.130917}
{'[4, 2, 2, 3, 6, 5, 0, 0, 18, 0, 29, 29, 0, 0, 1, 1, 1, 0]' : 0.130867}
{'[4, 2, 2, 3, 6, 5, 0, 0, 18, 0, 29, 29, 0, 0, 1, 1, 1, 0]' : 0.131916}
{'[4, 2, 2, 3, 6, 5, 0, 0, 18, 0, 29, 29, 0, 0, 1, 1, 1, 0]' : 0.130847}
{'[4, 2, 2, 3, 6, 5, 0, 0, 18, 0, 29, 29, 0, 0, 1, 1, 1, 0]' : 0.130957}
{'[4, 2, 2, 3, 6, 5, 0, 0, 18, 0, 29, 29, 0, 0, 1, 1, 1, 0]' : 0.13112}
{'[4, 2, 2, 3, 6, 5, 0, 0, 18, 0, 29, 29, 0, 0, 1, 1, 1, 0]' : 0.130859}
{'[4, 2, 2, 3, 6, 5, 0, 0, 18, 0, 29, 29, 0, 0, 1, 1, 1, 0]' : 0.130909}
{'[4, 2, 2, 3, 6, 5, 0, 0, 18, 0, 29, 29, 0, 0, 1, 1, 1, 0]' : 0.130857}
{'[4, 2, 2, 3, 6, 5, 0, 0, 18, 0, 29, 29, 0, 0, 1, 1, 1, 0]' : 0.130911}
{'[4, 2, 2, 3, 6, 5, 0, 0, 18, 0, 29, 29, 0, 0, 1, 1, 1, 0]' : 0.130948}
{'[4, 2, 2, 3, 6, 5, 0, 0, 18, 0, 29, 29, 0, 0, 1, 1, 1, 0]' : 0.130943}
{'[4, 2, 2, 3, 6, 5, 0, 0, 18, 0, 29, 29, 0, 0, 1, 1, 1, 0]' : 0.130838}
{'[4, 2, 2, 3, 6, 5, 0, 0, 18, 0, 29, 29, 0, 0, 1, 1, 1, 0]' : 0.130841}
{'[4, 2, 2, 3, 6, 5, 0, 0, 18, 0, 29, 29, 0, 0, 1, 1, 1, 0]' : 0.130811}
{'[4, 2, 2, 3, 6, 5, 0, 0, 18, 0, 29, 29, 0, 0, 1, 1, 1, 0]' : 0.130903}
{'[4, 2, 2, 3, 6, 5, 0, 0, 18, 0, 29, 29, 0, 0, 1, 1, 1, 0]' : 0.131116}
{'[4, 2, 2, 3, 6, 5, 0, 0, 18, 0, 29, 29, 0, 0, 1, 1, 1, 0]' : 0.130854}
{'[4, 2, 2, 3, 6, 5, 0, 0, 18, 0, 29, 29, 0, 0, 1, 1, 1, 0]' : 0.131848}
{'[4, 2, 2, 3, 6, 5, 0, 0, 18, 0, 29, 29, 0, 0, 1, 1, 1, 0]' : 0.13095}
{'[4, 2, 2, 3, 6, 5, 0, 0, 18, 0, 29, 29, 0, 0, 1, 1, 1, 0]' : 0.130863}
{'[4, 2, 2, 3, 6, 5, 0, 0, 18, 0, 29, 29, 0, 0, 1, 1, 1, 0]' : 0.130872}
{'[4, 2, 2, 3, 6, 5, 0, 0, 18, 0, 29, 29, 0, 0, 1, 1, 1, 0]' : 0.130918}

out:
 ["{'[4, 2, 2, 3, 6, 5, 0, 0, 18, 0, 29, 29, 0, 0, 1, 1, 1, 0]' : 0.13131}", "{'[4, 2, 2, 3, 6, 5, 0, 0, 18, 0, 29, 29, 0, 0, 1, 1, 1, 0]' : 0.13089}", "{'[4, 2, 2, 3, 6, 5, 0, 0, 18, 0, 29, 29, 0, 0, 1, 1, 1, 0]' : 0.130912}", "{'[4, 2, 2, 3, 6, 5, 0, 0, 18, 0, 29, 29, 0, 0, 1, 1, 1, 0]' : 0.130903}", "{'[4, 2, 2, 3, 6, 5, 0, 0, 18, 0, 29, 29, 0, 0, 1, 1, 1, 0]' : 0.130894}", "{'[4, 2, 2, 3, 6, 5, 0, 0, 18, 0, 29, 29, 0, 0, 1, 1, 1, 0]' : 0.130841}", "{'[4, 2, 2, 3, 6, 5, 0, 0, 18, 0, 29, 29, 0, 0, 1, 1, 1, 0]' : 0.130904}", "{'[4, 2, 2, 3, 6, 5, 0, 0, 18, 0, 29, 29, 0, 0, 1, 1, 1, 0]' : 0.130917}", "{'[4, 2, 2, 3, 6, 5, 0, 0, 18, 0, 29, 29, 0, 0, 1, 1, 1, 0]' : 0.130867}", "{'[4, 2, 2, 3, 6, 5, 0, 0, 18, 0, 29, 29, 0, 0, 1, 1, 1, 0]' : 0.131916}", "{'[4, 2, 2, 3, 6, 5, 0, 0, 18, 0, 29, 29, 0, 0, 1, 1, 1, 0]' : 0.130847}", "{'[4, 2, 2, 3, 6, 5, 0, 0, 18, 0, 29, 29, 0, 0, 1, 1, 1, 0]' : 0.130957}", "{'[4, 2, 2, 3, 6, 5, 0, 0, 18, 0, 29, 29, 0, 0, 1, 1, 1, 0]' : 0.13112}", "{'[4, 2, 2, 3, 6, 5, 0, 0, 18, 0, 29, 29, 0, 0, 1, 1, 1, 0]' : 0.130859}", "{'[4, 2, 2, 3, 6, 5, 0, 0, 18, 0, 29, 29, 0, 0, 1, 1, 1, 0]' : 0.130909}", "{'[4, 2, 2, 3, 6, 5, 0, 0, 18, 0, 29, 29, 0, 0, 1, 1, 1, 0]' : 0.130857}", "{'[4, 2, 2, 3, 6, 5, 0, 0, 18, 0, 29, 29, 0, 0, 1, 1, 1, 0]' : 0.130911}", "{'[4, 2, 2, 3, 6, 5, 0, 0, 18, 0, 29, 29, 0, 0, 1, 1, 1, 0]' : 0.130948}", "{'[4, 2, 2, 3, 6, 5, 0, 0, 18, 0, 29, 29, 0, 0, 1, 1, 1, 0]' : 0.130943}", "{'[4, 2, 2, 3, 6, 5, 0, 0, 18, 0, 29, 29, 0, 0, 1, 1, 1, 0]' : 0.130838}", "{'[4, 2, 2, 3, 6, 5, 0, 0, 18, 0, 29, 29, 0, 0, 1, 1, 1, 0]' : 0.130841}", "{'[4, 2, 2, 3, 6, 5, 0, 0, 18, 0, 29, 29, 0, 0, 1, 1, 1, 0]' : 0.130811}", "{'[4, 2, 2, 3, 6, 5, 0, 0, 18, 0, 29, 29, 0, 0, 1, 1, 1, 0]' : 0.130903}", "{'[4, 2, 2, 3, 6, 5, 0, 0, 18, 0, 29, 29, 0, 0, 1, 1, 1, 0]' : 0.131116}", "{'[4, 2, 2, 3, 6, 5, 0, 0, 18, 0, 29, 29, 0, 0, 1, 1, 1, 0]' : 0.130854}", "{'[4, 2, 2, 3, 6, 5, 0, 0, 18, 0, 29, 29, 0, 0, 1, 1, 1, 0]' : 0.131848}", "{'[4, 2, 2, 3, 6, 5, 0, 0, 18, 0, 29, 29, 0, 0, 1, 1, 1, 0]' : 0.13095}", "{'[4, 2, 2, 3, 6, 5, 0, 0, 18, 0, 29, 29, 0, 0, 1, 1, 1, 0]' : 0.130863}", "{'[4, 2, 2, 3, 6, 5, 0, 0, 18, 0, 29, 29, 0, 0, 1, 1, 1, 0]' : 0.130872}", "{'[4, 2, 2, 3, 6, 5, 0, 0, 18, 0, 29, 29, 0, 0, 1, 1, 1, 0]' : 0.130918}"]
returning from 'run': {'[4, 2, 2, 3, 6, 5, 0, 0, 18, 0, 29, 29, 0, 0, 1, 1, 1, 0]': ([0.13131, 0.13089, 0.130912, 0.130903, 0.130894, 0.130841, 0.130904, 0.130917, 0.130867, 0.131916, 0.130847, 0.130957, 0.13112, 0.130859, 0.130909, 0.130857, 0.130911, 0.130948, 0.130943, 0.130838, 0.130841, 0.130811, 0.130903, 0.131116, 0.130854, 0.131848, 0.13095, 0.130863, 0.130872, 0.130918], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.13131, 0.13089, 0.130912, 0.130903, 0.130894, 0.130841, 0.130904, 0.130917, 0.130867, 0.131916, 0.130847, 0.130957, 0.13112, 0.130859, 0.130909, 0.130857, 0.130911, 0.130948, 0.130943, 0.130838, 0.130841, 0.130811, 0.130903, 0.131116, 0.130854, 0.131848, 0.13095, 0.130863, 0.130872, 0.130918], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[4, 2, 2, 3, 6, 5, 0, 0, 18, 0, 29, 29, 0, 0, 1, 1, 1, 0]': ([0.13131, 0.13089, 0.130912, 0.130903, 0.130894, 0.130841, 0.130904, 0.130917, 0.130867, 0.131916, 0.130847, 0.130957, 0.13112, 0.130859, 0.130909, 0.130857, 0.130911, 0.130948, 0.130943, 0.130838, 0.130841, 0.130811, 0.130903, 0.131116, 0.130854, 0.131848, 0.13095, 0.130863, 0.130872, 0.130918], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [2, 2, 6, 4, 29, 0, 8, 17, 0, 0, 0, 0]
Fixed Factors: {'ACOPY_x': 0, 'ACOPY_y': 0, 'T2_K': 5, 'T2_J': 6, 'VEC1': 1, 'SCR': 1}
Testing candidate 11: [2, 2, 6, 4, 6, 5, 0, 0, 29, 0, 8, 17, 0, 0, 0, 1, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	6
        Additions: 		211
        Multiplications: 	58
        Divisions: 		0
        Logical: 		0
        Reads: 			493
        Writes: 		130
        Comparisons:		13
        Gotos: 			0
        
digraph CFG {
	27396007 [label="27396007  int i;...",shape=box];
	_JOIN_27417615 [label="_JOIN_27417615None...",shape=box];
	_JOIN_27417615 -> ForLoop27417683;
	27422701 [label="27422701  double scv_20;...",shape=box];
	27396499 [label="27396499  y[i]=0.0;...",shape=box];
	ForLoop27396831 [label="ForLoop27396831  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop27396831 -> 27396830;
	ForLoop27396831 -> _JOIN_27396831;
	27417061 [label="27417061  scv_20=scv_20+A[i*ny+j]*x[j];...",shape=box];
	27417061 -> _JOIN_27417062;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 27396007;
	ForLoop27417062 [label="ForLoop27417062  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jj)+1)%9)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop27417062 -> 27417061;
	ForLoop27417062 -> _JOIN_27417062;
	ForLoop27417690 [label="ForLoop27417690  for (iii=0; iii<=nx-1; iii=iii+512) {...",shape=box];
	ForLoop27417690 -> ForLoop27417689;
	ForLoop27417690 -> _JOIN_27417690;
	ForLoop27417065 [label="ForLoop27417065  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop27417065 -> ForLoop27417064;
	ForLoop27417065 -> _JOIN_27417065;
	ForLoop27417064 [label="ForLoop27417064  for (jj=jjj; jj<=min(ny-1,jjj+2016); jj=jj+32) {...",shape=box];
	ForLoop27417064 -> 27416752;
	ForLoop27417064 -> _JOIN_27417064;
	27420013 [label="27420013  double scv_19;...",shape=box];
	27416752 [label="27416752  int j;...",shape=box];
	27416752 -> ForLoop27416994;
	_JOIN_27417686 [label="_JOIN_27417686None...",shape=box];
	_JOIN_27417686 -> 27422713;
	_JOIN_27417685 [label="_JOIN_27417685None...",shape=box];
	_JOIN_27417685 -> _JOIN_27417686;
	ForLoop27417615 [label="ForLoop27417615  for (k=kk; k<=min(ny-1,kk+511)-17; k=k+18) {...",shape=box];
	ForLoop27417615 -> 27419568;
	ForLoop27417615 -> _JOIN_27417615;
	_JOIN_27417689 [label="_JOIN_27417689None...",shape=box];
	_JOIN_27417689 -> _JOIN_27417690;
	_JOIN_27417688 [label="_JOIN_27417688None...",shape=box];
	_JOIN_27417688 -> _JOIN_27417689;
	27417097 [label="27417097  int k;...",shape=box];
	27417097 -> ForLoop27417615;
	_JOIN_27396762 [label="_JOIN_27396762None...",shape=box];
	_JOIN_27396762 -> 27397142;
	ForLoop27396762 [label="ForLoop27396762  for (i=0; i<=cbv_1; i=i+30) {...",shape=box];
	ForLoop27396762 -> 27396499;
	ForLoop27396762 -> _JOIN_27396762;
	_JOIN_27417062 [label="_JOIN_27417062None...",shape=box];
	_JOIN_27417062 -> _JOIN_27417064;
	_JOIN_27396831 [label="_JOIN_27396831None...",shape=box];
	_JOIN_27396831 -> 27416664;
	_JOIN_27417683 [label="_JOIN_27417683None...",shape=box];
	_JOIN_27417683 -> _JOIN_27417685;
	_JOIN_27417065 [label="_JOIN_27417065None...",shape=box];
	_JOIN_27417065 -> ForLoop27417686;
	_JOIN_27417064 [label="_JOIN_27417064None...",shape=box];
	_JOIN_27417064 -> _JOIN_27417065;
	27396830 [label="27396830  y[i]=0.0;...",shape=box];
	27396830 -> _JOIN_27396831;
	27422713 [label="27422713  tmp[i]=scv_20;...",shape=box];
	27422713 -> _JOIN_27417688;
	27419568 [label="27419568  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	ForLoop27417683 [label="ForLoop27417683  for (k=(min(ny-1,kk+511))-(((min(ny-1,kk+511))-(kk)+1)%18)+1; k<=min(ny-1,kk+511); k=k+1) {...",shape=box];
	ForLoop27417683 -> 27420013;
	ForLoop27417683 -> _JOIN_27417683;
	27416792 [label="27416792  scv_20=scv_20+A[i*ny+j]*x[j];...",shape=box];
	ForLoop27416994 [label="ForLoop27416994  for (j=jj; j<=min(ny-1,jj+31)-8; j=j+9) {...",shape=box];
	ForLoop27416994 -> 27416792;
	ForLoop27416994 -> _JOIN_27416994;
	ForLoop27417686 [label="ForLoop27417686  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop27417686 -> ForLoop27417685;
	ForLoop27417686 -> _JOIN_27417686;
	ForLoop27417685 [label="ForLoop27417685  for (kk=kkk; kk<=min(ny-1,kkk+512); kk=kk+512) {...",shape=box];
	ForLoop27417685 -> 27417097;
	ForLoop27417685 -> _JOIN_27417685;
	_JOIN_27416994 [label="_JOIN_27416994None...",shape=box];
	_JOIN_27416994 -> ForLoop27417062;
	ForLoop27417689 [label="ForLoop27417689  for (ii=iii; ii<=min(nx-1,iii+480); ii=ii+32) {...",shape=box];
	ForLoop27417689 -> ForLoop27417688;
	ForLoop27417689 -> _JOIN_27417689;
	ForLoop27417688 [label="ForLoop27417688  for (i=ii; i<=min(nx-1,ii+31); i=i+1) {...",shape=box];
	ForLoop27417688 -> 27422701;
	ForLoop2expected=9369846271501.798828
actual=9369846271501.798828
7417688 -> _JOIN_27417688;
	_JOIN_27417690 [label="_JOIN_27417690None...",shape=box];
	27416664 [label="27416664  double x_copy;...",shape=box];
	27397142 [label="27397142  register int cbv_2, cbv_3;...",shape=box];

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest111.exe __orio_perftest111.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest111.exe  
{'[2, 2, 6, 4, 6, 5, 0, 0, 29, 0, 8, 17, 0, 0, 0, 1, 1, 0]' : 0.124014}
{'[2, 2, 6, 4, 6, 5, 0, 0, 29, 0, 8, 17, 0, 0, 0, 1, 1, 0]' : 0.123957}
{'[2, 2, 6, 4, 6, 5, 0, 0, 29, 0, 8, 17, 0, 0, 0, 1, 1, 0]' : 0.123914}
{'[2, 2, 6, 4, 6, 5, 0, 0, 29, 0, 8, 17, 0, 0, 0, 1, 1, 0]' : 0.123955}
{'[2, 2, 6, 4, 6, 5, 0, 0, 29, 0, 8, 17, 0, 0, 0, 1, 1, 0]' : 0.123966}
{'[2, 2, 6, 4, 6, 5, 0, 0, 29, 0, 8, 17, 0, 0, 0, 1, 1, 0]' : 0.124342}
{'[2, 2, 6, 4, 6, 5, 0, 0, 29, 0, 8, 17, 0, 0, 0, 1, 1, 0]' : 0.123913}
{'[2, 2, 6, 4, 6, 5, 0, 0, 29, 0, 8, 17, 0, 0, 0, 1, 1, 0]' : 0.123968}
{'[2, 2, 6, 4, 6, 5, 0, 0, 29, 0, 8, 17, 0, 0, 0, 1, 1, 0]' : 0.123944}
{'[2, 2, 6, 4, 6, 5, 0, 0, 29, 0, 8, 17, 0, 0, 0, 1, 1, 0]' : 0.123905}
{'[2, 2, 6, 4, 6, 5, 0, 0, 29, 0, 8, 17, 0, 0, 0, 1, 1, 0]' : 0.124047}
{'[2, 2, 6, 4, 6, 5, 0, 0, 29, 0, 8, 17, 0, 0, 0, 1, 1, 0]' : 0.123918}
{'[2, 2, 6, 4, 6, 5, 0, 0, 29, 0, 8, 17, 0, 0, 0, 1, 1, 0]' : 0.123945}
{'[2, 2, 6, 4, 6, 5, 0, 0, 29, 0, 8, 17, 0, 0, 0, 1, 1, 0]' : 0.123927}
{'[2, 2, 6, 4, 6, 5, 0, 0, 29, 0, 8, 17, 0, 0, 0, 1, 1, 0]' : 0.124947}
{'[2, 2, 6, 4, 6, 5, 0, 0, 29, 0, 8, 17, 0, 0, 0, 1, 1, 0]' : 0.123914}
{'[2, 2, 6, 4, 6, 5, 0, 0, 29, 0, 8, 17, 0, 0, 0, 1, 1, 0]' : 0.124039}
{'[2, 2, 6, 4, 6, 5, 0, 0, 29, 0, 8, 17, 0, 0, 0, 1, 1, 0]' : 0.12418}
{'[2, 2, 6, 4, 6, 5, 0, 0, 29, 0, 8, 17, 0, 0, 0, 1, 1, 0]' : 0.123975}
{'[2, 2, 6, 4, 6, 5, 0, 0, 29, 0, 8, 17, 0, 0, 0, 1, 1, 0]' : 0.123908}
{'[2, 2, 6, 4, 6, 5, 0, 0, 29, 0, 8, 17, 0, 0, 0, 1, 1, 0]' : 0.123939}
{'[2, 2, 6, 4, 6, 5, 0, 0, 29, 0, 8, 17, 0, 0, 0, 1, 1, 0]' : 0.12389}
{'[2, 2, 6, 4, 6, 5, 0, 0, 29, 0, 8, 17, 0, 0, 0, 1, 1, 0]' : 0.124013}
{'[2, 2, 6, 4, 6, 5, 0, 0, 29, 0, 8, 17, 0, 0, 0, 1, 1, 0]' : 0.123915}
{'[2, 2, 6, 4, 6, 5, 0, 0, 29, 0, 8, 17, 0, 0, 0, 1, 1, 0]' : 0.123969}
{'[2, 2, 6, 4, 6, 5, 0, 0, 29, 0, 8, 17, 0, 0, 0, 1, 1, 0]' : 0.123928}
{'[2, 2, 6, 4, 6, 5, 0, 0, 29, 0, 8, 17, 0, 0, 0, 1, 1, 0]' : 0.12392}
{'[2, 2, 6, 4, 6, 5, 0, 0, 29, 0, 8, 17, 0, 0, 0, 1, 1, 0]' : 0.123945}
{'[2, 2, 6, 4, 6, 5, 0, 0, 29, 0, 8, 17, 0, 0, 0, 1, 1, 0]' : 0.12392}
{'[2, 2, 6, 4, 6, 5, 0, 0, 29, 0, 8, 17, 0, 0, 0, 1, 1, 0]' : 0.124309}

out:
 ["{'[2, 2, 6, 4, 6, 5, 0, 0, 29, 0, 8, 17, 0, 0, 0, 1, 1, 0]' : 0.124014}", "{'[2, 2, 6, 4, 6, 5, 0, 0, 29, 0, 8, 17, 0, 0, 0, 1, 1, 0]' : 0.123957}", "{'[2, 2, 6, 4, 6, 5, 0, 0, 29, 0, 8, 17, 0, 0, 0, 1, 1, 0]' : 0.123914}", "{'[2, 2, 6, 4, 6, 5, 0, 0, 29, 0, 8, 17, 0, 0, 0, 1, 1, 0]' : 0.123955}", "{'[2, 2, 6, 4, 6, 5, 0, 0, 29, 0, 8, 17, 0, 0, 0, 1, 1, 0]' : 0.123966}", "{'[2, 2, 6, 4, 6, 5, 0, 0, 29, 0, 8, 17, 0, 0, 0, 1, 1, 0]' : 0.124342}", "{'[2, 2, 6, 4, 6, 5, 0, 0, 29, 0, 8, 17, 0, 0, 0, 1, 1, 0]' : 0.123913}", "{'[2, 2, 6, 4, 6, 5, 0, 0, 29, 0, 8, 17, 0, 0, 0, 1, 1, 0]' : 0.123968}", "{'[2, 2, 6, 4, 6, 5, 0, 0, 29, 0, 8, 17, 0, 0, 0, 1, 1, 0]' : 0.123944}", "{'[2, 2, 6, 4, 6, 5, 0, 0, 29, 0, 8, 17, 0, 0, 0, 1, 1, 0]' : 0.123905}", "{'[2, 2, 6, 4, 6, 5, 0, 0, 29, 0, 8, 17, 0, 0, 0, 1, 1, 0]' : 0.124047}", "{'[2, 2, 6, 4, 6, 5, 0, 0, 29, 0, 8, 17, 0, 0, 0, 1, 1, 0]' : 0.123918}", "{'[2, 2, 6, 4, 6, 5, 0, 0, 29, 0, 8, 17, 0, 0, 0, 1, 1, 0]' : 0.123945}", "{'[2, 2, 6, 4, 6, 5, 0, 0, 29, 0, 8, 17, 0, 0, 0, 1, 1, 0]' : 0.123927}", "{'[2, 2, 6, 4, 6, 5, 0, 0, 29, 0, 8, 17, 0, 0, 0, 1, 1, 0]' : 0.124947}", "{'[2, 2, 6, 4, 6, 5, 0, 0, 29, 0, 8, 17, 0, 0, 0, 1, 1, 0]' : 0.123914}", "{'[2, 2, 6, 4, 6, 5, 0, 0, 29, 0, 8, 17, 0, 0, 0, 1, 1, 0]' : 0.124039}", "{'[2, 2, 6, 4, 6, 5, 0, 0, 29, 0, 8, 17, 0, 0, 0, 1, 1, 0]' : 0.12418}", "{'[2, 2, 6, 4, 6, 5, 0, 0, 29, 0, 8, 17, 0, 0, 0, 1, 1, 0]' : 0.123975}", "{'[2, 2, 6, 4, 6, 5, 0, 0, 29, 0, 8, 17, 0, 0, 0, 1, 1, 0]' : 0.123908}", "{'[2, 2, 6, 4, 6, 5, 0, 0, 29, 0, 8, 17, 0, 0, 0, 1, 1, 0]' : 0.123939}", "{'[2, 2, 6, 4, 6, 5, 0, 0, 29, 0, 8, 17, 0, 0, 0, 1, 1, 0]' : 0.12389}", "{'[2, 2, 6, 4, 6, 5, 0, 0, 29, 0, 8, 17, 0, 0, 0, 1, 1, 0]' : 0.124013}", "{'[2, 2, 6, 4, 6, 5, 0, 0, 29, 0, 8, 17, 0, 0, 0, 1, 1, 0]' : 0.123915}", "{'[2, 2, 6, 4, 6, 5, 0, 0, 29, 0, 8, 17, 0, 0, 0, 1, 1, 0]' : 0.123969}", "{'[2, 2, 6, 4, 6, 5, 0, 0, 29, 0, 8, 17, 0, 0, 0, 1, 1, 0]' : 0.123928}", "{'[2, 2, 6, 4, 6, 5, 0, 0, 29, 0, 8, 17, 0, 0, 0, 1, 1, 0]' : 0.12392}", "{'[2, 2, 6, 4, 6, 5, 0, 0, 29, 0, 8, 17, 0, 0, 0, 1, 1, 0]' : 0.123945}", "{'[2, 2, 6, 4, 6, 5, 0, 0, 29, 0, 8, 17, 0, 0, 0, 1, 1, 0]' : 0.12392}", "{'[2, 2, 6, 4, 6, 5, 0, 0, 29, 0, 8, 17, 0, 0, 0, 1, 1, 0]' : 0.124309}"]
returning from 'run': {'[2, 2, 6, 4, 6, 5, 0, 0, 29, 0, 8, 17, 0, 0, 0, 1, 1, 0]': ([0.124014, 0.123957, 0.123914, 0.123955, 0.123966, 0.124342, 0.123913, 0.123968, 0.123944, 0.123905, 0.124047, 0.123918, 0.123945, 0.123927, 0.124947, 0.123914, 0.124039, 0.12418, 0.123975, 0.123908, 0.123939, 0.12389, 0.124013, 0.123915, 0.123969, 0.123928, 0.12392, 0.123945, 0.12392, 0.124309], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.124014, 0.123957, 0.123914, 0.123955, 0.123966, 0.124342, 0.123913, 0.123968, 0.123944, 0.123905, 0.124047, 0.123918, 0.123945, 0.123927, 0.124947, 0.123914, 0.124039, 0.12418, 0.123975, 0.123908, 0.123939, 0.12389, 0.124013, 0.123915, 0.123969, 0.123928, 0.12392, 0.123945, 0.12392, 0.124309], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[2, 2, 6, 4, 6, 5, 0, 0, 29, 0, 8, 17, 0, 0, 0, 1, 1, 0]': ([0.124014, 0.123957, 0.123914, 0.123955, 0.123966, 0.124342, 0.123913, 0.123968, 0.123944, 0.123905, 0.124047, 0.123918, 0.123945, 0.123927, 0.124947, 0.123914, 0.124039, 0.12418, 0.123975, 0.123908, 0.123939, 0.12389, 0.124013, 0.123915, 0.123969, 0.123928, 0.12392, 0.123945, 0.12392, 0.124309], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [6, 5, 1, 0, 3, 0, 15, 19, 1, 1, 0, 1]
Fixed Factors: {'ACOPY_x': 0, 'ACOPY_y': 0, 'T2_K': 5, 'T2_J': 6, 'VEC1': 1, 'SCR': 1}
Testing candidate 12: [6, 5, 1, 0, 6, 5, 0, 0, 3, 0, 15, 19, 1, 1, 0, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	23
        Max loop nest depth: 	5
        Additions: 		1764
        Multiplications: 	828
        Divisions: 		0
        Logical: 		0
        Reads: 			3515
        Writes: 		611
        Comparisons:		23
        Gotos: 			0
        
digraph CFG {
	ForLoop27570799 [label="ForLoop27570799  for (jt=jj; jt<=cbv_1; jt=jt+8) {...",shape=box];
	ForLoop27570799 -> 27585292;
	ForLoop27570799 -> _JOIN_27570799;
	27652276 [label="27652276  register int cbv_3, cbv_4;...",shape=box];
	_JOIN_27580576 [label="_JOIN_27580576None...",shape=box];
	_JOIN_27580576 -> 27655869;
	_JOIN_27575265 [label="_JOIN_27575265None...",shape=box];
	_JOIN_27575265 -> _JOIN_27575266;
	_JOIN_27575262 [label="_JOIN_27575262None...",shape=box];
	_JOIN_27575262 -> _JOIN_27575265;
	27657373 [label="27657373  register int cbv_13, cbv_14;...",shape=box];
	27635015 [label="27635015  double scv_55, scv_56, scv_57, scv_58, scv_59, scv_60, scv_61, scv_62;...",shape=box];
	ForLoop27575266 [label="ForLoop27575266  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop27575266 -> ForLoop27575265;
	ForLoop27575266 -> _JOIN_27575266;
	_JOIN_27581601 [label="_JOIN_27581601None...",shape=box];
	_JOIN_27581601 -> ForLoop27582278;
	27630919 [label="27630919  double scv_47, scv_48, scv_49, scv_50, scv_51, scv_52, scv_53, scv_54;...",shape=box];
	ForLoop27575262 [label="ForLoop27575262  for (j=cbv_3; j<=cbv_4; j=j+1) {...",shape=box];
	ForLoop27575262 -> 27591812;
	ForLoop27575262 -> _JOIN_27575262;
	ForLoop27580832 [label="ForLoop27580832  for (it=ii; it<=min(nx-1,ii+511)-7; it=it+8) {...",shape=box];
	ForLoop27580832 -> 27630919;
	ForLoop27580832 -> _JOIN_27580832;
	ForLoop27581601 [label="ForLoop27581601  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop27581601 -> ForLoop27581600;
	ForLoop27581601 -> _JOIN_27581601;
	ForLoop27580830 [label="ForLoop27580830  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop27580830 -> ForLoop27580829;
	ForLoop27580830 -> _JOIN_27580830;
	ForLoop27582275 [label="ForLoop27582275  for (k=cbv_13; k<=cbv_14; k=k+1) {...",shape=box];
	ForLoop27582275 -> 27635502;
	ForLoop27582275 -> _JOIN_27582275;
	_JOIN_27574990 [label="_JOIN_27574990None...",shape=box];
	_JOIN_27574990 -> 27652276;
	27580927 [label="27580927  scv_76=scv_76+A[i*ny+jt]*x[jt];...",shape=box];
	_JOIN_27582207 [label="_JOIN_27582207None...",shape=box];
	_JOIN_27582207 -> 27657373;
	27656545 [label="27656545  register int cbv_10, cbv_11;...",shape=box];
	27630931 [label="27630931  tmp[it]=scv_47;...",shape=box];
	27638818 [label="27638818  tmp[i]=scv_76;...",shape=box];
	27638818 -> _JOIN_27582280;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 27425168;
	ForLoop27425299 [label="ForLoop27425299  for (i=0; i<=cbv_1; i=i+4) {...",shape=box];
	ForLoop27425299 -> 27425270;
	ForLoop27425299 -> _JOIN_27425299;
	27638806 [label="27638806  double scv_76;...",shape=box];
	27581112 [label="27581112  int j;...",shape=box];
	ForLoop27582278 [label="ForLoop27582278  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop27582278 -> ForLoop27582277;
	ForLoop27582278 -> _JOIN_27582278;
	27581152 [label="27581152  scv_76=scv_76+A[i*ny+j]*x[j];...",shape=box];
	27425270 [label="27425270  y[i]=0.0;...",shape=box];
	ForLoop27582282 [label="ForLoop27582282  for (ii=0; ii<=nx-1; ii=ii+512) {...",shape=box];
	ForLoop27582282 -> ForLoop27580832;
	ForLoop27582282 -> _JOIN_27582282;
	27610894 [label="27610894  double scv_26, scv_27, scv_28, scv_29, scv_30, scv_31, scv_32, scv_33;...",shape=box];
	ForLoop27582280 [label="ForLoop27582280  for (i=it; i<=min(nx-1,ii+511); i=i+1) {...",shape=box];
	ForLoop27582280 -> 27638806;
	ForLoop27582280 -> _JOIN_27582280;
	_JOIN_27580830 [label="_JOIN_27580830None...",shape=box];
	_JOIN_27580830 -> 27630931;
	27591812 [label="27591812  double scv_25;...",shape=box];
	27649532 [label="27649532  register int cbv_1;...",shape=box];
	27591181 [label="27591181  double scv_9, scv_10, scv_11, scv_12, scv_13, scv_14, scv_15, scv_16;...",shape=box];
	_JOIN_27582278 [label="_JOIN_27582278None...",shape=box];
	_JOIN_27582278 -> 27638818;
	27656105 [label="27656105  register int cbv_8;...",shape=box];
	_JOIN_27581111 [label="_JOIN_27581111None...",shape=box];
	_JOIN_27581111 -> 27581112;
	ForLoop27582207 [label="ForLoop27582207  for (k=kk; k<=cbv_12; k=k+20) {...",shape=box];
	ForLoop27582207 -> 27635015;
	ForLoop27582207 -> _JOIN_27582207;
	27425367 [label="27425367  y[i]=0.0;...",shape=box];
	27425367 -> _JOIN_27425368;
	ForLoop27575265 [label="ForLoop27575265  for (jj=jjj; jj<=min(ny-1,jjj+1792); jj=jj+256) {...",shape=box];
	ForLoop27575265 -> 27649532;
	ForLoop27575265 -> _JOIN_27575265;
	ForLoop27580829 [label="ForLoop27580829  for (kk=kkk; kk<=min(ny-1,kkk+1008); kk=kk+16) {...",shape=box];
	ForLoop27580829 -> 27575298;
	ForLoop27580829 -> _JOIN_27580829;
	_JOIN_27581529 [label="_JOIN_27581529None...",shape=box];
	_JOIN_27581529 -> 27656545;
	ForLoop27581597 [label="ForLoop27581597  for (j=cbv_10; j<=cbv_11; j=j+1) {...",shape=box];
	ForLoop27581597 -> 27581596;
	ForLoop27581597 -> _JOIN_27581597;
	27585292 [label="27585292  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	ForLoop27580827 [label="ForLoop27580827  for (k=cbv_6; k<=cbv_7; k=k+1) {...",shape=box];
	ForLoop27580827 -> 27611914;
	ForLoop27580827 -> _JOIN_27580827;
	_JOIN_27570799 [label="_JOIN_27570799None...",shape=box];
	_JOIN_27570799 -> 27570800;
	ForLoop27425368 [label="ForLoop27425368  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop27425368 -> 27425367;
	ForLoop27425368 -> _JOIN_27425368;
	ForLoop27574990 [label="ForLoop27574990  for (expected=9369846271501.798828
actual=9369846271501.798828
j=jt; j<=cbv_2; j=j+16) {...",shape=box];
	ForLoop27574990 -> 27591181;
	ForLoop27574990 -> _JOIN_27574990;
	_JOIN_27582282 [label="_JOIN_27582282None...",shape=box];
	_JOIN_27582280 [label="_JOIN_27582280None...",shape=box];
	_JOIN_27582280 -> _JOIN_27582282;
	27611914 [label="27611914  double scv_46;...",shape=box];
	_JOIN_27425299 [label="_JOIN_27425299None...",shape=box];
	_JOIN_27425299 -> 27425445;
	27425445 [label="27425445  register int cbv_2, cbv_3;...",shape=box];
	ForLoop27582277 [label="ForLoop27582277  for (kk=kkk; kk<=min(ny-1,kkk+1008); kk=kk+16) {...",shape=box];
	ForLoop27582277 -> 27581633;
	ForLoop27582277 -> _JOIN_27582277;
	ForLoop27581600 [label="ForLoop27581600  for (jj=jjj; jj<=min(ny-1,jjj+1792); jj=jj+256) {...",shape=box];
	ForLoop27581600 -> 27656105;
	ForLoop27581600 -> _JOIN_27581600;
	27635502 [label="27635502  double scv_75;...",shape=box];
	ForLoop27580576 [label="ForLoop27580576  for (k=kk; k<=cbv_5; k=k+20) {...",shape=box];
	ForLoop27580576 -> 27610894;
	ForLoop27580576 -> _JOIN_27580576;
	_JOIN_27580832 [label="_JOIN_27580832None...",shape=box];
	_JOIN_27580832 -> ForLoop27582280;
	27581633 [label="27581633  int k;...",shape=box];
	27655869 [label="27655869  register int cbv_6, cbv_7;...",shape=box];
	27568586 [label="27568586  double x_copy;...",shape=box];
	_JOIN_27581597 [label="_JOIN_27581597None...",shape=box];
	_JOIN_27581597 -> _JOIN_27581600;
	27575298 [label="27575298  int k;...",shape=box];
	27425168 [label="27425168  int i;...",shape=box];
	_JOIN_27425368 [label="_JOIN_27425368None...",shape=box];
	_JOIN_27425368 -> 27568586;
	ForLoop27581111 [label="ForLoop27581111  for (jt=jj; jt<=cbv_8; jt=jt+8) {...",shape=box];
	ForLoop27581111 -> 27580927;
	ForLoop27581111 -> _JOIN_27581111;
	_JOIN_27581600 [label="_JOIN_27581600None...",shape=box];
	_JOIN_27581600 -> _JOIN_27581601;
	27570800 [label="27570800  int j;...",shape=box];
	_JOIN_27575266 [label="_JOIN_27575266None...",shape=box];
	_JOIN_27575266 -> ForLoop27580830;
	_JOIN_27580827 [label="_JOIN_27580827None...",shape=box];
	_JOIN_27580827 -> _JOIN_27580829;
	_JOIN_27582277 [label="_JOIN_27582277None...",shape=box];
	_JOIN_27582277 -> _JOIN_27582278;
	_JOIN_27580829 [label="_JOIN_27580829None...",shape=box];
	_JOIN_27580829 -> _JOIN_27580830;
	_JOIN_27582275 [label="_JOIN_27582275None...",shape=box];
	_JOIN_27582275 -> _JOIN_27582277;
	27581596 [label="27581596  scv_76=scv_76+A[i*ny+j]*x[j];...",shape=box];
	27581596 -> _JOIN_27581597;
	ForLoop27581529 [label="ForLoop27581529  for (j=jt; j<=cbv_9; j=j+16) {...",shape=box];
	ForLoop27581529 -> 27581152;
	ForLoop27581529 -> _JOIN_27581529;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest112.exe __orio_perftest112.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest112.exe  
{'[6, 5, 1, 0, 6, 5, 0, 0, 3, 0, 15, 19, 1, 1, 0, 1, 1, 1]' : 0.0860622}
{'[6, 5, 1, 0, 6, 5, 0, 0, 3, 0, 15, 19, 1, 1, 0, 1, 1, 1]' : 0.0855169}
{'[6, 5, 1, 0, 6, 5, 0, 0, 3, 0, 15, 19, 1, 1, 0, 1, 1, 1]' : 0.085469}
{'[6, 5, 1, 0, 6, 5, 0, 0, 3, 0, 15, 19, 1, 1, 0, 1, 1, 1]' : 0.0855012}
{'[6, 5, 1, 0, 6, 5, 0, 0, 3, 0, 15, 19, 1, 1, 0, 1, 1, 1]' : 0.085469}
{'[6, 5, 1, 0, 6, 5, 0, 0, 3, 0, 15, 19, 1, 1, 0, 1, 1, 1]' : 0.0864918}
{'[6, 5, 1, 0, 6, 5, 0, 0, 3, 0, 15, 19, 1, 1, 0, 1, 1, 1]' : 0.0855}
{'[6, 5, 1, 0, 6, 5, 0, 0, 3, 0, 15, 19, 1, 1, 0, 1, 1, 1]' : 0.085499}
{'[6, 5, 1, 0, 6, 5, 0, 0, 3, 0, 15, 19, 1, 1, 0, 1, 1, 1]' : 0.0855961}
{'[6, 5, 1, 0, 6, 5, 0, 0, 3, 0, 15, 19, 1, 1, 0, 1, 1, 1]' : 0.0854669}
{'[6, 5, 1, 0, 6, 5, 0, 0, 3, 0, 15, 19, 1, 1, 0, 1, 1, 1]' : 0.0860231}
{'[6, 5, 1, 0, 6, 5, 0, 0, 3, 0, 15, 19, 1, 1, 0, 1, 1, 1]' : 0.0855279}
{'[6, 5, 1, 0, 6, 5, 0, 0, 3, 0, 15, 19, 1, 1, 0, 1, 1, 1]' : 0.0854781}
{'[6, 5, 1, 0, 6, 5, 0, 0, 3, 0, 15, 19, 1, 1, 0, 1, 1, 1]' : 0.085485}
{'[6, 5, 1, 0, 6, 5, 0, 0, 3, 0, 15, 19, 1, 1, 0, 1, 1, 1]' : 0.0855842}
{'[6, 5, 1, 0, 6, 5, 0, 0, 3, 0, 15, 19, 1, 1, 0, 1, 1, 1]' : 0.085429}
{'[6, 5, 1, 0, 6, 5, 0, 0, 3, 0, 15, 19, 1, 1, 0, 1, 1, 1]' : 0.085566}
{'[6, 5, 1, 0, 6, 5, 0, 0, 3, 0, 15, 19, 1, 1, 0, 1, 1, 1]' : 0.085592}
{'[6, 5, 1, 0, 6, 5, 0, 0, 3, 0, 15, 19, 1, 1, 0, 1, 1, 1]' : 0.0854959}
{'[6, 5, 1, 0, 6, 5, 0, 0, 3, 0, 15, 19, 1, 1, 0, 1, 1, 1]' : 0.0855179}
{'[6, 5, 1, 0, 6, 5, 0, 0, 3, 0, 15, 19, 1, 1, 0, 1, 1, 1]' : 0.0855191}
{'[6, 5, 1, 0, 6, 5, 0, 0, 3, 0, 15, 19, 1, 1, 0, 1, 1, 1]' : 0.085499}
{'[6, 5, 1, 0, 6, 5, 0, 0, 3, 0, 15, 19, 1, 1, 0, 1, 1, 1]' : 0.0854778}
{'[6, 5, 1, 0, 6, 5, 0, 0, 3, 0, 15, 19, 1, 1, 0, 1, 1, 1]' : 0.085547}
{'[6, 5, 1, 0, 6, 5, 0, 0, 3, 0, 15, 19, 1, 1, 0, 1, 1, 1]' : 0.0855041}
{'[6, 5, 1, 0, 6, 5, 0, 0, 3, 0, 15, 19, 1, 1, 0, 1, 1, 1]' : 0.085485}
{'[6, 5, 1, 0, 6, 5, 0, 0, 3, 0, 15, 19, 1, 1, 0, 1, 1, 1]' : 0.0854909}
{'[6, 5, 1, 0, 6, 5, 0, 0, 3, 0, 15, 19, 1, 1, 0, 1, 1, 1]' : 0.08548}
{'[6, 5, 1, 0, 6, 5, 0, 0, 3, 0, 15, 19, 1, 1, 0, 1, 1, 1]' : 0.0859911}
{'[6, 5, 1, 0, 6, 5, 0, 0, 3, 0, 15, 19, 1, 1, 0, 1, 1, 1]' : 0.0865889}

out:
 ["{'[6, 5, 1, 0, 6, 5, 0, 0, 3, 0, 15, 19, 1, 1, 0, 1, 1, 1]' : 0.0860622}", "{'[6, 5, 1, 0, 6, 5, 0, 0, 3, 0, 15, 19, 1, 1, 0, 1, 1, 1]' : 0.0855169}", "{'[6, 5, 1, 0, 6, 5, 0, 0, 3, 0, 15, 19, 1, 1, 0, 1, 1, 1]' : 0.085469}", "{'[6, 5, 1, 0, 6, 5, 0, 0, 3, 0, 15, 19, 1, 1, 0, 1, 1, 1]' : 0.0855012}", "{'[6, 5, 1, 0, 6, 5, 0, 0, 3, 0, 15, 19, 1, 1, 0, 1, 1, 1]' : 0.085469}", "{'[6, 5, 1, 0, 6, 5, 0, 0, 3, 0, 15, 19, 1, 1, 0, 1, 1, 1]' : 0.0864918}", "{'[6, 5, 1, 0, 6, 5, 0, 0, 3, 0, 15, 19, 1, 1, 0, 1, 1, 1]' : 0.0855}", "{'[6, 5, 1, 0, 6, 5, 0, 0, 3, 0, 15, 19, 1, 1, 0, 1, 1, 1]' : 0.085499}", "{'[6, 5, 1, 0, 6, 5, 0, 0, 3, 0, 15, 19, 1, 1, 0, 1, 1, 1]' : 0.0855961}", "{'[6, 5, 1, 0, 6, 5, 0, 0, 3, 0, 15, 19, 1, 1, 0, 1, 1, 1]' : 0.0854669}", "{'[6, 5, 1, 0, 6, 5, 0, 0, 3, 0, 15, 19, 1, 1, 0, 1, 1, 1]' : 0.0860231}", "{'[6, 5, 1, 0, 6, 5, 0, 0, 3, 0, 15, 19, 1, 1, 0, 1, 1, 1]' : 0.0855279}", "{'[6, 5, 1, 0, 6, 5, 0, 0, 3, 0, 15, 19, 1, 1, 0, 1, 1, 1]' : 0.0854781}", "{'[6, 5, 1, 0, 6, 5, 0, 0, 3, 0, 15, 19, 1, 1, 0, 1, 1, 1]' : 0.085485}", "{'[6, 5, 1, 0, 6, 5, 0, 0, 3, 0, 15, 19, 1, 1, 0, 1, 1, 1]' : 0.0855842}", "{'[6, 5, 1, 0, 6, 5, 0, 0, 3, 0, 15, 19, 1, 1, 0, 1, 1, 1]' : 0.085429}", "{'[6, 5, 1, 0, 6, 5, 0, 0, 3, 0, 15, 19, 1, 1, 0, 1, 1, 1]' : 0.085566}", "{'[6, 5, 1, 0, 6, 5, 0, 0, 3, 0, 15, 19, 1, 1, 0, 1, 1, 1]' : 0.085592}", "{'[6, 5, 1, 0, 6, 5, 0, 0, 3, 0, 15, 19, 1, 1, 0, 1, 1, 1]' : 0.0854959}", "{'[6, 5, 1, 0, 6, 5, 0, 0, 3, 0, 15, 19, 1, 1, 0, 1, 1, 1]' : 0.0855179}", "{'[6, 5, 1, 0, 6, 5, 0, 0, 3, 0, 15, 19, 1, 1, 0, 1, 1, 1]' : 0.0855191}", "{'[6, 5, 1, 0, 6, 5, 0, 0, 3, 0, 15, 19, 1, 1, 0, 1, 1, 1]' : 0.085499}", "{'[6, 5, 1, 0, 6, 5, 0, 0, 3, 0, 15, 19, 1, 1, 0, 1, 1, 1]' : 0.0854778}", "{'[6, 5, 1, 0, 6, 5, 0, 0, 3, 0, 15, 19, 1, 1, 0, 1, 1, 1]' : 0.085547}", "{'[6, 5, 1, 0, 6, 5, 0, 0, 3, 0, 15, 19, 1, 1, 0, 1, 1, 1]' : 0.0855041}", "{'[6, 5, 1, 0, 6, 5, 0, 0, 3, 0, 15, 19, 1, 1, 0, 1, 1, 1]' : 0.085485}", "{'[6, 5, 1, 0, 6, 5, 0, 0, 3, 0, 15, 19, 1, 1, 0, 1, 1, 1]' : 0.0854909}", "{'[6, 5, 1, 0, 6, 5, 0, 0, 3, 0, 15, 19, 1, 1, 0, 1, 1, 1]' : 0.08548}", "{'[6, 5, 1, 0, 6, 5, 0, 0, 3, 0, 15, 19, 1, 1, 0, 1, 1, 1]' : 0.0859911}", "{'[6, 5, 1, 0, 6, 5, 0, 0, 3, 0, 15, 19, 1, 1, 0, 1, 1, 1]' : 0.0865889}"]
returning from 'run': {'[6, 5, 1, 0, 6, 5, 0, 0, 3, 0, 15, 19, 1, 1, 0, 1, 1, 1]': ([0.0860622, 0.0855169, 0.085469, 0.0855012, 0.085469, 0.0864918, 0.0855, 0.085499, 0.0855961, 0.0854669, 0.0860231, 0.0855279, 0.0854781, 0.085485, 0.0855842, 0.085429, 0.085566, 0.085592, 0.0854959, 0.0855179, 0.0855191, 0.085499, 0.0854778, 0.085547, 0.0855041, 0.085485, 0.0854909, 0.08548, 0.0859911, 0.0865889], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.0860622, 0.0855169, 0.085469, 0.0855012, 0.085469, 0.0864918, 0.0855, 0.085499, 0.0855961, 0.0854669, 0.0860231, 0.0855279, 0.0854781, 0.085485, 0.0855842, 0.085429, 0.085566, 0.085592, 0.0854959, 0.0855179, 0.0855191, 0.085499, 0.0854778, 0.085547, 0.0855041, 0.085485, 0.0854909, 0.08548, 0.0859911, 0.0865889], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[6, 5, 1, 0, 6, 5, 0, 0, 3, 0, 15, 19, 1, 1, 0, 1, 1, 1]': ([0.0860622, 0.0855169, 0.085469, 0.0855012, 0.085469, 0.0864918, 0.0855, 0.085499, 0.0855961, 0.0854669, 0.0860231, 0.0855279, 0.0854781, 0.085485, 0.0855842, 0.085429, 0.085566, 0.085592, 0.0854959, 0.0855179, 0.0855191, 0.085499, 0.0854778, 0.085547, 0.0855041, 0.085485, 0.0854909, 0.08548, 0.0859911, 0.0865889], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [0, 1, 6, 2, 3, 13, 0, 27, 1, 0, 1, 1]
Fixed Factors: {'ACOPY_x': 0, 'ACOPY_y': 0, 'T2_K': 5, 'T2_J': 6, 'VEC1': 1, 'SCR': 1}
Testing candidate 13: [0, 1, 6, 2, 6, 5, 0, 0, 3, 13, 0, 27, 1, 0, 1, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	56
        Max loop nest depth: 	5
        Additions: 		4575
        Multiplications: 	1748
        Divisions: 		0
        Logical: 		0
        Reads: 			9775
        Writes: 		2088
        Comparisons:		56
        Gotos: 			0
        
digraph CFG {
	_JOIN_27887178 [label="_JOIN_27887178None...",shape=box];
	_JOIN_27887178 -> _JOIN_27887179;
	28080760 [label="28080760  register int cbv_33, cbv_34;...",shape=box];
	27961393 [label="27961393  double scv_404, scv_405, scv_406, scv_407, scv_408, scv_409, scv_410, scv_411;...",shape=box];
	_JOIN_27884889 [label="_JOIN_27884889None...",shape=box];
	_JOIN_27884889 -> 28084324;
	27872635 [label="27872635  int k;...",shape=box];
	_JOIN_27868933 [label="_JOIN_27868933None...",shape=box];
	_JOIN_27868933 -> ForLoop27887052;
	_JOIN_27868931 [label="_JOIN_27868931None...",shape=box];
	_JOIN_27868931 -> _JOIN_27868933;
	27879755 [label="27879755  int k;...",shape=box];
	ForLoop27887455 [label="ForLoop27887455  for (kt=kk; kt<=cbv_51; kt=kt+8) {...",shape=box];
	ForLoop27887455 -> 28027758;
	ForLoop27887455 -> _JOIN_27887455;
	_JOIN_27872634 [label="_JOIN_27872634None...",shape=box];
	_JOIN_27872634 -> 27872635;
	ForLoop27888254 [label="ForLoop27888254  for (k=kt; k<=cbv_52; k=k+28) {...",shape=box];
	ForLoop27888254 -> 28029126;
	ForLoop27888254 -> _JOIN_27888254;
	_JOIN_27868331 [label="_JOIN_27868331None...",shape=box];
	_JOIN_27868331 -> _JOIN_27868334;
	27942142 [label="27942142  double scv_143, scv_144, scv_145, scv_146, scv_147, scv_148, scv_149, scv_150;...",shape=box];
	_JOIN_27868335 [label="_JOIN_27868335None...",shape=box];
	_JOIN_27868335 -> 27927228;
	_JOIN_27868334 [label="_JOIN_27868334None...",shape=box];
	_JOIN_27868334 -> _JOIN_27868335;
	_JOIN_27868337 [label="_JOIN_27868337None...",shape=box];
	_JOIN_27868337 -> 27868338;
	ForLoop27876627 [label="ForLoop27876627  for (k=cbv_18; k<=cbv_19; k=k+1) {...",shape=box];
	ForLoop27876627 -> 27942807;
	ForLoop27876627 -> _JOIN_27876627;
	ForLoop27880795 [label="ForLoop27880795  for (k=cbv_30; k<=cbv_31; k=k+1) {...",shape=box];
	ForLoop27880795 -> 27951363;
	ForLoop27880795 -> _JOIN_27880795;
	27881839 [label="27881839  int k;...",shape=box];
	27951363 [label="27951363  double scv_287;...",shape=box];
	ForLoop27868929 [label="ForLoop27868929  for (j=jj; j<=cbv_6; j=j+1) {...",shape=box];
	ForLoop27868929 -> 27928306;
	ForLoop27868929 -> _JOIN_27868929;
	ForLoop27877595 [label="ForLoop27877595  for (k=kt; k<=cbv_20; k=k+28) {...",shape=box];
	ForLoop27877595 -> 27944281;
	ForLoop27877595 -> _JOIN_27877595;
	27927228 [label="27927228  tmp[it]=scv_39;...",shape=box];
	ForLoop27877669 [label="ForLoop27877669  for (k=cbv_21; k<=cbv_22; k=k+1) {...",shape=box];
	ForLoop27877669 -> 27944946;
	ForLoop27877669 -> _JOIN_27877669;
	27957780 [label="27957780  double scv_374;...",shape=box];
	28029782 [label="28029782  double scv_512;...",shape=box];
	_JOIN_27880795 [label="_JOIN_27880795None...",shape=box];
	_JOIN_27880795 -> 27880797;
	ForLoop27887052 [label="ForLoop27887052  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop27887052 -> ForLoop27887050;
	ForLoop27887052 -> _JOIN_27887052;
	_JOIN_27878637 [label="_JOIN_27878637None...",shape=box];
	_JOIN_27878637 -> 28077196;
	ForLoop27887050 [label="ForLoop27887050  for (kk=kkk; kk<=min(ny-1,kkk+512); kk=kk+512) {...",shape=box];
	ForLoop27887050 -> 28070188;
	ForLoop27887050 -> _JOIN_27887050;
	ForLoop27878637 [label="ForLoop27878637  for (k=kt; k<=cbv_23; k=k+28) {...",shape=box];
	ForLoop27878637 -> 27946420;
	ForLoop27878637 -> _JOIN_27878637;
	28074820 [label="28074820  register int cbv_18, cbv_19;...",shape=box];
	_JOIN_27875585 [label="_JOIN_27875585None...",shape=box];
	_JOIN_27875585 -> 27875587;
	28086780 [label="28086780  register int cbv_50;...",shape=box];
	ForLoop27858500 [label="ForLoop27858500  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop27858500 -> ForLoop27858499;
	ForLoop27858500 -> _JOIN_27858500;
	28070188 [label="28070188  register int cbv_7;...",shape=box];
	_JOIN_27887177 [label="_JOIN_27887177None...",shape=box];
	_JOIN_27887177 -> _JOIN_27887178;
	ForLoop27873433 [label="ForLoop27873433  for (k=kt; k<=cbv_8; k=k+28) {...",shape=box];
	ForLoop27873433 -> 27935734;
	ForLoop27873433 -> _JOIN_27873433;
	ForLoop27883921 [label="ForLoop27883921  for (k=cbv_39; k<=cbv_40; k=k+1) {...",shape=box];
	ForLoop27883921 -> 27957780;
	ForLoop27883921 -> _JOIN_27883921;
	28079572 [label="28079572  register int cbv_30, cbv_31;...",shape=box];
	ForLoop27657804 [label="ForLoop27657804  for (i=0; i<=cbv_1; i=i+4) {...",shape=box];
	ForLoop27657804 -> 27657775;
	ForLoop27657804 -> _JOIN_27657804;
	27878713 [label="27878713  int k;...",shape=box];
	ForLoop27885931 [label="ForLoop27885931  for (k=kt; k<=cbv_44; k=k+28) {...",shape=box];
	ForLoop27885931 -> 27961393;
	ForLoop27885931 -> _JOIN_27885931;
	ForLoop27657873 [label="ForLoop27657873  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop27657873 -> 27657872;
	ForLoop27657873 -> _JOIN_27657873;
	28086700 [label="28086700  register int cbv_48, cbv_49;...",shape=box];
	_JOIN_27858500 [label="_JOIN_27858500None...",shape=box];
	_JOIN_27858500 -> ForLoop27868335;
	28026431 [label="28026431  tmp[(i+12)]=scv_462;...",shape=box];
	27954976 [label="27954976  double scv_317, scv_318, scv_319, scv_320, scv_321, scv_322, scv_323, scv_324;...",shape=box];
	27657775 [label="27657775  y[i]=0.0;...",shape=box];
	_JOIN_27888322 [label="_JOIN_27888322None...",shape=box];
	_JOIN_27888322 -> _JOIN_27888325;
	_JOIN_27868080 [label="_JOIN_27868080None...",shape=box];
	_JOIN_27868080 -> 28067636;
	27657673 [label="27657673  int i;...",shape=box];
	27873503 [label="27873503  int k;...",shape=box];
	28061337 [label="28061337  register int cbv_1;...",shape=box];
	ForLoop27887047 [label="ForLoop27887047  for (k=cbv_48; k<=cbv_49; k=k+1) {...",shape=box];
	ForLoop27887047 -> 27964197;
	ForLoop27887047 -> _JOIN_27887047;
	_JOIN_27878711 [label="_JOIN_27878711None...",shape=box];
	_JOIN_27878711 -> 27878713;
	27959919 [label="27959919  double scv_403;...",shape=box];
	27935734 [label="27935734  double scv_56, scv_57, scv_58, scv_59, scv_60, scv_61, scv_62, scv_63;...",shape=box];
	27868338 [label="27868338  int i;...",shape=box];
	27868338 -> ForLoop27887054;
	_JOIN_27882805 [label="_JOIN_27882805None...",shape=box];
	_JOIN_27882805 -> 28081948;
	ForLoop27872634 [label="ForLoop27872634  for (kt=kk; kt<=cbv_7; kt=kt+8) {...",shape=box];
	ForLoop27872634 -> 27934158;
	ForLoop27872634 -> _JOIN_27872634;
	28087083 [label="28087083  register int cbv_51;...",shape=box];
	ForLoop27874469 [label="ForLoop27874469  for (k=kt; k<=cbv_11; k=k+28) {...",shape=box];
	ForLoop27874469 -> 27937864;
	ForLoop27874469 -> _JOIN_27874469;
	27940668 [label="27940668  double scv_142;...",shape=box];
	ForLoop27860673 [label="ForLoop27860673  for (kt=kk; kt<=cbv_2; kt=kt+8) {...",shape=box];
	ForLoop27860673 -> 27892179;
	ForLoop27860673 -> _JOIN_27860673;
	_JOIN_27875511 [label="_JOIN_27875511None...",shape=box];
	_JOIN_27875511 -> 28073632;
	_JOIN_27860673 [label="_JOIN_27860673None...",shape=box];
	_JOIN_27860673 -> 27860674;
	27877671 [label="27877671  int k;...",shape=box];
	ForLoop27881837 [label="ForLoop27881837  for (k=cbv_33; k<=cbv_34; k=k+1) {...",shape=box];
	ForLoop27881837 -> 27953502;
	ForLoop27881837 -> _JOIN_27881837;
	27888693 [label="27888693  double scv_1;...",shape=box];
	ForLoop27886973 [label="ForLoop27886973  for (k=kt; k<=cbv_47; k=k+28) {...",shape=box];
	ForLoop27886973 -> 27963532;
	ForLoop27886973 -> _JOIN_27886973;
	ForLoop27873501 [label="ForLoop27873501  for (k=cbv_9; k<=cbv_10; k=k+1) {...",shape=box];
	ForLoop27873501 -> 27936390;
	ForLoop27873501 -> _JOIN_27873501;
	27903906 [label="27903906  double scv_38;...",shape=box];
	ForLoop27868933 [label="ForLoop27868933  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop27868933 -> ForLoop27868931;
	ForLoop27868933 -> _JOIN_27868933;
	28073632 [label="28073632  register int cbv_15, cbv_16;...",shape=box];
	ForLoop27868931 [label="ForLoop27868931  for (jj=jjj; jj<=min(ny-1,jjj+2032); jj=jj+16) {...",shape=box];
	ForLoop27868931 -> 28067942;
	ForLoop27868931 -> _JOIN_27868931;
	28067636 [label="28067636  register int cbv_4, cbv_5;...",shape=box];
	27940003 [label="27940003  double scv_114, scv_115, scv_116, scv_117, scv_118, scv_119, scv_120, scv_121;...",shape=box];
	28034255 [label="28034255  tmp[i]=scv_513;...",shape=box];
	28034255 -> _JOIN_27888328;
	27887456 [label="27887456  int k;...",shape=box];
	28062739 [label="28062739  register int cbv_2;...",shape=box];
	27953502 [label="27953502  double scv_316;...",shape=box];
	_JOIN_27873501 [label="_JOIN_27873501None...",shape=box];
	_JOIN_27873501 -> 27873503;
	ForLoop27858499 [label="ForLoop27858499  for (jj=jjj; jj<=min(ny-1,jjj+2032); jj=jj+16) {...",shape=box];
	ForLoop27858499 -> 28061337;
	ForLoop27858499 -> _JOIN_27858499;
	ForLoop27858498 [label="ForLoop27858498  for (j=jj; j<=cbv_1; j=j+1) {...",shape=box];
	ForLoop27858498 -> 27888693;
	ForLoop27858498 -> _JOIN_27858498;
	ForLoop27887178 [label="ForLoop27887178  for (jj=jjj; jj<=min(ny-1,jjj+2032); jj=jj+16) {...",shape=box];
	ForLoop27887178 -> 28086780;
	ForLoop27887178 -> _JOIN_27887178;
	ForLoop27887179 [label="ForLoop27887179  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop27887179 -> ForLoop27887178;
	ForLoop27887179 -> _JOIN_27887179;
	27937864 [label="27937864  double scv_85, scv_86, scv_87, scv_88, scv_89, scv_90, scv_91, scv_92;...",shape=box];
	_JOIN_27882879 [label="_JOIN_27882879None...",shape=box];
	_JOIN_27882879 -> 27882881;
	ForLoop27886005 [label="ForLoop27886005  for (k=cbv_45; k<=cbv_46; k=k+1) {...",shape=box];
	ForLoop27886005 -> 27962058;
	ForLoop27886005 -> _JOIN_27886005;
	ForLoop27887177 [label="ForLoop27887177  for (j=jj; j<=cbv_50; j=j+1) {...",shape=box];
	ForLoop27887177 -> 27887176;
	ForLoop27887177 -> _JOIN_27887177;
	28026413 [label="28026413  double scv_462, scv_463, scv_464, scv_465, scv_466, scv_467, scv_468, scv_469;...",shape=box];
	28027758 [label="28027758  double scv_476, scv_477, scv_478, scv_479, scv_480, scv_481, scv_482, scv_483;...",shape=box];
	_JOIN_27880721 [label="_JOIN_27880721None...",shape=box];
	_JOIN_27880721 -> 28079572;
	27957115 [label="27957115  double scv_346, scv_347, scv_348, scv_349, scv_350, scv_351, scv_352, scv_353;...",shape=box];
	27955641 [label="27955641  double scv_345;...",shape=box];
	28085512 [label="28085512  register int cbv_45, cbv_46;...",shape=box];
	27657872 [label="27657872  y[i]=0.0;...",shape=box];
	27657872 -> _JOIN_27657873;
	_JOIN_27887179 [label="_JOIN_27887179None...",shape=box];
	_JOIN_27887179 -> ForLoop27888326;
	28083136 [label="28083136  register int cbv_39, cbv_40;...",shape=box];
	ForLoop27868335 [label="ForLoop27868335  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop27868335 -> ForLoop27868334;
	ForLoop27868335 -> _JOIN_27868335;
	ForLoop27868334 [label="ForLoop27868334  for (kk=kkk; kk<=min(ny-1,kkk+512); kk=kk+512) {...",shape=box];
	ForLoop27868334 -> 28062739;
	ForLoop27868334 -> _JOIN_27868334;
	ForLoop27868337 [label="ForLoop27868337  for (it=iii; it<=min(nx-1,iii+127)-7; it=it+8) {...",shape=box];
	ForLoop27868337 -> 27927216;
	ForLoop27868337 -> _JOIN_27868337;
	_JOIN_27876627 [label="_JOIN_27876627None...",shape=box];
	_JOIN_27876627 -> 27876629;
	ForLoop27868331 [label="ForLoop27868331  for (k=cbv_4; k<=cbv_5; k=k+1) {...",shape=box];
	ForLoop27868331 -> 27903906;
	ForLoop27868331 -> _JOIN_27868331;
	27944946 [label="27944946  double scv_200;...",shape=box];
	ForLoop27879679 [label="ForLoop27879679  for (k=kt; k<=cbv_26; k=k+28) {...",shape=box];
	ForLoop27879679 -> 27948559;
	ForLoop27879679 -> _JOIN_27879679;
	28076008 [label="28076008  register int cbv_21, cbv_22;...",shape=box];
	_JOIN_27888325 [label="_JOIN_27888325None...",shape=box];
	_JOIN_27888325 -> _JOIN_27888326;
	_JOIN_27888326 [label="_JOIN_27888326None...",shape=box];
	_JOIN_27888326 -> 28034255;
	28034243 [label="28034243  double scv_513;...",shape=box];
	_JOIN_27858499 [label="_JOIN_27858499None...",shape=box];
	_JOIN_27858499 -> _JOIN_27858500;
	_JOIN_27858498 [label="_JOIN_27858498None...",shape=box];
	_JOIN_27858498 -> _JOIN_27858499;
	_JOIN_27888328 [label="_JOIN_27888328None...",shape=box];
	_JOIN_27888328 -> _JOIN_27888331;
	27959254 [label="27959254  double scv_375, scv_376, scv_377, scv_378, scv_379, scv_380, scv_381, scv_382;...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 27657673;
	27938529 [label="27938529  double scv_113;...",shape=box];
	27886007 [label="27886007  int k;...",shape=box];
	27858184 [label="27858184  double x_copy;...",shape=box];
	27876629 [label="27876629  int k;...",shape=box];
	ForLoop27876553 [label="ForLoop27876553  for (k=kt; k<=cbv_17; k=k+28) {...",shape=box];
	ForLoop27876553 -> 27942142;
	ForLoop27876553 -> _JOIN_27876553;
	ForLoop27884963 [label="ForLoop27884963  for (k=cbv_42; k<=cbv_43; k=k+1) {...",shape=box];
	ForLoop27884963 -> 27959919;
	ForLoop27884963 -> _JOIN_27884963;
	_JOIN_27881837 [label="_JOIN_27881837None...",shape=box];
	_JOIN_27881837 -> 27881839;
	ForLoop27880721 [label="ForLoop27880721  for (k=kt; k<=cbv_29; k=k+28) {...",shape=box];
	ForLoop27880721 -> 27950698;
	ForLoop27880721 -> _JOIN_27880721;
	_JOIN_27657804 [label="_JOIN_27657804None...",shape=box];
	_JOIN_27657804 -> 27657950;
	27882881 [label="27882881  int k;...",shape=box];
	27950698 [label="27950698  double scv_259, scv_260, scv_261, scv_262, scv_263, scv_264, scv_265, scv_266;...",shape=box];
	_JOIN_27879753 [label="_JOIN_27879753None...",shape=box];
	_JOIN_27879753 -> 27879755;
	ForLoop27888325 [label="ForLoop27888325  for (kk=kkk; kk<=min(ny-1,kkk+512); kk=kk+512) {...",shape=box];
	ForLoop27888325 -> 28087083;
	ForLoop27888325 -> _JOIN_27888325;
	28081948 [label="28081948  register int cbv_36, cbv_37;...",shape=box];
	27880797 [label="27880797  int k;...",shape=box];
	_JOIN_27888331 [label="_JOIN_27888331None...",shape=box];
	27902605 [label="27902605  double scv_10, scv_11, scv_12, scv_13, scv_14, scv_15, scv_16, scv_17;...",shape=box];
	28029126 [label="28029126  double scv_484, scv_485, scv_486, scv_487, scv_488, scv_489, scv_490, scv_491;...",shape=box];
	27949224 [label="27949224  double scv_258;...",shape=box];
	_JOIN_27888254 [label="_JOIN_27888254None...",shape=box];
	_JOIN_27888254 -> 28088151;
	ForLoop27883847 [label="ForLoop27883847  for (k=kt; k<=cbv_38; k=k+28) {...",shape=box];
	ForLoop27883847 -> 27957115;
	ForLoop27883847 -> _JOIN_27883847;
	27887176 [label="27887176  scv_513=scv_513+A[i*ny+j]*x[j];...",shape=box];
	27887176 -> _JOIN_27887177;
	27952837 [label="27952837  double scv_288, scv_289, scv_290, scv_291, scv_292, scv_293, scv_294, scv_295;...",shape=box];
	27884965 [label="27884965  int k;...",shape=box];
	_JOIN_27883921 [label="_JOIN_27883921None...",shape=box];
	_JOIN_27883921 -> 27883923;
	27934158 [label="27934158  double scv_48, scv_49, scv_50, scv_51, scv_52, scv_53, scv_54, scv_55;...",shape=box];
	27860674 [label="27860674  int k;...",shape=box];
	_JOIN_27886005 [label="_JOIN_27886005None...",shape=box];
	_JOIN_27886005 -> 27886007;
	ForLoop27878711 [label="ForLoop27878711  for (k=cbv_24; k<=cbv_25; k=k+1) {...",shape=box];
	ForLoop27878711 -> 27947085;
	ForLoop27878711 -> _JOIN_27878711;
	_JOIN_27657873 [label="_JOIN_27657873None...",shape=box];
	_JOIN_27657873 -> 27858184;
	27964197 [label="27964197  double scv_461;...",shape=box];
	27927216 [label="27927216  double scv_39, scv_40, scv_41, scv_42, scv_43, scv_44, scv_45, scv_46;...",shape=box];
	28084324 [label="28084324  register int cbv_42, cbv_43;...",shape=box];
	28088151 [label="28088151  register int cbv_53, cbv_54;...",shape=box];
	ForLoop27882879 [label="ForLoop27882879  for (k=cbv_36; k<=cbv_37; k=k+1) {...",shape=box];
	ForLoop27882879 -> 27955641;
	ForLoop27882879 -> _JOIN_27882879;
	_JOIN_27886973 [label="_JOIN_27886973None...",shape=box];
	_JOIN_27886973 -> 28086700;
	ForLoop27875585 [label="ForLoop27875585  for (k=cbv_15; k<=cbv_16; k=k+1) {...",shape=box];
	ForLoop27875585 -> 27940668;
	ForLoop27875585 -> _JOIN_27875585;
	ForLoop27879753 [label="ForLoop27879753  for (k=cbv_27; k<=cbv_28; k=k+1) {...",shape=box];
	ForLoop27879753 -> 27949224;
	ForLoop27879753 -> _JOIN_27879753;
	28067942 [label="28067942  register int cbv_6;...",shape=box];
	_JOIN_27873433 [label="_JOIN_27873433None...",shape=box];
	_JOIN_27873433 -> 28071256;
	ForLoop27881763 [label="ForLoop27881763  for (k=kt; k<=cbv_32; k=k+28) {...",shape=box];
	ForLoop27881763 -> 27952837;
	ForLoop27881763 -> _JOIN_27881763;
	27944281 [label="27944281  double scv_172, scv_173, scv_174, scv_175, scv_176, scv_177, scv_178, scv_179;...",shape=box];
	27892179 [label="27892179  double scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8, scv_9;...",shape=box];
	27657950 [label="27657950  register int cbv_2, cbv_3;...",shape=box];
	ForLoop27888331 [label="ForLoop27888331  for (iii=0; iii<=nx-1; iii=iii+128) {...",shape=box];
	ForLoop27888331 -> ForLoop27868337;
	ForLoop27888331 -> _JOIN_27888331;
	_JOIN_27883847 [label="_JOIN_27883847None...",shape=box];
	_JOIN_27883847 -> 28083136;
	_JOIN_27874543 [label="_JOIN_27874543None...",shape=box];
	_JOIN_27874543 -> 27874545;
	27946420 [label="27946420  double scv_201, scv_202, scv_203, scv_204, scv_205, scv_206, scv_207, scv_208;...",shape=box];
	ForLoop27874543 [label="ForLoop27874543  for (k=cbv_12; k<=cbv_13; k=k+1) {...",shape=box];
	ForLoop27874543 -> 27938529;
	ForLoop27874543 -> _JOIN_27874543;
	28078384 [label="28078384  register int cbv_27, cbv_28;...",shape=box];
	ForLoop27875511 [label="ForLoop27875511  for (k=kt; k<=cbv_14; k=k+28) {...",shape=box];
	ForLoop27875511 -> 27940003;
	ForLoop27875511 -> _JOIN_27875511;
	_JOIN_27887047 [label="_JOIN_27887047None...",shape=box];
	_JOIN_27887047 -> _JOIN_27887050;
	27874545 [label="27874545  int k;...",shape=box];
	_JOIN_27884963 [label="_JOIN_27884963None...",shape=box];
	_JOIN_27884963 -> 27884965;
	ForLoop27884889 [label="ForLoop27884889  for (k=kt; k<=cbv_41; k=k+28) {...",shape=box];
	ForLoop27884889 -> 27959254;
	ForLoop27884889 -> _JOIN_27884889;
	27948559 [label="27948559  double scv_230, scv_231, scv_232, scv_233, scv_234, scv_235, scv_236, scv_237;...",shape=box];
	27936390 [label="27936390  double scv_84;...",shape=box];
	_JOIN_27876553 [label="_JOIN_27876553None...",shape=box];
	_JOIN_27876553 -> 28074820;
	28072444 [label="28072444  register int cbv_12, cbv_13;...",shape=box];
	27883923 [label="27883923  int k;...",shape=box];
	ForLoop27888322 [label="ForLoop27888322  for (k=cbv_53; k<=cbv_54; k=k+1) {...",shape=box];
	ForLoop27888322 -> 28029782;
	ForLoop27888322 -> _JOIN_27888322;
	ForLoop27882805 [label="ForLoop27882805  for (k=kt; k<=cbv_35; k=k+28) {...",shape=box];
	ForLoop27882805 -> 27954976;
	ForLoop27882805 -> _JOIN_27882805;
	_JOIN_27879679 [label="_JOIN_27879679None...",shape=box];
	_JOIN_27879679 -> 28078384;
	_JOIN_27868929 [label="_JOIN_27868929None...",shape=box];
	_JOIN_27868929 -> _JOIN_27868931;
	_JOIN_27887455 [label="_JOIN_27887455None...",shape=box];
	_JOIN_27887455 -> 27887456;
	ForLoop27868080 [label="ForLoop27868080  for (k=kt; k<=cbv_3; k=k+28) {...",shape=box];
	ForLoop27868080 -> 27902605;
	ForLoop27868080 -> _JOIN_27868080;
	_JOIN_27877669 [label="_JOIN_27877669None...",shape=box];
	_JOIN_27877669 -> 27877671;
	ForLoop27887054 [label="ForLoop27887054  for (i=it; i<=min(nx-1,iii+127)-13; i=i+14) {...",shape=box];
	ForLoop27887054 -> 28expected=9369846271501.798828
actual=9369846271501.798828
026413;
	ForLoop27887054 -> _JOIN_27887054;
	28077196 [label="28077196  register int cbv_24, cbv_25;...",shape=box];
	28071256 [label="28071256  register int cbv_9, cbv_10;...",shape=box];
	27962058 [label="27962058  double scv_432;...",shape=box];
	_JOIN_27874469 [label="_JOIN_27874469None...",shape=box];
	_JOIN_27874469 -> 28072444;
	_JOIN_27877595 [label="_JOIN_27877595None...",shape=box];
	_JOIN_27877595 -> 28076008;
	ForLoop27888326 [label="ForLoop27888326  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop27888326 -> ForLoop27888325;
	ForLoop27888326 -> _JOIN_27888326;
	27947085 [label="27947085  double scv_229;...",shape=box];
	_JOIN_27881763 [label="_JOIN_27881763None...",shape=box];
	_JOIN_27881763 -> 28080760;
	27963532 [label="27963532  double scv_433, scv_434, scv_435, scv_436, scv_437, scv_438, scv_439, scv_440;...",shape=box];
	ForLoop27888328 [label="ForLoop27888328  for (i=(min(nx-1,iii+127))-(((min(nx-1,iii+127))-(it)+1)%14)+1; i<=min(nx-1,iii+127); i=i+1) {...",shape=box];
	ForLoop27888328 -> 28034243;
	ForLoop27888328 -> _JOIN_27888328;
	27875587 [label="27875587  int k;...",shape=box];
	27928306 [label="27928306  double scv_47;...",shape=box];
	27942807 [label="27942807  double scv_171;...",shape=box];
	_JOIN_27885931 [label="_JOIN_27885931None...",shape=box];
	_JOIN_27885931 -> 28085512;
	_JOIN_27887052 [label="_JOIN_27887052None...",shape=box];
	_JOIN_27887052 -> 28026431;
	_JOIN_27887050 [label="_JOIN_27887050None...",shape=box];
	_JOIN_27887050 -> _JOIN_27887052;
	_JOIN_27887054 [label="_JOIN_27887054None...",shape=box];
	_JOIN_27887054 -> ForLoop27888328;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest113.exe __orio_perftest113.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest113.exe  
{'[0, 1, 6, 2, 6, 5, 0, 0, 3, 13, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0803292}
{'[0, 1, 6, 2, 6, 5, 0, 0, 3, 13, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.079525}
{'[0, 1, 6, 2, 6, 5, 0, 0, 3, 13, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.079483}
{'[0, 1, 6, 2, 6, 5, 0, 0, 3, 13, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0794911}
{'[0, 1, 6, 2, 6, 5, 0, 0, 3, 13, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.079536}
{'[0, 1, 6, 2, 6, 5, 0, 0, 3, 13, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0795431}
{'[0, 1, 6, 2, 6, 5, 0, 0, 3, 13, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0805109}
{'[0, 1, 6, 2, 6, 5, 0, 0, 3, 13, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0794759}
{'[0, 1, 6, 2, 6, 5, 0, 0, 3, 13, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0794439}
{'[0, 1, 6, 2, 6, 5, 0, 0, 3, 13, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.079623}
{'[0, 1, 6, 2, 6, 5, 0, 0, 3, 13, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0795181}
{'[0, 1, 6, 2, 6, 5, 0, 0, 3, 13, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.079587}
{'[0, 1, 6, 2, 6, 5, 0, 0, 3, 13, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.07954}
{'[0, 1, 6, 2, 6, 5, 0, 0, 3, 13, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.079525}
{'[0, 1, 6, 2, 6, 5, 0, 0, 3, 13, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.079447}
{'[0, 1, 6, 2, 6, 5, 0, 0, 3, 13, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.079572}
{'[0, 1, 6, 2, 6, 5, 0, 0, 3, 13, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0795679}
{'[0, 1, 6, 2, 6, 5, 0, 0, 3, 13, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0794702}
{'[0, 1, 6, 2, 6, 5, 0, 0, 3, 13, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0795879}
{'[0, 1, 6, 2, 6, 5, 0, 0, 3, 13, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0799479}
{'[0, 1, 6, 2, 6, 5, 0, 0, 3, 13, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.079622}
{'[0, 1, 6, 2, 6, 5, 0, 0, 3, 13, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0795231}
{'[0, 1, 6, 2, 6, 5, 0, 0, 3, 13, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0796409}
{'[0, 1, 6, 2, 6, 5, 0, 0, 3, 13, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0795431}
{'[0, 1, 6, 2, 6, 5, 0, 0, 3, 13, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0795109}
{'[0, 1, 6, 2, 6, 5, 0, 0, 3, 13, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.079484}
{'[0, 1, 6, 2, 6, 5, 0, 0, 3, 13, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0794842}
{'[0, 1, 6, 2, 6, 5, 0, 0, 3, 13, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.079603}
{'[0, 1, 6, 2, 6, 5, 0, 0, 3, 13, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0795021}
{'[0, 1, 6, 2, 6, 5, 0, 0, 3, 13, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.079576}

out:
 ["{'[0, 1, 6, 2, 6, 5, 0, 0, 3, 13, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0803292}", "{'[0, 1, 6, 2, 6, 5, 0, 0, 3, 13, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.079525}", "{'[0, 1, 6, 2, 6, 5, 0, 0, 3, 13, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.079483}", "{'[0, 1, 6, 2, 6, 5, 0, 0, 3, 13, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0794911}", "{'[0, 1, 6, 2, 6, 5, 0, 0, 3, 13, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.079536}", "{'[0, 1, 6, 2, 6, 5, 0, 0, 3, 13, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0795431}", "{'[0, 1, 6, 2, 6, 5, 0, 0, 3, 13, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0805109}", "{'[0, 1, 6, 2, 6, 5, 0, 0, 3, 13, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0794759}", "{'[0, 1, 6, 2, 6, 5, 0, 0, 3, 13, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0794439}", "{'[0, 1, 6, 2, 6, 5, 0, 0, 3, 13, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.079623}", "{'[0, 1, 6, 2, 6, 5, 0, 0, 3, 13, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0795181}", "{'[0, 1, 6, 2, 6, 5, 0, 0, 3, 13, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.079587}", "{'[0, 1, 6, 2, 6, 5, 0, 0, 3, 13, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.07954}", "{'[0, 1, 6, 2, 6, 5, 0, 0, 3, 13, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.079525}", "{'[0, 1, 6, 2, 6, 5, 0, 0, 3, 13, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.079447}", "{'[0, 1, 6, 2, 6, 5, 0, 0, 3, 13, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.079572}", "{'[0, 1, 6, 2, 6, 5, 0, 0, 3, 13, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0795679}", "{'[0, 1, 6, 2, 6, 5, 0, 0, 3, 13, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0794702}", "{'[0, 1, 6, 2, 6, 5, 0, 0, 3, 13, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0795879}", "{'[0, 1, 6, 2, 6, 5, 0, 0, 3, 13, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0799479}", "{'[0, 1, 6, 2, 6, 5, 0, 0, 3, 13, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.079622}", "{'[0, 1, 6, 2, 6, 5, 0, 0, 3, 13, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0795231}", "{'[0, 1, 6, 2, 6, 5, 0, 0, 3, 13, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0796409}", "{'[0, 1, 6, 2, 6, 5, 0, 0, 3, 13, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0795431}", "{'[0, 1, 6, 2, 6, 5, 0, 0, 3, 13, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0795109}", "{'[0, 1, 6, 2, 6, 5, 0, 0, 3, 13, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.079484}", "{'[0, 1, 6, 2, 6, 5, 0, 0, 3, 13, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0794842}", "{'[0, 1, 6, 2, 6, 5, 0, 0, 3, 13, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.079603}", "{'[0, 1, 6, 2, 6, 5, 0, 0, 3, 13, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0795021}", "{'[0, 1, 6, 2, 6, 5, 0, 0, 3, 13, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.079576}"]
returning from 'run': {'[0, 1, 6, 2, 6, 5, 0, 0, 3, 13, 0, 27, 1, 0, 1, 1, 1, 1]': ([0.0803292, 0.079525, 0.079483, 0.0794911, 0.079536, 0.0795431, 0.0805109, 0.0794759, 0.0794439, 0.079623, 0.0795181, 0.079587, 0.07954, 0.079525, 0.079447, 0.079572, 0.0795679, 0.0794702, 0.0795879, 0.0799479, 0.079622, 0.0795231, 0.0796409, 0.0795431, 0.0795109, 0.079484, 0.0794842, 0.079603, 0.0795021, 0.079576], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.0803292, 0.079525, 0.079483, 0.0794911, 0.079536, 0.0795431, 0.0805109, 0.0794759, 0.0794439, 0.079623, 0.0795181, 0.079587, 0.07954, 0.079525, 0.079447, 0.079572, 0.0795679, 0.0794702, 0.0795879, 0.0799479, 0.079622, 0.0795231, 0.0796409, 0.0795431, 0.0795109, 0.079484, 0.0794842, 0.079603, 0.0795021, 0.079576], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 6, 2, 6, 5, 0, 0, 3, 13, 0, 27, 1, 0, 1, 1, 1, 1]': ([0.0803292, 0.079525, 0.079483, 0.0794911, 0.079536, 0.0795431, 0.0805109, 0.0794759, 0.0794439, 0.079623, 0.0795181, 0.079587, 0.07954, 0.079525, 0.079447, 0.079572, 0.0795679, 0.0794702, 0.0795879, 0.0799479, 0.079622, 0.0795231, 0.0796409, 0.0795431, 0.0795109, 0.079484, 0.0794842, 0.079603, 0.0795021, 0.079576], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [2, 0, 1, 6, 6, 0, 18, 22, 0, 2, 0, 1]
Fixed Factors: {'ACOPY_x': 0, 'ACOPY_y': 0, 'T2_K': 5, 'T2_J': 6, 'VEC1': 1, 'SCR': 1}
Testing candidate 14: [2, 0, 1, 6, 6, 5, 0, 0, 6, 0, 18, 22, 0, 2, 0, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	6
        Additions: 		380
        Multiplications: 	152
        Divisions: 		0
        Logical: 		0
        Reads: 			862
        Writes: 		171
        Comparisons:		13
        Gotos: 			0
        
digraph CFG {
	_JOIN_28129089 [label="_JOIN_28129089None...",shape=box];
	_JOIN_28129089 -> 28145276;
	28138615 [label="28138615  double scv_25;...",shape=box];
	_JOIN_28128396 [label="_JOIN_28128396None...",shape=box];
	_JOIN_28128396 -> _JOIN_28128399;
	28126918 [label="28126918  double x_copy;...",shape=box];
	ForLoop28129157 [label="ForLoop28129157  for (k=cbv_6; k<=cbv_7; k=k+1) {...",shape=box];
	ForLoop28129157 -> 28134308;
	ForLoop28129157 -> _JOIN_28129157;
	28088985 [label="28088985  register int cbv_2, cbv_3;...",shape=box];
	ForLoop28088881 [label="ForLoop28088881  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop28088881 -> 28088880;
	ForLoop28088881 -> _JOIN_28088881;
	28145276 [label="28145276  register int cbv_6, cbv_7;...",shape=box];
	28134308 [label="28134308  double scv_24;...",shape=box];
	ForLoop28128396 [label="ForLoop28128396  for (j=cbv_3; j<=cbv_4; j=j+1) {...",shape=box];
	ForLoop28128396 -> 28128395;
	ForLoop28128396 -> _JOIN_28128396;
	28088880 [label="28088880  y[i]=0.0;...",shape=box];
	28088880 -> _JOIN_28088881;
	ForLoop28129159 [label="ForLoop28129159  for (kk=kkk; kk<=min(ny-1,kkk+1008); kk=kk+16) {...",shape=box];
	ForLoop28129159 -> 28128431;
	ForLoop28129159 -> _JOIN_28129159;
	28088609 [label="28088609  int i;...",shape=box];
	ForLoop28129089 [label="ForLoop28129089  for (k=kk; k<=cbv_5; k=k+23) {...",shape=box];
	ForLoop28129089 -> 28133758;
	ForLoop28129089 -> _JOIN_28129089;
	ForLoop28128399 [label="ForLoop28128399  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop28128399 -> 28143843;
	ForLoop28128399 -> _JOIN_28128399;
	28133758 [label="28133758  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	_JOIN_28088881 [label="_JOIN_28088881None...",shape=box];
	_JOIN_28088881 -> 28126918;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 28088609;
	28128395 [label="28128395  scv_25=scv_25+A[i*ny+j]*x[j];...",shape=box];
	28128395 -> _JOIN_28128396;
	ForLoop28088812 [label="ForLoop28088812  for (i=0; i<=cbv_1; i=i+7) {...",shape=box];
	ForLoop28088812 -> 28088756;
	ForLoop28088812 -> _JOIN_28088812;
	_JOIN_28127835 [label="_JOIN_28127835None...",shape=box];
	_JOIN_28127835 -> 28127836;
	28127027 [label="28127027  scv_25=scv_25+A[i*ny+jt]*x[jt];...",shape=box];
	_JOIN_28128399 [label="_JOIN_28128399None...",shape=box];
	_JOIN_28128399 -> ForLoop28129160;
	_JOIN_28129157 [label="_JOIN_28129157None...",shape=box];
	_JOIN_28129157 -> _JOIN_28129159;
	28143843 [label="28143843  register int cbv_1;...",shape=box];
	28088756 [label="28088756  y[i]=0.0;...",shape=box];
	_JOIN_28129159 [label="_JOIN_28129159None...",shape=box];
	_JOIN_28129159 -> _JOIN_28129160;
	_JOIN_28088812 [label="_JOIN_28088812None...",shape=box];
	_JOIN_28088812 -> 28088985;
	28127836 [label="28127836  int j;...",shape=box];
	ForLoop28129164 [label="ForLoop28129164  for (iii=0; iii<=nx-1; iii=iii+2048) {...",shape=box];
	ForLoop28129164 -> ForLoop28129163;
	ForLoop28129164 -> _JOIN_28129164;
	ForLoop28129163 [label="ForLoop28129163  for (ii=iii; ii<=min(nx-1,iii+2016); ii=ii+32) {...",shape=box];
	ForLoop28129163 -> ForLoop28129162;
	ForLoop28129163 -> _JOIN_28129163;
	ForLoop28129162 [label="ForLoop28129162  for (i=ii; i<=min(nx-1,ii+31); i=i+1) {...",shape=box];
	ForLoop28129162 -> 28138615;
	ForLoop28129162 -> _JOIN_28129162;
	ForLoop28127835 [label="ForLoop28127835  for (jt=jjj; jt<=cbv_1; jt=jt+32) {...",shape=box];
	ForLoop28127835 -> 28127027;
	ForLoop28127835 -> _JOIN_28127835;
	ForLoop28129160 [label="ForLoop28129160  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop28129160 -> ForLoop28129159;
	ForLoop28129160 -> _JOIN_28129160;
	28144346 [label="28144346  register int cbv_3, cbv_4;...",shape=box];
	_JOIN_28128328 [label="_JOIN_28128328None...",shape=box];
	_JOIN_28128328 -> 28144346;
	28128431 [label="28128431  int k;...",shape=box];
	28127876 [label="2812787expected=9369846271501.798828
actual=9369846271501.798828
6  scv_25=scv_25+A[i*ny+j]*x[j];...",shape=box];
	ForLoop28128328 [label="ForLoop28128328  for (j=jt; j<=cbv_2; j=j+19) {...",shape=box];
	ForLoop28128328 -> 28127876;
	ForLoop28128328 -> _JOIN_28128328;
	28138627 [label="28138627  tmp[i]=scv_25;...",shape=box];
	28138627 -> _JOIN_28129162;
	_JOIN_28129164 [label="_JOIN_28129164None...",shape=box];
	_JOIN_28129163 [label="_JOIN_28129163None...",shape=box];
	_JOIN_28129163 -> _JOIN_28129164;
	_JOIN_28129162 [label="_JOIN_28129162None...",shape=box];
	_JOIN_28129162 -> _JOIN_28129163;
	_JOIN_28129160 [label="_JOIN_28129160None...",shape=box];
	_JOIN_28129160 -> 28138627;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest114.exe __orio_perftest114.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest114.exe  
{'[2, 0, 1, 6, 6, 5, 0, 0, 6, 0, 18, 22, 0, 2, 0, 1, 1, 1]' : 0.176044}
{'[2, 0, 1, 6, 6, 5, 0, 0, 6, 0, 18, 22, 0, 2, 0, 1, 1, 1]' : 0.177204}
{'[2, 0, 1, 6, 6, 5, 0, 0, 6, 0, 18, 22, 0, 2, 0, 1, 1, 1]' : 0.176062}
{'[2, 0, 1, 6, 6, 5, 0, 0, 6, 0, 18, 22, 0, 2, 0, 1, 1, 1]' : 0.175995}
{'[2, 0, 1, 6, 6, 5, 0, 0, 6, 0, 18, 22, 0, 2, 0, 1, 1, 1]' : 0.176019}
{'[2, 0, 1, 6, 6, 5, 0, 0, 6, 0, 18, 22, 0, 2, 0, 1, 1, 1]' : 0.17599}
{'[2, 0, 1, 6, 6, 5, 0, 0, 6, 0, 18, 22, 0, 2, 0, 1, 1, 1]' : 0.175974}
{'[2, 0, 1, 6, 6, 5, 0, 0, 6, 0, 18, 22, 0, 2, 0, 1, 1, 1]' : 0.176037}
{'[2, 0, 1, 6, 6, 5, 0, 0, 6, 0, 18, 22, 0, 2, 0, 1, 1, 1]' : 0.176187}
{'[2, 0, 1, 6, 6, 5, 0, 0, 6, 0, 18, 22, 0, 2, 0, 1, 1, 1]' : 0.176004}
{'[2, 0, 1, 6, 6, 5, 0, 0, 6, 0, 18, 22, 0, 2, 0, 1, 1, 1]' : 0.17618}
{'[2, 0, 1, 6, 6, 5, 0, 0, 6, 0, 18, 22, 0, 2, 0, 1, 1, 1]' : 0.176028}
{'[2, 0, 1, 6, 6, 5, 0, 0, 6, 0, 18, 22, 0, 2, 0, 1, 1, 1]' : 0.177047}
{'[2, 0, 1, 6, 6, 5, 0, 0, 6, 0, 18, 22, 0, 2, 0, 1, 1, 1]' : 0.176848}
{'[2, 0, 1, 6, 6, 5, 0, 0, 6, 0, 18, 22, 0, 2, 0, 1, 1, 1]' : 0.17598}
{'[2, 0, 1, 6, 6, 5, 0, 0, 6, 0, 18, 22, 0, 2, 0, 1, 1, 1]' : 0.175989}
{'[2, 0, 1, 6, 6, 5, 0, 0, 6, 0, 18, 22, 0, 2, 0, 1, 1, 1]' : 0.175978}
{'[2, 0, 1, 6, 6, 5, 0, 0, 6, 0, 18, 22, 0, 2, 0, 1, 1, 1]' : 0.175922}
{'[2, 0, 1, 6, 6, 5, 0, 0, 6, 0, 18, 22, 0, 2, 0, 1, 1, 1]' : 0.176233}
{'[2, 0, 1, 6, 6, 5, 0, 0, 6, 0, 18, 22, 0, 2, 0, 1, 1, 1]' : 0.175938}
{'[2, 0, 1, 6, 6, 5, 0, 0, 6, 0, 18, 22, 0, 2, 0, 1, 1, 1]' : 0.175941}
{'[2, 0, 1, 6, 6, 5, 0, 0, 6, 0, 18, 22, 0, 2, 0, 1, 1, 1]' : 0.175953}
{'[2, 0, 1, 6, 6, 5, 0, 0, 6, 0, 18, 22, 0, 2, 0, 1, 1, 1]' : 0.17592}
{'[2, 0, 1, 6, 6, 5, 0, 0, 6, 0, 18, 22, 0, 2, 0, 1, 1, 1]' : 0.175947}
{'[2, 0, 1, 6, 6, 5, 0, 0, 6, 0, 18, 22, 0, 2, 0, 1, 1, 1]' : 0.176993}
{'[2, 0, 1, 6, 6, 5, 0, 0, 6, 0, 18, 22, 0, 2, 0, 1, 1, 1]' : 0.176116}
{'[2, 0, 1, 6, 6, 5, 0, 0, 6, 0, 18, 22, 0, 2, 0, 1, 1, 1]' : 0.176009}
{'[2, 0, 1, 6, 6, 5, 0, 0, 6, 0, 18, 22, 0, 2, 0, 1, 1, 1]' : 0.17621}
{'[2, 0, 1, 6, 6, 5, 0, 0, 6, 0, 18, 22, 0, 2, 0, 1, 1, 1]' : 0.175981}
{'[2, 0, 1, 6, 6, 5, 0, 0, 6, 0, 18, 22, 0, 2, 0, 1, 1, 1]' : 0.176069}

out:
 ["{'[2, 0, 1, 6, 6, 5, 0, 0, 6, 0, 18, 22, 0, 2, 0, 1, 1, 1]' : 0.176044}", "{'[2, 0, 1, 6, 6, 5, 0, 0, 6, 0, 18, 22, 0, 2, 0, 1, 1, 1]' : 0.177204}", "{'[2, 0, 1, 6, 6, 5, 0, 0, 6, 0, 18, 22, 0, 2, 0, 1, 1, 1]' : 0.176062}", "{'[2, 0, 1, 6, 6, 5, 0, 0, 6, 0, 18, 22, 0, 2, 0, 1, 1, 1]' : 0.175995}", "{'[2, 0, 1, 6, 6, 5, 0, 0, 6, 0, 18, 22, 0, 2, 0, 1, 1, 1]' : 0.176019}", "{'[2, 0, 1, 6, 6, 5, 0, 0, 6, 0, 18, 22, 0, 2, 0, 1, 1, 1]' : 0.17599}", "{'[2, 0, 1, 6, 6, 5, 0, 0, 6, 0, 18, 22, 0, 2, 0, 1, 1, 1]' : 0.175974}", "{'[2, 0, 1, 6, 6, 5, 0, 0, 6, 0, 18, 22, 0, 2, 0, 1, 1, 1]' : 0.176037}", "{'[2, 0, 1, 6, 6, 5, 0, 0, 6, 0, 18, 22, 0, 2, 0, 1, 1, 1]' : 0.176187}", "{'[2, 0, 1, 6, 6, 5, 0, 0, 6, 0, 18, 22, 0, 2, 0, 1, 1, 1]' : 0.176004}", "{'[2, 0, 1, 6, 6, 5, 0, 0, 6, 0, 18, 22, 0, 2, 0, 1, 1, 1]' : 0.17618}", "{'[2, 0, 1, 6, 6, 5, 0, 0, 6, 0, 18, 22, 0, 2, 0, 1, 1, 1]' : 0.176028}", "{'[2, 0, 1, 6, 6, 5, 0, 0, 6, 0, 18, 22, 0, 2, 0, 1, 1, 1]' : 0.177047}", "{'[2, 0, 1, 6, 6, 5, 0, 0, 6, 0, 18, 22, 0, 2, 0, 1, 1, 1]' : 0.176848}", "{'[2, 0, 1, 6, 6, 5, 0, 0, 6, 0, 18, 22, 0, 2, 0, 1, 1, 1]' : 0.17598}", "{'[2, 0, 1, 6, 6, 5, 0, 0, 6, 0, 18, 22, 0, 2, 0, 1, 1, 1]' : 0.175989}", "{'[2, 0, 1, 6, 6, 5, 0, 0, 6, 0, 18, 22, 0, 2, 0, 1, 1, 1]' : 0.175978}", "{'[2, 0, 1, 6, 6, 5, 0, 0, 6, 0, 18, 22, 0, 2, 0, 1, 1, 1]' : 0.175922}", "{'[2, 0, 1, 6, 6, 5, 0, 0, 6, 0, 18, 22, 0, 2, 0, 1, 1, 1]' : 0.176233}", "{'[2, 0, 1, 6, 6, 5, 0, 0, 6, 0, 18, 22, 0, 2, 0, 1, 1, 1]' : 0.175938}", "{'[2, 0, 1, 6, 6, 5, 0, 0, 6, 0, 18, 22, 0, 2, 0, 1, 1, 1]' : 0.175941}", "{'[2, 0, 1, 6, 6, 5, 0, 0, 6, 0, 18, 22, 0, 2, 0, 1, 1, 1]' : 0.175953}", "{'[2, 0, 1, 6, 6, 5, 0, 0, 6, 0, 18, 22, 0, 2, 0, 1, 1, 1]' : 0.17592}", "{'[2, 0, 1, 6, 6, 5, 0, 0, 6, 0, 18, 22, 0, 2, 0, 1, 1, 1]' : 0.175947}", "{'[2, 0, 1, 6, 6, 5, 0, 0, 6, 0, 18, 22, 0, 2, 0, 1, 1, 1]' : 0.176993}", "{'[2, 0, 1, 6, 6, 5, 0, 0, 6, 0, 18, 22, 0, 2, 0, 1, 1, 1]' : 0.176116}", "{'[2, 0, 1, 6, 6, 5, 0, 0, 6, 0, 18, 22, 0, 2, 0, 1, 1, 1]' : 0.176009}", "{'[2, 0, 1, 6, 6, 5, 0, 0, 6, 0, 18, 22, 0, 2, 0, 1, 1, 1]' : 0.17621}", "{'[2, 0, 1, 6, 6, 5, 0, 0, 6, 0, 18, 22, 0, 2, 0, 1, 1, 1]' : 0.175981}", "{'[2, 0, 1, 6, 6, 5, 0, 0, 6, 0, 18, 22, 0, 2, 0, 1, 1, 1]' : 0.176069}"]
returning from 'run': {'[2, 0, 1, 6, 6, 5, 0, 0, 6, 0, 18, 22, 0, 2, 0, 1, 1, 1]': ([0.176044, 0.177204, 0.176062, 0.175995, 0.176019, 0.17599, 0.175974, 0.176037, 0.176187, 0.176004, 0.17618, 0.176028, 0.177047, 0.176848, 0.17598, 0.175989, 0.175978, 0.175922, 0.176233, 0.175938, 0.175941, 0.175953, 0.17592, 0.175947, 0.176993, 0.176116, 0.176009, 0.17621, 0.175981, 0.176069], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.176044, 0.177204, 0.176062, 0.175995, 0.176019, 0.17599, 0.175974, 0.176037, 0.176187, 0.176004, 0.17618, 0.176028, 0.177047, 0.176848, 0.17598, 0.175989, 0.175978, 0.175922, 0.176233, 0.175938, 0.175941, 0.175953, 0.17592, 0.175947, 0.176993, 0.176116, 0.176009, 0.17621, 0.175981, 0.176069], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 1, 6, 6, 5, 0, 0, 6, 0, 18, 22, 0, 2, 0, 1, 1, 1]': ([0.176044, 0.177204, 0.176062, 0.175995, 0.176019, 0.17599, 0.175974, 0.176037, 0.176187, 0.176004, 0.17618, 0.176028, 0.177047, 0.176848, 0.17598, 0.175989, 0.175978, 0.175922, 0.176233, 0.175938, 0.175941, 0.175953, 0.17592, 0.175947, 0.176993, 0.176116, 0.176009, 0.17621, 0.175981, 0.176069], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [1, 5, 1, 0, 29, 0, 24, 27, 1, 0, 1, 1]
Fixed Factors: {'ACOPY_x': 0, 'ACOPY_y': 0, 'T2_K': 5, 'T2_J': 6, 'VEC1': 1, 'SCR': 1}
Testing candidate 15: [1, 5, 1, 0, 6, 5, 0, 0, 29, 0, 24, 27, 1, 0, 1, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	23
        Max loop nest depth: 	5
        Additions: 		2432
        Multiplications: 	1134
        Divisions: 		0
        Logical: 		0
        Reads: 			4834
        Writes: 		855
        Comparisons:		23
        Gotos: 			0
        
digraph CFG {
	_JOIN_28340076 [label="_JOIN_28340076None...",shape=box];
	_JOIN_28340076 -> 28442034;
	28418079 [label="28418079  tmp[i]=scv_109;...",shape=box];
	28418079 -> _JOIN_28341296;
	_JOIN_28146358 [label="_JOIN_28146358None...",shape=box];
	_JOIN_28146358 -> 28322637;
	28441372 [label="28441372  register int cbv_6, cbv_7;...",shape=box];
	28407179 [label="28407179  double scv_64, scv_65, scv_66, scv_67, scv_68, scv_69, scv_70, scv_71;...",shape=box];
	ForLoop28339376 [label="ForLoop28339376  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop28339376 -> ForLoop28339375;
	ForLoop28339376 -> _JOIN_28339376;
	_JOIN_28146289 [label="_JOIN_28146289None...",shape=box];
	_JOIN_28146289 -> 28146669;
	28350350 [label="28350350  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	28442034 [label="28442034  register int cbv_9, cbv_10;...",shape=box];
	28351145 [label="28351145  double scv_26;...",shape=box];
	28331715 [label="28331715  int k;...",shape=box];
	ForLoop28340076 [label="ForLoop28340076  for (j=jj; j<=cbv_8; j=j+25) {...",shape=box];
	ForLoop28340076 -> 28339474;
	ForLoop28340076 -> _JOIN_28340076;
	_JOIN_28339378 [label="_JOIN_28339378None...",shape=box];
	_JOIN_28339378 -> ForLoop28341296;
	28412963 [label="28412963  double scv_108;...",shape=box];
	_JOIN_28341222 [label="_JOIN_28341222None...",shape=box];
	_JOIN_28341222 -> 28443440;
	ForLoop28329266 [label="ForLoop28329266  for (j=jj; j<=cbv_1; j=j+25) {...",shape=box];
	ForLoop28329266 -> 28350350;
	ForLoop28329266 -> _JOIN_28329266;
	28322709 [label="28322709  int j;...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 28145534;
	28340143 [label="28340143  scv_109=scv_109+A[i*ny+j]*x[j];...",shape=box];
	28340143 -> _JOIN_28340144;
	ForLoop28146289 [label="ForLoop28146289  for (i=0; i<=cbv_1; i=i+30) {...",shape=box];
	ForLoop28146289 -> 28146026;
	ForLoop28146289 -> _JOIN_28146289;
	ForLoop28339121 [label="ForLoop28339121  for (k=kt; k<=cbv_5; k=k+28) {...",shape=box];
	ForLoop28339121 -> 28376731;
	ForLoop28339121 -> _JOIN_28339121;
	28443440 [label="28443440  register int cbv_13, cbv_14;...",shape=box];
	28410939 [label="28410939  double scv_72, scv_73, scv_74, scv_75, scv_76, scv_77, scv_78, scv_79;...",shape=box];
	ForLoop28341222 [label="ForLoop28341222  for (k=kt; k<=cbv_12; k=k+28) {...",shape=box];
	ForLoop28341222 -> 28412307;
	ForLoop28341222 -> _JOIN_28341222;
	_JOIN_28331714 [label="_JOIN_28331714None...",shape=box];
	_JOIN_28331714 -> 28331715;
	28442372 [label="28442372  register int cbv_11;...",shape=box];
	ForLoop28329541 [label="ForLoop28329541  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop28329541 -> ForLoop28329540;
	ForLoop28329541 -> _JOIN_28329541;
	ForLoop28329540 [label="ForLoop28329540  for (jj=jjj; jj<=min(ny-1,jjj+1792); jj=jj+256) {...",shape=box];
	ForLoop28329540 -> 28322709;
	ForLoop28329540 -> _JOIN_28329540;
	_JOIN_28329266 [label="_JOIN_28329266None...",shape=box];
	_JOIN_28329266 -> 28435038;
	ForLoop28341290 [label="ForLoop28341290  for (k=cbv_13; k<=cbv_14; k=k+1) {...",shape=box];
	ForLoop28341290 -> 28412963;
	ForLoop28341290 -> _JOIN_28341290;
	ForLoop28340423 [label="ForLoop28340423  for (kt=kk; kt<=cbv_11; kt=kt+8) {...",shape=box];
	ForLoop28340423 -> 28410939;
	ForLoop28340423 -> _JOIN_28340423;
	_JOIN_28339376 [label="_JOIN_28339376None...",shape=box];
	_JOIN_28339376 -> 28407191;
	_JOIN_28341290 [label="_JOIN_28341290None...",shape=box];
	_JOIN_28341290 -> _JOIN_28341293;
	28376731 [label="28376731  double scv_35, scv_36, scv_37, scv_38, scv_39, scv_40, scv_41, scv_42;...",shape=box];
	_JOIN_28329538 [label="_JOIN_28329538None...",shape=box];
	_JOIN_28329538 -> _JOIN_28329540;
	28340424 [label="28340424  int k;...",shape=box];
	_JOIN_28339372 [label="_JOIN_28339372None...",shape=box];
	_JOIN_28339372 -> _JOIN_28339375;
	28412307 [label="28412307  double scv_80, scv_81, scv_82, scv_83, scv_84, scv_85, scv_86, scv_87;...",shape=box];
	_JOIN_28340146 [label="_JOIN_28340146None...",shape=box];
	_JOIN_28340146 -> _JOIN_28340147;
	_JOIN_28340147 [label="_JOIN_28340147None...",shape=box];
	_JOIN_28340147 -> ForLoop28341294;
	_JOIN_28340144 [label="_JOIN_28340144None...",shape=box];
	_JOIN_28340144 -> _JOIN_28340146;
	_JOIN_28341296 [label="_JOIN_28341296None...",shape=box];
	_JOIN_28341296 -> _JOIN_28341298;
	ForLoop28340146 [label="ForLoop28340146  for (jj=jjj; jj<=min(ny-1,jjj+1792); jj=jj+256) {...",shape=box];
	ForLoop28340146 -> 28339434;
	ForLoop28340146 -> _JOIN_28340146;
	_JOIN_28339121 [label="_JOIN_28339121None...",shape=box];
	_JOIN_28339121 -> 28441372;
	_JOIN_28341293 [label="_JOIN_28341293None...",shape=box];
	_JOIN_28341293 -> _JOIN_28341294;
	28146357 [label="28146357  y[i]=0.0;...",shape=box];
	28146357 -> _JOIN_28146358;
	28407191 [label="28407191  tmp[it]=scv_64;...",shape=box];
	28436475 [label="28436475  register int cbv_4;...",shape=box];
	_JOIN_28341298 [label="_JOIN_28341298None...",shape=box];
	ForLoop28expected=9369846271501.798828
actual=9369846271501.798828
329538 [label="ForLoop28329538  for (j=cbv_2; j<=cbv_3; j=j+1) {...",shape=box];
	ForLoop28329538 -> 28351145;
	ForLoop28329538 -> _JOIN_28329538;
	28322637 [label="28322637  double x_copy;...",shape=box];
	ForLoop28339375 [label="ForLoop28339375  for (kk=kkk; kk<=min(ny-1,kkk+1008); kk=kk+16) {...",shape=box];
	ForLoop28339375 -> 28436475;
	ForLoop28339375 -> _JOIN_28339375;
	ForLoop28340147 [label="ForLoop28340147  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop28340147 -> ForLoop28340146;
	ForLoop28340147 -> _JOIN_28340147;
	ForLoop28340144 [label="ForLoop28340144  for (j=cbv_9; j<=cbv_10; j=j+1) {...",shape=box];
	ForLoop28340144 -> 28340143;
	ForLoop28340144 -> _JOIN_28340144;
	28146026 [label="28146026  y[i]=0.0;...",shape=box];
	ForLoop28339378 [label="ForLoop28339378  for (it=ii; it<=min(nx-1,ii+15)-7; it=it+8) {...",shape=box];
	ForLoop28339378 -> 28407179;
	ForLoop28339378 -> _JOIN_28339378;
	28145534 [label="28145534  int i;...",shape=box];
	ForLoop28339372 [label="ForLoop28339372  for (k=cbv_6; k<=cbv_7; k=k+1) {...",shape=box];
	ForLoop28339372 -> 28378032;
	ForLoop28339372 -> _JOIN_28339372;
	ForLoop28341293 [label="ForLoop28341293  for (kk=kkk; kk<=min(ny-1,kkk+1008); kk=kk+16) {...",shape=box];
	ForLoop28341293 -> 28442372;
	ForLoop28341293 -> _JOIN_28341293;
	_JOIN_28340423 [label="_JOIN_28340423None...",shape=box];
	_JOIN_28340423 -> 28340424;
	ForLoop28146358 [label="ForLoop28146358  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop28146358 -> 28146357;
	ForLoop28146358 -> _JOIN_28146358;
	28378032 [label="28378032  double scv_63;...",shape=box];
	28435038 [label="28435038  register int cbv_2, cbv_3;...",shape=box];
	_JOIN_28341294 [label="_JOIN_28341294None...",shape=box];
	_JOIN_28341294 -> 28418079;
	28418067 [label="28418067  double scv_109;...",shape=box];
	28146669 [label="28146669  register int cbv_2, cbv_3;...",shape=box];
	28339434 [label="28339434  int j;...",shape=box];
	ForLoop28341294 [label="ForLoop28341294  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop28341294 -> ForLoop28341293;
	ForLoop28341294 -> _JOIN_28341294;
	ForLoop28341298 [label="ForLoop28341298  for (ii=0; ii<=nx-1; ii=ii+16) {...",shape=box];
	ForLoop28341298 -> ForLoop28339378;
	ForLoop28341298 -> _JOIN_28341298;
	ForLoop28331714 [label="ForLoop28331714  for (kt=kk; kt<=cbv_4; kt=kt+8) {...",shape=box];
	ForLoop28331714 -> 28366305;
	ForLoop28331714 -> _JOIN_28331714;
	_JOIN_28329541 [label="_JOIN_28329541None...",shape=box];
	_JOIN_28329541 -> ForLoop28339376;
	_JOIN_28329540 [label="_JOIN_28329540None...",shape=box];
	_JOIN_28329540 -> _JOIN_28329541;
	_JOIN_28339375 [label="_JOIN_28339375None...",shape=box];
	_JOIN_28339375 -> _JOIN_28339376;
	28339474 [label="28339474  scv_109=scv_109+A[i*ny+j]*x[j];...",shape=box];
	28366305 [label="28366305  double scv_27, scv_28, scv_29, scv_30, scv_31, scv_32, scv_33, scv_34;...",shape=box];
	ForLoop28341296 [label="ForLoop28341296  for (i=it; i<=min(nx-1,ii+15); i=i+1) {...",shape=box];
	ForLoop28341296 -> 28418067;
	ForLoop28341296 -> _JOIN_28341296;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest115.exe __orio_perftest115.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest115.exe  
{'[1, 5, 1, 0, 6, 5, 0, 0, 29, 0, 24, 27, 1, 0, 1, 1, 1, 1]' : 0.0805962}
{'[1, 5, 1, 0, 6, 5, 0, 0, 29, 0, 24, 27, 1, 0, 1, 1, 1, 1]' : 0.079865}
{'[1, 5, 1, 0, 6, 5, 0, 0, 29, 0, 24, 27, 1, 0, 1, 1, 1, 1]' : 0.079869}
{'[1, 5, 1, 0, 6, 5, 0, 0, 29, 0, 24, 27, 1, 0, 1, 1, 1, 1]' : 0.07991}
{'[1, 5, 1, 0, 6, 5, 0, 0, 29, 0, 24, 27, 1, 0, 1, 1, 1, 1]' : 0.079843}
{'[1, 5, 1, 0, 6, 5, 0, 0, 29, 0, 24, 27, 1, 0, 1, 1, 1, 1]' : 0.0799661}
{'[1, 5, 1, 0, 6, 5, 0, 0, 29, 0, 24, 27, 1, 0, 1, 1, 1, 1]' : 0.0798628}
{'[1, 5, 1, 0, 6, 5, 0, 0, 29, 0, 24, 27, 1, 0, 1, 1, 1, 1]' : 0.079983}
{'[1, 5, 1, 0, 6, 5, 0, 0, 29, 0, 24, 27, 1, 0, 1, 1, 1, 1]' : 0.0799072}
{'[1, 5, 1, 0, 6, 5, 0, 0, 29, 0, 24, 27, 1, 0, 1, 1, 1, 1]' : 0.0798688}
{'[1, 5, 1, 0, 6, 5, 0, 0, 29, 0, 24, 27, 1, 0, 1, 1, 1, 1]' : 0.079993}
{'[1, 5, 1, 0, 6, 5, 0, 0, 29, 0, 24, 27, 1, 0, 1, 1, 1, 1]' : 0.0801232}
{'[1, 5, 1, 0, 6, 5, 0, 0, 29, 0, 24, 27, 1, 0, 1, 1, 1, 1]' : 0.0800738}
{'[1, 5, 1, 0, 6, 5, 0, 0, 29, 0, 24, 27, 1, 0, 1, 1, 1, 1]' : 0.0799482}
{'[1, 5, 1, 0, 6, 5, 0, 0, 29, 0, 24, 27, 1, 0, 1, 1, 1, 1]' : 0.0799329}
{'[1, 5, 1, 0, 6, 5, 0, 0, 29, 0, 24, 27, 1, 0, 1, 1, 1, 1]' : 0.080436}
{'[1, 5, 1, 0, 6, 5, 0, 0, 29, 0, 24, 27, 1, 0, 1, 1, 1, 1]' : 0.0799022}
{'[1, 5, 1, 0, 6, 5, 0, 0, 29, 0, 24, 27, 1, 0, 1, 1, 1, 1]' : 0.0799069}
{'[1, 5, 1, 0, 6, 5, 0, 0, 29, 0, 24, 27, 1, 0, 1, 1, 1, 1]' : 0.079972}
{'[1, 5, 1, 0, 6, 5, 0, 0, 29, 0, 24, 27, 1, 0, 1, 1, 1, 1]' : 0.0800221}
{'[1, 5, 1, 0, 6, 5, 0, 0, 29, 0, 24, 27, 1, 0, 1, 1, 1, 1]' : 0.080039}
{'[1, 5, 1, 0, 6, 5, 0, 0, 29, 0, 24, 27, 1, 0, 1, 1, 1, 1]' : 0.0799038}
{'[1, 5, 1, 0, 6, 5, 0, 0, 29, 0, 24, 27, 1, 0, 1, 1, 1, 1]' : 0.0798991}
{'[1, 5, 1, 0, 6, 5, 0, 0, 29, 0, 24, 27, 1, 0, 1, 1, 1, 1]' : 0.079953}
{'[1, 5, 1, 0, 6, 5, 0, 0, 29, 0, 24, 27, 1, 0, 1, 1, 1, 1]' : 0.079946}
{'[1, 5, 1, 0, 6, 5, 0, 0, 29, 0, 24, 27, 1, 0, 1, 1, 1, 1]' : 0.0800478}
{'[1, 5, 1, 0, 6, 5, 0, 0, 29, 0, 24, 27, 1, 0, 1, 1, 1, 1]' : 0.079879}
{'[1, 5, 1, 0, 6, 5, 0, 0, 29, 0, 24, 27, 1, 0, 1, 1, 1, 1]' : 0.0798831}
{'[1, 5, 1, 0, 6, 5, 0, 0, 29, 0, 24, 27, 1, 0, 1, 1, 1, 1]' : 0.080009}
{'[1, 5, 1, 0, 6, 5, 0, 0, 29, 0, 24, 27, 1, 0, 1, 1, 1, 1]' : 0.0799}

out:
 ["{'[1, 5, 1, 0, 6, 5, 0, 0, 29, 0, 24, 27, 1, 0, 1, 1, 1, 1]' : 0.0805962}", "{'[1, 5, 1, 0, 6, 5, 0, 0, 29, 0, 24, 27, 1, 0, 1, 1, 1, 1]' : 0.079865}", "{'[1, 5, 1, 0, 6, 5, 0, 0, 29, 0, 24, 27, 1, 0, 1, 1, 1, 1]' : 0.079869}", "{'[1, 5, 1, 0, 6, 5, 0, 0, 29, 0, 24, 27, 1, 0, 1, 1, 1, 1]' : 0.07991}", "{'[1, 5, 1, 0, 6, 5, 0, 0, 29, 0, 24, 27, 1, 0, 1, 1, 1, 1]' : 0.079843}", "{'[1, 5, 1, 0, 6, 5, 0, 0, 29, 0, 24, 27, 1, 0, 1, 1, 1, 1]' : 0.0799661}", "{'[1, 5, 1, 0, 6, 5, 0, 0, 29, 0, 24, 27, 1, 0, 1, 1, 1, 1]' : 0.0798628}", "{'[1, 5, 1, 0, 6, 5, 0, 0, 29, 0, 24, 27, 1, 0, 1, 1, 1, 1]' : 0.079983}", "{'[1, 5, 1, 0, 6, 5, 0, 0, 29, 0, 24, 27, 1, 0, 1, 1, 1, 1]' : 0.0799072}", "{'[1, 5, 1, 0, 6, 5, 0, 0, 29, 0, 24, 27, 1, 0, 1, 1, 1, 1]' : 0.0798688}", "{'[1, 5, 1, 0, 6, 5, 0, 0, 29, 0, 24, 27, 1, 0, 1, 1, 1, 1]' : 0.079993}", "{'[1, 5, 1, 0, 6, 5, 0, 0, 29, 0, 24, 27, 1, 0, 1, 1, 1, 1]' : 0.0801232}", "{'[1, 5, 1, 0, 6, 5, 0, 0, 29, 0, 24, 27, 1, 0, 1, 1, 1, 1]' : 0.0800738}", "{'[1, 5, 1, 0, 6, 5, 0, 0, 29, 0, 24, 27, 1, 0, 1, 1, 1, 1]' : 0.0799482}", "{'[1, 5, 1, 0, 6, 5, 0, 0, 29, 0, 24, 27, 1, 0, 1, 1, 1, 1]' : 0.0799329}", "{'[1, 5, 1, 0, 6, 5, 0, 0, 29, 0, 24, 27, 1, 0, 1, 1, 1, 1]' : 0.080436}", "{'[1, 5, 1, 0, 6, 5, 0, 0, 29, 0, 24, 27, 1, 0, 1, 1, 1, 1]' : 0.0799022}", "{'[1, 5, 1, 0, 6, 5, 0, 0, 29, 0, 24, 27, 1, 0, 1, 1, 1, 1]' : 0.0799069}", "{'[1, 5, 1, 0, 6, 5, 0, 0, 29, 0, 24, 27, 1, 0, 1, 1, 1, 1]' : 0.079972}", "{'[1, 5, 1, 0, 6, 5, 0, 0, 29, 0, 24, 27, 1, 0, 1, 1, 1, 1]' : 0.0800221}", "{'[1, 5, 1, 0, 6, 5, 0, 0, 29, 0, 24, 27, 1, 0, 1, 1, 1, 1]' : 0.080039}", "{'[1, 5, 1, 0, 6, 5, 0, 0, 29, 0, 24, 27, 1, 0, 1, 1, 1, 1]' : 0.0799038}", "{'[1, 5, 1, 0, 6, 5, 0, 0, 29, 0, 24, 27, 1, 0, 1, 1, 1, 1]' : 0.0798991}", "{'[1, 5, 1, 0, 6, 5, 0, 0, 29, 0, 24, 27, 1, 0, 1, 1, 1, 1]' : 0.079953}", "{'[1, 5, 1, 0, 6, 5, 0, 0, 29, 0, 24, 27, 1, 0, 1, 1, 1, 1]' : 0.079946}", "{'[1, 5, 1, 0, 6, 5, 0, 0, 29, 0, 24, 27, 1, 0, 1, 1, 1, 1]' : 0.0800478}", "{'[1, 5, 1, 0, 6, 5, 0, 0, 29, 0, 24, 27, 1, 0, 1, 1, 1, 1]' : 0.079879}", "{'[1, 5, 1, 0, 6, 5, 0, 0, 29, 0, 24, 27, 1, 0, 1, 1, 1, 1]' : 0.0798831}", "{'[1, 5, 1, 0, 6, 5, 0, 0, 29, 0, 24, 27, 1, 0, 1, 1, 1, 1]' : 0.080009}", "{'[1, 5, 1, 0, 6, 5, 0, 0, 29, 0, 24, 27, 1, 0, 1, 1, 1, 1]' : 0.0799}"]
returning from 'run': {'[1, 5, 1, 0, 6, 5, 0, 0, 29, 0, 24, 27, 1, 0, 1, 1, 1, 1]': ([0.0805962, 0.079865, 0.079869, 0.07991, 0.079843, 0.0799661, 0.0798628, 0.079983, 0.0799072, 0.0798688, 0.079993, 0.0801232, 0.0800738, 0.0799482, 0.0799329, 0.080436, 0.0799022, 0.0799069, 0.079972, 0.0800221, 0.080039, 0.0799038, 0.0798991, 0.079953, 0.079946, 0.0800478, 0.079879, 0.0798831, 0.080009, 0.0799], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.0805962, 0.079865, 0.079869, 0.07991, 0.079843, 0.0799661, 0.0798628, 0.079983, 0.0799072, 0.0798688, 0.079993, 0.0801232, 0.0800738, 0.0799482, 0.0799329, 0.080436, 0.0799022, 0.0799069, 0.079972, 0.0800221, 0.080039, 0.0799038, 0.0798991, 0.079953, 0.079946, 0.0800478, 0.079879, 0.0798831, 0.080009, 0.0799], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[1, 5, 1, 0, 6, 5, 0, 0, 29, 0, 24, 27, 1, 0, 1, 1, 1, 1]': ([0.0805962, 0.079865, 0.079869, 0.07991, 0.079843, 0.0799661, 0.0798628, 0.079983, 0.0799072, 0.0798688, 0.079993, 0.0801232, 0.0800738, 0.0799482, 0.0799329, 0.080436, 0.0799022, 0.0799069, 0.079972, 0.0800221, 0.080039, 0.0799038, 0.0798991, 0.079953, 0.079946, 0.0800478, 0.079879, 0.0798831, 0.080009, 0.0799], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [4, 5, 4, 0, 28, 0, 12, 1, 0, 2, 0, 0]
Fixed Factors: {'ACOPY_x': 0, 'ACOPY_y': 0, 'T2_K': 5, 'T2_J': 6, 'VEC1': 1, 'SCR': 1}
Testing candidate 16: [4, 5, 4, 0, 6, 5, 0, 0, 28, 0, 12, 1, 0, 2, 0, 1, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		273
        Multiplications: 	98
        Divisions: 		0
        Logical: 		0
        Reads: 			571
        Writes: 		117
        Comparisons:		13
        Gotos: 			0
        
digraph CFG {
	28484865 [label="28484865  double scv_4;...",shape=box];
	_JOIN_28444471 [label="_JOIN_28444471None...",shape=box];
	_JOIN_28444471 -> 28444842;
	28444539 [label="28444539  y[i]=0.0;...",shape=box];
	28444539 -> _JOIN_28444540;
	28444842 [label="28444842  register int cbv_2, cbv_3;...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 28443740;
	28478117 [label="28478117  int k;...",shape=box];
	28478117 -> ForLoop28478187;
	ForLoop28477670 [label="ForLoop28477670  for (jt=jj; jt<=min(ny-1,jj+255)-31; jt=jt+32) {...",shape=box];
	ForLoop28477670 -> 28476862;
	ForLoop28477670 -> _JOIN_28477670;
	28482962 [label="28482962  double scv_3;...",shape=box];
	_JOIN_28478261 [label="_JOIN_28478261None...",shape=box];
	_JOIN_28478260 [label="_JOIN_28478260None...",shape=box];
	_JOIN_28478260 -> _JOIN_28478261;
	ForLoop28444540 [label="ForLoop28444540  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop28444540 -> 28444539;
	ForLoop28444540 -> _JOIN_28444540;
	ForLoop28478261 [label="ForLoop28478261  for (ii=0; ii<=nx-1; ii=ii+128) {...",shape=box];
	ForLoop28478261 -> ForLoop28478260;
	ForLoop28478261 -> _JOIN_28478261;
	ForLoop28478260 [label="ForLoop28478260  for (i=ii; i<=min(nx-1,ii+127); i=i+1) {...",shape=box];
	ForLoop28478260 -> 28484865;
	ForLoop28478260 -> _JOIN_28478260;
	ForLoop28478013 [label="ForLoop28478013  for (j=jt; j<=min(ny-1,jj+255)-12; j=j+13) {...",shape=box];
	ForLoop28478013 -> 28477711;
	ForLoop28478013 -> _JOIN_28478013;
	28443740 [label="28443740  int i;...",shape=box];
	_JOIN_28478081 [label="_JOIN_28478081None...",shape=box];
	_JOIN_28478081 -> _JOIN_28478084;
	_JOIN_28478187 [label="_JOIN_28478187None...",shape=box];
	_JOIN_28478187 -> ForLoop28478255;
	_JOIN_28478013 [label="_JOIN_28478013None...",shape=box];
	_JOIN_28478013 -> ForLoop28478081;
	_JOIN_28478085 [label="_JOIN_28478085None...",shape=box];
	_JOIN_28478085 -> ForLoop28478258;
	28478080 [label="28478080  scv_4=scv_4+A[i*ny+j]*x[j];...",shape=box];
	28478080 -> _JOIN_28478081;
	_JOIN_28478255 [label="_JOIN_28478255None...",shape=box];
	_JOIN_28478255 -> _JOIN_28478257;
	28484877 [label="28484877  tmp[i]=scv_4;...",shape=box];
	28484877 -> _JOIN_28478260;
	_JOIN_28444540 [label="_JOIN_28444540None...",shape=box];
	_JOIN_28444540 -> 28476753;
	28476753 [label="28476753  double x_copy;...",shape=box];
	28477711 [label="28477711  scv_4=scv_4expected=9369846271501.798828
actual=9369846271501.798828
+A[i*ny+j]*x[j];...",shape=box];
	28477671 [label="28477671  int j;...",shape=box];
	28477671 -> ForLoop28478013;
	ForLoop28478085 [label="ForLoop28478085  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop28478085 -> ForLoop28478084;
	ForLoop28478085 -> _JOIN_28478085;
	ForLoop28478187 [label="ForLoop28478187  for (k=kk; k<=min(ny-1,kk+127)-1; k=k+2) {...",shape=box];
	ForLoop28478187 -> 28482855;
	ForLoop28478187 -> _JOIN_28478187;
	ForLoop28478081 [label="ForLoop28478081  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jt)+1)%13)+1; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop28478081 -> 28478080;
	ForLoop28478081 -> _JOIN_28478081;
	_JOIN_28478084 [label="_JOIN_28478084None...",shape=box];
	_JOIN_28478084 -> _JOIN_28478085;
	_JOIN_28478257 [label="_JOIN_28478257None...",shape=box];
	_JOIN_28478257 -> _JOIN_28478258;
	28444217 [label="28444217  y[i]=0.0;...",shape=box];
	ForLoop28478084 [label="ForLoop28478084  for (jj=jjj; jj<=min(ny-1,jjj+1792); jj=jj+256) {...",shape=box];
	ForLoop28478084 -> ForLoop28477670;
	ForLoop28478084 -> _JOIN_28478084;
	_JOIN_28478258 [label="_JOIN_28478258None...",shape=box];
	_JOIN_28478258 -> 28484877;
	ForLoop28444471 [label="ForLoop28444471  for (i=0; i<=cbv_1; i=i+29) {...",shape=box];
	ForLoop28444471 -> 28444217;
	ForLoop28444471 -> _JOIN_28444471;
	ForLoop28478255 [label="ForLoop28478255  for (k=(min(ny-1,kk+127))-(((min(ny-1,kk+127))-(kk)+1)%2)+1; k<=min(ny-1,kk+127); k=k+1) {...",shape=box];
	ForLoop28478255 -> 28482962;
	ForLoop28478255 -> _JOIN_28478255;
	ForLoop28478257 [label="ForLoop28478257  for (kk=kkk; kk<=min(ny-1,kkk+896); kk=kk+128) {...",shape=box];
	ForLoop28478257 -> 28478117;
	ForLoop28478257 -> _JOIN_28478257;
	28482855 [label="28482855  double scv_1, scv_2;...",shape=box];
	28476862 [label="28476862  scv_4=scv_4+A[i*ny+jt]*x[jt];...",shape=box];
	ForLoop28478258 [label="ForLoop28478258  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop28478258 -> ForLoop28478257;
	ForLoop28478258 -> _JOIN_28478258;
	_JOIN_28477670 [label="_JOIN_28477670None...",shape=box];
	_JOIN_28477670 -> 28477671;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest116.exe __orio_perftest116.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest116.exe  
{'[4, 5, 4, 0, 6, 5, 0, 0, 28, 0, 12, 1, 0, 2, 0, 1, 1, 0]' : 0.130107}
{'[4, 5, 4, 0, 6, 5, 0, 0, 28, 0, 12, 1, 0, 2, 0, 1, 1, 0]' : 0.130178}
{'[4, 5, 4, 0, 6, 5, 0, 0, 28, 0, 12, 1, 0, 2, 0, 1, 1, 0]' : 0.130256}
{'[4, 5, 4, 0, 6, 5, 0, 0, 28, 0, 12, 1, 0, 2, 0, 1, 1, 0]' : 0.130042}
{'[4, 5, 4, 0, 6, 5, 0, 0, 28, 0, 12, 1, 0, 2, 0, 1, 1, 0]' : 0.131115}
{'[4, 5, 4, 0, 6, 5, 0, 0, 28, 0, 12, 1, 0, 2, 0, 1, 1, 0]' : 0.130144}
{'[4, 5, 4, 0, 6, 5, 0, 0, 28, 0, 12, 1, 0, 2, 0, 1, 1, 0]' : 0.130106}
{'[4, 5, 4, 0, 6, 5, 0, 0, 28, 0, 12, 1, 0, 2, 0, 1, 1, 0]' : 0.130049}
{'[4, 5, 4, 0, 6, 5, 0, 0, 28, 0, 12, 1, 0, 2, 0, 1, 1, 0]' : 0.130026}
{'[4, 5, 4, 0, 6, 5, 0, 0, 28, 0, 12, 1, 0, 2, 0, 1, 1, 0]' : 0.130063}
{'[4, 5, 4, 0, 6, 5, 0, 0, 28, 0, 12, 1, 0, 2, 0, 1, 1, 0]' : 0.130013}
{'[4, 5, 4, 0, 6, 5, 0, 0, 28, 0, 12, 1, 0, 2, 0, 1, 1, 0]' : 0.130051}
{'[4, 5, 4, 0, 6, 5, 0, 0, 28, 0, 12, 1, 0, 2, 0, 1, 1, 0]' : 0.130108}
{'[4, 5, 4, 0, 6, 5, 0, 0, 28, 0, 12, 1, 0, 2, 0, 1, 1, 0]' : 0.130326}
{'[4, 5, 4, 0, 6, 5, 0, 0, 28, 0, 12, 1, 0, 2, 0, 1, 1, 0]' : 0.130067}
{'[4, 5, 4, 0, 6, 5, 0, 0, 28, 0, 12, 1, 0, 2, 0, 1, 1, 0]' : 0.130075}
{'[4, 5, 4, 0, 6, 5, 0, 0, 28, 0, 12, 1, 0, 2, 0, 1, 1, 0]' : 0.13006}
{'[4, 5, 4, 0, 6, 5, 0, 0, 28, 0, 12, 1, 0, 2, 0, 1, 1, 0]' : 0.130036}
{'[4, 5, 4, 0, 6, 5, 0, 0, 28, 0, 12, 1, 0, 2, 0, 1, 1, 0]' : 0.130111}
{'[4, 5, 4, 0, 6, 5, 0, 0, 28, 0, 12, 1, 0, 2, 0, 1, 1, 0]' : 0.130116}
{'[4, 5, 4, 0, 6, 5, 0, 0, 28, 0, 12, 1, 0, 2, 0, 1, 1, 0]' : 0.131105}
{'[4, 5, 4, 0, 6, 5, 0, 0, 28, 0, 12, 1, 0, 2, 0, 1, 1, 0]' : 0.130084}
{'[4, 5, 4, 0, 6, 5, 0, 0, 28, 0, 12, 1, 0, 2, 0, 1, 1, 0]' : 0.13021}
{'[4, 5, 4, 0, 6, 5, 0, 0, 28, 0, 12, 1, 0, 2, 0, 1, 1, 0]' : 0.130033}
{'[4, 5, 4, 0, 6, 5, 0, 0, 28, 0, 12, 1, 0, 2, 0, 1, 1, 0]' : 0.129994}
{'[4, 5, 4, 0, 6, 5, 0, 0, 28, 0, 12, 1, 0, 2, 0, 1, 1, 0]' : 0.130301}
{'[4, 5, 4, 0, 6, 5, 0, 0, 28, 0, 12, 1, 0, 2, 0, 1, 1, 0]' : 0.13004}
{'[4, 5, 4, 0, 6, 5, 0, 0, 28, 0, 12, 1, 0, 2, 0, 1, 1, 0]' : 0.13013}
{'[4, 5, 4, 0, 6, 5, 0, 0, 28, 0, 12, 1, 0, 2, 0, 1, 1, 0]' : 0.130226}
{'[4, 5, 4, 0, 6, 5, 0, 0, 28, 0, 12, 1, 0, 2, 0, 1, 1, 0]' : 0.130054}

out:
 ["{'[4, 5, 4, 0, 6, 5, 0, 0, 28, 0, 12, 1, 0, 2, 0, 1, 1, 0]' : 0.130107}", "{'[4, 5, 4, 0, 6, 5, 0, 0, 28, 0, 12, 1, 0, 2, 0, 1, 1, 0]' : 0.130178}", "{'[4, 5, 4, 0, 6, 5, 0, 0, 28, 0, 12, 1, 0, 2, 0, 1, 1, 0]' : 0.130256}", "{'[4, 5, 4, 0, 6, 5, 0, 0, 28, 0, 12, 1, 0, 2, 0, 1, 1, 0]' : 0.130042}", "{'[4, 5, 4, 0, 6, 5, 0, 0, 28, 0, 12, 1, 0, 2, 0, 1, 1, 0]' : 0.131115}", "{'[4, 5, 4, 0, 6, 5, 0, 0, 28, 0, 12, 1, 0, 2, 0, 1, 1, 0]' : 0.130144}", "{'[4, 5, 4, 0, 6, 5, 0, 0, 28, 0, 12, 1, 0, 2, 0, 1, 1, 0]' : 0.130106}", "{'[4, 5, 4, 0, 6, 5, 0, 0, 28, 0, 12, 1, 0, 2, 0, 1, 1, 0]' : 0.130049}", "{'[4, 5, 4, 0, 6, 5, 0, 0, 28, 0, 12, 1, 0, 2, 0, 1, 1, 0]' : 0.130026}", "{'[4, 5, 4, 0, 6, 5, 0, 0, 28, 0, 12, 1, 0, 2, 0, 1, 1, 0]' : 0.130063}", "{'[4, 5, 4, 0, 6, 5, 0, 0, 28, 0, 12, 1, 0, 2, 0, 1, 1, 0]' : 0.130013}", "{'[4, 5, 4, 0, 6, 5, 0, 0, 28, 0, 12, 1, 0, 2, 0, 1, 1, 0]' : 0.130051}", "{'[4, 5, 4, 0, 6, 5, 0, 0, 28, 0, 12, 1, 0, 2, 0, 1, 1, 0]' : 0.130108}", "{'[4, 5, 4, 0, 6, 5, 0, 0, 28, 0, 12, 1, 0, 2, 0, 1, 1, 0]' : 0.130326}", "{'[4, 5, 4, 0, 6, 5, 0, 0, 28, 0, 12, 1, 0, 2, 0, 1, 1, 0]' : 0.130067}", "{'[4, 5, 4, 0, 6, 5, 0, 0, 28, 0, 12, 1, 0, 2, 0, 1, 1, 0]' : 0.130075}", "{'[4, 5, 4, 0, 6, 5, 0, 0, 28, 0, 12, 1, 0, 2, 0, 1, 1, 0]' : 0.13006}", "{'[4, 5, 4, 0, 6, 5, 0, 0, 28, 0, 12, 1, 0, 2, 0, 1, 1, 0]' : 0.130036}", "{'[4, 5, 4, 0, 6, 5, 0, 0, 28, 0, 12, 1, 0, 2, 0, 1, 1, 0]' : 0.130111}", "{'[4, 5, 4, 0, 6, 5, 0, 0, 28, 0, 12, 1, 0, 2, 0, 1, 1, 0]' : 0.130116}", "{'[4, 5, 4, 0, 6, 5, 0, 0, 28, 0, 12, 1, 0, 2, 0, 1, 1, 0]' : 0.131105}", "{'[4, 5, 4, 0, 6, 5, 0, 0, 28, 0, 12, 1, 0, 2, 0, 1, 1, 0]' : 0.130084}", "{'[4, 5, 4, 0, 6, 5, 0, 0, 28, 0, 12, 1, 0, 2, 0, 1, 1, 0]' : 0.13021}", "{'[4, 5, 4, 0, 6, 5, 0, 0, 28, 0, 12, 1, 0, 2, 0, 1, 1, 0]' : 0.130033}", "{'[4, 5, 4, 0, 6, 5, 0, 0, 28, 0, 12, 1, 0, 2, 0, 1, 1, 0]' : 0.129994}", "{'[4, 5, 4, 0, 6, 5, 0, 0, 28, 0, 12, 1, 0, 2, 0, 1, 1, 0]' : 0.130301}", "{'[4, 5, 4, 0, 6, 5, 0, 0, 28, 0, 12, 1, 0, 2, 0, 1, 1, 0]' : 0.13004}", "{'[4, 5, 4, 0, 6, 5, 0, 0, 28, 0, 12, 1, 0, 2, 0, 1, 1, 0]' : 0.13013}", "{'[4, 5, 4, 0, 6, 5, 0, 0, 28, 0, 12, 1, 0, 2, 0, 1, 1, 0]' : 0.130226}", "{'[4, 5, 4, 0, 6, 5, 0, 0, 28, 0, 12, 1, 0, 2, 0, 1, 1, 0]' : 0.130054}"]
returning from 'run': {'[4, 5, 4, 0, 6, 5, 0, 0, 28, 0, 12, 1, 0, 2, 0, 1, 1, 0]': ([0.130107, 0.130178, 0.130256, 0.130042, 0.131115, 0.130144, 0.130106, 0.130049, 0.130026, 0.130063, 0.130013, 0.130051, 0.130108, 0.130326, 0.130067, 0.130075, 0.13006, 0.130036, 0.130111, 0.130116, 0.131105, 0.130084, 0.13021, 0.130033, 0.129994, 0.130301, 0.13004, 0.13013, 0.130226, 0.130054], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.130107, 0.130178, 0.130256, 0.130042, 0.131115, 0.130144, 0.130106, 0.130049, 0.130026, 0.130063, 0.130013, 0.130051, 0.130108, 0.130326, 0.130067, 0.130075, 0.13006, 0.130036, 0.130111, 0.130116, 0.131105, 0.130084, 0.13021, 0.130033, 0.129994, 0.130301, 0.13004, 0.13013, 0.130226, 0.130054], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[4, 5, 4, 0, 6, 5, 0, 0, 28, 0, 12, 1, 0, 2, 0, 1, 1, 0]': ([0.130107, 0.130178, 0.130256, 0.130042, 0.131115, 0.130144, 0.130106, 0.130049, 0.130026, 0.130063, 0.130013, 0.130051, 0.130108, 0.130326, 0.130067, 0.130075, 0.13006, 0.130036, 0.130111, 0.130116, 0.131105, 0.130084, 0.13021, 0.130033, 0.129994, 0.130301, 0.13004, 0.13013, 0.130226, 0.130054], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [1, 2, 5, 1, 10, 27, 29, 0, 1, 1, 0, 0]
Fixed Factors: {'ACOPY_x': 0, 'ACOPY_y': 0, 'T2_K': 5, 'T2_J': 6, 'VEC1': 1, 'SCR': 1}
Testing candidate 17: [1, 2, 5, 1, 6, 5, 0, 0, 10, 27, 29, 0, 1, 1, 0, 1, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	85
        Max loop nest depth: 	6
        Additions: 		7184
        Multiplications: 	2960
        Divisions: 		0
        Logical: 		0
        Reads: 			12411
        Writes: 		1822
        Comparisons:		85
        Gotos: 			0
        
digraph CFG {
	28865017 [label="28865017  scv_63=scv_63+A[(i+18)*ny+j]*x[j];...",shape=box];
	_JOIN_28862657 [label="_JOIN_28862657None...",shape=box];
	_JOIN_28862657 -> ForLoop28862734;
	28866133 [label="28866133  scv_62=scv_62+A[(i+19)*ny+j]*x[j];...",shape=box];
	28892103 [label="28892103  double scv_9, scv_10, scv_11, scv_12, scv_13, scv_14, scv_15, scv_16;...",shape=box];
	_JOIN_28869353 [label="_JOIN_28869353None...",shape=box];
	_JOIN_28869353 -> ForLoop28869430;
	_JOIN_28854845 [label="_JOIN_28854845None...",shape=box];
	_JOIN_28854845 -> ForLoop28854922;
	28854921 [label="28854921  scv_81=scv_81+A[(i+8)*ny+j]*x[j];...",shape=box];
	28854921 -> _JOIN_28854922;
	ForLoop28870469 [label="ForLoop28870469  for (j=jt; j<=min(ny-1,jj+31)-29; j=j+30) {...",shape=box];
	ForLoop28870469 -> 28869481;
	ForLoop28870469 -> _JOIN_28870469;
	ForLoop28878132 [label="ForLoop28878132  for (i=(min(nx-1,ii+15))-(((min(nx-1,ii+15))-(it)+1)%28)+1; i<=min(nx-1,ii+15); i=i+1) {...",shape=box];
	ForLoop28878132 -> 29102378;
	ForLoop28878132 -> _JOIN_28878132;
	ForLoop28878135 [label="ForLoop28878135  for (ii=iii; ii<=min(nx-1,iii+48); ii=ii+16) {...",shape=box];
	ForLoop28878135 -> ForLoop28837431;
	ForLoop28878135 -> _JOIN_28878135;
	ForLoop28878058 [label="ForLoop28878058  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop28878058 -> ForLoop28878057;
	ForLoop28878058 -> _JOIN_28878058;
	ForLoop28878136 [label="ForLoop28878136  for (iii=0; iii<=nx-1; iii=iii+64) {...",shape=box];
	ForLoop28878136 -> ForLoop28878135;
	ForLoop28878136 -> _JOIN_28878136;
	28850460 [label="28850460  int j;...",shape=box];
	28850460 -> ForLoop28851497;
	_JOIN_28854922 [label="_JOIN_28854922None...",shape=box];
	_JOIN_28854922 -> 28854924;
	28852692 [label="28852692  int j;...",shape=box];
	28852692 -> ForLoop28853729;
	ForLoop28856038 [label="ForLoop28856038  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jt)+1)%30)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop28856038 -> 28856037;
	ForLoop28856038 -> _JOIN_28856038;
	ForLoop28859386 [label="ForLoop28859386  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jt)+1)%30)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop28859386 -> 28859385;
	ForLoop28859386 -> _JOIN_28859386;
	ForLoop28870546 [label="ForLoop28870546  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jt)+1)%30)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop28870546 -> 28870545;
	ForLoop28870546 -> _JOIN_28870546;
	28864968 [label="28864968  int j;...",shape=box];
	28864968 -> ForLoop28866005;
	_JOIN_28878130 [label="_JOIN_28878130None...",shape=box];
	_JOIN_28878130 -> 29102390;
	_JOIN_28878132 [label="_JOIN_28878132None...",shape=box];
	_JOIN_28878132 -> _JOIN_28878135;
	ForLoop28853806 [label="ForLoop28853806  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jt)+1)%30)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop28853806 -> 28853805;
	ForLoop28853806 -> _JOIN_28853806;
	ForLoop28872701 [label="ForLoop28872701  for (j=jt; j<=min(ny-1,jj+31)-29; j=j+30) {...",shape=box];
	ForLoop28872701 -> 28871713;
	ForLoop28872701 -> _JOIN_28872701;
	_JOIN_28861618 [label="_JOIN_28861618None...",shape=box];
	_JOIN_28861618 -> 28861620;
	ForLoop28851574 [label="ForLoop28851574  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jt)+1)%30)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop28851574 -> 28851573;
	ForLoop28851574 -> _JOIN_28851574;
	28921561 [label="28921561  tmp[it]=scv_41;...",shape=box];
	28837432 [label="28837432  int i;...",shape=box];
	28837432 -> ForLoop28876910;
	ForLoop28837170 [label="ForLoop28837170  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jt)+1)%30)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop28837170 -> 28892988;
	ForLoop28837170 -> _JOIN_28837170;
	_JOIN_28857154 [label="_JOIN_28857154None...",shape=box];
	_JOIN_28857154 -> 28857156;
	ForLoop28486899 [label="ForLoop28486899  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop28486899 -> 28486898;
	ForLoop28486899 -> _JOIN_28486899;
	ForLoop28837173 [label="ForLoop28837173  for (jj=jjj; jj<=min(ny-1,jjj+2016); jj=jj+32) {...",shape=box];
	ForLoop28837173 -> ForLoop28829025;
	ForLoop28837173 -> _JOIN_28837173;
	ForLoop28837174 [label="ForLoop28837174  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop28837174 -> ForLoop28837173;
	ForLoop28837174 -> _JOIN_28837174;
	ForLoop28859309 [label="ForLoop28859309  for (j=jt; j<=min(ny-1,jj+31)-29; j=j+30) {...",shape=box];
	ForLoop28859309 -> 28858321;
	ForLoop28859309 -> _JOIN_28859309;
	ForLoop28877218 [label="ForLoop28877218  for (jt=jj; jt<=min(ny-1,jj+31)-7; jt=jt+8) {...",shape=box];
	ForLoop28877218 -> 28877034;
	ForLoop28877218 -> _JOIN_28877218;
	_JOIN_28853806 [label="_JOIN_28853806None...",shape=box];
	_JOIN_28853806 -> 28853808;
	28487039 [label="28487039  register int cbv_2, cbv_3;...",shape=box];
	28870548 [label="28870548  int j;...",shape=box];
	28870548 -> ForLoop28871585;
	_JOIN_28874933 [label="_JOIN_28874933None...",shape=box];
	_JOIN_28874933 -> ForLoop28875010;
	ForLoop28851497 [label="ForLoop28851497  for (j=jt; j<=min(ny-1,jj+31)-29; j=j+30) {...",shape=box];
	ForLoop28851497 -> 28850509;
	ForLoop28851497 -> _JOIN_28851497;
	ForLoop28876131 [label="ForLoop28876131  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop28876131 -> ForLoop28876129;
	ForLoop28876131 -> _JOIN_28876131;
	ForLoop28878129 [label="ForLoop28878129  for (kk=kkk; kk<=min(ny-1,kkk+768); kk=kk+256) {...",shape=box];
	ForLoop28878129 -> ForLoop28878128;
	ForLoop28878129 -> _JOIN_28878129;
	28872829 [label="28872829  scv_75=scv_75+A[(i+25)*ny+j]*x[j];...",shape=box];
	28826794 [label="28826794  double x_copy;...",shape=box];
	28862785 [label="28862785  scv_77=scv_77+A[(i+16)*ny+j]*x[j];...",shape=box];
	ForLoop28486830 [label="ForLoop28486830  for (i=0; i<=cbv_1; i=i+11) {...",shape=box];
	ForLoop28486830 -> 28486738;
	ForLoop28486830 -> _JOIN_28486830;
	ForLoop28857154 [label="ForLoop28857154  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jt)+1)%30)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop28857154 -> 28857153;
	ForLoop28857154 -> _JOIN_28857154;
	_JOIN_28877218 [label="_JOIN_28877218None...",shape=box];
	_JOIN_28877218 -> 28877219;
	28852689 [label="28852689  scv_68=scv_68+A[(i+6)*ny+j]*x[j];...",shape=box];
	28852689 -> _JOIN_28852690;
	_JOIN_28878054 [label="_JOIN_28878054None...",shape=box];
	_JOIN_28878054 -> _JOIN_28878057;
	ForLoop28855961 [label="ForLoop28855961  for (j=jt; j<=min(ny-1,jj+31)-29; j=j+30) {...",shape=box];
	ForLoop28855961 -> 28854973;
	ForLoop28855961 -> _JOIN_28855961;
	ForLoop28845994 [label="ForLoop28845994  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jt)+1)%30)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop28845994 -> 28845993;
	ForLoop28845994 -> _JOIN_28845994;
	_JOIN_28864889 [label="_JOIN_28864889None...",shape=box];
	_JOIN_28864889 -> ForLoop28864966;
	_JOIN_28877986 [label="_JOIN_28877986None...",shape=box];
	_JOIN_28877986 -> ForLoop28878054;
	28848225 [label="28848225  scv_70=scv_70+A[(i+2)*ny+j]*x[j];...",shape=box];
	28848225 -> _JOIN_28848226;
	29100996 [label="29100996  double scv_86;...",shape=box];
	28851625 [label="28851625  scv_68=scv_68+A[(i+6)*ny+j]*x[j];...",shape=box];
	ForLoop28878130 [label="ForLoop28878130  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop28878130 -> ForLoop28878129;
	ForLoop28878130 -> _JOIN_28878130;
	_JOIN_28863850 [label="_JOIN_28863850None...",shape=box];
	_JOIN_28863850 -> 28863852;
	28848228 [label="28848228  int j;...",shape=box];
	28848228 -> ForLoop28849265;
	ForLoop28868314 [label="ForLoop28868314  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jt)+1)%30)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop28868314 -> 28868313;
	ForLoop28868314 -> _JOIN_28868314;
	28871664 [label="28871664  int j;...",shape=box];
	28871664 -> ForLoop28872701;
	_JOIN_28837428 [label="_JOIN_28837428None...",shape=box];
	_JOIN_28837428 -> _JOIN_28837429;
	_JOIN_28837429 [label="_JOIN_28837429None...",shape=box];
	_JOIN_28837429 -> 28921561;
	_JOIN_28837427 [label="_JOIN_28837427None...",shape=box];
	_JOIN_28837427 -> _JOIN_28837428;
	_JOIN_28858193 [label="_JOIN_28858193None...",shape=box];
	_JOIN_28858193 -> ForLoop28858270;
	ForLoop28869430 [label="ForLoop28869430  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jt)+1)%30)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop28869430 -> 28869429;
	ForLoop28869430 -> _JOIN_28869430;
	_JOIN_28862734 [label="_JOIN_28862734None...",shape=box];
	_JOIN_28862734 -> 28862736;
	ForLoop28876126 [label="ForLoop28876126  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jt)+1)%30)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop28876126 -> 28876125;
	ForLoop28876126 -> _JOIN_28876126;
	_JOIN_28868314 [label="_JOIN_28868314None...",shape=box];
	_JOIN_28868314 -> 28868316;
	_JOIN_28878058 [label="_JOIN_28878058None...",shape=box];
	_JOIN_28878058 -> ForLoop28878130;
	_JOIN_28872701 [label="_JOIN_28872701None...",shape=box];
	_JOIN_28872701 -> ForLoop28872778;
	_JOIN_28836898 [label="_JOIN_28836898None...",shape=box];
	_JOIN_28836898 -> ForLoop28837170;
	ForLoop28876129 [label="ForLoop28876129  for (jj=jjj; jj<=min(ny-1,jjj+2016); jj=jj+32) {...",shape=box];
	ForLoop28876129 -> ForLoop28845158;
	ForLoop28876129 -> _JOIN_28876129;
	ForLoop28864889 [label="ForLoop28864889  for (j=jt; j<=min(ny-1,jj+31)-29; j=j+30) {...",shape=box];
	ForLoop28864889 -> 28863901;
	ForLoop28864889 -> _JOIN_28864889;
	28869432 [label="28869432  int j;...",shape=box];
	28869432 -> ForLoop28870469;
	28845199 [label="28845199  scv_66=scv_66+A[i*ny+j]*x[j];...",shape=box];
	ForLoop28878057 [label="ForLoop28878057  for (jj=jjj; jj<=min(ny-1,jjj+2016); jj=jj+32) {...",shape=box];
	ForLoop28878057 -> ForLoop28877218;
	ForLoop28878057 -> _JOIN_28878057;
	28860553 [label="28860553  scv_73=scv_73+A[(i+14)*ny+j]*x[j];...",shape=box];
	_JOIN_28851497 [label="_JOIN_28851497None...",shape=box];
	_JOIN_28851497 -> ForLoop28851574;
	28861669 [label="28861669  scv_74=scv_74+A[(i+15)*ny+j]*x[j];...",shape=box];
	ForLoop28873817 [label="ForLoop28873817  for (j=jt; j<=min(ny-1,jj+31)-29; j=j+30) {...",shape=box];
	ForLoop28873817 -> 28872829;
	ForLoop28873817 -> _JOIN_28873817;
	_JOIN_28876908 [label="_JOIN_28876908None...",shape=box];
	_JOIN_28876908 -> 29094424;
	_JOIN_28845158 [label="_JOIN_28845158None...",shape=box];
	_JOIN_28845158 -> 28845159;
	ForLoop28863773 [label="ForLoop28863773  for (j=jt; j<=min(ny-1,jj+31)-29; j=j+30) {...",shape=box];
	ForLoop28863773 -> 28862785;
	ForLoop28863773 -> _JOIN_28863773;
	_JOIN_28850381 [label="_JOIN_28850381None...",shape=box];
	_JOIN_28850381 -> ForLoop28850458;
	28849393 [label="28849393  scv_79=scv_79+A[(i+4)*ny+j]*x[j];...",shape=box];
	ForLoop28849265 [label="ForLoop28849265  for (j=jt; j<=min(ny-1,jj+31)-29; j=j+30) {...",shape=box];
	ForLoop28849265 -> 28848277;
	ForLoop28849265 -> _JOIN_28849265;
	28857205 [label="28857205  scv_78=scv_78+A[(i+11)*ny+j]*x[j];...",shape=box];
	28858272 [label="28858272  int j;...",shape=box];
	28858272 -> ForLoop28859309;
	28867200 [label="28867200  int j;...",shape=box];
	28867200 -> ForLoop28868237;
	28892988 [label="28892988  double scv_39;...",shape=box];
	_JOIN_28486830 [label="_JOIN_28486830None...",shape=box];
	_JOIN_28486830 -> 28487039;
	ForLoop28875010 [label="ForLoop28875010  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jt)+1)%30)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop28875010 -> 28875009;
	ForLoop28875010 -> _JOIN_28875010;
	ForLoop28866082 [label="ForLoop28866082  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jt)+1)%30)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop28866082 -> 28866081;
	ForLoop28866082 -> _JOIN_28866082;
	ForLoop28847033 [label="ForLoop28847033  for (j=jt; j<=min(ny-1,jj+31)-29; j=j+30) {...",shape=box];
	ForLoop28847033 -> 28846045;
	ForLoop28847033 -> _JOIN_28847033;
	28932565 [label="28932565  double scv_49, scv_50, scv_51, scv_52, scv_53, scv_54, scv_55, scv_56;...",shape=box];
	28866081 [label="28866081  scv_63=scv_63+A[(i+18)*ny+j]*x[j];...",shape=box];
	28866081 -> _JOIN_28866082;
	ForLoop28850381 [label="ForLoop28850381  for (j=jt; j<=min(ny-1,jj+31)-29; j=j+30) {...",shape=box];
	ForLoop28850381 -> 28849393;
	ForLoop28850381 -> _JOIN_28850381;
	28866084 [label="28866084  int j;...",shape=box];
	28866084 -> ForLoop28867121;
	ForLoop28873894 [label="ForLoop28873894  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jt)+1)%30)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop28873894 -> 28873893;
	ForLoop28873894 -> _JOIN_28873894;
	ForLoop28829025 [label="ForLoop28829025  for (jt=jj; jt<=min(ny-1,jj+31)-7; jt=jt+8) {...",shape=box];
	ForLoop28829025 -> 28881146;
	ForLoop28829025 -> _JOIN_28829025;
	28877034 [label="28877034  scv_87=scv_87+A[i*ny+jt]*x[jt];...",shape=box];
	_JOIN_28837431 [label="_JOIN_28837431None...",shape=box];
	_JOIN_28837431 -> 28837432;
	_JOIN_28853729 [label="_JOIN_28853729None...",shape=box];
	_JOIN_28853729 -> ForLoop28853806;
	ForLoop28867121 [label="ForLoop28867121  for (j=jt; j<=min(ny-1,jj+31)-29; j=j+30) {...",shape=box];
	ForLoop28867121 -> 28866133;
	ForLoop28867121 -> _JOIN_28867121;
	28877219 [label="28877219  int j;...",shape=box];
	28877219 -> ForLoop28877986;
	28867249 [label="28867249  scv_58=scv_58+A[(i+20)*ny+j]*x[j];...",shape=box];
	_JOIN_28859309 [label="_JOIN_28859309None...",shape=box];
	_JOIN_28859309 -> ForLoop28859386;
	28869481 [label="28869481  scv_84=scv_84+A[(i+22)*ny+j]*x[j];...",shape=box];
	ForLoop28853729 [label="ForLoop28853729  for (j=jt; j<=min(ny-1,jj+31)-29; j=j+30) {...",shape=box];
	ForLoop28853729 -> 28852741;
	ForLoop28853729 -> _JOIN_28853729;
	ForLoop28852613 [label="ForLoop28852613  for (j=jt; j<=min(ny-1,jj+31)-29; j=j+30) {...",shape=box];
	ForLoop28852613 -> 28851625;
	ForLoop28852613 -> _JOIN_28852613;
	ForLoop28871585 [label="ForLoop28871585  for (j=jt; j<=min(ny-1,jj+31)-29; j=j+30) {...",shape=box];
	ForLoop28871585 -> 28870597;
	ForLoop28871585 -> _JOIN_28871585;
	ForLoop28858193 [label="ForLoop28858193  for (j=jt; j<=min(ny-1,jj+31)-29; j=j+30) {...",shape=box];
	ForLoop28858193 -> 28857205;
	ForLoop28858193 -> _JOIN_28858193;
	ForLoop28874933 [label="ForLoop28874933  for (j=jt; j<=min(ny-1,jj+31)-29; j=j+30) {...",shape=box];
	ForLoop28874933 -> 28873945;
	ForLoop28874933 -> _JOIN_28874933;
	ForLoop28861541 [label="ForLoop28861541  for (j=jt; j<=min(ny-1,jj+31)-29; j=j+30) {...",shape=box];
	ForLoop28861541 -> 28860553;
	ForLoop28861541 -> _JOIN_28861541;
	28845993 [label="28845993  scv_66=scv_66+A[i*ny+j]*x[j];...",shape=box];
	28845993 -> _JOIN_28845994;
	_JOIN_28876910 [label="_JOIN_28876910None...",shape=box];
	_JOIN_28876910 -> ForLoop28878132;
	28845996 [label="28845996  int j;...",shape=box];
	28845996 -> ForLoop28847033;
	ForLoop28852690 [label="ForLoop28852690  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jt)+1)%30)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop28852690 -> 28852689;
	ForLoop28852690 -> _JOIN_28852690;
	ForLoop28872778 [label="ForLoop28872778  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jt)+1)%30)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop28872778 -> 28872777;
	ForLoop28872778 -> _JOIN_28872778;
	29102390 [label="29102390  tmp[i]=scv_87;...",shape=box];
	29102390 -> _JOIN_28878132;
	_JOIN_28866005 [label="_JOIN_28866005None...",shape=box];
	_JOIN_28866005 -> ForLoop28866082;
	28846045 [label="28846045  scv_82=scv_82+A[(i+1)*ny+j]*x[j];...",shape=box];
	ForLoop28863850 [label="ForLoop28863850  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jt)+1)%30)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop28863850 -> 28863849;
	ForLoop28863850 -> _JOIN_28863850;
	28856037 [label="28856037  scv_80=scv_80+A[(i+9)*ny+j]*x[j];...",shape=box];
	28856037 -> _JOIN_28856038;
	28869429 [label="28869429  scv_61=scv_61+A[(i+21)*ny+j]*x[j];...",shape=box];
	28869429 -> _JOIN_28869430;
	28876125 [label="28876125  scv_64=scv_64+A[(i+27)*ny+j]*x[j];...",shape=box];
	28876125 -> _JOIN_28876126;
	ForLoop28871662 [label="ForLoop28871662  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jt)+1)%30)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop28871662 -> 28871661;
	ForLoop28871662 -> _JOIN_28871662;
	28857153 [label="28857153  scv_72=scv_72+A[(i+10)*ny+j]*x[j];...",shape=box];
	28857153 -> _JOIN_28857154;
	_JOIN_28845926 [label="_JOIN_28845926None...",shape=box];
	_JOIN_28845926 -> ForLoop28845994;
	28871713 [label="28871713  scv_76=scv_76+A[(i+24)*ny+j]*x[j];...",shape=box];
	28858269 [label="28858269  scv_78=scv_78+A[(i+11)*ny+j]*x[j];...",shape=box];
	28858269 -> _JOIN_28858270;
	_JOIN_28860502 [label="_JOIN_28860502None...",shape=box];
	_JOIN_28860502 -> 28860504;
	_JOIN_28866082 [label="_JOIN_28866082None...",shape=box];
	_JOIN_28866082 -> 28866084;
	_JOIN_28869430 [label="_JOIN_28869430None...",shape=box];
	_JOIN_28869430 -> 28869432;
	_JOIN_28861541 [label="_JOIN_28861541None...",shape=box];
	_JOIN_28861541 -> ForLoop28861618;
	28863901 [label="28863901  scv_85=scv_85+A[(i+17)*ny+j]*x[j];...",shape=box];
	28878053 [label="28878053  scv_87=scv_87+A[i*ny+j]*x[j];...",shape=box];
	28878053 -> _JOIN_28878054;
	28853857 [label="28853857  scv_81=scv_81+A[(i+8)*ny+j]*x[j];...",shape=box];
	28854924 [label="28854924  int j;...",shape=box];
	28854924 -> ForLoop28855961;
	ForLoop28864966 [label="ForLoop28864966  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jt)+1)%30)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop28864966 -> 28864965;
	ForLoop28864966 -> _JOIN_28864966;
	_JOIN_28858270 [label="_JOIN_28858270None...",shape=box];
	_JOIN_28858270 -> 28858272;
	28875009 [label="28875009  scv_71=scv_71+A[(i+26)*ny+j]*x[j];...",shape=box];
	28875009 -> _JOIN_28875010;
	ForLoop28850458 [label="ForLoop28850458  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jt)+1)%30)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop28850458 -> 28850457;
	ForLoop28850458 -> _JOIN_28850458;
	_JOIN_28486899 [label="_JOIN_28486899None...",shape=box];
	_JOIN_28486899 -> 28826794;
	_JOIN_28852690 [label="_JOIN_28852690None...",shape=box];
	_JOIN_28852690 -> 28852692;
	_JOIN_28876126 [label="_JOIN_28876126None...",shape=box];
	_JOIN_28876126 -> _JOIN_28876129;
	28872777 [label="28872777  scv_76=scv_76+A[(i+24)*ny+j]*x[j];...",shape=box];
	28872777 -> _JOIN_28872778;
	28847109 [label="28847109  scv_82=scv_82+A[(i+1)*ny+j]*x[j];...",shape=box];
	28847109 -> _JOIN_28847110;
	ForLoop28877986 [label="ForLoop28877986  for (j=jt; j<=min(ny-1,jj+31)-29; j=j+30) {...",shape=box];
	ForLoop28877986 -> 28877259;
	ForLoop28877986 -> _JOIN_28877986;
	28873893 [label="28873893  scv_75=scv_75+A[(i+25)*ny+j]*x[j];...",shape=box];
	28873893 -> _JOIN_28873894;
	_JOIN_28871585 [label="_JOIN_28871585None...",shape=box];
	_JOIN_28871585 -> ForLoop28871662;
	28871661 [label="28871661  scv_83=scv_83+A[(i+23)*ny+j]*x[j];...",shape=box];
	28871661 -> _JOIN_28871662;
	28873896 [label="28873896  int j;...",shape=box];
	28873896 -> ForLoop28874933;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 28486531;
	28921549 [label="28921549  double scv_41, scv_42, scv_43, scv_44, scv_45, scv_46, scv_47, scv_48;...",shape=box];
	ForLoop28862657 [label="ForLoop28862657  for (j=jt; j<=min(ny-1,jj+31)-29; j=j+30) {...",shape=box];
	ForLoop28862657 -> 28861669;
	ForLoop28862657 -> _JOIN_28862657;
	28857156 [label="28857156  int j;...",shape=box];
	28857156 -> ForLoop28858193;
	28859388 [label="28859388  int j;...",shape=box];
	28859388 -> ForLoop28860425;
	28911633 [label="28911633  double scv_40;...",shape=box];
	_JOIN_28848226 [label="_JOIN_28848226None...",shape=box];
	_JOIN_28848226 -> 28848228;
	ForLoop28876910 [label="ForLoop28876910  for (i=it; i<=min(nx-1,ii+15)-27; i=i+28) {...",shape=box];
	ForLoop28876910 -> 29094406;
	ForLoop28876910 -> _JOIN_28876910;
	28859385 [label="28859385  scv_59=scv_59+A[(i+12)*ny+j]*x[j];...",shape=box];
	28859385 -> _JOIN_28859386;
	28850509 [label="28850509  scv_69=scv_69+A[(i+5)*ny+j]*x[j];...",shape=box];
	28486898 [label="28486898  y[i]=0.0;...",shape=box];
	28486898 -> _JOIN_28486899;
	_JOIN_28868237 [label="_JOIN_28868237None...",shape=box];
	_JOIN_28868237 -> ForLoop28868314;
	ForLoop28847110 [label="ForLoop28847110  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jt)+1)%30)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop28847110 -> 28847109;
	ForLoop28847110 -> _JOIN_28847110;
	ForLoop28857077 [label="ForLoop28857077  for (j=jt; j<=min(ny-1,jj+31)-29; j=j+30) {...",shape=box];
	ForLoop28857077 -> 28856089;
	ForLoop28857077 -> _JOIN_28857077;
	_JOIN_28850458 [label="_JOIN_28850458None...",shape=box];
	_JOIN_28850458 -> 28850460;
	ForLoop28845158 [label="ForLoop28845158  for (jt=jj; jt<=min(ny-1,jj+31)-7; jt=jt+8) {...",shape=box];
	ForLoop28845158 -> 28932565;
	ForLoop28845158 -> _JOIN_28845158;
	_JOIN_28851574 [label="_JOIN_28851574None...",shape=box];
	_JOIN_28851574 -> 28851576;
	_JOIN_28847110 [label="_JOIN_28847110None...",shape=box];
	_JOIN_28847110 -> 28847112;
	28859437 [label="28859437  scv_60=scv_60+A[(i+13)*ny+j]*x[j];...",shape=box];
	28849341 [label="28849341  scv_65=scv_65+A[(i+3)*ny+j]*x[j];...",shape=box];
	28849341 -> _JOIN_28849342;
	_JOIN_28876131 [label="_JOIN_28876131None...",shape=box];
	_JOIN_28876131 -> ForLoop28876908;
	28849344 [label="28849344  int j;...",shape=box];
	28849344 -> ForLoop28850381;
	_JOIN_28857077 [label="_JOIN_28857077None...",shape=box];
	_JOIN_28857077 -> ForLoop28857154;
	28853805 [label="28853805  scv_67=scv_67+A[(i+7)*ny+j]*x[j];...",shape=box];
	28853805 -> _JOIN_28853806;
	28854973 [label="28854973  scv_80=scv_80+A[(i+9)*ny+j]*x[j];...",shape=box];
	_JOIN_28876049 [label="_JOIN_28876049None...",shape=box];
	_JOIN_28876049 -> ForLoop28876126;
	ForLoop28860425 [label="ForLoop28860425  for (j=jt; j<=min(ny-1,jj+31)-29; j=j+30) {...",shape=box];
	ForLoop28860425 -> 28859437;
	ForLoop28860425 -> _JOIN_28860425;
	ForLoop28848226 [label="ForLoop28848226  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jt)+1)%30)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop28848226 -> 28848225;
	ForLoop28848226 -> _JOIN_28848226;
	29094424 [label="29094424  tmp[(i+20)]=scv_58;...",shape=box];
	_JOIN_28864966 [label="_JOIN_28864966None...",shape=box];
	_JOIN_28864966 -> 28864968;
	28864965 [label="28864965  scv_85=scv_85+A[(i+17)*ny+j]*x[j];...",shape=box];
	28864965 -> _JOIN_28864966;
	_JOIN_28873894 [label="_JOIN_28873894None...",shape=box];
	_JOIN_28873894 -> 28873896;
	28863852 [label="28863852  int j;...",shape=box];
	28863852 -> ForLoop28864889;
	_JOIN_28863773 [label="_JOIN_28863773None...",shape=box];
	_JOIN_28863773 -> ForLoop28863850;
	ForLoop28860502 [label="ForLoop28860502  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jt)+1)%30)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop28860502 -> 28860501;
	ForLoop28860502 -> _JOIN_28860502;
	28873945 [label="28873945  scv_71=scv_71+A[(i+26)*ny+j]*x[j];...",shape=box];
	_JOIN_28872778 [label="_JOIN_28872778None...",shape=box];
	_JOIN_28872778 -> 28872780;
	ForLoop28861618 [label="ForLoop28861618  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jt)+1)%30)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop28861618 -> 28861617;
	ForLoop28861618 -> _JOIN_28861618;
	28847112 [label="28847112  int j;...",shape=box];
	28847112 -> ForLoop28848149;
	ForLoop28876906 [label="ForLoop28876906  for (kk=kkk; kk<=min(ny-1,kkk+768); kk=kk+256) {...",shape=box];
	ForLoop28876906 -> ForLoop28876904;
	ForLoop28876906 -> _JOIN_28876906;
	_JOIN_28859386 [label="_JOIN_28859386None...",shape=box];
	_JOIN_28859386 -> 28859388;
	ForLoop28876904 [label="ForLoop28876904  for (k=kk; k<=min(ny-1,kk+255); k=k+1) {...",shape=box];
	ForLoop28876904 -> 29054578;
	ForLoop28876904 -> _JOIN_28876904;
	28829026 [label="28829026  int j;...",shape=box];
	28829026 -> ForLoop28836898;
	28872780 [label="28872780  int j;...",shape=box];
	28872780 -> ForLoop28873817;
	28850457 [label="28850457  scv_79=scv_79+A[(i+4)*ny+j]*x[j];...",shape=box];
	28850457 -> _JOIN_28850458;
	_JOIN_28871662 [label="_JOIN_28871662None...",shape=box];
	_JOIN_28871662 -> 28871664;
	_JOIN_28873817 [label="_JOIN_28873817None...",shape=box];
	_JOIN_28873817 -> ForLoop28873894;
	_JOIN_28876904 [label="_JOIN_28876904None...",shape=box];
	_JOIN_28876904 -> _JOIN_28876906;
	ForLoop28876908 [label="ForLoop28876908  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop28876908 -> ForLoop28876906;
	ForLoop28876908 -> _JOIN_28876908;
	28858321 [label="28858321  scv_59=scv_59+A[(i+12)*ny+j]*x[j];...",shape=box];
	ForLoop28837431 [label="ForLoop28837431  for (it=ii; it<=min(nx-1,ii+15)-7; it=it+8) {...",shape=box];
	ForLoop28837431 -> 28921549;
	ForLoop28837431 -> _JOIN_28837431;
	_JOIN_28852613 [label="_JOIN_28852613None...",shape=box];
	_JOIN_28852613 -> ForLoop28852690;
	ForLoop28869353 [label="ForLoop28869353  for (j=jt; j<=min(ny-1,jj+31)-29; j=j+30) {...",shape=box];
	ForLoop28869353 -> 28868365;
	ForLoop28869353 -> _JOIN_28869353;
	ForLoop28866005 [label="ForLoop28866005  for (j=jt; j<=min(ny-1,jj+31)-29; j=j+30) {...",shape=box];
	ForLoop28866005 -> 28865017;
	ForLoop28866005 -> _JOIN_28866005;
	ForLoop28845926 [label="ForLoop28845926  for (j=jt; j<=min(ny-1,jj+31)-29; j=j+30) {...",shape=box];
	ForLoop28845926 -> 28845199;
	ForLoop28845926 -> _JOIN_28845926;
	_JOIN_28878057 [label="_JOIN_28878057None...",shape=box];
	_JOIN_28878057 -> _JOIN_28878058;
	ForLoop28878128 [label="ForLoop28878128  for (k=kk; k<=min(ny-1,kk+255); k=k+1) {...",shape=box];
	ForLoop28878128 -> 29100996;
	ForLoop28878128 -> _JOIN_28878128;
	ForLoop28836898 [label="ForLoop28836898  for (j=jt; j<=min(ny-1,jj+31)-29; j=j+30) {...",shape=box];
	ForLoop28836898 -> 28892103;
	ForLoop28836898 -> _JOIN_28836898;
	ForLoop28848149 [label="ForLoop28848149  for (j=jt; j<=min(ny-1,jj+31)-29; j=j+30) {...",shape=box];
	ForLoop28848149 -> 28847161;
	ForLoop28848149 -> _JOIN_28848149;
	_JOIN_28867198 [label="_JOIN_28867198None...",shape=box];
	_JOIN_28867198 -> 28867200;
	28856089 [label="28856089  scv_72=scv_72+A[(i+10)*ny+j]*x[j];...",shape=box];
	28861620 [label="28861620  int j;...",shape=box];
	28861620 -> ForLoop28862657;
	28848277 [label="28848277  scv_65=scv_65+A[(i+3)*ny+j]*x[j];...",shape=box];
	28863849 [label="28863849  scv_77=scv_77+A[(i+16)*ny+j]*x[j];...",shape=box];
	28863849 -> _JOIN_28863850;
	_JOIN_28876906 [label="_JOIN_28876906None...",shape=box];
	_JOIN_28876906 -> _JOIN_28876908;
	ForLoop28867198 [label="ForLoop28867198  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jt)+1)%30)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop28867198 -> 28867197;
	ForLoop28867198 -> _JOIN_28867198;
	28875061 [label="28875061  scv_64=scv_64+A[(i+27)*ny+j]*x[j];...",shape=box];
	_JOIN_28867121 [label="_JOIN_28867121None...",shape=box];
	_JOIN_28867121 -> ForLoop28867198;
	ForLoop28849342 [label="ForLoop28849342  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jt)+1)%30)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop28849342 -> 28849341;
	ForLoop28849342 -> _JOIN_28849342;
	_JOIN_28860425 [label="_JOIN_28860425None...",shape=box];
	_JOIN_28860425 -> ForLoop28860502;
	_JOIN_28849265 [label="_JOIN_28849265None...",shape=box];
	_JOIN_28849265 -> ForLoop28849342;
	ForLoop28868237 [label="ForLoop28868237  for (j=jt; j<=min(ny-1,jj+31)-29; j=j+30) {...",shape=box];
	ForLoop28868237 -> 28867249;
	ForLoop28868237 -> _JOIN_28868237;
	28486738 [label="28486738  y[i]=0.0;...",shape=box];
	28853808 [label="28853808  int j;...",shape=box];
	28853808 -> ForLoop28854845;
	ForLoop28837428 [label="ForLoop28837428  for (kk=kkk; kk<=min(ny-1,kkk+768); kk=kk+256) {...",shape=box];
	ForLoop28837428 -> ForLoop28837427;
	ForLoop28837428 -> _JOIN_28837428;
	ForLoop28837429 [label="ForLoop28837429  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop28837429 -> ForLoop28837428;
	ForLoop28837429 -> _JOIN_28837429;
	28868365 [label="28868365  scv_61=scv_61+A[(i+21)*ny+j]*x[j];...",shape=box];
	28847161 [label="28847161  scv_70=scv_70+A[(i+2)*ny+j]*x[j];...",shape=box];
	28862733 [label="28862733  scv_74=scv_74+A[(i+15)*ny+j]*x[j];...",shape=box];
	28862733 -> _JOIN_28862734;
	ForLoop28876049 [label="ForLoop28876049  for (j=jt; j<=min(ny-1,jj+31)-29; j=j+30) {...",shape=box];
	ForLoop28876049 -> 28875061;
	ForLoop28876049 -> _JOIN_28876049;
	28862736 [label="28862736  int j;...",shape=box];
	28862736 -> ForLoop28863773;
	28877259 [label="28877259  scv_87=scv_87+A[i*ny+j]*x[j];...",shape=box];
	ForLoop28862734 [label="ForLoop28862734  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jt)+1)%30)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop28862734 -> 28862733;
	ForLoop28862734 -> _JOIN_28862734;
	ForLoop28854922 [label="ForLoop28854922  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jt)+1)%30)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop28854922 -> 28854921;
	ForLoop28854922 -> _JOIN_28854922;
	29102378 [label="29102378  double scv_87;...",shape=box];
	_JOIN_28847033 [label="_JOIN_28847033None...",shape=box];
	_JOIN_28847033 -> ForLoop28847110;
	_JOIN_28878135 [label="_JOIN_28878135None...",shape=box];
	_JOIN_28878135 -> _JOIN_28878136;
	ForLoop28854845 [label="ForLoop28854845  for (j=jt; j<=min(ny-1,jj+31)-29; j=j+30) {...",shape=box];
	ForLoop28854845 -> 28853857;
	ForLoop28854845 -> _JOIN_28854845;
	28851573 [label="28851573  scv_69=scv_69+A[(i+5)*ny+j]*x[j];...",shape=box];
	28851573 -> _JOIN_28851574;
	ForLoop28858270 [label="ForLoop28858270  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jt)+1)%30)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop28858270 -> 28858269;
	ForLoop28858270 -> _JOIN_28858270;
	28851576 [label="28851576  int j;...",shape=box];
	28851576 -> ForLoop28852613;
	_JOIN_28845994 [label="_JOIN_28845994None...",shape=box];
	_JOIN_28845994 -> 28845996;
	28860504 [label="28860504  int j;...",shape=box];
	28860504 -> ForLoop28861541;
	28860501 [label="28860501  scv_60=scv_60+A[(i+13)*ny+j]*x[j];...",shape=box];
	28860501 -> _JOIN_28860502;
	28861617 [label="28861617  scv_73=scv_73+A[(i+14)*ny+j]*x[j];...",shape=box];
	28861617 -> _JOIN_28861618;
	28856040 [label="28856040  int j;...",shape=box];
	28856040 -> ForLoop28857077;
	_JOIN_28856038 [label="_JOIN_28856038None...",shape=box];
	_JOIN_28856038 -> 28856040;
	ForLoop28878054 [label="ForLoop28878054  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jt)+1)%30)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop28878054 -> 28878053;
	ForLoop28878054 -> _JOIN_28878054;
	28870545 [label="28870545  scv_84=scv_84+A[(i+22)*ny+j]*x[j];...",shape=box];
	28870545 -> _JOIN_28870546;
	29094406 [label="29094406  double scv_58, scv_59, scv_60, scv_61, scv_62, scv_63, scv_64, scv_65;...",shape=box];
	_JOIN_28878136 [label="_JOIN_28878136None...",shape=box];
	_JOIN_28848149 [label="_JOIN_28848149None...",shape=box];
	_JOIN_28848149 -> ForLoop28848226;
	_JOIN_28849342 [label="_JOIN_28849342None...",shape=box];
	_JOIN_28849342 -> 28849344;
	_JOIN_28870469 [label="_JOIN_28870469None...",shape=box];
	_JOIN_28870469 -> ForLoop28870546;
	28875012 [label="28875012  int j;...",shape=box];
	28875012 -> ForLoop28876049;
	_JOIN_28875010 [label="_JOIN_28875010None...",shape=box];
	_JOIN_28875010 -> 28875012;
	_JOIN_28837174 [label="_JOIN_28837174None...",shape=box];
	_JOIN_28837174 -> ForLoop28837429;
	28881146 [label="28881146  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	_JOIN_28855961 [label="_JOIN_28855961None...",shape=box];
	_JOIN_28855961 -> ForLoop28856038;
	_JOIN_28837170 [label="_JOIN_28837170None...",shape=box];
	_JOIN_28837170 -> _JOIN_28837173;
	_JOIN_28837173 [label="_JOIN_28837173None...",shape=box];
	_JOIN_28837173 -> _JOIN_28837174;
	28870597 [label="28870597  scv_83=scv_83+A[(i+23)*ny+j]*x[j];...",shape=box];
	29054578 [label="29054578  double scv_57;...",shape=box];
	28852741 [label="28852741  scv_67=scv_67+A[(i+7)*ny+j]*x[j];...",shape=box];
	28486531 [label="28486531  int i;...",shape=box];
	_JOIN_28878128 [label="_JOIN_28878128None...",shape=box];
	_JOIN_28878128 -> _JOIN_28878129;
	_JOIN_28878129 [label="_JOIN_28878129None...",shape=box];
	_JOIN_28878129 -> _JOIN_28878130;
	_JOIN_28876129 [label="_JOIN_288expected=9369846271501.798828
actual=9369846271501.798828
76129None...",shape=box];
	_JOIN_28876129 -> _JOIN_28876131;
	28867197 [label="28867197  scv_62=scv_62+A[(i+19)*ny+j]*x[j];...",shape=box];
	28867197 -> _JOIN_28867198;
	_JOIN_28870546 [label="_JOIN_28870546None...",shape=box];
	_JOIN_28870546 -> 28870548;
	28845159 [label="28845159  int j;...",shape=box];
	28845159 -> ForLoop28845926;
	ForLoop28837427 [label="ForLoop28837427  for (k=kk; k<=min(ny-1,kk+255); k=k+1) {...",shape=box];
	ForLoop28837427 -> 28911633;
	ForLoop28837427 -> _JOIN_28837427;
	28868313 [label="28868313  scv_58=scv_58+A[(i+20)*ny+j]*x[j];...",shape=box];
	28868313 -> _JOIN_28868314;
	_JOIN_28829025 [label="_JOIN_28829025None...",shape=box];
	_JOIN_28829025 -> 28829026;
	28868316 [label="28868316  int j;...",shape=box];
	28868316 -> ForLoop28869353;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest117.exe __orio_perftest117.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest117.exe  
{'[1, 2, 5, 1, 6, 5, 0, 0, 10, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.087007}
{'[1, 2, 5, 1, 6, 5, 0, 0, 10, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.0865262}
{'[1, 2, 5, 1, 6, 5, 0, 0, 10, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.0865099}
{'[1, 2, 5, 1, 6, 5, 0, 0, 10, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.086719}
{'[1, 2, 5, 1, 6, 5, 0, 0, 10, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.086519}
{'[1, 2, 5, 1, 6, 5, 0, 0, 10, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.0865111}
{'[1, 2, 5, 1, 6, 5, 0, 0, 10, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.0865369}
{'[1, 2, 5, 1, 6, 5, 0, 0, 10, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.0864689}
{'[1, 2, 5, 1, 6, 5, 0, 0, 10, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.087008}
{'[1, 2, 5, 1, 6, 5, 0, 0, 10, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.0865939}
{'[1, 2, 5, 1, 6, 5, 0, 0, 10, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.0865731}
{'[1, 2, 5, 1, 6, 5, 0, 0, 10, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.087507}
{'[1, 2, 5, 1, 6, 5, 0, 0, 10, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.086555}
{'[1, 2, 5, 1, 6, 5, 0, 0, 10, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.0865591}
{'[1, 2, 5, 1, 6, 5, 0, 0, 10, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.086556}
{'[1, 2, 5, 1, 6, 5, 0, 0, 10, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.0865822}
{'[1, 2, 5, 1, 6, 5, 0, 0, 10, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.086499}
{'[1, 2, 5, 1, 6, 5, 0, 0, 10, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.086478}
{'[1, 2, 5, 1, 6, 5, 0, 0, 10, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.0864861}
{'[1, 2, 5, 1, 6, 5, 0, 0, 10, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.0864711}
{'[1, 2, 5, 1, 6, 5, 0, 0, 10, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.086494}
{'[1, 2, 5, 1, 6, 5, 0, 0, 10, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.0865178}
{'[1, 2, 5, 1, 6, 5, 0, 0, 10, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.0868568}
{'[1, 2, 5, 1, 6, 5, 0, 0, 10, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.0865152}
{'[1, 2, 5, 1, 6, 5, 0, 0, 10, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.0865459}
{'[1, 2, 5, 1, 6, 5, 0, 0, 10, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.0871069}
{'[1, 2, 5, 1, 6, 5, 0, 0, 10, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.0865111}
{'[1, 2, 5, 1, 6, 5, 0, 0, 10, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.0865319}
{'[1, 2, 5, 1, 6, 5, 0, 0, 10, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.0865831}
{'[1, 2, 5, 1, 6, 5, 0, 0, 10, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.086545}

out:
 ["{'[1, 2, 5, 1, 6, 5, 0, 0, 10, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.087007}", "{'[1, 2, 5, 1, 6, 5, 0, 0, 10, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.0865262}", "{'[1, 2, 5, 1, 6, 5, 0, 0, 10, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.0865099}", "{'[1, 2, 5, 1, 6, 5, 0, 0, 10, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.086719}", "{'[1, 2, 5, 1, 6, 5, 0, 0, 10, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.086519}", "{'[1, 2, 5, 1, 6, 5, 0, 0, 10, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.0865111}", "{'[1, 2, 5, 1, 6, 5, 0, 0, 10, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.0865369}", "{'[1, 2, 5, 1, 6, 5, 0, 0, 10, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.0864689}", "{'[1, 2, 5, 1, 6, 5, 0, 0, 10, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.087008}", "{'[1, 2, 5, 1, 6, 5, 0, 0, 10, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.0865939}", "{'[1, 2, 5, 1, 6, 5, 0, 0, 10, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.0865731}", "{'[1, 2, 5, 1, 6, 5, 0, 0, 10, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.087507}", "{'[1, 2, 5, 1, 6, 5, 0, 0, 10, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.086555}", "{'[1, 2, 5, 1, 6, 5, 0, 0, 10, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.0865591}", "{'[1, 2, 5, 1, 6, 5, 0, 0, 10, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.086556}", "{'[1, 2, 5, 1, 6, 5, 0, 0, 10, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.0865822}", "{'[1, 2, 5, 1, 6, 5, 0, 0, 10, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.086499}", "{'[1, 2, 5, 1, 6, 5, 0, 0, 10, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.086478}", "{'[1, 2, 5, 1, 6, 5, 0, 0, 10, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.0864861}", "{'[1, 2, 5, 1, 6, 5, 0, 0, 10, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.0864711}", "{'[1, 2, 5, 1, 6, 5, 0, 0, 10, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.086494}", "{'[1, 2, 5, 1, 6, 5, 0, 0, 10, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.0865178}", "{'[1, 2, 5, 1, 6, 5, 0, 0, 10, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.0868568}", "{'[1, 2, 5, 1, 6, 5, 0, 0, 10, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.0865152}", "{'[1, 2, 5, 1, 6, 5, 0, 0, 10, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.0865459}", "{'[1, 2, 5, 1, 6, 5, 0, 0, 10, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.0871069}", "{'[1, 2, 5, 1, 6, 5, 0, 0, 10, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.0865111}", "{'[1, 2, 5, 1, 6, 5, 0, 0, 10, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.0865319}", "{'[1, 2, 5, 1, 6, 5, 0, 0, 10, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.0865831}", "{'[1, 2, 5, 1, 6, 5, 0, 0, 10, 27, 29, 0, 1, 1, 0, 1, 1, 0]' : 0.086545}"]
returning from 'run': {'[1, 2, 5, 1, 6, 5, 0, 0, 10, 27, 29, 0, 1, 1, 0, 1, 1, 0]': ([0.087007, 0.0865262, 0.0865099, 0.086719, 0.086519, 0.0865111, 0.0865369, 0.0864689, 0.087008, 0.0865939, 0.0865731, 0.087507, 0.086555, 0.0865591, 0.086556, 0.0865822, 0.086499, 0.086478, 0.0864861, 0.0864711, 0.086494, 0.0865178, 0.0868568, 0.0865152, 0.0865459, 0.0871069, 0.0865111, 0.0865319, 0.0865831, 0.086545], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.087007, 0.0865262, 0.0865099, 0.086719, 0.086519, 0.0865111, 0.0865369, 0.0864689, 0.087008, 0.0865939, 0.0865731, 0.087507, 0.086555, 0.0865591, 0.086556, 0.0865822, 0.086499, 0.086478, 0.0864861, 0.0864711, 0.086494, 0.0865178, 0.0868568, 0.0865152, 0.0865459, 0.0871069, 0.0865111, 0.0865319, 0.0865831, 0.086545], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[1, 2, 5, 1, 6, 5, 0, 0, 10, 27, 29, 0, 1, 1, 0, 1, 1, 0]': ([0.087007, 0.0865262, 0.0865099, 0.086719, 0.086519, 0.0865111, 0.0865369, 0.0864689, 0.087008, 0.0865939, 0.0865731, 0.087507, 0.086555, 0.0865591, 0.086556, 0.0865822, 0.086499, 0.086478, 0.0864861, 0.0864711, 0.086494, 0.0865178, 0.0868568, 0.0865152, 0.0865459, 0.0871069, 0.0865111, 0.0865319, 0.0865831, 0.086545], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [6, 3, 1, 0, 2, 27, 21, 0, 1, 0, 0, 0]
Fixed Factors: {'ACOPY_x': 0, 'ACOPY_y': 0, 'T2_K': 5, 'T2_J': 6, 'VEC1': 1, 'SCR': 1}
Testing candidate 18: [6, 3, 1, 0, 6, 5, 0, 0, 2, 27, 21, 0, 1, 0, 0, 1, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	27
        Max loop nest depth: 	5
        Additions: 		3618
        Multiplications: 	1776
        Divisions: 		0
        Logical: 		0
        Reads: 			6850
        Writes: 		1105
        Comparisons:		27
        Gotos: 			0
        
digraph CFG {
	ForLoop29357191 [label="ForLoop29357191  for (i=it; i<=min(nx-1,ii+511)-27; i=i+28) {...",shape=box];
	ForLoop29357191 -> 29474047;
	ForLoop29357191 -> _JOIN_29357191;
	ForLoop29334599 [label="ForLoop29334599  for (it=ii; it<=min(nx-1,ii+511)-7; it=it+8) {...",shape=box];
	ForLoop29334599 -> 29383936;
	ForLoop29334599 -> _JOIN_29334599;
	ForLoop29357988 [label="ForLoop29357988  for (i=(min(nx-1,ii+511))-(((min(nx-1,ii+511))-(it)+1)%28)+1; i<=min(nx-1,ii+511); i=i+1) {...",shape=box];
	ForLoop29357988 -> 29479190;
	ForLoop29357988 -> _JOIN_29357988;
	_JOIN_29334597 [label="_JOIN_29334597None...",shape=box];
	_JOIN_29334597 -> 29383948;
	_JOIN_29334596 [label="_JOIN_29334596None...",shape=box];
	_JOIN_29334596 -> _JOIN_29334597;
	_JOIN_29334595 [label="_JOIN_29334595None...",shape=box];
	_JOIN_29334595 -> _JOIN_29334596;
	29478233 [label="29478233  double scv_85;...",shape=box];
	_JOIN_29334339 [label="_JOIN_29334339None...",shape=box];
	_JOIN_29334339 -> _JOIN_29334341;
	_JOIN_29357988 [label="_JOIN_29357988None...",shape=box];
	_JOIN_29357988 -> _JOIN_29357991;
	ForLoop29334597 [label="ForLoop29334597  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop29334597 -> ForLoop29334596;
	ForLoop29334597 -> _JOIN_29334597;
	ForLoop29334596 [label="ForLoop29334596  for (kk=kkk; kk<=min(ny-1,kkk+1008); kk=kk+16) {...",shape=box];
	ForLoop29334596 -> ForLoop29334595;
	ForLoop29334596 -> _JOIN_29334596;
	ForLoop29334595 [label="ForLoop29334595  for (k=kk; k<=min(ny-1,kk+15); k=k+1) {...",shape=box];
	ForLoop29334595 -> 29377794;
	ForLoop29334595 -> _JOIN_29334595;
	ForLoop29357984 [label="ForLoop29357984  for (k=kk; k<=min(ny-1,kk+15); k=k+1) {...",shape=box];
	ForLoop29357984 -> 29478233;
	ForLoop29357984 -> _JOIN_29357984;
	_JOIN_29334067 [label="_JOIN_29334067None...",shape=box];
	_JOIN_29334067 -> ForLoop29334339;
	_JOIN_29174676 [label="_JOIN_29174676None...",shape=box];
	_JOIN_29174676 -> 29328227;
	29366697 [label="29366697  double scv_23;...",shape=box];
	_JOIN_29357189 [label="_JOIN_29357189None...",shape=box];
	_JOIN_29357189 -> 29474065;
	_JOIN_29357986 [label="_JOIN_29357986None...",shape=box];
	_JOIN_29357986 -> 29479202;
	29357910 [label="29357910  scv_86=scv_86+A[i*ny+j]*x[j];...",shape=box];
	29357910 -> _JOIN_29357911;
	_JOIN_29357985 [label="_JOIN_29357985None...",shape=box];
	_JOIN_29357985 -> _JOIN_29357986;
	_JOIN_29357984 [label="_JOIN_29357984None...",shape=box];
	_JOIN_29357984 -> _JOIN_29357985;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 29174500;
	_JOIN_29357913 [label="_JOIN_29357913None...",shape=box];
	_JOIN_29357913 -> _JOIN_29357914;
	29174675 [label="29174675  y[i]=0.0;...",shape=box];
	29174675 -> _JOIN_29174676;
	_JOIN_29357991 [label="_JOIN_29357991None...",shape=box];
	29474047 [label="29474047  double scv_57, scv_58, scv_59, scv_60, scv_61, scv_62, scv_63, scv_64;...",shape=box];
	_JOIN_29356408 [label="_JOIN_29356408None...",shape=box];
	_JOIN_29356408 -> _JOIN_29356410;
	ForLoop29334342 [label="ForLoop29334342  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop29334342 -> ForLoop29334341;
	ForLoop29334342 -> _JOIN_29334342;
	_JOIN_29357191 [label="_JOIN_29357191None...",shape=box];
	_JOIN_29357191 -> ForLoop29357988;
	ForLoop29174607 [label="ForLoop29174607  for (i=0; i<=cbv_1; i=i+3) {...",shape=box];
	ForLoop29174607 -> 29174587;
	ForLoop29174607 -> _JOIN_29174607;
	ForLoop29334341 [label="ForLoop29334341  for (jj=jjj; jj<=min(ny-1,jjj+1984); jj=jj+64) {...",shape=box];
	ForLoop29334341 -> 29328299;
	ForLoop29334341 -> _JOIN_29334341;
	29357316 [label="29357316  scv_86=scv_86+A[i*ny+j]*x[j];...",shape=box];
	29414604 [label="29414604  double scv_55;...",shape=box];
	29474065 [label="29474065  tmp[(i+20)]=scv_57;...",shape=box];
	ForLoop29356408 [label="ForLoop29356408  for (j=(min(ny-1,jj+63))-(((min(ny-1,jj+63))-(jj)+1)%22)+1; j<=min(ny-1,jj+63); j=j+1) {...",shape=box];
	ForLoop29356408 -> 29414604;
	ForLoop29356408 -> _JOIN_29356408;
	29328227 [label="29328227  double x_copy;...",shape=box];
	29357276 [label="29357276  int j;...",shape=box];
	29357276 -> ForLoop29357843;
	ForLoop29334067 [label="ForLoop29334067  for (j=jj; j<=min(ny-1,jj+63)-21; j=j+22) {...",shape=box];
	ForLoop29334067 -> 29365957;
	ForLoop29334067 -> _JOIN_29334067;
	29383936 [label="29383936  double scv_25, scv_26, scv_27, scv_28, scv_29, scv_30, scv_31, scv_32;...",shape=box];
	_JOIN_29357187 [label="_JOIN_29357187None...",shape=box];
	_JOIN_29357187 -> _JOIN_29357189;
	ForLoop29357187 [label="ForLoop29357187  for (kk=kkk; kk<=min(ny-1,kkk+1008); kk=kk+16) {...",shape=box];
	ForLoop29357187 -> ForLoop29357185;
	ForLoop29357187 -> _JOIN_29357187;
	29174587 [label="29174587  y[i]=0.0;...",shape=box];
	ForLoop29357185 [label="ForLoop29357185  for (k=kk; k<=min(ny-1,kk+15); k=k+1) {...",shape=box];
	ForLoop29357185 -> 29453015;
	ForLoop29357185 -> _JOIN_29357185;
	ForLoop29357911 [label="ForLoop29357911  for (j=(min(ny-1,jj+63))-(((min(ny-1,jj+63))-(jj)+1)%22)+1; j<=min(ny-1,jj+63); j=j+1) {...",shape=box];
	ForLoop29357911 -> 29357910;
	ForLoop29357911 -> _JOIN_29357911;
	_JOIN_29334599 [label="_JOIN_29334599None...",shape=box];
	_JOIN_29334599 -> 29334600;
	ForLoop29357991 [label="ForLoop29357991  for (ii=0; ii<=nx-1; ii=ii+512) {...",shape=box];
	ForLoop29357991 -> ForLoop29334599;
	ForLoop29357991 -> _JOIN_29357991;
	ForLoop29357189 [label="ForLoop29357189  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop29357189 -> ForLoop29357187;
	ForLoop29357189 -> _JOIN_29357189;
	29479202 [label="29479202  tmp[i]=scv_86;...",shape=box];
	29479202 -> _JOIN_29357988;
	29383948 [label="29383948  tmp[it]=scv_25;...",shape=box];
	ForLoop29357986 [label="ForLoop29357986  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop29357986 -> ForLoop29357985;
	ForLoop29357986 -> _JOIN_29357986;
	29453015 [label="29453015  double scv_56;...",shape=box];
	_JOIN_29356412 [label="_JOIN_29356412None...",shape=box];
	_JOIN_29356412 -> ForLoop29357189;
	_JOIN_29357185 [label="_JOIN_29357185None...",shape=box];
	_JOIN_29357185 -> _JOIN_29357187;
	_JOIN_29334342 [label="_JOIN_29334342None...",shape=box];
	_JOIN_29334342 -> ForLoop29334597;
	ForLoop29357985 [label="ForLoop29357985  for (kk=kkk; kk<=min(ny-1,kkk+1008); kk=kk+16) {...",shape=box];
	ForLoop29357985 -> ForLoop29357984;
	ForLoop29357985 -> _JOIN_29357985;
	_JOIN_29334341 [label="_JOIN_29334341None...",shape=box];
	_JOIN_29334341 -> _JOIN_29334342;
	29174500 [label="29174500  int i;...",shape=box];
	29328299 [label="29328299  int j;...",shape=box];
	29328299 -> ForLoop29334067;
	_JOIN_29356410 [label="_JOIN_29356410None...",shape=box];
	_JOIN_29356410 -> _JOIN_29356412;
	ForLoop29357843 [label="ForLoop29357843  for (j=jj; j<=min(ny-1,jj+63)-21; j=j+22) {...",shape=box];
	ForLoop29357843 -> 29357316;
	ForLoop29357843 -> _JOIN_29357843;
	29174744 [label="29174744  register int cbv_2, cbv_3;...",shape=box];
	_JOIN_29357843 [label="_JOIN_29357843None...",shape=box];
	_JOIN_29357843 -> ForLoop29357911;
	_JOIN_29174607 [label="_JOIN_29174607None...",shape=box];
	_JOIN_29174607 -> 29174744;
	ForLoop29357913 [label="ForLoop29357913  for (jj=jjj; jj<=min(ny-1,jjj+1984); jj=jj+64) {...",shape=box];
	ForLoop29357913 -> 29357276;
	ForLoop29357913 -> _JOIN_29357913;
	ForLoop29357914 [label="ForLoop29357914  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop29357914 -> ForLoop29357913;
	ForLoop29357914 -> _JOIN_29357914;
	29412644 [label="29412644  double scv_33, scv_34, scv_35, scv_36, scv_37, scv_38, scv_39, scv_40;...",shape=box];
	ForLoop29356410 [label="ForLoop29356410  for (jj=jjj; jj<=min(ny-1,jjj+1984); jj=jj+64) {...",shape=box];
	ForLoop29356410 -> 29334901;
	ForLoop29356410 -> _JOIN_29356410;
	ForLoop29355556 [label="ForLoop29355556  for (j=jj; j<=min(ny-1,jj+63)-21; j=j+22) {...",shape=box];
	ForLoop29355556 -> 29412644;
	ForLoop29355556 -> _JOIN_29355556;
	ForLoop29356412 [label="ForLoop29356412  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop29356412 -> ForLoop29356410;
	ForLoop29356412 -> _JOIN_29356412;
	_JOIN_29357911 [label="_JOIN_29357911None...",shape=box];
	_JOIN_29357911 -> _JOIN_29357913;
	ForLoop29334339 [label="ForLoop29334339  for (j=(min(ny-1,jj+63))-(((min(ny-1,jj+63))-(jj)+1)%22)+1; j<=min(ny-1,jj+63); j=j+1) {...",shape=box];
	ForLoop29334339 -> 29366697;
	ForLoop29334339 -> _JOIN_29334339;
	29479190 [label="29479190  double scv_86;...",shape=box];
	29377794 [label="29377794  double scv_24;...",shape=box];
	_JOIN_29355556 [label="_JOIN_29355556None...",shape=box];
	_JOIN_29355556 -> ForLoop29356408;
	ForLoop29174676 [label="ForLoop29174676  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop29174676 -> 29174675;
	ForLoop29174676 -> _JOIN_2917expected=9369846271501.798828
actual=9369846271501.798828
4676;
	29334600 [label="29334600  int i;...",shape=box];
	29334600 -> ForLoop29357191;
	_JOIN_29357914 [label="_JOIN_29357914None...",shape=box];
	_JOIN_29357914 -> ForLoop29357986;
	29334901 [label="29334901  int j;...",shape=box];
	29365957 [label="29365957  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest118.exe __orio_perftest118.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest118.exe  
{'[6, 3, 1, 0, 6, 5, 0, 0, 2, 27, 21, 0, 1, 0, 0, 1, 1, 0]' : 0.089056}
{'[6, 3, 1, 0, 6, 5, 0, 0, 2, 27, 21, 0, 1, 0, 0, 1, 1, 0]' : 0.088913}
{'[6, 3, 1, 0, 6, 5, 0, 0, 2, 27, 21, 0, 1, 0, 0, 1, 1, 0]' : 0.08849}
{'[6, 3, 1, 0, 6, 5, 0, 0, 2, 27, 21, 0, 1, 0, 0, 1, 1, 0]' : 0.0884809}
{'[6, 3, 1, 0, 6, 5, 0, 0, 2, 27, 21, 0, 1, 0, 0, 1, 1, 0]' : 0.0884781}
{'[6, 3, 1, 0, 6, 5, 0, 0, 2, 27, 21, 0, 1, 0, 0, 1, 1, 0]' : 0.088449}
{'[6, 3, 1, 0, 6, 5, 0, 0, 2, 27, 21, 0, 1, 0, 0, 1, 1, 0]' : 0.08847}
{'[6, 3, 1, 0, 6, 5, 0, 0, 2, 27, 21, 0, 1, 0, 0, 1, 1, 0]' : 0.0885282}
{'[6, 3, 1, 0, 6, 5, 0, 0, 2, 27, 21, 0, 1, 0, 0, 1, 1, 0]' : 0.0885999}
{'[6, 3, 1, 0, 6, 5, 0, 0, 2, 27, 21, 0, 1, 0, 0, 1, 1, 0]' : 0.0885401}
{'[6, 3, 1, 0, 6, 5, 0, 0, 2, 27, 21, 0, 1, 0, 0, 1, 1, 0]' : 0.0884318}
{'[6, 3, 1, 0, 6, 5, 0, 0, 2, 27, 21, 0, 1, 0, 0, 1, 1, 0]' : 0.0885441}
{'[6, 3, 1, 0, 6, 5, 0, 0, 2, 27, 21, 0, 1, 0, 0, 1, 1, 0]' : 0.0886068}
{'[6, 3, 1, 0, 6, 5, 0, 0, 2, 27, 21, 0, 1, 0, 0, 1, 1, 0]' : 0.0885229}
{'[6, 3, 1, 0, 6, 5, 0, 0, 2, 27, 21, 0, 1, 0, 0, 1, 1, 0]' : 0.0884981}
{'[6, 3, 1, 0, 6, 5, 0, 0, 2, 27, 21, 0, 1, 0, 0, 1, 1, 0]' : 0.088433}
{'[6, 3, 1, 0, 6, 5, 0, 0, 2, 27, 21, 0, 1, 0, 0, 1, 1, 0]' : 0.0884531}
{'[6, 3, 1, 0, 6, 5, 0, 0, 2, 27, 21, 0, 1, 0, 0, 1, 1, 0]' : 0.0884941}
{'[6, 3, 1, 0, 6, 5, 0, 0, 2, 27, 21, 0, 1, 0, 0, 1, 1, 0]' : 0.088851}
{'[6, 3, 1, 0, 6, 5, 0, 0, 2, 27, 21, 0, 1, 0, 0, 1, 1, 0]' : 0.0885711}
{'[6, 3, 1, 0, 6, 5, 0, 0, 2, 27, 21, 0, 1, 0, 0, 1, 1, 0]' : 0.088537}
{'[6, 3, 1, 0, 6, 5, 0, 0, 2, 27, 21, 0, 1, 0, 0, 1, 1, 0]' : 0.088439}
{'[6, 3, 1, 0, 6, 5, 0, 0, 2, 27, 21, 0, 1, 0, 0, 1, 1, 0]' : 0.0885181}
{'[6, 3, 1, 0, 6, 5, 0, 0, 2, 27, 21, 0, 1, 0, 0, 1, 1, 0]' : 0.0885088}
{'[6, 3, 1, 0, 6, 5, 0, 0, 2, 27, 21, 0, 1, 0, 0, 1, 1, 0]' : 0.0885651}
{'[6, 3, 1, 0, 6, 5, 0, 0, 2, 27, 21, 0, 1, 0, 0, 1, 1, 0]' : 0.0884929}
{'[6, 3, 1, 0, 6, 5, 0, 0, 2, 27, 21, 0, 1, 0, 0, 1, 1, 0]' : 0.0884821}
{'[6, 3, 1, 0, 6, 5, 0, 0, 2, 27, 21, 0, 1, 0, 0, 1, 1, 0]' : 0.088398}
{'[6, 3, 1, 0, 6, 5, 0, 0, 2, 27, 21, 0, 1, 0, 0, 1, 1, 0]' : 0.0884829}
{'[6, 3, 1, 0, 6, 5, 0, 0, 2, 27, 21, 0, 1, 0, 0, 1, 1, 0]' : 0.088526}

out:
 ["{'[6, 3, 1, 0, 6, 5, 0, 0, 2, 27, 21, 0, 1, 0, 0, 1, 1, 0]' : 0.089056}", "{'[6, 3, 1, 0, 6, 5, 0, 0, 2, 27, 21, 0, 1, 0, 0, 1, 1, 0]' : 0.088913}", "{'[6, 3, 1, 0, 6, 5, 0, 0, 2, 27, 21, 0, 1, 0, 0, 1, 1, 0]' : 0.08849}", "{'[6, 3, 1, 0, 6, 5, 0, 0, 2, 27, 21, 0, 1, 0, 0, 1, 1, 0]' : 0.0884809}", "{'[6, 3, 1, 0, 6, 5, 0, 0, 2, 27, 21, 0, 1, 0, 0, 1, 1, 0]' : 0.0884781}", "{'[6, 3, 1, 0, 6, 5, 0, 0, 2, 27, 21, 0, 1, 0, 0, 1, 1, 0]' : 0.088449}", "{'[6, 3, 1, 0, 6, 5, 0, 0, 2, 27, 21, 0, 1, 0, 0, 1, 1, 0]' : 0.08847}", "{'[6, 3, 1, 0, 6, 5, 0, 0, 2, 27, 21, 0, 1, 0, 0, 1, 1, 0]' : 0.0885282}", "{'[6, 3, 1, 0, 6, 5, 0, 0, 2, 27, 21, 0, 1, 0, 0, 1, 1, 0]' : 0.0885999}", "{'[6, 3, 1, 0, 6, 5, 0, 0, 2, 27, 21, 0, 1, 0, 0, 1, 1, 0]' : 0.0885401}", "{'[6, 3, 1, 0, 6, 5, 0, 0, 2, 27, 21, 0, 1, 0, 0, 1, 1, 0]' : 0.0884318}", "{'[6, 3, 1, 0, 6, 5, 0, 0, 2, 27, 21, 0, 1, 0, 0, 1, 1, 0]' : 0.0885441}", "{'[6, 3, 1, 0, 6, 5, 0, 0, 2, 27, 21, 0, 1, 0, 0, 1, 1, 0]' : 0.0886068}", "{'[6, 3, 1, 0, 6, 5, 0, 0, 2, 27, 21, 0, 1, 0, 0, 1, 1, 0]' : 0.0885229}", "{'[6, 3, 1, 0, 6, 5, 0, 0, 2, 27, 21, 0, 1, 0, 0, 1, 1, 0]' : 0.0884981}", "{'[6, 3, 1, 0, 6, 5, 0, 0, 2, 27, 21, 0, 1, 0, 0, 1, 1, 0]' : 0.088433}", "{'[6, 3, 1, 0, 6, 5, 0, 0, 2, 27, 21, 0, 1, 0, 0, 1, 1, 0]' : 0.0884531}", "{'[6, 3, 1, 0, 6, 5, 0, 0, 2, 27, 21, 0, 1, 0, 0, 1, 1, 0]' : 0.0884941}", "{'[6, 3, 1, 0, 6, 5, 0, 0, 2, 27, 21, 0, 1, 0, 0, 1, 1, 0]' : 0.088851}", "{'[6, 3, 1, 0, 6, 5, 0, 0, 2, 27, 21, 0, 1, 0, 0, 1, 1, 0]' : 0.0885711}", "{'[6, 3, 1, 0, 6, 5, 0, 0, 2, 27, 21, 0, 1, 0, 0, 1, 1, 0]' : 0.088537}", "{'[6, 3, 1, 0, 6, 5, 0, 0, 2, 27, 21, 0, 1, 0, 0, 1, 1, 0]' : 0.088439}", "{'[6, 3, 1, 0, 6, 5, 0, 0, 2, 27, 21, 0, 1, 0, 0, 1, 1, 0]' : 0.0885181}", "{'[6, 3, 1, 0, 6, 5, 0, 0, 2, 27, 21, 0, 1, 0, 0, 1, 1, 0]' : 0.0885088}", "{'[6, 3, 1, 0, 6, 5, 0, 0, 2, 27, 21, 0, 1, 0, 0, 1, 1, 0]' : 0.0885651}", "{'[6, 3, 1, 0, 6, 5, 0, 0, 2, 27, 21, 0, 1, 0, 0, 1, 1, 0]' : 0.0884929}", "{'[6, 3, 1, 0, 6, 5, 0, 0, 2, 27, 21, 0, 1, 0, 0, 1, 1, 0]' : 0.0884821}", "{'[6, 3, 1, 0, 6, 5, 0, 0, 2, 27, 21, 0, 1, 0, 0, 1, 1, 0]' : 0.088398}", "{'[6, 3, 1, 0, 6, 5, 0, 0, 2, 27, 21, 0, 1, 0, 0, 1, 1, 0]' : 0.0884829}", "{'[6, 3, 1, 0, 6, 5, 0, 0, 2, 27, 21, 0, 1, 0, 0, 1, 1, 0]' : 0.088526}"]
returning from 'run': {'[6, 3, 1, 0, 6, 5, 0, 0, 2, 27, 21, 0, 1, 0, 0, 1, 1, 0]': ([0.089056, 0.088913, 0.08849, 0.0884809, 0.0884781, 0.088449, 0.08847, 0.0885282, 0.0885999, 0.0885401, 0.0884318, 0.0885441, 0.0886068, 0.0885229, 0.0884981, 0.088433, 0.0884531, 0.0884941, 0.088851, 0.0885711, 0.088537, 0.088439, 0.0885181, 0.0885088, 0.0885651, 0.0884929, 0.0884821, 0.088398, 0.0884829, 0.088526], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.089056, 0.088913, 0.08849, 0.0884809, 0.0884781, 0.088449, 0.08847, 0.0885282, 0.0885999, 0.0885401, 0.0884318, 0.0885441, 0.0886068, 0.0885229, 0.0884981, 0.088433, 0.0884531, 0.0884941, 0.088851, 0.0885711, 0.088537, 0.088439, 0.0885181, 0.0885088, 0.0885651, 0.0884929, 0.0884821, 0.088398, 0.0884829, 0.088526], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[6, 3, 1, 0, 6, 5, 0, 0, 2, 27, 21, 0, 1, 0, 0, 1, 1, 0]': ([0.089056, 0.088913, 0.08849, 0.0884809, 0.0884781, 0.088449, 0.08847, 0.0885282, 0.0885999, 0.0885401, 0.0884318, 0.0885441, 0.0886068, 0.0885229, 0.0884981, 0.088433, 0.0884531, 0.0884941, 0.088851, 0.0885711, 0.088537, 0.088439, 0.0885181, 0.0885088, 0.0885651, 0.0884929, 0.0884821, 0.088398, 0.0884829, 0.088526], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [2, 3, 1, 4, 2, 23, 0, 2, 0, 0, 0, 1]
Fixed Factors: {'ACOPY_x': 0, 'ACOPY_y': 0, 'T2_K': 5, 'T2_J': 6, 'VEC1': 1, 'SCR': 1}
Testing candidate 19: [2, 3, 1, 4, 6, 5, 0, 0, 2, 23, 0, 2, 0, 0, 0, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	6
        Additions: 		557
        Multiplications: 	250
        Divisions: 		0
        Logical: 		0
        Reads: 			1272
        Writes: 		272
        Comparisons:		20
        Gotos: 			0
        
digraph CFG {
	29566493 [label="29566493  register int cbv_3, cbv_4;...",shape=box];
	_JOIN_29537638 [label="_JOIN_29537638None...",shape=box];
	_JOIN_29537638 -> ForLoop29540624;
	_JOIN_29497997 [label="_JOIN_29497997None...",shape=box];
	_JOIN_29497997 -> 29498134;
	ForLoop29537634 [label="ForLoop29537634  for (j=jj; j<=cbv_1; j=j+1) {...",shape=box];
	ForLoop29537634 -> 29542039;
	ForLoop29537634 -> _JOIN_29537634;
	ForLoop29537636 [label="ForLoop29537636  for (jj=jjj; jj<=min(ny-1,jjj+1984); jj=jj+64) {...",shape=box];
	ForLoop29537636 -> 29564624;
	ForLoop29537636 -> _JOIN_29537636;
	ForLoop29537638 [label="ForLoop29537638  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop29537638 -> ForLoop29537636;
	ForLoop29537638 -> _JOIN_29537638;
	_JOIN_29537634 [label="_JOIN_29537634None...",shape=box];
	_JOIN_29537634 -> _JOIN_29537636;
	_JOIN_29537636 [label="_JOIN_29537636None...",shape=box];
	_JOIN_29537636 -> _JOIN_29537638;
	29556613 [label="29556613  double scv_30, scv_31, scv_32;...",shape=box];
	_JOIN_29540749 [label="_JOIN_29540749None...",shape=box];
	_JOIN_29540749 -> _JOIN_29540750;
	29564624 [label="29564624  register int cbv_1;...",shape=box];
	29536630 [label="29536630  double x_copy;...",shape=box];
	29566573 [label="29566573  register int cbv_5;...",shape=box];
	_JOIN_29539953 [label="_JOIN_29539953None...",shape=box];
	_JOIN_29539953 -> 29566493;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 29497890;
	29497890 [label="29497890  int i;...",shape=box];
	29557560 [label="29557560  double scv_34;...",shape=box];
	29546516 [label="29546516  double scv_2, scv_3, scv_4;...",shape=box];
	_JOIN_29540620 [label="_JOIN_29540620None...",shape=box];
	_JOIN_29540620 -> _JOIN_29540622;
	ForLoop29540751 [label="ForLoop29540751  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop29540751 -> ForLoop29540750;
	ForLoop29540751 -> _JOIN_29540751;
	_JOIN_29540622 [label="_JOIN_29540622None...",shape=box];
	_JOIN_29540622 -> _JOIN_29540624;
	29542039 [label="29542039  double scv_1;...",shape=box];
	_JOIN_29540624 [label="_JOIN_29540624None...",shape=box];
	_JOIN_29540624 -> 29555716;
	_JOIN_29540954 [label="_JOIN_29540954None...",shape=box];
	_JOIN_29540954 -> _JOIN_29540956;
	ForLoop29498066 [label="ForLoop29498066  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop29498066 -> 29498065;
	ForLoop29498066 -> _JOIN_29498066;
	29566786 [label="29566786  register int cbv_7, cbv_8;...",shape=box];
	_JOIN_29540956 [label="_JOIN_29540956None...",shape=box];
	_JOIN_29540956 -> _JOIN_29540957;
	_JOIN_29540957 [label="_JOIN_29540957None...",shape=box];
	ForLoop29497997 [label="ForLoop29497997  for (i=0; i<=cbv_1; i=i+3) {...",shape=box];
	ForLoop29497997 -> 29497977;
	ForLoop29497997 -> _JOIN_29497997;
	_JOIN_29540952 [label="_JOIN_29540952None...",shape=box];
	_JOIN_29540952 -> 29557572;
	_JOIN_29540881 [label="_JOIN_29540881None...",shape=box];
	_JOIN_29540881 -> 29566786;
	ForLoop29540952 [label="ForLoop29540952  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop29540952 -> ForLoop29540951;
	ForLoop29540952 -> _JOIN_29540952;
	ForLoop29540620 [label="ForLoop29540620  for (k=cbv_3; k<=cbv_4; k=k+1) {...",shape=box];
	ForLoop29540620 -> 29547611;
	ForLoop29540620 -> _JOIN_29540620;
	ForLoop29540951 [label="ForLoop29540951  for (kk=kkk; kk<=min(ny-1,kkk+1008); kk=kk+16) {...",shape=box];
	ForLoop29540951 -> 29540783;
	ForLoop29540951 -> _JOIN_29540951;
	ForLoop29540956 [label="ForLoop29540956  for (ii=iii; ii<=min(nx-1,iii+480); ii=ii+32) {...",shape=box];
	ForLoop29540956 -> 29536663;
	ForLoop29540956 -> _JOIN_29540956;
	ForLoop29540957 [label="ForLoop29540957  for (iii=0; iii<=nx-1; iii=iii+512) {...",shape=box];
	ForLoop29540957 -> ForLoop29540956;
	ForLoop29540957 -> _JOIN_29540957;
	ForLoop29540954 [label="ForLoop29540954  for (i=(min(nx-1,ii+31))-(((min(nx-1,ii+31))-(ii)+1)%24)+1; i<=min(nx-1,ii+31); i=i+1) {...",shape=box];
	ForLoop29540954 -> 29557560;
	ForLoop29540954 -> _JOIN_29540954;
	29540783 [label="29540783  int k;...",shape=box];
	29536663 [label="29536663  int i;...",shape=box];
	29536663 -> ForLoop29540626;
	29537670 [label="29537670  int k;...",shape=box];
	_JOIN_29540951 [label="_JOIN_29540951None...",shape=box];
	_JOIN_29540951 -> _JOIN_29540952;
	29557572 [label="29557572  tmp[i]=scv_34;...",shape=box];
	29557572 -> _JOIN_29540954;
	ForLoop29540949 [label="ForLoop29540949  for (k=cbv_7; k<=cbv_8; k=k+1) {...",shape=box];
	ForLoop29540949 -> 29556741;
	ForLoop29540949 -> _JOIN_29540949;
	29498065 [label="29498065  y[i]=0.0;...",shape=box];
	29498065 -> _JOIN_29498066;
	29498134 [label="29498134  register int cbv_2, cbv_3;...",shape=box];
	_JOIN_29540750 [label="_JOIN_29540750None...",shape=box];
	_JOIN_29540750 -> _JOIN_29540751;
	_JOIN_29540751 [label="_JOIN_29540751None...",shape=box];
	_JOIN_29540751 -> ForLoop29540952;
	29540748 [label="29540748  scv_34=scv_34+A[i*ny+j]*x[j];...",shape=box];
	29540748 -> _JOIN_29540749;
	29556741 [label="29556741  double scv_33;...",shape=box];
	ForLoop29540749 [label="ForLoop29540749  for (j=jj; j<=cbv_5; j=j+1) {...",shape=box];
	ForLoop29540749 -> 29540748;
	ForLoop29540749 -> _JOIN_29540749;expected=9369846271501.798828
actual=9369846271501.798828

	_JOIN_29498066 [label="_JOIN_29498066None...",shape=box];
	_JOIN_29498066 -> 29536630;
	ForLoop29540881 [label="ForLoop29540881  for (k=kk; k<=cbv_6; k=k+3) {...",shape=box];
	ForLoop29540881 -> 29556613;
	ForLoop29540881 -> _JOIN_29540881;
	29555698 [label="29555698  double scv_6, scv_7, scv_8, scv_9, scv_10, scv_11, scv_12, scv_13;...",shape=box];
	29547611 [label="29547611  double scv_5;...",shape=box];
	ForLoop29540624 [label="ForLoop29540624  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop29540624 -> ForLoop29540622;
	ForLoop29540624 -> _JOIN_29540624;
	ForLoop29540750 [label="ForLoop29540750  for (jj=jjj; jj<=min(ny-1,jjj+1984); jj=jj+64) {...",shape=box];
	ForLoop29540750 -> 29566573;
	ForLoop29540750 -> _JOIN_29540750;
	ForLoop29540626 [label="ForLoop29540626  for (i=ii; i<=min(nx-1,ii+31)-23; i=i+24) {...",shape=box];
	ForLoop29540626 -> 29555698;
	ForLoop29540626 -> _JOIN_29540626;
	29497977 [label="29497977  y[i]=0.0;...",shape=box];
	ForLoop29540622 [label="ForLoop29540622  for (kk=kkk; kk<=min(ny-1,kkk+1008); kk=kk+16) {...",shape=box];
	ForLoop29540622 -> 29537670;
	ForLoop29540622 -> _JOIN_29540622;
	_JOIN_29540626 [label="_JOIN_29540626None...",shape=box];
	_JOIN_29540626 -> ForLoop29540954;
	29555716 [label="29555716  tmp[(i+20)]=scv_6;...",shape=box];
	_JOIN_29540949 [label="_JOIN_29540949None...",shape=box];
	_JOIN_29540949 -> _JOIN_29540951;
	ForLoop29539953 [label="ForLoop29539953  for (k=kk; k<=cbv_2; k=k+3) {...",shape=box];
	ForLoop29539953 -> 29546516;
	ForLoop29539953 -> _JOIN_29539953;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest119.exe __orio_perftest119.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest119.exe  
{'[2, 3, 1, 4, 6, 5, 0, 0, 2, 23, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.123446}
{'[2, 3, 1, 4, 6, 5, 0, 0, 2, 23, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.122094}
{'[2, 3, 1, 4, 6, 5, 0, 0, 2, 23, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.122142}
{'[2, 3, 1, 4, 6, 5, 0, 0, 2, 23, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.122041}
{'[2, 3, 1, 4, 6, 5, 0, 0, 2, 23, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.122055}
{'[2, 3, 1, 4, 6, 5, 0, 0, 2, 23, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.122012}
{'[2, 3, 1, 4, 6, 5, 0, 0, 2, 23, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.122009}
{'[2, 3, 1, 4, 6, 5, 0, 0, 2, 23, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.122112}
{'[2, 3, 1, 4, 6, 5, 0, 0, 2, 23, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.122222}
{'[2, 3, 1, 4, 6, 5, 0, 0, 2, 23, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.122075}
{'[2, 3, 1, 4, 6, 5, 0, 0, 2, 23, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.122083}
{'[2, 3, 1, 4, 6, 5, 0, 0, 2, 23, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.122485}
{'[2, 3, 1, 4, 6, 5, 0, 0, 2, 23, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.122087}
{'[2, 3, 1, 4, 6, 5, 0, 0, 2, 23, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.122139}
{'[2, 3, 1, 4, 6, 5, 0, 0, 2, 23, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.122064}
{'[2, 3, 1, 4, 6, 5, 0, 0, 2, 23, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.122089}
{'[2, 3, 1, 4, 6, 5, 0, 0, 2, 23, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.12207}
{'[2, 3, 1, 4, 6, 5, 0, 0, 2, 23, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.123196}
{'[2, 3, 1, 4, 6, 5, 0, 0, 2, 23, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.122023}
{'[2, 3, 1, 4, 6, 5, 0, 0, 2, 23, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.122277}
{'[2, 3, 1, 4, 6, 5, 0, 0, 2, 23, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.122051}
{'[2, 3, 1, 4, 6, 5, 0, 0, 2, 23, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.122088}
{'[2, 3, 1, 4, 6, 5, 0, 0, 2, 23, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.122003}
{'[2, 3, 1, 4, 6, 5, 0, 0, 2, 23, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.122357}
{'[2, 3, 1, 4, 6, 5, 0, 0, 2, 23, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.122184}
{'[2, 3, 1, 4, 6, 5, 0, 0, 2, 23, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.122354}
{'[2, 3, 1, 4, 6, 5, 0, 0, 2, 23, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.12206}
{'[2, 3, 1, 4, 6, 5, 0, 0, 2, 23, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.122159}
{'[2, 3, 1, 4, 6, 5, 0, 0, 2, 23, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.122089}
{'[2, 3, 1, 4, 6, 5, 0, 0, 2, 23, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.122051}

out:
 ["{'[2, 3, 1, 4, 6, 5, 0, 0, 2, 23, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.123446}", "{'[2, 3, 1, 4, 6, 5, 0, 0, 2, 23, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.122094}", "{'[2, 3, 1, 4, 6, 5, 0, 0, 2, 23, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.122142}", "{'[2, 3, 1, 4, 6, 5, 0, 0, 2, 23, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.122041}", "{'[2, 3, 1, 4, 6, 5, 0, 0, 2, 23, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.122055}", "{'[2, 3, 1, 4, 6, 5, 0, 0, 2, 23, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.122012}", "{'[2, 3, 1, 4, 6, 5, 0, 0, 2, 23, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.122009}", "{'[2, 3, 1, 4, 6, 5, 0, 0, 2, 23, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.122112}", "{'[2, 3, 1, 4, 6, 5, 0, 0, 2, 23, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.122222}", "{'[2, 3, 1, 4, 6, 5, 0, 0, 2, 23, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.122075}", "{'[2, 3, 1, 4, 6, 5, 0, 0, 2, 23, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.122083}", "{'[2, 3, 1, 4, 6, 5, 0, 0, 2, 23, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.122485}", "{'[2, 3, 1, 4, 6, 5, 0, 0, 2, 23, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.122087}", "{'[2, 3, 1, 4, 6, 5, 0, 0, 2, 23, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.122139}", "{'[2, 3, 1, 4, 6, 5, 0, 0, 2, 23, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.122064}", "{'[2, 3, 1, 4, 6, 5, 0, 0, 2, 23, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.122089}", "{'[2, 3, 1, 4, 6, 5, 0, 0, 2, 23, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.12207}", "{'[2, 3, 1, 4, 6, 5, 0, 0, 2, 23, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.123196}", "{'[2, 3, 1, 4, 6, 5, 0, 0, 2, 23, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.122023}", "{'[2, 3, 1, 4, 6, 5, 0, 0, 2, 23, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.122277}", "{'[2, 3, 1, 4, 6, 5, 0, 0, 2, 23, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.122051}", "{'[2, 3, 1, 4, 6, 5, 0, 0, 2, 23, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.122088}", "{'[2, 3, 1, 4, 6, 5, 0, 0, 2, 23, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.122003}", "{'[2, 3, 1, 4, 6, 5, 0, 0, 2, 23, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.122357}", "{'[2, 3, 1, 4, 6, 5, 0, 0, 2, 23, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.122184}", "{'[2, 3, 1, 4, 6, 5, 0, 0, 2, 23, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.122354}", "{'[2, 3, 1, 4, 6, 5, 0, 0, 2, 23, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.12206}", "{'[2, 3, 1, 4, 6, 5, 0, 0, 2, 23, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.122159}", "{'[2, 3, 1, 4, 6, 5, 0, 0, 2, 23, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.122089}", "{'[2, 3, 1, 4, 6, 5, 0, 0, 2, 23, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.122051}"]
returning from 'run': {'[2, 3, 1, 4, 6, 5, 0, 0, 2, 23, 0, 2, 0, 0, 0, 1, 1, 1]': ([0.123446, 0.122094, 0.122142, 0.122041, 0.122055, 0.122012, 0.122009, 0.122112, 0.122222, 0.122075, 0.122083, 0.122485, 0.122087, 0.122139, 0.122064, 0.122089, 0.12207, 0.123196, 0.122023, 0.122277, 0.122051, 0.122088, 0.122003, 0.122357, 0.122184, 0.122354, 0.12206, 0.122159, 0.122089, 0.122051], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.123446, 0.122094, 0.122142, 0.122041, 0.122055, 0.122012, 0.122009, 0.122112, 0.122222, 0.122075, 0.122083, 0.122485, 0.122087, 0.122139, 0.122064, 0.122089, 0.12207, 0.123196, 0.122023, 0.122277, 0.122051, 0.122088, 0.122003, 0.122357, 0.122184, 0.122354, 0.12206, 0.122159, 0.122089, 0.122051], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[2, 3, 1, 4, 6, 5, 0, 0, 2, 23, 0, 2, 0, 0, 0, 1, 1, 1]': ([0.123446, 0.122094, 0.122142, 0.122041, 0.122055, 0.122012, 0.122009, 0.122112, 0.122222, 0.122075, 0.122083, 0.122485, 0.122087, 0.122139, 0.122064, 0.122089, 0.12207, 0.123196, 0.122023, 0.122277, 0.122051, 0.122088, 0.122003, 0.122357, 0.122184, 0.122354, 0.12206, 0.122159, 0.122089, 0.122051], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [0, 1, 3, 0, 1, 15, 13, 0, 0, 1, 0, 1]
Fixed Factors: {'ACOPY_x': 0, 'ACOPY_y': 0, 'T2_K': 5, 'T2_J': 6, 'VEC1': 1, 'SCR': 1}
Testing candidate 20: [0, 1, 3, 0, 6, 5, 0, 0, 1, 15, 13, 0, 0, 1, 0, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	50
        Max loop nest depth: 	4
        Additions: 		2102
        Multiplications: 	816
        Divisions: 		0
        Logical: 		0
        Reads: 			3802
        Writes: 		632
        Comparisons:		50
        Gotos: 			0
        
digraph CFG {
	_JOIN_29635639 [label="_JOIN_29635639None...",shape=box];
	_JOIN_29635639 -> 29695617;
	29626640 [label="29626640  scv_11=scv_11+A[(i+1)*ny+j]*x[j];...",shape=box];
	ForLoop29629449 [label="ForLoop29629449  for (j=cbv_18; j<=cbv_19; j=j+1) {...",shape=box];
	ForLoop29629449 -> 29629448;
	ForLoop29629449 -> _JOIN_29629449;
	29635925 [label="29635925  int j;...",shape=box];
	ForLoop29632804 [label="ForLoop29632804  for (j=jt; j<=cbv_35; j=j+14) {...",shape=box];
	ForLoop29632804 -> 29632360;
	ForLoop29632804 -> _JOIN_29632804;
	_JOIN_29635637 [label="_JOIN_29635637None...",shape=box];
	_JOIN_29635637 -> _JOIN_29635639;
	_JOIN_29634025 [label="_JOIN_29634025None...",shape=box];
	_JOIN_29634025 -> 29634027;
	29700004 [label="29700004  double scv_27;...",shape=box];
	29627784 [label="29627784  scv_13=scv_13+A[(i+3)*ny+j]*x[j];...",shape=box];
	ForLoop29635172 [label="ForLoop29635172  for (jj=jjj; jj<=min(ny-1,jjj+2032); jj=jj+16) {...",shape=box];
	ForLoop29635172 -> 29702528;
	ForLoop29635172 -> _JOIN_29635172;
	ForLoop29635174 [label="ForLoop29635174  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop29635174 -> ForLoop29635172;
	ForLoop29635174 -> _JOIN_29635174;
	ForLoop29567153 [label="ForLoop29567153  for (i=0; i<=cbv_1; i=i+2) {...",shape=box];
	ForLoop29567153 -> 29567142;
	ForLoop29567153 -> _JOIN_29567153;
	ForLoop29634597 [label="ForLoop29634597  for (j=cbv_45; j<=cbv_46; j=j+1) {...",shape=box];
	ForLoop29634597 -> 29634596;
	ForLoop29634597 -> _JOIN_29634597;
	ForLoop29626589 [label="ForLoop29626589  for (j=cbv_3; j<=cbv_4; j=j+1) {...",shape=box];
	ForLoop29626589 -> 29626588;
	ForLoop29626589 -> _JOIN_29626589;
	_JOIN_29628877 [label="_JOIN_29628877None...",shape=box];
	_JOIN_29628877 -> 29628879;
	29707210 [label="29707210  register int cbv_30, cbv_31;...",shape=box];
	29630020 [label="29630020  scv_18=scv_18+A[(i+6)*ny+j]*x[j];...",shape=box];
	29630020 -> _JOIN_29630021;
	29630023 [label="29630023  int j;...",shape=box];
	29567142 [label="29567142  y[i]=0.0;...",shape=box];
	29632360 [label="29632360  scv_22=scv_22+A[(i+11)*ny+j]*x[j];...",shape=box];
	ForLoop29629372 [label="ForLoop29629372  for (j=jt; j<=cbv_17; j=j+14) {...",shape=box];
	ForLoop29629372 -> 29628928;
	ForLoop29629372 -> _JOIN_29629372;
	_JOIN_29631088 [label="_JOIN_29631088None...",shape=box];
	_JOIN_29631088 -> 29706734;
	_JOIN_29628228 [label="_JOIN_29628228None...",shape=box];
	_JOIN_29628228 -> 29704354;
	29634648 [label="29634648  scv_19=scv_19+A[(i+15)*ny+j]*x[j];...",shape=box];
	29631216 [label="29631216  scv_24=scv_24+A[(i+9)*ny+j]*x[j];...",shape=box];
	_JOIN_29627733 [label="_JOIN_29627733None...",shape=box];
	_JOIN_29627733 -> 29627735;
	29628928 [label="29628928  scv_20=scv_20+A[(i+5)*ny+j]*x[j];...",shape=box];
	_JOIN_29628305 [label="_JOIN_29628305None...",shape=box];
	_JOIN_29628305 -> 29628307;
	ForLoop29635169 [label="ForLoop29635169  for (j=cbv_48; j<=cbv_49; j=j+1) {...",shape=box];
	ForLoop29635169 -> 29635168;
	ForLoop29635169 -> _JOIN_29635169;
	_JOIN_29636435 [label="_JOIN_29636435None...",shape=box];
	_JOIN_29636435 -> _JOIN_29636436;
	_JOIN_29634597 [label="_JOIN_29634597None...",shape=box];
	_JOIN_29634597 -> 29634599;
	_JOIN_29626521 [label="_JOIN_29626521None...",shape=box];
	_JOIN_29626521 -> 29702926;
	29710613 [label="29710613  register int cbv_51;...",shape=box];
	_JOIN_29626153 [label="_JOIN_29626153None...",shape=box];
	_JOIN_29626153 -> 29626154;
	29636359 [label="29636359  scv_27=scv_27+A[i*ny+j]*x[j];...",shape=box];
	29636359 -> _JOIN_29636360;
	_JOIN_29636436 [label="_JOIN_29636436None...",shape=box];
	_JOIN_29636436 -> 29700016;
	ForLoop29567222 [label="ForLoop29567222  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop29567222 -> 29567221;
	ForLoop29567222 -> _JOIN_29567222;
	29703402 [label="29703402  register int cbv_6, cbv_7;...",shape=box];
	29631739 [label="29631739  int j;...",shape=box];
	ForLoop29632232 [label="ForLoop29632232  for (j=jt; j<=cbv_32; j=j+14) {...",shape=box];
	ForLoop29632232 -> 29631788;
	ForLoop29632232 -> _JOIN_29632232;
	_JOIN_29635635 [label="_JOIN_29635635None...",shape=box];
	_JOIN_29635635 -> _JOIN_29635637;
	ForLoop29627656 [label="ForLoop29627656  for (j=jt; j<=cbv_8; j=j+14) {...",shape=box];
	ForLoop29627656 -> 29627212;
	ForLoop29627656 -> _JOIN_29627656;
	_JOIN_29630021 [label="_JOIN_29630021None...",shape=box];
	_JOIN_29630021 -> 29630023;
	29707686 [label="29707686  register int cbv_33, cbv_34;...",shape=box];
	ForLoop29628877 [label="ForLoop29628877  for (j=cbv_15; j<=cbv_16; j=j+1) {...",shape=box];
	ForLoop29628877 -> 29628876;
	ForLoop29628877 -> _JOIN_29628877;
	_JOIN_29633453 [label="_JOIN_29633453None...",shape=box];
	_JOIN_29633453 -> 29633455;
	29699047 [label="29699047  double scv_26;...",shape=box];
	29635168 [label="29635168  scv_19=scv_19+A[(i+15)*ny+j]*x[j];...",shape=box];
	29635168 -> _JOIN_29635169;
	29633455 [label="29633455  int j;...",shape=box];
	ForLoop29632309 [label="ForLoop29632309  for (j=cbv_33; j<=cbv_34; j=j+1) {...",shape=box];
	ForLoop29632309 -> 29632308;
	ForLoop29632309 -> _JOIN_29632309;
	29630644 [label="29630644  scv_25=scv_25+A[(i+8)*ny+j]*x[j];...",shape=box];
	ForLoop29634520 [label="ForLoop29634520  for (j=jt; j<=cbv_44; j=j+14) {...",shape=box];
	ForLoop29634520 -> 29634076;
	ForLoop29634520 -> _JOIN_29634520;
	29633452 [label="29633452  scv_10=scv_10+A[(i+12)*ny+j]*x[j];...",shape=box];
	29633452 -> _JOIN_29633453;
	_JOIN_29633376 [label="_JOIN_29633376None...",shape=box];
	_JOIN_29633376 -> 29708638;
	29631736 [label="29631736  scv_24=scv_24+A[(i+9)*ny+j]*x[j];...",shape=box];
	29631736 -> _JOIN_29631737;
	29706258 [label="29706258  register int cbv_24, cbv_25;...",shape=box];
	ForLoop29626521 [label="ForLoop29626521  for (j=jt; j<=cbv_2; j=j+14) {...",shape=box];
	ForLoop29626521 -> 29626194;
	ForLoop29626521 -> _JOIN_29626521;
	29708638 [label="29708638  register int cbv_39, cbv_40;...",shape=box];
	29681426 [label="29681426  double scv_9;...",shape=box];
	29627160 [label="29627160  scv_11=scv_11+A[(i+1)*ny+j]*x[j];...",shape=box];
	29627160 -> _JOIN_29627161;
	29627163 [label="29627163  int j;...",shape=box];
	29627212 [label="29627212  scv_21=scv_21+A[(i+2)*ny+j]*x[j];...",shape=box];
	29635740 [label="29635740  scv_27=scv_27+A[i*ny+jt]*x[jt];...",shape=box];
	ForLoop29632881 [label="ForLoop29632881  for (j=cbv_36; j<=cbv_37; j=j+1) {...",shape=box];
	ForLoop29632881 -> 29632880;
	ForLoop29632881 -> _JOIN_29632881;
	_JOIN_29626589 [label="_JOIN_29626589None...",shape=box];
	_JOIN_29626589 -> 29626591;
	ForLoop29628800 [label="ForLoop29628800  for (j=jt; j<=cbv_14; j=j+14) {...",shape=box];
	ForLoop29628800 -> 29628356;
	ForLoop29628800 -> _JOIN_29628800;
	29626588 [label="29626588  scv_14=scv_14+A[i*ny+j]*x[j];...",shape=box];
	29626588 -> _JOIN_29626589;
	ForLoop29636434 [label="ForLoop29636434  for (k=kk; k<=cbv_55; k=k+1) {...",shape=box];
	ForLoop29636434 -> 29699047;
	ForLoop29636434 -> _JOIN_29636434;
	_JOIN_29567153 [label="_JOIN_29567153None...",shape=box];
	_JOIN_29567153 -> 29567281;
	29628879 [label="29628879  int j;...",shape=box];
	_JOIN_29632232 [label="_JOIN_29632232None...",shape=box];
	_JOIN_29632232 -> 29707686;
	_JOIN_29631660 [label="_JOIN_29631660None...",shape=box];
	_JOIN_29631660 -> 29707210;
	29695617 [label="29695617  tmp[(i+12)]=scv_10;...",shape=box];
	ForLoop29629944 [label="ForLoop29629944  for (j=jt; j<=cbv_20; j=j+14) {...",shape=box];
	ForLoop29629944 -> 29629500;
	ForLoop29629944 -> _JOIN_29629944;
	29626154 [label="29626154  int j;...",shape=box];
	29628876 [label="29628876  scv_23=scv_23+A[(i+4)*ny+j]*x[j];...",shape=box];
	29628876 -> _JOIN_29628877;
	ForLoop29636438 [label="ForLoop29636438  for (i=nx-((nx-(0))%16); i<=nx-1; i=i+1) {...",shape=box];
	ForLoop29636438 -> 29700004;
	ForLoop29636438 -> _JOIN_29636438;
	ForLoop29636435 [label="ForLoop29636435  for (kk=kkk; kk<=min(ny-1,kkk+960); kk=kk+64) {...",shape=box];
	ForLoop29636435 -> 29711102;
	ForLoop29636435 -> _JOIN_29636435;
	ForLoop29626153 [label="ForLoop29626153  for (jt=jj; jt<=cbv_1; jt=jt+8) {...",shape=box];
	ForLoop29626153 -> 29642273;
	ForLoop29626153 -> _JOIN_29626153;
	_JOIN_29635169 [label="_JOIN_29635169None...",shape=box];
	_JOIN_29635169 -> _JOIN_29635172;
	ForLoop29627084 [label="ForLoop29627084  for (j=jt; j<=cbv_5; j=j+14) {...",shape=box];
	ForLoop29627084 -> 29626640;
	ForLoop29627084 -> _JOIN_29627084;
	29702926 [label="29702926  register int cbv_3, cbv_4;...",shape=box];
	29632932 [label="29632932  scv_10=scv_10+A[(i+12)*ny+j]*x[j];...",shape=box];
	ForLoop29636436 [label="ForLoop29636436  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop29636436 -> ForLoop29636435;
	ForLoop29636436 -> _JOIN_29636436;
	29711102 [label="29711102  register int cbv_55;...",shape=box];
	29629448 [label="29629448  scv_20=scv_20+A[(i+5)*ny+j]*x[j];...",shape=box];
	29629448 -> _JOIN_29629449;
	ForLoop29627161 [label="ForLoop29627161  for (j=cbv_6; j<=cbv_7; j=j+1) {...",shape=box];
	ForLoop29627161 -> 29627160;
	ForLoop29627161 -> _JOIN_29627161;
	_JOIN_29567222 [label="_JOIN_29567222None...",shape=box];
	_JOIN_29567222 -> 29621744;
	29627735 [label="29627735  int j;...",shape=box];
	29706734 [label="29706734  register int cbv_27, cbv_28;...",shape=box];
	29627732 [label="29627732  scv_21=scv_21+A[(i+2)*ny+j]*x[j];...",shape=box];
	29627732 -> _JOIN_29627733;
	29710066 [label="29710066  register int cbv_48, cbv_49;...",shape=box];
	29630595 [label="29630595  int j;...",shape=box];
	_JOIN_29629449 [label="_JOIN_29629449None...",shape=box];
	_JOIN_29629449 -> 29629451;
	29630592 [label="29630592  scv_17=scv_17+A[(i+7)*ny+j]*x[j];...",shape=box];
	29630592 -> _JOIN_29630593;
	29633504 [label="29633504  scv_15=scv_15+A[(i+13)*ny+j]*x[j];...",shape=box];
	29626591 [label="29626591  int j;...",shape=box];
	_JOIN_29630593 [label="_JOIN_29630593None...",shape=box];
	_JOIN_29630593 -> 29630595;
	29631788 [label="29631788  scv_12=scv_12+A[(i+10)*ny+j]*x[j];...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 29567070;
	_JOIN_29632804 [label="_JOIN_29632804None...",shape=box];
	_JOIN_29632804 -> 29708162;
	ForLoop29630021 [label="ForLoop29630021  for (j=cbv_21; j<=cbv_22; j=j+1) {...",shape=box];
	ForLoop29630021 -> 29630020;
	ForLoop29630021 -> _JOIN_29630021;
	ForLoop29630516 [label="ForLoop29630516  for (j=jt; j<=cbv_23; j=j+14) {...",shape=box];
	ForLoop29630516 -> 29630072;
	ForLoop29630516 -> _JOIN_29630516;
	29708162 [label="29708162  register int cbv_36, cbv_37;...",shape=box];
	29704354 [label="29704354  register int cbv_12, cbv_13;...",shape=box];
	_JOIN_29635174 [label="_JOIN_29635174None...",shape=box];
	_JOIN_29635174 -> ForLoop29635639;
	29634027 [label="29634027  int j;...",shape=box];
	29626194 [label="29626194  scv_14=scv_14+A[i*ny+j]*x[j];...",shape=box];
	ForLoop29628305 [label="ForLoop29628305  for (j=cbv_12; j<=cbv_13; j=j+1) {...",shape=box];
	ForLoop29628305 -> 29628304;
	ForLoop29628305 -> _JOIN_29628305;
	_JOIN_29635172 [label="_JOIN_29635172None...",shape=box];
	_JOIN_29635172 -> _JOIN_29635174;
	29634076 [label="29634076  scv_16=scv_16+A[(i+14)*ny+j]*x[j];...",shape=box];
	29629451 [label="29629451  int j;...",shape=box];
	_JOIN_29633948 [label="_JOIN_29633948None...",shape=box];
	_JOIN_29633948 -> 29709114;
	_JOIN_29631737 [label="_JOIN_29631737None...",shape=box];
	_JOIN_29631737 -> 29631739;
	29695599 [label="29695599  double scv_10, scv_11, scv_12, scv_13, scv_14, scv_15, scv_16, scv_17;...",shape=box];
	_JOIN_29632881 [label="_JOIN_29632881None...",shape=box];
	_JOIN_29632881 -> 29632883;
	ForLoop29628228 [label="ForLoop29628228  for (j=jt; j<=cbv_11; j=j+14) {...",shape=box];
	ForLoop29628228 -> 29627784;
	ForLoop29628228 -> _JOIN_29628228;
	_JOIN_29627161 [label="_JOIN_29627161None...",shape=box];
	_JOIN_29627161 -> 29627163;
	ForLoop29633453 [label="ForLoop29633453  for (j=cbv_39; j<=cbv_40; j=j+1) {...",shape=box];
	ForLoop29633453 -> 29633452;
	ForLoop29633453 -> _JOIN_29633453;
	29621744 [label="29621744  double x_copy;...",shape=box];
	ForLoop29636292 [label="ForLoop29636292  for (j=jt; j<=cbv_52; j=j+14) {...",shape=box];
	ForLoop29636292 -> 29635965;
	ForLoop29636292 -> _JOIN_29636292;
	29632311 [label="29632311  int j;...",shape=box];
	29705782 [label="29705782  register int cbv_21, cbv_22;...",shape=box];
	_JOIN_29636292 [label="_JOIN_29636292None...",shape=box];
	_JOIN_29636292 -> 29711011;
	29634596 [label="29634596  scv_16=scv_16+A[(i+14)*ny+j]*x[j];...",shape=box];
	29634596 -> _JOIN_29634597;
	ForLoop29634025 [label="ForLoop29634025  for (j=cbv_42; j<=cbv_43; j=j+1) {...",shape=box];
	ForLoop29634025 -> 29634024;
	ForLoop29634025 -> _JOIN_29634025;
	29631167 [label="29631167  int j;...",shape=box];
	29631164 [label="29631164  scv_25=scv_25+A[(i+8)*ny+j]*x[j];...",shape=box];
	29631164 -> _JOIN_29631165;
	29629500 [label="29629500  scv_18=scv_18+A[(i+6)*ny+j]*x[j];...",shape=box];
	ForLoop29635639 [label="ForLoop29635639  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop29635639 -> ForLoop29635637;
	ForLoop29635639 -> _JOIN_29635639;
	ForLoop29631660 [label="ForLoop29631660  for (j=jt; j<=cbv_29; j=j+14) {...",shape=box];
	ForLoop29631660 -> 29631216;
	ForLoop29631660 -> _JOIN_29631660;
	ForLoop29635635 [label="ForLoop29635635  for (k=kk; k<=cbv_50; k=k+1) {...",shape=box];
	ForLoop29635635 -> 29681426;
	ForLoop29635635 -> _JOIN_29635635;
	29711011 [label="29711011  register int cbv_53, cbv_54;...",shape=box];
	_JOIN_29634520 [label="_JOIN_29634520None...",shape=box];
	_JOIN_29634520 -> 29709590;
	29700016 [label="29700016  tmp[i]=scv_27;...",shape=box];
	29700016 -> _JOIN_29636438;
	29630072 [label="29630072  scv_17=scv_17+A[(i+7)*ny+j]*x[j];...",shape=box];
	ForLoop29630593 [label="ForLoop29630593  for (j=cbv_24; j<=cbv_25; j=j+1) {...",shape=box];
	ForLoop29630593 -> 29630592;
	ForLoop29630593 -> _JOIN_29630593;
	29567221 [label="29567221  y[i]=0.0;...",shape=box];
	29567221 -> _JOIN_29567222;
	29635965 [label="29635965  scv_27=scv_27+A[i*ny+j]*x[j];...",shape=box];
	29634599 [label="29634599  int j;...",shape=box];
	29710412 [label="29710412  register int cbv_50;...",shape=box];
	29632308 [label="29632308  scv_12=scv_12+A[(i+10)*ny+j]*x[j];...",shape=box];
	29632308 -> _JOIN_29632309;
	29709114 [label="29709114  register int cbv_42, cbv_43;...",shape=box];
	29567281 [label="29567281  register int cbv_2, cbv_3;...",shape=box];
	29567070 [label="29567070  int i;...",shape=box];
	_JOIN_29636434 [label="_JOIN_29636434None...",shape=box];
	_JOIN_29636434 -> _JOIN_29636435;
	_JOIN_29636364 [label="_JOIN_29636364None...",shape=box];
	_JOIN_29636364 -> ForLoop29636436;
	_JOIN_29636360 [label="_JOIN_29636360None...",shape=box];
	_JOIN_29636360 -> _JOIN_29636363;
	_JOIN_29636363 [label="_JOIN_29636363None...",shape=box];
	_JOIN_29636363 -> _JOIN_29636364;
	29704830 [label="29704830  register int cbv_15, cbv_16;...",shape=box];
	_JOIN_29629372 [label="_JOIN_29629372None...",shape=box];
	_JOIN_29629372 -> 29705306;
	_JOIN_29632309 [label="_JOIN_29632309None...",shape=box];
	_JOIN_29632309 -> 29632311;
	ForLoop29631088 [label="ForLoop29631088  for (j=jt; j<=cbv_26; j=j+14) {...",shape=box];
	ForLoop29631088 -> 29630644;
	ForLoop29631088 -> _JOIN_29631088;
	ForLoop29635637 [label="ForLoop29635637  for (kk=kkk; kk<=min(ny-1,kkk+960); kk=kk+64) {...",shape=box];
	ForLoop29635637 -> 29710412;
	ForLoop29635637 -> _JOIN_29635637;
	ForLoop29635641 [label="ForLoop29635641  for (i=0; i<=nx-16; i=i+16) {...",shape=box];
	ForLoop29635641 -> 29695599;
	ForLoop29635641 -> _JOIN_29635641;
	_JOIN_29635092 [label="_JOIN_29635092None...",shape=box];
	_JOIN_29635092 -> 29710066;
	_JOIN_29629944 [label="_JOIN_29629944None...",shape=box];
	_JOIN_29629944 -> 29705782;
	_JOIN_29631165 [label="_JOIN_29631165None...",shape=box];
	_JOIN_29631165 -> 29631167;
	ForLoop29635092 [label="ForLoop29635092  for (j=jt; j<=cbv_47; j=j+14) {...",shape=box];
	ForLoop29635092 -> 29634648;
	ForLoop29635092 -> _JOIN_29635092;
	ForLoop29635924 [label="ForLoop29635924  for (jt=jj; jt<=cbv_51; jt=jt+8) {...",shape=box];
	ForLoop29635924 -> 29635740;
	ForLoop29635924 -> _JOIN_29635924;
	29709590 [label="29709590  register int cbv_45, cbv_46;...",shape=box];
	_JOIN_29636438 [label="_JOIN_29636438None...",shape=box];
	29632880 [label="29632880  scv_22=scv_22+A[(i+11)*ny+j]*x[j];...",shape=box];
	29632880 -> _JOIN_29632881;
	296328expected=9369846271501.798828
actual=9369846271501.798828
83 [label="29632883  int j;...",shape=box];
	29703878 [label="29703878  register int cbv_9, cbv_10;...",shape=box];
	29628304 [label="29628304  scv_13=scv_13+A[(i+3)*ny+j]*x[j];...",shape=box];
	29628304 -> _JOIN_29628305;
	_JOIN_29627656 [label="_JOIN_29627656None...",shape=box];
	_JOIN_29627656 -> 29703878;
	_JOIN_29635641 [label="_JOIN_29635641None...",shape=box];
	_JOIN_29635641 -> ForLoop29636438;
	29628307 [label="29628307  int j;...",shape=box];
	_JOIN_29627084 [label="_JOIN_29627084None...",shape=box];
	_JOIN_29627084 -> 29703402;
	29642273 [label="29642273  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	ForLoop29631737 [label="ForLoop29631737  for (j=cbv_30; j<=cbv_31; j=j+1) {...",shape=box];
	ForLoop29631737 -> 29631736;
	ForLoop29631737 -> _JOIN_29631737;
	29702528 [label="29702528  register int cbv_1;...",shape=box];
	ForLoop29631165 [label="ForLoop29631165  for (j=cbv_27; j<=cbv_28; j=j+1) {...",shape=box];
	ForLoop29631165 -> 29631164;
	ForLoop29631165 -> _JOIN_29631165;
	29705306 [label="29705306  register int cbv_18, cbv_19;...",shape=box];
	ForLoop29636364 [label="ForLoop29636364  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop29636364 -> ForLoop29636363;
	ForLoop29636364 -> _JOIN_29636364;
	_JOIN_29630516 [label="_JOIN_29630516None...",shape=box];
	_JOIN_29630516 -> 29706258;
	_JOIN_29628800 [label="_JOIN_29628800None...",shape=box];
	_JOIN_29628800 -> 29704830;
	ForLoop29636360 [label="ForLoop29636360  for (j=cbv_53; j<=cbv_54; j=j+1) {...",shape=box];
	ForLoop29636360 -> 29636359;
	ForLoop29636360 -> _JOIN_29636360;
	ForLoop29636363 [label="ForLoop29636363  for (jj=jjj; jj<=min(ny-1,jjj+2032); jj=jj+16) {...",shape=box];
	ForLoop29636363 -> 29710613;
	ForLoop29636363 -> _JOIN_29636363;
	29628356 [label="29628356  scv_23=scv_23+A[(i+4)*ny+j]*x[j];...",shape=box];
	ForLoop29633948 [label="ForLoop29633948  for (j=jt; j<=cbv_41; j=j+14) {...",shape=box];
	ForLoop29633948 -> 29633504;
	ForLoop29633948 -> _JOIN_29633948;
	ForLoop29633376 [label="ForLoop29633376  for (j=jt; j<=cbv_38; j=j+14) {...",shape=box];
	ForLoop29633376 -> 29632932;
	ForLoop29633376 -> _JOIN_29633376;
	29634024 [label="29634024  scv_15=scv_15+A[(i+13)*ny+j]*x[j];...",shape=box];
	29634024 -> _JOIN_29634025;
	_JOIN_29635924 [label="_JOIN_29635924None...",shape=box];
	_JOIN_29635924 -> 29635925;
	ForLoop29627733 [label="ForLoop29627733  for (j=cbv_9; j<=cbv_10; j=j+1) {...",shape=box];
	ForLoop29627733 -> 29627732;
	ForLoop29627733 -> _JOIN_29627733;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest120.exe __orio_perftest120.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest120.exe  
{'[0, 1, 3, 0, 6, 5, 0, 0, 1, 15, 13, 0, 0, 1, 0, 1, 1, 1]' : 0.0982471}
{'[0, 1, 3, 0, 6, 5, 0, 0, 1, 15, 13, 0, 0, 1, 0, 1, 1, 1]' : 0.0976219}
{'[0, 1, 3, 0, 6, 5, 0, 0, 1, 15, 13, 0, 0, 1, 0, 1, 1, 1]' : 0.09764}
{'[0, 1, 3, 0, 6, 5, 0, 0, 1, 15, 13, 0, 0, 1, 0, 1, 1, 1]' : 0.097769}
{'[0, 1, 3, 0, 6, 5, 0, 0, 1, 15, 13, 0, 0, 1, 0, 1, 1, 1]' : 0.0976589}
{'[0, 1, 3, 0, 6, 5, 0, 0, 1, 15, 13, 0, 0, 1, 0, 1, 1, 1]' : 0.0977609}
{'[0, 1, 3, 0, 6, 5, 0, 0, 1, 15, 13, 0, 0, 1, 0, 1, 1, 1]' : 0.097697}
{'[0, 1, 3, 0, 6, 5, 0, 0, 1, 15, 13, 0, 0, 1, 0, 1, 1, 1]' : 0.0980091}
{'[0, 1, 3, 0, 6, 5, 0, 0, 1, 15, 13, 0, 0, 1, 0, 1, 1, 1]' : 0.0976291}
{'[0, 1, 3, 0, 6, 5, 0, 0, 1, 15, 13, 0, 0, 1, 0, 1, 1, 1]' : 0.0976532}
{'[0, 1, 3, 0, 6, 5, 0, 0, 1, 15, 13, 0, 0, 1, 0, 1, 1, 1]' : 0.0976551}
{'[0, 1, 3, 0, 6, 5, 0, 0, 1, 15, 13, 0, 0, 1, 0, 1, 1, 1]' : 0.097868}
{'[0, 1, 3, 0, 6, 5, 0, 0, 1, 15, 13, 0, 0, 1, 0, 1, 1, 1]' : 0.0979619}
{'[0, 1, 3, 0, 6, 5, 0, 0, 1, 15, 13, 0, 0, 1, 0, 1, 1, 1]' : 0.0987489}
{'[0, 1, 3, 0, 6, 5, 0, 0, 1, 15, 13, 0, 0, 1, 0, 1, 1, 1]' : 0.097621}
{'[0, 1, 3, 0, 6, 5, 0, 0, 1, 15, 13, 0, 0, 1, 0, 1, 1, 1]' : 0.097702}
{'[0, 1, 3, 0, 6, 5, 0, 0, 1, 15, 13, 0, 0, 1, 0, 1, 1, 1]' : 0.0977309}
{'[0, 1, 3, 0, 6, 5, 0, 0, 1, 15, 13, 0, 0, 1, 0, 1, 1, 1]' : 0.098099}
{'[0, 1, 3, 0, 6, 5, 0, 0, 1, 15, 13, 0, 0, 1, 0, 1, 1, 1]' : 0.097692}
{'[0, 1, 3, 0, 6, 5, 0, 0, 1, 15, 13, 0, 0, 1, 0, 1, 1, 1]' : 0.097789}
{'[0, 1, 3, 0, 6, 5, 0, 0, 1, 15, 13, 0, 0, 1, 0, 1, 1, 1]' : 0.097682}
{'[0, 1, 3, 0, 6, 5, 0, 0, 1, 15, 13, 0, 0, 1, 0, 1, 1, 1]' : 0.0976958}
{'[0, 1, 3, 0, 6, 5, 0, 0, 1, 15, 13, 0, 0, 1, 0, 1, 1, 1]' : 0.0979891}
{'[0, 1, 3, 0, 6, 5, 0, 0, 1, 15, 13, 0, 0, 1, 0, 1, 1, 1]' : 0.097676}
{'[0, 1, 3, 0, 6, 5, 0, 0, 1, 15, 13, 0, 0, 1, 0, 1, 1, 1]' : 0.0977039}
{'[0, 1, 3, 0, 6, 5, 0, 0, 1, 15, 13, 0, 0, 1, 0, 1, 1, 1]' : 0.097944}
{'[0, 1, 3, 0, 6, 5, 0, 0, 1, 15, 13, 0, 0, 1, 0, 1, 1, 1]' : 0.097775}
{'[0, 1, 3, 0, 6, 5, 0, 0, 1, 15, 13, 0, 0, 1, 0, 1, 1, 1]' : 0.0977108}
{'[0, 1, 3, 0, 6, 5, 0, 0, 1, 15, 13, 0, 0, 1, 0, 1, 1, 1]' : 0.0977011}
{'[0, 1, 3, 0, 6, 5, 0, 0, 1, 15, 13, 0, 0, 1, 0, 1, 1, 1]' : 0.097672}

out:
 ["{'[0, 1, 3, 0, 6, 5, 0, 0, 1, 15, 13, 0, 0, 1, 0, 1, 1, 1]' : 0.0982471}", "{'[0, 1, 3, 0, 6, 5, 0, 0, 1, 15, 13, 0, 0, 1, 0, 1, 1, 1]' : 0.0976219}", "{'[0, 1, 3, 0, 6, 5, 0, 0, 1, 15, 13, 0, 0, 1, 0, 1, 1, 1]' : 0.09764}", "{'[0, 1, 3, 0, 6, 5, 0, 0, 1, 15, 13, 0, 0, 1, 0, 1, 1, 1]' : 0.097769}", "{'[0, 1, 3, 0, 6, 5, 0, 0, 1, 15, 13, 0, 0, 1, 0, 1, 1, 1]' : 0.0976589}", "{'[0, 1, 3, 0, 6, 5, 0, 0, 1, 15, 13, 0, 0, 1, 0, 1, 1, 1]' : 0.0977609}", "{'[0, 1, 3, 0, 6, 5, 0, 0, 1, 15, 13, 0, 0, 1, 0, 1, 1, 1]' : 0.097697}", "{'[0, 1, 3, 0, 6, 5, 0, 0, 1, 15, 13, 0, 0, 1, 0, 1, 1, 1]' : 0.0980091}", "{'[0, 1, 3, 0, 6, 5, 0, 0, 1, 15, 13, 0, 0, 1, 0, 1, 1, 1]' : 0.0976291}", "{'[0, 1, 3, 0, 6, 5, 0, 0, 1, 15, 13, 0, 0, 1, 0, 1, 1, 1]' : 0.0976532}", "{'[0, 1, 3, 0, 6, 5, 0, 0, 1, 15, 13, 0, 0, 1, 0, 1, 1, 1]' : 0.0976551}", "{'[0, 1, 3, 0, 6, 5, 0, 0, 1, 15, 13, 0, 0, 1, 0, 1, 1, 1]' : 0.097868}", "{'[0, 1, 3, 0, 6, 5, 0, 0, 1, 15, 13, 0, 0, 1, 0, 1, 1, 1]' : 0.0979619}", "{'[0, 1, 3, 0, 6, 5, 0, 0, 1, 15, 13, 0, 0, 1, 0, 1, 1, 1]' : 0.0987489}", "{'[0, 1, 3, 0, 6, 5, 0, 0, 1, 15, 13, 0, 0, 1, 0, 1, 1, 1]' : 0.097621}", "{'[0, 1, 3, 0, 6, 5, 0, 0, 1, 15, 13, 0, 0, 1, 0, 1, 1, 1]' : 0.097702}", "{'[0, 1, 3, 0, 6, 5, 0, 0, 1, 15, 13, 0, 0, 1, 0, 1, 1, 1]' : 0.0977309}", "{'[0, 1, 3, 0, 6, 5, 0, 0, 1, 15, 13, 0, 0, 1, 0, 1, 1, 1]' : 0.098099}", "{'[0, 1, 3, 0, 6, 5, 0, 0, 1, 15, 13, 0, 0, 1, 0, 1, 1, 1]' : 0.097692}", "{'[0, 1, 3, 0, 6, 5, 0, 0, 1, 15, 13, 0, 0, 1, 0, 1, 1, 1]' : 0.097789}", "{'[0, 1, 3, 0, 6, 5, 0, 0, 1, 15, 13, 0, 0, 1, 0, 1, 1, 1]' : 0.097682}", "{'[0, 1, 3, 0, 6, 5, 0, 0, 1, 15, 13, 0, 0, 1, 0, 1, 1, 1]' : 0.0976958}", "{'[0, 1, 3, 0, 6, 5, 0, 0, 1, 15, 13, 0, 0, 1, 0, 1, 1, 1]' : 0.0979891}", "{'[0, 1, 3, 0, 6, 5, 0, 0, 1, 15, 13, 0, 0, 1, 0, 1, 1, 1]' : 0.097676}", "{'[0, 1, 3, 0, 6, 5, 0, 0, 1, 15, 13, 0, 0, 1, 0, 1, 1, 1]' : 0.0977039}", "{'[0, 1, 3, 0, 6, 5, 0, 0, 1, 15, 13, 0, 0, 1, 0, 1, 1, 1]' : 0.097944}", "{'[0, 1, 3, 0, 6, 5, 0, 0, 1, 15, 13, 0, 0, 1, 0, 1, 1, 1]' : 0.097775}", "{'[0, 1, 3, 0, 6, 5, 0, 0, 1, 15, 13, 0, 0, 1, 0, 1, 1, 1]' : 0.0977108}", "{'[0, 1, 3, 0, 6, 5, 0, 0, 1, 15, 13, 0, 0, 1, 0, 1, 1, 1]' : 0.0977011}", "{'[0, 1, 3, 0, 6, 5, 0, 0, 1, 15, 13, 0, 0, 1, 0, 1, 1, 1]' : 0.097672}"]
returning from 'run': {'[0, 1, 3, 0, 6, 5, 0, 0, 1, 15, 13, 0, 0, 1, 0, 1, 1, 1]': ([0.0982471, 0.0976219, 0.09764, 0.097769, 0.0976589, 0.0977609, 0.097697, 0.0980091, 0.0976291, 0.0976532, 0.0976551, 0.097868, 0.0979619, 0.0987489, 0.097621, 0.097702, 0.0977309, 0.098099, 0.097692, 0.097789, 0.097682, 0.0976958, 0.0979891, 0.097676, 0.0977039, 0.097944, 0.097775, 0.0977108, 0.0977011, 0.097672], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.0982471, 0.0976219, 0.09764, 0.097769, 0.0976589, 0.0977609, 0.097697, 0.0980091, 0.0976291, 0.0976532, 0.0976551, 0.097868, 0.0979619, 0.0987489, 0.097621, 0.097702, 0.0977309, 0.098099, 0.097692, 0.097789, 0.097682, 0.0976958, 0.0979891, 0.097676, 0.0977039, 0.097944, 0.097775, 0.0977108, 0.0977011, 0.097672], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 3, 0, 6, 5, 0, 0, 1, 15, 13, 0, 0, 1, 0, 1, 1, 1]': ([0.0982471, 0.0976219, 0.09764, 0.097769, 0.0976589, 0.0977609, 0.097697, 0.0980091, 0.0976291, 0.0976532, 0.0976551, 0.097868, 0.0979619, 0.0987489, 0.097621, 0.097702, 0.0977309, 0.098099, 0.097692, 0.097789, 0.097682, 0.0976958, 0.0979891, 0.097676, 0.0977039, 0.097944, 0.097775, 0.0977108, 0.0977011, 0.097672], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [2, 0, 3, 1, 25, 11, 26, 0, 0, 0, 2, 1]
Fixed Factors: {'ACOPY_x': 0, 'ACOPY_y': 0, 'T2_K': 5, 'T2_J': 6, 'VEC1': 1, 'SCR': 1}
Testing candidate 21: [2, 0, 3, 1, 6, 5, 0, 0, 25, 11, 26, 0, 0, 0, 2, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	6
        Additions: 		3309
        Multiplications: 	1586
        Divisions: 		0
        Logical: 		0
        Reads: 			6370
        Writes: 		1072
        Comparisons:		20
        Gotos: 			0
        
digraph CFG {
	_JOIN_29712232 [label="_JOIN_29712232None...",shape=box];
	_JOIN_29712232 -> 29874325;
	_JOIN_29898454 [label="_JOIN_29898454None...",shape=box];
	_JOIN_29898454 -> 30043809;
	_JOIN_29900629 [label="_JOIN_29900629None...",shape=box];
	_JOIN_29900629 -> 29995288;
	ForLoop29885633 [label="ForLoop29885633  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop29885633 -> 29874497;
	ForLoop29885633 -> _JOIN_29885633;
	_JOIN_29885243 [label="_JOIN_29885243None...",shape=box];
	_JOIN_29885243 -> 30035748;
	ForLoop29885631 [label="ForLoop29885631  for (j=cbv_2; j<=cbv_3; j=j+1) {...",shape=box];
	ForLoop29885631 -> 29916469;
	ForLoop29885631 -> _JOIN_29885631;
	ForLoop29712163 [label="ForLoop29712163  for (i=0; i<=cbv_1; i=i+26) {...",shape=box];
	ForLoop29712163 -> 29711936;
	ForLoop29712163 -> _JOIN_29712163;
	29985248 [label="29985248  tmp[(i+1)]=scv_62;...",shape=box];
	ForLoop29899545 [label="ForLoop29899545  for (j=jjj; j<=cbv_6; j=j+27) {...",shape=box];
	ForLoop29899545 -> 29898893;
	ForLoop29899545 -> _JOIN_29899545;
	_JOIN_29900587 [label="_JOIN_29900587None...",shape=box];
	_JOIN_29900587 -> 30045717;
	ForLoop29900634 [label="ForLoop29900634  for (iii=0; iii<=nx-1; iii=iii+64) {...",shape=box];
	ForLoop29900634 -> ForLoop29900633;
	ForLoop29900634 -> _JOIN_29900634;
	ForLoop29900633 [label="ForLoop29900633  for (ii=iii; ii<=min(nx-1,iii+32); ii=ii+32) {...",shape=box];
	ForLoop29900633 -> 29874358;
	ForLoop29900633 -> _JOIN_29900633;
	29711504 [label="29711504  int i;...",shape=box];
	ForLoop29900631 [label="ForLoop29900631  for (i=(min(nx-1,ii+31))-(((min(nx-1,ii+31))-(ii)+1)%12)+1; i<=min(nx-1,ii+31); i=i+1) {...",shape=box];
	ForLoop29900631 -> 29995276;
	ForLoop29900631 -> _JOIN_29900631;
	29874325 [label="29874325  double x_copy;...",shape=box];
	_JOIN_29900634 [label="_JOIN_29900634None...",shape=box];
	_JOIN_29900633 [label="_JOIN_29900633None...",shape=box];
	_JOIN_29900633 -> _JOIN_29900634;
	29898893 [label="29898893  scv_107=scv_107+A[i*ny+j]*x[j];...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 29711504;
	29874497 [label="29874497  int j;...",shape=box];
	29899612 [label="29899612  scv_107=scv_107+A[i*ny+j]*x[j];...",shape=box];
	29899612 -> _JOIN_29899613;
	_JOIN_29899615 [label="_JOIN_29899615None...",shape=box];
	_JOIN_29899615 -> ForLoop29900629;
	_JOIN_29712163 [label="_JOIN_29712163None...",shape=box];
	_JOIN_29712163 -> 29712507;
	ForLoop29898786 [label="ForLoop29898786  for (i=ii; i<=min(nx-1,ii+31)-11; i=i+12) {...",shape=box];
	ForLoop29898786 -> 29985230;
	ForLoop29898786 -> _JOIN_29898786;
	ForLoop29898780 [label="ForLoop29898780  for (k=kt; k<=cbv_5; k=k+1) {...",shape=box];
	ForLoop29898780 -> 29945545;
	ForLoop29898780 -> _JOIN_29898780;
	ForLoop29898782 [label="ForLoop29898782  for (kk=kkk; kk<=min(ny-1,kkk+960); kk=kk+64) {...",shape=box];
	ForLoop29898782 -> 30043564;
	ForLoop29898782 -> _JOIN_29898782;
	29985230 [label="29985230  double scv_62, scv_63, scv_64, scv_65, scv_66, scv_67, scv_68, scv_69;...",shape=box];
	_JOIN_29885633 [label="_JOIN_29885633None...",shape=box];
	_JOIN_29885633 -> ForLoop29898784;
	29711936 [label="29711936  y[i]=0.0;...",shape=box];
	29989900 [label="29989900  double scv_74, scv_75, scv_76, scv_77, scv_78, scv_79, scv_80, scv_81;...",shape=box];
	_JOIN_29899613 [label="_JOIN_29899613None...",shape=box];
	_JOIN_29899613 -> _JOIN_29899615;
	29916469 [label="29916469  double scv_28;...",shape=box];
	_JOIN_29899545 [label="_JOIN_29899545None...",shape=box];
	_JOIN_29899545 -> 30044478;
	_JOIN_29885631 [label="_JOIN_29885631None...",shape=box];
	_JOIN_29885631 -> _JOIN_29885633;
	ForLoop29900629 [label="ForLoop29900629  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop29900629 -> ForLoop29900628;
	ForLoop29900629 -> _JOIN_29900629;
	29995276 [label="29995276  double scv_107;...",shape=box];
	ForLoop29900587 [label="ForLoop29900587  for (kt=kk; kt<=cbv_9; kt=kt+32) {...",shape=box];
	ForLoop29900587 -> 29989900;
	ForLoop29900587 -> _JOIN_29900587;
	29990611 [label="29990611  double scv_106;...",shape=box];
	_JOIN_29900628 [label="_JOIN_29900628None...",shape=box];
	_JOIN_29900628 -> _JOIN_29900629;
	ForLoop29898454 [label="ForLoop29898454  for (kt=kk; kt<=cbv_4; kt=kt+32) {...",shape=box];
	ForLoop29898454 -> 29943733;
	ForLoop29898454 -> _JOIN_29898454;
	ForLoop29900626 [label="ForLoop29900626  for (k=kt; k<=cbv_10; k=k+1) {...",shape=box];
	ForLoop29900626 -> 29990611;
	ForLoop29900626 -> _JOIN_29900626;
	29712231 [label="29712231  y[i]=0.0;...",shape=box];
	29712231 -> _JOIN_29712232;
	30045659 [label="30045659  register int cbv_9;...",shape=box];
	ForLoop29712232 [label="ForLoop29712232  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop29712232 -> 29712231;
	ForLoop29712232 -> _JOIN_29712232;
	ForLoop29885243 [label="ForLoop29885243  for (j=jjj; j<=cbv_1; j=j+27) {...",shape=box];
	ForLoop29885243 -> 29915374;
	ForLoop29885243 -> _JOIN_29885243;
	30035748 [label="30035748  register int cbv_2, cbv_3;...",shape=box];
	ForLoop29900628 [label="ForLoop29900628  for (kk=kkk; kk<=min(ny-1,kkk+960); kk=kk+64) {...",shape=box];
	ForLoop29900628 -> 30045659;
	ForLoop29900628 -> _JOIN_29900628;
	30043809 [label="30043809  register int cbv_5;...",shape=box];
	_JOIN_29900631 [label="_JOIN_29900631None...",shape=box];
	_JOIN_29900631 -> _JOIN_29900633;
	ForLoop29899613 [label="ForLoop29899613  for (j=cbv_7; j<=cbv_8; j=j+1) {...",shape=box];
	ForLoop29899613 -> 29899612;
	ForLoop29899613 -> _JOIN_29899613;
	29874358 [label="29874358  int i;...",shape=box];
	29874358 -> ForLoop29898786;
	30045717 [label="30045717  register int cbv_10;...",shape=box];
	30044478 [label="30044478  register int cbv_7, cbv_8;...",shape=box];
	ForLoop29899615 [label="ForLoop29899615  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop29899615 -> 29898853;
	ForLoop29899615 -> _JOIN_29899615;
	_JOIN_29900626 [label="_JOIN_29900626None...",shape=box];
	_JOIN_29900626 -> _JOIN_29900628;
	29943733 [label="29943733  double scv_29, scv_30, scv_31, scv_32, scv_33, scv_34, scv_35, scv_36;...",shape=box];
	_JOIN_29898780 [label="_JOIN_29898780None...",shape=box];
	_JOIN_29898780 -> _JOIN_29898782;
	_JOIN_29898782 [label="_JOIN_29898782None...",shape=box];
	_JOIN_29898782 -> _JOIN_29898784;
	_JOIN_29898784 [label="_JOIN_29898784None...",shape=box];
	_JOIN_29898784 -> 29985248;
	29898853 [label="29898853  int j;...",shape=box];
	_JOIN_29898786 [label="_JOIN_29898786None...",shape=box];
	_JOIN_29898786 -> ForLoop29900631;
	ForLoop29898784 [label="ForLoop29898784  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop29898784 -> ForLoop29898782;
	ForLoop29898784 -> _JOIN_29898784;
	30043564 [label="30043564  register int cbv_4;...",shape=box];
	29915374 [label="29915374  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	29712507 [label="29712507  register int cbv_2, cbv_3;...",shape=box];
	29995288 [label="29995288  tmp[i]=scv_107;...",shape=box];
	29995288 -> _JOIN_29900631;
	29945545 [label="29945545  double scv_61;...",shape=box];
expected=9369846271501.798828
actual=9369846271501.798828

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest121.exe __orio_perftest121.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest121.exe  
{'[2, 0, 3, 1, 6, 5, 0, 0, 25, 11, 26, 0, 0, 0, 2, 1, 1, 1]' : 0.113477}
{'[2, 0, 3, 1, 6, 5, 0, 0, 25, 11, 26, 0, 0, 0, 2, 1, 1, 1]' : 0.112933}
{'[2, 0, 3, 1, 6, 5, 0, 0, 25, 11, 26, 0, 0, 0, 2, 1, 1, 1]' : 0.113081}
{'[2, 0, 3, 1, 6, 5, 0, 0, 25, 11, 26, 0, 0, 0, 2, 1, 1, 1]' : 0.112996}
{'[2, 0, 3, 1, 6, 5, 0, 0, 25, 11, 26, 0, 0, 0, 2, 1, 1, 1]' : 0.11294}
{'[2, 0, 3, 1, 6, 5, 0, 0, 25, 11, 26, 0, 0, 0, 2, 1, 1, 1]' : 0.113975}
{'[2, 0, 3, 1, 6, 5, 0, 0, 25, 11, 26, 0, 0, 0, 2, 1, 1, 1]' : 0.113005}
{'[2, 0, 3, 1, 6, 5, 0, 0, 25, 11, 26, 0, 0, 0, 2, 1, 1, 1]' : 0.11303}
{'[2, 0, 3, 1, 6, 5, 0, 0, 25, 11, 26, 0, 0, 0, 2, 1, 1, 1]' : 0.112968}
{'[2, 0, 3, 1, 6, 5, 0, 0, 25, 11, 26, 0, 0, 0, 2, 1, 1, 1]' : 0.113367}
{'[2, 0, 3, 1, 6, 5, 0, 0, 25, 11, 26, 0, 0, 0, 2, 1, 1, 1]' : 0.113002}
{'[2, 0, 3, 1, 6, 5, 0, 0, 25, 11, 26, 0, 0, 0, 2, 1, 1, 1]' : 0.113055}
{'[2, 0, 3, 1, 6, 5, 0, 0, 25, 11, 26, 0, 0, 0, 2, 1, 1, 1]' : 0.114105}
{'[2, 0, 3, 1, 6, 5, 0, 0, 25, 11, 26, 0, 0, 0, 2, 1, 1, 1]' : 0.113003}
{'[2, 0, 3, 1, 6, 5, 0, 0, 25, 11, 26, 0, 0, 0, 2, 1, 1, 1]' : 0.113035}
{'[2, 0, 3, 1, 6, 5, 0, 0, 25, 11, 26, 0, 0, 0, 2, 1, 1, 1]' : 0.11301}
{'[2, 0, 3, 1, 6, 5, 0, 0, 25, 11, 26, 0, 0, 0, 2, 1, 1, 1]' : 0.113066}
{'[2, 0, 3, 1, 6, 5, 0, 0, 25, 11, 26, 0, 0, 0, 2, 1, 1, 1]' : 0.113059}
{'[2, 0, 3, 1, 6, 5, 0, 0, 25, 11, 26, 0, 0, 0, 2, 1, 1, 1]' : 0.113003}
{'[2, 0, 3, 1, 6, 5, 0, 0, 25, 11, 26, 0, 0, 0, 2, 1, 1, 1]' : 0.112949}
{'[2, 0, 3, 1, 6, 5, 0, 0, 25, 11, 26, 0, 0, 0, 2, 1, 1, 1]' : 0.112986}
{'[2, 0, 3, 1, 6, 5, 0, 0, 25, 11, 26, 0, 0, 0, 2, 1, 1, 1]' : 0.112907}
{'[2, 0, 3, 1, 6, 5, 0, 0, 25, 11, 26, 0, 0, 0, 2, 1, 1, 1]' : 0.113205}
{'[2, 0, 3, 1, 6, 5, 0, 0, 25, 11, 26, 0, 0, 0, 2, 1, 1, 1]' : 0.113981}
{'[2, 0, 3, 1, 6, 5, 0, 0, 25, 11, 26, 0, 0, 0, 2, 1, 1, 1]' : 0.113032}
{'[2, 0, 3, 1, 6, 5, 0, 0, 25, 11, 26, 0, 0, 0, 2, 1, 1, 1]' : 0.114992}
{'[2, 0, 3, 1, 6, 5, 0, 0, 25, 11, 26, 0, 0, 0, 2, 1, 1, 1]' : 0.112933}
{'[2, 0, 3, 1, 6, 5, 0, 0, 25, 11, 26, 0, 0, 0, 2, 1, 1, 1]' : 0.112997}
{'[2, 0, 3, 1, 6, 5, 0, 0, 25, 11, 26, 0, 0, 0, 2, 1, 1, 1]' : 0.113009}
{'[2, 0, 3, 1, 6, 5, 0, 0, 25, 11, 26, 0, 0, 0, 2, 1, 1, 1]' : 0.113}

out:
 ["{'[2, 0, 3, 1, 6, 5, 0, 0, 25, 11, 26, 0, 0, 0, 2, 1, 1, 1]' : 0.113477}", "{'[2, 0, 3, 1, 6, 5, 0, 0, 25, 11, 26, 0, 0, 0, 2, 1, 1, 1]' : 0.112933}", "{'[2, 0, 3, 1, 6, 5, 0, 0, 25, 11, 26, 0, 0, 0, 2, 1, 1, 1]' : 0.113081}", "{'[2, 0, 3, 1, 6, 5, 0, 0, 25, 11, 26, 0, 0, 0, 2, 1, 1, 1]' : 0.112996}", "{'[2, 0, 3, 1, 6, 5, 0, 0, 25, 11, 26, 0, 0, 0, 2, 1, 1, 1]' : 0.11294}", "{'[2, 0, 3, 1, 6, 5, 0, 0, 25, 11, 26, 0, 0, 0, 2, 1, 1, 1]' : 0.113975}", "{'[2, 0, 3, 1, 6, 5, 0, 0, 25, 11, 26, 0, 0, 0, 2, 1, 1, 1]' : 0.113005}", "{'[2, 0, 3, 1, 6, 5, 0, 0, 25, 11, 26, 0, 0, 0, 2, 1, 1, 1]' : 0.11303}", "{'[2, 0, 3, 1, 6, 5, 0, 0, 25, 11, 26, 0, 0, 0, 2, 1, 1, 1]' : 0.112968}", "{'[2, 0, 3, 1, 6, 5, 0, 0, 25, 11, 26, 0, 0, 0, 2, 1, 1, 1]' : 0.113367}", "{'[2, 0, 3, 1, 6, 5, 0, 0, 25, 11, 26, 0, 0, 0, 2, 1, 1, 1]' : 0.113002}", "{'[2, 0, 3, 1, 6, 5, 0, 0, 25, 11, 26, 0, 0, 0, 2, 1, 1, 1]' : 0.113055}", "{'[2, 0, 3, 1, 6, 5, 0, 0, 25, 11, 26, 0, 0, 0, 2, 1, 1, 1]' : 0.114105}", "{'[2, 0, 3, 1, 6, 5, 0, 0, 25, 11, 26, 0, 0, 0, 2, 1, 1, 1]' : 0.113003}", "{'[2, 0, 3, 1, 6, 5, 0, 0, 25, 11, 26, 0, 0, 0, 2, 1, 1, 1]' : 0.113035}", "{'[2, 0, 3, 1, 6, 5, 0, 0, 25, 11, 26, 0, 0, 0, 2, 1, 1, 1]' : 0.11301}", "{'[2, 0, 3, 1, 6, 5, 0, 0, 25, 11, 26, 0, 0, 0, 2, 1, 1, 1]' : 0.113066}", "{'[2, 0, 3, 1, 6, 5, 0, 0, 25, 11, 26, 0, 0, 0, 2, 1, 1, 1]' : 0.113059}", "{'[2, 0, 3, 1, 6, 5, 0, 0, 25, 11, 26, 0, 0, 0, 2, 1, 1, 1]' : 0.113003}", "{'[2, 0, 3, 1, 6, 5, 0, 0, 25, 11, 26, 0, 0, 0, 2, 1, 1, 1]' : 0.112949}", "{'[2, 0, 3, 1, 6, 5, 0, 0, 25, 11, 26, 0, 0, 0, 2, 1, 1, 1]' : 0.112986}", "{'[2, 0, 3, 1, 6, 5, 0, 0, 25, 11, 26, 0, 0, 0, 2, 1, 1, 1]' : 0.112907}", "{'[2, 0, 3, 1, 6, 5, 0, 0, 25, 11, 26, 0, 0, 0, 2, 1, 1, 1]' : WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = iii
0.113205}", "{'[2, 0, 3, 1, 6, 5, 0, 0, 25, 11, 26, 0, 0, 0, 2, 1, 1, 1]' : 0.113981}", "{'[2, 0, 3, 1, 6, 5, 0, 0, 25, 11, 26, 0, 0, 0, 2, 1, 1, 1]' : 0.113032}", "{'[2, 0, 3, 1, 6, 5, 0, 0, 25, 11, 26, 0, 0, 0, 2, 1, 1, 1]' : 0.114992}", "{'[2, 0, 3, 1, 6, 5, 0, 0, 25, 11, 26, 0, 0, 0, 2, 1, 1, 1]' : 0.112933}", "{'[2, 0, 3, 1, 6, 5, 0, 0, 25, 11, 26, 0, 0, 0, 2, 1, 1, 1]' : 0.112997}", "{'[2, 0, 3, 1, 6, 5, 0, 0, 25, 11, 26, 0, 0, 0, 2, 1, 1, 1]' : 0.113009}", "{'[2, 0, 3, 1, 6, 5, 0, 0, 25, 11, 26, 0, 0, 0, 2, 1, 1, 1]' : 0.113}"]
returning from 'run': {'[2, 0, 3, 1, 6, 5, 0, 0, 25, 11, 26, 0, 0, 0, 2, 1, 1, 1]': ([0.113477, 0.112933, 0.113081, 0.112996, 0.11294, 0.113975, 0.113005, 0.11303, 0.112968, 0.113367, 0.113002, 0.113055, 0.114105, 0.113003, 0.113035, 0.11301, 0.113066, 0.113059, 0.113003, 0.112949, 0.112986, 0.112907, 0.113205, 0.113981, 0.113032, 0.114992, 0.112933, 0.112997, 0.113009, 0.113], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.113477, 0.112933, 0.113081, 0.112996, 0.11294, 0.113975, 0.113005, 0.11303, 0.112968, 0.113367, 0.113002, 0.113055, 0.114105, 0.113003, 0.113035, 0.11301, 0.113066, 0.113059, 0.113003, 0.112949, 0.112986, 0.112907, 0.113205, 0.113981, 0.113032, 0.114992, 0.112933, 0.112997, 0.113009, 0.113], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 3, 1, 6, 5, 0, 0, 25, 11, 26, 0, 0, 0, 2, 1, 1, 1]': ([0.113477, 0.112933, 0.113081, 0.112996, 0.11294, 0.113975, 0.113005, 0.11303, 0.112968, 0.113367, 0.113002, 0.113055, 0.114105, 0.113003, 0.113035, 0.11301, 0.113066, 0.113059, 0.113003, 0.112949, 0.112986, 0.112907, 0.113205, 0.113981, 0.113032, 0.114992, 0.112933, 0.112997, 0.113009, 0.113], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [4, 2, 0, 2, 27, 24, 0, 3, 0, 0, 2, 1]
Fixed Factors: {'ACOPY_x': 0, 'ACOPY_y': 0, 'T2_K': 5, 'T2_J': 6, 'VEC1': 1, 'SCR': 1}
Testing candidate 22: [4, 2, 0, 2, 6, 5, 0, 0, 27, 24, 0, 3, 0, 0, 2, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	67
        Max loop nest depth: 	5
        Additions: 		4596
        Multiplications: 	1976
        Divisions: 		0
        Logical: 		0
        Reads: 			9059
        Writes: 		1703
        Comparisons:		67
        Gotos: 			0
        
digraph CFG {
	30386476 [label="30386476  register int cbv_4, cbv_5;...",shape=box];
	30387367 [label="30387367  register int cbv_13, cbv_14;...",shape=box];
	ForLoop30229361 [label="ForLoop30229361  for (k=kt; k<=cbv_27; k=k+4) {...",shape=box];
	ForLoop30229361 -> 30278829;
	ForLoop30229361 -> _JOIN_30229361;
	ForLoop30228305 [label="ForLoop30228305  for (k=cbv_13; k<=cbv_14; k=k+1) {...",shape=box];
	ForLoop30228305 -> 30277067;
	ForLoop30228305 -> _JOIN_30228305;
	ForLoop30230565 [label="ForLoop30230565  for (k=cbv_43; k<=cbv_44; k=k+1) {...",shape=box];
	ForLoop30230565 -> 30280907;
	ForLoop30230565 -> _JOIN_30230565;
	_JOIN_30230717 [label="_JOIN_30230717None...",shape=box];
	_JOIN_30230717 -> 30390634;
	_JOIN_30229435 [label="_JOIN_30229435None...",shape=box];
	_JOIN_30229435 -> 30229437;
	ForLoop30227559 [label="ForLoop30227559  for (k=kt; k<=cbv_3; k=k+4) {...",shape=box];
	ForLoop30227559 -> 30275766;
	ForLoop30227559 -> _JOIN_30227559;
	30341708 [label="30341708  double scv_184, scv_185, scv_186, scv_187, scv_188, scv_189, scv_190, scv_191;...",shape=box];
	30277677 [label="30277677  double scv_59, scv_60, scv_61, scv_62;...",shape=box];
	_JOIN_30234335 [label="_JOIN_30234335None...",shape=box];
	_JOIN_30234335 -> _JOIN_30234337;
	_JOIN_30230491 [label="_JOIN_30230491None...",shape=box];
	_JOIN_30230491 -> 30390337;
	_JOIN_30228005 [label="_JOIN_30228005None...",shape=box];
	_JOIN_30228005 -> 30387070;
	ForLoop30228079 [label="ForLoop30228079  for (k=cbv_10; k<=cbv_11; k=k+1) {...",shape=box];
	ForLoop30228079 -> 30276683;
	ForLoop30228079 -> _JOIN_30228079;
	ForLoop30229661 [label="ForLoop30229661  for (k=cbv_31; k<=cbv_32; k=k+1) {...",shape=box];
	ForLoop30229661 -> 30279371;
	ForLoop30229661 -> _JOIN_30229661;
	30232149 [label="30232149  int k;...",shape=box];
	30338650 [label="30338650  tmp[(i+20)]=scv_159;...",shape=box];
	30230115 [label="30230115  int k;...",shape=box];
	30278445 [label="30278445  double scv_69, scv_70, scv_71, scv_72;...",shape=box];
	_JOIN_30229135 [label="_JOIN_30229135None...",shape=box];
	_JOIN_30229135 -> 30388555;
	30280523 [label="30280523  double scv_98;...",shape=box];
	_JOIN_30230039 [label="_JOIN_30230039None...",shape=box];
	_JOIN_30230039 -> 30389743;
	30283595 [label="30283595  double scv_138;...",shape=box];
	30278219 [label="30278219  double scv_68;...",shape=box];
	_JOIN_30233056 [label="_JOIN_30233056None...",shape=box];
	_JOIN_30233056 -> ForLoop30234335;
	ForLoop30229813 [label="ForLoop30229813  for (k=kt; k<=cbv_33; k=k+4) {...",shape=box];
	ForLoop30229813 -> 30279597;
	ForLoop30229813 -> _JOIN_30229813;
	30276525 [label="30276525  double scv_44, scv_45, scv_46, scv_47;...",shape=box];
	30046745 [label="30046745  y[i]=0.0;...",shape=box];
	30046745 -> _JOIN_30046746;
	_JOIN_30233051 [label="_JOIN_30233051None...",shape=box];
	_JOIN_30233051 -> _JOIN_30233054;
	ForLoop30231469 [label="ForLoop30231469  for (k=cbv_55; k<=cbv_56; k=k+1) {...",shape=box];
	ForLoop30231469 -> 30282443;
	ForLoop30231469 -> _JOIN_30231469;
	30283211 [label="30283211  double scv_133;...",shape=box];
	30389743 [label="30389743  register int cbv_37, cbv_38;...",shape=box];
	30387961 [label="30387961  register int cbv_19, cbv_20;...",shape=box];
	30386773 [label="30386773  register int cbv_7, cbv_8;...",shape=box];
	_JOIN_30228531 [label="_JOIN_30228531None...",shape=box];
	_JOIN_30228531 -> 30228533;
	ForLoop30046746 [label="ForLoop30046746  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop30046746 -> 30046745;
	ForLoop30046746 -> _JOIN_30046746;
	ForLoop30229887 [label="ForLoop30229887  for (k=cbv_34; k<=cbv_35; k=k+1) {...",shape=box];
	ForLoop30229887 -> 30279755;
	ForLoop30229887 -> _JOIN_30229887;
	_JOIN_30231017 [label="_JOIN_30231017None...",shape=box];
	_JOIN_30231017 -> 30231019;
	30391228 [label="30391228  register int cbv_52, cbv_53;...",shape=box];
	30047039 [label="30047039  register int cbv_2, cbv_3;...",shape=box];
	_JOIN_30231395 [label="_JOIN_30231395None...",shape=box];
	_JOIN_30231395 -> 30391525;
	_JOIN_30227627 [label="_JOIN_30227627None...",shape=box];
	_JOIN_30227627 -> 30227629;
	ForLoop30227853 [label="ForLoop30227853  for (k=cbv_7; k<=cbv_8; k=k+1) {...",shape=box];
	ForLoop30227853 -> 30276299;
	ForLoop30227853 -> _JOIN_30227853;
	30388852 [label="30388852  register int cbv_28, cbv_29;...",shape=box];
	_JOIN_30229887 [label="_JOIN_30229887None...",shape=box];
	_JOIN_30229887 -> 30229889;
	30278987 [label="30278987  double scv_78;...",shape=box];
	30282827 [label="30282827  double scv_128;...",shape=box];
	_JOIN_30227559 [label="_JOIN_30227559None...",shape=box];
	_JOIN_30227559 -> 30386476;
	_JOIN_30234262 [label="_JOIN_30234262None...",shape=box];
	_JOIN_30234262 -> 30395079;
	_JOIN_30232373 [label="_JOIN_30232373None...",shape=box];
	_JOIN_30232373 -> 30232375;
	ForLoop30232825 [label="ForLoop30232825  for (k=cbv_73; k<=cbv_74; k=k+1) {...",shape=box];
	ForLoop30232825 -> 30284747;
	ForLoop30232825 -> _JOIN_30232825;
	ForLoop30231243 [label="ForLoop30231243  for (k=cbv_52; k<=cbv_53; k=k+1) {...",shape=box];
	ForLoop30231243 -> 30282059;
	ForLoop30231243 -> _JOIN_30231243;
	30275766 [label="30275766  double scv_34, scv_35, scv_36, scv_37;...",shape=box];
	ForLoop30232147 [label="ForLoop30232147  for (k=cbv_64; k<=cbv_65; k=k+1) {...",shape=box];
	ForLoop30232147 -> 30283595;
	ForLoop30232147 -> _JOIN_30232147;
	30281133 [label="30281133  double scv_104, scv_105, scv_106, scv_107;...",shape=box];
	_JOIN_30200587 [label="_JOIN_30200587None...",shape=box];
	_JOIN_30200587 -> _JOIN_30200589;
	_JOIN_30200585 [label="_JOIN_30200585None...",shape=box];
	_JOIN_30200585 -> _JOIN_30200587;
	_JOIN_30232525 [label="_JOIN_30232525None...",shape=box];
	_JOIN_30232525 -> 30393010;
	30276141 [label="30276141  double scv_39, scv_40, scv_41, scv_42;...",shape=box];
	_JOIN_30200589 [label="_JOIN_30200589None...",shape=box];
	_JOIN_30200589 -> ForLoop30233054;
	30387070 [label="30387070  register int cbv_10, cbv_11;...",shape=box];
	30228081 [label="30228081  int k;...",shape=box];
	30279597 [label="30279597  double scv_84, scv_85, scv_86, scv_87;...",shape=box];
	ForLoop30228983 [label="ForLoop30228983  for (k=cbv_22; k<=cbv_23; k=k+1) {...",shape=box];
	ForLoop30228983 -> 30278219;
	ForLoop30228983 -> _JOIN_30228983;
	30228985 [label="30228985  int k;...",shape=box];
	30276909 [label="30276909  double scv_49, scv_50, scv_51, scv_52;...",shape=box];
	_JOIN_30232977 [label="_JOIN_30232977None...",shape=box];
	_JOIN_30232977 -> 30393604;
	_JOIN_30229209 [label="_JOIN_30229209None...",shape=box];
	_JOIN_30229209 -> 30229211;
	ForLoop30234135 [label="ForLoop30234135  for (kt=kkk; kt<=cbv_79; kt=kt+32) {...",shape=box];
	ForLoop30234135 -> 30341708;
	ForLoop30234135 -> _JOIN_30234135;
	30235464 [label="30235464  double scv_1;...",shape=box];
	30392416 [label="30392416  register int cbv_64, cbv_65;...",shape=box];
	30277293 [label="30277293  double scv_54, scv_55, scv_56, scv_57;...",shape=box];
	ForLoop30228683 [label="ForLoop30228683  for (k=kt; k<=cbv_18; k=k+4) {...",shape=box];
	ForLoop30228683 -> 30277677;
	ForLoop30228683 -> _JOIN_30228683;
	_JOIN_30231921 [label="_JOIN_30231921None...",shape=box];
	_JOIN_30231921 -> 30231923;
	30338632 [label="30338632  double scv_159, scv_160, scv_161, scv_162, scv_163, scv_164, scv_165, scv_166;...",shape=box];
	_JOIN_30228231 [label="_JOIN_30228231None...",shape=box];
	_JOIN_30228231 -> 30387367;
	_JOIN_30231847 [label="_JOIN_30231847None...",shape=box];
	_JOIN_30231847 -> 30392119;
	30284973 [label="30284973  double scv_154, scv_155, scv_156, scv_157;...",shape=box];
	_JOIN_30232751 [label="_JOIN_30232751None...",shape=box];
	_JOIN_30232751 -> 30393307;
	30228759 [label="30228759  int k;...",shape=box];
	30281675 [label="30281675  double scv_113;...",shape=box];
	ForLoop30231395 [label="ForLoop30231395  for (k=kt; k<=cbv_54; k=k+4) {...",shape=box];
	ForLoop30231395 -> 30282285;
	ForLoop30231395 -> _JOIN_30231395;
	30231697 [label="30231697  int k;...",shape=box];
	ForLoop30231921 [label="ForLoop30231921  for (k=cbv_61; k<=cbv_62; k=k+1) {...",shape=box];
	ForLoop30231921 -> 30283211;
	ForLoop30231921 -> _JOIN_30231921;
	30279755 [label="30279755  double scv_88;...",shape=box];
	30389446 [label="30389446  register int cbv_34, cbv_35;...",shape=box];
	30280139 [label="30280139  double scv_93;...",shape=box];
	ForLoop30231847 [label="ForLoop30231847  for (k=kt; k<=cbv_60; k=k+4) {...",shape=box];
	ForLoop30231847 -> 30283053;
	ForLoop30231847 -> _JOIN_30231847;
	_JOIN_30232599 [label="_JOIN_30232599None...",shape=box];
	_JOIN_30232599 -> 30232601;
	ForLoop30232299 [label="ForLoop30232299  for (k=kt; k<=cbv_66; k=k+4) {...",shape=box];
	ForLoop30232299 -> 30283821;
	ForLoop30232299 -> _JOIN_30232299;
	30393010 [label="30393010  register int cbv_70, cbv_71;...",shape=box];
	ForLoop30229587 [label="ForLoop30229587  for (k=kt; k<=cbv_30; k=k+4) {...",shape=box];
	ForLoop30229587 -> 30279213;
	ForLoop30229587 -> _JOIN_30229587;
	30281517 [label="30281517  double scv_109, scv_110, scv_111, scv_112;...",shape=box];
	30281901 [label="30281901  double scv_114, scv_115, scv_116, scv_117;...",shape=box];
	30277451 [label="30277451  double scv_58;...",shape=box];
	30280749 [label="30280749  double scv_99, scv_100, scv_101, scv_102;...",shape=box];
	30285131 [label="30285131  double scv_158;...",shape=box];
	_JOIN_30230339 [label="_JOIN_30230339None...",shape=box];
	_JOIN_30230339 -> 30230341;
	_JOIN_30231621 [label="_JOIN_30231621None...",shape=box];
	_JOIN_30231621 -> 30391822;
	ForLoop30231169 [label="ForLoop30231169  for (k=kt; k<=cbv_51; k=k+4) {...",shape=box];
	ForLoop30231169 -> 30281901;
	ForLoop30231169 -> _JOIN_30231169;
	_JOIN_30229813 [label="_JOIN_30229813None...",shape=box];
	_JOIN_30229813 -> 30389446;
	_JOIN_30230791 [label="_JOIN_30230791None...",shape=box];
	_JOIN_30230791 -> 30230793;
	_JOIN_30228457 [label="_JOIN_30228457None...",shape=box];
	_JOIN_30228457 -> 30387664;
	ForLoop30231621 [label="ForLoop30231621  for (k=kt; k<=cbv_57; k=k+4) {...",shape=box];
	ForLoop30231621 -> 30282669;
	ForLoop30231621 -> _JOIN_30231621;
	ForLoop30046677 [label="ForLoop30046677  for (i=0; i<=cbv_1; i=i+28) {...",shape=box];
	ForLoop30046677 -> 30046432;
	ForLoop30046677 -> _JOIN_30046677;
	30278603 [label="30278603  double scv_73;...",shape=box];
	ForLoop30229209 [label="ForLoop30229209  for (k=cbv_25; k<=cbv_26; k=k+1) {...",shape=box];
	ForLoop30229209 -> 30278603;
	ForLoop30229209 -> _JOIN_30229209;
	30231923 [label="30231923  int k;...",shape=box];
	_JOIN_30232825 [label="_JOIN_30232825None...",shape=box];
	_JOIN_30232825 -> 30232827;
	ForLoop30227627 [label="ForLoop30227627  for (k=cbv_4; k<=cbv_5; k=k+1) {...",shape=box];
	ForLoop30227627 -> 30275915;
	ForLoop30227627 -> _JOIN_30227627;
	30392713 [label="30392713  register int cbv_67, cbv_68;...",shape=box];
	30280907 [label="30280907  double scv_103;...",shape=box];
	ForLoop30230491 [label="ForLoop30230491  for (k=kt; k<=cbv_42; k=k+4) {...",shape=box];
	ForLoop30230491 -> 30280749;
	ForLoop30230491 -> _JOIN_30230491;
	30231245 [label="30231245  int k;...",shape=box];
	ForLoop30200587 [label="ForLoop30200587  for (jj=jjj; jj<=min(ny-1,jjj+2016); jj=jj+32) {...",shape=box];
	ForLoop30200587 -> 30370568;
	ForLoop30200587 -> _JOIN_30200587;
	ForLoop30200585 [label="ForLoop30200585  for (j=jj; j<=cbv_1; j=j+1) {...",shape=box];
	ForLoop30200585 -> 30235464;
	ForLoop30200585 -> _JOIN_30200585;
	30393307 [label="30393307  register int cbv_73, cbv_74;...",shape=box];
	_JOIN_30228757 [label="_JOIN_30228757None...",shape=box];
	_JOIN_30228757 -> 30228759;
	ForLoop30200589 [label="ForLoop30200589  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop30200589 -> ForLoop30200587;
	ForLoop30200589 -> _JOIN_30200589;
	30370568 [label="30370568  register int cbv_1;...",shape=box];
	ForLoop30228909 [label="ForLoop30228909  for (k=kt; k<=cbv_21; k=k+4) {...",shape=box];
	ForLoop30228909 -> 30278061;
	ForLoop30228909 -> _JOIN_30228909;
	30230341 [label="30230341  int k;...",shape=box];
	30283437 [label="30283437  double scv_134, scv_135, scv_136, scv_137;...",shape=box];
	ForLoop30231017 [label="ForLoop30231017  for (k=cbv_49; k<=cbv_50; k=k+1) {...",shape=box];
	ForLoop30231017 -> 30281675;
	ForLoop30231017 -> _JOIN_30231017;
	ForLoop30230265 [label="ForLoop30230265  for (k=kt; k<=cbv_39; k=k+4) {...",shape=box];
	ForLoop30230265 -> 30280365;
	ForLoop30230265 -> _JOIN_30230265;
	ForLoop30227432 [label="ForLoop30227432  for (kt=kkk; kt<=cbv_2; kt=kt+32) {...",shape=box];
	ForLoop30227432 -> 30273387;
	ForLoop30227432 -> _JOIN_30227432;
	ForLoop30230717 [label="ForLoop30230717  for (k=kt; k<=cbv_45; k=k+4) {...",shape=box];
	ForLoop30230717 -> 30281133;
	ForLoop30230717 -> _JOIN_30230717;
	ForLoop30233179 [label="ForLoop30233179  for (j=jj; j<=cbv_78; j=j+1) {...",shape=box];
	ForLoop30233179 -> 30233178;
	ForLoop30233179 -> _JOIN_30233179;
	30281291 [label="30281291  double scv_108;...",shape=box];
	30282443 [label="30282443  double scv_123;...",shape=box];
	30229211 [label="30229211  int k;...",shape=box];
	30393684 [label="30393684  register int cbv_78;...",shape=box];
	ForLoop30229435 [label="ForLoop30229435  for (k=cbv_28; k<=cbv_29; k=k+1) {...",shape=box];
	ForLoop30229435 -> 30278987;
	ForLoop30229435 -> _JOIN_30229435;
	30279213 [label="30279213  double scv_79, scv_80, scv_81, scv_82;...",shape=box];
	30279371 [label="30279371  double scv_83;...",shape=box];
	ForLoop30232073 [label="ForLoop30232073  for (k=kt; k<=cbv_63; k=k+4) {...",shape=box];
	ForLoop30232073 -> 30283437;
	ForLoop30232073 -> _JOIN_30232073;
	30276299 [label="30276299  double scv_43;...",shape=box];
	30229437 [label="30229437  int k;...",shape=box];
	30395079 [label="30395079  register int cbv_81, cbv_82;...",shape=box];
	ForLoop30233056 [label="ForLoop30233056  for (i=ii; i<=min(nx-1,ii+127)-24; i=i+25) {...",shape=box];
	ForLoop30233056 -> 30338632;
	ForLoop30233056 -> _JOIN_30233056;
	30386227 [label="30386227  register int cbv_2;...",shape=box];
	ForLoop30233054 [label="ForLoop30233054  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop30233054 -> 30386227;
	ForLoop30233054 -> _JOIN_30233054;
	30283053 [label="30283053  double scv_129, scv_130, scv_131, scv_132;...",shape=box];
	_JOIN_30232073 [label="_JOIN_30232073None...",shape=box];
	_JOIN_30232073 -> 30392416;
	ForLoop30228757 [label="ForLoop30228757  for (k=cbv_19; k<=cbv_20; k=k+1) {...",shape=box];
	ForLoop30228757 -> 30277835;
	ForLoop30228757 -> _JOIN_30228757;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 30045970;
	ForLoop30233051 [label="ForLoop30233051  for (k=cbv_76; k<=cbv_77; k=k+1) {...",shape=box];
	ForLoop30233051 -> 30285131;
	ForLoop30233051 -> _JOIN_30233051;
	_JOIN_30231243 [label="_JOIN_30231243None...",shape=box];
	_JOIN_30231243 -> 30231245;
	ForLoop30232977 [label="ForLoop30232977  for (k=kt; k<=cbv_75; k=k+4) {...",shape=box];
	ForLoop30232977 -> 30284973;
	ForLoop30232977 -> _JOIN_30232977;
	30284589 [label="30284589  double scv_149, scv_150, scv_151, scv_152;...",shape=box];
	30228533 [label="30228533  int k;...",shape=box];
	30387664 [label="30387664  register int cbv_16, cbv_17;...",shape=box];
	30391822 [label="30391822  register int cbv_58, cbv_59;...",shape=box];
	30276683 [label="30276683  double scv_48;...",shape=box];
	_JOIN_30229587 [label="_JOIN_30229587None...",shape=box];
	_JOIN_30229587 -> 30389149;
	ForLoop30230791 [label="ForLoop30230791  for (k=cbv_46; k<=cbv_47; k=k+1) {...",shape=box];
	ForLoop30230791 -> 30281291;
	ForLoop30230791 -> _JOIN_30230791;
	30229889 [label="30229889  int k;...",shape=box];
	30394830 [label="30394830  register int cbv_79;...",shape=box];
	_JOIN_30230565 [label="_JOIN_30230565None...",shape=box];
	_JOIN_30230565 -> 30230567;
	30388555 [label="30388555  register int cbv_25, cbv_26;...",shape=box];
	30232827 [label="30232827  int k;...",shape=box];
	_JOIN_30231469 [label="_JOIN_30231469None...",shape=box];
	_JOIN_30231469 -> 30231471;
	ForLoop30228231 [label="ForLoop30228231  for (k=kt; k<=cbv_12; k=k+4) {...",shape=box];
	ForLoop30228231 -> 30276909;
	ForLoop30228231 -> _JOIN_30228231;
	_JOIN_30228079 [label="_JOIN_30228079None...",shape=box];
	_JOIN_30228079 -> 30228081;
	ForLoop30228457 [label="ForLoop30228457  for (k=kt; k<=cbv_15; k=k+4) {...",shape=box];
	ForLoop30228457 -> 30277293;
	ForLoop30228457 -> _JOIN_30228457;
	_JOIN_30229361 [label="_JOIN_30229361None...",shape=box];
	_JOIN_30229361 -> 30388852;
	_JOIN_30227853 [label="_JOIN_30227853None...",shape=box];
	_JOIN_30227853 -> 30227855;
	30277067 [label="30277067  double scv_53;...",shape=box];
	ForLoop30228531 [label="ForLoop30228531  for (k=cbv_16; k<=cbv_17; k=k+1) {...",shape=box];
	ForLoop30228531 -> 30277451;
	ForLoop30228531 -> _JOIN_30228531;
	_JOIN_30233180 [label="_JOIN_30233180None...",shape=box];
	_JOIN_30233180 -> _JOIN_30233181;
	30231471 [label="30231471  int k;...",shape=box];
	_JOIN_30230943 [label="_JOIN_30230943None...",shape=box];
	_JOIN_30230943 -> 30390931;
	ForLoop30228005 [label="ForLoop30228005  for (k=kt; k<=cbv_9; k=k+4) {...",shape=box];
	ForLoop30228005 -> 30276525;
	ForLoop30228005 -> _JOIN_30228005;
	30227855 [label="30227855  int k;...",shape=box];
	ForLoop30232751 [label="ForLoop30232751  for (k=kt; k<=cbv_72; k=k+4) {...",shape=box];
	ForLoop30232751 -> 30284589;
	ForLoop30232751 -> _JOIN_30232751;
	ForLoop30232373 [label="ForLoop30232373  for (k=cbv_67; k<=cbv_68; k=k+1) {...",shape=box];
	ForLoop30232373 -> 30283979;
	ForLoop30232373 -> _JOIN_30232373;
	30388258 [label="30388258  register int cbv_22, cbv_23;...",shape=box];
	_JOIN_30229661 [label="_JOIN_30229661None...",shape=box];
	_JOIN_30229661 -> 30229663;
	ForLoop30230039 [label="ForLoop30230039  for (k=kt; k<=cbv_36; k=k+4) {...",shape=box];
	ForLoop30230039 -> 30279981;
	ForLoop30230039 -> _JOIN_30230039;
	30280365 [label="30280365  double scv_94, scv_95, scv_96, scv_97;...",shape=box];
	_JOIN_30230265 [label="_JOIN_30230265None...",shape=box];
	_JOIN_30230265 -> 30390040;
	ForLoop30234337 [label="ForLoop30234337  for (ii=0; ii<=nx-1; ii=ii+128) {...",shape=box];
	ForLoop30234337 -> 30199576;
	ForLoop30234337 -> _JOIN_30234337;
	ForLoop30234335 [label="ForLoop30234335  for (i=(min(nx-1,ii+127))-(((min(nx-1,ii+127))-(ii)+1)%25)+1; i<=min(nx-1,ii+127); i=i+1) {...",shape=box];
	ForLoop30234335 -> 30345741;
	ForLoop30234335 -> _JOIN_30234335;
	30230567 [label="30230567  int k;...",shape=box];
	ForLoop30234333 [label="ForLoop30234333  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop30234333 -> 30394830;
	ForLoop30234333 -> _JOIN_30234333;
	ForLoop30234330 [label="ForLoop30234330  for (k=cbv_81; k<=cbv_82; k=k+1) {...",shape=box];
	ForLoop30234330 -> 30342700;
	ForLoop30234330 -> _JOIN_30234330;
	_JOIN_30228683 [label="_JOIN_30228683None...",shape=box];
	_JOIN_30228683 -> 30387961;
	30278829 [label="30278829  double scv_74, scv_75, scv_76, scv_77;...",shape=box];
	ForLoop30232599 [label="ForLoop30232599  for (k=cbv_70; k<=cbv_71; k=k+1) {...",shape=box];
	ForLoop30232599 -> 30284363;
	ForLoop30232599 -> _JOIN_30232599;
	30282669 [label="30282669  double scv_124, scv_125, scv_126, scv_127;...",shape=box];
	ForLoop30233180 [label="ForLoop30233180  for (jj=jjj; jj<=min(ny-1,jjj+2016); jj=jj+32) {...",shape=box];
	ForLoop30233180 -> 30393684;
	ForLoop30233180 -> _JOIN_30233180;
	30389149 [label="30389149  register int cbv_31, cbv_32;...",shape=box];
	ForLoop30233181 [label="ForLoop30233181  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop30233181 -> ForLoop30233180;
	ForLoop30233181 -> _JOIN_30233181;
	_JOIN_30234135 [label="_JOIN_30234135None...",shape=box];
	_JOIN_30234135 -> 30234136;
	30283979 [label="30283979  double scv_143;...",shape=box];
	30393604 [label="30393604  register int cbv_76, cbv_77;...",shape=box];
	30278061 [label="30278061  double scv_64, scv_65, scv_66, scv_67;...",shape=box];
	30273387 [label="30273387  double scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8, scv_9;...",shape=box];
	_JOIN_30231695 [label="_JOIN_30231695None...",shape=box];
	_JOIN_30231695 -> 30231697;
	_JOIN_30228983 [label="_JOIN_30228983None...",shape=box];
	_JOIN_30228983 -> 30228985;
	30234136 [label="30234136  int k;...",shape=box];
	30284205 [label="30284205  double scv_144, scv_145, scv_146, scv_147;...",shape=box];
	_JOIN_30234333 [label="_JOIN_30234333None...",shape=box];
	_JOIN_30234333 -> 30345753;
	_JOIN_30234330 [label="_JOIN_30234330None...",shape=box];
	_JOIN_30234330 -> _JOIN_30234333;
	ForLoop30232525 [label="ForLoop30232525  for (k=kt; k<=cbv_69; k=k+4) {...",shape=box];
	ForLoop30232525 -> 30284205;
	ForLoop30232525 -> _JOIN_30232525;
	30228307 [label="30228307  int k;...",shape=box];
	30390634 [label="30390634  register int cbv_46, cbv_47;...",shape=box];
	_JOIN_30046677 [label="_JOIN_30046677None...",shape=box];
	_JOIN_30046677 -> 30047039;
	ForLoop30230339 [label="ForLoop30230339  for (k=cbv_40; k<=cbv_41; k=k+1) {...",shape=box];
	ForLoop30230339 -> 30280523;
	ForLoop30230339 -> _JOIN_30230339;
	_JOIN_30232299 [label="_JOIN_30232299None...",shape=box];
	_JOIN_30232299 -> 30392713;
	30232375 [label="30232375  int k;...",shape=box];
	_JOIN_30227779 [label="_JOIN_30227779None...",shape=box];
	_JOIN_30227779 -> 30386773;
	30345741 [label="30345741  double scv_221;...",shape=box];
	30199576 [label="30199576  int i;...",shape=box];
	30199576 -> ForLoop30233056;
	30282059 [label="30282059  double scv_118;...",shape=box];
	_JOIN_30230113 [label="_JOIN_30230113None...",shape=box];
	_JOIN_30230113 -> 30230115;
	30390040 [label="30390040  register int cbv_40, cbv_41;...",shape=box];
	30342551 [label="30342551  double scv_216, scv_217, scv_218, scv_219;...",shape=box];
	30283821 [label="30283821  double scv_139, scv_140, scv_141, scv_142;...",shape=box];
	ForLoop30229135 [label="ForLoop30229135  for (k=kt; k<=cbv_24; k=k+4) {...",shape=box];
	ForLoop30229135 -> 30278445;
	ForLoop30229135 -> _JOIN_30229135;
	30expected=9369846271501.798828
actual=9369846271501.798828
227629 [label="30227629  int k;...",shape=box];
	30046432 [label="30046432  y[i]=0.0;...",shape=box];
	ForLoop30230943 [label="ForLoop30230943  for (k=kt; k<=cbv_48; k=k+4) {...",shape=box];
	ForLoop30230943 -> 30281517;
	ForLoop30230943 -> _JOIN_30230943;
	30232601 [label="30232601  int k;...",shape=box];
	_JOIN_30231169 [label="_JOIN_30231169None...",shape=box];
	_JOIN_30231169 -> 30391228;
	30229663 [label="30229663  int k;...",shape=box];
	30391525 [label="30391525  register int cbv_55, cbv_56;...",shape=box];
	30277835 [label="30277835  double scv_63;...",shape=box];
	30282285 [label="30282285  double scv_119, scv_120, scv_121, scv_122;...",shape=box];
	30279981 [label="30279981  double scv_89, scv_90, scv_91, scv_92;...",shape=box];
	30275915 [label="30275915  double scv_38;...",shape=box];
	_JOIN_30233181 [label="_JOIN_30233181None...",shape=box];
	_JOIN_30233181 -> ForLoop30234333;
	_JOIN_30046746 [label="_JOIN_30046746None...",shape=box];
	_JOIN_30046746 -> 30199561;
	_JOIN_30228305 [label="_JOIN_30228305None...",shape=box];
	_JOIN_30228305 -> 30228307;
	30392119 [label="30392119  register int cbv_61, cbv_62;...",shape=box];
	_JOIN_30232147 [label="_JOIN_30232147None...",shape=box];
	_JOIN_30232147 -> 30232149;
	_JOIN_30234337 [label="_JOIN_30234337None...",shape=box];
	_JOIN_30228909 [label="_JOIN_30228909None...",shape=box];
	_JOIN_30228909 -> 30388258;
	30390931 [label="30390931  register int cbv_49, cbv_50;...",shape=box];
	30231019 [label="30231019  int k;...",shape=box];
	30284363 [label="30284363  double scv_148;...",shape=box];
	_JOIN_30233054 [label="_JOIN_30233054None...",shape=box];
	_JOIN_30233054 -> 30338650;
	30233178 [label="30233178  scv_221=scv_221+A[i*ny+j]*x[j];...",shape=box];
	30233178 -> _JOIN_30233179;
	ForLoop30231695 [label="ForLoop30231695  for (k=cbv_58; k<=cbv_59; k=k+1) {...",shape=box];
	ForLoop30231695 -> 30282827;
	ForLoop30231695 -> _JOIN_30231695;
	30230793 [label="30230793  int k;...",shape=box];
	_JOIN_30227432 [label="_JOIN_30227432None...",shape=box];
	_JOIN_30227432 -> 30227433;
	30345753 [label="30345753  tmp[i]=scv_221;...",shape=box];
	30345753 -> _JOIN_30234335;
	_JOIN_30233179 [label="_JOIN_30233179None...",shape=box];
	_JOIN_30233179 -> _JOIN_30233180;
	30227433 [label="30227433  int k;...",shape=box];
	ForLoop30227779 [label="ForLoop30227779  for (k=kt; k<=cbv_6; k=k+4) {...",shape=box];
	ForLoop30227779 -> 30276141;
	ForLoop30227779 -> _JOIN_30227779;
	ForLoop30230113 [label="ForLoop30230113  for (k=cbv_37; k<=cbv_38; k=k+1) {...",shape=box];
	ForLoop30230113 -> 30280139;
	ForLoop30230113 -> _JOIN_30230113;
	30199561 [label="30199561  double x_copy;...",shape=box];
	30390337 [label="30390337  register int cbv_43, cbv_44;...",shape=box];
	30284747 [label="30284747  double scv_153;...",shape=box];
	ForLoop30234262 [label="ForLoop30234262  for (k=kt; k<=cbv_80; k=k+4) {...",shape=box];
	ForLoop30234262 -> 30342551;
	ForLoop30234262 -> _JOIN_30234262;
	30045970 [label="30045970  int i;...",shape=box];
	30342700 [label="30342700  double scv_220;...",shape=box];

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest122.exe __orio_perftest122.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest122.exe  
{'[4, 2, 0, 2, 6, 5, 0, 0, 27, 24, 0, 3, 0, 0, 2, 1, 1, 1]' : 0.121343}
{'[4, 2, 0, 2, 6, 5, 0, 0, 27, 24, 0, 3, 0, 0, 2, 1, 1, 1]' : 0.120949}
{'[4, 2, 0, 2, 6, 5, 0, 0, 27, 24, 0, 3, 0, 0, 2, 1, 1, 1]' : 0.120807}
{'[4, 2, 0, 2, 6, 5, 0, 0, 27, 24, 0, 3, 0, 0, 2, 1, 1, 1]' : 0.120918}
{'[4, 2, 0, 2, 6, 5, 0, 0, 27, 24, 0, 3, 0, 0, 2, 1, 1, 1]' : 0.120982}
{'[4, 2, 0, 2, 6, 5, 0, 0, 27, 24, 0, 3, 0, 0, 2, 1, 1, 1]' : 0.120959}
{'[4, 2, 0, 2, 6, 5, 0, 0, 27, 24, 0, 3, 0, 0, 2, 1, 1, 1]' : 0.120867}
{'[4, 2, 0, 2, 6, 5, 0, 0, 27, 24, 0, 3, 0, 0, 2, 1, 1, 1]' : 0.120787}
{'[4, 2, 0, 2, 6, 5, 0, 0, 27, 24, 0, 3, 0, 0, 2, 1, 1, 1]' : 0.120795}
{'[4, 2, 0, 2, 6, 5, 0, 0, 27, 24, 0, 3, 0, 0, 2, 1, 1, 1]' : 0.12221}
{'[4, 2, 0, 2, 6, 5, 0, 0, 27, 24, 0, 3, 0, 0, 2, 1, 1, 1]' : 0.12084}
{'[4, 2, 0, 2, 6, 5, 0, 0, 27, 24, 0, 3, 0, 0, 2, 1, 1, 1]' : 0.120819}
{'[4, 2, 0, 2, 6, 5, 0, 0, 27, 24, 0, 3, 0, 0, 2, 1, 1, 1]' : 0.120834}
{'[4, 2, 0, 2, 6, 5, 0, 0, 27, 24, 0, 3, 0, 0, 2, 1, 1, 1]' : 0.120777}
{'[4, 2, 0, 2, 6, 5, 0, 0, 27, 24, 0, 3, 0, 0, 2, 1, 1, 1]' : 0.120804}
{'[4, 2, 0, 2, 6, 5, 0, 0, 27, 24, 0, 3, 0, 0, 2, 1, 1, 1]' : 0.120811}
{'[4, 2, 0, 2, 6, 5, 0, 0, 27, 24, 0, 3, 0, 0, 2, 1, 1, 1]' : 0.120891}
{'[4, 2, 0, 2, 6, 5, 0, 0, 27, 24, 0, 3, 0, 0, 2, 1, 1, 1]' : 0.120983}
{'[4, 2, 0, 2, 6, 5, 0, 0, 27, 24, 0, 3, 0, 0, 2, 1, 1, 1]' : 0.120792}
{'[4, 2, 0, 2, 6, 5, 0, 0, 27, 24, 0, 3, 0, 0, 2, 1, 1, 1]' : 0.121425}
{'[4, 2, 0, 2, 6, 5, 0, 0, 27, 24, 0, 3, 0, 0, 2, 1, 1, 1]' : 0.132347}
{'[4, 2, 0, 2, 6, 5, 0, 0, 27, 24, 0, 3, 0, 0, 2, 1, 1, 1]' : 0.151514}
{'[4, 2, 0, 2, 6, 5, 0, 0, 27, 24, 0, 3, 0, 0, 2, 1, 1, 1]' : 0.121562}
{'[4, 2, 0, 2, 6, 5, 0, 0, 27, 24, 0, 3, 0, 0, 2, 1, 1, 1]' : 0.120816}
{'[4, 2, 0, 2, 6, 5, 0, 0, 27, 24, 0, 3, 0, 0, 2, 1, 1, 1]' : 0.120827}
{'[4, 2, 0, 2, 6, 5, 0, 0, 27, 24, 0, 3, 0, 0, 2, 1, 1, 1]' : 0.121843}
{'[4, 2, 0, 2, 6, 5, 0, 0, 27, 24, 0, 3, 0, 0, 2, 1, 1, 1]' : 0.120864}
{'[4, 2, 0, 2, 6, 5, 0, 0, 27, 24, 0, 3, 0, 0, 2, 1, 1, 1]' : 0.120831}
{'[4, 2, 0, 2, 6, 5, 0, 0, 27, 24, 0, 3, 0, 0, 2, 1, 1, 1]' : 0.120991}
{'[4, 2, 0, 2, 6, 5, 0, 0, 27, 24, 0, 3, 0, 0, 2, 1, 1, 1]' : 0.120824}

out:
 ["{'[4, 2, 0, 2, 6, 5, 0, 0, 27, 24, 0, 3, 0, 0, 2, 1, 1, 1]' : 0.121343}", "{'[4, 2, 0, 2, 6, 5, 0, 0, 27, 24, 0, 3, 0, 0, 2, 1, 1, 1]' : 0.120949}", "{'[4, 2, 0, 2, 6, 5, 0, 0, 27, 24, 0, 3, 0, 0, 2, 1, 1, 1]' : 0.120807}", "{'[4, 2, 0, 2, 6, 5, 0, 0, 27, 24, 0, 3, 0, 0, 2, 1, 1, 1]' : 0.120918}", "{'[4, 2, 0, 2, 6, 5, 0, 0, 27, 24, 0, 3, 0, 0, 2, 1, 1, 1]' : 0.120982}", "{'[4, 2, 0, 2, 6, 5, 0, 0, 27, 24, 0, 3, 0, 0, 2, 1, 1, 1]' : 0.120959}", "{'[4, 2, 0, 2, 6, 5, 0, 0, 27, 24, 0, 3, 0, 0, 2, 1, 1, 1]' : 0.120867}", "{'[4, 2, 0, 2, 6, 5, 0, 0, 27, 24, 0, 3, 0, 0, 2, 1, 1, 1]' : 0.120787}", "{'[4, 2, 0, 2, 6, 5, 0, 0, 27, 24, 0, 3, 0, 0, 2, 1, 1, 1]' : 0.120795}", "{'[4, 2, 0, 2, 6, 5, 0, 0, 27, 24, 0, 3, 0, 0, 2, 1, 1, 1]' : 0.12221}", "{'[4, 2, 0, 2, 6, 5, 0, 0, 27, 24, 0, 3, 0, 0, 2, 1, 1, 1]' : 0.12084}", "{'[4, 2, 0, 2, 6, 5, 0, 0, 27, 24, 0, 3, 0, 0, 2, 1, 1, 1]' : 0.120819}", "{'[4, 2, 0, 2, 6, 5, 0, 0, 27, 24, 0, 3, 0, 0, 2, 1, 1, 1]' : 0.120834}", "{'[4, 2, 0, 2, 6, 5, 0, 0, 27, 24, 0, 3, 0, 0, 2, 1, 1, 1]' : 0.120777}", "{'[4, 2, 0, 2, 6, 5, 0, 0, 27, 24, 0, 3, 0, 0, 2, 1, 1, 1]' : 0.120804}", "{'[4, 2, 0, 2, 6, 5, 0, 0, 27, 24, 0, 3, 0, 0, 2, 1, 1, 1]' : 0.120811}", "{'[4, 2, 0, 2, 6, 5, 0, 0, 27, 24, 0, 3, 0, 0, 2, 1, 1, 1]' : 0.120891}", "{'[4, 2, 0, 2, 6, 5, 0, 0, 27, 24, 0, 3, 0, 0, 2, 1, 1, 1]' : 0.120983}", "{'[4, 2, 0, 2, 6, 5, 0, 0, 27, 24, 0, 3, 0, 0, 2, 1, 1, 1]' : 0.120792}", "{'[4, 2, 0, 2, 6, 5, 0, 0, 27, 24, 0, 3, 0, 0, 2, 1, 1, 1]' : 0.121425}", "{'[4, 2, 0, 2, 6, 5, 0, 0, 27, 24, 0, 3, 0, 0, 2, 1, 1, 1]' : 0.132347}", "{'[4, 2, 0, 2, 6, 5, 0, 0, 27, 24, 0, 3, 0, 0, 2, 1, 1, 1]' : 0.151514}", "{'[4, 2, 0, 2, 6, 5, 0, 0, 27, 24, 0, 3, 0, 0, 2, 1, 1, 1]' : 0.121562}", "{'[4, 2, 0, 2, 6, 5, 0, 0, 27, 24, 0, 3, 0, 0, 2, 1, 1, 1]' : 0.120816}", "{'[4, 2, 0, 2, 6, 5, 0, 0, 27, 24, 0, 3, 0, 0, 2, 1, 1, 1]' : 0.120827}", "{'[4, 2, 0, 2, 6, 5, 0, 0, 27, 24, 0, 3, 0, 0, 2, 1, 1, 1]' : 0.121843}", "{'[4, 2, 0, 2, 6, 5, 0, 0, 27, 24, 0, 3, 0, 0, 2, 1, 1, 1]' : 0.120864}", "{'[4, 2, 0, 2, 6, 5, 0, 0, 27, 24, 0, 3, 0, 0, 2, 1, 1, 1]' : 0.120831}", "{'[4, 2, 0, 2, 6, 5, 0, 0, 27, 24, 0, 3, 0, 0, 2, 1, 1, 1]' : 0.120991}", "{'[4, 2, 0, 2, 6, 5, 0, 0, 27, 24, 0, 3, 0, 0, 2, 1, 1, 1]' : 0.120824}"]
returning from 'run': {'[4, 2, 0, 2, 6, 5, 0, 0, 27, 24, 0, 3, 0, 0, 2, 1, 1, 1]': ([0.121343, 0.120949, 0.120807, 0.120918, 0.120982, 0.120959, 0.120867, 0.120787, 0.120795, 0.12221, 0.12084, 0.120819, 0.120834, 0.120777, 0.120804, 0.120811, 0.120891, 0.120983, 0.120792, 0.121425, 0.132347, 0.151514, 0.121562, 0.120816, 0.120827, 0.121843, 0.120864, 0.120831, 0.120991, 0.120824], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.121343, 0.120949, 0.120807, 0.120918, 0.120982, 0.120959, 0.120867, 0.120787, 0.120795, 0.12221, 0.12084, 0.120819, 0.120834, 0.120777, 0.120804, 0.120811, 0.120891, 0.120983, 0.120792, 0.121425, 0.132347, 0.151514, 0.121562, 0.120816, 0.120827, 0.121843, 0.120864, 0.120831, 0.120991, 0.120824], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[4, 2, 0, 2, 6, 5, 0, 0, 27, 24, 0, 3, 0, 0, 2, 1, 1, 1]': ([0.121343, 0.120949, 0.120807, 0.120918, 0.120982, 0.120959, 0.120867, 0.120787, 0.120795, 0.12221, 0.12084, 0.120819, 0.120834, 0.120777, 0.120804, 0.120811, 0.120891, 0.120983, 0.120792, 0.121425, 0.132347, 0.151514, 0.121562, 0.120816, 0.120827, 0.121843, 0.120864, 0.120831, 0.120991, 0.120824], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [2, 0, 6, 1, 8, 4, 0, 8, 0, 0, 2, 0]
Fixed Factors: {'ACOPY_x': 0, 'ACOPY_y': 0, 'T2_K': 5, 'T2_J': 6, 'VEC1': 1, 'SCR': 1}
Testing candidate 23: [2, 0, 6, 1, 6, 5, 0, 0, 8, 4, 0, 8, 0, 0, 2, 1, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	28
        Max loop nest depth: 	6
        Additions: 		1310
        Multiplications: 	516
        Divisions: 		0
        Logical: 		0
        Reads: 			2834
        Writes: 		594
        Comparisons:		28
        Gotos: 			0
        
digraph CFG {
	ForLoop30395855 [label="ForLoop30395855  for (i=0; i<=cbv_1; i=i+9) {...",shape=box];
	ForLoop30395855 -> 30395781;
	ForLoop30395855 -> _JOIN_30395855;
	_JOIN_30475097 [label="_JOIN_30475097None...",shape=box];
	_JOIN_30475097 -> ForLoop30482282;
	_JOIN_30475095 [label="_JOIN_30475095None...",shape=box];
	_JOIN_30475095 -> _JOIN_30475097;
	30495150 [label="30495150  double scv_73;...",shape=box];
	30474864 [label="30474864  int i;...",shape=box];
	30474864 -> ForLoop30482284;
	30495636 [label="30495636  double scv_74, scv_75, scv_76, scv_77, scv_78, scv_79, scv_80, scv_81;...",shape=box];
	ForLoop30482203 [label="ForLoop30482203  for (k=kt; k<=min(ny-1,kk+511)-8; k=k+9) {...",shape=box];
	ForLoop30482203 -> 30495636;
	ForLoop30482203 -> _JOIN_30482203;
	_JOIN_30482389 [label="_JOIN_30482389None...",shape=box];
	_JOIN_30482389 -> _JOIN_30482390;
	30395923 [label="30395923  y[i]=0.0;...",shape=box];
	30395923 -> _JOIN_30395924;
	ForLoop30480625 [label="ForLoop30480625  for (k=kt; k<=min(ny-1,kk+511)-8; k=k+9) {...",shape=box];
	ForLoop30480625 -> 30492645;
	ForLoop30480625 -> _JOIN_30480625;
	30494886 [label="30494886  double scv_64, scv_65, scv_66, scv_67, scv_68, scv_69, scv_70, scv_71;...",shape=box];
	ForLoop30483629 [label="ForLoop30483629  for (k=kt; k<=min(ny-1,kk+511)-8; k=k+9) {...",shape=box];
	ForLoop30483629 -> 30518841;
	ForLoop30483629 -> _JOIN_30483629;
	ForLoop30482280 [label="ForLoop30482280  for (kk=kkk; kk<=min(ny-1,kkk+512); kk=kk+512) {...",shape=box];
	ForLoop30482280 -> ForLoop30480358;
	ForLoop30482280 -> _JOIN_30482280;
	ForLoop30482282 [label="ForLoop30482282  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop30482282 -> ForLoop30482280;
	ForLoop30482282 -> _JOIN_30482282;
	ForLoop30481015 [label="ForLoop30481015  for (k=kt; k<=min(ny-1,kk+511)-8; k=k+9) {...",shape=box];
	ForLoop30481015 -> 30493386;
	ForLoop30481015 -> _JOIN_30481015;
	30481883 [label="30481883  int k;...",shape=box];
	30481883 -> ForLoop30482203;
	ForLoop30483697 [label="ForLoop30483697  for (k=(min(ny-1,kk+511))-(((min(ny-1,kk+511))-(kt)+1)%9)+1; k<=min(ny-1,kk+511); k=k+1) {...",shape=box];
	ForLoop30483697 -> 30519096;
	ForLoop30483697 -> _JOIN_30483697;
	ForLoop30481807 [label="ForLoop30481807  for (k=kt; k<=min(ny-1,kk+511)-8; k=k+9) {...",shape=box];
	ForLoop30481807 -> 30494886;
	ForLoop30481807 -> _JOIN_30481807;
	_JOIN_30482390 [label="_JOIN_30482390None...",shape=box];
	_JOIN_30482390 -> ForLoop30483701;
	30515955 [label="30515955  tmp[(i+2)]=scv_84;...",shape=box];
	ForLoop30481411 [label="ForLoop30481411  for (k=kt; k<=min(ny-1,kk+511)-8; k=k+9) {...",shape=box];
	ForLoop30481411 -> 30494136;
	ForLoop30481411 -> _JOIN_30481411;
	_JOIN_30395855 [label="_JOIN_30395855None...",shape=box];
	_JOIN_30395855 -> 30396046;
	ForLoop30481881 [label="ForLoop30481881  for (k=(min(ny-1,kk+511))-(((min(ny-1,kk+511))-(kt)+1)%9)+1; k<=min(ny-1,kk+511); k=k+1) {...",shape=box];
	ForLoop30481881 -> 30495150;
	ForLoop30481881 -> _JOIN_30481881;
	30493650 [label="30493650  double scv_53;...",shape=box];
	_JOIN_30480693 [label="_JOIN_30480693None...",shape=box];
	_JOIN_30480693 -> 30480695;
	ForLoop30475097 [label="ForLoop30475097  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop30475097 -> ForLoop30475095;
	ForLoop30475097 -> _JOIN_30475097;
	30483933 [label="30483933  double scv_1;...",shape=box];
	30492645 [label="30492645  double scv_34, scv_35, scv_36, scv_37, scv_38, scv_39, scv_40, scv_41;...",shape=box];
	30517783 [label="30517783  double scv_89, scv_90, scv_91, scv_92, scv_93, scv_94, scv_95, scv_96;...",shape=box];
	_JOIN_30483703 [label="_JOIN_30483703None...",shape=box];
	_JOIN_30483703 -> _JOIN_30483705;
	_JOIN_30483701 [label="_JOIN_30483701None...",shape=box];
	_JOIN_30483701 -> 30524164;
	_JOIN_30483700 [label="_JOIN_30483700None...",shape=box];
	_JOIN_30483700 -> _JOIN_30483701;
	_JOIN_30483706 [label="_JOIN_30483706None...",shape=box];
	30494136 [label="30494136  double scv_54, scv_55, scv_56, scv_57, scv_58, scv_59, scv_60, scv_61;...",shape=box];
	ForLoop30481089 [label="ForLoop30481089  for (k=(min(ny-1,kk+511))-(((min(ny-1,kk+511))-(kt)+1)%9)+1; k<=min(ny-1,kk+511); k=k+1) {...",shape=box];
	ForLoop30481089 -> 30493650;
	ForLoop30481089 -> _JOIN_30481089;
	30524164 [label="30524164  tmp[i]=scv_131;...",shape=box];
	30524164 -> _JOIN_30483703;
	_JOIN_30480625 [label="_JOIN_30480625None...",shape=box];
	_JOIN_30480625 -> ForLoop30480693;
	_JOIN_30480358 [label="_JOIN_30480358None...",shape=box];
	_JOIN_30480358 -> 30480359;
	ForLoop30395924 [label="ForLoop30395924  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop30395924 -> 30395923;
	ForLoop30395924 -> _JOIN_30395924;
	ForLoop30481485 [label="ForLoop30481485  for (k=(min(ny-1,kk+511))-(((min(ny-1,kk+511))-(kt)+1)%9)+1; k<=min(ny-1,kk+511); k=k+1) {...",shape=box];
	ForLoop30481485 -> 30494400;
	ForLoop30481485 -> _JOIN_30481485;
	_JOIN_30483362 [label="_JOIN_30483362None...",shape=box];
	_JOIN_30483362 -> 30483363;
	30480695 [label="30480695  int k;...",shape=box];
	30480695 -> ForLoop30481015;
	30395781 [label="30395781  y[i]=0.0;...",shape=box];
	30483363 [label="30483363  int k;...",shape=box];
	30483363 -> ForLoop30483629;
	30524152 [label="30524152  double scv_131;...",shape=box];
	30493386 [label="30493386  double scv_44, scv_45, scv_46, scv_47, scv_48, scv_49, scv_50, scv_51;...",shape=box];
	30515937 [label="30515937  double scv_84, scv_85, scv_86, scv_87, scv_88;...",shape=box];
	_JOIN_30395924 [label="_JOIN_30395924None...",shape=box];
	_JOIN_30395924 -> 30474831;
	ForLoop30483362 [label="ForLoop30483362  for (kt=kk; kt<=min(ny-1,kk+511)-31; kt=kt+32) {...",shape=box];
	ForLoop30483362 -> 30517783;
	ForLoop30483362 -> _JOIN_30483362;
	ForLoop30482277 [label="ForLoop30482277  for (k=(min(ny-1,kk+511))-(((min(ny-1,kk+511))-(kt)+1)%9)+1; k<=min(ny-1,kk+511); k=k+1) {...",shape=box];
	ForLoop30482277 -> 30495900;
	ForLoop30482277 -> _JOIN_30482277;
	30396046 [label="30396046  register int cbv_2, cbv_3;...",shape=box];
	_JOIN_30482277 [label="_JOIN_30482277None...",shape=box];
	_JOIN_30482277 -> _JOIN_30482280;
	_JOIN_30483697 [label="_JOIN_30483697None...",shape=box];
	_JOIN_30483697 -> _JOIN_30483700;
	_JOIN_30481485 [label="_JOIN_30481485None...",shape=box];
	_JOIN_30481485 -> 30481487;
	_JOIN_30481089 [label="_JOIN_30481089None...",shape=box];
	_JOIN_30481089 -> 30481091;
	30491331 [label="30491331  double scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8, scv_9;...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 30395604;
	30492900 [label="30492900  double scv_43;...",shape=box];
	30494400 [laexpected=9369846271501.798828
actual=9369846271501.798828
bel="30494400  double scv_63;...",shape=box];
	ForLoop30482390 [label="ForLoop30482390  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop30482390 -> ForLoop30482389;
	ForLoop30482390 -> _JOIN_30482390;
	ForLoop30483703 [label="ForLoop30483703  for (i=(min(nx-1,ii+31))-(((min(nx-1,ii+31))-(ii)+1)%5)+1; i<=min(nx-1,ii+31); i=i+1) {...",shape=box];
	ForLoop30483703 -> 30524152;
	ForLoop30483703 -> _JOIN_30483703;
	ForLoop30483701 [label="ForLoop30483701  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop30483701 -> ForLoop30483700;
	ForLoop30483701 -> _JOIN_30483701;
	ForLoop30483700 [label="ForLoop30483700  for (kk=kkk; kk<=min(ny-1,kkk+512); kk=kk+512) {...",shape=box];
	ForLoop30483700 -> ForLoop30483362;
	ForLoop30483700 -> _JOIN_30483700;
	ForLoop30483706 [label="ForLoop30483706  for (iii=0; iii<=nx-1; iii=iii+64) {...",shape=box];
	ForLoop30483706 -> ForLoop30483705;
	ForLoop30483706 -> _JOIN_30483706;
	ForLoop30483705 [label="ForLoop30483705  for (ii=iii; ii<=min(nx-1,iii+32); ii=ii+32) {...",shape=box];
	ForLoop30483705 -> 30474864;
	ForLoop30483705 -> _JOIN_30483705;
	30480359 [label="30480359  int k;...",shape=box];
	30480359 -> ForLoop30480625;
	30518841 [label="30518841  double scv_121, scv_122, scv_123, scv_124, scv_125, scv_126, scv_127, scv_128;...",shape=box];
	_JOIN_30481881 [label="_JOIN_30481881None...",shape=box];
	_JOIN_30481881 -> 30481883;
	ForLoop30482284 [label="ForLoop30482284  for (i=ii; i<=min(nx-1,ii+31)-4; i=i+5) {...",shape=box];
	ForLoop30482284 -> 30515937;
	ForLoop30482284 -> _JOIN_30482284;
	30481487 [label="30481487  int k;...",shape=box];
	30481487 -> ForLoop30481807;
	30482388 [label="30482388  scv_131=scv_131+A[i*ny+j]*x[j];...",shape=box];
	30482388 -> _JOIN_30482389;
	30474831 [label="30474831  double x_copy;...",shape=box];
	ForLoop30482389 [label="ForLoop30482389  for (j=jjj; j<=min(ny-1,jjj+2047); j=j+1) {...",shape=box];
	ForLoop30482389 -> 30482388;
	ForLoop30482389 -> _JOIN_30482389;
	_JOIN_30481015 [label="_JOIN_30481015None...",shape=box];
	_JOIN_30481015 -> ForLoop30481089;
	30495900 [label="30495900  double scv_83;...",shape=box];
	ForLoop30475095 [label="ForLoop30475095  for (j=jjj; j<=min(ny-1,jjj+2047); j=j+1) {...",shape=box];
	ForLoop30475095 -> 30483933;
	ForLoop30475095 -> _JOIN_30475095;
	ForLoop30480693 [label="ForLoop30480693  for (k=(min(ny-1,kk+511))-(((min(ny-1,kk+511))-(kt)+1)%9)+1; k<=min(ny-1,kk+511); k=k+1) {...",shape=box];
	ForLoop30480693 -> 30492900;
	ForLoop30480693 -> _JOIN_30480693;
	_JOIN_30482280 [label="_JOIN_30482280None...",shape=box];
	_JOIN_30482280 -> _JOIN_30482282;
	_JOIN_30482282 [label="_JOIN_30482282None...",shape=box];
	_JOIN_30482282 -> 30515955;
	_JOIN_30482284 [label="_JOIN_30482284None...",shape=box];
	_JOIN_30482284 -> ForLoop30483703;
	_JOIN_30483629 [label="_JOIN_30483629None...",shape=box];
	_JOIN_30483629 -> ForLoop30483697;
	30519096 [label="30519096  double scv_130;...",shape=box];
	ForLoop30480358 [label="ForLoop30480358  for (kt=kk; kt<=min(ny-1,kk+511)-31; kt=kt+32) {...",shape=box];
	ForLoop30480358 -> 30491331;
	ForLoop30480358 -> _JOIN_30480358;
	_JOIN_30482203 [label="_JOIN_30482203None...",shape=box];
	_JOIN_30482203 -> ForLoop30482277;
	_JOIN_30481411 [label="_JOIN_30481411None...",shape=box];
	_JOIN_30481411 -> ForLoop30481485;
	30395604 [label="30395604  int i;...",shape=box];
	_JOIN_30481807 [label="_JOIN_30481807None...",shape=box];
	_JOIN_30481807 -> ForLoop30481881;
	30481091 [label="30481091  int k;...",shape=box];
	30481091 -> ForLoop30481411;
	_JOIN_30483705 [label="_JOIN_30483705None...",shape=box];
	_JOIN_30483705 -> _JOIN_30483706;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest123.exe __orio_perftest123.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest123.exe  
{'[2, 0, 6, 1, 6, 5, 0, 0, 8, 4, 0, 8, 0, 0, 2, 1, 1, 0]' : 0.100584}
{'[2, 0, 6, 1, 6, 5, 0, 0, 8, 4, 0, 8, 0, 0, 2, 1, 1, 0]' : 0.100144}
{'[2, 0, 6, 1, 6, 5, 0, 0, 8, 4, 0, 8, 0, 0, 2, 1, 1, 0]' : 0.100178}
{'[2, 0, 6, 1, 6, 5, 0, 0, 8, 4, 0, 8, 0, 0, 2, 1, 1, 0]' : 0.100232}
{'[2, 0, 6, 1, 6, 5, 0, 0, 8, 4, 0, 8, 0, 0, 2, 1, 1, 0]' : 0.101527}
{'[2, 0, 6, 1, 6, 5, 0, 0, 8, 4, 0, 8, 0, 0, 2, 1, 1, 0]' : 0.100232}
{'[2, 0, 6, 1, 6, 5, 0, 0, 8, 4, 0, 8, 0, 0, 2, 1, 1, 0]' : 0.100193}
{'[2, 0, 6, 1, 6, 5, 0, 0, 8, 4, 0, 8, 0, 0, 2, 1, 1, 0]' : 0.100223}
{'[2, 0, 6, 1, 6, 5, 0, 0, 8, 4, 0, 8, 0, 0, 2, 1, 1, 0]' : 0.100153}
{'[2, 0, 6, 1, 6, 5, 0, 0, 8, 4, 0, 8, 0, 0, 2, 1, 1, 0]' : 0.1002}
{'[2, 0, 6, 1, 6, 5, 0, 0, 8, 4, 0, 8, 0, 0, 2, 1, 1, 0]' : 0.100161}
{'[2, 0, 6, 1, 6, 5, 0, 0, 8, 4, 0, 8, 0, 0, 2, 1, 1, 0]' : 0.100202}
{'[2, 0, 6, 1, 6, 5, 0, 0, 8, 4, 0, 8, 0, 0, 2, 1, 1, 0]' : 0.100223}
{'[2, 0, 6, 1, 6, 5, 0, 0, 8, 4, 0, 8, 0, 0, 2, 1, 1, 0]' : 0.100184}
{'[2, 0, 6, 1, 6, 5, 0, 0, 8, 4, 0, 8, 0, 0, 2, 1, 1, 0]' : 0.100237}
{'[2, 0, 6, 1, 6, 5, 0, 0, 8, 4, 0, 8, 0, 0, 2, 1, 1, 0]' : 0.100151}
{'[2, 0, 6, 1, 6, 5, 0, 0, 8, 4, 0, 8, 0, 0, 2, 1, 1, 0]' : 0.100254}
{'[2, 0, 6, 1, 6, 5, 0, 0, 8, 4, 0, 8, 0, 0, 2, 1, 1, 0]' : 0.100193}
{'[2, 0, 6, 1, 6, 5, 0, 0, 8, 4, 0, 8, 0, 0, 2, 1, 1, 0]' : 0.100161}
{'[2, 0, 6, 1, 6, 5, 0, 0, 8, 4, 0, 8, 0, 0, 2, 1, 1, 0]' : 0.100747}
{'[2, 0, 6, 1, 6, 5, 0, 0, 8, 4, 0, 8, 0, 0, 2, 1, 1, 0]' : 0.100191}
{'[2, 0, 6, 1, 6, 5, 0, 0, 8, 4, 0, 8, 0, 0, 2, 1, 1, 0]' : 0.100194}
{'[2, 0, 6, 1, 6, 5, 0, 0, 8, 4, 0, 8, 0, 0, 2, 1, 1, 0]' : 0.100177}
{'[2, 0, 6, 1, 6, 5, 0, 0, 8, 4, 0, 8, 0, 0, 2, 1, 1, 0]' : 0.100278}
{'[2, 0, 6, 1, 6, 5, 0, 0, 8, 4, 0, 8, 0, 0, 2, 1, 1, 0]' : 0.101232}
{'[2, 0, 6, 1, 6, 5, 0, 0, 8, 4, 0, 8, 0, 0, 2, 1, 1, 0]' : 0.100312}
{'[2, 0, 6, 1, 6, 5, 0, 0, 8, 4, 0, 8, 0, 0, 2, 1, 1, 0]' : 0.100201}
{'[2, 0, 6, 1, 6, 5, 0, 0, 8, 4, 0, 8, 0, 0, 2, 1, 1, 0]' : 0.100279}
{'[2, 0, 6, 1, 6, 5, 0, 0, 8, 4, 0, 8, 0, 0, 2, 1, 1, 0]' : 0.100145}
{'[2, 0, 6, 1, 6, 5, 0, 0, 8, 4, 0, 8, 0, 0, 2, 1, 1, 0]' : 0.100181}

out:
 ["{'[2, 0, 6, 1, 6, 5, 0, 0, 8, 4, 0, 8, 0, 0, 2, 1, 1, 0]' : 0.100584}", "{'[2, 0, 6, 1, 6, 5, 0, 0, 8, 4, 0, 8, 0, 0, 2, 1, 1, 0]' : 0.100144}", "{'[2, 0, 6, 1, 6, 5, 0, 0, 8, 4, 0, 8, 0, 0, 2, 1, 1, 0]' : 0.100178}", "{'[2, 0, 6, 1, 6, 5, 0, 0, 8, 4, 0, 8, 0, 0, 2, 1, 1, 0]' : 0.100232}", "{'[2, 0, 6, 1, 6, 5, 0, 0, 8, 4, 0, 8, 0, 0, 2, 1, 1, 0]' : 0.101527}", "{'[2, 0, 6, 1, 6, 5, 0, 0, 8, 4, 0, 8, 0, 0, 2, 1, 1, 0]' : 0.100232}", "{'[2, 0, 6, 1, 6, 5, 0, 0, 8, 4, 0, 8, 0, 0, 2, 1, 1, 0]' : 0.100193}", "{'[2, 0, 6, 1, 6, 5, 0, 0, 8, 4, 0, 8, 0, 0, 2, 1, 1, 0]' : 0.100223}", "{'[2, 0, 6, 1, 6, 5, 0, 0, 8, 4, 0, 8, 0, 0, 2, 1, 1, 0]' : 0.100153}", "{'[2, 0, 6, 1, 6, 5, 0, 0, 8, 4, 0, 8, 0, 0, 2, 1, 1, 0]' : 0.1002}", "{'[2, 0, 6, 1, 6, 5, 0, 0, 8, 4, 0, 8, 0, 0, 2, 1, 1, 0]' : 0.100161}", "{'[2, 0, 6, 1, 6, 5, 0, 0, 8, 4, 0, 8, 0, 0, 2, 1, 1, 0]' : 0.100202}", "{'[2, 0, 6, 1, 6, 5, 0, 0, 8, 4, 0, 8, 0, 0, 2, 1, 1, 0]' : 0.100223}", "{'[2, 0, 6, 1, 6, 5, 0, 0, 8, 4, 0, 8, 0, 0, 2, 1, 1, 0]' : 0.100184}", "{'[2, 0, 6, 1, 6, 5, 0, 0, 8, 4, 0, 8, 0, 0, 2, 1, 1, 0]' : 0.100237}", "{'[2, 0, 6, 1, 6, 5, 0, 0, 8, 4, 0, 8, 0, 0, 2, 1, 1, 0]' : 0.100151}", "{'[2, 0, 6, 1, 6, 5, 0, 0, 8, 4, 0, 8, 0, 0, 2, 1, 1, 0]' : 0.100254}", "{'[2, 0, 6, 1, 6, 5, 0, 0, 8, 4, 0, 8, 0, 0, 2, 1, 1, 0]' : 0.100193}", "{'[2, 0, 6, 1, 6, 5, 0, 0, 8, 4, 0, 8, 0, 0, 2, 1, 1, 0]' : 0.100161}", "{'[2, 0, 6, 1, 6, 5, 0, 0, 8, 4, 0, 8, 0, 0, 2, 1, 1, 0]' : 0.100747}", "{'[2, 0, 6, 1, 6, 5, 0, 0, 8, 4, 0, 8, 0, 0, 2, 1, 1, 0]' : 0.100191}", "{'[2, 0, 6, 1, 6, 5, 0, 0, 8, 4, 0, 8, 0, 0, 2, 1, 1, 0]' : 0.100194}", "{'[2, 0, 6, 1, 6, 5, 0, 0, 8, 4, 0, 8, 0, 0, 2, 1, 1, 0]' : 0.100177}", "{'[2, 0, 6, 1, 6, 5, 0, 0, 8, 4, 0, 8, 0, 0, 2, 1, 1, 0]' : 0.100278}", "{'[2, 0, 6, 1, 6, 5, 0, 0, 8, 4, 0, 8, 0, 0, 2, 1, 1, 0]' : 0.101232}", "{'[2, 0, 6, 1, 6, 5, 0, 0, 8, 4, 0, 8, 0, 0, 2, 1, 1, 0]' : 0.100312}", "{'[2, 0, 6, 1, 6, 5, 0, 0, 8, 4, 0, 8, 0, 0, 2, 1, 1, 0]' : 0.100201}", "{'[2, 0, 6, 1, 6, 5, 0, 0, 8, 4, 0, 8, 0, 0, 2, 1, 1, 0]' : 0.100279}", "{'[2, 0, 6, 1, 6, 5, 0, 0, 8, 4, 0, 8, 0, 0, 2, 1, 1, 0]' : 0.100145}", "{'[2, 0, 6, 1, 6, 5, 0, 0, 8, 4, 0, 8, 0, 0, 2, 1, 1, 0]' : 0.100181}"]
returning from 'run': {'[2, 0, 6, 1, 6, 5, 0, 0, 8, 4, 0, 8, 0, 0, 2, 1, 1, 0]': ([0.100584, 0.100144, 0.100178, 0.100232, 0.101527, 0.100232, 0.100193, 0.100223, 0.100153, 0.1002, 0.100161, 0.100202, 0.100223, 0.100184, 0.100237, 0.100151, 0.100254, 0.100193, 0.100161, 0.100747, 0.100191, 0.100194, 0.100177, 0.100278, 0.101232, 0.100312, 0.100201, 0.100279, 0.100145, 0.100181], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.100584, 0.100144, 0.100178, 0.100232, 0.101527, 0.100232, 0.100193, 0.100223, 0.100153, 0.1002, 0.100161, 0.100202, 0.100223, 0.100184, 0.100237, 0.100151, 0.100254, 0.100193, 0.100161, 0.100747, 0.100191, 0.100194, 0.100177, 0.100278, 0.101232, 0.100312, 0.100201, 0.100279, 0.100145, 0.100181], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 6, 1, 6, 5, 0, 0, 8, 4, 0, 8, 0, 0, 2, 1, 1, 0]': ([0.100584, 0.100144, 0.100178, 0.100232, 0.101527, 0.100232, 0.100193, 0.100223, 0.100153, 0.1002, 0.100161, 0.100202, 0.100223, 0.100184, 0.100237, 0.100151, 0.100254, 0.100193, 0.100161, 0.100747, 0.100191, 0.100194, 0.100177, 0.100278, 0.101232, 0.100312, 0.100201, 0.100279, 0.100145, 0.100181], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [4, 0, 4, 4, 29, 26, 0, 27, 1, 0, 0, 1]
Fixed Factors: {'ACOPY_x': 0, 'ACOPY_y': 0, 'T2_K': 5, 'T2_J': 6, 'VEC1': 1, 'SCR': 1}
Testing candidate 24: [4, 0, 4, 4, 6, 5, 0, 0, 29, 26, 0, 27, 1, 0, 0, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	6
        Additions: 		4489
        Multiplications: 	2160
        Divisions: 		0
        Logical: 		0
        Reads: 			8601
        Writes: 		1453
        Comparisons:		25
        Gotos: 			0
        
digraph CFG {
	ForLoop30540594 [label="ForLoop30540594  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop30540594 -> 30540593;
	ForLoop30540594 -> _JOIN_30540594;
	ForLoop30796021 [label="ForLoop30796021  for (kk=kkk; kk<=min(ny-1,kkk+896); kk=kk+128) {...",shape=box];
	ForLoop30796021 -> 30795153;
	ForLoop30796021 -> _JOIN_30796021;
	_JOIN_30768862 [label="_JOIN_30768862None...",shape=box];
	_JOIN_30768862 -> _JOIN_30768864;
	30999447 [label="30999447  register int cbv_11, cbv_12;...",shape=box];
	_JOIN_30768864 [label="_JOIN_30768864None...",shape=box];
	_JOIN_30768864 -> ForLoop30795013;
	30826319 [label="30826319  double scv_31, scv_32, scv_33, scv_34, scv_35, scv_36, scv_37, scv_38;...",shape=box];
	_JOIN_30767792 [label="_JOIN_30767792None...",shape=box];
	_JOIN_30767792 -> 30826331;
	_JOIN_30767791 [label="_JOIN_30767791None...",shape=box];
	_JOIN_30767791 -> _JOIN_30767792;
	30924728 [label="30924728  double scv_69, scv_70, scv_71, scv_72, scv_73, scv_74, scv_75, scv_76;...",shape=box];
	_JOIN_30795121 [label="_JOIN_30795121None...",shape=box];
	_JOIN_30795121 -> ForLoop30796022;
	ForLoop30795121 [label="ForLoop30795121  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop30795121 -> 30998381;
	ForLoop30795121 -> _JOIN_30795121;
	30540905 [label="30540905  register int cbv_2, cbv_3;...",shape=box];
	30768896 [label="30768896  int k;...",shape=box];
	_JOIN_30795013 [label="_JOIN_30795013None...",shape=box];
	_JOIN_30795013 -> 30924746;
	30863152 [label="30863152  double scv_40, scv_41, scv_42, scv_43, scv_44, scv_45, scv_46, scv_47;...",shape=box];
	30808099 [label="30808099  double scv_30;...",shape=box];
	ForLoop30795011 [label="ForLoop30795011  for (kk=kkk; kk<=min(ny-1,kkk+896); kk=kk+128) {...",shape=box];
	ForLoop30795011 -> 30768896;
	ForLoop30795011 -> _JOIN_30795011;
	ForLoop30767789 [label="ForLoop30767789  for (k=cbv_3; k<=cbv_4; k=k+1) {...",shape=box];
	ForLoop30767789 -> 30808099;
	ForLoop30767789 -> _JOIN_30767789;
	ForLoop30795013 [label="ForLoop30795013  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop30795013 -> ForLoop30795011;
	ForLoop30795013 -> _JOIN_30795013;
	_JOIN_30795009 [label="_JOIN_30795009None...",shape=box];
	_JOIN_30795009 -> _JOIN_30795011;
	ForLoop30795015 [label="ForLoop30795015  for (i=it; i<=min(nx-1,ii+127)-26; i=i+27) {...",shape=box];
	ForLoop30795015 -> 30924728;
	ForLoop30795015 -> _JOIN_30795015;
	30931564 [label="30931564  double scv_125;...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 30539770;
	30866201 [label="30866201  double scv_68;...",shape=box];
	30796390 [label="30796390  double scv_1;...",shape=box];
	_JOIN_30540525 [label="_JOIN_30540525None...",shape=box];
	_JOIN_30540525 -> 30540905;
	ForLoop30796022 [label="ForLoop30796022  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop30796022 -> ForLoop30796021;
	ForLoop30796022 -> _JOIN_30796022;
	_JOIN_30767794 [label="_JOIN_30767794None...",shape=box];
	_JOIN_30767794 -> 30767795;
	ForLoop30795951 [label="ForLoop30795951  for (k=kk; k<=cbv_10; k=k+28) {...",shape=box];
	ForLoop30795951 -> 30927400;
	ForLoop30795951 -> _JOIN_30795951;
	30795153 [label="30795153  int k;...",shape=box];
	30795119 [label="30795119  scv_125=scv_125+A[i*ny+j]*x[j];...",shape=box];
	30795119 -> _JOIN_30795120;
	30827930 [label="30827930  double scv_39;...",shape=box];
	30928056 [label="30928056  double scv_124;...",shape=box];
	_JOIN_30796021 [label="_JOIN_30796021None...",shape=box];
	_JOIN_30796021 -> _JOIN_30796022;
	30760132 [label="30760132  int k;...",shape=box];
	30927400 [label="30927400  double scv_96, scv_97, scv_98, scv_99, scv_100, scv_101, scv_102, scv_103;...",shape=box];
	_JOIN_30760099 [label="_JOIN_30760099None...",shape=box];
	_JOIN_30760099 -> _JOIN_30760100;
	30826331 [label="30826331  tmp[it]=scv_31;...",shape=box];
	30806798 [label="30806798  double scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8, scv_9;...",shape=box];
	30924746 [label="30924746  tmp[(i+20)]=scv_69;...",shape=box];
	_JOIN_30540594 [label="_JOIN_30540594None...",shape=box];
	_JOIN_30540594 -> 30759785;
	_JOIN_30796028 [label="_JOIN_30796028None...",shape=box];
	ForLoop30760100 [label="ForLoop30760100  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop30760100 -> 30977591;
	ForLoop30760100 -> _JOIN_30760100;
	30539770 [label="30539770  int i;...",shape=box];
	ForLoop30796024 [label="ForLoop30796024  for (i=(min(nx-1,ii+127))-(((min(nx-1,ii+127))-(it)+1)%27)+1; i<=min(nx-1,ii+127); i=i+1) {...",shape=box];
	ForLoop30796024 -> 30931564;
	ForLoop30796024 -> _JOIN_30796024;
	ForLoop30796027 [label="ForLoop30796027  for (ii=iii; ii<=min(nx-1,iii+384); ii=ii+128) {...",shape=box];
	ForLoop30796027 -> ForLoop30767794;
	ForLoop30796027 -> _JOIN_30796027;
	_JOIN_30796019 [label="_JOIN_30796019None...",shape=box];
	_JOIN_30796019 -> _JOIN_30796021;
	ForLoop30796028 [label="ForLoop30796028  for (iii=0; iii<=nx-1; iii=iii+512) {...",shape=box];
	ForLoop30796028 -> ForLoop30796027;
	ForLoop30796028 -> _JOIN_30796028;
	30982486 [label="30982486  register int cbv_3, cbv_4;...",shape=box];
	_JOIN_30796022 [label="_JOIN_30796022None...",shape=box];
	_JOIN_30796022 -> 30931576;
	30540262 [label="30540262  y[i]=0.0;...",shape=box];
	_JOIN_30796024 [label="_JOIN_30796024None...",shape=box];
	_JOIN_30796024 -> _JOIN_30796027;
	_JOIN_30796027 [label="_JOIN_30796027None...",shape=box];
	_JOIN_30796027 -> _JOIN_30796028;
	ForLoop30794264 [label="ForLoop30794264  for (k=kk; k<=cbv_6; k=k+28) {...",shape=box];
	ForLoop30794264 -> 30863152;
	ForLoop30794264 -> _JOIN_30794264;
	_JOIN_30795011 [label="_JOIN_30795011None...",shape=box];
	_JOIN_30795011 -> _JOIN_30795013;
	ForLoop30767792 [label="ForLoop30767792  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop30767792 -> ForLoop30767791;
	ForLoop30767792 -> _JOIN_30767792;
	ForLoop30767791 [label="ForLoop30767791  for (kk=kkk; kk<=min(ny-1,kkk+896); kk=kk+128) {...",shape=box];
	ForLoop30767791 -> 30760132;
	ForLoop30767791 -> _JOIN_30767791;
	_JOIN_30760100 [label="_JOIN_30760100None...",shape=box];
	_JOIN_30760100 -> ForLoop30767792;
	_JOIN_30795015 [label="_JOIN_30795015None...",shape=bexpected=9369846271501.798828
actual=9369846271501.798828
ox];
	_JOIN_30795015 -> ForLoop30796024;
	ForLoop30767794 [label="ForLoop30767794  for (it=ii; it<=min(nx-1,ii+127)-7; it=it+8) {...",shape=box];
	ForLoop30767794 -> 30826319;
	ForLoop30767794 -> _JOIN_30767794;
	ForLoop30768864 [label="ForLoop30768864  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop30768864 -> 30983013;
	ForLoop30768864 -> _JOIN_30768864;
	_JOIN_30767789 [label="_JOIN_30767789None...",shape=box];
	_JOIN_30767789 -> _JOIN_30767791;
	ForLoop30767538 [label="ForLoop30767538  for (k=kk; k<=cbv_2; k=k+28) {...",shape=box];
	ForLoop30767538 -> 30806798;
	ForLoop30767538 -> _JOIN_30767538;
	ForLoop30540525 [label="ForLoop30540525  for (i=0; i<=cbv_1; i=i+30) {...",shape=box];
	ForLoop30540525 -> 30540262;
	ForLoop30540525 -> _JOIN_30540525;
	30998381 [label="30998381  register int cbv_9;...",shape=box];
	ForLoop30768862 [label="ForLoop30768862  for (j=jjj; j<=cbv_5; j=j+1) {...",shape=box];
	ForLoop30768862 -> 30827930;
	ForLoop30768862 -> _JOIN_30768862;
	ForLoop30795009 [label="ForLoop30795009  for (k=cbv_7; k<=cbv_8; k=k+1) {...",shape=box];
	ForLoop30795009 -> 30866201;
	ForLoop30795009 -> _JOIN_30795009;
	30931576 [label="30931576  tmp[i]=scv_125;...",shape=box];
	30931576 -> _JOIN_30796024;
	_JOIN_30795951 [label="_JOIN_30795951None...",shape=box];
	_JOIN_30795951 -> 30999447;
	ForLoop30795120 [label="ForLoop30795120  for (j=jjj; j<=cbv_9; j=j+1) {...",shape=box];
	ForLoop30795120 -> 30795119;
	ForLoop30795120 -> _JOIN_30795120;
	_JOIN_30795120 [label="_JOIN_30795120None...",shape=box];
	_JOIN_30795120 -> _JOIN_30795121;
	30983013 [label="30983013  register int cbv_5;...",shape=box];
	ForLoop30760099 [label="ForLoop30760099  for (j=jjj; j<=cbv_1; j=j+1) {...",shape=box];
	ForLoop30760099 -> 30796390;
	ForLoop30760099 -> _JOIN_30760099;
	30767795 [label="30767795  int i;...",shape=box];
	30767795 -> ForLoop30795015;
	30977591 [label="30977591  register int cbv_1;...",shape=box];
	30540593 [label="30540593  y[i]=0.0;...",shape=box];
	30540593 -> _JOIN_30540594;
	30759785 [label="30759785  double x_copy;...",shape=box];
	30998301 [label="30998301  register int cbv_7, cbv_8;...",shape=box];
	_JOIN_30794264 [label="_JOIN_30794264None...",shape=box];
	_JOIN_30794264 -> 30998301;
	ForLoop30796019 [label="ForLoop30796019  for (k=cbv_11; k<=cbv_12; k=k+1) {...",shape=box];
	ForLoop30796019 -> 30928056;
	ForLoop30796019 -> _JOIN_30796019;
	_JOIN_30767538 [label="_JOIN_30767538None...",shape=box];
	_JOIN_30767538 -> 30982486;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest124.exe __orio_perftest124.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest124.exe  
{'[4, 0, 4, 4, 6, 5, 0, 0, 29, 26, 0, 27, 1, 0, 0, 1, 1, 1]' : 0.082355}
{'[4, 0, 4, 4, 6, 5, 0, 0, 29, 26, 0, 27, 1, 0, 0, 1, 1, 1]' : 0.081754}
{'[4, 0, 4, 4, 6, 5, 0, 0, 29, 26, 0, 27, 1, 0, 0, 1, 1, 1]' : 0.081821}
{'[4, 0, 4, 4, 6, 5, 0, 0, 29, 26, 0, 27, 1, 0, 0, 1, 1, 1]' : 0.0817771}
{'[4, 0, 4, 4, 6, 5, 0, 0, 29, 26, 0, 27, 1, 0, 0, 1, 1, 1]' : 0.0817611}
{'[4, 0, 4, 4, 6, 5, 0, 0, 29, 26, 0, 27, 1, 0, 0, 1, 1, 1]' : 0.08183}
{'[4, 0, 4, 4, 6, 5, 0, 0, 29, 26, 0, 27, 1, 0, 0, 1, 1, 1]' : 0.0818391}
{'[4, 0, 4, 4, 6, 5, 0, 0, 29, 26, 0, 27, 1, 0, 0, 1, 1, 1]' : 0.0818901}
{'[4, 0, 4, 4, 6, 5, 0, 0, 29, 26, 0, 27, 1, 0, 0, 1, 1, 1]' : 0.0828168}
{'[4, 0, 4, 4, 6, 5, 0, 0, 29, 26, 0, 27, 1, 0, 0, 1, 1, 1]' : 0.0823061}
{'[4, 0, 4, 4, 6, 5, 0, 0, 29, 26, 0, 27, 1, 0, 0, 1, 1, 1]' : 0.0818539}
{'[4, 0, 4, 4, 6, 5, 0, 0, 29, 26, 0, 27, 1, 0, 0, 1, 1, 1]' : 0.081835}
{'[4, 0, 4, 4, 6, 5, 0, 0, 29, 26, 0, 27, 1, 0, 0, 1, 1, 1]' : 0.081871}
{'[4, 0, 4, 4, 6, 5, 0, 0, 29, 26, 0, 27, 1, 0, 0, 1, 1, 1]' : 0.081929}
{'[4, 0, 4, 4, 6, 5, 0, 0, 29, 26, 0, 27, 1, 0, 0, 1, 1, 1]' : 0.0818019}
{'[4, 0, 4, 4, 6, 5, 0, 0, 29, 26, 0, 27, 1, 0, 0, 1, 1, 1]' : 0.0817711}
{'[4, 0, 4, 4, 6, 5, 0, 0, 29, 26, 0, 27, 1, 0, 0, 1, 1, 1]' : 0.0818019}
{'[4, 0, 4, 4, 6, 5, 0, 0, 29, 26, 0, 27, 1, 0, 0, 1, 1, 1]' : 0.0818141}
{'[4, 0, 4, 4, 6, 5, 0, 0, 29, 26, 0, 27, 1, 0, 0, 1, 1, 1]' : 0.0817871}
{'[4, 0, 4, 4, 6, 5, 0, 0, 29, 26, 0, 27, 1, 0, 0, 1, 1, 1]' : 0.0818}
{'[4, 0, 4, 4, 6, 5, 0, 0, 29, 26, 0, 27, 1, 0, 0, 1, 1, 1]' : 0.0818551}
{'[4, 0, 4, 4, 6, 5, 0, 0, 29, 26, 0, 27, 1, 0, 0, 1, 1, 1]' : 0.081774}
{'[4, 0, 4, 4, 6, 5, 0, 0, 29, 26, 0, 27, 1, 0, 0, 1, 1, 1]' : 0.08182}
{'[4, 0, 4, 4, 6, 5, 0, 0, 29, 26, 0, 27, 1, 0, 0, 1, 1, 1]' : 0.081857}
{'[4, 0, 4, 4, 6, 5, 0, 0, 29, 26, 0, 27, 1, 0, 0, 1, 1, 1]' : 0.08181}
{'[4, 0, 4, 4, 6, 5, 0, 0, 29, 26, 0, 27, 1, 0, 0, 1, 1, 1]' : 0.081795}
{'[4, 0, 4, 4, 6, 5, 0, 0, 29, 26, 0, 27, 1, 0, 0, 1, 1, 1]' : 0.0818012}
{'[4, 0, 4, 4, 6, 5, 0, 0, 29, 26, 0, 27, 1, 0, 0, 1, 1, 1]' : 0.0818079}
{'[4, 0, 4, 4, 6, 5, 0, 0, 29, 26, 0, 27, 1, 0, 0, 1, 1, 1]' : 0.082114}
{'[4, 0, 4, 4, 6, 5, 0, 0, 29, 26, 0, 27, 1, 0, 0, 1, 1, 1]' : 0.0818262}

out:
 ["{'[4, 0, 4, 4, 6, 5, 0, 0, 29, 26, 0, 27, 1, 0, 0, 1, 1, 1]' : 0.082355}", "{'[4, 0, 4, 4, 6, 5, 0, 0, 29, 26, 0, 27, 1, 0, 0, 1, 1, 1]' : 0.081754}", "{'[4, 0, 4, 4, 6, 5, 0, 0, 29, 26, 0, 27, 1, 0, 0, 1, 1, 1]' : 0.081821}", "{'[4, 0, 4, 4, 6, 5, 0, 0, 29, 26, 0, 27, 1, 0, 0, 1, 1, 1]' : 0.0817771}", "{'[4, 0, 4, 4, 6, 5, 0, 0, 29, 26, 0, 27, 1, 0, 0, 1, 1, 1]' : 0.0817611}", "{'[4, 0, 4, 4, 6, 5, 0, 0, 29, 26, 0, 27, 1, 0, 0, 1, 1, 1]' : 0.08183}", "{'[4, 0, 4, 4, 6, 5, 0, 0, 29, 26, 0, 27, 1, 0, 0, 1, 1, 1]' : 0.0818391}", "{'[4, 0, 4, 4, 6, 5, 0, 0, 29, 26, 0, 27, 1, 0, 0, 1, 1, 1]' : 0.0818901}", "{'[4, 0, 4, 4, 6, 5, 0, 0, 29, 26, 0, 27, 1, 0, 0, 1, 1, 1]' : 0.0828168}", "{'[4, 0, 4, 4, 6, 5, 0, 0, 29, 26, 0, 27, 1, 0, 0, 1, 1, 1]' : 0.0823061}", "{'[4, 0, 4, 4, 6, 5, 0, 0, 29, 26, 0, 27, 1, 0, 0, 1, 1, 1]' : 0.0818539}", "{'[4, 0, 4, 4, 6, 5, 0, 0, 29, 26, 0, 27, 1, 0, 0, 1, 1, 1]' : 0.081835}", "{'[4, 0, 4, 4, 6, 5, 0, 0, 29, 26, 0, 27, 1, 0, 0, 1, 1, 1]' : 0.081871}", "{'[4, 0, 4, 4, 6, 5, 0, 0, 29, 26, 0, 27, 1, 0, 0, 1, 1, 1]' : 0.081929}", "{'[4, 0, 4, 4, 6, 5, 0, 0, 29, 26, 0, 27, 1, 0, 0, 1, 1, 1]' : 0.0818019}", "{'[4, 0, 4, 4, 6, 5, 0, 0, 29, 26, 0, 27, 1, 0, 0, 1, 1, 1]' : 0.0817711}", "{'[4, 0, 4, 4, 6, 5, 0, 0, 29, 26, 0, 27, 1, 0, 0, 1, 1, 1]' : 0.0818019}", "{'[4, 0, 4, 4, 6, 5, 0, 0, 29, 26, 0, 27, 1, 0, 0, 1, 1, 1]' : 0.0818141}", "{'[4, 0, 4, 4, 6, 5, 0, 0, 29, 26, 0, 27, 1, 0, 0, 1, 1, 1]' : 0.0817871}", "{'[4, 0, 4, 4, 6, 5, 0, 0, 29, 26, 0, 27, 1, 0, 0, 1, 1, 1]' : 0.0818}", "{'[4, 0, 4, 4, 6, 5, 0, 0, 29, 26, 0, 27, 1, 0, 0, 1, 1, 1]' : 0.0818551}", "{'[4, 0, 4, 4, 6, 5, 0, 0, 29, 26, 0, 27, 1, 0, 0, 1, 1, 1]' : 0.081774}", "{'[4, 0, 4, 4, 6, 5, 0, 0, 29, 26, 0, 27, 1, 0, 0, 1, 1, 1]' : 0.08182}", "{'[4, 0, 4, 4, 6, 5, 0, 0, 29, 26, 0, 27, 1, 0, 0, 1, 1, 1]' : 0.081857}", "{'[4, 0, 4, 4, 6, 5, 0, 0, 29, 26, 0, 27, 1, 0, 0, 1, 1, 1]' : 0.08181}", "{'[4, 0, 4, 4, 6, 5, 0, 0, 29, 26, 0, 27, 1, 0, 0, 1, 1, 1]' : 0.081795}", "{'[4, 0, 4, 4, 6, 5, 0, 0, 29, 26, 0, 27, 1, 0, 0, 1, 1, 1]' : 0.0818012}", "{'[4, 0, 4, 4, 6, 5, 0, 0, 29, 26, 0, 27, 1, 0, 0, 1, 1, 1]' : 0.0818079}", "{'[4, 0, 4, 4, 6, 5, 0, 0, 29, 26, 0, 27, 1, 0, 0, 1, 1, 1]' : 0.082114}", "{'[4, 0, 4, 4, 6, 5, 0, 0, 29, 26, 0, 27, 1, 0, 0, 1, 1, 1]' : 0.0818262}"]
returning from 'run': {'[4, 0, 4, 4, 6, 5, 0, 0, 29, 26, 0, 27, 1, 0, 0, 1, 1, 1]': ([0.082355, 0.081754, 0.081821, 0.0817771, 0.0817611, 0.08183, 0.0818391, 0.0818901, 0.0828168, 0.0823061, 0.0818539, 0.081835, 0.081871, 0.081929, 0.0818019, 0.0817711, 0.0818019, 0.0818141, 0.0817871, 0.0818, 0.0818551, 0.081774, 0.08182, 0.081857, 0.08181, 0.081795, 0.0818012, 0.0818079, 0.082114, 0.0818262], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.082355, 0.081754, 0.081821, 0.0817771, 0.0817611, 0.08183, 0.0818391, 0.0818901, 0.0828168, 0.0823061, 0.0818539, 0.081835, 0.081871, 0.081929, 0.0818019, 0.0817711, 0.0818019, 0.0818141, 0.0817871, 0.0818, 0.0818551, 0.081774, 0.08182, 0.081857, 0.08181, 0.081795, 0.0818012, 0.0818079, 0.082114, 0.0818262], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[4, 0, 4, 4, 6, 5, 0, 0, 29, 26, 0, 27, 1, 0, 0, 1, 1, 1]': ([0.082355, 0.081754, 0.081821, 0.0817771, 0.0817611, 0.08183, 0.0818391, 0.0818901, 0.0828168, 0.0823061, 0.0818539, 0.081835, 0.081871, 0.081929, 0.0818019, 0.0817711, 0.0818019, 0.0818141, 0.0817871, 0.0818, 0.0818551, 0.081774, 0.08182, 0.081857, 0.08181, 0.081795, 0.0818012, 0.0818079, 0.082114, 0.0818262], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Measurements: [0.2030002, 0.2415469, 0.09212220666666666, 0.1130653, 0.08065425333333333, 0.08677010666666667, 0.1540231, 0.08030738, 0.07971757333333333, 0.13098396666666667, 0.12401419999999999, 0.08562847000000001, 0.07960711333333334, 0.17615993333333338, 0.07998137333333334, 0.13017420000000002, 0.08662914000000002, 0.08854536999999998, 0.12220389999999999, 0.09780345666666669, 0.11320336666666667, 0.1224004, 0.10031230000000001, 0.08189585666666667]
   T1_I T1_J T1_K T2_I U1_I U_I U_J U_K RT_I RT_J RT_K VEC2  cost_mean
1     2    2    1    5   20   9   7   0    2    0    0    0 0.20300020
2     2    3    4    6   20   3  18   0    2    0    0    1 0.24154690
3     1    6    4    1   19  29   0  29    1    0    0    0 0.09212221
4     2    5    3    6   11  25   0  21    0    2    0    1 0.11306530
5     0    5    5    6   13   3  28   0    0    1    1    1 0.08065425
6     1    5    3    5    1   2   0  15    0    0    2    0 0.08677011
7     6    2    4    6   27  27  18   0    0    2    0    0 0.15402310
8     5    5    6    4    0  13  28   0    0    0    1    1 0.08030738
9     5    1    6    6   19   5   0  18    1    0    1    1 0.07971757
10    4    2    2    3   18   0  29  29    0    0    1    0 0.13098397
11    2    2    6    4   29   0   8  17    0    0    0    0 0.12401420
12    6    5    1    0    3   0  15  19    1    1    0    1 0.08562847
13    0    1    6    2    3  13   0  27    1    0    1    1 0.07960711
14    2    0    1    6    6   0  18  22    0    2    0    1 0.17615993
15    1    5    1    0   29   0  24  27    1    0    1    1 0.07998137
16    4    5    4    0   28   0  12   1    0    2    0    0 0.13017420
17    1    2    5    1   10  27  29   0    1    1    0    0 0.08662914
18    6    3    1    0    2  27  21   0    1    0    0    0 0.08854537
19    2    3    1    4    2  23   0   2    0    0    0    1 0.12220390
20    0    1    3    0    1  15  13   0    0    1    0    1 0.09780346
21    2    0    3    1   25  11  26   0    0    0    2    1 0.11320337
22    4    2    0    2   27  24   0   3    0    0    2    1 0.12240040
23    2    0    6    1    8   4   0   8    0    0    2    0 0.10031230
24    4    0    4    4   29  26   0  27    1    0    0    1 0.08189586

Step Space Names:  [1] "T1_I"    "T1_J"    "T1_K"    "T2_I"    "T2_J"    "T2_K"    "ACOPY_x"
 [8] "ACOPY_y" "U1_I"    "U_I"     "U_J"     "U_K"     "RT_I"    "RT_J"   
[15] "RT_K"    "SCR"     "VEC1"    "VEC2"   

Heteroscedasticity Test p-value: 0.146005773703
Regression Step:            Df   Sum Sq  Mean Sq F value Pr(>F)  
T1_I         1 0.000009 0.000009   0.008 0.9287  
T1_J         1 0.001444 0.001444   1.321 0.2748  
T1_K         1 0.003257 0.003257   2.980 0.1123  
T2_I         1 0.009012 0.009012   8.244 0.0152 *
U1_I         1 0.002184 0.002184   1.998 0.1852  
U_I          1 0.001102 0.001102   1.008 0.3369  
U_J          1 0.000351 0.000351   0.321 0.5824  
U_K          1 0.004202 0.004202   3.844 0.0757 .
RT_I         1 0.003378 0.003378   3.090 0.1065  
RT_J         1 0.001472 0.001472   1.347 0.2704  
RT_K         1 0.001414 0.001414   1.293 0.2797  
VEC2         1 0.001250 0.001250   1.143 0.3079  
Residuals   11 0.012025 0.001093                 
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Predicting Best
Identical predictions (tol = 1e-5): 1
Getting fixed variables
Fixed Variables: {'ACOPY_x': 0, 'ACOPY_y': 0, 'U_K': 18, 'T2_K': 5, 'T2_J': 6, 'T2_I': 0, 'VEC1': 1, 'SCR': 1}
Pruning Data
Dimensions of Pruned Data: [1]  5 18
Pruning Model
Pruned Search Space Size: 18
Best Predicted:        T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
352556    6    3    5    0    6    5       0       0    1  28   0  18    0    1
       RT_K SCR VEC1 VEC2
352556    1   1    1    1

Pruned Factors: ['T1_I', 'T1_J', 'T1_K', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J', 'RT_K', 'VEC2']
Fixed Factors: {'ACOPY_x': 0, 'ACOPY_y': 0, 'U_K': 18, 'T2_K': 5, 'T2_J': 6, 'T2_I': 0, 'VEC1': 1, 'SCR': 1}
Fixed Factors: {'ACOPY_x': 0, 'ACOPY_y': 0, 'U_K': 18, 'T2_K': 5, 'T2_J': 6, 'T2_I': 0, 'VEC1': 1, 'SCR': 1}
Length of requested configs: 1
Coordinate was computed before
No coordinates to evaluate
0.1290727
[6, 3, 5, 0, 6, 5, 0, 0, 1, 28, 0, 18, 0, 1, 1, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	79
        Max loop nest depth: 	5
        Additions: 		5942
        Multiplications: 	2220
        Divisions: 		0
        Logical: 		0
        Reads: 			12581
        Writes: 		2701
        Comparisons:		79
        Gotos: 			0
        
digraph CFG {
	ForLoop31186715 [label="ForLoop31186715  for (k=kt; k<=cbv_13; k=k+19) {...",shape=box];
	ForLoop31186715 -> 31249784;
	ForLoop31186715 -> _JOIN_31186715;
	31259145 [label="31259145  double scv_217;...",shape=box];
	31248303 [label="31248303  double scv_58, scv_59, scv_60, scv_61, scv_62, scv_63, scv_64, scv_65;...",shape=box];
	ForLoop31206443 [label="ForLoop31206443  for (i=(min(nx-1,ii+511))-(((min(nx-1,ii+511))-(ii)+1)%29)+1; i<=min(nx-1,ii+511); i=i+1) {...",shape=box];
	ForLoop31206443 -> 31398447;
	ForLoop31206443 -> _JOIN_31206443;
	ForLoop31195621 [label="ForLoop31195621  for (k=cbv_50; k<=cbv_51; k=k+1) {...",shape=box];
	ForLoop31195621 -> 31268031;
	ForLoop31195621 -> _JOIN_31195621;
	ForLoop31206445 [label="ForLoop31206445  for (ii=0; ii<=nx-1; ii=ii+512) {...",shape=box];
	ForLoop31206445 -> 31167447;
	ForLoop31206445 -> _JOIN_31206445;
	ForLoop31206441 [label="ForLoop31206441  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop31206441 -> ForLoop31206440;
	ForLoop31206441 -> _JOIN_31206441;
	ForLoop31176301 [label="ForLoop31176301  for (j=jt; j<=cbv_2; j=j+1) {...",shape=box];
	ForLoop31176301 -> 31218494;
	ForLoop31176301 -> _JOIN_31176301;
	ForLoop30999837 [label="ForLoop30999837  for (i=0; i<=cbv_1; i=i+2) {...",shape=box];
	ForLoop30999837 -> 30999826;
	ForLoop30999837 -> _JOIN_30999837;
	31201511 [label="31201511  int k;...",shape=box];
	ForLoop31205543 [label="ForLoop31205543  for (j=jt; j<=cbv_92; j=j+1) {...",shape=box];
	ForLoop31205543 -> 31205542;
	ForLoop31205543 -> _JOIN_31205543;
	31258670 [label="31258670  double scv_198, scv_199, scv_200, scv_201, scv_202, scv_203, scv_204, scv_205;...",shape=box];
	_JOIN_31186789 [label="_JOIN_31186789None...",shape=box];
	_JOIN_31186789 -> 31186791;
	31279879 [label="31279879  double scv_497;...",shape=box];
	31450263 [label="31450263  register int cbv_29, cbv_30;...",shape=box];
	_JOIN_31200773 [label="_JOIN_31200773None...",shape=box];
	_JOIN_31200773 -> 31200775;
	31194151 [label="31194151  int k;...",shape=box];
	31457095 [label="31457095  register int cbv_53, cbv_54;...",shape=box];
	_JOIN_31202171 [label="_JOIN_31202171None...",shape=box];
	_JOIN_31202171 -> 31463927;
	ForLoop31191131 [label="ForLoop31191131  for (k=kt; k<=cbv_31; k=k+19) {...",shape=box];
	ForLoop31191131 -> 31258670;
	ForLoop31191131 -> _JOIN_31191131;
	ForLoop31191205 [label="ForLoop31191205  for (k=cbv_32; k<=cbv_33; k=k+1) {...",shape=box];
	ForLoop31191205 -> 31259145;
	ForLoop31191205 -> _JOIN_31191205;
	31283847 [label="31283847  double scv_538, scv_539, scv_540, scv_541, scv_542, scv_543, scv_544, scv_545;...",shape=box];
	_JOIN_31197093 [label="_JOIN_31197093None...",shape=box];
	_JOIN_31197093 -> 31197095;
	31190471 [label="31190471  int k;...",shape=box];
	31249784 [label="31249784  double scv_78, scv_79, scv_80, scv_81, scv_82, scv_83, scv_84, scv_85;...",shape=box];
	ForLoop31187451 [label="ForLoop31187451  for (k=kt; k<=cbv_16; k=k+19) {...",shape=box];
	ForLoop31187451 -> 31251265;
	ForLoop31187451 -> _JOIN_31187451;
	31445139 [label="31445139  register int cbv_11, cbv_12;...",shape=box];
	ForLoop31200773 [label="ForLoop31200773  for (k=cbv_71; k<=cbv_72; k=k+1) {...",shape=box];
	ForLoop31200773 -> 31278398;
	ForLoop31200773 -> _JOIN_31200773;
	_JOIN_31187451 [label="_JOIN_31187451None...",shape=box];
	_JOIN_31187451 -> 31446847;
	31282841 [label="31282841  double scv_537;...",shape=box];
	30999905 [label="30999905  y[i]=0.0;...",shape=box];
	30999905 -> _JOIN_30999906;
	_JOIN_31197019 [label="_JOIN_31197019None...",shape=box];
	_JOIN_31197019 -> 31457949;
	31463927 [label="31463927  register int cbv_77, cbv_78;...",shape=box];
	31452825 [label="31452825  register int cbv_38, cbv_39;...",shape=box];
	ForLoop31201435 [label="ForLoop31201435  for (k=kt; k<=cbv_73; k=k+19) {...",shape=box];
	ForLoop31201435 -> 31279404;
	ForLoop31201435 -> _JOIN_31201435;
	31256183 [label="31256183  double scv_177;...",shape=box];
	31464781 [label="31464781  register int cbv_80, cbv_81;...",shape=box];
	ForLoop31189733 [label="ForLoop31189733  for (k=cbv_26; k<=cbv_27; k=k+1) {...",shape=box];
	ForLoop31189733 -> 31256183;
	ForLoop31189733 -> _JOIN_31189733;
	_JOIN_30999837 [label="_JOIN_30999837None...",shape=box];
	_JOIN_30999837 -> 30999965;
	31444285 [label="31444285  register int cbv_8, cbv_9;...",shape=box];
	ForLoop31205546 [label="ForLoop31205546  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop31205546 -> ForLoop31205545;
	ForLoop31205546 -> _JOIN_31205546;
	31460511 [label="31460511  register int cbv_65, cbv_66;...",shape=box];
	_JOIN_31199963 [label="_JOIN_31199963None...",shape=box];
	_JOIN_31199963 -> 31461365;
	31467929 [label="31467929  register int cbv_93;...",shape=box];
	_JOIN_31195547 [label="_JOIN_31195547None...",shape=box];
	_JOIN_31195547 -> 31456241;
	_JOIN_31206437 [label="_JOIN_31206437None...",shape=box];
	_JOIN_31206437 -> _JOIN_31206440;
	30999965 [label="30999965  register int cbv_2, cbv_3;...",shape=box];
	31184583 [label="31184583  int k;...",shape=box];
	ForLoop31200699 [label="ForLoop31200699  for (k=kt; k<=cbv_70; k=k+19) {...",shape=box];
	ForLoop31200699 -> 31277923;
	ForLoop31200699 -> _JOIN_31200699;
	31390069 [label="31390069  double scv_598, scv_599, scv_600, scv_601, scv_602, scv_603, scv_604, scv_605;...",shape=box];
	_JOIN_31202907 [label="_JOIN_31202907None...",shape=box];
	_JOIN_31202907 -> 31464781;
	_JOIN_31192677 [label="_JOIN_31192677None...",shape=box];
	_JOIN_31192677 -> 31192679;
	_JOIN_31191867 [label="_JOIN_31191867None...",shape=box];
	_JOIN_31191867 -> 31451971;
	ForLoop31184513 [label="ForLoop31184513  for (k=kt; k<=cbv_4; k=k+19) {...",shape=box];
	ForLoop31184513 -> 31245350;
	ForLoop31184513 -> _JOIN_31184513;
	31438174 [label="31438174  register int cbv_2;...",shape=box];
	ForLoop31199963 [label="ForLoop31199963  for (k=kt; k<=cbv_67; k=k+19) {...",shape=box];
	ForLoop31199963 -> 31276442;
	ForLoop31199963 -> _JOIN_31199963;
	_JOIN_31202245 [label="_JOIN_31202245None...",shape=box];
	_JOIN_31202245 -> 31202247;
	31276442 [label="31276442  double scv_438, scv_439, scv_440, scv_441, scv_442, scv_443, scv_444, scv_445;...",shape=box];
	_JOIN_31197755 [label="_JOIN_31197755None...",shape=box];
	_JOIN_31197755 -> 31458803;
	ForLoop30999906 [label="ForLoop30999906  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop30999906 -> 30999905;
	ForLoop30999906 -> _JOIN_30999906;
	_JOIN_31186053 [label="_JOIN_31186053None...",shape=box];
	_JOIN_31186053 -> 31186055;
	31254702 [label="31254702  double scv_157;...",shape=box];
	31253221 [label="31253221  double scv_137;...",shape=box];
	31398447 [label="31398447  double scv_655;...",shape=box];
	ForLoop31205504 [label="ForLoop31205504  for (jt=jj; jt<=cbv_91; jt=jt+8) {...",shape=box];
	ForLoop31205504 -> 31205320;
	ForLoop31205504 -> _JOIN_31205504;
	ForLoop31193339 [label="ForLoop31193339  for (k=kt; k<=cbv_40; k=k+19) {...",shape=box];
	ForLoop31193339 -> 31263113;
	ForLoop31193339 -> _JOIN_31193339;
	_JOIN_31185243 [label="_JOIN_31185243None...",shape=box];
	_JOIN_31185243 -> 31444285;
	ForLoop31188923 [label="ForLoop31188923  for (k=kt; k<=cbv_22; k=k+19) {...",shape=box];
	ForLoop31188923 -> 31254227;
	ForLoop31188923 -> _JOIN_31188923;
	31285328 [label="31285328  double scv_558, scv_559, scv_560, scv_561, scv_562, scv_563, scv_564, scv_565;...",shape=box];
	31257189 [label="31257189  double scv_178, scv_179, scv_180, scv_181, scv_182, scv_183, scv_184, scv_185;...",shape=box];
	31286809 [label="31286809  double scv_578, scv_579, scv_580, scv_581, scv_582, scv_583, scv_584, scv_585;...",shape=box];
	ForLoop31198491 [label="ForLoop31198491  for (k=kt; k<=cbv_61; k=k+19) {...",shape=box];
	ForLoop31198491 -> 31273480;
	ForLoop31198491 -> _JOIN_31198491;
	31447701 [label="31447701  register int cbv_20, cbv_21;...",shape=box];
	31199303 [label="31199303  int k;...",shape=box];
	31266550 [label="31266550  double scv_317;...",shape=box];
	31454533 [label="31454533  register int cbv_44, cbv_45;...",shape=box];
	31188999 [label="31188999  int k;...",shape=box];
	ForLoop31191941 [label="ForLoop31191941  for (k=cbv_35; k<=cbv_36; k=k+1) {...",shape=box];
	ForLoop31191941 -> 31260626;
	ForLoop31191941 -> _JOIN_31191941;
	ForLoop31188261 [label="ForLoop31188261  for (k=cbv_20; k<=cbv_21; k=k+1) {...",shape=box];
	ForLoop31188261 -> 31253221;
	ForLoop31188261 -> _JOIN_31188261;
	_JOIN_31196283 [label="_JOIN_31196283None...",shape=box];
	_JOIN_31196283 -> 31457095;
	31467343 [label="31467343  register int cbv_89, cbv_90;...",shape=box];
	31442670 [label="31442670  register int cbv_3;...",shape=box];
	31453679 [label="31453679  register int cbv_41, cbv_42;...",shape=box];
	_JOIN_31190395 [label="_JOIN_31190395None...",shape=box];
	_JOIN_31190395 -> 31450263;
	ForLoop31188187 [label="ForLoop31188187  for (k=kt; k<=cbv_19; k=k+19) {...",shape=box];
	ForLoop31188187 -> 31252746;
	ForLoop31188187 -> _JOIN_31188187;
	31277923 [label="31277923  double scv_458, scv_459, scv_460, scv_461, scv_462, scv_463, scv_464, scv_465;...",shape=box];
	ForLoop31188997 [label="ForLoop31188997  for (k=cbv_23; k<=cbv_24; k=k+1) {...",shape=box];
	ForLoop31188997 -> 31254702;
	ForLoop31188997 -> _JOIN_31188997;
	31270518 [label="31270518  double scv_358, scv_359, scv_360, scv_361, scv_362, scv_363, scv_364, scv_365;...",shape=box];
	_JOIN_31205822 [label="_JOIN_31205822None...",shape=box];
	_JOIN_31205822 -> 31205823;
	_JOIN_31185317 [label="_JOIN_31185317None...",shape=box];
	_JOIN_31185317 -> 31185319;
	31202983 [label="31202983  int k;...",shape=box];
	31285803 [label="31285803  double scv_577;...",shape=box];
	ForLoop31202245 [label="ForLoop31202245  for (k=cbv_77; k<=cbv_78; k=k+1) {...",shape=box];
	ForLoop31202245 -> 31281360;
	ForLoop31202245 -> _JOIN_31202245;
	31254227 [label="31254227  double scv_138, scv_139, scv_140, scv_141, scv_142, scv_143, scv_144, scv_145;...",shape=box];
	31281360 [label="31281360  double scv_517;...",shape=box];
	ForLoop31196357 [label="ForLoop31196357  for (k=cbv_53; k<=cbv_54; k=k+1) {...",shape=box];
	ForLoop31196357 -> 31269512;
	ForLoop31196357 -> _JOIN_31196357;
	_JOIN_31190469 [label="_JOIN_31190469None...",shape=box];
	_JOIN_31190469 -> 31190471;
	ForLoop31184581 [label="ForLoop31184581  for (k=cbv_5; k<=cbv_6; k=k+1) {...",shape=box];
	ForLoop31184581 -> 31245816;
	ForLoop31184581 -> _JOIN_31184581;
	_JOIN_31197829 [label="_JOIN_31197829None...",shape=box];
	_JOIN_31197829 -> 31197831;
	_JOIN_31204453 [label="_JOIN_31204453None...",shape=box];
	_JOIN_31204453 -> 31204455;
	31456241 [label="31456241  register int cbv_50, cbv_51;...",shape=box];
	ForLoop31205545 [label="ForLoop31205545  for (jj=jjj; jj<=min(ny-1,jjj+1984); jj=jj+64) {...",shape=box];
	ForLoop31205545 -> 31467579;
	ForLoop31205545 -> _JOIN_31205545;
	_JOIN_31191941 [label="_JOIN_31191941None...",shape=box];
	_JOIN_31191941 -> 31191943;
	31248778 [label="31248778  double scv_77;...",shape=box];
	31247297 [label="31247297  double scv_57;...",shape=box];
	31273480 [label="31273480  double scv_398, scv_399, scv_400, scv_401, scv_402, scv_403, scv_404, scv_405;...",shape=box];
	31251740 [label="31251740  double scv_117;...",shape=box];
	_JOIN_31189659 [label="_JOIN_31189659None...",shape=box];
	_JOIN_31189659 -> 31449409;
	31200039 [label="31200039  int k;...",shape=box];
	31278398 [label="31278398  double scv_477;...",shape=box];
	ForLoop31206437 [label="ForLoop31206437  for (k=cbv_95; k<=cbv_96; k=k+1) {...",shape=box];
	ForLoop31206437 -> 31394737;
	ForLoop31206437 -> _JOIN_31206437;
	31275436 [label="31275436  double scv_437;...",shape=box];
	ForLoop31202981 [label="ForLoop31202981  for (k=cbv_80; k<=cbv_81; k=k+1) {...",shape=box];
	ForLoop31202981 -> 31282841;
	ForLoop31202981 -> _JOIN_31202981;
	31458803 [label="31458803  register int cbv_59, cbv_60;...",shape=box];
	_JOIN_31198491 [label="_JOIN_31198491None...",shape=box];
	_JOIN_31198491 -> 31459657;
	_JOIN_31188997 [label="_JOIN_31188997None...",shape=box];
	_JOIN_31188997 -> 31188999;
	_JOIN_31206443 [label="_JOIN_31206443None...",shape=box];
	_JOIN_31206443 -> _JOIN_31206445;
	31218494 [label="31218494  double scv_9;...",shape=box];
	31279404 [label="31279404  double scv_478, scv_479, scv_480, scv_481, scv_482, scv_483, scv_484, scv_485;...",shape=box];
	_JOIN_31191205 [label="_JOIN_31191205None...",shape=box];
	_JOIN_31191205 -> 31191207;
	31467626 [label="31467626  register int cbv_92;...",shape=box];
	_JOIN_31203643 [label="_JOIN_31203643None...",shape=box];
	_JOIN_31203643 -> 31465635;
	_JOIN_31183966 [label="_JOIN_31183966None...",shape=box];
	_JOIN_31183966 -> 31183967;
	ForLoop31201509 [label="ForLoop31201509  for (k=cbv_74; k<=cbv_75; k=k+1) {...",shape=box];
	ForLoop31201509 -> 31279879;
	ForLoop31201509 -> _JOIN_31201509;
	ForLoop31194149 [label="ForLoop31194149  for (k=cbv_44; k<=cbv_45; k=k+1) {...",shape=box];
	ForLoop31194149 -> 31265069;
	ForLoop31194149 -> _JOIN_31194149;
	ForLoop31190395 [label="ForLoop31190395  for (k=kt; k<=cbv_28; k=k+19) {...",shape=box];
	ForLoop31190395 -> 31257189;
	ForLoop31190395 -> _JOIN_31190395;
	31446847 [label="31446847  register int cbv_17, cbv_18;...",shape=box];
	31280885 [label="31280885  double scv_498, scv_499, scv_500, scv_501, scv_502, scv_503, scv_504, scv_505;...",shape=box];
	31195623 [label="31195623  int k;...",shape=box];
	ForLoop31175449 [label="ForLoop31175449  for (jt=jj; jt<=cbv_1; jt=jt+8) {...",shape=box];
	ForLoop31175449 -> 31217050;
	ForLoop31175449 -> _JOIN_31175449;
	31274961 [label="31274961  double scv_418, scv_419, scv_420, scv_421, scv_422, scv_423, scv_424, scv_425;...",shape=box];
	ForLoop31204379 [label="ForLoop31204379  for (k=kt; k<=cbv_85; k=k+19) {...",shape=box];
	ForLoop31204379 -> 31285328;
	ForLoop31204379 -> _JOIN_31204379;
	31445993 [label="31445993  register int cbv_14, cbv_15;...",shape=box];
	31448555 [label="31448555  register int cbv_23, cbv_24;...",shape=box];
	31186791 [label="31186791  int k;...",shape=box];
	_JOIN_31196357 [label="_JOIN_31196357None...",shape=box];
	_JOIN_31196357 -> 31196359;
	31457949 [label="31457949  register int cbv_56, cbv_57;...",shape=box];
	_JOIN_31199301 [label="_JOIN_31199301None...",shape=box];
	_JOIN_31199301 -> 31199303;
	31191943 [label="31191943  int k;...",shape=box];
	_JOIN_31189733 [label="_JOIN_31189733None...",shape=box];
	_JOIN_31189733 -> 31189735;
	ForLoop31203717 [label="ForLoop31203717  for (k=cbv_83; k<=cbv_84; k=k+1) {...",shape=box];
	ForLoop31203717 -> 31284322;
	ForLoop31203717 -> _JOIN_31203717;
	ForLoop31199227 [label="ForLoop31199227  for (k=kt; k<=cbv_64; k=k+19) {...",shape=box];
	ForLoop31199227 -> 31274961;
	ForLoop31199227 -> _JOIN_31199227;
	_JOIN_31206445 [label="_JOIN_31206445None...",shape=box];
	ForLoop31191867 [label="ForLoop31191867  for (k=kt; k<=cbv_34; k=k+19) {...",shape=box];
	ForLoop31191867 -> 31260151;
	ForLoop31191867 -> _JOIN_31191867;
	_JOIN_31205189 [label="_JOIN_31205189None...",shape=box];
	_JOIN_31205189 -> _JOIN_31205192;
	31273955 [label="31273955  double scv_417;...",shape=box];
	ForLoop31200037 [label="ForLoop31200037  for (k=cbv_68; k<=cbv_69; k=k+1) {...",shape=box];
	ForLoop31200037 -> 31276917;
	ForLoop31200037 -> _JOIN_31200037;
	31243921 [label="31243921  double scv_10, scv_11, scv_12, scv_13, scv_14, scv_15, scv_16, scv_17;...",shape=box];
	ForLoop31205115 [label="ForLoop31205115  for (k=kt; k<=cbv_88; k=k+19) {...",shape=box];
	ForLoop31205115 -> 31286809;
	ForLoop31205115 -> _JOIN_31205115;
	ForLoop31183966 [label="ForLoop31183966  for (kt=kk; kt<=cbv_3; kt=kt+8) {...",shape=box];
	ForLoop31183966 -> 31243921;
	ForLoop31183966 -> _JOIN_31183966;
	31252746 [label="31252746  double scv_118, scv_119, scv_120, scv_121, scv_122, scv_123, scv_124, scv_125;...",shape=box];
	ForLoop31197755 [label="ForLoop31197755  for (k=kt; k<=cbv_58; k=k+19) {...",shape=box];
	ForLoop31197755 -> 31271999;
	ForLoop31197755 -> _JOIN_31197755;
	31183967 [label="31183967  int k;...",shape=box];
	_JOIN_31205545 [label="_JOIN_31205545None...",shape=box];
	_JOIN_31205545 -> _JOIN_31205546;
	31267556 [label="31267556  double scv_318, scv_319, scv_320, scv_321, scv_322, scv_323, scv_324, scv_325;...",shape=box];
	31192679 [label="31192679  int k;...",shape=box];
	_JOIN_31194811 [label="_JOIN_31194811None...",shape=box];
	_JOIN_31194811 -> 31455387;
	_JOIN_31205546 [label="_JOIN_31205546None...",shape=box];
	_JOIN_31205546 -> ForLoop31206441;
	31197831 [label="31197831  int k;...",shape=box];
	ForLoop31194885 [label="ForLoop31194885  for (k=cbv_47; k<=cbv_48; k=k+1) {...",shape=box];
	ForLoop31194885 -> 31266550;
	ForLoop31194885 -> _JOIN_31194885;
	_JOIN_31200037 [label="_JOIN_31200037None...",shape=box];
	_JOIN_31200037 -> 31200039;
	31271999 [label="31271999  double scv_378, scv_379, scv_380, scv_381, scv_382, scv_383, scv_384, scv_385;...",shape=box];
	31465635 [label="31465635  register int cbv_83, cbv_84;...",shape=box];
	ForLoop31205196 [label="ForLoop31205196  for (i=ii; i<=min(nx-1,ii+511)-28; i=i+29) {...",shape=box];
	ForLoop31205196 -> 31390069;
	ForLoop31205196 -> _JOIN_31205196;
	ForLoop31205194 [label="ForLoop31205194  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop31205194 -> ForLoop31205192;
	ForLoop31205194 -> _JOIN_31205194;
	ForLoop31197829 [label="ForLoop31197829  for (k=cbv_59; k<=cbv_60; k=k+1) {...",shape=box];
	ForLoop31197829 -> 31272474;
	ForLoop31197829 -> _JOIN_31197829;
	ForLoop31205192 [label="ForLoop31205192  for (kk=kkk; kk<=min(ny-1,kkk+768); kk=kk+256) {...",shape=box];
	ForLoop31205192 -> 31442670;
	ForLoop31205192 -> _JOIN_31205192;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 30999754;
	_JOIN_31188923 [label="_JOIN_31188923None...",shape=box];
	_JOIN_31188923 -> 31448555;
	31264594 [label="31264594  double scv_278, scv_279, scv_280, scv_281, scv_282, scv_283, scv_284, scv_285;...",shape=box];
	ForLoop31195547 [label="ForLoop31195547  for (k=kt; k<=cbv_49; k=k+19) {...",shape=box];
	ForLoop31195547 -> 31267556;
	ForLoop31195547 -> _JOIN_31195547;
	ForLoop31186053 [label="ForLoop31186053  for (k=cbv_11; k<=cbv_12; k=k+1) {...",shape=box];
	ForLoop31186053 -> 31248778;
	ForLoop31186053 -> _JOIN_31186053;
	31451971 [label="31451971  register int cbv_35, cbv_36;...",shape=box];
	31393290 [label="31393290  double scv_627, scv_628, scv_629, scv_630, scv_631, scv_632, scv_633, scv_634;...",shape=box];
	ForLoop31185979 [label="ForLoop31185979  for (k=kt; k<=cbv_10; k=k+19) {...",shape=box];
	ForLoop31185979 -> 31248303;
	ForLoop31185979 -> _JOIN_31185979;
	31203719 [label="31203719  int k;...",shape=box];
	31186055 [label="31186055  int k;...",shape=box];
	31197095 [label="31197095  int k;...",shape=box];
	31394271 [label="31394271  double scv_635, scv_636, scv_637, scv_638, scv_639, scv_640, scv_641, scv_642;...",shape=box];
	31205320 [label="31205320  scv_655=scv_655+A[i*ny+jt]*x[jt];...",shape=box];
	ForLoop31186789 [label="ForLoop31186789  for (k=cbv_14; k<=cbv_15; k=k+1) {...",shape=box];
	ForLoop31186789 -> 31250259;
	ForLoop31186789 -> _JOIN_31186789;
	_JOIN_31194885 [label="_JOIN_31194885None...",shape=box];
	_JOIN_31194885 -> 31194887;
	30999826 [label="30999826  y[i]=0.0;...",shape=box];
	31461365 [label="31461365  register int cbv_68, cbv_69;...",shape=box];
	31284322 [label="31284322  double scv_557;...",shape=box];
	31185319 [label="31185319  int k;...",shape=box];
	31468690 [label="31468690  register int cbv_95, cbv_96;...",shape=box];
	ForLoop31189659 [label="ForLoop31189659  for (k=kt; k<=cbv_25; k=k+19) {...",shape=box];
	ForLoop31189659 -> 31255708;
	ForLoop31189659 -> _JOIN_31189659;
	31437646 [label="31437646  register int cbv_1;...",shape=box];
	31266075 [label="31266075  double scv_298, scv_299, scv_300, scv_301, scv_302, scv_303, scv_304, scv_305;...",shape=box];
	_JOIN_31188187 [label="_JOIN_31188187None...",shape=box];
	_JOIN_31188187 -> 31447701;
	31449409 [label="31449409  register int cbv_26, cbv_27;...",shape=box];
	_JOIN_31193339 [label="_JOIN_31193339None...",shape=box];
	_JOIN_31193339 -> 31453679;
	ForLoop31202907 [label="ForLoop31202907  for (k=kt; k<=cbv_79; k=k+19) {...",shape=box];
	ForLoop31202907 -> 31282366;
	ForLoop31202907 -> _JOIN_31202907;
	ForLoop31204453 [label="ForLoop31204453  for (k=cbv_86; k<=cbv_87; k=k+1) {...",shape=box];
	ForLoop31204453 -> 31285803;
	ForLoop31204453 -> _JOIN_31204453;
	31251265 [label="31251265  double scv_98, scv_99, scv_100, scv_101, scv_102, scv_103, scv_104, scv_105;...",shape=box];
	31268031 [label="31268031  double scv_337;...",shape=box];
	ForLoop31192603 [label="ForLoop31192603  for (k=kt; k<=cbv_37; k=k+19) {...",shape=box];
	ForLoop31192603 -> 31261632;
	ForLoop31192603 -> _JOIN_31192603;
	_JOIN_31193413 [label="_JOIN_31193413None...",shape=box];
	_JOIN_31193413 -> 31193415;
	ForLoop31190469 [label="ForLoop31190469  for (k=cbv_29; k<=cbv_30; k=k+1) {...",shape=box];
	ForLoop31190469 -> 31257664;
	ForLoop31190469 -> _JOIN_31190469;
	31260626 [label="31260626  double scv_237;...",shape=box];
	ForLoop31185317 [label="ForLoop31185317  for (k=cbv_8; k<=cbv_9; k=k+1) {...",shape=box];
	ForLoop31185317 -> 31247297;
	ForLoop31185317 -> _JOIN_31185317;
	_JOIN_31176305 [label="_JOIN_31176305None...",shape=box];
	_JOIN_31176305 -> ForLoop31205194;
	_JOIN_31206369 [label="_JOIN_31206369None...",shape=box];
	_JOIN_31206369 -> 31468690;
	_JOIN_31194149 [label="_JOIN_31194149None...",shape=box];
	_JOIN_31194149 -> 31194151;
	_JOIN_31176301 [label="_JOIN_31176301None...",shape=box];
	_JOIN_31176301 -> _JOIN_31176303;
	_JOIN_31176303 [label="_JOIN_31176303None...",shape=box];
	_JOIN_31176303 -> _JOIN_31176305;
	_JOIN_31195621 [label="_JOIN_31195621None...",shape=box];
	_JOIN_31195621 -> 31195623;
	31257664 [label="31257664  double scv_197;...",shape=box];
	ForLoop31197093 [label="ForLoop31197093  for (k=cbv_56; k<=cbv_57; k=k+1) {...",shape=box];
	ForLoop31197093 -> 31270993;
	ForLoop31197093 -> _JOIN_31197093;
	_JOIN_31186715 [label="_JOIN_31186715None...",shape=box];
	_JOIN_31186715 -> 31445993;
	_JOIN_31201435 [label="_JOIN_31201435None...",shape=box];
	_JOIN_31201435 -> 31463073;
	31467579 [label="31467579  register int cbv_91;...",shape=box];
	31167432 [label="31167432  double x_copy;...",shape=box];
	31265069 [label="31265069  double scv_297;...",shape=box];
	ForLoop31205822 [label="ForLoop31205822  for (kt=kk; kt<=cbv_93; kt=kt+8) {...",shape=box];
	ForLoop31205822 -> 31393290;
	ForLoop31205822 -> _JOIN_31205822;
	ForLoop31206369 [label="ForLoop31206369  for (k=kt; k<=cbv_94; k=k+19) {...",shape=box];
	ForLoop31206369 -> 31394271;
	ForLoop31206369 -> _JOIN_31206369;
	_JOIN_31191131 [label="_JOIN_31191131None...",shape=box];
	_JOIN_31191131 -> 31451117;
	31272474 [label="31272474  double scv_397;...",shape=box];
	31455387 [label="31455387  register int cbv_47, cbv_48;...",shape=box];
	30999754 [label="30999754  int i;...",shape=box];
	31245350 [label="31245350  double scv_18, scv_19, scv_20, scv_21, scv_22, scv_23, scv_24, scv_25;...",shape=box];
	31394737 [label="31394737  double scv_654;...",shape=box];
	31282366 [label="31282366  double scv_518, scv_519, scv_520, scv_521, scv_522, scv_523, scv_524, scv_525;...",shape=box];
	31217050 [label="31217050  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	_JOIN_31188261 [label="_JOIN_31188261None...",shape=box];
	_JOIN_31188261 -> 31188263;
	_JOIN_31205504 [label="_JOIN_31205504None...",shape=box];
	_JOIN_31205504 -> 31467626;
	_JOIN_31202981 [label="_JOIN_31202981None...",shape=box];
	_JOIN_31202981 -> 31202983;
	31276917 [label="31276917  double scv_457;...",shape=box];
	31269037 [label="31269037  double scv_338, scv_339, scv_340, scv_341, scv_342, scv_343, scv_344, scv_345;...",shape=box];
	31187527 [label="31187527  int k;...",shape=box];
	31451117 [label="31451117  register int cbv_32, cbv_33;...",shape=box];
	_JOIN_31203717 [label="_JOIN_31203717None...",shape=box];
	_JOIN_31203717 -> 31203719;
	_JOIN_31194075 [label="_JOIN_31194075None...",shape=box];
	_JOIN_31194075 -> 31454533;
	_JOIN_31175449 [label="_JOIN_31175449None...",shape=box];
	_JOIN_31175449 -> 31438174;
	_JOIN_31205543 [label="_JOIN_31205543None...",shape=box];
	_JOIN_31205543 -> _JOIN_31205545;
	_JOIN_31192603 [label="_JOIN_31192603None...",shape=box];
	_JOIN_31192603 -> 31452825;
	31194887 [label="31194887  int k;...",shape=box];
	31191207 [label="31191207  int k;...",shape=box];
	31246822 [label="31246822  double scv_38, scv_39, scv_40, scv_41, scv_42, scv_43, scv_44, scv_45;...",shape=box];
	31193415 [label="31193415  int k;...",shape=box];
	ForLoop31203643 [label="ForLoop31203643  for (k=kt; k<=cbv_82; k=k+19) {...",shape=box];
	ForLoop31203643 -> 31283847;
	ForLoop31203643 -> _JOIN_31203643;
	31245816 [label="31245816  double scv_37;...",shape=box];
	31287284 [label="31287284  double scv_597;...",shape=box];
	ForLoop31194075 [label="ForLoop31194075  for (k=kt; k<=cbv_43; k=k+19) {...",shape=box];
	ForLoop31194075 -> 31264594;
	ForLoop31194075 -> _JOIN_31194075;
	ForLoop31185243 [label="ForLoop31185243  for (k=kt; k<=cbv_7; k=k+19) {...",shape=box];
	ForLoop31185243 -> 31246822;
	ForLoop31185243 -> _JOIN_31185243;
	_JOIN_31205115 [label="_JOIN_31205115None...",shape=box];
	_JOIN_31205115 -> 31467343;
	_JOIN_31198565 [label="_JOIN_31198565None...",shape=box];
	_JOIN_31198565 -> 31198567;
	_JOIN_31200699 [label="_JOIN_31200699None...",shape=box];
	_JOIN_31200699 -> 31462219;
	31390087 [label="31390087  tmp[(i+20)]=scv_598;...",shape=box];
	ForLoop31192677 [label="ForLoop31192677  for (k=cbv_38; k<=cbv_39; k=k+1) {...",shape=box];
	ForLoop31192677 -> 31262107;
	ForLoop31192677 -> _JOIN_31192677;
	31188263 [label="31188263  int k;...",shape=box];
	_JOIN_31201509 [label="_JOIN_31201509None...",shape=box];
	_JOIN_31201509 -> 31201511;
	ForLoop31206440 [label="ForLoop31206440  for (kk=kkk; kk<=min(ny-1,kkk+768); kk=kk+256) {...",shape=box];
	ForLoop31206440 -> 31467929;
	ForLoop31206440 -> _JOIN_31206440;
	ForLoop31176305 [label="ForLoop31176305  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop31176305 -> ForLoop31176303;
	ForLoop31176305 -> _JOIN_31176305;
	_JOIN_31205192 [label="_JOIN_31205192None...",shape=box];
	_JOIN_31205192 -> _JOIN_31205194;
	ForLoop31187525 [label="ForLoop31187525  for (k=cbv_17; k<=cbv_18; k=k+1) {...",shape=box];
	ForLoop31187525 -> 31251740;
	ForLoop31187525 -> _JOIN_31187525;
	_JOIN_31205196 [label="_JOIN_31205196None...",shape=box];
	_JOIN_31205196 -> ForLoop31206443;
	ForLoop31176303 [label="ForLoop31176303  for (jj=jjj; jj<=min(ny-1,jjj+1984); jj=jj+64) {...",shape=box];
	ForLoop31176303 -> 31437646;
	ForLoop31176303 -> _JOIN_31176303;
	_JOIN_31205194 [label="_JOIN_31205194None...",shape=box];
	_JOIN_31205194 -> 31390087;
	ForLoop31196283 [label="ForLoop31196283  for (k=kt; k<=cbv_52; k=k+19) {...",shape=box];
	ForLoop31196283 -> 31269037;
	ForLoop31196283 -> _JOIN_31196283;
	_JOIN_31184581 [label="_JOIN_31184581None...",shape=box];
	_JOIN_31184581 -> 31184583;
	31443431 [label="31443431  register int cbv_5, cbv_6;...",shape=box];
	31167447 [label="31167447  int i;...",shape=box];
	31167447 -> ForLoop31205196;
	31263588 [label="31263588  double scv_277;...",shape=box];
	31204455 [label="31204455  int k;...",shape=box];
	31269512 [label="31269512  double scv_357;...",shape=box];
	ForLoop31198565 [label="ForLoop31198565  for (k=cbv_62; k<=cbv_63; k=k+1) {...",shape=box];
	ForLoop31198565 -> 31273955;
	ForLoop31198565 -> _JOIN_31198565;
	31196359 [label="31196359  int k;...",shape=box];
	_JOIN_31206441 [label="_JOIN_31206441None...",shape=box];
	_JOIN_31206441 -> 31398459;
	31262107 [label="3126210expected=9369846271501.798828
actual=9369846271501.798828
7  double scv_257;...",shape=box];
	_JOIN_31206440 [label="_JOIN_31206440None...",shape=box];
	_JOIN_31206440 -> _JOIN_31206441;
	31205823 [label="31205823  int k;...",shape=box];
	31198567 [label="31198567  int k;...",shape=box];
	31189735 [label="31189735  int k;...",shape=box];
	31462219 [label="31462219  register int cbv_71, cbv_72;...",shape=box];
	31202247 [label="31202247  int k;...",shape=box];
	31260151 [label="31260151  double scv_218, scv_219, scv_220, scv_221, scv_222, scv_223, scv_224, scv_225;...",shape=box];
	31200775 [label="31200775  int k;...",shape=box];
	_JOIN_31204379 [label="_JOIN_31204379None...",shape=box];
	_JOIN_31204379 -> 31466489;
	31459657 [label="31459657  register int cbv_62, cbv_63;...",shape=box];
	ForLoop31197019 [label="ForLoop31197019  for (k=kt; k<=cbv_55; k=k+19) {...",shape=box];
	ForLoop31197019 -> 31270518;
	ForLoop31197019 -> _JOIN_31197019;
	_JOIN_31184513 [label="_JOIN_31184513None...",shape=box];
	_JOIN_31184513 -> 31443431;
	ForLoop31193413 [label="ForLoop31193413  for (k=cbv_41; k<=cbv_42; k=k+1) {...",shape=box];
	ForLoop31193413 -> 31263588;
	ForLoop31193413 -> _JOIN_31193413;
	31466489 [label="31466489  register int cbv_86, cbv_87;...",shape=box];
	31463073 [label="31463073  register int cbv_74, cbv_75;...",shape=box];
	31255708 [label="31255708  double scv_158, scv_159, scv_160, scv_161, scv_162, scv_163, scv_164, scv_165;...",shape=box];
	_JOIN_31187525 [label="_JOIN_31187525None...",shape=box];
	_JOIN_31187525 -> 31187527;
	31261632 [label="31261632  double scv_238, scv_239, scv_240, scv_241, scv_242, scv_243, scv_244, scv_245;...",shape=box];
	31270993 [label="31270993  double scv_377;...",shape=box];
	ForLoop31194811 [label="ForLoop31194811  for (k=kt; k<=cbv_46; k=k+19) {...",shape=box];
	ForLoop31194811 -> 31266075;
	ForLoop31194811 -> _JOIN_31194811;
	ForLoop31202171 [label="ForLoop31202171  for (k=kt; k<=cbv_76; k=k+19) {...",shape=box];
	ForLoop31202171 -> 31280885;
	ForLoop31202171 -> _JOIN_31202171;
	_JOIN_31185979 [label="_JOIN_31185979None...",shape=box];
	_JOIN_31185979 -> 31445139;
	31250259 [label="31250259  double scv_97;...",shape=box];
	_JOIN_31199227 [label="_JOIN_31199227None...",shape=box];
	_JOIN_31199227 -> 31460511;
	_JOIN_30999906 [label="_JOIN_30999906None...",shape=box];
	_JOIN_30999906 -> 31167432;
	31263113 [label="31263113  double scv_258, scv_259, scv_260, scv_261, scv_262, scv_263, scv_264, scv_265;...",shape=box];
	31398459 [label="31398459  tmp[i]=scv_655;...",shape=box];
	31398459 -> _JOIN_31206443;
	ForLoop31199301 [label="ForLoop31199301  for (k=cbv_65; k<=cbv_66; k=k+1) {...",shape=box];
	ForLoop31199301 -> 31275436;
	ForLoop31199301 -> _JOIN_31199301;
	31205542 [label="31205542  scv_655=scv_655+A[i*ny+j]*x[j];...",shape=box];
	31205542 -> _JOIN_31205543;
	ForLoop31205189 [label="ForLoop31205189  for (k=cbv_89; k<=cbv_90; k=k+1) {...",shape=box];
	ForLoop31205189 -> 31287284;
	ForLoop31205189 -> _JOIN_31205189;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest125.exe __orio_perftest125.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest125.exe  
{'[6, 3, 5, 0, 6, 5, 0, 0, 1, 28, 0, 18, 0, 1, 1, 1, 1, 1]' : 0.144094}
{'[6, 3, 5, 0, 6, 5, 0, 0, 1, 28, 0, 18, 0, 1, 1, 1, 1, 1]' : 0.143537}
{'[6, 3, 5, 0, 6, 5, 0, 0, 1, 28, 0, 18, 0, 1, 1, 1, 1, 1]' : 0.143536}
{'[6, 3, 5, 0, 6, 5, 0, 0, 1, 28, 0, 18, 0, 1, 1, 1, 1, 1]' : 0.14353}
{'[6, 3, 5, 0, 6, 5, 0, 0, 1, 28, 0, 18, 0, 1, 1, 1, 1, 1]' : 0.143299}
{'[6, 3, 5, 0, 6, 5, 0, 0, 1, 28, 0, 18, 0, 1, 1, 1, 1, 1]' : 0.144825}
{'[6, 3, 5, 0, 6, 5, 0, 0, 1, 28, 0, 18, 0, 1, 1, 1, 1, 1]' : 0.143451}
{'[6, 3, 5, 0, 6, 5, 0, 0, 1, 28, 0, 18, 0, 1, 1, 1, 1, 1]' : 0.14405}
{'[6, 3, 5, 0, 6, 5, 0, 0, 1, 28, 0, 18, 0, 1, 1, 1, 1, 1]' : 0.143812}
{'[6, 3, 5, 0, 6, 5, 0, 0, 1, 28, 0, 18, 0, 1, 1, 1, 1, 1]' : 0.143646}
{'[6, 3, 5, 0, 6, 5, 0, 0, 1, 28, 0, 18, 0, 1, 1, 1, 1, 1]' : 0.143437}
{'[6, 3, 5, 0, 6, 5, 0, 0, 1, 28, 0, 18, 0, 1, 1, 1, 1, 1]' : 0.143507}
{'[6, 3, 5, 0, 6, 5, 0, 0, 1, 28, 0, 18, 0, 1, 1, 1, 1, 1]' : 0.143736}
{'[6, 3, 5, 0, 6, 5, 0, 0, 1, 28, 0, 18, 0, 1, 1, 1, 1, 1]' : 0.143769}
{'[6, 3, 5, 0, 6, 5, 0, 0, 1, 28, 0, 18, 0, 1, 1, 1, 1, 1]' : 0.143455}
{'[6, 3, 5, 0, 6, 5, 0, 0, 1, 28, 0, 18, 0, 1, 1, 1, 1, 1]' : 0.143507}
{'[6, 3, 5, 0, 6, 5, 0, 0, 1, 28, 0, 18, 0, 1, 1, 1, 1, 1]' : 0.143757}
{'[6, 3, 5, 0, 6, 5, 0, 0, 1, 28, 0, 18, 0, 1, 1, 1, 1, 1]' : 0.143613}
{'[6, 3, 5, 0, 6, 5, 0, 0, 1, 28, 0, 18, 0, 1, 1, 1, 1, 1]' : 0.143581}
{'[6, 3, 5, 0, 6, 5, 0, 0, 1, 28, 0, 18, 0, 1, 1, 1, 1, 1]' : 0.144459}
{'[6, 3, 5, 0, 6, 5, 0, 0, 1, 28, 0, 18, 0, 1, 1, 1, 1, 1]' : 0.143904}
{'[6, 3, 5, 0, 6, 5, 0, 0, 1, 28, 0, 18, 0, 1, 1, 1, 1, 1]' : 0.143872}
{'[6, 3, 5, 0, 6, 5, 0, 0, 1, 28, 0, 18, 0, 1, 1, 1, 1, 1]' : 0.143891}
{'[6, 3, 5, 0, 6, 5, 0, 0, 1, 28, 0, 18, 0, 1, 1, 1, 1, 1]' : 0.143424}
{'[6, 3, 5, 0, 6, 5, 0, 0, 1, 28, 0, 18, 0, 1, 1, 1, 1, 1]' : 0.143943}
{'[6, 3, 5, 0, 6, 5, 0, 0, 1, 28, 0, 18, 0, 1, 1, 1, 1, 1]' : 0.144037}
{'[6, 3, 5, 0, 6, 5, 0, 0, 1, 28, 0, 18, 0, 1, 1, 1, 1, 1]' : 0.143621}
{'[6, 3, 5, 0, 6, 5, 0, 0, 1, 28, 0, 18, 0, 1, 1, 1, 1, 1]' : 0.143372}
{'[6, 3, 5, 0, 6, 5, 0, 0, 1, 28, 0, 18, 0, 1, 1, 1, 1, 1]' : 0.143471}
{'[6, 3, 5, 0, 6, 5, 0, 0, 1, 28, 0, 18, 0, 1, 1, 1, 1, 1]' : 0.143687}

out:
 ["{'[6, 3, 5, 0, 6, 5, 0, 0, 1, 28, 0, 18, 0, 1, 1, 1, 1, 1]' : 0.144094}", "{'[6, 3, 5, 0, 6, 5, 0, 0, 1, 28, 0, 18, 0, 1, 1, 1, 1, 1]' : 0.143537}", "{'[6, 3, 5, 0, 6, 5, 0, 0, 1, 28, 0, 18, 0, 1, 1, 1, 1, 1]' : 0.143536}", "{'[6, 3, 5, 0, 6, 5, 0, 0, 1, 28, 0, 18, 0, 1, 1, 1, 1, 1]' : 0.14353}", "{'[6, 3, 5, 0, 6, 5, 0, 0, 1, 28, 0, 18, 0, 1, 1, 1, 1, 1]' : 0.143299}", "{'[6, 3, 5, 0, 6, 5, 0, 0, 1, 28, 0, 18, 0, 1, 1, 1, 1, 1]' : 0.144825}", "{'[6, 3, 5, 0, 6, 5, 0, 0, 1, 28, 0, 18, 0, 1, 1, 1, 1, 1]' : 0.143451}", "{'[6, 3, 5, 0, 6, 5, 0, 0, 1, 28, 0, 18, 0, 1, 1, 1, 1, 1]' : 0.14405}", "{'[6, 3, 5, 0, 6, 5, 0, 0, 1, 28, 0, 18, 0, 1, 1, 1, 1, 1]' : 0.143812}", "{'[6, 3, 5, 0, 6, 5, 0, 0, 1, 28, 0, 18, 0, 1, 1, 1, 1, 1]' : 0.143646}", "{'[6, 3, 5, 0, 6, 5, 0, 0, 1, 28, 0, 18, 0, 1, 1, 1, 1, 1]' : 0.143437}", "{'[6, 3, 5, 0, 6, 5, 0, 0, 1, 28, 0, 18, 0, 1, 1, 1, 1, 1]' : 0.143507}", "{'[6, 3, 5, 0, 6, 5, 0, 0, 1, 28, 0, 18, 0, 1, 1, 1, 1, 1]' : 0.143736}", "{'[6, 3, 5, 0, 6, 5, 0, 0, 1, 28, 0, 18, 0, 1, 1, 1, 1, 1]' : 0.143769}", "{'[6, 3, 5, 0, 6, 5, 0, 0, 1, 28, 0, 18, 0, 1, 1, 1, 1, 1]' : 0.143455}", "{'[6, 3, 5, 0, 6, 5, 0, 0, 1, 28, 0, 18, 0, 1, 1, 1, 1, 1]' : 0.143507}", "{'[6, 3, 5, 0, 6, 5, 0, 0, 1, 28, 0, 18, 0, 1, 1, 1, 1, 1]' : 0.143757}", "{'[6, 3, 5, 0, 6, 5, 0, 0, 1, 28, 0, 18, 0, 1, 1, 1, 1, 1]' : 0.143613}", "{'[6, 3, 5, 0, 6, 5, 0, 0, 1, 28, 0, 18, 0, 1, 1, 1, 1, 1]' : 0.143581}", "{'[6, 3, 5, 0, 6, 5, 0, 0, 1, 28, 0, 18, 0, 1, 1, 1, 1, 1]' : 0.144459}", "{'[6, 3, 5, 0, 6, 5, 0, 0, 1, 28, 0, 18, 0, 1, 1, 1, 1, 1]' : 0.143904}", "{'[6, 3, 5, 0, 6, 5, 0, 0, 1, 28, 0, 18, 0, 1, 1, 1, 1, 1]' : 0.143872}", "{'[6, 3, 5, 0, 6, 5, 0, 0, 1, 28, 0, 18, 0, 1, 1, 1, 1, 1]' : 0.143891}", "{'[6, 3, 5, 0, 6, 5, 0, 0, 1, 28, 0, 18, 0, 1, 1, 1, 1, 1]' : 0.143424}", "{'[6, 3, 5, 0, 6, 5, 0, 0, 1, 28, 0, 18, 0, 1, 1, 1, 1, 1]' : 0.143943}", "{'[6, 3, 5, 0, 6, 5, 0, 0, 1, 28, 0, 18, 0, 1, 1, 1, 1, 1]' : 0.144037}", "{'[6, 3, 5, 0, 6, 5, 0, 0, 1, 28, 0, 18, 0, 1, 1, 1, 1, 1]' : 0.143621}", "{'[6, 3, 5, 0, 6, 5, 0, 0, 1, 28, 0, 18, 0, 1, 1, 1, 1, 1]' : 0.143372}", "{'[6, 3, 5, 0, 6, 5, 0, 0, 1, 28, 0, 18, 0, 1, 1, 1, 1, 1]' : 0.143471}", "{'[6, 3, 5, 0, 6, 5, 0, 0, 1, 28, 0, 18, 0, 1, 1, 1, 1, 1]' : 0.143687}"]
returning from 'run': {'[6, 3, 5, 0, 6, 5, 0, 0, 1, 28, 0, 18, 0, 1, 1, 1, 1, 1]': ([0.144094, 0.143537, 0.143536, 0.14353, 0.143299, 0.144825, 0.143451, 0.14405, 0.143812, 0.143646, 0.143437, 0.143507, 0.143736, 0.143769, 0.143455, 0.143507, 0.143757, 0.143613, 0.143581, 0.144459, 0.143904, 0.143872, 0.143891, 0.143424, 0.143943, 0.144037, 0.143621, 0.143372, 0.143471, 0.143687], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.144094, 0.143537, 0.143536, 0.14353, 0.143299, 0.144825, 0.143451, 0.14405, 0.143812, 0.143646, 0.143437, 0.143507, 0.143736, 0.143769, 0.143455, 0.143507, 0.143757, 0.143613, 0.143581, 0.144459, 0.143904, 0.143872, 0.143891, 0.143424, 0.143943, 0.144037, 0.143621, 0.143372, 0.143471, 0.143687], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[6, 3, 5, 0, 6, 5, 0, 0, 1, 28, 0, 18, 0, 1, 1, 1, 1, 1]': ([0.144094, 0.143537, 0.143536, 0.14353, 0.143299, 0.144825, 0.143451, 0.14405, 0.143812, 0.143646, 0.143437, 0.143507, 0.143736, 0.143769, 0.143455, 0.143507, 0.143757, 0.143613, 0.143581, 0.144459, 0.143904, 0.143872, 0.143891, 0.143424, 0.143943, 0.144037, 0.143621, 0.143372, 0.143471, 0.143687], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Slowdown: 1.1135385975
Budget: 120/1
Step 4
 ~ T1_I + T1_J + T1_K + U1_I + U_I + U_J + RT_I + RT_J + RT_K + VEC2
Fixed Factors: {'ACOPY_x': 0, 'ACOPY_y': 0, 'U_K': 18, 'T2_K': 5, 'T2_J': 6, 'T2_I': 0, 'VEC1': 1, 'SCR': 1}
Full data does not fit on budget
Too few data points for a D-Optimal design
Measuring design of size 18
Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Design Line: [3, 0, 0, 0, 6, 5, 0, 0, 4, 0, 13, 18, 0, 0, 0, 1, 1, 1]
Fixed Factors: {'ACOPY_x': 0, 'ACOPY_y': 0, 'U_K': 18, 'T2_K': 5, 'T2_J': 6, 'T2_I': 0, 'VEC1': 1, 'SCR': 1}
Testing candidate 1: [3, 0, 0, 0, 6, 5, 0, 0, 4, 0, 13, 18, 0, 0, 0, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	4
        Additions: 		202
        Multiplications: 	70
        Divisions: 		0
        Logical: 		0
        Reads: 			487
        Writes: 		113
        Comparisons:		10
        Gotos: 			0
        
digraph CFG {
	_JOIN_31483517 [label="_JOIN_31483517None...",shape=box];
	ForLoop31482814 [label="ForLoop31482814  for (j=jjj; j<=cbv_1; j=j+14) {...",shape=box];
	ForLoop31482814 -> 31482487;
	ForLoop31482814 -> _JOIN_31482814;
	_JOIN_31483514 [label="_JOIN_31483514None...",shape=box];
	_JOIN_31483514 -> 31487966;
	31482898 [label="31482898  int k;...",shape=box];
	31469271 [label="31469271  int i;...",shape=box];
	_JOIN_31482884 [label="_JOIN_31482884None...",shape=box];
	_JOIN_31482884 -> ForLoop31483514;
	_JOIN_31482882 [label="_JOIN_31482882None...",shape=box];
	_JOIN_31482882 -> _JOIN_31482884;
	31485419 [label="31485419  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 31469271;
	_JOIN_31483512 [label="_JOIN_31483512None...",shape=box];
	_JOIN_31483512 -> _JOIN_31483514;
	_JOIN_31483516 [label="_JOIN_31483516None...",shape=box];
	_JOIN_31483516 -> _JOIN_31483517;
	31469581 [label="31469581  register int cbv_2, cbv_3;...",shape=box];
	ForLoop31483517 [label="ForLoop31483517  for (ii=0; ii<=nx-1; ii=ii+64) {...",shape=box];
	ForLoop31483517 -> ForLoop31483516;
	ForLoop31483517 -> _JOIN_31483517;
	ForLoop31483516 [label="ForLoop31483516  for (i=ii; i<=min(nx-1,ii+63); i=i+1) {...",shape=box];
	ForLoop31483516 -> 31487954;
	ForLoop31483516 -> _JOIN_31483516;
	ForLoop31483514 [label="ForLoop31483514  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop31483514 -> 31482898;
	ForLoop31483514 -> _JOIN_31483514;
	_JOIN_31482814 [label="_JOIN_31482814None...",shape=box];
	_JOIN_31482814 -> 31489591;
	31487954 [label="31487954  double scv_21;...",shape=box];
	_JOIN_31469426 [label="_JOIN_31469426None...",shape=box];
	_JOIN_31469426 -> 31469581;
	ForLoop31469495 [label="ForLoop31469495  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop31469495 -> 31469494;
	ForLoop31469495 -> _JOIN_31469495;
	31482487 [label="31482487  scv_21=scv_21+A[i*nexpected=9369846271501.798828
actual=9369846271501.798828
y+j]*x[j];...",shape=box];
	31490385 [label="31490385  register int cbv_5, cbv_6;...",shape=box];
	31485885 [label="31485885  double scv_20;...",shape=box];
	_JOIN_31483444 [label="_JOIN_31483444None...",shape=box];
	_JOIN_31483444 -> 31490385;
	31482881 [label="31482881  scv_21=scv_21+A[i*ny+j]*x[j];...",shape=box];
	31482881 -> _JOIN_31482882;
	31482447 [label="31482447  int j;...",shape=box];
	31482395 [label="31482395  double x_copy;...",shape=box];
	31469388 [label="31469388  y[i]=0.0;...",shape=box];
	ForLoop31482882 [label="ForLoop31482882  for (j=cbv_2; j<=cbv_3; j=j+1) {...",shape=box];
	ForLoop31482882 -> 31482881;
	ForLoop31482882 -> _JOIN_31482882;
	ForLoop31482884 [label="ForLoop31482884  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop31482884 -> 31482447;
	ForLoop31482884 -> _JOIN_31482884;
	ForLoop31483444 [label="ForLoop31483444  for (k=kkk; k<=cbv_4; k=k+19) {...",shape=box];
	ForLoop31483444 -> 31485419;
	ForLoop31483444 -> _JOIN_31483444;
	31469494 [label="31469494  y[i]=0.0;...",shape=box];
	31469494 -> _JOIN_31469495;
	31487966 [label="31487966  tmp[i]=scv_21;...",shape=box];
	31487966 -> _JOIN_31483516;
	ForLoop31469426 [label="ForLoop31469426  for (i=0; i<=cbv_1; i=i+5) {...",shape=box];
	ForLoop31469426 -> 31469388;
	ForLoop31469426 -> _JOIN_31469426;
	_JOIN_31469495 [label="_JOIN_31469495None...",shape=box];
	_JOIN_31469495 -> 31482395;
	31489591 [label="31489591  register int cbv_2, cbv_3;...",shape=box];
	ForLoop31483512 [label="ForLoop31483512  for (k=cbv_5; k<=cbv_6; k=k+1) {...",shape=box];
	ForLoop31483512 -> 31485885;
	ForLoop31483512 -> _JOIN_31483512;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest126.exe __orio_perftest126.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest126.exe  
{'[3, 0, 0, 0, 6, 5, 0, 0, 4, 0, 13, 18, 0, 0, 0, 1, 1, 1]' : 0.126616}
{'[3, 0, 0, 0, 6, 5, 0, 0, 4, 0, 13, 18, 0, 0, 0, 1, 1, 1]' : 0.12664}
{'[3, 0, 0, 0, 6, 5, 0, 0, 4, 0, 13, 18, 0, 0, 0, 1, 1, 1]' : 0.126516}
{'[3, 0, 0, 0, 6, 5, 0, 0, 4, 0, 13, 18, 0, 0, 0, 1, 1, 1]' : 0.126563}
{'[3, 0, 0, 0, 6, 5, 0, 0, 4, 0, 13, 18, 0, 0, 0, 1, 1, 1]' : 0.126547}
{'[3, 0, 0, 0, 6, 5, 0, 0, 4, 0, 13, 18, 0, 0, 0, 1, 1, 1]' : 0.126759}
{'[3, 0, 0, 0, 6, 5, 0, 0, 4, 0, 13, 18, 0, 0, 0, 1, 1, 1]' : 0.126633}
{'[3, 0, 0, 0, 6, 5, 0, 0, 4, 0, 13, 18, 0, 0, 0, 1, 1, 1]' : 0.127587}
{'[3, 0, 0, 0, 6, 5, 0, 0, 4, 0, 13, 18, 0, 0, 0, 1, 1, 1]' : 0.126548}
{'[3, 0, 0, 0, 6, 5, 0, 0, 4, 0, 13, 18, 0, 0, 0, 1, 1, 1]' : 0.126531}
{'[3, 0, 0, 0, 6, 5, 0, 0, 4, 0, 13, 18, 0, 0, 0, 1, 1, 1]' : 0.126656}
{'[3, 0, 0, 0, 6, 5, 0, 0, 4, 0, 13, 18, 0, 0, 0, 1, 1, 1]' : 0.126524}
{'[3, 0, 0, 0, 6, 5, 0, 0, 4, 0, 13, 18, 0, 0, 0, 1, 1, 1]' : 0.126539}
{'[3, 0, 0, 0, 6, 5, 0, 0, 4, 0, 13, 18, 0, 0, 0, 1, 1, 1]' : 0.126547}
{'[3, 0, 0, 0, 6, 5, 0, 0, 4, 0, 13, 18, 0, 0, 0, 1, 1, 1]' : 0.126493}
{'[3, 0, 0, 0, 6, 5, 0, 0, 4, 0, 13, 18, 0, 0, 0, 1, 1, 1]' : 0.126563}
{'[3, 0, 0, 0, 6, 5, 0, 0, 4, 0, 13, 18, 0, 0, 0, 1, 1, 1]' : 0.126547}
{'[3, 0, 0, 0, 6, 5, 0, 0, 4, 0, 13, 18, 0, 0, 0, 1, 1, 1]' : 0.126883}
{'[3, 0, 0, 0, 6, 5, 0, 0, 4, 0, 13, 18, 0, 0, 0, 1, 1, 1]' : 0.126539}
{'[3, 0, 0, 0, 6, 5, 0, 0, 4, 0, 13, 18, 0, 0, 0, 1, 1, 1]' : 0.126556}
{'[3, 0, 0, 0, 6, 5, 0, 0, 4, 0, 13, 18, 0, 0, 0, 1, 1, 1]' : 0.126563}
{'[3, 0, 0, 0, 6, 5, 0, 0, 4, 0, 13, 18, 0, 0, 0, 1, 1, 1]' : 0.126524}
{'[3, 0, 0, 0, 6, 5, 0, 0, 4, 0, 13, 18, 0, 0, 0, 1, 1, 1]' : 0.12657}
{'[3, 0, 0, 0, 6, 5, 0, 0, 4, 0, 13, 18, 0, 0, 0, 1, 1, 1]' : 0.127524}
{'[3, 0, 0, 0, 6, 5, 0, 0, 4, 0, 13, 18, 0, 0, 0, 1, 1, 1]' : 0.126571}
{'[3, 0, 0, 0, 6, 5, 0, 0, 4, 0, 13, 18, 0, 0, 0, 1, 1, 1]' : 0.126523}
{'[3, 0, 0, 0, 6, 5, 0, 0, 4, 0, 13, 18, 0, 0, 0, 1, 1, 1]' : 0.126484}
{'[3, 0, 0, 0, 6, 5, 0, 0, 4, 0, 13, 18, 0, 0, 0, 1, 1, 1]' : 0.126532}
{'[3, 0, 0, 0, 6, 5, 0, 0, 4, 0, 13, 18, 0, 0, 0, 1, 1, 1]' : 0.126524}
{'[3, 0, 0, 0, 6, 5, 0, 0, 4, 0, 13, 18, 0, 0, 0, 1, 1, 1]' : 0.126703}

out:
 ["{'[3, 0, 0, 0, 6, 5, 0, 0, 4, 0, 13, 18, 0, 0, 0, 1, 1, 1]' : 0.126616}", "{'[3, 0, 0, 0, 6, 5, 0, 0, 4, 0, 13, 18, 0, 0, 0, 1, 1, 1]' : 0.12664}", "{'[3, 0, 0, 0, 6, 5, 0, 0, 4, 0, 13, 18, 0, 0, 0, 1, 1, 1]' : 0.126516}", "{'[3, 0, 0, 0, 6, 5, 0, 0, 4, 0, 13, 18, 0, 0, 0, 1, 1, 1]' : 0.126563}", "{'[3, 0, 0, 0, 6, 5, 0, 0, 4, 0, 13, 18, 0, 0, 0, 1, 1, 1]' : 0.126547}", "{'[3, 0, 0, 0, 6, 5, 0, 0, 4, 0, 13, 18, 0, 0, 0, 1, 1, 1]' : 0.126759}", "{'[3, 0, 0, 0, 6, 5, 0, 0, 4, 0, 13, 18, 0, 0, 0, 1, 1, 1]' : 0.126633}", "{'[3, 0, 0, 0, 6, 5, 0, 0, 4, 0, 13, 18, 0, 0, 0, 1, 1, 1]' : 0.127587}", "{'[3, 0, 0, 0, 6, 5, 0, 0, 4, 0, 13, 18, 0, 0, 0, 1, 1, 1]' : 0.126548}", "{'[3, 0, 0, 0, 6, 5, 0, 0, 4, 0, 13, 18, 0, 0, 0, 1, 1, 1]' : 0.126531}", "{'[3, 0, 0, 0, 6, 5, 0, 0, 4, 0, 13, 18, 0, 0, 0, 1, 1, 1]' : 0.126656}", "{'[3, 0, 0, 0, 6, 5, 0, 0, 4, 0, 13, 18, 0, 0, 0, 1, 1, 1]' : 0.126524}", "{'[3, 0, 0, 0, 6, 5, 0, 0, 4, 0, 13, 18, 0, 0, 0, 1, 1, 1]' : 0.126539}", "{'[3, 0, 0, 0, 6, 5, 0, 0, 4, 0, 13, 18, 0, 0, 0, 1, 1, 1]' : 0.126547}", "{'[3, 0, 0, 0, 6, 5, 0, 0, 4, 0, 13, 18, 0, 0, 0, 1, 1, 1]' : 0.126493}", "{'[3, 0, 0, 0, 6, 5, 0, 0, 4, 0, 13, 18, 0, 0, 0, 1, 1, 1]' : 0.126563}", "{'[3, 0, 0, 0, 6, 5, 0, 0, 4, 0, 13, 18, 0, 0, 0, 1, 1, 1]' : 0.126547}", "{'[3, 0, 0, 0, 6, 5, 0, 0, 4, 0, 13, 18, 0, 0, 0, 1, 1, 1]' : 0.126883}", "{'[3, 0, 0, 0, 6, 5, 0, 0, 4, 0, 13, 18, 0, 0, 0, 1, 1, 1]' : 0.126539}", "{'[3, 0, 0, 0, 6, 5, 0, 0, 4, 0, 13, 18, 0, 0, 0, 1, 1, 1]' : 0.126556}", "{'[3, 0, 0, 0, 6, 5, 0, 0, 4, 0, 13, 18, 0, 0, 0, 1, 1, 1]' : 0.126563}", "{'[3, 0, 0, 0, 6, 5, 0, 0, 4, 0, 13, 18, 0, 0, 0, 1, 1, 1]' : 0.126524}", "{'[3, 0, 0, 0, 6, 5, 0, 0, 4, 0, 13, 18, 0, 0, 0, 1, 1, 1]' : 0.12657}", "{'[3, 0, 0, 0, 6, 5, 0, 0, 4, 0, 13, 18, 0, 0, 0, 1, 1, 1]' : 0.127524}", "{'[3, 0, 0, 0, 6, 5, 0, 0, 4, 0, 13, 18, 0, 0, 0, 1, 1, 1]' : 0.126571}", "{'[3, 0, 0, 0, 6, 5, 0, 0, 4, 0, 13, 18, 0, 0, 0, 1, 1, 1]' : 0.126523}", "{'[3, 0, 0, 0, 6, 5, 0, 0, 4, 0, 13, 18, 0, 0, 0, 1, 1, 1]' : 0.126484}", "{'[3, 0, 0, 0, 6, 5, 0, 0, 4, 0, 13, 18, 0, 0, 0, 1, 1, 1]' : 0.126532}", "{'[3, 0, 0, 0, 6, 5, 0, 0, 4, 0, 13, 18, 0, 0, 0, 1, 1, 1]' : 0.126524}", "{'[3, 0, 0, 0, 6, 5, 0, 0, 4, 0, 13, 18, 0, 0, 0, 1, 1, 1]' : 0.126703}"]
returning from 'run': {'[3, 0, 0, 0, 6, 5, 0, 0, 4, 0, 13, 18, 0, 0, 0, 1, 1, 1]': ([0.126616, 0.12664, 0.126516, 0.126563, 0.126547, 0.126759, 0.126633, 0.127587, 0.126548, 0.126531, 0.126656, 0.126524, 0.126539, 0.126547, 0.126493, 0.126563, 0.126547, 0.126883, 0.126539, 0.126556, 0.126563, 0.126524, 0.12657, 0.127524, 0.126571, 0.126523, 0.126484, 0.126532, 0.126524, 0.126703], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.126616, 0.12664, 0.126516, 0.126563, 0.126547, 0.126759, 0.126633, 0.127587, 0.126548, 0.126531, 0.126656, 0.126524, 0.126539, 0.126547, 0.126493, 0.126563, 0.126547, 0.126883, 0.126539, 0.126556, 0.126563, 0.126524, 0.12657, 0.127524, 0.126571, 0.126523, 0.126484, 0.126532, 0.126524, 0.126703], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[3, 0, 0, 0, 6, 5, 0, 0, 4, 0, 13, 18, 0, 0, 0, 1, 1, 1]': ([0.126616, 0.12664, 0.126516, 0.126563, 0.126547, 0.126759, 0.126633, 0.127587, 0.126548, 0.126531, 0.126656, 0.126524, 0.126539, 0.126547, 0.126493, 0.126563, 0.126547, 0.126883, 0.126539, 0.126556, 0.126563, 0.126524, 0.12657, 0.127524, 0.126571, 0.126523, 0.126484, 0.126532, 0.126524, 0.126703], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [6, 3, 5, 0, 6, 5, 0, 0, 25, 0, 21, 18, 0, 0, 0, 1, 1, 0]
Fixed Factors: {'ACOPY_x': 0, 'ACOPY_y': 0, 'U_K': 18, 'T2_K': 5, 'T2_J': 6, 'T2_I': 0, 'VEC1': 1, 'SCR': 1}
Testing candidate 2: [6, 3, 5, 0, 6, 5, 0, 0, 25, 0, 21, 18, 0, 0, 0, 1, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		261
        Multiplications: 	86
        Divisions: 		0
        Logical: 		0
        Reads: 			595
        Writes: 		140
        Comparisons:		12
        Gotos: 			0
        
digraph CFG {
	31491635 [label="31491635  register int cbv_2, cbv_3;...",shape=box];
	31510854 [label="31510854  scv_21=scv_21+A[i*ny+j]*x[j];...",shape=box];
	31510854 -> _JOIN_31510855;
	ForLoop31511510 [label="ForLoop31511510  for (ii=0; ii<=nx-1; ii=ii+512) {...",shape=box];
	ForLoop31511510 -> ForLoop31511509;
	ForLoop31511510 -> _JOIN_31511510;
	ForLoop31511436 [label="ForLoop31511436  for (k=kk; k<=min(ny-1,kk+255)-18; k=k+19) {...",shape=box];
	ForLoop31511436 -> 31514601;
	ForLoop31511436 -> _JOIN_31511436;
	31491359 [label="31491359  y[i]=0.0;...",shape=box];
	31491359 -> _JOIN_31491360;
	31518200 [label="31518200  tmp[i]=scv_21;...",shape=box];
	31518200 -> _JOIN_31511509;
	_JOIN_31510787 [label="_JOIN_31510787None...",shape=box];
	_JOIN_31510787 -> ForLoop31510855;
	31514601 [label="31514601  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 31490632;
	31518188 [label="31518188  double scv_21;...",shape=box];
	_JOIN_31510858 [label="_JOIN_31510858None...",shape=box];
	_JOIN_31510858 -> ForLoop31511507;
	31510220 [label="31510220  int j;...",shape=box];
	31510220 -> ForLoop31510787;
	_JOIN_31511510 [label="_JOIN_31511510None...",shape=box];
	_JOIN_31510855 [label="_JOIN_31510855None...",shape=box];
	_JOIN_31510855 -> _JOIN_31510857;
	_JOIN_31510857 [label="_JOIN_31510857None...",shape=box];
	_JOIN_31510857 -> _JOIN_31510858;
	ForLoop31491360 [label="ForLoop31491360  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop31491360 -> 31491359;
	ForLoop31491360 -> _JOIN_31491360;
	31510260 [label="31510260  scv_21=scv_21+A[i*ny+j]*x[j];...",shape=box];
	31510150 [label="31510150  double x_copy;...",shape=box];
	ForLoop31511509 [label="ForLoop31511509  for (i=ii; i<=min(nx-1,ii+511); i=i+1) {...",shape=box];
	ForLoop31511509 -> 31518188;
	ForLoop31511509 -> _JOIN_31511509;
	_JOIN_31491291 [label="_JOIN_31491291None...",shape=box];
	_JOIN_31491291 -> 31491635;
	_JOIN_31511504 [label="_JOIN_31511504None...",shape=box];
	_JOIN_31511504 -> _JOIN_31511506;
	_JOIN_31511509 [label="_JOIN_31511509None...",shape=box];
	_JOIN_31511509 -> _JOIN_31511510;
	ForLoop31511504 [label="ForLoop31511504  for (k=(min(ny-1,kk+255))-(((min(ny-1,kk+255))-(kk)+1)%19)+1; k<=min(ny-1,kk+255); k=k+1) {...",shape=box];
	ForLoop31511504 -> 31515067;
	ForLoop31511504 -> _JOIN_31511504;
	ForLoop31511506 [label="ForLoop31511506  for (kk=kkk; kk<=min(ny-1,kkk+768); kk=kk+256) {...",shape=box];
	ForLoop31511506 -> 31510890;
	ForLoop31511506 -> _JOIN_31511506;
	ForLoop31511507 [label="ForLoop31511507  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop31511507 -> ForLoop31511506;
	ForLoop31511507 -> _JOIN_31511507;
	31490632 [label="31490632  int i;...",shape=box];
	_JOIN_31511506 [label="_JOIN_31511506None...",shape=box];
	_JOIN_31511506 -> _JOIN_31511507;
	_JOIN_31511507 [label="_JOIN_31511507None...",shape=box];
	_JOIN_31511507 -> 31518200;
	_JOIN_31491360 [label="_JOIN_31491360None...",shape=box];
	_JOIN_31491360 -> 31510150;
	31510890 [label="31510890  int k;...",shape=box];
	31510890 -> ForLoop31511436;
	31515067 [label="31515067  double scv_20;...",shape=box];
	ForLoop31510787 [label="ForLoop31510787  for (j=jj; j<=min(ny-1,jj+63)-21; j=j+22) {...",shape=box];
	ForLoop31510787 -> 31510260;
	ForLoop31510787 -> _JOIN_31510787;
	31491064 [label="31491064  y[i]=0.0;...",shape=box];
	ForLoop31491291 [label="ForLoop31491291  for (i=0; i<=cbv_1; i=i+26) {...",shape=box];
	ForLoop31491291 -> 31491064;
	ForLoop31491291 -> _JOIN_31491291;
	ForLoop31510855 [label="ForLoop31510855  for (j=(min(ny-1,jj+63))-(((min(ny-1,jj+63))-(jj)+1)%22)+1; j<=min(ny-1,jj+63); j=j+1) {...",shape=box];
	ForLoop31510855 -> 31510854;
	ForLoop31510855 -> _JOIN_31510855;
	ForLoop31510857 [label="ForLoop31510857  for (jj=jjj; jj<=min(ny-1,jjj+1984); jj=jj+64) {...",shape=box];
	ForLoop31510857 -> 31510220;
	ForLoop31510857 -> _JOIN_3151085expected=9369846271501.798828
actual=9369846271501.798828
7;
	ForLoop31510858 [label="ForLoop31510858  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop31510858 -> ForLoop31510857;
	ForLoop31510858 -> _JOIN_31510858;
	_JOIN_31511436 [label="_JOIN_31511436None...",shape=box];
	_JOIN_31511436 -> ForLoop31511504;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest127.exe __orio_perftest127.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest127.exe  
{'[6, 3, 5, 0, 6, 5, 0, 0, 25, 0, 21, 18, 0, 0, 0, 1, 1, 0]' : 0.138886}
{'[6, 3, 5, 0, 6, 5, 0, 0, 25, 0, 21, 18, 0, 0, 0, 1, 1, 0]' : 0.138931}
{'[6, 3, 5, 0, 6, 5, 0, 0, 25, 0, 21, 18, 0, 0, 0, 1, 1, 0]' : 0.138948}
{'[6, 3, 5, 0, 6, 5, 0, 0, 25, 0, 21, 18, 0, 0, 0, 1, 1, 0]' : 0.140027}
{'[6, 3, 5, 0, 6, 5, 0, 0, 25, 0, 21, 18, 0, 0, 0, 1, 1, 0]' : 0.138988}
{'[6, 3, 5, 0, 6, 5, 0, 0, 25, 0, 21, 18, 0, 0, 0, 1, 1, 0]' : 0.140158}
{'[6, 3, 5, 0, 6, 5, 0, 0, 25, 0, 21, 18, 0, 0, 0, 1, 1, 0]' : 0.138946}
{'[6, 3, 5, 0, 6, 5, 0, 0, 25, 0, 21, 18, 0, 0, 0, 1, 1, 0]' : 0.13894}
{'[6, 3, 5, 0, 6, 5, 0, 0, 25, 0, 21, 18, 0, 0, 0, 1, 1, 0]' : 0.138945}
{'[6, 3, 5, 0, 6, 5, 0, 0, 25, 0, 21, 18, 0, 0, 0, 1, 1, 0]' : 0.138911}
{'[6, 3, 5, 0, 6, 5, 0, 0, 25, 0, 21, 18, 0, 0, 0, 1, 1, 0]' : 0.139061}
{'[6, 3, 5, 0, 6, 5, 0, 0, 25, 0, 21, 18, 0, 0, 0, 1, 1, 0]' : 0.138997}
{'[6, 3, 5, 0, 6, 5, 0, 0, 25, 0, 21, 18, 0, 0, 0, 1, 1, 0]' : 0.139016}
{'[6, 3, 5, 0, 6, 5, 0, 0, 25, 0, 21, 18, 0, 0, 0, 1, 1, 0]' : 0.13894}
{'[6, 3, 5, 0, 6, 5, 0, 0, 25, 0, 21, 18, 0, 0, 0, 1, 1, 0]' : 0.13895}
{'[6, 3, 5, 0, 6, 5, 0, 0, 25, 0, 21, 18, 0, 0, 0, 1, 1, 0]' : 0.138961}
{'[6, 3, 5, 0, 6, 5, 0, 0, 25, 0, 21, 18, 0, 0, 0, 1, 1, 0]' : 0.139319}
{'[6, 3, 5, 0, 6, 5, 0, 0, 25, 0, 21, 18, 0, 0, 0, 1, 1, 0]' : 0.140007}
{'[6, 3, 5, 0, 6, 5, 0, 0, 25, 0, 21, 18, 0, 0, 0, 1, 1, 0]' : 0.138976}
{'[6, 3, 5, 0, 6, 5, 0, 0, 25, 0, 21, 18, 0, 0, 0, 1, 1, 0]' : 0.138934}
{'[6, 3, 5, 0, 6, 5, 0, 0, 25, 0, 21, 18, 0, 0, 0, 1, 1, 0]' : 0.13924}
{'[6, 3, 5, 0, 6, 5, 0, 0, 25, 0, 21, 18, 0, 0, 0, 1, 1, 0]' : 0.138978}
{'[6, 3, 5, 0, 6, 5, 0, 0, 25, 0, 21, 18, 0, 0, 0, 1, 1, 0]' : 0.138933}
{'[6, 3, 5, 0, 6, 5, 0, 0, 25, 0, 21, 18, 0, 0, 0, 1, 1, 0]' : 0.138914}
{'[6, 3, 5, 0, 6, 5, 0, 0, 25, 0, 21, 18, 0, 0, 0, 1, 1, 0]' : 0.13903}
{'[6, 3, 5, 0, 6, 5, 0, 0, 25, 0, 21, 18, 0, 0, 0, 1, 1, 0]' : 0.138985}
{'[6, 3, 5, 0, 6, 5, 0, 0, 25, 0, 21, 18, 0, 0, 0, 1, 1, 0]' : 0.138986}
{'[6, 3, 5, 0, 6, 5, 0, 0, 25, 0, 21, 18, 0, 0, 0, 1, 1, 0]' : 0.139369}
{'[6, 3, 5, 0, 6, 5, 0, 0, 25, 0, 21, 18, 0, 0, 0, 1, 1, 0]' : 0.138983}
{'[6, 3, 5, 0, 6, 5, 0, 0, 25, 0, 21, 18, 0, 0, 0, 1, 1, 0]' : 0.139022}

out:
 ["{'[6, 3, 5, 0, 6, 5, 0, 0, 25, 0, 21, 18, 0, 0, 0, 1, 1, 0]' : 0.138886}", "{'[6, 3, 5, 0, 6, 5, 0, 0, 25, 0, 21, 18, 0, 0, 0, 1, 1, 0]' : 0.138931}", "{'[6, 3, 5, 0, 6, 5, 0, 0, 25, 0, 21, 18, 0, 0, 0, 1, 1, 0]' : 0.138948}", "{'[6, 3, 5, 0, 6, 5, 0, 0, 25, 0, 21, 18, 0, 0, 0, 1, 1, 0]' : 0.140027}", "{'[6, 3, 5, 0, 6, 5, 0, 0, 25, 0, 21, 18, 0, 0, 0, 1, 1, 0]' : 0.138988}", "{'[6, 3, 5, 0, 6, 5, 0, 0, 25, 0, 21, 18, 0, 0, 0, 1, 1, 0]' : 0.140158}", "{'[6, 3, 5, 0, 6, 5, 0, 0, 25, 0, 21, 18, 0, 0, 0, 1, 1, 0]' : 0.138946}", "{'[6, 3, 5, 0, 6, 5, 0, 0, 25, 0, 21, 18, 0, 0, 0, 1, 1, 0]' : 0.13894}", "{'[6, 3, 5, 0, 6, 5, 0, 0, 25, 0, 21, 18, 0, 0, 0, 1, 1, 0]' : 0.138945}", "{'[6, 3, 5, 0, 6, 5, 0, 0, 25, 0, 21, 18, 0, 0, 0, 1, 1, 0]' : 0.138911}", "{'[6, 3, 5, 0, 6, 5, 0, 0, 25, 0, 21, 18, 0, 0, 0, 1, 1, 0]' : 0.139061}", "{'[6, 3, 5, 0, 6, 5, 0, 0, 25, 0, 21, 18, 0, 0, 0, 1, 1, 0]' : 0.138997}", "{'[6, 3, 5, 0, 6, 5, 0, 0, 25, 0, 21, 18, 0, 0, 0, 1, 1, 0]' : 0.139016}", "{'[6, 3, 5, 0, 6, 5, 0, 0, 25, 0, 21, 18, 0, 0, 0, 1, 1, 0]' : 0.13894}", "{'[6, 3, 5, 0, 6, 5, 0, 0, 25, 0, 21, 18, 0, 0, 0, 1, 1, 0]' : 0.13895}", "{'[6, 3, 5, 0, 6, 5, 0, 0, 25, 0, 21, 18, 0, 0, 0, 1, 1, 0]' : 0.138961}", "{'[6, 3, 5, 0, 6, 5, 0, 0, 25, 0, 21, 18, 0, 0, 0, 1, 1, 0]' : 0.139319}", "{'[6, 3, 5, 0, 6, 5, 0, 0, 25, 0, 21, 18, 0, 0, 0, 1, 1, 0]' : 0.140007}", "{'[6, 3, 5, 0, 6, 5, 0, 0, 25, 0, 21, 18, 0, 0, 0, 1, 1, 0]' : 0.138976}", "{'[6, 3, 5, 0, 6, 5, 0, 0, 25, 0, 21, 18, 0, 0, 0, 1, 1, 0]' : 0.138934}", "{'[6, 3, 5, 0, 6, 5, 0, 0, 25, 0, 21, 18, 0, 0, 0, 1, 1, 0]' : 0.13924}", "{'[6, 3, 5, 0, 6, 5, 0, 0, 25, 0, 21, 18, 0, 0, 0, 1, 1, 0]' : 0.138978}", "{'[6, 3, 5, 0, 6, 5, 0, 0, 25, 0, 21, 18, 0, 0, 0, 1, 1, 0]' : 0.138933}", "{'[6, 3, 5, 0, 6, 5, 0, 0, 25, 0, 21, 18, 0, 0, 0, 1, 1, 0]' : 0.138914}", "{'[6, 3, 5, 0, 6, 5, 0, 0, 25, 0, 21, 18, 0, 0, 0, 1, 1, 0]' : 0.13903}", "{'[6, 3, 5, 0, 6, 5, 0, 0, 25, 0, 21, 18, 0, 0, 0, 1, 1, 0]' : 0.138985}", "{'[6, 3, 5, 0, 6, 5, 0, 0, 25, 0, 21, 18, 0, 0, 0, 1, 1, 0]' : 0.138986}", "{'[6, 3, 5, 0, 6, 5, 0, 0, 25, 0, 21, 18, 0, 0, 0, 1, 1, 0]' : 0.139369}", "{'[6, 3, 5, 0, 6, 5, 0, 0, 25, 0, 21, 18, 0, 0, 0, 1, 1, 0]' : 0.138983}", "{'[6, 3, 5, 0, 6, 5, 0, 0, 25, 0, 21, 18, 0, 0, 0, 1, 1, 0]' : 0.139022}"]
returning from 'run': {'[6, 3, 5, 0, 6, 5, 0, 0, 25, 0, 21, 18, 0, 0, 0, 1, 1, 0]': ([0.138886, 0.138931, 0.138948, 0.140027, 0.138988, 0.140158, 0.138946, 0.13894, 0.138945, 0.138911, 0.139061, 0.138997, 0.139016, 0.13894, 0.13895, 0.138961, 0.139319, 0.140007, 0.138976, 0.138934, 0.13924, 0.138978, 0.138933, 0.138914, 0.13903, 0.138985, 0.138986, 0.139369, 0.138983, 0.139022], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.138886, 0.138931, 0.138948, 0.140027, 0.138988, 0.140158, 0.138946, 0.13894, 0.138945, 0.138911, 0.139061, 0.138997, 0.139016, 0.13894, 0.13895, 0.138961, 0.139319, 0.140007, 0.138976, 0.138934, 0.13924, 0.138978, 0.138933, 0.138914, 0.13903, 0.138985, 0.138986, 0.139369, 0.138983, 0.139022], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[6, 3, 5, 0, 6, 5, 0, 0, 25, 0, 21, 18, 0, 0, 0, 1, 1, 0]': ([0.138886, 0.138931, 0.138948, 0.140027, 0.138988, 0.140158, 0.138946, 0.13894, 0.138945, 0.138911, 0.139061, 0.138997, 0.139016, 0.13894, 0.13895, 0.138961, 0.139319, 0.140007, 0.138976, 0.138934, 0.13924, 0.138978, 0.138933, 0.138914, 0.13903, 0.138985, 0.138986, 0.139369, 0.138983, 0.139022], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [5, 5, 4, 0, 6, 5, 0, 0, 29, 12, 0, 18, 1, 0, 0, 1, 1, 1]
Fixed Factors: {'ACOPY_x': 0, 'ACOPY_y': 0, 'U_K': 18, 'T2_K': 5, 'T2_J': 6, 'T2_I': 0, 'VEC1': 1, 'SCR': 1}
Testing candidate 3: [5, 5, 4, 0, 6, 5, 0, 0, 29, 12, 0, 18, 1, 0, 0, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	27
        Max loop nest depth: 	5
        Additions: 		2010
        Multiplications: 	924
        Divisions: 		0
        Logical: 		0
        Reads: 			4029
        Writes: 		743
        Comparisons:		27
        Gotos: 			0
        
digraph CFG {
	_JOIN_31625689 [label="_JOIN_31625689None...",shape=box];
	_JOIN_31625689 -> _JOIN_31625691;
	ForLoop31634324 [label="ForLoop31634324  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop31634324 -> ForLoop31634322;
	ForLoop31634324 -> _JOIN_31634324;
	31520692 [label="31520692  y[i]=0.0;...",shape=box];
	31520692 -> _JOIN_31520693;
	31625725 [label="31625725  int k;...",shape=box];
	ForLoop31634320 [label="ForLoop31634320  for (k=cbv_7; k<=cbv_8; k=k+1) {...",shape=box];
	ForLoop31634320 -> 31670818;
	ForLoop31634320 -> _JOIN_31634320;
	ForLoop31635105 [label="ForLoop31635105  for (ii=0; ii<=nx-1; ii=ii+256) {...",shape=box];
	ForLoop31635105 -> ForLoop31625135;
	ForLoop31635105 -> _JOIN_31635105;
	ForLoop31635102 [label="ForLoop31635102  for (i=(min(nx-1,ii+255))-(((min(nx-1,ii+255))-(it)+1)%13)+1; i<=min(nx-1,ii+255); i=i+1) {...",shape=box];
	ForLoop31635102 -> 31695519;
	ForLoop31635102 -> _JOIN_31635102;
	_JOIN_31635102 [label="_JOIN_31635102None...",shape=box];
	_JOIN_31635102 -> _JOIN_31635105;
	ForLoop31635099 [label="ForLoop31635099  for (kk=kkk; kk<=min(ny-1,kkk+896); kk=kk+128) {...",shape=box];
	ForLoop31635099 -> 31634483;
	ForLoop31635099 -> _JOIN_31635099;
	ForLoop31634326 [label="ForLoop31634326  for (i=it; i<=min(nx-1,ii+255)-12; i=i+13) {...",shape=box];
	ForLoop31634326 -> 31690976;
	ForLoop31634326 -> _JOIN_31634326;
	ForLoop31625689 [label="ForLoop31625689  for (j=jj; j<=cbv_5; j=j+1) {...",shape=box];
	ForLoop31625689 -> 31657479;
	ForLoop31625689 -> _JOIN_31625689;
	_JOIN_31634324 [label="_JOIN_31634324None...",shape=box];
	_JOIN_31634324 -> 31690994;
	ForLoop31625135 [label="ForLoop31625135  for (it=ii; it<=min(nx-1,ii+255)-7; it=it+8) {...",shape=box];
	ForLoop31625135 -> 31656570;
	ForLoop31625135 -> _JOIN_31625135;
	31715312 [label="31715312  register int cbv_9;...",shape=box];
	ForLoop31625133 [label="ForLoop31625133  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop31625133 -> ForLoop31625132;
	ForLoop31625133 -> _JOIN_31625133;
	ForLoop31625132 [label="ForLoop31625132  for (kk=kkk; kk<=min(ny-1,kkk+896); kk=kk+128) {...",shape=box];
	ForLoop31625132 -> 31619867;
	ForLoop31625132 -> _JOIN_31625132;
	31656582 [label="31656582  tmp[it]=scv_22;...",shape=box];
	ForLoop31625130 [label="ForLoop31625130  for (k=cbv_3; k<=cbv_4; k=k+1) {...",shape=box];
	ForLoop31625130 -> 31643841;
	ForLoop31625130 -> _JOIN_31625130;
	31695531 [label="31695531  tmp[i]=scv_84;...",shape=box];
	31695531 -> _JOIN_31635102;
	31692966 [label="31692966  double scv_83;...",shape=box];
	_JOIN_31635100 [label="_JOIN_31635100None...",shape=box];
	_JOIN_31635100 -> 31695531;
	ForLoop31624879 [label="ForLoop31624879  for (k=kk; k<=cbv_2; k=k+19) {...",shape=box];
	ForLoop31624879 -> 31642856;
	ForLoop31624879 -> _JOIN_31624879;
	ForLoop31520624 [label="ForLoop31520624  for (i=0; i<=cbv_1; i=i+30) {...",shape=box];
	ForLoop31520624 -> 31520361;
	ForLoop31520624 -> _JOIN_31520624;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 31519869;
	ForLoop31619835 [label="ForLoop31619835  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop31619835 -> ForLoop31619834;
	ForLoop31619835 -> _JOIN_31619835;
	ForLoop31619834 [label="ForLoop31619834  for (jj=jjj; jj<=min(ny-1,jjj+1792); jj=jj+256) {...",shape=box];
	ForLoop31619834 -> 31706281;
	ForLoop31619834 -> _JOIN_31619834;
	_JOIN_31634450 [label="_JOIN_31634450None...",shape=box];
	_JOIN_31634450 -> _JOIN_31634451;
	_JOIN_31634451 [label="_JOIN_31634451None...",shape=box];
	_JOIN_31634451 -> ForLoop31635100;
	_JOIN_31520624 [label="_JOIN_31520624None...",shape=box];
	_JOIN_31520624 -> 31521004;
	ForLoop31619833 [label="ForLoop31619833  for (j=jj; j<=cbv_1; j=j+1) {...",shape=box];
	ForLoop31619833 -> 31635467;
	ForLoop31619833 -> _JOIN_31619833;
	_JOIN_31635099 [label="_JOIN_31635099None...",shape=box];
	_JOIN_31635099 -> _JOIN_31635100;
	31692500 [label="31692500  double scv_64, scv_65, scv_66, scv_67, scv_68, scv_69, scv_70, scv_71;...",shape=box];
	_JOIN_31520693 [label="_JOIN_31520693None...",shape=box];
	_JOIN_31520693 -> 31619519;
	ForLoop31634449 [label="ForLoop31634449  for (j=jj; j<=cbv_9; j=j+1) {...",shape=box];
	ForLoop31634449 -> 31634448;
	ForLoop31634449 -> _JOIN_31634449;
	31670818 [label="31670818  double scv_50;...",shape=box];
	31625136 [label="31625136  int i;...",shape=box];
	31625136 -> ForLoop31634326;
	_JOIN_31625135 [label="_JOIN_31625135None...",shape=box];
	_JOIN_31625135 -> 31625136;
	31709672 [label="31709672  register int cbv_3, cbv_4;...",shape=box];
	_JOIN_31625133 [label="_JOIN_31625133None...",shape=box];
	_JOIN_31625133 -> 31656582;
	_JOIN_31625132 [label="_JOIN_31625132None...",shape=box];
	_JOIN_31625132 -> _JOIN_31625133;
	31669463 [label="31669463  double scv_31, scv_32, scv_33, scv_34, scv_35, scv_36, scv_37, scv_38;...",shape=box];
	_JOIN_31625130 [label="_JOIN_31625130None...",shape=box];
	_JOIN_31625130 -> _JOIN_31625132;
	_JOIN_31624879 [label="_JOIN_31624879None...",shape=box];
	_JOIN_31624879 -> 31709672;
	31656570 [label="31656570  double scv_22, scv_23, scv_24, scv_25, scv_26, scv_27, scv_28, scv_29;...",shape=box];
	31520361 [label="31520361  y[i]=0.0;...",shape=box];
	ForLoop31635097 [label="ForLoop31635097  for (k=cbv_11; k<=cbv_12; k=k+1) {...",shape=box];
	ForLoop31635097 -> 31692966;
	ForLoop31635097 -> _JOIN_31635097;
	_JOIN_31635097 [label="_JOIN_31635097None...",shape=box];
	_JOIN_31635097 -> _JOIN_31635099;
	_JOIN_31619835 [label="_JOIN_31619835None...",shape=box];
	_JOIN_31619835 -> ForLoop31625133;
	ForLoop31635029 [label="ForLoop31635029  for (k=kk; k<=cbv_10; k=k+19) {...",shape=box];
	ForLoop31635029 -> 31692500;
	ForLoop31635029 -> _JOIN_31635029;
	31695519 [label="31695519  double scv_84;...",shape=box];
	31521004 [label="31521004  register int cbv_2, cbv_3;...",shape=box];
	ForLoop31520693 [label="ForLoop31520693  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop31520693 -> 31520692;
	ForLoop31520693 -> _JOIN_31520693;
	ForLoop31635100 [label="ForLoop31635100  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop31635100 -> ForLoop31635099;
	ForLoop31635100 -> _JOIN_31635100;
	_JOIN_31625693 [label="_JOIN_31625693None...",shape=box];
	_JOIN_31625693 -> ForLoop31634324;
	31657479 [label="31657479  double scv_30;...",shape=box];
	_JOIN_31625691 [label="_JOIN_31625691None...",shape=box];
	_JOIN_31625691 -> _JOIN_31625693;
	_JOIN_31634326 [label="_JOIN_31634326None...",shape=box];
	_JOIN_31634326 -> ForLoop31635102;
	_JOIN_31633939 [label="_JOIN_31633939None...",shape=box];
	_JOIN_31633939 -> 31715232;
	31643841 [label="31643841  double scv_21;...",shape=box];
	31690976 [label="31690976  double scv_51, scv_52, scv_53, scv_54, scv_55, scv_56, scv_57, scv_58;...",shape=box];
	_JOIN_31619834 [label="_JOIN_31619834None...",shape=box];
	_JOIN_31619834 -> _JOIN_31619835;
	31690994 [label="31690994  tmp[(i+12)]=scv_51;...",shape=box];
	ForLoop31625693 [label="ForLoop31625693  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop31625693 -> ForLoop31625691;
	ForLoop31625693 -> _JOIN_31625693;
	ForLoop31625691 [label="ForLoop31625691  for (jj=jjj; jj<=min(ny-1,jjj+1792); jj=jj+256) {...",shape=box];
	ForLoop31625691 -> 31709961;
	ForLoop31625691 -> _JOIN_31625691;
	31706281 [label="31706281  register int cbv_1;...",shape=box];
	ForLoop31634322 [label="ForLoop31634322  for (kk=kkk; kk<=min(ny-1,kkk+896); kk=kk+128) {...",shape=box];
	ForLoop31634322 -> 31625725;
	ForLoop31634322 -> _JOIN_31634322;
	_JOIN_31634320 [label="_JOIN_31634320None...",shape=box];
	_JOIN_31634320 -> _JOIN_31634322;
	31619867 [label="31619867  int k;...",shape=box];
	_JOIN_31634322 [label="_JOIN_31634322None...",shape=box];
	_JOIN_31634322 -> _JOIN_31634324;
	31642856 [label="31642856  double scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8, scv_9;...",shape=box];
	ForLoop31634450 [label="ForLoop31634450  for (jj=jjj; jj<=min(ny-1,jjj+1792); jj=jj+256) {...",shape=box];
	ForLoop31634450 -> 31715312;
	ForLoop31634450 -> _JOIN_31634450;
	ForLoop31634451 [label="ForLoop31634451  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop31634451 -> ForLoop31634450;
	ForLoop31634451 -> _JOIN_31634451;
	_JOIN_31619833 [label="_JOIN_31619833None...",shape=box];
	_JOIN_31619833 -> _JOIN_31619834;
	31716071 [label="31716071  register int cbv_11, cbv_12;...",shape=box];
	_JOIN_31634449 [label="_JOIN_31634449None...",shape=box];
	_JOIN_31634449 -> _JOIN_31634450;
	_JOIN_31635105 [label="_JOIN_31635105None...",shape=box];
	31635467 [label="31635467  double scv_1;...",shape=box];
	31634483 [label="31634483  int k;...",shape=box];
	31619519 [label="31619519  double x_copy;...",shape=box];
	31709961 [label="31709961  register int cbv_5;...",shape=box];
	31519869 [label="31519869  int i;...",shape=box];
	ForLoop31633939 [label="ForLoop31633939  for (k=kk; k<=cbv_6; k=k+19) {...",shape=box];
	ForLoop31633939 -> 31669463;
	ForLoop31633939 -> _JOIN_31633939;
	31715232 [label="31715232  register int cbv_7, cbv_8;...",shape=box];
	31634448 [label="31634448  scv_84=scv_84+A[i*ny+j]*x[j];...",shape=box];
	31634448 -> _JOIN_31634449;
	_JOIN_31635029 [label="_JOIN_31635029None...",shape=box];
	_JOIN_31635029 -> 31716071;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest128.exe __orio_perftest128.c timer_cpu.o -lm
 running teexpected=9369846271501.798828
actual=9369846271501.798828
st:
	 ./__orio_perftest128.exe  
{'[5, 5, 4, 0, 6, 5, 0, 0, 29, 12, 0, 18, 1, 0, 0, 1, 1, 1]' : 0.0820129}
{'[5, 5, 4, 0, 6, 5, 0, 0, 29, 12, 0, 18, 1, 0, 0, 1, 1, 1]' : 0.08167}
{'[5, 5, 4, 0, 6, 5, 0, 0, 29, 12, 0, 18, 1, 0, 0, 1, 1, 1]' : 0.081706}
{'[5, 5, 4, 0, 6, 5, 0, 0, 29, 12, 0, 18, 1, 0, 0, 1, 1, 1]' : 0.0818889}
{'[5, 5, 4, 0, 6, 5, 0, 0, 29, 12, 0, 18, 1, 0, 0, 1, 1, 1]' : 0.0816569}
{'[5, 5, 4, 0, 6, 5, 0, 0, 29, 12, 0, 18, 1, 0, 0, 1, 1, 1]' : 0.0827088}
{'[5, 5, 4, 0, 6, 5, 0, 0, 29, 12, 0, 18, 1, 0, 0, 1, 1, 1]' : 0.0816031}
{'[5, 5, 4, 0, 6, 5, 0, 0, 29, 12, 0, 18, 1, 0, 0, 1, 1, 1]' : 0.0816319}
{'[5, 5, 4, 0, 6, 5, 0, 0, 29, 12, 0, 18, 1, 0, 0, 1, 1, 1]' : 0.081677}
{'[5, 5, 4, 0, 6, 5, 0, 0, 29, 12, 0, 18, 1, 0, 0, 1, 1, 1]' : 0.081656}
{'[5, 5, 4, 0, 6, 5, 0, 0, 29, 12, 0, 18, 1, 0, 0, 1, 1, 1]' : 0.0816751}
{'[5, 5, 4, 0, 6, 5, 0, 0, 29, 12, 0, 18, 1, 0, 0, 1, 1, 1]' : 0.081727}
{'[5, 5, 4, 0, 6, 5, 0, 0, 29, 12, 0, 18, 1, 0, 0, 1, 1, 1]' : 0.081641}
{'[5, 5, 4, 0, 6, 5, 0, 0, 29, 12, 0, 18, 1, 0, 0, 1, 1, 1]' : 0.0816031}
{'[5, 5, 4, 0, 6, 5, 0, 0, 29, 12, 0, 18, 1, 0, 0, 1, 1, 1]' : 0.0816319}
{'[5, 5, 4, 0, 6, 5, 0, 0, 29, 12, 0, 18, 1, 0, 0, 1, 1, 1]' : 0.0816002}
{'[5, 5, 4, 0, 6, 5, 0, 0, 29, 12, 0, 18, 1, 0, 0, 1, 1, 1]' : 0.0816579}
{'[5, 5, 4, 0, 6, 5, 0, 0, 29, 12, 0, 18, 1, 0, 0, 1, 1, 1]' : 0.0818732}
{'[5, 5, 4, 0, 6, 5, 0, 0, 29, 12, 0, 18, 1, 0, 0, 1, 1, 1]' : 0.081636}
{'[5, 5, 4, 0, 6, 5, 0, 0, 29, 12, 0, 18, 1, 0, 0, 1, 1, 1]' : 0.0816281}
{'[5, 5, 4, 0, 6, 5, 0, 0, 29, 12, 0, 18, 1, 0, 0, 1, 1, 1]' : 0.0816519}
{'[5, 5, 4, 0, 6, 5, 0, 0, 29, 12, 0, 18, 1, 0, 0, 1, 1, 1]' : 0.081692}
{'[5, 5, 4, 0, 6, 5, 0, 0, 29, 12, 0, 18, 1, 0, 0, 1, 1, 1]' : 0.0819161}
{'[5, 5, 4, 0, 6, 5, 0, 0, 29, 12, 0, 18, 1, 0, 0, 1, 1, 1]' : 0.081619}
{'[5, 5, 4, 0, 6, 5, 0, 0, 29, 12, 0, 18, 1, 0, 0, 1, 1, 1]' : 0.081672}
{'[5, 5, 4, 0, 6, 5, 0, 0, 29, 12, 0, 18, 1, 0, 0, 1, 1, 1]' : 0.0816431}
{'[5, 5, 4, 0, 6, 5, 0, 0, 29, 12, 0, 18, 1, 0, 0, 1, 1, 1]' : 0.0816441}
{'[5, 5, 4, 0, 6, 5, 0, 0, 29, 12, 0, 18, 1, 0, 0, 1, 1, 1]' : 0.0816209}
{'[5, 5, 4, 0, 6, 5, 0, 0, 29, 12, 0, 18, 1, 0, 0, 1, 1, 1]' : 0.081825}
{'[5, 5, 4, 0, 6, 5, 0, 0, 29, 12, 0, 18, 1, 0, 0, 1, 1, 1]' : 0.0816531}

out:
 ["{'[5, 5, 4, 0, 6, 5, 0, 0, 29, 12, 0, 18, 1, 0, 0, 1, 1, 1]' : 0.0820129}", "{'[5, 5, 4, 0, 6, 5, 0, 0, 29, 12, 0, 18, 1, 0, 0, 1, 1, 1]' : 0.08167}", "{'[5, 5, 4, 0, 6, 5, 0, 0, 29, 12, 0, 18, 1, 0, 0, 1, 1, 1]' : 0.081706}", "{'[5, 5, 4, 0, 6, 5, 0, 0, 29, 12, 0, 18, 1, 0, 0, 1, 1, 1]' : 0.0818889}", "{'[5, 5, 4, 0, 6, 5, 0, 0, 29, 12, 0, 18, 1, 0, 0, 1, 1, 1]' : 0.0816569}", "{'[5, 5, 4, 0, 6, 5, 0, 0, 29, 12, 0, 18, 1, 0, 0, 1, 1, 1]' : 0.0827088}", "{'[5, 5, 4, 0, 6, 5, 0, 0, 29, 12, 0, 18, 1, 0, 0, 1, 1, 1]' : 0.0816031}", "{'[5, 5, 4, 0, 6, 5, 0, 0, 29, 12, 0, 18, 1, 0, 0, 1, 1, 1]' : 0.0816319}", "{'[5, 5, 4, 0, 6, 5, 0, 0, 29, 12, 0, 18, 1, 0, 0, 1, 1, 1]' : 0.081677}", "{'[5, 5, 4, 0, 6, 5, 0, 0, 29, 12, 0, 18, 1, 0, 0, 1, 1, 1]' : 0.081656}", "{'[5, 5, 4, 0, 6, 5, 0, 0, 29, 12, 0, 18, 1, 0, 0, 1, 1, 1]' : 0.0816751}", "{'[5, 5, 4, 0, 6, 5, 0, 0, 29, 12, 0, 18, 1, 0, 0, 1, 1, 1]' : 0.081727}", "{'[5, 5, 4, 0, 6, 5, 0, 0, 29, 12, 0, 18, 1, 0, 0, 1, 1, 1]' : 0.081641}", "{'[5, 5, 4, 0, 6, 5, 0, 0, 29, 12, 0, 18, 1, 0, 0, 1, 1, 1]' : 0.0816031}", "{'[5, 5, 4, 0, 6, 5, 0, 0, 29, 12, 0, 18, 1, 0, 0, 1, 1, 1]' : 0.0816319}", "{'[5, 5, 4, 0, 6, 5, 0, 0, 29, 12, 0, 18, 1, 0, 0, 1, 1, 1]' : 0.0816002}", "{'[5, 5, 4, 0, 6, 5, 0, 0, 29, 12, 0, 18, 1, 0, 0, 1, 1, 1]' : 0.0816579}", "{'[5, 5, 4, 0, 6, 5, 0, 0, 29, 12, 0, 18, 1, 0, 0, 1, 1, 1]' : 0.0818732}", "{'[5, 5, 4, 0, 6, 5, 0, 0, 29, 12, 0, 18, 1, 0, 0, 1, 1, 1]' : 0.081636}", "{'[5, 5, 4, 0, 6, 5, 0, 0, 29, 12, 0, 18, 1, 0, 0, 1, 1, 1]' : 0.0816281}", "{'[5, 5, 4, 0, 6, 5, 0, 0, 29, 12, 0, 18, 1, 0, 0, 1, 1, 1]' : 0.0816519}", "{'[5, 5, 4, 0, 6, 5, 0, 0, 29, 12, 0, 18, 1, 0, 0, 1, 1, 1]' : 0.081692}", "{'[5, 5, 4, 0, 6, 5, 0, 0, 29, 12, 0, 18, 1, 0, 0, 1, 1, 1]' : 0.0819161}", "{'[5, 5, 4, 0, 6, 5, 0, 0, 29, 12, 0, 18, 1, 0, 0, 1, 1, 1]' : 0.081619}", "{'[5, 5, 4, 0, 6, 5, 0, 0, 29, 12, 0, 18, 1, 0, 0, 1, 1, 1]' : 0.081672}", "{'[5, 5, 4, 0, 6, 5, 0, 0, 29, 12, 0, 18, 1, 0, 0, 1, 1, 1]' : 0.0816431}", "{'[5, 5, 4, 0, 6, 5, 0, 0, 29, 12, 0, 18, 1, 0, 0, 1, 1, 1]' : 0.0816441}", "{'[5, 5, 4, 0, 6, 5, 0, 0, 29, 12, 0, 18, 1, 0, 0, 1, 1, 1]' : 0.0816209}", "{'[5, 5, 4, 0, 6, 5, 0, 0, 29, 12, 0, 18, 1, 0, 0, 1, 1, 1]' : 0.081825}", "{'[5, 5, 4, 0, 6, 5, 0, 0, 29, 12, 0, 18, 1, 0, 0, 1, 1, 1]' : 0.0816531}"]
returning from 'run': {'[5, 5, 4, 0, 6, 5, 0, 0, 29, 12, 0, 18, 1, 0, 0, 1, 1, 1]': ([0.0820129, 0.08167, 0.081706, 0.0818889, 0.0816569, 0.0827088, 0.0816031, 0.0816319, 0.081677, 0.081656, 0.0816751, 0.081727, 0.081641, 0.0816031, 0.0816319, 0.0816002, 0.0816579, 0.0818732, 0.081636, 0.0816281, 0.0816519, 0.081692, 0.0819161, 0.081619, 0.081672, 0.0816431, 0.0816441, 0.0816209, 0.081825, 0.0816531], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.0820129, 0.08167, 0.081706, 0.0818889, 0.0816569, 0.0827088, 0.0816031, 0.0816319, 0.081677, 0.081656, 0.0816751, 0.081727, 0.081641, 0.0816031, 0.0816319, 0.0816002, 0.0816579, 0.0818732, 0.081636, 0.0816281, 0.0816519, 0.081692, 0.0819161, 0.081619, 0.081672, 0.0816431, 0.0816441, 0.0816209, 0.081825, 0.0816531], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[5, 5, 4, 0, 6, 5, 0, 0, 29, 12, 0, 18, 1, 0, 0, 1, 1, 1]': ([0.0820129, 0.08167, 0.081706, 0.0818889, 0.0816569, 0.0827088, 0.0816031, 0.0816319, 0.081677, 0.081656, 0.0816751, 0.081727, 0.081641, 0.0816031, 0.0816319, 0.0816002, 0.0816579, 0.0818732, 0.081636, 0.0816281, 0.0816519, 0.081692, 0.0819161, 0.081619, 0.081672, 0.0816431, 0.0816441, 0.0816209, 0.081825, 0.0816531], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [0, 2, 3, 0, 6, 5, 0, 0, 8, 22, 0, 18, 0, 0, 2, 1, 1, 1]
Fixed Factors: {'ACOPY_x': 0, 'ACOPY_y': 0, 'U_K': 18, 'T2_K': 5, 'T2_J': 6, 'T2_I': 0, 'VEC1': 1, 'SCR': 1}
Testing candidate 4: [0, 2, 3, 0, 6, 5, 0, 0, 8, 22, 0, 18, 0, 0, 2, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	64
        Max loop nest depth: 	4
        Additions: 		6358
        Multiplications: 	2544
        Divisions: 		0
        Logical: 		0
        Reads: 			13050
        Writes: 		2650
        Comparisons:		64
        Gotos: 			0
        
digraph CFG {
	31978340 [label="31978340  double scv_493;...",shape=box];
	ForLoop31895201 [label="ForLoop31895201  for (k=cbv_31; k<=cbv_32; k=k+1) {...",shape=box];
	ForLoop31895201 -> 31959087;
	ForLoop31895201 -> _JOIN_31895201;
	_JOIN_31890785 [label="_JOIN_31890785None...",shape=box];
	_JOIN_31890785 -> 31890787;
	32139347 [label="32139347  register int cbv_64, cbv_65;...",shape=box];
	32134223 [label="32134223  register int cbv_46, cbv_47;...",shape=box];
	31897411 [label="31897411  int k;...",shape=box];
	_JOIN_31898071 [label="_JOIN_31898071None...",shape=box];
	_JOIN_31898071 -> 32133369;
	31945758 [label="31945758  double scv_53;...",shape=box];
	31960093 [label="31960093  double scv_234, scv_235, scv_236, scv_237, scv_238, scv_239, scv_240, scv_241;...",shape=box];
	ForLoop31863261 [label="ForLoop31863261  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop31863261 -> ForLoop31863259;
	ForLoop31863261 -> _JOIN_31863261;
	_JOIN_31900279 [label="_JOIN_31900279None...",shape=box];
	_JOIN_31900279 -> 32135931;
	ForLoop31904774 [label="ForLoop31904774  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop31904774 -> ForLoop31904772;
	ForLoop31904774 -> _JOIN_31904774;
	32106593 [label="32106593  tmp[i]=scv_569;...",shape=box];
	32106593 -> _JOIN_31906469;
	ForLoop31904776 [label="ForLoop31904776  for (i=0; i<=nx-23; i=i+23) {...",shape=box];
	ForLoop31904776 -> 32095191;
	ForLoop31904776 -> _JOIN_31904776;
	ForLoop31895127 [label="ForLoop31895127  for (k=kt; k<=cbv_30; k=k+19) {...",shape=box];
	ForLoop31895127 -> 31958612;
	ForLoop31895127 -> _JOIN_31895127;
	ForLoop31904772 [label="ForLoop31904772  for (kk=kkk; kk<=min(ny-1,kkk+960); kk=kk+64) {...",shape=box];
	ForLoop31904772 -> 32121506;
	ForLoop31904772 -> _JOIN_31904772;
	ForLoop31899543 [label="ForLoop31899543  for (k=kt; k<=cbv_48; k=k+19) {...",shape=box];
	ForLoop31899543 -> 31967498;
	ForLoop31899543 -> _JOIN_31899543;
	ForLoop31889239 [label="ForLoop31889239  for (k=kt; k<=cbv_6; k=k+19) {...",shape=box];
	ForLoop31889239 -> 31946764;
	ForLoop31889239 -> _JOIN_31889239;
	ForLoop31906395 [label="ForLoop31906395  for (k=kt; k<=cbv_74; k=k+19) {...",shape=box];
	ForLoop31906395 -> 32099981;
	ForLoop31906395 -> _JOIN_31906395;
	32135931 [label="32135931  register int cbv_52, cbv_53;...",shape=box];
	31953163 [label="31953163  double scv_153;...",shape=box];
	31889315 [label="31889315  int k;...",shape=box];
	31970935 [label="31970935  double scv_393;...",shape=box];
	31957131 [label="31957131  double scv_194, scv_195, scv_196, scv_197, scv_198, scv_199, scv_200, scv_201;...",shape=box];
	_JOIN_31905848 [label="_JOIN_31905848None...",shape=box];
	_JOIN_31905848 -> 31905849;
	31974903 [label="31974903  double scv_434, scv_435, scv_436, scv_437, scv_438, scv_439, scv_440, scv_441;...",shape=box];
	31890051 [label="31890051  int k;...",shape=box];
	ForLoop31892257 [label="ForLoop31892257  for (k=cbv_19; k<=cbv_20; k=k+1) {...",shape=box];
	ForLoop31892257 -> 31953163;
	ForLoop31892257 -> _JOIN_31892257;
	31954644 [label="31954644  double scv_173;...",shape=box];
	31945292 [label="31945292  double scv_34, scv_35, scv_36, scv_37, scv_38, scv_39, scv_40, scv_41;...",shape=box];
	ForLoop31893655 [label="ForLoop31893655  for (k=kt; k<=cbv_24; k=k+19) {...",shape=box];
	ForLoop31893655 -> 31955650;
	ForLoop31893655 -> _JOIN_31893655;
	_JOIN_31902487 [label="_JOIN_31902487None...",shape=box];
	_JOIN_31902487 -> 32138493;
	31947239 [label="31947239  double scv_73;...",shape=box];
	_JOIN_31716704 [label="_JOIN_31716704None...",shape=box];
	_JOIN_31716704 -> 31862329;
	_JOIN_31904033 [label="_JOIN_31904033None...",shape=box];
	_JOIN_31904033 -> 31904035;
	ForLoop31903297 [label="ForLoop31903297  for (k=cbv_64; k<=cbv_65; k=k+1) {...",shape=box];
	ForLoop31903297 -> 31975378;
	ForLoop31903297 -> _JOIN_31903297;
	32127391 [label="32127391  register int cbv_22, cbv_23;...",shape=box];
	31893731 [label="31893731  int k;...",shape=box];
	31901091 [label="31901091  int k;...",shape=box];
	_JOIN_31894465 [label="_JOIN_31894465None...",shape=box];
	_JOIN_31894465 -> 31894467;
	32138493 [label="32138493  register int cbv_61, cbv_62;...",shape=box];
	31961574 [label="31961574  double scv_254, scv_255, scv_256, scv_257, scv_258, scv_259, scv_260, scv_261;...",shape=box];
	31895203 [label="31895203  int k;...",shape=box];
	_JOIN_31889239 [label="_JOIN_31889239None...",shape=box];
	_JOIN_31889239 -> 32123121;
	31902563 [label="31902563  int k;...",shape=box];
	ForLoop31888509 [label="ForLoop31888509  for (k=kt; k<=cbv_3; k=k+19) {...",shape=box];
	ForLoop31888509 -> 31945292;
	ForLoop31888509 -> _JOIN_31888509;
	ForLoop31895937 [label="ForLoop31895937  for (k=cbv_34; k<=cbv_35; k=k+1) {...",shape=box];
	ForLoop31895937 -> 31960568;
	ForLoop31895937 -> _JOIN_31895937;
	32132515 [label="32132515  register int cbv_40, cbv_41;...",shape=box];
	31892259 [label="31892259  int k;...",shape=box];
	ForLoop31896599 [label="ForLoop31896599  for (k=kt; k<=cbv_36; k=k+19) {...",shape=box];
	ForLoop31896599 -> 31961574;
	ForLoop31896599 -> _JOIN_31896599;
	ForLoop31898145 [label="ForLoop31898145  for (k=cbv_43; k<=cbv_44; k=k+1) {...",shape=box];
	ForLoop31898145 -> 31965011;
	ForLoop31898145 -> _JOIN_31898145;
	ForLoop31904695 [label="ForLoop31904695  for (k=kt; k<=cbv_69; k=k+19) {...",shape=box];
	ForLoop31904695 -> 31977865;
	ForLoop31904695 -> _JOIN_31904695;
	ForLoop31904769 [label="ForLoop31904769  for (k=cbv_70; k<=cbv_71; k=k+1) {...",shape=box];
	ForLoop31904769 -> 31978340;
	ForLoop31904769 -> _JOIN_31904769;
	32133369 [label="32133369  register int cbv_43, cbv_44;...",shape=box];
	ForLoop31890049 [label="ForLoop31890049  for (k=cbv_10; k<=cbv_11; k=k+1) {...",shape=box];
	ForLoop31890049 -> 31948720;
	ForLoop31890049 -> _JOIN_31890049;
	ForLoop31897335 [label="ForLoop31897335  for (k=kt; k<=cbv_39; k=k+19) {...",shape=box];
	ForLoop31897335 -> 31963055;
	ForLoop31897335 -> _JOIN_31897335;
	32141055 [label="32141055  register int cbv_70, cbv_71;...",shape=box];
	32125683 [label="32125683  register int cbv_16, cbv_17;...",shape=box];
	_JOIN_31901825 [label="_JOIN_31901825None...",shape=box];
	_JOIN_31901825 -> 31901827;
	_JOIN_31894391 [label="_JOIN_31894391None...",shape=box];
	_JOIN_31894391 -> 32129099;
	31898883 [label="31898883  int k;...",shape=box];
	32126537 [label="32126537  register int cbv_19, cbv_20;...",shape=box];
	31962049 [label="31962049  double scv_273;...",shape=box];
	_JOIN_31863261 [label="_JOIN_31863261None...",shape=box];
	_JOIN_31863261 -> ForLoop31904774;
	_JOIN_31716635 [label="_JOIN_31716635None...",shape=box];
	_JOIN_31716635 -> 31716826;
	ForLoop31903223 [label="ForLoop31903223  for (k=kt; k<=cbv_63; k=k+19) {...",shape=box];
	ForLoop31903223 -> 31974903;
	ForLoop31903223 -> _JOIN_31903223;
	32123975 [label="32123975  register int cbv_10, cbv_11;...",shape=box];
	_JOIN_31899543 [label="_JOIN_31899543None...",shape=box];
	_JOIN_31899543 -> 32135077;
	_JOIN_31898145 [label="_JOIN_31898145None...",shape=box];
	_JOIN_31898145 -> 31898147;
	_JOIN_31896673 [label="_JOIN_31896673None...",shape=box];
	_JOIN_31896673 -> 31896675;
	31894467 [label="31894467  int k;...",shape=box];
	32130807 [label="32130807  register int cbv_34, cbv_35;...",shape=box];
	31890787 [label="31890787  int k;...",shape=box];
	_JOIN_31889975 [label="_JOIN_31889975None...",shape=box];
	_JOIN_31889975 -> 32123975;
	ForLoop31901825 [label="ForLoop31901825  for (k=cbv_58; k<=cbv_59; k=k+1) {...",shape=box];
	ForLoop31901825 -> 31972416;
	ForLoop31901825 -> _JOIN_31901825;
	31904873 [label="31904873  scv_569=scv_569+A[i*ny+j]*x[j];...",shape=box];
	31904873 -> _JOIN_31904874;
	31973422 [label="31973422  double scv_414, scv_415, scv_416, scv_417, scv_418, scv_419, scv_420, scv_421;...",shape=box];
	_JOIN_31890711 [label="_JOIN_31890711None...",shape=box];
	_JOIN_31890711 -> 32124829;
	31960568 [label="31960568  double scv_253;...",shape=box];
	ForLoop31898071 [label="ForLoop31898071  for (k=kt; k<=cbv_42; k=k+19) {...",shape=box];
	ForLoop31898071 -> 31964536;
	ForLoop31898071 -> _JOIN_31898071;
	31958612 [label="31958612  double scv_214, scv_215, scv_216, scv_217, scv_218, scv_219, scv_220, scv_221;...",shape=box];
	_JOIN_31895863 [label="_JOIN_31895863None...",shape=box];
	_JOIN_31895863 -> 32130807;
	32121506 [label="32121506  register int cbv_2;...",shape=box];
	32124829 [label="32124829  register int cbv_13, cbv_14;...",shape=box];
	31972416 [label="31972416  double scv_413;...",shape=box];
	_JOIN_31892183 [label="_JOIN_31892183None...",shape=box];
	_JOIN_31892183 -> 32126537;
	ForLoop31863259 [label="ForLoop31863259  for (jj=jjj; jj<=min(ny-1,jjj+2016); jj=jj+32) {...",shape=box];
	ForLoop31863259 -> 32107059;
	ForLoop31863259 -> _JOIN_31863259;
	_JOIN_31892919 [label="_JOIN_31892919None...",shape=box];
	_JOIN_31892919 -> 32127391;
	ForLoop31901089 [label="ForLoop31901089  for (k=cbv_55; k<=cbv_56; k=k+1) {...",shape=box];
	ForLoop31901089 -> 31970935;
	ForLoop31901089 -> _JOIN_31901089;
	31968979 [label="31968979  double scv_354, scv_355, scv_356, scv_357, scv_358, scv_359, scv_360, scv_361;...",shape=box];
	ForLoop31863257 [label="ForLoop31863257  for (j=jj; j<=cbv_1; j=j+1) {...",shape=box];
	ForLoop31863257 -> 31907507;
	ForLoop31863257 -> _JOIN_31863257;
	31950201 [label="31950201  double scv_113;...",shape=box];
	ForLoop31892993 [label="ForLoop31892993  for (k=cbv_22; k<=cbv_23; k=k+1) {...",shape=box];
	ForLoop31892993 -> 31954644;
	ForLoop31892993 -> _JOIN_31892993;
	32142281 [label="32142281  register int cbv_73;...",shape=box];
	_JOIN_31903297 [label="_JOIN_31903297None...",shape=box];
	_JOIN_31903297 -> 31903299;
	32128245 [label="32128245  register int cbv_25, cbv_26;...",shape=box];
	31966017 [label="31966017  double scv_314, scv_315, scv_316, scv_317, scv_318, scv_319, scv_320, scv_321;...",shape=box];
	ForLoop31891447 [label="ForLoop31891447  for (k=kt; k<=cbv_15; k=k+19) {...",shape=box];
	ForLoop31891447 -> 31951207;
	ForLoop31891447 -> _JOIN_31891447;
	_JOIN_31897409 [label="_JOIN_31897409None...",shape=box];
	_JOIN_31897409 -> 31897411;
	_JOIN_31897335 [label="_JOIN_31897335None...",shape=box];
	_JOIN_31897335 -> 32132515;
	ForLoop31892919 [label="ForLoop31892919  for (k=kt; k<=cbv_21; k=k+19) {...",shape=box];
	ForLoop31892919 -> 31954169;
	ForLoop31892919 -> _JOIN_31892919;
	31903299 [label="31903299  int k;...",shape=box];
	31901827 [label="31901827  int k;...",shape=box];
	32095209 [label="32095209  tmp[(i+20)]=scv_494;...",shape=box];
	ForLoop31896673 [label="ForLoop31896673  for (k=cbv_37; k<=cbv_38; k=k+1) {...",shape=box];
	ForLoop31896673 -> 31962049;
	ForLoop31896673 -> _JOIN_31896673;
	31946764 [label="31946764  double scv_54, scv_55, scv_56, scv_57, scv_58, scv_59, scv_60, scv_61;...",shape=box];
	ForLoop31901015 [label="ForLoop31901015  for (k=kt; k<=cbv_54; k=k+19) {...",shape=box];
	ForLoop31901015 -> 31970460;
	ForLoop31901015 -> _JOIN_31901015;
	_JOIN_31889313 [label="_JOIN_31889313None...",shape=box];
	_JOIN_31889313 -> 31889315;
	_JOIN_31904769 [label="_JOIN_31904769None...",shape=box];
	_JOIN_31904769 -> _JOIN_31904772;
	ForLoop31904874 [label="ForLoop31904874  for (j=jj; j<=cbv_72; j=j+1) {...",shape=box];
	ForLoop31904874 -> 31904873;
	ForLoop31904874 -> _JOIN_31904874;
	31862329 [label="31862329  double x_copy;...",shape=box];
	ForLoop31894465 [label="ForLoop31894465  for (k=cbv_28; k<=cbv_29; k=k+1) {...",shape=box];
	ForLoop31894465 -> 31957606;
	ForLoop31894465 -> _JOIN_31894465;
	32122267 [label="32122267  register int cbv_4, cbv_5;...",shape=box];
	31951682 [label="31951682  double scv_133;...",shape=box];
	31970460 [label="31970460  double scv_374, scv_375, scv_376, scv_377, scv_378, scv_379, scv_380, scv_381;...",shape=box];
	31951207 [label="31951207  double scv_114, scv_115, scv_116, scv_117, scv_118, scv_119, scv_120, scv_121;...",shape=box];
	31952688 [label="31952688  double scv_134, scv_135, scv_136, scv_137, scv_138, scv_139, scv_140, scv_141;...",shape=box];
	_JOIN_31895201 [label="_JOIN_31895201None...",shape=box];
	_JOIN_31895201 -> 31895203;
	32135077 [label="32135077  register int cbv_49, cbv_50;...",shape=box];
	ForLoop31889975 [label="ForLoop31889975  for (k=kt; k<=cbv_9; k=k+19) {...",shape=box];
	ForLoop31889975 -> 31948245;
	ForLoop31889975 -> _JOIN_31889975;
	31963530 [label="31963530  double scv_293;...",shape=box];
	ForLoop31904033 [label="ForLoop31904033  for (k=cbv_67; k<=cbv_68; k=k+1) {...",shape=box];
	ForLoop31904033 -> 31976859;
	ForLoop31904033 -> _JOIN_31904033;
	32098493 [label="32098493  double scv_517, scv_518, scv_519, scv_520, scv_521, scv_522, scv_523, scv_524;...",shape=box];
	_JOIN_31904876 [label="_JOIN_31904876None...",shape=box];
	_JOIN_31904876 -> ForLoop31906467;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 31716384;
	ForLoop31888577 [label="ForLoop31888577  for (k=cbv_4; k<=cbv_5; k=k+1) {...",shape=box];
	ForLoop31888577 -> 31945758;
	ForLoop31888577 -> _JOIN_31888577;
	_JOIN_31903959 [label="_JOIN_31903959None...",shape=box];
	_JOIN_31903959 -> 32140201;
	31899619 [label="31899619  int k;...",shape=box];
	_JOIN_31892257 [label="_JOIN_31892257None...",shape=box];
	_JOIN_31892257 -> 31892259;
	_JOIN_31895127 [label="_JOIN_31895127None...",shape=box];
	_JOIN_31895127 -> 32129953;
	_JOIN_31891521 [label="_JOIN_31891521None...",shape=box];
	_JOIN_31891521 -> 31891523;
	ForLoop31898881 [label="ForLoop31898881  for (k=cbv_46; k<=cbv_47; k=k+1) {...",shape=box];
	ForLoop31898881 -> 31966492;
	ForLoop31898881 -> _JOIN_31898881;
	ForLoop31904875 [label="ForLoop31904875  for (jj=jjj; jj<=min(ny-1,jjj+2016); jj=jj+32) {...",shape=box];
	ForLoop31904875 -> 32141135;
	ForLoop31904875 -> _JOIN_31904875;
	_JOIN_31896599 [label="_JOIN_31896599None...",shape=box];
	_JOIN_31896599 -> 32131661;
	ForLoop31891521 [label="ForLoop31891521  for (k=cbv_16; k<=cbv_17; k=k+1) {...",shape=box];
	ForLoop31891521 -> 31951682;
	ForLoop31891521 -> _JOIN_31891521;
	_JOIN_31891447 [label="_JOIN_31891447None...",shape=box];
	_JOIN_31891447 -> 32125683;
	31891523 [label="31891523  int k;...",shape=box];
	31964536 [label="31964536  double scv_294, scv_295, scv_296, scv_297, scv_298, scv_299, scv_300, scv_301;...",shape=box];
	_JOIN_31904774 [label="_JOIN_31904774None...",shape=box];
	_JOIN_31904774 -> 32095209;
	_JOIN_31892993 [label="_JOIN_31892993None...",shape=box];
	_JOIN_31892993 -> 31892995;
	_JOIN_31904776 [label="_JOIN_31904776None...",shape=box];
	_JOIN_31904776 -> ForLoop31906469;
	ForLoop31905848 [label="ForLoop31905848  for (kt=kk; kt<=cbv_73; kt=kt+32) {...",shape=box];
	ForLoop31905848 -> 32098493;
	ForLoop31905848 -> _JOIN_31905848;
	31955650 [label="31955650  double scv_174, scv_175, scv_176, scv_177, scv_178, scv_179, scv_180, scv_181;...",shape=box];
	31975378 [label="31975378  double scv_453;...",shape=box];
	32143042 [label="32143042  register int cbv_75, cbv_76;...",shape=box];
	_JOIN_31888577 [label="_JOIN_31888577None...",shape=box];
	_JOIN_31888577 -> 31888579;
	32129099 [label="32129099  register int cbv_28, cbv_29;...",shape=box];
	_JOIN_31893729 [label="_JOIN_31893729None...",shape=box];
	_JOIN_31893729 -> 31893731;
	31716826 [label="31716826  register int cbv_2, cbv_3;...",shape=box];
	31976384 [label="31976384  double scv_454, scv_455, scv_456, scv_457, scv_458, scv_459, scv_460, scv_461;...",shape=box];
	ForLoop31892183 [label="ForLoop31892183  for (k=kt; k<=cbv_18; k=k+19) {...",shape=box];
	ForLoop31892183 -> 31952688;
	ForLoop31892183 -> _JOIN_31892183;
	ForLoop31902487 [label="ForLoop31902487  for (k=kt; k<=cbv_60; k=k+19) {...",shape=box];
	ForLoop31902487 -> 31973422;
	ForLoop31902487 -> _JOIN_31902487;
	31948720 [label="31948720  double scv_93;...",shape=box];
	_JOIN_31902561 [label="_JOIN_31902561None...",shape=box];
	_JOIN_31902561 -> 31902563;
	ForLoop31899617 [label="ForLoop31899617  for (k=cbv_49; k<=cbv_50; k=k+1) {...",shape=box];
	ForLoop31899617 -> 31967973;
	ForLoop31899617 -> _JOIN_31899617;
	ForLoop31902561 [label="ForLoop31902561  for (k=cbv_61; k<=cbv_62; k=k+1) {...",shape=box];
	ForLoop31902561 -> 31973897;
	ForLoop31902561 -> _JOIN_31902561;
	_JOIN_31901015 [label="_JOIN_31901015None...",shape=box];
	_JOIN_31901015 -> 32136785;
	32100447 [label="32100447  double scv_568;...",shape=box];
	31888579 [label="31888579  int k;...",shape=box];
	_JOIN_31904772 [label="_JOIN_31904772None...",shape=box];
	_JOIN_31904772 -> _JOIN_31904774;
	32131661 [label="32131661  register int cbv_37, cbv_38;...",shape=box];
	ForLoop31893729 [label="ForLoop31893729  for (k=cbv_25; k<=cbv_26; k=k+1) {...",shape=box];
	ForLoop31893729 -> 31956125;
	ForLoop31893729 -> _JOIN_31893729;
	31898147 [label="31898147  int k;...",shape=box];
	ForLoop31716635 [label="ForLoop31716635  for (i=0; i<=cbv_1; i=i+9) {...",shape=box];
	ForLoop31716635 -> 31716561;
	ForLoop31716635 -> _JOIN_31716635;
	31965011 [label="31965011  double scv_313;...",shape=box];
	31716384 [label="31716384  int i;...",shape=box];
	31977865 [label="31977865  double scv_474, scv_475, scv_476, scv_477, scv_478, scv_479, scv_480, scv_481;...",shape=box];
	ForLoop31890711 [label="ForLoop31890711  for (k=kt; k<=cbv_12; k=k+19) {...",shape=box];
	ForLoop31890711 -> 31949726;
	ForLoop31890711 -> _JOIN_31890711;
	31959087 [label="31959087  double scv_233;...",shape=box];
	_JOIN_31903223 [label="_JOIN_31903223None...",shape=box];
	_JOIN_31903223 -> 32139347;
	32123121 [label="32123121  register int cbv_7, cbv_8;...",shape=box];
	31716703 [label="31716703  y[i]=0.0;...",shape=box];
	31716703 -> _JOIN_31716704;
	32137639 [label="32137639  register int cbv_58, cbv_59;...",shape=box];
	31957606 [label="31957606  double scv_213;...",shape=box];
	ForLoop31889313 [label="ForLoop31889313  for (k=cbv_7; k<=cbv_8; k=k+1) {...",shape=box];
	ForLoop31889313 -> 31947239;
	ForLoop31889313 -> _JOIN_31889313;
	31895939 [label="31895939  int k;...",shape=box];
	_JOIN_31893655 [label="_JOIN_31893655None...",shape=box];
	_JOIN_31893655 -> 32128245;
	31963055 [label="31963055  double scv_274, scv_275, scv_276, scv_277, scv_278, scv_279, scv_280, scv_281;...",shape=box];
	_JOIN_31887962 [label="_JOIN_31887962None...",shape=box];
	_JOIN_31887962 -> 31887963;
	31973897 [label="31973897  double scv_433;...",shape=box];
	_JOIN_31906467 [label="_JOIN_31906467None...",shape=box];
	_JOIN_31906467 -> 32106593;
	31971941 [label="31971941  double scv_394, scv_395, scv_396, scv_397, scv_398, scv_399, scv_400, scv_401;...",shape=box];
	ForLoop31894391 [label="ForLoop31894391  for (k=kt; k<=cbv_27; k=k+19) {...",shape=box];
	ForLoop31894391 -> 31957131;
	ForLoop31894391 -> _JOIN_31894391;
	_JOIN_31906469 [label="_JOIN_31906469None...",shape=box];
	ForLoop31890785 [label="ForLoop31890785  for (k=cbv_13; k<=cbv_14; k=k+1) {...",shape=box];
	ForLoop31890785 -> 31950201;
	ForLoop31890785 -> _JOIN_31890785;
	31907507 [label="31907507  double scv_1;...",shape=box];
	_JOIN_31906466 [label="_JOIN_31906466None...",shape=box];
	_JOIN_31906466 -> _JOIN_31906467;
	32136785 [label="32136785  register int cbv_55, cbv_56;...",shape=box];
	_JOIN_31906463 [label="_JOIN_31906463None...",shape=box];
	_JOIN_31906463 -> _JOIN_31906466;
	_JOIN_31904695 [label="_JOIN_31904695None...",shape=box];
	_JOIN_31904695 -> 32141055;
	ForLoop31906463 [label="ForLoop31906463  for (k=cbv_75; k<=cbv_76; k=k+1) {...",shape=box];
	ForLoop31906463 -> 32100447;
	ForLoop31906463 -> _JOIN_31906463;
	ForLoop31906467 [label="ForLoop31906467  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop31906467 -> ForLoop31906466;
	ForLoop31906467 -> _JOIN_31906467;
	ForLoop31906466 [label="ForLoop31906466  for (kk=kkk; kk<=min(ny-1,kkk+960); kk=kk+64) {...",shape=box];
	ForLoop31906466 -> 32142281;
	ForLoop31906466 -> _JOIN_31906466;
	32099981 [label="32099981  double scv_549, scv_550, scv_551, scv_552, scv_553, scv_554, scv_555, scv_556;...",shape=box];
	31967973 [label="31967973  double scv_353;...",shape=box];
	ForLoop31900353 [label="ForLoop31900353  for (k=cbv_52; k<=cbv_53; k=k+1) {...",shape=box];
	ForLoop31900353 -> 31969454;
	ForLoop31900353 -> _JOIN_31900353;
	ForLoop31716704 [label="ForLoop31716704  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop31716704 -> 31716703;
	ForLoop31716704 -> _JOIN_31716704;
	ForLoop31906469 [label="ForLoop31906469  for (i=nx-((nx-(0))%23); i<=nx-1; i=i+1) {...",shape=box];
	ForLoop31906469 -> 32106581;
	ForLoop31906469 -> _JOIN_31906469;
	ForLoop31895863 [label="ForLoop31895863  for (k=kt; k<=cbv_33; k=k+19) {...",shape=box];
	ForLoop31895863 -> 31960093;
	ForLoop31895863 -> _JOIN_31895863;
	31948245 [label="31948245  double scv_74, scv_75, scv_76, scv_77, scv_78, scv_79, scv_80, scv_81;...",shape=box];
	31942396 [label="31942396  double scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8, scv_9;...",shape=box];
	31892995 [label="31892995  int k;...",shape=box];
	31905849 [label="31905849  int k;...",shape=box];
	31887963 [label="31887963  int k;...",shape=box];
	31969454 [label="31969454  double scv_373;...",shape=box];
	_JOIN_31899617 [label="_JOIN_31899617None...",shape=box];
	_JOIN_31899617 -> 31899619;
	ForLoop31903959 [label="ForLoop31903959  for (k=kt; k<=cbv_66; k=k+19) {...",shape=box];
	ForLoop31903959 -> 31976384;
	ForLoop31903959 -> _JOIN_31903959;
	31976859 [label="31976859  double scv_473;...",shape=box];
	31954169 [label="31954169  double scv_154, scv_155, scv_156, scv_157, scv_158, scv_159, scv_160, scv_161;...",shape=box];
	_JOIN_31900353 [label="_JOIN_31900353None...",shape=box];
	_JOIN_31900353 -> 31900355;
	31896675 [label="31896675  int k;...",shape=box];
	31956125 [label="31956125  double scv_193;...",shape=box];
	ForLoop31900279 [label="ForLoop31900279  for (k=kt; k<=cbv_51; k=k+19) {...",shape=box];
	ForLoop31900279 -> 31968979;
	ForLoop31900279 -> _JOIN_31900279;
	31966492 [label="31966492  double scv_333;...",shape=box];
	_JOIN_31906395 [label="_JOIN_31906395None...",shape=box];
	_JOIN_31906395 -> 32143042;
	32095191 [lexpected=9369846271501.798828
actual=9369846271501.798828
abel="32095191  double scv_494, scv_495, scv_496, scv_497, scv_498, scv_499, scv_500, scv_501;...",shape=box];
	32107059 [label="32107059  register int cbv_1;...",shape=box];
	_JOIN_31863257 [label="_JOIN_31863257None...",shape=box];
	_JOIN_31863257 -> _JOIN_31863259;
	_JOIN_31904874 [label="_JOIN_31904874None...",shape=box];
	_JOIN_31904874 -> _JOIN_31904875;
	31716561 [label="31716561  y[i]=0.0;...",shape=box];
	_JOIN_31901089 [label="_JOIN_31901089None...",shape=box];
	_JOIN_31901089 -> 31901091;
	ForLoop31904876 [label="ForLoop31904876  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop31904876 -> ForLoop31904875;
	ForLoop31904876 -> _JOIN_31904876;
	_JOIN_31863259 [label="_JOIN_31863259None...",shape=box];
	_JOIN_31863259 -> _JOIN_31863261;
	_JOIN_31890049 [label="_JOIN_31890049None...",shape=box];
	_JOIN_31890049 -> 31890051;
	ForLoop31897409 [label="ForLoop31897409  for (k=cbv_40; k<=cbv_41; k=k+1) {...",shape=box];
	ForLoop31897409 -> 31963530;
	ForLoop31897409 -> _JOIN_31897409;
	_JOIN_31898807 [label="_JOIN_31898807None...",shape=box];
	_JOIN_31898807 -> 32134223;
	31967498 [label="31967498  double scv_334, scv_335, scv_336, scv_337, scv_338, scv_339, scv_340, scv_341;...",shape=box];
	_JOIN_31895937 [label="_JOIN_31895937None...",shape=box];
	_JOIN_31895937 -> 31895939;
	32106581 [label="32106581  double scv_569;...",shape=box];
	31949726 [label="31949726  double scv_94, scv_95, scv_96, scv_97, scv_98, scv_99, scv_100, scv_101;...",shape=box];
	_JOIN_31904875 [label="_JOIN_31904875None...",shape=box];
	_JOIN_31904875 -> _JOIN_31904876;
	ForLoop31887962 [label="ForLoop31887962  for (kt=kk; kt<=cbv_2; kt=kt+32) {...",shape=box];
	ForLoop31887962 -> 31942396;
	ForLoop31887962 -> _JOIN_31887962;
	ForLoop31898807 [label="ForLoop31898807  for (k=kt; k<=cbv_45; k=k+19) {...",shape=box];
	ForLoop31898807 -> 31966017;
	ForLoop31898807 -> _JOIN_31898807;
	32129953 [label="32129953  register int cbv_31, cbv_32;...",shape=box];
	ForLoop31901751 [label="ForLoop31901751  for (k=kt; k<=cbv_57; k=k+19) {...",shape=box];
	ForLoop31901751 -> 31971941;
	ForLoop31901751 -> _JOIN_31901751;
	_JOIN_31901751 [label="_JOIN_31901751None...",shape=box];
	_JOIN_31901751 -> 32137639;
	_JOIN_31888509 [label="_JOIN_31888509None...",shape=box];
	_JOIN_31888509 -> 32122267;
	31900355 [label="31900355  int k;...",shape=box];
	31904035 [label="31904035  int k;...",shape=box];
	_JOIN_31898881 [label="_JOIN_31898881None...",shape=box];
	_JOIN_31898881 -> 31898883;
	32141135 [label="32141135  register int cbv_72;...",shape=box];
	32140201 [label="32140201  register int cbv_67, cbv_68;...",shape=box];

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest129.exe __orio_perftest129.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest129.exe  
{'[0, 2, 3, 0, 6, 5, 0, 0, 8, 22, 0, 18, 0, 0, 2, 1, 1, 1]' : 0.120076}
{'[0, 2, 3, 0, 6, 5, 0, 0, 8, 22, 0, 18, 0, 0, 2, 1, 1, 1]' : 0.119609}
{'[0, 2, 3, 0, 6, 5, 0, 0, 8, 22, 0, 18, 0, 0, 2, 1, 1, 1]' : 0.119786}
{'[0, 2, 3, 0, 6, 5, 0, 0, 8, 22, 0, 18, 0, 0, 2, 1, 1, 1]' : 0.119518}
{'[0, 2, 3, 0, 6, 5, 0, 0, 8, 22, 0, 18, 0, 0, 2, 1, 1, 1]' : 0.119921}
{'[0, 2, 3, 0, 6, 5, 0, 0, 8, 22, 0, 18, 0, 0, 2, 1, 1, 1]' : 0.11963}
{'[0, 2, 3, 0, 6, 5, 0, 0, 8, 22, 0, 18, 0, 0, 2, 1, 1, 1]' : 0.119534}
{'[0, 2, 3, 0, 6, 5, 0, 0, 8, 22, 0, 18, 0, 0, 2, 1, 1, 1]' : 0.119619}
{'[0, 2, 3, 0, 6, 5, 0, 0, 8, 22, 0, 18, 0, 0, 2, 1, 1, 1]' : 0.119556}
{'[0, 2, 3, 0, 6, 5, 0, 0, 8, 22, 0, 18, 0, 0, 2, 1, 1, 1]' : 0.120671}
{'[0, 2, 3, 0, 6, 5, 0, 0, 8, 22, 0, 18, 0, 0, 2, 1, 1, 1]' : 0.119596}
{'[0, 2, 3, 0, 6, 5, 0, 0, 8, 22, 0, 18, 0, 0, 2, 1, 1, 1]' : 0.119719}
{'[0, 2, 3, 0, 6, 5, 0, 0, 8, 22, 0, 18, 0, 0, 2, 1, 1, 1]' : 0.119543}
{'[0, 2, 3, 0, 6, 5, 0, 0, 8, 22, 0, 18, 0, 0, 2, 1, 1, 1]' : 0.119585}
{'[0, 2, 3, 0, 6, 5, 0, 0, 8, 22, 0, 18, 0, 0, 2, 1, 1, 1]' : 0.119629}
{'[0, 2, 3, 0, 6, 5, 0, 0, 8, 22, 0, 18, 0, 0, 2, 1, 1, 1]' : 0.119593}
{'[0, 2, 3, 0, 6, 5, 0, 0, 8, 22, 0, 18, 0, 0, 2, 1, 1, 1]' : 0.119556}
{'[0, 2, 3, 0, 6, 5, 0, 0, 8, 22, 0, 18, 0, 0, 2, 1, 1, 1]' : 0.119906}
{'[0, 2, 3, 0, 6, 5, 0, 0, 8, 22, 0, 18, 0, 0, 2, 1, 1, 1]' : 0.119557}
{'[0, 2, 3, 0, 6, 5, 0, 0, 8, 22, 0, 18, 0, 0, 2, 1, 1, 1]' : 0.119801}
{'[0, 2, 3, 0, 6, 5, 0, 0, 8, 22, 0, 18, 0, 0, 2, 1, 1, 1]' : 0.119561}
{'[0, 2, 3, 0, 6, 5, 0, 0, 8, 22, 0, 18, 0, 0, 2, 1, 1, 1]' : 0.119519}
{'[0, 2, 3, 0, 6, 5, 0, 0, 8, 22, 0, 18, 0, 0, 2, 1, 1, 1]' : 0.119573}
{'[0, 2, 3, 0, 6, 5, 0, 0, 8, 22, 0, 18, 0, 0, 2, 1, 1, 1]' : 0.119539}
{'[0, 2, 3, 0, 6, 5, 0, 0, 8, 22, 0, 18, 0, 0, 2, 1, 1, 1]' : 0.119586}
{'[0, 2, 3, 0, 6, 5, 0, 0, 8, 22, 0, 18, 0, 0, 2, 1, 1, 1]' : 0.12057}
{'[0, 2, 3, 0, 6, 5, 0, 0, 8, 22, 0, 18, 0, 0, 2, 1, 1, 1]' : 0.119598}
{'[0, 2, 3, 0, 6, 5, 0, 0, 8, 22, 0, 18, 0, 0, 2, 1, 1, 1]' : 0.119865}
{'[0, 2, 3, 0, 6, 5, 0, 0, 8, 22, 0, 18, 0, 0, 2, 1, 1, 1]' : 0.119555}
{'[0, 2, 3, 0, 6, 5, 0, 0, 8, 22, 0, 18, 0, 0, 2, 1, 1, 1]' : 0.119818}

out:
 ["{'[0, 2, 3, 0, 6, 5, 0, 0, 8, 22, 0, 18, 0, 0, 2, 1, 1, 1]' : 0.120076}", "{'[0, 2, 3, 0, 6, 5, 0, 0, 8, 22, 0, 18, 0, 0, 2, 1, 1, 1]' : 0.119609}", "{'[0, 2, 3, 0, 6, 5, 0, 0, 8, 22, 0, 18, 0, 0, 2, 1, 1, 1]' : 0.119786}", "{'[0, 2, 3, 0, 6, 5, 0, 0, 8, 22, 0, 18, 0, 0, 2, 1, 1, 1]' : 0.119518}", "{'[0, 2, 3, 0, 6, 5, 0, 0, 8, 22, 0, 18, 0, 0, 2, 1, 1, 1]' : 0.119921}", "{'[0, 2, 3, 0, 6, 5, 0, 0, 8, 22, 0, 18, 0, 0, 2, 1, 1, 1]' : 0.11963}", "{'[0, 2, 3, 0, 6, 5, 0, 0, 8, 22, 0, 18, 0, 0, 2, 1, 1, 1]' : 0.119534}", "{'[0, 2, 3, 0, 6, 5, 0, 0, 8, 22, 0, 18, 0, 0, 2, 1, 1, 1]' : 0.119619}", "{'[0, 2, 3, 0, 6, 5, 0, 0, 8, 22, 0, 18, 0, 0, 2, 1, 1, 1]' : 0.119556}", "{'[0, 2, 3, 0, 6, 5, 0, 0, 8, 22, 0, 18, 0, 0, 2, 1, 1, 1]' : 0.120671}", "{'[0, 2, 3, 0, 6, 5, 0, 0, 8, 22, 0, 18, 0, 0, 2, 1, 1, 1]' : 0.119596}", "{'[0, 2, 3, 0, 6, 5, 0, 0, 8, 22, 0, 18, 0, 0, 2, 1, 1, 1]' : 0.119719}", "{'[0, 2, 3, 0, 6, 5, 0, 0, 8, 22, 0, 18, 0, 0, 2, 1, 1, 1]' : 0.119543}", "{'[0, 2, 3, 0, 6, 5, 0, 0, 8, 22, 0, 18, 0, 0, 2, 1, 1, 1]' : 0.119585}", "{'[0, 2, 3, 0, 6, 5, 0, 0, 8, 22, 0, 18, 0, 0, 2, 1, 1, 1]' : 0.119629}", "{'[0, 2, 3, 0, 6, 5, 0, 0, 8, 22, 0, 18, 0, 0, 2, 1, 1, 1]' : 0.119593}", "{'[0, 2, 3, 0, 6, 5, 0, 0, 8, 22, 0, 18, 0, 0, 2, 1, 1, 1]' : 0.119556}", "{'[0, 2, 3, 0, 6, 5, 0, 0, 8, 22, 0, 18, 0, 0, 2, 1, 1, 1]' : 0.119906}", "{'[0, 2, 3, 0, 6, 5, 0, 0, 8, 22, 0, 18, 0, 0, 2, 1, 1, 1]' : 0.119557}", "{'[0, 2, 3, 0, 6, 5, 0, 0, 8, 22, 0, 18, 0, 0, 2, 1, 1, 1]' : 0.119801}", "{'[0, 2, 3, 0, 6, 5, 0, 0, 8, 22, 0, 18, 0, 0, 2, 1, 1, 1]' : 0.119561}", "{'[0, 2, 3, 0, 6, 5, 0, 0, 8, 22, 0, 18, 0, 0, 2, 1, 1, 1]' : 0.119519}", "{'[0, 2, 3, 0, 6, 5, 0, 0, 8, 22, 0, 18, 0, 0, 2, 1, 1, 1]' : 0.119573}", "{'[0, 2, 3, 0, 6, 5, 0, 0, 8, 22, 0, 18, 0, 0, 2, 1, 1, 1]' : 0.119539}", "{'[0, 2, 3, 0, 6, 5, 0, 0, 8, 22, 0, 18, 0, 0, 2, 1, 1, 1]' : 0.119586}", "{'[0, 2, 3, 0, 6, 5, 0, 0, 8, 22, 0, 18, 0, 0, 2, 1, 1, 1]' : 0.12057}", "{'[0, 2, 3, 0, 6, 5, 0, 0, 8, 22, 0, 18, 0, 0, 2, 1, 1, 1]' : 0.119598}", "{'[0, 2, 3, 0, 6, 5, 0, 0, 8, 22, 0, 18, 0, 0, 2, 1, 1, 1]' : 0.119865}", "{'[0, 2, 3, 0, 6, 5, 0, 0, 8, 22, 0, 18, 0, 0, 2, 1, 1, 1]' : 0.119555}", "{'[0, 2, 3, 0, 6, 5, 0, 0, 8, 22, 0, 18, 0, 0, 2, 1, 1, 1]' : 0.119818}"]
returning from 'run': {'[0, 2, 3, 0, 6, 5, 0, 0, 8, 22, 0, 18, 0, 0, 2, 1, 1, 1]': ([0.120076, 0.119609, 0.119786, 0.119518, 0.119921, 0.11963, 0.119534, 0.119619, 0.119556, 0.120671, 0.119596, 0.119719, 0.119543, 0.119585, 0.119629, 0.119593, 0.119556, 0.119906, 0.119557, 0.119801, 0.119561, 0.119519, 0.119573, 0.119539, 0.119586, 0.12057, 0.119598, 0.119865, 0.119555, 0.119818], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.120076, 0.119609, 0.119786, 0.119518, 0.119921, 0.11963, 0.119534, 0.119619, 0.119556, 0.120671, 0.119596, 0.119719, 0.119543, 0.119585, 0.119629, 0.119593, 0.119556, 0.119906, 0.119557, 0.119801, 0.119561, 0.119519, 0.119573, 0.119539, 0.119586, 0.12057, 0.119598, 0.119865, 0.119555, 0.119818], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf/usr/local/lib/python2.7/dist-packages/rpy2/rinterface/__init__.py:186: RRuntimeWarning: Error in lm.fit(x, y, offset = offset, singular.ok = singular.ok, ...) : 
  0 (non-NA) cases

  warnings.warn(x, RRuntimeWarning)
, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 3, 0, 6, 5, 0, 0, 8, 22, 0, 18, 0, 0, 2, 1, 1, 1]': ([0.120076, 0.119609, 0.119786, 0.119518, 0.119921, 0.11963, 0.119534, 0.119619, 0.119556, 0.120671, 0.119596, 0.119719, 0.119543, 0.119585, 0.119629, 0.119593, 0.119556, 0.119906, 0.119557, 0.119801, 0.119561, 0.119519, 0.119573, 0.119539, 0.119586, 0.12057, 0.119598, 0.119865, 0.119555, 0.119818], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [6, 3, 5, 0, 6, 5, 0, 0, 1, 28, 0, 18, 0, 1, 1, 1, 1, 1]
Fixed Factors: {'ACOPY_x': 0, 'ACOPY_y': 0, 'U_K': 18, 'T2_K': 5, 'T2_J': 6, 'T2_I': 0, 'VEC1': 1, 'SCR': 1}
Testing candidate 5: [6, 3, 5, 0, 6, 5, 0, 0, 1, 28, 0, 18, 0, 1, 1, 1, 1, 1]
Length of requested configs: 1
Coordinate was computed before
No coordinates to evaluate
Measurements: [0.12664350000000002, 0.13910936666666665, 0.08172740666666667, 0.11971963333333331, 0.14372743333333332]
       T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
38680     3    0    0    0    6    5       0       0    4   0  13  18    0    0
81809     6    3    5    0    6    5       0       0   25   0  21  18    0    0
122443    5    5    4    0    6    5       0       0   29  12   0  18    1    0
232015    0    2    3    0    6    5       0       0    8  22   0  18    0    0
352556    6    3    5    0    6    5       0       0    1  28   0  18    0    1
       RT_K SCR VEC1 VEC2  cost_mean
38680     0   1    1    1 0.12664350
81809     0   1    1    0 0.13910937
122443    0   1    1    1 0.08172741
232015    2   1    1    1 0.11971963
352556    1   1    1    1 0.14372743

Step Space Names:  [1] "T1_I"    "T1_J"    "T1_K"    "T2_I"    "T2_J"    "T2_K"    "ACOPY_x"
 [8] "ACOPY_y" "U1_I"    "U_I"     "U_J"     "U_K"     "RT_I"    "RT_J"   
[15] "RT_K"    "SCR"     "VEC1"    "VEC2"   

Traceback (most recent call last):
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)
  File "/home/phrb/code/Orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)
  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)
  File "/home/phrb/code/Orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)
  File "/home/phrb/code/Orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()
  File "/home/phrb/code/Orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)
  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 498, in searchBestCoord
    self.dopt_anova(initial_factors, initial_inverse_factors, data)
  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 397, in dopt_anova
    budget)
  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 334, in dopt_anova_step
    regression, prf_values = self.anova(design, lm_formula)
  File "/home/phrb/code/Orio/orio/main/tuner/search/doptanova/doptanova.py", line 95, in anova
    heteroscedasticity_test = self.car.ncvTest(regression)
  File "/usr/local/lib/python2.7/dist-packages/rpy2/robjects/functions.py", line 178, in __call__
    return super(SignatureTranslatedFunction, self).__call__(*args, **kwargs)
  File "/usr/local/lib/python2.7/dist-packages/rpy2/robjects/functions.py", line 106, in __call__
    res = super(Function, self).__call__(*new_args, **new_kwargs)
rpy2.rinterface.RRuntimeError: Error in lm.fit(x, y, offset = offset, singular.ok = singular.ok, ...) : 
  0 (non-NA) cases

