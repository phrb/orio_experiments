
====== START ORIO ======

----- begin reading the source file: atax2.src1.c -----
----- finished reading the source file -----

----- begin parsing annotations -----
----- finished parsing annotations -----

----- begin optimizations -----
Search_Space         = 8.234e+13
Number_of_Parameters = 18
Numeric_Parameters   = 13
Binary_Parameters    = 05
['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
[[1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [False, True], [False, True], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 8, 32], [1, 8, 32], [1, 8, 32], [False, True], [False, True], [False, True]]

----- begin empirical tuning for problem size -----
 N = 10000
Parameters: {'ACOPY_x': [0, 2], 'ACOPY_y': [0, 2], 'RT_K': [0, 3], 'T1_I': [0, 7], 'T1_J': [0, 7], 'T1_K': [0, 7], 'U_K': [0, 30], 'U_J': [0, 30], 'U_I': [0, 30], 'U1_I': [0, 30], 'T2_K': [0, 7], 'T2_J': [0, 7], 'T2_I': [0, 7], 'VEC2': [0, 2], 'VEC1': [0, 2], 'RT_I': [0, 3], 'SCR': [0, 2], 'RT_J': [0, 3]}

----- begin random search -----
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Inverse Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Building seed search space (does not spend evaluations)
Using pre-generated space for this size
Starting DOPT-anova
Step 0
Full Model:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Fixed Factors: {}
Full data does not fit on budget
Computing D-Optimal Design
Updating Constraints
Updated Constraint: True and (((variable_ranges[variable_names.index(factors[3])][int(round(x[3]))] ==1 )or (variable_ranges[variable_names.index(factors[3])][int(round(x[3]))] %variable_ranges[variable_names.index(factors[0])][int(round(x[0]))] ==0 ))) and (((variable_ranges[variable_names.index(factors[4])][int(round(x[4]))] ==1 )or (variable_ranges[variable_names.index(factors[4])][int(round(x[4]))] %variable_ranges[variable_names.index(factors[1])][int(round(x[1]))] ==0 ))) and (((variable_ranges[variable_names.index(factors[5])][int(round(x[5]))] ==1 )or (variable_ranges[variable_names.index(factors[5])][int(round(x[5]))] %variable_ranges[variable_names.index(factors[2])][int(round(x[2]))] ==0 ))) and ((variable_ranges[variable_names.index(factors[12])][int(round(x[12]))] *variable_ranges[variable_names.index(factors[13])][int(round(x[13]))] +variable_ranges[variable_names.index(factors[12])][int(round(x[12]))] *variable_ranges[variable_names.index(factors[14])][int(round(x[14]))] +variable_ranges[variable_names.index(factors[13])][int(round(x[13]))] *variable_ranges[variable_names.index(factors[14])][int(round(x[14]))] <=150 )) and (((variable_ranges[variable_names.index(factors[9])][int(round(x[9]))] ==1 )or (variable_ranges[variable_names.index(factors[10])][int(round(x[10]))] ==1 )or (variable_ranges[variable_names.index(factors[11])][int(round(x[11]))] ==1 )))
Computing D-Optimal Design with 46 experiments
Design Formula:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Starting "optMonteCarlo" run
       var low high center nLevels round factor   mix
1     T1_I   0    6      0       7     0  FALSE FALSE
2     T1_J   0    6      0       7     0  FALSE FALSE
3     T1_K   0    6      0       7     0  FALSE FALSE
4     T2_I   0    6      0       7     0  FALSE FALSE
5     T2_J   0    6      0       7     0  FALSE FALSE
6     T2_K   0    6      0       7     0  FALSE FALSE
7  ACOPY_x   0    1      0       2     0  FALSE FALSE
8  ACOPY_y   0    1      0       2     0  FALSE FALSE
9     U1_I   0   29      0      30     0  FALSE FALSE
10     U_I   0   29      0      30     0  FALSE FALSE
11     U_J   0   29      0      30     0  FALSE FALSE
12     U_K   0   29      0      30     0  FALSE FALSE
13    RT_I   0    2      0       3     0  FALSE FALSE
14    RT_J   0    2      0       3     0  FALSE FALSE
15    RT_K   0    2      0       3     0  FALSE FALSE
16     SCR   0    1      0       2     0  FALSE FALSE
17    VEC1   0    1      0       2     0  FALSE FALSE
18    VEC2   0    1      0       2     0  FALSE FALSE

   T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
1     1    2    5    1    6    6       1       0   14   0  29   1    0    1
2     2    3    1    4    4    0       1       1   17  24   0  14    2    0
3     4    0    1    6    2    1       1       0    1  17   0   4    0    2
4     5    3    5    0    5    0       0       1    9   2   9   0    1    1
5     5    0    2    3    5    6       1       1   15   0  21   7    1    0
6     6    0    3    5    4    5       0       1   28   0  11   1    1    1
7     2    0    0    2    3    3       0       1   29   0  24   4    0    0
8     3    6    5    2    4    3       0       0    3   6   0  15    1    1
9     6    2    0    0    5    2       1       0   14  16   0  17    1    1
10    0    3    0    4    5    0       1       1    3   1   0  10    1    0
11    3    0    4    0    3    3       1       0   10   4   8   0    1    0
12    3    0    2    1    5    1       0       0    5   4   0   5    0    2
13    2    2    3    6    3    5       0       0   11  29   6   0    1    0
14    0    3    2    0    3    5       1       0    0   0  17  26    0    1
15    1    6    3    1    5    5       0       0   21  12  17   0    0    2
16    6    2    4    4    2    6       1       1    2  19  14   0    0    0
17    6    2    5    4    6    3       0       0   10   6  11   0    2    0
18    2    2    4    6    1    5       0       0   26   1   0   7    2    0
19    3    3    6    5    3    5       0       1    1   0   0  28    1    0
20    0    0    6    1    4    6       0       0   24  26   0  23    0    1
21    5    2    2    3    1    1       1       1   23  29   0  15    1    1
22    2    5    1    5    5    4       1       1   27  25   0  26    0    0
23    3    3    1    5    5    5       1       0    0  19   2   0    0    1
24    1    1    3    1    0    4       1       1   28   5   4   0    1    0
25    0    4    2    2    3    0       1       0   28   5   0   3    0    0
26    0    0    4    6    5    5       0       0   13   0  11  23    0    1
27    2    4    1    6    4    0       1       0   15   0  29  27    1    1
28    0    4    6    3    0    4       1       0   15  24  21   0    0    0
29    6    4    1    0    0    1       0       0   14  26   0   8    0    0
30    1    0    5    1    6    3       1       0   21  28   7   0    0    1
31    2    3    3    4    0    0       1       1    4   0  29  28    0    1
32    5    5    5    6    0    5       0       0   29  11   0  18    0    1
33    0    4    1    1    2    3       0       1   10   2   0   7    0    1
34    3    3    0    3    1    4       0       0   14   0   9  17    0    0
35    5    5    0    3    3    2       1       0   26  24   9   0    2    0
36    2    4    2    0    0    5       0       0    9  27  27   0    1    1
37    5    1    6    6    3    4       1       1    6   0   5  26    0    2
38    2    0    4    0    5    3       1       1    0   9  28   0    1    1
39    5    3    0    5    5    6       0       0   16   5   0  16    0    0
40    4    4    2    2    4    6       1       1    9   6   0   0    0    1
41    3    0    3    4    1    1       1       0    9   7   1   0    0    1
42    1    3    2    1    4    3       0       0   14   0   0  28    1    0
43    5    5    2    0    6    1       1       1   20   0   8  20    0    0
44    5    4    4    4    2    0       0       0    1   0  17   2    1    0
45    6    4    1    5    3    0       0       1   27   5  28   0    1    0
46    2    2    2    5    4    2       0       1   15   7  28   0    0    0
   RT_K SCR VEC1 VEC2
1     1   0    0    0
2     0   0    1    0
3     0   0    0    0
4     0   1    0    0
5     1   1    0    1
6     0   1    1    0
7     1   0    0    1
8     0   0    0    1
9     0   0    1    1
10    0   0    1    0
11    1   1    0    0
12    0   0    1    1
13    1   0    0    1
14    0   1    0    1
15    0   0    0    0
16    2   1    1    1
17    0   0    0    1
18    0   1    0    1
19    0   0    1    1
20    1   0    1    1
21    0   1    0    0
22    2   1    0    0
23    1   1    0    1
24    1   0    1    0
25    0   0    0    1
26    0   0    0    0
27    0   1    1    1
28    2   1    1    0
29    1   1    0    0
30    0   1    1    1
31    0   0    0    0
32    0   0    1    1
33    1   1    1    1
34    2   0    0    0
35    0   1    0    1
36    0   0    1    1
37    0   1    0    1
38    0   0    1    1
39    1   1    1    0
40    0   1    0    0
41    1   0    0    1
42    1   1    0    0
43    1   0    1    1
44    1   0    1    0
45    1   0    0    1
46    0   0    1    0

D-Efficiency Approximation: [1] 0.417

Measuring design of size 46
Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		151
        Multiplications: 	38
        Divisions: 		0
        Logical: 		0
        Reads: 			331
        Writes: 		65
        Comparisons:		14
        Gotos: 			0
        
 building the original code:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -DORIGINAL -o __orio_perftest_original.exe __orio_perftest1.c timer_cpu.o -lm
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest1.exe __orio_perftest1.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest1.exe  
Program Test Output: 
{'[1, 2, 5, 1, 6, 6, 1, 0, 14, 0, 29, 1, 0, 1, 1, 0, 0, 0]' : 0.753447}
{'[1, 2, 5, 1, 6, 6, 1, 0, 14, 0, 29, 1, 0, 1, 1, 0, 0, 0]' : 0.753726}
{'[1, 2, 5, 1, 6, 6, 1, 0, 14, 0, 29, 1, 0, 1, 1, 0, 0, 0]' : 0.754989}
{'[1, 2, 5, 1, 6, 6, 1, 0, 14, 0, 29, 1, 0, 1, 1, 0, 0, 0]' : 0.755768}
{'[1, 2, 5, 1, 6, 6, 1, 0, 14, 0, 29, 1, 0, 1, 1, 0, 0, 0]' : 0.754301}
{'[1, 2, 5, 1, 6, 6, 1, 0, 14, 0, 29, 1, 0, 1, 1, 0, 0, 0]' : 0.753874}
{'[1, 2, 5, 1, 6, 6, 1, 0, 14, 0, 29, 1, 0, 1, 1, 0, 0, 0]' : 0.753832}
{'[1, 2, 5, 1, 6, 6, 1, 0, 14, 0, 29, 1, 0, 1, 1, 0, 0, 0]' : 0.75378}
{'[1, 2, 5, 1, 6, 6, 1, 0, 14, 0, 29, 1, 0, 1, 1, 0, 0, 0]' : 0.753912}
{'[1, 2, 5, 1, 6, 6, 1, 0, 14, 0, 29, 1, 0, 1, 1, 0, 0, 0]' : 0.753963}
{'[1, 2, 5, 1, 6, 6, 1, 0, 14, 0, 29, 1, 0, 1, 1, 0, 0, 0]' : 0.753928}
{'[1, 2, 5, 1, 6, 6, 1, 0, 14, 0, 29, 1, 0, 1, 1, 0, 0, 0]' : 0.754004}
{'[1, 2, 5, 1, 6, 6, 1, 0, 14, 0, 29, 1, 0, 1, 1, 0, 0, 0]' : 0.754178}
{'[1, 2, 5, 1, 6, 6, 1, 0, 14, 0, 29, 1, 0, 1, 1, 0, 0, 0]' : 0.753584}
{'[1, 2, 5, 1, 6, 6, 1, 0, 14, 0, 29, 1, 0, 1, 1, 0, 0, 0]' : 0.75395}
{'[1, 2, 5, 1, 6, 6, 1, 0, 14, 0, 29, 1, 0, 1, 1, 0, 0, 0]' : 0.753978}
{'[1, 2, 5, 1, 6, 6, 1, 0, 14, 0, 29, 1, 0, 1, 1, 0, 0, 0]' : 0.753803}
{'[1, 2, 5, 1, 6, 6, 1, 0, 14, 0, 29, 1, 0, 1, 1, 0, 0, 0]' : 0.753925}
{'[1, 2, 5, 1, 6, 6, 1, 0, 14, 0, 29, 1, 0, 1, 1, 0, 0, 0]' : 0.754084}
{'[1, 2, 5, 1, 6, 6, 1, 0, 14, 0, 29, 1, 0, 1, 1, 0, 0, 0]' : 0.753894}
{'[1, 2, 5, 1, 6, 6, 1, 0, 14, 0, 29, 1, 0, 1, 1, 0, 0, 0]' : 0.754004}
{'[1, 2, 5, 1, 6, 6, 1, 0, 14, 0, 29, 1, 0, 1, 1, 0, 0, 0]' : 0.754024}
{'[1, 2, 5, 1, 6, 6, 1, 0, 14, 0, 29, 1, 0, 1, 1, 0, 0, 0]' : 0.754074}
{'[1, 2, 5, 1, 6, 6, 1, 0, 14, 0, 29, 1, 0, 1, 1, 0, 0, 0]' : 0.753973}
{'[1, 2, 5, 1, 6, 6, 1, 0, 14, 0, 29, 1, 0, 1, 1, 0, 0, 0]' : 0.754118}
{'[1, 2, 5, 1, 6, 6, 1, 0, 14, 0, 29, 1, 0, 1, 1, 0, 0, 0]' : 0.754089}
{'[1, 2, 5, 1, 6, 6, 1, 0, 14, 0, 29, 1, 0, 1, 1, 0, 0, 0]' : 0.754025}
{'[1, 2, 5, 1, 6, 6, 1, 0, 14, 0, 29, 1, 0, 1, 1, 0, 0, 0]' : 0.75396}
{'[1, 2, 5, 1, 6, 6, 1, 0, 14, 0, 29, 1, 0, 1, 1, 0, 0, 0]' : 0.753693}
{'[1, 2, 5, 1, 6, 6, 1, 0, 14, 0, 29, 1, 0, 1, 1, 0, 0, 0]' : 0.753761}

out:
 ["{'[1, 2, 5, 1, 6, 6, 1, 0, 14, 0, 29, 1, 0, 1, 1, 0, 0, 0]' : 0.753447}", "{'[1, 2, 5, 1, 6, 6, 1, 0, 14, 0, 29, 1, 0, 1, 1, 0, 0, 0]' : 0.753726}", "{'[1, 2, 5, 1, 6, 6, 1, 0, 14, 0, 29, 1, 0, 1, 1, 0, 0, 0]' : 0.754989}", "{'[1, 2, 5, 1, 6, 6, 1, 0, 14, 0, 29, 1, 0, 1, 1, 0, 0, 0]' : 0.755768}", "{'[1, 2, 5, 1, 6, 6, 1, 0, 14, 0, 29, 1, 0, 1, 1, 0, 0, 0]' : 0.754301}", "{'[1, 2, 5, 1, 6, 6, 1, 0, 14, 0, 29, 1, 0, 1, 1, 0, 0, 0]' : 0.753874}", "{'[1, 2, 5, 1, 6, 6, 1, 0, 14, 0, 29, 1, 0, 1, 1, 0, 0, 0]' : 0.753832}", "{'[1, 2, 5, 1, 6, 6, 1, 0, 14, 0, 29, 1, 0, 1, 1, 0, 0, 0]' : 0.75378}", "{'[1, 2, 5, 1, 6, 6, 1, 0, 14, 0, 29, 1, 0, 1, 1, 0, 0, 0]' : 0.753912}", "{'[1, 2, 5, 1, 6, 6, 1, 0, 14, 0, 29, 1, 0, 1, 1, 0, 0, 0]' : 0.753963}", "{'[1, 2, 5, 1, 6, 6, 1, 0, 14, 0, 29, 1, 0, 1, 1, 0, 0, 0]' : 0.753928}", "{'[1, 2, 5, 1, 6, 6, 1, 0, 14, 0, 29, 1, 0, 1, 1, 0, 0, 0]' : 0.754004}", "{'[1, 2, 5, 1, 6, 6, 1, 0, 14, 0, 29, 1, 0, 1, 1, 0, 0, 0]' : 0.754178}", "{'[1, 2, 5, 1, 6, 6, 1, 0, 14, 0, 29, 1, 0, 1, 1, 0, 0, 0]' : 0.753584}", "{'[1, 2, 5, 1, 6, 6, 1, 0, 14, 0, 29, 1, 0, 1, 1, 0, 0, 0]' : 0.75395}", "{'[1, 2, 5, 1, 6, 6, 1, 0, 14, 0, 29, 1, 0, 1, 1, 0, 0, 0]' : 0.753978}", "{'[1, 2, 5, 1, 6, 6, 1, 0, 14, 0, 29, 1, 0, 1, 1, 0, 0, 0]' : 0.753803}", "{'[1, 2, 5, 1, 6, 6, 1, 0, 14, 0, 29, 1, 0, 1, 1, 0, 0, 0]' : 0.753925}", "{'[1, 2, 5, 1, 6, 6, 1, 0, 14, 0, 29, 1, 0, 1, 1, 0, 0, 0]' : 0.754084}", "{'[1, 2, 5, 1, 6, 6, 1, 0, 14, 0, 29, 1, 0, 1, 1, 0, 0, 0]' : 0.753894}", "{'[1, 2, 5, 1, 6, 6, 1, 0, 14, 0, 29, 1, 0, 1, 1, 0, 0, 0]' : 0.754004}", "{'[1, 2, 5, 1, 6, 6, 1, 0, 14, 0, 29, 1, 0, 1, 1, 0, 0, 0]' : 0.754024}", "{'[1, 2, 5, 1, 6, 6, 1, 0, 14, 0, 29, 1, 0, 1, 1, 0, 0, 0]' : 0.754074}", "{'[1, 2, 5, 1, 6, 6, 1, 0, 14, 0, 29, 1, 0, 1, 1, 0, 0, 0]' : 0.753973}", "{'[1, 2, 5, 1, 6, 6, 1, 0, 14, 0, 29, 1, 0, 1, 1, 0, 0, 0]' : 0.754118}", "{'[1, 2, 5, 1, 6, 6, 1, 0, 14, 0, 29, 1, 0, 1, 1, 0, 0, 0]' : 0.754089}", "{'[1, 2, 5, 1, 6, 6, 1, 0, 14, 0, 29, 1, 0, 1, 1, 0, 0, 0]' : 0.754025}", "{'[1, 2, 5, 1, 6, 6, 1, 0, 14, 0, 29, 1, 0, 1, 1, 0, 0, 0]' : 0.75396}", "{'[1, 2, 5, 1, 6, 6, 1, 0, 14, 0, 29, 1, 0, 1, 1, 0, 0, 0]' : 0.753693}", "{'[1, 2, 5, 1, 6, 6, 1, 0, 14, 0, 29, 1, 0, 1, 1, 0, 0, 0]' : 0.753761}"]
returning from 'run': {'[1, 2, 5, 1, 6, 6, 1, 0, 14, 0, 29, 1, 0, 1, 1, 0, 0, 0]': ([0.753447, 0.753726, 0.754989, 0.755768, 0.754301, 0.753874, 0.753832, 0.75378, 0.753912, 0.753963, 0.753928, 0.754004, 0.754178, 0.753584, 0.75395, 0.753978, 0.753803, 0.753925, 0.754084, 0.753894, 0.754004, 0.754024, 0.754074, 0.753973, 0.754118, 0.754089, 0.754025, 0.75396, 0.753693, 0.753761], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 2, 5, 1, 6, 6, 1, 0, 14, 0, 29, 1, 0, 1, 1, 0, 0, 0]': ([0.753447, 0.753726, 0.754989, 0.755768, 0.754301, 0.753874, 0.753832, 0.75378, 0.753912, 0.753963, 0.753928, 0.754004, 0.754178, 0.753584, 0.75395, 0.753978, 0.753803, 0.753925, 0.754084, 0.753894, 0.754004, 0.754024, 0.754074, 0.753973, 0.754118, 0.754089, 0.754025, 0.75396, 0.753693, 0.753761], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	154
        Max loop nest depth: 	6
        Additions: 		9106
        Multiplications: 	1972
        Divisions: 		0
        Logical: 		0
        Reads: 			13451
        Writes: 		1424
        Comparisons:		154
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest2.exe __orio_perftest2.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest2.exe  
Program Test Output: 
{'[2, 3, 1, 4, 4, 0, 1, 1, 17, 24, 0, 14, 2, 0, 0, 0, 1, 0]' : 0.538897}
{'[2, 3, 1, 4, 4, 0, 1, 1, 17, 24, 0, 14, 2, 0, 0, 0, 1, 0]' : 0.517925}
{'[2, 3, 1, 4, 4, 0, 1, 1, 17, 24, 0, 14, 2, 0, 0, 0, 1, 0]' : 0.539628}
{'[2, 3, 1, 4, 4, 0, 1, 1, 17, 24, 0, 14, 2, 0, 0, 0, 1, 0]' : 0.516796}
{'[2, 3, 1, 4, 4, 0, 1, 1, 17, 24, 0, 14, 2, 0, 0, 0, 1, 0]' : 0.51076}
{'[2, 3, 1, 4, 4, 0, 1, 1, 17, 24, 0, 14, 2, 0, 0, 0, 1, 0]' : 0.51052}
{'[2, 3, 1, 4, 4, 0, 1, 1, 17, 24, 0, 14, 2, 0, 0, 0, 1, 0]' : 0.509823}
{'[2, 3, 1, 4, 4, 0, 1, 1, 17, 24, 0, 14, 2, 0, 0, 0, 1, 0]' : 0.509334}
{'[2, 3, 1, 4, 4, 0, 1, 1, 17, 24, 0, 14, 2, 0, 0, 0, 1, 0]' : 0.510397}
{'[2, 3, 1, 4, 4, 0, 1, 1, 17, 24, 0, 14, 2, 0, 0, 0, 1, 0]' : 0.510123}
{'[2, 3, 1, 4, 4, 0, 1, 1, 17, 24, 0, 14, 2, 0, 0, 0, 1, 0]' : 0.510247}
{'[2, 3, 1, 4, 4, 0, 1, 1, 17, 24, 0, 14, 2, 0, 0, 0, 1, 0]' : 0.511041}
{'[2, 3, 1, 4, 4, 0, 1, 1, 17, 24, 0, 14, 2, 0, 0, 0, 1, 0]' : 0.510042}
{'[2, 3, 1, 4, 4, 0, 1, 1, 17, 24, 0, 14, 2, 0, 0, 0, 1, 0]' : 0.509361}
{'[2, 3, 1, 4, 4, 0, 1, 1, 17, 24, 0, 14, 2, 0, 0, 0, 1, 0]' : 0.510226}
{'[2, 3, 1, 4, 4, 0, 1, 1, 17, 24, 0, 14, 2, 0, 0, 0, 1, 0]' : 0.510162}
{'[2, 3, 1, 4, 4, 0, 1, 1, 17, 24, 0, 14, 2, 0, 0, 0, 1, 0]' : 0.510671}
{'[2, 3, 1, 4, 4, 0, 1, 1, 17, 24, 0, 14, 2, 0, 0, 0, 1, 0]' : 0.511147}
{'[2, 3, 1, 4, 4, 0, 1, 1, 17, 24, 0, 14, 2, 0, 0, 0, 1, 0]' : 0.510815}
{'[2, 3, 1, 4, 4, 0, 1, 1, 17, 24, 0, 14, 2, 0, 0, 0, 1, 0]' : 0.509852}
{'[2, 3, 1, 4, 4, 0, 1, 1, 17, 24, 0, 14, 2, 0, 0, 0, 1, 0]' : 0.509882}
{'[2, 3, 1, 4, 4, 0, 1, 1, 17, 24, 0, 14, 2, 0, 0, 0, 1, 0]' : 0.511463}
{'[2, 3, 1, 4, 4, 0, 1, 1, 17, 24, 0, 14, 2, 0, 0, 0, 1, 0]' : 0.510227}
{'[2, 3, 1, 4, 4, 0, 1, 1, 17, 24, 0, 14, 2, 0, 0, 0, 1, 0]' : 0.509361}
{'[2, 3, 1, 4, 4, 0, 1, 1, 17, 24, 0, 14, 2, 0, 0, 0, 1, 0]' : 0.509284}
{'[2, 3, 1, 4, 4, 0, 1, 1, 17, 24, 0, 14, 2, 0, 0, 0, 1, 0]' : 0.509886}
{'[2, 3, 1, 4, 4, 0, 1, 1, 17, 24, 0, 14, 2, 0, 0, 0, 1, 0]' : 0.51152}
{'[2, 3, 1, 4, 4, 0, 1, 1, 17, 24, 0, 14, 2, 0, 0, 0, 1, 0]' : 0.510246}
{'[2, 3, 1, 4, 4, 0, 1, 1, 17, 24, 0, 14, 2, 0, 0, 0, 1, 0]' : 0.510733}
{'[2, 3, 1, 4, 4, 0, 1, 1, 17, 24, 0, 14, 2, 0, 0, 0, 1, 0]' : 0.510273}

out:
 ["{'[2, 3, 1, 4, 4, 0, 1, 1, 17, 24, 0, 14, 2, 0, 0, 0, 1, 0]' : 0.538897}", "{'[2, 3, 1, 4, 4, 0, 1, 1, 17, 24, 0, 14, 2, 0, 0, 0, 1, 0]' : 0.517925}", "{'[2, 3, 1, 4, 4, 0, 1, 1, 17, 24, 0, 14, 2, 0, 0, 0, 1, 0]' : 0.539628}", "{'[2, 3, 1, 4, 4, 0, 1, 1, 17, 24, 0, 14, 2, 0, 0, 0, 1, 0]' : 0.516796}", "{'[2, 3, 1, 4, 4, 0, 1, 1, 17, 24, 0, 14, 2, 0, 0, 0, 1, 0]' : 0.51076}", "{'[2, 3, 1, 4, 4, 0, 1, 1, 17, 24, 0, 14, 2, 0, 0, 0, 1, 0]' : 0.51052}", "{'[2, 3, 1, 4, 4, 0, 1, 1, 17, 24, 0, 14, 2, 0, 0, 0, 1, 0]' : 0.509823}", "{'[2, 3, 1, 4, 4, 0, 1, 1, 17, 24, 0, 14, 2, 0, 0, 0, 1, 0]' : 0.509334}", "{'[2, 3, 1, 4, 4, 0, 1, 1, 17, 24, 0, 14, 2, 0, 0, 0, 1, 0]' : 0.510397}", "{'[2, 3, 1, 4, 4, 0, 1, 1, 17, 24, 0, 14, 2, 0, 0, 0, 1, 0]' : 0.510123}", "{'[2, 3, 1, 4, 4, 0, 1, 1, 17, 24, 0, 14, 2, 0, 0, 0, 1, 0]' : 0.510247}", "{'[2, 3, 1, 4, 4, 0, 1, 1, 17, 24, 0, 14, 2, 0, 0, 0, 1, 0]' : 0.511041}", "{'[2, 3, 1, 4, 4, 0, 1, 1, 17, 24, 0, 14, 2, 0, 0, 0, 1, 0]' : 0.510042}", "{'[2, 3, 1, 4, 4, 0, 1, 1, 17, 24, 0, 14, 2, 0, 0, 0, 1, 0]' : 0.509361}", "{'[2, 3, 1, 4, 4, 0, 1, 1, 17, 24, 0, 14, 2, 0, 0, 0, 1, 0]' : 0.510226}", "{'[2, 3, 1, 4, 4, 0, 1, 1, 17, 24, 0, 14, 2, 0, 0, 0, 1, 0]' : 0.510162}", "{'[2, 3, 1, 4, 4, 0, 1, 1, 17, 24, 0, 14, 2, 0, 0, 0, 1, 0]' : 0.510671}", "{'[2, 3, 1, 4, 4, 0, 1, 1, 17, 24, 0, 14, 2, 0, 0, 0, 1, 0]' : 0.511147}", "{'[2, 3, 1, 4, 4, 0, 1, 1, 17, 24, 0, 14, 2, 0, 0, 0, 1, 0]' : 0.510815}", "{'[2, 3, 1, 4, 4, 0, 1, 1, 17, 24, 0, 14, 2, 0, 0, 0, 1, 0]' : 0.509852}", "{'[2, 3, 1, 4, 4, 0, 1, 1, 17, 24, 0, 14, 2, 0, 0, 0, 1, 0]' : 0.509882}", "{'[2, 3, 1, 4, 4, 0, 1, 1, 17, 24, 0, 14, 2, 0, 0, 0, 1, 0]' : 0.511463}", "{'[2, 3, 1, 4, 4, 0, 1, 1, 17, 24, 0, 14, 2, 0, 0, 0, 1, 0]' : 0.510227}", "{'[2, 3, 1, 4, 4, 0, 1, 1, 17, 24, 0, 14, 2, 0, 0, 0, 1, 0]' : 0.509361}", "{'[2, 3, 1, 4, 4, 0, 1, 1, 17, 24, 0, 14, 2, 0, 0, 0, 1, 0]' : 0.509284}", "{'[2, 3, 1, 4, 4, 0, 1, 1, 17, 24, 0, 14, 2, 0, 0, 0, 1, 0]' : 0.509886}", "{'[2, 3, 1, 4, 4, 0, 1, 1, 17, 24, 0, 14, 2, 0, 0, 0, 1, 0]' : 0.51152}", "{'[2, 3, 1, 4, 4, 0, 1, 1, 17, 24, 0, 14, 2, 0, 0, 0, 1, 0]' : 0.510246}", "{'[2, 3, 1, 4, 4, 0, 1, 1, 17, 24, 0, 14, 2, 0, 0, 0, 1, 0]' : 0.510733}", "{'[2, 3, 1, 4, 4, 0, 1, 1, 17, 24, 0, 14, 2, 0, 0, 0, 1, 0]' : 0.510273}"]
returning from 'run': {'[2, 3, 1, 4, 4, 0, 1, 1, 17, 24, 0, 14, 2, 0, 0, 0, 1, 0]': ([0.538897, 0.517925, 0.539628, 0.516796, 0.51076, 0.51052, 0.509823, 0.509334, 0.510397, 0.510123, 0.510247, 0.511041, 0.510042, 0.509361, 0.510226, 0.510162, 0.510671, 0.511147, 0.510815, 0.509852, 0.509882, 0.511463, 0.510227, 0.509361, 0.509284, 0.509886, 0.51152, 0.510246, 0.510733, 0.510273], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 3, 1, 4, 4, 0, 1, 1, 17, 24, 0, 14, 2, 0, 0, 0, 1, 0]': ([0.538897, 0.517925, 0.539628, 0.516796, 0.51076, 0.51052, 0.509823, 0.509334, 0.510397, 0.510123, 0.510247, 0.511041, 0.510042, 0.509361, 0.510226, 0.510162, 0.510671, 0.511147, 0.510815, 0.509852, 0.509882, 0.511463, 0.510227, 0.509361, 0.509284, 0.509886, 0.51152, 0.510246, 0.510733, 0.510273], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	37
        Max loop nest depth: 	6
        Additions: 		5470
        Multiplications: 	1444
        Divisions: 		0
        Logical: 		0
        Reads: 			8226
        Writes: 		837
        Comparisons:		37
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest3.exe __orio_perftest3.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest3.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest3.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest3.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 527, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors, data)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 408, in dopt_anova
    budget)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 333, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 279, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest3.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 527, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors, data)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 408, in dopt_anova
    budget)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 333, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 279, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	41
        Max loop nest depth: 	5
        Additions: 		1142
        Multiplications: 	480
        Divisions: 		0
        Logical: 		0
        Reads: 			2281
        Writes: 		405
        Comparisons:		41
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest4.exe __orio_perftest4.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest4.exe  
Program Test Output: 
{'[5, 3, 5, 0, 5, 0, 0, 1, 9, 2, 9, 0, 1, 1, 0, 1, 0, 0]' : 0.2353}
{'[5, 3, 5, 0, 5, 0, 0, 1, 9, 2, 9, 0, 1, 1, 0, 1, 0, 0]' : 0.236493}
{'[5, 3, 5, 0, 5, 0, 0, 1, 9, 2, 9, 0, 1, 1, 0, 1, 0, 0]' : 0.236756}
{'[5, 3, 5, 0, 5, 0, 0, 1, 9, 2, 9, 0, 1, 1, 0, 1, 0, 0]' : 0.240922}
{'[5, 3, 5, 0, 5, 0, 0, 1, 9, 2, 9, 0, 1, 1, 0, 1, 0, 0]' : 0.23557}
{'[5, 3, 5, 0, 5, 0, 0, 1, 9, 2, 9, 0, 1, 1, 0, 1, 0, 0]' : 0.235454}
{'[5, 3, 5, 0, 5, 0, 0, 1, 9, 2, 9, 0, 1, 1, 0, 1, 0, 0]' : 0.241091}
{'[5, 3, 5, 0, 5, 0, 0, 1, 9, 2, 9, 0, 1, 1, 0, 1, 0, 0]' : 0.235343}
{'[5, 3, 5, 0, 5, 0, 0, 1, 9, 2, 9, 0, 1, 1, 0, 1, 0, 0]' : 0.235421}
{'[5, 3, 5, 0, 5, 0, 0, 1, 9, 2, 9, 0, 1, 1, 0, 1, 0, 0]' : 0.235405}
{'[5, 3, 5, 0, 5, 0, 0, 1, 9, 2, 9, 0, 1, 1, 0, 1, 0, 0]' : 0.236176}
{'[5, 3, 5, 0, 5, 0, 0, 1, 9, 2, 9, 0, 1, 1, 0, 1, 0, 0]' : 0.288309}
{'[5, 3, 5, 0, 5, 0, 0, 1, 9, 2, 9, 0, 1, 1, 0, 1, 0, 0]' : 0.239015}
{'[5, 3, 5, 0, 5, 0, 0, 1, 9, 2, 9, 0, 1, 1, 0, 1, 0, 0]' : 0.2355}
{'[5, 3, 5, 0, 5, 0, 0, 1, 9, 2, 9, 0, 1, 1, 0, 1, 0, 0]' : 0.236974}
{'[5, 3, 5, 0, 5, 0, 0, 1, 9, 2, 9, 0, 1, 1, 0, 1, 0, 0]' : 0.236188}
{'[5, 3, 5, 0, 5, 0, 0, 1, 9, 2, 9, 0, 1, 1, 0, 1, 0, 0]' : 0.236554}
{'[5, 3, 5, 0, 5, 0, 0, 1, 9, 2, 9, 0, 1, 1, 0, 1, 0, 0]' : 0.23653}
{'[5, 3, 5, 0, 5, 0, 0, 1, 9, 2, 9, 0, 1, 1, 0, 1, 0, 0]' : 0.235467}
{'[5, 3, 5, 0, 5, 0, 0, 1, 9, 2, 9, 0, 1, 1, 0, 1, 0, 0]' : 0.236075}
{'[5, 3, 5, 0, 5, 0, 0, 1, 9, 2, 9, 0, 1, 1, 0, 1, 0, 0]' : 0.236715}
{'[5, 3, 5, 0, 5, 0, 0, 1, 9, 2, 9, 0, 1, 1, 0, 1, 0, 0]' : 0.236243}
{'[5, 3, 5, 0, 5, 0, 0, 1, 9, 2, 9, 0, 1, 1, 0, 1, 0, 0]' : 0.236078}
{'[5, 3, 5, 0, 5, 0, 0, 1, 9, 2, 9, 0, 1, 1, 0, 1, 0, 0]' : 0.236761}
{'[5, 3, 5, 0, 5, 0, 0, 1, 9, 2, 9, 0, 1, 1, 0, 1, 0, 0]' : 0.236738}
{'[5, 3, 5, 0, 5, 0, 0, 1, 9, 2, 9, 0, 1, 1, 0, 1, 0, 0]' : 0.236337}
{'[5, 3, 5, 0, 5, 0, 0, 1, 9, 2, 9, 0, 1, 1, 0, 1, 0, 0]' : 0.239874}
{'[5, 3, 5, 0, 5, 0, 0, 1, 9, 2, 9, 0, 1, 1, 0, 1, 0, 0]' : 0.235738}
{'[5, 3, 5, 0, 5, 0, 0, 1, 9, 2, 9, 0, 1, 1, 0, 1, 0, 0]' : 0.236395}
{'[5, 3, 5, 0, 5, 0, 0, 1, 9, 2, 9, 0, 1, 1, 0, 1, 0, 0]' : 0.236186}

out:
 ["{'[5, 3, 5, 0, 5, 0, 0, 1, 9, 2, 9, 0, 1, 1, 0, 1, 0, 0]' : 0.2353}", "{'[5, 3, 5, 0, 5, 0, 0, 1, 9, 2, 9, 0, 1, 1, 0, 1, 0, 0]' : 0.236493}", "{'[5, 3, 5, 0, 5, 0, 0, 1, 9, 2, 9, 0, 1, 1, 0, 1, 0, 0]' : 0.236756}", "{'[5, 3, 5, 0, 5, 0, 0, 1, 9, 2, 9, 0, 1, 1, 0, 1, 0, 0]' : 0.240922}", "{'[5, 3, 5, 0, 5, 0, 0, 1, 9, 2, 9, 0, 1, 1, 0, 1, 0, 0]' : 0.23557}", "{'[5, 3, 5, 0, 5, 0, 0, 1, 9, 2, 9, 0, 1, 1, 0, 1, 0, 0]' : 0.235454}", "{'[5, 3, 5, 0, 5, 0, 0, 1, 9, 2, 9, 0, 1, 1, 0, 1, 0, 0]' : 0.241091}", "{'[5, 3, 5, 0, 5, 0, 0, 1, 9, 2, 9, 0, 1, 1, 0, 1, 0, 0]' : 0.235343}", "{'[5, 3, 5, 0, 5, 0, 0, 1, 9, 2, 9, 0, 1, 1, 0, 1, 0, 0]' : 0.235421}", "{'[5, 3, 5, 0, 5, 0, 0, 1, 9, 2, 9, 0, 1, 1, 0, 1, 0, 0]' : 0.235405}", "{'[5, 3, 5, 0, 5, 0, 0, 1, 9, 2, 9, 0, 1, 1, 0, 1, 0, 0]' : 0.236176}", "{'[5, 3, 5, 0, 5, 0, 0, 1, 9, 2, 9, 0, 1, 1, 0, 1, 0, 0]' : 0.288309}", "{'[5, 3, 5, 0, 5, 0, 0, 1, 9, 2, 9, 0, 1, 1, 0, 1, 0, 0]' : 0.239015}", "{'[5, 3, 5, 0, 5, 0, 0, 1, 9, 2, 9, 0, 1, 1, 0, 1, 0, 0]' : 0.2355}", "{'[5, 3, 5, 0, 5, 0, 0, 1, 9, 2, 9, 0, 1, 1, 0, 1, 0, 0]' : 0.236974}", "{'[5, 3, 5, 0, 5, 0, 0, 1, 9, 2, 9, 0, 1, 1, 0, 1, 0, 0]' : 0.236188}", "{'[5, 3, 5, 0, 5, 0, 0, 1, 9, 2, 9, 0, 1, 1, 0, 1, 0, 0]' : 0.236554}", "{'[5, 3, 5, 0, 5, 0, 0, 1, 9, 2, 9, 0, 1, 1, 0, 1, 0, 0]' : 0.23653}", "{'[5, 3, 5, 0, 5, 0, 0, 1, 9, 2, 9, 0, 1, 1, 0, 1, 0, 0]' : 0.235467}", "{'[5, 3, 5, 0, 5, 0, 0, 1, 9, 2, 9, 0, 1, 1, 0, 1, 0, 0]' : 0.236075}", "{'[5, 3, 5, 0, 5, 0, 0, 1, 9, 2, 9, 0, 1, 1, 0, 1, 0, 0]' : 0.236715}", "{'[5, 3, 5, 0, 5, 0, 0, 1, 9, 2, 9, 0, 1, 1, 0, 1, 0, 0]' : 0.236243}", "{'[5, 3, 5, 0, 5, 0, 0, 1, 9, 2, 9, 0, 1, 1, 0, 1, 0, 0]' : 0.236078}", "{'[5, 3, 5, 0, 5, 0, 0, 1, 9, 2, 9, 0, 1, 1, 0, 1, 0, 0]' : 0.236761}", "{'[5, 3, 5, 0, 5, 0, 0, 1, 9, 2, 9, 0, 1, 1, 0, 1, 0, 0]' : 0.236738}", "{'[5, 3, 5, 0, 5, 0, 0, 1, 9, 2, 9, 0, 1, 1, 0, 1, 0, 0]' : 0.236337}", "{'[5, 3, 5, 0, 5, 0, 0, 1, 9, 2, 9, 0, 1, 1, 0, 1, 0, 0]' : 0.239874}", "{'[5, 3, 5, 0, 5, 0, 0, 1, 9, 2, 9, 0, 1, 1, 0, 1, 0, 0]' : 0.235738}", "{'[5, 3, 5, 0, 5, 0, 0, 1, 9, 2, 9, 0, 1, 1, 0, 1, 0, 0]' : 0.236395}", "{'[5, 3, 5, 0, 5, 0, 0, 1, 9, 2, 9, 0, 1, 1, 0, 1, 0, 0]' : 0.236186}"]
returning from 'run': {'[5, 3, 5, 0, 5, 0, 0, 1, 9, 2, 9, 0, 1, 1, 0, 1, 0, 0]': ([0.2353, 0.236493, 0.236756, 0.240922, 0.23557, 0.235454, 0.241091, 0.235343, 0.235421, 0.235405, 0.236176, 0.288309, 0.239015, 0.2355, 0.236974, 0.236188, 0.236554, 0.23653, 0.235467, 0.236075, 0.236715, 0.236243, 0.236078, 0.236761, 0.236738, 0.236337, 0.239874, 0.235738, 0.236395, 0.236186], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 3, 5, 0, 5, 0, 0, 1, 9, 2, 9, 0, 1, 1, 0, 1, 0, 0]': ([0.2353, 0.236493, 0.236756, 0.240922, 0.23557, 0.235454, 0.241091, 0.235343, 0.235421, 0.235405, 0.236176, 0.288309, 0.239015, 0.2355, 0.236974, 0.236188, 0.236554, 0.23653, 0.235467, 0.236075, 0.236715, 0.236243, 0.236078, 0.236761, 0.236738, 0.236337, 0.239874, 0.235738, 0.236395, 0.236186], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = iii
Code stats:
        Number of loops: 	23
        Max loop nest depth: 	5
        Additions: 		1298
        Multiplications: 	558
        Divisions: 		0
        Logical: 		0
        Reads: 			2512
        Writes: 		431
        Comparisons:		23
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest5.exe __orio_perftest5.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest5.exe  
Program Test Output: 
{'[5, 0, 2, 3, 5, 6, 1, 1, 15, 0, 21, 7, 1, 0, 1, 1, 0, 1]' : 0.341512}
{'[5, 0, 2, 3, 5, 6, 1, 1, 15, 0, 21, 7, 1, 0, 1, 1, 0, 1]' : 0.341948}
{'[5, 0, 2, 3, 5, 6, 1, 1, 15, 0, 21, 7, 1, 0, 1, 1, 0, 1]' : 0.341691}
{'[5, 0, 2, 3, 5, 6, 1, 1, 15, 0, 21, 7, 1, 0, 1, 1, 0, 1]' : 0.342139}
{'[5, 0, 2, 3, 5, 6, 1, 1, 15, 0, 21, 7, 1, 0, 1, 1, 0, 1]' : 0.341643}
{'[5, 0, 2, 3, 5, 6, 1, 1, 15, 0, 21, 7, 1, 0, 1, 1, 0, 1]' : 0.341326}
{'[5, 0, 2, 3, 5, 6, 1, 1, 15, 0, 21, 7, 1, 0, 1, 1, 0, 1]' : 0.341376}
{'[5, 0, 2, 3, 5, 6, 1, 1, 15, 0, 21, 7, 1, 0, 1, 1, 0, 1]' : 0.350843}
{'[5, 0, 2, 3, 5, 6, 1, 1, 15, 0, 21, 7, 1, 0, 1, 1, 0, 1]' : 0.34615}
{'[5, 0, 2, 3, 5, 6, 1, 1, 15, 0, 21, 7, 1, 0, 1, 1, 0, 1]' : 0.34933}
{'[5, 0, 2, 3, 5, 6, 1, 1, 15, 0, 21, 7, 1, 0, 1, 1, 0, 1]' : 0.342062}
{'[5, 0, 2, 3, 5, 6, 1, 1, 15, 0, 21, 7, 1, 0, 1, 1, 0, 1]' : 0.343147}
{'[5, 0, 2, 3, 5, 6, 1, 1, 15, 0, 21, 7, 1, 0, 1, 1, 0, 1]' : 0.347344}
{'[5, 0, 2, 3, 5, 6, 1, 1, 15, 0, 21, 7, 1, 0, 1, 1, 0, 1]' : 0.349758}
{'[5, 0, 2, 3, 5, 6, 1, 1, 15, 0, 21, 7, 1, 0, 1, 1, 0, 1]' : 0.34171}
{'[5, 0, 2, 3, 5, 6, 1, 1, 15, 0, 21, 7, 1, 0, 1, 1, 0, 1]' : 0.34152}
{'[5, 0, 2, 3, 5, 6, 1, 1, 15, 0, 21, 7, 1, 0, 1, 1, 0, 1]' : 0.341732}
{'[5, 0, 2, 3, 5, 6, 1, 1, 15, 0, 21, 7, 1, 0, 1, 1, 0, 1]' : 0.341464}
{'[5, 0, 2, 3, 5, 6, 1, 1, 15, 0, 21, 7, 1, 0, 1, 1, 0, 1]' : 0.372058}
{'[5, 0, 2, 3, 5, 6, 1, 1, 15, 0, 21, 7, 1, 0, 1, 1, 0, 1]' : 0.341538}
{'[5, 0, 2, 3, 5, 6, 1, 1, 15, 0, 21, 7, 1, 0, 1, 1, 0, 1]' : 0.346844}
{'[5, 0, 2, 3, 5, 6, 1, 1, 15, 0, 21, 7, 1, 0, 1, 1, 0, 1]' : 0.348085}
{'[5, 0, 2, 3, 5, 6, 1, 1, 15, 0, 21, 7, 1, 0, 1, 1, 0, 1]' : 0.341269}
{'[5, 0, 2, 3, 5, 6, 1, 1, 15, 0, 21, 7, 1, 0, 1, 1, 0, 1]' : 0.346051}
{'[5, 0, 2, 3, 5, 6, 1, 1, 15, 0, 21, 7, 1, 0, 1, 1, 0, 1]' : 0.340981}
{'[5, 0, 2, 3, 5, 6, 1, 1, 15, 0, 21, 7, 1, 0, 1, 1, 0, 1]' : 0.341573}
{'[5, 0, 2, 3, 5, 6, 1, 1, 15, 0, 21, 7, 1, 0, 1, 1, 0, 1]' : 0.346732}
{'[5, 0, 2, 3, 5, 6, 1, 1, 15, 0, 21, 7, 1, 0, 1, 1, 0, 1]' : 0.341636}
{'[5, 0, 2, 3, 5, 6, 1, 1, 15, 0, 21, 7, 1, 0, 1, 1, 0, 1]' : 0.341719}
{'[5, 0, 2, 3, 5, 6, 1, 1, 15, 0, 21, 7, 1, 0, 1, 1, 0, 1]' : 0.346738}

out:
 ["{'[5, 0, 2, 3, 5, 6, 1, 1, 15, 0, 21, 7, 1, 0, 1, 1, 0, 1]' : 0.341512}", "{'[5, 0, 2, 3, 5, 6, 1, 1, 15, 0, 21, 7, 1, 0, 1, 1, 0, 1]' : 0.341948}", "{'[5, 0, 2, 3, 5, 6, 1, 1, 15, 0, 21, 7, 1, 0, 1, 1, 0, 1]' : 0.341691}", "{'[5, 0, 2, 3, 5, 6, 1, 1, 15, 0, 21, 7, 1, 0, 1, 1, 0, 1]' : 0.342139}", "{'[5, 0, 2, 3, 5, 6, 1, 1, 15, 0, 21, 7, 1, 0, 1, 1, 0, 1]' : 0.341643}", "{'[5, 0, 2, 3, 5, 6, 1, 1, 15, 0, 21, 7, 1, 0, 1, 1, 0, 1]' : 0.341326}", "{'[5, 0, 2, 3, 5, 6, 1, 1, 15, 0, 21, 7, 1, 0, 1, 1, 0, 1]' : 0.341376}", "{'[5, 0, 2, 3, 5, 6, 1, 1, 15, 0, 21, 7, 1, 0, 1, 1, 0, 1]' : 0.350843}", "{'[5, 0, 2, 3, 5, 6, 1, 1, 15, 0, 21, 7, 1, 0, 1, 1, 0, 1]' : 0.34615}", "{'[5, 0, 2, 3, 5, 6, 1, 1, 15, 0, 21, 7, 1, 0, 1, 1, 0, 1]' : 0.34933}", "{'[5, 0, 2, 3, 5, 6, 1, 1, 15, 0, 21, 7, 1, 0, 1, 1, 0, 1]' : 0.342062}", "{'[5, 0, 2, 3, 5, 6, 1, 1, 15, 0, 21, 7, 1, 0, 1, 1, 0, 1]' : 0.343147}", "{'[5, 0, 2, 3, 5, 6, 1, 1, 15, 0, 21, 7, 1, 0, 1, 1, 0, 1]' : 0.347344}", "{'[5, 0, 2, 3, 5, 6, 1, 1, 15, 0, 21, 7, 1, 0, 1, 1, 0, 1]' : 0.349758}", "{'[5, 0, 2, 3, 5, 6, 1, 1, 15, 0, 21, 7, 1, 0, 1, 1, 0, 1]' : 0.34171}", "{'[5, 0, 2, 3, 5, 6, 1, 1, 15, 0, 21, 7, 1, 0, 1, 1, 0, 1]' : 0.34152}", "{'[5, 0, 2, 3, 5, 6, 1, 1, 15, 0, 21, 7, 1, 0, 1, 1, 0, 1]' : 0.341732}", "{'[5, 0, 2, 3, 5, 6, 1, 1, 15, 0, 21, 7, 1, 0, 1, 1, 0, 1]' : 0.341464}", "{'[5, 0, 2, 3, 5, 6, 1, 1, 15, 0, 21, 7, 1, 0, 1, 1, 0, 1]' : 0.372058}", "{'[5, 0, 2, 3, 5, 6, 1, 1, 15, 0, 21, 7, 1, 0, 1, 1, 0, 1]' : 0.341538}", "{'[5, 0, 2, 3, 5, 6, 1, 1, 15, 0, 21, 7, 1, 0, 1, 1, 0, 1]' : 0.346844}", "{'[5, 0, 2, 3, 5, 6, 1, 1, 15, 0, 21, 7, 1, 0, 1, 1, 0, 1]' : 0.348085}", "{'[5, 0, 2, 3, 5, 6, 1, 1, 15, 0, 21, 7, 1, 0, 1, 1, 0, 1]' : 0.341269}", "{'[5, 0, 2, 3, 5, 6, 1, 1, 15, 0, 21, 7, 1, 0, 1, 1, 0, 1]' : 0.346051}", "{'[5, 0, 2, 3, 5, 6, 1, 1, 15, 0, 21, 7, 1, 0, 1, 1, 0, 1]' : 0.340981}", "{'[5, 0, 2, 3, 5, 6, 1, 1, 15, 0, 21, 7, 1, 0, 1, 1, 0, 1]' : 0.341573}", "{'[5, 0, 2, 3, 5, 6, 1, 1, 15, 0, 21, 7, 1, 0, 1, 1, 0, 1]' : 0.346732}", "{'[5, 0, 2, 3, 5, 6, 1, 1, 15, 0, 21, 7, 1, 0, 1, 1, 0, 1]' : 0.341636}", "{'[5, 0, 2, 3, 5, 6, 1, 1, 15, 0, 21, 7, 1, 0, 1, 1, 0, 1]' : 0.341719}", "{'[5, 0, 2, 3, 5, 6, 1, 1, 15, 0, 21, 7, 1, 0, 1, 1, 0, 1]' : 0.346738}"]
returning from 'run': {'[5, 0, 2, 3, 5, 6, 1, 1, 15, 0, 21, 7, 1, 0, 1, 1, 0, 1]': ([0.341512, 0.341948, 0.341691, 0.342139, 0.341643, 0.341326, 0.341376, 0.350843, 0.34615, 0.34933, 0.342062, 0.343147, 0.347344, 0.349758, 0.34171, 0.34152, 0.341732, 0.341464, 0.372058, 0.341538, 0.346844, 0.348085, 0.341269, 0.346051, 0.340981, 0.341573, 0.346732, 0.341636, 0.341719, 0.346738], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 0, 2, 3, 5, 6, 1, 1, 15, 0, 21, 7, 1, 0, 1, 1, 0, 1]': ([0.341512, 0.341948, 0.341691, 0.342139, 0.341643, 0.341326, 0.341376, 0.350843, 0.34615, 0.34933, 0.342062, 0.343147, 0.347344, 0.349758, 0.34171, 0.34152, 0.341732, 0.341464, 0.372058, 0.341538, 0.346844, 0.348085, 0.341269, 0.346051, 0.340981, 0.341573, 0.346732, 0.341636, 0.341719, 0.346738], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	26
        Max loop nest depth: 	6
        Additions: 		986
        Multiplications: 	432
        Divisions: 		0
        Logical: 		0
        Reads: 			1972
        Writes: 		358
        Comparisons:		26
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest6.exe __orio_perftest6.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest6.exe  
Program Test Output: 
{'[6, 0, 3, 5, 4, 5, 0, 1, 28, 0, 11, 1, 1, 1, 0, 1, 1, 0]' : 0.232061}
{'[6, 0, 3, 5, 4, 5, 0, 1, 28, 0, 11, 1, 1, 1, 0, 1, 1, 0]' : 0.232257}
{'[6, 0, 3, 5, 4, 5, 0, 1, 28, 0, 11, 1, 1, 1, 0, 1, 1, 0]' : 0.233332}
{'[6, 0, 3, 5, 4, 5, 0, 1, 28, 0, 11, 1, 1, 1, 0, 1, 1, 0]' : 0.232103}
{'[6, 0, 3, 5, 4, 5, 0, 1, 28, 0, 11, 1, 1, 1, 0, 1, 1, 0]' : 0.231777}
{'[6, 0, 3, 5, 4, 5, 0, 1, 28, 0, 11, 1, 1, 1, 0, 1, 1, 0]' : 0.232174}
{'[6, 0, 3, 5, 4, 5, 0, 1, 28, 0, 11, 1, 1, 1, 0, 1, 1, 0]' : 0.231848}
{'[6, 0, 3, 5, 4, 5, 0, 1, 28, 0, 11, 1, 1, 1, 0, 1, 1, 0]' : 0.23188}
{'[6, 0, 3, 5, 4, 5, 0, 1, 28, 0, 11, 1, 1, 1, 0, 1, 1, 0]' : 0.232447}
{'[6, 0, 3, 5, 4, 5, 0, 1, 28, 0, 11, 1, 1, 1, 0, 1, 1, 0]' : 0.232348}
{'[6, 0, 3, 5, 4, 5, 0, 1, 28, 0, 11, 1, 1, 1, 0, 1, 1, 0]' : 0.232191}
{'[6, 0, 3, 5, 4, 5, 0, 1, 28, 0, 11, 1, 1, 1, 0, 1, 1, 0]' : 0.232179}
{'[6, 0, 3, 5, 4, 5, 0, 1, 28, 0, 11, 1, 1, 1, 0, 1, 1, 0]' : 0.231933}
{'[6, 0, 3, 5, 4, 5, 0, 1, 28, 0, 11, 1, 1, 1, 0, 1, 1, 0]' : 0.232391}
{'[6, 0, 3, 5, 4, 5, 0, 1, 28, 0, 11, 1, 1, 1, 0, 1, 1, 0]' : 0.231389}
{'[6, 0, 3, 5, 4, 5, 0, 1, 28, 0, 11, 1, 1, 1, 0, 1, 1, 0]' : 0.231645}
{'[6, 0, 3, 5, 4, 5, 0, 1, 28, 0, 11, 1, 1, 1, 0, 1, 1, 0]' : 0.23204}
{'[6, 0, 3, 5, 4, 5, 0, 1, 28, 0, 11, 1, 1, 1, 0, 1, 1, 0]' : 0.231372}
{'[6, 0, 3, 5, 4, 5, 0, 1, 28, 0, 11, 1, 1, 1, 0, 1, 1, 0]' : 0.231948}
{'[6, 0, 3, 5, 4, 5, 0, 1, 28, 0, 11, 1, 1, 1, 0, 1, 1, 0]' : 0.231818}
{'[6, 0, 3, 5, 4, 5, 0, 1, 28, 0, 11, 1, 1, 1, 0, 1, 1, 0]' : 0.231887}
{'[6, 0, 3, 5, 4, 5, 0, 1, 28, 0, 11, 1, 1, 1, 0, 1, 1, 0]' : 0.232404}
{'[6, 0, 3, 5, 4, 5, 0, 1, 28, 0, 11, 1, 1, 1, 0, 1, 1, 0]' : 0.232286}
{'[6, 0, 3, 5, 4, 5, 0, 1, 28, 0, 11, 1, 1, 1, 0, 1, 1, 0]' : 0.231795}
{'[6, 0, 3, 5, 4, 5, 0, 1, 28, 0, 11, 1, 1, 1, 0, 1, 1, 0]' : 0.231596}
{'[6, 0, 3, 5, 4, 5, 0, 1, 28, 0, 11, 1, 1, 1, 0, 1, 1, 0]' : 0.231642}
{'[6, 0, 3, 5, 4, 5, 0, 1, 28, 0, 11, 1, 1, 1, 0, 1, 1, 0]' : 0.231478}
{'[6, 0, 3, 5, 4, 5, 0, 1, 28, 0, 11, 1, 1, 1, 0, 1, 1, 0]' : 0.232372}
{'[6, 0, 3, 5, 4, 5, 0, 1, 28, 0, 11, 1, 1, 1, 0, 1, 1, 0]' : 0.231442}
{'[6, 0, 3, 5, 4, 5, 0, 1, 28, 0, 11, 1, 1, 1, 0, 1, 1, 0]' : 0.231842}

out:
 ["{'[6, 0, 3, 5, 4, 5, 0, 1, 28, 0, 11, 1, 1, 1, 0, 1, 1, 0]' : 0.232061}", "{'[6, 0, 3, 5, 4, 5, 0, 1, 28, 0, 11, 1, 1, 1, 0, 1, 1, 0]' : 0.232257}", "{'[6, 0, 3, 5, 4, 5, 0, 1, 28, 0, 11, 1, 1, 1, 0, 1, 1, 0]' : 0.233332}", "{'[6, 0, 3, 5, 4, 5, 0, 1, 28, 0, 11, 1, 1, 1, 0, 1, 1, 0]' : 0.232103}", "{'[6, 0, 3, 5, 4, 5, 0, 1, 28, 0, 11, 1, 1, 1, 0, 1, 1, 0]' : 0.231777}", "{'[6, 0, 3, 5, 4, 5, 0, 1, 28, 0, 11, 1, 1, 1, 0, 1, 1, 0]' : 0.232174}", "{'[6, 0, 3, 5, 4, 5, 0, 1, 28, 0, 11, 1, 1, 1, 0, 1, 1, 0]' : 0.231848}", "{'[6, 0, 3, 5, 4, 5, 0, 1, 28, 0, 11, 1, 1, 1, 0, 1, 1, 0]' : 0.23188}", "{'[6, 0, 3, 5, 4, 5, 0, 1, 28, 0, 11, 1, 1, 1, 0, 1, 1, 0]' : 0.232447}", "{'[6, 0, 3, 5, 4, 5, 0, 1, 28, 0, 11, 1, 1, 1, 0, 1, 1, 0]' : 0.232348}", "{'[6, 0, 3, 5, 4, 5, 0, 1, 28, 0, 11, 1, 1, 1, 0, 1, 1, 0]' : 0.232191}", "{'[6, 0, 3, 5, 4, 5, 0, 1, 28, 0, 11, 1, 1, 1, 0, 1, 1, 0]' : 0.232179}", "{'[6, 0, 3, 5, 4, 5, 0, 1, 28, 0, 11, 1, 1, 1, 0, 1, 1, 0]' : 0.231933}", "{'[6, 0, 3, 5, 4, 5, 0, 1, 28, 0, 11, 1, 1, 1, 0, 1, 1, 0]' : 0.232391}", "{'[6, 0, 3, 5, 4, 5, 0, 1, 28, 0, 11, 1, 1, 1, 0, 1, 1, 0]' : 0.231389}", "{'[6, 0, 3, 5, 4, 5, 0, 1, 28, 0, 11, 1, 1, 1, 0, 1, 1, 0]' : 0.231645}", "{'[6, 0, 3, 5, 4, 5, 0, 1, 28, 0, 11, 1, 1, 1, 0, 1, 1, 0]' : 0.23204}", "{'[6, 0, 3, 5, 4, 5, 0, 1, 28, 0, 11, 1, 1, 1, 0, 1, 1, 0]' : 0.231372}", "{'[6, 0, 3, 5, 4, 5, 0, 1, 28, 0, 11, 1, 1, 1, 0, 1, 1, 0]' : 0.231948}", "{'[6, 0, 3, 5, 4, 5, 0, 1, 28, 0, 11, 1, 1, 1, 0, 1, 1, 0]' : 0.231818}", "{'[6, 0, 3, 5, 4, 5, 0, 1, 28, 0, 11, 1, 1, 1, 0, 1, 1, 0]' : 0.231887}", "{'[6, 0, 3, 5, 4, 5, 0, 1, 28, 0, 11, 1, 1, 1, 0, 1, 1, 0]' : 0.232404}", "{'[6, 0, 3, 5, 4, 5, 0, 1, 28, 0, 11, 1, 1, 1, 0, 1, 1, 0]' : 0.232286}", "{'[6, 0, 3, 5, 4, 5, 0, 1, 28, 0, 11, 1, 1, 1, 0, 1, 1, 0]' : 0.231795}", "{'[6, 0, 3, 5, 4, 5, 0, 1, 28, 0, 11, 1, 1, 1, 0, 1, 1, 0]' : 0.231596}", "{'[6, 0, 3, 5, 4, 5, 0, 1, 28, 0, 11, 1, 1, 1, 0, 1, 1, 0]' : 0.231642}", "{'[6, 0, 3, 5, 4, 5, 0, 1, 28, 0, 11, 1, 1, 1, 0, 1, 1, 0]' : 0.231478}", "{'[6, 0, 3, 5, 4, 5, 0, 1, 28, 0, 11, 1, 1, 1, 0, 1, 1, 0]' : 0.232372}", "{'[6, 0, 3, 5, 4, 5, 0, 1, 28, 0, 11, 1, 1, 1, 0, 1, 1, 0]' : 0.231442}", "{'[6, 0, 3, 5, 4, 5, 0, 1, 28, 0, 11, 1, 1, 1, 0, 1, 1, 0]' : 0.231842}"]
returning from 'run': {'[6, 0, 3, 5, 4, 5, 0, 1, 28, 0, 11, 1, 1, 1, 0, 1, 1, 0]': ([0.232061, 0.232257, 0.233332, 0.232103, 0.231777, 0.232174, 0.231848, 0.23188, 0.232447, 0.232348, 0.232191, 0.232179, 0.231933, 0.232391, 0.231389, 0.231645, 0.23204, 0.231372, 0.231948, 0.231818, 0.231887, 0.232404, 0.232286, 0.231795, 0.231596, 0.231642, 0.231478, 0.232372, 0.231442, 0.231842], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 3, 5, 4, 5, 0, 1, 28, 0, 11, 1, 1, 1, 0, 1, 1, 0]': ([0.232061, 0.232257, 0.233332, 0.232103, 0.231777, 0.232174, 0.231848, 0.23188, 0.232447, 0.232348, 0.232191, 0.232179, 0.231933, 0.232391, 0.231389, 0.231645, 0.23204, 0.231372, 0.231948, 0.231818, 0.231887, 0.232404, 0.232286, 0.231795, 0.231596, 0.231642, 0.231478, 0.232372, 0.231442, 0.231842], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		229
        Multiplications: 	68
        Divisions: 		0
        Logical: 		0
        Reads: 			518
        Writes: 		96
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest7.exe __orio_perftest7.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest7.exe  
Program Test Output: 
{'[2, 0, 0, 2, 3, 3, 0, 1, 29, 0, 24, 4, 0, 0, 1, 0, 0, 1]' : 0.83047}
{'[2, 0, 0, 2, 3, 3, 0, 1, 29, 0, 24, 4, 0, 0, 1, 0, 0, 1]' : 0.830692}
{'[2, 0, 0, 2, 3, 3, 0, 1, 29, 0, 24, 4, 0, 0, 1, 0, 0, 1]' : 0.835604}
{'[2, 0, 0, 2, 3, 3, 0, 1, 29, 0, 24, 4, 0, 0, 1, 0, 0, 1]' : 0.837108}
{'[2, 0, 0, 2, 3, 3, 0, 1, 29, 0, 24, 4, 0, 0, 1, 0, 0, 1]' : 0.836816}
{'[2, 0, 0, 2, 3, 3, 0, 1, 29, 0, 24, 4, 0, 0, 1, 0, 0, 1]' : 0.837083}
{'[2, 0, 0, 2, 3, 3, 0, 1, 29, 0, 24, 4, 0, 0, 1, 0, 0, 1]' : 0.837213}
{'[2, 0, 0, 2, 3, 3, 0, 1, 29, 0, 24, 4, 0, 0, 1, 0, 0, 1]' : 0.833415}
{'[2, 0, 0, 2, 3, 3, 0, 1, 29, 0, 24, 4, 0, 0, 1, 0, 0, 1]' : 0.830552}
{'[2, 0, 0, 2, 3, 3, 0, 1, 29, 0, 24, 4, 0, 0, 1, 0, 0, 1]' : 0.833223}
{'[2, 0, 0, 2, 3, 3, 0, 1, 29, 0, 24, 4, 0, 0, 1, 0, 0, 1]' : 0.831009}
{'[2, 0, 0, 2, 3, 3, 0, 1, 29, 0, 24, 4, 0, 0, 1, 0, 0, 1]' : 0.83853}
{'[2, 0, 0, 2, 3, 3, 0, 1, 29, 0, 24, 4, 0, 0, 1, 0, 0, 1]' : 0.831638}
{'[2, 0, 0, 2, 3, 3, 0, 1, 29, 0, 24, 4, 0, 0, 1, 0, 0, 1]' : 0.83804}
{'[2, 0, 0, 2, 3, 3, 0, 1, 29, 0, 24, 4, 0, 0, 1, 0, 0, 1]' : 0.837388}
{'[2, 0, 0, 2, 3, 3, 0, 1, 29, 0, 24, 4, 0, 0, 1, 0, 0, 1]' : 0.83683}
{'[2, 0, 0, 2, 3, 3, 0, 1, 29, 0, 24, 4, 0, 0, 1, 0, 0, 1]' : 0.837102}
{'[2, 0, 0, 2, 3, 3, 0, 1, 29, 0, 24, 4, 0, 0, 1, 0, 0, 1]' : 0.836455}
{'[2, 0, 0, 2, 3, 3, 0, 1, 29, 0, 24, 4, 0, 0, 1, 0, 0, 1]' : 0.830587}
{'[2, 0, 0, 2, 3, 3, 0, 1, 29, 0, 24, 4, 0, 0, 1, 0, 0, 1]' : 0.835694}
{'[2, 0, 0, 2, 3, 3, 0, 1, 29, 0, 24, 4, 0, 0, 1, 0, 0, 1]' : 0.837262}
{'[2, 0, 0, 2, 3, 3, 0, 1, 29, 0, 24, 4, 0, 0, 1, 0, 0, 1]' : 0.838781}
{'[2, 0, 0, 2, 3, 3, 0, 1, 29, 0, 24, 4, 0, 0, 1, 0, 0, 1]' : 0.830634}
{'[2, 0, 0, 2, 3, 3, 0, 1, 29, 0, 24, 4, 0, 0, 1, 0, 0, 1]' : 0.832664}
{'[2, 0, 0, 2, 3, 3, 0, 1, 29, 0, 24, 4, 0, 0, 1, 0, 0, 1]' : 0.830594}
{'[2, 0, 0, 2, 3, 3, 0, 1, 29, 0, 24, 4, 0, 0, 1, 0, 0, 1]' : 0.833351}
{'[2, 0, 0, 2, 3, 3, 0, 1, 29, 0, 24, 4, 0, 0, 1, 0, 0, 1]' : 0.830317}
{'[2, 0, 0, 2, 3, 3, 0, 1, 29, 0, 24, 4, 0, 0, 1, 0, 0, 1]' : 0.830328}
{'[2, 0, 0, 2, 3, 3, 0, 1, 29, 0, 24, 4, 0, 0, 1, 0, 0, 1]' : 0.83046}
{'[2, 0, 0, 2, 3, 3, 0, 1, 29, 0, 24, 4, 0, 0, 1, 0, 0, 1]' : 0.830474}

out:
 ["{'[2, 0, 0, 2, 3, 3, 0, 1, 29, 0, 24, 4, 0, 0, 1, 0, 0, 1]' : 0.83047}", "{'[2, 0, 0, 2, 3, 3, 0, 1, 29, 0, 24, 4, 0, 0, 1, 0, 0, 1]' : 0.830692}", "{'[2, 0, 0, 2, 3, 3, 0, 1, 29, 0, 24, 4, 0, 0, 1, 0, 0, 1]' : 0.835604}", "{'[2, 0, 0, 2, 3, 3, 0, 1, 29, 0, 24, 4, 0, 0, 1, 0, 0, 1]' : 0.837108}", "{'[2, 0, 0, 2, 3, 3, 0, 1, 29, 0, 24, 4, 0, 0, 1, 0, 0, 1]' : 0.836816}", "{'[2, 0, 0, 2, 3, 3, 0, 1, 29, 0, 24, 4, 0, 0, 1, 0, 0, 1]' : 0.837083}", "{'[2, 0, 0, 2, 3, 3, 0, 1, 29, 0, 24, 4, 0, 0, 1, 0, 0, 1]' : 0.837213}", "{'[2, 0, 0, 2, 3, 3, 0, 1, 29, 0, 24, 4, 0, 0, 1, 0, 0, 1]' : 0.833415}", "{'[2, 0, 0, 2, 3, 3, 0, 1, 29, 0, 24, 4, 0, 0, 1, 0, 0, 1]' : 0.830552}", "{'[2, 0, 0, 2, 3, 3, 0, 1, 29, 0, 24, 4, 0, 0, 1, 0, 0, 1]' : 0.833223}", "{'[2, 0, 0, 2, 3, 3, 0, 1, 29, 0, 24, 4, 0, 0, 1, 0, 0, 1]' : 0.831009}", "{'[2, 0, 0, 2, 3, 3, 0, 1, 29, 0, 24, 4, 0, 0, 1, 0, 0, 1]' : 0.83853}", "{'[2, 0, 0, 2, 3, 3, 0, 1, 29, 0, 24, 4, 0, 0, 1, 0, 0, 1]' : 0.831638}", "{'[2, 0, 0, 2, 3, 3, 0, 1, 29, 0, 24, 4, 0, 0, 1, 0, 0, 1]' : 0.83804}", "{'[2, 0, 0, 2, 3, 3, 0, 1, 29, 0, 24, 4, 0, 0, 1, 0, 0, 1]' : 0.837388}", "{'[2, 0, 0, 2, 3, 3, 0, 1, 29, 0, 24, 4, 0, 0, 1, 0, 0, 1]' : 0.83683}", "{'[2, 0, 0, 2, 3, 3, 0, 1, 29, 0, 24, 4, 0, 0, 1, 0, 0, 1]' : 0.837102}", "{'[2, 0, 0, 2, 3, 3, 0, 1, 29, 0, 24, 4, 0, 0, 1, 0, 0, 1]' : 0.836455}", "{'[2, 0, 0, 2, 3, 3, 0, 1, 29, 0, 24, 4, 0, 0, 1, 0, 0, 1]' : 0.830587}", "{'[2, 0, 0, 2, 3, 3, 0, 1, 29, 0, 24, 4, 0, 0, 1, 0, 0, 1]' : 0.835694}", "{'[2, 0, 0, 2, 3, 3, 0, 1, 29, 0, 24, 4, 0, 0, 1, 0, 0, 1]' : 0.837262}", "{'[2, 0, 0, 2, 3, 3, 0, 1, 29, 0, 24, 4, 0, 0, 1, 0, 0, 1]' : 0.838781}", "{'[2, 0, 0, 2, 3, 3, 0, 1, 29, 0, 24, 4, 0, 0, 1, 0, 0, 1]' : 0.830634}", "{'[2, 0, 0, 2, 3, 3, 0, 1, 29, 0, 24, 4, 0, 0, 1, 0, 0, 1]' : 0.832664}", "{'[2, 0, 0, 2, 3, 3, 0, 1, 29, 0, 24, 4, 0, 0, 1, 0, 0, 1]' : 0.830594}", "{'[2, 0, 0, 2, 3, 3, 0, 1, 29, 0, 24, 4, 0, 0, 1, 0, 0, 1]' : 0.833351}", "{'[2, 0, 0, 2, 3, 3, 0, 1, 29, 0, 24, 4, 0, 0, 1, 0, 0, 1]' : 0.830317}", "{'[2, 0, 0, 2, 3, 3, 0, 1, 29, 0, 24, 4, 0, 0, 1, 0, 0, 1]' : 0.830328}", "{'[2, 0, 0, 2, 3, 3, 0, 1, 29, 0, 24, 4, 0, 0, 1, 0, 0, 1]' : 0.83046}", "{'[2, 0, 0, 2, 3, 3, 0, 1, 29, 0, 24, 4, 0, 0, 1, 0, 0, 1]' : 0.830474}"]
returning from 'run': {'[2, 0, 0, 2, 3, 3, 0, 1, 29, 0, 24, 4, 0, 0, 1, 0, 0, 1]': ([0.83047, 0.830692, 0.835604, 0.837108, 0.836816, 0.837083, 0.837213, 0.833415, 0.830552, 0.833223, 0.831009, 0.83853, 0.831638, 0.83804, 0.837388, 0.83683, 0.837102, 0.836455, 0.830587, 0.835694, 0.837262, 0.838781, 0.830634, 0.832664, 0.830594, 0.833351, 0.830317, 0.830328, 0.83046, 0.830474], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 0, 2, 3, 3, 0, 1, 29, 0, 24, 4, 0, 0, 1, 0, 0, 1]': ([0.83047, 0.830692, 0.835604, 0.837108, 0.836816, 0.837083, 0.837213, 0.833415, 0.830552, 0.833223, 0.831009, 0.83853, 0.831638, 0.83804, 0.837388, 0.83683, 0.837102, 0.836455, 0.830587, 0.835694, 0.837262, 0.838781, 0.830634, 0.832664, 0.830594, 0.833351, 0.830317, 0.830328, 0.83046, 0.830474], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = kkk
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	5
        Additions: 		2691
        Multiplications: 	832
        Divisions: 		0
        Logical: 		0
        Reads: 			4393
        Writes: 		495
        Comparisons:		25
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest8.exe __orio_perftest8.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest8.exe  
Program Test Output: 
{'[3, 6, 5, 2, 4, 3, 0, 0, 3, 6, 0, 15, 1, 1, 0, 0, 0, 1]' : 0.332386}
{'[3, 6, 5, 2, 4, 3, 0, 0, 3, 6, 0, 15, 1, 1, 0, 0, 0, 1]' : 0.337452}
{'[3, 6, 5, 2, 4, 3, 0, 0, 3, 6, 0, 15, 1, 1, 0, 0, 0, 1]' : 0.330693}
{'[3, 6, 5, 2, 4, 3, 0, 0, 3, 6, 0, 15, 1, 1, 0, 0, 0, 1]' : 0.331566}
{'[3, 6, 5, 2, 4, 3, 0, 0, 3, 6, 0, 15, 1, 1, 0, 0, 0, 1]' : 0.330745}
{'[3, 6, 5, 2, 4, 3, 0, 0, 3, 6, 0, 15, 1, 1, 0, 0, 0, 1]' : 0.330665}
{'[3, 6, 5, 2, 4, 3, 0, 0, 3, 6, 0, 15, 1, 1, 0, 0, 0, 1]' : 0.3306}
{'[3, 6, 5, 2, 4, 3, 0, 0, 3, 6, 0, 15, 1, 1, 0, 0, 0, 1]' : 0.330741}
{'[3, 6, 5, 2, 4, 3, 0, 0, 3, 6, 0, 15, 1, 1, 0, 0, 0, 1]' : 0.332315}
{'[3, 6, 5, 2, 4, 3, 0, 0, 3, 6, 0, 15, 1, 1, 0, 0, 0, 1]' : 0.329921}
{'[3, 6, 5, 2, 4, 3, 0, 0, 3, 6, 0, 15, 1, 1, 0, 0, 0, 1]' : 0.343213}
{'[3, 6, 5, 2, 4, 3, 0, 0, 3, 6, 0, 15, 1, 1, 0, 0, 0, 1]' : 0.330231}
{'[3, 6, 5, 2, 4, 3, 0, 0, 3, 6, 0, 15, 1, 1, 0, 0, 0, 1]' : 0.33037}
{'[3, 6, 5, 2, 4, 3, 0, 0, 3, 6, 0, 15, 1, 1, 0, 0, 0, 1]' : 0.330727}
{'[3, 6, 5, 2, 4, 3, 0, 0, 3, 6, 0, 15, 1, 1, 0, 0, 0, 1]' : 0.329849}
{'[3, 6, 5, 2, 4, 3, 0, 0, 3, 6, 0, 15, 1, 1, 0, 0, 0, 1]' : 0.330475}
{'[3, 6, 5, 2, 4, 3, 0, 0, 3, 6, 0, 15, 1, 1, 0, 0, 0, 1]' : 0.332008}
{'[3, 6, 5, 2, 4, 3, 0, 0, 3, 6, 0, 15, 1, 1, 0, 0, 0, 1]' : 0.330657}
{'[3, 6, 5, 2, 4, 3, 0, 0, 3, 6, 0, 15, 1, 1, 0, 0, 0, 1]' : 0.3299}
{'[3, 6, 5, 2, 4, 3, 0, 0, 3, 6, 0, 15, 1, 1, 0, 0, 0, 1]' : 0.332604}
{'[3, 6, 5, 2, 4, 3, 0, 0, 3, 6, 0, 15, 1, 1, 0, 0, 0, 1]' : 0.333211}
{'[3, 6, 5, 2, 4, 3, 0, 0, 3, 6, 0, 15, 1, 1, 0, 0, 0, 1]' : 0.330752}
{'[3, 6, 5, 2, 4, 3, 0, 0, 3, 6, 0, 15, 1, 1, 0, 0, 0, 1]' : 0.330944}
{'[3, 6, 5, 2, 4, 3, 0, 0, 3, 6, 0, 15, 1, 1, 0, 0, 0, 1]' : 0.329599}
{'[3, 6, 5, 2, 4, 3, 0, 0, 3, 6, 0, 15, 1, 1, 0, 0, 0, 1]' : 0.33028}
{'[3, 6, 5, 2, 4, 3, 0, 0, 3, 6, 0, 15, 1, 1, 0, 0, 0, 1]' : 0.330396}
{'[3, 6, 5, 2, 4, 3, 0, 0, 3, 6, 0, 15, 1, 1, 0, 0, 0, 1]' : 0.330325}
{'[3, 6, 5, 2, 4, 3, 0, 0, 3, 6, 0, 15, 1, 1, 0, 0, 0, 1]' : 0.330451}
{'[3, 6, 5, 2, 4, 3, 0, 0, 3, 6, 0, 15, 1, 1, 0, 0, 0, 1]' : 0.333892}
{'[3, 6, 5, 2, 4, 3, 0, 0, 3, 6, 0, 15, 1, 1, 0, 0, 0, 1]' : 0.336388}

out:
 ["{'[3, 6, 5, 2, 4, 3, 0, 0, 3, 6, 0, 15, 1, 1, 0, 0, 0, 1]' : 0.332386}", "{'[3, 6, 5, 2, 4, 3, 0, 0, 3, 6, 0, 15, 1, 1, 0, 0, 0, 1]' : 0.337452}", "{'[3, 6, 5, 2, 4, 3, 0, 0, 3, 6, 0, 15, 1, 1, 0, 0, 0, 1]' : 0.330693}", "{'[3, 6, 5, 2, 4, 3, 0, 0, 3, 6, 0, 15, 1, 1, 0, 0, 0, 1]' : 0.331566}", "{'[3, 6, 5, 2, 4, 3, 0, 0, 3, 6, 0, 15, 1, 1, 0, 0, 0, 1]' : 0.330745}", "{'[3, 6, 5, 2, 4, 3, 0, 0, 3, 6, 0, 15, 1, 1, 0, 0, 0, 1]' : 0.330665}", "{'[3, 6, 5, 2, 4, 3, 0, 0, 3, 6, 0, 15, 1, 1, 0, 0, 0, 1]' : 0.3306}", "{'[3, 6, 5, 2, 4, 3, 0, 0, 3, 6, 0, 15, 1, 1, 0, 0, 0, 1]' : 0.330741}", "{'[3, 6, 5, 2, 4, 3, 0, 0, 3, 6, 0, 15, 1, 1, 0, 0, 0, 1]' : 0.332315}", "{'[3, 6, 5, 2, 4, 3, 0, 0, 3, 6, 0, 15, 1, 1, 0, 0, 0, 1]' : 0.329921}", "{'[3, 6, 5, 2, 4, 3, 0, 0, 3, 6, 0, 15, 1, 1, 0, 0, 0, 1]' : 0.343213}", "{'[3, 6, 5, 2, 4, 3, 0, 0, 3, 6, 0, 15, 1, 1, 0, 0, 0, 1]' : 0.330231}", "{'[3, 6, 5, 2, 4, 3, 0, 0, 3, 6, 0, 15, 1, 1, 0, 0, 0, 1]' : 0.33037}", "{'[3, 6, 5, 2, 4, 3, 0, 0, 3, 6, 0, 15, 1, 1, 0, 0, 0, 1]' : 0.330727}", "{'[3, 6, 5, 2, 4, 3, 0, 0, 3, 6, 0, 15, 1, 1, 0, 0, 0, 1]' : 0.329849}", "{'[3, 6, 5, 2, 4, 3, 0, 0, 3, 6, 0, 15, 1, 1, 0, 0, 0, 1]' : 0.330475}", "{'[3, 6, 5, 2, 4, 3, 0, 0, 3, 6, 0, 15, 1, 1, 0, 0, 0, 1]' : 0.332008}", "{'[3, 6, 5, 2, 4, 3, 0, 0, 3, 6, 0, 15, 1, 1, 0, 0, 0, 1]' : 0.330657}", "{'[3, 6, 5, 2, 4, 3, 0, 0, 3, 6, 0, 15, 1, 1, 0, 0, 0, 1]' : 0.3299}", "{'[3, 6, 5, 2, 4, 3, 0, 0, 3, 6, 0, 15, 1, 1, 0, 0, 0, 1]' : 0.332604}", "{'[3, 6, 5, 2, 4, 3, 0, 0, 3, 6, 0, 15, 1, 1, 0, 0, 0, 1]' : 0.333211}", "{'[3, 6, 5, 2, 4, 3, 0, 0, 3, 6, 0, 15, 1, 1, 0, 0, 0, 1]' : 0.330752}", "{'[3, 6, 5, 2, 4, 3, 0, 0, 3, 6, 0, 15, 1, 1, 0, 0, 0, 1]' : 0.330944}", "{'[3, 6, 5, 2, 4, 3, 0, 0, 3, 6, 0, 15, 1, 1, 0, 0, 0, 1]' : 0.329599}", "{'[3, 6, 5, 2, 4, 3, 0, 0, 3, 6, 0, 15, 1, 1, 0, 0, 0, 1]' : 0.33028}", "{'[3, 6, 5, 2, 4, 3, 0, 0, 3, 6, 0, 15, 1, 1, 0, 0, 0, 1]' : 0.330396}", "{'[3, 6, 5, 2, 4, 3, 0, 0, 3, 6, 0, 15, 1, 1, 0, 0, 0, 1]' : 0.330325}", "{'[3, 6, 5, 2, 4, 3, 0, 0, 3, 6, 0, 15, 1, 1, 0, 0, 0, 1]' : 0.330451}", "{'[3, 6, 5, 2, 4, 3, 0, 0, 3, 6, 0, 15, 1, 1, 0, 0, 0, 1]' : 0.333892}", "{'[3, 6, 5, 2, 4, 3, 0, 0, 3, 6, 0, 15, 1, 1, 0, 0, 0, 1]' : 0.336388}"]
returning from 'run': {'[3, 6, 5, 2, 4, 3, 0, 0, 3, 6, 0, 15, 1, 1, 0, 0, 0, 1]': ([0.332386, 0.337452, 0.330693, 0.331566, 0.330745, 0.330665, 0.3306, 0.330741, 0.332315, 0.329921, 0.343213, 0.330231, 0.33037, 0.330727, 0.329849, 0.330475, 0.332008, 0.330657, 0.3299, 0.332604, 0.333211, 0.330752, 0.330944, 0.329599, 0.33028, 0.330396, 0.330325, 0.330451, 0.333892, 0.336388], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 6, 5, 2, 4, 3, 0, 0, 3, 6, 0, 15, 1, 1, 0, 0, 0, 1]': ([0.332386, 0.337452, 0.330693, 0.331566, 0.330745, 0.330665, 0.3306, 0.330741, 0.332315, 0.329921, 0.343213, 0.330231, 0.33037, 0.330727, 0.329849, 0.330475, 0.332008, 0.330657, 0.3299, 0.332604, 0.333211, 0.330752, 0.330944, 0.329599, 0.33028, 0.330396, 0.330325, 0.330451, 0.333892, 0.336388], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	43
        Max loop nest depth: 	5
        Additions: 		4944
        Multiplications: 	1404
        Divisions: 		0
        Logical: 		0
        Reads: 			7724
        Writes: 		857
        Comparisons:		43
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest9.exe __orio_perftest9.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest9.exe  
Program Test Output: 
{'[6, 2, 0, 0, 5, 2, 1, 0, 14, 16, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.348477}
{'[6, 2, 0, 0, 5, 2, 1, 0, 14, 16, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.354462}
{'[6, 2, 0, 0, 5, 2, 1, 0, 14, 16, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.349342}
{'[6, 2, 0, 0, 5, 2, 1, 0, 14, 16, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.348876}
{'[6, 2, 0, 0, 5, 2, 1, 0, 14, 16, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.348969}
{'[6, 2, 0, 0, 5, 2, 1, 0, 14, 16, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.349018}
{'[6, 2, 0, 0, 5, 2, 1, 0, 14, 16, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.349223}
{'[6, 2, 0, 0, 5, 2, 1, 0, 14, 16, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.349324}
{'[6, 2, 0, 0, 5, 2, 1, 0, 14, 16, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.349891}
{'[6, 2, 0, 0, 5, 2, 1, 0, 14, 16, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.349169}
{'[6, 2, 0, 0, 5, 2, 1, 0, 14, 16, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.348948}
{'[6, 2, 0, 0, 5, 2, 1, 0, 14, 16, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.350092}
{'[6, 2, 0, 0, 5, 2, 1, 0, 14, 16, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.349298}
{'[6, 2, 0, 0, 5, 2, 1, 0, 14, 16, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.350464}
{'[6, 2, 0, 0, 5, 2, 1, 0, 14, 16, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.349555}
{'[6, 2, 0, 0, 5, 2, 1, 0, 14, 16, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.349229}
{'[6, 2, 0, 0, 5, 2, 1, 0, 14, 16, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.349589}
{'[6, 2, 0, 0, 5, 2, 1, 0, 14, 16, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.349676}
{'[6, 2, 0, 0, 5, 2, 1, 0, 14, 16, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.349633}
{'[6, 2, 0, 0, 5, 2, 1, 0, 14, 16, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.349953}
{'[6, 2, 0, 0, 5, 2, 1, 0, 14, 16, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.353441}
{'[6, 2, 0, 0, 5, 2, 1, 0, 14, 16, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.348991}
{'[6, 2, 0, 0, 5, 2, 1, 0, 14, 16, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.349492}
{'[6, 2, 0, 0, 5, 2, 1, 0, 14, 16, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.349993}
{'[6, 2, 0, 0, 5, 2, 1, 0, 14, 16, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.349413}
{'[6, 2, 0, 0, 5, 2, 1, 0, 14, 16, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.350108}
{'[6, 2, 0, 0, 5, 2, 1, 0, 14, 16, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.349766}
{'[6, 2, 0, 0, 5, 2, 1, 0, 14, 16, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.348901}
{'[6, 2, 0, 0, 5, 2, 1, 0, 14, 16, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.352065}
{'[6, 2, 0, 0, 5, 2, 1, 0, 14, 16, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.349062}

out:
 ["{'[6, 2, 0, 0, 5, 2, 1, 0, 14, 16, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.348477}", "{'[6, 2, 0, 0, 5, 2, 1, 0, 14, 16, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.354462}", "{'[6, 2, 0, 0, 5, 2, 1, 0, 14, 16, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.349342}", "{'[6, 2, 0, 0, 5, 2, 1, 0, 14, 16, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.348876}", "{'[6, 2, 0, 0, 5, 2, 1, 0, 14, 16, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.348969}", "{'[6, 2, 0, 0, 5, 2, 1, 0, 14, 16, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.349018}", "{'[6, 2, 0, 0, 5, 2, 1, 0, 14, 16, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.349223}", "{'[6, 2, 0, 0, 5, 2, 1, 0, 14, 16, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.349324}", "{'[6, 2, 0, 0, 5, 2, 1, 0, 14, 16, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.349891}", "{'[6, 2, 0, 0, 5, 2, 1, 0, 14, 16, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.349169}", "{'[6, 2, 0, 0, 5, 2, 1, 0, 14, 16, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.348948}", "{'[6, 2, 0, 0, 5, 2, 1, 0, 14, 16, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.350092}", "{'[6, 2, 0, 0, 5, 2, 1, 0, 14, 16, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.349298}", "{'[6, 2, 0, 0, 5, 2, 1, 0, 14, 16, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.350464}", "{'[6, 2, 0, 0, 5, 2, 1, 0, 14, 16, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.349555}", "{'[6, 2, 0, 0, 5, 2, 1, 0, 14, 16, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.349229}", "{'[6, 2, 0, 0, 5, 2, 1, 0, 14, 16, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.349589}", "{'[6, 2, 0, 0, 5, 2, 1, 0, 14, 16, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.349676}", "{'[6, 2, 0, 0, 5, 2, 1, 0, 14, 16, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.349633}", "{'[6, 2, 0, 0, 5, 2, 1, 0, 14, 16, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.349953}", "{'[6, 2, 0, 0, 5, 2, 1, 0, 14, 16, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.353441}", "{'[6, 2, 0, 0, 5, 2, 1, 0, 14, 16, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.348991}", "{'[6, 2, 0, 0, 5, 2, 1, 0, 14, 16, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.349492}", "{'[6, 2, 0, 0, 5, 2, 1, 0, 14, 16, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.349993}", "{'[6, 2, 0, 0, 5, 2, 1, 0, 14, 16, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.349413}", "{'[6, 2, 0, 0, 5, 2, 1, 0, 14, 16, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.350108}", "{'[6, 2, 0, 0, 5, 2, 1, 0, 14, 16, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.349766}", "{'[6, 2, 0, 0, 5, 2, 1, 0, 14, 16, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.348901}", "{'[6, 2, 0, 0, 5, 2, 1, 0, 14, 16, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.352065}", "{'[6, 2, 0, 0, 5, 2, 1, 0, 14, 16, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.349062}"]
returning from 'run': {'[6, 2, 0, 0, 5, 2, 1, 0, 14, 16, 0, 17, 1, 1, 0, 0, 1, 1]': ([0.348477, 0.354462, 0.349342, 0.348876, 0.348969, 0.349018, 0.349223, 0.349324, 0.349891, 0.349169, 0.348948, 0.350092, 0.349298, 0.350464, 0.349555, 0.349229, 0.349589, 0.349676, 0.349633, 0.349953, 0.353441, 0.348991, 0.349492, 0.349993, 0.349413, 0.350108, 0.349766, 0.348901, 0.352065, 0.349062], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 2, 0, 0, 5, 2, 1, 0, 14, 16, 0, 17, 1, 1, 0, 0, 1, 1]': ([0.348477, 0.354462, 0.349342, 0.348876, 0.348969, 0.349018, 0.349223, 0.349324, 0.349891, 0.349169, 0.348948, 0.350092, 0.349298, 0.350464, 0.349555, 0.349229, 0.349589, 0.349676, 0.349633, 0.349953, 0.353441, 0.348991, 0.349492, 0.349993, 0.349413, 0.350108, 0.349766, 0.348901, 0.352065, 0.349062], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	27
        Max loop nest depth: 	5
        Additions: 		944
        Multiplications: 	286
        Divisions: 		0
        Logical: 		0
        Reads: 			1660
        Writes: 		213
        Comparisons:		27
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest10.exe __orio_perftest10.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest10.exe  
Program Test Output: 
{'[0, 3, 0, 4, 5, 0, 1, 1, 3, 1, 0, 10, 1, 0, 0, 0, 1, 0]' : 0.304758}
{'[0, 3, 0, 4, 5, 0, 1, 1, 3, 1, 0, 10, 1, 0, 0, 0, 1, 0]' : 0.302878}
{'[0, 3, 0, 4, 5, 0, 1, 1, 3, 1, 0, 10, 1, 0, 0, 0, 1, 0]' : 0.306431}
{'[0, 3, 0, 4, 5, 0, 1, 1, 3, 1, 0, 10, 1, 0, 0, 0, 1, 0]' : 0.303304}
{'[0, 3, 0, 4, 5, 0, 1, 1, 3, 1, 0, 10, 1, 0, 0, 0, 1, 0]' : 0.30438}
{'[0, 3, 0, 4, 5, 0, 1, 1, 3, 1, 0, 10, 1, 0, 0, 0, 1, 0]' : 0.303791}
{'[0, 3, 0, 4, 5, 0, 1, 1, 3, 1, 0, 10, 1, 0, 0, 0, 1, 0]' : 0.302315}
{'[0, 3, 0, 4, 5, 0, 1, 1, 3, 1, 0, 10, 1, 0, 0, 0, 1, 0]' : 0.312901}
{'[0, 3, 0, 4, 5, 0, 1, 1, 3, 1, 0, 10, 1, 0, 0, 0, 1, 0]' : 0.302858}
{'[0, 3, 0, 4, 5, 0, 1, 1, 3, 1, 0, 10, 1, 0, 0, 0, 1, 0]' : 0.303602}
{'[0, 3, 0, 4, 5, 0, 1, 1, 3, 1, 0, 10, 1, 0, 0, 0, 1, 0]' : 0.302164}
{'[0, 3, 0, 4, 5, 0, 1, 1, 3, 1, 0, 10, 1, 0, 0, 0, 1, 0]' : 0.301912}
{'[0, 3, 0, 4, 5, 0, 1, 1, 3, 1, 0, 10, 1, 0, 0, 0, 1, 0]' : 0.304145}
{'[0, 3, 0, 4, 5, 0, 1, 1, 3, 1, 0, 10, 1, 0, 0, 0, 1, 0]' : 0.303399}
{'[0, 3, 0, 4, 5, 0, 1, 1, 3, 1, 0, 10, 1, 0, 0, 0, 1, 0]' : 0.303121}
{'[0, 3, 0, 4, 5, 0, 1, 1, 3, 1, 0, 10, 1, 0, 0, 0, 1, 0]' : 0.302779}
{'[0, 3, 0, 4, 5, 0, 1, 1, 3, 1, 0, 10, 1, 0, 0, 0, 1, 0]' : 0.303495}
{'[0, 3, 0, 4, 5, 0, 1, 1, 3, 1, 0, 10, 1, 0, 0, 0, 1, 0]' : 0.301302}
{'[0, 3, 0, 4, 5, 0, 1, 1, 3, 1, 0, 10, 1, 0, 0, 0, 1, 0]' : 0.301635}
{'[0, 3, 0, 4, 5, 0, 1, 1, 3, 1, 0, 10, 1, 0, 0, 0, 1, 0]' : 0.303346}
{'[0, 3, 0, 4, 5, 0, 1, 1, 3, 1, 0, 10, 1, 0, 0, 0, 1, 0]' : 0.303139}
{'[0, 3, 0, 4, 5, 0, 1, 1, 3, 1, 0, 10, 1, 0, 0, 0, 1, 0]' : 0.303382}
{'[0, 3, 0, 4, 5, 0, 1, 1, 3, 1, 0, 10, 1, 0, 0, 0, 1, 0]' : 0.301481}
{'[0, 3, 0, 4, 5, 0, 1, 1, 3, 1, 0, 10, 1, 0, 0, 0, 1, 0]' : 0.301746}
{'[0, 3, 0, 4, 5, 0, 1, 1, 3, 1, 0, 10, 1, 0, 0, 0, 1, 0]' : 0.301531}
{'[0, 3, 0, 4, 5, 0, 1, 1, 3, 1, 0, 10, 1, 0, 0, 0, 1, 0]' : 0.301518}
{'[0, 3, 0, 4, 5, 0, 1, 1, 3, 1, 0, 10, 1, 0, 0, 0, 1, 0]' : 0.30181}
{'[0, 3, 0, 4, 5, 0, 1, 1, 3, 1, 0, 10, 1, 0, 0, 0, 1, 0]' : 0.302955}
{'[0, 3, 0, 4, 5, 0, 1, 1, 3, 1, 0, 10, 1, 0, 0, 0, 1, 0]' : 0.304213}
{'[0, 3, 0, 4, 5, 0, 1, 1, 3, 1, 0, 10, 1, 0, 0, 0, 1, 0]' : 0.303635}

out:
 ["{'[0, 3, 0, 4, 5, 0, 1, 1, 3, 1, 0, 10, 1, 0, 0, 0, 1, 0]' : 0.304758}", "{'[0, 3, 0, 4, 5, 0, 1, 1, 3, 1, 0, 10, 1, 0, 0, 0, 1, 0]' : 0.302878}", "{'[0, 3, 0, 4, 5, 0, 1, 1, 3, 1, 0, 10, 1, 0, 0, 0, 1, 0]' : 0.306431}", "{'[0, 3, 0, 4, 5, 0, 1, 1, 3, 1, 0, 10, 1, 0, 0, 0, 1, 0]' : 0.303304}", "{'[0, 3, 0, 4, 5, 0, 1, 1, 3, 1, 0, 10, 1, 0, 0, 0, 1, 0]' : 0.30438}", "{'[0, 3, 0, 4, 5, 0, 1, 1, 3, 1, 0, 10, 1, 0, 0, 0, 1, 0]' : 0.303791}", "{'[0, 3, 0, 4, 5, 0, 1, 1, 3, 1, 0, 10, 1, 0, 0, 0, 1, 0]' : 0.302315}", "{'[0, 3, 0, 4, 5, 0, 1, 1, 3, 1, 0, 10, 1, 0, 0, 0, 1, 0]' : 0.312901}", "{'[0, 3, 0, 4, 5, 0, 1, 1, 3, 1, 0, 10, 1, 0, 0, 0, 1, 0]' : 0.302858}", "{'[0, 3, 0, 4, 5, 0, 1, 1, 3, 1, 0, 10, 1, 0, 0, 0, 1, 0]' : 0.303602}", "{'[0, 3, 0, 4, 5, 0, 1, 1, 3, 1, 0, 10, 1, 0, 0, 0, 1, 0]' : 0.302164}", "{'[0, 3, 0, 4, 5, 0, 1, 1, 3, 1, 0, 10, 1, 0, 0, 0, 1, 0]' : 0.301912}", "{'[0, 3, 0, 4, 5, 0, 1, 1, 3, 1, 0, 10, 1, 0, 0, 0, 1, 0]' : 0.304145}", "{'[0, 3, 0, 4, 5, 0, 1, 1, 3, 1, 0, 10, 1, 0, 0, 0, 1, 0]' : 0.303399}", "{'[0, 3, 0, 4, 5, 0, 1, 1, 3, 1, 0, 10, 1, 0, 0, 0, 1, 0]' : 0.303121}", "{'[0, 3, 0, 4, 5, 0, 1, 1, 3, 1, 0, 10, 1, 0, 0, 0, 1, 0]' : 0.302779}", "{'[0, 3, 0, 4, 5, 0, 1, 1, 3, 1, 0, 10, 1, 0, 0, 0, 1, 0]' : 0.303495}", "{'[0, 3, 0, 4, 5, 0, 1, 1, 3, 1, 0, 10, 1, 0, 0, 0, 1, 0]' : 0.301302}", "{'[0, 3, 0, 4, 5, 0, 1, 1, 3, 1, 0, 10, 1, 0, 0, 0, 1, 0]' : 0.301635}", "{'[0, 3, 0, 4, 5, 0, 1, 1, 3, 1, 0, 10, 1, 0, 0, 0, 1, 0]' : 0.303346}", "{'[0, 3, 0, 4, 5, 0, 1, 1, 3, 1, 0, 10, 1, 0, 0, 0, 1, 0]' : 0.303139}", "{'[0, 3, 0, 4, 5, 0, 1, 1, 3, 1, 0, 10, 1, 0, 0, 0, 1, 0]' : 0.303382}", "{'[0, 3, 0, 4, 5, 0, 1, 1, 3, 1, 0, 10, 1, 0, 0, 0, 1, 0]' : 0.301481}", "{'[0, 3, 0, 4, 5, 0, 1, 1, 3, 1, 0, 10, 1, 0, 0, 0, 1, 0]' : 0.301746}", "{'[0, 3, 0, 4, 5, 0, 1, 1, 3, 1, 0, 10, 1, 0, 0, 0, 1, 0]' : 0.301531}", "{'[0, 3, 0, 4, 5, 0, 1, 1, 3, 1, 0, 10, 1, 0, 0, 0, 1, 0]' : 0.301518}", "{'[0, 3, 0, 4, 5, 0, 1, 1, 3, 1, 0, 10, 1, 0, 0, 0, 1, 0]' : 0.30181}", "{'[0, 3, 0, 4, 5, 0, 1, 1, 3, 1, 0, 10, 1, 0, 0, 0, 1, 0]' : 0.302955}", "{'[0, 3, 0, 4, 5, 0, 1, 1, 3, 1, 0, 10, 1, 0, 0, 0, 1, 0]' : 0.304213}", "{'[0, 3, 0, 4, 5, 0, 1, 1, 3, 1, 0, 10, 1, 0, 0, 0, 1, 0]' : 0.303635}"]
returning from 'run': {'[0, 3, 0, 4, 5, 0, 1, 1, 3, 1, 0, 10, 1, 0, 0, 0, 1, 0]': ([0.304758, 0.302878, 0.306431, 0.303304, 0.30438, 0.303791, 0.302315, 0.312901, 0.302858, 0.303602, 0.302164, 0.301912, 0.304145, 0.303399, 0.303121, 0.302779, 0.303495, 0.301302, 0.301635, 0.303346, 0.303139, 0.303382, 0.301481, 0.301746, 0.301531, 0.301518, 0.30181, 0.302955, 0.304213, 0.303635], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 3, 0, 4, 5, 0, 1, 1, 3, 1, 0, 10, 1, 0, 0, 0, 1, 0]': ([0.304758, 0.302878, 0.306431, 0.303304, 0.30438, 0.303791, 0.302315, 0.312901, 0.302858, 0.303602, 0.302164, 0.301912, 0.304145, 0.303399, 0.303121, 0.302779, 0.303495, 0.301302, 0.301635, 0.303346, 0.303139, 0.303382, 0.301481, 0.301746, 0.301531, 0.301518, 0.30181, 0.302955, 0.304213, 0.303635], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	42
        Max loop nest depth: 	5
        Additions: 		1362
        Multiplications: 	532
        Divisions: 		0
        Logical: 		0
        Reads: 			2644
        Writes: 		468
        Comparisons:		42
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest11.exe __orio_perftest11.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest11.exe  
Program Test Output: 
{'[3, 0, 4, 0, 3, 3, 1, 0, 10, 4, 8, 0, 1, 0, 1, 1, 0, 0]' : 0.31664}
{'[3, 0, 4, 0, 3, 3, 1, 0, 10, 4, 8, 0, 1, 0, 1, 1, 0, 0]' : 0.316441}
{'[3, 0, 4, 0, 3, 3, 1, 0, 10, 4, 8, 0, 1, 0, 1, 1, 0, 0]' : 0.316637}
{'[3, 0, 4, 0, 3, 3, 1, 0, 10, 4, 8, 0, 1, 0, 1, 1, 0, 0]' : 0.319743}
{'[3, 0, 4, 0, 3, 3, 1, 0, 10, 4, 8, 0, 1, 0, 1, 1, 0, 0]' : 0.31677}
{'[3, 0, 4, 0, 3, 3, 1, 0, 10, 4, 8, 0, 1, 0, 1, 1, 0, 0]' : 0.316603}
{'[3, 0, 4, 0, 3, 3, 1, 0, 10, 4, 8, 0, 1, 0, 1, 1, 0, 0]' : 0.320963}
{'[3, 0, 4, 0, 3, 3, 1, 0, 10, 4, 8, 0, 1, 0, 1, 1, 0, 0]' : 0.316301}
{'[3, 0, 4, 0, 3, 3, 1, 0, 10, 4, 8, 0, 1, 0, 1, 1, 0, 0]' : 0.316572}
{'[3, 0, 4, 0, 3, 3, 1, 0, 10, 4, 8, 0, 1, 0, 1, 1, 0, 0]' : 0.316959}
{'[3, 0, 4, 0, 3, 3, 1, 0, 10, 4, 8, 0, 1, 0, 1, 1, 0, 0]' : 0.316263}
{'[3, 0, 4, 0, 3, 3, 1, 0, 10, 4, 8, 0, 1, 0, 1, 1, 0, 0]' : 0.316711}
{'[3, 0, 4, 0, 3, 3, 1, 0, 10, 4, 8, 0, 1, 0, 1, 1, 0, 0]' : 0.316787}
{'[3, 0, 4, 0, 3, 3, 1, 0, 10, 4, 8, 0, 1, 0, 1, 1, 0, 0]' : 0.316295}
{'[3, 0, 4, 0, 3, 3, 1, 0, 10, 4, 8, 0, 1, 0, 1, 1, 0, 0]' : 0.316429}
{'[3, 0, 4, 0, 3, 3, 1, 0, 10, 4, 8, 0, 1, 0, 1, 1, 0, 0]' : 0.316729}
{'[3, 0, 4, 0, 3, 3, 1, 0, 10, 4, 8, 0, 1, 0, 1, 1, 0, 0]' : 0.318937}
{'[3, 0, 4, 0, 3, 3, 1, 0, 10, 4, 8, 0, 1, 0, 1, 1, 0, 0]' : 0.316403}
{'[3, 0, 4, 0, 3, 3, 1, 0, 10, 4, 8, 0, 1, 0, 1, 1, 0, 0]' : 0.316429}
{'[3, 0, 4, 0, 3, 3, 1, 0, 10, 4, 8, 0, 1, 0, 1, 1, 0, 0]' : 0.317422}
{'[3, 0, 4, 0, 3, 3, 1, 0, 10, 4, 8, 0, 1, 0, 1, 1, 0, 0]' : 0.316587}
{'[3, 0, 4, 0, 3, 3, 1, 0, 10, 4, 8, 0, 1, 0, 1, 1, 0, 0]' : 0.316844}
{'[3, 0, 4, 0, 3, 3, 1, 0, 10, 4, 8, 0, 1, 0, 1, 1, 0, 0]' : 0.316531}
{'[3, 0, 4, 0, 3, 3, 1, 0, 10, 4, 8, 0, 1, 0, 1, 1, 0, 0]' : 0.316601}
{'[3, 0, 4, 0, 3, 3, 1, 0, 10, 4, 8, 0, 1, 0, 1, 1, 0, 0]' : 0.316727}
{'[3, 0, 4, 0, 3, 3, 1, 0, 10, 4, 8, 0, 1, 0, 1, 1, 0, 0]' : 0.316609}
{'[3, 0, 4, 0, 3, 3, 1, 0, 10, 4, 8, 0, 1, 0, 1, 1, 0, 0]' : 0.316247}
{'[3, 0, 4, 0, 3, 3, 1, 0, 10, 4, 8, 0, 1, 0, 1, 1, 0, 0]' : 0.316605}
{'[3, 0, 4, 0, 3, 3, 1, 0, 10, 4, 8, 0, 1, 0, 1, 1, 0, 0]' : 0.316965}
{'[3, 0, 4, 0, 3, 3, 1, 0, 10, 4, 8, 0, 1, 0, 1, 1, 0, 0]' : 0.316509}

out:
 ["{'[3, 0, 4, 0, 3, 3, 1, 0, 10, 4, 8, 0, 1, 0, 1, 1, 0, 0]' : 0.31664}", "{'[3, 0, 4, 0, 3, 3, 1, 0, 10, 4, 8, 0, 1, 0, 1, 1, 0, 0]' : 0.316441}", "{'[3, 0, 4, 0, 3, 3, 1, 0, 10, 4, 8, 0, 1, 0, 1, 1, 0, 0]' : 0.316637}", "{'[3, 0, 4, 0, 3, 3, 1, 0, 10, 4, 8, 0, 1, 0, 1, 1, 0, 0]' : 0.319743}", "{'[3, 0, 4, 0, 3, 3, 1, 0, 10, 4, 8, 0, 1, 0, 1, 1, 0, 0]' : 0.31677}", "{'[3, 0, 4, 0, 3, 3, 1, 0, 10, 4, 8, 0, 1, 0, 1, 1, 0, 0]' : 0.316603}", "{'[3, 0, 4, 0, 3, 3, 1, 0, 10, 4, 8, 0, 1, 0, 1, 1, 0, 0]' : 0.320963}", "{'[3, 0, 4, 0, 3, 3, 1, 0, 10, 4, 8, 0, 1, 0, 1, 1, 0, 0]' : 0.316301}", "{'[3, 0, 4, 0, 3, 3, 1, 0, 10, 4, 8, 0, 1, 0, 1, 1, 0, 0]' : 0.316572}", "{'[3, 0, 4, 0, 3, 3, 1, 0, 10, 4, 8, 0, 1, 0, 1, 1, 0, 0]' : 0.316959}", "{'[3, 0, 4, 0, 3, 3, 1, 0, 10, 4, 8, 0, 1, 0, 1, 1, 0, 0]' : 0.316263}", "{'[3, 0, 4, 0, 3, 3, 1, 0, 10, 4, 8, 0, 1, 0, 1, 1, 0, 0]' : 0.316711}", "{'[3, 0, 4, 0, 3, 3, 1, 0, 10, 4, 8, 0, 1, 0, 1, 1, 0, 0]' : 0.316787}", "{'[3, 0, 4, 0, 3, 3, 1, 0, 10, 4, 8, 0, 1, 0, 1, 1, 0, 0]' : 0.316295}", "{'[3, 0, 4, 0, 3, 3, 1, 0, 10, 4, 8, 0, 1, 0, 1, 1, 0, 0]' : 0.316429}", "{'[3, 0, 4, 0, 3, 3, 1, 0, 10, 4, 8, 0, 1, 0, 1, 1, 0, 0]' : 0.316729}", "{'[3, 0, 4, 0, 3, 3, 1, 0, 10, 4, 8, 0, 1, 0, 1, 1, 0, 0]' : 0.318937}", "{'[3, 0, 4, 0, 3, 3, 1, 0, 10, 4, 8, 0, 1, 0, 1, 1, 0, 0]' : 0.316403}", "{'[3, 0, 4, 0, 3, 3, 1, 0, 10, 4, 8, 0, 1, 0, 1, 1, 0, 0]' : 0.316429}", "{'[3, 0, 4, 0, 3, 3, 1, 0, 10, 4, 8, 0, 1, 0, 1, 1, 0, 0]' : 0.317422}", "{'[3, 0, 4, 0, 3, 3, 1, 0, 10, 4, 8, 0, 1, 0, 1, 1, 0, 0]' : 0.316587}", "{'[3, 0, 4, 0, 3, 3, 1, 0, 10, 4, 8, 0, 1, 0, 1, 1, 0, 0]' : 0.316844}", "{'[3, 0, 4, 0, 3, 3, 1, 0, 10, 4, 8, 0, 1, 0, 1, 1, 0, 0]' : 0.316531}", "{'[3, 0, 4, 0, 3, 3, 1, 0, 10, 4, 8, 0, 1, 0, 1, 1, 0, 0]' : 0.316601}", "{'[3, 0, 4, 0, 3, 3, 1, 0, 10, 4, 8, 0, 1, 0, 1, 1, 0, 0]' : 0.316727}", "{'[3, 0, 4, 0, 3, 3, 1, 0, 10, 4, 8, 0, 1, 0, 1, 1, 0, 0]' : 0.316609}", "{'[3, 0, 4, 0, 3, 3, 1, 0, 10, 4, 8, 0, 1, 0, 1, 1, 0, 0]' : 0.316247}", "{'[3, 0, 4, 0, 3, 3, 1, 0, 10, 4, 8, 0, 1, 0, 1, 1, 0, 0]' : 0.316605}", "{'[3, 0, 4, 0, 3, 3, 1, 0, 10, 4, 8, 0, 1, 0, 1, 1, 0, 0]' : 0.316965}", "{'[3, 0, 4, 0, 3, 3, 1, 0, 10, 4, 8, 0, 1, 0, 1, 1, 0, 0]' : 0.316509}"]
returning from 'run': {'[3, 0, 4, 0, 3, 3, 1, 0, 10, 4, 8, 0, 1, 0, 1, 1, 0, 0]': ([0.31664, 0.316441, 0.316637, 0.319743, 0.31677, 0.316603, 0.320963, 0.316301, 0.316572, 0.316959, 0.316263, 0.316711, 0.316787, 0.316295, 0.316429, 0.316729, 0.318937, 0.316403, 0.316429, 0.317422, 0.316587, 0.316844, 0.316531, 0.316601, 0.316727, 0.316609, 0.316247, 0.316605, 0.316965, 0.316509], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 0, 4, 0, 3, 3, 1, 0, 10, 4, 8, 0, 1, 0, 1, 1, 0, 0]': ([0.31664, 0.316441, 0.316637, 0.319743, 0.31677, 0.316603, 0.320963, 0.316301, 0.316572, 0.316959, 0.316263, 0.316711, 0.316787, 0.316295, 0.316429, 0.316729, 0.318937, 0.316403, 0.316429, 0.317422, 0.316587, 0.316844, 0.316531, 0.316601, 0.316727, 0.316609, 0.316247, 0.316605, 0.316965, 0.316509], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	5
        Additions: 		1488
        Multiplications: 	480
        Divisions: 		0
        Logical: 		0
        Reads: 			2585
        Writes: 		304
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest12.exe __orio_perftest12.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest12.exe  
Program Test Output: 
{'[3, 0, 2, 1, 5, 1, 0, 0, 5, 4, 0, 5, 0, 2, 0, 0, 1, 1]' : 0.487952}
{'[3, 0, 2, 1, 5, 1, 0, 0, 5, 4, 0, 5, 0, 2, 0, 0, 1, 1]' : 0.484181}
{'[3, 0, 2, 1, 5, 1, 0, 0, 5, 4, 0, 5, 0, 2, 0, 0, 1, 1]' : 0.491266}
{'[3, 0, 2, 1, 5, 1, 0, 0, 5, 4, 0, 5, 0, 2, 0, 0, 1, 1]' : 0.484569}
{'[3, 0, 2, 1, 5, 1, 0, 0, 5, 4, 0, 5, 0, 2, 0, 0, 1, 1]' : 0.488098}
{'[3, 0, 2, 1, 5, 1, 0, 0, 5, 4, 0, 5, 0, 2, 0, 0, 1, 1]' : 0.525343}
{'[3, 0, 2, 1, 5, 1, 0, 0, 5, 4, 0, 5, 0, 2, 0, 0, 1, 1]' : 0.55768}
{'[3, 0, 2, 1, 5, 1, 0, 0, 5, 4, 0, 5, 0, 2, 0, 0, 1, 1]' : 0.493914}
{'[3, 0, 2, 1, 5, 1, 0, 0, 5, 4, 0, 5, 0, 2, 0, 0, 1, 1]' : 0.488161}
{'[3, 0, 2, 1, 5, 1, 0, 0, 5, 4, 0, 5, 0, 2, 0, 0, 1, 1]' : 0.484072}
{'[3, 0, 2, 1, 5, 1, 0, 0, 5, 4, 0, 5, 0, 2, 0, 0, 1, 1]' : 0.488497}
{'[3, 0, 2, 1, 5, 1, 0, 0, 5, 4, 0, 5, 0, 2, 0, 0, 1, 1]' : 0.483995}
{'[3, 0, 2, 1, 5, 1, 0, 0, 5, 4, 0, 5, 0, 2, 0, 0, 1, 1]' : 0.492154}
{'[3, 0, 2, 1, 5, 1, 0, 0, 5, 4, 0, 5, 0, 2, 0, 0, 1, 1]' : 0.484146}
{'[3, 0, 2, 1, 5, 1, 0, 0, 5, 4, 0, 5, 0, 2, 0, 0, 1, 1]' : 0.487947}
{'[3, 0, 2, 1, 5, 1, 0, 0, 5, 4, 0, 5, 0, 2, 0, 0, 1, 1]' : 0.484285}
{'[3, 0, 2, 1, 5, 1, 0, 0, 5, 4, 0, 5, 0, 2, 0, 0, 1, 1]' : 0.488239}
{'[3, 0, 2, 1, 5, 1, 0, 0, 5, 4, 0, 5, 0, 2, 0, 0, 1, 1]' : 0.484135}
{'[3, 0, 2, 1, 5, 1, 0, 0, 5, 4, 0, 5, 0, 2, 0, 0, 1, 1]' : 0.488066}
{'[3, 0, 2, 1, 5, 1, 0, 0, 5, 4, 0, 5, 0, 2, 0, 0, 1, 1]' : 0.484301}
{'[3, 0, 2, 1, 5, 1, 0, 0, 5, 4, 0, 5, 0, 2, 0, 0, 1, 1]' : 0.488657}
{'[3, 0, 2, 1, 5, 1, 0, 0, 5, 4, 0, 5, 0, 2, 0, 0, 1, 1]' : 0.484373}
{'[3, 0, 2, 1, 5, 1, 0, 0, 5, 4, 0, 5, 0, 2, 0, 0, 1, 1]' : 0.488732}
{'[3, 0, 2, 1, 5, 1, 0, 0, 5, 4, 0, 5, 0, 2, 0, 0, 1, 1]' : 0.533899}
{'[3, 0, 2, 1, 5, 1, 0, 0, 5, 4, 0, 5, 0, 2, 0, 0, 1, 1]' : 0.500713}
{'[3, 0, 2, 1, 5, 1, 0, 0, 5, 4, 0, 5, 0, 2, 0, 0, 1, 1]' : 0.518227}
{'[3, 0, 2, 1, 5, 1, 0, 0, 5, 4, 0, 5, 0, 2, 0, 0, 1, 1]' : 0.488895}
{'[3, 0, 2, 1, 5, 1, 0, 0, 5, 4, 0, 5, 0, 2, 0, 0, 1, 1]' : 0.484327}
{'[3, 0, 2, 1, 5, 1, 0, 0, 5, 4, 0, 5, 0, 2, 0, 0, 1, 1]' : 0.488098}
{'[3, 0, 2, 1, 5, 1, 0, 0, 5, 4, 0, 5, 0, 2, 0, 0, 1, 1]' : 0.48444}

out:
 ["{'[3, 0, 2, 1, 5, 1, 0, 0, 5, 4, 0, 5, 0, 2, 0, 0, 1, 1]' : 0.487952}", "{'[3, 0, 2, 1, 5, 1, 0, 0, 5, 4, 0, 5, 0, 2, 0, 0, 1, 1]' : 0.484181}", "{'[3, 0, 2, 1, 5, 1, 0, 0, 5, 4, 0, 5, 0, 2, 0, 0, 1, 1]' : 0.491266}", "{'[3, 0, 2, 1, 5, 1, 0, 0, 5, 4, 0, 5, 0, 2, 0, 0, 1, 1]' : 0.484569}", "{'[3, 0, 2, 1, 5, 1, 0, 0, 5, 4, 0, 5, 0, 2, 0, 0, 1, 1]' : 0.488098}", "{'[3, 0, 2, 1, 5, 1, 0, 0, 5, 4, 0, 5, 0, 2, 0, 0, 1, 1]' : 0.525343}", "{'[3, 0, 2, 1, 5, 1, 0, 0, 5, 4, 0, 5, 0, 2, 0, 0, 1, 1]' : 0.55768}", "{'[3, 0, 2, 1, 5, 1, 0, 0, 5, 4, 0, 5, 0, 2, 0, 0, 1, 1]' : 0.493914}", "{'[3, 0, 2, 1, 5, 1, 0, 0, 5, 4, 0, 5, 0, 2, 0, 0, 1, 1]' : 0.488161}", "{'[3, 0, 2, 1, 5, 1, 0, 0, 5, 4, 0, 5, 0, 2, 0, 0, 1, 1]' : 0.484072}", "{'[3, 0, 2, 1, 5, 1, 0, 0, 5, 4, 0, 5, 0, 2, 0, 0, 1, 1]' : 0.488497}", "{'[3, 0, 2, 1, 5, 1, 0, 0, 5, 4, 0, 5, 0, 2, 0, 0, 1, 1]' : 0.483995}", "{'[3, 0, 2, 1, 5, 1, 0, 0, 5, 4, 0, 5, 0, 2, 0, 0, 1, 1]' : 0.492154}", "{'[3, 0, 2, 1, 5, 1, 0, 0, 5, 4, 0, 5, 0, 2, 0, 0, 1, 1]' : 0.484146}", "{'[3, 0, 2, 1, 5, 1, 0, 0, 5, 4, 0, 5, 0, 2, 0, 0, 1, 1]' : 0.487947}", "{'[3, 0, 2, 1, 5, 1, 0, 0, 5, 4, 0, 5, 0, 2, 0, 0, 1, 1]' : 0.484285}", "{'[3, 0, 2, 1, 5, 1, 0, 0, 5, 4, 0, 5, 0, 2, 0, 0, 1, 1]' : 0.488239}", "{'[3, 0, 2, 1, 5, 1, 0, 0, 5, 4, 0, 5, 0, 2, 0, 0, 1, 1]' : 0.484135}", "{'[3, 0, 2, 1, 5, 1, 0, 0, 5, 4, 0, 5, 0, 2, 0, 0, 1, 1]' : 0.488066}", "{'[3, 0, 2, 1, 5, 1, 0, 0, 5, 4, 0, 5, 0, 2, 0, 0, 1, 1]' : 0.484301}", "{'[3, 0, 2, 1, 5, 1, 0, 0, 5, 4, 0, 5, 0, 2, 0, 0, 1, 1]' : 0.488657}", "{'[3, 0, 2, 1, 5, 1, 0, 0, 5, 4, 0, 5, 0, 2, 0, 0, 1, 1]' : 0.484373}", "{'[3, 0, 2, 1, 5, 1, 0, 0, 5, 4, 0, 5, 0, 2, 0, 0, 1, 1]' : 0.488732}", "{'[3, 0, 2, 1, 5, 1, 0, 0, 5, 4, 0, 5, 0, 2, 0, 0, 1, 1]' : 0.533899}", "{'[3, 0, 2, 1, 5, 1, 0, 0, 5, 4, 0, 5, 0, 2, 0, 0, 1, 1]' : 0.500713}", "{'[3, 0, 2, 1, 5, 1, 0, 0, 5, 4, 0, 5, 0, 2, 0, 0, 1, 1]' : 0.518227}", "{'[3, 0, 2, 1, 5, 1, 0, 0, 5, 4, 0, 5, 0, 2, 0, 0, 1, 1]' : 0.488895}", "{'[3, 0, 2, 1, 5, 1, 0, 0, 5, 4, 0, 5, 0, 2, 0, 0, 1, 1]' : 0.484327}", "{'[3, 0, 2, 1, 5, 1, 0, 0, 5, 4, 0, 5, 0, 2, 0, 0, 1, 1]' : 0.488098}", "{'[3, 0, 2, 1, 5, 1, 0, 0, 5, 4, 0, 5, 0, 2, 0, 0, 1, 1]' : 0.48444}"]
returning from 'run': {'[3, 0, 2, 1, 5, 1, 0, 0, 5, 4, 0, 5, 0, 2, 0, 0, 1, 1]': ([0.487952, 0.484181, 0.491266, 0.484569, 0.488098, 0.525343, 0.55768, 0.493914, 0.488161, 0.484072, 0.488497, 0.483995, 0.492154, 0.484146, 0.487947, 0.484285, 0.488239, 0.484135, 0.488066, 0.484301, 0.488657, 0.484373, 0.488732, 0.533899, 0.500713, 0.518227, 0.488895, 0.484327, 0.488098, 0.48444], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 0, 2, 1, 5, 1, 0, 0, 5, 4, 0, 5, 0, 2, 0, 0, 1, 1]': ([0.487952, 0.484181, 0.491266, 0.484569, 0.488098, 0.525343, 0.55768, 0.493914, 0.488161, 0.484072, 0.488497, 0.483995, 0.492154, 0.484146, 0.487947, 0.484285, 0.488239, 0.484135, 0.488066, 0.484301, 0.488657, 0.484373, 0.488732, 0.533899, 0.500713, 0.518227, 0.488895, 0.484327, 0.488098, 0.48444], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	31
        Max loop nest depth: 	6
        Additions: 		4296
        Multiplications: 	1326
        Divisions: 		0
        Logical: 		0
        Reads: 			6967
        Writes: 		785
        Comparisons:		31
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest13.exe __orio_perftest13.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest13.exe  
Program Test Output: 
{'[2, 2, 3, 6, 3, 5, 0, 0, 11, 29, 6, 0, 1, 0, 1, 0, 0, 1]' : 0.339455}
{'[2, 2, 3, 6, 3, 5, 0, 0, 11, 29, 6, 0, 1, 0, 1, 0, 0, 1]' : 0.339576}
{'[2, 2, 3, 6, 3, 5, 0, 0, 11, 29, 6, 0, 1, 0, 1, 0, 0, 1]' : 0.339476}
{'[2, 2, 3, 6, 3, 5, 0, 0, 11, 29, 6, 0, 1, 0, 1, 0, 0, 1]' : 0.339393}
{'[2, 2, 3, 6, 3, 5, 0, 0, 11, 29, 6, 0, 1, 0, 1, 0, 0, 1]' : 0.339657}
{'[2, 2, 3, 6, 3, 5, 0, 0, 11, 29, 6, 0, 1, 0, 1, 0, 0, 1]' : 0.339554}
{'[2, 2, 3, 6, 3, 5, 0, 0, 11, 29, 6, 0, 1, 0, 1, 0, 0, 1]' : 0.339407}
{'[2, 2, 3, 6, 3, 5, 0, 0, 11, 29, 6, 0, 1, 0, 1, 0, 0, 1]' : 0.339546}
{'[2, 2, 3, 6, 3, 5, 0, 0, 11, 29, 6, 0, 1, 0, 1, 0, 0, 1]' : 0.339475}
{'[2, 2, 3, 6, 3, 5, 0, 0, 11, 29, 6, 0, 1, 0, 1, 0, 0, 1]' : 0.339433}
{'[2, 2, 3, 6, 3, 5, 0, 0, 11, 29, 6, 0, 1, 0, 1, 0, 0, 1]' : 0.339481}
{'[2, 2, 3, 6, 3, 5, 0, 0, 11, 29, 6, 0, 1, 0, 1, 0, 0, 1]' : 0.339801}
{'[2, 2, 3, 6, 3, 5, 0, 0, 11, 29, 6, 0, 1, 0, 1, 0, 0, 1]' : 0.339475}
{'[2, 2, 3, 6, 3, 5, 0, 0, 11, 29, 6, 0, 1, 0, 1, 0, 0, 1]' : 0.339364}
{'[2, 2, 3, 6, 3, 5, 0, 0, 11, 29, 6, 0, 1, 0, 1, 0, 0, 1]' : 0.339579}
{'[2, 2, 3, 6, 3, 5, 0, 0, 11, 29, 6, 0, 1, 0, 1, 0, 0, 1]' : 0.339651}
{'[2, 2, 3, 6, 3, 5, 0, 0, 11, 29, 6, 0, 1, 0, 1, 0, 0, 1]' : 0.339541}
{'[2, 2, 3, 6, 3, 5, 0, 0, 11, 29, 6, 0, 1, 0, 1, 0, 0, 1]' : 0.339485}
{'[2, 2, 3, 6, 3, 5, 0, 0, 11, 29, 6, 0, 1, 0, 1, 0, 0, 1]' : 0.339218}
{'[2, 2, 3, 6, 3, 5, 0, 0, 11, 29, 6, 0, 1, 0, 1, 0, 0, 1]' : 0.339479}
{'[2, 2, 3, 6, 3, 5, 0, 0, 11, 29, 6, 0, 1, 0, 1, 0, 0, 1]' : 0.339448}
{'[2, 2, 3, 6, 3, 5, 0, 0, 11, 29, 6, 0, 1, 0, 1, 0, 0, 1]' : 0.33967}
{'[2, 2, 3, 6, 3, 5, 0, 0, 11, 29, 6, 0, 1, 0, 1, 0, 0, 1]' : 0.339564}
{'[2, 2, 3, 6, 3, 5, 0, 0, 11, 29, 6, 0, 1, 0, 1, 0, 0, 1]' : 0.339717}
{'[2, 2, 3, 6, 3, 5, 0, 0, 11, 29, 6, 0, 1, 0, 1, 0, 0, 1]' : 0.339671}
{'[2, 2, 3, 6, 3, 5, 0, 0, 11, 29, 6, 0, 1, 0, 1, 0, 0, 1]' : 0.339559}
{'[2, 2, 3, 6, 3, 5, 0, 0, 11, 29, 6, 0, 1, 0, 1, 0, 0, 1]' : 0.339546}
{'[2, 2, 3, 6, 3, 5, 0, 0, 11, 29, 6, 0, 1, 0, 1, 0, 0, 1]' : 0.339595}
{'[2, 2, 3, 6, 3, 5, 0, 0, 11, 29, 6, 0, 1, 0, 1, 0, 0, 1]' : 0.339389}
{'[2, 2, 3, 6, 3, 5, 0, 0, 11, 29, 6, 0, 1, 0, 1, 0, 0, 1]' : 0.339754}

out:
 ["{'[2, 2, 3, 6, 3, 5, 0, 0, 11, 29, 6, 0, 1, 0, 1, 0, 0, 1]' : 0.339455}", "{'[2, 2, 3, 6, 3, 5, 0, 0, 11, 29, 6, 0, 1, 0, 1, 0, 0, 1]' : 0.339576}", "{'[2, 2, 3, 6, 3, 5, 0, 0, 11, 29, 6, 0, 1, 0, 1, 0, 0, 1]' : 0.339476}", "{'[2, 2, 3, 6, 3, 5, 0, 0, 11, 29, 6, 0, 1, 0, 1, 0, 0, 1]' : 0.339393}", "{'[2, 2, 3, 6, 3, 5, 0, 0, 11, 29, 6, 0, 1, 0, 1, 0, 0, 1]' : 0.339657}", "{'[2, 2, 3, 6, 3, 5, 0, 0, 11, 29, 6, 0, 1, 0, 1, 0, 0, 1]' : 0.339554}", "{'[2, 2, 3, 6, 3, 5, 0, 0, 11, 29, 6, 0, 1, 0, 1, 0, 0, 1]' : 0.339407}", "{'[2, 2, 3, 6, 3, 5, 0, 0, 11, 29, 6, 0, 1, 0, 1, 0, 0, 1]' : 0.339546}", "{'[2, 2, 3, 6, 3, 5, 0, 0, 11, 29, 6, 0, 1, 0, 1, 0, 0, 1]' : 0.339475}", "{'[2, 2, 3, 6, 3, 5, 0, 0, 11, 29, 6, 0, 1, 0, 1, 0, 0, 1]' : 0.339433}", "{'[2, 2, 3, 6, 3, 5, 0, 0, 11, 29, 6, 0, 1, 0, 1, 0, 0, 1]' : 0.339481}", "{'[2, 2, 3, 6, 3, 5, 0, 0, 11, 29, 6, 0, 1, 0, 1, 0, 0, 1]' : 0.339801}", "{'[2, 2, 3, 6, 3, 5, 0, 0, 11, 29, 6, 0, 1, 0, 1, 0, 0, 1]' : 0.339475}", "{'[2, 2, 3, 6, 3, 5, 0, 0, 11, 29, 6, 0, 1, 0, 1, 0, 0, 1]' : 0.339364}", "{'[2, 2, 3, 6, 3, 5, 0, 0, 11, 29, 6, 0, 1, 0, 1, 0, 0, 1]' : 0.339579}", "{'[2, 2, 3, 6, 3, 5, 0, 0, 11, 29, 6, 0, 1, 0, 1, 0, 0, 1]' : 0.339651}", "{'[2, 2, 3, 6, 3, 5, 0, 0, 11, 29, 6, 0, 1, 0, 1, 0, 0, 1]' : 0.339541}", "{'[2, 2, 3, 6, 3, 5, 0, 0, 11, 29, 6, 0, 1, 0, 1, 0, 0, 1]' : 0.339485}", "{'[2, 2, 3, 6, 3, 5, 0, 0, 11, 29, 6, 0, 1, 0, 1, 0, 0, 1]' : 0.339218}", "{'[2, 2, 3, 6, 3, 5, 0, 0, 11, 29, 6, 0, 1, 0, 1, 0, 0, 1]' : 0.339479}", "{'[2, 2, 3, 6, 3, 5, 0, 0, 11, 29, 6, 0, 1, 0, 1, 0, 0, 1]' : 0.339448}", "{'[2, 2, 3, 6, 3, 5, 0, 0, 11, 29, 6, 0, 1, 0, 1, 0, 0, 1]' : 0.33967}", "{'[2, 2, 3, 6, 3, 5, 0, 0, 11, 29, 6, 0, 1, 0, 1, 0, 0, 1]' : 0.339564}", "{'[2, 2, 3, 6, 3, 5, 0, 0, 11, 29, 6, 0, 1, 0, 1, 0, 0, 1]' : 0.339717}", "{'[2, 2, 3, 6, 3, 5, 0, 0, 11, 29, 6, 0, 1, 0, 1, 0, 0, 1]' : 0.339671}", "{'[2, 2, 3, 6, 3, 5, 0, 0, 11, 29, 6, 0, 1, 0, 1, 0, 0, 1]' : 0.339559}", "{'[2, 2, 3, 6, 3, 5, 0, 0, 11, 29, 6, 0, 1, 0, 1, 0, 0, 1]' : 0.339546}", "{'[2, 2, 3, 6, 3, 5, 0, 0, 11, 29, 6, 0, 1, 0, 1, 0, 0, 1]' : 0.339595}", "{'[2, 2, 3, 6, 3, 5, 0, 0, 11, 29, 6, 0, 1, 0, 1, 0, 0, 1]' : 0.339389}", "{'[2, 2, 3, 6, 3, 5, 0, 0, 11, 29, 6, 0, 1, 0, 1, 0, 0, 1]' : 0.339754}"]
returning from 'run': {'[2, 2, 3, 6, 3, 5, 0, 0, 11, 29, 6, 0, 1, 0, 1, 0, 0, 1]': ([0.339455, 0.339576, 0.339476, 0.339393, 0.339657, 0.339554, 0.339407, 0.339546, 0.339475, 0.339433, 0.339481, 0.339801, 0.339475, 0.339364, 0.339579, 0.339651, 0.339541, 0.339485, 0.339218, 0.339479, 0.339448, 0.33967, 0.339564, 0.339717, 0.339671, 0.339559, 0.339546, 0.339595, 0.339389, 0.339754], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 2, 3, 6, 3, 5, 0, 0, 11, 29, 6, 0, 1, 0, 1, 0, 0, 1]': ([0.339455, 0.339576, 0.339476, 0.339393, 0.339657, 0.339554, 0.339407, 0.339546, 0.339475, 0.339433, 0.339481, 0.339801, 0.339475, 0.339364, 0.339579, 0.339651, 0.339541, 0.339485, 0.339218, 0.339479, 0.339448, 0.33967, 0.339564, 0.339717, 0.339671, 0.339559, 0.339546, 0.339595, 0.339389, 0.339754], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	4
        Additions: 		210
        Multiplications: 	72
        Divisions: 		0
        Logical: 		0
        Reads: 			524
        Writes: 		121
        Comparisons:		10
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest14.exe __orio_perftest14.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest14.exe  
Program Test Output: 
{'[0, 3, 2, 0, 3, 5, 1, 0, 0, 0, 17, 26, 0, 1, 0, 1, 0, 1]' : 0.825067}
{'[0, 3, 2, 0, 3, 5, 1, 0, 0, 0, 17, 26, 0, 1, 0, 1, 0, 1]' : 0.824916}
{'[0, 3, 2, 0, 3, 5, 1, 0, 0, 0, 17, 26, 0, 1, 0, 1, 0, 1]' : 0.824727}
{'[0, 3, 2, 0, 3, 5, 1, 0, 0, 0, 17, 26, 0, 1, 0, 1, 0, 1]' : 0.824709}
{'[0, 3, 2, 0, 3, 5, 1, 0, 0, 0, 17, 26, 0, 1, 0, 1, 0, 1]' : 0.824562}
{'[0, 3, 2, 0, 3, 5, 1, 0, 0, 0, 17, 26, 0, 1, 0, 1, 0, 1]' : 0.824969}
{'[0, 3, 2, 0, 3, 5, 1, 0, 0, 0, 17, 26, 0, 1, 0, 1, 0, 1]' : 0.824968}
{'[0, 3, 2, 0, 3, 5, 1, 0, 0, 0, 17, 26, 0, 1, 0, 1, 0, 1]' : 0.825073}
{'[0, 3, 2, 0, 3, 5, 1, 0, 0, 0, 17, 26, 0, 1, 0, 1, 0, 1]' : 0.824627}
{'[0, 3, 2, 0, 3, 5, 1, 0, 0, 0, 17, 26, 0, 1, 0, 1, 0, 1]' : 0.824943}
{'[0, 3, 2, 0, 3, 5, 1, 0, 0, 0, 17, 26, 0, 1, 0, 1, 0, 1]' : 0.82657}
{'[0, 3, 2, 0, 3, 5, 1, 0, 0, 0, 17, 26, 0, 1, 0, 1, 0, 1]' : 0.825325}
{'[0, 3, 2, 0, 3, 5, 1, 0, 0, 0, 17, 26, 0, 1, 0, 1, 0, 1]' : 0.82472}
{'[0, 3, 2, 0, 3, 5, 1, 0, 0, 0, 17, 26, 0, 1, 0, 1, 0, 1]' : 0.832672}
{'[0, 3, 2, 0, 3, 5, 1, 0, 0, 0, 17, 26, 0, 1, 0, 1, 0, 1]' : 0.824351}
{'[0, 3, 2, 0, 3, 5, 1, 0, 0, 0, 17, 26, 0, 1, 0, 1, 0, 1]' : 0.824587}
{'[0, 3, 2, 0, 3, 5, 1, 0, 0, 0, 17, 26, 0, 1, 0, 1, 0, 1]' : 0.824397}
{'[0, 3, 2, 0, 3, 5, 1, 0, 0, 0, 17, 26, 0, 1, 0, 1, 0, 1]' : 0.82451}
{'[0, 3, 2, 0, 3, 5, 1, 0, 0, 0, 17, 26, 0, 1, 0, 1, 0, 1]' : 0.824424}
{'[0, 3, 2, 0, 3, 5, 1, 0, 0, 0, 17, 26, 0, 1, 0, 1, 0, 1]' : 0.82483}
{'[0, 3, 2, 0, 3, 5, 1, 0, 0, 0, 17, 26, 0, 1, 0, 1, 0, 1]' : 0.830235}
{'[0, 3, 2, 0, 3, 5, 1, 0, 0, 0, 17, 26, 0, 1, 0, 1, 0, 1]' : 0.824988}
{'[0, 3, 2, 0, 3, 5, 1, 0, 0, 0, 17, 26, 0, 1, 0, 1, 0, 1]' : 0.825083}
{'[0, 3, 2, 0, 3, 5, 1, 0, 0, 0, 17, 26, 0, 1, 0, 1, 0, 1]' : 0.825826}
{'[0, 3, 2, 0, 3, 5, 1, 0, 0, 0, 17, 26, 0, 1, 0, 1, 0, 1]' : 0.824903}
{'[0, 3, 2, 0, 3, 5, 1, 0, 0, 0, 17, 26, 0, 1, 0, 1, 0, 1]' : 0.824678}
{'[0, 3, 2, 0, 3, 5, 1, 0, 0, 0, 17, 26, 0, 1, 0, 1, 0, 1]' : 0.832465}
{'[0, 3, 2, 0, 3, 5, 1, 0, 0, 0, 17, 26, 0, 1, 0, 1, 0, 1]' : 0.826372}
{'[0, 3, 2, 0, 3, 5, 1, 0, 0, 0, 17, 26, 0, 1, 0, 1, 0, 1]' : 0.826189}
{'[0, 3, 2, 0, 3, 5, 1, 0, 0, 0, 17, 26, 0, 1, 0, 1, 0, 1]' : 0.826766}

out:
 ["{'[0, 3, 2, 0, 3, 5, 1, 0, 0, 0, 17, 26, 0, 1, 0, 1, 0, 1]' : 0.825067}", "{'[0, 3, 2, 0, 3, 5, 1, 0, 0, 0, 17, 26, 0, 1, 0, 1, 0, 1]' : 0.824916}", "{'[0, 3, 2, 0, 3, 5, 1, 0, 0, 0, 17, 26, 0, 1, 0, 1, 0, 1]' : 0.824727}", "{'[0, 3, 2, 0, 3, 5, 1, 0, 0, 0, 17, 26, 0, 1, 0, 1, 0, 1]' : 0.824709}", "{'[0, 3, 2, 0, 3, 5, 1, 0, 0, 0, 17, 26, 0, 1, 0, 1, 0, 1]' : 0.824562}", "{'[0, 3, 2, 0, 3, 5, 1, 0, 0, 0, 17, 26, 0, 1, 0, 1, 0, 1]' : 0.824969}", "{'[0, 3, 2, 0, 3, 5, 1, 0, 0, 0, 17, 26, 0, 1, 0, 1, 0, 1]' : 0.824968}", "{'[0, 3, 2, 0, 3, 5, 1, 0, 0, 0, 17, 26, 0, 1, 0, 1, 0, 1]' : 0.825073}", "{'[0, 3, 2, 0, 3, 5, 1, 0, 0, 0, 17, 26, 0, 1, 0, 1, 0, 1]' : 0.824627}", "{'[0, 3, 2, 0, 3, 5, 1, 0, 0, 0, 17, 26, 0, 1, 0, 1, 0, 1]' : 0.824943}", "{'[0, 3, 2, 0, 3, 5, 1, 0, 0, 0, 17, 26, 0, 1, 0, 1, 0, 1]' : 0.82657}", "{'[0, 3, 2, 0, 3, 5, 1, 0, 0, 0, 17, 26, 0, 1, 0, 1, 0, 1]' : 0.825325}", "{'[0, 3, 2, 0, 3, 5, 1, 0, 0, 0, 17, 26, 0, 1, 0, 1, 0, 1]' : 0.82472}", "{'[0, 3, 2, 0, 3, 5, 1, 0, 0, 0, 17, 26, 0, 1, 0, 1, 0, 1]' : 0.832672}", "{'[0, 3, 2, 0, 3, 5, 1, 0, 0, 0, 17, 26, 0, 1, 0, 1, 0, 1]' : 0.824351}", "{'[0, 3, 2, 0, 3, 5, 1, 0, 0, 0, 17, 26, 0, 1, 0, 1, 0, 1]' : 0.824587}", "{'[0, 3, 2, 0, 3, 5, 1, 0, 0, 0, 17, 26, 0, 1, 0, 1, 0, 1]' : 0.824397}", "{'[0, 3, 2, 0, 3, 5, 1, 0, 0, 0, 17, 26, 0, 1, 0, 1, 0, 1]' : 0.82451}", "{'[0, 3, 2, 0, 3, 5, 1, 0, 0, 0, 17, 26, 0, 1, 0, 1, 0, 1]' : 0.824424}", "{'[0, 3, 2, 0, 3, 5, 1, 0, 0, 0, 17, 26, 0, 1, 0, 1, 0, 1]' : 0.82483}", "{'[0, 3, 2, 0, 3, 5, 1, 0, 0, 0, 17, 26, 0, 1, 0, 1, 0, 1]' : 0.830235}", "{'[0, 3, 2, 0, 3, 5, 1, 0, 0, 0, 17, 26, 0, 1, 0, 1, 0, 1]' : 0.824988}", "{'[0, 3, 2, 0, 3, 5, 1, 0, 0, 0, 17, 26, 0, 1, 0, 1, 0, 1]' : 0.825083}", "{'[0, 3, 2, 0, 3, 5, 1, 0, 0, 0, 17, 26, 0, 1, 0, 1, 0, 1]' : 0.825826}", "{'[0, 3, 2, 0, 3, 5, 1, 0, 0, 0, 17, 26, 0, 1, 0, 1, 0, 1]' : 0.824903}", "{'[0, 3, 2, 0, 3, 5, 1, 0, 0, 0, 17, 26, 0, 1, 0, 1, 0, 1]' : 0.824678}", "{'[0, 3, 2, 0, 3, 5, 1, 0, 0, 0, 17, 26, 0, 1, 0, 1, 0, 1]' : 0.832465}", "{'[0, 3, 2, 0, 3, 5, 1, 0, 0, 0, 17, 26, 0, 1, 0, 1, 0, 1]' : 0.826372}", "{'[0, 3, 2, 0, 3, 5, 1, 0, 0, 0, 17, 26, 0, 1, 0, 1, 0, 1]' : 0.826189}", "{'[0, 3, 2, 0, 3, 5, 1, 0, 0, 0, 17, 26, 0, 1, 0, 1, 0, 1]' : 0.826766}"]
returning from 'run': {'[0, 3, 2, 0, 3, 5, 1, 0, 0, 0, 17, 26, 0, 1, 0, 1, 0, 1]': ([0.825067, 0.824916, 0.824727, 0.824709, 0.824562, 0.824969, 0.824968, 0.825073, 0.824627, 0.824943, 0.82657, 0.825325, 0.82472, 0.832672, 0.824351, 0.824587, 0.824397, 0.82451, 0.824424, 0.82483, 0.830235, 0.824988, 0.825083, 0.825826, 0.824903, 0.824678, 0.832465, 0.826372, 0.826189, 0.826766], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 3, 2, 0, 3, 5, 1, 0, 0, 0, 17, 26, 0, 1, 0, 1, 0, 1]': ([0.825067, 0.824916, 0.824727, 0.824709, 0.824562, 0.824969, 0.824968, 0.825073, 0.824627, 0.824943, 0.82657, 0.825325, 0.82472, 0.832672, 0.824351, 0.824587, 0.824397, 0.82451, 0.824424, 0.82483, 0.830235, 0.824988, 0.825083, 0.825826, 0.824903, 0.824678, 0.832465, 0.826372, 0.826189, 0.826766], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	46
        Max loop nest depth: 	6
        Additions: 		4979
        Multiplications: 	1456
        Divisions: 		0
        Logical: 		0
        Reads: 			7724
        Writes: 		857
        Comparisons:		46
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest15.exe __orio_perftest15.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest15.exe  
Program Test Output: 
{'[1, 6, 3, 1, 5, 5, 0, 0, 21, 12, 17, 0, 0, 2, 0, 0, 0, 0]' : 0.512342}
{'[1, 6, 3, 1, 5, 5, 0, 0, 21, 12, 17, 0, 0, 2, 0, 0, 0, 0]' : 0.512145}
{'[1, 6, 3, 1, 5, 5, 0, 0, 21, 12, 17, 0, 0, 2, 0, 0, 0, 0]' : 0.512009}
{'[1, 6, 3, 1, 5, 5, 0, 0, 21, 12, 17, 0, 0, 2, 0, 0, 0, 0]' : 0.511192}
{'[1, 6, 3, 1, 5, 5, 0, 0, 21, 12, 17, 0, 0, 2, 0, 0, 0, 0]' : 0.511938}
{'[1, 6, 3, 1, 5, 5, 0, 0, 21, 12, 17, 0, 0, 2, 0, 0, 0, 0]' : 0.510842}
{'[1, 6, 3, 1, 5, 5, 0, 0, 21, 12, 17, 0, 0, 2, 0, 0, 0, 0]' : 0.512016}
{'[1, 6, 3, 1, 5, 5, 0, 0, 21, 12, 17, 0, 0, 2, 0, 0, 0, 0]' : 0.511483}
{'[1, 6, 3, 1, 5, 5, 0, 0, 21, 12, 17, 0, 0, 2, 0, 0, 0, 0]' : 0.511947}
{'[1, 6, 3, 1, 5, 5, 0, 0, 21, 12, 17, 0, 0, 2, 0, 0, 0, 0]' : 0.511775}
{'[1, 6, 3, 1, 5, 5, 0, 0, 21, 12, 17, 0, 0, 2, 0, 0, 0, 0]' : 0.511638}
{'[1, 6, 3, 1, 5, 5, 0, 0, 21, 12, 17, 0, 0, 2, 0, 0, 0, 0]' : 0.511348}
{'[1, 6, 3, 1, 5, 5, 0, 0, 21, 12, 17, 0, 0, 2, 0, 0, 0, 0]' : 0.513029}
{'[1, 6, 3, 1, 5, 5, 0, 0, 21, 12, 17, 0, 0, 2, 0, 0, 0, 0]' : 0.511108}
{'[1, 6, 3, 1, 5, 5, 0, 0, 21, 12, 17, 0, 0, 2, 0, 0, 0, 0]' : 0.511044}
{'[1, 6, 3, 1, 5, 5, 0, 0, 21, 12, 17, 0, 0, 2, 0, 0, 0, 0]' : 0.511621}
{'[1, 6, 3, 1, 5, 5, 0, 0, 21, 12, 17, 0, 0, 2, 0, 0, 0, 0]' : 0.511131}
{'[1, 6, 3, 1, 5, 5, 0, 0, 21, 12, 17, 0, 0, 2, 0, 0, 0, 0]' : 0.511431}
{'[1, 6, 3, 1, 5, 5, 0, 0, 21, 12, 17, 0, 0, 2, 0, 0, 0, 0]' : 0.511389}
{'[1, 6, 3, 1, 5, 5, 0, 0, 21, 12, 17, 0, 0, 2, 0, 0, 0, 0]' : 0.510835}
{'[1, 6, 3, 1, 5, 5, 0, 0, 21, 12, 17, 0, 0, 2, 0, 0, 0, 0]' : 0.511751}
{'[1, 6, 3, 1, 5, 5, 0, 0, 21, 12, 17, 0, 0, 2, 0, 0, 0, 0]' : 0.510664}
{'[1, 6, 3, 1, 5, 5, 0, 0, 21, 12, 17, 0, 0, 2, 0, 0, 0, 0]' : 0.51128}
{'[1, 6, 3, 1, 5, 5, 0, 0, 21, 12, 17, 0, 0, 2, 0, 0, 0, 0]' : 0.512668}
{'[1, 6, 3, 1, 5, 5, 0, 0, 21, 12, 17, 0, 0, 2, 0, 0, 0, 0]' : 0.511667}
{'[1, 6, 3, 1, 5, 5, 0, 0, 21, 12, 17, 0, 0, 2, 0, 0, 0, 0]' : 0.511829}
{'[1, 6, 3, 1, 5, 5, 0, 0, 21, 12, 17, 0, 0, 2, 0, 0, 0, 0]' : 0.511592}
{'[1, 6, 3, 1, 5, 5, 0, 0, 21, 12, 17, 0, 0, 2, 0, 0, 0, 0]' : 0.511058}
{'[1, 6, 3, 1, 5, 5, 0, 0, 21, 12, 17, 0, 0, 2, 0, 0, 0, 0]' : 0.511241}
{'[1, 6, 3, 1, 5, 5, 0, 0, 21, 12, 17, 0, 0, 2, 0, 0, 0, 0]' : 0.511187}

out:
 ["{'[1, 6, 3, 1, 5, 5, 0, 0, 21, 12, 17, 0, 0, 2, 0, 0, 0, 0]' : 0.512342}", "{'[1, 6, 3, 1, 5, 5, 0, 0, 21, 12, 17, 0, 0, 2, 0, 0, 0, 0]' : 0.512145}", "{'[1, 6, 3, 1, 5, 5, 0, 0, 21, 12, 17, 0, 0, 2, 0, 0, 0, 0]' : 0.512009}", "{'[1, 6, 3, 1, 5, 5, 0, 0, 21, 12, 17, 0, 0, 2, 0, 0, 0, 0]' : 0.511192}", "{'[1, 6, 3, 1, 5, 5, 0, 0, 21, 12, 17, 0, 0, 2, 0, 0, 0, 0]' : 0.511938}", "{'[1, 6, 3, 1, 5, 5, 0, 0, 21, 12, 17, 0, 0, 2, 0, 0, 0, 0]' : 0.510842}", "{'[1, 6, 3, 1, 5, 5, 0, 0, 21, 12, 17, 0, 0, 2, 0, 0, 0, 0]' : 0.512016}", "{'[1, 6, 3, 1, 5, 5, 0, 0, 21, 12, 17, 0, 0, 2, 0, 0, 0, 0]' : 0.511483}", "{'[1, 6, 3, 1, 5, 5, 0, 0, 21, 12, 17, 0, 0, 2, 0, 0, 0, 0]' : 0.511947}", "{'[1, 6, 3, 1, 5, 5, 0, 0, 21, 12, 17, 0, 0, 2, 0, 0, 0, 0]' : 0.511775}", "{'[1, 6, 3, 1, 5, 5, 0, 0, 21, 12, 17, 0, 0, 2, 0, 0, 0, 0]' : 0.511638}", "{'[1, 6, 3, 1, 5, 5, 0, 0, 21, 12, 17, 0, 0, 2, 0, 0, 0, 0]' : 0.511348}", "{'[1, 6, 3, 1, 5, 5, 0, 0, 21, 12, 17, 0, 0, 2, 0, 0, 0, 0]' : 0.513029}", "{'[1, 6, 3, 1, 5, 5, 0, 0, 21, 12, 17, 0, 0, 2, 0, 0, 0, 0]' : 0.511108}", "{'[1, 6, 3, 1, 5, 5, 0, 0, 21, 12, 17, 0, 0, 2, 0, 0, 0, 0]' : 0.511044}", "{'[1, 6, 3, 1, 5, 5, 0, 0, 21, 12, 17, 0, 0, 2, 0, 0, 0, 0]' : 0.511621}", "{'[1, 6, 3, 1, 5, 5, 0, 0, 21, 12, 17, 0, 0, 2, 0, 0, 0, 0]' : 0.511131}", "{'[1, 6, 3, 1, 5, 5, 0, 0, 21, 12, 17, 0, 0, 2, 0, 0, 0, 0]' : 0.511431}", "{'[1, 6, 3, 1, 5, 5, 0, 0, 21, 12, 17, 0, 0, 2, 0, 0, 0, 0]' : 0.511389}", "{'[1, 6, 3, 1, 5, 5, 0, 0, 21, 12, 17, 0, 0, 2, 0, 0, 0, 0]' : 0.510835}", "{'[1, 6, 3, 1, 5, 5, 0, 0, 21, 12, 17, 0, 0, 2, 0, 0, 0, 0]' : 0.511751}", "{'[1, 6, 3, 1, 5, 5, 0, 0, 21, 12, 17, 0, 0, 2, 0, 0, 0, 0]' : 0.510664}", "{'[1, 6, 3, 1, 5, 5, 0, 0, 21, 12, 17, 0, 0, 2, 0, 0, 0, 0]' : 0.51128}", "{'[1, 6, 3, 1, 5, 5, 0, 0, 21, 12, 17, 0, 0, 2, 0, 0, 0, 0]' : 0.512668}", "{'[1, 6, 3, 1, 5, 5, 0, 0, 21, 12, 17, 0, 0, 2, 0, 0, 0, 0]' : 0.511667}", "{'[1, 6, 3, 1, 5, 5, 0, 0, 21, 12, 17, 0, 0, 2, 0, 0, 0, 0]' : 0.511829}", "{'[1, 6, 3, 1, 5, 5, 0, 0, 21, 12, 17, 0, 0, 2, 0, 0, 0, 0]' : 0.511592}", "{'[1, 6, 3, 1, 5, 5, 0, 0, 21, 12, 17, 0, 0, 2, 0, 0, 0, 0]' : 0.511058}", "{'[1, 6, 3, 1, 5, 5, 0, 0, 21, 12, 17, 0, 0, 2, 0, 0, 0, 0]' : 0.511241}", "{'[1, 6, 3, 1, 5, 5, 0, 0, 21, 12, 17, 0, 0, 2, 0, 0, 0, 0]' : 0.511187}"]
returning from 'run': {'[1, 6, 3, 1, 5, 5, 0, 0, 21, 12, 17, 0, 0, 2, 0, 0, 0, 0]': ([0.512342, 0.512145, 0.512009, 0.511192, 0.511938, 0.510842, 0.512016, 0.511483, 0.511947, 0.511775, 0.511638, 0.511348, 0.513029, 0.511108, 0.511044, 0.511621, 0.511131, 0.511431, 0.511389, 0.510835, 0.511751, 0.510664, 0.51128, 0.512668, 0.511667, 0.511829, 0.511592, 0.511058, 0.511241, 0.511187], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 6, 3, 1, 5, 5, 0, 0, 21, 12, 17, 0, 0, 2, 0, 0, 0, 0]': ([0.512342, 0.512145, 0.512009, 0.511192, 0.511938, 0.510842, 0.512016, 0.511483, 0.511947, 0.511775, 0.511638, 0.511348, 0.513029, 0.511108, 0.511044, 0.511621, 0.511131, 0.511431, 0.511389, 0.510835, 0.511751, 0.510664, 0.51128, 0.512668, 0.511667, 0.511829, 0.511592, 0.511058, 0.511241, 0.511187], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
Code stats:
        Number of loops: 	120
        Max loop nest depth: 	5
        Additions: 		5436
        Multiplications: 	2016
        Divisions: 		0
        Logical: 		0
        Reads: 			9762
        Writes: 		1574
        Comparisons:		120
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest16.exe __orio_perftest16.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest16.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest16.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest16.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 527, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors, data)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 408, in dopt_anova
    budget)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 333, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 279, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest16.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 527, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors, data)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 408, in dopt_anova
    budget)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 333, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 279, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = kkk
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	5
        Additions: 		3640
        Multiplications: 	1120
        Divisions: 		0
        Logical: 		0
        Reads: 			5834
        Writes: 		641
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest17.exe __orio_perftest17.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest17.exe  
Program Test Output: 
{'[6, 2, 5, 4, 6, 3, 0, 0, 10, 6, 11, 0, 2, 0, 0, 0, 0, 1]' : 0.510301}
{'[6, 2, 5, 4, 6, 3, 0, 0, 10, 6, 11, 0, 2, 0, 0, 0, 0, 1]' : 0.510626}
{'[6, 2, 5, 4, 6, 3, 0, 0, 10, 6, 11, 0, 2, 0, 0, 0, 0, 1]' : 0.510073}
{'[6, 2, 5, 4, 6, 3, 0, 0, 10, 6, 11, 0, 2, 0, 0, 0, 0, 1]' : 0.509846}
{'[6, 2, 5, 4, 6, 3, 0, 0, 10, 6, 11, 0, 2, 0, 0, 0, 0, 1]' : 0.51003}
{'[6, 2, 5, 4, 6, 3, 0, 0, 10, 6, 11, 0, 2, 0, 0, 0, 0, 1]' : 0.509905}
{'[6, 2, 5, 4, 6, 3, 0, 0, 10, 6, 11, 0, 2, 0, 0, 0, 0, 1]' : 0.514896}
{'[6, 2, 5, 4, 6, 3, 0, 0, 10, 6, 11, 0, 2, 0, 0, 0, 0, 1]' : 0.51033}
{'[6, 2, 5, 4, 6, 3, 0, 0, 10, 6, 11, 0, 2, 0, 0, 0, 0, 1]' : 0.509868}
{'[6, 2, 5, 4, 6, 3, 0, 0, 10, 6, 11, 0, 2, 0, 0, 0, 0, 1]' : 0.510794}
{'[6, 2, 5, 4, 6, 3, 0, 0, 10, 6, 11, 0, 2, 0, 0, 0, 0, 1]' : 0.510158}
{'[6, 2, 5, 4, 6, 3, 0, 0, 10, 6, 11, 0, 2, 0, 0, 0, 0, 1]' : 0.510428}
{'[6, 2, 5, 4, 6, 3, 0, 0, 10, 6, 11, 0, 2, 0, 0, 0, 0, 1]' : 0.510952}
{'[6, 2, 5, 4, 6, 3, 0, 0, 10, 6, 11, 0, 2, 0, 0, 0, 0, 1]' : 0.50995}
{'[6, 2, 5, 4, 6, 3, 0, 0, 10, 6, 11, 0, 2, 0, 0, 0, 0, 1]' : 0.510599}
{'[6, 2, 5, 4, 6, 3, 0, 0, 10, 6, 11, 0, 2, 0, 0, 0, 0, 1]' : 0.509542}
{'[6, 2, 5, 4, 6, 3, 0, 0, 10, 6, 11, 0, 2, 0, 0, 0, 0, 1]' : 0.517064}
{'[6, 2, 5, 4, 6, 3, 0, 0, 10, 6, 11, 0, 2, 0, 0, 0, 0, 1]' : 0.513539}
{'[6, 2, 5, 4, 6, 3, 0, 0, 10, 6, 11, 0, 2, 0, 0, 0, 0, 1]' : 0.513746}
{'[6, 2, 5, 4, 6, 3, 0, 0, 10, 6, 11, 0, 2, 0, 0, 0, 0, 1]' : 0.513412}
{'[6, 2, 5, 4, 6, 3, 0, 0, 10, 6, 11, 0, 2, 0, 0, 0, 0, 1]' : 0.514119}
{'[6, 2, 5, 4, 6, 3, 0, 0, 10, 6, 11, 0, 2, 0, 0, 0, 0, 1]' : 0.513385}
{'[6, 2, 5, 4, 6, 3, 0, 0, 10, 6, 11, 0, 2, 0, 0, 0, 0, 1]' : 0.51295}
{'[6, 2, 5, 4, 6, 3, 0, 0, 10, 6, 11, 0, 2, 0, 0, 0, 0, 1]' : 0.512847}
{'[6, 2, 5, 4, 6, 3, 0, 0, 10, 6, 11, 0, 2, 0, 0, 0, 0, 1]' : 0.51275}
{'[6, 2, 5, 4, 6, 3, 0, 0, 10, 6, 11, 0, 2, 0, 0, 0, 0, 1]' : 0.513122}
{'[6, 2, 5, 4, 6, 3, 0, 0, 10, 6, 11, 0, 2, 0, 0, 0, 0, 1]' : 0.513149}
{'[6, 2, 5, 4, 6, 3, 0, 0, 10, 6, 11, 0, 2, 0, 0, 0, 0, 1]' : 0.513731}
{'[6, 2, 5, 4, 6, 3, 0, 0, 10, 6, 11, 0, 2, 0, 0, 0, 0, 1]' : 0.514317}
{'[6, 2, 5, 4, 6, 3, 0, 0, 10, 6, 11, 0, 2, 0, 0, 0, 0, 1]' : 0.513634}

out:
 ["{'[6, 2, 5, 4, 6, 3, 0, 0, 10, 6, 11, 0, 2, 0, 0, 0, 0, 1]' : 0.510301}", "{'[6, 2, 5, 4, 6, 3, 0, 0, 10, 6, 11, 0, 2, 0, 0, 0, 0, 1]' : 0.510626}", "{'[6, 2, 5, 4, 6, 3, 0, 0, 10, 6, 11, 0, 2, 0, 0, 0, 0, 1]' : 0.510073}", "{'[6, 2, 5, 4, 6, 3, 0, 0, 10, 6, 11, 0, 2, 0, 0, 0, 0, 1]' : 0.509846}", "{'[6, 2, 5, 4, 6, 3, 0, 0, 10, 6, 11, 0, 2, 0, 0, 0, 0, 1]' : 0.51003}", "{'[6, 2, 5, 4, 6, 3, 0, 0, 10, 6, 11, 0, 2, 0, 0, 0, 0, 1]' : 0.509905}", "{'[6, 2, 5, 4, 6, 3, 0, 0, 10, 6, 11, 0, 2, 0, 0, 0, 0, 1]' : 0.514896}", "{'[6, 2, 5, 4, 6, 3, 0, 0, 10, 6, 11, 0, 2, 0, 0, 0, 0, 1]' : 0.51033}", "{'[6, 2, 5, 4, 6, 3, 0, 0, 10, 6, 11, 0, 2, 0, 0, 0, 0, 1]' : 0.509868}", "{'[6, 2, 5, 4, 6, 3, 0, 0, 10, 6, 11, 0, 2, 0, 0, 0, 0, 1]' : 0.510794}", "{'[6, 2, 5, 4, 6, 3, 0, 0, 10, 6, 11, 0, 2, 0, 0, 0, 0, 1]' : 0.510158}", "{'[6, 2, 5, 4, 6, 3, 0, 0, 10, 6, 11, 0, 2, 0, 0, 0, 0, 1]' : 0.510428}", "{'[6, 2, 5, 4, 6, 3, 0, 0, 10, 6, 11, 0, 2, 0, 0, 0, 0, 1]' : 0.510952}", "{'[6, 2, 5, 4, 6, 3, 0, 0, 10, 6, 11, 0, 2, 0, 0, 0, 0, 1]' : 0.50995}", "{'[6, 2, 5, 4, 6, 3, 0, 0, 10, 6, 11, 0, 2, 0, 0, 0, 0, 1]' : 0.510599}", "{'[6, 2, 5, 4, 6, 3, 0, 0, 10, 6, 11, 0, 2, 0, 0, 0, 0, 1]' : 0.509542}", "{'[6, 2, 5, 4, 6, 3, 0, 0, 10, 6, 11, 0, 2, 0, 0, 0, 0, 1]' : 0.517064}", "{'[6, 2, 5, 4, 6, 3, 0, 0, 10, 6, 11, 0, 2, 0, 0, 0, 0, 1]' : 0.513539}", "{'[6, 2, 5, 4, 6, 3, 0, 0, 10, 6, 11, 0, 2, 0, 0, 0, 0, 1]' : 0.513746}", "{'[6, 2, 5, 4, 6, 3, 0, 0, 10, 6, 11, 0, 2, 0, 0, 0, 0, 1]' : 0.513412}", "{'[6, 2, 5, 4, 6, 3, 0, 0, 10, 6, 11, 0, 2, 0, 0, 0, 0, 1]' : 0.514119}", "{'[6, 2, 5, 4, 6, 3, 0, 0, 10, 6, 11, 0, 2, 0, 0, 0, 0, 1]' : 0.513385}", "{'[6, 2, 5, 4, 6, 3, 0, 0, 10, 6, 11, 0, 2, 0, 0, 0, 0, 1]' : 0.51295}", "{'[6, 2, 5, 4, 6, 3, 0, 0, 10, 6, 11, 0, 2, 0, 0, 0, 0, 1]' : 0.512847}", "{'[6, 2, 5, 4, 6, 3, 0, 0, 10, 6, 11, 0, 2, 0, 0, 0, 0, 1]' : 0.51275}", "{'[6, 2, 5, 4, 6, 3, 0, 0, 10, 6, 11, 0, 2, 0, 0, 0, 0, 1]' : 0.513122}", "{'[6, 2, 5, 4, 6, 3, 0, 0, 10, 6, 11, 0, 2, 0, 0, 0, 0, 1]' : 0.513149}", "{'[6, 2, 5, 4, 6, 3, 0, 0, 10, 6, 11, 0, 2, 0, 0, 0, 0, 1]' : 0.513731}", "{'[6, 2, 5, 4, 6, 3, 0, 0, 10, 6, 11, 0, 2, 0, 0, 0, 0, 1]' : 0.514317}", "{'[6, 2, 5, 4, 6, 3, 0, 0, 10, 6, 11, 0, 2, 0, 0, 0, 0, 1]' : 0.513634}"]
returning from 'run': {'[6, 2, 5, 4, 6, 3, 0, 0, 10, 6, 11, 0, 2, 0, 0, 0, 0, 1]': ([0.510301, 0.510626, 0.510073, 0.509846, 0.51003, 0.509905, 0.514896, 0.51033, 0.509868, 0.510794, 0.510158, 0.510428, 0.510952, 0.50995, 0.510599, 0.509542, 0.517064, 0.513539, 0.513746, 0.513412, 0.514119, 0.513385, 0.51295, 0.512847, 0.51275, 0.513122, 0.513149, 0.513731, 0.514317, 0.513634], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 2, 5, 4, 6, 3, 0, 0, 10, 6, 11, 0, 2, 0, 0, 0, 0, 1]': ([0.510301, 0.510626, 0.510073, 0.509846, 0.51003, 0.509905, 0.514896, 0.51033, 0.509868, 0.510794, 0.510158, 0.510428, 0.510952, 0.50995, 0.510599, 0.509542, 0.517064, 0.513539, 0.513746, 0.513412, 0.514119, 0.513385, 0.51295, 0.512847, 0.51275, 0.513122, 0.513149, 0.513731, 0.514317, 0.513634], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	28
        Max loop nest depth: 	6
        Additions: 		1516
        Multiplications: 	700
        Divisions: 		0
        Logical: 		0
        Reads: 			3109
        Writes: 		576
        Comparisons:		28
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest18.exe __orio_perftest18.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest18.exe  
Program Test Output: 
{'[2, 2, 4, 6, 1, 5, 0, 0, 26, 1, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.308737}
{'[2, 2, 4, 6, 1, 5, 0, 0, 26, 1, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.30812}
{'[2, 2, 4, 6, 1, 5, 0, 0, 26, 1, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.309126}
{'[2, 2, 4, 6, 1, 5, 0, 0, 26, 1, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.308144}
{'[2, 2, 4, 6, 1, 5, 0, 0, 26, 1, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.309327}
{'[2, 2, 4, 6, 1, 5, 0, 0, 26, 1, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.309183}
{'[2, 2, 4, 6, 1, 5, 0, 0, 26, 1, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.309283}
{'[2, 2, 4, 6, 1, 5, 0, 0, 26, 1, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.308327}
{'[2, 2, 4, 6, 1, 5, 0, 0, 26, 1, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.308523}
{'[2, 2, 4, 6, 1, 5, 0, 0, 26, 1, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.308731}
{'[2, 2, 4, 6, 1, 5, 0, 0, 26, 1, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.308949}
{'[2, 2, 4, 6, 1, 5, 0, 0, 26, 1, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.309356}
{'[2, 2, 4, 6, 1, 5, 0, 0, 26, 1, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.309492}
{'[2, 2, 4, 6, 1, 5, 0, 0, 26, 1, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.308273}
{'[2, 2, 4, 6, 1, 5, 0, 0, 26, 1, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.30915}
{'[2, 2, 4, 6, 1, 5, 0, 0, 26, 1, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.30905}
{'[2, 2, 4, 6, 1, 5, 0, 0, 26, 1, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.308586}
{'[2, 2, 4, 6, 1, 5, 0, 0, 26, 1, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.315193}
{'[2, 2, 4, 6, 1, 5, 0, 0, 26, 1, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.309572}
{'[2, 2, 4, 6, 1, 5, 0, 0, 26, 1, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.309466}
{'[2, 2, 4, 6, 1, 5, 0, 0, 26, 1, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.308822}
{'[2, 2, 4, 6, 1, 5, 0, 0, 26, 1, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.309359}
{'[2, 2, 4, 6, 1, 5, 0, 0, 26, 1, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.308837}
{'[2, 2, 4, 6, 1, 5, 0, 0, 26, 1, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.308521}
{'[2, 2, 4, 6, 1, 5, 0, 0, 26, 1, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.309236}
{'[2, 2, 4, 6, 1, 5, 0, 0, 26, 1, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.309505}
{'[2, 2, 4, 6, 1, 5, 0, 0, 26, 1, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.308214}
{'[2, 2, 4, 6, 1, 5, 0, 0, 26, 1, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.307941}
{'[2, 2, 4, 6, 1, 5, 0, 0, 26, 1, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.309332}
{'[2, 2, 4, 6, 1, 5, 0, 0, 26, 1, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.308859}

out:
 ["{'[2, 2, 4, 6, 1, 5, 0, 0, 26, 1, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.308737}", "{'[2, 2, 4, 6, 1, 5, 0, 0, 26, 1, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.30812}", "{'[2, 2, 4, 6, 1, 5, 0, 0, 26, 1, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.309126}", "{'[2, 2, 4, 6, 1, 5, 0, 0, 26, 1, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.308144}", "{'[2, 2, 4, 6, 1, 5, 0, 0, 26, 1, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.309327}", "{'[2, 2, 4, 6, 1, 5, 0, 0, 26, 1, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.309183}", "{'[2, 2, 4, 6, 1, 5, 0, 0, 26, 1, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.309283}", "{'[2, 2, 4, 6, 1, 5, 0, 0, 26, 1, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.308327}", "{'[2, 2, 4, 6, 1, 5, 0, 0, 26, 1, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.308523}", "{'[2, 2, 4, 6, 1, 5, 0, 0, 26, 1, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.308731}", "{'[2, 2, 4, 6, 1, 5, 0, 0, 26, 1, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.308949}", "{'[2, 2, 4, 6, 1, 5, 0, 0, 26, 1, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.309356}", "{'[2, 2, 4, 6, 1, 5, 0, 0, 26, 1, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.309492}", "{'[2, 2, 4, 6, 1, 5, 0, 0, 26, 1, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.308273}", "{'[2, 2, 4, 6, 1, 5, 0, 0, 26, 1, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.30915}", "{'[2, 2, 4, 6, 1, 5, 0, 0, 26, 1, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.30905}", "{'[2, 2, 4, 6, 1, 5, 0, 0, 26, 1, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.308586}", "{'[2, 2, 4, 6, 1, 5, 0, 0, 26, 1, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.315193}", "{'[2, 2, 4, 6, 1, 5, 0, 0, 26, 1, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.309572}", "{'[2, 2, 4, 6, 1, 5, 0, 0, 26, 1, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.309466}", "{'[2, 2, 4, 6, 1, 5, 0, 0, 26, 1, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.308822}", "{'[2, 2, 4, 6, 1, 5, 0, 0, 26, 1, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.309359}", "{'[2, 2, 4, 6, 1, 5, 0, 0, 26, 1, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.308837}", "{'[2, 2, 4, 6, 1, 5, 0, 0, 26, 1, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.308521}", "{'[2, 2, 4, 6, 1, 5, 0, 0, 26, 1, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.309236}", "{'[2, 2, 4, 6, 1, 5, 0, 0, 26, 1, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.309505}", "{'[2, 2, 4, 6, 1, 5, 0, 0, 26, 1, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.308214}", "{'[2, 2, 4, 6, 1, 5, 0, 0, 26, 1, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.307941}", "{'[2, 2, 4, 6, 1, 5, 0, 0, 26, 1, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.309332}", "{'[2, 2, 4, 6, 1, 5, 0, 0, 26, 1, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.308859}"]
returning from 'run': {'[2, 2, 4, 6, 1, 5, 0, 0, 26, 1, 0, 7, 2, 0, 0, 1, 0, 1]': ([0.308737, 0.30812, 0.309126, 0.308144, 0.309327, 0.309183, 0.309283, 0.308327, 0.308523, 0.308731, 0.308949, 0.309356, 0.309492, 0.308273, 0.30915, 0.30905, 0.308586, 0.315193, 0.309572, 0.309466, 0.308822, 0.309359, 0.308837, 0.308521, 0.309236, 0.309505, 0.308214, 0.307941, 0.309332, 0.308859], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 2, 4, 6, 1, 5, 0, 0, 26, 1, 0, 7, 2, 0, 0, 1, 0, 1]': ([0.308737, 0.30812, 0.309126, 0.308144, 0.309327, 0.309183, 0.309283, 0.308327, 0.308523, 0.308731, 0.308949, 0.309356, 0.309492, 0.308273, 0.30915, 0.30905, 0.308586, 0.315193, 0.309572, 0.309466, 0.308822, 0.309359, 0.308837, 0.308521, 0.309236, 0.309505, 0.308214, 0.307941, 0.309332, 0.308859], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	6
        Additions: 		2389
        Multiplications: 	558
        Divisions: 		0
        Logical: 		0
        Reads: 			3546
        Writes: 		347
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest19.exe __orio_perftest19.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest19.exe  
Program Test Output: 
{'[3, 3, 6, 5, 3, 5, 0, 1, 1, 0, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.218889}
{'[3, 3, 6, 5, 3, 5, 0, 1, 1, 0, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.220297}
{'[3, 3, 6, 5, 3, 5, 0, 1, 1, 0, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.216815}
{'[3, 3, 6, 5, 3, 5, 0, 1, 1, 0, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.217494}
{'[3, 3, 6, 5, 3, 5, 0, 1, 1, 0, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.215898}
{'[3, 3, 6, 5, 3, 5, 0, 1, 1, 0, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.217896}
{'[3, 3, 6, 5, 3, 5, 0, 1, 1, 0, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.215981}
{'[3, 3, 6, 5, 3, 5, 0, 1, 1, 0, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.21726}
{'[3, 3, 6, 5, 3, 5, 0, 1, 1, 0, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.215539}
{'[3, 3, 6, 5, 3, 5, 0, 1, 1, 0, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.215606}
{'[3, 3, 6, 5, 3, 5, 0, 1, 1, 0, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.216974}
{'[3, 3, 6, 5, 3, 5, 0, 1, 1, 0, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.215202}
{'[3, 3, 6, 5, 3, 5, 0, 1, 1, 0, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.215075}
{'[3, 3, 6, 5, 3, 5, 0, 1, 1, 0, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.215049}
{'[3, 3, 6, 5, 3, 5, 0, 1, 1, 0, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.215471}
{'[3, 3, 6, 5, 3, 5, 0, 1, 1, 0, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.215913}
{'[3, 3, 6, 5, 3, 5, 0, 1, 1, 0, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.215752}
{'[3, 3, 6, 5, 3, 5, 0, 1, 1, 0, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.21608}
{'[3, 3, 6, 5, 3, 5, 0, 1, 1, 0, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.216659}
{'[3, 3, 6, 5, 3, 5, 0, 1, 1, 0, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.216384}
{'[3, 3, 6, 5, 3, 5, 0, 1, 1, 0, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.217128}
{'[3, 3, 6, 5, 3, 5, 0, 1, 1, 0, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.214137}
{'[3, 3, 6, 5, 3, 5, 0, 1, 1, 0, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.215664}
{'[3, 3, 6, 5, 3, 5, 0, 1, 1, 0, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.215576}
{'[3, 3, 6, 5, 3, 5, 0, 1, 1, 0, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.214931}
{'[3, 3, 6, 5, 3, 5, 0, 1, 1, 0, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.21648}
{'[3, 3, 6, 5, 3, 5, 0, 1, 1, 0, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.214823}
{'[3, 3, 6, 5, 3, 5, 0, 1, 1, 0, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.217017}
{'[3, 3, 6, 5, 3, 5, 0, 1, 1, 0, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.217778}
{'[3, 3, 6, 5, 3, 5, 0, 1, 1, 0, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.21575}

out:
 ["{'[3, 3, 6, 5, 3, 5, 0, 1, 1, 0, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.218889}", "{'[3, 3, 6, 5, 3, 5, 0, 1, 1, 0, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.220297}", "{'[3, 3, 6, 5, 3, 5, 0, 1, 1, 0, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.216815}", "{'[3, 3, 6, 5, 3, 5, 0, 1, 1, 0, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.217494}", "{'[3, 3, 6, 5, 3, 5, 0, 1, 1, 0, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.215898}", "{'[3, 3, 6, 5, 3, 5, 0, 1, 1, 0, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.217896}", "{'[3, 3, 6, 5, 3, 5, 0, 1, 1, 0, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.215981}", "{'[3, 3, 6, 5, 3, 5, 0, 1, 1, 0, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.21726}", "{'[3, 3, 6, 5, 3, 5, 0, 1, 1, 0, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.215539}", "{'[3, 3, 6, 5, 3, 5, 0, 1, 1, 0, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.215606}", "{'[3, 3, 6, 5, 3, 5, 0, 1, 1, 0, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.216974}", "{'[3, 3, 6, 5, 3, 5, 0, 1, 1, 0, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.215202}", "{'[3, 3, 6, 5, 3, 5, 0, 1, 1, 0, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.215075}", "{'[3, 3, 6, 5, 3, 5, 0, 1, 1, 0, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.215049}", "{'[3, 3, 6, 5, 3, 5, 0, 1, 1, 0, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.215471}", "{'[3, 3, 6, 5, 3, 5, 0, 1, 1, 0, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.215913}", "{'[3, 3, 6, 5, 3, 5, 0, 1, 1, 0, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.215752}", "{'[3, 3, 6, 5, 3, 5, 0, 1, 1, 0, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.21608}", "{'[3, 3, 6, 5, 3, 5, 0, 1, 1, 0, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.216659}", "{'[3, 3, 6, 5, 3, 5, 0, 1, 1, 0, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.216384}", "{'[3, 3, 6, 5, 3, 5, 0, 1, 1, 0, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.217128}", "{'[3, 3, 6, 5, 3, 5, 0, 1, 1, 0, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.214137}", "{'[3, 3, 6, 5, 3, 5, 0, 1, 1, 0, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.215664}", "{'[3, 3, 6, 5, 3, 5, 0, 1, 1, 0, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.215576}", "{'[3, 3, 6, 5, 3, 5, 0, 1, 1, 0, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.214931}", "{'[3, 3, 6, 5, 3, 5, 0, 1, 1, 0, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.21648}", "{'[3, 3, 6, 5, 3, 5, 0, 1, 1, 0, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.214823}", "{'[3, 3, 6, 5, 3, 5, 0, 1, 1, 0, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.217017}", "{'[3, 3, 6, 5, 3, 5, 0, 1, 1, 0, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.217778}", "{'[3, 3, 6, 5, 3, 5, 0, 1, 1, 0, 0, 28, 1, 0, 0, 0, 1, 1]' : 0.21575}"]
returning from 'run': {'[3, 3, 6, 5, 3, 5, 0, 1, 1, 0, 0, 28, 1, 0, 0, 0, 1, 1]': ([0.218889, 0.220297, 0.216815, 0.217494, 0.215898, 0.217896, 0.215981, 0.21726, 0.215539, 0.215606, 0.216974, 0.215202, 0.215075, 0.215049, 0.215471, 0.215913, 0.215752, 0.21608, 0.216659, 0.216384, 0.217128, 0.214137, 0.215664, 0.215576, 0.214931, 0.21648, 0.214823, 0.217017, 0.217778, 0.21575], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 3, 6, 5, 3, 5, 0, 1, 1, 0, 0, 28, 1, 0, 0, 0, 1, 1]': ([0.218889, 0.220297, 0.216815, 0.217494, 0.215898, 0.217896, 0.215981, 0.21726, 0.215539, 0.215606, 0.216974, 0.215202, 0.215075, 0.215049, 0.215471, 0.215913, 0.215752, 0.21608, 0.216659, 0.216384, 0.217128, 0.214137, 0.215664, 0.215576, 0.214931, 0.21648, 0.214823, 0.217017, 0.217778, 0.21575], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	73
        Max loop nest depth: 	5
        Additions: 		8241
        Multiplications: 	2352
        Divisions: 		0
        Logical: 		0
        Reads: 			12669
        Writes: 		1469
        Comparisons:		73
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest20.exe __orio_perftest20.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest20.exe  
Program Test Output: 
{'[0, 0, 6, 1, 4, 6, 0, 0, 24, 26, 0, 23, 0, 1, 1, 0, 1, 1]' : 0.391691}
{'[0, 0, 6, 1, 4, 6, 0, 0, 24, 26, 0, 23, 0, 1, 1, 0, 1, 1]' : 0.391703}
{'[0, 0, 6, 1, 4, 6, 0, 0, 24, 26, 0, 23, 0, 1, 1, 0, 1, 1]' : 0.391734}
{'[0, 0, 6, 1, 4, 6, 0, 0, 24, 26, 0, 23, 0, 1, 1, 0, 1, 1]' : 0.391556}
{'[0, 0, 6, 1, 4, 6, 0, 0, 24, 26, 0, 23, 0, 1, 1, 0, 1, 1]' : 0.391765}
{'[0, 0, 6, 1, 4, 6, 0, 0, 24, 26, 0, 23, 0, 1, 1, 0, 1, 1]' : 0.391654}
{'[0, 0, 6, 1, 4, 6, 0, 0, 24, 26, 0, 23, 0, 1, 1, 0, 1, 1]' : 0.391715}
{'[0, 0, 6, 1, 4, 6, 0, 0, 24, 26, 0, 23, 0, 1, 1, 0, 1, 1]' : 0.391173}
{'[0, 0, 6, 1, 4, 6, 0, 0, 24, 26, 0, 23, 0, 1, 1, 0, 1, 1]' : 0.391761}
{'[0, 0, 6, 1, 4, 6, 0, 0, 24, 26, 0, 23, 0, 1, 1, 0, 1, 1]' : 0.39154}
{'[0, 0, 6, 1, 4, 6, 0, 0, 24, 26, 0, 23, 0, 1, 1, 0, 1, 1]' : 0.391804}
{'[0, 0, 6, 1, 4, 6, 0, 0, 24, 26, 0, 23, 0, 1, 1, 0, 1, 1]' : 0.391668}
{'[0, 0, 6, 1, 4, 6, 0, 0, 24, 26, 0, 23, 0, 1, 1, 0, 1, 1]' : 0.392999}
{'[0, 0, 6, 1, 4, 6, 0, 0, 24, 26, 0, 23, 0, 1, 1, 0, 1, 1]' : 0.391833}
{'[0, 0, 6, 1, 4, 6, 0, 0, 24, 26, 0, 23, 0, 1, 1, 0, 1, 1]' : 0.391698}
{'[0, 0, 6, 1, 4, 6, 0, 0, 24, 26, 0, 23, 0, 1, 1, 0, 1, 1]' : 0.391548}
{'[0, 0, 6, 1, 4, 6, 0, 0, 24, 26, 0, 23, 0, 1, 1, 0, 1, 1]' : 0.391592}
{'[0, 0, 6, 1, 4, 6, 0, 0, 24, 26, 0, 23, 0, 1, 1, 0, 1, 1]' : 0.391641}
{'[0, 0, 6, 1, 4, 6, 0, 0, 24, 26, 0, 23, 0, 1, 1, 0, 1, 1]' : 0.391598}
{'[0, 0, 6, 1, 4, 6, 0, 0, 24, 26, 0, 23, 0, 1, 1, 0, 1, 1]' : 0.391794}
{'[0, 0, 6, 1, 4, 6, 0, 0, 24, 26, 0, 23, 0, 1, 1, 0, 1, 1]' : 0.391602}
{'[0, 0, 6, 1, 4, 6, 0, 0, 24, 26, 0, 23, 0, 1, 1, 0, 1, 1]' : 0.391613}
{'[0, 0, 6, 1, 4, 6, 0, 0, 24, 26, 0, 23, 0, 1, 1, 0, 1, 1]' : 0.391733}
{'[0, 0, 6, 1, 4, 6, 0, 0, 24, 26, 0, 23, 0, 1, 1, 0, 1, 1]' : 0.391765}
{'[0, 0, 6, 1, 4, 6, 0, 0, 24, 26, 0, 23, 0, 1, 1, 0, 1, 1]' : 0.391595}
{'[0, 0, 6, 1, 4, 6, 0, 0, 24, 26, 0, 23, 0, 1, 1, 0, 1, 1]' : 0.392174}
{'[0, 0, 6, 1, 4, 6, 0, 0, 24, 26, 0, 23, 0, 1, 1, 0, 1, 1]' : 0.391541}
{'[0, 0, 6, 1, 4, 6, 0, 0, 24, 26, 0, 23, 0, 1, 1, 0, 1, 1]' : 0.391417}
{'[0, 0, 6, 1, 4, 6, 0, 0, 24, 26, 0, 23, 0, 1, 1, 0, 1, 1]' : 0.391595}
{'[0, 0, 6, 1, 4, 6, 0, 0, 24, 26, 0, 23, 0, 1, 1, 0, 1, 1]' : 0.391728}

out:
 ["{'[0, 0, 6, 1, 4, 6, 0, 0, 24, 26, 0, 23, 0, 1, 1, 0, 1, 1]' : 0.391691}", "{'[0, 0, 6, 1, 4, 6, 0, 0, 24, 26, 0, 23, 0, 1, 1, 0, 1, 1]' : 0.391703}", "{'[0, 0, 6, 1, 4, 6, 0, 0, 24, 26, 0, 23, 0, 1, 1, 0, 1, 1]' : 0.391734}", "{'[0, 0, 6, 1, 4, 6, 0, 0, 24, 26, 0, 23, 0, 1, 1, 0, 1, 1]' : 0.391556}", "{'[0, 0, 6, 1, 4, 6, 0, 0, 24, 26, 0, 23, 0, 1, 1, 0, 1, 1]' : 0.391765}", "{'[0, 0, 6, 1, 4, 6, 0, 0, 24, 26, 0, 23, 0, 1, 1, 0, 1, 1]' : 0.391654}", "{'[0, 0, 6, 1, 4, 6, 0, 0, 24, 26, 0, 23, 0, 1, 1, 0, 1, 1]' : 0.391715}", "{'[0, 0, 6, 1, 4, 6, 0, 0, 24, 26, 0, 23, 0, 1, 1, 0, 1, 1]' : 0.391173}", "{'[0, 0, 6, 1, 4, 6, 0, 0, 24, 26, 0, 23, 0, 1, 1, 0, 1, 1]' : 0.391761}", "{'[0, 0, 6, 1, 4, 6, 0, 0, 24, 26, 0, 23, 0, 1, 1, 0, 1, 1]' : 0.39154}", "{'[0, 0, 6, 1, 4, 6, 0, 0, 24, 26, 0, 23, 0, 1, 1, 0, 1, 1]' : 0.391804}", "{'[0, 0, 6, 1, 4, 6, 0, 0, 24, 26, 0, 23, 0, 1, 1, 0, 1, 1]' : 0.391668}", "{'[0, 0, 6, 1, 4, 6, 0, 0, 24, 26, 0, 23, 0, 1, 1, 0, 1, 1]' : 0.392999}", "{'[0, 0, 6, 1, 4, 6, 0, 0, 24, 26, 0, 23, 0, 1, 1, 0, 1, 1]' : 0.391833}", "{'[0, 0, 6, 1, 4, 6, 0, 0, 24, 26, 0, 23, 0, 1, 1, 0, 1, 1]' : 0.391698}", "{'[0, 0, 6, 1, 4, 6, 0, 0, 24, 26, 0, 23, 0, 1, 1, 0, 1, 1]' : 0.391548}", "{'[0, 0, 6, 1, 4, 6, 0, 0, 24, 26, 0, 23, 0, 1, 1, 0, 1, 1]' : 0.391592}", "{'[0, 0, 6, 1, 4, 6, 0, 0, 24, 26, 0, 23, 0, 1, 1, 0, 1, 1]' : 0.391641}", "{'[0, 0, 6, 1, 4, 6, 0, 0, 24, 26, 0, 23, 0, 1, 1, 0, 1, 1]' : 0.391598}", "{'[0, 0, 6, 1, 4, 6, 0, 0, 24, 26, 0, 23, 0, 1, 1, 0, 1, 1]' : 0.391794}", "{'[0, 0, 6, 1, 4, 6, 0, 0, 24, 26, 0, 23, 0, 1, 1, 0, 1, 1]' : 0.391602}", "{'[0, 0, 6, 1, 4, 6, 0, 0, 24, 26, 0, 23, 0, 1, 1, 0, 1, 1]' : 0.391613}", "{'[0, 0, 6, 1, 4, 6, 0, 0, 24, 26, 0, 23, 0, 1, 1, 0, 1, 1]' : 0.391733}", "{'[0, 0, 6, 1, 4, 6, 0, 0, 24, 26, 0, 23, 0, 1, 1, 0, 1, 1]' : 0.391765}", "{'[0, 0, 6, 1, 4, 6, 0, 0, 24, 26, 0, 23, 0, 1, 1, 0, 1, 1]' : 0.391595}", "{'[0, 0, 6, 1, 4, 6, 0, 0, 24, 26, 0, 23, 0, 1, 1, 0, 1, 1]' : 0.392174}", "{'[0, 0, 6, 1, 4, 6, 0, 0, 24, 26, 0, 23, 0, 1, 1, 0, 1, 1]' : 0.391541}", "{'[0, 0, 6, 1, 4, 6, 0, 0, 24, 26, 0, 23, 0, 1, 1, 0, 1, 1]' : 0.391417}", "{'[0, 0, 6, 1, 4, 6, 0, 0, 24, 26, 0, 23, 0, 1, 1, 0, 1, 1]' : 0.391595}", "{'[0, 0, 6, 1, 4, 6, 0, 0, 24, 26, 0, 23, 0, 1, 1, 0, 1, 1]' : 0.391728}"]
returning from 'run': {'[0, 0, 6, 1, 4, 6, 0, 0, 24, 26, 0, 23, 0, 1, 1, 0, 1, 1]': ([0.391691, 0.391703, 0.391734, 0.391556, 0.391765, 0.391654, 0.391715, 0.391173, 0.391761, 0.39154, 0.391804, 0.391668, 0.392999, 0.391833, 0.391698, 0.391548, 0.391592, 0.391641, 0.391598, 0.391794, 0.391602, 0.391613, 0.391733, 0.391765, 0.391595, 0.392174, 0.391541, 0.391417, 0.391595, 0.391728], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 6, 1, 4, 6, 0, 0, 24, 26, 0, 23, 0, 1, 1, 0, 1, 1]': ([0.391691, 0.391703, 0.391734, 0.391556, 0.391765, 0.391654, 0.391715, 0.391173, 0.391761, 0.39154, 0.391804, 0.391668, 0.392999, 0.391833, 0.391698, 0.391548, 0.391592, 0.391641, 0.391598, 0.391794, 0.391602, 0.391613, 0.391733, 0.391765, 0.391595, 0.392174, 0.391541, 0.391417, 0.391595, 0.391728], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = iii
Code stats:
        Number of loops: 	181
        Max loop nest depth: 	5
        Additions: 		6863
        Multiplications: 	1950
        Divisions: 		0
        Logical: 		0
        Reads: 			13436
        Writes: 		2672
        Comparisons:		181
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest21.exe __orio_perftest21.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest21.exe  
Program Test Output: 
{'[5, 2, 2, 3, 1, 1, 1, 1, 23, 29, 0, 15, 1, 1, 0, 1, 0, 0]' : 0.255973}
{'[5, 2, 2, 3, 1, 1, 1, 1, 23, 29, 0, 15, 1, 1, 0, 1, 0, 0]' : 0.255104}
{'[5, 2, 2, 3, 1, 1, 1, 1, 23, 29, 0, 15, 1, 1, 0, 1, 0, 0]' : 0.254982}
{'[5, 2, 2, 3, 1, 1, 1, 1, 23, 29, 0, 15, 1, 1, 0, 1, 0, 0]' : 0.25597}
{'[5, 2, 2, 3, 1, 1, 1, 1, 23, 29, 0, 15, 1, 1, 0, 1, 0, 0]' : 0.255935}
{'[5, 2, 2, 3, 1, 1, 1, 1, 23, 29, 0, 15, 1, 1, 0, 1, 0, 0]' : 0.255101}
{'[5, 2, 2, 3, 1, 1, 1, 1, 23, 29, 0, 15, 1, 1, 0, 1, 0, 0]' : 0.255114}
{'[5, 2, 2, 3, 1, 1, 1, 1, 23, 29, 0, 15, 1, 1, 0, 1, 0, 0]' : 0.255266}
{'[5, 2, 2, 3, 1, 1, 1, 1, 23, 29, 0, 15, 1, 1, 0, 1, 0, 0]' : 0.255661}
{'[5, 2, 2, 3, 1, 1, 1, 1, 23, 29, 0, 15, 1, 1, 0, 1, 0, 0]' : 0.255272}
{'[5, 2, 2, 3, 1, 1, 1, 1, 23, 29, 0, 15, 1, 1, 0, 1, 0, 0]' : 0.254607}
{'[5, 2, 2, 3, 1, 1, 1, 1, 23, 29, 0, 15, 1, 1, 0, 1, 0, 0]' : 0.254717}
{'[5, 2, 2, 3, 1, 1, 1, 1, 23, 29, 0, 15, 1, 1, 0, 1, 0, 0]' : 0.255738}
{'[5, 2, 2, 3, 1, 1, 1, 1, 23, 29, 0, 15, 1, 1, 0, 1, 0, 0]' : 0.255313}
{'[5, 2, 2, 3, 1, 1, 1, 1, 23, 29, 0, 15, 1, 1, 0, 1, 0, 0]' : 0.255148}
{'[5, 2, 2, 3, 1, 1, 1, 1, 23, 29, 0, 15, 1, 1, 0, 1, 0, 0]' : 0.255467}
{'[5, 2, 2, 3, 1, 1, 1, 1, 23, 29, 0, 15, 1, 1, 0, 1, 0, 0]' : 0.25808}
{'[5, 2, 2, 3, 1, 1, 1, 1, 23, 29, 0, 15, 1, 1, 0, 1, 0, 0]' : 0.257141}
{'[5, 2, 2, 3, 1, 1, 1, 1, 23, 29, 0, 15, 1, 1, 0, 1, 0, 0]' : 0.255295}
{'[5, 2, 2, 3, 1, 1, 1, 1, 23, 29, 0, 15, 1, 1, 0, 1, 0, 0]' : 0.256078}
{'[5, 2, 2, 3, 1, 1, 1, 1, 23, 29, 0, 15, 1, 1, 0, 1, 0, 0]' : 0.265479}
{'[5, 2, 2, 3, 1, 1, 1, 1, 23, 29, 0, 15, 1, 1, 0, 1, 0, 0]' : 0.255258}
{'[5, 2, 2, 3, 1, 1, 1, 1, 23, 29, 0, 15, 1, 1, 0, 1, 0, 0]' : 0.255383}
{'[5, 2, 2, 3, 1, 1, 1, 1, 23, 29, 0, 15, 1, 1, 0, 1, 0, 0]' : 0.255105}
{'[5, 2, 2, 3, 1, 1, 1, 1, 23, 29, 0, 15, 1, 1, 0, 1, 0, 0]' : 0.25551}
{'[5, 2, 2, 3, 1, 1, 1, 1, 23, 29, 0, 15, 1, 1, 0, 1, 0, 0]' : 0.256333}
{'[5, 2, 2, 3, 1, 1, 1, 1, 23, 29, 0, 15, 1, 1, 0, 1, 0, 0]' : 0.254592}
{'[5, 2, 2, 3, 1, 1, 1, 1, 23, 29, 0, 15, 1, 1, 0, 1, 0, 0]' : 0.25548}
{'[5, 2, 2, 3, 1, 1, 1, 1, 23, 29, 0, 15, 1, 1, 0, 1, 0, 0]' : 0.255025}
{'[5, 2, 2, 3, 1, 1, 1, 1, 23, 29, 0, 15, 1, 1, 0, 1, 0, 0]' : 0.255016}

out:
 ["{'[5, 2, 2, 3, 1, 1, 1, 1, 23, 29, 0, 15, 1, 1, 0, 1, 0, 0]' : 0.255973}", "{'[5, 2, 2, 3, 1, 1, 1, 1, 23, 29, 0, 15, 1, 1, 0, 1, 0, 0]' : 0.255104}", "{'[5, 2, 2, 3, 1, 1, 1, 1, 23, 29, 0, 15, 1, 1, 0, 1, 0, 0]' : 0.254982}", "{'[5, 2, 2, 3, 1, 1, 1, 1, 23, 29, 0, 15, 1, 1, 0, 1, 0, 0]' : 0.25597}", "{'[5, 2, 2, 3, 1, 1, 1, 1, 23, 29, 0, 15, 1, 1, 0, 1, 0, 0]' : 0.255935}", "{'[5, 2, 2, 3, 1, 1, 1, 1, 23, 29, 0, 15, 1, 1, 0, 1, 0, 0]' : 0.255101}", "{'[5, 2, 2, 3, 1, 1, 1, 1, 23, 29, 0, 15, 1, 1, 0, 1, 0, 0]' : 0.255114}", "{'[5, 2, 2, 3, 1, 1, 1, 1, 23, 29, 0, 15, 1, 1, 0, 1, 0, 0]' : 0.255266}", "{'[5, 2, 2, 3, 1, 1, 1, 1, 23, 29, 0, 15, 1, 1, 0, 1, 0, 0]' : 0.255661}", "{'[5, 2, 2, 3, 1, 1, 1, 1, 23, 29, 0, 15, 1, 1, 0, 1, 0, 0]' : 0.255272}", "{'[5, 2, 2, 3, 1, 1, 1, 1, 23, 29, 0, 15, 1, 1, 0, 1, 0, 0]' : 0.254607}", "{'[5, 2, 2, 3, 1, 1, 1, 1, 23, 29, 0, 15, 1, 1, 0, 1, 0, 0]' : 0.254717}", "{'[5, 2, 2, 3, 1, 1, 1, 1, 23, 29, 0, 15, 1, 1, 0, 1, 0, 0]' : 0.255738}", "{'[5, 2, 2, 3, 1, 1, 1, 1, 23, 29, 0, 15, 1, 1, 0, 1, 0, 0]' : 0.255313}", "{'[5, 2, 2, 3, 1, 1, 1, 1, 23, 29, 0, 15, 1, 1, 0, 1, 0, 0]' : 0.255148}", "{'[5, 2, 2, 3, 1, 1, 1, 1, 23, 29, 0, 15, 1, 1, 0, 1, 0, 0]' : 0.255467}", "{'[5, 2, 2, 3, 1, 1, 1, 1, 23, 29, 0, 15, 1, 1, 0, 1, 0, 0]' : 0.25808}", "{'[5, 2, 2, 3, 1, 1, 1, 1, 23, 29, 0, 15, 1, 1, 0, 1, 0, 0]' : 0.257141}", "{'[5, 2, 2, 3, 1, 1, 1, 1, 23, 29, 0, 15, 1, 1, 0, 1, 0, 0]' : 0.255295}", "{'[5, 2, 2, 3, 1, 1, 1, 1, 23, 29, 0, 15, 1, 1, 0, 1, 0, 0]' : 0.256078}", "{'[5, 2, 2, 3, 1, 1, 1, 1, 23, 29, 0, 15, 1, 1, 0, 1, 0, 0]' : 0.265479}", "{'[5, 2, 2, 3, 1, 1, 1, 1, 23, 29, 0, 15, 1, 1, 0, 1, 0, 0]' : 0.255258}", "{'[5, 2, 2, 3, 1, 1, 1, 1, 23, 29, 0, 15, 1, 1, 0, 1, 0, 0]' : 0.255383}", "{'[5, 2, 2, 3, 1, 1, 1, 1, 23, 29, 0, 15, 1, 1, 0, 1, 0, 0]' : 0.255105}", "{'[5, 2, 2, 3, 1, 1, 1, 1, 23, 29, 0, 15, 1, 1, 0, 1, 0, 0]' : 0.25551}", "{'[5, 2, 2, 3, 1, 1, 1, 1, 23, 29, 0, 15, 1, 1, 0, 1, 0, 0]' : 0.256333}", "{'[5, 2, 2, 3, 1, 1, 1, 1, 23, 29, 0, 15, 1, 1, 0, 1, 0, 0]' : 0.254592}", "{'[5, 2, 2, 3, 1, 1, 1, 1, 23, 29, 0, 15, 1, 1, 0, 1, 0, 0]' : 0.25548}", "{'[5, 2, 2, 3, 1, 1, 1, 1, 23, 29, 0, 15, 1, 1, 0, 1, 0, 0]' : 0.255025}", "{'[5, 2, 2, 3, 1, 1, 1, 1, 23, 29, 0, 15, 1, 1, 0, 1, 0, 0]' : 0.255016}"]
returning from 'run': {'[5, 2, 2, 3, 1, 1, 1, 1, 23, 29, 0, 15, 1, 1, 0, 1, 0, 0]': ([0.255973, 0.255104, 0.254982, 0.25597, 0.255935, 0.255101, 0.255114, 0.255266, 0.255661, 0.255272, 0.254607, 0.254717, 0.255738, 0.255313, 0.255148, 0.255467, 0.25808, 0.257141, 0.255295, 0.256078, 0.265479, 0.255258, 0.255383, 0.255105, 0.25551, 0.256333, 0.254592, 0.25548, 0.255025, 0.255016], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 2, 2, 3, 1, 1, 1, 1, 23, 29, 0, 15, 1, 1, 0, 1, 0, 0]': ([0.255973, 0.255104, 0.254982, 0.25597, 0.255935, 0.255101, 0.255114, 0.255266, 0.255661, 0.255272, 0.254607, 0.254717, 0.255738, 0.255313, 0.255148, 0.255467, 0.25808, 0.257141, 0.255295, 0.256078, 0.265479, 0.255258, 0.255383, 0.255105, 0.25551, 0.256333, 0.254592, 0.25548, 0.255025, 0.255016], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	99
        Max loop nest depth: 	6
        Additions: 		4161
        Multiplications: 	1782
        Divisions: 		0
        Logical: 		0
        Reads: 			8092
        Writes: 		1409
        Comparisons:		99
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest22.exe __orio_perftest22.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest22.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest22.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest22.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 527, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors, data)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 408, in dopt_anova
    budget)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 333, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 279, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest22.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 527, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors, data)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 408, in dopt_anova
    budget)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 333, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 279, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	40
        Max loop nest depth: 	6
        Additions: 		1576
        Multiplications: 	714
        Divisions: 		0
        Logical: 		0
        Reads: 			3193
        Writes: 		572
        Comparisons:		40
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest23.exe __orio_perftest23.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest23.exe  
Program Test Output: 
{'[3, 3, 1, 5, 5, 5, 1, 0, 0, 19, 2, 0, 0, 1, 1, 1, 0, 1]' : 0.332249}
{'[3, 3, 1, 5, 5, 5, 1, 0, 0, 19, 2, 0, 0, 1, 1, 1, 0, 1]' : 0.339255}
{'[3, 3, 1, 5, 5, 5, 1, 0, 0, 19, 2, 0, 0, 1, 1, 1, 0, 1]' : 0.335473}
{'[3, 3, 1, 5, 5, 5, 1, 0, 0, 19, 2, 0, 0, 1, 1, 1, 0, 1]' : 0.334084}
{'[3, 3, 1, 5, 5, 5, 1, 0, 0, 19, 2, 0, 0, 1, 1, 1, 0, 1]' : 0.332502}
{'[3, 3, 1, 5, 5, 5, 1, 0, 0, 19, 2, 0, 0, 1, 1, 1, 0, 1]' : 0.332204}
{'[3, 3, 1, 5, 5, 5, 1, 0, 0, 19, 2, 0, 0, 1, 1, 1, 0, 1]' : 0.333106}
{'[3, 3, 1, 5, 5, 5, 1, 0, 0, 19, 2, 0, 0, 1, 1, 1, 0, 1]' : 0.332162}
{'[3, 3, 1, 5, 5, 5, 1, 0, 0, 19, 2, 0, 0, 1, 1, 1, 0, 1]' : 0.331944}
{'[3, 3, 1, 5, 5, 5, 1, 0, 0, 19, 2, 0, 0, 1, 1, 1, 0, 1]' : 0.332128}
{'[3, 3, 1, 5, 5, 5, 1, 0, 0, 19, 2, 0, 0, 1, 1, 1, 0, 1]' : 0.333086}
{'[3, 3, 1, 5, 5, 5, 1, 0, 0, 19, 2, 0, 0, 1, 1, 1, 0, 1]' : 0.331814}
{'[3, 3, 1, 5, 5, 5, 1, 0, 0, 19, 2, 0, 0, 1, 1, 1, 0, 1]' : 0.332023}
{'[3, 3, 1, 5, 5, 5, 1, 0, 0, 19, 2, 0, 0, 1, 1, 1, 0, 1]' : 0.332097}
{'[3, 3, 1, 5, 5, 5, 1, 0, 0, 19, 2, 0, 0, 1, 1, 1, 0, 1]' : 0.331878}
{'[3, 3, 1, 5, 5, 5, 1, 0, 0, 19, 2, 0, 0, 1, 1, 1, 0, 1]' : 0.332058}
{'[3, 3, 1, 5, 5, 5, 1, 0, 0, 19, 2, 0, 0, 1, 1, 1, 0, 1]' : 0.332555}
{'[3, 3, 1, 5, 5, 5, 1, 0, 0, 19, 2, 0, 0, 1, 1, 1, 0, 1]' : 0.331985}
{'[3, 3, 1, 5, 5, 5, 1, 0, 0, 19, 2, 0, 0, 1, 1, 1, 0, 1]' : 0.332649}
{'[3, 3, 1, 5, 5, 5, 1, 0, 0, 19, 2, 0, 0, 1, 1, 1, 0, 1]' : 0.331973}
{'[3, 3, 1, 5, 5, 5, 1, 0, 0, 19, 2, 0, 0, 1, 1, 1, 0, 1]' : 0.332254}
{'[3, 3, 1, 5, 5, 5, 1, 0, 0, 19, 2, 0, 0, 1, 1, 1, 0, 1]' : 0.332238}
{'[3, 3, 1, 5, 5, 5, 1, 0, 0, 19, 2, 0, 0, 1, 1, 1, 0, 1]' : 0.332221}
{'[3, 3, 1, 5, 5, 5, 1, 0, 0, 19, 2, 0, 0, 1, 1, 1, 0, 1]' : 0.332162}
{'[3, 3, 1, 5, 5, 5, 1, 0, 0, 19, 2, 0, 0, 1, 1, 1, 0, 1]' : 0.332267}
{'[3, 3, 1, 5, 5, 5, 1, 0, 0, 19, 2, 0, 0, 1, 1, 1, 0, 1]' : 0.333364}
{'[3, 3, 1, 5, 5, 5, 1, 0, 0, 19, 2, 0, 0, 1, 1, 1, 0, 1]' : 0.332041}
{'[3, 3, 1, 5, 5, 5, 1, 0, 0, 19, 2, 0, 0, 1, 1, 1, 0, 1]' : 0.332391}
{'[3, 3, 1, 5, 5, 5, 1, 0, 0, 19, 2, 0, 0, 1, 1, 1, 0, 1]' : 0.332864}
{'[3, 3, 1, 5, 5, 5, 1, 0, 0, 19, 2, 0, 0, 1, 1, 1, 0, 1]' : 0.331941}

out:
 ["{'[3, 3, 1, 5, 5, 5, 1, 0, 0, 19, 2, 0, 0, 1, 1, 1, 0, 1]' : 0.332249}", "{'[3, 3, 1, 5, 5, 5, 1, 0, 0, 19, 2, 0, 0, 1, 1, 1, 0, 1]' : 0.339255}", "{'[3, 3, 1, 5, 5, 5, 1, 0, 0, 19, 2, 0, 0, 1, 1, 1, 0, 1]' : 0.335473}", "{'[3, 3, 1, 5, 5, 5, 1, 0, 0, 19, 2, 0, 0, 1, 1, 1, 0, 1]' : 0.334084}", "{'[3, 3, 1, 5, 5, 5, 1, 0, 0, 19, 2, 0, 0, 1, 1, 1, 0, 1]' : 0.332502}", "{'[3, 3, 1, 5, 5, 5, 1, 0, 0, 19, 2, 0, 0, 1, 1, 1, 0, 1]' : 0.332204}", "{'[3, 3, 1, 5, 5, 5, 1, 0, 0, 19, 2, 0, 0, 1, 1, 1, 0, 1]' : 0.333106}", "{'[3, 3, 1, 5, 5, 5, 1, 0, 0, 19, 2, 0, 0, 1, 1, 1, 0, 1]' : 0.332162}", "{'[3, 3, 1, 5, 5, 5, 1, 0, 0, 19, 2, 0, 0, 1, 1, 1, 0, 1]' : 0.331944}", "{'[3, 3, 1, 5, 5, 5, 1, 0, 0, 19, 2, 0, 0, 1, 1, 1, 0, 1]' : 0.332128}", "{'[3, 3, 1, 5, 5, 5, 1, 0, 0, 19, 2, 0, 0, 1, 1, 1, 0, 1]' : 0.333086}", "{'[3, 3, 1, 5, 5, 5, 1, 0, 0, 19, 2, 0, 0, 1, 1, 1, 0, 1]' : 0.331814}", "{'[3, 3, 1, 5, 5, 5, 1, 0, 0, 19, 2, 0, 0, 1, 1, 1, 0, 1]' : 0.332023}", "{'[3, 3, 1, 5, 5, 5, 1, 0, 0, 19, 2, 0, 0, 1, 1, 1, 0, 1]' : 0.332097}", "{'[3, 3, 1, 5, 5, 5, 1, 0, 0, 19, 2, 0, 0, 1, 1, 1, 0, 1]' : 0.331878}", "{'[3, 3, 1, 5, 5, 5, 1, 0, 0, 19, 2, 0, 0, 1, 1, 1, 0, 1]' : 0.332058}", "{'[3, 3, 1, 5, 5, 5, 1, 0, 0, 19, 2, 0, 0, 1, 1, 1, 0, 1]' : 0.332555}", "{'[3, 3, 1, 5, 5, 5, 1, 0, 0, 19, 2, 0, 0, 1, 1, 1, 0, 1]' : 0.331985}", "{'[3, 3, 1, 5, 5, 5, 1, 0, 0, 19, 2, 0, 0, 1, 1, 1, 0, 1]' : 0.332649}", "{'[3, 3, 1, 5, 5, 5, 1, 0, 0, 19, 2, 0, 0, 1, 1, 1, 0, 1]' : 0.331973}", "{'[3, 3, 1, 5, 5, 5, 1, 0, 0, 19, 2, 0, 0, 1, 1, 1, 0, 1]' : 0.332254}", "{'[3, 3, 1, 5, 5, 5, 1, 0, 0, 19, 2, 0, 0, 1, 1, 1, 0, 1]' : 0.332238}", "{'[3, 3, 1, 5, 5, 5, 1, 0, 0, 19, 2, 0, 0, 1, 1, 1, 0, 1]' : 0.332221}", "{'[3, 3, 1, 5, 5, 5, 1, 0, 0, 19, 2, 0, 0, 1, 1, 1, 0, 1]' : 0.332162}", "{'[3, 3, 1, 5, 5, 5, 1, 0, 0, 19, 2, 0, 0, 1, 1, 1, 0, 1]' : 0.332267}", "{'[3, 3, 1, 5, 5, 5, 1, 0, 0, 19, 2, 0, 0, 1, 1, 1, 0, 1]' : 0.333364}", "{'[3, 3, 1, 5, 5, 5, 1, 0, 0, 19, 2, 0, 0, 1, 1, 1, 0, 1]' : 0.332041}", "{'[3, 3, 1, 5, 5, 5, 1, 0, 0, 19, 2, 0, 0, 1, 1, 1, 0, 1]' : 0.332391}", "{'[3, 3, 1, 5, 5, 5, 1, 0, 0, 19, 2, 0, 0, 1, 1, 1, 0, 1]' : 0.332864}", "{'[3, 3, 1, 5, 5, 5, 1, 0, 0, 19, 2, 0, 0, 1, 1, 1, 0, 1]' : 0.331941}"]
returning from 'run': {'[3, 3, 1, 5, 5, 5, 1, 0, 0, 19, 2, 0, 0, 1, 1, 1, 0, 1]': ([0.332249, 0.339255, 0.335473, 0.334084, 0.332502, 0.332204, 0.333106, 0.332162, 0.331944, 0.332128, 0.333086, 0.331814, 0.332023, 0.332097, 0.331878, 0.332058, 0.332555, 0.331985, 0.332649, 0.331973, 0.332254, 0.332238, 0.332221, 0.332162, 0.332267, 0.333364, 0.332041, 0.332391, 0.332864, 0.331941], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 3, 1, 5, 5, 5, 1, 0, 0, 19, 2, 0, 0, 1, 1, 1, 0, 1]': ([0.332249, 0.339255, 0.335473, 0.334084, 0.332502, 0.332204, 0.333106, 0.332162, 0.331944, 0.332128, 0.333086, 0.331814, 0.332023, 0.332097, 0.331878, 0.332058, 0.332555, 0.331985, 0.332649, 0.331973, 0.332254, 0.332238, 0.332221, 0.332162, 0.332267, 0.333364, 0.332041, 0.332391, 0.332864, 0.331941], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	59
        Max loop nest depth: 	6
        Additions: 		1915
        Multiplications: 	420
        Divisions: 		0
        Logical: 		0
        Reads: 			3065
        Writes: 		393
        Comparisons:		59
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest24.exe __orio_perftest24.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest24.exe  
Program Test Output: 
{'[1, 1, 3, 1, 0, 4, 1, 1, 28, 5, 4, 0, 1, 0, 1, 0, 1, 0]' : 0.320229}
{'[1, 1, 3, 1, 0, 4, 1, 1, 28, 5, 4, 0, 1, 0, 1, 0, 1, 0]' : 0.320302}
{'[1, 1, 3, 1, 0, 4, 1, 1, 28, 5, 4, 0, 1, 0, 1, 0, 1, 0]' : 0.320515}
{'[1, 1, 3, 1, 0, 4, 1, 1, 28, 5, 4, 0, 1, 0, 1, 0, 1, 0]' : 0.320356}
{'[1, 1, 3, 1, 0, 4, 1, 1, 28, 5, 4, 0, 1, 0, 1, 0, 1, 0]' : 0.320667}
{'[1, 1, 3, 1, 0, 4, 1, 1, 28, 5, 4, 0, 1, 0, 1, 0, 1, 0]' : 0.320575}
{'[1, 1, 3, 1, 0, 4, 1, 1, 28, 5, 4, 0, 1, 0, 1, 0, 1, 0]' : 0.320213}
{'[1, 1, 3, 1, 0, 4, 1, 1, 28, 5, 4, 0, 1, 0, 1, 0, 1, 0]' : 0.320318}
{'[1, 1, 3, 1, 0, 4, 1, 1, 28, 5, 4, 0, 1, 0, 1, 0, 1, 0]' : 0.320295}
{'[1, 1, 3, 1, 0, 4, 1, 1, 28, 5, 4, 0, 1, 0, 1, 0, 1, 0]' : 0.320187}
{'[1, 1, 3, 1, 0, 4, 1, 1, 28, 5, 4, 0, 1, 0, 1, 0, 1, 0]' : 0.320352}
{'[1, 1, 3, 1, 0, 4, 1, 1, 28, 5, 4, 0, 1, 0, 1, 0, 1, 0]' : 0.320444}
{'[1, 1, 3, 1, 0, 4, 1, 1, 28, 5, 4, 0, 1, 0, 1, 0, 1, 0]' : 0.320489}
{'[1, 1, 3, 1, 0, 4, 1, 1, 28, 5, 4, 0, 1, 0, 1, 0, 1, 0]' : 0.320488}
{'[1, 1, 3, 1, 0, 4, 1, 1, 28, 5, 4, 0, 1, 0, 1, 0, 1, 0]' : 0.320339}
{'[1, 1, 3, 1, 0, 4, 1, 1, 28, 5, 4, 0, 1, 0, 1, 0, 1, 0]' : 0.320508}
{'[1, 1, 3, 1, 0, 4, 1, 1, 28, 5, 4, 0, 1, 0, 1, 0, 1, 0]' : 0.320481}
{'[1, 1, 3, 1, 0, 4, 1, 1, 28, 5, 4, 0, 1, 0, 1, 0, 1, 0]' : 0.3206}
{'[1, 1, 3, 1, 0, 4, 1, 1, 28, 5, 4, 0, 1, 0, 1, 0, 1, 0]' : 0.320521}
{'[1, 1, 3, 1, 0, 4, 1, 1, 28, 5, 4, 0, 1, 0, 1, 0, 1, 0]' : 0.320388}
{'[1, 1, 3, 1, 0, 4, 1, 1, 28, 5, 4, 0, 1, 0, 1, 0, 1, 0]' : 0.321083}
{'[1, 1, 3, 1, 0, 4, 1, 1, 28, 5, 4, 0, 1, 0, 1, 0, 1, 0]' : 0.320461}
{'[1, 1, 3, 1, 0, 4, 1, 1, 28, 5, 4, 0, 1, 0, 1, 0, 1, 0]' : 0.32047}
{'[1, 1, 3, 1, 0, 4, 1, 1, 28, 5, 4, 0, 1, 0, 1, 0, 1, 0]' : 0.320525}
{'[1, 1, 3, 1, 0, 4, 1, 1, 28, 5, 4, 0, 1, 0, 1, 0, 1, 0]' : 0.320448}
{'[1, 1, 3, 1, 0, 4, 1, 1, 28, 5, 4, 0, 1, 0, 1, 0, 1, 0]' : 0.320413}
{'[1, 1, 3, 1, 0, 4, 1, 1, 28, 5, 4, 0, 1, 0, 1, 0, 1, 0]' : 0.320707}
{'[1, 1, 3, 1, 0, 4, 1, 1, 28, 5, 4, 0, 1, 0, 1, 0, 1, 0]' : 0.320382}
{'[1, 1, 3, 1, 0, 4, 1, 1, 28, 5, 4, 0, 1, 0, 1, 0, 1, 0]' : 0.320349}
{'[1, 1, 3, 1, 0, 4, 1, 1, 28, 5, 4, 0, 1, 0, 1, 0, 1, 0]' : 0.32072}

out:
 ["{'[1, 1, 3, 1, 0, 4, 1, 1, 28, 5, 4, 0, 1, 0, 1, 0, 1, 0]' : 0.320229}", "{'[1, 1, 3, 1, 0, 4, 1, 1, 28, 5, 4, 0, 1, 0, 1, 0, 1, 0]' : 0.320302}", "{'[1, 1, 3, 1, 0, 4, 1, 1, 28, 5, 4, 0, 1, 0, 1, 0, 1, 0]' : 0.320515}", "{'[1, 1, 3, 1, 0, 4, 1, 1, 28, 5, 4, 0, 1, 0, 1, 0, 1, 0]' : 0.320356}", "{'[1, 1, 3, 1, 0, 4, 1, 1, 28, 5, 4, 0, 1, 0, 1, 0, 1, 0]' : 0.320667}", "{'[1, 1, 3, 1, 0, 4, 1, 1, 28, 5, 4, 0, 1, 0, 1, 0, 1, 0]' : 0.320575}", "{'[1, 1, 3, 1, 0, 4, 1, 1, 28, 5, 4, 0, 1, 0, 1, 0, 1, 0]' : 0.320213}", "{'[1, 1, 3, 1, 0, 4, 1, 1, 28, 5, 4, 0, 1, 0, 1, 0, 1, 0]' : 0.320318}", "{'[1, 1, 3, 1, 0, 4, 1, 1, 28, 5, 4, 0, 1, 0, 1, 0, 1, 0]' : 0.320295}", "{'[1, 1, 3, 1, 0, 4, 1, 1, 28, 5, 4, 0, 1, 0, 1, 0, 1, 0]' : 0.320187}", "{'[1, 1, 3, 1, 0, 4, 1, 1, 28, 5, 4, 0, 1, 0, 1, 0, 1, 0]' : 0.320352}", "{'[1, 1, 3, 1, 0, 4, 1, 1, 28, 5, 4, 0, 1, 0, 1, 0, 1, 0]' : 0.320444}", "{'[1, 1, 3, 1, 0, 4, 1, 1, 28, 5, 4, 0, 1, 0, 1, 0, 1, 0]' : 0.320489}", "{'[1, 1, 3, 1, 0, 4, 1, 1, 28, 5, 4, 0, 1, 0, 1, 0, 1, 0]' : 0.320488}", "{'[1, 1, 3, 1, 0, 4, 1, 1, 28, 5, 4, 0, 1, 0, 1, 0, 1, 0]' : 0.320339}", "{'[1, 1, 3, 1, 0, 4, 1, 1, 28, 5, 4, 0, 1, 0, 1, 0, 1, 0]' : 0.320508}", "{'[1, 1, 3, 1, 0, 4, 1, 1, 28, 5, 4, 0, 1, 0, 1, 0, 1, 0]' : 0.320481}", "{'[1, 1, 3, 1, 0, 4, 1, 1, 28, 5, 4, 0, 1, 0, 1, 0, 1, 0]' : 0.3206}", "{'[1, 1, 3, 1, 0, 4, 1, 1, 28, 5, 4, 0, 1, 0, 1, 0, 1, 0]' : 0.320521}", "{'[1, 1, 3, 1, 0, 4, 1, 1, 28, 5, 4, 0, 1, 0, 1, 0, 1, 0]' : 0.320388}", "{'[1, 1, 3, 1, 0, 4, 1, 1, 28, 5, 4, 0, 1, 0, 1, 0, 1, 0]' : 0.321083}", "{'[1, 1, 3, 1, 0, 4, 1, 1, 28, 5, 4, 0, 1, 0, 1, 0, 1, 0]' : 0.320461}", "{'[1, 1, 3, 1, 0, 4, 1, 1, 28, 5, 4, 0, 1, 0, 1, 0, 1, 0]' : 0.32047}", "{'[1, 1, 3, 1, 0, 4, 1, 1, 28, 5, 4, 0, 1, 0, 1, 0, 1, 0]' : 0.320525}", "{'[1, 1, 3, 1, 0, 4, 1, 1, 28, 5, 4, 0, 1, 0, 1, 0, 1, 0]' : 0.320448}", "{'[1, 1, 3, 1, 0, 4, 1, 1, 28, 5, 4, 0, 1, 0, 1, 0, 1, 0]' : 0.320413}", "{'[1, 1, 3, 1, 0, 4, 1, 1, 28, 5, 4, 0, 1, 0, 1, 0, 1, 0]' : 0.320707}", "{'[1, 1, 3, 1, 0, 4, 1, 1, 28, 5, 4, 0, 1, 0, 1, 0, 1, 0]' : 0.320382}", "{'[1, 1, 3, 1, 0, 4, 1, 1, 28, 5, 4, 0, 1, 0, 1, 0, 1, 0]' : 0.320349}", "{'[1, 1, 3, 1, 0, 4, 1, 1, 28, 5, 4, 0, 1, 0, 1, 0, 1, 0]' : 0.32072}"]
returning from 'run': {'[1, 1, 3, 1, 0, 4, 1, 1, 28, 5, 4, 0, 1, 0, 1, 0, 1, 0]': ([0.320229, 0.320302, 0.320515, 0.320356, 0.320667, 0.320575, 0.320213, 0.320318, 0.320295, 0.320187, 0.320352, 0.320444, 0.320489, 0.320488, 0.320339, 0.320508, 0.320481, 0.3206, 0.320521, 0.320388, 0.321083, 0.320461, 0.32047, 0.320525, 0.320448, 0.320413, 0.320707, 0.320382, 0.320349, 0.32072], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 1, 3, 1, 0, 4, 1, 1, 28, 5, 4, 0, 1, 0, 1, 0, 1, 0]': ([0.320229, 0.320302, 0.320515, 0.320356, 0.320667, 0.320575, 0.320213, 0.320318, 0.320295, 0.320187, 0.320352, 0.320444, 0.320489, 0.320488, 0.320339, 0.320508, 0.320481, 0.3206, 0.320521, 0.320388, 0.321083, 0.320461, 0.32047, 0.320525, 0.320448, 0.320413, 0.320707, 0.320382, 0.320349, 0.32072], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	5
        Additions: 		357
        Multiplications: 	84
        Divisions: 		0
        Logical: 		0
        Reads: 			720
        Writes: 		142
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest25.exe __orio_perftest25.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest25.exe  
Program Test Output: 
{'[0, 4, 2, 2, 3, 0, 1, 0, 28, 5, 0, 3, 0, 0, 0, 0, 0, 1]' : 0.332464}
{'[0, 4, 2, 2, 3, 0, 1, 0, 28, 5, 0, 3, 0, 0, 0, 0, 0, 1]' : 0.332445}
{'[0, 4, 2, 2, 3, 0, 1, 0, 28, 5, 0, 3, 0, 0, 0, 0, 0, 1]' : 0.341349}
{'[0, 4, 2, 2, 3, 0, 1, 0, 28, 5, 0, 3, 0, 0, 0, 0, 0, 1]' : 0.337023}
{'[0, 4, 2, 2, 3, 0, 1, 0, 28, 5, 0, 3, 0, 0, 0, 0, 0, 1]' : 0.336564}
{'[0, 4, 2, 2, 3, 0, 1, 0, 28, 5, 0, 3, 0, 0, 0, 0, 0, 1]' : 0.332738}
{'[0, 4, 2, 2, 3, 0, 1, 0, 28, 5, 0, 3, 0, 0, 0, 0, 0, 1]' : 0.335031}
{'[0, 4, 2, 2, 3, 0, 1, 0, 28, 5, 0, 3, 0, 0, 0, 0, 0, 1]' : 0.333714}
{'[0, 4, 2, 2, 3, 0, 1, 0, 28, 5, 0, 3, 0, 0, 0, 0, 0, 1]' : 0.332069}
{'[0, 4, 2, 2, 3, 0, 1, 0, 28, 5, 0, 3, 0, 0, 0, 0, 0, 1]' : 0.332058}
{'[0, 4, 2, 2, 3, 0, 1, 0, 28, 5, 0, 3, 0, 0, 0, 0, 0, 1]' : 0.332854}
{'[0, 4, 2, 2, 3, 0, 1, 0, 28, 5, 0, 3, 0, 0, 0, 0, 0, 1]' : 0.332951}
{'[0, 4, 2, 2, 3, 0, 1, 0, 28, 5, 0, 3, 0, 0, 0, 0, 0, 1]' : 0.3327}
{'[0, 4, 2, 2, 3, 0, 1, 0, 28, 5, 0, 3, 0, 0, 0, 0, 0, 1]' : 0.332246}
{'[0, 4, 2, 2, 3, 0, 1, 0, 28, 5, 0, 3, 0, 0, 0, 0, 0, 1]' : 0.332015}
{'[0, 4, 2, 2, 3, 0, 1, 0, 28, 5, 0, 3, 0, 0, 0, 0, 0, 1]' : 0.33246}
{'[0, 4, 2, 2, 3, 0, 1, 0, 28, 5, 0, 3, 0, 0, 0, 0, 0, 1]' : 0.331959}
{'[0, 4, 2, 2, 3, 0, 1, 0, 28, 5, 0, 3, 0, 0, 0, 0, 0, 1]' : 0.332212}
{'[0, 4, 2, 2, 3, 0, 1, 0, 28, 5, 0, 3, 0, 0, 0, 0, 0, 1]' : 0.332112}
{'[0, 4, 2, 2, 3, 0, 1, 0, 28, 5, 0, 3, 0, 0, 0, 0, 0, 1]' : 0.33265}
{'[0, 4, 2, 2, 3, 0, 1, 0, 28, 5, 0, 3, 0, 0, 0, 0, 0, 1]' : 0.331903}
{'[0, 4, 2, 2, 3, 0, 1, 0, 28, 5, 0, 3, 0, 0, 0, 0, 0, 1]' : 0.332606}
{'[0, 4, 2, 2, 3, 0, 1, 0, 28, 5, 0, 3, 0, 0, 0, 0, 0, 1]' : 0.332257}
{'[0, 4, 2, 2, 3, 0, 1, 0, 28, 5, 0, 3, 0, 0, 0, 0, 0, 1]' : 0.332982}
{'[0, 4, 2, 2, 3, 0, 1, 0, 28, 5, 0, 3, 0, 0, 0, 0, 0, 1]' : 0.332714}
{'[0, 4, 2, 2, 3, 0, 1, 0, 28, 5, 0, 3, 0, 0, 0, 0, 0, 1]' : 0.331538}
{'[0, 4, 2, 2, 3, 0, 1, 0, 28, 5, 0, 3, 0, 0, 0, 0, 0, 1]' : 0.332829}
{'[0, 4, 2, 2, 3, 0, 1, 0, 28, 5, 0, 3, 0, 0, 0, 0, 0, 1]' : 0.332704}
{'[0, 4, 2, 2, 3, 0, 1, 0, 28, 5, 0, 3, 0, 0, 0, 0, 0, 1]' : 0.332088}
{'[0, 4, 2, 2, 3, 0, 1, 0, 28, 5, 0, 3, 0, 0, 0, 0, 0, 1]' : 0.33206}

out:
 ["{'[0, 4, 2, 2, 3, 0, 1, 0, 28, 5, 0, 3, 0, 0, 0, 0, 0, 1]' : 0.332464}", "{'[0, 4, 2, 2, 3, 0, 1, 0, 28, 5, 0, 3, 0, 0, 0, 0, 0, 1]' : 0.332445}", "{'[0, 4, 2, 2, 3, 0, 1, 0, 28, 5, 0, 3, 0, 0, 0, 0, 0, 1]' : 0.341349}", "{'[0, 4, 2, 2, 3, 0, 1, 0, 28, 5, 0, 3, 0, 0, 0, 0, 0, 1]' : 0.337023}", "{'[0, 4, 2, 2, 3, 0, 1, 0, 28, 5, 0, 3, 0, 0, 0, 0, 0, 1]' : 0.336564}", "{'[0, 4, 2, 2, 3, 0, 1, 0, 28, 5, 0, 3, 0, 0, 0, 0, 0, 1]' : 0.332738}", "{'[0, 4, 2, 2, 3, 0, 1, 0, 28, 5, 0, 3, 0, 0, 0, 0, 0, 1]' : 0.335031}", "{'[0, 4, 2, 2, 3, 0, 1, 0, 28, 5, 0, 3, 0, 0, 0, 0, 0, 1]' : 0.333714}", "{'[0, 4, 2, 2, 3, 0, 1, 0, 28, 5, 0, 3, 0, 0, 0, 0, 0, 1]' : 0.332069}", "{'[0, 4, 2, 2, 3, 0, 1, 0, 28, 5, 0, 3, 0, 0, 0, 0, 0, 1]' : 0.332058}", "{'[0, 4, 2, 2, 3, 0, 1, 0, 28, 5, 0, 3, 0, 0, 0, 0, 0, 1]' : 0.332854}", "{'[0, 4, 2, 2, 3, 0, 1, 0, 28, 5, 0, 3, 0, 0, 0, 0, 0, 1]' : 0.332951}", "{'[0, 4, 2, 2, 3, 0, 1, 0, 28, 5, 0, 3, 0, 0, 0, 0, 0, 1]' : 0.3327}", "{'[0, 4, 2, 2, 3, 0, 1, 0, 28, 5, 0, 3, 0, 0, 0, 0, 0, 1]' : 0.332246}", "{'[0, 4, 2, 2, 3, 0, 1, 0, 28, 5, 0, 3, 0, 0, 0, 0, 0, 1]' : 0.332015}", "{'[0, 4, 2, 2, 3, 0, 1, 0, 28, 5, 0, 3, 0, 0, 0, 0, 0, 1]' : 0.33246}", "{'[0, 4, 2, 2, 3, 0, 1, 0, 28, 5, 0, 3, 0, 0, 0, 0, 0, 1]' : 0.331959}", "{'[0, 4, 2, 2, 3, 0, 1, 0, 28, 5, 0, 3, 0, 0, 0, 0, 0, 1]' : 0.332212}", "{'[0, 4, 2, 2, 3, 0, 1, 0, 28, 5, 0, 3, 0, 0, 0, 0, 0, 1]' : 0.332112}", "{'[0, 4, 2, 2, 3, 0, 1, 0, 28, 5, 0, 3, 0, 0, 0, 0, 0, 1]' : 0.33265}", "{'[0, 4, 2, 2, 3, 0, 1, 0, 28, 5, 0, 3, 0, 0, 0, 0, 0, 1]' : 0.331903}", "{'[0, 4, 2, 2, 3, 0, 1, 0, 28, 5, 0, 3, 0, 0, 0, 0, 0, 1]' : 0.332606}", "{'[0, 4, 2, 2, 3, 0, 1, 0, 28, 5, 0, 3, 0, 0, 0, 0, 0, 1]' : 0.332257}", "{'[0, 4, 2, 2, 3, 0, 1, 0, 28, 5, 0, 3, 0, 0, 0, 0, 0, 1]' : 0.332982}", "{'[0, 4, 2, 2, 3, 0, 1, 0, 28, 5, 0, 3, 0, 0, 0, 0, 0, 1]' : 0.332714}", "{'[0, 4, 2, 2, 3, 0, 1, 0, 28, 5, 0, 3, 0, 0, 0, 0, 0, 1]' : 0.331538}", "{'[0, 4, 2, 2, 3, 0, 1, 0, 28, 5, 0, 3, 0, 0, 0, 0, 0, 1]' : 0.332829}", "{'[0, 4, 2, 2, 3, 0, 1, 0, 28, 5, 0, 3, 0, 0, 0, 0, 0, 1]' : 0.332704}", "{'[0, 4, 2, 2, 3, 0, 1, 0, 28, 5, 0, 3, 0, 0, 0, 0, 0, 1]' : 0.332088}", "{'[0, 4, 2, 2, 3, 0, 1, 0, 28, 5, 0, 3, 0, 0, 0, 0, 0, 1]' : 0.33206}"]
returning from 'run': {'[0, 4, 2, 2, 3, 0, 1, 0, 28, 5, 0, 3, 0, 0, 0, 0, 0, 1]': ([0.332464, 0.332445, 0.341349, 0.337023, 0.336564, 0.332738, 0.335031, 0.333714, 0.332069, 0.332058, 0.332854, 0.332951, 0.3327, 0.332246, 0.332015, 0.33246, 0.331959, 0.332212, 0.332112, 0.33265, 0.331903, 0.332606, 0.332257, 0.332982, 0.332714, 0.331538, 0.332829, 0.332704, 0.332088, 0.33206], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 4, 2, 2, 3, 0, 1, 0, 28, 5, 0, 3, 0, 0, 0, 0, 0, 1]': ([0.332464, 0.332445, 0.341349, 0.337023, 0.336564, 0.332738, 0.335031, 0.333714, 0.332069, 0.332058, 0.332854, 0.332951, 0.3327, 0.332246, 0.332015, 0.33246, 0.331959, 0.332212, 0.332112, 0.33265, 0.331903, 0.332606, 0.332257, 0.332982, 0.332714, 0.331538, 0.332829, 0.332704, 0.332088, 0.33206], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		265
        Multiplications: 	92
        Divisions: 		0
        Logical: 		0
        Reads: 			576
        Writes: 		86
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest26.exe __orio_perftest26.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest26.exe  
Program Test Output: 
{'[0, 0, 4, 6, 5, 5, 0, 0, 13, 0, 11, 23, 0, 1, 0, 0, 0, 0]' : 0.720867}
{'[0, 0, 4, 6, 5, 5, 0, 0, 13, 0, 11, 23, 0, 1, 0, 0, 0, 0]' : 0.720958}
{'[0, 0, 4, 6, 5, 5, 0, 0, 13, 0, 11, 23, 0, 1, 0, 0, 0, 0]' : 0.720858}
{'[0, 0, 4, 6, 5, 5, 0, 0, 13, 0, 11, 23, 0, 1, 0, 0, 0, 0]' : 0.720864}
{'[0, 0, 4, 6, 5, 5, 0, 0, 13, 0, 11, 23, 0, 1, 0, 0, 0, 0]' : 0.720867}
{'[0, 0, 4, 6, 5, 5, 0, 0, 13, 0, 11, 23, 0, 1, 0, 0, 0, 0]' : 0.721021}
{'[0, 0, 4, 6, 5, 5, 0, 0, 13, 0, 11, 23, 0, 1, 0, 0, 0, 0]' : 0.721003}
{'[0, 0, 4, 6, 5, 5, 0, 0, 13, 0, 11, 23, 0, 1, 0, 0, 0, 0]' : 0.721069}
{'[0, 0, 4, 6, 5, 5, 0, 0, 13, 0, 11, 23, 0, 1, 0, 0, 0, 0]' : 0.721491}
{'[0, 0, 4, 6, 5, 5, 0, 0, 13, 0, 11, 23, 0, 1, 0, 0, 0, 0]' : 0.721481}
{'[0, 0, 4, 6, 5, 5, 0, 0, 13, 0, 11, 23, 0, 1, 0, 0, 0, 0]' : 0.72148}
{'[0, 0, 4, 6, 5, 5, 0, 0, 13, 0, 11, 23, 0, 1, 0, 0, 0, 0]' : 0.721537}
{'[0, 0, 4, 6, 5, 5, 0, 0, 13, 0, 11, 23, 0, 1, 0, 0, 0, 0]' : 0.721478}
{'[0, 0, 4, 6, 5, 5, 0, 0, 13, 0, 11, 23, 0, 1, 0, 0, 0, 0]' : 0.721578}
{'[0, 0, 4, 6, 5, 5, 0, 0, 13, 0, 11, 23, 0, 1, 0, 0, 0, 0]' : 0.721468}
{'[0, 0, 4, 6, 5, 5, 0, 0, 13, 0, 11, 23, 0, 1, 0, 0, 0, 0]' : 0.721513}
{'[0, 0, 4, 6, 5, 5, 0, 0, 13, 0, 11, 23, 0, 1, 0, 0, 0, 0]' : 0.721259}
{'[0, 0, 4, 6, 5, 5, 0, 0, 13, 0, 11, 23, 0, 1, 0, 0, 0, 0]' : 0.720884}
{'[0, 0, 4, 6, 5, 5, 0, 0, 13, 0, 11, 23, 0, 1, 0, 0, 0, 0]' : 0.721015}
{'[0, 0, 4, 6, 5, 5, 0, 0, 13, 0, 11, 23, 0, 1, 0, 0, 0, 0]' : 0.721593}
{'[0, 0, 4, 6, 5, 5, 0, 0, 13, 0, 11, 23, 0, 1, 0, 0, 0, 0]' : 0.721571}
{'[0, 0, 4, 6, 5, 5, 0, 0, 13, 0, 11, 23, 0, 1, 0, 0, 0, 0]' : 0.721616}
{'[0, 0, 4, 6, 5, 5, 0, 0, 13, 0, 11, 23, 0, 1, 0, 0, 0, 0]' : 0.721567}
{'[0, 0, 4, 6, 5, 5, 0, 0, 13, 0, 11, 23, 0, 1, 0, 0, 0, 0]' : 0.721418}
{'[0, 0, 4, 6, 5, 5, 0, 0, 13, 0, 11, 23, 0, 1, 0, 0, 0, 0]' : 0.721138}
{'[0, 0, 4, 6, 5, 5, 0, 0, 13, 0, 11, 23, 0, 1, 0, 0, 0, 0]' : 0.723825}
{'[0, 0, 4, 6, 5, 5, 0, 0, 13, 0, 11, 23, 0, 1, 0, 0, 0, 0]' : 0.72285}
{'[0, 0, 4, 6, 5, 5, 0, 0, 13, 0, 11, 23, 0, 1, 0, 0, 0, 0]' : 0.721369}
{'[0, 0, 4, 6, 5, 5, 0, 0, 13, 0, 11, 23, 0, 1, 0, 0, 0, 0]' : 0.722272}
{'[0, 0, 4, 6, 5, 5, 0, 0, 13, 0, 11, 23, 0, 1, 0, 0, 0, 0]' : 0.721789}

out:
 ["{'[0, 0, 4, 6, 5, 5, 0, 0, 13, 0, 11, 23, 0, 1, 0, 0, 0, 0]' : 0.720867}", "{'[0, 0, 4, 6, 5, 5, 0, 0, 13, 0, 11, 23, 0, 1, 0, 0, 0, 0]' : 0.720958}", "{'[0, 0, 4, 6, 5, 5, 0, 0, 13, 0, 11, 23, 0, 1, 0, 0, 0, 0]' : 0.720858}", "{'[0, 0, 4, 6, 5, 5, 0, 0, 13, 0, 11, 23, 0, 1, 0, 0, 0, 0]' : 0.720864}", "{'[0, 0, 4, 6, 5, 5, 0, 0, 13, 0, 11, 23, 0, 1, 0, 0, 0, 0]' : 0.720867}", "{'[0, 0, 4, 6, 5, 5, 0, 0, 13, 0, 11, 23, 0, 1, 0, 0, 0, 0]' : 0.721021}", "{'[0, 0, 4, 6, 5, 5, 0, 0, 13, 0, 11, 23, 0, 1, 0, 0, 0, 0]' : 0.721003}", "{'[0, 0, 4, 6, 5, 5, 0, 0, 13, 0, 11, 23, 0, 1, 0, 0, 0, 0]' : 0.721069}", "{'[0, 0, 4, 6, 5, 5, 0, 0, 13, 0, 11, 23, 0, 1, 0, 0, 0, 0]' : 0.721491}", "{'[0, 0, 4, 6, 5, 5, 0, 0, 13, 0, 11, 23, 0, 1, 0, 0, 0, 0]' : 0.721481}", "{'[0, 0, 4, 6, 5, 5, 0, 0, 13, 0, 11, 23, 0, 1, 0, 0, 0, 0]' : 0.72148}", "{'[0, 0, 4, 6, 5, 5, 0, 0, 13, 0, 11, 23, 0, 1, 0, 0, 0, 0]' : 0.721537}", "{'[0, 0, 4, 6, 5, 5, 0, 0, 13, 0, 11, 23, 0, 1, 0, 0, 0, 0]' : 0.721478}", "{'[0, 0, 4, 6, 5, 5, 0, 0, 13, 0, 11, 23, 0, 1, 0, 0, 0, 0]' : 0.721578}", "{'[0, 0, 4, 6, 5, 5, 0, 0, 13, 0, 11, 23, 0, 1, 0, 0, 0, 0]' : 0.721468}", "{'[0, 0, 4, 6, 5, 5, 0, 0, 13, 0, 11, 23, 0, 1, 0, 0, 0, 0]' : 0.721513}", "{'[0, 0, 4, 6, 5, 5, 0, 0, 13, 0, 11, 23, 0, 1, 0, 0, 0, 0]' : 0.721259}", "{'[0, 0, 4, 6, 5, 5, 0, 0, 13, 0, 11, 23, 0, 1, 0, 0, 0, 0]' : 0.720884}", "{'[0, 0, 4, 6, 5, 5, 0, 0, 13, 0, 11, 23, 0, 1, 0, 0, 0, 0]' : 0.721015}", "{'[0, 0, 4, 6, 5, 5, 0, 0, 13, 0, 11, 23, 0, 1, 0, 0, 0, 0]' : 0.721593}", "{'[0, 0, 4, 6, 5, 5, 0, 0, 13, 0, 11, 23, 0, 1, 0, 0, 0, 0]' : 0.721571}", "{'[0, 0, 4, 6, 5, 5, 0, 0, 13, 0, 11, 23, 0, 1, 0, 0, 0, 0]' : 0.721616}", "{'[0, 0, 4, 6, 5, 5, 0, 0, 13, 0, 11, 23, 0, 1, 0, 0, 0, 0]' : 0.721567}", "{'[0, 0, 4, 6, 5, 5, 0, 0, 13, 0, 11, 23, 0, 1, 0, 0, 0, 0]' : 0.721418}", "{'[0, 0, 4, 6, 5, 5, 0, 0, 13, 0, 11, 23, 0, 1, 0, 0, 0, 0]' : 0.721138}", "{'[0, 0, 4, 6, 5, 5, 0, 0, 13, 0, 11, 23, 0, 1, 0, 0, 0, 0]' : 0.723825}", "{'[0, 0, 4, 6, 5, 5, 0, 0, 13, 0, 11, 23, 0, 1, 0, 0, 0, 0]' : 0.72285}", "{'[0, 0, 4, 6, 5, 5, 0, 0, 13, 0, 11, 23, 0, 1, 0, 0, 0, 0]' : 0.721369}", "{'[0, 0, 4, 6, 5, 5, 0, 0, 13, 0, 11, 23, 0, 1, 0, 0, 0, 0]' : 0.722272}", "{'[0, 0, 4, 6, 5, 5, 0, 0, 13, 0, 11, 23, 0, 1, 0, 0, 0, 0]' : 0.721789}"]
returning from 'run': {'[0, 0, 4, 6, 5, 5, 0, 0, 13, 0, 11, 23, 0, 1, 0, 0, 0, 0]': ([0.720867, 0.720958, 0.720858, 0.720864, 0.720867, 0.721021, 0.721003, 0.721069, 0.721491, 0.721481, 0.72148, 0.721537, 0.721478, 0.721578, 0.721468, 0.721513, 0.721259, 0.720884, 0.721015, 0.721593, 0.721571, 0.721616, 0.721567, 0.721418, 0.721138, 0.723825, 0.72285, 0.721369, 0.722272, 0.721789], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 4, 6, 5, 5, 0, 0, 13, 0, 11, 23, 0, 1, 0, 0, 0, 0]': ([0.720867, 0.720958, 0.720858, 0.720864, 0.720867, 0.721021, 0.721003, 0.721069, 0.721491, 0.721481, 0.72148, 0.721537, 0.721478, 0.721578, 0.721468, 0.721513, 0.721259, 0.720884, 0.721015, 0.721593, 0.721571, 0.721616, 0.721567, 0.721418, 0.721138, 0.723825, 0.72285, 0.721369, 0.722272, 0.721789], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	6
        Additions: 		1479
        Multiplications: 	666
        Divisions: 		0
        Logical: 		0
        Reads: 			2985
        Writes: 		547
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest27.exe __orio_perftest27.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest27.exe  
Program Test Output: 
{'[2, 4, 1, 6, 4, 0, 1, 0, 15, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.275879}
{'[2, 4, 1, 6, 4, 0, 1, 0, 15, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.27574}
{'[2, 4, 1, 6, 4, 0, 1, 0, 15, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.275865}
{'[2, 4, 1, 6, 4, 0, 1, 0, 15, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.275957}
{'[2, 4, 1, 6, 4, 0, 1, 0, 15, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.275781}
{'[2, 4, 1, 6, 4, 0, 1, 0, 15, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.275901}
{'[2, 4, 1, 6, 4, 0, 1, 0, 15, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.275987}
{'[2, 4, 1, 6, 4, 0, 1, 0, 15, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.276067}
{'[2, 4, 1, 6, 4, 0, 1, 0, 15, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.276009}
{'[2, 4, 1, 6, 4, 0, 1, 0, 15, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.276055}
{'[2, 4, 1, 6, 4, 0, 1, 0, 15, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.275644}
{'[2, 4, 1, 6, 4, 0, 1, 0, 15, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.275828}
{'[2, 4, 1, 6, 4, 0, 1, 0, 15, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.27587}
{'[2, 4, 1, 6, 4, 0, 1, 0, 15, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.291488}
{'[2, 4, 1, 6, 4, 0, 1, 0, 15, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.276141}
{'[2, 4, 1, 6, 4, 0, 1, 0, 15, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.276463}
{'[2, 4, 1, 6, 4, 0, 1, 0, 15, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.2758}
{'[2, 4, 1, 6, 4, 0, 1, 0, 15, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.275724}
{'[2, 4, 1, 6, 4, 0, 1, 0, 15, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.275801}
{'[2, 4, 1, 6, 4, 0, 1, 0, 15, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.275901}
{'[2, 4, 1, 6, 4, 0, 1, 0, 15, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.275688}
{'[2, 4, 1, 6, 4, 0, 1, 0, 15, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.275778}
{'[2, 4, 1, 6, 4, 0, 1, 0, 15, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.280939}
{'[2, 4, 1, 6, 4, 0, 1, 0, 15, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.275925}
{'[2, 4, 1, 6, 4, 0, 1, 0, 15, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.275833}
{'[2, 4, 1, 6, 4, 0, 1, 0, 15, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.276088}
{'[2, 4, 1, 6, 4, 0, 1, 0, 15, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.276104}
{'[2, 4, 1, 6, 4, 0, 1, 0, 15, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.276116}
{'[2, 4, 1, 6, 4, 0, 1, 0, 15, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.275973}
{'[2, 4, 1, 6, 4, 0, 1, 0, 15, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.27602}

out:
 ["{'[2, 4, 1, 6, 4, 0, 1, 0, 15, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.275879}", "{'[2, 4, 1, 6, 4, 0, 1, 0, 15, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.27574}", "{'[2, 4, 1, 6, 4, 0, 1, 0, 15, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.275865}", "{'[2, 4, 1, 6, 4, 0, 1, 0, 15, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.275957}", "{'[2, 4, 1, 6, 4, 0, 1, 0, 15, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.275781}", "{'[2, 4, 1, 6, 4, 0, 1, 0, 15, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.275901}", "{'[2, 4, 1, 6, 4, 0, 1, 0, 15, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.275987}", "{'[2, 4, 1, 6, 4, 0, 1, 0, 15, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.276067}", "{'[2, 4, 1, 6, 4, 0, 1, 0, 15, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.276009}", "{'[2, 4, 1, 6, 4, 0, 1, 0, 15, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.276055}", "{'[2, 4, 1, 6, 4, 0, 1, 0, 15, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.275644}", "{'[2, 4, 1, 6, 4, 0, 1, 0, 15, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.275828}", "{'[2, 4, 1, 6, 4, 0, 1, 0, 15, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.27587}", "{'[2, 4, 1, 6, 4, 0, 1, 0, 15, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.291488}", "{'[2, 4, 1, 6, 4, 0, 1, 0, 15, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.276141}", "{'[2, 4, 1, 6, 4, 0, 1, 0, 15, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.276463}", "{'[2, 4, 1, 6, 4, 0, 1, 0, 15, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.2758}", "{'[2, 4, 1, 6, 4, 0, 1, 0, 15, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.275724}", "{'[2, 4, 1, 6, 4, 0, 1, 0, 15, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.275801}", "{'[2, 4, 1, 6, 4, 0, 1, 0, 15, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.275901}", "{'[2, 4, 1, 6, 4, 0, 1, 0, 15, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.275688}", "{'[2, 4, 1, 6, 4, 0, 1, 0, 15, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.275778}", "{'[2, 4, 1, 6, 4, 0, 1, 0, 15, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.280939}", "{'[2, 4, 1, 6, 4, 0, 1, 0, 15, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.275925}", "{'[2, 4, 1, 6, 4, 0, 1, 0, 15, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.275833}", "{'[2, 4, 1, 6, 4, 0, 1, 0, 15, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.276088}", "{'[2, 4, 1, 6, 4, 0, 1, 0, 15, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.276104}", "{'[2, 4, 1, 6, 4, 0, 1, 0, 15, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.276116}", "{'[2, 4, 1, 6, 4, 0, 1, 0, 15, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.275973}", "{'[2, 4, 1, 6, 4, 0, 1, 0, 15, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.27602}"]
returning from 'run': {'[2, 4, 1, 6, 4, 0, 1, 0, 15, 0, 29, 27, 1, 1, 0, 1, 1, 1]': ([0.275879, 0.27574, 0.275865, 0.275957, 0.275781, 0.275901, 0.275987, 0.276067, 0.276009, 0.276055, 0.275644, 0.275828, 0.27587, 0.291488, 0.276141, 0.276463, 0.2758, 0.275724, 0.275801, 0.275901, 0.275688, 0.275778, 0.280939, 0.275925, 0.275833, 0.276088, 0.276104, 0.276116, 0.275973, 0.27602], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 4, 1, 6, 4, 0, 1, 0, 15, 0, 29, 27, 1, 1, 0, 1, 1, 1]': ([0.275879, 0.27574, 0.275865, 0.275957, 0.275781, 0.275901, 0.275987, 0.276067, 0.276009, 0.276055, 0.275644, 0.275828, 0.27587, 0.291488, 0.276141, 0.276463, 0.2758, 0.275724, 0.275801, 0.275901, 0.275688, 0.275778, 0.280939, 0.275925, 0.275833, 0.276088, 0.276104, 0.276116, 0.275973, 0.27602], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	91
        Max loop nest depth: 	4
        Additions: 		7506
        Multiplications: 	2912
        Divisions: 		0
        Logical: 		0
        Reads: 			12869
        Writes: 		1894
        Comparisons:		91
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest28.exe __orio_perftest28.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest28.exe  
Program Test Output: 
{'[0, 4, 6, 3, 0, 4, 1, 0, 15, 24, 21, 0, 0, 0, 2, 1, 1, 0]' : 0.720478}
{'[0, 4, 6, 3, 0, 4, 1, 0, 15, 24, 21, 0, 0, 0, 2, 1, 1, 0]' : 0.720631}
{'[0, 4, 6, 3, 0, 4, 1, 0, 15, 24, 21, 0, 0, 0, 2, 1, 1, 0]' : 0.722024}
{'[0, 4, 6, 3, 0, 4, 1, 0, 15, 24, 21, 0, 0, 0, 2, 1, 1, 0]' : 0.720713}
{'[0, 4, 6, 3, 0, 4, 1, 0, 15, 24, 21, 0, 0, 0, 2, 1, 1, 0]' : 0.720807}
{'[0, 4, 6, 3, 0, 4, 1, 0, 15, 24, 21, 0, 0, 0, 2, 1, 1, 0]' : 0.720316}
{'[0, 4, 6, 3, 0, 4, 1, 0, 15, 24, 21, 0, 0, 0, 2, 1, 1, 0]' : 0.720208}
{'[0, 4, 6, 3, 0, 4, 1, 0, 15, 24, 21, 0, 0, 0, 2, 1, 1, 0]' : 0.720426}
{'[0, 4, 6, 3, 0, 4, 1, 0, 15, 24, 21, 0, 0, 0, 2, 1, 1, 0]' : 0.720342}
{'[0, 4, 6, 3, 0, 4, 1, 0, 15, 24, 21, 0, 0, 0, 2, 1, 1, 0]' : 0.720543}
{'[0, 4, 6, 3, 0, 4, 1, 0, 15, 24, 21, 0, 0, 0, 2, 1, 1, 0]' : 0.722529}
{'[0, 4, 6, 3, 0, 4, 1, 0, 15, 24, 21, 0, 0, 0, 2, 1, 1, 0]' : 0.720285}
{'[0, 4, 6, 3, 0, 4, 1, 0, 15, 24, 21, 0, 0, 0, 2, 1, 1, 0]' : 0.720187}
{'[0, 4, 6, 3, 0, 4, 1, 0, 15, 24, 21, 0, 0, 0, 2, 1, 1, 0]' : 0.720585}
{'[0, 4, 6, 3, 0, 4, 1, 0, 15, 24, 21, 0, 0, 0, 2, 1, 1, 0]' : 0.720179}
{'[0, 4, 6, 3, 0, 4, 1, 0, 15, 24, 21, 0, 0, 0, 2, 1, 1, 0]' : 0.720383}
{'[0, 4, 6, 3, 0, 4, 1, 0, 15, 24, 21, 0, 0, 0, 2, 1, 1, 0]' : 0.720385}
{'[0, 4, 6, 3, 0, 4, 1, 0, 15, 24, 21, 0, 0, 0, 2, 1, 1, 0]' : 0.721663}
{'[0, 4, 6, 3, 0, 4, 1, 0, 15, 24, 21, 0, 0, 0, 2, 1, 1, 0]' : 0.720348}
{'[0, 4, 6, 3, 0, 4, 1, 0, 15, 24, 21, 0, 0, 0, 2, 1, 1, 0]' : 0.719855}
{'[0, 4, 6, 3, 0, 4, 1, 0, 15, 24, 21, 0, 0, 0, 2, 1, 1, 0]' : 0.720112}
{'[0, 4, 6, 3, 0, 4, 1, 0, 15, 24, 21, 0, 0, 0, 2, 1, 1, 0]' : 0.72018}
{'[0, 4, 6, 3, 0, 4, 1, 0, 15, 24, 21, 0, 0, 0, 2, 1, 1, 0]' : 0.719999}
{'[0, 4, 6, 3, 0, 4, 1, 0, 15, 24, 21, 0, 0, 0, 2, 1, 1, 0]' : 0.720109}
{'[0, 4, 6, 3, 0, 4, 1, 0, 15, 24, 21, 0, 0, 0, 2, 1, 1, 0]' : 0.720632}
{'[0, 4, 6, 3, 0, 4, 1, 0, 15, 24, 21, 0, 0, 0, 2, 1, 1, 0]' : 0.719998}
{'[0, 4, 6, 3, 0, 4, 1, 0, 15, 24, 21, 0, 0, 0, 2, 1, 1, 0]' : 0.720233}
{'[0, 4, 6, 3, 0, 4, 1, 0, 15, 24, 21, 0, 0, 0, 2, 1, 1, 0]' : 0.720525}
{'[0, 4, 6, 3, 0, 4, 1, 0, 15, 24, 21, 0, 0, 0, 2, 1, 1, 0]' : 0.720061}
{'[0, 4, 6, 3, 0, 4, 1, 0, 15, 24, 21, 0, 0, 0, 2, 1, 1, 0]' : 0.720224}

out:
 ["{'[0, 4, 6, 3, 0, 4, 1, 0, 15, 24, 21, 0, 0, 0, 2, 1, 1, 0]' : 0.720478}", "{'[0, 4, 6, 3, 0, 4, 1, 0, 15, 24, 21, 0, 0, 0, 2, 1, 1, 0]' : 0.720631}", "{'[0, 4, 6, 3, 0, 4, 1, 0, 15, 24, 21, 0, 0, 0, 2, 1, 1, 0]' : 0.722024}", "{'[0, 4, 6, 3, 0, 4, 1, 0, 15, 24, 21, 0, 0, 0, 2, 1, 1, 0]' : 0.720713}", "{'[0, 4, 6, 3, 0, 4, 1, 0, 15, 24, 21, 0, 0, 0, 2, 1, 1, 0]' : 0.720807}", "{'[0, 4, 6, 3, 0, 4, 1, 0, 15, 24, 21, 0, 0, 0, 2, 1, 1, 0]' : 0.720316}", "{'[0, 4, 6, 3, 0, 4, 1, 0, 15, 24, 21, 0, 0, 0, 2, 1, 1, 0]' : 0.720208}", "{'[0, 4, 6, 3, 0, 4, 1, 0, 15, 24, 21, 0, 0, 0, 2, 1, 1, 0]' : 0.720426}", "{'[0, 4, 6, 3, 0, 4, 1, 0, 15, 24, 21, 0, 0, 0, 2, 1, 1, 0]' : 0.720342}", "{'[0, 4, 6, 3, 0, 4, 1, 0, 15, 24, 21, 0, 0, 0, 2, 1, 1, 0]' : 0.720543}", "{'[0, 4, 6, 3, 0, 4, 1, 0, 15, 24, 21, 0, 0, 0, 2, 1, 1, 0]' : 0.722529}", "{'[0, 4, 6, 3, 0, 4, 1, 0, 15, 24, 21, 0, 0, 0, 2, 1, 1, 0]' : 0.720285}", "{'[0, 4, 6, 3, 0, 4, 1, 0, 15, 24, 21, 0, 0, 0, 2, 1, 1, 0]' : 0.720187}", "{'[0, 4, 6, 3, 0, 4, 1, 0, 15, 24, 21, 0, 0, 0, 2, 1, 1, 0]' : 0.720585}", "{'[0, 4, 6, 3, 0, 4, 1, 0, 15, 24, 21, 0, 0, 0, 2, 1, 1, 0]' : 0.720179}", "{'[0, 4, 6, 3, 0, 4, 1, 0, 15, 24, 21, 0, 0, 0, 2, 1, 1, 0]' : 0.720383}", "{'[0, 4, 6, 3, 0, 4, 1, 0, 15, 24, 21, 0, 0, 0, 2, 1, 1, 0]' : 0.720385}", "{'[0, 4, 6, 3, 0, 4, 1, 0, 15, 24, 21, 0, 0, 0, 2, 1, 1, 0]' : 0.721663}", "{'[0, 4, 6, 3, 0, 4, 1, 0, 15, 24, 21, 0, 0, 0, 2, 1, 1, 0]' : 0.720348}", "{'[0, 4, 6, 3, 0, 4, 1, 0, 15, 24, 21, 0, 0, 0, 2, 1, 1, 0]' : 0.719855}", "{'[0, 4, 6, 3, 0, 4, 1, 0, 15, 24, 21, 0, 0, 0, 2, 1, 1, 0]' : 0.720112}", "{'[0, 4, 6, 3, 0, 4, 1, 0, 15, 24, 21, 0, 0, 0, 2, 1, 1, 0]' : 0.72018}", "{'[0, 4, 6, 3, 0, 4, 1, 0, 15, 24, 21, 0, 0, 0, 2, 1, 1, 0]' : 0.719999}", "{'[0, 4, 6, 3, 0, 4, 1, 0, 15, 24, 21, 0, 0, 0, 2, 1, 1, 0]' : 0.720109}", "{'[0, 4, 6, 3, 0, 4, 1, 0, 15, 24, 21, 0, 0, 0, 2, 1, 1, 0]' : 0.720632}", "{'[0, 4, 6, 3, 0, 4, 1, 0, 15, 24, 21, 0, 0, 0, 2, 1, 1, 0]' : 0.719998}", "{'[0, 4, 6, 3, 0, 4, 1, 0, 15, 24, 21, 0, 0, 0, 2, 1, 1, 0]' : 0.720233}", "{'[0, 4, 6, 3, 0, 4, 1, 0, 15, 24, 21, 0, 0, 0, 2, 1, 1, 0]' : 0.720525}", "{'[0, 4, 6, 3, 0, 4, 1, 0, 15, 24, 21, 0, 0, 0, 2, 1, 1, 0]' : 0.720061}", "{'[0, 4, 6, 3, 0, 4, 1, 0, 15, 24, 21, 0, 0, 0, 2, 1, 1, 0]' : 0.720224}"]
returning from 'run': {'[0, 4, 6, 3, 0, 4, 1, 0, 15, 24, 21, 0, 0, 0, 2, 1, 1, 0]': ([0.720478, 0.720631, 0.722024, 0.720713, 0.720807, 0.720316, 0.720208, 0.720426, 0.720342, 0.720543, 0.722529, 0.720285, 0.720187, 0.720585, 0.720179, 0.720383, 0.720385, 0.721663, 0.720348, 0.719855, 0.720112, 0.72018, 0.719999, 0.720109, 0.720632, 0.719998, 0.720233, 0.720525, 0.720061, 0.720224], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 4, 6, 3, 0, 4, 1, 0, 15, 24, 21, 0, 0, 0, 2, 1, 1, 0]': ([0.720478, 0.720631, 0.722024, 0.720713, 0.720807, 0.720316, 0.720208, 0.720426, 0.720342, 0.720543, 0.722529, 0.720285, 0.720187, 0.720585, 0.720179, 0.720383, 0.720385, 0.721663, 0.720348, 0.719855, 0.720112, 0.72018, 0.719999, 0.720109, 0.720632, 0.719998, 0.720233, 0.720525, 0.720061, 0.720224], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	71
        Max loop nest depth: 	5
        Additions: 		3021
        Multiplications: 	1064
        Divisions: 		0
        Logical: 		0
        Reads: 			6333
        Writes: 		1367
        Comparisons:		71
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest29.exe __orio_perftest29.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest29.exe  
Program Test Output: 
{'[6, 4, 1, 0, 0, 1, 0, 0, 14, 26, 0, 8, 0, 0, 1, 1, 0, 0]' : 0.346131}
{'[6, 4, 1, 0, 0, 1, 0, 0, 14, 26, 0, 8, 0, 0, 1, 1, 0, 0]' : 0.346675}
{'[6, 4, 1, 0, 0, 1, 0, 0, 14, 26, 0, 8, 0, 0, 1, 1, 0, 0]' : 0.351825}
{'[6, 4, 1, 0, 0, 1, 0, 0, 14, 26, 0, 8, 0, 0, 1, 1, 0, 0]' : 0.346675}
{'[6, 4, 1, 0, 0, 1, 0, 0, 14, 26, 0, 8, 0, 0, 1, 1, 0, 0]' : 0.346777}
{'[6, 4, 1, 0, 0, 1, 0, 0, 14, 26, 0, 8, 0, 0, 1, 1, 0, 0]' : 0.352404}
{'[6, 4, 1, 0, 0, 1, 0, 0, 14, 26, 0, 8, 0, 0, 1, 1, 0, 0]' : 0.346262}
{'[6, 4, 1, 0, 0, 1, 0, 0, 14, 26, 0, 8, 0, 0, 1, 1, 0, 0]' : 0.349366}
{'[6, 4, 1, 0, 0, 1, 0, 0, 14, 26, 0, 8, 0, 0, 1, 1, 0, 0]' : 0.349692}
{'[6, 4, 1, 0, 0, 1, 0, 0, 14, 26, 0, 8, 0, 0, 1, 1, 0, 0]' : 0.346584}
{'[6, 4, 1, 0, 0, 1, 0, 0, 14, 26, 0, 8, 0, 0, 1, 1, 0, 0]' : 0.353361}
{'[6, 4, 1, 0, 0, 1, 0, 0, 14, 26, 0, 8, 0, 0, 1, 1, 0, 0]' : 0.344742}
{'[6, 4, 1, 0, 0, 1, 0, 0, 14, 26, 0, 8, 0, 0, 1, 1, 0, 0]' : 0.346213}
{'[6, 4, 1, 0, 0, 1, 0, 0, 14, 26, 0, 8, 0, 0, 1, 1, 0, 0]' : 0.352203}
{'[6, 4, 1, 0, 0, 1, 0, 0, 14, 26, 0, 8, 0, 0, 1, 1, 0, 0]' : 0.34479}
{'[6, 4, 1, 0, 0, 1, 0, 0, 14, 26, 0, 8, 0, 0, 1, 1, 0, 0]' : 0.345818}
{'[6, 4, 1, 0, 0, 1, 0, 0, 14, 26, 0, 8, 0, 0, 1, 1, 0, 0]' : 0.351884}
{'[6, 4, 1, 0, 0, 1, 0, 0, 14, 26, 0, 8, 0, 0, 1, 1, 0, 0]' : 0.345507}
{'[6, 4, 1, 0, 0, 1, 0, 0, 14, 26, 0, 8, 0, 0, 1, 1, 0, 0]' : 0.367851}
{'[6, 4, 1, 0, 0, 1, 0, 0, 14, 26, 0, 8, 0, 0, 1, 1, 0, 0]' : 0.347139}
{'[6, 4, 1, 0, 0, 1, 0, 0, 14, 26, 0, 8, 0, 0, 1, 1, 0, 0]' : 0.346839}
{'[6, 4, 1, 0, 0, 1, 0, 0, 14, 26, 0, 8, 0, 0, 1, 1, 0, 0]' : 0.345859}
{'[6, 4, 1, 0, 0, 1, 0, 0, 14, 26, 0, 8, 0, 0, 1, 1, 0, 0]' : 0.346861}
{'[6, 4, 1, 0, 0, 1, 0, 0, 14, 26, 0, 8, 0, 0, 1, 1, 0, 0]' : 0.345406}
{'[6, 4, 1, 0, 0, 1, 0, 0, 14, 26, 0, 8, 0, 0, 1, 1, 0, 0]' : 0.345198}
{'[6, 4, 1, 0, 0, 1, 0, 0, 14, 26, 0, 8, 0, 0, 1, 1, 0, 0]' : 0.345932}
{'[6, 4, 1, 0, 0, 1, 0, 0, 14, 26, 0, 8, 0, 0, 1, 1, 0, 0]' : 0.34594}
{'[6, 4, 1, 0, 0, 1, 0, 0, 14, 26, 0, 8, 0, 0, 1, 1, 0, 0]' : 0.346601}
{'[6, 4, 1, 0, 0, 1, 0, 0, 14, 26, 0, 8, 0, 0, 1, 1, 0, 0]' : 0.344824}
{'[6, 4, 1, 0, 0, 1, 0, 0, 14, 26, 0, 8, 0, 0, 1, 1, 0, 0]' : 0.345574}

out:
 ["{'[6, 4, 1, 0, 0, 1, 0, 0, 14, 26, 0, 8, 0, 0, 1, 1, 0, 0]' : 0.346131}", "{'[6, 4, 1, 0, 0, 1, 0, 0, 14, 26, 0, 8, 0, 0, 1, 1, 0, 0]' : 0.346675}", "{'[6, 4, 1, 0, 0, 1, 0, 0, 14, 26, 0, 8, 0, 0, 1, 1, 0, 0]' : 0.351825}", "{'[6, 4, 1, 0, 0, 1, 0, 0, 14, 26, 0, 8, 0, 0, 1, 1, 0, 0]' : 0.346675}", "{'[6, 4, 1, 0, 0, 1, 0, 0, 14, 26, 0, 8, 0, 0, 1, 1, 0, 0]' : 0.346777}", "{'[6, 4, 1, 0, 0, 1, 0, 0, 14, 26, 0, 8, 0, 0, 1, 1, 0, 0]' : 0.352404}", "{'[6, 4, 1, 0, 0, 1, 0, 0, 14, 26, 0, 8, 0, 0, 1, 1, 0, 0]' : 0.346262}", "{'[6, 4, 1, 0, 0, 1, 0, 0, 14, 26, 0, 8, 0, 0, 1, 1, 0, 0]' : 0.349366}", "{'[6, 4, 1, 0, 0, 1, 0, 0, 14, 26, 0, 8, 0, 0, 1, 1, 0, 0]' : 0.349692}", "{'[6, 4, 1, 0, 0, 1, 0, 0, 14, 26, 0, 8, 0, 0, 1, 1, 0, 0]' : 0.346584}", "{'[6, 4, 1, 0, 0, 1, 0, 0, 14, 26, 0, 8, 0, 0, 1, 1, 0, 0]' : 0.353361}", "{'[6, 4, 1, 0, 0, 1, 0, 0, 14, 26, 0, 8, 0, 0, 1, 1, 0, 0]' : 0.344742}", "{'[6, 4, 1, 0, 0, 1, 0, 0, 14, 26, 0, 8, 0, 0, 1, 1, 0, 0]' : 0.346213}", "{'[6, 4, 1, 0, 0, 1, 0, 0, 14, 26, 0, 8, 0, 0, 1, 1, 0, 0]' : 0.352203}", "{'[6, 4, 1, 0, 0, 1, 0, 0, 14, 26, 0, 8, 0, 0, 1, 1, 0, 0]' : 0.34479}", "{'[6, 4, 1, 0, 0, 1, 0, 0, 14, 26, 0, 8, 0, 0, 1, 1, 0, 0]' : 0.345818}", "{'[6, 4, 1, 0, 0, 1, 0, 0, 14, 26, 0, 8, 0, 0, 1, 1, 0, 0]' : 0.351884}", "{'[6, 4, 1, 0, 0, 1, 0, 0, 14, 26, 0, 8, 0, 0, 1, 1, 0, 0]' : 0.345507}", "{'[6, 4, 1, 0, 0, 1, 0, 0, 14, 26, 0, 8, 0, 0, 1, 1, 0, 0]' : 0.367851}", "{'[6, 4, 1, 0, 0, 1, 0, 0, 14, 26, 0, 8, 0, 0, 1, 1, 0, 0]' : 0.347139}", "{'[6, 4, 1, 0, 0, 1, 0, 0, 14, 26, 0, 8, 0, 0, 1, 1, 0, 0]' : 0.346839}", "{'[6, 4, 1, 0, 0, 1, 0, 0, 14, 26, 0, 8, 0, 0, 1, 1, 0, 0]' : 0.345859}", "{'[6, 4, 1, 0, 0, 1, 0, 0, 14, 26, 0, 8, 0, 0, 1, 1, 0, 0]' : 0.346861}", "{'[6, 4, 1, 0, 0, 1, 0, 0, 14, 26, 0, 8, 0, 0, 1, 1, 0, 0]' : 0.345406}", "{'[6, 4, 1, 0, 0, 1, 0, 0, 14, 26, 0, 8, 0, 0, 1, 1, 0, 0]' : 0.345198}", "{'[6, 4, 1, 0, 0, 1, 0, 0, 14, 26, 0, 8, 0, 0, 1, 1, 0, 0]' : 0.345932}", "{'[6, 4, 1, 0, 0, 1, 0, 0, 14, 26, 0, 8, 0, 0, 1, 1, 0, 0]' : 0.34594}", "{'[6, 4, 1, 0, 0, 1, 0, 0, 14, 26, 0, 8, 0, 0, 1, 1, 0, 0]' : 0.346601}", "{'[6, 4, 1, 0, 0, 1, 0, 0, 14, 26, 0, 8, 0, 0, 1, 1, 0, 0]' : 0.344824}", "{'[6, 4, 1, 0, 0, 1, 0, 0, 14, 26, 0, 8, 0, 0, 1, 1, 0, 0]' : 0.345574}"]
returning from 'run': {'[6, 4, 1, 0, 0, 1, 0, 0, 14, 26, 0, 8, 0, 0, 1, 1, 0, 0]': ([0.346131, 0.346675, 0.351825, 0.346675, 0.346777, 0.352404, 0.346262, 0.349366, 0.349692, 0.346584, 0.353361, 0.344742, 0.346213, 0.352203, 0.34479, 0.345818, 0.351884, 0.345507, 0.367851, 0.347139, 0.346839, 0.345859, 0.346861, 0.345406, 0.345198, 0.345932, 0.34594, 0.346601, 0.344824, 0.345574], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 4, 1, 0, 0, 1, 0, 0, 14, 26, 0, 8, 0, 0, 1, 1, 0, 0]': ([0.346131, 0.346675, 0.351825, 0.346675, 0.346777, 0.352404, 0.346262, 0.349366, 0.349692, 0.346584, 0.353361, 0.344742, 0.346213, 0.352203, 0.34479, 0.345818, 0.351884, 0.345507, 0.367851, 0.347139, 0.346839, 0.345859, 0.346861, 0.345406, 0.345198, 0.345932, 0.34594, 0.346601, 0.344824, 0.345574], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = kkk
Code stats:
        Number of loops: 	44
        Max loop nest depth: 	5
        Additions: 		1279
        Multiplications: 	540
        Divisions: 		0
        Logical: 		0
        Reads: 			2670
        Writes: 		520
        Comparisons:		44
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest30.exe __orio_perftest30.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest30.exe  
Program Test Output: 
{'[1, 0, 5, 1, 6, 3, 1, 0, 21, 28, 7, 0, 0, 1, 0, 1, 1, 1]' : 0.728709}
{'[1, 0, 5, 1, 6, 3, 1, 0, 21, 28, 7, 0, 0, 1, 0, 1, 1, 1]' : 0.728808}
{'[1, 0, 5, 1, 6, 3, 1, 0, 21, 28, 7, 0, 0, 1, 0, 1, 1, 1]' : 0.729435}
{'[1, 0, 5, 1, 6, 3, 1, 0, 21, 28, 7, 0, 0, 1, 0, 1, 1, 1]' : 0.728357}
{'[1, 0, 5, 1, 6, 3, 1, 0, 21, 28, 7, 0, 0, 1, 0, 1, 1, 1]' : 0.728265}
{'[1, 0, 5, 1, 6, 3, 1, 0, 21, 28, 7, 0, 0, 1, 0, 1, 1, 1]' : 0.728375}
{'[1, 0, 5, 1, 6, 3, 1, 0, 21, 28, 7, 0, 0, 1, 0, 1, 1, 1]' : 0.728471}
{'[1, 0, 5, 1, 6, 3, 1, 0, 21, 28, 7, 0, 0, 1, 0, 1, 1, 1]' : 0.729565}
{'[1, 0, 5, 1, 6, 3, 1, 0, 21, 28, 7, 0, 0, 1, 0, 1, 1, 1]' : 0.728424}
{'[1, 0, 5, 1, 6, 3, 1, 0, 21, 28, 7, 0, 0, 1, 0, 1, 1, 1]' : 0.72837}
{'[1, 0, 5, 1, 6, 3, 1, 0, 21, 28, 7, 0, 0, 1, 0, 1, 1, 1]' : 0.728125}
{'[1, 0, 5, 1, 6, 3, 1, 0, 21, 28, 7, 0, 0, 1, 0, 1, 1, 1]' : 0.7284}
{'[1, 0, 5, 1, 6, 3, 1, 0, 21, 28, 7, 0, 0, 1, 0, 1, 1, 1]' : 0.728255}
{'[1, 0, 5, 1, 6, 3, 1, 0, 21, 28, 7, 0, 0, 1, 0, 1, 1, 1]' : 0.728679}
{'[1, 0, 5, 1, 6, 3, 1, 0, 21, 28, 7, 0, 0, 1, 0, 1, 1, 1]' : 0.728513}
{'[1, 0, 5, 1, 6, 3, 1, 0, 21, 28, 7, 0, 0, 1, 0, 1, 1, 1]' : 0.728708}
{'[1, 0, 5, 1, 6, 3, 1, 0, 21, 28, 7, 0, 0, 1, 0, 1, 1, 1]' : 0.728657}
{'[1, 0, 5, 1, 6, 3, 1, 0, 21, 28, 7, 0, 0, 1, 0, 1, 1, 1]' : 0.728311}
{'[1, 0, 5, 1, 6, 3, 1, 0, 21, 28, 7, 0, 0, 1, 0, 1, 1, 1]' : 0.728296}
{'[1, 0, 5, 1, 6, 3, 1, 0, 21, 28, 7, 0, 0, 1, 0, 1, 1, 1]' : 0.728367}
{'[1, 0, 5, 1, 6, 3, 1, 0, 21, 28, 7, 0, 0, 1, 0, 1, 1, 1]' : 0.72846}
{'[1, 0, 5, 1, 6, 3, 1, 0, 21, 28, 7, 0, 0, 1, 0, 1, 1, 1]' : 0.728359}
{'[1, 0, 5, 1, 6, 3, 1, 0, 21, 28, 7, 0, 0, 1, 0, 1, 1, 1]' : 0.728344}
{'[1, 0, 5, 1, 6, 3, 1, 0, 21, 28, 7, 0, 0, 1, 0, 1, 1, 1]' : 0.728324}
{'[1, 0, 5, 1, 6, 3, 1, 0, 21, 28, 7, 0, 0, 1, 0, 1, 1, 1]' : 0.728476}
{'[1, 0, 5, 1, 6, 3, 1, 0, 21, 28, 7, 0, 0, 1, 0, 1, 1, 1]' : 0.728515}
{'[1, 0, 5, 1, 6, 3, 1, 0, 21, 28, 7, 0, 0, 1, 0, 1, 1, 1]' : 0.728128}
{'[1, 0, 5, 1, 6, 3, 1, 0, 21, 28, 7, 0, 0, 1, 0, 1, 1, 1]' : 0.728397}
{'[1, 0, 5, 1, 6, 3, 1, 0, 21, 28, 7, 0, 0, 1, 0, 1, 1, 1]' : 0.728525}
{'[1, 0, 5, 1, 6, 3, 1, 0, 21, 28, 7, 0, 0, 1, 0, 1, 1, 1]' : 0.72852}

out:
 ["{'[1, 0, 5, 1, 6, 3, 1, 0, 21, 28, 7, 0, 0, 1, 0, 1, 1, 1]' : 0.728709}", "{'[1, 0, 5, 1, 6, 3, 1, 0, 21, 28, 7, 0, 0, 1, 0, 1, 1, 1]' : 0.728808}", "{'[1, 0, 5, 1, 6, 3, 1, 0, 21, 28, 7, 0, 0, 1, 0, 1, 1, 1]' : 0.729435}", "{'[1, 0, 5, 1, 6, 3, 1, 0, 21, 28, 7, 0, 0, 1, 0, 1, 1, 1]' : 0.728357}", "{'[1, 0, 5, 1, 6, 3, 1, 0, 21, 28, 7, 0, 0, 1, 0, 1, 1, 1]' : 0.728265}", "{'[1, 0, 5, 1, 6, 3, 1, 0, 21, 28, 7, 0, 0, 1, 0, 1, 1, 1]' : 0.728375}", "{'[1, 0, 5, 1, 6, 3, 1, 0, 21, 28, 7, 0, 0, 1, 0, 1, 1, 1]' : 0.728471}", "{'[1, 0, 5, 1, 6, 3, 1, 0, 21, 28, 7, 0, 0, 1, 0, 1, 1, 1]' : 0.729565}", "{'[1, 0, 5, 1, 6, 3, 1, 0, 21, 28, 7, 0, 0, 1, 0, 1, 1, 1]' : 0.728424}", "{'[1, 0, 5, 1, 6, 3, 1, 0, 21, 28, 7, 0, 0, 1, 0, 1, 1, 1]' : 0.72837}", "{'[1, 0, 5, 1, 6, 3, 1, 0, 21, 28, 7, 0, 0, 1, 0, 1, 1, 1]' : 0.728125}", "{'[1, 0, 5, 1, 6, 3, 1, 0, 21, 28, 7, 0, 0, 1, 0, 1, 1, 1]' : 0.7284}", "{'[1, 0, 5, 1, 6, 3, 1, 0, 21, 28, 7, 0, 0, 1, 0, 1, 1, 1]' : 0.728255}", "{'[1, 0, 5, 1, 6, 3, 1, 0, 21, 28, 7, 0, 0, 1, 0, 1, 1, 1]' : 0.728679}", "{'[1, 0, 5, 1, 6, 3, 1, 0, 21, 28, 7, 0, 0, 1, 0, 1, 1, 1]' : 0.728513}", "{'[1, 0, 5, 1, 6, 3, 1, 0, 21, 28, 7, 0, 0, 1, 0, 1, 1, 1]' : 0.728708}", "{'[1, 0, 5, 1, 6, 3, 1, 0, 21, 28, 7, 0, 0, 1, 0, 1, 1, 1]' : 0.728657}", "{'[1, 0, 5, 1, 6, 3, 1, 0, 21, 28, 7, 0, 0, 1, 0, 1, 1, 1]' : 0.728311}", "{'[1, 0, 5, 1, 6, 3, 1, 0, 21, 28, 7, 0, 0, 1, 0, 1, 1, 1]' : 0.728296}", "{'[1, 0, 5, 1, 6, 3, 1, 0, 21, 28, 7, 0, 0, 1, 0, 1, 1, 1]' : 0.728367}", "{'[1, 0, 5, 1, 6, 3, 1, 0, 21, 28, 7, 0, 0, 1, 0, 1, 1, 1]' : 0.72846}", "{'[1, 0, 5, 1, 6, 3, 1, 0, 21, 28, 7, 0, 0, 1, 0, 1, 1, 1]' : 0.728359}", "{'[1, 0, 5, 1, 6, 3, 1, 0, 21, 28, 7, 0, 0, 1, 0, 1, 1, 1]' : 0.728344}", "{'[1, 0, 5, 1, 6, 3, 1, 0, 21, 28, 7, 0, 0, 1, 0, 1, 1, 1]' : 0.728324}", "{'[1, 0, 5, 1, 6, 3, 1, 0, 21, 28, 7, 0, 0, 1, 0, 1, 1, 1]' : 0.728476}", "{'[1, 0, 5, 1, 6, 3, 1, 0, 21, 28, 7, 0, 0, 1, 0, 1, 1, 1]' : 0.728515}", "{'[1, 0, 5, 1, 6, 3, 1, 0, 21, 28, 7, 0, 0, 1, 0, 1, 1, 1]' : 0.728128}", "{'[1, 0, 5, 1, 6, 3, 1, 0, 21, 28, 7, 0, 0, 1, 0, 1, 1, 1]' : 0.728397}", "{'[1, 0, 5, 1, 6, 3, 1, 0, 21, 28, 7, 0, 0, 1, 0, 1, 1, 1]' : 0.728525}", "{'[1, 0, 5, 1, 6, 3, 1, 0, 21, 28, 7, 0, 0, 1, 0, 1, 1, 1]' : 0.72852}"]
returning from 'run': {'[1, 0, 5, 1, 6, 3, 1, 0, 21, 28, 7, 0, 0, 1, 0, 1, 1, 1]': ([0.728709, 0.728808, 0.729435, 0.728357, 0.728265, 0.728375, 0.728471, 0.729565, 0.728424, 0.72837, 0.728125, 0.7284, 0.728255, 0.728679, 0.728513, 0.728708, 0.728657, 0.728311, 0.728296, 0.728367, 0.72846, 0.728359, 0.728344, 0.728324, 0.728476, 0.728515, 0.728128, 0.728397, 0.728525, 0.72852], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 5, 1, 6, 3, 1, 0, 21, 28, 7, 0, 0, 1, 0, 1, 1, 1]': ([0.728709, 0.728808, 0.729435, 0.728357, 0.728265, 0.728375, 0.728471, 0.729565, 0.728424, 0.72837, 0.728125, 0.7284, 0.728255, 0.728679, 0.728513, 0.728708, 0.728657, 0.728311, 0.728296, 0.728367, 0.72846, 0.728359, 0.728344, 0.728324, 0.728476, 0.728515, 0.728128, 0.728397, 0.728525, 0.72852], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		297
        Multiplications: 	76
        Divisions: 		0
        Logical: 		0
        Reads: 			564
        Writes: 		74
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest31.exe __orio_perftest31.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest31.exe  
Program Test Output: 
{'[2, 3, 3, 4, 0, 0, 1, 1, 4, 0, 29, 28, 0, 1, 0, 0, 0, 0]' : 0.854198}
{'[2, 3, 3, 4, 0, 0, 1, 1, 4, 0, 29, 28, 0, 1, 0, 0, 0, 0]' : 0.853789}
{'[2, 3, 3, 4, 0, 0, 1, 1, 4, 0, 29, 28, 0, 1, 0, 0, 0, 0]' : 0.854584}
{'[2, 3, 3, 4, 0, 0, 1, 1, 4, 0, 29, 28, 0, 1, 0, 0, 0, 0]' : 0.853945}
{'[2, 3, 3, 4, 0, 0, 1, 1, 4, 0, 29, 28, 0, 1, 0, 0, 0, 0]' : 0.853753}
{'[2, 3, 3, 4, 0, 0, 1, 1, 4, 0, 29, 28, 0, 1, 0, 0, 0, 0]' : 0.860443}
{'[2, 3, 3, 4, 0, 0, 1, 1, 4, 0, 29, 28, 0, 1, 0, 0, 0, 0]' : 0.853673}
{'[2, 3, 3, 4, 0, 0, 1, 1, 4, 0, 29, 28, 0, 1, 0, 0, 0, 0]' : 0.853768}
{'[2, 3, 3, 4, 0, 0, 1, 1, 4, 0, 29, 28, 0, 1, 0, 0, 0, 0]' : 0.853199}
{'[2, 3, 3, 4, 0, 0, 1, 1, 4, 0, 29, 28, 0, 1, 0, 0, 0, 0]' : 0.854123}
{'[2, 3, 3, 4, 0, 0, 1, 1, 4, 0, 29, 28, 0, 1, 0, 0, 0, 0]' : 0.853345}
{'[2, 3, 3, 4, 0, 0, 1, 1, 4, 0, 29, 28, 0, 1, 0, 0, 0, 0]' : 0.853164}
{'[2, 3, 3, 4, 0, 0, 1, 1, 4, 0, 29, 28, 0, 1, 0, 0, 0, 0]' : 0.856654}
{'[2, 3, 3, 4, 0, 0, 1, 1, 4, 0, 29, 28, 0, 1, 0, 0, 0, 0]' : 0.85361}
{'[2, 3, 3, 4, 0, 0, 1, 1, 4, 0, 29, 28, 0, 1, 0, 0, 0, 0]' : 0.853663}
{'[2, 3, 3, 4, 0, 0, 1, 1, 4, 0, 29, 28, 0, 1, 0, 0, 0, 0]' : 0.853292}
{'[2, 3, 3, 4, 0, 0, 1, 1, 4, 0, 29, 28, 0, 1, 0, 0, 0, 0]' : 0.854017}
{'[2, 3, 3, 4, 0, 0, 1, 1, 4, 0, 29, 28, 0, 1, 0, 0, 0, 0]' : 0.853461}
{'[2, 3, 3, 4, 0, 0, 1, 1, 4, 0, 29, 28, 0, 1, 0, 0, 0, 0]' : 0.853537}
{'[2, 3, 3, 4, 0, 0, 1, 1, 4, 0, 29, 28, 0, 1, 0, 0, 0, 0]' : 0.853361}
{'[2, 3, 3, 4, 0, 0, 1, 1, 4, 0, 29, 28, 0, 1, 0, 0, 0, 0]' : 0.853251}
{'[2, 3, 3, 4, 0, 0, 1, 1, 4, 0, 29, 28, 0, 1, 0, 0, 0, 0]' : 0.852936}
{'[2, 3, 3, 4, 0, 0, 1, 1, 4, 0, 29, 28, 0, 1, 0, 0, 0, 0]' : 0.853563}
{'[2, 3, 3, 4, 0, 0, 1, 1, 4, 0, 29, 28, 0, 1, 0, 0, 0, 0]' : 0.853518}
{'[2, 3, 3, 4, 0, 0, 1, 1, 4, 0, 29, 28, 0, 1, 0, 0, 0, 0]' : 0.853386}
{'[2, 3, 3, 4, 0, 0, 1, 1, 4, 0, 29, 28, 0, 1, 0, 0, 0, 0]' : 0.853238}
{'[2, 3, 3, 4, 0, 0, 1, 1, 4, 0, 29, 28, 0, 1, 0, 0, 0, 0]' : 0.853429}
{'[2, 3, 3, 4, 0, 0, 1, 1, 4, 0, 29, 28, 0, 1, 0, 0, 0, 0]' : 0.853353}
{'[2, 3, 3, 4, 0, 0, 1, 1, 4, 0, 29, 28, 0, 1, 0, 0, 0, 0]' : 0.853509}
{'[2, 3, 3, 4, 0, 0, 1, 1, 4, 0, 29, 28, 0, 1, 0, 0, 0, 0]' : 0.85358}

out:
 ["{'[2, 3, 3, 4, 0, 0, 1, 1, 4, 0, 29, 28, 0, 1, 0, 0, 0, 0]' : 0.854198}", "{'[2, 3, 3, 4, 0, 0, 1, 1, 4, 0, 29, 28, 0, 1, 0, 0, 0, 0]' : 0.853789}", "{'[2, 3, 3, 4, 0, 0, 1, 1, 4, 0, 29, 28, 0, 1, 0, 0, 0, 0]' : 0.854584}", "{'[2, 3, 3, 4, 0, 0, 1, 1, 4, 0, 29, 28, 0, 1, 0, 0, 0, 0]' : 0.853945}", "{'[2, 3, 3, 4, 0, 0, 1, 1, 4, 0, 29, 28, 0, 1, 0, 0, 0, 0]' : 0.853753}", "{'[2, 3, 3, 4, 0, 0, 1, 1, 4, 0, 29, 28, 0, 1, 0, 0, 0, 0]' : 0.860443}", "{'[2, 3, 3, 4, 0, 0, 1, 1, 4, 0, 29, 28, 0, 1, 0, 0, 0, 0]' : 0.853673}", "{'[2, 3, 3, 4, 0, 0, 1, 1, 4, 0, 29, 28, 0, 1, 0, 0, 0, 0]' : 0.853768}", "{'[2, 3, 3, 4, 0, 0, 1, 1, 4, 0, 29, 28, 0, 1, 0, 0, 0, 0]' : 0.853199}", "{'[2, 3, 3, 4, 0, 0, 1, 1, 4, 0, 29, 28, 0, 1, 0, 0, 0, 0]' : 0.854123}", "{'[2, 3, 3, 4, 0, 0, 1, 1, 4, 0, 29, 28, 0, 1, 0, 0, 0, 0]' : 0.853345}", "{'[2, 3, 3, 4, 0, 0, 1, 1, 4, 0, 29, 28, 0, 1, 0, 0, 0, 0]' : 0.853164}", "{'[2, 3, 3, 4, 0, 0, 1, 1, 4, 0, 29, 28, 0, 1, 0, 0, 0, 0]' : 0.856654}", "{'[2, 3, 3, 4, 0, 0, 1, 1, 4, 0, 29, 28, 0, 1, 0, 0, 0, 0]' : 0.85361}", "{'[2, 3, 3, 4, 0, 0, 1, 1, 4, 0, 29, 28, 0, 1, 0, 0, 0, 0]' : 0.853663}", "{'[2, 3, 3, 4, 0, 0, 1, 1, 4, 0, 29, 28, 0, 1, 0, 0, 0, 0]' : 0.853292}", "{'[2, 3, 3, 4, 0, 0, 1, 1, 4, 0, 29, 28, 0, 1, 0, 0, 0, 0]' : 0.854017}", "{'[2, 3, 3, 4, 0, 0, 1, 1, 4, 0, 29, 28, 0, 1, 0, 0, 0, 0]' : 0.853461}", "{'[2, 3, 3, 4, 0, 0, 1, 1, 4, 0, 29, 28, 0, 1, 0, 0, 0, 0]' : 0.853537}", "{'[2, 3, 3, 4, 0, 0, 1, 1, 4, 0, 29, 28, 0, 1, 0, 0, 0, 0]' : 0.853361}", "{'[2, 3, 3, 4, 0, 0, 1, 1, 4, 0, 29, 28, 0, 1, 0, 0, 0, 0]' : 0.853251}", "{'[2, 3, 3, 4, 0, 0, 1, 1, 4, 0, 29, 28, 0, 1, 0, 0, 0, 0]' : 0.852936}", "{'[2, 3, 3, 4, 0, 0, 1, 1, 4, 0, 29, 28, 0, 1, 0, 0, 0, 0]' : 0.853563}", "{'[2, 3, 3, 4, 0, 0, 1, 1, 4, 0, 29, 28, 0, 1, 0, 0, 0, 0]' : 0.853518}", "{'[2, 3, 3, 4, 0, 0, 1, 1, 4, 0, 29, 28, 0, 1, 0, 0, 0, 0]' : 0.853386}", "{'[2, 3, 3, 4, 0, 0, 1, 1, 4, 0, 29, 28, 0, 1, 0, 0, 0, 0]' : 0.853238}", "{'[2, 3, 3, 4, 0, 0, 1, 1, 4, 0, 29, 28, 0, 1, 0, 0, 0, 0]' : 0.853429}", "{'[2, 3, 3, 4, 0, 0, 1, 1, 4, 0, 29, 28, 0, 1, 0, 0, 0, 0]' : 0.853353}", "{'[2, 3, 3, 4, 0, 0, 1, 1, 4, 0, 29, 28, 0, 1, 0, 0, 0, 0]' : 0.853509}", "{'[2, 3, 3, 4, 0, 0, 1, 1, 4, 0, 29, 28, 0, 1, 0, 0, 0, 0]' : 0.85358}"]
returning from 'run': {'[2, 3, 3, 4, 0, 0, 1, 1, 4, 0, 29, 28, 0, 1, 0, 0, 0, 0]': ([0.854198, 0.853789, 0.854584, 0.853945, 0.853753, 0.860443, 0.853673, 0.853768, 0.853199, 0.854123, 0.853345, 0.853164, 0.856654, 0.85361, 0.853663, 0.853292, 0.854017, 0.853461, 0.853537, 0.853361, 0.853251, 0.852936, 0.853563, 0.853518, 0.853386, 0.853238, 0.853429, 0.853353, 0.853509, 0.85358], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 3, 3, 4, 0, 0, 1, 1, 4, 0, 29, 28, 0, 1, 0, 0, 0, 0]': ([0.854198, 0.853789, 0.854584, 0.853945, 0.853753, 0.860443, 0.853673, 0.853768, 0.853199, 0.854123, 0.853345, 0.853164, 0.856654, 0.85361, 0.853663, 0.853292, 0.854017, 0.853461, 0.853537, 0.853361, 0.853251, 0.852936, 0.853563, 0.853518, 0.853386, 0.853238, 0.853429, 0.853353, 0.853509, 0.85358], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	6
        Additions: 		2503
        Multiplications: 	754
        Divisions: 		0
        Logical: 		0
        Reads: 			4024
        Writes: 		474
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest32.exe __orio_perftest32.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest32.exe  
Program Test Output: 
{'[5, 5, 5, 6, 0, 5, 0, 0, 29, 11, 0, 18, 0, 1, 0, 0, 1, 1]' : 0.33353}
{'[5, 5, 5, 6, 0, 5, 0, 0, 29, 11, 0, 18, 0, 1, 0, 0, 1, 1]' : 0.334472}
{'[5, 5, 5, 6, 0, 5, 0, 0, 29, 11, 0, 18, 0, 1, 0, 0, 1, 1]' : 0.334083}
{'[5, 5, 5, 6, 0, 5, 0, 0, 29, 11, 0, 18, 0, 1, 0, 0, 1, 1]' : 0.333735}
{'[5, 5, 5, 6, 0, 5, 0, 0, 29, 11, 0, 18, 0, 1, 0, 0, 1, 1]' : 0.334465}
{'[5, 5, 5, 6, 0, 5, 0, 0, 29, 11, 0, 18, 0, 1, 0, 0, 1, 1]' : 0.333681}
{'[5, 5, 5, 6, 0, 5, 0, 0, 29, 11, 0, 18, 0, 1, 0, 0, 1, 1]' : 0.333975}
{'[5, 5, 5, 6, 0, 5, 0, 0, 29, 11, 0, 18, 0, 1, 0, 0, 1, 1]' : 0.333662}
{'[5, 5, 5, 6, 0, 5, 0, 0, 29, 11, 0, 18, 0, 1, 0, 0, 1, 1]' : 0.333458}
{'[5, 5, 5, 6, 0, 5, 0, 0, 29, 11, 0, 18, 0, 1, 0, 0, 1, 1]' : 0.334045}
{'[5, 5, 5, 6, 0, 5, 0, 0, 29, 11, 0, 18, 0, 1, 0, 0, 1, 1]' : 0.333917}
{'[5, 5, 5, 6, 0, 5, 0, 0, 29, 11, 0, 18, 0, 1, 0, 0, 1, 1]' : 0.333338}
{'[5, 5, 5, 6, 0, 5, 0, 0, 29, 11, 0, 18, 0, 1, 0, 0, 1, 1]' : 0.333879}
{'[5, 5, 5, 6, 0, 5, 0, 0, 29, 11, 0, 18, 0, 1, 0, 0, 1, 1]' : 0.333741}
{'[5, 5, 5, 6, 0, 5, 0, 0, 29, 11, 0, 18, 0, 1, 0, 0, 1, 1]' : 0.33366}
{'[5, 5, 5, 6, 0, 5, 0, 0, 29, 11, 0, 18, 0, 1, 0, 0, 1, 1]' : 0.333704}
{'[5, 5, 5, 6, 0, 5, 0, 0, 29, 11, 0, 18, 0, 1, 0, 0, 1, 1]' : 0.333318}
{'[5, 5, 5, 6, 0, 5, 0, 0, 29, 11, 0, 18, 0, 1, 0, 0, 1, 1]' : 0.3331}
{'[5, 5, 5, 6, 0, 5, 0, 0, 29, 11, 0, 18, 0, 1, 0, 0, 1, 1]' : 0.333659}
{'[5, 5, 5, 6, 0, 5, 0, 0, 29, 11, 0, 18, 0, 1, 0, 0, 1, 1]' : 0.333662}
{'[5, 5, 5, 6, 0, 5, 0, 0, 29, 11, 0, 18, 0, 1, 0, 0, 1, 1]' : 0.333835}
{'[5, 5, 5, 6, 0, 5, 0, 0, 29, 11, 0, 18, 0, 1, 0, 0, 1, 1]' : 0.335392}
{'[5, 5, 5, 6, 0, 5, 0, 0, 29, 11, 0, 18, 0, 1, 0, 0, 1, 1]' : 0.333696}
{'[5, 5, 5, 6, 0, 5, 0, 0, 29, 11, 0, 18, 0, 1, 0, 0, 1, 1]' : 0.333535}
{'[5, 5, 5, 6, 0, 5, 0, 0, 29, 11, 0, 18, 0, 1, 0, 0, 1, 1]' : 0.334767}
{'[5, 5, 5, 6, 0, 5, 0, 0, 29, 11, 0, 18, 0, 1, 0, 0, 1, 1]' : 0.333563}
{'[5, 5, 5, 6, 0, 5, 0, 0, 29, 11, 0, 18, 0, 1, 0, 0, 1, 1]' : 0.334096}
{'[5, 5, 5, 6, 0, 5, 0, 0, 29, 11, 0, 18, 0, 1, 0, 0, 1, 1]' : 0.337946}
{'[5, 5, 5, 6, 0, 5, 0, 0, 29, 11, 0, 18, 0, 1, 0, 0, 1, 1]' : 0.333355}
{'[5, 5, 5, 6, 0, 5, 0, 0, 29, 11, 0, 18, 0, 1, 0, 0, 1, 1]' : 0.333882}

out:
 ["{'[5, 5, 5, 6, 0, 5, 0, 0, 29, 11, 0, 18, 0, 1, 0, 0, 1, 1]' : 0.33353}", "{'[5, 5, 5, 6, 0, 5, 0, 0, 29, 11, 0, 18, 0, 1, 0, 0, 1, 1]' : 0.334472}", "{'[5, 5, 5, 6, 0, 5, 0, 0, 29, 11, 0, 18, 0, 1, 0, 0, 1, 1]' : 0.334083}", "{'[5, 5, 5, 6, 0, 5, 0, 0, 29, 11, 0, 18, 0, 1, 0, 0, 1, 1]' : 0.333735}", "{'[5, 5, 5, 6, 0, 5, 0, 0, 29, 11, 0, 18, 0, 1, 0, 0, 1, 1]' : 0.334465}", "{'[5, 5, 5, 6, 0, 5, 0, 0, 29, 11, 0, 18, 0, 1, 0, 0, 1, 1]' : 0.333681}", "{'[5, 5, 5, 6, 0, 5, 0, 0, 29, 11, 0, 18, 0, 1, 0, 0, 1, 1]' : 0.333975}", "{'[5, 5, 5, 6, 0, 5, 0, 0, 29, 11, 0, 18, 0, 1, 0, 0, 1, 1]' : 0.333662}", "{'[5, 5, 5, 6, 0, 5, 0, 0, 29, 11, 0, 18, 0, 1, 0, 0, 1, 1]' : 0.333458}", "{'[5, 5, 5, 6, 0, 5, 0, 0, 29, 11, 0, 18, 0, 1, 0, 0, 1, 1]' : 0.334045}", "{'[5, 5, 5, 6, 0, 5, 0, 0, 29, 11, 0, 18, 0, 1, 0, 0, 1, 1]' : 0.333917}", "{'[5, 5, 5, 6, 0, 5, 0, 0, 29, 11, 0, 18, 0, 1, 0, 0, 1, 1]' : 0.333338}", "{'[5, 5, 5, 6, 0, 5, 0, 0, 29, 11, 0, 18, 0, 1, 0, 0, 1, 1]' : 0.333879}", "{'[5, 5, 5, 6, 0, 5, 0, 0, 29, 11, 0, 18, 0, 1, 0, 0, 1, 1]' : 0.333741}", "{'[5, 5, 5, 6, 0, 5, 0, 0, 29, 11, 0, 18, 0, 1, 0, 0, 1, 1]' : 0.33366}", "{'[5, 5, 5, 6, 0, 5, 0, 0, 29, 11, 0, 18, 0, 1, 0, 0, 1, 1]' : 0.333704}", "{'[5, 5, 5, 6, 0, 5, 0, 0, 29, 11, 0, 18, 0, 1, 0, 0, 1, 1]' : 0.333318}", "{'[5, 5, 5, 6, 0, 5, 0, 0, 29, 11, 0, 18, 0, 1, 0, 0, 1, 1]' : 0.3331}", "{'[5, 5, 5, 6, 0, 5, 0, 0, 29, 11, 0, 18, 0, 1, 0, 0, 1, 1]' : 0.333659}", "{'[5, 5, 5, 6, 0, 5, 0, 0, 29, 11, 0, 18, 0, 1, 0, 0, 1, 1]' : 0.333662}", "{'[5, 5, 5, 6, 0, 5, 0, 0, 29, 11, 0, 18, 0, 1, 0, 0, 1, 1]' : 0.333835}", "{'[5, 5, 5, 6, 0, 5, 0, 0, 29, 11, 0, 18, 0, 1, 0, 0, 1, 1]' : 0.335392}", "{'[5, 5, 5, 6, 0, 5, 0, 0, 29, 11, 0, 18, 0, 1, 0, 0, 1, 1]' : 0.333696}", "{'[5, 5, 5, 6, 0, 5, 0, 0, 29, 11, 0, 18, 0, 1, 0, 0, 1, 1]' : 0.333535}", "{'[5, 5, 5, 6, 0, 5, 0, 0, 29, 11, 0, 18, 0, 1, 0, 0, 1, 1]' : 0.334767}", "{'[5, 5, 5, 6, 0, 5, 0, 0, 29, 11, 0, 18, 0, 1, 0, 0, 1, 1]' : 0.333563}", "{'[5, 5, 5, 6, 0, 5, 0, 0, 29, 11, 0, 18, 0, 1, 0, 0, 1, 1]' : 0.334096}", "{'[5, 5, 5, 6, 0, 5, 0, 0, 29, 11, 0, 18, 0, 1, 0, 0, 1, 1]' : 0.337946}", "{'[5, 5, 5, 6, 0, 5, 0, 0, 29, 11, 0, 18, 0, 1, 0, 0, 1, 1]' : 0.333355}", "{'[5, 5, 5, 6, 0, 5, 0, 0, 29, 11, 0, 18, 0, 1, 0, 0, 1, 1]' : 0.333882}"]
returning from 'run': {'[5, 5, 5, 6, 0, 5, 0, 0, 29, 11, 0, 18, 0, 1, 0, 0, 1, 1]': ([0.33353, 0.334472, 0.334083, 0.333735, 0.334465, 0.333681, 0.333975, 0.333662, 0.333458, 0.334045, 0.333917, 0.333338, 0.333879, 0.333741, 0.33366, 0.333704, 0.333318, 0.3331, 0.333659, 0.333662, 0.333835, 0.335392, 0.333696, 0.333535, 0.334767, 0.333563, 0.334096, 0.337946, 0.333355, 0.333882], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 5, 5, 6, 0, 5, 0, 0, 29, 11, 0, 18, 0, 1, 0, 0, 1, 1]': ([0.33353, 0.334472, 0.334083, 0.333735, 0.334465, 0.333681, 0.333975, 0.333662, 0.333458, 0.334045, 0.333917, 0.333338, 0.333879, 0.333741, 0.33366, 0.333704, 0.333318, 0.3331, 0.333659, 0.333662, 0.333835, 0.335392, 0.333696, 0.333535, 0.334767, 0.333563, 0.334096, 0.337946, 0.333355, 0.333882], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = jjj
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	5
        Additions: 		407
        Multiplications: 	136
        Divisions: 		0
        Logical: 		0
        Reads: 			917
        Writes: 		200
        Comparisons:		25
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest33.exe __orio_perftest33.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest33.exe  
Program Test Output: 
{'[0, 4, 1, 1, 2, 3, 0, 1, 10, 2, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.528138}
{'[0, 4, 1, 1, 2, 3, 0, 1, 10, 2, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.528543}
{'[0, 4, 1, 1, 2, 3, 0, 1, 10, 2, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.528077}
{'[0, 4, 1, 1, 2, 3, 0, 1, 10, 2, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.528033}
{'[0, 4, 1, 1, 2, 3, 0, 1, 10, 2, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.528951}
{'[0, 4, 1, 1, 2, 3, 0, 1, 10, 2, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.528035}
{'[0, 4, 1, 1, 2, 3, 0, 1, 10, 2, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.528141}
{'[0, 4, 1, 1, 2, 3, 0, 1, 10, 2, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.528217}
{'[0, 4, 1, 1, 2, 3, 0, 1, 10, 2, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.528276}
{'[0, 4, 1, 1, 2, 3, 0, 1, 10, 2, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.528386}
{'[0, 4, 1, 1, 2, 3, 0, 1, 10, 2, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.528267}
{'[0, 4, 1, 1, 2, 3, 0, 1, 10, 2, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.528157}
{'[0, 4, 1, 1, 2, 3, 0, 1, 10, 2, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.52832}
{'[0, 4, 1, 1, 2, 3, 0, 1, 10, 2, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.528206}
{'[0, 4, 1, 1, 2, 3, 0, 1, 10, 2, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.528183}
{'[0, 4, 1, 1, 2, 3, 0, 1, 10, 2, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.528181}
{'[0, 4, 1, 1, 2, 3, 0, 1, 10, 2, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.528337}
{'[0, 4, 1, 1, 2, 3, 0, 1, 10, 2, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.528156}
{'[0, 4, 1, 1, 2, 3, 0, 1, 10, 2, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.528145}
{'[0, 4, 1, 1, 2, 3, 0, 1, 10, 2, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.528217}
{'[0, 4, 1, 1, 2, 3, 0, 1, 10, 2, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.528269}
{'[0, 4, 1, 1, 2, 3, 0, 1, 10, 2, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.528162}
{'[0, 4, 1, 1, 2, 3, 0, 1, 10, 2, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.528412}
{'[0, 4, 1, 1, 2, 3, 0, 1, 10, 2, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.528771}
{'[0, 4, 1, 1, 2, 3, 0, 1, 10, 2, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.528023}
{'[0, 4, 1, 1, 2, 3, 0, 1, 10, 2, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.528142}
{'[0, 4, 1, 1, 2, 3, 0, 1, 10, 2, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.531659}
{'[0, 4, 1, 1, 2, 3, 0, 1, 10, 2, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.574311}
{'[0, 4, 1, 1, 2, 3, 0, 1, 10, 2, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.528072}
{'[0, 4, 1, 1, 2, 3, 0, 1, 10, 2, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.539551}

out:
 ["{'[0, 4, 1, 1, 2, 3, 0, 1, 10, 2, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.528138}", "{'[0, 4, 1, 1, 2, 3, 0, 1, 10, 2, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.528543}", "{'[0, 4, 1, 1, 2, 3, 0, 1, 10, 2, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.528077}", "{'[0, 4, 1, 1, 2, 3, 0, 1, 10, 2, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.528033}", "{'[0, 4, 1, 1, 2, 3, 0, 1, 10, 2, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.528951}", "{'[0, 4, 1, 1, 2, 3, 0, 1, 10, 2, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.528035}", "{'[0, 4, 1, 1, 2, 3, 0, 1, 10, 2, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.528141}", "{'[0, 4, 1, 1, 2, 3, 0, 1, 10, 2, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.528217}", "{'[0, 4, 1, 1, 2, 3, 0, 1, 10, 2, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.528276}", "{'[0, 4, 1, 1, 2, 3, 0, 1, 10, 2, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.528386}", "{'[0, 4, 1, 1, 2, 3, 0, 1, 10, 2, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.528267}", "{'[0, 4, 1, 1, 2, 3, 0, 1, 10, 2, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.528157}", "{'[0, 4, 1, 1, 2, 3, 0, 1, 10, 2, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.52832}", "{'[0, 4, 1, 1, 2, 3, 0, 1, 10, 2, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.528206}", "{'[0, 4, 1, 1, 2, 3, 0, 1, 10, 2, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.528183}", "{'[0, 4, 1, 1, 2, 3, 0, 1, 10, 2, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.528181}", "{'[0, 4, 1, 1, 2, 3, 0, 1, 10, 2, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.528337}", "{'[0, 4, 1, 1, 2, 3, 0, 1, 10, 2, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.528156}", "{'[0, 4, 1, 1, 2, 3, 0, 1, 10, 2, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.528145}", "{'[0, 4, 1, 1, 2, 3, 0, 1, 10, 2, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.528217}", "{'[0, 4, 1, 1, 2, 3, 0, 1, 10, 2, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.528269}", "{'[0, 4, 1, 1, 2, 3, 0, 1, 10, 2, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.528162}", "{'[0, 4, 1, 1, 2, 3, 0, 1, 10, 2, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.528412}", "{'[0, 4, 1, 1, 2, 3, 0, 1, 10, 2, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.528771}", "{'[0, 4, 1, 1, 2, 3, 0, 1, 10, 2, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.528023}", "{'[0, 4, 1, 1, 2, 3, 0, 1, 10, 2, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.528142}", "{'[0, 4, 1, 1, 2, 3, 0, 1, 10, 2, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.531659}", "{'[0, 4, 1, 1, 2, 3, 0, 1, 10, 2, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.574311}", "{'[0, 4, 1, 1, 2, 3, 0, 1, 10, 2, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.528072}", "{'[0, 4, 1, 1, 2, 3, 0, 1, 10, 2, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.539551}"]
returning from 'run': {'[0, 4, 1, 1, 2, 3, 0, 1, 10, 2, 0, 7, 0, 1, 1, 1, 1, 1]': ([0.528138, 0.528543, 0.528077, 0.528033, 0.528951, 0.528035, 0.528141, 0.528217, 0.528276, 0.528386, 0.528267, 0.528157, 0.52832, 0.528206, 0.528183, 0.528181, 0.528337, 0.528156, 0.528145, 0.528217, 0.528269, 0.528162, 0.528412, 0.528771, 0.528023, 0.528142, 0.531659, 0.574311, 0.528072, 0.539551], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 4, 1, 1, 2, 3, 0, 1, 10, 2, 0, 7, 0, 1, 1, 1, 1, 1]': ([0.528138, 0.528543, 0.528077, 0.528033, 0.528951, 0.528035, 0.528141, 0.528217, 0.528276, 0.528386, 0.528267, 0.528157, 0.52832, 0.528206, 0.528183, 0.528181, 0.528337, 0.528156, 0.528145, 0.528217, 0.528269, 0.528162, 0.528412, 0.528771, 0.528023, 0.528142, 0.531659, 0.574311, 0.528072, 0.539551], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		355
        Multiplications: 	124
        Divisions: 		0
        Logical: 		0
        Reads: 			738
        Writes: 		103
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest34.exe __orio_perftest34.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest34.exe  
Program Test Output: 
{'[3, 3, 0, 3, 1, 4, 0, 0, 14, 0, 9, 17, 0, 0, 2, 0, 0, 0]' : 0.7421}
{'[3, 3, 0, 3, 1, 4, 0, 0, 14, 0, 9, 17, 0, 0, 2, 0, 0, 0]' : 0.742397}
{'[3, 3, 0, 3, 1, 4, 0, 0, 14, 0, 9, 17, 0, 0, 2, 0, 0, 0]' : 0.743134}
{'[3, 3, 0, 3, 1, 4, 0, 0, 14, 0, 9, 17, 0, 0, 2, 0, 0, 0]' : 0.741908}
{'[3, 3, 0, 3, 1, 4, 0, 0, 14, 0, 9, 17, 0, 0, 2, 0, 0, 0]' : 0.74201}
{'[3, 3, 0, 3, 1, 4, 0, 0, 14, 0, 9, 17, 0, 0, 2, 0, 0, 0]' : 0.742477}
{'[3, 3, 0, 3, 1, 4, 0, 0, 14, 0, 9, 17, 0, 0, 2, 0, 0, 0]' : 0.742222}
{'[3, 3, 0, 3, 1, 4, 0, 0, 14, 0, 9, 17, 0, 0, 2, 0, 0, 0]' : 0.742138}
{'[3, 3, 0, 3, 1, 4, 0, 0, 14, 0, 9, 17, 0, 0, 2, 0, 0, 0]' : 0.743162}
{'[3, 3, 0, 3, 1, 4, 0, 0, 14, 0, 9, 17, 0, 0, 2, 0, 0, 0]' : 0.744064}
{'[3, 3, 0, 3, 1, 4, 0, 0, 14, 0, 9, 17, 0, 0, 2, 0, 0, 0]' : 0.742093}
{'[3, 3, 0, 3, 1, 4, 0, 0, 14, 0, 9, 17, 0, 0, 2, 0, 0, 0]' : 0.741876}
{'[3, 3, 0, 3, 1, 4, 0, 0, 14, 0, 9, 17, 0, 0, 2, 0, 0, 0]' : 0.742066}
{'[3, 3, 0, 3, 1, 4, 0, 0, 14, 0, 9, 17, 0, 0, 2, 0, 0, 0]' : 0.741821}
{'[3, 3, 0, 3, 1, 4, 0, 0, 14, 0, 9, 17, 0, 0, 2, 0, 0, 0]' : 0.742037}
{'[3, 3, 0, 3, 1, 4, 0, 0, 14, 0, 9, 17, 0, 0, 2, 0, 0, 0]' : 0.742004}
{'[3, 3, 0, 3, 1, 4, 0, 0, 14, 0, 9, 17, 0, 0, 2, 0, 0, 0]' : 0.743926}
{'[3, 3, 0, 3, 1, 4, 0, 0, 14, 0, 9, 17, 0, 0, 2, 0, 0, 0]' : 0.742649}
{'[3, 3, 0, 3, 1, 4, 0, 0, 14, 0, 9, 17, 0, 0, 2, 0, 0, 0]' : 0.741941}
{'[3, 3, 0, 3, 1, 4, 0, 0, 14, 0, 9, 17, 0, 0, 2, 0, 0, 0]' : 0.741769}
{'[3, 3, 0, 3, 1, 4, 0, 0, 14, 0, 9, 17, 0, 0, 2, 0, 0, 0]' : 0.741994}
{'[3, 3, 0, 3, 1, 4, 0, 0, 14, 0, 9, 17, 0, 0, 2, 0, 0, 0]' : 0.741867}
{'[3, 3, 0, 3, 1, 4, 0, 0, 14, 0, 9, 17, 0, 0, 2, 0, 0, 0]' : 0.741975}
{'[3, 3, 0, 3, 1, 4, 0, 0, 14, 0, 9, 17, 0, 0, 2, 0, 0, 0]' : 0.749669}
{'[3, 3, 0, 3, 1, 4, 0, 0, 14, 0, 9, 17, 0, 0, 2, 0, 0, 0]' : 0.742078}
{'[3, 3, 0, 3, 1, 4, 0, 0, 14, 0, 9, 17, 0, 0, 2, 0, 0, 0]' : 0.742278}
{'[3, 3, 0, 3, 1, 4, 0, 0, 14, 0, 9, 17, 0, 0, 2, 0, 0, 0]' : 0.741391}
{'[3, 3, 0, 3, 1, 4, 0, 0, 14, 0, 9, 17, 0, 0, 2, 0, 0, 0]' : 0.741225}
{'[3, 3, 0, 3, 1, 4, 0, 0, 14, 0, 9, 17, 0, 0, 2, 0, 0, 0]' : 0.741219}
{'[3, 3, 0, 3, 1, 4, 0, 0, 14, 0, 9, 17, 0, 0, 2, 0, 0, 0]' : 0.742628}

out:
 ["{'[3, 3, 0, 3, 1, 4, 0, 0, 14, 0, 9, 17, 0, 0, 2, 0, 0, 0]' : 0.7421}", "{'[3, 3, 0, 3, 1, 4, 0, 0, 14, 0, 9, 17, 0, 0, 2, 0, 0, 0]' : 0.742397}", "{'[3, 3, 0, 3, 1, 4, 0, 0, 14, 0, 9, 17, 0, 0, 2, 0, 0, 0]' : 0.743134}", "{'[3, 3, 0, 3, 1, 4, 0, 0, 14, 0, 9, 17, 0, 0, 2, 0, 0, 0]' : 0.741908}", "{'[3, 3, 0, 3, 1, 4, 0, 0, 14, 0, 9, 17, 0, 0, 2, 0, 0, 0]' : 0.74201}", "{'[3, 3, 0, 3, 1, 4, 0, 0, 14, 0, 9, 17, 0, 0, 2, 0, 0, 0]' : 0.742477}", "{'[3, 3, 0, 3, 1, 4, 0, 0, 14, 0, 9, 17, 0, 0, 2, 0, 0, 0]' : 0.742222}", "{'[3, 3, 0, 3, 1, 4, 0, 0, 14, 0, 9, 17, 0, 0, 2, 0, 0, 0]' : 0.742138}", "{'[3, 3, 0, 3, 1, 4, 0, 0, 14, 0, 9, 17, 0, 0, 2, 0, 0, 0]' : 0.743162}", "{'[3, 3, 0, 3, 1, 4, 0, 0, 14, 0, 9, 17, 0, 0, 2, 0, 0, 0]' : 0.744064}", "{'[3, 3, 0, 3, 1, 4, 0, 0, 14, 0, 9, 17, 0, 0, 2, 0, 0, 0]' : 0.742093}", "{'[3, 3, 0, 3, 1, 4, 0, 0, 14, 0, 9, 17, 0, 0, 2, 0, 0, 0]' : 0.741876}", "{'[3, 3, 0, 3, 1, 4, 0, 0, 14, 0, 9, 17, 0, 0, 2, 0, 0, 0]' : 0.742066}", "{'[3, 3, 0, 3, 1, 4, 0, 0, 14, 0, 9, 17, 0, 0, 2, 0, 0, 0]' : 0.741821}", "{'[3, 3, 0, 3, 1, 4, 0, 0, 14, 0, 9, 17, 0, 0, 2, 0, 0, 0]' : 0.742037}", "{'[3, 3, 0, 3, 1, 4, 0, 0, 14, 0, 9, 17, 0, 0, 2, 0, 0, 0]' : 0.742004}", "{'[3, 3, 0, 3, 1, 4, 0, 0, 14, 0, 9, 17, 0, 0, 2, 0, 0, 0]' : 0.743926}", "{'[3, 3, 0, 3, 1, 4, 0, 0, 14, 0, 9, 17, 0, 0, 2, 0, 0, 0]' : 0.742649}", "{'[3, 3, 0, 3, 1, 4, 0, 0, 14, 0, 9, 17, 0, 0, 2, 0, 0, 0]' : 0.741941}", "{'[3, 3, 0, 3, 1, 4, 0, 0, 14, 0, 9, 17, 0, 0, 2, 0, 0, 0]' : 0.741769}", "{'[3, 3, 0, 3, 1, 4, 0, 0, 14, 0, 9, 17, 0, 0, 2, 0, 0, 0]' : 0.741994}", "{'[3, 3, 0, 3, 1, 4, 0, 0, 14, 0, 9, 17, 0, 0, 2, 0, 0, 0]' : 0.741867}", "{'[3, 3, 0, 3, 1, 4, 0, 0, 14, 0, 9, 17, 0, 0, 2, 0, 0, 0]' : 0.741975}", "{'[3, 3, 0, 3, 1, 4, 0, 0, 14, 0, 9, 17, 0, 0, 2, 0, 0, 0]' : 0.749669}", "{'[3, 3, 0, 3, 1, 4, 0, 0, 14, 0, 9, 17, 0, 0, 2, 0, 0, 0]' : 0.742078}", "{'[3, 3, 0, 3, 1, 4, 0, 0, 14, 0, 9, 17, 0, 0, 2, 0, 0, 0]' : 0.742278}", "{'[3, 3, 0, 3, 1, 4, 0, 0, 14, 0, 9, 17, 0, 0, 2, 0, 0, 0]' : 0.741391}", "{'[3, 3, 0, 3, 1, 4, 0, 0, 14, 0, 9, 17, 0, 0, 2, 0, 0, 0]' : 0.741225}", "{'[3, 3, 0, 3, 1, 4, 0, 0, 14, 0, 9, 17, 0, 0, 2, 0, 0, 0]' : 0.741219}", "{'[3, 3, 0, 3, 1, 4, 0, 0, 14, 0, 9, 17, 0, 0, 2, 0, 0, 0]' : 0.742628}"]
returning from 'run': {'[3, 3, 0, 3, 1, 4, 0, 0, 14, 0, 9, 17, 0, 0, 2, 0, 0, 0]': ([0.7421, 0.742397, 0.743134, 0.741908, 0.74201, 0.742477, 0.742222, 0.742138, 0.743162, 0.744064, 0.742093, 0.741876, 0.742066, 0.741821, 0.742037, 0.742004, 0.743926, 0.742649, 0.741941, 0.741769, 0.741994, 0.741867, 0.741975, 0.749669, 0.742078, 0.742278, 0.741391, 0.741225, 0.741219, 0.742628], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 3, 0, 3, 1, 4, 0, 0, 14, 0, 9, 17, 0, 0, 2, 0, 0, 0]': ([0.7421, 0.742397, 0.743134, 0.741908, 0.74201, 0.742477, 0.742222, 0.742138, 0.743162, 0.744064, 0.742093, 0.741876, 0.742066, 0.741821, 0.742037, 0.742004, 0.743926, 0.742649, 0.741941, 0.741769, 0.741994, 0.741867, 0.741975, 0.749669, 0.742078, 0.742278, 0.741391, 0.741225, 0.741219, 0.742628], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = jjj
Code stats:
        Number of loops: 	96
        Max loop nest depth: 	4
        Additions: 		3840
        Multiplications: 	1392
        Divisions: 		0
        Logical: 		0
        Reads: 			7008
        Writes: 		1187
        Comparisons:		96
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest35.exe __orio_perftest35.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest35.exe  
Program Test Output: 
{'[5, 5, 0, 3, 3, 2, 1, 0, 26, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.46}
{'[5, 5, 0, 3, 3, 2, 1, 0, 26, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.460634}
{'[5, 5, 0, 3, 3, 2, 1, 0, 26, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.46168}
{'[5, 5, 0, 3, 3, 2, 1, 0, 26, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.459912}
{'[5, 5, 0, 3, 3, 2, 1, 0, 26, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.459563}
{'[5, 5, 0, 3, 3, 2, 1, 0, 26, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.45929}
{'[5, 5, 0, 3, 3, 2, 1, 0, 26, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.45992}
{'[5, 5, 0, 3, 3, 2, 1, 0, 26, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.459389}
{'[5, 5, 0, 3, 3, 2, 1, 0, 26, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.460021}
{'[5, 5, 0, 3, 3, 2, 1, 0, 26, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.460242}
{'[5, 5, 0, 3, 3, 2, 1, 0, 26, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.465016}
{'[5, 5, 0, 3, 3, 2, 1, 0, 26, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.459055}
{'[5, 5, 0, 3, 3, 2, 1, 0, 26, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.45989}
{'[5, 5, 0, 3, 3, 2, 1, 0, 26, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.459995}
{'[5, 5, 0, 3, 3, 2, 1, 0, 26, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.460098}
{'[5, 5, 0, 3, 3, 2, 1, 0, 26, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.460221}
{'[5, 5, 0, 3, 3, 2, 1, 0, 26, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.460235}
{'[5, 5, 0, 3, 3, 2, 1, 0, 26, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.460234}
{'[5, 5, 0, 3, 3, 2, 1, 0, 26, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.460124}
{'[5, 5, 0, 3, 3, 2, 1, 0, 26, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.46045}
{'[5, 5, 0, 3, 3, 2, 1, 0, 26, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.459817}
{'[5, 5, 0, 3, 3, 2, 1, 0, 26, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.464919}
{'[5, 5, 0, 3, 3, 2, 1, 0, 26, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.459379}
{'[5, 5, 0, 3, 3, 2, 1, 0, 26, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.459689}
{'[5, 5, 0, 3, 3, 2, 1, 0, 26, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.459583}
{'[5, 5, 0, 3, 3, 2, 1, 0, 26, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.459981}
{'[5, 5, 0, 3, 3, 2, 1, 0, 26, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.459929}
{'[5, 5, 0, 3, 3, 2, 1, 0, 26, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.459802}
{'[5, 5, 0, 3, 3, 2, 1, 0, 26, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.459327}
{'[5, 5, 0, 3, 3, 2, 1, 0, 26, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.45967}

out:
 ["{'[5, 5, 0, 3, 3, 2, 1, 0, 26, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.46}", "{'[5, 5, 0, 3, 3, 2, 1, 0, 26, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.460634}", "{'[5, 5, 0, 3, 3, 2, 1, 0, 26, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.46168}", "{'[5, 5, 0, 3, 3, 2, 1, 0, 26, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.459912}", "{'[5, 5, 0, 3, 3, 2, 1, 0, 26, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.459563}", "{'[5, 5, 0, 3, 3, 2, 1, 0, 26, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.45929}", "{'[5, 5, 0, 3, 3, 2, 1, 0, 26, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.45992}", "{'[5, 5, 0, 3, 3, 2, 1, 0, 26, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.459389}", "{'[5, 5, 0, 3, 3, 2, 1, 0, 26, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.460021}", "{'[5, 5, 0, 3, 3, 2, 1, 0, 26, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.460242}", "{'[5, 5, 0, 3, 3, 2, 1, 0, 26, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.465016}", "{'[5, 5, 0, 3, 3, 2, 1, 0, 26, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.459055}", "{'[5, 5, 0, 3, 3, 2, 1, 0, 26, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.45989}", "{'[5, 5, 0, 3, 3, 2, 1, 0, 26, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.459995}", "{'[5, 5, 0, 3, 3, 2, 1, 0, 26, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.460098}", "{'[5, 5, 0, 3, 3, 2, 1, 0, 26, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.460221}", "{'[5, 5, 0, 3, 3, 2, 1, 0, 26, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.460235}", "{'[5, 5, 0, 3, 3, 2, 1, 0, 26, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.460234}", "{'[5, 5, 0, 3, 3, 2, 1, 0, 26, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.460124}", "{'[5, 5, 0, 3, 3, 2, 1, 0, 26, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.46045}", "{'[5, 5, 0, 3, 3, 2, 1, 0, 26, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.459817}", "{'[5, 5, 0, 3, 3, 2, 1, 0, 26, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.464919}", "{'[5, 5, 0, 3, 3, 2, 1, 0, 26, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.459379}", "{'[5, 5, 0, 3, 3, 2, 1, 0, 26, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.459689}", "{'[5, 5, 0, 3, 3, 2, 1, 0, 26, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.459583}", "{'[5, 5, 0, 3, 3, 2, 1, 0, 26, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.459981}", "{'[5, 5, 0, 3, 3, 2, 1, 0, 26, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.459929}", "{'[5, 5, 0, 3, 3, 2, 1, 0, 26, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.459802}", "{'[5, 5, 0, 3, 3, 2, 1, 0, 26, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.459327}", "{'[5, 5, 0, 3, 3, 2, 1, 0, 26, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.45967}"]
returning from 'run': {'[5, 5, 0, 3, 3, 2, 1, 0, 26, 24, 9, 0, 2, 0, 0, 1, 0, 1]': ([0.46, 0.460634, 0.46168, 0.459912, 0.459563, 0.45929, 0.45992, 0.459389, 0.460021, 0.460242, 0.465016, 0.459055, 0.45989, 0.459995, 0.460098, 0.460221, 0.460235, 0.460234, 0.460124, 0.46045, 0.459817, 0.464919, 0.459379, 0.459689, 0.459583, 0.459981, 0.459929, 0.459802, 0.459327, 0.45967], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 5, 0, 3, 3, 2, 1, 0, 26, 24, 9, 0, 2, 0, 0, 1, 0, 1]': ([0.46, 0.460634, 0.46168, 0.459912, 0.459563, 0.45929, 0.45992, 0.459389, 0.460021, 0.460242, 0.465016, 0.459055, 0.45989, 0.459995, 0.460098, 0.460221, 0.460235, 0.460234, 0.460124, 0.46045, 0.459817, 0.464919, 0.459379, 0.459689, 0.459583, 0.459981, 0.459929, 0.459802, 0.459327, 0.45967], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	81
        Max loop nest depth: 	5
        Additions: 		9757
        Multiplications: 	2812
        Divisions: 		0
        Logical: 		0
        Reads: 			15015
        Writes: 		1708
        Comparisons:		81
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest36.exe __orio_perftest36.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest36.exe  
Program Test Output: 
{'[2, 4, 2, 0, 0, 5, 0, 0, 9, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.262448}
{'[2, 4, 2, 0, 0, 5, 0, 0, 9, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.262668}
{'[2, 4, 2, 0, 0, 5, 0, 0, 9, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.262898}
{'[2, 4, 2, 0, 0, 5, 0, 0, 9, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.262758}
{'[2, 4, 2, 0, 0, 5, 0, 0, 9, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.263172}
{'[2, 4, 2, 0, 0, 5, 0, 0, 9, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.262911}
{'[2, 4, 2, 0, 0, 5, 0, 0, 9, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.262628}
{'[2, 4, 2, 0, 0, 5, 0, 0, 9, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.262261}
{'[2, 4, 2, 0, 0, 5, 0, 0, 9, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.262852}
{'[2, 4, 2, 0, 0, 5, 0, 0, 9, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.263256}
{'[2, 4, 2, 0, 0, 5, 0, 0, 9, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.263269}
{'[2, 4, 2, 0, 0, 5, 0, 0, 9, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.262919}
{'[2, 4, 2, 0, 0, 5, 0, 0, 9, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.263161}
{'[2, 4, 2, 0, 0, 5, 0, 0, 9, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.26219}
{'[2, 4, 2, 0, 0, 5, 0, 0, 9, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.263576}
{'[2, 4, 2, 0, 0, 5, 0, 0, 9, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.26308}
{'[2, 4, 2, 0, 0, 5, 0, 0, 9, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.263054}
{'[2, 4, 2, 0, 0, 5, 0, 0, 9, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.262934}
{'[2, 4, 2, 0, 0, 5, 0, 0, 9, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.263555}
{'[2, 4, 2, 0, 0, 5, 0, 0, 9, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.262883}
{'[2, 4, 2, 0, 0, 5, 0, 0, 9, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.262658}
{'[2, 4, 2, 0, 0, 5, 0, 0, 9, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.262875}
{'[2, 4, 2, 0, 0, 5, 0, 0, 9, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.262401}
{'[2, 4, 2, 0, 0, 5, 0, 0, 9, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.263056}
{'[2, 4, 2, 0, 0, 5, 0, 0, 9, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.262634}
{'[2, 4, 2, 0, 0, 5, 0, 0, 9, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.262201}
{'[2, 4, 2, 0, 0, 5, 0, 0, 9, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.263026}
{'[2, 4, 2, 0, 0, 5, 0, 0, 9, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.262884}
{'[2, 4, 2, 0, 0, 5, 0, 0, 9, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.262879}
{'[2, 4, 2, 0, 0, 5, 0, 0, 9, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.262925}

out:
 ["{'[2, 4, 2, 0, 0, 5, 0, 0, 9, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.262448}", "{'[2, 4, 2, 0, 0, 5, 0, 0, 9, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.262668}", "{'[2, 4, 2, 0, 0, 5, 0, 0, 9, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.262898}", "{'[2, 4, 2, 0, 0, 5, 0, 0, 9, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.262758}", "{'[2, 4, 2, 0, 0, 5, 0, 0, 9, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.263172}", "{'[2, 4, 2, 0, 0, 5, 0, 0, 9, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.262911}", "{'[2, 4, 2, 0, 0, 5, 0, 0, 9, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.262628}", "{'[2, 4, 2, 0, 0, 5, 0, 0, 9, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.262261}", "{'[2, 4, 2, 0, 0, 5, 0, 0, 9, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.262852}", "{'[2, 4, 2, 0, 0, 5, 0, 0, 9, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.263256}", "{'[2, 4, 2, 0, 0, 5, 0, 0, 9, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.263269}", "{'[2, 4, 2, 0, 0, 5, 0, 0, 9, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.262919}", "{'[2, 4, 2, 0, 0, 5, 0, 0, 9, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.263161}", "{'[2, 4, 2, 0, 0, 5, 0, 0, 9, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.26219}", "{'[2, 4, 2, 0, 0, 5, 0, 0, 9, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.263576}", "{'[2, 4, 2, 0, 0, 5, 0, 0, 9, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.26308}", "{'[2, 4, 2, 0, 0, 5, 0, 0, 9, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.263054}", "{'[2, 4, 2, 0, 0, 5, 0, 0, 9, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.262934}", "{'[2, 4, 2, 0, 0, 5, 0, 0, 9, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.263555}", "{'[2, 4, 2, 0, 0, 5, 0, 0, 9, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.262883}", "{'[2, 4, 2, 0, 0, 5, 0, 0, 9, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.262658}", "{'[2, 4, 2, 0, 0, 5, 0, 0, 9, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.262875}", "{'[2, 4, 2, 0, 0, 5, 0, 0, 9, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.262401}", "{'[2, 4, 2, 0, 0, 5, 0, 0, 9, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.263056}", "{'[2, 4, 2, 0, 0, 5, 0, 0, 9, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.262634}", "{'[2, 4, 2, 0, 0, 5, 0, 0, 9, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.262201}", "{'[2, 4, 2, 0, 0, 5, 0, 0, 9, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.263026}", "{'[2, 4, 2, 0, 0, 5, 0, 0, 9, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.262884}", "{'[2, 4, 2, 0, 0, 5, 0, 0, 9, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.262879}", "{'[2, 4, 2, 0, 0, 5, 0, 0, 9, 27, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.262925}"]
returning from 'run': {'[2, 4, 2, 0, 0, 5, 0, 0, 9, 27, 27, 0, 1, 1, 0, 0, 1, 1]': ([0.262448, 0.262668, 0.262898, 0.262758, 0.263172, 0.262911, 0.262628, 0.262261, 0.262852, 0.263256, 0.263269, 0.262919, 0.263161, 0.26219, 0.263576, 0.26308, 0.263054, 0.262934, 0.263555, 0.262883, 0.262658, 0.262875, 0.262401, 0.263056, 0.262634, 0.262201, 0.263026, 0.262884, 0.262879, 0.262925], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 4, 2, 0, 0, 5, 0, 0, 9, 27, 27, 0, 1, 1, 0, 0, 1, 1]': ([0.262448, 0.262668, 0.262898, 0.262758, 0.263172, 0.262911, 0.262628, 0.262261, 0.262852, 0.263256, 0.263269, 0.262919, 0.263161, 0.26219, 0.263576, 0.26308, 0.263054, 0.262934, 0.263555, 0.262883, 0.262658, 0.262875, 0.262401, 0.263056, 0.262634, 0.262201, 0.263026, 0.262884, 0.262879, 0.262925], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		408
        Multiplications: 	120
        Divisions: 		0
        Logical: 		0
        Reads: 			848
        Writes: 		162
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest37.exe __orio_perftest37.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest37.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest37.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest37.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 527, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors, data)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 408, in dopt_anova
    budget)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 333, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 279, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest37.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 527, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors, data)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 408, in dopt_anova
    budget)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 333, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 279, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	56
        Max loop nest depth: 	5
        Additions: 		1433
        Multiplications: 	342
        Divisions: 		0
        Logical: 		0
        Reads: 			2500
        Writes: 		339
        Comparisons:		56
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest38.exe __orio_perftest38.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest38.exe  
Program Test Output: 
{'[2, 0, 4, 0, 5, 3, 1, 1, 0, 9, 28, 0, 1, 1, 0, 0, 1, 1]' : 0.250469}
{'[2, 0, 4, 0, 5, 3, 1, 1, 0, 9, 28, 0, 1, 1, 0, 0, 1, 1]' : 0.251801}
{'[2, 0, 4, 0, 5, 3, 1, 1, 0, 9, 28, 0, 1, 1, 0, 0, 1, 1]' : 0.251105}
{'[2, 0, 4, 0, 5, 3, 1, 1, 0, 9, 28, 0, 1, 1, 0, 0, 1, 1]' : 0.250328}
{'[2, 0, 4, 0, 5, 3, 1, 1, 0, 9, 28, 0, 1, 1, 0, 0, 1, 1]' : 0.250059}
{'[2, 0, 4, 0, 5, 3, 1, 1, 0, 9, 28, 0, 1, 1, 0, 0, 1, 1]' : 0.249656}
{'[2, 0, 4, 0, 5, 3, 1, 1, 0, 9, 28, 0, 1, 1, 0, 0, 1, 1]' : 0.25051}
{'[2, 0, 4, 0, 5, 3, 1, 1, 0, 9, 28, 0, 1, 1, 0, 0, 1, 1]' : 0.250668}
{'[2, 0, 4, 0, 5, 3, 1, 1, 0, 9, 28, 0, 1, 1, 0, 0, 1, 1]' : 0.250359}
{'[2, 0, 4, 0, 5, 3, 1, 1, 0, 9, 28, 0, 1, 1, 0, 0, 1, 1]' : 0.250527}
{'[2, 0, 4, 0, 5, 3, 1, 1, 0, 9, 28, 0, 1, 1, 0, 0, 1, 1]' : 0.259188}
{'[2, 0, 4, 0, 5, 3, 1, 1, 0, 9, 28, 0, 1, 1, 0, 0, 1, 1]' : 0.250413}
{'[2, 0, 4, 0, 5, 3, 1, 1, 0, 9, 28, 0, 1, 1, 0, 0, 1, 1]' : 0.24986}
{'[2, 0, 4, 0, 5, 3, 1, 1, 0, 9, 28, 0, 1, 1, 0, 0, 1, 1]' : 0.250535}
{'[2, 0, 4, 0, 5, 3, 1, 1, 0, 9, 28, 0, 1, 1, 0, 0, 1, 1]' : 0.250618}
{'[2, 0, 4, 0, 5, 3, 1, 1, 0, 9, 28, 0, 1, 1, 0, 0, 1, 1]' : 0.251149}
{'[2, 0, 4, 0, 5, 3, 1, 1, 0, 9, 28, 0, 1, 1, 0, 0, 1, 1]' : 0.250944}
{'[2, 0, 4, 0, 5, 3, 1, 1, 0, 9, 28, 0, 1, 1, 0, 0, 1, 1]' : 0.249808}
{'[2, 0, 4, 0, 5, 3, 1, 1, 0, 9, 28, 0, 1, 1, 0, 0, 1, 1]' : 0.251076}
{'[2, 0, 4, 0, 5, 3, 1, 1, 0, 9, 28, 0, 1, 1, 0, 0, 1, 1]' : 0.249771}
{'[2, 0, 4, 0, 5, 3, 1, 1, 0, 9, 28, 0, 1, 1, 0, 0, 1, 1]' : 0.251088}
{'[2, 0, 4, 0, 5, 3, 1, 1, 0, 9, 28, 0, 1, 1, 0, 0, 1, 1]' : 0.251181}
{'[2, 0, 4, 0, 5, 3, 1, 1, 0, 9, 28, 0, 1, 1, 0, 0, 1, 1]' : 0.251158}
{'[2, 0, 4, 0, 5, 3, 1, 1, 0, 9, 28, 0, 1, 1, 0, 0, 1, 1]' : 0.250796}
{'[2, 0, 4, 0, 5, 3, 1, 1, 0, 9, 28, 0, 1, 1, 0, 0, 1, 1]' : 0.250377}
{'[2, 0, 4, 0, 5, 3, 1, 1, 0, 9, 28, 0, 1, 1, 0, 0, 1, 1]' : 0.251097}
{'[2, 0, 4, 0, 5, 3, 1, 1, 0, 9, 28, 0, 1, 1, 0, 0, 1, 1]' : 0.250875}
{'[2, 0, 4, 0, 5, 3, 1, 1, 0, 9, 28, 0, 1, 1, 0, 0, 1, 1]' : 0.250621}
{'[2, 0, 4, 0, 5, 3, 1, 1, 0, 9, 28, 0, 1, 1, 0, 0, 1, 1]' : 0.251258}
{'[2, 0, 4, 0, 5, 3, 1, 1, 0, 9, 28, 0, 1, 1, 0, 0, 1, 1]' : 0.250551}

out:
 ["{'[2, 0, 4, 0, 5, 3, 1, 1, 0, 9, 28, 0, 1, 1, 0, 0, 1, 1]' : 0.250469}", "{'[2, 0, 4, 0, 5, 3, 1, 1, 0, 9, 28, 0, 1, 1, 0, 0, 1, 1]' : 0.251801}", "{'[2, 0, 4, 0, 5, 3, 1, 1, 0, 9, 28, 0, 1, 1, 0, 0, 1, 1]' : 0.251105}", "{'[2, 0, 4, 0, 5, 3, 1, 1, 0, 9, 28, 0, 1, 1, 0, 0, 1, 1]' : 0.250328}", "{'[2, 0, 4, 0, 5, 3, 1, 1, 0, 9, 28, 0, 1, 1, 0, 0, 1, 1]' : 0.250059}", "{'[2, 0, 4, 0, 5, 3, 1, 1, 0, 9, 28, 0, 1, 1, 0, 0, 1, 1]' : 0.249656}", "{'[2, 0, 4, 0, 5, 3, 1, 1, 0, 9, 28, 0, 1, 1, 0, 0, 1, 1]' : 0.25051}", "{'[2, 0, 4, 0, 5, 3, 1, 1, 0, 9, 28, 0, 1, 1, 0, 0, 1, 1]' : 0.250668}", "{'[2, 0, 4, 0, 5, 3, 1, 1, 0, 9, 28, 0, 1, 1, 0, 0, 1, 1]' : 0.250359}", "{'[2, 0, 4, 0, 5, 3, 1, 1, 0, 9, 28, 0, 1, 1, 0, 0, 1, 1]' : 0.250527}", "{'[2, 0, 4, 0, 5, 3, 1, 1, 0, 9, 28, 0, 1, 1, 0, 0, 1, 1]' : 0.259188}", "{'[2, 0, 4, 0, 5, 3, 1, 1, 0, 9, 28, 0, 1, 1, 0, 0, 1, 1]' : 0.250413}", "{'[2, 0, 4, 0, 5, 3, 1, 1, 0, 9, 28, 0, 1, 1, 0, 0, 1, 1]' : 0.24986}", "{'[2, 0, 4, 0, 5, 3, 1, 1, 0, 9, 28, 0, 1, 1, 0, 0, 1, 1]' : 0.250535}", "{'[2, 0, 4, 0, 5, 3, 1, 1, 0, 9, 28, 0, 1, 1, 0, 0, 1, 1]' : 0.250618}", "{'[2, 0, 4, 0, 5, 3, 1, 1, 0, 9, 28, 0, 1, 1, 0, 0, 1, 1]' : 0.251149}", "{'[2, 0, 4, 0, 5, 3, 1, 1, 0, 9, 28, 0, 1, 1, 0, 0, 1, 1]' : 0.250944}", "{'[2, 0, 4, 0, 5, 3, 1, 1, 0, 9, 28, 0, 1, 1, 0, 0, 1, 1]' : 0.249808}", "{'[2, 0, 4, 0, 5, 3, 1, 1, 0, 9, 28, 0, 1, 1, 0, 0, 1, 1]' : 0.251076}", "{'[2, 0, 4, 0, 5, 3, 1, 1, 0, 9, 28, 0, 1, 1, 0, 0, 1, 1]' : 0.249771}", "{'[2, 0, 4, 0, 5, 3, 1, 1, 0, 9, 28, 0, 1, 1, 0, 0, 1, 1]' : 0.251088}", "{'[2, 0, 4, 0, 5, 3, 1, 1, 0, 9, 28, 0, 1, 1, 0, 0, 1, 1]' : 0.251181}", "{'[2, 0, 4, 0, 5, 3, 1, 1, 0, 9, 28, 0, 1, 1, 0, 0, 1, 1]' : 0.251158}", "{'[2, 0, 4, 0, 5, 3, 1, 1, 0, 9, 28, 0, 1, 1, 0, 0, 1, 1]' : 0.250796}", "{'[2, 0, 4, 0, 5, 3, 1, 1, 0, 9, 28, 0, 1, 1, 0, 0, 1, 1]' : 0.250377}", "{'[2, 0, 4, 0, 5, 3, 1, 1, 0, 9, 28, 0, 1, 1, 0, 0, 1, 1]' : 0.251097}", "{'[2, 0, 4, 0, 5, 3, 1, 1, 0, 9, 28, 0, 1, 1, 0, 0, 1, 1]' : 0.250875}", "{'[2, 0, 4, 0, 5, 3, 1, 1, 0, 9, 28, 0, 1, 1, 0, 0, 1, 1]' : 0.250621}", "{'[2, 0, 4, 0, 5, 3, 1, 1, 0, 9, 28, 0, 1, 1, 0, 0, 1, 1]' : 0.251258}", "{'[2, 0, 4, 0, 5, 3, 1, 1, 0, 9, 28, 0, 1, 1, 0, 0, 1, 1]' : 0.250551}"]
returning from 'run': {'[2, 0, 4, 0, 5, 3, 1, 1, 0, 9, 28, 0, 1, 1, 0, 0, 1, 1]': ([0.250469, 0.251801, 0.251105, 0.250328, 0.250059, 0.249656, 0.25051, 0.250668, 0.250359, 0.250527, 0.259188, 0.250413, 0.24986, 0.250535, 0.250618, 0.251149, 0.250944, 0.249808, 0.251076, 0.249771, 0.251088, 0.251181, 0.251158, 0.250796, 0.250377, 0.251097, 0.250875, 0.250621, 0.251258, 0.250551], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 4, 0, 5, 3, 1, 1, 0, 9, 28, 0, 1, 1, 0, 0, 1, 1]': ([0.250469, 0.251801, 0.251105, 0.250328, 0.250059, 0.249656, 0.25051, 0.250668, 0.250359, 0.250527, 0.259188, 0.250413, 0.24986, 0.250535, 0.250618, 0.251149, 0.250944, 0.249808, 0.251076, 0.249771, 0.251088, 0.251181, 0.251158, 0.250796, 0.250377, 0.251097, 0.250875, 0.250621, 0.251258, 0.250551], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	30
        Max loop nest depth: 	6
        Additions: 		1120
        Multiplications: 	378
        Divisions: 		0
        Logical: 		0
        Reads: 			2500
        Writes: 		576
        Comparisons:		30
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest39.exe __orio_perftest39.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest39.exe  
Program Test Output: 
{'[5, 3, 0, 5, 5, 6, 0, 0, 16, 5, 0, 16, 0, 0, 1, 1, 1, 0]' : 0.196414}
{'[5, 3, 0, 5, 5, 6, 0, 0, 16, 5, 0, 16, 0, 0, 1, 1, 1, 0]' : 0.197462}
{'[5, 3, 0, 5, 5, 6, 0, 0, 16, 5, 0, 16, 0, 0, 1, 1, 1, 0]' : 0.199716}
{'[5, 3, 0, 5, 5, 6, 0, 0, 16, 5, 0, 16, 0, 0, 1, 1, 1, 0]' : 0.197164}
{'[5, 3, 0, 5, 5, 6, 0, 0, 16, 5, 0, 16, 0, 0, 1, 1, 1, 0]' : 0.197546}
{'[5, 3, 0, 5, 5, 6, 0, 0, 16, 5, 0, 16, 0, 0, 1, 1, 1, 0]' : 0.200969}
{'[5, 3, 0, 5, 5, 6, 0, 0, 16, 5, 0, 16, 0, 0, 1, 1, 1, 0]' : 0.200532}
{'[5, 3, 0, 5, 5, 6, 0, 0, 16, 5, 0, 16, 0, 0, 1, 1, 1, 0]' : 0.193205}
{'[5, 3, 0, 5, 5, 6, 0, 0, 16, 5, 0, 16, 0, 0, 1, 1, 1, 0]' : 0.199152}
{'[5, 3, 0, 5, 5, 6, 0, 0, 16, 5, 0, 16, 0, 0, 1, 1, 1, 0]' : 0.198464}
{'[5, 3, 0, 5, 5, 6, 0, 0, 16, 5, 0, 16, 0, 0, 1, 1, 1, 0]' : 0.201528}
{'[5, 3, 0, 5, 5, 6, 0, 0, 16, 5, 0, 16, 0, 0, 1, 1, 1, 0]' : 0.198752}
{'[5, 3, 0, 5, 5, 6, 0, 0, 16, 5, 0, 16, 0, 0, 1, 1, 1, 0]' : 0.193586}
{'[5, 3, 0, 5, 5, 6, 0, 0, 16, 5, 0, 16, 0, 0, 1, 1, 1, 0]' : 0.1974}
{'[5, 3, 0, 5, 5, 6, 0, 0, 16, 5, 0, 16, 0, 0, 1, 1, 1, 0]' : 0.193859}
{'[5, 3, 0, 5, 5, 6, 0, 0, 16, 5, 0, 16, 0, 0, 1, 1, 1, 0]' : 0.198576}
{'[5, 3, 0, 5, 5, 6, 0, 0, 16, 5, 0, 16, 0, 0, 1, 1, 1, 0]' : 0.19704}
{'[5, 3, 0, 5, 5, 6, 0, 0, 16, 5, 0, 16, 0, 0, 1, 1, 1, 0]' : 0.197727}
{'[5, 3, 0, 5, 5, 6, 0, 0, 16, 5, 0, 16, 0, 0, 1, 1, 1, 0]' : 0.199216}
{'[5, 3, 0, 5, 5, 6, 0, 0, 16, 5, 0, 16, 0, 0, 1, 1, 1, 0]' : 0.195119}
{'[5, 3, 0, 5, 5, 6, 0, 0, 16, 5, 0, 16, 0, 0, 1, 1, 1, 0]' : 0.192729}
{'[5, 3, 0, 5, 5, 6, 0, 0, 16, 5, 0, 16, 0, 0, 1, 1, 1, 0]' : 0.199389}
{'[5, 3, 0, 5, 5, 6, 0, 0, 16, 5, 0, 16, 0, 0, 1, 1, 1, 0]' : 0.193027}
{'[5, 3, 0, 5, 5, 6, 0, 0, 16, 5, 0, 16, 0, 0, 1, 1, 1, 0]' : 0.196334}
{'[5, 3, 0, 5, 5, 6, 0, 0, 16, 5, 0, 16, 0, 0, 1, 1, 1, 0]' : 0.201308}
{'[5, 3, 0, 5, 5, 6, 0, 0, 16, 5, 0, 16, 0, 0, 1, 1, 1, 0]' : 0.200614}
{'[5, 3, 0, 5, 5, 6, 0, 0, 16, 5, 0, 16, 0, 0, 1, 1, 1, 0]' : 0.198609}
{'[5, 3, 0, 5, 5, 6, 0, 0, 16, 5, 0, 16, 0, 0, 1, 1, 1, 0]' : 0.196738}
{'[5, 3, 0, 5, 5, 6, 0, 0, 16, 5, 0, 16, 0, 0, 1, 1, 1, 0]' : 0.194722}
{'[5, 3, 0, 5, 5, 6, 0, 0, 16, 5, 0, 16, 0, 0, 1, 1, 1, 0]' : 0.201768}

out:
 ["{'[5, 3, 0, 5, 5, 6, 0, 0, 16, 5, 0, 16, 0, 0, 1, 1, 1, 0]' : 0.196414}", "{'[5, 3, 0, 5, 5, 6, 0, 0, 16, 5, 0, 16, 0, 0, 1, 1, 1, 0]' : 0.197462}", "{'[5, 3, 0, 5, 5, 6, 0, 0, 16, 5, 0, 16, 0, 0, 1, 1, 1, 0]' : 0.199716}", "{'[5, 3, 0, 5, 5, 6, 0, 0, 16, 5, 0, 16, 0, 0, 1, 1, 1, 0]' : 0.197164}", "{'[5, 3, 0, 5, 5, 6, 0, 0, 16, 5, 0, 16, 0, 0, 1, 1, 1, 0]' : 0.197546}", "{'[5, 3, 0, 5, 5, 6, 0, 0, 16, 5, 0, 16, 0, 0, 1, 1, 1, 0]' : 0.200969}", "{'[5, 3, 0, 5, 5, 6, 0, 0, 16, 5, 0, 16, 0, 0, 1, 1, 1, 0]' : 0.200532}", "{'[5, 3, 0, 5, 5, 6, 0, 0, 16, 5, 0, 16, 0, 0, 1, 1, 1, 0]' : 0.193205}", "{'[5, 3, 0, 5, 5, 6, 0, 0, 16, 5, 0, 16, 0, 0, 1, 1, 1, 0]' : 0.199152}", "{'[5, 3, 0, 5, 5, 6, 0, 0, 16, 5, 0, 16, 0, 0, 1, 1, 1, 0]' : 0.198464}", "{'[5, 3, 0, 5, 5, 6, 0, 0, 16, 5, 0, 16, 0, 0, 1, 1, 1, 0]' : 0.201528}", "{'[5, 3, 0, 5, 5, 6, 0, 0, 16, 5, 0, 16, 0, 0, 1, 1, 1, 0]' : 0.198752}", "{'[5, 3, 0, 5, 5, 6, 0, 0, 16, 5, 0, 16, 0, 0, 1, 1, 1, 0]' : 0.193586}", "{'[5, 3, 0, 5, 5, 6, 0, 0, 16, 5, 0, 16, 0, 0, 1, 1, 1, 0]' : 0.1974}", "{'[5, 3, 0, 5, 5, 6, 0, 0, 16, 5, 0, 16, 0, 0, 1, 1, 1, 0]' : 0.193859}", "{'[5, 3, 0, 5, 5, 6, 0, 0, 16, 5, 0, 16, 0, 0, 1, 1, 1, 0]' : 0.198576}", "{'[5, 3, 0, 5, 5, 6, 0, 0, 16, 5, 0, 16, 0, 0, 1, 1, 1, 0]' : 0.19704}", "{'[5, 3, 0, 5, 5, 6, 0, 0, 16, 5, 0, 16, 0, 0, 1, 1, 1, 0]' : 0.197727}", "{'[5, 3, 0, 5, 5, 6, 0, 0, 16, 5, 0, 16, 0, 0, 1, 1, 1, 0]' : 0.199216}", "{'[5, 3, 0, 5, 5, 6, 0, 0, 16, 5, 0, 16, 0, 0, 1, 1, 1, 0]' : 0.195119}", "{'[5, 3, 0, 5, 5, 6, 0, 0, 16, 5, 0, 16, 0, 0, 1, 1, 1, 0]' : 0.192729}", "{'[5, 3, 0, 5, 5, 6, 0, 0, 16, 5, 0, 16, 0, 0, 1, 1, 1, 0]' : 0.199389}", "{'[5, 3, 0, 5, 5, 6, 0, 0, 16, 5, 0, 16, 0, 0, 1, 1, 1, 0]' : 0.193027}", "{'[5, 3, 0, 5, 5, 6, 0, 0, 16, 5, 0, 16, 0, 0, 1, 1, 1, 0]' : 0.196334}", "{'[5, 3, 0, 5, 5, 6, 0, 0, 16, 5, 0, 16, 0, 0, 1, 1, 1, 0]' : 0.201308}", "{'[5, 3, 0, 5, 5, 6, 0, 0, 16, 5, 0, 16, 0, 0, 1, 1, 1, 0]' : 0.200614}", "{'[5, 3, 0, 5, 5, 6, 0, 0, 16, 5, 0, 16, 0, 0, 1, 1, 1, 0]' : 0.198609}", "{'[5, 3, 0, 5, 5, 6, 0, 0, 16, 5, 0, 16, 0, 0, 1, 1, 1, 0]' : 0.196738}", "{'[5, 3, 0, 5, 5, 6, 0, 0, 16, 5, 0, 16, 0, 0, 1, 1, 1, 0]' : 0.194722}", "{'[5, 3, 0, 5, 5, 6, 0, 0, 16, 5, 0, 16, 0, 0, 1, 1, 1, 0]' : 0.201768}"]
returning from 'run': {'[5, 3, 0, 5, 5, 6, 0, 0, 16, 5, 0, 16, 0, 0, 1, 1, 1, 0]': ([0.196414, 0.197462, 0.199716, 0.197164, 0.197546, 0.200969, 0.200532, 0.193205, 0.199152, 0.198464, 0.201528, 0.198752, 0.193586, 0.1974, 0.193859, 0.198576, 0.19704, 0.197727, 0.199216, 0.195119, 0.192729, 0.199389, 0.193027, 0.196334, 0.201308, 0.200614, 0.198609, 0.196738, 0.194722, 0.201768], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 3, 0, 5, 5, 6, 0, 0, 16, 5, 0, 16, 0, 0, 1, 1, 1, 0]': ([0.196414, 0.197462, 0.199716, 0.197164, 0.197546, 0.200969, 0.200532, 0.193205, 0.199152, 0.198464, 0.201528, 0.198752, 0.193586, 0.1974, 0.193859, 0.198576, 0.19704, 0.197727, 0.199216, 0.195119, 0.192729, 0.199389, 0.193027, 0.196334, 0.201308, 0.200614, 0.198609, 0.196738, 0.194722, 0.201768], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = iii
Code stats:
        Number of loops: 	41
        Max loop nest depth: 	5
        Additions: 		464
        Multiplications: 	144
        Divisions: 		0
        Logical: 		0
        Reads: 			1045
        Writes: 		225
        Comparisons:		41
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest40.exe __orio_perftest40.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest40.exe  
Program Test Output: 
{'[4, 4, 2, 2, 4, 6, 1, 1, 9, 6, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.374244}
{'[4, 4, 2, 2, 4, 6, 1, 1, 9, 6, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.374558}
{'[4, 4, 2, 2, 4, 6, 1, 1, 9, 6, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.373512}
{'[4, 4, 2, 2, 4, 6, 1, 1, 9, 6, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.373894}
{'[4, 4, 2, 2, 4, 6, 1, 1, 9, 6, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.374209}
{'[4, 4, 2, 2, 4, 6, 1, 1, 9, 6, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.374486}
{'[4, 4, 2, 2, 4, 6, 1, 1, 9, 6, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.373585}
{'[4, 4, 2, 2, 4, 6, 1, 1, 9, 6, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.374244}
{'[4, 4, 2, 2, 4, 6, 1, 1, 9, 6, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.374479}
{'[4, 4, 2, 2, 4, 6, 1, 1, 9, 6, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.374703}
{'[4, 4, 2, 2, 4, 6, 1, 1, 9, 6, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.374125}
{'[4, 4, 2, 2, 4, 6, 1, 1, 9, 6, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.374162}
{'[4, 4, 2, 2, 4, 6, 1, 1, 9, 6, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.374284}
{'[4, 4, 2, 2, 4, 6, 1, 1, 9, 6, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.374571}
{'[4, 4, 2, 2, 4, 6, 1, 1, 9, 6, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.37441}
{'[4, 4, 2, 2, 4, 6, 1, 1, 9, 6, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.374427}
{'[4, 4, 2, 2, 4, 6, 1, 1, 9, 6, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.374349}
{'[4, 4, 2, 2, 4, 6, 1, 1, 9, 6, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.373914}
{'[4, 4, 2, 2, 4, 6, 1, 1, 9, 6, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.373606}
{'[4, 4, 2, 2, 4, 6, 1, 1, 9, 6, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.374066}
{'[4, 4, 2, 2, 4, 6, 1, 1, 9, 6, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.374295}
{'[4, 4, 2, 2, 4, 6, 1, 1, 9, 6, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.376358}
{'[4, 4, 2, 2, 4, 6, 1, 1, 9, 6, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.373901}
{'[4, 4, 2, 2, 4, 6, 1, 1, 9, 6, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.373982}
{'[4, 4, 2, 2, 4, 6, 1, 1, 9, 6, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.374255}
{'[4, 4, 2, 2, 4, 6, 1, 1, 9, 6, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.374141}
{'[4, 4, 2, 2, 4, 6, 1, 1, 9, 6, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.37481}
{'[4, 4, 2, 2, 4, 6, 1, 1, 9, 6, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.373911}
{'[4, 4, 2, 2, 4, 6, 1, 1, 9, 6, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.373819}
{'[4, 4, 2, 2, 4, 6, 1, 1, 9, 6, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.374433}

out:
 ["{'[4, 4, 2, 2, 4, 6, 1, 1, 9, 6, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.374244}", "{'[4, 4, 2, 2, 4, 6, 1, 1, 9, 6, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.374558}", "{'[4, 4, 2, 2, 4, 6, 1, 1, 9, 6, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.373512}", "{'[4, 4, 2, 2, 4, 6, 1, 1, 9, 6, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.373894}", "{'[4, 4, 2, 2, 4, 6, 1, 1, 9, 6, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.374209}", "{'[4, 4, 2, 2, 4, 6, 1, 1, 9, 6, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.374486}", "{'[4, 4, 2, 2, 4, 6, 1, 1, 9, 6, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.373585}", "{'[4, 4, 2, 2, 4, 6, 1, 1, 9, 6, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.374244}", "{'[4, 4, 2, 2, 4, 6, 1, 1, 9, 6, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.374479}", "{'[4, 4, 2, 2, 4, 6, 1, 1, 9, 6, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.374703}", "{'[4, 4, 2, 2, 4, 6, 1, 1, 9, 6, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.374125}", "{'[4, 4, 2, 2, 4, 6, 1, 1, 9, 6, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.374162}", "{'[4, 4, 2, 2, 4, 6, 1, 1, 9, 6, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.374284}", "{'[4, 4, 2, 2, 4, 6, 1, 1, 9, 6, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.374571}", "{'[4, 4, 2, 2, 4, 6, 1, 1, 9, 6, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.37441}", "{'[4, 4, 2, 2, 4, 6, 1, 1, 9, 6, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.374427}", "{'[4, 4, 2, 2, 4, 6, 1, 1, 9, 6, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.374349}", "{'[4, 4, 2, 2, 4, 6, 1, 1, 9, 6, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.373914}", "{'[4, 4, 2, 2, 4, 6, 1, 1, 9, 6, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.373606}", "{'[4, 4, 2, 2, 4, 6, 1, 1, 9, 6, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.374066}", "{'[4, 4, 2, 2, 4, 6, 1, 1, 9, 6, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.374295}", "{'[4, 4, 2, 2, 4, 6, 1, 1, 9, 6, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.376358}", "{'[4, 4, 2, 2, 4, 6, 1, 1, 9, 6, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.373901}", "{'[4, 4, 2, 2, 4, 6, 1, 1, 9, 6, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.373982}", "{'[4, 4, 2, 2, 4, 6, 1, 1, 9, 6, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.374255}", "{'[4, 4, 2, 2, 4, 6, 1, 1, 9, 6, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.374141}", "{'[4, 4, 2, 2, 4, 6, 1, 1, 9, 6, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.37481}", "{'[4, 4, 2, 2, 4, 6, 1, 1, 9, 6, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.373911}", "{'[4, 4, 2, 2, 4, 6, 1, 1, 9, 6, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.373819}", "{'[4, 4, 2, 2, 4, 6, 1, 1, 9, 6, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.374433}"]
returning from 'run': {'[4, 4, 2, 2, 4, 6, 1, 1, 9, 6, 0, 0, 0, 1, 0, 1, 0, 0]': ([0.374244, 0.374558, 0.373512, 0.373894, 0.374209, 0.374486, 0.373585, 0.374244, 0.374479, 0.374703, 0.374125, 0.374162, 0.374284, 0.374571, 0.37441, 0.374427, 0.374349, 0.373914, 0.373606, 0.374066, 0.374295, 0.376358, 0.373901, 0.373982, 0.374255, 0.374141, 0.37481, 0.373911, 0.373819, 0.374433], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 4, 2, 2, 4, 6, 1, 1, 9, 6, 0, 0, 0, 1, 0, 1, 0, 0]': ([0.374244, 0.374558, 0.373512, 0.373894, 0.374209, 0.374486, 0.373585, 0.374244, 0.374479, 0.374703, 0.374125, 0.374162, 0.374284, 0.374571, 0.37441, 0.374427, 0.374349, 0.373914, 0.373606, 0.374066, 0.374295, 0.376358, 0.373901, 0.373982, 0.374255, 0.374141, 0.37481, 0.373911, 0.373819, 0.374433], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = kkk
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	5
        Additions: 		1097
        Multiplications: 	306
        Divisions: 		0
        Logical: 		0
        Reads: 			1866
        Writes: 		238
        Comparisons:		25
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest41.exe __orio_perftest41.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest41.exe  
Program Test Output: 
{'[3, 0, 3, 4, 1, 1, 1, 0, 9, 7, 1, 0, 0, 1, 1, 0, 0, 1]' : 0.331338}
{'[3, 0, 3, 4, 1, 1, 1, 0, 9, 7, 1, 0, 0, 1, 1, 0, 0, 1]' : 0.331701}
{'[3, 0, 3, 4, 1, 1, 1, 0, 9, 7, 1, 0, 0, 1, 1, 0, 0, 1]' : 0.331427}
{'[3, 0, 3, 4, 1, 1, 1, 0, 9, 7, 1, 0, 0, 1, 1, 0, 0, 1]' : 0.331025}
{'[3, 0, 3, 4, 1, 1, 1, 0, 9, 7, 1, 0, 0, 1, 1, 0, 0, 1]' : 0.331364}
{'[3, 0, 3, 4, 1, 1, 1, 0, 9, 7, 1, 0, 0, 1, 1, 0, 0, 1]' : 0.331134}
{'[3, 0, 3, 4, 1, 1, 1, 0, 9, 7, 1, 0, 0, 1, 1, 0, 0, 1]' : 0.330817}
{'[3, 0, 3, 4, 1, 1, 1, 0, 9, 7, 1, 0, 0, 1, 1, 0, 0, 1]' : 0.331065}
{'[3, 0, 3, 4, 1, 1, 1, 0, 9, 7, 1, 0, 0, 1, 1, 0, 0, 1]' : 0.331111}
{'[3, 0, 3, 4, 1, 1, 1, 0, 9, 7, 1, 0, 0, 1, 1, 0, 0, 1]' : 0.330801}
{'[3, 0, 3, 4, 1, 1, 1, 0, 9, 7, 1, 0, 0, 1, 1, 0, 0, 1]' : 0.331072}
{'[3, 0, 3, 4, 1, 1, 1, 0, 9, 7, 1, 0, 0, 1, 1, 0, 0, 1]' : 0.332996}
{'[3, 0, 3, 4, 1, 1, 1, 0, 9, 7, 1, 0, 0, 1, 1, 0, 0, 1]' : 0.331125}
{'[3, 0, 3, 4, 1, 1, 1, 0, 9, 7, 1, 0, 0, 1, 1, 0, 0, 1]' : 0.331037}
{'[3, 0, 3, 4, 1, 1, 1, 0, 9, 7, 1, 0, 0, 1, 1, 0, 0, 1]' : 0.3371}
{'[3, 0, 3, 4, 1, 1, 1, 0, 9, 7, 1, 0, 0, 1, 1, 0, 0, 1]' : 0.331401}
{'[3, 0, 3, 4, 1, 1, 1, 0, 9, 7, 1, 0, 0, 1, 1, 0, 0, 1]' : 0.337524}
{'[3, 0, 3, 4, 1, 1, 1, 0, 9, 7, 1, 0, 0, 1, 1, 0, 0, 1]' : 0.331379}
{'[3, 0, 3, 4, 1, 1, 1, 0, 9, 7, 1, 0, 0, 1, 1, 0, 0, 1]' : 0.334176}
{'[3, 0, 3, 4, 1, 1, 1, 0, 9, 7, 1, 0, 0, 1, 1, 0, 0, 1]' : 0.330906}
{'[3, 0, 3, 4, 1, 1, 1, 0, 9, 7, 1, 0, 0, 1, 1, 0, 0, 1]' : 0.331026}
{'[3, 0, 3, 4, 1, 1, 1, 0, 9, 7, 1, 0, 0, 1, 1, 0, 0, 1]' : 0.331708}
{'[3, 0, 3, 4, 1, 1, 1, 0, 9, 7, 1, 0, 0, 1, 1, 0, 0, 1]' : 0.33104}
{'[3, 0, 3, 4, 1, 1, 1, 0, 9, 7, 1, 0, 0, 1, 1, 0, 0, 1]' : 0.331536}
{'[3, 0, 3, 4, 1, 1, 1, 0, 9, 7, 1, 0, 0, 1, 1, 0, 0, 1]' : 0.331296}
{'[3, 0, 3, 4, 1, 1, 1, 0, 9, 7, 1, 0, 0, 1, 1, 0, 0, 1]' : 0.331214}
{'[3, 0, 3, 4, 1, 1, 1, 0, 9, 7, 1, 0, 0, 1, 1, 0, 0, 1]' : 0.331367}
{'[3, 0, 3, 4, 1, 1, 1, 0, 9, 7, 1, 0, 0, 1, 1, 0, 0, 1]' : 0.331906}
{'[3, 0, 3, 4, 1, 1, 1, 0, 9, 7, 1, 0, 0, 1, 1, 0, 0, 1]' : 0.331055}
{'[3, 0, 3, 4, 1, 1, 1, 0, 9, 7, 1, 0, 0, 1, 1, 0, 0, 1]' : 0.331366}

out:
 ["{'[3, 0, 3, 4, 1, 1, 1, 0, 9, 7, 1, 0, 0, 1, 1, 0, 0, 1]' : 0.331338}", "{'[3, 0, 3, 4, 1, 1, 1, 0, 9, 7, 1, 0, 0, 1, 1, 0, 0, 1]' : 0.331701}", "{'[3, 0, 3, 4, 1, 1, 1, 0, 9, 7, 1, 0, 0, 1, 1, 0, 0, 1]' : 0.331427}", "{'[3, 0, 3, 4, 1, 1, 1, 0, 9, 7, 1, 0, 0, 1, 1, 0, 0, 1]' : 0.331025}", "{'[3, 0, 3, 4, 1, 1, 1, 0, 9, 7, 1, 0, 0, 1, 1, 0, 0, 1]' : 0.331364}", "{'[3, 0, 3, 4, 1, 1, 1, 0, 9, 7, 1, 0, 0, 1, 1, 0, 0, 1]' : 0.331134}", "{'[3, 0, 3, 4, 1, 1, 1, 0, 9, 7, 1, 0, 0, 1, 1, 0, 0, 1]' : 0.330817}", "{'[3, 0, 3, 4, 1, 1, 1, 0, 9, 7, 1, 0, 0, 1, 1, 0, 0, 1]' : 0.331065}", "{'[3, 0, 3, 4, 1, 1, 1, 0, 9, 7, 1, 0, 0, 1, 1, 0, 0, 1]' : 0.331111}", "{'[3, 0, 3, 4, 1, 1, 1, 0, 9, 7, 1, 0, 0, 1, 1, 0, 0, 1]' : 0.330801}", "{'[3, 0, 3, 4, 1, 1, 1, 0, 9, 7, 1, 0, 0, 1, 1, 0, 0, 1]' : 0.331072}", "{'[3, 0, 3, 4, 1, 1, 1, 0, 9, 7, 1, 0, 0, 1, 1, 0, 0, 1]' : 0.332996}", "{'[3, 0, 3, 4, 1, 1, 1, 0, 9, 7, 1, 0, 0, 1, 1, 0, 0, 1]' : 0.331125}", "{'[3, 0, 3, 4, 1, 1, 1, 0, 9, 7, 1, 0, 0, 1, 1, 0, 0, 1]' : 0.331037}", "{'[3, 0, 3, 4, 1, 1, 1, 0, 9, 7, 1, 0, 0, 1, 1, 0, 0, 1]' : 0.3371}", "{'[3, 0, 3, 4, 1, 1, 1, 0, 9, 7, 1, 0, 0, 1, 1, 0, 0, 1]' : 0.331401}", "{'[3, 0, 3, 4, 1, 1, 1, 0, 9, 7, 1, 0, 0, 1, 1, 0, 0, 1]' : 0.337524}", "{'[3, 0, 3, 4, 1, 1, 1, 0, 9, 7, 1, 0, 0, 1, 1, 0, 0, 1]' : 0.331379}", "{'[3, 0, 3, 4, 1, 1, 1, 0, 9, 7, 1, 0, 0, 1, 1, 0, 0, 1]' : 0.334176}", "{'[3, 0, 3, 4, 1, 1, 1, 0, 9, 7, 1, 0, 0, 1, 1, 0, 0, 1]' : 0.330906}", "{'[3, 0, 3, 4, 1, 1, 1, 0, 9, 7, 1, 0, 0, 1, 1, 0, 0, 1]' : 0.331026}", "{'[3, 0, 3, 4, 1, 1, 1, 0, 9, 7, 1, 0, 0, 1, 1, 0, 0, 1]' : 0.331708}", "{'[3, 0, 3, 4, 1, 1, 1, 0, 9, 7, 1, 0, 0, 1, 1, 0, 0, 1]' : 0.33104}", "{'[3, 0, 3, 4, 1, 1, 1, 0, 9, 7, 1, 0, 0, 1, 1, 0, 0, 1]' : 0.331536}", "{'[3, 0, 3, 4, 1, 1, 1, 0, 9, 7, 1, 0, 0, 1, 1, 0, 0, 1]' : 0.331296}", "{'[3, 0, 3, 4, 1, 1, 1, 0, 9, 7, 1, 0, 0, 1, 1, 0, 0, 1]' : 0.331214}", "{'[3, 0, 3, 4, 1, 1, 1, 0, 9, 7, 1, 0, 0, 1, 1, 0, 0, 1]' : 0.331367}", "{'[3, 0, 3, 4, 1, 1, 1, 0, 9, 7, 1, 0, 0, 1, 1, 0, 0, 1]' : 0.331906}", "{'[3, 0, 3, 4, 1, 1, 1, 0, 9, 7, 1, 0, 0, 1, 1, 0, 0, 1]' : 0.331055}", "{'[3, 0, 3, 4, 1, 1, 1, 0, 9, 7, 1, 0, 0, 1, 1, 0, 0, 1]' : 0.331366}"]
returning from 'run': {'[3, 0, 3, 4, 1, 1, 1, 0, 9, 7, 1, 0, 0, 1, 1, 0, 0, 1]': ([0.331338, 0.331701, 0.331427, 0.331025, 0.331364, 0.331134, 0.330817, 0.331065, 0.331111, 0.330801, 0.331072, 0.332996, 0.331125, 0.331037, 0.3371, 0.331401, 0.337524, 0.331379, 0.334176, 0.330906, 0.331026, 0.331708, 0.33104, 0.331536, 0.331296, 0.331214, 0.331367, 0.331906, 0.331055, 0.331366], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 0, 3, 4, 1, 1, 1, 0, 9, 7, 1, 0, 0, 1, 1, 0, 0, 1]': ([0.331338, 0.331701, 0.331427, 0.331025, 0.331364, 0.331134, 0.330817, 0.331065, 0.331111, 0.330801, 0.331072, 0.332996, 0.331125, 0.331037, 0.3371, 0.331401, 0.337524, 0.331379, 0.334176, 0.330906, 0.331026, 0.331708, 0.33104, 0.331536, 0.331296, 0.331214, 0.331367, 0.331906, 0.331055, 0.331366], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	6
        Additions: 		1543
        Multiplications: 	702
        Divisions: 		0
        Logical: 		0
        Reads: 			3155
        Writes: 		584
        Comparisons:		22
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest42.exe __orio_perftest42.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest42.exe  
Program Test Output: 
{'[1, 3, 2, 1, 4, 3, 0, 0, 14, 0, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.248722}
{'[1, 3, 2, 1, 4, 3, 0, 0, 14, 0, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.251721}
{'[1, 3, 2, 1, 4, 3, 0, 0, 14, 0, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.252648}
{'[1, 3, 2, 1, 4, 3, 0, 0, 14, 0, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.24842}
{'[1, 3, 2, 1, 4, 3, 0, 0, 14, 0, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.252528}
{'[1, 3, 2, 1, 4, 3, 0, 0, 14, 0, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.248334}
{'[1, 3, 2, 1, 4, 3, 0, 0, 14, 0, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.253468}
{'[1, 3, 2, 1, 4, 3, 0, 0, 14, 0, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.251845}
{'[1, 3, 2, 1, 4, 3, 0, 0, 14, 0, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.250823}
{'[1, 3, 2, 1, 4, 3, 0, 0, 14, 0, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.250607}
{'[1, 3, 2, 1, 4, 3, 0, 0, 14, 0, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.251842}
{'[1, 3, 2, 1, 4, 3, 0, 0, 14, 0, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.248127}
{'[1, 3, 2, 1, 4, 3, 0, 0, 14, 0, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.248798}
{'[1, 3, 2, 1, 4, 3, 0, 0, 14, 0, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.24972}
{'[1, 3, 2, 1, 4, 3, 0, 0, 14, 0, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.247627}
{'[1, 3, 2, 1, 4, 3, 0, 0, 14, 0, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.251866}
{'[1, 3, 2, 1, 4, 3, 0, 0, 14, 0, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.248769}
{'[1, 3, 2, 1, 4, 3, 0, 0, 14, 0, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.25125}
{'[1, 3, 2, 1, 4, 3, 0, 0, 14, 0, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.250104}
{'[1, 3, 2, 1, 4, 3, 0, 0, 14, 0, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.251952}
{'[1, 3, 2, 1, 4, 3, 0, 0, 14, 0, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.250235}
{'[1, 3, 2, 1, 4, 3, 0, 0, 14, 0, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.247746}
{'[1, 3, 2, 1, 4, 3, 0, 0, 14, 0, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.252803}
{'[1, 3, 2, 1, 4, 3, 0, 0, 14, 0, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.252043}
{'[1, 3, 2, 1, 4, 3, 0, 0, 14, 0, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.249234}
{'[1, 3, 2, 1, 4, 3, 0, 0, 14, 0, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.249376}
{'[1, 3, 2, 1, 4, 3, 0, 0, 14, 0, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.252035}
{'[1, 3, 2, 1, 4, 3, 0, 0, 14, 0, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.252289}
{'[1, 3, 2, 1, 4, 3, 0, 0, 14, 0, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.248773}
{'[1, 3, 2, 1, 4, 3, 0, 0, 14, 0, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.247451}

out:
 ["{'[1, 3, 2, 1, 4, 3, 0, 0, 14, 0, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.248722}", "{'[1, 3, 2, 1, 4, 3, 0, 0, 14, 0, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.251721}", "{'[1, 3, 2, 1, 4, 3, 0, 0, 14, 0, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.252648}", "{'[1, 3, 2, 1, 4, 3, 0, 0, 14, 0, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.24842}", "{'[1, 3, 2, 1, 4, 3, 0, 0, 14, 0, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.252528}", "{'[1, 3, 2, 1, 4, 3, 0, 0, 14, 0, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.248334}", "{'[1, 3, 2, 1, 4, 3, 0, 0, 14, 0, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.253468}", "{'[1, 3, 2, 1, 4, 3, 0, 0, 14, 0, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.251845}", "{'[1, 3, 2, 1, 4, 3, 0, 0, 14, 0, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.250823}", "{'[1, 3, 2, 1, 4, 3, 0, 0, 14, 0, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.250607}", "{'[1, 3, 2, 1, 4, 3, 0, 0, 14, 0, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.251842}", "{'[1, 3, 2, 1, 4, 3, 0, 0, 14, 0, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.248127}", "{'[1, 3, 2, 1, 4, 3, 0, 0, 14, 0, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.248798}", "{'[1, 3, 2, 1, 4, 3, 0, 0, 14, 0, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.24972}", "{'[1, 3, 2, 1, 4, 3, 0, 0, 14, 0, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.247627}", "{'[1, 3, 2, 1, 4, 3, 0, 0, 14, 0, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.251866}", "{'[1, 3, 2, 1, 4, 3, 0, 0, 14, 0, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.248769}", "{'[1, 3, 2, 1, 4, 3, 0, 0, 14, 0, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.25125}", "{'[1, 3, 2, 1, 4, 3, 0, 0, 14, 0, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.250104}", "{'[1, 3, 2, 1, 4, 3, 0, 0, 14, 0, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.251952}", "{'[1, 3, 2, 1, 4, 3, 0, 0, 14, 0, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.250235}", "{'[1, 3, 2, 1, 4, 3, 0, 0, 14, 0, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.247746}", "{'[1, 3, 2, 1, 4, 3, 0, 0, 14, 0, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.252803}", "{'[1, 3, 2, 1, 4, 3, 0, 0, 14, 0, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.252043}", "{'[1, 3, 2, 1, 4, 3, 0, 0, 14, 0, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.249234}", "{'[1, 3, 2, 1, 4, 3, 0, 0, 14, 0, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.249376}", "{'[1, 3, 2, 1, 4, 3, 0, 0, 14, 0, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.252035}", "{'[1, 3, 2, 1, 4, 3, 0, 0, 14, 0, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.252289}", "{'[1, 3, 2, 1, 4, 3, 0, 0, 14, 0, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.248773}", "{'[1, 3, 2, 1, 4, 3, 0, 0, 14, 0, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.247451}"]
returning from 'run': {'[1, 3, 2, 1, 4, 3, 0, 0, 14, 0, 0, 28, 1, 0, 1, 1, 0, 0]': ([0.248722, 0.251721, 0.252648, 0.24842, 0.252528, 0.248334, 0.253468, 0.251845, 0.250823, 0.250607, 0.251842, 0.248127, 0.248798, 0.24972, 0.247627, 0.251866, 0.248769, 0.25125, 0.250104, 0.251952, 0.250235, 0.247746, 0.252803, 0.252043, 0.249234, 0.249376, 0.252035, 0.252289, 0.248773, 0.247451], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 3, 2, 1, 4, 3, 0, 0, 14, 0, 0, 28, 1, 0, 1, 1, 0, 0]': ([0.248722, 0.251721, 0.252648, 0.24842, 0.252528, 0.248334, 0.253468, 0.251845, 0.250823, 0.250607, 0.251842, 0.248127, 0.248798, 0.24972, 0.247627, 0.251866, 0.248769, 0.25125, 0.250104, 0.251952, 0.250235, 0.247746, 0.252803, 0.252043, 0.249234, 0.249376, 0.252035, 0.252289, 0.248773, 0.247451], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		173
        Multiplications: 	36
        Divisions: 		0
        Logical: 		0
        Reads: 			375
        Writes: 		79
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest43.exe __orio_perftest43.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest43.exe  
Program Test Output: 
{'[5, 5, 2, 0, 6, 1, 1, 1, 20, 0, 8, 20, 0, 0, 1, 0, 1, 1]' : 0.928275}
{'[5, 5, 2, 0, 6, 1, 1, 1, 20, 0, 8, 20, 0, 0, 1, 0, 1, 1]' : 0.930371}
{'[5, 5, 2, 0, 6, 1, 1, 1, 20, 0, 8, 20, 0, 0, 1, 0, 1, 1]' : 0.930377}
{'[5, 5, 2, 0, 6, 1, 1, 1, 20, 0, 8, 20, 0, 0, 1, 0, 1, 1]' : 0.927649}
{'[5, 5, 2, 0, 6, 1, 1, 1, 20, 0, 8, 20, 0, 0, 1, 0, 1, 1]' : 0.926865}
{'[5, 5, 2, 0, 6, 1, 1, 1, 20, 0, 8, 20, 0, 0, 1, 0, 1, 1]' : 0.92911}
{'[5, 5, 2, 0, 6, 1, 1, 1, 20, 0, 8, 20, 0, 0, 1, 0, 1, 1]' : 0.928325}
{'[5, 5, 2, 0, 6, 1, 1, 1, 20, 0, 8, 20, 0, 0, 1, 0, 1, 1]' : 0.930178}
{'[5, 5, 2, 0, 6, 1, 1, 1, 20, 0, 8, 20, 0, 0, 1, 0, 1, 1]' : 0.928093}
{'[5, 5, 2, 0, 6, 1, 1, 1, 20, 0, 8, 20, 0, 0, 1, 0, 1, 1]' : 0.926749}
{'[5, 5, 2, 0, 6, 1, 1, 1, 20, 0, 8, 20, 0, 0, 1, 0, 1, 1]' : 0.92792}
{'[5, 5, 2, 0, 6, 1, 1, 1, 20, 0, 8, 20, 0, 0, 1, 0, 1, 1]' : 0.928032}
{'[5, 5, 2, 0, 6, 1, 1, 1, 20, 0, 8, 20, 0, 0, 1, 0, 1, 1]' : 0.926764}
{'[5, 5, 2, 0, 6, 1, 1, 1, 20, 0, 8, 20, 0, 0, 1, 0, 1, 1]' : 0.927969}
{'[5, 5, 2, 0, 6, 1, 1, 1, 20, 0, 8, 20, 0, 0, 1, 0, 1, 1]' : 0.927729}
{'[5, 5, 2, 0, 6, 1, 1, 1, 20, 0, 8, 20, 0, 0, 1, 0, 1, 1]' : 0.927499}
{'[5, 5, 2, 0, 6, 1, 1, 1, 20, 0, 8, 20, 0, 0, 1, 0, 1, 1]' : 0.928901}
{'[5, 5, 2, 0, 6, 1, 1, 1, 20, 0, 8, 20, 0, 0, 1, 0, 1, 1]' : 0.931736}
{'[5, 5, 2, 0, 6, 1, 1, 1, 20, 0, 8, 20, 0, 0, 1, 0, 1, 1]' : 0.930651}
{'[5, 5, 2, 0, 6, 1, 1, 1, 20, 0, 8, 20, 0, 0, 1, 0, 1, 1]' : 0.928544}
{'[5, 5, 2, 0, 6, 1, 1, 1, 20, 0, 8, 20, 0, 0, 1, 0, 1, 1]' : 0.92978}
{'[5, 5, 2, 0, 6, 1, 1, 1, 20, 0, 8, 20, 0, 0, 1, 0, 1, 1]' : 0.929983}
{'[5, 5, 2, 0, 6, 1, 1, 1, 20, 0, 8, 20, 0, 0, 1, 0, 1, 1]' : 0.928473}
{'[5, 5, 2, 0, 6, 1, 1, 1, 20, 0, 8, 20, 0, 0, 1, 0, 1, 1]' : 0.92989}
{'[5, 5, 2, 0, 6, 1, 1, 1, 20, 0, 8, 20, 0, 0, 1, 0, 1, 1]' : 0.93045}
{'[5, 5, 2, 0, 6, 1, 1, 1, 20, 0, 8, 20, 0, 0, 1, 0, 1, 1]' : 0.929399}
{'[5, 5, 2, 0, 6, 1, 1, 1, 20, 0, 8, 20, 0, 0, 1, 0, 1, 1]' : 0.927717}
{'[5, 5, 2, 0, 6, 1, 1, 1, 20, 0, 8, 20, 0, 0, 1, 0, 1, 1]' : 0.928611}
{'[5, 5, 2, 0, 6, 1, 1, 1, 20, 0, 8, 20, 0, 0, 1, 0, 1, 1]' : 0.932544}
{'[5, 5, 2, 0, 6, 1, 1, 1, 20, 0, 8, 20, 0, 0, 1, 0, 1, 1]' : 0.926951}

out:
 ["{'[5, 5, 2, 0, 6, 1, 1, 1, 20, 0, 8, 20, 0, 0, 1, 0, 1, 1]' : 0.928275}", "{'[5, 5, 2, 0, 6, 1, 1, 1, 20, 0, 8, 20, 0, 0, 1, 0, 1, 1]' : 0.930371}", "{'[5, 5, 2, 0, 6, 1, 1, 1, 20, 0, 8, 20, 0, 0, 1, 0, 1, 1]' : 0.930377}", "{'[5, 5, 2, 0, 6, 1, 1, 1, 20, 0, 8, 20, 0, 0, 1, 0, 1, 1]' : 0.927649}", "{'[5, 5, 2, 0, 6, 1, 1, 1, 20, 0, 8, 20, 0, 0, 1, 0, 1, 1]' : 0.926865}", "{'[5, 5, 2, 0, 6, 1, 1, 1, 20, 0, 8, 20, 0, 0, 1, 0, 1, 1]' : 0.92911}", "{'[5, 5, 2, 0, 6, 1, 1, 1, 20, 0, 8, 20, 0, 0, 1, 0, 1, 1]' : 0.928325}", "{'[5, 5, 2, 0, 6, 1, 1, 1, 20, 0, 8, 20, 0, 0, 1, 0, 1, 1]' : 0.930178}", "{'[5, 5, 2, 0, 6, 1, 1, 1, 20, 0, 8, 20, 0, 0, 1, 0, 1, 1]' : 0.928093}", "{'[5, 5, 2, 0, 6, 1, 1, 1, 20, 0, 8, 20, 0, 0, 1, 0, 1, 1]' : 0.926749}", "{'[5, 5, 2, 0, 6, 1, 1, 1, 20, 0, 8, 20, 0, 0, 1, 0, 1, 1]' : 0.92792}", "{'[5, 5, 2, 0, 6, 1, 1, 1, 20, 0, 8, 20, 0, 0, 1, 0, 1, 1]' : 0.928032}", "{'[5, 5, 2, 0, 6, 1, 1, 1, 20, 0, 8, 20, 0, 0, 1, 0, 1, 1]' : 0.926764}", "{'[5, 5, 2, 0, 6, 1, 1, 1, 20, 0, 8, 20, 0, 0, 1, 0, 1, 1]' : 0.927969}", "{'[5, 5, 2, 0, 6, 1, 1, 1, 20, 0, 8, 20, 0, 0, 1, 0, 1, 1]' : 0.927729}", "{'[5, 5, 2, 0, 6, 1, 1, 1, 20, 0, 8, 20, 0, 0, 1, 0, 1, 1]' : 0.927499}", "{'[5, 5, 2, 0, 6, 1, 1, 1, 20, 0, 8, 20, 0, 0, 1, 0, 1, 1]' : 0.928901}", "{'[5, 5, 2, 0, 6, 1, 1, 1, 20, 0, 8, 20, 0, 0, 1, 0, 1, 1]' : 0.931736}", "{'[5, 5, 2, 0, 6, 1, 1, 1, 20, 0, 8, 20, 0, 0, 1, 0, 1, 1]' : 0.930651}", "{'[5, 5, 2, 0, 6, 1, 1, 1, 20, 0, 8, 20, 0, 0, 1, 0, 1, 1]' : 0.928544}", "{'[5, 5, 2, 0, 6, 1, 1, 1, 20, 0, 8, 20, 0, 0, 1, 0, 1, 1]' : 0.92978}", "{'[5, 5, 2, 0, 6, 1, 1, 1, 20, 0, 8, 20, 0, 0, 1, 0, 1, 1]' : 0.929983}", "{'[5, 5, 2, 0, 6, 1, 1, 1, 20, 0, 8, 20, 0, 0, 1, 0, 1, 1]' : 0.928473}", "{'[5, 5, 2, 0, 6, 1, 1, 1, 20, 0, 8, 20, 0, 0, 1, 0, 1, 1]' : 0.92989}", "{'[5, 5, 2, 0, 6, 1, 1, 1, 20, 0, 8, 20, 0, 0, 1, 0, 1, 1]' : 0.93045}", "{'[5, 5, 2, 0, 6, 1, 1, 1, 20, 0, 8, 20, 0, 0, 1, 0, 1, 1]' : 0.929399}", "{'[5, 5, 2, 0, 6, 1, 1, 1, 20, 0, 8, 20, 0, 0, 1, 0, 1, 1]' : 0.927717}", "{'[5, 5, 2, 0, 6, 1, 1, 1, 20, 0, 8, 20, 0, 0, 1, 0, 1, 1]' : 0.928611}", "{'[5, 5, 2, 0, 6, 1, 1, 1, 20, 0, 8, 20, 0, 0, 1, 0, 1, 1]' : 0.932544}", "{'[5, 5, 2, 0, 6, 1, 1, 1, 20, 0, 8, 20, 0, 0, 1, 0, 1, 1]' : 0.926951}"]
returning from 'run': {'[5, 5, 2, 0, 6, 1, 1, 1, 20, 0, 8, 20, 0, 0, 1, 0, 1, 1]': ([0.928275, 0.930371, 0.930377, 0.927649, 0.926865, 0.92911, 0.928325, 0.930178, 0.928093, 0.926749, 0.92792, 0.928032, 0.926764, 0.927969, 0.927729, 0.927499, 0.928901, 0.931736, 0.930651, 0.928544, 0.92978, 0.929983, 0.928473, 0.92989, 0.93045, 0.929399, 0.927717, 0.928611, 0.932544, 0.926951], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 5, 2, 0, 6, 1, 1, 1, 20, 0, 8, 20, 0, 0, 1, 0, 1, 1]': ([0.928275, 0.930371, 0.930377, 0.927649, 0.926865, 0.92911, 0.928325, 0.930178, 0.928093, 0.926749, 0.92792, 0.928032, 0.926764, 0.927969, 0.927729, 0.927499, 0.928901, 0.931736, 0.930651, 0.928544, 0.92978, 0.929983, 0.928473, 0.92989, 0.93045, 0.929399, 0.927717, 0.928611, 0.932544, 0.926951], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = jjj
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	5
        Additions: 		1774
        Multiplications: 	558
        Divisions: 		0
        Logical: 		0
        Reads: 			2950
        Writes: 		327
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest44.exe __orio_perftest44.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest44.exe  
Program Test Output: 
{'[5, 4, 4, 4, 2, 0, 0, 0, 1, 0, 17, 2, 1, 0, 1, 0, 1, 0]' : 0.345971}
{'[5, 4, 4, 4, 2, 0, 0, 0, 1, 0, 17, 2, 1, 0, 1, 0, 1, 0]' : 0.346304}
{'[5, 4, 4, 4, 2, 0, 0, 0, 1, 0, 17, 2, 1, 0, 1, 0, 1, 0]' : 0.348626}
{'[5, 4, 4, 4, 2, 0, 0, 0, 1, 0, 17, 2, 1, 0, 1, 0, 1, 0]' : 0.346646}
{'[5, 4, 4, 4, 2, 0, 0, 0, 1, 0, 17, 2, 1, 0, 1, 0, 1, 0]' : 0.346241}
{'[5, 4, 4, 4, 2, 0, 0, 0, 1, 0, 17, 2, 1, 0, 1, 0, 1, 0]' : 0.34613}
{'[5, 4, 4, 4, 2, 0, 0, 0, 1, 0, 17, 2, 1, 0, 1, 0, 1, 0]' : 0.346529}
{'[5, 4, 4, 4, 2, 0, 0, 0, 1, 0, 17, 2, 1, 0, 1, 0, 1, 0]' : 0.34646}
{'[5, 4, 4, 4, 2, 0, 0, 0, 1, 0, 17, 2, 1, 0, 1, 0, 1, 0]' : 0.346216}
{'[5, 4, 4, 4, 2, 0, 0, 0, 1, 0, 17, 2, 1, 0, 1, 0, 1, 0]' : 0.346364}
{'[5, 4, 4, 4, 2, 0, 0, 0, 1, 0, 17, 2, 1, 0, 1, 0, 1, 0]' : 0.346054}
{'[5, 4, 4, 4, 2, 0, 0, 0, 1, 0, 17, 2, 1, 0, 1, 0, 1, 0]' : 0.345939}
{'[5, 4, 4, 4, 2, 0, 0, 0, 1, 0, 17, 2, 1, 0, 1, 0, 1, 0]' : 0.346504}
{'[5, 4, 4, 4, 2, 0, 0, 0, 1, 0, 17, 2, 1, 0, 1, 0, 1, 0]' : 0.34704}
{'[5, 4, 4, 4, 2, 0, 0, 0, 1, 0, 17, 2, 1, 0, 1, 0, 1, 0]' : 0.346139}
{'[5, 4, 4, 4, 2, 0, 0, 0, 1, 0, 17, 2, 1, 0, 1, 0, 1, 0]' : 0.346258}
{'[5, 4, 4, 4, 2, 0, 0, 0, 1, 0, 17, 2, 1, 0, 1, 0, 1, 0]' : 0.346649}
{'[5, 4, 4, 4, 2, 0, 0, 0, 1, 0, 17, 2, 1, 0, 1, 0, 1, 0]' : 0.346179}
{'[5, 4, 4, 4, 2, 0, 0, 0, 1, 0, 17, 2, 1, 0, 1, 0, 1, 0]' : 0.346167}
{'[5, 4, 4, 4, 2, 0, 0, 0, 1, 0, 17, 2, 1, 0, 1, 0, 1, 0]' : 0.346319}
{'[5, 4, 4, 4, 2, 0, 0, 0, 1, 0, 17, 2, 1, 0, 1, 0, 1, 0]' : 0.346401}
{'[5, 4, 4, 4, 2, 0, 0, 0, 1, 0, 17, 2, 1, 0, 1, 0, 1, 0]' : 0.346222}
{'[5, 4, 4, 4, 2, 0, 0, 0, 1, 0, 17, 2, 1, 0, 1, 0, 1, 0]' : 0.345991}
{'[5, 4, 4, 4, 2, 0, 0, 0, 1, 0, 17, 2, 1, 0, 1, 0, 1, 0]' : 0.356574}
{'[5, 4, 4, 4, 2, 0, 0, 0, 1, 0, 17, 2, 1, 0, 1, 0, 1, 0]' : 0.346142}
{'[5, 4, 4, 4, 2, 0, 0, 0, 1, 0, 17, 2, 1, 0, 1, 0, 1, 0]' : 0.346016}
{'[5, 4, 4, 4, 2, 0, 0, 0, 1, 0, 17, 2, 1, 0, 1, 0, 1, 0]' : 0.346046}
{'[5, 4, 4, 4, 2, 0, 0, 0, 1, 0, 17, 2, 1, 0, 1, 0, 1, 0]' : 0.347161}
{'[5, 4, 4, 4, 2, 0, 0, 0, 1, 0, 17, 2, 1, 0, 1, 0, 1, 0]' : 0.345642}
{'[5, 4, 4, 4, 2, 0, 0, 0, 1, 0, 17, 2, 1, 0, 1, 0, 1, 0]' : 0.346193}

out:
 ["{'[5, 4, 4, 4, 2, 0, 0, 0, 1, 0, 17, 2, 1, 0, 1, 0, 1, 0]' : 0.345971}", "{'[5, 4, 4, 4, 2, 0, 0, 0, 1, 0, 17, 2, 1, 0, 1, 0, 1, 0]' : 0.346304}", "{'[5, 4, 4, 4, 2, 0, 0, 0, 1, 0, 17, 2, 1, 0, 1, 0, 1, 0]' : 0.348626}", "{'[5, 4, 4, 4, 2, 0, 0, 0, 1, 0, 17, 2, 1, 0, 1, 0, 1, 0]' : 0.346646}", "{'[5, 4, 4, 4, 2, 0, 0, 0, 1, 0, 17, 2, 1, 0, 1, 0, 1, 0]' : 0.346241}", "{'[5, 4, 4, 4, 2, 0, 0, 0, 1, 0, 17, 2, 1, 0, 1, 0, 1, 0]' : 0.34613}", "{'[5, 4, 4, 4, 2, 0, 0, 0, 1, 0, 17, 2, 1, 0, 1, 0, 1, 0]' : 0.346529}", "{'[5, 4, 4, 4, 2, 0, 0, 0, 1, 0, 17, 2, 1, 0, 1, 0, 1, 0]' : 0.34646}", "{'[5, 4, 4, 4, 2, 0, 0, 0, 1, 0, 17, 2, 1, 0, 1, 0, 1, 0]' : 0.346216}", "{'[5, 4, 4, 4, 2, 0, 0, 0, 1, 0, 17, 2, 1, 0, 1, 0, 1, 0]' : 0.346364}", "{'[5, 4, 4, 4, 2, 0, 0, 0, 1, 0, 17, 2, 1, 0, 1, 0, 1, 0]' : 0.346054}", "{'[5, 4, 4, 4, 2, 0, 0, 0, 1, 0, 17, 2, 1, 0, 1, 0, 1, 0]' : 0.345939}", "{'[5, 4, 4, 4, 2, 0, 0, 0, 1, 0, 17, 2, 1, 0, 1, 0, 1, 0]' : 0.346504}", "{'[5, 4, 4, 4, 2, 0, 0, 0, 1, 0, 17, 2, 1, 0, 1, 0, 1, 0]' : 0.34704}", "{'[5, 4, 4, 4, 2, 0, 0, 0, 1, 0, 17, 2, 1, 0, 1, 0, 1, 0]' : 0.346139}", "{'[5, 4, 4, 4, 2, 0, 0, 0, 1, 0, 17, 2, 1, 0, 1, 0, 1, 0]' : 0.346258}", "{'[5, 4, 4, 4, 2, 0, 0, 0, 1, 0, 17, 2, 1, 0, 1, 0, 1, 0]' : 0.346649}", "{'[5, 4, 4, 4, 2, 0, 0, 0, 1, 0, 17, 2, 1, 0, 1, 0, 1, 0]' : 0.346179}", "{'[5, 4, 4, 4, 2, 0, 0, 0, 1, 0, 17, 2, 1, 0, 1, 0, 1, 0]' : 0.346167}", "{'[5, 4, 4, 4, 2, 0, 0, 0, 1, 0, 17, 2, 1, 0, 1, 0, 1, 0]' : 0.346319}", "{'[5, 4, 4, 4, 2, 0, 0, 0, 1, 0, 17, 2, 1, 0, 1, 0, 1, 0]' : 0.346401}", "{'[5, 4, 4, 4, 2, 0, 0, 0, 1, 0, 17, 2, 1, 0, 1, 0, 1, 0]' : 0.346222}", "{'[5, 4, 4, 4, 2, 0, 0, 0, 1, 0, 17, 2, 1, 0, 1, 0, 1, 0]' : 0.345991}", "{'[5, 4, 4, 4, 2, 0, 0, 0, 1, 0, 17, 2, 1, 0, 1, 0, 1, 0]' : 0.356574}", "{'[5, 4, 4, 4, 2, 0, 0, 0, 1, 0, 17, 2, 1, 0, 1, 0, 1, 0]' : 0.346142}", "{'[5, 4, 4, 4, 2, 0, 0, 0, 1, 0, 17, 2, 1, 0, 1, 0, 1, 0]' : 0.346016}", "{'[5, 4, 4, 4, 2, 0, 0, 0, 1, 0, 17, 2, 1, 0, 1, 0, 1, 0]' : 0.346046}", "{'[5, 4, 4, 4, 2, 0, 0, 0, 1, 0, 17, 2, 1, 0, 1, 0, 1, 0]' : 0.347161}", "{'[5, 4, 4, 4, 2, 0, 0, 0, 1, 0, 17, 2, 1, 0, 1, 0, 1, 0]' : 0.345642}", "{'[5, 4, 4, 4, 2, 0, 0, 0, 1, 0, 17, 2, 1, 0, 1, 0, 1, 0]' : 0.346193}"]
returning from 'run': {'[5, 4, 4, 4, 2, 0, 0, 0, 1, 0, 17, 2, 1, 0, 1, 0, 1, 0]': ([0.345971, 0.346304, 0.348626, 0.346646, 0.346241, 0.34613, 0.346529, 0.34646, 0.346216, 0.346364, 0.346054, 0.345939, 0.346504, 0.34704, 0.346139, 0.346258, 0.346649, 0.346179, 0.346167, 0.346319, 0.346401, 0.346222, 0.345991, 0.356574, 0.346142, 0.346016, 0.346046, 0.347161, 0.345642, 0.346193], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 4, 4, 4, 2, 0, 0, 0, 1, 0, 17, 2, 1, 0, 1, 0, 1, 0]': ([0.345971, 0.346304, 0.348626, 0.346646, 0.346241, 0.34613, 0.346529, 0.34646, 0.346216, 0.346364, 0.346054, 0.345939, 0.346504, 0.34704, 0.346139, 0.346258, 0.346649, 0.346179, 0.346167, 0.346319, 0.346401, 0.346222, 0.345991, 0.356574, 0.346142, 0.346016, 0.346046, 0.347161, 0.345642, 0.346193], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	41
        Max loop nest depth: 	6
        Additions: 		4016
        Multiplications: 	1140
        Divisions: 		0
        Logical: 		0
        Reads: 			6405
        Writes: 		717
        Comparisons:		41
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest45.exe __orio_perftest45.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest45.exe  
Program Test Output: 
{'[6, 4, 1, 5, 3, 0, 0, 1, 27, 5, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.507716}
{'[6, 4, 1, 5, 3, 0, 0, 1, 27, 5, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.508032}
{'[6, 4, 1, 5, 3, 0, 0, 1, 27, 5, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.507916}
{'[6, 4, 1, 5, 3, 0, 0, 1, 27, 5, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.507955}
{'[6, 4, 1, 5, 3, 0, 0, 1, 27, 5, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.507859}
{'[6, 4, 1, 5, 3, 0, 0, 1, 27, 5, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.508473}
{'[6, 4, 1, 5, 3, 0, 0, 1, 27, 5, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.508035}
{'[6, 4, 1, 5, 3, 0, 0, 1, 27, 5, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.50804}
{'[6, 4, 1, 5, 3, 0, 0, 1, 27, 5, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.507794}
{'[6, 4, 1, 5, 3, 0, 0, 1, 27, 5, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.507696}
{'[6, 4, 1, 5, 3, 0, 0, 1, 27, 5, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.507912}
{'[6, 4, 1, 5, 3, 0, 0, 1, 27, 5, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.508991}
{'[6, 4, 1, 5, 3, 0, 0, 1, 27, 5, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.50808}
{'[6, 4, 1, 5, 3, 0, 0, 1, 27, 5, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.507694}
{'[6, 4, 1, 5, 3, 0, 0, 1, 27, 5, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.510931}
{'[6, 4, 1, 5, 3, 0, 0, 1, 27, 5, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.513404}
{'[6, 4, 1, 5, 3, 0, 0, 1, 27, 5, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.508505}
{'[6, 4, 1, 5, 3, 0, 0, 1, 27, 5, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.513163}
{'[6, 4, 1, 5, 3, 0, 0, 1, 27, 5, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.508451}
{'[6, 4, 1, 5, 3, 0, 0, 1, 27, 5, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.507752}
{'[6, 4, 1, 5, 3, 0, 0, 1, 27, 5, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.507799}
{'[6, 4, 1, 5, 3, 0, 0, 1, 27, 5, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.507539}
{'[6, 4, 1, 5, 3, 0, 0, 1, 27, 5, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.508935}
{'[6, 4, 1, 5, 3, 0, 0, 1, 27, 5, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.507554}
{'[6, 4, 1, 5, 3, 0, 0, 1, 27, 5, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.508431}
{'[6, 4, 1, 5, 3, 0, 0, 1, 27, 5, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.507454}
{'[6, 4, 1, 5, 3, 0, 0, 1, 27, 5, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.508281}
{'[6, 4, 1, 5, 3, 0, 0, 1, 27, 5, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.507679}
{'[6, 4, 1, 5, 3, 0, 0, 1, 27, 5, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.507625}
{'[6, 4, 1, 5, 3, 0, 0, 1, 27, 5, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.507612}

out:
 ["{'[6, 4, 1, 5, 3, 0, 0, 1, 27, 5, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.507716}", "{'[6, 4, 1, 5, 3, 0, 0, 1, 27, 5, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.508032}", "{'[6, 4, 1, 5, 3, 0, 0, 1, 27, 5, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.507916}", "{'[6, 4, 1, 5, 3, 0, 0, 1, 27, 5, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.507955}", "{'[6, 4, 1, 5, 3, 0, 0, 1, 27, 5, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.507859}", "{'[6, 4, 1, 5, 3, 0, 0, 1, 27, 5, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.508473}", "{'[6, 4, 1, 5, 3, 0, 0, 1, 27, 5, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.508035}", "{'[6, 4, 1, 5, 3, 0, 0, 1, 27, 5, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.50804}", "{'[6, 4, 1, 5, 3, 0, 0, 1, 27, 5, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.507794}", "{'[6, 4, 1, 5, 3, 0, 0, 1, 27, 5, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.507696}", "{'[6, 4, 1, 5, 3, 0, 0, 1, 27, 5, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.507912}", "{'[6, 4, 1, 5, 3, 0, 0, 1, 27, 5, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.508991}", "{'[6, 4, 1, 5, 3, 0, 0, 1, 27, 5, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.50808}", "{'[6, 4, 1, 5, 3, 0, 0, 1, 27, 5, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.507694}", "{'[6, 4, 1, 5, 3, 0, 0, 1, 27, 5, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.510931}", "{'[6, 4, 1, 5, 3, 0, 0, 1, 27, 5, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.513404}", "{'[6, 4, 1, 5, 3, 0, 0, 1, 27, 5, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.508505}", "{'[6, 4, 1, 5, 3, 0, 0, 1, 27, 5, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.513163}", "{'[6, 4, 1, 5, 3, 0, 0, 1, 27, 5, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.508451}", "{'[6, 4, 1, 5, 3, 0, 0, 1, 27, 5, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.507752}", "{'[6, 4, 1, 5, 3, 0, 0, 1, 27, 5, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.507799}", "{'[6, 4, 1, 5, 3, 0, 0, 1, 27, 5, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.507539}", "{'[6, 4, 1, 5, 3, 0, 0, 1, 27, 5, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.508935}", "{'[6, 4, 1, 5, 3, 0, 0, 1, 27, 5, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.507554}", "{'[6, 4, 1, 5, 3, 0, 0, 1, 27, 5, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.508431}", "{'[6, 4, 1, 5, 3, 0, 0, 1, 27, 5, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.507454}", "{'[6, 4, 1, 5, 3, 0, 0, 1, 27, 5, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.508281}", "{'[6, 4, 1, 5, 3, 0, 0, 1, 27, 5, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.507679}", "{'[6, 4, 1, 5, 3, 0, 0, 1, 27, 5, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.507625}", "{'[6, 4, 1, 5, 3, 0, 0, 1, 27, 5, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.507612}"]
returning from 'run': {'[6, 4, 1, 5, 3, 0, 0, 1, 27, 5, 28, 0, 1, 0, 1, 0, 0, 1]': ([0.507716, 0.508032, 0.507916, 0.507955, 0.507859, 0.508473, 0.508035, 0.50804, 0.507794, 0.507696, 0.507912, 0.508991, 0.50808, 0.507694, 0.510931, 0.513404, 0.508505, 0.513163, 0.508451, 0.507752, 0.507799, 0.507539, 0.508935, 0.507554, 0.508431, 0.507454, 0.508281, 0.507679, 0.507625, 0.507612], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 4, 1, 5, 3, 0, 0, 1, 27, 5, 28, 0, 1, 0, 1, 0, 0, 1]': ([0.507716, 0.508032, 0.507916, 0.507955, 0.507859, 0.508473, 0.508035, 0.50804, 0.507794, 0.507696, 0.507912, 0.508991, 0.50808, 0.507694, 0.510931, 0.513404, 0.508505, 0.513163, 0.508451, 0.507752, 0.507799, 0.507539, 0.508935, 0.507554, 0.508431, 0.507454, 0.508281, 0.507679, 0.507625, 0.507612], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	38
        Max loop nest depth: 	6
        Additions: 		1904
        Multiplications: 	558
        Divisions: 		0
        Logical: 		0
        Reads: 			3222
        Writes: 		402
        Comparisons:		38
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest46.exe __orio_perftest46.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest46.exe  
Program Test Output: 
{'[2, 2, 2, 5, 4, 2, 0, 1, 15, 7, 28, 0, 0, 0, 0, 0, 1, 0]' : 0.431}
{'[2, 2, 2, 5, 4, 2, 0, 1, 15, 7, 28, 0, 0, 0, 0, 0, 1, 0]' : 0.431641}
{'[2, 2, 2, 5, 4, 2, 0, 1, 15, 7, 28, 0, 0, 0, 0, 0, 1, 0]' : 0.431227}
{'[2, 2, 2, 5, 4, 2, 0, 1, 15, 7, 28, 0, 0, 0, 0, 0, 1, 0]' : 0.430582}
{'[2, 2, 2, 5, 4, 2, 0, 1, 15, 7, 28, 0, 0, 0, 0, 0, 1, 0]' : 0.431556}
{'[2, 2, 2, 5, 4, 2, 0, 1, 15, 7, 28, 0, 0, 0, 0, 0, 1, 0]' : 0.431043}
{'[2, 2, 2, 5, 4, 2, 0, 1, 15, 7, 28, 0, 0, 0, 0, 0, 1, 0]' : 0.430829}
{'[2, 2, 2, 5, 4, 2, 0, 1, 15, 7, 28, 0, 0, 0, 0, 0, 1, 0]' : 0.431112}
{'[2, 2, 2, 5, 4, 2, 0, 1, 15, 7, 28, 0, 0, 0, 0, 0, 1, 0]' : 0.430363}
{'[2, 2, 2, 5, 4, 2, 0, 1, 15, 7, 28, 0, 0, 0, 0, 0, 1, 0]' : 0.431739}
{'[2, 2, 2, 5, 4, 2, 0, 1, 15, 7, 28, 0, 0, 0, 0, 0, 1, 0]' : 0.432534}
{'[2, 2, 2, 5, 4, 2, 0, 1, 15, 7, 28, 0, 0, 0, 0, 0, 1, 0]' : 0.431468}
{'[2, 2, 2, 5, 4, 2, 0, 1, 15, 7, 28, 0, 0, 0, 0, 0, 1, 0]' : 0.431208}
{'[2, 2, 2, 5, 4, 2, 0, 1, 15, 7, 28, 0, 0, 0, 0, 0, 1, 0]' : 0.431143}
{'[2, 2, 2, 5, 4, 2, 0, 1, 15, 7, 28, 0, 0, 0, 0, 0, 1, 0]' : 0.431782}
{'[2, 2, 2, 5, 4, 2, 0, 1, 15, 7, 28, 0, 0, 0, 0, 0, 1, 0]' : 0.43118}
{'[2, 2, 2, 5, 4, 2, 0, 1, 15, 7, 28, 0, 0, 0, 0, 0, 1, 0]' : 0.430847}
{'[2, 2, 2, 5, 4, 2, 0, 1, 15, 7, 28, 0, 0, 0, 0, 0, 1, 0]' : 0.43097}
{'[2, 2, 2, 5, 4, 2, 0, 1, 15, 7, 28, 0, 0, 0, 0, 0, 1, 0]' : 0.430923}
{'[2, 2, 2, 5, 4, 2, 0, 1, 15, 7, 28, 0, 0, 0, 0, 0, 1, 0]' : 0.431267}
{'[2, 2, 2, 5, 4, 2, 0, 1, 15, 7, 28, 0, 0, 0, 0, 0, 1, 0]' : 0.431736}
{'[2, 2, 2, 5, 4, 2, 0, 1, 15, 7, 28, 0, 0, 0, 0, 0, 1, 0]' : 0.431771}
{'[2, 2, 2, 5, 4, 2, 0, 1, 15, 7, 28, 0, 0, 0, 0, 0, 1, 0]' : 0.431392}
{'[2, 2, 2, 5, 4, 2, 0, 1, 15, 7, 28, 0, 0, 0, 0, 0, 1, 0]' : 0.431031}
{'[2, 2, 2, 5, 4, 2, 0, 1, 15, 7, 28, 0, 0, 0, 0, 0, 1, 0]' : 0.430936}
{'[2, 2, 2, 5, 4, 2, 0, 1, 15, 7, 28, 0, 0, 0, 0, 0, 1, 0]' : 0.430579}
{'[2, 2, 2, 5, 4, 2, 0, 1, 15, 7, 28, 0, 0, 0, 0, 0, 1, 0]' : 0.430837}
{'[2, 2, 2, 5, 4, 2, 0, 1, 15, 7, 28, 0, 0, 0, 0, 0, 1, 0]' : 0.43146}
{'[2, 2, 2, 5, 4, 2, 0, 1, 15, 7, 28, 0, 0, 0, 0, 0, 1, 0]' : 0.431835}
{'[2, 2, 2, 5, 4, 2, 0, 1, 15, 7, 28, 0, 0, 0, 0, 0, 1, 0]' : 0.432233}

out:
 ["{'[2, 2, 2, 5, 4, 2, 0, 1, 15, 7, 28, 0, 0, 0, 0, 0, 1, 0]' : 0.431}", "{'[2, 2, 2, 5, 4, 2, 0, 1, 15, 7, 28, 0, 0, 0, 0, 0, 1, 0]' : 0.431641}", "{'[2, 2, 2, 5, 4, 2, 0, 1, 15, 7, 28, 0, 0, 0, 0, 0, 1, 0]' : 0.431227}", "{'[2, 2, 2, 5, 4, 2, 0, 1, 15, 7, 28, 0, 0, 0, 0, 0, 1, 0]' : 0.430582}", "{'[2, 2, 2, 5, 4, 2, 0, 1, 15, 7, 28, 0, 0, 0, 0, 0, 1, 0]' : 0.431556}", "{'[2, 2, 2, 5, 4, 2, 0, 1, 15, 7, 28, 0, 0, 0, 0, 0, 1, 0]' : 0.431043}", "{'[2, 2, 2, 5, 4, 2, 0, 1, 15, 7, 28, 0, 0, 0, 0, 0, 1, 0]' : 0.430829}", "{'[2, 2, 2, 5, 4, 2, 0, 1, 15, 7, 28, 0, 0, 0, 0, 0, 1, 0]' : 0.431112}", "{'[2, 2, 2, 5, 4, 2, 0, 1, 15, 7, 28, 0, 0, 0, 0, 0, 1, 0]' : 0.430363}", "{'[2, 2, 2, 5, 4, 2, 0, 1, 15, 7, 28, 0, 0, 0, 0, 0, 1, 0]' : 0.431739}", "{'[2, 2, 2, 5, 4, 2, 0, 1, 15, 7, 28, 0, 0, 0, 0, 0, 1, 0]' : 0.432534}", "{'[2, 2, 2, 5, 4, 2, 0, 1, 15, 7, 28, 0, 0, 0, 0, 0, 1, 0]' : 0.431468}", "{'[2, 2, 2, 5, 4, 2, 0, 1, 15, 7, 28, 0, 0, 0, 0, 0, 1, 0]' : 0.431208}", "{'[2, 2, 2, 5, 4, 2, 0, 1, 15, 7, 28, 0, 0, 0, 0, 0, 1, 0]' : 0.431143}", "{'[2, 2, 2, 5, 4, 2, 0, 1, 15, 7, 28, 0, 0, 0, 0, 0, 1, 0]' : 0.431782}", "{'[2, 2, 2, 5, 4, 2, 0, 1, 15, 7, 28, 0, 0, 0, 0, 0, 1, 0]' : 0.43118}", "{'[2, 2, 2, 5, 4, 2, 0, 1, 15, 7, 28, 0, 0, 0, 0, 0, 1, 0]' : 0.430847}", "{'[2, 2, 2, 5, 4, 2, 0, 1, 15, 7, 28, 0, 0, 0, 0, 0, 1, 0]' : 0.43097}", "{'[2, 2, 2, 5, 4, 2, 0, 1, 15, 7, 28, 0, 0, 0, 0, 0, 1, 0]' : 0.430923}", "{'[2, 2, 2, 5, 4, 2, 0, 1, 15, 7, 28, 0, 0, 0, 0, 0, 1, 0]' : 0.431267}", "{'[2, 2, 2, 5, 4, 2, 0, 1, 15, 7, 28, 0, 0, 0, 0, 0, 1, 0]' : 0.431736}", "{'[2, 2, 2, 5, 4, 2, 0, 1, 15, 7, 28, 0, 0, 0, 0, 0, 1, 0]' : 0.431771}", "{'[2, 2, 2, 5, 4, 2, 0, 1, 15, 7, 28, 0, 0, 0, 0, 0, 1, 0]' : 0.431392}", "{'[2, 2, 2, 5, 4, 2, 0, 1, 15, 7, 28, 0, 0, 0, 0, 0, 1, 0]' : 0.431031}", "{'[2, 2, 2, 5, 4, 2, 0, 1, 15, 7, 28, 0, 0, 0, 0, 0, 1, 0]' : 0.430936}", "{'[2, 2, 2, 5, 4, 2, 0, 1, 15, 7, 28, 0, 0, 0, 0, 0, 1, 0]' : 0.430579}", "{'[2, 2, 2, 5, 4, 2, 0, 1, 15, 7, 28, 0, 0, 0, 0, 0, 1, 0]' : 0.430837}", "{'[2, 2, 2, 5, 4, 2, 0, 1, 15, 7, 28, 0, 0, 0, 0, 0, 1, 0]' : 0.43146}", "{'[2, 2, 2, 5, 4, 2, 0, 1, 15, 7, 28, 0, 0, 0, 0, 0, 1, 0]' : 0.431835}", "{'[2, 2, 2, 5, 4, 2, 0, 1, 15, 7, 28, 0, 0, 0, 0, 0, 1, 0]' : 0.432233}"]
returning from 'run': {'[2, 2, 2, 5, 4, 2, 0, 1, 15, 7, 28, 0, 0, 0, 0, 0, 1, 0]': ([0.431, 0.431641, 0.431227, 0.430582, 0.431556, 0.431043, 0.430829, 0.431112, 0.430363, 0.431739, 0.432534, 0.431468, 0.431208, 0.431143, 0.431782, 0.43118, 0.430847, 0.43097, 0.430923, 0.431267, 0.431736, 0.431771, 0.431392, 0.431031, 0.430936, 0.430579, 0.430837, 0.43146, 0.431835, 0.432233], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 2, 2, 5, 4, 2, 0, 1, 15, 7, 28, 0, 0, 0, 0, 0, 1, 0]': ([0.431, 0.431641, 0.431227, 0.430582, 0.431556, 0.431043, 0.430829, 0.431112, 0.430363, 0.431739, 0.432534, 0.431468, 0.431208, 0.431143, 0.431782, 0.43118, 0.430847, 0.43097, 0.430923, 0.431267, 0.431736, 0.431771, 0.431392, 0.431031, 0.430936, 0.430579, 0.430837, 0.43146, 0.431835, 0.432233], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Complete design, with measurements:
   T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
1     1    2    5    1    6    6       1       0   14   0  29   1    0    1
2     2    3    1    4    4    0       1       1   17  24   0  14    2    0
4     5    3    5    0    5    0       0       1    9   2   9   0    1    1
5     5    0    2    3    5    6       1       1   15   0  21   7    1    0
6     6    0    3    5    4    5       0       1   28   0  11   1    1    1
7     2    0    0    2    3    3       0       1   29   0  24   4    0    0
8     3    6    5    2    4    3       0       0    3   6   0  15    1    1
9     6    2    0    0    5    2       1       0   14  16   0  17    1    1
10    0    3    0    4    5    0       1       1    3   1   0  10    1    0
11    3    0    4    0    3    3       1       0   10   4   8   0    1    0
12    3    0    2    1    5    1       0       0    5   4   0   5    0    2
13    2    2    3    6    3    5       0       0   11  29   6   0    1    0
14    0    3    2    0    3    5       1       0    0   0  17  26    0    1
15    1    6    3    1    5    5       0       0   21  12  17   0    0    2
17    6    2    5    4    6    3       0       0   10   6  11   0    2    0
18    2    2    4    6    1    5       0       0   26   1   0   7    2    0
19    3    3    6    5    3    5       0       1    1   0   0  28    1    0
20    0    0    6    1    4    6       0       0   24  26   0  23    0    1
21    5    2    2    3    1    1       1       1   23  29   0  15    1    1
23    3    3    1    5    5    5       1       0    0  19   2   0    0    1
24    1    1    3    1    0    4       1       1   28   5   4   0    1    0
25    0    4    2    2    3    0       1       0   28   5   0   3    0    0
26    0    0    4    6    5    5       0       0   13   0  11  23    0    1
27    2    4    1    6    4    0       1       0   15   0  29  27    1    1
28    0    4    6    3    0    4       1       0   15  24  21   0    0    0
29    6    4    1    0    0    1       0       0   14  26   0   8    0    0
30    1    0    5    1    6    3       1       0   21  28   7   0    0    1
31    2    3    3    4    0    0       1       1    4   0  29  28    0    1
32    5    5    5    6    0    5       0       0   29  11   0  18    0    1
33    0    4    1    1    2    3       0       1   10   2   0   7    0    1
34    3    3    0    3    1    4       0       0   14   0   9  17    0    0
35    5    5    0    3    3    2       1       0   26  24   9   0    2    0
36    2    4    2    0    0    5       0       0    9  27  27   0    1    1
38    2    0    4    0    5    3       1       1    0   9  28   0    1    1
39    5    3    0    5    5    6       0       0   16   5   0  16    0    0
40    4    4    2    2    4    6       1       1    9   6   0   0    0    1
41    3    0    3    4    1    1       1       0    9   7   1   0    0    1
42    1    3    2    1    4    3       0       0   14   0   0  28    1    0
43    5    5    2    0    6    1       1       1   20   0   8  20    0    0
44    5    4    4    4    2    0       0       0    1   0  17   2    1    0
45    6    4    1    5    3    0       0       1   27   5  28   0    1    0
46    2    2    2    5    4    2       0       1   15   7  28   0    0    0
   RT_K SCR VEC1 VEC2 cost_mean
1     1   0    0    0 0.7540214
2     0   0    1    0 0.5126881
4     0   1    0    0 0.2383869
5     1   1    0    1 0.3447306
6     0   1    1    0 0.2319959
7     1   0    0    1 0.8340105
8     0   0    0    1 0.3317785
9     0   0    1    1 0.3498140
10    0   0    1    0 0.3033309
11    1   1    0    0 0.3169420
12    0   0    1    1 0.4937121
13    1   0    0    1 0.3395320
14    0   1    0    1 0.8257484
15    0   0    0    0 0.5115733
17    0   0    0    1 0.5120021
18    0   1    0    1 0.3091071
19    0   0    1    1 0.2163173
20    1   0    1    1 0.3917077
21    0   1    0    0 0.2558381
23    1   1    0    1 0.3326989
24    1   0    1    0 0.3204608
25    0   0    0    1 0.3331098
26    0   0    0    0 0.7214566
27    0   1    1    1 0.2766122
28    2   1    1    0 0.7204987
29    1   1    0    0 0.3480311
30    0   1    1    1 0.7285046
31    0   0    0    0 0.8539114
32    0   0    1    1 0.3339717
33    1   1    1    1 0.5302779
34    2   0    0    0 0.7424706
35    0   1    0    1 0.4602688
36    0   0    1    1 0.2628671
38    0   0    1    1 0.2509282
39    1   1    1    0 0.1976222
40    0   1    0    0 0.3742578
41    1   0    0    1 0.3318004
42    1   1    0    0 0.2503719
43    1   0    1    1 0.9288512
44    1   0    1    0 0.3467041
45    1   0    0    1 0.5084436
46    0   0    1    0 0.4312741

Step Space Names:  [1] "T1_I"    "T1_J"    "T1_K"    "T2_I"    "T2_J"    "T2_K"    "ACOPY_x"
 [8] "ACOPY_y" "U1_I"    "U_I"     "U_J"     "U_K"     "RT_I"    "RT_J"   
[15] "RT_K"    "SCR"     "VEC1"    "VEC2"   

Heteroscedasticity Test p-value: 0.751248321268
Regression Step:                Df  Sum Sq Mean Sq F value Pr(>F)   
T1_I             1 0.13041 0.13041   5.456 0.0416 * 
T1_J             1 0.00280 0.00280   0.117 0.7393   
T1_K             1 0.00564 0.00564   0.236 0.6376   
T2_I             1 0.03000 0.03000   1.255 0.2887   
T2_J             1 0.00838 0.00838   0.350 0.5670   
T2_K             1 0.00346 0.00346   0.145 0.7115   
ACOPY_x          1 0.01226 0.01226   0.513 0.4903   
ACOPY_y          1 0.00079 0.00079   0.033 0.8595   
U1_I             1 0.02469 0.02469   1.033 0.3334   
U_I              1 0.04382 0.04382   1.833 0.2055   
U_J              1 0.17187 0.17187   7.191 0.0230 * 
U_K              1 0.05551 0.05551   2.322 0.1585   
RT_I             1 0.18035 0.18035   7.546 0.0206 * 
RT_J             1 0.03606 0.03606   1.509 0.2475   
RT_K             1 0.01292 0.01292   0.541 0.4791   
SCR              1 0.02778 0.02778   1.162 0.3063   
VEC1             1 0.06427 0.06427   2.689 0.1321   
VEC2             1 0.00479 0.00479   0.200 0.6639   
I(1/(1 + T1_I))  1 0.00872 0.00872   0.365 0.5592   
I(1/(1 + T1_J))  1 0.00027 0.00027   0.011 0.9177   
I(1/(1 + T1_K))  1 0.01939 0.01939   0.811 0.3889   
I(1/(1 + T2_I))  1 0.00459 0.00459   0.192 0.6706   
I(1/(1 + T2_J))  1 0.02180 0.02180   0.912 0.3620   
I(1/(1 + T2_K))  1 0.07907 0.07907   3.308 0.0990 . 
I(1/(1 + U1_I))  1 0.00101 0.00101   0.042 0.8413   
I(1/(1 + U_I))   1 0.12542 0.12542   5.248 0.0450 * 
I(1/(1 + U_J))   1 0.05341 0.05341   2.235 0.1658   
I(1/(1 + U_K))   1 0.05858 0.05858   2.451 0.1485   
I(1/(1 + RT_I))  1 0.27447 0.27447  11.484 0.0069 **
I(1/(1 + RT_J))  1 0.00229 0.00229   0.096 0.7634   
I(1/(1 + RT_K))  1 0.00314 0.00314   0.132 0.7244   
Residuals       10 0.23900 0.02390                  
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Predicting Best
Identical predictions (tol = 1e-5): 1
Getting Best from Design
Response: ['cost_mean']
Design Names:  [1] "T1_I"      "T1_J"      "T1_K"      "T2_I"      "T2_J"      "T2_K"     
 [7] "ACOPY_x"   "ACOPY_y"   "U1_I"      "U_I"       "U_J"       "U_K"      
[13] "RT_I"      "RT_J"      "RT_K"      "SCR"       "VEC1"      "VEC2"     
[19] "cost_mean"

Design Response:    cost_mean
1  0.7540214
2  0.5126881
4  0.2383869
5  0.3447306
6  0.2319959
7  0.8340105
8  0.3317785
9  0.3498140
10 0.3033309
11 0.3169420
12 0.4937121
13 0.3395320
14 0.8257484
15 0.5115733
17 0.5120021
18 0.3091071
19 0.2163173
20 0.3917077
21 0.2558381
23 0.3326989
24 0.3204608
25 0.3331098
26 0.7214566
27 0.2766122
28 0.7204987
29 0.3480311
30 0.7285046
31 0.8539114
32 0.3339717
33 0.5302779
34 0.7424706
35 0.4602688
36 0.2628671
38 0.2509282
39 0.1976222
40 0.3742578
41 0.3318004
42 0.2503719
43 0.9288512
44 0.3467041
45 0.5084436
46 0.4312741

Getting fixed variables
Fixed Variables: {'U_J': 0, 'T1_I': 6, 'RT_I': 1}
Pruning Data
Predicted best column U_J: [1] 0

Predicted best column T1_I: [1] 6

Predicted best column RT_I: [1] 1

Dimensions of Pruned Data: [1] 7576   18
Pruned data names:  [1] "T1_I"    "T1_J"    "T1_K"    "T2_I"    "T2_J"    "T2_K"    "ACOPY_x"
 [8] "ACOPY_y" "U1_I"    "U_I"     "U_J"     "U_K"     "RT_I"    "RT_J"   
[15] "RT_K"    "SCR"     "VEC1"    "VEC2"   

NULL
Pruning Model
Best Predicted:       T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
50427    6    0    3    4    4    6       0       0   20   4   0   0    1    0
      RT_K SCR VEC1 VEC2
50427    0   1    1    0

Best From Design :    T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
39    5    3    0    5    5    6       0       0   16   5   0  16    0    0
   RT_K SCR VEC1 VEC2 cost_mean
39    1   1    1    0 0.1976222

Pruned Factors: ['T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_K', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Fixed Factors: {'U_J': 0, 'T1_I': 6, 'RT_I': 1}
Length of requested configs: 1
Result was on Database, Returning Now
Starting Point (-O3):
0.6593555
Predicted Best Point:
[6, 0, 3, 4, 4, 6, 0, 0, 20, 4, 0, 0, 1, 0, 0, 1, 1, 0]
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	5
        Additions: 		188
        Multiplications: 	56
        Divisions: 		0
        Logical: 		0
        Reads: 			497
        Writes: 		138
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest47.exe __orio_perftest47.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest47.exe  
Program Test Output: 
{'[6, 0, 3, 4, 4, 6, 0, 0, 20, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.190843}
{'[6, 0, 3, 4, 4, 6, 0, 0, 20, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.186993}
{'[6, 0, 3, 4, 4, 6, 0, 0, 20, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.18591}
{'[6, 0, 3, 4, 4, 6, 0, 0, 20, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.185728}
{'[6, 0, 3, 4, 4, 6, 0, 0, 20, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.185844}
{'[6, 0, 3, 4, 4, 6, 0, 0, 20, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.186364}
{'[6, 0, 3, 4, 4, 6, 0, 0, 20, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.193199}
{'[6, 0, 3, 4, 4, 6, 0, 0, 20, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.190765}
{'[6, 0, 3, 4, 4, 6, 0, 0, 20, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.193066}
{'[6, 0, 3, 4, 4, 6, 0, 0, 20, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.193143}
{'[6, 0, 3, 4, 4, 6, 0, 0, 20, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.187382}
{'[6, 0, 3, 4, 4, 6, 0, 0, 20, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.193226}
{'[6, 0, 3, 4, 4, 6, 0, 0, 20, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.186642}
{'[6, 0, 3, 4, 4, 6, 0, 0, 20, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.185704}
{'[6, 0, 3, 4, 4, 6, 0, 0, 20, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.185634}
{'[6, 0, 3, 4, 4, 6, 0, 0, 20, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.188527}
{'[6, 0, 3, 4, 4, 6, 0, 0, 20, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.185475}
{'[6, 0, 3, 4, 4, 6, 0, 0, 20, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.185652}
{'[6, 0, 3, 4, 4, 6, 0, 0, 20, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.18597}
{'[6, 0, 3, 4, 4, 6, 0, 0, 20, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.192591}
{'[6, 0, 3, 4, 4, 6, 0, 0, 20, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.190585}
{'[6, 0, 3, 4, 4, 6, 0, 0, 20, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.193884}
{'[6, 0, 3, 4, 4, 6, 0, 0, 20, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.185701}
{'[6, 0, 3, 4, 4, 6, 0, 0, 20, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.188079}
{'[6, 0, 3, 4, 4, 6, 0, 0, 20, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.185646}
{'[6, 0, 3, 4, 4, 6, 0, 0, 20, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.185768}
{'[6, 0, 3, 4, 4, 6, 0, 0, 20, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.189467}
{'[6, 0, 3, 4, 4, 6, 0, 0, 20, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.187746}
{'[6, 0, 3, 4, 4, 6, 0, 0, 20, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.185802}
{'[6, 0, 3, 4, 4, 6, 0, 0, 20, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.190778}

out:
 ["{'[6, 0, 3, 4, 4, 6, 0, 0, 20, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.190843}", "{'[6, 0, 3, 4, 4, 6, 0, 0, 20, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.186993}", "{'[6, 0, 3, 4, 4, 6, 0, 0, 20, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.18591}", "{'[6, 0, 3, 4, 4, 6, 0, 0, 20, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.185728}", "{'[6, 0, 3, 4, 4, 6, 0, 0, 20, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.185844}", "{'[6, 0, 3, 4, 4, 6, 0, 0, 20, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.186364}", "{'[6, 0, 3, 4, 4, 6, 0, 0, 20, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.193199}", "{'[6, 0, 3, 4, 4, 6, 0, 0, 20, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.190765}", "{'[6, 0, 3, 4, 4, 6, 0, 0, 20, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.193066}", "{'[6, 0, 3, 4, 4, 6, 0, 0, 20, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.193143}", "{'[6, 0, 3, 4, 4, 6, 0, 0, 20, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.187382}", "{'[6, 0, 3, 4, 4, 6, 0, 0, 20, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.193226}", "{'[6, 0, 3, 4, 4, 6, 0, 0, 20, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.186642}", "{'[6, 0, 3, 4, 4, 6, 0, 0, 20, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.185704}", "{'[6, 0, 3, 4, 4, 6, 0, 0, 20, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.185634}", "{'[6, 0, 3, 4, 4, 6, 0, 0, 20, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.188527}", "{'[6, 0, 3, 4, 4, 6, 0, 0, 20, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.185475}", "{'[6, 0, 3, 4, 4, 6, 0, 0, 20, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.185652}", "{'[6, 0, 3, 4, 4, 6, 0, 0, 20, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.18597}", "{'[6, 0, 3, 4, 4, 6, 0, 0, 20, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.192591}", "{'[6, 0, 3, 4, 4, 6, 0, 0, 20, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.190585}", "{'[6, 0, 3, 4, 4, 6, 0, 0, 20, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.193884}", "{'[6, 0, 3, 4, 4, 6, 0, 0, 20, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.185701}", "{'[6, 0, 3, 4, 4, 6, 0, 0, 20, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.188079}", "{'[6, 0, 3, 4, 4, 6, 0, 0, 20, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.185646}", "{'[6, 0, 3, 4, 4, 6, 0, 0, 20, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.185768}", "{'[6, 0, 3, 4, 4, 6, 0, 0, 20, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.189467}", "{'[6, 0, 3, 4, 4, 6, 0, 0, 20, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.187746}", "{'[6, 0, 3, 4, 4, 6, 0, 0, 20, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.185802}", "{'[6, 0, 3, 4, 4, 6, 0, 0, 20, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.190778}"]
returning from 'run': {'[6, 0, 3, 4, 4, 6, 0, 0, 20, 4, 0, 0, 1, 0, 0, 1, 1, 0]': ([0.190843, 0.186993, 0.18591, 0.185728, 0.185844, 0.186364, 0.193199, 0.190765, 0.193066, 0.193143, 0.187382, 0.193226, 0.186642, 0.185704, 0.185634, 0.188527, 0.185475, 0.185652, 0.18597, 0.192591, 0.190585, 0.193884, 0.185701, 0.188079, 0.185646, 0.185768, 0.189467, 0.187746, 0.185802, 0.190778], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 3, 4, 4, 6, 0, 0, 20, 4, 0, 0, 1, 0, 0, 1, 1, 0]': ([0.190843, 0.186993, 0.18591, 0.185728, 0.185844, 0.186364, 0.193199, 0.190765, 0.193066, 0.193143, 0.187382, 0.193226, 0.186642, 0.185704, 0.185634, 0.188527, 0.185475, 0.185652, 0.18597, 0.192591, 0.190585, 0.193884, 0.185701, 0.188079, 0.185646, 0.185768, 0.189467, 0.187746, 0.185802, 0.190778], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Design Best Point:
   T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
39    5    3    0    5    5    6       0       0   16   5   0  16    0    0
   RT_K SCR VEC1 VEC2 cost_mean
39    1   1    1    0 0.1976222

Slowdown (Design Best): 0.29972020657546145
Slowdown (Predicted Best): 0.28573933181720634
Budget: 42/180
Step 1
Full Model:  ~ T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_K + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Fixed Factors: {'U_J': 0, 'T1_I': 6, 'RT_I': 1}
Full data does not fit on budget
Computing D-Optimal Design
Updating Constraints
Updated Constraint: True and (((variable_ranges[variable_names.index(factors[2])][int(round(x[2]))] ==1 )or (variable_ranges[variable_names.index(factors[2])][int(round(x[2]))] %512 ==0 ))) and (((variable_ranges[variable_names.index(factors[3])][int(round(x[3]))] ==1 )or (variable_ranges[variable_names.index(factors[3])][int(round(x[3]))] %variable_ranges[variable_names.index(factors[0])][int(round(x[0]))] ==0 ))) and (((variable_ranges[variable_names.index(factors[4])][int(round(x[4]))] ==1 )or (variable_ranges[variable_names.index(factors[4])][int(round(x[4]))] %variable_ranges[variable_names.index(factors[1])][int(round(x[1]))] ==0 ))) and ((8 *variable_ranges[variable_names.index(factors[10])][int(round(x[10]))] +8 *variable_ranges[variable_names.index(factors[11])][int(round(x[11]))] +variable_ranges[variable_names.index(factors[10])][int(round(x[10]))] *variable_ranges[variable_names.index(factors[11])][int(round(x[11]))] <=150 )) and (((variable_ranges[variable_names.index(factors[8])][int(round(x[8]))] ==1 )or (1 ==1 )or (variable_ranges[variable_names.index(factors[9])][int(round(x[9]))] ==1 )))
Computing D-Optimal Design with 37 experiments
Design Formula:  ~ T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_K + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Starting "optMonteCarlo" run
       var low high center nLevels round factor   mix
1     T1_J   0    6      0       7     0  FALSE FALSE
2     T1_K   0    6      0       7     0  FALSE FALSE
3     T2_I   0    6      0       7     0  FALSE FALSE
4     T2_J   0    6      0       7     0  FALSE FALSE
5     T2_K   0    6      0       7     0  FALSE FALSE
6  ACOPY_x   0    1      0       2     0  FALSE FALSE
7  ACOPY_y   0    1      0       2     0  FALSE FALSE
8     U1_I   0   29      0      30     0  FALSE FALSE
9      U_I   0   29      0      30     0  FALSE FALSE
10     U_K   0   29      0      30     0  FALSE FALSE
11    RT_J   0    2      0       3     0  FALSE FALSE
12    RT_K   0    2      0       3     0  FALSE FALSE
13     SCR   0    1      0       2     0  FALSE FALSE
14    VEC1   0    1      0       2     0  FALSE FALSE
15    VEC2   0    1      0       2     0  FALSE FALSE

