
====== START ORIO ======

----- begin reading the source file: atax2.src1.c -----
----- finished reading the source file -----

----- begin parsing annotations -----
----- finished parsing annotations -----

----- begin optimizations -----
Search_Space         = 8.234e+13
Number_of_Parameters = 18
Numeric_Parameters   = 13
Binary_Parameters    = 05
['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
[[1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [False, True], [False, True], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 8, 32], [1, 8, 32], [1, 8, 32], [False, True], [False, True], [False, True]]

----- begin empirical tuning for problem size -----
 N = 10000
Parameters: {'ACOPY_x': [0, 2], 'ACOPY_y': [0, 2], 'RT_K': [0, 3], 'T1_I': [0, 7], 'T1_J': [0, 7], 'T1_K': [0, 7], 'U_K': [0, 30], 'U_J': [0, 30], 'U_I': [0, 30], 'U1_I': [0, 30], 'T2_K': [0, 7], 'T2_J': [0, 7], 'T2_I': [0, 7], 'VEC2': [0, 2], 'VEC1': [0, 2], 'RT_I': [0, 3], 'SCR': [0, 2], 'RT_J': [0, 3]}
Parameter Range Values: {'ACOPY_x': [False, True], 'ACOPY_y': [False, True], 'RT_K': [1, 8, 32], 'T1_I': [1, 16, 32, 64, 128, 256, 512], 'T1_J': [1, 16, 32, 64, 128, 256, 512], 'T1_K': [1, 16, 32, 64, 128, 256, 512], 'U_K': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_J': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U1_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'T2_K': [1, 64, 128, 256, 512, 1024, 2048], 'T2_J': [1, 64, 128, 256, 512, 1024, 2048], 'T2_I': [1, 64, 128, 256, 512, 1024, 2048], 'VEC2': [False, True], 'VEC1': [False, True], 'RT_I': [1, 8, 32], 'SCR': [False, True], 'RT_J': [1, 8, 32]}

----- begin random search -----
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Inverse Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Starting DOPT-anova
Step 0
Generating valid search space of size 330 (does not spend evaluations)
Valid coordinates: 66
Valid coordinates: 132
Valid coordinates: 198
Tested coordinates: 10000
Valid coordinates: 264
Valid coordinates: 330
Valid/Tested configurations: 330/13850
Generated Search Space:
NULL
Clean Info:
Removed Factors: character(0)

Removed Inverse Factors: [1] "ACOPY_x" "ACOPY_y" "SCR"     "VEC1"    "VEC2"   

New Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
New Inverse Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
New Fixed Factors: {}
Full Model:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Fixed Factors: {}
Computing D-Optimal Design
Computing D-Optimal Design with 33 experiments
Design Formula:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Starting "optFederov" run
Using Search Space:
NULL
Data Dimensions: [1] 330  18

    T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
3      2    5    6    3    0    6       1       1   15  15   0  15    0    0
10     3    2    0    1    5    6       1       0    3  12   0   5    0    2
22     4    3    2    0    4    2       1       1   16  26   0   9    1    0
33     4    2    1    0    0    2       1       0   14  28   0  16    2    0
39     5    1    2    4    5    5       0       0   24  22   0   7    0    1
44     1    1    2    2    0    6       1       0   11   0  22   5    0    0
49     2    1    0    5    1    0       0       1   27   0  14   5    0    2
59     2    0    1    5    0    0       1       1    2   0  10  11    0    1
79     0    1    4    4    5    5       1       0   29  23   0  10    0    2
82     5    6    0    3    6    2       0       0    0   7  29   0    0    0
83     5    1    5    0    4    0       1       1   26   0  21  29    0    0
88     2    2    2    6    6    2       0       0   20   0  23   4    1    1
126    3    6    2    2    6    2       0       0   14   0  23   3    2    0
131    1    6    1    3    5    0       0       1   24  29  27   0    1    1
139    5    0    6    4    1    4       1       1    2   8  29   0    2    0
149    1    2    2    1    2    1       0       1    4   9   0   0    0    1
163    4    5    2    2    0    0       1       0   13   8   0   9    0    1
167    2    4    0    6    5    3       1       1   29   0  28  20    0    0
173    1    0    1    4    6    3       0       1   25  10   0   9    1    0
182    5    2    2    6    1    0       1       1   29   0   9   7    0    0
205    2    5    2    2    6    1       1       1   24   6   9   0    0    0
215    0    5    4    4    0    2       0       1   16   0  12  27    0    1
236    6    4    5    0    2    3       0       0   11   2   5   0    2    0
239    1    2    1    6    2    6       1       1   24  12   0   8    1    0
255    1    1    2    3    6    0       1       0   11  18   9   0    1    0
268    5    3    5    6    3    0       0       1    4  22   0  21    0    0
291    5    5    5    5    6    6       1       0   13   9  11   0    1    0
296    5    4    2    0    5    5       0       1    0  15   3   0    1    0
299    1    0    2    4    6    2       1       1   21  27   0   3    0    0
309    2    2    1    2    2    6       0       0    1  22   0  21    0    0
315    4    1    1    2    3    2       1       0   26  26   0  12    2    0
316    0    6    2    0    5    6       0       1   25   0   1  20    2    0
328    0    3    2    1    3    1       0       0   24   6   3   0    0    0
    RT_K SCR VEC1 VEC2
3      2   0    1    1
10     0   0    0    0
22     1   0    1    1
33     0   1    0    0
39     1   0    0    0
44     2   0    0    1
49     0   0    0    1
59     1   1    0    0
79     0   1    1    0
82     2   1    1    1
83     2   0    0    0
88     0   0    1    1
126    0   1    1    0
131    0   0    1    1
139    0   1    0    1
149    0   1    0    0
163    0   1    0    1
167    0   0    0    0
173    0   0    0    0
182    2   1    1    0
205    0   0    1    1
215    0   1    0    0
236    0   0    0    0
239    0   1    1    1
255    0   0    1    0
268    2   0    1    1
291    0   1    0    0
296    0   1    1    0
299    2   0    0    0
309    2   1    0    1
315    0   0    1    0
316    0   0    0    1
328    1   1    0    0

D-Efficiency Approximation: [1] 0.016

Measuring design of size 33
Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Length of requested configs: 1
Code stats:
        Number of loops: 	67
        Max loop nest depth: 	6
        Additions: 		5103
        Multiplications: 	1122
        Divisions: 		0
        Logical: 		0
        Reads: 			7513
        Writes: 		787
        Comparisons:		67
        Gotos: 			0
        
 building the original code:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -DORIGINAL -o __orio_perftest_original.exe __orio_perftest1.c timer_cpu.o -lm
orio.main.tuner.ptest_driver:  failed to compile the original version of the code: "gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -DORIGINAL -o __orio_perftest_original.exe __orio_perftest1.c timer_cpu.o -lm"
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 641, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 559, in dopt_anova
    i)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 506, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 398, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 486, in run
    self.__build(perf_params=perf_params,coord=coord)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 256, in __build
    err('orio.main.tuner.ptest_driver:  failed to compile the original version of the code: "%s"' % cmd)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest1.exe __orio_perftest1.c timer_cpu.o -lm
orio.main.tuner.ptest_driver:  failed to compile the testing code: "gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest1.exe __orio_perftest1.c timer_cpu.o -lm"
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 641, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 559, in dopt_anova
    i)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 506, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 398, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 486, in run
    self.__build(perf_params=perf_params,coord=coord)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 285, in __build
    err('orio.main.tuner.ptest_driver:  failed to compile the testing code: "%s"' % cmd)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  the executable of the test code does not exist
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 641, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 559, in dopt_anova
    i)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 506, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 398, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 308, in __execute
    err('orio.main.tuner.ptest_driver:  the executable of the test code does not exist')

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

 running test:
	 ./__orio_perftest1.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest1.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest1.exe  ' returned non-zero exit status 127
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 641, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 559, in dopt_anova
    i)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 506, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 398, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest1.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 641, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 559, in dopt_anova
    i)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 506, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 398, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
Code stats:
        Number of loops: 	31
        Max loop nest depth: 	5
        Additions: 		4088
        Multiplications: 	1092
        Divisions: 		0
        Logical: 		0
        Reads: 			6233
        Writes: 		641
        Comparisons:		31
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest2.exe __orio_perftest2.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest2.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest2.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest2.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 641, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 559, in dopt_anova
    i)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 506, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 398, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest2.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 641, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 559, in dopt_anova
    i)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 506, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 398, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	111
        Max loop nest depth: 	5
        Additions: 		3113
        Multiplications: 	648
        Divisions: 		0
        Logical: 		0
        Reads: 			5164
        Writes: 		689
        Comparisons:		111
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest3.exe __orio_perftest3.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest3.exe  
Program Test Output: 
{'[4, 3, 2, 0, 4, 2, 1, 1, 16, 26, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.280148}
{'[4, 3, 2, 0, 4, 2, 1, 1, 16, 26, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.276618}
{'[4, 3, 2, 0, 4, 2, 1, 1, 16, 26, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.275013}
{'[4, 3, 2, 0, 4, 2, 1, 1, 16, 26, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.275017}
{'[4, 3, 2, 0, 4, 2, 1, 1, 16, 26, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.274954}
{'[4, 3, 2, 0, 4, 2, 1, 1, 16, 26, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.276066}
{'[4, 3, 2, 0, 4, 2, 1, 1, 16, 26, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.275082}
{'[4, 3, 2, 0, 4, 2, 1, 1, 16, 26, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.282504}
{'[4, 3, 2, 0, 4, 2, 1, 1, 16, 26, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.27566}
{'[4, 3, 2, 0, 4, 2, 1, 1, 16, 26, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.275324}
{'[4, 3, 2, 0, 4, 2, 1, 1, 16, 26, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.27564}
{'[4, 3, 2, 0, 4, 2, 1, 1, 16, 26, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.275528}
{'[4, 3, 2, 0, 4, 2, 1, 1, 16, 26, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.27528}
{'[4, 3, 2, 0, 4, 2, 1, 1, 16, 26, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.27984}
{'[4, 3, 2, 0, 4, 2, 1, 1, 16, 26, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.275546}
{'[4, 3, 2, 0, 4, 2, 1, 1, 16, 26, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.27503}
{'[4, 3, 2, 0, 4, 2, 1, 1, 16, 26, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.275369}
{'[4, 3, 2, 0, 4, 2, 1, 1, 16, 26, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.274807}
{'[4, 3, 2, 0, 4, 2, 1, 1, 16, 26, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.278287}
{'[4, 3, 2, 0, 4, 2, 1, 1, 16, 26, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.276453}
{'[4, 3, 2, 0, 4, 2, 1, 1, 16, 26, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.274618}
{'[4, 3, 2, 0, 4, 2, 1, 1, 16, 26, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.275587}
{'[4, 3, 2, 0, 4, 2, 1, 1, 16, 26, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.275267}
{'[4, 3, 2, 0, 4, 2, 1, 1, 16, 26, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.275035}
{'[4, 3, 2, 0, 4, 2, 1, 1, 16, 26, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.275456}
{'[4, 3, 2, 0, 4, 2, 1, 1, 16, 26, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.279884}
{'[4, 3, 2, 0, 4, 2, 1, 1, 16, 26, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.275413}
{'[4, 3, 2, 0, 4, 2, 1, 1, 16, 26, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.275226}
{'[4, 3, 2, 0, 4, 2, 1, 1, 16, 26, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.275539}
{'[4, 3, 2, 0, 4, 2, 1, 1, 16, 26, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.275564}

out:
 ["{'[4, 3, 2, 0, 4, 2, 1, 1, 16, 26, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.280148}", "{'[4, 3, 2, 0, 4, 2, 1, 1, 16, 26, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.276618}", "{'[4, 3, 2, 0, 4, 2, 1, 1, 16, 26, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.275013}", "{'[4, 3, 2, 0, 4, 2, 1, 1, 16, 26, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.275017}", "{'[4, 3, 2, 0, 4, 2, 1, 1, 16, 26, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.274954}", "{'[4, 3, 2, 0, 4, 2, 1, 1, 16, 26, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.276066}", "{'[4, 3, 2, 0, 4, 2, 1, 1, 16, 26, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.275082}", "{'[4, 3, 2, 0, 4, 2, 1, 1, 16, 26, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.282504}", "{'[4, 3, 2, 0, 4, 2, 1, 1, 16, 26, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.27566}", "{'[4, 3, 2, 0, 4, 2, 1, 1, 16, 26, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.275324}", "{'[4, 3, 2, 0, 4, 2, 1, 1, 16, 26, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.27564}", "{'[4, 3, 2, 0, 4, 2, 1, 1, 16, 26, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.275528}", "{'[4, 3, 2, 0, 4, 2, 1, 1, 16, 26, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.27528}", "{'[4, 3, 2, 0, 4, 2, 1, 1, 16, 26, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.27984}", "{'[4, 3, 2, 0, 4, 2, 1, 1, 16, 26, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.275546}", "{'[4, 3, 2, 0, 4, 2, 1, 1, 16, 26, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.27503}", "{'[4, 3, 2, 0, 4, 2, 1, 1, 16, 26, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.275369}", "{'[4, 3, 2, 0, 4, 2, 1, 1, 16, 26, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.274807}", "{'[4, 3, 2, 0, 4, 2, 1, 1, 16, 26, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.278287}", "{'[4, 3, 2, 0, 4, 2, 1, 1, 16, 26, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.276453}", "{'[4, 3, 2, 0, 4, 2, 1, 1, 16, 26, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.274618}", "{'[4, 3, 2, 0, 4, 2, 1, 1, 16, 26, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.275587}", "{'[4, 3, 2, 0, 4, 2, 1, 1, 16, 26, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.275267}", "{'[4, 3, 2, 0, 4, 2, 1, 1, 16, 26, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.275035}", "{'[4, 3, 2, 0, 4, 2, 1, 1, 16, 26, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.275456}", "{'[4, 3, 2, 0, 4, 2, 1, 1, 16, 26, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.279884}", "{'[4, 3, 2, 0, 4, 2, 1, 1, 16, 26, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.275413}", "{'[4, 3, 2, 0, 4, 2, 1, 1, 16, 26, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.275226}", "{'[4, 3, 2, 0, 4, 2, 1, 1, 16, 26, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.275539}", "{'[4, 3, 2, 0, 4, 2, 1, 1, 16, 26, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.275564}"]
returning from 'run': {'[4, 3, 2, 0, 4, 2, 1, 1, 16, 26, 0, 9, 1, 0, 1, 0, 1, 1]': ([0.280148, 0.276618, 0.275013, 0.275017, 0.274954, 0.276066, 0.275082, 0.282504, 0.27566, 0.275324, 0.27564, 0.275528, 0.27528, 0.27984, 0.275546, 0.27503, 0.275369, 0.274807, 0.278287, 0.276453, 0.274618, 0.275587, 0.275267, 0.275035, 0.275456, 0.279884, 0.275413, 0.275226, 0.275539, 0.275564], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 3, 2, 0, 4, 2, 1, 1, 16, 26, 0, 9, 1, 0, 1, 0, 1, 1]': ([0.280148, 0.276618, 0.275013, 0.275017, 0.274954, 0.276066, 0.275082, 0.282504, 0.27566, 0.275324, 0.27564, 0.275528, 0.27528, 0.27984, 0.275546, 0.27503, 0.275369, 0.274807, 0.278287, 0.276453, 0.274618, 0.275587, 0.275267, 0.275035, 0.275456, 0.279884, 0.275413, 0.275226, 0.275539, 0.275564], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Code stats:
        Number of loops: 	68
        Max loop nest depth: 	6
        Additions: 		4434
        Multiplications: 	1248
        Divisions: 		0
        Logical: 		0
        Reads: 			6904
        Writes: 		810
        Comparisons:		68
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest4.exe __orio_perftest4.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest4.exe  
Program Test Output: 
{'[5, 1, 2, 4, 5, 5, 0, 0, 24, 22, 0, 7, 0, 1, 1, 0, 0, 0]' : 0.368695}
{'[5, 1, 2, 4, 5, 5, 0, 0, 24, 22, 0, 7, 0, 1, 1, 0, 0, 0]' : 0.369111}
{'[5, 1, 2, 4, 5, 5, 0, 0, 24, 22, 0, 7, 0, 1, 1, 0, 0, 0]' : 0.368029}
{'[5, 1, 2, 4, 5, 5, 0, 0, 24, 22, 0, 7, 0, 1, 1, 0, 0, 0]' : 0.374363}
{'[5, 1, 2, 4, 5, 5, 0, 0, 24, 22, 0, 7, 0, 1, 1, 0, 0, 0]' : 0.368142}
{'[5, 1, 2, 4, 5, 5, 0, 0, 24, 22, 0, 7, 0, 1, 1, 0, 0, 0]' : 0.368462}
{'[5, 1, 2, 4, 5, 5, 0, 0, 24, 22, 0, 7, 0, 1, 1, 0, 0, 0]' : 0.368573}
{'[5, 1, 2, 4, 5, 5, 0, 0, 24, 22, 0, 7, 0, 1, 1, 0, 0, 0]' : 0.367904}
{'[5, 1, 2, 4, 5, 5, 0, 0, 24, 22, 0, 7, 0, 1, 1, 0, 0, 0]' : 0.367869}
{'[5, 1, 2, 4, 5, 5, 0, 0, 24, 22, 0, 7, 0, 1, 1, 0, 0, 0]' : 0.368209}
{'[5, 1, 2, 4, 5, 5, 0, 0, 24, 22, 0, 7, 0, 1, 1, 0, 0, 0]' : 0.368188}
{'[5, 1, 2, 4, 5, 5, 0, 0, 24, 22, 0, 7, 0, 1, 1, 0, 0, 0]' : 0.368246}
{'[5, 1, 2, 4, 5, 5, 0, 0, 24, 22, 0, 7, 0, 1, 1, 0, 0, 0]' : 0.367909}
{'[5, 1, 2, 4, 5, 5, 0, 0, 24, 22, 0, 7, 0, 1, 1, 0, 0, 0]' : 0.367902}
{'[5, 1, 2, 4, 5, 5, 0, 0, 24, 22, 0, 7, 0, 1, 1, 0, 0, 0]' : 0.368531}
{'[5, 1, 2, 4, 5, 5, 0, 0, 24, 22, 0, 7, 0, 1, 1, 0, 0, 0]' : 0.367972}
{'[5, 1, 2, 4, 5, 5, 0, 0, 24, 22, 0, 7, 0, 1, 1, 0, 0, 0]' : 0.368037}
{'[5, 1, 2, 4, 5, 5, 0, 0, 24, 22, 0, 7, 0, 1, 1, 0, 0, 0]' : 0.368026}
{'[5, 1, 2, 4, 5, 5, 0, 0, 24, 22, 0, 7, 0, 1, 1, 0, 0, 0]' : 0.368232}
{'[5, 1, 2, 4, 5, 5, 0, 0, 24, 22, 0, 7, 0, 1, 1, 0, 0, 0]' : 0.371204}
{'[5, 1, 2, 4, 5, 5, 0, 0, 24, 22, 0, 7, 0, 1, 1, 0, 0, 0]' : 0.367759}
{'[5, 1, 2, 4, 5, 5, 0, 0, 24, 22, 0, 7, 0, 1, 1, 0, 0, 0]' : 0.368167}
{'[5, 1, 2, 4, 5, 5, 0, 0, 24, 22, 0, 7, 0, 1, 1, 0, 0, 0]' : 0.368801}
{'[5, 1, 2, 4, 5, 5, 0, 0, 24, 22, 0, 7, 0, 1, 1, 0, 0, 0]' : 0.368358}
{'[5, 1, 2, 4, 5, 5, 0, 0, 24, 22, 0, 7, 0, 1, 1, 0, 0, 0]' : 0.367087}
{'[5, 1, 2, 4, 5, 5, 0, 0, 24, 22, 0, 7, 0, 1, 1, 0, 0, 0]' : 0.367941}
{'[5, 1, 2, 4, 5, 5, 0, 0, 24, 22, 0, 7, 0, 1, 1, 0, 0, 0]' : 0.367959}
{'[5, 1, 2, 4, 5, 5, 0, 0, 24, 22, 0, 7, 0, 1, 1, 0, 0, 0]' : 0.368233}
{'[5, 1, 2, 4, 5, 5, 0, 0, 24, 22, 0, 7, 0, 1, 1, 0, 0, 0]' : 0.368002}
{'[5, 1, 2, 4, 5, 5, 0, 0, 24, 22, 0, 7, 0, 1, 1, 0, 0, 0]' : 0.367884}

out:
 ["{'[5, 1, 2, 4, 5, 5, 0, 0, 24, 22, 0, 7, 0, 1, 1, 0, 0, 0]' : 0.368695}", "{'[5, 1, 2, 4, 5, 5, 0, 0, 24, 22, 0, 7, 0, 1, 1, 0, 0, 0]' : 0.369111}", "{'[5, 1, 2, 4, 5, 5, 0, 0, 24, 22, 0, 7, 0, 1, 1, 0, 0, 0]' : 0.368029}", "{'[5, 1, 2, 4, 5, 5, 0, 0, 24, 22, 0, 7, 0, 1, 1, 0, 0, 0]' : 0.374363}", "{'[5, 1, 2, 4, 5, 5, 0, 0, 24, 22, 0, 7, 0, 1, 1, 0, 0, 0]' : 0.368142}", "{'[5, 1, 2, 4, 5, 5, 0, 0, 24, 22, 0, 7, 0, 1, 1, 0, 0, 0]' : 0.368462}", "{'[5, 1, 2, 4, 5, 5, 0, 0, 24, 22, 0, 7, 0, 1, 1, 0, 0, 0]' : 0.368573}", "{'[5, 1, 2, 4, 5, 5, 0, 0, 24, 22, 0, 7, 0, 1, 1, 0, 0, 0]' : 0.367904}", "{'[5, 1, 2, 4, 5, 5, 0, 0, 24, 22, 0, 7, 0, 1, 1, 0, 0, 0]' : 0.367869}", "{'[5, 1, 2, 4, 5, 5, 0, 0, 24, 22, 0, 7, 0, 1, 1, 0, 0, 0]' : 0.368209}", "{'[5, 1, 2, 4, 5, 5, 0, 0, 24, 22, 0, 7, 0, 1, 1, 0, 0, 0]' : 0.368188}", "{'[5, 1, 2, 4, 5, 5, 0, 0, 24, 22, 0, 7, 0, 1, 1, 0, 0, 0]' : 0.368246}", "{'[5, 1, 2, 4, 5, 5, 0, 0, 24, 22, 0, 7, 0, 1, 1, 0, 0, 0]' : 0.367909}", "{'[5, 1, 2, 4, 5, 5, 0, 0, 24, 22, 0, 7, 0, 1, 1, 0, 0, 0]' : 0.367902}", "{'[5, 1, 2, 4, 5, 5, 0, 0, 24, 22, 0, 7, 0, 1, 1, 0, 0, 0]' : 0.368531}", "{'[5, 1, 2, 4, 5, 5, 0, 0, 24, 22, 0, 7, 0, 1, 1, 0, 0, 0]' : 0.367972}", "{'[5, 1, 2, 4, 5, 5, 0, 0, 24, 22, 0, 7, 0, 1, 1, 0, 0, 0]' : 0.368037}", "{'[5, 1, 2, 4, 5, 5, 0, 0, 24, 22, 0, 7, 0, 1, 1, 0, 0, 0]' : 0.368026}", "{'[5, 1, 2, 4, 5, 5, 0, 0, 24, 22, 0, 7, 0, 1, 1, 0, 0, 0]' : 0.368232}", "{'[5, 1, 2, 4, 5, 5, 0, 0, 24, 22, 0, 7, 0, 1, 1, 0, 0, 0]' : 0.371204}", "{'[5, 1, 2, 4, 5, 5, 0, 0, 24, 22, 0, 7, 0, 1, 1, 0, 0, 0]' : 0.367759}", "{'[5, 1, 2, 4, 5, 5, 0, 0, 24, 22, 0, 7, 0, 1, 1, 0, 0, 0]' : 0.368167}", "{'[5, 1, 2, 4, 5, 5, 0, 0, 24, 22, 0, 7, 0, 1, 1, 0, 0, 0]' : 0.368801}", "{'[5, 1, 2, 4, 5, 5, 0, 0, 24, 22, 0, 7, 0, 1, 1, 0, 0, 0]' : 0.368358}", "{'[5, 1, 2, 4, 5, 5, 0, 0, 24, 22, 0, 7, 0, 1, 1, 0, 0, 0]' : 0.367087}", "{'[5, 1, 2, 4, 5, 5, 0, 0, 24, 22, 0, 7, 0, 1, 1, 0, 0, 0]' : 0.367941}", "{'[5, 1, 2, 4, 5, 5, 0, 0, 24, 22, 0, 7, 0, 1, 1, 0, 0, 0]' : 0.367959}", "{'[5, 1, 2, 4, 5, 5, 0, 0, 24, 22, 0, 7, 0, 1, 1, 0, 0, 0]' : 0.368233}", "{'[5, 1, 2, 4, 5, 5, 0, 0, 24, 22, 0, 7, 0, 1, 1, 0, 0, 0]' : 0.368002}", "{'[5, 1, 2, 4, 5, 5, 0, 0, 24, 22, 0, 7, 0, 1, 1, 0, 0, 0]' : 0.367884}"]
returning from 'run': {'[5, 1, 2, 4, 5, 5, 0, 0, 24, 22, 0, 7, 0, 1, 1, 0, 0, 0]': ([0.368695, 0.369111, 0.368029, 0.374363, 0.368142, 0.368462, 0.368573, 0.367904, 0.367869, 0.368209, 0.368188, 0.368246, 0.367909, 0.367902, 0.368531, 0.367972, 0.368037, 0.368026, 0.368232, 0.371204, 0.367759, 0.368167, 0.368801, 0.368358, 0.367087, 0.367941, 0.367959, 0.368233, 0.368002, 0.367884], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 1, 2, 4, 5, 5, 0, 0, 24, 22, 0, 7, 0, 1, 1, 0, 0, 0]': ([0.368695, 0.369111, 0.368029, 0.374363, 0.368142, 0.368462, 0.368573, 0.367904, 0.367869, 0.368209, 0.368188, 0.368246, 0.367909, 0.367902, 0.368531, 0.367972, 0.368037, 0.368026, 0.368232, 0.371204, 0.367759, 0.368167, 0.368801, 0.368358, 0.367087, 0.367941, 0.367959, 0.368233, 0.368002, 0.367884], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		375
        Multiplications: 	126
        Divisions: 		0
        Logical: 		0
        Reads: 			799
        Writes: 		113
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest5.exe __orio_perftest5.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest5.exe  
Program Test Output: 
{'[1, 1, 2, 2, 0, 6, 1, 0, 11, 0, 22, 5, 0, 0, 2, 0, 0, 1]' : 0.784763}
{'[1, 1, 2, 2, 0, 6, 1, 0, 11, 0, 22, 5, 0, 0, 2, 0, 0, 1]' : 0.788416}
{'[1, 1, 2, 2, 0, 6, 1, 0, 11, 0, 22, 5, 0, 0, 2, 0, 0, 1]' : 0.78869}
{'[1, 1, 2, 2, 0, 6, 1, 0, 11, 0, 22, 5, 0, 0, 2, 0, 0, 1]' : 0.788835}
{'[1, 1, 2, 2, 0, 6, 1, 0, 11, 0, 22, 5, 0, 0, 2, 0, 0, 1]' : 0.788271}
{'[1, 1, 2, 2, 0, 6, 1, 0, 11, 0, 22, 5, 0, 0, 2, 0, 0, 1]' : 0.784691}
{'[1, 1, 2, 2, 0, 6, 1, 0, 11, 0, 22, 5, 0, 0, 2, 0, 0, 1]' : 0.788215}
{'[1, 1, 2, 2, 0, 6, 1, 0, 11, 0, 22, 5, 0, 0, 2, 0, 0, 1]' : 0.7886}
{'[1, 1, 2, 2, 0, 6, 1, 0, 11, 0, 22, 5, 0, 0, 2, 0, 0, 1]' : 0.788509}
{'[1, 1, 2, 2, 0, 6, 1, 0, 11, 0, 22, 5, 0, 0, 2, 0, 0, 1]' : 0.788565}
{'[1, 1, 2, 2, 0, 6, 1, 0, 11, 0, 22, 5, 0, 0, 2, 0, 0, 1]' : 0.785361}
{'[1, 1, 2, 2, 0, 6, 1, 0, 11, 0, 22, 5, 0, 0, 2, 0, 0, 1]' : 0.788418}
{'[1, 1, 2, 2, 0, 6, 1, 0, 11, 0, 22, 5, 0, 0, 2, 0, 0, 1]' : 0.788188}
{'[1, 1, 2, 2, 0, 6, 1, 0, 11, 0, 22, 5, 0, 0, 2, 0, 0, 1]' : 0.788643}
{'[1, 1, 2, 2, 0, 6, 1, 0, 11, 0, 22, 5, 0, 0, 2, 0, 0, 1]' : 0.785159}
{'[1, 1, 2, 2, 0, 6, 1, 0, 11, 0, 22, 5, 0, 0, 2, 0, 0, 1]' : 0.788199}
{'[1, 1, 2, 2, 0, 6, 1, 0, 11, 0, 22, 5, 0, 0, 2, 0, 0, 1]' : 0.788006}
{'[1, 1, 2, 2, 0, 6, 1, 0, 11, 0, 22, 5, 0, 0, 2, 0, 0, 1]' : 0.798098}
{'[1, 1, 2, 2, 0, 6, 1, 0, 11, 0, 22, 5, 0, 0, 2, 0, 0, 1]' : 0.785513}
{'[1, 1, 2, 2, 0, 6, 1, 0, 11, 0, 22, 5, 0, 0, 2, 0, 0, 1]' : 0.786803}
{'[1, 1, 2, 2, 0, 6, 1, 0, 11, 0, 22, 5, 0, 0, 2, 0, 0, 1]' : 0.790309}
{'[1, 1, 2, 2, 0, 6, 1, 0, 11, 0, 22, 5, 0, 0, 2, 0, 0, 1]' : 0.784724}
{'[1, 1, 2, 2, 0, 6, 1, 0, 11, 0, 22, 5, 0, 0, 2, 0, 0, 1]' : 0.792465}
{'[1, 1, 2, 2, 0, 6, 1, 0, 11, 0, 22, 5, 0, 0, 2, 0, 0, 1]' : 0.78585}
{'[1, 1, 2, 2, 0, 6, 1, 0, 11, 0, 22, 5, 0, 0, 2, 0, 0, 1]' : 0.785023}
{'[1, 1, 2, 2, 0, 6, 1, 0, 11, 0, 22, 5, 0, 0, 2, 0, 0, 1]' : 0.78515}
{'[1, 1, 2, 2, 0, 6, 1, 0, 11, 0, 22, 5, 0, 0, 2, 0, 0, 1]' : 0.788228}
{'[1, 1, 2, 2, 0, 6, 1, 0, 11, 0, 22, 5, 0, 0, 2, 0, 0, 1]' : 0.790445}
{'[1, 1, 2, 2, 0, 6, 1, 0, 11, 0, 22, 5, 0, 0, 2, 0, 0, 1]' : 0.785494}
{'[1, 1, 2, 2, 0, 6, 1, 0, 11, 0, 22, 5, 0, 0, 2, 0, 0, 1]' : 0.785568}

out:
 ["{'[1, 1, 2, 2, 0, 6, 1, 0, 11, 0, 22, 5, 0, 0, 2, 0, 0, 1]' : 0.784763}", "{'[1, 1, 2, 2, 0, 6, 1, 0, 11, 0, 22, 5, 0, 0, 2, 0, 0, 1]' : 0.788416}", "{'[1, 1, 2, 2, 0, 6, 1, 0, 11, 0, 22, 5, 0, 0, 2, 0, 0, 1]' : 0.78869}", "{'[1, 1, 2, 2, 0, 6, 1, 0, 11, 0, 22, 5, 0, 0, 2, 0, 0, 1]' : 0.788835}", "{'[1, 1, 2, 2, 0, 6, 1, 0, 11, 0, 22, 5, 0, 0, 2, 0, 0, 1]' : 0.788271}", "{'[1, 1, 2, 2, 0, 6, 1, 0, 11, 0, 22, 5, 0, 0, 2, 0, 0, 1]' : 0.784691}", "{'[1, 1, 2, 2, 0, 6, 1, 0, 11, 0, 22, 5, 0, 0, 2, 0, 0, 1]' : 0.788215}", "{'[1, 1, 2, 2, 0, 6, 1, 0, 11, 0, 22, 5, 0, 0, 2, 0, 0, 1]' : 0.7886}", "{'[1, 1, 2, 2, 0, 6, 1, 0, 11, 0, 22, 5, 0, 0, 2, 0, 0, 1]' : 0.788509}", "{'[1, 1, 2, 2, 0, 6, 1, 0, 11, 0, 22, 5, 0, 0, 2, 0, 0, 1]' : 0.788565}", "{'[1, 1, 2, 2, 0, 6, 1, 0, 11, 0, 22, 5, 0, 0, 2, 0, 0, 1]' : 0.785361}", "{'[1, 1, 2, 2, 0, 6, 1, 0, 11, 0, 22, 5, 0, 0, 2, 0, 0, 1]' : 0.788418}", "{'[1, 1, 2, 2, 0, 6, 1, 0, 11, 0, 22, 5, 0, 0, 2, 0, 0, 1]' : 0.788188}", "{'[1, 1, 2, 2, 0, 6, 1, 0, 11, 0, 22, 5, 0, 0, 2, 0, 0, 1]' : 0.788643}", "{'[1, 1, 2, 2, 0, 6, 1, 0, 11, 0, 22, 5, 0, 0, 2, 0, 0, 1]' : 0.785159}", "{'[1, 1, 2, 2, 0, 6, 1, 0, 11, 0, 22, 5, 0, 0, 2, 0, 0, 1]' : 0.788199}", "{'[1, 1, 2, 2, 0, 6, 1, 0, 11, 0, 22, 5, 0, 0, 2, 0, 0, 1]' : 0.788006}", "{'[1, 1, 2, 2, 0, 6, 1, 0, 11, 0, 22, 5, 0, 0, 2, 0, 0, 1]' : 0.798098}", "{'[1, 1, 2, 2, 0, 6, 1, 0, 11, 0, 22, 5, 0, 0, 2, 0, 0, 1]' : 0.785513}", "{'[1, 1, 2, 2, 0, 6, 1, 0, 11, 0, 22, 5, 0, 0, 2, 0, 0, 1]' : 0.786803}", "{'[1, 1, 2, 2, 0, 6, 1, 0, 11, 0, 22, 5, 0, 0, 2, 0, 0, 1]' : 0.790309}", "{'[1, 1, 2, 2, 0, 6, 1, 0, 11, 0, 22, 5, 0, 0, 2, 0, 0, 1]' : 0.784724}", "{'[1, 1, 2, 2, 0, 6, 1, 0, 11, 0, 22, 5, 0, 0, 2, 0, 0, 1]' : 0.792465}", "{'[1, 1, 2, 2, 0, 6, 1, 0, 11, 0, 22, 5, 0, 0, 2, 0, 0, 1]' : 0.78585}", "{'[1, 1, 2, 2, 0, 6, 1, 0, 11, 0, 22, 5, 0, 0, 2, 0, 0, 1]' : 0.785023}", "{'[1, 1, 2, 2, 0, 6, 1, 0, 11, 0, 22, 5, 0, 0, 2, 0, 0, 1]' : 0.78515}", "{'[1, 1, 2, 2, 0, 6, 1, 0, 11, 0, 22, 5, 0, 0, 2, 0, 0, 1]' : 0.788228}", "{'[1, 1, 2, 2, 0, 6, 1, 0, 11, 0, 22, 5, 0, 0, 2, 0, 0, 1]' : 0.790445}", "{'[1, 1, 2, 2, 0, 6, 1, 0, 11, 0, 22, 5, 0, 0, 2, 0, 0, 1]' : 0.785494}", "{'[1, 1, 2, 2, 0, 6, 1, 0, 11, 0, 22, 5, 0, 0, 2, 0, 0, 1]' : 0.785568}"]
returning from 'run': {'[1, 1, 2, 2, 0, 6, 1, 0, 11, 0, 22, 5, 0, 0, 2, 0, 0, 1]': ([0.784763, 0.788416, 0.78869, 0.788835, 0.788271, 0.784691, 0.788215, 0.7886, 0.788509, 0.788565, 0.785361, 0.788418, 0.788188, 0.788643, 0.785159, 0.788199, 0.788006, 0.798098, 0.785513, 0.786803, 0.790309, 0.784724, 0.792465, 0.78585, 0.785023, 0.78515, 0.788228, 0.790445, 0.785494, 0.785568], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 1, 2, 2, 0, 6, 1, 0, 11, 0, 22, 5, 0, 0, 2, 0, 0, 1]': ([0.784763, 0.788416, 0.78869, 0.788835, 0.788271, 0.784691, 0.788215, 0.7886, 0.788509, 0.788565, 0.785361, 0.788418, 0.788188, 0.788643, 0.785159, 0.788199, 0.788006, 0.798098, 0.785513, 0.786803, 0.790309, 0.784724, 0.792465, 0.78585, 0.785023, 0.78515, 0.788228, 0.790445, 0.785494, 0.785568], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	6
        Additions: 		289
        Multiplications: 	110
        Divisions: 		0
        Logical: 		0
        Reads: 			704
        Writes: 		116
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest6.exe __orio_perftest6.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest6.exe  
Program Test Output: 
{'[2, 1, 0, 5, 1, 0, 0, 1, 27, 0, 14, 5, 0, 2, 0, 0, 0, 1]' : 0.726467}
{'[2, 1, 0, 5, 1, 0, 0, 1, 27, 0, 14, 5, 0, 2, 0, 0, 0, 1]' : 0.7265}
{'[2, 1, 0, 5, 1, 0, 0, 1, 27, 0, 14, 5, 0, 2, 0, 0, 0, 1]' : 0.726565}
{'[2, 1, 0, 5, 1, 0, 0, 1, 27, 0, 14, 5, 0, 2, 0, 0, 0, 1]' : 0.726602}
{'[2, 1, 0, 5, 1, 0, 0, 1, 27, 0, 14, 5, 0, 2, 0, 0, 0, 1]' : 0.726746}
{'[2, 1, 0, 5, 1, 0, 0, 1, 27, 0, 14, 5, 0, 2, 0, 0, 0, 1]' : 0.726691}
{'[2, 1, 0, 5, 1, 0, 0, 1, 27, 0, 14, 5, 0, 2, 0, 0, 0, 1]' : 0.727688}
{'[2, 1, 0, 5, 1, 0, 0, 1, 27, 0, 14, 5, 0, 2, 0, 0, 0, 1]' : 0.727443}
{'[2, 1, 0, 5, 1, 0, 0, 1, 27, 0, 14, 5, 0, 2, 0, 0, 0, 1]' : 0.727958}
{'[2, 1, 0, 5, 1, 0, 0, 1, 27, 0, 14, 5, 0, 2, 0, 0, 0, 1]' : 0.728789}
{'[2, 1, 0, 5, 1, 0, 0, 1, 27, 0, 14, 5, 0, 2, 0, 0, 0, 1]' : 0.733356}
{'[2, 1, 0, 5, 1, 0, 0, 1, 27, 0, 14, 5, 0, 2, 0, 0, 0, 1]' : 0.72982}
{'[2, 1, 0, 5, 1, 0, 0, 1, 27, 0, 14, 5, 0, 2, 0, 0, 0, 1]' : 0.728158}
{'[2, 1, 0, 5, 1, 0, 0, 1, 27, 0, 14, 5, 0, 2, 0, 0, 0, 1]' : 0.727468}
{'[2, 1, 0, 5, 1, 0, 0, 1, 27, 0, 14, 5, 0, 2, 0, 0, 0, 1]' : 0.727359}
{'[2, 1, 0, 5, 1, 0, 0, 1, 27, 0, 14, 5, 0, 2, 0, 0, 0, 1]' : 0.727799}
{'[2, 1, 0, 5, 1, 0, 0, 1, 27, 0, 14, 5, 0, 2, 0, 0, 0, 1]' : 0.727203}
{'[2, 1, 0, 5, 1, 0, 0, 1, 27, 0, 14, 5, 0, 2, 0, 0, 0, 1]' : 0.727446}
{'[2, 1, 0, 5, 1, 0, 0, 1, 27, 0, 14, 5, 0, 2, 0, 0, 0, 1]' : 0.72707}
{'[2, 1, 0, 5, 1, 0, 0, 1, 27, 0, 14, 5, 0, 2, 0, 0, 0, 1]' : 0.727423}
{'[2, 1, 0, 5, 1, 0, 0, 1, 27, 0, 14, 5, 0, 2, 0, 0, 0, 1]' : 0.72749}
{'[2, 1, 0, 5, 1, 0, 0, 1, 27, 0, 14, 5, 0, 2, 0, 0, 0, 1]' : 0.727477}
{'[2, 1, 0, 5, 1, 0, 0, 1, 27, 0, 14, 5, 0, 2, 0, 0, 0, 1]' : 0.727124}
{'[2, 1, 0, 5, 1, 0, 0, 1, 27, 0, 14, 5, 0, 2, 0, 0, 0, 1]' : 0.727497}
{'[2, 1, 0, 5, 1, 0, 0, 1, 27, 0, 14, 5, 0, 2, 0, 0, 0, 1]' : 0.72732}
{'[2, 1, 0, 5, 1, 0, 0, 1, 27, 0, 14, 5, 0, 2, 0, 0, 0, 1]' : 0.727615}
{'[2, 1, 0, 5, 1, 0, 0, 1, 27, 0, 14, 5, 0, 2, 0, 0, 0, 1]' : 0.728438}
{'[2, 1, 0, 5, 1, 0, 0, 1, 27, 0, 14, 5, 0, 2, 0, 0, 0, 1]' : 0.727497}
{'[2, 1, 0, 5, 1, 0, 0, 1, 27, 0, 14, 5, 0, 2, 0, 0, 0, 1]' : 0.728187}
{'[2, 1, 0, 5, 1, 0, 0, 1, 27, 0, 14, 5, 0, 2, 0, 0, 0, 1]' : 0.72774}

out:
 ["{'[2, 1, 0, 5, 1, 0, 0, 1, 27, 0, 14, 5, 0, 2, 0, 0, 0, 1]' : 0.726467}", "{'[2, 1, 0, 5, 1, 0, 0, 1, 27, 0, 14, 5, 0, 2, 0, 0, 0, 1]' : 0.7265}", "{'[2, 1, 0, 5, 1, 0, 0, 1, 27, 0, 14, 5, 0, 2, 0, 0, 0, 1]' : 0.726565}", "{'[2, 1, 0, 5, 1, 0, 0, 1, 27, 0, 14, 5, 0, 2, 0, 0, 0, 1]' : 0.726602}", "{'[2, 1, 0, 5, 1, 0, 0, 1, 27, 0, 14, 5, 0, 2, 0, 0, 0, 1]' : 0.726746}", "{'[2, 1, 0, 5, 1, 0, 0, 1, 27, 0, 14, 5, 0, 2, 0, 0, 0, 1]' : 0.726691}", "{'[2, 1, 0, 5, 1, 0, 0, 1, 27, 0, 14, 5, 0, 2, 0, 0, 0, 1]' : 0.727688}", "{'[2, 1, 0, 5, 1, 0, 0, 1, 27, 0, 14, 5, 0, 2, 0, 0, 0, 1]' : 0.727443}", "{'[2, 1, 0, 5, 1, 0, 0, 1, 27, 0, 14, 5, 0, 2, 0, 0, 0, 1]' : 0.727958}", "{'[2, 1, 0, 5, 1, 0, 0, 1, 27, 0, 14, 5, 0, 2, 0, 0, 0, 1]' : 0.728789}", "{'[2, 1, 0, 5, 1, 0, 0, 1, 27, 0, 14, 5, 0, 2, 0, 0, 0, 1]' : 0.733356}", "{'[2, 1, 0, 5, 1, 0, 0, 1, 27, 0, 14, 5, 0, 2, 0, 0, 0, 1]' : 0.72982}", "{'[2, 1, 0, 5, 1, 0, 0, 1, 27, 0, 14, 5, 0, 2, 0, 0, 0, 1]' : 0.728158}", "{'[2, 1, 0, 5, 1, 0, 0, 1, 27, 0, 14, 5, 0, 2, 0, 0, 0, 1]' : 0.727468}", "{'[2, 1, 0, 5, 1, 0, 0, 1, 27, 0, 14, 5, 0, 2, 0, 0, 0, 1]' : 0.727359}", "{'[2, 1, 0, 5, 1, 0, 0, 1, 27, 0, 14, 5, 0, 2, 0, 0, 0, 1]' : 0.727799}", "{'[2, 1, 0, 5, 1, 0, 0, 1, 27, 0, 14, 5, 0, 2, 0, 0, 0, 1]' : 0.727203}", "{'[2, 1, 0, 5, 1, 0, 0, 1, 27, 0, 14, 5, 0, 2, 0, 0, 0, 1]' : 0.727446}", "{'[2, 1, 0, 5, 1, 0, 0, 1, 27, 0, 14, 5, 0, 2, 0, 0, 0, 1]' : 0.72707}", "{'[2, 1, 0, 5, 1, 0, 0, 1, 27, 0, 14, 5, 0, 2, 0, 0, 0, 1]' : 0.727423}", "{'[2, 1, 0, 5, 1, 0, 0, 1, 27, 0, 14, 5, 0, 2, 0, 0, 0, 1]' : 0.72749}", "{'[2, 1, 0, 5, 1, 0, 0, 1, 27, 0, 14, 5, 0, 2, 0, 0, 0, 1]' : 0.727477}", "{'[2, 1, 0, 5, 1, 0, 0, 1, 27, 0, 14, 5, 0, 2, 0, 0, 0, 1]' : 0.727124}", "{'[2, 1, 0, 5, 1, 0, 0, 1, 27, 0, 14, 5, 0, 2, 0, 0, 0, 1]' : 0.727497}", "{'[2, 1, 0, 5, 1, 0, 0, 1, 27, 0, 14, 5, 0, 2, 0, 0, 0, 1]' : 0.72732}", "{'[2, 1, 0, 5, 1, 0, 0, 1, 27, 0, 14, 5, 0, 2, 0, 0, 0, 1]' : 0.727615}", "{'[2, 1, 0, 5, 1, 0, 0, 1, 27, 0, 14, 5, 0, 2, 0, 0, 0, 1]' : 0.728438}", "{'[2, 1, 0, 5, 1, 0, 0, 1, 27, 0, 14, 5, 0, 2, 0, 0, 0, 1]' : 0.727497}", "{'[2, 1, 0, 5, 1, 0, 0, 1, 27, 0, 14, 5, 0, 2, 0, 0, 0, 1]' : 0.728187}", "{'[2, 1, 0, 5, 1, 0, 0, 1, 27, 0, 14, 5, 0, 2, 0, 0, 0, 1]' : 0.72774}"]
returning from 'run': {'[2, 1, 0, 5, 1, 0, 0, 1, 27, 0, 14, 5, 0, 2, 0, 0, 0, 1]': ([0.726467, 0.7265, 0.726565, 0.726602, 0.726746, 0.726691, 0.727688, 0.727443, 0.727958, 0.728789, 0.733356, 0.72982, 0.728158, 0.727468, 0.727359, 0.727799, 0.727203, 0.727446, 0.72707, 0.727423, 0.72749, 0.727477, 0.727124, 0.727497, 0.72732, 0.727615, 0.728438, 0.727497, 0.728187, 0.72774], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 1, 0, 5, 1, 0, 0, 1, 27, 0, 14, 5, 0, 2, 0, 0, 0, 1]': ([0.726467, 0.7265, 0.726565, 0.726602, 0.726746, 0.726691, 0.727688, 0.727443, 0.727958, 0.728789, 0.733356, 0.72982, 0.728158, 0.727468, 0.727359, 0.727799, 0.727203, 0.727446, 0.72707, 0.727423, 0.72749, 0.727477, 0.727124, 0.727497, 0.72732, 0.727615, 0.728438, 0.727497, 0.728187, 0.72774], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	5
        Additions: 		116
        Multiplications: 	32
        Divisions: 		0
        Logical: 		0
        Reads: 			271
        Writes: 		61
        Comparisons:		10
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest7.exe __orio_perftest7.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest7.exe  
Program Test Output: 
{'[2, 0, 1, 5, 0, 0, 1, 1, 2, 0, 10, 11, 0, 1, 1, 1, 0, 0]' : 0.97956}
{'[2, 0, 1, 5, 0, 0, 1, 1, 2, 0, 10, 11, 0, 1, 1, 1, 0, 0]' : 0.979673}
{'[2, 0, 1, 5, 0, 0, 1, 1, 2, 0, 10, 11, 0, 1, 1, 1, 0, 0]' : 0.979332}
{'[2, 0, 1, 5, 0, 0, 1, 1, 2, 0, 10, 11, 0, 1, 1, 1, 0, 0]' : 0.979406}
{'[2, 0, 1, 5, 0, 0, 1, 1, 2, 0, 10, 11, 0, 1, 1, 1, 0, 0]' : 0.979439}
{'[2, 0, 1, 5, 0, 0, 1, 1, 2, 0, 10, 11, 0, 1, 1, 1, 0, 0]' : 1.02178}
{'[2, 0, 1, 5, 0, 0, 1, 1, 2, 0, 10, 11, 0, 1, 1, 1, 0, 0]' : 0.979793}
{'[2, 0, 1, 5, 0, 0, 1, 1, 2, 0, 10, 11, 0, 1, 1, 1, 0, 0]' : 0.980286}
{'[2, 0, 1, 5, 0, 0, 1, 1, 2, 0, 10, 11, 0, 1, 1, 1, 0, 0]' : 0.979372}
{'[2, 0, 1, 5, 0, 0, 1, 1, 2, 0, 10, 11, 0, 1, 1, 1, 0, 0]' : 0.979655}
{'[2, 0, 1, 5, 0, 0, 1, 1, 2, 0, 10, 11, 0, 1, 1, 1, 0, 0]' : 0.979336}
{'[2, 0, 1, 5, 0, 0, 1, 1, 2, 0, 10, 11, 0, 1, 1, 1, 0, 0]' : 0.979404}
{'[2, 0, 1, 5, 0, 0, 1, 1, 2, 0, 10, 11, 0, 1, 1, 1, 0, 0]' : 0.979382}
{'[2, 0, 1, 5, 0, 0, 1, 1, 2, 0, 10, 11, 0, 1, 1, 1, 0, 0]' : 0.979601}
{'[2, 0, 1, 5, 0, 0, 1, 1, 2, 0, 10, 11, 0, 1, 1, 1, 0, 0]' : 0.97935}
{'[2, 0, 1, 5, 0, 0, 1, 1, 2, 0, 10, 11, 0, 1, 1, 1, 0, 0]' : 0.979424}
{'[2, 0, 1, 5, 0, 0, 1, 1, 2, 0, 10, 11, 0, 1, 1, 1, 0, 0]' : 1.08184}
{'[2, 0, 1, 5, 0, 0, 1, 1, 2, 0, 10, 11, 0, 1, 1, 1, 0, 0]' : 0.979565}
{'[2, 0, 1, 5, 0, 0, 1, 1, 2, 0, 10, 11, 0, 1, 1, 1, 0, 0]' : 0.979673}
{'[2, 0, 1, 5, 0, 0, 1, 1, 2, 0, 10, 11, 0, 1, 1, 1, 0, 0]' : 0.980032}
{'[2, 0, 1, 5, 0, 0, 1, 1, 2, 0, 10, 11, 0, 1, 1, 1, 0, 0]' : 0.979827}
{'[2, 0, 1, 5, 0, 0, 1, 1, 2, 0, 10, 11, 0, 1, 1, 1, 0, 0]' : 0.979822}
{'[2, 0, 1, 5, 0, 0, 1, 1, 2, 0, 10, 11, 0, 1, 1, 1, 0, 0]' : 0.980243}
{'[2, 0, 1, 5, 0, 0, 1, 1, 2, 0, 10, 11, 0, 1, 1, 1, 0, 0]' : 0.980226}
{'[2, 0, 1, 5, 0, 0, 1, 1, 2, 0, 10, 11, 0, 1, 1, 1, 0, 0]' : 0.979465}
{'[2, 0, 1, 5, 0, 0, 1, 1, 2, 0, 10, 11, 0, 1, 1, 1, 0, 0]' : 0.979443}
{'[2, 0, 1, 5, 0, 0, 1, 1, 2, 0, 10, 11, 0, 1, 1, 1, 0, 0]' : 0.979343}
{'[2, 0, 1, 5, 0, 0, 1, 1, 2, 0, 10, 11, 0, 1, 1, 1, 0, 0]' : 0.979396}
{'[2, 0, 1, 5, 0, 0, 1, 1, 2, 0, 10, 11, 0, 1, 1, 1, 0, 0]' : 0.979353}
{'[2, 0, 1, 5, 0, 0, 1, 1, 2, 0, 10, 11, 0, 1, 1, 1, 0, 0]' : 0.979532}

out:
 ["{'[2, 0, 1, 5, 0, 0, 1, 1, 2, 0, 10, 11, 0, 1, 1, 1, 0, 0]' : 0.97956}", "{'[2, 0, 1, 5, 0, 0, 1, 1, 2, 0, 10, 11, 0, 1, 1, 1, 0, 0]' : 0.979673}", "{'[2, 0, 1, 5, 0, 0, 1, 1, 2, 0, 10, 11, 0, 1, 1, 1, 0, 0]' : 0.979332}", "{'[2, 0, 1, 5, 0, 0, 1, 1, 2, 0, 10, 11, 0, 1, 1, 1, 0, 0]' : 0.979406}", "{'[2, 0, 1, 5, 0, 0, 1, 1, 2, 0, 10, 11, 0, 1, 1, 1, 0, 0]' : 0.979439}", "{'[2, 0, 1, 5, 0, 0, 1, 1, 2, 0, 10, 11, 0, 1, 1, 1, 0, 0]' : 1.02178}", "{'[2, 0, 1, 5, 0, 0, 1, 1, 2, 0, 10, 11, 0, 1, 1, 1, 0, 0]' : 0.979793}", "{'[2, 0, 1, 5, 0, 0, 1, 1, 2, 0, 10, 11, 0, 1, 1, 1, 0, 0]' : 0.980286}", "{'[2, 0, 1, 5, 0, 0, 1, 1, 2, 0, 10, 11, 0, 1, 1, 1, 0, 0]' : 0.979372}", "{'[2, 0, 1, 5, 0, 0, 1, 1, 2, 0, 10, 11, 0, 1, 1, 1, 0, 0]' : 0.979655}", "{'[2, 0, 1, 5, 0, 0, 1, 1, 2, 0, 10, 11, 0, 1, 1, 1, 0, 0]' : 0.979336}", "{'[2, 0, 1, 5, 0, 0, 1, 1, 2, 0, 10, 11, 0, 1, 1, 1, 0, 0]' : 0.979404}", "{'[2, 0, 1, 5, 0, 0, 1, 1, 2, 0, 10, 11, 0, 1, 1, 1, 0, 0]' : 0.979382}", "{'[2, 0, 1, 5, 0, 0, 1, 1, 2, 0, 10, 11, 0, 1, 1, 1, 0, 0]' : 0.979601}", "{'[2, 0, 1, 5, 0, 0, 1, 1, 2, 0, 10, 11, 0, 1, 1, 1, 0, 0]' : 0.97935}", "{'[2, 0, 1, 5, 0, 0, 1, 1, 2, 0, 10, 11, 0, 1, 1, 1, 0, 0]' : 0.979424}", "{'[2, 0, 1, 5, 0, 0, 1, 1, 2, 0, 10, 11, 0, 1, 1, 1, 0, 0]' : 1.08184}", "{'[2, 0, 1, 5, 0, 0, 1, 1, 2, 0, 10, 11, 0, 1, 1, 1, 0, 0]' : 0.979565}", "{'[2, 0, 1, 5, 0, 0, 1, 1, 2, 0, 10, 11, 0, 1, 1, 1, 0, 0]' : 0.979673}", "{'[2, 0, 1, 5, 0, 0, 1, 1, 2, 0, 10, 11, 0, 1, 1, 1, 0, 0]' : 0.980032}", "{'[2, 0, 1, 5, 0, 0, 1, 1, 2, 0, 10, 11, 0, 1, 1, 1, 0, 0]' : 0.979827}", "{'[2, 0, 1, 5, 0, 0, 1, 1, 2, 0, 10, 11, 0, 1, 1, 1, 0, 0]' : 0.979822}", "{'[2, 0, 1, 5, 0, 0, 1, 1, 2, 0, 10, 11, 0, 1, 1, 1, 0, 0]' : 0.980243}", "{'[2, 0, 1, 5, 0, 0, 1, 1, 2, 0, 10, 11, 0, 1, 1, 1, 0, 0]' : 0.980226}", "{'[2, 0, 1, 5, 0, 0, 1, 1, 2, 0, 10, 11, 0, 1, 1, 1, 0, 0]' : 0.979465}", "{'[2, 0, 1, 5, 0, 0, 1, 1, 2, 0, 10, 11, 0, 1, 1, 1, 0, 0]' : 0.979443}", "{'[2, 0, 1, 5, 0, 0, 1, 1, 2, 0, 10, 11, 0, 1, 1, 1, 0, 0]' : 0.979343}", "{'[2, 0, 1, 5, 0, 0, 1, 1, 2, 0, 10, 11, 0, 1, 1, 1, 0, 0]' : 0.979396}", "{'[2, 0, 1, 5, 0, 0, 1, 1, 2, 0, 10, 11, 0, 1, 1, 1, 0, 0]' : 0.979353}", "{'[2, 0, 1, 5, 0, 0, 1, 1, 2, 0, 10, 11, 0, 1, 1, 1, 0, 0]' : 0.979532}"]
returning from 'run': {'[2, 0, 1, 5, 0, 0, 1, 1, 2, 0, 10, 11, 0, 1, 1, 1, 0, 0]': ([0.97956, 0.979673, 0.979332, 0.979406, 0.979439, 1.02178, 0.979793, 0.980286, 0.979372, 0.979655, 0.979336, 0.979404, 0.979382, 0.979601, 0.97935, 0.979424, 1.08184, 0.979565, 0.979673, 0.980032, 0.979827, 0.979822, 0.980243, 0.980226, 0.979465, 0.979443, 0.979343, 0.979396, 0.979353, 0.979532], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 1, 5, 0, 0, 1, 1, 2, 0, 10, 11, 0, 1, 1, 1, 0, 0]': ([0.97956, 0.979673, 0.979332, 0.979406, 0.979439, 1.02178, 0.979793, 0.980286, 0.979372, 0.979655, 0.979336, 0.979404, 0.979382, 0.979601, 0.97935, 0.979424, 1.08184, 0.979565, 0.979673, 0.980032, 0.979827, 0.979822, 0.980243, 0.980226, 0.979465, 0.979443, 0.979343, 0.979396, 0.979353, 0.979532], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	44
        Max loop nest depth: 	5
        Additions: 		4663
        Multiplications: 	2200
        Divisions: 		0
        Logical: 		0
        Reads: 			8712
        Writes: 		1402
        Comparisons:		44
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest8.exe __orio_perftest8.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest8.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest8.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest8.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 641, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 559, in dopt_anova
    i)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 506, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 398, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest8.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 641, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 559, in dopt_anova
    i)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 506, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 398, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		409
        Multiplications: 	110
        Divisions: 		0
        Logical: 		0
        Reads: 			797
        Writes: 		113
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest9.exe __orio_perftest9.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest9.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest9.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest9.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 641, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 559, in dopt_anova
    i)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 506, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 398, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest9.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 641, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 559, in dopt_anova
    i)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 506, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 398, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	6
        Additions: 		2258
        Multiplications: 	702
        Divisions: 		0
        Logical: 		0
        Reads: 			3764
        Writes: 		440
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest10.exe __orio_perftest10.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest10.exe  
Program Test Output: 
{'[2, 2, 2, 6, 6, 2, 0, 0, 20, 0, 23, 4, 1, 1, 0, 0, 1, 1]' : 0.363245}
{'[2, 2, 2, 6, 6, 2, 0, 0, 20, 0, 23, 4, 1, 1, 0, 0, 1, 1]' : 0.363365}
{'[2, 2, 2, 6, 6, 2, 0, 0, 20, 0, 23, 4, 1, 1, 0, 0, 1, 1]' : 0.363168}
{'[2, 2, 2, 6, 6, 2, 0, 0, 20, 0, 23, 4, 1, 1, 0, 0, 1, 1]' : 0.362568}
{'[2, 2, 2, 6, 6, 2, 0, 0, 20, 0, 23, 4, 1, 1, 0, 0, 1, 1]' : 0.362792}
{'[2, 2, 2, 6, 6, 2, 0, 0, 20, 0, 23, 4, 1, 1, 0, 0, 1, 1]' : 0.363312}
{'[2, 2, 2, 6, 6, 2, 0, 0, 20, 0, 23, 4, 1, 1, 0, 0, 1, 1]' : 0.363239}
{'[2, 2, 2, 6, 6, 2, 0, 0, 20, 0, 23, 4, 1, 1, 0, 0, 1, 1]' : 0.363435}
{'[2, 2, 2, 6, 6, 2, 0, 0, 20, 0, 23, 4, 1, 1, 0, 0, 1, 1]' : 0.362617}
{'[2, 2, 2, 6, 6, 2, 0, 0, 20, 0, 23, 4, 1, 1, 0, 0, 1, 1]' : 0.362758}
{'[2, 2, 2, 6, 6, 2, 0, 0, 20, 0, 23, 4, 1, 1, 0, 0, 1, 1]' : 0.363559}
{'[2, 2, 2, 6, 6, 2, 0, 0, 20, 0, 23, 4, 1, 1, 0, 0, 1, 1]' : 0.363507}
{'[2, 2, 2, 6, 6, 2, 0, 0, 20, 0, 23, 4, 1, 1, 0, 0, 1, 1]' : 0.362777}
{'[2, 2, 2, 6, 6, 2, 0, 0, 20, 0, 23, 4, 1, 1, 0, 0, 1, 1]' : 0.36303}
{'[2, 2, 2, 6, 6, 2, 0, 0, 20, 0, 23, 4, 1, 1, 0, 0, 1, 1]' : 0.363134}
{'[2, 2, 2, 6, 6, 2, 0, 0, 20, 0, 23, 4, 1, 1, 0, 0, 1, 1]' : 0.362809}
{'[2, 2, 2, 6, 6, 2, 0, 0, 20, 0, 23, 4, 1, 1, 0, 0, 1, 1]' : 0.364743}
{'[2, 2, 2, 6, 6, 2, 0, 0, 20, 0, 23, 4, 1, 1, 0, 0, 1, 1]' : 0.363059}
{'[2, 2, 2, 6, 6, 2, 0, 0, 20, 0, 23, 4, 1, 1, 0, 0, 1, 1]' : 0.362956}
{'[2, 2, 2, 6, 6, 2, 0, 0, 20, 0, 23, 4, 1, 1, 0, 0, 1, 1]' : 0.363044}
{'[2, 2, 2, 6, 6, 2, 0, 0, 20, 0, 23, 4, 1, 1, 0, 0, 1, 1]' : 0.362998}
{'[2, 2, 2, 6, 6, 2, 0, 0, 20, 0, 23, 4, 1, 1, 0, 0, 1, 1]' : 0.363068}
{'[2, 2, 2, 6, 6, 2, 0, 0, 20, 0, 23, 4, 1, 1, 0, 0, 1, 1]' : 0.3627}
{'[2, 2, 2, 6, 6, 2, 0, 0, 20, 0, 23, 4, 1, 1, 0, 0, 1, 1]' : 0.363348}
{'[2, 2, 2, 6, 6, 2, 0, 0, 20, 0, 23, 4, 1, 1, 0, 0, 1, 1]' : 0.363777}
{'[2, 2, 2, 6, 6, 2, 0, 0, 20, 0, 23, 4, 1, 1, 0, 0, 1, 1]' : 0.362944}
{'[2, 2, 2, 6, 6, 2, 0, 0, 20, 0, 23, 4, 1, 1, 0, 0, 1, 1]' : 0.362935}
{'[2, 2, 2, 6, 6, 2, 0, 0, 20, 0, 23, 4, 1, 1, 0, 0, 1, 1]' : 0.363029}
{'[2, 2, 2, 6, 6, 2, 0, 0, 20, 0, 23, 4, 1, 1, 0, 0, 1, 1]' : 0.363032}
{'[2, 2, 2, 6, 6, 2, 0, 0, 20, 0, 23, 4, 1, 1, 0, 0, 1, 1]' : 0.362917}

out:
 ["{'[2, 2, 2, 6, 6, 2, 0, 0, 20, 0, 23, 4, 1, 1, 0, 0, 1, 1]' : 0.363245}", "{'[2, 2, 2, 6, 6, 2, 0, 0, 20, 0, 23, 4, 1, 1, 0, 0, 1, 1]' : 0.363365}", "{'[2, 2, 2, 6, 6, 2, 0, 0, 20, 0, 23, 4, 1, 1, 0, 0, 1, 1]' : 0.363168}", "{'[2, 2, 2, 6, 6, 2, 0, 0, 20, 0, 23, 4, 1, 1, 0, 0, 1, 1]' : 0.362568}", "{'[2, 2, 2, 6, 6, 2, 0, 0, 20, 0, 23, 4, 1, 1, 0, 0, 1, 1]' : 0.362792}", "{'[2, 2, 2, 6, 6, 2, 0, 0, 20, 0, 23, 4, 1, 1, 0, 0, 1, 1]' : 0.363312}", "{'[2, 2, 2, 6, 6, 2, 0, 0, 20, 0, 23, 4, 1, 1, 0, 0, 1, 1]' : 0.363239}", "{'[2, 2, 2, 6, 6, 2, 0, 0, 20, 0, 23, 4, 1, 1, 0, 0, 1, 1]' : 0.363435}", "{'[2, 2, 2, 6, 6, 2, 0, 0, 20, 0, 23, 4, 1, 1, 0, 0, 1, 1]' : 0.362617}", "{'[2, 2, 2, 6, 6, 2, 0, 0, 20, 0, 23, 4, 1, 1, 0, 0, 1, 1]' : 0.362758}", "{'[2, 2, 2, 6, 6, 2, 0, 0, 20, 0, 23, 4, 1, 1, 0, 0, 1, 1]' : 0.363559}", "{'[2, 2, 2, 6, 6, 2, 0, 0, 20, 0, 23, 4, 1, 1, 0, 0, 1, 1]' : 0.363507}", "{'[2, 2, 2, 6, 6, 2, 0, 0, 20, 0, 23, 4, 1, 1, 0, 0, 1, 1]' : 0.362777}", "{'[2, 2, 2, 6, 6, 2, 0, 0, 20, 0, 23, 4, 1, 1, 0, 0, 1, 1]' : 0.36303}", "{'[2, 2, 2, 6, 6, 2, 0, 0, 20, 0, 23, 4, 1, 1, 0, 0, 1, 1]' : 0.363134}", "{'[2, 2, 2, 6, 6, 2, 0, 0, 20, 0, 23, 4, 1, 1, 0, 0, 1, 1]' : 0.362809}", "{'[2, 2, 2, 6, 6, 2, 0, 0, 20, 0, 23, 4, 1, 1, 0, 0, 1, 1]' : 0.364743}", "{'[2, 2, 2, 6, 6, 2, 0, 0, 20, 0, 23, 4, 1, 1, 0, 0, 1, 1]' : 0.363059}", "{'[2, 2, 2, 6, 6, 2, 0, 0, 20, 0, 23, 4, 1, 1, 0, 0, 1, 1]' : 0.362956}", "{'[2, 2, 2, 6, 6, 2, 0, 0, 20, 0, 23, 4, 1, 1, 0, 0, 1, 1]' : 0.363044}", "{'[2, 2, 2, 6, 6, 2, 0, 0, 20, 0, 23, 4, 1, 1, 0, 0, 1, 1]' : 0.362998}", "{'[2, 2, 2, 6, 6, 2, 0, 0, 20, 0, 23, 4, 1, 1, 0, 0, 1, 1]' : 0.363068}", "{'[2, 2, 2, 6, 6, 2, 0, 0, 20, 0, 23, 4, 1, 1, 0, 0, 1, 1]' : 0.3627}", "{'[2, 2, 2, 6, 6, 2, 0, 0, 20, 0, 23, 4, 1, 1, 0, 0, 1, 1]' : 0.363348}", "{'[2, 2, 2, 6, 6, 2, 0, 0, 20, 0, 23, 4, 1, 1, 0, 0, 1, 1]' : 0.363777}", "{'[2, 2, 2, 6, 6, 2, 0, 0, 20, 0, 23, 4, 1, 1, 0, 0, 1, 1]' : 0.362944}", "{'[2, 2, 2, 6, 6, 2, 0, 0, 20, 0, 23, 4, 1, 1, 0, 0, 1, 1]' : 0.362935}", "{'[2, 2, 2, 6, 6, 2, 0, 0, 20, 0, 23, 4, 1, 1, 0, 0, 1, 1]' : 0.363029}", "{'[2, 2, 2, 6, 6, 2, 0, 0, 20, 0, 23, 4, 1, 1, 0, 0, 1, 1]' : 0.363032}", "{'[2, 2, 2, 6, 6, 2, 0, 0, 20, 0, 23, 4, 1, 1, 0, 0, 1, 1]' : 0.362917}"]
returning from 'run': {'[2, 2, 2, 6, 6, 2, 0, 0, 20, 0, 23, 4, 1, 1, 0, 0, 1, 1]': ([0.363245, 0.363365, 0.363168, 0.362568, 0.362792, 0.363312, 0.363239, 0.363435, 0.362617, 0.362758, 0.363559, 0.363507, 0.362777, 0.36303, 0.363134, 0.362809, 0.364743, 0.363059, 0.362956, 0.363044, 0.362998, 0.363068, 0.3627, 0.363348, 0.363777, 0.362944, 0.362935, 0.363029, 0.363032, 0.362917], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 2, 2, 6, 6, 2, 0, 0, 20, 0, 23, 4, 1, 1, 0, 0, 1, 1]': ([0.363245, 0.363365, 0.363168, 0.362568, 0.362792, 0.363312, 0.363239, 0.363435, 0.362617, 0.362758, 0.363559, 0.363507, 0.362777, 0.36303, 0.363134, 0.362809, 0.364743, 0.363059, 0.362956, 0.363044, 0.362998, 0.363068, 0.3627, 0.363348, 0.363777, 0.362944, 0.362935, 0.363029, 0.363032, 0.362917], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Code stats:
        Number of loops: 	150
        Max loop nest depth: 	6
        Additions: 		10657
        Multiplications: 	2964
        Divisions: 		0
        Logical: 		0
        Reads: 			16710
        Writes: 		2009
        Comparisons:		150
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest11.exe __orio_perftest11.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest11.exe  
Program Test Output: 
{'[1, 6, 1, 3, 5, 0, 0, 1, 24, 29, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.268612}
{'[1, 6, 1, 3, 5, 0, 0, 1, 24, 29, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.269304}
{'[1, 6, 1, 3, 5, 0, 0, 1, 24, 29, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.269091}
{'[1, 6, 1, 3, 5, 0, 0, 1, 24, 29, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.269021}
{'[1, 6, 1, 3, 5, 0, 0, 1, 24, 29, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.269095}
{'[1, 6, 1, 3, 5, 0, 0, 1, 24, 29, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.271036}
{'[1, 6, 1, 3, 5, 0, 0, 1, 24, 29, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.27015}
{'[1, 6, 1, 3, 5, 0, 0, 1, 24, 29, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.268871}
{'[1, 6, 1, 3, 5, 0, 0, 1, 24, 29, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.274355}
{'[1, 6, 1, 3, 5, 0, 0, 1, 24, 29, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.269372}
{'[1, 6, 1, 3, 5, 0, 0, 1, 24, 29, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.271823}
{'[1, 6, 1, 3, 5, 0, 0, 1, 24, 29, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.268537}
{'[1, 6, 1, 3, 5, 0, 0, 1, 24, 29, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.268439}
{'[1, 6, 1, 3, 5, 0, 0, 1, 24, 29, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.26881}
{'[1, 6, 1, 3, 5, 0, 0, 1, 24, 29, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.270208}
{'[1, 6, 1, 3, 5, 0, 0, 1, 24, 29, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.269399}
{'[1, 6, 1, 3, 5, 0, 0, 1, 24, 29, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.270001}
{'[1, 6, 1, 3, 5, 0, 0, 1, 24, 29, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.269236}
{'[1, 6, 1, 3, 5, 0, 0, 1, 24, 29, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.268935}
{'[1, 6, 1, 3, 5, 0, 0, 1, 24, 29, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.269508}
{'[1, 6, 1, 3, 5, 0, 0, 1, 24, 29, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.268578}
{'[1, 6, 1, 3, 5, 0, 0, 1, 24, 29, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.268654}
{'[1, 6, 1, 3, 5, 0, 0, 1, 24, 29, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.268566}
{'[1, 6, 1, 3, 5, 0, 0, 1, 24, 29, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.272091}
{'[1, 6, 1, 3, 5, 0, 0, 1, 24, 29, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.268722}
{'[1, 6, 1, 3, 5, 0, 0, 1, 24, 29, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.268883}
{'[1, 6, 1, 3, 5, 0, 0, 1, 24, 29, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.26841}
{'[1, 6, 1, 3, 5, 0, 0, 1, 24, 29, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.273475}
{'[1, 6, 1, 3, 5, 0, 0, 1, 24, 29, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.274541}
{'[1, 6, 1, 3, 5, 0, 0, 1, 24, 29, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.270482}

out:
 ["{'[1, 6, 1, 3, 5, 0, 0, 1, 24, 29, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.268612}", "{'[1, 6, 1, 3, 5, 0, 0, 1, 24, 29, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.269304}", "{'[1, 6, 1, 3, 5, 0, 0, 1, 24, 29, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.269091}", "{'[1, 6, 1, 3, 5, 0, 0, 1, 24, 29, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.269021}", "{'[1, 6, 1, 3, 5, 0, 0, 1, 24, 29, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.269095}", "{'[1, 6, 1, 3, 5, 0, 0, 1, 24, 29, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.271036}", "{'[1, 6, 1, 3, 5, 0, 0, 1, 24, 29, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.27015}", "{'[1, 6, 1, 3, 5, 0, 0, 1, 24, 29, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.268871}", "{'[1, 6, 1, 3, 5, 0, 0, 1, 24, 29, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.274355}", "{'[1, 6, 1, 3, 5, 0, 0, 1, 24, 29, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.269372}", "{'[1, 6, 1, 3, 5, 0, 0, 1, 24, 29, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.271823}", "{'[1, 6, 1, 3, 5, 0, 0, 1, 24, 29, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.268537}", "{'[1, 6, 1, 3, 5, 0, 0, 1, 24, 29, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.268439}", "{'[1, 6, 1, 3, 5, 0, 0, 1, 24, 29, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.26881}", "{'[1, 6, 1, 3, 5, 0, 0, 1, 24, 29, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.270208}", "{'[1, 6, 1, 3, 5, 0, 0, 1, 24, 29, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.269399}", "{'[1, 6, 1, 3, 5, 0, 0, 1, 24, 29, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.270001}", "{'[1, 6, 1, 3, 5, 0, 0, 1, 24, 29, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.269236}", "{'[1, 6, 1, 3, 5, 0, 0, 1, 24, 29, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.268935}", "{'[1, 6, 1, 3, 5, 0, 0, 1, 24, 29, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.269508}", "{'[1, 6, 1, 3, 5, 0, 0, 1, 24, 29, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.268578}", "{'[1, 6, 1, 3, 5, 0, 0, 1, 24, 29, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.268654}", "{'[1, 6, 1, 3, 5, 0, 0, 1, 24, 29, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.268566}", "{'[1, 6, 1, 3, 5, 0, 0, 1, 24, 29, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.272091}", "{'[1, 6, 1, 3, 5, 0, 0, 1, 24, 29, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.268722}", "{'[1, 6, 1, 3, 5, 0, 0, 1, 24, 29, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.268883}", "{'[1, 6, 1, 3, 5, 0, 0, 1, 24, 29, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.26841}", "{'[1, 6, 1, 3, 5, 0, 0, 1, 24, 29, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.273475}", "{'[1, 6, 1, 3, 5, 0, 0, 1, 24, 29, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.274541}", "{'[1, 6, 1, 3, 5, 0, 0, 1, 24, 29, 27, 0, 1, 1, 0, 0, 1, 1]' : 0.270482}"]
returning from 'run': {'[1, 6, 1, 3, 5, 0, 0, 1, 24, 29, 27, 0, 1, 1, 0, 0, 1, 1]': ([0.268612, 0.269304, 0.269091, 0.269021, 0.269095, 0.271036, 0.27015, 0.268871, 0.274355, 0.269372, 0.271823, 0.268537, 0.268439, 0.26881, 0.270208, 0.269399, 0.270001, 0.269236, 0.268935, 0.269508, 0.268578, 0.268654, 0.268566, 0.272091, 0.268722, 0.268883, 0.26841, 0.273475, 0.274541, 0.270482], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 6, 1, 3, 5, 0, 0, 1, 24, 29, 27, 0, 1, 1, 0, 0, 1, 1]': ([0.268612, 0.269304, 0.269091, 0.269021, 0.269095, 0.271036, 0.27015, 0.268871, 0.274355, 0.269372, 0.271823, 0.268537, 0.268439, 0.26881, 0.270208, 0.269399, 0.270001, 0.269236, 0.268935, 0.269508, 0.268578, 0.268654, 0.268566, 0.272091, 0.268722, 0.268883, 0.26841, 0.273475, 0.274541, 0.270482], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	71
        Max loop nest depth: 	5
        Additions: 		6261
        Multiplications: 	2688
        Divisions: 		0
        Logical: 		0
        Reads: 			11213
        Writes: 		1691
        Comparisons:		71
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest12.exe __orio_perftest12.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest12.exe  
Program Test Output: 
{'[5, 0, 6, 4, 1, 4, 1, 1, 2, 8, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.395281}
{'[5, 0, 6, 4, 1, 4, 1, 1, 2, 8, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.395687}
{'[5, 0, 6, 4, 1, 4, 1, 1, 2, 8, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.395296}
{'[5, 0, 6, 4, 1, 4, 1, 1, 2, 8, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.39518}
{'[5, 0, 6, 4, 1, 4, 1, 1, 2, 8, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.395355}
{'[5, 0, 6, 4, 1, 4, 1, 1, 2, 8, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.396406}
{'[5, 0, 6, 4, 1, 4, 1, 1, 2, 8, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.395288}
{'[5, 0, 6, 4, 1, 4, 1, 1, 2, 8, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.396365}
{'[5, 0, 6, 4, 1, 4, 1, 1, 2, 8, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.395191}
{'[5, 0, 6, 4, 1, 4, 1, 1, 2, 8, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.395176}
{'[5, 0, 6, 4, 1, 4, 1, 1, 2, 8, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.395184}
{'[5, 0, 6, 4, 1, 4, 1, 1, 2, 8, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.39535}
{'[5, 0, 6, 4, 1, 4, 1, 1, 2, 8, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.400843}
{'[5, 0, 6, 4, 1, 4, 1, 1, 2, 8, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.395224}
{'[5, 0, 6, 4, 1, 4, 1, 1, 2, 8, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.395029}
{'[5, 0, 6, 4, 1, 4, 1, 1, 2, 8, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.395549}
{'[5, 0, 6, 4, 1, 4, 1, 1, 2, 8, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.395262}
{'[5, 0, 6, 4, 1, 4, 1, 1, 2, 8, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.395307}
{'[5, 0, 6, 4, 1, 4, 1, 1, 2, 8, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.39524}
{'[5, 0, 6, 4, 1, 4, 1, 1, 2, 8, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.395276}
{'[5, 0, 6, 4, 1, 4, 1, 1, 2, 8, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.395542}
{'[5, 0, 6, 4, 1, 4, 1, 1, 2, 8, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.395404}
{'[5, 0, 6, 4, 1, 4, 1, 1, 2, 8, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.39656}
{'[5, 0, 6, 4, 1, 4, 1, 1, 2, 8, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.395675}
{'[5, 0, 6, 4, 1, 4, 1, 1, 2, 8, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.395409}
{'[5, 0, 6, 4, 1, 4, 1, 1, 2, 8, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.401304}
{'[5, 0, 6, 4, 1, 4, 1, 1, 2, 8, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.396074}
{'[5, 0, 6, 4, 1, 4, 1, 1, 2, 8, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.395999}
{'[5, 0, 6, 4, 1, 4, 1, 1, 2, 8, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.395275}
{'[5, 0, 6, 4, 1, 4, 1, 1, 2, 8, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.395249}

out:
 ["{'[5, 0, 6, 4, 1, 4, 1, 1, 2, 8, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.395281}", "{'[5, 0, 6, 4, 1, 4, 1, 1, 2, 8, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.395687}", "{'[5, 0, 6, 4, 1, 4, 1, 1, 2, 8, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.395296}", "{'[5, 0, 6, 4, 1, 4, 1, 1, 2, 8, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.39518}", "{'[5, 0, 6, 4, 1, 4, 1, 1, 2, 8, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.395355}", "{'[5, 0, 6, 4, 1, 4, 1, 1, 2, 8, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.396406}", "{'[5, 0, 6, 4, 1, 4, 1, 1, 2, 8, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.395288}", "{'[5, 0, 6, 4, 1, 4, 1, 1, 2, 8, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.396365}", "{'[5, 0, 6, 4, 1, 4, 1, 1, 2, 8, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.395191}", "{'[5, 0, 6, 4, 1, 4, 1, 1, 2, 8, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.395176}", "{'[5, 0, 6, 4, 1, 4, 1, 1, 2, 8, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.395184}", "{'[5, 0, 6, 4, 1, 4, 1, 1, 2, 8, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.39535}", "{'[5, 0, 6, 4, 1, 4, 1, 1, 2, 8, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.400843}", "{'[5, 0, 6, 4, 1, 4, 1, 1, 2, 8, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.395224}", "{'[5, 0, 6, 4, 1, 4, 1, 1, 2, 8, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.395029}", "{'[5, 0, 6, 4, 1, 4, 1, 1, 2, 8, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.395549}", "{'[5, 0, 6, 4, 1, 4, 1, 1, 2, 8, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.395262}", "{'[5, 0, 6, 4, 1, 4, 1, 1, 2, 8, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.395307}", "{'[5, 0, 6, 4, 1, 4, 1, 1, 2, 8, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.39524}", "{'[5, 0, 6, 4, 1, 4, 1, 1, 2, 8, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.395276}", "{'[5, 0, 6, 4, 1, 4, 1, 1, 2, 8, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.395542}", "{'[5, 0, 6, 4, 1, 4, 1, 1, 2, 8, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.395404}", "{'[5, 0, 6, 4, 1, 4, 1, 1, 2, 8, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.39656}", "{'[5, 0, 6, 4, 1, 4, 1, 1, 2, 8, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.395675}", "{'[5, 0, 6, 4, 1, 4, 1, 1, 2, 8, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.395409}", "{'[5, 0, 6, 4, 1, 4, 1, 1, 2, 8, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.401304}", "{'[5, 0, 6, 4, 1, 4, 1, 1, 2, 8, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.396074}", "{'[5, 0, 6, 4, 1, 4, 1, 1, 2, 8, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.395999}", "{'[5, 0, 6, 4, 1, 4, 1, 1, 2, 8, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.395275}", "{'[5, 0, 6, 4, 1, 4, 1, 1, 2, 8, 29, 0, 2, 0, 0, 1, 0, 1]' : 0.395249}"]
returning from 'run': {'[5, 0, 6, 4, 1, 4, 1, 1, 2, 8, 29, 0, 2, 0, 0, 1, 0, 1]': ([0.395281, 0.395687, 0.395296, 0.39518, 0.395355, 0.396406, 0.395288, 0.396365, 0.395191, 0.395176, 0.395184, 0.39535, 0.400843, 0.395224, 0.395029, 0.395549, 0.395262, 0.395307, 0.39524, 0.395276, 0.395542, 0.395404, 0.39656, 0.395675, 0.395409, 0.401304, 0.396074, 0.395999, 0.395275, 0.395249], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 0, 6, 4, 1, 4, 1, 1, 2, 8, 29, 0, 2, 0, 0, 1, 0, 1]': ([0.395281, 0.395687, 0.395296, 0.39518, 0.395355, 0.396406, 0.395288, 0.396365, 0.395191, 0.395176, 0.395184, 0.39535, 0.400843, 0.395224, 0.395029, 0.395549, 0.395262, 0.395307, 0.39524, 0.395276, 0.395542, 0.395404, 0.39656, 0.395675, 0.395409, 0.401304, 0.396074, 0.395999, 0.395275, 0.395249], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	6
        Additions: 		389
        Multiplications: 	104
        Divisions: 		0
        Logical: 		0
        Reads: 			778
        Writes: 		117
        Comparisons:		15
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest13.exe __orio_perftest13.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest13.exe  
Program Test Output: 
{'[2, 4, 0, 6, 5, 3, 1, 1, 29, 0, 28, 20, 0, 0, 0, 0, 0, 0]' : 0.837006}
{'[2, 4, 0, 6, 5, 3, 1, 1, 29, 0, 28, 20, 0, 0, 0, 0, 0, 0]' : 0.838911}
{'[2, 4, 0, 6, 5, 3, 1, 1, 29, 0, 28, 20, 0, 0, 0, 0, 0, 0]' : 0.837108}
{'[2, 4, 0, 6, 5, 3, 1, 1, 29, 0, 28, 20, 0, 0, 0, 0, 0, 0]' : 0.837164}
{'[2, 4, 0, 6, 5, 3, 1, 1, 29, 0, 28, 20, 0, 0, 0, 0, 0, 0]' : 0.834335}
{'[2, 4, 0, 6, 5, 3, 1, 1, 29, 0, 28, 20, 0, 0, 0, 0, 0, 0]' : 0.840114}
{'[2, 4, 0, 6, 5, 3, 1, 1, 29, 0, 28, 20, 0, 0, 0, 0, 0, 0]' : 0.837103}
{'[2, 4, 0, 6, 5, 3, 1, 1, 29, 0, 28, 20, 0, 0, 0, 0, 0, 0]' : 0.837236}
{'[2, 4, 0, 6, 5, 3, 1, 1, 29, 0, 28, 20, 0, 0, 0, 0, 0, 0]' : 0.837241}
{'[2, 4, 0, 6, 5, 3, 1, 1, 29, 0, 28, 20, 0, 0, 0, 0, 0, 0]' : 0.837789}
{'[2, 4, 0, 6, 5, 3, 1, 1, 29, 0, 28, 20, 0, 0, 0, 0, 0, 0]' : 0.834485}
{'[2, 4, 0, 6, 5, 3, 1, 1, 29, 0, 28, 20, 0, 0, 0, 0, 0, 0]' : 0.845684}
{'[2, 4, 0, 6, 5, 3, 1, 1, 29, 0, 28, 20, 0, 0, 0, 0, 0, 0]' : 0.837157}
{'[2, 4, 0, 6, 5, 3, 1, 1, 29, 0, 28, 20, 0, 0, 0, 0, 0, 0]' : 0.837173}
{'[2, 4, 0, 6, 5, 3, 1, 1, 29, 0, 28, 20, 0, 0, 0, 0, 0, 0]' : 0.83752}
{'[2, 4, 0, 6, 5, 3, 1, 1, 29, 0, 28, 20, 0, 0, 0, 0, 0, 0]' : 0.836975}
{'[2, 4, 0, 6, 5, 3, 1, 1, 29, 0, 28, 20, 0, 0, 0, 0, 0, 0]' : 0.83452}
{'[2, 4, 0, 6, 5, 3, 1, 1, 29, 0, 28, 20, 0, 0, 0, 0, 0, 0]' : 0.840444}
{'[2, 4, 0, 6, 5, 3, 1, 1, 29, 0, 28, 20, 0, 0, 0, 0, 0, 0]' : 0.837123}
{'[2, 4, 0, 6, 5, 3, 1, 1, 29, 0, 28, 20, 0, 0, 0, 0, 0, 0]' : 0.837399}
{'[2, 4, 0, 6, 5, 3, 1, 1, 29, 0, 28, 20, 0, 0, 0, 0, 0, 0]' : 0.837749}
{'[2, 4, 0, 6, 5, 3, 1, 1, 29, 0, 28, 20, 0, 0, 0, 0, 0, 0]' : 0.838002}
{'[2, 4, 0, 6, 5, 3, 1, 1, 29, 0, 28, 20, 0, 0, 0, 0, 0, 0]' : 0.83428}
{'[2, 4, 0, 6, 5, 3, 1, 1, 29, 0, 28, 20, 0, 0, 0, 0, 0, 0]' : 0.8399}
{'[2, 4, 0, 6, 5, 3, 1, 1, 29, 0, 28, 20, 0, 0, 0, 0, 0, 0]' : 0.836902}
{'[2, 4, 0, 6, 5, 3, 1, 1, 29, 0, 28, 20, 0, 0, 0, 0, 0, 0]' : 0.836671}
{'[2, 4, 0, 6, 5, 3, 1, 1, 29, 0, 28, 20, 0, 0, 0, 0, 0, 0]' : 0.836927}
{'[2, 4, 0, 6, 5, 3, 1, 1, 29, 0, 28, 20, 0, 0, 0, 0, 0, 0]' : 0.835965}
{'[2, 4, 0, 6, 5, 3, 1, 1, 29, 0, 28, 20, 0, 0, 0, 0, 0, 0]' : 0.834184}
{'[2, 4, 0, 6, 5, 3, 1, 1, 29, 0, 28, 20, 0, 0, 0, 0, 0, 0]' : 0.837469}

out:
 ["{'[2, 4, 0, 6, 5, 3, 1, 1, 29, 0, 28, 20, 0, 0, 0, 0, 0, 0]' : 0.837006}", "{'[2, 4, 0, 6, 5, 3, 1, 1, 29, 0, 28, 20, 0, 0, 0, 0, 0, 0]' : 0.838911}", "{'[2, 4, 0, 6, 5, 3, 1, 1, 29, 0, 28, 20, 0, 0, 0, 0, 0, 0]' : 0.837108}", "{'[2, 4, 0, 6, 5, 3, 1, 1, 29, 0, 28, 20, 0, 0, 0, 0, 0, 0]' : 0.837164}", "{'[2, 4, 0, 6, 5, 3, 1, 1, 29, 0, 28, 20, 0, 0, 0, 0, 0, 0]' : 0.834335}", "{'[2, 4, 0, 6, 5, 3, 1, 1, 29, 0, 28, 20, 0, 0, 0, 0, 0, 0]' : 0.840114}", "{'[2, 4, 0, 6, 5, 3, 1, 1, 29, 0, 28, 20, 0, 0, 0, 0, 0, 0]' : 0.837103}", "{'[2, 4, 0, 6, 5, 3, 1, 1, 29, 0, 28, 20, 0, 0, 0, 0, 0, 0]' : 0.837236}", "{'[2, 4, 0, 6, 5, 3, 1, 1, 29, 0, 28, 20, 0, 0, 0, 0, 0, 0]' : 0.837241}", "{'[2, 4, 0, 6, 5, 3, 1, 1, 29, 0, 28, 20, 0, 0, 0, 0, 0, 0]' : 0.837789}", "{'[2, 4, 0, 6, 5, 3, 1, 1, 29, 0, 28, 20, 0, 0, 0, 0, 0, 0]' : 0.834485}", "{'[2, 4, 0, 6, 5, 3, 1, 1, 29, 0, 28, 20, 0, 0, 0, 0, 0, 0]' : 0.845684}", "{'[2, 4, 0, 6, 5, 3, 1, 1, 29, 0, 28, 20, 0, 0, 0, 0, 0, 0]' : 0.837157}", "{'[2, 4, 0, 6, 5, 3, 1, 1, 29, 0, 28, 20, 0, 0, 0, 0, 0, 0]' : 0.837173}", "{'[2, 4, 0, 6, 5, 3, 1, 1, 29, 0, 28, 20, 0, 0, 0, 0, 0, 0]' : 0.83752}", "{'[2, 4, 0, 6, 5, 3, 1, 1, 29, 0, 28, 20, 0, 0, 0, 0, 0, 0]' : 0.836975}", "{'[2, 4, 0, 6, 5, 3, 1, 1, 29, 0, 28, 20, 0, 0, 0, 0, 0, 0]' : 0.83452}", "{'[2, 4, 0, 6, 5, 3, 1, 1, 29, 0, 28, 20, 0, 0, 0, 0, 0, 0]' : 0.840444}", "{'[2, 4, 0, 6, 5, 3, 1, 1, 29, 0, 28, 20, 0, 0, 0, 0, 0, 0]' : 0.837123}", "{'[2, 4, 0, 6, 5, 3, 1, 1, 29, 0, 28, 20, 0, 0, 0, 0, 0, 0]' : 0.837399}", "{'[2, 4, 0, 6, 5, 3, 1, 1, 29, 0, 28, 20, 0, 0, 0, 0, 0, 0]' : 0.837749}", "{'[2, 4, 0, 6, 5, 3, 1, 1, 29, 0, 28, 20, 0, 0, 0, 0, 0, 0]' : 0.838002}", "{'[2, 4, 0, 6, 5, 3, 1, 1, 29, 0, 28, 20, 0, 0, 0, 0, 0, 0]' : 0.83428}", "{'[2, 4, 0, 6, 5, 3, 1, 1, 29, 0, 28, 20, 0, 0, 0, 0, 0, 0]' : 0.8399}", "{'[2, 4, 0, 6, 5, 3, 1, 1, 29, 0, 28, 20, 0, 0, 0, 0, 0, 0]' : 0.836902}", "{'[2, 4, 0, 6, 5, 3, 1, 1, 29, 0, 28, 20, 0, 0, 0, 0, 0, 0]' : 0.836671}", "{'[2, 4, 0, 6, 5, 3, 1, 1, 29, 0, 28, 20, 0, 0, 0, 0, 0, 0]' : 0.836927}", "{'[2, 4, 0, 6, 5, 3, 1, 1, 29, 0, 28, 20, 0, 0, 0, 0, 0, 0]' : 0.835965}", "{'[2, 4, 0, 6, 5, 3, 1, 1, 29, 0, 28, 20, 0, 0, 0, 0, 0, 0]' : 0.834184}", "{'[2, 4, 0, 6, 5, 3, 1, 1, 29, 0, 28, 20, 0, 0, 0, 0, 0, 0]' : 0.837469}"]
returning from 'run': {'[2, 4, 0, 6, 5, 3, 1, 1, 29, 0, 28, 20, 0, 0, 0, 0, 0, 0]': ([0.837006, 0.838911, 0.837108, 0.837164, 0.834335, 0.840114, 0.837103, 0.837236, 0.837241, 0.837789, 0.834485, 0.845684, 0.837157, 0.837173, 0.83752, 0.836975, 0.83452, 0.840444, 0.837123, 0.837399, 0.837749, 0.838002, 0.83428, 0.8399, 0.836902, 0.836671, 0.836927, 0.835965, 0.834184, 0.837469], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 4, 0, 6, 5, 3, 1, 1, 29, 0, 28, 20, 0, 0, 0, 0, 0, 0]': ([0.837006, 0.838911, 0.837108, 0.837164, 0.834335, 0.840114, 0.837103, 0.837236, 0.837241, 0.837789, 0.834485, 0.845684, 0.837157, 0.837173, 0.83752, 0.836975, 0.83452, 0.840444, 0.837123, 0.837399, 0.837749, 0.838002, 0.83428, 0.8399, 0.836902, 0.836671, 0.836927, 0.835965, 0.834184, 0.837469], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	71
        Max loop nest depth: 	6
        Additions: 		2294
        Multiplications: 	480
        Divisions: 		0
        Logical: 		0
        Reads: 			3587
        Writes: 		448
        Comparisons:		71
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest14.exe __orio_perftest14.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest14.exe  
Program Test Output: 
{'[1, 0, 1, 4, 6, 3, 0, 1, 25, 10, 0, 9, 1, 0, 0, 0, 0, 0]' : 0.352605}
{'[1, 0, 1, 4, 6, 3, 0, 1, 25, 10, 0, 9, 1, 0, 0, 0, 0, 0]' : 0.353676}
{'[1, 0, 1, 4, 6, 3, 0, 1, 25, 10, 0, 9, 1, 0, 0, 0, 0, 0]' : 0.353025}
{'[1, 0, 1, 4, 6, 3, 0, 1, 25, 10, 0, 9, 1, 0, 0, 0, 0, 0]' : 0.352739}
{'[1, 0, 1, 4, 6, 3, 0, 1, 25, 10, 0, 9, 1, 0, 0, 0, 0, 0]' : 0.352726}
{'[1, 0, 1, 4, 6, 3, 0, 1, 25, 10, 0, 9, 1, 0, 0, 0, 0, 0]' : 0.357066}
{'[1, 0, 1, 4, 6, 3, 0, 1, 25, 10, 0, 9, 1, 0, 0, 0, 0, 0]' : 0.352363}
{'[1, 0, 1, 4, 6, 3, 0, 1, 25, 10, 0, 9, 1, 0, 0, 0, 0, 0]' : 0.352183}
{'[1, 0, 1, 4, 6, 3, 0, 1, 25, 10, 0, 9, 1, 0, 0, 0, 0, 0]' : 0.352137}
{'[1, 0, 1, 4, 6, 3, 0, 1, 25, 10, 0, 9, 1, 0, 0, 0, 0, 0]' : 0.353043}
{'[1, 0, 1, 4, 6, 3, 0, 1, 25, 10, 0, 9, 1, 0, 0, 0, 0, 0]' : 0.35287}
{'[1, 0, 1, 4, 6, 3, 0, 1, 25, 10, 0, 9, 1, 0, 0, 0, 0, 0]' : 0.35294}
{'[1, 0, 1, 4, 6, 3, 0, 1, 25, 10, 0, 9, 1, 0, 0, 0, 0, 0]' : 0.352711}
{'[1, 0, 1, 4, 6, 3, 0, 1, 25, 10, 0, 9, 1, 0, 0, 0, 0, 0]' : 0.352844}
{'[1, 0, 1, 4, 6, 3, 0, 1, 25, 10, 0, 9, 1, 0, 0, 0, 0, 0]' : 0.352985}
{'[1, 0, 1, 4, 6, 3, 0, 1, 25, 10, 0, 9, 1, 0, 0, 0, 0, 0]' : 0.352218}
{'[1, 0, 1, 4, 6, 3, 0, 1, 25, 10, 0, 9, 1, 0, 0, 0, 0, 0]' : 0.353005}
{'[1, 0, 1, 4, 6, 3, 0, 1, 25, 10, 0, 9, 1, 0, 0, 0, 0, 0]' : 0.353325}
{'[1, 0, 1, 4, 6, 3, 0, 1, 25, 10, 0, 9, 1, 0, 0, 0, 0, 0]' : 0.353202}
{'[1, 0, 1, 4, 6, 3, 0, 1, 25, 10, 0, 9, 1, 0, 0, 0, 0, 0]' : 0.35253}
{'[1, 0, 1, 4, 6, 3, 0, 1, 25, 10, 0, 9, 1, 0, 0, 0, 0, 0]' : 0.352184}
{'[1, 0, 1, 4, 6, 3, 0, 1, 25, 10, 0, 9, 1, 0, 0, 0, 0, 0]' : 0.35259}
{'[1, 0, 1, 4, 6, 3, 0, 1, 25, 10, 0, 9, 1, 0, 0, 0, 0, 0]' : 0.352108}
{'[1, 0, 1, 4, 6, 3, 0, 1, 25, 10, 0, 9, 1, 0, 0, 0, 0, 0]' : 0.352021}
{'[1, 0, 1, 4, 6, 3, 0, 1, 25, 10, 0, 9, 1, 0, 0, 0, 0, 0]' : 0.352208}
{'[1, 0, 1, 4, 6, 3, 0, 1, 25, 10, 0, 9, 1, 0, 0, 0, 0, 0]' : 0.353102}
{'[1, 0, 1, 4, 6, 3, 0, 1, 25, 10, 0, 9, 1, 0, 0, 0, 0, 0]' : 0.353003}
{'[1, 0, 1, 4, 6, 3, 0, 1, 25, 10, 0, 9, 1, 0, 0, 0, 0, 0]' : 0.352318}
{'[1, 0, 1, 4, 6, 3, 0, 1, 25, 10, 0, 9, 1, 0, 0, 0, 0, 0]' : 0.352953}
{'[1, 0, 1, 4, 6, 3, 0, 1, 25, 10, 0, 9, 1, 0, 0, 0, 0, 0]' : 0.352986}

out:
 ["{'[1, 0, 1, 4, 6, 3, 0, 1, 25, 10, 0, 9, 1, 0, 0, 0, 0, 0]' : 0.352605}", "{'[1, 0, 1, 4, 6, 3, 0, 1, 25, 10, 0, 9, 1, 0, 0, 0, 0, 0]' : 0.353676}", "{'[1, 0, 1, 4, 6, 3, 0, 1, 25, 10, 0, 9, 1, 0, 0, 0, 0, 0]' : 0.353025}", "{'[1, 0, 1, 4, 6, 3, 0, 1, 25, 10, 0, 9, 1, 0, 0, 0, 0, 0]' : 0.352739}", "{'[1, 0, 1, 4, 6, 3, 0, 1, 25, 10, 0, 9, 1, 0, 0, 0, 0, 0]' : 0.352726}", "{'[1, 0, 1, 4, 6, 3, 0, 1, 25, 10, 0, 9, 1, 0, 0, 0, 0, 0]' : 0.357066}", "{'[1, 0, 1, 4, 6, 3, 0, 1, 25, 10, 0, 9, 1, 0, 0, 0, 0, 0]' : 0.352363}", "{'[1, 0, 1, 4, 6, 3, 0, 1, 25, 10, 0, 9, 1, 0, 0, 0, 0, 0]' : 0.352183}", "{'[1, 0, 1, 4, 6, 3, 0, 1, 25, 10, 0, 9, 1, 0, 0, 0, 0, 0]' : 0.352137}", "{'[1, 0, 1, 4, 6, 3, 0, 1, 25, 10, 0, 9, 1, 0, 0, 0, 0, 0]' : 0.353043}", "{'[1, 0, 1, 4, 6, 3, 0, 1, 25, 10, 0, 9, 1, 0, 0, 0, 0, 0]' : 0.35287}", "{'[1, 0, 1, 4, 6, 3, 0, 1, 25, 10, 0, 9, 1, 0, 0, 0, 0, 0]' : 0.35294}", "{'[1, 0, 1, 4, 6, 3, 0, 1, 25, 10, 0, 9, 1, 0, 0, 0, 0, 0]' : 0.352711}", "{'[1, 0, 1, 4, 6, 3, 0, 1, 25, 10, 0, 9, 1, 0, 0, 0, 0, 0]' : 0.352844}", "{'[1, 0, 1, 4, 6, 3, 0, 1, 25, 10, 0, 9, 1, 0, 0, 0, 0, 0]' : 0.352985}", "{'[1, 0, 1, 4, 6, 3, 0, 1, 25, 10, 0, 9, 1, 0, 0, 0, 0, 0]' : 0.352218}", "{'[1, 0, 1, 4, 6, 3, 0, 1, 25, 10, 0, 9, 1, 0, 0, 0, 0, 0]' : 0.353005}", "{'[1, 0, 1, 4, 6, 3, 0, 1, 25, 10, 0, 9, 1, 0, 0, 0, 0, 0]' : 0.353325}", "{'[1, 0, 1, 4, 6, 3, 0, 1, 25, 10, 0, 9, 1, 0, 0, 0, 0, 0]' : 0.353202}", "{'[1, 0, 1, 4, 6, 3, 0, 1, 25, 10, 0, 9, 1, 0, 0, 0, 0, 0]' : 0.35253}", "{'[1, 0, 1, 4, 6, 3, 0, 1, 25, 10, 0, 9, 1, 0, 0, 0, 0, 0]' : 0.352184}", "{'[1, 0, 1, 4, 6, 3, 0, 1, 25, 10, 0, 9, 1, 0, 0, 0, 0, 0]' : 0.35259}", "{'[1, 0, 1, 4, 6, 3, 0, 1, 25, 10, 0, 9, 1, 0, 0, 0, 0, 0]' : 0.352108}", "{'[1, 0, 1, 4, 6, 3, 0, 1, 25, 10, 0, 9, 1, 0, 0, 0, 0, 0]' : 0.352021}", "{'[1, 0, 1, 4, 6, 3, 0, 1, 25, 10, 0, 9, 1, 0, 0, 0, 0, 0]' : 0.352208}", "{'[1, 0, 1, 4, 6, 3, 0, 1, 25, 10, 0, 9, 1, 0, 0, 0, 0, 0]' : 0.353102}", "{'[1, 0, 1, 4, 6, 3, 0, 1, 25, 10, 0, 9, 1, 0, 0, 0, 0, 0]' : 0.353003}", "{'[1, 0, 1, 4, 6, 3, 0, 1, 25, 10, 0, 9, 1, 0, 0, 0, 0, 0]' : 0.352318}", "{'[1, 0, 1, 4, 6, 3, 0, 1, 25, 10, 0, 9, 1, 0, 0, 0, 0, 0]' : 0.352953}", "{'[1, 0, 1, 4, 6, 3, 0, 1, 25, 10, 0, 9, 1, 0, 0, 0, 0, 0]' : 0.352986}"]
returning from 'run': {'[1, 0, 1, 4, 6, 3, 0, 1, 25, 10, 0, 9, 1, 0, 0, 0, 0, 0]': ([0.352605, 0.353676, 0.353025, 0.352739, 0.352726, 0.357066, 0.352363, 0.352183, 0.352137, 0.353043, 0.35287, 0.35294, 0.352711, 0.352844, 0.352985, 0.352218, 0.353005, 0.353325, 0.353202, 0.35253, 0.352184, 0.35259, 0.352108, 0.352021, 0.352208, 0.353102, 0.353003, 0.352318, 0.352953, 0.352986], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 1, 4, 6, 3, 0, 1, 25, 10, 0, 9, 1, 0, 0, 0, 0, 0]': ([0.352605, 0.353676, 0.353025, 0.352739, 0.352726, 0.357066, 0.352363, 0.352183, 0.352137, 0.353043, 0.35287, 0.35294, 0.352711, 0.352844, 0.352985, 0.352218, 0.353005, 0.353325, 0.353202, 0.35253, 0.352184, 0.35259, 0.352108, 0.352021, 0.352208, 0.353102, 0.353003, 0.352318, 0.352953, 0.352986], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		355
        Multiplications: 	86
        Divisions: 		0
        Logical: 		0
        Reads: 			763
        Writes: 		175
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest15.exe __orio_perftest15.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest15.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest15.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest15.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 641, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 559, in dopt_anova
    i)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 506, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 398, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest15.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 641, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 559, in dopt_anova
    i)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 506, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 398, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	56
        Max loop nest depth: 	6
        Additions: 		958
        Multiplications: 	192
        Divisions: 		0
        Logical: 		0
        Reads: 			1726
        Writes: 		295
        Comparisons:		56
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest16.exe __orio_perftest16.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest16.exe  
Program Test Output: 
{'[2, 5, 2, 2, 6, 1, 1, 1, 24, 6, 9, 0, 0, 0, 0, 0, 1, 1]' : 0.842195}
{'[2, 5, 2, 2, 6, 1, 1, 1, 24, 6, 9, 0, 0, 0, 0, 0, 1, 1]' : 0.842188}
{'[2, 5, 2, 2, 6, 1, 1, 1, 24, 6, 9, 0, 0, 0, 0, 0, 1, 1]' : 0.842935}
{'[2, 5, 2, 2, 6, 1, 1, 1, 24, 6, 9, 0, 0, 0, 0, 0, 1, 1]' : 0.842129}
{'[2, 5, 2, 2, 6, 1, 1, 1, 24, 6, 9, 0, 0, 0, 0, 0, 1, 1]' : 0.84205}
{'[2, 5, 2, 2, 6, 1, 1, 1, 24, 6, 9, 0, 0, 0, 0, 0, 1, 1]' : 0.841864}
{'[2, 5, 2, 2, 6, 1, 1, 1, 24, 6, 9, 0, 0, 0, 0, 0, 1, 1]' : 0.842325}
{'[2, 5, 2, 2, 6, 1, 1, 1, 24, 6, 9, 0, 0, 0, 0, 0, 1, 1]' : 0.842098}
{'[2, 5, 2, 2, 6, 1, 1, 1, 24, 6, 9, 0, 0, 0, 0, 0, 1, 1]' : 0.843288}
{'[2, 5, 2, 2, 6, 1, 1, 1, 24, 6, 9, 0, 0, 0, 0, 0, 1, 1]' : 0.842116}
{'[2, 5, 2, 2, 6, 1, 1, 1, 24, 6, 9, 0, 0, 0, 0, 0, 1, 1]' : 0.843443}
{'[2, 5, 2, 2, 6, 1, 1, 1, 24, 6, 9, 0, 0, 0, 0, 0, 1, 1]' : 0.842035}
{'[2, 5, 2, 2, 6, 1, 1, 1, 24, 6, 9, 0, 0, 0, 0, 0, 1, 1]' : 0.852183}
{'[2, 5, 2, 2, 6, 1, 1, 1, 24, 6, 9, 0, 0, 0, 0, 0, 1, 1]' : 0.842628}
{'[2, 5, 2, 2, 6, 1, 1, 1, 24, 6, 9, 0, 0, 0, 0, 0, 1, 1]' : 0.842119}
{'[2, 5, 2, 2, 6, 1, 1, 1, 24, 6, 9, 0, 0, 0, 0, 0, 1, 1]' : 0.843469}
{'[2, 5, 2, 2, 6, 1, 1, 1, 24, 6, 9, 0, 0, 0, 0, 0, 1, 1]' : 0.841969}
{'[2, 5, 2, 2, 6, 1, 1, 1, 24, 6, 9, 0, 0, 0, 0, 0, 1, 1]' : 0.842156}
{'[2, 5, 2, 2, 6, 1, 1, 1, 24, 6, 9, 0, 0, 0, 0, 0, 1, 1]' : 0.842279}
{'[2, 5, 2, 2, 6, 1, 1, 1, 24, 6, 9, 0, 0, 0, 0, 0, 1, 1]' : 0.842127}
{'[2, 5, 2, 2, 6, 1, 1, 1, 24, 6, 9, 0, 0, 0, 0, 0, 1, 1]' : 0.841947}
{'[2, 5, 2, 2, 6, 1, 1, 1, 24, 6, 9, 0, 0, 0, 0, 0, 1, 1]' : 0.841792}
{'[2, 5, 2, 2, 6, 1, 1, 1, 24, 6, 9, 0, 0, 0, 0, 0, 1, 1]' : 0.842251}
{'[2, 5, 2, 2, 6, 1, 1, 1, 24, 6, 9, 0, 0, 0, 0, 0, 1, 1]' : 0.841917}
{'[2, 5, 2, 2, 6, 1, 1, 1, 24, 6, 9, 0, 0, 0, 0, 0, 1, 1]' : 0.851272}
{'[2, 5, 2, 2, 6, 1, 1, 1, 24, 6, 9, 0, 0, 0, 0, 0, 1, 1]' : 0.842079}
{'[2, 5, 2, 2, 6, 1, 1, 1, 24, 6, 9, 0, 0, 0, 0, 0, 1, 1]' : 0.843502}
{'[2, 5, 2, 2, 6, 1, 1, 1, 24, 6, 9, 0, 0, 0, 0, 0, 1, 1]' : 0.842201}
{'[2, 5, 2, 2, 6, 1, 1, 1, 24, 6, 9, 0, 0, 0, 0, 0, 1, 1]' : 0.841817}
{'[2, 5, 2, 2, 6, 1, 1, 1, 24, 6, 9, 0, 0, 0, 0, 0, 1, 1]' : 0.842312}

out:
 ["{'[2, 5, 2, 2, 6, 1, 1, 1, 24, 6, 9, 0, 0, 0, 0, 0, 1, 1]' : 0.842195}", "{'[2, 5, 2, 2, 6, 1, 1, 1, 24, 6, 9, 0, 0, 0, 0, 0, 1, 1]' : 0.842188}", "{'[2, 5, 2, 2, 6, 1, 1, 1, 24, 6, 9, 0, 0, 0, 0, 0, 1, 1]' : 0.842935}", "{'[2, 5, 2, 2, 6, 1, 1, 1, 24, 6, 9, 0, 0, 0, 0, 0, 1, 1]' : 0.842129}", "{'[2, 5, 2, 2, 6, 1, 1, 1, 24, 6, 9, 0, 0, 0, 0, 0, 1, 1]' : 0.84205}", "{'[2, 5, 2, 2, 6, 1, 1, 1, 24, 6, 9, 0, 0, 0, 0, 0, 1, 1]' : 0.841864}", "{'[2, 5, 2, 2, 6, 1, 1, 1, 24, 6, 9, 0, 0, 0, 0, 0, 1, 1]' : 0.842325}", "{'[2, 5, 2, 2, 6, 1, 1, 1, 24, 6, 9, 0, 0, 0, 0, 0, 1, 1]' : 0.842098}", "{'[2, 5, 2, 2, 6, 1, 1, 1, 24, 6, 9, 0, 0, 0, 0, 0, 1, 1]' : 0.843288}", "{'[2, 5, 2, 2, 6, 1, 1, 1, 24, 6, 9, 0, 0, 0, 0, 0, 1, 1]' : 0.842116}", "{'[2, 5, 2, 2, 6, 1, 1, 1, 24, 6, 9, 0, 0, 0, 0, 0, 1, 1]' : 0.843443}", "{'[2, 5, 2, 2, 6, 1, 1, 1, 24, 6, 9, 0, 0, 0, 0, 0, 1, 1]' : 0.842035}", "{'[2, 5, 2, 2, 6, 1, 1, 1, 24, 6, 9, 0, 0, 0, 0, 0, 1, 1]' : 0.852183}", "{'[2, 5, 2, 2, 6, 1, 1, 1, 24, 6, 9, 0, 0, 0, 0, 0, 1, 1]' : 0.842628}", "{'[2, 5, 2, 2, 6, 1, 1, 1, 24, 6, 9, 0, 0, 0, 0, 0, 1, 1]' : 0.842119}", "{'[2, 5, 2, 2, 6, 1, 1, 1, 24, 6, 9, 0, 0, 0, 0, 0, 1, 1]' : 0.843469}", "{'[2, 5, 2, 2, 6, 1, 1, 1, 24, 6, 9, 0, 0, 0, 0, 0, 1, 1]' : 0.841969}", "{'[2, 5, 2, 2, 6, 1, 1, 1, 24, 6, 9, 0, 0, 0, 0, 0, 1, 1]' : 0.842156}", "{'[2, 5, 2, 2, 6, 1, 1, 1, 24, 6, 9, 0, 0, 0, 0, 0, 1, 1]' : 0.842279}", "{'[2, 5, 2, 2, 6, 1, 1, 1, 24, 6, 9, 0, 0, 0, 0, 0, 1, 1]' : 0.842127}", "{'[2, 5, 2, 2, 6, 1, 1, 1, 24, 6, 9, 0, 0, 0, 0, 0, 1, 1]' : 0.841947}", "{'[2, 5, 2, 2, 6, 1, 1, 1, 24, 6, 9, 0, 0, 0, 0, 0, 1, 1]' : 0.841792}", "{'[2, 5, 2, 2, 6, 1, 1, 1, 24, 6, 9, 0, 0, 0, 0, 0, 1, 1]' : 0.842251}", "{'[2, 5, 2, 2, 6, 1, 1, 1, 24, 6, 9, 0, 0, 0, 0, 0, 1, 1]' : 0.841917}", "{'[2, 5, 2, 2, 6, 1, 1, 1, 24, 6, 9, 0, 0, 0, 0, 0, 1, 1]' : 0.851272}", "{'[2, 5, 2, 2, 6, 1, 1, 1, 24, 6, 9, 0, 0, 0, 0, 0, 1, 1]' : 0.842079}", "{'[2, 5, 2, 2, 6, 1, 1, 1, 24, 6, 9, 0, 0, 0, 0, 0, 1, 1]' : 0.843502}", "{'[2, 5, 2, 2, 6, 1, 1, 1, 24, 6, 9, 0, 0, 0, 0, 0, 1, 1]' : 0.842201}", "{'[2, 5, 2, 2, 6, 1, 1, 1, 24, 6, 9, 0, 0, 0, 0, 0, 1, 1]' : 0.841817}", "{'[2, 5, 2, 2, 6, 1, 1, 1, 24, 6, 9, 0, 0, 0, 0, 0, 1, 1]' : 0.842312}"]
returning from 'run': {'[2, 5, 2, 2, 6, 1, 1, 1, 24, 6, 9, 0, 0, 0, 0, 0, 1, 1]': ([0.842195, 0.842188, 0.842935, 0.842129, 0.84205, 0.841864, 0.842325, 0.842098, 0.843288, 0.842116, 0.843443, 0.842035, 0.852183, 0.842628, 0.842119, 0.843469, 0.841969, 0.842156, 0.842279, 0.842127, 0.841947, 0.841792, 0.842251, 0.841917, 0.851272, 0.842079, 0.843502, 0.842201, 0.841817, 0.842312], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 5, 2, 2, 6, 1, 1, 1, 24, 6, 9, 0, 0, 0, 0, 0, 1, 1]': ([0.842195, 0.842188, 0.842935, 0.842129, 0.84205, 0.841864, 0.842325, 0.842098, 0.843288, 0.842116, 0.843443, 0.842035, 0.852183, 0.842628, 0.842119, 0.843469, 0.841969, 0.842156, 0.842279, 0.842127, 0.841947, 0.841792, 0.842251, 0.841917, 0.851272, 0.842079, 0.843502, 0.842201, 0.841817, 0.842312], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = kkk
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		355
        Multiplications: 	102
        Divisions: 		0
        Logical: 		0
        Reads: 			755
        Writes: 		158
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest17.exe __orio_perftest17.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest17.exe  
Program Test Output: 
{'[0, 5, 4, 4, 0, 2, 0, 1, 16, 0, 12, 27, 0, 1, 0, 1, 0, 0]' : 0.742877}
{'[0, 5, 4, 4, 0, 2, 0, 1, 16, 0, 12, 27, 0, 1, 0, 1, 0, 0]' : 0.738249}
{'[0, 5, 4, 4, 0, 2, 0, 1, 16, 0, 12, 27, 0, 1, 0, 1, 0, 0]' : 0.739187}
{'[0, 5, 4, 4, 0, 2, 0, 1, 16, 0, 12, 27, 0, 1, 0, 1, 0, 0]' : 0.738532}
{'[0, 5, 4, 4, 0, 2, 0, 1, 16, 0, 12, 27, 0, 1, 0, 1, 0, 0]' : 0.744689}
{'[0, 5, 4, 4, 0, 2, 0, 1, 16, 0, 12, 27, 0, 1, 0, 1, 0, 0]' : 0.742808}
{'[0, 5, 4, 4, 0, 2, 0, 1, 16, 0, 12, 27, 0, 1, 0, 1, 0, 0]' : 0.740383}
{'[0, 5, 4, 4, 0, 2, 0, 1, 16, 0, 12, 27, 0, 1, 0, 1, 0, 0]' : 0.738038}
{'[0, 5, 4, 4, 0, 2, 0, 1, 16, 0, 12, 27, 0, 1, 0, 1, 0, 0]' : 0.738218}
{'[0, 5, 4, 4, 0, 2, 0, 1, 16, 0, 12, 27, 0, 1, 0, 1, 0, 0]' : 0.738179}
{'[0, 5, 4, 4, 0, 2, 0, 1, 16, 0, 12, 27, 0, 1, 0, 1, 0, 0]' : 0.738518}
{'[0, 5, 4, 4, 0, 2, 0, 1, 16, 0, 12, 27, 0, 1, 0, 1, 0, 0]' : 0.738251}
{'[0, 5, 4, 4, 0, 2, 0, 1, 16, 0, 12, 27, 0, 1, 0, 1, 0, 0]' : 0.738918}
{'[0, 5, 4, 4, 0, 2, 0, 1, 16, 0, 12, 27, 0, 1, 0, 1, 0, 0]' : 0.739501}
{'[0, 5, 4, 4, 0, 2, 0, 1, 16, 0, 12, 27, 0, 1, 0, 1, 0, 0]' : 0.738826}
{'[0, 5, 4, 4, 0, 2, 0, 1, 16, 0, 12, 27, 0, 1, 0, 1, 0, 0]' : 0.738079}
{'[0, 5, 4, 4, 0, 2, 0, 1, 16, 0, 12, 27, 0, 1, 0, 1, 0, 0]' : 0.742439}
{'[0, 5, 4, 4, 0, 2, 0, 1, 16, 0, 12, 27, 0, 1, 0, 1, 0, 0]' : 0.738269}
{'[0, 5, 4, 4, 0, 2, 0, 1, 16, 0, 12, 27, 0, 1, 0, 1, 0, 0]' : 0.739899}
{'[0, 5, 4, 4, 0, 2, 0, 1, 16, 0, 12, 27, 0, 1, 0, 1, 0, 0]' : 0.738342}
{'[0, 5, 4, 4, 0, 2, 0, 1, 16, 0, 12, 27, 0, 1, 0, 1, 0, 0]' : 0.744969}
{'[0, 5, 4, 4, 0, 2, 0, 1, 16, 0, 12, 27, 0, 1, 0, 1, 0, 0]' : 0.738103}
{'[0, 5, 4, 4, 0, 2, 0, 1, 16, 0, 12, 27, 0, 1, 0, 1, 0, 0]' : 0.740066}
{'[0, 5, 4, 4, 0, 2, 0, 1, 16, 0, 12, 27, 0, 1, 0, 1, 0, 0]' : 0.747056}
{'[0, 5, 4, 4, 0, 2, 0, 1, 16, 0, 12, 27, 0, 1, 0, 1, 0, 0]' : 0.738152}
{'[0, 5, 4, 4, 0, 2, 0, 1, 16, 0, 12, 27, 0, 1, 0, 1, 0, 0]' : 0.738546}
{'[0, 5, 4, 4, 0, 2, 0, 1, 16, 0, 12, 27, 0, 1, 0, 1, 0, 0]' : 0.73935}
{'[0, 5, 4, 4, 0, 2, 0, 1, 16, 0, 12, 27, 0, 1, 0, 1, 0, 0]' : 0.7386}
{'[0, 5, 4, 4, 0, 2, 0, 1, 16, 0, 12, 27, 0, 1, 0, 1, 0, 0]' : 0.738302}
{'[0, 5, 4, 4, 0, 2, 0, 1, 16, 0, 12, 27, 0, 1, 0, 1, 0, 0]' : 0.738339}

out:
 ["{'[0, 5, 4, 4, 0, 2, 0, 1, 16, 0, 12, 27, 0, 1, 0, 1, 0, 0]' : 0.742877}", "{'[0, 5, 4, 4, 0, 2, 0, 1, 16, 0, 12, 27, 0, 1, 0, 1, 0, 0]' : 0.738249}", "{'[0, 5, 4, 4, 0, 2, 0, 1, 16, 0, 12, 27, 0, 1, 0, 1, 0, 0]' : 0.739187}", "{'[0, 5, 4, 4, 0, 2, 0, 1, 16, 0, 12, 27, 0, 1, 0, 1, 0, 0]' : 0.738532}", "{'[0, 5, 4, 4, 0, 2, 0, 1, 16, 0, 12, 27, 0, 1, 0, 1, 0, 0]' : 0.744689}", "{'[0, 5, 4, 4, 0, 2, 0, 1, 16, 0, 12, 27, 0, 1, 0, 1, 0, 0]' : 0.742808}", "{'[0, 5, 4, 4, 0, 2, 0, 1, 16, 0, 12, 27, 0, 1, 0, 1, 0, 0]' : 0.740383}", "{'[0, 5, 4, 4, 0, 2, 0, 1, 16, 0, 12, 27, 0, 1, 0, 1, 0, 0]' : 0.738038}", "{'[0, 5, 4, 4, 0, 2, 0, 1, 16, 0, 12, 27, 0, 1, 0, 1, 0, 0]' : 0.738218}", "{'[0, 5, 4, 4, 0, 2, 0, 1, 16, 0, 12, 27, 0, 1, 0, 1, 0, 0]' : 0.738179}", "{'[0, 5, 4, 4, 0, 2, 0, 1, 16, 0, 12, 27, 0, 1, 0, 1, 0, 0]' : 0.738518}", "{'[0, 5, 4, 4, 0, 2, 0, 1, 16, 0, 12, 27, 0, 1, 0, 1, 0, 0]' : 0.738251}", "{'[0, 5, 4, 4, 0, 2, 0, 1, 16, 0, 12, 27, 0, 1, 0, 1, 0, 0]' : 0.738918}", "{'[0, 5, 4, 4, 0, 2, 0, 1, 16, 0, 12, 27, 0, 1, 0, 1, 0, 0]' : 0.739501}", "{'[0, 5, 4, 4, 0, 2, 0, 1, 16, 0, 12, 27, 0, 1, 0, 1, 0, 0]' : 0.738826}", "{'[0, 5, 4, 4, 0, 2, 0, 1, 16, 0, 12, 27, 0, 1, 0, 1, 0, 0]' : 0.738079}", "{'[0, 5, 4, 4, 0, 2, 0, 1, 16, 0, 12, 27, 0, 1, 0, 1, 0, 0]' : 0.742439}", "{'[0, 5, 4, 4, 0, 2, 0, 1, 16, 0, 12, 27, 0, 1, 0, 1, 0, 0]' : 0.738269}", "{'[0, 5, 4, 4, 0, 2, 0, 1, 16, 0, 12, 27, 0, 1, 0, 1, 0, 0]' : 0.739899}", "{'[0, 5, 4, 4, 0, 2, 0, 1, 16, 0, 12, 27, 0, 1, 0, 1, 0, 0]' : 0.738342}", "{'[0, 5, 4, 4, 0, 2, 0, 1, 16, 0, 12, 27, 0, 1, 0, 1, 0, 0]' : 0.744969}", "{'[0, 5, 4, 4, 0, 2, 0, 1, 16, 0, 12, 27, 0, 1, 0, 1, 0, 0]' : 0.738103}", "{'[0, 5, 4, 4, 0, 2, 0, 1, 16, 0, 12, 27, 0, 1, 0, 1, 0, 0]' : 0.740066}", "{'[0, 5, 4, 4, 0, 2, 0, 1, 16, 0, 12, 27, 0, 1, 0, 1, 0, 0]' : 0.747056}", "{'[0, 5, 4, 4, 0, 2, 0, 1, 16, 0, 12, 27, 0, 1, 0, 1, 0, 0]' : 0.738152}", "{'[0, 5, 4, 4, 0, 2, 0, 1, 16, 0, 12, 27, 0, 1, 0, 1, 0, 0]' : 0.738546}", "{'[0, 5, 4, 4, 0, 2, 0, 1, 16, 0, 12, 27, 0, 1, 0, 1, 0, 0]' : 0.73935}", "{'[0, 5, 4, 4, 0, 2, 0, 1, 16, 0, 12, 27, 0, 1, 0, 1, 0, 0]' : 0.7386}", "{'[0, 5, 4, 4, 0, 2, 0, 1, 16, 0, 12, 27, 0, 1, 0, 1, 0, 0]' : 0.738302}", "{'[0, 5, 4, 4, 0, 2, 0, 1, 16, 0, 12, 27, 0, 1, 0, 1, 0, 0]' : 0.738339}"]
returning from 'run': {'[0, 5, 4, 4, 0, 2, 0, 1, 16, 0, 12, 27, 0, 1, 0, 1, 0, 0]': ([0.742877, 0.738249, 0.739187, 0.738532, 0.744689, 0.742808, 0.740383, 0.738038, 0.738218, 0.738179, 0.738518, 0.738251, 0.738918, 0.739501, 0.738826, 0.738079, 0.742439, 0.738269, 0.739899, 0.738342, 0.744969, 0.738103, 0.740066, 0.747056, 0.738152, 0.738546, 0.73935, 0.7386, 0.738302, 0.738339], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 5, 4, 4, 0, 2, 0, 1, 16, 0, 12, 27, 0, 1, 0, 1, 0, 0]': ([0.742877, 0.738249, 0.739187, 0.738532, 0.744689, 0.742808, 0.740383, 0.738038, 0.738218, 0.738179, 0.738518, 0.738251, 0.738918, 0.739501, 0.738826, 0.738079, 0.742439, 0.738269, 0.739899, 0.738342, 0.744969, 0.738103, 0.740066, 0.747056, 0.738152, 0.738546, 0.73935, 0.7386, 0.738302, 0.738339], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = jjj
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = kkk
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	4
        Additions: 		1806
        Multiplications: 	576
        Divisions: 		0
        Logical: 		0
        Reads: 			3063
        Writes: 		348
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest18.exe __orio_perftest18.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest18.exe  
Program Test Output: 
{'[6, 4, 5, 0, 2, 3, 0, 0, 11, 2, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.48989}
{'[6, 4, 5, 0, 2, 3, 0, 0, 11, 2, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.491284}
{'[6, 4, 5, 0, 2, 3, 0, 0, 11, 2, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.489646}
{'[6, 4, 5, 0, 2, 3, 0, 0, 11, 2, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.490973}
{'[6, 4, 5, 0, 2, 3, 0, 0, 11, 2, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.489806}
{'[6, 4, 5, 0, 2, 3, 0, 0, 11, 2, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.490654}
{'[6, 4, 5, 0, 2, 3, 0, 0, 11, 2, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.489854}
{'[6, 4, 5, 0, 2, 3, 0, 0, 11, 2, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.490238}
{'[6, 4, 5, 0, 2, 3, 0, 0, 11, 2, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.490001}
{'[6, 4, 5, 0, 2, 3, 0, 0, 11, 2, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.490247}
{'[6, 4, 5, 0, 2, 3, 0, 0, 11, 2, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.490002}
{'[6, 4, 5, 0, 2, 3, 0, 0, 11, 2, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.490584}
{'[6, 4, 5, 0, 2, 3, 0, 0, 11, 2, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.491085}
{'[6, 4, 5, 0, 2, 3, 0, 0, 11, 2, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.4897}
{'[6, 4, 5, 0, 2, 3, 0, 0, 11, 2, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.489707}
{'[6, 4, 5, 0, 2, 3, 0, 0, 11, 2, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.48975}
{'[6, 4, 5, 0, 2, 3, 0, 0, 11, 2, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.489722}
{'[6, 4, 5, 0, 2, 3, 0, 0, 11, 2, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.489844}
{'[6, 4, 5, 0, 2, 3, 0, 0, 11, 2, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.490013}
{'[6, 4, 5, 0, 2, 3, 0, 0, 11, 2, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.489748}
{'[6, 4, 5, 0, 2, 3, 0, 0, 11, 2, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.489785}
{'[6, 4, 5, 0, 2, 3, 0, 0, 11, 2, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.489812}
{'[6, 4, 5, 0, 2, 3, 0, 0, 11, 2, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.489369}
{'[6, 4, 5, 0, 2, 3, 0, 0, 11, 2, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.48997}
{'[6, 4, 5, 0, 2, 3, 0, 0, 11, 2, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.489543}
{'[6, 4, 5, 0, 2, 3, 0, 0, 11, 2, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.489482}
{'[6, 4, 5, 0, 2, 3, 0, 0, 11, 2, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.489572}
{'[6, 4, 5, 0, 2, 3, 0, 0, 11, 2, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.489583}
{'[6, 4, 5, 0, 2, 3, 0, 0, 11, 2, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.489716}
{'[6, 4, 5, 0, 2, 3, 0, 0, 11, 2, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.489622}

out:
 ["{'[6, 4, 5, 0, 2, 3, 0, 0, 11, 2, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.48989}", "{'[6, 4, 5, 0, 2, 3, 0, 0, 11, 2, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.491284}", "{'[6, 4, 5, 0, 2, 3, 0, 0, 11, 2, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.489646}", "{'[6, 4, 5, 0, 2, 3, 0, 0, 11, 2, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.490973}", "{'[6, 4, 5, 0, 2, 3, 0, 0, 11, 2, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.489806}", "{'[6, 4, 5, 0, 2, 3, 0, 0, 11, 2, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.490654}", "{'[6, 4, 5, 0, 2, 3, 0, 0, 11, 2, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.489854}", "{'[6, 4, 5, 0, 2, 3, 0, 0, 11, 2, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.490238}", "{'[6, 4, 5, 0, 2, 3, 0, 0, 11, 2, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.490001}", "{'[6, 4, 5, 0, 2, 3, 0, 0, 11, 2, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.490247}", "{'[6, 4, 5, 0, 2, 3, 0, 0, 11, 2, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.490002}", "{'[6, 4, 5, 0, 2, 3, 0, 0, 11, 2, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.490584}", "{'[6, 4, 5, 0, 2, 3, 0, 0, 11, 2, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.491085}", "{'[6, 4, 5, 0, 2, 3, 0, 0, 11, 2, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.4897}", "{'[6, 4, 5, 0, 2, 3, 0, 0, 11, 2, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.489707}", "{'[6, 4, 5, 0, 2, 3, 0, 0, 11, 2, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.48975}", "{'[6, 4, 5, 0, 2, 3, 0, 0, 11, 2, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.489722}", "{'[6, 4, 5, 0, 2, 3, 0, 0, 11, 2, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.489844}", "{'[6, 4, 5, 0, 2, 3, 0, 0, 11, 2, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.490013}", "{'[6, 4, 5, 0, 2, 3, 0, 0, 11, 2, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.489748}", "{'[6, 4, 5, 0, 2, 3, 0, 0, 11, 2, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.489785}", "{'[6, 4, 5, 0, 2, 3, 0, 0, 11, 2, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.489812}", "{'[6, 4, 5, 0, 2, 3, 0, 0, 11, 2, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.489369}", "{'[6, 4, 5, 0, 2, 3, 0, 0, 11, 2, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.48997}", "{'[6, 4, 5, 0, 2, 3, 0, 0, 11, 2, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.489543}", "{'[6, 4, 5, 0, 2, 3, 0, 0, 11, 2, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.489482}", "{'[6, 4, 5, 0, 2, 3, 0, 0, 11, 2, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.489572}", "{'[6, 4, 5, 0, 2, 3, 0, 0, 11, 2, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.489583}", "{'[6, 4, 5, 0, 2, 3, 0, 0, 11, 2, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.489716}", "{'[6, 4, 5, 0, 2, 3, 0, 0, 11, 2, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.489622}"]
returning from 'run': {'[6, 4, 5, 0, 2, 3, 0, 0, 11, 2, 5, 0, 2, 0, 0, 0, 0, 0]': ([0.48989, 0.491284, 0.489646, 0.490973, 0.489806, 0.490654, 0.489854, 0.490238, 0.490001, 0.490247, 0.490002, 0.490584, 0.491085, 0.4897, 0.489707, 0.48975, 0.489722, 0.489844, 0.490013, 0.489748, 0.489785, 0.489812, 0.489369, 0.48997, 0.489543, 0.489482, 0.489572, 0.489583, 0.489716, 0.489622], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 4, 5, 0, 2, 3, 0, 0, 11, 2, 5, 0, 2, 0, 0, 0, 0, 0]': ([0.48989, 0.491284, 0.489646, 0.490973, 0.489806, 0.490654, 0.489854, 0.490238, 0.490001, 0.490247, 0.490002, 0.490584, 0.491085, 0.4897, 0.489707, 0.48975, 0.489722, 0.489844, 0.490013, 0.489748, 0.489785, 0.489812, 0.489369, 0.48997, 0.489543, 0.489482, 0.489572, 0.489583, 0.489716, 0.489622], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	97
        Max loop nest depth: 	6
        Additions: 		1965
        Multiplications: 	484
        Divisions: 		0
        Logical: 		0
        Reads: 			4157
        Writes: 		919
        Comparisons:		97
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest19.exe __orio_perftest19.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest19.exe  
Program Test Output: 
{'[1, 2, 1, 6, 2, 6, 1, 1, 24, 12, 0, 8, 1, 0, 0, 1, 1, 1]' : 0.301706}
{'[1, 2, 1, 6, 2, 6, 1, 1, 24, 12, 0, 8, 1, 0, 0, 1, 1, 1]' : 0.30248}
{'[1, 2, 1, 6, 2, 6, 1, 1, 24, 12, 0, 8, 1, 0, 0, 1, 1, 1]' : 0.301908}
{'[1, 2, 1, 6, 2, 6, 1, 1, 24, 12, 0, 8, 1, 0, 0, 1, 1, 1]' : 0.302251}
{'[1, 2, 1, 6, 2, 6, 1, 1, 24, 12, 0, 8, 1, 0, 0, 1, 1, 1]' : 0.302006}
{'[1, 2, 1, 6, 2, 6, 1, 1, 24, 12, 0, 8, 1, 0, 0, 1, 1, 1]' : 0.302717}
{'[1, 2, 1, 6, 2, 6, 1, 1, 24, 12, 0, 8, 1, 0, 0, 1, 1, 1]' : 0.302277}
{'[1, 2, 1, 6, 2, 6, 1, 1, 24, 12, 0, 8, 1, 0, 0, 1, 1, 1]' : 0.301712}
{'[1, 2, 1, 6, 2, 6, 1, 1, 24, 12, 0, 8, 1, 0, 0, 1, 1, 1]' : 0.302212}
{'[1, 2, 1, 6, 2, 6, 1, 1, 24, 12, 0, 8, 1, 0, 0, 1, 1, 1]' : 0.302383}
{'[1, 2, 1, 6, 2, 6, 1, 1, 24, 12, 0, 8, 1, 0, 0, 1, 1, 1]' : 0.302354}
{'[1, 2, 1, 6, 2, 6, 1, 1, 24, 12, 0, 8, 1, 0, 0, 1, 1, 1]' : 0.302155}
{'[1, 2, 1, 6, 2, 6, 1, 1, 24, 12, 0, 8, 1, 0, 0, 1, 1, 1]' : 0.30236}
{'[1, 2, 1, 6, 2, 6, 1, 1, 24, 12, 0, 8, 1, 0, 0, 1, 1, 1]' : 0.301922}
{'[1, 2, 1, 6, 2, 6, 1, 1, 24, 12, 0, 8, 1, 0, 0, 1, 1, 1]' : 0.301979}
{'[1, 2, 1, 6, 2, 6, 1, 1, 24, 12, 0, 8, 1, 0, 0, 1, 1, 1]' : 0.302443}
{'[1, 2, 1, 6, 2, 6, 1, 1, 24, 12, 0, 8, 1, 0, 0, 1, 1, 1]' : 0.30194}
{'[1, 2, 1, 6, 2, 6, 1, 1, 24, 12, 0, 8, 1, 0, 0, 1, 1, 1]' : 0.302721}
{'[1, 2, 1, 6, 2, 6, 1, 1, 24, 12, 0, 8, 1, 0, 0, 1, 1, 1]' : 0.302786}
{'[1, 2, 1, 6, 2, 6, 1, 1, 24, 12, 0, 8, 1, 0, 0, 1, 1, 1]' : 0.301979}
{'[1, 2, 1, 6, 2, 6, 1, 1, 24, 12, 0, 8, 1, 0, 0, 1, 1, 1]' : 0.302075}
{'[1, 2, 1, 6, 2, 6, 1, 1, 24, 12, 0, 8, 1, 0, 0, 1, 1, 1]' : 0.302003}
{'[1, 2, 1, 6, 2, 6, 1, 1, 24, 12, 0, 8, 1, 0, 0, 1, 1, 1]' : 0.303868}
{'[1, 2, 1, 6, 2, 6, 1, 1, 24, 12, 0, 8, 1, 0, 0, 1, 1, 1]' : 0.302024}
{'[1, 2, 1, 6, 2, 6, 1, 1, 24, 12, 0, 8, 1, 0, 0, 1, 1, 1]' : 0.301666}
{'[1, 2, 1, 6, 2, 6, 1, 1, 24, 12, 0, 8, 1, 0, 0, 1, 1, 1]' : 0.301591}
{'[1, 2, 1, 6, 2, 6, 1, 1, 24, 12, 0, 8, 1, 0, 0, 1, 1, 1]' : 0.302307}
{'[1, 2, 1, 6, 2, 6, 1, 1, 24, 12, 0, 8, 1, 0, 0, 1, 1, 1]' : 0.302179}
{'[1, 2, 1, 6, 2, 6, 1, 1, 24, 12, 0, 8, 1, 0, 0, 1, 1, 1]' : 0.302222}
{'[1, 2, 1, 6, 2, 6, 1, 1, 24, 12, 0, 8, 1, 0, 0, 1, 1, 1]' : 0.302511}

out:
 ["{'[1, 2, 1, 6, 2, 6, 1, 1, 24, 12, 0, 8, 1, 0, 0, 1, 1, 1]' : 0.301706}", "{'[1, 2, 1, 6, 2, 6, 1, 1, 24, 12, 0, 8, 1, 0, 0, 1, 1, 1]' : 0.30248}", "{'[1, 2, 1, 6, 2, 6, 1, 1, 24, 12, 0, 8, 1, 0, 0, 1, 1, 1]' : 0.301908}", "{'[1, 2, 1, 6, 2, 6, 1, 1, 24, 12, 0, 8, 1, 0, 0, 1, 1, 1]' : 0.302251}", "{'[1, 2, 1, 6, 2, 6, 1, 1, 24, 12, 0, 8, 1, 0, 0, 1, 1, 1]' : 0.302006}", "{'[1, 2, 1, 6, 2, 6, 1, 1, 24, 12, 0, 8, 1, 0, 0, 1, 1, 1]' : 0.302717}", "{'[1, 2, 1, 6, 2, 6, 1, 1, 24, 12, 0, 8, 1, 0, 0, 1, 1, 1]' : 0.302277}", "{'[1, 2, 1, 6, 2, 6, 1, 1, 24, 12, 0, 8, 1, 0, 0, 1, 1, 1]' : 0.301712}", "{'[1, 2, 1, 6, 2, 6, 1, 1, 24, 12, 0, 8, 1, 0, 0, 1, 1, 1]' : 0.302212}", "{'[1, 2, 1, 6, 2, 6, 1, 1, 24, 12, 0, 8, 1, 0, 0, 1, 1, 1]' : 0.302383}", "{'[1, 2, 1, 6, 2, 6, 1, 1, 24, 12, 0, 8, 1, 0, 0, 1, 1, 1]' : 0.302354}", "{'[1, 2, 1, 6, 2, 6, 1, 1, 24, 12, 0, 8, 1, 0, 0, 1, 1, 1]' : 0.302155}", "{'[1, 2, 1, 6, 2, 6, 1, 1, 24, 12, 0, 8, 1, 0, 0, 1, 1, 1]' : 0.30236}", "{'[1, 2, 1, 6, 2, 6, 1, 1, 24, 12, 0, 8, 1, 0, 0, 1, 1, 1]' : 0.301922}", "{'[1, 2, 1, 6, 2, 6, 1, 1, 24, 12, 0, 8, 1, 0, 0, 1, 1, 1]' : 0.301979}", "{'[1, 2, 1, 6, 2, 6, 1, 1, 24, 12, 0, 8, 1, 0, 0, 1, 1, 1]' : 0.302443}", "{'[1, 2, 1, 6, 2, 6, 1, 1, 24, 12, 0, 8, 1, 0, 0, 1, 1, 1]' : 0.30194}", "{'[1, 2, 1, 6, 2, 6, 1, 1, 24, 12, 0, 8, 1, 0, 0, 1, 1, 1]' : 0.302721}", "{'[1, 2, 1, 6, 2, 6, 1, 1, 24, 12, 0, 8, 1, 0, 0, 1, 1, 1]' : 0.302786}", "{'[1, 2, 1, 6, 2, 6, 1, 1, 24, 12, 0, 8, 1, 0, 0, 1, 1, 1]' : 0.301979}", "{'[1, 2, 1, 6, 2, 6, 1, 1, 24, 12, 0, 8, 1, 0, 0, 1, 1, 1]' : 0.302075}", "{'[1, 2, 1, 6, 2, 6, 1, 1, 24, 12, 0, 8, 1, 0, 0, 1, 1, 1]' : 0.302003}", "{'[1, 2, 1, 6, 2, 6, 1, 1, 24, 12, 0, 8, 1, 0, 0, 1, 1, 1]' : 0.303868}", "{'[1, 2, 1, 6, 2, 6, 1, 1, 24, 12, 0, 8, 1, 0, 0, 1, 1, 1]' : 0.302024}", "{'[1, 2, 1, 6, 2, 6, 1, 1, 24, 12, 0, 8, 1, 0, 0, 1, 1, 1]' : 0.301666}", "{'[1, 2, 1, 6, 2, 6, 1, 1, 24, 12, 0, 8, 1, 0, 0, 1, 1, 1]' : 0.301591}", "{'[1, 2, 1, 6, 2, 6, 1, 1, 24, 12, 0, 8, 1, 0, 0, 1, 1, 1]' : 0.302307}", "{'[1, 2, 1, 6, 2, 6, 1, 1, 24, 12, 0, 8, 1, 0, 0, 1, 1, 1]' : 0.302179}", "{'[1, 2, 1, 6, 2, 6, 1, 1, 24, 12, 0, 8, 1, 0, 0, 1, 1, 1]' : 0.302222}", "{'[1, 2, 1, 6, 2, 6, 1, 1, 24, 12, 0, 8, 1, 0, 0, 1, 1, 1]' : 0.302511}"]
returning from 'run': {'[1, 2, 1, 6, 2, 6, 1, 1, 24, 12, 0, 8, 1, 0, 0, 1, 1, 1]': ([0.301706, 0.30248, 0.301908, 0.302251, 0.302006, 0.302717, 0.302277, 0.301712, 0.302212, 0.302383, 0.302354, 0.302155, 0.30236, 0.301922, 0.301979, 0.302443, 0.30194, 0.302721, 0.302786, 0.301979, 0.302075, 0.302003, 0.303868, 0.302024, 0.301666, 0.301591, 0.302307, 0.302179, 0.302222, 0.302511], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 2, 1, 6, 2, 6, 1, 1, 24, 12, 0, 8, 1, 0, 0, 1, 1, 1]': ([0.301706, 0.30248, 0.301908, 0.302251, 0.302006, 0.302717, 0.302277, 0.301712, 0.302212, 0.302383, 0.302354, 0.302155, 0.30236, 0.301922, 0.301979, 0.302443, 0.30194, 0.302721, 0.302786, 0.301979, 0.302075, 0.302003, 0.303868, 0.302024, 0.301666, 0.301591, 0.302307, 0.302179, 0.302222, 0.302511], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	82
        Max loop nest depth: 	6
        Additions: 		2870
        Multiplications: 	672
        Divisions: 		0
        Logical: 		0
        Reads: 			4493
        Writes: 		558
        Comparisons:		82
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest20.exe __orio_perftest20.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest20.exe  
Program Test Output: 
{'[1, 1, 2, 3, 6, 0, 1, 0, 11, 18, 9, 0, 1, 0, 0, 0, 1, 0]' : 0.286758}
{'[1, 1, 2, 3, 6, 0, 1, 0, 11, 18, 9, 0, 1, 0, 0, 0, 1, 0]' : 0.288196}
{'[1, 1, 2, 3, 6, 0, 1, 0, 11, 18, 9, 0, 1, 0, 0, 0, 1, 0]' : 0.29036}
{'[1, 1, 2, 3, 6, 0, 1, 0, 11, 18, 9, 0, 1, 0, 0, 0, 1, 0]' : 0.286066}
{'[1, 1, 2, 3, 6, 0, 1, 0, 11, 18, 9, 0, 1, 0, 0, 0, 1, 0]' : 0.286641}
{'[1, 1, 2, 3, 6, 0, 1, 0, 11, 18, 9, 0, 1, 0, 0, 0, 1, 0]' : 0.286675}
{'[1, 1, 2, 3, 6, 0, 1, 0, 11, 18, 9, 0, 1, 0, 0, 0, 1, 0]' : 0.286638}
{'[1, 1, 2, 3, 6, 0, 1, 0, 11, 18, 9, 0, 1, 0, 0, 0, 1, 0]' : 0.286858}
{'[1, 1, 2, 3, 6, 0, 1, 0, 11, 18, 9, 0, 1, 0, 0, 0, 1, 0]' : 0.287188}
{'[1, 1, 2, 3, 6, 0, 1, 0, 11, 18, 9, 0, 1, 0, 0, 0, 1, 0]' : 0.286924}
{'[1, 1, 2, 3, 6, 0, 1, 0, 11, 18, 9, 0, 1, 0, 0, 0, 1, 0]' : 0.286286}
{'[1, 1, 2, 3, 6, 0, 1, 0, 11, 18, 9, 0, 1, 0, 0, 0, 1, 0]' : 0.287286}
{'[1, 1, 2, 3, 6, 0, 1, 0, 11, 18, 9, 0, 1, 0, 0, 0, 1, 0]' : 0.288162}
{'[1, 1, 2, 3, 6, 0, 1, 0, 11, 18, 9, 0, 1, 0, 0, 0, 1, 0]' : 0.28626}
{'[1, 1, 2, 3, 6, 0, 1, 0, 11, 18, 9, 0, 1, 0, 0, 0, 1, 0]' : 0.285844}
{'[1, 1, 2, 3, 6, 0, 1, 0, 11, 18, 9, 0, 1, 0, 0, 0, 1, 0]' : 0.287039}
{'[1, 1, 2, 3, 6, 0, 1, 0, 11, 18, 9, 0, 1, 0, 0, 0, 1, 0]' : 0.28687}
{'[1, 1, 2, 3, 6, 0, 1, 0, 11, 18, 9, 0, 1, 0, 0, 0, 1, 0]' : 0.286286}
{'[1, 1, 2, 3, 6, 0, 1, 0, 11, 18, 9, 0, 1, 0, 0, 0, 1, 0]' : 0.286075}
{'[1, 1, 2, 3, 6, 0, 1, 0, 11, 18, 9, 0, 1, 0, 0, 0, 1, 0]' : 0.286276}
{'[1, 1, 2, 3, 6, 0, 1, 0, 11, 18, 9, 0, 1, 0, 0, 0, 1, 0]' : 0.28664}
{'[1, 1, 2, 3, 6, 0, 1, 0, 11, 18, 9, 0, 1, 0, 0, 0, 1, 0]' : 0.286379}
{'[1, 1, 2, 3, 6, 0, 1, 0, 11, 18, 9, 0, 1, 0, 0, 0, 1, 0]' : 0.289537}
{'[1, 1, 2, 3, 6, 0, 1, 0, 11, 18, 9, 0, 1, 0, 0, 0, 1, 0]' : 0.286848}
{'[1, 1, 2, 3, 6, 0, 1, 0, 11, 18, 9, 0, 1, 0, 0, 0, 1, 0]' : 0.287058}
{'[1, 1, 2, 3, 6, 0, 1, 0, 11, 18, 9, 0, 1, 0, 0, 0, 1, 0]' : 0.286458}
{'[1, 1, 2, 3, 6, 0, 1, 0, 11, 18, 9, 0, 1, 0, 0, 0, 1, 0]' : 0.286493}
{'[1, 1, 2, 3, 6, 0, 1, 0, 11, 18, 9, 0, 1, 0, 0, 0, 1, 0]' : 0.28644}
{'[1, 1, 2, 3, 6, 0, 1, 0, 11, 18, 9, 0, 1, 0, 0, 0, 1, 0]' : 0.286495}
{'[1, 1, 2, 3, 6, 0, 1, 0, 11, 18, 9, 0, 1, 0, 0, 0, 1, 0]' : 0.288419}

out:
 ["{'[1, 1, 2, 3, 6, 0, 1, 0, 11, 18, 9, 0, 1, 0, 0, 0, 1, 0]' : 0.286758}", "{'[1, 1, 2, 3, 6, 0, 1, 0, 11, 18, 9, 0, 1, 0, 0, 0, 1, 0]' : 0.288196}", "{'[1, 1, 2, 3, 6, 0, 1, 0, 11, 18, 9, 0, 1, 0, 0, 0, 1, 0]' : 0.29036}", "{'[1, 1, 2, 3, 6, 0, 1, 0, 11, 18, 9, 0, 1, 0, 0, 0, 1, 0]' : 0.286066}", "{'[1, 1, 2, 3, 6, 0, 1, 0, 11, 18, 9, 0, 1, 0, 0, 0, 1, 0]' : 0.286641}", "{'[1, 1, 2, 3, 6, 0, 1, 0, 11, 18, 9, 0, 1, 0, 0, 0, 1, 0]' : 0.286675}", "{'[1, 1, 2, 3, 6, 0, 1, 0, 11, 18, 9, 0, 1, 0, 0, 0, 1, 0]' : 0.286638}", "{'[1, 1, 2, 3, 6, 0, 1, 0, 11, 18, 9, 0, 1, 0, 0, 0, 1, 0]' : 0.286858}", "{'[1, 1, 2, 3, 6, 0, 1, 0, 11, 18, 9, 0, 1, 0, 0, 0, 1, 0]' : 0.287188}", "{'[1, 1, 2, 3, 6, 0, 1, 0, 11, 18, 9, 0, 1, 0, 0, 0, 1, 0]' : 0.286924}", "{'[1, 1, 2, 3, 6, 0, 1, 0, 11, 18, 9, 0, 1, 0, 0, 0, 1, 0]' : 0.286286}", "{'[1, 1, 2, 3, 6, 0, 1, 0, 11, 18, 9, 0, 1, 0, 0, 0, 1, 0]' : 0.287286}", "{'[1, 1, 2, 3, 6, 0, 1, 0, 11, 18, 9, 0, 1, 0, 0, 0, 1, 0]' : 0.288162}", "{'[1, 1, 2, 3, 6, 0, 1, 0, 11, 18, 9, 0, 1, 0, 0, 0, 1, 0]' : 0.28626}", "{'[1, 1, 2, 3, 6, 0, 1, 0, 11, 18, 9, 0, 1, 0, 0, 0, 1, 0]' : 0.285844}", "{'[1, 1, 2, 3, 6, 0, 1, 0, 11, 18, 9, 0, 1, 0, 0, 0, 1, 0]' : 0.287039}", "{'[1, 1, 2, 3, 6, 0, 1, 0, 11, 18, 9, 0, 1, 0, 0, 0, 1, 0]' : 0.28687}", "{'[1, 1, 2, 3, 6, 0, 1, 0, 11, 18, 9, 0, 1, 0, 0, 0, 1, 0]' : 0.286286}", "{'[1, 1, 2, 3, 6, 0, 1, 0, 11, 18, 9, 0, 1, 0, 0, 0, 1, 0]' : 0.286075}", "{'[1, 1, 2, 3, 6, 0, 1, 0, 11, 18, 9, 0, 1, 0, 0, 0, 1, 0]' : 0.286276}", "{'[1, 1, 2, 3, 6, 0, 1, 0, 11, 18, 9, 0, 1, 0, 0, 0, 1, 0]' : 0.28664}", "{'[1, 1, 2, 3, 6, 0, 1, 0, 11, 18, 9, 0, 1, 0, 0, 0, 1, 0]' : 0.286379}", "{'[1, 1, 2, 3, 6, 0, 1, 0, 11, 18, 9, 0, 1, 0, 0, 0, 1, 0]' : 0.289537}", "{'[1, 1, 2, 3, 6, 0, 1, 0, 11, 18, 9, 0, 1, 0, 0, 0, 1, 0]' : 0.286848}", "{'[1, 1, 2, 3, 6, 0, 1, 0, 11, 18, 9, 0, 1, 0, 0, 0, 1, 0]' : 0.287058}", "{'[1, 1, 2, 3, 6, 0, 1, 0, 11, 18, 9, 0, 1, 0, 0, 0, 1, 0]' : 0.286458}", "{'[1, 1, 2, 3, 6, 0, 1, 0, 11, 18, 9, 0, 1, 0, 0, 0, 1, 0]' : 0.286493}", "{'[1, 1, 2, 3, 6, 0, 1, 0, 11, 18, 9, 0, 1, 0, 0, 0, 1, 0]' : 0.28644}", "{'[1, 1, 2, 3, 6, 0, 1, 0, 11, 18, 9, 0, 1, 0, 0, 0, 1, 0]' : 0.286495}", "{'[1, 1, 2, 3, 6, 0, 1, 0, 11, 18, 9, 0, 1, 0, 0, 0, 1, 0]' : 0.288419}"]
returning from 'run': {'[1, 1, 2, 3, 6, 0, 1, 0, 11, 18, 9, 0, 1, 0, 0, 0, 1, 0]': ([0.286758, 0.288196, 0.29036, 0.286066, 0.286641, 0.286675, 0.286638, 0.286858, 0.287188, 0.286924, 0.286286, 0.287286, 0.288162, 0.28626, 0.285844, 0.287039, 0.28687, 0.286286, 0.286075, 0.286276, 0.28664, 0.286379, 0.289537, 0.286848, 0.287058, 0.286458, 0.286493, 0.28644, 0.286495, 0.288419], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 1, 2, 3, 6, 0, 1, 0, 11, 18, 9, 0, 1, 0, 0, 0, 1, 0]': ([0.286758, 0.288196, 0.29036, 0.286066, 0.286641, 0.286675, 0.286638, 0.286858, 0.287188, 0.286924, 0.286286, 0.287286, 0.288162, 0.28626, 0.285844, 0.287039, 0.28687, 0.286286, 0.286075, 0.286276, 0.28664, 0.286379, 0.289537, 0.286848, 0.287058, 0.286458, 0.286493, 0.28644, 0.286495, 0.288419], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	64
        Max loop nest depth: 	6
        Additions: 		7100
        Multiplications: 	1584
        Divisions: 		0
        Logical: 		0
        Reads: 			10210
        Writes: 		1005
        Comparisons:		64
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest21.exe __orio_perftest21.c timer_cpu.o -lm
orio.main.tuner.ptest_driver:  failed to compile the testing code: "gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest21.exe __orio_perftest21.c timer_cpu.o -lm"
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 122, in search

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 641, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 559, in dopt_anova
    i)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 506, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 398, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    test_code = self.ptcodegen.generate(code_map)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 486, in run
    self.__build(perf_params=perf_params,coord=coord)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 285, in __build
    err('orio.main.tuner.ptest_driver:  failed to compile the testing code: "%s"' % cmd)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  the executable of the test code does not exist
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 122, in search

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 641, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 559, in dopt_anova
    i)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 506, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 398, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    test_code = self.ptcodegen.generate(code_map)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 308, in __execute
    err('orio.main.tuner.ptest_driver:  the executable of the test code does not exist')

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

 running test:
	 ./__orio_perftest21.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest21.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest21.exe  ' returned non-zero exit status 127
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 122, in search

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 641, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 559, in dopt_anova
    i)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 506, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 398, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    test_code = self.ptcodegen.generate(code_map)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest21.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 122, in search

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 641, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 559, in dopt_anova
    i)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 506, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 398, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    test_code = self.ptcodegen.generate(code_map)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	58
        Max loop nest depth: 	6
        Additions: 		1609
        Multiplications: 	532
        Divisions: 		0
        Logical: 		0
        Reads: 			2876
        Writes: 		478
        Comparisons:		58
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest22.exe __orio_perftest22.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest22.exe  
Program Test Output: 
{'[5, 5, 5, 5, 6, 6, 1, 0, 13, 9, 11, 0, 1, 0, 0, 1, 0, 0]' : 0.227152}
{'[5, 5, 5, 5, 6, 6, 1, 0, 13, 9, 11, 0, 1, 0, 0, 1, 0, 0]' : 0.226983}
{'[5, 5, 5, 5, 6, 6, 1, 0, 13, 9, 11, 0, 1, 0, 0, 1, 0, 0]' : 0.226564}
{'[5, 5, 5, 5, 6, 6, 1, 0, 13, 9, 11, 0, 1, 0, 0, 1, 0, 0]' : 0.227155}
{'[5, 5, 5, 5, 6, 6, 1, 0, 13, 9, 11, 0, 1, 0, 0, 1, 0, 0]' : 0.227343}
{'[5, 5, 5, 5, 6, 6, 1, 0, 13, 9, 11, 0, 1, 0, 0, 1, 0, 0]' : 0.228376}
{'[5, 5, 5, 5, 6, 6, 1, 0, 13, 9, 11, 0, 1, 0, 0, 1, 0, 0]' : 0.228067}
{'[5, 5, 5, 5, 6, 6, 1, 0, 13, 9, 11, 0, 1, 0, 0, 1, 0, 0]' : 0.230239}
{'[5, 5, 5, 5, 6, 6, 1, 0, 13, 9, 11, 0, 1, 0, 0, 1, 0, 0]' : 0.22611}
{'[5, 5, 5, 5, 6, 6, 1, 0, 13, 9, 11, 0, 1, 0, 0, 1, 0, 0]' : 0.226028}
{'[5, 5, 5, 5, 6, 6, 1, 0, 13, 9, 11, 0, 1, 0, 0, 1, 0, 0]' : 0.225798}
{'[5, 5, 5, 5, 6, 6, 1, 0, 13, 9, 11, 0, 1, 0, 0, 1, 0, 0]' : 0.228386}
{'[5, 5, 5, 5, 6, 6, 1, 0, 13, 9, 11, 0, 1, 0, 0, 1, 0, 0]' : 0.22576}
{'[5, 5, 5, 5, 6, 6, 1, 0, 13, 9, 11, 0, 1, 0, 0, 1, 0, 0]' : 0.225925}
{'[5, 5, 5, 5, 6, 6, 1, 0, 13, 9, 11, 0, 1, 0, 0, 1, 0, 0]' : 0.225859}
{'[5, 5, 5, 5, 6, 6, 1, 0, 13, 9, 11, 0, 1, 0, 0, 1, 0, 0]' : 0.23176}
{'[5, 5, 5, 5, 6, 6, 1, 0, 13, 9, 11, 0, 1, 0, 0, 1, 0, 0]' : 0.22569}
{'[5, 5, 5, 5, 6, 6, 1, 0, 13, 9, 11, 0, 1, 0, 0, 1, 0, 0]' : 0.225915}
{'[5, 5, 5, 5, 6, 6, 1, 0, 13, 9, 11, 0, 1, 0, 0, 1, 0, 0]' : 0.226418}
{'[5, 5, 5, 5, 6, 6, 1, 0, 13, 9, 11, 0, 1, 0, 0, 1, 0, 0]' : 0.22583}
{'[5, 5, 5, 5, 6, 6, 1, 0, 13, 9, 11, 0, 1, 0, 0, 1, 0, 0]' : 0.227534}
{'[5, 5, 5, 5, 6, 6, 1, 0, 13, 9, 11, 0, 1, 0, 0, 1, 0, 0]' : 0.225725}
{'[5, 5, 5, 5, 6, 6, 1, 0, 13, 9, 11, 0, 1, 0, 0, 1, 0, 0]' : 0.225894}
{'[5, 5, 5, 5, 6, 6, 1, 0, 13, 9, 11, 0, 1, 0, 0, 1, 0, 0]' : 0.226115}
{'[5, 5, 5, 5, 6, 6, 1, 0, 13, 9, 11, 0, 1, 0, 0, 1, 0, 0]' : 0.226057}
{'[5, 5, 5, 5, 6, 6, 1, 0, 13, 9, 11, 0, 1, 0, 0, 1, 0, 0]' : 0.227473}
{'[5, 5, 5, 5, 6, 6, 1, 0, 13, 9, 11, 0, 1, 0, 0, 1, 0, 0]' : 0.225974}
{'[5, 5, 5, 5, 6, 6, 1, 0, 13, 9, 11, 0, 1, 0, 0, 1, 0, 0]' : 0.226295}
{'[5, 5, 5, 5, 6, 6, 1, 0, 13, 9, 11, 0, 1, 0, 0, 1, 0, 0]' : 0.226037}
{'[5, 5, 5, 5, 6, 6, 1, 0, 13, 9, 11, 0, 1, 0, 0, 1, 0, 0]' : 0.225733}

out:
 ["{'[5, 5, 5, 5, 6, 6, 1, 0, 13, 9, 11, 0, 1, 0, 0, 1, 0, 0]' : 0.227152}", "{'[5, 5, 5, 5, 6, 6, 1, 0, 13, 9, 11, 0, 1, 0, 0, 1, 0, 0]' : 0.226983}", "{'[5, 5, 5, 5, 6, 6, 1, 0, 13, 9, 11, 0, 1, 0, 0, 1, 0, 0]' : 0.226564}", "{'[5, 5, 5, 5, 6, 6, 1, 0, 13, 9, 11, 0, 1, 0, 0, 1, 0, 0]' : 0.227155}", "{'[5, 5, 5, 5, 6, 6, 1, 0, 13, 9, 11, 0, 1, 0, 0, 1, 0, 0]' : 0.227343}", "{'[5, 5, 5, 5, 6, 6, 1, 0, 13, 9, 11, 0, 1, 0, 0, 1, 0, 0]' : 0.228376}", "{'[5, 5, 5, 5, 6, 6, 1, 0, 13, 9, 11, 0, 1, 0, 0, 1, 0, 0]' : 0.228067}", "{'[5, 5, 5, 5, 6, 6, 1, 0, 13, 9, 11, 0, 1, 0, 0, 1, 0, 0]' : 0.230239}", "{'[5, 5, 5, 5, 6, 6, 1, 0, 13, 9, 11, 0, 1, 0, 0, 1, 0, 0]' : 0.22611}", "{'[5, 5, 5, 5, 6, 6, 1, 0, 13, 9, 11, 0, 1, 0, 0, 1, 0, 0]' : 0.226028}", "{'[5, 5, 5, 5, 6, 6, 1, 0, 13, 9, 11, 0, 1, 0, 0, 1, 0, 0]' : 0.225798}", "{'[5, 5, 5, 5, 6, 6, 1, 0, 13, 9, 11, 0, 1, 0, 0, 1, 0, 0]' : 0.228386}", "{'[5, 5, 5, 5, 6, 6, 1, 0, 13, 9, 11, 0, 1, 0, 0, 1, 0, 0]' : 0.22576}", "{'[5, 5, 5, 5, 6, 6, 1, 0, 13, 9, 11, 0, 1, 0, 0, 1, 0, 0]' : 0.225925}", "{'[5, 5, 5, 5, 6, 6, 1, 0, 13, 9, 11, 0, 1, 0, 0, 1, 0, 0]' : 0.225859}", "{'[5, 5, 5, 5, 6, 6, 1, 0, 13, 9, 11, 0, 1, 0, 0, 1, 0, 0]' : 0.23176}", "{'[5, 5, 5, 5, 6, 6, 1, 0, 13, 9, 11, 0, 1, 0, 0, 1, 0, 0]' : 0.22569}", "{'[5, 5, 5, 5, 6, 6, 1, 0, 13, 9, 11, 0, 1, 0, 0, 1, 0, 0]' : 0.225915}", "{'[5, 5, 5, 5, 6, 6, 1, 0, 13, 9, 11, 0, 1, 0, 0, 1, 0, 0]' : 0.226418}", "{'[5, 5, 5, 5, 6, 6, 1, 0, 13, 9, 11, 0, 1, 0, 0, 1, 0, 0]' : 0.22583}", "{'[5, 5, 5, 5, 6, 6, 1, 0, 13, 9, 11, 0, 1, 0, 0, 1, 0, 0]' : 0.227534}", "{'[5, 5, 5, 5, 6, 6, 1, 0, 13, 9, 11, 0, 1, 0, 0, 1, 0, 0]' : 0.225725}", "{'[5, 5, 5, 5, 6, 6, 1, 0, 13, 9, 11, 0, 1, 0, 0, 1, 0, 0]' : 0.225894}", "{'[5, 5, 5, 5, 6, 6, 1, 0, 13, 9, 11, 0, 1, 0, 0, 1, 0, 0]' : 0.226115}", "{'[5, 5, 5, 5, 6, 6, 1, 0, 13, 9, 11, 0, 1, 0, 0, 1, 0, 0]' : 0.226057}", "{'[5, 5, 5, 5, 6, 6, 1, 0, 13, 9, 11, 0, 1, 0, 0, 1, 0, 0]' : 0.227473}", "{'[5, 5, 5, 5, 6, 6, 1, 0, 13, 9, 11, 0, 1, 0, 0, 1, 0, 0]' : 0.225974}", "{'[5, 5, 5, 5, 6, 6, 1, 0, 13, 9, 11, 0, 1, 0, 0, 1, 0, 0]' : 0.226295}", "{'[5, 5, 5, 5, 6, 6, 1, 0, 13, 9, 11, 0, 1, 0, 0, 1, 0, 0]' : 0.226037}", "{'[5, 5, 5, 5, 6, 6, 1, 0, 13, 9, 11, 0, 1, 0, 0, 1, 0, 0]' : 0.225733}"]
returning from 'run': {'[5, 5, 5, 5, 6, 6, 1, 0, 13, 9, 11, 0, 1, 0, 0, 1, 0, 0]': ([0.227152, 0.226983, 0.226564, 0.227155, 0.227343, 0.228376, 0.228067, 0.230239, 0.22611, 0.226028, 0.225798, 0.228386, 0.22576, 0.225925, 0.225859, 0.23176, 0.22569, 0.225915, 0.226418, 0.22583, 0.227534, 0.225725, 0.225894, 0.226115, 0.226057, 0.227473, 0.225974, 0.226295, 0.226037, 0.225733], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 5, 5, 5, 6, 6, 1, 0, 13, 9, 11, 0, 1, 0, 0, 1, 0, 0]': ([0.227152, 0.226983, 0.226564, 0.227155, 0.227343, 0.228376, 0.228067, 0.230239, 0.22611, 0.226028, 0.225798, 0.228386, 0.22576, 0.225925, 0.225859, 0.23176, 0.22569, 0.225915, 0.226418, 0.22583, 0.227534, 0.225725, 0.225894, 0.226115, 0.226057, 0.227473, 0.225974, 0.226295, 0.226037, 0.225733], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	62
        Max loop nest depth: 	5
        Additions: 		821
        Multiplications: 	300
        Divisions: 		0
        Logical: 		0
        Reads: 			1895
        Writes: 		396
        Comparisons:		62
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest23.exe __orio_perftest23.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest23.exe  
Program Test Output: 
{'[5, 4, 2, 0, 5, 5, 0, 1, 0, 15, 3, 0, 1, 0, 0, 1, 1, 0]' : 0.214294}
{'[5, 4, 2, 0, 5, 5, 0, 1, 0, 15, 3, 0, 1, 0, 0, 1, 1, 0]' : 0.215804}
{'[5, 4, 2, 0, 5, 5, 0, 1, 0, 15, 3, 0, 1, 0, 0, 1, 1, 0]' : 0.213781}
{'[5, 4, 2, 0, 5, 5, 0, 1, 0, 15, 3, 0, 1, 0, 0, 1, 1, 0]' : 0.212972}
{'[5, 4, 2, 0, 5, 5, 0, 1, 0, 15, 3, 0, 1, 0, 0, 1, 1, 0]' : 0.213203}
{'[5, 4, 2, 0, 5, 5, 0, 1, 0, 15, 3, 0, 1, 0, 0, 1, 1, 0]' : 0.221135}
{'[5, 4, 2, 0, 5, 5, 0, 1, 0, 15, 3, 0, 1, 0, 0, 1, 1, 0]' : 0.213585}
{'[5, 4, 2, 0, 5, 5, 0, 1, 0, 15, 3, 0, 1, 0, 0, 1, 1, 0]' : 0.217219}
{'[5, 4, 2, 0, 5, 5, 0, 1, 0, 15, 3, 0, 1, 0, 0, 1, 1, 0]' : 0.21334}
{'[5, 4, 2, 0, 5, 5, 0, 1, 0, 15, 3, 0, 1, 0, 0, 1, 1, 0]' : 0.237693}
{'[5, 4, 2, 0, 5, 5, 0, 1, 0, 15, 3, 0, 1, 0, 0, 1, 1, 0]' : 0.217855}
{'[5, 4, 2, 0, 5, 5, 0, 1, 0, 15, 3, 0, 1, 0, 0, 1, 1, 0]' : 0.211342}
{'[5, 4, 2, 0, 5, 5, 0, 1, 0, 15, 3, 0, 1, 0, 0, 1, 1, 0]' : 0.211338}
{'[5, 4, 2, 0, 5, 5, 0, 1, 0, 15, 3, 0, 1, 0, 0, 1, 1, 0]' : 0.211099}
{'[5, 4, 2, 0, 5, 5, 0, 1, 0, 15, 3, 0, 1, 0, 0, 1, 1, 0]' : 0.217321}
{'[5, 4, 2, 0, 5, 5, 0, 1, 0, 15, 3, 0, 1, 0, 0, 1, 1, 0]' : 0.210992}
{'[5, 4, 2, 0, 5, 5, 0, 1, 0, 15, 3, 0, 1, 0, 0, 1, 1, 0]' : 0.220582}
{'[5, 4, 2, 0, 5, 5, 0, 1, 0, 15, 3, 0, 1, 0, 0, 1, 1, 0]' : 0.211063}
{'[5, 4, 2, 0, 5, 5, 0, 1, 0, 15, 3, 0, 1, 0, 0, 1, 1, 0]' : 0.212104}
{'[5, 4, 2, 0, 5, 5, 0, 1, 0, 15, 3, 0, 1, 0, 0, 1, 1, 0]' : 0.219451}
{'[5, 4, 2, 0, 5, 5, 0, 1, 0, 15, 3, 0, 1, 0, 0, 1, 1, 0]' : 0.212383}
{'[5, 4, 2, 0, 5, 5, 0, 1, 0, 15, 3, 0, 1, 0, 0, 1, 1, 0]' : 0.211236}
{'[5, 4, 2, 0, 5, 5, 0, 1, 0, 15, 3, 0, 1, 0, 0, 1, 1, 0]' : 0.211275}
{'[5, 4, 2, 0, 5, 5, 0, 1, 0, 15, 3, 0, 1, 0, 0, 1, 1, 0]' : 0.212678}
{'[5, 4, 2, 0, 5, 5, 0, 1, 0, 15, 3, 0, 1, 0, 0, 1, 1, 0]' : 0.218829}
{'[5, 4, 2, 0, 5, 5, 0, 1, 0, 15, 3, 0, 1, 0, 0, 1, 1, 0]' : 0.212996}
{'[5, 4, 2, 0, 5, 5, 0, 1, 0, 15, 3, 0, 1, 0, 0, 1, 1, 0]' : 0.213356}
{'[5, 4, 2, 0, 5, 5, 0, 1, 0, 15, 3, 0, 1, 0, 0, 1, 1, 0]' : 0.212213}
{'[5, 4, 2, 0, 5, 5, 0, 1, 0, 15, 3, 0, 1, 0, 0, 1, 1, 0]' : 0.218007}
{'[5, 4, 2, 0, 5, 5, 0, 1, 0, 15, 3, 0, 1, 0, 0, 1, 1, 0]' : 0.22041}

out:
 ["{'[5, 4, 2, 0, 5, 5, 0, 1, 0, 15, 3, 0, 1, 0, 0, 1, 1, 0]' : 0.214294}", "{'[5, 4, 2, 0, 5, 5, 0, 1, 0, 15, 3, 0, 1, 0, 0, 1, 1, 0]' : 0.215804}", "{'[5, 4, 2, 0, 5, 5, 0, 1, 0, 15, 3, 0, 1, 0, 0, 1, 1, 0]' : 0.213781}", "{'[5, 4, 2, 0, 5, 5, 0, 1, 0, 15, 3, 0, 1, 0, 0, 1, 1, 0]' : 0.212972}", "{'[5, 4, 2, 0, 5, 5, 0, 1, 0, 15, 3, 0, 1, 0, 0, 1, 1, 0]' : 0.213203}", "{'[5, 4, 2, 0, 5, 5, 0, 1, 0, 15, 3, 0, 1, 0, 0, 1, 1, 0]' : 0.221135}", "{'[5, 4, 2, 0, 5, 5, 0, 1, 0, 15, 3, 0, 1, 0, 0, 1, 1, 0]' : 0.213585}", "{'[5, 4, 2, 0, 5, 5, 0, 1, 0, 15, 3, 0, 1, 0, 0, 1, 1, 0]' : 0.217219}", "{'[5, 4, 2, 0, 5, 5, 0, 1, 0, 15, 3, 0, 1, 0, 0, 1, 1, 0]' : 0.21334}", "{'[5, 4, 2, 0, 5, 5, 0, 1, 0, 15, 3, 0, 1, 0, 0, 1, 1, 0]' : 0.237693}", "{'[5, 4, 2, 0, 5, 5, 0, 1, 0, 15, 3, 0, 1, 0, 0, 1, 1, 0]' : 0.217855}", "{'[5, 4, 2, 0, 5, 5, 0, 1, 0, 15, 3, 0, 1, 0, 0, 1, 1, 0]' : 0.211342}", "{'[5, 4, 2, 0, 5, 5, 0, 1, 0, 15, 3, 0, 1, 0, 0, 1, 1, 0]' : 0.211338}", "{'[5, 4, 2, 0, 5, 5, 0, 1, 0, 15, 3, 0, 1, 0, 0, 1, 1, 0]' : 0.211099}", "{'[5, 4, 2, 0, 5, 5, 0, 1, 0, 15, 3, 0, 1, 0, 0, 1, 1, 0]' : 0.217321}", "{'[5, 4, 2, 0, 5, 5, 0, 1, 0, 15, 3, 0, 1, 0, 0, 1, 1, 0]' : 0.210992}", "{'[5, 4, 2, 0, 5, 5, 0, 1, 0, 15, 3, 0, 1, 0, 0, 1, 1, 0]' : 0.220582}", "{'[5, 4, 2, 0, 5, 5, 0, 1, 0, 15, 3, 0, 1, 0, 0, 1, 1, 0]' : 0.211063}", "{'[5, 4, 2, 0, 5, 5, 0, 1, 0, 15, 3, 0, 1, 0, 0, 1, 1, 0]' : 0.212104}", "{'[5, 4, 2, 0, 5, 5, 0, 1, 0, 15, 3, 0, 1, 0, 0, 1, 1, 0]' : 0.219451}", "{'[5, 4, 2, 0, 5, 5, 0, 1, 0, 15, 3, 0, 1, 0, 0, 1, 1, 0]' : 0.212383}", "{'[5, 4, 2, 0, 5, 5, 0, 1, 0, 15, 3, 0, 1, 0, 0, 1, 1, 0]' : 0.211236}", "{'[5, 4, 2, 0, 5, 5, 0, 1, 0, 15, 3, 0, 1, 0, 0, 1, 1, 0]' : 0.211275}", "{'[5, 4, 2, 0, 5, 5, 0, 1, 0, 15, 3, 0, 1, 0, 0, 1, 1, 0]' : 0.212678}", "{'[5, 4, 2, 0, 5, 5, 0, 1, 0, 15, 3, 0, 1, 0, 0, 1, 1, 0]' : 0.218829}", "{'[5, 4, 2, 0, 5, 5, 0, 1, 0, 15, 3, 0, 1, 0, 0, 1, 1, 0]' : 0.212996}", "{'[5, 4, 2, 0, 5, 5, 0, 1, 0, 15, 3, 0, 1, 0, 0, 1, 1, 0]' : 0.213356}", "{'[5, 4, 2, 0, 5, 5, 0, 1, 0, 15, 3, 0, 1, 0, 0, 1, 1, 0]' : 0.212213}", "{'[5, 4, 2, 0, 5, 5, 0, 1, 0, 15, 3, 0, 1, 0, 0, 1, 1, 0]' : 0.218007}", "{'[5, 4, 2, 0, 5, 5, 0, 1, 0, 15, 3, 0, 1, 0, 0, 1, 1, 0]' : 0.22041}"]
returning from 'run': {'[5, 4, 2, 0, 5, 5, 0, 1, 0, 15, 3, 0, 1, 0, 0, 1, 1, 0]': ([0.214294, 0.215804, 0.213781, 0.212972, 0.213203, 0.221135, 0.213585, 0.217219, 0.21334, 0.237693, 0.217855, 0.211342, 0.211338, 0.211099, 0.217321, 0.210992, 0.220582, 0.211063, 0.212104, 0.219451, 0.212383, 0.211236, 0.211275, 0.212678, 0.218829, 0.212996, 0.213356, 0.212213, 0.218007, 0.22041], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 4, 2, 0, 5, 5, 0, 1, 0, 15, 3, 0, 1, 0, 0, 1, 1, 0]': ([0.214294, 0.215804, 0.213781, 0.212972, 0.213203, 0.221135, 0.213585, 0.217219, 0.21334, 0.237693, 0.217855, 0.211342, 0.211338, 0.211099, 0.217321, 0.210992, 0.220582, 0.211063, 0.212104, 0.219451, 0.212383, 0.211236, 0.211275, 0.212678, 0.218829, 0.212996, 0.213356, 0.212213, 0.218007, 0.22041], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	103
        Max loop nest depth: 	6
        Additions: 		8757
        Multiplications: 	1914
        Divisions: 		0
        Logical: 		0
        Reads: 			12707
        Writes: 		1302
        Comparisons:		103
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest24.exe __orio_perftest24.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest24.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest24.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest24.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 122, in search
    startCoord = self.search_opts.get('start_coord')

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 641, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 559, in dopt_anova
    i)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 506, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 398, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    # Evaluate the performance costs for all coordinates

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest24.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 122, in search
    startCoord = self.search_opts.get('start_coord')

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 641, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 559, in dopt_anova
    i)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 506, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 398, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    # Evaluate the performance costs for all coordinates

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = iii
Code stats:
        Number of loops: 	56
        Max loop nest depth: 	5
        Additions: 		6071
        Multiplications: 	1800
        Divisions: 		0
        Logical: 		0
        Reads: 			9717
        Writes: 		1101
        Comparisons:		56
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest25.exe __orio_perftest25.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest25.exe  
Program Test Output: 
{'[4, 1, 1, 2, 3, 2, 1, 0, 26, 26, 0, 12, 2, 0, 0, 0, 1, 0]' : 0.538895}
{'[4, 1, 1, 2, 3, 2, 1, 0, 26, 26, 0, 12, 2, 0, 0, 0, 1, 0]' : 0.538451}
{'[4, 1, 1, 2, 3, 2, 1, 0, 26, 26, 0, 12, 2, 0, 0, 0, 1, 0]' : 0.53952}
{'[4, 1, 1, 2, 3, 2, 1, 0, 26, 26, 0, 12, 2, 0, 0, 0, 1, 0]' : 0.538866}
{'[4, 1, 1, 2, 3, 2, 1, 0, 26, 26, 0, 12, 2, 0, 0, 0, 1, 0]' : 0.538636}
{'[4, 1, 1, 2, 3, 2, 1, 0, 26, 26, 0, 12, 2, 0, 0, 0, 1, 0]' : 0.538507}
{'[4, 1, 1, 2, 3, 2, 1, 0, 26, 26, 0, 12, 2, 0, 0, 0, 1, 0]' : 0.538201}
{'[4, 1, 1, 2, 3, 2, 1, 0, 26, 26, 0, 12, 2, 0, 0, 0, 1, 0]' : 0.538016}
{'[4, 1, 1, 2, 3, 2, 1, 0, 26, 26, 0, 12, 2, 0, 0, 0, 1, 0]' : 0.537913}
{'[4, 1, 1, 2, 3, 2, 1, 0, 26, 26, 0, 12, 2, 0, 0, 0, 1, 0]' : 0.537836}
{'[4, 1, 1, 2, 3, 2, 1, 0, 26, 26, 0, 12, 2, 0, 0, 0, 1, 0]' : 0.533468}
{'[4, 1, 1, 2, 3, 2, 1, 0, 26, 26, 0, 12, 2, 0, 0, 0, 1, 0]' : 0.53323}
{'[4, 1, 1, 2, 3, 2, 1, 0, 26, 26, 0, 12, 2, 0, 0, 0, 1, 0]' : 0.532835}
{'[4, 1, 1, 2, 3, 2, 1, 0, 26, 26, 0, 12, 2, 0, 0, 0, 1, 0]' : 0.534078}
{'[4, 1, 1, 2, 3, 2, 1, 0, 26, 26, 0, 12, 2, 0, 0, 0, 1, 0]' : 0.532649}
{'[4, 1, 1, 2, 3, 2, 1, 0, 26, 26, 0, 12, 2, 0, 0, 0, 1, 0]' : 0.532668}
{'[4, 1, 1, 2, 3, 2, 1, 0, 26, 26, 0, 12, 2, 0, 0, 0, 1, 0]' : 0.533073}
{'[4, 1, 1, 2, 3, 2, 1, 0, 26, 26, 0, 12, 2, 0, 0, 0, 1, 0]' : 0.534846}
{'[4, 1, 1, 2, 3, 2, 1, 0, 26, 26, 0, 12, 2, 0, 0, 0, 1, 0]' : 0.532857}
{'[4, 1, 1, 2, 3, 2, 1, 0, 26, 26, 0, 12, 2, 0, 0, 0, 1, 0]' : 0.532702}
{'[4, 1, 1, 2, 3, 2, 1, 0, 26, 26, 0, 12, 2, 0, 0, 0, 1, 0]' : 0.550328}
{'[4, 1, 1, 2, 3, 2, 1, 0, 26, 26, 0, 12, 2, 0, 0, 0, 1, 0]' : 0.532526}
{'[4, 1, 1, 2, 3, 2, 1, 0, 26, 26, 0, 12, 2, 0, 0, 0, 1, 0]' : 0.533265}
{'[4, 1, 1, 2, 3, 2, 1, 0, 26, 26, 0, 12, 2, 0, 0, 0, 1, 0]' : 0.532189}
{'[4, 1, 1, 2, 3, 2, 1, 0, 26, 26, 0, 12, 2, 0, 0, 0, 1, 0]' : 0.538139}
{'[4, 1, 1, 2, 3, 2, 1, 0, 26, 26, 0, 12, 2, 0, 0, 0, 1, 0]' : 0.532743}
{'[4, 1, 1, 2, 3, 2, 1, 0, 26, 26, 0, 12, 2, 0, 0, 0, 1, 0]' : 0.532924}
{'[4, 1, 1, 2, 3, 2, 1, 0, 26, 26, 0, 12, 2, 0, 0, 0, 1, 0]' : 0.532432}
{'[4, 1, 1, 2, 3, 2, 1, 0, 26, 26, 0, 12, 2, 0, 0, 0, 1, 0]' : 0.533786}
{'[4, 1, 1, 2, 3, 2, 1, 0, 26, 26, 0, 12, 2, 0, 0, 0, 1, 0]' : 0.532653}

out:
 ["{'[4, 1, 1, 2, 3, 2, 1, 0, 26, 26, 0, 12, 2, 0, 0, 0, 1, 0]' : 0.538895}", "{'[4, 1, 1, 2, 3, 2, 1, 0, 26, 26, 0, 12, 2, 0, 0, 0, 1, 0]' : 0.538451}", "{'[4, 1, 1, 2, 3, 2, 1, 0, 26, 26, 0, 12, 2, 0, 0, 0, 1, 0]' : 0.53952}", "{'[4, 1, 1, 2, 3, 2, 1, 0, 26, 26, 0, 12, 2, 0, 0, 0, 1, 0]' : 0.538866}", "{'[4, 1, 1, 2, 3, 2, 1, 0, 26, 26, 0, 12, 2, 0, 0, 0, 1, 0]' : 0.538636}", "{'[4, 1, 1, 2, 3, 2, 1, 0, 26, 26, 0, 12, 2, 0, 0, 0, 1, 0]' : 0.538507}", "{'[4, 1, 1, 2, 3, 2, 1, 0, 26, 26, 0, 12, 2, 0, 0, 0, 1, 0]' : 0.538201}", "{'[4, 1, 1, 2, 3, 2, 1, 0, 26, 26, 0, 12, 2, 0, 0, 0, 1, 0]' : 0.538016}", "{'[4, 1, 1, 2, 3, 2, 1, 0, 26, 26, 0, 12, 2, 0, 0, 0, 1, 0]' : 0.537913}", "{'[4, 1, 1, 2, 3, 2, 1, 0, 26, 26, 0, 12, 2, 0, 0, 0, 1, 0]' : 0.537836}", "{'[4, 1, 1, 2, 3, 2, 1, 0, 26, 26, 0, 12, 2, 0, 0, 0, 1, 0]' : 0.533468}", "{'[4, 1, 1, 2, 3, 2, 1, 0, 26, 26, 0, 12, 2, 0, 0, 0, 1, 0]' : 0.53323}", "{'[4, 1, 1, 2, 3, 2, 1, 0, 26, 26, 0, 12, 2, 0, 0, 0, 1, 0]' : 0.532835}", "{'[4, 1, 1, 2, 3, 2, 1, 0, 26, 26, 0, 12, 2, 0, 0, 0, 1, 0]' : 0.534078}", "{'[4, 1, 1, 2, 3, 2, 1, 0, 26, 26, 0, 12, 2, 0, 0, 0, 1, 0]' : 0.532649}", "{'[4, 1, 1, 2, 3, 2, 1, 0, 26, 26, 0, 12, 2, 0, 0, 0, 1, 0]' : 0.532668}", "{'[4, 1, 1, 2, 3, 2, 1, 0, 26, 26, 0, 12, 2, 0, 0, 0, 1, 0]' : 0.533073}", "{'[4, 1, 1, 2, 3, 2, 1, 0, 26, 26, 0, 12, 2, 0, 0, 0, 1, 0]' : 0.534846}", "{'[4, 1, 1, 2, 3, 2, 1, 0, 26, 26, 0, 12, 2, 0, 0, 0, 1, 0]' : 0.532857}", "{'[4, 1, 1, 2, 3, 2, 1, 0, 26, 26, 0, 12, 2, 0, 0, 0, 1, 0]' : 0.532702}", "{'[4, 1, 1, 2, 3, 2, 1, 0, 26, 26, 0, 12, 2, 0, 0, 0, 1, 0]' : 0.550328}", "{'[4, 1, 1, 2, 3, 2, 1, 0, 26, 26, 0, 12, 2, 0, 0, 0, 1, 0]' : 0.532526}", "{'[4, 1, 1, 2, 3, 2, 1, 0, 26, 26, 0, 12, 2, 0, 0, 0, 1, 0]' : 0.533265}", "{'[4, 1, 1, 2, 3, 2, 1, 0, 26, 26, 0, 12, 2, 0, 0, 0, 1, 0]' : 0.532189}", "{'[4, 1, 1, 2, 3, 2, 1, 0, 26, 26, 0, 12, 2, 0, 0, 0, 1, 0]' : 0.538139}", "{'[4, 1, 1, 2, 3, 2, 1, 0, 26, 26, 0, 12, 2, 0, 0, 0, 1, 0]' : 0.532743}", "{'[4, 1, 1, 2, 3, 2, 1, 0, 26, 26, 0, 12, 2, 0, 0, 0, 1, 0]' : 0.532924}", "{'[4, 1, 1, 2, 3, 2, 1, 0, 26, 26, 0, 12, 2, 0, 0, 0, 1, 0]' : 0.532432}", "{'[4, 1, 1, 2, 3, 2, 1, 0, 26, 26, 0, 12, 2, 0, 0, 0, 1, 0]' : 0.533786}", "{'[4, 1, 1, 2, 3, 2, 1, 0, 26, 26, 0, 12, 2, 0, 0, 0, 1, 0]' : 0.532653}"]
returning from 'run': {'[4, 1, 1, 2, 3, 2, 1, 0, 26, 26, 0, 12, 2, 0, 0, 0, 1, 0]': ([0.538895, 0.538451, 0.53952, 0.538866, 0.538636, 0.538507, 0.538201, 0.538016, 0.537913, 0.537836, 0.533468, 0.53323, 0.532835, 0.534078, 0.532649, 0.532668, 0.533073, 0.534846, 0.532857, 0.532702, 0.550328, 0.532526, 0.533265, 0.532189, 0.538139, 0.532743, 0.532924, 0.532432, 0.533786, 0.532653], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 1, 1, 2, 3, 2, 1, 0, 26, 26, 0, 12, 2, 0, 0, 0, 1, 0]': ([0.538895, 0.538451, 0.53952, 0.538866, 0.538636, 0.538507, 0.538201, 0.538016, 0.537913, 0.537836, 0.533468, 0.53323, 0.532835, 0.534078, 0.532649, 0.532668, 0.533073, 0.534846, 0.532857, 0.532702, 0.550328, 0.532526, 0.533265, 0.532189, 0.538139, 0.532743, 0.532924, 0.532432, 0.533786, 0.532653], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		6719
        Multiplications: 	1600
        Divisions: 		0
        Logical: 		0
        Reads: 			9577
        Writes: 		862
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest26.exe __orio_perftest26.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest26.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest26.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest26.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 122, in search
    startCoord = self.search_opts.get('start_coord')

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 641, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 559, in dopt_anova
    i)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 506, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 398, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    # Evaluate the performance costs for all coordinates

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest26.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 122, in search
    startCoord = self.search_opts.get('start_coord')

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 641, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 559, in dopt_anova
    i)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 506, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 398, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    # Evaluate the performance costs for all coordinates

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	5
        Additions: 		549
        Multiplications: 	224
        Divisions: 		0
        Logical: 		0
        Reads: 			1167
        Writes: 		245
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest27.exe __orio_perftest27.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest27.exe  
Program Test Output: 
{'[0, 3, 2, 1, 3, 1, 0, 0, 24, 6, 3, 0, 0, 0, 1, 1, 0, 0]' : 0.224634}
{'[0, 3, 2, 1, 3, 1, 0, 0, 24, 6, 3, 0, 0, 0, 1, 1, 0, 0]' : 0.224914}
{'[0, 3, 2, 1, 3, 1, 0, 0, 24, 6, 3, 0, 0, 0, 1, 1, 0, 0]' : 0.222961}
{'[0, 3, 2, 1, 3, 1, 0, 0, 24, 6, 3, 0, 0, 0, 1, 1, 0, 0]' : 0.219437}
{'[0, 3, 2, 1, 3, 1, 0, 0, 24, 6, 3, 0, 0, 0, 1, 1, 0, 0]' : 0.220766}
{'[0, 3, 2, 1, 3, 1, 0, 0, 24, 6, 3, 0, 0, 0, 1, 1, 0, 0]' : 0.224662}
{'[0, 3, 2, 1, 3, 1, 0, 0, 24, 6, 3, 0, 0, 0, 1, 1, 0, 0]' : 0.224678}
{'[0, 3, 2, 1, 3, 1, 0, 0, 24, 6, 3, 0, 0, 0, 1, 1, 0, 0]' : 0.220846}
{'[0, 3, 2, 1, 3, 1, 0, 0, 24, 6, 3, 0, 0, 0, 1, 1, 0, 0]' : 0.220281}
{'[0, 3, 2, 1, 3, 1, 0, 0, 24, 6, 3, 0, 0, 0, 1, 1, 0, 0]' : 0.224555}
{'[0, 3, 2, 1, 3, 1, 0, 0, 24, 6, 3, 0, 0, 0, 1, 1, 0, 0]' : 0.220246}
{'[0, 3, 2, 1, 3, 1, 0, 0, 24, 6, 3, 0, 0, 0, 1, 1, 0, 0]' : 0.2205}
{'[0, 3, 2, 1, 3, 1, 0, 0, 24, 6, 3, 0, 0, 0, 1, 1, 0, 0]' : 0.21977}
{'[0, 3, 2, 1, 3, 1, 0, 0, 24, 6, 3, 0, 0, 0, 1, 1, 0, 0]' : 0.219744}
{'[0, 3, 2, 1, 3, 1, 0, 0, 24, 6, 3, 0, 0, 0, 1, 1, 0, 0]' : 0.22406}
{'[0, 3, 2, 1, 3, 1, 0, 0, 24, 6, 3, 0, 0, 0, 1, 1, 0, 0]' : 0.224743}
{'[0, 3, 2, 1, 3, 1, 0, 0, 24, 6, 3, 0, 0, 0, 1, 1, 0, 0]' : 0.223332}
{'[0, 3, 2, 1, 3, 1, 0, 0, 24, 6, 3, 0, 0, 0, 1, 1, 0, 0]' : 0.224814}
{'[0, 3, 2, 1, 3, 1, 0, 0, 24, 6, 3, 0, 0, 0, 1, 1, 0, 0]' : 0.224602}
{'[0, 3, 2, 1, 3, 1, 0, 0, 24, 6, 3, 0, 0, 0, 1, 1, 0, 0]' : 0.224052}
{'[0, 3, 2, 1, 3, 1, 0, 0, 24, 6, 3, 0, 0, 0, 1, 1, 0, 0]' : 0.222091}
{'[0, 3, 2, 1, 3, 1, 0, 0, 24, 6, 3, 0, 0, 0, 1, 1, 0, 0]' : 0.220492}
{'[0, 3, 2, 1, 3, 1, 0, 0, 24, 6, 3, 0, 0, 0, 1, 1, 0, 0]' : 0.221117}
{'[0, 3, 2, 1, 3, 1, 0, 0, 24, 6, 3, 0, 0, 0, 1, 1, 0, 0]' : 0.219979}
{'[0, 3, 2, 1, 3, 1, 0, 0, 24, 6, 3, 0, 0, 0, 1, 1, 0, 0]' : 0.221479}
{'[0, 3, 2, 1, 3, 1, 0, 0, 24, 6, 3, 0, 0, 0, 1, 1, 0, 0]' : 0.223517}
{'[0, 3, 2, 1, 3, 1, 0, 0, 24, 6, 3, 0, 0, 0, 1, 1, 0, 0]' : 0.220273}
{'[0, 3, 2, 1, 3, 1, 0, 0, 24, 6, 3, 0, 0, 0, 1, 1, 0, 0]' : 0.219866}
{'[0, 3, 2, 1, 3, 1, 0, 0, 24, 6, 3, 0, 0, 0, 1, 1, 0, 0]' : 0.223802}
{'[0, 3, 2, 1, 3, 1, 0, 0, 24, 6, 3, 0, 0, 0, 1, 1, 0, 0]' : 0.222199}

out:
 ["{'[0, 3, 2, 1, 3, 1, 0, 0, 24, 6, 3, 0, 0, 0, 1, 1, 0, 0]' : 0.224634}", "{'[0, 3, 2, 1, 3, 1, 0, 0, 24, 6, 3, 0, 0, 0, 1, 1, 0, 0]' : 0.224914}", "{'[0, 3, 2, 1, 3, 1, 0, 0, 24, 6, 3, 0, 0, 0, 1, 1, 0, 0]' : 0.222961}", "{'[0, 3, 2, 1, 3, 1, 0, 0, 24, 6, 3, 0, 0, 0, 1, 1, 0, 0]' : 0.219437}", "{'[0, 3, 2, 1, 3, 1, 0, 0, 24, 6, 3, 0, 0, 0, 1, 1, 0, 0]' : 0.220766}", "{'[0, 3, 2, 1, 3, 1, 0, 0, 24, 6, 3, 0, 0, 0, 1, 1, 0, 0]' : 0.224662}", "{'[0, 3, 2, 1, 3, 1, 0, 0, 24, 6, 3, 0, 0, 0, 1, 1, 0, 0]' : 0.224678}", "{'[0, 3, 2, 1, 3, 1, 0, 0, 24, 6, 3, 0, 0, 0, 1, 1, 0, 0]' : 0.220846}", "{'[0, 3, 2, 1, 3, 1, 0, 0, 24, 6, 3, 0, 0, 0, 1, 1, 0, 0]' : 0.220281}", "{'[0, 3, 2, 1, 3, 1, 0, 0, 24, 6, 3, 0, 0, 0, 1, 1, 0, 0]' : 0.224555}", "{'[0, 3, 2, 1, 3, 1, 0, 0, 24, 6, 3, 0, 0, 0, 1, 1, 0, 0]' : 0.220246}", "{'[0, 3, 2, 1, 3, 1, 0, 0, 24, 6, 3, 0, 0, 0, 1, 1, 0, 0]' : 0.2205}", "{'[0, 3, 2, 1, 3, 1, 0, 0, 24, 6, 3, 0, 0, 0, 1, 1, 0, 0]' : 0.21977}", "{'[0, 3, 2, 1, 3, 1, 0, 0, 24, 6, 3, 0, 0, 0, 1, 1, 0, 0]' : 0.219744}", "{'[0, 3, 2, 1, 3, 1, 0, 0, 24, 6, 3, 0, 0, 0, 1, 1, 0, 0]' : 0.22406}", "{'[0, 3, 2, 1, 3, 1, 0, 0, 24, 6, 3, 0, 0, 0, 1, 1, 0, 0]' : 0.224743}", "{'[0, 3, 2, 1, 3, 1, 0, 0, 24, 6, 3, 0, 0, 0, 1, 1, 0, 0]' : 0.223332}", "{'[0, 3, 2, 1, 3, 1, 0, 0, 24, 6, 3, 0, 0, 0, 1, 1, 0, 0]' : 0.224814}", "{'[0, 3, 2, 1, 3, 1, 0, 0, 24, 6, 3, 0, 0, 0, 1, 1, 0, 0]' : 0.224602}", "{'[0, 3, 2, 1, 3, 1, 0, 0, 24, 6, 3, 0, 0, 0, 1, 1, 0, 0]' : 0.224052}", "{'[0, 3, 2, 1, 3, 1, 0, 0, 24, 6, 3, 0, 0, 0, 1, 1, 0, 0]' : 0.222091}", "{'[0, 3, 2, 1, 3, 1, 0, 0, 24, 6, 3, 0, 0, 0, 1, 1, 0, 0]' : 0.220492}", "{'[0, 3, 2, 1, 3, 1, 0, 0, 24, 6, 3, 0, 0, 0, 1, 1, 0, 0]' : 0.221117}", "{'[0, 3, 2, 1, 3, 1, 0, 0, 24, 6, 3, 0, 0, 0, 1, 1, 0, 0]' : 0.219979}", "{'[0, 3, 2, 1, 3, 1, 0, 0, 24, 6, 3, 0, 0, 0, 1, 1, 0, 0]' : 0.221479}", "{'[0, 3, 2, 1, 3, 1, 0, 0, 24, 6, 3, 0, 0, 0, 1, 1, 0, 0]' : 0.223517}", "{'[0, 3, 2, 1, 3, 1, 0, 0, 24, 6, 3, 0, 0, 0, 1, 1, 0, 0]' : 0.220273}", "{'[0, 3, 2, 1, 3, 1, 0, 0, 24, 6, 3, 0, 0, 0, 1, 1, 0, 0]' : 0.219866}", "{'[0, 3, 2, 1, 3, 1, 0, 0, 24, 6, 3, 0, 0, 0, 1, 1, 0, 0]' : 0.223802}", "{'[0, 3, 2, 1, 3, 1, 0, 0, 24, 6, 3, 0, 0, 0, 1, 1, 0, 0]' : 0.222199}"]
returning from 'run': {'[0, 3, 2, 1, 3, 1, 0, 0, 24, 6, 3, 0, 0, 0, 1, 1, 0, 0]': ([0.224634, 0.224914, 0.222961, 0.219437, 0.220766, 0.224662, 0.224678, 0.220846, 0.220281, 0.224555, 0.220246, 0.2205, 0.21977, 0.219744, 0.22406, 0.224743, 0.223332, 0.224814, 0.224602, 0.224052, 0.222091, 0.220492, 0.221117, 0.219979, 0.221479, 0.223517, 0.220273, 0.219866, 0.223802, 0.222199], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 3, 2, 1, 3, 1, 0, 0, 24, 6, 3, 0, 0, 0, 1, 1, 0, 0]': ([0.224634, 0.224914, 0.222961, 0.219437, 0.220766, 0.224662, 0.224678, 0.220846, 0.220281, 0.224555, 0.220246, 0.2205, 0.21977, 0.219744, 0.22406, 0.224743, 0.223332, 0.224814, 0.224602, 0.224052, 0.222091, 0.220492, 0.221117, 0.219979, 0.221479, 0.223517, 0.220273, 0.219866, 0.223802, 0.222199], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Complete design, with measurements:
    T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
22     4    3    2    0    4    2       1       1   16  26   0   9    1    0
33     4    2    1    0    0    2       1       0   14  28   0  16    2    0
39     5    1    2    4    5    5       0       0   24  22   0   7    0    1
44     1    1    2    2    0    6       1       0   11   0  22   5    0    0
49     2    1    0    5    1    0       0       1   27   0  14   5    0    2
59     2    0    1    5    0    0       1       1    2   0  10  11    0    1
82     5    6    0    3    6    2       0       0    0   7  29   0    0    0
88     2    2    2    6    6    2       0       0   20   0  23   4    1    1
126    3    6    2    2    6    2       0       0   14   0  23   3    2    0
131    1    6    1    3    5    0       0       1   24  29  27   0    1    1
139    5    0    6    4    1    4       1       1    2   8  29   0    2    0
149    1    2    2    1    2    1       0       1    4   9   0   0    0    1
163    4    5    2    2    0    0       1       0   13   8   0   9    0    1
167    2    4    0    6    5    3       1       1   29   0  28  20    0    0
173    1    0    1    4    6    3       0       1   25  10   0   9    1    0
205    2    5    2    2    6    1       1       1   24   6   9   0    0    0
215    0    5    4    4    0    2       0       1   16   0  12  27    0    1
236    6    4    5    0    2    3       0       0   11   2   5   0    2    0
239    1    2    1    6    2    6       1       1   24  12   0   8    1    0
255    1    1    2    3    6    0       1       0   11  18   9   0    1    0
291    5    5    5    5    6    6       1       0   13   9  11   0    1    0
296    5    4    2    0    5    5       0       1    0  15   3   0    1    0
309    2    2    1    2    2    6       0       0    1  22   0  21    0    0
315    4    1    1    2    3    2       1       0   26  26   0  12    2    0
328    0    3    2    1    3    1       0       0   24   6   3   0    0    0
    RT_K SCR VEC1 VEC2 cost_mean
22     1   0    1    1 0.2761918
33     0   1    0    0 0.4825582
39     1   0    0    0 0.3684598
44     2   0    0    1 0.7877733
49     0   0    0    1 0.7276979
59     1   1    0    0 0.9844184
82     2   1    1    1 0.3504469
88     0   0    1    1 0.3631288
126    0   1    1    0 0.3980401
131    0   0    1    1 0.2698735
139    0   1    0    1 0.3958660
149    0   1    0    0 0.5925505
163    0   1    0    1 0.2692573
167    0   0    0    0 0.8373512
173    0   0    0    0 0.3528555
205    0   0    1    1 0.8429562
215    0   1    0    0 0.7397895
236    0   0    0    0 0.4899734
239    0   1    1    1 0.3022246
255    0   0    1    0 0.2869818
291    0   1    0    0 0.2268065
296    0   1    1    0 0.2153185
309    2   1    0    1 0.5698514
315    0   0    1    0 0.5356077
328    1   1    0    0 0.2222804

