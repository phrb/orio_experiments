
====== START ORIO ======

----- begin reading the source file: atax2.src1.c -----
----- finished reading the source file -----

----- begin parsing annotations -----
----- finished parsing annotations -----

----- begin optimizations -----
Search_Space         = 8.234e+13
Number_of_Parameters = 18
Numeric_Parameters   = 13
Binary_Parameters    = 05
['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
[[1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [False, True], [False, True], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 8, 32], [1, 8, 32], [1, 8, 32], [False, True], [False, True], [False, True]]

----- begin empirical tuning for problem size -----
 N = 10000
Parameters: {'ACOPY_x': [0, 2], 'ACOPY_y': [0, 2], 'RT_K': [0, 3], 'T1_I': [0, 7], 'T1_J': [0, 7], 'T1_K': [0, 7], 'U_K': [0, 30], 'U_J': [0, 30], 'U_I': [0, 30], 'U1_I': [0, 30], 'T2_K': [0, 7], 'T2_J': [0, 7], 'T2_I': [0, 7], 'VEC2': [0, 2], 'VEC1': [0, 2], 'RT_I': [0, 3], 'SCR': [0, 2], 'RT_J': [0, 3]}
Parameter Range Values: {'ACOPY_x': [False, True], 'ACOPY_y': [False, True], 'RT_K': [1, 8, 32], 'T1_I': [1, 16, 32, 64, 128, 256, 512], 'T1_J': [1, 16, 32, 64, 128, 256, 512], 'T1_K': [1, 16, 32, 64, 128, 256, 512], 'U_K': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_J': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U1_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'T2_K': [1, 64, 128, 256, 512, 1024, 2048], 'T2_J': [1, 64, 128, 256, 512, 1024, 2048], 'T2_I': [1, 64, 128, 256, 512, 1024, 2048], 'VEC2': [False, True], 'VEC1': [False, True], 'RT_I': [1, 8, 32], 'SCR': [False, True], 'RT_J': [1, 8, 32]}

----- begin random search -----
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Inverse Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Starting DOPT-anova
Step 0
Generating valid search space of size 660 (does not spend evaluations)
Valid coordinates: 132
Tested coordinates: 10000
Valid coordinates: 264
Valid coordinates: 396
Tested coordinates: 20000
Valid coordinates: 528
Valid coordinates: 660
Valid/Tested configurations: 660/27393
Generated Search Space:
NULL
Clean Info:
Removed Factors: character(0)

Removed Inverse Factors: [1] "ACOPY_x" "ACOPY_y" "SCR"     "VEC1"    "VEC2"   

New Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
New Inverse Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
New Fixed Factors: {}
Full Model:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Fixed Factors: {}
Computing D-Optimal Design
Computing D-Optimal Design with 33 experiments
Design Formula:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Starting "optFederov" run
Using Search Space:
NULL
Data Dimensions: [1] 660  18

    T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
43     3    4    6    2    3    4       0       1    6   0  22   5    2    0
56     6    6    0    5    5    3       1       1   27  14  17   0    1    0
94     4    4    0    0    2    0       0       0   26  25   0  29    0    0
138    4    1    6    4    6    0       1       1   18  23  19   0    0    2
141    0    3    1    6    3    1       1       0   11   0  25  20    0    1
146    0    6    2    4    0    6       0       0   27  29   0   8    0    0
151    3    4    6    5    6    6       1       0   18   0   4   1    0    1
154    2    0    1    3    0    6       0       0   20  10   0  20    1    1
174    0    0    1    5    6    0       1       0    0  23   0   3    2    0
182    5    2    2    6    1    0       1       1   29   0   9   7    0    0
184    6    0    0    0    4    0       0       0   28   1  27   0    0    0
196    0    1    3    3    1    0       1       0    4  10   2   0    2    0
214    0    4    5    0    5    0       1       1    4  16   0   8    1    1
220    0    0    6    4    3    0       1       1   10   0   0  23    1    0
266    6    2    6    5    6    5       0       0    0   0  24  15    1    0
277    3    0    0    6    6    1       1       1    1  18   0   6    0    0
285    6    6    2    0    4    3       1       0   28   0  25   0    0    0
307    4    5    5    5    0    5       1       1    0   1   0  28    0    1
327    0    1    4    1    1    2       0       1    0  18   0  21    0    1
342    3    3    3    6    0    2       0       1    8   7   0   0    0    2
363    2    3    1    0    6    5       1       1   16   0  10  27    1    0
430    0    0    4    1    5    0       0       1   12   0  13  29    0    0
436    2    5    1    1    4    1       0       0    9   0   1   7    0    2
477    2    3    4    4    0    4       1       1   29  29   0  22    2    0
507    6    3    2    4    5    6       1       1    2  29   0  24    0    1
527    0    1    0    6    3    6       0       1   10   0  17   0    2    0
570    0    0    2    0    2    5       1       0   26   0  11  16    0    2
605    2    1    0    1    3    6       1       0   12   0  19  20    0    2
608    1    4    0    2    0    3       0       1    0   0  12   4    1    0
645    6    1    4    5    0    5       1       1    3   3   0   7    0    0
652    1    3    3    1    5    5       1       1   29  11  20   0    1    0
659    5    1    4    0    1    2       1       0    2  23  15   0    1    0
660    2    4    2    0    3    6       1       0    1  24  13   0    0    0
    RT_K SCR VEC1 VEC2
43     0   1    0    1
56     0   1    0    1
94     1   0    0    1
138    0   1    0    0
141    1   0    0    1
146    1   1    1    0
151    0   1    1    1
154    0   1    0    0
174    0   1    0    1
182    2   1    1    0
184    0   1    1    1
196    0   0    1    0
214    0   0    1    1
220    0   1    1    0
266    0   0    1    1
277    2   0    1    0
285    2   1    0    1
307    1   1    1    0
327    0   1    0    0
342    0   1    1    0
363    0   1    0    0
430    2   0    0    1
436    0   0    0    0
477    0   0    1    1
507    1   1    1    0
527    0   0    0    0
570    0   0    1    1
605    0   1    1    1
608    1   1    1    1
645    1   0    0    1
652    1   0    1    0
659    1   1    0    0
660    0   0    0    1

D-Efficiency Approximation: [1] 0.012

Measuring design of size 33
Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	6
        Additions: 		4171
        Multiplications: 	2046
        Divisions: 		0
        Logical: 		0
        Reads: 			7801
        Writes: 		1215
        Comparisons:		24
        Gotos: 			0
        
 building the original code:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -DORIGINAL -o __orio_perftest_original.exe __orio_perftest1.c timer_cpu.o -lm
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest1.exe __orio_perftest1.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest1.exe  
Program Test Output: 
{'[3, 4, 6, 2, 3, 4, 0, 1, 6, 0, 22, 5, 2, 0, 0, 1, 0, 1]' : 0.46472}
{'[3, 4, 6, 2, 3, 4, 0, 1, 6, 0, 22, 5, 2, 0, 0, 1, 0, 1]' : 0.466745}
{'[3, 4, 6, 2, 3, 4, 0, 1, 6, 0, 22, 5, 2, 0, 0, 1, 0, 1]' : 0.464122}
{'[3, 4, 6, 2, 3, 4, 0, 1, 6, 0, 22, 5, 2, 0, 0, 1, 0, 1]' : 0.465167}
{'[3, 4, 6, 2, 3, 4, 0, 1, 6, 0, 22, 5, 2, 0, 0, 1, 0, 1]' : 0.463944}
{'[3, 4, 6, 2, 3, 4, 0, 1, 6, 0, 22, 5, 2, 0, 0, 1, 0, 1]' : 0.463923}
{'[3, 4, 6, 2, 3, 4, 0, 1, 6, 0, 22, 5, 2, 0, 0, 1, 0, 1]' : 0.463884}
{'[3, 4, 6, 2, 3, 4, 0, 1, 6, 0, 22, 5, 2, 0, 0, 1, 0, 1]' : 0.46609}
{'[3, 4, 6, 2, 3, 4, 0, 1, 6, 0, 22, 5, 2, 0, 0, 1, 0, 1]' : 0.463934}
{'[3, 4, 6, 2, 3, 4, 0, 1, 6, 0, 22, 5, 2, 0, 0, 1, 0, 1]' : 0.464501}
{'[3, 4, 6, 2, 3, 4, 0, 1, 6, 0, 22, 5, 2, 0, 0, 1, 0, 1]' : 0.464364}
{'[3, 4, 6, 2, 3, 4, 0, 1, 6, 0, 22, 5, 2, 0, 0, 1, 0, 1]' : 0.464414}
{'[3, 4, 6, 2, 3, 4, 0, 1, 6, 0, 22, 5, 2, 0, 0, 1, 0, 1]' : 0.465457}
{'[3, 4, 6, 2, 3, 4, 0, 1, 6, 0, 22, 5, 2, 0, 0, 1, 0, 1]' : 0.464632}
{'[3, 4, 6, 2, 3, 4, 0, 1, 6, 0, 22, 5, 2, 0, 0, 1, 0, 1]' : 0.464967}
{'[3, 4, 6, 2, 3, 4, 0, 1, 6, 0, 22, 5, 2, 0, 0, 1, 0, 1]' : 0.464813}
{'[3, 4, 6, 2, 3, 4, 0, 1, 6, 0, 22, 5, 2, 0, 0, 1, 0, 1]' : 0.465107}
{'[3, 4, 6, 2, 3, 4, 0, 1, 6, 0, 22, 5, 2, 0, 0, 1, 0, 1]' : 0.465308}
{'[3, 4, 6, 2, 3, 4, 0, 1, 6, 0, 22, 5, 2, 0, 0, 1, 0, 1]' : 0.464123}
{'[3, 4, 6, 2, 3, 4, 0, 1, 6, 0, 22, 5, 2, 0, 0, 1, 0, 1]' : 0.464225}
{'[3, 4, 6, 2, 3, 4, 0, 1, 6, 0, 22, 5, 2, 0, 0, 1, 0, 1]' : 0.464116}
{'[3, 4, 6, 2, 3, 4, 0, 1, 6, 0, 22, 5, 2, 0, 0, 1, 0, 1]' : 0.463881}
{'[3, 4, 6, 2, 3, 4, 0, 1, 6, 0, 22, 5, 2, 0, 0, 1, 0, 1]' : 0.464148}
{'[3, 4, 6, 2, 3, 4, 0, 1, 6, 0, 22, 5, 2, 0, 0, 1, 0, 1]' : 0.464356}
{'[3, 4, 6, 2, 3, 4, 0, 1, 6, 0, 22, 5, 2, 0, 0, 1, 0, 1]' : 0.463717}
{'[3, 4, 6, 2, 3, 4, 0, 1, 6, 0, 22, 5, 2, 0, 0, 1, 0, 1]' : 0.463677}
{'[3, 4, 6, 2, 3, 4, 0, 1, 6, 0, 22, 5, 2, 0, 0, 1, 0, 1]' : 0.463484}
{'[3, 4, 6, 2, 3, 4, 0, 1, 6, 0, 22, 5, 2, 0, 0, 1, 0, 1]' : 0.463692}
{'[3, 4, 6, 2, 3, 4, 0, 1, 6, 0, 22, 5, 2, 0, 0, 1, 0, 1]' : 0.463544}
{'[3, 4, 6, 2, 3, 4, 0, 1, 6, 0, 22, 5, 2, 0, 0, 1, 0, 1]' : 0.463624}

out:
 ["{'[3, 4, 6, 2, 3, 4, 0, 1, 6, 0, 22, 5, 2, 0, 0, 1, 0, 1]' : 0.46472}", "{'[3, 4, 6, 2, 3, 4, 0, 1, 6, 0, 22, 5, 2, 0, 0, 1, 0, 1]' : 0.466745}", "{'[3, 4, 6, 2, 3, 4, 0, 1, 6, 0, 22, 5, 2, 0, 0, 1, 0, 1]' : 0.464122}", "{'[3, 4, 6, 2, 3, 4, 0, 1, 6, 0, 22, 5, 2, 0, 0, 1, 0, 1]' : 0.465167}", "{'[3, 4, 6, 2, 3, 4, 0, 1, 6, 0, 22, 5, 2, 0, 0, 1, 0, 1]' : 0.463944}", "{'[3, 4, 6, 2, 3, 4, 0, 1, 6, 0, 22, 5, 2, 0, 0, 1, 0, 1]' : 0.463923}", "{'[3, 4, 6, 2, 3, 4, 0, 1, 6, 0, 22, 5, 2, 0, 0, 1, 0, 1]' : 0.463884}", "{'[3, 4, 6, 2, 3, 4, 0, 1, 6, 0, 22, 5, 2, 0, 0, 1, 0, 1]' : 0.46609}", "{'[3, 4, 6, 2, 3, 4, 0, 1, 6, 0, 22, 5, 2, 0, 0, 1, 0, 1]' : 0.463934}", "{'[3, 4, 6, 2, 3, 4, 0, 1, 6, 0, 22, 5, 2, 0, 0, 1, 0, 1]' : 0.464501}", "{'[3, 4, 6, 2, 3, 4, 0, 1, 6, 0, 22, 5, 2, 0, 0, 1, 0, 1]' : 0.464364}", "{'[3, 4, 6, 2, 3, 4, 0, 1, 6, 0, 22, 5, 2, 0, 0, 1, 0, 1]' : 0.464414}", "{'[3, 4, 6, 2, 3, 4, 0, 1, 6, 0, 22, 5, 2, 0, 0, 1, 0, 1]' : 0.465457}", "{'[3, 4, 6, 2, 3, 4, 0, 1, 6, 0, 22, 5, 2, 0, 0, 1, 0, 1]' : 0.464632}", "{'[3, 4, 6, 2, 3, 4, 0, 1, 6, 0, 22, 5, 2, 0, 0, 1, 0, 1]' : 0.464967}", "{'[3, 4, 6, 2, 3, 4, 0, 1, 6, 0, 22, 5, 2, 0, 0, 1, 0, 1]' : 0.464813}", "{'[3, 4, 6, 2, 3, 4, 0, 1, 6, 0, 22, 5, 2, 0, 0, 1, 0, 1]' : 0.465107}", "{'[3, 4, 6, 2, 3, 4, 0, 1, 6, 0, 22, 5, 2, 0, 0, 1, 0, 1]' : 0.465308}", "{'[3, 4, 6, 2, 3, 4, 0, 1, 6, 0, 22, 5, 2, 0, 0, 1, 0, 1]' : 0.464123}", "{'[3, 4, 6, 2, 3, 4, 0, 1, 6, 0, 22, 5, 2, 0, 0, 1, 0, 1]' : 0.464225}", "{'[3, 4, 6, 2, 3, 4, 0, 1, 6, 0, 22, 5, 2, 0, 0, 1, 0, 1]' : 0.464116}", "{'[3, 4, 6, 2, 3, 4, 0, 1, 6, 0, 22, 5, 2, 0, 0, 1, 0, 1]' : 0.463881}", "{'[3, 4, 6, 2, 3, 4, 0, 1, 6, 0, 22, 5, 2, 0, 0, 1, 0, 1]' : 0.464148}", "{'[3, 4, 6, 2, 3, 4, 0, 1, 6, 0, 22, 5, 2, 0, 0, 1, 0, 1]' : 0.464356}", "{'[3, 4, 6, 2, 3, 4, 0, 1, 6, 0, 22, 5, 2, 0, 0, 1, 0, 1]' : 0.463717}", "{'[3, 4, 6, 2, 3, 4, 0, 1, 6, 0, 22, 5, 2, 0, 0, 1, 0, 1]' : 0.463677}", "{'[3, 4, 6, 2, 3, 4, 0, 1, 6, 0, 22, 5, 2, 0, 0, 1, 0, 1]' : 0.463484}", "{'[3, 4, 6, 2, 3, 4, 0, 1, 6, 0, 22, 5, 2, 0, 0, 1, 0, 1]' : 0.463692}", "{'[3, 4, 6, 2, 3, 4, 0, 1, 6, 0, 22, 5, 2, 0, 0, 1, 0, 1]' : 0.463544}", "{'[3, 4, 6, 2, 3, 4, 0, 1, 6, 0, 22, 5, 2, 0, 0, 1, 0, 1]' : 0.463624}"]
returning from 'run': {'[3, 4, 6, 2, 3, 4, 0, 1, 6, 0, 22, 5, 2, 0, 0, 1, 0, 1]': ([0.46472, 0.466745, 0.464122, 0.465167, 0.463944, 0.463923, 0.463884, 0.46609, 0.463934, 0.464501, 0.464364, 0.464414, 0.465457, 0.464632, 0.464967, 0.464813, 0.465107, 0.465308, 0.464123, 0.464225, 0.464116, 0.463881, 0.464148, 0.464356, 0.463717, 0.463677, 0.463484, 0.463692, 0.463544, 0.463624], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 4, 6, 2, 3, 4, 0, 1, 6, 0, 22, 5, 2, 0, 0, 1, 0, 1]': ([0.46472, 0.466745, 0.464122, 0.465167, 0.463944, 0.463923, 0.463884, 0.46609, 0.463934, 0.464501, 0.464364, 0.464414, 0.465457, 0.464632, 0.464967, 0.464813, 0.465107, 0.465308, 0.464123, 0.464225, 0.464116, 0.463881, 0.464148, 0.464356, 0.463717, 0.463677, 0.463484, 0.463692, 0.463544, 0.463624], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	104
        Max loop nest depth: 	6
        Additions: 		3013
        Multiplications: 	960
        Divisions: 		0
        Logical: 		0
        Reads: 			5434
        Writes: 		912
        Comparisons:		104
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest2.exe __orio_perftest2.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest2.exe  
Program Test Output: 
{'[6, 6, 0, 5, 5, 3, 1, 1, 27, 14, 17, 0, 1, 0, 0, 1, 0, 1]' : 0.276156}
{'[6, 6, 0, 5, 5, 3, 1, 1, 27, 14, 17, 0, 1, 0, 0, 1, 0, 1]' : 0.275922}
{'[6, 6, 0, 5, 5, 3, 1, 1, 27, 14, 17, 0, 1, 0, 0, 1, 0, 1]' : 0.275337}
{'[6, 6, 0, 5, 5, 3, 1, 1, 27, 14, 17, 0, 1, 0, 0, 1, 0, 1]' : 0.274877}
{'[6, 6, 0, 5, 5, 3, 1, 1, 27, 14, 17, 0, 1, 0, 0, 1, 0, 1]' : 0.274988}
{'[6, 6, 0, 5, 5, 3, 1, 1, 27, 14, 17, 0, 1, 0, 0, 1, 0, 1]' : 0.275192}
{'[6, 6, 0, 5, 5, 3, 1, 1, 27, 14, 17, 0, 1, 0, 0, 1, 0, 1]' : 0.27541}
{'[6, 6, 0, 5, 5, 3, 1, 1, 27, 14, 17, 0, 1, 0, 0, 1, 0, 1]' : 0.274523}
{'[6, 6, 0, 5, 5, 3, 1, 1, 27, 14, 17, 0, 1, 0, 0, 1, 0, 1]' : 0.275042}
{'[6, 6, 0, 5, 5, 3, 1, 1, 27, 14, 17, 0, 1, 0, 0, 1, 0, 1]' : 0.275241}
{'[6, 6, 0, 5, 5, 3, 1, 1, 27, 14, 17, 0, 1, 0, 0, 1, 0, 1]' : 0.275103}
{'[6, 6, 0, 5, 5, 3, 1, 1, 27, 14, 17, 0, 1, 0, 0, 1, 0, 1]' : 0.27511}
{'[6, 6, 0, 5, 5, 3, 1, 1, 27, 14, 17, 0, 1, 0, 0, 1, 0, 1]' : 0.27498}
{'[6, 6, 0, 5, 5, 3, 1, 1, 27, 14, 17, 0, 1, 0, 0, 1, 0, 1]' : 0.274754}
{'[6, 6, 0, 5, 5, 3, 1, 1, 27, 14, 17, 0, 1, 0, 0, 1, 0, 1]' : 0.277346}
{'[6, 6, 0, 5, 5, 3, 1, 1, 27, 14, 17, 0, 1, 0, 0, 1, 0, 1]' : 0.283174}
{'[6, 6, 0, 5, 5, 3, 1, 1, 27, 14, 17, 0, 1, 0, 0, 1, 0, 1]' : 0.275424}
{'[6, 6, 0, 5, 5, 3, 1, 1, 27, 14, 17, 0, 1, 0, 0, 1, 0, 1]' : 0.275216}
{'[6, 6, 0, 5, 5, 3, 1, 1, 27, 14, 17, 0, 1, 0, 0, 1, 0, 1]' : 0.274788}
{'[6, 6, 0, 5, 5, 3, 1, 1, 27, 14, 17, 0, 1, 0, 0, 1, 0, 1]' : 0.275257}
{'[6, 6, 0, 5, 5, 3, 1, 1, 27, 14, 17, 0, 1, 0, 0, 1, 0, 1]' : 0.275199}
{'[6, 6, 0, 5, 5, 3, 1, 1, 27, 14, 17, 0, 1, 0, 0, 1, 0, 1]' : 0.274779}
{'[6, 6, 0, 5, 5, 3, 1, 1, 27, 14, 17, 0, 1, 0, 0, 1, 0, 1]' : 0.275156}
{'[6, 6, 0, 5, 5, 3, 1, 1, 27, 14, 17, 0, 1, 0, 0, 1, 0, 1]' : 0.275077}
{'[6, 6, 0, 5, 5, 3, 1, 1, 27, 14, 17, 0, 1, 0, 0, 1, 0, 1]' : 0.274901}
{'[6, 6, 0, 5, 5, 3, 1, 1, 27, 14, 17, 0, 1, 0, 0, 1, 0, 1]' : 0.275657}
{'[6, 6, 0, 5, 5, 3, 1, 1, 27, 14, 17, 0, 1, 0, 0, 1, 0, 1]' : 0.275143}
{'[6, 6, 0, 5, 5, 3, 1, 1, 27, 14, 17, 0, 1, 0, 0, 1, 0, 1]' : 0.275406}
{'[6, 6, 0, 5, 5, 3, 1, 1, 27, 14, 17, 0, 1, 0, 0, 1, 0, 1]' : 0.275262}
{'[6, 6, 0, 5, 5, 3, 1, 1, 27, 14, 17, 0, 1, 0, 0, 1, 0, 1]' : 0.275685}

out:
 ["{'[6, 6, 0, 5, 5, 3, 1, 1, 27, 14, 17, 0, 1, 0, 0, 1, 0, 1]' : 0.276156}", "{'[6, 6, 0, 5, 5, 3, 1, 1, 27, 14, 17, 0, 1, 0, 0, 1, 0, 1]' : 0.275922}", "{'[6, 6, 0, 5, 5, 3, 1, 1, 27, 14, 17, 0, 1, 0, 0, 1, 0, 1]' : 0.275337}", "{'[6, 6, 0, 5, 5, 3, 1, 1, 27, 14, 17, 0, 1, 0, 0, 1, 0, 1]' : 0.274877}", "{'[6, 6, 0, 5, 5, 3, 1, 1, 27, 14, 17, 0, 1, 0, 0, 1, 0, 1]' : 0.274988}", "{'[6, 6, 0, 5, 5, 3, 1, 1, 27, 14, 17, 0, 1, 0, 0, 1, 0, 1]' : 0.275192}", "{'[6, 6, 0, 5, 5, 3, 1, 1, 27, 14, 17, 0, 1, 0, 0, 1, 0, 1]' : 0.27541}", "{'[6, 6, 0, 5, 5, 3, 1, 1, 27, 14, 17, 0, 1, 0, 0, 1, 0, 1]' : 0.274523}", "{'[6, 6, 0, 5, 5, 3, 1, 1, 27, 14, 17, 0, 1, 0, 0, 1, 0, 1]' : 0.275042}", "{'[6, 6, 0, 5, 5, 3, 1, 1, 27, 14, 17, 0, 1, 0, 0, 1, 0, 1]' : 0.275241}", "{'[6, 6, 0, 5, 5, 3, 1, 1, 27, 14, 17, 0, 1, 0, 0, 1, 0, 1]' : 0.275103}", "{'[6, 6, 0, 5, 5, 3, 1, 1, 27, 14, 17, 0, 1, 0, 0, 1, 0, 1]' : 0.27511}", "{'[6, 6, 0, 5, 5, 3, 1, 1, 27, 14, 17, 0, 1, 0, 0, 1, 0, 1]' : 0.27498}", "{'[6, 6, 0, 5, 5, 3, 1, 1, 27, 14, 17, 0, 1, 0, 0, 1, 0, 1]' : 0.274754}", "{'[6, 6, 0, 5, 5, 3, 1, 1, 27, 14, 17, 0, 1, 0, 0, 1, 0, 1]' : 0.277346}", "{'[6, 6, 0, 5, 5, 3, 1, 1, 27, 14, 17, 0, 1, 0, 0, 1, 0, 1]' : 0.283174}", "{'[6, 6, 0, 5, 5, 3, 1, 1, 27, 14, 17, 0, 1, 0, 0, 1, 0, 1]' : 0.275424}", "{'[6, 6, 0, 5, 5, 3, 1, 1, 27, 14, 17, 0, 1, 0, 0, 1, 0, 1]' : 0.275216}", "{'[6, 6, 0, 5, 5, 3, 1, 1, 27, 14, 17, 0, 1, 0, 0, 1, 0, 1]' : 0.274788}", "{'[6, 6, 0, 5, 5, 3, 1, 1, 27, 14, 17, 0, 1, 0, 0, 1, 0, 1]' : 0.275257}", "{'[6, 6, 0, 5, 5, 3, 1, 1, 27, 14, 17, 0, 1, 0, 0, 1, 0, 1]' : 0.275199}", "{'[6, 6, 0, 5, 5, 3, 1, 1, 27, 14, 17, 0, 1, 0, 0, 1, 0, 1]' : 0.274779}", "{'[6, 6, 0, 5, 5, 3, 1, 1, 27, 14, 17, 0, 1, 0, 0, 1, 0, 1]' : 0.275156}", "{'[6, 6, 0, 5, 5, 3, 1, 1, 27, 14, 17, 0, 1, 0, 0, 1, 0, 1]' : 0.275077}", "{'[6, 6, 0, 5, 5, 3, 1, 1, 27, 14, 17, 0, 1, 0, 0, 1, 0, 1]' : 0.274901}", "{'[6, 6, 0, 5, 5, 3, 1, 1, 27, 14, 17, 0, 1, 0, 0, 1, 0, 1]' : 0.275657}", "{'[6, 6, 0, 5, 5, 3, 1, 1, 27, 14, 17, 0, 1, 0, 0, 1, 0, 1]' : 0.275143}", "{'[6, 6, 0, 5, 5, 3, 1, 1, 27, 14, 17, 0, 1, 0, 0, 1, 0, 1]' : 0.275406}", "{'[6, 6, 0, 5, 5, 3, 1, 1, 27, 14, 17, 0, 1, 0, 0, 1, 0, 1]' : 0.275262}", "{'[6, 6, 0, 5, 5, 3, 1, 1, 27, 14, 17, 0, 1, 0, 0, 1, 0, 1]' : 0.275685}"]
returning from 'run': {'[6, 6, 0, 5, 5, 3, 1, 1, 27, 14, 17, 0, 1, 0, 0, 1, 0, 1]': ([0.276156, 0.275922, 0.275337, 0.274877, 0.274988, 0.275192, 0.27541, 0.274523, 0.275042, 0.275241, 0.275103, 0.27511, 0.27498, 0.274754, 0.277346, 0.283174, 0.275424, 0.275216, 0.274788, 0.275257, 0.275199, 0.274779, 0.275156, 0.275077, 0.274901, 0.275657, 0.275143, 0.275406, 0.275262, 0.275685], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 0, 5, 5, 3, 1, 1, 27, 14, 17, 0, 1, 0, 0, 1, 0, 1]': ([0.276156, 0.275922, 0.275337, 0.274877, 0.274988, 0.275192, 0.27541, 0.274523, 0.275042, 0.275241, 0.275103, 0.27511, 0.27498, 0.274754, 0.277346, 0.283174, 0.275424, 0.275216, 0.274788, 0.275257, 0.275199, 0.274779, 0.275156, 0.275077, 0.274901, 0.275657, 0.275143, 0.275406, 0.275262, 0.275685], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Code stats:
        Number of loops: 	91
        Max loop nest depth: 	6
        Additions: 		3734
        Multiplications: 	1650
        Divisions: 		0
        Logical: 		0
        Reads: 			7202
        Writes: 		1213
        Comparisons:		91
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest3.exe __orio_perftest3.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest3.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest3.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest3.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 129, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 639, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 557, in dopt_anova
    i)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 504, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 396, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 335, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest3.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 129, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 639, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 557, in dopt_anova
    i)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 504, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 396, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 335, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		240
        Multiplications: 	76
        Divisions: 		0
        Logical: 		0
        Reads: 			518
        Writes: 		84
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest4.exe __orio_perftest4.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest4.exe  
Program Test Output: 
{'[0, 3, 1, 6, 3, 1, 1, 0, 11, 0, 25, 20, 0, 1, 1, 0, 0, 1]' : 0.805505}
{'[0, 3, 1, 6, 3, 1, 1, 0, 11, 0, 25, 20, 0, 1, 1, 0, 0, 1]' : 0.805161}
{'[0, 3, 1, 6, 3, 1, 1, 0, 11, 0, 25, 20, 0, 1, 1, 0, 0, 1]' : 0.804028}
{'[0, 3, 1, 6, 3, 1, 1, 0, 11, 0, 25, 20, 0, 1, 1, 0, 0, 1]' : 0.804358}
{'[0, 3, 1, 6, 3, 1, 1, 0, 11, 0, 25, 20, 0, 1, 1, 0, 0, 1]' : 0.805024}
{'[0, 3, 1, 6, 3, 1, 1, 0, 11, 0, 25, 20, 0, 1, 1, 0, 0, 1]' : 0.804806}
{'[0, 3, 1, 6, 3, 1, 1, 0, 11, 0, 25, 20, 0, 1, 1, 0, 0, 1]' : 0.804953}
{'[0, 3, 1, 6, 3, 1, 1, 0, 11, 0, 25, 20, 0, 1, 1, 0, 0, 1]' : 0.807875}
{'[0, 3, 1, 6, 3, 1, 1, 0, 11, 0, 25, 20, 0, 1, 1, 0, 0, 1]' : 0.850188}
{'[0, 3, 1, 6, 3, 1, 1, 0, 11, 0, 25, 20, 0, 1, 1, 0, 0, 1]' : 0.805097}
{'[0, 3, 1, 6, 3, 1, 1, 0, 11, 0, 25, 20, 0, 1, 1, 0, 0, 1]' : 0.811287}
{'[0, 3, 1, 6, 3, 1, 1, 0, 11, 0, 25, 20, 0, 1, 1, 0, 0, 1]' : 0.803728}
{'[0, 3, 1, 6, 3, 1, 1, 0, 11, 0, 25, 20, 0, 1, 1, 0, 0, 1]' : 0.803639}
{'[0, 3, 1, 6, 3, 1, 1, 0, 11, 0, 25, 20, 0, 1, 1, 0, 0, 1]' : 0.804145}
{'[0, 3, 1, 6, 3, 1, 1, 0, 11, 0, 25, 20, 0, 1, 1, 0, 0, 1]' : 0.804616}
{'[0, 3, 1, 6, 3, 1, 1, 0, 11, 0, 25, 20, 0, 1, 1, 0, 0, 1]' : 0.804413}
{'[0, 3, 1, 6, 3, 1, 1, 0, 11, 0, 25, 20, 0, 1, 1, 0, 0, 1]' : 0.804676}
{'[0, 3, 1, 6, 3, 1, 1, 0, 11, 0, 25, 20, 0, 1, 1, 0, 0, 1]' : 0.804542}
{'[0, 3, 1, 6, 3, 1, 1, 0, 11, 0, 25, 20, 0, 1, 1, 0, 0, 1]' : 0.804575}
{'[0, 3, 1, 6, 3, 1, 1, 0, 11, 0, 25, 20, 0, 1, 1, 0, 0, 1]' : 0.805}
{'[0, 3, 1, 6, 3, 1, 1, 0, 11, 0, 25, 20, 0, 1, 1, 0, 0, 1]' : 0.807433}
{'[0, 3, 1, 6, 3, 1, 1, 0, 11, 0, 25, 20, 0, 1, 1, 0, 0, 1]' : 0.811968}
{'[0, 3, 1, 6, 3, 1, 1, 0, 11, 0, 25, 20, 0, 1, 1, 0, 0, 1]' : 0.805654}
{'[0, 3, 1, 6, 3, 1, 1, 0, 11, 0, 25, 20, 0, 1, 1, 0, 0, 1]' : 0.806491}
{'[0, 3, 1, 6, 3, 1, 1, 0, 11, 0, 25, 20, 0, 1, 1, 0, 0, 1]' : 0.805533}
{'[0, 3, 1, 6, 3, 1, 1, 0, 11, 0, 25, 20, 0, 1, 1, 0, 0, 1]' : 0.804003}
{'[0, 3, 1, 6, 3, 1, 1, 0, 11, 0, 25, 20, 0, 1, 1, 0, 0, 1]' : 0.803967}
{'[0, 3, 1, 6, 3, 1, 1, 0, 11, 0, 25, 20, 0, 1, 1, 0, 0, 1]' : 0.80662}
{'[0, 3, 1, 6, 3, 1, 1, 0, 11, 0, 25, 20, 0, 1, 1, 0, 0, 1]' : 0.80422}
{'[0, 3, 1, 6, 3, 1, 1, 0, 11, 0, 25, 20, 0, 1, 1, 0, 0, 1]' : 0.804854}

out:
 ["{'[0, 3, 1, 6, 3, 1, 1, 0, 11, 0, 25, 20, 0, 1, 1, 0, 0, 1]' : 0.805505}", "{'[0, 3, 1, 6, 3, 1, 1, 0, 11, 0, 25, 20, 0, 1, 1, 0, 0, 1]' : 0.805161}", "{'[0, 3, 1, 6, 3, 1, 1, 0, 11, 0, 25, 20, 0, 1, 1, 0, 0, 1]' : 0.804028}", "{'[0, 3, 1, 6, 3, 1, 1, 0, 11, 0, 25, 20, 0, 1, 1, 0, 0, 1]' : 0.804358}", "{'[0, 3, 1, 6, 3, 1, 1, 0, 11, 0, 25, 20, 0, 1, 1, 0, 0, 1]' : 0.805024}", "{'[0, 3, 1, 6, 3, 1, 1, 0, 11, 0, 25, 20, 0, 1, 1, 0, 0, 1]' : 0.804806}", "{'[0, 3, 1, 6, 3, 1, 1, 0, 11, 0, 25, 20, 0, 1, 1, 0, 0, 1]' : 0.804953}", "{'[0, 3, 1, 6, 3, 1, 1, 0, 11, 0, 25, 20, 0, 1, 1, 0, 0, 1]' : 0.807875}", "{'[0, 3, 1, 6, 3, 1, 1, 0, 11, 0, 25, 20, 0, 1, 1, 0, 0, 1]' : 0.850188}", "{'[0, 3, 1, 6, 3, 1, 1, 0, 11, 0, 25, 20, 0, 1, 1, 0, 0, 1]' : 0.805097}", "{'[0, 3, 1, 6, 3, 1, 1, 0, 11, 0, 25, 20, 0, 1, 1, 0, 0, 1]' : 0.811287}", "{'[0, 3, 1, 6, 3, 1, 1, 0, 11, 0, 25, 20, 0, 1, 1, 0, 0, 1]' : 0.803728}", "{'[0, 3, 1, 6, 3, 1, 1, 0, 11, 0, 25, 20, 0, 1, 1, 0, 0, 1]' : 0.803639}", "{'[0, 3, 1, 6, 3, 1, 1, 0, 11, 0, 25, 20, 0, 1, 1, 0, 0, 1]' : 0.804145}", "{'[0, 3, 1, 6, 3, 1, 1, 0, 11, 0, 25, 20, 0, 1, 1, 0, 0, 1]' : 0.804616}", "{'[0, 3, 1, 6, 3, 1, 1, 0, 11, 0, 25, 20, 0, 1, 1, 0, 0, 1]' : 0.804413}", "{'[0, 3, 1, 6, 3, 1, 1, 0, 11, 0, 25, 20, 0, 1, 1, 0, 0, 1]' : 0.804676}", "{'[0, 3, 1, 6, 3, 1, 1, 0, 11, 0, 25, 20, 0, 1, 1, 0, 0, 1]' : 0.804542}", "{'[0, 3, 1, 6, 3, 1, 1, 0, 11, 0, 25, 20, 0, 1, 1, 0, 0, 1]' : 0.804575}", "{'[0, 3, 1, 6, 3, 1, 1, 0, 11, 0, 25, 20, 0, 1, 1, 0, 0, 1]' : 0.805}", "{'[0, 3, 1, 6, 3, 1, 1, 0, 11, 0, 25, 20, 0, 1, 1, 0, 0, 1]' : 0.807433}", "{'[0, 3, 1, 6, 3, 1, 1, 0, 11, 0, 25, 20, 0, 1, 1, 0, 0, 1]' : 0.811968}", "{'[0, 3, 1, 6, 3, 1, 1, 0, 11, 0, 25, 20, 0, 1, 1, 0, 0, 1]' : 0.805654}", "{'[0, 3, 1, 6, 3, 1, 1, 0, 11, 0, 25, 20, 0, 1, 1, 0, 0, 1]' : 0.806491}", "{'[0, 3, 1, 6, 3, 1, 1, 0, 11, 0, 25, 20, 0, 1, 1, 0, 0, 1]' : 0.805533}", "{'[0, 3, 1, 6, 3, 1, 1, 0, 11, 0, 25, 20, 0, 1, 1, 0, 0, 1]' : 0.804003}", "{'[0, 3, 1, 6, 3, 1, 1, 0, 11, 0, 25, 20, 0, 1, 1, 0, 0, 1]' : 0.803967}", "{'[0, 3, 1, 6, 3, 1, 1, 0, 11, 0, 25, 20, 0, 1, 1, 0, 0, 1]' : 0.80662}", "{'[0, 3, 1, 6, 3, 1, 1, 0, 11, 0, 25, 20, 0, 1, 1, 0, 0, 1]' : 0.80422}", "{'[0, 3, 1, 6, 3, 1, 1, 0, 11, 0, 25, 20, 0, 1, 1, 0, 0, 1]' : 0.804854}"]
returning from 'run': {'[0, 3, 1, 6, 3, 1, 1, 0, 11, 0, 25, 20, 0, 1, 1, 0, 0, 1]': ([0.805505, 0.805161, 0.804028, 0.804358, 0.805024, 0.804806, 0.804953, 0.807875, 0.850188, 0.805097, 0.811287, 0.803728, 0.803639, 0.804145, 0.804616, 0.804413, 0.804676, 0.804542, 0.804575, 0.805, 0.807433, 0.811968, 0.805654, 0.806491, 0.805533, 0.804003, 0.803967, 0.80662, 0.80422, 0.804854], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 3, 1, 6, 3, 1, 1, 0, 11, 0, 25, 20, 0, 1, 1, 0, 0, 1]': ([0.805505, 0.805161, 0.804028, 0.804358, 0.805024, 0.804806, 0.804953, 0.807875, 0.850188, 0.805097, 0.811287, 0.803728, 0.803639, 0.804145, 0.804616, 0.804413, 0.804676, 0.804542, 0.804575, 0.805, 0.807433, 0.811968, 0.805654, 0.806491, 0.805533, 0.804003, 0.803967, 0.80662, 0.80422, 0.804854], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	6
        Additions: 		114
        Multiplications: 	22
        Divisions: 		0
        Logical: 		0
        Reads: 			264
        Writes: 		74
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest5.exe __orio_perftest5.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest5.exe  
Program Test Output: 
{'[3, 4, 6, 5, 6, 6, 1, 0, 18, 0, 4, 1, 0, 1, 0, 1, 1, 1]' : 0.660192}
{'[3, 4, 6, 5, 6, 6, 1, 0, 18, 0, 4, 1, 0, 1, 0, 1, 1, 1]' : 0.66046}
{'[3, 4, 6, 5, 6, 6, 1, 0, 18, 0, 4, 1, 0, 1, 0, 1, 1, 1]' : 0.660256}
{'[3, 4, 6, 5, 6, 6, 1, 0, 18, 0, 4, 1, 0, 1, 0, 1, 1, 1]' : 0.660386}
{'[3, 4, 6, 5, 6, 6, 1, 0, 18, 0, 4, 1, 0, 1, 0, 1, 1, 1]' : 0.660372}
{'[3, 4, 6, 5, 6, 6, 1, 0, 18, 0, 4, 1, 0, 1, 0, 1, 1, 1]' : 0.660965}
{'[3, 4, 6, 5, 6, 6, 1, 0, 18, 0, 4, 1, 0, 1, 0, 1, 1, 1]' : 0.660718}
{'[3, 4, 6, 5, 6, 6, 1, 0, 18, 0, 4, 1, 0, 1, 0, 1, 1, 1]' : 0.660744}
{'[3, 4, 6, 5, 6, 6, 1, 0, 18, 0, 4, 1, 0, 1, 0, 1, 1, 1]' : 0.660588}
{'[3, 4, 6, 5, 6, 6, 1, 0, 18, 0, 4, 1, 0, 1, 0, 1, 1, 1]' : 0.663299}
{'[3, 4, 6, 5, 6, 6, 1, 0, 18, 0, 4, 1, 0, 1, 0, 1, 1, 1]' : 0.660168}
{'[3, 4, 6, 5, 6, 6, 1, 0, 18, 0, 4, 1, 0, 1, 0, 1, 1, 1]' : 0.660262}
{'[3, 4, 6, 5, 6, 6, 1, 0, 18, 0, 4, 1, 0, 1, 0, 1, 1, 1]' : 0.660179}
{'[3, 4, 6, 5, 6, 6, 1, 0, 18, 0, 4, 1, 0, 1, 0, 1, 1, 1]' : 0.660044}
{'[3, 4, 6, 5, 6, 6, 1, 0, 18, 0, 4, 1, 0, 1, 0, 1, 1, 1]' : 0.660284}
{'[3, 4, 6, 5, 6, 6, 1, 0, 18, 0, 4, 1, 0, 1, 0, 1, 1, 1]' : 0.660327}
{'[3, 4, 6, 5, 6, 6, 1, 0, 18, 0, 4, 1, 0, 1, 0, 1, 1, 1]' : 0.660388}
{'[3, 4, 6, 5, 6, 6, 1, 0, 18, 0, 4, 1, 0, 1, 0, 1, 1, 1]' : 0.660403}
{'[3, 4, 6, 5, 6, 6, 1, 0, 18, 0, 4, 1, 0, 1, 0, 1, 1, 1]' : 0.660682}
{'[3, 4, 6, 5, 6, 6, 1, 0, 18, 0, 4, 1, 0, 1, 0, 1, 1, 1]' : 0.661338}
{'[3, 4, 6, 5, 6, 6, 1, 0, 18, 0, 4, 1, 0, 1, 0, 1, 1, 1]' : 0.664388}
{'[3, 4, 6, 5, 6, 6, 1, 0, 18, 0, 4, 1, 0, 1, 0, 1, 1, 1]' : 0.701049}
{'[3, 4, 6, 5, 6, 6, 1, 0, 18, 0, 4, 1, 0, 1, 0, 1, 1, 1]' : 0.703674}
{'[3, 4, 6, 5, 6, 6, 1, 0, 18, 0, 4, 1, 0, 1, 0, 1, 1, 1]' : 0.682118}
{'[3, 4, 6, 5, 6, 6, 1, 0, 18, 0, 4, 1, 0, 1, 0, 1, 1, 1]' : 0.695344}
{'[3, 4, 6, 5, 6, 6, 1, 0, 18, 0, 4, 1, 0, 1, 0, 1, 1, 1]' : 0.661597}
{'[3, 4, 6, 5, 6, 6, 1, 0, 18, 0, 4, 1, 0, 1, 0, 1, 1, 1]' : 0.661006}
{'[3, 4, 6, 5, 6, 6, 1, 0, 18, 0, 4, 1, 0, 1, 0, 1, 1, 1]' : 0.664318}
{'[3, 4, 6, 5, 6, 6, 1, 0, 18, 0, 4, 1, 0, 1, 0, 1, 1, 1]' : 0.660847}
{'[3, 4, 6, 5, 6, 6, 1, 0, 18, 0, 4, 1, 0, 1, 0, 1, 1, 1]' : 0.66086}

out:
 ["{'[3, 4, 6, 5, 6, 6, 1, 0, 18, 0, 4, 1, 0, 1, 0, 1, 1, 1]' : 0.660192}", "{'[3, 4, 6, 5, 6, 6, 1, 0, 18, 0, 4, 1, 0, 1, 0, 1, 1, 1]' : 0.66046}", "{'[3, 4, 6, 5, 6, 6, 1, 0, 18, 0, 4, 1, 0, 1, 0, 1, 1, 1]' : 0.660256}", "{'[3, 4, 6, 5, 6, 6, 1, 0, 18, 0, 4, 1, 0, 1, 0, 1, 1, 1]' : 0.660386}", "{'[3, 4, 6, 5, 6, 6, 1, 0, 18, 0, 4, 1, 0, 1, 0, 1, 1, 1]' : 0.660372}", "{'[3, 4, 6, 5, 6, 6, 1, 0, 18, 0, 4, 1, 0, 1, 0, 1, 1, 1]' : 0.660965}", "{'[3, 4, 6, 5, 6, 6, 1, 0, 18, 0, 4, 1, 0, 1, 0, 1, 1, 1]' : 0.660718}", "{'[3, 4, 6, 5, 6, 6, 1, 0, 18, 0, 4, 1, 0, 1, 0, 1, 1, 1]' : 0.660744}", "{'[3, 4, 6, 5, 6, 6, 1, 0, 18, 0, 4, 1, 0, 1, 0, 1, 1, 1]' : 0.660588}", "{'[3, 4, 6, 5, 6, 6, 1, 0, 18, 0, 4, 1, 0, 1, 0, 1, 1, 1]' : 0.663299}", "{'[3, 4, 6, 5, 6, 6, 1, 0, 18, 0, 4, 1, 0, 1, 0, 1, 1, 1]' : 0.660168}", "{'[3, 4, 6, 5, 6, 6, 1, 0, 18, 0, 4, 1, 0, 1, 0, 1, 1, 1]' : 0.660262}", "{'[3, 4, 6, 5, 6, 6, 1, 0, 18, 0, 4, 1, 0, 1, 0, 1, 1, 1]' : 0.660179}", "{'[3, 4, 6, 5, 6, 6, 1, 0, 18, 0, 4, 1, 0, 1, 0, 1, 1, 1]' : 0.660044}", "{'[3, 4, 6, 5, 6, 6, 1, 0, 18, 0, 4, 1, 0, 1, 0, 1, 1, 1]' : 0.660284}", "{'[3, 4, 6, 5, 6, 6, 1, 0, 18, 0, 4, 1, 0, 1, 0, 1, 1, 1]' : 0.660327}", "{'[3, 4, 6, 5, 6, 6, 1, 0, 18, 0, 4, 1, 0, 1, 0, 1, 1, 1]' : 0.660388}", "{'[3, 4, 6, 5, 6, 6, 1, 0, 18, 0, 4, 1, 0, 1, 0, 1, 1, 1]' : 0.660403}", "{'[3, 4, 6, 5, 6, 6, 1, 0, 18, 0, 4, 1, 0, 1, 0, 1, 1, 1]' : 0.660682}", "{'[3, 4, 6, 5, 6, 6, 1, 0, 18, 0, 4, 1, 0, 1, 0, 1, 1, 1]' : 0.661338}", "{'[3, 4, 6, 5, 6, 6, 1, 0, 18, 0, 4, 1, 0, 1, 0, 1, 1, 1]' : 0.664388}", "{'[3, 4, 6, 5, 6, 6, 1, 0, 18, 0, 4, 1, 0, 1, 0, 1, 1, 1]' : 0.701049}", "{'[3, 4, 6, 5, 6, 6, 1, 0, 18, 0, 4, 1, 0, 1, 0, 1, 1, 1]' : 0.703674}", "{'[3, 4, 6, 5, 6, 6, 1, 0, 18, 0, 4, 1, 0, 1, 0, 1, 1, 1]' : 0.682118}", "{'[3, 4, 6, 5, 6, 6, 1, 0, 18, 0, 4, 1, 0, 1, 0, 1, 1, 1]' : 0.695344}", "{'[3, 4, 6, 5, 6, 6, 1, 0, 18, 0, 4, 1, 0, 1, 0, 1, 1, 1]' : 0.661597}", "{'[3, 4, 6, 5, 6, 6, 1, 0, 18, 0, 4, 1, 0, 1, 0, 1, 1, 1]' : 0.661006}", "{'[3, 4, 6, 5, 6, 6, 1, 0, 18, 0, 4, 1, 0, 1, 0, 1, 1, 1]' : 0.664318}", "{'[3, 4, 6, 5, 6, 6, 1, 0, 18, 0, 4, 1, 0, 1, 0, 1, 1, 1]' : 0.660847}", "{'[3, 4, 6, 5, 6, 6, 1, 0, 18, 0, 4, 1, 0, 1, 0, 1, 1, 1]' : 0.66086}"]
returning from 'run': {'[3, 4, 6, 5, 6, 6, 1, 0, 18, 0, 4, 1, 0, 1, 0, 1, 1, 1]': ([0.660192, 0.66046, 0.660256, 0.660386, 0.660372, 0.660965, 0.660718, 0.660744, 0.660588, 0.663299, 0.660168, 0.660262, 0.660179, 0.660044, 0.660284, 0.660327, 0.660388, 0.660403, 0.660682, 0.661338, 0.664388, 0.701049, 0.703674, 0.682118, 0.695344, 0.661597, 0.661006, 0.664318, 0.660847, 0.66086], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 4, 6, 5, 6, 6, 1, 0, 18, 0, 4, 1, 0, 1, 0, 1, 1, 1]': ([0.660192, 0.66046, 0.660256, 0.660386, 0.660372, 0.660965, 0.660718, 0.660744, 0.660588, 0.663299, 0.660168, 0.660262, 0.660179, 0.660044, 0.660284, 0.660327, 0.660388, 0.660403, 0.660682, 0.661338, 0.664388, 0.701049, 0.703674, 0.682118, 0.695344, 0.661597, 0.661006, 0.664318, 0.660847, 0.66086], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	6
        Additions: 		2546
        Multiplications: 	1200
        Divisions: 		0
        Logical: 		0
        Reads: 			4983
        Writes: 		867
        Comparisons:		22
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest6.exe __orio_perftest6.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest6.exe  
Program Test Output: 
{'[2, 0, 1, 3, 0, 6, 0, 0, 20, 10, 0, 20, 1, 1, 0, 1, 0, 0]' : 0.265534}
{'[2, 0, 1, 3, 0, 6, 0, 0, 20, 10, 0, 20, 1, 1, 0, 1, 0, 0]' : 0.271864}
{'[2, 0, 1, 3, 0, 6, 0, 0, 20, 10, 0, 20, 1, 1, 0, 1, 0, 0]' : 0.266068}
{'[2, 0, 1, 3, 0, 6, 0, 0, 20, 10, 0, 20, 1, 1, 0, 1, 0, 0]' : 0.265648}
{'[2, 0, 1, 3, 0, 6, 0, 0, 20, 10, 0, 20, 1, 1, 0, 1, 0, 0]' : 0.273258}
{'[2, 0, 1, 3, 0, 6, 0, 0, 20, 10, 0, 20, 1, 1, 0, 1, 0, 0]' : 0.26699}
{'[2, 0, 1, 3, 0, 6, 0, 0, 20, 10, 0, 20, 1, 1, 0, 1, 0, 0]' : 0.266132}
{'[2, 0, 1, 3, 0, 6, 0, 0, 20, 10, 0, 20, 1, 1, 0, 1, 0, 0]' : 0.265606}
{'[2, 0, 1, 3, 0, 6, 0, 0, 20, 10, 0, 20, 1, 1, 0, 1, 0, 0]' : 0.271358}
{'[2, 0, 1, 3, 0, 6, 0, 0, 20, 10, 0, 20, 1, 1, 0, 1, 0, 0]' : 0.265722}
{'[2, 0, 1, 3, 0, 6, 0, 0, 20, 10, 0, 20, 1, 1, 0, 1, 0, 0]' : 0.265967}
{'[2, 0, 1, 3, 0, 6, 0, 0, 20, 10, 0, 20, 1, 1, 0, 1, 0, 0]' : 0.266231}
{'[2, 0, 1, 3, 0, 6, 0, 0, 20, 10, 0, 20, 1, 1, 0, 1, 0, 0]' : 0.271268}
{'[2, 0, 1, 3, 0, 6, 0, 0, 20, 10, 0, 20, 1, 1, 0, 1, 0, 0]' : 0.265625}
{'[2, 0, 1, 3, 0, 6, 0, 0, 20, 10, 0, 20, 1, 1, 0, 1, 0, 0]' : 0.265852}
{'[2, 0, 1, 3, 0, 6, 0, 0, 20, 10, 0, 20, 1, 1, 0, 1, 0, 0]' : 0.265887}
{'[2, 0, 1, 3, 0, 6, 0, 0, 20, 10, 0, 20, 1, 1, 0, 1, 0, 0]' : 0.270977}
{'[2, 0, 1, 3, 0, 6, 0, 0, 20, 10, 0, 20, 1, 1, 0, 1, 0, 0]' : 0.266089}
{'[2, 0, 1, 3, 0, 6, 0, 0, 20, 10, 0, 20, 1, 1, 0, 1, 0, 0]' : 0.2658}
{'[2, 0, 1, 3, 0, 6, 0, 0, 20, 10, 0, 20, 1, 1, 0, 1, 0, 0]' : 0.272299}
{'[2, 0, 1, 3, 0, 6, 0, 0, 20, 10, 0, 20, 1, 1, 0, 1, 0, 0]' : 0.265741}
{'[2, 0, 1, 3, 0, 6, 0, 0, 20, 10, 0, 20, 1, 1, 0, 1, 0, 0]' : 0.265825}
{'[2, 0, 1, 3, 0, 6, 0, 0, 20, 10, 0, 20, 1, 1, 0, 1, 0, 0]' : 0.265704}
{'[2, 0, 1, 3, 0, 6, 0, 0, 20, 10, 0, 20, 1, 1, 0, 1, 0, 0]' : 0.270889}
{'[2, 0, 1, 3, 0, 6, 0, 0, 20, 10, 0, 20, 1, 1, 0, 1, 0, 0]' : 0.265799}
{'[2, 0, 1, 3, 0, 6, 0, 0, 20, 10, 0, 20, 1, 1, 0, 1, 0, 0]' : 0.266052}
{'[2, 0, 1, 3, 0, 6, 0, 0, 20, 10, 0, 20, 1, 1, 0, 1, 0, 0]' : 0.266399}
{'[2, 0, 1, 3, 0, 6, 0, 0, 20, 10, 0, 20, 1, 1, 0, 1, 0, 0]' : 0.270749}
{'[2, 0, 1, 3, 0, 6, 0, 0, 20, 10, 0, 20, 1, 1, 0, 1, 0, 0]' : 0.265633}
{'[2, 0, 1, 3, 0, 6, 0, 0, 20, 10, 0, 20, 1, 1, 0, 1, 0, 0]' : 0.26607}

out:
 ["{'[2, 0, 1, 3, 0, 6, 0, 0, 20, 10, 0, 20, 1, 1, 0, 1, 0, 0]' : 0.265534}", "{'[2, 0, 1, 3, 0, 6, 0, 0, 20, 10, 0, 20, 1, 1, 0, 1, 0, 0]' : 0.271864}", "{'[2, 0, 1, 3, 0, 6, 0, 0, 20, 10, 0, 20, 1, 1, 0, 1, 0, 0]' : 0.266068}", "{'[2, 0, 1, 3, 0, 6, 0, 0, 20, 10, 0, 20, 1, 1, 0, 1, 0, 0]' : 0.265648}", "{'[2, 0, 1, 3, 0, 6, 0, 0, 20, 10, 0, 20, 1, 1, 0, 1, 0, 0]' : 0.273258}", "{'[2, 0, 1, 3, 0, 6, 0, 0, 20, 10, 0, 20, 1, 1, 0, 1, 0, 0]' : 0.26699}", "{'[2, 0, 1, 3, 0, 6, 0, 0, 20, 10, 0, 20, 1, 1, 0, 1, 0, 0]' : 0.266132}", "{'[2, 0, 1, 3, 0, 6, 0, 0, 20, 10, 0, 20, 1, 1, 0, 1, 0, 0]' : 0.265606}", "{'[2, 0, 1, 3, 0, 6, 0, 0, 20, 10, 0, 20, 1, 1, 0, 1, 0, 0]' : 0.271358}", "{'[2, 0, 1, 3, 0, 6, 0, 0, 20, 10, 0, 20, 1, 1, 0, 1, 0, 0]' : 0.265722}", "{'[2, 0, 1, 3, 0, 6, 0, 0, 20, 10, 0, 20, 1, 1, 0, 1, 0, 0]' : 0.265967}", "{'[2, 0, 1, 3, 0, 6, 0, 0, 20, 10, 0, 20, 1, 1, 0, 1, 0, 0]' : 0.266231}", "{'[2, 0, 1, 3, 0, 6, 0, 0, 20, 10, 0, 20, 1, 1, 0, 1, 0, 0]' : 0.271268}", "{'[2, 0, 1, 3, 0, 6, 0, 0, 20, 10, 0, 20, 1, 1, 0, 1, 0, 0]' : 0.265625}", "{'[2, 0, 1, 3, 0, 6, 0, 0, 20, 10, 0, 20, 1, 1, 0, 1, 0, 0]' : 0.265852}", "{'[2, 0, 1, 3, 0, 6, 0, 0, 20, 10, 0, 20, 1, 1, 0, 1, 0, 0]' : 0.265887}", "{'[2, 0, 1, 3, 0, 6, 0, 0, 20, 10, 0, 20, 1, 1, 0, 1, 0, 0]' : 0.270977}", "{'[2, 0, 1, 3, 0, 6, 0, 0, 20, 10, 0, 20, 1, 1, 0, 1, 0, 0]' : 0.266089}", "{'[2, 0, 1, 3, 0, 6, 0, 0, 20, 10, 0, 20, 1, 1, 0, 1, 0, 0]' : 0.2658}", "{'[2, 0, 1, 3, 0, 6, 0, 0, 20, 10, 0, 20, 1, 1, 0, 1, 0, 0]' : 0.272299}", "{'[2, 0, 1, 3, 0, 6, 0, 0, 20, 10, 0, 20, 1, 1, 0, 1, 0, 0]' : 0.265741}", "{'[2, 0, 1, 3, 0, 6, 0, 0, 20, 10, 0, 20, 1, 1, 0, 1, 0, 0]' : 0.265825}", "{'[2, 0, 1, 3, 0, 6, 0, 0, 20, 10, 0, 20, 1, 1, 0, 1, 0, 0]' : 0.265704}", "{'[2, 0, 1, 3, 0, 6, 0, 0, 20, 10, 0, 20, 1, 1, 0, 1, 0, 0]' : 0.270889}", "{'[2, 0, 1, 3, 0, 6, 0, 0, 20, 10, 0, 20, 1, 1, 0, 1, 0, 0]' : 0.265799}", "{'[2, 0, 1, 3, 0, 6, 0, 0, 20, 10, 0, 20, 1, 1, 0, 1, 0, 0]' : 0.266052}", "{'[2, 0, 1, 3, 0, 6, 0, 0, 20, 10, 0, 20, 1, 1, 0, 1, 0, 0]' : 0.266399}", "{'[2, 0, 1, 3, 0, 6, 0, 0, 20, 10, 0, 20, 1, 1, 0, 1, 0, 0]' : 0.270749}", "{'[2, 0, 1, 3, 0, 6, 0, 0, 20, 10, 0, 20, 1, 1, 0, 1, 0, 0]' : 0.265633}", "{'[2, 0, 1, 3, 0, 6, 0, 0, 20, 10, 0, 20, 1, 1, 0, 1, 0, 0]' : 0.26607}"]
returning from 'run': {'[2, 0, 1, 3, 0, 6, 0, 0, 20, 10, 0, 20, 1, 1, 0, 1, 0, 0]': ([0.265534, 0.271864, 0.266068, 0.265648, 0.273258, 0.26699, 0.266132, 0.265606, 0.271358, 0.265722, 0.265967, 0.266231, 0.271268, 0.265625, 0.265852, 0.265887, 0.270977, 0.266089, 0.2658, 0.272299, 0.265741, 0.265825, 0.265704, 0.270889, 0.265799, 0.266052, 0.266399, 0.270749, 0.265633, 0.26607], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 1, 3, 0, 6, 0, 0, 20, 10, 0, 20, 1, 1, 0, 1, 0, 0]': ([0.265534, 0.271864, 0.266068, 0.265648, 0.273258, 0.26699, 0.266132, 0.265606, 0.271358, 0.265722, 0.265967, 0.266231, 0.271268, 0.265625, 0.265852, 0.265887, 0.270977, 0.266089, 0.2658, 0.272299, 0.265741, 0.265825, 0.265704, 0.270889, 0.265799, 0.266052, 0.266399, 0.270749, 0.265633, 0.26607], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		440
        Multiplications: 	180
        Divisions: 		0
        Logical: 		0
        Reads: 			952
        Writes: 		199
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest7.exe __orio_perftest7.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest7.exe  
Program Test Output: 
{'[6, 0, 0, 0, 4, 0, 0, 0, 28, 1, 27, 0, 0, 0, 0, 1, 1, 1]' : 0.365618}
{'[6, 0, 0, 0, 4, 0, 0, 0, 28, 1, 27, 0, 0, 0, 0, 1, 1, 1]' : 0.366009}
{'[6, 0, 0, 0, 4, 0, 0, 0, 28, 1, 27, 0, 0, 0, 0, 1, 1, 1]' : 0.36576}
{'[6, 0, 0, 0, 4, 0, 0, 0, 28, 1, 27, 0, 0, 0, 0, 1, 1, 1]' : 0.365677}
{'[6, 0, 0, 0, 4, 0, 0, 0, 28, 1, 27, 0, 0, 0, 0, 1, 1, 1]' : 0.36578}
{'[6, 0, 0, 0, 4, 0, 0, 0, 28, 1, 27, 0, 0, 0, 0, 1, 1, 1]' : 0.367187}
{'[6, 0, 0, 0, 4, 0, 0, 0, 28, 1, 27, 0, 0, 0, 0, 1, 1, 1]' : 0.365845}
{'[6, 0, 0, 0, 4, 0, 0, 0, 28, 1, 27, 0, 0, 0, 0, 1, 1, 1]' : 0.366362}
{'[6, 0, 0, 0, 4, 0, 0, 0, 28, 1, 27, 0, 0, 0, 0, 1, 1, 1]' : 0.365881}
{'[6, 0, 0, 0, 4, 0, 0, 0, 28, 1, 27, 0, 0, 0, 0, 1, 1, 1]' : 0.365708}
{'[6, 0, 0, 0, 4, 0, 0, 0, 28, 1, 27, 0, 0, 0, 0, 1, 1, 1]' : 0.365274}
{'[6, 0, 0, 0, 4, 0, 0, 0, 28, 1, 27, 0, 0, 0, 0, 1, 1, 1]' : 0.365956}
{'[6, 0, 0, 0, 4, 0, 0, 0, 28, 1, 27, 0, 0, 0, 0, 1, 1, 1]' : 0.365348}
{'[6, 0, 0, 0, 4, 0, 0, 0, 28, 1, 27, 0, 0, 0, 0, 1, 1, 1]' : 0.365061}
{'[6, 0, 0, 0, 4, 0, 0, 0, 28, 1, 27, 0, 0, 0, 0, 1, 1, 1]' : 0.365147}
{'[6, 0, 0, 0, 4, 0, 0, 0, 28, 1, 27, 0, 0, 0, 0, 1, 1, 1]' : 0.365542}
{'[6, 0, 0, 0, 4, 0, 0, 0, 28, 1, 27, 0, 0, 0, 0, 1, 1, 1]' : 0.365766}
{'[6, 0, 0, 0, 4, 0, 0, 0, 28, 1, 27, 0, 0, 0, 0, 1, 1, 1]' : 0.365343}
{'[6, 0, 0, 0, 4, 0, 0, 0, 28, 1, 27, 0, 0, 0, 0, 1, 1, 1]' : 0.365101}
{'[6, 0, 0, 0, 4, 0, 0, 0, 28, 1, 27, 0, 0, 0, 0, 1, 1, 1]' : 0.365152}
{'[6, 0, 0, 0, 4, 0, 0, 0, 28, 1, 27, 0, 0, 0, 0, 1, 1, 1]' : 0.364928}
{'[6, 0, 0, 0, 4, 0, 0, 0, 28, 1, 27, 0, 0, 0, 0, 1, 1, 1]' : 0.365166}
{'[6, 0, 0, 0, 4, 0, 0, 0, 28, 1, 27, 0, 0, 0, 0, 1, 1, 1]' : 0.366311}
{'[6, 0, 0, 0, 4, 0, 0, 0, 28, 1, 27, 0, 0, 0, 0, 1, 1, 1]' : 0.365776}
{'[6, 0, 0, 0, 4, 0, 0, 0, 28, 1, 27, 0, 0, 0, 0, 1, 1, 1]' : 0.36561}
{'[6, 0, 0, 0, 4, 0, 0, 0, 28, 1, 27, 0, 0, 0, 0, 1, 1, 1]' : 0.365936}
{'[6, 0, 0, 0, 4, 0, 0, 0, 28, 1, 27, 0, 0, 0, 0, 1, 1, 1]' : 0.366218}
{'[6, 0, 0, 0, 4, 0, 0, 0, 28, 1, 27, 0, 0, 0, 0, 1, 1, 1]' : 0.36562}
{'[6, 0, 0, 0, 4, 0, 0, 0, 28, 1, 27, 0, 0, 0, 0, 1, 1, 1]' : 0.36535}
{'[6, 0, 0, 0, 4, 0, 0, 0, 28, 1, 27, 0, 0, 0, 0, 1, 1, 1]' : 0.36505}

out:
 ["{'[6, 0, 0, 0, 4, 0, 0, 0, 28, 1, 27, 0, 0, 0, 0, 1, 1, 1]' : 0.365618}", "{'[6, 0, 0, 0, 4, 0, 0, 0, 28, 1, 27, 0, 0, 0, 0, 1, 1, 1]' : 0.366009}", "{'[6, 0, 0, 0, 4, 0, 0, 0, 28, 1, 27, 0, 0, 0, 0, 1, 1, 1]' : 0.36576}", "{'[6, 0, 0, 0, 4, 0, 0, 0, 28, 1, 27, 0, 0, 0, 0, 1, 1, 1]' : 0.365677}", "{'[6, 0, 0, 0, 4, 0, 0, 0, 28, 1, 27, 0, 0, 0, 0, 1, 1, 1]' : 0.36578}", "{'[6, 0, 0, 0, 4, 0, 0, 0, 28, 1, 27, 0, 0, 0, 0, 1, 1, 1]' : 0.367187}", "{'[6, 0, 0, 0, 4, 0, 0, 0, 28, 1, 27, 0, 0, 0, 0, 1, 1, 1]' : 0.365845}", "{'[6, 0, 0, 0, 4, 0, 0, 0, 28, 1, 27, 0, 0, 0, 0, 1, 1, 1]' : 0.366362}", "{'[6, 0, 0, 0, 4, 0, 0, 0, 28, 1, 27, 0, 0, 0, 0, 1, 1, 1]' : 0.365881}", "{'[6, 0, 0, 0, 4, 0, 0, 0, 28, 1, 27, 0, 0, 0, 0, 1, 1, 1]' : 0.365708}", "{'[6, 0, 0, 0, 4, 0, 0, 0, 28, 1, 27, 0, 0, 0, 0, 1, 1, 1]' : 0.365274}", "{'[6, 0, 0, 0, 4, 0, 0, 0, 28, 1, 27, 0, 0, 0, 0, 1, 1, 1]' : 0.365956}", "{'[6, 0, 0, 0, 4, 0, 0, 0, 28, 1, 27, 0, 0, 0, 0, 1, 1, 1]' : 0.365348}", "{'[6, 0, 0, 0, 4, 0, 0, 0, 28, 1, 27, 0, 0, 0, 0, 1, 1, 1]' : 0.365061}", "{'[6, 0, 0, 0, 4, 0, 0, 0, 28, 1, 27, 0, 0, 0, 0, 1, 1, 1]' : 0.365147}", "{'[6, 0, 0, 0, 4, 0, 0, 0, 28, 1, 27, 0, 0, 0, 0, 1, 1, 1]' : 0.365542}", "{'[6, 0, 0, 0, 4, 0, 0, 0, 28, 1, 27, 0, 0, 0, 0, 1, 1, 1]' : 0.365766}", "{'[6, 0, 0, 0, 4, 0, 0, 0, 28, 1, 27, 0, 0, 0, 0, 1, 1, 1]' : 0.365343}", "{'[6, 0, 0, 0, 4, 0, 0, 0, 28, 1, 27, 0, 0, 0, 0, 1, 1, 1]' : 0.365101}", "{'[6, 0, 0, 0, 4, 0, 0, 0, 28, 1, 27, 0, 0, 0, 0, 1, 1, 1]' : 0.365152}", "{'[6, 0, 0, 0, 4, 0, 0, 0, 28, 1, 27, 0, 0, 0, 0, 1, 1, 1]' : 0.364928}", "{'[6, 0, 0, 0, 4, 0, 0, 0, 28, 1, 27, 0, 0, 0, 0, 1, 1, 1]' : 0.365166}", "{'[6, 0, 0, 0, 4, 0, 0, 0, 28, 1, 27, 0, 0, 0, 0, 1, 1, 1]' : 0.366311}", "{'[6, 0, 0, 0, 4, 0, 0, 0, 28, 1, 27, 0, 0, 0, 0, 1, 1, 1]' : 0.365776}", "{'[6, 0, 0, 0, 4, 0, 0, 0, 28, 1, 27, 0, 0, 0, 0, 1, 1, 1]' : 0.36561}", "{'[6, 0, 0, 0, 4, 0, 0, 0, 28, 1, 27, 0, 0, 0, 0, 1, 1, 1]' : 0.365936}", "{'[6, 0, 0, 0, 4, 0, 0, 0, 28, 1, 27, 0, 0, 0, 0, 1, 1, 1]' : 0.366218}", "{'[6, 0, 0, 0, 4, 0, 0, 0, 28, 1, 27, 0, 0, 0, 0, 1, 1, 1]' : 0.36562}", "{'[6, 0, 0, 0, 4, 0, 0, 0, 28, 1, 27, 0, 0, 0, 0, 1, 1, 1]' : 0.36535}", "{'[6, 0, 0, 0, 4, 0, 0, 0, 28, 1, 27, 0, 0, 0, 0, 1, 1, 1]' : 0.36505}"]
returning from 'run': {'[6, 0, 0, 0, 4, 0, 0, 0, 28, 1, 27, 0, 0, 0, 0, 1, 1, 1]': ([0.365618, 0.366009, 0.36576, 0.365677, 0.36578, 0.367187, 0.365845, 0.366362, 0.365881, 0.365708, 0.365274, 0.365956, 0.365348, 0.365061, 0.365147, 0.365542, 0.365766, 0.365343, 0.365101, 0.365152, 0.364928, 0.365166, 0.366311, 0.365776, 0.36561, 0.365936, 0.366218, 0.36562, 0.36535, 0.36505], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 0, 0, 4, 0, 0, 0, 28, 1, 27, 0, 0, 0, 0, 1, 1, 1]': ([0.365618, 0.366009, 0.36576, 0.365677, 0.36578, 0.367187, 0.365845, 0.366362, 0.365881, 0.365708, 0.365274, 0.365956, 0.365348, 0.365061, 0.365147, 0.365542, 0.365766, 0.365343, 0.365101, 0.365152, 0.364928, 0.365166, 0.366311, 0.365776, 0.36561, 0.365936, 0.366218, 0.36562, 0.36535, 0.36505], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	57
        Max loop nest depth: 	5
        Additions: 		1699
        Multiplications: 	440
        Divisions: 		0
        Logical: 		0
        Reads: 			2924
        Writes: 		369
        Comparisons:		57
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest8.exe __orio_perftest8.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest8.exe  
Program Test Output: 
{'[0, 1, 3, 3, 1, 0, 1, 0, 4, 10, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.538493}
{'[0, 1, 3, 3, 1, 0, 1, 0, 4, 10, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.530803}
{'[0, 1, 3, 3, 1, 0, 1, 0, 4, 10, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.531112}
{'[0, 1, 3, 3, 1, 0, 1, 0, 4, 10, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.531394}
{'[0, 1, 3, 3, 1, 0, 1, 0, 4, 10, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.531244}
{'[0, 1, 3, 3, 1, 0, 1, 0, 4, 10, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.532703}
{'[0, 1, 3, 3, 1, 0, 1, 0, 4, 10, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.530498}
{'[0, 1, 3, 3, 1, 0, 1, 0, 4, 10, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.531118}
{'[0, 1, 3, 3, 1, 0, 1, 0, 4, 10, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.531163}
{'[0, 1, 3, 3, 1, 0, 1, 0, 4, 10, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.531339}
{'[0, 1, 3, 3, 1, 0, 1, 0, 4, 10, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.530882}
{'[0, 1, 3, 3, 1, 0, 1, 0, 4, 10, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.531023}
{'[0, 1, 3, 3, 1, 0, 1, 0, 4, 10, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.531837}
{'[0, 1, 3, 3, 1, 0, 1, 0, 4, 10, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.532043}
{'[0, 1, 3, 3, 1, 0, 1, 0, 4, 10, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.532725}
{'[0, 1, 3, 3, 1, 0, 1, 0, 4, 10, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.530734}
{'[0, 1, 3, 3, 1, 0, 1, 0, 4, 10, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.531092}
{'[0, 1, 3, 3, 1, 0, 1, 0, 4, 10, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.530506}
{'[0, 1, 3, 3, 1, 0, 1, 0, 4, 10, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.532046}
{'[0, 1, 3, 3, 1, 0, 1, 0, 4, 10, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.530844}
{'[0, 1, 3, 3, 1, 0, 1, 0, 4, 10, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.532338}
{'[0, 1, 3, 3, 1, 0, 1, 0, 4, 10, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.531368}
{'[0, 1, 3, 3, 1, 0, 1, 0, 4, 10, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.531015}
{'[0, 1, 3, 3, 1, 0, 1, 0, 4, 10, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.531219}
{'[0, 1, 3, 3, 1, 0, 1, 0, 4, 10, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.531511}
{'[0, 1, 3, 3, 1, 0, 1, 0, 4, 10, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.533085}
{'[0, 1, 3, 3, 1, 0, 1, 0, 4, 10, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.532651}
{'[0, 1, 3, 3, 1, 0, 1, 0, 4, 10, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.531112}
{'[0, 1, 3, 3, 1, 0, 1, 0, 4, 10, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.531803}
{'[0, 1, 3, 3, 1, 0, 1, 0, 4, 10, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.530522}

out:
 ["{'[0, 1, 3, 3, 1, 0, 1, 0, 4, 10, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.538493}", "{'[0, 1, 3, 3, 1, 0, 1, 0, 4, 10, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.530803}", "{'[0, 1, 3, 3, 1, 0, 1, 0, 4, 10, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.531112}", "{'[0, 1, 3, 3, 1, 0, 1, 0, 4, 10, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.531394}", "{'[0, 1, 3, 3, 1, 0, 1, 0, 4, 10, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.531244}", "{'[0, 1, 3, 3, 1, 0, 1, 0, 4, 10, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.532703}", "{'[0, 1, 3, 3, 1, 0, 1, 0, 4, 10, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.530498}", "{'[0, 1, 3, 3, 1, 0, 1, 0, 4, 10, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.531118}", "{'[0, 1, 3, 3, 1, 0, 1, 0, 4, 10, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.531163}", "{'[0, 1, 3, 3, 1, 0, 1, 0, 4, 10, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.531339}", "{'[0, 1, 3, 3, 1, 0, 1, 0, 4, 10, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.530882}", "{'[0, 1, 3, 3, 1, 0, 1, 0, 4, 10, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.531023}", "{'[0, 1, 3, 3, 1, 0, 1, 0, 4, 10, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.531837}", "{'[0, 1, 3, 3, 1, 0, 1, 0, 4, 10, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.532043}", "{'[0, 1, 3, 3, 1, 0, 1, 0, 4, 10, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.532725}", "{'[0, 1, 3, 3, 1, 0, 1, 0, 4, 10, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.530734}", "{'[0, 1, 3, 3, 1, 0, 1, 0, 4, 10, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.531092}", "{'[0, 1, 3, 3, 1, 0, 1, 0, 4, 10, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.530506}", "{'[0, 1, 3, 3, 1, 0, 1, 0, 4, 10, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.532046}", "{'[0, 1, 3, 3, 1, 0, 1, 0, 4, 10, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.530844}", "{'[0, 1, 3, 3, 1, 0, 1, 0, 4, 10, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.532338}", "{'[0, 1, 3, 3, 1, 0, 1, 0, 4, 10, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.531368}", "{'[0, 1, 3, 3, 1, 0, 1, 0, 4, 10, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.531015}", "{'[0, 1, 3, 3, 1, 0, 1, 0, 4, 10, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.531219}", "{'[0, 1, 3, 3, 1, 0, 1, 0, 4, 10, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.531511}", "{'[0, 1, 3, 3, 1, 0, 1, 0, 4, 10, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.533085}", "{'[0, 1, 3, 3, 1, 0, 1, 0, 4, 10, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.532651}", "{'[0, 1, 3, 3, 1, 0, 1, 0, 4, 10, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.531112}", "{'[0, 1, 3, 3, 1, 0, 1, 0, 4, 10, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.531803}", "{'[0, 1, 3, 3, 1, 0, 1, 0, 4, 10, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.530522}"]
returning from 'run': {'[0, 1, 3, 3, 1, 0, 1, 0, 4, 10, 2, 0, 2, 0, 0, 0, 1, 0]': ([0.538493, 0.530803, 0.531112, 0.531394, 0.531244, 0.532703, 0.530498, 0.531118, 0.531163, 0.531339, 0.530882, 0.531023, 0.531837, 0.532043, 0.532725, 0.530734, 0.531092, 0.530506, 0.532046, 0.530844, 0.532338, 0.531368, 0.531015, 0.531219, 0.531511, 0.533085, 0.532651, 0.531112, 0.531803, 0.530522], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 3, 3, 1, 0, 1, 0, 4, 10, 2, 0, 2, 0, 0, 0, 1, 0]': ([0.538493, 0.530803, 0.531112, 0.531394, 0.531244, 0.532703, 0.530498, 0.531118, 0.531163, 0.531339, 0.530882, 0.531023, 0.531837, 0.532043, 0.532725, 0.530734, 0.531092, 0.530506, 0.532046, 0.530844, 0.532338, 0.531368, 0.531015, 0.531219, 0.531511, 0.533085, 0.532651, 0.531112, 0.531803, 0.530522], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		1176
        Multiplications: 	288
        Divisions: 		0
        Logical: 		0
        Reads: 			1787
        Writes: 		185
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest9.exe __orio_perftest9.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest9.exe  
Program Test Output: 
{'[0, 4, 5, 0, 5, 0, 1, 1, 4, 16, 0, 8, 1, 1, 0, 0, 1, 1]' : 0.253976}
{'[0, 4, 5, 0, 5, 0, 1, 1, 4, 16, 0, 8, 1, 1, 0, 0, 1, 1]' : 0.252969}
{'[0, 4, 5, 0, 5, 0, 1, 1, 4, 16, 0, 8, 1, 1, 0, 0, 1, 1]' : 0.252542}
{'[0, 4, 5, 0, 5, 0, 1, 1, 4, 16, 0, 8, 1, 1, 0, 0, 1, 1]' : 0.252242}
{'[0, 4, 5, 0, 5, 0, 1, 1, 4, 16, 0, 8, 1, 1, 0, 0, 1, 1]' : 0.253141}
{'[0, 4, 5, 0, 5, 0, 1, 1, 4, 16, 0, 8, 1, 1, 0, 0, 1, 1]' : 0.252664}
{'[0, 4, 5, 0, 5, 0, 1, 1, 4, 16, 0, 8, 1, 1, 0, 0, 1, 1]' : 0.25339}
{'[0, 4, 5, 0, 5, 0, 1, 1, 4, 16, 0, 8, 1, 1, 0, 0, 1, 1]' : 0.25298}
{'[0, 4, 5, 0, 5, 0, 1, 1, 4, 16, 0, 8, 1, 1, 0, 0, 1, 1]' : 0.252277}
{'[0, 4, 5, 0, 5, 0, 1, 1, 4, 16, 0, 8, 1, 1, 0, 0, 1, 1]' : 0.253054}
{'[0, 4, 5, 0, 5, 0, 1, 1, 4, 16, 0, 8, 1, 1, 0, 0, 1, 1]' : 0.252606}
{'[0, 4, 5, 0, 5, 0, 1, 1, 4, 16, 0, 8, 1, 1, 0, 0, 1, 1]' : 0.253807}
{'[0, 4, 5, 0, 5, 0, 1, 1, 4, 16, 0, 8, 1, 1, 0, 0, 1, 1]' : 0.253105}
{'[0, 4, 5, 0, 5, 0, 1, 1, 4, 16, 0, 8, 1, 1, 0, 0, 1, 1]' : 0.25184}
{'[0, 4, 5, 0, 5, 0, 1, 1, 4, 16, 0, 8, 1, 1, 0, 0, 1, 1]' : 0.252095}
{'[0, 4, 5, 0, 5, 0, 1, 1, 4, 16, 0, 8, 1, 1, 0, 0, 1, 1]' : 0.253139}
{'[0, 4, 5, 0, 5, 0, 1, 1, 4, 16, 0, 8, 1, 1, 0, 0, 1, 1]' : 0.252131}
{'[0, 4, 5, 0, 5, 0, 1, 1, 4, 16, 0, 8, 1, 1, 0, 0, 1, 1]' : 0.252555}
{'[0, 4, 5, 0, 5, 0, 1, 1, 4, 16, 0, 8, 1, 1, 0, 0, 1, 1]' : 0.253871}
{'[0, 4, 5, 0, 5, 0, 1, 1, 4, 16, 0, 8, 1, 1, 0, 0, 1, 1]' : 0.253145}
{'[0, 4, 5, 0, 5, 0, 1, 1, 4, 16, 0, 8, 1, 1, 0, 0, 1, 1]' : 0.252603}
{'[0, 4, 5, 0, 5, 0, 1, 1, 4, 16, 0, 8, 1, 1, 0, 0, 1, 1]' : 0.252477}
{'[0, 4, 5, 0, 5, 0, 1, 1, 4, 16, 0, 8, 1, 1, 0, 0, 1, 1]' : 0.253384}
{'[0, 4, 5, 0, 5, 0, 1, 1, 4, 16, 0, 8, 1, 1, 0, 0, 1, 1]' : 0.253189}
{'[0, 4, 5, 0, 5, 0, 1, 1, 4, 16, 0, 8, 1, 1, 0, 0, 1, 1]' : 0.253311}
{'[0, 4, 5, 0, 5, 0, 1, 1, 4, 16, 0, 8, 1, 1, 0, 0, 1, 1]' : 0.258532}
{'[0, 4, 5, 0, 5, 0, 1, 1, 4, 16, 0, 8, 1, 1, 0, 0, 1, 1]' : 0.253201}
{'[0, 4, 5, 0, 5, 0, 1, 1, 4, 16, 0, 8, 1, 1, 0, 0, 1, 1]' : 0.252217}
{'[0, 4, 5, 0, 5, 0, 1, 1, 4, 16, 0, 8, 1, 1, 0, 0, 1, 1]' : 0.254065}
{'[0, 4, 5, 0, 5, 0, 1, 1, 4, 16, 0, 8, 1, 1, 0, 0, 1, 1]' : 0.252074}

out:
 ["{'[0, 4, 5, 0, 5, 0, 1, 1, 4, 16, 0, 8, 1, 1, 0, 0, 1, 1]' : 0.253976}", "{'[0, 4, 5, 0, 5, 0, 1, 1, 4, 16, 0, 8, 1, 1, 0, 0, 1, 1]' : 0.252969}", "{'[0, 4, 5, 0, 5, 0, 1, 1, 4, 16, 0, 8, 1, 1, 0, 0, 1, 1]' : 0.252542}", "{'[0, 4, 5, 0, 5, 0, 1, 1, 4, 16, 0, 8, 1, 1, 0, 0, 1, 1]' : 0.252242}", "{'[0, 4, 5, 0, 5, 0, 1, 1, 4, 16, 0, 8, 1, 1, 0, 0, 1, 1]' : 0.253141}", "{'[0, 4, 5, 0, 5, 0, 1, 1, 4, 16, 0, 8, 1, 1, 0, 0, 1, 1]' : 0.252664}", "{'[0, 4, 5, 0, 5, 0, 1, 1, 4, 16, 0, 8, 1, 1, 0, 0, 1, 1]' : 0.25339}", "{'[0, 4, 5, 0, 5, 0, 1, 1, 4, 16, 0, 8, 1, 1, 0, 0, 1, 1]' : 0.25298}", "{'[0, 4, 5, 0, 5, 0, 1, 1, 4, 16, 0, 8, 1, 1, 0, 0, 1, 1]' : 0.252277}", "{'[0, 4, 5, 0, 5, 0, 1, 1, 4, 16, 0, 8, 1, 1, 0, 0, 1, 1]' : 0.253054}", "{'[0, 4, 5, 0, 5, 0, 1, 1, 4, 16, 0, 8, 1, 1, 0, 0, 1, 1]' : 0.252606}", "{'[0, 4, 5, 0, 5, 0, 1, 1, 4, 16, 0, 8, 1, 1, 0, 0, 1, 1]' : 0.253807}", "{'[0, 4, 5, 0, 5, 0, 1, 1, 4, 16, 0, 8, 1, 1, 0, 0, 1, 1]' : 0.253105}", "{'[0, 4, 5, 0, 5, 0, 1, 1, 4, 16, 0, 8, 1, 1, 0, 0, 1, 1]' : 0.25184}", "{'[0, 4, 5, 0, 5, 0, 1, 1, 4, 16, 0, 8, 1, 1, 0, 0, 1, 1]' : 0.252095}", "{'[0, 4, 5, 0, 5, 0, 1, 1, 4, 16, 0, 8, 1, 1, 0, 0, 1, 1]' : 0.253139}", "{'[0, 4, 5, 0, 5, 0, 1, 1, 4, 16, 0, 8, 1, 1, 0, 0, 1, 1]' : 0.252131}", "{'[0, 4, 5, 0, 5, 0, 1, 1, 4, 16, 0, 8, 1, 1, 0, 0, 1, 1]' : 0.252555}", "{'[0, 4, 5, 0, 5, 0, 1, 1, 4, 16, 0, 8, 1, 1, 0, 0, 1, 1]' : 0.253871}", "{'[0, 4, 5, 0, 5, 0, 1, 1, 4, 16, 0, 8, 1, 1, 0, 0, 1, 1]' : 0.253145}", "{'[0, 4, 5, 0, 5, 0, 1, 1, 4, 16, 0, 8, 1, 1, 0, 0, 1, 1]' : 0.252603}", "{'[0, 4, 5, 0, 5, 0, 1, 1, 4, 16, 0, 8, 1, 1, 0, 0, 1, 1]' : 0.252477}", "{'[0, 4, 5, 0, 5, 0, 1, 1, 4, 16, 0, 8, 1, 1, 0, 0, 1, 1]' : 0.253384}", "{'[0, 4, 5, 0, 5, 0, 1, 1, 4, 16, 0, 8, 1, 1, 0, 0, 1, 1]' : 0.253189}", "{'[0, 4, 5, 0, 5, 0, 1, 1, 4, 16, 0, 8, 1, 1, 0, 0, 1, 1]' : 0.253311}", "{'[0, 4, 5, 0, 5, 0, 1, 1, 4, 16, 0, 8, 1, 1, 0, 0, 1, 1]' : 0.258532}", "{'[0, 4, 5, 0, 5, 0, 1, 1, 4, 16, 0, 8, 1, 1, 0, 0, 1, 1]' : 0.253201}", "{'[0, 4, 5, 0, 5, 0, 1, 1, 4, 16, 0, 8, 1, 1, 0, 0, 1, 1]' : 0.252217}", "{'[0, 4, 5, 0, 5, 0, 1, 1, 4, 16, 0, 8, 1, 1, 0, 0, 1, 1]' : 0.254065}", "{'[0, 4, 5, 0, 5, 0, 1, 1, 4, 16, 0, 8, 1, 1, 0, 0, 1, 1]' : 0.252074}"]
returning from 'run': {'[0, 4, 5, 0, 5, 0, 1, 1, 4, 16, 0, 8, 1, 1, 0, 0, 1, 1]': ([0.253976, 0.252969, 0.252542, 0.252242, 0.253141, 0.252664, 0.25339, 0.25298, 0.252277, 0.253054, 0.252606, 0.253807, 0.253105, 0.25184, 0.252095, 0.253139, 0.252131, 0.252555, 0.253871, 0.253145, 0.252603, 0.252477, 0.253384, 0.253189, 0.253311, 0.258532, 0.253201, 0.252217, 0.254065, 0.252074], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 4, 5, 0, 5, 0, 1, 1, 4, 16, 0, 8, 1, 1, 0, 0, 1, 1]': ([0.253976, 0.252969, 0.252542, 0.252242, 0.253141, 0.252664, 0.25339, 0.25298, 0.252277, 0.253054, 0.252606, 0.253807, 0.253105, 0.25184, 0.252095, 0.253139, 0.252131, 0.252555, 0.253871, 0.253145, 0.252603, 0.252477, 0.253384, 0.253189, 0.253311, 0.258532, 0.253201, 0.252217, 0.254065, 0.252074], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	4
        Additions: 		1161
        Multiplications: 	468
        Divisions: 		0
        Logical: 		0
        Reads: 			2303
        Writes: 		418
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest10.exe __orio_perftest10.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest10.exe  
Program Test Output: 
{'[0, 0, 6, 4, 3, 0, 1, 1, 10, 0, 0, 23, 1, 0, 0, 1, 1, 0]' : 0.208725}
{'[0, 0, 6, 4, 3, 0, 1, 1, 10, 0, 0, 23, 1, 0, 0, 1, 1, 0]' : 0.215671}
{'[0, 0, 6, 4, 3, 0, 1, 1, 10, 0, 0, 23, 1, 0, 0, 1, 1, 0]' : 0.208304}
{'[0, 0, 6, 4, 3, 0, 1, 1, 10, 0, 0, 23, 1, 0, 0, 1, 1, 0]' : 0.207546}
{'[0, 0, 6, 4, 3, 0, 1, 1, 10, 0, 0, 23, 1, 0, 0, 1, 1, 0]' : 0.207393}
{'[0, 0, 6, 4, 3, 0, 1, 1, 10, 0, 0, 23, 1, 0, 0, 1, 1, 0]' : 0.20719}
{'[0, 0, 6, 4, 3, 0, 1, 1, 10, 0, 0, 23, 1, 0, 0, 1, 1, 0]' : 0.208807}
{'[0, 0, 6, 4, 3, 0, 1, 1, 10, 0, 0, 23, 1, 0, 0, 1, 1, 0]' : 0.207203}
{'[0, 0, 6, 4, 3, 0, 1, 1, 10, 0, 0, 23, 1, 0, 0, 1, 1, 0]' : 0.205786}
{'[0, 0, 6, 4, 3, 0, 1, 1, 10, 0, 0, 23, 1, 0, 0, 1, 1, 0]' : 0.209262}
{'[0, 0, 6, 4, 3, 0, 1, 1, 10, 0, 0, 23, 1, 0, 0, 1, 1, 0]' : 0.208096}
{'[0, 0, 6, 4, 3, 0, 1, 1, 10, 0, 0, 23, 1, 0, 0, 1, 1, 0]' : 0.207238}
{'[0, 0, 6, 4, 3, 0, 1, 1, 10, 0, 0, 23, 1, 0, 0, 1, 1, 0]' : 0.209278}
{'[0, 0, 6, 4, 3, 0, 1, 1, 10, 0, 0, 23, 1, 0, 0, 1, 1, 0]' : 0.208977}
{'[0, 0, 6, 4, 3, 0, 1, 1, 10, 0, 0, 23, 1, 0, 0, 1, 1, 0]' : 0.208109}
{'[0, 0, 6, 4, 3, 0, 1, 1, 10, 0, 0, 23, 1, 0, 0, 1, 1, 0]' : 0.210303}
{'[0, 0, 6, 4, 3, 0, 1, 1, 10, 0, 0, 23, 1, 0, 0, 1, 1, 0]' : 0.210354}
{'[0, 0, 6, 4, 3, 0, 1, 1, 10, 0, 0, 23, 1, 0, 0, 1, 1, 0]' : 0.232175}
{'[0, 0, 6, 4, 3, 0, 1, 1, 10, 0, 0, 23, 1, 0, 0, 1, 1, 0]' : 0.207501}
{'[0, 0, 6, 4, 3, 0, 1, 1, 10, 0, 0, 23, 1, 0, 0, 1, 1, 0]' : 0.20783}
{'[0, 0, 6, 4, 3, 0, 1, 1, 10, 0, 0, 23, 1, 0, 0, 1, 1, 0]' : 0.20747}
{'[0, 0, 6, 4, 3, 0, 1, 1, 10, 0, 0, 23, 1, 0, 0, 1, 1, 0]' : 0.221268}
{'[0, 0, 6, 4, 3, 0, 1, 1, 10, 0, 0, 23, 1, 0, 0, 1, 1, 0]' : 0.211924}
{'[0, 0, 6, 4, 3, 0, 1, 1, 10, 0, 0, 23, 1, 0, 0, 1, 1, 0]' : 0.207877}
{'[0, 0, 6, 4, 3, 0, 1, 1, 10, 0, 0, 23, 1, 0, 0, 1, 1, 0]' : 0.207737}
{'[0, 0, 6, 4, 3, 0, 1, 1, 10, 0, 0, 23, 1, 0, 0, 1, 1, 0]' : 0.207987}
{'[0, 0, 6, 4, 3, 0, 1, 1, 10, 0, 0, 23, 1, 0, 0, 1, 1, 0]' : 0.211857}
{'[0, 0, 6, 4, 3, 0, 1, 1, 10, 0, 0, 23, 1, 0, 0, 1, 1, 0]' : 0.208559}
{'[0, 0, 6, 4, 3, 0, 1, 1, 10, 0, 0, 23, 1, 0, 0, 1, 1, 0]' : 0.209126}
{'[0, 0, 6, 4, 3, 0, 1, 1, 10, 0, 0, 23, 1, 0, 0, 1, 1, 0]' : 0.206851}

out:
 ["{'[0, 0, 6, 4, 3, 0, 1, 1, 10, 0, 0, 23, 1, 0, 0, 1, 1, 0]' : 0.208725}", "{'[0, 0, 6, 4, 3, 0, 1, 1, 10, 0, 0, 23, 1, 0, 0, 1, 1, 0]' : 0.215671}", "{'[0, 0, 6, 4, 3, 0, 1, 1, 10, 0, 0, 23, 1, 0, 0, 1, 1, 0]' : 0.208304}", "{'[0, 0, 6, 4, 3, 0, 1, 1, 10, 0, 0, 23, 1, 0, 0, 1, 1, 0]' : 0.207546}", "{'[0, 0, 6, 4, 3, 0, 1, 1, 10, 0, 0, 23, 1, 0, 0, 1, 1, 0]' : 0.207393}", "{'[0, 0, 6, 4, 3, 0, 1, 1, 10, 0, 0, 23, 1, 0, 0, 1, 1, 0]' : 0.20719}", "{'[0, 0, 6, 4, 3, 0, 1, 1, 10, 0, 0, 23, 1, 0, 0, 1, 1, 0]' : 0.208807}", "{'[0, 0, 6, 4, 3, 0, 1, 1, 10, 0, 0, 23, 1, 0, 0, 1, 1, 0]' : 0.207203}", "{'[0, 0, 6, 4, 3, 0, 1, 1, 10, 0, 0, 23, 1, 0, 0, 1, 1, 0]' : 0.205786}", "{'[0, 0, 6, 4, 3, 0, 1, 1, 10, 0, 0, 23, 1, 0, 0, 1, 1, 0]' : 0.209262}", "{'[0, 0, 6, 4, 3, 0, 1, 1, 10, 0, 0, 23, 1, 0, 0, 1, 1, 0]' : 0.208096}", "{'[0, 0, 6, 4, 3, 0, 1, 1, 10, 0, 0, 23, 1, 0, 0, 1, 1, 0]' : 0.207238}", "{'[0, 0, 6, 4, 3, 0, 1, 1, 10, 0, 0, 23, 1, 0, 0, 1, 1, 0]' : 0.209278}", "{'[0, 0, 6, 4, 3, 0, 1, 1, 10, 0, 0, 23, 1, 0, 0, 1, 1, 0]' : 0.208977}", "{'[0, 0, 6, 4, 3, 0, 1, 1, 10, 0, 0, 23, 1, 0, 0, 1, 1, 0]' : 0.208109}", "{'[0, 0, 6, 4, 3, 0, 1, 1, 10, 0, 0, 23, 1, 0, 0, 1, 1, 0]' : 0.210303}", "{'[0, 0, 6, 4, 3, 0, 1, 1, 10, 0, 0, 23, 1, 0, 0, 1, 1, 0]' : 0.210354}", "{'[0, 0, 6, 4, 3, 0, 1, 1, 10, 0, 0, 23, 1, 0, 0, 1, 1, 0]' : 0.232175}", "{'[0, 0, 6, 4, 3, 0, 1, 1, 10, 0, 0, 23, 1, 0, 0, 1, 1, 0]' : 0.207501}", "{'[0, 0, 6, 4, 3, 0, 1, 1, 10, 0, 0, 23, 1, 0, 0, 1, 1, 0]' : 0.20783}", "{'[0, 0, 6, 4, 3, 0, 1, 1, 10, 0, 0, 23, 1, 0, 0, 1, 1, 0]' : 0.20747}", "{'[0, 0, 6, 4, 3, 0, 1, 1, 10, 0, 0, 23, 1, 0, 0, 1, 1, 0]' : 0.221268}", "{'[0, 0, 6, 4, 3, 0, 1, 1, 10, 0, 0, 23, 1, 0, 0, 1, 1, 0]' : 0.211924}", "{'[0, 0, 6, 4, 3, 0, 1, 1, 10, 0, 0, 23, 1, 0, 0, 1, 1, 0]' : 0.207877}", "{'[0, 0, 6, 4, 3, 0, 1, 1, 10, 0, 0, 23, 1, 0, 0, 1, 1, 0]' : 0.207737}", "{'[0, 0, 6, 4, 3, 0, 1, 1, 10, 0, 0, 23, 1, 0, 0, 1, 1, 0]' : 0.207987}", "{'[0, 0, 6, 4, 3, 0, 1, 1, 10, 0, 0, 23, 1, 0, 0, 1, 1, 0]' : 0.211857}", "{'[0, 0, 6, 4, 3, 0, 1, 1, 10, 0, 0, 23, 1, 0, 0, 1, 1, 0]' : 0.208559}", "{'[0, 0, 6, 4, 3, 0, 1, 1, 10, 0, 0, 23, 1, 0, 0, 1, 1, 0]' : 0.209126}", "{'[0, 0, 6, 4, 3, 0, 1, 1, 10, 0, 0, 23, 1, 0, 0, 1, 1, 0]' : 0.206851}"]
returning from 'run': {'[0, 0, 6, 4, 3, 0, 1, 1, 10, 0, 0, 23, 1, 0, 0, 1, 1, 0]': ([0.208725, 0.215671, 0.208304, 0.207546, 0.207393, 0.20719, 0.208807, 0.207203, 0.205786, 0.209262, 0.208096, 0.207238, 0.209278, 0.208977, 0.208109, 0.210303, 0.210354, 0.232175, 0.207501, 0.20783, 0.20747, 0.221268, 0.211924, 0.207877, 0.207737, 0.207987, 0.211857, 0.208559, 0.209126, 0.206851], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 6, 4, 3, 0, 1, 1, 10, 0, 0, 23, 1, 0, 0, 1, 1, 0]': ([0.208725, 0.215671, 0.208304, 0.207546, 0.207393, 0.20719, 0.208807, 0.207203, 0.205786, 0.209262, 0.208096, 0.207238, 0.209278, 0.208977, 0.208109, 0.210303, 0.210354, 0.232175, 0.207501, 0.20783, 0.20747, 0.221268, 0.211924, 0.207877, 0.207737, 0.207987, 0.211857, 0.208559, 0.209126, 0.206851], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	6
        Additions: 		2493
        Multiplications: 	774
        Divisions: 		0
        Logical: 		0
        Reads: 			4053
        Writes: 		445
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest11.exe __orio_perftest11.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest11.exe  
Program Test Output: 
{'[6, 2, 6, 5, 6, 5, 0, 0, 0, 0, 24, 15, 1, 0, 0, 0, 1, 1]' : 0.42355}
{'[6, 2, 6, 5, 6, 5, 0, 0, 0, 0, 24, 15, 1, 0, 0, 0, 1, 1]' : 0.425631}
{'[6, 2, 6, 5, 6, 5, 0, 0, 0, 0, 24, 15, 1, 0, 0, 0, 1, 1]' : 0.423967}
{'[6, 2, 6, 5, 6, 5, 0, 0, 0, 0, 24, 15, 1, 0, 0, 0, 1, 1]' : 0.424037}
{'[6, 2, 6, 5, 6, 5, 0, 0, 0, 0, 24, 15, 1, 0, 0, 0, 1, 1]' : 0.423547}
{'[6, 2, 6, 5, 6, 5, 0, 0, 0, 0, 24, 15, 1, 0, 0, 0, 1, 1]' : 0.423736}
{'[6, 2, 6, 5, 6, 5, 0, 0, 0, 0, 24, 15, 1, 0, 0, 0, 1, 1]' : 0.423806}
{'[6, 2, 6, 5, 6, 5, 0, 0, 0, 0, 24, 15, 1, 0, 0, 0, 1, 1]' : 0.424533}
{'[6, 2, 6, 5, 6, 5, 0, 0, 0, 0, 24, 15, 1, 0, 0, 0, 1, 1]' : 0.424628}
{'[6, 2, 6, 5, 6, 5, 0, 0, 0, 0, 24, 15, 1, 0, 0, 0, 1, 1]' : 0.423972}
{'[6, 2, 6, 5, 6, 5, 0, 0, 0, 0, 24, 15, 1, 0, 0, 0, 1, 1]' : 0.42407}
{'[6, 2, 6, 5, 6, 5, 0, 0, 0, 0, 24, 15, 1, 0, 0, 0, 1, 1]' : 0.424236}
{'[6, 2, 6, 5, 6, 5, 0, 0, 0, 0, 24, 15, 1, 0, 0, 0, 1, 1]' : 0.424802}
{'[6, 2, 6, 5, 6, 5, 0, 0, 0, 0, 24, 15, 1, 0, 0, 0, 1, 1]' : 0.425186}
{'[6, 2, 6, 5, 6, 5, 0, 0, 0, 0, 24, 15, 1, 0, 0, 0, 1, 1]' : 0.424122}
{'[6, 2, 6, 5, 6, 5, 0, 0, 0, 0, 24, 15, 1, 0, 0, 0, 1, 1]' : 0.424151}
{'[6, 2, 6, 5, 6, 5, 0, 0, 0, 0, 24, 15, 1, 0, 0, 0, 1, 1]' : 0.423893}
{'[6, 2, 6, 5, 6, 5, 0, 0, 0, 0, 24, 15, 1, 0, 0, 0, 1, 1]' : 0.424663}
{'[6, 2, 6, 5, 6, 5, 0, 0, 0, 0, 24, 15, 1, 0, 0, 0, 1, 1]' : 0.423281}
{'[6, 2, 6, 5, 6, 5, 0, 0, 0, 0, 24, 15, 1, 0, 0, 0, 1, 1]' : 0.424018}
{'[6, 2, 6, 5, 6, 5, 0, 0, 0, 0, 24, 15, 1, 0, 0, 0, 1, 1]' : 0.424179}
{'[6, 2, 6, 5, 6, 5, 0, 0, 0, 0, 24, 15, 1, 0, 0, 0, 1, 1]' : 0.423908}
{'[6, 2, 6, 5, 6, 5, 0, 0, 0, 0, 24, 15, 1, 0, 0, 0, 1, 1]' : 0.423668}
{'[6, 2, 6, 5, 6, 5, 0, 0, 0, 0, 24, 15, 1, 0, 0, 0, 1, 1]' : 0.424155}
{'[6, 2, 6, 5, 6, 5, 0, 0, 0, 0, 24, 15, 1, 0, 0, 0, 1, 1]' : 0.423351}
{'[6, 2, 6, 5, 6, 5, 0, 0, 0, 0, 24, 15, 1, 0, 0, 0, 1, 1]' : 0.422996}
{'[6, 2, 6, 5, 6, 5, 0, 0, 0, 0, 24, 15, 1, 0, 0, 0, 1, 1]' : 0.424391}
{'[6, 2, 6, 5, 6, 5, 0, 0, 0, 0, 24, 15, 1, 0, 0, 0, 1, 1]' : 0.425157}
{'[6, 2, 6, 5, 6, 5, 0, 0, 0, 0, 24, 15, 1, 0, 0, 0, 1, 1]' : 0.423703}
{'[6, 2, 6, 5, 6, 5, 0, 0, 0, 0, 24, 15, 1, 0, 0, 0, 1, 1]' : 0.423389}

out:
 ["{'[6, 2, 6, 5, 6, 5, 0, 0, 0, 0, 24, 15, 1, 0, 0, 0, 1, 1]' : 0.42355}", "{'[6, 2, 6, 5, 6, 5, 0, 0, 0, 0, 24, 15, 1, 0, 0, 0, 1, 1]' : 0.425631}", "{'[6, 2, 6, 5, 6, 5, 0, 0, 0, 0, 24, 15, 1, 0, 0, 0, 1, 1]' : 0.423967}", "{'[6, 2, 6, 5, 6, 5, 0, 0, 0, 0, 24, 15, 1, 0, 0, 0, 1, 1]' : 0.424037}", "{'[6, 2, 6, 5, 6, 5, 0, 0, 0, 0, 24, 15, 1, 0, 0, 0, 1, 1]' : 0.423547}", "{'[6, 2, 6, 5, 6, 5, 0, 0, 0, 0, 24, 15, 1, 0, 0, 0, 1, 1]' : 0.423736}", "{'[6, 2, 6, 5, 6, 5, 0, 0, 0, 0, 24, 15, 1, 0, 0, 0, 1, 1]' : 0.423806}", "{'[6, 2, 6, 5, 6, 5, 0, 0, 0, 0, 24, 15, 1, 0, 0, 0, 1, 1]' : 0.424533}", "{'[6, 2, 6, 5, 6, 5, 0, 0, 0, 0, 24, 15, 1, 0, 0, 0, 1, 1]' : 0.424628}", "{'[6, 2, 6, 5, 6, 5, 0, 0, 0, 0, 24, 15, 1, 0, 0, 0, 1, 1]' : 0.423972}", "{'[6, 2, 6, 5, 6, 5, 0, 0, 0, 0, 24, 15, 1, 0, 0, 0, 1, 1]' : 0.42407}", "{'[6, 2, 6, 5, 6, 5, 0, 0, 0, 0, 24, 15, 1, 0, 0, 0, 1, 1]' : 0.424236}", "{'[6, 2, 6, 5, 6, 5, 0, 0, 0, 0, 24, 15, 1, 0, 0, 0, 1, 1]' : 0.424802}", "{'[6, 2, 6, 5, 6, 5, 0, 0, 0, 0, 24, 15, 1, 0, 0, 0, 1, 1]' : 0.425186}", "{'[6, 2, 6, 5, 6, 5, 0, 0, 0, 0, 24, 15, 1, 0, 0, 0, 1, 1]' : 0.424122}", "{'[6, 2, 6, 5, 6, 5, 0, 0, 0, 0, 24, 15, 1, 0, 0, 0, 1, 1]' : 0.424151}", "{'[6, 2, 6, 5, 6, 5, 0, 0, 0, 0, 24, 15, 1, 0, 0, 0, 1, 1]' : 0.423893}", "{'[6, 2, 6, 5, 6, 5, 0, 0, 0, 0, 24, 15, 1, 0, 0, 0, 1, 1]' : 0.424663}", "{'[6, 2, 6, 5, 6, 5, 0, 0, 0, 0, 24, 15, 1, 0, 0, 0, 1, 1]' : 0.423281}", "{'[6, 2, 6, 5, 6, 5, 0, 0, 0, 0, 24, 15, 1, 0, 0, 0, 1, 1]' : 0.424018}", "{'[6, 2, 6, 5, 6, 5, 0, 0, 0, 0, 24, 15, 1, 0, 0, 0, 1, 1]' : 0.424179}", "{'[6, 2, 6, 5, 6, 5, 0, 0, 0, 0, 24, 15, 1, 0, 0, 0, 1, 1]' : 0.423908}", "{'[6, 2, 6, 5, 6, 5, 0, 0, 0, 0, 24, 15, 1, 0, 0, 0, 1, 1]' : 0.423668}", "{'[6, 2, 6, 5, 6, 5, 0, 0, 0, 0, 24, 15, 1, 0, 0, 0, 1, 1]' : 0.424155}", "{'[6, 2, 6, 5, 6, 5, 0, 0, 0, 0, 24, 15, 1, 0, 0, 0, 1, 1]' : 0.423351}", "{'[6, 2, 6, 5, 6, 5, 0, 0, 0, 0, 24, 15, 1, 0, 0, 0, 1, 1]' : 0.422996}", "{'[6, 2, 6, 5, 6, 5, 0, 0, 0, 0, 24, 15, 1, 0, 0, 0, 1, 1]' : 0.424391}", "{'[6, 2, 6, 5, 6, 5, 0, 0, 0, 0, 24, 15, 1, 0, 0, 0, 1, 1]' : 0.425157}", "{'[6, 2, 6, 5, 6, 5, 0, 0, 0, 0, 24, 15, 1, 0, 0, 0, 1, 1]' : 0.423703}", "{'[6, 2, 6, 5, 6, 5, 0, 0, 0, 0, 24, 15, 1, 0, 0, 0, 1, 1]' : 0.423389}"]
returning from 'run': {'[6, 2, 6, 5, 6, 5, 0, 0, 0, 0, 24, 15, 1, 0, 0, 0, 1, 1]': ([0.42355, 0.425631, 0.423967, 0.424037, 0.423547, 0.423736, 0.423806, 0.424533, 0.424628, 0.423972, 0.42407, 0.424236, 0.424802, 0.425186, 0.424122, 0.424151, 0.423893, 0.424663, 0.423281, 0.424018, 0.424179, 0.423908, 0.423668, 0.424155, 0.423351, 0.422996, 0.424391, 0.425157, 0.423703, 0.423389], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 2, 6, 5, 6, 5, 0, 0, 0, 0, 24, 15, 1, 0, 0, 0, 1, 1]': ([0.42355, 0.425631, 0.423967, 0.424037, 0.423547, 0.423736, 0.423806, 0.424533, 0.424628, 0.423972, 0.42407, 0.424236, 0.424802, 0.425186, 0.424122, 0.424151, 0.423893, 0.424663, 0.423281, 0.424018, 0.424179, 0.423908, 0.423668, 0.424155, 0.423351, 0.422996, 0.424391, 0.425157, 0.423703, 0.423389], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	74
        Max loop nest depth: 	5
        Additions: 		5995
        Multiplications: 	1320
        Divisions: 		0
        Logical: 		0
        Reads: 			8762
        Writes: 		894
        Comparisons:		74
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest12.exe __orio_perftest12.c timer_cpu.o -lm
orio.main.tuner.ptest_driver:  failed to compile the testing code: "gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest12.exe __orio_perftest12.c timer_cpu.o -lm"
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 129, in search

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 639, in searchBestCoord
    info("Starting DOPT-anova")

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 557, in dopt_anova
    fixed_factors,

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 504, in dopt_anova_step
    info("D-Efficiency Approximation: " + str(output.rx("Dea")[0]))

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 396, in measure_design
    # info("Testing candidate " + str(line + 1) + ": " + str(candidate))

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 335, in getPerfCosts

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 486, in run
    self.__build(perf_params=perf_params,coord=coord)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 285, in __build
    err('orio.main.tuner.ptest_driver:  failed to compile the testing code: "%s"' % cmd)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  the executable of the test code does not exist
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 129, in search

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 639, in searchBestCoord
    info("Starting DOPT-anova")

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 557, in dopt_anova
    fixed_factors,

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 504, in dopt_anova_step
    info("D-Efficiency Approximation: " + str(output.rx("Dea")[0]))

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 396, in measure_design
    # info("Testing candidate " + str(line + 1) + ": " + str(candidate))

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 335, in getPerfCosts

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 308, in __execute
    err('orio.main.tuner.ptest_driver:  the executable of the test code does not exist')

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

 running test:
	 ./__orio_perftest12.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest12.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest12.exe  ' returned non-zero exit status 127
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 129, in search

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 639, in searchBestCoord
    info("Starting DOPT-anova")

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 557, in dopt_anova
    fixed_factors,

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 504, in dopt_anova_step
    info("D-Efficiency Approximation: " + str(output.rx("Dea")[0]))

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 396, in measure_design
    # info("Testing candidate " + str(line + 1) + ": " + str(candidate))

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 335, in getPerfCosts

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest12.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 129, in search

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 639, in searchBestCoord
    info("Starting DOPT-anova")

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 557, in dopt_anova
    fixed_factors,

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 504, in dopt_anova_step
    info("D-Efficiency Approximation: " + str(output.rx("Dea")[0]))

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 396, in measure_design
    # info("Testing candidate " + str(line + 1) + ": " + str(candidate))

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 335, in getPerfCosts

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	6
        Additions: 		335
        Multiplications: 	96
        Divisions: 		0
        Logical: 		0
        Reads: 			742
        Writes: 		156
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest13.exe __orio_perftest13.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest13.exe  
Program Test Output: 
{'[4, 5, 5, 5, 0, 5, 1, 1, 0, 1, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.515491}
{'[4, 5, 5, 5, 0, 5, 1, 1, 0, 1, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.519228}
{'[4, 5, 5, 5, 0, 5, 1, 1, 0, 1, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.51543}
{'[4, 5, 5, 5, 0, 5, 1, 1, 0, 1, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.51586}
{'[4, 5, 5, 5, 0, 5, 1, 1, 0, 1, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.515785}
{'[4, 5, 5, 5, 0, 5, 1, 1, 0, 1, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.515849}
{'[4, 5, 5, 5, 0, 5, 1, 1, 0, 1, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.515019}
{'[4, 5, 5, 5, 0, 5, 1, 1, 0, 1, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.516181}
{'[4, 5, 5, 5, 0, 5, 1, 1, 0, 1, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.515619}
{'[4, 5, 5, 5, 0, 5, 1, 1, 0, 1, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.516676}
{'[4, 5, 5, 5, 0, 5, 1, 1, 0, 1, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.519605}
{'[4, 5, 5, 5, 0, 5, 1, 1, 0, 1, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.515252}
{'[4, 5, 5, 5, 0, 5, 1, 1, 0, 1, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.516258}
{'[4, 5, 5, 5, 0, 5, 1, 1, 0, 1, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.516046}
{'[4, 5, 5, 5, 0, 5, 1, 1, 0, 1, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.515776}
{'[4, 5, 5, 5, 0, 5, 1, 1, 0, 1, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.515865}
{'[4, 5, 5, 5, 0, 5, 1, 1, 0, 1, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.515508}
{'[4, 5, 5, 5, 0, 5, 1, 1, 0, 1, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.51562}
{'[4, 5, 5, 5, 0, 5, 1, 1, 0, 1, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.516248}
{'[4, 5, 5, 5, 0, 5, 1, 1, 0, 1, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.515873}
{'[4, 5, 5, 5, 0, 5, 1, 1, 0, 1, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.518358}
{'[4, 5, 5, 5, 0, 5, 1, 1, 0, 1, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.515505}
{'[4, 5, 5, 5, 0, 5, 1, 1, 0, 1, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.516391}
{'[4, 5, 5, 5, 0, 5, 1, 1, 0, 1, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.515254}
{'[4, 5, 5, 5, 0, 5, 1, 1, 0, 1, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.515613}
{'[4, 5, 5, 5, 0, 5, 1, 1, 0, 1, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.515231}
{'[4, 5, 5, 5, 0, 5, 1, 1, 0, 1, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.515503}
{'[4, 5, 5, 5, 0, 5, 1, 1, 0, 1, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.515903}
{'[4, 5, 5, 5, 0, 5, 1, 1, 0, 1, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.515803}
{'[4, 5, 5, 5, 0, 5, 1, 1, 0, 1, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.515723}

out:
 ["{'[4, 5, 5, 5, 0, 5, 1, 1, 0, 1, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.515491}", "{'[4, 5, 5, 5, 0, 5, 1, 1, 0, 1, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.519228}", "{'[4, 5, 5, 5, 0, 5, 1, 1, 0, 1, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.51543}", "{'[4, 5, 5, 5, 0, 5, 1, 1, 0, 1, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.51586}", "{'[4, 5, 5, 5, 0, 5, 1, 1, 0, 1, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.515785}", "{'[4, 5, 5, 5, 0, 5, 1, 1, 0, 1, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.515849}", "{'[4, 5, 5, 5, 0, 5, 1, 1, 0, 1, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.515019}", "{'[4, 5, 5, 5, 0, 5, 1, 1, 0, 1, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.516181}", "{'[4, 5, 5, 5, 0, 5, 1, 1, 0, 1, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.515619}", "{'[4, 5, 5, 5, 0, 5, 1, 1, 0, 1, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.516676}", "{'[4, 5, 5, 5, 0, 5, 1, 1, 0, 1, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.519605}", "{'[4, 5, 5, 5, 0, 5, 1, 1, 0, 1, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.515252}", "{'[4, 5, 5, 5, 0, 5, 1, 1, 0, 1, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.516258}", "{'[4, 5, 5, 5, 0, 5, 1, 1, 0, 1, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.516046}", "{'[4, 5, 5, 5, 0, 5, 1, 1, 0, 1, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.515776}", "{'[4, 5, 5, 5, 0, 5, 1, 1, 0, 1, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.515865}", "{'[4, 5, 5, 5, 0, 5, 1, 1, 0, 1, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.515508}", "{'[4, 5, 5, 5, 0, 5, 1, 1, 0, 1, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.51562}", "{'[4, 5, 5, 5, 0, 5, 1, 1, 0, 1, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.516248}", "{'[4, 5, 5, 5, 0, 5, 1, 1, 0, 1, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.515873}", "{'[4, 5, 5, 5, 0, 5, 1, 1, 0, 1, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.518358}", "{'[4, 5, 5, 5, 0, 5, 1, 1, 0, 1, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.515505}", "{'[4, 5, 5, 5, 0, 5, 1, 1, 0, 1, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.516391}", "{'[4, 5, 5, 5, 0, 5, 1, 1, 0, 1, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.515254}", "{'[4, 5, 5, 5, 0, 5, 1, 1, 0, 1, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.515613}", "{'[4, 5, 5, 5, 0, 5, 1, 1, 0, 1, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.515231}", "{'[4, 5, 5, 5, 0, 5, 1, 1, 0, 1, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.515503}", "{'[4, 5, 5, 5, 0, 5, 1, 1, 0, 1, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.515903}", "{'[4, 5, 5, 5, 0, 5, 1, 1, 0, 1, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.515803}", "{'[4, 5, 5, 5, 0, 5, 1, 1, 0, 1, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.515723}"]
returning from 'run': {'[4, 5, 5, 5, 0, 5, 1, 1, 0, 1, 0, 28, 0, 1, 1, 1, 1, 0]': ([0.515491, 0.519228, 0.51543, 0.51586, 0.515785, 0.515849, 0.515019, 0.516181, 0.515619, 0.516676, 0.519605, 0.515252, 0.516258, 0.516046, 0.515776, 0.515865, 0.515508, 0.51562, 0.516248, 0.515873, 0.518358, 0.515505, 0.516391, 0.515254, 0.515613, 0.515231, 0.515503, 0.515903, 0.515803, 0.515723], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 5, 5, 5, 0, 5, 1, 1, 0, 1, 0, 28, 0, 1, 1, 1, 1, 0]': ([0.515491, 0.519228, 0.51543, 0.51586, 0.515785, 0.515849, 0.515019, 0.516181, 0.515619, 0.516676, 0.519605, 0.515252, 0.516258, 0.516046, 0.515776, 0.515865, 0.515508, 0.51562, 0.516248, 0.515873, 0.518358, 0.515505, 0.516391, 0.515254, 0.515613, 0.515231, 0.515503, 0.515903, 0.515803, 0.515723], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = kkk
Code stats:
        Number of loops: 	94
        Max loop nest depth: 	5
        Additions: 		4754
        Multiplications: 	1280
        Divisions: 		0
        Logical: 		0
        Reads: 			9268
        Writes: 		1858
        Comparisons:		94
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest14.exe __orio_perftest14.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest14.exe  
Program Test Output: 
{'[0, 1, 4, 1, 1, 2, 0, 1, 0, 18, 0, 21, 0, 1, 0, 1, 0, 0]' : 0.426698}
{'[0, 1, 4, 1, 1, 2, 0, 1, 0, 18, 0, 21, 0, 1, 0, 1, 0, 0]' : 0.426111}
{'[0, 1, 4, 1, 1, 2, 0, 1, 0, 18, 0, 21, 0, 1, 0, 1, 0, 0]' : 0.427815}
{'[0, 1, 4, 1, 1, 2, 0, 1, 0, 18, 0, 21, 0, 1, 0, 1, 0, 0]' : 0.425698}
{'[0, 1, 4, 1, 1, 2, 0, 1, 0, 18, 0, 21, 0, 1, 0, 1, 0, 0]' : 0.425773}
{'[0, 1, 4, 1, 1, 2, 0, 1, 0, 18, 0, 21, 0, 1, 0, 1, 0, 0]' : 0.425715}
{'[0, 1, 4, 1, 1, 2, 0, 1, 0, 18, 0, 21, 0, 1, 0, 1, 0, 0]' : 0.425702}
{'[0, 1, 4, 1, 1, 2, 0, 1, 0, 18, 0, 21, 0, 1, 0, 1, 0, 0]' : 0.440821}
{'[0, 1, 4, 1, 1, 2, 0, 1, 0, 18, 0, 21, 0, 1, 0, 1, 0, 0]' : 0.424685}
{'[0, 1, 4, 1, 1, 2, 0, 1, 0, 18, 0, 21, 0, 1, 0, 1, 0, 0]' : 0.425207}
{'[0, 1, 4, 1, 1, 2, 0, 1, 0, 18, 0, 21, 0, 1, 0, 1, 0, 0]' : 0.425443}
{'[0, 1, 4, 1, 1, 2, 0, 1, 0, 18, 0, 21, 0, 1, 0, 1, 0, 0]' : 0.425654}
{'[0, 1, 4, 1, 1, 2, 0, 1, 0, 18, 0, 21, 0, 1, 0, 1, 0, 0]' : 0.427408}
{'[0, 1, 4, 1, 1, 2, 0, 1, 0, 18, 0, 21, 0, 1, 0, 1, 0, 0]' : 0.425516}
{'[0, 1, 4, 1, 1, 2, 0, 1, 0, 18, 0, 21, 0, 1, 0, 1, 0, 0]' : 0.42564}
{'[0, 1, 4, 1, 1, 2, 0, 1, 0, 18, 0, 21, 0, 1, 0, 1, 0, 0]' : 0.425492}
{'[0, 1, 4, 1, 1, 2, 0, 1, 0, 18, 0, 21, 0, 1, 0, 1, 0, 0]' : 0.425436}
{'[0, 1, 4, 1, 1, 2, 0, 1, 0, 18, 0, 21, 0, 1, 0, 1, 0, 0]' : 0.425081}
{'[0, 1, 4, 1, 1, 2, 0, 1, 0, 18, 0, 21, 0, 1, 0, 1, 0, 0]' : 0.425555}
{'[0, 1, 4, 1, 1, 2, 0, 1, 0, 18, 0, 21, 0, 1, 0, 1, 0, 0]' : 0.435232}
{'[0, 1, 4, 1, 1, 2, 0, 1, 0, 18, 0, 21, 0, 1, 0, 1, 0, 0]' : 0.430784}
{'[0, 1, 4, 1, 1, 2, 0, 1, 0, 18, 0, 21, 0, 1, 0, 1, 0, 0]' : 0.440366}
{'[0, 1, 4, 1, 1, 2, 0, 1, 0, 18, 0, 21, 0, 1, 0, 1, 0, 0]' : 0.429788}
{'[0, 1, 4, 1, 1, 2, 0, 1, 0, 18, 0, 21, 0, 1, 0, 1, 0, 0]' : 0.426548}
{'[0, 1, 4, 1, 1, 2, 0, 1, 0, 18, 0, 21, 0, 1, 0, 1, 0, 0]' : 0.425879}
{'[0, 1, 4, 1, 1, 2, 0, 1, 0, 18, 0, 21, 0, 1, 0, 1, 0, 0]' : 0.42545}
{'[0, 1, 4, 1, 1, 2, 0, 1, 0, 18, 0, 21, 0, 1, 0, 1, 0, 0]' : 0.425125}
{'[0, 1, 4, 1, 1, 2, 0, 1, 0, 18, 0, 21, 0, 1, 0, 1, 0, 0]' : 0.425617}
{'[0, 1, 4, 1, 1, 2, 0, 1, 0, 18, 0, 21, 0, 1, 0, 1, 0, 0]' : 0.425537}
{'[0, 1, 4, 1, 1, 2, 0, 1, 0, 18, 0, 21, 0, 1, 0, 1, 0, 0]' : 0.425749}

out:
 ["{'[0, 1, 4, 1, 1, 2, 0, 1, 0, 18, 0, 21, 0, 1, 0, 1, 0, 0]' : 0.426698}", "{'[0, 1, 4, 1, 1, 2, 0, 1, 0, 18, 0, 21, 0, 1, 0, 1, 0, 0]' : 0.426111}", "{'[0, 1, 4, 1, 1, 2, 0, 1, 0, 18, 0, 21, 0, 1, 0, 1, 0, 0]' : 0.427815}", "{'[0, 1, 4, 1, 1, 2, 0, 1, 0, 18, 0, 21, 0, 1, 0, 1, 0, 0]' : 0.425698}", "{'[0, 1, 4, 1, 1, 2, 0, 1, 0, 18, 0, 21, 0, 1, 0, 1, 0, 0]' : 0.425773}", "{'[0, 1, 4, 1, 1, 2, 0, 1, 0, 18, 0, 21, 0, 1, 0, 1, 0, 0]' : 0.425715}", "{'[0, 1, 4, 1, 1, 2, 0, 1, 0, 18, 0, 21, 0, 1, 0, 1, 0, 0]' : 0.425702}", "{'[0, 1, 4, 1, 1, 2, 0, 1, 0, 18, 0, 21, 0, 1, 0, 1, 0, 0]' : 0.440821}", "{'[0, 1, 4, 1, 1, 2, 0, 1, 0, 18, 0, 21, 0, 1, 0, 1, 0, 0]' : 0.424685}", "{'[0, 1, 4, 1, 1, 2, 0, 1, 0, 18, 0, 21, 0, 1, 0, 1, 0, 0]' : 0.425207}", "{'[0, 1, 4, 1, 1, 2, 0, 1, 0, 18, 0, 21, 0, 1, 0, 1, 0, 0]' : 0.425443}", "{'[0, 1, 4, 1, 1, 2, 0, 1, 0, 18, 0, 21, 0, 1, 0, 1, 0, 0]' : 0.425654}", "{'[0, 1, 4, 1, 1, 2, 0, 1, 0, 18, 0, 21, 0, 1, 0, 1, 0, 0]' : 0.427408}", "{'[0, 1, 4, 1, 1, 2, 0, 1, 0, 18, 0, 21, 0, 1, 0, 1, 0, 0]' : 0.425516}", "{'[0, 1, 4, 1, 1, 2, 0, 1, 0, 18, 0, 21, 0, 1, 0, 1, 0, 0]' : 0.42564}", "{'[0, 1, 4, 1, 1, 2, 0, 1, 0, 18, 0, 21, 0, 1, 0, 1, 0, 0]' : 0.425492}", "{'[0, 1, 4, 1, 1, 2, 0, 1, 0, 18, 0, 21, 0, 1, 0, 1, 0, 0]' : 0.425436}", "{'[0, 1, 4, 1, 1, 2, 0, 1, 0, 18, 0, 21, 0, 1, 0, 1, 0, 0]' : 0.425081}", "{'[0, 1, 4, 1, 1, 2, 0, 1, 0, 18, 0, 21, 0, 1, 0, 1, 0, 0]' : 0.425555}", "{'[0, 1, 4, 1, 1, 2, 0, 1, 0, 18, 0, 21, 0, 1, 0, 1, 0, 0]' : 0.435232}", "{'[0, 1, 4, 1, 1, 2, 0, 1, 0, 18, 0, 21, 0, 1, 0, 1, 0, 0]' : 0.430784}", "{'[0, 1, 4, 1, 1, 2, 0, 1, 0, 18, 0, 21, 0, 1, 0, 1, 0, 0]' : 0.440366}", "{'[0, 1, 4, 1, 1, 2, 0, 1, 0, 18, 0, 21, 0, 1, 0, 1, 0, 0]' : 0.429788}", "{'[0, 1, 4, 1, 1, 2, 0, 1, 0, 18, 0, 21, 0, 1, 0, 1, 0, 0]' : 0.426548}", "{'[0, 1, 4, 1, 1, 2, 0, 1, 0, 18, 0, 21, 0, 1, 0, 1, 0, 0]' : 0.425879}", "{'[0, 1, 4, 1, 1, 2, 0, 1, 0, 18, 0, 21, 0, 1, 0, 1, 0, 0]' : 0.42545}", "{'[0, 1, 4, 1, 1, 2, 0, 1, 0, 18, 0, 21, 0, 1, 0, 1, 0, 0]' : 0.425125}", "{'[0, 1, 4, 1, 1, 2, 0, 1, 0, 18, 0, 21, 0, 1, 0, 1, 0, 0]' : 0.425617}", "{'[0, 1, 4, 1, 1, 2, 0, 1, 0, 18, 0, 21, 0, 1, 0, 1, 0, 0]' : 0.425537}", "{'[0, 1, 4, 1, 1, 2, 0, 1, 0, 18, 0, 21, 0, 1, 0, 1, 0, 0]' : 0.425749}"]
returning from 'run': {'[0, 1, 4, 1, 1, 2, 0, 1, 0, 18, 0, 21, 0, 1, 0, 1, 0, 0]': ([0.426698, 0.426111, 0.427815, 0.425698, 0.425773, 0.425715, 0.425702, 0.440821, 0.424685, 0.425207, 0.425443, 0.425654, 0.427408, 0.425516, 0.42564, 0.425492, 0.425436, 0.425081, 0.425555, 0.435232, 0.430784, 0.440366, 0.429788, 0.426548, 0.425879, 0.42545, 0.425125, 0.425617, 0.425537, 0.425749], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 4, 1, 1, 2, 0, 1, 0, 18, 0, 21, 0, 1, 0, 1, 0, 0]': ([0.426698, 0.426111, 0.427815, 0.425698, 0.425773, 0.425715, 0.425702, 0.440821, 0.424685, 0.425207, 0.425443, 0.425654, 0.427408, 0.425516, 0.42564, 0.425492, 0.425436, 0.425081, 0.425555, 0.435232, 0.430784, 0.440366, 0.429788, 0.426548, 0.425879, 0.42545, 0.425125, 0.425617, 0.425537, 0.425749], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	36
        Max loop nest depth: 	6
        Additions: 		1351
        Multiplications: 	612
        Divisions: 		0
        Logical: 		0
        Reads: 			2713
        Writes: 		473
        Comparisons:		36
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest15.exe __orio_perftest15.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest15.exe  
Program Test Output: 
{'[3, 3, 3, 6, 0, 2, 0, 1, 8, 7, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.465384}
{'[3, 3, 3, 6, 0, 2, 0, 1, 8, 7, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.499676}
{'[3, 3, 3, 6, 0, 2, 0, 1, 8, 7, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.485971}
{'[3, 3, 3, 6, 0, 2, 0, 1, 8, 7, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.46485}
{'[3, 3, 3, 6, 0, 2, 0, 1, 8, 7, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.462886}
{'[3, 3, 3, 6, 0, 2, 0, 1, 8, 7, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.462334}
{'[3, 3, 3, 6, 0, 2, 0, 1, 8, 7, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.462322}
{'[3, 3, 3, 6, 0, 2, 0, 1, 8, 7, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.462845}
{'[3, 3, 3, 6, 0, 2, 0, 1, 8, 7, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.465277}
{'[3, 3, 3, 6, 0, 2, 0, 1, 8, 7, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.463598}
{'[3, 3, 3, 6, 0, 2, 0, 1, 8, 7, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.463662}
{'[3, 3, 3, 6, 0, 2, 0, 1, 8, 7, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.466006}
{'[3, 3, 3, 6, 0, 2, 0, 1, 8, 7, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.465851}
{'[3, 3, 3, 6, 0, 2, 0, 1, 8, 7, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.463331}
{'[3, 3, 3, 6, 0, 2, 0, 1, 8, 7, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.463955}
{'[3, 3, 3, 6, 0, 2, 0, 1, 8, 7, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.461797}
{'[3, 3, 3, 6, 0, 2, 0, 1, 8, 7, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.462275}
{'[3, 3, 3, 6, 0, 2, 0, 1, 8, 7, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.46153}
{'[3, 3, 3, 6, 0, 2, 0, 1, 8, 7, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.461989}
{'[3, 3, 3, 6, 0, 2, 0, 1, 8, 7, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.461377}
{'[3, 3, 3, 6, 0, 2, 0, 1, 8, 7, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.461307}
{'[3, 3, 3, 6, 0, 2, 0, 1, 8, 7, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.461434}
{'[3, 3, 3, 6, 0, 2, 0, 1, 8, 7, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.468167}
{'[3, 3, 3, 6, 0, 2, 0, 1, 8, 7, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.47525}
{'[3, 3, 3, 6, 0, 2, 0, 1, 8, 7, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.468896}
{'[3, 3, 3, 6, 0, 2, 0, 1, 8, 7, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.469021}
{'[3, 3, 3, 6, 0, 2, 0, 1, 8, 7, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.462788}
{'[3, 3, 3, 6, 0, 2, 0, 1, 8, 7, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.461574}
{'[3, 3, 3, 6, 0, 2, 0, 1, 8, 7, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.469362}
{'[3, 3, 3, 6, 0, 2, 0, 1, 8, 7, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.470719}

out:
 ["{'[3, 3, 3, 6, 0, 2, 0, 1, 8, 7, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.465384}", "{'[3, 3, 3, 6, 0, 2, 0, 1, 8, 7, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.499676}", "{'[3, 3, 3, 6, 0, 2, 0, 1, 8, 7, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.485971}", "{'[3, 3, 3, 6, 0, 2, 0, 1, 8, 7, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.46485}", "{'[3, 3, 3, 6, 0, 2, 0, 1, 8, 7, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.462886}", "{'[3, 3, 3, 6, 0, 2, 0, 1, 8, 7, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.462334}", "{'[3, 3, 3, 6, 0, 2, 0, 1, 8, 7, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.462322}", "{'[3, 3, 3, 6, 0, 2, 0, 1, 8, 7, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.462845}", "{'[3, 3, 3, 6, 0, 2, 0, 1, 8, 7, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.465277}", "{'[3, 3, 3, 6, 0, 2, 0, 1, 8, 7, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.463598}", "{'[3, 3, 3, 6, 0, 2, 0, 1, 8, 7, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.463662}", "{'[3, 3, 3, 6, 0, 2, 0, 1, 8, 7, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.466006}", "{'[3, 3, 3, 6, 0, 2, 0, 1, 8, 7, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.465851}", "{'[3, 3, 3, 6, 0, 2, 0, 1, 8, 7, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.463331}", "{'[3, 3, 3, 6, 0, 2, 0, 1, 8, 7, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.463955}", "{'[3, 3, 3, 6, 0, 2, 0, 1, 8, 7, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.461797}", "{'[3, 3, 3, 6, 0, 2, 0, 1, 8, 7, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.462275}", "{'[3, 3, 3, 6, 0, 2, 0, 1, 8, 7, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.46153}", "{'[3, 3, 3, 6, 0, 2, 0, 1, 8, 7, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.461989}", "{'[3, 3, 3, 6, 0, 2, 0, 1, 8, 7, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.461377}", "{'[3, 3, 3, 6, 0, 2, 0, 1, 8, 7, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.461307}", "{'[3, 3, 3, 6, 0, 2, 0, 1, 8, 7, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.461434}", "{'[3, 3, 3, 6, 0, 2, 0, 1, 8, 7, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.468167}", "{'[3, 3, 3, 6, 0, 2, 0, 1, 8, 7, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.47525}", "{'[3, 3, 3, 6, 0, 2, 0, 1, 8, 7, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.468896}", "{'[3, 3, 3, 6, 0, 2, 0, 1, 8, 7, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.469021}", "{'[3, 3, 3, 6, 0, 2, 0, 1, 8, 7, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.462788}", "{'[3, 3, 3, 6, 0, 2, 0, 1, 8, 7, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.461574}", "{'[3, 3, 3, 6, 0, 2, 0, 1, 8, 7, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.469362}", "{'[3, 3, 3, 6, 0, 2, 0, 1, 8, 7, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.470719}"]
returning from 'run': {'[3, 3, 3, 6, 0, 2, 0, 1, 8, 7, 0, 0, 0, 2, 0, 1, 1, 0]': ([0.465384, 0.499676, 0.485971, 0.46485, 0.462886, 0.462334, 0.462322, 0.462845, 0.465277, 0.463598, 0.463662, 0.466006, 0.465851, 0.463331, 0.463955, 0.461797, 0.462275, 0.46153, 0.461989, 0.461377, 0.461307, 0.461434, 0.468167, 0.47525, 0.468896, 0.469021, 0.462788, 0.461574, 0.469362, 0.470719], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 3, 3, 6, 0, 2, 0, 1, 8, 7, 0, 0, 0, 2, 0, 1, 1, 0]': ([0.465384, 0.499676, 0.485971, 0.46485, 0.462886, 0.462334, 0.462322, 0.462845, 0.465277, 0.463598, 0.463662, 0.466006, 0.465851, 0.463331, 0.463955, 0.461797, 0.462275, 0.46153, 0.461989, 0.461377, 0.461307, 0.461434, 0.468167, 0.47525, 0.468896, 0.469021, 0.462788, 0.461574, 0.469362, 0.470719], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	27
        Max loop nest depth: 	5
        Additions: 		1780
        Multiplications: 	738
        Divisions: 		0
        Logical: 		0
        Reads: 			3434
        Writes: 		595
        Comparisons:		27
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest16.exe __orio_perftest16.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest16.exe  
Program Test Output: 
{'[2, 3, 1, 0, 6, 5, 1, 1, 16, 0, 10, 27, 1, 0, 0, 1, 0, 0]' : 0.343587}
{'[2, 3, 1, 0, 6, 5, 1, 1, 16, 0, 10, 27, 1, 0, 0, 1, 0, 0]' : 0.336142}
{'[2, 3, 1, 0, 6, 5, 1, 1, 16, 0, 10, 27, 1, 0, 0, 1, 0, 0]' : 0.335686}
{'[2, 3, 1, 0, 6, 5, 1, 1, 16, 0, 10, 27, 1, 0, 0, 1, 0, 0]' : 0.336627}
{'[2, 3, 1, 0, 6, 5, 1, 1, 16, 0, 10, 27, 1, 0, 0, 1, 0, 0]' : 0.335583}
{'[2, 3, 1, 0, 6, 5, 1, 1, 16, 0, 10, 27, 1, 0, 0, 1, 0, 0]' : 0.335594}
{'[2, 3, 1, 0, 6, 5, 1, 1, 16, 0, 10, 27, 1, 0, 0, 1, 0, 0]' : 0.335843}
{'[2, 3, 1, 0, 6, 5, 1, 1, 16, 0, 10, 27, 1, 0, 0, 1, 0, 0]' : 0.336373}
{'[2, 3, 1, 0, 6, 5, 1, 1, 16, 0, 10, 27, 1, 0, 0, 1, 0, 0]' : 0.35478}
{'[2, 3, 1, 0, 6, 5, 1, 1, 16, 0, 10, 27, 1, 0, 0, 1, 0, 0]' : 0.336577}
{'[2, 3, 1, 0, 6, 5, 1, 1, 16, 0, 10, 27, 1, 0, 0, 1, 0, 0]' : 0.335571}
{'[2, 3, 1, 0, 6, 5, 1, 1, 16, 0, 10, 27, 1, 0, 0, 1, 0, 0]' : 0.335761}
{'[2, 3, 1, 0, 6, 5, 1, 1, 16, 0, 10, 27, 1, 0, 0, 1, 0, 0]' : 0.335969}
{'[2, 3, 1, 0, 6, 5, 1, 1, 16, 0, 10, 27, 1, 0, 0, 1, 0, 0]' : 0.335791}
{'[2, 3, 1, 0, 6, 5, 1, 1, 16, 0, 10, 27, 1, 0, 0, 1, 0, 0]' : 0.336094}
{'[2, 3, 1, 0, 6, 5, 1, 1, 16, 0, 10, 27, 1, 0, 0, 1, 0, 0]' : 0.337141}
{'[2, 3, 1, 0, 6, 5, 1, 1, 16, 0, 10, 27, 1, 0, 0, 1, 0, 0]' : 0.335761}
{'[2, 3, 1, 0, 6, 5, 1, 1, 16, 0, 10, 27, 1, 0, 0, 1, 0, 0]' : 0.335686}
{'[2, 3, 1, 0, 6, 5, 1, 1, 16, 0, 10, 27, 1, 0, 0, 1, 0, 0]' : 0.346785}
{'[2, 3, 1, 0, 6, 5, 1, 1, 16, 0, 10, 27, 1, 0, 0, 1, 0, 0]' : 0.335661}
{'[2, 3, 1, 0, 6, 5, 1, 1, 16, 0, 10, 27, 1, 0, 0, 1, 0, 0]' : 0.33578}
{'[2, 3, 1, 0, 6, 5, 1, 1, 16, 0, 10, 27, 1, 0, 0, 1, 0, 0]' : 0.336207}
{'[2, 3, 1, 0, 6, 5, 1, 1, 16, 0, 10, 27, 1, 0, 0, 1, 0, 0]' : 0.335925}
{'[2, 3, 1, 0, 6, 5, 1, 1, 16, 0, 10, 27, 1, 0, 0, 1, 0, 0]' : 0.336332}
{'[2, 3, 1, 0, 6, 5, 1, 1, 16, 0, 10, 27, 1, 0, 0, 1, 0, 0]' : 0.335869}
{'[2, 3, 1, 0, 6, 5, 1, 1, 16, 0, 10, 27, 1, 0, 0, 1, 0, 0]' : 0.34098}
{'[2, 3, 1, 0, 6, 5, 1, 1, 16, 0, 10, 27, 1, 0, 0, 1, 0, 0]' : 0.335925}
{'[2, 3, 1, 0, 6, 5, 1, 1, 16, 0, 10, 27, 1, 0, 0, 1, 0, 0]' : 0.338262}
{'[2, 3, 1, 0, 6, 5, 1, 1, 16, 0, 10, 27, 1, 0, 0, 1, 0, 0]' : 0.336052}
{'[2, 3, 1, 0, 6, 5, 1, 1, 16, 0, 10, 27, 1, 0, 0, 1, 0, 0]' : 0.336104}

out:
 ["{'[2, 3, 1, 0, 6, 5, 1, 1, 16, 0, 10, 27, 1, 0, 0, 1, 0, 0]' : 0.343587}", "{'[2, 3, 1, 0, 6, 5, 1, 1, 16, 0, 10, 27, 1, 0, 0, 1, 0, 0]' : 0.336142}", "{'[2, 3, 1, 0, 6, 5, 1, 1, 16, 0, 10, 27, 1, 0, 0, 1, 0, 0]' : 0.335686}", "{'[2, 3, 1, 0, 6, 5, 1, 1, 16, 0, 10, 27, 1, 0, 0, 1, 0, 0]' : 0.336627}", "{'[2, 3, 1, 0, 6, 5, 1, 1, 16, 0, 10, 27, 1, 0, 0, 1, 0, 0]' : 0.335583}", "{'[2, 3, 1, 0, 6, 5, 1, 1, 16, 0, 10, 27, 1, 0, 0, 1, 0, 0]' : 0.335594}", "{'[2, 3, 1, 0, 6, 5, 1, 1, 16, 0, 10, 27, 1, 0, 0, 1, 0, 0]' : 0.335843}", "{'[2, 3, 1, 0, 6, 5, 1, 1, 16, 0, 10, 27, 1, 0, 0, 1, 0, 0]' : 0.336373}", "{'[2, 3, 1, 0, 6, 5, 1, 1, 16, 0, 10, 27, 1, 0, 0, 1, 0, 0]' : 0.35478}", "{'[2, 3, 1, 0, 6, 5, 1, 1, 16, 0, 10, 27, 1, 0, 0, 1, 0, 0]' : 0.336577}", "{'[2, 3, 1, 0, 6, 5, 1, 1, 16, 0, 10, 27, 1, 0, 0, 1, 0, 0]' : 0.335571}", "{'[2, 3, 1, 0, 6, 5, 1, 1, 16, 0, 10, 27, 1, 0, 0, 1, 0, 0]' : 0.335761}", "{'[2, 3, 1, 0, 6, 5, 1, 1, 16, 0, 10, 27, 1, 0, 0, 1, 0, 0]' : 0.335969}", "{'[2, 3, 1, 0, 6, 5, 1, 1, 16, 0, 10, 27, 1, 0, 0, 1, 0, 0]' : 0.335791}", "{'[2, 3, 1, 0, 6, 5, 1, 1, 16, 0, 10, 27, 1, 0, 0, 1, 0, 0]' : 0.336094}", "{'[2, 3, 1, 0, 6, 5, 1, 1, 16, 0, 10, 27, 1, 0, 0, 1, 0, 0]' : 0.337141}", "{'[2, 3, 1, 0, 6, 5, 1, 1, 16, 0, 10, 27, 1, 0, 0, 1, 0, 0]' : 0.335761}", "{'[2, 3, 1, 0, 6, 5, 1, 1, 16, 0, 10, 27, 1, 0, 0, 1, 0, 0]' : 0.335686}", "{'[2, 3, 1, 0, 6, 5, 1, 1, 16, 0, 10, 27, 1, 0, 0, 1, 0, 0]' : 0.346785}", "{'[2, 3, 1, 0, 6, 5, 1, 1, 16, 0, 10, 27, 1, 0, 0, 1, 0, 0]' : 0.335661}", "{'[2, 3, 1, 0, 6, 5, 1, 1, 16, 0, 10, 27, 1, 0, 0, 1, 0, 0]' : 0.33578}", "{'[2, 3, 1, 0, 6, 5, 1, 1, 16, 0, 10, 27, 1, 0, 0, 1, 0, 0]' : 0.336207}", "{'[2, 3, 1, 0, 6, 5, 1, 1, 16, 0, 10, 27, 1, 0, 0, 1, 0, 0]' : 0.335925}", "{'[2, 3, 1, 0, 6, 5, 1, 1, 16, 0, 10, 27, 1, 0, 0, 1, 0, 0]' : 0.336332}", "{'[2, 3, 1, 0, 6, 5, 1, 1, 16, 0, 10, 27, 1, 0, 0, 1, 0, 0]' : 0.335869}", "{'[2, 3, 1, 0, 6, 5, 1, 1, 16, 0, 10, 27, 1, 0, 0, 1, 0, 0]' : 0.34098}", "{'[2, 3, 1, 0, 6, 5, 1, 1, 16, 0, 10, 27, 1, 0, 0, 1, 0, 0]' : 0.335925}", "{'[2, 3, 1, 0, 6, 5, 1, 1, 16, 0, 10, 27, 1, 0, 0, 1, 0, 0]' : 0.338262}", "{'[2, 3, 1, 0, 6, 5, 1, 1, 16, 0, 10, 27, 1, 0, 0, 1, 0, 0]' : 0.336052}", "{'[2, 3, 1, 0, 6, 5, 1, 1, 16, 0, 10, 27, 1, 0, 0, 1, 0, 0]' : 0.336104}"]
returning from 'run': {'[2, 3, 1, 0, 6, 5, 1, 1, 16, 0, 10, 27, 1, 0, 0, 1, 0, 0]': ([0.343587, 0.336142, 0.335686, 0.336627, 0.335583, 0.335594, 0.335843, 0.336373, 0.35478, 0.336577, 0.335571, 0.335761, 0.335969, 0.335791, 0.336094, 0.337141, 0.335761, 0.335686, 0.346785, 0.335661, 0.33578, 0.336207, 0.335925, 0.336332, 0.335869, 0.34098, 0.335925, 0.338262, 0.336052, 0.336104], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 3, 1, 0, 6, 5, 1, 1, 16, 0, 10, 27, 1, 0, 0, 1, 0, 0]': ([0.343587, 0.336142, 0.335686, 0.336627, 0.335583, 0.335594, 0.335843, 0.336373, 0.35478, 0.336577, 0.335571, 0.335761, 0.335969, 0.335791, 0.336094, 0.337141, 0.335761, 0.335686, 0.346785, 0.335661, 0.33578, 0.336207, 0.335925, 0.336332, 0.335869, 0.34098, 0.335925, 0.338262, 0.336052, 0.336104], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		333
        Multiplications: 	94
        Divisions: 		0
        Logical: 		0
        Reads: 			655
        Writes: 		90
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest17.exe __orio_perftest17.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest17.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest17.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest17.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 129, in search

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 639, in searchBestCoord
    info("Starting DOPT-anova")

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 557, in dopt_anova
    fixed_factors,

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 504, in dopt_anova_step
    info("D-Efficiency Approximation: " + str(output.rx("Dea")[0]))

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 396, in measure_design
    # info("Testing candidate " + str(line + 1) + ": " + str(candidate))

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 335, in getPerfCosts

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest17.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 129, in search

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 639, in searchBestCoord
    info("Starting DOPT-anova")

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 557, in dopt_anova
    fixed_factors,

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 504, in dopt_anova_step
    info("D-Efficiency Approximation: " + str(output.rx("Dea")[0]))

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 396, in measure_design
    # info("Testing candidate " + str(line + 1) + ": " + str(candidate))

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 335, in getPerfCosts

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		243
        Multiplications: 	88
        Divisions: 		0
        Logical: 		0
        Reads: 			562
        Writes: 		84
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest18.exe __orio_perftest18.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest18.exe  
Program Test Output: 
{'[2, 5, 1, 1, 4, 1, 0, 0, 9, 0, 1, 7, 0, 2, 0, 0, 0, 0]' : 1.09937}
{'[2, 5, 1, 1, 4, 1, 0, 0, 9, 0, 1, 7, 0, 2, 0, 0, 0, 0]' : 1.10054}
{'[2, 5, 1, 1, 4, 1, 0, 0, 9, 0, 1, 7, 0, 2, 0, 0, 0, 0]' : 1.10011}
{'[2, 5, 1, 1, 4, 1, 0, 0, 9, 0, 1, 7, 0, 2, 0, 0, 0, 0]' : 1.10632}
{'[2, 5, 1, 1, 4, 1, 0, 0, 9, 0, 1, 7, 0, 2, 0, 0, 0, 0]' : 1.10014}
{'[2, 5, 1, 1, 4, 1, 0, 0, 9, 0, 1, 7, 0, 2, 0, 0, 0, 0]' : 1.10021}
{'[2, 5, 1, 1, 4, 1, 0, 0, 9, 0, 1, 7, 0, 2, 0, 0, 0, 0]' : 1.1002}
{'[2, 5, 1, 1, 4, 1, 0, 0, 9, 0, 1, 7, 0, 2, 0, 0, 0, 0]' : 1.10063}
{'[2, 5, 1, 1, 4, 1, 0, 0, 9, 0, 1, 7, 0, 2, 0, 0, 0, 0]' : 1.10031}
{'[2, 5, 1, 1, 4, 1, 0, 0, 9, 0, 1, 7, 0, 2, 0, 0, 0, 0]' : 1.10063}
{'[2, 5, 1, 1, 4, 1, 0, 0, 9, 0, 1, 7, 0, 2, 0, 0, 0, 0]' : 1.10029}
{'[2, 5, 1, 1, 4, 1, 0, 0, 9, 0, 1, 7, 0, 2, 0, 0, 0, 0]' : 1.10022}
{'[2, 5, 1, 1, 4, 1, 0, 0, 9, 0, 1, 7, 0, 2, 0, 0, 0, 0]' : 1.10156}
{'[2, 5, 1, 1, 4, 1, 0, 0, 9, 0, 1, 7, 0, 2, 0, 0, 0, 0]' : 1.09938}
{'[2, 5, 1, 1, 4, 1, 0, 0, 9, 0, 1, 7, 0, 2, 0, 0, 0, 0]' : 1.09929}
{'[2, 5, 1, 1, 4, 1, 0, 0, 9, 0, 1, 7, 0, 2, 0, 0, 0, 0]' : 1.09971}
{'[2, 5, 1, 1, 4, 1, 0, 0, 9, 0, 1, 7, 0, 2, 0, 0, 0, 0]' : 1.09935}
{'[2, 5, 1, 1, 4, 1, 0, 0, 9, 0, 1, 7, 0, 2, 0, 0, 0, 0]' : 1.09924}
{'[2, 5, 1, 1, 4, 1, 0, 0, 9, 0, 1, 7, 0, 2, 0, 0, 0, 0]' : 1.09919}
{'[2, 5, 1, 1, 4, 1, 0, 0, 9, 0, 1, 7, 0, 2, 0, 0, 0, 0]' : 1.09925}
{'[2, 5, 1, 1, 4, 1, 0, 0, 9, 0, 1, 7, 0, 2, 0, 0, 0, 0]' : 1.09919}
{'[2, 5, 1, 1, 4, 1, 0, 0, 9, 0, 1, 7, 0, 2, 0, 0, 0, 0]' : 1.11612}
{'[2, 5, 1, 1, 4, 1, 0, 0, 9, 0, 1, 7, 0, 2, 0, 0, 0, 0]' : 1.10858}
{'[2, 5, 1, 1, 4, 1, 0, 0, 9, 0, 1, 7, 0, 2, 0, 0, 0, 0]' : 1.09941}
{'[2, 5, 1, 1, 4, 1, 0, 0, 9, 0, 1, 7, 0, 2, 0, 0, 0, 0]' : 1.09956}
{'[2, 5, 1, 1, 4, 1, 0, 0, 9, 0, 1, 7, 0, 2, 0, 0, 0, 0]' : 1.09921}
{'[2, 5, 1, 1, 4, 1, 0, 0, 9, 0, 1, 7, 0, 2, 0, 0, 0, 0]' : 1.09917}
{'[2, 5, 1, 1, 4, 1, 0, 0, 9, 0, 1, 7, 0, 2, 0, 0, 0, 0]' : 1.09918}
{'[2, 5, 1, 1, 4, 1, 0, 0, 9, 0, 1, 7, 0, 2, 0, 0, 0, 0]' : 1.09925}
{'[2, 5, 1, 1, 4, 1, 0, 0, 9, 0, 1, 7, 0, 2, 0, 0, 0, 0]' : 1.10609}

out:
 ["{'[2, 5, 1, 1, 4, 1, 0, 0, 9, 0, 1, 7, 0, 2, 0, 0, 0, 0]' : 1.09937}", "{'[2, 5, 1, 1, 4, 1, 0, 0, 9, 0, 1, 7, 0, 2, 0, 0, 0, 0]' : 1.10054}", "{'[2, 5, 1, 1, 4, 1, 0, 0, 9, 0, 1, 7, 0, 2, 0, 0, 0, 0]' : 1.10011}", "{'[2, 5, 1, 1, 4, 1, 0, 0, 9, 0, 1, 7, 0, 2, 0, 0, 0, 0]' : 1.10632}", "{'[2, 5, 1, 1, 4, 1, 0, 0, 9, 0, 1, 7, 0, 2, 0, 0, 0, 0]' : 1.10014}", "{'[2, 5, 1, 1, 4, 1, 0, 0, 9, 0, 1, 7, 0, 2, 0, 0, 0, 0]' : 1.10021}", "{'[2, 5, 1, 1, 4, 1, 0, 0, 9, 0, 1, 7, 0, 2, 0, 0, 0, 0]' : 1.1002}", "{'[2, 5, 1, 1, 4, 1, 0, 0, 9, 0, 1, 7, 0, 2, 0, 0, 0, 0]' : 1.10063}", "{'[2, 5, 1, 1, 4, 1, 0, 0, 9, 0, 1, 7, 0, 2, 0, 0, 0, 0]' : 1.10031}", "{'[2, 5, 1, 1, 4, 1, 0, 0, 9, 0, 1, 7, 0, 2, 0, 0, 0, 0]' : 1.10063}", "{'[2, 5, 1, 1, 4, 1, 0, 0, 9, 0, 1, 7, 0, 2, 0, 0, 0, 0]' : 1.10029}", "{'[2, 5, 1, 1, 4, 1, 0, 0, 9, 0, 1, 7, 0, 2, 0, 0, 0, 0]' : 1.10022}", "{'[2, 5, 1, 1, 4, 1, 0, 0, 9, 0, 1, 7, 0, 2, 0, 0, 0, 0]' : 1.10156}", "{'[2, 5, 1, 1, 4, 1, 0, 0, 9, 0, 1, 7, 0, 2, 0, 0, 0, 0]' : 1.09938}", "{'[2, 5, 1, 1, 4, 1, 0, 0, 9, 0, 1, 7, 0, 2, 0, 0, 0, 0]' : 1.09929}", "{'[2, 5, 1, 1, 4, 1, 0, 0, 9, 0, 1, 7, 0, 2, 0, 0, 0, 0]' : 1.09971}", "{'[2, 5, 1, 1, 4, 1, 0, 0, 9, 0, 1, 7, 0, 2, 0, 0, 0, 0]' : 1.09935}", "{'[2, 5, 1, 1, 4, 1, 0, 0, 9, 0, 1, 7, 0, 2, 0, 0, 0, 0]' : 1.09924}", "{'[2, 5, 1, 1, 4, 1, 0, 0, 9, 0, 1, 7, 0, 2, 0, 0, 0, 0]' : 1.09919}", "{'[2, 5, 1, 1, 4, 1, 0, 0, 9, 0, 1, 7, 0, 2, 0, 0, 0, 0]' : 1.09925}", "{'[2, 5, 1, 1, 4, 1, 0, 0, 9, 0, 1, 7, 0, 2, 0, 0, 0, 0]' : 1.09919}", "{'[2, 5, 1, 1, 4, 1, 0, 0, 9, 0, 1, 7, 0, 2, 0, 0, 0, 0]' : 1.11612}", "{'[2, 5, 1, 1, 4, 1, 0, 0, 9, 0, 1, 7, 0, 2, 0, 0, 0, 0]' : 1.10858}", "{'[2, 5, 1, 1, 4, 1, 0, 0, 9, 0, 1, 7, 0, 2, 0, 0, 0, 0]' : 1.09941}", "{'[2, 5, 1, 1, 4, 1, 0, 0, 9, 0, 1, 7, 0, 2, 0, 0, 0, 0]' : 1.09956}", "{'[2, 5, 1, 1, 4, 1, 0, 0, 9, 0, 1, 7, 0, 2, 0, 0, 0, 0]' : 1.09921}", "{'[2, 5, 1, 1, 4, 1, 0, 0, 9, 0, 1, 7, 0, 2, 0, 0, 0, 0]' : 1.09917}", "{'[2, 5, 1, 1, 4, 1, 0, 0, 9, 0, 1, 7, 0, 2, 0, 0, 0, 0]' : 1.09918}", "{'[2, 5, 1, 1, 4, 1, 0, 0, 9, 0, 1, 7, 0, 2, 0, 0, 0, 0]' : 1.09925}", "{'[2, 5, 1, 1, 4, 1, 0, 0, 9, 0, 1, 7, 0, 2, 0, 0, 0, 0]' : 1.10609}"]
returning from 'run': {'[2, 5, 1, 1, 4, 1, 0, 0, 9, 0, 1, 7, 0, 2, 0, 0, 0, 0]': ([1.09937, 1.10054, 1.10011, 1.10632, 1.10014, 1.10021, 1.1002, 1.10063, 1.10031, 1.10063, 1.10029, 1.10022, 1.10156, 1.09938, 1.09929, 1.09971, 1.09935, 1.09924, 1.09919, 1.09925, 1.09919, 1.11612, 1.10858, 1.09941, 1.09956, 1.09921, 1.09917, 1.09918, 1.09925, 1.10609], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 5, 1, 1, 4, 1, 0, 0, 9, 0, 1, 7, 0, 2, 0, 0, 0, 0]': ([1.09937, 1.10054, 1.10011, 1.10632, 1.10014, 1.10021, 1.1002, 1.10063, 1.10031, 1.10063, 1.10029, 1.10022, 1.10156, 1.09938, 1.09929, 1.09971, 1.09935, 1.09924, 1.09919, 1.09925, 1.09919, 1.11612, 1.10858, 1.09941, 1.09956, 1.09921, 1.09917, 1.09918, 1.09925, 1.10609], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	179
        Max loop nest depth: 	6
        Additions: 		14471
        Multiplications: 	3150
        Divisions: 		0
        Logical: 		0
        Reads: 			21016
        Writes: 		2194
        Comparisons:		179
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest19.exe __orio_perftest19.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest19.exe  
Program Test Output: 
{'[2, 3, 4, 4, 0, 4, 1, 1, 29, 29, 0, 22, 2, 0, 0, 0, 1, 1]' : 0.367054}
{'[2, 3, 4, 4, 0, 4, 1, 1, 29, 29, 0, 22, 2, 0, 0, 0, 1, 1]' : 0.365393}
{'[2, 3, 4, 4, 0, 4, 1, 1, 29, 29, 0, 22, 2, 0, 0, 0, 1, 1]' : 0.379717}
{'[2, 3, 4, 4, 0, 4, 1, 1, 29, 29, 0, 22, 2, 0, 0, 0, 1, 1]' : 0.365707}
{'[2, 3, 4, 4, 0, 4, 1, 1, 29, 29, 0, 22, 2, 0, 0, 0, 1, 1]' : 0.371521}
{'[2, 3, 4, 4, 0, 4, 1, 1, 29, 29, 0, 22, 2, 0, 0, 0, 1, 1]' : 0.365213}
{'[2, 3, 4, 4, 0, 4, 1, 1, 29, 29, 0, 22, 2, 0, 0, 0, 1, 1]' : 0.366433}
{'[2, 3, 4, 4, 0, 4, 1, 1, 29, 29, 0, 22, 2, 0, 0, 0, 1, 1]' : 0.365583}
{'[2, 3, 4, 4, 0, 4, 1, 1, 29, 29, 0, 22, 2, 0, 0, 0, 1, 1]' : 0.367741}
{'[2, 3, 4, 4, 0, 4, 1, 1, 29, 29, 0, 22, 2, 0, 0, 0, 1, 1]' : 0.366182}
{'[2, 3, 4, 4, 0, 4, 1, 1, 29, 29, 0, 22, 2, 0, 0, 0, 1, 1]' : 0.365535}
{'[2, 3, 4, 4, 0, 4, 1, 1, 29, 29, 0, 22, 2, 0, 0, 0, 1, 1]' : 0.366413}
{'[2, 3, 4, 4, 0, 4, 1, 1, 29, 29, 0, 22, 2, 0, 0, 0, 1, 1]' : 0.372157}
{'[2, 3, 4, 4, 0, 4, 1, 1, 29, 29, 0, 22, 2, 0, 0, 0, 1, 1]' : 0.366575}
{'[2, 3, 4, 4, 0, 4, 1, 1, 29, 29, 0, 22, 2, 0, 0, 0, 1, 1]' : 0.367067}
{'[2, 3, 4, 4, 0, 4, 1, 1, 29, 29, 0, 22, 2, 0, 0, 0, 1, 1]' : 0.38075}
{'[2, 3, 4, 4, 0, 4, 1, 1, 29, 29, 0, 22, 2, 0, 0, 0, 1, 1]' : 0.36578}
{'[2, 3, 4, 4, 0, 4, 1, 1, 29, 29, 0, 22, 2, 0, 0, 0, 1, 1]' : 0.368106}
{'[2, 3, 4, 4, 0, 4, 1, 1, 29, 29, 0, 22, 2, 0, 0, 0, 1, 1]' : 0.365428}
{'[2, 3, 4, 4, 0, 4, 1, 1, 29, 29, 0, 22, 2, 0, 0, 0, 1, 1]' : 0.365383}
{'[2, 3, 4, 4, 0, 4, 1, 1, 29, 29, 0, 22, 2, 0, 0, 0, 1, 1]' : 0.366096}
{'[2, 3, 4, 4, 0, 4, 1, 1, 29, 29, 0, 22, 2, 0, 0, 0, 1, 1]' : 0.374922}
{'[2, 3, 4, 4, 0, 4, 1, 1, 29, 29, 0, 22, 2, 0, 0, 0, 1, 1]' : 0.365461}
{'[2, 3, 4, 4, 0, 4, 1, 1, 29, 29, 0, 22, 2, 0, 0, 0, 1, 1]' : 0.365537}
{'[2, 3, 4, 4, 0, 4, 1, 1, 29, 29, 0, 22, 2, 0, 0, 0, 1, 1]' : 0.365319}
{'[2, 3, 4, 4, 0, 4, 1, 1, 29, 29, 0, 22, 2, 0, 0, 0, 1, 1]' : 0.36535}
{'[2, 3, 4, 4, 0, 4, 1, 1, 29, 29, 0, 22, 2, 0, 0, 0, 1, 1]' : 0.36532}
{'[2, 3, 4, 4, 0, 4, 1, 1, 29, 29, 0, 22, 2, 0, 0, 0, 1, 1]' : 0.365392}
{'[2, 3, 4, 4, 0, 4, 1, 1, 29, 29, 0, 22, 2, 0, 0, 0, 1, 1]' : 0.365272}
{'[2, 3, 4, 4, 0, 4, 1, 1, 29, 29, 0, 22, 2, 0, 0, 0, 1, 1]' : 0.368883}

out:
 ["{'[2, 3, 4, 4, 0, 4, 1, 1, 29, 29, 0, 22, 2, 0, 0, 0, 1, 1]' : 0.367054}", "{'[2, 3, 4, 4, 0, 4, 1, 1, 29, 29, 0, 22, 2, 0, 0, 0, 1, 1]' : 0.365393}", "{'[2, 3, 4, 4, 0, 4, 1, 1, 29, 29, 0, 22, 2, 0, 0, 0, 1, 1]' : 0.379717}", "{'[2, 3, 4, 4, 0, 4, 1, 1, 29, 29, 0, 22, 2, 0, 0, 0, 1, 1]' : 0.365707}", "{'[2, 3, 4, 4, 0, 4, 1, 1, 29, 29, 0, 22, 2, 0, 0, 0, 1, 1]' : 0.371521}", "{'[2, 3, 4, 4, 0, 4, 1, 1, 29, 29, 0, 22, 2, 0, 0, 0, 1, 1]' : 0.365213}", "{'[2, 3, 4, 4, 0, 4, 1, 1, 29, 29, 0, 22, 2, 0, 0, 0, 1, 1]' : 0.366433}", "{'[2, 3, 4, 4, 0, 4, 1, 1, 29, 29, 0, 22, 2, 0, 0, 0, 1, 1]' : 0.365583}", "{'[2, 3, 4, 4, 0, 4, 1, 1, 29, 29, 0, 22, 2, 0, 0, 0, 1, 1]' : 0.367741}", "{'[2, 3, 4, 4, 0, 4, 1, 1, 29, 29, 0, 22, 2, 0, 0, 0, 1, 1]' : 0.366182}", "{'[2, 3, 4, 4, 0, 4, 1, 1, 29, 29, 0, 22, 2, 0, 0, 0, 1, 1]' : 0.365535}", "{'[2, 3, 4, 4, 0, 4, 1, 1, 29, 29, 0, 22, 2, 0, 0, 0, 1, 1]' : 0.366413}", "{'[2, 3, 4, 4, 0, 4, 1, 1, 29, 29, 0, 22, 2, 0, 0, 0, 1, 1]' : 0.372157}", "{'[2, 3, 4, 4, 0, 4, 1, 1, 29, 29, 0, 22, 2, 0, 0, 0, 1, 1]' : 0.366575}", "{'[2, 3, 4, 4, 0, 4, 1, 1, 29, 29, 0, 22, 2, 0, 0, 0, 1, 1]' : 0.367067}", "{'[2, 3, 4, 4, 0, 4, 1, 1, 29, 29, 0, 22, 2, 0, 0, 0, 1, 1]' : 0.38075}", "{'[2, 3, 4, 4, 0, 4, 1, 1, 29, 29, 0, 22, 2, 0, 0, 0, 1, 1]' : 0.36578}", "{'[2, 3, 4, 4, 0, 4, 1, 1, 29, 29, 0, 22, 2, 0, 0, 0, 1, 1]' : 0.368106}", "{'[2, 3, 4, 4, 0, 4, 1, 1, 29, 29, 0, 22, 2, 0, 0, 0, 1, 1]' : 0.365428}", "{'[2, 3, 4, 4, 0, 4, 1, 1, 29, 29, 0, 22, 2, 0, 0, 0, 1, 1]' : 0.365383}", "{'[2, 3, 4, 4, 0, 4, 1, 1, 29, 29, 0, 22, 2, 0, 0, 0, 1, 1]' : 0.366096}", "{'[2, 3, 4, 4, 0, 4, 1, 1, 29, 29, 0, 22, 2, 0, 0, 0, 1, 1]' : 0.374922}", "{'[2, 3, 4, 4, 0, 4, 1, 1, 29, 29, 0, 22, 2, 0, 0, 0, 1, 1]' : 0.365461}", "{'[2, 3, 4, 4, 0, 4, 1, 1, 29, 29, 0, 22, 2, 0, 0, 0, 1, 1]' : 0.365537}", "{'[2, 3, 4, 4, 0, 4, 1, 1, 29, 29, 0, 22, 2, 0, 0, 0, 1, 1]' : 0.365319}", "{'[2, 3, 4, 4, 0, 4, 1, 1, 29, 29, 0, 22, 2, 0, 0, 0, 1, 1]' : 0.36535}", "{'[2, 3, 4, 4, 0, 4, 1, 1, 29, 29, 0, 22, 2, 0, 0, 0, 1, 1]' : 0.36532}", "{'[2, 3, 4, 4, 0, 4, 1, 1, 29, 29, 0, 22, 2, 0, 0, 0, 1, 1]' : 0.365392}", "{'[2, 3, 4, 4, 0, 4, 1, 1, 29, 29, 0, 22, 2, 0, 0, 0, 1, 1]' : 0.365272}", "{'[2, 3, 4, 4, 0, 4, 1, 1, 29, 29, 0, 22, 2, 0, 0, 0, 1, 1]' : 0.368883}"]
returning from 'run': {'[2, 3, 4, 4, 0, 4, 1, 1, 29, 29, 0, 22, 2, 0, 0, 0, 1, 1]': ([0.367054, 0.365393, 0.379717, 0.365707, 0.371521, 0.365213, 0.366433, 0.365583, 0.367741, 0.366182, 0.365535, 0.366413, 0.372157, 0.366575, 0.367067, 0.38075, 0.36578, 0.368106, 0.365428, 0.365383, 0.366096, 0.374922, 0.365461, 0.365537, 0.365319, 0.36535, 0.36532, 0.365392, 0.365272, 0.368883], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 3, 4, 4, 0, 4, 1, 1, 29, 29, 0, 22, 2, 0, 0, 0, 1, 1]': ([0.367054, 0.365393, 0.379717, 0.365707, 0.371521, 0.365213, 0.366433, 0.365583, 0.367741, 0.366182, 0.365535, 0.366413, 0.372157, 0.366575, 0.367067, 0.38075, 0.36578, 0.368106, 0.365428, 0.365383, 0.366096, 0.374922, 0.365461, 0.365537, 0.365319, 0.36535, 0.36532, 0.365392, 0.365272, 0.368883], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
Code stats:
        Number of loops: 	110
        Max loop nest depth: 	5
        Additions: 		2473
        Multiplications: 	992
        Divisions: 		0
        Logical: 		0
        Reads: 			5106
        Writes: 		949
        Comparisons:		110
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest20.exe __orio_perftest20.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest20.exe  
Program Test Output: 
{'[6, 3, 2, 4, 5, 6, 1, 1, 2, 29, 0, 24, 0, 1, 1, 1, 1, 0]' : 0.443074}
{'[6, 3, 2, 4, 5, 6, 1, 1, 2, 29, 0, 24, 0, 1, 1, 1, 1, 0]' : 0.443122}
{'[6, 3, 2, 4, 5, 6, 1, 1, 2, 29, 0, 24, 0, 1, 1, 1, 1, 0]' : 0.443339}
{'[6, 3, 2, 4, 5, 6, 1, 1, 2, 29, 0, 24, 0, 1, 1, 1, 1, 0]' : 0.443206}
{'[6, 3, 2, 4, 5, 6, 1, 1, 2, 29, 0, 24, 0, 1, 1, 1, 1, 0]' : 0.443575}
{'[6, 3, 2, 4, 5, 6, 1, 1, 2, 29, 0, 24, 0, 1, 1, 1, 1, 0]' : 0.448555}
{'[6, 3, 2, 4, 5, 6, 1, 1, 2, 29, 0, 24, 0, 1, 1, 1, 1, 0]' : 0.443324}
{'[6, 3, 2, 4, 5, 6, 1, 1, 2, 29, 0, 24, 0, 1, 1, 1, 1, 0]' : 0.445133}
{'[6, 3, 2, 4, 5, 6, 1, 1, 2, 29, 0, 24, 0, 1, 1, 1, 1, 0]' : 0.442672}
{'[6, 3, 2, 4, 5, 6, 1, 1, 2, 29, 0, 24, 0, 1, 1, 1, 1, 0]' : 0.443578}
{'[6, 3, 2, 4, 5, 6, 1, 1, 2, 29, 0, 24, 0, 1, 1, 1, 1, 0]' : 0.443601}
{'[6, 3, 2, 4, 5, 6, 1, 1, 2, 29, 0, 24, 0, 1, 1, 1, 1, 0]' : 0.443156}
{'[6, 3, 2, 4, 5, 6, 1, 1, 2, 29, 0, 24, 0, 1, 1, 1, 1, 0]' : 0.443318}
{'[6, 3, 2, 4, 5, 6, 1, 1, 2, 29, 0, 24, 0, 1, 1, 1, 1, 0]' : 0.443326}
{'[6, 3, 2, 4, 5, 6, 1, 1, 2, 29, 0, 24, 0, 1, 1, 1, 1, 0]' : 0.444087}
{'[6, 3, 2, 4, 5, 6, 1, 1, 2, 29, 0, 24, 0, 1, 1, 1, 1, 0]' : 0.44283}
{'[6, 3, 2, 4, 5, 6, 1, 1, 2, 29, 0, 24, 0, 1, 1, 1, 1, 0]' : 0.449487}
{'[6, 3, 2, 4, 5, 6, 1, 1, 2, 29, 0, 24, 0, 1, 1, 1, 1, 0]' : 0.442999}
{'[6, 3, 2, 4, 5, 6, 1, 1, 2, 29, 0, 24, 0, 1, 1, 1, 1, 0]' : 0.443279}
{'[6, 3, 2, 4, 5, 6, 1, 1, 2, 29, 0, 24, 0, 1, 1, 1, 1, 0]' : 0.442674}
{'[6, 3, 2, 4, 5, 6, 1, 1, 2, 29, 0, 24, 0, 1, 1, 1, 1, 0]' : 0.442873}
{'[6, 3, 2, 4, 5, 6, 1, 1, 2, 29, 0, 24, 0, 1, 1, 1, 1, 0]' : 0.444383}
{'[6, 3, 2, 4, 5, 6, 1, 1, 2, 29, 0, 24, 0, 1, 1, 1, 1, 0]' : 0.442805}
{'[6, 3, 2, 4, 5, 6, 1, 1, 2, 29, 0, 24, 0, 1, 1, 1, 1, 0]' : 0.457388}
{'[6, 3, 2, 4, 5, 6, 1, 1, 2, 29, 0, 24, 0, 1, 1, 1, 1, 0]' : 0.442634}
{'[6, 3, 2, 4, 5, 6, 1, 1, 2, 29, 0, 24, 0, 1, 1, 1, 1, 0]' : 0.443153}
{'[6, 3, 2, 4, 5, 6, 1, 1, 2, 29, 0, 24, 0, 1, 1, 1, 1, 0]' : 0.442921}
{'[6, 3, 2, 4, 5, 6, 1, 1, 2, 29, 0, 24, 0, 1, 1, 1, 1, 0]' : 0.448763}
{'[6, 3, 2, 4, 5, 6, 1, 1, 2, 29, 0, 24, 0, 1, 1, 1, 1, 0]' : 0.442576}
{'[6, 3, 2, 4, 5, 6, 1, 1, 2, 29, 0, 24, 0, 1, 1, 1, 1, 0]' : 0.448452}

out:
 ["{'[6, 3, 2, 4, 5, 6, 1, 1, 2, 29, 0, 24, 0, 1, 1, 1, 1, 0]' : 0.443074}", "{'[6, 3, 2, 4, 5, 6, 1, 1, 2, 29, 0, 24, 0, 1, 1, 1, 1, 0]' : 0.443122}", "{'[6, 3, 2, 4, 5, 6, 1, 1, 2, 29, 0, 24, 0, 1, 1, 1, 1, 0]' : 0.443339}", "{'[6, 3, 2, 4, 5, 6, 1, 1, 2, 29, 0, 24, 0, 1, 1, 1, 1, 0]' : 0.443206}", "{'[6, 3, 2, 4, 5, 6, 1, 1, 2, 29, 0, 24, 0, 1, 1, 1, 1, 0]' : 0.443575}", "{'[6, 3, 2, 4, 5, 6, 1, 1, 2, 29, 0, 24, 0, 1, 1, 1, 1, 0]' : 0.448555}", "{'[6, 3, 2, 4, 5, 6, 1, 1, 2, 29, 0, 24, 0, 1, 1, 1, 1, 0]' : 0.443324}", "{'[6, 3, 2, 4, 5, 6, 1, 1, 2, 29, 0, 24, 0, 1, 1, 1, 1, 0]' : 0.445133}", "{'[6, 3, 2, 4, 5, 6, 1, 1, 2, 29, 0, 24, 0, 1, 1, 1, 1, 0]' : 0.442672}", "{'[6, 3, 2, 4, 5, 6, 1, 1, 2, 29, 0, 24, 0, 1, 1, 1, 1, 0]' : 0.443578}", "{'[6, 3, 2, 4, 5, 6, 1, 1, 2, 29, 0, 24, 0, 1, 1, 1, 1, 0]' : 0.443601}", "{'[6, 3, 2, 4, 5, 6, 1, 1, 2, 29, 0, 24, 0, 1, 1, 1, 1, 0]' : 0.443156}", "{'[6, 3, 2, 4, 5, 6, 1, 1, 2, 29, 0, 24, 0, 1, 1, 1, 1, 0]' : 0.443318}", "{'[6, 3, 2, 4, 5, 6, 1, 1, 2, 29, 0, 24, 0, 1, 1, 1, 1, 0]' : 0.443326}", "{'[6, 3, 2, 4, 5, 6, 1, 1, 2, 29, 0, 24, 0, 1, 1, 1, 1, 0]' : 0.444087}", "{'[6, 3, 2, 4, 5, 6, 1, 1, 2, 29, 0, 24, 0, 1, 1, 1, 1, 0]' : 0.44283}", "{'[6, 3, 2, 4, 5, 6, 1, 1, 2, 29, 0, 24, 0, 1, 1, 1, 1, 0]' : 0.449487}", "{'[6, 3, 2, 4, 5, 6, 1, 1, 2, 29, 0, 24, 0, 1, 1, 1, 1, 0]' : 0.442999}", "{'[6, 3, 2, 4, 5, 6, 1, 1, 2, 29, 0, 24, 0, 1, 1, 1, 1, 0]' : 0.443279}", "{'[6, 3, 2, 4, 5, 6, 1, 1, 2, 29, 0, 24, 0, 1, 1, 1, 1, 0]' : 0.442674}", "{'[6, 3, 2, 4, 5, 6, 1, 1, 2, 29, 0, 24, 0, 1, 1, 1, 1, 0]' : 0.442873}", "{'[6, 3, 2, 4, 5, 6, 1, 1, 2, 29, 0, 24, 0, 1, 1, 1, 1, 0]' : 0.444383}", "{'[6, 3, 2, 4, 5, 6, 1, 1, 2, 29, 0, 24, 0, 1, 1, 1, 1, 0]' : 0.442805}", "{'[6, 3, 2, 4, 5, 6, 1, 1, 2, 29, 0, 24, 0, 1, 1, 1, 1, 0]' : 0.457388}", "{'[6, 3, 2, 4, 5, 6, 1, 1, 2, 29, 0, 24, 0, 1, 1, 1, 1, 0]' : 0.442634}", "{'[6, 3, 2, 4, 5, 6, 1, 1, 2, 29, 0, 24, 0, 1, 1, 1, 1, 0]' : 0.443153}", "{'[6, 3, 2, 4, 5, 6, 1, 1, 2, 29, 0, 24, 0, 1, 1, 1, 1, 0]' : 0.442921}", "{'[6, 3, 2, 4, 5, 6, 1, 1, 2, 29, 0, 24, 0, 1, 1, 1, 1, 0]' : 0.448763}", "{'[6, 3, 2, 4, 5, 6, 1, 1, 2, 29, 0, 24, 0, 1, 1, 1, 1, 0]' : 0.442576}", "{'[6, 3, 2, 4, 5, 6, 1, 1, 2, 29, 0, 24, 0, 1, 1, 1, 1, 0]' : 0.448452}"]
returning from 'run': {'[6, 3, 2, 4, 5, 6, 1, 1, 2, 29, 0, 24, 0, 1, 1, 1, 1, 0]': ([0.443074, 0.443122, 0.443339, 0.443206, 0.443575, 0.448555, 0.443324, 0.445133, 0.442672, 0.443578, 0.443601, 0.443156, 0.443318, 0.443326, 0.444087, 0.44283, 0.449487, 0.442999, 0.443279, 0.442674, 0.442873, 0.444383, 0.442805, 0.457388, 0.442634, 0.443153, 0.442921, 0.448763, 0.442576, 0.448452], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 3, 2, 4, 5, 6, 1, 1, 2, 29, 0, 24, 0, 1, 1, 1, 1, 0]': ([0.443074, 0.443122, 0.443339, 0.443206, 0.443575, 0.448555, 0.443324, 0.445133, 0.442672, 0.443578, 0.443601, 0.443156, 0.443318, 0.443326, 0.444087, 0.44283, 0.449487, 0.442999, 0.443279, 0.442674, 0.442873, 0.444383, 0.442805, 0.457388, 0.442634, 0.443153, 0.442921, 0.448763, 0.442576, 0.448452], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	5
        Additions: 		4431
        Multiplications: 	1320
        Divisions: 		0
        Logical: 		0
        Reads: 			6857
        Writes: 		720
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest21.exe __orio_perftest21.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest21.exe  
Program Test Output: 
{'[0, 1, 0, 6, 3, 6, 0, 1, 10, 0, 17, 0, 2, 0, 0, 0, 0, 0]' : 0.409491}
{'[0, 1, 0, 6, 3, 6, 0, 1, 10, 0, 17, 0, 2, 0, 0, 0, 0, 0]' : 0.408192}
{'[0, 1, 0, 6, 3, 6, 0, 1, 10, 0, 17, 0, 2, 0, 0, 0, 0, 0]' : 0.408715}
{'[0, 1, 0, 6, 3, 6, 0, 1, 10, 0, 17, 0, 2, 0, 0, 0, 0, 0]' : 0.408012}
{'[0, 1, 0, 6, 3, 6, 0, 1, 10, 0, 17, 0, 2, 0, 0, 0, 0, 0]' : 0.408324}
{'[0, 1, 0, 6, 3, 6, 0, 1, 10, 0, 17, 0, 2, 0, 0, 0, 0, 0]' : 0.407938}
{'[0, 1, 0, 6, 3, 6, 0, 1, 10, 0, 17, 0, 2, 0, 0, 0, 0, 0]' : 0.408145}
{'[0, 1, 0, 6, 3, 6, 0, 1, 10, 0, 17, 0, 2, 0, 0, 0, 0, 0]' : 0.40804}
{'[0, 1, 0, 6, 3, 6, 0, 1, 10, 0, 17, 0, 2, 0, 0, 0, 0, 0]' : 0.40802}
{'[0, 1, 0, 6, 3, 6, 0, 1, 10, 0, 17, 0, 2, 0, 0, 0, 0, 0]' : 0.41192}
{'[0, 1, 0, 6, 3, 6, 0, 1, 10, 0, 17, 0, 2, 0, 0, 0, 0, 0]' : 0.412951}
{'[0, 1, 0, 6, 3, 6, 0, 1, 10, 0, 17, 0, 2, 0, 0, 0, 0, 0]' : 0.408924}
{'[0, 1, 0, 6, 3, 6, 0, 1, 10, 0, 17, 0, 2, 0, 0, 0, 0, 0]' : 0.408504}
{'[0, 1, 0, 6, 3, 6, 0, 1, 10, 0, 17, 0, 2, 0, 0, 0, 0, 0]' : 0.408135}
{'[0, 1, 0, 6, 3, 6, 0, 1, 10, 0, 17, 0, 2, 0, 0, 0, 0, 0]' : 0.408009}
{'[0, 1, 0, 6, 3, 6, 0, 1, 10, 0, 17, 0, 2, 0, 0, 0, 0, 0]' : 0.408517}
{'[0, 1, 0, 6, 3, 6, 0, 1, 10, 0, 17, 0, 2, 0, 0, 0, 0, 0]' : 0.408315}
{'[0, 1, 0, 6, 3, 6, 0, 1, 10, 0, 17, 0, 2, 0, 0, 0, 0, 0]' : 0.408598}
{'[0, 1, 0, 6, 3, 6, 0, 1, 10, 0, 17, 0, 2, 0, 0, 0, 0, 0]' : 0.408549}
{'[0, 1, 0, 6, 3, 6, 0, 1, 10, 0, 17, 0, 2, 0, 0, 0, 0, 0]' : 0.411418}
{'[0, 1, 0, 6, 3, 6, 0, 1, 10, 0, 17, 0, 2, 0, 0, 0, 0, 0]' : 0.408684}
{'[0, 1, 0, 6, 3, 6, 0, 1, 10, 0, 17, 0, 2, 0, 0, 0, 0, 0]' : 0.407917}
{'[0, 1, 0, 6, 3, 6, 0, 1, 10, 0, 17, 0, 2, 0, 0, 0, 0, 0]' : 0.413585}
{'[0, 1, 0, 6, 3, 6, 0, 1, 10, 0, 17, 0, 2, 0, 0, 0, 0, 0]' : 0.407729}
{'[0, 1, 0, 6, 3, 6, 0, 1, 10, 0, 17, 0, 2, 0, 0, 0, 0, 0]' : 0.408404}
{'[0, 1, 0, 6, 3, 6, 0, 1, 10, 0, 17, 0, 2, 0, 0, 0, 0, 0]' : 0.408269}
{'[0, 1, 0, 6, 3, 6, 0, 1, 10, 0, 17, 0, 2, 0, 0, 0, 0, 0]' : 0.4082}
{'[0, 1, 0, 6, 3, 6, 0, 1, 10, 0, 17, 0, 2, 0, 0, 0, 0, 0]' : 0.408394}
{'[0, 1, 0, 6, 3, 6, 0, 1, 10, 0, 17, 0, 2, 0, 0, 0, 0, 0]' : 0.408071}
{'[0, 1, 0, 6, 3, 6, 0, 1, 10, 0, 17, 0, 2, 0, 0, 0, 0, 0]' : 0.40844}

out:
 ["{'[0, 1, 0, 6, 3, 6, 0, 1, 10, 0, 17, 0, 2, 0, 0, 0, 0, 0]' : 0.409491}", "{'[0, 1, 0, 6, 3, 6, 0, 1, 10, 0, 17, 0, 2, 0, 0, 0, 0, 0]' : 0.408192}", "{'[0, 1, 0, 6, 3, 6, 0, 1, 10, 0, 17, 0, 2, 0, 0, 0, 0, 0]' : 0.408715}", "{'[0, 1, 0, 6, 3, 6, 0, 1, 10, 0, 17, 0, 2, 0, 0, 0, 0, 0]' : 0.408012}", "{'[0, 1, 0, 6, 3, 6, 0, 1, 10, 0, 17, 0, 2, 0, 0, 0, 0, 0]' : 0.408324}", "{'[0, 1, 0, 6, 3, 6, 0, 1, 10, 0, 17, 0, 2, 0, 0, 0, 0, 0]' : 0.407938}", "{'[0, 1, 0, 6, 3, 6, 0, 1, 10, 0, 17, 0, 2, 0, 0, 0, 0, 0]' : 0.408145}", "{'[0, 1, 0, 6, 3, 6, 0, 1, 10, 0, 17, 0, 2, 0, 0, 0, 0, 0]' : 0.40804}", "{'[0, 1, 0, 6, 3, 6, 0, 1, 10, 0, 17, 0, 2, 0, 0, 0, 0, 0]' : 0.40802}", "{'[0, 1, 0, 6, 3, 6, 0, 1, 10, 0, 17, 0, 2, 0, 0, 0, 0, 0]' : 0.41192}", "{'[0, 1, 0, 6, 3, 6, 0, 1, 10, 0, 17, 0, 2, 0, 0, 0, 0, 0]' : 0.412951}", "{'[0, 1, 0, 6, 3, 6, 0, 1, 10, 0, 17, 0, 2, 0, 0, 0, 0, 0]' : 0.408924}", "{'[0, 1, 0, 6, 3, 6, 0, 1, 10, 0, 17, 0, 2, 0, 0, 0, 0, 0]' : 0.408504}", "{'[0, 1, 0, 6, 3, 6, 0, 1, 10, 0, 17, 0, 2, 0, 0, 0, 0, 0]' : 0.408135}", "{'[0, 1, 0, 6, 3, 6, 0, 1, 10, 0, 17, 0, 2, 0, 0, 0, 0, 0]' : 0.408009}", "{'[0, 1, 0, 6, 3, 6, 0, 1, 10, 0, 17, 0, 2, 0, 0, 0, 0, 0]' : 0.408517}", "{'[0, 1, 0, 6, 3, 6, 0, 1, 10, 0, 17, 0, 2, 0, 0, 0, 0, 0]' : 0.408315}", "{'[0, 1, 0, 6, 3, 6, 0, 1, 10, 0, 17, 0, 2, 0, 0, 0, 0, 0]' : 0.408598}", "{'[0, 1, 0, 6, 3, 6, 0, 1, 10, 0, 17, 0, 2, 0, 0, 0, 0, 0]' : 0.408549}", "{'[0, 1, 0, 6, 3, 6, 0, 1, 10, 0, 17, 0, 2, 0, 0, 0, 0, 0]' : 0.411418}", "{'[0, 1, 0, 6, 3, 6, 0, 1, 10, 0, 17, 0, 2, 0, 0, 0, 0, 0]' : 0.408684}", "{'[0, 1, 0, 6, 3, 6, 0, 1, 10, 0, 17, 0, 2, 0, 0, 0, 0, 0]' : 0.407917}", "{'[0, 1, 0, 6, 3, 6, 0, 1, 10, 0, 17, 0, 2, 0, 0, 0, 0, 0]' : 0.413585}", "{'[0, 1, 0, 6, 3, 6, 0, 1, 10, 0, 17, 0, 2, 0, 0, 0, 0, 0]' : 0.407729}", "{'[0, 1, 0, 6, 3, 6, 0, 1, 10, 0, 17, 0, 2, 0, 0, 0, 0, 0]' : 0.408404}", "{'[0, 1, 0, 6, 3, 6, 0, 1, 10, 0, 17, 0, 2, 0, 0, 0, 0, 0]' : 0.408269}", "{'[0, 1, 0, 6, 3, 6, 0, 1, 10, 0, 17, 0, 2, 0, 0, 0, 0, 0]' : 0.4082}", "{'[0, 1, 0, 6, 3, 6, 0, 1, 10, 0, 17, 0, 2, 0, 0, 0, 0, 0]' : 0.408394}", "{'[0, 1, 0, 6, 3, 6, 0, 1, 10, 0, 17, 0, 2, 0, 0, 0, 0, 0]' : 0.408071}", "{'[0, 1, 0, 6, 3, 6, 0, 1, 10, 0, 17, 0, 2, 0, 0, 0, 0, 0]' : 0.40844}"]
returning from 'run': {'[0, 1, 0, 6, 3, 6, 0, 1, 10, 0, 17, 0, 2, 0, 0, 0, 0, 0]': ([0.409491, 0.408192, 0.408715, 0.408012, 0.408324, 0.407938, 0.408145, 0.40804, 0.40802, 0.41192, 0.412951, 0.408924, 0.408504, 0.408135, 0.408009, 0.408517, 0.408315, 0.408598, 0.408549, 0.411418, 0.408684, 0.407917, 0.413585, 0.407729, 0.408404, 0.408269, 0.4082, 0.408394, 0.408071, 0.40844], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 0, 6, 3, 6, 0, 1, 10, 0, 17, 0, 2, 0, 0, 0, 0, 0]': ([0.409491, 0.408192, 0.408715, 0.408012, 0.408324, 0.407938, 0.408145, 0.40804, 0.40802, 0.41192, 0.412951, 0.408924, 0.408504, 0.408135, 0.408009, 0.408517, 0.408315, 0.408598, 0.408549, 0.411418, 0.408684, 0.407917, 0.413585, 0.407729, 0.408404, 0.408269, 0.4082, 0.408394, 0.408071, 0.40844], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	4
        Additions: 		308
        Multiplications: 	100
        Divisions: 		0
        Logical: 		0
        Reads: 			675
        Writes: 		107
        Comparisons:		10
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest22.exe __orio_perftest22.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest22.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest22.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest22.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 129, in search

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 639, in searchBestCoord
    info("Starting DOPT-anova")

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 557, in dopt_anova
    fixed_factors,

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 504, in dopt_anova_step
    info("D-Efficiency Approximation: " + str(output.rx("Dea")[0]))

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 396, in measure_design
    # info("Testing candidate " + str(line + 1) + ": " + str(candidate))

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 335, in getPerfCosts

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest22.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 129, in search

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 639, in searchBestCoord
    info("Starting DOPT-anova")

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 557, in dopt_anova
    fixed_factors,

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 504, in dopt_anova_step
    info("D-Efficiency Approximation: " + str(output.rx("Dea")[0]))

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 396, in measure_design
    # info("Testing candidate " + str(line + 1) + ": " + str(candidate))

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 335, in getPerfCosts

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	6
        Additions: 		320
        Multiplications: 	108
        Divisions: 		0
        Logical: 		0
        Reads: 			708
        Writes: 		147
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest23.exe __orio_perftest23.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest23.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest23.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest23.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 129, in search

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 639, in searchBestCoord
    info("Starting DOPT-anova")

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 557, in dopt_anova
    fixed_factors,

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 504, in dopt_anova_step
    info("D-Efficiency Approximation: " + str(output.rx("Dea")[0]))

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 396, in measure_design
    # info("Testing candidate " + str(line + 1) + ": " + str(candidate))

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 335, in getPerfCosts

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest23.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 129, in search

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 639, in searchBestCoord
    info("Starting DOPT-anova")

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 557, in dopt_anova
    fixed_factors,

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 504, in dopt_anova_step
    info("D-Efficiency Approximation: " + str(output.rx("Dea")[0]))

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 396, in measure_design
    # info("Testing candidate " + str(line + 1) + ": " + str(candidate))

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 335, in getPerfCosts

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	5
        Additions: 		897
        Multiplications: 	396
        Divisions: 		0
        Logical: 		0
        Reads: 			1795
        Writes: 		316
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest24.exe __orio_perftest24.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest24.exe  
Program Test Output: 
{'[1, 4, 0, 2, 0, 3, 0, 1, 0, 0, 12, 4, 1, 0, 1, 1, 1, 1]' : 0.368026}
{'[1, 4, 0, 2, 0, 3, 0, 1, 0, 0, 12, 4, 1, 0, 1, 1, 1, 1]' : 0.36157}
{'[1, 4, 0, 2, 0, 3, 0, 1, 0, 0, 12, 4, 1, 0, 1, 1, 1, 1]' : 0.361485}
{'[1, 4, 0, 2, 0, 3, 0, 1, 0, 0, 12, 4, 1, 0, 1, 1, 1, 1]' : 0.361291}
{'[1, 4, 0, 2, 0, 3, 0, 1, 0, 0, 12, 4, 1, 0, 1, 1, 1, 1]' : 0.361311}
{'[1, 4, 0, 2, 0, 3, 0, 1, 0, 0, 12, 4, 1, 0, 1, 1, 1, 1]' : 0.361253}
{'[1, 4, 0, 2, 0, 3, 0, 1, 0, 0, 12, 4, 1, 0, 1, 1, 1, 1]' : 0.361302}
{'[1, 4, 0, 2, 0, 3, 0, 1, 0, 0, 12, 4, 1, 0, 1, 1, 1, 1]' : 0.366816}
{'[1, 4, 0, 2, 0, 3, 0, 1, 0, 0, 12, 4, 1, 0, 1, 1, 1, 1]' : 0.361326}
{'[1, 4, 0, 2, 0, 3, 0, 1, 0, 0, 12, 4, 1, 0, 1, 1, 1, 1]' : 0.364627}
{'[1, 4, 0, 2, 0, 3, 0, 1, 0, 0, 12, 4, 1, 0, 1, 1, 1, 1]' : 0.361634}
{'[1, 4, 0, 2, 0, 3, 0, 1, 0, 0, 12, 4, 1, 0, 1, 1, 1, 1]' : 0.361558}
{'[1, 4, 0, 2, 0, 3, 0, 1, 0, 0, 12, 4, 1, 0, 1, 1, 1, 1]' : 0.361619}
{'[1, 4, 0, 2, 0, 3, 0, 1, 0, 0, 12, 4, 1, 0, 1, 1, 1, 1]' : 0.361364}
{'[1, 4, 0, 2, 0, 3, 0, 1, 0, 0, 12, 4, 1, 0, 1, 1, 1, 1]' : 0.361403}
{'[1, 4, 0, 2, 0, 3, 0, 1, 0, 0, 12, 4, 1, 0, 1, 1, 1, 1]' : 0.361471}
{'[1, 4, 0, 2, 0, 3, 0, 1, 0, 0, 12, 4, 1, 0, 1, 1, 1, 1]' : 0.361335}
{'[1, 4, 0, 2, 0, 3, 0, 1, 0, 0, 12, 4, 1, 0, 1, 1, 1, 1]' : 0.361561}
{'[1, 4, 0, 2, 0, 3, 0, 1, 0, 0, 12, 4, 1, 0, 1, 1, 1, 1]' : 0.36177}
{'[1, 4, 0, 2, 0, 3, 0, 1, 0, 0, 12, 4, 1, 0, 1, 1, 1, 1]' : 0.361345}
{'[1, 4, 0, 2, 0, 3, 0, 1, 0, 0, 12, 4, 1, 0, 1, 1, 1, 1]' : 0.366337}
{'[1, 4, 0, 2, 0, 3, 0, 1, 0, 0, 12, 4, 1, 0, 1, 1, 1, 1]' : 0.361213}
{'[1, 4, 0, 2, 0, 3, 0, 1, 0, 0, 12, 4, 1, 0, 1, 1, 1, 1]' : 0.361355}
{'[1, 4, 0, 2, 0, 3, 0, 1, 0, 0, 12, 4, 1, 0, 1, 1, 1, 1]' : 0.370302}
{'[1, 4, 0, 2, 0, 3, 0, 1, 0, 0, 12, 4, 1, 0, 1, 1, 1, 1]' : 0.364958}
{'[1, 4, 0, 2, 0, 3, 0, 1, 0, 0, 12, 4, 1, 0, 1, 1, 1, 1]' : 0.364926}
{'[1, 4, 0, 2, 0, 3, 0, 1, 0, 0, 12, 4, 1, 0, 1, 1, 1, 1]' : 0.361323}
{'[1, 4, 0, 2, 0, 3, 0, 1, 0, 0, 12, 4, 1, 0, 1, 1, 1, 1]' : 0.361638}
{'[1, 4, 0, 2, 0, 3, 0, 1, 0, 0, 12, 4, 1, 0, 1, 1, 1, 1]' : 0.361746}
{'[1, 4, 0, 2, 0, 3, 0, 1, 0, 0, 12, 4, 1, 0, 1, 1, 1, 1]' : 0.36191}

out:
 ["{'[1, 4, 0, 2, 0, 3, 0, 1, 0, 0, 12, 4, 1, 0, 1, 1, 1, 1]' : 0.368026}", "{'[1, 4, 0, 2, 0, 3, 0, 1, 0, 0, 12, 4, 1, 0, 1, 1, 1, 1]' : 0.36157}", "{'[1, 4, 0, 2, 0, 3, 0, 1, 0, 0, 12, 4, 1, 0, 1, 1, 1, 1]' : 0.361485}", "{'[1, 4, 0, 2, 0, 3, 0, 1, 0, 0, 12, 4, 1, 0, 1, 1, 1, 1]' : 0.361291}", "{'[1, 4, 0, 2, 0, 3, 0, 1, 0, 0, 12, 4, 1, 0, 1, 1, 1, 1]' : 0.361311}", "{'[1, 4, 0, 2, 0, 3, 0, 1, 0, 0, 12, 4, 1, 0, 1, 1, 1, 1]' : 0.361253}", "{'[1, 4, 0, 2, 0, 3, 0, 1, 0, 0, 12, 4, 1, 0, 1, 1, 1, 1]' : 0.361302}", "{'[1, 4, 0, 2, 0, 3, 0, 1, 0, 0, 12, 4, 1, 0, 1, 1, 1, 1]' : 0.366816}", "{'[1, 4, 0, 2, 0, 3, 0, 1, 0, 0, 12, 4, 1, 0, 1, 1, 1, 1]' : 0.361326}", "{'[1, 4, 0, 2, 0, 3, 0, 1, 0, 0, 12, 4, 1, 0, 1, 1, 1, 1]' : 0.364627}", "{'[1, 4, 0, 2, 0, 3, 0, 1, 0, 0, 12, 4, 1, 0, 1, 1, 1, 1]' : 0.361634}", "{'[1, 4, 0, 2, 0, 3, 0, 1, 0, 0, 12, 4, 1, 0, 1, 1, 1, 1]' : 0.361558}", "{'[1, 4, 0, 2, 0, 3, 0, 1, 0, 0, 12, 4, 1, 0, 1, 1, 1, 1]' : 0.361619}", "{'[1, 4, 0, 2, 0, 3, 0, 1, 0, 0, 12, 4, 1, 0, 1, 1, 1, 1]' : 0.361364}", "{'[1, 4, 0, 2, 0, 3, 0, 1, 0, 0, 12, 4, 1, 0, 1, 1, 1, 1]' : 0.361403}", "{'[1, 4, 0, 2, 0, 3, 0, 1, 0, 0, 12, 4, 1, 0, 1, 1, 1, 1]' : 0.361471}", "{'[1, 4, 0, 2, 0, 3, 0, 1, 0, 0, 12, 4, 1, 0, 1, 1, 1, 1]' : 0.361335}", "{'[1, 4, 0, 2, 0, 3, 0, 1, 0, 0, 12, 4, 1, 0, 1, 1, 1, 1]' : 0.361561}", "{'[1, 4, 0, 2, 0, 3, 0, 1, 0, 0, 12, 4, 1, 0, 1, 1, 1, 1]' : 0.36177}", "{'[1, 4, 0, 2, 0, 3, 0, 1, 0, 0, 12, 4, 1, 0, 1, 1, 1, 1]' : 0.361345}", "{'[1, 4, 0, 2, 0, 3, 0, 1, 0, 0, 12, 4, 1, 0, 1, 1, 1, 1]' : 0.366337}", "{'[1, 4, 0, 2, 0, 3, 0, 1, 0, 0, 12, 4, 1, 0, 1, 1, 1, 1]' : 0.361213}", "{'[1, 4, 0, 2, 0, 3, 0, 1, 0, 0, 12, 4, 1, 0, 1, 1, 1, 1]' : 0.361355}", "{'[1, 4, 0, 2, 0, 3, 0, 1, 0, 0, 12, 4, 1, 0, 1, 1, 1, 1]' : 0.370302}", "{'[1, 4, 0, 2, 0, 3, 0, 1, 0, 0, 12, 4, 1, 0, 1, 1, 1, 1]' : 0.364958}", "{'[1, 4, 0, 2, 0, 3, 0, 1, 0, 0, 12, 4, 1, 0, 1, 1, 1, 1]' : 0.364926}", "{'[1, 4, 0, 2, 0, 3, 0, 1, 0, 0, 12, 4, 1, 0, 1, 1, 1, 1]' : 0.361323}", "{'[1, 4, 0, 2, 0, 3, 0, 1, 0, 0, 12, 4, 1, 0, 1, 1, 1, 1]' : 0.361638}", "{'[1, 4, 0, 2, 0, 3, 0, 1, 0, 0, 12, 4, 1, 0, 1, 1, 1, 1]' : 0.361746}", "{'[1, 4, 0, 2, 0, 3, 0, 1, 0, 0, 12, 4, 1, 0, 1, 1, 1, 1]' : 0.36191}"]
returning from 'run': {'[1, 4, 0, 2, 0, 3, 0, 1, 0, 0, 12, 4, 1, 0, 1, 1, 1, 1]': ([0.368026, 0.36157, 0.361485, 0.361291, 0.361311, 0.361253, 0.361302, 0.366816, 0.361326, 0.364627, 0.361634, 0.361558, 0.361619, 0.361364, 0.361403, 0.361471, 0.361335, 0.361561, 0.36177, 0.361345, 0.366337, 0.361213, 0.361355, 0.370302, 0.364958, 0.364926, 0.361323, 0.361638, 0.361746, 0.36191], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 4, 0, 2, 0, 3, 0, 1, 0, 0, 12, 4, 1, 0, 1, 1, 1, 1]': ([0.368026, 0.36157, 0.361485, 0.361291, 0.361311, 0.361253, 0.361302, 0.366816, 0.361326, 0.364627, 0.361634, 0.361558, 0.361619, 0.361364, 0.361403, 0.361471, 0.361335, 0.361561, 0.36177, 0.361345, 0.366337, 0.361213, 0.361355, 0.370302, 0.364958, 0.364926, 0.361323, 0.361638, 0.361746, 0.36191], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	31
        Max loop nest depth: 	6
        Additions: 		459
        Multiplications: 	90
        Divisions: 		0
        Logical: 		0
        Reads: 			847
        Writes: 		136
        Comparisons:		31
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest25.exe __orio_perftest25.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest25.exe  
Program Test Output: 
{'[6, 1, 4, 5, 0, 5, 1, 1, 3, 3, 0, 7, 0, 0, 1, 0, 0, 1]' : 0.465289}
{'[6, 1, 4, 5, 0, 5, 1, 1, 3, 3, 0, 7, 0, 0, 1, 0, 0, 1]' : 0.465045}
{'[6, 1, 4, 5, 0, 5, 1, 1, 3, 3, 0, 7, 0, 0, 1, 0, 0, 1]' : 0.465301}
{'[6, 1, 4, 5, 0, 5, 1, 1, 3, 3, 0, 7, 0, 0, 1, 0, 0, 1]' : 0.46506}
{'[6, 1, 4, 5, 0, 5, 1, 1, 3, 3, 0, 7, 0, 0, 1, 0, 0, 1]' : 0.466002}
{'[6, 1, 4, 5, 0, 5, 1, 1, 3, 3, 0, 7, 0, 0, 1, 0, 0, 1]' : 0.464868}
{'[6, 1, 4, 5, 0, 5, 1, 1, 3, 3, 0, 7, 0, 0, 1, 0, 0, 1]' : 0.467167}
{'[6, 1, 4, 5, 0, 5, 1, 1, 3, 3, 0, 7, 0, 0, 1, 0, 0, 1]' : 0.470241}
{'[6, 1, 4, 5, 0, 5, 1, 1, 3, 3, 0, 7, 0, 0, 1, 0, 0, 1]' : 0.465234}
{'[6, 1, 4, 5, 0, 5, 1, 1, 3, 3, 0, 7, 0, 0, 1, 0, 0, 1]' : 0.464187}
{'[6, 1, 4, 5, 0, 5, 1, 1, 3, 3, 0, 7, 0, 0, 1, 0, 0, 1]' : 0.466156}
{'[6, 1, 4, 5, 0, 5, 1, 1, 3, 3, 0, 7, 0, 0, 1, 0, 0, 1]' : 0.464814}
{'[6, 1, 4, 5, 0, 5, 1, 1, 3, 3, 0, 7, 0, 0, 1, 0, 0, 1]' : 0.464706}
{'[6, 1, 4, 5, 0, 5, 1, 1, 3, 3, 0, 7, 0, 0, 1, 0, 0, 1]' : 0.466441}
{'[6, 1, 4, 5, 0, 5, 1, 1, 3, 3, 0, 7, 0, 0, 1, 0, 0, 1]' : 0.464599}
{'[6, 1, 4, 5, 0, 5, 1, 1, 3, 3, 0, 7, 0, 0, 1, 0, 0, 1]' : 0.464885}
{'[6, 1, 4, 5, 0, 5, 1, 1, 3, 3, 0, 7, 0, 0, 1, 0, 0, 1]' : 0.464852}
{'[6, 1, 4, 5, 0, 5, 1, 1, 3, 3, 0, 7, 0, 0, 1, 0, 0, 1]' : 0.470928}
{'[6, 1, 4, 5, 0, 5, 1, 1, 3, 3, 0, 7, 0, 0, 1, 0, 0, 1]' : 0.464228}
{'[6, 1, 4, 5, 0, 5, 1, 1, 3, 3, 0, 7, 0, 0, 1, 0, 0, 1]' : 0.464861}
{'[6, 1, 4, 5, 0, 5, 1, 1, 3, 3, 0, 7, 0, 0, 1, 0, 0, 1]' : 0.464225}
{'[6, 1, 4, 5, 0, 5, 1, 1, 3, 3, 0, 7, 0, 0, 1, 0, 0, 1]' : 0.466198}
{'[6, 1, 4, 5, 0, 5, 1, 1, 3, 3, 0, 7, 0, 0, 1, 0, 0, 1]' : 0.464914}
{'[6, 1, 4, 5, 0, 5, 1, 1, 3, 3, 0, 7, 0, 0, 1, 0, 0, 1]' : 0.465078}
{'[6, 1, 4, 5, 0, 5, 1, 1, 3, 3, 0, 7, 0, 0, 1, 0, 0, 1]' : 0.464884}
{'[6, 1, 4, 5, 0, 5, 1, 1, 3, 3, 0, 7, 0, 0, 1, 0, 0, 1]' : 0.465013}
{'[6, 1, 4, 5, 0, 5, 1, 1, 3, 3, 0, 7, 0, 0, 1, 0, 0, 1]' : 0.465049}
{'[6, 1, 4, 5, 0, 5, 1, 1, 3, 3, 0, 7, 0, 0, 1, 0, 0, 1]' : 0.464615}
{'[6, 1, 4, 5, 0, 5, 1, 1, 3, 3, 0, 7, 0, 0, 1, 0, 0, 1]' : 0.464697}
{'[6, 1, 4, 5, 0, 5, 1, 1, 3, 3, 0, 7, 0, 0, 1, 0, 0, 1]' : 0.46523}

out:
 ["{'[6, 1, 4, 5, 0, 5, 1, 1, 3, 3, 0, 7, 0, 0, 1, 0, 0, 1]' : 0.465289}", "{'[6, 1, 4, 5, 0, 5, 1, 1, 3, 3, 0, 7, 0, 0, 1, 0, 0, 1]' : 0.465045}", "{'[6, 1, 4, 5, 0, 5, 1, 1, 3, 3, 0, 7, 0, 0, 1, 0, 0, 1]' : 0.465301}", "{'[6, 1, 4, 5, 0, 5, 1, 1, 3, 3, 0, 7, 0, 0, 1, 0, 0, 1]' : 0.46506}", "{'[6, 1, 4, 5, 0, 5, 1, 1, 3, 3, 0, 7, 0, 0, 1, 0, 0, 1]' : 0.466002}", "{'[6, 1, 4, 5, 0, 5, 1, 1, 3, 3, 0, 7, 0, 0, 1, 0, 0, 1]' : 0.464868}", "{'[6, 1, 4, 5, 0, 5, 1, 1, 3, 3, 0, 7, 0, 0, 1, 0, 0, 1]' : 0.467167}", "{'[6, 1, 4, 5, 0, 5, 1, 1, 3, 3, 0, 7, 0, 0, 1, 0, 0, 1]' : 0.470241}", "{'[6, 1, 4, 5, 0, 5, 1, 1, 3, 3, 0, 7, 0, 0, 1, 0, 0, 1]' : 0.465234}", "{'[6, 1, 4, 5, 0, 5, 1, 1, 3, 3, 0, 7, 0, 0, 1, 0, 0, 1]' : 0.464187}", "{'[6, 1, 4, 5, 0, 5, 1, 1, 3, 3, 0, 7, 0, 0, 1, 0, 0, 1]' : 0.466156}", "{'[6, 1, 4, 5, 0, 5, 1, 1, 3, 3, 0, 7, 0, 0, 1, 0, 0, 1]' : 0.464814}", "{'[6, 1, 4, 5, 0, 5, 1, 1, 3, 3, 0, 7, 0, 0, 1, 0, 0, 1]' : 0.464706}", "{'[6, 1, 4, 5, 0, 5, 1, 1, 3, 3, 0, 7, 0, 0, 1, 0, 0, 1]' : 0.466441}", "{'[6, 1, 4, 5, 0, 5, 1, 1, 3, 3, 0, 7, 0, 0, 1, 0, 0, 1]' : 0.464599}", "{'[6, 1, 4, 5, 0, 5, 1, 1, 3, 3, 0, 7, 0, 0, 1, 0, 0, 1]' : 0.464885}", "{'[6, 1, 4, 5, 0, 5, 1, 1, 3, 3, 0, 7, 0, 0, 1, 0, 0, 1]' : 0.464852}", "{'[6, 1, 4, 5, 0, 5, 1, 1, 3, 3, 0, 7, 0, 0, 1, 0, 0, 1]' : 0.470928}", "{'[6, 1, 4, 5, 0, 5, 1, 1, 3, 3, 0, 7, 0, 0, 1, 0, 0, 1]' : 0.464228}", "{'[6, 1, 4, 5, 0, 5, 1, 1, 3, 3, 0, 7, 0, 0, 1, 0, 0, 1]' : 0.464861}", "{'[6, 1, 4, 5, 0, 5, 1, 1, 3, 3, 0, 7, 0, 0, 1, 0, 0, 1]' : 0.464225}", "{'[6, 1, 4, 5, 0, 5, 1, 1, 3, 3, 0, 7, 0, 0, 1, 0, 0, 1]' : 0.466198}", "{'[6, 1, 4, 5, 0, 5, 1, 1, 3, 3, 0, 7, 0, 0, 1, 0, 0, 1]' : 0.464914}", "{'[6, 1, 4, 5, 0, 5, 1, 1, 3, 3, 0, 7, 0, 0, 1, 0, 0, 1]' : 0.465078}", "{'[6, 1, 4, 5, 0, 5, 1, 1, 3, 3, 0, 7, 0, 0, 1, 0, 0, 1]' : 0.464884}", "{'[6, 1, 4, 5, 0, 5, 1, 1, 3, 3, 0, 7, 0, 0, 1, 0, 0, 1]' : 0.465013}", "{'[6, 1, 4, 5, 0, 5, 1, 1, 3, 3, 0, 7, 0, 0, 1, 0, 0, 1]' : 0.465049}", "{'[6, 1, 4, 5, 0, 5, 1, 1, 3, 3, 0, 7, 0, 0, 1, 0, 0, 1]' : 0.464615}", "{'[6, 1, 4, 5, 0, 5, 1, 1, 3, 3, 0, 7, 0, 0, 1, 0, 0, 1]' : 0.464697}", "{'[6, 1, 4, 5, 0, 5, 1, 1, 3, 3, 0, 7, 0, 0, 1, 0, 0, 1]' : 0.46523}"]
returning from 'run': {'[6, 1, 4, 5, 0, 5, 1, 1, 3, 3, 0, 7, 0, 0, 1, 0, 0, 1]': ([0.465289, 0.465045, 0.465301, 0.46506, 0.466002, 0.464868, 0.467167, 0.470241, 0.465234, 0.464187, 0.466156, 0.464814, 0.464706, 0.466441, 0.464599, 0.464885, 0.464852, 0.470928, 0.464228, 0.464861, 0.464225, 0.466198, 0.464914, 0.465078, 0.464884, 0.465013, 0.465049, 0.464615, 0.464697, 0.46523], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 1, 4, 5, 0, 5, 1, 1, 3, 3, 0, 7, 0, 0, 1, 0, 0, 1]': ([0.465289, 0.465045, 0.465301, 0.46506, 0.466002, 0.464868, 0.467167, 0.470241, 0.465234, 0.464187, 0.466156, 0.464814, 0.464706, 0.466441, 0.464599, 0.464885, 0.464852, 0.470928, 0.464228, 0.464861, 0.464225, 0.466198, 0.464914, 0.465078, 0.464884, 0.465013, 0.465049, 0.464615, 0.464697, 0.46523], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	92
        Max loop nest depth: 	6
        Additions: 		5321
        Multiplications: 	1260
        Divisions: 		0
        Logical: 		0
        Reads: 			8092
        Writes: 		904
        Comparisons:		92
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest26.exe __orio_perftest26.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest26.exe  
Program Test Output: 
{'[1, 3, 3, 1, 5, 5, 1, 1, 29, 11, 20, 0, 1, 0, 1, 0, 1, 0]' : 0.372342}
{'[1, 3, 3, 1, 5, 5, 1, 1, 29, 11, 20, 0, 1, 0, 1, 0, 1, 0]' : 0.366549}
{'[1, 3, 3, 1, 5, 5, 1, 1, 29, 11, 20, 0, 1, 0, 1, 0, 1, 0]' : 0.365897}
{'[1, 3, 3, 1, 5, 5, 1, 1, 29, 11, 20, 0, 1, 0, 1, 0, 1, 0]' : 0.366749}
{'[1, 3, 3, 1, 5, 5, 1, 1, 29, 11, 20, 0, 1, 0, 1, 0, 1, 0]' : 0.366473}
{'[1, 3, 3, 1, 5, 5, 1, 1, 29, 11, 20, 0, 1, 0, 1, 0, 1, 0]' : 0.365825}
{'[1, 3, 3, 1, 5, 5, 1, 1, 29, 11, 20, 0, 1, 0, 1, 0, 1, 0]' : 0.386181}
{'[1, 3, 3, 1, 5, 5, 1, 1, 29, 11, 20, 0, 1, 0, 1, 0, 1, 0]' : 0.375268}
{'[1, 3, 3, 1, 5, 5, 1, 1, 29, 11, 20, 0, 1, 0, 1, 0, 1, 0]' : 0.366034}
{'[1, 3, 3, 1, 5, 5, 1, 1, 29, 11, 20, 0, 1, 0, 1, 0, 1, 0]' : 0.369297}
{'[1, 3, 3, 1, 5, 5, 1, 1, 29, 11, 20, 0, 1, 0, 1, 0, 1, 0]' : 0.366072}
{'[1, 3, 3, 1, 5, 5, 1, 1, 29, 11, 20, 0, 1, 0, 1, 0, 1, 0]' : 0.366627}
{'[1, 3, 3, 1, 5, 5, 1, 1, 29, 11, 20, 0, 1, 0, 1, 0, 1, 0]' : 0.366462}
{'[1, 3, 3, 1, 5, 5, 1, 1, 29, 11, 20, 0, 1, 0, 1, 0, 1, 0]' : 0.36616}
{'[1, 3, 3, 1, 5, 5, 1, 1, 29, 11, 20, 0, 1, 0, 1, 0, 1, 0]' : 0.365675}
{'[1, 3, 3, 1, 5, 5, 1, 1, 29, 11, 20, 0, 1, 0, 1, 0, 1, 0]' : 0.369569}
{'[1, 3, 3, 1, 5, 5, 1, 1, 29, 11, 20, 0, 1, 0, 1, 0, 1, 0]' : 0.372011}
{'[1, 3, 3, 1, 5, 5, 1, 1, 29, 11, 20, 0, 1, 0, 1, 0, 1, 0]' : 0.373209}
{'[1, 3, 3, 1, 5, 5, 1, 1, 29, 11, 20, 0, 1, 0, 1, 0, 1, 0]' : 0.366373}
{'[1, 3, 3, 1, 5, 5, 1, 1, 29, 11, 20, 0, 1, 0, 1, 0, 1, 0]' : 0.365872}
{'[1, 3, 3, 1, 5, 5, 1, 1, 29, 11, 20, 0, 1, 0, 1, 0, 1, 0]' : 0.370931}
{'[1, 3, 3, 1, 5, 5, 1, 1, 29, 11, 20, 0, 1, 0, 1, 0, 1, 0]' : 0.366306}
{'[1, 3, 3, 1, 5, 5, 1, 1, 29, 11, 20, 0, 1, 0, 1, 0, 1, 0]' : 0.365837}
{'[1, 3, 3, 1, 5, 5, 1, 1, 29, 11, 20, 0, 1, 0, 1, 0, 1, 0]' : 0.365882}
{'[1, 3, 3, 1, 5, 5, 1, 1, 29, 11, 20, 0, 1, 0, 1, 0, 1, 0]' : 0.365847}
{'[1, 3, 3, 1, 5, 5, 1, 1, 29, 11, 20, 0, 1, 0, 1, 0, 1, 0]' : 0.365853}
{'[1, 3, 3, 1, 5, 5, 1, 1, 29, 11, 20, 0, 1, 0, 1, 0, 1, 0]' : 0.365872}
{'[1, 3, 3, 1, 5, 5, 1, 1, 29, 11, 20, 0, 1, 0, 1, 0, 1, 0]' : 0.365875}
{'[1, 3, 3, 1, 5, 5, 1, 1, 29, 11, 20, 0, 1, 0, 1, 0, 1, 0]' : 0.365617}
{'[1, 3, 3, 1, 5, 5, 1, 1, 29, 11, 20, 0, 1, 0, 1, 0, 1, 0]' : 0.365925}

out:
 ["{'[1, 3, 3, 1, 5, 5, 1, 1, 29, 11, 20, 0, 1, 0, 1, 0, 1, 0]' : 0.372342}", "{'[1, 3, 3, 1, 5, 5, 1, 1, 29, 11, 20, 0, 1, 0, 1, 0, 1, 0]' : 0.366549}", "{'[1, 3, 3, 1, 5, 5, 1, 1, 29, 11, 20, 0, 1, 0, 1, 0, 1, 0]' : 0.365897}", "{'[1, 3, 3, 1, 5, 5, 1, 1, 29, 11, 20, 0, 1, 0, 1, 0, 1, 0]' : 0.366749}", "{'[1, 3, 3, 1, 5, 5, 1, 1, 29, 11, 20, 0, 1, 0, 1, 0, 1, 0]' : 0.366473}", "{'[1, 3, 3, 1, 5, 5, 1, 1, 29, 11, 20, 0, 1, 0, 1, 0, 1, 0]' : 0.365825}", "{'[1, 3, 3, 1, 5, 5, 1, 1, 29, 11, 20, 0, 1, 0, 1, 0, 1, 0]' : 0.386181}", "{'[1, 3, 3, 1, 5, 5, 1, 1, 29, 11, 20, 0, 1, 0, 1, 0, 1, 0]' : 0.375268}", "{'[1, 3, 3, 1, 5, 5, 1, 1, 29, 11, 20, 0, 1, 0, 1, 0, 1, 0]' : 0.366034}", "{'[1, 3, 3, 1, 5, 5, 1, 1, 29, 11, 20, 0, 1, 0, 1, 0, 1, 0]' : 0.369297}", "{'[1, 3, 3, 1, 5, 5, 1, 1, 29, 11, 20, 0, 1, 0, 1, 0, 1, 0]' : 0.366072}", "{'[1, 3, 3, 1, 5, 5, 1, 1, 29, 11, 20, 0, 1, 0, 1, 0, 1, 0]' : 0.366627}", "{'[1, 3, 3, 1, 5, 5, 1, 1, 29, 11, 20, 0, 1, 0, 1, 0, 1, 0]' : 0.366462}", "{'[1, 3, 3, 1, 5, 5, 1, 1, 29, 11, 20, 0, 1, 0, 1, 0, 1, 0]' : 0.36616}", "{'[1, 3, 3, 1, 5, 5, 1, 1, 29, 11, 20, 0, 1, 0, 1, 0, 1, 0]' : 0.365675}", "{'[1, 3, 3, 1, 5, 5, 1, 1, 29, 11, 20, 0, 1, 0, 1, 0, 1, 0]' : 0.369569}", "{'[1, 3, 3, 1, 5, 5, 1, 1, 29, 11, 20, 0, 1, 0, 1, 0, 1, 0]' : 0.372011}", "{'[1, 3, 3, 1, 5, 5, 1, 1, 29, 11, 20, 0, 1, 0, 1, 0, 1, 0]' : 0.373209}", "{'[1, 3, 3, 1, 5, 5, 1, 1, 29, 11, 20, 0, 1, 0, 1, 0, 1, 0]' : 0.366373}", "{'[1, 3, 3, 1, 5, 5, 1, 1, 29, 11, 20, 0, 1, 0, 1, 0, 1, 0]' : 0.365872}", "{'[1, 3, 3, 1, 5, 5, 1, 1, 29, 11, 20, 0, 1, 0, 1, 0, 1, 0]' : 0.370931}", "{'[1, 3, 3, 1, 5, 5, 1, 1, 29, 11, 20, 0, 1, 0, 1, 0, 1, 0]' : 0.366306}", "{'[1, 3, 3, 1, 5, 5, 1, 1, 29, 11, 20, 0, 1, 0, 1, 0, 1, 0]' : 0.365837}", "{'[1, 3, 3, 1, 5, 5, 1, 1, 29, 11, 20, 0, 1, 0, 1, 0, 1, 0]' : 0.365882}", "{'[1, 3, 3, 1, 5, 5, 1, 1, 29, 11, 20, 0, 1, 0, 1, 0, 1, 0]' : 0.365847}", "{'[1, 3, 3, 1, 5, 5, 1, 1, 29, 11, 20, 0, 1, 0, 1, 0, 1, 0]' : 0.365853}", "{'[1, 3, 3, 1, 5, 5, 1, 1, 29, 11, 20, 0, 1, 0, 1, 0, 1, 0]' : 0.365872}", "{'[1, 3, 3, 1, 5, 5, 1, 1, 29, 11, 20, 0, 1, 0, 1, 0, 1, 0]' : 0.365875}", "{'[1, 3, 3, 1, 5, 5, 1, 1, 29, 11, 20, 0, 1, 0, 1, 0, 1, 0]' : 0.365617}", "{'[1, 3, 3, 1, 5, 5, 1, 1, 29, 11, 20, 0, 1, 0, 1, 0, 1, 0]' : 0.365925}"]
returning from 'run': {'[1, 3, 3, 1, 5, 5, 1, 1, 29, 11, 20, 0, 1, 0, 1, 0, 1, 0]': ([0.372342, 0.366549, 0.365897, 0.366749, 0.366473, 0.365825, 0.386181, 0.375268, 0.366034, 0.369297, 0.366072, 0.366627, 0.366462, 0.36616, 0.365675, 0.369569, 0.372011, 0.373209, 0.366373, 0.365872, 0.370931, 0.366306, 0.365837, 0.365882, 0.365847, 0.365853, 0.365872, 0.365875, 0.365617, 0.365925], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 3, 3, 1, 5, 5, 1, 1, 29, 11, 20, 0, 1, 0, 1, 0, 1, 0]': ([0.372342, 0.366549, 0.365897, 0.366749, 0.366473, 0.365825, 0.386181, 0.375268, 0.366034, 0.369297, 0.366072, 0.366627, 0.366462, 0.36616, 0.365675, 0.369569, 0.372011, 0.373209, 0.366373, 0.365872, 0.370931, 0.366306, 0.365837, 0.365882, 0.365847, 0.365853, 0.365872, 0.365875, 0.365617, 0.365925], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = kkk
Code stats:
        Number of loops: 	99
        Max loop nest depth: 	5
        Additions: 		4749
        Multiplications: 	1716
        Divisions: 		0
        Logical: 		0
        Reads: 			8233
        Writes: 		1249
        Comparisons:		99
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest27.exe __orio_perftest27.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest27.exe  
Program Test Output: 
{'[5, 1, 4, 0, 1, 2, 1, 0, 2, 23, 15, 0, 1, 0, 1, 1, 0, 0]' : 0.311632}
{'[5, 1, 4, 0, 1, 2, 1, 0, 2, 23, 15, 0, 1, 0, 1, 1, 0, 0]' : 0.311514}
{'[5, 1, 4, 0, 1, 2, 1, 0, 2, 23, 15, 0, 1, 0, 1, 1, 0, 0]' : 0.311362}
{'[5, 1, 4, 0, 1, 2, 1, 0, 2, 23, 15, 0, 1, 0, 1, 1, 0, 0]' : 0.312546}
{'[5, 1, 4, 0, 1, 2, 1, 0, 2, 23, 15, 0, 1, 0, 1, 1, 0, 0]' : 0.311884}
{'[5, 1, 4, 0, 1, 2, 1, 0, 2, 23, 15, 0, 1, 0, 1, 1, 0, 0]' : 0.31183}
{'[5, 1, 4, 0, 1, 2, 1, 0, 2, 23, 15, 0, 1, 0, 1, 1, 0, 0]' : 0.311912}
{'[5, 1, 4, 0, 1, 2, 1, 0, 2, 23, 15, 0, 1, 0, 1, 1, 0, 0]' : 0.31205}
{'[5, 1, 4, 0, 1, 2, 1, 0, 2, 23, 15, 0, 1, 0, 1, 1, 0, 0]' : 0.311743}
{'[5, 1, 4, 0, 1, 2, 1, 0, 2, 23, 15, 0, 1, 0, 1, 1, 0, 0]' : 0.311957}
{'[5, 1, 4, 0, 1, 2, 1, 0, 2, 23, 15, 0, 1, 0, 1, 1, 0, 0]' : 0.311969}
{'[5, 1, 4, 0, 1, 2, 1, 0, 2, 23, 15, 0, 1, 0, 1, 1, 0, 0]' : 0.311503}
{'[5, 1, 4, 0, 1, 2, 1, 0, 2, 23, 15, 0, 1, 0, 1, 1, 0, 0]' : 0.312706}
{'[5, 1, 4, 0, 1, 2, 1, 0, 2, 23, 15, 0, 1, 0, 1, 1, 0, 0]' : 0.312234}
{'[5, 1, 4, 0, 1, 2, 1, 0, 2, 23, 15, 0, 1, 0, 1, 1, 0, 0]' : 0.311629}
{'[5, 1, 4, 0, 1, 2, 1, 0, 2, 23, 15, 0, 1, 0, 1, 1, 0, 0]' : 0.311971}
{'[5, 1, 4, 0, 1, 2, 1, 0, 2, 23, 15, 0, 1, 0, 1, 1, 0, 0]' : 0.31173}
{'[5, 1, 4, 0, 1, 2, 1, 0, 2, 23, 15, 0, 1, 0, 1, 1, 0, 0]' : 0.311918}
{'[5, 1, 4, 0, 1, 2, 1, 0, 2, 23, 15, 0, 1, 0, 1, 1, 0, 0]' : 0.311596}
{'[5, 1, 4, 0, 1, 2, 1, 0, 2, 23, 15, 0, 1, 0, 1, 1, 0, 0]' : 0.311659}
{'[5, 1, 4, 0, 1, 2, 1, 0, 2, 23, 15, 0, 1, 0, 1, 1, 0, 0]' : 0.311707}
{'[5, 1, 4, 0, 1, 2, 1, 0, 2, 23, 15, 0, 1, 0, 1, 1, 0, 0]' : 0.312054}
{'[5, 1, 4, 0, 1, 2, 1, 0, 2, 23, 15, 0, 1, 0, 1, 1, 0, 0]' : 0.311662}
{'[5, 1, 4, 0, 1, 2, 1, 0, 2, 23, 15, 0, 1, 0, 1, 1, 0, 0]' : 0.31218}
{'[5, 1, 4, 0, 1, 2, 1, 0, 2, 23, 15, 0, 1, 0, 1, 1, 0, 0]' : 0.311624}
{'[5, 1, 4, 0, 1, 2, 1, 0, 2, 23, 15, 0, 1, 0, 1, 1, 0, 0]' : 0.312079}
{'[5, 1, 4, 0, 1, 2, 1, 0, 2, 23, 15, 0, 1, 0, 1, 1, 0, 0]' : 0.311628}
{'[5, 1, 4, 0, 1, 2, 1, 0, 2, 23, 15, 0, 1, 0, 1, 1, 0, 0]' : 0.311467}
{'[5, 1, 4, 0, 1, 2, 1, 0, 2, 23, 15, 0, 1, 0, 1, 1, 0, 0]' : 0.313049}
{'[5, 1, 4, 0, 1, 2, 1, 0, 2, 23, 15, 0, 1, 0, 1, 1, 0, 0]' : 0.312107}

out:
 ["{'[5, 1, 4, 0, 1, 2, 1, 0, 2, 23, 15, 0, 1, 0, 1, 1, 0, 0]' : 0.311632}", "{'[5, 1, 4, 0, 1, 2, 1, 0, 2, 23, 15, 0, 1, 0, 1, 1, 0, 0]' : 0.311514}", "{'[5, 1, 4, 0, 1, 2, 1, 0, 2, 23, 15, 0, 1, 0, 1, 1, 0, 0]' : 0.311362}", "{'[5, 1, 4, 0, 1, 2, 1, 0, 2, 23, 15, 0, 1, 0, 1, 1, 0, 0]' : 0.312546}", "{'[5, 1, 4, 0, 1, 2, 1, 0, 2, 23, 15, 0, 1, 0, 1, 1, 0, 0]' : 0.311884}", "{'[5, 1, 4, 0, 1, 2, 1, 0, 2, 23, 15, 0, 1, 0, 1, 1, 0, 0]' : 0.31183}", "{'[5, 1, 4, 0, 1, 2, 1, 0, 2, 23, 15, 0, 1, 0, 1, 1, 0, 0]' : 0.311912}", "{'[5, 1, 4, 0, 1, 2, 1, 0, 2, 23, 15, 0, 1, 0, 1, 1, 0, 0]' : 0.31205}", "{'[5, 1, 4, 0, 1, 2, 1, 0, 2, 23, 15, 0, 1, 0, 1, 1, 0, 0]' : 0.311743}", "{'[5, 1, 4, 0, 1, 2, 1, 0, 2, 23, 15, 0, 1, 0, 1, 1, 0, 0]' : 0.311957}", "{'[5, 1, 4, 0, 1, 2, 1, 0, 2, 23, 15, 0, 1, 0, 1, 1, 0, 0]' : 0.311969}", "{'[5, 1, 4, 0, 1, 2, 1, 0, 2, 23, 15, 0, 1, 0, 1, 1, 0, 0]' : 0.311503}", "{'[5, 1, 4, 0, 1, 2, 1, 0, 2, 23, 15, 0, 1, 0, 1, 1, 0, 0]' : 0.312706}", "{'[5, 1, 4, 0, 1, 2, 1, 0, 2, 23, 15, 0, 1, 0, 1, 1, 0, 0]' : 0.312234}", "{'[5, 1, 4, 0, 1, 2, 1, 0, 2, 23, 15, 0, 1, 0, 1, 1, 0, 0]' : 0.311629}", "{'[5, 1, 4, 0, 1, 2, 1, 0, 2, 23, 15, 0, 1, 0, 1, 1, 0, 0]' : 0.311971}", "{'[5, 1, 4, 0, 1, 2, 1, 0, 2, 23, 15, 0, 1, 0, 1, 1, 0, 0]' : 0.31173}", "{'[5, 1, 4, 0, 1, 2, 1, 0, 2, 23, 15, 0, 1, 0, 1, 1, 0, 0]' : 0.311918}", "{'[5, 1, 4, 0, 1, 2, 1, 0, 2, 23, 15, 0, 1, 0, 1, 1, 0, 0]' : 0.311596}", "{'[5, 1, 4, 0, 1, 2, 1, 0, 2, 23, 15, 0, 1, 0, 1, 1, 0, 0]' : 0.311659}", "{'[5, 1, 4, 0, 1, 2, 1, 0, 2, 23, 15, 0, 1, 0, 1, 1, 0, 0]' : 0.311707}", "{'[5, 1, 4, 0, 1, 2, 1, 0, 2, 23, 15, 0, 1, 0, 1, 1, 0, 0]' : 0.312054}", "{'[5, 1, 4, 0, 1, 2, 1, 0, 2, 23, 15, 0, 1, 0, 1, 1, 0, 0]' : 0.311662}", "{'[5, 1, 4, 0, 1, 2, 1, 0, 2, 23, 15, 0, 1, 0, 1, 1, 0, 0]' : 0.31218}", "{'[5, 1, 4, 0, 1, 2, 1, 0, 2, 23, 15, 0, 1, 0, 1, 1, 0, 0]' : 0.311624}", "{'[5, 1, 4, 0, 1, 2, 1, 0, 2, 23, 15, 0, 1, 0, 1, 1, 0, 0]' : 0.312079}", "{'[5, 1, 4, 0, 1, 2, 1, 0, 2, 23, 15, 0, 1, 0, 1, 1, 0, 0]' : 0.311628}", "{'[5, 1, 4, 0, 1, 2, 1, 0, 2, 23, 15, 0, 1, 0, 1, 1, 0, 0]' : 0.311467}", "{'[5, 1, 4, 0, 1, 2, 1, 0, 2, 23, 15, 0, 1, 0, 1, 1, 0, 0]' : 0.313049}", "{'[5, 1, 4, 0, 1, 2, 1, 0, 2, 23, 15, 0, 1, 0, 1, 1, 0, 0]' : 0.312107}"]
returning from 'run': {'[5, 1, 4, 0, 1, 2, 1, 0, 2, 23, 15, 0, 1, 0, 1, 1, 0, 0]': ([0.311632, 0.311514, 0.311362, 0.312546, 0.311884, 0.31183, 0.311912, 0.31205, 0.311743, 0.311957, 0.311969, 0.311503, 0.312706, 0.312234, 0.311629, 0.311971, 0.31173, 0.311918, 0.311596, 0.311659, 0.311707, 0.312054, 0.311662, 0.31218, 0.311624, 0.312079, 0.311628, 0.311467, 0.313049, 0.312107], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 1, 4, 0, 1, 2, 1, 0, 2, 23, 15, 0, 1, 0, 1, 1, 0, 0]': ([0.311632, 0.311514, 0.311362, 0.312546, 0.311884, 0.31183, 0.311912, 0.31205, 0.311743, 0.311957, 0.311969, 0.311503, 0.312706, 0.312234, 0.311629, 0.311971, 0.31173, 0.311918, 0.311596, 0.311659, 0.311707, 0.312054, 0.311662, 0.31218, 0.311624, 0.312079, 0.311628, 0.311467, 0.313049, 0.312107], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Result was on Database, Returning Now
Complete design, with measurements:
    T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
43     3    4    6    2    3    4       0       1    6   0  22   5    2    0
56     6    6    0    5    5    3       1       1   27  14  17   0    1    0
94     4    4    0    0    2    0       0       0   26  25   0  29    0    0
141    0    3    1    6    3    1       1       0   11   0  25  20    0    1
146    0    6    2    4    0    6       0       0   27  29   0   8    0    0
151    3    4    6    5    6    6       1       0   18   0   4   1    0    1
154    2    0    1    3    0    6       0       0   20  10   0  20    1    1
174    0    0    1    5    6    0       1       0    0  23   0   3    2    0
184    6    0    0    0    4    0       0       0   28   1  27   0    0    0
196    0    1    3    3    1    0       1       0    4  10   2   0    2    0
214    0    4    5    0    5    0       1       1    4  16   0   8    1    1
220    0    0    6    4    3    0       1       1   10   0   0  23    1    0
266    6    2    6    5    6    5       0       0    0   0  24  15    1    0
285    6    6    2    0    4    3       1       0   28   0  25   0    0    0
307    4    5    5    5    0    5       1       1    0   1   0  28    0    1
327    0    1    4    1    1    2       0       1    0  18   0  21    0    1
342    3    3    3    6    0    2       0       1    8   7   0   0    0    2
363    2    3    1    0    6    5       1       1   16   0  10  27    1    0
436    2    5    1    1    4    1       0       0    9   0   1   7    0    2
477    2    3    4    4    0    4       1       1   29  29   0  22    2    0
507    6    3    2    4    5    6       1       1    2  29   0  24    0    1
527    0    1    0    6    3    6       0       1   10   0  17   0    2    0
608    1    4    0    2    0    3       0       1    0   0  12   4    1    0
645    6    1    4    5    0    5       1       1    3   3   0   7    0    0
652    1    3    3    1    5    5       1       1   29  11  20   0    1    0
659    5    1    4    0    1    2       1       0    2  23  15   0    1    0
660    2    4    2    0    3    6       1       0    1  24  13   0    0    0
    RT_K SCR VEC1 VEC2 cost_mean
43     0   1    0    1 0.4644226
56     0   1    0    1 0.2755368
94     1   0    0    1 0.4166543
141    1   0    0    1 0.8069453
146    1   1    1    0 0.3664325
151    0   1    1    1 0.6655752
154    0   1    0    0 0.2674345
174    0   1    0    1 0.3292850
184    0   1    1    1 0.3656494
196    0   0    1    0 0.5316741
214    0   0    1    1 0.2530861
220    0   1    1    0 0.2098801
266    0   0    1    1 0.4240909
285    2   1    0    1 0.6890424
307    1   1    1    0 0.5160824
327    0   1    0    0 0.4273842
342    0   1    1    0 0.4665145
363    0   1    0    0 0.3374816
436    0   0    0    0 1.1010567
477    0   0    1    1 0.3677097
507    1   1    1    0 0.4444761
527    0   0    0    0 0.4088803
608    1   1    1    1 0.3626592
645    1   0    0    1 0.4654922
652    1   0    1    0 0.3680863
659    1   1    0    0 0.3118967
660    0   0    0    1 0.7505708

