
====== START ORIO ======

----- begin reading the source file: atax2.src1.c -----
----- finished reading the source file -----

----- begin parsing annotations -----
----- finished parsing annotations -----

----- begin optimizations -----
Search_Space         = 8.234e+13
Number_of_Parameters = 18
Numeric_Parameters   = 13
Binary_Parameters    = 05
['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
[[1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [False, True], [False, True], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 8, 32], [1, 8, 32], [1, 8, 32], [False, True], [False, True], [False, True]]

----- begin empirical tuning for problem size -----
 N = 10000
Parameters: {'ACOPY_x': [0, 2], 'ACOPY_y': [0, 2], 'RT_K': [0, 3], 'T1_I': [0, 7], 'T1_J': [0, 7], 'T1_K': [0, 7], 'U_K': [0, 30], 'U_J': [0, 30], 'U_I': [0, 30], 'U1_I': [0, 30], 'T2_K': [0, 7], 'T2_J': [0, 7], 'T2_I': [0, 7], 'VEC2': [0, 2], 'VEC1': [0, 2], 'RT_I': [0, 3], 'SCR': [0, 2], 'RT_J': [0, 3]}

----- begin random search -----
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Inverse Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Building seed search space (does not spend evaluations)
Using pre-generated space for this size
Starting DOPT-anova
Step 0
Full Model:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Fixed Factors: {}
Full data does not fit on budget
Computing D-Optimal Design
Updating Constraints
Updated Constraint: True and (((variable_ranges[variable_names.index(factors[3])][int(round(x[3]))] ==1 )or (variable_ranges[variable_names.index(factors[3])][int(round(x[3]))] %variable_ranges[variable_names.index(factors[0])][int(round(x[0]))] ==0 ))) and (((variable_ranges[variable_names.index(factors[4])][int(round(x[4]))] ==1 )or (variable_ranges[variable_names.index(factors[4])][int(round(x[4]))] %variable_ranges[variable_names.index(factors[1])][int(round(x[1]))] ==0 ))) and (((variable_ranges[variable_names.index(factors[5])][int(round(x[5]))] ==1 )or (variable_ranges[variable_names.index(factors[5])][int(round(x[5]))] %variable_ranges[variable_names.index(factors[2])][int(round(x[2]))] ==0 ))) and ((variable_ranges[variable_names.index(factors[12])][int(round(x[12]))] *variable_ranges[variable_names.index(factors[13])][int(round(x[13]))] +variable_ranges[variable_names.index(factors[12])][int(round(x[12]))] *variable_ranges[variable_names.index(factors[14])][int(round(x[14]))] +variable_ranges[variable_names.index(factors[13])][int(round(x[13]))] *variable_ranges[variable_names.index(factors[14])][int(round(x[14]))] <=150 )) and (((variable_ranges[variable_names.index(factors[9])][int(round(x[9]))] ==1 )or (variable_ranges[variable_names.index(factors[10])][int(round(x[10]))] ==1 )or (variable_ranges[variable_names.index(factors[11])][int(round(x[11]))] ==1 )))
Computing D-Optimal Design with 46 experiments
Design Formula:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Starting "optMonteCarlo" run
       var low high center nLevels round factor   mix
1     T1_I   0    6      0       7     0  FALSE FALSE
2     T1_J   0    6      0       7     0  FALSE FALSE
3     T1_K   0    6      0       7     0  FALSE FALSE
4     T2_I   0    6      0       7     0  FALSE FALSE
5     T2_J   0    6      0       7     0  FALSE FALSE
6     T2_K   0    6      0       7     0  FALSE FALSE
7  ACOPY_x   0    1      0       2     0  FALSE FALSE
8  ACOPY_y   0    1      0       2     0  FALSE FALSE
9     U1_I   0   29      0      30     0  FALSE FALSE
10     U_I   0   29      0      30     0  FALSE FALSE
11     U_J   0   29      0      30     0  FALSE FALSE
12     U_K   0   29      0      30     0  FALSE FALSE
13    RT_I   0    2      0       3     0  FALSE FALSE
14    RT_J   0    2      0       3     0  FALSE FALSE
15    RT_K   0    2      0       3     0  FALSE FALSE
16     SCR   0    1      0       2     0  FALSE FALSE
17    VEC1   0    1      0       2     0  FALSE FALSE
18    VEC2   0    1      0       2     0  FALSE FALSE

   T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
1     2    1    0    5    0    5       0       0    8   2  16   0    0    0
2     2    5    0    1    3    0       0       1    5  11   1   0    0    2
3     2    2    5    1    5    3       0       1   22   5   0  25    0    0
4     0    4    0    0    4    3       1       0    6   0   4   2    0    0
5     6    6    2    0    6    4       1       0   24   6   0   8    1    1
6     3    0    5    1    1    0       1       0   23   0  14  26    0    0
7     6    3    2    0    2    6       1       1   13  22   0  19    0    0
8     5    1    0    0    6    3       1       1   15   0   4  21    1    1
9     4    0    2    5    5    5       1       1   10   0   6  26    0    2
10    0    1    3    1    3    0       1       1   14  13   7   0    2    0
11    0    2    1    3    0    0       0       1   14  16   0   6    0    0
12    4    0    3    2    3    0       1       0   22   0  13  13    0    0
13    3    1    6    2    4    6       1       1    8  23  16   0    0    1
14    2    0    2    3    1    3       1       1    0  28   0   3    1    1
15    3    0    0    3    5    2       0       1    9   0   3   1    2    0
16    2    3    5    0    0    0       1       0   14  20   1   0    1    0
17    3    3    5    1    6    6       0       1    0   0   4   8    1    0
18    2    3    1    0    3    1       0       1   16   3   8   0    0    1
19    5    0    0    4    6    6       1       0   23  16   9   0    2    0
20    1    1    6    5    6    4       1       1   29   0  26  21    0    1
21    0    0    1    0    5    5       0       1   14   0  28  15    1    1
22    1    0    1    6    3    3       0       1   25  26  17   0    1    0
23    4    2    2    2    3    1       1       0   12  12  29   0    1    0
24    0    4    3    5    5    3       0       0   16   0  15   0    1    1
25    0    0    0    0    5    1       1       0    1  19   4   0    0    2
26    3    6    2    0    6    0       1       1    9  28  28   0    0    0
27    1    5    2    6    4    1       1       0   29  11   0  25    2    0
28    6    2    0    6    1    4       1       1    0  16  29   0    1    0
29    1    0    6    0    3    6       0       0   18  13   0  19    1    0
30    1    6    3    3    4    2       1       0    0  11  15   0    0    1
31    1    3    2    0    0    0       0       0   17  27   4   0    1    1
32    1    2    1    1    3    5       1       0   28   0  29   4    0    2
33    3    0    5    6    2    4       0       0    5   6   0  20    0    1
34    4    5    2    0    3    5       0       0   10   0  13  10    2    0
35    5    5    4    0    3    3       0       0   29   0  27  19    0    1
36    4    1    2    2    2    2       0       1   27   3   0   0    0    1
37    6    4    6    5    4    4       0       1   28  25   0   3    0    0
38    1    4    6    5    3    0       0       1    1   0  19   4    1    1
39    6    2    1    6    4    4       0       0    1  28   0  29    0    1
40    5    5    0    3    4    0       0       0   21  27   0  26    0    1
41    5    1    5    4    5    5       1       0   12   0   0   1    0    1
42    0    2    3    5    1    6       1       0   24   0   6   8    1    0
43    6    1    4    0    6    0       0       1   18   7   0  18    0    2
44    5    6    0    4    0    3       1       1    7   0  20  23    1    0
45    3    4    0    3    5    2       0       0    5  29   0  26    1    0
46    4    6    4    3    0    3       0       1   26  19   5   0    0    2
   RT_K SCR VEC1 VEC2
1     2   1    0    0
2     0   1    1    1
3     0   1    0    1
4     0   1    0    0
5     0   1    0    0
6     0   0    1    0
7     2   1    0    1
8     0   0    0    1
9     0   0    1    0
10    0   0    1    0
11    1   0    0    1
12    2   0    0    0
13    0   1    0    1
14    0   0    0    1
15    0   1    1    0
16    1   1    0    0
17    0   0    0    1
18    1   0    0    0
19    0   0    1    1
20    1   1    0    0
21    0   0    0    1
22    1   1    0    1
23    1   1    0    1
24    0   0    0    0
25    0   1    1    1
26    0   0    1    1
27    0   1    0    1
28    0   0    0    1
29    1   0    0    0
30    1   1    1    0
31    0   0    1    1
32    0   0    1    0
33    0   0    1    1
34    0   1    0    0
35    1   1    1    1
36    1   1    1    0
37    2   0    1    0
38    0   1    1    1
39    1   1    1    0
40    1   1    0    0
41    1   0    0    1
42    0   1    1    0
43    0   1    0    0
44    1   0    1    1
45    0   0    1    0
46    0   0    0    0

D-Efficiency Approximation: [1] 0.432

Measuring design of size 46
Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Length of requested configs: 1
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	5
        Additions: 		948
        Multiplications: 	408
        Divisions: 		0
        Logical: 		0
        Reads: 			2070
        Writes: 		412
        Comparisons:		18
        Gotos: 			0
        
 compiling timer:
	gcc -O3 -fopenmp -DDYNAMIC -O0 -c -o timer_cpu.o timer_cpu.c
 building the original code:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -DORIGINAL -o __orio_perftest_original.exe __orio_perftest1.c timer_cpu.o -lm
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest1.exe __orio_perftest1.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest1.exe  
Program Test Output: 
{'[2, 1, 0, 5, 0, 5, 0, 0, 8, 2, 16, 0, 0, 0, 2, 1, 0, 0]' : 0.330314}
{'[2, 1, 0, 5, 0, 5, 0, 0, 8, 2, 16, 0, 0, 0, 2, 1, 0, 0]' : 0.33006}
{'[2, 1, 0, 5, 0, 5, 0, 0, 8, 2, 16, 0, 0, 0, 2, 1, 0, 0]' : 0.338629}
{'[2, 1, 0, 5, 0, 5, 0, 0, 8, 2, 16, 0, 0, 0, 2, 1, 0, 0]' : 0.331145}
{'[2, 1, 0, 5, 0, 5, 0, 0, 8, 2, 16, 0, 0, 0, 2, 1, 0, 0]' : 0.330994}
{'[2, 1, 0, 5, 0, 5, 0, 0, 8, 2, 16, 0, 0, 0, 2, 1, 0, 0]' : 0.331056}
{'[2, 1, 0, 5, 0, 5, 0, 0, 8, 2, 16, 0, 0, 0, 2, 1, 0, 0]' : 0.341029}
{'[2, 1, 0, 5, 0, 5, 0, 0, 8, 2, 16, 0, 0, 0, 2, 1, 0, 0]' : 0.331025}
{'[2, 1, 0, 5, 0, 5, 0, 0, 8, 2, 16, 0, 0, 0, 2, 1, 0, 0]' : 0.332057}
{'[2, 1, 0, 5, 0, 5, 0, 0, 8, 2, 16, 0, 0, 0, 2, 1, 0, 0]' : 0.331098}
{'[2, 1, 0, 5, 0, 5, 0, 0, 8, 2, 16, 0, 0, 0, 2, 1, 0, 0]' : 0.330822}
{'[2, 1, 0, 5, 0, 5, 0, 0, 8, 2, 16, 0, 0, 0, 2, 1, 0, 0]' : 0.330917}
{'[2, 1, 0, 5, 0, 5, 0, 0, 8, 2, 16, 0, 0, 0, 2, 1, 0, 0]' : 0.33098}
{'[2, 1, 0, 5, 0, 5, 0, 0, 8, 2, 16, 0, 0, 0, 2, 1, 0, 0]' : 0.33081}
{'[2, 1, 0, 5, 0, 5, 0, 0, 8, 2, 16, 0, 0, 0, 2, 1, 0, 0]' : 0.331186}
{'[2, 1, 0, 5, 0, 5, 0, 0, 8, 2, 16, 0, 0, 0, 2, 1, 0, 0]' : 0.33092}
{'[2, 1, 0, 5, 0, 5, 0, 0, 8, 2, 16, 0, 0, 0, 2, 1, 0, 0]' : 0.331163}
{'[2, 1, 0, 5, 0, 5, 0, 0, 8, 2, 16, 0, 0, 0, 2, 1, 0, 0]' : 0.331941}
{'[2, 1, 0, 5, 0, 5, 0, 0, 8, 2, 16, 0, 0, 0, 2, 1, 0, 0]' : 0.330639}
{'[2, 1, 0, 5, 0, 5, 0, 0, 8, 2, 16, 0, 0, 0, 2, 1, 0, 0]' : 0.330711}
{'[2, 1, 0, 5, 0, 5, 0, 0, 8, 2, 16, 0, 0, 0, 2, 1, 0, 0]' : 0.331219}
{'[2, 1, 0, 5, 0, 5, 0, 0, 8, 2, 16, 0, 0, 0, 2, 1, 0, 0]' : 0.330105}
{'[2, 1, 0, 5, 0, 5, 0, 0, 8, 2, 16, 0, 0, 0, 2, 1, 0, 0]' : 0.329631}
{'[2, 1, 0, 5, 0, 5, 0, 0, 8, 2, 16, 0, 0, 0, 2, 1, 0, 0]' : 0.331598}
{'[2, 1, 0, 5, 0, 5, 0, 0, 8, 2, 16, 0, 0, 0, 2, 1, 0, 0]' : 0.330266}
{'[2, 1, 0, 5, 0, 5, 0, 0, 8, 2, 16, 0, 0, 0, 2, 1, 0, 0]' : 0.331087}
{'[2, 1, 0, 5, 0, 5, 0, 0, 8, 2, 16, 0, 0, 0, 2, 1, 0, 0]' : 0.331082}
{'[2, 1, 0, 5, 0, 5, 0, 0, 8, 2, 16, 0, 0, 0, 2, 1, 0, 0]' : 0.3301}
{'[2, 1, 0, 5, 0, 5, 0, 0, 8, 2, 16, 0, 0, 0, 2, 1, 0, 0]' : 0.331046}
{'[2, 1, 0, 5, 0, 5, 0, 0, 8, 2, 16, 0, 0, 0, 2, 1, 0, 0]' : 0.330955}

out:
 ["{'[2, 1, 0, 5, 0, 5, 0, 0, 8, 2, 16, 0, 0, 0, 2, 1, 0, 0]' : 0.330314}", "{'[2, 1, 0, 5, 0, 5, 0, 0, 8, 2, 16, 0, 0, 0, 2, 1, 0, 0]' : 0.33006}", "{'[2, 1, 0, 5, 0, 5, 0, 0, 8, 2, 16, 0, 0, 0, 2, 1, 0, 0]' : 0.338629}", "{'[2, 1, 0, 5, 0, 5, 0, 0, 8, 2, 16, 0, 0, 0, 2, 1, 0, 0]' : 0.331145}", "{'[2, 1, 0, 5, 0, 5, 0, 0, 8, 2, 16, 0, 0, 0, 2, 1, 0, 0]' : 0.330994}", "{'[2, 1, 0, 5, 0, 5, 0, 0, 8, 2, 16, 0, 0, 0, 2, 1, 0, 0]' : 0.331056}", "{'[2, 1, 0, 5, 0, 5, 0, 0, 8, 2, 16, 0, 0, 0, 2, 1, 0, 0]' : 0.341029}", "{'[2, 1, 0, 5, 0, 5, 0, 0, 8, 2, 16, 0, 0, 0, 2, 1, 0, 0]' : 0.331025}", "{'[2, 1, 0, 5, 0, 5, 0, 0, 8, 2, 16, 0, 0, 0, 2, 1, 0, 0]' : 0.332057}", "{'[2, 1, 0, 5, 0, 5, 0, 0, 8, 2, 16, 0, 0, 0, 2, 1, 0, 0]' : 0.331098}", "{'[2, 1, 0, 5, 0, 5, 0, 0, 8, 2, 16, 0, 0, 0, 2, 1, 0, 0]' : 0.330822}", "{'[2, 1, 0, 5, 0, 5, 0, 0, 8, 2, 16, 0, 0, 0, 2, 1, 0, 0]' : 0.330917}", "{'[2, 1, 0, 5, 0, 5, 0, 0, 8, 2, 16, 0, 0, 0, 2, 1, 0, 0]' : 0.33098}", "{'[2, 1, 0, 5, 0, 5, 0, 0, 8, 2, 16, 0, 0, 0, 2, 1, 0, 0]' : 0.33081}", "{'[2, 1, 0, 5, 0, 5, 0, 0, 8, 2, 16, 0, 0, 0, 2, 1, 0, 0]' : 0.331186}", "{'[2, 1, 0, 5, 0, 5, 0, 0, 8, 2, 16, 0, 0, 0, 2, 1, 0, 0]' : 0.33092}", "{'[2, 1, 0, 5, 0, 5, 0, 0, 8, 2, 16, 0, 0, 0, 2, 1, 0, 0]' : 0.331163}", "{'[2, 1, 0, 5, 0, 5, 0, 0, 8, 2, 16, 0, 0, 0, 2, 1, 0, 0]' : 0.331941}", "{'[2, 1, 0, 5, 0, 5, 0, 0, 8, 2, 16, 0, 0, 0, 2, 1, 0, 0]' : 0.330639}", "{'[2, 1, 0, 5, 0, 5, 0, 0, 8, 2, 16, 0, 0, 0, 2, 1, 0, 0]' : 0.330711}", "{'[2, 1, 0, 5, 0, 5, 0, 0, 8, 2, 16, 0, 0, 0, 2, 1, 0, 0]' : 0.331219}", "{'[2, 1, 0, 5, 0, 5, 0, 0, 8, 2, 16, 0, 0, 0, 2, 1, 0, 0]' : 0.330105}", "{'[2, 1, 0, 5, 0, 5, 0, 0, 8, 2, 16, 0, 0, 0, 2, 1, 0, 0]' : 0.329631}", "{'[2, 1, 0, 5, 0, 5, 0, 0, 8, 2, 16, 0, 0, 0, 2, 1, 0, 0]' : 0.331598}", "{'[2, 1, 0, 5, 0, 5, 0, 0, 8, 2, 16, 0, 0, 0, 2, 1, 0, 0]' : 0.330266}", "{'[2, 1, 0, 5, 0, 5, 0, 0, 8, 2, 16, 0, 0, 0, 2, 1, 0, 0]' : 0.331087}", "{'[2, 1, 0, 5, 0, 5, 0, 0, 8, 2, 16, 0, 0, 0, 2, 1, 0, 0]' : 0.331082}", "{'[2, 1, 0, 5, 0, 5, 0, 0, 8, 2, 16, 0, 0, 0, 2, 1, 0, 0]' : 0.3301}", "{'[2, 1, 0, 5, 0, 5, 0, 0, 8, 2, 16, 0, 0, 0, 2, 1, 0, 0]' : 0.331046}", "{'[2, 1, 0, 5, 0, 5, 0, 0, 8, 2, 16, 0, 0, 0, 2, 1, 0, 0]' : 0.330955}"]
returning from 'run': {'[2, 1, 0, 5, 0, 5, 0, 0, 8, 2, 16, 0, 0, 0, 2, 1, 0, 0]': ([0.330314, 0.33006, 0.338629, 0.331145, 0.330994, 0.331056, 0.341029, 0.331025, 0.332057, 0.331098, 0.330822, 0.330917, 0.33098, 0.33081, 0.331186, 0.33092, 0.331163, 0.331941, 0.330639, 0.330711, 0.331219, 0.330105, 0.329631, 0.331598, 0.330266, 0.331087, 0.331082, 0.3301, 0.331046, 0.330955], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 1, 0, 5, 0, 5, 0, 0, 8, 2, 16, 0, 0, 0, 2, 1, 0, 0]': ([0.330314, 0.33006, 0.338629, 0.331145, 0.330994, 0.331056, 0.341029, 0.331025, 0.332057, 0.331098, 0.330822, 0.330917, 0.33098, 0.33081, 0.331186, 0.33092, 0.331163, 0.331941, 0.330639, 0.330711, 0.331219, 0.330105, 0.329631, 0.331598, 0.330266, 0.331087, 0.331082, 0.3301, 0.331046, 0.330955], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = jjj
Code stats:
        Number of loops: 	38
        Max loop nest depth: 	5
        Additions: 		2102
        Multiplications: 	936
        Divisions: 		0
        Logical: 		0
        Reads: 			3962
        Writes: 		672
        Comparisons:		38
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest2.exe __orio_perftest2.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest2.exe  
Program Test Output: 
{'[2, 5, 0, 1, 3, 0, 0, 1, 5, 11, 1, 0, 0, 2, 0, 1, 1, 1]' : 0.517231}
{'[2, 5, 0, 1, 3, 0, 0, 1, 5, 11, 1, 0, 0, 2, 0, 1, 1, 1]' : 0.538446}
{'[2, 5, 0, 1, 3, 0, 0, 1, 5, 11, 1, 0, 0, 2, 0, 1, 1, 1]' : 0.545051}
{'[2, 5, 0, 1, 3, 0, 0, 1, 5, 11, 1, 0, 0, 2, 0, 1, 1, 1]' : 0.492205}
{'[2, 5, 0, 1, 3, 0, 0, 1, 5, 11, 1, 0, 0, 2, 0, 1, 1, 1]' : 0.505681}
{'[2, 5, 0, 1, 3, 0, 0, 1, 5, 11, 1, 0, 0, 2, 0, 1, 1, 1]' : 0.48176}
{'[2, 5, 0, 1, 3, 0, 0, 1, 5, 11, 1, 0, 0, 2, 0, 1, 1, 1]' : 0.488611}
{'[2, 5, 0, 1, 3, 0, 0, 1, 5, 11, 1, 0, 0, 2, 0, 1, 1, 1]' : 0.48584}
{'[2, 5, 0, 1, 3, 0, 0, 1, 5, 11, 1, 0, 0, 2, 0, 1, 1, 1]' : 0.53236}
{'[2, 5, 0, 1, 3, 0, 0, 1, 5, 11, 1, 0, 0, 2, 0, 1, 1, 1]' : 0.510097}
{'[2, 5, 0, 1, 3, 0, 0, 1, 5, 11, 1, 0, 0, 2, 0, 1, 1, 1]' : 0.553405}
{'[2, 5, 0, 1, 3, 0, 0, 1, 5, 11, 1, 0, 0, 2, 0, 1, 1, 1]' : 0.481814}
{'[2, 5, 0, 1, 3, 0, 0, 1, 5, 11, 1, 0, 0, 2, 0, 1, 1, 1]' : 0.48066}
{'[2, 5, 0, 1, 3, 0, 0, 1, 5, 11, 1, 0, 0, 2, 0, 1, 1, 1]' : 0.484053}
{'[2, 5, 0, 1, 3, 0, 0, 1, 5, 11, 1, 0, 0, 2, 0, 1, 1, 1]' : 0.490146}
{'[2, 5, 0, 1, 3, 0, 0, 1, 5, 11, 1, 0, 0, 2, 0, 1, 1, 1]' : 0.48237}
{'[2, 5, 0, 1, 3, 0, 0, 1, 5, 11, 1, 0, 0, 2, 0, 1, 1, 1]' : 0.514053}
{'[2, 5, 0, 1, 3, 0, 0, 1, 5, 11, 1, 0, 0, 2, 0, 1, 1, 1]' : 0.536033}
{'[2, 5, 0, 1, 3, 0, 0, 1, 5, 11, 1, 0, 0, 2, 0, 1, 1, 1]' : 0.569429}
{'[2, 5, 0, 1, 3, 0, 0, 1, 5, 11, 1, 0, 0, 2, 0, 1, 1, 1]' : 0.52396}
{'[2, 5, 0, 1, 3, 0, 0, 1, 5, 11, 1, 0, 0, 2, 0, 1, 1, 1]' : 0.54039}
{'[2, 5, 0, 1, 3, 0, 0, 1, 5, 11, 1, 0, 0, 2, 0, 1, 1, 1]' : 0.502525}
{'[2, 5, 0, 1, 3, 0, 0, 1, 5, 11, 1, 0, 0, 2, 0, 1, 1, 1]' : 0.482032}
{'[2, 5, 0, 1, 3, 0, 0, 1, 5, 11, 1, 0, 0, 2, 0, 1, 1, 1]' : 0.483888}
{'[2, 5, 0, 1, 3, 0, 0, 1, 5, 11, 1, 0, 0, 2, 0, 1, 1, 1]' : 0.486105}
{'[2, 5, 0, 1, 3, 0, 0, 1, 5, 11, 1, 0, 0, 2, 0, 1, 1, 1]' : 0.486162}
{'[2, 5, 0, 1, 3, 0, 0, 1, 5, 11, 1, 0, 0, 2, 0, 1, 1, 1]' : 0.502486}
{'[2, 5, 0, 1, 3, 0, 0, 1, 5, 11, 1, 0, 0, 2, 0, 1, 1, 1]' : 0.49054}
{'[2, 5, 0, 1, 3, 0, 0, 1, 5, 11, 1, 0, 0, 2, 0, 1, 1, 1]' : 0.5099}
{'[2, 5, 0, 1, 3, 0, 0, 1, 5, 11, 1, 0, 0, 2, 0, 1, 1, 1]' : 0.54045}

out:
 ["{'[2, 5, 0, 1, 3, 0, 0, 1, 5, 11, 1, 0, 0, 2, 0, 1, 1, 1]' : 0.517231}", "{'[2, 5, 0, 1, 3, 0, 0, 1, 5, 11, 1, 0, 0, 2, 0, 1, 1, 1]' : 0.538446}", "{'[2, 5, 0, 1, 3, 0, 0, 1, 5, 11, 1, 0, 0, 2, 0, 1, 1, 1]' : 0.545051}", "{'[2, 5, 0, 1, 3, 0, 0, 1, 5, 11, 1, 0, 0, 2, 0, 1, 1, 1]' : 0.492205}", "{'[2, 5, 0, 1, 3, 0, 0, 1, 5, 11, 1, 0, 0, 2, 0, 1, 1, 1]' : 0.505681}", "{'[2, 5, 0, 1, 3, 0, 0, 1, 5, 11, 1, 0, 0, 2, 0, 1, 1, 1]' : 0.48176}", "{'[2, 5, 0, 1, 3, 0, 0, 1, 5, 11, 1, 0, 0, 2, 0, 1, 1, 1]' : 0.488611}", "{'[2, 5, 0, 1, 3, 0, 0, 1, 5, 11, 1, 0, 0, 2, 0, 1, 1, 1]' : 0.48584}", "{'[2, 5, 0, 1, 3, 0, 0, 1, 5, 11, 1, 0, 0, 2, 0, 1, 1, 1]' : 0.53236}", "{'[2, 5, 0, 1, 3, 0, 0, 1, 5, 11, 1, 0, 0, 2, 0, 1, 1, 1]' : 0.510097}", "{'[2, 5, 0, 1, 3, 0, 0, 1, 5, 11, 1, 0, 0, 2, 0, 1, 1, 1]' : 0.553405}", "{'[2, 5, 0, 1, 3, 0, 0, 1, 5, 11, 1, 0, 0, 2, 0, 1, 1, 1]' : 0.481814}", "{'[2, 5, 0, 1, 3, 0, 0, 1, 5, 11, 1, 0, 0, 2, 0, 1, 1, 1]' : 0.48066}", "{'[2, 5, 0, 1, 3, 0, 0, 1, 5, 11, 1, 0, 0, 2, 0, 1, 1, 1]' : 0.484053}", "{'[2, 5, 0, 1, 3, 0, 0, 1, 5, 11, 1, 0, 0, 2, 0, 1, 1, 1]' : 0.490146}", "{'[2, 5, 0, 1, 3, 0, 0, 1, 5, 11, 1, 0, 0, 2, 0, 1, 1, 1]' : 0.48237}", "{'[2, 5, 0, 1, 3, 0, 0, 1, 5, 11, 1, 0, 0, 2, 0, 1, 1, 1]' : 0.514053}", "{'[2, 5, 0, 1, 3, 0, 0, 1, 5, 11, 1, 0, 0, 2, 0, 1, 1, 1]' : 0.536033}", "{'[2, 5, 0, 1, 3, 0, 0, 1, 5, 11, 1, 0, 0, 2, 0, 1, 1, 1]' : 0.569429}", "{'[2, 5, 0, 1, 3, 0, 0, 1, 5, 11, 1, 0, 0, 2, 0, 1, 1, 1]' : 0.52396}", "{'[2, 5, 0, 1, 3, 0, 0, 1, 5, 11, 1, 0, 0, 2, 0, 1, 1, 1]' : 0.54039}", "{'[2, 5, 0, 1, 3, 0, 0, 1, 5, 11, 1, 0, 0, 2, 0, 1, 1, 1]' : 0.502525}", "{'[2, 5, 0, 1, 3, 0, 0, 1, 5, 11, 1, 0, 0, 2, 0, 1, 1, 1]' : 0.482032}", "{'[2, 5, 0, 1, 3, 0, 0, 1, 5, 11, 1, 0, 0, 2, 0, 1, 1, 1]' : 0.483888}", "{'[2, 5, 0, 1, 3, 0, 0, 1, 5, 11, 1, 0, 0, 2, 0, 1, 1, 1]' : 0.486105}", "{'[2, 5, 0, 1, 3, 0, 0, 1, 5, 11, 1, 0, 0, 2, 0, 1, 1, 1]' : 0.486162}", "{'[2, 5, 0, 1, 3, 0, 0, 1, 5, 11, 1, 0, 0, 2, 0, 1, 1, 1]' : 0.502486}", "{'[2, 5, 0, 1, 3, 0, 0, 1, 5, 11, 1, 0, 0, 2, 0, 1, 1, 1]' : 0.49054}", "{'[2, 5, 0, 1, 3, 0, 0, 1, 5, 11, 1, 0, 0, 2, 0, 1, 1, 1]' : 0.5099}", "{'[2, 5, 0, 1, 3, 0, 0, 1, 5, 11, 1, 0, 0, 2, 0, 1, 1, 1]' : 0.54045}"]
returning from 'run': {'[2, 5, 0, 1, 3, 0, 0, 1, 5, 11, 1, 0, 0, 2, 0, 1, 1, 1]': ([0.517231, 0.538446, 0.545051, 0.492205, 0.505681, 0.48176, 0.488611, 0.48584, 0.53236, 0.510097, 0.553405, 0.481814, 0.48066, 0.484053, 0.490146, 0.48237, 0.514053, 0.536033, 0.569429, 0.52396, 0.54039, 0.502525, 0.482032, 0.483888, 0.486105, 0.486162, 0.502486, 0.49054, 0.5099, 0.54045], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 5, 0, 1, 3, 0, 0, 1, 5, 11, 1, 0, 0, 2, 0, 1, 1, 1]': ([0.517231, 0.538446, 0.545051, 0.492205, 0.505681, 0.48176, 0.488611, 0.48584, 0.53236, 0.510097, 0.553405, 0.481814, 0.48066, 0.484053, 0.490146, 0.48237, 0.514053, 0.536033, 0.569429, 0.52396, 0.54039, 0.502525, 0.482032, 0.483888, 0.486105, 0.486162, 0.502486, 0.49054, 0.5099, 0.54045], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = kkk
Code stats:
        Number of loops: 	42
        Max loop nest depth: 	6
        Additions: 		1683
        Multiplications: 	392
        Divisions: 		0
        Logical: 		0
        Reads: 			3415
        Writes: 		741
        Comparisons:		42
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest3.exe __orio_perftest3.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest3.exe  
Program Test Output: 
{'[2, 2, 5, 1, 5, 3, 0, 1, 22, 5, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.334179}
{'[2, 2, 5, 1, 5, 3, 0, 1, 22, 5, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.335827}
{'[2, 2, 5, 1, 5, 3, 0, 1, 22, 5, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.333577}
{'[2, 2, 5, 1, 5, 3, 0, 1, 22, 5, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.338905}
{'[2, 2, 5, 1, 5, 3, 0, 1, 22, 5, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.335424}
{'[2, 2, 5, 1, 5, 3, 0, 1, 22, 5, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.334179}
{'[2, 2, 5, 1, 5, 3, 0, 1, 22, 5, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.33441}
{'[2, 2, 5, 1, 5, 3, 0, 1, 22, 5, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.346807}
{'[2, 2, 5, 1, 5, 3, 0, 1, 22, 5, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.331148}
{'[2, 2, 5, 1, 5, 3, 0, 1, 22, 5, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.331648}
{'[2, 2, 5, 1, 5, 3, 0, 1, 22, 5, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.332786}
{'[2, 2, 5, 1, 5, 3, 0, 1, 22, 5, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.329987}
{'[2, 2, 5, 1, 5, 3, 0, 1, 22, 5, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.332626}
{'[2, 2, 5, 1, 5, 3, 0, 1, 22, 5, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.332236}
{'[2, 2, 5, 1, 5, 3, 0, 1, 22, 5, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.338377}
{'[2, 2, 5, 1, 5, 3, 0, 1, 22, 5, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.332602}
{'[2, 2, 5, 1, 5, 3, 0, 1, 22, 5, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.332626}
{'[2, 2, 5, 1, 5, 3, 0, 1, 22, 5, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.330022}
{'[2, 2, 5, 1, 5, 3, 0, 1, 22, 5, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.331525}
{'[2, 2, 5, 1, 5, 3, 0, 1, 22, 5, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.333275}
{'[2, 2, 5, 1, 5, 3, 0, 1, 22, 5, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.330604}
{'[2, 2, 5, 1, 5, 3, 0, 1, 22, 5, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.332055}
{'[2, 2, 5, 1, 5, 3, 0, 1, 22, 5, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.332617}
{'[2, 2, 5, 1, 5, 3, 0, 1, 22, 5, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.332005}
{'[2, 2, 5, 1, 5, 3, 0, 1, 22, 5, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.330863}
{'[2, 2, 5, 1, 5, 3, 0, 1, 22, 5, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.331548}
{'[2, 2, 5, 1, 5, 3, 0, 1, 22, 5, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.329882}
{'[2, 2, 5, 1, 5, 3, 0, 1, 22, 5, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.331442}
{'[2, 2, 5, 1, 5, 3, 0, 1, 22, 5, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.334158}
{'[2, 2, 5, 1, 5, 3, 0, 1, 22, 5, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.332323}

out:
 ["{'[2, 2, 5, 1, 5, 3, 0, 1, 22, 5, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.334179}", "{'[2, 2, 5, 1, 5, 3, 0, 1, 22, 5, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.335827}", "{'[2, 2, 5, 1, 5, 3, 0, 1, 22, 5, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.333577}", "{'[2, 2, 5, 1, 5, 3, 0, 1, 22, 5, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.338905}", "{'[2, 2, 5, 1, 5, 3, 0, 1, 22, 5, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.335424}", "{'[2, 2, 5, 1, 5, 3, 0, 1, 22, 5, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.334179}", "{'[2, 2, 5, 1, 5, 3, 0, 1, 22, 5, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.33441}", "{'[2, 2, 5, 1, 5, 3, 0, 1, 22, 5, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.346807}", "{'[2, 2, 5, 1, 5, 3, 0, 1, 22, 5, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.331148}", "{'[2, 2, 5, 1, 5, 3, 0, 1, 22, 5, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.331648}", "{'[2, 2, 5, 1, 5, 3, 0, 1, 22, 5, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.332786}", "{'[2, 2, 5, 1, 5, 3, 0, 1, 22, 5, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.329987}", "{'[2, 2, 5, 1, 5, 3, 0, 1, 22, 5, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.332626}", "{'[2, 2, 5, 1, 5, 3, 0, 1, 22, 5, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.332236}", "{'[2, 2, 5, 1, 5, 3, 0, 1, 22, 5, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.338377}", "{'[2, 2, 5, 1, 5, 3, 0, 1, 22, 5, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.332602}", "{'[2, 2, 5, 1, 5, 3, 0, 1, 22, 5, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.332626}", "{'[2, 2, 5, 1, 5, 3, 0, 1, 22, 5, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.330022}", "{'[2, 2, 5, 1, 5, 3, 0, 1, 22, 5, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.331525}", "{'[2, 2, 5, 1, 5, 3, 0, 1, 22, 5, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.333275}", "{'[2, 2, 5, 1, 5, 3, 0, 1, 22, 5, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.330604}", "{'[2, 2, 5, 1, 5, 3, 0, 1, 22, 5, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.332055}", "{'[2, 2, 5, 1, 5, 3, 0, 1, 22, 5, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.332617}", "{'[2, 2, 5, 1, 5, 3, 0, 1, 22, 5, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.332005}", "{'[2, 2, 5, 1, 5, 3, 0, 1, 22, 5, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.330863}", "{'[2, 2, 5, 1, 5, 3, 0, 1, 22, 5, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.331548}", "{'[2, 2, 5, 1, 5, 3, 0, 1, 22, 5, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.329882}", "{'[2, 2, 5, 1, 5, 3, 0, 1, 22, 5, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.331442}", "{'[2, 2, 5, 1, 5, 3, 0, 1, 22, 5, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.334158}", "{'[2, 2, 5, 1, 5, 3, 0, 1, 22, 5, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.332323}"]
returning from 'run': {'[2, 2, 5, 1, 5, 3, 0, 1, 22, 5, 0, 25, 0, 0, 0, 1, 0, 1]': ([0.334179, 0.335827, 0.333577, 0.338905, 0.335424, 0.334179, 0.33441, 0.346807, 0.331148, 0.331648, 0.332786, 0.329987, 0.332626, 0.332236, 0.338377, 0.332602, 0.332626, 0.330022, 0.331525, 0.333275, 0.330604, 0.332055, 0.332617, 0.332005, 0.330863, 0.331548, 0.329882, 0.331442, 0.334158, 0.332323], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 2, 5, 1, 5, 3, 0, 1, 22, 5, 0, 25, 0, 0, 0, 1, 0, 1]': ([0.334179, 0.335827, 0.333577, 0.338905, 0.335424, 0.334179, 0.33441, 0.346807, 0.331148, 0.331648, 0.332786, 0.329987, 0.332626, 0.332236, 0.338377, 0.332602, 0.332626, 0.330022, 0.331525, 0.333275, 0.330604, 0.332055, 0.332617, 0.332005, 0.330863, 0.331548, 0.329882, 0.331442, 0.334158, 0.332323], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		98
        Multiplications: 	20
        Divisions: 		0
        Logical: 		0
        Reads: 			211
        Writes: 		52
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest4.exe __orio_perftest4.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest4.exe  
Program Test Output: 
{'[0, 4, 0, 0, 4, 3, 1, 0, 6, 0, 4, 2, 0, 0, 0, 1, 0, 0]' : 0.651566}
{'[0, 4, 0, 0, 4, 3, 1, 0, 6, 0, 4, 2, 0, 0, 0, 1, 0, 0]' : 0.651119}
{'[0, 4, 0, 0, 4, 3, 1, 0, 6, 0, 4, 2, 0, 0, 0, 1, 0, 0]' : 0.651213}
{'[0, 4, 0, 0, 4, 3, 1, 0, 6, 0, 4, 2, 0, 0, 0, 1, 0, 0]' : 0.652828}
{'[0, 4, 0, 0, 4, 3, 1, 0, 6, 0, 4, 2, 0, 0, 0, 1, 0, 0]' : 0.650353}
{'[0, 4, 0, 0, 4, 3, 1, 0, 6, 0, 4, 2, 0, 0, 0, 1, 0, 0]' : 0.652389}
{'[0, 4, 0, 0, 4, 3, 1, 0, 6, 0, 4, 2, 0, 0, 0, 1, 0, 0]' : 0.650887}
{'[0, 4, 0, 0, 4, 3, 1, 0, 6, 0, 4, 2, 0, 0, 0, 1, 0, 0]' : 0.651367}
{'[0, 4, 0, 0, 4, 3, 1, 0, 6, 0, 4, 2, 0, 0, 0, 1, 0, 0]' : 0.65028}
{'[0, 4, 0, 0, 4, 3, 1, 0, 6, 0, 4, 2, 0, 0, 0, 1, 0, 0]' : 0.650561}
{'[0, 4, 0, 0, 4, 3, 1, 0, 6, 0, 4, 2, 0, 0, 0, 1, 0, 0]' : 0.650708}
{'[0, 4, 0, 0, 4, 3, 1, 0, 6, 0, 4, 2, 0, 0, 0, 1, 0, 0]' : 0.655458}
{'[0, 4, 0, 0, 4, 3, 1, 0, 6, 0, 4, 2, 0, 0, 0, 1, 0, 0]' : 0.658718}
{'[0, 4, 0, 0, 4, 3, 1, 0, 6, 0, 4, 2, 0, 0, 0, 1, 0, 0]' : 0.65642}
{'[0, 4, 0, 0, 4, 3, 1, 0, 6, 0, 4, 2, 0, 0, 0, 1, 0, 0]' : 0.649836}
{'[0, 4, 0, 0, 4, 3, 1, 0, 6, 0, 4, 2, 0, 0, 0, 1, 0, 0]' : 0.651908}
{'[0, 4, 0, 0, 4, 3, 1, 0, 6, 0, 4, 2, 0, 0, 0, 1, 0, 0]' : 0.64983}
{'[0, 4, 0, 0, 4, 3, 1, 0, 6, 0, 4, 2, 0, 0, 0, 1, 0, 0]' : 0.650529}
{'[0, 4, 0, 0, 4, 3, 1, 0, 6, 0, 4, 2, 0, 0, 0, 1, 0, 0]' : 0.669182}
{'[0, 4, 0, 0, 4, 3, 1, 0, 6, 0, 4, 2, 0, 0, 0, 1, 0, 0]' : 0.650408}
{'[0, 4, 0, 0, 4, 3, 1, 0, 6, 0, 4, 2, 0, 0, 0, 1, 0, 0]' : 0.653424}
{'[0, 4, 0, 0, 4, 3, 1, 0, 6, 0, 4, 2, 0, 0, 0, 1, 0, 0]' : 0.656254}
{'[0, 4, 0, 0, 4, 3, 1, 0, 6, 0, 4, 2, 0, 0, 0, 1, 0, 0]' : 0.660121}
{'[0, 4, 0, 0, 4, 3, 1, 0, 6, 0, 4, 2, 0, 0, 0, 1, 0, 0]' : 0.679815}
{'[0, 4, 0, 0, 4, 3, 1, 0, 6, 0, 4, 2, 0, 0, 0, 1, 0, 0]' : 0.661573}
{'[0, 4, 0, 0, 4, 3, 1, 0, 6, 0, 4, 2, 0, 0, 0, 1, 0, 0]' : 0.650601}
{'[0, 4, 0, 0, 4, 3, 1, 0, 6, 0, 4, 2, 0, 0, 0, 1, 0, 0]' : 0.663119}
{'[0, 4, 0, 0, 4, 3, 1, 0, 6, 0, 4, 2, 0, 0, 0, 1, 0, 0]' : 0.65672}
{'[0, 4, 0, 0, 4, 3, 1, 0, 6, 0, 4, 2, 0, 0, 0, 1, 0, 0]' : 0.650226}
{'[0, 4, 0, 0, 4, 3, 1, 0, 6, 0, 4, 2, 0, 0, 0, 1, 0, 0]' : 0.649879}

out:
 ["{'[0, 4, 0, 0, 4, 3, 1, 0, 6, 0, 4, 2, 0, 0, 0, 1, 0, 0]' : 0.651566}", "{'[0, 4, 0, 0, 4, 3, 1, 0, 6, 0, 4, 2, 0, 0, 0, 1, 0, 0]' : 0.651119}", "{'[0, 4, 0, 0, 4, 3, 1, 0, 6, 0, 4, 2, 0, 0, 0, 1, 0, 0]' : 0.651213}", "{'[0, 4, 0, 0, 4, 3, 1, 0, 6, 0, 4, 2, 0, 0, 0, 1, 0, 0]' : 0.652828}", "{'[0, 4, 0, 0, 4, 3, 1, 0, 6, 0, 4, 2, 0, 0, 0, 1, 0, 0]' : 0.650353}", "{'[0, 4, 0, 0, 4, 3, 1, 0, 6, 0, 4, 2, 0, 0, 0, 1, 0, 0]' : 0.652389}", "{'[0, 4, 0, 0, 4, 3, 1, 0, 6, 0, 4, 2, 0, 0, 0, 1, 0, 0]' : 0.650887}", "{'[0, 4, 0, 0, 4, 3, 1, 0, 6, 0, 4, 2, 0, 0, 0, 1, 0, 0]' : 0.651367}", "{'[0, 4, 0, 0, 4, 3, 1, 0, 6, 0, 4, 2, 0, 0, 0, 1, 0, 0]' : 0.65028}", "{'[0, 4, 0, 0, 4, 3, 1, 0, 6, 0, 4, 2, 0, 0, 0, 1, 0, 0]' : 0.650561}", "{'[0, 4, 0, 0, 4, 3, 1, 0, 6, 0, 4, 2, 0, 0, 0, 1, 0, 0]' : 0.650708}", "{'[0, 4, 0, 0, 4, 3, 1, 0, 6, 0, 4, 2, 0, 0, 0, 1, 0, 0]' : 0.655458}", "{'[0, 4, 0, 0, 4, 3, 1, 0, 6, 0, 4, 2, 0, 0, 0, 1, 0, 0]' : 0.658718}", "{'[0, 4, 0, 0, 4, 3, 1, 0, 6, 0, 4, 2, 0, 0, 0, 1, 0, 0]' : 0.65642}", "{'[0, 4, 0, 0, 4, 3, 1, 0, 6, 0, 4, 2, 0, 0, 0, 1, 0, 0]' : 0.649836}", "{'[0, 4, 0, 0, 4, 3, 1, 0, 6, 0, 4, 2, 0, 0, 0, 1, 0, 0]' : 0.651908}", "{'[0, 4, 0, 0, 4, 3, 1, 0, 6, 0, 4, 2, 0, 0, 0, 1, 0, 0]' : 0.64983}", "{'[0, 4, 0, 0, 4, 3, 1, 0, 6, 0, 4, 2, 0, 0, 0, 1, 0, 0]' : 0.650529}", "{'[0, 4, 0, 0, 4, 3, 1, 0, 6, 0, 4, 2, 0, 0, 0, 1, 0, 0]' : 0.669182}", "{'[0, 4, 0, 0, 4, 3, 1, 0, 6, 0, 4, 2, 0, 0, 0, 1, 0, 0]' : 0.650408}", "{'[0, 4, 0, 0, 4, 3, 1, 0, 6, 0, 4, 2, 0, 0, 0, 1, 0, 0]' : 0.653424}", "{'[0, 4, 0, 0, 4, 3, 1, 0, 6, 0, 4, 2, 0, 0, 0, 1, 0, 0]' : 0.656254}", "{'[0, 4, 0, 0, 4, 3, 1, 0, 6, 0, 4, 2, 0, 0, 0, 1, 0, 0]' : 0.660121}", "{'[0, 4, 0, 0, 4, 3, 1, 0, 6, 0, 4, 2, 0, 0, 0, 1, 0, 0]' : 0.679815}", "{'[0, 4, 0, 0, 4, 3, 1, 0, 6, 0, 4, 2, 0, 0, 0, 1, 0, 0]' : 0.661573}", "{'[0, 4, 0, 0, 4, 3, 1, 0, 6, 0, 4, 2, 0, 0, 0, 1, 0, 0]' : 0.650601}", "{'[0, 4, 0, 0, 4, 3, 1, 0, 6, 0, 4, 2, 0, 0, 0, 1, 0, 0]' : 0.663119}", "{'[0, 4, 0, 0, 4, 3, 1, 0, 6, 0, 4, 2, 0, 0, 0, 1, 0, 0]' : 0.65672}", "{'[0, 4, 0, 0, 4, 3, 1, 0, 6, 0, 4, 2, 0, 0, 0, 1, 0, 0]' : 0.650226}", "{'[0, 4, 0, 0, 4, 3, 1, 0, 6, 0, 4, 2, 0, 0, 0, 1, 0, 0]' : 0.649879}"]
returning from 'run': {'[0, 4, 0, 0, 4, 3, 1, 0, 6, 0, 4, 2, 0, 0, 0, 1, 0, 0]': ([0.651566, 0.651119, 0.651213, 0.652828, 0.650353, 0.652389, 0.650887, 0.651367, 0.65028, 0.650561, 0.650708, 0.655458, 0.658718, 0.65642, 0.649836, 0.651908, 0.64983, 0.650529, 0.669182, 0.650408, 0.653424, 0.656254, 0.660121, 0.679815, 0.661573, 0.650601, 0.663119, 0.65672, 0.650226, 0.649879], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 4, 0, 0, 4, 3, 1, 0, 6, 0, 4, 2, 0, 0, 0, 1, 0, 0]': ([0.651566, 0.651119, 0.651213, 0.652828, 0.650353, 0.652389, 0.650887, 0.651367, 0.65028, 0.650561, 0.650708, 0.655458, 0.658718, 0.65642, 0.649836, 0.651908, 0.64983, 0.650529, 0.669182, 0.650408, 0.653424, 0.656254, 0.660121, 0.679815, 0.661573, 0.650601, 0.663119, 0.65672, 0.650226, 0.649879], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	36
        Max loop nest depth: 	5
        Additions: 		1348
        Multiplications: 	576
        Divisions: 		0
        Logical: 		0
        Reads: 			2730
        Writes: 		512
        Comparisons:		36
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest5.exe __orio_perftest5.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest5.exe  
Program Test Output: 
{'[6, 6, 2, 0, 6, 4, 1, 0, 24, 6, 0, 8, 1, 1, 0, 1, 0, 0]' : 0.308843}
{'[6, 6, 2, 0, 6, 4, 1, 0, 24, 6, 0, 8, 1, 1, 0, 1, 0, 0]' : 0.311377}
{'[6, 6, 2, 0, 6, 4, 1, 0, 24, 6, 0, 8, 1, 1, 0, 1, 0, 0]' : 0.310434}
{'[6, 6, 2, 0, 6, 4, 1, 0, 24, 6, 0, 8, 1, 1, 0, 1, 0, 0]' : 0.317949}
{'[6, 6, 2, 0, 6, 4, 1, 0, 24, 6, 0, 8, 1, 1, 0, 1, 0, 0]' : 0.316913}
{'[6, 6, 2, 0, 6, 4, 1, 0, 24, 6, 0, 8, 1, 1, 0, 1, 0, 0]' : 0.358303}
{'[6, 6, 2, 0, 6, 4, 1, 0, 24, 6, 0, 8, 1, 1, 0, 1, 0, 0]' : 0.322706}
{'[6, 6, 2, 0, 6, 4, 1, 0, 24, 6, 0, 8, 1, 1, 0, 1, 0, 0]' : 0.3373}
{'[6, 6, 2, 0, 6, 4, 1, 0, 24, 6, 0, 8, 1, 1, 0, 1, 0, 0]' : 0.346825}
{'[6, 6, 2, 0, 6, 4, 1, 0, 24, 6, 0, 8, 1, 1, 0, 1, 0, 0]' : 0.347408}
{'[6, 6, 2, 0, 6, 4, 1, 0, 24, 6, 0, 8, 1, 1, 0, 1, 0, 0]' : 0.307315}
{'[6, 6, 2, 0, 6, 4, 1, 0, 24, 6, 0, 8, 1, 1, 0, 1, 0, 0]' : 0.361008}
{'[6, 6, 2, 0, 6, 4, 1, 0, 24, 6, 0, 8, 1, 1, 0, 1, 0, 0]' : 0.364031}
{'[6, 6, 2, 0, 6, 4, 1, 0, 24, 6, 0, 8, 1, 1, 0, 1, 0, 0]' : 0.344947}
{'[6, 6, 2, 0, 6, 4, 1, 0, 24, 6, 0, 8, 1, 1, 0, 1, 0, 0]' : 0.30718}
{'[6, 6, 2, 0, 6, 4, 1, 0, 24, 6, 0, 8, 1, 1, 0, 1, 0, 0]' : 0.351438}
{'[6, 6, 2, 0, 6, 4, 1, 0, 24, 6, 0, 8, 1, 1, 0, 1, 0, 0]' : 0.324349}
{'[6, 6, 2, 0, 6, 4, 1, 0, 24, 6, 0, 8, 1, 1, 0, 1, 0, 0]' : 0.314519}
{'[6, 6, 2, 0, 6, 4, 1, 0, 24, 6, 0, 8, 1, 1, 0, 1, 0, 0]' : 0.304202}
{'[6, 6, 2, 0, 6, 4, 1, 0, 24, 6, 0, 8, 1, 1, 0, 1, 0, 0]' : 0.322523}
{'[6, 6, 2, 0, 6, 4, 1, 0, 24, 6, 0, 8, 1, 1, 0, 1, 0, 0]' : 0.324939}
{'[6, 6, 2, 0, 6, 4, 1, 0, 24, 6, 0, 8, 1, 1, 0, 1, 0, 0]' : 0.31317}
{'[6, 6, 2, 0, 6, 4, 1, 0, 24, 6, 0, 8, 1, 1, 0, 1, 0, 0]' : 0.313685}
{'[6, 6, 2, 0, 6, 4, 1, 0, 24, 6, 0, 8, 1, 1, 0, 1, 0, 0]' : 0.306673}
{'[6, 6, 2, 0, 6, 4, 1, 0, 24, 6, 0, 8, 1, 1, 0, 1, 0, 0]' : 0.315911}
{'[6, 6, 2, 0, 6, 4, 1, 0, 24, 6, 0, 8, 1, 1, 0, 1, 0, 0]' : 0.310924}
{'[6, 6, 2, 0, 6, 4, 1, 0, 24, 6, 0, 8, 1, 1, 0, 1, 0, 0]' : 0.35745}
{'[6, 6, 2, 0, 6, 4, 1, 0, 24, 6, 0, 8, 1, 1, 0, 1, 0, 0]' : 0.354113}
{'[6, 6, 2, 0, 6, 4, 1, 0, 24, 6, 0, 8, 1, 1, 0, 1, 0, 0]' : 0.307598}
{'[6, 6, 2, 0, 6, 4, 1, 0, 24, 6, 0, 8, 1, 1, 0, 1, 0, 0]' : 0.31013}

out:
 ["{'[6, 6, 2, 0, 6, 4, 1, 0, 24, 6, 0, 8, 1, 1, 0, 1, 0, 0]' : 0.308843}", "{'[6, 6, 2, 0, 6, 4, 1, 0, 24, 6, 0, 8, 1, 1, 0, 1, 0, 0]' : 0.311377}", "{'[6, 6, 2, 0, 6, 4, 1, 0, 24, 6, 0, 8, 1, 1, 0, 1, 0, 0]' : 0.310434}", "{'[6, 6, 2, 0, 6, 4, 1, 0, 24, 6, 0, 8, 1, 1, 0, 1, 0, 0]' : 0.317949}", "{'[6, 6, 2, 0, 6, 4, 1, 0, 24, 6, 0, 8, 1, 1, 0, 1, 0, 0]' : 0.316913}", "{'[6, 6, 2, 0, 6, 4, 1, 0, 24, 6, 0, 8, 1, 1, 0, 1, 0, 0]' : 0.358303}", "{'[6, 6, 2, 0, 6, 4, 1, 0, 24, 6, 0, 8, 1, 1, 0, 1, 0, 0]' : 0.322706}", "{'[6, 6, 2, 0, 6, 4, 1, 0, 24, 6, 0, 8, 1, 1, 0, 1, 0, 0]' : 0.3373}", "{'[6, 6, 2, 0, 6, 4, 1, 0, 24, 6, 0, 8, 1, 1, 0, 1, 0, 0]' : 0.346825}", "{'[6, 6, 2, 0, 6, 4, 1, 0, 24, 6, 0, 8, 1, 1, 0, 1, 0, 0]' : 0.347408}", "{'[6, 6, 2, 0, 6, 4, 1, 0, 24, 6, 0, 8, 1, 1, 0, 1, 0, 0]' : 0.307315}", "{'[6, 6, 2, 0, 6, 4, 1, 0, 24, 6, 0, 8, 1, 1, 0, 1, 0, 0]' : 0.361008}", "{'[6, 6, 2, 0, 6, 4, 1, 0, 24, 6, 0, 8, 1, 1, 0, 1, 0, 0]' : 0.364031}", "{'[6, 6, 2, 0, 6, 4, 1, 0, 24, 6, 0, 8, 1, 1, 0, 1, 0, 0]' : 0.344947}", "{'[6, 6, 2, 0, 6, 4, 1, 0, 24, 6, 0, 8, 1, 1, 0, 1, 0, 0]' : 0.30718}", "{'[6, 6, 2, 0, 6, 4, 1, 0, 24, 6, 0, 8, 1, 1, 0, 1, 0, 0]' : 0.351438}", "{'[6, 6, 2, 0, 6, 4, 1, 0, 24, 6, 0, 8, 1, 1, 0, 1, 0, 0]' : 0.324349}", "{'[6, 6, 2, 0, 6, 4, 1, 0, 24, 6, 0, 8, 1, 1, 0, 1, 0, 0]' : 0.314519}", "{'[6, 6, 2, 0, 6, 4, 1, 0, 24, 6, 0, 8, 1, 1, 0, 1, 0, 0]' : 0.304202}", "{'[6, 6, 2, 0, 6, 4, 1, 0, 24, 6, 0, 8, 1, 1, 0, 1, 0, 0]' : 0.322523}", "{'[6, 6, 2, 0, 6, 4, 1, 0, 24, 6, 0, 8, 1, 1, 0, 1, 0, 0]' : 0.324939}", "{'[6, 6, 2, 0, 6, 4, 1, 0, 24, 6, 0, 8, 1, 1, 0, 1, 0, 0]' : 0.31317}", "{'[6, 6, 2, 0, 6, 4, 1, 0, 24, 6, 0, 8, 1, 1, 0, 1, 0, 0]' : 0.313685}", "{'[6, 6, 2, 0, 6, 4, 1, 0, 24, 6, 0, 8, 1, 1, 0, 1, 0, 0]' : 0.306673}", "{'[6, 6, 2, 0, 6, 4, 1, 0, 24, 6, 0, 8, 1, 1, 0, 1, 0, 0]' : 0.315911}", "{'[6, 6, 2, 0, 6, 4, 1, 0, 24, 6, 0, 8, 1, 1, 0, 1, 0, 0]' : 0.310924}", "{'[6, 6, 2, 0, 6, 4, 1, 0, 24, 6, 0, 8, 1, 1, 0, 1, 0, 0]' : 0.35745}", "{'[6, 6, 2, 0, 6, 4, 1, 0, 24, 6, 0, 8, 1, 1, 0, 1, 0, 0]' : 0.354113}", "{'[6, 6, 2, 0, 6, 4, 1, 0, 24, 6, 0, 8, 1, 1, 0, 1, 0, 0]' : 0.307598}", "{'[6, 6, 2, 0, 6, 4, 1, 0, 24, 6, 0, 8, 1, 1, 0, 1, 0, 0]' : 0.31013}"]
returning from 'run': {'[6, 6, 2, 0, 6, 4, 1, 0, 24, 6, 0, 8, 1, 1, 0, 1, 0, 0]': ([0.308843, 0.311377, 0.310434, 0.317949, 0.316913, 0.358303, 0.322706, 0.3373, 0.346825, 0.347408, 0.307315, 0.361008, 0.364031, 0.344947, 0.30718, 0.351438, 0.324349, 0.314519, 0.304202, 0.322523, 0.324939, 0.31317, 0.313685, 0.306673, 0.315911, 0.310924, 0.35745, 0.354113, 0.307598, 0.31013], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 2, 0, 6, 4, 1, 0, 24, 6, 0, 8, 1, 1, 0, 1, 0, 0]': ([0.308843, 0.311377, 0.310434, 0.317949, 0.316913, 0.358303, 0.322706, 0.3373, 0.346825, 0.347408, 0.307315, 0.361008, 0.364031, 0.344947, 0.30718, 0.351438, 0.324349, 0.314519, 0.304202, 0.322523, 0.324939, 0.31317, 0.313685, 0.306673, 0.315911, 0.310924, 0.35745, 0.354113, 0.307598, 0.31013], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		285
        Multiplications: 	88
        Divisions: 		0
        Logical: 		0
        Reads: 			596
        Writes: 		96
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest6.exe __orio_perftest6.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest6.exe  
Program Test Output: 
{'[3, 0, 5, 1, 1, 0, 1, 0, 23, 0, 14, 26, 0, 0, 0, 0, 1, 0]' : 0.74022}
{'[3, 0, 5, 1, 1, 0, 1, 0, 23, 0, 14, 26, 0, 0, 0, 0, 1, 0]' : 0.721845}
{'[3, 0, 5, 1, 1, 0, 1, 0, 23, 0, 14, 26, 0, 0, 0, 0, 1, 0]' : 0.73887}
{'[3, 0, 5, 1, 1, 0, 1, 0, 23, 0, 14, 26, 0, 0, 0, 0, 1, 0]' : 0.723299}
{'[3, 0, 5, 1, 1, 0, 1, 0, 23, 0, 14, 26, 0, 0, 0, 0, 1, 0]' : 0.736347}
{'[3, 0, 5, 1, 1, 0, 1, 0, 23, 0, 14, 26, 0, 0, 0, 0, 1, 0]' : 0.744334}
{'[3, 0, 5, 1, 1, 0, 1, 0, 23, 0, 14, 26, 0, 0, 0, 0, 1, 0]' : 0.752946}
{'[3, 0, 5, 1, 1, 0, 1, 0, 23, 0, 14, 26, 0, 0, 0, 0, 1, 0]' : 0.745337}
{'[3, 0, 5, 1, 1, 0, 1, 0, 23, 0, 14, 26, 0, 0, 0, 0, 1, 0]' : 0.724715}
{'[3, 0, 5, 1, 1, 0, 1, 0, 23, 0, 14, 26, 0, 0, 0, 0, 1, 0]' : 0.735178}
{'[3, 0, 5, 1, 1, 0, 1, 0, 23, 0, 14, 26, 0, 0, 0, 0, 1, 0]' : 0.761436}
{'[3, 0, 5, 1, 1, 0, 1, 0, 23, 0, 14, 26, 0, 0, 0, 0, 1, 0]' : 0.756903}
{'[3, 0, 5, 1, 1, 0, 1, 0, 23, 0, 14, 26, 0, 0, 0, 0, 1, 0]' : 0.762912}
{'[3, 0, 5, 1, 1, 0, 1, 0, 23, 0, 14, 26, 0, 0, 0, 0, 1, 0]' : 0.765911}
{'[3, 0, 5, 1, 1, 0, 1, 0, 23, 0, 14, 26, 0, 0, 0, 0, 1, 0]' : 0.750303}
{'[3, 0, 5, 1, 1, 0, 1, 0, 23, 0, 14, 26, 0, 0, 0, 0, 1, 0]' : 0.743729}
{'[3, 0, 5, 1, 1, 0, 1, 0, 23, 0, 14, 26, 0, 0, 0, 0, 1, 0]' : 0.725876}
{'[3, 0, 5, 1, 1, 0, 1, 0, 23, 0, 14, 26, 0, 0, 0, 0, 1, 0]' : 0.724257}
{'[3, 0, 5, 1, 1, 0, 1, 0, 23, 0, 14, 26, 0, 0, 0, 0, 1, 0]' : 0.723404}
{'[3, 0, 5, 1, 1, 0, 1, 0, 23, 0, 14, 26, 0, 0, 0, 0, 1, 0]' : 0.734045}
{'[3, 0, 5, 1, 1, 0, 1, 0, 23, 0, 14, 26, 0, 0, 0, 0, 1, 0]' : 0.739736}
{'[3, 0, 5, 1, 1, 0, 1, 0, 23, 0, 14, 26, 0, 0, 0, 0, 1, 0]' : 0.721986}
{'[3, 0, 5, 1, 1, 0, 1, 0, 23, 0, 14, 26, 0, 0, 0, 0, 1, 0]' : 0.727162}
{'[3, 0, 5, 1, 1, 0, 1, 0, 23, 0, 14, 26, 0, 0, 0, 0, 1, 0]' : 0.728064}
{'[3, 0, 5, 1, 1, 0, 1, 0, 23, 0, 14, 26, 0, 0, 0, 0, 1, 0]' : 0.730385}
{'[3, 0, 5, 1, 1, 0, 1, 0, 23, 0, 14, 26, 0, 0, 0, 0, 1, 0]' : 0.722762}
{'[3, 0, 5, 1, 1, 0, 1, 0, 23, 0, 14, 26, 0, 0, 0, 0, 1, 0]' : 0.722195}
{'[3, 0, 5, 1, 1, 0, 1, 0, 23, 0, 14, 26, 0, 0, 0, 0, 1, 0]' : 0.73317}
{'[3, 0, 5, 1, 1, 0, 1, 0, 23, 0, 14, 26, 0, 0, 0, 0, 1, 0]' : 0.729156}
{'[3, 0, 5, 1, 1, 0, 1, 0, 23, 0, 14, 26, 0, 0, 0, 0, 1, 0]' : 0.722293}

out:
 ["{'[3, 0, 5, 1, 1, 0, 1, 0, 23, 0, 14, 26, 0, 0, 0, 0, 1, 0]' : 0.74022}", "{'[3, 0, 5, 1, 1, 0, 1, 0, 23, 0, 14, 26, 0, 0, 0, 0, 1, 0]' : 0.721845}", "{'[3, 0, 5, 1, 1, 0, 1, 0, 23, 0, 14, 26, 0, 0, 0, 0, 1, 0]' : 0.73887}", "{'[3, 0, 5, 1, 1, 0, 1, 0, 23, 0, 14, 26, 0, 0, 0, 0, 1, 0]' : 0.723299}", "{'[3, 0, 5, 1, 1, 0, 1, 0, 23, 0, 14, 26, 0, 0, 0, 0, 1, 0]' : 0.736347}", "{'[3, 0, 5, 1, 1, 0, 1, 0, 23, 0, 14, 26, 0, 0, 0, 0, 1, 0]' : 0.744334}", "{'[3, 0, 5, 1, 1, 0, 1, 0, 23, 0, 14, 26, 0, 0, 0, 0, 1, 0]' : 0.752946}", "{'[3, 0, 5, 1, 1, 0, 1, 0, 23, 0, 14, 26, 0, 0, 0, 0, 1, 0]' : 0.745337}", "{'[3, 0, 5, 1, 1, 0, 1, 0, 23, 0, 14, 26, 0, 0, 0, 0, 1, 0]' : 0.724715}", "{'[3, 0, 5, 1, 1, 0, 1, 0, 23, 0, 14, 26, 0, 0, 0, 0, 1, 0]' : 0.735178}", "{'[3, 0, 5, 1, 1, 0, 1, 0, 23, 0, 14, 26, 0, 0, 0, 0, 1, 0]' : 0.761436}", "{'[3, 0, 5, 1, 1, 0, 1, 0, 23, 0, 14, 26, 0, 0, 0, 0, 1, 0]' : 0.756903}", "{'[3, 0, 5, 1, 1, 0, 1, 0, 23, 0, 14, 26, 0, 0, 0, 0, 1, 0]' : 0.762912}", "{'[3, 0, 5, 1, 1, 0, 1, 0, 23, 0, 14, 26, 0, 0, 0, 0, 1, 0]' : 0.765911}", "{'[3, 0, 5, 1, 1, 0, 1, 0, 23, 0, 14, 26, 0, 0, 0, 0, 1, 0]' : 0.750303}", "{'[3, 0, 5, 1, 1, 0, 1, 0, 23, 0, 14, 26, 0, 0, 0, 0, 1, 0]' : 0.743729}", "{'[3, 0, 5, 1, 1, 0, 1, 0, 23, 0, 14, 26, 0, 0, 0, 0, 1, 0]' : 0.725876}", "{'[3, 0, 5, 1, 1, 0, 1, 0, 23, 0, 14, 26, 0, 0, 0, 0, 1, 0]' : 0.724257}", "{'[3, 0, 5, 1, 1, 0, 1, 0, 23, 0, 14, 26, 0, 0, 0, 0, 1, 0]' : 0.723404}", "{'[3, 0, 5, 1, 1, 0, 1, 0, 23, 0, 14, 26, 0, 0, 0, 0, 1, 0]' : 0.734045}", "{'[3, 0, 5, 1, 1, 0, 1, 0, 23, 0, 14, 26, 0, 0, 0, 0, 1, 0]' : 0.739736}", "{'[3, 0, 5, 1, 1, 0, 1, 0, 23, 0, 14, 26, 0, 0, 0, 0, 1, 0]' : 0.721986}", "{'[3, 0, 5, 1, 1, 0, 1, 0, 23, 0, 14, 26, 0, 0, 0, 0, 1, 0]' : 0.727162}", "{'[3, 0, 5, 1, 1, 0, 1, 0, 23, 0, 14, 26, 0, 0, 0, 0, 1, 0]' : 0.728064}", "{'[3, 0, 5, 1, 1, 0, 1, 0, 23, 0, 14, 26, 0, 0, 0, 0, 1, 0]' : 0.730385}", "{'[3, 0, 5, 1, 1, 0, 1, 0, 23, 0, 14, 26, 0, 0, 0, 0, 1, 0]' : 0.722762}", "{'[3, 0, 5, 1, 1, 0, 1, 0, 23, 0, 14, 26, 0, 0, 0, 0, 1, 0]' : 0.722195}", "{'[3, 0, 5, 1, 1, 0, 1, 0, 23, 0, 14, 26, 0, 0, 0, 0, 1, 0]' : 0.73317}", "{'[3, 0, 5, 1, 1, 0, 1, 0, 23, 0, 14, 26, 0, 0, 0, 0, 1, 0]' : 0.729156}", "{'[3, 0, 5, 1, 1, 0, 1, 0, 23, 0, 14, 26, 0, 0, 0, 0, 1, 0]' : 0.722293}"]
returning from 'run': {'[3, 0, 5, 1, 1, 0, 1, 0, 23, 0, 14, 26, 0, 0, 0, 0, 1, 0]': ([0.74022, 0.721845, 0.73887, 0.723299, 0.736347, 0.744334, 0.752946, 0.745337, 0.724715, 0.735178, 0.761436, 0.756903, 0.762912, 0.765911, 0.750303, 0.743729, 0.725876, 0.724257, 0.723404, 0.734045, 0.739736, 0.721986, 0.727162, 0.728064, 0.730385, 0.722762, 0.722195, 0.73317, 0.729156, 0.722293], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 0, 5, 1, 1, 0, 1, 0, 23, 0, 14, 26, 0, 0, 0, 0, 1, 0]': ([0.74022, 0.721845, 0.73887, 0.723299, 0.736347, 0.744334, 0.752946, 0.745337, 0.724715, 0.735178, 0.761436, 0.756903, 0.762912, 0.765911, 0.750303, 0.743729, 0.725876, 0.724257, 0.723404, 0.734045, 0.739736, 0.721986, 0.727162, 0.728064, 0.730385, 0.722762, 0.722195, 0.73317, 0.729156, 0.722293], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	89
        Max loop nest depth: 	5
        Additions: 		3712
        Multiplications: 	1584
        Divisions: 		0
        Logical: 		0
        Reads: 			7243
        Writes: 		1262
        Comparisons:		89
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest7.exe __orio_perftest7.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest7.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest7.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest7.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 527, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors, data)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 408, in dopt_anova
    budget)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 333, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 279, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest7.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 527, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors, data)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 408, in dopt_anova
    budget)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 333, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 279, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	23
        Max loop nest depth: 	5
        Additions: 		2336
        Multiplications: 	558
        Divisions: 		0
        Logical: 		0
        Reads: 			3517
        Writes: 		358
        Comparisons:		23
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest8.exe __orio_perftest8.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest8.exe  
Program Test Output: 
{'[5, 1, 0, 0, 6, 3, 1, 1, 15, 0, 4, 21, 1, 1, 0, 0, 0, 1]' : 0.259232}
{'[5, 1, 0, 0, 6, 3, 1, 1, 15, 0, 4, 21, 1, 1, 0, 0, 0, 1]' : 0.264597}
{'[5, 1, 0, 0, 6, 3, 1, 1, 15, 0, 4, 21, 1, 1, 0, 0, 0, 1]' : 0.263525}
{'[5, 1, 0, 0, 6, 3, 1, 1, 15, 0, 4, 21, 1, 1, 0, 0, 0, 1]' : 0.259468}
{'[5, 1, 0, 0, 6, 3, 1, 1, 15, 0, 4, 21, 1, 1, 0, 0, 0, 1]' : 0.261464}
{'[5, 1, 0, 0, 6, 3, 1, 1, 15, 0, 4, 21, 1, 1, 0, 0, 0, 1]' : 0.264946}
{'[5, 1, 0, 0, 6, 3, 1, 1, 15, 0, 4, 21, 1, 1, 0, 0, 0, 1]' : 0.25943}
{'[5, 1, 0, 0, 6, 3, 1, 1, 15, 0, 4, 21, 1, 1, 0, 0, 0, 1]' : 0.278861}
{'[5, 1, 0, 0, 6, 3, 1, 1, 15, 0, 4, 21, 1, 1, 0, 0, 0, 1]' : 0.269507}
{'[5, 1, 0, 0, 6, 3, 1, 1, 15, 0, 4, 21, 1, 1, 0, 0, 0, 1]' : 0.285467}
{'[5, 1, 0, 0, 6, 3, 1, 1, 15, 0, 4, 21, 1, 1, 0, 0, 0, 1]' : 0.265704}
{'[5, 1, 0, 0, 6, 3, 1, 1, 15, 0, 4, 21, 1, 1, 0, 0, 0, 1]' : 0.259146}
{'[5, 1, 0, 0, 6, 3, 1, 1, 15, 0, 4, 21, 1, 1, 0, 0, 0, 1]' : 0.258834}
{'[5, 1, 0, 0, 6, 3, 1, 1, 15, 0, 4, 21, 1, 1, 0, 0, 0, 1]' : 0.276394}
{'[5, 1, 0, 0, 6, 3, 1, 1, 15, 0, 4, 21, 1, 1, 0, 0, 0, 1]' : 0.272069}
{'[5, 1, 0, 0, 6, 3, 1, 1, 15, 0, 4, 21, 1, 1, 0, 0, 0, 1]' : 0.258871}
{'[5, 1, 0, 0, 6, 3, 1, 1, 15, 0, 4, 21, 1, 1, 0, 0, 0, 1]' : 0.25888}
{'[5, 1, 0, 0, 6, 3, 1, 1, 15, 0, 4, 21, 1, 1, 0, 0, 0, 1]' : 0.259211}
{'[5, 1, 0, 0, 6, 3, 1, 1, 15, 0, 4, 21, 1, 1, 0, 0, 0, 1]' : 0.27721}
{'[5, 1, 0, 0, 6, 3, 1, 1, 15, 0, 4, 21, 1, 1, 0, 0, 0, 1]' : 0.273248}
{'[5, 1, 0, 0, 6, 3, 1, 1, 15, 0, 4, 21, 1, 1, 0, 0, 0, 1]' : 0.260101}
{'[5, 1, 0, 0, 6, 3, 1, 1, 15, 0, 4, 21, 1, 1, 0, 0, 0, 1]' : 0.278557}
{'[5, 1, 0, 0, 6, 3, 1, 1, 15, 0, 4, 21, 1, 1, 0, 0, 0, 1]' : 0.265111}
{'[5, 1, 0, 0, 6, 3, 1, 1, 15, 0, 4, 21, 1, 1, 0, 0, 0, 1]' : 0.261095}
{'[5, 1, 0, 0, 6, 3, 1, 1, 15, 0, 4, 21, 1, 1, 0, 0, 0, 1]' : 0.258151}
{'[5, 1, 0, 0, 6, 3, 1, 1, 15, 0, 4, 21, 1, 1, 0, 0, 0, 1]' : 0.258253}
{'[5, 1, 0, 0, 6, 3, 1, 1, 15, 0, 4, 21, 1, 1, 0, 0, 0, 1]' : 0.259458}
{'[5, 1, 0, 0, 6, 3, 1, 1, 15, 0, 4, 21, 1, 1, 0, 0, 0, 1]' : 0.258542}
{'[5, 1, 0, 0, 6, 3, 1, 1, 15, 0, 4, 21, 1, 1, 0, 0, 0, 1]' : 0.260487}
{'[5, 1, 0, 0, 6, 3, 1, 1, 15, 0, 4, 21, 1, 1, 0, 0, 0, 1]' : 0.260779}

out:
 ["{'[5, 1, 0, 0, 6, 3, 1, 1, 15, 0, 4, 21, 1, 1, 0, 0, 0, 1]' : 0.259232}", "{'[5, 1, 0, 0, 6, 3, 1, 1, 15, 0, 4, 21, 1, 1, 0, 0, 0, 1]' : 0.264597}", "{'[5, 1, 0, 0, 6, 3, 1, 1, 15, 0, 4, 21, 1, 1, 0, 0, 0, 1]' : 0.263525}", "{'[5, 1, 0, 0, 6, 3, 1, 1, 15, 0, 4, 21, 1, 1, 0, 0, 0, 1]' : 0.259468}", "{'[5, 1, 0, 0, 6, 3, 1, 1, 15, 0, 4, 21, 1, 1, 0, 0, 0, 1]' : 0.261464}", "{'[5, 1, 0, 0, 6, 3, 1, 1, 15, 0, 4, 21, 1, 1, 0, 0, 0, 1]' : 0.264946}", "{'[5, 1, 0, 0, 6, 3, 1, 1, 15, 0, 4, 21, 1, 1, 0, 0, 0, 1]' : 0.25943}", "{'[5, 1, 0, 0, 6, 3, 1, 1, 15, 0, 4, 21, 1, 1, 0, 0, 0, 1]' : 0.278861}", "{'[5, 1, 0, 0, 6, 3, 1, 1, 15, 0, 4, 21, 1, 1, 0, 0, 0, 1]' : 0.269507}", "{'[5, 1, 0, 0, 6, 3, 1, 1, 15, 0, 4, 21, 1, 1, 0, 0, 0, 1]' : 0.285467}", "{'[5, 1, 0, 0, 6, 3, 1, 1, 15, 0, 4, 21, 1, 1, 0, 0, 0, 1]' : 0.265704}", "{'[5, 1, 0, 0, 6, 3, 1, 1, 15, 0, 4, 21, 1, 1, 0, 0, 0, 1]' : 0.259146}", "{'[5, 1, 0, 0, 6, 3, 1, 1, 15, 0, 4, 21, 1, 1, 0, 0, 0, 1]' : 0.258834}", "{'[5, 1, 0, 0, 6, 3, 1, 1, 15, 0, 4, 21, 1, 1, 0, 0, 0, 1]' : 0.276394}", "{'[5, 1, 0, 0, 6, 3, 1, 1, 15, 0, 4, 21, 1, 1, 0, 0, 0, 1]' : 0.272069}", "{'[5, 1, 0, 0, 6, 3, 1, 1, 15, 0, 4, 21, 1, 1, 0, 0, 0, 1]' : 0.258871}", "{'[5, 1, 0, 0, 6, 3, 1, 1, 15, 0, 4, 21, 1, 1, 0, 0, 0, 1]' : 0.25888}", "{'[5, 1, 0, 0, 6, 3, 1, 1, 15, 0, 4, 21, 1, 1, 0, 0, 0, 1]' : 0.259211}", "{'[5, 1, 0, 0, 6, 3, 1, 1, 15, 0, 4, 21, 1, 1, 0, 0, 0, 1]' : 0.27721}", "{'[5, 1, 0, 0, 6, 3, 1, 1, 15, 0, 4, 21, 1, 1, 0, 0, 0, 1]' : 0.273248}", "{'[5, 1, 0, 0, 6, 3, 1, 1, 15, 0, 4, 21, 1, 1, 0, 0, 0, 1]' : 0.260101}", "{'[5, 1, 0, 0, 6, 3, 1, 1, 15, 0, 4, 21, 1, 1, 0, 0, 0, 1]' : 0.278557}", "{'[5, 1, 0, 0, 6, 3, 1, 1, 15, 0, 4, 21, 1, 1, 0, 0, 0, 1]' : 0.265111}", "{'[5, 1, 0, 0, 6, 3, 1, 1, 15, 0, 4, 21, 1, 1, 0, 0, 0, 1]' : 0.261095}", "{'[5, 1, 0, 0, 6, 3, 1, 1, 15, 0, 4, 21, 1, 1, 0, 0, 0, 1]' : 0.258151}", "{'[5, 1, 0, 0, 6, 3, 1, 1, 15, 0, 4, 21, 1, 1, 0, 0, 0, 1]' : 0.258253}", "{'[5, 1, 0, 0, 6, 3, 1, 1, 15, 0, 4, 21, 1, 1, 0, 0, 0, 1]' : 0.259458}", "{'[5, 1, 0, 0, 6, 3, 1, 1, 15, 0, 4, 21, 1, 1, 0, 0, 0, 1]' : 0.258542}", "{'[5, 1, 0, 0, 6, 3, 1, 1, 15, 0, 4, 21, 1, 1, 0, 0, 0, 1]' : 0.260487}", "{'[5, 1, 0, 0, 6, 3, 1, 1, 15, 0, 4, 21, 1, 1, 0, 0, 0, 1]' : 0.260779}"]
returning from 'run': {'[5, 1, 0, 0, 6, 3, 1, 1, 15, 0, 4, 21, 1, 1, 0, 0, 0, 1]': ([0.259232, 0.264597, 0.263525, 0.259468, 0.261464, 0.264946, 0.25943, 0.278861, 0.269507, 0.285467, 0.265704, 0.259146, 0.258834, 0.276394, 0.272069, 0.258871, 0.25888, 0.259211, 0.27721, 0.273248, 0.260101, 0.278557, 0.265111, 0.261095, 0.258151, 0.258253, 0.259458, 0.258542, 0.260487, 0.260779], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 1, 0, 0, 6, 3, 1, 1, 15, 0, 4, 21, 1, 1, 0, 0, 0, 1]': ([0.259232, 0.264597, 0.263525, 0.259468, 0.261464, 0.264946, 0.25943, 0.278861, 0.269507, 0.285467, 0.265704, 0.259146, 0.258834, 0.276394, 0.272069, 0.258871, 0.25888, 0.259211, 0.27721, 0.273248, 0.260101, 0.278557, 0.265111, 0.261095, 0.258151, 0.258253, 0.259458, 0.258542, 0.260487, 0.260779], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		412
        Multiplications: 	120
        Divisions: 		0
        Logical: 		0
        Reads: 			829
        Writes: 		107
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest9.exe __orio_perftest9.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest9.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest9.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest9.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 527, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors, data)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 408, in dopt_anova
    budget)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 333, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 279, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest9.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 527, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors, data)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 408, in dopt_anova
    budget)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 333, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 279, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	98
        Max loop nest depth: 	5
        Additions: 		3925
        Multiplications: 	940
        Divisions: 		0
        Logical: 		0
        Reads: 			6265
        Writes: 		749
        Comparisons:		98
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest10.exe __orio_perftest10.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest10.exe  
Program Test Output: 
{'[0, 1, 3, 1, 3, 0, 1, 1, 14, 13, 7, 0, 2, 0, 0, 0, 1, 0]' : 0.354425}
{'[0, 1, 3, 1, 3, 0, 1, 1, 14, 13, 7, 0, 2, 0, 0, 0, 1, 0]' : 0.353413}
{'[0, 1, 3, 1, 3, 0, 1, 1, 14, 13, 7, 0, 2, 0, 0, 0, 1, 0]' : 0.353722}
{'[0, 1, 3, 1, 3, 0, 1, 1, 14, 13, 7, 0, 2, 0, 0, 0, 1, 0]' : 0.353371}
{'[0, 1, 3, 1, 3, 0, 1, 1, 14, 13, 7, 0, 2, 0, 0, 0, 1, 0]' : 0.383425}
{'[0, 1, 3, 1, 3, 0, 1, 1, 14, 13, 7, 0, 2, 0, 0, 0, 1, 0]' : 0.359653}
{'[0, 1, 3, 1, 3, 0, 1, 1, 14, 13, 7, 0, 2, 0, 0, 0, 1, 0]' : 0.357709}
{'[0, 1, 3, 1, 3, 0, 1, 1, 14, 13, 7, 0, 2, 0, 0, 0, 1, 0]' : 0.357006}
{'[0, 1, 3, 1, 3, 0, 1, 1, 14, 13, 7, 0, 2, 0, 0, 0, 1, 0]' : 0.356752}
{'[0, 1, 3, 1, 3, 0, 1, 1, 14, 13, 7, 0, 2, 0, 0, 0, 1, 0]' : 0.357205}
{'[0, 1, 3, 1, 3, 0, 1, 1, 14, 13, 7, 0, 2, 0, 0, 0, 1, 0]' : 0.355838}
{'[0, 1, 3, 1, 3, 0, 1, 1, 14, 13, 7, 0, 2, 0, 0, 0, 1, 0]' : 0.356821}
{'[0, 1, 3, 1, 3, 0, 1, 1, 14, 13, 7, 0, 2, 0, 0, 0, 1, 0]' : 0.356547}
{'[0, 1, 3, 1, 3, 0, 1, 1, 14, 13, 7, 0, 2, 0, 0, 0, 1, 0]' : 0.356718}
{'[0, 1, 3, 1, 3, 0, 1, 1, 14, 13, 7, 0, 2, 0, 0, 0, 1, 0]' : 0.355332}
{'[0, 1, 3, 1, 3, 0, 1, 1, 14, 13, 7, 0, 2, 0, 0, 0, 1, 0]' : 0.35661}
{'[0, 1, 3, 1, 3, 0, 1, 1, 14, 13, 7, 0, 2, 0, 0, 0, 1, 0]' : 0.356427}
{'[0, 1, 3, 1, 3, 0, 1, 1, 14, 13, 7, 0, 2, 0, 0, 0, 1, 0]' : 0.356016}
{'[0, 1, 3, 1, 3, 0, 1, 1, 14, 13, 7, 0, 2, 0, 0, 0, 1, 0]' : 0.35811}
{'[0, 1, 3, 1, 3, 0, 1, 1, 14, 13, 7, 0, 2, 0, 0, 0, 1, 0]' : 0.357245}
{'[0, 1, 3, 1, 3, 0, 1, 1, 14, 13, 7, 0, 2, 0, 0, 0, 1, 0]' : 0.356901}
{'[0, 1, 3, 1, 3, 0, 1, 1, 14, 13, 7, 0, 2, 0, 0, 0, 1, 0]' : 0.358967}
{'[0, 1, 3, 1, 3, 0, 1, 1, 14, 13, 7, 0, 2, 0, 0, 0, 1, 0]' : 0.357439}
{'[0, 1, 3, 1, 3, 0, 1, 1, 14, 13, 7, 0, 2, 0, 0, 0, 1, 0]' : 0.356533}
{'[0, 1, 3, 1, 3, 0, 1, 1, 14, 13, 7, 0, 2, 0, 0, 0, 1, 0]' : 0.355069}
{'[0, 1, 3, 1, 3, 0, 1, 1, 14, 13, 7, 0, 2, 0, 0, 0, 1, 0]' : 0.356624}
{'[0, 1, 3, 1, 3, 0, 1, 1, 14, 13, 7, 0, 2, 0, 0, 0, 1, 0]' : 0.356285}
{'[0, 1, 3, 1, 3, 0, 1, 1, 14, 13, 7, 0, 2, 0, 0, 0, 1, 0]' : 0.356257}
{'[0, 1, 3, 1, 3, 0, 1, 1, 14, 13, 7, 0, 2, 0, 0, 0, 1, 0]' : 0.355356}
{'[0, 1, 3, 1, 3, 0, 1, 1, 14, 13, 7, 0, 2, 0, 0, 0, 1, 0]' : 0.355776}

out:
 ["{'[0, 1, 3, 1, 3, 0, 1, 1, 14, 13, 7, 0, 2, 0, 0, 0, 1, 0]' : 0.354425}", "{'[0, 1, 3, 1, 3, 0, 1, 1, 14, 13, 7, 0, 2, 0, 0, 0, 1, 0]' : 0.353413}", "{'[0, 1, 3, 1, 3, 0, 1, 1, 14, 13, 7, 0, 2, 0, 0, 0, 1, 0]' : 0.353722}", "{'[0, 1, 3, 1, 3, 0, 1, 1, 14, 13, 7, 0, 2, 0, 0, 0, 1, 0]' : 0.353371}", "{'[0, 1, 3, 1, 3, 0, 1, 1, 14, 13, 7, 0, 2, 0, 0, 0, 1, 0]' : 0.383425}", "{'[0, 1, 3, 1, 3, 0, 1, 1, 14, 13, 7, 0, 2, 0, 0, 0, 1, 0]' : 0.359653}", "{'[0, 1, 3, 1, 3, 0, 1, 1, 14, 13, 7, 0, 2, 0, 0, 0, 1, 0]' : 0.357709}", "{'[0, 1, 3, 1, 3, 0, 1, 1, 14, 13, 7, 0, 2, 0, 0, 0, 1, 0]' : 0.357006}", "{'[0, 1, 3, 1, 3, 0, 1, 1, 14, 13, 7, 0, 2, 0, 0, 0, 1, 0]' : 0.356752}", "{'[0, 1, 3, 1, 3, 0, 1, 1, 14, 13, 7, 0, 2, 0, 0, 0, 1, 0]' : 0.357205}", "{'[0, 1, 3, 1, 3, 0, 1, 1, 14, 13, 7, 0, 2, 0, 0, 0, 1, 0]' : 0.355838}", "{'[0, 1, 3, 1, 3, 0, 1, 1, 14, 13, 7, 0, 2, 0, 0, 0, 1, 0]' : 0.356821}", "{'[0, 1, 3, 1, 3, 0, 1, 1, 14, 13, 7, 0, 2, 0, 0, 0, 1, 0]' : 0.356547}", "{'[0, 1, 3, 1, 3, 0, 1, 1, 14, 13, 7, 0, 2, 0, 0, 0, 1, 0]' : 0.356718}", "{'[0, 1, 3, 1, 3, 0, 1, 1, 14, 13, 7, 0, 2, 0, 0, 0, 1, 0]' : 0.355332}", "{'[0, 1, 3, 1, 3, 0, 1, 1, 14, 13, 7, 0, 2, 0, 0, 0, 1, 0]' : 0.35661}", "{'[0, 1, 3, 1, 3, 0, 1, 1, 14, 13, 7, 0, 2, 0, 0, 0, 1, 0]' : 0.356427}", "{'[0, 1, 3, 1, 3, 0, 1, 1, 14, 13, 7, 0, 2, 0, 0, 0, 1, 0]' : 0.356016}", "{'[0, 1, 3, 1, 3, 0, 1, 1, 14, 13, 7, 0, 2, 0, 0, 0, 1, 0]' : 0.35811}", "{'[0, 1, 3, 1, 3, 0, 1, 1, 14, 13, 7, 0, 2, 0, 0, 0, 1, 0]' : 0.357245}", "{'[0, 1, 3, 1, 3, 0, 1, 1, 14, 13, 7, 0, 2, 0, 0, 0, 1, 0]' : 0.356901}", "{'[0, 1, 3, 1, 3, 0, 1, 1, 14, 13, 7, 0, 2, 0, 0, 0, 1, 0]' : 0.358967}", "{'[0, 1, 3, 1, 3, 0, 1, 1, 14, 13, 7, 0, 2, 0, 0, 0, 1, 0]' : 0.357439}", "{'[0, 1, 3, 1, 3, 0, 1, 1, 14, 13, 7, 0, 2, 0, 0, 0, 1, 0]' : 0.356533}", "{'[0, 1, 3, 1, 3, 0, 1, 1, 14, 13, 7, 0, 2, 0, 0, 0, 1, 0]' : 0.355069}", "{'[0, 1, 3, 1, 3, 0, 1, 1, 14, 13, 7, 0, 2, 0, 0, 0, 1, 0]' : 0.356624}", "{'[0, 1, 3, 1, 3, 0, 1, 1, 14, 13, 7, 0, 2, 0, 0, 0, 1, 0]' : 0.356285}", "{'[0, 1, 3, 1, 3, 0, 1, 1, 14, 13, 7, 0, 2, 0, 0, 0, 1, 0]' : 0.356257}", "{'[0, 1, 3, 1, 3, 0, 1, 1, 14, 13, 7, 0, 2, 0, 0, 0, 1, 0]' : 0.355356}", "{'[0, 1, 3, 1, 3, 0, 1, 1, 14, 13, 7, 0, 2, 0, 0, 0, 1, 0]' : 0.355776}"]
returning from 'run': {'[0, 1, 3, 1, 3, 0, 1, 1, 14, 13, 7, 0, 2, 0, 0, 0, 1, 0]': ([0.354425, 0.353413, 0.353722, 0.353371, 0.383425, 0.359653, 0.357709, 0.357006, 0.356752, 0.357205, 0.355838, 0.356821, 0.356547, 0.356718, 0.355332, 0.35661, 0.356427, 0.356016, 0.35811, 0.357245, 0.356901, 0.358967, 0.357439, 0.356533, 0.355069, 0.356624, 0.356285, 0.356257, 0.355356, 0.355776], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 3, 1, 3, 0, 1, 1, 14, 13, 7, 0, 2, 0, 0, 0, 1, 0]': ([0.354425, 0.353413, 0.353722, 0.353371, 0.383425, 0.359653, 0.357709, 0.357006, 0.356752, 0.357205, 0.355838, 0.356821, 0.356547, 0.356718, 0.355332, 0.35661, 0.356427, 0.356016, 0.35811, 0.357245, 0.356901, 0.358967, 0.357439, 0.356533, 0.355069, 0.356624, 0.356285, 0.356257, 0.355356, 0.355776], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	49
        Max loop nest depth: 	4
        Additions: 		1515
        Multiplications: 	324
        Divisions: 		0
        Logical: 		0
        Reads: 			2499
        Writes: 		334
        Comparisons:		49
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest11.exe __orio_perftest11.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest11.exe  
Program Test Output: 
{'[0, 2, 1, 3, 0, 0, 0, 1, 14, 16, 0, 6, 0, 0, 1, 0, 0, 1]' : 0.541238}
{'[0, 2, 1, 3, 0, 0, 0, 1, 14, 16, 0, 6, 0, 0, 1, 0, 0, 1]' : 0.541159}
{'[0, 2, 1, 3, 0, 0, 0, 1, 14, 16, 0, 6, 0, 0, 1, 0, 0, 1]' : 0.534773}
{'[0, 2, 1, 3, 0, 0, 0, 1, 14, 16, 0, 6, 0, 0, 1, 0, 0, 1]' : 0.542356}
{'[0, 2, 1, 3, 0, 0, 0, 1, 14, 16, 0, 6, 0, 0, 1, 0, 0, 1]' : 0.535903}
{'[0, 2, 1, 3, 0, 0, 0, 1, 14, 16, 0, 6, 0, 0, 1, 0, 0, 1]' : 0.547927}
{'[0, 2, 1, 3, 0, 0, 0, 1, 14, 16, 0, 6, 0, 0, 1, 0, 0, 1]' : 0.563971}
{'[0, 2, 1, 3, 0, 0, 0, 1, 14, 16, 0, 6, 0, 0, 1, 0, 0, 1]' : 0.536371}
{'[0, 2, 1, 3, 0, 0, 0, 1, 14, 16, 0, 6, 0, 0, 1, 0, 0, 1]' : 0.544699}
{'[0, 2, 1, 3, 0, 0, 0, 1, 14, 16, 0, 6, 0, 0, 1, 0, 0, 1]' : 0.565738}
{'[0, 2, 1, 3, 0, 0, 0, 1, 14, 16, 0, 6, 0, 0, 1, 0, 0, 1]' : 0.552472}
{'[0, 2, 1, 3, 0, 0, 0, 1, 14, 16, 0, 6, 0, 0, 1, 0, 0, 1]' : 0.536148}
{'[0, 2, 1, 3, 0, 0, 0, 1, 14, 16, 0, 6, 0, 0, 1, 0, 0, 1]' : 0.534701}
{'[0, 2, 1, 3, 0, 0, 0, 1, 14, 16, 0, 6, 0, 0, 1, 0, 0, 1]' : 0.537168}
{'[0, 2, 1, 3, 0, 0, 0, 1, 14, 16, 0, 6, 0, 0, 1, 0, 0, 1]' : 0.535737}
{'[0, 2, 1, 3, 0, 0, 0, 1, 14, 16, 0, 6, 0, 0, 1, 0, 0, 1]' : 0.536834}
{'[0, 2, 1, 3, 0, 0, 0, 1, 14, 16, 0, 6, 0, 0, 1, 0, 0, 1]' : 0.535103}
{'[0, 2, 1, 3, 0, 0, 0, 1, 14, 16, 0, 6, 0, 0, 1, 0, 0, 1]' : 0.537467}
{'[0, 2, 1, 3, 0, 0, 0, 1, 14, 16, 0, 6, 0, 0, 1, 0, 0, 1]' : 0.536269}
{'[0, 2, 1, 3, 0, 0, 0, 1, 14, 16, 0, 6, 0, 0, 1, 0, 0, 1]' : 0.535047}
{'[0, 2, 1, 3, 0, 0, 0, 1, 14, 16, 0, 6, 0, 0, 1, 0, 0, 1]' : 0.534509}
{'[0, 2, 1, 3, 0, 0, 0, 1, 14, 16, 0, 6, 0, 0, 1, 0, 0, 1]' : 0.534689}
{'[0, 2, 1, 3, 0, 0, 0, 1, 14, 16, 0, 6, 0, 0, 1, 0, 0, 1]' : 0.535822}
{'[0, 2, 1, 3, 0, 0, 0, 1, 14, 16, 0, 6, 0, 0, 1, 0, 0, 1]' : 0.535309}
{'[0, 2, 1, 3, 0, 0, 0, 1, 14, 16, 0, 6, 0, 0, 1, 0, 0, 1]' : 0.538199}
{'[0, 2, 1, 3, 0, 0, 0, 1, 14, 16, 0, 6, 0, 0, 1, 0, 0, 1]' : 0.539405}
{'[0, 2, 1, 3, 0, 0, 0, 1, 14, 16, 0, 6, 0, 0, 1, 0, 0, 1]' : 0.535838}
{'[0, 2, 1, 3, 0, 0, 0, 1, 14, 16, 0, 6, 0, 0, 1, 0, 0, 1]' : 0.550163}
{'[0, 2, 1, 3, 0, 0, 0, 1, 14, 16, 0, 6, 0, 0, 1, 0, 0, 1]' : 0.53609}
{'[0, 2, 1, 3, 0, 0, 0, 1, 14, 16, 0, 6, 0, 0, 1, 0, 0, 1]' : 0.535692}

out:
 ["{'[0, 2, 1, 3, 0, 0, 0, 1, 14, 16, 0, 6, 0, 0, 1, 0, 0, 1]' : 0.541238}", "{'[0, 2, 1, 3, 0, 0, 0, 1, 14, 16, 0, 6, 0, 0, 1, 0, 0, 1]' : 0.541159}", "{'[0, 2, 1, 3, 0, 0, 0, 1, 14, 16, 0, 6, 0, 0, 1, 0, 0, 1]' : 0.534773}", "{'[0, 2, 1, 3, 0, 0, 0, 1, 14, 16, 0, 6, 0, 0, 1, 0, 0, 1]' : 0.542356}", "{'[0, 2, 1, 3, 0, 0, 0, 1, 14, 16, 0, 6, 0, 0, 1, 0, 0, 1]' : 0.535903}", "{'[0, 2, 1, 3, 0, 0, 0, 1, 14, 16, 0, 6, 0, 0, 1, 0, 0, 1]' : 0.547927}", "{'[0, 2, 1, 3, 0, 0, 0, 1, 14, 16, 0, 6, 0, 0, 1, 0, 0, 1]' : 0.563971}", "{'[0, 2, 1, 3, 0, 0, 0, 1, 14, 16, 0, 6, 0, 0, 1, 0, 0, 1]' : 0.536371}", "{'[0, 2, 1, 3, 0, 0, 0, 1, 14, 16, 0, 6, 0, 0, 1, 0, 0, 1]' : 0.544699}", "{'[0, 2, 1, 3, 0, 0, 0, 1, 14, 16, 0, 6, 0, 0, 1, 0, 0, 1]' : 0.565738}", "{'[0, 2, 1, 3, 0, 0, 0, 1, 14, 16, 0, 6, 0, 0, 1, 0, 0, 1]' : 0.552472}", "{'[0, 2, 1, 3, 0, 0, 0, 1, 14, 16, 0, 6, 0, 0, 1, 0, 0, 1]' : 0.536148}", "{'[0, 2, 1, 3, 0, 0, 0, 1, 14, 16, 0, 6, 0, 0, 1, 0, 0, 1]' : 0.534701}", "{'[0, 2, 1, 3, 0, 0, 0, 1, 14, 16, 0, 6, 0, 0, 1, 0, 0, 1]' : 0.537168}", "{'[0, 2, 1, 3, 0, 0, 0, 1, 14, 16, 0, 6, 0, 0, 1, 0, 0, 1]' : 0.535737}", "{'[0, 2, 1, 3, 0, 0, 0, 1, 14, 16, 0, 6, 0, 0, 1, 0, 0, 1]' : 0.536834}", "{'[0, 2, 1, 3, 0, 0, 0, 1, 14, 16, 0, 6, 0, 0, 1, 0, 0, 1]' : 0.535103}", "{'[0, 2, 1, 3, 0, 0, 0, 1, 14, 16, 0, 6, 0, 0, 1, 0, 0, 1]' : 0.537467}", "{'[0, 2, 1, 3, 0, 0, 0, 1, 14, 16, 0, 6, 0, 0, 1, 0, 0, 1]' : 0.536269}", "{'[0, 2, 1, 3, 0, 0, 0, 1, 14, 16, 0, 6, 0, 0, 1, 0, 0, 1]' : 0.535047}", "{'[0, 2, 1, 3, 0, 0, 0, 1, 14, 16, 0, 6, 0, 0, 1, 0, 0, 1]' : 0.534509}", "{'[0, 2, 1, 3, 0, 0, 0, 1, 14, 16, 0, 6, 0, 0, 1, 0, 0, 1]' : 0.534689}", "{'[0, 2, 1, 3, 0, 0, 0, 1, 14, 16, 0, 6, 0, 0, 1, 0, 0, 1]' : 0.535822}", "{'[0, 2, 1, 3, 0, 0, 0, 1, 14, 16, 0, 6, 0, 0, 1, 0, 0, 1]' : 0.535309}", "{'[0, 2, 1, 3, 0, 0, 0, 1, 14, 16, 0, 6, 0, 0, 1, 0, 0, 1]' : 0.538199}", "{'[0, 2, 1, 3, 0, 0, 0, 1, 14, 16, 0, 6, 0, 0, 1, 0, 0, 1]' : 0.539405}", "{'[0, 2, 1, 3, 0, 0, 0, 1, 14, 16, 0, 6, 0, 0, 1, 0, 0, 1]' : 0.535838}", "{'[0, 2, 1, 3, 0, 0, 0, 1, 14, 16, 0, 6, 0, 0, 1, 0, 0, 1]' : 0.550163}", "{'[0, 2, 1, 3, 0, 0, 0, 1, 14, 16, 0, 6, 0, 0, 1, 0, 0, 1]' : 0.53609}", "{'[0, 2, 1, 3, 0, 0, 0, 1, 14, 16, 0, 6, 0, 0, 1, 0, 0, 1]' : 0.535692}"]
returning from 'run': {'[0, 2, 1, 3, 0, 0, 0, 1, 14, 16, 0, 6, 0, 0, 1, 0, 0, 1]': ([0.541238, 0.541159, 0.534773, 0.542356, 0.535903, 0.547927, 0.563971, 0.536371, 0.544699, 0.565738, 0.552472, 0.536148, 0.534701, 0.537168, 0.535737, 0.536834, 0.535103, 0.537467, 0.536269, 0.535047, 0.534509, 0.534689, 0.535822, 0.535309, 0.538199, 0.539405, 0.535838, 0.550163, 0.53609, 0.535692], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 1, 3, 0, 0, 0, 1, 14, 16, 0, 6, 0, 0, 1, 0, 0, 1]': ([0.541238, 0.541159, 0.534773, 0.542356, 0.535903, 0.547927, 0.563971, 0.536371, 0.544699, 0.565738, 0.552472, 0.536148, 0.534701, 0.537168, 0.535737, 0.536834, 0.535103, 0.537467, 0.536269, 0.535047, 0.534509, 0.534689, 0.535822, 0.535309, 0.538199, 0.539405, 0.535838, 0.550163, 0.53609, 0.535692], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = iii
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		375
        Multiplications: 	124
        Divisions: 		0
        Logical: 		0
        Reads: 			774
        Writes: 		112
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest12.exe __orio_perftest12.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest12.exe  
Program Test Output: 
{'[4, 0, 3, 2, 3, 0, 1, 0, 22, 0, 13, 13, 0, 0, 2, 0, 0, 0]' : 0.752044}
{'[4, 0, 3, 2, 3, 0, 1, 0, 22, 0, 13, 13, 0, 0, 2, 0, 0, 0]' : 0.753914}
{'[4, 0, 3, 2, 3, 0, 1, 0, 22, 0, 13, 13, 0, 0, 2, 0, 0, 0]' : 0.751105}
{'[4, 0, 3, 2, 3, 0, 1, 0, 22, 0, 13, 13, 0, 0, 2, 0, 0, 0]' : 0.754171}
{'[4, 0, 3, 2, 3, 0, 1, 0, 22, 0, 13, 13, 0, 0, 2, 0, 0, 0]' : 0.750931}
{'[4, 0, 3, 2, 3, 0, 1, 0, 22, 0, 13, 13, 0, 0, 2, 0, 0, 0]' : 0.750983}
{'[4, 0, 3, 2, 3, 0, 1, 0, 22, 0, 13, 13, 0, 0, 2, 0, 0, 0]' : 0.769073}
{'[4, 0, 3, 2, 3, 0, 1, 0, 22, 0, 13, 13, 0, 0, 2, 0, 0, 0]' : 0.778131}
{'[4, 0, 3, 2, 3, 0, 1, 0, 22, 0, 13, 13, 0, 0, 2, 0, 0, 0]' : 0.781542}
{'[4, 0, 3, 2, 3, 0, 1, 0, 22, 0, 13, 13, 0, 0, 2, 0, 0, 0]' : 0.794864}
{'[4, 0, 3, 2, 3, 0, 1, 0, 22, 0, 13, 13, 0, 0, 2, 0, 0, 0]' : 0.78873}
{'[4, 0, 3, 2, 3, 0, 1, 0, 22, 0, 13, 13, 0, 0, 2, 0, 0, 0]' : 0.755157}
{'[4, 0, 3, 2, 3, 0, 1, 0, 22, 0, 13, 13, 0, 0, 2, 0, 0, 0]' : 0.767625}
{'[4, 0, 3, 2, 3, 0, 1, 0, 22, 0, 13, 13, 0, 0, 2, 0, 0, 0]' : 0.755197}
{'[4, 0, 3, 2, 3, 0, 1, 0, 22, 0, 13, 13, 0, 0, 2, 0, 0, 0]' : 0.764699}
{'[4, 0, 3, 2, 3, 0, 1, 0, 22, 0, 13, 13, 0, 0, 2, 0, 0, 0]' : 0.78336}
{'[4, 0, 3, 2, 3, 0, 1, 0, 22, 0, 13, 13, 0, 0, 2, 0, 0, 0]' : 0.759919}
{'[4, 0, 3, 2, 3, 0, 1, 0, 22, 0, 13, 13, 0, 0, 2, 0, 0, 0]' : 0.759338}
{'[4, 0, 3, 2, 3, 0, 1, 0, 22, 0, 13, 13, 0, 0, 2, 0, 0, 0]' : 0.749467}
{'[4, 0, 3, 2, 3, 0, 1, 0, 22, 0, 13, 13, 0, 0, 2, 0, 0, 0]' : 0.749395}
{'[4, 0, 3, 2, 3, 0, 1, 0, 22, 0, 13, 13, 0, 0, 2, 0, 0, 0]' : 0.769921}
{'[4, 0, 3, 2, 3, 0, 1, 0, 22, 0, 13, 13, 0, 0, 2, 0, 0, 0]' : 0.746815}
{'[4, 0, 3, 2, 3, 0, 1, 0, 22, 0, 13, 13, 0, 0, 2, 0, 0, 0]' : 0.746166}
{'[4, 0, 3, 2, 3, 0, 1, 0, 22, 0, 13, 13, 0, 0, 2, 0, 0, 0]' : 0.751549}
{'[4, 0, 3, 2, 3, 0, 1, 0, 22, 0, 13, 13, 0, 0, 2, 0, 0, 0]' : 0.747548}
{'[4, 0, 3, 2, 3, 0, 1, 0, 22, 0, 13, 13, 0, 0, 2, 0, 0, 0]' : 0.747204}
{'[4, 0, 3, 2, 3, 0, 1, 0, 22, 0, 13, 13, 0, 0, 2, 0, 0, 0]' : 0.771336}
{'[4, 0, 3, 2, 3, 0, 1, 0, 22, 0, 13, 13, 0, 0, 2, 0, 0, 0]' : 0.764773}
{'[4, 0, 3, 2, 3, 0, 1, 0, 22, 0, 13, 13, 0, 0, 2, 0, 0, 0]' : 0.755707}
{'[4, 0, 3, 2, 3, 0, 1, 0, 22, 0, 13, 13, 0, 0, 2, 0, 0, 0]' : 0.767624}

out:
 ["{'[4, 0, 3, 2, 3, 0, 1, 0, 22, 0, 13, 13, 0, 0, 2, 0, 0, 0]' : 0.752044}", "{'[4, 0, 3, 2, 3, 0, 1, 0, 22, 0, 13, 13, 0, 0, 2, 0, 0, 0]' : 0.753914}", "{'[4, 0, 3, 2, 3, 0, 1, 0, 22, 0, 13, 13, 0, 0, 2, 0, 0, 0]' : 0.751105}", "{'[4, 0, 3, 2, 3, 0, 1, 0, 22, 0, 13, 13, 0, 0, 2, 0, 0, 0]' : 0.754171}", "{'[4, 0, 3, 2, 3, 0, 1, 0, 22, 0, 13, 13, 0, 0, 2, 0, 0, 0]' : 0.750931}", "{'[4, 0, 3, 2, 3, 0, 1, 0, 22, 0, 13, 13, 0, 0, 2, 0, 0, 0]' : 0.750983}", "{'[4, 0, 3, 2, 3, 0, 1, 0, 22, 0, 13, 13, 0, 0, 2, 0, 0, 0]' : 0.769073}", "{'[4, 0, 3, 2, 3, 0, 1, 0, 22, 0, 13, 13, 0, 0, 2, 0, 0, 0]' : 0.778131}", "{'[4, 0, 3, 2, 3, 0, 1, 0, 22, 0, 13, 13, 0, 0, 2, 0, 0, 0]' : 0.781542}", "{'[4, 0, 3, 2, 3, 0, 1, 0, 22, 0, 13, 13, 0, 0, 2, 0, 0, 0]' : 0.794864}", "{'[4, 0, 3, 2, 3, 0, 1, 0, 22, 0, 13, 13, 0, 0, 2, 0, 0, 0]' : 0.78873}", "{'[4, 0, 3, 2, 3, 0, 1, 0, 22, 0, 13, 13, 0, 0, 2, 0, 0, 0]' : 0.755157}", "{'[4, 0, 3, 2, 3, 0, 1, 0, 22, 0, 13, 13, 0, 0, 2, 0, 0, 0]' : 0.767625}", "{'[4, 0, 3, 2, 3, 0, 1, 0, 22, 0, 13, 13, 0, 0, 2, 0, 0, 0]' : 0.755197}", "{'[4, 0, 3, 2, 3, 0, 1, 0, 22, 0, 13, 13, 0, 0, 2, 0, 0, 0]' : 0.764699}", "{'[4, 0, 3, 2, 3, 0, 1, 0, 22, 0, 13, 13, 0, 0, 2, 0, 0, 0]' : 0.78336}", "{'[4, 0, 3, 2, 3, 0, 1, 0, 22, 0, 13, 13, 0, 0, 2, 0, 0, 0]' : 0.759919}", "{'[4, 0, 3, 2, 3, 0, 1, 0, 22, 0, 13, 13, 0, 0, 2, 0, 0, 0]' : 0.759338}", "{'[4, 0, 3, 2, 3, 0, 1, 0, 22, 0, 13, 13, 0, 0, 2, 0, 0, 0]' : 0.749467}", "{'[4, 0, 3, 2, 3, 0, 1, 0, 22, 0, 13, 13, 0, 0, 2, 0, 0, 0]' : 0.749395}", "{'[4, 0, 3, 2, 3, 0, 1, 0, 22, 0, 13, 13, 0, 0, 2, 0, 0, 0]' : 0.769921}", "{'[4, 0, 3, 2, 3, 0, 1, 0, 22, 0, 13, 13, 0, 0, 2, 0, 0, 0]' : 0.746815}", "{'[4, 0, 3, 2, 3, 0, 1, 0, 22, 0, 13, 13, 0, 0, 2, 0, 0, 0]' : 0.746166}", "{'[4, 0, 3, 2, 3, 0, 1, 0, 22, 0, 13, 13, 0, 0, 2, 0, 0, 0]' : 0.751549}", "{'[4, 0, 3, 2, 3, 0, 1, 0, 22, 0, 13, 13, 0, 0, 2, 0, 0, 0]' : 0.747548}", "{'[4, 0, 3, 2, 3, 0, 1, 0, 22, 0, 13, 13, 0, 0, 2, 0, 0, 0]' : 0.747204}", "{'[4, 0, 3, 2, 3, 0, 1, 0, 22, 0, 13, 13, 0, 0, 2, 0, 0, 0]' : 0.771336}", "{'[4, 0, 3, 2, 3, 0, 1, 0, 22, 0, 13, 13, 0, 0, 2, 0, 0, 0]' : 0.764773}", "{'[4, 0, 3, 2, 3, 0, 1, 0, 22, 0, 13, 13, 0, 0, 2, 0, 0, 0]' : 0.755707}", "{'[4, 0, 3, 2, 3, 0, 1, 0, 22, 0, 13, 13, 0, 0, 2, 0, 0, 0]' : 0.767624}"]
returning from 'run': {'[4, 0, 3, 2, 3, 0, 1, 0, 22, 0, 13, 13, 0, 0, 2, 0, 0, 0]': ([0.752044, 0.753914, 0.751105, 0.754171, 0.750931, 0.750983, 0.769073, 0.778131, 0.781542, 0.794864, 0.78873, 0.755157, 0.767625, 0.755197, 0.764699, 0.78336, 0.759919, 0.759338, 0.749467, 0.749395, 0.769921, 0.746815, 0.746166, 0.751549, 0.747548, 0.747204, 0.771336, 0.764773, 0.755707, 0.767624], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 0, 3, 2, 3, 0, 1, 0, 22, 0, 13, 13, 0, 0, 2, 0, 0, 0]': ([0.752044, 0.753914, 0.751105, 0.754171, 0.750931, 0.750983, 0.769073, 0.778131, 0.781542, 0.794864, 0.78873, 0.755157, 0.767625, 0.755197, 0.764699, 0.78336, 0.759919, 0.759338, 0.749467, 0.749395, 0.769921, 0.746815, 0.746166, 0.751549, 0.747548, 0.747204, 0.771336, 0.764773, 0.755707, 0.767624], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	93
        Max loop nest depth: 	6
        Additions: 		1282
        Multiplications: 	450
        Divisions: 		0
        Logical: 		0
        Reads: 			2860
        Writes: 		587
        Comparisons:		93
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest13.exe __orio_perftest13.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest13.exe  
Program Test Output: 
{'[3, 1, 6, 2, 4, 6, 1, 1, 8, 23, 16, 0, 0, 1, 0, 1, 0, 1]' : 0.557442}
{'[3, 1, 6, 2, 4, 6, 1, 1, 8, 23, 16, 0, 0, 1, 0, 1, 0, 1]' : 0.538396}
{'[3, 1, 6, 2, 4, 6, 1, 1, 8, 23, 16, 0, 0, 1, 0, 1, 0, 1]' : 0.537768}
{'[3, 1, 6, 2, 4, 6, 1, 1, 8, 23, 16, 0, 0, 1, 0, 1, 0, 1]' : 0.564143}
{'[3, 1, 6, 2, 4, 6, 1, 1, 8, 23, 16, 0, 0, 1, 0, 1, 0, 1]' : 0.541963}
{'[3, 1, 6, 2, 4, 6, 1, 1, 8, 23, 16, 0, 0, 1, 0, 1, 0, 1]' : 0.543871}
{'[3, 1, 6, 2, 4, 6, 1, 1, 8, 23, 16, 0, 0, 1, 0, 1, 0, 1]' : 0.635923}
{'[3, 1, 6, 2, 4, 6, 1, 1, 8, 23, 16, 0, 0, 1, 0, 1, 0, 1]' : 0.564187}
{'[3, 1, 6, 2, 4, 6, 1, 1, 8, 23, 16, 0, 0, 1, 0, 1, 0, 1]' : 0.550328}
{'[3, 1, 6, 2, 4, 6, 1, 1, 8, 23, 16, 0, 0, 1, 0, 1, 0, 1]' : 0.542217}
{'[3, 1, 6, 2, 4, 6, 1, 1, 8, 23, 16, 0, 0, 1, 0, 1, 0, 1]' : 0.545555}
{'[3, 1, 6, 2, 4, 6, 1, 1, 8, 23, 16, 0, 0, 1, 0, 1, 0, 1]' : 0.544769}
{'[3, 1, 6, 2, 4, 6, 1, 1, 8, 23, 16, 0, 0, 1, 0, 1, 0, 1]' : 0.535588}
{'[3, 1, 6, 2, 4, 6, 1, 1, 8, 23, 16, 0, 0, 1, 0, 1, 0, 1]' : 0.541328}
{'[3, 1, 6, 2, 4, 6, 1, 1, 8, 23, 16, 0, 0, 1, 0, 1, 0, 1]' : 0.535813}
{'[3, 1, 6, 2, 4, 6, 1, 1, 8, 23, 16, 0, 0, 1, 0, 1, 0, 1]' : 0.535772}
{'[3, 1, 6, 2, 4, 6, 1, 1, 8, 23, 16, 0, 0, 1, 0, 1, 0, 1]' : 0.536627}
{'[3, 1, 6, 2, 4, 6, 1, 1, 8, 23, 16, 0, 0, 1, 0, 1, 0, 1]' : 0.536088}
{'[3, 1, 6, 2, 4, 6, 1, 1, 8, 23, 16, 0, 0, 1, 0, 1, 0, 1]' : 0.559281}
{'[3, 1, 6, 2, 4, 6, 1, 1, 8, 23, 16, 0, 0, 1, 0, 1, 0, 1]' : 0.542767}
{'[3, 1, 6, 2, 4, 6, 1, 1, 8, 23, 16, 0, 0, 1, 0, 1, 0, 1]' : 0.536545}
{'[3, 1, 6, 2, 4, 6, 1, 1, 8, 23, 16, 0, 0, 1, 0, 1, 0, 1]' : 0.548525}
{'[3, 1, 6, 2, 4, 6, 1, 1, 8, 23, 16, 0, 0, 1, 0, 1, 0, 1]' : 0.598003}
{'[3, 1, 6, 2, 4, 6, 1, 1, 8, 23, 16, 0, 0, 1, 0, 1, 0, 1]' : 0.607722}
{'[3, 1, 6, 2, 4, 6, 1, 1, 8, 23, 16, 0, 0, 1, 0, 1, 0, 1]' : 0.53638}
{'[3, 1, 6, 2, 4, 6, 1, 1, 8, 23, 16, 0, 0, 1, 0, 1, 0, 1]' : 0.536276}
{'[3, 1, 6, 2, 4, 6, 1, 1, 8, 23, 16, 0, 0, 1, 0, 1, 0, 1]' : 0.535946}
{'[3, 1, 6, 2, 4, 6, 1, 1, 8, 23, 16, 0, 0, 1, 0, 1, 0, 1]' : 0.537528}
{'[3, 1, 6, 2, 4, 6, 1, 1, 8, 23, 16, 0, 0, 1, 0, 1, 0, 1]' : 0.536222}
{'[3, 1, 6, 2, 4, 6, 1, 1, 8, 23, 16, 0, 0, 1, 0, 1, 0, 1]' : 0.536173}

out:
 ["{'[3, 1, 6, 2, 4, 6, 1, 1, 8, 23, 16, 0, 0, 1, 0, 1, 0, 1]' : 0.557442}", "{'[3, 1, 6, 2, 4, 6, 1, 1, 8, 23, 16, 0, 0, 1, 0, 1, 0, 1]' : 0.538396}", "{'[3, 1, 6, 2, 4, 6, 1, 1, 8, 23, 16, 0, 0, 1, 0, 1, 0, 1]' : 0.537768}", "{'[3, 1, 6, 2, 4, 6, 1, 1, 8, 23, 16, 0, 0, 1, 0, 1, 0, 1]' : 0.564143}", "{'[3, 1, 6, 2, 4, 6, 1, 1, 8, 23, 16, 0, 0, 1, 0, 1, 0, 1]' : 0.541963}", "{'[3, 1, 6, 2, 4, 6, 1, 1, 8, 23, 16, 0, 0, 1, 0, 1, 0, 1]' : 0.543871}", "{'[3, 1, 6, 2, 4, 6, 1, 1, 8, 23, 16, 0, 0, 1, 0, 1, 0, 1]' : 0.635923}", "{'[3, 1, 6, 2, 4, 6, 1, 1, 8, 23, 16, 0, 0, 1, 0, 1, 0, 1]' : 0.564187}", "{'[3, 1, 6, 2, 4, 6, 1, 1, 8, 23, 16, 0, 0, 1, 0, 1, 0, 1]' : 0.550328}", "{'[3, 1, 6, 2, 4, 6, 1, 1, 8, 23, 16, 0, 0, 1, 0, 1, 0, 1]' : 0.542217}", "{'[3, 1, 6, 2, 4, 6, 1, 1, 8, 23, 16, 0, 0, 1, 0, 1, 0, 1]' : 0.545555}", "{'[3, 1, 6, 2, 4, 6, 1, 1, 8, 23, 16, 0, 0, 1, 0, 1, 0, 1]' : 0.544769}", "{'[3, 1, 6, 2, 4, 6, 1, 1, 8, 23, 16, 0, 0, 1, 0, 1, 0, 1]' : 0.535588}", "{'[3, 1, 6, 2, 4, 6, 1, 1, 8, 23, 16, 0, 0, 1, 0, 1, 0, 1]' : 0.541328}", "{'[3, 1, 6, 2, 4, 6, 1, 1, 8, 23, 16, 0, 0, 1, 0, 1, 0, 1]' : 0.535813}", "{'[3, 1, 6, 2, 4, 6, 1, 1, 8, 23, 16, 0, 0, 1, 0, 1, 0, 1]' : 0.535772}", "{'[3, 1, 6, 2, 4, 6, 1, 1, 8, 23, 16, 0, 0, 1, 0, 1, 0, 1]' : 0.536627}", "{'[3, 1, 6, 2, 4, 6, 1, 1, 8, 23, 16, 0, 0, 1, 0, 1, 0, 1]' : 0.536088}", "{'[3, 1, 6, 2, 4, 6, 1, 1, 8, 23, 16, 0, 0, 1, 0, 1, 0, 1]' : 0.559281}", "{'[3, 1, 6, 2, 4, 6, 1, 1, 8, 23, 16, 0, 0, 1, 0, 1, 0, 1]' : 0.542767}", "{'[3, 1, 6, 2, 4, 6, 1, 1, 8, 23, 16, 0, 0, 1, 0, 1, 0, 1]' : 0.536545}", "{'[3, 1, 6, 2, 4, 6, 1, 1, 8, 23, 16, 0, 0, 1, 0, 1, 0, 1]' : 0.548525}", "{'[3, 1, 6, 2, 4, 6, 1, 1, 8, 23, 16, 0, 0, 1, 0, 1, 0, 1]' : 0.598003}", "{'[3, 1, 6, 2, 4, 6, 1, 1, 8, 23, 16, 0, 0, 1, 0, 1, 0, 1]' : 0.607722}", "{'[3, 1, 6, 2, 4, 6, 1, 1, 8, 23, 16, 0, 0, 1, 0, 1, 0, 1]' : 0.53638}", "{'[3, 1, 6, 2, 4, 6, 1, 1, 8, 23, 16, 0, 0, 1, 0, 1, 0, 1]' : 0.536276}", "{'[3, 1, 6, 2, 4, 6, 1, 1, 8, 23, 16, 0, 0, 1, 0, 1, 0, 1]' : 0.535946}", "{'[3, 1, 6, 2, 4, 6, 1, 1, 8, 23, 16, 0, 0, 1, 0, 1, 0, 1]' : 0.537528}", "{'[3, 1, 6, 2, 4, 6, 1, 1, 8, 23, 16, 0, 0, 1, 0, 1, 0, 1]' : 0.536222}", "{'[3, 1, 6, 2, 4, 6, 1, 1, 8, 23, 16, 0, 0, 1, 0, 1, 0, 1]' : 0.536173}"]
returning from 'run': {'[3, 1, 6, 2, 4, 6, 1, 1, 8, 23, 16, 0, 0, 1, 0, 1, 0, 1]': ([0.557442, 0.538396, 0.537768, 0.564143, 0.541963, 0.543871, 0.635923, 0.564187, 0.550328, 0.542217, 0.545555, 0.544769, 0.535588, 0.541328, 0.535813, 0.535772, 0.536627, 0.536088, 0.559281, 0.542767, 0.536545, 0.548525, 0.598003, 0.607722, 0.53638, 0.536276, 0.535946, 0.537528, 0.536222, 0.536173], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 1, 6, 2, 4, 6, 1, 1, 8, 23, 16, 0, 0, 1, 0, 1, 0, 1]': ([0.557442, 0.538396, 0.537768, 0.564143, 0.541963, 0.543871, 0.635923, 0.564187, 0.550328, 0.542217, 0.545555, 0.544769, 0.535588, 0.541328, 0.535813, 0.535772, 0.536627, 0.536088, 0.559281, 0.542767, 0.536545, 0.548525, 0.598003, 0.607722, 0.53638, 0.536276, 0.535946, 0.537528, 0.536222, 0.536173], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	173
        Max loop nest depth: 	6
        Additions: 		4692
        Multiplications: 	988
        Divisions: 		0
        Logical: 		0
        Reads: 			7668
        Writes: 		1061
        Comparisons:		173
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest14.exe __orio_perftest14.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest14.exe  
Program Test Output: 
{'[2, 0, 2, 3, 1, 3, 1, 1, 0, 28, 0, 3, 1, 1, 0, 0, 0, 1]' : 0.257009}
{'[2, 0, 2, 3, 1, 3, 1, 1, 0, 28, 0, 3, 1, 1, 0, 0, 0, 1]' : 0.255511}
{'[2, 0, 2, 3, 1, 3, 1, 1, 0, 28, 0, 3, 1, 1, 0, 0, 0, 1]' : 0.256473}
{'[2, 0, 2, 3, 1, 3, 1, 1, 0, 28, 0, 3, 1, 1, 0, 0, 0, 1]' : 0.25532}
{'[2, 0, 2, 3, 1, 3, 1, 1, 0, 28, 0, 3, 1, 1, 0, 0, 0, 1]' : 0.255808}
{'[2, 0, 2, 3, 1, 3, 1, 1, 0, 28, 0, 3, 1, 1, 0, 0, 0, 1]' : 0.256263}
{'[2, 0, 2, 3, 1, 3, 1, 1, 0, 28, 0, 3, 1, 1, 0, 0, 0, 1]' : 0.256298}
{'[2, 0, 2, 3, 1, 3, 1, 1, 0, 28, 0, 3, 1, 1, 0, 0, 0, 1]' : 0.254705}
{'[2, 0, 2, 3, 1, 3, 1, 1, 0, 28, 0, 3, 1, 1, 0, 0, 0, 1]' : 0.256112}
{'[2, 0, 2, 3, 1, 3, 1, 1, 0, 28, 0, 3, 1, 1, 0, 0, 0, 1]' : 0.255197}
{'[2, 0, 2, 3, 1, 3, 1, 1, 0, 28, 0, 3, 1, 1, 0, 0, 0, 1]' : 0.255736}
{'[2, 0, 2, 3, 1, 3, 1, 1, 0, 28, 0, 3, 1, 1, 0, 0, 0, 1]' : 0.256123}
{'[2, 0, 2, 3, 1, 3, 1, 1, 0, 28, 0, 3, 1, 1, 0, 0, 0, 1]' : 0.256286}
{'[2, 0, 2, 3, 1, 3, 1, 1, 0, 28, 0, 3, 1, 1, 0, 0, 0, 1]' : 0.255367}
{'[2, 0, 2, 3, 1, 3, 1, 1, 0, 28, 0, 3, 1, 1, 0, 0, 0, 1]' : 0.255584}
{'[2, 0, 2, 3, 1, 3, 1, 1, 0, 28, 0, 3, 1, 1, 0, 0, 0, 1]' : 0.256217}
{'[2, 0, 2, 3, 1, 3, 1, 1, 0, 28, 0, 3, 1, 1, 0, 0, 0, 1]' : 0.255546}
{'[2, 0, 2, 3, 1, 3, 1, 1, 0, 28, 0, 3, 1, 1, 0, 0, 0, 1]' : 0.255761}
{'[2, 0, 2, 3, 1, 3, 1, 1, 0, 28, 0, 3, 1, 1, 0, 0, 0, 1]' : 0.25473}
{'[2, 0, 2, 3, 1, 3, 1, 1, 0, 28, 0, 3, 1, 1, 0, 0, 0, 1]' : 0.255972}
{'[2, 0, 2, 3, 1, 3, 1, 1, 0, 28, 0, 3, 1, 1, 0, 0, 0, 1]' : 0.254915}
{'[2, 0, 2, 3, 1, 3, 1, 1, 0, 28, 0, 3, 1, 1, 0, 0, 0, 1]' : 0.255699}
{'[2, 0, 2, 3, 1, 3, 1, 1, 0, 28, 0, 3, 1, 1, 0, 0, 0, 1]' : 0.255871}
{'[2, 0, 2, 3, 1, 3, 1, 1, 0, 28, 0, 3, 1, 1, 0, 0, 0, 1]' : 0.255756}
{'[2, 0, 2, 3, 1, 3, 1, 1, 0, 28, 0, 3, 1, 1, 0, 0, 0, 1]' : 0.255119}
{'[2, 0, 2, 3, 1, 3, 1, 1, 0, 28, 0, 3, 1, 1, 0, 0, 0, 1]' : 0.25595}
{'[2, 0, 2, 3, 1, 3, 1, 1, 0, 28, 0, 3, 1, 1, 0, 0, 0, 1]' : 0.25509}
{'[2, 0, 2, 3, 1, 3, 1, 1, 0, 28, 0, 3, 1, 1, 0, 0, 0, 1]' : 0.255581}
{'[2, 0, 2, 3, 1, 3, 1, 1, 0, 28, 0, 3, 1, 1, 0, 0, 0, 1]' : 0.255587}
{'[2, 0, 2, 3, 1, 3, 1, 1, 0, 28, 0, 3, 1, 1, 0, 0, 0, 1]' : 0.255749}

out:
 ["{'[2, 0, 2, 3, 1, 3, 1, 1, 0, 28, 0, 3, 1, 1, 0, 0, 0, 1]' : 0.257009}", "{'[2, 0, 2, 3, 1, 3, 1, 1, 0, 28, 0, 3, 1, 1, 0, 0, 0, 1]' : 0.255511}", "{'[2, 0, 2, 3, 1, 3, 1, 1, 0, 28, 0, 3, 1, 1, 0, 0, 0, 1]' : 0.256473}", "{'[2, 0, 2, 3, 1, 3, 1, 1, 0, 28, 0, 3, 1, 1, 0, 0, 0, 1]' : 0.25532}", "{'[2, 0, 2, 3, 1, 3, 1, 1, 0, 28, 0, 3, 1, 1, 0, 0, 0, 1]' : 0.255808}", "{'[2, 0, 2, 3, 1, 3, 1, 1, 0, 28, 0, 3, 1, 1, 0, 0, 0, 1]' : 0.256263}", "{'[2, 0, 2, 3, 1, 3, 1, 1, 0, 28, 0, 3, 1, 1, 0, 0, 0, 1]' : 0.256298}", "{'[2, 0, 2, 3, 1, 3, 1, 1, 0, 28, 0, 3, 1, 1, 0, 0, 0, 1]' : 0.254705}", "{'[2, 0, 2, 3, 1, 3, 1, 1, 0, 28, 0, 3, 1, 1, 0, 0, 0, 1]' : 0.256112}", "{'[2, 0, 2, 3, 1, 3, 1, 1, 0, 28, 0, 3, 1, 1, 0, 0, 0, 1]' : 0.255197}", "{'[2, 0, 2, 3, 1, 3, 1, 1, 0, 28, 0, 3, 1, 1, 0, 0, 0, 1]' : 0.255736}", "{'[2, 0, 2, 3, 1, 3, 1, 1, 0, 28, 0, 3, 1, 1, 0, 0, 0, 1]' : 0.256123}", "{'[2, 0, 2, 3, 1, 3, 1, 1, 0, 28, 0, 3, 1, 1, 0, 0, 0, 1]' : 0.256286}", "{'[2, 0, 2, 3, 1, 3, 1, 1, 0, 28, 0, 3, 1, 1, 0, 0, 0, 1]' : 0.255367}", "{'[2, 0, 2, 3, 1, 3, 1, 1, 0, 28, 0, 3, 1, 1, 0, 0, 0, 1]' : 0.255584}", "{'[2, 0, 2, 3, 1, 3, 1, 1, 0, 28, 0, 3, 1, 1, 0, 0, 0, 1]' : 0.256217}", "{'[2, 0, 2, 3, 1, 3, 1, 1, 0, 28, 0, 3, 1, 1, 0, 0, 0, 1]' : 0.255546}", "{'[2, 0, 2, 3, 1, 3, 1, 1, 0, 28, 0, 3, 1, 1, 0, 0, 0, 1]' : 0.255761}", "{'[2, 0, 2, 3, 1, 3, 1, 1, 0, 28, 0, 3, 1, 1, 0, 0, 0, 1]' : 0.25473}", "{'[2, 0, 2, 3, 1, 3, 1, 1, 0, 28, 0, 3, 1, 1, 0, 0, 0, 1]' : 0.255972}", "{'[2, 0, 2, 3, 1, 3, 1, 1, 0, 28, 0, 3, 1, 1, 0, 0, 0, 1]' : 0.254915}", "{'[2, 0, 2, 3, 1, 3, 1, 1, 0, 28, 0, 3, 1, 1, 0, 0, 0, 1]' : 0.255699}", "{'[2, 0, 2, 3, 1, 3, 1, 1, 0, 28, 0, 3, 1, 1, 0, 0, 0, 1]' : 0.255871}", "{'[2, 0, 2, 3, 1, 3, 1, 1, 0, 28, 0, 3, 1, 1, 0, 0, 0, 1]' : 0.255756}", "{'[2, 0, 2, 3, 1, 3, 1, 1, 0, 28, 0, 3, 1, 1, 0, 0, 0, 1]' : 0.255119}", "{'[2, 0, 2, 3, 1, 3, 1, 1, 0, 28, 0, 3, 1, 1, 0, 0, 0, 1]' : 0.25595}", "{'[2, 0, 2, 3, 1, 3, 1, 1, 0, 28, 0, 3, 1, 1, 0, 0, 0, 1]' : 0.25509}", "{'[2, 0, 2, 3, 1, 3, 1, 1, 0, 28, 0, 3, 1, 1, 0, 0, 0, 1]' : 0.255581}", "{'[2, 0, 2, 3, 1, 3, 1, 1, 0, 28, 0, 3, 1, 1, 0, 0, 0, 1]' : 0.255587}", "{'[2, 0, 2, 3, 1, 3, 1, 1, 0, 28, 0, 3, 1, 1, 0, 0, 0, 1]' : 0.255749}"]
returning from 'run': {'[2, 0, 2, 3, 1, 3, 1, 1, 0, 28, 0, 3, 1, 1, 0, 0, 0, 1]': ([0.257009, 0.255511, 0.256473, 0.25532, 0.255808, 0.256263, 0.256298, 0.254705, 0.256112, 0.255197, 0.255736, 0.256123, 0.256286, 0.255367, 0.255584, 0.256217, 0.255546, 0.255761, 0.25473, 0.255972, 0.254915, 0.255699, 0.255871, 0.255756, 0.255119, 0.25595, 0.25509, 0.255581, 0.255587, 0.255749], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 2, 3, 1, 3, 1, 1, 0, 28, 0, 3, 1, 1, 0, 0, 0, 1]': ([0.257009, 0.255511, 0.256473, 0.25532, 0.255808, 0.256263, 0.256298, 0.254705, 0.256112, 0.255197, 0.255736, 0.256123, 0.256286, 0.255367, 0.255584, 0.256217, 0.255546, 0.255761, 0.25473, 0.255972, 0.254915, 0.255699, 0.255871, 0.255756, 0.255119, 0.25595, 0.25509, 0.255581, 0.255587, 0.255749], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	5
        Additions: 		1108
        Multiplications: 	528
        Divisions: 		0
        Logical: 		0
        Reads: 			2322
        Writes: 		411
        Comparisons:		22
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest15.exe __orio_perftest15.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest15.exe  
Program Test Output: 
{'[3, 0, 0, 3, 5, 2, 0, 1, 9, 0, 3, 1, 2, 0, 0, 1, 1, 0]' : 0.301643}
{'[3, 0, 0, 3, 5, 2, 0, 1, 9, 0, 3, 1, 2, 0, 0, 1, 1, 0]' : 0.29865}
{'[3, 0, 0, 3, 5, 2, 0, 1, 9, 0, 3, 1, 2, 0, 0, 1, 1, 0]' : 0.298253}
{'[3, 0, 0, 3, 5, 2, 0, 1, 9, 0, 3, 1, 2, 0, 0, 1, 1, 0]' : 0.299055}
{'[3, 0, 0, 3, 5, 2, 0, 1, 9, 0, 3, 1, 2, 0, 0, 1, 1, 0]' : 0.299869}
{'[3, 0, 0, 3, 5, 2, 0, 1, 9, 0, 3, 1, 2, 0, 0, 1, 1, 0]' : 0.299172}
{'[3, 0, 0, 3, 5, 2, 0, 1, 9, 0, 3, 1, 2, 0, 0, 1, 1, 0]' : 0.299075}
{'[3, 0, 0, 3, 5, 2, 0, 1, 9, 0, 3, 1, 2, 0, 0, 1, 1, 0]' : 0.298886}
{'[3, 0, 0, 3, 5, 2, 0, 1, 9, 0, 3, 1, 2, 0, 0, 1, 1, 0]' : 0.299476}
{'[3, 0, 0, 3, 5, 2, 0, 1, 9, 0, 3, 1, 2, 0, 0, 1, 1, 0]' : 0.298602}
{'[3, 0, 0, 3, 5, 2, 0, 1, 9, 0, 3, 1, 2, 0, 0, 1, 1, 0]' : 0.29822}
{'[3, 0, 0, 3, 5, 2, 0, 1, 9, 0, 3, 1, 2, 0, 0, 1, 1, 0]' : 0.299227}
{'[3, 0, 0, 3, 5, 2, 0, 1, 9, 0, 3, 1, 2, 0, 0, 1, 1, 0]' : 0.298682}
{'[3, 0, 0, 3, 5, 2, 0, 1, 9, 0, 3, 1, 2, 0, 0, 1, 1, 0]' : 0.298542}
{'[3, 0, 0, 3, 5, 2, 0, 1, 9, 0, 3, 1, 2, 0, 0, 1, 1, 0]' : 0.298661}
{'[3, 0, 0, 3, 5, 2, 0, 1, 9, 0, 3, 1, 2, 0, 0, 1, 1, 0]' : 0.300119}
{'[3, 0, 0, 3, 5, 2, 0, 1, 9, 0, 3, 1, 2, 0, 0, 1, 1, 0]' : 0.298421}
{'[3, 0, 0, 3, 5, 2, 0, 1, 9, 0, 3, 1, 2, 0, 0, 1, 1, 0]' : 0.299363}
{'[3, 0, 0, 3, 5, 2, 0, 1, 9, 0, 3, 1, 2, 0, 0, 1, 1, 0]' : 0.298761}
{'[3, 0, 0, 3, 5, 2, 0, 1, 9, 0, 3, 1, 2, 0, 0, 1, 1, 0]' : 0.298902}
{'[3, 0, 0, 3, 5, 2, 0, 1, 9, 0, 3, 1, 2, 0, 0, 1, 1, 0]' : 0.298111}
{'[3, 0, 0, 3, 5, 2, 0, 1, 9, 0, 3, 1, 2, 0, 0, 1, 1, 0]' : 0.300842}
{'[3, 0, 0, 3, 5, 2, 0, 1, 9, 0, 3, 1, 2, 0, 0, 1, 1, 0]' : 0.299276}
{'[3, 0, 0, 3, 5, 2, 0, 1, 9, 0, 3, 1, 2, 0, 0, 1, 1, 0]' : 0.300039}
{'[3, 0, 0, 3, 5, 2, 0, 1, 9, 0, 3, 1, 2, 0, 0, 1, 1, 0]' : 0.302238}
{'[3, 0, 0, 3, 5, 2, 0, 1, 9, 0, 3, 1, 2, 0, 0, 1, 1, 0]' : 0.298547}
{'[3, 0, 0, 3, 5, 2, 0, 1, 9, 0, 3, 1, 2, 0, 0, 1, 1, 0]' : 0.298217}
{'[3, 0, 0, 3, 5, 2, 0, 1, 9, 0, 3, 1, 2, 0, 0, 1, 1, 0]' : 0.297954}
{'[3, 0, 0, 3, 5, 2, 0, 1, 9, 0, 3, 1, 2, 0, 0, 1, 1, 0]' : 0.305069}
{'[3, 0, 0, 3, 5, 2, 0, 1, 9, 0, 3, 1, 2, 0, 0, 1, 1, 0]' : 0.305217}

out:
 ["{'[3, 0, 0, 3, 5, 2, 0, 1, 9, 0, 3, 1, 2, 0, 0, 1, 1, 0]' : 0.301643}", "{'[3, 0, 0, 3, 5, 2, 0, 1, 9, 0, 3, 1, 2, 0, 0, 1, 1, 0]' : 0.29865}", "{'[3, 0, 0, 3, 5, 2, 0, 1, 9, 0, 3, 1, 2, 0, 0, 1, 1, 0]' : 0.298253}", "{'[3, 0, 0, 3, 5, 2, 0, 1, 9, 0, 3, 1, 2, 0, 0, 1, 1, 0]' : 0.299055}", "{'[3, 0, 0, 3, 5, 2, 0, 1, 9, 0, 3, 1, 2, 0, 0, 1, 1, 0]' : 0.299869}", "{'[3, 0, 0, 3, 5, 2, 0, 1, 9, 0, 3, 1, 2, 0, 0, 1, 1, 0]' : 0.299172}", "{'[3, 0, 0, 3, 5, 2, 0, 1, 9, 0, 3, 1, 2, 0, 0, 1, 1, 0]' : 0.299075}", "{'[3, 0, 0, 3, 5, 2, 0, 1, 9, 0, 3, 1, 2, 0, 0, 1, 1, 0]' : 0.298886}", "{'[3, 0, 0, 3, 5, 2, 0, 1, 9, 0, 3, 1, 2, 0, 0, 1, 1, 0]' : 0.299476}", "{'[3, 0, 0, 3, 5, 2, 0, 1, 9, 0, 3, 1, 2, 0, 0, 1, 1, 0]' : 0.298602}", "{'[3, 0, 0, 3, 5, 2, 0, 1, 9, 0, 3, 1, 2, 0, 0, 1, 1, 0]' : 0.29822}", "{'[3, 0, 0, 3, 5, 2, 0, 1, 9, 0, 3, 1, 2, 0, 0, 1, 1, 0]' : 0.299227}", "{'[3, 0, 0, 3, 5, 2, 0, 1, 9, 0, 3, 1, 2, 0, 0, 1, 1, 0]' : 0.298682}", "{'[3, 0, 0, 3, 5, 2, 0, 1, 9, 0, 3, 1, 2, 0, 0, 1, 1, 0]' : 0.298542}", "{'[3, 0, 0, 3, 5, 2, 0, 1, 9, 0, 3, 1, 2, 0, 0, 1, 1, 0]' : 0.298661}", "{'[3, 0, 0, 3, 5, 2, 0, 1, 9, 0, 3, 1, 2, 0, 0, 1, 1, 0]' : 0.300119}", "{'[3, 0, 0, 3, 5, 2, 0, 1, 9, 0, 3, 1, 2, 0, 0, 1, 1, 0]' : 0.298421}", "{'[3, 0, 0, 3, 5, 2, 0, 1, 9, 0, 3, 1, 2, 0, 0, 1, 1, 0]' : 0.299363}", "{'[3, 0, 0, 3, 5, 2, 0, 1, 9, 0, 3, 1, 2, 0, 0, 1, 1, 0]' : 0.298761}", "{'[3, 0, 0, 3, 5, 2, 0, 1, 9, 0, 3, 1, 2, 0, 0, 1, 1, 0]' : 0.298902}", "{'[3, 0, 0, 3, 5, 2, 0, 1, 9, 0, 3, 1, 2, 0, 0, 1, 1, 0]' : 0.298111}", "{'[3, 0, 0, 3, 5, 2, 0, 1, 9, 0, 3, 1, 2, 0, 0, 1, 1, 0]' : 0.300842}", "{'[3, 0, 0, 3, 5, 2, 0, 1, 9, 0, 3, 1, 2, 0, 0, 1, 1, 0]' : 0.299276}", "{'[3, 0, 0, 3, 5, 2, 0, 1, 9, 0, 3, 1, 2, 0, 0, 1, 1, 0]' : 0.300039}", "{'[3, 0, 0, 3, 5, 2, 0, 1, 9, 0, 3, 1, 2, 0, 0, 1, 1, 0]' : 0.302238}", "{'[3, 0, 0, 3, 5, 2, 0, 1, 9, 0, 3, 1, 2, 0, 0, 1, 1, 0]' : 0.298547}", "{'[3, 0, 0, 3, 5, 2, 0, 1, 9, 0, 3, 1, 2, 0, 0, 1, 1, 0]' : 0.298217}", "{'[3, 0, 0, 3, 5, 2, 0, 1, 9, 0, 3, 1, 2, 0, 0, 1, 1, 0]' : 0.297954}", "{'[3, 0, 0, 3, 5, 2, 0, 1, 9, 0, 3, 1, 2, 0, 0, 1, 1, 0]' : 0.305069}", "{'[3, 0, 0, 3, 5, 2, 0, 1, 9, 0, 3, 1, 2, 0, 0, 1, 1, 0]' : 0.305217}"]
returning from 'run': {'[3, 0, 0, 3, 5, 2, 0, 1, 9, 0, 3, 1, 2, 0, 0, 1, 1, 0]': ([0.301643, 0.29865, 0.298253, 0.299055, 0.299869, 0.299172, 0.299075, 0.298886, 0.299476, 0.298602, 0.29822, 0.299227, 0.298682, 0.298542, 0.298661, 0.300119, 0.298421, 0.299363, 0.298761, 0.298902, 0.298111, 0.300842, 0.299276, 0.300039, 0.302238, 0.298547, 0.298217, 0.297954, 0.305069, 0.305217], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 0, 0, 3, 5, 2, 0, 1, 9, 0, 3, 1, 2, 0, 0, 1, 1, 0]': ([0.301643, 0.29865, 0.298253, 0.299055, 0.299869, 0.299172, 0.299075, 0.298886, 0.299476, 0.298602, 0.29822, 0.299227, 0.298682, 0.298542, 0.298661, 0.300119, 0.298421, 0.299363, 0.298761, 0.298902, 0.298111, 0.300842, 0.299276, 0.300039, 0.302238, 0.298547, 0.298217, 0.297954, 0.305069, 0.305217], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	87
        Max loop nest depth: 	4
        Additions: 		2008
        Multiplications: 	720
        Divisions: 		0
        Logical: 		0
        Reads: 			3865
        Writes: 		713
        Comparisons:		87
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest16.exe __orio_perftest16.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest16.exe  
Program Test Output: 
{'[2, 3, 5, 0, 0, 0, 1, 0, 14, 20, 1, 0, 1, 0, 1, 1, 0, 0]' : 0.254334}
{'[2, 3, 5, 0, 0, 0, 1, 0, 14, 20, 1, 0, 1, 0, 1, 1, 0, 0]' : 0.251199}
{'[2, 3, 5, 0, 0, 0, 1, 0, 14, 20, 1, 0, 1, 0, 1, 1, 0, 0]' : 0.251475}
{'[2, 3, 5, 0, 0, 0, 1, 0, 14, 20, 1, 0, 1, 0, 1, 1, 0, 0]' : 0.250959}
{'[2, 3, 5, 0, 0, 0, 1, 0, 14, 20, 1, 0, 1, 0, 1, 1, 0, 0]' : 0.25524}
{'[2, 3, 5, 0, 0, 0, 1, 0, 14, 20, 1, 0, 1, 0, 1, 1, 0, 0]' : 0.249573}
{'[2, 3, 5, 0, 0, 0, 1, 0, 14, 20, 1, 0, 1, 0, 1, 1, 0, 0]' : 0.249742}
{'[2, 3, 5, 0, 0, 0, 1, 0, 14, 20, 1, 0, 1, 0, 1, 1, 0, 0]' : 0.250812}
{'[2, 3, 5, 0, 0, 0, 1, 0, 14, 20, 1, 0, 1, 0, 1, 1, 0, 0]' : 0.255564}
{'[2, 3, 5, 0, 0, 0, 1, 0, 14, 20, 1, 0, 1, 0, 1, 1, 0, 0]' : 0.251966}
{'[2, 3, 5, 0, 0, 0, 1, 0, 14, 20, 1, 0, 1, 0, 1, 1, 0, 0]' : 0.25067}
{'[2, 3, 5, 0, 0, 0, 1, 0, 14, 20, 1, 0, 1, 0, 1, 1, 0, 0]' : 0.250528}
{'[2, 3, 5, 0, 0, 0, 1, 0, 14, 20, 1, 0, 1, 0, 1, 1, 0, 0]' : 0.255989}
{'[2, 3, 5, 0, 0, 0, 1, 0, 14, 20, 1, 0, 1, 0, 1, 1, 0, 0]' : 0.250851}
{'[2, 3, 5, 0, 0, 0, 1, 0, 14, 20, 1, 0, 1, 0, 1, 1, 0, 0]' : 0.25019}
{'[2, 3, 5, 0, 0, 0, 1, 0, 14, 20, 1, 0, 1, 0, 1, 1, 0, 0]' : 0.252797}
{'[2, 3, 5, 0, 0, 0, 1, 0, 14, 20, 1, 0, 1, 0, 1, 1, 0, 0]' : 0.256486}
{'[2, 3, 5, 0, 0, 0, 1, 0, 14, 20, 1, 0, 1, 0, 1, 1, 0, 0]' : 0.250923}
{'[2, 3, 5, 0, 0, 0, 1, 0, 14, 20, 1, 0, 1, 0, 1, 1, 0, 0]' : 0.2503}
{'[2, 3, 5, 0, 0, 0, 1, 0, 14, 20, 1, 0, 1, 0, 1, 1, 0, 0]' : 0.252214}
{'[2, 3, 5, 0, 0, 0, 1, 0, 14, 20, 1, 0, 1, 0, 1, 1, 0, 0]' : 0.253747}
{'[2, 3, 5, 0, 0, 0, 1, 0, 14, 20, 1, 0, 1, 0, 1, 1, 0, 0]' : 0.250998}
{'[2, 3, 5, 0, 0, 0, 1, 0, 14, 20, 1, 0, 1, 0, 1, 1, 0, 0]' : 0.250647}
{'[2, 3, 5, 0, 0, 0, 1, 0, 14, 20, 1, 0, 1, 0, 1, 1, 0, 0]' : 0.255401}
{'[2, 3, 5, 0, 0, 0, 1, 0, 14, 20, 1, 0, 1, 0, 1, 1, 0, 0]' : 0.251196}
{'[2, 3, 5, 0, 0, 0, 1, 0, 14, 20, 1, 0, 1, 0, 1, 1, 0, 0]' : 0.249949}
{'[2, 3, 5, 0, 0, 0, 1, 0, 14, 20, 1, 0, 1, 0, 1, 1, 0, 0]' : 0.251458}
{'[2, 3, 5, 0, 0, 0, 1, 0, 14, 20, 1, 0, 1, 0, 1, 1, 0, 0]' : 0.257894}
{'[2, 3, 5, 0, 0, 0, 1, 0, 14, 20, 1, 0, 1, 0, 1, 1, 0, 0]' : 0.250649}
{'[2, 3, 5, 0, 0, 0, 1, 0, 14, 20, 1, 0, 1, 0, 1, 1, 0, 0]' : 0.250493}

out:
 ["{'[2, 3, 5, 0, 0, 0, 1, 0, 14, 20, 1, 0, 1, 0, 1, 1, 0, 0]' : 0.254334}", "{'[2, 3, 5, 0, 0, 0, 1, 0, 14, 20, 1, 0, 1, 0, 1, 1, 0, 0]' : 0.251199}", "{'[2, 3, 5, 0, 0, 0, 1, 0, 14, 20, 1, 0, 1, 0, 1, 1, 0, 0]' : 0.251475}", "{'[2, 3, 5, 0, 0, 0, 1, 0, 14, 20, 1, 0, 1, 0, 1, 1, 0, 0]' : 0.250959}", "{'[2, 3, 5, 0, 0, 0, 1, 0, 14, 20, 1, 0, 1, 0, 1, 1, 0, 0]' : 0.25524}", "{'[2, 3, 5, 0, 0, 0, 1, 0, 14, 20, 1, 0, 1, 0, 1, 1, 0, 0]' : 0.249573}", "{'[2, 3, 5, 0, 0, 0, 1, 0, 14, 20, 1, 0, 1, 0, 1, 1, 0, 0]' : 0.249742}", "{'[2, 3, 5, 0, 0, 0, 1, 0, 14, 20, 1, 0, 1, 0, 1, 1, 0, 0]' : 0.250812}", "{'[2, 3, 5, 0, 0, 0, 1, 0, 14, 20, 1, 0, 1, 0, 1, 1, 0, 0]' : 0.255564}", "{'[2, 3, 5, 0, 0, 0, 1, 0, 14, 20, 1, 0, 1, 0, 1, 1, 0, 0]' : 0.251966}", "{'[2, 3, 5, 0, 0, 0, 1, 0, 14, 20, 1, 0, 1, 0, 1, 1, 0, 0]' : 0.25067}", "{'[2, 3, 5, 0, 0, 0, 1, 0, 14, 20, 1, 0, 1, 0, 1, 1, 0, 0]' : 0.250528}", "{'[2, 3, 5, 0, 0, 0, 1, 0, 14, 20, 1, 0, 1, 0, 1, 1, 0, 0]' : 0.255989}", "{'[2, 3, 5, 0, 0, 0, 1, 0, 14, 20, 1, 0, 1, 0, 1, 1, 0, 0]' : 0.250851}", "{'[2, 3, 5, 0, 0, 0, 1, 0, 14, 20, 1, 0, 1, 0, 1, 1, 0, 0]' : 0.25019}", "{'[2, 3, 5, 0, 0, 0, 1, 0, 14, 20, 1, 0, 1, 0, 1, 1, 0, 0]' : 0.252797}", "{'[2, 3, 5, 0, 0, 0, 1, 0, 14, 20, 1, 0, 1, 0, 1, 1, 0, 0]' : 0.256486}", "{'[2, 3, 5, 0, 0, 0, 1, 0, 14, 20, 1, 0, 1, 0, 1, 1, 0, 0]' : 0.250923}", "{'[2, 3, 5, 0, 0, 0, 1, 0, 14, 20, 1, 0, 1, 0, 1, 1, 0, 0]' : 0.2503}", "{'[2, 3, 5, 0, 0, 0, 1, 0, 14, 20, 1, 0, 1, 0, 1, 1, 0, 0]' : 0.252214}", "{'[2, 3, 5, 0, 0, 0, 1, 0, 14, 20, 1, 0, 1, 0, 1, 1, 0, 0]' : 0.253747}", "{'[2, 3, 5, 0, 0, 0, 1, 0, 14, 20, 1, 0, 1, 0, 1, 1, 0, 0]' : 0.250998}", "{'[2, 3, 5, 0, 0, 0, 1, 0, 14, 20, 1, 0, 1, 0, 1, 1, 0, 0]' : 0.250647}", "{'[2, 3, 5, 0, 0, 0, 1, 0, 14, 20, 1, 0, 1, 0, 1, 1, 0, 0]' : 0.255401}", "{'[2, 3, 5, 0, 0, 0, 1, 0, 14, 20, 1, 0, 1, 0, 1, 1, 0, 0]' : 0.251196}", "{'[2, 3, 5, 0, 0, 0, 1, 0, 14, 20, 1, 0, 1, 0, 1, 1, 0, 0]' : 0.249949}", "{'[2, 3, 5, 0, 0, 0, 1, 0, 14, 20, 1, 0, 1, 0, 1, 1, 0, 0]' : 0.251458}", "{'[2, 3, 5, 0, 0, 0, 1, 0, 14, 20, 1, 0, 1, 0, 1, 1, 0, 0]' : 0.257894}", "{'[2, 3, 5, 0, 0, 0, 1, 0, 14, 20, 1, 0, 1, 0, 1, 1, 0, 0]' : 0.250649}", "{'[2, 3, 5, 0, 0, 0, 1, 0, 14, 20, 1, 0, 1, 0, 1, 1, 0, 0]' : 0.250493}"]
returning from 'run': {'[2, 3, 5, 0, 0, 0, 1, 0, 14, 20, 1, 0, 1, 0, 1, 1, 0, 0]': ([0.254334, 0.251199, 0.251475, 0.250959, 0.25524, 0.249573, 0.249742, 0.250812, 0.255564, 0.251966, 0.25067, 0.250528, 0.255989, 0.250851, 0.25019, 0.252797, 0.256486, 0.250923, 0.2503, 0.252214, 0.253747, 0.250998, 0.250647, 0.255401, 0.251196, 0.249949, 0.251458, 0.257894, 0.250649, 0.250493], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 3, 5, 0, 0, 0, 1, 0, 14, 20, 1, 0, 1, 0, 1, 1, 0, 0]': ([0.254334, 0.251199, 0.251475, 0.250959, 0.25524, 0.249573, 0.249742, 0.250812, 0.255564, 0.251966, 0.25067, 0.250528, 0.255989, 0.250851, 0.25019, 0.252797, 0.256486, 0.250923, 0.2503, 0.252214, 0.253747, 0.250998, 0.250647, 0.255401, 0.251196, 0.249949, 0.251458, 0.257894, 0.250649, 0.250493], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	5
        Additions: 		1133
        Multiplications: 	288
        Divisions: 		0
        Logical: 		0
        Reads: 			1842
        Writes: 		211
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest17.exe __orio_perftest17.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest17.exe  
Program Test Output: 
{'[3, 3, 5, 1, 6, 6, 0, 1, 0, 0, 4, 8, 1, 0, 0, 0, 0, 1]' : 0.233527}
{'[3, 3, 5, 1, 6, 6, 0, 1, 0, 0, 4, 8, 1, 0, 0, 0, 0, 1]' : 0.232543}
{'[3, 3, 5, 1, 6, 6, 0, 1, 0, 0, 4, 8, 1, 0, 0, 0, 0, 1]' : 0.232227}
{'[3, 3, 5, 1, 6, 6, 0, 1, 0, 0, 4, 8, 1, 0, 0, 0, 0, 1]' : 0.231154}
{'[3, 3, 5, 1, 6, 6, 0, 1, 0, 0, 4, 8, 1, 0, 0, 0, 0, 1]' : 0.232428}
{'[3, 3, 5, 1, 6, 6, 0, 1, 0, 0, 4, 8, 1, 0, 0, 0, 0, 1]' : 0.232742}
{'[3, 3, 5, 1, 6, 6, 0, 1, 0, 0, 4, 8, 1, 0, 0, 0, 0, 1]' : 0.232291}
{'[3, 3, 5, 1, 6, 6, 0, 1, 0, 0, 4, 8, 1, 0, 0, 0, 0, 1]' : 0.233571}
{'[3, 3, 5, 1, 6, 6, 0, 1, 0, 0, 4, 8, 1, 0, 0, 0, 0, 1]' : 0.23258}
{'[3, 3, 5, 1, 6, 6, 0, 1, 0, 0, 4, 8, 1, 0, 0, 0, 0, 1]' : 0.232617}
{'[3, 3, 5, 1, 6, 6, 0, 1, 0, 0, 4, 8, 1, 0, 0, 0, 0, 1]' : 0.231463}
{'[3, 3, 5, 1, 6, 6, 0, 1, 0, 0, 4, 8, 1, 0, 0, 0, 0, 1]' : 0.232256}
{'[3, 3, 5, 1, 6, 6, 0, 1, 0, 0, 4, 8, 1, 0, 0, 0, 0, 1]' : 0.232539}
{'[3, 3, 5, 1, 6, 6, 0, 1, 0, 0, 4, 8, 1, 0, 0, 0, 0, 1]' : 0.233403}
{'[3, 3, 5, 1, 6, 6, 0, 1, 0, 0, 4, 8, 1, 0, 0, 0, 0, 1]' : 0.232297}
{'[3, 3, 5, 1, 6, 6, 0, 1, 0, 0, 4, 8, 1, 0, 0, 0, 0, 1]' : 0.2324}
{'[3, 3, 5, 1, 6, 6, 0, 1, 0, 0, 4, 8, 1, 0, 0, 0, 0, 1]' : 0.231613}
{'[3, 3, 5, 1, 6, 6, 0, 1, 0, 0, 4, 8, 1, 0, 0, 0, 0, 1]' : 0.232505}
{'[3, 3, 5, 1, 6, 6, 0, 1, 0, 0, 4, 8, 1, 0, 0, 0, 0, 1]' : 0.23484}
{'[3, 3, 5, 1, 6, 6, 0, 1, 0, 0, 4, 8, 1, 0, 0, 0, 0, 1]' : 0.232992}
{'[3, 3, 5, 1, 6, 6, 0, 1, 0, 0, 4, 8, 1, 0, 0, 0, 0, 1]' : 0.233753}
{'[3, 3, 5, 1, 6, 6, 0, 1, 0, 0, 4, 8, 1, 0, 0, 0, 0, 1]' : 0.23161}
{'[3, 3, 5, 1, 6, 6, 0, 1, 0, 0, 4, 8, 1, 0, 0, 0, 0, 1]' : 0.232011}
{'[3, 3, 5, 1, 6, 6, 0, 1, 0, 0, 4, 8, 1, 0, 0, 0, 0, 1]' : 0.232229}
{'[3, 3, 5, 1, 6, 6, 0, 1, 0, 0, 4, 8, 1, 0, 0, 0, 0, 1]' : 0.235272}
{'[3, 3, 5, 1, 6, 6, 0, 1, 0, 0, 4, 8, 1, 0, 0, 0, 0, 1]' : 0.235784}
{'[3, 3, 5, 1, 6, 6, 0, 1, 0, 0, 4, 8, 1, 0, 0, 0, 0, 1]' : 0.232712}
{'[3, 3, 5, 1, 6, 6, 0, 1, 0, 0, 4, 8, 1, 0, 0, 0, 0, 1]' : 0.234865}
{'[3, 3, 5, 1, 6, 6, 0, 1, 0, 0, 4, 8, 1, 0, 0, 0, 0, 1]' : 0.233459}
{'[3, 3, 5, 1, 6, 6, 0, 1, 0, 0, 4, 8, 1, 0, 0, 0, 0, 1]' : 0.232852}

out:
 ["{'[3, 3, 5, 1, 6, 6, 0, 1, 0, 0, 4, 8, 1, 0, 0, 0, 0, 1]' : 0.233527}", "{'[3, 3, 5, 1, 6, 6, 0, 1, 0, 0, 4, 8, 1, 0, 0, 0, 0, 1]' : 0.232543}", "{'[3, 3, 5, 1, 6, 6, 0, 1, 0, 0, 4, 8, 1, 0, 0, 0, 0, 1]' : 0.232227}", "{'[3, 3, 5, 1, 6, 6, 0, 1, 0, 0, 4, 8, 1, 0, 0, 0, 0, 1]' : 0.231154}", "{'[3, 3, 5, 1, 6, 6, 0, 1, 0, 0, 4, 8, 1, 0, 0, 0, 0, 1]' : 0.232428}", "{'[3, 3, 5, 1, 6, 6, 0, 1, 0, 0, 4, 8, 1, 0, 0, 0, 0, 1]' : 0.232742}", "{'[3, 3, 5, 1, 6, 6, 0, 1, 0, 0, 4, 8, 1, 0, 0, 0, 0, 1]' : 0.232291}", "{'[3, 3, 5, 1, 6, 6, 0, 1, 0, 0, 4, 8, 1, 0, 0, 0, 0, 1]' : 0.233571}", "{'[3, 3, 5, 1, 6, 6, 0, 1, 0, 0, 4, 8, 1, 0, 0, 0, 0, 1]' : 0.23258}", "{'[3, 3, 5, 1, 6, 6, 0, 1, 0, 0, 4, 8, 1, 0, 0, 0, 0, 1]' : 0.232617}", "{'[3, 3, 5, 1, 6, 6, 0, 1, 0, 0, 4, 8, 1, 0, 0, 0, 0, 1]' : 0.231463}", "{'[3, 3, 5, 1, 6, 6, 0, 1, 0, 0, 4, 8, 1, 0, 0, 0, 0, 1]' : 0.232256}", "{'[3, 3, 5, 1, 6, 6, 0, 1, 0, 0, 4, 8, 1, 0, 0, 0, 0, 1]' : 0.232539}", "{'[3, 3, 5, 1, 6, 6, 0, 1, 0, 0, 4, 8, 1, 0, 0, 0, 0, 1]' : 0.233403}", "{'[3, 3, 5, 1, 6, 6, 0, 1, 0, 0, 4, 8, 1, 0, 0, 0, 0, 1]' : 0.232297}", "{'[3, 3, 5, 1, 6, 6, 0, 1, 0, 0, 4, 8, 1, 0, 0, 0, 0, 1]' : 0.2324}", "{'[3, 3, 5, 1, 6, 6, 0, 1, 0, 0, 4, 8, 1, 0, 0, 0, 0, 1]' : 0.231613}", "{'[3, 3, 5, 1, 6, 6, 0, 1, 0, 0, 4, 8, 1, 0, 0, 0, 0, 1]' : 0.232505}", "{'[3, 3, 5, 1, 6, 6, 0, 1, 0, 0, 4, 8, 1, 0, 0, 0, 0, 1]' : 0.23484}", "{'[3, 3, 5, 1, 6, 6, 0, 1, 0, 0, 4, 8, 1, 0, 0, 0, 0, 1]' : 0.232992}", "{'[3, 3, 5, 1, 6, 6, 0, 1, 0, 0, 4, 8, 1, 0, 0, 0, 0, 1]' : 0.233753}", "{'[3, 3, 5, 1, 6, 6, 0, 1, 0, 0, 4, 8, 1, 0, 0, 0, 0, 1]' : 0.23161}", "{'[3, 3, 5, 1, 6, 6, 0, 1, 0, 0, 4, 8, 1, 0, 0, 0, 0, 1]' : 0.232011}", "{'[3, 3, 5, 1, 6, 6, 0, 1, 0, 0, 4, 8, 1, 0, 0, 0, 0, 1]' : 0.232229}", "{'[3, 3, 5, 1, 6, 6, 0, 1, 0, 0, 4, 8, 1, 0, 0, 0, 0, 1]' : 0.235272}", "{'[3, 3, 5, 1, 6, 6, 0, 1, 0, 0, 4, 8, 1, 0, 0, 0, 0, 1]' : 0.235784}", "{'[3, 3, 5, 1, 6, 6, 0, 1, 0, 0, 4, 8, 1, 0, 0, 0, 0, 1]' : 0.232712}", "{'[3, 3, 5, 1, 6, 6, 0, 1, 0, 0, 4, 8, 1, 0, 0, 0, 0, 1]' : 0.234865}", "{'[3, 3, 5, 1, 6, 6, 0, 1, 0, 0, 4, 8, 1, 0, 0, 0, 0, 1]' : 0.233459}", "{'[3, 3, 5, 1, 6, 6, 0, 1, 0, 0, 4, 8, 1, 0, 0, 0, 0, 1]' : 0.232852}"]
returning from 'run': {'[3, 3, 5, 1, 6, 6, 0, 1, 0, 0, 4, 8, 1, 0, 0, 0, 0, 1]': ([0.233527, 0.232543, 0.232227, 0.231154, 0.232428, 0.232742, 0.232291, 0.233571, 0.23258, 0.232617, 0.231463, 0.232256, 0.232539, 0.233403, 0.232297, 0.2324, 0.231613, 0.232505, 0.23484, 0.232992, 0.233753, 0.23161, 0.232011, 0.232229, 0.235272, 0.235784, 0.232712, 0.234865, 0.233459, 0.232852], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 3, 5, 1, 6, 6, 0, 1, 0, 0, 4, 8, 1, 0, 0, 0, 0, 1]': ([0.233527, 0.232543, 0.232227, 0.231154, 0.232428, 0.232742, 0.232291, 0.233571, 0.23258, 0.232617, 0.231463, 0.232256, 0.232539, 0.233403, 0.232297, 0.2324, 0.231613, 0.232505, 0.23484, 0.232992, 0.233753, 0.23161, 0.232011, 0.232229, 0.235272, 0.235784, 0.232712, 0.234865, 0.233459, 0.232852], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	37
        Max loop nest depth: 	5
        Additions: 		1005
        Multiplications: 	260
        Divisions: 		0
        Logical: 		0
        Reads: 			1747
        Writes: 		237
        Comparisons:		37
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest18.exe __orio_perftest18.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest18.exe  
Program Test Output: 
{'[2, 3, 1, 0, 3, 1, 0, 1, 16, 3, 8, 0, 0, 1, 1, 0, 0, 0]' : 0.53051}
{'[2, 3, 1, 0, 3, 1, 0, 1, 16, 3, 8, 0, 0, 1, 1, 0, 0, 0]' : 0.530348}
{'[2, 3, 1, 0, 3, 1, 0, 1, 16, 3, 8, 0, 0, 1, 1, 0, 0, 0]' : 0.532118}
{'[2, 3, 1, 0, 3, 1, 0, 1, 16, 3, 8, 0, 0, 1, 1, 0, 0, 0]' : 0.529809}
{'[2, 3, 1, 0, 3, 1, 0, 1, 16, 3, 8, 0, 0, 1, 1, 0, 0, 0]' : 0.531602}
{'[2, 3, 1, 0, 3, 1, 0, 1, 16, 3, 8, 0, 0, 1, 1, 0, 0, 0]' : 0.530025}
{'[2, 3, 1, 0, 3, 1, 0, 1, 16, 3, 8, 0, 0, 1, 1, 0, 0, 0]' : 0.530586}
{'[2, 3, 1, 0, 3, 1, 0, 1, 16, 3, 8, 0, 0, 1, 1, 0, 0, 0]' : 0.530304}
{'[2, 3, 1, 0, 3, 1, 0, 1, 16, 3, 8, 0, 0, 1, 1, 0, 0, 0]' : 0.538685}
{'[2, 3, 1, 0, 3, 1, 0, 1, 16, 3, 8, 0, 0, 1, 1, 0, 0, 0]' : 0.54054}
{'[2, 3, 1, 0, 3, 1, 0, 1, 16, 3, 8, 0, 0, 1, 1, 0, 0, 0]' : 0.534686}
{'[2, 3, 1, 0, 3, 1, 0, 1, 16, 3, 8, 0, 0, 1, 1, 0, 0, 0]' : 0.530208}
{'[2, 3, 1, 0, 3, 1, 0, 1, 16, 3, 8, 0, 0, 1, 1, 0, 0, 0]' : 0.536224}
{'[2, 3, 1, 0, 3, 1, 0, 1, 16, 3, 8, 0, 0, 1, 1, 0, 0, 0]' : 0.530239}
{'[2, 3, 1, 0, 3, 1, 0, 1, 16, 3, 8, 0, 0, 1, 1, 0, 0, 0]' : 0.530079}
{'[2, 3, 1, 0, 3, 1, 0, 1, 16, 3, 8, 0, 0, 1, 1, 0, 0, 0]' : 0.52977}
{'[2, 3, 1, 0, 3, 1, 0, 1, 16, 3, 8, 0, 0, 1, 1, 0, 0, 0]' : 0.530251}
{'[2, 3, 1, 0, 3, 1, 0, 1, 16, 3, 8, 0, 0, 1, 1, 0, 0, 0]' : 0.530146}
{'[2, 3, 1, 0, 3, 1, 0, 1, 16, 3, 8, 0, 0, 1, 1, 0, 0, 0]' : 0.530259}
{'[2, 3, 1, 0, 3, 1, 0, 1, 16, 3, 8, 0, 0, 1, 1, 0, 0, 0]' : 0.530506}
{'[2, 3, 1, 0, 3, 1, 0, 1, 16, 3, 8, 0, 0, 1, 1, 0, 0, 0]' : 0.529988}
{'[2, 3, 1, 0, 3, 1, 0, 1, 16, 3, 8, 0, 0, 1, 1, 0, 0, 0]' : 0.536163}
{'[2, 3, 1, 0, 3, 1, 0, 1, 16, 3, 8, 0, 0, 1, 1, 0, 0, 0]' : 0.543048}
{'[2, 3, 1, 0, 3, 1, 0, 1, 16, 3, 8, 0, 0, 1, 1, 0, 0, 0]' : 0.535081}
{'[2, 3, 1, 0, 3, 1, 0, 1, 16, 3, 8, 0, 0, 1, 1, 0, 0, 0]' : 0.530003}
{'[2, 3, 1, 0, 3, 1, 0, 1, 16, 3, 8, 0, 0, 1, 1, 0, 0, 0]' : 0.538936}
{'[2, 3, 1, 0, 3, 1, 0, 1, 16, 3, 8, 0, 0, 1, 1, 0, 0, 0]' : 0.530317}
{'[2, 3, 1, 0, 3, 1, 0, 1, 16, 3, 8, 0, 0, 1, 1, 0, 0, 0]' : 0.539489}
{'[2, 3, 1, 0, 3, 1, 0, 1, 16, 3, 8, 0, 0, 1, 1, 0, 0, 0]' : 0.530436}
{'[2, 3, 1, 0, 3, 1, 0, 1, 16, 3, 8, 0, 0, 1, 1, 0, 0, 0]' : 0.529891}

out:
 ["{'[2, 3, 1, 0, 3, 1, 0, 1, 16, 3, 8, 0, 0, 1, 1, 0, 0, 0]' : 0.53051}", "{'[2, 3, 1, 0, 3, 1, 0, 1, 16, 3, 8, 0, 0, 1, 1, 0, 0, 0]' : 0.530348}", "{'[2, 3, 1, 0, 3, 1, 0, 1, 16, 3, 8, 0, 0, 1, 1, 0, 0, 0]' : 0.532118}", "{'[2, 3, 1, 0, 3, 1, 0, 1, 16, 3, 8, 0, 0, 1, 1, 0, 0, 0]' : 0.529809}", "{'[2, 3, 1, 0, 3, 1, 0, 1, 16, 3, 8, 0, 0, 1, 1, 0, 0, 0]' : 0.531602}", "{'[2, 3, 1, 0, 3, 1, 0, 1, 16, 3, 8, 0, 0, 1, 1, 0, 0, 0]' : 0.530025}", "{'[2, 3, 1, 0, 3, 1, 0, 1, 16, 3, 8, 0, 0, 1, 1, 0, 0, 0]' : 0.530586}", "{'[2, 3, 1, 0, 3, 1, 0, 1, 16, 3, 8, 0, 0, 1, 1, 0, 0, 0]' : 0.530304}", "{'[2, 3, 1, 0, 3, 1, 0, 1, 16, 3, 8, 0, 0, 1, 1, 0, 0, 0]' : 0.538685}", "{'[2, 3, 1, 0, 3, 1, 0, 1, 16, 3, 8, 0, 0, 1, 1, 0, 0, 0]' : 0.54054}", "{'[2, 3, 1, 0, 3, 1, 0, 1, 16, 3, 8, 0, 0, 1, 1, 0, 0, 0]' : 0.534686}", "{'[2, 3, 1, 0, 3, 1, 0, 1, 16, 3, 8, 0, 0, 1, 1, 0, 0, 0]' : 0.530208}", "{'[2, 3, 1, 0, 3, 1, 0, 1, 16, 3, 8, 0, 0, 1, 1, 0, 0, 0]' : 0.536224}", "{'[2, 3, 1, 0, 3, 1, 0, 1, 16, 3, 8, 0, 0, 1, 1, 0, 0, 0]' : 0.530239}", "{'[2, 3, 1, 0, 3, 1, 0, 1, 16, 3, 8, 0, 0, 1, 1, 0, 0, 0]' : 0.530079}", "{'[2, 3, 1, 0, 3, 1, 0, 1, 16, 3, 8, 0, 0, 1, 1, 0, 0, 0]' : 0.52977}", "{'[2, 3, 1, 0, 3, 1, 0, 1, 16, 3, 8, 0, 0, 1, 1, 0, 0, 0]' : 0.530251}", "{'[2, 3, 1, 0, 3, 1, 0, 1, 16, 3, 8, 0, 0, 1, 1, 0, 0, 0]' : 0.530146}", "{'[2, 3, 1, 0, 3, 1, 0, 1, 16, 3, 8, 0, 0, 1, 1, 0, 0, 0]' : 0.530259}", "{'[2, 3, 1, 0, 3, 1, 0, 1, 16, 3, 8, 0, 0, 1, 1, 0, 0, 0]' : 0.530506}", "{'[2, 3, 1, 0, 3, 1, 0, 1, 16, 3, 8, 0, 0, 1, 1, 0, 0, 0]' : 0.529988}", "{'[2, 3, 1, 0, 3, 1, 0, 1, 16, 3, 8, 0, 0, 1, 1, 0, 0, 0]' : 0.536163}", "{'[2, 3, 1, 0, 3, 1, 0, 1, 16, 3, 8, 0, 0, 1, 1, 0, 0, 0]' : 0.543048}", "{'[2, 3, 1, 0, 3, 1, 0, 1, 16, 3, 8, 0, 0, 1, 1, 0, 0, 0]' : 0.535081}", "{'[2, 3, 1, 0, 3, 1, 0, 1, 16, 3, 8, 0, 0, 1, 1, 0, 0, 0]' : 0.530003}", "{'[2, 3, 1, 0, 3, 1, 0, 1, 16, 3, 8, 0, 0, 1, 1, 0, 0, 0]' : 0.538936}", "{'[2, 3, 1, 0, 3, 1, 0, 1, 16, 3, 8, 0, 0, 1, 1, 0, 0, 0]' : 0.530317}", "{'[2, 3, 1, 0, 3, 1, 0, 1, 16, 3, 8, 0, 0, 1, 1, 0, 0, 0]' : 0.539489}", "{'[2, 3, 1, 0, 3, 1, 0, 1, 16, 3, 8, 0, 0, 1, 1, 0, 0, 0]' : 0.530436}", "{'[2, 3, 1, 0, 3, 1, 0, 1, 16, 3, 8, 0, 0, 1, 1, 0, 0, 0]' : 0.529891}"]
returning from 'run': {'[2, 3, 1, 0, 3, 1, 0, 1, 16, 3, 8, 0, 0, 1, 1, 0, 0, 0]': ([0.53051, 0.530348, 0.532118, 0.529809, 0.531602, 0.530025, 0.530586, 0.530304, 0.538685, 0.54054, 0.534686, 0.530208, 0.536224, 0.530239, 0.530079, 0.52977, 0.530251, 0.530146, 0.530259, 0.530506, 0.529988, 0.536163, 0.543048, 0.535081, 0.530003, 0.538936, 0.530317, 0.539489, 0.530436, 0.529891], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 3, 1, 0, 3, 1, 0, 1, 16, 3, 8, 0, 0, 1, 1, 0, 0, 0]': ([0.53051, 0.530348, 0.532118, 0.529809, 0.531602, 0.530025, 0.530586, 0.530304, 0.538685, 0.54054, 0.534686, 0.530208, 0.536224, 0.530239, 0.530079, 0.52977, 0.530251, 0.530146, 0.530259, 0.530506, 0.529988, 0.536163, 0.543048, 0.535081, 0.530003, 0.538936, 0.530317, 0.539489, 0.530436, 0.529891], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	73
        Max loop nest depth: 	5
        Additions: 		4767
        Multiplications: 	1200
        Divisions: 		0
        Logical: 		0
        Reads: 			7434
        Writes: 		872
        Comparisons:		73
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest19.exe __orio_perftest19.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest19.exe  
Program Test Output: 
{'[5, 0, 0, 4, 6, 6, 1, 0, 23, 16, 9, 0, 2, 0, 0, 0, 1, 1]' : 0.496534}
{'[5, 0, 0, 4, 6, 6, 1, 0, 23, 16, 9, 0, 2, 0, 0, 0, 1, 1]' : 0.498883}
{'[5, 0, 0, 4, 6, 6, 1, 0, 23, 16, 9, 0, 2, 0, 0, 0, 1, 1]' : 0.499119}
{'[5, 0, 0, 4, 6, 6, 1, 0, 23, 16, 9, 0, 2, 0, 0, 0, 1, 1]' : 0.493057}
{'[5, 0, 0, 4, 6, 6, 1, 0, 23, 16, 9, 0, 2, 0, 0, 0, 1, 1]' : 0.493516}
{'[5, 0, 0, 4, 6, 6, 1, 0, 23, 16, 9, 0, 2, 0, 0, 0, 1, 1]' : 0.494237}
{'[5, 0, 0, 4, 6, 6, 1, 0, 23, 16, 9, 0, 2, 0, 0, 0, 1, 1]' : 0.492597}
{'[5, 0, 0, 4, 6, 6, 1, 0, 23, 16, 9, 0, 2, 0, 0, 0, 1, 1]' : 0.493162}
{'[5, 0, 0, 4, 6, 6, 1, 0, 23, 16, 9, 0, 2, 0, 0, 0, 1, 1]' : 0.492165}
{'[5, 0, 0, 4, 6, 6, 1, 0, 23, 16, 9, 0, 2, 0, 0, 0, 1, 1]' : 0.493095}
{'[5, 0, 0, 4, 6, 6, 1, 0, 23, 16, 9, 0, 2, 0, 0, 0, 1, 1]' : 0.492517}
{'[5, 0, 0, 4, 6, 6, 1, 0, 23, 16, 9, 0, 2, 0, 0, 0, 1, 1]' : 0.493009}
{'[5, 0, 0, 4, 6, 6, 1, 0, 23, 16, 9, 0, 2, 0, 0, 0, 1, 1]' : 0.491914}
{'[5, 0, 0, 4, 6, 6, 1, 0, 23, 16, 9, 0, 2, 0, 0, 0, 1, 1]' : 0.492161}
{'[5, 0, 0, 4, 6, 6, 1, 0, 23, 16, 9, 0, 2, 0, 0, 0, 1, 1]' : 0.496149}
{'[5, 0, 0, 4, 6, 6, 1, 0, 23, 16, 9, 0, 2, 0, 0, 0, 1, 1]' : 0.4941}
{'[5, 0, 0, 4, 6, 6, 1, 0, 23, 16, 9, 0, 2, 0, 0, 0, 1, 1]' : 0.492141}
{'[5, 0, 0, 4, 6, 6, 1, 0, 23, 16, 9, 0, 2, 0, 0, 0, 1, 1]' : 0.495071}
{'[5, 0, 0, 4, 6, 6, 1, 0, 23, 16, 9, 0, 2, 0, 0, 0, 1, 1]' : 0.492363}
{'[5, 0, 0, 4, 6, 6, 1, 0, 23, 16, 9, 0, 2, 0, 0, 0, 1, 1]' : 0.494226}
{'[5, 0, 0, 4, 6, 6, 1, 0, 23, 16, 9, 0, 2, 0, 0, 0, 1, 1]' : 0.495763}
{'[5, 0, 0, 4, 6, 6, 1, 0, 23, 16, 9, 0, 2, 0, 0, 0, 1, 1]' : 0.496175}
{'[5, 0, 0, 4, 6, 6, 1, 0, 23, 16, 9, 0, 2, 0, 0, 0, 1, 1]' : 0.492499}
{'[5, 0, 0, 4, 6, 6, 1, 0, 23, 16, 9, 0, 2, 0, 0, 0, 1, 1]' : 0.493295}
{'[5, 0, 0, 4, 6, 6, 1, 0, 23, 16, 9, 0, 2, 0, 0, 0, 1, 1]' : 0.491631}
{'[5, 0, 0, 4, 6, 6, 1, 0, 23, 16, 9, 0, 2, 0, 0, 0, 1, 1]' : 0.493851}
{'[5, 0, 0, 4, 6, 6, 1, 0, 23, 16, 9, 0, 2, 0, 0, 0, 1, 1]' : 0.492555}
{'[5, 0, 0, 4, 6, 6, 1, 0, 23, 16, 9, 0, 2, 0, 0, 0, 1, 1]' : 0.492784}
{'[5, 0, 0, 4, 6, 6, 1, 0, 23, 16, 9, 0, 2, 0, 0, 0, 1, 1]' : 0.492155}
{'[5, 0, 0, 4, 6, 6, 1, 0, 23, 16, 9, 0, 2, 0, 0, 0, 1, 1]' : 0.493301}

out:
 ["{'[5, 0, 0, 4, 6, 6, 1, 0, 23, 16, 9, 0, 2, 0, 0, 0, 1, 1]' : 0.496534}", "{'[5, 0, 0, 4, 6, 6, 1, 0, 23, 16, 9, 0, 2, 0, 0, 0, 1, 1]' : 0.498883}", "{'[5, 0, 0, 4, 6, 6, 1, 0, 23, 16, 9, 0, 2, 0, 0, 0, 1, 1]' : 0.499119}", "{'[5, 0, 0, 4, 6, 6, 1, 0, 23, 16, 9, 0, 2, 0, 0, 0, 1, 1]' : 0.493057}", "{'[5, 0, 0, 4, 6, 6, 1, 0, 23, 16, 9, 0, 2, 0, 0, 0, 1, 1]' : 0.493516}", "{'[5, 0, 0, 4, 6, 6, 1, 0, 23, 16, 9, 0, 2, 0, 0, 0, 1, 1]' : 0.494237}", "{'[5, 0, 0, 4, 6, 6, 1, 0, 23, 16, 9, 0, 2, 0, 0, 0, 1, 1]' : 0.492597}", "{'[5, 0, 0, 4, 6, 6, 1, 0, 23, 16, 9, 0, 2, 0, 0, 0, 1, 1]' : 0.493162}", "{'[5, 0, 0, 4, 6, 6, 1, 0, 23, 16, 9, 0, 2, 0, 0, 0, 1, 1]' : 0.492165}", "{'[5, 0, 0, 4, 6, 6, 1, 0, 23, 16, 9, 0, 2, 0, 0, 0, 1, 1]' : 0.493095}", "{'[5, 0, 0, 4, 6, 6, 1, 0, 23, 16, 9, 0, 2, 0, 0, 0, 1, 1]' : 0.492517}", "{'[5, 0, 0, 4, 6, 6, 1, 0, 23, 16, 9, 0, 2, 0, 0, 0, 1, 1]' : 0.493009}", "{'[5, 0, 0, 4, 6, 6, 1, 0, 23, 16, 9, 0, 2, 0, 0, 0, 1, 1]' : 0.491914}", "{'[5, 0, 0, 4, 6, 6, 1, 0, 23, 16, 9, 0, 2, 0, 0, 0, 1, 1]' : 0.492161}", "{'[5, 0, 0, 4, 6, 6, 1, 0, 23, 16, 9, 0, 2, 0, 0, 0, 1, 1]' : 0.496149}", "{'[5, 0, 0, 4, 6, 6, 1, 0, 23, 16, 9, 0, 2, 0, 0, 0, 1, 1]' : 0.4941}", "{'[5, 0, 0, 4, 6, 6, 1, 0, 23, 16, 9, 0, 2, 0, 0, 0, 1, 1]' : 0.492141}", "{'[5, 0, 0, 4, 6, 6, 1, 0, 23, 16, 9, 0, 2, 0, 0, 0, 1, 1]' : 0.495071}", "{'[5, 0, 0, 4, 6, 6, 1, 0, 23, 16, 9, 0, 2, 0, 0, 0, 1, 1]' : 0.492363}", "{'[5, 0, 0, 4, 6, 6, 1, 0, 23, 16, 9, 0, 2, 0, 0, 0, 1, 1]' : 0.494226}", "{'[5, 0, 0, 4, 6, 6, 1, 0, 23, 16, 9, 0, 2, 0, 0, 0, 1, 1]' : 0.495763}", "{'[5, 0, 0, 4, 6, 6, 1, 0, 23, 16, 9, 0, 2, 0, 0, 0, 1, 1]' : 0.496175}", "{'[5, 0, 0, 4, 6, 6, 1, 0, 23, 16, 9, 0, 2, 0, 0, 0, 1, 1]' : 0.492499}", "{'[5, 0, 0, 4, 6, 6, 1, 0, 23, 16, 9, 0, 2, 0, 0, 0, 1, 1]' : 0.493295}", "{'[5, 0, 0, 4, 6, 6, 1, 0, 23, 16, 9, 0, 2, 0, 0, 0, 1, 1]' : 0.491631}", "{'[5, 0, 0, 4, 6, 6, 1, 0, 23, 16, 9, 0, 2, 0, 0, 0, 1, 1]' : 0.493851}", "{'[5, 0, 0, 4, 6, 6, 1, 0, 23, 16, 9, 0, 2, 0, 0, 0, 1, 1]' : 0.492555}", "{'[5, 0, 0, 4, 6, 6, 1, 0, 23, 16, 9, 0, 2, 0, 0, 0, 1, 1]' : 0.492784}", "{'[5, 0, 0, 4, 6, 6, 1, 0, 23, 16, 9, 0, 2, 0, 0, 0, 1, 1]' : 0.492155}", "{'[5, 0, 0, 4, 6, 6, 1, 0, 23, 16, 9, 0, 2, 0, 0, 0, 1, 1]' : 0.493301}"]
returning from 'run': {'[5, 0, 0, 4, 6, 6, 1, 0, 23, 16, 9, 0, 2, 0, 0, 0, 1, 1]': ([0.496534, 0.498883, 0.499119, 0.493057, 0.493516, 0.494237, 0.492597, 0.493162, 0.492165, 0.493095, 0.492517, 0.493009, 0.491914, 0.492161, 0.496149, 0.4941, 0.492141, 0.495071, 0.492363, 0.494226, 0.495763, 0.496175, 0.492499, 0.493295, 0.491631, 0.493851, 0.492555, 0.492784, 0.492155, 0.493301], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 0, 0, 4, 6, 6, 1, 0, 23, 16, 9, 0, 2, 0, 0, 0, 1, 1]': ([0.496534, 0.498883, 0.499119, 0.493057, 0.493516, 0.494237, 0.492597, 0.493162, 0.492165, 0.493095, 0.492517, 0.493009, 0.491914, 0.492161, 0.496149, 0.4941, 0.492141, 0.495071, 0.492363, 0.494226, 0.495763, 0.496175, 0.492499, 0.493295, 0.491631, 0.493851, 0.492555, 0.492784, 0.492155, 0.493301], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	6
        Additions: 		162
        Multiplications: 	32
        Divisions: 		0
        Logical: 		0
        Reads: 			359
        Writes: 		95
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest20.exe __orio_perftest20.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest20.exe  
Program Test Output: 
{'[1, 1, 6, 5, 6, 4, 1, 1, 29, 0, 26, 21, 0, 1, 1, 1, 0, 0]' : 0.752879}
{'[1, 1, 6, 5, 6, 4, 1, 1, 29, 0, 26, 21, 0, 1, 1, 1, 0, 0]' : 0.751509}
{'[1, 1, 6, 5, 6, 4, 1, 1, 29, 0, 26, 21, 0, 1, 1, 1, 0, 0]' : 0.755883}
{'[1, 1, 6, 5, 6, 4, 1, 1, 29, 0, 26, 21, 0, 1, 1, 1, 0, 0]' : 0.750012}
{'[1, 1, 6, 5, 6, 4, 1, 1, 29, 0, 26, 21, 0, 1, 1, 1, 0, 0]' : 0.750209}
{'[1, 1, 6, 5, 6, 4, 1, 1, 29, 0, 26, 21, 0, 1, 1, 1, 0, 0]' : 0.750139}
{'[1, 1, 6, 5, 6, 4, 1, 1, 29, 0, 26, 21, 0, 1, 1, 1, 0, 0]' : 0.750506}
{'[1, 1, 6, 5, 6, 4, 1, 1, 29, 0, 26, 21, 0, 1, 1, 1, 0, 0]' : 0.750332}
{'[1, 1, 6, 5, 6, 4, 1, 1, 29, 0, 26, 21, 0, 1, 1, 1, 0, 0]' : 0.750011}
{'[1, 1, 6, 5, 6, 4, 1, 1, 29, 0, 26, 21, 0, 1, 1, 1, 0, 0]' : 0.750058}
{'[1, 1, 6, 5, 6, 4, 1, 1, 29, 0, 26, 21, 0, 1, 1, 1, 0, 0]' : 0.750157}
{'[1, 1, 6, 5, 6, 4, 1, 1, 29, 0, 26, 21, 0, 1, 1, 1, 0, 0]' : 0.750522}
{'[1, 1, 6, 5, 6, 4, 1, 1, 29, 0, 26, 21, 0, 1, 1, 1, 0, 0]' : 0.750052}
{'[1, 1, 6, 5, 6, 4, 1, 1, 29, 0, 26, 21, 0, 1, 1, 1, 0, 0]' : 0.749671}
{'[1, 1, 6, 5, 6, 4, 1, 1, 29, 0, 26, 21, 0, 1, 1, 1, 0, 0]' : 0.749754}
{'[1, 1, 6, 5, 6, 4, 1, 1, 29, 0, 26, 21, 0, 1, 1, 1, 0, 0]' : 0.749275}
{'[1, 1, 6, 5, 6, 4, 1, 1, 29, 0, 26, 21, 0, 1, 1, 1, 0, 0]' : 0.749666}
{'[1, 1, 6, 5, 6, 4, 1, 1, 29, 0, 26, 21, 0, 1, 1, 1, 0, 0]' : 0.749332}
{'[1, 1, 6, 5, 6, 4, 1, 1, 29, 0, 26, 21, 0, 1, 1, 1, 0, 0]' : 0.749906}
{'[1, 1, 6, 5, 6, 4, 1, 1, 29, 0, 26, 21, 0, 1, 1, 1, 0, 0]' : 0.749419}
{'[1, 1, 6, 5, 6, 4, 1, 1, 29, 0, 26, 21, 0, 1, 1, 1, 0, 0]' : 0.749374}
{'[1, 1, 6, 5, 6, 4, 1, 1, 29, 0, 26, 21, 0, 1, 1, 1, 0, 0]' : 0.749219}
{'[1, 1, 6, 5, 6, 4, 1, 1, 29, 0, 26, 21, 0, 1, 1, 1, 0, 0]' : 0.749493}
{'[1, 1, 6, 5, 6, 4, 1, 1, 29, 0, 26, 21, 0, 1, 1, 1, 0, 0]' : 0.749657}
{'[1, 1, 6, 5, 6, 4, 1, 1, 29, 0, 26, 21, 0, 1, 1, 1, 0, 0]' : 0.75026}
{'[1, 1, 6, 5, 6, 4, 1, 1, 29, 0, 26, 21, 0, 1, 1, 1, 0, 0]' : 0.749606}
{'[1, 1, 6, 5, 6, 4, 1, 1, 29, 0, 26, 21, 0, 1, 1, 1, 0, 0]' : 0.749209}
{'[1, 1, 6, 5, 6, 4, 1, 1, 29, 0, 26, 21, 0, 1, 1, 1, 0, 0]' : 0.749872}
{'[1, 1, 6, 5, 6, 4, 1, 1, 29, 0, 26, 21, 0, 1, 1, 1, 0, 0]' : 0.749729}
{'[1, 1, 6, 5, 6, 4, 1, 1, 29, 0, 26, 21, 0, 1, 1, 1, 0, 0]' : 0.749322}

out:
 ["{'[1, 1, 6, 5, 6, 4, 1, 1, 29, 0, 26, 21, 0, 1, 1, 1, 0, 0]' : 0.752879}", "{'[1, 1, 6, 5, 6, 4, 1, 1, 29, 0, 26, 21, 0, 1, 1, 1, 0, 0]' : 0.751509}", "{'[1, 1, 6, 5, 6, 4, 1, 1, 29, 0, 26, 21, 0, 1, 1, 1, 0, 0]' : 0.755883}", "{'[1, 1, 6, 5, 6, 4, 1, 1, 29, 0, 26, 21, 0, 1, 1, 1, 0, 0]' : 0.750012}", "{'[1, 1, 6, 5, 6, 4, 1, 1, 29, 0, 26, 21, 0, 1, 1, 1, 0, 0]' : 0.750209}", "{'[1, 1, 6, 5, 6, 4, 1, 1, 29, 0, 26, 21, 0, 1, 1, 1, 0, 0]' : 0.750139}", "{'[1, 1, 6, 5, 6, 4, 1, 1, 29, 0, 26, 21, 0, 1, 1, 1, 0, 0]' : 0.750506}", "{'[1, 1, 6, 5, 6, 4, 1, 1, 29, 0, 26, 21, 0, 1, 1, 1, 0, 0]' : 0.750332}", "{'[1, 1, 6, 5, 6, 4, 1, 1, 29, 0, 26, 21, 0, 1, 1, 1, 0, 0]' : 0.750011}", "{'[1, 1, 6, 5, 6, 4, 1, 1, 29, 0, 26, 21, 0, 1, 1, 1, 0, 0]' : 0.750058}", "{'[1, 1, 6, 5, 6, 4, 1, 1, 29, 0, 26, 21, 0, 1, 1, 1, 0, 0]' : 0.750157}", "{'[1, 1, 6, 5, 6, 4, 1, 1, 29, 0, 26, 21, 0, 1, 1, 1, 0, 0]' : 0.750522}", "{'[1, 1, 6, 5, 6, 4, 1, 1, 29, 0, 26, 21, 0, 1, 1, 1, 0, 0]' : 0.750052}", "{'[1, 1, 6, 5, 6, 4, 1, 1, 29, 0, 26, 21, 0, 1, 1, 1, 0, 0]' : 0.749671}", "{'[1, 1, 6, 5, 6, 4, 1, 1, 29, 0, 26, 21, 0, 1, 1, 1, 0, 0]' : 0.749754}", "{'[1, 1, 6, 5, 6, 4, 1, 1, 29, 0, 26, 21, 0, 1, 1, 1, 0, 0]' : 0.749275}", "{'[1, 1, 6, 5, 6, 4, 1, 1, 29, 0, 26, 21, 0, 1, 1, 1, 0, 0]' : 0.749666}", "{'[1, 1, 6, 5, 6, 4, 1, 1, 29, 0, 26, 21, 0, 1, 1, 1, 0, 0]' : 0.749332}", "{'[1, 1, 6, 5, 6, 4, 1, 1, 29, 0, 26, 21, 0, 1, 1, 1, 0, 0]' : 0.749906}", "{'[1, 1, 6, 5, 6, 4, 1, 1, 29, 0, 26, 21, 0, 1, 1, 1, 0, 0]' : 0.749419}", "{'[1, 1, 6, 5, 6, 4, 1, 1, 29, 0, 26, 21, 0, 1, 1, 1, 0, 0]' : 0.749374}", "{'[1, 1, 6, 5, 6, 4, 1, 1, 29, 0, 26, 21, 0, 1, 1, 1, 0, 0]' : 0.749219}", "{'[1, 1, 6, 5, 6, 4, 1, 1, 29, 0, 26, 21, 0, 1, 1, 1, 0, 0]' : 0.749493}", "{'[1, 1, 6, 5, 6, 4, 1, 1, 29, 0, 26, 21, 0, 1, 1, 1, 0, 0]' : 0.749657}", "{'[1, 1, 6, 5, 6, 4, 1, 1, 29, 0, 26, 21, 0, 1, 1, 1, 0, 0]' : 0.75026}", "{'[1, 1, 6, 5, 6, 4, 1, 1, 29, 0, 26, 21, 0, 1, 1, 1, 0, 0]' : 0.749606}", "{'[1, 1, 6, 5, 6, 4, 1, 1, 29, 0, 26, 21, 0, 1, 1, 1, 0, 0]' : 0.749209}", "{'[1, 1, 6, 5, 6, 4, 1, 1, 29, 0, 26, 21, 0, 1, 1, 1, 0, 0]' : 0.749872}", "{'[1, 1, 6, 5, 6, 4, 1, 1, 29, 0, 26, 21, 0, 1, 1, 1, 0, 0]' : 0.749729}", "{'[1, 1, 6, 5, 6, 4, 1, 1, 29, 0, 26, 21, 0, 1, 1, 1, 0, 0]' : 0.749322}"]
returning from 'run': {'[1, 1, 6, 5, 6, 4, 1, 1, 29, 0, 26, 21, 0, 1, 1, 1, 0, 0]': ([0.752879, 0.751509, 0.755883, 0.750012, 0.750209, 0.750139, 0.750506, 0.750332, 0.750011, 0.750058, 0.750157, 0.750522, 0.750052, 0.749671, 0.749754, 0.749275, 0.749666, 0.749332, 0.749906, 0.749419, 0.749374, 0.749219, 0.749493, 0.749657, 0.75026, 0.749606, 0.749209, 0.749872, 0.749729, 0.749322], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 1, 6, 5, 6, 4, 1, 1, 29, 0, 26, 21, 0, 1, 1, 1, 0, 0]': ([0.752879, 0.751509, 0.755883, 0.750012, 0.750209, 0.750139, 0.750506, 0.750332, 0.750011, 0.750058, 0.750157, 0.750522, 0.750052, 0.749671, 0.749754, 0.749275, 0.749666, 0.749332, 0.749906, 0.749419, 0.749374, 0.749219, 0.749493, 0.749657, 0.75026, 0.749606, 0.749209, 0.749872, 0.749729, 0.749322], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		3182
        Multiplications: 	880
        Divisions: 		0
        Logical: 		0
        Reads: 			4821
        Writes: 		492
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest21.exe __orio_perftest21.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest21.exe  
Program Test Output: 
{'[0, 0, 1, 0, 5, 5, 0, 1, 14, 0, 28, 15, 1, 1, 0, 0, 0, 1]' : 0.350193}
{'[0, 0, 1, 0, 5, 5, 0, 1, 14, 0, 28, 15, 1, 1, 0, 0, 0, 1]' : 0.33628}
{'[0, 0, 1, 0, 5, 5, 0, 1, 14, 0, 28, 15, 1, 1, 0, 0, 0, 1]' : 0.336404}
{'[0, 0, 1, 0, 5, 5, 0, 1, 14, 0, 28, 15, 1, 1, 0, 0, 0, 1]' : 0.342016}
{'[0, 0, 1, 0, 5, 5, 0, 1, 14, 0, 28, 15, 1, 1, 0, 0, 0, 1]' : 0.353427}
{'[0, 0, 1, 0, 5, 5, 0, 1, 14, 0, 28, 15, 1, 1, 0, 0, 0, 1]' : 0.335903}
{'[0, 0, 1, 0, 5, 5, 0, 1, 14, 0, 28, 15, 1, 1, 0, 0, 0, 1]' : 0.335981}
{'[0, 0, 1, 0, 5, 5, 0, 1, 14, 0, 28, 15, 1, 1, 0, 0, 0, 1]' : 0.336588}
{'[0, 0, 1, 0, 5, 5, 0, 1, 14, 0, 28, 15, 1, 1, 0, 0, 0, 1]' : 0.335824}
{'[0, 0, 1, 0, 5, 5, 0, 1, 14, 0, 28, 15, 1, 1, 0, 0, 0, 1]' : 0.337021}
{'[0, 0, 1, 0, 5, 5, 0, 1, 14, 0, 28, 15, 1, 1, 0, 0, 0, 1]' : 0.33577}
{'[0, 0, 1, 0, 5, 5, 0, 1, 14, 0, 28, 15, 1, 1, 0, 0, 0, 1]' : 0.336056}
{'[0, 0, 1, 0, 5, 5, 0, 1, 14, 0, 28, 15, 1, 1, 0, 0, 0, 1]' : 0.338228}
{'[0, 0, 1, 0, 5, 5, 0, 1, 14, 0, 28, 15, 1, 1, 0, 0, 0, 1]' : 0.355123}
{'[0, 0, 1, 0, 5, 5, 0, 1, 14, 0, 28, 15, 1, 1, 0, 0, 0, 1]' : 0.339969}
{'[0, 0, 1, 0, 5, 5, 0, 1, 14, 0, 28, 15, 1, 1, 0, 0, 0, 1]' : 0.335443}
{'[0, 0, 1, 0, 5, 5, 0, 1, 14, 0, 28, 15, 1, 1, 0, 0, 0, 1]' : 0.335683}
{'[0, 0, 1, 0, 5, 5, 0, 1, 14, 0, 28, 15, 1, 1, 0, 0, 0, 1]' : 0.34675}
{'[0, 0, 1, 0, 5, 5, 0, 1, 14, 0, 28, 15, 1, 1, 0, 0, 0, 1]' : 0.338963}
{'[0, 0, 1, 0, 5, 5, 0, 1, 14, 0, 28, 15, 1, 1, 0, 0, 0, 1]' : 0.335381}
{'[0, 0, 1, 0, 5, 5, 0, 1, 14, 0, 28, 15, 1, 1, 0, 0, 0, 1]' : 0.335804}
{'[0, 0, 1, 0, 5, 5, 0, 1, 14, 0, 28, 15, 1, 1, 0, 0, 0, 1]' : 0.335709}
{'[0, 0, 1, 0, 5, 5, 0, 1, 14, 0, 28, 15, 1, 1, 0, 0, 0, 1]' : 0.343064}
{'[0, 0, 1, 0, 5, 5, 0, 1, 14, 0, 28, 15, 1, 1, 0, 0, 0, 1]' : 0.336761}
{'[0, 0, 1, 0, 5, 5, 0, 1, 14, 0, 28, 15, 1, 1, 0, 0, 0, 1]' : 0.335314}
{'[0, 0, 1, 0, 5, 5, 0, 1, 14, 0, 28, 15, 1, 1, 0, 0, 0, 1]' : 0.335667}
{'[0, 0, 1, 0, 5, 5, 0, 1, 14, 0, 28, 15, 1, 1, 0, 0, 0, 1]' : 0.336013}
{'[0, 0, 1, 0, 5, 5, 0, 1, 14, 0, 28, 15, 1, 1, 0, 0, 0, 1]' : 0.337116}
{'[0, 0, 1, 0, 5, 5, 0, 1, 14, 0, 28, 15, 1, 1, 0, 0, 0, 1]' : 0.336288}
{'[0, 0, 1, 0, 5, 5, 0, 1, 14, 0, 28, 15, 1, 1, 0, 0, 0, 1]' : 0.336051}

out:
 ["{'[0, 0, 1, 0, 5, 5, 0, 1, 14, 0, 28, 15, 1, 1, 0, 0, 0, 1]' : 0.350193}", "{'[0, 0, 1, 0, 5, 5, 0, 1, 14, 0, 28, 15, 1, 1, 0, 0, 0, 1]' : 0.33628}", "{'[0, 0, 1, 0, 5, 5, 0, 1, 14, 0, 28, 15, 1, 1, 0, 0, 0, 1]' : 0.336404}", "{'[0, 0, 1, 0, 5, 5, 0, 1, 14, 0, 28, 15, 1, 1, 0, 0, 0, 1]' : 0.342016}", "{'[0, 0, 1, 0, 5, 5, 0, 1, 14, 0, 28, 15, 1, 1, 0, 0, 0, 1]' : 0.353427}", "{'[0, 0, 1, 0, 5, 5, 0, 1, 14, 0, 28, 15, 1, 1, 0, 0, 0, 1]' : 0.335903}", "{'[0, 0, 1, 0, 5, 5, 0, 1, 14, 0, 28, 15, 1, 1, 0, 0, 0, 1]' : 0.335981}", "{'[0, 0, 1, 0, 5, 5, 0, 1, 14, 0, 28, 15, 1, 1, 0, 0, 0, 1]' : 0.336588}", "{'[0, 0, 1, 0, 5, 5, 0, 1, 14, 0, 28, 15, 1, 1, 0, 0, 0, 1]' : 0.335824}", "{'[0, 0, 1, 0, 5, 5, 0, 1, 14, 0, 28, 15, 1, 1, 0, 0, 0, 1]' : 0.337021}", "{'[0, 0, 1, 0, 5, 5, 0, 1, 14, 0, 28, 15, 1, 1, 0, 0, 0, 1]' : 0.33577}", "{'[0, 0, 1, 0, 5, 5, 0, 1, 14, 0, 28, 15, 1, 1, 0, 0, 0, 1]' : 0.336056}", "{'[0, 0, 1, 0, 5, 5, 0, 1, 14, 0, 28, 15, 1, 1, 0, 0, 0, 1]' : 0.338228}", "{'[0, 0, 1, 0, 5, 5, 0, 1, 14, 0, 28, 15, 1, 1, 0, 0, 0, 1]' : 0.355123}", "{'[0, 0, 1, 0, 5, 5, 0, 1, 14, 0, 28, 15, 1, 1, 0, 0, 0, 1]' : 0.339969}", "{'[0, 0, 1, 0, 5, 5, 0, 1, 14, 0, 28, 15, 1, 1, 0, 0, 0, 1]' : 0.335443}", "{'[0, 0, 1, 0, 5, 5, 0, 1, 14, 0, 28, 15, 1, 1, 0, 0, 0, 1]' : 0.335683}", "{'[0, 0, 1, 0, 5, 5, 0, 1, 14, 0, 28, 15, 1, 1, 0, 0, 0, 1]' : 0.34675}", "{'[0, 0, 1, 0, 5, 5, 0, 1, 14, 0, 28, 15, 1, 1, 0, 0, 0, 1]' : 0.338963}", "{'[0, 0, 1, 0, 5, 5, 0, 1, 14, 0, 28, 15, 1, 1, 0, 0, 0, 1]' : 0.335381}", "{'[0, 0, 1, 0, 5, 5, 0, 1, 14, 0, 28, 15, 1, 1, 0, 0, 0, 1]' : 0.335804}", "{'[0, 0, 1, 0, 5, 5, 0, 1, 14, 0, 28, 15, 1, 1, 0, 0, 0, 1]' : 0.335709}", "{'[0, 0, 1, 0, 5, 5, 0, 1, 14, 0, 28, 15, 1, 1, 0, 0, 0, 1]' : 0.343064}", "{'[0, 0, 1, 0, 5, 5, 0, 1, 14, 0, 28, 15, 1, 1, 0, 0, 0, 1]' : 0.336761}", "{'[0, 0, 1, 0, 5, 5, 0, 1, 14, 0, 28, 15, 1, 1, 0, 0, 0, 1]' : 0.335314}", "{'[0, 0, 1, 0, 5, 5, 0, 1, 14, 0, 28, 15, 1, 1, 0, 0, 0, 1]' : 0.335667}", "{'[0, 0, 1, 0, 5, 5, 0, 1, 14, 0, 28, 15, 1, 1, 0, 0, 0, 1]' : 0.336013}", "{'[0, 0, 1, 0, 5, 5, 0, 1, 14, 0, 28, 15, 1, 1, 0, 0, 0, 1]' : 0.337116}", "{'[0, 0, 1, 0, 5, 5, 0, 1, 14, 0, 28, 15, 1, 1, 0, 0, 0, 1]' : 0.336288}", "{'[0, 0, 1, 0, 5, 5, 0, 1, 14, 0, 28, 15, 1, 1, 0, 0, 0, 1]' : 0.336051}"]
returning from 'run': {'[0, 0, 1, 0, 5, 5, 0, 1, 14, 0, 28, 15, 1, 1, 0, 0, 0, 1]': ([0.350193, 0.33628, 0.336404, 0.342016, 0.353427, 0.335903, 0.335981, 0.336588, 0.335824, 0.337021, 0.33577, 0.336056, 0.338228, 0.355123, 0.339969, 0.335443, 0.335683, 0.34675, 0.338963, 0.335381, 0.335804, 0.335709, 0.343064, 0.336761, 0.335314, 0.335667, 0.336013, 0.337116, 0.336288, 0.336051], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 1, 0, 5, 5, 0, 1, 14, 0, 28, 15, 1, 1, 0, 0, 0, 1]': ([0.350193, 0.33628, 0.336404, 0.342016, 0.353427, 0.335903, 0.335981, 0.336588, 0.335824, 0.337021, 0.33577, 0.336056, 0.338228, 0.355123, 0.339969, 0.335443, 0.335683, 0.34675, 0.338963, 0.335381, 0.335804, 0.335709, 0.343064, 0.336761, 0.335314, 0.335667, 0.336013, 0.337116, 0.336288, 0.336051], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	83
        Max loop nest depth: 	6
        Additions: 		4276
        Multiplications: 	1944
        Divisions: 		0
        Logical: 		0
        Reads: 			8323
        Writes: 		1422
        Comparisons:		83
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest22.exe __orio_perftest22.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest22.exe  
Program Test Output: 
{'[1, 0, 1, 6, 3, 3, 0, 1, 25, 26, 17, 0, 1, 0, 1, 1, 0, 1]' : 0.346644}
{'[1, 0, 1, 6, 3, 3, 0, 1, 25, 26, 17, 0, 1, 0, 1, 1, 0, 1]' : 0.34693}
{'[1, 0, 1, 6, 3, 3, 0, 1, 25, 26, 17, 0, 1, 0, 1, 1, 0, 1]' : 0.349302}
{'[1, 0, 1, 6, 3, 3, 0, 1, 25, 26, 17, 0, 1, 0, 1, 1, 0, 1]' : 0.349864}
{'[1, 0, 1, 6, 3, 3, 0, 1, 25, 26, 17, 0, 1, 0, 1, 1, 0, 1]' : 0.346996}
{'[1, 0, 1, 6, 3, 3, 0, 1, 25, 26, 17, 0, 1, 0, 1, 1, 0, 1]' : 0.34727}
{'[1, 0, 1, 6, 3, 3, 0, 1, 25, 26, 17, 0, 1, 0, 1, 1, 0, 1]' : 0.346993}
{'[1, 0, 1, 6, 3, 3, 0, 1, 25, 26, 17, 0, 1, 0, 1, 1, 0, 1]' : 0.346922}
{'[1, 0, 1, 6, 3, 3, 0, 1, 25, 26, 17, 0, 1, 0, 1, 1, 0, 1]' : 0.346978}
{'[1, 0, 1, 6, 3, 3, 0, 1, 25, 26, 17, 0, 1, 0, 1, 1, 0, 1]' : 0.346684}
{'[1, 0, 1, 6, 3, 3, 0, 1, 25, 26, 17, 0, 1, 0, 1, 1, 0, 1]' : 0.346601}
{'[1, 0, 1, 6, 3, 3, 0, 1, 25, 26, 17, 0, 1, 0, 1, 1, 0, 1]' : 0.34997}
{'[1, 0, 1, 6, 3, 3, 0, 1, 25, 26, 17, 0, 1, 0, 1, 1, 0, 1]' : 0.351389}
{'[1, 0, 1, 6, 3, 3, 0, 1, 25, 26, 17, 0, 1, 0, 1, 1, 0, 1]' : 0.346905}
{'[1, 0, 1, 6, 3, 3, 0, 1, 25, 26, 17, 0, 1, 0, 1, 1, 0, 1]' : 0.346932}
{'[1, 0, 1, 6, 3, 3, 0, 1, 25, 26, 17, 0, 1, 0, 1, 1, 0, 1]' : 0.346906}
{'[1, 0, 1, 6, 3, 3, 0, 1, 25, 26, 17, 0, 1, 0, 1, 1, 0, 1]' : 0.346502}
{'[1, 0, 1, 6, 3, 3, 0, 1, 25, 26, 17, 0, 1, 0, 1, 1, 0, 1]' : 0.347915}
{'[1, 0, 1, 6, 3, 3, 0, 1, 25, 26, 17, 0, 1, 0, 1, 1, 0, 1]' : 0.347651}
{'[1, 0, 1, 6, 3, 3, 0, 1, 25, 26, 17, 0, 1, 0, 1, 1, 0, 1]' : 0.347269}
{'[1, 0, 1, 6, 3, 3, 0, 1, 25, 26, 17, 0, 1, 0, 1, 1, 0, 1]' : 0.347331}
{'[1, 0, 1, 6, 3, 3, 0, 1, 25, 26, 17, 0, 1, 0, 1, 1, 0, 1]' : 0.347039}
{'[1, 0, 1, 6, 3, 3, 0, 1, 25, 26, 17, 0, 1, 0, 1, 1, 0, 1]' : 0.347006}
{'[1, 0, 1, 6, 3, 3, 0, 1, 25, 26, 17, 0, 1, 0, 1, 1, 0, 1]' : 0.346777}
{'[1, 0, 1, 6, 3, 3, 0, 1, 25, 26, 17, 0, 1, 0, 1, 1, 0, 1]' : 0.347001}
{'[1, 0, 1, 6, 3, 3, 0, 1, 25, 26, 17, 0, 1, 0, 1, 1, 0, 1]' : 0.348116}
{'[1, 0, 1, 6, 3, 3, 0, 1, 25, 26, 17, 0, 1, 0, 1, 1, 0, 1]' : 0.346712}
{'[1, 0, 1, 6, 3, 3, 0, 1, 25, 26, 17, 0, 1, 0, 1, 1, 0, 1]' : 0.346869}
{'[1, 0, 1, 6, 3, 3, 0, 1, 25, 26, 17, 0, 1, 0, 1, 1, 0, 1]' : 0.359225}
{'[1, 0, 1, 6, 3, 3, 0, 1, 25, 26, 17, 0, 1, 0, 1, 1, 0, 1]' : 0.35557}

out:
 ["{'[1, 0, 1, 6, 3, 3, 0, 1, 25, 26, 17, 0, 1, 0, 1, 1, 0, 1]' : 0.346644}", "{'[1, 0, 1, 6, 3, 3, 0, 1, 25, 26, 17, 0, 1, 0, 1, 1, 0, 1]' : 0.34693}", "{'[1, 0, 1, 6, 3, 3, 0, 1, 25, 26, 17, 0, 1, 0, 1, 1, 0, 1]' : 0.349302}", "{'[1, 0, 1, 6, 3, 3, 0, 1, 25, 26, 17, 0, 1, 0, 1, 1, 0, 1]' : 0.349864}", "{'[1, 0, 1, 6, 3, 3, 0, 1, 25, 26, 17, 0, 1, 0, 1, 1, 0, 1]' : 0.346996}", "{'[1, 0, 1, 6, 3, 3, 0, 1, 25, 26, 17, 0, 1, 0, 1, 1, 0, 1]' : 0.34727}", "{'[1, 0, 1, 6, 3, 3, 0, 1, 25, 26, 17, 0, 1, 0, 1, 1, 0, 1]' : 0.346993}", "{'[1, 0, 1, 6, 3, 3, 0, 1, 25, 26, 17, 0, 1, 0, 1, 1, 0, 1]' : 0.346922}", "{'[1, 0, 1, 6, 3, 3, 0, 1, 25, 26, 17, 0, 1, 0, 1, 1, 0, 1]' : 0.346978}", "{'[1, 0, 1, 6, 3, 3, 0, 1, 25, 26, 17, 0, 1, 0, 1, 1, 0, 1]' : 0.346684}", "{'[1, 0, 1, 6, 3, 3, 0, 1, 25, 26, 17, 0, 1, 0, 1, 1, 0, 1]' : 0.346601}", "{'[1, 0, 1, 6, 3, 3, 0, 1, 25, 26, 17, 0, 1, 0, 1, 1, 0, 1]' : 0.34997}", "{'[1, 0, 1, 6, 3, 3, 0, 1, 25, 26, 17, 0, 1, 0, 1, 1, 0, 1]' : 0.351389}", "{'[1, 0, 1, 6, 3, 3, 0, 1, 25, 26, 17, 0, 1, 0, 1, 1, 0, 1]' : 0.346905}", "{'[1, 0, 1, 6, 3, 3, 0, 1, 25, 26, 17, 0, 1, 0, 1, 1, 0, 1]' : 0.346932}", "{'[1, 0, 1, 6, 3, 3, 0, 1, 25, 26, 17, 0, 1, 0, 1, 1, 0, 1]' : 0.346906}", "{'[1, 0, 1, 6, 3, 3, 0, 1, 25, 26, 17, 0, 1, 0, 1, 1, 0, 1]' : 0.346502}", "{'[1, 0, 1, 6, 3, 3, 0, 1, 25, 26, 17, 0, 1, 0, 1, 1, 0, 1]' : 0.347915}", "{'[1, 0, 1, 6, 3, 3, 0, 1, 25, 26, 17, 0, 1, 0, 1, 1, 0, 1]' : 0.347651}", "{'[1, 0, 1, 6, 3, 3, 0, 1, 25, 26, 17, 0, 1, 0, 1, 1, 0, 1]' : 0.347269}", "{'[1, 0, 1, 6, 3, 3, 0, 1, 25, 26, 17, 0, 1, 0, 1, 1, 0, 1]' : 0.347331}", "{'[1, 0, 1, 6, 3, 3, 0, 1, 25, 26, 17, 0, 1, 0, 1, 1, 0, 1]' : 0.347039}", "{'[1, 0, 1, 6, 3, 3, 0, 1, 25, 26, 17, 0, 1, 0, 1, 1, 0, 1]' : 0.347006}", "{'[1, 0, 1, 6, 3, 3, 0, 1, 25, 26, 17, 0, 1, 0, 1, 1, 0, 1]' : 0.346777}", "{'[1, 0, 1, 6, 3, 3, 0, 1, 25, 26, 17, 0, 1, 0, 1, 1, 0, 1]' : 0.347001}", "{'[1, 0, 1, 6, 3, 3, 0, 1, 25, 26, 17, 0, 1, 0, 1, 1, 0, 1]' : 0.348116}", "{'[1, 0, 1, 6, 3, 3, 0, 1, 25, 26, 17, 0, 1, 0, 1, 1, 0, 1]' : 0.346712}", "{'[1, 0, 1, 6, 3, 3, 0, 1, 25, 26, 17, 0, 1, 0, 1, 1, 0, 1]' : 0.346869}", "{'[1, 0, 1, 6, 3, 3, 0, 1, 25, 26, 17, 0, 1, 0, 1, 1, 0, 1]' : 0.359225}", "{'[1, 0, 1, 6, 3, 3, 0, 1, 25, 26, 17, 0, 1, 0, 1, 1, 0, 1]' : 0.35557}"]
returning from 'run': {'[1, 0, 1, 6, 3, 3, 0, 1, 25, 26, 17, 0, 1, 0, 1, 1, 0, 1]': ([0.346644, 0.34693, 0.349302, 0.349864, 0.346996, 0.34727, 0.346993, 0.346922, 0.346978, 0.346684, 0.346601, 0.34997, 0.351389, 0.346905, 0.346932, 0.346906, 0.346502, 0.347915, 0.347651, 0.347269, 0.347331, 0.347039, 0.347006, 0.346777, 0.347001, 0.348116, 0.346712, 0.346869, 0.359225, 0.35557], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 1, 6, 3, 3, 0, 1, 25, 26, 17, 0, 1, 0, 1, 1, 0, 1]': ([0.346644, 0.34693, 0.349302, 0.349864, 0.346996, 0.34727, 0.346993, 0.346922, 0.346978, 0.346684, 0.346601, 0.34997, 0.351389, 0.346905, 0.346932, 0.346906, 0.346502, 0.347915, 0.347651, 0.347269, 0.347331, 0.347039, 0.347006, 0.346777, 0.347001, 0.348116, 0.346712, 0.346869, 0.359225, 0.35557], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = iii
Code stats:
        Number of loops: 	69
        Max loop nest depth: 	5
        Additions: 		4684
        Multiplications: 	1760
        Divisions: 		0
        Logical: 		0
        Reads: 			8197
        Writes: 		1242
        Comparisons:		69
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest23.exe __orio_perftest23.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest23.exe  
Program Test Output: 
{'[4, 2, 2, 2, 3, 1, 1, 0, 12, 12, 29, 0, 1, 0, 1, 1, 0, 1]' : 0.303955}
{'[4, 2, 2, 2, 3, 1, 1, 0, 12, 12, 29, 0, 1, 0, 1, 1, 0, 1]' : 0.303646}
{'[4, 2, 2, 2, 3, 1, 1, 0, 12, 12, 29, 0, 1, 0, 1, 1, 0, 1]' : 0.302794}
{'[4, 2, 2, 2, 3, 1, 1, 0, 12, 12, 29, 0, 1, 0, 1, 1, 0, 1]' : 0.303547}
{'[4, 2, 2, 2, 3, 1, 1, 0, 12, 12, 29, 0, 1, 0, 1, 1, 0, 1]' : 0.303911}
{'[4, 2, 2, 2, 3, 1, 1, 0, 12, 12, 29, 0, 1, 0, 1, 1, 0, 1]' : 0.302874}
{'[4, 2, 2, 2, 3, 1, 1, 0, 12, 12, 29, 0, 1, 0, 1, 1, 0, 1]' : 0.304092}
{'[4, 2, 2, 2, 3, 1, 1, 0, 12, 12, 29, 0, 1, 0, 1, 1, 0, 1]' : 0.305176}
{'[4, 2, 2, 2, 3, 1, 1, 0, 12, 12, 29, 0, 1, 0, 1, 1, 0, 1]' : 0.302303}
{'[4, 2, 2, 2, 3, 1, 1, 0, 12, 12, 29, 0, 1, 0, 1, 1, 0, 1]' : 0.304269}
{'[4, 2, 2, 2, 3, 1, 1, 0, 12, 12, 29, 0, 1, 0, 1, 1, 0, 1]' : 0.302831}
{'[4, 2, 2, 2, 3, 1, 1, 0, 12, 12, 29, 0, 1, 0, 1, 1, 0, 1]' : 0.305955}
{'[4, 2, 2, 2, 3, 1, 1, 0, 12, 12, 29, 0, 1, 0, 1, 1, 0, 1]' : 0.304238}
{'[4, 2, 2, 2, 3, 1, 1, 0, 12, 12, 29, 0, 1, 0, 1, 1, 0, 1]' : 0.303162}
{'[4, 2, 2, 2, 3, 1, 1, 0, 12, 12, 29, 0, 1, 0, 1, 1, 0, 1]' : 0.304438}
{'[4, 2, 2, 2, 3, 1, 1, 0, 12, 12, 29, 0, 1, 0, 1, 1, 0, 1]' : 0.30541}
{'[4, 2, 2, 2, 3, 1, 1, 0, 12, 12, 29, 0, 1, 0, 1, 1, 0, 1]' : 0.303358}
{'[4, 2, 2, 2, 3, 1, 1, 0, 12, 12, 29, 0, 1, 0, 1, 1, 0, 1]' : 0.305272}
{'[4, 2, 2, 2, 3, 1, 1, 0, 12, 12, 29, 0, 1, 0, 1, 1, 0, 1]' : 0.304591}
{'[4, 2, 2, 2, 3, 1, 1, 0, 12, 12, 29, 0, 1, 0, 1, 1, 0, 1]' : 0.303923}
{'[4, 2, 2, 2, 3, 1, 1, 0, 12, 12, 29, 0, 1, 0, 1, 1, 0, 1]' : 0.305293}
{'[4, 2, 2, 2, 3, 1, 1, 0, 12, 12, 29, 0, 1, 0, 1, 1, 0, 1]' : 0.307801}
{'[4, 2, 2, 2, 3, 1, 1, 0, 12, 12, 29, 0, 1, 0, 1, 1, 0, 1]' : 0.305516}
{'[4, 2, 2, 2, 3, 1, 1, 0, 12, 12, 29, 0, 1, 0, 1, 1, 0, 1]' : 0.304639}
{'[4, 2, 2, 2, 3, 1, 1, 0, 12, 12, 29, 0, 1, 0, 1, 1, 0, 1]' : 0.304782}
{'[4, 2, 2, 2, 3, 1, 1, 0, 12, 12, 29, 0, 1, 0, 1, 1, 0, 1]' : 0.305211}
{'[4, 2, 2, 2, 3, 1, 1, 0, 12, 12, 29, 0, 1, 0, 1, 1, 0, 1]' : 0.305492}
{'[4, 2, 2, 2, 3, 1, 1, 0, 12, 12, 29, 0, 1, 0, 1, 1, 0, 1]' : 0.30718}
{'[4, 2, 2, 2, 3, 1, 1, 0, 12, 12, 29, 0, 1, 0, 1, 1, 0, 1]' : 0.304854}
{'[4, 2, 2, 2, 3, 1, 1, 0, 12, 12, 29, 0, 1, 0, 1, 1, 0, 1]' : 0.30658}

out:
 ["{'[4, 2, 2, 2, 3, 1, 1, 0, 12, 12, 29, 0, 1, 0, 1, 1, 0, 1]' : 0.303955}", "{'[4, 2, 2, 2, 3, 1, 1, 0, 12, 12, 29, 0, 1, 0, 1, 1, 0, 1]' : 0.303646}", "{'[4, 2, 2, 2, 3, 1, 1, 0, 12, 12, 29, 0, 1, 0, 1, 1, 0, 1]' : 0.302794}", "{'[4, 2, 2, 2, 3, 1, 1, 0, 12, 12, 29, 0, 1, 0, 1, 1, 0, 1]' : 0.303547}", "{'[4, 2, 2, 2, 3, 1, 1, 0, 12, 12, 29, 0, 1, 0, 1, 1, 0, 1]' : 0.303911}", "{'[4, 2, 2, 2, 3, 1, 1, 0, 12, 12, 29, 0, 1, 0, 1, 1, 0, 1]' : 0.302874}", "{'[4, 2, 2, 2, 3, 1, 1, 0, 12, 12, 29, 0, 1, 0, 1, 1, 0, 1]' : 0.304092}", "{'[4, 2, 2, 2, 3, 1, 1, 0, 12, 12, 29, 0, 1, 0, 1, 1, 0, 1]' : 0.305176}", "{'[4, 2, 2, 2, 3, 1, 1, 0, 12, 12, 29, 0, 1, 0, 1, 1, 0, 1]' : 0.302303}", "{'[4, 2, 2, 2, 3, 1, 1, 0, 12, 12, 29, 0, 1, 0, 1, 1, 0, 1]' : 0.304269}", "{'[4, 2, 2, 2, 3, 1, 1, 0, 12, 12, 29, 0, 1, 0, 1, 1, 0, 1]' : 0.302831}", "{'[4, 2, 2, 2, 3, 1, 1, 0, 12, 12, 29, 0, 1, 0, 1, 1, 0, 1]' : 0.305955}", "{'[4, 2, 2, 2, 3, 1, 1, 0, 12, 12, 29, 0, 1, 0, 1, 1, 0, 1]' : 0.304238}", "{'[4, 2, 2, 2, 3, 1, 1, 0, 12, 12, 29, 0, 1, 0, 1, 1, 0, 1]' : 0.303162}", "{'[4, 2, 2, 2, 3, 1, 1, 0, 12, 12, 29, 0, 1, 0, 1, 1, 0, 1]' : 0.304438}", "{'[4, 2, 2, 2, 3, 1, 1, 0, 12, 12, 29, 0, 1, 0, 1, 1, 0, 1]' : 0.30541}", "{'[4, 2, 2, 2, 3, 1, 1, 0, 12, 12, 29, 0, 1, 0, 1, 1, 0, 1]' : 0.303358}", "{'[4, 2, 2, 2, 3, 1, 1, 0, 12, 12, 29, 0, 1, 0, 1, 1, 0, 1]' : 0.305272}", "{'[4, 2, 2, 2, 3, 1, 1, 0, 12, 12, 29, 0, 1, 0, 1, 1, 0, 1]' : 0.304591}", "{'[4, 2, 2, 2, 3, 1, 1, 0, 12, 12, 29, 0, 1, 0, 1, 1, 0, 1]' : 0.303923}", "{'[4, 2, 2, 2, 3, 1, 1, 0, 12, 12, 29, 0, 1, 0, 1, 1, 0, 1]' : 0.305293}", "{'[4, 2, 2, 2, 3, 1, 1, 0, 12, 12, 29, 0, 1, 0, 1, 1, 0, 1]' : 0.307801}", "{'[4, 2, 2, 2, 3, 1, 1, 0, 12, 12, 29, 0, 1, 0, 1, 1, 0, 1]' : 0.305516}", "{'[4, 2, 2, 2, 3, 1, 1, 0, 12, 12, 29, 0, 1, 0, 1, 1, 0, 1]' : 0.304639}", "{'[4, 2, 2, 2, 3, 1, 1, 0, 12, 12, 29, 0, 1, 0, 1, 1, 0, 1]' : 0.304782}", "{'[4, 2, 2, 2, 3, 1, 1, 0, 12, 12, 29, 0, 1, 0, 1, 1, 0, 1]' : 0.305211}", "{'[4, 2, 2, 2, 3, 1, 1, 0, 12, 12, 29, 0, 1, 0, 1, 1, 0, 1]' : 0.305492}", "{'[4, 2, 2, 2, 3, 1, 1, 0, 12, 12, 29, 0, 1, 0, 1, 1, 0, 1]' : 0.30718}", "{'[4, 2, 2, 2, 3, 1, 1, 0, 12, 12, 29, 0, 1, 0, 1, 1, 0, 1]' : 0.304854}", "{'[4, 2, 2, 2, 3, 1, 1, 0, 12, 12, 29, 0, 1, 0, 1, 1, 0, 1]' : 0.30658}"]
returning from 'run': {'[4, 2, 2, 2, 3, 1, 1, 0, 12, 12, 29, 0, 1, 0, 1, 1, 0, 1]': ([0.303955, 0.303646, 0.302794, 0.303547, 0.303911, 0.302874, 0.304092, 0.305176, 0.302303, 0.304269, 0.302831, 0.305955, 0.304238, 0.303162, 0.304438, 0.30541, 0.303358, 0.305272, 0.304591, 0.303923, 0.305293, 0.307801, 0.305516, 0.304639, 0.304782, 0.305211, 0.305492, 0.30718, 0.304854, 0.30658], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 2, 2, 2, 3, 1, 1, 0, 12, 12, 29, 0, 1, 0, 1, 1, 0, 1]': ([0.303955, 0.303646, 0.302794, 0.303547, 0.303911, 0.302874, 0.304092, 0.305176, 0.302303, 0.304269, 0.302831, 0.305955, 0.304238, 0.303162, 0.304438, 0.30541, 0.303358, 0.305272, 0.304591, 0.303923, 0.305293, 0.307801, 0.305516, 0.304639, 0.304782, 0.305211, 0.305492, 0.30718, 0.304854, 0.30658], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	5
        Additions: 		1501
        Multiplications: 	468
        Divisions: 		0
        Logical: 		0
        Reads: 			2523
        Writes: 		296
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest24.exe __orio_perftest24.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest24.exe  
Program Test Output: 
{'[0, 4, 3, 5, 5, 3, 0, 0, 16, 0, 15, 0, 1, 1, 0, 0, 0, 0]' : 0.255104}
{'[0, 4, 3, 5, 5, 3, 0, 0, 16, 0, 15, 0, 1, 1, 0, 0, 0, 0]' : 0.254861}
{'[0, 4, 3, 5, 5, 3, 0, 0, 16, 0, 15, 0, 1, 1, 0, 0, 0, 0]' : 0.255013}
{'[0, 4, 3, 5, 5, 3, 0, 0, 16, 0, 15, 0, 1, 1, 0, 0, 0, 0]' : 0.254729}
{'[0, 4, 3, 5, 5, 3, 0, 0, 16, 0, 15, 0, 1, 1, 0, 0, 0, 0]' : 0.254266}
{'[0, 4, 3, 5, 5, 3, 0, 0, 16, 0, 15, 0, 1, 1, 0, 0, 0, 0]' : 0.254511}
{'[0, 4, 3, 5, 5, 3, 0, 0, 16, 0, 15, 0, 1, 1, 0, 0, 0, 0]' : 0.253844}
{'[0, 4, 3, 5, 5, 3, 0, 0, 16, 0, 15, 0, 1, 1, 0, 0, 0, 0]' : 0.254077}
{'[0, 4, 3, 5, 5, 3, 0, 0, 16, 0, 15, 0, 1, 1, 0, 0, 0, 0]' : 0.25438}
{'[0, 4, 3, 5, 5, 3, 0, 0, 16, 0, 15, 0, 1, 1, 0, 0, 0, 0]' : 0.253639}
{'[0, 4, 3, 5, 5, 3, 0, 0, 16, 0, 15, 0, 1, 1, 0, 0, 0, 0]' : 0.254583}
{'[0, 4, 3, 5, 5, 3, 0, 0, 16, 0, 15, 0, 1, 1, 0, 0, 0, 0]' : 0.255188}
{'[0, 4, 3, 5, 5, 3, 0, 0, 16, 0, 15, 0, 1, 1, 0, 0, 0, 0]' : 0.255327}
{'[0, 4, 3, 5, 5, 3, 0, 0, 16, 0, 15, 0, 1, 1, 0, 0, 0, 0]' : 0.254193}
{'[0, 4, 3, 5, 5, 3, 0, 0, 16, 0, 15, 0, 1, 1, 0, 0, 0, 0]' : 0.253947}
{'[0, 4, 3, 5, 5, 3, 0, 0, 16, 0, 15, 0, 1, 1, 0, 0, 0, 0]' : 0.254789}
{'[0, 4, 3, 5, 5, 3, 0, 0, 16, 0, 15, 0, 1, 1, 0, 0, 0, 0]' : 0.253897}
{'[0, 4, 3, 5, 5, 3, 0, 0, 16, 0, 15, 0, 1, 1, 0, 0, 0, 0]' : 0.254584}
{'[0, 4, 3, 5, 5, 3, 0, 0, 16, 0, 15, 0, 1, 1, 0, 0, 0, 0]' : 0.254291}
{'[0, 4, 3, 5, 5, 3, 0, 0, 16, 0, 15, 0, 1, 1, 0, 0, 0, 0]' : 0.254531}
{'[0, 4, 3, 5, 5, 3, 0, 0, 16, 0, 15, 0, 1, 1, 0, 0, 0, 0]' : 0.254843}
{'[0, 4, 3, 5, 5, 3, 0, 0, 16, 0, 15, 0, 1, 1, 0, 0, 0, 0]' : 0.254697}
{'[0, 4, 3, 5, 5, 3, 0, 0, 16, 0, 15, 0, 1, 1, 0, 0, 0, 0]' : 0.255051}
{'[0, 4, 3, 5, 5, 3, 0, 0, 16, 0, 15, 0, 1, 1, 0, 0, 0, 0]' : 0.254466}
{'[0, 4, 3, 5, 5, 3, 0, 0, 16, 0, 15, 0, 1, 1, 0, 0, 0, 0]' : 0.268136}
{'[0, 4, 3, 5, 5, 3, 0, 0, 16, 0, 15, 0, 1, 1, 0, 0, 0, 0]' : 0.265561}
{'[0, 4, 3, 5, 5, 3, 0, 0, 16, 0, 15, 0, 1, 1, 0, 0, 0, 0]' : 0.257973}
{'[0, 4, 3, 5, 5, 3, 0, 0, 16, 0, 15, 0, 1, 1, 0, 0, 0, 0]' : 0.257378}
{'[0, 4, 3, 5, 5, 3, 0, 0, 16, 0, 15, 0, 1, 1, 0, 0, 0, 0]' : 0.254376}
{'[0, 4, 3, 5, 5, 3, 0, 0, 16, 0, 15, 0, 1, 1, 0, 0, 0, 0]' : 0.254684}

out:
 ["{'[0, 4, 3, 5, 5, 3, 0, 0, 16, 0, 15, 0, 1, 1, 0, 0, 0, 0]' : 0.255104}", "{'[0, 4, 3, 5, 5, 3, 0, 0, 16, 0, 15, 0, 1, 1, 0, 0, 0, 0]' : 0.254861}", "{'[0, 4, 3, 5, 5, 3, 0, 0, 16, 0, 15, 0, 1, 1, 0, 0, 0, 0]' : 0.255013}", "{'[0, 4, 3, 5, 5, 3, 0, 0, 16, 0, 15, 0, 1, 1, 0, 0, 0, 0]' : 0.254729}", "{'[0, 4, 3, 5, 5, 3, 0, 0, 16, 0, 15, 0, 1, 1, 0, 0, 0, 0]' : 0.254266}", "{'[0, 4, 3, 5, 5, 3, 0, 0, 16, 0, 15, 0, 1, 1, 0, 0, 0, 0]' : 0.254511}", "{'[0, 4, 3, 5, 5, 3, 0, 0, 16, 0, 15, 0, 1, 1, 0, 0, 0, 0]' : 0.253844}", "{'[0, 4, 3, 5, 5, 3, 0, 0, 16, 0, 15, 0, 1, 1, 0, 0, 0, 0]' : 0.254077}", "{'[0, 4, 3, 5, 5, 3, 0, 0, 16, 0, 15, 0, 1, 1, 0, 0, 0, 0]' : 0.25438}", "{'[0, 4, 3, 5, 5, 3, 0, 0, 16, 0, 15, 0, 1, 1, 0, 0, 0, 0]' : 0.253639}", "{'[0, 4, 3, 5, 5, 3, 0, 0, 16, 0, 15, 0, 1, 1, 0, 0, 0, 0]' : 0.254583}", "{'[0, 4, 3, 5, 5, 3, 0, 0, 16, 0, 15, 0, 1, 1, 0, 0, 0, 0]' : 0.255188}", "{'[0, 4, 3, 5, 5, 3, 0, 0, 16, 0, 15, 0, 1, 1, 0, 0, 0, 0]' : 0.255327}", "{'[0, 4, 3, 5, 5, 3, 0, 0, 16, 0, 15, 0, 1, 1, 0, 0, 0, 0]' : 0.254193}", "{'[0, 4, 3, 5, 5, 3, 0, 0, 16, 0, 15, 0, 1, 1, 0, 0, 0, 0]' : 0.253947}", "{'[0, 4, 3, 5, 5, 3, 0, 0, 16, 0, 15, 0, 1, 1, 0, 0, 0, 0]' : 0.254789}", "{'[0, 4, 3, 5, 5, 3, 0, 0, 16, 0, 15, 0, 1, 1, 0, 0, 0, 0]' : 0.253897}", "{'[0, 4, 3, 5, 5, 3, 0, 0, 16, 0, 15, 0, 1, 1, 0, 0, 0, 0]' : 0.254584}", "{'[0, 4, 3, 5, 5, 3, 0, 0, 16, 0, 15, 0, 1, 1, 0, 0, 0, 0]' : 0.254291}", "{'[0, 4, 3, 5, 5, 3, 0, 0, 16, 0, 15, 0, 1, 1, 0, 0, 0, 0]' : 0.254531}", "{'[0, 4, 3, 5, 5, 3, 0, 0, 16, 0, 15, 0, 1, 1, 0, 0, 0, 0]' : 0.254843}", "{'[0, 4, 3, 5, 5, 3, 0, 0, 16, 0, 15, 0, 1, 1, 0, 0, 0, 0]' : 0.254697}", "{'[0, 4, 3, 5, 5, 3, 0, 0, 16, 0, 15, 0, 1, 1, 0, 0, 0, 0]' : 0.255051}", "{'[0, 4, 3, 5, 5, 3, 0, 0, 16, 0, 15, 0, 1, 1, 0, 0, 0, 0]' : 0.254466}", "{'[0, 4, 3, 5, 5, 3, 0, 0, 16, 0, 15, 0, 1, 1, 0, 0, 0, 0]' : 0.268136}", "{'[0, 4, 3, 5, 5, 3, 0, 0, 16, 0, 15, 0, 1, 1, 0, 0, 0, 0]' : 0.265561}", "{'[0, 4, 3, 5, 5, 3, 0, 0, 16, 0, 15, 0, 1, 1, 0, 0, 0, 0]' : 0.257973}", "{'[0, 4, 3, 5, 5, 3, 0, 0, 16, 0, 15, 0, 1, 1, 0, 0, 0, 0]' : 0.257378}", "{'[0, 4, 3, 5, 5, 3, 0, 0, 16, 0, 15, 0, 1, 1, 0, 0, 0, 0]' : 0.254376}", "{'[0, 4, 3, 5, 5, 3, 0, 0, 16, 0, 15, 0, 1, 1, 0, 0, 0, 0]' : 0.254684}"]
returning from 'run': {'[0, 4, 3, 5, 5, 3, 0, 0, 16, 0, 15, 0, 1, 1, 0, 0, 0, 0]': ([0.255104, 0.254861, 0.255013, 0.254729, 0.254266, 0.254511, 0.253844, 0.254077, 0.25438, 0.253639, 0.254583, 0.255188, 0.255327, 0.254193, 0.253947, 0.254789, 0.253897, 0.254584, 0.254291, 0.254531, 0.254843, 0.254697, 0.255051, 0.254466, 0.268136, 0.265561, 0.257973, 0.257378, 0.254376, 0.254684], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 4, 3, 5, 5, 3, 0, 0, 16, 0, 15, 0, 1, 1, 0, 0, 0, 0]': ([0.255104, 0.254861, 0.255013, 0.254729, 0.254266, 0.254511, 0.253844, 0.254077, 0.25438, 0.253639, 0.254583, 0.255188, 0.255327, 0.254193, 0.253947, 0.254789, 0.253897, 0.254584, 0.254291, 0.254531, 0.254843, 0.254697, 0.255051, 0.254466, 0.268136, 0.265561, 0.257973, 0.257378, 0.254376, 0.254684], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	33
        Max loop nest depth: 	3
        Additions: 		2949
        Multiplications: 	1386
        Divisions: 		0
        Logical: 		0
        Reads: 			5546
        Writes: 		889
        Comparisons:		33
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest25.exe __orio_perftest25.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest25.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest25.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest25.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 527, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors, data)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 408, in dopt_anova
    budget)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 333, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 279, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest25.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 527, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors, data)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 408, in dopt_anova
    budget)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 333, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 279, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	163
        Max loop nest depth: 	5
        Additions: 		7998
        Multiplications: 	1860
        Divisions: 		0
        Logical: 		0
        Reads: 			12235
        Writes: 		1482
        Comparisons:		163
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest26.exe __orio_perftest26.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest26.exe  
Program Test Output: 
{'[3, 6, 2, 0, 6, 0, 1, 1, 9, 28, 28, 0, 0, 0, 0, 0, 1, 1]' : 0.817353}
{'[3, 6, 2, 0, 6, 0, 1, 1, 9, 28, 28, 0, 0, 0, 0, 0, 1, 1]' : 0.817138}
{'[3, 6, 2, 0, 6, 0, 1, 1, 9, 28, 28, 0, 0, 0, 0, 0, 1, 1]' : 0.817109}
{'[3, 6, 2, 0, 6, 0, 1, 1, 9, 28, 28, 0, 0, 0, 0, 0, 1, 1]' : 0.818321}
{'[3, 6, 2, 0, 6, 0, 1, 1, 9, 28, 28, 0, 0, 0, 0, 0, 1, 1]' : 0.815955}
{'[3, 6, 2, 0, 6, 0, 1, 1, 9, 28, 28, 0, 0, 0, 0, 0, 1, 1]' : 0.817111}
{'[3, 6, 2, 0, 6, 0, 1, 1, 9, 28, 28, 0, 0, 0, 0, 0, 1, 1]' : 0.815044}
{'[3, 6, 2, 0, 6, 0, 1, 1, 9, 28, 28, 0, 0, 0, 0, 0, 1, 1]' : 0.815872}
{'[3, 6, 2, 0, 6, 0, 1, 1, 9, 28, 28, 0, 0, 0, 0, 0, 1, 1]' : 0.81543}
{'[3, 6, 2, 0, 6, 0, 1, 1, 9, 28, 28, 0, 0, 0, 0, 0, 1, 1]' : 0.815908}
{'[3, 6, 2, 0, 6, 0, 1, 1, 9, 28, 28, 0, 0, 0, 0, 0, 1, 1]' : 0.817728}
{'[3, 6, 2, 0, 6, 0, 1, 1, 9, 28, 28, 0, 0, 0, 0, 0, 1, 1]' : 0.817427}
{'[3, 6, 2, 0, 6, 0, 1, 1, 9, 28, 28, 0, 0, 0, 0, 0, 1, 1]' : 0.815917}
{'[3, 6, 2, 0, 6, 0, 1, 1, 9, 28, 28, 0, 0, 0, 0, 0, 1, 1]' : 0.815957}
{'[3, 6, 2, 0, 6, 0, 1, 1, 9, 28, 28, 0, 0, 0, 0, 0, 1, 1]' : 0.815097}
{'[3, 6, 2, 0, 6, 0, 1, 1, 9, 28, 28, 0, 0, 0, 0, 0, 1, 1]' : 0.81509}
{'[3, 6, 2, 0, 6, 0, 1, 1, 9, 28, 28, 0, 0, 0, 0, 0, 1, 1]' : 0.814953}
{'[3, 6, 2, 0, 6, 0, 1, 1, 9, 28, 28, 0, 0, 0, 0, 0, 1, 1]' : 0.815665}
{'[3, 6, 2, 0, 6, 0, 1, 1, 9, 28, 28, 0, 0, 0, 0, 0, 1, 1]' : 0.814832}
{'[3, 6, 2, 0, 6, 0, 1, 1, 9, 28, 28, 0, 0, 0, 0, 0, 1, 1]' : 0.825447}
{'[3, 6, 2, 0, 6, 0, 1, 1, 9, 28, 28, 0, 0, 0, 0, 0, 1, 1]' : 0.815138}
{'[3, 6, 2, 0, 6, 0, 1, 1, 9, 28, 28, 0, 0, 0, 0, 0, 1, 1]' : 0.817425}
{'[3, 6, 2, 0, 6, 0, 1, 1, 9, 28, 28, 0, 0, 0, 0, 0, 1, 1]' : 0.816443}
{'[3, 6, 2, 0, 6, 0, 1, 1, 9, 28, 28, 0, 0, 0, 0, 0, 1, 1]' : 0.817157}
{'[3, 6, 2, 0, 6, 0, 1, 1, 9, 28, 28, 0, 0, 0, 0, 0, 1, 1]' : 0.817011}
{'[3, 6, 2, 0, 6, 0, 1, 1, 9, 28, 28, 0, 0, 0, 0, 0, 1, 1]' : 0.815609}
{'[3, 6, 2, 0, 6, 0, 1, 1, 9, 28, 28, 0, 0, 0, 0, 0, 1, 1]' : 0.815182}
{'[3, 6, 2, 0, 6, 0, 1, 1, 9, 28, 28, 0, 0, 0, 0, 0, 1, 1]' : 0.814996}
{'[3, 6, 2, 0, 6, 0, 1, 1, 9, 28, 28, 0, 0, 0, 0, 0, 1, 1]' : 0.814792}
{'[3, 6, 2, 0, 6, 0, 1, 1, 9, 28, 28, 0, 0, 0, 0, 0, 1, 1]' : 0.814603}

out:
 ["{'[3, 6, 2, 0, 6, 0, 1, 1, 9, 28, 28, 0, 0, 0, 0, 0, 1, 1]' : 0.817353}", "{'[3, 6, 2, 0, 6, 0, 1, 1, 9, 28, 28, 0, 0, 0, 0, 0, 1, 1]' : 0.817138}", "{'[3, 6, 2, 0, 6, 0, 1, 1, 9, 28, 28, 0, 0, 0, 0, 0, 1, 1]' : 0.817109}", "{'[3, 6, 2, 0, 6, 0, 1, 1, 9, 28, 28, 0, 0, 0, 0, 0, 1, 1]' : 0.818321}", "{'[3, 6, 2, 0, 6, 0, 1, 1, 9, 28, 28, 0, 0, 0, 0, 0, 1, 1]' : 0.815955}", "{'[3, 6, 2, 0, 6, 0, 1, 1, 9, 28, 28, 0, 0, 0, 0, 0, 1, 1]' : 0.817111}", "{'[3, 6, 2, 0, 6, 0, 1, 1, 9, 28, 28, 0, 0, 0, 0, 0, 1, 1]' : 0.815044}", "{'[3, 6, 2, 0, 6, 0, 1, 1, 9, 28, 28, 0, 0, 0, 0, 0, 1, 1]' : 0.815872}", "{'[3, 6, 2, 0, 6, 0, 1, 1, 9, 28, 28, 0, 0, 0, 0, 0, 1, 1]' : 0.81543}", "{'[3, 6, 2, 0, 6, 0, 1, 1, 9, 28, 28, 0, 0, 0, 0, 0, 1, 1]' : 0.815908}", "{'[3, 6, 2, 0, 6, 0, 1, 1, 9, 28, 28, 0, 0, 0, 0, 0, 1, 1]' : 0.817728}", "{'[3, 6, 2, 0, 6, 0, 1, 1, 9, 28, 28, 0, 0, 0, 0, 0, 1, 1]' : 0.817427}", "{'[3, 6, 2, 0, 6, 0, 1, 1, 9, 28, 28, 0, 0, 0, 0, 0, 1, 1]' : 0.815917}", "{'[3, 6, 2, 0, 6, 0, 1, 1, 9, 28, 28, 0, 0, 0, 0, 0, 1, 1]' : 0.815957}", "{'[3, 6, 2, 0, 6, 0, 1, 1, 9, 28, 28, 0, 0, 0, 0, 0, 1, 1]' : 0.815097}", "{'[3, 6, 2, 0, 6, 0, 1, 1, 9, 28, 28, 0, 0, 0, 0, 0, 1, 1]' : 0.81509}", "{'[3, 6, 2, 0, 6, 0, 1, 1, 9, 28, 28, 0, 0, 0, 0, 0, 1, 1]' : 0.814953}", "{'[3, 6, 2, 0, 6, 0, 1, 1, 9, 28, 28, 0, 0, 0, 0, 0, 1, 1]' : 0.815665}", "{'[3, 6, 2, 0, 6, 0, 1, 1, 9, 28, 28, 0, 0, 0, 0, 0, 1, 1]' : 0.814832}", "{'[3, 6, 2, 0, 6, 0, 1, 1, 9, 28, 28, 0, 0, 0, 0, 0, 1, 1]' : 0.825447}", "{'[3, 6, 2, 0, 6, 0, 1, 1, 9, 28, 28, 0, 0, 0, 0, 0, 1, 1]' : 0.815138}", "{'[3, 6, 2, 0, 6, 0, 1, 1, 9, 28, 28, 0, 0, 0, 0, 0, 1, 1]' : 0.817425}", "{'[3, 6, 2, 0, 6, 0, 1, 1, 9, 28, 28, 0, 0, 0, 0, 0, 1, 1]' : 0.816443}", "{'[3, 6, 2, 0, 6, 0, 1, 1, 9, 28, 28, 0, 0, 0, 0, 0, 1, 1]' : 0.817157}", "{'[3, 6, 2, 0, 6, 0, 1, 1, 9, 28, 28, 0, 0, 0, 0, 0, 1, 1]' : 0.817011}", "{'[3, 6, 2, 0, 6, 0, 1, 1, 9, 28, 28, 0, 0, 0, 0, 0, 1, 1]' : 0.815609}", "{'[3, 6, 2, 0, 6, 0, 1, 1, 9, 28, 28, 0, 0, 0, 0, 0, 1, 1]' : 0.815182}", "{'[3, 6, 2, 0, 6, 0, 1, 1, 9, 28, 28, 0, 0, 0, 0, 0, 1, 1]' : 0.814996}", "{'[3, 6, 2, 0, 6, 0, 1, 1, 9, 28, 28, 0, 0, 0, 0, 0, 1, 1]' : 0.814792}", "{'[3, 6, 2, 0, 6, 0, 1, 1, 9, 28, 28, 0, 0, 0, 0, 0, 1, 1]' : 0.814603}"]
returning from 'run': {'[3, 6, 2, 0, 6, 0, 1, 1, 9, 28, 28, 0, 0, 0, 0, 0, 1, 1]': ([0.817353, 0.817138, 0.817109, 0.818321, 0.815955, 0.817111, 0.815044, 0.815872, 0.81543, 0.815908, 0.817728, 0.817427, 0.815917, 0.815957, 0.815097, 0.81509, 0.814953, 0.815665, 0.814832, 0.825447, 0.815138, 0.817425, 0.816443, 0.817157, 0.817011, 0.815609, 0.815182, 0.814996, 0.814792, 0.814603], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 6, 2, 0, 6, 0, 1, 1, 9, 28, 28, 0, 0, 0, 0, 0, 1, 1]': ([0.817353, 0.817138, 0.817109, 0.818321, 0.815955, 0.817111, 0.815044, 0.815872, 0.81543, 0.815908, 0.817728, 0.817427, 0.815917, 0.815957, 0.815097, 0.81509, 0.814953, 0.815665, 0.814832, 0.825447, 0.815138, 0.817425, 0.816443, 0.817157, 0.817011, 0.815609, 0.815182, 0.814996, 0.814792, 0.814603], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	42
        Max loop nest depth: 	6
        Additions: 		5262
        Multiplications: 	2520
        Divisions: 		0
        Logical: 		0
        Reads: 			10050
        Writes: 		1669
        Comparisons:		42
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest27.exe __orio_perftest27.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest27.exe  
Program Test Output: 
{'[1, 5, 2, 6, 4, 1, 1, 0, 29, 11, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.389182}
{'[1, 5, 2, 6, 4, 1, 1, 0, 29, 11, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.389895}
{'[1, 5, 2, 6, 4, 1, 1, 0, 29, 11, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.388462}
{'[1, 5, 2, 6, 4, 1, 1, 0, 29, 11, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.387952}
{'[1, 5, 2, 6, 4, 1, 1, 0, 29, 11, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.387714}
{'[1, 5, 2, 6, 4, 1, 1, 0, 29, 11, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.387611}
{'[1, 5, 2, 6, 4, 1, 1, 0, 29, 11, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.389432}
{'[1, 5, 2, 6, 4, 1, 1, 0, 29, 11, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.388676}
{'[1, 5, 2, 6, 4, 1, 1, 0, 29, 11, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.388255}
{'[1, 5, 2, 6, 4, 1, 1, 0, 29, 11, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.388486}
{'[1, 5, 2, 6, 4, 1, 1, 0, 29, 11, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.387974}
{'[1, 5, 2, 6, 4, 1, 1, 0, 29, 11, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.388013}
{'[1, 5, 2, 6, 4, 1, 1, 0, 29, 11, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.388351}
{'[1, 5, 2, 6, 4, 1, 1, 0, 29, 11, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.388111}
{'[1, 5, 2, 6, 4, 1, 1, 0, 29, 11, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.389395}
{'[1, 5, 2, 6, 4, 1, 1, 0, 29, 11, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.388099}
{'[1, 5, 2, 6, 4, 1, 1, 0, 29, 11, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.388153}
{'[1, 5, 2, 6, 4, 1, 1, 0, 29, 11, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.388072}
{'[1, 5, 2, 6, 4, 1, 1, 0, 29, 11, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.390268}
{'[1, 5, 2, 6, 4, 1, 1, 0, 29, 11, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.392653}
{'[1, 5, 2, 6, 4, 1, 1, 0, 29, 11, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.388054}
{'[1, 5, 2, 6, 4, 1, 1, 0, 29, 11, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.387942}
{'[1, 5, 2, 6, 4, 1, 1, 0, 29, 11, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.390172}
{'[1, 5, 2, 6, 4, 1, 1, 0, 29, 11, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.389906}
{'[1, 5, 2, 6, 4, 1, 1, 0, 29, 11, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.388824}
{'[1, 5, 2, 6, 4, 1, 1, 0, 29, 11, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.388203}
{'[1, 5, 2, 6, 4, 1, 1, 0, 29, 11, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.392267}
{'[1, 5, 2, 6, 4, 1, 1, 0, 29, 11, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.389716}
{'[1, 5, 2, 6, 4, 1, 1, 0, 29, 11, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.388206}
{'[1, 5, 2, 6, 4, 1, 1, 0, 29, 11, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.388166}

out:
 ["{'[1, 5, 2, 6, 4, 1, 1, 0, 29, 11, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.389182}", "{'[1, 5, 2, 6, 4, 1, 1, 0, 29, 11, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.389895}", "{'[1, 5, 2, 6, 4, 1, 1, 0, 29, 11, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.388462}", "{'[1, 5, 2, 6, 4, 1, 1, 0, 29, 11, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.387952}", "{'[1, 5, 2, 6, 4, 1, 1, 0, 29, 11, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.387714}", "{'[1, 5, 2, 6, 4, 1, 1, 0, 29, 11, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.387611}", "{'[1, 5, 2, 6, 4, 1, 1, 0, 29, 11, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.389432}", "{'[1, 5, 2, 6, 4, 1, 1, 0, 29, 11, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.388676}", "{'[1, 5, 2, 6, 4, 1, 1, 0, 29, 11, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.388255}", "{'[1, 5, 2, 6, 4, 1, 1, 0, 29, 11, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.388486}", "{'[1, 5, 2, 6, 4, 1, 1, 0, 29, 11, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.387974}", "{'[1, 5, 2, 6, 4, 1, 1, 0, 29, 11, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.388013}", "{'[1, 5, 2, 6, 4, 1, 1, 0, 29, 11, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.388351}", "{'[1, 5, 2, 6, 4, 1, 1, 0, 29, 11, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.388111}", "{'[1, 5, 2, 6, 4, 1, 1, 0, 29, 11, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.389395}", "{'[1, 5, 2, 6, 4, 1, 1, 0, 29, 11, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.388099}", "{'[1, 5, 2, 6, 4, 1, 1, 0, 29, 11, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.388153}", "{'[1, 5, 2, 6, 4, 1, 1, 0, 29, 11, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.388072}", "{'[1, 5, 2, 6, 4, 1, 1, 0, 29, 11, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.390268}", "{'[1, 5, 2, 6, 4, 1, 1, 0, 29, 11, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.392653}", "{'[1, 5, 2, 6, 4, 1, 1, 0, 29, 11, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.388054}", "{'[1, 5, 2, 6, 4, 1, 1, 0, 29, 11, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.387942}", "{'[1, 5, 2, 6, 4, 1, 1, 0, 29, 11, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.390172}", "{'[1, 5, 2, 6, 4, 1, 1, 0, 29, 11, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.389906}", "{'[1, 5, 2, 6, 4, 1, 1, 0, 29, 11, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.388824}", "{'[1, 5, 2, 6, 4, 1, 1, 0, 29, 11, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.388203}", "{'[1, 5, 2, 6, 4, 1, 1, 0, 29, 11, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.392267}", "{'[1, 5, 2, 6, 4, 1, 1, 0, 29, 11, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.389716}", "{'[1, 5, 2, 6, 4, 1, 1, 0, 29, 11, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.388206}", "{'[1, 5, 2, 6, 4, 1, 1, 0, 29, 11, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.388166}"]
returning from 'run': {'[1, 5, 2, 6, 4, 1, 1, 0, 29, 11, 0, 25, 2, 0, 0, 1, 0, 1]': ([0.389182, 0.389895, 0.388462, 0.387952, 0.387714, 0.387611, 0.389432, 0.388676, 0.388255, 0.388486, 0.387974, 0.388013, 0.388351, 0.388111, 0.389395, 0.388099, 0.388153, 0.388072, 0.390268, 0.392653, 0.388054, 0.387942, 0.390172, 0.389906, 0.388824, 0.388203, 0.392267, 0.389716, 0.388206, 0.388166], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 5, 2, 6, 4, 1, 1, 0, 29, 11, 0, 25, 2, 0, 0, 1, 0, 1]': ([0.389182, 0.389895, 0.388462, 0.387952, 0.387714, 0.387611, 0.389432, 0.388676, 0.388255, 0.388486, 0.387974, 0.388013, 0.388351, 0.388111, 0.389395, 0.388099, 0.388153, 0.388072, 0.390268, 0.392653, 0.388054, 0.387942, 0.390172, 0.389906, 0.388824, 0.388203, 0.392267, 0.389716, 0.388206, 0.388166], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	113
        Max loop nest depth: 	6
        Additions: 		6820
        Multiplications: 	1664
        Divisions: 		0
        Logical: 		0
        Reads: 			10478
        Writes: 		1195
        Comparisons:		113
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest28.exe __orio_perftest28.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest28.exe  
Program Test Output: 
{'[6, 2, 0, 6, 1, 4, 1, 1, 0, 16, 29, 0, 1, 0, 0, 0, 0, 1]' : 0.345009}
{'[6, 2, 0, 6, 1, 4, 1, 1, 0, 16, 29, 0, 1, 0, 0, 0, 0, 1]' : 0.355147}
{'[6, 2, 0, 6, 1, 4, 1, 1, 0, 16, 29, 0, 1, 0, 0, 0, 0, 1]' : 0.348072}
{'[6, 2, 0, 6, 1, 4, 1, 1, 0, 16, 29, 0, 1, 0, 0, 0, 0, 1]' : 0.345217}
{'[6, 2, 0, 6, 1, 4, 1, 1, 0, 16, 29, 0, 1, 0, 0, 0, 0, 1]' : 0.344789}
{'[6, 2, 0, 6, 1, 4, 1, 1, 0, 16, 29, 0, 1, 0, 0, 0, 0, 1]' : 0.348948}
{'[6, 2, 0, 6, 1, 4, 1, 1, 0, 16, 29, 0, 1, 0, 0, 0, 0, 1]' : 0.344123}
{'[6, 2, 0, 6, 1, 4, 1, 1, 0, 16, 29, 0, 1, 0, 0, 0, 0, 1]' : 0.343664}
{'[6, 2, 0, 6, 1, 4, 1, 1, 0, 16, 29, 0, 1, 0, 0, 0, 0, 1]' : 0.348979}
{'[6, 2, 0, 6, 1, 4, 1, 1, 0, 16, 29, 0, 1, 0, 0, 0, 0, 1]' : 0.343966}
{'[6, 2, 0, 6, 1, 4, 1, 1, 0, 16, 29, 0, 1, 0, 0, 0, 0, 1]' : 0.344203}
{'[6, 2, 0, 6, 1, 4, 1, 1, 0, 16, 29, 0, 1, 0, 0, 0, 0, 1]' : 0.347724}
{'[6, 2, 0, 6, 1, 4, 1, 1, 0, 16, 29, 0, 1, 0, 0, 0, 0, 1]' : 0.349177}
{'[6, 2, 0, 6, 1, 4, 1, 1, 0, 16, 29, 0, 1, 0, 0, 0, 0, 1]' : 0.343369}
{'[6, 2, 0, 6, 1, 4, 1, 1, 0, 16, 29, 0, 1, 0, 0, 0, 0, 1]' : 0.350525}
{'[6, 2, 0, 6, 1, 4, 1, 1, 0, 16, 29, 0, 1, 0, 0, 0, 0, 1]' : 0.343842}
{'[6, 2, 0, 6, 1, 4, 1, 1, 0, 16, 29, 0, 1, 0, 0, 0, 0, 1]' : 0.344229}
{'[6, 2, 0, 6, 1, 4, 1, 1, 0, 16, 29, 0, 1, 0, 0, 0, 0, 1]' : 0.348159}
{'[6, 2, 0, 6, 1, 4, 1, 1, 0, 16, 29, 0, 1, 0, 0, 0, 0, 1]' : 0.344632}
{'[6, 2, 0, 6, 1, 4, 1, 1, 0, 16, 29, 0, 1, 0, 0, 0, 0, 1]' : 0.346463}
{'[6, 2, 0, 6, 1, 4, 1, 1, 0, 16, 29, 0, 1, 0, 0, 0, 0, 1]' : 0.347278}
{'[6, 2, 0, 6, 1, 4, 1, 1, 0, 16, 29, 0, 1, 0, 0, 0, 0, 1]' : 0.345497}
{'[6, 2, 0, 6, 1, 4, 1, 1, 0, 16, 29, 0, 1, 0, 0, 0, 0, 1]' : 0.3482}
{'[6, 2, 0, 6, 1, 4, 1, 1, 0, 16, 29, 0, 1, 0, 0, 0, 0, 1]' : 0.344045}
{'[6, 2, 0, 6, 1, 4, 1, 1, 0, 16, 29, 0, 1, 0, 0, 0, 0, 1]' : 0.344336}
{'[6, 2, 0, 6, 1, 4, 1, 1, 0, 16, 29, 0, 1, 0, 0, 0, 0, 1]' : 0.348917}
{'[6, 2, 0, 6, 1, 4, 1, 1, 0, 16, 29, 0, 1, 0, 0, 0, 0, 1]' : 0.343485}
{'[6, 2, 0, 6, 1, 4, 1, 1, 0, 16, 29, 0, 1, 0, 0, 0, 0, 1]' : 0.346224}
{'[6, 2, 0, 6, 1, 4, 1, 1, 0, 16, 29, 0, 1, 0, 0, 0, 0, 1]' : 0.348579}
{'[6, 2, 0, 6, 1, 4, 1, 1, 0, 16, 29, 0, 1, 0, 0, 0, 0, 1]' : 0.34418}

out:
 ["{'[6, 2, 0, 6, 1, 4, 1, 1, 0, 16, 29, 0, 1, 0, 0, 0, 0, 1]' : 0.345009}", "{'[6, 2, 0, 6, 1, 4, 1, 1, 0, 16, 29, 0, 1, 0, 0, 0, 0, 1]' : 0.355147}", "{'[6, 2, 0, 6, 1, 4, 1, 1, 0, 16, 29, 0, 1, 0, 0, 0, 0, 1]' : 0.348072}", "{'[6, 2, 0, 6, 1, 4, 1, 1, 0, 16, 29, 0, 1, 0, 0, 0, 0, 1]' : 0.345217}", "{'[6, 2, 0, 6, 1, 4, 1, 1, 0, 16, 29, 0, 1, 0, 0, 0, 0, 1]' : 0.344789}", "{'[6, 2, 0, 6, 1, 4, 1, 1, 0, 16, 29, 0, 1, 0, 0, 0, 0, 1]' : 0.348948}", "{'[6, 2, 0, 6, 1, 4, 1, 1, 0, 16, 29, 0, 1, 0, 0, 0, 0, 1]' : 0.344123}", "{'[6, 2, 0, 6, 1, 4, 1, 1, 0, 16, 29, 0, 1, 0, 0, 0, 0, 1]' : 0.343664}", "{'[6, 2, 0, 6, 1, 4, 1, 1, 0, 16, 29, 0, 1, 0, 0, 0, 0, 1]' : 0.348979}", "{'[6, 2, 0, 6, 1, 4, 1, 1, 0, 16, 29, 0, 1, 0, 0, 0, 0, 1]' : 0.343966}", "{'[6, 2, 0, 6, 1, 4, 1, 1, 0, 16, 29, 0, 1, 0, 0, 0, 0, 1]' : 0.344203}", "{'[6, 2, 0, 6, 1, 4, 1, 1, 0, 16, 29, 0, 1, 0, 0, 0, 0, 1]' : 0.347724}", "{'[6, 2, 0, 6, 1, 4, 1, 1, 0, 16, 29, 0, 1, 0, 0, 0, 0, 1]' : 0.349177}", "{'[6, 2, 0, 6, 1, 4, 1, 1, 0, 16, 29, 0, 1, 0, 0, 0, 0, 1]' : 0.343369}", "{'[6, 2, 0, 6, 1, 4, 1, 1, 0, 16, 29, 0, 1, 0, 0, 0, 0, 1]' : 0.350525}", "{'[6, 2, 0, 6, 1, 4, 1, 1, 0, 16, 29, 0, 1, 0, 0, 0, 0, 1]' : 0.343842}", "{'[6, 2, 0, 6, 1, 4, 1, 1, 0, 16, 29, 0, 1, 0, 0, 0, 0, 1]' : 0.344229}", "{'[6, 2, 0, 6, 1, 4, 1, 1, 0, 16, 29, 0, 1, 0, 0, 0, 0, 1]' : 0.348159}", "{'[6, 2, 0, 6, 1, 4, 1, 1, 0, 16, 29, 0, 1, 0, 0, 0, 0, 1]' : 0.344632}", "{'[6, 2, 0, 6, 1, 4, 1, 1, 0, 16, 29, 0, 1, 0, 0, 0, 0, 1]' : 0.346463}", "{'[6, 2, 0, 6, 1, 4, 1, 1, 0, 16, 29, 0, 1, 0, 0, 0, 0, 1]' : 0.347278}", "{'[6, 2, 0, 6, 1, 4, 1, 1, 0, 16, 29, 0, 1, 0, 0, 0, 0, 1]' : 0.345497}", "{'[6, 2, 0, 6, 1, 4, 1, 1, 0, 16, 29, 0, 1, 0, 0, 0, 0, 1]' : 0.3482}", "{'[6, 2, 0, 6, 1, 4, 1, 1, 0, 16, 29, 0, 1, 0, 0, 0, 0, 1]' : 0.344045}", "{'[6, 2, 0, 6, 1, 4, 1, 1, 0, 16, 29, 0, 1, 0, 0, 0, 0, 1]' : 0.344336}", "{'[6, 2, 0, 6, 1, 4, 1, 1, 0, 16, 29, 0, 1, 0, 0, 0, 0, 1]' : 0.348917}", "{'[6, 2, 0, 6, 1, 4, 1, 1, 0, 16, 29, 0, 1, 0, 0, 0, 0, 1]' : 0.343485}", "{'[6, 2, 0, 6, 1, 4, 1, 1, 0, 16, 29, 0, 1, 0, 0, 0, 0, 1]' : 0.346224}", "{'[6, 2, 0, 6, 1, 4, 1, 1, 0, 16, 29, 0, 1, 0, 0, 0, 0, 1]' : 0.348579}", "{'[6, 2, 0, 6, 1, 4, 1, 1, 0, 16, 29, 0, 1, 0, 0, 0, 0, 1]' : 0.34418}"]
returning from 'run': {'[6, 2, 0, 6, 1, 4, 1, 1, 0, 16, 29, 0, 1, 0, 0, 0, 0, 1]': ([0.345009, 0.355147, 0.348072, 0.345217, 0.344789, 0.348948, 0.344123, 0.343664, 0.348979, 0.343966, 0.344203, 0.347724, 0.349177, 0.343369, 0.350525, 0.343842, 0.344229, 0.348159, 0.344632, 0.346463, 0.347278, 0.345497, 0.3482, 0.344045, 0.344336, 0.348917, 0.343485, 0.346224, 0.348579, 0.34418], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 2, 0, 6, 1, 4, 1, 1, 0, 16, 29, 0, 1, 0, 0, 0, 0, 1]': ([0.345009, 0.355147, 0.348072, 0.345217, 0.344789, 0.348948, 0.344123, 0.343664, 0.348979, 0.343966, 0.344203, 0.347724, 0.349177, 0.343369, 0.350525, 0.343842, 0.344229, 0.348159, 0.344632, 0.346463, 0.347278, 0.345497, 0.3482, 0.344045, 0.344336, 0.348917, 0.343485, 0.346224, 0.348579, 0.34418], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	53
        Max loop nest depth: 	5
        Additions: 		4752
        Multiplications: 	1380
        Divisions: 		0
        Logical: 		0
        Reads: 			7395
        Writes: 		832
        Comparisons:		53
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest29.exe __orio_perftest29.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest29.exe  
Program Test Output: 
{'[1, 0, 6, 0, 3, 6, 0, 0, 18, 13, 0, 19, 1, 0, 1, 0, 0, 0]' : 0.332671}
{'[1, 0, 6, 0, 3, 6, 0, 0, 18, 13, 0, 19, 1, 0, 1, 0, 0, 0]' : 0.332999}
{'[1, 0, 6, 0, 3, 6, 0, 0, 18, 13, 0, 19, 1, 0, 1, 0, 0, 0]' : 0.33273}
{'[1, 0, 6, 0, 3, 6, 0, 0, 18, 13, 0, 19, 1, 0, 1, 0, 0, 0]' : 0.33253}
{'[1, 0, 6, 0, 3, 6, 0, 0, 18, 13, 0, 19, 1, 0, 1, 0, 0, 0]' : 0.332951}
{'[1, 0, 6, 0, 3, 6, 0, 0, 18, 13, 0, 19, 1, 0, 1, 0, 0, 0]' : 0.333008}
{'[1, 0, 6, 0, 3, 6, 0, 0, 18, 13, 0, 19, 1, 0, 1, 0, 0, 0]' : 0.332918}
{'[1, 0, 6, 0, 3, 6, 0, 0, 18, 13, 0, 19, 1, 0, 1, 0, 0, 0]' : 0.332385}
{'[1, 0, 6, 0, 3, 6, 0, 0, 18, 13, 0, 19, 1, 0, 1, 0, 0, 0]' : 0.334862}
{'[1, 0, 6, 0, 3, 6, 0, 0, 18, 13, 0, 19, 1, 0, 1, 0, 0, 0]' : 0.333316}
{'[1, 0, 6, 0, 3, 6, 0, 0, 18, 13, 0, 19, 1, 0, 1, 0, 0, 0]' : 0.33254}
{'[1, 0, 6, 0, 3, 6, 0, 0, 18, 13, 0, 19, 1, 0, 1, 0, 0, 0]' : 0.332136}
{'[1, 0, 6, 0, 3, 6, 0, 0, 18, 13, 0, 19, 1, 0, 1, 0, 0, 0]' : 0.331904}
{'[1, 0, 6, 0, 3, 6, 0, 0, 18, 13, 0, 19, 1, 0, 1, 0, 0, 0]' : 0.332881}
{'[1, 0, 6, 0, 3, 6, 0, 0, 18, 13, 0, 19, 1, 0, 1, 0, 0, 0]' : 0.333845}
{'[1, 0, 6, 0, 3, 6, 0, 0, 18, 13, 0, 19, 1, 0, 1, 0, 0, 0]' : 0.332264}
{'[1, 0, 6, 0, 3, 6, 0, 0, 18, 13, 0, 19, 1, 0, 1, 0, 0, 0]' : 0.332613}
{'[1, 0, 6, 0, 3, 6, 0, 0, 18, 13, 0, 19, 1, 0, 1, 0, 0, 0]' : 0.333024}
{'[1, 0, 6, 0, 3, 6, 0, 0, 18, 13, 0, 19, 1, 0, 1, 0, 0, 0]' : 0.332552}
{'[1, 0, 6, 0, 3, 6, 0, 0, 18, 13, 0, 19, 1, 0, 1, 0, 0, 0]' : 0.332144}
{'[1, 0, 6, 0, 3, 6, 0, 0, 18, 13, 0, 19, 1, 0, 1, 0, 0, 0]' : 0.348058}
{'[1, 0, 6, 0, 3, 6, 0, 0, 18, 13, 0, 19, 1, 0, 1, 0, 0, 0]' : 0.365899}
{'[1, 0, 6, 0, 3, 6, 0, 0, 18, 13, 0, 19, 1, 0, 1, 0, 0, 0]' : 0.369985}
{'[1, 0, 6, 0, 3, 6, 0, 0, 18, 13, 0, 19, 1, 0, 1, 0, 0, 0]' : 0.364727}
{'[1, 0, 6, 0, 3, 6, 0, 0, 18, 13, 0, 19, 1, 0, 1, 0, 0, 0]' : 0.364188}
{'[1, 0, 6, 0, 3, 6, 0, 0, 18, 13, 0, 19, 1, 0, 1, 0, 0, 0]' : 0.366105}
{'[1, 0, 6, 0, 3, 6, 0, 0, 18, 13, 0, 19, 1, 0, 1, 0, 0, 0]' : 0.366055}
{'[1, 0, 6, 0, 3, 6, 0, 0, 18, 13, 0, 19, 1, 0, 1, 0, 0, 0]' : 0.364604}
{'[1, 0, 6, 0, 3, 6, 0, 0, 18, 13, 0, 19, 1, 0, 1, 0, 0, 0]' : 0.366718}
{'[1, 0, 6, 0, 3, 6, 0, 0, 18, 13, 0, 19, 1, 0, 1, 0, 0, 0]' : 0.365978}

out:
 ["{'[1, 0, 6, 0, 3, 6, 0, 0, 18, 13, 0, 19, 1, 0, 1, 0, 0, 0]' : 0.332671}", "{'[1, 0, 6, 0, 3, 6, 0, 0, 18, 13, 0, 19, 1, 0, 1, 0, 0, 0]' : 0.332999}", "{'[1, 0, 6, 0, 3, 6, 0, 0, 18, 13, 0, 19, 1, 0, 1, 0, 0, 0]' : 0.33273}", "{'[1, 0, 6, 0, 3, 6, 0, 0, 18, 13, 0, 19, 1, 0, 1, 0, 0, 0]' : 0.33253}", "{'[1, 0, 6, 0, 3, 6, 0, 0, 18, 13, 0, 19, 1, 0, 1, 0, 0, 0]' : 0.332951}", "{'[1, 0, 6, 0, 3, 6, 0, 0, 18, 13, 0, 19, 1, 0, 1, 0, 0, 0]' : 0.333008}", "{'[1, 0, 6, 0, 3, 6, 0, 0, 18, 13, 0, 19, 1, 0, 1, 0, 0, 0]' : 0.332918}", "{'[1, 0, 6, 0, 3, 6, 0, 0, 18, 13, 0, 19, 1, 0, 1, 0, 0, 0]' : 0.332385}", "{'[1, 0, 6, 0, 3, 6, 0, 0, 18, 13, 0, 19, 1, 0, 1, 0, 0, 0]' : 0.334862}", "{'[1, 0, 6, 0, 3, 6, 0, 0, 18, 13, 0, 19, 1, 0, 1, 0, 0, 0]' : 0.333316}", "{'[1, 0, 6, 0, 3, 6, 0, 0, 18, 13, 0, 19, 1, 0, 1, 0, 0, 0]' : 0.33254}", "{'[1, 0, 6, 0, 3, 6, 0, 0, 18, 13, 0, 19, 1, 0, 1, 0, 0, 0]' : 0.332136}", "{'[1, 0, 6, 0, 3, 6, 0, 0, 18, 13, 0, 19, 1, 0, 1, 0, 0, 0]' : 0.331904}", "{'[1, 0, 6, 0, 3, 6, 0, 0, 18, 13, 0, 19, 1, 0, 1, 0, 0, 0]' : 0.332881}", "{'[1, 0, 6, 0, 3, 6, 0, 0, 18, 13, 0, 19, 1, 0, 1, 0, 0, 0]' : 0.333845}", "{'[1, 0, 6, 0, 3, 6, 0, 0, 18, 13, 0, 19, 1, 0, 1, 0, 0, 0]' : 0.332264}", "{'[1, 0, 6, 0, 3, 6, 0, 0, 18, 13, 0, 19, 1, 0, 1, 0, 0, 0]' : 0.332613}", "{'[1, 0, 6, 0, 3, 6, 0, 0, 18, 13, 0, 19, 1, 0, 1, 0, 0, 0]' : 0.333024}", "{'[1, 0, 6, 0, 3, 6, 0, 0, 18, 13, 0, 19, 1, 0, 1, 0, 0, 0]' : 0.332552}", "{'[1, 0, 6, 0, 3, 6, 0, 0, 18, 13, 0, 19, 1, 0, 1, 0, 0, 0]' : 0.332144}", "{'[1, 0, 6, 0, 3, 6, 0, 0, 18, 13, 0, 19, 1, 0, 1, 0, 0, 0]' : 0.348058}", "{'[1, 0, 6, 0, 3, 6, 0, 0, 18, 13, 0, 19, 1, 0, 1, 0, 0, 0]' : 0.365899}", "{'[1, 0, 6, 0, 3, 6, 0, 0, 18, 13, 0, 19, 1, 0, 1, 0, 0, 0]' : 0.369985}", "{'[1, 0, 6, 0, 3, 6, 0, 0, 18, 13, 0, 19, 1, 0, 1, 0, 0, 0]' : 0.364727}", "{'[1, 0, 6, 0, 3, 6, 0, 0, 18, 13, 0, 19, 1, 0, 1, 0, 0, 0]' : 0.364188}", "{'[1, 0, 6, 0, 3, 6, 0, 0, 18, 13, 0, 19, 1, 0, 1, 0, 0, 0]' : 0.366105}", "{'[1, 0, 6, 0, 3, 6, 0, 0, 18, 13, 0, 19, 1, 0, 1, 0, 0, 0]' : 0.366055}", "{'[1, 0, 6, 0, 3, 6, 0, 0, 18, 13, 0, 19, 1, 0, 1, 0, 0, 0]' : 0.364604}", "{'[1, 0, 6, 0, 3, 6, 0, 0, 18, 13, 0, 19, 1, 0, 1, 0, 0, 0]' : 0.366718}", "{'[1, 0, 6, 0, 3, 6, 0, 0, 18, 13, 0, 19, 1, 0, 1, 0, 0, 0]' : 0.365978}"]
returning from 'run': {'[1, 0, 6, 0, 3, 6, 0, 0, 18, 13, 0, 19, 1, 0, 1, 0, 0, 0]': ([0.332671, 0.332999, 0.33273, 0.33253, 0.332951, 0.333008, 0.332918, 0.332385, 0.334862, 0.333316, 0.33254, 0.332136, 0.331904, 0.332881, 0.333845, 0.332264, 0.332613, 0.333024, 0.332552, 0.332144, 0.348058, 0.365899, 0.369985, 0.364727, 0.364188, 0.366105, 0.366055, 0.364604, 0.366718, 0.365978], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 6, 0, 3, 6, 0, 0, 18, 13, 0, 19, 1, 0, 1, 0, 0, 0]': ([0.332671, 0.332999, 0.33273, 0.33253, 0.332951, 0.333008, 0.332918, 0.332385, 0.334862, 0.333316, 0.33254, 0.332136, 0.331904, 0.332881, 0.333845, 0.332264, 0.332613, 0.333024, 0.332552, 0.332144, 0.348058, 0.365899, 0.369985, 0.364727, 0.364188, 0.366105, 0.366055, 0.364604, 0.366718, 0.365978], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	30
        Max loop nest depth: 	6
        Additions: 		1002
        Multiplications: 	442
        Divisions: 		0
        Logical: 		0
        Reads: 			2065
        Writes: 		379
        Comparisons:		30
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest30.exe __orio_perftest30.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest30.exe  
Program Test Output: 
{'[1, 6, 3, 3, 4, 2, 1, 0, 0, 11, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.454071}
{'[1, 6, 3, 3, 4, 2, 1, 0, 0, 11, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.453409}
{'[1, 6, 3, 3, 4, 2, 1, 0, 0, 11, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.455679}
{'[1, 6, 3, 3, 4, 2, 1, 0, 0, 11, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.462705}
{'[1, 6, 3, 3, 4, 2, 1, 0, 0, 11, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.45557}
{'[1, 6, 3, 3, 4, 2, 1, 0, 0, 11, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.462389}
{'[1, 6, 3, 3, 4, 2, 1, 0, 0, 11, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.45414}
{'[1, 6, 3, 3, 4, 2, 1, 0, 0, 11, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.455252}
{'[1, 6, 3, 3, 4, 2, 1, 0, 0, 11, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.453062}
{'[1, 6, 3, 3, 4, 2, 1, 0, 0, 11, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.454663}
{'[1, 6, 3, 3, 4, 2, 1, 0, 0, 11, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.453279}
{'[1, 6, 3, 3, 4, 2, 1, 0, 0, 11, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.457412}
{'[1, 6, 3, 3, 4, 2, 1, 0, 0, 11, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.455935}
{'[1, 6, 3, 3, 4, 2, 1, 0, 0, 11, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.454263}
{'[1, 6, 3, 3, 4, 2, 1, 0, 0, 11, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.455093}
{'[1, 6, 3, 3, 4, 2, 1, 0, 0, 11, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.45298}
{'[1, 6, 3, 3, 4, 2, 1, 0, 0, 11, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.460087}
{'[1, 6, 3, 3, 4, 2, 1, 0, 0, 11, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.465954}
{'[1, 6, 3, 3, 4, 2, 1, 0, 0, 11, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.467198}
{'[1, 6, 3, 3, 4, 2, 1, 0, 0, 11, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.466979}
{'[1, 6, 3, 3, 4, 2, 1, 0, 0, 11, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.464183}
{'[1, 6, 3, 3, 4, 2, 1, 0, 0, 11, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.455523}
{'[1, 6, 3, 3, 4, 2, 1, 0, 0, 11, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.461953}
{'[1, 6, 3, 3, 4, 2, 1, 0, 0, 11, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.453918}
{'[1, 6, 3, 3, 4, 2, 1, 0, 0, 11, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.453986}
{'[1, 6, 3, 3, 4, 2, 1, 0, 0, 11, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.45341}
{'[1, 6, 3, 3, 4, 2, 1, 0, 0, 11, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.454873}
{'[1, 6, 3, 3, 4, 2, 1, 0, 0, 11, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.461004}
{'[1, 6, 3, 3, 4, 2, 1, 0, 0, 11, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.453451}
{'[1, 6, 3, 3, 4, 2, 1, 0, 0, 11, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.455822}

out:
 ["{'[1, 6, 3, 3, 4, 2, 1, 0, 0, 11, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.454071}", "{'[1, 6, 3, 3, 4, 2, 1, 0, 0, 11, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.453409}", "{'[1, 6, 3, 3, 4, 2, 1, 0, 0, 11, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.455679}", "{'[1, 6, 3, 3, 4, 2, 1, 0, 0, 11, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.462705}", "{'[1, 6, 3, 3, 4, 2, 1, 0, 0, 11, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.45557}", "{'[1, 6, 3, 3, 4, 2, 1, 0, 0, 11, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.462389}", "{'[1, 6, 3, 3, 4, 2, 1, 0, 0, 11, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.45414}", "{'[1, 6, 3, 3, 4, 2, 1, 0, 0, 11, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.455252}", "{'[1, 6, 3, 3, 4, 2, 1, 0, 0, 11, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.453062}", "{'[1, 6, 3, 3, 4, 2, 1, 0, 0, 11, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.454663}", "{'[1, 6, 3, 3, 4, 2, 1, 0, 0, 11, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.453279}", "{'[1, 6, 3, 3, 4, 2, 1, 0, 0, 11, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.457412}", "{'[1, 6, 3, 3, 4, 2, 1, 0, 0, 11, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.455935}", "{'[1, 6, 3, 3, 4, 2, 1, 0, 0, 11, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.454263}", "{'[1, 6, 3, 3, 4, 2, 1, 0, 0, 11, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.455093}", "{'[1, 6, 3, 3, 4, 2, 1, 0, 0, 11, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.45298}", "{'[1, 6, 3, 3, 4, 2, 1, 0, 0, 11, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.460087}", "{'[1, 6, 3, 3, 4, 2, 1, 0, 0, 11, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.465954}", "{'[1, 6, 3, 3, 4, 2, 1, 0, 0, 11, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.467198}", "{'[1, 6, 3, 3, 4, 2, 1, 0, 0, 11, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.466979}", "{'[1, 6, 3, 3, 4, 2, 1, 0, 0, 11, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.464183}", "{'[1, 6, 3, 3, 4, 2, 1, 0, 0, 11, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.455523}", "{'[1, 6, 3, 3, 4, 2, 1, 0, 0, 11, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.461953}", "{'[1, 6, 3, 3, 4, 2, 1, 0, 0, 11, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.453918}", "{'[1, 6, 3, 3, 4, 2, 1, 0, 0, 11, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.453986}", "{'[1, 6, 3, 3, 4, 2, 1, 0, 0, 11, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.45341}", "{'[1, 6, 3, 3, 4, 2, 1, 0, 0, 11, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.454873}", "{'[1, 6, 3, 3, 4, 2, 1, 0, 0, 11, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.461004}", "{'[1, 6, 3, 3, 4, 2, 1, 0, 0, 11, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.453451}", "{'[1, 6, 3, 3, 4, 2, 1, 0, 0, 11, 15, 0, 0, 1, 1, 1, 1, 0]' : 0.455822}"]
returning from 'run': {'[1, 6, 3, 3, 4, 2, 1, 0, 0, 11, 15, 0, 0, 1, 1, 1, 1, 0]': ([0.454071, 0.453409, 0.455679, 0.462705, 0.45557, 0.462389, 0.45414, 0.455252, 0.453062, 0.454663, 0.453279, 0.457412, 0.455935, 0.454263, 0.455093, 0.45298, 0.460087, 0.465954, 0.467198, 0.466979, 0.464183, 0.455523, 0.461953, 0.453918, 0.453986, 0.45341, 0.454873, 0.461004, 0.453451, 0.455822], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 6, 3, 3, 4, 2, 1, 0, 0, 11, 15, 0, 0, 1, 1, 1, 1, 0]': ([0.454071, 0.453409, 0.455679, 0.462705, 0.45557, 0.462389, 0.45414, 0.455252, 0.453062, 0.454663, 0.453279, 0.457412, 0.455935, 0.454263, 0.455093, 0.45298, 0.460087, 0.465954, 0.467198, 0.466979, 0.464183, 0.455523, 0.461953, 0.453918, 0.453986, 0.45341, 0.454873, 0.461004, 0.453451, 0.455822], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	78
        Max loop nest depth: 	4
        Additions: 		4006
        Multiplications: 	1110
        Divisions: 		0
        Logical: 		0
        Reads: 			6500
        Writes: 		859
        Comparisons:		78
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest31.exe __orio_perftest31.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest31.exe  
Program Test Output: 
{'[1, 3, 2, 0, 0, 0, 0, 0, 17, 27, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.295037}
{'[1, 3, 2, 0, 0, 0, 0, 0, 17, 27, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.295278}
{'[1, 3, 2, 0, 0, 0, 0, 0, 17, 27, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.296256}
{'[1, 3, 2, 0, 0, 0, 0, 0, 17, 27, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.293914}
{'[1, 3, 2, 0, 0, 0, 0, 0, 17, 27, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.294402}
{'[1, 3, 2, 0, 0, 0, 0, 0, 17, 27, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.295201}
{'[1, 3, 2, 0, 0, 0, 0, 0, 17, 27, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.293765}
{'[1, 3, 2, 0, 0, 0, 0, 0, 17, 27, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.29921}
{'[1, 3, 2, 0, 0, 0, 0, 0, 17, 27, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.294322}
{'[1, 3, 2, 0, 0, 0, 0, 0, 17, 27, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.294207}
{'[1, 3, 2, 0, 0, 0, 0, 0, 17, 27, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.295231}
{'[1, 3, 2, 0, 0, 0, 0, 0, 17, 27, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.294737}
{'[1, 3, 2, 0, 0, 0, 0, 0, 17, 27, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.298213}
{'[1, 3, 2, 0, 0, 0, 0, 0, 17, 27, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.305164}
{'[1, 3, 2, 0, 0, 0, 0, 0, 17, 27, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.304315}
{'[1, 3, 2, 0, 0, 0, 0, 0, 17, 27, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.305119}
{'[1, 3, 2, 0, 0, 0, 0, 0, 17, 27, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.304417}
{'[1, 3, 2, 0, 0, 0, 0, 0, 17, 27, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.296705}
{'[1, 3, 2, 0, 0, 0, 0, 0, 17, 27, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.302498}
{'[1, 3, 2, 0, 0, 0, 0, 0, 17, 27, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.294482}
{'[1, 3, 2, 0, 0, 0, 0, 0, 17, 27, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.294671}
{'[1, 3, 2, 0, 0, 0, 0, 0, 17, 27, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.295114}
{'[1, 3, 2, 0, 0, 0, 0, 0, 17, 27, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.295925}
{'[1, 3, 2, 0, 0, 0, 0, 0, 17, 27, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.296469}
{'[1, 3, 2, 0, 0, 0, 0, 0, 17, 27, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.294349}
{'[1, 3, 2, 0, 0, 0, 0, 0, 17, 27, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.295212}
{'[1, 3, 2, 0, 0, 0, 0, 0, 17, 27, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.293513}
{'[1, 3, 2, 0, 0, 0, 0, 0, 17, 27, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.293342}
{'[1, 3, 2, 0, 0, 0, 0, 0, 17, 27, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.29943}
{'[1, 3, 2, 0, 0, 0, 0, 0, 17, 27, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.29801}

out:
 ["{'[1, 3, 2, 0, 0, 0, 0, 0, 17, 27, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.295037}", "{'[1, 3, 2, 0, 0, 0, 0, 0, 17, 27, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.295278}", "{'[1, 3, 2, 0, 0, 0, 0, 0, 17, 27, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.296256}", "{'[1, 3, 2, 0, 0, 0, 0, 0, 17, 27, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.293914}", "{'[1, 3, 2, 0, 0, 0, 0, 0, 17, 27, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.294402}", "{'[1, 3, 2, 0, 0, 0, 0, 0, 17, 27, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.295201}", "{'[1, 3, 2, 0, 0, 0, 0, 0, 17, 27, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.293765}", "{'[1, 3, 2, 0, 0, 0, 0, 0, 17, 27, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.29921}", "{'[1, 3, 2, 0, 0, 0, 0, 0, 17, 27, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.294322}", "{'[1, 3, 2, 0, 0, 0, 0, 0, 17, 27, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.294207}", "{'[1, 3, 2, 0, 0, 0, 0, 0, 17, 27, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.295231}", "{'[1, 3, 2, 0, 0, 0, 0, 0, 17, 27, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.294737}", "{'[1, 3, 2, 0, 0, 0, 0, 0, 17, 27, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.298213}", "{'[1, 3, 2, 0, 0, 0, 0, 0, 17, 27, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.305164}", "{'[1, 3, 2, 0, 0, 0, 0, 0, 17, 27, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.304315}", "{'[1, 3, 2, 0, 0, 0, 0, 0, 17, 27, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.305119}", "{'[1, 3, 2, 0, 0, 0, 0, 0, 17, 27, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.304417}", "{'[1, 3, 2, 0, 0, 0, 0, 0, 17, 27, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.296705}", "{'[1, 3, 2, 0, 0, 0, 0, 0, 17, 27, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.302498}", "{'[1, 3, 2, 0, 0, 0, 0, 0, 17, 27, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.294482}", "{'[1, 3, 2, 0, 0, 0, 0, 0, 17, 27, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.294671}", "{'[1, 3, 2, 0, 0, 0, 0, 0, 17, 27, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.295114}", "{'[1, 3, 2, 0, 0, 0, 0, 0, 17, 27, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.295925}", "{'[1, 3, 2, 0, 0, 0, 0, 0, 17, 27, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.296469}", "{'[1, 3, 2, 0, 0, 0, 0, 0, 17, 27, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.294349}", "{'[1, 3, 2, 0, 0, 0, 0, 0, 17, 27, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.295212}", "{'[1, 3, 2, 0, 0, 0, 0, 0, 17, 27, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.293513}", "{'[1, 3, 2, 0, 0, 0, 0, 0, 17, 27, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.293342}", "{'[1, 3, 2, 0, 0, 0, 0, 0, 17, 27, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.29943}", "{'[1, 3, 2, 0, 0, 0, 0, 0, 17, 27, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.29801}"]
returning from 'run': {'[1, 3, 2, 0, 0, 0, 0, 0, 17, 27, 4, 0, 1, 1, 0, 0, 1, 1]': ([0.295037, 0.295278, 0.296256, 0.293914, 0.294402, 0.295201, 0.293765, 0.29921, 0.294322, 0.294207, 0.295231, 0.294737, 0.298213, 0.305164, 0.304315, 0.305119, 0.304417, 0.296705, 0.302498, 0.294482, 0.294671, 0.295114, 0.295925, 0.296469, 0.294349, 0.295212, 0.293513, 0.293342, 0.29943, 0.29801], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 3, 2, 0, 0, 0, 0, 0, 17, 27, 4, 0, 1, 1, 0, 0, 1, 1]': ([0.295037, 0.295278, 0.296256, 0.293914, 0.294402, 0.295201, 0.293765, 0.29921, 0.294322, 0.294207, 0.295231, 0.294737, 0.298213, 0.305164, 0.304315, 0.305119, 0.304417, 0.296705, 0.302498, 0.294482, 0.294671, 0.295114, 0.295925, 0.296469, 0.294349, 0.295212, 0.293513, 0.293342, 0.29943, 0.29801], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	6
        Additions: 		259
        Multiplications: 	76
        Divisions: 		0
        Logical: 		0
        Reads: 			572
        Writes: 		99
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest32.exe __orio_perftest32.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest32.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest32.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest32.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 527, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors, data)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 408, in dopt_anova
    budget)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 333, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 279, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest32.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 527, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors, data)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 408, in dopt_anova
    budget)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 333, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 279, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	6
        Additions: 		1613
        Multiplications: 	496
        Divisions: 		0
        Logical: 		0
        Reads: 			2676
        Writes: 		316
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest33.exe __orio_perftest33.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest33.exe  
Program Test Output: 
{'[3, 0, 5, 6, 2, 4, 0, 0, 5, 6, 0, 20, 0, 1, 0, 0, 1, 1]' : 0.38417}
{'[3, 0, 5, 6, 2, 4, 0, 0, 5, 6, 0, 20, 0, 1, 0, 0, 1, 1]' : 0.382313}
{'[3, 0, 5, 6, 2, 4, 0, 0, 5, 6, 0, 20, 0, 1, 0, 0, 1, 1]' : 0.383061}
{'[3, 0, 5, 6, 2, 4, 0, 0, 5, 6, 0, 20, 0, 1, 0, 0, 1, 1]' : 0.383706}
{'[3, 0, 5, 6, 2, 4, 0, 0, 5, 6, 0, 20, 0, 1, 0, 0, 1, 1]' : 0.39084}
{'[3, 0, 5, 6, 2, 4, 0, 0, 5, 6, 0, 20, 0, 1, 0, 0, 1, 1]' : 0.383433}
{'[3, 0, 5, 6, 2, 4, 0, 0, 5, 6, 0, 20, 0, 1, 0, 0, 1, 1]' : 0.38421}
{'[3, 0, 5, 6, 2, 4, 0, 0, 5, 6, 0, 20, 0, 1, 0, 0, 1, 1]' : 0.381735}
{'[3, 0, 5, 6, 2, 4, 0, 0, 5, 6, 0, 20, 0, 1, 0, 0, 1, 1]' : 0.382932}
{'[3, 0, 5, 6, 2, 4, 0, 0, 5, 6, 0, 20, 0, 1, 0, 0, 1, 1]' : 0.38174}
{'[3, 0, 5, 6, 2, 4, 0, 0, 5, 6, 0, 20, 0, 1, 0, 0, 1, 1]' : 0.386481}
{'[3, 0, 5, 6, 2, 4, 0, 0, 5, 6, 0, 20, 0, 1, 0, 0, 1, 1]' : 0.381551}
{'[3, 0, 5, 6, 2, 4, 0, 0, 5, 6, 0, 20, 0, 1, 0, 0, 1, 1]' : 0.382435}
{'[3, 0, 5, 6, 2, 4, 0, 0, 5, 6, 0, 20, 0, 1, 0, 0, 1, 1]' : 0.381648}
{'[3, 0, 5, 6, 2, 4, 0, 0, 5, 6, 0, 20, 0, 1, 0, 0, 1, 1]' : 0.381259}
{'[3, 0, 5, 6, 2, 4, 0, 0, 5, 6, 0, 20, 0, 1, 0, 0, 1, 1]' : 0.38122}
{'[3, 0, 5, 6, 2, 4, 0, 0, 5, 6, 0, 20, 0, 1, 0, 0, 1, 1]' : 0.39146}
{'[3, 0, 5, 6, 2, 4, 0, 0, 5, 6, 0, 20, 0, 1, 0, 0, 1, 1]' : 0.381985}
{'[3, 0, 5, 6, 2, 4, 0, 0, 5, 6, 0, 20, 0, 1, 0, 0, 1, 1]' : 0.381815}
{'[3, 0, 5, 6, 2, 4, 0, 0, 5, 6, 0, 20, 0, 1, 0, 0, 1, 1]' : 0.381184}
{'[3, 0, 5, 6, 2, 4, 0, 0, 5, 6, 0, 20, 0, 1, 0, 0, 1, 1]' : 0.381904}
{'[3, 0, 5, 6, 2, 4, 0, 0, 5, 6, 0, 20, 0, 1, 0, 0, 1, 1]' : 0.382223}
{'[3, 0, 5, 6, 2, 4, 0, 0, 5, 6, 0, 20, 0, 1, 0, 0, 1, 1]' : 0.382006}
{'[3, 0, 5, 6, 2, 4, 0, 0, 5, 6, 0, 20, 0, 1, 0, 0, 1, 1]' : 0.381858}
{'[3, 0, 5, 6, 2, 4, 0, 0, 5, 6, 0, 20, 0, 1, 0, 0, 1, 1]' : 0.381824}
{'[3, 0, 5, 6, 2, 4, 0, 0, 5, 6, 0, 20, 0, 1, 0, 0, 1, 1]' : 0.380706}
{'[3, 0, 5, 6, 2, 4, 0, 0, 5, 6, 0, 20, 0, 1, 0, 0, 1, 1]' : 0.380819}
{'[3, 0, 5, 6, 2, 4, 0, 0, 5, 6, 0, 20, 0, 1, 0, 0, 1, 1]' : 0.381886}
{'[3, 0, 5, 6, 2, 4, 0, 0, 5, 6, 0, 20, 0, 1, 0, 0, 1, 1]' : 0.396421}
{'[3, 0, 5, 6, 2, 4, 0, 0, 5, 6, 0, 20, 0, 1, 0, 0, 1, 1]' : 0.381487}

out:
 ["{'[3, 0, 5, 6, 2, 4, 0, 0, 5, 6, 0, 20, 0, 1, 0, 0, 1, 1]' : 0.38417}", "{'[3, 0, 5, 6, 2, 4, 0, 0, 5, 6, 0, 20, 0, 1, 0, 0, 1, 1]' : 0.382313}", "{'[3, 0, 5, 6, 2, 4, 0, 0, 5, 6, 0, 20, 0, 1, 0, 0, 1, 1]' : 0.383061}", "{'[3, 0, 5, 6, 2, 4, 0, 0, 5, 6, 0, 20, 0, 1, 0, 0, 1, 1]' : 0.383706}", "{'[3, 0, 5, 6, 2, 4, 0, 0, 5, 6, 0, 20, 0, 1, 0, 0, 1, 1]' : 0.39084}", "{'[3, 0, 5, 6, 2, 4, 0, 0, 5, 6, 0, 20, 0, 1, 0, 0, 1, 1]' : 0.383433}", "{'[3, 0, 5, 6, 2, 4, 0, 0, 5, 6, 0, 20, 0, 1, 0, 0, 1, 1]' : 0.38421}", "{'[3, 0, 5, 6, 2, 4, 0, 0, 5, 6, 0, 20, 0, 1, 0, 0, 1, 1]' : 0.381735}", "{'[3, 0, 5, 6, 2, 4, 0, 0, 5, 6, 0, 20, 0, 1, 0, 0, 1, 1]' : 0.382932}", "{'[3, 0, 5, 6, 2, 4, 0, 0, 5, 6, 0, 20, 0, 1, 0, 0, 1, 1]' : 0.38174}", "{'[3, 0, 5, 6, 2, 4, 0, 0, 5, 6, 0, 20, 0, 1, 0, 0, 1, 1]' : 0.386481}", "{'[3, 0, 5, 6, 2, 4, 0, 0, 5, 6, 0, 20, 0, 1, 0, 0, 1, 1]' : 0.381551}", "{'[3, 0, 5, 6, 2, 4, 0, 0, 5, 6, 0, 20, 0, 1, 0, 0, 1, 1]' : 0.382435}", "{'[3, 0, 5, 6, 2, 4, 0, 0, 5, 6, 0, 20, 0, 1, 0, 0, 1, 1]' : 0.381648}", "{'[3, 0, 5, 6, 2, 4, 0, 0, 5, 6, 0, 20, 0, 1, 0, 0, 1, 1]' : 0.381259}", "{'[3, 0, 5, 6, 2, 4, 0, 0, 5, 6, 0, 20, 0, 1, 0, 0, 1, 1]' : 0.38122}", "{'[3, 0, 5, 6, 2, 4, 0, 0, 5, 6, 0, 20, 0, 1, 0, 0, 1, 1]' : 0.39146}", "{'[3, 0, 5, 6, 2, 4, 0, 0, 5, 6, 0, 20, 0, 1, 0, 0, 1, 1]' : 0.381985}", "{'[3, 0, 5, 6, 2, 4, 0, 0, 5, 6, 0, 20, 0, 1, 0, 0, 1, 1]' : 0.381815}", "{'[3, 0, 5, 6, 2, 4, 0, 0, 5, 6, 0, 20, 0, 1, 0, 0, 1, 1]' : 0.381184}", "{'[3, 0, 5, 6, 2, 4, 0, 0, 5, 6, 0, 20, 0, 1, 0, 0, 1, 1]' : 0.381904}", "{'[3, 0, 5, 6, 2, 4, 0, 0, 5, 6, 0, 20, 0, 1, 0, 0, 1, 1]' : 0.382223}", "{'[3, 0, 5, 6, 2, 4, 0, 0, 5, 6, 0, 20, 0, 1, 0, 0, 1, 1]' : 0.382006}", "{'[3, 0, 5, 6, 2, 4, 0, 0, 5, 6, 0, 20, 0, 1, 0, 0, 1, 1]' : 0.381858}", "{'[3, 0, 5, 6, 2, 4, 0, 0, 5, 6, 0, 20, 0, 1, 0, 0, 1, 1]' : 0.381824}", "{'[3, 0, 5, 6, 2, 4, 0, 0, 5, 6, 0, 20, 0, 1, 0, 0, 1, 1]' : 0.380706}", "{'[3, 0, 5, 6, 2, 4, 0, 0, 5, 6, 0, 20, 0, 1, 0, 0, 1, 1]' : 0.380819}", "{'[3, 0, 5, 6, 2, 4, 0, 0, 5, 6, 0, 20, 0, 1, 0, 0, 1, 1]' : 0.381886}", "{'[3, 0, 5, 6, 2, 4, 0, 0, 5, 6, 0, 20, 0, 1, 0, 0, 1, 1]' : 0.396421}", "{'[3, 0, 5, 6, 2, 4, 0, 0, 5, 6, 0, 20, 0, 1, 0, 0, 1, 1]' : 0.381487}"]
returning from 'run': {'[3, 0, 5, 6, 2, 4, 0, 0, 5, 6, 0, 20, 0, 1, 0, 0, 1, 1]': ([0.38417, 0.382313, 0.383061, 0.383706, 0.39084, 0.383433, 0.38421, 0.381735, 0.382932, 0.38174, 0.386481, 0.381551, 0.382435, 0.381648, 0.381259, 0.38122, 0.39146, 0.381985, 0.381815, 0.381184, 0.381904, 0.382223, 0.382006, 0.381858, 0.381824, 0.380706, 0.380819, 0.381886, 0.396421, 0.381487], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 0, 5, 6, 2, 4, 0, 0, 5, 6, 0, 20, 0, 1, 0, 0, 1, 1]': ([0.38417, 0.382313, 0.383061, 0.383706, 0.39084, 0.383433, 0.38421, 0.381735, 0.382932, 0.38174, 0.386481, 0.381551, 0.382435, 0.381648, 0.381259, 0.38122, 0.39146, 0.381985, 0.381815, 0.381184, 0.381904, 0.382223, 0.382006, 0.381858, 0.381824, 0.380706, 0.380819, 0.381886, 0.396421, 0.381487], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = jjj
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	5
        Additions: 		3610
        Multiplications: 	1782
        Divisions: 		0
        Logical: 		0
        Reads: 			6802
        Writes: 		1072
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest34.exe __orio_perftest34.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest34.exe  
Program Test Output: 
{'[4, 5, 2, 0, 3, 5, 0, 0, 10, 0, 13, 10, 2, 0, 0, 1, 0, 0]' : 0.510694}
{'[4, 5, 2, 0, 3, 5, 0, 0, 10, 0, 13, 10, 2, 0, 0, 1, 0, 0]' : 0.519906}
{'[4, 5, 2, 0, 3, 5, 0, 0, 10, 0, 13, 10, 2, 0, 0, 1, 0, 0]' : 0.510026}
{'[4, 5, 2, 0, 3, 5, 0, 0, 10, 0, 13, 10, 2, 0, 0, 1, 0, 0]' : 0.511078}
{'[4, 5, 2, 0, 3, 5, 0, 0, 10, 0, 13, 10, 2, 0, 0, 1, 0, 0]' : 0.511085}
{'[4, 5, 2, 0, 3, 5, 0, 0, 10, 0, 13, 10, 2, 0, 0, 1, 0, 0]' : 0.510832}
{'[4, 5, 2, 0, 3, 5, 0, 0, 10, 0, 13, 10, 2, 0, 0, 1, 0, 0]' : 0.513508}
{'[4, 5, 2, 0, 3, 5, 0, 0, 10, 0, 13, 10, 2, 0, 0, 1, 0, 0]' : 0.5127}
{'[4, 5, 2, 0, 3, 5, 0, 0, 10, 0, 13, 10, 2, 0, 0, 1, 0, 0]' : 0.50999}
{'[4, 5, 2, 0, 3, 5, 0, 0, 10, 0, 13, 10, 2, 0, 0, 1, 0, 0]' : 0.513404}
{'[4, 5, 2, 0, 3, 5, 0, 0, 10, 0, 13, 10, 2, 0, 0, 1, 0, 0]' : 0.510488}
{'[4, 5, 2, 0, 3, 5, 0, 0, 10, 0, 13, 10, 2, 0, 0, 1, 0, 0]' : 0.516424}
{'[4, 5, 2, 0, 3, 5, 0, 0, 10, 0, 13, 10, 2, 0, 0, 1, 0, 0]' : 0.510345}
{'[4, 5, 2, 0, 3, 5, 0, 0, 10, 0, 13, 10, 2, 0, 0, 1, 0, 0]' : 0.512144}
{'[4, 5, 2, 0, 3, 5, 0, 0, 10, 0, 13, 10, 2, 0, 0, 1, 0, 0]' : 0.510857}
{'[4, 5, 2, 0, 3, 5, 0, 0, 10, 0, 13, 10, 2, 0, 0, 1, 0, 0]' : 0.519743}
{'[4, 5, 2, 0, 3, 5, 0, 0, 10, 0, 13, 10, 2, 0, 0, 1, 0, 0]' : 0.510382}
{'[4, 5, 2, 0, 3, 5, 0, 0, 10, 0, 13, 10, 2, 0, 0, 1, 0, 0]' : 0.511882}
{'[4, 5, 2, 0, 3, 5, 0, 0, 10, 0, 13, 10, 2, 0, 0, 1, 0, 0]' : 0.510387}
{'[4, 5, 2, 0, 3, 5, 0, 0, 10, 0, 13, 10, 2, 0, 0, 1, 0, 0]' : 0.520368}
{'[4, 5, 2, 0, 3, 5, 0, 0, 10, 0, 13, 10, 2, 0, 0, 1, 0, 0]' : 0.510522}
{'[4, 5, 2, 0, 3, 5, 0, 0, 10, 0, 13, 10, 2, 0, 0, 1, 0, 0]' : 0.511766}
{'[4, 5, 2, 0, 3, 5, 0, 0, 10, 0, 13, 10, 2, 0, 0, 1, 0, 0]' : 0.52042}
{'[4, 5, 2, 0, 3, 5, 0, 0, 10, 0, 13, 10, 2, 0, 0, 1, 0, 0]' : 0.512675}
{'[4, 5, 2, 0, 3, 5, 0, 0, 10, 0, 13, 10, 2, 0, 0, 1, 0, 0]' : 0.511993}
{'[4, 5, 2, 0, 3, 5, 0, 0, 10, 0, 13, 10, 2, 0, 0, 1, 0, 0]' : 0.51186}
{'[4, 5, 2, 0, 3, 5, 0, 0, 10, 0, 13, 10, 2, 0, 0, 1, 0, 0]' : 0.511896}
{'[4, 5, 2, 0, 3, 5, 0, 0, 10, 0, 13, 10, 2, 0, 0, 1, 0, 0]' : 0.511827}
{'[4, 5, 2, 0, 3, 5, 0, 0, 10, 0, 13, 10, 2, 0, 0, 1, 0, 0]' : 0.511451}
{'[4, 5, 2, 0, 3, 5, 0, 0, 10, 0, 13, 10, 2, 0, 0, 1, 0, 0]' : 0.512018}

out:
 ["{'[4, 5, 2, 0, 3, 5, 0, 0, 10, 0, 13, 10, 2, 0, 0, 1, 0, 0]' : 0.510694}", "{'[4, 5, 2, 0, 3, 5, 0, 0, 10, 0, 13, 10, 2, 0, 0, 1, 0, 0]' : 0.519906}", "{'[4, 5, 2, 0, 3, 5, 0, 0, 10, 0, 13, 10, 2, 0, 0, 1, 0, 0]' : 0.510026}", "{'[4, 5, 2, 0, 3, 5, 0, 0, 10, 0, 13, 10, 2, 0, 0, 1, 0, 0]' : 0.511078}", "{'[4, 5, 2, 0, 3, 5, 0, 0, 10, 0, 13, 10, 2, 0, 0, 1, 0, 0]' : 0.511085}", "{'[4, 5, 2, 0, 3, 5, 0, 0, 10, 0, 13, 10, 2, 0, 0, 1, 0, 0]' : 0.510832}", "{'[4, 5, 2, 0, 3, 5, 0, 0, 10, 0, 13, 10, 2, 0, 0, 1, 0, 0]' : 0.513508}", "{'[4, 5, 2, 0, 3, 5, 0, 0, 10, 0, 13, 10, 2, 0, 0, 1, 0, 0]' : 0.5127}", "{'[4, 5, 2, 0, 3, 5, 0, 0, 10, 0, 13, 10, 2, 0, 0, 1, 0, 0]' : 0.50999}", "{'[4, 5, 2, 0, 3, 5, 0, 0, 10, 0, 13, 10, 2, 0, 0, 1, 0, 0]' : 0.513404}", "{'[4, 5, 2, 0, 3, 5, 0, 0, 10, 0, 13, 10, 2, 0, 0, 1, 0, 0]' : 0.510488}", "{'[4, 5, 2, 0, 3, 5, 0, 0, 10, 0, 13, 10, 2, 0, 0, 1, 0, 0]' : 0.516424}", "{'[4, 5, 2, 0, 3, 5, 0, 0, 10, 0, 13, 10, 2, 0, 0, 1, 0, 0]' : 0.510345}", "{'[4, 5, 2, 0, 3, 5, 0, 0, 10, 0, 13, 10, 2, 0, 0, 1, 0, 0]' : 0.512144}", "{'[4, 5, 2, 0, 3, 5, 0, 0, 10, 0, 13, 10, 2, 0, 0, 1, 0, 0]' : 0.510857}", "{'[4, 5, 2, 0, 3, 5, 0, 0, 10, 0, 13, 10, 2, 0, 0, 1, 0, 0]' : 0.519743}", "{'[4, 5, 2, 0, 3, 5, 0, 0, 10, 0, 13, 10, 2, 0, 0, 1, 0, 0]' : 0.510382}", "{'[4, 5, 2, 0, 3, 5, 0, 0, 10, 0, 13, 10, 2, 0, 0, 1, 0, 0]' : 0.511882}", "{'[4, 5, 2, 0, 3, 5, 0, 0, 10, 0, 13, 10, 2, 0, 0, 1, 0, 0]' : 0.510387}", "{'[4, 5, 2, 0, 3, 5, 0, 0, 10, 0, 13, 10, 2, 0, 0, 1, 0, 0]' : 0.520368}", "{'[4, 5, 2, 0, 3, 5, 0, 0, 10, 0, 13, 10, 2, 0, 0, 1, 0, 0]' : 0.510522}", "{'[4, 5, 2, 0, 3, 5, 0, 0, 10, 0, 13, 10, 2, 0, 0, 1, 0, 0]' : 0.511766}", "{'[4, 5, 2, 0, 3, 5, 0, 0, 10, 0, 13, 10, 2, 0, 0, 1, 0, 0]' : 0.52042}", "{'[4, 5, 2, 0, 3, 5, 0, 0, 10, 0, 13, 10, 2, 0, 0, 1, 0, 0]' : 0.512675}", "{'[4, 5, 2, 0, 3, 5, 0, 0, 10, 0, 13, 10, 2, 0, 0, 1, 0, 0]' : 0.511993}", "{'[4, 5, 2, 0, 3, 5, 0, 0, 10, 0, 13, 10, 2, 0, 0, 1, 0, 0]' : 0.51186}", "{'[4, 5, 2, 0, 3, 5, 0, 0, 10, 0, 13, 10, 2, 0, 0, 1, 0, 0]' : 0.511896}", "{'[4, 5, 2, 0, 3, 5, 0, 0, 10, 0, 13, 10, 2, 0, 0, 1, 0, 0]' : 0.511827}", "{'[4, 5, 2, 0, 3, 5, 0, 0, 10, 0, 13, 10, 2, 0, 0, 1, 0, 0]' : 0.511451}", "{'[4, 5, 2, 0, 3, 5, 0, 0, 10, 0, 13, 10, 2, 0, 0, 1, 0, 0]' : 0.512018}"]
returning from 'run': {'[4, 5, 2, 0, 3, 5, 0, 0, 10, 0, 13, 10, 2, 0, 0, 1, 0, 0]': ([0.510694, 0.519906, 0.510026, 0.511078, 0.511085, 0.510832, 0.513508, 0.5127, 0.50999, 0.513404, 0.510488, 0.516424, 0.510345, 0.512144, 0.510857, 0.519743, 0.510382, 0.511882, 0.510387, 0.520368, 0.510522, 0.511766, 0.52042, 0.512675, 0.511993, 0.51186, 0.511896, 0.511827, 0.511451, 0.512018], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 5, 2, 0, 3, 5, 0, 0, 10, 0, 13, 10, 2, 0, 0, 1, 0, 0]': ([0.510694, 0.519906, 0.510026, 0.511078, 0.511085, 0.510832, 0.513508, 0.5127, 0.50999, 0.513404, 0.510488, 0.516424, 0.510345, 0.512144, 0.510857, 0.519743, 0.510382, 0.511882, 0.510387, 0.520368, 0.510522, 0.511766, 0.52042, 0.512675, 0.511993, 0.51186, 0.511896, 0.511827, 0.511451, 0.512018], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = jjj
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		366
        Multiplications: 	132
        Divisions: 		0
        Logical: 		0
        Reads: 			855
        Writes: 		195
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest35.exe __orio_perftest35.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest35.exe  
Program Test Output: 
{'[5, 5, 4, 0, 3, 3, 0, 0, 29, 0, 27, 19, 0, 1, 1, 1, 1, 1]' : 0.67367}
{'[5, 5, 4, 0, 3, 3, 0, 0, 29, 0, 27, 19, 0, 1, 1, 1, 1, 1]' : 0.672808}
{'[5, 5, 4, 0, 3, 3, 0, 0, 29, 0, 27, 19, 0, 1, 1, 1, 1, 1]' : 0.672751}
{'[5, 5, 4, 0, 3, 3, 0, 0, 29, 0, 27, 19, 0, 1, 1, 1, 1, 1]' : 0.673022}
{'[5, 5, 4, 0, 3, 3, 0, 0, 29, 0, 27, 19, 0, 1, 1, 1, 1, 1]' : 0.6744}
{'[5, 5, 4, 0, 3, 3, 0, 0, 29, 0, 27, 19, 0, 1, 1, 1, 1, 1]' : 0.673288}
{'[5, 5, 4, 0, 3, 3, 0, 0, 29, 0, 27, 19, 0, 1, 1, 1, 1, 1]' : 0.673611}
{'[5, 5, 4, 0, 3, 3, 0, 0, 29, 0, 27, 19, 0, 1, 1, 1, 1, 1]' : 0.672002}
{'[5, 5, 4, 0, 3, 3, 0, 0, 29, 0, 27, 19, 0, 1, 1, 1, 1, 1]' : 0.672106}
{'[5, 5, 4, 0, 3, 3, 0, 0, 29, 0, 27, 19, 0, 1, 1, 1, 1, 1]' : 0.672895}
{'[5, 5, 4, 0, 3, 3, 0, 0, 29, 0, 27, 19, 0, 1, 1, 1, 1, 1]' : 0.672423}
{'[5, 5, 4, 0, 3, 3, 0, 0, 29, 0, 27, 19, 0, 1, 1, 1, 1, 1]' : 0.67344}
{'[5, 5, 4, 0, 3, 3, 0, 0, 29, 0, 27, 19, 0, 1, 1, 1, 1, 1]' : 0.674046}
{'[5, 5, 4, 0, 3, 3, 0, 0, 29, 0, 27, 19, 0, 1, 1, 1, 1, 1]' : 0.672325}
{'[5, 5, 4, 0, 3, 3, 0, 0, 29, 0, 27, 19, 0, 1, 1, 1, 1, 1]' : 0.674754}
{'[5, 5, 4, 0, 3, 3, 0, 0, 29, 0, 27, 19, 0, 1, 1, 1, 1, 1]' : 0.672383}
{'[5, 5, 4, 0, 3, 3, 0, 0, 29, 0, 27, 19, 0, 1, 1, 1, 1, 1]' : 0.673432}
{'[5, 5, 4, 0, 3, 3, 0, 0, 29, 0, 27, 19, 0, 1, 1, 1, 1, 1]' : 0.666442}
{'[5, 5, 4, 0, 3, 3, 0, 0, 29, 0, 27, 19, 0, 1, 1, 1, 1, 1]' : 0.659321}
{'[5, 5, 4, 0, 3, 3, 0, 0, 29, 0, 27, 19, 0, 1, 1, 1, 1, 1]' : 0.660749}
{'[5, 5, 4, 0, 3, 3, 0, 0, 29, 0, 27, 19, 0, 1, 1, 1, 1, 1]' : 0.660007}
{'[5, 5, 4, 0, 3, 3, 0, 0, 29, 0, 27, 19, 0, 1, 1, 1, 1, 1]' : 0.659105}
{'[5, 5, 4, 0, 3, 3, 0, 0, 29, 0, 27, 19, 0, 1, 1, 1, 1, 1]' : 0.65935}
{'[5, 5, 4, 0, 3, 3, 0, 0, 29, 0, 27, 19, 0, 1, 1, 1, 1, 1]' : 0.658941}
{'[5, 5, 4, 0, 3, 3, 0, 0, 29, 0, 27, 19, 0, 1, 1, 1, 1, 1]' : 0.658705}
{'[5, 5, 4, 0, 3, 3, 0, 0, 29, 0, 27, 19, 0, 1, 1, 1, 1, 1]' : 0.659043}
{'[5, 5, 4, 0, 3, 3, 0, 0, 29, 0, 27, 19, 0, 1, 1, 1, 1, 1]' : 0.658237}
{'[5, 5, 4, 0, 3, 3, 0, 0, 29, 0, 27, 19, 0, 1, 1, 1, 1, 1]' : 0.659414}
{'[5, 5, 4, 0, 3, 3, 0, 0, 29, 0, 27, 19, 0, 1, 1, 1, 1, 1]' : 0.659271}
{'[5, 5, 4, 0, 3, 3, 0, 0, 29, 0, 27, 19, 0, 1, 1, 1, 1, 1]' : 0.658689}

out:
 ["{'[5, 5, 4, 0, 3, 3, 0, 0, 29, 0, 27, 19, 0, 1, 1, 1, 1, 1]' : 0.67367}", "{'[5, 5, 4, 0, 3, 3, 0, 0, 29, 0, 27, 19, 0, 1, 1, 1, 1, 1]' : 0.672808}", "{'[5, 5, 4, 0, 3, 3, 0, 0, 29, 0, 27, 19, 0, 1, 1, 1, 1, 1]' : 0.672751}", "{'[5, 5, 4, 0, 3, 3, 0, 0, 29, 0, 27, 19, 0, 1, 1, 1, 1, 1]' : 0.673022}", "{'[5, 5, 4, 0, 3, 3, 0, 0, 29, 0, 27, 19, 0, 1, 1, 1, 1, 1]' : 0.6744}", "{'[5, 5, 4, 0, 3, 3, 0, 0, 29, 0, 27, 19, 0, 1, 1, 1, 1, 1]' : 0.673288}", "{'[5, 5, 4, 0, 3, 3, 0, 0, 29, 0, 27, 19, 0, 1, 1, 1, 1, 1]' : 0.673611}", "{'[5, 5, 4, 0, 3, 3, 0, 0, 29, 0, 27, 19, 0, 1, 1, 1, 1, 1]' : 0.672002}", "{'[5, 5, 4, 0, 3, 3, 0, 0, 29, 0, 27, 19, 0, 1, 1, 1, 1, 1]' : 0.672106}", "{'[5, 5, 4, 0, 3, 3, 0, 0, 29, 0, 27, 19, 0, 1, 1, 1, 1, 1]' : 0.672895}", "{'[5, 5, 4, 0, 3, 3, 0, 0, 29, 0, 27, 19, 0, 1, 1, 1, 1, 1]' : 0.672423}", "{'[5, 5, 4, 0, 3, 3, 0, 0, 29, 0, 27, 19, 0, 1, 1, 1, 1, 1]' : 0.67344}", "{'[5, 5, 4, 0, 3, 3, 0, 0, 29, 0, 27, 19, 0, 1, 1, 1, 1, 1]' : 0.674046}", "{'[5, 5, 4, 0, 3, 3, 0, 0, 29, 0, 27, 19, 0, 1, 1, 1, 1, 1]' : 0.672325}", "{'[5, 5, 4, 0, 3, 3, 0, 0, 29, 0, 27, 19, 0, 1, 1, 1, 1, 1]' : 0.674754}", "{'[5, 5, 4, 0, 3, 3, 0, 0, 29, 0, 27, 19, 0, 1, 1, 1, 1, 1]' : 0.672383}", "{'[5, 5, 4, 0, 3, 3, 0, 0, 29, 0, 27, 19, 0, 1, 1, 1, 1, 1]' : 0.673432}", "{'[5, 5, 4, 0, 3, 3, 0, 0, 29, 0, 27, 19, 0, 1, 1, 1, 1, 1]' : 0.666442}", "{'[5, 5, 4, 0, 3, 3, 0, 0, 29, 0, 27, 19, 0, 1, 1, 1, 1, 1]' : 0.659321}", "{'[5, 5, 4, 0, 3, 3, 0, 0, 29, 0, 27, 19, 0, 1, 1, 1, 1, 1]' : 0.660749}", "{'[5, 5, 4, 0, 3, 3, 0, 0, 29, 0, 27, 19, 0, 1, 1, 1, 1, 1]' : 0.660007}", "{'[5, 5, 4, 0, 3, 3, 0, 0, 29, 0, 27, 19, 0, 1, 1, 1, 1, 1]' : 0.659105}", "{'[5, 5, 4, 0, 3, 3, 0, 0, 29, 0, 27, 19, 0, 1, 1, 1, 1, 1]' : 0.65935}", "{'[5, 5, 4, 0, 3, 3, 0, 0, 29, 0, 27, 19, 0, 1, 1, 1, 1, 1]' : 0.658941}", "{'[5, 5, 4, 0, 3, 3, 0, 0, 29, 0, 27, 19, 0, 1, 1, 1, 1, 1]' : 0.658705}", "{'[5, 5, 4, 0, 3, 3, 0, 0, 29, 0, 27, 19, 0, 1, 1, 1, 1, 1]' : 0.659043}", "{'[5, 5, 4, 0, 3, 3, 0, 0, 29, 0, 27, 19, 0, 1, 1, 1, 1, 1]' : 0.658237}", "{'[5, 5, 4, 0, 3, 3, 0, 0, 29, 0, 27, 19, 0, 1, 1, 1, 1, 1]' : 0.659414}", "{'[5, 5, 4, 0, 3, 3, 0, 0, 29, 0, 27, 19, 0, 1, 1, 1, 1, 1]' : 0.659271}", "{'[5, 5, 4, 0, 3, 3, 0, 0, 29, 0, 27, 19, 0, 1, 1, 1, 1, 1]' : 0.658689}"]
returning from 'run': {'[5, 5, 4, 0, 3, 3, 0, 0, 29, 0, 27, 19, 0, 1, 1, 1, 1, 1]': ([0.67367, 0.672808, 0.672751, 0.673022, 0.6744, 0.673288, 0.673611, 0.672002, 0.672106, 0.672895, 0.672423, 0.67344, 0.674046, 0.672325, 0.674754, 0.672383, 0.673432, 0.666442, 0.659321, 0.660749, 0.660007, 0.659105, 0.65935, 0.658941, 0.658705, 0.659043, 0.658237, 0.659414, 0.659271, 0.658689], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 5, 4, 0, 3, 3, 0, 0, 29, 0, 27, 19, 0, 1, 1, 1, 1, 1]': ([0.67367, 0.672808, 0.672751, 0.673022, 0.6744, 0.673288, 0.673611, 0.672002, 0.672106, 0.672895, 0.672423, 0.67344, 0.674046, 0.672325, 0.674754, 0.672383, 0.673432, 0.666442, 0.659321, 0.660749, 0.660007, 0.659105, 0.65935, 0.658941, 0.658705, 0.659043, 0.658237, 0.659414, 0.659271, 0.658689], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = iii
Code stats:
        Number of loops: 	29
        Max loop nest depth: 	5
        Additions: 		505
        Multiplications: 	170
        Divisions: 		0
        Logical: 		0
        Reads: 			1103
        Writes: 		241
        Comparisons:		29
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest36.exe __orio_perftest36.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest36.exe  
Program Test Output: 
{'[4, 1, 2, 2, 2, 2, 0, 1, 27, 3, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.355523}
{'[4, 1, 2, 2, 2, 2, 0, 1, 27, 3, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.356777}
{'[4, 1, 2, 2, 2, 2, 0, 1, 27, 3, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.357175}
{'[4, 1, 2, 2, 2, 2, 0, 1, 27, 3, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.356143}
{'[4, 1, 2, 2, 2, 2, 0, 1, 27, 3, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.355425}
{'[4, 1, 2, 2, 2, 2, 0, 1, 27, 3, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.355325}
{'[4, 1, 2, 2, 2, 2, 0, 1, 27, 3, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.36204}
{'[4, 1, 2, 2, 2, 2, 0, 1, 27, 3, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.356364}
{'[4, 1, 2, 2, 2, 2, 0, 1, 27, 3, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.356312}
{'[4, 1, 2, 2, 2, 2, 0, 1, 27, 3, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.356676}
{'[4, 1, 2, 2, 2, 2, 0, 1, 27, 3, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.360952}
{'[4, 1, 2, 2, 2, 2, 0, 1, 27, 3, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.356184}
{'[4, 1, 2, 2, 2, 2, 0, 1, 27, 3, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.356686}
{'[4, 1, 2, 2, 2, 2, 0, 1, 27, 3, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.356501}
{'[4, 1, 2, 2, 2, 2, 0, 1, 27, 3, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.357281}
{'[4, 1, 2, 2, 2, 2, 0, 1, 27, 3, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.358645}
{'[4, 1, 2, 2, 2, 2, 0, 1, 27, 3, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.356058}
{'[4, 1, 2, 2, 2, 2, 0, 1, 27, 3, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.355266}
{'[4, 1, 2, 2, 2, 2, 0, 1, 27, 3, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.356533}
{'[4, 1, 2, 2, 2, 2, 0, 1, 27, 3, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.359524}
{'[4, 1, 2, 2, 2, 2, 0, 1, 27, 3, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.355887}
{'[4, 1, 2, 2, 2, 2, 0, 1, 27, 3, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.356989}
{'[4, 1, 2, 2, 2, 2, 0, 1, 27, 3, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.355661}
{'[4, 1, 2, 2, 2, 2, 0, 1, 27, 3, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.357843}
{'[4, 1, 2, 2, 2, 2, 0, 1, 27, 3, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.356683}
{'[4, 1, 2, 2, 2, 2, 0, 1, 27, 3, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.356616}
{'[4, 1, 2, 2, 2, 2, 0, 1, 27, 3, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.356099}
{'[4, 1, 2, 2, 2, 2, 0, 1, 27, 3, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.356665}
{'[4, 1, 2, 2, 2, 2, 0, 1, 27, 3, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.354846}
{'[4, 1, 2, 2, 2, 2, 0, 1, 27, 3, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.357191}

out:
 ["{'[4, 1, 2, 2, 2, 2, 0, 1, 27, 3, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.355523}", "{'[4, 1, 2, 2, 2, 2, 0, 1, 27, 3, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.356777}", "{'[4, 1, 2, 2, 2, 2, 0, 1, 27, 3, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.357175}", "{'[4, 1, 2, 2, 2, 2, 0, 1, 27, 3, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.356143}", "{'[4, 1, 2, 2, 2, 2, 0, 1, 27, 3, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.355425}", "{'[4, 1, 2, 2, 2, 2, 0, 1, 27, 3, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.355325}", "{'[4, 1, 2, 2, 2, 2, 0, 1, 27, 3, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.36204}", "{'[4, 1, 2, 2, 2, 2, 0, 1, 27, 3, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.356364}", "{'[4, 1, 2, 2, 2, 2, 0, 1, 27, 3, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.356312}", "{'[4, 1, 2, 2, 2, 2, 0, 1, 27, 3, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.356676}", "{'[4, 1, 2, 2, 2, 2, 0, 1, 27, 3, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.360952}", "{'[4, 1, 2, 2, 2, 2, 0, 1, 27, 3, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.356184}", "{'[4, 1, 2, 2, 2, 2, 0, 1, 27, 3, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.356686}", "{'[4, 1, 2, 2, 2, 2, 0, 1, 27, 3, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.356501}", "{'[4, 1, 2, 2, 2, 2, 0, 1, 27, 3, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.357281}", "{'[4, 1, 2, 2, 2, 2, 0, 1, 27, 3, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.358645}", "{'[4, 1, 2, 2, 2, 2, 0, 1, 27, 3, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.356058}", "{'[4, 1, 2, 2, 2, 2, 0, 1, 27, 3, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.355266}", "{'[4, 1, 2, 2, 2, 2, 0, 1, 27, 3, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.356533}", "{'[4, 1, 2, 2, 2, 2, 0, 1, 27, 3, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.359524}", "{'[4, 1, 2, 2, 2, 2, 0, 1, 27, 3, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.355887}", "{'[4, 1, 2, 2, 2, 2, 0, 1, 27, 3, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.356989}", "{'[4, 1, 2, 2, 2, 2, 0, 1, 27, 3, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.355661}", "{'[4, 1, 2, 2, 2, 2, 0, 1, 27, 3, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.357843}", "{'[4, 1, 2, 2, 2, 2, 0, 1, 27, 3, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.356683}", "{'[4, 1, 2, 2, 2, 2, 0, 1, 27, 3, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.356616}", "{'[4, 1, 2, 2, 2, 2, 0, 1, 27, 3, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.356099}", "{'[4, 1, 2, 2, 2, 2, 0, 1, 27, 3, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.356665}", "{'[4, 1, 2, 2, 2, 2, 0, 1, 27, 3, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.354846}", "{'[4, 1, 2, 2, 2, 2, 0, 1, 27, 3, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.357191}"]
returning from 'run': {'[4, 1, 2, 2, 2, 2, 0, 1, 27, 3, 0, 0, 0, 1, 1, 1, 1, 0]': ([0.355523, 0.356777, 0.357175, 0.356143, 0.355425, 0.355325, 0.36204, 0.356364, 0.356312, 0.356676, 0.360952, 0.356184, 0.356686, 0.356501, 0.357281, 0.358645, 0.356058, 0.355266, 0.356533, 0.359524, 0.355887, 0.356989, 0.355661, 0.357843, 0.356683, 0.356616, 0.356099, 0.356665, 0.354846, 0.357191], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 1, 2, 2, 2, 2, 0, 1, 27, 3, 0, 0, 0, 1, 1, 1, 1, 0]': ([0.355523, 0.356777, 0.357175, 0.356143, 0.355425, 0.355325, 0.36204, 0.356364, 0.356312, 0.356676, 0.360952, 0.356184, 0.356686, 0.356501, 0.357281, 0.358645, 0.356058, 0.355266, 0.356533, 0.359524, 0.355887, 0.356989, 0.355661, 0.357843, 0.356683, 0.356616, 0.356099, 0.356665, 0.354846, 0.357191], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	70
        Max loop nest depth: 	6
        Additions: 		8021
        Multiplications: 	1782
        Divisions: 		0
        Logical: 		0
        Reads: 			11510
        Writes: 		1145
        Comparisons:		70
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest37.exe __orio_perftest37.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest37.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest37.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest37.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 527, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors, data)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 408, in dopt_anova
    budget)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 333, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 279, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest37.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 527, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors, data)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 408, in dopt_anova
    budget)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 333, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 279, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	26
        Max loop nest depth: 	6
        Additions: 		1373
        Multiplications: 	630
        Divisions: 		0
        Logical: 		0
        Reads: 			2719
        Writes: 		464
        Comparisons:		26
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest38.exe __orio_perftest38.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest38.exe  
Program Test Output: 
{'[1, 4, 6, 5, 3, 0, 0, 1, 1, 0, 19, 4, 1, 1, 0, 1, 1, 1]' : 0.235117}
{'[1, 4, 6, 5, 3, 0, 0, 1, 1, 0, 19, 4, 1, 1, 0, 1, 1, 1]' : 0.23235}
{'[1, 4, 6, 5, 3, 0, 0, 1, 1, 0, 19, 4, 1, 1, 0, 1, 1, 1]' : 0.232127}
{'[1, 4, 6, 5, 3, 0, 0, 1, 1, 0, 19, 4, 1, 1, 0, 1, 1, 1]' : 0.232036}
{'[1, 4, 6, 5, 3, 0, 0, 1, 1, 0, 19, 4, 1, 1, 0, 1, 1, 1]' : 0.232374}
{'[1, 4, 6, 5, 3, 0, 0, 1, 1, 0, 19, 4, 1, 1, 0, 1, 1, 1]' : 0.23386}
{'[1, 4, 6, 5, 3, 0, 0, 1, 1, 0, 19, 4, 1, 1, 0, 1, 1, 1]' : 0.23202}
{'[1, 4, 6, 5, 3, 0, 0, 1, 1, 0, 19, 4, 1, 1, 0, 1, 1, 1]' : 0.235117}
{'[1, 4, 6, 5, 3, 0, 0, 1, 1, 0, 19, 4, 1, 1, 0, 1, 1, 1]' : 0.233012}
{'[1, 4, 6, 5, 3, 0, 0, 1, 1, 0, 19, 4, 1, 1, 0, 1, 1, 1]' : 0.234068}
{'[1, 4, 6, 5, 3, 0, 0, 1, 1, 0, 19, 4, 1, 1, 0, 1, 1, 1]' : 0.235069}
{'[1, 4, 6, 5, 3, 0, 0, 1, 1, 0, 19, 4, 1, 1, 0, 1, 1, 1]' : 0.233192}
{'[1, 4, 6, 5, 3, 0, 0, 1, 1, 0, 19, 4, 1, 1, 0, 1, 1, 1]' : 0.232105}
{'[1, 4, 6, 5, 3, 0, 0, 1, 1, 0, 19, 4, 1, 1, 0, 1, 1, 1]' : 0.234666}
{'[1, 4, 6, 5, 3, 0, 0, 1, 1, 0, 19, 4, 1, 1, 0, 1, 1, 1]' : 0.233833}
{'[1, 4, 6, 5, 3, 0, 0, 1, 1, 0, 19, 4, 1, 1, 0, 1, 1, 1]' : 0.233956}
{'[1, 4, 6, 5, 3, 0, 0, 1, 1, 0, 19, 4, 1, 1, 0, 1, 1, 1]' : 0.232758}
{'[1, 4, 6, 5, 3, 0, 0, 1, 1, 0, 19, 4, 1, 1, 0, 1, 1, 1]' : 0.23389}
{'[1, 4, 6, 5, 3, 0, 0, 1, 1, 0, 19, 4, 1, 1, 0, 1, 1, 1]' : 0.233343}
{'[1, 4, 6, 5, 3, 0, 0, 1, 1, 0, 19, 4, 1, 1, 0, 1, 1, 1]' : 0.233729}
{'[1, 4, 6, 5, 3, 0, 0, 1, 1, 0, 19, 4, 1, 1, 0, 1, 1, 1]' : 0.232127}
{'[1, 4, 6, 5, 3, 0, 0, 1, 1, 0, 19, 4, 1, 1, 0, 1, 1, 1]' : 0.232097}
{'[1, 4, 6, 5, 3, 0, 0, 1, 1, 0, 19, 4, 1, 1, 0, 1, 1, 1]' : 0.234923}
{'[1, 4, 6, 5, 3, 0, 0, 1, 1, 0, 19, 4, 1, 1, 0, 1, 1, 1]' : 0.235056}
{'[1, 4, 6, 5, 3, 0, 0, 1, 1, 0, 19, 4, 1, 1, 0, 1, 1, 1]' : 0.235289}
{'[1, 4, 6, 5, 3, 0, 0, 1, 1, 0, 19, 4, 1, 1, 0, 1, 1, 1]' : 0.233252}
{'[1, 4, 6, 5, 3, 0, 0, 1, 1, 0, 19, 4, 1, 1, 0, 1, 1, 1]' : 0.234596}
{'[1, 4, 6, 5, 3, 0, 0, 1, 1, 0, 19, 4, 1, 1, 0, 1, 1, 1]' : 0.234934}
{'[1, 4, 6, 5, 3, 0, 0, 1, 1, 0, 19, 4, 1, 1, 0, 1, 1, 1]' : 0.235493}
{'[1, 4, 6, 5, 3, 0, 0, 1, 1, 0, 19, 4, 1, 1, 0, 1, 1, 1]' : 0.234065}

out:
 ["{'[1, 4, 6, 5, 3, 0, 0, 1, 1, 0, 19, 4, 1, 1, 0, 1, 1, 1]' : 0.235117}", "{'[1, 4, 6, 5, 3, 0, 0, 1, 1, 0, 19, 4, 1, 1, 0, 1, 1, 1]' : 0.23235}", "{'[1, 4, 6, 5, 3, 0, 0, 1, 1, 0, 19, 4, 1, 1, 0, 1, 1, 1]' : 0.232127}", "{'[1, 4, 6, 5, 3, 0, 0, 1, 1, 0, 19, 4, 1, 1, 0, 1, 1, 1]' : 0.232036}", "{'[1, 4, 6, 5, 3, 0, 0, 1, 1, 0, 19, 4, 1, 1, 0, 1, 1, 1]' : 0.232374}", "{'[1, 4, 6, 5, 3, 0, 0, 1, 1, 0, 19, 4, 1, 1, 0, 1, 1, 1]' : 0.23386}", "{'[1, 4, 6, 5, 3, 0, 0, 1, 1, 0, 19, 4, 1, 1, 0, 1, 1, 1]' : 0.23202}", "{'[1, 4, 6, 5, 3, 0, 0, 1, 1, 0, 19, 4, 1, 1, 0, 1, 1, 1]' : 0.235117}", "{'[1, 4, 6, 5, 3, 0, 0, 1, 1, 0, 19, 4, 1, 1, 0, 1, 1, 1]' : 0.233012}", "{'[1, 4, 6, 5, 3, 0, 0, 1, 1, 0, 19, 4, 1, 1, 0, 1, 1, 1]' : 0.234068}", "{'[1, 4, 6, 5, 3, 0, 0, 1, 1, 0, 19, 4, 1, 1, 0, 1, 1, 1]' : 0.235069}", "{'[1, 4, 6, 5, 3, 0, 0, 1, 1, 0, 19, 4, 1, 1, 0, 1, 1, 1]' : 0.233192}", "{'[1, 4, 6, 5, 3, 0, 0, 1, 1, 0, 19, 4, 1, 1, 0, 1, 1, 1]' : 0.232105}", "{'[1, 4, 6, 5, 3, 0, 0, 1, 1, 0, 19, 4, 1, 1, 0, 1, 1, 1]' : 0.234666}", "{'[1, 4, 6, 5, 3, 0, 0, 1, 1, 0, 19, 4, 1, 1, 0, 1, 1, 1]' : 0.233833}", "{'[1, 4, 6, 5, 3, 0, 0, 1, 1, 0, 19, 4, 1, 1, 0, 1, 1, 1]' : 0.233956}", "{'[1, 4, 6, 5, 3, 0, 0, 1, 1, 0, 19, 4, 1, 1, 0, 1, 1, 1]' : 0.232758}", "{'[1, 4, 6, 5, 3, 0, 0, 1, 1, 0, 19, 4, 1, 1, 0, 1, 1, 1]' : 0.23389}", "{'[1, 4, 6, 5, 3, 0, 0, 1, 1, 0, 19, 4, 1, 1, 0, 1, 1, 1]' : 0.233343}", "{'[1, 4, 6, 5, 3, 0, 0, 1, 1, 0, 19, 4, 1, 1, 0, 1, 1, 1]' : 0.233729}", "{'[1, 4, 6, 5, 3, 0, 0, 1, 1, 0, 19, 4, 1, 1, 0, 1, 1, 1]' : 0.232127}", "{'[1, 4, 6, 5, 3, 0, 0, 1, 1, 0, 19, 4, 1, 1, 0, 1, 1, 1]' : 0.232097}", "{'[1, 4, 6, 5, 3, 0, 0, 1, 1, 0, 19, 4, 1, 1, 0, 1, 1, 1]' : 0.234923}", "{'[1, 4, 6, 5, 3, 0, 0, 1, 1, 0, 19, 4, 1, 1, 0, 1, 1, 1]' : 0.235056}", "{'[1, 4, 6, 5, 3, 0, 0, 1, 1, 0, 19, 4, 1, 1, 0, 1, 1, 1]' : 0.235289}", "{'[1, 4, 6, 5, 3, 0, 0, 1, 1, 0, 19, 4, 1, 1, 0, 1, 1, 1]' : 0.233252}", "{'[1, 4, 6, 5, 3, 0, 0, 1, 1, 0, 19, 4, 1, 1, 0, 1, 1, 1]' : 0.234596}", "{'[1, 4, 6, 5, 3, 0, 0, 1, 1, 0, 19, 4, 1, 1, 0, 1, 1, 1]' : 0.234934}", "{'[1, 4, 6, 5, 3, 0, 0, 1, 1, 0, 19, 4, 1, 1, 0, 1, 1, 1]' : 0.235493}", "{'[1, 4, 6, 5, 3, 0, 0, 1, 1, 0, 19, 4, 1, 1, 0, 1, 1, 1]' : 0.234065}"]
returning from 'run': {'[1, 4, 6, 5, 3, 0, 0, 1, 1, 0, 19, 4, 1, 1, 0, 1, 1, 1]': ([0.235117, 0.23235, 0.232127, 0.232036, 0.232374, 0.23386, 0.23202, 0.235117, 0.233012, 0.234068, 0.235069, 0.233192, 0.232105, 0.234666, 0.233833, 0.233956, 0.232758, 0.23389, 0.233343, 0.233729, 0.232127, 0.232097, 0.234923, 0.235056, 0.235289, 0.233252, 0.234596, 0.234934, 0.235493, 0.234065], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 4, 6, 5, 3, 0, 0, 1, 1, 0, 19, 4, 1, 1, 0, 1, 1, 1]': ([0.235117, 0.23235, 0.232127, 0.232036, 0.232374, 0.23386, 0.23202, 0.235117, 0.233012, 0.234068, 0.235069, 0.233192, 0.232105, 0.234666, 0.233833, 0.233956, 0.232758, 0.23389, 0.233343, 0.233729, 0.232127, 0.232097, 0.234923, 0.235056, 0.235289, 0.233252, 0.234596, 0.234934, 0.235493, 0.234065], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	80
        Max loop nest depth: 	6
        Additions: 		7903
        Multiplications: 	2880
        Divisions: 		0
        Logical: 		0
        Reads: 			16686
        Writes: 		3597
        Comparisons:		80
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest39.exe __orio_perftest39.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest39.exe  
Program Test Output: 
{'[6, 2, 1, 6, 4, 4, 0, 0, 1, 28, 0, 29, 0, 1, 1, 1, 1, 0]' : 0.482403}
{'[6, 2, 1, 6, 4, 4, 0, 0, 1, 28, 0, 29, 0, 1, 1, 1, 1, 0]' : 0.48195}
{'[6, 2, 1, 6, 4, 4, 0, 0, 1, 28, 0, 29, 0, 1, 1, 1, 1, 0]' : 0.48239}
{'[6, 2, 1, 6, 4, 4, 0, 0, 1, 28, 0, 29, 0, 1, 1, 1, 1, 0]' : 0.482845}
{'[6, 2, 1, 6, 4, 4, 0, 0, 1, 28, 0, 29, 0, 1, 1, 1, 1, 0]' : 0.482815}
{'[6, 2, 1, 6, 4, 4, 0, 0, 1, 28, 0, 29, 0, 1, 1, 1, 1, 0]' : 0.482946}
{'[6, 2, 1, 6, 4, 4, 0, 0, 1, 28, 0, 29, 0, 1, 1, 1, 1, 0]' : 0.48246}
{'[6, 2, 1, 6, 4, 4, 0, 0, 1, 28, 0, 29, 0, 1, 1, 1, 1, 0]' : 0.482925}
{'[6, 2, 1, 6, 4, 4, 0, 0, 1, 28, 0, 29, 0, 1, 1, 1, 1, 0]' : 0.482435}
{'[6, 2, 1, 6, 4, 4, 0, 0, 1, 28, 0, 29, 0, 1, 1, 1, 1, 0]' : 0.48279}
{'[6, 2, 1, 6, 4, 4, 0, 0, 1, 28, 0, 29, 0, 1, 1, 1, 1, 0]' : 0.48274}
{'[6, 2, 1, 6, 4, 4, 0, 0, 1, 28, 0, 29, 0, 1, 1, 1, 1, 0]' : 0.482673}
{'[6, 2, 1, 6, 4, 4, 0, 0, 1, 28, 0, 29, 0, 1, 1, 1, 1, 0]' : 0.482377}
{'[6, 2, 1, 6, 4, 4, 0, 0, 1, 28, 0, 29, 0, 1, 1, 1, 1, 0]' : 0.482572}
{'[6, 2, 1, 6, 4, 4, 0, 0, 1, 28, 0, 29, 0, 1, 1, 1, 1, 0]' : 0.482601}
{'[6, 2, 1, 6, 4, 4, 0, 0, 1, 28, 0, 29, 0, 1, 1, 1, 1, 0]' : 0.482437}
{'[6, 2, 1, 6, 4, 4, 0, 0, 1, 28, 0, 29, 0, 1, 1, 1, 1, 0]' : 0.481933}
{'[6, 2, 1, 6, 4, 4, 0, 0, 1, 28, 0, 29, 0, 1, 1, 1, 1, 0]' : 0.482432}
{'[6, 2, 1, 6, 4, 4, 0, 0, 1, 28, 0, 29, 0, 1, 1, 1, 1, 0]' : 0.482454}
{'[6, 2, 1, 6, 4, 4, 0, 0, 1, 28, 0, 29, 0, 1, 1, 1, 1, 0]' : 0.482546}
{'[6, 2, 1, 6, 4, 4, 0, 0, 1, 28, 0, 29, 0, 1, 1, 1, 1, 0]' : 0.482791}
{'[6, 2, 1, 6, 4, 4, 0, 0, 1, 28, 0, 29, 0, 1, 1, 1, 1, 0]' : 0.482732}
{'[6, 2, 1, 6, 4, 4, 0, 0, 1, 28, 0, 29, 0, 1, 1, 1, 1, 0]' : 0.489067}
{'[6, 2, 1, 6, 4, 4, 0, 0, 1, 28, 0, 29, 0, 1, 1, 1, 1, 0]' : 0.483187}
{'[6, 2, 1, 6, 4, 4, 0, 0, 1, 28, 0, 29, 0, 1, 1, 1, 1, 0]' : 0.48289}
{'[6, 2, 1, 6, 4, 4, 0, 0, 1, 28, 0, 29, 0, 1, 1, 1, 1, 0]' : 0.485956}
{'[6, 2, 1, 6, 4, 4, 0, 0, 1, 28, 0, 29, 0, 1, 1, 1, 1, 0]' : 0.48252}
{'[6, 2, 1, 6, 4, 4, 0, 0, 1, 28, 0, 29, 0, 1, 1, 1, 1, 0]' : 0.482737}
{'[6, 2, 1, 6, 4, 4, 0, 0, 1, 28, 0, 29, 0, 1, 1, 1, 1, 0]' : 0.48312}
{'[6, 2, 1, 6, 4, 4, 0, 0, 1, 28, 0, 29, 0, 1, 1, 1, 1, 0]' : 0.482934}

out:
 ["{'[6, 2, 1, 6, 4, 4, 0, 0, 1, 28, 0, 29, 0, 1, 1, 1, 1, 0]' : 0.482403}", "{'[6, 2, 1, 6, 4, 4, 0, 0, 1, 28, 0, 29, 0, 1, 1, 1, 1, 0]' : 0.48195}", "{'[6, 2, 1, 6, 4, 4, 0, 0, 1, 28, 0, 29, 0, 1, 1, 1, 1, 0]' : 0.48239}", "{'[6, 2, 1, 6, 4, 4, 0, 0, 1, 28, 0, 29, 0, 1, 1, 1, 1, 0]' : 0.482845}", "{'[6, 2, 1, 6, 4, 4, 0, 0, 1, 28, 0, 29, 0, 1, 1, 1, 1, 0]' : 0.482815}", "{'[6, 2, 1, 6, 4, 4, 0, 0, 1, 28, 0, 29, 0, 1, 1, 1, 1, 0]' : 0.482946}", "{'[6, 2, 1, 6, 4, 4, 0, 0, 1, 28, 0, 29, 0, 1, 1, 1, 1, 0]' : 0.48246}", "{'[6, 2, 1, 6, 4, 4, 0, 0, 1, 28, 0, 29, 0, 1, 1, 1, 1, 0]' : 0.482925}", "{'[6, 2, 1, 6, 4, 4, 0, 0, 1, 28, 0, 29, 0, 1, 1, 1, 1, 0]' : 0.482435}", "{'[6, 2, 1, 6, 4, 4, 0, 0, 1, 28, 0, 29, 0, 1, 1, 1, 1, 0]' : 0.48279}", "{'[6, 2, 1, 6, 4, 4, 0, 0, 1, 28, 0, 29, 0, 1, 1, 1, 1, 0]' : 0.48274}", "{'[6, 2, 1, 6, 4, 4, 0, 0, 1, 28, 0, 29, 0, 1, 1, 1, 1, 0]' : 0.482673}", "{'[6, 2, 1, 6, 4, 4, 0, 0, 1, 28, 0, 29, 0, 1, 1, 1, 1, 0]' : 0.482377}", "{'[6, 2, 1, 6, 4, 4, 0, 0, 1, 28, 0, 29, 0, 1, 1, 1, 1, 0]' : 0.482572}", "{'[6, 2, 1, 6, 4, 4, 0, 0, 1, 28, 0, 29, 0, 1, 1, 1, 1, 0]' : 0.482601}", "{'[6, 2, 1, 6, 4, 4, 0, 0, 1, 28, 0, 29, 0, 1, 1, 1, 1, 0]' : 0.482437}", "{'[6, 2, 1, 6, 4, 4, 0, 0, 1, 28, 0, 29, 0, 1, 1, 1, 1, 0]' : 0.481933}", "{'[6, 2, 1, 6, 4, 4, 0, 0, 1, 28, 0, 29, 0, 1, 1, 1, 1, 0]' : 0.482432}", "{'[6, 2, 1, 6, 4, 4, 0, 0, 1, 28, 0, 29, 0, 1, 1, 1, 1, 0]' : 0.482454}", "{'[6, 2, 1, 6, 4, 4, 0, 0, 1, 28, 0, 29, 0, 1, 1, 1, 1, 0]' : 0.482546}", "{'[6, 2, 1, 6, 4, 4, 0, 0, 1, 28, 0, 29, 0, 1, 1, 1, 1, 0]' : 0.482791}", "{'[6, 2, 1, 6, 4, 4, 0, 0, 1, 28, 0, 29, 0, 1, 1, 1, 1, 0]' : 0.482732}", "{'[6, 2, 1, 6, 4, 4, 0, 0, 1, 28, 0, 29, 0, 1, 1, 1, 1, 0]' : 0.489067}", "{'[6, 2, 1, 6, 4, 4, 0, 0, 1, 28, 0, 29, 0, 1, 1, 1, 1, 0]' : 0.483187}", "{'[6, 2, 1, 6, 4, 4, 0, 0, 1, 28, 0, 29, 0, 1, 1, 1, 1, 0]' : 0.48289}", "{'[6, 2, 1, 6, 4, 4, 0, 0, 1, 28, 0, 29, 0, 1, 1, 1, 1, 0]' : 0.485956}", "{'[6, 2, 1, 6, 4, 4, 0, 0, 1, 28, 0, 29, 0, 1, 1, 1, 1, 0]' : 0.48252}", "{'[6, 2, 1, 6, 4, 4, 0, 0, 1, 28, 0, 29, 0, 1, 1, 1, 1, 0]' : 0.482737}", "{'[6, 2, 1, 6, 4, 4, 0, 0, 1, 28, 0, 29, 0, 1, 1, 1, 1, 0]' : 0.48312}", "{'[6, 2, 1, 6, 4, 4, 0, 0, 1, 28, 0, 29, 0, 1, 1, 1, 1, 0]' : 0.482934}"]
returning from 'run': {'[6, 2, 1, 6, 4, 4, 0, 0, 1, 28, 0, 29, 0, 1, 1, 1, 1, 0]': ([0.482403, 0.48195, 0.48239, 0.482845, 0.482815, 0.482946, 0.48246, 0.482925, 0.482435, 0.48279, 0.48274, 0.482673, 0.482377, 0.482572, 0.482601, 0.482437, 0.481933, 0.482432, 0.482454, 0.482546, 0.482791, 0.482732, 0.489067, 0.483187, 0.48289, 0.485956, 0.48252, 0.482737, 0.48312, 0.482934], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 2, 1, 6, 4, 4, 0, 0, 1, 28, 0, 29, 0, 1, 1, 1, 1, 0]': ([0.482403, 0.48195, 0.48239, 0.482845, 0.482815, 0.482946, 0.48246, 0.482925, 0.482435, 0.48279, 0.48274, 0.482673, 0.482377, 0.482572, 0.482601, 0.482437, 0.481933, 0.482432, 0.482454, 0.482546, 0.482791, 0.482732, 0.489067, 0.483187, 0.48289, 0.485956, 0.48252, 0.482737, 0.48312, 0.482934], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = iii
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		2021
        Multiplications: 	986
        Divisions: 		0
        Logical: 		0
        Reads: 			3929
        Writes: 		674
        Comparisons:		15
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest40.exe __orio_perftest40.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest40.exe  
Program Test Output: 
{'[5, 5, 0, 3, 4, 0, 0, 0, 21, 27, 0, 26, 0, 1, 1, 1, 0, 0]' : 0.386663}
{'[5, 5, 0, 3, 4, 0, 0, 0, 21, 27, 0, 26, 0, 1, 1, 1, 0, 0]' : 0.38696}
{'[5, 5, 0, 3, 4, 0, 0, 0, 21, 27, 0, 26, 0, 1, 1, 1, 0, 0]' : 0.386772}
{'[5, 5, 0, 3, 4, 0, 0, 0, 21, 27, 0, 26, 0, 1, 1, 1, 0, 0]' : 0.386691}
{'[5, 5, 0, 3, 4, 0, 0, 0, 21, 27, 0, 26, 0, 1, 1, 1, 0, 0]' : 0.386738}
{'[5, 5, 0, 3, 4, 0, 0, 0, 21, 27, 0, 26, 0, 1, 1, 1, 0, 0]' : 0.386764}
{'[5, 5, 0, 3, 4, 0, 0, 0, 21, 27, 0, 26, 0, 1, 1, 1, 0, 0]' : 0.386613}
{'[5, 5, 0, 3, 4, 0, 0, 0, 21, 27, 0, 26, 0, 1, 1, 1, 0, 0]' : 0.386655}
{'[5, 5, 0, 3, 4, 0, 0, 0, 21, 27, 0, 26, 0, 1, 1, 1, 0, 0]' : 0.386585}
{'[5, 5, 0, 3, 4, 0, 0, 0, 21, 27, 0, 26, 0, 1, 1, 1, 0, 0]' : 0.386652}
{'[5, 5, 0, 3, 4, 0, 0, 0, 21, 27, 0, 26, 0, 1, 1, 1, 0, 0]' : 0.387289}
{'[5, 5, 0, 3, 4, 0, 0, 0, 21, 27, 0, 26, 0, 1, 1, 1, 0, 0]' : 0.386796}
{'[5, 5, 0, 3, 4, 0, 0, 0, 21, 27, 0, 26, 0, 1, 1, 1, 0, 0]' : 0.386685}
{'[5, 5, 0, 3, 4, 0, 0, 0, 21, 27, 0, 26, 0, 1, 1, 1, 0, 0]' : 0.386903}
{'[5, 5, 0, 3, 4, 0, 0, 0, 21, 27, 0, 26, 0, 1, 1, 1, 0, 0]' : 0.386636}
{'[5, 5, 0, 3, 4, 0, 0, 0, 21, 27, 0, 26, 0, 1, 1, 1, 0, 0]' : 0.3871}
{'[5, 5, 0, 3, 4, 0, 0, 0, 21, 27, 0, 26, 0, 1, 1, 1, 0, 0]' : 0.386692}
{'[5, 5, 0, 3, 4, 0, 0, 0, 21, 27, 0, 26, 0, 1, 1, 1, 0, 0]' : 0.3867}
{'[5, 5, 0, 3, 4, 0, 0, 0, 21, 27, 0, 26, 0, 1, 1, 1, 0, 0]' : 0.387024}
{'[5, 5, 0, 3, 4, 0, 0, 0, 21, 27, 0, 26, 0, 1, 1, 1, 0, 0]' : 0.386981}
{'[5, 5, 0, 3, 4, 0, 0, 0, 21, 27, 0, 26, 0, 1, 1, 1, 0, 0]' : 0.386895}
{'[5, 5, 0, 3, 4, 0, 0, 0, 21, 27, 0, 26, 0, 1, 1, 1, 0, 0]' : 0.386659}
{'[5, 5, 0, 3, 4, 0, 0, 0, 21, 27, 0, 26, 0, 1, 1, 1, 0, 0]' : 0.386612}
{'[5, 5, 0, 3, 4, 0, 0, 0, 21, 27, 0, 26, 0, 1, 1, 1, 0, 0]' : 0.38659}
{'[5, 5, 0, 3, 4, 0, 0, 0, 21, 27, 0, 26, 0, 1, 1, 1, 0, 0]' : 0.386778}
{'[5, 5, 0, 3, 4, 0, 0, 0, 21, 27, 0, 26, 0, 1, 1, 1, 0, 0]' : 0.386898}
{'[5, 5, 0, 3, 4, 0, 0, 0, 21, 27, 0, 26, 0, 1, 1, 1, 0, 0]' : 0.387644}
{'[5, 5, 0, 3, 4, 0, 0, 0, 21, 27, 0, 26, 0, 1, 1, 1, 0, 0]' : 0.386473}
{'[5, 5, 0, 3, 4, 0, 0, 0, 21, 27, 0, 26, 0, 1, 1, 1, 0, 0]' : 0.386391}
{'[5, 5, 0, 3, 4, 0, 0, 0, 21, 27, 0, 26, 0, 1, 1, 1, 0, 0]' : 0.386506}

out:
 ["{'[5, 5, 0, 3, 4, 0, 0, 0, 21, 27, 0, 26, 0, 1, 1, 1, 0, 0]' : 0.386663}", "{'[5, 5, 0, 3, 4, 0, 0, 0, 21, 27, 0, 26, 0, 1, 1, 1, 0, 0]' : 0.38696}", "{'[5, 5, 0, 3, 4, 0, 0, 0, 21, 27, 0, 26, 0, 1, 1, 1, 0, 0]' : 0.386772}", "{'[5, 5, 0, 3, 4, 0, 0, 0, 21, 27, 0, 26, 0, 1, 1, 1, 0, 0]' : 0.386691}", "{'[5, 5, 0, 3, 4, 0, 0, 0, 21, 27, 0, 26, 0, 1, 1, 1, 0, 0]' : 0.386738}", "{'[5, 5, 0, 3, 4, 0, 0, 0, 21, 27, 0, 26, 0, 1, 1, 1, 0, 0]' : 0.386764}", "{'[5, 5, 0, 3, 4, 0, 0, 0, 21, 27, 0, 26, 0, 1, 1, 1, 0, 0]' : 0.386613}", "{'[5, 5, 0, 3, 4, 0, 0, 0, 21, 27, 0, 26, 0, 1, 1, 1, 0, 0]' : 0.386655}", "{'[5, 5, 0, 3, 4, 0, 0, 0, 21, 27, 0, 26, 0, 1, 1, 1, 0, 0]' : 0.386585}", "{'[5, 5, 0, 3, 4, 0, 0, 0, 21, 27, 0, 26, 0, 1, 1, 1, 0, 0]' : 0.386652}", "{'[5, 5, 0, 3, 4, 0, 0, 0, 21, 27, 0, 26, 0, 1, 1, 1, 0, 0]' : 0.387289}", "{'[5, 5, 0, 3, 4, 0, 0, 0, 21, 27, 0, 26, 0, 1, 1, 1, 0, 0]' : 0.386796}", "{'[5, 5, 0, 3, 4, 0, 0, 0, 21, 27, 0, 26, 0, 1, 1, 1, 0, 0]' : 0.386685}", "{'[5, 5, 0, 3, 4, 0, 0, 0, 21, 27, 0, 26, 0, 1, 1, 1, 0, 0]' : 0.386903}", "{'[5, 5, 0, 3, 4, 0, 0, 0, 21, 27, 0, 26, 0, 1, 1, 1, 0, 0]' : 0.386636}", "{'[5, 5, 0, 3, 4, 0, 0, 0, 21, 27, 0, 26, 0, 1, 1, 1, 0, 0]' : 0.3871}", "{'[5, 5, 0, 3, 4, 0, 0, 0, 21, 27, 0, 26, 0, 1, 1, 1, 0, 0]' : 0.386692}", "{'[5, 5, 0, 3, 4, 0, 0, 0, 21, 27, 0, 26, 0, 1, 1, 1, 0, 0]' : 0.3867}", "{'[5, 5, 0, 3, 4, 0, 0, 0, 21, 27, 0, 26, 0, 1, 1, 1, 0, 0]' : 0.387024}", "{'[5, 5, 0, 3, 4, 0, 0, 0, 21, 27, 0, 26, 0, 1, 1, 1, 0, 0]' : 0.386981}", "{'[5, 5, 0, 3, 4, 0, 0, 0, 21, 27, 0, 26, 0, 1, 1, 1, 0, 0]' : 0.386895}", "{'[5, 5, 0, 3, 4, 0, 0, 0, 21, 27, 0, 26, 0, 1, 1, 1, 0, 0]' : 0.386659}", "{'[5, 5, 0, 3, 4, 0, 0, 0, 21, 27, 0, 26, 0, 1, 1, 1, 0, 0]' : 0.386612}", "{'[5, 5, 0, 3, 4, 0, 0, 0, 21, 27, 0, 26, 0, 1, 1, 1, 0, 0]' : 0.38659}", "{'[5, 5, 0, 3, 4, 0, 0, 0, 21, 27, 0, 26, 0, 1, 1, 1, 0, 0]' : 0.386778}", "{'[5, 5, 0, 3, 4, 0, 0, 0, 21, 27, 0, 26, 0, 1, 1, 1, 0, 0]' : 0.386898}", "{'[5, 5, 0, 3, 4, 0, 0, 0, 21, 27, 0, 26, 0, 1, 1, 1, 0, 0]' : 0.387644}", "{'[5, 5, 0, 3, 4, 0, 0, 0, 21, 27, 0, 26, 0, 1, 1, 1, 0, 0]' : 0.386473}", "{'[5, 5, 0, 3, 4, 0, 0, 0, 21, 27, 0, 26, 0, 1, 1, 1, 0, 0]' : 0.386391}", "{'[5, 5, 0, 3, 4, 0, 0, 0, 21, 27, 0, 26, 0, 1, 1, 1, 0, 0]' : 0.386506}"]
returning from 'run': {'[5, 5, 0, 3, 4, 0, 0, 0, 21, 27, 0, 26, 0, 1, 1, 1, 0, 0]': ([0.386663, 0.38696, 0.386772, 0.386691, 0.386738, 0.386764, 0.386613, 0.386655, 0.386585, 0.386652, 0.387289, 0.386796, 0.386685, 0.386903, 0.386636, 0.3871, 0.386692, 0.3867, 0.387024, 0.386981, 0.386895, 0.386659, 0.386612, 0.38659, 0.386778, 0.386898, 0.387644, 0.386473, 0.386391, 0.386506], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 5, 0, 3, 4, 0, 0, 0, 21, 27, 0, 26, 0, 1, 1, 1, 0, 0]': ([0.386663, 0.38696, 0.386772, 0.386691, 0.386738, 0.386764, 0.386613, 0.386655, 0.386585, 0.386652, 0.387289, 0.386796, 0.386685, 0.386903, 0.386636, 0.3871, 0.386692, 0.3867, 0.387024, 0.386981, 0.386895, 0.386659, 0.386612, 0.38659, 0.386778, 0.386898, 0.387644, 0.386473, 0.386391, 0.386506], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		149
        Multiplications: 	38
        Divisions: 		0
        Logical: 		0
        Reads: 			337
        Writes: 		68
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest41.exe __orio_perftest41.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest41.exe  
Program Test Output: 
{'[5, 1, 5, 4, 5, 5, 1, 0, 12, 0, 0, 1, 0, 1, 1, 0, 0, 1]' : 0.776155}
{'[5, 1, 5, 4, 5, 5, 1, 0, 12, 0, 0, 1, 0, 1, 1, 0, 0, 1]' : 0.778398}
{'[5, 1, 5, 4, 5, 5, 1, 0, 12, 0, 0, 1, 0, 1, 1, 0, 0, 1]' : 0.778938}
{'[5, 1, 5, 4, 5, 5, 1, 0, 12, 0, 0, 1, 0, 1, 1, 0, 0, 1]' : 0.77624}
{'[5, 1, 5, 4, 5, 5, 1, 0, 12, 0, 0, 1, 0, 1, 1, 0, 0, 1]' : 0.776683}
{'[5, 1, 5, 4, 5, 5, 1, 0, 12, 0, 0, 1, 0, 1, 1, 0, 0, 1]' : 0.776391}
{'[5, 1, 5, 4, 5, 5, 1, 0, 12, 0, 0, 1, 0, 1, 1, 0, 0, 1]' : 0.776099}
{'[5, 1, 5, 4, 5, 5, 1, 0, 12, 0, 0, 1, 0, 1, 1, 0, 0, 1]' : 0.776593}
{'[5, 1, 5, 4, 5, 5, 1, 0, 12, 0, 0, 1, 0, 1, 1, 0, 0, 1]' : 0.776911}
{'[5, 1, 5, 4, 5, 5, 1, 0, 12, 0, 0, 1, 0, 1, 1, 0, 0, 1]' : 0.77649}
{'[5, 1, 5, 4, 5, 5, 1, 0, 12, 0, 0, 1, 0, 1, 1, 0, 0, 1]' : 0.776741}
{'[5, 1, 5, 4, 5, 5, 1, 0, 12, 0, 0, 1, 0, 1, 1, 0, 0, 1]' : 0.776504}
{'[5, 1, 5, 4, 5, 5, 1, 0, 12, 0, 0, 1, 0, 1, 1, 0, 0, 1]' : 0.776445}
{'[5, 1, 5, 4, 5, 5, 1, 0, 12, 0, 0, 1, 0, 1, 1, 0, 0, 1]' : 0.776754}
{'[5, 1, 5, 4, 5, 5, 1, 0, 12, 0, 0, 1, 0, 1, 1, 0, 0, 1]' : 0.776045}
{'[5, 1, 5, 4, 5, 5, 1, 0, 12, 0, 0, 1, 0, 1, 1, 0, 0, 1]' : 0.776956}
{'[5, 1, 5, 4, 5, 5, 1, 0, 12, 0, 0, 1, 0, 1, 1, 0, 0, 1]' : 0.776181}
{'[5, 1, 5, 4, 5, 5, 1, 0, 12, 0, 0, 1, 0, 1, 1, 0, 0, 1]' : 0.776005}
{'[5, 1, 5, 4, 5, 5, 1, 0, 12, 0, 0, 1, 0, 1, 1, 0, 0, 1]' : 0.775738}
{'[5, 1, 5, 4, 5, 5, 1, 0, 12, 0, 0, 1, 0, 1, 1, 0, 0, 1]' : 0.776571}
{'[5, 1, 5, 4, 5, 5, 1, 0, 12, 0, 0, 1, 0, 1, 1, 0, 0, 1]' : 0.776265}
{'[5, 1, 5, 4, 5, 5, 1, 0, 12, 0, 0, 1, 0, 1, 1, 0, 0, 1]' : 0.77673}
{'[5, 1, 5, 4, 5, 5, 1, 0, 12, 0, 0, 1, 0, 1, 1, 0, 0, 1]' : 0.776913}
{'[5, 1, 5, 4, 5, 5, 1, 0, 12, 0, 0, 1, 0, 1, 1, 0, 0, 1]' : 0.784912}
{'[5, 1, 5, 4, 5, 5, 1, 0, 12, 0, 0, 1, 0, 1, 1, 0, 0, 1]' : 0.782257}
{'[5, 1, 5, 4, 5, 5, 1, 0, 12, 0, 0, 1, 0, 1, 1, 0, 0, 1]' : 0.776215}
{'[5, 1, 5, 4, 5, 5, 1, 0, 12, 0, 0, 1, 0, 1, 1, 0, 0, 1]' : 0.776028}
{'[5, 1, 5, 4, 5, 5, 1, 0, 12, 0, 0, 1, 0, 1, 1, 0, 0, 1]' : 0.776155}
{'[5, 1, 5, 4, 5, 5, 1, 0, 12, 0, 0, 1, 0, 1, 1, 0, 0, 1]' : 0.776929}
{'[5, 1, 5, 4, 5, 5, 1, 0, 12, 0, 0, 1, 0, 1, 1, 0, 0, 1]' : 0.776328}

out:
 ["{'[5, 1, 5, 4, 5, 5, 1, 0, 12, 0, 0, 1, 0, 1, 1, 0, 0, 1]' : 0.776155}", "{'[5, 1, 5, 4, 5, 5, 1, 0, 12, 0, 0, 1, 0, 1, 1, 0, 0, 1]' : 0.778398}", "{'[5, 1, 5, 4, 5, 5, 1, 0, 12, 0, 0, 1, 0, 1, 1, 0, 0, 1]' : 0.778938}", "{'[5, 1, 5, 4, 5, 5, 1, 0, 12, 0, 0, 1, 0, 1, 1, 0, 0, 1]' : 0.77624}", "{'[5, 1, 5, 4, 5, 5, 1, 0, 12, 0, 0, 1, 0, 1, 1, 0, 0, 1]' : 0.776683}", "{'[5, 1, 5, 4, 5, 5, 1, 0, 12, 0, 0, 1, 0, 1, 1, 0, 0, 1]' : 0.776391}", "{'[5, 1, 5, 4, 5, 5, 1, 0, 12, 0, 0, 1, 0, 1, 1, 0, 0, 1]' : 0.776099}", "{'[5, 1, 5, 4, 5, 5, 1, 0, 12, 0, 0, 1, 0, 1, 1, 0, 0, 1]' : 0.776593}", "{'[5, 1, 5, 4, 5, 5, 1, 0, 12, 0, 0, 1, 0, 1, 1, 0, 0, 1]' : 0.776911}", "{'[5, 1, 5, 4, 5, 5, 1, 0, 12, 0, 0, 1, 0, 1, 1, 0, 0, 1]' : 0.77649}", "{'[5, 1, 5, 4, 5, 5, 1, 0, 12, 0, 0, 1, 0, 1, 1, 0, 0, 1]' : 0.776741}", "{'[5, 1, 5, 4, 5, 5, 1, 0, 12, 0, 0, 1, 0, 1, 1, 0, 0, 1]' : 0.776504}", "{'[5, 1, 5, 4, 5, 5, 1, 0, 12, 0, 0, 1, 0, 1, 1, 0, 0, 1]' : 0.776445}", "{'[5, 1, 5, 4, 5, 5, 1, 0, 12, 0, 0, 1, 0, 1, 1, 0, 0, 1]' : 0.776754}", "{'[5, 1, 5, 4, 5, 5, 1, 0, 12, 0, 0, 1, 0, 1, 1, 0, 0, 1]' : 0.776045}", "{'[5, 1, 5, 4, 5, 5, 1, 0, 12, 0, 0, 1, 0, 1, 1, 0, 0, 1]' : 0.776956}", "{'[5, 1, 5, 4, 5, 5, 1, 0, 12, 0, 0, 1, 0, 1, 1, 0, 0, 1]' : 0.776181}", "{'[5, 1, 5, 4, 5, 5, 1, 0, 12, 0, 0, 1, 0, 1, 1, 0, 0, 1]' : 0.776005}", "{'[5, 1, 5, 4, 5, 5, 1, 0, 12, 0, 0, 1, 0, 1, 1, 0, 0, 1]' : 0.775738}", "{'[5, 1, 5, 4, 5, 5, 1, 0, 12, 0, 0, 1, 0, 1, 1, 0, 0, 1]' : 0.776571}", "{'[5, 1, 5, 4, 5, 5, 1, 0, 12, 0, 0, 1, 0, 1, 1, 0, 0, 1]' : 0.776265}", "{'[5, 1, 5, 4, 5, 5, 1, 0, 12, 0, 0, 1, 0, 1, 1, 0, 0, 1]' : 0.77673}", "{'[5, 1, 5, 4, 5, 5, 1, 0, 12, 0, 0, 1, 0, 1, 1, 0, 0, 1]' : 0.776913}", "{'[5, 1, 5, 4, 5, 5, 1, 0, 12, 0, 0, 1, 0, 1, 1, 0, 0, 1]' : 0.784912}", "{'[5, 1, 5, 4, 5, 5, 1, 0, 12, 0, 0, 1, 0, 1, 1, 0, 0, 1]' : 0.782257}", "{'[5, 1, 5, 4, 5, 5, 1, 0, 12, 0, 0, 1, 0, 1, 1, 0, 0, 1]' : 0.776215}", "{'[5, 1, 5, 4, 5, 5, 1, 0, 12, 0, 0, 1, 0, 1, 1, 0, 0, 1]' : 0.776028}", "{'[5, 1, 5, 4, 5, 5, 1, 0, 12, 0, 0, 1, 0, 1, 1, 0, 0, 1]' : 0.776155}", "{'[5, 1, 5, 4, 5, 5, 1, 0, 12, 0, 0, 1, 0, 1, 1, 0, 0, 1]' : 0.776929}", "{'[5, 1, 5, 4, 5, 5, 1, 0, 12, 0, 0, 1, 0, 1, 1, 0, 0, 1]' : 0.776328}"]
returning from 'run': {'[5, 1, 5, 4, 5, 5, 1, 0, 12, 0, 0, 1, 0, 1, 1, 0, 0, 1]': ([0.776155, 0.778398, 0.778938, 0.77624, 0.776683, 0.776391, 0.776099, 0.776593, 0.776911, 0.77649, 0.776741, 0.776504, 0.776445, 0.776754, 0.776045, 0.776956, 0.776181, 0.776005, 0.775738, 0.776571, 0.776265, 0.77673, 0.776913, 0.784912, 0.782257, 0.776215, 0.776028, 0.776155, 0.776929, 0.776328], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 1, 5, 4, 5, 5, 1, 0, 12, 0, 0, 1, 0, 1, 1, 0, 0, 1]': ([0.776155, 0.778398, 0.778938, 0.77624, 0.776683, 0.776391, 0.776099, 0.776593, 0.776911, 0.77649, 0.776741, 0.776504, 0.776445, 0.776754, 0.776045, 0.776956, 0.776181, 0.776005, 0.775738, 0.776571, 0.776265, 0.77673, 0.776913, 0.784912, 0.782257, 0.776215, 0.776028, 0.776155, 0.776929, 0.776328], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	23
        Max loop nest depth: 	5
        Additions: 		782
        Multiplications: 	324
        Divisions: 		0
        Logical: 		0
        Reads: 			1591
        Writes: 		307
        Comparisons:		23
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest42.exe __orio_perftest42.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest42.exe  
Program Test Output: 
{'[0, 2, 3, 5, 1, 6, 1, 0, 24, 0, 6, 8, 1, 0, 0, 1, 1, 0]' : 0.288994}
{'[0, 2, 3, 5, 1, 6, 1, 0, 24, 0, 6, 8, 1, 0, 0, 1, 1, 0]' : 0.288796}
{'[0, 2, 3, 5, 1, 6, 1, 0, 24, 0, 6, 8, 1, 0, 0, 1, 1, 0]' : 0.288698}
{'[0, 2, 3, 5, 1, 6, 1, 0, 24, 0, 6, 8, 1, 0, 0, 1, 1, 0]' : 0.287844}
{'[0, 2, 3, 5, 1, 6, 1, 0, 24, 0, 6, 8, 1, 0, 0, 1, 1, 0]' : 0.295313}
{'[0, 2, 3, 5, 1, 6, 1, 0, 24, 0, 6, 8, 1, 0, 0, 1, 1, 0]' : 0.291248}
{'[0, 2, 3, 5, 1, 6, 1, 0, 24, 0, 6, 8, 1, 0, 0, 1, 1, 0]' : 0.287925}
{'[0, 2, 3, 5, 1, 6, 1, 0, 24, 0, 6, 8, 1, 0, 0, 1, 1, 0]' : 0.288092}
{'[0, 2, 3, 5, 1, 6, 1, 0, 24, 0, 6, 8, 1, 0, 0, 1, 1, 0]' : 0.288137}
{'[0, 2, 3, 5, 1, 6, 1, 0, 24, 0, 6, 8, 1, 0, 0, 1, 1, 0]' : 0.288741}
{'[0, 2, 3, 5, 1, 6, 1, 0, 24, 0, 6, 8, 1, 0, 0, 1, 1, 0]' : 0.287525}
{'[0, 2, 3, 5, 1, 6, 1, 0, 24, 0, 6, 8, 1, 0, 0, 1, 1, 0]' : 0.288079}
{'[0, 2, 3, 5, 1, 6, 1, 0, 24, 0, 6, 8, 1, 0, 0, 1, 1, 0]' : 0.288017}
{'[0, 2, 3, 5, 1, 6, 1, 0, 24, 0, 6, 8, 1, 0, 0, 1, 1, 0]' : 0.28854}
{'[0, 2, 3, 5, 1, 6, 1, 0, 24, 0, 6, 8, 1, 0, 0, 1, 1, 0]' : 0.287303}
{'[0, 2, 3, 5, 1, 6, 1, 0, 24, 0, 6, 8, 1, 0, 0, 1, 1, 0]' : 0.28737}
{'[0, 2, 3, 5, 1, 6, 1, 0, 24, 0, 6, 8, 1, 0, 0, 1, 1, 0]' : 0.287941}
{'[0, 2, 3, 5, 1, 6, 1, 0, 24, 0, 6, 8, 1, 0, 0, 1, 1, 0]' : 0.288431}
{'[0, 2, 3, 5, 1, 6, 1, 0, 24, 0, 6, 8, 1, 0, 0, 1, 1, 0]' : 0.288153}
{'[0, 2, 3, 5, 1, 6, 1, 0, 24, 0, 6, 8, 1, 0, 0, 1, 1, 0]' : 0.288785}
{'[0, 2, 3, 5, 1, 6, 1, 0, 24, 0, 6, 8, 1, 0, 0, 1, 1, 0]' : 0.288175}
{'[0, 2, 3, 5, 1, 6, 1, 0, 24, 0, 6, 8, 1, 0, 0, 1, 1, 0]' : 0.28933}
{'[0, 2, 3, 5, 1, 6, 1, 0, 24, 0, 6, 8, 1, 0, 0, 1, 1, 0]' : 0.288147}
{'[0, 2, 3, 5, 1, 6, 1, 0, 24, 0, 6, 8, 1, 0, 0, 1, 1, 0]' : 0.28848}
{'[0, 2, 3, 5, 1, 6, 1, 0, 24, 0, 6, 8, 1, 0, 0, 1, 1, 0]' : 0.288061}
{'[0, 2, 3, 5, 1, 6, 1, 0, 24, 0, 6, 8, 1, 0, 0, 1, 1, 0]' : 0.288279}
{'[0, 2, 3, 5, 1, 6, 1, 0, 24, 0, 6, 8, 1, 0, 0, 1, 1, 0]' : 0.288236}
{'[0, 2, 3, 5, 1, 6, 1, 0, 24, 0, 6, 8, 1, 0, 0, 1, 1, 0]' : 0.288593}
{'[0, 2, 3, 5, 1, 6, 1, 0, 24, 0, 6, 8, 1, 0, 0, 1, 1, 0]' : 0.288519}
{'[0, 2, 3, 5, 1, 6, 1, 0, 24, 0, 6, 8, 1, 0, 0, 1, 1, 0]' : 0.288628}

out:
 ["{'[0, 2, 3, 5, 1, 6, 1, 0, 24, 0, 6, 8, 1, 0, 0, 1, 1, 0]' : 0.288994}", "{'[0, 2, 3, 5, 1, 6, 1, 0, 24, 0, 6, 8, 1, 0, 0, 1, 1, 0]' : 0.288796}", "{'[0, 2, 3, 5, 1, 6, 1, 0, 24, 0, 6, 8, 1, 0, 0, 1, 1, 0]' : 0.288698}", "{'[0, 2, 3, 5, 1, 6, 1, 0, 24, 0, 6, 8, 1, 0, 0, 1, 1, 0]' : 0.287844}", "{'[0, 2, 3, 5, 1, 6, 1, 0, 24, 0, 6, 8, 1, 0, 0, 1, 1, 0]' : 0.295313}", "{'[0, 2, 3, 5, 1, 6, 1, 0, 24, 0, 6, 8, 1, 0, 0, 1, 1, 0]' : 0.291248}", "{'[0, 2, 3, 5, 1, 6, 1, 0, 24, 0, 6, 8, 1, 0, 0, 1, 1, 0]' : 0.287925}", "{'[0, 2, 3, 5, 1, 6, 1, 0, 24, 0, 6, 8, 1, 0, 0, 1, 1, 0]' : 0.288092}", "{'[0, 2, 3, 5, 1, 6, 1, 0, 24, 0, 6, 8, 1, 0, 0, 1, 1, 0]' : 0.288137}", "{'[0, 2, 3, 5, 1, 6, 1, 0, 24, 0, 6, 8, 1, 0, 0, 1, 1, 0]' : 0.288741}", "{'[0, 2, 3, 5, 1, 6, 1, 0, 24, 0, 6, 8, 1, 0, 0, 1, 1, 0]' : 0.287525}", "{'[0, 2, 3, 5, 1, 6, 1, 0, 24, 0, 6, 8, 1, 0, 0, 1, 1, 0]' : 0.288079}", "{'[0, 2, 3, 5, 1, 6, 1, 0, 24, 0, 6, 8, 1, 0, 0, 1, 1, 0]' : 0.288017}", "{'[0, 2, 3, 5, 1, 6, 1, 0, 24, 0, 6, 8, 1, 0, 0, 1, 1, 0]' : 0.28854}", "{'[0, 2, 3, 5, 1, 6, 1, 0, 24, 0, 6, 8, 1, 0, 0, 1, 1, 0]' : 0.287303}", "{'[0, 2, 3, 5, 1, 6, 1, 0, 24, 0, 6, 8, 1, 0, 0, 1, 1, 0]' : 0.28737}", "{'[0, 2, 3, 5, 1, 6, 1, 0, 24, 0, 6, 8, 1, 0, 0, 1, 1, 0]' : 0.287941}", "{'[0, 2, 3, 5, 1, 6, 1, 0, 24, 0, 6, 8, 1, 0, 0, 1, 1, 0]' : 0.288431}", "{'[0, 2, 3, 5, 1, 6, 1, 0, 24, 0, 6, 8, 1, 0, 0, 1, 1, 0]' : 0.288153}", "{'[0, 2, 3, 5, 1, 6, 1, 0, 24, 0, 6, 8, 1, 0, 0, 1, 1, 0]' : 0.288785}", "{'[0, 2, 3, 5, 1, 6, 1, 0, 24, 0, 6, 8, 1, 0, 0, 1, 1, 0]' : 0.288175}", "{'[0, 2, 3, 5, 1, 6, 1, 0, 24, 0, 6, 8, 1, 0, 0, 1, 1, 0]' : 0.28933}", "{'[0, 2, 3, 5, 1, 6, 1, 0, 24, 0, 6, 8, 1, 0, 0, 1, 1, 0]' : 0.288147}", "{'[0, 2, 3, 5, 1, 6, 1, 0, 24, 0, 6, 8, 1, 0, 0, 1, 1, 0]' : 0.28848}", "{'[0, 2, 3, 5, 1, 6, 1, 0, 24, 0, 6, 8, 1, 0, 0, 1, 1, 0]' : 0.288061}", "{'[0, 2, 3, 5, 1, 6, 1, 0, 24, 0, 6, 8, 1, 0, 0, 1, 1, 0]' : 0.288279}", "{'[0, 2, 3, 5, 1, 6, 1, 0, 24, 0, 6, 8, 1, 0, 0, 1, 1, 0]' : 0.288236}", "{'[0, 2, 3, 5, 1, 6, 1, 0, 24, 0, 6, 8, 1, 0, 0, 1, 1, 0]' : 0.288593}", "{'[0, 2, 3, 5, 1, 6, 1, 0, 24, 0, 6, 8, 1, 0, 0, 1, 1, 0]' : 0.288519}", "{'[0, 2, 3, 5, 1, 6, 1, 0, 24, 0, 6, 8, 1, 0, 0, 1, 1, 0]' : 0.288628}"]
returning from 'run': {'[0, 2, 3, 5, 1, 6, 1, 0, 24, 0, 6, 8, 1, 0, 0, 1, 1, 0]': ([0.288994, 0.288796, 0.288698, 0.287844, 0.295313, 0.291248, 0.287925, 0.288092, 0.288137, 0.288741, 0.287525, 0.288079, 0.288017, 0.28854, 0.287303, 0.28737, 0.287941, 0.288431, 0.288153, 0.288785, 0.288175, 0.28933, 0.288147, 0.28848, 0.288061, 0.288279, 0.288236, 0.288593, 0.288519, 0.288628], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 3, 5, 1, 6, 1, 0, 24, 0, 6, 8, 1, 0, 0, 1, 1, 0]': ([0.288994, 0.288796, 0.288698, 0.287844, 0.295313, 0.291248, 0.287925, 0.288092, 0.288137, 0.288741, 0.287525, 0.288079, 0.288017, 0.28854, 0.287303, 0.28737, 0.287941, 0.288431, 0.288153, 0.288785, 0.288175, 0.28933, 0.288147, 0.28848, 0.288061, 0.288279, 0.288236, 0.288593, 0.288519, 0.288628], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	51
        Max loop nest depth: 	5
        Additions: 		2813
        Multiplications: 	954
        Divisions: 		0
        Logical: 		0
        Reads: 			5489
        Writes: 		1037
        Comparisons:		51
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest43.exe __orio_perftest43.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest43.exe  
Program Test Output: 
{'[6, 1, 4, 0, 6, 0, 0, 1, 18, 7, 0, 18, 0, 2, 0, 1, 0, 0]' : 0.364237}
{'[6, 1, 4, 0, 6, 0, 0, 1, 18, 7, 0, 18, 0, 2, 0, 1, 0, 0]' : 0.365007}
{'[6, 1, 4, 0, 6, 0, 0, 1, 18, 7, 0, 18, 0, 2, 0, 1, 0, 0]' : 0.364208}
{'[6, 1, 4, 0, 6, 0, 0, 1, 18, 7, 0, 18, 0, 2, 0, 1, 0, 0]' : 0.362602}
{'[6, 1, 4, 0, 6, 0, 0, 1, 18, 7, 0, 18, 0, 2, 0, 1, 0, 0]' : 0.364203}
{'[6, 1, 4, 0, 6, 0, 0, 1, 18, 7, 0, 18, 0, 2, 0, 1, 0, 0]' : 0.361336}
{'[6, 1, 4, 0, 6, 0, 0, 1, 18, 7, 0, 18, 0, 2, 0, 1, 0, 0]' : 0.365915}
{'[6, 1, 4, 0, 6, 0, 0, 1, 18, 7, 0, 18, 0, 2, 0, 1, 0, 0]' : 0.364506}
{'[6, 1, 4, 0, 6, 0, 0, 1, 18, 7, 0, 18, 0, 2, 0, 1, 0, 0]' : 0.361439}
{'[6, 1, 4, 0, 6, 0, 0, 1, 18, 7, 0, 18, 0, 2, 0, 1, 0, 0]' : 0.362547}
{'[6, 1, 4, 0, 6, 0, 0, 1, 18, 7, 0, 18, 0, 2, 0, 1, 0, 0]' : 0.364985}
{'[6, 1, 4, 0, 6, 0, 0, 1, 18, 7, 0, 18, 0, 2, 0, 1, 0, 0]' : 0.362747}
{'[6, 1, 4, 0, 6, 0, 0, 1, 18, 7, 0, 18, 0, 2, 0, 1, 0, 0]' : 0.362722}
{'[6, 1, 4, 0, 6, 0, 0, 1, 18, 7, 0, 18, 0, 2, 0, 1, 0, 0]' : 0.361585}
{'[6, 1, 4, 0, 6, 0, 0, 1, 18, 7, 0, 18, 0, 2, 0, 1, 0, 0]' : 0.362929}
{'[6, 1, 4, 0, 6, 0, 0, 1, 18, 7, 0, 18, 0, 2, 0, 1, 0, 0]' : 0.363534}
{'[6, 1, 4, 0, 6, 0, 0, 1, 18, 7, 0, 18, 0, 2, 0, 1, 0, 0]' : 0.361323}
{'[6, 1, 4, 0, 6, 0, 0, 1, 18, 7, 0, 18, 0, 2, 0, 1, 0, 0]' : 0.362024}
{'[6, 1, 4, 0, 6, 0, 0, 1, 18, 7, 0, 18, 0, 2, 0, 1, 0, 0]' : 0.364201}
{'[6, 1, 4, 0, 6, 0, 0, 1, 18, 7, 0, 18, 0, 2, 0, 1, 0, 0]' : 0.362938}
{'[6, 1, 4, 0, 6, 0, 0, 1, 18, 7, 0, 18, 0, 2, 0, 1, 0, 0]' : 0.362565}
{'[6, 1, 4, 0, 6, 0, 0, 1, 18, 7, 0, 18, 0, 2, 0, 1, 0, 0]' : 0.363089}
{'[6, 1, 4, 0, 6, 0, 0, 1, 18, 7, 0, 18, 0, 2, 0, 1, 0, 0]' : 0.362676}
{'[6, 1, 4, 0, 6, 0, 0, 1, 18, 7, 0, 18, 0, 2, 0, 1, 0, 0]' : 0.362846}
{'[6, 1, 4, 0, 6, 0, 0, 1, 18, 7, 0, 18, 0, 2, 0, 1, 0, 0]' : 0.362189}
{'[6, 1, 4, 0, 6, 0, 0, 1, 18, 7, 0, 18, 0, 2, 0, 1, 0, 0]' : 0.362571}
{'[6, 1, 4, 0, 6, 0, 0, 1, 18, 7, 0, 18, 0, 2, 0, 1, 0, 0]' : 0.361847}
{'[6, 1, 4, 0, 6, 0, 0, 1, 18, 7, 0, 18, 0, 2, 0, 1, 0, 0]' : 0.361684}
{'[6, 1, 4, 0, 6, 0, 0, 1, 18, 7, 0, 18, 0, 2, 0, 1, 0, 0]' : 0.362242}
{'[6, 1, 4, 0, 6, 0, 0, 1, 18, 7, 0, 18, 0, 2, 0, 1, 0, 0]' : 0.362832}

out:
 ["{'[6, 1, 4, 0, 6, 0, 0, 1, 18, 7, 0, 18, 0, 2, 0, 1, 0, 0]' : 0.364237}", "{'[6, 1, 4, 0, 6, 0, 0, 1, 18, 7, 0, 18, 0, 2, 0, 1, 0, 0]' : 0.365007}", "{'[6, 1, 4, 0, 6, 0, 0, 1, 18, 7, 0, 18, 0, 2, 0, 1, 0, 0]' : 0.364208}", "{'[6, 1, 4, 0, 6, 0, 0, 1, 18, 7, 0, 18, 0, 2, 0, 1, 0, 0]' : 0.362602}", "{'[6, 1, 4, 0, 6, 0, 0, 1, 18, 7, 0, 18, 0, 2, 0, 1, 0, 0]' : 0.364203}", "{'[6, 1, 4, 0, 6, 0, 0, 1, 18, 7, 0, 18, 0, 2, 0, 1, 0, 0]' : 0.361336}", "{'[6, 1, 4, 0, 6, 0, 0, 1, 18, 7, 0, 18, 0, 2, 0, 1, 0, 0]' : 0.365915}", "{'[6, 1, 4, 0, 6, 0, 0, 1, 18, 7, 0, 18, 0, 2, 0, 1, 0, 0]' : 0.364506}", "{'[6, 1, 4, 0, 6, 0, 0, 1, 18, 7, 0, 18, 0, 2, 0, 1, 0, 0]' : 0.361439}", "{'[6, 1, 4, 0, 6, 0, 0, 1, 18, 7, 0, 18, 0, 2, 0, 1, 0, 0]' : 0.362547}", "{'[6, 1, 4, 0, 6, 0, 0, 1, 18, 7, 0, 18, 0, 2, 0, 1, 0, 0]' : 0.364985}", "{'[6, 1, 4, 0, 6, 0, 0, 1, 18, 7, 0, 18, 0, 2, 0, 1, 0, 0]' : 0.362747}", "{'[6, 1, 4, 0, 6, 0, 0, 1, 18, 7, 0, 18, 0, 2, 0, 1, 0, 0]' : 0.362722}", "{'[6, 1, 4, 0, 6, 0, 0, 1, 18, 7, 0, 18, 0, 2, 0, 1, 0, 0]' : 0.361585}", "{'[6, 1, 4, 0, 6, 0, 0, 1, 18, 7, 0, 18, 0, 2, 0, 1, 0, 0]' : 0.362929}", "{'[6, 1, 4, 0, 6, 0, 0, 1, 18, 7, 0, 18, 0, 2, 0, 1, 0, 0]' : 0.363534}", "{'[6, 1, 4, 0, 6, 0, 0, 1, 18, 7, 0, 18, 0, 2, 0, 1, 0, 0]' : 0.361323}", "{'[6, 1, 4, 0, 6, 0, 0, 1, 18, 7, 0, 18, 0, 2, 0, 1, 0, 0]' : 0.362024}", "{'[6, 1, 4, 0, 6, 0, 0, 1, 18, 7, 0, 18, 0, 2, 0, 1, 0, 0]' : 0.364201}", "{'[6, 1, 4, 0, 6, 0, 0, 1, 18, 7, 0, 18, 0, 2, 0, 1, 0, 0]' : 0.362938}", "{'[6, 1, 4, 0, 6, 0, 0, 1, 18, 7, 0, 18, 0, 2, 0, 1, 0, 0]' : 0.362565}", "{'[6, 1, 4, 0, 6, 0, 0, 1, 18, 7, 0, 18, 0, 2, 0, 1, 0, 0]' : 0.363089}", "{'[6, 1, 4, 0, 6, 0, 0, 1, 18, 7, 0, 18, 0, 2, 0, 1, 0, 0]' : 0.362676}", "{'[6, 1, 4, 0, 6, 0, 0, 1, 18, 7, 0, 18, 0, 2, 0, 1, 0, 0]' : 0.362846}", "{'[6, 1, 4, 0, 6, 0, 0, 1, 18, 7, 0, 18, 0, 2, 0, 1, 0, 0]' : 0.362189}", "{'[6, 1, 4, 0, 6, 0, 0, 1, 18, 7, 0, 18, 0, 2, 0, 1, 0, 0]' : 0.362571}", "{'[6, 1, 4, 0, 6, 0, 0, 1, 18, 7, 0, 18, 0, 2, 0, 1, 0, 0]' : 0.361847}", "{'[6, 1, 4, 0, 6, 0, 0, 1, 18, 7, 0, 18, 0, 2, 0, 1, 0, 0]' : 0.361684}", "{'[6, 1, 4, 0, 6, 0, 0, 1, 18, 7, 0, 18, 0, 2, 0, 1, 0, 0]' : 0.362242}", "{'[6, 1, 4, 0, 6, 0, 0, 1, 18, 7, 0, 18, 0, 2, 0, 1, 0, 0]' : 0.362832}"]
returning from 'run': {'[6, 1, 4, 0, 6, 0, 0, 1, 18, 7, 0, 18, 0, 2, 0, 1, 0, 0]': ([0.364237, 0.365007, 0.364208, 0.362602, 0.364203, 0.361336, 0.365915, 0.364506, 0.361439, 0.362547, 0.364985, 0.362747, 0.362722, 0.361585, 0.362929, 0.363534, 0.361323, 0.362024, 0.364201, 0.362938, 0.362565, 0.363089, 0.362676, 0.362846, 0.362189, 0.362571, 0.361847, 0.361684, 0.362242, 0.362832], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 1, 4, 0, 6, 0, 0, 1, 18, 7, 0, 18, 0, 2, 0, 1, 0, 0]': ([0.364237, 0.365007, 0.364208, 0.362602, 0.364203, 0.361336, 0.365915, 0.364506, 0.361439, 0.362547, 0.364985, 0.362747, 0.362722, 0.361585, 0.362929, 0.363534, 0.361323, 0.362024, 0.364201, 0.362938, 0.362565, 0.363089, 0.362676, 0.362846, 0.362189, 0.362571, 0.361847, 0.361684, 0.362242, 0.362832], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	5
        Additions: 		2103
        Multiplications: 	540
        Divisions: 		0
        Logical: 		0
        Reads: 			3266
        Writes: 		342
        Comparisons:		22
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest44.exe __orio_perftest44.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest44.exe  
Program Test Output: 
{'[5, 6, 0, 4, 0, 3, 1, 1, 7, 0, 20, 23, 1, 0, 1, 0, 1, 1]' : 0.449879}
{'[5, 6, 0, 4, 0, 3, 1, 1, 7, 0, 20, 23, 1, 0, 1, 0, 1, 1]' : 0.449932}
{'[5, 6, 0, 4, 0, 3, 1, 1, 7, 0, 20, 23, 1, 0, 1, 0, 1, 1]' : 0.449975}
{'[5, 6, 0, 4, 0, 3, 1, 1, 7, 0, 20, 23, 1, 0, 1, 0, 1, 1]' : 0.449331}
{'[5, 6, 0, 4, 0, 3, 1, 1, 7, 0, 20, 23, 1, 0, 1, 0, 1, 1]' : 0.449683}
{'[5, 6, 0, 4, 0, 3, 1, 1, 7, 0, 20, 23, 1, 0, 1, 0, 1, 1]' : 0.449583}
{'[5, 6, 0, 4, 0, 3, 1, 1, 7, 0, 20, 23, 1, 0, 1, 0, 1, 1]' : 0.449858}
{'[5, 6, 0, 4, 0, 3, 1, 1, 7, 0, 20, 23, 1, 0, 1, 0, 1, 1]' : 0.449491}
{'[5, 6, 0, 4, 0, 3, 1, 1, 7, 0, 20, 23, 1, 0, 1, 0, 1, 1]' : 0.44957}
{'[5, 6, 0, 4, 0, 3, 1, 1, 7, 0, 20, 23, 1, 0, 1, 0, 1, 1]' : 0.450006}
{'[5, 6, 0, 4, 0, 3, 1, 1, 7, 0, 20, 23, 1, 0, 1, 0, 1, 1]' : 0.450234}
{'[5, 6, 0, 4, 0, 3, 1, 1, 7, 0, 20, 23, 1, 0, 1, 0, 1, 1]' : 0.449934}
{'[5, 6, 0, 4, 0, 3, 1, 1, 7, 0, 20, 23, 1, 0, 1, 0, 1, 1]' : 0.449795}
{'[5, 6, 0, 4, 0, 3, 1, 1, 7, 0, 20, 23, 1, 0, 1, 0, 1, 1]' : 0.450169}
{'[5, 6, 0, 4, 0, 3, 1, 1, 7, 0, 20, 23, 1, 0, 1, 0, 1, 1]' : 0.450006}
{'[5, 6, 0, 4, 0, 3, 1, 1, 7, 0, 20, 23, 1, 0, 1, 0, 1, 1]' : 0.450395}
{'[5, 6, 0, 4, 0, 3, 1, 1, 7, 0, 20, 23, 1, 0, 1, 0, 1, 1]' : 0.454818}
{'[5, 6, 0, 4, 0, 3, 1, 1, 7, 0, 20, 23, 1, 0, 1, 0, 1, 1]' : 0.450008}
{'[5, 6, 0, 4, 0, 3, 1, 1, 7, 0, 20, 23, 1, 0, 1, 0, 1, 1]' : 0.450797}
{'[5, 6, 0, 4, 0, 3, 1, 1, 7, 0, 20, 23, 1, 0, 1, 0, 1, 1]' : 0.450147}
{'[5, 6, 0, 4, 0, 3, 1, 1, 7, 0, 20, 23, 1, 0, 1, 0, 1, 1]' : 0.450549}
{'[5, 6, 0, 4, 0, 3, 1, 1, 7, 0, 20, 23, 1, 0, 1, 0, 1, 1]' : 0.450035}
{'[5, 6, 0, 4, 0, 3, 1, 1, 7, 0, 20, 23, 1, 0, 1, 0, 1, 1]' : 0.449972}
{'[5, 6, 0, 4, 0, 3, 1, 1, 7, 0, 20, 23, 1, 0, 1, 0, 1, 1]' : 0.451507}
{'[5, 6, 0, 4, 0, 3, 1, 1, 7, 0, 20, 23, 1, 0, 1, 0, 1, 1]' : 0.451916}
{'[5, 6, 0, 4, 0, 3, 1, 1, 7, 0, 20, 23, 1, 0, 1, 0, 1, 1]' : 0.450132}
{'[5, 6, 0, 4, 0, 3, 1, 1, 7, 0, 20, 23, 1, 0, 1, 0, 1, 1]' : 0.450081}
{'[5, 6, 0, 4, 0, 3, 1, 1, 7, 0, 20, 23, 1, 0, 1, 0, 1, 1]' : 0.44944}
{'[5, 6, 0, 4, 0, 3, 1, 1, 7, 0, 20, 23, 1, 0, 1, 0, 1, 1]' : 0.449696}
{'[5, 6, 0, 4, 0, 3, 1, 1, 7, 0, 20, 23, 1, 0, 1, 0, 1, 1]' : 0.44952}

out:
 ["{'[5, 6, 0, 4, 0, 3, 1, 1, 7, 0, 20, 23, 1, 0, 1, 0, 1, 1]' : 0.449879}", "{'[5, 6, 0, 4, 0, 3, 1, 1, 7, 0, 20, 23, 1, 0, 1, 0, 1, 1]' : 0.449932}", "{'[5, 6, 0, 4, 0, 3, 1, 1, 7, 0, 20, 23, 1, 0, 1, 0, 1, 1]' : 0.449975}", "{'[5, 6, 0, 4, 0, 3, 1, 1, 7, 0, 20, 23, 1, 0, 1, 0, 1, 1]' : 0.449331}", "{'[5, 6, 0, 4, 0, 3, 1, 1, 7, 0, 20, 23, 1, 0, 1, 0, 1, 1]' : 0.449683}", "{'[5, 6, 0, 4, 0, 3, 1, 1, 7, 0, 20, 23, 1, 0, 1, 0, 1, 1]' : 0.449583}", "{'[5, 6, 0, 4, 0, 3, 1, 1, 7, 0, 20, 23, 1, 0, 1, 0, 1, 1]' : 0.449858}", "{'[5, 6, 0, 4, 0, 3, 1, 1, 7, 0, 20, 23, 1, 0, 1, 0, 1, 1]' : 0.449491}", "{'[5, 6, 0, 4, 0, 3, 1, 1, 7, 0, 20, 23, 1, 0, 1, 0, 1, 1]' : 0.44957}", "{'[5, 6, 0, 4, 0, 3, 1, 1, 7, 0, 20, 23, 1, 0, 1, 0, 1, 1]' : 0.450006}", "{'[5, 6, 0, 4, 0, 3, 1, 1, 7, 0, 20, 23, 1, 0, 1, 0, 1, 1]' : 0.450234}", "{'[5, 6, 0, 4, 0, 3, 1, 1, 7, 0, 20, 23, 1, 0, 1, 0, 1, 1]' : 0.449934}", "{'[5, 6, 0, 4, 0, 3, 1, 1, 7, 0, 20, 23, 1, 0, 1, 0, 1, 1]' : 0.449795}", "{'[5, 6, 0, 4, 0, 3, 1, 1, 7, 0, 20, 23, 1, 0, 1, 0, 1, 1]' : 0.450169}", "{'[5, 6, 0, 4, 0, 3, 1, 1, 7, 0, 20, 23, 1, 0, 1, 0, 1, 1]' : 0.450006}", "{'[5, 6, 0, 4, 0, 3, 1, 1, 7, 0, 20, 23, 1, 0, 1, 0, 1, 1]' : 0.450395}", "{'[5, 6, 0, 4, 0, 3, 1, 1, 7, 0, 20, 23, 1, 0, 1, 0, 1, 1]' : 0.454818}", "{'[5, 6, 0, 4, 0, 3, 1, 1, 7, 0, 20, 23, 1, 0, 1, 0, 1, 1]' : 0.450008}", "{'[5, 6, 0, 4, 0, 3, 1, 1, 7, 0, 20, 23, 1, 0, 1, 0, 1, 1]' : 0.450797}", "{'[5, 6, 0, 4, 0, 3, 1, 1, 7, 0, 20, 23, 1, 0, 1, 0, 1, 1]' : 0.450147}", "{'[5, 6, 0, 4, 0, 3, 1, 1, 7, 0, 20, 23, 1, 0, 1, 0, 1, 1]' : 0.450549}", "{'[5, 6, 0, 4, 0, 3, 1, 1, 7, 0, 20, 23, 1, 0, 1, 0, 1, 1]' : 0.450035}", "{'[5, 6, 0, 4, 0, 3, 1, 1, 7, 0, 20, 23, 1, 0, 1, 0, 1, 1]' : 0.449972}", "{'[5, 6, 0, 4, 0, 3, 1, 1, 7, 0, 20, 23, 1, 0, 1, 0, 1, 1]' : 0.451507}", "{'[5, 6, 0, 4, 0, 3, 1, 1, 7, 0, 20, 23, 1, 0, 1, 0, 1, 1]' : 0.451916}", "{'[5, 6, 0, 4, 0, 3, 1, 1, 7, 0, 20, 23, 1, 0, 1, 0, 1, 1]' : 0.450132}", "{'[5, 6, 0, 4, 0, 3, 1, 1, 7, 0, 20, 23, 1, 0, 1, 0, 1, 1]' : 0.450081}", "{'[5, 6, 0, 4, 0, 3, 1, 1, 7, 0, 20, 23, 1, 0, 1, 0, 1, 1]' : 0.44944}", "{'[5, 6, 0, 4, 0, 3, 1, 1, 7, 0, 20, 23, 1, 0, 1, 0, 1, 1]' : 0.449696}", "{'[5, 6, 0, 4, 0, 3, 1, 1, 7, 0, 20, 23, 1, 0, 1, 0, 1, 1]' : 0.44952}"]
returning from 'run': {'[5, 6, 0, 4, 0, 3, 1, 1, 7, 0, 20, 23, 1, 0, 1, 0, 1, 1]': ([0.449879, 0.449932, 0.449975, 0.449331, 0.449683, 0.449583, 0.449858, 0.449491, 0.44957, 0.450006, 0.450234, 0.449934, 0.449795, 0.450169, 0.450006, 0.450395, 0.454818, 0.450008, 0.450797, 0.450147, 0.450549, 0.450035, 0.449972, 0.451507, 0.451916, 0.450132, 0.450081, 0.44944, 0.449696, 0.44952], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 6, 0, 4, 0, 3, 1, 1, 7, 0, 20, 23, 1, 0, 1, 0, 1, 1]': ([0.449879, 0.449932, 0.449975, 0.449331, 0.449683, 0.449583, 0.449858, 0.449491, 0.44957, 0.450006, 0.450234, 0.449934, 0.449795, 0.450169, 0.450006, 0.450395, 0.454818, 0.450008, 0.450797, 0.450147, 0.450549, 0.450035, 0.449972, 0.451507, 0.451916, 0.450132, 0.450081, 0.44944, 0.449696, 0.44952], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	6
        Additions: 		7572
        Multiplications: 	2262
        Divisions: 		0
        Logical: 		0
        Reads: 			11569
        Writes: 		1223
        Comparisons:		25
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest45.exe __orio_perftest45.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest45.exe  
Program Test Output: 
{'[3, 4, 0, 3, 5, 2, 0, 0, 5, 29, 0, 26, 1, 0, 0, 0, 1, 0]' : 0.349662}
{'[3, 4, 0, 3, 5, 2, 0, 0, 5, 29, 0, 26, 1, 0, 0, 0, 1, 0]' : 0.350937}
{'[3, 4, 0, 3, 5, 2, 0, 0, 5, 29, 0, 26, 1, 0, 0, 0, 1, 0]' : 0.350499}
{'[3, 4, 0, 3, 5, 2, 0, 0, 5, 29, 0, 26, 1, 0, 0, 0, 1, 0]' : 0.349495}
{'[3, 4, 0, 3, 5, 2, 0, 0, 5, 29, 0, 26, 1, 0, 0, 0, 1, 0]' : 0.350192}
{'[3, 4, 0, 3, 5, 2, 0, 0, 5, 29, 0, 26, 1, 0, 0, 0, 1, 0]' : 0.35029}
{'[3, 4, 0, 3, 5, 2, 0, 0, 5, 29, 0, 26, 1, 0, 0, 0, 1, 0]' : 0.350403}
{'[3, 4, 0, 3, 5, 2, 0, 0, 5, 29, 0, 26, 1, 0, 0, 0, 1, 0]' : 0.349919}
{'[3, 4, 0, 3, 5, 2, 0, 0, 5, 29, 0, 26, 1, 0, 0, 0, 1, 0]' : 0.350194}
{'[3, 4, 0, 3, 5, 2, 0, 0, 5, 29, 0, 26, 1, 0, 0, 0, 1, 0]' : 0.350871}
{'[3, 4, 0, 3, 5, 2, 0, 0, 5, 29, 0, 26, 1, 0, 0, 0, 1, 0]' : 0.350204}
{'[3, 4, 0, 3, 5, 2, 0, 0, 5, 29, 0, 26, 1, 0, 0, 0, 1, 0]' : 0.349292}
{'[3, 4, 0, 3, 5, 2, 0, 0, 5, 29, 0, 26, 1, 0, 0, 0, 1, 0]' : 0.350103}
{'[3, 4, 0, 3, 5, 2, 0, 0, 5, 29, 0, 26, 1, 0, 0, 0, 1, 0]' : 0.351263}
{'[3, 4, 0, 3, 5, 2, 0, 0, 5, 29, 0, 26, 1, 0, 0, 0, 1, 0]' : 0.349927}
{'[3, 4, 0, 3, 5, 2, 0, 0, 5, 29, 0, 26, 1, 0, 0, 0, 1, 0]' : 0.350321}
{'[3, 4, 0, 3, 5, 2, 0, 0, 5, 29, 0, 26, 1, 0, 0, 0, 1, 0]' : 0.350728}
{'[3, 4, 0, 3, 5, 2, 0, 0, 5, 29, 0, 26, 1, 0, 0, 0, 1, 0]' : 0.351001}
{'[3, 4, 0, 3, 5, 2, 0, 0, 5, 29, 0, 26, 1, 0, 0, 0, 1, 0]' : 0.350718}
{'[3, 4, 0, 3, 5, 2, 0, 0, 5, 29, 0, 26, 1, 0, 0, 0, 1, 0]' : 0.349888}
{'[3, 4, 0, 3, 5, 2, 0, 0, 5, 29, 0, 26, 1, 0, 0, 0, 1, 0]' : 0.351575}
{'[3, 4, 0, 3, 5, 2, 0, 0, 5, 29, 0, 26, 1, 0, 0, 0, 1, 0]' : 0.350795}
{'[3, 4, 0, 3, 5, 2, 0, 0, 5, 29, 0, 26, 1, 0, 0, 0, 1, 0]' : 0.351599}
{'[3, 4, 0, 3, 5, 2, 0, 0, 5, 29, 0, 26, 1, 0, 0, 0, 1, 0]' : 0.350408}
{'[3, 4, 0, 3, 5, 2, 0, 0, 5, 29, 0, 26, 1, 0, 0, 0, 1, 0]' : 0.349966}
{'[3, 4, 0, 3, 5, 2, 0, 0, 5, 29, 0, 26, 1, 0, 0, 0, 1, 0]' : 0.351291}
{'[3, 4, 0, 3, 5, 2, 0, 0, 5, 29, 0, 26, 1, 0, 0, 0, 1, 0]' : 0.350355}
{'[3, 4, 0, 3, 5, 2, 0, 0, 5, 29, 0, 26, 1, 0, 0, 0, 1, 0]' : 0.35001}
{'[3, 4, 0, 3, 5, 2, 0, 0, 5, 29, 0, 26, 1, 0, 0, 0, 1, 0]' : 0.349378}
{'[3, 4, 0, 3, 5, 2, 0, 0, 5, 29, 0, 26, 1, 0, 0, 0, 1, 0]' : 0.351028}

out:
 ["{'[3, 4, 0, 3, 5, 2, 0, 0, 5, 29, 0, 26, 1, 0, 0, 0, 1, 0]' : 0.349662}", "{'[3, 4, 0, 3, 5, 2, 0, 0, 5, 29, 0, 26, 1, 0, 0, 0, 1, 0]' : 0.350937}", "{'[3, 4, 0, 3, 5, 2, 0, 0, 5, 29, 0, 26, 1, 0, 0, 0, 1, 0]' : 0.350499}", "{'[3, 4, 0, 3, 5, 2, 0, 0, 5, 29, 0, 26, 1, 0, 0, 0, 1, 0]' : 0.349495}", "{'[3, 4, 0, 3, 5, 2, 0, 0, 5, 29, 0, 26, 1, 0, 0, 0, 1, 0]' : 0.350192}", "{'[3, 4, 0, 3, 5, 2, 0, 0, 5, 29, 0, 26, 1, 0, 0, 0, 1, 0]' : 0.35029}", "{'[3, 4, 0, 3, 5, 2, 0, 0, 5, 29, 0, 26, 1, 0, 0, 0, 1, 0]' : 0.350403}", "{'[3, 4, 0, 3, 5, 2, 0, 0, 5, 29, 0, 26, 1, 0, 0, 0, 1, 0]' : 0.349919}", "{'[3, 4, 0, 3, 5, 2, 0, 0, 5, 29, 0, 26, 1, 0, 0, 0, 1, 0]' : 0.350194}", "{'[3, 4, 0, 3, 5, 2, 0, 0, 5, 29, 0, 26, 1, 0, 0, 0, 1, 0]' : 0.350871}", "{'[3, 4, 0, 3, 5, 2, 0, 0, 5, 29, 0, 26, 1, 0, 0, 0, 1, 0]' : 0.350204}", "{'[3, 4, 0, 3, 5, 2, 0, 0, 5, 29, 0, 26, 1, 0, 0, 0, 1, 0]' : 0.349292}", "{'[3, 4, 0, 3, 5, 2, 0, 0, 5, 29, 0, 26, 1, 0, 0, 0, 1, 0]' : 0.350103}", "{'[3, 4, 0, 3, 5, 2, 0, 0, 5, 29, 0, 26, 1, 0, 0, 0, 1, 0]' : 0.351263}", "{'[3, 4, 0, 3, 5, 2, 0, 0, 5, 29, 0, 26, 1, 0, 0, 0, 1, 0]' : 0.349927}", "{'[3, 4, 0, 3, 5, 2, 0, 0, 5, 29, 0, 26, 1, 0, 0, 0, 1, 0]' : 0.350321}", "{'[3, 4, 0, 3, 5, 2, 0, 0, 5, 29, 0, 26, 1, 0, 0, 0, 1, 0]' : 0.350728}", "{'[3, 4, 0, 3, 5, 2, 0, 0, 5, 29, 0, 26, 1, 0, 0, 0, 1, 0]' : 0.351001}", "{'[3, 4, 0, 3, 5, 2, 0, 0, 5, 29, 0, 26, 1, 0, 0, 0, 1, 0]' : 0.350718}", "{'[3, 4, 0, 3, 5, 2, 0, 0, 5, 29, 0, 26, 1, 0, 0, 0, 1, 0]' : 0.349888}", "{'[3, 4, 0, 3, 5, 2, 0, 0, 5, 29, 0, 26, 1, 0, 0, 0, 1, 0]' : 0.351575}", "{'[3, 4, 0, 3, 5, 2, 0, 0, 5, 29, 0, 26, 1, 0, 0, 0, 1, 0]' : 0.350795}", "{'[3, 4, 0, 3, 5, 2, 0, 0, 5, 29, 0, 26, 1, 0, 0, 0, 1, 0]' : 0.351599}", "{'[3, 4, 0, 3, 5, 2, 0, 0, 5, 29, 0, 26, 1, 0, 0, 0, 1, 0]' : 0.350408}", "{'[3, 4, 0, 3, 5, 2, 0, 0, 5, 29, 0, 26, 1, 0, 0, 0, 1, 0]' : 0.349966}", "{'[3, 4, 0, 3, 5, 2, 0, 0, 5, 29, 0, 26, 1, 0, 0, 0, 1, 0]' : 0.351291}", "{'[3, 4, 0, 3, 5, 2, 0, 0, 5, 29, 0, 26, 1, 0, 0, 0, 1, 0]' : 0.350355}", "{'[3, 4, 0, 3, 5, 2, 0, 0, 5, 29, 0, 26, 1, 0, 0, 0, 1, 0]' : 0.35001}", "{'[3, 4, 0, 3, 5, 2, 0, 0, 5, 29, 0, 26, 1, 0, 0, 0, 1, 0]' : 0.349378}", "{'[3, 4, 0, 3, 5, 2, 0, 0, 5, 29, 0, 26, 1, 0, 0, 0, 1, 0]' : 0.351028}"]
returning from 'run': {'[3, 4, 0, 3, 5, 2, 0, 0, 5, 29, 0, 26, 1, 0, 0, 0, 1, 0]': ([0.349662, 0.350937, 0.350499, 0.349495, 0.350192, 0.35029, 0.350403, 0.349919, 0.350194, 0.350871, 0.350204, 0.349292, 0.350103, 0.351263, 0.349927, 0.350321, 0.350728, 0.351001, 0.350718, 0.349888, 0.351575, 0.350795, 0.351599, 0.350408, 0.349966, 0.351291, 0.350355, 0.35001, 0.349378, 0.351028], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 4, 0, 3, 5, 2, 0, 0, 5, 29, 0, 26, 1, 0, 0, 0, 1, 0]': ([0.349662, 0.350937, 0.350499, 0.349495, 0.350192, 0.35029, 0.350403, 0.349919, 0.350194, 0.350871, 0.350204, 0.349292, 0.350103, 0.351263, 0.349927, 0.350321, 0.350728, 0.351001, 0.350718, 0.349888, 0.351575, 0.350795, 0.351599, 0.350408, 0.349966, 0.351291, 0.350355, 0.35001, 0.349378, 0.351028], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	100
        Max loop nest depth: 	6
        Additions: 		6100
        Multiplications: 	1680
        Divisions: 		0
        Logical: 		0
        Reads: 			9526
        Writes: 		1131
        Comparisons:		100
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest46.exe __orio_perftest46.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest46.exe  
Program Test Output: 
{'[4, 6, 4, 3, 0, 3, 0, 1, 26, 19, 5, 0, 0, 2, 0, 0, 0, 0]' : 0.465655}
{'[4, 6, 4, 3, 0, 3, 0, 1, 26, 19, 5, 0, 0, 2, 0, 0, 0, 0]' : 0.46495}
{'[4, 6, 4, 3, 0, 3, 0, 1, 26, 19, 5, 0, 0, 2, 0, 0, 0, 0]' : 0.465144}
{'[4, 6, 4, 3, 0, 3, 0, 1, 26, 19, 5, 0, 0, 2, 0, 0, 0, 0]' : 0.464645}
{'[4, 6, 4, 3, 0, 3, 0, 1, 26, 19, 5, 0, 0, 2, 0, 0, 0, 0]' : 0.465746}
{'[4, 6, 4, 3, 0, 3, 0, 1, 26, 19, 5, 0, 0, 2, 0, 0, 0, 0]' : 0.464422}
{'[4, 6, 4, 3, 0, 3, 0, 1, 26, 19, 5, 0, 0, 2, 0, 0, 0, 0]' : 0.46707}
{'[4, 6, 4, 3, 0, 3, 0, 1, 26, 19, 5, 0, 0, 2, 0, 0, 0, 0]' : 0.464423}
{'[4, 6, 4, 3, 0, 3, 0, 1, 26, 19, 5, 0, 0, 2, 0, 0, 0, 0]' : 0.469594}
{'[4, 6, 4, 3, 0, 3, 0, 1, 26, 19, 5, 0, 0, 2, 0, 0, 0, 0]' : 0.464614}
{'[4, 6, 4, 3, 0, 3, 0, 1, 26, 19, 5, 0, 0, 2, 0, 0, 0, 0]' : 0.469438}
{'[4, 6, 4, 3, 0, 3, 0, 1, 26, 19, 5, 0, 0, 2, 0, 0, 0, 0]' : 0.466862}
{'[4, 6, 4, 3, 0, 3, 0, 1, 26, 19, 5, 0, 0, 2, 0, 0, 0, 0]' : 0.467155}
{'[4, 6, 4, 3, 0, 3, 0, 1, 26, 19, 5, 0, 0, 2, 0, 0, 0, 0]' : 0.470351}
{'[4, 6, 4, 3, 0, 3, 0, 1, 26, 19, 5, 0, 0, 2, 0, 0, 0, 0]' : 0.478526}
{'[4, 6, 4, 3, 0, 3, 0, 1, 26, 19, 5, 0, 0, 2, 0, 0, 0, 0]' : 0.47596}
{'[4, 6, 4, 3, 0, 3, 0, 1, 26, 19, 5, 0, 0, 2, 0, 0, 0, 0]' : 0.475468}
{'[4, 6, 4, 3, 0, 3, 0, 1, 26, 19, 5, 0, 0, 2, 0, 0, 0, 0]' : 0.467068}
{'[4, 6, 4, 3, 0, 3, 0, 1, 26, 19, 5, 0, 0, 2, 0, 0, 0, 0]' : 0.475216}
{'[4, 6, 4, 3, 0, 3, 0, 1, 26, 19, 5, 0, 0, 2, 0, 0, 0, 0]' : 0.479674}
{'[4, 6, 4, 3, 0, 3, 0, 1, 26, 19, 5, 0, 0, 2, 0, 0, 0, 0]' : 0.506673}
{'[4, 6, 4, 3, 0, 3, 0, 1, 26, 19, 5, 0, 0, 2, 0, 0, 0, 0]' : 0.500736}
{'[4, 6, 4, 3, 0, 3, 0, 1, 26, 19, 5, 0, 0, 2, 0, 0, 0, 0]' : 0.479664}
{'[4, 6, 4, 3, 0, 3, 0, 1, 26, 19, 5, 0, 0, 2, 0, 0, 0, 0]' : 0.465722}
{'[4, 6, 4, 3, 0, 3, 0, 1, 26, 19, 5, 0, 0, 2, 0, 0, 0, 0]' : 0.465932}
{'[4, 6, 4, 3, 0, 3, 0, 1, 26, 19, 5, 0, 0, 2, 0, 0, 0, 0]' : 0.464806}
{'[4, 6, 4, 3, 0, 3, 0, 1, 26, 19, 5, 0, 0, 2, 0, 0, 0, 0]' : 0.465096}
{'[4, 6, 4, 3, 0, 3, 0, 1, 26, 19, 5, 0, 0, 2, 0, 0, 0, 0]' : 0.467174}
{'[4, 6, 4, 3, 0, 3, 0, 1, 26, 19, 5, 0, 0, 2, 0, 0, 0, 0]' : 0.46583}
{'[4, 6, 4, 3, 0, 3, 0, 1, 26, 19, 5, 0, 0, 2, 0, 0, 0, 0]' : 0.46475}

out:
 ["{'[4, 6, 4, 3, 0, 3, 0, 1, 26, 19, 5, 0, 0, 2, 0, 0, 0, 0]' : 0.465655}", "{'[4, 6, 4, 3, 0, 3, 0, 1, 26, 19, 5, 0, 0, 2, 0, 0, 0, 0]' : 0.46495}", "{'[4, 6, 4, 3, 0, 3, 0, 1, 26, 19, 5, 0, 0, 2, 0, 0, 0, 0]' : 0.465144}", "{'[4, 6, 4, 3, 0, 3, 0, 1, 26, 19, 5, 0, 0, 2, 0, 0, 0, 0]' : 0.464645}", "{'[4, 6, 4, 3, 0, 3, 0, 1, 26, 19, 5, 0, 0, 2, 0, 0, 0, 0]' : 0.465746}", "{'[4, 6, 4, 3, 0, 3, 0, 1, 26, 19, 5, 0, 0, 2, 0, 0, 0, 0]' : 0.464422}", "{'[4, 6, 4, 3, 0, 3, 0, 1, 26, 19, 5, 0, 0, 2, 0, 0, 0, 0]' : 0.46707}", "{'[4, 6, 4, 3, 0, 3, 0, 1, 26, 19, 5, 0, 0, 2, 0, 0, 0, 0]' : 0.464423}", "{'[4, 6, 4, 3, 0, 3, 0, 1, 26, 19, 5, 0, 0, 2, 0, 0, 0, 0]' : 0.469594}", "{'[4, 6, 4, 3, 0, 3, 0, 1, 26, 19, 5, 0, 0, 2, 0, 0, 0, 0]' : 0.464614}", "{'[4, 6, 4, 3, 0, 3, 0, 1, 26, 19, 5, 0, 0, 2, 0, 0, 0, 0]' : 0.469438}", "{'[4, 6, 4, 3, 0, 3, 0, 1, 26, 19, 5, 0, 0, 2, 0, 0, 0, 0]' : 0.466862}", "{'[4, 6, 4, 3, 0, 3, 0, 1, 26, 19, 5, 0, 0, 2, 0, 0, 0, 0]' : 0.467155}", "{'[4, 6, 4, 3, 0, 3, 0, 1, 26, 19, 5, 0, 0, 2, 0, 0, 0, 0]' : 0.470351}", "{'[4, 6, 4, 3, 0, 3, 0, 1, 26, 19, 5, 0, 0, 2, 0, 0, 0, 0]' : 0.478526}", "{'[4, 6, 4, 3, 0, 3, 0, 1, 26, 19, 5, 0, 0, 2, 0, 0, 0, 0]' : 0.47596}", "{'[4, 6, 4, 3, 0, 3, 0, 1, 26, 19, 5, 0, 0, 2, 0, 0, 0, 0]' : 0.475468}", "{'[4, 6, 4, 3, 0, 3, 0, 1, 26, 19, 5, 0, 0, 2, 0, 0, 0, 0]' : 0.467068}", "{'[4, 6, 4, 3, 0, 3, 0, 1, 26, 19, 5, 0, 0, 2, 0, 0, 0, 0]' : 0.475216}", "{'[4, 6, 4, 3, 0, 3, 0, 1, 26, 19, 5, 0, 0, 2, 0, 0, 0, 0]' : 0.479674}", "{'[4, 6, 4, 3, 0, 3, 0, 1, 26, 19, 5, 0, 0, 2, 0, 0, 0, 0]' : 0.506673}", "{'[4, 6, 4, 3, 0, 3, 0, 1, 26, 19, 5, 0, 0, 2, 0, 0, 0, 0]' : 0.500736}", "{'[4, 6, 4, 3, 0, 3, 0, 1, 26, 19, 5, 0, 0, 2, 0, 0, 0, 0]' : 0.479664}", "{'[4, 6, 4, 3, 0, 3, 0, 1, 26, 19, 5, 0, 0, 2, 0, 0, 0, 0]' : 0.465722}", "{'[4, 6, 4, 3, 0, 3, 0, 1, 26, 19, 5, 0, 0, 2, 0, 0, 0, 0]' : 0.465932}", "{'[4, 6, 4, 3, 0, 3, 0, 1, 26, 19, 5, 0, 0, 2, 0, 0, 0, 0]' : 0.464806}", "{'[4, 6, 4, 3, 0, 3, 0, 1, 26, 19, 5, 0, 0, 2, 0, 0, 0, 0]' : 0.465096}", "{'[4, 6, 4, 3, 0, 3, 0, 1, 26, 19, 5, 0, 0, 2, 0, 0, 0, 0]' : 0.467174}", "{'[4, 6, 4, 3, 0, 3, 0, 1, 26, 19, 5, 0, 0, 2, 0, 0, 0, 0]' : 0.46583}", "{'[4, 6, 4, 3, 0, 3, 0, 1, 26, 19, 5, 0, 0, 2, 0, 0, 0, 0]' : 0.46475}"]
returning from 'run': {'[4, 6, 4, 3, 0, 3, 0, 1, 26, 19, 5, 0, 0, 2, 0, 0, 0, 0]': ([0.465655, 0.46495, 0.465144, 0.464645, 0.465746, 0.464422, 0.46707, 0.464423, 0.469594, 0.464614, 0.469438, 0.466862, 0.467155, 0.470351, 0.478526, 0.47596, 0.475468, 0.467068, 0.475216, 0.479674, 0.506673, 0.500736, 0.479664, 0.465722, 0.465932, 0.464806, 0.465096, 0.467174, 0.46583, 0.46475], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 6, 4, 3, 0, 3, 0, 1, 26, 19, 5, 0, 0, 2, 0, 0, 0, 0]': ([0.465655, 0.46495, 0.465144, 0.464645, 0.465746, 0.464422, 0.46707, 0.464423, 0.469594, 0.464614, 0.469438, 0.466862, 0.467155, 0.470351, 0.478526, 0.47596, 0.475468, 0.467068, 0.475216, 0.479674, 0.506673, 0.500736, 0.479664, 0.465722, 0.465932, 0.464806, 0.465096, 0.467174, 0.46583, 0.46475], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Complete design, with measurements:
   T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
1     2    1    0    5    0    5       0       0    8   2  16   0    0    0
2     2    5    0    1    3    0       0       1    5  11   1   0    0    2
3     2    2    5    1    5    3       0       1   22   5   0  25    0    0
4     0    4    0    0    4    3       1       0    6   0   4   2    0    0
5     6    6    2    0    6    4       1       0   24   6   0   8    1    1
6     3    0    5    1    1    0       1       0   23   0  14  26    0    0
8     5    1    0    0    6    3       1       1   15   0   4  21    1    1
10    0    1    3    1    3    0       1       1   14  13   7   0    2    0
11    0    2    1    3    0    0       0       1   14  16   0   6    0    0
12    4    0    3    2    3    0       1       0   22   0  13  13    0    0
13    3    1    6    2    4    6       1       1    8  23  16   0    0    1
14    2    0    2    3    1    3       1       1    0  28   0   3    1    1
15    3    0    0    3    5    2       0       1    9   0   3   1    2    0
16    2    3    5    0    0    0       1       0   14  20   1   0    1    0
17    3    3    5    1    6    6       0       1    0   0   4   8    1    0
18    2    3    1    0    3    1       0       1   16   3   8   0    0    1
19    5    0    0    4    6    6       1       0   23  16   9   0    2    0
20    1    1    6    5    6    4       1       1   29   0  26  21    0    1
21    0    0    1    0    5    5       0       1   14   0  28  15    1    1
22    1    0    1    6    3    3       0       1   25  26  17   0    1    0
23    4    2    2    2    3    1       1       0   12  12  29   0    1    0
24    0    4    3    5    5    3       0       0   16   0  15   0    1    1
26    3    6    2    0    6    0       1       1    9  28  28   0    0    0
27    1    5    2    6    4    1       1       0   29  11   0  25    2    0
28    6    2    0    6    1    4       1       1    0  16  29   0    1    0
29    1    0    6    0    3    6       0       0   18  13   0  19    1    0
30    1    6    3    3    4    2       1       0    0  11  15   0    0    1
31    1    3    2    0    0    0       0       0   17  27   4   0    1    1
33    3    0    5    6    2    4       0       0    5   6   0  20    0    1
34    4    5    2    0    3    5       0       0   10   0  13  10    2    0
35    5    5    4    0    3    3       0       0   29   0  27  19    0    1
36    4    1    2    2    2    2       0       1   27   3   0   0    0    1
38    1    4    6    5    3    0       0       1    1   0  19   4    1    1
39    6    2    1    6    4    4       0       0    1  28   0  29    0    1
40    5    5    0    3    4    0       0       0   21  27   0  26    0    1
41    5    1    5    4    5    5       1       0   12   0   0   1    0    1
42    0    2    3    5    1    6       1       0   24   0   6   8    1    0
43    6    1    4    0    6    0       0       1   18   7   0  18    0    2
44    5    6    0    4    0    3       1       1    7   0  20  23    1    0
45    3    4    0    3    5    2       0       0    5  29   0  26    1    0
46    4    6    4    3    0    3       0       1   26  19   5   0    0    2
   RT_K SCR VEC1 VEC2 cost_mean
1     2   1    0    0 0.3314862
2     0   1    1    1 0.5079228
3     0   1    0    1 0.3333221
4     0   1    0    0 0.6545764
5     0   1    0    0 0.3264721
6     0   0    1    0 0.7362925
8     0   0    0    1 0.2648866
10    0   0    1    0 0.3572517
11    1   0    0    1 0.5402266
12    2   0    0    0 0.7612763
13    0   1    0    1 0.5499715
14    0   0    0    1 0.2557112
15    0   1    1    0 0.2995696
16    1   1    0    0 0.2521415
17    0   0    0    1 0.2328845
18    1   0    0    0 0.5326749
19    0   0    1    1 0.4938008
20    1   1    0    0 0.7501678
21    0   0    0    1 0.3388263
22    1   1    0    1 0.3481423
23    1   1    0    1 0.3045698
24    0   0    0    0 0.2555640
26    0   0    1    1 0.8163903
27    0   1    0    1 0.3888737
28    0   0    0    1 0.3463659
29    1   0    0    0 0.3432863
30    1   1    1    0 0.4572748
31    0   0    1    1 0.2969503
33    0   0    1    1 0.3833437
34    0   1    0    0 0.5127557
35    1   1    1    1 0.6673543
36    1   1    1    0 0.3568623
38    0   1    1    1 0.2336818
39    1   1    1    0 0.4829553
40    1   1    0    0 0.3867782
41    1   0    0    1 0.7770523
42    0   1    1    0 0.2886127
43    0   1    0    0 0.3629843
44    1   0    1    1 0.4502153
45    0   0    1    0 0.3504104
46    0   0    0    0 0.4709455

Step Space Names:  [1] "T1_I"    "T1_J"    "T1_K"    "T2_I"    "T2_J"    "T2_K"    "ACOPY_x"
 [8] "ACOPY_y" "U1_I"    "U_I"     "U_J"     "U_K"     "RT_I"    "RT_J"   
[15] "RT_K"    "SCR"     "VEC1"    "VEC2"   

Heteroscedasticity Test p-value: 0.682779931647
Regression Step:                Df  Sum Sq Mean Sq F value   Pr(>F)    
T1_I             1 0.02134 0.02134   2.927 0.121260    
T1_J             1 0.00378 0.00378   0.518 0.490034    
T1_K             1 0.02606 0.02606   3.575 0.091236 .  
T2_I             1 0.00780 0.00780   1.069 0.328074    
T2_J             1 0.00605 0.00605   0.830 0.386111    
T2_K             1 0.01297 0.01297   1.780 0.214955    
ACOPY_x          1 0.08407 0.08407  11.532 0.007926 ** 
ACOPY_y          1 0.00584 0.00584   0.802 0.393897    
U1_I             1 0.02311 0.02311   3.170 0.108698    
U_I              1 0.00533 0.00533   0.731 0.414588    
U_J              1 0.05567 0.05567   7.636 0.021991 *  
U_K              1 0.00288 0.00288   0.395 0.545421    
RT_I             1 0.27994 0.27994  38.399 0.000159 ***
RT_J             1 0.02399 0.02399   3.291 0.103070    
RT_K             1 0.00074 0.00074   0.102 0.756785    
SCR              1 0.03750 0.03750   5.143 0.049535 *  
VEC1             1 0.02589 0.02589   3.551 0.092161 .  
VEC2             1 0.00021 0.00021   0.029 0.867924    
I(1/(1 + T1_I))  1 0.00242 0.00242   0.332 0.578328    
I(1/(1 + T1_J))  1 0.02112 0.02112   2.898 0.122922    
I(1/(1 + T1_K))  1 0.00001 0.00001   0.001 0.973940    
I(1/(1 + T2_I))  1 0.00177 0.00177   0.242 0.634376    
I(1/(1 + T2_J))  1 0.00682 0.00682   0.935 0.358782    
I(1/(1 + T2_K))  1 0.02695 0.02695   3.697 0.086664 .  
I(1/(1 + U1_I))  1 0.04186 0.04186   5.741 0.040153 *  
I(1/(1 + U_I))   1 0.03882 0.03882   5.325 0.046415 *  
I(1/(1 + U_J))   1 0.00070 0.00070   0.096 0.763786    
I(1/(1 + U_K))   1 0.00204 0.00204   0.280 0.609704    
I(1/(1 + RT_I))  1 0.23029 0.23029  31.589 0.000326 ***
I(1/(1 + RT_J))  1 0.02214 0.02214   3.037 0.115351    
I(1/(1 + RT_K))  1 0.01190 0.01190   1.632 0.233371    
Residuals        9 0.06561 0.00729                     
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Predicting Best
Identical predictions (tol = 1e-5): 1
Getting Best from Design
Response: ['cost_mean']
Design Names:  [1] "T1_I"      "T1_J"      "T1_K"      "T2_I"      "T2_J"      "T2_K"     
 [7] "ACOPY_x"   "ACOPY_y"   "U1_I"      "U_I"       "U_J"       "U_K"      
[13] "RT_I"      "RT_J"      "RT_K"      "SCR"       "VEC1"      "VEC2"     
[19] "cost_mean"

Design Response:    cost_mean
1  0.3314862
2  0.5079228
3  0.3333221
4  0.6545764
5  0.3264721
6  0.7362925
8  0.2648866
10 0.3572517
11 0.5402266
12 0.7612763
13 0.5499715
14 0.2557112
15 0.2995696
16 0.2521415
17 0.2328845
18 0.5326749
19 0.4938008
20 0.7501678
21 0.3388263
22 0.3481423
23 0.3045698
24 0.2555640
26 0.8163903
27 0.3888737
28 0.3463659
29 0.3432863
30 0.4572748
31 0.2969503
33 0.3833437
34 0.5127557
35 0.6673543
36 0.3568623
38 0.2336818
39 0.4829553
40 0.3867782
41 0.7770523
42 0.2886127
43 0.3629843
44 0.4502153
45 0.3504104
46 0.4709455

Getting fixed variables
Fixed Variables: {'ACOPY_x': 0, 'U_J': 0, 'RT_I': 1, 'SCR': 1}
Pruning Data
Predicted best column ACOPY_x: [1] 0

Predicted best column U_J: [1] 0

Predicted best column RT_I: [1] 1

Predicted best column SCR: [1] 1

Dimensions of Pruned Data: [1] 20644    18
Pruned data names:  [1] "T1_I"    "T1_J"    "T1_K"    "T2_I"    "T2_J"    "T2_K"    "ACOPY_x"
 [8] "ACOPY_y" "U1_I"    "U_I"     "U_J"     "U_K"     "RT_I"    "RT_J"   
[15] "RT_K"    "SCR"     "VEC1"    "VEC2"   

NULL
Pruning Model
Best Predicted:       T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
74576    0    2    5    0    0    3       0       1    0   2   0  29    1    1
      RT_K SCR VEC1 VEC2
74576    0   1    0    0

Best From Design :    T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
17    3    3    5    1    6    6       0       1    0   0   4   8    1    0
   RT_K SCR VEC1 VEC2 cost_mean
17    0   0    0    1 0.2328845

Pruned Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_y', 'U1_I', 'U_I', 'U_K', 'RT_J', 'RT_K', 'VEC1', 'VEC2']
Fixed Factors: {'ACOPY_x': 0, 'U_J': 0, 'RT_I': 1, 'SCR': 1}
Length of requested configs: 1
Result was on Database, Returning Now
Starting Point (-O3):
0.6593555
Predicted Best Point:
[0, 2, 5, 0, 0, 3, 0, 1, 0, 2, 0, 29, 1, 1, 0, 1, 0, 0]
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = kkk
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	3
        Additions: 		1388
        Multiplications: 	640
        Divisions: 		0
        Logical: 		0
        Reads: 			2642
        Writes: 		431
        Comparisons:		10
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest47.exe __orio_perftest47.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest47.exe  
Program Test Output: 
{'[0, 2, 5, 0, 0, 3, 0, 1, 0, 2, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.242489}
{'[0, 2, 5, 0, 0, 3, 0, 1, 0, 2, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.241683}
{'[0, 2, 5, 0, 0, 3, 0, 1, 0, 2, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.240544}
{'[0, 2, 5, 0, 0, 3, 0, 1, 0, 2, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.240862}
{'[0, 2, 5, 0, 0, 3, 0, 1, 0, 2, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.241098}
{'[0, 2, 5, 0, 0, 3, 0, 1, 0, 2, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.242762}
{'[0, 2, 5, 0, 0, 3, 0, 1, 0, 2, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.24202}
{'[0, 2, 5, 0, 0, 3, 0, 1, 0, 2, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.242092}
{'[0, 2, 5, 0, 0, 3, 0, 1, 0, 2, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.242565}
{'[0, 2, 5, 0, 0, 3, 0, 1, 0, 2, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.242481}
{'[0, 2, 5, 0, 0, 3, 0, 1, 0, 2, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.242321}
{'[0, 2, 5, 0, 0, 3, 0, 1, 0, 2, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.24146}
{'[0, 2, 5, 0, 0, 3, 0, 1, 0, 2, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.240338}
{'[0, 2, 5, 0, 0, 3, 0, 1, 0, 2, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.242343}
{'[0, 2, 5, 0, 0, 3, 0, 1, 0, 2, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.240358}
{'[0, 2, 5, 0, 0, 3, 0, 1, 0, 2, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.240442}
{'[0, 2, 5, 0, 0, 3, 0, 1, 0, 2, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.240865}
{'[0, 2, 5, 0, 0, 3, 0, 1, 0, 2, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.241383}
{'[0, 2, 5, 0, 0, 3, 0, 1, 0, 2, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.241734}
{'[0, 2, 5, 0, 0, 3, 0, 1, 0, 2, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.243137}
{'[0, 2, 5, 0, 0, 3, 0, 1, 0, 2, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.240707}
{'[0, 2, 5, 0, 0, 3, 0, 1, 0, 2, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.243175}
{'[0, 2, 5, 0, 0, 3, 0, 1, 0, 2, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.241405}
{'[0, 2, 5, 0, 0, 3, 0, 1, 0, 2, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.240582}
{'[0, 2, 5, 0, 0, 3, 0, 1, 0, 2, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.240499}
{'[0, 2, 5, 0, 0, 3, 0, 1, 0, 2, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.240762}
{'[0, 2, 5, 0, 0, 3, 0, 1, 0, 2, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.241678}
{'[0, 2, 5, 0, 0, 3, 0, 1, 0, 2, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.240854}
{'[0, 2, 5, 0, 0, 3, 0, 1, 0, 2, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.241422}
{'[0, 2, 5, 0, 0, 3, 0, 1, 0, 2, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.24114}

out:
 ["{'[0, 2, 5, 0, 0, 3, 0, 1, 0, 2, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.242489}", "{'[0, 2, 5, 0, 0, 3, 0, 1, 0, 2, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.241683}", "{'[0, 2, 5, 0, 0, 3, 0, 1, 0, 2, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.240544}", "{'[0, 2, 5, 0, 0, 3, 0, 1, 0, 2, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.240862}", "{'[0, 2, 5, 0, 0, 3, 0, 1, 0, 2, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.241098}", "{'[0, 2, 5, 0, 0, 3, 0, 1, 0, 2, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.242762}", "{'[0, 2, 5, 0, 0, 3, 0, 1, 0, 2, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.24202}", "{'[0, 2, 5, 0, 0, 3, 0, 1, 0, 2, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.242092}", "{'[0, 2, 5, 0, 0, 3, 0, 1, 0, 2, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.242565}", "{'[0, 2, 5, 0, 0, 3, 0, 1, 0, 2, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.242481}", "{'[0, 2, 5, 0, 0, 3, 0, 1, 0, 2, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.242321}", "{'[0, 2, 5, 0, 0, 3, 0, 1, 0, 2, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.24146}", "{'[0, 2, 5, 0, 0, 3, 0, 1, 0, 2, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.240338}", "{'[0, 2, 5, 0, 0, 3, 0, 1, 0, 2, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.242343}", "{'[0, 2, 5, 0, 0, 3, 0, 1, 0, 2, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.240358}", "{'[0, 2, 5, 0, 0, 3, 0, 1, 0, 2, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.240442}", "{'[0, 2, 5, 0, 0, 3, 0, 1, 0, 2, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.240865}", "{'[0, 2, 5, 0, 0, 3, 0, 1, 0, 2, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.241383}", "{'[0, 2, 5, 0, 0, 3, 0, 1, 0, 2, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.241734}", "{'[0, 2, 5, 0, 0, 3, 0, 1, 0, 2, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.243137}", "{'[0, 2, 5, 0, 0, 3, 0, 1, 0, 2, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.240707}", "{'[0, 2, 5, 0, 0, 3, 0, 1, 0, 2, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.243175}", "{'[0, 2, 5, 0, 0, 3, 0, 1, 0, 2, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.241405}", "{'[0, 2, 5, 0, 0, 3, 0, 1, 0, 2, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.240582}", "{'[0, 2, 5, 0, 0, 3, 0, 1, 0, 2, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.240499}", "{'[0, 2, 5, 0, 0, 3, 0, 1, 0, 2, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.240762}", "{'[0, 2, 5, 0, 0, 3, 0, 1, 0, 2, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.241678}", "{'[0, 2, 5, 0, 0, 3, 0, 1, 0, 2, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.240854}", "{'[0, 2, 5, 0, 0, 3, 0, 1, 0, 2, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.241422}", "{'[0, 2, 5, 0, 0, 3, 0, 1, 0, 2, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.24114}"]
returning from 'run': {'[0, 2, 5, 0, 0, 3, 0, 1, 0, 2, 0, 29, 1, 1, 0, 1, 0, 0]': ([0.242489, 0.241683, 0.240544, 0.240862, 0.241098, 0.242762, 0.24202, 0.242092, 0.242565, 0.242481, 0.242321, 0.24146, 0.240338, 0.242343, 0.240358, 0.240442, 0.240865, 0.241383, 0.241734, 0.243137, 0.240707, 0.243175, 0.241405, 0.240582, 0.240499, 0.240762, 0.241678, 0.240854, 0.241422, 0.24114], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 5, 0, 0, 3, 0, 1, 0, 2, 0, 29, 1, 1, 0, 1, 0, 0]': ([0.242489, 0.241683, 0.240544, 0.240862, 0.241098, 0.242762, 0.24202, 0.242092, 0.242565, 0.242481, 0.242321, 0.24146, 0.240338, 0.242343, 0.240358, 0.240442, 0.240865, 0.241383, 0.241734, 0.243137, 0.240707, 0.243175, 0.241405, 0.240582, 0.240499, 0.240762, 0.241678, 0.240854, 0.241422, 0.24114], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Design Best Point:
   T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
17    3    3    5    1    6    6       0       1    0   0   4   8    1    0
   RT_K SCR VEC1 VEC2 cost_mean
17    0   0    0    1 0.2328845

Slowdown (Design Best): 0.3532002083853096
Slowdown (Predicted Best): 0.36627691738371787
Budget: 41/180
Step 1
Full Model:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_y + U1_I + U_I + U_K + RT_J + RT_K + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Fixed Factors: {'ACOPY_x': 0, 'U_J': 0, 'RT_I': 1, 'SCR': 1}
Full data does not fit on budget
Computing D-Optimal Design
Updating Constraints
Updated Constraint: True and (((variable_ranges[variable_names.index(factors[3])][int(round(x[3]))] ==1 )or (variable_ranges[variable_names.index(factors[3])][int(round(x[3]))] %variable_ranges[variable_names.index(factors[0])][int(round(x[0]))] ==0 ))) and (((variable_ranges[variable_names.index(factors[4])][int(round(x[4]))] ==1 )or (variable_ranges[variable_names.index(factors[4])][int(round(x[4]))] %variable_ranges[variable_names.index(factors[1])][int(round(x[1]))] ==0 ))) and (((variable_ranges[variable_names.index(factors[5])][int(round(x[5]))] ==1 )or (variable_ranges[variable_names.index(factors[5])][int(round(x[5]))] %variable_ranges[variable_names.index(factors[2])][int(round(x[2]))] ==0 ))) and ((8 *variable_ranges[variable_names.index(factors[10])][int(round(x[10]))] +8 *variable_ranges[variable_names.index(factors[11])][int(round(x[11]))] +variable_ranges[variable_names.index(factors[10])][int(round(x[10]))] *variable_ranges[variable_names.index(factors[11])][int(round(x[11]))] <=150 )) and (((variable_ranges[variable_names.index(factors[8])][int(round(x[8]))] ==1 )or (1 ==1 )or (variable_ranges[variable_names.index(factors[9])][int(round(x[9]))] ==1 )))
Computing D-Optimal Design with 37 experiments
Design Formula:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_y + U1_I + U_I + U_K + RT_J + RT_K + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Starting "optMonteCarlo" run
       var low high center nLevels round factor   mix
1     T1_I   0    6      0       7     0  FALSE FALSE
2     T1_J   0    6      0       7     0  FALSE FALSE
3     T1_K   0    6      0       7     0  FALSE FALSE
4     T2_I   0    6      0       7     0  FALSE FALSE
5     T2_J   0    6      0       7     0  FALSE FALSE
6     T2_K   0    6      0       7     0  FALSE FALSE
7  ACOPY_y   0    1      0       2     0  FALSE FALSE
8     U1_I   0   29      0      30     0  FALSE FALSE
9      U_I   0   29      0      30     0  FALSE FALSE
10     U_K   0   29      0      30     0  FALSE FALSE
11    RT_J   0    2      0       3     0  FALSE FALSE
12    RT_K   0    2      0       3     0  FALSE FALSE
13    VEC1   0    1      0       2     0  FALSE FALSE
14    VEC2   0    1      0       2     0  FALSE FALSE

