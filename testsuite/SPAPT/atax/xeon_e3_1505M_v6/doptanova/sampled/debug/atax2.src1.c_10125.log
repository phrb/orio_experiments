
====== START ORIO ======

----- begin reading the source file: atax2.src1.c -----
----- finished reading the source file -----

----- begin parsing annotations -----
----- finished parsing annotations -----

----- begin optimizations -----
Search_Space         = 8.234e+13
Number_of_Parameters = 18
Numeric_Parameters   = 13
Binary_Parameters    = 05
['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
[[1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [False, True], [False, True], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 8, 32], [1, 8, 32], [1, 8, 32], [False, True], [False, True], [False, True]]

----- begin empirical tuning for problem size -----
 N = 10000
Parameters: {'ACOPY_x': [0, 2], 'ACOPY_y': [0, 2], 'RT_K': [0, 3], 'T1_I': [0, 7], 'T1_J': [0, 7], 'T1_K': [0, 7], 'U_K': [0, 30], 'U_J': [0, 30], 'U_I': [0, 30], 'U1_I': [0, 30], 'T2_K': [0, 7], 'T2_J': [0, 7], 'T2_I': [0, 7], 'VEC2': [0, 2], 'VEC1': [0, 2], 'RT_I': [0, 3], 'SCR': [0, 2], 'RT_J': [0, 3]}
Parameter Range Values: {'ACOPY_x': [False, True], 'ACOPY_y': [False, True], 'RT_K': [1, 8, 32], 'T1_I': [1, 16, 32, 64, 128, 256, 512], 'T1_J': [1, 16, 32, 64, 128, 256, 512], 'T1_K': [1, 16, 32, 64, 128, 256, 512], 'U_K': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_J': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U1_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'T2_K': [1, 64, 128, 256, 512, 1024, 2048], 'T2_J': [1, 64, 128, 256, 512, 1024, 2048], 'T2_I': [1, 64, 128, 256, 512, 1024, 2048], 'VEC2': [False, True], 'VEC1': [False, True], 'RT_I': [1, 8, 32], 'SCR': [False, True], 'RT_J': [1, 8, 32]}

----- begin random search -----
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Inverse Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Starting DOPT-anova
Step 0
Full Model:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Fixed Factors: {}
Computing D-Optimal Design
Updating Constraints
Parameter Range Values: {'ACOPY_x': [False, True], 'ACOPY_y': [False, True], 'RT_K': [1, 8, 32], 'T1_I': [1, 16, 32, 64, 128, 256, 512], 'T1_J': [1, 16, 32, 64, 128, 256, 512], 'T1_K': [1, 16, 32, 64, 128, 256, 512], 'U_K': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_J': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U1_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'T2_K': [1, 64, 128, 256, 512, 1024, 2048], 'T2_J': [1, 64, 128, 256, 512, 1024, 2048], 'T2_I': [1, 64, 128, 256, 512, 1024, 2048], 'VEC2': [False, True], 'VEC1': [False, True], 'RT_I': [1, 8, 32], 'SCR': [False, True], 'RT_J': [1, 8, 32]}
Variable Ranges: {'ACOPY_x': [False, True], 'ACOPY_y': [False, True], 'RT_K': [1, 8, 32], 'T1_I': [1, 16, 32, 64, 128, 256, 512], 'T1_J': [1, 16, 32, 64, 128, 256, 512], 'T1_K': [1, 16, 32, 64, 128, 256, 512], 'U_K': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_J': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U1_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'T2_K': [1, 64, 128, 256, 512, 1024, 2048], 'T2_J': [1, 64, 128, 256, 512, 1024, 2048], 'T2_I': [1, 64, 128, 256, 512, 1024, 2048], 'VEC2': [False, True], 'VEC1': [False, True], 'RT_I': [1, 8, 32], 'SCR': [False, True], 'RT_J': [1, 8, 32]}
Current Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Constraint Text: True and (((T2_I ==1 )or (T2_I %T1_I ==0 ))) and (((T2_J ==1 )or (T2_J %T1_J ==0 ))) and (((T2_K ==1 )or (T2_K %T1_K ==0 ))) and ((RT_I *RT_J +RT_I *RT_K +RT_J *RT_K <=150 )) and (((U_I ==1 )or (U_J ==1 )or (U_K ==1 )))
Updated Constraint: True and (((variable_ranges["T2_I"][int(x[3])] ==1 )or (variable_ranges["T2_I"][int(x[3])] %variable_ranges["T1_I"][int(x[0])] ==0 ))) and (((variable_ranges["T2_J"][int(x[4])] ==1 )or (variable_ranges["T2_J"][int(x[4])] %variable_ranges["T1_J"][int(x[1])] ==0 ))) and (((variable_ranges["T2_K"][int(x[5])] ==1 )or (variable_ranges["T2_K"][int(x[5])] %variable_ranges["T1_K"][int(x[2])] ==0 ))) and ((variable_ranges["RT_I"][int(x[12])] *variable_ranges["RT_J"][int(x[13])] +variable_ranges["RT_I"][int(x[12])] *variable_ranges["RT_K"][int(x[14])] +variable_ranges["RT_J"][int(x[13])] *variable_ranges["RT_K"][int(x[14])] <=150 )) and (((variable_ranges["U_I"][int(x[9])] ==1 )or (variable_ranges["U_J"][int(x[10])] ==1 )or (variable_ranges["U_K"][int(x[11])] ==1 )))
Computing D-Optimal Design with 46 experiments
Design Formula:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Generating valid search space of size 1840 (does not spend evaluations)
Tested coordinates: 10000
Valid coordinates: 368
Tested coordinates: 20000
Valid coordinates: 736
Tested coordinates: 30000
Tested coordinates: 40000
Valid coordinates: 1104
Tested coordinates: 50000
Valid coordinates: 1472
Tested coordinates: 60000
Tested coordinates: 70000
Valid coordinates: 1840
Valid/Tested configurations: 1840/74627
Generated Search Space:
NULL
Starting "optFederov" run
Using Search Space:
NULL
Data Dimensions: [1] 1840   18

Data Column Classes: ['integer', 'integer', 'integer', 'integer', 'integer', 'integer', 'integer', 'integer', 'integer', 'integer', 'integer', 'integer', 'integer', 'integer', 'integer', 'integer', 'integer', 'integer']
Looking at Data: 
[1] -9.390366e-09

$D
[1] 1.618467

$A
[1] 12.56281

$Ge
[1] 0.502

$Dea
[1] 0.37

$design
     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
8       2    0    2    1    0    5       1       1   27   0  28  25    0    0
198     4    6    0    2    6    2       1       1   13   0  24   9    0    0
262     6    5    1    6    0    2       1       1   19   4   0   9    0    0
307     0    0    3    5    6    0       0       1    1   3  15   0    0    0
353     2    2    3    2    2    5       0       1    8   0  27   9    2    0
363     0    3    2    1    3    0       0       1   27   0  29  15    1    0
420     2    0    1    0    0    5       0       1   15   0   9  27    1    0
448     0    2    5    6    2    4       1       1   29  17  25   0    0    2
534     1    5    5    1    0    6       0       0   24   9   9   0    0    1
538     1    2    3    2    6    6       0       1   25  23   0  22    2    0
540     4    4    6    5    3    0       1       0    8   0   9  27    0    1
584     3    1    2    0    5    6       0       1   13  10  12   0    0    2
606     1    2    0    3    2    2       0       1   29   9   0   0    1    0
608     3    2    4    3    0    2       1       0    1  22  29   0    1    1
641     1    3    4    3    2    5       1       0   13  15   6   0    0    0
681     5    1    2    6    4    6       1       0   18   0   2  13    0    2
724     6    6    2    0    0    6       0       1    4   2   1   0    0    0
773     1    0    5    0    6    3       0       0   27  24   0   9    0    0
801     2    0    4    2    0    2       0       0   20  20   7   0    0    0
806     4    2    1    5    0    3       1       1   13  21   0   8    0    0
858     2    2    0    4    2    1       0       0   29  28   0   6    0    0
941     0    6    1    6    5    6       0       1   11   0  29  23    0    1
957     4    3    5    5    3    4       0       0   29   0  27  29    0    0
996     4    0    4    0    4    5       1       1   27  26   0  20    1    1
1040    3    2    6    6    3    5       1       1   13   0   0   9    2    0
1041    3    6    1    6    0    3       0       1    2  24   0  21    1    0
1059    6    4    1    4    2    4       0       0   14   9  26   0    2    0
1205    3    6    0    0    6    0       1       1   29  28   9   0    0    2
1209    2    5    2    2    0    0       1       0   24  28   0  26    2    0
1317    2    6    4    5    6    2       0       0   14  18   4   0    0    1
1327    1    2    2    1    3    3       0       0   22   9   0   9    1    0
1356    0    1    2    6    2    2       0       1   19   0   9  20    2    0
1366    4    2    1    0    6    2       0       0   10   0  27   8    0    0
1425    2    6    6    0    6    6       1       1    8   9  13   0    1    0
1434    5    1    2    6    2    0       1       0   29  29  24   0    2    0
1486    1    6    4    2    0    5       0       0   25   1  11   0    1    1
1490    3    0    2    2    6    4       1       0   13   0   9  21    1    0
1503    2    4    0    6    4    1       0       0   13   6   0  25    0    1
1517    6    2    2    4    5    0       0       1    5  16  23   0    0    1
1520    4    4    2    2    2    6       1       0    3   7   0  16    0    0
1570    0    3    5    2    6    0       0       1    0   9   0   0    0    1
1574    0    5    0    0    3    0       1       0    2   0  13  25    2    0
1593    2    1    0    2    5    0       1       0   16   0  16   8    0    0
1611    3    1    5    0    2    0       0       0    5   0  16  29    0    2
1774    1    1    0    5    0    5       1       0    1  24  29   0    0    0
1786    0    4    0    0    2    5       1       1   14   2   0  19    0    1
     RT_K SCR VEC1 VEC2
8       1   0    0    0
198     2   1    0    0
262     0   1    1    0
307     2   1    1    1
353     0   1    1    0
363     1   0    1    0
420     0   1    0    1
448     0   0    0    1
534     0   0    0    1
538     0   1    1    0
540     1   1    1    0
584     0   1    1    0
606     0   0    0    1
608     0   1    1    0
641     1   1    0    1
681     0   1    0    1
724     0   1    0    0
773     0   1    0    0
801     1   0    0    0
806     2   0    0    0
858     2   1    0    0
941     0   1    1    0
957     2   1    0    1
996     0   0    1    1
1040    0   0    1    1
1041    1   1    0    0
1059    0   0    0    0
1205    0   0    0    1
1209    0   1    1    1
1317    1   0    1    1
1327    1   1    1    1
1356    0   1    0    0
1366    1   0    1    1
1425    0   1    0    0
1434    0   1    1    1
1486    0   1    0    1
1490    0   0    0    0
1503    0   0    1    0
1517    0   0    0    1
1520    2   0    1    0
1570    1   1    0    0
1574    0   1    0    1
1593    0   1    0    0
1611    0   0    1    1
1774    2   0    0    0
1786    1   1    0    0

$rows
 [1]    8  198  262  307  353  363  420  448  534  538  540  584  606  608  641
[16]  681  724  773  801  806  858  941  957  996 1040 1041 1059 1205 1209 1317
[31] 1327 1356 1366 1425 1434 1486 1490 1503 1517 1520 1570 1574 1593 1611 1774
[46] 1786


     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
8       2    0    2    1    0    5       1       1   27   0  28  25    0    0
198     4    6    0    2    6    2       1       1   13   0  24   9    0    0
262     6    5    1    6    0    2       1       1   19   4   0   9    0    0
307     0    0    3    5    6    0       0       1    1   3  15   0    0    0
353     2    2    3    2    2    5       0       1    8   0  27   9    2    0
363     0    3    2    1    3    0       0       1   27   0  29  15    1    0
420     2    0    1    0    0    5       0       1   15   0   9  27    1    0
448     0    2    5    6    2    4       1       1   29  17  25   0    0    2
534     1    5    5    1    0    6       0       0   24   9   9   0    0    1
538     1    2    3    2    6    6       0       1   25  23   0  22    2    0
540     4    4    6    5    3    0       1       0    8   0   9  27    0    1
584     3    1    2    0    5    6       0       1   13  10  12   0    0    2
606     1    2    0    3    2    2       0       1   29   9   0   0    1    0
608     3    2    4    3    0    2       1       0    1  22  29   0    1    1
641     1    3    4    3    2    5       1       0   13  15   6   0    0    0
681     5    1    2    6    4    6       1       0   18   0   2  13    0    2
724     6    6    2    0    0    6       0       1    4   2   1   0    0    0
773     1    0    5    0    6    3       0       0   27  24   0   9    0    0
801     2    0    4    2    0    2       0       0   20  20   7   0    0    0
806     4    2    1    5    0    3       1       1   13  21   0   8    0    0
858     2    2    0    4    2    1       0       0   29  28   0   6    0    0
941     0    6    1    6    5    6       0       1   11   0  29  23    0    1
957     4    3    5    5    3    4       0       0   29   0  27  29    0    0
996     4    0    4    0    4    5       1       1   27  26   0  20    1    1
1040    3    2    6    6    3    5       1       1   13   0   0   9    2    0
1041    3    6    1    6    0    3       0       1    2  24   0  21    1    0
1059    6    4    1    4    2    4       0       0   14   9  26   0    2    0
1205    3    6    0    0    6    0       1       1   29  28   9   0    0    2
1209    2    5    2    2    0    0       1       0   24  28   0  26    2    0
1317    2    6    4    5    6    2       0       0   14  18   4   0    0    1
1327    1    2    2    1    3    3       0       0   22   9   0   9    1    0
1356    0    1    2    6    2    2       0       1   19   0   9  20    2    0
1366    4    2    1    0    6    2       0       0   10   0  27   8    0    0
1425    2    6    6    0    6    6       1       1    8   9  13   0    1    0
1434    5    1    2    6    2    0       1       0   29  29  24   0    2    0
1486    1    6    4    2    0    5       0       0   25   1  11   0    1    1
1490    3    0    2    2    6    4       1       0   13   0   9  21    1    0
1503    2    4    0    6    4    1       0       0   13   6   0  25    0    1
1517    6    2    2    4    5    0       0       1    5  16  23   0    0    1
1520    4    4    2    2    2    6       1       0    3   7   0  16    0    0
1570    0    3    5    2    6    0       0       1    0   9   0   0    0    1
1574    0    5    0    0    3    0       1       0    2   0  13  25    2    0
1593    2    1    0    2    5    0       1       0   16   0  16   8    0    0
1611    3    1    5    0    2    0       0       0    5   0  16  29    0    2
1774    1    1    0    5    0    5       1       0    1  24  29   0    0    0
1786    0    4    0    0    2    5       1       1   14   2   0  19    0    1
     RT_K SCR VEC1 VEC2
8       1   0    0    0
198     2   1    0    0
262     0   1    1    0
307     2   1    1    1
353     0   1    1    0
363     1   0    1    0
420     0   1    0    1
448     0   0    0    1
534     0   0    0    1
538     0   1    1    0
540     1   1    1    0
584     0   1    1    0
606     0   0    0    1
608     0   1    1    0
641     1   1    0    1
681     0   1    0    1
724     0   1    0    0
773     0   1    0    0
801     1   0    0    0
806     2   0    0    0
858     2   1    0    0
941     0   1    1    0
957     2   1    0    1
996     0   0    1    1
1040    0   0    1    1
1041    1   1    0    0
1059    0   0    0    0
1205    0   0    0    1
1209    0   1    1    1
1317    1   0    1    1
1327    1   1    1    1
1356    0   1    0    0
1366    1   0    1    1
1425    0   1    0    0
1434    0   1    1    1
1486    0   1    0    1
1490    0   0    0    0
1503    0   0    1    0
1517    0   0    0    1
1520    2   0    1    0
1570    1   1    0    0
1574    0   1    0    1
1593    0   1    0    0
1611    0   0    1    1
1774    2   0    0    0
1786    1   1    0    0

D-Efficiency Approximation: [1] 0.37

Measuring design of size 46
Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Code stats:
        Number of loops: 	74
        Max loop nest depth: 	5
        Additions: 		5077
        Multiplications: 	1254
        Divisions: 		0
        Logical: 		0
        Reads: 			7819
        Writes: 		886
        Comparisons:		74
        Gotos: 			0
        
 building the original code:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -DORIGINAL -o __orio_perftest_original.exe __orio_perftest1.c timer_cpu.o -lm
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest1.exe __orio_perftest1.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest1.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest1.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest1.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 603, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 536, in dopt_anova
    i)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 485, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 387, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest1.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 603, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 536, in dopt_anova
    i)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 485, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 387, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Code stats:
        Number of loops: 	65
        Max loop nest depth: 	5
        Additions: 		2704
        Multiplications: 	1128
        Divisions: 		0
        Logical: 		0
        Reads: 			4995
        Writes: 		808
        Comparisons:		65
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest2.exe __orio_perftest2.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest2.exe  
Program Test Output: 
{'[3, 1, 2, 0, 5, 6, 0, 1, 13, 10, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.548547}
{'[3, 1, 2, 0, 5, 6, 0, 1, 13, 10, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.541982}
{'[3, 1, 2, 0, 5, 6, 0, 1, 13, 10, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.548569}
{'[3, 1, 2, 0, 5, 6, 0, 1, 13, 10, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.541346}
{'[3, 1, 2, 0, 5, 6, 0, 1, 13, 10, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.547907}
{'[3, 1, 2, 0, 5, 6, 0, 1, 13, 10, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.54135}
{'[3, 1, 2, 0, 5, 6, 0, 1, 13, 10, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.555256}
{'[3, 1, 2, 0, 5, 6, 0, 1, 13, 10, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.547532}
{'[3, 1, 2, 0, 5, 6, 0, 1, 13, 10, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.549269}
{'[3, 1, 2, 0, 5, 6, 0, 1, 13, 10, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.551188}
{'[3, 1, 2, 0, 5, 6, 0, 1, 13, 10, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.54488}
{'[3, 1, 2, 0, 5, 6, 0, 1, 13, 10, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.551211}
{'[3, 1, 2, 0, 5, 6, 0, 1, 13, 10, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.541037}
{'[3, 1, 2, 0, 5, 6, 0, 1, 13, 10, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.54741}
{'[3, 1, 2, 0, 5, 6, 0, 1, 13, 10, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.549719}
{'[3, 1, 2, 0, 5, 6, 0, 1, 13, 10, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.549604}
{'[3, 1, 2, 0, 5, 6, 0, 1, 13, 10, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.54184}
{'[3, 1, 2, 0, 5, 6, 0, 1, 13, 10, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.552505}
{'[3, 1, 2, 0, 5, 6, 0, 1, 13, 10, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.542145}
{'[3, 1, 2, 0, 5, 6, 0, 1, 13, 10, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.546948}
{'[3, 1, 2, 0, 5, 6, 0, 1, 13, 10, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.547473}
{'[3, 1, 2, 0, 5, 6, 0, 1, 13, 10, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.541503}
{'[3, 1, 2, 0, 5, 6, 0, 1, 13, 10, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.547869}
{'[3, 1, 2, 0, 5, 6, 0, 1, 13, 10, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.541845}
{'[3, 1, 2, 0, 5, 6, 0, 1, 13, 10, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.549459}
{'[3, 1, 2, 0, 5, 6, 0, 1, 13, 10, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.546769}
{'[3, 1, 2, 0, 5, 6, 0, 1, 13, 10, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.591821}
{'[3, 1, 2, 0, 5, 6, 0, 1, 13, 10, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.573923}
{'[3, 1, 2, 0, 5, 6, 0, 1, 13, 10, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.571092}
{'[3, 1, 2, 0, 5, 6, 0, 1, 13, 10, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.553168}

out:
 ["{'[3, 1, 2, 0, 5, 6, 0, 1, 13, 10, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.548547}", "{'[3, 1, 2, 0, 5, 6, 0, 1, 13, 10, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.541982}", "{'[3, 1, 2, 0, 5, 6, 0, 1, 13, 10, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.548569}", "{'[3, 1, 2, 0, 5, 6, 0, 1, 13, 10, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.541346}", "{'[3, 1, 2, 0, 5, 6, 0, 1, 13, 10, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.547907}", "{'[3, 1, 2, 0, 5, 6, 0, 1, 13, 10, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.54135}", "{'[3, 1, 2, 0, 5, 6, 0, 1, 13, 10, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.555256}", "{'[3, 1, 2, 0, 5, 6, 0, 1, 13, 10, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.547532}", "{'[3, 1, 2, 0, 5, 6, 0, 1, 13, 10, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.549269}", "{'[3, 1, 2, 0, 5, 6, 0, 1, 13, 10, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.551188}", "{'[3, 1, 2, 0, 5, 6, 0, 1, 13, 10, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.54488}", "{'[3, 1, 2, 0, 5, 6, 0, 1, 13, 10, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.551211}", "{'[3, 1, 2, 0, 5, 6, 0, 1, 13, 10, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.541037}", "{'[3, 1, 2, 0, 5, 6, 0, 1, 13, 10, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.54741}", "{'[3, 1, 2, 0, 5, 6, 0, 1, 13, 10, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.549719}", "{'[3, 1, 2, 0, 5, 6, 0, 1, 13, 10, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.549604}", "{'[3, 1, 2, 0, 5, 6, 0, 1, 13, 10, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.54184}", "{'[3, 1, 2, 0, 5, 6, 0, 1, 13, 10, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.552505}", "{'[3, 1, 2, 0, 5, 6, 0, 1, 13, 10, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.542145}", "{'[3, 1, 2, 0, 5, 6, 0, 1, 13, 10, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.546948}", "{'[3, 1, 2, 0, 5, 6, 0, 1, 13, 10, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.547473}", "{'[3, 1, 2, 0, 5, 6, 0, 1, 13, 10, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.541503}", "{'[3, 1, 2, 0, 5, 6, 0, 1, 13, 10, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.547869}", "{'[3, 1, 2, 0, 5, 6, 0, 1, 13, 10, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.541845}", "{'[3, 1, 2, 0, 5, 6, 0, 1, 13, 10, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.549459}", "{'[3, 1, 2, 0, 5, 6, 0, 1, 13, 10, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.546769}", "{'[3, 1, 2, 0, 5, 6, 0, 1, 13, 10, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.591821}", "{'[3, 1, 2, 0, 5, 6, 0, 1, 13, 10, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.573923}", "{'[3, 1, 2, 0, 5, 6, 0, 1, 13, 10, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.571092}", "{'[3, 1, 2, 0, 5, 6, 0, 1, 13, 10, 12, 0, 0, 2, 0, 1, 1, 0]' : 0.553168}"]
returning from 'run': {'[3, 1, 2, 0, 5, 6, 0, 1, 13, 10, 12, 0, 0, 2, 0, 1, 1, 0]': ([0.548547, 0.541982, 0.548569, 0.541346, 0.547907, 0.54135, 0.555256, 0.547532, 0.549269, 0.551188, 0.54488, 0.551211, 0.541037, 0.54741, 0.549719, 0.549604, 0.54184, 0.552505, 0.542145, 0.546948, 0.547473, 0.541503, 0.547869, 0.541845, 0.549459, 0.546769, 0.591821, 0.573923, 0.571092, 0.553168], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 1, 2, 0, 5, 6, 0, 1, 13, 10, 12, 0, 0, 2, 0, 1, 1, 0]': ([0.548547, 0.541982, 0.548569, 0.541346, 0.547907, 0.54135, 0.555256, 0.547532, 0.549269, 0.551188, 0.54488, 0.551211, 0.541037, 0.54741, 0.549719, 0.549604, 0.54184, 0.552505, 0.542145, 0.546948, 0.547473, 0.541503, 0.547869, 0.541845, 0.549459, 0.546769, 0.591821, 0.573923, 0.571092, 0.553168], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	6
        Additions: 		294
        Multiplications: 	94
        Divisions: 		0
        Logical: 		0
        Reads: 			630
        Writes: 		131
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest3.exe __orio_perftest3.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest3.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest3.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest3.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 603, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 536, in dopt_anova
    i)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 485, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 387, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest3.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 603, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 536, in dopt_anova
    i)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 485, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 387, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = kkk
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		1328
        Multiplications: 	624
        Divisions: 		0
        Logical: 		0
        Reads: 			2665
        Writes: 		494
        Comparisons:		15
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest4.exe __orio_perftest4.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest4.exe  
Program Test Output: 
{'[1, 0, 5, 0, 6, 3, 0, 0, 27, 24, 0, 9, 0, 0, 0, 1, 0, 0]' : 0.654797}
{'[1, 0, 5, 0, 6, 3, 0, 0, 27, 24, 0, 9, 0, 0, 0, 1, 0, 0]' : 0.653003}
{'[1, 0, 5, 0, 6, 3, 0, 0, 27, 24, 0, 9, 0, 0, 0, 1, 0, 0]' : 0.6612}
{'[1, 0, 5, 0, 6, 3, 0, 0, 27, 24, 0, 9, 0, 0, 0, 1, 0, 0]' : 0.666315}
{'[1, 0, 5, 0, 6, 3, 0, 0, 27, 24, 0, 9, 0, 0, 0, 1, 0, 0]' : 0.653443}
{'[1, 0, 5, 0, 6, 3, 0, 0, 27, 24, 0, 9, 0, 0, 0, 1, 0, 0]' : 0.651558}
{'[1, 0, 5, 0, 6, 3, 0, 0, 27, 24, 0, 9, 0, 0, 0, 1, 0, 0]' : 0.652438}
{'[1, 0, 5, 0, 6, 3, 0, 0, 27, 24, 0, 9, 0, 0, 0, 1, 0, 0]' : 0.652827}
{'[1, 0, 5, 0, 6, 3, 0, 0, 27, 24, 0, 9, 0, 0, 0, 1, 0, 0]' : 0.652367}
{'[1, 0, 5, 0, 6, 3, 0, 0, 27, 24, 0, 9, 0, 0, 0, 1, 0, 0]' : 0.652526}
{'[1, 0, 5, 0, 6, 3, 0, 0, 27, 24, 0, 9, 0, 0, 0, 1, 0, 0]' : 0.661459}
{'[1, 0, 5, 0, 6, 3, 0, 0, 27, 24, 0, 9, 0, 0, 0, 1, 0, 0]' : 0.655399}
{'[1, 0, 5, 0, 6, 3, 0, 0, 27, 24, 0, 9, 0, 0, 0, 1, 0, 0]' : 0.651898}
{'[1, 0, 5, 0, 6, 3, 0, 0, 27, 24, 0, 9, 0, 0, 0, 1, 0, 0]' : 0.651669}
{'[1, 0, 5, 0, 6, 3, 0, 0, 27, 24, 0, 9, 0, 0, 0, 1, 0, 0]' : 0.651469}
{'[1, 0, 5, 0, 6, 3, 0, 0, 27, 24, 0, 9, 0, 0, 0, 1, 0, 0]' : 0.65113}
{'[1, 0, 5, 0, 6, 3, 0, 0, 27, 24, 0, 9, 0, 0, 0, 1, 0, 0]' : 0.652394}
{'[1, 0, 5, 0, 6, 3, 0, 0, 27, 24, 0, 9, 0, 0, 0, 1, 0, 0]' : 0.652723}
{'[1, 0, 5, 0, 6, 3, 0, 0, 27, 24, 0, 9, 0, 0, 0, 1, 0, 0]' : 0.651857}
{'[1, 0, 5, 0, 6, 3, 0, 0, 27, 24, 0, 9, 0, 0, 0, 1, 0, 0]' : 0.654077}
{'[1, 0, 5, 0, 6, 3, 0, 0, 27, 24, 0, 9, 0, 0, 0, 1, 0, 0]' : 0.652582}
{'[1, 0, 5, 0, 6, 3, 0, 0, 27, 24, 0, 9, 0, 0, 0, 1, 0, 0]' : 0.652302}
{'[1, 0, 5, 0, 6, 3, 0, 0, 27, 24, 0, 9, 0, 0, 0, 1, 0, 0]' : 0.652438}
{'[1, 0, 5, 0, 6, 3, 0, 0, 27, 24, 0, 9, 0, 0, 0, 1, 0, 0]' : 0.653442}
{'[1, 0, 5, 0, 6, 3, 0, 0, 27, 24, 0, 9, 0, 0, 0, 1, 0, 0]' : 0.653617}
{'[1, 0, 5, 0, 6, 3, 0, 0, 27, 24, 0, 9, 0, 0, 0, 1, 0, 0]' : 0.656106}
{'[1, 0, 5, 0, 6, 3, 0, 0, 27, 24, 0, 9, 0, 0, 0, 1, 0, 0]' : 0.653416}
{'[1, 0, 5, 0, 6, 3, 0, 0, 27, 24, 0, 9, 0, 0, 0, 1, 0, 0]' : 0.658863}
{'[1, 0, 5, 0, 6, 3, 0, 0, 27, 24, 0, 9, 0, 0, 0, 1, 0, 0]' : 0.653773}
{'[1, 0, 5, 0, 6, 3, 0, 0, 27, 24, 0, 9, 0, 0, 0, 1, 0, 0]' : 0.651783}

out:
 ["{'[1, 0, 5, 0, 6, 3, 0, 0, 27, 24, 0, 9, 0, 0, 0, 1, 0, 0]' : 0.654797}", "{'[1, 0, 5, 0, 6, 3, 0, 0, 27, 24, 0, 9, 0, 0, 0, 1, 0, 0]' : 0.653003}", "{'[1, 0, 5, 0, 6, 3, 0, 0, 27, 24, 0, 9, 0, 0, 0, 1, 0, 0]' : 0.6612}", "{'[1, 0, 5, 0, 6, 3, 0, 0, 27, 24, 0, 9, 0, 0, 0, 1, 0, 0]' : 0.666315}", "{'[1, 0, 5, 0, 6, 3, 0, 0, 27, 24, 0, 9, 0, 0, 0, 1, 0, 0]' : 0.653443}", "{'[1, 0, 5, 0, 6, 3, 0, 0, 27, 24, 0, 9, 0, 0, 0, 1, 0, 0]' : 0.651558}", "{'[1, 0, 5, 0, 6, 3, 0, 0, 27, 24, 0, 9, 0, 0, 0, 1, 0, 0]' : 0.652438}", "{'[1, 0, 5, 0, 6, 3, 0, 0, 27, 24, 0, 9, 0, 0, 0, 1, 0, 0]' : 0.652827}", "{'[1, 0, 5, 0, 6, 3, 0, 0, 27, 24, 0, 9, 0, 0, 0, 1, 0, 0]' : 0.652367}", "{'[1, 0, 5, 0, 6, 3, 0, 0, 27, 24, 0, 9, 0, 0, 0, 1, 0, 0]' : 0.652526}", "{'[1, 0, 5, 0, 6, 3, 0, 0, 27, 24, 0, 9, 0, 0, 0, 1, 0, 0]' : 0.661459}", "{'[1, 0, 5, 0, 6, 3, 0, 0, 27, 24, 0, 9, 0, 0, 0, 1, 0, 0]' : 0.655399}", "{'[1, 0, 5, 0, 6, 3, 0, 0, 27, 24, 0, 9, 0, 0, 0, 1, 0, 0]' : 0.651898}", "{'[1, 0, 5, 0, 6, 3, 0, 0, 27, 24, 0, 9, 0, 0, 0, 1, 0, 0]' : 0.651669}", "{'[1, 0, 5, 0, 6, 3, 0, 0, 27, 24, 0, 9, 0, 0, 0, 1, 0, 0]' : 0.651469}", "{'[1, 0, 5, 0, 6, 3, 0, 0, 27, 24, 0, 9, 0, 0, 0, 1, 0, 0]' : 0.65113}", "{'[1, 0, 5, 0, 6, 3, 0, 0, 27, 24, 0, 9, 0, 0, 0, 1, 0, 0]' : 0.652394}", "{'[1, 0, 5, 0, 6, 3, 0, 0, 27, 24, 0, 9, 0, 0, 0, 1, 0, 0]' : 0.652723}", "{'[1, 0, 5, 0, 6, 3, 0, 0, 27, 24, 0, 9, 0, 0, 0, 1, 0, 0]' : 0.651857}", "{'[1, 0, 5, 0, 6, 3, 0, 0, 27, 24, 0, 9, 0, 0, 0, 1, 0, 0]' : 0.654077}", "{'[1, 0, 5, 0, 6, 3, 0, 0, 27, 24, 0, 9, 0, 0, 0, 1, 0, 0]' : 0.652582}", "{'[1, 0, 5, 0, 6, 3, 0, 0, 27, 24, 0, 9, 0, 0, 0, 1, 0, 0]' : 0.652302}", "{'[1, 0, 5, 0, 6, 3, 0, 0, 27, 24, 0, 9, 0, 0, 0, 1, 0, 0]' : 0.652438}", "{'[1, 0, 5, 0, 6, 3, 0, 0, 27, 24, 0, 9, 0, 0, 0, 1, 0, 0]' : 0.653442}", "{'[1, 0, 5, 0, 6, 3, 0, 0, 27, 24, 0, 9, 0, 0, 0, 1, 0, 0]' : 0.653617}", "{'[1, 0, 5, 0, 6, 3, 0, 0, 27, 24, 0, 9, 0, 0, 0, 1, 0, 0]' : 0.656106}", "{'[1, 0, 5, 0, 6, 3, 0, 0, 27, 24, 0, 9, 0, 0, 0, 1, 0, 0]' : 0.653416}", "{'[1, 0, 5, 0, 6, 3, 0, 0, 27, 24, 0, 9, 0, 0, 0, 1, 0, 0]' : 0.658863}", "{'[1, 0, 5, 0, 6, 3, 0, 0, 27, 24, 0, 9, 0, 0, 0, 1, 0, 0]' : 0.653773}", "{'[1, 0, 5, 0, 6, 3, 0, 0, 27, 24, 0, 9, 0, 0, 0, 1, 0, 0]' : 0.651783}"]
returning from 'run': {'[1, 0, 5, 0, 6, 3, 0, 0, 27, 24, 0, 9, 0, 0, 0, 1, 0, 0]': ([0.654797, 0.653003, 0.6612, 0.666315, 0.653443, 0.651558, 0.652438, 0.652827, 0.652367, 0.652526, 0.661459, 0.655399, 0.651898, 0.651669, 0.651469, 0.65113, 0.652394, 0.652723, 0.651857, 0.654077, 0.652582, 0.652302, 0.652438, 0.653442, 0.653617, 0.656106, 0.653416, 0.658863, 0.653773, 0.651783], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 5, 0, 6, 3, 0, 0, 27, 24, 0, 9, 0, 0, 0, 1, 0, 0]': ([0.654797, 0.653003, 0.6612, 0.666315, 0.653443, 0.651558, 0.652438, 0.652827, 0.652367, 0.652526, 0.661459, 0.655399, 0.651898, 0.651669, 0.651469, 0.65113, 0.652394, 0.652723, 0.651857, 0.654077, 0.652582, 0.652302, 0.652438, 0.653442, 0.653617, 0.656106, 0.653416, 0.658863, 0.653773, 0.651783], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = kkk
Code stats:
        Number of loops: 	56
        Max loop nest depth: 	5
        Additions: 		2702
        Multiplications: 	792
        Divisions: 		0
        Logical: 		0
        Reads: 			4392
        Writes: 		552
        Comparisons:		56
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest5.exe __orio_perftest5.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest5.exe  
Program Test Output: 
{'[2, 0, 4, 2, 0, 2, 0, 0, 20, 20, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.713966}
{'[2, 0, 4, 2, 0, 2, 0, 0, 20, 20, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.716181}
{'[2, 0, 4, 2, 0, 2, 0, 0, 20, 20, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.712764}
{'[2, 0, 4, 2, 0, 2, 0, 0, 20, 20, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.712512}
{'[2, 0, 4, 2, 0, 2, 0, 0, 20, 20, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.714964}
{'[2, 0, 4, 2, 0, 2, 0, 0, 20, 20, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.714175}
{'[2, 0, 4, 2, 0, 2, 0, 0, 20, 20, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.715549}
{'[2, 0, 4, 2, 0, 2, 0, 0, 20, 20, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.712603}
{'[2, 0, 4, 2, 0, 2, 0, 0, 20, 20, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.716873}
{'[2, 0, 4, 2, 0, 2, 0, 0, 20, 20, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.716174}
{'[2, 0, 4, 2, 0, 2, 0, 0, 20, 20, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.713863}
{'[2, 0, 4, 2, 0, 2, 0, 0, 20, 20, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.717931}
{'[2, 0, 4, 2, 0, 2, 0, 0, 20, 20, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.715558}
{'[2, 0, 4, 2, 0, 2, 0, 0, 20, 20, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.713277}
{'[2, 0, 4, 2, 0, 2, 0, 0, 20, 20, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.714148}
{'[2, 0, 4, 2, 0, 2, 0, 0, 20, 20, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.714773}
{'[2, 0, 4, 2, 0, 2, 0, 0, 20, 20, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.71556}
{'[2, 0, 4, 2, 0, 2, 0, 0, 20, 20, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.713294}
{'[2, 0, 4, 2, 0, 2, 0, 0, 20, 20, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.714725}
{'[2, 0, 4, 2, 0, 2, 0, 0, 20, 20, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.715898}
{'[2, 0, 4, 2, 0, 2, 0, 0, 20, 20, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.718136}
{'[2, 0, 4, 2, 0, 2, 0, 0, 20, 20, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.714369}
{'[2, 0, 4, 2, 0, 2, 0, 0, 20, 20, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.712792}
{'[2, 0, 4, 2, 0, 2, 0, 0, 20, 20, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.71338}
{'[2, 0, 4, 2, 0, 2, 0, 0, 20, 20, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.712507}
{'[2, 0, 4, 2, 0, 2, 0, 0, 20, 20, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.712887}
{'[2, 0, 4, 2, 0, 2, 0, 0, 20, 20, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.713438}
{'[2, 0, 4, 2, 0, 2, 0, 0, 20, 20, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.727099}
{'[2, 0, 4, 2, 0, 2, 0, 0, 20, 20, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.750461}
{'[2, 0, 4, 2, 0, 2, 0, 0, 20, 20, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.714056}

out:
 ["{'[2, 0, 4, 2, 0, 2, 0, 0, 20, 20, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.713966}", "{'[2, 0, 4, 2, 0, 2, 0, 0, 20, 20, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.716181}", "{'[2, 0, 4, 2, 0, 2, 0, 0, 20, 20, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.712764}", "{'[2, 0, 4, 2, 0, 2, 0, 0, 20, 20, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.712512}", "{'[2, 0, 4, 2, 0, 2, 0, 0, 20, 20, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.714964}", "{'[2, 0, 4, 2, 0, 2, 0, 0, 20, 20, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.714175}", "{'[2, 0, 4, 2, 0, 2, 0, 0, 20, 20, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.715549}", "{'[2, 0, 4, 2, 0, 2, 0, 0, 20, 20, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.712603}", "{'[2, 0, 4, 2, 0, 2, 0, 0, 20, 20, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.716873}", "{'[2, 0, 4, 2, 0, 2, 0, 0, 20, 20, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.716174}", "{'[2, 0, 4, 2, 0, 2, 0, 0, 20, 20, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.713863}", "{'[2, 0, 4, 2, 0, 2, 0, 0, 20, 20, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.717931}", "{'[2, 0, 4, 2, 0, 2, 0, 0, 20, 20, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.715558}", "{'[2, 0, 4, 2, 0, 2, 0, 0, 20, 20, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.713277}", "{'[2, 0, 4, 2, 0, 2, 0, 0, 20, 20, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.714148}", "{'[2, 0, 4, 2, 0, 2, 0, 0, 20, 20, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.714773}", "{'[2, 0, 4, 2, 0, 2, 0, 0, 20, 20, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.71556}", "{'[2, 0, 4, 2, 0, 2, 0, 0, 20, 20, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.713294}", "{'[2, 0, 4, 2, 0, 2, 0, 0, 20, 20, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.714725}", "{'[2, 0, 4, 2, 0, 2, 0, 0, 20, 20, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.715898}", "{'[2, 0, 4, 2, 0, 2, 0, 0, 20, 20, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.718136}", "{'[2, 0, 4, 2, 0, 2, 0, 0, 20, 20, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.714369}", "{'[2, 0, 4, 2, 0, 2, 0, 0, 20, 20, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.712792}", "{'[2, 0, 4, 2, 0, 2, 0, 0, 20, 20, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.71338}", "{'[2, 0, 4, 2, 0, 2, 0, 0, 20, 20, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.712507}", "{'[2, 0, 4, 2, 0, 2, 0, 0, 20, 20, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.712887}", "{'[2, 0, 4, 2, 0, 2, 0, 0, 20, 20, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.713438}", "{'[2, 0, 4, 2, 0, 2, 0, 0, 20, 20, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.727099}", "{'[2, 0, 4, 2, 0, 2, 0, 0, 20, 20, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.750461}", "{'[2, 0, 4, 2, 0, 2, 0, 0, 20, 20, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.714056}"]
returning from 'run': {'[2, 0, 4, 2, 0, 2, 0, 0, 20, 20, 7, 0, 0, 0, 1, 0, 0, 0]': ([0.713966, 0.716181, 0.712764, 0.712512, 0.714964, 0.714175, 0.715549, 0.712603, 0.716873, 0.716174, 0.713863, 0.717931, 0.715558, 0.713277, 0.714148, 0.714773, 0.71556, 0.713294, 0.714725, 0.715898, 0.718136, 0.714369, 0.712792, 0.71338, 0.712507, 0.712887, 0.713438, 0.727099, 0.750461, 0.714056], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 4, 2, 0, 2, 0, 0, 20, 20, 7, 0, 0, 0, 1, 0, 0, 0]': ([0.713966, 0.716181, 0.712764, 0.712512, 0.714964, 0.714175, 0.715549, 0.712603, 0.716873, 0.716174, 0.713863, 0.717931, 0.715558, 0.713277, 0.714148, 0.714773, 0.71556, 0.713294, 0.714725, 0.715898, 0.718136, 0.714369, 0.712792, 0.71338, 0.712507, 0.712887, 0.713438, 0.727099, 0.750461, 0.714056], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	85
        Max loop nest depth: 	6
        Additions: 		6925
        Multiplications: 	1518
        Divisions: 		0
        Logical: 		0
        Reads: 			10093
        Writes: 		1036
        Comparisons:		85
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest6.exe __orio_perftest6.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest6.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest6.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest6.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 603, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 536, in dopt_anova
    i)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 485, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 387, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest6.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 603, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 536, in dopt_anova
    i)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 485, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 387, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	76
        Max loop nest depth: 	6
        Additions: 		5823
        Multiplications: 	2460
        Divisions: 		0
        Logical: 		0
        Reads: 			11354
        Writes: 		2112
        Comparisons:		76
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest7.exe __orio_perftest7.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest7.exe  
Program Test Output: 
{'[2, 2, 0, 4, 2, 1, 0, 0, 29, 28, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.439762}
{'[2, 2, 0, 4, 2, 1, 0, 0, 29, 28, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.438958}
{'[2, 2, 0, 4, 2, 1, 0, 0, 29, 28, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.439149}
{'[2, 2, 0, 4, 2, 1, 0, 0, 29, 28, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.438828}
{'[2, 2, 0, 4, 2, 1, 0, 0, 29, 28, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.438682}
{'[2, 2, 0, 4, 2, 1, 0, 0, 29, 28, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.439198}
{'[2, 2, 0, 4, 2, 1, 0, 0, 29, 28, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.438633}
{'[2, 2, 0, 4, 2, 1, 0, 0, 29, 28, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.438445}
{'[2, 2, 0, 4, 2, 1, 0, 0, 29, 28, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.437977}
{'[2, 2, 0, 4, 2, 1, 0, 0, 29, 28, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.442175}
{'[2, 2, 0, 4, 2, 1, 0, 0, 29, 28, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.43781}
{'[2, 2, 0, 4, 2, 1, 0, 0, 29, 28, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.43948}
{'[2, 2, 0, 4, 2, 1, 0, 0, 29, 28, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.438431}
{'[2, 2, 0, 4, 2, 1, 0, 0, 29, 28, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.441448}
{'[2, 2, 0, 4, 2, 1, 0, 0, 29, 28, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.490556}
{'[2, 2, 0, 4, 2, 1, 0, 0, 29, 28, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.44352}
{'[2, 2, 0, 4, 2, 1, 0, 0, 29, 28, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.438976}
{'[2, 2, 0, 4, 2, 1, 0, 0, 29, 28, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.438918}
{'[2, 2, 0, 4, 2, 1, 0, 0, 29, 28, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.439032}
{'[2, 2, 0, 4, 2, 1, 0, 0, 29, 28, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.445261}
{'[2, 2, 0, 4, 2, 1, 0, 0, 29, 28, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.479677}
{'[2, 2, 0, 4, 2, 1, 0, 0, 29, 28, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.448714}
{'[2, 2, 0, 4, 2, 1, 0, 0, 29, 28, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.443241}
{'[2, 2, 0, 4, 2, 1, 0, 0, 29, 28, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.445945}
{'[2, 2, 0, 4, 2, 1, 0, 0, 29, 28, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.499565}
{'[2, 2, 0, 4, 2, 1, 0, 0, 29, 28, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.520245}
{'[2, 2, 0, 4, 2, 1, 0, 0, 29, 28, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.478053}
{'[2, 2, 0, 4, 2, 1, 0, 0, 29, 28, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.444811}
{'[2, 2, 0, 4, 2, 1, 0, 0, 29, 28, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.452295}
{'[2, 2, 0, 4, 2, 1, 0, 0, 29, 28, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.469317}

out:
 ["{'[2, 2, 0, 4, 2, 1, 0, 0, 29, 28, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.439762}", "{'[2, 2, 0, 4, 2, 1, 0, 0, 29, 28, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.438958}", "{'[2, 2, 0, 4, 2, 1, 0, 0, 29, 28, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.439149}", "{'[2, 2, 0, 4, 2, 1, 0, 0, 29, 28, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.438828}", "{'[2, 2, 0, 4, 2, 1, 0, 0, 29, 28, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.438682}", "{'[2, 2, 0, 4, 2, 1, 0, 0, 29, 28, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.439198}", "{'[2, 2, 0, 4, 2, 1, 0, 0, 29, 28, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.438633}", "{'[2, 2, 0, 4, 2, 1, 0, 0, 29, 28, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.438445}", "{'[2, 2, 0, 4, 2, 1, 0, 0, 29, 28, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.437977}", "{'[2, 2, 0, 4, 2, 1, 0, 0, 29, 28, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.442175}", "{'[2, 2, 0, 4, 2, 1, 0, 0, 29, 28, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.43781}", "{'[2, 2, 0, 4, 2, 1, 0, 0, 29, 28, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.43948}", "{'[2, 2, 0, 4, 2, 1, 0, 0, 29, 28, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.438431}", "{'[2, 2, 0, 4, 2, 1, 0, 0, 29, 28, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.441448}", "{'[2, 2, 0, 4, 2, 1, 0, 0, 29, 28, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.490556}", "{'[2, 2, 0, 4, 2, 1, 0, 0, 29, 28, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.44352}", "{'[2, 2, 0, 4, 2, 1, 0, 0, 29, 28, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.438976}", "{'[2, 2, 0, 4, 2, 1, 0, 0, 29, 28, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.438918}", "{'[2, 2, 0, 4, 2, 1, 0, 0, 29, 28, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.439032}", "{'[2, 2, 0, 4, 2, 1, 0, 0, 29, 28, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.445261}", "{'[2, 2, 0, 4, 2, 1, 0, 0, 29, 28, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.479677}", "{'[2, 2, 0, 4, 2, 1, 0, 0, 29, 28, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.448714}", "{'[2, 2, 0, 4, 2, 1, 0, 0, 29, 28, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.443241}", "{'[2, 2, 0, 4, 2, 1, 0, 0, 29, 28, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.445945}", "{'[2, 2, 0, 4, 2, 1, 0, 0, 29, 28, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.499565}", "{'[2, 2, 0, 4, 2, 1, 0, 0, 29, 28, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.520245}", "{'[2, 2, 0, 4, 2, 1, 0, 0, 29, 28, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.478053}", "{'[2, 2, 0, 4, 2, 1, 0, 0, 29, 28, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.444811}", "{'[2, 2, 0, 4, 2, 1, 0, 0, 29, 28, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.452295}", "{'[2, 2, 0, 4, 2, 1, 0, 0, 29, 28, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.469317}"]
returning from 'run': {'[2, 2, 0, 4, 2, 1, 0, 0, 29, 28, 0, 6, 0, 0, 2, 1, 0, 0]': ([0.439762, 0.438958, 0.439149, 0.438828, 0.438682, 0.439198, 0.438633, 0.438445, 0.437977, 0.442175, 0.43781, 0.43948, 0.438431, 0.441448, 0.490556, 0.44352, 0.438976, 0.438918, 0.439032, 0.445261, 0.479677, 0.448714, 0.443241, 0.445945, 0.499565, 0.520245, 0.478053, 0.444811, 0.452295, 0.469317], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 2, 0, 4, 2, 1, 0, 0, 29, 28, 0, 6, 0, 0, 2, 1, 0, 0]': ([0.439762, 0.438958, 0.439149, 0.438828, 0.438682, 0.439198, 0.438633, 0.438445, 0.437977, 0.442175, 0.43781, 0.43948, 0.438431, 0.441448, 0.490556, 0.44352, 0.438976, 0.438918, 0.439032, 0.445261, 0.479677, 0.448714, 0.443241, 0.445945, 0.499565, 0.520245, 0.478053, 0.444811, 0.452295, 0.469317], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Code stats:
        Number of loops: 	163
        Max loop nest depth: 	5
        Additions: 		9867
        Multiplications: 	2160
        Divisions: 		0
        Logical: 		0
        Reads: 			14654
        Writes: 		1644
        Comparisons:		163
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest8.exe __orio_perftest8.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest8.exe  
Program Test Output: 
{'[4, 0, 4, 0, 4, 5, 1, 1, 27, 26, 0, 20, 1, 1, 0, 0, 1, 1]' : 0.254431}
{'[4, 0, 4, 0, 4, 5, 1, 1, 27, 26, 0, 20, 1, 1, 0, 0, 1, 1]' : 0.254489}
{'[4, 0, 4, 0, 4, 5, 1, 1, 27, 26, 0, 20, 1, 1, 0, 0, 1, 1]' : 0.272901}
{'[4, 0, 4, 0, 4, 5, 1, 1, 27, 26, 0, 20, 1, 1, 0, 0, 1, 1]' : 0.255333}
{'[4, 0, 4, 0, 4, 5, 1, 1, 27, 26, 0, 20, 1, 1, 0, 0, 1, 1]' : 0.253654}
{'[4, 0, 4, 0, 4, 5, 1, 1, 27, 26, 0, 20, 1, 1, 0, 0, 1, 1]' : 0.255637}
{'[4, 0, 4, 0, 4, 5, 1, 1, 27, 26, 0, 20, 1, 1, 0, 0, 1, 1]' : 0.252518}
{'[4, 0, 4, 0, 4, 5, 1, 1, 27, 26, 0, 20, 1, 1, 0, 0, 1, 1]' : 0.253712}
{'[4, 0, 4, 0, 4, 5, 1, 1, 27, 26, 0, 20, 1, 1, 0, 0, 1, 1]' : 0.256141}
{'[4, 0, 4, 0, 4, 5, 1, 1, 27, 26, 0, 20, 1, 1, 0, 0, 1, 1]' : 0.254053}
{'[4, 0, 4, 0, 4, 5, 1, 1, 27, 26, 0, 20, 1, 1, 0, 0, 1, 1]' : 0.255081}
{'[4, 0, 4, 0, 4, 5, 1, 1, 27, 26, 0, 20, 1, 1, 0, 0, 1, 1]' : 0.253278}
{'[4, 0, 4, 0, 4, 5, 1, 1, 27, 26, 0, 20, 1, 1, 0, 0, 1, 1]' : 0.257236}
{'[4, 0, 4, 0, 4, 5, 1, 1, 27, 26, 0, 20, 1, 1, 0, 0, 1, 1]' : 0.25452}
{'[4, 0, 4, 0, 4, 5, 1, 1, 27, 26, 0, 20, 1, 1, 0, 0, 1, 1]' : 0.257412}
{'[4, 0, 4, 0, 4, 5, 1, 1, 27, 26, 0, 20, 1, 1, 0, 0, 1, 1]' : 0.263788}
{'[4, 0, 4, 0, 4, 5, 1, 1, 27, 26, 0, 20, 1, 1, 0, 0, 1, 1]' : 0.264543}
{'[4, 0, 4, 0, 4, 5, 1, 1, 27, 26, 0, 20, 1, 1, 0, 0, 1, 1]' : 0.261173}
{'[4, 0, 4, 0, 4, 5, 1, 1, 27, 26, 0, 20, 1, 1, 0, 0, 1, 1]' : 0.255953}
{'[4, 0, 4, 0, 4, 5, 1, 1, 27, 26, 0, 20, 1, 1, 0, 0, 1, 1]' : 0.256282}
{'[4, 0, 4, 0, 4, 5, 1, 1, 27, 26, 0, 20, 1, 1, 0, 0, 1, 1]' : 0.256425}
{'[4, 0, 4, 0, 4, 5, 1, 1, 27, 26, 0, 20, 1, 1, 0, 0, 1, 1]' : 0.296401}
{'[4, 0, 4, 0, 4, 5, 1, 1, 27, 26, 0, 20, 1, 1, 0, 0, 1, 1]' : 0.286363}
{'[4, 0, 4, 0, 4, 5, 1, 1, 27, 26, 0, 20, 1, 1, 0, 0, 1, 1]' : 0.273816}
{'[4, 0, 4, 0, 4, 5, 1, 1, 27, 26, 0, 20, 1, 1, 0, 0, 1, 1]' : 0.282905}
{'[4, 0, 4, 0, 4, 5, 1, 1, 27, 26, 0, 20, 1, 1, 0, 0, 1, 1]' : 0.253692}
{'[4, 0, 4, 0, 4, 5, 1, 1, 27, 26, 0, 20, 1, 1, 0, 0, 1, 1]' : 0.257371}
{'[4, 0, 4, 0, 4, 5, 1, 1, 27, 26, 0, 20, 1, 1, 0, 0, 1, 1]' : 0.254381}
{'[4, 0, 4, 0, 4, 5, 1, 1, 27, 26, 0, 20, 1, 1, 0, 0, 1, 1]' : 0.258653}
{'[4, 0, 4, 0, 4, 5, 1, 1, 27, 26, 0, 20, 1, 1, 0, 0, 1, 1]' : 0.253542}

out:
 ["{'[4, 0, 4, 0, 4, 5, 1, 1, 27, 26, 0, 20, 1, 1, 0, 0, 1, 1]' : 0.254431}", "{'[4, 0, 4, 0, 4, 5, 1, 1, 27, 26, 0, 20, 1, 1, 0, 0, 1, 1]' : 0.254489}", "{'[4, 0, 4, 0, 4, 5, 1, 1, 27, 26, 0, 20, 1, 1, 0, 0, 1, 1]' : 0.272901}", "{'[4, 0, 4, 0, 4, 5, 1, 1, 27, 26, 0, 20, 1, 1, 0, 0, 1, 1]' : 0.255333}", "{'[4, 0, 4, 0, 4, 5, 1, 1, 27, 26, 0, 20, 1, 1, 0, 0, 1, 1]' : 0.253654}", "{'[4, 0, 4, 0, 4, 5, 1, 1, 27, 26, 0, 20, 1, 1, 0, 0, 1, 1]' : 0.255637}", "{'[4, 0, 4, 0, 4, 5, 1, 1, 27, 26, 0, 20, 1, 1, 0, 0, 1, 1]' : 0.252518}", "{'[4, 0, 4, 0, 4, 5, 1, 1, 27, 26, 0, 20, 1, 1, 0, 0, 1, 1]' : 0.253712}", "{'[4, 0, 4, 0, 4, 5, 1, 1, 27, 26, 0, 20, 1, 1, 0, 0, 1, 1]' : 0.256141}", "{'[4, 0, 4, 0, 4, 5, 1, 1, 27, 26, 0, 20, 1, 1, 0, 0, 1, 1]' : 0.254053}", "{'[4, 0, 4, 0, 4, 5, 1, 1, 27, 26, 0, 20, 1, 1, 0, 0, 1, 1]' : 0.255081}", "{'[4, 0, 4, 0, 4, 5, 1, 1, 27, 26, 0, 20, 1, 1, 0, 0, 1, 1]' : 0.253278}", "{'[4, 0, 4, 0, 4, 5, 1, 1, 27, 26, 0, 20, 1, 1, 0, 0, 1, 1]' : 0.257236}", "{'[4, 0, 4, 0, 4, 5, 1, 1, 27, 26, 0, 20, 1, 1, 0, 0, 1, 1]' : 0.25452}", "{'[4, 0, 4, 0, 4, 5, 1, 1, 27, 26, 0, 20, 1, 1, 0, 0, 1, 1]' : 0.257412}", "{'[4, 0, 4, 0, 4, 5, 1, 1, 27, 26, 0, 20, 1, 1, 0, 0, 1, 1]' : 0.263788}", "{'[4, 0, 4, 0, 4, 5, 1, 1, 27, 26, 0, 20, 1, 1, 0, 0, 1, 1]' : 0.264543}", "{'[4, 0, 4, 0, 4, 5, 1, 1, 27, 26, 0, 20, 1, 1, 0, 0, 1, 1]' : 0.261173}", "{'[4, 0, 4, 0, 4, 5, 1, 1, 27, 26, 0, 20, 1, 1, 0, 0, 1, 1]' : 0.255953}", "{'[4, 0, 4, 0, 4, 5, 1, 1, 27, 26, 0, 20, 1, 1, 0, 0, 1, 1]' : 0.256282}", "{'[4, 0, 4, 0, 4, 5, 1, 1, 27, 26, 0, 20, 1, 1, 0, 0, 1, 1]' : 0.256425}", "{'[4, 0, 4, 0, 4, 5, 1, 1, 27, 26, 0, 20, 1, 1, 0, 0, 1, 1]' : 0.296401}", "{'[4, 0, 4, 0, 4, 5, 1, 1, 27, 26, 0, 20, 1, 1, 0, 0, 1, 1]' : 0.286363}", "{'[4, 0, 4, 0, 4, 5, 1, 1, 27, 26, 0, 20, 1, 1, 0, 0, 1, 1]' : 0.273816}", "{'[4, 0, 4, 0, 4, 5, 1, 1, 27, 26, 0, 20, 1, 1, 0, 0, 1, 1]' : 0.282905}", "{'[4, 0, 4, 0, 4, 5, 1, 1, 27, 26, 0, 20, 1, 1, 0, 0, 1, 1]' : 0.253692}", "{'[4, 0, 4, 0, 4, 5, 1, 1, 27, 26, 0, 20, 1, 1, 0, 0, 1, 1]' : 0.257371}", "{'[4, 0, 4, 0, 4, 5, 1, 1, 27, 26, 0, 20, 1, 1, 0, 0, 1, 1]' : 0.254381}", "{'[4, 0, 4, 0, 4, 5, 1, 1, 27, 26, 0, 20, 1, 1, 0, 0, 1, 1]' : 0.258653}", "{'[4, 0, 4, 0, 4, 5, 1, 1, 27, 26, 0, 20, 1, 1, 0, 0, 1, 1]' : 0.253542}"]
returning from 'run': {'[4, 0, 4, 0, 4, 5, 1, 1, 27, 26, 0, 20, 1, 1, 0, 0, 1, 1]': ([0.254431, 0.254489, 0.272901, 0.255333, 0.253654, 0.255637, 0.252518, 0.253712, 0.256141, 0.254053, 0.255081, 0.253278, 0.257236, 0.25452, 0.257412, 0.263788, 0.264543, 0.261173, 0.255953, 0.256282, 0.256425, 0.296401, 0.286363, 0.273816, 0.282905, 0.253692, 0.257371, 0.254381, 0.258653, 0.253542], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 0, 4, 0, 4, 5, 1, 1, 27, 26, 0, 20, 1, 1, 0, 0, 1, 1]': ([0.254431, 0.254489, 0.272901, 0.255333, 0.253654, 0.255637, 0.252518, 0.253712, 0.256141, 0.254053, 0.255081, 0.253278, 0.257236, 0.25452, 0.257412, 0.263788, 0.264543, 0.261173, 0.255953, 0.256282, 0.256425, 0.296401, 0.286363, 0.273816, 0.282905, 0.253692, 0.257371, 0.254381, 0.258653, 0.253542], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Code stats:
        Number of loops: 	76
        Max loop nest depth: 	6
        Additions: 		1573
        Multiplications: 	612
        Divisions: 		0
        Logical: 		0
        Reads: 			3370
        Writes: 		661
        Comparisons:		76
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest9.exe __orio_perftest9.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest9.exe  
Program Test Output: 
{'[3, 6, 1, 6, 0, 3, 0, 1, 2, 24, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.276565}
{'[3, 6, 1, 6, 0, 3, 0, 1, 2, 24, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.27599}
{'[3, 6, 1, 6, 0, 3, 0, 1, 2, 24, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.275124}
{'[3, 6, 1, 6, 0, 3, 0, 1, 2, 24, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.273869}
{'[3, 6, 1, 6, 0, 3, 0, 1, 2, 24, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.27778}
{'[3, 6, 1, 6, 0, 3, 0, 1, 2, 24, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.273703}
{'[3, 6, 1, 6, 0, 3, 0, 1, 2, 24, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.275425}
{'[3, 6, 1, 6, 0, 3, 0, 1, 2, 24, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.278467}
{'[3, 6, 1, 6, 0, 3, 0, 1, 2, 24, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.282957}
{'[3, 6, 1, 6, 0, 3, 0, 1, 2, 24, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.273005}
{'[3, 6, 1, 6, 0, 3, 0, 1, 2, 24, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.273741}
{'[3, 6, 1, 6, 0, 3, 0, 1, 2, 24, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.291856}
{'[3, 6, 1, 6, 0, 3, 0, 1, 2, 24, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.280211}
{'[3, 6, 1, 6, 0, 3, 0, 1, 2, 24, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.283374}
{'[3, 6, 1, 6, 0, 3, 0, 1, 2, 24, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.273786}
{'[3, 6, 1, 6, 0, 3, 0, 1, 2, 24, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.278511}
{'[3, 6, 1, 6, 0, 3, 0, 1, 2, 24, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.277771}
{'[3, 6, 1, 6, 0, 3, 0, 1, 2, 24, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.276385}
{'[3, 6, 1, 6, 0, 3, 0, 1, 2, 24, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.279103}
{'[3, 6, 1, 6, 0, 3, 0, 1, 2, 24, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.28607}
{'[3, 6, 1, 6, 0, 3, 0, 1, 2, 24, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.285142}
{'[3, 6, 1, 6, 0, 3, 0, 1, 2, 24, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.283909}
{'[3, 6, 1, 6, 0, 3, 0, 1, 2, 24, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.290763}
{'[3, 6, 1, 6, 0, 3, 0, 1, 2, 24, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.282786}
{'[3, 6, 1, 6, 0, 3, 0, 1, 2, 24, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.290324}
{'[3, 6, 1, 6, 0, 3, 0, 1, 2, 24, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.294825}
{'[3, 6, 1, 6, 0, 3, 0, 1, 2, 24, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.276942}
{'[3, 6, 1, 6, 0, 3, 0, 1, 2, 24, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.281755}
{'[3, 6, 1, 6, 0, 3, 0, 1, 2, 24, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.306249}
{'[3, 6, 1, 6, 0, 3, 0, 1, 2, 24, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.301511}

out:
 ["{'[3, 6, 1, 6, 0, 3, 0, 1, 2, 24, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.276565}", "{'[3, 6, 1, 6, 0, 3, 0, 1, 2, 24, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.27599}", "{'[3, 6, 1, 6, 0, 3, 0, 1, 2, 24, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.275124}", "{'[3, 6, 1, 6, 0, 3, 0, 1, 2, 24, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.273869}", "{'[3, 6, 1, 6, 0, 3, 0, 1, 2, 24, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.27778}", "{'[3, 6, 1, 6, 0, 3, 0, 1, 2, 24, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.273703}", "{'[3, 6, 1, 6, 0, 3, 0, 1, 2, 24, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.275425}", "{'[3, 6, 1, 6, 0, 3, 0, 1, 2, 24, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.278467}", "{'[3, 6, 1, 6, 0, 3, 0, 1, 2, 24, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.282957}", "{'[3, 6, 1, 6, 0, 3, 0, 1, 2, 24, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.273005}", "{'[3, 6, 1, 6, 0, 3, 0, 1, 2, 24, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.273741}", "{'[3, 6, 1, 6, 0, 3, 0, 1, 2, 24, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.291856}", "{'[3, 6, 1, 6, 0, 3, 0, 1, 2, 24, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.280211}", "{'[3, 6, 1, 6, 0, 3, 0, 1, 2, 24, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.283374}", "{'[3, 6, 1, 6, 0, 3, 0, 1, 2, 24, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.273786}", "{'[3, 6, 1, 6, 0, 3, 0, 1, 2, 24, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.278511}", "{'[3, 6, 1, 6, 0, 3, 0, 1, 2, 24, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.277771}", "{'[3, 6, 1, 6, 0, 3, 0, 1, 2, 24, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.276385}", "{'[3, 6, 1, 6, 0, 3, 0, 1, 2, 24, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.279103}", "{'[3, 6, 1, 6, 0, 3, 0, 1, 2, 24, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.28607}", "{'[3, 6, 1, 6, 0, 3, 0, 1, 2, 24, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.285142}", "{'[3, 6, 1, 6, 0, 3, 0, 1, 2, 24, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.283909}", "{'[3, 6, 1, 6, 0, 3, 0, 1, 2, 24, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.290763}", "{'[3, 6, 1, 6, 0, 3, 0, 1, 2, 24, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.282786}", "{'[3, 6, 1, 6, 0, 3, 0, 1, 2, 24, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.290324}", "{'[3, 6, 1, 6, 0, 3, 0, 1, 2, 24, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.294825}", "{'[3, 6, 1, 6, 0, 3, 0, 1, 2, 24, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.276942}", "{'[3, 6, 1, 6, 0, 3, 0, 1, 2, 24, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.281755}", "{'[3, 6, 1, 6, 0, 3, 0, 1, 2, 24, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.306249}", "{'[3, 6, 1, 6, 0, 3, 0, 1, 2, 24, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.301511}"]
returning from 'run': {'[3, 6, 1, 6, 0, 3, 0, 1, 2, 24, 0, 21, 1, 0, 1, 1, 0, 0]': ([0.276565, 0.27599, 0.275124, 0.273869, 0.27778, 0.273703, 0.275425, 0.278467, 0.282957, 0.273005, 0.273741, 0.291856, 0.280211, 0.283374, 0.273786, 0.278511, 0.277771, 0.276385, 0.279103, 0.28607, 0.285142, 0.283909, 0.290763, 0.282786, 0.290324, 0.294825, 0.276942, 0.281755, 0.306249, 0.301511], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 6, 1, 6, 0, 3, 0, 1, 2, 24, 0, 21, 1, 0, 1, 1, 0, 0]': ([0.276565, 0.27599, 0.275124, 0.273869, 0.27778, 0.273703, 0.275425, 0.278467, 0.282957, 0.273005, 0.273741, 0.291856, 0.280211, 0.283374, 0.273786, 0.278511, 0.277771, 0.276385, 0.279103, 0.28607, 0.285142, 0.283909, 0.290763, 0.282786, 0.290324, 0.294825, 0.276942, 0.281755, 0.306249, 0.301511], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = jjj
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	5
        Additions: 		8300
        Multiplications: 	2494
        Divisions: 		0
        Logical: 		0
        Reads: 			12694
        Writes: 		1323
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest10.exe __orio_perftest10.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest10.exe  
Program Test Output: 
{'[6, 4, 1, 4, 2, 4, 0, 0, 14, 9, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.592194}
{'[6, 4, 1, 4, 2, 4, 0, 0, 14, 9, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.59002}
{'[6, 4, 1, 4, 2, 4, 0, 0, 14, 9, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.586368}
{'[6, 4, 1, 4, 2, 4, 0, 0, 14, 9, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.589637}
{'[6, 4, 1, 4, 2, 4, 0, 0, 14, 9, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.590308}
{'[6, 4, 1, 4, 2, 4, 0, 0, 14, 9, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.600565}
{'[6, 4, 1, 4, 2, 4, 0, 0, 14, 9, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.593708}
{'[6, 4, 1, 4, 2, 4, 0, 0, 14, 9, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.586242}
{'[6, 4, 1, 4, 2, 4, 0, 0, 14, 9, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.592245}
{'[6, 4, 1, 4, 2, 4, 0, 0, 14, 9, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.60913}
{'[6, 4, 1, 4, 2, 4, 0, 0, 14, 9, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.59157}
{'[6, 4, 1, 4, 2, 4, 0, 0, 14, 9, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.594206}
{'[6, 4, 1, 4, 2, 4, 0, 0, 14, 9, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.589976}
{'[6, 4, 1, 4, 2, 4, 0, 0, 14, 9, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.614931}
{'[6, 4, 1, 4, 2, 4, 0, 0, 14, 9, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.607279}
{'[6, 4, 1, 4, 2, 4, 0, 0, 14, 9, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.585956}
{'[6, 4, 1, 4, 2, 4, 0, 0, 14, 9, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.584635}
{'[6, 4, 1, 4, 2, 4, 0, 0, 14, 9, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.585652}
{'[6, 4, 1, 4, 2, 4, 0, 0, 14, 9, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.584179}
{'[6, 4, 1, 4, 2, 4, 0, 0, 14, 9, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.583807}
{'[6, 4, 1, 4, 2, 4, 0, 0, 14, 9, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.583986}
{'[6, 4, 1, 4, 2, 4, 0, 0, 14, 9, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.585892}
{'[6, 4, 1, 4, 2, 4, 0, 0, 14, 9, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.584707}
{'[6, 4, 1, 4, 2, 4, 0, 0, 14, 9, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.608539}
{'[6, 4, 1, 4, 2, 4, 0, 0, 14, 9, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.60228}
{'[6, 4, 1, 4, 2, 4, 0, 0, 14, 9, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.605004}
{'[6, 4, 1, 4, 2, 4, 0, 0, 14, 9, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.593215}
{'[6, 4, 1, 4, 2, 4, 0, 0, 14, 9, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.587611}
{'[6, 4, 1, 4, 2, 4, 0, 0, 14, 9, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.598593}
{'[6, 4, 1, 4, 2, 4, 0, 0, 14, 9, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.584961}

out:
 ["{'[6, 4, 1, 4, 2, 4, 0, 0, 14, 9, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.592194}", "{'[6, 4, 1, 4, 2, 4, 0, 0, 14, 9, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.59002}", "{'[6, 4, 1, 4, 2, 4, 0, 0, 14, 9, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.586368}", "{'[6, 4, 1, 4, 2, 4, 0, 0, 14, 9, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.589637}", "{'[6, 4, 1, 4, 2, 4, 0, 0, 14, 9, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.590308}", "{'[6, 4, 1, 4, 2, 4, 0, 0, 14, 9, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.600565}", "{'[6, 4, 1, 4, 2, 4, 0, 0, 14, 9, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.593708}", "{'[6, 4, 1, 4, 2, 4, 0, 0, 14, 9, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.586242}", "{'[6, 4, 1, 4, 2, 4, 0, 0, 14, 9, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.592245}", "{'[6, 4, 1, 4, 2, 4, 0, 0, 14, 9, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.60913}", "{'[6, 4, 1, 4, 2, 4, 0, 0, 14, 9, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.59157}", "{'[6, 4, 1, 4, 2, 4, 0, 0, 14, 9, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.594206}", "{'[6, 4, 1, 4, 2, 4, 0, 0, 14, 9, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.589976}", "{'[6, 4, 1, 4, 2, 4, 0, 0, 14, 9, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.614931}", "{'[6, 4, 1, 4, 2, 4, 0, 0, 14, 9, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.607279}", "{'[6, 4, 1, 4, 2, 4, 0, 0, 14, 9, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.585956}", "{'[6, 4, 1, 4, 2, 4, 0, 0, 14, 9, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.584635}", "{'[6, 4, 1, 4, 2, 4, 0, 0, 14, 9, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.585652}", "{'[6, 4, 1, 4, 2, 4, 0, 0, 14, 9, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.584179}", "{'[6, 4, 1, 4, 2, 4, 0, 0, 14, 9, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.583807}", "{'[6, 4, 1, 4, 2, 4, 0, 0, 14, 9, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.583986}", "{'[6, 4, 1, 4, 2, 4, 0, 0, 14, 9, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.585892}", "{'[6, 4, 1, 4, 2, 4, 0, 0, 14, 9, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.584707}", "{'[6, 4, 1, 4, 2, 4, 0, 0, 14, 9, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.608539}", "{'[6, 4, 1, 4, 2, 4, 0, 0, 14, 9, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.60228}", "{'[6, 4, 1, 4, 2, 4, 0, 0, 14, 9, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.605004}", "{'[6, 4, 1, 4, 2, 4, 0, 0, 14, 9, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.593215}", "{'[6, 4, 1, 4, 2, 4, 0, 0, 14, 9, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.587611}", "{'[6, 4, 1, 4, 2, 4, 0, 0, 14, 9, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.598593}", "{'[6, 4, 1, 4, 2, 4, 0, 0, 14, 9, 26, 0, 2, 0, 0, 0, 0, 0]' : 0.584961}"]
returning from 'run': {'[6, 4, 1, 4, 2, 4, 0, 0, 14, 9, 26, 0, 2, 0, 0, 0, 0, 0]': ([0.592194, 0.59002, 0.586368, 0.589637, 0.590308, 0.600565, 0.593708, 0.586242, 0.592245, 0.60913, 0.59157, 0.594206, 0.589976, 0.614931, 0.607279, 0.585956, 0.584635, 0.585652, 0.584179, 0.583807, 0.583986, 0.585892, 0.584707, 0.608539, 0.60228, 0.605004, 0.593215, 0.587611, 0.598593, 0.584961], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 4, 1, 4, 2, 4, 0, 0, 14, 9, 26, 0, 2, 0, 0, 0, 0, 0]': ([0.592194, 0.59002, 0.586368, 0.589637, 0.590308, 0.600565, 0.593708, 0.586242, 0.592245, 0.60913, 0.59157, 0.594206, 0.589976, 0.614931, 0.607279, 0.585956, 0.584635, 0.585652, 0.584179, 0.583807, 0.583986, 0.585892, 0.584707, 0.608539, 0.60228, 0.605004, 0.593215, 0.587611, 0.598593, 0.584961], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Code stats:
        Number of loops: 	53
        Max loop nest depth: 	5
        Additions: 		7445
        Multiplications: 	3596
        Divisions: 		0
        Logical: 		0
        Reads: 			14111
        Writes: 		2301
        Comparisons:		53
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest11.exe __orio_perftest11.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest11.exe  
Program Test Output: 
{'[2, 5, 2, 2, 0, 0, 1, 0, 24, 28, 0, 26, 2, 0, 0, 1, 1, 1]' : 0.487373}
{'[2, 5, 2, 2, 0, 0, 1, 0, 24, 28, 0, 26, 2, 0, 0, 1, 1, 1]' : 0.48974}
{'[2, 5, 2, 2, 0, 0, 1, 0, 24, 28, 0, 26, 2, 0, 0, 1, 1, 1]' : 0.489367}
{'[2, 5, 2, 2, 0, 0, 1, 0, 24, 28, 0, 26, 2, 0, 0, 1, 1, 1]' : 0.480047}
{'[2, 5, 2, 2, 0, 0, 1, 0, 24, 28, 0, 26, 2, 0, 0, 1, 1, 1]' : 0.484862}
{'[2, 5, 2, 2, 0, 0, 1, 0, 24, 28, 0, 26, 2, 0, 0, 1, 1, 1]' : 0.484247}
{'[2, 5, 2, 2, 0, 0, 1, 0, 24, 28, 0, 26, 2, 0, 0, 1, 1, 1]' : 0.481874}
{'[2, 5, 2, 2, 0, 0, 1, 0, 24, 28, 0, 26, 2, 0, 0, 1, 1, 1]' : 0.483017}
{'[2, 5, 2, 2, 0, 0, 1, 0, 24, 28, 0, 26, 2, 0, 0, 1, 1, 1]' : 0.479954}
{'[2, 5, 2, 2, 0, 0, 1, 0, 24, 28, 0, 26, 2, 0, 0, 1, 1, 1]' : 0.483941}
{'[2, 5, 2, 2, 0, 0, 1, 0, 24, 28, 0, 26, 2, 0, 0, 1, 1, 1]' : 0.479749}
{'[2, 5, 2, 2, 0, 0, 1, 0, 24, 28, 0, 26, 2, 0, 0, 1, 1, 1]' : 0.485353}
{'[2, 5, 2, 2, 0, 0, 1, 0, 24, 28, 0, 26, 2, 0, 0, 1, 1, 1]' : 0.478503}
{'[2, 5, 2, 2, 0, 0, 1, 0, 24, 28, 0, 26, 2, 0, 0, 1, 1, 1]' : 0.484304}
{'[2, 5, 2, 2, 0, 0, 1, 0, 24, 28, 0, 26, 2, 0, 0, 1, 1, 1]' : 0.479893}
{'[2, 5, 2, 2, 0, 0, 1, 0, 24, 28, 0, 26, 2, 0, 0, 1, 1, 1]' : 0.482837}
{'[2, 5, 2, 2, 0, 0, 1, 0, 24, 28, 0, 26, 2, 0, 0, 1, 1, 1]' : 0.480813}
{'[2, 5, 2, 2, 0, 0, 1, 0, 24, 28, 0, 26, 2, 0, 0, 1, 1, 1]' : 0.483669}
{'[2, 5, 2, 2, 0, 0, 1, 0, 24, 28, 0, 26, 2, 0, 0, 1, 1, 1]' : 0.482422}
{'[2, 5, 2, 2, 0, 0, 1, 0, 24, 28, 0, 26, 2, 0, 0, 1, 1, 1]' : 0.484446}
{'[2, 5, 2, 2, 0, 0, 1, 0, 24, 28, 0, 26, 2, 0, 0, 1, 1, 1]' : 0.481473}
{'[2, 5, 2, 2, 0, 0, 1, 0, 24, 28, 0, 26, 2, 0, 0, 1, 1, 1]' : 0.485788}
{'[2, 5, 2, 2, 0, 0, 1, 0, 24, 28, 0, 26, 2, 0, 0, 1, 1, 1]' : 0.48434}
{'[2, 5, 2, 2, 0, 0, 1, 0, 24, 28, 0, 26, 2, 0, 0, 1, 1, 1]' : 0.483542}
{'[2, 5, 2, 2, 0, 0, 1, 0, 24, 28, 0, 26, 2, 0, 0, 1, 1, 1]' : 0.48483}
{'[2, 5, 2, 2, 0, 0, 1, 0, 24, 28, 0, 26, 2, 0, 0, 1, 1, 1]' : 0.48512}
{'[2, 5, 2, 2, 0, 0, 1, 0, 24, 28, 0, 26, 2, 0, 0, 1, 1, 1]' : 0.479892}
{'[2, 5, 2, 2, 0, 0, 1, 0, 24, 28, 0, 26, 2, 0, 0, 1, 1, 1]' : 0.480643}
{'[2, 5, 2, 2, 0, 0, 1, 0, 24, 28, 0, 26, 2, 0, 0, 1, 1, 1]' : 0.481654}
{'[2, 5, 2, 2, 0, 0, 1, 0, 24, 28, 0, 26, 2, 0, 0, 1, 1, 1]' : 0.480538}

out:
 ["{'[2, 5, 2, 2, 0, 0, 1, 0, 24, 28, 0, 26, 2, 0, 0, 1, 1, 1]' : 0.487373}", "{'[2, 5, 2, 2, 0, 0, 1, 0, 24, 28, 0, 26, 2, 0, 0, 1, 1, 1]' : 0.48974}", "{'[2, 5, 2, 2, 0, 0, 1, 0, 24, 28, 0, 26, 2, 0, 0, 1, 1, 1]' : 0.489367}", "{'[2, 5, 2, 2, 0, 0, 1, 0, 24, 28, 0, 26, 2, 0, 0, 1, 1, 1]' : 0.480047}", "{'[2, 5, 2, 2, 0, 0, 1, 0, 24, 28, 0, 26, 2, 0, 0, 1, 1, 1]' : 0.484862}", "{'[2, 5, 2, 2, 0, 0, 1, 0, 24, 28, 0, 26, 2, 0, 0, 1, 1, 1]' : 0.484247}", "{'[2, 5, 2, 2, 0, 0, 1, 0, 24, 28, 0, 26, 2, 0, 0, 1, 1, 1]' : 0.481874}", "{'[2, 5, 2, 2, 0, 0, 1, 0, 24, 28, 0, 26, 2, 0, 0, 1, 1, 1]' : 0.483017}", "{'[2, 5, 2, 2, 0, 0, 1, 0, 24, 28, 0, 26, 2, 0, 0, 1, 1, 1]' : 0.479954}", "{'[2, 5, 2, 2, 0, 0, 1, 0, 24, 28, 0, 26, 2, 0, 0, 1, 1, 1]' : 0.483941}", "{'[2, 5, 2, 2, 0, 0, 1, 0, 24, 28, 0, 26, 2, 0, 0, 1, 1, 1]' : 0.479749}", "{'[2, 5, 2, 2, 0, 0, 1, 0, 24, 28, 0, 26, 2, 0, 0, 1, 1, 1]' : 0.485353}", "{'[2, 5, 2, 2, 0, 0, 1, 0, 24, 28, 0, 26, 2, 0, 0, 1, 1, 1]' : 0.478503}", "{'[2, 5, 2, 2, 0, 0, 1, 0, 24, 28, 0, 26, 2, 0, 0, 1, 1, 1]' : 0.484304}", "{'[2, 5, 2, 2, 0, 0, 1, 0, 24, 28, 0, 26, 2, 0, 0, 1, 1, 1]' : 0.479893}", "{'[2, 5, 2, 2, 0, 0, 1, 0, 24, 28, 0, 26, 2, 0, 0, 1, 1, 1]' : 0.482837}", "{'[2, 5, 2, 2, 0, 0, 1, 0, 24, 28, 0, 26, 2, 0, 0, 1, 1, 1]' : 0.480813}", "{'[2, 5, 2, 2, 0, 0, 1, 0, 24, 28, 0, 26, 2, 0, 0, 1, 1, 1]' : 0.483669}", "{'[2, 5, 2, 2, 0, 0, 1, 0, 24, 28, 0, 26, 2, 0, 0, 1, 1, 1]' : 0.482422}", "{'[2, 5, 2, 2, 0, 0, 1, 0, 24, 28, 0, 26, 2, 0, 0, 1, 1, 1]' : 0.484446}", "{'[2, 5, 2, 2, 0, 0, 1, 0, 24, 28, 0, 26, 2, 0, 0, 1, 1, 1]' : 0.481473}", "{'[2, 5, 2, 2, 0, 0, 1, 0, 24, 28, 0, 26, 2, 0, 0, 1, 1, 1]' : 0.485788}", "{'[2, 5, 2, 2, 0, 0, 1, 0, 24, 28, 0, 26, 2, 0, 0, 1, 1, 1]' : 0.48434}", "{'[2, 5, 2, 2, 0, 0, 1, 0, 24, 28, 0, 26, 2, 0, 0, 1, 1, 1]' : 0.483542}", "{'[2, 5, 2, 2, 0, 0, 1, 0, 24, 28, 0, 26, 2, 0, 0, 1, 1, 1]' : 0.48483}", "{'[2, 5, 2, 2, 0, 0, 1, 0, 24, 28, 0, 26, 2, 0, 0, 1, 1, 1]' : 0.48512}", "{'[2, 5, 2, 2, 0, 0, 1, 0, 24, 28, 0, 26, 2, 0, 0, 1, 1, 1]' : 0.479892}", "{'[2, 5, 2, 2, 0, 0, 1, 0, 24, 28, 0, 26, 2, 0, 0, 1, 1, 1]' : 0.480643}", "{'[2, 5, 2, 2, 0, 0, 1, 0, 24, 28, 0, 26, 2, 0, 0, 1, 1, 1]' : 0.481654}", "{'[2, 5, 2, 2, 0, 0, 1, 0, 24, 28, 0, 26, 2, 0, 0, 1, 1, 1]' : 0.480538}"]
returning from 'run': {'[2, 5, 2, 2, 0, 0, 1, 0, 24, 28, 0, 26, 2, 0, 0, 1, 1, 1]': ([0.487373, 0.48974, 0.489367, 0.480047, 0.484862, 0.484247, 0.481874, 0.483017, 0.479954, 0.483941, 0.479749, 0.485353, 0.478503, 0.484304, 0.479893, 0.482837, 0.480813, 0.483669, 0.482422, 0.484446, 0.481473, 0.485788, 0.48434, 0.483542, 0.48483, 0.48512, 0.479892, 0.480643, 0.481654, 0.480538], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 5, 2, 2, 0, 0, 1, 0, 24, 28, 0, 26, 2, 0, 0, 1, 1, 1]': ([0.487373, 0.48974, 0.489367, 0.480047, 0.484862, 0.484247, 0.481874, 0.483017, 0.479954, 0.483941, 0.479749, 0.485353, 0.478503, 0.484304, 0.479893, 0.482837, 0.480813, 0.483669, 0.482422, 0.484446, 0.481473, 0.485788, 0.48434, 0.483542, 0.48483, 0.48512, 0.479892, 0.480643, 0.481654, 0.480538], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = kkk
Code stats:
        Number of loops: 	58
        Max loop nest depth: 	6
        Additions: 		3276
        Multiplications: 	920
        Divisions: 		0
        Logical: 		0
        Reads: 			5288
        Writes: 		681
        Comparisons:		58
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest12.exe __orio_perftest12.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest12.exe  
Program Test Output: 
{'[2, 6, 4, 5, 6, 2, 0, 0, 14, 18, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.491148}
{'[2, 6, 4, 5, 6, 2, 0, 0, 14, 18, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.490743}
{'[2, 6, 4, 5, 6, 2, 0, 0, 14, 18, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.49516}
{'[2, 6, 4, 5, 6, 2, 0, 0, 14, 18, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.490606}
{'[2, 6, 4, 5, 6, 2, 0, 0, 14, 18, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.491166}
{'[2, 6, 4, 5, 6, 2, 0, 0, 14, 18, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.490936}
{'[2, 6, 4, 5, 6, 2, 0, 0, 14, 18, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.491644}
{'[2, 6, 4, 5, 6, 2, 0, 0, 14, 18, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.492128}
{'[2, 6, 4, 5, 6, 2, 0, 0, 14, 18, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.493597}
{'[2, 6, 4, 5, 6, 2, 0, 0, 14, 18, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.490927}
{'[2, 6, 4, 5, 6, 2, 0, 0, 14, 18, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.494682}
{'[2, 6, 4, 5, 6, 2, 0, 0, 14, 18, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.495389}
{'[2, 6, 4, 5, 6, 2, 0, 0, 14, 18, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.49438}
{'[2, 6, 4, 5, 6, 2, 0, 0, 14, 18, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.49154}
{'[2, 6, 4, 5, 6, 2, 0, 0, 14, 18, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.491399}
{'[2, 6, 4, 5, 6, 2, 0, 0, 14, 18, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.490732}
{'[2, 6, 4, 5, 6, 2, 0, 0, 14, 18, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.490749}
{'[2, 6, 4, 5, 6, 2, 0, 0, 14, 18, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.491268}
{'[2, 6, 4, 5, 6, 2, 0, 0, 14, 18, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.490548}
{'[2, 6, 4, 5, 6, 2, 0, 0, 14, 18, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.491334}
{'[2, 6, 4, 5, 6, 2, 0, 0, 14, 18, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.490692}
{'[2, 6, 4, 5, 6, 2, 0, 0, 14, 18, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.491072}
{'[2, 6, 4, 5, 6, 2, 0, 0, 14, 18, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.490548}
{'[2, 6, 4, 5, 6, 2, 0, 0, 14, 18, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.491434}
{'[2, 6, 4, 5, 6, 2, 0, 0, 14, 18, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.490674}
{'[2, 6, 4, 5, 6, 2, 0, 0, 14, 18, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.492357}
{'[2, 6, 4, 5, 6, 2, 0, 0, 14, 18, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.492742}
{'[2, 6, 4, 5, 6, 2, 0, 0, 14, 18, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.494682}
{'[2, 6, 4, 5, 6, 2, 0, 0, 14, 18, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.491686}
{'[2, 6, 4, 5, 6, 2, 0, 0, 14, 18, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.492925}

out:
 ["{'[2, 6, 4, 5, 6, 2, 0, 0, 14, 18, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.491148}", "{'[2, 6, 4, 5, 6, 2, 0, 0, 14, 18, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.490743}", "{'[2, 6, 4, 5, 6, 2, 0, 0, 14, 18, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.49516}", "{'[2, 6, 4, 5, 6, 2, 0, 0, 14, 18, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.490606}", "{'[2, 6, 4, 5, 6, 2, 0, 0, 14, 18, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.491166}", "{'[2, 6, 4, 5, 6, 2, 0, 0, 14, 18, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.490936}", "{'[2, 6, 4, 5, 6, 2, 0, 0, 14, 18, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.491644}", "{'[2, 6, 4, 5, 6, 2, 0, 0, 14, 18, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.492128}", "{'[2, 6, 4, 5, 6, 2, 0, 0, 14, 18, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.493597}", "{'[2, 6, 4, 5, 6, 2, 0, 0, 14, 18, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.490927}", "{'[2, 6, 4, 5, 6, 2, 0, 0, 14, 18, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.494682}", "{'[2, 6, 4, 5, 6, 2, 0, 0, 14, 18, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.495389}", "{'[2, 6, 4, 5, 6, 2, 0, 0, 14, 18, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.49438}", "{'[2, 6, 4, 5, 6, 2, 0, 0, 14, 18, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.49154}", "{'[2, 6, 4, 5, 6, 2, 0, 0, 14, 18, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.491399}", "{'[2, 6, 4, 5, 6, 2, 0, 0, 14, 18, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.490732}", "{'[2, 6, 4, 5, 6, 2, 0, 0, 14, 18, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.490749}", "{'[2, 6, 4, 5, 6, 2, 0, 0, 14, 18, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.491268}", "{'[2, 6, 4, 5, 6, 2, 0, 0, 14, 18, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.490548}", "{'[2, 6, 4, 5, 6, 2, 0, 0, 14, 18, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.491334}", "{'[2, 6, 4, 5, 6, 2, 0, 0, 14, 18, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.490692}", "{'[2, 6, 4, 5, 6, 2, 0, 0, 14, 18, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.491072}", "{'[2, 6, 4, 5, 6, 2, 0, 0, 14, 18, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.490548}", "{'[2, 6, 4, 5, 6, 2, 0, 0, 14, 18, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.491434}", "{'[2, 6, 4, 5, 6, 2, 0, 0, 14, 18, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.490674}", "{'[2, 6, 4, 5, 6, 2, 0, 0, 14, 18, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.492357}", "{'[2, 6, 4, 5, 6, 2, 0, 0, 14, 18, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.492742}", "{'[2, 6, 4, 5, 6, 2, 0, 0, 14, 18, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.494682}", "{'[2, 6, 4, 5, 6, 2, 0, 0, 14, 18, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.491686}", "{'[2, 6, 4, 5, 6, 2, 0, 0, 14, 18, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.492925}"]
returning from 'run': {'[2, 6, 4, 5, 6, 2, 0, 0, 14, 18, 4, 0, 0, 1, 1, 0, 1, 1]': ([0.491148, 0.490743, 0.49516, 0.490606, 0.491166, 0.490936, 0.491644, 0.492128, 0.493597, 0.490927, 0.494682, 0.495389, 0.49438, 0.49154, 0.491399, 0.490732, 0.490749, 0.491268, 0.490548, 0.491334, 0.490692, 0.491072, 0.490548, 0.491434, 0.490674, 0.492357, 0.492742, 0.494682, 0.491686, 0.492925], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 6, 4, 5, 6, 2, 0, 0, 14, 18, 4, 0, 0, 1, 1, 0, 1, 1]': ([0.491148, 0.490743, 0.49516, 0.490606, 0.491166, 0.490936, 0.491644, 0.492128, 0.493597, 0.490927, 0.494682, 0.495389, 0.49438, 0.49154, 0.491399, 0.490732, 0.490749, 0.491268, 0.490548, 0.491334, 0.490692, 0.491072, 0.490548, 0.491434, 0.490674, 0.492357, 0.492742, 0.494682, 0.491686, 0.492925], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		261
        Multiplications: 	94
        Divisions: 		0
        Logical: 		0
        Reads: 			607
        Writes: 		96
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest13.exe __orio_perftest13.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest13.exe  
Program Test Output: 
{'[4, 2, 1, 0, 6, 2, 0, 0, 10, 0, 27, 8, 0, 0, 1, 0, 1, 1]' : 0.826338}
{'[4, 2, 1, 0, 6, 2, 0, 0, 10, 0, 27, 8, 0, 0, 1, 0, 1, 1]' : 0.840035}
{'[4, 2, 1, 0, 6, 2, 0, 0, 10, 0, 27, 8, 0, 0, 1, 0, 1, 1]' : 0.831496}
{'[4, 2, 1, 0, 6, 2, 0, 0, 10, 0, 27, 8, 0, 0, 1, 0, 1, 1]' : 0.828533}
{'[4, 2, 1, 0, 6, 2, 0, 0, 10, 0, 27, 8, 0, 0, 1, 0, 1, 1]' : 0.828296}
{'[4, 2, 1, 0, 6, 2, 0, 0, 10, 0, 27, 8, 0, 0, 1, 0, 1, 1]' : 0.828412}
{'[4, 2, 1, 0, 6, 2, 0, 0, 10, 0, 27, 8, 0, 0, 1, 0, 1, 1]' : 0.833717}
{'[4, 2, 1, 0, 6, 2, 0, 0, 10, 0, 27, 8, 0, 0, 1, 0, 1, 1]' : 0.827684}
{'[4, 2, 1, 0, 6, 2, 0, 0, 10, 0, 27, 8, 0, 0, 1, 0, 1, 1]' : 0.830651}
{'[4, 2, 1, 0, 6, 2, 0, 0, 10, 0, 27, 8, 0, 0, 1, 0, 1, 1]' : 0.829321}
{'[4, 2, 1, 0, 6, 2, 0, 0, 10, 0, 27, 8, 0, 0, 1, 0, 1, 1]' : 0.837565}
{'[4, 2, 1, 0, 6, 2, 0, 0, 10, 0, 27, 8, 0, 0, 1, 0, 1, 1]' : 0.83721}
{'[4, 2, 1, 0, 6, 2, 0, 0, 10, 0, 27, 8, 0, 0, 1, 0, 1, 1]' : 0.840779}
{'[4, 2, 1, 0, 6, 2, 0, 0, 10, 0, 27, 8, 0, 0, 1, 0, 1, 1]' : 0.830391}
{'[4, 2, 1, 0, 6, 2, 0, 0, 10, 0, 27, 8, 0, 0, 1, 0, 1, 1]' : 0.829818}
{'[4, 2, 1, 0, 6, 2, 0, 0, 10, 0, 27, 8, 0, 0, 1, 0, 1, 1]' : 0.831644}
{'[4, 2, 1, 0, 6, 2, 0, 0, 10, 0, 27, 8, 0, 0, 1, 0, 1, 1]' : 0.831482}
{'[4, 2, 1, 0, 6, 2, 0, 0, 10, 0, 27, 8, 0, 0, 1, 0, 1, 1]' : 0.831462}
{'[4, 2, 1, 0, 6, 2, 0, 0, 10, 0, 27, 8, 0, 0, 1, 0, 1, 1]' : 0.836125}
{'[4, 2, 1, 0, 6, 2, 0, 0, 10, 0, 27, 8, 0, 0, 1, 0, 1, 1]' : 0.829823}
{'[4, 2, 1, 0, 6, 2, 0, 0, 10, 0, 27, 8, 0, 0, 1, 0, 1, 1]' : 0.82874}
{'[4, 2, 1, 0, 6, 2, 0, 0, 10, 0, 27, 8, 0, 0, 1, 0, 1, 1]' : 0.829365}
{'[4, 2, 1, 0, 6, 2, 0, 0, 10, 0, 27, 8, 0, 0, 1, 0, 1, 1]' : 0.827973}
{'[4, 2, 1, 0, 6, 2, 0, 0, 10, 0, 27, 8, 0, 0, 1, 0, 1, 1]' : 0.830516}
{'[4, 2, 1, 0, 6, 2, 0, 0, 10, 0, 27, 8, 0, 0, 1, 0, 1, 1]' : 0.834159}
{'[4, 2, 1, 0, 6, 2, 0, 0, 10, 0, 27, 8, 0, 0, 1, 0, 1, 1]' : 0.828233}
{'[4, 2, 1, 0, 6, 2, 0, 0, 10, 0, 27, 8, 0, 0, 1, 0, 1, 1]' : 0.830303}
{'[4, 2, 1, 0, 6, 2, 0, 0, 10, 0, 27, 8, 0, 0, 1, 0, 1, 1]' : 0.828177}
{'[4, 2, 1, 0, 6, 2, 0, 0, 10, 0, 27, 8, 0, 0, 1, 0, 1, 1]' : 0.828045}
{'[4, 2, 1, 0, 6, 2, 0, 0, 10, 0, 27, 8, 0, 0, 1, 0, 1, 1]' : 0.831856}

out:
 ["{'[4, 2, 1, 0, 6, 2, 0, 0, 10, 0, 27, 8, 0, 0, 1, 0, 1, 1]' : 0.826338}", "{'[4, 2, 1, 0, 6, 2, 0, 0, 10, 0, 27, 8, 0, 0, 1, 0, 1, 1]' : 0.840035}", "{'[4, 2, 1, 0, 6, 2, 0, 0, 10, 0, 27, 8, 0, 0, 1, 0, 1, 1]' : 0.831496}", "{'[4, 2, 1, 0, 6, 2, 0, 0, 10, 0, 27, 8, 0, 0, 1, 0, 1, 1]' : 0.828533}", "{'[4, 2, 1, 0, 6, 2, 0, 0, 10, 0, 27, 8, 0, 0, 1, 0, 1, 1]' : 0.828296}", "{'[4, 2, 1, 0, 6, 2, 0, 0, 10, 0, 27, 8, 0, 0, 1, 0, 1, 1]' : 0.828412}", "{'[4, 2, 1, 0, 6, 2, 0, 0, 10, 0, 27, 8, 0, 0, 1, 0, 1, 1]' : 0.833717}", "{'[4, 2, 1, 0, 6, 2, 0, 0, 10, 0, 27, 8, 0, 0, 1, 0, 1, 1]' : 0.827684}", "{'[4, 2, 1, 0, 6, 2, 0, 0, 10, 0, 27, 8, 0, 0, 1, 0, 1, 1]' : 0.830651}", "{'[4, 2, 1, 0, 6, 2, 0, 0, 10, 0, 27, 8, 0, 0, 1, 0, 1, 1]' : 0.829321}", "{'[4, 2, 1, 0, 6, 2, 0, 0, 10, 0, 27, 8, 0, 0, 1, 0, 1, 1]' : 0.837565}", "{'[4, 2, 1, 0, 6, 2, 0, 0, 10, 0, 27, 8, 0, 0, 1, 0, 1, 1]' : 0.83721}", "{'[4, 2, 1, 0, 6, 2, 0, 0, 10, 0, 27, 8, 0, 0, 1, 0, 1, 1]' : 0.840779}", "{'[4, 2, 1, 0, 6, 2, 0, 0, 10, 0, 27, 8, 0, 0, 1, 0, 1, 1]' : 0.830391}", "{'[4, 2, 1, 0, 6, 2, 0, 0, 10, 0, 27, 8, 0, 0, 1, 0, 1, 1]' : 0.829818}", "{'[4, 2, 1, 0, 6, 2, 0, 0, 10, 0, 27, 8, 0, 0, 1, 0, 1, 1]' : 0.831644}", "{'[4, 2, 1, 0, 6, 2, 0, 0, 10, 0, 27, 8, 0, 0, 1, 0, 1, 1]' : 0.831482}", "{'[4, 2, 1, 0, 6, 2, 0, 0, 10, 0, 27, 8, 0, 0, 1, 0, 1, 1]' : 0.831462}", "{'[4, 2, 1, 0, 6, 2, 0, 0, 10, 0, 27, 8, 0, 0, 1, 0, 1, 1]' : 0.836125}", "{'[4, 2, 1, 0, 6, 2, 0, 0, 10, 0, 27, 8, 0, 0, 1, 0, 1, 1]' : 0.829823}", "{'[4, 2, 1, 0, 6, 2, 0, 0, 10, 0, 27, 8, 0, 0, 1, 0, 1, 1]' : 0.82874}", "{'[4, 2, 1, 0, 6, 2, 0, 0, 10, 0, 27, 8, 0, 0, 1, 0, 1, 1]' : 0.829365}", "{'[4, 2, 1, 0, 6, 2, 0, 0, 10, 0, 27, 8, 0, 0, 1, 0, 1, 1]' : 0.827973}", "{'[4, 2, 1, 0, 6, 2, 0, 0, 10, 0, 27, 8, 0, 0, 1, 0, 1, 1]' : 0.830516}", "{'[4, 2, 1, 0, 6, 2, 0, 0, 10, 0, 27, 8, 0, 0, 1, 0, 1, 1]' : 0.834159}", "{'[4, 2, 1, 0, 6, 2, 0, 0, 10, 0, 27, 8, 0, 0, 1, 0, 1, 1]' : 0.828233}", "{'[4, 2, 1, 0, 6, 2, 0, 0, 10, 0, 27, 8, 0, 0, 1, 0, 1, 1]' : 0.830303}", "{'[4, 2, 1, 0, 6, 2, 0, 0, 10, 0, 27, 8, 0, 0, 1, 0, 1, 1]' : 0.828177}", "{'[4, 2, 1, 0, 6, 2, 0, 0, 10, 0, 27, 8, 0, 0, 1, 0, 1, 1]' : 0.828045}", "{'[4, 2, 1, 0, 6, 2, 0, 0, 10, 0, 27, 8, 0, 0, 1, 0, 1, 1]' : 0.831856}"]
returning from 'run': {'[4, 2, 1, 0, 6, 2, 0, 0, 10, 0, 27, 8, 0, 0, 1, 0, 1, 1]': ([0.826338, 0.840035, 0.831496, 0.828533, 0.828296, 0.828412, 0.833717, 0.827684, 0.830651, 0.829321, 0.837565, 0.83721, 0.840779, 0.830391, 0.829818, 0.831644, 0.831482, 0.831462, 0.836125, 0.829823, 0.82874, 0.829365, 0.827973, 0.830516, 0.834159, 0.828233, 0.830303, 0.828177, 0.828045, 0.831856], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 2, 1, 0, 6, 2, 0, 0, 10, 0, 27, 8, 0, 0, 1, 0, 1, 1]': ([0.826338, 0.840035, 0.831496, 0.828533, 0.828296, 0.828412, 0.833717, 0.827684, 0.830651, 0.829321, 0.837565, 0.83721, 0.840779, 0.830391, 0.829818, 0.831644, 0.831482, 0.831462, 0.836125, 0.829823, 0.82874, 0.829365, 0.827973, 0.830516, 0.834159, 0.828233, 0.830303, 0.828177, 0.828045, 0.831856], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	81
        Max loop nest depth: 	5
        Additions: 		1897
        Multiplications: 	608
        Divisions: 		0
        Logical: 		0
        Reads: 			3471
        Writes: 		583
        Comparisons:		81
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest14.exe __orio_perftest14.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest14.exe  
Program Test Output: 
{'[2, 6, 6, 0, 6, 6, 1, 1, 8, 9, 13, 0, 1, 0, 0, 1, 0, 0]' : 0.257732}
{'[2, 6, 6, 0, 6, 6, 1, 1, 8, 9, 13, 0, 1, 0, 0, 1, 0, 0]' : 0.265803}
{'[2, 6, 6, 0, 6, 6, 1, 1, 8, 9, 13, 0, 1, 0, 0, 1, 0, 0]' : 0.258519}
{'[2, 6, 6, 0, 6, 6, 1, 1, 8, 9, 13, 0, 1, 0, 0, 1, 0, 0]' : 0.257492}
{'[2, 6, 6, 0, 6, 6, 1, 1, 8, 9, 13, 0, 1, 0, 0, 1, 0, 0]' : 0.282507}
{'[2, 6, 6, 0, 6, 6, 1, 1, 8, 9, 13, 0, 1, 0, 0, 1, 0, 0]' : 0.30012}
{'[2, 6, 6, 0, 6, 6, 1, 1, 8, 9, 13, 0, 1, 0, 0, 1, 0, 0]' : 0.265688}
{'[2, 6, 6, 0, 6, 6, 1, 1, 8, 9, 13, 0, 1, 0, 0, 1, 0, 0]' : 0.272792}
{'[2, 6, 6, 0, 6, 6, 1, 1, 8, 9, 13, 0, 1, 0, 0, 1, 0, 0]' : 0.270657}
{'[2, 6, 6, 0, 6, 6, 1, 1, 8, 9, 13, 0, 1, 0, 0, 1, 0, 0]' : 0.258439}
{'[2, 6, 6, 0, 6, 6, 1, 1, 8, 9, 13, 0, 1, 0, 0, 1, 0, 0]' : 0.261323}
{'[2, 6, 6, 0, 6, 6, 1, 1, 8, 9, 13, 0, 1, 0, 0, 1, 0, 0]' : 0.260618}
{'[2, 6, 6, 0, 6, 6, 1, 1, 8, 9, 13, 0, 1, 0, 0, 1, 0, 0]' : 0.257818}
{'[2, 6, 6, 0, 6, 6, 1, 1, 8, 9, 13, 0, 1, 0, 0, 1, 0, 0]' : 0.253329}
{'[2, 6, 6, 0, 6, 6, 1, 1, 8, 9, 13, 0, 1, 0, 0, 1, 0, 0]' : 0.255198}
{'[2, 6, 6, 0, 6, 6, 1, 1, 8, 9, 13, 0, 1, 0, 0, 1, 0, 0]' : 0.253364}
{'[2, 6, 6, 0, 6, 6, 1, 1, 8, 9, 13, 0, 1, 0, 0, 1, 0, 0]' : 0.257764}
{'[2, 6, 6, 0, 6, 6, 1, 1, 8, 9, 13, 0, 1, 0, 0, 1, 0, 0]' : 0.254186}
{'[2, 6, 6, 0, 6, 6, 1, 1, 8, 9, 13, 0, 1, 0, 0, 1, 0, 0]' : 0.25466}
{'[2, 6, 6, 0, 6, 6, 1, 1, 8, 9, 13, 0, 1, 0, 0, 1, 0, 0]' : 0.253365}
{'[2, 6, 6, 0, 6, 6, 1, 1, 8, 9, 13, 0, 1, 0, 0, 1, 0, 0]' : 0.255655}
{'[2, 6, 6, 0, 6, 6, 1, 1, 8, 9, 13, 0, 1, 0, 0, 1, 0, 0]' : 0.253654}
{'[2, 6, 6, 0, 6, 6, 1, 1, 8, 9, 13, 0, 1, 0, 0, 1, 0, 0]' : 0.256233}
{'[2, 6, 6, 0, 6, 6, 1, 1, 8, 9, 13, 0, 1, 0, 0, 1, 0, 0]' : 0.257282}
{'[2, 6, 6, 0, 6, 6, 1, 1, 8, 9, 13, 0, 1, 0, 0, 1, 0, 0]' : 0.258403}
{'[2, 6, 6, 0, 6, 6, 1, 1, 8, 9, 13, 0, 1, 0, 0, 1, 0, 0]' : 0.257047}
{'[2, 6, 6, 0, 6, 6, 1, 1, 8, 9, 13, 0, 1, 0, 0, 1, 0, 0]' : 0.253697}
{'[2, 6, 6, 0, 6, 6, 1, 1, 8, 9, 13, 0, 1, 0, 0, 1, 0, 0]' : 0.259529}
{'[2, 6, 6, 0, 6, 6, 1, 1, 8, 9, 13, 0, 1, 0, 0, 1, 0, 0]' : 0.255521}
{'[2, 6, 6, 0, 6, 6, 1, 1, 8, 9, 13, 0, 1, 0, 0, 1, 0, 0]' : 0.253591}

out:
 ["{'[2, 6, 6, 0, 6, 6, 1, 1, 8, 9, 13, 0, 1, 0, 0, 1, 0, 0]' : 0.257732}", "{'[2, 6, 6, 0, 6, 6, 1, 1, 8, 9, 13, 0, 1, 0, 0, 1, 0, 0]' : 0.265803}", "{'[2, 6, 6, 0, 6, 6, 1, 1, 8, 9, 13, 0, 1, 0, 0, 1, 0, 0]' : 0.258519}", "{'[2, 6, 6, 0, 6, 6, 1, 1, 8, 9, 13, 0, 1, 0, 0, 1, 0, 0]' : 0.257492}", "{'[2, 6, 6, 0, 6, 6, 1, 1, 8, 9, 13, 0, 1, 0, 0, 1, 0, 0]' : 0.282507}", "{'[2, 6, 6, 0, 6, 6, 1, 1, 8, 9, 13, 0, 1, 0, 0, 1, 0, 0]' : 0.30012}", "{'[2, 6, 6, 0, 6, 6, 1, 1, 8, 9, 13, 0, 1, 0, 0, 1, 0, 0]' : 0.265688}", "{'[2, 6, 6, 0, 6, 6, 1, 1, 8, 9, 13, 0, 1, 0, 0, 1, 0, 0]' : 0.272792}", "{'[2, 6, 6, 0, 6, 6, 1, 1, 8, 9, 13, 0, 1, 0, 0, 1, 0, 0]' : 0.270657}", "{'[2, 6, 6, 0, 6, 6, 1, 1, 8, 9, 13, 0, 1, 0, 0, 1, 0, 0]' : 0.258439}", "{'[2, 6, 6, 0, 6, 6, 1, 1, 8, 9, 13, 0, 1, 0, 0, 1, 0, 0]' : 0.261323}", "{'[2, 6, 6, 0, 6, 6, 1, 1, 8, 9, 13, 0, 1, 0, 0, 1, 0, 0]' : 0.260618}", "{'[2, 6, 6, 0, 6, 6, 1, 1, 8, 9, 13, 0, 1, 0, 0, 1, 0, 0]' : 0.257818}", "{'[2, 6, 6, 0, 6, 6, 1, 1, 8, 9, 13, 0, 1, 0, 0, 1, 0, 0]' : 0.253329}", "{'[2, 6, 6, 0, 6, 6, 1, 1, 8, 9, 13, 0, 1, 0, 0, 1, 0, 0]' : 0.255198}", "{'[2, 6, 6, 0, 6, 6, 1, 1, 8, 9, 13, 0, 1, 0, 0, 1, 0, 0]' : 0.253364}", "{'[2, 6, 6, 0, 6, 6, 1, 1, 8, 9, 13, 0, 1, 0, 0, 1, 0, 0]' : 0.257764}", "{'[2, 6, 6, 0, 6, 6, 1, 1, 8, 9, 13, 0, 1, 0, 0, 1, 0, 0]' : 0.254186}", "{'[2, 6, 6, 0, 6, 6, 1, 1, 8, 9, 13, 0, 1, 0, 0, 1, 0, 0]' : 0.25466}", "{'[2, 6, 6, 0, 6, 6, 1, 1, 8, 9, 13, 0, 1, 0, 0, 1, 0, 0]' : 0.253365}", "{'[2, 6, 6, 0, 6, 6, 1, 1, 8, 9, 13, 0, 1, 0, 0, 1, 0, 0]' : 0.255655}", "{'[2, 6, 6, 0, 6, 6, 1, 1, 8, 9, 13, 0, 1, 0, 0, 1, 0, 0]' : 0.253654}", "{'[2, 6, 6, 0, 6, 6, 1, 1, 8, 9, 13, 0, 1, 0, 0, 1, 0, 0]' : 0.256233}", "{'[2, 6, 6, 0, 6, 6, 1, 1, 8, 9, 13, 0, 1, 0, 0, 1, 0, 0]' : 0.257282}", "{'[2, 6, 6, 0, 6, 6, 1, 1, 8, 9, 13, 0, 1, 0, 0, 1, 0, 0]' : 0.258403}", "{'[2, 6, 6, 0, 6, 6, 1, 1, 8, 9, 13, 0, 1, 0, 0, 1, 0, 0]' : 0.257047}", "{'[2, 6, 6, 0, 6, 6, 1, 1, 8, 9, 13, 0, 1, 0, 0, 1, 0, 0]' : 0.253697}", "{'[2, 6, 6, 0, 6, 6, 1, 1, 8, 9, 13, 0, 1, 0, 0, 1, 0, 0]' : 0.259529}", "{'[2, 6, 6, 0, 6, 6, 1, 1, 8, 9, 13, 0, 1, 0, 0, 1, 0, 0]' : 0.255521}", "{'[2, 6, 6, 0, 6, 6, 1, 1, 8, 9, 13, 0, 1, 0, 0, 1, 0, 0]' : 0.253591}"]
returning from 'run': {'[2, 6, 6, 0, 6, 6, 1, 1, 8, 9, 13, 0, 1, 0, 0, 1, 0, 0]': ([0.257732, 0.265803, 0.258519, 0.257492, 0.282507, 0.30012, 0.265688, 0.272792, 0.270657, 0.258439, 0.261323, 0.260618, 0.257818, 0.253329, 0.255198, 0.253364, 0.257764, 0.254186, 0.25466, 0.253365, 0.255655, 0.253654, 0.256233, 0.257282, 0.258403, 0.257047, 0.253697, 0.259529, 0.255521, 0.253591], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 6, 6, 0, 6, 6, 1, 1, 8, 9, 13, 0, 1, 0, 0, 1, 0, 0]': ([0.257732, 0.265803, 0.258519, 0.257492, 0.282507, 0.30012, 0.265688, 0.272792, 0.270657, 0.258439, 0.261323, 0.260618, 0.257818, 0.253329, 0.255198, 0.253364, 0.257764, 0.254186, 0.25466, 0.253365, 0.255655, 0.253654, 0.256233, 0.257282, 0.258403, 0.257047, 0.253697, 0.259529, 0.255521, 0.253591], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	115
        Max loop nest depth: 	6
        Additions: 		8985
        Multiplications: 	3402
        Divisions: 		0
        Logical: 		0
        Reads: 			15398
        Writes: 		2286
        Comparisons:		115
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest15.exe __orio_perftest15.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest15.exe  
Program Test Output: 
{'[5, 1, 2, 6, 2, 0, 1, 0, 29, 29, 24, 0, 2, 0, 0, 1, 1, 1]' : 0.50879}
{'[5, 1, 2, 6, 2, 0, 1, 0, 29, 29, 24, 0, 2, 0, 0, 1, 1, 1]' : 0.486323}
{'[5, 1, 2, 6, 2, 0, 1, 0, 29, 29, 24, 0, 2, 0, 0, 1, 1, 1]' : 0.479623}
{'[5, 1, 2, 6, 2, 0, 1, 0, 29, 29, 24, 0, 2, 0, 0, 1, 1, 1]' : 0.477586}
{'[5, 1, 2, 6, 2, 0, 1, 0, 29, 29, 24, 0, 2, 0, 0, 1, 1, 1]' : 0.478344}
{'[5, 1, 2, 6, 2, 0, 1, 0, 29, 29, 24, 0, 2, 0, 0, 1, 1, 1]' : 0.475497}
{'[5, 1, 2, 6, 2, 0, 1, 0, 29, 29, 24, 0, 2, 0, 0, 1, 1, 1]' : 0.473915}
{'[5, 1, 2, 6, 2, 0, 1, 0, 29, 29, 24, 0, 2, 0, 0, 1, 1, 1]' : 0.476117}
{'[5, 1, 2, 6, 2, 0, 1, 0, 29, 29, 24, 0, 2, 0, 0, 1, 1, 1]' : 0.474427}
{'[5, 1, 2, 6, 2, 0, 1, 0, 29, 29, 24, 0, 2, 0, 0, 1, 1, 1]' : 0.476492}
{'[5, 1, 2, 6, 2, 0, 1, 0, 29, 29, 24, 0, 2, 0, 0, 1, 1, 1]' : 0.474756}
{'[5, 1, 2, 6, 2, 0, 1, 0, 29, 29, 24, 0, 2, 0, 0, 1, 1, 1]' : 0.47525}
{'[5, 1, 2, 6, 2, 0, 1, 0, 29, 29, 24, 0, 2, 0, 0, 1, 1, 1]' : 0.474067}
{'[5, 1, 2, 6, 2, 0, 1, 0, 29, 29, 24, 0, 2, 0, 0, 1, 1, 1]' : 0.482902}
{'[5, 1, 2, 6, 2, 0, 1, 0, 29, 29, 24, 0, 2, 0, 0, 1, 1, 1]' : 0.476708}
{'[5, 1, 2, 6, 2, 0, 1, 0, 29, 29, 24, 0, 2, 0, 0, 1, 1, 1]' : 0.486293}
{'[5, 1, 2, 6, 2, 0, 1, 0, 29, 29, 24, 0, 2, 0, 0, 1, 1, 1]' : 0.482266}
{'[5, 1, 2, 6, 2, 0, 1, 0, 29, 29, 24, 0, 2, 0, 0, 1, 1, 1]' : 0.475279}
{'[5, 1, 2, 6, 2, 0, 1, 0, 29, 29, 24, 0, 2, 0, 0, 1, 1, 1]' : 0.474114}
{'[5, 1, 2, 6, 2, 0, 1, 0, 29, 29, 24, 0, 2, 0, 0, 1, 1, 1]' : 0.474584}
{'[5, 1, 2, 6, 2, 0, 1, 0, 29, 29, 24, 0, 2, 0, 0, 1, 1, 1]' : 0.475098}
{'[5, 1, 2, 6, 2, 0, 1, 0, 29, 29, 24, 0, 2, 0, 0, 1, 1, 1]' : 0.479972}
{'[5, 1, 2, 6, 2, 0, 1, 0, 29, 29, 24, 0, 2, 0, 0, 1, 1, 1]' : 0.476776}
{'[5, 1, 2, 6, 2, 0, 1, 0, 29, 29, 24, 0, 2, 0, 0, 1, 1, 1]' : 0.476342}
{'[5, 1, 2, 6, 2, 0, 1, 0, 29, 29, 24, 0, 2, 0, 0, 1, 1, 1]' : 0.47534}
{'[5, 1, 2, 6, 2, 0, 1, 0, 29, 29, 24, 0, 2, 0, 0, 1, 1, 1]' : 0.475559}
{'[5, 1, 2, 6, 2, 0, 1, 0, 29, 29, 24, 0, 2, 0, 0, 1, 1, 1]' : 0.474833}
{'[5, 1, 2, 6, 2, 0, 1, 0, 29, 29, 24, 0, 2, 0, 0, 1, 1, 1]' : 0.477518}
{'[5, 1, 2, 6, 2, 0, 1, 0, 29, 29, 24, 0, 2, 0, 0, 1, 1, 1]' : 0.478886}
{'[5, 1, 2, 6, 2, 0, 1, 0, 29, 29, 24, 0, 2, 0, 0, 1, 1, 1]' : 0.480427}

out:
 ["{'[5, 1, 2, 6, 2, 0, 1, 0, 29, 29, 24, 0, 2, 0, 0, 1, 1, 1]' : 0.50879}", "{'[5, 1, 2, 6, 2, 0, 1, 0, 29, 29, 24, 0, 2, 0, 0, 1, 1, 1]' : 0.486323}", "{'[5, 1, 2, 6, 2, 0, 1, 0, 29, 29, 24, 0, 2, 0, 0, 1, 1, 1]' : 0.479623}", "{'[5, 1, 2, 6, 2, 0, 1, 0, 29, 29, 24, 0, 2, 0, 0, 1, 1, 1]' : 0.477586}", "{'[5, 1, 2, 6, 2, 0, 1, 0, 29, 29, 24, 0, 2, 0, 0, 1, 1, 1]' : 0.478344}", "{'[5, 1, 2, 6, 2, 0, 1, 0, 29, 29, 24, 0, 2, 0, 0, 1, 1, 1]' : 0.475497}", "{'[5, 1, 2, 6, 2, 0, 1, 0, 29, 29, 24, 0, 2, 0, 0, 1, 1, 1]' : 0.473915}", "{'[5, 1, 2, 6, 2, 0, 1, 0, 29, 29, 24, 0, 2, 0, 0, 1, 1, 1]' : 0.476117}", "{'[5, 1, 2, 6, 2, 0, 1, 0, 29, 29, 24, 0, 2, 0, 0, 1, 1, 1]' : 0.474427}", "{'[5, 1, 2, 6, 2, 0, 1, 0, 29, 29, 24, 0, 2, 0, 0, 1, 1, 1]' : 0.476492}", "{'[5, 1, 2, 6, 2, 0, 1, 0, 29, 29, 24, 0, 2, 0, 0, 1, 1, 1]' : 0.474756}", "{'[5, 1, 2, 6, 2, 0, 1, 0, 29, 29, 24, 0, 2, 0, 0, 1, 1, 1]' : 0.47525}", "{'[5, 1, 2, 6, 2, 0, 1, 0, 29, 29, 24, 0, 2, 0, 0, 1, 1, 1]' : 0.474067}", "{'[5, 1, 2, 6, 2, 0, 1, 0, 29, 29, 24, 0, 2, 0, 0, 1, 1, 1]' : 0.482902}", "{'[5, 1, 2, 6, 2, 0, 1, 0, 29, 29, 24, 0, 2, 0, 0, 1, 1, 1]' : 0.476708}", "{'[5, 1, 2, 6, 2, 0, 1, 0, 29, 29, 24, 0, 2, 0, 0, 1, 1, 1]' : 0.486293}", "{'[5, 1, 2, 6, 2, 0, 1, 0, 29, 29, 24, 0, 2, 0, 0, 1, 1, 1]' : 0.482266}", "{'[5, 1, 2, 6, 2, 0, 1, 0, 29, 29, 24, 0, 2, 0, 0, 1, 1, 1]' : 0.475279}", "{'[5, 1, 2, 6, 2, 0, 1, 0, 29, 29, 24, 0, 2, 0, 0, 1, 1, 1]' : 0.474114}", "{'[5, 1, 2, 6, 2, 0, 1, 0, 29, 29, 24, 0, 2, 0, 0, 1, 1, 1]' : 0.474584}", "{'[5, 1, 2, 6, 2, 0, 1, 0, 29, 29, 24, 0, 2, 0, 0, 1, 1, 1]' : 0.475098}", "{'[5, 1, 2, 6, 2, 0, 1, 0, 29, 29, 24, 0, 2, 0, 0, 1, 1, 1]' : 0.479972}", "{'[5, 1, 2, 6, 2, 0, 1, 0, 29, 29, 24, 0, 2, 0, 0, 1, 1, 1]' : 0.476776}", "{'[5, 1, 2, 6, 2, 0, 1, 0, 29, 29, 24, 0, 2, 0, 0, 1, 1, 1]' : 0.476342}", "{'[5, 1, 2, 6, 2, 0, 1, 0, 29, 29, 24, 0, 2, 0, 0, 1, 1, 1]' : 0.47534}", "{'[5, 1, 2, 6, 2, 0, 1, 0, 29, 29, 24, 0, 2, 0, 0, 1, 1, 1]' : 0.475559}", "{'[5, 1, 2, 6, 2, 0, 1, 0, 29, 29, 24, 0, 2, 0, 0, 1, 1, 1]' : 0.474833}", "{'[5, 1, 2, 6, 2, 0, 1, 0, 29, 29, 24, 0, 2, 0, 0, 1, 1, 1]' : 0.477518}", "{'[5, 1, 2, 6, 2, 0, 1, 0, 29, 29, 24, 0, 2, 0, 0, 1, 1, 1]' : 0.478886}", "{'[5, 1, 2, 6, 2, 0, 1, 0, 29, 29, 24, 0, 2, 0, 0, 1, 1, 1]' : 0.480427}"]
returning from 'run': {'[5, 1, 2, 6, 2, 0, 1, 0, 29, 29, 24, 0, 2, 0, 0, 1, 1, 1]': ([0.50879, 0.486323, 0.479623, 0.477586, 0.478344, 0.475497, 0.473915, 0.476117, 0.474427, 0.476492, 0.474756, 0.47525, 0.474067, 0.482902, 0.476708, 0.486293, 0.482266, 0.475279, 0.474114, 0.474584, 0.475098, 0.479972, 0.476776, 0.476342, 0.47534, 0.475559, 0.474833, 0.477518, 0.478886, 0.480427], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 1, 2, 6, 2, 0, 1, 0, 29, 29, 24, 0, 2, 0, 0, 1, 1, 1]': ([0.50879, 0.486323, 0.479623, 0.477586, 0.478344, 0.475497, 0.473915, 0.476117, 0.474427, 0.476492, 0.474756, 0.47525, 0.474067, 0.482902, 0.476708, 0.486293, 0.482266, 0.475279, 0.474114, 0.474584, 0.475098, 0.479972, 0.476776, 0.476342, 0.47534, 0.475559, 0.474833, 0.477518, 0.478886, 0.480427], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	30
        Max loop nest depth: 	6
        Additions: 		1102
        Multiplications: 	484
        Divisions: 		0
        Logical: 		0
        Reads: 			2220
        Writes: 		408
        Comparisons:		30
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest16.exe __orio_perftest16.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest16.exe  
Program Test Output: 
{'[1, 6, 4, 2, 0, 5, 0, 0, 25, 1, 11, 0, 1, 1, 0, 1, 0, 1]' : 0.225114}
{'[1, 6, 4, 2, 0, 5, 0, 0, 25, 1, 11, 0, 1, 1, 0, 1, 0, 1]' : 0.223728}
{'[1, 6, 4, 2, 0, 5, 0, 0, 25, 1, 11, 0, 1, 1, 0, 1, 0, 1]' : 0.219781}
{'[1, 6, 4, 2, 0, 5, 0, 0, 25, 1, 11, 0, 1, 1, 0, 1, 0, 1]' : 0.218969}
{'[1, 6, 4, 2, 0, 5, 0, 0, 25, 1, 11, 0, 1, 1, 0, 1, 0, 1]' : 0.224195}
{'[1, 6, 4, 2, 0, 5, 0, 0, 25, 1, 11, 0, 1, 1, 0, 1, 0, 1]' : 0.219607}
{'[1, 6, 4, 2, 0, 5, 0, 0, 25, 1, 11, 0, 1, 1, 0, 1, 0, 1]' : 0.219007}
{'[1, 6, 4, 2, 0, 5, 0, 0, 25, 1, 11, 0, 1, 1, 0, 1, 0, 1]' : 0.221359}
{'[1, 6, 4, 2, 0, 5, 0, 0, 25, 1, 11, 0, 1, 1, 0, 1, 0, 1]' : 0.219199}
{'[1, 6, 4, 2, 0, 5, 0, 0, 25, 1, 11, 0, 1, 1, 0, 1, 0, 1]' : 0.224142}
{'[1, 6, 4, 2, 0, 5, 0, 0, 25, 1, 11, 0, 1, 1, 0, 1, 0, 1]' : 0.21951}
{'[1, 6, 4, 2, 0, 5, 0, 0, 25, 1, 11, 0, 1, 1, 0, 1, 0, 1]' : 0.218539}
{'[1, 6, 4, 2, 0, 5, 0, 0, 25, 1, 11, 0, 1, 1, 0, 1, 0, 1]' : 0.222881}
{'[1, 6, 4, 2, 0, 5, 0, 0, 25, 1, 11, 0, 1, 1, 0, 1, 0, 1]' : 0.21985}
{'[1, 6, 4, 2, 0, 5, 0, 0, 25, 1, 11, 0, 1, 1, 0, 1, 0, 1]' : 0.221863}
{'[1, 6, 4, 2, 0, 5, 0, 0, 25, 1, 11, 0, 1, 1, 0, 1, 0, 1]' : 0.222338}
{'[1, 6, 4, 2, 0, 5, 0, 0, 25, 1, 11, 0, 1, 1, 0, 1, 0, 1]' : 0.221585}
{'[1, 6, 4, 2, 0, 5, 0, 0, 25, 1, 11, 0, 1, 1, 0, 1, 0, 1]' : 0.223316}
{'[1, 6, 4, 2, 0, 5, 0, 0, 25, 1, 11, 0, 1, 1, 0, 1, 0, 1]' : 0.220636}
{'[1, 6, 4, 2, 0, 5, 0, 0, 25, 1, 11, 0, 1, 1, 0, 1, 0, 1]' : 0.21898}
{'[1, 6, 4, 2, 0, 5, 0, 0, 25, 1, 11, 0, 1, 1, 0, 1, 0, 1]' : 0.222147}
{'[1, 6, 4, 2, 0, 5, 0, 0, 25, 1, 11, 0, 1, 1, 0, 1, 0, 1]' : 0.222475}
{'[1, 6, 4, 2, 0, 5, 0, 0, 25, 1, 11, 0, 1, 1, 0, 1, 0, 1]' : 0.225752}
{'[1, 6, 4, 2, 0, 5, 0, 0, 25, 1, 11, 0, 1, 1, 0, 1, 0, 1]' : 0.219263}
{'[1, 6, 4, 2, 0, 5, 0, 0, 25, 1, 11, 0, 1, 1, 0, 1, 0, 1]' : 0.21831}
{'[1, 6, 4, 2, 0, 5, 0, 0, 25, 1, 11, 0, 1, 1, 0, 1, 0, 1]' : 0.219749}
{'[1, 6, 4, 2, 0, 5, 0, 0, 25, 1, 11, 0, 1, 1, 0, 1, 0, 1]' : 0.219281}
{'[1, 6, 4, 2, 0, 5, 0, 0, 25, 1, 11, 0, 1, 1, 0, 1, 0, 1]' : 0.220497}
{'[1, 6, 4, 2, 0, 5, 0, 0, 25, 1, 11, 0, 1, 1, 0, 1, 0, 1]' : 0.217789}
{'[1, 6, 4, 2, 0, 5, 0, 0, 25, 1, 11, 0, 1, 1, 0, 1, 0, 1]' : 0.219356}

out:
 ["{'[1, 6, 4, 2, 0, 5, 0, 0, 25, 1, 11, 0, 1, 1, 0, 1, 0, 1]' : 0.225114}", "{'[1, 6, 4, 2, 0, 5, 0, 0, 25, 1, 11, 0, 1, 1, 0, 1, 0, 1]' : 0.223728}", "{'[1, 6, 4, 2, 0, 5, 0, 0, 25, 1, 11, 0, 1, 1, 0, 1, 0, 1]' : 0.219781}", "{'[1, 6, 4, 2, 0, 5, 0, 0, 25, 1, 11, 0, 1, 1, 0, 1, 0, 1]' : 0.218969}", "{'[1, 6, 4, 2, 0, 5, 0, 0, 25, 1, 11, 0, 1, 1, 0, 1, 0, 1]' : 0.224195}", "{'[1, 6, 4, 2, 0, 5, 0, 0, 25, 1, 11, 0, 1, 1, 0, 1, 0, 1]' : 0.219607}", "{'[1, 6, 4, 2, 0, 5, 0, 0, 25, 1, 11, 0, 1, 1, 0, 1, 0, 1]' : 0.219007}", "{'[1, 6, 4, 2, 0, 5, 0, 0, 25, 1, 11, 0, 1, 1, 0, 1, 0, 1]' : 0.221359}", "{'[1, 6, 4, 2, 0, 5, 0, 0, 25, 1, 11, 0, 1, 1, 0, 1, 0, 1]' : 0.219199}", "{'[1, 6, 4, 2, 0, 5, 0, 0, 25, 1, 11, 0, 1, 1, 0, 1, 0, 1]' : 0.224142}", "{'[1, 6, 4, 2, 0, 5, 0, 0, 25, 1, 11, 0, 1, 1, 0, 1, 0, 1]' : 0.21951}", "{'[1, 6, 4, 2, 0, 5, 0, 0, 25, 1, 11, 0, 1, 1, 0, 1, 0, 1]' : 0.218539}", "{'[1, 6, 4, 2, 0, 5, 0, 0, 25, 1, 11, 0, 1, 1, 0, 1, 0, 1]' : 0.222881}", "{'[1, 6, 4, 2, 0, 5, 0, 0, 25, 1, 11, 0, 1, 1, 0, 1, 0, 1]' : 0.21985}", "{'[1, 6, 4, 2, 0, 5, 0, 0, 25, 1, 11, 0, 1, 1, 0, 1, 0, 1]' : 0.221863}", "{'[1, 6, 4, 2, 0, 5, 0, 0, 25, 1, 11, 0, 1, 1, 0, 1, 0, 1]' : 0.222338}", "{'[1, 6, 4, 2, 0, 5, 0, 0, 25, 1, 11, 0, 1, 1, 0, 1, 0, 1]' : 0.221585}", "{'[1, 6, 4, 2, 0, 5, 0, 0, 25, 1, 11, 0, 1, 1, 0, 1, 0, 1]' : 0.223316}", "{'[1, 6, 4, 2, 0, 5, 0, 0, 25, 1, 11, 0, 1, 1, 0, 1, 0, 1]' : 0.220636}", "{'[1, 6, 4, 2, 0, 5, 0, 0, 25, 1, 11, 0, 1, 1, 0, 1, 0, 1]' : 0.21898}", "{'[1, 6, 4, 2, 0, 5, 0, 0, 25, 1, 11, 0, 1, 1, 0, 1, 0, 1]' : 0.222147}", "{'[1, 6, 4, 2, 0, 5, 0, 0, 25, 1, 11, 0, 1, 1, 0, 1, 0, 1]' : 0.222475}", "{'[1, 6, 4, 2, 0, 5, 0, 0, 25, 1, 11, 0, 1, 1, 0, 1, 0, 1]' : 0.225752}", "{'[1, 6, 4, 2, 0, 5, 0, 0, 25, 1, 11, 0, 1, 1, 0, 1, 0, 1]' : 0.219263}", "{'[1, 6, 4, 2, 0, 5, 0, 0, 25, 1, 11, 0, 1, 1, 0, 1, 0, 1]' : 0.21831}", "{'[1, 6, 4, 2, 0, 5, 0, 0, 25, 1, 11, 0, 1, 1, 0, 1, 0, 1]' : 0.219749}", "{'[1, 6, 4, 2, 0, 5, 0, 0, 25, 1, 11, 0, 1, 1, 0, 1, 0, 1]' : 0.219281}", "{'[1, 6, 4, 2, 0, 5, 0, 0, 25, 1, 11, 0, 1, 1, 0, 1, 0, 1]' : 0.220497}", "{'[1, 6, 4, 2, 0, 5, 0, 0, 25, 1, 11, 0, 1, 1, 0, 1, 0, 1]' : 0.217789}", "{'[1, 6, 4, 2, 0, 5, 0, 0, 25, 1, 11, 0, 1, 1, 0, 1, 0, 1]' : 0.219356}"]
returning from 'run': {'[1, 6, 4, 2, 0, 5, 0, 0, 25, 1, 11, 0, 1, 1, 0, 1, 0, 1]': ([0.225114, 0.223728, 0.219781, 0.218969, 0.224195, 0.219607, 0.219007, 0.221359, 0.219199, 0.224142, 0.21951, 0.218539, 0.222881, 0.21985, 0.221863, 0.222338, 0.221585, 0.223316, 0.220636, 0.21898, 0.222147, 0.222475, 0.225752, 0.219263, 0.21831, 0.219749, 0.219281, 0.220497, 0.217789, 0.219356], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 6, 4, 2, 0, 5, 0, 0, 25, 1, 11, 0, 1, 1, 0, 1, 0, 1]': ([0.225114, 0.223728, 0.219781, 0.218969, 0.224195, 0.219607, 0.219007, 0.221359, 0.219199, 0.224142, 0.21951, 0.218539, 0.222881, 0.21985, 0.221863, 0.222338, 0.221585, 0.223316, 0.220636, 0.21898, 0.222147, 0.222475, 0.225752, 0.219263, 0.21831, 0.219749, 0.219281, 0.220497, 0.217789, 0.219356], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	6
        Additions: 		2111
        Multiplications: 	612
        Divisions: 		0
        Logical: 		0
        Reads: 			3361
        Writes: 		369
        Comparisons:		22
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest17.exe __orio_perftest17.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest17.exe  
Program Test Output: 
{'[3, 0, 2, 2, 6, 4, 1, 0, 13, 0, 9, 21, 1, 0, 0, 0, 0, 0]' : 0.340035}
{'[3, 0, 2, 2, 6, 4, 1, 0, 13, 0, 9, 21, 1, 0, 0, 0, 0, 0]' : 0.341781}
{'[3, 0, 2, 2, 6, 4, 1, 0, 13, 0, 9, 21, 1, 0, 0, 0, 0, 0]' : 0.341188}
{'[3, 0, 2, 2, 6, 4, 1, 0, 13, 0, 9, 21, 1, 0, 0, 0, 0, 0]' : 0.340364}
{'[3, 0, 2, 2, 6, 4, 1, 0, 13, 0, 9, 21, 1, 0, 0, 0, 0, 0]' : 0.338992}
{'[3, 0, 2, 2, 6, 4, 1, 0, 13, 0, 9, 21, 1, 0, 0, 0, 0, 0]' : 0.344628}
{'[3, 0, 2, 2, 6, 4, 1, 0, 13, 0, 9, 21, 1, 0, 0, 0, 0, 0]' : 0.341465}
{'[3, 0, 2, 2, 6, 4, 1, 0, 13, 0, 9, 21, 1, 0, 0, 0, 0, 0]' : 0.347097}
{'[3, 0, 2, 2, 6, 4, 1, 0, 13, 0, 9, 21, 1, 0, 0, 0, 0, 0]' : 0.3405}
{'[3, 0, 2, 2, 6, 4, 1, 0, 13, 0, 9, 21, 1, 0, 0, 0, 0, 0]' : 0.340541}
{'[3, 0, 2, 2, 6, 4, 1, 0, 13, 0, 9, 21, 1, 0, 0, 0, 0, 0]' : 0.341775}
{'[3, 0, 2, 2, 6, 4, 1, 0, 13, 0, 9, 21, 1, 0, 0, 0, 0, 0]' : 0.33908}
{'[3, 0, 2, 2, 6, 4, 1, 0, 13, 0, 9, 21, 1, 0, 0, 0, 0, 0]' : 0.340026}
{'[3, 0, 2, 2, 6, 4, 1, 0, 13, 0, 9, 21, 1, 0, 0, 0, 0, 0]' : 0.34232}
{'[3, 0, 2, 2, 6, 4, 1, 0, 13, 0, 9, 21, 1, 0, 0, 0, 0, 0]' : 0.338672}
{'[3, 0, 2, 2, 6, 4, 1, 0, 13, 0, 9, 21, 1, 0, 0, 0, 0, 0]' : 0.339668}
{'[3, 0, 2, 2, 6, 4, 1, 0, 13, 0, 9, 21, 1, 0, 0, 0, 0, 0]' : 0.345627}
{'[3, 0, 2, 2, 6, 4, 1, 0, 13, 0, 9, 21, 1, 0, 0, 0, 0, 0]' : 0.340423}
{'[3, 0, 2, 2, 6, 4, 1, 0, 13, 0, 9, 21, 1, 0, 0, 0, 0, 0]' : 0.351973}
{'[3, 0, 2, 2, 6, 4, 1, 0, 13, 0, 9, 21, 1, 0, 0, 0, 0, 0]' : 0.341216}
{'[3, 0, 2, 2, 6, 4, 1, 0, 13, 0, 9, 21, 1, 0, 0, 0, 0, 0]' : 0.33985}
{'[3, 0, 2, 2, 6, 4, 1, 0, 13, 0, 9, 21, 1, 0, 0, 0, 0, 0]' : 0.339598}
{'[3, 0, 2, 2, 6, 4, 1, 0, 13, 0, 9, 21, 1, 0, 0, 0, 0, 0]' : 0.340336}
{'[3, 0, 2, 2, 6, 4, 1, 0, 13, 0, 9, 21, 1, 0, 0, 0, 0, 0]' : 0.343226}
{'[3, 0, 2, 2, 6, 4, 1, 0, 13, 0, 9, 21, 1, 0, 0, 0, 0, 0]' : 0.345378}
{'[3, 0, 2, 2, 6, 4, 1, 0, 13, 0, 9, 21, 1, 0, 0, 0, 0, 0]' : 0.342147}
{'[3, 0, 2, 2, 6, 4, 1, 0, 13, 0, 9, 21, 1, 0, 0, 0, 0, 0]' : 0.341522}
{'[3, 0, 2, 2, 6, 4, 1, 0, 13, 0, 9, 21, 1, 0, 0, 0, 0, 0]' : 0.348694}
{'[3, 0, 2, 2, 6, 4, 1, 0, 13, 0, 9, 21, 1, 0, 0, 0, 0, 0]' : 0.356991}
{'[3, 0, 2, 2, 6, 4, 1, 0, 13, 0, 9, 21, 1, 0, 0, 0, 0, 0]' : 0.341121}

out:
 ["{'[3, 0, 2, 2, 6, 4, 1, 0, 13, 0, 9, 21, 1, 0, 0, 0, 0, 0]' : 0.340035}", "{'[3, 0, 2, 2, 6, 4, 1, 0, 13, 0, 9, 21, 1, 0, 0, 0, 0, 0]' : 0.341781}", "{'[3, 0, 2, 2, 6, 4, 1, 0, 13, 0, 9, 21, 1, 0, 0, 0, 0, 0]' : 0.341188}", "{'[3, 0, 2, 2, 6, 4, 1, 0, 13, 0, 9, 21, 1, 0, 0, 0, 0, 0]' : 0.340364}", "{'[3, 0, 2, 2, 6, 4, 1, 0, 13, 0, 9, 21, 1, 0, 0, 0, 0, 0]' : 0.338992}", "{'[3, 0, 2, 2, 6, 4, 1, 0, 13, 0, 9, 21, 1, 0, 0, 0, 0, 0]' : 0.344628}", "{'[3, 0, 2, 2, 6, 4, 1, 0, 13, 0, 9, 21, 1, 0, 0, 0, 0, 0]' : 0.341465}", "{'[3, 0, 2, 2, 6, 4, 1, 0, 13, 0, 9, 21, 1, 0, 0, 0, 0, 0]' : 0.347097}", "{'[3, 0, 2, 2, 6, 4, 1, 0, 13, 0, 9, 21, 1, 0, 0, 0, 0, 0]' : 0.3405}", "{'[3, 0, 2, 2, 6, 4, 1, 0, 13, 0, 9, 21, 1, 0, 0, 0, 0, 0]' : 0.340541}", "{'[3, 0, 2, 2, 6, 4, 1, 0, 13, 0, 9, 21, 1, 0, 0, 0, 0, 0]' : 0.341775}", "{'[3, 0, 2, 2, 6, 4, 1, 0, 13, 0, 9, 21, 1, 0, 0, 0, 0, 0]' : 0.33908}", "{'[3, 0, 2, 2, 6, 4, 1, 0, 13, 0, 9, 21, 1, 0, 0, 0, 0, 0]' : 0.340026}", "{'[3, 0, 2, 2, 6, 4, 1, 0, 13, 0, 9, 21, 1, 0, 0, 0, 0, 0]' : 0.34232}", "{'[3, 0, 2, 2, 6, 4, 1, 0, 13, 0, 9, 21, 1, 0, 0, 0, 0, 0]' : 0.338672}", "{'[3, 0, 2, 2, 6, 4, 1, 0, 13, 0, 9, 21, 1, 0, 0, 0, 0, 0]' : 0.339668}", "{'[3, 0, 2, 2, 6, 4, 1, 0, 13, 0, 9, 21, 1, 0, 0, 0, 0, 0]' : 0.345627}", "{'[3, 0, 2, 2, 6, 4, 1, 0, 13, 0, 9, 21, 1, 0, 0, 0, 0, 0]' : 0.340423}", "{'[3, 0, 2, 2, 6, 4, 1, 0, 13, 0, 9, 21, 1, 0, 0, 0, 0, 0]' : 0.351973}", "{'[3, 0, 2, 2, 6, 4, 1, 0, 13, 0, 9, 21, 1, 0, 0, 0, 0, 0]' : 0.341216}", "{'[3, 0, 2, 2, 6, 4, 1, 0, 13, 0, 9, 21, 1, 0, 0, 0, 0, 0]' : 0.33985}", "{'[3, 0, 2, 2, 6, 4, 1, 0, 13, 0, 9, 21, 1, 0, 0, 0, 0, 0]' : 0.339598}", "{'[3, 0, 2, 2, 6, 4, 1, 0, 13, 0, 9, 21, 1, 0, 0, 0, 0, 0]' : 0.340336}", "{'[3, 0, 2, 2, 6, 4, 1, 0, 13, 0, 9, 21, 1, 0, 0, 0, 0, 0]' : 0.343226}", "{'[3, 0, 2, 2, 6, 4, 1, 0, 13, 0, 9, 21, 1, 0, 0, 0, 0, 0]' : 0.345378}", "{'[3, 0, 2, 2, 6, 4, 1, 0, 13, 0, 9, 21, 1, 0, 0, 0, 0, 0]' : 0.342147}", "{'[3, 0, 2, 2, 6, 4, 1, 0, 13, 0, 9, 21, 1, 0, 0, 0, 0, 0]' : 0.341522}", "{'[3, 0, 2, 2, 6, 4, 1, 0, 13, 0, 9, 21, 1, 0, 0, 0, 0, 0]' : 0.348694}", "{'[3, 0, 2, 2, 6, 4, 1, 0, 13, 0, 9, 21, 1, 0, 0, 0, 0, 0]' : 0.356991}", "{'[3, 0, 2, 2, 6, 4, 1, 0, 13, 0, 9, 21, 1, 0, 0, 0, 0, 0]' : 0.341121}"]
returning from 'run': {'[3, 0, 2, 2, 6, 4, 1, 0, 13, 0, 9, 21, 1, 0, 0, 0, 0, 0]': ([0.340035, 0.341781, 0.341188, 0.340364, 0.338992, 0.344628, 0.341465, 0.347097, 0.3405, 0.340541, 0.341775, 0.33908, 0.340026, 0.34232, 0.338672, 0.339668, 0.345627, 0.340423, 0.351973, 0.341216, 0.33985, 0.339598, 0.340336, 0.343226, 0.345378, 0.342147, 0.341522, 0.348694, 0.356991, 0.341121], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 0, 2, 2, 6, 4, 1, 0, 13, 0, 9, 21, 1, 0, 0, 0, 0, 0]': ([0.340035, 0.341781, 0.341188, 0.340364, 0.338992, 0.344628, 0.341465, 0.347097, 0.3405, 0.340541, 0.341775, 0.33908, 0.340026, 0.34232, 0.338672, 0.339668, 0.345627, 0.340423, 0.351973, 0.341216, 0.33985, 0.339598, 0.340336, 0.343226, 0.345378, 0.342147, 0.341522, 0.348694, 0.356991, 0.341121], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	6
        Additions: 		1881
        Multiplications: 	576
        Divisions: 		0
        Logical: 		0
        Reads: 			3072
        Writes: 		354
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest18.exe __orio_perftest18.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest18.exe  
Program Test Output: 
{'[2, 4, 0, 6, 4, 1, 0, 0, 13, 6, 0, 25, 0, 1, 0, 0, 1, 0]' : 0.426081}
{'[2, 4, 0, 6, 4, 1, 0, 0, 13, 6, 0, 25, 0, 1, 0, 0, 1, 0]' : 0.42624}
{'[2, 4, 0, 6, 4, 1, 0, 0, 13, 6, 0, 25, 0, 1, 0, 0, 1, 0]' : 0.419834}
{'[2, 4, 0, 6, 4, 1, 0, 0, 13, 6, 0, 25, 0, 1, 0, 0, 1, 0]' : 0.419004}
{'[2, 4, 0, 6, 4, 1, 0, 0, 13, 6, 0, 25, 0, 1, 0, 0, 1, 0]' : 0.421729}
{'[2, 4, 0, 6, 4, 1, 0, 0, 13, 6, 0, 25, 0, 1, 0, 0, 1, 0]' : 0.422366}
{'[2, 4, 0, 6, 4, 1, 0, 0, 13, 6, 0, 25, 0, 1, 0, 0, 1, 0]' : 0.431662}
{'[2, 4, 0, 6, 4, 1, 0, 0, 13, 6, 0, 25, 0, 1, 0, 0, 1, 0]' : 0.418972}
{'[2, 4, 0, 6, 4, 1, 0, 0, 13, 6, 0, 25, 0, 1, 0, 0, 1, 0]' : 0.418599}
{'[2, 4, 0, 6, 4, 1, 0, 0, 13, 6, 0, 25, 0, 1, 0, 0, 1, 0]' : 0.425164}
{'[2, 4, 0, 6, 4, 1, 0, 0, 13, 6, 0, 25, 0, 1, 0, 0, 1, 0]' : 0.426943}
{'[2, 4, 0, 6, 4, 1, 0, 0, 13, 6, 0, 25, 0, 1, 0, 0, 1, 0]' : 0.422579}
{'[2, 4, 0, 6, 4, 1, 0, 0, 13, 6, 0, 25, 0, 1, 0, 0, 1, 0]' : 0.419454}
{'[2, 4, 0, 6, 4, 1, 0, 0, 13, 6, 0, 25, 0, 1, 0, 0, 1, 0]' : 0.418257}
{'[2, 4, 0, 6, 4, 1, 0, 0, 13, 6, 0, 25, 0, 1, 0, 0, 1, 0]' : 0.41853}
{'[2, 4, 0, 6, 4, 1, 0, 0, 13, 6, 0, 25, 0, 1, 0, 0, 1, 0]' : 0.424955}
{'[2, 4, 0, 6, 4, 1, 0, 0, 13, 6, 0, 25, 0, 1, 0, 0, 1, 0]' : 0.421204}
{'[2, 4, 0, 6, 4, 1, 0, 0, 13, 6, 0, 25, 0, 1, 0, 0, 1, 0]' : 0.430677}
{'[2, 4, 0, 6, 4, 1, 0, 0, 13, 6, 0, 25, 0, 1, 0, 0, 1, 0]' : 0.422402}
{'[2, 4, 0, 6, 4, 1, 0, 0, 13, 6, 0, 25, 0, 1, 0, 0, 1, 0]' : 0.418076}
{'[2, 4, 0, 6, 4, 1, 0, 0, 13, 6, 0, 25, 0, 1, 0, 0, 1, 0]' : 0.418463}
{'[2, 4, 0, 6, 4, 1, 0, 0, 13, 6, 0, 25, 0, 1, 0, 0, 1, 0]' : 0.426523}
{'[2, 4, 0, 6, 4, 1, 0, 0, 13, 6, 0, 25, 0, 1, 0, 0, 1, 0]' : 0.417839}
{'[2, 4, 0, 6, 4, 1, 0, 0, 13, 6, 0, 25, 0, 1, 0, 0, 1, 0]' : 0.42392}
{'[2, 4, 0, 6, 4, 1, 0, 0, 13, 6, 0, 25, 0, 1, 0, 0, 1, 0]' : 0.425636}
{'[2, 4, 0, 6, 4, 1, 0, 0, 13, 6, 0, 25, 0, 1, 0, 0, 1, 0]' : 0.424782}
{'[2, 4, 0, 6, 4, 1, 0, 0, 13, 6, 0, 25, 0, 1, 0, 0, 1, 0]' : 0.421594}
{'[2, 4, 0, 6, 4, 1, 0, 0, 13, 6, 0, 25, 0, 1, 0, 0, 1, 0]' : 0.417864}
{'[2, 4, 0, 6, 4, 1, 0, 0, 13, 6, 0, 25, 0, 1, 0, 0, 1, 0]' : 0.421088}
{'[2, 4, 0, 6, 4, 1, 0, 0, 13, 6, 0, 25, 0, 1, 0, 0, 1, 0]' : 0.417744}

out:
 ["{'[2, 4, 0, 6, 4, 1, 0, 0, 13, 6, 0, 25, 0, 1, 0, 0, 1, 0]' : 0.426081}", "{'[2, 4, 0, 6, 4, 1, 0, 0, 13, 6, 0, 25, 0, 1, 0, 0, 1, 0]' : 0.42624}", "{'[2, 4, 0, 6, 4, 1, 0, 0, 13, 6, 0, 25, 0, 1, 0, 0, 1, 0]' : 0.419834}", "{'[2, 4, 0, 6, 4, 1, 0, 0, 13, 6, 0, 25, 0, 1, 0, 0, 1, 0]' : 0.419004}", "{'[2, 4, 0, 6, 4, 1, 0, 0, 13, 6, 0, 25, 0, 1, 0, 0, 1, 0]' : 0.421729}", "{'[2, 4, 0, 6, 4, 1, 0, 0, 13, 6, 0, 25, 0, 1, 0, 0, 1, 0]' : 0.422366}", "{'[2, 4, 0, 6, 4, 1, 0, 0, 13, 6, 0, 25, 0, 1, 0, 0, 1, 0]' : 0.431662}", "{'[2, 4, 0, 6, 4, 1, 0, 0, 13, 6, 0, 25, 0, 1, 0, 0, 1, 0]' : 0.418972}", "{'[2, 4, 0, 6, 4, 1, 0, 0, 13, 6, 0, 25, 0, 1, 0, 0, 1, 0]' : 0.418599}", "{'[2, 4, 0, 6, 4, 1, 0, 0, 13, 6, 0, 25, 0, 1, 0, 0, 1, 0]' : 0.425164}", "{'[2, 4, 0, 6, 4, 1, 0, 0, 13, 6, 0, 25, 0, 1, 0, 0, 1, 0]' : 0.426943}", "{'[2, 4, 0, 6, 4, 1, 0, 0, 13, 6, 0, 25, 0, 1, 0, 0, 1, 0]' : 0.422579}", "{'[2, 4, 0, 6, 4, 1, 0, 0, 13, 6, 0, 25, 0, 1, 0, 0, 1, 0]' : 0.419454}", "{'[2, 4, 0, 6, 4, 1, 0, 0, 13, 6, 0, 25, 0, 1, 0, 0, 1, 0]' : 0.418257}", "{'[2, 4, 0, 6, 4, 1, 0, 0, 13, 6, 0, 25, 0, 1, 0, 0, 1, 0]' : 0.41853}", "{'[2, 4, 0, 6, 4, 1, 0, 0, 13, 6, 0, 25, 0, 1, 0, 0, 1, 0]' : 0.424955}", "{'[2, 4, 0, 6, 4, 1, 0, 0, 13, 6, 0, 25, 0, 1, 0, 0, 1, 0]' : 0.421204}", "{'[2, 4, 0, 6, 4, 1, 0, 0, 13, 6, 0, 25, 0, 1, 0, 0, 1, 0]' : 0.430677}", "{'[2, 4, 0, 6, 4, 1, 0, 0, 13, 6, 0, 25, 0, 1, 0, 0, 1, 0]' : 0.422402}", "{'[2, 4, 0, 6, 4, 1, 0, 0, 13, 6, 0, 25, 0, 1, 0, 0, 1, 0]' : 0.418076}", "{'[2, 4, 0, 6, 4, 1, 0, 0, 13, 6, 0, 25, 0, 1, 0, 0, 1, 0]' : 0.418463}", "{'[2, 4, 0, 6, 4, 1, 0, 0, 13, 6, 0, 25, 0, 1, 0, 0, 1, 0]' : 0.426523}", "{'[2, 4, 0, 6, 4, 1, 0, 0, 13, 6, 0, 25, 0, 1, 0, 0, 1, 0]' : 0.417839}", "{'[2, 4, 0, 6, 4, 1, 0, 0, 13, 6, 0, 25, 0, 1, 0, 0, 1, 0]' : 0.42392}", "{'[2, 4, 0, 6, 4, 1, 0, 0, 13, 6, 0, 25, 0, 1, 0, 0, 1, 0]' : 0.425636}", "{'[2, 4, 0, 6, 4, 1, 0, 0, 13, 6, 0, 25, 0, 1, 0, 0, 1, 0]' : 0.424782}", "{'[2, 4, 0, 6, 4, 1, 0, 0, 13, 6, 0, 25, 0, 1, 0, 0, 1, 0]' : 0.421594}", "{'[2, 4, 0, 6, 4, 1, 0, 0, 13, 6, 0, 25, 0, 1, 0, 0, 1, 0]' : 0.417864}", "{'[2, 4, 0, 6, 4, 1, 0, 0, 13, 6, 0, 25, 0, 1, 0, 0, 1, 0]' : 0.421088}", "{'[2, 4, 0, 6, 4, 1, 0, 0, 13, 6, 0, 25, 0, 1, 0, 0, 1, 0]' : 0.417744}"]
returning from 'run': {'[2, 4, 0, 6, 4, 1, 0, 0, 13, 6, 0, 25, 0, 1, 0, 0, 1, 0]': ([0.426081, 0.42624, 0.419834, 0.419004, 0.421729, 0.422366, 0.431662, 0.418972, 0.418599, 0.425164, 0.426943, 0.422579, 0.419454, 0.418257, 0.41853, 0.424955, 0.421204, 0.430677, 0.422402, 0.418076, 0.418463, 0.426523, 0.417839, 0.42392, 0.425636, 0.424782, 0.421594, 0.417864, 0.421088, 0.417744], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 4, 0, 6, 4, 1, 0, 0, 13, 6, 0, 25, 0, 1, 0, 0, 1, 0]': ([0.426081, 0.42624, 0.419834, 0.419004, 0.421729, 0.422366, 0.431662, 0.418972, 0.418599, 0.425164, 0.426943, 0.422579, 0.419454, 0.418257, 0.41853, 0.424955, 0.421204, 0.430677, 0.422402, 0.418076, 0.418463, 0.426523, 0.417839, 0.42392, 0.425636, 0.424782, 0.421594, 0.417864, 0.421088, 0.417744], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
Code stats:
        Number of loops: 	87
        Max loop nest depth: 	5
        Additions: 		4462
        Multiplications: 	1224
        Divisions: 		0
        Logical: 		0
        Reads: 			7175
        Writes: 		905
        Comparisons:		87
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest19.exe __orio_perftest19.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest19.exe  
Program Test Output: 
{'[6, 2, 2, 4, 5, 0, 0, 1, 5, 16, 23, 0, 0, 1, 0, 0, 0, 1]' : 0.387934}
{'[6, 2, 2, 4, 5, 0, 0, 1, 5, 16, 23, 0, 0, 1, 0, 0, 0, 1]' : 0.394733}
{'[6, 2, 2, 4, 5, 0, 0, 1, 5, 16, 23, 0, 0, 1, 0, 0, 0, 1]' : 0.409579}
{'[6, 2, 2, 4, 5, 0, 0, 1, 5, 16, 23, 0, 0, 1, 0, 0, 0, 1]' : 0.371764}
{'[6, 2, 2, 4, 5, 0, 0, 1, 5, 16, 23, 0, 0, 1, 0, 0, 0, 1]' : 0.358728}
{'[6, 2, 2, 4, 5, 0, 0, 1, 5, 16, 23, 0, 0, 1, 0, 0, 0, 1]' : 0.357479}
{'[6, 2, 2, 4, 5, 0, 0, 1, 5, 16, 23, 0, 0, 1, 0, 0, 0, 1]' : 0.365883}
{'[6, 2, 2, 4, 5, 0, 0, 1, 5, 16, 23, 0, 0, 1, 0, 0, 0, 1]' : 0.355914}
{'[6, 2, 2, 4, 5, 0, 0, 1, 5, 16, 23, 0, 0, 1, 0, 0, 0, 1]' : 0.362424}
{'[6, 2, 2, 4, 5, 0, 0, 1, 5, 16, 23, 0, 0, 1, 0, 0, 0, 1]' : 0.355611}
{'[6, 2, 2, 4, 5, 0, 0, 1, 5, 16, 23, 0, 0, 1, 0, 0, 0, 1]' : 0.355868}
{'[6, 2, 2, 4, 5, 0, 0, 1, 5, 16, 23, 0, 0, 1, 0, 0, 0, 1]' : 0.362495}
{'[6, 2, 2, 4, 5, 0, 0, 1, 5, 16, 23, 0, 0, 1, 0, 0, 0, 1]' : 0.356776}
{'[6, 2, 2, 4, 5, 0, 0, 1, 5, 16, 23, 0, 0, 1, 0, 0, 0, 1]' : 0.359366}
{'[6, 2, 2, 4, 5, 0, 0, 1, 5, 16, 23, 0, 0, 1, 0, 0, 0, 1]' : 0.360607}
{'[6, 2, 2, 4, 5, 0, 0, 1, 5, 16, 23, 0, 0, 1, 0, 0, 0, 1]' : 0.358125}
{'[6, 2, 2, 4, 5, 0, 0, 1, 5, 16, 23, 0, 0, 1, 0, 0, 0, 1]' : 0.359182}
{'[6, 2, 2, 4, 5, 0, 0, 1, 5, 16, 23, 0, 0, 1, 0, 0, 0, 1]' : 0.363324}
{'[6, 2, 2, 4, 5, 0, 0, 1, 5, 16, 23, 0, 0, 1, 0, 0, 0, 1]' : 0.354928}
{'[6, 2, 2, 4, 5, 0, 0, 1, 5, 16, 23, 0, 0, 1, 0, 0, 0, 1]' : 0.359293}
{'[6, 2, 2, 4, 5, 0, 0, 1, 5, 16, 23, 0, 0, 1, 0, 0, 0, 1]' : 0.362311}
{'[6, 2, 2, 4, 5, 0, 0, 1, 5, 16, 23, 0, 0, 1, 0, 0, 0, 1]' : 0.357589}
{'[6, 2, 2, 4, 5, 0, 0, 1, 5, 16, 23, 0, 0, 1, 0, 0, 0, 1]' : 0.36271}
{'[6, 2, 2, 4, 5, 0, 0, 1, 5, 16, 23, 0, 0, 1, 0, 0, 0, 1]' : 0.35686}
{'[6, 2, 2, 4, 5, 0, 0, 1, 5, 16, 23, 0, 0, 1, 0, 0, 0, 1]' : 0.357789}
{'[6, 2, 2, 4, 5, 0, 0, 1, 5, 16, 23, 0, 0, 1, 0, 0, 0, 1]' : 0.363876}
{'[6, 2, 2, 4, 5, 0, 0, 1, 5, 16, 23, 0, 0, 1, 0, 0, 0, 1]' : 0.370043}
{'[6, 2, 2, 4, 5, 0, 0, 1, 5, 16, 23, 0, 0, 1, 0, 0, 0, 1]' : 0.358844}
{'[6, 2, 2, 4, 5, 0, 0, 1, 5, 16, 23, 0, 0, 1, 0, 0, 0, 1]' : 0.373113}
{'[6, 2, 2, 4, 5, 0, 0, 1, 5, 16, 23, 0, 0, 1, 0, 0, 0, 1]' : 0.360373}

out:
 ["{'[6, 2, 2, 4, 5, 0, 0, 1, 5, 16, 23, 0, 0, 1, 0, 0, 0, 1]' : 0.387934}", "{'[6, 2, 2, 4, 5, 0, 0, 1, 5, 16, 23, 0, 0, 1, 0, 0, 0, 1]' : 0.394733}", "{'[6, 2, 2, 4, 5, 0, 0, 1, 5, 16, 23, 0, 0, 1, 0, 0, 0, 1]' : 0.409579}", "{'[6, 2, 2, 4, 5, 0, 0, 1, 5, 16, 23, 0, 0, 1, 0, 0, 0, 1]' : 0.371764}", "{'[6, 2, 2, 4, 5, 0, 0, 1, 5, 16, 23, 0, 0, 1, 0, 0, 0, 1]' : 0.358728}", "{'[6, 2, 2, 4, 5, 0, 0, 1, 5, 16, 23, 0, 0, 1, 0, 0, 0, 1]' : 0.357479}", "{'[6, 2, 2, 4, 5, 0, 0, 1, 5, 16, 23, 0, 0, 1, 0, 0, 0, 1]' : 0.365883}", "{'[6, 2, 2, 4, 5, 0, 0, 1, 5, 16, 23, 0, 0, 1, 0, 0, 0, 1]' : 0.355914}", "{'[6, 2, 2, 4, 5, 0, 0, 1, 5, 16, 23, 0, 0, 1, 0, 0, 0, 1]' : 0.362424}", "{'[6, 2, 2, 4, 5, 0, 0, 1, 5, 16, 23, 0, 0, 1, 0, 0, 0, 1]' : 0.355611}", "{'[6, 2, 2, 4, 5, 0, 0, 1, 5, 16, 23, 0, 0, 1, 0, 0, 0, 1]' : 0.355868}", "{'[6, 2, 2, 4, 5, 0, 0, 1, 5, 16, 23, 0, 0, 1, 0, 0, 0, 1]' : 0.362495}", "{'[6, 2, 2, 4, 5, 0, 0, 1, 5, 16, 23, 0, 0, 1, 0, 0, 0, 1]' : 0.356776}", "{'[6, 2, 2, 4, 5, 0, 0, 1, 5, 16, 23, 0, 0, 1, 0, 0, 0, 1]' : 0.359366}", "{'[6, 2, 2, 4, 5, 0, 0, 1, 5, 16, 23, 0, 0, 1, 0, 0, 0, 1]' : 0.360607}", "{'[6, 2, 2, 4, 5, 0, 0, 1, 5, 16, 23, 0, 0, 1, 0, 0, 0, 1]' : 0.358125}", "{'[6, 2, 2, 4, 5, 0, 0, 1, 5, 16, 23, 0, 0, 1, 0, 0, 0, 1]' : 0.359182}", "{'[6, 2, 2, 4, 5, 0, 0, 1, 5, 16, 23, 0, 0, 1, 0, 0, 0, 1]' : 0.363324}", "{'[6, 2, 2, 4, 5, 0, 0, 1, 5, 16, 23, 0, 0, 1, 0, 0, 0, 1]' : 0.354928}", "{'[6, 2, 2, 4, 5, 0, 0, 1, 5, 16, 23, 0, 0, 1, 0, 0, 0, 1]' : 0.359293}", "{'[6, 2, 2, 4, 5, 0, 0, 1, 5, 16, 23, 0, 0, 1, 0, 0, 0, 1]' : 0.362311}", "{'[6, 2, 2, 4, 5, 0, 0, 1, 5, 16, 23, 0, 0, 1, 0, 0, 0, 1]' : 0.357589}", "{'[6, 2, 2, 4, 5, 0, 0, 1, 5, 16, 23, 0, 0, 1, 0, 0, 0, 1]' : 0.36271}", "{'[6, 2, 2, 4, 5, 0, 0, 1, 5, 16, 23, 0, 0, 1, 0, 0, 0, 1]' : 0.35686}", "{'[6, 2, 2, 4, 5, 0, 0, 1, 5, 16, 23, 0, 0, 1, 0, 0, 0, 1]' : 0.357789}", "{'[6, 2, 2, 4, 5, 0, 0, 1, 5, 16, 23, 0, 0, 1, 0, 0, 0, 1]' : 0.363876}", "{'[6, 2, 2, 4, 5, 0, 0, 1, 5, 16, 23, 0, 0, 1, 0, 0, 0, 1]' : 0.370043}", "{'[6, 2, 2, 4, 5, 0, 0, 1, 5, 16, 23, 0, 0, 1, 0, 0, 0, 1]' : 0.358844}", "{'[6, 2, 2, 4, 5, 0, 0, 1, 5, 16, 23, 0, 0, 1, 0, 0, 0, 1]' : 0.373113}", "{'[6, 2, 2, 4, 5, 0, 0, 1, 5, 16, 23, 0, 0, 1, 0, 0, 0, 1]' : 0.360373}"]
returning from 'run': {'[6, 2, 2, 4, 5, 0, 0, 1, 5, 16, 23, 0, 0, 1, 0, 0, 0, 1]': ([0.387934, 0.394733, 0.409579, 0.371764, 0.358728, 0.357479, 0.365883, 0.355914, 0.362424, 0.355611, 0.355868, 0.362495, 0.356776, 0.359366, 0.360607, 0.358125, 0.359182, 0.363324, 0.354928, 0.359293, 0.362311, 0.357589, 0.36271, 0.35686, 0.357789, 0.363876, 0.370043, 0.358844, 0.373113, 0.360373], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 2, 2, 4, 5, 0, 0, 1, 5, 16, 23, 0, 0, 1, 0, 0, 0, 1]': ([0.387934, 0.394733, 0.409579, 0.371764, 0.358728, 0.357479, 0.365883, 0.355914, 0.362424, 0.355611, 0.355868, 0.362495, 0.356776, 0.359366, 0.360607, 0.358125, 0.359182, 0.363324, 0.354928, 0.359293, 0.362311, 0.357589, 0.36271, 0.35686, 0.357789, 0.363876, 0.370043, 0.358844, 0.373113, 0.360373], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = jjj
Code stats:
        Number of loops: 	42
        Max loop nest depth: 	5
        Additions: 		3160
        Multiplications: 	918
        Divisions: 		0
        Logical: 		0
        Reads: 			5000
        Writes: 		569
        Comparisons:		42
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest20.exe __orio_perftest20.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest20.exe  
Program Test Output: 
{'[4, 4, 2, 2, 2, 6, 1, 0, 3, 7, 0, 16, 0, 0, 2, 0, 1, 0]' : 0.425636}
{'[4, 4, 2, 2, 2, 6, 1, 0, 3, 7, 0, 16, 0, 0, 2, 0, 1, 0]' : 0.453047}
{'[4, 4, 2, 2, 2, 6, 1, 0, 3, 7, 0, 16, 0, 0, 2, 0, 1, 0]' : 0.427595}
{'[4, 4, 2, 2, 2, 6, 1, 0, 3, 7, 0, 16, 0, 0, 2, 0, 1, 0]' : 0.427925}
{'[4, 4, 2, 2, 2, 6, 1, 0, 3, 7, 0, 16, 0, 0, 2, 0, 1, 0]' : 0.430345}
{'[4, 4, 2, 2, 2, 6, 1, 0, 3, 7, 0, 16, 0, 0, 2, 0, 1, 0]' : 0.428152}
{'[4, 4, 2, 2, 2, 6, 1, 0, 3, 7, 0, 16, 0, 0, 2, 0, 1, 0]' : 0.432898}
{'[4, 4, 2, 2, 2, 6, 1, 0, 3, 7, 0, 16, 0, 0, 2, 0, 1, 0]' : 0.43087}
{'[4, 4, 2, 2, 2, 6, 1, 0, 3, 7, 0, 16, 0, 0, 2, 0, 1, 0]' : 0.425065}
{'[4, 4, 2, 2, 2, 6, 1, 0, 3, 7, 0, 16, 0, 0, 2, 0, 1, 0]' : 0.425061}
{'[4, 4, 2, 2, 2, 6, 1, 0, 3, 7, 0, 16, 0, 0, 2, 0, 1, 0]' : 0.430941}
{'[4, 4, 2, 2, 2, 6, 1, 0, 3, 7, 0, 16, 0, 0, 2, 0, 1, 0]' : 0.440569}
{'[4, 4, 2, 2, 2, 6, 1, 0, 3, 7, 0, 16, 0, 0, 2, 0, 1, 0]' : 0.424502}
{'[4, 4, 2, 2, 2, 6, 1, 0, 3, 7, 0, 16, 0, 0, 2, 0, 1, 0]' : 0.435804}
{'[4, 4, 2, 2, 2, 6, 1, 0, 3, 7, 0, 16, 0, 0, 2, 0, 1, 0]' : 0.476492}
{'[4, 4, 2, 2, 2, 6, 1, 0, 3, 7, 0, 16, 0, 0, 2, 0, 1, 0]' : 0.458714}
{'[4, 4, 2, 2, 2, 6, 1, 0, 3, 7, 0, 16, 0, 0, 2, 0, 1, 0]' : 0.452572}
{'[4, 4, 2, 2, 2, 6, 1, 0, 3, 7, 0, 16, 0, 0, 2, 0, 1, 0]' : 0.451594}
{'[4, 4, 2, 2, 2, 6, 1, 0, 3, 7, 0, 16, 0, 0, 2, 0, 1, 0]' : 0.454457}
{'[4, 4, 2, 2, 2, 6, 1, 0, 3, 7, 0, 16, 0, 0, 2, 0, 1, 0]' : 0.43283}
{'[4, 4, 2, 2, 2, 6, 1, 0, 3, 7, 0, 16, 0, 0, 2, 0, 1, 0]' : 0.428702}
{'[4, 4, 2, 2, 2, 6, 1, 0, 3, 7, 0, 16, 0, 0, 2, 0, 1, 0]' : 0.428611}
{'[4, 4, 2, 2, 2, 6, 1, 0, 3, 7, 0, 16, 0, 0, 2, 0, 1, 0]' : 0.430217}
{'[4, 4, 2, 2, 2, 6, 1, 0, 3, 7, 0, 16, 0, 0, 2, 0, 1, 0]' : 0.43036}
{'[4, 4, 2, 2, 2, 6, 1, 0, 3, 7, 0, 16, 0, 0, 2, 0, 1, 0]' : 0.431786}
{'[4, 4, 2, 2, 2, 6, 1, 0, 3, 7, 0, 16, 0, 0, 2, 0, 1, 0]' : 0.426333}
{'[4, 4, 2, 2, 2, 6, 1, 0, 3, 7, 0, 16, 0, 0, 2, 0, 1, 0]' : 0.432045}
{'[4, 4, 2, 2, 2, 6, 1, 0, 3, 7, 0, 16, 0, 0, 2, 0, 1, 0]' : 0.434318}
{'[4, 4, 2, 2, 2, 6, 1, 0, 3, 7, 0, 16, 0, 0, 2, 0, 1, 0]' : 0.455264}
{'[4, 4, 2, 2, 2, 6, 1, 0, 3, 7, 0, 16, 0, 0, 2, 0, 1, 0]' : 0.434937}

out:
 ["{'[4, 4, 2, 2, 2, 6, 1, 0, 3, 7, 0, 16, 0, 0, 2, 0, 1, 0]' : 0.425636}", "{'[4, 4, 2, 2, 2, 6, 1, 0, 3, 7, 0, 16, 0, 0, 2, 0, 1, 0]' : 0.453047}", "{'[4, 4, 2, 2, 2, 6, 1, 0, 3, 7, 0, 16, 0, 0, 2, 0, 1, 0]' : 0.427595}", "{'[4, 4, 2, 2, 2, 6, 1, 0, 3, 7, 0, 16, 0, 0, 2, 0, 1, 0]' : 0.427925}", "{'[4, 4, 2, 2, 2, 6, 1, 0, 3, 7, 0, 16, 0, 0, 2, 0, 1, 0]' : 0.430345}", "{'[4, 4, 2, 2, 2, 6, 1, 0, 3, 7, 0, 16, 0, 0, 2, 0, 1, 0]' : 0.428152}", "{'[4, 4, 2, 2, 2, 6, 1, 0, 3, 7, 0, 16, 0, 0, 2, 0, 1, 0]' : 0.432898}", "{'[4, 4, 2, 2, 2, 6, 1, 0, 3, 7, 0, 16, 0, 0, 2, 0, 1, 0]' : 0.43087}", "{'[4, 4, 2, 2, 2, 6, 1, 0, 3, 7, 0, 16, 0, 0, 2, 0, 1, 0]' : 0.425065}", "{'[4, 4, 2, 2, 2, 6, 1, 0, 3, 7, 0, 16, 0, 0, 2, 0, 1, 0]' : 0.425061}", "{'[4, 4, 2, 2, 2, 6, 1, 0, 3, 7, 0, 16, 0, 0, 2, 0, 1, 0]' : 0.430941}", "{'[4, 4, 2, 2, 2, 6, 1, 0, 3, 7, 0, 16, 0, 0, 2, 0, 1, 0]' : 0.440569}", "{'[4, 4, 2, 2, 2, 6, 1, 0, 3, 7, 0, 16, 0, 0, 2, 0, 1, 0]' : 0.424502}", "{'[4, 4, 2, 2, 2, 6, 1, 0, 3, 7, 0, 16, 0, 0, 2, 0, 1, 0]' : 0.435804}", "{'[4, 4, 2, 2, 2, 6, 1, 0, 3, 7, 0, 16, 0, 0, 2, 0, 1, 0]' : 0.476492}", "{'[4, 4, 2, 2, 2, 6, 1, 0, 3, 7, 0, 16, 0, 0, 2, 0, 1, 0]' : 0.458714}", "{'[4, 4, 2, 2, 2, 6, 1, 0, 3, 7, 0, 16, 0, 0, 2, 0, 1, 0]' : 0.452572}", "{'[4, 4, 2, 2, 2, 6, 1, 0, 3, 7, 0, 16, 0, 0, 2, 0, 1, 0]' : 0.451594}", "{'[4, 4, 2, 2, 2, 6, 1, 0, 3, 7, 0, 16, 0, 0, 2, 0, 1, 0]' : 0.454457}", "{'[4, 4, 2, 2, 2, 6, 1, 0, 3, 7, 0, 16, 0, 0, 2, 0, 1, 0]' : 0.43283}", "{'[4, 4, 2, 2, 2, 6, 1, 0, 3, 7, 0, 16, 0, 0, 2, 0, 1, 0]' : 0.428702}", "{'[4, 4, 2, 2, 2, 6, 1, 0, 3, 7, 0, 16, 0, 0, 2, 0, 1, 0]' : 0.428611}", "{'[4, 4, 2, 2, 2, 6, 1, 0, 3, 7, 0, 16, 0, 0, 2, 0, 1, 0]' : 0.430217}", "{'[4, 4, 2, 2, 2, 6, 1, 0, 3, 7, 0, 16, 0, 0, 2, 0, 1, 0]' : 0.43036}", "{'[4, 4, 2, 2, 2, 6, 1, 0, 3, 7, 0, 16, 0, 0, 2, 0, 1, 0]' : 0.431786}", "{'[4, 4, 2, 2, 2, 6, 1, 0, 3, 7, 0, 16, 0, 0, 2, 0, 1, 0]' : 0.426333}", "{'[4, 4, 2, 2, 2, 6, 1, 0, 3, 7, 0, 16, 0, 0, 2, 0, 1, 0]' : 0.432045}", "{'[4, 4, 2, 2, 2, 6, 1, 0, 3, 7, 0, 16, 0, 0, 2, 0, 1, 0]' : 0.434318}", "{'[4, 4, 2, 2, 2, 6, 1, 0, 3, 7, 0, 16, 0, 0, 2, 0, 1, 0]' : 0.455264}", "{'[4, 4, 2, 2, 2, 6, 1, 0, 3, 7, 0, 16, 0, 0, 2, 0, 1, 0]' : 0.434937}"]
returning from 'run': {'[4, 4, 2, 2, 2, 6, 1, 0, 3, 7, 0, 16, 0, 0, 2, 0, 1, 0]': ([0.425636, 0.453047, 0.427595, 0.427925, 0.430345, 0.428152, 0.432898, 0.43087, 0.425065, 0.425061, 0.430941, 0.440569, 0.424502, 0.435804, 0.476492, 0.458714, 0.452572, 0.451594, 0.454457, 0.43283, 0.428702, 0.428611, 0.430217, 0.43036, 0.431786, 0.426333, 0.432045, 0.434318, 0.455264, 0.434937], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 4, 2, 2, 2, 6, 1, 0, 3, 7, 0, 16, 0, 0, 2, 0, 1, 0]': ([0.425636, 0.453047, 0.427595, 0.427925, 0.430345, 0.428152, 0.432898, 0.43087, 0.425065, 0.425061, 0.430941, 0.440569, 0.424502, 0.435804, 0.476492, 0.458714, 0.452572, 0.451594, 0.454457, 0.43283, 0.428702, 0.428611, 0.430217, 0.43036, 0.431786, 0.426333, 0.432045, 0.434318, 0.455264, 0.434937], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	38
        Max loop nest depth: 	5
        Additions: 		917
        Multiplications: 	374
        Divisions: 		0
        Logical: 		0
        Reads: 			1920
        Writes: 		360
        Comparisons:		38
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest21.exe __orio_perftest21.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest21.exe  
Program Test Output: 
{'[0, 3, 5, 2, 6, 0, 0, 1, 0, 9, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.469932}
{'[0, 3, 5, 2, 6, 0, 0, 1, 0, 9, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.451233}
{'[0, 3, 5, 2, 6, 0, 0, 1, 0, 9, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.447306}
{'[0, 3, 5, 2, 6, 0, 0, 1, 0, 9, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.442198}
{'[0, 3, 5, 2, 6, 0, 0, 1, 0, 9, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.446274}
{'[0, 3, 5, 2, 6, 0, 0, 1, 0, 9, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.441934}
{'[0, 3, 5, 2, 6, 0, 0, 1, 0, 9, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.443104}
{'[0, 3, 5, 2, 6, 0, 0, 1, 0, 9, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.447913}
{'[0, 3, 5, 2, 6, 0, 0, 1, 0, 9, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.447973}
{'[0, 3, 5, 2, 6, 0, 0, 1, 0, 9, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.448481}
{'[0, 3, 5, 2, 6, 0, 0, 1, 0, 9, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.44686}
{'[0, 3, 5, 2, 6, 0, 0, 1, 0, 9, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.447776}
{'[0, 3, 5, 2, 6, 0, 0, 1, 0, 9, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.44548}
{'[0, 3, 5, 2, 6, 0, 0, 1, 0, 9, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.449077}
{'[0, 3, 5, 2, 6, 0, 0, 1, 0, 9, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.443152}
{'[0, 3, 5, 2, 6, 0, 0, 1, 0, 9, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.452582}
{'[0, 3, 5, 2, 6, 0, 0, 1, 0, 9, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.44191}
{'[0, 3, 5, 2, 6, 0, 0, 1, 0, 9, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.442012}
{'[0, 3, 5, 2, 6, 0, 0, 1, 0, 9, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.447734}
{'[0, 3, 5, 2, 6, 0, 0, 1, 0, 9, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.445397}
{'[0, 3, 5, 2, 6, 0, 0, 1, 0, 9, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.445545}
{'[0, 3, 5, 2, 6, 0, 0, 1, 0, 9, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.441907}
{'[0, 3, 5, 2, 6, 0, 0, 1, 0, 9, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.446647}
{'[0, 3, 5, 2, 6, 0, 0, 1, 0, 9, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.442005}
{'[0, 3, 5, 2, 6, 0, 0, 1, 0, 9, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.44282}
{'[0, 3, 5, 2, 6, 0, 0, 1, 0, 9, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.445749}
{'[0, 3, 5, 2, 6, 0, 0, 1, 0, 9, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.445015}
{'[0, 3, 5, 2, 6, 0, 0, 1, 0, 9, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.443728}
{'[0, 3, 5, 2, 6, 0, 0, 1, 0, 9, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.445109}
{'[0, 3, 5, 2, 6, 0, 0, 1, 0, 9, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.44091}

out:
 ["{'[0, 3, 5, 2, 6, 0, 0, 1, 0, 9, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.469932}", "{'[0, 3, 5, 2, 6, 0, 0, 1, 0, 9, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.451233}", "{'[0, 3, 5, 2, 6, 0, 0, 1, 0, 9, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.447306}", "{'[0, 3, 5, 2, 6, 0, 0, 1, 0, 9, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.442198}", "{'[0, 3, 5, 2, 6, 0, 0, 1, 0, 9, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.446274}", "{'[0, 3, 5, 2, 6, 0, 0, 1, 0, 9, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.441934}", "{'[0, 3, 5, 2, 6, 0, 0, 1, 0, 9, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.443104}", "{'[0, 3, 5, 2, 6, 0, 0, 1, 0, 9, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.447913}", "{'[0, 3, 5, 2, 6, 0, 0, 1, 0, 9, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.447973}", "{'[0, 3, 5, 2, 6, 0, 0, 1, 0, 9, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.448481}", "{'[0, 3, 5, 2, 6, 0, 0, 1, 0, 9, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.44686}", "{'[0, 3, 5, 2, 6, 0, 0, 1, 0, 9, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.447776}", "{'[0, 3, 5, 2, 6, 0, 0, 1, 0, 9, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.44548}", "{'[0, 3, 5, 2, 6, 0, 0, 1, 0, 9, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.449077}", "{'[0, 3, 5, 2, 6, 0, 0, 1, 0, 9, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.443152}", "{'[0, 3, 5, 2, 6, 0, 0, 1, 0, 9, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.452582}", "{'[0, 3, 5, 2, 6, 0, 0, 1, 0, 9, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.44191}", "{'[0, 3, 5, 2, 6, 0, 0, 1, 0, 9, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.442012}", "{'[0, 3, 5, 2, 6, 0, 0, 1, 0, 9, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.447734}", "{'[0, 3, 5, 2, 6, 0, 0, 1, 0, 9, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.445397}", "{'[0, 3, 5, 2, 6, 0, 0, 1, 0, 9, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.445545}", "{'[0, 3, 5, 2, 6, 0, 0, 1, 0, 9, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.441907}", "{'[0, 3, 5, 2, 6, 0, 0, 1, 0, 9, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.446647}", "{'[0, 3, 5, 2, 6, 0, 0, 1, 0, 9, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.442005}", "{'[0, 3, 5, 2, 6, 0, 0, 1, 0, 9, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.44282}", "{'[0, 3, 5, 2, 6, 0, 0, 1, 0, 9, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.445749}", "{'[0, 3, 5, 2, 6, 0, 0, 1, 0, 9, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.445015}", "{'[0, 3, 5, 2, 6, 0, 0, 1, 0, 9, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.443728}", "{'[0, 3, 5, 2, 6, 0, 0, 1, 0, 9, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.445109}", "{'[0, 3, 5, 2, 6, 0, 0, 1, 0, 9, 0, 0, 0, 1, 1, 1, 0, 0]' : 0.44091}"]
returning from 'run': {'[0, 3, 5, 2, 6, 0, 0, 1, 0, 9, 0, 0, 0, 1, 1, 1, 0, 0]': ([0.469932, 0.451233, 0.447306, 0.442198, 0.446274, 0.441934, 0.443104, 0.447913, 0.447973, 0.448481, 0.44686, 0.447776, 0.44548, 0.449077, 0.443152, 0.452582, 0.44191, 0.442012, 0.447734, 0.445397, 0.445545, 0.441907, 0.446647, 0.442005, 0.44282, 0.445749, 0.445015, 0.443728, 0.445109, 0.44091], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 3, 5, 2, 6, 0, 0, 1, 0, 9, 0, 0, 0, 1, 1, 1, 0, 0]': ([0.469932, 0.451233, 0.447306, 0.442198, 0.446274, 0.441934, 0.443104, 0.447913, 0.447973, 0.448481, 0.44686, 0.447776, 0.44548, 0.449077, 0.443152, 0.452582, 0.44191, 0.442012, 0.447734, 0.445397, 0.445545, 0.441907, 0.446647, 0.442005, 0.44282, 0.445749, 0.445015, 0.443728, 0.445109, 0.44091], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = jjj
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	3
        Additions: 		5386
        Multiplications: 	2688
        Divisions: 		0
        Logical: 		0
        Reads: 			9907
        Writes: 		1507
        Comparisons:		9
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest22.exe __orio_perftest22.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest22.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest22.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest22.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 603, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 536, in dopt_anova
    i)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 485, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 387, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest22.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 603, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 536, in dopt_anova
    i)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 485, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 387, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	6
        Additions: 		193
        Multiplications: 	56
        Divisions: 		0
        Logical: 		0
        Reads: 			420
        Writes: 		94
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest23.exe __orio_perftest23.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest23.exe  
Program Test Output: 
{'[2, 1, 0, 2, 5, 0, 1, 0, 16, 0, 16, 8, 0, 0, 0, 1, 0, 0]' : 0.677132}
{'[2, 1, 0, 2, 5, 0, 1, 0, 16, 0, 16, 8, 0, 0, 0, 1, 0, 0]' : 0.677009}
{'[2, 1, 0, 2, 5, 0, 1, 0, 16, 0, 16, 8, 0, 0, 0, 1, 0, 0]' : 0.673806}
{'[2, 1, 0, 2, 5, 0, 1, 0, 16, 0, 16, 8, 0, 0, 0, 1, 0, 0]' : 0.685867}
{'[2, 1, 0, 2, 5, 0, 1, 0, 16, 0, 16, 8, 0, 0, 0, 1, 0, 0]' : 0.672931}
{'[2, 1, 0, 2, 5, 0, 1, 0, 16, 0, 16, 8, 0, 0, 0, 1, 0, 0]' : 0.681152}
{'[2, 1, 0, 2, 5, 0, 1, 0, 16, 0, 16, 8, 0, 0, 0, 1, 0, 0]' : 0.682814}
{'[2, 1, 0, 2, 5, 0, 1, 0, 16, 0, 16, 8, 0, 0, 0, 1, 0, 0]' : 0.6901}
{'[2, 1, 0, 2, 5, 0, 1, 0, 16, 0, 16, 8, 0, 0, 0, 1, 0, 0]' : 0.692772}
{'[2, 1, 0, 2, 5, 0, 1, 0, 16, 0, 16, 8, 0, 0, 0, 1, 0, 0]' : 0.674463}
{'[2, 1, 0, 2, 5, 0, 1, 0, 16, 0, 16, 8, 0, 0, 0, 1, 0, 0]' : 0.68731}
{'[2, 1, 0, 2, 5, 0, 1, 0, 16, 0, 16, 8, 0, 0, 0, 1, 0, 0]' : 0.675351}
{'[2, 1, 0, 2, 5, 0, 1, 0, 16, 0, 16, 8, 0, 0, 0, 1, 0, 0]' : 0.682245}
{'[2, 1, 0, 2, 5, 0, 1, 0, 16, 0, 16, 8, 0, 0, 0, 1, 0, 0]' : 0.682793}
{'[2, 1, 0, 2, 5, 0, 1, 0, 16, 0, 16, 8, 0, 0, 0, 1, 0, 0]' : 0.679398}
{'[2, 1, 0, 2, 5, 0, 1, 0, 16, 0, 16, 8, 0, 0, 0, 1, 0, 0]' : 0.70045}
{'[2, 1, 0, 2, 5, 0, 1, 0, 16, 0, 16, 8, 0, 0, 0, 1, 0, 0]' : 0.688111}
{'[2, 1, 0, 2, 5, 0, 1, 0, 16, 0, 16, 8, 0, 0, 0, 1, 0, 0]' : 0.691192}
{'[2, 1, 0, 2, 5, 0, 1, 0, 16, 0, 16, 8, 0, 0, 0, 1, 0, 0]' : 0.683456}
{'[2, 1, 0, 2, 5, 0, 1, 0, 16, 0, 16, 8, 0, 0, 0, 1, 0, 0]' : 0.675133}
{'[2, 1, 0, 2, 5, 0, 1, 0, 16, 0, 16, 8, 0, 0, 0, 1, 0, 0]' : 0.674232}
{'[2, 1, 0, 2, 5, 0, 1, 0, 16, 0, 16, 8, 0, 0, 0, 1, 0, 0]' : 0.672079}
{'[2, 1, 0, 2, 5, 0, 1, 0, 16, 0, 16, 8, 0, 0, 0, 1, 0, 0]' : 0.671777}
{'[2, 1, 0, 2, 5, 0, 1, 0, 16, 0, 16, 8, 0, 0, 0, 1, 0, 0]' : 0.671771}
{'[2, 1, 0, 2, 5, 0, 1, 0, 16, 0, 16, 8, 0, 0, 0, 1, 0, 0]' : 0.671318}
{'[2, 1, 0, 2, 5, 0, 1, 0, 16, 0, 16, 8, 0, 0, 0, 1, 0, 0]' : 0.672304}
{'[2, 1, 0, 2, 5, 0, 1, 0, 16, 0, 16, 8, 0, 0, 0, 1, 0, 0]' : 0.673004}
{'[2, 1, 0, 2, 5, 0, 1, 0, 16, 0, 16, 8, 0, 0, 0, 1, 0, 0]' : 0.672393}
{'[2, 1, 0, 2, 5, 0, 1, 0, 16, 0, 16, 8, 0, 0, 0, 1, 0, 0]' : 0.672653}
{'[2, 1, 0, 2, 5, 0, 1, 0, 16, 0, 16, 8, 0, 0, 0, 1, 0, 0]' : 0.673678}

out:
 ["{'[2, 1, 0, 2, 5, 0, 1, 0, 16, 0, 16, 8, 0, 0, 0, 1, 0, 0]' : 0.677132}", "{'[2, 1, 0, 2, 5, 0, 1, 0, 16, 0, 16, 8, 0, 0, 0, 1, 0, 0]' : 0.677009}", "{'[2, 1, 0, 2, 5, 0, 1, 0, 16, 0, 16, 8, 0, 0, 0, 1, 0, 0]' : 0.673806}", "{'[2, 1, 0, 2, 5, 0, 1, 0, 16, 0, 16, 8, 0, 0, 0, 1, 0, 0]' : 0.685867}", "{'[2, 1, 0, 2, 5, 0, 1, 0, 16, 0, 16, 8, 0, 0, 0, 1, 0, 0]' : 0.672931}", "{'[2, 1, 0, 2, 5, 0, 1, 0, 16, 0, 16, 8, 0, 0, 0, 1, 0, 0]' : 0.681152}", "{'[2, 1, 0, 2, 5, 0, 1, 0, 16, 0, 16, 8, 0, 0, 0, 1, 0, 0]' : 0.682814}", "{'[2, 1, 0, 2, 5, 0, 1, 0, 16, 0, 16, 8, 0, 0, 0, 1, 0, 0]' : 0.6901}", "{'[2, 1, 0, 2, 5, 0, 1, 0, 16, 0, 16, 8, 0, 0, 0, 1, 0, 0]' : 0.692772}", "{'[2, 1, 0, 2, 5, 0, 1, 0, 16, 0, 16, 8, 0, 0, 0, 1, 0, 0]' : 0.674463}", "{'[2, 1, 0, 2, 5, 0, 1, 0, 16, 0, 16, 8, 0, 0, 0, 1, 0, 0]' : 0.68731}", "{'[2, 1, 0, 2, 5, 0, 1, 0, 16, 0, 16, 8, 0, 0, 0, 1, 0, 0]' : 0.675351}", "{'[2, 1, 0, 2, 5, 0, 1, 0, 16, 0, 16, 8, 0, 0, 0, 1, 0, 0]' : 0.682245}", "{'[2, 1, 0, 2, 5, 0, 1, 0, 16, 0, 16, 8, 0, 0, 0, 1, 0, 0]' : 0.682793}", "{'[2, 1, 0, 2, 5, 0, 1, 0, 16, 0, 16, 8, 0, 0, 0, 1, 0, 0]' : 0.679398}", "{'[2, 1, 0, 2, 5, 0, 1, 0, 16, 0, 16, 8, 0, 0, 0, 1, 0, 0]' : 0.70045}", "{'[2, 1, 0, 2, 5, 0, 1, 0, 16, 0, 16, 8, 0, 0, 0, 1, 0, 0]' : 0.688111}", "{'[2, 1, 0, 2, 5, 0, 1, 0, 16, 0, 16, 8, 0, 0, 0, 1, 0, 0]' : 0.691192}", "{'[2, 1, 0, 2, 5, 0, 1, 0, 16, 0, 16, 8, 0, 0, 0, 1, 0, 0]' : 0.683456}", "{'[2, 1, 0, 2, 5, 0, 1, 0, 16, 0, 16, 8, 0, 0, 0, 1, 0, 0]' : 0.675133}", "{'[2, 1, 0, 2, 5, 0, 1, 0, 16, 0, 16, 8, 0, 0, 0, 1, 0, 0]' : 0.674232}", "{'[2, 1, 0, 2, 5, 0, 1, 0, 16, 0, 16, 8, 0, 0, 0, 1, 0, 0]' : 0.672079}", "{'[2, 1, 0, 2, 5, 0, 1, 0, 16, 0, 16, 8, 0, 0, 0, 1, 0, 0]' : 0.671777}", "{'[2, 1, 0, 2, 5, 0, 1, 0, 16, 0, 16, 8, 0, 0, 0, 1, 0, 0]' : 0.671771}", "{'[2, 1, 0, 2, 5, 0, 1, 0, 16, 0, 16, 8, 0, 0, 0, 1, 0, 0]' : 0.671318}", "{'[2, 1, 0, 2, 5, 0, 1, 0, 16, 0, 16, 8, 0, 0, 0, 1, 0, 0]' : 0.672304}", "{'[2, 1, 0, 2, 5, 0, 1, 0, 16, 0, 16, 8, 0, 0, 0, 1, 0, 0]' : 0.673004}", "{'[2, 1, 0, 2, 5, 0, 1, 0, 16, 0, 16, 8, 0, 0, 0, 1, 0, 0]' : 0.672393}", "{'[2, 1, 0, 2, 5, 0, 1, 0, 16, 0, 16, 8, 0, 0, 0, 1, 0, 0]' : 0.672653}", "{'[2, 1, 0, 2, 5, 0, 1, 0, 16, 0, 16, 8, 0, 0, 0, 1, 0, 0]' : 0.673678}"]
returning from 'run': {'[2, 1, 0, 2, 5, 0, 1, 0, 16, 0, 16, 8, 0, 0, 0, 1, 0, 0]': ([0.677132, 0.677009, 0.673806, 0.685867, 0.672931, 0.681152, 0.682814, 0.6901, 0.692772, 0.674463, 0.68731, 0.675351, 0.682245, 0.682793, 0.679398, 0.70045, 0.688111, 0.691192, 0.683456, 0.675133, 0.674232, 0.672079, 0.671777, 0.671771, 0.671318, 0.672304, 0.673004, 0.672393, 0.672653, 0.673678], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 1, 0, 2, 5, 0, 1, 0, 16, 0, 16, 8, 0, 0, 0, 1, 0, 0]': ([0.677132, 0.677009, 0.673806, 0.685867, 0.672931, 0.681152, 0.682814, 0.6901, 0.692772, 0.674463, 0.68731, 0.675351, 0.682245, 0.682793, 0.679398, 0.70045, 0.688111, 0.691192, 0.683456, 0.675133, 0.674232, 0.672079, 0.671777, 0.671771, 0.671318, 0.672304, 0.673004, 0.672393, 0.672653, 0.673678], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		403
        Multiplications: 	162
        Divisions: 		0
        Logical: 		0
        Reads: 			930
        Writes: 		123
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest24.exe __orio_perftest24.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest24.exe  
Program Test Output: 
{'[3, 1, 5, 0, 2, 0, 0, 0, 5, 0, 16, 29, 0, 2, 0, 0, 1, 1]' : 0.682316}
{'[3, 1, 5, 0, 2, 0, 0, 0, 5, 0, 16, 29, 0, 2, 0, 0, 1, 1]' : 0.683843}
{'[3, 1, 5, 0, 2, 0, 0, 0, 5, 0, 16, 29, 0, 2, 0, 0, 1, 1]' : 0.684391}
{'[3, 1, 5, 0, 2, 0, 0, 0, 5, 0, 16, 29, 0, 2, 0, 0, 1, 1]' : 0.684281}
{'[3, 1, 5, 0, 2, 0, 0, 0, 5, 0, 16, 29, 0, 2, 0, 0, 1, 1]' : 0.684767}
{'[3, 1, 5, 0, 2, 0, 0, 0, 5, 0, 16, 29, 0, 2, 0, 0, 1, 1]' : 0.685541}
{'[3, 1, 5, 0, 2, 0, 0, 0, 5, 0, 16, 29, 0, 2, 0, 0, 1, 1]' : 0.684874}
{'[3, 1, 5, 0, 2, 0, 0, 0, 5, 0, 16, 29, 0, 2, 0, 0, 1, 1]' : 0.685457}
{'[3, 1, 5, 0, 2, 0, 0, 0, 5, 0, 16, 29, 0, 2, 0, 0, 1, 1]' : 0.683925}
{'[3, 1, 5, 0, 2, 0, 0, 0, 5, 0, 16, 29, 0, 2, 0, 0, 1, 1]' : 0.683285}
{'[3, 1, 5, 0, 2, 0, 0, 0, 5, 0, 16, 29, 0, 2, 0, 0, 1, 1]' : 0.684219}
{'[3, 1, 5, 0, 2, 0, 0, 0, 5, 0, 16, 29, 0, 2, 0, 0, 1, 1]' : 0.683523}
{'[3, 1, 5, 0, 2, 0, 0, 0, 5, 0, 16, 29, 0, 2, 0, 0, 1, 1]' : 0.683754}
{'[3, 1, 5, 0, 2, 0, 0, 0, 5, 0, 16, 29, 0, 2, 0, 0, 1, 1]' : 0.684297}
{'[3, 1, 5, 0, 2, 0, 0, 0, 5, 0, 16, 29, 0, 2, 0, 0, 1, 1]' : 0.683771}
{'[3, 1, 5, 0, 2, 0, 0, 0, 5, 0, 16, 29, 0, 2, 0, 0, 1, 1]' : 0.683812}
{'[3, 1, 5, 0, 2, 0, 0, 0, 5, 0, 16, 29, 0, 2, 0, 0, 1, 1]' : 0.683154}
{'[3, 1, 5, 0, 2, 0, 0, 0, 5, 0, 16, 29, 0, 2, 0, 0, 1, 1]' : 0.68413}
{'[3, 1, 5, 0, 2, 0, 0, 0, 5, 0, 16, 29, 0, 2, 0, 0, 1, 1]' : 0.684059}
{'[3, 1, 5, 0, 2, 0, 0, 0, 5, 0, 16, 29, 0, 2, 0, 0, 1, 1]' : 0.68414}
{'[3, 1, 5, 0, 2, 0, 0, 0, 5, 0, 16, 29, 0, 2, 0, 0, 1, 1]' : 0.684094}
{'[3, 1, 5, 0, 2, 0, 0, 0, 5, 0, 16, 29, 0, 2, 0, 0, 1, 1]' : 0.684022}
{'[3, 1, 5, 0, 2, 0, 0, 0, 5, 0, 16, 29, 0, 2, 0, 0, 1, 1]' : 0.683344}
{'[3, 1, 5, 0, 2, 0, 0, 0, 5, 0, 16, 29, 0, 2, 0, 0, 1, 1]' : 0.682851}
{'[3, 1, 5, 0, 2, 0, 0, 0, 5, 0, 16, 29, 0, 2, 0, 0, 1, 1]' : 0.683623}
{'[3, 1, 5, 0, 2, 0, 0, 0, 5, 0, 16, 29, 0, 2, 0, 0, 1, 1]' : 0.682571}
{'[3, 1, 5, 0, 2, 0, 0, 0, 5, 0, 16, 29, 0, 2, 0, 0, 1, 1]' : 0.683515}
{'[3, 1, 5, 0, 2, 0, 0, 0, 5, 0, 16, 29, 0, 2, 0, 0, 1, 1]' : 0.700309}
{'[3, 1, 5, 0, 2, 0, 0, 0, 5, 0, 16, 29, 0, 2, 0, 0, 1, 1]' : 0.682325}
{'[3, 1, 5, 0, 2, 0, 0, 0, 5, 0, 16, 29, 0, 2, 0, 0, 1, 1]' : 0.68329}

out:
 ["{'[3, 1, 5, 0, 2, 0, 0, 0, 5, 0, 16, 29, 0, 2, 0, 0, 1, 1]' : 0.682316}", "{'[3, 1, 5, 0, 2, 0, 0, 0, 5, 0, 16, 29, 0, 2, 0, 0, 1, 1]' : 0.683843}", "{'[3, 1, 5, 0, 2, 0, 0, 0, 5, 0, 16, 29, 0, 2, 0, 0, 1, 1]' : 0.684391}", "{'[3, 1, 5, 0, 2, 0, 0, 0, 5, 0, 16, 29, 0, 2, 0, 0, 1, 1]' : 0.684281}", "{'[3, 1, 5, 0, 2, 0, 0, 0, 5, 0, 16, 29, 0, 2, 0, 0, 1, 1]' : 0.684767}", "{'[3, 1, 5, 0, 2, 0, 0, 0, 5, 0, 16, 29, 0, 2, 0, 0, 1, 1]' : 0.685541}", "{'[3, 1, 5, 0, 2, 0, 0, 0, 5, 0, 16, 29, 0, 2, 0, 0, 1, 1]' : 0.684874}", "{'[3, 1, 5, 0, 2, 0, 0, 0, 5, 0, 16, 29, 0, 2, 0, 0, 1, 1]' : 0.685457}", "{'[3, 1, 5, 0, 2, 0, 0, 0, 5, 0, 16, 29, 0, 2, 0, 0, 1, 1]' : 0.683925}", "{'[3, 1, 5, 0, 2, 0, 0, 0, 5, 0, 16, 29, 0, 2, 0, 0, 1, 1]' : 0.683285}", "{'[3, 1, 5, 0, 2, 0, 0, 0, 5, 0, 16, 29, 0, 2, 0, 0, 1, 1]' : 0.684219}", "{'[3, 1, 5, 0, 2, 0, 0, 0, 5, 0, 16, 29, 0, 2, 0, 0, 1, 1]' : 0.683523}", "{'[3, 1, 5, 0, 2, 0, 0, 0, 5, 0, 16, 29, 0, 2, 0, 0, 1, 1]' : 0.683754}", "{'[3, 1, 5, 0, 2, 0, 0, 0, 5, 0, 16, 29, 0, 2, 0, 0, 1, 1]' : 0.684297}", "{'[3, 1, 5, 0, 2, 0, 0, 0, 5, 0, 16, 29, 0, 2, 0, 0, 1, 1]' : 0.683771}", "{'[3, 1, 5, 0, 2, 0, 0, 0, 5, 0, 16, 29, 0, 2, 0, 0, 1, 1]' : 0.683812}", "{'[3, 1, 5, 0, 2, 0, 0, 0, 5, 0, 16, 29, 0, 2, 0, 0, 1, 1]' : 0.683154}", "{'[3, 1, 5, 0, 2, 0, 0, 0, 5, 0, 16, 29, 0, 2, 0, 0, 1, 1]' : 0.68413}", "{'[3, 1, 5, 0, 2, 0, 0, 0, 5, 0, 16, 29, 0, 2, 0, 0, 1, 1]' : 0.684059}", "{'[3, 1, 5, 0, 2, 0, 0, 0, 5, 0, 16, 29, 0, 2, 0, 0, 1, 1]' : 0.68414}", "{'[3, 1, 5, 0, 2, 0, 0, 0, 5, 0, 16, 29, 0, 2, 0, 0, 1, 1]' : 0.684094}", "{'[3, 1, 5, 0, 2, 0, 0, 0, 5, 0, 16, 29, 0, 2, 0, 0, 1, 1]' : 0.684022}", "{'[3, 1, 5, 0, 2, 0, 0, 0, 5, 0, 16, 29, 0, 2, 0, 0, 1, 1]' : 0.683344}", "{'[3, 1, 5, 0, 2, 0, 0, 0, 5, 0, 16, 29, 0, 2, 0, 0, 1, 1]' : 0.682851}", "{'[3, 1, 5, 0, 2, 0, 0, 0, 5, 0, 16, 29, 0, 2, 0, 0, 1, 1]' : 0.683623}", "{'[3, 1, 5, 0, 2, 0, 0, 0, 5, 0, 16, 29, 0, 2, 0, 0, 1, 1]' : 0.682571}", "{'[3, 1, 5, 0, 2, 0, 0, 0, 5, 0, 16, 29, 0, 2, 0, 0, 1, 1]' : 0.683515}", "{'[3, 1, 5, 0, 2, 0, 0, 0, 5, 0, 16, 29, 0, 2, 0, 0, 1, 1]' : 0.700309}", "{'[3, 1, 5, 0, 2, 0, 0, 0, 5, 0, 16, 29, 0, 2, 0, 0, 1, 1]' : 0.682325}", "{'[3, 1, 5, 0, 2, 0, 0, 0, 5, 0, 16, 29, 0, 2, 0, 0, 1, 1]' : 0.68329}"]
returning from 'run': {'[3, 1, 5, 0, 2, 0, 0, 0, 5, 0, 16, 29, 0, 2, 0, 0, 1, 1]': ([0.682316, 0.683843, 0.684391, 0.684281, 0.684767, 0.685541, 0.684874, 0.685457, 0.683925, 0.683285, 0.684219, 0.683523, 0.683754, 0.684297, 0.683771, 0.683812, 0.683154, 0.68413, 0.684059, 0.68414, 0.684094, 0.684022, 0.683344, 0.682851, 0.683623, 0.682571, 0.683515, 0.700309, 0.682325, 0.68329], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 1, 5, 0, 2, 0, 0, 0, 5, 0, 16, 29, 0, 2, 0, 0, 1, 1]': ([0.682316, 0.683843, 0.684391, 0.684281, 0.684767, 0.685541, 0.684874, 0.685457, 0.683925, 0.683285, 0.684219, 0.683523, 0.683754, 0.684297, 0.683771, 0.683812, 0.683154, 0.68413, 0.684059, 0.68414, 0.684094, 0.684022, 0.683344, 0.682851, 0.683623, 0.682571, 0.683515, 0.700309, 0.682325, 0.68329], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	92
        Max loop nest depth: 	5
        Additions: 		12471
        Multiplications: 	3328
        Divisions: 		0
        Logical: 		0
        Reads: 			18374
        Writes: 		1903
        Comparisons:		92
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest25.exe __orio_perftest25.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest25.exe  
Program Test Output: 
{'[1, 1, 0, 5, 0, 5, 1, 0, 1, 24, 29, 0, 0, 0, 2, 0, 0, 0]' : 0.762404}
{'[1, 1, 0, 5, 0, 5, 1, 0, 1, 24, 29, 0, 0, 0, 2, 0, 0, 0]' : 0.748155}
{'[1, 1, 0, 5, 0, 5, 1, 0, 1, 24, 29, 0, 0, 0, 2, 0, 0, 0]' : 0.747011}
{'[1, 1, 0, 5, 0, 5, 1, 0, 1, 24, 29, 0, 0, 0, 2, 0, 0, 0]' : 0.758831}
{'[1, 1, 0, 5, 0, 5, 1, 0, 1, 24, 29, 0, 0, 0, 2, 0, 0, 0]' : 0.755976}
{'[1, 1, 0, 5, 0, 5, 1, 0, 1, 24, 29, 0, 0, 0, 2, 0, 0, 0]' : 0.766064}
{'[1, 1, 0, 5, 0, 5, 1, 0, 1, 24, 29, 0, 0, 0, 2, 0, 0, 0]' : 0.76209}
{'[1, 1, 0, 5, 0, 5, 1, 0, 1, 24, 29, 0, 0, 0, 2, 0, 0, 0]' : 0.755216}
{'[1, 1, 0, 5, 0, 5, 1, 0, 1, 24, 29, 0, 0, 0, 2, 0, 0, 0]' : 0.750663}
{'[1, 1, 0, 5, 0, 5, 1, 0, 1, 24, 29, 0, 0, 0, 2, 0, 0, 0]' : 0.761442}
{'[1, 1, 0, 5, 0, 5, 1, 0, 1, 24, 29, 0, 0, 0, 2, 0, 0, 0]' : 0.743183}
{'[1, 1, 0, 5, 0, 5, 1, 0, 1, 24, 29, 0, 0, 0, 2, 0, 0, 0]' : 0.743864}
{'[1, 1, 0, 5, 0, 5, 1, 0, 1, 24, 29, 0, 0, 0, 2, 0, 0, 0]' : 0.754195}
{'[1, 1, 0, 5, 0, 5, 1, 0, 1, 24, 29, 0, 0, 0, 2, 0, 0, 0]' : 0.747887}
{'[1, 1, 0, 5, 0, 5, 1, 0, 1, 24, 29, 0, 0, 0, 2, 0, 0, 0]' : 0.750962}
{'[1, 1, 0, 5, 0, 5, 1, 0, 1, 24, 29, 0, 0, 0, 2, 0, 0, 0]' : 0.748813}
{'[1, 1, 0, 5, 0, 5, 1, 0, 1, 24, 29, 0, 0, 0, 2, 0, 0, 0]' : 0.748838}
{'[1, 1, 0, 5, 0, 5, 1, 0, 1, 24, 29, 0, 0, 0, 2, 0, 0, 0]' : 0.74557}
{'[1, 1, 0, 5, 0, 5, 1, 0, 1, 24, 29, 0, 0, 0, 2, 0, 0, 0]' : 0.75284}
{'[1, 1, 0, 5, 0, 5, 1, 0, 1, 24, 29, 0, 0, 0, 2, 0, 0, 0]' : 0.749286}
{'[1, 1, 0, 5, 0, 5, 1, 0, 1, 24, 29, 0, 0, 0, 2, 0, 0, 0]' : 0.756017}
{'[1, 1, 0, 5, 0, 5, 1, 0, 1, 24, 29, 0, 0, 0, 2, 0, 0, 0]' : 0.745849}
{'[1, 1, 0, 5, 0, 5, 1, 0, 1, 24, 29, 0, 0, 0, 2, 0, 0, 0]' : 0.744168}
{'[1, 1, 0, 5, 0, 5, 1, 0, 1, 24, 29, 0, 0, 0, 2, 0, 0, 0]' : 0.744454}
{'[1, 1, 0, 5, 0, 5, 1, 0, 1, 24, 29, 0, 0, 0, 2, 0, 0, 0]' : 0.7433}
{'[1, 1, 0, 5, 0, 5, 1, 0, 1, 24, 29, 0, 0, 0, 2, 0, 0, 0]' : 0.765423}
{'[1, 1, 0, 5, 0, 5, 1, 0, 1, 24, 29, 0, 0, 0, 2, 0, 0, 0]' : 0.748453}
{'[1, 1, 0, 5, 0, 5, 1, 0, 1, 24, 29, 0, 0, 0, 2, 0, 0, 0]' : 0.759522}
{'[1, 1, 0, 5, 0, 5, 1, 0, 1, 24, 29, 0, 0, 0, 2, 0, 0, 0]' : 0.755535}
{'[1, 1, 0, 5, 0, 5, 1, 0, 1, 24, 29, 0, 0, 0, 2, 0, 0, 0]' : 0.751328}

out:
 ["{'[1, 1, 0, 5, 0, 5, 1, 0, 1, 24, 29, 0, 0, 0, 2, 0, 0, 0]' : 0.762404}", "{'[1, 1, 0, 5, 0, 5, 1, 0, 1, 24, 29, 0, 0, 0, 2, 0, 0, 0]' : 0.748155}", "{'[1, 1, 0, 5, 0, 5, 1, 0, 1, 24, 29, 0, 0, 0, 2, 0, 0, 0]' : 0.747011}", "{'[1, 1, 0, 5, 0, 5, 1, 0, 1, 24, 29, 0, 0, 0, 2, 0, 0, 0]' : 0.758831}", "{'[1, 1, 0, 5, 0, 5, 1, 0, 1, 24, 29, 0, 0, 0, 2, 0, 0, 0]' : 0.755976}", "{'[1, 1, 0, 5, 0, 5, 1, 0, 1, 24, 29, 0, 0, 0, 2, 0, 0, 0]' : 0.766064}", "{'[1, 1, 0, 5, 0, 5, 1, 0, 1, 24, 29, 0, 0, 0, 2, 0, 0, 0]' : 0.76209}", "{'[1, 1, 0, 5, 0, 5, 1, 0, 1, 24, 29, 0, 0, 0, 2, 0, 0, 0]' : 0.755216}", "{'[1, 1, 0, 5, 0, 5, 1, 0, 1, 24, 29, 0, 0, 0, 2, 0, 0, 0]' : 0.750663}", "{'[1, 1, 0, 5, 0, 5, 1, 0, 1, 24, 29, 0, 0, 0, 2, 0, 0, 0]' : 0.761442}", "{'[1, 1, 0, 5, 0, 5, 1, 0, 1, 24, 29, 0, 0, 0, 2, 0, 0, 0]' : 0.743183}", "{'[1, 1, 0, 5, 0, 5, 1, 0, 1, 24, 29, 0, 0, 0, 2, 0, 0, 0]' : 0.743864}", "{'[1, 1, 0, 5, 0, 5, 1, 0, 1, 24, 29, 0, 0, 0, 2, 0, 0, 0]' : 0.754195}", "{'[1, 1, 0, 5, 0, 5, 1, 0, 1, 24, 29, 0, 0, 0, 2, 0, 0, 0]' : 0.747887}", "{'[1, 1, 0, 5, 0, 5, 1, 0, 1, 24, 29, 0, 0, 0, 2, 0, 0, 0]' : 0.750962}", "{'[1, 1, 0, 5, 0, 5, 1, 0, 1, 24, 29, 0, 0, 0, 2, 0, 0, 0]' : 0.748813}", "{'[1, 1, 0, 5, 0, 5, 1, 0, 1, 24, 29, 0, 0, 0, 2, 0, 0, 0]' : 0.748838}", "{'[1, 1, 0, 5, 0, 5, 1, 0, 1, 24, 29, 0, 0, 0, 2, 0, 0, 0]' : 0.74557}", "{'[1, 1, 0, 5, 0, 5, 1, 0, 1, 24, 29, 0, 0, 0, 2, 0, 0, 0]' : 0.75284}", "{'[1, 1, 0, 5, 0, 5, 1, 0, 1, 24, 29, 0, 0, 0, 2, 0, 0, 0]' : 0.749286}", "{'[1, 1, 0, 5, 0, 5, 1, 0, 1, 24, 29, 0, 0, 0, 2, 0, 0, 0]' : 0.756017}", "{'[1, 1, 0, 5, 0, 5, 1, 0, 1, 24, 29, 0, 0, 0, 2, 0, 0, 0]' : 0.745849}", "{'[1, 1, 0, 5, 0, 5, 1, 0, 1, 24, 29, 0, 0, 0, 2, 0, 0, 0]' : 0.744168}", "{'[1, 1, 0, 5, 0, 5, 1, 0, 1, 24, 29, 0, 0, 0, 2, 0, 0, 0]' : 0.744454}", "{'[1, 1, 0, 5, 0, 5, 1, 0, 1, 24, 29, 0, 0, 0, 2, 0, 0, 0]' : 0.7433}", "{'[1, 1, 0, 5, 0, 5, 1, 0, 1, 24, 29, 0, 0, 0, 2, 0, 0, 0]' : 0.765423}", "{'[1, 1, 0, 5, 0, 5, 1, 0, 1, 24, 29, 0, 0, 0, 2, 0, 0, 0]' : 0.748453}", "{'[1, 1, 0, 5, 0, 5, 1, 0, 1, 24, 29, 0, 0, 0, 2, 0, 0, 0]' : 0.759522}", "{'[1, 1, 0, 5, 0, 5, 1, 0, 1, 24, 29, 0, 0, 0, 2, 0, 0, 0]' : 0.755535}", "{'[1, 1, 0, 5, 0, 5, 1, 0, 1, 24, 29, 0, 0, 0, 2, 0, 0, 0]' : 0.751328}"]
returning from 'run': {'[1, 1, 0, 5, 0, 5, 1, 0, 1, 24, 29, 0, 0, 0, 2, 0, 0, 0]': ([0.762404, 0.748155, 0.747011, 0.758831, 0.755976, 0.766064, 0.76209, 0.755216, 0.750663, 0.761442, 0.743183, 0.743864, 0.754195, 0.747887, 0.750962, 0.748813, 0.748838, 0.74557, 0.75284, 0.749286, 0.756017, 0.745849, 0.744168, 0.744454, 0.7433, 0.765423, 0.748453, 0.759522, 0.755535, 0.751328], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 1, 0, 5, 0, 5, 1, 0, 1, 24, 29, 0, 0, 0, 2, 0, 0, 0]': ([0.762404, 0.748155, 0.747011, 0.758831, 0.755976, 0.766064, 0.76209, 0.755216, 0.750663, 0.761442, 0.743183, 0.743864, 0.754195, 0.747887, 0.750962, 0.748813, 0.748838, 0.74557, 0.75284, 0.749286, 0.756017, 0.745849, 0.744168, 0.744454, 0.7433, 0.765423, 0.748453, 0.759522, 0.755535, 0.751328], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = jjj
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	3
        Additions: 		410
        Multiplications: 	128
        Divisions: 		0
        Logical: 		0
        Reads: 			900
        Writes: 		192
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest26.exe __orio_perftest26.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest26.exe  
Program Test Output: 
{'[0, 4, 0, 0, 2, 5, 1, 1, 14, 2, 0, 19, 0, 1, 1, 1, 0, 0]' : 0.411479}
{'[0, 4, 0, 0, 2, 5, 1, 1, 14, 2, 0, 19, 0, 1, 1, 1, 0, 0]' : 0.412931}
{'[0, 4, 0, 0, 2, 5, 1, 1, 14, 2, 0, 19, 0, 1, 1, 1, 0, 0]' : 0.425784}
{'[0, 4, 0, 0, 2, 5, 1, 1, 14, 2, 0, 19, 0, 1, 1, 1, 0, 0]' : 0.414712}
{'[0, 4, 0, 0, 2, 5, 1, 1, 14, 2, 0, 19, 0, 1, 1, 1, 0, 0]' : 0.411005}
{'[0, 4, 0, 0, 2, 5, 1, 1, 14, 2, 0, 19, 0, 1, 1, 1, 0, 0]' : 0.411545}
{'[0, 4, 0, 0, 2, 5, 1, 1, 14, 2, 0, 19, 0, 1, 1, 1, 0, 0]' : 0.411033}
{'[0, 4, 0, 0, 2, 5, 1, 1, 14, 2, 0, 19, 0, 1, 1, 1, 0, 0]' : 0.410259}
{'[0, 4, 0, 0, 2, 5, 1, 1, 14, 2, 0, 19, 0, 1, 1, 1, 0, 0]' : 0.421587}
{'[0, 4, 0, 0, 2, 5, 1, 1, 14, 2, 0, 19, 0, 1, 1, 1, 0, 0]' : 0.414471}
{'[0, 4, 0, 0, 2, 5, 1, 1, 14, 2, 0, 19, 0, 1, 1, 1, 0, 0]' : 0.414018}
{'[0, 4, 0, 0, 2, 5, 1, 1, 14, 2, 0, 19, 0, 1, 1, 1, 0, 0]' : 0.415463}
{'[0, 4, 0, 0, 2, 5, 1, 1, 14, 2, 0, 19, 0, 1, 1, 1, 0, 0]' : 0.411105}
{'[0, 4, 0, 0, 2, 5, 1, 1, 14, 2, 0, 19, 0, 1, 1, 1, 0, 0]' : 0.416235}
{'[0, 4, 0, 0, 2, 5, 1, 1, 14, 2, 0, 19, 0, 1, 1, 1, 0, 0]' : 0.434313}
{'[0, 4, 0, 0, 2, 5, 1, 1, 14, 2, 0, 19, 0, 1, 1, 1, 0, 0]' : 0.420777}
{'[0, 4, 0, 0, 2, 5, 1, 1, 14, 2, 0, 19, 0, 1, 1, 1, 0, 0]' : 0.432903}
{'[0, 4, 0, 0, 2, 5, 1, 1, 14, 2, 0, 19, 0, 1, 1, 1, 0, 0]' : 0.412741}
{'[0, 4, 0, 0, 2, 5, 1, 1, 14, 2, 0, 19, 0, 1, 1, 1, 0, 0]' : 0.431246}
{'[0, 4, 0, 0, 2, 5, 1, 1, 14, 2, 0, 19, 0, 1, 1, 1, 0, 0]' : 0.41933}
{'[0, 4, 0, 0, 2, 5, 1, 1, 14, 2, 0, 19, 0, 1, 1, 1, 0, 0]' : 0.419041}
{'[0, 4, 0, 0, 2, 5, 1, 1, 14, 2, 0, 19, 0, 1, 1, 1, 0, 0]' : 0.413875}
{'[0, 4, 0, 0, 2, 5, 1, 1, 14, 2, 0, 19, 0, 1, 1, 1, 0, 0]' : 0.427877}
{'[0, 4, 0, 0, 2, 5, 1, 1, 14, 2, 0, 19, 0, 1, 1, 1, 0, 0]' : 0.423781}
{'[0, 4, 0, 0, 2, 5, 1, 1, 14, 2, 0, 19, 0, 1, 1, 1, 0, 0]' : 0.434555}
{'[0, 4, 0, 0, 2, 5, 1, 1, 14, 2, 0, 19, 0, 1, 1, 1, 0, 0]' : 0.422469}
{'[0, 4, 0, 0, 2, 5, 1, 1, 14, 2, 0, 19, 0, 1, 1, 1, 0, 0]' : 0.427038}
{'[0, 4, 0, 0, 2, 5, 1, 1, 14, 2, 0, 19, 0, 1, 1, 1, 0, 0]' : 0.411896}
{'[0, 4, 0, 0, 2, 5, 1, 1, 14, 2, 0, 19, 0, 1, 1, 1, 0, 0]' : 0.431571}
{'[0, 4, 0, 0, 2, 5, 1, 1, 14, 2, 0, 19, 0, 1, 1, 1, 0, 0]' : 0.411681}

out:
 ["{'[0, 4, 0, 0, 2, 5, 1, 1, 14, 2, 0, 19, 0, 1, 1, 1, 0, 0]' : 0.411479}", "{'[0, 4, 0, 0, 2, 5, 1, 1, 14, 2, 0, 19, 0, 1, 1, 1, 0, 0]' : 0.412931}", "{'[0, 4, 0, 0, 2, 5, 1, 1, 14, 2, 0, 19, 0, 1, 1, 1, 0, 0]' : 0.425784}", "{'[0, 4, 0, 0, 2, 5, 1, 1, 14, 2, 0, 19, 0, 1, 1, 1, 0, 0]' : 0.414712}", "{'[0, 4, 0, 0, 2, 5, 1, 1, 14, 2, 0, 19, 0, 1, 1, 1, 0, 0]' : 0.411005}", "{'[0, 4, 0, 0, 2, 5, 1, 1, 14, 2, 0, 19, 0, 1, 1, 1, 0, 0]' : 0.411545}", "{'[0, 4, 0, 0, 2, 5, 1, 1, 14, 2, 0, 19, 0, 1, 1, 1, 0, 0]' : 0.411033}", "{'[0, 4, 0, 0, 2, 5, 1, 1, 14, 2, 0, 19, 0, 1, 1, 1, 0, 0]' : 0.410259}", "{'[0, 4, 0, 0, 2, 5, 1, 1, 14, 2, 0, 19, 0, 1, 1, 1, 0, 0]' : 0.421587}", "{'[0, 4, 0, 0, 2, 5, 1, 1, 14, 2, 0, 19, 0, 1, 1, 1, 0, 0]' : 0.414471}", "{'[0, 4, 0, 0, 2, 5, 1, 1, 14, 2, 0, 19, 0, 1, 1, 1, 0, 0]' : 0.414018}", "{'[0, 4, 0, 0, 2, 5, 1, 1, 14, 2, 0, 19, 0, 1, 1, 1, 0, 0]' : 0.415463}", "{'[0, 4, 0, 0, 2, 5, 1, 1, 14, 2, 0, 19, 0, 1, 1, 1, 0, 0]' : 0.411105}", "{'[0, 4, 0, 0, 2, 5, 1, 1, 14, 2, 0, 19, 0, 1, 1, 1, 0, 0]' : 0.416235}", "{'[0, 4, 0, 0, 2, 5, 1, 1, 14, 2, 0, 19, 0, 1, 1, 1, 0, 0]' : 0.434313}", "{'[0, 4, 0, 0, 2, 5, 1, 1, 14, 2, 0, 19, 0, 1, 1, 1, 0, 0]' : 0.420777}", "{'[0, 4, 0, 0, 2, 5, 1, 1, 14, 2, 0, 19, 0, 1, 1, 1, 0, 0]' : 0.432903}", "{'[0, 4, 0, 0, 2, 5, 1, 1, 14, 2, 0, 19, 0, 1, 1, 1, 0, 0]' : 0.412741}", "{'[0, 4, 0, 0, 2, 5, 1, 1, 14, 2, 0, 19, 0, 1, 1, 1, 0, 0]' : 0.431246}", "{'[0, 4, 0, 0, 2, 5, 1, 1, 14, 2, 0, 19, 0, 1, 1, 1, 0, 0]' : 0.41933}", "{'[0, 4, 0, 0, 2, 5, 1, 1, 14, 2, 0, 19, 0, 1, 1, 1, 0, 0]' : 0.419041}", "{'[0, 4, 0, 0, 2, 5, 1, 1, 14, 2, 0, 19, 0, 1, 1, 1, 0, 0]' : 0.413875}", "{'[0, 4, 0, 0, 2, 5, 1, 1, 14, 2, 0, 19, 0, 1, 1, 1, 0, 0]' : 0.427877}", "{'[0, 4, 0, 0, 2, 5, 1, 1, 14, 2, 0, 19, 0, 1, 1, 1, 0, 0]' : 0.423781}", "{'[0, 4, 0, 0, 2, 5, 1, 1, 14, 2, 0, 19, 0, 1, 1, 1, 0, 0]' : 0.434555}", "{'[0, 4, 0, 0, 2, 5, 1, 1, 14, 2, 0, 19, 0, 1, 1, 1, 0, 0]' : 0.422469}", "{'[0, 4, 0, 0, 2, 5, 1, 1, 14, 2, 0, 19, 0, 1, 1, 1, 0, 0]' : 0.427038}", "{'[0, 4, 0, 0, 2, 5, 1, 1, 14, 2, 0, 19, 0, 1, 1, 1, 0, 0]' : 0.411896}", "{'[0, 4, 0, 0, 2, 5, 1, 1, 14, 2, 0, 19, 0, 1, 1, 1, 0, 0]' : 0.431571}", "{'[0, 4, 0, 0, 2, 5, 1, 1, 14, 2, 0, 19, 0, 1, 1, 1, 0, 0]' : 0.411681}"]
returning from 'run': {'[0, 4, 0, 0, 2, 5, 1, 1, 14, 2, 0, 19, 0, 1, 1, 1, 0, 0]': ([0.411479, 0.412931, 0.425784, 0.414712, 0.411005, 0.411545, 0.411033, 0.410259, 0.421587, 0.414471, 0.414018, 0.415463, 0.411105, 0.416235, 0.434313, 0.420777, 0.432903, 0.412741, 0.431246, 0.41933, 0.419041, 0.413875, 0.427877, 0.423781, 0.434555, 0.422469, 0.427038, 0.411896, 0.431571, 0.411681], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 4, 0, 0, 2, 5, 1, 1, 14, 2, 0, 19, 0, 1, 1, 1, 0, 0]': ([0.411479, 0.412931, 0.425784, 0.414712, 0.411005, 0.411545, 0.411033, 0.410259, 0.421587, 0.414471, 0.414018, 0.415463, 0.411105, 0.416235, 0.434313, 0.420777, 0.432903, 0.412741, 0.431246, 0.41933, 0.419041, 0.413875, 0.427877, 0.423781, 0.434555, 0.422469, 0.427038, 0.411896, 0.431571, 0.411681], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Complete design, with measurements:
     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
8       2    0    2    1    0    5       1       1   27   0  28  25    0    0
262     6    5    1    6    0    2       1       1   19   4   0   9    0    0
353     2    2    3    2    2    5       0       1    8   0  27   9    2    0
363     0    3    2    1    3    0       0       1   27   0  29  15    1    0
420     2    0    1    0    0    5       0       1   15   0   9  27    1    0
534     1    5    5    1    0    6       0       0   24   9   9   0    0    1
538     1    2    3    2    6    6       0       1   25  23   0  22    2    0
540     4    4    6    5    3    0       1       0    8   0   9  27    0    1
584     3    1    2    0    5    6       0       1   13  10  12   0    0    2
606     1    2    0    3    2    2       0       1   29   9   0   0    1    0
608     3    2    4    3    0    2       1       0    1  22  29   0    1    1
641     1    3    4    3    2    5       1       0   13  15   6   0    0    0
724     6    6    2    0    0    6       0       1    4   2   1   0    0    0
773     1    0    5    0    6    3       0       0   27  24   0   9    0    0
801     2    0    4    2    0    2       0       0   20  20   7   0    0    0
858     2    2    0    4    2    1       0       0   29  28   0   6    0    0
941     0    6    1    6    5    6       0       1   11   0  29  23    0    1
957     4    3    5    5    3    4       0       0   29   0  27  29    0    0
996     4    0    4    0    4    5       1       1   27  26   0  20    1    1
1040    3    2    6    6    3    5       1       1   13   0   0   9    2    0
1041    3    6    1    6    0    3       0       1    2  24   0  21    1    0
1059    6    4    1    4    2    4       0       0   14   9  26   0    2    0
1209    2    5    2    2    0    0       1       0   24  28   0  26    2    0
1317    2    6    4    5    6    2       0       0   14  18   4   0    0    1
1327    1    2    2    1    3    3       0       0   22   9   0   9    1    0
1356    0    1    2    6    2    2       0       1   19   0   9  20    2    0
1366    4    2    1    0    6    2       0       0   10   0  27   8    0    0
1425    2    6    6    0    6    6       1       1    8   9  13   0    1    0
1434    5    1    2    6    2    0       1       0   29  29  24   0    2    0
1486    1    6    4    2    0    5       0       0   25   1  11   0    1    1
1490    3    0    2    2    6    4       1       0   13   0   9  21    1    0
1503    2    4    0    6    4    1       0       0   13   6   0  25    0    1
1517    6    2    2    4    5    0       0       1    5  16  23   0    0    1
1520    4    4    2    2    2    6       1       0    3   7   0  16    0    0
1570    0    3    5    2    6    0       0       1    0   9   0   0    0    1
1593    2    1    0    2    5    0       1       0   16   0  16   8    0    0
1611    3    1    5    0    2    0       0       0    5   0  16  29    0    2
1774    1    1    0    5    0    5       1       0    1  24  29   0    0    0
1786    0    4    0    0    2    5       1       1   14   2   0  19    0    1
     RT_K SCR VEC1 VEC2 cost_mean
8       1   0    0    0 0.8751998
262     0   1    1    0 0.6567628
353     0   1    1    0 0.4016510
363     1   0    1    0 0.3771151
420     0   1    0    1 0.2684074
534     0   0    0    1 0.4077640
538     0   1    1    0 0.7735917
540     1   1    1    0 0.6478093
584     0   1    1    0 0.5501722
606     0   0    0    1 0.2059157
608     0   1    1    0 0.2311088
641     1   1    0    1 0.5690834
724     0   1    0    0 0.3854537
773     0   1    0    0 0.6540957
801     1   0    0    0 0.7161304
858     2   1    0    0 0.4509034
941     0   1    1    0 0.9361751
957     2   1    0    1 0.6501493
996     0   0    1    1 0.2605228
1040    0   0    1    1 0.3231650
1041    1   1    0    0 0.2819300
1059    0   0    0    0 0.5929132
1209    0   1    1    1 0.4831410
1317    1   0    1    1 0.4919629
1327    1   1    1    1 0.2596232
1356    0   1    0    0 0.4623999
1366    1   0    1    1 0.8312716
1425    0   1    0    0 0.2603995
1434    0   1    1    1 0.4784695
1486    0   1    0    1 0.2209739
1490    0   0    0    0 0.3425411
1503    0   0    1    0 0.4222727
1517    0   0    0    1 0.3644507
1520    2   0    1    0 0.4365881
1570    1   1    0    0 0.4462588
1593    0   1    0    0 0.6792898
1611    0   0    1    1 0.6843828
1774    2   0    0    0 0.7522446
1786    1   1    0    0 0.4192240

Heteroscedasticity Test p-value: 0.937869268919
Regression Step:                Df  Sum Sq Mean Sq F value  Pr(>F)   
T1_I             1 0.00000 0.00000   0.000 0.98995   
T1_J             1 0.02911 0.02911   1.914 0.20900   
T1_K             1 0.00838 0.00838   0.551 0.48216   
T2_I             1 0.02856 0.02856   1.878 0.21292   
T2_J             1 0.03795 0.03795   2.496 0.15817   
T2_K             1 0.00727 0.00727   0.478 0.51157   
ACOPY_x          1 0.00000 0.00000   0.000 0.99798   
ACOPY_y          1 0.05735 0.05735   3.771 0.09326 . 
U1_I             1 0.00002 0.00002   0.001 0.97109   
U_I              1 0.02823 0.02823   1.856 0.21529   
U_J              1 0.11805 0.11805   7.763 0.02706 * 
U_K              1 0.07683 0.07683   5.052 0.05940 . 
RT_I             1 0.22657 0.22657  14.898 0.00621 **
RT_J             1 0.03096 0.03096   2.036 0.19669   
RT_K             1 0.02186 0.02186   1.438 0.26955   
SCR              1 0.00280 0.00280   0.184 0.68064   
VEC1             1 0.04893 0.04893   3.217 0.11594   
VEC2             1 0.04260 0.04260   2.801 0.13810   
I(1/(1 + T1_I))  1 0.02695 0.02695   1.772 0.22482   
I(1/(1 + T1_J))  1 0.01327 0.01327   0.872 0.38141   
I(1/(1 + T1_K))  1 0.00615 0.00615   0.404 0.54500   
I(1/(1 + T2_I))  1 0.00336 0.00336   0.221 0.65239   
I(1/(1 + T2_J))  1 0.03284 0.03284   2.159 0.18517   
I(1/(1 + T2_K))  1 0.04082 0.04082   2.684 0.14535   
I(1/(1 + U1_I))  1 0.01723 0.01723   1.133 0.32245   
I(1/(1 + U_I))   1 0.00524 0.00524   0.344 0.57576   
I(1/(1 + U_J))   1 0.00018 0.00018   0.012 0.91748   
I(1/(1 + U_K))   1 0.03450 0.03450   2.269 0.17575   
I(1/(1 + RT_I))  1 0.24617 0.24617  16.187 0.00504 **
I(1/(1 + RT_J))  1 0.07944 0.07944   5.224 0.05617 . 
I(1/(1 + RT_K))  1 0.07642 0.07642   5.025 0.05993 . 
Residuals        7 0.10645 0.01521                   
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Predicting Best
Generating valid search space of size 9200 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Valid coordinates: 1840
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Tested coordinates: 150000
Valid coordinates: 3680
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Tested coordinates: 190000
Tested coordinates: 200000
Tested coordinates: 210000
Tested coordinates: 220000
Valid coordinates: 5520
Tested coordinates: 230000
Tested coordinates: 240000
Tested coordinates: 250000
Tested coordinates: 260000
Tested coordinates: 270000
Tested coordinates: 280000
Tested coordinates: 290000
Valid coordinates: 7360
Tested coordinates: 300000
Tested coordinates: 310000
Tested coordinates: 320000
Tested coordinates: 330000
Tested coordinates: 340000
Tested coordinates: 350000
Tested coordinates: 360000
Tested coordinates: 370000
Valid coordinates: 9200
Valid/Tested configurations: 9200/374347
Generated Search Space:
NULL
Identical predictions (tol = 1e-5): 1
Getting Best from Design
Response: ['cost_mean']
Design Names:  [1] "T1_I"      "T1_J"      "T1_K"      "T2_I"      "T2_J"      "T2_K"     
 [7] "ACOPY_x"   "ACOPY_y"   "U1_I"      "U_I"       "U_J"       "U_K"      
[13] "RT_I"      "RT_J"      "RT_K"      "SCR"       "VEC1"      "VEC2"     
[19] "cost_mean"

Design Response:      cost_mean
8    0.8751998
262  0.6567628
353  0.4016510
363  0.3771151
420  0.2684074
534  0.4077640
538  0.7735917
540  0.6478093
584  0.5501722
606  0.2059157
608  0.2311088
641  0.5690834
724  0.3854537
773  0.6540957
801  0.7161304
858  0.4509034
941  0.9361751
957  0.6501493
996  0.2605228
1040 0.3231650
1041 0.2819300
1059 0.5929132
1209 0.4831410
1317 0.4919629
1327 0.2596232
1356 0.4623999
1366 0.8312716
1425 0.2603995
1434 0.4784695
1486 0.2209739
1490 0.3425411
1503 0.4222727
1517 0.3644507
1520 0.4365881
1570 0.4462588
1593 0.6792898
1611 0.6843828
1774 0.7522446
1786 0.4192240

Getting fixed variables
Fixed Variables: {'U_K': 4, 'U_J': 2, 'RT_I': 1, 'ACOPY_y': 1}
Pruning Model
Best Predicted:     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
935    3    2    4    0    1    0       0       1    2   0   2   4    1    1
    RT_K SCR VEC1 VEC2
935    0   0    0    1

Best From Design:     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
606    1    2    0    3    2    2       0       1   29   9   0   0    1    0
    RT_K SCR VEC1 VEC2 cost_mean
606    0   0    0    1 0.2059157

Pruned Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'U1_I', 'U_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Fixed Factors: {'U_K': 4, 'U_J': 2, 'RT_I': 1, 'ACOPY_y': 1}
Length of requested configs: 1
Result was on Database, Returning Now
Starting Point (-O3):
0.6593555
Predicted Best Point:
[3, 2, 4, 0, 1, 0, 0, 1, 2, 0, 2, 4, 1, 1, 0, 0, 0, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	5
        Additions: 		1158
        Multiplications: 	324
        Divisions: 		0
        Logical: 		0
        Reads: 			1967
        Writes: 		236
        Comparisons:		25
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest27.exe __orio_perftest27.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest27.exe  
Program Test Output: 
{'[3, 2, 4, 0, 1, 0, 0, 1, 2, 0, 2, 4, 1, 1, 0, 0, 0, 1]' : 0.262357}
{'[3, 2, 4, 0, 1, 0, 0, 1, 2, 0, 2, 4, 1, 1, 0, 0, 0, 1]' : 0.25898}
{'[3, 2, 4, 0, 1, 0, 0, 1, 2, 0, 2, 4, 1, 1, 0, 0, 0, 1]' : 0.25646}
{'[3, 2, 4, 0, 1, 0, 0, 1, 2, 0, 2, 4, 1, 1, 0, 0, 0, 1]' : 0.261907}
{'[3, 2, 4, 0, 1, 0, 0, 1, 2, 0, 2, 4, 1, 1, 0, 0, 0, 1]' : 0.259499}
{'[3, 2, 4, 0, 1, 0, 0, 1, 2, 0, 2, 4, 1, 1, 0, 0, 0, 1]' : 0.258644}
{'[3, 2, 4, 0, 1, 0, 0, 1, 2, 0, 2, 4, 1, 1, 0, 0, 0, 1]' : 0.256279}
{'[3, 2, 4, 0, 1, 0, 0, 1, 2, 0, 2, 4, 1, 1, 0, 0, 0, 1]' : 0.258801}
{'[3, 2, 4, 0, 1, 0, 0, 1, 2, 0, 2, 4, 1, 1, 0, 0, 0, 1]' : 0.256934}
{'[3, 2, 4, 0, 1, 0, 0, 1, 2, 0, 2, 4, 1, 1, 0, 0, 0, 1]' : 0.256402}
{'[3, 2, 4, 0, 1, 0, 0, 1, 2, 0, 2, 4, 1, 1, 0, 0, 0, 1]' : 0.256071}
{'[3, 2, 4, 0, 1, 0, 0, 1, 2, 0, 2, 4, 1, 1, 0, 0, 0, 1]' : 0.257372}
{'[3, 2, 4, 0, 1, 0, 0, 1, 2, 0, 2, 4, 1, 1, 0, 0, 0, 1]' : 0.256716}
{'[3, 2, 4, 0, 1, 0, 0, 1, 2, 0, 2, 4, 1, 1, 0, 0, 0, 1]' : 0.255922}
{'[3, 2, 4, 0, 1, 0, 0, 1, 2, 0, 2, 4, 1, 1, 0, 0, 0, 1]' : 0.257042}
{'[3, 2, 4, 0, 1, 0, 0, 1, 2, 0, 2, 4, 1, 1, 0, 0, 0, 1]' : 0.257312}
{'[3, 2, 4, 0, 1, 0, 0, 1, 2, 0, 2, 4, 1, 1, 0, 0, 0, 1]' : 0.256619}
{'[3, 2, 4, 0, 1, 0, 0, 1, 2, 0, 2, 4, 1, 1, 0, 0, 0, 1]' : 0.256475}
{'[3, 2, 4, 0, 1, 0, 0, 1, 2, 0, 2, 4, 1, 1, 0, 0, 0, 1]' : 0.256869}
{'[3, 2, 4, 0, 1, 0, 0, 1, 2, 0, 2, 4, 1, 1, 0, 0, 0, 1]' : 0.256766}
{'[3, 2, 4, 0, 1, 0, 0, 1, 2, 0, 2, 4, 1, 1, 0, 0, 0, 1]' : 0.256007}
{'[3, 2, 4, 0, 1, 0, 0, 1, 2, 0, 2, 4, 1, 1, 0, 0, 0, 1]' : 0.257686}
{'[3, 2, 4, 0, 1, 0, 0, 1, 2, 0, 2, 4, 1, 1, 0, 0, 0, 1]' : 0.256331}
{'[3, 2, 4, 0, 1, 0, 0, 1, 2, 0, 2, 4, 1, 1, 0, 0, 0, 1]' : 0.258224}
{'[3, 2, 4, 0, 1, 0, 0, 1, 2, 0, 2, 4, 1, 1, 0, 0, 0, 1]' : 0.255596}
{'[3, 2, 4, 0, 1, 0, 0, 1, 2, 0, 2, 4, 1, 1, 0, 0, 0, 1]' : 0.330182}
{'[3, 2, 4, 0, 1, 0, 0, 1, 2, 0, 2, 4, 1, 1, 0, 0, 0, 1]' : 0.258904}
{'[3, 2, 4, 0, 1, 0, 0, 1, 2, 0, 2, 4, 1, 1, 0, 0, 0, 1]' : 0.257513}
{'[3, 2, 4, 0, 1, 0, 0, 1, 2, 0, 2, 4, 1, 1, 0, 0, 0, 1]' : 0.256142}
{'[3, 2, 4, 0, 1, 0, 0, 1, 2, 0, 2, 4, 1, 1, 0, 0, 0, 1]' : 0.257982}

out:
 ["{'[3, 2, 4, 0, 1, 0, 0, 1, 2, 0, 2, 4, 1, 1, 0, 0, 0, 1]' : 0.262357}", "{'[3, 2, 4, 0, 1, 0, 0, 1, 2, 0, 2, 4, 1, 1, 0, 0, 0, 1]' : 0.25898}", "{'[3, 2, 4, 0, 1, 0, 0, 1, 2, 0, 2, 4, 1, 1, 0, 0, 0, 1]' : 0.25646}", "{'[3, 2, 4, 0, 1, 0, 0, 1, 2, 0, 2, 4, 1, 1, 0, 0, 0, 1]' : 0.261907}", "{'[3, 2, 4, 0, 1, 0, 0, 1, 2, 0, 2, 4, 1, 1, 0, 0, 0, 1]' : 0.259499}", "{'[3, 2, 4, 0, 1, 0, 0, 1, 2, 0, 2, 4, 1, 1, 0, 0, 0, 1]' : 0.258644}", "{'[3, 2, 4, 0, 1, 0, 0, 1, 2, 0, 2, 4, 1, 1, 0, 0, 0, 1]' : 0.256279}", "{'[3, 2, 4, 0, 1, 0, 0, 1, 2, 0, 2, 4, 1, 1, 0, 0, 0, 1]' : 0.258801}", "{'[3, 2, 4, 0, 1, 0, 0, 1, 2, 0, 2, 4, 1, 1, 0, 0, 0, 1]' : 0.256934}", "{'[3, 2, 4, 0, 1, 0, 0, 1, 2, 0, 2, 4, 1, 1, 0, 0, 0, 1]' : 0.256402}", "{'[3, 2, 4, 0, 1, 0, 0, 1, 2, 0, 2, 4, 1, 1, 0, 0, 0, 1]' : 0.256071}", "{'[3, 2, 4, 0, 1, 0, 0, 1, 2, 0, 2, 4, 1, 1, 0, 0, 0, 1]' : 0.257372}", "{'[3, 2, 4, 0, 1, 0, 0, 1, 2, 0, 2, 4, 1, 1, 0, 0, 0, 1]' : 0.256716}", "{'[3, 2, 4, 0, 1, 0, 0, 1, 2, 0, 2, 4, 1, 1, 0, 0, 0, 1]' : 0.255922}", "{'[3, 2, 4, 0, 1, 0, 0, 1, 2, 0, 2, 4, 1, 1, 0, 0, 0, 1]' : 0.257042}", "{'[3, 2, 4, 0, 1, 0, 0, 1, 2, 0, 2, 4, 1, 1, 0, 0, 0, 1]' : 0.257312}", "{'[3, 2, 4, 0, 1, 0, 0, 1, 2, 0, 2, 4, 1, 1, 0, 0, 0, 1]' : 0.256619}", "{'[3, 2, 4, 0, 1, 0, 0, 1, 2, 0, 2, 4, 1, 1, 0, 0, 0, 1]' : 0.256475}", "{'[3, 2, 4, 0, 1, 0, 0, 1, 2, 0, 2, 4, 1, 1, 0, 0, 0, 1]' : 0.256869}", "{'[3, 2, 4, 0, 1, 0, 0, 1, 2, 0, 2, 4, 1, 1, 0, 0, 0, 1]' : 0.256766}", "{'[3, 2, 4, 0, 1, 0, 0, 1, 2, 0, 2, 4, 1, 1, 0, 0, 0, 1]' : 0.256007}", "{'[3, 2, 4, 0, 1, 0, 0, 1, 2, 0, 2, 4, 1, 1, 0, 0, 0, 1]' : 0.257686}", "{'[3, 2, 4, 0, 1, 0, 0, 1, 2, 0, 2, 4, 1, 1, 0, 0, 0, 1]' : 0.256331}", "{'[3, 2, 4, 0, 1, 0, 0, 1, 2, 0, 2, 4, 1, 1, 0, 0, 0, 1]' : 0.258224}", "{'[3, 2, 4, 0, 1, 0, 0, 1, 2, 0, 2, 4, 1, 1, 0, 0, 0, 1]' : 0.255596}", "{'[3, 2, 4, 0, 1, 0, 0, 1, 2, 0, 2, 4, 1, 1, 0, 0, 0, 1]' : 0.330182}", "{'[3, 2, 4, 0, 1, 0, 0, 1, 2, 0, 2, 4, 1, 1, 0, 0, 0, 1]' : 0.258904}", "{'[3, 2, 4, 0, 1, 0, 0, 1, 2, 0, 2, 4, 1, 1, 0, 0, 0, 1]' : 0.257513}", "{'[3, 2, 4, 0, 1, 0, 0, 1, 2, 0, 2, 4, 1, 1, 0, 0, 0, 1]' : 0.256142}", "{'[3, 2, 4, 0, 1, 0, 0, 1, 2, 0, 2, 4, 1, 1, 0, 0, 0, 1]' : 0.257982}"]
returning from 'run': {'[3, 2, 4, 0, 1, 0, 0, 1, 2, 0, 2, 4, 1, 1, 0, 0, 0, 1]': ([0.262357, 0.25898, 0.25646, 0.261907, 0.259499, 0.258644, 0.256279, 0.258801, 0.256934, 0.256402, 0.256071, 0.257372, 0.256716, 0.255922, 0.257042, 0.257312, 0.256619, 0.256475, 0.256869, 0.256766, 0.256007, 0.257686, 0.256331, 0.258224, 0.255596, 0.330182, 0.258904, 0.257513, 0.256142, 0.257982], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 2, 4, 0, 1, 0, 0, 1, 2, 0, 2, 4, 1, 1, 0, 0, 0, 1]': ([0.262357, 0.25898, 0.25646, 0.261907, 0.259499, 0.258644, 0.256279, 0.258801, 0.256934, 0.256402, 0.256071, 0.257372, 0.256716, 0.255922, 0.257042, 0.257312, 0.256619, 0.256475, 0.256869, 0.256766, 0.256007, 0.257686, 0.256331, 0.258224, 0.255596, 0.330182, 0.258904, 0.257513, 0.256142, 0.257982], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Design Best Point:
    T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
606    1    2    0    3    2    2       0       1   29   9   0   0    1    0
    RT_K SCR VEC1 VEC2 cost_mean
606    0   0    0    1 0.2059157

Slowdown (Design Best): 0.31229849957016115
Slowdown (Predicted Best): 0.3942230455851712
Budget: 39/180
Updating global best slowdown: 0.25993313333333334
Step 1
Full Model:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + U1_I + U_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Fixed Factors: {'U_K': 4, 'U_J': 2, 'RT_I': 1, 'ACOPY_y': 1}
Computing D-Optimal Design
Updating Constraints
Parameter Range Values: {'ACOPY_x': [False, True], 'ACOPY_y': [False, True], 'RT_K': [1, 8, 32], 'T1_I': [1, 16, 32, 64, 128, 256, 512], 'T1_J': [1, 16, 32, 64, 128, 256, 512], 'T1_K': [1, 16, 32, 64, 128, 256, 512], 'U_K': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_J': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U1_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'T2_K': [1, 64, 128, 256, 512, 1024, 2048], 'T2_J': [1, 64, 128, 256, 512, 1024, 2048], 'T2_I': [1, 64, 128, 256, 512, 1024, 2048], 'VEC2': [False, True], 'VEC1': [False, True], 'RT_I': [1, 8, 32], 'SCR': [False, True], 'RT_J': [1, 8, 32]}
Variable Ranges: {'ACOPY_x': [False, True], 'ACOPY_y': [False, True], 'RT_K': [1, 8, 32], 'T1_I': [1, 16, 32, 64, 128, 256, 512], 'T1_J': [1, 16, 32, 64, 128, 256, 512], 'T1_K': [1, 16, 32, 64, 128, 256, 512], 'U_K': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_J': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U1_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'T2_K': [1, 64, 128, 256, 512, 1024, 2048], 'T2_J': [1, 64, 128, 256, 512, 1024, 2048], 'T2_I': [1, 64, 128, 256, 512, 1024, 2048], 'VEC2': [False, True], 'VEC1': [False, True], 'RT_I': [1, 8, 32], 'SCR': [False, True], 'RT_J': [1, 8, 32]}
Current Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'U1_I', 'U_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Constraint Text: True and (((T2_I ==1 )or (T2_I %T1_I ==0 ))) and (((T2_J ==1 )or (T2_J %T1_J ==0 ))) and (((T2_K ==1 )or (T2_K %T1_K ==0 ))) and ((RT_I *RT_J +RT_I *RT_K +RT_J *RT_K <=150 )) and (((U_I ==1 )or (U_J ==1 )or (U_K ==1 )))
Updated Constraint: True and (((variable_ranges["T2_I"][int(x[3])] ==1 )or (variable_ranges["T2_I"][int(x[3])] %variable_ranges["T1_I"][int(x[0])] ==0 ))) and (((variable_ranges["T2_J"][int(x[4])] ==1 )or (variable_ranges["T2_J"][int(x[4])] %variable_ranges["T1_J"][int(x[1])] ==0 ))) and (((variable_ranges["T2_K"][int(x[5])] ==1 )or (variable_ranges["T2_K"][int(x[5])] %variable_ranges["T1_K"][int(x[2])] ==0 ))) and ((8 *variable_ranges["RT_J"][int(x[9])] +8 *variable_ranges["RT_K"][int(x[10])] +variable_ranges["RT_J"][int(x[9])] *variable_ranges["RT_K"][int(x[10])] <=150 )) and (((variable_ranges["U_I"][int(x[8])] ==1 )or (3 ==1 )or (5 ==1 )))
Computing D-Optimal Design with 36 experiments
Design Formula:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + U1_I + U_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Generating valid search space of size 1440 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Valid coordinates: 288
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Valid coordinates: 576
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Valid coordinates: 864
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Valid coordinates: 1152
Tested coordinates: 150000
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Valid coordinates: 1440
Valid/Tested configurations: 1440/182441
Generated Search Space:
NULL
Starting "optFederov" run
Using Search Space:
NULL
Data Dimensions: [1] 1440   14

Data Column Classes: ['integer', 'integer', 'integer', 'integer', 'integer', 'integer', 'integer', 'integer', 'integer', 'integer', 'integer', 'integer', 'integer', 'integer']
Looking at Data: 
[1] 0

