
====== START ORIO ======

----- begin reading the source file: atax2.src1.c -----
----- finished reading the source file -----

----- begin parsing annotations -----
----- finished parsing annotations -----

----- begin optimizations -----
Search_Space         = 8.234e+13
Number_of_Parameters = 18
Numeric_Parameters   = 13
Binary_Parameters    = 05
['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
[[1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [False, True], [False, True], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 8, 32], [1, 8, 32], [1, 8, 32], [False, True], [False, True], [False, True]]

----- begin empirical tuning for problem size -----
 N = 10000
Parameters: {'ACOPY_x': [0, 2], 'ACOPY_y': [0, 2], 'RT_K': [0, 3], 'T1_I': [0, 7], 'T1_J': [0, 7], 'T1_K': [0, 7], 'U_K': [0, 30], 'U_J': [0, 30], 'U_I': [0, 30], 'U1_I': [0, 30], 'T2_K': [0, 7], 'T2_J': [0, 7], 'T2_I': [0, 7], 'VEC2': [0, 2], 'VEC1': [0, 2], 'RT_I': [0, 3], 'SCR': [0, 2], 'RT_J': [0, 3]}
Parameter Range Values: {'ACOPY_x': [False, True], 'ACOPY_y': [False, True], 'RT_K': [1, 8, 32], 'T1_I': [1, 16, 32, 64, 128, 256, 512], 'T1_J': [1, 16, 32, 64, 128, 256, 512], 'T1_K': [1, 16, 32, 64, 128, 256, 512], 'U_K': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_J': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U1_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'T2_K': [1, 64, 128, 256, 512, 1024, 2048], 'T2_J': [1, 64, 128, 256, 512, 1024, 2048], 'T2_I': [1, 64, 128, 256, 512, 1024, 2048], 'VEC2': [False, True], 'VEC1': [False, True], 'RT_I': [1, 8, 32], 'SCR': [False, True], 'RT_J': [1, 8, 32]}

----- begin random search -----
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Inverse Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Starting DOPT-anova
Step 0
Full Model:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Fixed Factors: {}
Computing D-Optimal Design
Updating Constraints
Parameter Range Values: {'ACOPY_x': [False, True], 'ACOPY_y': [False, True], 'RT_K': [1, 8, 32], 'T1_I': [1, 16, 32, 64, 128, 256, 512], 'T1_J': [1, 16, 32, 64, 128, 256, 512], 'T1_K': [1, 16, 32, 64, 128, 256, 512], 'U_K': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_J': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U1_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'T2_K': [1, 64, 128, 256, 512, 1024, 2048], 'T2_J': [1, 64, 128, 256, 512, 1024, 2048], 'T2_I': [1, 64, 128, 256, 512, 1024, 2048], 'VEC2': [False, True], 'VEC1': [False, True], 'RT_I': [1, 8, 32], 'SCR': [False, True], 'RT_J': [1, 8, 32]}
Variable Ranges: {'ACOPY_x': [False, True], 'ACOPY_y': [False, True], 'RT_K': [1, 8, 32], 'T1_I': [1, 16, 32, 64, 128, 256, 512], 'T1_J': [1, 16, 32, 64, 128, 256, 512], 'T1_K': [1, 16, 32, 64, 128, 256, 512], 'U_K': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_J': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U1_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'T2_K': [1, 64, 128, 256, 512, 1024, 2048], 'T2_J': [1, 64, 128, 256, 512, 1024, 2048], 'T2_I': [1, 64, 128, 256, 512, 1024, 2048], 'VEC2': [False, True], 'VEC1': [False, True], 'RT_I': [1, 8, 32], 'SCR': [False, True], 'RT_J': [1, 8, 32]}
Current Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Constraint Text: True and (((T2_I ==1 )or (T2_I %T1_I ==0 ))) and (((T2_J ==1 )or (T2_J %T1_J ==0 ))) and (((T2_K ==1 )or (T2_K %T1_K ==0 ))) and ((RT_I *RT_J +RT_I *RT_K +RT_J *RT_K <=150 )) and (((U_I ==1 )or (U_J ==1 )or (U_K ==1 )))
Updated Constraint: True and (((variable_ranges["T2_I"][int(x[3])] ==1 )or (variable_ranges["T2_I"][int(x[3])] %variable_ranges["T1_I"][int(x[0])] ==0 ))) and (((variable_ranges["T2_J"][int(x[4])] ==1 )or (variable_ranges["T2_J"][int(x[4])] %variable_ranges["T1_J"][int(x[1])] ==0 ))) and (((variable_ranges["T2_K"][int(x[5])] ==1 )or (variable_ranges["T2_K"][int(x[5])] %variable_ranges["T1_K"][int(x[2])] ==0 ))) and ((variable_ranges["RT_I"][int(x[12])] *variable_ranges["RT_J"][int(x[13])] +variable_ranges["RT_I"][int(x[12])] *variable_ranges["RT_K"][int(x[14])] +variable_ranges["RT_J"][int(x[13])] *variable_ranges["RT_K"][int(x[14])] <=150 )) and (((variable_ranges["U_I"][int(x[9])] ==1 )or (variable_ranges["U_J"][int(x[10])] ==1 )or (variable_ranges["U_K"][int(x[11])] ==1 )))
Computing D-Optimal Design with 46 experiments
Design Formula:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Generating valid search space of size 460 (does not spend evaluations)
Valid coordinates: 92
Valid coordinates: 184
Tested coordinates: 10000
Valid coordinates: 276
Valid coordinates: 368
Valid coordinates: 460
Valid/Tested configurations: 460/18193
Generated Search Space:
NULL
Starting "optFederov" run
Using Search Space:
NULL
Data Dimensions: [1] 460  18

Data Column Classes: ['integer', 'integer', 'integer', 'integer', 'integer', 'integer', 'integer', 'integer', 'integer', 'integer', 'integer', 'integer', 'integer', 'integer', 'integer', 'integer', 'integer', 'integer']
Looking at Data: 
[1] -8.19363e-08

$D
[1] 1.522986

$A
[1] 11.90248

$Ge
[1] 0.484

$Dea
[1] 0.344

$design
    T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
8      2    0    2    1    0    5       1       1   27   0  28  25    0    0
18     2    3    6    1    5    4       1       1   13  15   0  28    1    1
34     5    5    5    5    0    4       1       0    8   2   0   9    0    0
52     2    2    2    4    2    6       0       0   25   6  26   0    1    1
65     3    6    2    3    5    2       0       1   29  23  15   0    1    0
80     1    4    2    2    5    0       0       1   28  15   0   6    0    0
102    4    6    2    0    6    2       0       0   15  12   0   8    0    1
110    3    5    4    2    4    2       1       0   13   1   7   0    0    1
112    3    2    1    0    6    1       0       1   17  24   0  24    0    0
123    1    6    6    1    0    4       1       1   24   9   0   3    0    1
138    5    3    4    5    2    6       0       1   21   9   9   0    0    0
152    3    5    5    4    6    3       1       0   26  28  29   0    0    0
174    6    2    1    6    0    5       1       1    8  28  29   0    0    0
191    3    3    3    5    0    0       1       1   13  15   0   6    2    0
198    4    6    0    2    6    2       1       1   13   0  24   9    0    0
215    3    6    1    6    6    3       0       0   28   6   8   0    1    0
217    5    2    2    3    6    2       0       0   23  12   9   0    0    2
222    4    2    6    0    0    0       0       1   19  10  19   0    1    1
228    3    2    0    1    2    2       1       1   15   0   0   9    0    0
251    1    0    4    4    1    5       0       1   13   0  24  22    1    0
252    1    2    4    6    2    2       1       1   19  11   0   5    0    2
291    2    5    0    1    3    5       0       1   21   7  14   0    0    2
296    6    1    0    4    6    5       0       1   10   3  29   0    0    1
308    0    2    2    2    3    3       0       0    3  21   0  27    0    0
329    6    4    6    5    5    0       1       1    1   0  16   3    1    0
335    3    0    1    2    0    3       1       1   27   0  10  22    1    0
341    0    4    3    5    6    1       1       1   17  28   0   9    0    0
344    1    4    0    0    4    1       1       0    0   2  27   0    0    2
346    2    0    5    6    6    0       0       0   14  12   0  21    0    1
353    2    2    3    2    2    5       0       1    8   0  27   9    2    0
355    0    1    4    1    6    5       1       0   28   0   1   1    0    0
356    3    1    4    5    0    2       0       0    6   5  20   0    0    0
362    1    0    0    4    6    0       1       1    8  25   6   0    1    1
372    2    3    3    5    0    0       0       1    3   9   0  25    2    0
385    5    6    0    6    0    6       1       1    3  27   0   8    0    2
398    1    6    2    5    5    5       1       1   27   0  29  26    2    0
399    3    6    1    3    0    1       1       1   19   0   9  19    0    1
415    5    2    2    3    6    2       1       0    2   9  14   0    1    0
416    4    2    1    5    6    5       0       0   23   9  12   0    2    0
421    2    3    4    4    3    2       1       1    5  14   9   0    1    0
424    4    1    2    0    4    6       0       0   19  26   1   0    2    0
430    1    4    0    2    2    1       0       0    1   1   0  21    1    0
432    0    2    1    4    4    2       1       1    8   0  29  23    1    1
440    0    6    6    2    4    5       0       1   10  27  27   0    0    1
447    2    4    5    5    4    6       0       1    0   3   0  28    0    0
450    5    1    4    0    5    2       0       0   25  26   0   9    0    2
    RT_K SCR VEC1 VEC2
8      1   0    0    0
18     0   1    0    0
34     0   0    0    1
52     0   0    0    0
65     0   0    1    1
80     2   1    1    1
102    0   1    1    0
110    1   1    1    1
112    0   0    1    0
123    1   1    1    0
138    1   0    0    1
152    2   0    1    1
174    1   1    0    0
191    0   0    0    0
198    2   1    0    0
215    1   1    1    0
217    0   0    0    0
222    0   1    0    1
228    2   1    1    0
251    0   1    1    0
252    0   0    0    1
291    0   0    0    0
296    1   1    1    1
308    2   0    1    0
329    1   0    0    0
335    0   0    1    1
341    1   1    1    0
344    0   1    1    1
346    0   1    1    1
353    0   1    1    0
355    0   1    0    0
356    0   0    0    0
362    0   0    1    0
372    0   1    0    0
385    0   1    1    0
398    0   0    1    0
399    1   1    1    1
415    1   0    0    0
416    0   0    1    1
421    0   1    1    1
424    0   1    1    1
430    1   0    0    1
432    0   1    0    1
440    0   0    1    0
447    2   0    0    0
450    0   1    1    0

$rows
 [1]   8  18  34  52  65  80 102 110 112 123 138 152 174 191 198 215 217 222 228
[20] 251 252 291 296 308 329 335 341 344 346 353 355 356 362 372 385 398 399 415
[39] 416 421 424 430 432 440 447 450


    T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
8      2    0    2    1    0    5       1       1   27   0  28  25    0    0
18     2    3    6    1    5    4       1       1   13  15   0  28    1    1
34     5    5    5    5    0    4       1       0    8   2   0   9    0    0
52     2    2    2    4    2    6       0       0   25   6  26   0    1    1
65     3    6    2    3    5    2       0       1   29  23  15   0    1    0
80     1    4    2    2    5    0       0       1   28  15   0   6    0    0
102    4    6    2    0    6    2       0       0   15  12   0   8    0    1
110    3    5    4    2    4    2       1       0   13   1   7   0    0    1
112    3    2    1    0    6    1       0       1   17  24   0  24    0    0
123    1    6    6    1    0    4       1       1   24   9   0   3    0    1
138    5    3    4    5    2    6       0       1   21   9   9   0    0    0
152    3    5    5    4    6    3       1       0   26  28  29   0    0    0
174    6    2    1    6    0    5       1       1    8  28  29   0    0    0
191    3    3    3    5    0    0       1       1   13  15   0   6    2    0
198    4    6    0    2    6    2       1       1   13   0  24   9    0    0
215    3    6    1    6    6    3       0       0   28   6   8   0    1    0
217    5    2    2    3    6    2       0       0   23  12   9   0    0    2
222    4    2    6    0    0    0       0       1   19  10  19   0    1    1
228    3    2    0    1    2    2       1       1   15   0   0   9    0    0
251    1    0    4    4    1    5       0       1   13   0  24  22    1    0
252    1    2    4    6    2    2       1       1   19  11   0   5    0    2
291    2    5    0    1    3    5       0       1   21   7  14   0    0    2
296    6    1    0    4    6    5       0       1   10   3  29   0    0    1
308    0    2    2    2    3    3       0       0    3  21   0  27    0    0
329    6    4    6    5    5    0       1       1    1   0  16   3    1    0
335    3    0    1    2    0    3       1       1   27   0  10  22    1    0
341    0    4    3    5    6    1       1       1   17  28   0   9    0    0
344    1    4    0    0    4    1       1       0    0   2  27   0    0    2
346    2    0    5    6    6    0       0       0   14  12   0  21    0    1
353    2    2    3    2    2    5       0       1    8   0  27   9    2    0
355    0    1    4    1    6    5       1       0   28   0   1   1    0    0
356    3    1    4    5    0    2       0       0    6   5  20   0    0    0
362    1    0    0    4    6    0       1       1    8  25   6   0    1    1
372    2    3    3    5    0    0       0       1    3   9   0  25    2    0
385    5    6    0    6    0    6       1       1    3  27   0   8    0    2
398    1    6    2    5    5    5       1       1   27   0  29  26    2    0
399    3    6    1    3    0    1       1       1   19   0   9  19    0    1
415    5    2    2    3    6    2       1       0    2   9  14   0    1    0
416    4    2    1    5    6    5       0       0   23   9  12   0    2    0
421    2    3    4    4    3    2       1       1    5  14   9   0    1    0
424    4    1    2    0    4    6       0       0   19  26   1   0    2    0
430    1    4    0    2    2    1       0       0    1   1   0  21    1    0
432    0    2    1    4    4    2       1       1    8   0  29  23    1    1
440    0    6    6    2    4    5       0       1   10  27  27   0    0    1
447    2    4    5    5    4    6       0       1    0   3   0  28    0    0
450    5    1    4    0    5    2       0       0   25  26   0   9    0    2
    RT_K SCR VEC1 VEC2
8      1   0    0    0
18     0   1    0    0
34     0   0    0    1
52     0   0    0    0
65     0   0    1    1
80     2   1    1    1
102    0   1    1    0
110    1   1    1    1
112    0   0    1    0
123    1   1    1    0
138    1   0    0    1
152    2   0    1    1
174    1   1    0    0
191    0   0    0    0
198    2   1    0    0
215    1   1    1    0
217    0   0    0    0
222    0   1    0    1
228    2   1    1    0
251    0   1    1    0
252    0   0    0    1
291    0   0    0    0
296    1   1    1    1
308    2   0    1    0
329    1   0    0    0
335    0   0    1    1
341    1   1    1    0
344    0   1    1    1
346    0   1    1    1
353    0   1    1    0
355    0   1    0    0
356    0   0    0    0
362    0   0    1    0
372    0   1    0    0
385    0   1    1    0
398    0   0    1    0
399    1   1    1    1
415    1   0    0    0
416    0   0    1    1
421    0   1    1    1
424    0   1    1    1
430    1   0    0    1
432    0   1    0    1
440    0   0    1    0
447    2   0    0    0
450    0   1    1    0

D-Efficiency Approximation: [1] 0.344

Measuring design of size 46
Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Complete design, with measurements:
    T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
8      2    0    2    1    0    5       1       1   27   0  28  25    0    0
18     2    3    6    1    5    4       1       1   13  15   0  28    1    1
34     5    5    5    5    0    4       1       0    8   2   0   9    0    0
52     2    2    2    4    2    6       0       0   25   6  26   0    1    1
65     3    6    2    3    5    2       0       1   29  23  15   0    1    0
102    4    6    2    0    6    2       0       0   15  12   0   8    0    1
110    3    5    4    2    4    2       1       0   13   1   7   0    0    1
112    3    2    1    0    6    1       0       1   17  24   0  24    0    0
123    1    6    6    1    0    4       1       1   24   9   0   3    0    1
138    5    3    4    5    2    6       0       1   21   9   9   0    0    0
152    3    5    5    4    6    3       1       0   26  28  29   0    0    0
174    6    2    1    6    0    5       1       1    8  28  29   0    0    0
191    3    3    3    5    0    0       1       1   13  15   0   6    2    0
215    3    6    1    6    6    3       0       0   28   6   8   0    1    0
217    5    2    2    3    6    2       0       0   23  12   9   0    0    2
222    4    2    6    0    0    0       0       1   19  10  19   0    1    1
251    1    0    4    4    1    5       0       1   13   0  24  22    1    0
291    2    5    0    1    3    5       0       1   21   7  14   0    0    2
296    6    1    0    4    6    5       0       1   10   3  29   0    0    1
308    0    2    2    2    3    3       0       0    3  21   0  27    0    0
329    6    4    6    5    5    0       1       1    1   0  16   3    1    0
335    3    0    1    2    0    3       1       1   27   0  10  22    1    0
341    0    4    3    5    6    1       1       1   17  28   0   9    0    0
346    2    0    5    6    6    0       0       0   14  12   0  21    0    1
353    2    2    3    2    2    5       0       1    8   0  27   9    2    0
355    0    1    4    1    6    5       1       0   28   0   1   1    0    0
356    3    1    4    5    0    2       0       0    6   5  20   0    0    0
362    1    0    0    4    6    0       1       1    8  25   6   0    1    1
372    2    3    3    5    0    0       0       1    3   9   0  25    2    0
398    1    6    2    5    5    5       1       1   27   0  29  26    2    0
399    3    6    1    3    0    1       1       1   19   0   9  19    0    1
415    5    2    2    3    6    2       1       0    2   9  14   0    1    0
416    4    2    1    5    6    5       0       0   23   9  12   0    2    0
421    2    3    4    4    3    2       1       1    5  14   9   0    1    0
424    4    1    2    0    4    6       0       0   19  26   1   0    2    0
430    1    4    0    2    2    1       0       0    1   1   0  21    1    0
432    0    2    1    4    4    2       1       1    8   0  29  23    1    1
440    0    6    6    2    4    5       0       1   10  27  27   0    0    1
450    5    1    4    0    5    2       0       0   25  26   0   9    0    2
    RT_K SCR VEC1 VEC2 cost_mean
8      1   0    0    0 0.8751998
18     0   1    0    0 0.2703545
34     0   0    0    1 0.4044643
52     0   0    0    0 0.2714202
65     0   0    1    1 0.2683854
102    0   1    1    0 0.4463528
110    1   1    1    1 0.3975898
112    0   0    1    0 0.7503794
123    1   1    1    0 0.4854792
138    1   0    0    1 0.3710747
152    2   0    1    1 0.8293980
174    1   1    0    0 0.7945604
191    0   0    0    0 0.4725594
215    1   1    1    0 0.3208275
217    0   0    0    0 0.4911358
222    0   1    0    1 0.2501760
251    0   1    1    0 0.4190847
291    0   0    0    0 0.4217889
296    1   1    1    1 0.3501521
308    2   0    1    0 0.5855932
329    1   0    0    0 0.3443653
335    0   0    1    1 0.3429558
341    1   1    1    0 0.4427473
346    0   1    1    1 0.2961579
353    0   1    1    0 0.4016510
355    0   1    0    0 0.6937761
356    0   0    0    0 0.2618920
362    0   0    1    0 0.2577156
372    0   1    0    0 0.3948153
398    0   0    1    0 0.9288465
399    1   1    1    1 1.0844080
415    1   0    0    0 0.3664678
416    0   0    1    1 0.5872257
421    0   1    1    1 0.2327335
424    0   1    1    1 0.4662241
430    1   0    0    1 0.2744127
432    0   1    0    1 0.2934752
440    0   0    1    0 0.4342395
450    0   1    1    0 0.3219709

Heteroscedasticity Test p-value: 0.399141281704
Regression Step:                Df  Sum Sq Mean Sq F value Pr(>F)  
T1_I             1 0.00229 0.00229   0.102 0.7589  
T1_J             1 0.05247 0.05247   2.337 0.1701  
T1_K             1 0.06846 0.06846   3.050 0.1243  
T2_I             1 0.00603 0.00603   0.269 0.6202  
T2_J             1 0.01967 0.01967   0.876 0.3804  
T2_K             1 0.06727 0.06727   2.997 0.1270  
ACOPY_x          1 0.20694 0.20694   9.218 0.0189 *
ACOPY_y          1 0.00091 0.00091   0.040 0.8465  
U1_I             1 0.08810 0.08810   3.924 0.0881 .
U_I              1 0.02125 0.02125   0.946 0.3630  
U_J              1 0.02985 0.02985   1.330 0.2867  
U_K              1 0.23784 0.23784  10.595 0.0140 *
RT_I             1 0.03236 0.03236   1.441 0.2690  
RT_J             1 0.06145 0.06145   2.737 0.1420  
RT_K             1 0.00852 0.00852   0.380 0.5573  
SCR              1 0.00181 0.00181   0.080 0.7849  
VEC1             1 0.00201 0.00201   0.090 0.7734  
VEC2             1 0.04603 0.04603   2.051 0.1952  
I(1/(1 + T1_I))  1 0.00669 0.00669   0.298 0.6021  
I(1/(1 + T1_J))  1 0.03003 0.03003   1.338 0.2854  
I(1/(1 + T1_K))  1 0.00002 0.00002   0.001 0.9797  
I(1/(1 + T2_I))  1 0.01158 0.01158   0.516 0.4959  
I(1/(1 + T2_J))  1 0.07425 0.07425   3.308 0.1118  
I(1/(1 + T2_K))  1 0.22823 0.22823  10.167 0.0153 *
I(1/(1 + U1_I))  1 0.00639 0.00639   0.285 0.6102  
I(1/(1 + U_I))   1 0.16348 0.16348   7.282 0.0307 *
I(1/(1 + U_J))   1 0.01954 0.01954   0.871 0.3819  
I(1/(1 + U_K))   1 0.00045 0.00045   0.020 0.8909  
I(1/(1 + RT_I))  1 0.02786 0.02786   1.241 0.3020  
I(1/(1 + RT_J))  1 0.00841 0.00841   0.375 0.5599  
I(1/(1 + RT_K))  1 0.00208 0.00208   0.093 0.7698  
Residuals        7 0.15714 0.02245                 
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Predicting Best
Generating valid search space of size 920 (does not spend evaluations)
Valid coordinates: 184
Tested coordinates: 10000
Valid coordinates: 368
Tested coordinates: 20000
Valid coordinates: 552
Tested coordinates: 30000
Valid coordinates: 736
Valid coordinates: 920
Valid/Tested configurations: 920/37862
Generated Search Space:
NULL
Identical predictions (tol = 1e-5): 1
Getting Best from Design
Response: ['cost_mean']
Design Names:  [1] "T1_I"      "T1_J"      "T1_K"      "T2_I"      "T2_J"      "T2_K"     
 [7] "ACOPY_x"   "ACOPY_y"   "U1_I"      "U_I"       "U_J"       "U_K"      
[13] "RT_I"      "RT_J"      "RT_K"      "SCR"       "VEC1"      "VEC2"     
[19] "cost_mean"

Design Response:     cost_mean
8   0.8751998
18  0.2703545
34  0.4044643
52  0.2714202
65  0.2683854
102 0.4463528
110 0.3975898
112 0.7503794
123 0.4854792
138 0.3710747
152 0.8293980
174 0.7945604
191 0.4725594
215 0.3208275
217 0.4911358
222 0.2501760
251 0.4190847
291 0.4217889
296 0.3501521
308 0.5855932
329 0.3443653
335 0.3429558
341 0.4427473
346 0.2961579
353 0.4016510
355 0.6937761
356 0.2618920
362 0.2577156
372 0.3948153
398 0.9288465
399 1.0844080
415 0.3664678
416 0.5872257
421 0.2327335
424 0.4662241
430 0.2744127
432 0.2934752
440 0.4342395
450 0.3219709

Getting fixed variables
Fixed Variables: {'U_K': 12, 'ACOPY_x': 1, 'U1_I': 11}
Pruning Model
Best Predicted:     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
235    6    0    3    4    2    3       1       1   11   3   0  12    2    0
    RT_K SCR VEC1 VEC2
235    0   0    0    1

Best From Design:     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
421    2    3    4    4    3    2       1       1    5  14   9   0    1    0
    RT_K SCR VEC1 VEC2 cost_mean
421    0   1    1    1 0.2327335

Pruned Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_y', 'U_I', 'U_J', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Fixed Factors: {'U_K': 12, 'ACOPY_x': 1, 'U1_I': 11}
Length of requested configs: 1
Result was on Database, Returning Now
Starting Point (-O3):
0.6593555
Predicted Best Point:
[6, 0, 3, 4, 2, 3, 1, 1, 11, 3, 0, 12, 2, 0, 0, 0, 0, 1]
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
Code stats:
        Number of loops: 	48
        Max loop nest depth: 	5
        Additions: 		4810
        Multiplications: 	1110
        Divisions: 		0
        Logical: 		0
        Reads: 			7141
        Writes: 		709
        Comparisons:		48
        Gotos: 			0
        
 building the original code:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -DORIGINAL -o __orio_perftest_original.exe __orio_perftest1.c timer_cpu.o -lm
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest1.exe __orio_perftest1.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest1.exe  
Program Test Output: 
{'[6, 0, 3, 4, 2, 3, 1, 1, 11, 3, 0, 12, 2, 0, 0, 0, 0, 1]' : 0.33562}
{'[6, 0, 3, 4, 2, 3, 1, 1, 11, 3, 0, 12, 2, 0, 0, 0, 0, 1]' : 0.334432}
{'[6, 0, 3, 4, 2, 3, 1, 1, 11, 3, 0, 12, 2, 0, 0, 0, 0, 1]' : 0.337093}
{'[6, 0, 3, 4, 2, 3, 1, 1, 11, 3, 0, 12, 2, 0, 0, 0, 0, 1]' : 0.335093}
{'[6, 0, 3, 4, 2, 3, 1, 1, 11, 3, 0, 12, 2, 0, 0, 0, 0, 1]' : 0.333387}
{'[6, 0, 3, 4, 2, 3, 1, 1, 11, 3, 0, 12, 2, 0, 0, 0, 0, 1]' : 0.337729}
{'[6, 0, 3, 4, 2, 3, 1, 1, 11, 3, 0, 12, 2, 0, 0, 0, 0, 1]' : 0.334229}
{'[6, 0, 3, 4, 2, 3, 1, 1, 11, 3, 0, 12, 2, 0, 0, 0, 0, 1]' : 0.336062}
{'[6, 0, 3, 4, 2, 3, 1, 1, 11, 3, 0, 12, 2, 0, 0, 0, 0, 1]' : 0.338401}
{'[6, 0, 3, 4, 2, 3, 1, 1, 11, 3, 0, 12, 2, 0, 0, 0, 0, 1]' : 0.332706}
{'[6, 0, 3, 4, 2, 3, 1, 1, 11, 3, 0, 12, 2, 0, 0, 0, 0, 1]' : 0.334902}
{'[6, 0, 3, 4, 2, 3, 1, 1, 11, 3, 0, 12, 2, 0, 0, 0, 0, 1]' : 0.335047}
{'[6, 0, 3, 4, 2, 3, 1, 1, 11, 3, 0, 12, 2, 0, 0, 0, 0, 1]' : 0.334738}
{'[6, 0, 3, 4, 2, 3, 1, 1, 11, 3, 0, 12, 2, 0, 0, 0, 0, 1]' : 0.336371}
{'[6, 0, 3, 4, 2, 3, 1, 1, 11, 3, 0, 12, 2, 0, 0, 0, 0, 1]' : 0.334859}
{'[6, 0, 3, 4, 2, 3, 1, 1, 11, 3, 0, 12, 2, 0, 0, 0, 0, 1]' : 0.334724}
{'[6, 0, 3, 4, 2, 3, 1, 1, 11, 3, 0, 12, 2, 0, 0, 0, 0, 1]' : 0.332558}
{'[6, 0, 3, 4, 2, 3, 1, 1, 11, 3, 0, 12, 2, 0, 0, 0, 0, 1]' : 0.336456}
{'[6, 0, 3, 4, 2, 3, 1, 1, 11, 3, 0, 12, 2, 0, 0, 0, 0, 1]' : 0.335215}
{'[6, 0, 3, 4, 2, 3, 1, 1, 11, 3, 0, 12, 2, 0, 0, 0, 0, 1]' : 0.334337}
{'[6, 0, 3, 4, 2, 3, 1, 1, 11, 3, 0, 12, 2, 0, 0, 0, 0, 1]' : 0.335813}
{'[6, 0, 3, 4, 2, 3, 1, 1, 11, 3, 0, 12, 2, 0, 0, 0, 0, 1]' : 0.333796}
{'[6, 0, 3, 4, 2, 3, 1, 1, 11, 3, 0, 12, 2, 0, 0, 0, 0, 1]' : 0.33862}
{'[6, 0, 3, 4, 2, 3, 1, 1, 11, 3, 0, 12, 2, 0, 0, 0, 0, 1]' : 0.337211}
{'[6, 0, 3, 4, 2, 3, 1, 1, 11, 3, 0, 12, 2, 0, 0, 0, 0, 1]' : 0.335922}
{'[6, 0, 3, 4, 2, 3, 1, 1, 11, 3, 0, 12, 2, 0, 0, 0, 0, 1]' : 0.33731}
{'[6, 0, 3, 4, 2, 3, 1, 1, 11, 3, 0, 12, 2, 0, 0, 0, 0, 1]' : 0.336928}
{'[6, 0, 3, 4, 2, 3, 1, 1, 11, 3, 0, 12, 2, 0, 0, 0, 0, 1]' : 0.335963}
{'[6, 0, 3, 4, 2, 3, 1, 1, 11, 3, 0, 12, 2, 0, 0, 0, 0, 1]' : 0.334245}
{'[6, 0, 3, 4, 2, 3, 1, 1, 11, 3, 0, 12, 2, 0, 0, 0, 0, 1]' : 0.336937}

out:
 ["{'[6, 0, 3, 4, 2, 3, 1, 1, 11, 3, 0, 12, 2, 0, 0, 0, 0, 1]' : 0.33562}", "{'[6, 0, 3, 4, 2, 3, 1, 1, 11, 3, 0, 12, 2, 0, 0, 0, 0, 1]' : 0.334432}", "{'[6, 0, 3, 4, 2, 3, 1, 1, 11, 3, 0, 12, 2, 0, 0, 0, 0, 1]' : 0.337093}", "{'[6, 0, 3, 4, 2, 3, 1, 1, 11, 3, 0, 12, 2, 0, 0, 0, 0, 1]' : 0.335093}", "{'[6, 0, 3, 4, 2, 3, 1, 1, 11, 3, 0, 12, 2, 0, 0, 0, 0, 1]' : 0.333387}", "{'[6, 0, 3, 4, 2, 3, 1, 1, 11, 3, 0, 12, 2, 0, 0, 0, 0, 1]' : 0.337729}", "{'[6, 0, 3, 4, 2, 3, 1, 1, 11, 3, 0, 12, 2, 0, 0, 0, 0, 1]' : 0.334229}", "{'[6, 0, 3, 4, 2, 3, 1, 1, 11, 3, 0, 12, 2, 0, 0, 0, 0, 1]' : 0.336062}", "{'[6, 0, 3, 4, 2, 3, 1, 1, 11, 3, 0, 12, 2, 0, 0, 0, 0, 1]' : 0.338401}", "{'[6, 0, 3, 4, 2, 3, 1, 1, 11, 3, 0, 12, 2, 0, 0, 0, 0, 1]' : 0.332706}", "{'[6, 0, 3, 4, 2, 3, 1, 1, 11, 3, 0, 12, 2, 0, 0, 0, 0, 1]' : 0.334902}", "{'[6, 0, 3, 4, 2, 3, 1, 1, 11, 3, 0, 12, 2, 0, 0, 0, 0, 1]' : 0.335047}", "{'[6, 0, 3, 4, 2, 3, 1, 1, 11, 3, 0, 12, 2, 0, 0, 0, 0, 1]' : 0.334738}", "{'[6, 0, 3, 4, 2, 3, 1, 1, 11, 3, 0, 12, 2, 0, 0, 0, 0, 1]' : 0.336371}", "{'[6, 0, 3, 4, 2, 3, 1, 1, 11, 3, 0, 12, 2, 0, 0, 0, 0, 1]' : 0.334859}", "{'[6, 0, 3, 4, 2, 3, 1, 1, 11, 3, 0, 12, 2, 0, 0, 0, 0, 1]' : 0.334724}", "{'[6, 0, 3, 4, 2, 3, 1, 1, 11, 3, 0, 12, 2, 0, 0, 0, 0, 1]' : 0.332558}", "{'[6, 0, 3, 4, 2, 3, 1, 1, 11, 3, 0, 12, 2, 0, 0, 0, 0, 1]' : 0.336456}", "{'[6, 0, 3, 4, 2, 3, 1, 1, 11, 3, 0, 12, 2, 0, 0, 0, 0, 1]' : 0.335215}", "{'[6, 0, 3, 4, 2, 3, 1, 1, 11, 3, 0, 12, 2, 0, 0, 0, 0, 1]' : 0.334337}", "{'[6, 0, 3, 4, 2, 3, 1, 1, 11, 3, 0, 12, 2, 0, 0, 0, 0, 1]' : 0.335813}", "{'[6, 0, 3, 4, 2, 3, 1, 1, 11, 3, 0, 12, 2, 0, 0, 0, 0, 1]' : 0.333796}", "{'[6, 0, 3, 4, 2, 3, 1, 1, 11, 3, 0, 12, 2, 0, 0, 0, 0, 1]' : 0.33862}", "{'[6, 0, 3, 4, 2, 3, 1, 1, 11, 3, 0, 12, 2, 0, 0, 0, 0, 1]' : 0.337211}", "{'[6, 0, 3, 4, 2, 3, 1, 1, 11, 3, 0, 12, 2, 0, 0, 0, 0, 1]' : 0.335922}", "{'[6, 0, 3, 4, 2, 3, 1, 1, 11, 3, 0, 12, 2, 0, 0, 0, 0, 1]' : 0.33731}", "{'[6, 0, 3, 4, 2, 3, 1, 1, 11, 3, 0, 12, 2, 0, 0, 0, 0, 1]' : 0.336928}", "{'[6, 0, 3, 4, 2, 3, 1, 1, 11, 3, 0, 12, 2, 0, 0, 0, 0, 1]' : 0.335963}", "{'[6, 0, 3, 4, 2, 3, 1, 1, 11, 3, 0, 12, 2, 0, 0, 0, 0, 1]' : 0.334245}", "{'[6, 0, 3, 4, 2, 3, 1, 1, 11, 3, 0, 12, 2, 0, 0, 0, 0, 1]' : 0.336937}"]
returning from 'run': {'[6, 0, 3, 4, 2, 3, 1, 1, 11, 3, 0, 12, 2, 0, 0, 0, 0, 1]': ([0.33562, 0.334432, 0.337093, 0.335093, 0.333387, 0.337729, 0.334229, 0.336062, 0.338401, 0.332706, 0.334902, 0.335047, 0.334738, 0.336371, 0.334859, 0.334724, 0.332558, 0.336456, 0.335215, 0.334337, 0.335813, 0.333796, 0.33862, 0.337211, 0.335922, 0.33731, 0.336928, 0.335963, 0.334245, 0.336937], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 3, 4, 2, 3, 1, 1, 11, 3, 0, 12, 2, 0, 0, 0, 0, 1]': ([0.33562, 0.334432, 0.337093, 0.335093, 0.333387, 0.337729, 0.334229, 0.336062, 0.338401, 0.332706, 0.334902, 0.335047, 0.334738, 0.336371, 0.334859, 0.334724, 0.332558, 0.336456, 0.335215, 0.334337, 0.335813, 0.333796, 0.33862, 0.337211, 0.335922, 0.33731, 0.336928, 0.335963, 0.334245, 0.336937], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Design Best Point:
    T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
421    2    3    4    4    3    2       1       1    5  14   9   0    1    0
    RT_K SCR VEC1 VEC2 cost_mean
421    0   1    1    1 0.2327335

Slowdown (Design Best): 0.35297119687331047
Slowdown (Predicted Best): 0.5089163584742981
Budget: 39/180
Step 1
Full Model:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_y + U_I + U_J + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Fixed Factors: {'U_K': 12, 'ACOPY_x': 1, 'U1_I': 11}
Computing D-Optimal Design
Updating Constraints
Parameter Range Values: {'ACOPY_x': [False, True], 'ACOPY_y': [False, True], 'RT_K': [1, 8, 32], 'T1_I': [1, 16, 32, 64, 128, 256, 512], 'T1_J': [1, 16, 32, 64, 128, 256, 512], 'T1_K': [1, 16, 32, 64, 128, 256, 512], 'U_K': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_J': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U1_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'T2_K': [1, 64, 128, 256, 512, 1024, 2048], 'T2_J': [1, 64, 128, 256, 512, 1024, 2048], 'T2_I': [1, 64, 128, 256, 512, 1024, 2048], 'VEC2': [False, True], 'VEC1': [False, True], 'RT_I': [1, 8, 32], 'SCR': [False, True], 'RT_J': [1, 8, 32]}
Variable Ranges: {'ACOPY_x': [False, True], 'ACOPY_y': [False, True], 'RT_K': [1, 8, 32], 'T1_I': [1, 16, 32, 64, 128, 256, 512], 'T1_J': [1, 16, 32, 64, 128, 256, 512], 'T1_K': [1, 16, 32, 64, 128, 256, 512], 'U_K': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_J': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U1_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'T2_K': [1, 64, 128, 256, 512, 1024, 2048], 'T2_J': [1, 64, 128, 256, 512, 1024, 2048], 'T2_I': [1, 64, 128, 256, 512, 1024, 2048], 'VEC2': [False, True], 'VEC1': [False, True], 'RT_I': [1, 8, 32], 'SCR': [False, True], 'RT_J': [1, 8, 32]}
Current Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_y', 'U_I', 'U_J', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Constraint Text: True and (((T2_I ==1 )or (T2_I %T1_I ==0 ))) and (((T2_J ==1 )or (T2_J %T1_J ==0 ))) and (((T2_K ==1 )or (T2_K %T1_K ==0 ))) and ((RT_I *RT_J +RT_I *RT_K +RT_J *RT_K <=150 )) and (((U_I ==1 )or (U_J ==1 )or (U_K ==1 )))
Updated Constraint: True and (((variable_ranges["T2_I"][int(x[3])] ==1 )or (variable_ranges["T2_I"][int(x[3])] %variable_ranges["T1_I"][int(x[0])] ==0 ))) and (((variable_ranges["T2_J"][int(x[4])] ==1 )or (variable_ranges["T2_J"][int(x[4])] %variable_ranges["T1_J"][int(x[1])] ==0 ))) and (((variable_ranges["T2_K"][int(x[5])] ==1 )or (variable_ranges["T2_K"][int(x[5])] %variable_ranges["T1_K"][int(x[2])] ==0 ))) and ((variable_ranges["RT_I"][int(x[9])] *variable_ranges["RT_J"][int(x[10])] +variable_ranges["RT_I"][int(x[9])] *variable_ranges["RT_K"][int(x[11])] +variable_ranges["RT_J"][int(x[10])] *variable_ranges["RT_K"][int(x[11])] <=150 )) and (((variable_ranges["U_I"][int(x[7])] ==1 )or (variable_ranges["U_J"][int(x[8])] ==1 )or (13 ==1 )))
Computing D-Optimal Design with 39 experiments
Design Formula:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_y + U_I + U_J + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Generating valid search space of size 390 (does not spend evaluations)
Valid coordinates: 78
Valid coordinates: 156
Tested coordinates: 10000
Valid coordinates: 234
Valid coordinates: 312
Tested coordinates: 20000
Valid coordinates: 390
Valid/Tested configurations: 390/23181
Generated Search Space:
NULL
Starting "optFederov" run
Using Search Space:
NULL
Data Dimensions: [1] 390  15

Data Column Classes: ['integer', 'integer', 'integer', 'integer', 'integer', 'integer', 'integer', 'integer', 'integer', 'integer', 'integer', 'integer', 'integer', 'integer', 'integer']
Looking at Data: 
[1] 1.443478e+13

$D
[1] 1.908724

$A
[1] 13.40345

$Ge
[1] 0.54

$Dea
[1] 0.427

$design
    T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_y U_I U_J RT_I RT_J RT_K SCR VEC1 VEC2
3      6    0    1    6    2    6       0   0  20    1    1    0   1    1    0
19     4    2    2    5    3    1       1   0   7    1    1    0   1    1    0
23     0    2    2    3    5    5       0  29   0    1    0    0   0    1    1
42     3    2    0    0    0    4       1   0   8    0    0    0   0    1    0
44     2    6    5    2    0    3       0   0   1    0    1    0   0    0    1
62     2    0    0    0    0    5       0  24   0    0    0    2   1    0    0
64     1    1    4    1    2    6       1   0   7    0    1    1   1    1    1
69     5    0    2    0    2    5       0   0   8    2    0    0   0    1    0
76     2    4    0    6    4    1       0   6   0    0    1    0   0    1    0
95     1    1    0    3    5    2       0   0   7    0    0    1   1    0    1
104    1    0    3    2    1    2       0   2   0    0    0    0   1    0    1
109    0    3    3    3    1    2       1  28   0    2    0    0   1    1    1
110    2    3    0    1    5    2       1   0  26    1    1    0   0    0    0
119    1    2    4    2    5    2       1   0   1    0    0    2   1    0    0
125    1    5    0    0    5    3       1   0  26    0    0    2   1    1    1
141    5    0    1    4    5    0       1   0  27    0    1    1   0    1    1
177    2    1    2    1    2    2       0   0   6    0    1    1   0    1    0
179    2    4    0    2    2    1       1  23   0    0    2    0   1    1    0
220    3    5    2    2    0    2       1   0  27    0    1    0   1    0    1
224    5    4    2    3    0    1       1   1   0    0    2    0   0    0    1
243    1    1    2    2    5    5       0  29   0    0    0    2   0    0    0
252    3    5    2    4    4    2       0  11   0    0    2    0   0    1    0
274    2    5    6    0    6    0       1  19   0    0    0    0   1    0    0
280    6    6    6    6    0    0       1   0  27    0    0    2   1    0    0
313    2    1    2    4    5    1       1   2   0    1    0    0   1    0    1
324    2    2    3    6    2    0       0   0  22    0    0    2   0    0    1
336    6    2    4    6    5    2       0  23   0    0    1    1   1    1    1
348    2    2    2    6    2    5       1   0  13    0    0    1   1    0    0
352    4    6    1    2    0    0       1  15   0    0    1    1   0    0    0
354    2    5    4    2    4    6       1   0   6    0    0    2   1    1    1
356    3    1    6    2    0    5       0   0  28    0    0    1   0    1    0
358    1    0    6    3    5    0       1   0   2    1    1    0   1    0    0
366    0    6    4    6    0    5       0   0   9    2    0    0   0    0    0
367    4    6    1    0    6    3       0  20   0    1    0    1   1    0    0
370    2    3    2    0    3    0       0   0   8    2    0    0   1    0    1
371    1    3    5    0    0    0       0   6   0    1    0    1   0    1    1
373    5    6    6    4    6    4       1   6   0    0    1    0   0    0    1
378    1    5    2    0    0    0       0   0  21    0    1    0   1    1    0
385    2    0    1    3    4    6       0   0  26    0    2    0   1    0    1

$rows
 [1]   3  19  23  42  44  62  64  69  76  95 104 109 110 119 125 141 177 179 220
[20] 224 243 252 274 280 313 324 336 348 352 354 356 358 366 367 370 371 373 378
[39] 385


    T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_y U_I U_J RT_I RT_J RT_K SCR VEC1 VEC2
3      6    0    1    6    2    6       0   0  20    1    1    0   1    1    0
19     4    2    2    5    3    1       1   0   7    1    1    0   1    1    0
23     0    2    2    3    5    5       0  29   0    1    0    0   0    1    1
42     3    2    0    0    0    4       1   0   8    0    0    0   0    1    0
44     2    6    5    2    0    3       0   0   1    0    1    0   0    0    1
62     2    0    0    0    0    5       0  24   0    0    0    2   1    0    0
64     1    1    4    1    2    6       1   0   7    0    1    1   1    1    1
69     5    0    2    0    2    5       0   0   8    2    0    0   0    1    0
76     2    4    0    6    4    1       0   6   0    0    1    0   0    1    0
95     1    1    0    3    5    2       0   0   7    0    0    1   1    0    1
104    1    0    3    2    1    2       0   2   0    0    0    0   1    0    1
109    0    3    3    3    1    2       1  28   0    2    0    0   1    1    1
110    2    3    0    1    5    2       1   0  26    1    1    0   0    0    0
119    1    2    4    2    5    2       1   0   1    0    0    2   1    0    0
125    1    5    0    0    5    3       1   0  26    0    0    2   1    1    1
141    5    0    1    4    5    0       1   0  27    0    1    1   0    1    1
177    2    1    2    1    2    2       0   0   6    0    1    1   0    1    0
179    2    4    0    2    2    1       1  23   0    0    2    0   1    1    0
220    3    5    2    2    0    2       1   0  27    0    1    0   1    0    1
224    5    4    2    3    0    1       1   1   0    0    2    0   0    0    1
243    1    1    2    2    5    5       0  29   0    0    0    2   0    0    0
252    3    5    2    4    4    2       0  11   0    0    2    0   0    1    0
274    2    5    6    0    6    0       1  19   0    0    0    0   1    0    0
280    6    6    6    6    0    0       1   0  27    0    0    2   1    0    0
313    2    1    2    4    5    1       1   2   0    1    0    0   1    0    1
324    2    2    3    6    2    0       0   0  22    0    0    2   0    0    1
336    6    2    4    6    5    2       0  23   0    0    1    1   1    1    1
348    2    2    2    6    2    5       1   0  13    0    0    1   1    0    0
352    4    6    1    2    0    0       1  15   0    0    1    1   0    0    0
354    2    5    4    2    4    6       1   0   6    0    0    2   1    1    1
356    3    1    6    2    0    5       0   0  28    0    0    1   0    1    0
358    1    0    6    3    5    0       1   0   2    1    1    0   1    0    0
366    0    6    4    6    0    5       0   0   9    2    0    0   0    0    0
367    4    6    1    0    6    3       0  20   0    1    0    1   1    0    0
370    2    3    2    0    3    0       0   0   8    2    0    0   1    0    1
371    1    3    5    0    0    0       0   6   0    1    0    1   0    1    1
373    5    6    6    4    6    4       1   6   0    0    1    0   0    0    1
378    1    5    2    0    0    0       0   0  21    0    1    0   1    1    0
385    2    0    1    3    4    6       0   0  26    0    2    0   1    0    1

D-Efficiency Approximation: [1] 0.427

Measuring design of size 39
Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_y', 'U_I', 'U_J', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Length of requested configs: 1
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	6
        Additions: 		905
        Multiplications: 	396
        Divisions: 		0
        Logical: 		0
        Reads: 			1836
        Writes: 		340
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest2.exe __orio_perftest2.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest2.exe  
Program Test Output: 
{'[6, 0, 1, 6, 2, 6, 1, 0, 11, 0, 20, 12, 1, 1, 0, 1, 1, 0]' : 0.367356}
{'[6, 0, 1, 6, 2, 6, 1, 0, 11, 0, 20, 12, 1, 1, 0, 1, 1, 0]' : 0.372592}
{'[6, 0, 1, 6, 2, 6, 1, 0, 11, 0, 20, 12, 1, 1, 0, 1, 1, 0]' : 0.370571}
{'[6, 0, 1, 6, 2, 6, 1, 0, 11, 0, 20, 12, 1, 1, 0, 1, 1, 0]' : 0.366539}
{'[6, 0, 1, 6, 2, 6, 1, 0, 11, 0, 20, 12, 1, 1, 0, 1, 1, 0]' : 0.370253}
{'[6, 0, 1, 6, 2, 6, 1, 0, 11, 0, 20, 12, 1, 1, 0, 1, 1, 0]' : 0.367647}
{'[6, 0, 1, 6, 2, 6, 1, 0, 11, 0, 20, 12, 1, 1, 0, 1, 1, 0]' : 0.366832}
{'[6, 0, 1, 6, 2, 6, 1, 0, 11, 0, 20, 12, 1, 1, 0, 1, 1, 0]' : 0.368714}
{'[6, 0, 1, 6, 2, 6, 1, 0, 11, 0, 20, 12, 1, 1, 0, 1, 1, 0]' : 0.369403}
{'[6, 0, 1, 6, 2, 6, 1, 0, 11, 0, 20, 12, 1, 1, 0, 1, 1, 0]' : 0.366381}
{'[6, 0, 1, 6, 2, 6, 1, 0, 11, 0, 20, 12, 1, 1, 0, 1, 1, 0]' : 0.369258}
{'[6, 0, 1, 6, 2, 6, 1, 0, 11, 0, 20, 12, 1, 1, 0, 1, 1, 0]' : 0.368653}
{'[6, 0, 1, 6, 2, 6, 1, 0, 11, 0, 20, 12, 1, 1, 0, 1, 1, 0]' : 0.367235}
{'[6, 0, 1, 6, 2, 6, 1, 0, 11, 0, 20, 12, 1, 1, 0, 1, 1, 0]' : 0.367121}
{'[6, 0, 1, 6, 2, 6, 1, 0, 11, 0, 20, 12, 1, 1, 0, 1, 1, 0]' : 0.36774}
{'[6, 0, 1, 6, 2, 6, 1, 0, 11, 0, 20, 12, 1, 1, 0, 1, 1, 0]' : 0.367348}
{'[6, 0, 1, 6, 2, 6, 1, 0, 11, 0, 20, 12, 1, 1, 0, 1, 1, 0]' : 0.367476}
{'[6, 0, 1, 6, 2, 6, 1, 0, 11, 0, 20, 12, 1, 1, 0, 1, 1, 0]' : 0.367268}
{'[6, 0, 1, 6, 2, 6, 1, 0, 11, 0, 20, 12, 1, 1, 0, 1, 1, 0]' : 0.367265}
{'[6, 0, 1, 6, 2, 6, 1, 0, 11, 0, 20, 12, 1, 1, 0, 1, 1, 0]' : 0.368657}
{'[6, 0, 1, 6, 2, 6, 1, 0, 11, 0, 20, 12, 1, 1, 0, 1, 1, 0]' : 0.368506}
{'[6, 0, 1, 6, 2, 6, 1, 0, 11, 0, 20, 12, 1, 1, 0, 1, 1, 0]' : 0.369254}
{'[6, 0, 1, 6, 2, 6, 1, 0, 11, 0, 20, 12, 1, 1, 0, 1, 1, 0]' : 0.368058}
{'[6, 0, 1, 6, 2, 6, 1, 0, 11, 0, 20, 12, 1, 1, 0, 1, 1, 0]' : 0.367804}
{'[6, 0, 1, 6, 2, 6, 1, 0, 11, 0, 20, 12, 1, 1, 0, 1, 1, 0]' : 0.367356}
{'[6, 0, 1, 6, 2, 6, 1, 0, 11, 0, 20, 12, 1, 1, 0, 1, 1, 0]' : 0.367295}
{'[6, 0, 1, 6, 2, 6, 1, 0, 11, 0, 20, 12, 1, 1, 0, 1, 1, 0]' : 0.36725}
{'[6, 0, 1, 6, 2, 6, 1, 0, 11, 0, 20, 12, 1, 1, 0, 1, 1, 0]' : 0.367116}
{'[6, 0, 1, 6, 2, 6, 1, 0, 11, 0, 20, 12, 1, 1, 0, 1, 1, 0]' : 0.367757}
{'[6, 0, 1, 6, 2, 6, 1, 0, 11, 0, 20, 12, 1, 1, 0, 1, 1, 0]' : 0.367708}

out:
 ["{'[6, 0, 1, 6, 2, 6, 1, 0, 11, 0, 20, 12, 1, 1, 0, 1, 1, 0]' : 0.367356}", "{'[6, 0, 1, 6, 2, 6, 1, 0, 11, 0, 20, 12, 1, 1, 0, 1, 1, 0]' : 0.372592}", "{'[6, 0, 1, 6, 2, 6, 1, 0, 11, 0, 20, 12, 1, 1, 0, 1, 1, 0]' : 0.370571}", "{'[6, 0, 1, 6, 2, 6, 1, 0, 11, 0, 20, 12, 1, 1, 0, 1, 1, 0]' : 0.366539}", "{'[6, 0, 1, 6, 2, 6, 1, 0, 11, 0, 20, 12, 1, 1, 0, 1, 1, 0]' : 0.370253}", "{'[6, 0, 1, 6, 2, 6, 1, 0, 11, 0, 20, 12, 1, 1, 0, 1, 1, 0]' : 0.367647}", "{'[6, 0, 1, 6, 2, 6, 1, 0, 11, 0, 20, 12, 1, 1, 0, 1, 1, 0]' : 0.366832}", "{'[6, 0, 1, 6, 2, 6, 1, 0, 11, 0, 20, 12, 1, 1, 0, 1, 1, 0]' : 0.368714}", "{'[6, 0, 1, 6, 2, 6, 1, 0, 11, 0, 20, 12, 1, 1, 0, 1, 1, 0]' : 0.369403}", "{'[6, 0, 1, 6, 2, 6, 1, 0, 11, 0, 20, 12, 1, 1, 0, 1, 1, 0]' : 0.366381}", "{'[6, 0, 1, 6, 2, 6, 1, 0, 11, 0, 20, 12, 1, 1, 0, 1, 1, 0]' : 0.369258}", "{'[6, 0, 1, 6, 2, 6, 1, 0, 11, 0, 20, 12, 1, 1, 0, 1, 1, 0]' : 0.368653}", "{'[6, 0, 1, 6, 2, 6, 1, 0, 11, 0, 20, 12, 1, 1, 0, 1, 1, 0]' : 0.367235}", "{'[6, 0, 1, 6, 2, 6, 1, 0, 11, 0, 20, 12, 1, 1, 0, 1, 1, 0]' : 0.367121}", "{'[6, 0, 1, 6, 2, 6, 1, 0, 11, 0, 20, 12, 1, 1, 0, 1, 1, 0]' : 0.36774}", "{'[6, 0, 1, 6, 2, 6, 1, 0, 11, 0, 20, 12, 1, 1, 0, 1, 1, 0]' : 0.367348}", "{'[6, 0, 1, 6, 2, 6, 1, 0, 11, 0, 20, 12, 1, 1, 0, 1, 1, 0]' : 0.367476}", "{'[6, 0, 1, 6, 2, 6, 1, 0, 11, 0, 20, 12, 1, 1, 0, 1, 1, 0]' : 0.367268}", "{'[6, 0, 1, 6, 2, 6, 1, 0, 11, 0, 20, 12, 1, 1, 0, 1, 1, 0]' : 0.367265}", "{'[6, 0, 1, 6, 2, 6, 1, 0, 11, 0, 20, 12, 1, 1, 0, 1, 1, 0]' : 0.368657}", "{'[6, 0, 1, 6, 2, 6, 1, 0, 11, 0, 20, 12, 1, 1, 0, 1, 1, 0]' : 0.368506}", "{'[6, 0, 1, 6, 2, 6, 1, 0, 11, 0, 20, 12, 1, 1, 0, 1, 1, 0]' : 0.369254}", "{'[6, 0, 1, 6, 2, 6, 1, 0, 11, 0, 20, 12, 1, 1, 0, 1, 1, 0]' : 0.368058}", "{'[6, 0, 1, 6, 2, 6, 1, 0, 11, 0, 20, 12, 1, 1, 0, 1, 1, 0]' : 0.367804}", "{'[6, 0, 1, 6, 2, 6, 1, 0, 11, 0, 20, 12, 1, 1, 0, 1, 1, 0]' : 0.367356}", "{'[6, 0, 1, 6, 2, 6, 1, 0, 11, 0, 20, 12, 1, 1, 0, 1, 1, 0]' : 0.367295}", "{'[6, 0, 1, 6, 2, 6, 1, 0, 11, 0, 20, 12, 1, 1, 0, 1, 1, 0]' : 0.36725}", "{'[6, 0, 1, 6, 2, 6, 1, 0, 11, 0, 20, 12, 1, 1, 0, 1, 1, 0]' : 0.367116}", "{'[6, 0, 1, 6, 2, 6, 1, 0, 11, 0, 20, 12, 1, 1, 0, 1, 1, 0]' : 0.367757}", "{'[6, 0, 1, 6, 2, 6, 1, 0, 11, 0, 20, 12, 1, 1, 0, 1, 1, 0]' : 0.367708}"]
returning from 'run': {'[6, 0, 1, 6, 2, 6, 1, 0, 11, 0, 20, 12, 1, 1, 0, 1, 1, 0]': ([0.367356, 0.372592, 0.370571, 0.366539, 0.370253, 0.367647, 0.366832, 0.368714, 0.369403, 0.366381, 0.369258, 0.368653, 0.367235, 0.367121, 0.36774, 0.367348, 0.367476, 0.367268, 0.367265, 0.368657, 0.368506, 0.369254, 0.368058, 0.367804, 0.367356, 0.367295, 0.36725, 0.367116, 0.367757, 0.367708], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 1, 6, 2, 6, 1, 0, 11, 0, 20, 12, 1, 1, 0, 1, 1, 0]': ([0.367356, 0.372592, 0.370571, 0.366539, 0.370253, 0.367647, 0.366832, 0.368714, 0.369403, 0.366381, 0.369258, 0.368653, 0.367235, 0.367121, 0.36774, 0.367348, 0.367476, 0.367268, 0.367265, 0.368657, 0.368506, 0.369254, 0.368058, 0.367804, 0.367356, 0.367295, 0.36725, 0.367116, 0.367757, 0.367708], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	26
        Max loop nest depth: 	6
        Additions: 		983
        Multiplications: 	396
        Divisions: 		0
        Logical: 		0
        Reads: 			1954
        Writes: 		356
        Comparisons:		26
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest3.exe __orio_perftest3.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest3.exe  
Program Test Output: 
{'[4, 2, 2, 5, 3, 1, 1, 1, 11, 0, 7, 12, 1, 1, 0, 1, 1, 0]' : 0.274483}
{'[4, 2, 2, 5, 3, 1, 1, 1, 11, 0, 7, 12, 1, 1, 0, 1, 1, 0]' : 0.267636}
{'[4, 2, 2, 5, 3, 1, 1, 1, 11, 0, 7, 12, 1, 1, 0, 1, 1, 0]' : 0.266367}
{'[4, 2, 2, 5, 3, 1, 1, 1, 11, 0, 7, 12, 1, 1, 0, 1, 1, 0]' : 0.266311}
{'[4, 2, 2, 5, 3, 1, 1, 1, 11, 0, 7, 12, 1, 1, 0, 1, 1, 0]' : 0.265049}
{'[4, 2, 2, 5, 3, 1, 1, 1, 11, 0, 7, 12, 1, 1, 0, 1, 1, 0]' : 0.266856}
{'[4, 2, 2, 5, 3, 1, 1, 1, 11, 0, 7, 12, 1, 1, 0, 1, 1, 0]' : 0.264471}
{'[4, 2, 2, 5, 3, 1, 1, 1, 11, 0, 7, 12, 1, 1, 0, 1, 1, 0]' : 0.26622}
{'[4, 2, 2, 5, 3, 1, 1, 1, 11, 0, 7, 12, 1, 1, 0, 1, 1, 0]' : 0.263546}
{'[4, 2, 2, 5, 3, 1, 1, 1, 11, 0, 7, 12, 1, 1, 0, 1, 1, 0]' : 0.266797}
{'[4, 2, 2, 5, 3, 1, 1, 1, 11, 0, 7, 12, 1, 1, 0, 1, 1, 0]' : 0.263986}
{'[4, 2, 2, 5, 3, 1, 1, 1, 11, 0, 7, 12, 1, 1, 0, 1, 1, 0]' : 0.265623}
{'[4, 2, 2, 5, 3, 1, 1, 1, 11, 0, 7, 12, 1, 1, 0, 1, 1, 0]' : 0.264612}
{'[4, 2, 2, 5, 3, 1, 1, 1, 11, 0, 7, 12, 1, 1, 0, 1, 1, 0]' : 0.2678}
{'[4, 2, 2, 5, 3, 1, 1, 1, 11, 0, 7, 12, 1, 1, 0, 1, 1, 0]' : 0.266425}
{'[4, 2, 2, 5, 3, 1, 1, 1, 11, 0, 7, 12, 1, 1, 0, 1, 1, 0]' : 0.265949}
{'[4, 2, 2, 5, 3, 1, 1, 1, 11, 0, 7, 12, 1, 1, 0, 1, 1, 0]' : 0.2644}
{'[4, 2, 2, 5, 3, 1, 1, 1, 11, 0, 7, 12, 1, 1, 0, 1, 1, 0]' : 0.266591}
{'[4, 2, 2, 5, 3, 1, 1, 1, 11, 0, 7, 12, 1, 1, 0, 1, 1, 0]' : 0.264647}
{'[4, 2, 2, 5, 3, 1, 1, 1, 11, 0, 7, 12, 1, 1, 0, 1, 1, 0]' : 0.270211}
{'[4, 2, 2, 5, 3, 1, 1, 1, 11, 0, 7, 12, 1, 1, 0, 1, 1, 0]' : 0.265306}
{'[4, 2, 2, 5, 3, 1, 1, 1, 11, 0, 7, 12, 1, 1, 0, 1, 1, 0]' : 0.263679}
{'[4, 2, 2, 5, 3, 1, 1, 1, 11, 0, 7, 12, 1, 1, 0, 1, 1, 0]' : 0.26576}
{'[4, 2, 2, 5, 3, 1, 1, 1, 11, 0, 7, 12, 1, 1, 0, 1, 1, 0]' : 0.265034}
{'[4, 2, 2, 5, 3, 1, 1, 1, 11, 0, 7, 12, 1, 1, 0, 1, 1, 0]' : 0.265628}
{'[4, 2, 2, 5, 3, 1, 1, 1, 11, 0, 7, 12, 1, 1, 0, 1, 1, 0]' : 0.265048}
{'[4, 2, 2, 5, 3, 1, 1, 1, 11, 0, 7, 12, 1, 1, 0, 1, 1, 0]' : 0.265122}
{'[4, 2, 2, 5, 3, 1, 1, 1, 11, 0, 7, 12, 1, 1, 0, 1, 1, 0]' : 0.263807}
{'[4, 2, 2, 5, 3, 1, 1, 1, 11, 0, 7, 12, 1, 1, 0, 1, 1, 0]' : 0.265888}
{'[4, 2, 2, 5, 3, 1, 1, 1, 11, 0, 7, 12, 1, 1, 0, 1, 1, 0]' : 0.26463}

out:
 ["{'[4, 2, 2, 5, 3, 1, 1, 1, 11, 0, 7, 12, 1, 1, 0, 1, 1, 0]' : 0.274483}", "{'[4, 2, 2, 5, 3, 1, 1, 1, 11, 0, 7, 12, 1, 1, 0, 1, 1, 0]' : 0.267636}", "{'[4, 2, 2, 5, 3, 1, 1, 1, 11, 0, 7, 12, 1, 1, 0, 1, 1, 0]' : 0.266367}", "{'[4, 2, 2, 5, 3, 1, 1, 1, 11, 0, 7, 12, 1, 1, 0, 1, 1, 0]' : 0.266311}", "{'[4, 2, 2, 5, 3, 1, 1, 1, 11, 0, 7, 12, 1, 1, 0, 1, 1, 0]' : 0.265049}", "{'[4, 2, 2, 5, 3, 1, 1, 1, 11, 0, 7, 12, 1, 1, 0, 1, 1, 0]' : 0.266856}", "{'[4, 2, 2, 5, 3, 1, 1, 1, 11, 0, 7, 12, 1, 1, 0, 1, 1, 0]' : 0.264471}", "{'[4, 2, 2, 5, 3, 1, 1, 1, 11, 0, 7, 12, 1, 1, 0, 1, 1, 0]' : 0.26622}", "{'[4, 2, 2, 5, 3, 1, 1, 1, 11, 0, 7, 12, 1, 1, 0, 1, 1, 0]' : 0.263546}", "{'[4, 2, 2, 5, 3, 1, 1, 1, 11, 0, 7, 12, 1, 1, 0, 1, 1, 0]' : 0.266797}", "{'[4, 2, 2, 5, 3, 1, 1, 1, 11, 0, 7, 12, 1, 1, 0, 1, 1, 0]' : 0.263986}", "{'[4, 2, 2, 5, 3, 1, 1, 1, 11, 0, 7, 12, 1, 1, 0, 1, 1, 0]' : 0.265623}", "{'[4, 2, 2, 5, 3, 1, 1, 1, 11, 0, 7, 12, 1, 1, 0, 1, 1, 0]' : 0.264612}", "{'[4, 2, 2, 5, 3, 1, 1, 1, 11, 0, 7, 12, 1, 1, 0, 1, 1, 0]' : 0.2678}", "{'[4, 2, 2, 5, 3, 1, 1, 1, 11, 0, 7, 12, 1, 1, 0, 1, 1, 0]' : 0.266425}", "{'[4, 2, 2, 5, 3, 1, 1, 1, 11, 0, 7, 12, 1, 1, 0, 1, 1, 0]' : 0.265949}", "{'[4, 2, 2, 5, 3, 1, 1, 1, 11, 0, 7, 12, 1, 1, 0, 1, 1, 0]' : 0.2644}", "{'[4, 2, 2, 5, 3, 1, 1, 1, 11, 0, 7, 12, 1, 1, 0, 1, 1, 0]' : 0.266591}", "{'[4, 2, 2, 5, 3, 1, 1, 1, 11, 0, 7, 12, 1, 1, 0, 1, 1, 0]' : 0.264647}", "{'[4, 2, 2, 5, 3, 1, 1, 1, 11, 0, 7, 12, 1, 1, 0, 1, 1, 0]' : 0.270211}", "{'[4, 2, 2, 5, 3, 1, 1, 1, 11, 0, 7, 12, 1, 1, 0, 1, 1, 0]' : 0.265306}", "{'[4, 2, 2, 5, 3, 1, 1, 1, 11, 0, 7, 12, 1, 1, 0, 1, 1, 0]' : 0.263679}", "{'[4, 2, 2, 5, 3, 1, 1, 1, 11, 0, 7, 12, 1, 1, 0, 1, 1, 0]' : 0.26576}", "{'[4, 2, 2, 5, 3, 1, 1, 1, 11, 0, 7, 12, 1, 1, 0, 1, 1, 0]' : 0.265034}", "{'[4, 2, 2, 5, 3, 1, 1, 1, 11, 0, 7, 12, 1, 1, 0, 1, 1, 0]' : 0.265628}", "{'[4, 2, 2, 5, 3, 1, 1, 1, 11, 0, 7, 12, 1, 1, 0, 1, 1, 0]' : 0.265048}", "{'[4, 2, 2, 5, 3, 1, 1, 1, 11, 0, 7, 12, 1, 1, 0, 1, 1, 0]' : 0.265122}", "{'[4, 2, 2, 5, 3, 1, 1, 1, 11, 0, 7, 12, 1, 1, 0, 1, 1, 0]' : 0.263807}", "{'[4, 2, 2, 5, 3, 1, 1, 1, 11, 0, 7, 12, 1, 1, 0, 1, 1, 0]' : 0.265888}", "{'[4, 2, 2, 5, 3, 1, 1, 1, 11, 0, 7, 12, 1, 1, 0, 1, 1, 0]' : 0.26463}"]
returning from 'run': {'[4, 2, 2, 5, 3, 1, 1, 1, 11, 0, 7, 12, 1, 1, 0, 1, 1, 0]': ([0.274483, 0.267636, 0.266367, 0.266311, 0.265049, 0.266856, 0.264471, 0.26622, 0.263546, 0.266797, 0.263986, 0.265623, 0.264612, 0.2678, 0.266425, 0.265949, 0.2644, 0.266591, 0.264647, 0.270211, 0.265306, 0.263679, 0.26576, 0.265034, 0.265628, 0.265048, 0.265122, 0.263807, 0.265888, 0.26463], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 2, 2, 5, 3, 1, 1, 1, 11, 0, 7, 12, 1, 1, 0, 1, 1, 0]': ([0.274483, 0.267636, 0.266367, 0.266311, 0.265049, 0.266856, 0.264471, 0.26622, 0.263546, 0.266797, 0.263986, 0.265623, 0.264612, 0.2678, 0.266425, 0.265949, 0.2644, 0.266591, 0.264647, 0.270211, 0.265306, 0.263679, 0.26576, 0.265034, 0.265628, 0.265048, 0.265122, 0.263807, 0.265888, 0.26463], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	59
        Max loop nest depth: 	5
        Additions: 		4013
        Multiplications: 	1170
        Divisions: 		0
        Logical: 		0
        Reads: 			6582
        Writes: 		795
        Comparisons:		59
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest4.exe __orio_perftest4.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest4.exe  
Program Test Output: 
{'[0, 2, 2, 3, 5, 5, 1, 0, 11, 29, 0, 12, 1, 0, 0, 0, 1, 1]' : 0.354083}
{'[0, 2, 2, 3, 5, 5, 1, 0, 11, 29, 0, 12, 1, 0, 0, 0, 1, 1]' : 0.316318}
{'[0, 2, 2, 3, 5, 5, 1, 0, 11, 29, 0, 12, 1, 0, 0, 0, 1, 1]' : 0.330839}
{'[0, 2, 2, 3, 5, 5, 1, 0, 11, 29, 0, 12, 1, 0, 0, 0, 1, 1]' : 0.317467}
{'[0, 2, 2, 3, 5, 5, 1, 0, 11, 29, 0, 12, 1, 0, 0, 0, 1, 1]' : 0.324636}
{'[0, 2, 2, 3, 5, 5, 1, 0, 11, 29, 0, 12, 1, 0, 0, 0, 1, 1]' : 0.332646}
{'[0, 2, 2, 3, 5, 5, 1, 0, 11, 29, 0, 12, 1, 0, 0, 0, 1, 1]' : 0.317899}
{'[0, 2, 2, 3, 5, 5, 1, 0, 11, 29, 0, 12, 1, 0, 0, 0, 1, 1]' : 0.31896}
{'[0, 2, 2, 3, 5, 5, 1, 0, 11, 29, 0, 12, 1, 0, 0, 0, 1, 1]' : 0.316448}
{'[0, 2, 2, 3, 5, 5, 1, 0, 11, 29, 0, 12, 1, 0, 0, 0, 1, 1]' : 0.315413}
{'[0, 2, 2, 3, 5, 5, 1, 0, 11, 29, 0, 12, 1, 0, 0, 0, 1, 1]' : 0.319378}
{'[0, 2, 2, 3, 5, 5, 1, 0, 11, 29, 0, 12, 1, 0, 0, 0, 1, 1]' : 0.314475}
{'[0, 2, 2, 3, 5, 5, 1, 0, 11, 29, 0, 12, 1, 0, 0, 0, 1, 1]' : 0.324356}
{'[0, 2, 2, 3, 5, 5, 1, 0, 11, 29, 0, 12, 1, 0, 0, 0, 1, 1]' : 0.325273}
{'[0, 2, 2, 3, 5, 5, 1, 0, 11, 29, 0, 12, 1, 0, 0, 0, 1, 1]' : 0.317165}
{'[0, 2, 2, 3, 5, 5, 1, 0, 11, 29, 0, 12, 1, 0, 0, 0, 1, 1]' : 0.317492}
{'[0, 2, 2, 3, 5, 5, 1, 0, 11, 29, 0, 12, 1, 0, 0, 0, 1, 1]' : 0.324046}
{'[0, 2, 2, 3, 5, 5, 1, 0, 11, 29, 0, 12, 1, 0, 0, 0, 1, 1]' : 0.319428}
{'[0, 2, 2, 3, 5, 5, 1, 0, 11, 29, 0, 12, 1, 0, 0, 0, 1, 1]' : 0.328643}
{'[0, 2, 2, 3, 5, 5, 1, 0, 11, 29, 0, 12, 1, 0, 0, 0, 1, 1]' : 0.326494}
{'[0, 2, 2, 3, 5, 5, 1, 0, 11, 29, 0, 12, 1, 0, 0, 0, 1, 1]' : 0.322676}
{'[0, 2, 2, 3, 5, 5, 1, 0, 11, 29, 0, 12, 1, 0, 0, 0, 1, 1]' : 0.326157}
{'[0, 2, 2, 3, 5, 5, 1, 0, 11, 29, 0, 12, 1, 0, 0, 0, 1, 1]' : 0.320041}
{'[0, 2, 2, 3, 5, 5, 1, 0, 11, 29, 0, 12, 1, 0, 0, 0, 1, 1]' : 0.327453}
{'[0, 2, 2, 3, 5, 5, 1, 0, 11, 29, 0, 12, 1, 0, 0, 0, 1, 1]' : 0.321194}
{'[0, 2, 2, 3, 5, 5, 1, 0, 11, 29, 0, 12, 1, 0, 0, 0, 1, 1]' : 0.331205}
{'[0, 2, 2, 3, 5, 5, 1, 0, 11, 29, 0, 12, 1, 0, 0, 0, 1, 1]' : 0.330424}
{'[0, 2, 2, 3, 5, 5, 1, 0, 11, 29, 0, 12, 1, 0, 0, 0, 1, 1]' : 0.319699}
{'[0, 2, 2, 3, 5, 5, 1, 0, 11, 29, 0, 12, 1, 0, 0, 0, 1, 1]' : 0.324122}
{'[0, 2, 2, 3, 5, 5, 1, 0, 11, 29, 0, 12, 1, 0, 0, 0, 1, 1]' : 0.320381}

out:
 ["{'[0, 2, 2, 3, 5, 5, 1, 0, 11, 29, 0, 12, 1, 0, 0, 0, 1, 1]' : 0.354083}", "{'[0, 2, 2, 3, 5, 5, 1, 0, 11, 29, 0, 12, 1, 0, 0, 0, 1, 1]' : 0.316318}", "{'[0, 2, 2, 3, 5, 5, 1, 0, 11, 29, 0, 12, 1, 0, 0, 0, 1, 1]' : 0.330839}", "{'[0, 2, 2, 3, 5, 5, 1, 0, 11, 29, 0, 12, 1, 0, 0, 0, 1, 1]' : 0.317467}", "{'[0, 2, 2, 3, 5, 5, 1, 0, 11, 29, 0, 12, 1, 0, 0, 0, 1, 1]' : 0.324636}", "{'[0, 2, 2, 3, 5, 5, 1, 0, 11, 29, 0, 12, 1, 0, 0, 0, 1, 1]' : 0.332646}", "{'[0, 2, 2, 3, 5, 5, 1, 0, 11, 29, 0, 12, 1, 0, 0, 0, 1, 1]' : 0.317899}", "{'[0, 2, 2, 3, 5, 5, 1, 0, 11, 29, 0, 12, 1, 0, 0, 0, 1, 1]' : 0.31896}", "{'[0, 2, 2, 3, 5, 5, 1, 0, 11, 29, 0, 12, 1, 0, 0, 0, 1, 1]' : 0.316448}", "{'[0, 2, 2, 3, 5, 5, 1, 0, 11, 29, 0, 12, 1, 0, 0, 0, 1, 1]' : 0.315413}", "{'[0, 2, 2, 3, 5, 5, 1, 0, 11, 29, 0, 12, 1, 0, 0, 0, 1, 1]' : 0.319378}", "{'[0, 2, 2, 3, 5, 5, 1, 0, 11, 29, 0, 12, 1, 0, 0, 0, 1, 1]' : 0.314475}", "{'[0, 2, 2, 3, 5, 5, 1, 0, 11, 29, 0, 12, 1, 0, 0, 0, 1, 1]' : 0.324356}", "{'[0, 2, 2, 3, 5, 5, 1, 0, 11, 29, 0, 12, 1, 0, 0, 0, 1, 1]' : 0.325273}", "{'[0, 2, 2, 3, 5, 5, 1, 0, 11, 29, 0, 12, 1, 0, 0, 0, 1, 1]' : 0.317165}", "{'[0, 2, 2, 3, 5, 5, 1, 0, 11, 29, 0, 12, 1, 0, 0, 0, 1, 1]' : 0.317492}", "{'[0, 2, 2, 3, 5, 5, 1, 0, 11, 29, 0, 12, 1, 0, 0, 0, 1, 1]' : 0.324046}", "{'[0, 2, 2, 3, 5, 5, 1, 0, 11, 29, 0, 12, 1, 0, 0, 0, 1, 1]' : 0.319428}", "{'[0, 2, 2, 3, 5, 5, 1, 0, 11, 29, 0, 12, 1, 0, 0, 0, 1, 1]' : 0.328643}", "{'[0, 2, 2, 3, 5, 5, 1, 0, 11, 29, 0, 12, 1, 0, 0, 0, 1, 1]' : 0.326494}", "{'[0, 2, 2, 3, 5, 5, 1, 0, 11, 29, 0, 12, 1, 0, 0, 0, 1, 1]' : 0.322676}", "{'[0, 2, 2, 3, 5, 5, 1, 0, 11, 29, 0, 12, 1, 0, 0, 0, 1, 1]' : 0.326157}", "{'[0, 2, 2, 3, 5, 5, 1, 0, 11, 29, 0, 12, 1, 0, 0, 0, 1, 1]' : 0.320041}", "{'[0, 2, 2, 3, 5, 5, 1, 0, 11, 29, 0, 12, 1, 0, 0, 0, 1, 1]' : 0.327453}", "{'[0, 2, 2, 3, 5, 5, 1, 0, 11, 29, 0, 12, 1, 0, 0, 0, 1, 1]' : 0.321194}", "{'[0, 2, 2, 3, 5, 5, 1, 0, 11, 29, 0, 12, 1, 0, 0, 0, 1, 1]' : 0.331205}", "{'[0, 2, 2, 3, 5, 5, 1, 0, 11, 29, 0, 12, 1, 0, 0, 0, 1, 1]' : 0.330424}", "{'[0, 2, 2, 3, 5, 5, 1, 0, 11, 29, 0, 12, 1, 0, 0, 0, 1, 1]' : 0.319699}", "{'[0, 2, 2, 3, 5, 5, 1, 0, 11, 29, 0, 12, 1, 0, 0, 0, 1, 1]' : 0.324122}", "{'[0, 2, 2, 3, 5, 5, 1, 0, 11, 29, 0, 12, 1, 0, 0, 0, 1, 1]' : 0.320381}"]
returning from 'run': {'[0, 2, 2, 3, 5, 5, 1, 0, 11, 29, 0, 12, 1, 0, 0, 0, 1, 1]': ([0.354083, 0.316318, 0.330839, 0.317467, 0.324636, 0.332646, 0.317899, 0.31896, 0.316448, 0.315413, 0.319378, 0.314475, 0.324356, 0.325273, 0.317165, 0.317492, 0.324046, 0.319428, 0.328643, 0.326494, 0.322676, 0.326157, 0.320041, 0.327453, 0.321194, 0.331205, 0.330424, 0.319699, 0.324122, 0.320381], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 2, 3, 5, 5, 1, 0, 11, 29, 0, 12, 1, 0, 0, 0, 1, 1]': ([0.354083, 0.316318, 0.330839, 0.317467, 0.324636, 0.332646, 0.317899, 0.31896, 0.316448, 0.315413, 0.319378, 0.314475, 0.324356, 0.325273, 0.317165, 0.317492, 0.324046, 0.319428, 0.328643, 0.326494, 0.322676, 0.326157, 0.320041, 0.327453, 0.321194, 0.331205, 0.330424, 0.319699, 0.324122, 0.320381], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		209
        Multiplications: 	48
        Divisions: 		0
        Logical: 		0
        Reads: 			418
        Writes: 		70
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest5.exe __orio_perftest5.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest5.exe  
Program Test Output: 
{'[3, 2, 0, 0, 0, 4, 1, 1, 11, 0, 8, 12, 0, 0, 0, 0, 1, 0]' : 1.03602}
{'[3, 2, 0, 0, 0, 4, 1, 1, 11, 0, 8, 12, 0, 0, 0, 0, 1, 0]' : 1.04394}
{'[3, 2, 0, 0, 0, 4, 1, 1, 11, 0, 8, 12, 0, 0, 0, 0, 1, 0]' : 1.03571}
{'[3, 2, 0, 0, 0, 4, 1, 1, 11, 0, 8, 12, 0, 0, 0, 0, 1, 0]' : 1.0298}
{'[3, 2, 0, 0, 0, 4, 1, 1, 11, 0, 8, 12, 0, 0, 0, 0, 1, 0]' : 1.0273}
{'[3, 2, 0, 0, 0, 4, 1, 1, 11, 0, 8, 12, 0, 0, 0, 0, 1, 0]' : 1.03322}
{'[3, 2, 0, 0, 0, 4, 1, 1, 11, 0, 8, 12, 0, 0, 0, 0, 1, 0]' : 1.04236}
{'[3, 2, 0, 0, 0, 4, 1, 1, 11, 0, 8, 12, 0, 0, 0, 0, 1, 0]' : 1.03275}
{'[3, 2, 0, 0, 0, 4, 1, 1, 11, 0, 8, 12, 0, 0, 0, 0, 1, 0]' : 1.05256}
{'[3, 2, 0, 0, 0, 4, 1, 1, 11, 0, 8, 12, 0, 0, 0, 0, 1, 0]' : 1.03621}
{'[3, 2, 0, 0, 0, 4, 1, 1, 11, 0, 8, 12, 0, 0, 0, 0, 1, 0]' : 1.03917}
{'[3, 2, 0, 0, 0, 4, 1, 1, 11, 0, 8, 12, 0, 0, 0, 0, 1, 0]' : 1.03224}
{'[3, 2, 0, 0, 0, 4, 1, 1, 11, 0, 8, 12, 0, 0, 0, 0, 1, 0]' : 1.06707}
{'[3, 2, 0, 0, 0, 4, 1, 1, 11, 0, 8, 12, 0, 0, 0, 0, 1, 0]' : 1.0649}
{'[3, 2, 0, 0, 0, 4, 1, 1, 11, 0, 8, 12, 0, 0, 0, 0, 1, 0]' : 1.04864}
{'[3, 2, 0, 0, 0, 4, 1, 1, 11, 0, 8, 12, 0, 0, 0, 0, 1, 0]' : 1.04463}
{'[3, 2, 0, 0, 0, 4, 1, 1, 11, 0, 8, 12, 0, 0, 0, 0, 1, 0]' : 1.05473}
{'[3, 2, 0, 0, 0, 4, 1, 1, 11, 0, 8, 12, 0, 0, 0, 0, 1, 0]' : 1.03644}
{'[3, 2, 0, 0, 0, 4, 1, 1, 11, 0, 8, 12, 0, 0, 0, 0, 1, 0]' : 1.0422}
{'[3, 2, 0, 0, 0, 4, 1, 1, 11, 0, 8, 12, 0, 0, 0, 0, 1, 0]' : 1.0258}
{'[3, 2, 0, 0, 0, 4, 1, 1, 11, 0, 8, 12, 0, 0, 0, 0, 1, 0]' : 1.02987}
{'[3, 2, 0, 0, 0, 4, 1, 1, 11, 0, 8, 12, 0, 0, 0, 0, 1, 0]' : 1.02568}
{'[3, 2, 0, 0, 0, 4, 1, 1, 11, 0, 8, 12, 0, 0, 0, 0, 1, 0]' : 1.03263}
{'[3, 2, 0, 0, 0, 4, 1, 1, 11, 0, 8, 12, 0, 0, 0, 0, 1, 0]' : 1.03604}
{'[3, 2, 0, 0, 0, 4, 1, 1, 11, 0, 8, 12, 0, 0, 0, 0, 1, 0]' : 1.03932}
{'[3, 2, 0, 0, 0, 4, 1, 1, 11, 0, 8, 12, 0, 0, 0, 0, 1, 0]' : 1.04013}
{'[3, 2, 0, 0, 0, 4, 1, 1, 11, 0, 8, 12, 0, 0, 0, 0, 1, 0]' : 1.0381}
{'[3, 2, 0, 0, 0, 4, 1, 1, 11, 0, 8, 12, 0, 0, 0, 0, 1, 0]' : 1.03039}
{'[3, 2, 0, 0, 0, 4, 1, 1, 11, 0, 8, 12, 0, 0, 0, 0, 1, 0]' : 1.03065}
{'[3, 2, 0, 0, 0, 4, 1, 1, 11, 0, 8, 12, 0, 0, 0, 0, 1, 0]' : 1.02941}

out:
 ["{'[3, 2, 0, 0, 0, 4, 1, 1, 11, 0, 8, 12, 0, 0, 0, 0, 1, 0]' : 1.03602}", "{'[3, 2, 0, 0, 0, 4, 1, 1, 11, 0, 8, 12, 0, 0, 0, 0, 1, 0]' : 1.04394}", "{'[3, 2, 0, 0, 0, 4, 1, 1, 11, 0, 8, 12, 0, 0, 0, 0, 1, 0]' : 1.03571}", "{'[3, 2, 0, 0, 0, 4, 1, 1, 11, 0, 8, 12, 0, 0, 0, 0, 1, 0]' : 1.0298}", "{'[3, 2, 0, 0, 0, 4, 1, 1, 11, 0, 8, 12, 0, 0, 0, 0, 1, 0]' : 1.0273}", "{'[3, 2, 0, 0, 0, 4, 1, 1, 11, 0, 8, 12, 0, 0, 0, 0, 1, 0]' : 1.03322}", "{'[3, 2, 0, 0, 0, 4, 1, 1, 11, 0, 8, 12, 0, 0, 0, 0, 1, 0]' : 1.04236}", "{'[3, 2, 0, 0, 0, 4, 1, 1, 11, 0, 8, 12, 0, 0, 0, 0, 1, 0]' : 1.03275}", "{'[3, 2, 0, 0, 0, 4, 1, 1, 11, 0, 8, 12, 0, 0, 0, 0, 1, 0]' : 1.05256}", "{'[3, 2, 0, 0, 0, 4, 1, 1, 11, 0, 8, 12, 0, 0, 0, 0, 1, 0]' : 1.03621}", "{'[3, 2, 0, 0, 0, 4, 1, 1, 11, 0, 8, 12, 0, 0, 0, 0, 1, 0]' : 1.03917}", "{'[3, 2, 0, 0, 0, 4, 1, 1, 11, 0, 8, 12, 0, 0, 0, 0, 1, 0]' : 1.03224}", "{'[3, 2, 0, 0, 0, 4, 1, 1, 11, 0, 8, 12, 0, 0, 0, 0, 1, 0]' : 1.06707}", "{'[3, 2, 0, 0, 0, 4, 1, 1, 11, 0, 8, 12, 0, 0, 0, 0, 1, 0]' : 1.0649}", "{'[3, 2, 0, 0, 0, 4, 1, 1, 11, 0, 8, 12, 0, 0, 0, 0, 1, 0]' : 1.04864}", "{'[3, 2, 0, 0, 0, 4, 1, 1, 11, 0, 8, 12, 0, 0, 0, 0, 1, 0]' : 1.04463}", "{'[3, 2, 0, 0, 0, 4, 1, 1, 11, 0, 8, 12, 0, 0, 0, 0, 1, 0]' : 1.05473}", "{'[3, 2, 0, 0, 0, 4, 1, 1, 11, 0, 8, 12, 0, 0, 0, 0, 1, 0]' : 1.03644}", "{'[3, 2, 0, 0, 0, 4, 1, 1, 11, 0, 8, 12, 0, 0, 0, 0, 1, 0]' : 1.0422}", "{'[3, 2, 0, 0, 0, 4, 1, 1, 11, 0, 8, 12, 0, 0, 0, 0, 1, 0]' : 1.0258}", "{'[3, 2, 0, 0, 0, 4, 1, 1, 11, 0, 8, 12, 0, 0, 0, 0, 1, 0]' : 1.02987}", "{'[3, 2, 0, 0, 0, 4, 1, 1, 11, 0, 8, 12, 0, 0, 0, 0, 1, 0]' : 1.02568}", "{'[3, 2, 0, 0, 0, 4, 1, 1, 11, 0, 8, 12, 0, 0, 0, 0, 1, 0]' : 1.03263}", "{'[3, 2, 0, 0, 0, 4, 1, 1, 11, 0, 8, 12, 0, 0, 0, 0, 1, 0]' : 1.03604}", "{'[3, 2, 0, 0, 0, 4, 1, 1, 11, 0, 8, 12, 0, 0, 0, 0, 1, 0]' : 1.03932}", "{'[3, 2, 0, 0, 0, 4, 1, 1, 11, 0, 8, 12, 0, 0, 0, 0, 1, 0]' : 1.04013}", "{'[3, 2, 0, 0, 0, 4, 1, 1, 11, 0, 8, 12, 0, 0, 0, 0, 1, 0]' : 1.0381}", "{'[3, 2, 0, 0, 0, 4, 1, 1, 11, 0, 8, 12, 0, 0, 0, 0, 1, 0]' : 1.03039}", "{'[3, 2, 0, 0, 0, 4, 1, 1, 11, 0, 8, 12, 0, 0, 0, 0, 1, 0]' : 1.03065}", "{'[3, 2, 0, 0, 0, 4, 1, 1, 11, 0, 8, 12, 0, 0, 0, 0, 1, 0]' : 1.02941}"]
returning from 'run': {'[3, 2, 0, 0, 0, 4, 1, 1, 11, 0, 8, 12, 0, 0, 0, 0, 1, 0]': ([1.03602, 1.04394, 1.03571, 1.0298, 1.0273, 1.03322, 1.04236, 1.03275, 1.05256, 1.03621, 1.03917, 1.03224, 1.06707, 1.0649, 1.04864, 1.04463, 1.05473, 1.03644, 1.0422, 1.0258, 1.02987, 1.02568, 1.03263, 1.03604, 1.03932, 1.04013, 1.0381, 1.03039, 1.03065, 1.02941], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 2, 0, 0, 0, 4, 1, 1, 11, 0, 8, 12, 0, 0, 0, 0, 1, 0]': ([1.03602, 1.04394, 1.03571, 1.0298, 1.0273, 1.03322, 1.04236, 1.03275, 1.05256, 1.03621, 1.03917, 1.03224, 1.06707, 1.0649, 1.04864, 1.04463, 1.05473, 1.03644, 1.0422, 1.0258, 1.02987, 1.02568, 1.03263, 1.03604, 1.03932, 1.04013, 1.0381, 1.03039, 1.03065, 1.02941], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = kkk
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	5
        Additions: 		156
        Multiplications: 	44
        Divisions: 		0
        Logical: 		0
        Reads: 			342
        Writes: 		63
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest6.exe __orio_perftest6.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest6.exe  
Program Test Output: 
{'[2, 6, 5, 2, 0, 3, 1, 0, 11, 0, 1, 12, 0, 1, 0, 0, 0, 1]' : 0.717301}
{'[2, 6, 5, 2, 0, 3, 1, 0, 11, 0, 1, 12, 0, 1, 0, 0, 0, 1]' : 0.729052}
{'[2, 6, 5, 2, 0, 3, 1, 0, 11, 0, 1, 12, 0, 1, 0, 0, 0, 1]' : 0.690898}
{'[2, 6, 5, 2, 0, 3, 1, 0, 11, 0, 1, 12, 0, 1, 0, 0, 0, 1]' : 0.709819}
{'[2, 6, 5, 2, 0, 3, 1, 0, 11, 0, 1, 12, 0, 1, 0, 0, 0, 1]' : 0.708825}
{'[2, 6, 5, 2, 0, 3, 1, 0, 11, 0, 1, 12, 0, 1, 0, 0, 0, 1]' : 0.693278}
{'[2, 6, 5, 2, 0, 3, 1, 0, 11, 0, 1, 12, 0, 1, 0, 0, 0, 1]' : 0.692013}
{'[2, 6, 5, 2, 0, 3, 1, 0, 11, 0, 1, 12, 0, 1, 0, 0, 0, 1]' : 0.691017}
{'[2, 6, 5, 2, 0, 3, 1, 0, 11, 0, 1, 12, 0, 1, 0, 0, 0, 1]' : 0.698923}
{'[2, 6, 5, 2, 0, 3, 1, 0, 11, 0, 1, 12, 0, 1, 0, 0, 0, 1]' : 0.7183}
{'[2, 6, 5, 2, 0, 3, 1, 0, 11, 0, 1, 12, 0, 1, 0, 0, 0, 1]' : 0.716723}
{'[2, 6, 5, 2, 0, 3, 1, 0, 11, 0, 1, 12, 0, 1, 0, 0, 0, 1]' : 0.694661}
{'[2, 6, 5, 2, 0, 3, 1, 0, 11, 0, 1, 12, 0, 1, 0, 0, 0, 1]' : 0.709065}
{'[2, 6, 5, 2, 0, 3, 1, 0, 11, 0, 1, 12, 0, 1, 0, 0, 0, 1]' : 0.699065}
{'[2, 6, 5, 2, 0, 3, 1, 0, 11, 0, 1, 12, 0, 1, 0, 0, 0, 1]' : 0.703025}
{'[2, 6, 5, 2, 0, 3, 1, 0, 11, 0, 1, 12, 0, 1, 0, 0, 0, 1]' : 0.696533}
{'[2, 6, 5, 2, 0, 3, 1, 0, 11, 0, 1, 12, 0, 1, 0, 0, 0, 1]' : 0.692218}
{'[2, 6, 5, 2, 0, 3, 1, 0, 11, 0, 1, 12, 0, 1, 0, 0, 0, 1]' : 0.735779}
{'[2, 6, 5, 2, 0, 3, 1, 0, 11, 0, 1, 12, 0, 1, 0, 0, 0, 1]' : 0.691167}
{'[2, 6, 5, 2, 0, 3, 1, 0, 11, 0, 1, 12, 0, 1, 0, 0, 0, 1]' : 0.693114}
{'[2, 6, 5, 2, 0, 3, 1, 0, 11, 0, 1, 12, 0, 1, 0, 0, 0, 1]' : 0.700335}
{'[2, 6, 5, 2, 0, 3, 1, 0, 11, 0, 1, 12, 0, 1, 0, 0, 0, 1]' : 0.692838}
{'[2, 6, 5, 2, 0, 3, 1, 0, 11, 0, 1, 12, 0, 1, 0, 0, 0, 1]' : 0.691453}
{'[2, 6, 5, 2, 0, 3, 1, 0, 11, 0, 1, 12, 0, 1, 0, 0, 0, 1]' : 0.691634}
{'[2, 6, 5, 2, 0, 3, 1, 0, 11, 0, 1, 12, 0, 1, 0, 0, 0, 1]' : 0.736077}
{'[2, 6, 5, 2, 0, 3, 1, 0, 11, 0, 1, 12, 0, 1, 0, 0, 0, 1]' : 0.724341}
{'[2, 6, 5, 2, 0, 3, 1, 0, 11, 0, 1, 12, 0, 1, 0, 0, 0, 1]' : 0.68934}
{'[2, 6, 5, 2, 0, 3, 1, 0, 11, 0, 1, 12, 0, 1, 0, 0, 0, 1]' : 0.691077}
{'[2, 6, 5, 2, 0, 3, 1, 0, 11, 0, 1, 12, 0, 1, 0, 0, 0, 1]' : 0.68961}
{'[2, 6, 5, 2, 0, 3, 1, 0, 11, 0, 1, 12, 0, 1, 0, 0, 0, 1]' : 0.693034}

out:
 ["{'[2, 6, 5, 2, 0, 3, 1, 0, 11, 0, 1, 12, 0, 1, 0, 0, 0, 1]' : 0.717301}", "{'[2, 6, 5, 2, 0, 3, 1, 0, 11, 0, 1, 12, 0, 1, 0, 0, 0, 1]' : 0.729052}", "{'[2, 6, 5, 2, 0, 3, 1, 0, 11, 0, 1, 12, 0, 1, 0, 0, 0, 1]' : 0.690898}", "{'[2, 6, 5, 2, 0, 3, 1, 0, 11, 0, 1, 12, 0, 1, 0, 0, 0, 1]' : 0.709819}", "{'[2, 6, 5, 2, 0, 3, 1, 0, 11, 0, 1, 12, 0, 1, 0, 0, 0, 1]' : 0.708825}", "{'[2, 6, 5, 2, 0, 3, 1, 0, 11, 0, 1, 12, 0, 1, 0, 0, 0, 1]' : 0.693278}", "{'[2, 6, 5, 2, 0, 3, 1, 0, 11, 0, 1, 12, 0, 1, 0, 0, 0, 1]' : 0.692013}", "{'[2, 6, 5, 2, 0, 3, 1, 0, 11, 0, 1, 12, 0, 1, 0, 0, 0, 1]' : 0.691017}", "{'[2, 6, 5, 2, 0, 3, 1, 0, 11, 0, 1, 12, 0, 1, 0, 0, 0, 1]' : 0.698923}", "{'[2, 6, 5, 2, 0, 3, 1, 0, 11, 0, 1, 12, 0, 1, 0, 0, 0, 1]' : 0.7183}", "{'[2, 6, 5, 2, 0, 3, 1, 0, 11, 0, 1, 12, 0, 1, 0, 0, 0, 1]' : 0.716723}", "{'[2, 6, 5, 2, 0, 3, 1, 0, 11, 0, 1, 12, 0, 1, 0, 0, 0, 1]' : 0.694661}", "{'[2, 6, 5, 2, 0, 3, 1, 0, 11, 0, 1, 12, 0, 1, 0, 0, 0, 1]' : 0.709065}", "{'[2, 6, 5, 2, 0, 3, 1, 0, 11, 0, 1, 12, 0, 1, 0, 0, 0, 1]' : 0.699065}", "{'[2, 6, 5, 2, 0, 3, 1, 0, 11, 0, 1, 12, 0, 1, 0, 0, 0, 1]' : 0.703025}", "{'[2, 6, 5, 2, 0, 3, 1, 0, 11, 0, 1, 12, 0, 1, 0, 0, 0, 1]' : 0.696533}", "{'[2, 6, 5, 2, 0, 3, 1, 0, 11, 0, 1, 12, 0, 1, 0, 0, 0, 1]' : 0.692218}", "{'[2, 6, 5, 2, 0, 3, 1, 0, 11, 0, 1, 12, 0, 1, 0, 0, 0, 1]' : 0.735779}", "{'[2, 6, 5, 2, 0, 3, 1, 0, 11, 0, 1, 12, 0, 1, 0, 0, 0, 1]' : 0.691167}", "{'[2, 6, 5, 2, 0, 3, 1, 0, 11, 0, 1, 12, 0, 1, 0, 0, 0, 1]' : 0.693114}", "{'[2, 6, 5, 2, 0, 3, 1, 0, 11, 0, 1, 12, 0, 1, 0, 0, 0, 1]' : 0.700335}", "{'[2, 6, 5, 2, 0, 3, 1, 0, 11, 0, 1, 12, 0, 1, 0, 0, 0, 1]' : 0.692838}", "{'[2, 6, 5, 2, 0, 3, 1, 0, 11, 0, 1, 12, 0, 1, 0, 0, 0, 1]' : 0.691453}", "{'[2, 6, 5, 2, 0, 3, 1, 0, 11, 0, 1, 12, 0, 1, 0, 0, 0, 1]' : 0.691634}", "{'[2, 6, 5, 2, 0, 3, 1, 0, 11, 0, 1, 12, 0, 1, 0, 0, 0, 1]' : 0.736077}", "{'[2, 6, 5, 2, 0, 3, 1, 0, 11, 0, 1, 12, 0, 1, 0, 0, 0, 1]' : 0.724341}", "{'[2, 6, 5, 2, 0, 3, 1, 0, 11, 0, 1, 12, 0, 1, 0, 0, 0, 1]' : 0.68934}", "{'[2, 6, 5, 2, 0, 3, 1, 0, 11, 0, 1, 12, 0, 1, 0, 0, 0, 1]' : 0.691077}", "{'[2, 6, 5, 2, 0, 3, 1, 0, 11, 0, 1, 12, 0, 1, 0, 0, 0, 1]' : 0.68961}", "{'[2, 6, 5, 2, 0, 3, 1, 0, 11, 0, 1, 12, 0, 1, 0, 0, 0, 1]' : 0.693034}"]
returning from 'run': {'[2, 6, 5, 2, 0, 3, 1, 0, 11, 0, 1, 12, 0, 1, 0, 0, 0, 1]': ([0.717301, 0.729052, 0.690898, 0.709819, 0.708825, 0.693278, 0.692013, 0.691017, 0.698923, 0.7183, 0.716723, 0.694661, 0.709065, 0.699065, 0.703025, 0.696533, 0.692218, 0.735779, 0.691167, 0.693114, 0.700335, 0.692838, 0.691453, 0.691634, 0.736077, 0.724341, 0.68934, 0.691077, 0.68961, 0.693034], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 6, 5, 2, 0, 3, 1, 0, 11, 0, 1, 12, 0, 1, 0, 0, 0, 1]': ([0.717301, 0.729052, 0.690898, 0.709819, 0.708825, 0.693278, 0.692013, 0.691017, 0.698923, 0.7183, 0.716723, 0.694661, 0.709065, 0.699065, 0.703025, 0.696533, 0.692218, 0.735779, 0.691167, 0.693114, 0.700335, 0.692838, 0.691453, 0.691634, 0.736077, 0.724341, 0.68934, 0.691077, 0.68961, 0.693034], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	63
        Max loop nest depth: 	4
        Additions: 		5954
        Multiplications: 	2444
        Divisions: 		0
        Logical: 		0
        Reads: 			11871
        Writes: 		2296
        Comparisons:		63
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest7.exe __orio_perftest7.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest7.exe  
Program Test Output: 
{'[2, 0, 0, 0, 0, 5, 1, 0, 11, 24, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.450344}
{'[2, 0, 0, 0, 0, 5, 1, 0, 11, 24, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.449858}
{'[2, 0, 0, 0, 0, 5, 1, 0, 11, 24, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.450181}
{'[2, 0, 0, 0, 0, 5, 1, 0, 11, 24, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.451337}
{'[2, 0, 0, 0, 0, 5, 1, 0, 11, 24, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.450593}
{'[2, 0, 0, 0, 0, 5, 1, 0, 11, 24, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.450152}
{'[2, 0, 0, 0, 0, 5, 1, 0, 11, 24, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.451247}
{'[2, 0, 0, 0, 0, 5, 1, 0, 11, 24, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.450413}
{'[2, 0, 0, 0, 0, 5, 1, 0, 11, 24, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.451134}
{'[2, 0, 0, 0, 0, 5, 1, 0, 11, 24, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.450416}
{'[2, 0, 0, 0, 0, 5, 1, 0, 11, 24, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.451502}
{'[2, 0, 0, 0, 0, 5, 1, 0, 11, 24, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.450483}
{'[2, 0, 0, 0, 0, 5, 1, 0, 11, 24, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.45076}
{'[2, 0, 0, 0, 0, 5, 1, 0, 11, 24, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.45081}
{'[2, 0, 0, 0, 0, 5, 1, 0, 11, 24, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.451359}
{'[2, 0, 0, 0, 0, 5, 1, 0, 11, 24, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.451771}
{'[2, 0, 0, 0, 0, 5, 1, 0, 11, 24, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.451364}
{'[2, 0, 0, 0, 0, 5, 1, 0, 11, 24, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.451249}
{'[2, 0, 0, 0, 0, 5, 1, 0, 11, 24, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.451906}
{'[2, 0, 0, 0, 0, 5, 1, 0, 11, 24, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.451858}
{'[2, 0, 0, 0, 0, 5, 1, 0, 11, 24, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.450352}
{'[2, 0, 0, 0, 0, 5, 1, 0, 11, 24, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.453499}
{'[2, 0, 0, 0, 0, 5, 1, 0, 11, 24, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.449738}
{'[2, 0, 0, 0, 0, 5, 1, 0, 11, 24, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.451995}
{'[2, 0, 0, 0, 0, 5, 1, 0, 11, 24, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.451729}
{'[2, 0, 0, 0, 0, 5, 1, 0, 11, 24, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.450951}
{'[2, 0, 0, 0, 0, 5, 1, 0, 11, 24, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.452269}
{'[2, 0, 0, 0, 0, 5, 1, 0, 11, 24, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.451253}
{'[2, 0, 0, 0, 0, 5, 1, 0, 11, 24, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.452631}
{'[2, 0, 0, 0, 0, 5, 1, 0, 11, 24, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.45465}

out:
 ["{'[2, 0, 0, 0, 0, 5, 1, 0, 11, 24, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.450344}", "{'[2, 0, 0, 0, 0, 5, 1, 0, 11, 24, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.449858}", "{'[2, 0, 0, 0, 0, 5, 1, 0, 11, 24, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.450181}", "{'[2, 0, 0, 0, 0, 5, 1, 0, 11, 24, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.451337}", "{'[2, 0, 0, 0, 0, 5, 1, 0, 11, 24, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.450593}", "{'[2, 0, 0, 0, 0, 5, 1, 0, 11, 24, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.450152}", "{'[2, 0, 0, 0, 0, 5, 1, 0, 11, 24, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.451247}", "{'[2, 0, 0, 0, 0, 5, 1, 0, 11, 24, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.450413}", "{'[2, 0, 0, 0, 0, 5, 1, 0, 11, 24, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.451134}", "{'[2, 0, 0, 0, 0, 5, 1, 0, 11, 24, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.450416}", "{'[2, 0, 0, 0, 0, 5, 1, 0, 11, 24, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.451502}", "{'[2, 0, 0, 0, 0, 5, 1, 0, 11, 24, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.450483}", "{'[2, 0, 0, 0, 0, 5, 1, 0, 11, 24, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.45076}", "{'[2, 0, 0, 0, 0, 5, 1, 0, 11, 24, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.45081}", "{'[2, 0, 0, 0, 0, 5, 1, 0, 11, 24, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.451359}", "{'[2, 0, 0, 0, 0, 5, 1, 0, 11, 24, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.451771}", "{'[2, 0, 0, 0, 0, 5, 1, 0, 11, 24, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.451364}", "{'[2, 0, 0, 0, 0, 5, 1, 0, 11, 24, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.451249}", "{'[2, 0, 0, 0, 0, 5, 1, 0, 11, 24, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.451906}", "{'[2, 0, 0, 0, 0, 5, 1, 0, 11, 24, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.451858}", "{'[2, 0, 0, 0, 0, 5, 1, 0, 11, 24, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.450352}", "{'[2, 0, 0, 0, 0, 5, 1, 0, 11, 24, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.453499}", "{'[2, 0, 0, 0, 0, 5, 1, 0, 11, 24, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.449738}", "{'[2, 0, 0, 0, 0, 5, 1, 0, 11, 24, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.451995}", "{'[2, 0, 0, 0, 0, 5, 1, 0, 11, 24, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.451729}", "{'[2, 0, 0, 0, 0, 5, 1, 0, 11, 24, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.450951}", "{'[2, 0, 0, 0, 0, 5, 1, 0, 11, 24, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.452269}", "{'[2, 0, 0, 0, 0, 5, 1, 0, 11, 24, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.451253}", "{'[2, 0, 0, 0, 0, 5, 1, 0, 11, 24, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.452631}", "{'[2, 0, 0, 0, 0, 5, 1, 0, 11, 24, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.45465}"]
returning from 'run': {'[2, 0, 0, 0, 0, 5, 1, 0, 11, 24, 0, 12, 0, 0, 2, 1, 0, 0]': ([0.450344, 0.449858, 0.450181, 0.451337, 0.450593, 0.450152, 0.451247, 0.450413, 0.451134, 0.450416, 0.451502, 0.450483, 0.45076, 0.45081, 0.451359, 0.451771, 0.451364, 0.451249, 0.451906, 0.451858, 0.450352, 0.453499, 0.449738, 0.451995, 0.451729, 0.450951, 0.452269, 0.451253, 0.452631, 0.45465], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 0, 0, 0, 5, 1, 0, 11, 24, 0, 12, 0, 0, 2, 1, 0, 0]': ([0.450344, 0.449858, 0.450181, 0.451337, 0.450593, 0.450152, 0.451247, 0.450413, 0.451134, 0.450416, 0.451502, 0.450483, 0.45076, 0.45081, 0.451359, 0.451771, 0.451364, 0.451249, 0.451906, 0.451858, 0.450352, 0.453499, 0.449738, 0.451995, 0.451729, 0.450951, 0.452269, 0.451253, 0.452631, 0.45465], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		147
        Multiplications: 	32
        Divisions: 		0
        Logical: 		0
        Reads: 			340
        Writes: 		84
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest8.exe __orio_perftest8.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest8.exe  
Program Test Output: 
{'[1, 1, 4, 1, 2, 6, 1, 1, 11, 0, 7, 12, 0, 1, 1, 1, 1, 1]' : 0.776824}
{'[1, 1, 4, 1, 2, 6, 1, 1, 11, 0, 7, 12, 0, 1, 1, 1, 1, 1]' : 0.772326}
{'[1, 1, 4, 1, 2, 6, 1, 1, 11, 0, 7, 12, 0, 1, 1, 1, 1, 1]' : 0.772575}
{'[1, 1, 4, 1, 2, 6, 1, 1, 11, 0, 7, 12, 0, 1, 1, 1, 1, 1]' : 0.778156}
{'[1, 1, 4, 1, 2, 6, 1, 1, 11, 0, 7, 12, 0, 1, 1, 1, 1, 1]' : 0.785005}
{'[1, 1, 4, 1, 2, 6, 1, 1, 11, 0, 7, 12, 0, 1, 1, 1, 1, 1]' : 0.77338}
{'[1, 1, 4, 1, 2, 6, 1, 1, 11, 0, 7, 12, 0, 1, 1, 1, 1, 1]' : 0.771475}
{'[1, 1, 4, 1, 2, 6, 1, 1, 11, 0, 7, 12, 0, 1, 1, 1, 1, 1]' : 0.774752}
{'[1, 1, 4, 1, 2, 6, 1, 1, 11, 0, 7, 12, 0, 1, 1, 1, 1, 1]' : 0.768728}
{'[1, 1, 4, 1, 2, 6, 1, 1, 11, 0, 7, 12, 0, 1, 1, 1, 1, 1]' : 0.773068}
{'[1, 1, 4, 1, 2, 6, 1, 1, 11, 0, 7, 12, 0, 1, 1, 1, 1, 1]' : 0.771422}
{'[1, 1, 4, 1, 2, 6, 1, 1, 11, 0, 7, 12, 0, 1, 1, 1, 1, 1]' : 0.769236}
{'[1, 1, 4, 1, 2, 6, 1, 1, 11, 0, 7, 12, 0, 1, 1, 1, 1, 1]' : 0.771419}
{'[1, 1, 4, 1, 2, 6, 1, 1, 11, 0, 7, 12, 0, 1, 1, 1, 1, 1]' : 0.771715}
{'[1, 1, 4, 1, 2, 6, 1, 1, 11, 0, 7, 12, 0, 1, 1, 1, 1, 1]' : 0.775845}
{'[1, 1, 4, 1, 2, 6, 1, 1, 11, 0, 7, 12, 0, 1, 1, 1, 1, 1]' : 0.775046}
{'[1, 1, 4, 1, 2, 6, 1, 1, 11, 0, 7, 12, 0, 1, 1, 1, 1, 1]' : 0.770502}
{'[1, 1, 4, 1, 2, 6, 1, 1, 11, 0, 7, 12, 0, 1, 1, 1, 1, 1]' : 0.792868}
{'[1, 1, 4, 1, 2, 6, 1, 1, 11, 0, 7, 12, 0, 1, 1, 1, 1, 1]' : 0.830499}
{'[1, 1, 4, 1, 2, 6, 1, 1, 11, 0, 7, 12, 0, 1, 1, 1, 1, 1]' : 0.772571}
{'[1, 1, 4, 1, 2, 6, 1, 1, 11, 0, 7, 12, 0, 1, 1, 1, 1, 1]' : 0.778201}
{'[1, 1, 4, 1, 2, 6, 1, 1, 11, 0, 7, 12, 0, 1, 1, 1, 1, 1]' : 0.789605}
{'[1, 1, 4, 1, 2, 6, 1, 1, 11, 0, 7, 12, 0, 1, 1, 1, 1, 1]' : 0.778765}
{'[1, 1, 4, 1, 2, 6, 1, 1, 11, 0, 7, 12, 0, 1, 1, 1, 1, 1]' : 0.775695}
{'[1, 1, 4, 1, 2, 6, 1, 1, 11, 0, 7, 12, 0, 1, 1, 1, 1, 1]' : 0.77865}
{'[1, 1, 4, 1, 2, 6, 1, 1, 11, 0, 7, 12, 0, 1, 1, 1, 1, 1]' : 0.78105}
{'[1, 1, 4, 1, 2, 6, 1, 1, 11, 0, 7, 12, 0, 1, 1, 1, 1, 1]' : 0.77231}
{'[1, 1, 4, 1, 2, 6, 1, 1, 11, 0, 7, 12, 0, 1, 1, 1, 1, 1]' : 0.776821}
{'[1, 1, 4, 1, 2, 6, 1, 1, 11, 0, 7, 12, 0, 1, 1, 1, 1, 1]' : 0.78536}
{'[1, 1, 4, 1, 2, 6, 1, 1, 11, 0, 7, 12, 0, 1, 1, 1, 1, 1]' : 0.816651}

out:
 ["{'[1, 1, 4, 1, 2, 6, 1, 1, 11, 0, 7, 12, 0, 1, 1, 1, 1, 1]' : 0.776824}", "{'[1, 1, 4, 1, 2, 6, 1, 1, 11, 0, 7, 12, 0, 1, 1, 1, 1, 1]' : 0.772326}", "{'[1, 1, 4, 1, 2, 6, 1, 1, 11, 0, 7, 12, 0, 1, 1, 1, 1, 1]' : 0.772575}", "{'[1, 1, 4, 1, 2, 6, 1, 1, 11, 0, 7, 12, 0, 1, 1, 1, 1, 1]' : 0.778156}", "{'[1, 1, 4, 1, 2, 6, 1, 1, 11, 0, 7, 12, 0, 1, 1, 1, 1, 1]' : 0.785005}", "{'[1, 1, 4, 1, 2, 6, 1, 1, 11, 0, 7, 12, 0, 1, 1, 1, 1, 1]' : 0.77338}", "{'[1, 1, 4, 1, 2, 6, 1, 1, 11, 0, 7, 12, 0, 1, 1, 1, 1, 1]' : 0.771475}", "{'[1, 1, 4, 1, 2, 6, 1, 1, 11, 0, 7, 12, 0, 1, 1, 1, 1, 1]' : 0.774752}", "{'[1, 1, 4, 1, 2, 6, 1, 1, 11, 0, 7, 12, 0, 1, 1, 1, 1, 1]' : 0.768728}", "{'[1, 1, 4, 1, 2, 6, 1, 1, 11, 0, 7, 12, 0, 1, 1, 1, 1, 1]' : 0.773068}", "{'[1, 1, 4, 1, 2, 6, 1, 1, 11, 0, 7, 12, 0, 1, 1, 1, 1, 1]' : 0.771422}", "{'[1, 1, 4, 1, 2, 6, 1, 1, 11, 0, 7, 12, 0, 1, 1, 1, 1, 1]' : 0.769236}", "{'[1, 1, 4, 1, 2, 6, 1, 1, 11, 0, 7, 12, 0, 1, 1, 1, 1, 1]' : 0.771419}", "{'[1, 1, 4, 1, 2, 6, 1, 1, 11, 0, 7, 12, 0, 1, 1, 1, 1, 1]' : 0.771715}", "{'[1, 1, 4, 1, 2, 6, 1, 1, 11, 0, 7, 12, 0, 1, 1, 1, 1, 1]' : 0.775845}", "{'[1, 1, 4, 1, 2, 6, 1, 1, 11, 0, 7, 12, 0, 1, 1, 1, 1, 1]' : 0.775046}", "{'[1, 1, 4, 1, 2, 6, 1, 1, 11, 0, 7, 12, 0, 1, 1, 1, 1, 1]' : 0.770502}", "{'[1, 1, 4, 1, 2, 6, 1, 1, 11, 0, 7, 12, 0, 1, 1, 1, 1, 1]' : 0.792868}", "{'[1, 1, 4, 1, 2, 6, 1, 1, 11, 0, 7, 12, 0, 1, 1, 1, 1, 1]' : 0.830499}", "{'[1, 1, 4, 1, 2, 6, 1, 1, 11, 0, 7, 12, 0, 1, 1, 1, 1, 1]' : 0.772571}", "{'[1, 1, 4, 1, 2, 6, 1, 1, 11, 0, 7, 12, 0, 1, 1, 1, 1, 1]' : 0.778201}", "{'[1, 1, 4, 1, 2, 6, 1, 1, 11, 0, 7, 12, 0, 1, 1, 1, 1, 1]' : 0.789605}", "{'[1, 1, 4, 1, 2, 6, 1, 1, 11, 0, 7, 12, 0, 1, 1, 1, 1, 1]' : 0.778765}", "{'[1, 1, 4, 1, 2, 6, 1, 1, 11, 0, 7, 12, 0, 1, 1, 1, 1, 1]' : 0.775695}", "{'[1, 1, 4, 1, 2, 6, 1, 1, 11, 0, 7, 12, 0, 1, 1, 1, 1, 1]' : 0.77865}", "{'[1, 1, 4, 1, 2, 6, 1, 1, 11, 0, 7, 12, 0, 1, 1, 1, 1, 1]' : 0.78105}", "{'[1, 1, 4, 1, 2, 6, 1, 1, 11, 0, 7, 12, 0, 1, 1, 1, 1, 1]' : 0.77231}", "{'[1, 1, 4, 1, 2, 6, 1, 1, 11, 0, 7, 12, 0, 1, 1, 1, 1, 1]' : 0.776821}", "{'[1, 1, 4, 1, 2, 6, 1, 1, 11, 0, 7, 12, 0, 1, 1, 1, 1, 1]' : 0.78536}", "{'[1, 1, 4, 1, 2, 6, 1, 1, 11, 0, 7, 12, 0, 1, 1, 1, 1, 1]' : 0.816651}"]
returning from 'run': {'[1, 1, 4, 1, 2, 6, 1, 1, 11, 0, 7, 12, 0, 1, 1, 1, 1, 1]': ([0.776824, 0.772326, 0.772575, 0.778156, 0.785005, 0.77338, 0.771475, 0.774752, 0.768728, 0.773068, 0.771422, 0.769236, 0.771419, 0.771715, 0.775845, 0.775046, 0.770502, 0.792868, 0.830499, 0.772571, 0.778201, 0.789605, 0.778765, 0.775695, 0.77865, 0.78105, 0.77231, 0.776821, 0.78536, 0.816651], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 1, 4, 1, 2, 6, 1, 1, 11, 0, 7, 12, 0, 1, 1, 1, 1, 1]': ([0.776824, 0.772326, 0.772575, 0.778156, 0.785005, 0.77338, 0.771475, 0.774752, 0.768728, 0.773068, 0.771422, 0.769236, 0.771419, 0.771715, 0.775845, 0.775046, 0.770502, 0.792868, 0.830499, 0.772571, 0.778201, 0.789605, 0.778765, 0.775695, 0.77865, 0.78105, 0.77231, 0.776821, 0.78536, 0.816651], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	5
        Additions: 		5541
        Multiplications: 	1584
        Divisions: 		0
        Logical: 		0
        Reads: 			8447
        Writes: 		854
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest9.exe __orio_perftest9.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest9.exe  
Program Test Output: 
{'[5, 0, 2, 0, 2, 5, 1, 0, 11, 0, 8, 12, 2, 0, 0, 0, 1, 0]' : 0.550383}
{'[5, 0, 2, 0, 2, 5, 1, 0, 11, 0, 8, 12, 2, 0, 0, 0, 1, 0]' : 0.552202}
{'[5, 0, 2, 0, 2, 5, 1, 0, 11, 0, 8, 12, 2, 0, 0, 0, 1, 0]' : 0.564844}
{'[5, 0, 2, 0, 2, 5, 1, 0, 11, 0, 8, 12, 2, 0, 0, 0, 1, 0]' : 0.558422}
{'[5, 0, 2, 0, 2, 5, 1, 0, 11, 0, 8, 12, 2, 0, 0, 0, 1, 0]' : 0.563239}
{'[5, 0, 2, 0, 2, 5, 1, 0, 11, 0, 8, 12, 2, 0, 0, 0, 1, 0]' : 0.560264}
{'[5, 0, 2, 0, 2, 5, 1, 0, 11, 0, 8, 12, 2, 0, 0, 0, 1, 0]' : 0.556716}
{'[5, 0, 2, 0, 2, 5, 1, 0, 11, 0, 8, 12, 2, 0, 0, 0, 1, 0]' : 0.560708}
{'[5, 0, 2, 0, 2, 5, 1, 0, 11, 0, 8, 12, 2, 0, 0, 0, 1, 0]' : 0.561208}
{'[5, 0, 2, 0, 2, 5, 1, 0, 11, 0, 8, 12, 2, 0, 0, 0, 1, 0]' : 0.559488}
{'[5, 0, 2, 0, 2, 5, 1, 0, 11, 0, 8, 12, 2, 0, 0, 0, 1, 0]' : 0.559312}
{'[5, 0, 2, 0, 2, 5, 1, 0, 11, 0, 8, 12, 2, 0, 0, 0, 1, 0]' : 0.561195}
{'[5, 0, 2, 0, 2, 5, 1, 0, 11, 0, 8, 12, 2, 0, 0, 0, 1, 0]' : 0.560381}
{'[5, 0, 2, 0, 2, 5, 1, 0, 11, 0, 8, 12, 2, 0, 0, 0, 1, 0]' : 0.558791}
{'[5, 0, 2, 0, 2, 5, 1, 0, 11, 0, 8, 12, 2, 0, 0, 0, 1, 0]' : 0.558462}
{'[5, 0, 2, 0, 2, 5, 1, 0, 11, 0, 8, 12, 2, 0, 0, 0, 1, 0]' : 0.55816}
{'[5, 0, 2, 0, 2, 5, 1, 0, 11, 0, 8, 12, 2, 0, 0, 0, 1, 0]' : 0.560045}
{'[5, 0, 2, 0, 2, 5, 1, 0, 11, 0, 8, 12, 2, 0, 0, 0, 1, 0]' : 0.561938}
{'[5, 0, 2, 0, 2, 5, 1, 0, 11, 0, 8, 12, 2, 0, 0, 0, 1, 0]' : 0.560781}
{'[5, 0, 2, 0, 2, 5, 1, 0, 11, 0, 8, 12, 2, 0, 0, 0, 1, 0]' : 0.561396}
{'[5, 0, 2, 0, 2, 5, 1, 0, 11, 0, 8, 12, 2, 0, 0, 0, 1, 0]' : 0.562169}
{'[5, 0, 2, 0, 2, 5, 1, 0, 11, 0, 8, 12, 2, 0, 0, 0, 1, 0]' : 0.559879}
{'[5, 0, 2, 0, 2, 5, 1, 0, 11, 0, 8, 12, 2, 0, 0, 0, 1, 0]' : 0.556948}
{'[5, 0, 2, 0, 2, 5, 1, 0, 11, 0, 8, 12, 2, 0, 0, 0, 1, 0]' : 0.558579}
{'[5, 0, 2, 0, 2, 5, 1, 0, 11, 0, 8, 12, 2, 0, 0, 0, 1, 0]' : 0.556029}
{'[5, 0, 2, 0, 2, 5, 1, 0, 11, 0, 8, 12, 2, 0, 0, 0, 1, 0]' : 0.557498}
{'[5, 0, 2, 0, 2, 5, 1, 0, 11, 0, 8, 12, 2, 0, 0, 0, 1, 0]' : 0.559971}
{'[5, 0, 2, 0, 2, 5, 1, 0, 11, 0, 8, 12, 2, 0, 0, 0, 1, 0]' : 0.5584}
{'[5, 0, 2, 0, 2, 5, 1, 0, 11, 0, 8, 12, 2, 0, 0, 0, 1, 0]' : 0.559904}
{'[5, 0, 2, 0, 2, 5, 1, 0, 11, 0, 8, 12, 2, 0, 0, 0, 1, 0]' : 0.559989}

out:
 ["{'[5, 0, 2, 0, 2, 5, 1, 0, 11, 0, 8, 12, 2, 0, 0, 0, 1, 0]' : 0.550383}", "{'[5, 0, 2, 0, 2, 5, 1, 0, 11, 0, 8, 12, 2, 0, 0, 0, 1, 0]' : 0.552202}", "{'[5, 0, 2, 0, 2, 5, 1, 0, 11, 0, 8, 12, 2, 0, 0, 0, 1, 0]' : 0.564844}", "{'[5, 0, 2, 0, 2, 5, 1, 0, 11, 0, 8, 12, 2, 0, 0, 0, 1, 0]' : 0.558422}", "{'[5, 0, 2, 0, 2, 5, 1, 0, 11, 0, 8, 12, 2, 0, 0, 0, 1, 0]' : 0.563239}", "{'[5, 0, 2, 0, 2, 5, 1, 0, 11, 0, 8, 12, 2, 0, 0, 0, 1, 0]' : 0.560264}", "{'[5, 0, 2, 0, 2, 5, 1, 0, 11, 0, 8, 12, 2, 0, 0, 0, 1, 0]' : 0.556716}", "{'[5, 0, 2, 0, 2, 5, 1, 0, 11, 0, 8, 12, 2, 0, 0, 0, 1, 0]' : 0.560708}", "{'[5, 0, 2, 0, 2, 5, 1, 0, 11, 0, 8, 12, 2, 0, 0, 0, 1, 0]' : 0.561208}", "{'[5, 0, 2, 0, 2, 5, 1, 0, 11, 0, 8, 12, 2, 0, 0, 0, 1, 0]' : 0.559488}", "{'[5, 0, 2, 0, 2, 5, 1, 0, 11, 0, 8, 12, 2, 0, 0, 0, 1, 0]' : 0.559312}", "{'[5, 0, 2, 0, 2, 5, 1, 0, 11, 0, 8, 12, 2, 0, 0, 0, 1, 0]' : 0.561195}", "{'[5, 0, 2, 0, 2, 5, 1, 0, 11, 0, 8, 12, 2, 0, 0, 0, 1, 0]' : 0.560381}", "{'[5, 0, 2, 0, 2, 5, 1, 0, 11, 0, 8, 12, 2, 0, 0, 0, 1, 0]' : 0.558791}", "{'[5, 0, 2, 0, 2, 5, 1, 0, 11, 0, 8, 12, 2, 0, 0, 0, 1, 0]' : 0.558462}", "{'[5, 0, 2, 0, 2, 5, 1, 0, 11, 0, 8, 12, 2, 0, 0, 0, 1, 0]' : 0.55816}", "{'[5, 0, 2, 0, 2, 5, 1, 0, 11, 0, 8, 12, 2, 0, 0, 0, 1, 0]' : 0.560045}", "{'[5, 0, 2, 0, 2, 5, 1, 0, 11, 0, 8, 12, 2, 0, 0, 0, 1, 0]' : 0.561938}", "{'[5, 0, 2, 0, 2, 5, 1, 0, 11, 0, 8, 12, 2, 0, 0, 0, 1, 0]' : 0.560781}", "{'[5, 0, 2, 0, 2, 5, 1, 0, 11, 0, 8, 12, 2, 0, 0, 0, 1, 0]' : 0.561396}", "{'[5, 0, 2, 0, 2, 5, 1, 0, 11, 0, 8, 12, 2, 0, 0, 0, 1, 0]' : 0.562169}", "{'[5, 0, 2, 0, 2, 5, 1, 0, 11, 0, 8, 12, 2, 0, 0, 0, 1, 0]' : 0.559879}", "{'[5, 0, 2, 0, 2, 5, 1, 0, 11, 0, 8, 12, 2, 0, 0, 0, 1, 0]' : 0.556948}", "{'[5, 0, 2, 0, 2, 5, 1, 0, 11, 0, 8, 12, 2, 0, 0, 0, 1, 0]' : 0.558579}", "{'[5, 0, 2, 0, 2, 5, 1, 0, 11, 0, 8, 12, 2, 0, 0, 0, 1, 0]' : 0.556029}", "{'[5, 0, 2, 0, 2, 5, 1, 0, 11, 0, 8, 12, 2, 0, 0, 0, 1, 0]' : 0.557498}", "{'[5, 0, 2, 0, 2, 5, 1, 0, 11, 0, 8, 12, 2, 0, 0, 0, 1, 0]' : 0.559971}", "{'[5, 0, 2, 0, 2, 5, 1, 0, 11, 0, 8, 12, 2, 0, 0, 0, 1, 0]' : 0.5584}", "{'[5, 0, 2, 0, 2, 5, 1, 0, 11, 0, 8, 12, 2, 0, 0, 0, 1, 0]' : 0.559904}", "{'[5, 0, 2, 0, 2, 5, 1, 0, 11, 0, 8, 12, 2, 0, 0, 0, 1, 0]' : 0.559989}"]
returning from 'run': {'[5, 0, 2, 0, 2, 5, 1, 0, 11, 0, 8, 12, 2, 0, 0, 0, 1, 0]': ([0.550383, 0.552202, 0.564844, 0.558422, 0.563239, 0.560264, 0.556716, 0.560708, 0.561208, 0.559488, 0.559312, 0.561195, 0.560381, 0.558791, 0.558462, 0.55816, 0.560045, 0.561938, 0.560781, 0.561396, 0.562169, 0.559879, 0.556948, 0.558579, 0.556029, 0.557498, 0.559971, 0.5584, 0.559904, 0.559989], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 0, 2, 0, 2, 5, 1, 0, 11, 0, 8, 12, 2, 0, 0, 0, 1, 0]': ([0.550383, 0.552202, 0.564844, 0.558422, 0.563239, 0.560264, 0.556716, 0.560708, 0.561208, 0.559488, 0.559312, 0.561195, 0.560381, 0.558791, 0.558462, 0.55816, 0.560045, 0.561938, 0.560781, 0.561396, 0.562169, 0.559879, 0.556948, 0.558579, 0.556029, 0.557498, 0.559971, 0.5584, 0.559904, 0.559989], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	26
        Max loop nest depth: 	6
        Additions: 		1259
        Multiplications: 	352
        Divisions: 		0
        Logical: 		0
        Reads: 			2094
        Writes: 		260
        Comparisons:		26
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest10.exe __orio_perftest10.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest10.exe  
Program Test Output: 
{'[2, 4, 0, 6, 4, 1, 1, 0, 11, 6, 0, 12, 0, 1, 0, 0, 1, 0]' : 0.409429}
{'[2, 4, 0, 6, 4, 1, 1, 0, 11, 6, 0, 12, 0, 1, 0, 0, 1, 0]' : 0.408917}
{'[2, 4, 0, 6, 4, 1, 1, 0, 11, 6, 0, 12, 0, 1, 0, 0, 1, 0]' : 0.409848}
{'[2, 4, 0, 6, 4, 1, 1, 0, 11, 6, 0, 12, 0, 1, 0, 0, 1, 0]' : 0.40848}
{'[2, 4, 0, 6, 4, 1, 1, 0, 11, 6, 0, 12, 0, 1, 0, 0, 1, 0]' : 0.408426}
{'[2, 4, 0, 6, 4, 1, 1, 0, 11, 6, 0, 12, 0, 1, 0, 0, 1, 0]' : 0.408844}
{'[2, 4, 0, 6, 4, 1, 1, 0, 11, 6, 0, 12, 0, 1, 0, 0, 1, 0]' : 0.412534}
{'[2, 4, 0, 6, 4, 1, 1, 0, 11, 6, 0, 12, 0, 1, 0, 0, 1, 0]' : 0.431242}
{'[2, 4, 0, 6, 4, 1, 1, 0, 11, 6, 0, 12, 0, 1, 0, 0, 1, 0]' : 0.435762}
{'[2, 4, 0, 6, 4, 1, 1, 0, 11, 6, 0, 12, 0, 1, 0, 0, 1, 0]' : 0.431495}
{'[2, 4, 0, 6, 4, 1, 1, 0, 11, 6, 0, 12, 0, 1, 0, 0, 1, 0]' : 0.422282}
{'[2, 4, 0, 6, 4, 1, 1, 0, 11, 6, 0, 12, 0, 1, 0, 0, 1, 0]' : 0.413444}
{'[2, 4, 0, 6, 4, 1, 1, 0, 11, 6, 0, 12, 0, 1, 0, 0, 1, 0]' : 0.418946}
{'[2, 4, 0, 6, 4, 1, 1, 0, 11, 6, 0, 12, 0, 1, 0, 0, 1, 0]' : 0.409651}
{'[2, 4, 0, 6, 4, 1, 1, 0, 11, 6, 0, 12, 0, 1, 0, 0, 1, 0]' : 0.412583}
{'[2, 4, 0, 6, 4, 1, 1, 0, 11, 6, 0, 12, 0, 1, 0, 0, 1, 0]' : 0.47571}
{'[2, 4, 0, 6, 4, 1, 1, 0, 11, 6, 0, 12, 0, 1, 0, 0, 1, 0]' : 0.492099}
{'[2, 4, 0, 6, 4, 1, 1, 0, 11, 6, 0, 12, 0, 1, 0, 0, 1, 0]' : 0.458253}
{'[2, 4, 0, 6, 4, 1, 1, 0, 11, 6, 0, 12, 0, 1, 0, 0, 1, 0]' : 0.458544}
{'[2, 4, 0, 6, 4, 1, 1, 0, 11, 6, 0, 12, 0, 1, 0, 0, 1, 0]' : 0.428897}
{'[2, 4, 0, 6, 4, 1, 1, 0, 11, 6, 0, 12, 0, 1, 0, 0, 1, 0]' : 0.448515}
{'[2, 4, 0, 6, 4, 1, 1, 0, 11, 6, 0, 12, 0, 1, 0, 0, 1, 0]' : 0.427156}
{'[2, 4, 0, 6, 4, 1, 1, 0, 11, 6, 0, 12, 0, 1, 0, 0, 1, 0]' : 0.453826}
{'[2, 4, 0, 6, 4, 1, 1, 0, 11, 6, 0, 12, 0, 1, 0, 0, 1, 0]' : 0.440728}
{'[2, 4, 0, 6, 4, 1, 1, 0, 11, 6, 0, 12, 0, 1, 0, 0, 1, 0]' : 0.469371}
{'[2, 4, 0, 6, 4, 1, 1, 0, 11, 6, 0, 12, 0, 1, 0, 0, 1, 0]' : 0.453205}
{'[2, 4, 0, 6, 4, 1, 1, 0, 11, 6, 0, 12, 0, 1, 0, 0, 1, 0]' : 0.441426}
{'[2, 4, 0, 6, 4, 1, 1, 0, 11, 6, 0, 12, 0, 1, 0, 0, 1, 0]' : 0.426784}
{'[2, 4, 0, 6, 4, 1, 1, 0, 11, 6, 0, 12, 0, 1, 0, 0, 1, 0]' : 0.420008}
{'[2, 4, 0, 6, 4, 1, 1, 0, 11, 6, 0, 12, 0, 1, 0, 0, 1, 0]' : 0.429765}

out:
 ["{'[2, 4, 0, 6, 4, 1, 1, 0, 11, 6, 0, 12, 0, 1, 0, 0, 1, 0]' : 0.409429}", "{'[2, 4, 0, 6, 4, 1, 1, 0, 11, 6, 0, 12, 0, 1, 0, 0, 1, 0]' : 0.408917}", "{'[2, 4, 0, 6, 4, 1, 1, 0, 11, 6, 0, 12, 0, 1, 0, 0, 1, 0]' : 0.409848}", "{'[2, 4, 0, 6, 4, 1, 1, 0, 11, 6, 0, 12, 0, 1, 0, 0, 1, 0]' : 0.40848}", "{'[2, 4, 0, 6, 4, 1, 1, 0, 11, 6, 0, 12, 0, 1, 0, 0, 1, 0]' : 0.408426}", "{'[2, 4, 0, 6, 4, 1, 1, 0, 11, 6, 0, 12, 0, 1, 0, 0, 1, 0]' : 0.408844}", "{'[2, 4, 0, 6, 4, 1, 1, 0, 11, 6, 0, 12, 0, 1, 0, 0, 1, 0]' : 0.412534}", "{'[2, 4, 0, 6, 4, 1, 1, 0, 11, 6, 0, 12, 0, 1, 0, 0, 1, 0]' : 0.431242}", "{'[2, 4, 0, 6, 4, 1, 1, 0, 11, 6, 0, 12, 0, 1, 0, 0, 1, 0]' : 0.435762}", "{'[2, 4, 0, 6, 4, 1, 1, 0, 11, 6, 0, 12, 0, 1, 0, 0, 1, 0]' : 0.431495}", "{'[2, 4, 0, 6, 4, 1, 1, 0, 11, 6, 0, 12, 0, 1, 0, 0, 1, 0]' : 0.422282}", "{'[2, 4, 0, 6, 4, 1, 1, 0, 11, 6, 0, 12, 0, 1, 0, 0, 1, 0]' : 0.413444}", "{'[2, 4, 0, 6, 4, 1, 1, 0, 11, 6, 0, 12, 0, 1, 0, 0, 1, 0]' : 0.418946}", "{'[2, 4, 0, 6, 4, 1, 1, 0, 11, 6, 0, 12, 0, 1, 0, 0, 1, 0]' : 0.409651}", "{'[2, 4, 0, 6, 4, 1, 1, 0, 11, 6, 0, 12, 0, 1, 0, 0, 1, 0]' : 0.412583}", "{'[2, 4, 0, 6, 4, 1, 1, 0, 11, 6, 0, 12, 0, 1, 0, 0, 1, 0]' : 0.47571}", "{'[2, 4, 0, 6, 4, 1, 1, 0, 11, 6, 0, 12, 0, 1, 0, 0, 1, 0]' : 0.492099}", "{'[2, 4, 0, 6, 4, 1, 1, 0, 11, 6, 0, 12, 0, 1, 0, 0, 1, 0]' : 0.458253}", "{'[2, 4, 0, 6, 4, 1, 1, 0, 11, 6, 0, 12, 0, 1, 0, 0, 1, 0]' : 0.458544}", "{'[2, 4, 0, 6, 4, 1, 1, 0, 11, 6, 0, 12, 0, 1, 0, 0, 1, 0]' : 0.428897}", "{'[2, 4, 0, 6, 4, 1, 1, 0, 11, 6, 0, 12, 0, 1, 0, 0, 1, 0]' : 0.448515}", "{'[2, 4, 0, 6, 4, 1, 1, 0, 11, 6, 0, 12, 0, 1, 0, 0, 1, 0]' : 0.427156}", "{'[2, 4, 0, 6, 4, 1, 1, 0, 11, 6, 0, 12, 0, 1, 0, 0, 1, 0]' : 0.453826}", "{'[2, 4, 0, 6, 4, 1, 1, 0, 11, 6, 0, 12, 0, 1, 0, 0, 1, 0]' : 0.440728}", "{'[2, 4, 0, 6, 4, 1, 1, 0, 11, 6, 0, 12, 0, 1, 0, 0, 1, 0]' : 0.469371}", "{'[2, 4, 0, 6, 4, 1, 1, 0, 11, 6, 0, 12, 0, 1, 0, 0, 1, 0]' : 0.453205}", "{'[2, 4, 0, 6, 4, 1, 1, 0, 11, 6, 0, 12, 0, 1, 0, 0, 1, 0]' : 0.441426}", "{'[2, 4, 0, 6, 4, 1, 1, 0, 11, 6, 0, 12, 0, 1, 0, 0, 1, 0]' : 0.426784}", "{'[2, 4, 0, 6, 4, 1, 1, 0, 11, 6, 0, 12, 0, 1, 0, 0, 1, 0]' : 0.420008}", "{'[2, 4, 0, 6, 4, 1, 1, 0, 11, 6, 0, 12, 0, 1, 0, 0, 1, 0]' : 0.429765}"]
returning from 'run': {'[2, 4, 0, 6, 4, 1, 1, 0, 11, 6, 0, 12, 0, 1, 0, 0, 1, 0]': ([0.409429, 0.408917, 0.409848, 0.40848, 0.408426, 0.408844, 0.412534, 0.431242, 0.435762, 0.431495, 0.422282, 0.413444, 0.418946, 0.409651, 0.412583, 0.47571, 0.492099, 0.458253, 0.458544, 0.428897, 0.448515, 0.427156, 0.453826, 0.440728, 0.469371, 0.453205, 0.441426, 0.426784, 0.420008, 0.429765], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 4, 0, 6, 4, 1, 1, 0, 11, 6, 0, 12, 0, 1, 0, 0, 1, 0]': ([0.409429, 0.408917, 0.409848, 0.40848, 0.408426, 0.408844, 0.412534, 0.431242, 0.435762, 0.431495, 0.422282, 0.413444, 0.418946, 0.409651, 0.412583, 0.47571, 0.492099, 0.458253, 0.458544, 0.428897, 0.448515, 0.427156, 0.453826, 0.440728, 0.469371, 0.453205, 0.441426, 0.426784, 0.420008, 0.429765], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		215
        Multiplications: 	62
        Divisions: 		0
        Logical: 		0
        Reads: 			517
        Writes: 		127
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest11.exe __orio_perftest11.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest11.exe  
Program Test Output: 
{'[1, 1, 0, 3, 5, 2, 1, 0, 11, 0, 7, 12, 0, 0, 1, 1, 0, 1]' : 0.706539}
{'[1, 1, 0, 3, 5, 2, 1, 0, 11, 0, 7, 12, 0, 0, 1, 1, 0, 1]' : 0.709757}
{'[1, 1, 0, 3, 5, 2, 1, 0, 11, 0, 7, 12, 0, 0, 1, 1, 0, 1]' : 0.705011}
{'[1, 1, 0, 3, 5, 2, 1, 0, 11, 0, 7, 12, 0, 0, 1, 1, 0, 1]' : 0.707575}
{'[1, 1, 0, 3, 5, 2, 1, 0, 11, 0, 7, 12, 0, 0, 1, 1, 0, 1]' : 0.710683}
{'[1, 1, 0, 3, 5, 2, 1, 0, 11, 0, 7, 12, 0, 0, 1, 1, 0, 1]' : 0.706914}
{'[1, 1, 0, 3, 5, 2, 1, 0, 11, 0, 7, 12, 0, 0, 1, 1, 0, 1]' : 0.708699}
{'[1, 1, 0, 3, 5, 2, 1, 0, 11, 0, 7, 12, 0, 0, 1, 1, 0, 1]' : 0.705359}
{'[1, 1, 0, 3, 5, 2, 1, 0, 11, 0, 7, 12, 0, 0, 1, 1, 0, 1]' : 0.705561}
{'[1, 1, 0, 3, 5, 2, 1, 0, 11, 0, 7, 12, 0, 0, 1, 1, 0, 1]' : 0.706913}
{'[1, 1, 0, 3, 5, 2, 1, 0, 11, 0, 7, 12, 0, 0, 1, 1, 0, 1]' : 0.705788}
{'[1, 1, 0, 3, 5, 2, 1, 0, 11, 0, 7, 12, 0, 0, 1, 1, 0, 1]' : 0.705423}
{'[1, 1, 0, 3, 5, 2, 1, 0, 11, 0, 7, 12, 0, 0, 1, 1, 0, 1]' : 0.704486}
{'[1, 1, 0, 3, 5, 2, 1, 0, 11, 0, 7, 12, 0, 0, 1, 1, 0, 1]' : 0.706436}
{'[1, 1, 0, 3, 5, 2, 1, 0, 11, 0, 7, 12, 0, 0, 1, 1, 0, 1]' : 0.706617}
{'[1, 1, 0, 3, 5, 2, 1, 0, 11, 0, 7, 12, 0, 0, 1, 1, 0, 1]' : 0.704603}
{'[1, 1, 0, 3, 5, 2, 1, 0, 11, 0, 7, 12, 0, 0, 1, 1, 0, 1]' : 0.705978}
{'[1, 1, 0, 3, 5, 2, 1, 0, 11, 0, 7, 12, 0, 0, 1, 1, 0, 1]' : 0.705688}
{'[1, 1, 0, 3, 5, 2, 1, 0, 11, 0, 7, 12, 0, 0, 1, 1, 0, 1]' : 0.706297}
{'[1, 1, 0, 3, 5, 2, 1, 0, 11, 0, 7, 12, 0, 0, 1, 1, 0, 1]' : 0.708048}
{'[1, 1, 0, 3, 5, 2, 1, 0, 11, 0, 7, 12, 0, 0, 1, 1, 0, 1]' : 0.707221}
{'[1, 1, 0, 3, 5, 2, 1, 0, 11, 0, 7, 12, 0, 0, 1, 1, 0, 1]' : 0.705637}
{'[1, 1, 0, 3, 5, 2, 1, 0, 11, 0, 7, 12, 0, 0, 1, 1, 0, 1]' : 0.704313}
{'[1, 1, 0, 3, 5, 2, 1, 0, 11, 0, 7, 12, 0, 0, 1, 1, 0, 1]' : 0.706788}
{'[1, 1, 0, 3, 5, 2, 1, 0, 11, 0, 7, 12, 0, 0, 1, 1, 0, 1]' : 0.705509}
{'[1, 1, 0, 3, 5, 2, 1, 0, 11, 0, 7, 12, 0, 0, 1, 1, 0, 1]' : 0.705009}
{'[1, 1, 0, 3, 5, 2, 1, 0, 11, 0, 7, 12, 0, 0, 1, 1, 0, 1]' : 0.706219}
{'[1, 1, 0, 3, 5, 2, 1, 0, 11, 0, 7, 12, 0, 0, 1, 1, 0, 1]' : 0.706373}
{'[1, 1, 0, 3, 5, 2, 1, 0, 11, 0, 7, 12, 0, 0, 1, 1, 0, 1]' : 0.704627}
{'[1, 1, 0, 3, 5, 2, 1, 0, 11, 0, 7, 12, 0, 0, 1, 1, 0, 1]' : 0.706261}

out:
 ["{'[1, 1, 0, 3, 5, 2, 1, 0, 11, 0, 7, 12, 0, 0, 1, 1, 0, 1]' : 0.706539}", "{'[1, 1, 0, 3, 5, 2, 1, 0, 11, 0, 7, 12, 0, 0, 1, 1, 0, 1]' : 0.709757}", "{'[1, 1, 0, 3, 5, 2, 1, 0, 11, 0, 7, 12, 0, 0, 1, 1, 0, 1]' : 0.705011}", "{'[1, 1, 0, 3, 5, 2, 1, 0, 11, 0, 7, 12, 0, 0, 1, 1, 0, 1]' : 0.707575}", "{'[1, 1, 0, 3, 5, 2, 1, 0, 11, 0, 7, 12, 0, 0, 1, 1, 0, 1]' : 0.710683}", "{'[1, 1, 0, 3, 5, 2, 1, 0, 11, 0, 7, 12, 0, 0, 1, 1, 0, 1]' : 0.706914}", "{'[1, 1, 0, 3, 5, 2, 1, 0, 11, 0, 7, 12, 0, 0, 1, 1, 0, 1]' : 0.708699}", "{'[1, 1, 0, 3, 5, 2, 1, 0, 11, 0, 7, 12, 0, 0, 1, 1, 0, 1]' : 0.705359}", "{'[1, 1, 0, 3, 5, 2, 1, 0, 11, 0, 7, 12, 0, 0, 1, 1, 0, 1]' : 0.705561}", "{'[1, 1, 0, 3, 5, 2, 1, 0, 11, 0, 7, 12, 0, 0, 1, 1, 0, 1]' : 0.706913}", "{'[1, 1, 0, 3, 5, 2, 1, 0, 11, 0, 7, 12, 0, 0, 1, 1, 0, 1]' : 0.705788}", "{'[1, 1, 0, 3, 5, 2, 1, 0, 11, 0, 7, 12, 0, 0, 1, 1, 0, 1]' : 0.705423}", "{'[1, 1, 0, 3, 5, 2, 1, 0, 11, 0, 7, 12, 0, 0, 1, 1, 0, 1]' : 0.704486}", "{'[1, 1, 0, 3, 5, 2, 1, 0, 11, 0, 7, 12, 0, 0, 1, 1, 0, 1]' : 0.706436}", "{'[1, 1, 0, 3, 5, 2, 1, 0, 11, 0, 7, 12, 0, 0, 1, 1, 0, 1]' : 0.706617}", "{'[1, 1, 0, 3, 5, 2, 1, 0, 11, 0, 7, 12, 0, 0, 1, 1, 0, 1]' : 0.704603}", "{'[1, 1, 0, 3, 5, 2, 1, 0, 11, 0, 7, 12, 0, 0, 1, 1, 0, 1]' : 0.705978}", "{'[1, 1, 0, 3, 5, 2, 1, 0, 11, 0, 7, 12, 0, 0, 1, 1, 0, 1]' : 0.705688}", "{'[1, 1, 0, 3, 5, 2, 1, 0, 11, 0, 7, 12, 0, 0, 1, 1, 0, 1]' : 0.706297}", "{'[1, 1, 0, 3, 5, 2, 1, 0, 11, 0, 7, 12, 0, 0, 1, 1, 0, 1]' : 0.708048}", "{'[1, 1, 0, 3, 5, 2, 1, 0, 11, 0, 7, 12, 0, 0, 1, 1, 0, 1]' : 0.707221}", "{'[1, 1, 0, 3, 5, 2, 1, 0, 11, 0, 7, 12, 0, 0, 1, 1, 0, 1]' : 0.705637}", "{'[1, 1, 0, 3, 5, 2, 1, 0, 11, 0, 7, 12, 0, 0, 1, 1, 0, 1]' : 0.704313}", "{'[1, 1, 0, 3, 5, 2, 1, 0, 11, 0, 7, 12, 0, 0, 1, 1, 0, 1]' : 0.706788}", "{'[1, 1, 0, 3, 5, 2, 1, 0, 11, 0, 7, 12, 0, 0, 1, 1, 0, 1]' : 0.705509}", "{'[1, 1, 0, 3, 5, 2, 1, 0, 11, 0, 7, 12, 0, 0, 1, 1, 0, 1]' : 0.705009}", "{'[1, 1, 0, 3, 5, 2, 1, 0, 11, 0, 7, 12, 0, 0, 1, 1, 0, 1]' : 0.706219}", "{'[1, 1, 0, 3, 5, 2, 1, 0, 11, 0, 7, 12, 0, 0, 1, 1, 0, 1]' : 0.706373}", "{'[1, 1, 0, 3, 5, 2, 1, 0, 11, 0, 7, 12, 0, 0, 1, 1, 0, 1]' : 0.704627}", "{'[1, 1, 0, 3, 5, 2, 1, 0, 11, 0, 7, 12, 0, 0, 1, 1, 0, 1]' : 0.706261}"]
returning from 'run': {'[1, 1, 0, 3, 5, 2, 1, 0, 11, 0, 7, 12, 0, 0, 1, 1, 0, 1]': ([0.706539, 0.709757, 0.705011, 0.707575, 0.710683, 0.706914, 0.708699, 0.705359, 0.705561, 0.706913, 0.705788, 0.705423, 0.704486, 0.706436, 0.706617, 0.704603, 0.705978, 0.705688, 0.706297, 0.708048, 0.707221, 0.705637, 0.704313, 0.706788, 0.705509, 0.705009, 0.706219, 0.706373, 0.704627, 0.706261], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 1, 0, 3, 5, 2, 1, 0, 11, 0, 7, 12, 0, 0, 1, 1, 0, 1]': ([0.706539, 0.709757, 0.705011, 0.707575, 0.710683, 0.706914, 0.708699, 0.705359, 0.705561, 0.706913, 0.705788, 0.705423, 0.704486, 0.706436, 0.706617, 0.704603, 0.705978, 0.705688, 0.706297, 0.708048, 0.707221, 0.705637, 0.704313, 0.706788, 0.705509, 0.705009, 0.706219, 0.706373, 0.704627, 0.706261], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	6
        Additions: 		359
        Multiplications: 	120
        Divisions: 		0
        Logical: 		0
        Reads: 			838
        Writes: 		198
        Comparisons:		22
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest12.exe __orio_perftest12.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest12.exe  
Program Test Output: 
{'[1, 0, 3, 2, 1, 2, 1, 0, 11, 2, 0, 12, 0, 0, 0, 1, 0, 1]' : 0.355292}
{'[1, 0, 3, 2, 1, 2, 1, 0, 11, 2, 0, 12, 0, 0, 0, 1, 0, 1]' : 0.354259}
{'[1, 0, 3, 2, 1, 2, 1, 0, 11, 2, 0, 12, 0, 0, 0, 1, 0, 1]' : 0.352812}
{'[1, 0, 3, 2, 1, 2, 1, 0, 11, 2, 0, 12, 0, 0, 0, 1, 0, 1]' : 0.354071}
{'[1, 0, 3, 2, 1, 2, 1, 0, 11, 2, 0, 12, 0, 0, 0, 1, 0, 1]' : 0.354737}
{'[1, 0, 3, 2, 1, 2, 1, 0, 11, 2, 0, 12, 0, 0, 0, 1, 0, 1]' : 0.358187}
{'[1, 0, 3, 2, 1, 2, 1, 0, 11, 2, 0, 12, 0, 0, 0, 1, 0, 1]' : 0.353713}
{'[1, 0, 3, 2, 1, 2, 1, 0, 11, 2, 0, 12, 0, 0, 0, 1, 0, 1]' : 0.352952}
{'[1, 0, 3, 2, 1, 2, 1, 0, 11, 2, 0, 12, 0, 0, 0, 1, 0, 1]' : 0.35277}
{'[1, 0, 3, 2, 1, 2, 1, 0, 11, 2, 0, 12, 0, 0, 0, 1, 0, 1]' : 0.353668}
{'[1, 0, 3, 2, 1, 2, 1, 0, 11, 2, 0, 12, 0, 0, 0, 1, 0, 1]' : 0.353818}
{'[1, 0, 3, 2, 1, 2, 1, 0, 11, 2, 0, 12, 0, 0, 0, 1, 0, 1]' : 0.353788}
{'[1, 0, 3, 2, 1, 2, 1, 0, 11, 2, 0, 12, 0, 0, 0, 1, 0, 1]' : 0.352901}
{'[1, 0, 3, 2, 1, 2, 1, 0, 11, 2, 0, 12, 0, 0, 0, 1, 0, 1]' : 0.353191}
{'[1, 0, 3, 2, 1, 2, 1, 0, 11, 2, 0, 12, 0, 0, 0, 1, 0, 1]' : 0.353118}
{'[1, 0, 3, 2, 1, 2, 1, 0, 11, 2, 0, 12, 0, 0, 0, 1, 0, 1]' : 0.353729}
{'[1, 0, 3, 2, 1, 2, 1, 0, 11, 2, 0, 12, 0, 0, 0, 1, 0, 1]' : 0.352812}
{'[1, 0, 3, 2, 1, 2, 1, 0, 11, 2, 0, 12, 0, 0, 0, 1, 0, 1]' : 0.352721}
{'[1, 0, 3, 2, 1, 2, 1, 0, 11, 2, 0, 12, 0, 0, 0, 1, 0, 1]' : 0.353896}
{'[1, 0, 3, 2, 1, 2, 1, 0, 11, 2, 0, 12, 0, 0, 0, 1, 0, 1]' : 0.35246}
{'[1, 0, 3, 2, 1, 2, 1, 0, 11, 2, 0, 12, 0, 0, 0, 1, 0, 1]' : 0.35381}
{'[1, 0, 3, 2, 1, 2, 1, 0, 11, 2, 0, 12, 0, 0, 0, 1, 0, 1]' : 0.358314}
{'[1, 0, 3, 2, 1, 2, 1, 0, 11, 2, 0, 12, 0, 0, 0, 1, 0, 1]' : 0.357065}
{'[1, 0, 3, 2, 1, 2, 1, 0, 11, 2, 0, 12, 0, 0, 0, 1, 0, 1]' : 0.353302}
{'[1, 0, 3, 2, 1, 2, 1, 0, 11, 2, 0, 12, 0, 0, 0, 1, 0, 1]' : 0.352721}
{'[1, 0, 3, 2, 1, 2, 1, 0, 11, 2, 0, 12, 0, 0, 0, 1, 0, 1]' : 0.355047}
{'[1, 0, 3, 2, 1, 2, 1, 0, 11, 2, 0, 12, 0, 0, 0, 1, 0, 1]' : 0.354752}
{'[1, 0, 3, 2, 1, 2, 1, 0, 11, 2, 0, 12, 0, 0, 0, 1, 0, 1]' : 0.361702}
{'[1, 0, 3, 2, 1, 2, 1, 0, 11, 2, 0, 12, 0, 0, 0, 1, 0, 1]' : 0.360816}
{'[1, 0, 3, 2, 1, 2, 1, 0, 11, 2, 0, 12, 0, 0, 0, 1, 0, 1]' : 0.365536}

out:
 ["{'[1, 0, 3, 2, 1, 2, 1, 0, 11, 2, 0, 12, 0, 0, 0, 1, 0, 1]' : 0.355292}", "{'[1, 0, 3, 2, 1, 2, 1, 0, 11, 2, 0, 12, 0, 0, 0, 1, 0, 1]' : 0.354259}", "{'[1, 0, 3, 2, 1, 2, 1, 0, 11, 2, 0, 12, 0, 0, 0, 1, 0, 1]' : 0.352812}", "{'[1, 0, 3, 2, 1, 2, 1, 0, 11, 2, 0, 12, 0, 0, 0, 1, 0, 1]' : 0.354071}", "{'[1, 0, 3, 2, 1, 2, 1, 0, 11, 2, 0, 12, 0, 0, 0, 1, 0, 1]' : 0.354737}", "{'[1, 0, 3, 2, 1, 2, 1, 0, 11, 2, 0, 12, 0, 0, 0, 1, 0, 1]' : 0.358187}", "{'[1, 0, 3, 2, 1, 2, 1, 0, 11, 2, 0, 12, 0, 0, 0, 1, 0, 1]' : 0.353713}", "{'[1, 0, 3, 2, 1, 2, 1, 0, 11, 2, 0, 12, 0, 0, 0, 1, 0, 1]' : 0.352952}", "{'[1, 0, 3, 2, 1, 2, 1, 0, 11, 2, 0, 12, 0, 0, 0, 1, 0, 1]' : 0.35277}", "{'[1, 0, 3, 2, 1, 2, 1, 0, 11, 2, 0, 12, 0, 0, 0, 1, 0, 1]' : 0.353668}", "{'[1, 0, 3, 2, 1, 2, 1, 0, 11, 2, 0, 12, 0, 0, 0, 1, 0, 1]' : 0.353818}", "{'[1, 0, 3, 2, 1, 2, 1, 0, 11, 2, 0, 12, 0, 0, 0, 1, 0, 1]' : 0.353788}", "{'[1, 0, 3, 2, 1, 2, 1, 0, 11, 2, 0, 12, 0, 0, 0, 1, 0, 1]' : 0.352901}", "{'[1, 0, 3, 2, 1, 2, 1, 0, 11, 2, 0, 12, 0, 0, 0, 1, 0, 1]' : 0.353191}", "{'[1, 0, 3, 2, 1, 2, 1, 0, 11, 2, 0, 12, 0, 0, 0, 1, 0, 1]' : 0.353118}", "{'[1, 0, 3, 2, 1, 2, 1, 0, 11, 2, 0, 12, 0, 0, 0, 1, 0, 1]' : 0.353729}", "{'[1, 0, 3, 2, 1, 2, 1, 0, 11, 2, 0, 12, 0, 0, 0, 1, 0, 1]' : 0.352812}", "{'[1, 0, 3, 2, 1, 2, 1, 0, 11, 2, 0, 12, 0, 0, 0, 1, 0, 1]' : 0.352721}", "{'[1, 0, 3, 2, 1, 2, 1, 0, 11, 2, 0, 12, 0, 0, 0, 1, 0, 1]' : 0.353896}", "{'[1, 0, 3, 2, 1, 2, 1, 0, 11, 2, 0, 12, 0, 0, 0, 1, 0, 1]' : 0.35246}", "{'[1, 0, 3, 2, 1, 2, 1, 0, 11, 2, 0, 12, 0, 0, 0, 1, 0, 1]' : 0.35381}", "{'[1, 0, 3, 2, 1, 2, 1, 0, 11, 2, 0, 12, 0, 0, 0, 1, 0, 1]' : 0.358314}", "{'[1, 0, 3, 2, 1, 2, 1, 0, 11, 2, 0, 12, 0, 0, 0, 1, 0, 1]' : 0.357065}", "{'[1, 0, 3, 2, 1, 2, 1, 0, 11, 2, 0, 12, 0, 0, 0, 1, 0, 1]' : 0.353302}", "{'[1, 0, 3, 2, 1, 2, 1, 0, 11, 2, 0, 12, 0, 0, 0, 1, 0, 1]' : 0.352721}", "{'[1, 0, 3, 2, 1, 2, 1, 0, 11, 2, 0, 12, 0, 0, 0, 1, 0, 1]' : 0.355047}", "{'[1, 0, 3, 2, 1, 2, 1, 0, 11, 2, 0, 12, 0, 0, 0, 1, 0, 1]' : 0.354752}", "{'[1, 0, 3, 2, 1, 2, 1, 0, 11, 2, 0, 12, 0, 0, 0, 1, 0, 1]' : 0.361702}", "{'[1, 0, 3, 2, 1, 2, 1, 0, 11, 2, 0, 12, 0, 0, 0, 1, 0, 1]' : 0.360816}", "{'[1, 0, 3, 2, 1, 2, 1, 0, 11, 2, 0, 12, 0, 0, 0, 1, 0, 1]' : 0.365536}"]
returning from 'run': {'[1, 0, 3, 2, 1, 2, 1, 0, 11, 2, 0, 12, 0, 0, 0, 1, 0, 1]': ([0.355292, 0.354259, 0.352812, 0.354071, 0.354737, 0.358187, 0.353713, 0.352952, 0.35277, 0.353668, 0.353818, 0.353788, 0.352901, 0.353191, 0.353118, 0.353729, 0.352812, 0.352721, 0.353896, 0.35246, 0.35381, 0.358314, 0.357065, 0.353302, 0.352721, 0.355047, 0.354752, 0.361702, 0.360816, 0.365536], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 3, 2, 1, 2, 1, 0, 11, 2, 0, 12, 0, 0, 0, 1, 0, 1]': ([0.355292, 0.354259, 0.352812, 0.354071, 0.354737, 0.358187, 0.353713, 0.352952, 0.35277, 0.353668, 0.353818, 0.353788, 0.352901, 0.353191, 0.353118, 0.353729, 0.352812, 0.352721, 0.353896, 0.35246, 0.35381, 0.358314, 0.357065, 0.353302, 0.352721, 0.355047, 0.354752, 0.361702, 0.360816, 0.365536], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	173
        Max loop nest depth: 	5
        Additions: 		6160
        Multiplications: 	1860
        Divisions: 		0
        Logical: 		0
        Reads: 			12407
        Writes: 		2506
        Comparisons:		173
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest13.exe __orio_perftest13.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest13.exe  
Program Test Output: 
{'[0, 3, 3, 3, 1, 2, 1, 1, 11, 28, 0, 12, 2, 0, 0, 1, 1, 1]' : 0.340642}
{'[0, 3, 3, 3, 1, 2, 1, 1, 11, 28, 0, 12, 2, 0, 0, 1, 1, 1]' : 0.334622}
{'[0, 3, 3, 3, 1, 2, 1, 1, 11, 28, 0, 12, 2, 0, 0, 1, 1, 1]' : 0.335223}
{'[0, 3, 3, 3, 1, 2, 1, 1, 11, 28, 0, 12, 2, 0, 0, 1, 1, 1]' : 0.335932}
{'[0, 3, 3, 3, 1, 2, 1, 1, 11, 28, 0, 12, 2, 0, 0, 1, 1, 1]' : 0.423077}
{'[0, 3, 3, 3, 1, 2, 1, 1, 11, 28, 0, 12, 2, 0, 0, 1, 1, 1]' : 0.335417}
{'[0, 3, 3, 3, 1, 2, 1, 1, 11, 28, 0, 12, 2, 0, 0, 1, 1, 1]' : 0.444885}
{'[0, 3, 3, 3, 1, 2, 1, 1, 11, 28, 0, 12, 2, 0, 0, 1, 1, 1]' : 0.335915}
{'[0, 3, 3, 3, 1, 2, 1, 1, 11, 28, 0, 12, 2, 0, 0, 1, 1, 1]' : 0.33868}
{'[0, 3, 3, 3, 1, 2, 1, 1, 11, 28, 0, 12, 2, 0, 0, 1, 1, 1]' : 0.343492}
{'[0, 3, 3, 3, 1, 2, 1, 1, 11, 28, 0, 12, 2, 0, 0, 1, 1, 1]' : 0.337364}
{'[0, 3, 3, 3, 1, 2, 1, 1, 11, 28, 0, 12, 2, 0, 0, 1, 1, 1]' : 0.33969}
{'[0, 3, 3, 3, 1, 2, 1, 1, 11, 28, 0, 12, 2, 0, 0, 1, 1, 1]' : 0.336759}
{'[0, 3, 3, 3, 1, 2, 1, 1, 11, 28, 0, 12, 2, 0, 0, 1, 1, 1]' : 0.33649}
{'[0, 3, 3, 3, 1, 2, 1, 1, 11, 28, 0, 12, 2, 0, 0, 1, 1, 1]' : 0.335152}
{'[0, 3, 3, 3, 1, 2, 1, 1, 11, 28, 0, 12, 2, 0, 0, 1, 1, 1]' : 0.336364}
{'[0, 3, 3, 3, 1, 2, 1, 1, 11, 28, 0, 12, 2, 0, 0, 1, 1, 1]' : 0.335002}
{'[0, 3, 3, 3, 1, 2, 1, 1, 11, 28, 0, 12, 2, 0, 0, 1, 1, 1]' : 0.339479}
{'[0, 3, 3, 3, 1, 2, 1, 1, 11, 28, 0, 12, 2, 0, 0, 1, 1, 1]' : 0.358426}
{'[0, 3, 3, 3, 1, 2, 1, 1, 11, 28, 0, 12, 2, 0, 0, 1, 1, 1]' : 0.361504}
{'[0, 3, 3, 3, 1, 2, 1, 1, 11, 28, 0, 12, 2, 0, 0, 1, 1, 1]' : 0.335107}
{'[0, 3, 3, 3, 1, 2, 1, 1, 11, 28, 0, 12, 2, 0, 0, 1, 1, 1]' : 0.335461}
{'[0, 3, 3, 3, 1, 2, 1, 1, 11, 28, 0, 12, 2, 0, 0, 1, 1, 1]' : 0.336436}
{'[0, 3, 3, 3, 1, 2, 1, 1, 11, 28, 0, 12, 2, 0, 0, 1, 1, 1]' : 0.336523}
{'[0, 3, 3, 3, 1, 2, 1, 1, 11, 28, 0, 12, 2, 0, 0, 1, 1, 1]' : 0.335172}
{'[0, 3, 3, 3, 1, 2, 1, 1, 11, 28, 0, 12, 2, 0, 0, 1, 1, 1]' : 0.335048}
{'[0, 3, 3, 3, 1, 2, 1, 1, 11, 28, 0, 12, 2, 0, 0, 1, 1, 1]' : 0.341142}
{'[0, 3, 3, 3, 1, 2, 1, 1, 11, 28, 0, 12, 2, 0, 0, 1, 1, 1]' : 0.339815}
{'[0, 3, 3, 3, 1, 2, 1, 1, 11, 28, 0, 12, 2, 0, 0, 1, 1, 1]' : 0.33549}
{'[0, 3, 3, 3, 1, 2, 1, 1, 11, 28, 0, 12, 2, 0, 0, 1, 1, 1]' : 0.341156}

out:
 ["{'[0, 3, 3, 3, 1, 2, 1, 1, 11, 28, 0, 12, 2, 0, 0, 1, 1, 1]' : 0.340642}", "{'[0, 3, 3, 3, 1, 2, 1, 1, 11, 28, 0, 12, 2, 0, 0, 1, 1, 1]' : 0.334622}", "{'[0, 3, 3, 3, 1, 2, 1, 1, 11, 28, 0, 12, 2, 0, 0, 1, 1, 1]' : 0.335223}", "{'[0, 3, 3, 3, 1, 2, 1, 1, 11, 28, 0, 12, 2, 0, 0, 1, 1, 1]' : 0.335932}", "{'[0, 3, 3, 3, 1, 2, 1, 1, 11, 28, 0, 12, 2, 0, 0, 1, 1, 1]' : 0.423077}", "{'[0, 3, 3, 3, 1, 2, 1, 1, 11, 28, 0, 12, 2, 0, 0, 1, 1, 1]' : 0.335417}", "{'[0, 3, 3, 3, 1, 2, 1, 1, 11, 28, 0, 12, 2, 0, 0, 1, 1, 1]' : 0.444885}", "{'[0, 3, 3, 3, 1, 2, 1, 1, 11, 28, 0, 12, 2, 0, 0, 1, 1, 1]' : 0.335915}", "{'[0, 3, 3, 3, 1, 2, 1, 1, 11, 28, 0, 12, 2, 0, 0, 1, 1, 1]' : 0.33868}", "{'[0, 3, 3, 3, 1, 2, 1, 1, 11, 28, 0, 12, 2, 0, 0, 1, 1, 1]' : 0.343492}", "{'[0, 3, 3, 3, 1, 2, 1, 1, 11, 28, 0, 12, 2, 0, 0, 1, 1, 1]' : 0.337364}", "{'[0, 3, 3, 3, 1, 2, 1, 1, 11, 28, 0, 12, 2, 0, 0, 1, 1, 1]' : 0.33969}", "{'[0, 3, 3, 3, 1, 2, 1, 1, 11, 28, 0, 12, 2, 0, 0, 1, 1, 1]' : 0.336759}", "{'[0, 3, 3, 3, 1, 2, 1, 1, 11, 28, 0, 12, 2, 0, 0, 1, 1, 1]' : 0.33649}", "{'[0, 3, 3, 3, 1, 2, 1, 1, 11, 28, 0, 12, 2, 0, 0, 1, 1, 1]' : 0.335152}", "{'[0, 3, 3, 3, 1, 2, 1, 1, 11, 28, 0, 12, 2, 0, 0, 1, 1, 1]' : 0.336364}", "{'[0, 3, 3, 3, 1, 2, 1, 1, 11, 28, 0, 12, 2, 0, 0, 1, 1, 1]' : 0.335002}", "{'[0, 3, 3, 3, 1, 2, 1, 1, 11, 28, 0, 12, 2, 0, 0, 1, 1, 1]' : 0.339479}", "{'[0, 3, 3, 3, 1, 2, 1, 1, 11, 28, 0, 12, 2, 0, 0, 1, 1, 1]' : 0.358426}", "{'[0, 3, 3, 3, 1, 2, 1, 1, 11, 28, 0, 12, 2, 0, 0, 1, 1, 1]' : 0.361504}", "{'[0, 3, 3, 3, 1, 2, 1, 1, 11, 28, 0, 12, 2, 0, 0, 1, 1, 1]' : 0.335107}", "{'[0, 3, 3, 3, 1, 2, 1, 1, 11, 28, 0, 12, 2, 0, 0, 1, 1, 1]' : 0.335461}", "{'[0, 3, 3, 3, 1, 2, 1, 1, 11, 28, 0, 12, 2, 0, 0, 1, 1, 1]' : 0.336436}", "{'[0, 3, 3, 3, 1, 2, 1, 1, 11, 28, 0, 12, 2, 0, 0, 1, 1, 1]' : 0.336523}", "{'[0, 3, 3, 3, 1, 2, 1, 1, 11, 28, 0, 12, 2, 0, 0, 1, 1, 1]' : 0.335172}", "{'[0, 3, 3, 3, 1, 2, 1, 1, 11, 28, 0, 12, 2, 0, 0, 1, 1, 1]' : 0.335048}", "{'[0, 3, 3, 3, 1, 2, 1, 1, 11, 28, 0, 12, 2, 0, 0, 1, 1, 1]' : 0.341142}", "{'[0, 3, 3, 3, 1, 2, 1, 1, 11, 28, 0, 12, 2, 0, 0, 1, 1, 1]' : 0.339815}", "{'[0, 3, 3, 3, 1, 2, 1, 1, 11, 28, 0, 12, 2, 0, 0, 1, 1, 1]' : 0.33549}", "{'[0, 3, 3, 3, 1, 2, 1, 1, 11, 28, 0, 12, 2, 0, 0, 1, 1, 1]' : 0.341156}"]
returning from 'run': {'[0, 3, 3, 3, 1, 2, 1, 1, 11, 28, 0, 12, 2, 0, 0, 1, 1, 1]': ([0.340642, 0.334622, 0.335223, 0.335932, 0.423077, 0.335417, 0.444885, 0.335915, 0.33868, 0.343492, 0.337364, 0.33969, 0.336759, 0.33649, 0.335152, 0.336364, 0.335002, 0.339479, 0.358426, 0.361504, 0.335107, 0.335461, 0.336436, 0.336523, 0.335172, 0.335048, 0.341142, 0.339815, 0.33549, 0.341156], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 3, 3, 3, 1, 2, 1, 1, 11, 28, 0, 12, 2, 0, 0, 1, 1, 1]': ([0.340642, 0.334622, 0.335223, 0.335932, 0.423077, 0.335417, 0.444885, 0.335915, 0.33868, 0.343492, 0.337364, 0.33969, 0.336759, 0.33649, 0.335152, 0.336364, 0.335002, 0.339479, 0.358426, 0.361504, 0.335107, 0.335461, 0.336436, 0.336523, 0.335172, 0.335048, 0.341142, 0.339815, 0.33549, 0.341156], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	6
        Additions: 		1642
        Multiplications: 	396
        Divisions: 		0
        Logical: 		0
        Reads: 			2528
        Writes: 		267
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest14.exe __orio_perftest14.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest14.exe  
Program Test Output: 
{'[2, 3, 0, 1, 5, 2, 1, 1, 11, 0, 26, 12, 1, 1, 0, 0, 0, 0]' : 0.308616}
{'[2, 3, 0, 1, 5, 2, 1, 1, 11, 0, 26, 12, 1, 1, 0, 0, 0, 0]' : 0.308305}
{'[2, 3, 0, 1, 5, 2, 1, 1, 11, 0, 26, 12, 1, 1, 0, 0, 0, 0]' : 0.308418}
{'[2, 3, 0, 1, 5, 2, 1, 1, 11, 0, 26, 12, 1, 1, 0, 0, 0, 0]' : 0.30785}
{'[2, 3, 0, 1, 5, 2, 1, 1, 11, 0, 26, 12, 1, 1, 0, 0, 0, 0]' : 0.308285}
{'[2, 3, 0, 1, 5, 2, 1, 1, 11, 0, 26, 12, 1, 1, 0, 0, 0, 0]' : 0.31001}
{'[2, 3, 0, 1, 5, 2, 1, 1, 11, 0, 26, 12, 1, 1, 0, 0, 0, 0]' : 0.309773}
{'[2, 3, 0, 1, 5, 2, 1, 1, 11, 0, 26, 12, 1, 1, 0, 0, 0, 0]' : 0.307686}
{'[2, 3, 0, 1, 5, 2, 1, 1, 11, 0, 26, 12, 1, 1, 0, 0, 0, 0]' : 0.309524}
{'[2, 3, 0, 1, 5, 2, 1, 1, 11, 0, 26, 12, 1, 1, 0, 0, 0, 0]' : 0.313958}
{'[2, 3, 0, 1, 5, 2, 1, 1, 11, 0, 26, 12, 1, 1, 0, 0, 0, 0]' : 0.30997}
{'[2, 3, 0, 1, 5, 2, 1, 1, 11, 0, 26, 12, 1, 1, 0, 0, 0, 0]' : 0.326146}
{'[2, 3, 0, 1, 5, 2, 1, 1, 11, 0, 26, 12, 1, 1, 0, 0, 0, 0]' : 0.310751}
{'[2, 3, 0, 1, 5, 2, 1, 1, 11, 0, 26, 12, 1, 1, 0, 0, 0, 0]' : 0.310672}
{'[2, 3, 0, 1, 5, 2, 1, 1, 11, 0, 26, 12, 1, 1, 0, 0, 0, 0]' : 0.31206}
{'[2, 3, 0, 1, 5, 2, 1, 1, 11, 0, 26, 12, 1, 1, 0, 0, 0, 0]' : 0.310798}
{'[2, 3, 0, 1, 5, 2, 1, 1, 11, 0, 26, 12, 1, 1, 0, 0, 0, 0]' : 0.306991}
{'[2, 3, 0, 1, 5, 2, 1, 1, 11, 0, 26, 12, 1, 1, 0, 0, 0, 0]' : 0.310056}
{'[2, 3, 0, 1, 5, 2, 1, 1, 11, 0, 26, 12, 1, 1, 0, 0, 0, 0]' : 0.310041}
{'[2, 3, 0, 1, 5, 2, 1, 1, 11, 0, 26, 12, 1, 1, 0, 0, 0, 0]' : 0.3184}
{'[2, 3, 0, 1, 5, 2, 1, 1, 11, 0, 26, 12, 1, 1, 0, 0, 0, 0]' : 0.306684}
{'[2, 3, 0, 1, 5, 2, 1, 1, 11, 0, 26, 12, 1, 1, 0, 0, 0, 0]' : 0.31513}
{'[2, 3, 0, 1, 5, 2, 1, 1, 11, 0, 26, 12, 1, 1, 0, 0, 0, 0]' : 0.306606}
{'[2, 3, 0, 1, 5, 2, 1, 1, 11, 0, 26, 12, 1, 1, 0, 0, 0, 0]' : 0.308858}
{'[2, 3, 0, 1, 5, 2, 1, 1, 11, 0, 26, 12, 1, 1, 0, 0, 0, 0]' : 0.311532}
{'[2, 3, 0, 1, 5, 2, 1, 1, 11, 0, 26, 12, 1, 1, 0, 0, 0, 0]' : 0.308411}
{'[2, 3, 0, 1, 5, 2, 1, 1, 11, 0, 26, 12, 1, 1, 0, 0, 0, 0]' : 0.311324}
{'[2, 3, 0, 1, 5, 2, 1, 1, 11, 0, 26, 12, 1, 1, 0, 0, 0, 0]' : 0.308552}
{'[2, 3, 0, 1, 5, 2, 1, 1, 11, 0, 26, 12, 1, 1, 0, 0, 0, 0]' : 0.307958}
{'[2, 3, 0, 1, 5, 2, 1, 1, 11, 0, 26, 12, 1, 1, 0, 0, 0, 0]' : 0.306991}

out:
 ["{'[2, 3, 0, 1, 5, 2, 1, 1, 11, 0, 26, 12, 1, 1, 0, 0, 0, 0]' : 0.308616}", "{'[2, 3, 0, 1, 5, 2, 1, 1, 11, 0, 26, 12, 1, 1, 0, 0, 0, 0]' : 0.308305}", "{'[2, 3, 0, 1, 5, 2, 1, 1, 11, 0, 26, 12, 1, 1, 0, 0, 0, 0]' : 0.308418}", "{'[2, 3, 0, 1, 5, 2, 1, 1, 11, 0, 26, 12, 1, 1, 0, 0, 0, 0]' : 0.30785}", "{'[2, 3, 0, 1, 5, 2, 1, 1, 11, 0, 26, 12, 1, 1, 0, 0, 0, 0]' : 0.308285}", "{'[2, 3, 0, 1, 5, 2, 1, 1, 11, 0, 26, 12, 1, 1, 0, 0, 0, 0]' : 0.31001}", "{'[2, 3, 0, 1, 5, 2, 1, 1, 11, 0, 26, 12, 1, 1, 0, 0, 0, 0]' : 0.309773}", "{'[2, 3, 0, 1, 5, 2, 1, 1, 11, 0, 26, 12, 1, 1, 0, 0, 0, 0]' : 0.307686}", "{'[2, 3, 0, 1, 5, 2, 1, 1, 11, 0, 26, 12, 1, 1, 0, 0, 0, 0]' : 0.309524}", "{'[2, 3, 0, 1, 5, 2, 1, 1, 11, 0, 26, 12, 1, 1, 0, 0, 0, 0]' : 0.313958}", "{'[2, 3, 0, 1, 5, 2, 1, 1, 11, 0, 26, 12, 1, 1, 0, 0, 0, 0]' : 0.30997}", "{'[2, 3, 0, 1, 5, 2, 1, 1, 11, 0, 26, 12, 1, 1, 0, 0, 0, 0]' : 0.326146}", "{'[2, 3, 0, 1, 5, 2, 1, 1, 11, 0, 26, 12, 1, 1, 0, 0, 0, 0]' : 0.310751}", "{'[2, 3, 0, 1, 5, 2, 1, 1, 11, 0, 26, 12, 1, 1, 0, 0, 0, 0]' : 0.310672}", "{'[2, 3, 0, 1, 5, 2, 1, 1, 11, 0, 26, 12, 1, 1, 0, 0, 0, 0]' : 0.31206}", "{'[2, 3, 0, 1, 5, 2, 1, 1, 11, 0, 26, 12, 1, 1, 0, 0, 0, 0]' : 0.310798}", "{'[2, 3, 0, 1, 5, 2, 1, 1, 11, 0, 26, 12, 1, 1, 0, 0, 0, 0]' : 0.306991}", "{'[2, 3, 0, 1, 5, 2, 1, 1, 11, 0, 26, 12, 1, 1, 0, 0, 0, 0]' : 0.310056}", "{'[2, 3, 0, 1, 5, 2, 1, 1, 11, 0, 26, 12, 1, 1, 0, 0, 0, 0]' : 0.310041}", "{'[2, 3, 0, 1, 5, 2, 1, 1, 11, 0, 26, 12, 1, 1, 0, 0, 0, 0]' : 0.3184}", "{'[2, 3, 0, 1, 5, 2, 1, 1, 11, 0, 26, 12, 1, 1, 0, 0, 0, 0]' : 0.306684}", "{'[2, 3, 0, 1, 5, 2, 1, 1, 11, 0, 26, 12, 1, 1, 0, 0, 0, 0]' : 0.31513}", "{'[2, 3, 0, 1, 5, 2, 1, 1, 11, 0, 26, 12, 1, 1, 0, 0, 0, 0]' : 0.306606}", "{'[2, 3, 0, 1, 5, 2, 1, 1, 11, 0, 26, 12, 1, 1, 0, 0, 0, 0]' : 0.308858}", "{'[2, 3, 0, 1, 5, 2, 1, 1, 11, 0, 26, 12, 1, 1, 0, 0, 0, 0]' : 0.311532}", "{'[2, 3, 0, 1, 5, 2, 1, 1, 11, 0, 26, 12, 1, 1, 0, 0, 0, 0]' : 0.308411}", "{'[2, 3, 0, 1, 5, 2, 1, 1, 11, 0, 26, 12, 1, 1, 0, 0, 0, 0]' : 0.311324}", "{'[2, 3, 0, 1, 5, 2, 1, 1, 11, 0, 26, 12, 1, 1, 0, 0, 0, 0]' : 0.308552}", "{'[2, 3, 0, 1, 5, 2, 1, 1, 11, 0, 26, 12, 1, 1, 0, 0, 0, 0]' : 0.307958}", "{'[2, 3, 0, 1, 5, 2, 1, 1, 11, 0, 26, 12, 1, 1, 0, 0, 0, 0]' : 0.306991}"]
returning from 'run': {'[2, 3, 0, 1, 5, 2, 1, 1, 11, 0, 26, 12, 1, 1, 0, 0, 0, 0]': ([0.308616, 0.308305, 0.308418, 0.30785, 0.308285, 0.31001, 0.309773, 0.307686, 0.309524, 0.313958, 0.30997, 0.326146, 0.310751, 0.310672, 0.31206, 0.310798, 0.306991, 0.310056, 0.310041, 0.3184, 0.306684, 0.31513, 0.306606, 0.308858, 0.311532, 0.308411, 0.311324, 0.308552, 0.307958, 0.306991], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 3, 0, 1, 5, 2, 1, 1, 11, 0, 26, 12, 1, 1, 0, 0, 0, 0]': ([0.308616, 0.308305, 0.308418, 0.30785, 0.308285, 0.31001, 0.309773, 0.307686, 0.309524, 0.313958, 0.30997, 0.326146, 0.310751, 0.310672, 0.31206, 0.310798, 0.306991, 0.310056, 0.310041, 0.3184, 0.306684, 0.31513, 0.306606, 0.308858, 0.311532, 0.308411, 0.311324, 0.308552, 0.307958, 0.306991], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = kkk
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		297
        Multiplications: 	70
        Divisions: 		0
        Logical: 		0
        Reads: 			649
        Writes: 		146
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest15.exe __orio_perftest15.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest15.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest15.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest15.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 597, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 536, in dopt_anova
    i)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 485, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 387, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest15.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 597, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 536, in dopt_anova
    i)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 485, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 387, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		419
        Multiplications: 	120
        Divisions: 		0
        Logical: 		0
        Reads: 			881
        Writes: 		176
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest16.exe __orio_perftest16.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest16.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest16.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest16.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 597, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 536, in dopt_anova
    i)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 485, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 387, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest16.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 597, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 536, in dopt_anova
    i)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 485, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 387, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		141
        Multiplications: 	32
        Divisions: 		0
        Logical: 		0
        Reads: 			313
        Writes: 		62
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest17.exe __orio_perftest17.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest17.exe  
Program Test Output: 
{'[5, 0, 1, 4, 5, 0, 1, 1, 11, 0, 27, 12, 0, 1, 1, 0, 1, 1]' : 1.10102}
{'[5, 0, 1, 4, 5, 0, 1, 1, 11, 0, 27, 12, 0, 1, 1, 0, 1, 1]' : 1.09961}
{'[5, 0, 1, 4, 5, 0, 1, 1, 11, 0, 27, 12, 0, 1, 1, 0, 1, 1]' : 1.10625}
{'[5, 0, 1, 4, 5, 0, 1, 1, 11, 0, 27, 12, 0, 1, 1, 0, 1, 1]' : 1.09741}
{'[5, 0, 1, 4, 5, 0, 1, 1, 11, 0, 27, 12, 0, 1, 1, 0, 1, 1]' : 1.09884}
{'[5, 0, 1, 4, 5, 0, 1, 1, 11, 0, 27, 12, 0, 1, 1, 0, 1, 1]' : 1.09447}
{'[5, 0, 1, 4, 5, 0, 1, 1, 11, 0, 27, 12, 0, 1, 1, 0, 1, 1]' : 1.09675}
{'[5, 0, 1, 4, 5, 0, 1, 1, 11, 0, 27, 12, 0, 1, 1, 0, 1, 1]' : 1.10211}
{'[5, 0, 1, 4, 5, 0, 1, 1, 11, 0, 27, 12, 0, 1, 1, 0, 1, 1]' : 1.10884}
{'[5, 0, 1, 4, 5, 0, 1, 1, 11, 0, 27, 12, 0, 1, 1, 0, 1, 1]' : 1.11256}
{'[5, 0, 1, 4, 5, 0, 1, 1, 11, 0, 27, 12, 0, 1, 1, 0, 1, 1]' : 1.09829}
{'[5, 0, 1, 4, 5, 0, 1, 1, 11, 0, 27, 12, 0, 1, 1, 0, 1, 1]' : 1.10758}
{'[5, 0, 1, 4, 5, 0, 1, 1, 11, 0, 27, 12, 0, 1, 1, 0, 1, 1]' : 1.10468}
{'[5, 0, 1, 4, 5, 0, 1, 1, 11, 0, 27, 12, 0, 1, 1, 0, 1, 1]' : 1.09162}
{'[5, 0, 1, 4, 5, 0, 1, 1, 11, 0, 27, 12, 0, 1, 1, 0, 1, 1]' : 1.09106}
{'[5, 0, 1, 4, 5, 0, 1, 1, 11, 0, 27, 12, 0, 1, 1, 0, 1, 1]' : 1.09009}
{'[5, 0, 1, 4, 5, 0, 1, 1, 11, 0, 27, 12, 0, 1, 1, 0, 1, 1]' : 1.10587}
{'[5, 0, 1, 4, 5, 0, 1, 1, 11, 0, 27, 12, 0, 1, 1, 0, 1, 1]' : 1.09068}
{'[5, 0, 1, 4, 5, 0, 1, 1, 11, 0, 27, 12, 0, 1, 1, 0, 1, 1]' : 1.09342}
{'[5, 0, 1, 4, 5, 0, 1, 1, 11, 0, 27, 12, 0, 1, 1, 0, 1, 1]' : 1.09064}
{'[5, 0, 1, 4, 5, 0, 1, 1, 11, 0, 27, 12, 0, 1, 1, 0, 1, 1]' : 1.10843}
{'[5, 0, 1, 4, 5, 0, 1, 1, 11, 0, 27, 12, 0, 1, 1, 0, 1, 1]' : 1.12209}
{'[5, 0, 1, 4, 5, 0, 1, 1, 11, 0, 27, 12, 0, 1, 1, 0, 1, 1]' : 1.09726}
{'[5, 0, 1, 4, 5, 0, 1, 1, 11, 0, 27, 12, 0, 1, 1, 0, 1, 1]' : 1.0961}
{'[5, 0, 1, 4, 5, 0, 1, 1, 11, 0, 27, 12, 0, 1, 1, 0, 1, 1]' : 1.09303}
{'[5, 0, 1, 4, 5, 0, 1, 1, 11, 0, 27, 12, 0, 1, 1, 0, 1, 1]' : 1.09772}
{'[5, 0, 1, 4, 5, 0, 1, 1, 11, 0, 27, 12, 0, 1, 1, 0, 1, 1]' : 1.09607}
{'[5, 0, 1, 4, 5, 0, 1, 1, 11, 0, 27, 12, 0, 1, 1, 0, 1, 1]' : 1.09445}
{'[5, 0, 1, 4, 5, 0, 1, 1, 11, 0, 27, 12, 0, 1, 1, 0, 1, 1]' : 1.09143}
{'[5, 0, 1, 4, 5, 0, 1, 1, 11, 0, 27, 12, 0, 1, 1, 0, 1, 1]' : 1.09036}

out:
 ["{'[5, 0, 1, 4, 5, 0, 1, 1, 11, 0, 27, 12, 0, 1, 1, 0, 1, 1]' : 1.10102}", "{'[5, 0, 1, 4, 5, 0, 1, 1, 11, 0, 27, 12, 0, 1, 1, 0, 1, 1]' : 1.09961}", "{'[5, 0, 1, 4, 5, 0, 1, 1, 11, 0, 27, 12, 0, 1, 1, 0, 1, 1]' : 1.10625}", "{'[5, 0, 1, 4, 5, 0, 1, 1, 11, 0, 27, 12, 0, 1, 1, 0, 1, 1]' : 1.09741}", "{'[5, 0, 1, 4, 5, 0, 1, 1, 11, 0, 27, 12, 0, 1, 1, 0, 1, 1]' : 1.09884}", "{'[5, 0, 1, 4, 5, 0, 1, 1, 11, 0, 27, 12, 0, 1, 1, 0, 1, 1]' : 1.09447}", "{'[5, 0, 1, 4, 5, 0, 1, 1, 11, 0, 27, 12, 0, 1, 1, 0, 1, 1]' : 1.09675}", "{'[5, 0, 1, 4, 5, 0, 1, 1, 11, 0, 27, 12, 0, 1, 1, 0, 1, 1]' : 1.10211}", "{'[5, 0, 1, 4, 5, 0, 1, 1, 11, 0, 27, 12, 0, 1, 1, 0, 1, 1]' : 1.10884}", "{'[5, 0, 1, 4, 5, 0, 1, 1, 11, 0, 27, 12, 0, 1, 1, 0, 1, 1]' : 1.11256}", "{'[5, 0, 1, 4, 5, 0, 1, 1, 11, 0, 27, 12, 0, 1, 1, 0, 1, 1]' : 1.09829}", "{'[5, 0, 1, 4, 5, 0, 1, 1, 11, 0, 27, 12, 0, 1, 1, 0, 1, 1]' : 1.10758}", "{'[5, 0, 1, 4, 5, 0, 1, 1, 11, 0, 27, 12, 0, 1, 1, 0, 1, 1]' : 1.10468}", "{'[5, 0, 1, 4, 5, 0, 1, 1, 11, 0, 27, 12, 0, 1, 1, 0, 1, 1]' : 1.09162}", "{'[5, 0, 1, 4, 5, 0, 1, 1, 11, 0, 27, 12, 0, 1, 1, 0, 1, 1]' : 1.09106}", "{'[5, 0, 1, 4, 5, 0, 1, 1, 11, 0, 27, 12, 0, 1, 1, 0, 1, 1]' : 1.09009}", "{'[5, 0, 1, 4, 5, 0, 1, 1, 11, 0, 27, 12, 0, 1, 1, 0, 1, 1]' : 1.10587}", "{'[5, 0, 1, 4, 5, 0, 1, 1, 11, 0, 27, 12, 0, 1, 1, 0, 1, 1]' : 1.09068}", "{'[5, 0, 1, 4, 5, 0, 1, 1, 11, 0, 27, 12, 0, 1, 1, 0, 1, 1]' : 1.09342}", "{'[5, 0, 1, 4, 5, 0, 1, 1, 11, 0, 27, 12, 0, 1, 1, 0, 1, 1]' : 1.09064}", "{'[5, 0, 1, 4, 5, 0, 1, 1, 11, 0, 27, 12, 0, 1, 1, 0, 1, 1]' : 1.10843}", "{'[5, 0, 1, 4, 5, 0, 1, 1, 11, 0, 27, 12, 0, 1, 1, 0, 1, 1]' : 1.12209}", "{'[5, 0, 1, 4, 5, 0, 1, 1, 11, 0, 27, 12, 0, 1, 1, 0, 1, 1]' : 1.09726}", "{'[5, 0, 1, 4, 5, 0, 1, 1, 11, 0, 27, 12, 0, 1, 1, 0, 1, 1]' : 1.0961}", "{'[5, 0, 1, 4, 5, 0, 1, 1, 11, 0, 27, 12, 0, 1, 1, 0, 1, 1]' : 1.09303}", "{'[5, 0, 1, 4, 5, 0, 1, 1, 11, 0, 27, 12, 0, 1, 1, 0, 1, 1]' : 1.09772}", "{'[5, 0, 1, 4, 5, 0, 1, 1, 11, 0, 27, 12, 0, 1, 1, 0, 1, 1]' : 1.09607}", "{'[5, 0, 1, 4, 5, 0, 1, 1, 11, 0, 27, 12, 0, 1, 1, 0, 1, 1]' : 1.09445}", "{'[5, 0, 1, 4, 5, 0, 1, 1, 11, 0, 27, 12, 0, 1, 1, 0, 1, 1]' : 1.09143}", "{'[5, 0, 1, 4, 5, 0, 1, 1, 11, 0, 27, 12, 0, 1, 1, 0, 1, 1]' : 1.09036}"]
returning from 'run': {'[5, 0, 1, 4, 5, 0, 1, 1, 11, 0, 27, 12, 0, 1, 1, 0, 1, 1]': ([1.10102, 1.09961, 1.10625, 1.09741, 1.09884, 1.09447, 1.09675, 1.10211, 1.10884, 1.11256, 1.09829, 1.10758, 1.10468, 1.09162, 1.09106, 1.09009, 1.10587, 1.09068, 1.09342, 1.09064, 1.10843, 1.12209, 1.09726, 1.0961, 1.09303, 1.09772, 1.09607, 1.09445, 1.09143, 1.09036], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 0, 1, 4, 5, 0, 1, 1, 11, 0, 27, 12, 0, 1, 1, 0, 1, 1]': ([1.10102, 1.09961, 1.10625, 1.09741, 1.09884, 1.09447, 1.09675, 1.10211, 1.10884, 1.11256, 1.09829, 1.10758, 1.10468, 1.09162, 1.09106, 1.09009, 1.10587, 1.09068, 1.09342, 1.09064, 1.10843, 1.12209, 1.09726, 1.0961, 1.09303, 1.09772, 1.09607, 1.09445, 1.09143, 1.09036], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		203
        Multiplications: 	60
        Divisions: 		0
        Logical: 		0
        Reads: 			441
        Writes: 		76
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest18.exe __orio_perftest18.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest18.exe  
Program Test Output: 
{'[2, 1, 2, 1, 2, 2, 1, 0, 11, 0, 6, 12, 0, 1, 1, 0, 1, 0]' : 0.81422}
{'[2, 1, 2, 1, 2, 2, 1, 0, 11, 0, 6, 12, 0, 1, 1, 0, 1, 0]' : 0.81391}
{'[2, 1, 2, 1, 2, 2, 1, 0, 11, 0, 6, 12, 0, 1, 1, 0, 1, 0]' : 0.832129}
{'[2, 1, 2, 1, 2, 2, 1, 0, 11, 0, 6, 12, 0, 1, 1, 0, 1, 0]' : 0.812484}
{'[2, 1, 2, 1, 2, 2, 1, 0, 11, 0, 6, 12, 0, 1, 1, 0, 1, 0]' : 0.811428}
{'[2, 1, 2, 1, 2, 2, 1, 0, 11, 0, 6, 12, 0, 1, 1, 0, 1, 0]' : 0.813126}
{'[2, 1, 2, 1, 2, 2, 1, 0, 11, 0, 6, 12, 0, 1, 1, 0, 1, 0]' : 0.817729}
{'[2, 1, 2, 1, 2, 2, 1, 0, 11, 0, 6, 12, 0, 1, 1, 0, 1, 0]' : 0.8119}
{'[2, 1, 2, 1, 2, 2, 1, 0, 11, 0, 6, 12, 0, 1, 1, 0, 1, 0]' : 0.82713}
{'[2, 1, 2, 1, 2, 2, 1, 0, 11, 0, 6, 12, 0, 1, 1, 0, 1, 0]' : 0.813877}
{'[2, 1, 2, 1, 2, 2, 1, 0, 11, 0, 6, 12, 0, 1, 1, 0, 1, 0]' : 0.810273}
{'[2, 1, 2, 1, 2, 2, 1, 0, 11, 0, 6, 12, 0, 1, 1, 0, 1, 0]' : 0.812493}
{'[2, 1, 2, 1, 2, 2, 1, 0, 11, 0, 6, 12, 0, 1, 1, 0, 1, 0]' : 0.811265}
{'[2, 1, 2, 1, 2, 2, 1, 0, 11, 0, 6, 12, 0, 1, 1, 0, 1, 0]' : 0.815521}
{'[2, 1, 2, 1, 2, 2, 1, 0, 11, 0, 6, 12, 0, 1, 1, 0, 1, 0]' : 0.819289}
{'[2, 1, 2, 1, 2, 2, 1, 0, 11, 0, 6, 12, 0, 1, 1, 0, 1, 0]' : 0.814563}
{'[2, 1, 2, 1, 2, 2, 1, 0, 11, 0, 6, 12, 0, 1, 1, 0, 1, 0]' : 0.812601}
{'[2, 1, 2, 1, 2, 2, 1, 0, 11, 0, 6, 12, 0, 1, 1, 0, 1, 0]' : 0.81592}
{'[2, 1, 2, 1, 2, 2, 1, 0, 11, 0, 6, 12, 0, 1, 1, 0, 1, 0]' : 0.812474}
{'[2, 1, 2, 1, 2, 2, 1, 0, 11, 0, 6, 12, 0, 1, 1, 0, 1, 0]' : 0.812794}
{'[2, 1, 2, 1, 2, 2, 1, 0, 11, 0, 6, 12, 0, 1, 1, 0, 1, 0]' : 0.819999}
{'[2, 1, 2, 1, 2, 2, 1, 0, 11, 0, 6, 12, 0, 1, 1, 0, 1, 0]' : 0.81329}
{'[2, 1, 2, 1, 2, 2, 1, 0, 11, 0, 6, 12, 0, 1, 1, 0, 1, 0]' : 0.814133}
{'[2, 1, 2, 1, 2, 2, 1, 0, 11, 0, 6, 12, 0, 1, 1, 0, 1, 0]' : 0.810841}
{'[2, 1, 2, 1, 2, 2, 1, 0, 11, 0, 6, 12, 0, 1, 1, 0, 1, 0]' : 0.814659}
{'[2, 1, 2, 1, 2, 2, 1, 0, 11, 0, 6, 12, 0, 1, 1, 0, 1, 0]' : 0.814918}
{'[2, 1, 2, 1, 2, 2, 1, 0, 11, 0, 6, 12, 0, 1, 1, 0, 1, 0]' : 0.812621}
{'[2, 1, 2, 1, 2, 2, 1, 0, 11, 0, 6, 12, 0, 1, 1, 0, 1, 0]' : 0.818257}
{'[2, 1, 2, 1, 2, 2, 1, 0, 11, 0, 6, 12, 0, 1, 1, 0, 1, 0]' : 0.813432}
{'[2, 1, 2, 1, 2, 2, 1, 0, 11, 0, 6, 12, 0, 1, 1, 0, 1, 0]' : 0.810626}

out:
 ["{'[2, 1, 2, 1, 2, 2, 1, 0, 11, 0, 6, 12, 0, 1, 1, 0, 1, 0]' : 0.81422}", "{'[2, 1, 2, 1, 2, 2, 1, 0, 11, 0, 6, 12, 0, 1, 1, 0, 1, 0]' : 0.81391}", "{'[2, 1, 2, 1, 2, 2, 1, 0, 11, 0, 6, 12, 0, 1, 1, 0, 1, 0]' : 0.832129}", "{'[2, 1, 2, 1, 2, 2, 1, 0, 11, 0, 6, 12, 0, 1, 1, 0, 1, 0]' : 0.812484}", "{'[2, 1, 2, 1, 2, 2, 1, 0, 11, 0, 6, 12, 0, 1, 1, 0, 1, 0]' : 0.811428}", "{'[2, 1, 2, 1, 2, 2, 1, 0, 11, 0, 6, 12, 0, 1, 1, 0, 1, 0]' : 0.813126}", "{'[2, 1, 2, 1, 2, 2, 1, 0, 11, 0, 6, 12, 0, 1, 1, 0, 1, 0]' : 0.817729}", "{'[2, 1, 2, 1, 2, 2, 1, 0, 11, 0, 6, 12, 0, 1, 1, 0, 1, 0]' : 0.8119}", "{'[2, 1, 2, 1, 2, 2, 1, 0, 11, 0, 6, 12, 0, 1, 1, 0, 1, 0]' : 0.82713}", "{'[2, 1, 2, 1, 2, 2, 1, 0, 11, 0, 6, 12, 0, 1, 1, 0, 1, 0]' : 0.813877}", "{'[2, 1, 2, 1, 2, 2, 1, 0, 11, 0, 6, 12, 0, 1, 1, 0, 1, 0]' : 0.810273}", "{'[2, 1, 2, 1, 2, 2, 1, 0, 11, 0, 6, 12, 0, 1, 1, 0, 1, 0]' : 0.812493}", "{'[2, 1, 2, 1, 2, 2, 1, 0, 11, 0, 6, 12, 0, 1, 1, 0, 1, 0]' : 0.811265}", "{'[2, 1, 2, 1, 2, 2, 1, 0, 11, 0, 6, 12, 0, 1, 1, 0, 1, 0]' : 0.815521}", "{'[2, 1, 2, 1, 2, 2, 1, 0, 11, 0, 6, 12, 0, 1, 1, 0, 1, 0]' : 0.819289}", "{'[2, 1, 2, 1, 2, 2, 1, 0, 11, 0, 6, 12, 0, 1, 1, 0, 1, 0]' : 0.814563}", "{'[2, 1, 2, 1, 2, 2, 1, 0, 11, 0, 6, 12, 0, 1, 1, 0, 1, 0]' : 0.812601}", "{'[2, 1, 2, 1, 2, 2, 1, 0, 11, 0, 6, 12, 0, 1, 1, 0, 1, 0]' : 0.81592}", "{'[2, 1, 2, 1, 2, 2, 1, 0, 11, 0, 6, 12, 0, 1, 1, 0, 1, 0]' : 0.812474}", "{'[2, 1, 2, 1, 2, 2, 1, 0, 11, 0, 6, 12, 0, 1, 1, 0, 1, 0]' : 0.812794}", "{'[2, 1, 2, 1, 2, 2, 1, 0, 11, 0, 6, 12, 0, 1, 1, 0, 1, 0]' : 0.819999}", "{'[2, 1, 2, 1, 2, 2, 1, 0, 11, 0, 6, 12, 0, 1, 1, 0, 1, 0]' : 0.81329}", "{'[2, 1, 2, 1, 2, 2, 1, 0, 11, 0, 6, 12, 0, 1, 1, 0, 1, 0]' : 0.814133}", "{'[2, 1, 2, 1, 2, 2, 1, 0, 11, 0, 6, 12, 0, 1, 1, 0, 1, 0]' : 0.810841}", "{'[2, 1, 2, 1, 2, 2, 1, 0, 11, 0, 6, 12, 0, 1, 1, 0, 1, 0]' : 0.814659}", "{'[2, 1, 2, 1, 2, 2, 1, 0, 11, 0, 6, 12, 0, 1, 1, 0, 1, 0]' : 0.814918}", "{'[2, 1, 2, 1, 2, 2, 1, 0, 11, 0, 6, 12, 0, 1, 1, 0, 1, 0]' : 0.812621}", "{'[2, 1, 2, 1, 2, 2, 1, 0, 11, 0, 6, 12, 0, 1, 1, 0, 1, 0]' : 0.818257}", "{'[2, 1, 2, 1, 2, 2, 1, 0, 11, 0, 6, 12, 0, 1, 1, 0, 1, 0]' : 0.813432}", "{'[2, 1, 2, 1, 2, 2, 1, 0, 11, 0, 6, 12, 0, 1, 1, 0, 1, 0]' : 0.810626}"]
returning from 'run': {'[2, 1, 2, 1, 2, 2, 1, 0, 11, 0, 6, 12, 0, 1, 1, 0, 1, 0]': ([0.81422, 0.81391, 0.832129, 0.812484, 0.811428, 0.813126, 0.817729, 0.8119, 0.82713, 0.813877, 0.810273, 0.812493, 0.811265, 0.815521, 0.819289, 0.814563, 0.812601, 0.81592, 0.812474, 0.812794, 0.819999, 0.81329, 0.814133, 0.810841, 0.814659, 0.814918, 0.812621, 0.818257, 0.813432, 0.810626], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 1, 2, 1, 2, 2, 1, 0, 11, 0, 6, 12, 0, 1, 1, 0, 1, 0]': ([0.81422, 0.81391, 0.832129, 0.812484, 0.811428, 0.813126, 0.817729, 0.8119, 0.82713, 0.813877, 0.810273, 0.812493, 0.811265, 0.815521, 0.819289, 0.814563, 0.812601, 0.81592, 0.812474, 0.812794, 0.819999, 0.81329, 0.814133, 0.810841, 0.814659, 0.814918, 0.812621, 0.818257, 0.813432, 0.810626], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = jjj
Code stats:
        Number of loops: 	137
        Max loop nest depth: 	5
        Additions: 		6660
        Multiplications: 	2300
        Divisions: 		0
        Logical: 		0
        Reads: 			12675
        Writes: 		2322
        Comparisons:		137
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest19.exe __orio_perftest19.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest19.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest19.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest19.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 597, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 536, in dopt_anova
    i)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 485, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 387, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest19.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 597, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 536, in dopt_anova
    i)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 485, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 387, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		195
        Multiplications: 	44
        Divisions: 		0
        Logical: 		0
        Reads: 			432
        Writes: 		101
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest20.exe __orio_perftest20.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest20.exe  
Program Test Output: 
{'[3, 5, 2, 2, 0, 2, 1, 1, 11, 0, 27, 12, 0, 1, 0, 1, 0, 1]' : 0.836276}
{'[3, 5, 2, 2, 0, 2, 1, 1, 11, 0, 27, 12, 0, 1, 0, 1, 0, 1]' : 0.827111}
{'[3, 5, 2, 2, 0, 2, 1, 1, 11, 0, 27, 12, 0, 1, 0, 1, 0, 1]' : 0.832569}
{'[3, 5, 2, 2, 0, 2, 1, 1, 11, 0, 27, 12, 0, 1, 0, 1, 0, 1]' : 0.822813}
{'[3, 5, 2, 2, 0, 2, 1, 1, 11, 0, 27, 12, 0, 1, 0, 1, 0, 1]' : 0.824312}
{'[3, 5, 2, 2, 0, 2, 1, 1, 11, 0, 27, 12, 0, 1, 0, 1, 0, 1]' : 0.822641}
{'[3, 5, 2, 2, 0, 2, 1, 1, 11, 0, 27, 12, 0, 1, 0, 1, 0, 1]' : 0.825872}
{'[3, 5, 2, 2, 0, 2, 1, 1, 11, 0, 27, 12, 0, 1, 0, 1, 0, 1]' : 0.833659}
{'[3, 5, 2, 2, 0, 2, 1, 1, 11, 0, 27, 12, 0, 1, 0, 1, 0, 1]' : 0.824691}
{'[3, 5, 2, 2, 0, 2, 1, 1, 11, 0, 27, 12, 0, 1, 0, 1, 0, 1]' : 0.848527}
{'[3, 5, 2, 2, 0, 2, 1, 1, 11, 0, 27, 12, 0, 1, 0, 1, 0, 1]' : 0.825574}
{'[3, 5, 2, 2, 0, 2, 1, 1, 11, 0, 27, 12, 0, 1, 0, 1, 0, 1]' : 0.820959}
{'[3, 5, 2, 2, 0, 2, 1, 1, 11, 0, 27, 12, 0, 1, 0, 1, 0, 1]' : 0.819485}
{'[3, 5, 2, 2, 0, 2, 1, 1, 11, 0, 27, 12, 0, 1, 0, 1, 0, 1]' : 0.817486}
{'[3, 5, 2, 2, 0, 2, 1, 1, 11, 0, 27, 12, 0, 1, 0, 1, 0, 1]' : 0.820677}
{'[3, 5, 2, 2, 0, 2, 1, 1, 11, 0, 27, 12, 0, 1, 0, 1, 0, 1]' : 0.815783}
{'[3, 5, 2, 2, 0, 2, 1, 1, 11, 0, 27, 12, 0, 1, 0, 1, 0, 1]' : 0.816895}
{'[3, 5, 2, 2, 0, 2, 1, 1, 11, 0, 27, 12, 0, 1, 0, 1, 0, 1]' : 0.815354}
{'[3, 5, 2, 2, 0, 2, 1, 1, 11, 0, 27, 12, 0, 1, 0, 1, 0, 1]' : 0.818222}
{'[3, 5, 2, 2, 0, 2, 1, 1, 11, 0, 27, 12, 0, 1, 0, 1, 0, 1]' : 0.816058}
{'[3, 5, 2, 2, 0, 2, 1, 1, 11, 0, 27, 12, 0, 1, 0, 1, 0, 1]' : 0.820293}
{'[3, 5, 2, 2, 0, 2, 1, 1, 11, 0, 27, 12, 0, 1, 0, 1, 0, 1]' : 0.821932}
{'[3, 5, 2, 2, 0, 2, 1, 1, 11, 0, 27, 12, 0, 1, 0, 1, 0, 1]' : 0.816891}
{'[3, 5, 2, 2, 0, 2, 1, 1, 11, 0, 27, 12, 0, 1, 0, 1, 0, 1]' : 0.819127}
{'[3, 5, 2, 2, 0, 2, 1, 1, 11, 0, 27, 12, 0, 1, 0, 1, 0, 1]' : 0.823692}
{'[3, 5, 2, 2, 0, 2, 1, 1, 11, 0, 27, 12, 0, 1, 0, 1, 0, 1]' : 0.81582}
{'[3, 5, 2, 2, 0, 2, 1, 1, 11, 0, 27, 12, 0, 1, 0, 1, 0, 1]' : 0.814782}
{'[3, 5, 2, 2, 0, 2, 1, 1, 11, 0, 27, 12, 0, 1, 0, 1, 0, 1]' : 0.818512}
{'[3, 5, 2, 2, 0, 2, 1, 1, 11, 0, 27, 12, 0, 1, 0, 1, 0, 1]' : 0.816647}
{'[3, 5, 2, 2, 0, 2, 1, 1, 11, 0, 27, 12, 0, 1, 0, 1, 0, 1]' : 0.815923}

out:
 ["{'[3, 5, 2, 2, 0, 2, 1, 1, 11, 0, 27, 12, 0, 1, 0, 1, 0, 1]' : 0.836276}", "{'[3, 5, 2, 2, 0, 2, 1, 1, 11, 0, 27, 12, 0, 1, 0, 1, 0, 1]' : 0.827111}", "{'[3, 5, 2, 2, 0, 2, 1, 1, 11, 0, 27, 12, 0, 1, 0, 1, 0, 1]' : 0.832569}", "{'[3, 5, 2, 2, 0, 2, 1, 1, 11, 0, 27, 12, 0, 1, 0, 1, 0, 1]' : 0.822813}", "{'[3, 5, 2, 2, 0, 2, 1, 1, 11, 0, 27, 12, 0, 1, 0, 1, 0, 1]' : 0.824312}", "{'[3, 5, 2, 2, 0, 2, 1, 1, 11, 0, 27, 12, 0, 1, 0, 1, 0, 1]' : 0.822641}", "{'[3, 5, 2, 2, 0, 2, 1, 1, 11, 0, 27, 12, 0, 1, 0, 1, 0, 1]' : 0.825872}", "{'[3, 5, 2, 2, 0, 2, 1, 1, 11, 0, 27, 12, 0, 1, 0, 1, 0, 1]' : 0.833659}", "{'[3, 5, 2, 2, 0, 2, 1, 1, 11, 0, 27, 12, 0, 1, 0, 1, 0, 1]' : 0.824691}", "{'[3, 5, 2, 2, 0, 2, 1, 1, 11, 0, 27, 12, 0, 1, 0, 1, 0, 1]' : 0.848527}", "{'[3, 5, 2, 2, 0, 2, 1, 1, 11, 0, 27, 12, 0, 1, 0, 1, 0, 1]' : 0.825574}", "{'[3, 5, 2, 2, 0, 2, 1, 1, 11, 0, 27, 12, 0, 1, 0, 1, 0, 1]' : 0.820959}", "{'[3, 5, 2, 2, 0, 2, 1, 1, 11, 0, 27, 12, 0, 1, 0, 1, 0, 1]' : 0.819485}", "{'[3, 5, 2, 2, 0, 2, 1, 1, 11, 0, 27, 12, 0, 1, 0, 1, 0, 1]' : 0.817486}", "{'[3, 5, 2, 2, 0, 2, 1, 1, 11, 0, 27, 12, 0, 1, 0, 1, 0, 1]' : 0.820677}", "{'[3, 5, 2, 2, 0, 2, 1, 1, 11, 0, 27, 12, 0, 1, 0, 1, 0, 1]' : 0.815783}", "{'[3, 5, 2, 2, 0, 2, 1, 1, 11, 0, 27, 12, 0, 1, 0, 1, 0, 1]' : 0.816895}", "{'[3, 5, 2, 2, 0, 2, 1, 1, 11, 0, 27, 12, 0, 1, 0, 1, 0, 1]' : 0.815354}", "{'[3, 5, 2, 2, 0, 2, 1, 1, 11, 0, 27, 12, 0, 1, 0, 1, 0, 1]' : 0.818222}", "{'[3, 5, 2, 2, 0, 2, 1, 1, 11, 0, 27, 12, 0, 1, 0, 1, 0, 1]' : 0.816058}", "{'[3, 5, 2, 2, 0, 2, 1, 1, 11, 0, 27, 12, 0, 1, 0, 1, 0, 1]' : 0.820293}", "{'[3, 5, 2, 2, 0, 2, 1, 1, 11, 0, 27, 12, 0, 1, 0, 1, 0, 1]' : 0.821932}", "{'[3, 5, 2, 2, 0, 2, 1, 1, 11, 0, 27, 12, 0, 1, 0, 1, 0, 1]' : 0.816891}", "{'[3, 5, 2, 2, 0, 2, 1, 1, 11, 0, 27, 12, 0, 1, 0, 1, 0, 1]' : 0.819127}", "{'[3, 5, 2, 2, 0, 2, 1, 1, 11, 0, 27, 12, 0, 1, 0, 1, 0, 1]' : 0.823692}", "{'[3, 5, 2, 2, 0, 2, 1, 1, 11, 0, 27, 12, 0, 1, 0, 1, 0, 1]' : 0.81582}", "{'[3, 5, 2, 2, 0, 2, 1, 1, 11, 0, 27, 12, 0, 1, 0, 1, 0, 1]' : 0.814782}", "{'[3, 5, 2, 2, 0, 2, 1, 1, 11, 0, 27, 12, 0, 1, 0, 1, 0, 1]' : 0.818512}", "{'[3, 5, 2, 2, 0, 2, 1, 1, 11, 0, 27, 12, 0, 1, 0, 1, 0, 1]' : 0.816647}", "{'[3, 5, 2, 2, 0, 2, 1, 1, 11, 0, 27, 12, 0, 1, 0, 1, 0, 1]' : 0.815923}"]
returning from 'run': {'[3, 5, 2, 2, 0, 2, 1, 1, 11, 0, 27, 12, 0, 1, 0, 1, 0, 1]': ([0.836276, 0.827111, 0.832569, 0.822813, 0.824312, 0.822641, 0.825872, 0.833659, 0.824691, 0.848527, 0.825574, 0.820959, 0.819485, 0.817486, 0.820677, 0.815783, 0.816895, 0.815354, 0.818222, 0.816058, 0.820293, 0.821932, 0.816891, 0.819127, 0.823692, 0.81582, 0.814782, 0.818512, 0.816647, 0.815923], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 5, 2, 2, 0, 2, 1, 1, 11, 0, 27, 12, 0, 1, 0, 1, 0, 1]': ([0.836276, 0.827111, 0.832569, 0.822813, 0.824312, 0.822641, 0.825872, 0.833659, 0.824691, 0.848527, 0.825574, 0.820959, 0.819485, 0.817486, 0.820677, 0.815783, 0.816895, 0.815354, 0.818222, 0.816058, 0.820293, 0.821932, 0.816891, 0.819127, 0.823692, 0.81582, 0.814782, 0.818512, 0.816647, 0.815923], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = iii
Code stats:
        Number of loops: 	28
        Max loop nest depth: 	5
        Additions: 		1017
        Multiplications: 	276
        Divisions: 		0
        Logical: 		0
        Reads: 			1859
        Writes: 		230
        Comparisons:		28
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest21.exe __orio_perftest21.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest21.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest21.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest21.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 597, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 536, in dopt_anova
    i)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 485, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 387, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest21.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 597, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 536, in dopt_anova
    i)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 485, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 387, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	111
        Max loop nest depth: 	6
        Additions: 		10421
        Multiplications: 	2914
        Divisions: 		0
        Logical: 		0
        Reads: 			15737
        Writes: 		1754
        Comparisons:		111
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest22.exe __orio_perftest22.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest22.exe  
Program Test Output: 
{'[1, 1, 2, 2, 5, 5, 1, 0, 11, 29, 0, 12, 0, 0, 2, 0, 0, 0]' : 1.30595}
{'[1, 1, 2, 2, 5, 5, 1, 0, 11, 29, 0, 12, 0, 0, 2, 0, 0, 0]' : 1.30455}
{'[1, 1, 2, 2, 5, 5, 1, 0, 11, 29, 0, 12, 0, 0, 2, 0, 0, 0]' : 1.30733}
{'[1, 1, 2, 2, 5, 5, 1, 0, 11, 29, 0, 12, 0, 0, 2, 0, 0, 0]' : 1.30657}
{'[1, 1, 2, 2, 5, 5, 1, 0, 11, 29, 0, 12, 0, 0, 2, 0, 0, 0]' : 1.30712}
{'[1, 1, 2, 2, 5, 5, 1, 0, 11, 29, 0, 12, 0, 0, 2, 0, 0, 0]' : 1.32122}
{'[1, 1, 2, 2, 5, 5, 1, 0, 11, 29, 0, 12, 0, 0, 2, 0, 0, 0]' : 1.30563}
{'[1, 1, 2, 2, 5, 5, 1, 0, 11, 29, 0, 12, 0, 0, 2, 0, 0, 0]' : 1.30477}
{'[1, 1, 2, 2, 5, 5, 1, 0, 11, 29, 0, 12, 0, 0, 2, 0, 0, 0]' : 1.30562}
{'[1, 1, 2, 2, 5, 5, 1, 0, 11, 29, 0, 12, 0, 0, 2, 0, 0, 0]' : 1.30834}
{'[1, 1, 2, 2, 5, 5, 1, 0, 11, 29, 0, 12, 0, 0, 2, 0, 0, 0]' : 1.30336}
{'[1, 1, 2, 2, 5, 5, 1, 0, 11, 29, 0, 12, 0, 0, 2, 0, 0, 0]' : 1.30741}
{'[1, 1, 2, 2, 5, 5, 1, 0, 11, 29, 0, 12, 0, 0, 2, 0, 0, 0]' : 1.30306}
{'[1, 1, 2, 2, 5, 5, 1, 0, 11, 29, 0, 12, 0, 0, 2, 0, 0, 0]' : 1.30512}
{'[1, 1, 2, 2, 5, 5, 1, 0, 11, 29, 0, 12, 0, 0, 2, 0, 0, 0]' : 1.31189}
{'[1, 1, 2, 2, 5, 5, 1, 0, 11, 29, 0, 12, 0, 0, 2, 0, 0, 0]' : 1.30743}
{'[1, 1, 2, 2, 5, 5, 1, 0, 11, 29, 0, 12, 0, 0, 2, 0, 0, 0]' : 1.32969}
{'[1, 1, 2, 2, 5, 5, 1, 0, 11, 29, 0, 12, 0, 0, 2, 0, 0, 0]' : 1.31077}
{'[1, 1, 2, 2, 5, 5, 1, 0, 11, 29, 0, 12, 0, 0, 2, 0, 0, 0]' : 1.30446}
{'[1, 1, 2, 2, 5, 5, 1, 0, 11, 29, 0, 12, 0, 0, 2, 0, 0, 0]' : 1.30673}
{'[1, 1, 2, 2, 5, 5, 1, 0, 11, 29, 0, 12, 0, 0, 2, 0, 0, 0]' : 1.30453}
{'[1, 1, 2, 2, 5, 5, 1, 0, 11, 29, 0, 12, 0, 0, 2, 0, 0, 0]' : 1.30517}
{'[1, 1, 2, 2, 5, 5, 1, 0, 11, 29, 0, 12, 0, 0, 2, 0, 0, 0]' : 1.30524}
{'[1, 1, 2, 2, 5, 5, 1, 0, 11, 29, 0, 12, 0, 0, 2, 0, 0, 0]' : 1.31166}
{'[1, 1, 2, 2, 5, 5, 1, 0, 11, 29, 0, 12, 0, 0, 2, 0, 0, 0]' : 1.30449}
{'[1, 1, 2, 2, 5, 5, 1, 0, 11, 29, 0, 12, 0, 0, 2, 0, 0, 0]' : 1.30405}
{'[1, 1, 2, 2, 5, 5, 1, 0, 11, 29, 0, 12, 0, 0, 2, 0, 0, 0]' : 1.31384}
{'[1, 1, 2, 2, 5, 5, 1, 0, 11, 29, 0, 12, 0, 0, 2, 0, 0, 0]' : 1.30494}
{'[1, 1, 2, 2, 5, 5, 1, 0, 11, 29, 0, 12, 0, 0, 2, 0, 0, 0]' : 1.32033}
{'[1, 1, 2, 2, 5, 5, 1, 0, 11, 29, 0, 12, 0, 0, 2, 0, 0, 0]' : 1.3075}

out:
 ["{'[1, 1, 2, 2, 5, 5, 1, 0, 11, 29, 0, 12, 0, 0, 2, 0, 0, 0]' : 1.30595}", "{'[1, 1, 2, 2, 5, 5, 1, 0, 11, 29, 0, 12, 0, 0, 2, 0, 0, 0]' : 1.30455}", "{'[1, 1, 2, 2, 5, 5, 1, 0, 11, 29, 0, 12, 0, 0, 2, 0, 0, 0]' : 1.30733}", "{'[1, 1, 2, 2, 5, 5, 1, 0, 11, 29, 0, 12, 0, 0, 2, 0, 0, 0]' : 1.30657}", "{'[1, 1, 2, 2, 5, 5, 1, 0, 11, 29, 0, 12, 0, 0, 2, 0, 0, 0]' : 1.30712}", "{'[1, 1, 2, 2, 5, 5, 1, 0, 11, 29, 0, 12, 0, 0, 2, 0, 0, 0]' : 1.32122}", "{'[1, 1, 2, 2, 5, 5, 1, 0, 11, 29, 0, 12, 0, 0, 2, 0, 0, 0]' : 1.30563}", "{'[1, 1, 2, 2, 5, 5, 1, 0, 11, 29, 0, 12, 0, 0, 2, 0, 0, 0]' : 1.30477}", "{'[1, 1, 2, 2, 5, 5, 1, 0, 11, 29, 0, 12, 0, 0, 2, 0, 0, 0]' : 1.30562}", "{'[1, 1, 2, 2, 5, 5, 1, 0, 11, 29, 0, 12, 0, 0, 2, 0, 0, 0]' : 1.30834}", "{'[1, 1, 2, 2, 5, 5, 1, 0, 11, 29, 0, 12, 0, 0, 2, 0, 0, 0]' : 1.30336}", "{'[1, 1, 2, 2, 5, 5, 1, 0, 11, 29, 0, 12, 0, 0, 2, 0, 0, 0]' : 1.30741}", "{'[1, 1, 2, 2, 5, 5, 1, 0, 11, 29, 0, 12, 0, 0, 2, 0, 0, 0]' : 1.30306}", "{'[1, 1, 2, 2, 5, 5, 1, 0, 11, 29, 0, 12, 0, 0, 2, 0, 0, 0]' : 1.30512}", "{'[1, 1, 2, 2, 5, 5, 1, 0, 11, 29, 0, 12, 0, 0, 2, 0, 0, 0]' : 1.31189}", "{'[1, 1, 2, 2, 5, 5, 1, 0, 11, 29, 0, 12, 0, 0, 2, 0, 0, 0]' : 1.30743}", "{'[1, 1, 2, 2, 5, 5, 1, 0, 11, 29, 0, 12, 0, 0, 2, 0, 0, 0]' : 1.32969}", "{'[1, 1, 2, 2, 5, 5, 1, 0, 11, 29, 0, 12, 0, 0, 2, 0, 0, 0]' : 1.31077}", "{'[1, 1, 2, 2, 5, 5, 1, 0, 11, 29, 0, 12, 0, 0, 2, 0, 0, 0]' : 1.30446}", "{'[1, 1, 2, 2, 5, 5, 1, 0, 11, 29, 0, 12, 0, 0, 2, 0, 0, 0]' : 1.30673}", "{'[1, 1, 2, 2, 5, 5, 1, 0, 11, 29, 0, 12, 0, 0, 2, 0, 0, 0]' : 1.30453}", "{'[1, 1, 2, 2, 5, 5, 1, 0, 11, 29, 0, 12, 0, 0, 2, 0, 0, 0]' : 1.30517}", "{'[1, 1, 2, 2, 5, 5, 1, 0, 11, 29, 0, 12, 0, 0, 2, 0, 0, 0]' : 1.30524}", "{'[1, 1, 2, 2, 5, 5, 1, 0, 11, 29, 0, 12, 0, 0, 2, 0, 0, 0]' : 1.31166}", "{'[1, 1, 2, 2, 5, 5, 1, 0, 11, 29, 0, 12, 0, 0, 2, 0, 0, 0]' : 1.30449}", "{'[1, 1, 2, 2, 5, 5, 1, 0, 11, 29, 0, 12, 0, 0, 2, 0, 0, 0]' : 1.30405}", "{'[1, 1, 2, 2, 5, 5, 1, 0, 11, 29, 0, 12, 0, 0, 2, 0, 0, 0]' : 1.31384}", "{'[1, 1, 2, 2, 5, 5, 1, 0, 11, 29, 0, 12, 0, 0, 2, 0, 0, 0]' : 1.30494}", "{'[1, 1, 2, 2, 5, 5, 1, 0, 11, 29, 0, 12, 0, 0, 2, 0, 0, 0]' : 1.32033}", "{'[1, 1, 2, 2, 5, 5, 1, 0, 11, 29, 0, 12, 0, 0, 2, 0, 0, 0]' : 1.3075}"]
returning from 'run': {'[1, 1, 2, 2, 5, 5, 1, 0, 11, 29, 0, 12, 0, 0, 2, 0, 0, 0]': ([1.30595, 1.30455, 1.30733, 1.30657, 1.30712, 1.32122, 1.30563, 1.30477, 1.30562, 1.30834, 1.30336, 1.30741, 1.30306, 1.30512, 1.31189, 1.30743, 1.32969, 1.31077, 1.30446, 1.30673, 1.30453, 1.30517, 1.30524, 1.31166, 1.30449, 1.30405, 1.31384, 1.30494, 1.32033, 1.3075], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 1, 2, 2, 5, 5, 1, 0, 11, 29, 0, 12, 0, 0, 2, 0, 0, 0]': ([1.30595, 1.30455, 1.30733, 1.30657, 1.30712, 1.32122, 1.30563, 1.30477, 1.30562, 1.30834, 1.30336, 1.30741, 1.30306, 1.30512, 1.31189, 1.30743, 1.32969, 1.31077, 1.30446, 1.30673, 1.30453, 1.30517, 1.30524, 1.31166, 1.30449, 1.30405, 1.31384, 1.30494, 1.32033, 1.3075], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	33
        Max loop nest depth: 	6
        Additions: 		4412
        Multiplications: 	1196
        Divisions: 		0
        Logical: 		0
        Reads: 			6750
        Writes: 		706
        Comparisons:		33
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest23.exe __orio_perftest23.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest23.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest23.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest23.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 597, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 536, in dopt_anova
    i)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 485, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 387, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest23.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 597, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 536, in dopt_anova
    i)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 485, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 387, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	118
        Max loop nest depth: 	5
        Additions: 		2943
        Multiplications: 	630
        Divisions: 		0
        Logical: 		0
        Reads: 			5953
        Writes: 		1279
        Comparisons:		118
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest24.exe __orio_perftest24.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest24.exe  
Program Test Output: 
{'[2, 5, 6, 0, 6, 0, 1, 1, 11, 19, 0, 12, 0, 0, 0, 1, 0, 0]' : 0.53937}
{'[2, 5, 6, 0, 6, 0, 1, 1, 11, 19, 0, 12, 0, 0, 0, 1, 0, 0]' : 0.527693}
{'[2, 5, 6, 0, 6, 0, 1, 1, 11, 19, 0, 12, 0, 0, 0, 1, 0, 0]' : 0.537341}
{'[2, 5, 6, 0, 6, 0, 1, 1, 11, 19, 0, 12, 0, 0, 0, 1, 0, 0]' : 0.537163}
{'[2, 5, 6, 0, 6, 0, 1, 1, 11, 19, 0, 12, 0, 0, 0, 1, 0, 0]' : 0.552368}
{'[2, 5, 6, 0, 6, 0, 1, 1, 11, 19, 0, 12, 0, 0, 0, 1, 0, 0]' : 0.558887}
{'[2, 5, 6, 0, 6, 0, 1, 1, 11, 19, 0, 12, 0, 0, 0, 1, 0, 0]' : 0.527788}
{'[2, 5, 6, 0, 6, 0, 1, 1, 11, 19, 0, 12, 0, 0, 0, 1, 0, 0]' : 0.52988}
{'[2, 5, 6, 0, 6, 0, 1, 1, 11, 19, 0, 12, 0, 0, 0, 1, 0, 0]' : 0.518102}
{'[2, 5, 6, 0, 6, 0, 1, 1, 11, 19, 0, 12, 0, 0, 0, 1, 0, 0]' : 0.517789}
{'[2, 5, 6, 0, 6, 0, 1, 1, 11, 19, 0, 12, 0, 0, 0, 1, 0, 0]' : 0.517897}
{'[2, 5, 6, 0, 6, 0, 1, 1, 11, 19, 0, 12, 0, 0, 0, 1, 0, 0]' : 0.52122}
{'[2, 5, 6, 0, 6, 0, 1, 1, 11, 19, 0, 12, 0, 0, 0, 1, 0, 0]' : 0.521335}
{'[2, 5, 6, 0, 6, 0, 1, 1, 11, 19, 0, 12, 0, 0, 0, 1, 0, 0]' : 0.517065}
{'[2, 5, 6, 0, 6, 0, 1, 1, 11, 19, 0, 12, 0, 0, 0, 1, 0, 0]' : 0.522302}
{'[2, 5, 6, 0, 6, 0, 1, 1, 11, 19, 0, 12, 0, 0, 0, 1, 0, 0]' : 0.517484}
{'[2, 5, 6, 0, 6, 0, 1, 1, 11, 19, 0, 12, 0, 0, 0, 1, 0, 0]' : 0.521787}
{'[2, 5, 6, 0, 6, 0, 1, 1, 11, 19, 0, 12, 0, 0, 0, 1, 0, 0]' : 0.518719}
{'[2, 5, 6, 0, 6, 0, 1, 1, 11, 19, 0, 12, 0, 0, 0, 1, 0, 0]' : 0.521336}
{'[2, 5, 6, 0, 6, 0, 1, 1, 11, 19, 0, 12, 0, 0, 0, 1, 0, 0]' : 0.516866}
{'[2, 5, 6, 0, 6, 0, 1, 1, 11, 19, 0, 12, 0, 0, 0, 1, 0, 0]' : 0.521693}
{'[2, 5, 6, 0, 6, 0, 1, 1, 11, 19, 0, 12, 0, 0, 0, 1, 0, 0]' : 0.518526}
{'[2, 5, 6, 0, 6, 0, 1, 1, 11, 19, 0, 12, 0, 0, 0, 1, 0, 0]' : 0.552945}
{'[2, 5, 6, 0, 6, 0, 1, 1, 11, 19, 0, 12, 0, 0, 0, 1, 0, 0]' : 0.518716}
{'[2, 5, 6, 0, 6, 0, 1, 1, 11, 19, 0, 12, 0, 0, 0, 1, 0, 0]' : 0.524131}
{'[2, 5, 6, 0, 6, 0, 1, 1, 11, 19, 0, 12, 0, 0, 0, 1, 0, 0]' : 0.519063}
{'[2, 5, 6, 0, 6, 0, 1, 1, 11, 19, 0, 12, 0, 0, 0, 1, 0, 0]' : 0.519409}
{'[2, 5, 6, 0, 6, 0, 1, 1, 11, 19, 0, 12, 0, 0, 0, 1, 0, 0]' : 0.521785}
{'[2, 5, 6, 0, 6, 0, 1, 1, 11, 19, 0, 12, 0, 0, 0, 1, 0, 0]' : 0.525138}
{'[2, 5, 6, 0, 6, 0, 1, 1, 11, 19, 0, 12, 0, 0, 0, 1, 0, 0]' : 0.526265}

out:
 ["{'[2, 5, 6, 0, 6, 0, 1, 1, 11, 19, 0, 12, 0, 0, 0, 1, 0, 0]' : 0.53937}", "{'[2, 5, 6, 0, 6, 0, 1, 1, 11, 19, 0, 12, 0, 0, 0, 1, 0, 0]' : 0.527693}", "{'[2, 5, 6, 0, 6, 0, 1, 1, 11, 19, 0, 12, 0, 0, 0, 1, 0, 0]' : 0.537341}", "{'[2, 5, 6, 0, 6, 0, 1, 1, 11, 19, 0, 12, 0, 0, 0, 1, 0, 0]' : 0.537163}", "{'[2, 5, 6, 0, 6, 0, 1, 1, 11, 19, 0, 12, 0, 0, 0, 1, 0, 0]' : 0.552368}", "{'[2, 5, 6, 0, 6, 0, 1, 1, 11, 19, 0, 12, 0, 0, 0, 1, 0, 0]' : 0.558887}", "{'[2, 5, 6, 0, 6, 0, 1, 1, 11, 19, 0, 12, 0, 0, 0, 1, 0, 0]' : 0.527788}", "{'[2, 5, 6, 0, 6, 0, 1, 1, 11, 19, 0, 12, 0, 0, 0, 1, 0, 0]' : 0.52988}", "{'[2, 5, 6, 0, 6, 0, 1, 1, 11, 19, 0, 12, 0, 0, 0, 1, 0, 0]' : 0.518102}", "{'[2, 5, 6, 0, 6, 0, 1, 1, 11, 19, 0, 12, 0, 0, 0, 1, 0, 0]' : 0.517789}", "{'[2, 5, 6, 0, 6, 0, 1, 1, 11, 19, 0, 12, 0, 0, 0, 1, 0, 0]' : 0.517897}", "{'[2, 5, 6, 0, 6, 0, 1, 1, 11, 19, 0, 12, 0, 0, 0, 1, 0, 0]' : 0.52122}", "{'[2, 5, 6, 0, 6, 0, 1, 1, 11, 19, 0, 12, 0, 0, 0, 1, 0, 0]' : 0.521335}", "{'[2, 5, 6, 0, 6, 0, 1, 1, 11, 19, 0, 12, 0, 0, 0, 1, 0, 0]' : 0.517065}", "{'[2, 5, 6, 0, 6, 0, 1, 1, 11, 19, 0, 12, 0, 0, 0, 1, 0, 0]' : 0.522302}", "{'[2, 5, 6, 0, 6, 0, 1, 1, 11, 19, 0, 12, 0, 0, 0, 1, 0, 0]' : 0.517484}", "{'[2, 5, 6, 0, 6, 0, 1, 1, 11, 19, 0, 12, 0, 0, 0, 1, 0, 0]' : 0.521787}", "{'[2, 5, 6, 0, 6, 0, 1, 1, 11, 19, 0, 12, 0, 0, 0, 1, 0, 0]' : 0.518719}", "{'[2, 5, 6, 0, 6, 0, 1, 1, 11, 19, 0, 12, 0, 0, 0, 1, 0, 0]' : 0.521336}", "{'[2, 5, 6, 0, 6, 0, 1, 1, 11, 19, 0, 12, 0, 0, 0, 1, 0, 0]' : 0.516866}", "{'[2, 5, 6, 0, 6, 0, 1, 1, 11, 19, 0, 12, 0, 0, 0, 1, 0, 0]' : 0.521693}", "{'[2, 5, 6, 0, 6, 0, 1, 1, 11, 19, 0, 12, 0, 0, 0, 1, 0, 0]' : 0.518526}", "{'[2, 5, 6, 0, 6, 0, 1, 1, 11, 19, 0, 12, 0, 0, 0, 1, 0, 0]' : 0.552945}", "{'[2, 5, 6, 0, 6, 0, 1, 1, 11, 19, 0, 12, 0, 0, 0, 1, 0, 0]' : 0.518716}", "{'[2, 5, 6, 0, 6, 0, 1, 1, 11, 19, 0, 12, 0, 0, 0, 1, 0, 0]' : 0.524131}", "{'[2, 5, 6, 0, 6, 0, 1, 1, 11, 19, 0, 12, 0, 0, 0, 1, 0, 0]' : 0.519063}", "{'[2, 5, 6, 0, 6, 0, 1, 1, 11, 19, 0, 12, 0, 0, 0, 1, 0, 0]' : 0.519409}", "{'[2, 5, 6, 0, 6, 0, 1, 1, 11, 19, 0, 12, 0, 0, 0, 1, 0, 0]' : 0.521785}", "{'[2, 5, 6, 0, 6, 0, 1, 1, 11, 19, 0, 12, 0, 0, 0, 1, 0, 0]' : 0.525138}", "{'[2, 5, 6, 0, 6, 0, 1, 1, 11, 19, 0, 12, 0, 0, 0, 1, 0, 0]' : 0.526265}"]
returning from 'run': {'[2, 5, 6, 0, 6, 0, 1, 1, 11, 19, 0, 12, 0, 0, 0, 1, 0, 0]': ([0.53937, 0.527693, 0.537341, 0.537163, 0.552368, 0.558887, 0.527788, 0.52988, 0.518102, 0.517789, 0.517897, 0.52122, 0.521335, 0.517065, 0.522302, 0.517484, 0.521787, 0.518719, 0.521336, 0.516866, 0.521693, 0.518526, 0.552945, 0.518716, 0.524131, 0.519063, 0.519409, 0.521785, 0.525138, 0.526265], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 5, 6, 0, 6, 0, 1, 1, 11, 19, 0, 12, 0, 0, 0, 1, 0, 0]': ([0.53937, 0.527693, 0.537341, 0.537163, 0.552368, 0.558887, 0.527788, 0.52988, 0.518102, 0.517789, 0.517897, 0.52122, 0.521335, 0.517065, 0.522302, 0.517484, 0.521787, 0.518719, 0.521336, 0.516866, 0.521693, 0.518526, 0.552945, 0.518716, 0.524131, 0.519063, 0.519409, 0.521785, 0.525138, 0.526265], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		424
        Multiplications: 	122
        Divisions: 		0
        Logical: 		0
        Reads: 			876
        Writes: 		170
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest25.exe __orio_perftest25.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest25.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest25.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest25.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 597, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 536, in dopt_anova
    i)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 485, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 387, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest25.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 597, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 536, in dopt_anova
    i)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 485, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 387, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	47
        Max loop nest depth: 	6
        Additions: 		1142
        Multiplications: 	360
        Divisions: 		0
        Logical: 		0
        Reads: 			2381
        Writes: 		491
        Comparisons:		47
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest26.exe __orio_perftest26.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest26.exe  
Program Test Output: 
{'[2, 1, 2, 4, 5, 1, 1, 1, 11, 2, 0, 12, 1, 0, 0, 1, 0, 1]' : 0.242813}
{'[2, 1, 2, 4, 5, 1, 1, 1, 11, 2, 0, 12, 1, 0, 0, 1, 0, 1]' : 0.239528}
{'[2, 1, 2, 4, 5, 1, 1, 1, 11, 2, 0, 12, 1, 0, 0, 1, 0, 1]' : 0.241168}
{'[2, 1, 2, 4, 5, 1, 1, 1, 11, 2, 0, 12, 1, 0, 0, 1, 0, 1]' : 0.244357}
{'[2, 1, 2, 4, 5, 1, 1, 1, 11, 2, 0, 12, 1, 0, 0, 1, 0, 1]' : 0.246653}
{'[2, 1, 2, 4, 5, 1, 1, 1, 11, 2, 0, 12, 1, 0, 0, 1, 0, 1]' : 0.2449}
{'[2, 1, 2, 4, 5, 1, 1, 1, 11, 2, 0, 12, 1, 0, 0, 1, 0, 1]' : 0.24781}
{'[2, 1, 2, 4, 5, 1, 1, 1, 11, 2, 0, 12, 1, 0, 0, 1, 0, 1]' : 0.255425}
{'[2, 1, 2, 4, 5, 1, 1, 1, 11, 2, 0, 12, 1, 0, 0, 1, 0, 1]' : 0.26175}
{'[2, 1, 2, 4, 5, 1, 1, 1, 11, 2, 0, 12, 1, 0, 0, 1, 0, 1]' : 0.248233}
{'[2, 1, 2, 4, 5, 1, 1, 1, 11, 2, 0, 12, 1, 0, 0, 1, 0, 1]' : 0.260947}
{'[2, 1, 2, 4, 5, 1, 1, 1, 11, 2, 0, 12, 1, 0, 0, 1, 0, 1]' : 0.25064}
{'[2, 1, 2, 4, 5, 1, 1, 1, 11, 2, 0, 12, 1, 0, 0, 1, 0, 1]' : 0.242304}
{'[2, 1, 2, 4, 5, 1, 1, 1, 11, 2, 0, 12, 1, 0, 0, 1, 0, 1]' : 0.241851}
{'[2, 1, 2, 4, 5, 1, 1, 1, 11, 2, 0, 12, 1, 0, 0, 1, 0, 1]' : 0.242658}
{'[2, 1, 2, 4, 5, 1, 1, 1, 11, 2, 0, 12, 1, 0, 0, 1, 0, 1]' : 0.242891}
{'[2, 1, 2, 4, 5, 1, 1, 1, 11, 2, 0, 12, 1, 0, 0, 1, 0, 1]' : 0.249047}
{'[2, 1, 2, 4, 5, 1, 1, 1, 11, 2, 0, 12, 1, 0, 0, 1, 0, 1]' : 0.251606}
{'[2, 1, 2, 4, 5, 1, 1, 1, 11, 2, 0, 12, 1, 0, 0, 1, 0, 1]' : 0.246903}
{'[2, 1, 2, 4, 5, 1, 1, 1, 11, 2, 0, 12, 1, 0, 0, 1, 0, 1]' : 0.241184}
{'[2, 1, 2, 4, 5, 1, 1, 1, 11, 2, 0, 12, 1, 0, 0, 1, 0, 1]' : 0.240755}
{'[2, 1, 2, 4, 5, 1, 1, 1, 11, 2, 0, 12, 1, 0, 0, 1, 0, 1]' : 0.24252}
{'[2, 1, 2, 4, 5, 1, 1, 1, 11, 2, 0, 12, 1, 0, 0, 1, 0, 1]' : 0.244431}
{'[2, 1, 2, 4, 5, 1, 1, 1, 11, 2, 0, 12, 1, 0, 0, 1, 0, 1]' : 0.239961}
{'[2, 1, 2, 4, 5, 1, 1, 1, 11, 2, 0, 12, 1, 0, 0, 1, 0, 1]' : 0.245215}
{'[2, 1, 2, 4, 5, 1, 1, 1, 11, 2, 0, 12, 1, 0, 0, 1, 0, 1]' : 0.241756}
{'[2, 1, 2, 4, 5, 1, 1, 1, 11, 2, 0, 12, 1, 0, 0, 1, 0, 1]' : 0.240168}
{'[2, 1, 2, 4, 5, 1, 1, 1, 11, 2, 0, 12, 1, 0, 0, 1, 0, 1]' : 0.242127}
{'[2, 1, 2, 4, 5, 1, 1, 1, 11, 2, 0, 12, 1, 0, 0, 1, 0, 1]' : 0.24198}
{'[2, 1, 2, 4, 5, 1, 1, 1, 11, 2, 0, 12, 1, 0, 0, 1, 0, 1]' : 0.242301}

out:
 ["{'[2, 1, 2, 4, 5, 1, 1, 1, 11, 2, 0, 12, 1, 0, 0, 1, 0, 1]' : 0.242813}", "{'[2, 1, 2, 4, 5, 1, 1, 1, 11, 2, 0, 12, 1, 0, 0, 1, 0, 1]' : 0.239528}", "{'[2, 1, 2, 4, 5, 1, 1, 1, 11, 2, 0, 12, 1, 0, 0, 1, 0, 1]' : 0.241168}", "{'[2, 1, 2, 4, 5, 1, 1, 1, 11, 2, 0, 12, 1, 0, 0, 1, 0, 1]' : 0.244357}", "{'[2, 1, 2, 4, 5, 1, 1, 1, 11, 2, 0, 12, 1, 0, 0, 1, 0, 1]' : 0.246653}", "{'[2, 1, 2, 4, 5, 1, 1, 1, 11, 2, 0, 12, 1, 0, 0, 1, 0, 1]' : 0.2449}", "{'[2, 1, 2, 4, 5, 1, 1, 1, 11, 2, 0, 12, 1, 0, 0, 1, 0, 1]' : 0.24781}", "{'[2, 1, 2, 4, 5, 1, 1, 1, 11, 2, 0, 12, 1, 0, 0, 1, 0, 1]' : 0.255425}", "{'[2, 1, 2, 4, 5, 1, 1, 1, 11, 2, 0, 12, 1, 0, 0, 1, 0, 1]' : 0.26175}", "{'[2, 1, 2, 4, 5, 1, 1, 1, 11, 2, 0, 12, 1, 0, 0, 1, 0, 1]' : 0.248233}", "{'[2, 1, 2, 4, 5, 1, 1, 1, 11, 2, 0, 12, 1, 0, 0, 1, 0, 1]' : 0.260947}", "{'[2, 1, 2, 4, 5, 1, 1, 1, 11, 2, 0, 12, 1, 0, 0, 1, 0, 1]' : 0.25064}", "{'[2, 1, 2, 4, 5, 1, 1, 1, 11, 2, 0, 12, 1, 0, 0, 1, 0, 1]' : 0.242304}", "{'[2, 1, 2, 4, 5, 1, 1, 1, 11, 2, 0, 12, 1, 0, 0, 1, 0, 1]' : 0.241851}", "{'[2, 1, 2, 4, 5, 1, 1, 1, 11, 2, 0, 12, 1, 0, 0, 1, 0, 1]' : 0.242658}", "{'[2, 1, 2, 4, 5, 1, 1, 1, 11, 2, 0, 12, 1, 0, 0, 1, 0, 1]' : 0.242891}", "{'[2, 1, 2, 4, 5, 1, 1, 1, 11, 2, 0, 12, 1, 0, 0, 1, 0, 1]' : 0.249047}", "{'[2, 1, 2, 4, 5, 1, 1, 1, 11, 2, 0, 12, 1, 0, 0, 1, 0, 1]' : 0.251606}", "{'[2, 1, 2, 4, 5, 1, 1, 1, 11, 2, 0, 12, 1, 0, 0, 1, 0, 1]' : 0.246903}", "{'[2, 1, 2, 4, 5, 1, 1, 1, 11, 2, 0, 12, 1, 0, 0, 1, 0, 1]' : 0.241184}", "{'[2, 1, 2, 4, 5, 1, 1, 1, 11, 2, 0, 12, 1, 0, 0, 1, 0, 1]' : 0.240755}", "{'[2, 1, 2, 4, 5, 1, 1, 1, 11, 2, 0, 12, 1, 0, 0, 1, 0, 1]' : 0.24252}", "{'[2, 1, 2, 4, 5, 1, 1, 1, 11, 2, 0, 12, 1, 0, 0, 1, 0, 1]' : 0.244431}", "{'[2, 1, 2, 4, 5, 1, 1, 1, 11, 2, 0, 12, 1, 0, 0, 1, 0, 1]' : 0.239961}", "{'[2, 1, 2, 4, 5, 1, 1, 1, 11, 2, 0, 12, 1, 0, 0, 1, 0, 1]' : 0.245215}", "{'[2, 1, 2, 4, 5, 1, 1, 1, 11, 2, 0, 12, 1, 0, 0, 1, 0, 1]' : 0.241756}", "{'[2, 1, 2, 4, 5, 1, 1, 1, 11, 2, 0, 12, 1, 0, 0, 1, 0, 1]' : 0.240168}", "{'[2, 1, 2, 4, 5, 1, 1, 1, 11, 2, 0, 12, 1, 0, 0, 1, 0, 1]' : 0.242127}", "{'[2, 1, 2, 4, 5, 1, 1, 1, 11, 2, 0, 12, 1, 0, 0, 1, 0, 1]' : 0.24198}", "{'[2, 1, 2, 4, 5, 1, 1, 1, 11, 2, 0, 12, 1, 0, 0, 1, 0, 1]' : 0.242301}"]
returning from 'run': {'[2, 1, 2, 4, 5, 1, 1, 1, 11, 2, 0, 12, 1, 0, 0, 1, 0, 1]': ([0.242813, 0.239528, 0.241168, 0.244357, 0.246653, 0.2449, 0.24781, 0.255425, 0.26175, 0.248233, 0.260947, 0.25064, 0.242304, 0.241851, 0.242658, 0.242891, 0.249047, 0.251606, 0.246903, 0.241184, 0.240755, 0.24252, 0.244431, 0.239961, 0.245215, 0.241756, 0.240168, 0.242127, 0.24198, 0.242301], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 1, 2, 4, 5, 1, 1, 1, 11, 2, 0, 12, 1, 0, 0, 1, 0, 1]': ([0.242813, 0.239528, 0.241168, 0.244357, 0.246653, 0.2449, 0.24781, 0.255425, 0.26175, 0.248233, 0.260947, 0.25064, 0.242304, 0.241851, 0.242658, 0.242891, 0.249047, 0.251606, 0.246903, 0.241184, 0.240755, 0.24252, 0.244431, 0.239961, 0.245215, 0.241756, 0.240168, 0.242127, 0.24198, 0.242301], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		410
        Multiplications: 	140
        Divisions: 		0
        Logical: 		0
        Reads: 			869
        Writes: 		120
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest27.exe __orio_perftest27.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest27.exe  
Program Test Output: 
{'[2, 2, 3, 6, 2, 0, 1, 0, 11, 0, 22, 12, 0, 0, 2, 0, 0, 1]' : 0.764773}
{'[2, 2, 3, 6, 2, 0, 1, 0, 11, 0, 22, 12, 0, 0, 2, 0, 0, 1]' : 0.765241}
{'[2, 2, 3, 6, 2, 0, 1, 0, 11, 0, 22, 12, 0, 0, 2, 0, 0, 1]' : 0.766709}
{'[2, 2, 3, 6, 2, 0, 1, 0, 11, 0, 22, 12, 0, 0, 2, 0, 0, 1]' : 0.761357}
{'[2, 2, 3, 6, 2, 0, 1, 0, 11, 0, 22, 12, 0, 0, 2, 0, 0, 1]' : 0.761806}
{'[2, 2, 3, 6, 2, 0, 1, 0, 11, 0, 22, 12, 0, 0, 2, 0, 0, 1]' : 0.762046}
{'[2, 2, 3, 6, 2, 0, 1, 0, 11, 0, 22, 12, 0, 0, 2, 0, 0, 1]' : 0.759579}
{'[2, 2, 3, 6, 2, 0, 1, 0, 11, 0, 22, 12, 0, 0, 2, 0, 0, 1]' : 0.762254}
{'[2, 2, 3, 6, 2, 0, 1, 0, 11, 0, 22, 12, 0, 0, 2, 0, 0, 1]' : 0.761808}
{'[2, 2, 3, 6, 2, 0, 1, 0, 11, 0, 22, 12, 0, 0, 2, 0, 0, 1]' : 0.762638}
{'[2, 2, 3, 6, 2, 0, 1, 0, 11, 0, 22, 12, 0, 0, 2, 0, 0, 1]' : 0.761511}
{'[2, 2, 3, 6, 2, 0, 1, 0, 11, 0, 22, 12, 0, 0, 2, 0, 0, 1]' : 0.75967}
{'[2, 2, 3, 6, 2, 0, 1, 0, 11, 0, 22, 12, 0, 0, 2, 0, 0, 1]' : 0.759581}
{'[2, 2, 3, 6, 2, 0, 1, 0, 11, 0, 22, 12, 0, 0, 2, 0, 0, 1]' : 0.758914}
{'[2, 2, 3, 6, 2, 0, 1, 0, 11, 0, 22, 12, 0, 0, 2, 0, 0, 1]' : 0.759365}
{'[2, 2, 3, 6, 2, 0, 1, 0, 11, 0, 22, 12, 0, 0, 2, 0, 0, 1]' : 0.781682}
{'[2, 2, 3, 6, 2, 0, 1, 0, 11, 0, 22, 12, 0, 0, 2, 0, 0, 1]' : 0.762036}
{'[2, 2, 3, 6, 2, 0, 1, 0, 11, 0, 22, 12, 0, 0, 2, 0, 0, 1]' : 0.766705}
{'[2, 2, 3, 6, 2, 0, 1, 0, 11, 0, 22, 12, 0, 0, 2, 0, 0, 1]' : 0.766743}
{'[2, 2, 3, 6, 2, 0, 1, 0, 11, 0, 22, 12, 0, 0, 2, 0, 0, 1]' : 0.760153}
{'[2, 2, 3, 6, 2, 0, 1, 0, 11, 0, 22, 12, 0, 0, 2, 0, 0, 1]' : 0.765147}
{'[2, 2, 3, 6, 2, 0, 1, 0, 11, 0, 22, 12, 0, 0, 2, 0, 0, 1]' : 0.762911}
{'[2, 2, 3, 6, 2, 0, 1, 0, 11, 0, 22, 12, 0, 0, 2, 0, 0, 1]' : 0.759774}
{'[2, 2, 3, 6, 2, 0, 1, 0, 11, 0, 22, 12, 0, 0, 2, 0, 0, 1]' : 0.766455}
{'[2, 2, 3, 6, 2, 0, 1, 0, 11, 0, 22, 12, 0, 0, 2, 0, 0, 1]' : 0.761377}
{'[2, 2, 3, 6, 2, 0, 1, 0, 11, 0, 22, 12, 0, 0, 2, 0, 0, 1]' : 0.762803}
{'[2, 2, 3, 6, 2, 0, 1, 0, 11, 0, 22, 12, 0, 0, 2, 0, 0, 1]' : 0.764301}
{'[2, 2, 3, 6, 2, 0, 1, 0, 11, 0, 22, 12, 0, 0, 2, 0, 0, 1]' : 0.773105}
{'[2, 2, 3, 6, 2, 0, 1, 0, 11, 0, 22, 12, 0, 0, 2, 0, 0, 1]' : 0.771135}
{'[2, 2, 3, 6, 2, 0, 1, 0, 11, 0, 22, 12, 0, 0, 2, 0, 0, 1]' : 0.764521}

out:
 ["{'[2, 2, 3, 6, 2, 0, 1, 0, 11, 0, 22, 12, 0, 0, 2, 0, 0, 1]' : 0.764773}", "{'[2, 2, 3, 6, 2, 0, 1, 0, 11, 0, 22, 12, 0, 0, 2, 0, 0, 1]' : 0.765241}", "{'[2, 2, 3, 6, 2, 0, 1, 0, 11, 0, 22, 12, 0, 0, 2, 0, 0, 1]' : 0.766709}", "{'[2, 2, 3, 6, 2, 0, 1, 0, 11, 0, 22, 12, 0, 0, 2, 0, 0, 1]' : 0.761357}", "{'[2, 2, 3, 6, 2, 0, 1, 0, 11, 0, 22, 12, 0, 0, 2, 0, 0, 1]' : 0.761806}", "{'[2, 2, 3, 6, 2, 0, 1, 0, 11, 0, 22, 12, 0, 0, 2, 0, 0, 1]' : 0.762046}", "{'[2, 2, 3, 6, 2, 0, 1, 0, 11, 0, 22, 12, 0, 0, 2, 0, 0, 1]' : 0.759579}", "{'[2, 2, 3, 6, 2, 0, 1, 0, 11, 0, 22, 12, 0, 0, 2, 0, 0, 1]' : 0.762254}", "{'[2, 2, 3, 6, 2, 0, 1, 0, 11, 0, 22, 12, 0, 0, 2, 0, 0, 1]' : 0.761808}", "{'[2, 2, 3, 6, 2, 0, 1, 0, 11, 0, 22, 12, 0, 0, 2, 0, 0, 1]' : 0.762638}", "{'[2, 2, 3, 6, 2, 0, 1, 0, 11, 0, 22, 12, 0, 0, 2, 0, 0, 1]' : 0.761511}", "{'[2, 2, 3, 6, 2, 0, 1, 0, 11, 0, 22, 12, 0, 0, 2, 0, 0, 1]' : 0.75967}", "{'[2, 2, 3, 6, 2, 0, 1, 0, 11, 0, 22, 12, 0, 0, 2, 0, 0, 1]' : 0.759581}", "{'[2, 2, 3, 6, 2, 0, 1, 0, 11, 0, 22, 12, 0, 0, 2, 0, 0, 1]' : 0.758914}", "{'[2, 2, 3, 6, 2, 0, 1, 0, 11, 0, 22, 12, 0, 0, 2, 0, 0, 1]' : 0.759365}", "{'[2, 2, 3, 6, 2, 0, 1, 0, 11, 0, 22, 12, 0, 0, 2, 0, 0, 1]' : 0.781682}", "{'[2, 2, 3, 6, 2, 0, 1, 0, 11, 0, 22, 12, 0, 0, 2, 0, 0, 1]' : 0.762036}", "{'[2, 2, 3, 6, 2, 0, 1, 0, 11, 0, 22, 12, 0, 0, 2, 0, 0, 1]' : 0.766705}", "{'[2, 2, 3, 6, 2, 0, 1, 0, 11, 0, 22, 12, 0, 0, 2, 0, 0, 1]' : 0.766743}", "{'[2, 2, 3, 6, 2, 0, 1, 0, 11, 0, 22, 12, 0, 0, 2, 0, 0, 1]' : 0.760153}", "{'[2, 2, 3, 6, 2, 0, 1, 0, 11, 0, 22, 12, 0, 0, 2, 0, 0, 1]' : 0.765147}", "{'[2, 2, 3, 6, 2, 0, 1, 0, 11, 0, 22, 12, 0, 0, 2, 0, 0, 1]' : 0.762911}", "{'[2, 2, 3, 6, 2, 0, 1, 0, 11, 0, 22, 12, 0, 0, 2, 0, 0, 1]' : 0.759774}", "{'[2, 2, 3, 6, 2, 0, 1, 0, 11, 0, 22, 12, 0, 0, 2, 0, 0, 1]' : 0.766455}", "{'[2, 2, 3, 6, 2, 0, 1, 0, 11, 0, 22, 12, 0, 0, 2, 0, 0, 1]' : 0.761377}", "{'[2, 2, 3, 6, 2, 0, 1, 0, 11, 0, 22, 12, 0, 0, 2, 0, 0, 1]' : 0.762803}", "{'[2, 2, 3, 6, 2, 0, 1, 0, 11, 0, 22, 12, 0, 0, 2, 0, 0, 1]' : 0.764301}", "{'[2, 2, 3, 6, 2, 0, 1, 0, 11, 0, 22, 12, 0, 0, 2, 0, 0, 1]' : 0.773105}", "{'[2, 2, 3, 6, 2, 0, 1, 0, 11, 0, 22, 12, 0, 0, 2, 0, 0, 1]' : 0.771135}", "{'[2, 2, 3, 6, 2, 0, 1, 0, 11, 0, 22, 12, 0, 0, 2, 0, 0, 1]' : 0.764521}"]
returning from 'run': {'[2, 2, 3, 6, 2, 0, 1, 0, 11, 0, 22, 12, 0, 0, 2, 0, 0, 1]': ([0.764773, 0.765241, 0.766709, 0.761357, 0.761806, 0.762046, 0.759579, 0.762254, 0.761808, 0.762638, 0.761511, 0.75967, 0.759581, 0.758914, 0.759365, 0.781682, 0.762036, 0.766705, 0.766743, 0.760153, 0.765147, 0.762911, 0.759774, 0.766455, 0.761377, 0.762803, 0.764301, 0.773105, 0.771135, 0.764521], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 2, 3, 6, 2, 0, 1, 0, 11, 0, 22, 12, 0, 0, 2, 0, 0, 1]': ([0.764773, 0.765241, 0.766709, 0.761357, 0.761806, 0.762046, 0.759579, 0.762254, 0.761808, 0.762638, 0.761511, 0.75967, 0.759581, 0.758914, 0.759365, 0.781682, 0.762036, 0.766705, 0.766743, 0.760153, 0.765147, 0.762911, 0.759774, 0.766455, 0.761377, 0.762803, 0.764301, 0.773105, 0.771135, 0.764521], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = kkk
Code stats:
        Number of loops: 	91
        Max loop nest depth: 	6
        Additions: 		4113
        Multiplications: 	1500
        Divisions: 		0
        Logical: 		0
        Reads: 			8713
        Writes: 		1867
        Comparisons:		91
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest28.exe __orio_perftest28.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest28.exe  
Program Test Output: 
{'[6, 2, 4, 6, 5, 2, 1, 0, 11, 23, 0, 12, 0, 1, 1, 1, 1, 1]' : 0.314809}
{'[6, 2, 4, 6, 5, 2, 1, 0, 11, 23, 0, 12, 0, 1, 1, 1, 1, 1]' : 0.314473}
{'[6, 2, 4, 6, 5, 2, 1, 0, 11, 23, 0, 12, 0, 1, 1, 1, 1, 1]' : 0.31417}
{'[6, 2, 4, 6, 5, 2, 1, 0, 11, 23, 0, 12, 0, 1, 1, 1, 1, 1]' : 0.315132}
{'[6, 2, 4, 6, 5, 2, 1, 0, 11, 23, 0, 12, 0, 1, 1, 1, 1, 1]' : 0.316164}
{'[6, 2, 4, 6, 5, 2, 1, 0, 11, 23, 0, 12, 0, 1, 1, 1, 1, 1]' : 0.316311}
{'[6, 2, 4, 6, 5, 2, 1, 0, 11, 23, 0, 12, 0, 1, 1, 1, 1, 1]' : 0.319036}
{'[6, 2, 4, 6, 5, 2, 1, 0, 11, 23, 0, 12, 0, 1, 1, 1, 1, 1]' : 0.317754}
{'[6, 2, 4, 6, 5, 2, 1, 0, 11, 23, 0, 12, 0, 1, 1, 1, 1, 1]' : 0.31716}
{'[6, 2, 4, 6, 5, 2, 1, 0, 11, 23, 0, 12, 0, 1, 1, 1, 1, 1]' : 0.316789}
{'[6, 2, 4, 6, 5, 2, 1, 0, 11, 23, 0, 12, 0, 1, 1, 1, 1, 1]' : 0.316512}
{'[6, 2, 4, 6, 5, 2, 1, 0, 11, 23, 0, 12, 0, 1, 1, 1, 1, 1]' : 0.316451}
{'[6, 2, 4, 6, 5, 2, 1, 0, 11, 23, 0, 12, 0, 1, 1, 1, 1, 1]' : 0.319964}
{'[6, 2, 4, 6, 5, 2, 1, 0, 11, 23, 0, 12, 0, 1, 1, 1, 1, 1]' : 0.31771}
{'[6, 2, 4, 6, 5, 2, 1, 0, 11, 23, 0, 12, 0, 1, 1, 1, 1, 1]' : 0.316454}
{'[6, 2, 4, 6, 5, 2, 1, 0, 11, 23, 0, 12, 0, 1, 1, 1, 1, 1]' : 0.316819}
{'[6, 2, 4, 6, 5, 2, 1, 0, 11, 23, 0, 12, 0, 1, 1, 1, 1, 1]' : 0.31684}
{'[6, 2, 4, 6, 5, 2, 1, 0, 11, 23, 0, 12, 0, 1, 1, 1, 1, 1]' : 0.319637}
{'[6, 2, 4, 6, 5, 2, 1, 0, 11, 23, 0, 12, 0, 1, 1, 1, 1, 1]' : 0.320235}
{'[6, 2, 4, 6, 5, 2, 1, 0, 11, 23, 0, 12, 0, 1, 1, 1, 1, 1]' : 0.317845}
{'[6, 2, 4, 6, 5, 2, 1, 0, 11, 23, 0, 12, 0, 1, 1, 1, 1, 1]' : 0.317692}
{'[6, 2, 4, 6, 5, 2, 1, 0, 11, 23, 0, 12, 0, 1, 1, 1, 1, 1]' : 0.317614}
{'[6, 2, 4, 6, 5, 2, 1, 0, 11, 23, 0, 12, 0, 1, 1, 1, 1, 1]' : 0.317309}
{'[6, 2, 4, 6, 5, 2, 1, 0, 11, 23, 0, 12, 0, 1, 1, 1, 1, 1]' : 0.318577}
{'[6, 2, 4, 6, 5, 2, 1, 0, 11, 23, 0, 12, 0, 1, 1, 1, 1, 1]' : 0.318252}
{'[6, 2, 4, 6, 5, 2, 1, 0, 11, 23, 0, 12, 0, 1, 1, 1, 1, 1]' : 0.31743}
{'[6, 2, 4, 6, 5, 2, 1, 0, 11, 23, 0, 12, 0, 1, 1, 1, 1, 1]' : 0.316509}
{'[6, 2, 4, 6, 5, 2, 1, 0, 11, 23, 0, 12, 0, 1, 1, 1, 1, 1]' : 0.316362}
{'[6, 2, 4, 6, 5, 2, 1, 0, 11, 23, 0, 12, 0, 1, 1, 1, 1, 1]' : 0.318367}
{'[6, 2, 4, 6, 5, 2, 1, 0, 11, 23, 0, 12, 0, 1, 1, 1, 1, 1]' : 0.318334}

out:
 ["{'[6, 2, 4, 6, 5, 2, 1, 0, 11, 23, 0, 12, 0, 1, 1, 1, 1, 1]' : 0.314809}", "{'[6, 2, 4, 6, 5, 2, 1, 0, 11, 23, 0, 12, 0, 1, 1, 1, 1, 1]' : 0.314473}", "{'[6, 2, 4, 6, 5, 2, 1, 0, 11, 23, 0, 12, 0, 1, 1, 1, 1, 1]' : 0.31417}", "{'[6, 2, 4, 6, 5, 2, 1, 0, 11, 23, 0, 12, 0, 1, 1, 1, 1, 1]' : 0.315132}", "{'[6, 2, 4, 6, 5, 2, 1, 0, 11, 23, 0, 12, 0, 1, 1, 1, 1, 1]' : 0.316164}", "{'[6, 2, 4, 6, 5, 2, 1, 0, 11, 23, 0, 12, 0, 1, 1, 1, 1, 1]' : 0.316311}", "{'[6, 2, 4, 6, 5, 2, 1, 0, 11, 23, 0, 12, 0, 1, 1, 1, 1, 1]' : 0.319036}", "{'[6, 2, 4, 6, 5, 2, 1, 0, 11, 23, 0, 12, 0, 1, 1, 1, 1, 1]' : 0.317754}", "{'[6, 2, 4, 6, 5, 2, 1, 0, 11, 23, 0, 12, 0, 1, 1, 1, 1, 1]' : 0.31716}", "{'[6, 2, 4, 6, 5, 2, 1, 0, 11, 23, 0, 12, 0, 1, 1, 1, 1, 1]' : 0.316789}", "{'[6, 2, 4, 6, 5, 2, 1, 0, 11, 23, 0, 12, 0, 1, 1, 1, 1, 1]' : 0.316512}", "{'[6, 2, 4, 6, 5, 2, 1, 0, 11, 23, 0, 12, 0, 1, 1, 1, 1, 1]' : 0.316451}", "{'[6, 2, 4, 6, 5, 2, 1, 0, 11, 23, 0, 12, 0, 1, 1, 1, 1, 1]' : 0.319964}", "{'[6, 2, 4, 6, 5, 2, 1, 0, 11, 23, 0, 12, 0, 1, 1, 1, 1, 1]' : 0.31771}", "{'[6, 2, 4, 6, 5, 2, 1, 0, 11, 23, 0, 12, 0, 1, 1, 1, 1, 1]' : 0.316454}", "{'[6, 2, 4, 6, 5, 2, 1, 0, 11, 23, 0, 12, 0, 1, 1, 1, 1, 1]' : 0.316819}", "{'[6, 2, 4, 6, 5, 2, 1, 0, 11, 23, 0, 12, 0, 1, 1, 1, 1, 1]' : 0.31684}", "{'[6, 2, 4, 6, 5, 2, 1, 0, 11, 23, 0, 12, 0, 1, 1, 1, 1, 1]' : 0.319637}", "{'[6, 2, 4, 6, 5, 2, 1, 0, 11, 23, 0, 12, 0, 1, 1, 1, 1, 1]' : 0.320235}", "{'[6, 2, 4, 6, 5, 2, 1, 0, 11, 23, 0, 12, 0, 1, 1, 1, 1, 1]' : 0.317845}", "{'[6, 2, 4, 6, 5, 2, 1, 0, 11, 23, 0, 12, 0, 1, 1, 1, 1, 1]' : 0.317692}", "{'[6, 2, 4, 6, 5, 2, 1, 0, 11, 23, 0, 12, 0, 1, 1, 1, 1, 1]' : 0.317614}", "{'[6, 2, 4, 6, 5, 2, 1, 0, 11, 23, 0, 12, 0, 1, 1, 1, 1, 1]' : 0.317309}", "{'[6, 2, 4, 6, 5, 2, 1, 0, 11, 23, 0, 12, 0, 1, 1, 1, 1, 1]' : 0.318577}", "{'[6, 2, 4, 6, 5, 2, 1, 0, 11, 23, 0, 12, 0, 1, 1, 1, 1, 1]' : 0.318252}", "{'[6, 2, 4, 6, 5, 2, 1, 0, 11, 23, 0, 12, 0, 1, 1, 1, 1, 1]' : 0.31743}", "{'[6, 2, 4, 6, 5, 2, 1, 0, 11, 23, 0, 12, 0, 1, 1, 1, 1, 1]' : 0.316509}", "{'[6, 2, 4, 6, 5, 2, 1, 0, 11, 23, 0, 12, 0, 1, 1, 1, 1, 1]' : 0.316362}", "{'[6, 2, 4, 6, 5, 2, 1, 0, 11, 23, 0, 12, 0, 1, 1, 1, 1, 1]' : 0.318367}", "{'[6, 2, 4, 6, 5, 2, 1, 0, 11, 23, 0, 12, 0, 1, 1, 1, 1, 1]' : 0.318334}"]
returning from 'run': {'[6, 2, 4, 6, 5, 2, 1, 0, 11, 23, 0, 12, 0, 1, 1, 1, 1, 1]': ([0.314809, 0.314473, 0.31417, 0.315132, 0.316164, 0.316311, 0.319036, 0.317754, 0.31716, 0.316789, 0.316512, 0.316451, 0.319964, 0.31771, 0.316454, 0.316819, 0.31684, 0.319637, 0.320235, 0.317845, 0.317692, 0.317614, 0.317309, 0.318577, 0.318252, 0.31743, 0.316509, 0.316362, 0.318367, 0.318334], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 2, 4, 6, 5, 2, 1, 0, 11, 23, 0, 12, 0, 1, 1, 1, 1, 1]': ([0.314809, 0.314473, 0.31417, 0.315132, 0.316164, 0.316311, 0.319036, 0.317754, 0.31716, 0.316789, 0.316512, 0.316451, 0.319964, 0.31771, 0.316454, 0.316819, 0.31684, 0.319637, 0.320235, 0.317845, 0.317692, 0.317614, 0.317309, 0.318577, 0.318252, 0.31743, 0.316509, 0.316362, 0.318367, 0.318334], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	6
        Additions: 		192
        Multiplications: 	46
        Divisions: 		0
        Logical: 		0
        Reads: 			404
        Writes: 		88
        Comparisons:		15
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest29.exe __orio_perftest29.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest29.exe  
Program Test Output: 
{'[2, 2, 2, 6, 2, 5, 1, 1, 11, 0, 13, 12, 0, 0, 1, 1, 0, 0]' : 0.771462}
{'[2, 2, 2, 6, 2, 5, 1, 1, 11, 0, 13, 12, 0, 0, 1, 1, 0, 0]' : 0.773038}
{'[2, 2, 2, 6, 2, 5, 1, 1, 11, 0, 13, 12, 0, 0, 1, 1, 0, 0]' : 0.770184}
{'[2, 2, 2, 6, 2, 5, 1, 1, 11, 0, 13, 12, 0, 0, 1, 1, 0, 0]' : 0.771601}
{'[2, 2, 2, 6, 2, 5, 1, 1, 11, 0, 13, 12, 0, 0, 1, 1, 0, 0]' : 0.772509}
{'[2, 2, 2, 6, 2, 5, 1, 1, 11, 0, 13, 12, 0, 0, 1, 1, 0, 0]' : 0.782832}
{'[2, 2, 2, 6, 2, 5, 1, 1, 11, 0, 13, 12, 0, 0, 1, 1, 0, 0]' : 0.771221}
{'[2, 2, 2, 6, 2, 5, 1, 1, 11, 0, 13, 12, 0, 0, 1, 1, 0, 0]' : 0.769833}
{'[2, 2, 2, 6, 2, 5, 1, 1, 11, 0, 13, 12, 0, 0, 1, 1, 0, 0]' : 0.77}
{'[2, 2, 2, 6, 2, 5, 1, 1, 11, 0, 13, 12, 0, 0, 1, 1, 0, 0]' : 0.770341}
{'[2, 2, 2, 6, 2, 5, 1, 1, 11, 0, 13, 12, 0, 0, 1, 1, 0, 0]' : 0.77049}
{'[2, 2, 2, 6, 2, 5, 1, 1, 11, 0, 13, 12, 0, 0, 1, 1, 0, 0]' : 0.770514}
{'[2, 2, 2, 6, 2, 5, 1, 1, 11, 0, 13, 12, 0, 0, 1, 1, 0, 0]' : 0.770245}
{'[2, 2, 2, 6, 2, 5, 1, 1, 11, 0, 13, 12, 0, 0, 1, 1, 0, 0]' : 0.771733}
{'[2, 2, 2, 6, 2, 5, 1, 1, 11, 0, 13, 12, 0, 0, 1, 1, 0, 0]' : 0.795718}
{'[2, 2, 2, 6, 2, 5, 1, 1, 11, 0, 13, 12, 0, 0, 1, 1, 0, 0]' : 0.841429}
{'[2, 2, 2, 6, 2, 5, 1, 1, 11, 0, 13, 12, 0, 0, 1, 1, 0, 0]' : 0.790656}
{'[2, 2, 2, 6, 2, 5, 1, 1, 11, 0, 13, 12, 0, 0, 1, 1, 0, 0]' : 0.770823}
{'[2, 2, 2, 6, 2, 5, 1, 1, 11, 0, 13, 12, 0, 0, 1, 1, 0, 0]' : 0.770384}
{'[2, 2, 2, 6, 2, 5, 1, 1, 11, 0, 13, 12, 0, 0, 1, 1, 0, 0]' : 0.770263}
{'[2, 2, 2, 6, 2, 5, 1, 1, 11, 0, 13, 12, 0, 0, 1, 1, 0, 0]' : 0.769162}
{'[2, 2, 2, 6, 2, 5, 1, 1, 11, 0, 13, 12, 0, 0, 1, 1, 0, 0]' : 0.76955}
{'[2, 2, 2, 6, 2, 5, 1, 1, 11, 0, 13, 12, 0, 0, 1, 1, 0, 0]' : 0.769528}
{'[2, 2, 2, 6, 2, 5, 1, 1, 11, 0, 13, 12, 0, 0, 1, 1, 0, 0]' : 0.769132}
{'[2, 2, 2, 6, 2, 5, 1, 1, 11, 0, 13, 12, 0, 0, 1, 1, 0, 0]' : 0.770139}
{'[2, 2, 2, 6, 2, 5, 1, 1, 11, 0, 13, 12, 0, 0, 1, 1, 0, 0]' : 0.769552}
{'[2, 2, 2, 6, 2, 5, 1, 1, 11, 0, 13, 12, 0, 0, 1, 1, 0, 0]' : 0.775407}
{'[2, 2, 2, 6, 2, 5, 1, 1, 11, 0, 13, 12, 0, 0, 1, 1, 0, 0]' : 0.769233}
{'[2, 2, 2, 6, 2, 5, 1, 1, 11, 0, 13, 12, 0, 0, 1, 1, 0, 0]' : 0.770174}
{'[2, 2, 2, 6, 2, 5, 1, 1, 11, 0, 13, 12, 0, 0, 1, 1, 0, 0]' : 0.769483}

out:
 ["{'[2, 2, 2, 6, 2, 5, 1, 1, 11, 0, 13, 12, 0, 0, 1, 1, 0, 0]' : 0.771462}", "{'[2, 2, 2, 6, 2, 5, 1, 1, 11, 0, 13, 12, 0, 0, 1, 1, 0, 0]' : 0.773038}", "{'[2, 2, 2, 6, 2, 5, 1, 1, 11, 0, 13, 12, 0, 0, 1, 1, 0, 0]' : 0.770184}", "{'[2, 2, 2, 6, 2, 5, 1, 1, 11, 0, 13, 12, 0, 0, 1, 1, 0, 0]' : 0.771601}", "{'[2, 2, 2, 6, 2, 5, 1, 1, 11, 0, 13, 12, 0, 0, 1, 1, 0, 0]' : 0.772509}", "{'[2, 2, 2, 6, 2, 5, 1, 1, 11, 0, 13, 12, 0, 0, 1, 1, 0, 0]' : 0.782832}", "{'[2, 2, 2, 6, 2, 5, 1, 1, 11, 0, 13, 12, 0, 0, 1, 1, 0, 0]' : 0.771221}", "{'[2, 2, 2, 6, 2, 5, 1, 1, 11, 0, 13, 12, 0, 0, 1, 1, 0, 0]' : 0.769833}", "{'[2, 2, 2, 6, 2, 5, 1, 1, 11, 0, 13, 12, 0, 0, 1, 1, 0, 0]' : 0.77}", "{'[2, 2, 2, 6, 2, 5, 1, 1, 11, 0, 13, 12, 0, 0, 1, 1, 0, 0]' : 0.770341}", "{'[2, 2, 2, 6, 2, 5, 1, 1, 11, 0, 13, 12, 0, 0, 1, 1, 0, 0]' : 0.77049}", "{'[2, 2, 2, 6, 2, 5, 1, 1, 11, 0, 13, 12, 0, 0, 1, 1, 0, 0]' : 0.770514}", "{'[2, 2, 2, 6, 2, 5, 1, 1, 11, 0, 13, 12, 0, 0, 1, 1, 0, 0]' : 0.770245}", "{'[2, 2, 2, 6, 2, 5, 1, 1, 11, 0, 13, 12, 0, 0, 1, 1, 0, 0]' : 0.771733}", "{'[2, 2, 2, 6, 2, 5, 1, 1, 11, 0, 13, 12, 0, 0, 1, 1, 0, 0]' : 0.795718}", "{'[2, 2, 2, 6, 2, 5, 1, 1, 11, 0, 13, 12, 0, 0, 1, 1, 0, 0]' : 0.841429}", "{'[2, 2, 2, 6, 2, 5, 1, 1, 11, 0, 13, 12, 0, 0, 1, 1, 0, 0]' : 0.790656}", "{'[2, 2, 2, 6, 2, 5, 1, 1, 11, 0, 13, 12, 0, 0, 1, 1, 0, 0]' : 0.770823}", "{'[2, 2, 2, 6, 2, 5, 1, 1, 11, 0, 13, 12, 0, 0, 1, 1, 0, 0]' : 0.770384}", "{'[2, 2, 2, 6, 2, 5, 1, 1, 11, 0, 13, 12, 0, 0, 1, 1, 0, 0]' : 0.770263}", "{'[2, 2, 2, 6, 2, 5, 1, 1, 11, 0, 13, 12, 0, 0, 1, 1, 0, 0]' : 0.769162}", "{'[2, 2, 2, 6, 2, 5, 1, 1, 11, 0, 13, 12, 0, 0, 1, 1, 0, 0]' : 0.76955}", "{'[2, 2, 2, 6, 2, 5, 1, 1, 11, 0, 13, 12, 0, 0, 1, 1, 0, 0]' : 0.769528}", "{'[2, 2, 2, 6, 2, 5, 1, 1, 11, 0, 13, 12, 0, 0, 1, 1, 0, 0]' : 0.769132}", "{'[2, 2, 2, 6, 2, 5, 1, 1, 11, 0, 13, 12, 0, 0, 1, 1, 0, 0]' : 0.770139}", "{'[2, 2, 2, 6, 2, 5, 1, 1, 11, 0, 13, 12, 0, 0, 1, 1, 0, 0]' : 0.769552}", "{'[2, 2, 2, 6, 2, 5, 1, 1, 11, 0, 13, 12, 0, 0, 1, 1, 0, 0]' : 0.775407}", "{'[2, 2, 2, 6, 2, 5, 1, 1, 11, 0, 13, 12, 0, 0, 1, 1, 0, 0]' : 0.769233}", "{'[2, 2, 2, 6, 2, 5, 1, 1, 11, 0, 13, 12, 0, 0, 1, 1, 0, 0]' : 0.770174}", "{'[2, 2, 2, 6, 2, 5, 1, 1, 11, 0, 13, 12, 0, 0, 1, 1, 0, 0]' : 0.769483}"]
returning from 'run': {'[2, 2, 2, 6, 2, 5, 1, 1, 11, 0, 13, 12, 0, 0, 1, 1, 0, 0]': ([0.771462, 0.773038, 0.770184, 0.771601, 0.772509, 0.782832, 0.771221, 0.769833, 0.77, 0.770341, 0.77049, 0.770514, 0.770245, 0.771733, 0.795718, 0.841429, 0.790656, 0.770823, 0.770384, 0.770263, 0.769162, 0.76955, 0.769528, 0.769132, 0.770139, 0.769552, 0.775407, 0.769233, 0.770174, 0.769483], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 2, 2, 6, 2, 5, 1, 1, 11, 0, 13, 12, 0, 0, 1, 1, 0, 0]': ([0.771462, 0.773038, 0.770184, 0.771601, 0.772509, 0.782832, 0.771221, 0.769833, 0.77, 0.770341, 0.77049, 0.770514, 0.770245, 0.771733, 0.795718, 0.841429, 0.790656, 0.770823, 0.770384, 0.770263, 0.769162, 0.76955, 0.769528, 0.769132, 0.770139, 0.769552, 0.775407, 0.769233, 0.770174, 0.769483], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = iii
Code stats:
        Number of loops: 	64
        Max loop nest depth: 	4
        Additions: 		2426
        Multiplications: 	544
        Divisions: 		0
        Logical: 		0
        Reads: 			3883
        Writes: 		481
        Comparisons:		64
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest30.exe __orio_perftest30.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest30.exe  
Program Test Output: 
{'[4, 6, 1, 2, 0, 0, 1, 1, 11, 15, 0, 12, 0, 1, 1, 0, 0, 0]' : 0.580648}
{'[4, 6, 1, 2, 0, 0, 1, 1, 11, 15, 0, 12, 0, 1, 1, 0, 0, 0]' : 0.580365}
{'[4, 6, 1, 2, 0, 0, 1, 1, 11, 15, 0, 12, 0, 1, 1, 0, 0, 0]' : 0.580888}
{'[4, 6, 1, 2, 0, 0, 1, 1, 11, 15, 0, 12, 0, 1, 1, 0, 0, 0]' : 0.576963}
{'[4, 6, 1, 2, 0, 0, 1, 1, 11, 15, 0, 12, 0, 1, 1, 0, 0, 0]' : 0.574155}
{'[4, 6, 1, 2, 0, 0, 1, 1, 11, 15, 0, 12, 0, 1, 1, 0, 0, 0]' : 0.573844}
{'[4, 6, 1, 2, 0, 0, 1, 1, 11, 15, 0, 12, 0, 1, 1, 0, 0, 0]' : 0.574295}
{'[4, 6, 1, 2, 0, 0, 1, 1, 11, 15, 0, 12, 0, 1, 1, 0, 0, 0]' : 0.574411}
{'[4, 6, 1, 2, 0, 0, 1, 1, 11, 15, 0, 12, 0, 1, 1, 0, 0, 0]' : 0.574939}
{'[4, 6, 1, 2, 0, 0, 1, 1, 11, 15, 0, 12, 0, 1, 1, 0, 0, 0]' : 0.574616}
{'[4, 6, 1, 2, 0, 0, 1, 1, 11, 15, 0, 12, 0, 1, 1, 0, 0, 0]' : 0.58437}
{'[4, 6, 1, 2, 0, 0, 1, 1, 11, 15, 0, 12, 0, 1, 1, 0, 0, 0]' : 0.602904}
{'[4, 6, 1, 2, 0, 0, 1, 1, 11, 15, 0, 12, 0, 1, 1, 0, 0, 0]' : 0.573907}
{'[4, 6, 1, 2, 0, 0, 1, 1, 11, 15, 0, 12, 0, 1, 1, 0, 0, 0]' : 0.574606}
{'[4, 6, 1, 2, 0, 0, 1, 1, 11, 15, 0, 12, 0, 1, 1, 0, 0, 0]' : 0.57415}
{'[4, 6, 1, 2, 0, 0, 1, 1, 11, 15, 0, 12, 0, 1, 1, 0, 0, 0]' : 0.574494}
{'[4, 6, 1, 2, 0, 0, 1, 1, 11, 15, 0, 12, 0, 1, 1, 0, 0, 0]' : 0.574309}
{'[4, 6, 1, 2, 0, 0, 1, 1, 11, 15, 0, 12, 0, 1, 1, 0, 0, 0]' : 0.574208}
{'[4, 6, 1, 2, 0, 0, 1, 1, 11, 15, 0, 12, 0, 1, 1, 0, 0, 0]' : 0.573873}
{'[4, 6, 1, 2, 0, 0, 1, 1, 11, 15, 0, 12, 0, 1, 1, 0, 0, 0]' : 0.573825}
{'[4, 6, 1, 2, 0, 0, 1, 1, 11, 15, 0, 12, 0, 1, 1, 0, 0, 0]' : 0.574703}
{'[4, 6, 1, 2, 0, 0, 1, 1, 11, 15, 0, 12, 0, 1, 1, 0, 0, 0]' : 0.574978}
{'[4, 6, 1, 2, 0, 0, 1, 1, 11, 15, 0, 12, 0, 1, 1, 0, 0, 0]' : 0.575033}
{'[4, 6, 1, 2, 0, 0, 1, 1, 11, 15, 0, 12, 0, 1, 1, 0, 0, 0]' : 0.575209}
{'[4, 6, 1, 2, 0, 0, 1, 1, 11, 15, 0, 12, 0, 1, 1, 0, 0, 0]' : 0.574609}
{'[4, 6, 1, 2, 0, 0, 1, 1, 11, 15, 0, 12, 0, 1, 1, 0, 0, 0]' : 0.574695}
{'[4, 6, 1, 2, 0, 0, 1, 1, 11, 15, 0, 12, 0, 1, 1, 0, 0, 0]' : 0.573604}
{'[4, 6, 1, 2, 0, 0, 1, 1, 11, 15, 0, 12, 0, 1, 1, 0, 0, 0]' : 0.580904}
{'[4, 6, 1, 2, 0, 0, 1, 1, 11, 15, 0, 12, 0, 1, 1, 0, 0, 0]' : 0.581318}
{'[4, 6, 1, 2, 0, 0, 1, 1, 11, 15, 0, 12, 0, 1, 1, 0, 0, 0]' : 0.574368}

out:
 ["{'[4, 6, 1, 2, 0, 0, 1, 1, 11, 15, 0, 12, 0, 1, 1, 0, 0, 0]' : 0.580648}", "{'[4, 6, 1, 2, 0, 0, 1, 1, 11, 15, 0, 12, 0, 1, 1, 0, 0, 0]' : 0.580365}", "{'[4, 6, 1, 2, 0, 0, 1, 1, 11, 15, 0, 12, 0, 1, 1, 0, 0, 0]' : 0.580888}", "{'[4, 6, 1, 2, 0, 0, 1, 1, 11, 15, 0, 12, 0, 1, 1, 0, 0, 0]' : 0.576963}", "{'[4, 6, 1, 2, 0, 0, 1, 1, 11, 15, 0, 12, 0, 1, 1, 0, 0, 0]' : 0.574155}", "{'[4, 6, 1, 2, 0, 0, 1, 1, 11, 15, 0, 12, 0, 1, 1, 0, 0, 0]' : 0.573844}", "{'[4, 6, 1, 2, 0, 0, 1, 1, 11, 15, 0, 12, 0, 1, 1, 0, 0, 0]' : 0.574295}", "{'[4, 6, 1, 2, 0, 0, 1, 1, 11, 15, 0, 12, 0, 1, 1, 0, 0, 0]' : 0.574411}", "{'[4, 6, 1, 2, 0, 0, 1, 1, 11, 15, 0, 12, 0, 1, 1, 0, 0, 0]' : 0.574939}", "{'[4, 6, 1, 2, 0, 0, 1, 1, 11, 15, 0, 12, 0, 1, 1, 0, 0, 0]' : 0.574616}", "{'[4, 6, 1, 2, 0, 0, 1, 1, 11, 15, 0, 12, 0, 1, 1, 0, 0, 0]' : 0.58437}", "{'[4, 6, 1, 2, 0, 0, 1, 1, 11, 15, 0, 12, 0, 1, 1, 0, 0, 0]' : 0.602904}", "{'[4, 6, 1, 2, 0, 0, 1, 1, 11, 15, 0, 12, 0, 1, 1, 0, 0, 0]' : 0.573907}", "{'[4, 6, 1, 2, 0, 0, 1, 1, 11, 15, 0, 12, 0, 1, 1, 0, 0, 0]' : 0.574606}", "{'[4, 6, 1, 2, 0, 0, 1, 1, 11, 15, 0, 12, 0, 1, 1, 0, 0, 0]' : 0.57415}", "{'[4, 6, 1, 2, 0, 0, 1, 1, 11, 15, 0, 12, 0, 1, 1, 0, 0, 0]' : 0.574494}", "{'[4, 6, 1, 2, 0, 0, 1, 1, 11, 15, 0, 12, 0, 1, 1, 0, 0, 0]' : 0.574309}", "{'[4, 6, 1, 2, 0, 0, 1, 1, 11, 15, 0, 12, 0, 1, 1, 0, 0, 0]' : 0.574208}", "{'[4, 6, 1, 2, 0, 0, 1, 1, 11, 15, 0, 12, 0, 1, 1, 0, 0, 0]' : 0.573873}", "{'[4, 6, 1, 2, 0, 0, 1, 1, 11, 15, 0, 12, 0, 1, 1, 0, 0, 0]' : 0.573825}", "{'[4, 6, 1, 2, 0, 0, 1, 1, 11, 15, 0, 12, 0, 1, 1, 0, 0, 0]' : 0.574703}", "{'[4, 6, 1, 2, 0, 0, 1, 1, 11, 15, 0, 12, 0, 1, 1, 0, 0, 0]' : 0.574978}", "{'[4, 6, 1, 2, 0, 0, 1, 1, 11, 15, 0, 12, 0, 1, 1, 0, 0, 0]' : 0.575033}", "{'[4, 6, 1, 2, 0, 0, 1, 1, 11, 15, 0, 12, 0, 1, 1, 0, 0, 0]' : 0.575209}", "{'[4, 6, 1, 2, 0, 0, 1, 1, 11, 15, 0, 12, 0, 1, 1, 0, 0, 0]' : 0.574609}", "{'[4, 6, 1, 2, 0, 0, 1, 1, 11, 15, 0, 12, 0, 1, 1, 0, 0, 0]' : 0.574695}", "{'[4, 6, 1, 2, 0, 0, 1, 1, 11, 15, 0, 12, 0, 1, 1, 0, 0, 0]' : 0.573604}", "{'[4, 6, 1, 2, 0, 0, 1, 1, 11, 15, 0, 12, 0, 1, 1, 0, 0, 0]' : 0.580904}", "{'[4, 6, 1, 2, 0, 0, 1, 1, 11, 15, 0, 12, 0, 1, 1, 0, 0, 0]' : 0.581318}", "{'[4, 6, 1, 2, 0, 0, 1, 1, 11, 15, 0, 12, 0, 1, 1, 0, 0, 0]' : 0.574368}"]
returning from 'run': {'[4, 6, 1, 2, 0, 0, 1, 1, 11, 15, 0, 12, 0, 1, 1, 0, 0, 0]': ([0.580648, 0.580365, 0.580888, 0.576963, 0.574155, 0.573844, 0.574295, 0.574411, 0.574939, 0.574616, 0.58437, 0.602904, 0.573907, 0.574606, 0.57415, 0.574494, 0.574309, 0.574208, 0.573873, 0.573825, 0.574703, 0.574978, 0.575033, 0.575209, 0.574609, 0.574695, 0.573604, 0.580904, 0.581318, 0.574368], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 6, 1, 2, 0, 0, 1, 1, 11, 15, 0, 12, 0, 1, 1, 0, 0, 0]': ([0.580648, 0.580365, 0.580888, 0.576963, 0.574155, 0.573844, 0.574295, 0.574411, 0.574939, 0.574616, 0.58437, 0.602904, 0.573907, 0.574606, 0.57415, 0.574494, 0.574309, 0.574208, 0.573873, 0.573825, 0.574703, 0.574978, 0.575033, 0.575209, 0.574609, 0.574695, 0.573604, 0.580904, 0.581318, 0.574368], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	6
        Additions: 		325
        Multiplications: 	80
        Divisions: 		0
        Logical: 		0
        Reads: 			715
        Writes: 		160
        Comparisons:		15
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest31.exe __orio_perftest31.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest31.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest31.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest31.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 597, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 536, in dopt_anova
    i)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 485, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 387, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest31.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 597, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 536, in dopt_anova
    i)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 485, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 387, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		320
        Multiplications: 	104
        Divisions: 		0
        Logical: 		0
        Reads: 			687
        Writes: 		98
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest32.exe __orio_perftest32.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest32.exe  
Program Test Output: 
{'[3, 1, 6, 2, 0, 5, 1, 0, 11, 0, 28, 12, 0, 0, 1, 0, 1, 0]' : 0.774602}
{'[3, 1, 6, 2, 0, 5, 1, 0, 11, 0, 28, 12, 0, 0, 1, 0, 1, 0]' : 0.776007}
{'[3, 1, 6, 2, 0, 5, 1, 0, 11, 0, 28, 12, 0, 0, 1, 0, 1, 0]' : 0.779687}
{'[3, 1, 6, 2, 0, 5, 1, 0, 11, 0, 28, 12, 0, 0, 1, 0, 1, 0]' : 0.774415}
{'[3, 1, 6, 2, 0, 5, 1, 0, 11, 0, 28, 12, 0, 0, 1, 0, 1, 0]' : 0.774529}
{'[3, 1, 6, 2, 0, 5, 1, 0, 11, 0, 28, 12, 0, 0, 1, 0, 1, 0]' : 0.777235}
{'[3, 1, 6, 2, 0, 5, 1, 0, 11, 0, 28, 12, 0, 0, 1, 0, 1, 0]' : 0.779707}
{'[3, 1, 6, 2, 0, 5, 1, 0, 11, 0, 28, 12, 0, 0, 1, 0, 1, 0]' : 0.776322}
{'[3, 1, 6, 2, 0, 5, 1, 0, 11, 0, 28, 12, 0, 0, 1, 0, 1, 0]' : 0.77753}
{'[3, 1, 6, 2, 0, 5, 1, 0, 11, 0, 28, 12, 0, 0, 1, 0, 1, 0]' : 0.774491}
{'[3, 1, 6, 2, 0, 5, 1, 0, 11, 0, 28, 12, 0, 0, 1, 0, 1, 0]' : 0.774888}
{'[3, 1, 6, 2, 0, 5, 1, 0, 11, 0, 28, 12, 0, 0, 1, 0, 1, 0]' : 0.77475}
{'[3, 1, 6, 2, 0, 5, 1, 0, 11, 0, 28, 12, 0, 0, 1, 0, 1, 0]' : 0.779843}
{'[3, 1, 6, 2, 0, 5, 1, 0, 11, 0, 28, 12, 0, 0, 1, 0, 1, 0]' : 0.774867}
{'[3, 1, 6, 2, 0, 5, 1, 0, 11, 0, 28, 12, 0, 0, 1, 0, 1, 0]' : 0.774472}
{'[3, 1, 6, 2, 0, 5, 1, 0, 11, 0, 28, 12, 0, 0, 1, 0, 1, 0]' : 0.775075}
{'[3, 1, 6, 2, 0, 5, 1, 0, 11, 0, 28, 12, 0, 0, 1, 0, 1, 0]' : 0.774751}
{'[3, 1, 6, 2, 0, 5, 1, 0, 11, 0, 28, 12, 0, 0, 1, 0, 1, 0]' : 0.77523}
{'[3, 1, 6, 2, 0, 5, 1, 0, 11, 0, 28, 12, 0, 0, 1, 0, 1, 0]' : 0.774956}
{'[3, 1, 6, 2, 0, 5, 1, 0, 11, 0, 28, 12, 0, 0, 1, 0, 1, 0]' : 0.774961}
{'[3, 1, 6, 2, 0, 5, 1, 0, 11, 0, 28, 12, 0, 0, 1, 0, 1, 0]' : 0.777259}
{'[3, 1, 6, 2, 0, 5, 1, 0, 11, 0, 28, 12, 0, 0, 1, 0, 1, 0]' : 0.775375}
{'[3, 1, 6, 2, 0, 5, 1, 0, 11, 0, 28, 12, 0, 0, 1, 0, 1, 0]' : 0.775013}
{'[3, 1, 6, 2, 0, 5, 1, 0, 11, 0, 28, 12, 0, 0, 1, 0, 1, 0]' : 0.774977}
{'[3, 1, 6, 2, 0, 5, 1, 0, 11, 0, 28, 12, 0, 0, 1, 0, 1, 0]' : 0.77532}
{'[3, 1, 6, 2, 0, 5, 1, 0, 11, 0, 28, 12, 0, 0, 1, 0, 1, 0]' : 0.775267}
{'[3, 1, 6, 2, 0, 5, 1, 0, 11, 0, 28, 12, 0, 0, 1, 0, 1, 0]' : 0.77518}
{'[3, 1, 6, 2, 0, 5, 1, 0, 11, 0, 28, 12, 0, 0, 1, 0, 1, 0]' : 0.775905}
{'[3, 1, 6, 2, 0, 5, 1, 0, 11, 0, 28, 12, 0, 0, 1, 0, 1, 0]' : 0.775178}
{'[3, 1, 6, 2, 0, 5, 1, 0, 11, 0, 28, 12, 0, 0, 1, 0, 1, 0]' : 0.774701}

out:
 ["{'[3, 1, 6, 2, 0, 5, 1, 0, 11, 0, 28, 12, 0, 0, 1, 0, 1, 0]' : 0.774602}", "{'[3, 1, 6, 2, 0, 5, 1, 0, 11, 0, 28, 12, 0, 0, 1, 0, 1, 0]' : 0.776007}", "{'[3, 1, 6, 2, 0, 5, 1, 0, 11, 0, 28, 12, 0, 0, 1, 0, 1, 0]' : 0.779687}", "{'[3, 1, 6, 2, 0, 5, 1, 0, 11, 0, 28, 12, 0, 0, 1, 0, 1, 0]' : 0.774415}", "{'[3, 1, 6, 2, 0, 5, 1, 0, 11, 0, 28, 12, 0, 0, 1, 0, 1, 0]' : 0.774529}", "{'[3, 1, 6, 2, 0, 5, 1, 0, 11, 0, 28, 12, 0, 0, 1, 0, 1, 0]' : 0.777235}", "{'[3, 1, 6, 2, 0, 5, 1, 0, 11, 0, 28, 12, 0, 0, 1, 0, 1, 0]' : 0.779707}", "{'[3, 1, 6, 2, 0, 5, 1, 0, 11, 0, 28, 12, 0, 0, 1, 0, 1, 0]' : 0.776322}", "{'[3, 1, 6, 2, 0, 5, 1, 0, 11, 0, 28, 12, 0, 0, 1, 0, 1, 0]' : 0.77753}", "{'[3, 1, 6, 2, 0, 5, 1, 0, 11, 0, 28, 12, 0, 0, 1, 0, 1, 0]' : 0.774491}", "{'[3, 1, 6, 2, 0, 5, 1, 0, 11, 0, 28, 12, 0, 0, 1, 0, 1, 0]' : 0.774888}", "{'[3, 1, 6, 2, 0, 5, 1, 0, 11, 0, 28, 12, 0, 0, 1, 0, 1, 0]' : 0.77475}", "{'[3, 1, 6, 2, 0, 5, 1, 0, 11, 0, 28, 12, 0, 0, 1, 0, 1, 0]' : 0.779843}", "{'[3, 1, 6, 2, 0, 5, 1, 0, 11, 0, 28, 12, 0, 0, 1, 0, 1, 0]' : 0.774867}", "{'[3, 1, 6, 2, 0, 5, 1, 0, 11, 0, 28, 12, 0, 0, 1, 0, 1, 0]' : 0.774472}", "{'[3, 1, 6, 2, 0, 5, 1, 0, 11, 0, 28, 12, 0, 0, 1, 0, 1, 0]' : 0.775075}", "{'[3, 1, 6, 2, 0, 5, 1, 0, 11, 0, 28, 12, 0, 0, 1, 0, 1, 0]' : 0.774751}", "{'[3, 1, 6, 2, 0, 5, 1, 0, 11, 0, 28, 12, 0, 0, 1, 0, 1, 0]' : 0.77523}", "{'[3, 1, 6, 2, 0, 5, 1, 0, 11, 0, 28, 12, 0, 0, 1, 0, 1, 0]' : 0.774956}", "{'[3, 1, 6, 2, 0, 5, 1, 0, 11, 0, 28, 12, 0, 0, 1, 0, 1, 0]' : 0.774961}", "{'[3, 1, 6, 2, 0, 5, 1, 0, 11, 0, 28, 12, 0, 0, 1, 0, 1, 0]' : 0.777259}", "{'[3, 1, 6, 2, 0, 5, 1, 0, 11, 0, 28, 12, 0, 0, 1, 0, 1, 0]' : 0.775375}", "{'[3, 1, 6, 2, 0, 5, 1, 0, 11, 0, 28, 12, 0, 0, 1, 0, 1, 0]' : 0.775013}", "{'[3, 1, 6, 2, 0, 5, 1, 0, 11, 0, 28, 12, 0, 0, 1, 0, 1, 0]' : 0.774977}", "{'[3, 1, 6, 2, 0, 5, 1, 0, 11, 0, 28, 12, 0, 0, 1, 0, 1, 0]' : 0.77532}", "{'[3, 1, 6, 2, 0, 5, 1, 0, 11, 0, 28, 12, 0, 0, 1, 0, 1, 0]' : 0.775267}", "{'[3, 1, 6, 2, 0, 5, 1, 0, 11, 0, 28, 12, 0, 0, 1, 0, 1, 0]' : 0.77518}", "{'[3, 1, 6, 2, 0, 5, 1, 0, 11, 0, 28, 12, 0, 0, 1, 0, 1, 0]' : 0.775905}", "{'[3, 1, 6, 2, 0, 5, 1, 0, 11, 0, 28, 12, 0, 0, 1, 0, 1, 0]' : 0.775178}", "{'[3, 1, 6, 2, 0, 5, 1, 0, 11, 0, 28, 12, 0, 0, 1, 0, 1, 0]' : 0.774701}"]
returning from 'run': {'[3, 1, 6, 2, 0, 5, 1, 0, 11, 0, 28, 12, 0, 0, 1, 0, 1, 0]': ([0.774602, 0.776007, 0.779687, 0.774415, 0.774529, 0.777235, 0.779707, 0.776322, 0.77753, 0.774491, 0.774888, 0.77475, 0.779843, 0.774867, 0.774472, 0.775075, 0.774751, 0.77523, 0.774956, 0.774961, 0.777259, 0.775375, 0.775013, 0.774977, 0.77532, 0.775267, 0.77518, 0.775905, 0.775178, 0.774701], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 1, 6, 2, 0, 5, 1, 0, 11, 0, 28, 12, 0, 0, 1, 0, 1, 0]': ([0.774602, 0.776007, 0.779687, 0.774415, 0.774529, 0.777235, 0.779707, 0.776322, 0.77753, 0.774491, 0.774888, 0.77475, 0.779843, 0.774867, 0.774472, 0.775075, 0.774751, 0.77523, 0.774956, 0.774961, 0.777259, 0.775375, 0.775013, 0.774977, 0.77532, 0.775267, 0.77518, 0.775905, 0.775178, 0.774701], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	5
        Additions: 		971
        Multiplications: 	396
        Divisions: 		0
        Logical: 		0
        Reads: 			1920
        Writes: 		345
        Comparisons:		22
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest33.exe __orio_perftest33.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest33.exe  
Program Test Output: 
{'[1, 0, 6, 3, 5, 0, 1, 1, 11, 0, 2, 12, 1, 1, 0, 1, 0, 0]' : 0.24927}
{'[1, 0, 6, 3, 5, 0, 1, 1, 11, 0, 2, 12, 1, 1, 0, 1, 0, 0]' : 0.24509}
{'[1, 0, 6, 3, 5, 0, 1, 1, 11, 0, 2, 12, 1, 1, 0, 1, 0, 0]' : 0.244556}
{'[1, 0, 6, 3, 5, 0, 1, 1, 11, 0, 2, 12, 1, 1, 0, 1, 0, 0]' : 0.246236}
{'[1, 0, 6, 3, 5, 0, 1, 1, 11, 0, 2, 12, 1, 1, 0, 1, 0, 0]' : 0.24973}
{'[1, 0, 6, 3, 5, 0, 1, 1, 11, 0, 2, 12, 1, 1, 0, 1, 0, 0]' : 0.245392}
{'[1, 0, 6, 3, 5, 0, 1, 1, 11, 0, 2, 12, 1, 1, 0, 1, 0, 0]' : 0.245488}
{'[1, 0, 6, 3, 5, 0, 1, 1, 11, 0, 2, 12, 1, 1, 0, 1, 0, 0]' : 0.245432}
{'[1, 0, 6, 3, 5, 0, 1, 1, 11, 0, 2, 12, 1, 1, 0, 1, 0, 0]' : 0.249949}
{'[1, 0, 6, 3, 5, 0, 1, 1, 11, 0, 2, 12, 1, 1, 0, 1, 0, 0]' : 0.245221}
{'[1, 0, 6, 3, 5, 0, 1, 1, 11, 0, 2, 12, 1, 1, 0, 1, 0, 0]' : 0.245434}
{'[1, 0, 6, 3, 5, 0, 1, 1, 11, 0, 2, 12, 1, 1, 0, 1, 0, 0]' : 0.245565}
{'[1, 0, 6, 3, 5, 0, 1, 1, 11, 0, 2, 12, 1, 1, 0, 1, 0, 0]' : 0.2502}
{'[1, 0, 6, 3, 5, 0, 1, 1, 11, 0, 2, 12, 1, 1, 0, 1, 0, 0]' : 0.242858}
{'[1, 0, 6, 3, 5, 0, 1, 1, 11, 0, 2, 12, 1, 1, 0, 1, 0, 0]' : 0.245857}
{'[1, 0, 6, 3, 5, 0, 1, 1, 11, 0, 2, 12, 1, 1, 0, 1, 0, 0]' : 0.245614}
{'[1, 0, 6, 3, 5, 0, 1, 1, 11, 0, 2, 12, 1, 1, 0, 1, 0, 0]' : 0.248903}
{'[1, 0, 6, 3, 5, 0, 1, 1, 11, 0, 2, 12, 1, 1, 0, 1, 0, 0]' : 0.247218}
{'[1, 0, 6, 3, 5, 0, 1, 1, 11, 0, 2, 12, 1, 1, 0, 1, 0, 0]' : 0.244505}
{'[1, 0, 6, 3, 5, 0, 1, 1, 11, 0, 2, 12, 1, 1, 0, 1, 0, 0]' : 0.244801}
{'[1, 0, 6, 3, 5, 0, 1, 1, 11, 0, 2, 12, 1, 1, 0, 1, 0, 0]' : 0.244371}
{'[1, 0, 6, 3, 5, 0, 1, 1, 11, 0, 2, 12, 1, 1, 0, 1, 0, 0]' : 0.250186}
{'[1, 0, 6, 3, 5, 0, 1, 1, 11, 0, 2, 12, 1, 1, 0, 1, 0, 0]' : 0.243119}
{'[1, 0, 6, 3, 5, 0, 1, 1, 11, 0, 2, 12, 1, 1, 0, 1, 0, 0]' : 0.243042}
{'[1, 0, 6, 3, 5, 0, 1, 1, 11, 0, 2, 12, 1, 1, 0, 1, 0, 0]' : 0.244639}
{'[1, 0, 6, 3, 5, 0, 1, 1, 11, 0, 2, 12, 1, 1, 0, 1, 0, 0]' : 0.249134}
{'[1, 0, 6, 3, 5, 0, 1, 1, 11, 0, 2, 12, 1, 1, 0, 1, 0, 0]' : 0.243747}
{'[1, 0, 6, 3, 5, 0, 1, 1, 11, 0, 2, 12, 1, 1, 0, 1, 0, 0]' : 0.245026}
{'[1, 0, 6, 3, 5, 0, 1, 1, 11, 0, 2, 12, 1, 1, 0, 1, 0, 0]' : 0.244893}
{'[1, 0, 6, 3, 5, 0, 1, 1, 11, 0, 2, 12, 1, 1, 0, 1, 0, 0]' : 0.249985}

out:
 ["{'[1, 0, 6, 3, 5, 0, 1, 1, 11, 0, 2, 12, 1, 1, 0, 1, 0, 0]' : 0.24927}", "{'[1, 0, 6, 3, 5, 0, 1, 1, 11, 0, 2, 12, 1, 1, 0, 1, 0, 0]' : 0.24509}", "{'[1, 0, 6, 3, 5, 0, 1, 1, 11, 0, 2, 12, 1, 1, 0, 1, 0, 0]' : 0.244556}", "{'[1, 0, 6, 3, 5, 0, 1, 1, 11, 0, 2, 12, 1, 1, 0, 1, 0, 0]' : 0.246236}", "{'[1, 0, 6, 3, 5, 0, 1, 1, 11, 0, 2, 12, 1, 1, 0, 1, 0, 0]' : 0.24973}", "{'[1, 0, 6, 3, 5, 0, 1, 1, 11, 0, 2, 12, 1, 1, 0, 1, 0, 0]' : 0.245392}", "{'[1, 0, 6, 3, 5, 0, 1, 1, 11, 0, 2, 12, 1, 1, 0, 1, 0, 0]' : 0.245488}", "{'[1, 0, 6, 3, 5, 0, 1, 1, 11, 0, 2, 12, 1, 1, 0, 1, 0, 0]' : 0.245432}", "{'[1, 0, 6, 3, 5, 0, 1, 1, 11, 0, 2, 12, 1, 1, 0, 1, 0, 0]' : 0.249949}", "{'[1, 0, 6, 3, 5, 0, 1, 1, 11, 0, 2, 12, 1, 1, 0, 1, 0, 0]' : 0.245221}", "{'[1, 0, 6, 3, 5, 0, 1, 1, 11, 0, 2, 12, 1, 1, 0, 1, 0, 0]' : 0.245434}", "{'[1, 0, 6, 3, 5, 0, 1, 1, 11, 0, 2, 12, 1, 1, 0, 1, 0, 0]' : 0.245565}", "{'[1, 0, 6, 3, 5, 0, 1, 1, 11, 0, 2, 12, 1, 1, 0, 1, 0, 0]' : 0.2502}", "{'[1, 0, 6, 3, 5, 0, 1, 1, 11, 0, 2, 12, 1, 1, 0, 1, 0, 0]' : 0.242858}", "{'[1, 0, 6, 3, 5, 0, 1, 1, 11, 0, 2, 12, 1, 1, 0, 1, 0, 0]' : 0.245857}", "{'[1, 0, 6, 3, 5, 0, 1, 1, 11, 0, 2, 12, 1, 1, 0, 1, 0, 0]' : 0.245614}", "{'[1, 0, 6, 3, 5, 0, 1, 1, 11, 0, 2, 12, 1, 1, 0, 1, 0, 0]' : 0.248903}", "{'[1, 0, 6, 3, 5, 0, 1, 1, 11, 0, 2, 12, 1, 1, 0, 1, 0, 0]' : 0.247218}", "{'[1, 0, 6, 3, 5, 0, 1, 1, 11, 0, 2, 12, 1, 1, 0, 1, 0, 0]' : 0.244505}", "{'[1, 0, 6, 3, 5, 0, 1, 1, 11, 0, 2, 12, 1, 1, 0, 1, 0, 0]' : 0.244801}", "{'[1, 0, 6, 3, 5, 0, 1, 1, 11, 0, 2, 12, 1, 1, 0, 1, 0, 0]' : 0.244371}", "{'[1, 0, 6, 3, 5, 0, 1, 1, 11, 0, 2, 12, 1, 1, 0, 1, 0, 0]' : 0.250186}", "{'[1, 0, 6, 3, 5, 0, 1, 1, 11, 0, 2, 12, 1, 1, 0, 1, 0, 0]' : 0.243119}", "{'[1, 0, 6, 3, 5, 0, 1, 1, 11, 0, 2, 12, 1, 1, 0, 1, 0, 0]' : 0.243042}", "{'[1, 0, 6, 3, 5, 0, 1, 1, 11, 0, 2, 12, 1, 1, 0, 1, 0, 0]' : 0.244639}", "{'[1, 0, 6, 3, 5, 0, 1, 1, 11, 0, 2, 12, 1, 1, 0, 1, 0, 0]' : 0.249134}", "{'[1, 0, 6, 3, 5, 0, 1, 1, 11, 0, 2, 12, 1, 1, 0, 1, 0, 0]' : 0.243747}", "{'[1, 0, 6, 3, 5, 0, 1, 1, 11, 0, 2, 12, 1, 1, 0, 1, 0, 0]' : 0.245026}", "{'[1, 0, 6, 3, 5, 0, 1, 1, 11, 0, 2, 12, 1, 1, 0, 1, 0, 0]' : 0.244893}", "{'[1, 0, 6, 3, 5, 0, 1, 1, 11, 0, 2, 12, 1, 1, 0, 1, 0, 0]' : 0.249985}"]
returning from 'run': {'[1, 0, 6, 3, 5, 0, 1, 1, 11, 0, 2, 12, 1, 1, 0, 1, 0, 0]': ([0.24927, 0.24509, 0.244556, 0.246236, 0.24973, 0.245392, 0.245488, 0.245432, 0.249949, 0.245221, 0.245434, 0.245565, 0.2502, 0.242858, 0.245857, 0.245614, 0.248903, 0.247218, 0.244505, 0.244801, 0.244371, 0.250186, 0.243119, 0.243042, 0.244639, 0.249134, 0.243747, 0.245026, 0.244893, 0.249985], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 6, 3, 5, 0, 1, 1, 11, 0, 2, 12, 1, 1, 0, 1, 0, 0]': ([0.24927, 0.24509, 0.244556, 0.246236, 0.24973, 0.245392, 0.245488, 0.245432, 0.249949, 0.245221, 0.245434, 0.245565, 0.2502, 0.242858, 0.245857, 0.245614, 0.248903, 0.247218, 0.244505, 0.244801, 0.244371, 0.250186, 0.243119, 0.243042, 0.244639, 0.249134, 0.243747, 0.245026, 0.244893, 0.249985], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	5
        Additions: 		5799
        Multiplications: 	1650
        Divisions: 		0
        Logical: 		0
        Reads: 			8804
        Writes: 		884
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest34.exe __orio_perftest34.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest34.exe  
Program Test Output: 
{'[0, 6, 4, 6, 0, 5, 1, 0, 11, 0, 9, 12, 2, 0, 0, 0, 0, 0]' : 0.530495}
{'[0, 6, 4, 6, 0, 5, 1, 0, 11, 0, 9, 12, 2, 0, 0, 0, 0, 0]' : 0.530066}
{'[0, 6, 4, 6, 0, 5, 1, 0, 11, 0, 9, 12, 2, 0, 0, 0, 0, 0]' : 0.530077}
{'[0, 6, 4, 6, 0, 5, 1, 0, 11, 0, 9, 12, 2, 0, 0, 0, 0, 0]' : 0.529898}
{'[0, 6, 4, 6, 0, 5, 1, 0, 11, 0, 9, 12, 2, 0, 0, 0, 0, 0]' : 0.531886}
{'[0, 6, 4, 6, 0, 5, 1, 0, 11, 0, 9, 12, 2, 0, 0, 0, 0, 0]' : 0.529822}
{'[0, 6, 4, 6, 0, 5, 1, 0, 11, 0, 9, 12, 2, 0, 0, 0, 0, 0]' : 0.531181}
{'[0, 6, 4, 6, 0, 5, 1, 0, 11, 0, 9, 12, 2, 0, 0, 0, 0, 0]' : 0.530948}
{'[0, 6, 4, 6, 0, 5, 1, 0, 11, 0, 9, 12, 2, 0, 0, 0, 0, 0]' : 0.531082}
{'[0, 6, 4, 6, 0, 5, 1, 0, 11, 0, 9, 12, 2, 0, 0, 0, 0, 0]' : 0.530224}
{'[0, 6, 4, 6, 0, 5, 1, 0, 11, 0, 9, 12, 2, 0, 0, 0, 0, 0]' : 0.530621}
{'[0, 6, 4, 6, 0, 5, 1, 0, 11, 0, 9, 12, 2, 0, 0, 0, 0, 0]' : 0.531146}
{'[0, 6, 4, 6, 0, 5, 1, 0, 11, 0, 9, 12, 2, 0, 0, 0, 0, 0]' : 0.530534}
{'[0, 6, 4, 6, 0, 5, 1, 0, 11, 0, 9, 12, 2, 0, 0, 0, 0, 0]' : 0.532429}
{'[0, 6, 4, 6, 0, 5, 1, 0, 11, 0, 9, 12, 2, 0, 0, 0, 0, 0]' : 0.532957}
{'[0, 6, 4, 6, 0, 5, 1, 0, 11, 0, 9, 12, 2, 0, 0, 0, 0, 0]' : 0.534379}
{'[0, 6, 4, 6, 0, 5, 1, 0, 11, 0, 9, 12, 2, 0, 0, 0, 0, 0]' : 0.531266}
{'[0, 6, 4, 6, 0, 5, 1, 0, 11, 0, 9, 12, 2, 0, 0, 0, 0, 0]' : 0.530132}
{'[0, 6, 4, 6, 0, 5, 1, 0, 11, 0, 9, 12, 2, 0, 0, 0, 0, 0]' : 0.530086}
{'[0, 6, 4, 6, 0, 5, 1, 0, 11, 0, 9, 12, 2, 0, 0, 0, 0, 0]' : 0.530119}
{'[0, 6, 4, 6, 0, 5, 1, 0, 11, 0, 9, 12, 2, 0, 0, 0, 0, 0]' : 0.530781}
{'[0, 6, 4, 6, 0, 5, 1, 0, 11, 0, 9, 12, 2, 0, 0, 0, 0, 0]' : 0.531229}
{'[0, 6, 4, 6, 0, 5, 1, 0, 11, 0, 9, 12, 2, 0, 0, 0, 0, 0]' : 0.530608}
{'[0, 6, 4, 6, 0, 5, 1, 0, 11, 0, 9, 12, 2, 0, 0, 0, 0, 0]' : 0.530092}
{'[0, 6, 4, 6, 0, 5, 1, 0, 11, 0, 9, 12, 2, 0, 0, 0, 0, 0]' : 0.530531}
{'[0, 6, 4, 6, 0, 5, 1, 0, 11, 0, 9, 12, 2, 0, 0, 0, 0, 0]' : 0.53037}
{'[0, 6, 4, 6, 0, 5, 1, 0, 11, 0, 9, 12, 2, 0, 0, 0, 0, 0]' : 0.530558}
{'[0, 6, 4, 6, 0, 5, 1, 0, 11, 0, 9, 12, 2, 0, 0, 0, 0, 0]' : 0.530038}
{'[0, 6, 4, 6, 0, 5, 1, 0, 11, 0, 9, 12, 2, 0, 0, 0, 0, 0]' : 0.529775}
{'[0, 6, 4, 6, 0, 5, 1, 0, 11, 0, 9, 12, 2, 0, 0, 0, 0, 0]' : 0.529975}

out:
 ["{'[0, 6, 4, 6, 0, 5, 1, 0, 11, 0, 9, 12, 2, 0, 0, 0, 0, 0]' : 0.530495}", "{'[0, 6, 4, 6, 0, 5, 1, 0, 11, 0, 9, 12, 2, 0, 0, 0, 0, 0]' : 0.530066}", "{'[0, 6, 4, 6, 0, 5, 1, 0, 11, 0, 9, 12, 2, 0, 0, 0, 0, 0]' : 0.530077}", "{'[0, 6, 4, 6, 0, 5, 1, 0, 11, 0, 9, 12, 2, 0, 0, 0, 0, 0]' : 0.529898}", "{'[0, 6, 4, 6, 0, 5, 1, 0, 11, 0, 9, 12, 2, 0, 0, 0, 0, 0]' : 0.531886}", "{'[0, 6, 4, 6, 0, 5, 1, 0, 11, 0, 9, 12, 2, 0, 0, 0, 0, 0]' : 0.529822}", "{'[0, 6, 4, 6, 0, 5, 1, 0, 11, 0, 9, 12, 2, 0, 0, 0, 0, 0]' : 0.531181}", "{'[0, 6, 4, 6, 0, 5, 1, 0, 11, 0, 9, 12, 2, 0, 0, 0, 0, 0]' : 0.530948}", "{'[0, 6, 4, 6, 0, 5, 1, 0, 11, 0, 9, 12, 2, 0, 0, 0, 0, 0]' : 0.531082}", "{'[0, 6, 4, 6, 0, 5, 1, 0, 11, 0, 9, 12, 2, 0, 0, 0, 0, 0]' : 0.530224}", "{'[0, 6, 4, 6, 0, 5, 1, 0, 11, 0, 9, 12, 2, 0, 0, 0, 0, 0]' : 0.530621}", "{'[0, 6, 4, 6, 0, 5, 1, 0, 11, 0, 9, 12, 2, 0, 0, 0, 0, 0]' : 0.531146}", "{'[0, 6, 4, 6, 0, 5, 1, 0, 11, 0, 9, 12, 2, 0, 0, 0, 0, 0]' : 0.530534}", "{'[0, 6, 4, 6, 0, 5, 1, 0, 11, 0, 9, 12, 2, 0, 0, 0, 0, 0]' : 0.532429}", "{'[0, 6, 4, 6, 0, 5, 1, 0, 11, 0, 9, 12, 2, 0, 0, 0, 0, 0]' : 0.532957}", "{'[0, 6, 4, 6, 0, 5, 1, 0, 11, 0, 9, 12, 2, 0, 0, 0, 0, 0]' : 0.534379}", "{'[0, 6, 4, 6, 0, 5, 1, 0, 11, 0, 9, 12, 2, 0, 0, 0, 0, 0]' : 0.531266}", "{'[0, 6, 4, 6, 0, 5, 1, 0, 11, 0, 9, 12, 2, 0, 0, 0, 0, 0]' : 0.530132}", "{'[0, 6, 4, 6, 0, 5, 1, 0, 11, 0, 9, 12, 2, 0, 0, 0, 0, 0]' : 0.530086}", "{'[0, 6, 4, 6, 0, 5, 1, 0, 11, 0, 9, 12, 2, 0, 0, 0, 0, 0]' : 0.530119}", "{'[0, 6, 4, 6, 0, 5, 1, 0, 11, 0, 9, 12, 2, 0, 0, 0, 0, 0]' : 0.530781}", "{'[0, 6, 4, 6, 0, 5, 1, 0, 11, 0, 9, 12, 2, 0, 0, 0, 0, 0]' : 0.531229}", "{'[0, 6, 4, 6, 0, 5, 1, 0, 11, 0, 9, 12, 2, 0, 0, 0, 0, 0]' : 0.530608}", "{'[0, 6, 4, 6, 0, 5, 1, 0, 11, 0, 9, 12, 2, 0, 0, 0, 0, 0]' : 0.530092}", "{'[0, 6, 4, 6, 0, 5, 1, 0, 11, 0, 9, 12, 2, 0, 0, 0, 0, 0]' : 0.530531}", "{'[0, 6, 4, 6, 0, 5, 1, 0, 11, 0, 9, 12, 2, 0, 0, 0, 0, 0]' : 0.53037}", "{'[0, 6, 4, 6, 0, 5, 1, 0, 11, 0, 9, 12, 2, 0, 0, 0, 0, 0]' : 0.530558}", "{'[0, 6, 4, 6, 0, 5, 1, 0, 11, 0, 9, 12, 2, 0, 0, 0, 0, 0]' : 0.530038}", "{'[0, 6, 4, 6, 0, 5, 1, 0, 11, 0, 9, 12, 2, 0, 0, 0, 0, 0]' : 0.529775}", "{'[0, 6, 4, 6, 0, 5, 1, 0, 11, 0, 9, 12, 2, 0, 0, 0, 0, 0]' : 0.529975}"]
returning from 'run': {'[0, 6, 4, 6, 0, 5, 1, 0, 11, 0, 9, 12, 2, 0, 0, 0, 0, 0]': ([0.530495, 0.530066, 0.530077, 0.529898, 0.531886, 0.529822, 0.531181, 0.530948, 0.531082, 0.530224, 0.530621, 0.531146, 0.530534, 0.532429, 0.532957, 0.534379, 0.531266, 0.530132, 0.530086, 0.530119, 0.530781, 0.531229, 0.530608, 0.530092, 0.530531, 0.53037, 0.530558, 0.530038, 0.529775, 0.529975], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 4, 6, 0, 5, 1, 0, 11, 0, 9, 12, 2, 0, 0, 0, 0, 0]': ([0.530495, 0.530066, 0.530077, 0.529898, 0.531886, 0.529822, 0.531181, 0.530948, 0.531082, 0.530224, 0.530621, 0.531146, 0.530534, 0.532429, 0.532957, 0.534379, 0.531266, 0.530132, 0.530086, 0.530119, 0.530781, 0.531229, 0.530608, 0.530092, 0.530531, 0.53037, 0.530558, 0.530038, 0.529775, 0.529975], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	93
        Max loop nest depth: 	5
        Additions: 		3773
        Multiplications: 	1380
        Divisions: 		0
        Logical: 		0
        Reads: 			7991
        Writes: 		1689
        Comparisons:		93
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest35.exe __orio_perftest35.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest35.exe  
Program Test Output: 
{'[4, 6, 1, 0, 6, 3, 1, 0, 11, 20, 0, 12, 1, 0, 1, 1, 0, 0]' : 0.267811}
{'[4, 6, 1, 0, 6, 3, 1, 0, 11, 20, 0, 12, 1, 0, 1, 1, 0, 0]' : 0.274141}
{'[4, 6, 1, 0, 6, 3, 1, 0, 11, 20, 0, 12, 1, 0, 1, 1, 0, 0]' : 0.268225}
{'[4, 6, 1, 0, 6, 3, 1, 0, 11, 20, 0, 12, 1, 0, 1, 1, 0, 0]' : 0.267512}
{'[4, 6, 1, 0, 6, 3, 1, 0, 11, 20, 0, 12, 1, 0, 1, 1, 0, 0]' : 0.268131}
{'[4, 6, 1, 0, 6, 3, 1, 0, 11, 20, 0, 12, 1, 0, 1, 1, 0, 0]' : 0.268056}
{'[4, 6, 1, 0, 6, 3, 1, 0, 11, 20, 0, 12, 1, 0, 1, 1, 0, 0]' : 0.268373}
{'[4, 6, 1, 0, 6, 3, 1, 0, 11, 20, 0, 12, 1, 0, 1, 1, 0, 0]' : 0.268606}
{'[4, 6, 1, 0, 6, 3, 1, 0, 11, 20, 0, 12, 1, 0, 1, 1, 0, 0]' : 0.267693}
{'[4, 6, 1, 0, 6, 3, 1, 0, 11, 20, 0, 12, 1, 0, 1, 1, 0, 0]' : 0.267026}
{'[4, 6, 1, 0, 6, 3, 1, 0, 11, 20, 0, 12, 1, 0, 1, 1, 0, 0]' : 0.26752}
{'[4, 6, 1, 0, 6, 3, 1, 0, 11, 20, 0, 12, 1, 0, 1, 1, 0, 0]' : 0.267618}
{'[4, 6, 1, 0, 6, 3, 1, 0, 11, 20, 0, 12, 1, 0, 1, 1, 0, 0]' : 0.268641}
{'[4, 6, 1, 0, 6, 3, 1, 0, 11, 20, 0, 12, 1, 0, 1, 1, 0, 0]' : 0.268605}
{'[4, 6, 1, 0, 6, 3, 1, 0, 11, 20, 0, 12, 1, 0, 1, 1, 0, 0]' : 0.267566}
{'[4, 6, 1, 0, 6, 3, 1, 0, 11, 20, 0, 12, 1, 0, 1, 1, 0, 0]' : 0.267591}
{'[4, 6, 1, 0, 6, 3, 1, 0, 11, 20, 0, 12, 1, 0, 1, 1, 0, 0]' : 0.267309}
{'[4, 6, 1, 0, 6, 3, 1, 0, 11, 20, 0, 12, 1, 0, 1, 1, 0, 0]' : 0.267692}
{'[4, 6, 1, 0, 6, 3, 1, 0, 11, 20, 0, 12, 1, 0, 1, 1, 0, 0]' : 0.267696}
{'[4, 6, 1, 0, 6, 3, 1, 0, 11, 20, 0, 12, 1, 0, 1, 1, 0, 0]' : 0.267342}
{'[4, 6, 1, 0, 6, 3, 1, 0, 11, 20, 0, 12, 1, 0, 1, 1, 0, 0]' : 0.267488}
{'[4, 6, 1, 0, 6, 3, 1, 0, 11, 20, 0, 12, 1, 0, 1, 1, 0, 0]' : 0.268298}
{'[4, 6, 1, 0, 6, 3, 1, 0, 11, 20, 0, 12, 1, 0, 1, 1, 0, 0]' : 0.268011}
{'[4, 6, 1, 0, 6, 3, 1, 0, 11, 20, 0, 12, 1, 0, 1, 1, 0, 0]' : 0.267233}
{'[4, 6, 1, 0, 6, 3, 1, 0, 11, 20, 0, 12, 1, 0, 1, 1, 0, 0]' : 0.267837}
{'[4, 6, 1, 0, 6, 3, 1, 0, 11, 20, 0, 12, 1, 0, 1, 1, 0, 0]' : 0.267728}
{'[4, 6, 1, 0, 6, 3, 1, 0, 11, 20, 0, 12, 1, 0, 1, 1, 0, 0]' : 0.267597}
{'[4, 6, 1, 0, 6, 3, 1, 0, 11, 20, 0, 12, 1, 0, 1, 1, 0, 0]' : 0.267401}
{'[4, 6, 1, 0, 6, 3, 1, 0, 11, 20, 0, 12, 1, 0, 1, 1, 0, 0]' : 0.268326}
{'[4, 6, 1, 0, 6, 3, 1, 0, 11, 20, 0, 12, 1, 0, 1, 1, 0, 0]' : 0.26916}

out:
 ["{'[4, 6, 1, 0, 6, 3, 1, 0, 11, 20, 0, 12, 1, 0, 1, 1, 0, 0]' : 0.267811}", "{'[4, 6, 1, 0, 6, 3, 1, 0, 11, 20, 0, 12, 1, 0, 1, 1, 0, 0]' : 0.274141}", "{'[4, 6, 1, 0, 6, 3, 1, 0, 11, 20, 0, 12, 1, 0, 1, 1, 0, 0]' : 0.268225}", "{'[4, 6, 1, 0, 6, 3, 1, 0, 11, 20, 0, 12, 1, 0, 1, 1, 0, 0]' : 0.267512}", "{'[4, 6, 1, 0, 6, 3, 1, 0, 11, 20, 0, 12, 1, 0, 1, 1, 0, 0]' : 0.268131}", "{'[4, 6, 1, 0, 6, 3, 1, 0, 11, 20, 0, 12, 1, 0, 1, 1, 0, 0]' : 0.268056}", "{'[4, 6, 1, 0, 6, 3, 1, 0, 11, 20, 0, 12, 1, 0, 1, 1, 0, 0]' : 0.268373}", "{'[4, 6, 1, 0, 6, 3, 1, 0, 11, 20, 0, 12, 1, 0, 1, 1, 0, 0]' : 0.268606}", "{'[4, 6, 1, 0, 6, 3, 1, 0, 11, 20, 0, 12, 1, 0, 1, 1, 0, 0]' : 0.267693}", "{'[4, 6, 1, 0, 6, 3, 1, 0, 11, 20, 0, 12, 1, 0, 1, 1, 0, 0]' : 0.267026}", "{'[4, 6, 1, 0, 6, 3, 1, 0, 11, 20, 0, 12, 1, 0, 1, 1, 0, 0]' : 0.26752}", "{'[4, 6, 1, 0, 6, 3, 1, 0, 11, 20, 0, 12, 1, 0, 1, 1, 0, 0]' : 0.267618}", "{'[4, 6, 1, 0, 6, 3, 1, 0, 11, 20, 0, 12, 1, 0, 1, 1, 0, 0]' : 0.268641}", "{'[4, 6, 1, 0, 6, 3, 1, 0, 11, 20, 0, 12, 1, 0, 1, 1, 0, 0]' : 0.268605}", "{'[4, 6, 1, 0, 6, 3, 1, 0, 11, 20, 0, 12, 1, 0, 1, 1, 0, 0]' : 0.267566}", "{'[4, 6, 1, 0, 6, 3, 1, 0, 11, 20, 0, 12, 1, 0, 1, 1, 0, 0]' : 0.267591}", "{'[4, 6, 1, 0, 6, 3, 1, 0, 11, 20, 0, 12, 1, 0, 1, 1, 0, 0]' : 0.267309}", "{'[4, 6, 1, 0, 6, 3, 1, 0, 11, 20, 0, 12, 1, 0, 1, 1, 0, 0]' : 0.267692}", "{'[4, 6, 1, 0, 6, 3, 1, 0, 11, 20, 0, 12, 1, 0, 1, 1, 0, 0]' : 0.267696}", "{'[4, 6, 1, 0, 6, 3, 1, 0, 11, 20, 0, 12, 1, 0, 1, 1, 0, 0]' : 0.267342}", "{'[4, 6, 1, 0, 6, 3, 1, 0, 11, 20, 0, 12, 1, 0, 1, 1, 0, 0]' : 0.267488}", "{'[4, 6, 1, 0, 6, 3, 1, 0, 11, 20, 0, 12, 1, 0, 1, 1, 0, 0]' : 0.268298}", "{'[4, 6, 1, 0, 6, 3, 1, 0, 11, 20, 0, 12, 1, 0, 1, 1, 0, 0]' : 0.268011}", "{'[4, 6, 1, 0, 6, 3, 1, 0, 11, 20, 0, 12, 1, 0, 1, 1, 0, 0]' : 0.267233}", "{'[4, 6, 1, 0, 6, 3, 1, 0, 11, 20, 0, 12, 1, 0, 1, 1, 0, 0]' : 0.267837}", "{'[4, 6, 1, 0, 6, 3, 1, 0, 11, 20, 0, 12, 1, 0, 1, 1, 0, 0]' : 0.267728}", "{'[4, 6, 1, 0, 6, 3, 1, 0, 11, 20, 0, 12, 1, 0, 1, 1, 0, 0]' : 0.267597}", "{'[4, 6, 1, 0, 6, 3, 1, 0, 11, 20, 0, 12, 1, 0, 1, 1, 0, 0]' : 0.267401}", "{'[4, 6, 1, 0, 6, 3, 1, 0, 11, 20, 0, 12, 1, 0, 1, 1, 0, 0]' : 0.268326}", "{'[4, 6, 1, 0, 6, 3, 1, 0, 11, 20, 0, 12, 1, 0, 1, 1, 0, 0]' : 0.26916}"]
returning from 'run': {'[4, 6, 1, 0, 6, 3, 1, 0, 11, 20, 0, 12, 1, 0, 1, 1, 0, 0]': ([0.267811, 0.274141, 0.268225, 0.267512, 0.268131, 0.268056, 0.268373, 0.268606, 0.267693, 0.267026, 0.26752, 0.267618, 0.268641, 0.268605, 0.267566, 0.267591, 0.267309, 0.267692, 0.267696, 0.267342, 0.267488, 0.268298, 0.268011, 0.267233, 0.267837, 0.267728, 0.267597, 0.267401, 0.268326, 0.26916], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 6, 1, 0, 6, 3, 1, 0, 11, 20, 0, 12, 1, 0, 1, 1, 0, 0]': ([0.267811, 0.274141, 0.268225, 0.267512, 0.268131, 0.268056, 0.268373, 0.268606, 0.267693, 0.267026, 0.26752, 0.267618, 0.268641, 0.268605, 0.267566, 0.267591, 0.267309, 0.267692, 0.267696, 0.267342, 0.267488, 0.268298, 0.268011, 0.267233, 0.267837, 0.267728, 0.267597, 0.267401, 0.268326, 0.26916], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	5
        Additions: 		3247
        Multiplications: 	1584
        Divisions: 		0
        Logical: 		0
        Reads: 			6183
        Writes: 		995
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest36.exe __orio_perftest36.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest36.exe  
Program Test Output: 
{'[2, 3, 2, 0, 3, 0, 1, 0, 11, 0, 8, 12, 2, 0, 0, 1, 0, 1]' : 0.51994}
{'[2, 3, 2, 0, 3, 0, 1, 0, 11, 0, 8, 12, 2, 0, 0, 1, 0, 1]' : 0.520213}
{'[2, 3, 2, 0, 3, 0, 1, 0, 11, 0, 8, 12, 2, 0, 0, 1, 0, 1]' : 0.520179}
{'[2, 3, 2, 0, 3, 0, 1, 0, 11, 0, 8, 12, 2, 0, 0, 1, 0, 1]' : 0.519494}
{'[2, 3, 2, 0, 3, 0, 1, 0, 11, 0, 8, 12, 2, 0, 0, 1, 0, 1]' : 0.520421}
{'[2, 3, 2, 0, 3, 0, 1, 0, 11, 0, 8, 12, 2, 0, 0, 1, 0, 1]' : 0.519879}
{'[2, 3, 2, 0, 3, 0, 1, 0, 11, 0, 8, 12, 2, 0, 0, 1, 0, 1]' : 0.520457}
{'[2, 3, 2, 0, 3, 0, 1, 0, 11, 0, 8, 12, 2, 0, 0, 1, 0, 1]' : 0.519968}
{'[2, 3, 2, 0, 3, 0, 1, 0, 11, 0, 8, 12, 2, 0, 0, 1, 0, 1]' : 0.521654}
{'[2, 3, 2, 0, 3, 0, 1, 0, 11, 0, 8, 12, 2, 0, 0, 1, 0, 1]' : 0.520358}
{'[2, 3, 2, 0, 3, 0, 1, 0, 11, 0, 8, 12, 2, 0, 0, 1, 0, 1]' : 0.519916}
{'[2, 3, 2, 0, 3, 0, 1, 0, 11, 0, 8, 12, 2, 0, 0, 1, 0, 1]' : 0.520484}
{'[2, 3, 2, 0, 3, 0, 1, 0, 11, 0, 8, 12, 2, 0, 0, 1, 0, 1]' : 0.52027}
{'[2, 3, 2, 0, 3, 0, 1, 0, 11, 0, 8, 12, 2, 0, 0, 1, 0, 1]' : 0.592355}
{'[2, 3, 2, 0, 3, 0, 1, 0, 11, 0, 8, 12, 2, 0, 0, 1, 0, 1]' : 0.601928}
{'[2, 3, 2, 0, 3, 0, 1, 0, 11, 0, 8, 12, 2, 0, 0, 1, 0, 1]' : 0.602552}
{'[2, 3, 2, 0, 3, 0, 1, 0, 11, 0, 8, 12, 2, 0, 0, 1, 0, 1]' : 0.600978}
{'[2, 3, 2, 0, 3, 0, 1, 0, 11, 0, 8, 12, 2, 0, 0, 1, 0, 1]' : 0.578985}
{'[2, 3, 2, 0, 3, 0, 1, 0, 11, 0, 8, 12, 2, 0, 0, 1, 0, 1]' : 0.515129}
{'[2, 3, 2, 0, 3, 0, 1, 0, 11, 0, 8, 12, 2, 0, 0, 1, 0, 1]' : 0.514794}
{'[2, 3, 2, 0, 3, 0, 1, 0, 11, 0, 8, 12, 2, 0, 0, 1, 0, 1]' : 0.516207}
{'[2, 3, 2, 0, 3, 0, 1, 0, 11, 0, 8, 12, 2, 0, 0, 1, 0, 1]' : 0.515028}
{'[2, 3, 2, 0, 3, 0, 1, 0, 11, 0, 8, 12, 2, 0, 0, 1, 0, 1]' : 0.516817}
{'[2, 3, 2, 0, 3, 0, 1, 0, 11, 0, 8, 12, 2, 0, 0, 1, 0, 1]' : 0.514657}
{'[2, 3, 2, 0, 3, 0, 1, 0, 11, 0, 8, 12, 2, 0, 0, 1, 0, 1]' : 0.520254}
{'[2, 3, 2, 0, 3, 0, 1, 0, 11, 0, 8, 12, 2, 0, 0, 1, 0, 1]' : 0.514559}
{'[2, 3, 2, 0, 3, 0, 1, 0, 11, 0, 8, 12, 2, 0, 0, 1, 0, 1]' : 0.515235}
{'[2, 3, 2, 0, 3, 0, 1, 0, 11, 0, 8, 12, 2, 0, 0, 1, 0, 1]' : 0.520531}
{'[2, 3, 2, 0, 3, 0, 1, 0, 11, 0, 8, 12, 2, 0, 0, 1, 0, 1]' : 0.518437}
{'[2, 3, 2, 0, 3, 0, 1, 0, 11, 0, 8, 12, 2, 0, 0, 1, 0, 1]' : 0.521271}

out:
 ["{'[2, 3, 2, 0, 3, 0, 1, 0, 11, 0, 8, 12, 2, 0, 0, 1, 0, 1]' : 0.51994}", "{'[2, 3, 2, 0, 3, 0, 1, 0, 11, 0, 8, 12, 2, 0, 0, 1, 0, 1]' : 0.520213}", "{'[2, 3, 2, 0, 3, 0, 1, 0, 11, 0, 8, 12, 2, 0, 0, 1, 0, 1]' : 0.520179}", "{'[2, 3, 2, 0, 3, 0, 1, 0, 11, 0, 8, 12, 2, 0, 0, 1, 0, 1]' : 0.519494}", "{'[2, 3, 2, 0, 3, 0, 1, 0, 11, 0, 8, 12, 2, 0, 0, 1, 0, 1]' : 0.520421}", "{'[2, 3, 2, 0, 3, 0, 1, 0, 11, 0, 8, 12, 2, 0, 0, 1, 0, 1]' : 0.519879}", "{'[2, 3, 2, 0, 3, 0, 1, 0, 11, 0, 8, 12, 2, 0, 0, 1, 0, 1]' : 0.520457}", "{'[2, 3, 2, 0, 3, 0, 1, 0, 11, 0, 8, 12, 2, 0, 0, 1, 0, 1]' : 0.519968}", "{'[2, 3, 2, 0, 3, 0, 1, 0, 11, 0, 8, 12, 2, 0, 0, 1, 0, 1]' : 0.521654}", "{'[2, 3, 2, 0, 3, 0, 1, 0, 11, 0, 8, 12, 2, 0, 0, 1, 0, 1]' : 0.520358}", "{'[2, 3, 2, 0, 3, 0, 1, 0, 11, 0, 8, 12, 2, 0, 0, 1, 0, 1]' : 0.519916}", "{'[2, 3, 2, 0, 3, 0, 1, 0, 11, 0, 8, 12, 2, 0, 0, 1, 0, 1]' : 0.520484}", "{'[2, 3, 2, 0, 3, 0, 1, 0, 11, 0, 8, 12, 2, 0, 0, 1, 0, 1]' : 0.52027}", "{'[2, 3, 2, 0, 3, 0, 1, 0, 11, 0, 8, 12, 2, 0, 0, 1, 0, 1]' : 0.592355}", "{'[2, 3, 2, 0, 3, 0, 1, 0, 11, 0, 8, 12, 2, 0, 0, 1, 0, 1]' : 0.601928}", "{'[2, 3, 2, 0, 3, 0, 1, 0, 11, 0, 8, 12, 2, 0, 0, 1, 0, 1]' : 0.602552}", "{'[2, 3, 2, 0, 3, 0, 1, 0, 11, 0, 8, 12, 2, 0, 0, 1, 0, 1]' : 0.600978}", "{'[2, 3, 2, 0, 3, 0, 1, 0, 11, 0, 8, 12, 2, 0, 0, 1, 0, 1]' : 0.578985}", "{'[2, 3, 2, 0, 3, 0, 1, 0, 11, 0, 8, 12, 2, 0, 0, 1, 0, 1]' : 0.515129}", "{'[2, 3, 2, 0, 3, 0, 1, 0, 11, 0, 8, 12, 2, 0, 0, 1, 0, 1]' : 0.514794}", "{'[2, 3, 2, 0, 3, 0, 1, 0, 11, 0, 8, 12, 2, 0, 0, 1, 0, 1]' : 0.516207}", "{'[2, 3, 2, 0, 3, 0, 1, 0, 11, 0, 8, 12, 2, 0, 0, 1, 0, 1]' : 0.515028}", "{'[2, 3, 2, 0, 3, 0, 1, 0, 11, 0, 8, 12, 2, 0, 0, 1, 0, 1]' : 0.516817}", "{'[2, 3, 2, 0, 3, 0, 1, 0, 11, 0, 8, 12, 2, 0, 0, 1, 0, 1]' : 0.514657}", "{'[2, 3, 2, 0, 3, 0, 1, 0, 11, 0, 8, 12, 2, 0, 0, 1, 0, 1]' : 0.520254}", "{'[2, 3, 2, 0, 3, 0, 1, 0, 11, 0, 8, 12, 2, 0, 0, 1, 0, 1]' : 0.514559}", "{'[2, 3, 2, 0, 3, 0, 1, 0, 11, 0, 8, 12, 2, 0, 0, 1, 0, 1]' : 0.515235}", "{'[2, 3, 2, 0, 3, 0, 1, 0, 11, 0, 8, 12, 2, 0, 0, 1, 0, 1]' : 0.520531}", "{'[2, 3, 2, 0, 3, 0, 1, 0, 11, 0, 8, 12, 2, 0, 0, 1, 0, 1]' : 0.518437}", "{'[2, 3, 2, 0, 3, 0, 1, 0, 11, 0, 8, 12, 2, 0, 0, 1, 0, 1]' : 0.521271}"]
returning from 'run': {'[2, 3, 2, 0, 3, 0, 1, 0, 11, 0, 8, 12, 2, 0, 0, 1, 0, 1]': ([0.51994, 0.520213, 0.520179, 0.519494, 0.520421, 0.519879, 0.520457, 0.519968, 0.521654, 0.520358, 0.519916, 0.520484, 0.52027, 0.592355, 0.601928, 0.602552, 0.600978, 0.578985, 0.515129, 0.514794, 0.516207, 0.515028, 0.516817, 0.514657, 0.520254, 0.514559, 0.515235, 0.520531, 0.518437, 0.521271], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 3, 2, 0, 3, 0, 1, 0, 11, 0, 8, 12, 2, 0, 0, 1, 0, 1]': ([0.51994, 0.520213, 0.520179, 0.519494, 0.520421, 0.519879, 0.520457, 0.519968, 0.521654, 0.520358, 0.519916, 0.520484, 0.52027, 0.592355, 0.601928, 0.602552, 0.600978, 0.578985, 0.515129, 0.514794, 0.516207, 0.515028, 0.516817, 0.514657, 0.520254, 0.514559, 0.515235, 0.520531, 0.518437, 0.521271], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	45
        Max loop nest depth: 	4
        Additions: 		2534
        Multiplications: 	736
        Divisions: 		0
        Logical: 		0
        Reads: 			4196
        Writes: 		525
        Comparisons:		45
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest37.exe __orio_perftest37.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest37.exe  
Program Test Output: 
{'[1, 3, 5, 0, 0, 0, 1, 0, 11, 6, 0, 12, 1, 0, 1, 0, 1, 1]' : 0.277724}
{'[1, 3, 5, 0, 0, 0, 1, 0, 11, 6, 0, 12, 1, 0, 1, 0, 1, 1]' : 0.27823}
{'[1, 3, 5, 0, 0, 0, 1, 0, 11, 6, 0, 12, 1, 0, 1, 0, 1, 1]' : 0.277728}
{'[1, 3, 5, 0, 0, 0, 1, 0, 11, 6, 0, 12, 1, 0, 1, 0, 1, 1]' : 0.277812}
{'[1, 3, 5, 0, 0, 0, 1, 0, 11, 6, 0, 12, 1, 0, 1, 0, 1, 1]' : 0.277733}
{'[1, 3, 5, 0, 0, 0, 1, 0, 11, 6, 0, 12, 1, 0, 1, 0, 1, 1]' : 0.278834}
{'[1, 3, 5, 0, 0, 0, 1, 0, 11, 6, 0, 12, 1, 0, 1, 0, 1, 1]' : 0.279761}
{'[1, 3, 5, 0, 0, 0, 1, 0, 11, 6, 0, 12, 1, 0, 1, 0, 1, 1]' : 0.279948}
{'[1, 3, 5, 0, 0, 0, 1, 0, 11, 6, 0, 12, 1, 0, 1, 0, 1, 1]' : 0.279742}
{'[1, 3, 5, 0, 0, 0, 1, 0, 11, 6, 0, 12, 1, 0, 1, 0, 1, 1]' : 0.279758}
{'[1, 3, 5, 0, 0, 0, 1, 0, 11, 6, 0, 12, 1, 0, 1, 0, 1, 1]' : 0.279556}
{'[1, 3, 5, 0, 0, 0, 1, 0, 11, 6, 0, 12, 1, 0, 1, 0, 1, 1]' : 0.279734}
{'[1, 3, 5, 0, 0, 0, 1, 0, 11, 6, 0, 12, 1, 0, 1, 0, 1, 1]' : 0.279766}
{'[1, 3, 5, 0, 0, 0, 1, 0, 11, 6, 0, 12, 1, 0, 1, 0, 1, 1]' : 0.279733}
{'[1, 3, 5, 0, 0, 0, 1, 0, 11, 6, 0, 12, 1, 0, 1, 0, 1, 1]' : 0.278252}
{'[1, 3, 5, 0, 0, 0, 1, 0, 11, 6, 0, 12, 1, 0, 1, 0, 1, 1]' : 0.277601}
{'[1, 3, 5, 0, 0, 0, 1, 0, 11, 6, 0, 12, 1, 0, 1, 0, 1, 1]' : 0.277496}
{'[1, 3, 5, 0, 0, 0, 1, 0, 11, 6, 0, 12, 1, 0, 1, 0, 1, 1]' : 0.277425}
{'[1, 3, 5, 0, 0, 0, 1, 0, 11, 6, 0, 12, 1, 0, 1, 0, 1, 1]' : 0.277537}
{'[1, 3, 5, 0, 0, 0, 1, 0, 11, 6, 0, 12, 1, 0, 1, 0, 1, 1]' : 0.277589}
{'[1, 3, 5, 0, 0, 0, 1, 0, 11, 6, 0, 12, 1, 0, 1, 0, 1, 1]' : 0.277518}
{'[1, 3, 5, 0, 0, 0, 1, 0, 11, 6, 0, 12, 1, 0, 1, 0, 1, 1]' : 0.277397}
{'[1, 3, 5, 0, 0, 0, 1, 0, 11, 6, 0, 12, 1, 0, 1, 0, 1, 1]' : 0.277589}
{'[1, 3, 5, 0, 0, 0, 1, 0, 11, 6, 0, 12, 1, 0, 1, 0, 1, 1]' : 0.278612}
{'[1, 3, 5, 0, 0, 0, 1, 0, 11, 6, 0, 12, 1, 0, 1, 0, 1, 1]' : 0.279665}
{'[1, 3, 5, 0, 0, 0, 1, 0, 11, 6, 0, 12, 1, 0, 1, 0, 1, 1]' : 0.278543}
{'[1, 3, 5, 0, 0, 0, 1, 0, 11, 6, 0, 12, 1, 0, 1, 0, 1, 1]' : 0.27764}
{'[1, 3, 5, 0, 0, 0, 1, 0, 11, 6, 0, 12, 1, 0, 1, 0, 1, 1]' : 0.279732}
{'[1, 3, 5, 0, 0, 0, 1, 0, 11, 6, 0, 12, 1, 0, 1, 0, 1, 1]' : 0.278949}
{'[1, 3, 5, 0, 0, 0, 1, 0, 11, 6, 0, 12, 1, 0, 1, 0, 1, 1]' : 0.277551}

out:
 ["{'[1, 3, 5, 0, 0, 0, 1, 0, 11, 6, 0, 12, 1, 0, 1, 0, 1, 1]' : 0.277724}", "{'[1, 3, 5, 0, 0, 0, 1, 0, 11, 6, 0, 12, 1, 0, 1, 0, 1, 1]' : 0.27823}", "{'[1, 3, 5, 0, 0, 0, 1, 0, 11, 6, 0, 12, 1, 0, 1, 0, 1, 1]' : 0.277728}", "{'[1, 3, 5, 0, 0, 0, 1, 0, 11, 6, 0, 12, 1, 0, 1, 0, 1, 1]' : 0.277812}", "{'[1, 3, 5, 0, 0, 0, 1, 0, 11, 6, 0, 12, 1, 0, 1, 0, 1, 1]' : 0.277733}", "{'[1, 3, 5, 0, 0, 0, 1, 0, 11, 6, 0, 12, 1, 0, 1, 0, 1, 1]' : 0.278834}", "{'[1, 3, 5, 0, 0, 0, 1, 0, 11, 6, 0, 12, 1, 0, 1, 0, 1, 1]' : 0.279761}", "{'[1, 3, 5, 0, 0, 0, 1, 0, 11, 6, 0, 12, 1, 0, 1, 0, 1, 1]' : 0.279948}", "{'[1, 3, 5, 0, 0, 0, 1, 0, 11, 6, 0, 12, 1, 0, 1, 0, 1, 1]' : 0.279742}", "{'[1, 3, 5, 0, 0, 0, 1, 0, 11, 6, 0, 12, 1, 0, 1, 0, 1, 1]' : 0.279758}", "{'[1, 3, 5, 0, 0, 0, 1, 0, 11, 6, 0, 12, 1, 0, 1, 0, 1, 1]' : 0.279556}", "{'[1, 3, 5, 0, 0, 0, 1, 0, 11, 6, 0, 12, 1, 0, 1, 0, 1, 1]' : 0.279734}", "{'[1, 3, 5, 0, 0, 0, 1, 0, 11, 6, 0, 12, 1, 0, 1, 0, 1, 1]' : 0.279766}", "{'[1, 3, 5, 0, 0, 0, 1, 0, 11, 6, 0, 12, 1, 0, 1, 0, 1, 1]' : 0.279733}", "{'[1, 3, 5, 0, 0, 0, 1, 0, 11, 6, 0, 12, 1, 0, 1, 0, 1, 1]' : 0.278252}", "{'[1, 3, 5, 0, 0, 0, 1, 0, 11, 6, 0, 12, 1, 0, 1, 0, 1, 1]' : 0.277601}", "{'[1, 3, 5, 0, 0, 0, 1, 0, 11, 6, 0, 12, 1, 0, 1, 0, 1, 1]' : 0.277496}", "{'[1, 3, 5, 0, 0, 0, 1, 0, 11, 6, 0, 12, 1, 0, 1, 0, 1, 1]' : 0.277425}", "{'[1, 3, 5, 0, 0, 0, 1, 0, 11, 6, 0, 12, 1, 0, 1, 0, 1, 1]' : 0.277537}", "{'[1, 3, 5, 0, 0, 0, 1, 0, 11, 6, 0, 12, 1, 0, 1, 0, 1, 1]' : 0.277589}", "{'[1, 3, 5, 0, 0, 0, 1, 0, 11, 6, 0, 12, 1, 0, 1, 0, 1, 1]' : 0.277518}", "{'[1, 3, 5, 0, 0, 0, 1, 0, 11, 6, 0, 12, 1, 0, 1, 0, 1, 1]' : 0.277397}", "{'[1, 3, 5, 0, 0, 0, 1, 0, 11, 6, 0, 12, 1, 0, 1, 0, 1, 1]' : 0.277589}", "{'[1, 3, 5, 0, 0, 0, 1, 0, 11, 6, 0, 12, 1, 0, 1, 0, 1, 1]' : 0.278612}", "{'[1, 3, 5, 0, 0, 0, 1, 0, 11, 6, 0, 12, 1, 0, 1, 0, 1, 1]' : 0.279665}", "{'[1, 3, 5, 0, 0, 0, 1, 0, 11, 6, 0, 12, 1, 0, 1, 0, 1, 1]' : 0.278543}", "{'[1, 3, 5, 0, 0, 0, 1, 0, 11, 6, 0, 12, 1, 0, 1, 0, 1, 1]' : 0.27764}", "{'[1, 3, 5, 0, 0, 0, 1, 0, 11, 6, 0, 12, 1, 0, 1, 0, 1, 1]' : 0.279732}", "{'[1, 3, 5, 0, 0, 0, 1, 0, 11, 6, 0, 12, 1, 0, 1, 0, 1, 1]' : 0.278949}", "{'[1, 3, 5, 0, 0, 0, 1, 0, 11, 6, 0, 12, 1, 0, 1, 0, 1, 1]' : 0.277551}"]
returning from 'run': {'[1, 3, 5, 0, 0, 0, 1, 0, 11, 6, 0, 12, 1, 0, 1, 0, 1, 1]': ([0.277724, 0.27823, 0.277728, 0.277812, 0.277733, 0.278834, 0.279761, 0.279948, 0.279742, 0.279758, 0.279556, 0.279734, 0.279766, 0.279733, 0.278252, 0.277601, 0.277496, 0.277425, 0.277537, 0.277589, 0.277518, 0.277397, 0.277589, 0.278612, 0.279665, 0.278543, 0.27764, 0.279732, 0.278949, 0.277551], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 3, 5, 0, 0, 0, 1, 0, 11, 6, 0, 12, 1, 0, 1, 0, 1, 1]': ([0.277724, 0.27823, 0.277728, 0.277812, 0.277733, 0.278834, 0.279761, 0.279948, 0.279742, 0.279758, 0.279556, 0.279734, 0.279766, 0.279733, 0.278252, 0.277601, 0.277496, 0.277425, 0.277537, 0.277589, 0.277518, 0.277397, 0.277589, 0.278612, 0.279665, 0.278543, 0.27764, 0.279732, 0.278949, 0.277551], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	54
        Max loop nest depth: 	6
        Additions: 		1643
        Multiplications: 	352
        Divisions: 		0
        Logical: 		0
        Reads: 			2664
        Writes: 		355
        Comparisons:		54
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest38.exe __orio_perftest38.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest38.exe  
Program Test Output: 
{'[5, 6, 6, 4, 6, 4, 1, 1, 11, 6, 0, 12, 0, 1, 0, 0, 0, 1]' : 0.386311}
{'[5, 6, 6, 4, 6, 4, 1, 1, 11, 6, 0, 12, 0, 1, 0, 0, 0, 1]' : 0.387557}
{'[5, 6, 6, 4, 6, 4, 1, 1, 11, 6, 0, 12, 0, 1, 0, 0, 0, 1]' : 0.386727}
{'[5, 6, 6, 4, 6, 4, 1, 1, 11, 6, 0, 12, 0, 1, 0, 0, 0, 1]' : 0.387317}
{'[5, 6, 6, 4, 6, 4, 1, 1, 11, 6, 0, 12, 0, 1, 0, 0, 0, 1]' : 0.386996}
{'[5, 6, 6, 4, 6, 4, 1, 1, 11, 6, 0, 12, 0, 1, 0, 0, 0, 1]' : 0.38832}
{'[5, 6, 6, 4, 6, 4, 1, 1, 11, 6, 0, 12, 0, 1, 0, 0, 0, 1]' : 0.38846}
{'[5, 6, 6, 4, 6, 4, 1, 1, 11, 6, 0, 12, 0, 1, 0, 0, 0, 1]' : 0.392129}
{'[5, 6, 6, 4, 6, 4, 1, 1, 11, 6, 0, 12, 0, 1, 0, 0, 0, 1]' : 0.396889}
{'[5, 6, 6, 4, 6, 4, 1, 1, 11, 6, 0, 12, 0, 1, 0, 0, 0, 1]' : 0.394929}
{'[5, 6, 6, 4, 6, 4, 1, 1, 11, 6, 0, 12, 0, 1, 0, 0, 0, 1]' : 0.407645}
{'[5, 6, 6, 4, 6, 4, 1, 1, 11, 6, 0, 12, 0, 1, 0, 0, 0, 1]' : 0.415569}
{'[5, 6, 6, 4, 6, 4, 1, 1, 11, 6, 0, 12, 0, 1, 0, 0, 0, 1]' : 0.450878}
{'[5, 6, 6, 4, 6, 4, 1, 1, 11, 6, 0, 12, 0, 1, 0, 0, 0, 1]' : 0.431126}
{'[5, 6, 6, 4, 6, 4, 1, 1, 11, 6, 0, 12, 0, 1, 0, 0, 0, 1]' : 0.436053}
{'[5, 6, 6, 4, 6, 4, 1, 1, 11, 6, 0, 12, 0, 1, 0, 0, 0, 1]' : 0.432573}
{'[5, 6, 6, 4, 6, 4, 1, 1, 11, 6, 0, 12, 0, 1, 0, 0, 0, 1]' : 0.407928}
{'[5, 6, 6, 4, 6, 4, 1, 1, 11, 6, 0, 12, 0, 1, 0, 0, 0, 1]' : 0.427199}
{'[5, 6, 6, 4, 6, 4, 1, 1, 11, 6, 0, 12, 0, 1, 0, 0, 0, 1]' : 0.426156}
{'[5, 6, 6, 4, 6, 4, 1, 1, 11, 6, 0, 12, 0, 1, 0, 0, 0, 1]' : 0.419588}
{'[5, 6, 6, 4, 6, 4, 1, 1, 11, 6, 0, 12, 0, 1, 0, 0, 0, 1]' : 0.443995}
{'[5, 6, 6, 4, 6, 4, 1, 1, 11, 6, 0, 12, 0, 1, 0, 0, 0, 1]' : 0.457096}
{'[5, 6, 6, 4, 6, 4, 1, 1, 11, 6, 0, 12, 0, 1, 0, 0, 0, 1]' : 0.439215}
{'[5, 6, 6, 4, 6, 4, 1, 1, 11, 6, 0, 12, 0, 1, 0, 0, 0, 1]' : 0.440279}
{'[5, 6, 6, 4, 6, 4, 1, 1, 11, 6, 0, 12, 0, 1, 0, 0, 0, 1]' : 0.438691}
{'[5, 6, 6, 4, 6, 4, 1, 1, 11, 6, 0, 12, 0, 1, 0, 0, 0, 1]' : 0.458842}
{'[5, 6, 6, 4, 6, 4, 1, 1, 11, 6, 0, 12, 0, 1, 0, 0, 0, 1]' : 0.45824}
{'[5, 6, 6, 4, 6, 4, 1, 1, 11, 6, 0, 12, 0, 1, 0, 0, 0, 1]' : 0.426462}
{'[5, 6, 6, 4, 6, 4, 1, 1, 11, 6, 0, 12, 0, 1, 0, 0, 0, 1]' : 0.429351}
{'[5, 6, 6, 4, 6, 4, 1, 1, 11, 6, 0, 12, 0, 1, 0, 0, 0, 1]' : 0.445637}

out:
 ["{'[5, 6, 6, 4, 6, 4, 1, 1, 11, 6, 0, 12, 0, 1, 0, 0, 0, 1]' : 0.386311}", "{'[5, 6, 6, 4, 6, 4, 1, 1, 11, 6, 0, 12, 0, 1, 0, 0, 0, 1]' : 0.387557}", "{'[5, 6, 6, 4, 6, 4, 1, 1, 11, 6, 0, 12, 0, 1, 0, 0, 0, 1]' : 0.386727}", "{'[5, 6, 6, 4, 6, 4, 1, 1, 11, 6, 0, 12, 0, 1, 0, 0, 0, 1]' : 0.387317}", "{'[5, 6, 6, 4, 6, 4, 1, 1, 11, 6, 0, 12, 0, 1, 0, 0, 0, 1]' : 0.386996}", "{'[5, 6, 6, 4, 6, 4, 1, 1, 11, 6, 0, 12, 0, 1, 0, 0, 0, 1]' : 0.38832}", "{'[5, 6, 6, 4, 6, 4, 1, 1, 11, 6, 0, 12, 0, 1, 0, 0, 0, 1]' : 0.38846}", "{'[5, 6, 6, 4, 6, 4, 1, 1, 11, 6, 0, 12, 0, 1, 0, 0, 0, 1]' : 0.392129}", "{'[5, 6, 6, 4, 6, 4, 1, 1, 11, 6, 0, 12, 0, 1, 0, 0, 0, 1]' : 0.396889}", "{'[5, 6, 6, 4, 6, 4, 1, 1, 11, 6, 0, 12, 0, 1, 0, 0, 0, 1]' : 0.394929}", "{'[5, 6, 6, 4, 6, 4, 1, 1, 11, 6, 0, 12, 0, 1, 0, 0, 0, 1]' : 0.407645}", "{'[5, 6, 6, 4, 6, 4, 1, 1, 11, 6, 0, 12, 0, 1, 0, 0, 0, 1]' : 0.415569}", "{'[5, 6, 6, 4, 6, 4, 1, 1, 11, 6, 0, 12, 0, 1, 0, 0, 0, 1]' : 0.450878}", "{'[5, 6, 6, 4, 6, 4, 1, 1, 11, 6, 0, 12, 0, 1, 0, 0, 0, 1]' : 0.431126}", "{'[5, 6, 6, 4, 6, 4, 1, 1, 11, 6, 0, 12, 0, 1, 0, 0, 0, 1]' : 0.436053}", "{'[5, 6, 6, 4, 6, 4, 1, 1, 11, 6, 0, 12, 0, 1, 0, 0, 0, 1]' : 0.432573}", "{'[5, 6, 6, 4, 6, 4, 1, 1, 11, 6, 0, 12, 0, 1, 0, 0, 0, 1]' : 0.407928}", "{'[5, 6, 6, 4, 6, 4, 1, 1, 11, 6, 0, 12, 0, 1, 0, 0, 0, 1]' : 0.427199}", "{'[5, 6, 6, 4, 6, 4, 1, 1, 11, 6, 0, 12, 0, 1, 0, 0, 0, 1]' : 0.426156}", "{'[5, 6, 6, 4, 6, 4, 1, 1, 11, 6, 0, 12, 0, 1, 0, 0, 0, 1]' : 0.419588}", "{'[5, 6, 6, 4, 6, 4, 1, 1, 11, 6, 0, 12, 0, 1, 0, 0, 0, 1]' : 0.443995}", "{'[5, 6, 6, 4, 6, 4, 1, 1, 11, 6, 0, 12, 0, 1, 0, 0, 0, 1]' : 0.457096}", "{'[5, 6, 6, 4, 6, 4, 1, 1, 11, 6, 0, 12, 0, 1, 0, 0, 0, 1]' : 0.439215}", "{'[5, 6, 6, 4, 6, 4, 1, 1, 11, 6, 0, 12, 0, 1, 0, 0, 0, 1]' : 0.440279}", "{'[5, 6, 6, 4, 6, 4, 1, 1, 11, 6, 0, 12, 0, 1, 0, 0, 0, 1]' : 0.438691}", "{'[5, 6, 6, 4, 6, 4, 1, 1, 11, 6, 0, 12, 0, 1, 0, 0, 0, 1]' : 0.458842}", "{'[5, 6, 6, 4, 6, 4, 1, 1, 11, 6, 0, 12, 0, 1, 0, 0, 0, 1]' : 0.45824}", "{'[5, 6, 6, 4, 6, 4, 1, 1, 11, 6, 0, 12, 0, 1, 0, 0, 0, 1]' : 0.426462}", "{'[5, 6, 6, 4, 6, 4, 1, 1, 11, 6, 0, 12, 0, 1, 0, 0, 0, 1]' : 0.429351}", "{'[5, 6, 6, 4, 6, 4, 1, 1, 11, 6, 0, 12, 0, 1, 0, 0, 0, 1]' : 0.445637}"]
returning from 'run': {'[5, 6, 6, 4, 6, 4, 1, 1, 11, 6, 0, 12, 0, 1, 0, 0, 0, 1]': ([0.386311, 0.387557, 0.386727, 0.387317, 0.386996, 0.38832, 0.38846, 0.392129, 0.396889, 0.394929, 0.407645, 0.415569, 0.450878, 0.431126, 0.436053, 0.432573, 0.407928, 0.427199, 0.426156, 0.419588, 0.443995, 0.457096, 0.439215, 0.440279, 0.438691, 0.458842, 0.45824, 0.426462, 0.429351, 0.445637], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 6, 6, 4, 6, 4, 1, 1, 11, 6, 0, 12, 0, 1, 0, 0, 0, 1]': ([0.386311, 0.387557, 0.386727, 0.387317, 0.386996, 0.38832, 0.38846, 0.392129, 0.396889, 0.394929, 0.407645, 0.415569, 0.450878, 0.431126, 0.436053, 0.432573, 0.407928, 0.427199, 0.426156, 0.419588, 0.443995, 0.457096, 0.439215, 0.440279, 0.438691, 0.458842, 0.45824, 0.426462, 0.429351, 0.445637], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	4
        Additions: 		153
        Multiplications: 	44
        Divisions: 		0
        Logical: 		0
        Reads: 			364
        Writes: 		90
        Comparisons:		10
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest39.exe __orio_perftest39.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest39.exe  
Program Test Output: 
{'[1, 5, 2, 0, 0, 0, 1, 0, 11, 0, 21, 12, 0, 1, 0, 1, 1, 0]' : 0.773774}
{'[1, 5, 2, 0, 0, 0, 1, 0, 11, 0, 21, 12, 0, 1, 0, 1, 1, 0]' : 0.763233}
{'[1, 5, 2, 0, 0, 0, 1, 0, 11, 0, 21, 12, 0, 1, 0, 1, 1, 0]' : 0.808058}
{'[1, 5, 2, 0, 0, 0, 1, 0, 11, 0, 21, 12, 0, 1, 0, 1, 1, 0]' : 0.784065}
{'[1, 5, 2, 0, 0, 0, 1, 0, 11, 0, 21, 12, 0, 1, 0, 1, 1, 0]' : 0.7641}
{'[1, 5, 2, 0, 0, 0, 1, 0, 11, 0, 21, 12, 0, 1, 0, 1, 1, 0]' : 0.778691}
{'[1, 5, 2, 0, 0, 0, 1, 0, 11, 0, 21, 12, 0, 1, 0, 1, 1, 0]' : 0.803394}
{'[1, 5, 2, 0, 0, 0, 1, 0, 11, 0, 21, 12, 0, 1, 0, 1, 1, 0]' : 0.763349}
{'[1, 5, 2, 0, 0, 0, 1, 0, 11, 0, 21, 12, 0, 1, 0, 1, 1, 0]' : 0.73847}
{'[1, 5, 2, 0, 0, 0, 1, 0, 11, 0, 21, 12, 0, 1, 0, 1, 1, 0]' : 0.745183}
{'[1, 5, 2, 0, 0, 0, 1, 0, 11, 0, 21, 12, 0, 1, 0, 1, 1, 0]' : 0.742809}
{'[1, 5, 2, 0, 0, 0, 1, 0, 11, 0, 21, 12, 0, 1, 0, 1, 1, 0]' : 0.740874}
{'[1, 5, 2, 0, 0, 0, 1, 0, 11, 0, 21, 12, 0, 1, 0, 1, 1, 0]' : 0.781121}
{'[1, 5, 2, 0, 0, 0, 1, 0, 11, 0, 21, 12, 0, 1, 0, 1, 1, 0]' : 0.75645}
{'[1, 5, 2, 0, 0, 0, 1, 0, 11, 0, 21, 12, 0, 1, 0, 1, 1, 0]' : 0.780812}
{'[1, 5, 2, 0, 0, 0, 1, 0, 11, 0, 21, 12, 0, 1, 0, 1, 1, 0]' : 0.791933}
{'[1, 5, 2, 0, 0, 0, 1, 0, 11, 0, 21, 12, 0, 1, 0, 1, 1, 0]' : 0.754448}
{'[1, 5, 2, 0, 0, 0, 1, 0, 11, 0, 21, 12, 0, 1, 0, 1, 1, 0]' : 0.755272}
{'[1, 5, 2, 0, 0, 0, 1, 0, 11, 0, 21, 12, 0, 1, 0, 1, 1, 0]' : 0.743251}
{'[1, 5, 2, 0, 0, 0, 1, 0, 11, 0, 21, 12, 0, 1, 0, 1, 1, 0]' : 0.737439}
{'[1, 5, 2, 0, 0, 0, 1, 0, 11, 0, 21, 12, 0, 1, 0, 1, 1, 0]' : 0.739056}
{'[1, 5, 2, 0, 0, 0, 1, 0, 11, 0, 21, 12, 0, 1, 0, 1, 1, 0]' : 0.741866}
{'[1, 5, 2, 0, 0, 0, 1, 0, 11, 0, 21, 12, 0, 1, 0, 1, 1, 0]' : 0.737779}
{'[1, 5, 2, 0, 0, 0, 1, 0, 11, 0, 21, 12, 0, 1, 0, 1, 1, 0]' : 0.740097}
{'[1, 5, 2, 0, 0, 0, 1, 0, 11, 0, 21, 12, 0, 1, 0, 1, 1, 0]' : 0.740766}
{'[1, 5, 2, 0, 0, 0, 1, 0, 11, 0, 21, 12, 0, 1, 0, 1, 1, 0]' : 0.744709}
{'[1, 5, 2, 0, 0, 0, 1, 0, 11, 0, 21, 12, 0, 1, 0, 1, 1, 0]' : 0.776099}
{'[1, 5, 2, 0, 0, 0, 1, 0, 11, 0, 21, 12, 0, 1, 0, 1, 1, 0]' : 0.753107}
{'[1, 5, 2, 0, 0, 0, 1, 0, 11, 0, 21, 12, 0, 1, 0, 1, 1, 0]' : 0.762222}
{'[1, 5, 2, 0, 0, 0, 1, 0, 11, 0, 21, 12, 0, 1, 0, 1, 1, 0]' : 0.792055}

out:
 ["{'[1, 5, 2, 0, 0, 0, 1, 0, 11, 0, 21, 12, 0, 1, 0, 1, 1, 0]' : 0.773774}", "{'[1, 5, 2, 0, 0, 0, 1, 0, 11, 0, 21, 12, 0, 1, 0, 1, 1, 0]' : 0.763233}", "{'[1, 5, 2, 0, 0, 0, 1, 0, 11, 0, 21, 12, 0, 1, 0, 1, 1, 0]' : 0.808058}", "{'[1, 5, 2, 0, 0, 0, 1, 0, 11, 0, 21, 12, 0, 1, 0, 1, 1, 0]' : 0.784065}", "{'[1, 5, 2, 0, 0, 0, 1, 0, 11, 0, 21, 12, 0, 1, 0, 1, 1, 0]' : 0.7641}", "{'[1, 5, 2, 0, 0, 0, 1, 0, 11, 0, 21, 12, 0, 1, 0, 1, 1, 0]' : 0.778691}", "{'[1, 5, 2, 0, 0, 0, 1, 0, 11, 0, 21, 12, 0, 1, 0, 1, 1, 0]' : 0.803394}", "{'[1, 5, 2, 0, 0, 0, 1, 0, 11, 0, 21, 12, 0, 1, 0, 1, 1, 0]' : 0.763349}", "{'[1, 5, 2, 0, 0, 0, 1, 0, 11, 0, 21, 12, 0, 1, 0, 1, 1, 0]' : 0.73847}", "{'[1, 5, 2, 0, 0, 0, 1, 0, 11, 0, 21, 12, 0, 1, 0, 1, 1, 0]' : 0.745183}", "{'[1, 5, 2, 0, 0, 0, 1, 0, 11, 0, 21, 12, 0, 1, 0, 1, 1, 0]' : 0.742809}", "{'[1, 5, 2, 0, 0, 0, 1, 0, 11, 0, 21, 12, 0, 1, 0, 1, 1, 0]' : 0.740874}", "{'[1, 5, 2, 0, 0, 0, 1, 0, 11, 0, 21, 12, 0, 1, 0, 1, 1, 0]' : 0.781121}", "{'[1, 5, 2, 0, 0, 0, 1, 0, 11, 0, 21, 12, 0, 1, 0, 1, 1, 0]' : 0.75645}", "{'[1, 5, 2, 0, 0, 0, 1, 0, 11, 0, 21, 12, 0, 1, 0, 1, 1, 0]' : 0.780812}", "{'[1, 5, 2, 0, 0, 0, 1, 0, 11, 0, 21, 12, 0, 1, 0, 1, 1, 0]' : 0.791933}", "{'[1, 5, 2, 0, 0, 0, 1, 0, 11, 0, 21, 12, 0, 1, 0, 1, 1, 0]' : 0.754448}", "{'[1, 5, 2, 0, 0, 0, 1, 0, 11, 0, 21, 12, 0, 1, 0, 1, 1, 0]' : 0.755272}", "{'[1, 5, 2, 0, 0, 0, 1, 0, 11, 0, 21, 12, 0, 1, 0, 1, 1, 0]' : 0.743251}", "{'[1, 5, 2, 0, 0, 0, 1, 0, 11, 0, 21, 12, 0, 1, 0, 1, 1, 0]' : 0.737439}", "{'[1, 5, 2, 0, 0, 0, 1, 0, 11, 0, 21, 12, 0, 1, 0, 1, 1, 0]' : 0.739056}", "{'[1, 5, 2, 0, 0, 0, 1, 0, 11, 0, 21, 12, 0, 1, 0, 1, 1, 0]' : 0.741866}", "{'[1, 5, 2, 0, 0, 0, 1, 0, 11, 0, 21, 12, 0, 1, 0, 1, 1, 0]' : 0.737779}", "{'[1, 5, 2, 0, 0, 0, 1, 0, 11, 0, 21, 12, 0, 1, 0, 1, 1, 0]' : 0.740097}", "{'[1, 5, 2, 0, 0, 0, 1, 0, 11, 0, 21, 12, 0, 1, 0, 1, 1, 0]' : 0.740766}", "{'[1, 5, 2, 0, 0, 0, 1, 0, 11, 0, 21, 12, 0, 1, 0, 1, 1, 0]' : 0.744709}", "{'[1, 5, 2, 0, 0, 0, 1, 0, 11, 0, 21, 12, 0, 1, 0, 1, 1, 0]' : 0.776099}", "{'[1, 5, 2, 0, 0, 0, 1, 0, 11, 0, 21, 12, 0, 1, 0, 1, 1, 0]' : 0.753107}", "{'[1, 5, 2, 0, 0, 0, 1, 0, 11, 0, 21, 12, 0, 1, 0, 1, 1, 0]' : 0.762222}", "{'[1, 5, 2, 0, 0, 0, 1, 0, 11, 0, 21, 12, 0, 1, 0, 1, 1, 0]' : 0.792055}"]
returning from 'run': {'[1, 5, 2, 0, 0, 0, 1, 0, 11, 0, 21, 12, 0, 1, 0, 1, 1, 0]': ([0.773774, 0.763233, 0.808058, 0.784065, 0.7641, 0.778691, 0.803394, 0.763349, 0.73847, 0.745183, 0.742809, 0.740874, 0.781121, 0.75645, 0.780812, 0.791933, 0.754448, 0.755272, 0.743251, 0.737439, 0.739056, 0.741866, 0.737779, 0.740097, 0.740766, 0.744709, 0.776099, 0.753107, 0.762222, 0.792055], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 5, 2, 0, 0, 0, 1, 0, 11, 0, 21, 12, 0, 1, 0, 1, 1, 0]': ([0.773774, 0.763233, 0.808058, 0.784065, 0.7641, 0.778691, 0.803394, 0.763349, 0.73847, 0.745183, 0.742809, 0.740874, 0.781121, 0.75645, 0.780812, 0.791933, 0.754448, 0.755272, 0.743251, 0.737439, 0.739056, 0.741866, 0.737779, 0.740097, 0.740766, 0.744709, 0.776099, 0.753107, 0.762222, 0.792055], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	6
        Additions: 		279
        Multiplications: 	92
        Divisions: 		0
        Logical: 		0
        Reads: 			596
        Writes: 		119
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest40.exe __orio_perftest40.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest40.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest40.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest40.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 597, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 536, in dopt_anova
    i)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 485, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 387, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest40.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 122, in search
    best_coord,best_perf,search_time,runs = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 597, in searchBestCoord
    best_point = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 536, in dopt_anova
    i)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 485, in dopt_anova_step
    design = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 387, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 327, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Complete design, with measurements:
    T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_y U_I U_J RT_I RT_J RT_K SCR VEC1 VEC2
3      6    0    1    6    2    6       0   0  20    1    1    0   1    1    0
19     4    2    2    5    3    1       1   0   7    1    1    0   1    1    0
23     0    2    2    3    5    5       0  29   0    1    0    0   0    1    1
42     3    2    0    0    0    4       1   0   8    0    0    0   0    1    0
44     2    6    5    2    0    3       0   0   1    0    1    0   0    0    1
62     2    0    0    0    0    5       0  24   0    0    0    2   1    0    0
64     1    1    4    1    2    6       1   0   7    0    1    1   1    1    1
69     5    0    2    0    2    5       0   0   8    2    0    0   0    1    0
76     2    4    0    6    4    1       0   6   0    0    1    0   0    1    0
95     1    1    0    3    5    2       0   0   7    0    0    1   1    0    1
104    1    0    3    2    1    2       0   2   0    0    0    0   1    0    1
109    0    3    3    3    1    2       1  28   0    2    0    0   1    1    1
110    2    3    0    1    5    2       1   0  26    1    1    0   0    0    0
141    5    0    1    4    5    0       1   0  27    0    1    1   0    1    1
177    2    1    2    1    2    2       0   0   6    0    1    1   0    1    0
220    3    5    2    2    0    2       1   0  27    0    1    0   1    0    1
243    1    1    2    2    5    5       0  29   0    0    0    2   0    0    0
274    2    5    6    0    6    0       1  19   0    0    0    0   1    0    0
313    2    1    2    4    5    1       1   2   0    1    0    0   1    0    1
324    2    2    3    6    2    0       0   0  22    0    0    2   0    0    1
336    6    2    4    6    5    2       0  23   0    0    1    1   1    1    1
348    2    2    2    6    2    5       1   0  13    0    0    1   1    0    0
352    4    6    1    2    0    0       1  15   0    0    1    1   0    0    0
356    3    1    6    2    0    5       0   0  28    0    0    1   0    1    0
358    1    0    6    3    5    0       1   0   2    1    1    0   1    0    0
366    0    6    4    6    0    5       0   0   9    2    0    0   0    0    0
367    4    6    1    0    6    3       0  20   0    1    0    1   1    0    0
370    2    3    2    0    3    0       0   0   8    2    0    0   1    0    1
371    1    3    5    0    0    0       0   6   0    1    0    1   0    1    1
373    5    6    6    4    6    4       1   6   0    0    1    0   0    0    1
378    1    5    2    0    0    0       0   0  21    0    1    0   1    1    0
    cost_mean
3   0.3680804
19  0.2659294
23  0.3234937
42  1.0385970
44  0.7026838
62  0.4512601
64  0.7793507
69  0.5592434
76  0.4322057
95  0.7063444
104 0.3549320
109 0.3451822
110 0.3103452
141 1.0989577
177 0.8149301
220 0.8222861
243 1.3082923
274 0.5263354
313 0.2454627
324 0.7638700
336 0.3172237
348 0.7748879
352 0.5768397
356 0.7757498
358 0.2461820
366 0.5307768
367 0.2680744
370 0.5314317
371 0.2785052
373 0.4196053
378 0.7611494

Heteroscedasticity Test p-value: 0.423146497972
Regression Step:                Df Sum Sq Mean Sq F value Pr(>F)  
T1_I             1 0.0020  0.0020   0.048 0.8350  
T1_J             1 0.0256  0.0256   0.604 0.4721  
T1_K             1 0.0415  0.0415   0.979 0.3678  
T2_I             1 0.0342  0.0342   0.808 0.4099  
T2_J             1 0.0833  0.0833   1.969 0.2195  
T2_K             1 0.0383  0.0383   0.905 0.3851  
ACOPY_y          1 0.0155  0.0155   0.365 0.5721  
U_I              1 0.0338  0.0338   0.798 0.4126  
U_J              1 0.2456  0.2456   5.802 0.0610 .
RT_I             1 0.4953  0.4953  11.702 0.0188 *
RT_J             1 0.0367  0.0367   0.868 0.3943  
RT_K             1 0.0817  0.0817   1.930 0.2235  
SCR              1 0.1269  0.1269   2.997 0.1440  
VEC1             1 0.0095  0.0095   0.224 0.6559  
VEC2             1 0.0015  0.0015   0.036 0.8560  
I(1/(1 + T1_I))  1 0.0179  0.0179   0.424 0.5437  
I(1/(1 + T1_J))  1 0.0016  0.0016   0.037 0.8548  
I(1/(1 + T1_K))  1 0.1603  0.1603   3.786 0.1092  
I(1/(1 + T2_I))  1 0.0053  0.0053   0.126 0.7371  
I(1/(1 + T2_J))  1 0.0001  0.0001   0.002 0.9695  
I(1/(1 + T2_K))  1 0.0102  0.0102   0.240 0.6450  
I(1/(1 + U_I))   1 0.2873  0.2873   6.786 0.0480 *
I(1/(1 + U_J))   1 0.0780  0.0780   1.842 0.2327  
I(1/(1 + RT_I))  1 0.2175  0.2175   5.138 0.0727 .
I(1/(1 + RT_K))  1 0.0146  0.0146   0.344 0.5828  
Residuals        5 0.2117  0.0423                 
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Predicting Best
Generating valid search space of size 780 (does not spend evaluations)
Valid coordinates: 156
Tested coordinates: 10000
Valid coordinates: 312
Tested coordinates: 20000
Valid coordinates: 468
Tested coordinates: 30000
Valid coordinates: 624
Tested coordinates: 40000
Valid coordinates: 780
Valid/Tested configurations: 780/46710
Generated Search Space:
NULL
Identical predictions (tol = 1e-5): 1
Getting Best from Design
Response: ['cost_mean']
Design Names:  [1] "T1_I"      "T1_J"      "T1_K"      "T2_I"      "T2_J"      "T2_K"     
 [7] "ACOPY_y"   "U_I"       "U_J"       "RT_I"      "RT_J"      "RT_K"     
[13] "SCR"       "VEC1"      "VEC2"      "cost_mean"

Design Response:     cost_mean
3   0.3680804
19  0.2659294
23  0.3234937
42  1.0385970
44  0.7026838
62  0.4512601
64  0.7793507
69  0.5592434
76  0.4322057
95  0.7063444
104 0.3549320
109 0.3451822
110 0.3103452
141 1.0989577
177 0.8149301
220 0.8222861
243 1.3082923
274 0.5263354
313 0.2454627
324 0.7638700
336 0.3172237
348 0.7748879
352 0.5768397
356 0.7757498
358 0.2461820
366 0.5307768
367 0.2680744
370 0.5314317
371 0.2785052
373 0.4196053
378 0.7611494

Getting fixed variables
Fixed Variables: {'U_K': 12, 'ACOPY_x': 1, 'U1_I': 11, 'RT_I': 1, 'U_J': 0}
Pruning Model
Best Predicted:     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
629    0    3    4    6    1    3       1       0   11  12   0  12    1    0
    RT_K SCR VEC1 VEC2
629    1   1    0    1

Best From Design:     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_y U_I U_J RT_I RT_J RT_K SCR VEC1 VEC2
313    2    1    2    4    5    1       1   2   0    1    0    0   1    0    1
    cost_mean
313 0.2454627

Pruned Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_y', 'U_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Fixed Factors: {'U_K': 12, 'ACOPY_x': 1, 'U1_I': 11, 'RT_I': 1, 'U_J': 0}
Length of requested configs: 1
Result was on Database, Returning Now
Starting Point (-O3):
0.6593555
Predicted Best Point:
[0, 3, 4, 6, 1, 3, 1, 0, 11, 12, 0, 12, 1, 0, 1, 1, 0, 1]
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	66
        Max loop nest depth: 	5
        Additions: 		2692
        Multiplications: 	1012
        Divisions: 		0
        Logical: 		0
        Reads: 			5816
        Writes: 		1246
        Comparisons:		66
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest41.exe __orio_perftest41.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest41.exe  
Program Test Output: 
{'[0, 3, 4, 6, 1, 3, 1, 0, 11, 12, 0, 12, 1, 0, 1, 1, 0, 1]' : 0.256589}
{'[0, 3, 4, 6, 1, 3, 1, 0, 11, 12, 0, 12, 1, 0, 1, 1, 0, 1]' : 0.255874}
{'[0, 3, 4, 6, 1, 3, 1, 0, 11, 12, 0, 12, 1, 0, 1, 1, 0, 1]' : 0.254559}
{'[0, 3, 4, 6, 1, 3, 1, 0, 11, 12, 0, 12, 1, 0, 1, 1, 0, 1]' : 0.255875}
{'[0, 3, 4, 6, 1, 3, 1, 0, 11, 12, 0, 12, 1, 0, 1, 1, 0, 1]' : 0.255884}
{'[0, 3, 4, 6, 1, 3, 1, 0, 11, 12, 0, 12, 1, 0, 1, 1, 0, 1]' : 0.255328}
{'[0, 3, 4, 6, 1, 3, 1, 0, 11, 12, 0, 12, 1, 0, 1, 1, 0, 1]' : 0.254622}
{'[0, 3, 4, 6, 1, 3, 1, 0, 11, 12, 0, 12, 1, 0, 1, 1, 0, 1]' : 0.257232}
{'[0, 3, 4, 6, 1, 3, 1, 0, 11, 12, 0, 12, 1, 0, 1, 1, 0, 1]' : 0.255969}
{'[0, 3, 4, 6, 1, 3, 1, 0, 11, 12, 0, 12, 1, 0, 1, 1, 0, 1]' : 0.254601}
{'[0, 3, 4, 6, 1, 3, 1, 0, 11, 12, 0, 12, 1, 0, 1, 1, 0, 1]' : 0.256544}
{'[0, 3, 4, 6, 1, 3, 1, 0, 11, 12, 0, 12, 1, 0, 1, 1, 0, 1]' : 0.254586}
{'[0, 3, 4, 6, 1, 3, 1, 0, 11, 12, 0, 12, 1, 0, 1, 1, 0, 1]' : 0.256799}
{'[0, 3, 4, 6, 1, 3, 1, 0, 11, 12, 0, 12, 1, 0, 1, 1, 0, 1]' : 0.256765}
{'[0, 3, 4, 6, 1, 3, 1, 0, 11, 12, 0, 12, 1, 0, 1, 1, 0, 1]' : 0.255305}
{'[0, 3, 4, 6, 1, 3, 1, 0, 11, 12, 0, 12, 1, 0, 1, 1, 0, 1]' : 0.254771}
{'[0, 3, 4, 6, 1, 3, 1, 0, 11, 12, 0, 12, 1, 0, 1, 1, 0, 1]' : 0.256707}
{'[0, 3, 4, 6, 1, 3, 1, 0, 11, 12, 0, 12, 1, 0, 1, 1, 0, 1]' : 0.256653}
{'[0, 3, 4, 6, 1, 3, 1, 0, 11, 12, 0, 12, 1, 0, 1, 1, 0, 1]' : 0.255921}
{'[0, 3, 4, 6, 1, 3, 1, 0, 11, 12, 0, 12, 1, 0, 1, 1, 0, 1]' : 0.256778}
{'[0, 3, 4, 6, 1, 3, 1, 0, 11, 12, 0, 12, 1, 0, 1, 1, 0, 1]' : 0.255646}
{'[0, 3, 4, 6, 1, 3, 1, 0, 11, 12, 0, 12, 1, 0, 1, 1, 0, 1]' : 0.25579}
{'[0, 3, 4, 6, 1, 3, 1, 0, 11, 12, 0, 12, 1, 0, 1, 1, 0, 1]' : 0.255747}
{'[0, 3, 4, 6, 1, 3, 1, 0, 11, 12, 0, 12, 1, 0, 1, 1, 0, 1]' : 0.25579}
{'[0, 3, 4, 6, 1, 3, 1, 0, 11, 12, 0, 12, 1, 0, 1, 1, 0, 1]' : 0.255491}
{'[0, 3, 4, 6, 1, 3, 1, 0, 11, 12, 0, 12, 1, 0, 1, 1, 0, 1]' : 0.255466}
{'[0, 3, 4, 6, 1, 3, 1, 0, 11, 12, 0, 12, 1, 0, 1, 1, 0, 1]' : 0.2545}
{'[0, 3, 4, 6, 1, 3, 1, 0, 11, 12, 0, 12, 1, 0, 1, 1, 0, 1]' : 0.2553}
{'[0, 3, 4, 6, 1, 3, 1, 0, 11, 12, 0, 12, 1, 0, 1, 1, 0, 1]' : 0.256443}
{'[0, 3, 4, 6, 1, 3, 1, 0, 11, 12, 0, 12, 1, 0, 1, 1, 0, 1]' : 0.255682}

out:
 ["{'[0, 3, 4, 6, 1, 3, 1, 0, 11, 12, 0, 12, 1, 0, 1, 1, 0, 1]' : 0.256589}", "{'[0, 3, 4, 6, 1, 3, 1, 0, 11, 12, 0, 12, 1, 0, 1, 1, 0, 1]' : 0.255874}", "{'[0, 3, 4, 6, 1, 3, 1, 0, 11, 12, 0, 12, 1, 0, 1, 1, 0, 1]' : 0.254559}", "{'[0, 3, 4, 6, 1, 3, 1, 0, 11, 12, 0, 12, 1, 0, 1, 1, 0, 1]' : 0.255875}", "{'[0, 3, 4, 6, 1, 3, 1, 0, 11, 12, 0, 12, 1, 0, 1, 1, 0, 1]' : 0.255884}", "{'[0, 3, 4, 6, 1, 3, 1, 0, 11, 12, 0, 12, 1, 0, 1, 1, 0, 1]' : 0.255328}", "{'[0, 3, 4, 6, 1, 3, 1, 0, 11, 12, 0, 12, 1, 0, 1, 1, 0, 1]' : 0.254622}", "{'[0, 3, 4, 6, 1, 3, 1, 0, 11, 12, 0, 12, 1, 0, 1, 1, 0, 1]' : 0.257232}", "{'[0, 3, 4, 6, 1, 3, 1, 0, 11, 12, 0, 12, 1, 0, 1, 1, 0, 1]' : 0.255969}", "{'[0, 3, 4, 6, 1, 3, 1, 0, 11, 12, 0, 12, 1, 0, 1, 1, 0, 1]' : 0.254601}", "{'[0, 3, 4, 6, 1, 3, 1, 0, 11, 12, 0, 12, 1, 0, 1, 1, 0, 1]' : 0.256544}", "{'[0, 3, 4, 6, 1, 3, 1, 0, 11, 12, 0, 12, 1, 0, 1, 1, 0, 1]' : 0.254586}", "{'[0, 3, 4, 6, 1, 3, 1, 0, 11, 12, 0, 12, 1, 0, 1, 1, 0, 1]' : 0.256799}", "{'[0, 3, 4, 6, 1, 3, 1, 0, 11, 12, 0, 12, 1, 0, 1, 1, 0, 1]' : 0.256765}", "{'[0, 3, 4, 6, 1, 3, 1, 0, 11, 12, 0, 12, 1, 0, 1, 1, 0, 1]' : 0.255305}", "{'[0, 3, 4, 6, 1, 3, 1, 0, 11, 12, 0, 12, 1, 0, 1, 1, 0, 1]' : 0.254771}", "{'[0, 3, 4, 6, 1, 3, 1, 0, 11, 12, 0, 12, 1, 0, 1, 1, 0, 1]' : 0.256707}", "{'[0, 3, 4, 6, 1, 3, 1, 0, 11, 12, 0, 12, 1, 0, 1, 1, 0, 1]' : 0.256653}", "{'[0, 3, 4, 6, 1, 3, 1, 0, 11, 12, 0, 12, 1, 0, 1, 1, 0, 1]' : 0.255921}", "{'[0, 3, 4, 6, 1, 3, 1, 0, 11, 12, 0, 12, 1, 0, 1, 1, 0, 1]' : 0.256778}", "{'[0, 3, 4, 6, 1, 3, 1, 0, 11, 12, 0, 12, 1, 0, 1, 1, 0, 1]' : 0.255646}", "{'[0, 3, 4, 6, 1, 3, 1, 0, 11, 12, 0, 12, 1, 0, 1, 1, 0, 1]' : 0.25579}", "{'[0, 3, 4, 6, 1, 3, 1, 0, 11, 12, 0, 12, 1, 0, 1, 1, 0, 1]' : 0.255747}", "{'[0, 3, 4, 6, 1, 3, 1, 0, 11, 12, 0, 12, 1, 0, 1, 1, 0, 1]' : 0.25579}", "{'[0, 3, 4, 6, 1, 3, 1, 0, 11, 12, 0, 12, 1, 0, 1, 1, 0, 1]' : 0.255491}", "{'[0, 3, 4, 6, 1, 3, 1, 0, 11, 12, 0, 12, 1, 0, 1, 1, 0, 1]' : 0.255466}", "{'[0, 3, 4, 6, 1, 3, 1, 0, 11, 12, 0, 12, 1, 0, 1, 1, 0, 1]' : 0.2545}", "{'[0, 3, 4, 6, 1, 3, 1, 0, 11, 12, 0, 12, 1, 0, 1, 1, 0, 1]' : 0.2553}", "{'[0, 3, 4, 6, 1, 3, 1, 0, 11, 12, 0, 12, 1, 0, 1, 1, 0, 1]' : 0.256443}", "{'[0, 3, 4, 6, 1, 3, 1, 0, 11, 12, 0, 12, 1, 0, 1, 1, 0, 1]' : 0.255682}"]
returning from 'run': {'[0, 3, 4, 6, 1, 3, 1, 0, 11, 12, 0, 12, 1, 0, 1, 1, 0, 1]': ([0.256589, 0.255874, 0.254559, 0.255875, 0.255884, 0.255328, 0.254622, 0.257232, 0.255969, 0.254601, 0.256544, 0.254586, 0.256799, 0.256765, 0.255305, 0.254771, 0.256707, 0.256653, 0.255921, 0.256778, 0.255646, 0.25579, 0.255747, 0.25579, 0.255491, 0.255466, 0.2545, 0.2553, 0.256443, 0.255682], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 3, 4, 6, 1, 3, 1, 0, 11, 12, 0, 12, 1, 0, 1, 1, 0, 1]': ([0.256589, 0.255874, 0.254559, 0.255875, 0.255884, 0.255328, 0.254622, 0.257232, 0.255969, 0.254601, 0.256544, 0.254586, 0.256799, 0.256765, 0.255305, 0.254771, 0.256707, 0.256653, 0.255921, 0.256778, 0.255646, 0.25579, 0.255747, 0.25579, 0.255491, 0.255466, 0.2545, 0.2553, 0.256443, 0.255682], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Design Best Point:
    T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_y U_I U_J RT_I RT_J RT_K SCR VEC1 VEC2
313    2    1    2    4    5    1       1   2   0    1    0    0   1    0    1
    cost_mean
313 0.2454627

Slowdown (Design Best): 0.3722767662260091
Slowdown (Predicted Best): 0.3879150170128255
Budget: 70/180
Step 2
Full Model:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_y + U_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Fixed Factors: {'U_K': 12, 'ACOPY_x': 1, 'U1_I': 11, 'RT_I': 1, 'U_J': 0}
Computing D-Optimal Design
Updating Constraints
Parameter Range Values: {'ACOPY_x': [False, True], 'ACOPY_y': [False, True], 'RT_K': [1, 8, 32], 'T1_I': [1, 16, 32, 64, 128, 256, 512], 'T1_J': [1, 16, 32, 64, 128, 256, 512], 'T1_K': [1, 16, 32, 64, 128, 256, 512], 'U_K': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_J': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U1_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'T2_K': [1, 64, 128, 256, 512, 1024, 2048], 'T2_J': [1, 64, 128, 256, 512, 1024, 2048], 'T2_I': [1, 64, 128, 256, 512, 1024, 2048], 'VEC2': [False, True], 'VEC1': [False, True], 'RT_I': [1, 8, 32], 'SCR': [False, True], 'RT_J': [1, 8, 32]}
Variable Ranges: {'ACOPY_x': [False, True], 'ACOPY_y': [False, True], 'RT_K': [1, 8, 32], 'T1_I': [1, 16, 32, 64, 128, 256, 512], 'T1_J': [1, 16, 32, 64, 128, 256, 512], 'T1_K': [1, 16, 32, 64, 128, 256, 512], 'U_K': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_J': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U1_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'T2_K': [1, 64, 128, 256, 512, 1024, 2048], 'T2_J': [1, 64, 128, 256, 512, 1024, 2048], 'T2_I': [1, 64, 128, 256, 512, 1024, 2048], 'VEC2': [False, True], 'VEC1': [False, True], 'RT_I': [1, 8, 32], 'SCR': [False, True], 'RT_J': [1, 8, 32]}
Current Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_y', 'U_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Constraint Text: True and (((T2_I ==1 )or (T2_I %T1_I ==0 ))) and (((T2_J ==1 )or (T2_J %T1_J ==0 ))) and (((T2_K ==1 )or (T2_K %T1_K ==0 ))) and ((RT_I *RT_J +RT_I *RT_K +RT_J *RT_K <=150 )) and (((U_I ==1 )or (U_J ==1 )or (U_K ==1 )))
Updated Constraint: True and (((variable_ranges["T2_I"][int(x[3])] ==1 )or (variable_ranges["T2_I"][int(x[3])] %variable_ranges["T1_I"][int(x[0])] ==0 ))) and (((variable_ranges["T2_J"][int(x[4])] ==1 )or (variable_ranges["T2_J"][int(x[4])] %variable_ranges["T1_J"][int(x[1])] ==0 ))) and (((variable_ranges["T2_K"][int(x[5])] ==1 )or (variable_ranges["T2_K"][int(x[5])] %variable_ranges["T1_K"][int(x[2])] ==0 ))) and ((8 *variable_ranges["RT_J"][int(x[8])] +8 *variable_ranges["RT_K"][int(x[9])] +variable_ranges["RT_J"][int(x[8])] *variable_ranges["RT_K"][int(x[9])] <=150 )) and (((variable_ranges["U_I"][int(x[7])] ==1 )or (1 ==1 )or (13 ==1 )))
Computing D-Optimal Design with 33 experiments
Design Formula:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_y + U_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Generating valid search space of size 330 (does not spend evaluations)
Valid coordinates: 66
Valid coordinates: 132
Valid coordinates: 198
Valid coordinates: 264
Valid coordinates: 330
Valid/Tested configurations: 330/1433
Generated Search Space:
NULL
Starting "optFederov" run
Using Search Space:
NULL
Data Dimensions: [1] 330  13

Data Column Classes: ['integer', 'integer', 'integer', 'integer', 'integer', 'integer', 'integer', 'integer', 'integer', 'integer', 'integer', 'integer', 'integer']
Looking at Data: 
[1] 3.03902e-14

