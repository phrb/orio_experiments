
====== START ORIO ======

----- begin reading the source file: atax2.src1.c -----
----- finished reading the source file -----

----- begin parsing annotations -----
----- finished parsing annotations -----

----- begin optimizations -----
Search_Space         = 8.234e+13
Number_of_Parameters = 18
Numeric_Parameters   = 13
Binary_Parameters    = 05
['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
[[1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [False, True], [False, True], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 8, 32], [1, 8, 32], [1, 8, 32], [False, True], [False, True], [False, True]]

----- begin empirical tuning for problem size -----
 N = 10000
Parameters: {'ACOPY_x': [0, 2], 'ACOPY_y': [0, 2], 'RT_K': [0, 3], 'T1_I': [0, 7], 'T1_J': [0, 7], 'T1_K': [0, 7], 'U_K': [0, 30], 'U_J': [0, 30], 'U_I': [0, 30], 'U1_I': [0, 30], 'T2_K': [0, 7], 'T2_J': [0, 7], 'T2_I': [0, 7], 'VEC2': [0, 2], 'VEC1': [0, 2], 'RT_I': [0, 3], 'SCR': [0, 2], 'RT_J': [0, 3]}
Parameter Range Values: {'ACOPY_x': [False, True], 'ACOPY_y': [False, True], 'RT_K': [1, 8, 32], 'T1_I': [1, 16, 32, 64, 128, 256, 512], 'T1_J': [1, 16, 32, 64, 128, 256, 512], 'T1_K': [1, 16, 32, 64, 128, 256, 512], 'U_K': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_J': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U1_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'T2_K': [1, 64, 128, 256, 512, 1024, 2048], 'T2_J': [1, 64, 128, 256, 512, 1024, 2048], 'T2_I': [1, 64, 128, 256, 512, 1024, 2048], 'VEC2': [False, True], 'VEC1': [False, True], 'RT_I': [1, 8, 32], 'SCR': [False, True], 'RT_J': [1, 8, 32]}

----- begin random search -----
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Inverse Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Starting DOPT-anova
Step 0
Generating valid search space of size 4000 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Valid coordinates: 800
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Valid coordinates: 1600
Tested coordinates: 70000
Tested coordinates: 80000
Tested coordinates: 90000
Valid coordinates: 2400
Tested coordinates: 100000
Tested coordinates: 110000
Tested coordinates: 120000
Valid coordinates: 3200
Tested coordinates: 130000
Tested coordinates: 140000
Tested coordinates: 150000
Tested coordinates: 160000
Valid coordinates: 4000
Valid/Tested configurations: 4000/160501
Generated Search Space:
NULL
Clean Info:
Removed Factors: character(0)

Removed Inverse Factors: [1] "ACOPY_x" "ACOPY_y" "SCR"     "VEC1"    "VEC2"   

New Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
New Inverse Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
New Fixed Factors: {}
Full Model:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Fixed Factors: {}
Computing D-Optimal Design
Computing D-Optimal Design with 40 experiments
Design Formula:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Starting "optFederov" run
Using Search Space:
NULL
Data Dimensions: [1] 4000   18

     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
40      1    4    4    0    6    3       1       0    6   2   0  24    2    0
100     4    4    6    3    3    0       1       1   29   0  29   5    0    2
118     1    5    0    6    6    4       0       1    5   0  13   5    0    2
324     0    1    1    0    5    6       1       0   23  24   0  14    0    0
472     3    1    5    0    6    4       0       1    7   5  22   0    0    0
600     5    3    2    0    0    0       0       1    3   0  21  29    1    0
643     5    3    1    0    0    0       0       0    8  17  26   0    2    0
780     1    0    3    5    0    3       1       1    5   0  14  18    0    0
806     0    0    6    1    5    6       1       1   27   0  28   8    1    1
867     2    0    2    2    3    1       1       1   24  11   0   0    0    0
1035    6    0    4    6    0    6       1       1    4  22   0   1    0    2
1036    5    5    6    3    6    5       1       1    1  29  26   0    1    0
1174    4    3    6    2    3    5       1       1    8  26  14   0    2    0
1323    2    3    2    6    4    6       1       1    5  23  26   0    1    1
1406    5    5    0    6    5    1       0       0   20  18   0   5    0    1
1521    0    0    3    0    0    2       0       0    7  28   0   0    0    2
1795    6    1    0    4    6    4       1       0    0   0  27  28    1    0
1797    1    3    0    6    0    6       0       1   29  24  24   0    2    0
2080    6    1    0    4    0    1       1       1   27   3   0  27    0    0
2090    5    0    6    5    6    0       0       0    0  27   9   0    0    1
2113    4    0    3    6    2    2       0       1    0   0  23  26    0    0
2142    0    0    4    0    2    0       0       0   28  24   0  21    0    0
2248    0    5    1    5    0    3       1       0   23  13  23   0    0    2
2389    0    4    3    2    4    6       0       1    6   1   0   0    0    1
2426    0    4    5    6    6    0       0       1    3   0  28   0    0    0
2464    3    0    1    1    5    3       0       0   16   1   0   1    1    0
2511    0    2    6    6    2    0       0       0    0   5  25   0    0    0
2876    0    3    4    5    0    3       0       0   25   2  26   0    1    0
2895    3    5    6    6    4    6       1       0   27   0   1   3    2    0
2900    1    2    6    2    2    4       0       0    8   0   8   9    0    0
3085    2    0    0    3    3    0       0       1    3  13  18   0    0    0
3220    0    2    0    0    1    5       1       1    3  22   8   0    1    0
3388    0    6    1    2    6    3       1       0    0   9   0   2    0    0
3490    3    6    6    5    0    6       0       0   14   0  28  18    0    0
3567    0    6    4    3    0    6       1       1    0  15   0  23    1    1
3592    6    5    0    0    0    4       0       0   26   0  19   0    0    0
3729    4    1    1    2    6    1       0       0   26  29   0  29    0    1
3781    6    5    2    4    5    6       1       0   27   7   4   0    0    2
3822    1    1    2    0    0    5       1       0    0  19   7   0    0    1
3849    0    0    1    3    6    1       0       1    8   0   4  15    0    0
     RT_K SCR VEC1 VEC2
40      0   1    0    0
100     0   1    0    0
118     0   1    1    1
324     2   1    0    1
472     0   0    0    1
600     1   1    1    1
643     0   0    1    1
780     0   1    1    1
806     0   0    1    0
867     2   1    1    0
1035    0   1    1    0
1036    1   1    0    1
1174    0   0    0    1
1323    0   0    0    0
1406    1   1    0    0
1521    0   0    1    0
1795    0   1    0    0
1797    0   1    0    0
2080    2   0    1    0
2090    1   1    1    0
2113    1   0    0    1
2142    0   0    0    0
2248    0   0    0    1
2389    1   0    0    1
2426    1   0    1    0
2464    1   0    1    1
2511    2   1    1    1
2876    1   1    0    1
2895    0   0    0    1
2900    0   1    1    0
3085    1   0    0    1
3220    0   0    1    0
3388    0   1    1    0
3490    2   0    0    0
3567    0   1    0    1
3592    2   1    0    1
3729    0   0    1    1
3781    0   1    0    0
3822    1   0    1    0
3849    2   0    0    0

D-Efficiency Approximation: [1] 0.302

Measuring design of size 40
Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Length of requested configs: 1
Code stats:
        Number of loops: 	32
        Max loop nest depth: 	5
        Additions: 		4054
        Multiplications: 	1944
        Divisions: 		0
        Logical: 		0
        Reads: 			7768
        Writes: 		1284
        Comparisons:		32
        Gotos: 			0
        
 compiling timer:
	gcc -O3 -fopenmp -DDYNAMIC -O0 -c -o timer_cpu.o timer_cpu.c
 building the original code:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -DORIGINAL -o __orio_perftest_original.exe __orio_perftest1.c timer_cpu.o -lm
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest1.exe __orio_perftest1.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest1.exe  
Program Test Output: 
{'[1, 4, 4, 0, 6, 3, 1, 0, 6, 2, 0, 24, 2, 0, 0, 1, 0, 0]' : 0.399252}
{'[1, 4, 4, 0, 6, 3, 1, 0, 6, 2, 0, 24, 2, 0, 0, 1, 0, 0]' : 0.398731}
{'[1, 4, 4, 0, 6, 3, 1, 0, 6, 2, 0, 24, 2, 0, 0, 1, 0, 0]' : 0.397905}
{'[1, 4, 4, 0, 6, 3, 1, 0, 6, 2, 0, 24, 2, 0, 0, 1, 0, 0]' : 0.397784}
{'[1, 4, 4, 0, 6, 3, 1, 0, 6, 2, 0, 24, 2, 0, 0, 1, 0, 0]' : 0.397462}
{'[1, 4, 4, 0, 6, 3, 1, 0, 6, 2, 0, 24, 2, 0, 0, 1, 0, 0]' : 0.397537}
{'[1, 4, 4, 0, 6, 3, 1, 0, 6, 2, 0, 24, 2, 0, 0, 1, 0, 0]' : 0.397709}
{'[1, 4, 4, 0, 6, 3, 1, 0, 6, 2, 0, 24, 2, 0, 0, 1, 0, 0]' : 0.397781}
{'[1, 4, 4, 0, 6, 3, 1, 0, 6, 2, 0, 24, 2, 0, 0, 1, 0, 0]' : 0.396158}
{'[1, 4, 4, 0, 6, 3, 1, 0, 6, 2, 0, 24, 2, 0, 0, 1, 0, 0]' : 0.395994}
{'[1, 4, 4, 0, 6, 3, 1, 0, 6, 2, 0, 24, 2, 0, 0, 1, 0, 0]' : 0.397365}
{'[1, 4, 4, 0, 6, 3, 1, 0, 6, 2, 0, 24, 2, 0, 0, 1, 0, 0]' : 0.395813}
{'[1, 4, 4, 0, 6, 3, 1, 0, 6, 2, 0, 24, 2, 0, 0, 1, 0, 0]' : 0.395602}
{'[1, 4, 4, 0, 6, 3, 1, 0, 6, 2, 0, 24, 2, 0, 0, 1, 0, 0]' : 0.39564}
{'[1, 4, 4, 0, 6, 3, 1, 0, 6, 2, 0, 24, 2, 0, 0, 1, 0, 0]' : 0.395773}
{'[1, 4, 4, 0, 6, 3, 1, 0, 6, 2, 0, 24, 2, 0, 0, 1, 0, 0]' : 0.396206}
{'[1, 4, 4, 0, 6, 3, 1, 0, 6, 2, 0, 24, 2, 0, 0, 1, 0, 0]' : 0.396254}
{'[1, 4, 4, 0, 6, 3, 1, 0, 6, 2, 0, 24, 2, 0, 0, 1, 0, 0]' : 0.396115}
{'[1, 4, 4, 0, 6, 3, 1, 0, 6, 2, 0, 24, 2, 0, 0, 1, 0, 0]' : 0.396028}
{'[1, 4, 4, 0, 6, 3, 1, 0, 6, 2, 0, 24, 2, 0, 0, 1, 0, 0]' : 0.400167}
{'[1, 4, 4, 0, 6, 3, 1, 0, 6, 2, 0, 24, 2, 0, 0, 1, 0, 0]' : 0.397965}
{'[1, 4, 4, 0, 6, 3, 1, 0, 6, 2, 0, 24, 2, 0, 0, 1, 0, 0]' : 0.397818}
{'[1, 4, 4, 0, 6, 3, 1, 0, 6, 2, 0, 24, 2, 0, 0, 1, 0, 0]' : 0.397528}
{'[1, 4, 4, 0, 6, 3, 1, 0, 6, 2, 0, 24, 2, 0, 0, 1, 0, 0]' : 0.397706}
{'[1, 4, 4, 0, 6, 3, 1, 0, 6, 2, 0, 24, 2, 0, 0, 1, 0, 0]' : 0.401234}
{'[1, 4, 4, 0, 6, 3, 1, 0, 6, 2, 0, 24, 2, 0, 0, 1, 0, 0]' : 0.395671}
{'[1, 4, 4, 0, 6, 3, 1, 0, 6, 2, 0, 24, 2, 0, 0, 1, 0, 0]' : 0.395737}
{'[1, 4, 4, 0, 6, 3, 1, 0, 6, 2, 0, 24, 2, 0, 0, 1, 0, 0]' : 0.395743}
{'[1, 4, 4, 0, 6, 3, 1, 0, 6, 2, 0, 24, 2, 0, 0, 1, 0, 0]' : 0.400064}
{'[1, 4, 4, 0, 6, 3, 1, 0, 6, 2, 0, 24, 2, 0, 0, 1, 0, 0]' : 0.395749}

out:
 ["{'[1, 4, 4, 0, 6, 3, 1, 0, 6, 2, 0, 24, 2, 0, 0, 1, 0, 0]' : 0.399252}", "{'[1, 4, 4, 0, 6, 3, 1, 0, 6, 2, 0, 24, 2, 0, 0, 1, 0, 0]' : 0.398731}", "{'[1, 4, 4, 0, 6, 3, 1, 0, 6, 2, 0, 24, 2, 0, 0, 1, 0, 0]' : 0.397905}", "{'[1, 4, 4, 0, 6, 3, 1, 0, 6, 2, 0, 24, 2, 0, 0, 1, 0, 0]' : 0.397784}", "{'[1, 4, 4, 0, 6, 3, 1, 0, 6, 2, 0, 24, 2, 0, 0, 1, 0, 0]' : 0.397462}", "{'[1, 4, 4, 0, 6, 3, 1, 0, 6, 2, 0, 24, 2, 0, 0, 1, 0, 0]' : 0.397537}", "{'[1, 4, 4, 0, 6, 3, 1, 0, 6, 2, 0, 24, 2, 0, 0, 1, 0, 0]' : 0.397709}", "{'[1, 4, 4, 0, 6, 3, 1, 0, 6, 2, 0, 24, 2, 0, 0, 1, 0, 0]' : 0.397781}", "{'[1, 4, 4, 0, 6, 3, 1, 0, 6, 2, 0, 24, 2, 0, 0, 1, 0, 0]' : 0.396158}", "{'[1, 4, 4, 0, 6, 3, 1, 0, 6, 2, 0, 24, 2, 0, 0, 1, 0, 0]' : 0.395994}", "{'[1, 4, 4, 0, 6, 3, 1, 0, 6, 2, 0, 24, 2, 0, 0, 1, 0, 0]' : 0.397365}", "{'[1, 4, 4, 0, 6, 3, 1, 0, 6, 2, 0, 24, 2, 0, 0, 1, 0, 0]' : 0.395813}", "{'[1, 4, 4, 0, 6, 3, 1, 0, 6, 2, 0, 24, 2, 0, 0, 1, 0, 0]' : 0.395602}", "{'[1, 4, 4, 0, 6, 3, 1, 0, 6, 2, 0, 24, 2, 0, 0, 1, 0, 0]' : 0.39564}", "{'[1, 4, 4, 0, 6, 3, 1, 0, 6, 2, 0, 24, 2, 0, 0, 1, 0, 0]' : 0.395773}", "{'[1, 4, 4, 0, 6, 3, 1, 0, 6, 2, 0, 24, 2, 0, 0, 1, 0, 0]' : 0.396206}", "{'[1, 4, 4, 0, 6, 3, 1, 0, 6, 2, 0, 24, 2, 0, 0, 1, 0, 0]' : 0.396254}", "{'[1, 4, 4, 0, 6, 3, 1, 0, 6, 2, 0, 24, 2, 0, 0, 1, 0, 0]' : 0.396115}", "{'[1, 4, 4, 0, 6, 3, 1, 0, 6, 2, 0, 24, 2, 0, 0, 1, 0, 0]' : 0.396028}", "{'[1, 4, 4, 0, 6, 3, 1, 0, 6, 2, 0, 24, 2, 0, 0, 1, 0, 0]' : 0.400167}", "{'[1, 4, 4, 0, 6, 3, 1, 0, 6, 2, 0, 24, 2, 0, 0, 1, 0, 0]' : 0.397965}", "{'[1, 4, 4, 0, 6, 3, 1, 0, 6, 2, 0, 24, 2, 0, 0, 1, 0, 0]' : 0.397818}", "{'[1, 4, 4, 0, 6, 3, 1, 0, 6, 2, 0, 24, 2, 0, 0, 1, 0, 0]' : 0.397528}", "{'[1, 4, 4, 0, 6, 3, 1, 0, 6, 2, 0, 24, 2, 0, 0, 1, 0, 0]' : 0.397706}", "{'[1, 4, 4, 0, 6, 3, 1, 0, 6, 2, 0, 24, 2, 0, 0, 1, 0, 0]' : 0.401234}", "{'[1, 4, 4, 0, 6, 3, 1, 0, 6, 2, 0, 24, 2, 0, 0, 1, 0, 0]' : 0.395671}", "{'[1, 4, 4, 0, 6, 3, 1, 0, 6, 2, 0, 24, 2, 0, 0, 1, 0, 0]' : 0.395737}", "{'[1, 4, 4, 0, 6, 3, 1, 0, 6, 2, 0, 24, 2, 0, 0, 1, 0, 0]' : 0.395743}", "{'[1, 4, 4, 0, 6, 3, 1, 0, 6, 2, 0, 24, 2, 0, 0, 1, 0, 0]' : 0.400064}", "{'[1, 4, 4, 0, 6, 3, 1, 0, 6, 2, 0, 24, 2, 0, 0, 1, 0, 0]' : 0.395749}"]
returning from 'run': {'[1, 4, 4, 0, 6, 3, 1, 0, 6, 2, 0, 24, 2, 0, 0, 1, 0, 0]': ([0.399252, 0.398731, 0.397905, 0.397784, 0.397462, 0.397537, 0.397709, 0.397781, 0.396158, 0.395994, 0.397365, 0.395813, 0.395602, 0.39564, 0.395773, 0.396206, 0.396254, 0.396115, 0.396028, 0.400167, 0.397965, 0.397818, 0.397528, 0.397706, 0.401234, 0.395671, 0.395737, 0.395743, 0.400064, 0.395749], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 4, 4, 0, 6, 3, 1, 0, 6, 2, 0, 24, 2, 0, 0, 1, 0, 0]': ([0.399252, 0.398731, 0.397905, 0.397784, 0.397462, 0.397537, 0.397709, 0.397781, 0.396158, 0.395994, 0.397365, 0.395813, 0.395602, 0.39564, 0.395773, 0.396206, 0.396254, 0.396115, 0.396028, 0.400167, 0.397965, 0.397818, 0.397528, 0.397706, 0.401234, 0.395671, 0.395737, 0.395743, 0.400064, 0.395749], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		284
        Multiplications: 	78
        Divisions: 		0
        Logical: 		0
        Reads: 			571
        Writes: 		118
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest2.exe __orio_perftest2.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest2.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest2.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest2.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest2.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	6
        Additions: 		296
        Multiplications: 	108
        Divisions: 		0
        Logical: 		0
        Reads: 			637
        Writes: 		120
        Comparisons:		15
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest3.exe __orio_perftest3.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest3.exe  
Program Test Output: 
{'[1, 5, 0, 6, 6, 4, 0, 1, 5, 0, 13, 5, 0, 2, 0, 1, 1, 1]' : 0.723831}
{'[1, 5, 0, 6, 6, 4, 0, 1, 5, 0, 13, 5, 0, 2, 0, 1, 1, 1]' : 0.725136}
{'[1, 5, 0, 6, 6, 4, 0, 1, 5, 0, 13, 5, 0, 2, 0, 1, 1, 1]' : 0.726214}
{'[1, 5, 0, 6, 6, 4, 0, 1, 5, 0, 13, 5, 0, 2, 0, 1, 1, 1]' : 0.725545}
{'[1, 5, 0, 6, 6, 4, 0, 1, 5, 0, 13, 5, 0, 2, 0, 1, 1, 1]' : 0.724807}
{'[1, 5, 0, 6, 6, 4, 0, 1, 5, 0, 13, 5, 0, 2, 0, 1, 1, 1]' : 0.723258}
{'[1, 5, 0, 6, 6, 4, 0, 1, 5, 0, 13, 5, 0, 2, 0, 1, 1, 1]' : 0.722824}
{'[1, 5, 0, 6, 6, 4, 0, 1, 5, 0, 13, 5, 0, 2, 0, 1, 1, 1]' : 0.723096}
{'[1, 5, 0, 6, 6, 4, 0, 1, 5, 0, 13, 5, 0, 2, 0, 1, 1, 1]' : 0.723001}
{'[1, 5, 0, 6, 6, 4, 0, 1, 5, 0, 13, 5, 0, 2, 0, 1, 1, 1]' : 0.723509}
{'[1, 5, 0, 6, 6, 4, 0, 1, 5, 0, 13, 5, 0, 2, 0, 1, 1, 1]' : 0.723317}
{'[1, 5, 0, 6, 6, 4, 0, 1, 5, 0, 13, 5, 0, 2, 0, 1, 1, 1]' : 0.723428}
{'[1, 5, 0, 6, 6, 4, 0, 1, 5, 0, 13, 5, 0, 2, 0, 1, 1, 1]' : 0.723785}
{'[1, 5, 0, 6, 6, 4, 0, 1, 5, 0, 13, 5, 0, 2, 0, 1, 1, 1]' : 0.723316}
{'[1, 5, 0, 6, 6, 4, 0, 1, 5, 0, 13, 5, 0, 2, 0, 1, 1, 1]' : 0.723363}
{'[1, 5, 0, 6, 6, 4, 0, 1, 5, 0, 13, 5, 0, 2, 0, 1, 1, 1]' : 0.723396}
{'[1, 5, 0, 6, 6, 4, 0, 1, 5, 0, 13, 5, 0, 2, 0, 1, 1, 1]' : 0.723448}
{'[1, 5, 0, 6, 6, 4, 0, 1, 5, 0, 13, 5, 0, 2, 0, 1, 1, 1]' : 0.723251}
{'[1, 5, 0, 6, 6, 4, 0, 1, 5, 0, 13, 5, 0, 2, 0, 1, 1, 1]' : 0.723721}
{'[1, 5, 0, 6, 6, 4, 0, 1, 5, 0, 13, 5, 0, 2, 0, 1, 1, 1]' : 0.723313}
{'[1, 5, 0, 6, 6, 4, 0, 1, 5, 0, 13, 5, 0, 2, 0, 1, 1, 1]' : 0.723587}
{'[1, 5, 0, 6, 6, 4, 0, 1, 5, 0, 13, 5, 0, 2, 0, 1, 1, 1]' : 0.723704}
{'[1, 5, 0, 6, 6, 4, 0, 1, 5, 0, 13, 5, 0, 2, 0, 1, 1, 1]' : 0.723361}
{'[1, 5, 0, 6, 6, 4, 0, 1, 5, 0, 13, 5, 0, 2, 0, 1, 1, 1]' : 0.723393}
{'[1, 5, 0, 6, 6, 4, 0, 1, 5, 0, 13, 5, 0, 2, 0, 1, 1, 1]' : 0.725903}
{'[1, 5, 0, 6, 6, 4, 0, 1, 5, 0, 13, 5, 0, 2, 0, 1, 1, 1]' : 0.723904}
{'[1, 5, 0, 6, 6, 4, 0, 1, 5, 0, 13, 5, 0, 2, 0, 1, 1, 1]' : 0.723804}
{'[1, 5, 0, 6, 6, 4, 0, 1, 5, 0, 13, 5, 0, 2, 0, 1, 1, 1]' : 0.722451}
{'[1, 5, 0, 6, 6, 4, 0, 1, 5, 0, 13, 5, 0, 2, 0, 1, 1, 1]' : 0.722375}
{'[1, 5, 0, 6, 6, 4, 0, 1, 5, 0, 13, 5, 0, 2, 0, 1, 1, 1]' : 0.722673}

out:
 ["{'[1, 5, 0, 6, 6, 4, 0, 1, 5, 0, 13, 5, 0, 2, 0, 1, 1, 1]' : 0.723831}", "{'[1, 5, 0, 6, 6, 4, 0, 1, 5, 0, 13, 5, 0, 2, 0, 1, 1, 1]' : 0.725136}", "{'[1, 5, 0, 6, 6, 4, 0, 1, 5, 0, 13, 5, 0, 2, 0, 1, 1, 1]' : 0.726214}", "{'[1, 5, 0, 6, 6, 4, 0, 1, 5, 0, 13, 5, 0, 2, 0, 1, 1, 1]' : 0.725545}", "{'[1, 5, 0, 6, 6, 4, 0, 1, 5, 0, 13, 5, 0, 2, 0, 1, 1, 1]' : 0.724807}", "{'[1, 5, 0, 6, 6, 4, 0, 1, 5, 0, 13, 5, 0, 2, 0, 1, 1, 1]' : 0.723258}", "{'[1, 5, 0, 6, 6, 4, 0, 1, 5, 0, 13, 5, 0, 2, 0, 1, 1, 1]' : 0.722824}", "{'[1, 5, 0, 6, 6, 4, 0, 1, 5, 0, 13, 5, 0, 2, 0, 1, 1, 1]' : 0.723096}", "{'[1, 5, 0, 6, 6, 4, 0, 1, 5, 0, 13, 5, 0, 2, 0, 1, 1, 1]' : 0.723001}", "{'[1, 5, 0, 6, 6, 4, 0, 1, 5, 0, 13, 5, 0, 2, 0, 1, 1, 1]' : 0.723509}", "{'[1, 5, 0, 6, 6, 4, 0, 1, 5, 0, 13, 5, 0, 2, 0, 1, 1, 1]' : 0.723317}", "{'[1, 5, 0, 6, 6, 4, 0, 1, 5, 0, 13, 5, 0, 2, 0, 1, 1, 1]' : 0.723428}", "{'[1, 5, 0, 6, 6, 4, 0, 1, 5, 0, 13, 5, 0, 2, 0, 1, 1, 1]' : 0.723785}", "{'[1, 5, 0, 6, 6, 4, 0, 1, 5, 0, 13, 5, 0, 2, 0, 1, 1, 1]' : 0.723316}", "{'[1, 5, 0, 6, 6, 4, 0, 1, 5, 0, 13, 5, 0, 2, 0, 1, 1, 1]' : 0.723363}", "{'[1, 5, 0, 6, 6, 4, 0, 1, 5, 0, 13, 5, 0, 2, 0, 1, 1, 1]' : 0.723396}", "{'[1, 5, 0, 6, 6, 4, 0, 1, 5, 0, 13, 5, 0, 2, 0, 1, 1, 1]' : 0.723448}", "{'[1, 5, 0, 6, 6, 4, 0, 1, 5, 0, 13, 5, 0, 2, 0, 1, 1, 1]' : 0.723251}", "{'[1, 5, 0, 6, 6, 4, 0, 1, 5, 0, 13, 5, 0, 2, 0, 1, 1, 1]' : 0.723721}", "{'[1, 5, 0, 6, 6, 4, 0, 1, 5, 0, 13, 5, 0, 2, 0, 1, 1, 1]' : 0.723313}", "{'[1, 5, 0, 6, 6, 4, 0, 1, 5, 0, 13, 5, 0, 2, 0, 1, 1, 1]' : 0.723587}", "{'[1, 5, 0, 6, 6, 4, 0, 1, 5, 0, 13, 5, 0, 2, 0, 1, 1, 1]' : 0.723704}", "{'[1, 5, 0, 6, 6, 4, 0, 1, 5, 0, 13, 5, 0, 2, 0, 1, 1, 1]' : 0.723361}", "{'[1, 5, 0, 6, 6, 4, 0, 1, 5, 0, 13, 5, 0, 2, 0, 1, 1, 1]' : 0.723393}", "{'[1, 5, 0, 6, 6, 4, 0, 1, 5, 0, 13, 5, 0, 2, 0, 1, 1, 1]' : 0.725903}", "{'[1, 5, 0, 6, 6, 4, 0, 1, 5, 0, 13, 5, 0, 2, 0, 1, 1, 1]' : 0.723904}", "{'[1, 5, 0, 6, 6, 4, 0, 1, 5, 0, 13, 5, 0, 2, 0, 1, 1, 1]' : 0.723804}", "{'[1, 5, 0, 6, 6, 4, 0, 1, 5, 0, 13, 5, 0, 2, 0, 1, 1, 1]' : 0.722451}", "{'[1, 5, 0, 6, 6, 4, 0, 1, 5, 0, 13, 5, 0, 2, 0, 1, 1, 1]' : 0.722375}", "{'[1, 5, 0, 6, 6, 4, 0, 1, 5, 0, 13, 5, 0, 2, 0, 1, 1, 1]' : 0.722673}"]
returning from 'run': {'[1, 5, 0, 6, 6, 4, 0, 1, 5, 0, 13, 5, 0, 2, 0, 1, 1, 1]': ([0.723831, 0.725136, 0.726214, 0.725545, 0.724807, 0.723258, 0.722824, 0.723096, 0.723001, 0.723509, 0.723317, 0.723428, 0.723785, 0.723316, 0.723363, 0.723396, 0.723448, 0.723251, 0.723721, 0.723313, 0.723587, 0.723704, 0.723361, 0.723393, 0.725903, 0.723904, 0.723804, 0.722451, 0.722375, 0.722673], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 5, 0, 6, 6, 4, 0, 1, 5, 0, 13, 5, 0, 2, 0, 1, 1, 1]': ([0.723831, 0.725136, 0.726214, 0.725545, 0.724807, 0.723258, 0.722824, 0.723096, 0.723001, 0.723509, 0.723317, 0.723428, 0.723785, 0.723316, 0.723363, 0.723396, 0.723448, 0.723251, 0.723721, 0.723313, 0.723587, 0.723704, 0.723361, 0.723393, 0.725903, 0.723904, 0.723804, 0.722451, 0.722375, 0.722673], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	94
        Max loop nest depth: 	4
        Additions: 		6387
        Multiplications: 	2548
        Divisions: 		0
        Logical: 		0
        Reads: 			13080
        Writes: 		2634
        Comparisons:		94
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest4.exe __orio_perftest4.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest4.exe  
Program Test Output: 
{'[0, 1, 1, 0, 5, 6, 1, 0, 23, 24, 0, 14, 0, 0, 2, 1, 0, 1]' : 0.617439}
{'[0, 1, 1, 0, 5, 6, 1, 0, 23, 24, 0, 14, 0, 0, 2, 1, 0, 1]' : 0.654566}
{'[0, 1, 1, 0, 5, 6, 1, 0, 23, 24, 0, 14, 0, 0, 2, 1, 0, 1]' : 0.644791}
{'[0, 1, 1, 0, 5, 6, 1, 0, 23, 24, 0, 14, 0, 0, 2, 1, 0, 1]' : 0.626476}
{'[0, 1, 1, 0, 5, 6, 1, 0, 23, 24, 0, 14, 0, 0, 2, 1, 0, 1]' : 0.620429}
{'[0, 1, 1, 0, 5, 6, 1, 0, 23, 24, 0, 14, 0, 0, 2, 1, 0, 1]' : 0.61747}
{'[0, 1, 1, 0, 5, 6, 1, 0, 23, 24, 0, 14, 0, 0, 2, 1, 0, 1]' : 0.617241}
{'[0, 1, 1, 0, 5, 6, 1, 0, 23, 24, 0, 14, 0, 0, 2, 1, 0, 1]' : 0.629518}
{'[0, 1, 1, 0, 5, 6, 1, 0, 23, 24, 0, 14, 0, 0, 2, 1, 0, 1]' : 0.624894}
{'[0, 1, 1, 0, 5, 6, 1, 0, 23, 24, 0, 14, 0, 0, 2, 1, 0, 1]' : 0.625297}
{'[0, 1, 1, 0, 5, 6, 1, 0, 23, 24, 0, 14, 0, 0, 2, 1, 0, 1]' : 0.624629}
{'[0, 1, 1, 0, 5, 6, 1, 0, 23, 24, 0, 14, 0, 0, 2, 1, 0, 1]' : 0.631575}
{'[0, 1, 1, 0, 5, 6, 1, 0, 23, 24, 0, 14, 0, 0, 2, 1, 0, 1]' : 0.630386}
{'[0, 1, 1, 0, 5, 6, 1, 0, 23, 24, 0, 14, 0, 0, 2, 1, 0, 1]' : 0.621433}
{'[0, 1, 1, 0, 5, 6, 1, 0, 23, 24, 0, 14, 0, 0, 2, 1, 0, 1]' : 0.62846}
{'[0, 1, 1, 0, 5, 6, 1, 0, 23, 24, 0, 14, 0, 0, 2, 1, 0, 1]' : 0.621638}
{'[0, 1, 1, 0, 5, 6, 1, 0, 23, 24, 0, 14, 0, 0, 2, 1, 0, 1]' : 0.625499}
{'[0, 1, 1, 0, 5, 6, 1, 0, 23, 24, 0, 14, 0, 0, 2, 1, 0, 1]' : 0.625133}
{'[0, 1, 1, 0, 5, 6, 1, 0, 23, 24, 0, 14, 0, 0, 2, 1, 0, 1]' : 0.629468}
{'[0, 1, 1, 0, 5, 6, 1, 0, 23, 24, 0, 14, 0, 0, 2, 1, 0, 1]' : 0.627156}
{'[0, 1, 1, 0, 5, 6, 1, 0, 23, 24, 0, 14, 0, 0, 2, 1, 0, 1]' : 0.63884}
{'[0, 1, 1, 0, 5, 6, 1, 0, 23, 24, 0, 14, 0, 0, 2, 1, 0, 1]' : 0.634669}
{'[0, 1, 1, 0, 5, 6, 1, 0, 23, 24, 0, 14, 0, 0, 2, 1, 0, 1]' : 0.619085}
{'[0, 1, 1, 0, 5, 6, 1, 0, 23, 24, 0, 14, 0, 0, 2, 1, 0, 1]' : 0.621513}
{'[0, 1, 1, 0, 5, 6, 1, 0, 23, 24, 0, 14, 0, 0, 2, 1, 0, 1]' : 0.626823}
{'[0, 1, 1, 0, 5, 6, 1, 0, 23, 24, 0, 14, 0, 0, 2, 1, 0, 1]' : 0.654649}
{'[0, 1, 1, 0, 5, 6, 1, 0, 23, 24, 0, 14, 0, 0, 2, 1, 0, 1]' : 0.635807}
{'[0, 1, 1, 0, 5, 6, 1, 0, 23, 24, 0, 14, 0, 0, 2, 1, 0, 1]' : 0.623907}
{'[0, 1, 1, 0, 5, 6, 1, 0, 23, 24, 0, 14, 0, 0, 2, 1, 0, 1]' : 0.621255}
{'[0, 1, 1, 0, 5, 6, 1, 0, 23, 24, 0, 14, 0, 0, 2, 1, 0, 1]' : 0.640368}

out:
 ["{'[0, 1, 1, 0, 5, 6, 1, 0, 23, 24, 0, 14, 0, 0, 2, 1, 0, 1]' : 0.617439}", "{'[0, 1, 1, 0, 5, 6, 1, 0, 23, 24, 0, 14, 0, 0, 2, 1, 0, 1]' : 0.654566}", "{'[0, 1, 1, 0, 5, 6, 1, 0, 23, 24, 0, 14, 0, 0, 2, 1, 0, 1]' : 0.644791}", "{'[0, 1, 1, 0, 5, 6, 1, 0, 23, 24, 0, 14, 0, 0, 2, 1, 0, 1]' : 0.626476}", "{'[0, 1, 1, 0, 5, 6, 1, 0, 23, 24, 0, 14, 0, 0, 2, 1, 0, 1]' : 0.620429}", "{'[0, 1, 1, 0, 5, 6, 1, 0, 23, 24, 0, 14, 0, 0, 2, 1, 0, 1]' : 0.61747}", "{'[0, 1, 1, 0, 5, 6, 1, 0, 23, 24, 0, 14, 0, 0, 2, 1, 0, 1]' : 0.617241}", "{'[0, 1, 1, 0, 5, 6, 1, 0, 23, 24, 0, 14, 0, 0, 2, 1, 0, 1]' : 0.629518}", "{'[0, 1, 1, 0, 5, 6, 1, 0, 23, 24, 0, 14, 0, 0, 2, 1, 0, 1]' : 0.624894}", "{'[0, 1, 1, 0, 5, 6, 1, 0, 23, 24, 0, 14, 0, 0, 2, 1, 0, 1]' : 0.625297}", "{'[0, 1, 1, 0, 5, 6, 1, 0, 23, 24, 0, 14, 0, 0, 2, 1, 0, 1]' : 0.624629}", "{'[0, 1, 1, 0, 5, 6, 1, 0, 23, 24, 0, 14, 0, 0, 2, 1, 0, 1]' : 0.631575}", "{'[0, 1, 1, 0, 5, 6, 1, 0, 23, 24, 0, 14, 0, 0, 2, 1, 0, 1]' : 0.630386}", "{'[0, 1, 1, 0, 5, 6, 1, 0, 23, 24, 0, 14, 0, 0, 2, 1, 0, 1]' : 0.621433}", "{'[0, 1, 1, 0, 5, 6, 1, 0, 23, 24, 0, 14, 0, 0, 2, 1, 0, 1]' : 0.62846}", "{'[0, 1, 1, 0, 5, 6, 1, 0, 23, 24, 0, 14, 0, 0, 2, 1, 0, 1]' : 0.621638}", "{'[0, 1, 1, 0, 5, 6, 1, 0, 23, 24, 0, 14, 0, 0, 2, 1, 0, 1]' : 0.625499}", "{'[0, 1, 1, 0, 5, 6, 1, 0, 23, 24, 0, 14, 0, 0, 2, 1, 0, 1]' : 0.625133}", "{'[0, 1, 1, 0, 5, 6, 1, 0, 23, 24, 0, 14, 0, 0, 2, 1, 0, 1]' : 0.629468}", "{'[0, 1, 1, 0, 5, 6, 1, 0, 23, 24, 0, 14, 0, 0, 2, 1, 0, 1]' : 0.627156}", "{'[0, 1, 1, 0, 5, 6, 1, 0, 23, 24, 0, 14, 0, 0, 2, 1, 0, 1]' : 0.63884}", "{'[0, 1, 1, 0, 5, 6, 1, 0, 23, 24, 0, 14, 0, 0, 2, 1, 0, 1]' : 0.634669}", "{'[0, 1, 1, 0, 5, 6, 1, 0, 23, 24, 0, 14, 0, 0, 2, 1, 0, 1]' : 0.619085}", "{'[0, 1, 1, 0, 5, 6, 1, 0, 23, 24, 0, 14, 0, 0, 2, 1, 0, 1]' : 0.621513}", "{'[0, 1, 1, 0, 5, 6, 1, 0, 23, 24, 0, 14, 0, 0, 2, 1, 0, 1]' : 0.626823}", "{'[0, 1, 1, 0, 5, 6, 1, 0, 23, 24, 0, 14, 0, 0, 2, 1, 0, 1]' : 0.654649}", "{'[0, 1, 1, 0, 5, 6, 1, 0, 23, 24, 0, 14, 0, 0, 2, 1, 0, 1]' : 0.635807}", "{'[0, 1, 1, 0, 5, 6, 1, 0, 23, 24, 0, 14, 0, 0, 2, 1, 0, 1]' : 0.623907}", "{'[0, 1, 1, 0, 5, 6, 1, 0, 23, 24, 0, 14, 0, 0, 2, 1, 0, 1]' : 0.621255}", "{'[0, 1, 1, 0, 5, 6, 1, 0, 23, 24, 0, 14, 0, 0, 2, 1, 0, 1]' : 0.640368}"]
returning from 'run': {'[0, 1, 1, 0, 5, 6, 1, 0, 23, 24, 0, 14, 0, 0, 2, 1, 0, 1]': ([0.617439, 0.654566, 0.644791, 0.626476, 0.620429, 0.61747, 0.617241, 0.629518, 0.624894, 0.625297, 0.624629, 0.631575, 0.630386, 0.621433, 0.62846, 0.621638, 0.625499, 0.625133, 0.629468, 0.627156, 0.63884, 0.634669, 0.619085, 0.621513, 0.626823, 0.654649, 0.635807, 0.623907, 0.621255, 0.640368], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 1, 0, 5, 6, 1, 0, 23, 24, 0, 14, 0, 0, 2, 1, 0, 1]': ([0.617439, 0.654566, 0.644791, 0.626476, 0.620429, 0.61747, 0.617241, 0.629518, 0.624894, 0.625297, 0.624629, 0.631575, 0.630386, 0.621433, 0.62846, 0.621638, 0.625499, 0.625133, 0.629468, 0.627156, 0.63884, 0.634669, 0.619085, 0.621513, 0.626823, 0.654649, 0.635807, 0.623907, 0.621255, 0.640368], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	33
        Max loop nest depth: 	5
        Additions: 		1193
        Multiplications: 	350
        Divisions: 		0
        Logical: 		0
        Reads: 			2113
        Writes: 		279
        Comparisons:		33
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest5.exe __orio_perftest5.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest5.exe  
Program Test Output: 
{'[3, 1, 5, 0, 6, 4, 0, 1, 7, 5, 22, 0, 0, 0, 0, 0, 0, 1]' : 0.32255}
{'[3, 1, 5, 0, 6, 4, 0, 1, 7, 5, 22, 0, 0, 0, 0, 0, 0, 1]' : 0.321685}
{'[3, 1, 5, 0, 6, 4, 0, 1, 7, 5, 22, 0, 0, 0, 0, 0, 0, 1]' : 0.324256}
{'[3, 1, 5, 0, 6, 4, 0, 1, 7, 5, 22, 0, 0, 0, 0, 0, 0, 1]' : 0.325484}
{'[3, 1, 5, 0, 6, 4, 0, 1, 7, 5, 22, 0, 0, 0, 0, 0, 0, 1]' : 0.318686}
{'[3, 1, 5, 0, 6, 4, 0, 1, 7, 5, 22, 0, 0, 0, 0, 0, 0, 1]' : 0.326175}
{'[3, 1, 5, 0, 6, 4, 0, 1, 7, 5, 22, 0, 0, 0, 0, 0, 0, 1]' : 0.323874}
{'[3, 1, 5, 0, 6, 4, 0, 1, 7, 5, 22, 0, 0, 0, 0, 0, 0, 1]' : 0.334589}
{'[3, 1, 5, 0, 6, 4, 0, 1, 7, 5, 22, 0, 0, 0, 0, 0, 0, 1]' : 0.319519}
{'[3, 1, 5, 0, 6, 4, 0, 1, 7, 5, 22, 0, 0, 0, 0, 0, 0, 1]' : 0.319813}
{'[3, 1, 5, 0, 6, 4, 0, 1, 7, 5, 22, 0, 0, 0, 0, 0, 0, 1]' : 0.32494}
{'[3, 1, 5, 0, 6, 4, 0, 1, 7, 5, 22, 0, 0, 0, 0, 0, 0, 1]' : 0.327218}
{'[3, 1, 5, 0, 6, 4, 0, 1, 7, 5, 22, 0, 0, 0, 0, 0, 0, 1]' : 0.319669}
{'[3, 1, 5, 0, 6, 4, 0, 1, 7, 5, 22, 0, 0, 0, 0, 0, 0, 1]' : 0.325316}
{'[3, 1, 5, 0, 6, 4, 0, 1, 7, 5, 22, 0, 0, 0, 0, 0, 0, 1]' : 0.321381}
{'[3, 1, 5, 0, 6, 4, 0, 1, 7, 5, 22, 0, 0, 0, 0, 0, 0, 1]' : 0.325741}
{'[3, 1, 5, 0, 6, 4, 0, 1, 7, 5, 22, 0, 0, 0, 0, 0, 0, 1]' : 0.328572}
{'[3, 1, 5, 0, 6, 4, 0, 1, 7, 5, 22, 0, 0, 0, 0, 0, 0, 1]' : 0.326788}
{'[3, 1, 5, 0, 6, 4, 0, 1, 7, 5, 22, 0, 0, 0, 0, 0, 0, 1]' : 0.322936}
{'[3, 1, 5, 0, 6, 4, 0, 1, 7, 5, 22, 0, 0, 0, 0, 0, 0, 1]' : 0.323068}
{'[3, 1, 5, 0, 6, 4, 0, 1, 7, 5, 22, 0, 0, 0, 0, 0, 0, 1]' : 0.323305}
{'[3, 1, 5, 0, 6, 4, 0, 1, 7, 5, 22, 0, 0, 0, 0, 0, 0, 1]' : 0.320191}
{'[3, 1, 5, 0, 6, 4, 0, 1, 7, 5, 22, 0, 0, 0, 0, 0, 0, 1]' : 0.323223}
{'[3, 1, 5, 0, 6, 4, 0, 1, 7, 5, 22, 0, 0, 0, 0, 0, 0, 1]' : 0.324854}
{'[3, 1, 5, 0, 6, 4, 0, 1, 7, 5, 22, 0, 0, 0, 0, 0, 0, 1]' : 0.323334}
{'[3, 1, 5, 0, 6, 4, 0, 1, 7, 5, 22, 0, 0, 0, 0, 0, 0, 1]' : 0.32628}
{'[3, 1, 5, 0, 6, 4, 0, 1, 7, 5, 22, 0, 0, 0, 0, 0, 0, 1]' : 0.322414}
{'[3, 1, 5, 0, 6, 4, 0, 1, 7, 5, 22, 0, 0, 0, 0, 0, 0, 1]' : 0.330782}
{'[3, 1, 5, 0, 6, 4, 0, 1, 7, 5, 22, 0, 0, 0, 0, 0, 0, 1]' : 0.329612}
{'[3, 1, 5, 0, 6, 4, 0, 1, 7, 5, 22, 0, 0, 0, 0, 0, 0, 1]' : 0.329581}

out:
 ["{'[3, 1, 5, 0, 6, 4, 0, 1, 7, 5, 22, 0, 0, 0, 0, 0, 0, 1]' : 0.32255}", "{'[3, 1, 5, 0, 6, 4, 0, 1, 7, 5, 22, 0, 0, 0, 0, 0, 0, 1]' : 0.321685}", "{'[3, 1, 5, 0, 6, 4, 0, 1, 7, 5, 22, 0, 0, 0, 0, 0, 0, 1]' : 0.324256}", "{'[3, 1, 5, 0, 6, 4, 0, 1, 7, 5, 22, 0, 0, 0, 0, 0, 0, 1]' : 0.325484}", "{'[3, 1, 5, 0, 6, 4, 0, 1, 7, 5, 22, 0, 0, 0, 0, 0, 0, 1]' : 0.318686}", "{'[3, 1, 5, 0, 6, 4, 0, 1, 7, 5, 22, 0, 0, 0, 0, 0, 0, 1]' : 0.326175}", "{'[3, 1, 5, 0, 6, 4, 0, 1, 7, 5, 22, 0, 0, 0, 0, 0, 0, 1]' : 0.323874}", "{'[3, 1, 5, 0, 6, 4, 0, 1, 7, 5, 22, 0, 0, 0, 0, 0, 0, 1]' : 0.334589}", "{'[3, 1, 5, 0, 6, 4, 0, 1, 7, 5, 22, 0, 0, 0, 0, 0, 0, 1]' : 0.319519}", "{'[3, 1, 5, 0, 6, 4, 0, 1, 7, 5, 22, 0, 0, 0, 0, 0, 0, 1]' : 0.319813}", "{'[3, 1, 5, 0, 6, 4, 0, 1, 7, 5, 22, 0, 0, 0, 0, 0, 0, 1]' : 0.32494}", "{'[3, 1, 5, 0, 6, 4, 0, 1, 7, 5, 22, 0, 0, 0, 0, 0, 0, 1]' : 0.327218}", "{'[3, 1, 5, 0, 6, 4, 0, 1, 7, 5, 22, 0, 0, 0, 0, 0, 0, 1]' : 0.319669}", "{'[3, 1, 5, 0, 6, 4, 0, 1, 7, 5, 22, 0, 0, 0, 0, 0, 0, 1]' : 0.325316}", "{'[3, 1, 5, 0, 6, 4, 0, 1, 7, 5, 22, 0, 0, 0, 0, 0, 0, 1]' : 0.321381}", "{'[3, 1, 5, 0, 6, 4, 0, 1, 7, 5, 22, 0, 0, 0, 0, 0, 0, 1]' : 0.325741}", "{'[3, 1, 5, 0, 6, 4, 0, 1, 7, 5, 22, 0, 0, 0, 0, 0, 0, 1]' : 0.328572}", "{'[3, 1, 5, 0, 6, 4, 0, 1, 7, 5, 22, 0, 0, 0, 0, 0, 0, 1]' : 0.326788}", "{'[3, 1, 5, 0, 6, 4, 0, 1, 7, 5, 22, 0, 0, 0, 0, 0, 0, 1]' : 0.322936}", "{'[3, 1, 5, 0, 6, 4, 0, 1, 7, 5, 22, 0, 0, 0, 0, 0, 0, 1]' : 0.323068}", "{'[3, 1, 5, 0, 6, 4, 0, 1, 7, 5, 22, 0, 0, 0, 0, 0, 0, 1]' : 0.323305}", "{'[3, 1, 5, 0, 6, 4, 0, 1, 7, 5, 22, 0, 0, 0, 0, 0, 0, 1]' : 0.320191}", "{'[3, 1, 5, 0, 6, 4, 0, 1, 7, 5, 22, 0, 0, 0, 0, 0, 0, 1]' : 0.323223}", "{'[3, 1, 5, 0, 6, 4, 0, 1, 7, 5, 22, 0, 0, 0, 0, 0, 0, 1]' : 0.324854}", "{'[3, 1, 5, 0, 6, 4, 0, 1, 7, 5, 22, 0, 0, 0, 0, 0, 0, 1]' : 0.323334}", "{'[3, 1, 5, 0, 6, 4, 0, 1, 7, 5, 22, 0, 0, 0, 0, 0, 0, 1]' : 0.32628}", "{'[3, 1, 5, 0, 6, 4, 0, 1, 7, 5, 22, 0, 0, 0, 0, 0, 0, 1]' : 0.322414}", "{'[3, 1, 5, 0, 6, 4, 0, 1, 7, 5, 22, 0, 0, 0, 0, 0, 0, 1]' : 0.330782}", "{'[3, 1, 5, 0, 6, 4, 0, 1, 7, 5, 22, 0, 0, 0, 0, 0, 0, 1]' : 0.329612}", "{'[3, 1, 5, 0, 6, 4, 0, 1, 7, 5, 22, 0, 0, 0, 0, 0, 0, 1]' : 0.329581}"]
returning from 'run': {'[3, 1, 5, 0, 6, 4, 0, 1, 7, 5, 22, 0, 0, 0, 0, 0, 0, 1]': ([0.32255, 0.321685, 0.324256, 0.325484, 0.318686, 0.326175, 0.323874, 0.334589, 0.319519, 0.319813, 0.32494, 0.327218, 0.319669, 0.325316, 0.321381, 0.325741, 0.328572, 0.326788, 0.322936, 0.323068, 0.323305, 0.320191, 0.323223, 0.324854, 0.323334, 0.32628, 0.322414, 0.330782, 0.329612, 0.329581], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 1, 5, 0, 6, 4, 0, 1, 7, 5, 22, 0, 0, 0, 0, 0, 0, 1]': ([0.32255, 0.321685, 0.324256, 0.325484, 0.318686, 0.326175, 0.323874, 0.334589, 0.319519, 0.319813, 0.32494, 0.327218, 0.319669, 0.325316, 0.321381, 0.325741, 0.328572, 0.326788, 0.322936, 0.323068, 0.323305, 0.320191, 0.323223, 0.324854, 0.323334, 0.32628, 0.322414, 0.330782, 0.329612, 0.329581], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	4
        Additions: 		1226
        Multiplications: 	558
        Divisions: 		0
        Logical: 		0
        Reads: 			2410
        Writes: 		412
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest6.exe __orio_perftest6.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest6.exe  
Program Test Output: 
{'[5, 3, 2, 0, 0, 0, 0, 1, 3, 0, 21, 29, 1, 0, 1, 1, 1, 1]' : 0.395084}
{'[5, 3, 2, 0, 0, 0, 0, 1, 3, 0, 21, 29, 1, 0, 1, 1, 1, 1]' : 0.351054}
{'[5, 3, 2, 0, 0, 0, 0, 1, 3, 0, 21, 29, 1, 0, 1, 1, 1, 1]' : 0.343446}
{'[5, 3, 2, 0, 0, 0, 0, 1, 3, 0, 21, 29, 1, 0, 1, 1, 1, 1]' : 0.349068}
{'[5, 3, 2, 0, 0, 0, 0, 1, 3, 0, 21, 29, 1, 0, 1, 1, 1, 1]' : 0.347451}
{'[5, 3, 2, 0, 0, 0, 0, 1, 3, 0, 21, 29, 1, 0, 1, 1, 1, 1]' : 0.341443}
{'[5, 3, 2, 0, 0, 0, 0, 1, 3, 0, 21, 29, 1, 0, 1, 1, 1, 1]' : 0.341317}
{'[5, 3, 2, 0, 0, 0, 0, 1, 3, 0, 21, 29, 1, 0, 1, 1, 1, 1]' : 0.346176}
{'[5, 3, 2, 0, 0, 0, 0, 1, 3, 0, 21, 29, 1, 0, 1, 1, 1, 1]' : 0.353447}
{'[5, 3, 2, 0, 0, 0, 0, 1, 3, 0, 21, 29, 1, 0, 1, 1, 1, 1]' : 0.345247}
{'[5, 3, 2, 0, 0, 0, 0, 1, 3, 0, 21, 29, 1, 0, 1, 1, 1, 1]' : 0.34617}
{'[5, 3, 2, 0, 0, 0, 0, 1, 3, 0, 21, 29, 1, 0, 1, 1, 1, 1]' : 0.345519}
{'[5, 3, 2, 0, 0, 0, 0, 1, 3, 0, 21, 29, 1, 0, 1, 1, 1, 1]' : 0.34782}
{'[5, 3, 2, 0, 0, 0, 0, 1, 3, 0, 21, 29, 1, 0, 1, 1, 1, 1]' : 0.343612}
{'[5, 3, 2, 0, 0, 0, 0, 1, 3, 0, 21, 29, 1, 0, 1, 1, 1, 1]' : 0.341582}
{'[5, 3, 2, 0, 0, 0, 0, 1, 3, 0, 21, 29, 1, 0, 1, 1, 1, 1]' : 0.348246}
{'[5, 3, 2, 0, 0, 0, 0, 1, 3, 0, 21, 29, 1, 0, 1, 1, 1, 1]' : 0.34443}
{'[5, 3, 2, 0, 0, 0, 0, 1, 3, 0, 21, 29, 1, 0, 1, 1, 1, 1]' : 0.348413}
{'[5, 3, 2, 0, 0, 0, 0, 1, 3, 0, 21, 29, 1, 0, 1, 1, 1, 1]' : 0.362983}
{'[5, 3, 2, 0, 0, 0, 0, 1, 3, 0, 21, 29, 1, 0, 1, 1, 1, 1]' : 0.351307}
{'[5, 3, 2, 0, 0, 0, 0, 1, 3, 0, 21, 29, 1, 0, 1, 1, 1, 1]' : 0.351811}
{'[5, 3, 2, 0, 0, 0, 0, 1, 3, 0, 21, 29, 1, 0, 1, 1, 1, 1]' : 0.349215}
{'[5, 3, 2, 0, 0, 0, 0, 1, 3, 0, 21, 29, 1, 0, 1, 1, 1, 1]' : 0.343048}
{'[5, 3, 2, 0, 0, 0, 0, 1, 3, 0, 21, 29, 1, 0, 1, 1, 1, 1]' : 0.347297}
{'[5, 3, 2, 0, 0, 0, 0, 1, 3, 0, 21, 29, 1, 0, 1, 1, 1, 1]' : 0.344985}
{'[5, 3, 2, 0, 0, 0, 0, 1, 3, 0, 21, 29, 1, 0, 1, 1, 1, 1]' : 0.355187}
{'[5, 3, 2, 0, 0, 0, 0, 1, 3, 0, 21, 29, 1, 0, 1, 1, 1, 1]' : 0.357566}
{'[5, 3, 2, 0, 0, 0, 0, 1, 3, 0, 21, 29, 1, 0, 1, 1, 1, 1]' : 0.344061}
{'[5, 3, 2, 0, 0, 0, 0, 1, 3, 0, 21, 29, 1, 0, 1, 1, 1, 1]' : 0.345065}
{'[5, 3, 2, 0, 0, 0, 0, 1, 3, 0, 21, 29, 1, 0, 1, 1, 1, 1]' : 0.345708}

out:
 ["{'[5, 3, 2, 0, 0, 0, 0, 1, 3, 0, 21, 29, 1, 0, 1, 1, 1, 1]' : 0.395084}", "{'[5, 3, 2, 0, 0, 0, 0, 1, 3, 0, 21, 29, 1, 0, 1, 1, 1, 1]' : 0.351054}", "{'[5, 3, 2, 0, 0, 0, 0, 1, 3, 0, 21, 29, 1, 0, 1, 1, 1, 1]' : 0.343446}", "{'[5, 3, 2, 0, 0, 0, 0, 1, 3, 0, 21, 29, 1, 0, 1, 1, 1, 1]' : 0.349068}", "{'[5, 3, 2, 0, 0, 0, 0, 1, 3, 0, 21, 29, 1, 0, 1, 1, 1, 1]' : 0.347451}", "{'[5, 3, 2, 0, 0, 0, 0, 1, 3, 0, 21, 29, 1, 0, 1, 1, 1, 1]' : 0.341443}", "{'[5, 3, 2, 0, 0, 0, 0, 1, 3, 0, 21, 29, 1, 0, 1, 1, 1, 1]' : 0.341317}", "{'[5, 3, 2, 0, 0, 0, 0, 1, 3, 0, 21, 29, 1, 0, 1, 1, 1, 1]' : 0.346176}", "{'[5, 3, 2, 0, 0, 0, 0, 1, 3, 0, 21, 29, 1, 0, 1, 1, 1, 1]' : 0.353447}", "{'[5, 3, 2, 0, 0, 0, 0, 1, 3, 0, 21, 29, 1, 0, 1, 1, 1, 1]' : 0.345247}", "{'[5, 3, 2, 0, 0, 0, 0, 1, 3, 0, 21, 29, 1, 0, 1, 1, 1, 1]' : 0.34617}", "{'[5, 3, 2, 0, 0, 0, 0, 1, 3, 0, 21, 29, 1, 0, 1, 1, 1, 1]' : 0.345519}", "{'[5, 3, 2, 0, 0, 0, 0, 1, 3, 0, 21, 29, 1, 0, 1, 1, 1, 1]' : 0.34782}", "{'[5, 3, 2, 0, 0, 0, 0, 1, 3, 0, 21, 29, 1, 0, 1, 1, 1, 1]' : 0.343612}", "{'[5, 3, 2, 0, 0, 0, 0, 1, 3, 0, 21, 29, 1, 0, 1, 1, 1, 1]' : 0.341582}", "{'[5, 3, 2, 0, 0, 0, 0, 1, 3, 0, 21, 29, 1, 0, 1, 1, 1, 1]' : 0.348246}", "{'[5, 3, 2, 0, 0, 0, 0, 1, 3, 0, 21, 29, 1, 0, 1, 1, 1, 1]' : 0.34443}", "{'[5, 3, 2, 0, 0, 0, 0, 1, 3, 0, 21, 29, 1, 0, 1, 1, 1, 1]' : 0.348413}", "{'[5, 3, 2, 0, 0, 0, 0, 1, 3, 0, 21, 29, 1, 0, 1, 1, 1, 1]' : 0.362983}", "{'[5, 3, 2, 0, 0, 0, 0, 1, 3, 0, 21, 29, 1, 0, 1, 1, 1, 1]' : 0.351307}", "{'[5, 3, 2, 0, 0, 0, 0, 1, 3, 0, 21, 29, 1, 0, 1, 1, 1, 1]' : 0.351811}", "{'[5, 3, 2, 0, 0, 0, 0, 1, 3, 0, 21, 29, 1, 0, 1, 1, 1, 1]' : 0.349215}", "{'[5, 3, 2, 0, 0, 0, 0, 1, 3, 0, 21, 29, 1, 0, 1, 1, 1, 1]' : 0.343048}", "{'[5, 3, 2, 0, 0, 0, 0, 1, 3, 0, 21, 29, 1, 0, 1, 1, 1, 1]' : 0.347297}", "{'[5, 3, 2, 0, 0, 0, 0, 1, 3, 0, 21, 29, 1, 0, 1, 1, 1, 1]' : 0.344985}", "{'[5, 3, 2, 0, 0, 0, 0, 1, 3, 0, 21, 29, 1, 0, 1, 1, 1, 1]' : 0.355187}", "{'[5, 3, 2, 0, 0, 0, 0, 1, 3, 0, 21, 29, 1, 0, 1, 1, 1, 1]' : 0.357566}", "{'[5, 3, 2, 0, 0, 0, 0, 1, 3, 0, 21, 29, 1, 0, 1, 1, 1, 1]' : 0.344061}", "{'[5, 3, 2, 0, 0, 0, 0, 1, 3, 0, 21, 29, 1, 0, 1, 1, 1, 1]' : 0.345065}", "{'[5, 3, 2, 0, 0, 0, 0, 1, 3, 0, 21, 29, 1, 0, 1, 1, 1, 1]' : 0.345708}"]
returning from 'run': {'[5, 3, 2, 0, 0, 0, 0, 1, 3, 0, 21, 29, 1, 0, 1, 1, 1, 1]': ([0.395084, 0.351054, 0.343446, 0.349068, 0.347451, 0.341443, 0.341317, 0.346176, 0.353447, 0.345247, 0.34617, 0.345519, 0.34782, 0.343612, 0.341582, 0.348246, 0.34443, 0.348413, 0.362983, 0.351307, 0.351811, 0.349215, 0.343048, 0.347297, 0.344985, 0.355187, 0.357566, 0.344061, 0.345065, 0.345708], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 3, 2, 0, 0, 0, 0, 1, 3, 0, 21, 29, 1, 0, 1, 1, 1, 1]': ([0.395084, 0.351054, 0.343446, 0.349068, 0.347451, 0.341443, 0.341317, 0.346176, 0.353447, 0.345247, 0.34617, 0.345519, 0.34782, 0.343612, 0.341582, 0.348246, 0.34443, 0.348413, 0.362983, 0.351307, 0.351811, 0.349215, 0.343048, 0.347297, 0.344985, 0.355187, 0.357566, 0.344061, 0.345065, 0.345708], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	4
        Additions: 		9861
        Multiplications: 	2958
        Divisions: 		0
        Logical: 		0
        Reads: 			15027
        Writes: 		1566
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest7.exe __orio_perftest7.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest7.exe  
Program Test Output: 
{'[5, 3, 1, 0, 0, 0, 0, 0, 8, 17, 26, 0, 2, 0, 0, 0, 1, 1]' : 0.60532}
{'[5, 3, 1, 0, 0, 0, 0, 0, 8, 17, 26, 0, 2, 0, 0, 0, 1, 1]' : 0.660415}
{'[5, 3, 1, 0, 0, 0, 0, 0, 8, 17, 26, 0, 2, 0, 0, 0, 1, 1]' : 0.666663}
{'[5, 3, 1, 0, 0, 0, 0, 0, 8, 17, 26, 0, 2, 0, 0, 0, 1, 1]' : 0.670286}
{'[5, 3, 1, 0, 0, 0, 0, 0, 8, 17, 26, 0, 2, 0, 0, 0, 1, 1]' : 0.604857}
{'[5, 3, 1, 0, 0, 0, 0, 0, 8, 17, 26, 0, 2, 0, 0, 0, 1, 1]' : 0.61932}
{'[5, 3, 1, 0, 0, 0, 0, 0, 8, 17, 26, 0, 2, 0, 0, 0, 1, 1]' : 0.641497}
{'[5, 3, 1, 0, 0, 0, 0, 0, 8, 17, 26, 0, 2, 0, 0, 0, 1, 1]' : 0.602792}
{'[5, 3, 1, 0, 0, 0, 0, 0, 8, 17, 26, 0, 2, 0, 0, 0, 1, 1]' : 0.600448}
{'[5, 3, 1, 0, 0, 0, 0, 0, 8, 17, 26, 0, 2, 0, 0, 0, 1, 1]' : 0.5999}
{'[5, 3, 1, 0, 0, 0, 0, 0, 8, 17, 26, 0, 2, 0, 0, 0, 1, 1]' : 0.599507}
{'[5, 3, 1, 0, 0, 0, 0, 0, 8, 17, 26, 0, 2, 0, 0, 0, 1, 1]' : 0.601713}
{'[5, 3, 1, 0, 0, 0, 0, 0, 8, 17, 26, 0, 2, 0, 0, 0, 1, 1]' : 0.59926}
{'[5, 3, 1, 0, 0, 0, 0, 0, 8, 17, 26, 0, 2, 0, 0, 0, 1, 1]' : 0.604737}
{'[5, 3, 1, 0, 0, 0, 0, 0, 8, 17, 26, 0, 2, 0, 0, 0, 1, 1]' : 0.59815}
{'[5, 3, 1, 0, 0, 0, 0, 0, 8, 17, 26, 0, 2, 0, 0, 0, 1, 1]' : 0.6035}
{'[5, 3, 1, 0, 0, 0, 0, 0, 8, 17, 26, 0, 2, 0, 0, 0, 1, 1]' : 0.600413}
{'[5, 3, 1, 0, 0, 0, 0, 0, 8, 17, 26, 0, 2, 0, 0, 0, 1, 1]' : 0.599153}
{'[5, 3, 1, 0, 0, 0, 0, 0, 8, 17, 26, 0, 2, 0, 0, 0, 1, 1]' : 0.600502}
{'[5, 3, 1, 0, 0, 0, 0, 0, 8, 17, 26, 0, 2, 0, 0, 0, 1, 1]' : 0.612106}
{'[5, 3, 1, 0, 0, 0, 0, 0, 8, 17, 26, 0, 2, 0, 0, 0, 1, 1]' : 0.604538}
{'[5, 3, 1, 0, 0, 0, 0, 0, 8, 17, 26, 0, 2, 0, 0, 0, 1, 1]' : 0.598247}
{'[5, 3, 1, 0, 0, 0, 0, 0, 8, 17, 26, 0, 2, 0, 0, 0, 1, 1]' : 0.604304}
{'[5, 3, 1, 0, 0, 0, 0, 0, 8, 17, 26, 0, 2, 0, 0, 0, 1, 1]' : 0.606005}
{'[5, 3, 1, 0, 0, 0, 0, 0, 8, 17, 26, 0, 2, 0, 0, 0, 1, 1]' : 0.623905}
{'[5, 3, 1, 0, 0, 0, 0, 0, 8, 17, 26, 0, 2, 0, 0, 0, 1, 1]' : 0.597148}
{'[5, 3, 1, 0, 0, 0, 0, 0, 8, 17, 26, 0, 2, 0, 0, 0, 1, 1]' : 0.596523}
{'[5, 3, 1, 0, 0, 0, 0, 0, 8, 17, 26, 0, 2, 0, 0, 0, 1, 1]' : 0.600688}
{'[5, 3, 1, 0, 0, 0, 0, 0, 8, 17, 26, 0, 2, 0, 0, 0, 1, 1]' : 0.601283}
{'[5, 3, 1, 0, 0, 0, 0, 0, 8, 17, 26, 0, 2, 0, 0, 0, 1, 1]' : 0.597175}

out:
 ["{'[5, 3, 1, 0, 0, 0, 0, 0, 8, 17, 26, 0, 2, 0, 0, 0, 1, 1]' : 0.60532}", "{'[5, 3, 1, 0, 0, 0, 0, 0, 8, 17, 26, 0, 2, 0, 0, 0, 1, 1]' : 0.660415}", "{'[5, 3, 1, 0, 0, 0, 0, 0, 8, 17, 26, 0, 2, 0, 0, 0, 1, 1]' : 0.666663}", "{'[5, 3, 1, 0, 0, 0, 0, 0, 8, 17, 26, 0, 2, 0, 0, 0, 1, 1]' : 0.670286}", "{'[5, 3, 1, 0, 0, 0, 0, 0, 8, 17, 26, 0, 2, 0, 0, 0, 1, 1]' : 0.604857}", "{'[5, 3, 1, 0, 0, 0, 0, 0, 8, 17, 26, 0, 2, 0, 0, 0, 1, 1]' : 0.61932}", "{'[5, 3, 1, 0, 0, 0, 0, 0, 8, 17, 26, 0, 2, 0, 0, 0, 1, 1]' : 0.641497}", "{'[5, 3, 1, 0, 0, 0, 0, 0, 8, 17, 26, 0, 2, 0, 0, 0, 1, 1]' : 0.602792}", "{'[5, 3, 1, 0, 0, 0, 0, 0, 8, 17, 26, 0, 2, 0, 0, 0, 1, 1]' : 0.600448}", "{'[5, 3, 1, 0, 0, 0, 0, 0, 8, 17, 26, 0, 2, 0, 0, 0, 1, 1]' : 0.5999}", "{'[5, 3, 1, 0, 0, 0, 0, 0, 8, 17, 26, 0, 2, 0, 0, 0, 1, 1]' : 0.599507}", "{'[5, 3, 1, 0, 0, 0, 0, 0, 8, 17, 26, 0, 2, 0, 0, 0, 1, 1]' : 0.601713}", "{'[5, 3, 1, 0, 0, 0, 0, 0, 8, 17, 26, 0, 2, 0, 0, 0, 1, 1]' : 0.59926}", "{'[5, 3, 1, 0, 0, 0, 0, 0, 8, 17, 26, 0, 2, 0, 0, 0, 1, 1]' : 0.604737}", "{'[5, 3, 1, 0, 0, 0, 0, 0, 8, 17, 26, 0, 2, 0, 0, 0, 1, 1]' : 0.59815}", "{'[5, 3, 1, 0, 0, 0, 0, 0, 8, 17, 26, 0, 2, 0, 0, 0, 1, 1]' : 0.6035}", "{'[5, 3, 1, 0, 0, 0, 0, 0, 8, 17, 26, 0, 2, 0, 0, 0, 1, 1]' : 0.600413}", "{'[5, 3, 1, 0, 0, 0, 0, 0, 8, 17, 26, 0, 2, 0, 0, 0, 1, 1]' : 0.599153}", "{'[5, 3, 1, 0, 0, 0, 0, 0, 8, 17, 26, 0, 2, 0, 0, 0, 1, 1]' : 0.600502}", "{'[5, 3, 1, 0, 0, 0, 0, 0, 8, 17, 26, 0, 2, 0, 0, 0, 1, 1]' : 0.612106}", "{'[5, 3, 1, 0, 0, 0, 0, 0, 8, 17, 26, 0, 2, 0, 0, 0, 1, 1]' : 0.604538}", "{'[5, 3, 1, 0, 0, 0, 0, 0, 8, 17, 26, 0, 2, 0, 0, 0, 1, 1]' : 0.598247}", "{'[5, 3, 1, 0, 0, 0, 0, 0, 8, 17, 26, 0, 2, 0, 0, 0, 1, 1]' : 0.604304}", "{'[5, 3, 1, 0, 0, 0, 0, 0, 8, 17, 26, 0, 2, 0, 0, 0, 1, 1]' : 0.606005}", "{'[5, 3, 1, 0, 0, 0, 0, 0, 8, 17, 26, 0, 2, 0, 0, 0, 1, 1]' : 0.623905}", "{'[5, 3, 1, 0, 0, 0, 0, 0, 8, 17, 26, 0, 2, 0, 0, 0, 1, 1]' : 0.597148}", "{'[5, 3, 1, 0, 0, 0, 0, 0, 8, 17, 26, 0, 2, 0, 0, 0, 1, 1]' : 0.596523}", "{'[5, 3, 1, 0, 0, 0, 0, 0, 8, 17, 26, 0, 2, 0, 0, 0, 1, 1]' : 0.600688}", "{'[5, 3, 1, 0, 0, 0, 0, 0, 8, 17, 26, 0, 2, 0, 0, 0, 1, 1]' : 0.601283}", "{'[5, 3, 1, 0, 0, 0, 0, 0, 8, 17, 26, 0, 2, 0, 0, 0, 1, 1]' : 0.597175}"]
returning from 'run': {'[5, 3, 1, 0, 0, 0, 0, 0, 8, 17, 26, 0, 2, 0, 0, 0, 1, 1]': ([0.60532, 0.660415, 0.666663, 0.670286, 0.604857, 0.61932, 0.641497, 0.602792, 0.600448, 0.5999, 0.599507, 0.601713, 0.59926, 0.604737, 0.59815, 0.6035, 0.600413, 0.599153, 0.600502, 0.612106, 0.604538, 0.598247, 0.604304, 0.606005, 0.623905, 0.597148, 0.596523, 0.600688, 0.601283, 0.597175], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 3, 1, 0, 0, 0, 0, 0, 8, 17, 26, 0, 2, 0, 0, 0, 1, 1]': ([0.60532, 0.660415, 0.666663, 0.670286, 0.604857, 0.61932, 0.641497, 0.602792, 0.600448, 0.5999, 0.599507, 0.601713, 0.59926, 0.604737, 0.59815, 0.6035, 0.600413, 0.599153, 0.600502, 0.612106, 0.604538, 0.598247, 0.604304, 0.606005, 0.623905, 0.597148, 0.596523, 0.600688, 0.601283, 0.597175], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	6
        Additions: 		250
        Multiplications: 	72
        Divisions: 		0
        Logical: 		0
        Reads: 			564
        Writes: 		123
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest8.exe __orio_perftest8.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest8.exe  
Program Test Output: 
{'[1, 0, 3, 5, 0, 3, 1, 1, 5, 0, 14, 18, 0, 0, 0, 1, 1, 1]' : 0.869031}
{'[1, 0, 3, 5, 0, 3, 1, 1, 5, 0, 14, 18, 0, 0, 0, 1, 1, 1]' : 0.867362}
{'[1, 0, 3, 5, 0, 3, 1, 1, 5, 0, 14, 18, 0, 0, 0, 1, 1, 1]' : 0.868542}
{'[1, 0, 3, 5, 0, 3, 1, 1, 5, 0, 14, 18, 0, 0, 0, 1, 1, 1]' : 0.894816}
{'[1, 0, 3, 5, 0, 3, 1, 1, 5, 0, 14, 18, 0, 0, 0, 1, 1, 1]' : 0.906773}
{'[1, 0, 3, 5, 0, 3, 1, 1, 5, 0, 14, 18, 0, 0, 0, 1, 1, 1]' : 0.891523}
{'[1, 0, 3, 5, 0, 3, 1, 1, 5, 0, 14, 18, 0, 0, 0, 1, 1, 1]' : 0.868891}
{'[1, 0, 3, 5, 0, 3, 1, 1, 5, 0, 14, 18, 0, 0, 0, 1, 1, 1]' : 0.86895}
{'[1, 0, 3, 5, 0, 3, 1, 1, 5, 0, 14, 18, 0, 0, 0, 1, 1, 1]' : 0.868891}
{'[1, 0, 3, 5, 0, 3, 1, 1, 5, 0, 14, 18, 0, 0, 0, 1, 1, 1]' : 0.868269}
{'[1, 0, 3, 5, 0, 3, 1, 1, 5, 0, 14, 18, 0, 0, 0, 1, 1, 1]' : 0.866144}
{'[1, 0, 3, 5, 0, 3, 1, 1, 5, 0, 14, 18, 0, 0, 0, 1, 1, 1]' : 0.86626}
{'[1, 0, 3, 5, 0, 3, 1, 1, 5, 0, 14, 18, 0, 0, 0, 1, 1, 1]' : 0.867202}
{'[1, 0, 3, 5, 0, 3, 1, 1, 5, 0, 14, 18, 0, 0, 0, 1, 1, 1]' : 0.872442}
{'[1, 0, 3, 5, 0, 3, 1, 1, 5, 0, 14, 18, 0, 0, 0, 1, 1, 1]' : 0.866916}
{'[1, 0, 3, 5, 0, 3, 1, 1, 5, 0, 14, 18, 0, 0, 0, 1, 1, 1]' : 0.869768}
{'[1, 0, 3, 5, 0, 3, 1, 1, 5, 0, 14, 18, 0, 0, 0, 1, 1, 1]' : 0.869711}
{'[1, 0, 3, 5, 0, 3, 1, 1, 5, 0, 14, 18, 0, 0, 0, 1, 1, 1]' : 0.867998}
{'[1, 0, 3, 5, 0, 3, 1, 1, 5, 0, 14, 18, 0, 0, 0, 1, 1, 1]' : 0.87156}
{'[1, 0, 3, 5, 0, 3, 1, 1, 5, 0, 14, 18, 0, 0, 0, 1, 1, 1]' : 0.868919}
{'[1, 0, 3, 5, 0, 3, 1, 1, 5, 0, 14, 18, 0, 0, 0, 1, 1, 1]' : 0.866848}
{'[1, 0, 3, 5, 0, 3, 1, 1, 5, 0, 14, 18, 0, 0, 0, 1, 1, 1]' : 0.863176}
{'[1, 0, 3, 5, 0, 3, 1, 1, 5, 0, 14, 18, 0, 0, 0, 1, 1, 1]' : 0.868312}
{'[1, 0, 3, 5, 0, 3, 1, 1, 5, 0, 14, 18, 0, 0, 0, 1, 1, 1]' : 0.869938}
{'[1, 0, 3, 5, 0, 3, 1, 1, 5, 0, 14, 18, 0, 0, 0, 1, 1, 1]' : 0.867188}
{'[1, 0, 3, 5, 0, 3, 1, 1, 5, 0, 14, 18, 0, 0, 0, 1, 1, 1]' : 0.867329}
{'[1, 0, 3, 5, 0, 3, 1, 1, 5, 0, 14, 18, 0, 0, 0, 1, 1, 1]' : 0.869592}
{'[1, 0, 3, 5, 0, 3, 1, 1, 5, 0, 14, 18, 0, 0, 0, 1, 1, 1]' : 0.868147}
{'[1, 0, 3, 5, 0, 3, 1, 1, 5, 0, 14, 18, 0, 0, 0, 1, 1, 1]' : 0.867279}
{'[1, 0, 3, 5, 0, 3, 1, 1, 5, 0, 14, 18, 0, 0, 0, 1, 1, 1]' : 0.869511}

out:
 ["{'[1, 0, 3, 5, 0, 3, 1, 1, 5, 0, 14, 18, 0, 0, 0, 1, 1, 1]' : 0.869031}", "{'[1, 0, 3, 5, 0, 3, 1, 1, 5, 0, 14, 18, 0, 0, 0, 1, 1, 1]' : 0.867362}", "{'[1, 0, 3, 5, 0, 3, 1, 1, 5, 0, 14, 18, 0, 0, 0, 1, 1, 1]' : 0.868542}", "{'[1, 0, 3, 5, 0, 3, 1, 1, 5, 0, 14, 18, 0, 0, 0, 1, 1, 1]' : 0.894816}", "{'[1, 0, 3, 5, 0, 3, 1, 1, 5, 0, 14, 18, 0, 0, 0, 1, 1, 1]' : 0.906773}", "{'[1, 0, 3, 5, 0, 3, 1, 1, 5, 0, 14, 18, 0, 0, 0, 1, 1, 1]' : 0.891523}", "{'[1, 0, 3, 5, 0, 3, 1, 1, 5, 0, 14, 18, 0, 0, 0, 1, 1, 1]' : 0.868891}", "{'[1, 0, 3, 5, 0, 3, 1, 1, 5, 0, 14, 18, 0, 0, 0, 1, 1, 1]' : 0.86895}", "{'[1, 0, 3, 5, 0, 3, 1, 1, 5, 0, 14, 18, 0, 0, 0, 1, 1, 1]' : 0.868891}", "{'[1, 0, 3, 5, 0, 3, 1, 1, 5, 0, 14, 18, 0, 0, 0, 1, 1, 1]' : 0.868269}", "{'[1, 0, 3, 5, 0, 3, 1, 1, 5, 0, 14, 18, 0, 0, 0, 1, 1, 1]' : 0.866144}", "{'[1, 0, 3, 5, 0, 3, 1, 1, 5, 0, 14, 18, 0, 0, 0, 1, 1, 1]' : 0.86626}", "{'[1, 0, 3, 5, 0, 3, 1, 1, 5, 0, 14, 18, 0, 0, 0, 1, 1, 1]' : 0.867202}", "{'[1, 0, 3, 5, 0, 3, 1, 1, 5, 0, 14, 18, 0, 0, 0, 1, 1, 1]' : 0.872442}", "{'[1, 0, 3, 5, 0, 3, 1, 1, 5, 0, 14, 18, 0, 0, 0, 1, 1, 1]' : 0.866916}", "{'[1, 0, 3, 5, 0, 3, 1, 1, 5, 0, 14, 18, 0, 0, 0, 1, 1, 1]' : 0.869768}", "{'[1, 0, 3, 5, 0, 3, 1, 1, 5, 0, 14, 18, 0, 0, 0, 1, 1, 1]' : 0.869711}", "{'[1, 0, 3, 5, 0, 3, 1, 1, 5, 0, 14, 18, 0, 0, 0, 1, 1, 1]' : 0.867998}", "{'[1, 0, 3, 5, 0, 3, 1, 1, 5, 0, 14, 18, 0, 0, 0, 1, 1, 1]' : 0.87156}", "{'[1, 0, 3, 5, 0, 3, 1, 1, 5, 0, 14, 18, 0, 0, 0, 1, 1, 1]' : 0.868919}", "{'[1, 0, 3, 5, 0, 3, 1, 1, 5, 0, 14, 18, 0, 0, 0, 1, 1, 1]' : 0.866848}", "{'[1, 0, 3, 5, 0, 3, 1, 1, 5, 0, 14, 18, 0, 0, 0, 1, 1, 1]' : 0.863176}", "{'[1, 0, 3, 5, 0, 3, 1, 1, 5, 0, 14, 18, 0, 0, 0, 1, 1, 1]' : 0.868312}", "{'[1, 0, 3, 5, 0, 3, 1, 1, 5, 0, 14, 18, 0, 0, 0, 1, 1, 1]' : 0.869938}", "{'[1, 0, 3, 5, 0, 3, 1, 1, 5, 0, 14, 18, 0, 0, 0, 1, 1, 1]' : 0.867188}", "{'[1, 0, 3, 5, 0, 3, 1, 1, 5, 0, 14, 18, 0, 0, 0, 1, 1, 1]' : 0.867329}", "{'[1, 0, 3, 5, 0, 3, 1, 1, 5, 0, 14, 18, 0, 0, 0, 1, 1, 1]' : 0.869592}", "{'[1, 0, 3, 5, 0, 3, 1, 1, 5, 0, 14, 18, 0, 0, 0, 1, 1, 1]' : 0.868147}", "{'[1, 0, 3, 5, 0, 3, 1, 1, 5, 0, 14, 18, 0, 0, 0, 1, 1, 1]' : 0.867279}", "{'[1, 0, 3, 5, 0, 3, 1, 1, 5, 0, 14, 18, 0, 0, 0, 1, 1, 1]' : 0.869511}"]
returning from 'run': {'[1, 0, 3, 5, 0, 3, 1, 1, 5, 0, 14, 18, 0, 0, 0, 1, 1, 1]': ([0.869031, 0.867362, 0.868542, 0.894816, 0.906773, 0.891523, 0.868891, 0.86895, 0.868891, 0.868269, 0.866144, 0.86626, 0.867202, 0.872442, 0.866916, 0.869768, 0.869711, 0.867998, 0.87156, 0.868919, 0.866848, 0.863176, 0.868312, 0.869938, 0.867188, 0.867329, 0.869592, 0.868147, 0.867279, 0.869511], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 3, 5, 0, 3, 1, 1, 5, 0, 14, 18, 0, 0, 0, 1, 1, 1]': ([0.869031, 0.867362, 0.868542, 0.894816, 0.906773, 0.891523, 0.868891, 0.86895, 0.868891, 0.868269, 0.866144, 0.86626, 0.867202, 0.872442, 0.866916, 0.869768, 0.869711, 0.867998, 0.87156, 0.868919, 0.866848, 0.863176, 0.868312, 0.869938, 0.867188, 0.867329, 0.869592, 0.868147, 0.867279, 0.869511], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	23
        Max loop nest depth: 	5
        Additions: 		1347
        Multiplications: 	324
        Divisions: 		0
        Logical: 		0
        Reads: 			2127
        Writes: 		248
        Comparisons:		23
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest9.exe __orio_perftest9.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest9.exe  
Program Test Output: 
{'[0, 0, 6, 1, 5, 6, 1, 1, 27, 0, 28, 8, 1, 1, 0, 0, 1, 0]' : 0.315629}
{'[0, 0, 6, 1, 5, 6, 1, 1, 27, 0, 28, 8, 1, 1, 0, 0, 1, 0]' : 0.316267}
{'[0, 0, 6, 1, 5, 6, 1, 1, 27, 0, 28, 8, 1, 1, 0, 0, 1, 0]' : 0.315362}
{'[0, 0, 6, 1, 5, 6, 1, 1, 27, 0, 28, 8, 1, 1, 0, 0, 1, 0]' : 0.315484}
{'[0, 0, 6, 1, 5, 6, 1, 1, 27, 0, 28, 8, 1, 1, 0, 0, 1, 0]' : 0.315884}
{'[0, 0, 6, 1, 5, 6, 1, 1, 27, 0, 28, 8, 1, 1, 0, 0, 1, 0]' : 0.315668}
{'[0, 0, 6, 1, 5, 6, 1, 1, 27, 0, 28, 8, 1, 1, 0, 0, 1, 0]' : 0.317182}
{'[0, 0, 6, 1, 5, 6, 1, 1, 27, 0, 28, 8, 1, 1, 0, 0, 1, 0]' : 0.315872}
{'[0, 0, 6, 1, 5, 6, 1, 1, 27, 0, 28, 8, 1, 1, 0, 0, 1, 0]' : 0.315947}
{'[0, 0, 6, 1, 5, 6, 1, 1, 27, 0, 28, 8, 1, 1, 0, 0, 1, 0]' : 0.315942}
{'[0, 0, 6, 1, 5, 6, 1, 1, 27, 0, 28, 8, 1, 1, 0, 0, 1, 0]' : 0.315119}
{'[0, 0, 6, 1, 5, 6, 1, 1, 27, 0, 28, 8, 1, 1, 0, 0, 1, 0]' : 0.314453}
{'[0, 0, 6, 1, 5, 6, 1, 1, 27, 0, 28, 8, 1, 1, 0, 0, 1, 0]' : 0.314612}
{'[0, 0, 6, 1, 5, 6, 1, 1, 27, 0, 28, 8, 1, 1, 0, 0, 1, 0]' : 0.314271}
{'[0, 0, 6, 1, 5, 6, 1, 1, 27, 0, 28, 8, 1, 1, 0, 0, 1, 0]' : 0.314763}
{'[0, 0, 6, 1, 5, 6, 1, 1, 27, 0, 28, 8, 1, 1, 0, 0, 1, 0]' : 0.314573}
{'[0, 0, 6, 1, 5, 6, 1, 1, 27, 0, 28, 8, 1, 1, 0, 0, 1, 0]' : 0.314423}
{'[0, 0, 6, 1, 5, 6, 1, 1, 27, 0, 28, 8, 1, 1, 0, 0, 1, 0]' : 0.314277}
{'[0, 0, 6, 1, 5, 6, 1, 1, 27, 0, 28, 8, 1, 1, 0, 0, 1, 0]' : 0.314164}
{'[0, 0, 6, 1, 5, 6, 1, 1, 27, 0, 28, 8, 1, 1, 0, 0, 1, 0]' : 0.314213}
{'[0, 0, 6, 1, 5, 6, 1, 1, 27, 0, 28, 8, 1, 1, 0, 0, 1, 0]' : 0.314715}
{'[0, 0, 6, 1, 5, 6, 1, 1, 27, 0, 28, 8, 1, 1, 0, 0, 1, 0]' : 0.314297}
{'[0, 0, 6, 1, 5, 6, 1, 1, 27, 0, 28, 8, 1, 1, 0, 0, 1, 0]' : 0.31467}
{'[0, 0, 6, 1, 5, 6, 1, 1, 27, 0, 28, 8, 1, 1, 0, 0, 1, 0]' : 0.314278}
{'[0, 0, 6, 1, 5, 6, 1, 1, 27, 0, 28, 8, 1, 1, 0, 0, 1, 0]' : 0.314643}
{'[0, 0, 6, 1, 5, 6, 1, 1, 27, 0, 28, 8, 1, 1, 0, 0, 1, 0]' : 0.314383}
{'[0, 0, 6, 1, 5, 6, 1, 1, 27, 0, 28, 8, 1, 1, 0, 0, 1, 0]' : 0.314711}
{'[0, 0, 6, 1, 5, 6, 1, 1, 27, 0, 28, 8, 1, 1, 0, 0, 1, 0]' : 0.314472}
{'[0, 0, 6, 1, 5, 6, 1, 1, 27, 0, 28, 8, 1, 1, 0, 0, 1, 0]' : 0.314828}
{'[0, 0, 6, 1, 5, 6, 1, 1, 27, 0, 28, 8, 1, 1, 0, 0, 1, 0]' : 0.314238}

out:
 ["{'[0, 0, 6, 1, 5, 6, 1, 1, 27, 0, 28, 8, 1, 1, 0, 0, 1, 0]' : 0.315629}", "{'[0, 0, 6, 1, 5, 6, 1, 1, 27, 0, 28, 8, 1, 1, 0, 0, 1, 0]' : 0.316267}", "{'[0, 0, 6, 1, 5, 6, 1, 1, 27, 0, 28, 8, 1, 1, 0, 0, 1, 0]' : 0.315362}", "{'[0, 0, 6, 1, 5, 6, 1, 1, 27, 0, 28, 8, 1, 1, 0, 0, 1, 0]' : 0.315484}", "{'[0, 0, 6, 1, 5, 6, 1, 1, 27, 0, 28, 8, 1, 1, 0, 0, 1, 0]' : 0.315884}", "{'[0, 0, 6, 1, 5, 6, 1, 1, 27, 0, 28, 8, 1, 1, 0, 0, 1, 0]' : 0.315668}", "{'[0, 0, 6, 1, 5, 6, 1, 1, 27, 0, 28, 8, 1, 1, 0, 0, 1, 0]' : 0.317182}", "{'[0, 0, 6, 1, 5, 6, 1, 1, 27, 0, 28, 8, 1, 1, 0, 0, 1, 0]' : 0.315872}", "{'[0, 0, 6, 1, 5, 6, 1, 1, 27, 0, 28, 8, 1, 1, 0, 0, 1, 0]' : 0.315947}", "{'[0, 0, 6, 1, 5, 6, 1, 1, 27, 0, 28, 8, 1, 1, 0, 0, 1, 0]' : 0.315942}", "{'[0, 0, 6, 1, 5, 6, 1, 1, 27, 0, 28, 8, 1, 1, 0, 0, 1, 0]' : 0.315119}", "{'[0, 0, 6, 1, 5, 6, 1, 1, 27, 0, 28, 8, 1, 1, 0, 0, 1, 0]' : 0.314453}", "{'[0, 0, 6, 1, 5, 6, 1, 1, 27, 0, 28, 8, 1, 1, 0, 0, 1, 0]' : 0.314612}", "{'[0, 0, 6, 1, 5, 6, 1, 1, 27, 0, 28, 8, 1, 1, 0, 0, 1, 0]' : 0.314271}", "{'[0, 0, 6, 1, 5, 6, 1, 1, 27, 0, 28, 8, 1, 1, 0, 0, 1, 0]' : 0.314763}", "{'[0, 0, 6, 1, 5, 6, 1, 1, 27, 0, 28, 8, 1, 1, 0, 0, 1, 0]' : 0.314573}", "{'[0, 0, 6, 1, 5, 6, 1, 1, 27, 0, 28, 8, 1, 1, 0, 0, 1, 0]' : 0.314423}", "{'[0, 0, 6, 1, 5, 6, 1, 1, 27, 0, 28, 8, 1, 1, 0, 0, 1, 0]' : 0.314277}", "{'[0, 0, 6, 1, 5, 6, 1, 1, 27, 0, 28, 8, 1, 1, 0, 0, 1, 0]' : 0.314164}", "{'[0, 0, 6, 1, 5, 6, 1, 1, 27, 0, 28, 8, 1, 1, 0, 0, 1, 0]' : 0.314213}", "{'[0, 0, 6, 1, 5, 6, 1, 1, 27, 0, 28, 8, 1, 1, 0, 0, 1, 0]' : 0.314715}", "{'[0, 0, 6, 1, 5, 6, 1, 1, 27, 0, 28, 8, 1, 1, 0, 0, 1, 0]' : 0.314297}", "{'[0, 0, 6, 1, 5, 6, 1, 1, 27, 0, 28, 8, 1, 1, 0, 0, 1, 0]' : 0.31467}", "{'[0, 0, 6, 1, 5, 6, 1, 1, 27, 0, 28, 8, 1, 1, 0, 0, 1, 0]' : 0.314278}", "{'[0, 0, 6, 1, 5, 6, 1, 1, 27, 0, 28, 8, 1, 1, 0, 0, 1, 0]' : 0.314643}", "{'[0, 0, 6, 1, 5, 6, 1, 1, 27, 0, 28, 8, 1, 1, 0, 0, 1, 0]' : 0.314383}", "{'[0, 0, 6, 1, 5, 6, 1, 1, 27, 0, 28, 8, 1, 1, 0, 0, 1, 0]' : 0.314711}", "{'[0, 0, 6, 1, 5, 6, 1, 1, 27, 0, 28, 8, 1, 1, 0, 0, 1, 0]' : 0.314472}", "{'[0, 0, 6, 1, 5, 6, 1, 1, 27, 0, 28, 8, 1, 1, 0, 0, 1, 0]' : 0.314828}", "{'[0, 0, 6, 1, 5, 6, 1, 1, 27, 0, 28, 8, 1, 1, 0, 0, 1, 0]' : 0.314238}"]
returning from 'run': {'[0, 0, 6, 1, 5, 6, 1, 1, 27, 0, 28, 8, 1, 1, 0, 0, 1, 0]': ([0.315629, 0.316267, 0.315362, 0.315484, 0.315884, 0.315668, 0.317182, 0.315872, 0.315947, 0.315942, 0.315119, 0.314453, 0.314612, 0.314271, 0.314763, 0.314573, 0.314423, 0.314277, 0.314164, 0.314213, 0.314715, 0.314297, 0.31467, 0.314278, 0.314643, 0.314383, 0.314711, 0.314472, 0.314828, 0.314238], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 6, 1, 5, 6, 1, 1, 27, 0, 28, 8, 1, 1, 0, 0, 1, 0]': ([0.315629, 0.316267, 0.315362, 0.315484, 0.315884, 0.315668, 0.317182, 0.315872, 0.315947, 0.315942, 0.315119, 0.314453, 0.314612, 0.314271, 0.314763, 0.314573, 0.314423, 0.314277, 0.314164, 0.314213, 0.314715, 0.314297, 0.31467, 0.314278, 0.314643, 0.314383, 0.314711, 0.314472, 0.314828, 0.314238], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	55
        Max loop nest depth: 	6
        Additions: 		2136
        Multiplications: 	858
        Divisions: 		0
        Logical: 		0
        Reads: 			4242
        Writes: 		775
        Comparisons:		55
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest10.exe __orio_perftest10.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest10.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest10.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest10.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest10.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	108
        Max loop nest depth: 	6
        Additions: 		4138
        Multiplications: 	1680
        Divisions: 		0
        Logical: 		0
        Reads: 			7854
        Writes: 		1361
        Comparisons:		108
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest11.exe __orio_perftest11.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest11.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest11.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest11.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest11.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = iii
Code stats:
        Number of loops: 	181
        Max loop nest depth: 	5
        Additions: 		8249
        Multiplications: 	2808
        Divisions: 		0
        Logical: 		0
        Reads: 			14201
        Writes: 		2150
        Comparisons:		181
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest12.exe __orio_perftest12.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest12.exe  
Program Test Output: 
{'[5, 5, 6, 3, 6, 5, 1, 1, 1, 29, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.459161}
{'[5, 5, 6, 3, 6, 5, 1, 1, 1, 29, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.460996}
{'[5, 5, 6, 3, 6, 5, 1, 1, 1, 29, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.459788}
{'[5, 5, 6, 3, 6, 5, 1, 1, 1, 29, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.461817}
{'[5, 5, 6, 3, 6, 5, 1, 1, 1, 29, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.465722}
{'[5, 5, 6, 3, 6, 5, 1, 1, 1, 29, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.461312}
{'[5, 5, 6, 3, 6, 5, 1, 1, 1, 29, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.458701}
{'[5, 5, 6, 3, 6, 5, 1, 1, 1, 29, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.45725}
{'[5, 5, 6, 3, 6, 5, 1, 1, 1, 29, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.459775}
{'[5, 5, 6, 3, 6, 5, 1, 1, 1, 29, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.460229}
{'[5, 5, 6, 3, 6, 5, 1, 1, 1, 29, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.459718}
{'[5, 5, 6, 3, 6, 5, 1, 1, 1, 29, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.45978}
{'[5, 5, 6, 3, 6, 5, 1, 1, 1, 29, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.462108}
{'[5, 5, 6, 3, 6, 5, 1, 1, 1, 29, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.459055}
{'[5, 5, 6, 3, 6, 5, 1, 1, 1, 29, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.461394}
{'[5, 5, 6, 3, 6, 5, 1, 1, 1, 29, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.464581}
{'[5, 5, 6, 3, 6, 5, 1, 1, 1, 29, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.465605}
{'[5, 5, 6, 3, 6, 5, 1, 1, 1, 29, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.464432}
{'[5, 5, 6, 3, 6, 5, 1, 1, 1, 29, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.46144}
{'[5, 5, 6, 3, 6, 5, 1, 1, 1, 29, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.460329}
{'[5, 5, 6, 3, 6, 5, 1, 1, 1, 29, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.458151}
{'[5, 5, 6, 3, 6, 5, 1, 1, 1, 29, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.458401}
{'[5, 5, 6, 3, 6, 5, 1, 1, 1, 29, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.460505}
{'[5, 5, 6, 3, 6, 5, 1, 1, 1, 29, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.459306}
{'[5, 5, 6, 3, 6, 5, 1, 1, 1, 29, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.458968}
{'[5, 5, 6, 3, 6, 5, 1, 1, 1, 29, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.459043}
{'[5, 5, 6, 3, 6, 5, 1, 1, 1, 29, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.460122}
{'[5, 5, 6, 3, 6, 5, 1, 1, 1, 29, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.461068}
{'[5, 5, 6, 3, 6, 5, 1, 1, 1, 29, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.463734}
{'[5, 5, 6, 3, 6, 5, 1, 1, 1, 29, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.464279}

out:
 ["{'[5, 5, 6, 3, 6, 5, 1, 1, 1, 29, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.459161}", "{'[5, 5, 6, 3, 6, 5, 1, 1, 1, 29, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.460996}", "{'[5, 5, 6, 3, 6, 5, 1, 1, 1, 29, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.459788}", "{'[5, 5, 6, 3, 6, 5, 1, 1, 1, 29, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.461817}", "{'[5, 5, 6, 3, 6, 5, 1, 1, 1, 29, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.465722}", "{'[5, 5, 6, 3, 6, 5, 1, 1, 1, 29, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.461312}", "{'[5, 5, 6, 3, 6, 5, 1, 1, 1, 29, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.458701}", "{'[5, 5, 6, 3, 6, 5, 1, 1, 1, 29, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.45725}", "{'[5, 5, 6, 3, 6, 5, 1, 1, 1, 29, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.459775}", "{'[5, 5, 6, 3, 6, 5, 1, 1, 1, 29, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.460229}", "{'[5, 5, 6, 3, 6, 5, 1, 1, 1, 29, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.459718}", "{'[5, 5, 6, 3, 6, 5, 1, 1, 1, 29, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.45978}", "{'[5, 5, 6, 3, 6, 5, 1, 1, 1, 29, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.462108}", "{'[5, 5, 6, 3, 6, 5, 1, 1, 1, 29, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.459055}", "{'[5, 5, 6, 3, 6, 5, 1, 1, 1, 29, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.461394}", "{'[5, 5, 6, 3, 6, 5, 1, 1, 1, 29, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.464581}", "{'[5, 5, 6, 3, 6, 5, 1, 1, 1, 29, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.465605}", "{'[5, 5, 6, 3, 6, 5, 1, 1, 1, 29, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.464432}", "{'[5, 5, 6, 3, 6, 5, 1, 1, 1, 29, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.46144}", "{'[5, 5, 6, 3, 6, 5, 1, 1, 1, 29, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.460329}", "{'[5, 5, 6, 3, 6, 5, 1, 1, 1, 29, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.458151}", "{'[5, 5, 6, 3, 6, 5, 1, 1, 1, 29, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.458401}", "{'[5, 5, 6, 3, 6, 5, 1, 1, 1, 29, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.460505}", "{'[5, 5, 6, 3, 6, 5, 1, 1, 1, 29, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.459306}", "{'[5, 5, 6, 3, 6, 5, 1, 1, 1, 29, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.458968}", "{'[5, 5, 6, 3, 6, 5, 1, 1, 1, 29, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.459043}", "{'[5, 5, 6, 3, 6, 5, 1, 1, 1, 29, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.460122}", "{'[5, 5, 6, 3, 6, 5, 1, 1, 1, 29, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.461068}", "{'[5, 5, 6, 3, 6, 5, 1, 1, 1, 29, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.463734}", "{'[5, 5, 6, 3, 6, 5, 1, 1, 1, 29, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.464279}"]
returning from 'run': {'[5, 5, 6, 3, 6, 5, 1, 1, 1, 29, 26, 0, 1, 0, 1, 1, 0, 1]': ([0.459161, 0.460996, 0.459788, 0.461817, 0.465722, 0.461312, 0.458701, 0.45725, 0.459775, 0.460229, 0.459718, 0.45978, 0.462108, 0.459055, 0.461394, 0.464581, 0.465605, 0.464432, 0.46144, 0.460329, 0.458151, 0.458401, 0.460505, 0.459306, 0.458968, 0.459043, 0.460122, 0.461068, 0.463734, 0.464279], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 5, 6, 3, 6, 5, 1, 1, 1, 29, 26, 0, 1, 0, 1, 1, 0, 1]': ([0.459161, 0.460996, 0.459788, 0.461817, 0.465722, 0.461312, 0.458701, 0.45725, 0.459775, 0.460229, 0.459718, 0.45978, 0.462108, 0.459055, 0.461394, 0.464581, 0.465605, 0.464432, 0.46144, 0.460329, 0.458151, 0.458401, 0.460505, 0.459306, 0.458968, 0.459043, 0.460122, 0.461068, 0.463734, 0.464279], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = iii
Code stats:
        Number of loops: 	166
        Max loop nest depth: 	5
        Additions: 		8564
        Multiplications: 	2040
        Divisions: 		0
        Logical: 		0
        Reads: 			13239
        Writes: 		1568
        Comparisons:		166
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest13.exe __orio_perftest13.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest13.exe  
Program Test Output: 
{'[4, 3, 6, 2, 3, 5, 1, 1, 8, 26, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.406911}
{'[4, 3, 6, 2, 3, 5, 1, 1, 8, 26, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.406774}
{'[4, 3, 6, 2, 3, 5, 1, 1, 8, 26, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.40796}
{'[4, 3, 6, 2, 3, 5, 1, 1, 8, 26, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.409076}
{'[4, 3, 6, 2, 3, 5, 1, 1, 8, 26, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.408741}
{'[4, 3, 6, 2, 3, 5, 1, 1, 8, 26, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.410714}
{'[4, 3, 6, 2, 3, 5, 1, 1, 8, 26, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.410893}
{'[4, 3, 6, 2, 3, 5, 1, 1, 8, 26, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.416587}
{'[4, 3, 6, 2, 3, 5, 1, 1, 8, 26, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.419291}
{'[4, 3, 6, 2, 3, 5, 1, 1, 8, 26, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.409834}
{'[4, 3, 6, 2, 3, 5, 1, 1, 8, 26, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.4093}
{'[4, 3, 6, 2, 3, 5, 1, 1, 8, 26, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.409798}
{'[4, 3, 6, 2, 3, 5, 1, 1, 8, 26, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.409446}
{'[4, 3, 6, 2, 3, 5, 1, 1, 8, 26, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.412355}
{'[4, 3, 6, 2, 3, 5, 1, 1, 8, 26, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.409789}
{'[4, 3, 6, 2, 3, 5, 1, 1, 8, 26, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.408549}
{'[4, 3, 6, 2, 3, 5, 1, 1, 8, 26, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.412886}
{'[4, 3, 6, 2, 3, 5, 1, 1, 8, 26, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.410151}
{'[4, 3, 6, 2, 3, 5, 1, 1, 8, 26, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.412393}
{'[4, 3, 6, 2, 3, 5, 1, 1, 8, 26, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.41592}
{'[4, 3, 6, 2, 3, 5, 1, 1, 8, 26, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.41277}
{'[4, 3, 6, 2, 3, 5, 1, 1, 8, 26, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.411293}
{'[4, 3, 6, 2, 3, 5, 1, 1, 8, 26, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.41054}
{'[4, 3, 6, 2, 3, 5, 1, 1, 8, 26, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.41524}
{'[4, 3, 6, 2, 3, 5, 1, 1, 8, 26, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.410082}
{'[4, 3, 6, 2, 3, 5, 1, 1, 8, 26, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.413516}
{'[4, 3, 6, 2, 3, 5, 1, 1, 8, 26, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.408493}
{'[4, 3, 6, 2, 3, 5, 1, 1, 8, 26, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.409242}
{'[4, 3, 6, 2, 3, 5, 1, 1, 8, 26, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.415049}
{'[4, 3, 6, 2, 3, 5, 1, 1, 8, 26, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.410249}

out:
 ["{'[4, 3, 6, 2, 3, 5, 1, 1, 8, 26, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.406911}", "{'[4, 3, 6, 2, 3, 5, 1, 1, 8, 26, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.406774}", "{'[4, 3, 6, 2, 3, 5, 1, 1, 8, 26, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.40796}", "{'[4, 3, 6, 2, 3, 5, 1, 1, 8, 26, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.409076}", "{'[4, 3, 6, 2, 3, 5, 1, 1, 8, 26, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.408741}", "{'[4, 3, 6, 2, 3, 5, 1, 1, 8, 26, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.410714}", "{'[4, 3, 6, 2, 3, 5, 1, 1, 8, 26, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.410893}", "{'[4, 3, 6, 2, 3, 5, 1, 1, 8, 26, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.416587}", "{'[4, 3, 6, 2, 3, 5, 1, 1, 8, 26, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.419291}", "{'[4, 3, 6, 2, 3, 5, 1, 1, 8, 26, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.409834}", "{'[4, 3, 6, 2, 3, 5, 1, 1, 8, 26, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.4093}", "{'[4, 3, 6, 2, 3, 5, 1, 1, 8, 26, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.409798}", "{'[4, 3, 6, 2, 3, 5, 1, 1, 8, 26, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.409446}", "{'[4, 3, 6, 2, 3, 5, 1, 1, 8, 26, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.412355}", "{'[4, 3, 6, 2, 3, 5, 1, 1, 8, 26, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.409789}", "{'[4, 3, 6, 2, 3, 5, 1, 1, 8, 26, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.408549}", "{'[4, 3, 6, 2, 3, 5, 1, 1, 8, 26, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.412886}", "{'[4, 3, 6, 2, 3, 5, 1, 1, 8, 26, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.410151}", "{'[4, 3, 6, 2, 3, 5, 1, 1, 8, 26, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.412393}", "{'[4, 3, 6, 2, 3, 5, 1, 1, 8, 26, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.41592}", "{'[4, 3, 6, 2, 3, 5, 1, 1, 8, 26, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.41277}", "{'[4, 3, 6, 2, 3, 5, 1, 1, 8, 26, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.411293}", "{'[4, 3, 6, 2, 3, 5, 1, 1, 8, 26, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.41054}", "{'[4, 3, 6, 2, 3, 5, 1, 1, 8, 26, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.41524}", "{'[4, 3, 6, 2, 3, 5, 1, 1, 8, 26, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.410082}", "{'[4, 3, 6, 2, 3, 5, 1, 1, 8, 26, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.413516}", "{'[4, 3, 6, 2, 3, 5, 1, 1, 8, 26, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.408493}", "{'[4, 3, 6, 2, 3, 5, 1, 1, 8, 26, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.409242}", "{'[4, 3, 6, 2, 3, 5, 1, 1, 8, 26, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.415049}", "{'[4, 3, 6, 2, 3, 5, 1, 1, 8, 26, 14, 0, 2, 0, 0, 0, 0, 1]' : 0.410249}"]
returning from 'run': {'[4, 3, 6, 2, 3, 5, 1, 1, 8, 26, 14, 0, 2, 0, 0, 0, 0, 1]': ([0.406911, 0.406774, 0.40796, 0.409076, 0.408741, 0.410714, 0.410893, 0.416587, 0.419291, 0.409834, 0.4093, 0.409798, 0.409446, 0.412355, 0.409789, 0.408549, 0.412886, 0.410151, 0.412393, 0.41592, 0.41277, 0.411293, 0.41054, 0.41524, 0.410082, 0.413516, 0.408493, 0.409242, 0.415049, 0.410249], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 3, 6, 2, 3, 5, 1, 1, 8, 26, 14, 0, 2, 0, 0, 0, 0, 1]': ([0.406911, 0.406774, 0.40796, 0.409076, 0.408741, 0.410714, 0.410893, 0.416587, 0.419291, 0.409834, 0.4093, 0.409798, 0.409446, 0.412355, 0.409789, 0.408549, 0.412886, 0.410151, 0.412393, 0.41592, 0.41277, 0.411293, 0.41054, 0.41524, 0.410082, 0.413516, 0.408493, 0.409242, 0.415049, 0.410249], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	103
        Max loop nest depth: 	6
        Additions: 		2589
        Multiplications: 	594
        Divisions: 		0
        Logical: 		0
        Reads: 			4465
        Writes: 		614
        Comparisons:		103
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest14.exe __orio_perftest14.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest14.exe  
Program Test Output: 
{'[2, 3, 2, 6, 4, 6, 1, 1, 5, 23, 26, 0, 1, 1, 0, 0, 0, 0]' : 0.258705}
{'[2, 3, 2, 6, 4, 6, 1, 1, 5, 23, 26, 0, 1, 1, 0, 0, 0, 0]' : 0.258954}
{'[2, 3, 2, 6, 4, 6, 1, 1, 5, 23, 26, 0, 1, 1, 0, 0, 0, 0]' : 0.258636}
{'[2, 3, 2, 6, 4, 6, 1, 1, 5, 23, 26, 0, 1, 1, 0, 0, 0, 0]' : 0.260782}
{'[2, 3, 2, 6, 4, 6, 1, 1, 5, 23, 26, 0, 1, 1, 0, 0, 0, 0]' : 0.260628}
{'[2, 3, 2, 6, 4, 6, 1, 1, 5, 23, 26, 0, 1, 1, 0, 0, 0, 0]' : 0.260416}
{'[2, 3, 2, 6, 4, 6, 1, 1, 5, 23, 26, 0, 1, 1, 0, 0, 0, 0]' : 0.25948}
{'[2, 3, 2, 6, 4, 6, 1, 1, 5, 23, 26, 0, 1, 1, 0, 0, 0, 0]' : 0.261031}
{'[2, 3, 2, 6, 4, 6, 1, 1, 5, 23, 26, 0, 1, 1, 0, 0, 0, 0]' : 0.262342}
{'[2, 3, 2, 6, 4, 6, 1, 1, 5, 23, 26, 0, 1, 1, 0, 0, 0, 0]' : 0.258707}
{'[2, 3, 2, 6, 4, 6, 1, 1, 5, 23, 26, 0, 1, 1, 0, 0, 0, 0]' : 0.258298}
{'[2, 3, 2, 6, 4, 6, 1, 1, 5, 23, 26, 0, 1, 1, 0, 0, 0, 0]' : 0.259541}
{'[2, 3, 2, 6, 4, 6, 1, 1, 5, 23, 26, 0, 1, 1, 0, 0, 0, 0]' : 0.260092}
{'[2, 3, 2, 6, 4, 6, 1, 1, 5, 23, 26, 0, 1, 1, 0, 0, 0, 0]' : 0.25931}
{'[2, 3, 2, 6, 4, 6, 1, 1, 5, 23, 26, 0, 1, 1, 0, 0, 0, 0]' : 0.259}
{'[2, 3, 2, 6, 4, 6, 1, 1, 5, 23, 26, 0, 1, 1, 0, 0, 0, 0]' : 0.260025}
{'[2, 3, 2, 6, 4, 6, 1, 1, 5, 23, 26, 0, 1, 1, 0, 0, 0, 0]' : 0.258969}
{'[2, 3, 2, 6, 4, 6, 1, 1, 5, 23, 26, 0, 1, 1, 0, 0, 0, 0]' : 0.256849}
{'[2, 3, 2, 6, 4, 6, 1, 1, 5, 23, 26, 0, 1, 1, 0, 0, 0, 0]' : 0.256741}
{'[2, 3, 2, 6, 4, 6, 1, 1, 5, 23, 26, 0, 1, 1, 0, 0, 0, 0]' : 0.258232}
{'[2, 3, 2, 6, 4, 6, 1, 1, 5, 23, 26, 0, 1, 1, 0, 0, 0, 0]' : 0.257087}
{'[2, 3, 2, 6, 4, 6, 1, 1, 5, 23, 26, 0, 1, 1, 0, 0, 0, 0]' : 0.257049}
{'[2, 3, 2, 6, 4, 6, 1, 1, 5, 23, 26, 0, 1, 1, 0, 0, 0, 0]' : 0.257994}
{'[2, 3, 2, 6, 4, 6, 1, 1, 5, 23, 26, 0, 1, 1, 0, 0, 0, 0]' : 0.258118}
{'[2, 3, 2, 6, 4, 6, 1, 1, 5, 23, 26, 0, 1, 1, 0, 0, 0, 0]' : 0.257148}
{'[2, 3, 2, 6, 4, 6, 1, 1, 5, 23, 26, 0, 1, 1, 0, 0, 0, 0]' : 0.25821}
{'[2, 3, 2, 6, 4, 6, 1, 1, 5, 23, 26, 0, 1, 1, 0, 0, 0, 0]' : 0.260056}
{'[2, 3, 2, 6, 4, 6, 1, 1, 5, 23, 26, 0, 1, 1, 0, 0, 0, 0]' : 0.259524}
{'[2, 3, 2, 6, 4, 6, 1, 1, 5, 23, 26, 0, 1, 1, 0, 0, 0, 0]' : 0.257743}
{'[2, 3, 2, 6, 4, 6, 1, 1, 5, 23, 26, 0, 1, 1, 0, 0, 0, 0]' : 0.259662}

out:
 ["{'[2, 3, 2, 6, 4, 6, 1, 1, 5, 23, 26, 0, 1, 1, 0, 0, 0, 0]' : 0.258705}", "{'[2, 3, 2, 6, 4, 6, 1, 1, 5, 23, 26, 0, 1, 1, 0, 0, 0, 0]' : 0.258954}", "{'[2, 3, 2, 6, 4, 6, 1, 1, 5, 23, 26, 0, 1, 1, 0, 0, 0, 0]' : 0.258636}", "{'[2, 3, 2, 6, 4, 6, 1, 1, 5, 23, 26, 0, 1, 1, 0, 0, 0, 0]' : 0.260782}", "{'[2, 3, 2, 6, 4, 6, 1, 1, 5, 23, 26, 0, 1, 1, 0, 0, 0, 0]' : 0.260628}", "{'[2, 3, 2, 6, 4, 6, 1, 1, 5, 23, 26, 0, 1, 1, 0, 0, 0, 0]' : 0.260416}", "{'[2, 3, 2, 6, 4, 6, 1, 1, 5, 23, 26, 0, 1, 1, 0, 0, 0, 0]' : 0.25948}", "{'[2, 3, 2, 6, 4, 6, 1, 1, 5, 23, 26, 0, 1, 1, 0, 0, 0, 0]' : 0.261031}", "{'[2, 3, 2, 6, 4, 6, 1, 1, 5, 23, 26, 0, 1, 1, 0, 0, 0, 0]' : 0.262342}", "{'[2, 3, 2, 6, 4, 6, 1, 1, 5, 23, 26, 0, 1, 1, 0, 0, 0, 0]' : 0.258707}", "{'[2, 3, 2, 6, 4, 6, 1, 1, 5, 23, 26, 0, 1, 1, 0, 0, 0, 0]' : 0.258298}", "{'[2, 3, 2, 6, 4, 6, 1, 1, 5, 23, 26, 0, 1, 1, 0, 0, 0, 0]' : 0.259541}", "{'[2, 3, 2, 6, 4, 6, 1, 1, 5, 23, 26, 0, 1, 1, 0, 0, 0, 0]' : 0.260092}", "{'[2, 3, 2, 6, 4, 6, 1, 1, 5, 23, 26, 0, 1, 1, 0, 0, 0, 0]' : 0.25931}", "{'[2, 3, 2, 6, 4, 6, 1, 1, 5, 23, 26, 0, 1, 1, 0, 0, 0, 0]' : 0.259}", "{'[2, 3, 2, 6, 4, 6, 1, 1, 5, 23, 26, 0, 1, 1, 0, 0, 0, 0]' : 0.260025}", "{'[2, 3, 2, 6, 4, 6, 1, 1, 5, 23, 26, 0, 1, 1, 0, 0, 0, 0]' : 0.258969}", "{'[2, 3, 2, 6, 4, 6, 1, 1, 5, 23, 26, 0, 1, 1, 0, 0, 0, 0]' : 0.256849}", "{'[2, 3, 2, 6, 4, 6, 1, 1, 5, 23, 26, 0, 1, 1, 0, 0, 0, 0]' : 0.256741}", "{'[2, 3, 2, 6, 4, 6, 1, 1, 5, 23, 26, 0, 1, 1, 0, 0, 0, 0]' : 0.258232}", "{'[2, 3, 2, 6, 4, 6, 1, 1, 5, 23, 26, 0, 1, 1, 0, 0, 0, 0]' : 0.257087}", "{'[2, 3, 2, 6, 4, 6, 1, 1, 5, 23, 26, 0, 1, 1, 0, 0, 0, 0]' : 0.257049}", "{'[2, 3, 2, 6, 4, 6, 1, 1, 5, 23, 26, 0, 1, 1, 0, 0, 0, 0]' : 0.257994}", "{'[2, 3, 2, 6, 4, 6, 1, 1, 5, 23, 26, 0, 1, 1, 0, 0, 0, 0]' : 0.258118}", "{'[2, 3, 2, 6, 4, 6, 1, 1, 5, 23, 26, 0, 1, 1, 0, 0, 0, 0]' : 0.257148}", "{'[2, 3, 2, 6, 4, 6, 1, 1, 5, 23, 26, 0, 1, 1, 0, 0, 0, 0]' : 0.25821}", "{'[2, 3, 2, 6, 4, 6, 1, 1, 5, 23, 26, 0, 1, 1, 0, 0, 0, 0]' : 0.260056}", "{'[2, 3, 2, 6, 4, 6, 1, 1, 5, 23, 26, 0, 1, 1, 0, 0, 0, 0]' : 0.259524}", "{'[2, 3, 2, 6, 4, 6, 1, 1, 5, 23, 26, 0, 1, 1, 0, 0, 0, 0]' : 0.257743}", "{'[2, 3, 2, 6, 4, 6, 1, 1, 5, 23, 26, 0, 1, 1, 0, 0, 0, 0]' : 0.259662}"]
returning from 'run': {'[2, 3, 2, 6, 4, 6, 1, 1, 5, 23, 26, 0, 1, 1, 0, 0, 0, 0]': ([0.258705, 0.258954, 0.258636, 0.260782, 0.260628, 0.260416, 0.25948, 0.261031, 0.262342, 0.258707, 0.258298, 0.259541, 0.260092, 0.25931, 0.259, 0.260025, 0.258969, 0.256849, 0.256741, 0.258232, 0.257087, 0.257049, 0.257994, 0.258118, 0.257148, 0.25821, 0.260056, 0.259524, 0.257743, 0.259662], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 3, 2, 6, 4, 6, 1, 1, 5, 23, 26, 0, 1, 1, 0, 0, 0, 0]': ([0.258705, 0.258954, 0.258636, 0.260782, 0.260628, 0.260416, 0.25948, 0.261031, 0.262342, 0.258707, 0.258298, 0.259541, 0.260092, 0.25931, 0.259, 0.260025, 0.258969, 0.256849, 0.256741, 0.258232, 0.257087, 0.257049, 0.257994, 0.258118, 0.257148, 0.25821, 0.260056, 0.259524, 0.257743, 0.259662], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	58
        Max loop nest depth: 	6
        Additions: 		2454
        Multiplications: 	960
        Divisions: 		0
        Logical: 		0
        Reads: 			4994
        Writes: 		999
        Comparisons:		58
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest15.exe __orio_perftest15.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest15.exe  
Program Test Output: 
{'[5, 5, 0, 6, 5, 1, 0, 0, 20, 18, 0, 5, 0, 1, 1, 1, 0, 0]' : 0.419657}
{'[5, 5, 0, 6, 5, 1, 0, 0, 20, 18, 0, 5, 0, 1, 1, 1, 0, 0]' : 0.422134}
{'[5, 5, 0, 6, 5, 1, 0, 0, 20, 18, 0, 5, 0, 1, 1, 1, 0, 0]' : 0.420901}
{'[5, 5, 0, 6, 5, 1, 0, 0, 20, 18, 0, 5, 0, 1, 1, 1, 0, 0]' : 0.420254}
{'[5, 5, 0, 6, 5, 1, 0, 0, 20, 18, 0, 5, 0, 1, 1, 1, 0, 0]' : 0.420961}
{'[5, 5, 0, 6, 5, 1, 0, 0, 20, 18, 0, 5, 0, 1, 1, 1, 0, 0]' : 0.423534}
{'[5, 5, 0, 6, 5, 1, 0, 0, 20, 18, 0, 5, 0, 1, 1, 1, 0, 0]' : 0.42341}
{'[5, 5, 0, 6, 5, 1, 0, 0, 20, 18, 0, 5, 0, 1, 1, 1, 0, 0]' : 0.423028}
{'[5, 5, 0, 6, 5, 1, 0, 0, 20, 18, 0, 5, 0, 1, 1, 1, 0, 0]' : 0.423228}
{'[5, 5, 0, 6, 5, 1, 0, 0, 20, 18, 0, 5, 0, 1, 1, 1, 0, 0]' : 0.448196}
{'[5, 5, 0, 6, 5, 1, 0, 0, 20, 18, 0, 5, 0, 1, 1, 1, 0, 0]' : 0.440133}
{'[5, 5, 0, 6, 5, 1, 0, 0, 20, 18, 0, 5, 0, 1, 1, 1, 0, 0]' : 0.424681}
{'[5, 5, 0, 6, 5, 1, 0, 0, 20, 18, 0, 5, 0, 1, 1, 1, 0, 0]' : 0.493325}
{'[5, 5, 0, 6, 5, 1, 0, 0, 20, 18, 0, 5, 0, 1, 1, 1, 0, 0]' : 0.423229}
{'[5, 5, 0, 6, 5, 1, 0, 0, 20, 18, 0, 5, 0, 1, 1, 1, 0, 0]' : 0.428843}
{'[5, 5, 0, 6, 5, 1, 0, 0, 20, 18, 0, 5, 0, 1, 1, 1, 0, 0]' : 0.42355}
{'[5, 5, 0, 6, 5, 1, 0, 0, 20, 18, 0, 5, 0, 1, 1, 1, 0, 0]' : 0.428548}
{'[5, 5, 0, 6, 5, 1, 0, 0, 20, 18, 0, 5, 0, 1, 1, 1, 0, 0]' : 0.443763}
{'[5, 5, 0, 6, 5, 1, 0, 0, 20, 18, 0, 5, 0, 1, 1, 1, 0, 0]' : 0.507098}
{'[5, 5, 0, 6, 5, 1, 0, 0, 20, 18, 0, 5, 0, 1, 1, 1, 0, 0]' : 0.425729}
{'[5, 5, 0, 6, 5, 1, 0, 0, 20, 18, 0, 5, 0, 1, 1, 1, 0, 0]' : 0.420005}
{'[5, 5, 0, 6, 5, 1, 0, 0, 20, 18, 0, 5, 0, 1, 1, 1, 0, 0]' : 0.426757}
{'[5, 5, 0, 6, 5, 1, 0, 0, 20, 18, 0, 5, 0, 1, 1, 1, 0, 0]' : 0.42772}
{'[5, 5, 0, 6, 5, 1, 0, 0, 20, 18, 0, 5, 0, 1, 1, 1, 0, 0]' : 0.431361}
{'[5, 5, 0, 6, 5, 1, 0, 0, 20, 18, 0, 5, 0, 1, 1, 1, 0, 0]' : 0.426714}
{'[5, 5, 0, 6, 5, 1, 0, 0, 20, 18, 0, 5, 0, 1, 1, 1, 0, 0]' : 0.424378}
{'[5, 5, 0, 6, 5, 1, 0, 0, 20, 18, 0, 5, 0, 1, 1, 1, 0, 0]' : 0.424445}
{'[5, 5, 0, 6, 5, 1, 0, 0, 20, 18, 0, 5, 0, 1, 1, 1, 0, 0]' : 0.423779}
{'[5, 5, 0, 6, 5, 1, 0, 0, 20, 18, 0, 5, 0, 1, 1, 1, 0, 0]' : 0.422367}
{'[5, 5, 0, 6, 5, 1, 0, 0, 20, 18, 0, 5, 0, 1, 1, 1, 0, 0]' : 0.432129}

out:
 ["{'[5, 5, 0, 6, 5, 1, 0, 0, 20, 18, 0, 5, 0, 1, 1, 1, 0, 0]' : 0.419657}", "{'[5, 5, 0, 6, 5, 1, 0, 0, 20, 18, 0, 5, 0, 1, 1, 1, 0, 0]' : 0.422134}", "{'[5, 5, 0, 6, 5, 1, 0, 0, 20, 18, 0, 5, 0, 1, 1, 1, 0, 0]' : 0.420901}", "{'[5, 5, 0, 6, 5, 1, 0, 0, 20, 18, 0, 5, 0, 1, 1, 1, 0, 0]' : 0.420254}", "{'[5, 5, 0, 6, 5, 1, 0, 0, 20, 18, 0, 5, 0, 1, 1, 1, 0, 0]' : 0.420961}", "{'[5, 5, 0, 6, 5, 1, 0, 0, 20, 18, 0, 5, 0, 1, 1, 1, 0, 0]' : 0.423534}", "{'[5, 5, 0, 6, 5, 1, 0, 0, 20, 18, 0, 5, 0, 1, 1, 1, 0, 0]' : 0.42341}", "{'[5, 5, 0, 6, 5, 1, 0, 0, 20, 18, 0, 5, 0, 1, 1, 1, 0, 0]' : 0.423028}", "{'[5, 5, 0, 6, 5, 1, 0, 0, 20, 18, 0, 5, 0, 1, 1, 1, 0, 0]' : 0.423228}", "{'[5, 5, 0, 6, 5, 1, 0, 0, 20, 18, 0, 5, 0, 1, 1, 1, 0, 0]' : 0.448196}", "{'[5, 5, 0, 6, 5, 1, 0, 0, 20, 18, 0, 5, 0, 1, 1, 1, 0, 0]' : 0.440133}", "{'[5, 5, 0, 6, 5, 1, 0, 0, 20, 18, 0, 5, 0, 1, 1, 1, 0, 0]' : 0.424681}", "{'[5, 5, 0, 6, 5, 1, 0, 0, 20, 18, 0, 5, 0, 1, 1, 1, 0, 0]' : 0.493325}", "{'[5, 5, 0, 6, 5, 1, 0, 0, 20, 18, 0, 5, 0, 1, 1, 1, 0, 0]' : 0.423229}", "{'[5, 5, 0, 6, 5, 1, 0, 0, 20, 18, 0, 5, 0, 1, 1, 1, 0, 0]' : 0.428843}", "{'[5, 5, 0, 6, 5, 1, 0, 0, 20, 18, 0, 5, 0, 1, 1, 1, 0, 0]' : 0.42355}", "{'[5, 5, 0, 6, 5, 1, 0, 0, 20, 18, 0, 5, 0, 1, 1, 1, 0, 0]' : 0.428548}", "{'[5, 5, 0, 6, 5, 1, 0, 0, 20, 18, 0, 5, 0, 1, 1, 1, 0, 0]' : 0.443763}", "{'[5, 5, 0, 6, 5, 1, 0, 0, 20, 18, 0, 5, 0, 1, 1, 1, 0, 0]' : 0.507098}", "{'[5, 5, 0, 6, 5, 1, 0, 0, 20, 18, 0, 5, 0, 1, 1, 1, 0, 0]' : 0.425729}", "{'[5, 5, 0, 6, 5, 1, 0, 0, 20, 18, 0, 5, 0, 1, 1, 1, 0, 0]' : 0.420005}", "{'[5, 5, 0, 6, 5, 1, 0, 0, 20, 18, 0, 5, 0, 1, 1, 1, 0, 0]' : 0.426757}", "{'[5, 5, 0, 6, 5, 1, 0, 0, 20, 18, 0, 5, 0, 1, 1, 1, 0, 0]' : 0.42772}", "{'[5, 5, 0, 6, 5, 1, 0, 0, 20, 18, 0, 5, 0, 1, 1, 1, 0, 0]' : 0.431361}", "{'[5, 5, 0, 6, 5, 1, 0, 0, 20, 18, 0, 5, 0, 1, 1, 1, 0, 0]' : 0.426714}", "{'[5, 5, 0, 6, 5, 1, 0, 0, 20, 18, 0, 5, 0, 1, 1, 1, 0, 0]' : 0.424378}", "{'[5, 5, 0, 6, 5, 1, 0, 0, 20, 18, 0, 5, 0, 1, 1, 1, 0, 0]' : 0.424445}", "{'[5, 5, 0, 6, 5, 1, 0, 0, 20, 18, 0, 5, 0, 1, 1, 1, 0, 0]' : 0.423779}", "{'[5, 5, 0, 6, 5, 1, 0, 0, 20, 18, 0, 5, 0, 1, 1, 1, 0, 0]' : 0.422367}", "{'[5, 5, 0, 6, 5, 1, 0, 0, 20, 18, 0, 5, 0, 1, 1, 1, 0, 0]' : 0.432129}"]
returning from 'run': {'[5, 5, 0, 6, 5, 1, 0, 0, 20, 18, 0, 5, 0, 1, 1, 1, 0, 0]': ([0.419657, 0.422134, 0.420901, 0.420254, 0.420961, 0.423534, 0.42341, 0.423028, 0.423228, 0.448196, 0.440133, 0.424681, 0.493325, 0.423229, 0.428843, 0.42355, 0.428548, 0.443763, 0.507098, 0.425729, 0.420005, 0.426757, 0.42772, 0.431361, 0.426714, 0.424378, 0.424445, 0.423779, 0.422367, 0.432129], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 5, 0, 6, 5, 1, 0, 0, 20, 18, 0, 5, 0, 1, 1, 1, 0, 0]': ([0.419657, 0.422134, 0.420901, 0.420254, 0.420961, 0.423534, 0.42341, 0.423028, 0.423228, 0.448196, 0.440133, 0.424681, 0.493325, 0.423229, 0.428843, 0.42355, 0.428548, 0.443763, 0.507098, 0.425729, 0.420005, 0.426757, 0.42772, 0.431361, 0.426714, 0.424378, 0.424445, 0.423779, 0.422367, 0.432129], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		6653
        Multiplications: 	1980
        Divisions: 		0
        Logical: 		0
        Reads: 			10056
        Writes: 		1056
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest16.exe __orio_perftest16.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest16.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest16.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest16.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest16.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	5
        Additions: 		2305
        Multiplications: 	1062
        Divisions: 		0
        Logical: 		0
        Reads: 			4463
        Writes: 		743
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest17.exe __orio_perftest17.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest17.exe  
Program Test Output: 
{'[6, 1, 0, 4, 6, 4, 1, 0, 0, 0, 27, 28, 1, 0, 0, 1, 0, 0]' : 0.245534}
{'[6, 1, 0, 4, 6, 4, 1, 0, 0, 0, 27, 28, 1, 0, 0, 1, 0, 0]' : 0.272526}
{'[6, 1, 0, 4, 6, 4, 1, 0, 0, 0, 27, 28, 1, 0, 0, 1, 0, 0]' : 0.276942}
{'[6, 1, 0, 4, 6, 4, 1, 0, 0, 0, 27, 28, 1, 0, 0, 1, 0, 0]' : 0.272163}
{'[6, 1, 0, 4, 6, 4, 1, 0, 0, 0, 27, 28, 1, 0, 0, 1, 0, 0]' : 0.267569}
{'[6, 1, 0, 4, 6, 4, 1, 0, 0, 0, 27, 28, 1, 0, 0, 1, 0, 0]' : 0.260313}
{'[6, 1, 0, 4, 6, 4, 1, 0, 0, 0, 27, 28, 1, 0, 0, 1, 0, 0]' : 0.271293}
{'[6, 1, 0, 4, 6, 4, 1, 0, 0, 0, 27, 28, 1, 0, 0, 1, 0, 0]' : 0.275177}
{'[6, 1, 0, 4, 6, 4, 1, 0, 0, 0, 27, 28, 1, 0, 0, 1, 0, 0]' : 0.261661}
{'[6, 1, 0, 4, 6, 4, 1, 0, 0, 0, 27, 28, 1, 0, 0, 1, 0, 0]' : 0.248702}
{'[6, 1, 0, 4, 6, 4, 1, 0, 0, 0, 27, 28, 1, 0, 0, 1, 0, 0]' : 0.250062}
{'[6, 1, 0, 4, 6, 4, 1, 0, 0, 0, 27, 28, 1, 0, 0, 1, 0, 0]' : 0.249058}
{'[6, 1, 0, 4, 6, 4, 1, 0, 0, 0, 27, 28, 1, 0, 0, 1, 0, 0]' : 0.269074}
{'[6, 1, 0, 4, 6, 4, 1, 0, 0, 0, 27, 28, 1, 0, 0, 1, 0, 0]' : 0.275701}
{'[6, 1, 0, 4, 6, 4, 1, 0, 0, 0, 27, 28, 1, 0, 0, 1, 0, 0]' : 0.279357}
{'[6, 1, 0, 4, 6, 4, 1, 0, 0, 0, 27, 28, 1, 0, 0, 1, 0, 0]' : 0.278293}
{'[6, 1, 0, 4, 6, 4, 1, 0, 0, 0, 27, 28, 1, 0, 0, 1, 0, 0]' : 0.276256}
{'[6, 1, 0, 4, 6, 4, 1, 0, 0, 0, 27, 28, 1, 0, 0, 1, 0, 0]' : 0.301168}
{'[6, 1, 0, 4, 6, 4, 1, 0, 0, 0, 27, 28, 1, 0, 0, 1, 0, 0]' : 0.27974}
{'[6, 1, 0, 4, 6, 4, 1, 0, 0, 0, 27, 28, 1, 0, 0, 1, 0, 0]' : 0.272507}
{'[6, 1, 0, 4, 6, 4, 1, 0, 0, 0, 27, 28, 1, 0, 0, 1, 0, 0]' : 0.267952}
{'[6, 1, 0, 4, 6, 4, 1, 0, 0, 0, 27, 28, 1, 0, 0, 1, 0, 0]' : 0.275481}
{'[6, 1, 0, 4, 6, 4, 1, 0, 0, 0, 27, 28, 1, 0, 0, 1, 0, 0]' : 0.262787}
{'[6, 1, 0, 4, 6, 4, 1, 0, 0, 0, 27, 28, 1, 0, 0, 1, 0, 0]' : 0.272676}
{'[6, 1, 0, 4, 6, 4, 1, 0, 0, 0, 27, 28, 1, 0, 0, 1, 0, 0]' : 0.26892}
{'[6, 1, 0, 4, 6, 4, 1, 0, 0, 0, 27, 28, 1, 0, 0, 1, 0, 0]' : 0.283675}
{'[6, 1, 0, 4, 6, 4, 1, 0, 0, 0, 27, 28, 1, 0, 0, 1, 0, 0]' : 0.277869}
{'[6, 1, 0, 4, 6, 4, 1, 0, 0, 0, 27, 28, 1, 0, 0, 1, 0, 0]' : 0.270886}
{'[6, 1, 0, 4, 6, 4, 1, 0, 0, 0, 27, 28, 1, 0, 0, 1, 0, 0]' : 0.276994}
{'[6, 1, 0, 4, 6, 4, 1, 0, 0, 0, 27, 28, 1, 0, 0, 1, 0, 0]' : 0.270595}

out:
 ["{'[6, 1, 0, 4, 6, 4, 1, 0, 0, 0, 27, 28, 1, 0, 0, 1, 0, 0]' : 0.245534}", "{'[6, 1, 0, 4, 6, 4, 1, 0, 0, 0, 27, 28, 1, 0, 0, 1, 0, 0]' : 0.272526}", "{'[6, 1, 0, 4, 6, 4, 1, 0, 0, 0, 27, 28, 1, 0, 0, 1, 0, 0]' : 0.276942}", "{'[6, 1, 0, 4, 6, 4, 1, 0, 0, 0, 27, 28, 1, 0, 0, 1, 0, 0]' : 0.272163}", "{'[6, 1, 0, 4, 6, 4, 1, 0, 0, 0, 27, 28, 1, 0, 0, 1, 0, 0]' : 0.267569}", "{'[6, 1, 0, 4, 6, 4, 1, 0, 0, 0, 27, 28, 1, 0, 0, 1, 0, 0]' : 0.260313}", "{'[6, 1, 0, 4, 6, 4, 1, 0, 0, 0, 27, 28, 1, 0, 0, 1, 0, 0]' : 0.271293}", "{'[6, 1, 0, 4, 6, 4, 1, 0, 0, 0, 27, 28, 1, 0, 0, 1, 0, 0]' : 0.275177}", "{'[6, 1, 0, 4, 6, 4, 1, 0, 0, 0, 27, 28, 1, 0, 0, 1, 0, 0]' : 0.261661}", "{'[6, 1, 0, 4, 6, 4, 1, 0, 0, 0, 27, 28, 1, 0, 0, 1, 0, 0]' : 0.248702}", "{'[6, 1, 0, 4, 6, 4, 1, 0, 0, 0, 27, 28, 1, 0, 0, 1, 0, 0]' : 0.250062}", "{'[6, 1, 0, 4, 6, 4, 1, 0, 0, 0, 27, 28, 1, 0, 0, 1, 0, 0]' : 0.249058}", "{'[6, 1, 0, 4, 6, 4, 1, 0, 0, 0, 27, 28, 1, 0, 0, 1, 0, 0]' : 0.269074}", "{'[6, 1, 0, 4, 6, 4, 1, 0, 0, 0, 27, 28, 1, 0, 0, 1, 0, 0]' : 0.275701}", "{'[6, 1, 0, 4, 6, 4, 1, 0, 0, 0, 27, 28, 1, 0, 0, 1, 0, 0]' : 0.279357}", "{'[6, 1, 0, 4, 6, 4, 1, 0, 0, 0, 27, 28, 1, 0, 0, 1, 0, 0]' : 0.278293}", "{'[6, 1, 0, 4, 6, 4, 1, 0, 0, 0, 27, 28, 1, 0, 0, 1, 0, 0]' : 0.276256}", "{'[6, 1, 0, 4, 6, 4, 1, 0, 0, 0, 27, 28, 1, 0, 0, 1, 0, 0]' : 0.301168}", "{'[6, 1, 0, 4, 6, 4, 1, 0, 0, 0, 27, 28, 1, 0, 0, 1, 0, 0]' : 0.27974}", "{'[6, 1, 0, 4, 6, 4, 1, 0, 0, 0, 27, 28, 1, 0, 0, 1, 0, 0]' : 0.272507}", "{'[6, 1, 0, 4, 6, 4, 1, 0, 0, 0, 27, 28, 1, 0, 0, 1, 0, 0]' : 0.267952}", "{'[6, 1, 0, 4, 6, 4, 1, 0, 0, 0, 27, 28, 1, 0, 0, 1, 0, 0]' : 0.275481}", "{'[6, 1, 0, 4, 6, 4, 1, 0, 0, 0, 27, 28, 1, 0, 0, 1, 0, 0]' : 0.262787}", "{'[6, 1, 0, 4, 6, 4, 1, 0, 0, 0, 27, 28, 1, 0, 0, 1, 0, 0]' : 0.272676}", "{'[6, 1, 0, 4, 6, 4, 1, 0, 0, 0, 27, 28, 1, 0, 0, 1, 0, 0]' : 0.26892}", "{'[6, 1, 0, 4, 6, 4, 1, 0, 0, 0, 27, 28, 1, 0, 0, 1, 0, 0]' : 0.283675}", "{'[6, 1, 0, 4, 6, 4, 1, 0, 0, 0, 27, 28, 1, 0, 0, 1, 0, 0]' : 0.277869}", "{'[6, 1, 0, 4, 6, 4, 1, 0, 0, 0, 27, 28, 1, 0, 0, 1, 0, 0]' : 0.270886}", "{'[6, 1, 0, 4, 6, 4, 1, 0, 0, 0, 27, 28, 1, 0, 0, 1, 0, 0]' : 0.276994}", "{'[6, 1, 0, 4, 6, 4, 1, 0, 0, 0, 27, 28, 1, 0, 0, 1, 0, 0]' : 0.270595}"]
returning from 'run': {'[6, 1, 0, 4, 6, 4, 1, 0, 0, 0, 27, 28, 1, 0, 0, 1, 0, 0]': ([0.245534, 0.272526, 0.276942, 0.272163, 0.267569, 0.260313, 0.271293, 0.275177, 0.261661, 0.248702, 0.250062, 0.249058, 0.269074, 0.275701, 0.279357, 0.278293, 0.276256, 0.301168, 0.27974, 0.272507, 0.267952, 0.275481, 0.262787, 0.272676, 0.26892, 0.283675, 0.277869, 0.270886, 0.276994, 0.270595], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 1, 0, 4, 6, 4, 1, 0, 0, 0, 27, 28, 1, 0, 0, 1, 0, 0]': ([0.245534, 0.272526, 0.276942, 0.272163, 0.267569, 0.260313, 0.271293, 0.275177, 0.261661, 0.248702, 0.250062, 0.249058, 0.269074, 0.275701, 0.279357, 0.278293, 0.276256, 0.301168, 0.27974, 0.272507, 0.267952, 0.275481, 0.262787, 0.272676, 0.26892, 0.283675, 0.277869, 0.270886, 0.276994, 0.270595], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	76
        Max loop nest depth: 	5
        Additions: 		6543
        Multiplications: 	3132
        Divisions: 		0
        Logical: 		0
        Reads: 			12407
        Writes: 		2004
        Comparisons:		76
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest18.exe __orio_perftest18.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest18.exe  
Program Test Output: 
{'[1, 3, 0, 6, 0, 6, 0, 1, 29, 24, 24, 0, 2, 0, 0, 1, 0, 0]' : 0.81696}
{'[1, 3, 0, 6, 0, 6, 0, 1, 29, 24, 24, 0, 2, 0, 0, 1, 0, 0]' : 0.817221}
{'[1, 3, 0, 6, 0, 6, 0, 1, 29, 24, 24, 0, 2, 0, 0, 1, 0, 0]' : 0.817323}
{'[1, 3, 0, 6, 0, 6, 0, 1, 29, 24, 24, 0, 2, 0, 0, 1, 0, 0]' : 0.8225}
{'[1, 3, 0, 6, 0, 6, 0, 1, 29, 24, 24, 0, 2, 0, 0, 1, 0, 0]' : 0.821354}
{'[1, 3, 0, 6, 0, 6, 0, 1, 29, 24, 24, 0, 2, 0, 0, 1, 0, 0]' : 0.817153}
{'[1, 3, 0, 6, 0, 6, 0, 1, 29, 24, 24, 0, 2, 0, 0, 1, 0, 0]' : 0.816043}
{'[1, 3, 0, 6, 0, 6, 0, 1, 29, 24, 24, 0, 2, 0, 0, 1, 0, 0]' : 0.815749}
{'[1, 3, 0, 6, 0, 6, 0, 1, 29, 24, 24, 0, 2, 0, 0, 1, 0, 0]' : 0.815915}
{'[1, 3, 0, 6, 0, 6, 0, 1, 29, 24, 24, 0, 2, 0, 0, 1, 0, 0]' : 0.816662}
{'[1, 3, 0, 6, 0, 6, 0, 1, 29, 24, 24, 0, 2, 0, 0, 1, 0, 0]' : 0.819508}
{'[1, 3, 0, 6, 0, 6, 0, 1, 29, 24, 24, 0, 2, 0, 0, 1, 0, 0]' : 0.816511}
{'[1, 3, 0, 6, 0, 6, 0, 1, 29, 24, 24, 0, 2, 0, 0, 1, 0, 0]' : 0.815593}
{'[1, 3, 0, 6, 0, 6, 0, 1, 29, 24, 24, 0, 2, 0, 0, 1, 0, 0]' : 0.822617}
{'[1, 3, 0, 6, 0, 6, 0, 1, 29, 24, 24, 0, 2, 0, 0, 1, 0, 0]' : 0.822409}
{'[1, 3, 0, 6, 0, 6, 0, 1, 29, 24, 24, 0, 2, 0, 0, 1, 0, 0]' : 0.819194}
{'[1, 3, 0, 6, 0, 6, 0, 1, 29, 24, 24, 0, 2, 0, 0, 1, 0, 0]' : 0.819766}
{'[1, 3, 0, 6, 0, 6, 0, 1, 29, 24, 24, 0, 2, 0, 0, 1, 0, 0]' : 0.822613}
{'[1, 3, 0, 6, 0, 6, 0, 1, 29, 24, 24, 0, 2, 0, 0, 1, 0, 0]' : 0.815809}
{'[1, 3, 0, 6, 0, 6, 0, 1, 29, 24, 24, 0, 2, 0, 0, 1, 0, 0]' : 0.818928}
{'[1, 3, 0, 6, 0, 6, 0, 1, 29, 24, 24, 0, 2, 0, 0, 1, 0, 0]' : 0.817604}
{'[1, 3, 0, 6, 0, 6, 0, 1, 29, 24, 24, 0, 2, 0, 0, 1, 0, 0]' : 0.817625}
{'[1, 3, 0, 6, 0, 6, 0, 1, 29, 24, 24, 0, 2, 0, 0, 1, 0, 0]' : 0.817866}
{'[1, 3, 0, 6, 0, 6, 0, 1, 29, 24, 24, 0, 2, 0, 0, 1, 0, 0]' : 0.818814}
{'[1, 3, 0, 6, 0, 6, 0, 1, 29, 24, 24, 0, 2, 0, 0, 1, 0, 0]' : 0.817767}
{'[1, 3, 0, 6, 0, 6, 0, 1, 29, 24, 24, 0, 2, 0, 0, 1, 0, 0]' : 0.817781}
{'[1, 3, 0, 6, 0, 6, 0, 1, 29, 24, 24, 0, 2, 0, 0, 1, 0, 0]' : 0.817298}
{'[1, 3, 0, 6, 0, 6, 0, 1, 29, 24, 24, 0, 2, 0, 0, 1, 0, 0]' : 0.817118}
{'[1, 3, 0, 6, 0, 6, 0, 1, 29, 24, 24, 0, 2, 0, 0, 1, 0, 0]' : 0.817136}
{'[1, 3, 0, 6, 0, 6, 0, 1, 29, 24, 24, 0, 2, 0, 0, 1, 0, 0]' : 0.818845}

out:
 ["{'[1, 3, 0, 6, 0, 6, 0, 1, 29, 24, 24, 0, 2, 0, 0, 1, 0, 0]' : 0.81696}", "{'[1, 3, 0, 6, 0, 6, 0, 1, 29, 24, 24, 0, 2, 0, 0, 1, 0, 0]' : 0.817221}", "{'[1, 3, 0, 6, 0, 6, 0, 1, 29, 24, 24, 0, 2, 0, 0, 1, 0, 0]' : 0.817323}", "{'[1, 3, 0, 6, 0, 6, 0, 1, 29, 24, 24, 0, 2, 0, 0, 1, 0, 0]' : 0.8225}", "{'[1, 3, 0, 6, 0, 6, 0, 1, 29, 24, 24, 0, 2, 0, 0, 1, 0, 0]' : 0.821354}", "{'[1, 3, 0, 6, 0, 6, 0, 1, 29, 24, 24, 0, 2, 0, 0, 1, 0, 0]' : 0.817153}", "{'[1, 3, 0, 6, 0, 6, 0, 1, 29, 24, 24, 0, 2, 0, 0, 1, 0, 0]' : 0.816043}", "{'[1, 3, 0, 6, 0, 6, 0, 1, 29, 24, 24, 0, 2, 0, 0, 1, 0, 0]' : 0.815749}", "{'[1, 3, 0, 6, 0, 6, 0, 1, 29, 24, 24, 0, 2, 0, 0, 1, 0, 0]' : 0.815915}", "{'[1, 3, 0, 6, 0, 6, 0, 1, 29, 24, 24, 0, 2, 0, 0, 1, 0, 0]' : 0.816662}", "{'[1, 3, 0, 6, 0, 6, 0, 1, 29, 24, 24, 0, 2, 0, 0, 1, 0, 0]' : 0.819508}", "{'[1, 3, 0, 6, 0, 6, 0, 1, 29, 24, 24, 0, 2, 0, 0, 1, 0, 0]' : 0.816511}", "{'[1, 3, 0, 6, 0, 6, 0, 1, 29, 24, 24, 0, 2, 0, 0, 1, 0, 0]' : 0.815593}", "{'[1, 3, 0, 6, 0, 6, 0, 1, 29, 24, 24, 0, 2, 0, 0, 1, 0, 0]' : 0.822617}", "{'[1, 3, 0, 6, 0, 6, 0, 1, 29, 24, 24, 0, 2, 0, 0, 1, 0, 0]' : 0.822409}", "{'[1, 3, 0, 6, 0, 6, 0, 1, 29, 24, 24, 0, 2, 0, 0, 1, 0, 0]' : 0.819194}", "{'[1, 3, 0, 6, 0, 6, 0, 1, 29, 24, 24, 0, 2, 0, 0, 1, 0, 0]' : 0.819766}", "{'[1, 3, 0, 6, 0, 6, 0, 1, 29, 24, 24, 0, 2, 0, 0, 1, 0, 0]' : 0.822613}", "{'[1, 3, 0, 6, 0, 6, 0, 1, 29, 24, 24, 0, 2, 0, 0, 1, 0, 0]' : 0.815809}", "{'[1, 3, 0, 6, 0, 6, 0, 1, 29, 24, 24, 0, 2, 0, 0, 1, 0, 0]' : 0.818928}", "{'[1, 3, 0, 6, 0, 6, 0, 1, 29, 24, 24, 0, 2, 0, 0, 1, 0, 0]' : 0.817604}", "{'[1, 3, 0, 6, 0, 6, 0, 1, 29, 24, 24, 0, 2, 0, 0, 1, 0, 0]' : 0.817625}", "{'[1, 3, 0, 6, 0, 6, 0, 1, 29, 24, 24, 0, 2, 0, 0, 1, 0, 0]' : 0.817866}", "{'[1, 3, 0, 6, 0, 6, 0, 1, 29, 24, 24, 0, 2, 0, 0, 1, 0, 0]' : 0.818814}", "{'[1, 3, 0, 6, 0, 6, 0, 1, 29, 24, 24, 0, 2, 0, 0, 1, 0, 0]' : 0.817767}", "{'[1, 3, 0, 6, 0, 6, 0, 1, 29, 24, 24, 0, 2, 0, 0, 1, 0, 0]' : 0.817781}", "{'[1, 3, 0, 6, 0, 6, 0, 1, 29, 24, 24, 0, 2, 0, 0, 1, 0, 0]' : 0.817298}", "{'[1, 3, 0, 6, 0, 6, 0, 1, 29, 24, 24, 0, 2, 0, 0, 1, 0, 0]' : 0.817118}", "{'[1, 3, 0, 6, 0, 6, 0, 1, 29, 24, 24, 0, 2, 0, 0, 1, 0, 0]' : 0.817136}", "{'[1, 3, 0, 6, 0, 6, 0, 1, 29, 24, 24, 0, 2, 0, 0, 1, 0, 0]' : 0.818845}"]
returning from 'run': {'[1, 3, 0, 6, 0, 6, 0, 1, 29, 24, 24, 0, 2, 0, 0, 1, 0, 0]': ([0.81696, 0.817221, 0.817323, 0.8225, 0.821354, 0.817153, 0.816043, 0.815749, 0.815915, 0.816662, 0.819508, 0.816511, 0.815593, 0.822617, 0.822409, 0.819194, 0.819766, 0.822613, 0.815809, 0.818928, 0.817604, 0.817625, 0.817866, 0.818814, 0.817767, 0.817781, 0.817298, 0.817118, 0.817136, 0.818845], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 3, 0, 6, 0, 6, 0, 1, 29, 24, 24, 0, 2, 0, 0, 1, 0, 0]': ([0.81696, 0.817221, 0.817323, 0.8225, 0.821354, 0.817153, 0.816043, 0.815749, 0.815915, 0.816662, 0.819508, 0.816511, 0.815593, 0.822617, 0.822409, 0.819194, 0.819766, 0.822613, 0.815809, 0.818928, 0.817604, 0.817625, 0.817866, 0.818814, 0.817767, 0.817781, 0.817298, 0.817118, 0.817136, 0.818845], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
Code stats:
        Number of loops: 	28
        Max loop nest depth: 	4
        Additions: 		1458
        Multiplications: 	330
        Divisions: 		0
        Logical: 		0
        Reads: 			2312
        Writes: 		273
        Comparisons:		28
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest19.exe __orio_perftest19.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest19.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest19.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest19.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest19.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	73
        Max loop nest depth: 	5
        Additions: 		3921
        Multiplications: 	1624
        Divisions: 		0
        Logical: 		0
        Reads: 			6969
        Writes: 		1091
        Comparisons:		73
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest20.exe __orio_perftest20.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest20.exe  
Program Test Output: 
{'[5, 0, 6, 5, 6, 0, 0, 0, 0, 27, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.449824}
{'[5, 0, 6, 5, 6, 0, 0, 0, 0, 27, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.443856}
{'[5, 0, 6, 5, 6, 0, 0, 0, 0, 27, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.450563}
{'[5, 0, 6, 5, 6, 0, 0, 0, 0, 27, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.44817}
{'[5, 0, 6, 5, 6, 0, 0, 0, 0, 27, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.451664}
{'[5, 0, 6, 5, 6, 0, 0, 0, 0, 27, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.442951}
{'[5, 0, 6, 5, 6, 0, 0, 0, 0, 27, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.442998}
{'[5, 0, 6, 5, 6, 0, 0, 0, 0, 27, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.448252}
{'[5, 0, 6, 5, 6, 0, 0, 0, 0, 27, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.442821}
{'[5, 0, 6, 5, 6, 0, 0, 0, 0, 27, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.450143}
{'[5, 0, 6, 5, 6, 0, 0, 0, 0, 27, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.445787}
{'[5, 0, 6, 5, 6, 0, 0, 0, 0, 27, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.449519}
{'[5, 0, 6, 5, 6, 0, 0, 0, 0, 27, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.44345}
{'[5, 0, 6, 5, 6, 0, 0, 0, 0, 27, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.449342}
{'[5, 0, 6, 5, 6, 0, 0, 0, 0, 27, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.450218}
{'[5, 0, 6, 5, 6, 0, 0, 0, 0, 27, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.44464}
{'[5, 0, 6, 5, 6, 0, 0, 0, 0, 27, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.450221}
{'[5, 0, 6, 5, 6, 0, 0, 0, 0, 27, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.444718}
{'[5, 0, 6, 5, 6, 0, 0, 0, 0, 27, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.447792}
{'[5, 0, 6, 5, 6, 0, 0, 0, 0, 27, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.44823}
{'[5, 0, 6, 5, 6, 0, 0, 0, 0, 27, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.446496}
{'[5, 0, 6, 5, 6, 0, 0, 0, 0, 27, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.447016}
{'[5, 0, 6, 5, 6, 0, 0, 0, 0, 27, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.445758}
{'[5, 0, 6, 5, 6, 0, 0, 0, 0, 27, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.44671}
{'[5, 0, 6, 5, 6, 0, 0, 0, 0, 27, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.445297}
{'[5, 0, 6, 5, 6, 0, 0, 0, 0, 27, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.447557}
{'[5, 0, 6, 5, 6, 0, 0, 0, 0, 27, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.445192}
{'[5, 0, 6, 5, 6, 0, 0, 0, 0, 27, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.446009}
{'[5, 0, 6, 5, 6, 0, 0, 0, 0, 27, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.445445}
{'[5, 0, 6, 5, 6, 0, 0, 0, 0, 27, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.445272}

out:
 ["{'[5, 0, 6, 5, 6, 0, 0, 0, 0, 27, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.449824}", "{'[5, 0, 6, 5, 6, 0, 0, 0, 0, 27, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.443856}", "{'[5, 0, 6, 5, 6, 0, 0, 0, 0, 27, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.450563}", "{'[5, 0, 6, 5, 6, 0, 0, 0, 0, 27, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.44817}", "{'[5, 0, 6, 5, 6, 0, 0, 0, 0, 27, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.451664}", "{'[5, 0, 6, 5, 6, 0, 0, 0, 0, 27, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.442951}", "{'[5, 0, 6, 5, 6, 0, 0, 0, 0, 27, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.442998}", "{'[5, 0, 6, 5, 6, 0, 0, 0, 0, 27, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.448252}", "{'[5, 0, 6, 5, 6, 0, 0, 0, 0, 27, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.442821}", "{'[5, 0, 6, 5, 6, 0, 0, 0, 0, 27, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.450143}", "{'[5, 0, 6, 5, 6, 0, 0, 0, 0, 27, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.445787}", "{'[5, 0, 6, 5, 6, 0, 0, 0, 0, 27, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.449519}", "{'[5, 0, 6, 5, 6, 0, 0, 0, 0, 27, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.44345}", "{'[5, 0, 6, 5, 6, 0, 0, 0, 0, 27, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.449342}", "{'[5, 0, 6, 5, 6, 0, 0, 0, 0, 27, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.450218}", "{'[5, 0, 6, 5, 6, 0, 0, 0, 0, 27, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.44464}", "{'[5, 0, 6, 5, 6, 0, 0, 0, 0, 27, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.450221}", "{'[5, 0, 6, 5, 6, 0, 0, 0, 0, 27, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.444718}", "{'[5, 0, 6, 5, 6, 0, 0, 0, 0, 27, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.447792}", "{'[5, 0, 6, 5, 6, 0, 0, 0, 0, 27, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.44823}", "{'[5, 0, 6, 5, 6, 0, 0, 0, 0, 27, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.446496}", "{'[5, 0, 6, 5, 6, 0, 0, 0, 0, 27, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.447016}", "{'[5, 0, 6, 5, 6, 0, 0, 0, 0, 27, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.445758}", "{'[5, 0, 6, 5, 6, 0, 0, 0, 0, 27, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.44671}", "{'[5, 0, 6, 5, 6, 0, 0, 0, 0, 27, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.445297}", "{'[5, 0, 6, 5, 6, 0, 0, 0, 0, 27, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.447557}", "{'[5, 0, 6, 5, 6, 0, 0, 0, 0, 27, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.445192}", "{'[5, 0, 6, 5, 6, 0, 0, 0, 0, 27, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.446009}", "{'[5, 0, 6, 5, 6, 0, 0, 0, 0, 27, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.445445}", "{'[5, 0, 6, 5, 6, 0, 0, 0, 0, 27, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.445272}"]
returning from 'run': {'[5, 0, 6, 5, 6, 0, 0, 0, 0, 27, 9, 0, 0, 1, 1, 1, 1, 0]': ([0.449824, 0.443856, 0.450563, 0.44817, 0.451664, 0.442951, 0.442998, 0.448252, 0.442821, 0.450143, 0.445787, 0.449519, 0.44345, 0.449342, 0.450218, 0.44464, 0.450221, 0.444718, 0.447792, 0.44823, 0.446496, 0.447016, 0.445758, 0.44671, 0.445297, 0.447557, 0.445192, 0.446009, 0.445445, 0.445272], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 0, 6, 5, 6, 0, 0, 0, 0, 27, 9, 0, 0, 1, 1, 1, 1, 0]': ([0.449824, 0.443856, 0.450563, 0.44817, 0.451664, 0.442951, 0.442998, 0.448252, 0.442821, 0.450143, 0.445787, 0.449519, 0.44345, 0.449342, 0.450218, 0.44464, 0.450221, 0.444718, 0.447792, 0.44823, 0.446496, 0.447016, 0.445758, 0.44671, 0.445297, 0.447557, 0.445192, 0.446009, 0.445445, 0.445272], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	6
        Additions: 		194
        Multiplications: 	66
        Divisions: 		0
        Logical: 		0
        Reads: 			448
        Writes: 		65
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest21.exe __orio_perftest21.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest21.exe  
Program Test Output: 
{'[4, 0, 3, 6, 2, 2, 0, 1, 0, 0, 23, 26, 0, 0, 1, 0, 0, 1]' : 0.854797}
{'[4, 0, 3, 6, 2, 2, 0, 1, 0, 0, 23, 26, 0, 0, 1, 0, 0, 1]' : 0.854204}
{'[4, 0, 3, 6, 2, 2, 0, 1, 0, 0, 23, 26, 0, 0, 1, 0, 0, 1]' : 0.854812}
{'[4, 0, 3, 6, 2, 2, 0, 1, 0, 0, 23, 26, 0, 0, 1, 0, 0, 1]' : 0.853775}
{'[4, 0, 3, 6, 2, 2, 0, 1, 0, 0, 23, 26, 0, 0, 1, 0, 0, 1]' : 0.852749}
{'[4, 0, 3, 6, 2, 2, 0, 1, 0, 0, 23, 26, 0, 0, 1, 0, 0, 1]' : 0.859899}
{'[4, 0, 3, 6, 2, 2, 0, 1, 0, 0, 23, 26, 0, 0, 1, 0, 0, 1]' : 0.853828}
{'[4, 0, 3, 6, 2, 2, 0, 1, 0, 0, 23, 26, 0, 0, 1, 0, 0, 1]' : 0.849007}
{'[4, 0, 3, 6, 2, 2, 0, 1, 0, 0, 23, 26, 0, 0, 1, 0, 0, 1]' : 0.854744}
{'[4, 0, 3, 6, 2, 2, 0, 1, 0, 0, 23, 26, 0, 0, 1, 0, 0, 1]' : 0.849593}
{'[4, 0, 3, 6, 2, 2, 0, 1, 0, 0, 23, 26, 0, 0, 1, 0, 0, 1]' : 0.851784}
{'[4, 0, 3, 6, 2, 2, 0, 1, 0, 0, 23, 26, 0, 0, 1, 0, 0, 1]' : 0.852679}
{'[4, 0, 3, 6, 2, 2, 0, 1, 0, 0, 23, 26, 0, 0, 1, 0, 0, 1]' : 0.851646}
{'[4, 0, 3, 6, 2, 2, 0, 1, 0, 0, 23, 26, 0, 0, 1, 0, 0, 1]' : 0.849195}
{'[4, 0, 3, 6, 2, 2, 0, 1, 0, 0, 23, 26, 0, 0, 1, 0, 0, 1]' : 0.854685}
{'[4, 0, 3, 6, 2, 2, 0, 1, 0, 0, 23, 26, 0, 0, 1, 0, 0, 1]' : 0.858895}
{'[4, 0, 3, 6, 2, 2, 0, 1, 0, 0, 23, 26, 0, 0, 1, 0, 0, 1]' : 0.859036}
{'[4, 0, 3, 6, 2, 2, 0, 1, 0, 0, 23, 26, 0, 0, 1, 0, 0, 1]' : 0.851418}
{'[4, 0, 3, 6, 2, 2, 0, 1, 0, 0, 23, 26, 0, 0, 1, 0, 0, 1]' : 0.851334}
{'[4, 0, 3, 6, 2, 2, 0, 1, 0, 0, 23, 26, 0, 0, 1, 0, 0, 1]' : 0.849193}
{'[4, 0, 3, 6, 2, 2, 0, 1, 0, 0, 23, 26, 0, 0, 1, 0, 0, 1]' : 0.851097}
{'[4, 0, 3, 6, 2, 2, 0, 1, 0, 0, 23, 26, 0, 0, 1, 0, 0, 1]' : 0.851442}
{'[4, 0, 3, 6, 2, 2, 0, 1, 0, 0, 23, 26, 0, 0, 1, 0, 0, 1]' : 0.85073}
{'[4, 0, 3, 6, 2, 2, 0, 1, 0, 0, 23, 26, 0, 0, 1, 0, 0, 1]' : 0.850442}
{'[4, 0, 3, 6, 2, 2, 0, 1, 0, 0, 23, 26, 0, 0, 1, 0, 0, 1]' : 0.852097}
{'[4, 0, 3, 6, 2, 2, 0, 1, 0, 0, 23, 26, 0, 0, 1, 0, 0, 1]' : 0.855207}
{'[4, 0, 3, 6, 2, 2, 0, 1, 0, 0, 23, 26, 0, 0, 1, 0, 0, 1]' : 0.849339}
{'[4, 0, 3, 6, 2, 2, 0, 1, 0, 0, 23, 26, 0, 0, 1, 0, 0, 1]' : 0.84921}
{'[4, 0, 3, 6, 2, 2, 0, 1, 0, 0, 23, 26, 0, 0, 1, 0, 0, 1]' : 0.86459}
{'[4, 0, 3, 6, 2, 2, 0, 1, 0, 0, 23, 26, 0, 0, 1, 0, 0, 1]' : 0.848446}

out:
 ["{'[4, 0, 3, 6, 2, 2, 0, 1, 0, 0, 23, 26, 0, 0, 1, 0, 0, 1]' : 0.854797}", "{'[4, 0, 3, 6, 2, 2, 0, 1, 0, 0, 23, 26, 0, 0, 1, 0, 0, 1]' : 0.854204}", "{'[4, 0, 3, 6, 2, 2, 0, 1, 0, 0, 23, 26, 0, 0, 1, 0, 0, 1]' : 0.854812}", "{'[4, 0, 3, 6, 2, 2, 0, 1, 0, 0, 23, 26, 0, 0, 1, 0, 0, 1]' : 0.853775}", "{'[4, 0, 3, 6, 2, 2, 0, 1, 0, 0, 23, 26, 0, 0, 1, 0, 0, 1]' : 0.852749}", "{'[4, 0, 3, 6, 2, 2, 0, 1, 0, 0, 23, 26, 0, 0, 1, 0, 0, 1]' : 0.859899}", "{'[4, 0, 3, 6, 2, 2, 0, 1, 0, 0, 23, 26, 0, 0, 1, 0, 0, 1]' : 0.853828}", "{'[4, 0, 3, 6, 2, 2, 0, 1, 0, 0, 23, 26, 0, 0, 1, 0, 0, 1]' : 0.849007}", "{'[4, 0, 3, 6, 2, 2, 0, 1, 0, 0, 23, 26, 0, 0, 1, 0, 0, 1]' : 0.854744}", "{'[4, 0, 3, 6, 2, 2, 0, 1, 0, 0, 23, 26, 0, 0, 1, 0, 0, 1]' : 0.849593}", "{'[4, 0, 3, 6, 2, 2, 0, 1, 0, 0, 23, 26, 0, 0, 1, 0, 0, 1]' : 0.851784}", "{'[4, 0, 3, 6, 2, 2, 0, 1, 0, 0, 23, 26, 0, 0, 1, 0, 0, 1]' : 0.852679}", "{'[4, 0, 3, 6, 2, 2, 0, 1, 0, 0, 23, 26, 0, 0, 1, 0, 0, 1]' : 0.851646}", "{'[4, 0, 3, 6, 2, 2, 0, 1, 0, 0, 23, 26, 0, 0, 1, 0, 0, 1]' : 0.849195}", "{'[4, 0, 3, 6, 2, 2, 0, 1, 0, 0, 23, 26, 0, 0, 1, 0, 0, 1]' : 0.854685}", "{'[4, 0, 3, 6, 2, 2, 0, 1, 0, 0, 23, 26, 0, 0, 1, 0, 0, 1]' : 0.858895}", "{'[4, 0, 3, 6, 2, 2, 0, 1, 0, 0, 23, 26, 0, 0, 1, 0, 0, 1]' : 0.859036}", "{'[4, 0, 3, 6, 2, 2, 0, 1, 0, 0, 23, 26, 0, 0, 1, 0, 0, 1]' : 0.851418}", "{'[4, 0, 3, 6, 2, 2, 0, 1, 0, 0, 23, 26, 0, 0, 1, 0, 0, 1]' : 0.851334}", "{'[4, 0, 3, 6, 2, 2, 0, 1, 0, 0, 23, 26, 0, 0, 1, 0, 0, 1]' : 0.849193}", "{'[4, 0, 3, 6, 2, 2, 0, 1, 0, 0, 23, 26, 0, 0, 1, 0, 0, 1]' : 0.851097}", "{'[4, 0, 3, 6, 2, 2, 0, 1, 0, 0, 23, 26, 0, 0, 1, 0, 0, 1]' : 0.851442}", "{'[4, 0, 3, 6, 2, 2, 0, 1, 0, 0, 23, 26, 0, 0, 1, 0, 0, 1]' : 0.85073}", "{'[4, 0, 3, 6, 2, 2, 0, 1, 0, 0, 23, 26, 0, 0, 1, 0, 0, 1]' : 0.850442}", "{'[4, 0, 3, 6, 2, 2, 0, 1, 0, 0, 23, 26, 0, 0, 1, 0, 0, 1]' : 0.852097}", "{'[4, 0, 3, 6, 2, 2, 0, 1, 0, 0, 23, 26, 0, 0, 1, 0, 0, 1]' : 0.855207}", "{'[4, 0, 3, 6, 2, 2, 0, 1, 0, 0, 23, 26, 0, 0, 1, 0, 0, 1]' : 0.849339}", "{'[4, 0, 3, 6, 2, 2, 0, 1, 0, 0, 23, 26, 0, 0, 1, 0, 0, 1]' : 0.84921}", "{'[4, 0, 3, 6, 2, 2, 0, 1, 0, 0, 23, 26, 0, 0, 1, 0, 0, 1]' : 0.86459}", "{'[4, 0, 3, 6, 2, 2, 0, 1, 0, 0, 23, 26, 0, 0, 1, 0, 0, 1]' : 0.848446}"]
returning from 'run': {'[4, 0, 3, 6, 2, 2, 0, 1, 0, 0, 23, 26, 0, 0, 1, 0, 0, 1]': ([0.854797, 0.854204, 0.854812, 0.853775, 0.852749, 0.859899, 0.853828, 0.849007, 0.854744, 0.849593, 0.851784, 0.852679, 0.851646, 0.849195, 0.854685, 0.858895, 0.859036, 0.851418, 0.851334, 0.849193, 0.851097, 0.851442, 0.85073, 0.850442, 0.852097, 0.855207, 0.849339, 0.84921, 0.86459, 0.848446], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 0, 3, 6, 2, 2, 0, 1, 0, 0, 23, 26, 0, 0, 1, 0, 0, 1]': ([0.854797, 0.854204, 0.854812, 0.853775, 0.852749, 0.859899, 0.853828, 0.849007, 0.854744, 0.849593, 0.851784, 0.852679, 0.851646, 0.849195, 0.854685, 0.858895, 0.859036, 0.851418, 0.851334, 0.849193, 0.851097, 0.851442, 0.85073, 0.850442, 0.852097, 0.855207, 0.849339, 0.84921, 0.86459, 0.848446], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	3
        Additions: 		4174
        Multiplications: 	1248
        Divisions: 		0
        Logical: 		0
        Reads: 			6446
        Writes: 		708
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest22.exe __orio_perftest22.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest22.exe  
Program Test Output: 
{'[0, 0, 4, 0, 2, 0, 0, 0, 28, 24, 0, 21, 0, 0, 0, 0, 0, 0]' : 0.561601}
{'[0, 0, 4, 0, 2, 0, 0, 0, 28, 24, 0, 21, 0, 0, 0, 0, 0, 0]' : 0.518669}
{'[0, 0, 4, 0, 2, 0, 0, 0, 28, 24, 0, 21, 0, 0, 0, 0, 0, 0]' : 0.599002}
{'[0, 0, 4, 0, 2, 0, 0, 0, 28, 24, 0, 21, 0, 0, 0, 0, 0, 0]' : 0.62448}
{'[0, 0, 4, 0, 2, 0, 0, 0, 28, 24, 0, 21, 0, 0, 0, 0, 0, 0]' : 0.5177}
{'[0, 0, 4, 0, 2, 0, 0, 0, 28, 24, 0, 21, 0, 0, 0, 0, 0, 0]' : 0.52924}
{'[0, 0, 4, 0, 2, 0, 0, 0, 28, 24, 0, 21, 0, 0, 0, 0, 0, 0]' : 0.535982}
{'[0, 0, 4, 0, 2, 0, 0, 0, 28, 24, 0, 21, 0, 0, 0, 0, 0, 0]' : 0.528901}
{'[0, 0, 4, 0, 2, 0, 0, 0, 28, 24, 0, 21, 0, 0, 0, 0, 0, 0]' : 0.585174}
{'[0, 0, 4, 0, 2, 0, 0, 0, 28, 24, 0, 21, 0, 0, 0, 0, 0, 0]' : 0.507256}
{'[0, 0, 4, 0, 2, 0, 0, 0, 28, 24, 0, 21, 0, 0, 0, 0, 0, 0]' : 0.566593}
{'[0, 0, 4, 0, 2, 0, 0, 0, 28, 24, 0, 21, 0, 0, 0, 0, 0, 0]' : 0.538262}
{'[0, 0, 4, 0, 2, 0, 0, 0, 28, 24, 0, 21, 0, 0, 0, 0, 0, 0]' : 0.499223}
{'[0, 0, 4, 0, 2, 0, 0, 0, 28, 24, 0, 21, 0, 0, 0, 0, 0, 0]' : 0.503292}
{'[0, 0, 4, 0, 2, 0, 0, 0, 28, 24, 0, 21, 0, 0, 0, 0, 0, 0]' : 0.522816}
{'[0, 0, 4, 0, 2, 0, 0, 0, 28, 24, 0, 21, 0, 0, 0, 0, 0, 0]' : 0.542445}
{'[0, 0, 4, 0, 2, 0, 0, 0, 28, 24, 0, 21, 0, 0, 0, 0, 0, 0]' : 0.532758}
{'[0, 0, 4, 0, 2, 0, 0, 0, 28, 24, 0, 21, 0, 0, 0, 0, 0, 0]' : 0.529244}
{'[0, 0, 4, 0, 2, 0, 0, 0, 28, 24, 0, 21, 0, 0, 0, 0, 0, 0]' : 0.47826}
{'[0, 0, 4, 0, 2, 0, 0, 0, 28, 24, 0, 21, 0, 0, 0, 0, 0, 0]' : 0.484044}
{'[0, 0, 4, 0, 2, 0, 0, 0, 28, 24, 0, 21, 0, 0, 0, 0, 0, 0]' : 0.48164}
{'[0, 0, 4, 0, 2, 0, 0, 0, 28, 24, 0, 21, 0, 0, 0, 0, 0, 0]' : 0.541377}
{'[0, 0, 4, 0, 2, 0, 0, 0, 28, 24, 0, 21, 0, 0, 0, 0, 0, 0]' : 0.489851}
{'[0, 0, 4, 0, 2, 0, 0, 0, 28, 24, 0, 21, 0, 0, 0, 0, 0, 0]' : 0.507807}
{'[0, 0, 4, 0, 2, 0, 0, 0, 28, 24, 0, 21, 0, 0, 0, 0, 0, 0]' : 0.481788}
{'[0, 0, 4, 0, 2, 0, 0, 0, 28, 24, 0, 21, 0, 0, 0, 0, 0, 0]' : 0.48116}
{'[0, 0, 4, 0, 2, 0, 0, 0, 28, 24, 0, 21, 0, 0, 0, 0, 0, 0]' : 0.48182}
{'[0, 0, 4, 0, 2, 0, 0, 0, 28, 24, 0, 21, 0, 0, 0, 0, 0, 0]' : 0.486838}
{'[0, 0, 4, 0, 2, 0, 0, 0, 28, 24, 0, 21, 0, 0, 0, 0, 0, 0]' : 0.489716}
{'[0, 0, 4, 0, 2, 0, 0, 0, 28, 24, 0, 21, 0, 0, 0, 0, 0, 0]' : 0.513196}

out:
 ["{'[0, 0, 4, 0, 2, 0, 0, 0, 28, 24, 0, 21, 0, 0, 0, 0, 0, 0]' : 0.561601}", "{'[0, 0, 4, 0, 2, 0, 0, 0, 28, 24, 0, 21, 0, 0, 0, 0, 0, 0]' : 0.518669}", "{'[0, 0, 4, 0, 2, 0, 0, 0, 28, 24, 0, 21, 0, 0, 0, 0, 0, 0]' : 0.599002}", "{'[0, 0, 4, 0, 2, 0, 0, 0, 28, 24, 0, 21, 0, 0, 0, 0, 0, 0]' : 0.62448}", "{'[0, 0, 4, 0, 2, 0, 0, 0, 28, 24, 0, 21, 0, 0, 0, 0, 0, 0]' : 0.5177}", "{'[0, 0, 4, 0, 2, 0, 0, 0, 28, 24, 0, 21, 0, 0, 0, 0, 0, 0]' : 0.52924}", "{'[0, 0, 4, 0, 2, 0, 0, 0, 28, 24, 0, 21, 0, 0, 0, 0, 0, 0]' : 0.535982}", "{'[0, 0, 4, 0, 2, 0, 0, 0, 28, 24, 0, 21, 0, 0, 0, 0, 0, 0]' : 0.528901}", "{'[0, 0, 4, 0, 2, 0, 0, 0, 28, 24, 0, 21, 0, 0, 0, 0, 0, 0]' : 0.585174}", "{'[0, 0, 4, 0, 2, 0, 0, 0, 28, 24, 0, 21, 0, 0, 0, 0, 0, 0]' : 0.507256}", "{'[0, 0, 4, 0, 2, 0, 0, 0, 28, 24, 0, 21, 0, 0, 0, 0, 0, 0]' : 0.566593}", "{'[0, 0, 4, 0, 2, 0, 0, 0, 28, 24, 0, 21, 0, 0, 0, 0, 0, 0]' : 0.538262}", "{'[0, 0, 4, 0, 2, 0, 0, 0, 28, 24, 0, 21, 0, 0, 0, 0, 0, 0]' : 0.499223}", "{'[0, 0, 4, 0, 2, 0, 0, 0, 28, 24, 0, 21, 0, 0, 0, 0, 0, 0]' : 0.503292}", "{'[0, 0, 4, 0, 2, 0, 0, 0, 28, 24, 0, 21, 0, 0, 0, 0, 0, 0]' : 0.522816}", "{'[0, 0, 4, 0, 2, 0, 0, 0, 28, 24, 0, 21, 0, 0, 0, 0, 0, 0]' : 0.542445}", "{'[0, 0, 4, 0, 2, 0, 0, 0, 28, 24, 0, 21, 0, 0, 0, 0, 0, 0]' : 0.532758}", "{'[0, 0, 4, 0, 2, 0, 0, 0, 28, 24, 0, 21, 0, 0, 0, 0, 0, 0]' : 0.529244}", "{'[0, 0, 4, 0, 2, 0, 0, 0, 28, 24, 0, 21, 0, 0, 0, 0, 0, 0]' : 0.47826}", "{'[0, 0, 4, 0, 2, 0, 0, 0, 28, 24, 0, 21, 0, 0, 0, 0, 0, 0]' : 0.484044}", "{'[0, 0, 4, 0, 2, 0, 0, 0, 28, 24, 0, 21, 0, 0, 0, 0, 0, 0]' : 0.48164}", "{'[0, 0, 4, 0, 2, 0, 0, 0, 28, 24, 0, 21, 0, 0, 0, 0, 0, 0]' : 0.541377}", "{'[0, 0, 4, 0, 2, 0, 0, 0, 28, 24, 0, 21, 0, 0, 0, 0, 0, 0]' : 0.489851}", "{'[0, 0, 4, 0, 2, 0, 0, 0, 28, 24, 0, 21, 0, 0, 0, 0, 0, 0]' : 0.507807}", "{'[0, 0, 4, 0, 2, 0, 0, 0, 28, 24, 0, 21, 0, 0, 0, 0, 0, 0]' : 0.481788}", "{'[0, 0, 4, 0, 2, 0, 0, 0, 28, 24, 0, 21, 0, 0, 0, 0, 0, 0]' : 0.48116}", "{'[0, 0, 4, 0, 2, 0, 0, 0, 28, 24, 0, 21, 0, 0, 0, 0, 0, 0]' : 0.48182}", "{'[0, 0, 4, 0, 2, 0, 0, 0, 28, 24, 0, 21, 0, 0, 0, 0, 0, 0]' : 0.486838}", "{'[0, 0, 4, 0, 2, 0, 0, 0, 28, 24, 0, 21, 0, 0, 0, 0, 0, 0]' : 0.489716}", "{'[0, 0, 4, 0, 2, 0, 0, 0, 28, 24, 0, 21, 0, 0, 0, 0, 0, 0]' : 0.513196}"]
returning from 'run': {'[0, 0, 4, 0, 2, 0, 0, 0, 28, 24, 0, 21, 0, 0, 0, 0, 0, 0]': ([0.561601, 0.518669, 0.599002, 0.62448, 0.5177, 0.52924, 0.535982, 0.528901, 0.585174, 0.507256, 0.566593, 0.538262, 0.499223, 0.503292, 0.522816, 0.542445, 0.532758, 0.529244, 0.47826, 0.484044, 0.48164, 0.541377, 0.489851, 0.507807, 0.481788, 0.48116, 0.48182, 0.486838, 0.489716, 0.513196], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 4, 0, 2, 0, 0, 0, 28, 24, 0, 21, 0, 0, 0, 0, 0, 0]': ([0.561601, 0.518669, 0.599002, 0.62448, 0.5177, 0.52924, 0.535982, 0.528901, 0.585174, 0.507256, 0.566593, 0.538262, 0.499223, 0.503292, 0.522816, 0.542445, 0.532758, 0.529244, 0.47826, 0.484044, 0.48164, 0.541377, 0.489851, 0.507807, 0.481788, 0.48116, 0.48182, 0.486838, 0.489716, 0.513196], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	30
        Max loop nest depth: 	5
        Additions: 		3823
        Multiplications: 	990
        Divisions: 		0
        Logical: 		0
        Reads: 			5795
        Writes: 		614
        Comparisons:		30
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest23.exe __orio_perftest23.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest23.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest23.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest23.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest23.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	5
        Additions: 		396
        Multiplications: 	102
        Divisions: 		0
        Logical: 		0
        Reads: 			789
        Writes: 		124
        Comparisons:		25
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest24.exe __orio_perftest24.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest24.exe  
Program Test Output: 
{'[0, 4, 3, 2, 4, 6, 0, 1, 6, 1, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.536665}
{'[0, 4, 3, 2, 4, 6, 0, 1, 6, 1, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.524936}
{'[0, 4, 3, 2, 4, 6, 0, 1, 6, 1, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.513724}
{'[0, 4, 3, 2, 4, 6, 0, 1, 6, 1, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.515677}
{'[0, 4, 3, 2, 4, 6, 0, 1, 6, 1, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.506916}
{'[0, 4, 3, 2, 4, 6, 0, 1, 6, 1, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.509636}
{'[0, 4, 3, 2, 4, 6, 0, 1, 6, 1, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.507187}
{'[0, 4, 3, 2, 4, 6, 0, 1, 6, 1, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.514019}
{'[0, 4, 3, 2, 4, 6, 0, 1, 6, 1, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.510958}
{'[0, 4, 3, 2, 4, 6, 0, 1, 6, 1, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.50743}
{'[0, 4, 3, 2, 4, 6, 0, 1, 6, 1, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.510712}
{'[0, 4, 3, 2, 4, 6, 0, 1, 6, 1, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.51015}
{'[0, 4, 3, 2, 4, 6, 0, 1, 6, 1, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.515935}
{'[0, 4, 3, 2, 4, 6, 0, 1, 6, 1, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.50878}
{'[0, 4, 3, 2, 4, 6, 0, 1, 6, 1, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.513303}
{'[0, 4, 3, 2, 4, 6, 0, 1, 6, 1, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.511622}
{'[0, 4, 3, 2, 4, 6, 0, 1, 6, 1, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.510741}
{'[0, 4, 3, 2, 4, 6, 0, 1, 6, 1, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.508082}
{'[0, 4, 3, 2, 4, 6, 0, 1, 6, 1, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.513222}
{'[0, 4, 3, 2, 4, 6, 0, 1, 6, 1, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.508404}
{'[0, 4, 3, 2, 4, 6, 0, 1, 6, 1, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.510595}
{'[0, 4, 3, 2, 4, 6, 0, 1, 6, 1, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.507615}
{'[0, 4, 3, 2, 4, 6, 0, 1, 6, 1, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.508249}
{'[0, 4, 3, 2, 4, 6, 0, 1, 6, 1, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.507671}
{'[0, 4, 3, 2, 4, 6, 0, 1, 6, 1, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.504638}
{'[0, 4, 3, 2, 4, 6, 0, 1, 6, 1, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.508098}
{'[0, 4, 3, 2, 4, 6, 0, 1, 6, 1, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.505953}
{'[0, 4, 3, 2, 4, 6, 0, 1, 6, 1, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.508281}
{'[0, 4, 3, 2, 4, 6, 0, 1, 6, 1, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.507136}
{'[0, 4, 3, 2, 4, 6, 0, 1, 6, 1, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.505345}

out:
 ["{'[0, 4, 3, 2, 4, 6, 0, 1, 6, 1, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.536665}", "{'[0, 4, 3, 2, 4, 6, 0, 1, 6, 1, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.524936}", "{'[0, 4, 3, 2, 4, 6, 0, 1, 6, 1, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.513724}", "{'[0, 4, 3, 2, 4, 6, 0, 1, 6, 1, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.515677}", "{'[0, 4, 3, 2, 4, 6, 0, 1, 6, 1, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.506916}", "{'[0, 4, 3, 2, 4, 6, 0, 1, 6, 1, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.509636}", "{'[0, 4, 3, 2, 4, 6, 0, 1, 6, 1, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.507187}", "{'[0, 4, 3, 2, 4, 6, 0, 1, 6, 1, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.514019}", "{'[0, 4, 3, 2, 4, 6, 0, 1, 6, 1, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.510958}", "{'[0, 4, 3, 2, 4, 6, 0, 1, 6, 1, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.50743}", "{'[0, 4, 3, 2, 4, 6, 0, 1, 6, 1, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.510712}", "{'[0, 4, 3, 2, 4, 6, 0, 1, 6, 1, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.51015}", "{'[0, 4, 3, 2, 4, 6, 0, 1, 6, 1, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.515935}", "{'[0, 4, 3, 2, 4, 6, 0, 1, 6, 1, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.50878}", "{'[0, 4, 3, 2, 4, 6, 0, 1, 6, 1, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.513303}", "{'[0, 4, 3, 2, 4, 6, 0, 1, 6, 1, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.511622}", "{'[0, 4, 3, 2, 4, 6, 0, 1, 6, 1, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.510741}", "{'[0, 4, 3, 2, 4, 6, 0, 1, 6, 1, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.508082}", "{'[0, 4, 3, 2, 4, 6, 0, 1, 6, 1, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.513222}", "{'[0, 4, 3, 2, 4, 6, 0, 1, 6, 1, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.508404}", "{'[0, 4, 3, 2, 4, 6, 0, 1, 6, 1, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.510595}", "{'[0, 4, 3, 2, 4, 6, 0, 1, 6, 1, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.507615}", "{'[0, 4, 3, 2, 4, 6, 0, 1, 6, 1, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.508249}", "{'[0, 4, 3, 2, 4, 6, 0, 1, 6, 1, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.507671}", "{'[0, 4, 3, 2, 4, 6, 0, 1, 6, 1, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.504638}", "{'[0, 4, 3, 2, 4, 6, 0, 1, 6, 1, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.508098}", "{'[0, 4, 3, 2, 4, 6, 0, 1, 6, 1, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.505953}", "{'[0, 4, 3, 2, 4, 6, 0, 1, 6, 1, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.508281}", "{'[0, 4, 3, 2, 4, 6, 0, 1, 6, 1, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.507136}", "{'[0, 4, 3, 2, 4, 6, 0, 1, 6, 1, 0, 0, 0, 1, 1, 0, 0, 1]' : 0.505345}"]
returning from 'run': {'[0, 4, 3, 2, 4, 6, 0, 1, 6, 1, 0, 0, 0, 1, 1, 0, 0, 1]': ([0.536665, 0.524936, 0.513724, 0.515677, 0.506916, 0.509636, 0.507187, 0.514019, 0.510958, 0.50743, 0.510712, 0.51015, 0.515935, 0.50878, 0.513303, 0.511622, 0.510741, 0.508082, 0.513222, 0.508404, 0.510595, 0.507615, 0.508249, 0.507671, 0.504638, 0.508098, 0.505953, 0.508281, 0.507136, 0.505345], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 4, 3, 2, 4, 6, 0, 1, 6, 1, 0, 0, 0, 1, 1, 0, 0, 1]': ([0.536665, 0.524936, 0.513724, 0.515677, 0.506916, 0.509636, 0.507187, 0.514019, 0.510958, 0.50743, 0.510712, 0.51015, 0.515935, 0.50878, 0.513303, 0.511622, 0.510741, 0.508082, 0.513222, 0.508404, 0.510595, 0.507615, 0.508249, 0.507671, 0.504638, 0.508098, 0.505953, 0.508281, 0.507136, 0.505345], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		219
        Multiplications: 	76
        Divisions: 		0
        Logical: 		0
        Reads: 			504
        Writes: 		73
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest25.exe __orio_perftest25.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest25.exe  
Program Test Output: 
{'[0, 4, 5, 6, 6, 0, 0, 1, 3, 0, 28, 0, 0, 0, 1, 0, 1, 0]' : 0.83401}
{'[0, 4, 5, 6, 6, 0, 0, 1, 3, 0, 28, 0, 0, 0, 1, 0, 1, 0]' : 0.852207}
{'[0, 4, 5, 6, 6, 0, 0, 1, 3, 0, 28, 0, 0, 0, 1, 0, 1, 0]' : 0.836436}
{'[0, 4, 5, 6, 6, 0, 0, 1, 3, 0, 28, 0, 0, 0, 1, 0, 1, 0]' : 0.837874}
{'[0, 4, 5, 6, 6, 0, 0, 1, 3, 0, 28, 0, 0, 0, 1, 0, 1, 0]' : 0.845261}
{'[0, 4, 5, 6, 6, 0, 0, 1, 3, 0, 28, 0, 0, 0, 1, 0, 1, 0]' : 0.842727}
{'[0, 4, 5, 6, 6, 0, 0, 1, 3, 0, 28, 0, 0, 0, 1, 0, 1, 0]' : 0.878591}
{'[0, 4, 5, 6, 6, 0, 0, 1, 3, 0, 28, 0, 0, 0, 1, 0, 1, 0]' : 0.880638}
{'[0, 4, 5, 6, 6, 0, 0, 1, 3, 0, 28, 0, 0, 0, 1, 0, 1, 0]' : 0.861096}
{'[0, 4, 5, 6, 6, 0, 0, 1, 3, 0, 28, 0, 0, 0, 1, 0, 1, 0]' : 0.844028}
{'[0, 4, 5, 6, 6, 0, 0, 1, 3, 0, 28, 0, 0, 0, 1, 0, 1, 0]' : 0.831356}
{'[0, 4, 5, 6, 6, 0, 0, 1, 3, 0, 28, 0, 0, 0, 1, 0, 1, 0]' : 0.830303}
{'[0, 4, 5, 6, 6, 0, 0, 1, 3, 0, 28, 0, 0, 0, 1, 0, 1, 0]' : 0.834196}
{'[0, 4, 5, 6, 6, 0, 0, 1, 3, 0, 28, 0, 0, 0, 1, 0, 1, 0]' : 0.832964}
{'[0, 4, 5, 6, 6, 0, 0, 1, 3, 0, 28, 0, 0, 0, 1, 0, 1, 0]' : 0.839814}
{'[0, 4, 5, 6, 6, 0, 0, 1, 3, 0, 28, 0, 0, 0, 1, 0, 1, 0]' : 0.844381}
{'[0, 4, 5, 6, 6, 0, 0, 1, 3, 0, 28, 0, 0, 0, 1, 0, 1, 0]' : 0.842776}
{'[0, 4, 5, 6, 6, 0, 0, 1, 3, 0, 28, 0, 0, 0, 1, 0, 1, 0]' : 0.844441}
{'[0, 4, 5, 6, 6, 0, 0, 1, 3, 0, 28, 0, 0, 0, 1, 0, 1, 0]' : 0.856542}
{'[0, 4, 5, 6, 6, 0, 0, 1, 3, 0, 28, 0, 0, 0, 1, 0, 1, 0]' : 0.847222}
{'[0, 4, 5, 6, 6, 0, 0, 1, 3, 0, 28, 0, 0, 0, 1, 0, 1, 0]' : 0.879966}
{'[0, 4, 5, 6, 6, 0, 0, 1, 3, 0, 28, 0, 0, 0, 1, 0, 1, 0]' : 0.883627}
{'[0, 4, 5, 6, 6, 0, 0, 1, 3, 0, 28, 0, 0, 0, 1, 0, 1, 0]' : 0.833891}
{'[0, 4, 5, 6, 6, 0, 0, 1, 3, 0, 28, 0, 0, 0, 1, 0, 1, 0]' : 0.83249}
{'[0, 4, 5, 6, 6, 0, 0, 1, 3, 0, 28, 0, 0, 0, 1, 0, 1, 0]' : 0.832059}
{'[0, 4, 5, 6, 6, 0, 0, 1, 3, 0, 28, 0, 0, 0, 1, 0, 1, 0]' : 0.836784}
{'[0, 4, 5, 6, 6, 0, 0, 1, 3, 0, 28, 0, 0, 0, 1, 0, 1, 0]' : 0.842213}
{'[0, 4, 5, 6, 6, 0, 0, 1, 3, 0, 28, 0, 0, 0, 1, 0, 1, 0]' : 0.875763}
{'[0, 4, 5, 6, 6, 0, 0, 1, 3, 0, 28, 0, 0, 0, 1, 0, 1, 0]' : 0.850739}
{'[0, 4, 5, 6, 6, 0, 0, 1, 3, 0, 28, 0, 0, 0, 1, 0, 1, 0]' : 0.841892}

out:
 ["{'[0, 4, 5, 6, 6, 0, 0, 1, 3, 0, 28, 0, 0, 0, 1, 0, 1, 0]' : 0.83401}", "{'[0, 4, 5, 6, 6, 0, 0, 1, 3, 0, 28, 0, 0, 0, 1, 0, 1, 0]' : 0.852207}", "{'[0, 4, 5, 6, 6, 0, 0, 1, 3, 0, 28, 0, 0, 0, 1, 0, 1, 0]' : 0.836436}", "{'[0, 4, 5, 6, 6, 0, 0, 1, 3, 0, 28, 0, 0, 0, 1, 0, 1, 0]' : 0.837874}", "{'[0, 4, 5, 6, 6, 0, 0, 1, 3, 0, 28, 0, 0, 0, 1, 0, 1, 0]' : 0.845261}", "{'[0, 4, 5, 6, 6, 0, 0, 1, 3, 0, 28, 0, 0, 0, 1, 0, 1, 0]' : 0.842727}", "{'[0, 4, 5, 6, 6, 0, 0, 1, 3, 0, 28, 0, 0, 0, 1, 0, 1, 0]' : 0.878591}", "{'[0, 4, 5, 6, 6, 0, 0, 1, 3, 0, 28, 0, 0, 0, 1, 0, 1, 0]' : 0.880638}", "{'[0, 4, 5, 6, 6, 0, 0, 1, 3, 0, 28, 0, 0, 0, 1, 0, 1, 0]' : 0.861096}", "{'[0, 4, 5, 6, 6, 0, 0, 1, 3, 0, 28, 0, 0, 0, 1, 0, 1, 0]' : 0.844028}", "{'[0, 4, 5, 6, 6, 0, 0, 1, 3, 0, 28, 0, 0, 0, 1, 0, 1, 0]' : 0.831356}", "{'[0, 4, 5, 6, 6, 0, 0, 1, 3, 0, 28, 0, 0, 0, 1, 0, 1, 0]' : 0.830303}", "{'[0, 4, 5, 6, 6, 0, 0, 1, 3, 0, 28, 0, 0, 0, 1, 0, 1, 0]' : 0.834196}", "{'[0, 4, 5, 6, 6, 0, 0, 1, 3, 0, 28, 0, 0, 0, 1, 0, 1, 0]' : 0.832964}", "{'[0, 4, 5, 6, 6, 0, 0, 1, 3, 0, 28, 0, 0, 0, 1, 0, 1, 0]' : 0.839814}", "{'[0, 4, 5, 6, 6, 0, 0, 1, 3, 0, 28, 0, 0, 0, 1, 0, 1, 0]' : 0.844381}", "{'[0, 4, 5, 6, 6, 0, 0, 1, 3, 0, 28, 0, 0, 0, 1, 0, 1, 0]' : 0.842776}", "{'[0, 4, 5, 6, 6, 0, 0, 1, 3, 0, 28, 0, 0, 0, 1, 0, 1, 0]' : 0.844441}", "{'[0, 4, 5, 6, 6, 0, 0, 1, 3, 0, 28, 0, 0, 0, 1, 0, 1, 0]' : 0.856542}", "{'[0, 4, 5, 6, 6, 0, 0, 1, 3, 0, 28, 0, 0, 0, 1, 0, 1, 0]' : 0.847222}", "{'[0, 4, 5, 6, 6, 0, 0, 1, 3, 0, 28, 0, 0, 0, 1, 0, 1, 0]' : 0.879966}", "{'[0, 4, 5, 6, 6, 0, 0, 1, 3, 0, 28, 0, 0, 0, 1, 0, 1, 0]' : 0.883627}", "{'[0, 4, 5, 6, 6, 0, 0, 1, 3, 0, 28, 0, 0, 0, 1, 0, 1, 0]' : 0.833891}", "{'[0, 4, 5, 6, 6, 0, 0, 1, 3, 0, 28, 0, 0, 0, 1, 0, 1, 0]' : 0.83249}", "{'[0, 4, 5, 6, 6, 0, 0, 1, 3, 0, 28, 0, 0, 0, 1, 0, 1, 0]' : 0.832059}", "{'[0, 4, 5, 6, 6, 0, 0, 1, 3, 0, 28, 0, 0, 0, 1, 0, 1, 0]' : 0.836784}", "{'[0, 4, 5, 6, 6, 0, 0, 1, 3, 0, 28, 0, 0, 0, 1, 0, 1, 0]' : 0.842213}", "{'[0, 4, 5, 6, 6, 0, 0, 1, 3, 0, 28, 0, 0, 0, 1, 0, 1, 0]' : 0.875763}", "{'[0, 4, 5, 6, 6, 0, 0, 1, 3, 0, 28, 0, 0, 0, 1, 0, 1, 0]' : 0.850739}", "{'[0, 4, 5, 6, 6, 0, 0, 1, 3, 0, 28, 0, 0, 0, 1, 0, 1, 0]' : 0.841892}"]
returning from 'run': {'[0, 4, 5, 6, 6, 0, 0, 1, 3, 0, 28, 0, 0, 0, 1, 0, 1, 0]': ([0.83401, 0.852207, 0.836436, 0.837874, 0.845261, 0.842727, 0.878591, 0.880638, 0.861096, 0.844028, 0.831356, 0.830303, 0.834196, 0.832964, 0.839814, 0.844381, 0.842776, 0.844441, 0.856542, 0.847222, 0.879966, 0.883627, 0.833891, 0.83249, 0.832059, 0.836784, 0.842213, 0.875763, 0.850739, 0.841892], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 4, 5, 6, 6, 0, 0, 1, 3, 0, 28, 0, 0, 0, 1, 0, 1, 0]': ([0.83401, 0.852207, 0.836436, 0.837874, 0.845261, 0.842727, 0.878591, 0.880638, 0.861096, 0.844028, 0.831356, 0.830303, 0.834196, 0.832964, 0.839814, 0.844381, 0.842776, 0.844441, 0.856542, 0.847222, 0.879966, 0.883627, 0.833891, 0.83249, 0.832059, 0.836784, 0.842213, 0.875763, 0.850739, 0.841892], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
Code stats:
        Number of loops: 	29
        Max loop nest depth: 	5
        Additions: 		880
        Multiplications: 	264
        Divisions: 		0
        Logical: 		0
        Reads: 			1613
        Writes: 		233
        Comparisons:		29
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest26.exe __orio_perftest26.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest26.exe  
Program Test Output: 
{'[3, 0, 1, 1, 5, 3, 0, 0, 16, 1, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.304111}
{'[3, 0, 1, 1, 5, 3, 0, 0, 16, 1, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.296252}
{'[3, 0, 1, 1, 5, 3, 0, 0, 16, 1, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.363627}
{'[3, 0, 1, 1, 5, 3, 0, 0, 16, 1, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.294197}
{'[3, 0, 1, 1, 5, 3, 0, 0, 16, 1, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.334816}
{'[3, 0, 1, 1, 5, 3, 0, 0, 16, 1, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.332139}
{'[3, 0, 1, 1, 5, 3, 0, 0, 16, 1, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.301562}
{'[3, 0, 1, 1, 5, 3, 0, 0, 16, 1, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.394688}
{'[3, 0, 1, 1, 5, 3, 0, 0, 16, 1, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.340033}
{'[3, 0, 1, 1, 5, 3, 0, 0, 16, 1, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.384143}
{'[3, 0, 1, 1, 5, 3, 0, 0, 16, 1, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.3111}
{'[3, 0, 1, 1, 5, 3, 0, 0, 16, 1, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.339194}
{'[3, 0, 1, 1, 5, 3, 0, 0, 16, 1, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.345624}
{'[3, 0, 1, 1, 5, 3, 0, 0, 16, 1, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.316901}
{'[3, 0, 1, 1, 5, 3, 0, 0, 16, 1, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.293099}
{'[3, 0, 1, 1, 5, 3, 0, 0, 16, 1, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.300256}
{'[3, 0, 1, 1, 5, 3, 0, 0, 16, 1, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.30391}
{'[3, 0, 1, 1, 5, 3, 0, 0, 16, 1, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.311475}
{'[3, 0, 1, 1, 5, 3, 0, 0, 16, 1, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.365827}
{'[3, 0, 1, 1, 5, 3, 0, 0, 16, 1, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.336773}
{'[3, 0, 1, 1, 5, 3, 0, 0, 16, 1, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.317201}
{'[3, 0, 1, 1, 5, 3, 0, 0, 16, 1, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.320985}
{'[3, 0, 1, 1, 5, 3, 0, 0, 16, 1, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.311233}
{'[3, 0, 1, 1, 5, 3, 0, 0, 16, 1, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.343247}
{'[3, 0, 1, 1, 5, 3, 0, 0, 16, 1, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.322712}
{'[3, 0, 1, 1, 5, 3, 0, 0, 16, 1, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.311352}
{'[3, 0, 1, 1, 5, 3, 0, 0, 16, 1, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.301723}
{'[3, 0, 1, 1, 5, 3, 0, 0, 16, 1, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.312145}
{'[3, 0, 1, 1, 5, 3, 0, 0, 16, 1, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.34592}
{'[3, 0, 1, 1, 5, 3, 0, 0, 16, 1, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.311429}

out:
 ["{'[3, 0, 1, 1, 5, 3, 0, 0, 16, 1, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.304111}", "{'[3, 0, 1, 1, 5, 3, 0, 0, 16, 1, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.296252}", "{'[3, 0, 1, 1, 5, 3, 0, 0, 16, 1, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.363627}", "{'[3, 0, 1, 1, 5, 3, 0, 0, 16, 1, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.294197}", "{'[3, 0, 1, 1, 5, 3, 0, 0, 16, 1, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.334816}", "{'[3, 0, 1, 1, 5, 3, 0, 0, 16, 1, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.332139}", "{'[3, 0, 1, 1, 5, 3, 0, 0, 16, 1, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.301562}", "{'[3, 0, 1, 1, 5, 3, 0, 0, 16, 1, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.394688}", "{'[3, 0, 1, 1, 5, 3, 0, 0, 16, 1, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.340033}", "{'[3, 0, 1, 1, 5, 3, 0, 0, 16, 1, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.384143}", "{'[3, 0, 1, 1, 5, 3, 0, 0, 16, 1, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.3111}", "{'[3, 0, 1, 1, 5, 3, 0, 0, 16, 1, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.339194}", "{'[3, 0, 1, 1, 5, 3, 0, 0, 16, 1, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.345624}", "{'[3, 0, 1, 1, 5, 3, 0, 0, 16, 1, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.316901}", "{'[3, 0, 1, 1, 5, 3, 0, 0, 16, 1, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.293099}", "{'[3, 0, 1, 1, 5, 3, 0, 0, 16, 1, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.300256}", "{'[3, 0, 1, 1, 5, 3, 0, 0, 16, 1, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.30391}", "{'[3, 0, 1, 1, 5, 3, 0, 0, 16, 1, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.311475}", "{'[3, 0, 1, 1, 5, 3, 0, 0, 16, 1, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.365827}", "{'[3, 0, 1, 1, 5, 3, 0, 0, 16, 1, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.336773}", "{'[3, 0, 1, 1, 5, 3, 0, 0, 16, 1, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.317201}", "{'[3, 0, 1, 1, 5, 3, 0, 0, 16, 1, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.320985}", "{'[3, 0, 1, 1, 5, 3, 0, 0, 16, 1, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.311233}", "{'[3, 0, 1, 1, 5, 3, 0, 0, 16, 1, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.343247}", "{'[3, 0, 1, 1, 5, 3, 0, 0, 16, 1, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.322712}", "{'[3, 0, 1, 1, 5, 3, 0, 0, 16, 1, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.311352}", "{'[3, 0, 1, 1, 5, 3, 0, 0, 16, 1, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.301723}", "{'[3, 0, 1, 1, 5, 3, 0, 0, 16, 1, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.312145}", "{'[3, 0, 1, 1, 5, 3, 0, 0, 16, 1, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.34592}", "{'[3, 0, 1, 1, 5, 3, 0, 0, 16, 1, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.311429}"]
returning from 'run': {'[3, 0, 1, 1, 5, 3, 0, 0, 16, 1, 0, 1, 1, 0, 1, 0, 1, 1]': ([0.304111, 0.296252, 0.363627, 0.294197, 0.334816, 0.332139, 0.301562, 0.394688, 0.340033, 0.384143, 0.3111, 0.339194, 0.345624, 0.316901, 0.293099, 0.300256, 0.30391, 0.311475, 0.365827, 0.336773, 0.317201, 0.320985, 0.311233, 0.343247, 0.322712, 0.311352, 0.301723, 0.312145, 0.34592, 0.311429], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 0, 1, 1, 5, 3, 0, 0, 16, 1, 0, 1, 1, 0, 1, 0, 1, 1]': ([0.304111, 0.296252, 0.363627, 0.294197, 0.334816, 0.332139, 0.301562, 0.394688, 0.340033, 0.384143, 0.3111, 0.339194, 0.345624, 0.316901, 0.293099, 0.300256, 0.30391, 0.311475, 0.365827, 0.336773, 0.317201, 0.320985, 0.311233, 0.343247, 0.322712, 0.311352, 0.301723, 0.312145, 0.34592, 0.311429], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	5
        Additions: 		1796
        Multiplications: 	840
        Divisions: 		0
        Logical: 		0
        Reads: 			3643
        Writes: 		648
        Comparisons:		18
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest27.exe __orio_perftest27.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest27.exe  
Program Test Output: 
{'[0, 2, 6, 6, 2, 0, 0, 0, 0, 5, 25, 0, 0, 0, 2, 1, 1, 1]' : 0.301228}
{'[0, 2, 6, 6, 2, 0, 0, 0, 0, 5, 25, 0, 0, 0, 2, 1, 1, 1]' : 0.303704}
{'[0, 2, 6, 6, 2, 0, 0, 0, 0, 5, 25, 0, 0, 0, 2, 1, 1, 1]' : 0.299948}
{'[0, 2, 6, 6, 2, 0, 0, 0, 0, 5, 25, 0, 0, 0, 2, 1, 1, 1]' : 0.298734}
{'[0, 2, 6, 6, 2, 0, 0, 0, 0, 5, 25, 0, 0, 0, 2, 1, 1, 1]' : 0.300092}
{'[0, 2, 6, 6, 2, 0, 0, 0, 0, 5, 25, 0, 0, 0, 2, 1, 1, 1]' : 0.297793}
{'[0, 2, 6, 6, 2, 0, 0, 0, 0, 5, 25, 0, 0, 0, 2, 1, 1, 1]' : 0.297812}
{'[0, 2, 6, 6, 2, 0, 0, 0, 0, 5, 25, 0, 0, 0, 2, 1, 1, 1]' : 0.298704}
{'[0, 2, 6, 6, 2, 0, 0, 0, 0, 5, 25, 0, 0, 0, 2, 1, 1, 1]' : 0.299994}
{'[0, 2, 6, 6, 2, 0, 0, 0, 0, 5, 25, 0, 0, 0, 2, 1, 1, 1]' : 0.299198}
{'[0, 2, 6, 6, 2, 0, 0, 0, 0, 5, 25, 0, 0, 0, 2, 1, 1, 1]' : 0.29941}
{'[0, 2, 6, 6, 2, 0, 0, 0, 0, 5, 25, 0, 0, 0, 2, 1, 1, 1]' : 0.300683}
{'[0, 2, 6, 6, 2, 0, 0, 0, 0, 5, 25, 0, 0, 0, 2, 1, 1, 1]' : 0.299014}
{'[0, 2, 6, 6, 2, 0, 0, 0, 0, 5, 25, 0, 0, 0, 2, 1, 1, 1]' : 0.297906}
{'[0, 2, 6, 6, 2, 0, 0, 0, 0, 5, 25, 0, 0, 0, 2, 1, 1, 1]' : 0.298902}
{'[0, 2, 6, 6, 2, 0, 0, 0, 0, 5, 25, 0, 0, 0, 2, 1, 1, 1]' : 0.298863}
{'[0, 2, 6, 6, 2, 0, 0, 0, 0, 5, 25, 0, 0, 0, 2, 1, 1, 1]' : 0.298604}
{'[0, 2, 6, 6, 2, 0, 0, 0, 0, 5, 25, 0, 0, 0, 2, 1, 1, 1]' : 0.299011}
{'[0, 2, 6, 6, 2, 0, 0, 0, 0, 5, 25, 0, 0, 0, 2, 1, 1, 1]' : 0.300297}
{'[0, 2, 6, 6, 2, 0, 0, 0, 0, 5, 25, 0, 0, 0, 2, 1, 1, 1]' : 0.298997}
{'[0, 2, 6, 6, 2, 0, 0, 0, 0, 5, 25, 0, 0, 0, 2, 1, 1, 1]' : 0.298472}
{'[0, 2, 6, 6, 2, 0, 0, 0, 0, 5, 25, 0, 0, 0, 2, 1, 1, 1]' : 0.299132}
{'[0, 2, 6, 6, 2, 0, 0, 0, 0, 5, 25, 0, 0, 0, 2, 1, 1, 1]' : 0.298503}
{'[0, 2, 6, 6, 2, 0, 0, 0, 0, 5, 25, 0, 0, 0, 2, 1, 1, 1]' : 0.296984}
{'[0, 2, 6, 6, 2, 0, 0, 0, 0, 5, 25, 0, 0, 0, 2, 1, 1, 1]' : 0.297259}
{'[0, 2, 6, 6, 2, 0, 0, 0, 0, 5, 25, 0, 0, 0, 2, 1, 1, 1]' : 0.29858}
{'[0, 2, 6, 6, 2, 0, 0, 0, 0, 5, 25, 0, 0, 0, 2, 1, 1, 1]' : 0.298279}
{'[0, 2, 6, 6, 2, 0, 0, 0, 0, 5, 25, 0, 0, 0, 2, 1, 1, 1]' : 0.297372}
{'[0, 2, 6, 6, 2, 0, 0, 0, 0, 5, 25, 0, 0, 0, 2, 1, 1, 1]' : 0.298562}
{'[0, 2, 6, 6, 2, 0, 0, 0, 0, 5, 25, 0, 0, 0, 2, 1, 1, 1]' : 0.298747}

out:
 ["{'[0, 2, 6, 6, 2, 0, 0, 0, 0, 5, 25, 0, 0, 0, 2, 1, 1, 1]' : 0.301228}", "{'[0, 2, 6, 6, 2, 0, 0, 0, 0, 5, 25, 0, 0, 0, 2, 1, 1, 1]' : 0.303704}", "{'[0, 2, 6, 6, 2, 0, 0, 0, 0, 5, 25, 0, 0, 0, 2, 1, 1, 1]' : 0.299948}", "{'[0, 2, 6, 6, 2, 0, 0, 0, 0, 5, 25, 0, 0, 0, 2, 1, 1, 1]' : 0.298734}", "{'[0, 2, 6, 6, 2, 0, 0, 0, 0, 5, 25, 0, 0, 0, 2, 1, 1, 1]' : 0.300092}", "{'[0, 2, 6, 6, 2, 0, 0, 0, 0, 5, 25, 0, 0, 0, 2, 1, 1, 1]' : 0.297793}", "{'[0, 2, 6, 6, 2, 0, 0, 0, 0, 5, 25, 0, 0, 0, 2, 1, 1, 1]' : 0.297812}", "{'[0, 2, 6, 6, 2, 0, 0, 0, 0, 5, 25, 0, 0, 0, 2, 1, 1, 1]' : 0.298704}", "{'[0, 2, 6, 6, 2, 0, 0, 0, 0, 5, 25, 0, 0, 0, 2, 1, 1, 1]' : 0.299994}", "{'[0, 2, 6, 6, 2, 0, 0, 0, 0, 5, 25, 0, 0, 0, 2, 1, 1, 1]' : 0.299198}", "{'[0, 2, 6, 6, 2, 0, 0, 0, 0, 5, 25, 0, 0, 0, 2, 1, 1, 1]' : 0.29941}", "{'[0, 2, 6, 6, 2, 0, 0, 0, 0, 5, 25, 0, 0, 0, 2, 1, 1, 1]' : 0.300683}", "{'[0, 2, 6, 6, 2, 0, 0, 0, 0, 5, 25, 0, 0, 0, 2, 1, 1, 1]' : 0.299014}", "{'[0, 2, 6, 6, 2, 0, 0, 0, 0, 5, 25, 0, 0, 0, 2, 1, 1, 1]' : 0.297906}", "{'[0, 2, 6, 6, 2, 0, 0, 0, 0, 5, 25, 0, 0, 0, 2, 1, 1, 1]' : 0.298902}", "{'[0, 2, 6, 6, 2, 0, 0, 0, 0, 5, 25, 0, 0, 0, 2, 1, 1, 1]' : 0.298863}", "{'[0, 2, 6, 6, 2, 0, 0, 0, 0, 5, 25, 0, 0, 0, 2, 1, 1, 1]' : 0.298604}", "{'[0, 2, 6, 6, 2, 0, 0, 0, 0, 5, 25, 0, 0, 0, 2, 1, 1, 1]' : 0.299011}", "{'[0, 2, 6, 6, 2, 0, 0, 0, 0, 5, 25, 0, 0, 0, 2, 1, 1, 1]' : 0.300297}", "{'[0, 2, 6, 6, 2, 0, 0, 0, 0, 5, 25, 0, 0, 0, 2, 1, 1, 1]' : 0.298997}", "{'[0, 2, 6, 6, 2, 0, 0, 0, 0, 5, 25, 0, 0, 0, 2, 1, 1, 1]' : 0.298472}", "{'[0, 2, 6, 6, 2, 0, 0, 0, 0, 5, 25, 0, 0, 0, 2, 1, 1, 1]' : 0.299132}", "{'[0, 2, 6, 6, 2, 0, 0, 0, 0, 5, 25, 0, 0, 0, 2, 1, 1, 1]' : 0.298503}", "{'[0, 2, 6, 6, 2, 0, 0, 0, 0, 5, 25, 0, 0, 0, 2, 1, 1, 1]' : 0.296984}", "{'[0, 2, 6, 6, 2, 0, 0, 0, 0, 5, 25, 0, 0, 0, 2, 1, 1, 1]' : 0.297259}", "{'[0, 2, 6, 6, 2, 0, 0, 0, 0, 5, 25, 0, 0, 0, 2, 1, 1, 1]' : 0.29858}", "{'[0, 2, 6, 6, 2, 0, 0, 0, 0, 5, 25, 0, 0, 0, 2, 1, 1, 1]' : 0.298279}", "{'[0, 2, 6, 6, 2, 0, 0, 0, 0, 5, 25, 0, 0, 0, 2, 1, 1, 1]' : 0.297372}", "{'[0, 2, 6, 6, 2, 0, 0, 0, 0, 5, 25, 0, 0, 0, 2, 1, 1, 1]' : 0.298562}", "{'[0, 2, 6, 6, 2, 0, 0, 0, 0, 5, 25, 0, 0, 0, 2, 1, 1, 1]' : 0.298747}"]
returning from 'run': {'[0, 2, 6, 6, 2, 0, 0, 0, 0, 5, 25, 0, 0, 0, 2, 1, 1, 1]': ([0.301228, 0.303704, 0.299948, 0.298734, 0.300092, 0.297793, 0.297812, 0.298704, 0.299994, 0.299198, 0.29941, 0.300683, 0.299014, 0.297906, 0.298902, 0.298863, 0.298604, 0.299011, 0.300297, 0.298997, 0.298472, 0.299132, 0.298503, 0.296984, 0.297259, 0.29858, 0.298279, 0.297372, 0.298562, 0.298747], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 6, 6, 2, 0, 0, 0, 0, 5, 25, 0, 0, 0, 2, 1, 1, 1]': ([0.301228, 0.303704, 0.299948, 0.298734, 0.300092, 0.297793, 0.297812, 0.298704, 0.299994, 0.299198, 0.29941, 0.300683, 0.299014, 0.297906, 0.298902, 0.298863, 0.298604, 0.299011, 0.300297, 0.298997, 0.298472, 0.299132, 0.298503, 0.296984, 0.297259, 0.29858, 0.298279, 0.297372, 0.298562, 0.298747], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	27
        Max loop nest depth: 	5
        Additions: 		1899
        Multiplications: 	888
        Divisions: 		0
        Logical: 		0
        Reads: 			3816
        Writes: 		679
        Comparisons:		27
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest28.exe __orio_perftest28.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest28.exe  
Program Test Output: 
{'[0, 3, 4, 5, 0, 3, 0, 0, 25, 2, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.470288}
{'[0, 3, 4, 5, 0, 3, 0, 0, 25, 2, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.453837}
{'[0, 3, 4, 5, 0, 3, 0, 0, 25, 2, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.460015}
{'[0, 3, 4, 5, 0, 3, 0, 0, 25, 2, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.459354}
{'[0, 3, 4, 5, 0, 3, 0, 0, 25, 2, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.485655}
{'[0, 3, 4, 5, 0, 3, 0, 0, 25, 2, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.458247}
{'[0, 3, 4, 5, 0, 3, 0, 0, 25, 2, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.467226}
{'[0, 3, 4, 5, 0, 3, 0, 0, 25, 2, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.553919}
{'[0, 3, 4, 5, 0, 3, 0, 0, 25, 2, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.550165}
{'[0, 3, 4, 5, 0, 3, 0, 0, 25, 2, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.471212}
{'[0, 3, 4, 5, 0, 3, 0, 0, 25, 2, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.453885}
{'[0, 3, 4, 5, 0, 3, 0, 0, 25, 2, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.457827}
{'[0, 3, 4, 5, 0, 3, 0, 0, 25, 2, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.530828}
{'[0, 3, 4, 5, 0, 3, 0, 0, 25, 2, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.492854}
{'[0, 3, 4, 5, 0, 3, 0, 0, 25, 2, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.534505}
{'[0, 3, 4, 5, 0, 3, 0, 0, 25, 2, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.470178}
{'[0, 3, 4, 5, 0, 3, 0, 0, 25, 2, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.556911}
{'[0, 3, 4, 5, 0, 3, 0, 0, 25, 2, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.566004}
{'[0, 3, 4, 5, 0, 3, 0, 0, 25, 2, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.536396}
{'[0, 3, 4, 5, 0, 3, 0, 0, 25, 2, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.470068}
{'[0, 3, 4, 5, 0, 3, 0, 0, 25, 2, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.451043}
{'[0, 3, 4, 5, 0, 3, 0, 0, 25, 2, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.453766}
{'[0, 3, 4, 5, 0, 3, 0, 0, 25, 2, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.47284}
{'[0, 3, 4, 5, 0, 3, 0, 0, 25, 2, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.472346}
{'[0, 3, 4, 5, 0, 3, 0, 0, 25, 2, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.452061}
{'[0, 3, 4, 5, 0, 3, 0, 0, 25, 2, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.458793}
{'[0, 3, 4, 5, 0, 3, 0, 0, 25, 2, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.503902}
{'[0, 3, 4, 5, 0, 3, 0, 0, 25, 2, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.460027}
{'[0, 3, 4, 5, 0, 3, 0, 0, 25, 2, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.461975}
{'[0, 3, 4, 5, 0, 3, 0, 0, 25, 2, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.498525}

out:
 ["{'[0, 3, 4, 5, 0, 3, 0, 0, 25, 2, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.470288}", "{'[0, 3, 4, 5, 0, 3, 0, 0, 25, 2, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.453837}", "{'[0, 3, 4, 5, 0, 3, 0, 0, 25, 2, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.460015}", "{'[0, 3, 4, 5, 0, 3, 0, 0, 25, 2, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.459354}", "{'[0, 3, 4, 5, 0, 3, 0, 0, 25, 2, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.485655}", "{'[0, 3, 4, 5, 0, 3, 0, 0, 25, 2, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.458247}", "{'[0, 3, 4, 5, 0, 3, 0, 0, 25, 2, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.467226}", "{'[0, 3, 4, 5, 0, 3, 0, 0, 25, 2, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.553919}", "{'[0, 3, 4, 5, 0, 3, 0, 0, 25, 2, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.550165}", "{'[0, 3, 4, 5, 0, 3, 0, 0, 25, 2, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.471212}", "{'[0, 3, 4, 5, 0, 3, 0, 0, 25, 2, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.453885}", "{'[0, 3, 4, 5, 0, 3, 0, 0, 25, 2, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.457827}", "{'[0, 3, 4, 5, 0, 3, 0, 0, 25, 2, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.530828}", "{'[0, 3, 4, 5, 0, 3, 0, 0, 25, 2, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.492854}", "{'[0, 3, 4, 5, 0, 3, 0, 0, 25, 2, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.534505}", "{'[0, 3, 4, 5, 0, 3, 0, 0, 25, 2, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.470178}", "{'[0, 3, 4, 5, 0, 3, 0, 0, 25, 2, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.556911}", "{'[0, 3, 4, 5, 0, 3, 0, 0, 25, 2, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.566004}", "{'[0, 3, 4, 5, 0, 3, 0, 0, 25, 2, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.536396}", "{'[0, 3, 4, 5, 0, 3, 0, 0, 25, 2, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.470068}", "{'[0, 3, 4, 5, 0, 3, 0, 0, 25, 2, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.451043}", "{'[0, 3, 4, 5, 0, 3, 0, 0, 25, 2, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.453766}", "{'[0, 3, 4, 5, 0, 3, 0, 0, 25, 2, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.47284}", "{'[0, 3, 4, 5, 0, 3, 0, 0, 25, 2, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.472346}", "{'[0, 3, 4, 5, 0, 3, 0, 0, 25, 2, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.452061}", "{'[0, 3, 4, 5, 0, 3, 0, 0, 25, 2, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.458793}", "{'[0, 3, 4, 5, 0, 3, 0, 0, 25, 2, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.503902}", "{'[0, 3, 4, 5, 0, 3, 0, 0, 25, 2, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.460027}", "{'[0, 3, 4, 5, 0, 3, 0, 0, 25, 2, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.461975}", "{'[0, 3, 4, 5, 0, 3, 0, 0, 25, 2, 26, 0, 1, 0, 1, 1, 0, 1]' : 0.498525}"]
returning from 'run': {'[0, 3, 4, 5, 0, 3, 0, 0, 25, 2, 26, 0, 1, 0, 1, 1, 0, 1]': ([0.470288, 0.453837, 0.460015, 0.459354, 0.485655, 0.458247, 0.467226, 0.553919, 0.550165, 0.471212, 0.453885, 0.457827, 0.530828, 0.492854, 0.534505, 0.470178, 0.556911, 0.566004, 0.536396, 0.470068, 0.451043, 0.453766, 0.47284, 0.472346, 0.452061, 0.458793, 0.503902, 0.460027, 0.461975, 0.498525], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 3, 4, 5, 0, 3, 0, 0, 25, 2, 26, 0, 1, 0, 1, 1, 0, 1]': ([0.470288, 0.453837, 0.460015, 0.459354, 0.485655, 0.458247, 0.467226, 0.553919, 0.550165, 0.471212, 0.453885, 0.457827, 0.530828, 0.492854, 0.534505, 0.470178, 0.556911, 0.566004, 0.536396, 0.470068, 0.451043, 0.453766, 0.47284, 0.472346, 0.452061, 0.458793, 0.503902, 0.460027, 0.461975, 0.498525], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	6
        Additions: 		1717
        Multiplications: 	528
        Divisions: 		0
        Logical: 		0
        Reads: 			3007
        Writes: 		357
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest29.exe __orio_perftest29.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest29.exe  
Program Test Output: 
{'[3, 5, 6, 6, 4, 6, 1, 0, 27, 0, 1, 3, 2, 0, 0, 0, 0, 1]' : 0.510569}
{'[3, 5, 6, 6, 4, 6, 1, 0, 27, 0, 1, 3, 2, 0, 0, 0, 0, 1]' : 0.489243}
{'[3, 5, 6, 6, 4, 6, 1, 0, 27, 0, 1, 3, 2, 0, 0, 0, 0, 1]' : 0.48972}
{'[3, 5, 6, 6, 4, 6, 1, 0, 27, 0, 1, 3, 2, 0, 0, 0, 0, 1]' : 0.485832}
{'[3, 5, 6, 6, 4, 6, 1, 0, 27, 0, 1, 3, 2, 0, 0, 0, 0, 1]' : 0.486788}
{'[3, 5, 6, 6, 4, 6, 1, 0, 27, 0, 1, 3, 2, 0, 0, 0, 0, 1]' : 0.52104}
{'[3, 5, 6, 6, 4, 6, 1, 0, 27, 0, 1, 3, 2, 0, 0, 0, 0, 1]' : 0.507658}
{'[3, 5, 6, 6, 4, 6, 1, 0, 27, 0, 1, 3, 2, 0, 0, 0, 0, 1]' : 0.489489}
{'[3, 5, 6, 6, 4, 6, 1, 0, 27, 0, 1, 3, 2, 0, 0, 0, 0, 1]' : 0.490821}
{'[3, 5, 6, 6, 4, 6, 1, 0, 27, 0, 1, 3, 2, 0, 0, 0, 0, 1]' : 0.486448}
{'[3, 5, 6, 6, 4, 6, 1, 0, 27, 0, 1, 3, 2, 0, 0, 0, 0, 1]' : 0.495055}
{'[3, 5, 6, 6, 4, 6, 1, 0, 27, 0, 1, 3, 2, 0, 0, 0, 0, 1]' : 0.48463}
{'[3, 5, 6, 6, 4, 6, 1, 0, 27, 0, 1, 3, 2, 0, 0, 0, 0, 1]' : 0.498057}
{'[3, 5, 6, 6, 4, 6, 1, 0, 27, 0, 1, 3, 2, 0, 0, 0, 0, 1]' : 0.493219}
{'[3, 5, 6, 6, 4, 6, 1, 0, 27, 0, 1, 3, 2, 0, 0, 0, 0, 1]' : 0.490764}
{'[3, 5, 6, 6, 4, 6, 1, 0, 27, 0, 1, 3, 2, 0, 0, 0, 0, 1]' : 0.484921}
{'[3, 5, 6, 6, 4, 6, 1, 0, 27, 0, 1, 3, 2, 0, 0, 0, 0, 1]' : 0.485476}
{'[3, 5, 6, 6, 4, 6, 1, 0, 27, 0, 1, 3, 2, 0, 0, 0, 0, 1]' : 0.492094}
{'[3, 5, 6, 6, 4, 6, 1, 0, 27, 0, 1, 3, 2, 0, 0, 0, 0, 1]' : 0.491721}
{'[3, 5, 6, 6, 4, 6, 1, 0, 27, 0, 1, 3, 2, 0, 0, 0, 0, 1]' : 0.487571}
{'[3, 5, 6, 6, 4, 6, 1, 0, 27, 0, 1, 3, 2, 0, 0, 0, 0, 1]' : 0.529321}
{'[3, 5, 6, 6, 4, 6, 1, 0, 27, 0, 1, 3, 2, 0, 0, 0, 0, 1]' : 0.533165}
{'[3, 5, 6, 6, 4, 6, 1, 0, 27, 0, 1, 3, 2, 0, 0, 0, 0, 1]' : 0.506593}
{'[3, 5, 6, 6, 4, 6, 1, 0, 27, 0, 1, 3, 2, 0, 0, 0, 0, 1]' : 0.496459}
{'[3, 5, 6, 6, 4, 6, 1, 0, 27, 0, 1, 3, 2, 0, 0, 0, 0, 1]' : 0.494347}
{'[3, 5, 6, 6, 4, 6, 1, 0, 27, 0, 1, 3, 2, 0, 0, 0, 0, 1]' : 0.490294}
{'[3, 5, 6, 6, 4, 6, 1, 0, 27, 0, 1, 3, 2, 0, 0, 0, 0, 1]' : 0.487106}
{'[3, 5, 6, 6, 4, 6, 1, 0, 27, 0, 1, 3, 2, 0, 0, 0, 0, 1]' : 0.52487}
{'[3, 5, 6, 6, 4, 6, 1, 0, 27, 0, 1, 3, 2, 0, 0, 0, 0, 1]' : 0.509645}
{'[3, 5, 6, 6, 4, 6, 1, 0, 27, 0, 1, 3, 2, 0, 0, 0, 0, 1]' : 0.493193}

out:
 ["{'[3, 5, 6, 6, 4, 6, 1, 0, 27, 0, 1, 3, 2, 0, 0, 0, 0, 1]' : 0.510569}", "{'[3, 5, 6, 6, 4, 6, 1, 0, 27, 0, 1, 3, 2, 0, 0, 0, 0, 1]' : 0.489243}", "{'[3, 5, 6, 6, 4, 6, 1, 0, 27, 0, 1, 3, 2, 0, 0, 0, 0, 1]' : 0.48972}", "{'[3, 5, 6, 6, 4, 6, 1, 0, 27, 0, 1, 3, 2, 0, 0, 0, 0, 1]' : 0.485832}", "{'[3, 5, 6, 6, 4, 6, 1, 0, 27, 0, 1, 3, 2, 0, 0, 0, 0, 1]' : 0.486788}", "{'[3, 5, 6, 6, 4, 6, 1, 0, 27, 0, 1, 3, 2, 0, 0, 0, 0, 1]' : 0.52104}", "{'[3, 5, 6, 6, 4, 6, 1, 0, 27, 0, 1, 3, 2, 0, 0, 0, 0, 1]' : 0.507658}", "{'[3, 5, 6, 6, 4, 6, 1, 0, 27, 0, 1, 3, 2, 0, 0, 0, 0, 1]' : 0.489489}", "{'[3, 5, 6, 6, 4, 6, 1, 0, 27, 0, 1, 3, 2, 0, 0, 0, 0, 1]' : 0.490821}", "{'[3, 5, 6, 6, 4, 6, 1, 0, 27, 0, 1, 3, 2, 0, 0, 0, 0, 1]' : 0.486448}", "{'[3, 5, 6, 6, 4, 6, 1, 0, 27, 0, 1, 3, 2, 0, 0, 0, 0, 1]' : 0.495055}", "{'[3, 5, 6, 6, 4, 6, 1, 0, 27, 0, 1, 3, 2, 0, 0, 0, 0, 1]' : 0.48463}", "{'[3, 5, 6, 6, 4, 6, 1, 0, 27, 0, 1, 3, 2, 0, 0, 0, 0, 1]' : 0.498057}", "{'[3, 5, 6, 6, 4, 6, 1, 0, 27, 0, 1, 3, 2, 0, 0, 0, 0, 1]' : 0.493219}", "{'[3, 5, 6, 6, 4, 6, 1, 0, 27, 0, 1, 3, 2, 0, 0, 0, 0, 1]' : 0.490764}", "{'[3, 5, 6, 6, 4, 6, 1, 0, 27, 0, 1, 3, 2, 0, 0, 0, 0, 1]' : 0.484921}", "{'[3, 5, 6, 6, 4, 6, 1, 0, 27, 0, 1, 3, 2, 0, 0, 0, 0, 1]' : 0.485476}", "{'[3, 5, 6, 6, 4, 6, 1, 0, 27, 0, 1, 3, 2, 0, 0, 0, 0, 1]' : 0.492094}", "{'[3, 5, 6, 6, 4, 6, 1, 0, 27, 0, 1, 3, 2, 0, 0, 0, 0, 1]' : 0.491721}", "{'[3, 5, 6, 6, 4, 6, 1, 0, 27, 0, 1, 3, 2, 0, 0, 0, 0, 1]' : 0.487571}", "{'[3, 5, 6, 6, 4, 6, 1, 0, 27, 0, 1, 3, 2, 0, 0, 0, 0, 1]' : 0.529321}", "{'[3, 5, 6, 6, 4, 6, 1, 0, 27, 0, 1, 3, 2, 0, 0, 0, 0, 1]' : 0.533165}", "{'[3, 5, 6, 6, 4, 6, 1, 0, 27, 0, 1, 3, 2, 0, 0, 0, 0, 1]' : 0.506593}", "{'[3, 5, 6, 6, 4, 6, 1, 0, 27, 0, 1, 3, 2, 0, 0, 0, 0, 1]' : 0.496459}", "{'[3, 5, 6, 6, 4, 6, 1, 0, 27, 0, 1, 3, 2, 0, 0, 0, 0, 1]' : 0.494347}", "{'[3, 5, 6, 6, 4, 6, 1, 0, 27, 0, 1, 3, 2, 0, 0, 0, 0, 1]' : 0.490294}", "{'[3, 5, 6, 6, 4, 6, 1, 0, 27, 0, 1, 3, 2, 0, 0, 0, 0, 1]' : 0.487106}", "{'[3, 5, 6, 6, 4, 6, 1, 0, 27, 0, 1, 3, 2, 0, 0, 0, 0, 1]' : 0.52487}", "{'[3, 5, 6, 6, 4, 6, 1, 0, 27, 0, 1, 3, 2, 0, 0, 0, 0, 1]' : 0.509645}", "{'[3, 5, 6, 6, 4, 6, 1, 0, 27, 0, 1, 3, 2, 0, 0, 0, 0, 1]' : 0.493193}"]
returning from 'run': {'[3, 5, 6, 6, 4, 6, 1, 0, 27, 0, 1, 3, 2, 0, 0, 0, 0, 1]': ([0.510569, 0.489243, 0.48972, 0.485832, 0.486788, 0.52104, 0.507658, 0.489489, 0.490821, 0.486448, 0.495055, 0.48463, 0.498057, 0.493219, 0.490764, 0.484921, 0.485476, 0.492094, 0.491721, 0.487571, 0.529321, 0.533165, 0.506593, 0.496459, 0.494347, 0.490294, 0.487106, 0.52487, 0.509645, 0.493193], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 5, 6, 6, 4, 6, 1, 0, 27, 0, 1, 3, 2, 0, 0, 0, 0, 1]': ([0.510569, 0.489243, 0.48972, 0.485832, 0.486788, 0.52104, 0.507658, 0.489489, 0.490821, 0.486448, 0.495055, 0.48463, 0.498057, 0.493219, 0.490764, 0.484921, 0.485476, 0.492094, 0.491721, 0.487571, 0.529321, 0.533165, 0.506593, 0.496459, 0.494347, 0.490294, 0.487106, 0.52487, 0.509645, 0.493193], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	6
        Additions: 		147
        Multiplications: 	42
        Divisions: 		0
        Logical: 		0
        Reads: 			340
        Writes: 		83
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest30.exe __orio_perftest30.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest30.exe  
Program Test Output: 
{'[1, 2, 6, 2, 2, 4, 0, 0, 8, 0, 8, 9, 0, 0, 0, 1, 1, 0]' : 0.656985}
{'[1, 2, 6, 2, 2, 4, 0, 0, 8, 0, 8, 9, 0, 0, 0, 1, 1, 0]' : 0.656054}
{'[1, 2, 6, 2, 2, 4, 0, 0, 8, 0, 8, 9, 0, 0, 0, 1, 1, 0]' : 0.654709}
{'[1, 2, 6, 2, 2, 4, 0, 0, 8, 0, 8, 9, 0, 0, 0, 1, 1, 0]' : 0.654519}
{'[1, 2, 6, 2, 2, 4, 0, 0, 8, 0, 8, 9, 0, 0, 0, 1, 1, 0]' : 0.654998}
{'[1, 2, 6, 2, 2, 4, 0, 0, 8, 0, 8, 9, 0, 0, 0, 1, 1, 0]' : 0.655675}
{'[1, 2, 6, 2, 2, 4, 0, 0, 8, 0, 8, 9, 0, 0, 0, 1, 1, 0]' : 0.655313}
{'[1, 2, 6, 2, 2, 4, 0, 0, 8, 0, 8, 9, 0, 0, 0, 1, 1, 0]' : 0.655018}
{'[1, 2, 6, 2, 2, 4, 0, 0, 8, 0, 8, 9, 0, 0, 0, 1, 1, 0]' : 0.652704}
{'[1, 2, 6, 2, 2, 4, 0, 0, 8, 0, 8, 9, 0, 0, 0, 1, 1, 0]' : 0.652772}
{'[1, 2, 6, 2, 2, 4, 0, 0, 8, 0, 8, 9, 0, 0, 0, 1, 1, 0]' : 0.654458}
{'[1, 2, 6, 2, 2, 4, 0, 0, 8, 0, 8, 9, 0, 0, 0, 1, 1, 0]' : 0.654078}
{'[1, 2, 6, 2, 2, 4, 0, 0, 8, 0, 8, 9, 0, 0, 0, 1, 1, 0]' : 0.653987}
{'[1, 2, 6, 2, 2, 4, 0, 0, 8, 0, 8, 9, 0, 0, 0, 1, 1, 0]' : 0.653752}
{'[1, 2, 6, 2, 2, 4, 0, 0, 8, 0, 8, 9, 0, 0, 0, 1, 1, 0]' : 0.654359}
{'[1, 2, 6, 2, 2, 4, 0, 0, 8, 0, 8, 9, 0, 0, 0, 1, 1, 0]' : 0.654108}
{'[1, 2, 6, 2, 2, 4, 0, 0, 8, 0, 8, 9, 0, 0, 0, 1, 1, 0]' : 0.65332}
{'[1, 2, 6, 2, 2, 4, 0, 0, 8, 0, 8, 9, 0, 0, 0, 1, 1, 0]' : 0.654243}
{'[1, 2, 6, 2, 2, 4, 0, 0, 8, 0, 8, 9, 0, 0, 0, 1, 1, 0]' : 0.65647}
{'[1, 2, 6, 2, 2, 4, 0, 0, 8, 0, 8, 9, 0, 0, 0, 1, 1, 0]' : 0.657883}
{'[1, 2, 6, 2, 2, 4, 0, 0, 8, 0, 8, 9, 0, 0, 0, 1, 1, 0]' : 0.65554}
{'[1, 2, 6, 2, 2, 4, 0, 0, 8, 0, 8, 9, 0, 0, 0, 1, 1, 0]' : 0.653369}
{'[1, 2, 6, 2, 2, 4, 0, 0, 8, 0, 8, 9, 0, 0, 0, 1, 1, 0]' : 0.653046}
{'[1, 2, 6, 2, 2, 4, 0, 0, 8, 0, 8, 9, 0, 0, 0, 1, 1, 0]' : 0.659596}
{'[1, 2, 6, 2, 2, 4, 0, 0, 8, 0, 8, 9, 0, 0, 0, 1, 1, 0]' : 0.655589}
{'[1, 2, 6, 2, 2, 4, 0, 0, 8, 0, 8, 9, 0, 0, 0, 1, 1, 0]' : 0.653917}
{'[1, 2, 6, 2, 2, 4, 0, 0, 8, 0, 8, 9, 0, 0, 0, 1, 1, 0]' : 0.654536}
{'[1, 2, 6, 2, 2, 4, 0, 0, 8, 0, 8, 9, 0, 0, 0, 1, 1, 0]' : 0.654942}
{'[1, 2, 6, 2, 2, 4, 0, 0, 8, 0, 8, 9, 0, 0, 0, 1, 1, 0]' : 0.656084}
{'[1, 2, 6, 2, 2, 4, 0, 0, 8, 0, 8, 9, 0, 0, 0, 1, 1, 0]' : 0.655726}

out:
 ["{'[1, 2, 6, 2, 2, 4, 0, 0, 8, 0, 8, 9, 0, 0, 0, 1, 1, 0]' : 0.656985}", "{'[1, 2, 6, 2, 2, 4, 0, 0, 8, 0, 8, 9, 0, 0, 0, 1, 1, 0]' : 0.656054}", "{'[1, 2, 6, 2, 2, 4, 0, 0, 8, 0, 8, 9, 0, 0, 0, 1, 1, 0]' : 0.654709}", "{'[1, 2, 6, 2, 2, 4, 0, 0, 8, 0, 8, 9, 0, 0, 0, 1, 1, 0]' : 0.654519}", "{'[1, 2, 6, 2, 2, 4, 0, 0, 8, 0, 8, 9, 0, 0, 0, 1, 1, 0]' : 0.654998}", "{'[1, 2, 6, 2, 2, 4, 0, 0, 8, 0, 8, 9, 0, 0, 0, 1, 1, 0]' : 0.655675}", "{'[1, 2, 6, 2, 2, 4, 0, 0, 8, 0, 8, 9, 0, 0, 0, 1, 1, 0]' : 0.655313}", "{'[1, 2, 6, 2, 2, 4, 0, 0, 8, 0, 8, 9, 0, 0, 0, 1, 1, 0]' : 0.655018}", "{'[1, 2, 6, 2, 2, 4, 0, 0, 8, 0, 8, 9, 0, 0, 0, 1, 1, 0]' : 0.652704}", "{'[1, 2, 6, 2, 2, 4, 0, 0, 8, 0, 8, 9, 0, 0, 0, 1, 1, 0]' : 0.652772}", "{'[1, 2, 6, 2, 2, 4, 0, 0, 8, 0, 8, 9, 0, 0, 0, 1, 1, 0]' : 0.654458}", "{'[1, 2, 6, 2, 2, 4, 0, 0, 8, 0, 8, 9, 0, 0, 0, 1, 1, 0]' : 0.654078}", "{'[1, 2, 6, 2, 2, 4, 0, 0, 8, 0, 8, 9, 0, 0, 0, 1, 1, 0]' : 0.653987}", "{'[1, 2, 6, 2, 2, 4, 0, 0, 8, 0, 8, 9, 0, 0, 0, 1, 1, 0]' : 0.653752}", "{'[1, 2, 6, 2, 2, 4, 0, 0, 8, 0, 8, 9, 0, 0, 0, 1, 1, 0]' : 0.654359}", "{'[1, 2, 6, 2, 2, 4, 0, 0, 8, 0, 8, 9, 0, 0, 0, 1, 1, 0]' : 0.654108}", "{'[1, 2, 6, 2, 2, 4, 0, 0, 8, 0, 8, 9, 0, 0, 0, 1, 1, 0]' : 0.65332}", "{'[1, 2, 6, 2, 2, 4, 0, 0, 8, 0, 8, 9, 0, 0, 0, 1, 1, 0]' : 0.654243}", "{'[1, 2, 6, 2, 2, 4, 0, 0, 8, 0, 8, 9, 0, 0, 0, 1, 1, 0]' : 0.65647}", "{'[1, 2, 6, 2, 2, 4, 0, 0, 8, 0, 8, 9, 0, 0, 0, 1, 1, 0]' : 0.657883}", "{'[1, 2, 6, 2, 2, 4, 0, 0, 8, 0, 8, 9, 0, 0, 0, 1, 1, 0]' : 0.65554}", "{'[1, 2, 6, 2, 2, 4, 0, 0, 8, 0, 8, 9, 0, 0, 0, 1, 1, 0]' : 0.653369}", "{'[1, 2, 6, 2, 2, 4, 0, 0, 8, 0, 8, 9, 0, 0, 0, 1, 1, 0]' : 0.653046}", "{'[1, 2, 6, 2, 2, 4, 0, 0, 8, 0, 8, 9, 0, 0, 0, 1, 1, 0]' : 0.659596}", "{'[1, 2, 6, 2, 2, 4, 0, 0, 8, 0, 8, 9, 0, 0, 0, 1, 1, 0]' : 0.655589}", "{'[1, 2, 6, 2, 2, 4, 0, 0, 8, 0, 8, 9, 0, 0, 0, 1, 1, 0]' : 0.653917}", "{'[1, 2, 6, 2, 2, 4, 0, 0, 8, 0, 8, 9, 0, 0, 0, 1, 1, 0]' : 0.654536}", "{'[1, 2, 6, 2, 2, 4, 0, 0, 8, 0, 8, 9, 0, 0, 0, 1, 1, 0]' : 0.654942}", "{'[1, 2, 6, 2, 2, 4, 0, 0, 8, 0, 8, 9, 0, 0, 0, 1, 1, 0]' : 0.656084}", "{'[1, 2, 6, 2, 2, 4, 0, 0, 8, 0, 8, 9, 0, 0, 0, 1, 1, 0]' : 0.655726}"]
returning from 'run': {'[1, 2, 6, 2, 2, 4, 0, 0, 8, 0, 8, 9, 0, 0, 0, 1, 1, 0]': ([0.656985, 0.656054, 0.654709, 0.654519, 0.654998, 0.655675, 0.655313, 0.655018, 0.652704, 0.652772, 0.654458, 0.654078, 0.653987, 0.653752, 0.654359, 0.654108, 0.65332, 0.654243, 0.65647, 0.657883, 0.65554, 0.653369, 0.653046, 0.659596, 0.655589, 0.653917, 0.654536, 0.654942, 0.656084, 0.655726], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 2, 6, 2, 2, 4, 0, 0, 8, 0, 8, 9, 0, 0, 0, 1, 1, 0]': ([0.656985, 0.656054, 0.654709, 0.654519, 0.654998, 0.655675, 0.655313, 0.655018, 0.652704, 0.652772, 0.654458, 0.654078, 0.653987, 0.653752, 0.654359, 0.654108, 0.65332, 0.654243, 0.65647, 0.657883, 0.65554, 0.653369, 0.653046, 0.659596, 0.655589, 0.653917, 0.654536, 0.654942, 0.656084, 0.655726], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		2767
        Multiplications: 	840
        Divisions: 		0
        Logical: 		0
        Reads: 			4354
        Writes: 		476
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest31.exe __orio_perftest31.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest31.exe  
Program Test Output: 
{'[2, 0, 0, 3, 3, 0, 0, 1, 3, 13, 18, 0, 0, 0, 1, 0, 0, 1]' : 0.505367}
{'[2, 0, 0, 3, 3, 0, 0, 1, 3, 13, 18, 0, 0, 0, 1, 0, 0, 1]' : 0.507805}
{'[2, 0, 0, 3, 3, 0, 0, 1, 3, 13, 18, 0, 0, 0, 1, 0, 0, 1]' : 0.505095}
{'[2, 0, 0, 3, 3, 0, 0, 1, 3, 13, 18, 0, 0, 0, 1, 0, 0, 1]' : 0.505287}
{'[2, 0, 0, 3, 3, 0, 0, 1, 3, 13, 18, 0, 0, 0, 1, 0, 0, 1]' : 0.505223}
{'[2, 0, 0, 3, 3, 0, 0, 1, 3, 13, 18, 0, 0, 0, 1, 0, 0, 1]' : 0.504072}
{'[2, 0, 0, 3, 3, 0, 0, 1, 3, 13, 18, 0, 0, 0, 1, 0, 0, 1]' : 0.504076}
{'[2, 0, 0, 3, 3, 0, 0, 1, 3, 13, 18, 0, 0, 0, 1, 0, 0, 1]' : 0.503574}
{'[2, 0, 0, 3, 3, 0, 0, 1, 3, 13, 18, 0, 0, 0, 1, 0, 0, 1]' : 0.503755}
{'[2, 0, 0, 3, 3, 0, 0, 1, 3, 13, 18, 0, 0, 0, 1, 0, 0, 1]' : 0.503515}
{'[2, 0, 0, 3, 3, 0, 0, 1, 3, 13, 18, 0, 0, 0, 1, 0, 0, 1]' : 0.503957}
{'[2, 0, 0, 3, 3, 0, 0, 1, 3, 13, 18, 0, 0, 0, 1, 0, 0, 1]' : 0.503182}
{'[2, 0, 0, 3, 3, 0, 0, 1, 3, 13, 18, 0, 0, 0, 1, 0, 0, 1]' : 0.503214}
{'[2, 0, 0, 3, 3, 0, 0, 1, 3, 13, 18, 0, 0, 0, 1, 0, 0, 1]' : 0.504348}
{'[2, 0, 0, 3, 3, 0, 0, 1, 3, 13, 18, 0, 0, 0, 1, 0, 0, 1]' : 0.505583}
{'[2, 0, 0, 3, 3, 0, 0, 1, 3, 13, 18, 0, 0, 0, 1, 0, 0, 1]' : 0.50802}
{'[2, 0, 0, 3, 3, 0, 0, 1, 3, 13, 18, 0, 0, 0, 1, 0, 0, 1]' : 0.505201}
{'[2, 0, 0, 3, 3, 0, 0, 1, 3, 13, 18, 0, 0, 0, 1, 0, 0, 1]' : 0.505741}
{'[2, 0, 0, 3, 3, 0, 0, 1, 3, 13, 18, 0, 0, 0, 1, 0, 0, 1]' : 0.505167}
{'[2, 0, 0, 3, 3, 0, 0, 1, 3, 13, 18, 0, 0, 0, 1, 0, 0, 1]' : 0.505271}
{'[2, 0, 0, 3, 3, 0, 0, 1, 3, 13, 18, 0, 0, 0, 1, 0, 0, 1]' : 0.504756}
{'[2, 0, 0, 3, 3, 0, 0, 1, 3, 13, 18, 0, 0, 0, 1, 0, 0, 1]' : 0.504862}
{'[2, 0, 0, 3, 3, 0, 0, 1, 3, 13, 18, 0, 0, 0, 1, 0, 0, 1]' : 0.560817}
{'[2, 0, 0, 3, 3, 0, 0, 1, 3, 13, 18, 0, 0, 0, 1, 0, 0, 1]' : 0.510433}
{'[2, 0, 0, 3, 3, 0, 0, 1, 3, 13, 18, 0, 0, 0, 1, 0, 0, 1]' : 0.514902}
{'[2, 0, 0, 3, 3, 0, 0, 1, 3, 13, 18, 0, 0, 0, 1, 0, 0, 1]' : 0.554724}
{'[2, 0, 0, 3, 3, 0, 0, 1, 3, 13, 18, 0, 0, 0, 1, 0, 0, 1]' : 0.549596}
{'[2, 0, 0, 3, 3, 0, 0, 1, 3, 13, 18, 0, 0, 0, 1, 0, 0, 1]' : 0.56648}
{'[2, 0, 0, 3, 3, 0, 0, 1, 3, 13, 18, 0, 0, 0, 1, 0, 0, 1]' : 0.523547}
{'[2, 0, 0, 3, 3, 0, 0, 1, 3, 13, 18, 0, 0, 0, 1, 0, 0, 1]' : 0.523179}

out:
 ["{'[2, 0, 0, 3, 3, 0, 0, 1, 3, 13, 18, 0, 0, 0, 1, 0, 0, 1]' : 0.505367}", "{'[2, 0, 0, 3, 3, 0, 0, 1, 3, 13, 18, 0, 0, 0, 1, 0, 0, 1]' : 0.507805}", "{'[2, 0, 0, 3, 3, 0, 0, 1, 3, 13, 18, 0, 0, 0, 1, 0, 0, 1]' : 0.505095}", "{'[2, 0, 0, 3, 3, 0, 0, 1, 3, 13, 18, 0, 0, 0, 1, 0, 0, 1]' : 0.505287}", "{'[2, 0, 0, 3, 3, 0, 0, 1, 3, 13, 18, 0, 0, 0, 1, 0, 0, 1]' : 0.505223}", "{'[2, 0, 0, 3, 3, 0, 0, 1, 3, 13, 18, 0, 0, 0, 1, 0, 0, 1]' : 0.504072}", "{'[2, 0, 0, 3, 3, 0, 0, 1, 3, 13, 18, 0, 0, 0, 1, 0, 0, 1]' : 0.504076}", "{'[2, 0, 0, 3, 3, 0, 0, 1, 3, 13, 18, 0, 0, 0, 1, 0, 0, 1]' : 0.503574}", "{'[2, 0, 0, 3, 3, 0, 0, 1, 3, 13, 18, 0, 0, 0, 1, 0, 0, 1]' : 0.503755}", "{'[2, 0, 0, 3, 3, 0, 0, 1, 3, 13, 18, 0, 0, 0, 1, 0, 0, 1]' : 0.503515}", "{'[2, 0, 0, 3, 3, 0, 0, 1, 3, 13, 18, 0, 0, 0, 1, 0, 0, 1]' : 0.503957}", "{'[2, 0, 0, 3, 3, 0, 0, 1, 3, 13, 18, 0, 0, 0, 1, 0, 0, 1]' : 0.503182}", "{'[2, 0, 0, 3, 3, 0, 0, 1, 3, 13, 18, 0, 0, 0, 1, 0, 0, 1]' : 0.503214}", "{'[2, 0, 0, 3, 3, 0, 0, 1, 3, 13, 18, 0, 0, 0, 1, 0, 0, 1]' : 0.504348}", "{'[2, 0, 0, 3, 3, 0, 0, 1, 3, 13, 18, 0, 0, 0, 1, 0, 0, 1]' : 0.505583}", "{'[2, 0, 0, 3, 3, 0, 0, 1, 3, 13, 18, 0, 0, 0, 1, 0, 0, 1]' : 0.50802}", "{'[2, 0, 0, 3, 3, 0, 0, 1, 3, 13, 18, 0, 0, 0, 1, 0, 0, 1]' : 0.505201}", "{'[2, 0, 0, 3, 3, 0, 0, 1, 3, 13, 18, 0, 0, 0, 1, 0, 0, 1]' : 0.505741}", "{'[2, 0, 0, 3, 3, 0, 0, 1, 3, 13, 18, 0, 0, 0, 1, 0, 0, 1]' : 0.505167}", "{'[2, 0, 0, 3, 3, 0, 0, 1, 3, 13, 18, 0, 0, 0, 1, 0, 0, 1]' : 0.505271}", "{'[2, 0, 0, 3, 3, 0, 0, 1, 3, 13, 18, 0, 0, 0, 1, 0, 0, 1]' : 0.504756}", "{'[2, 0, 0, 3, 3, 0, 0, 1, 3, 13, 18, 0, 0, 0, 1, 0, 0, 1]' : 0.504862}", "{'[2, 0, 0, 3, 3, 0, 0, 1, 3, 13, 18, 0, 0, 0, 1, 0, 0, 1]' : 0.560817}", "{'[2, 0, 0, 3, 3, 0, 0, 1, 3, 13, 18, 0, 0, 0, 1, 0, 0, 1]' : 0.510433}", "{'[2, 0, 0, 3, 3, 0, 0, 1, 3, 13, 18, 0, 0, 0, 1, 0, 0, 1]' : 0.514902}", "{'[2, 0, 0, 3, 3, 0, 0, 1, 3, 13, 18, 0, 0, 0, 1, 0, 0, 1]' : 0.554724}", "{'[2, 0, 0, 3, 3, 0, 0, 1, 3, 13, 18, 0, 0, 0, 1, 0, 0, 1]' : 0.549596}", "{'[2, 0, 0, 3, 3, 0, 0, 1, 3, 13, 18, 0, 0, 0, 1, 0, 0, 1]' : 0.56648}", "{'[2, 0, 0, 3, 3, 0, 0, 1, 3, 13, 18, 0, 0, 0, 1, 0, 0, 1]' : 0.523547}", "{'[2, 0, 0, 3, 3, 0, 0, 1, 3, 13, 18, 0, 0, 0, 1, 0, 0, 1]' : 0.523179}"]
returning from 'run': {'[2, 0, 0, 3, 3, 0, 0, 1, 3, 13, 18, 0, 0, 0, 1, 0, 0, 1]': ([0.505367, 0.507805, 0.505095, 0.505287, 0.505223, 0.504072, 0.504076, 0.503574, 0.503755, 0.503515, 0.503957, 0.503182, 0.503214, 0.504348, 0.505583, 0.50802, 0.505201, 0.505741, 0.505167, 0.505271, 0.504756, 0.504862, 0.560817, 0.510433, 0.514902, 0.554724, 0.549596, 0.56648, 0.523547, 0.523179], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 0, 3, 3, 0, 0, 1, 3, 13, 18, 0, 0, 0, 1, 0, 0, 1]': ([0.505367, 0.507805, 0.505095, 0.505287, 0.505223, 0.504072, 0.504076, 0.503574, 0.503755, 0.503515, 0.503957, 0.503182, 0.503214, 0.504348, 0.505583, 0.50802, 0.505201, 0.505741, 0.505167, 0.505271, 0.504756, 0.504862, 0.560817, 0.510433, 0.514902, 0.554724, 0.549596, 0.56648, 0.523547, 0.523179], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		674
        Multiplications: 	176
        Divisions: 		0
        Logical: 		0
        Reads: 			1089
        Writes: 		124
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest32.exe __orio_perftest32.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest32.exe  
Program Test Output: 
{'[0, 2, 0, 0, 1, 5, 1, 1, 3, 22, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.300242}
{'[0, 2, 0, 0, 1, 5, 1, 1, 3, 22, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.337863}
{'[0, 2, 0, 0, 1, 5, 1, 1, 3, 22, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.271523}
{'[0, 2, 0, 0, 1, 5, 1, 1, 3, 22, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.274893}
{'[0, 2, 0, 0, 1, 5, 1, 1, 3, 22, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.277775}
{'[0, 2, 0, 0, 1, 5, 1, 1, 3, 22, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.263995}
{'[0, 2, 0, 0, 1, 5, 1, 1, 3, 22, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.265909}
{'[0, 2, 0, 0, 1, 5, 1, 1, 3, 22, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.261986}
{'[0, 2, 0, 0, 1, 5, 1, 1, 3, 22, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.261753}
{'[0, 2, 0, 0, 1, 5, 1, 1, 3, 22, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.266732}
{'[0, 2, 0, 0, 1, 5, 1, 1, 3, 22, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.265183}
{'[0, 2, 0, 0, 1, 5, 1, 1, 3, 22, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.268988}
{'[0, 2, 0, 0, 1, 5, 1, 1, 3, 22, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.289651}
{'[0, 2, 0, 0, 1, 5, 1, 1, 3, 22, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.279271}
{'[0, 2, 0, 0, 1, 5, 1, 1, 3, 22, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.281272}
{'[0, 2, 0, 0, 1, 5, 1, 1, 3, 22, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.291111}
{'[0, 2, 0, 0, 1, 5, 1, 1, 3, 22, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.278188}
{'[0, 2, 0, 0, 1, 5, 1, 1, 3, 22, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.268434}
{'[0, 2, 0, 0, 1, 5, 1, 1, 3, 22, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.311443}
{'[0, 2, 0, 0, 1, 5, 1, 1, 3, 22, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.310225}
{'[0, 2, 0, 0, 1, 5, 1, 1, 3, 22, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.268277}
{'[0, 2, 0, 0, 1, 5, 1, 1, 3, 22, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.290307}
{'[0, 2, 0, 0, 1, 5, 1, 1, 3, 22, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.29419}
{'[0, 2, 0, 0, 1, 5, 1, 1, 3, 22, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.274681}
{'[0, 2, 0, 0, 1, 5, 1, 1, 3, 22, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.278122}
{'[0, 2, 0, 0, 1, 5, 1, 1, 3, 22, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.265665}
{'[0, 2, 0, 0, 1, 5, 1, 1, 3, 22, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.277024}
{'[0, 2, 0, 0, 1, 5, 1, 1, 3, 22, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.281229}
{'[0, 2, 0, 0, 1, 5, 1, 1, 3, 22, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.267835}
{'[0, 2, 0, 0, 1, 5, 1, 1, 3, 22, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.270031}

out:
 ["{'[0, 2, 0, 0, 1, 5, 1, 1, 3, 22, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.300242}", "{'[0, 2, 0, 0, 1, 5, 1, 1, 3, 22, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.337863}", "{'[0, 2, 0, 0, 1, 5, 1, 1, 3, 22, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.271523}", "{'[0, 2, 0, 0, 1, 5, 1, 1, 3, 22, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.274893}", "{'[0, 2, 0, 0, 1, 5, 1, 1, 3, 22, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.277775}", "{'[0, 2, 0, 0, 1, 5, 1, 1, 3, 22, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.263995}", "{'[0, 2, 0, 0, 1, 5, 1, 1, 3, 22, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.265909}", "{'[0, 2, 0, 0, 1, 5, 1, 1, 3, 22, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.261986}", "{'[0, 2, 0, 0, 1, 5, 1, 1, 3, 22, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.261753}", "{'[0, 2, 0, 0, 1, 5, 1, 1, 3, 22, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.266732}", "{'[0, 2, 0, 0, 1, 5, 1, 1, 3, 22, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.265183}", "{'[0, 2, 0, 0, 1, 5, 1, 1, 3, 22, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.268988}", "{'[0, 2, 0, 0, 1, 5, 1, 1, 3, 22, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.289651}", "{'[0, 2, 0, 0, 1, 5, 1, 1, 3, 22, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.279271}", "{'[0, 2, 0, 0, 1, 5, 1, 1, 3, 22, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.281272}", "{'[0, 2, 0, 0, 1, 5, 1, 1, 3, 22, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.291111}", "{'[0, 2, 0, 0, 1, 5, 1, 1, 3, 22, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.278188}", "{'[0, 2, 0, 0, 1, 5, 1, 1, 3, 22, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.268434}", "{'[0, 2, 0, 0, 1, 5, 1, 1, 3, 22, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.311443}", "{'[0, 2, 0, 0, 1, 5, 1, 1, 3, 22, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.310225}", "{'[0, 2, 0, 0, 1, 5, 1, 1, 3, 22, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.268277}", "{'[0, 2, 0, 0, 1, 5, 1, 1, 3, 22, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.290307}", "{'[0, 2, 0, 0, 1, 5, 1, 1, 3, 22, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.29419}", "{'[0, 2, 0, 0, 1, 5, 1, 1, 3, 22, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.274681}", "{'[0, 2, 0, 0, 1, 5, 1, 1, 3, 22, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.278122}", "{'[0, 2, 0, 0, 1, 5, 1, 1, 3, 22, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.265665}", "{'[0, 2, 0, 0, 1, 5, 1, 1, 3, 22, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.277024}", "{'[0, 2, 0, 0, 1, 5, 1, 1, 3, 22, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.281229}", "{'[0, 2, 0, 0, 1, 5, 1, 1, 3, 22, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.267835}", "{'[0, 2, 0, 0, 1, 5, 1, 1, 3, 22, 8, 0, 1, 0, 0, 0, 1, 0]' : 0.270031}"]
returning from 'run': {'[0, 2, 0, 0, 1, 5, 1, 1, 3, 22, 8, 0, 1, 0, 0, 0, 1, 0]': ([0.300242, 0.337863, 0.271523, 0.274893, 0.277775, 0.263995, 0.265909, 0.261986, 0.261753, 0.266732, 0.265183, 0.268988, 0.289651, 0.279271, 0.281272, 0.291111, 0.278188, 0.268434, 0.311443, 0.310225, 0.268277, 0.290307, 0.29419, 0.274681, 0.278122, 0.265665, 0.277024, 0.281229, 0.267835, 0.270031], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 0, 0, 1, 5, 1, 1, 3, 22, 8, 0, 1, 0, 0, 0, 1, 0]': ([0.300242, 0.337863, 0.271523, 0.274893, 0.277775, 0.263995, 0.265909, 0.261986, 0.261753, 0.266732, 0.265183, 0.268988, 0.289651, 0.279271, 0.281272, 0.291111, 0.278188, 0.268434, 0.311443, 0.310225, 0.268277, 0.290307, 0.29419, 0.274681, 0.278122, 0.265665, 0.277024, 0.281229, 0.267835, 0.270031], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	29
        Max loop nest depth: 	5
        Additions: 		327
        Multiplications: 	110
        Divisions: 		0
        Logical: 		0
        Reads: 			778
        Writes: 		176
        Comparisons:		29
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest33.exe __orio_perftest33.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest33.exe  
Program Test Output: 
{'[0, 6, 1, 2, 6, 3, 1, 0, 0, 9, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.368854}
{'[0, 6, 1, 2, 6, 3, 1, 0, 0, 9, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.364122}
{'[0, 6, 1, 2, 6, 3, 1, 0, 0, 9, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.368912}
{'[0, 6, 1, 2, 6, 3, 1, 0, 0, 9, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.361625}
{'[0, 6, 1, 2, 6, 3, 1, 0, 0, 9, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.372772}
{'[0, 6, 1, 2, 6, 3, 1, 0, 0, 9, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.392387}
{'[0, 6, 1, 2, 6, 3, 1, 0, 0, 9, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.364662}
{'[0, 6, 1, 2, 6, 3, 1, 0, 0, 9, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.363382}
{'[0, 6, 1, 2, 6, 3, 1, 0, 0, 9, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.362218}
{'[0, 6, 1, 2, 6, 3, 1, 0, 0, 9, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.364286}
{'[0, 6, 1, 2, 6, 3, 1, 0, 0, 9, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.36473}
{'[0, 6, 1, 2, 6, 3, 1, 0, 0, 9, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.361883}
{'[0, 6, 1, 2, 6, 3, 1, 0, 0, 9, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.360998}
{'[0, 6, 1, 2, 6, 3, 1, 0, 0, 9, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.36156}
{'[0, 6, 1, 2, 6, 3, 1, 0, 0, 9, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.361846}
{'[0, 6, 1, 2, 6, 3, 1, 0, 0, 9, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.361612}
{'[0, 6, 1, 2, 6, 3, 1, 0, 0, 9, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.361227}
{'[0, 6, 1, 2, 6, 3, 1, 0, 0, 9, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.361056}
{'[0, 6, 1, 2, 6, 3, 1, 0, 0, 9, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.361212}
{'[0, 6, 1, 2, 6, 3, 1, 0, 0, 9, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.363198}
{'[0, 6, 1, 2, 6, 3, 1, 0, 0, 9, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.361499}
{'[0, 6, 1, 2, 6, 3, 1, 0, 0, 9, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.361524}
{'[0, 6, 1, 2, 6, 3, 1, 0, 0, 9, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.363205}
{'[0, 6, 1, 2, 6, 3, 1, 0, 0, 9, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.361611}
{'[0, 6, 1, 2, 6, 3, 1, 0, 0, 9, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.361557}
{'[0, 6, 1, 2, 6, 3, 1, 0, 0, 9, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.361518}
{'[0, 6, 1, 2, 6, 3, 1, 0, 0, 9, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.361515}
{'[0, 6, 1, 2, 6, 3, 1, 0, 0, 9, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.361386}
{'[0, 6, 1, 2, 6, 3, 1, 0, 0, 9, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.361131}
{'[0, 6, 1, 2, 6, 3, 1, 0, 0, 9, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.36139}

out:
 ["{'[0, 6, 1, 2, 6, 3, 1, 0, 0, 9, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.368854}", "{'[0, 6, 1, 2, 6, 3, 1, 0, 0, 9, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.364122}", "{'[0, 6, 1, 2, 6, 3, 1, 0, 0, 9, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.368912}", "{'[0, 6, 1, 2, 6, 3, 1, 0, 0, 9, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.361625}", "{'[0, 6, 1, 2, 6, 3, 1, 0, 0, 9, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.372772}", "{'[0, 6, 1, 2, 6, 3, 1, 0, 0, 9, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.392387}", "{'[0, 6, 1, 2, 6, 3, 1, 0, 0, 9, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.364662}", "{'[0, 6, 1, 2, 6, 3, 1, 0, 0, 9, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.363382}", "{'[0, 6, 1, 2, 6, 3, 1, 0, 0, 9, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.362218}", "{'[0, 6, 1, 2, 6, 3, 1, 0, 0, 9, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.364286}", "{'[0, 6, 1, 2, 6, 3, 1, 0, 0, 9, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.36473}", "{'[0, 6, 1, 2, 6, 3, 1, 0, 0, 9, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.361883}", "{'[0, 6, 1, 2, 6, 3, 1, 0, 0, 9, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.360998}", "{'[0, 6, 1, 2, 6, 3, 1, 0, 0, 9, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.36156}", "{'[0, 6, 1, 2, 6, 3, 1, 0, 0, 9, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.361846}", "{'[0, 6, 1, 2, 6, 3, 1, 0, 0, 9, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.361612}", "{'[0, 6, 1, 2, 6, 3, 1, 0, 0, 9, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.361227}", "{'[0, 6, 1, 2, 6, 3, 1, 0, 0, 9, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.361056}", "{'[0, 6, 1, 2, 6, 3, 1, 0, 0, 9, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.361212}", "{'[0, 6, 1, 2, 6, 3, 1, 0, 0, 9, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.363198}", "{'[0, 6, 1, 2, 6, 3, 1, 0, 0, 9, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.361499}", "{'[0, 6, 1, 2, 6, 3, 1, 0, 0, 9, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.361524}", "{'[0, 6, 1, 2, 6, 3, 1, 0, 0, 9, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.363205}", "{'[0, 6, 1, 2, 6, 3, 1, 0, 0, 9, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.361611}", "{'[0, 6, 1, 2, 6, 3, 1, 0, 0, 9, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.361557}", "{'[0, 6, 1, 2, 6, 3, 1, 0, 0, 9, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.361518}", "{'[0, 6, 1, 2, 6, 3, 1, 0, 0, 9, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.361515}", "{'[0, 6, 1, 2, 6, 3, 1, 0, 0, 9, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.361386}", "{'[0, 6, 1, 2, 6, 3, 1, 0, 0, 9, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.361131}", "{'[0, 6, 1, 2, 6, 3, 1, 0, 0, 9, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.36139}"]
returning from 'run': {'[0, 6, 1, 2, 6, 3, 1, 0, 0, 9, 0, 2, 0, 0, 0, 1, 1, 0]': ([0.368854, 0.364122, 0.368912, 0.361625, 0.372772, 0.392387, 0.364662, 0.363382, 0.362218, 0.364286, 0.36473, 0.361883, 0.360998, 0.36156, 0.361846, 0.361612, 0.361227, 0.361056, 0.361212, 0.363198, 0.361499, 0.361524, 0.363205, 0.361611, 0.361557, 0.361518, 0.361515, 0.361386, 0.361131, 0.36139], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 1, 2, 6, 3, 1, 0, 0, 9, 0, 2, 0, 0, 0, 1, 1, 0]': ([0.368854, 0.364122, 0.368912, 0.361625, 0.372772, 0.392387, 0.364662, 0.363382, 0.362218, 0.364286, 0.36473, 0.361883, 0.360998, 0.36156, 0.361846, 0.361612, 0.361227, 0.361056, 0.361212, 0.363198, 0.361499, 0.361524, 0.363205, 0.361611, 0.361557, 0.361518, 0.361515, 0.361386, 0.361131, 0.36139], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	6
        Additions: 		439
        Multiplications: 	164
        Divisions: 		0
        Logical: 		0
        Reads: 			945
        Writes: 		125
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest34.exe __orio_perftest34.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest34.exe  
Program Test Output: 
{'[3, 6, 6, 5, 0, 6, 0, 0, 14, 0, 28, 18, 0, 0, 2, 0, 0, 0]' : 0.729264}
{'[3, 6, 6, 5, 0, 6, 0, 0, 14, 0, 28, 18, 0, 0, 2, 0, 0, 0]' : 0.725967}
{'[3, 6, 6, 5, 0, 6, 0, 0, 14, 0, 28, 18, 0, 0, 2, 0, 0, 0]' : 0.725872}
{'[3, 6, 6, 5, 0, 6, 0, 0, 14, 0, 28, 18, 0, 0, 2, 0, 0, 0]' : 0.72529}
{'[3, 6, 6, 5, 0, 6, 0, 0, 14, 0, 28, 18, 0, 0, 2, 0, 0, 0]' : 0.726099}
{'[3, 6, 6, 5, 0, 6, 0, 0, 14, 0, 28, 18, 0, 0, 2, 0, 0, 0]' : 0.725742}
{'[3, 6, 6, 5, 0, 6, 0, 0, 14, 0, 28, 18, 0, 0, 2, 0, 0, 0]' : 0.725564}
{'[3, 6, 6, 5, 0, 6, 0, 0, 14, 0, 28, 18, 0, 0, 2, 0, 0, 0]' : 0.725316}
{'[3, 6, 6, 5, 0, 6, 0, 0, 14, 0, 28, 18, 0, 0, 2, 0, 0, 0]' : 0.725003}
{'[3, 6, 6, 5, 0, 6, 0, 0, 14, 0, 28, 18, 0, 0, 2, 0, 0, 0]' : 0.724706}
{'[3, 6, 6, 5, 0, 6, 0, 0, 14, 0, 28, 18, 0, 0, 2, 0, 0, 0]' : 0.724403}
{'[3, 6, 6, 5, 0, 6, 0, 0, 14, 0, 28, 18, 0, 0, 2, 0, 0, 0]' : 0.725685}
{'[3, 6, 6, 5, 0, 6, 0, 0, 14, 0, 28, 18, 0, 0, 2, 0, 0, 0]' : 0.724979}
{'[3, 6, 6, 5, 0, 6, 0, 0, 14, 0, 28, 18, 0, 0, 2, 0, 0, 0]' : 0.724912}
{'[3, 6, 6, 5, 0, 6, 0, 0, 14, 0, 28, 18, 0, 0, 2, 0, 0, 0]' : 0.726109}
{'[3, 6, 6, 5, 0, 6, 0, 0, 14, 0, 28, 18, 0, 0, 2, 0, 0, 0]' : 0.728352}
{'[3, 6, 6, 5, 0, 6, 0, 0, 14, 0, 28, 18, 0, 0, 2, 0, 0, 0]' : 0.730091}
{'[3, 6, 6, 5, 0, 6, 0, 0, 14, 0, 28, 18, 0, 0, 2, 0, 0, 0]' : 0.731101}
{'[3, 6, 6, 5, 0, 6, 0, 0, 14, 0, 28, 18, 0, 0, 2, 0, 0, 0]' : 0.729237}
{'[3, 6, 6, 5, 0, 6, 0, 0, 14, 0, 28, 18, 0, 0, 2, 0, 0, 0]' : 0.725209}
{'[3, 6, 6, 5, 0, 6, 0, 0, 14, 0, 28, 18, 0, 0, 2, 0, 0, 0]' : 0.727227}
{'[3, 6, 6, 5, 0, 6, 0, 0, 14, 0, 28, 18, 0, 0, 2, 0, 0, 0]' : 0.725615}
{'[3, 6, 6, 5, 0, 6, 0, 0, 14, 0, 28, 18, 0, 0, 2, 0, 0, 0]' : 0.725763}
{'[3, 6, 6, 5, 0, 6, 0, 0, 14, 0, 28, 18, 0, 0, 2, 0, 0, 0]' : 0.724926}
{'[3, 6, 6, 5, 0, 6, 0, 0, 14, 0, 28, 18, 0, 0, 2, 0, 0, 0]' : 0.726426}
{'[3, 6, 6, 5, 0, 6, 0, 0, 14, 0, 28, 18, 0, 0, 2, 0, 0, 0]' : 0.724049}
{'[3, 6, 6, 5, 0, 6, 0, 0, 14, 0, 28, 18, 0, 0, 2, 0, 0, 0]' : 0.724585}
{'[3, 6, 6, 5, 0, 6, 0, 0, 14, 0, 28, 18, 0, 0, 2, 0, 0, 0]' : 0.724914}
{'[3, 6, 6, 5, 0, 6, 0, 0, 14, 0, 28, 18, 0, 0, 2, 0, 0, 0]' : 0.729861}
{'[3, 6, 6, 5, 0, 6, 0, 0, 14, 0, 28, 18, 0, 0, 2, 0, 0, 0]' : 0.72623}

out:
 ["{'[3, 6, 6, 5, 0, 6, 0, 0, 14, 0, 28, 18, 0, 0, 2, 0, 0, 0]' : 0.729264}", "{'[3, 6, 6, 5, 0, 6, 0, 0, 14, 0, 28, 18, 0, 0, 2, 0, 0, 0]' : 0.725967}", "{'[3, 6, 6, 5, 0, 6, 0, 0, 14, 0, 28, 18, 0, 0, 2, 0, 0, 0]' : 0.725872}", "{'[3, 6, 6, 5, 0, 6, 0, 0, 14, 0, 28, 18, 0, 0, 2, 0, 0, 0]' : 0.72529}", "{'[3, 6, 6, 5, 0, 6, 0, 0, 14, 0, 28, 18, 0, 0, 2, 0, 0, 0]' : 0.726099}", "{'[3, 6, 6, 5, 0, 6, 0, 0, 14, 0, 28, 18, 0, 0, 2, 0, 0, 0]' : 0.725742}", "{'[3, 6, 6, 5, 0, 6, 0, 0, 14, 0, 28, 18, 0, 0, 2, 0, 0, 0]' : 0.725564}", "{'[3, 6, 6, 5, 0, 6, 0, 0, 14, 0, 28, 18, 0, 0, 2, 0, 0, 0]' : 0.725316}", "{'[3, 6, 6, 5, 0, 6, 0, 0, 14, 0, 28, 18, 0, 0, 2, 0, 0, 0]' : 0.725003}", "{'[3, 6, 6, 5, 0, 6, 0, 0, 14, 0, 28, 18, 0, 0, 2, 0, 0, 0]' : 0.724706}", "{'[3, 6, 6, 5, 0, 6, 0, 0, 14, 0, 28, 18, 0, 0, 2, 0, 0, 0]' : 0.724403}", "{'[3, 6, 6, 5, 0, 6, 0, 0, 14, 0, 28, 18, 0, 0, 2, 0, 0, 0]' : 0.725685}", "{'[3, 6, 6, 5, 0, 6, 0, 0, 14, 0, 28, 18, 0, 0, 2, 0, 0, 0]' : 0.724979}", "{'[3, 6, 6, 5, 0, 6, 0, 0, 14, 0, 28, 18, 0, 0, 2, 0, 0, 0]' : 0.724912}", "{'[3, 6, 6, 5, 0, 6, 0, 0, 14, 0, 28, 18, 0, 0, 2, 0, 0, 0]' : 0.726109}", "{'[3, 6, 6, 5, 0, 6, 0, 0, 14, 0, 28, 18, 0, 0, 2, 0, 0, 0]' : 0.728352}", "{'[3, 6, 6, 5, 0, 6, 0, 0, 14, 0, 28, 18, 0, 0, 2, 0, 0, 0]' : 0.730091}", "{'[3, 6, 6, 5, 0, 6, 0, 0, 14, 0, 28, 18, 0, 0, 2, 0, 0, 0]' : 0.731101}", "{'[3, 6, 6, 5, 0, 6, 0, 0, 14, 0, 28, 18, 0, 0, 2, 0, 0, 0]' : 0.729237}", "{'[3, 6, 6, 5, 0, 6, 0, 0, 14, 0, 28, 18, 0, 0, 2, 0, 0, 0]' : 0.725209}", "{'[3, 6, 6, 5, 0, 6, 0, 0, 14, 0, 28, 18, 0, 0, 2, 0, 0, 0]' : 0.727227}", "{'[3, 6, 6, 5, 0, 6, 0, 0, 14, 0, 28, 18, 0, 0, 2, 0, 0, 0]' : 0.725615}", "{'[3, 6, 6, 5, 0, 6, 0, 0, 14, 0, 28, 18, 0, 0, 2, 0, 0, 0]' : 0.725763}", "{'[3, 6, 6, 5, 0, 6, 0, 0, 14, 0, 28, 18, 0, 0, 2, 0, 0, 0]' : 0.724926}", "{'[3, 6, 6, 5, 0, 6, 0, 0, 14, 0, 28, 18, 0, 0, 2, 0, 0, 0]' : 0.726426}", "{'[3, 6, 6, 5, 0, 6, 0, 0, 14, 0, 28, 18, 0, 0, 2, 0, 0, 0]' : 0.724049}", "{'[3, 6, 6, 5, 0, 6, 0, 0, 14, 0, 28, 18, 0, 0, 2, 0, 0, 0]' : 0.724585}", "{'[3, 6, 6, 5, 0, 6, 0, 0, 14, 0, 28, 18, 0, 0, 2, 0, 0, 0]' : 0.724914}", "{'[3, 6, 6, 5, 0, 6, 0, 0, 14, 0, 28, 18, 0, 0, 2, 0, 0, 0]' : 0.729861}", "{'[3, 6, 6, 5, 0, 6, 0, 0, 14, 0, 28, 18, 0, 0, 2, 0, 0, 0]' : 0.72623}"]
returning from 'run': {'[3, 6, 6, 5, 0, 6, 0, 0, 14, 0, 28, 18, 0, 0, 2, 0, 0, 0]': ([0.729264, 0.725967, 0.725872, 0.72529, 0.726099, 0.725742, 0.725564, 0.725316, 0.725003, 0.724706, 0.724403, 0.725685, 0.724979, 0.724912, 0.726109, 0.728352, 0.730091, 0.731101, 0.729237, 0.725209, 0.727227, 0.725615, 0.725763, 0.724926, 0.726426, 0.724049, 0.724585, 0.724914, 0.729861, 0.72623], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 6, 6, 5, 0, 6, 0, 0, 14, 0, 28, 18, 0, 0, 2, 0, 0, 0]': ([0.729264, 0.725967, 0.725872, 0.72529, 0.726099, 0.725742, 0.725564, 0.725316, 0.725003, 0.724706, 0.724403, 0.725685, 0.724979, 0.724912, 0.726109, 0.728352, 0.730091, 0.731101, 0.729237, 0.725209, 0.727227, 0.725615, 0.725763, 0.724926, 0.726426, 0.724049, 0.724585, 0.724914, 0.729861, 0.72623], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	107
        Max loop nest depth: 	5
        Additions: 		5504
        Multiplications: 	1650
        Divisions: 		0
        Logical: 		0
        Reads: 			10818
        Writes: 		2135
        Comparisons:		107
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest35.exe __orio_perftest35.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest35.exe  
Program Test Output: 
{'[0, 6, 4, 3, 0, 6, 1, 1, 0, 15, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.248619}
{'[0, 6, 4, 3, 0, 6, 1, 1, 0, 15, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.249646}
{'[0, 6, 4, 3, 0, 6, 1, 1, 0, 15, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.250529}
{'[0, 6, 4, 3, 0, 6, 1, 1, 0, 15, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.248688}
{'[0, 6, 4, 3, 0, 6, 1, 1, 0, 15, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.248137}
{'[0, 6, 4, 3, 0, 6, 1, 1, 0, 15, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.250983}
{'[0, 6, 4, 3, 0, 6, 1, 1, 0, 15, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.248395}
{'[0, 6, 4, 3, 0, 6, 1, 1, 0, 15, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.248686}
{'[0, 6, 4, 3, 0, 6, 1, 1, 0, 15, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.248106}
{'[0, 6, 4, 3, 0, 6, 1, 1, 0, 15, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.248944}
{'[0, 6, 4, 3, 0, 6, 1, 1, 0, 15, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.248048}
{'[0, 6, 4, 3, 0, 6, 1, 1, 0, 15, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.248364}
{'[0, 6, 4, 3, 0, 6, 1, 1, 0, 15, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.248131}
{'[0, 6, 4, 3, 0, 6, 1, 1, 0, 15, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.253053}
{'[0, 6, 4, 3, 0, 6, 1, 1, 0, 15, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.249299}
{'[0, 6, 4, 3, 0, 6, 1, 1, 0, 15, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.249047}
{'[0, 6, 4, 3, 0, 6, 1, 1, 0, 15, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.248932}
{'[0, 6, 4, 3, 0, 6, 1, 1, 0, 15, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.247982}
{'[0, 6, 4, 3, 0, 6, 1, 1, 0, 15, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.24991}
{'[0, 6, 4, 3, 0, 6, 1, 1, 0, 15, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.249079}
{'[0, 6, 4, 3, 0, 6, 1, 1, 0, 15, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.248035}
{'[0, 6, 4, 3, 0, 6, 1, 1, 0, 15, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.250127}
{'[0, 6, 4, 3, 0, 6, 1, 1, 0, 15, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.246919}
{'[0, 6, 4, 3, 0, 6, 1, 1, 0, 15, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.247844}
{'[0, 6, 4, 3, 0, 6, 1, 1, 0, 15, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.247275}
{'[0, 6, 4, 3, 0, 6, 1, 1, 0, 15, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.247601}
{'[0, 6, 4, 3, 0, 6, 1, 1, 0, 15, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.247664}
{'[0, 6, 4, 3, 0, 6, 1, 1, 0, 15, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.247997}
{'[0, 6, 4, 3, 0, 6, 1, 1, 0, 15, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.248058}
{'[0, 6, 4, 3, 0, 6, 1, 1, 0, 15, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.247565}

out:
 ["{'[0, 6, 4, 3, 0, 6, 1, 1, 0, 15, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.248619}", "{'[0, 6, 4, 3, 0, 6, 1, 1, 0, 15, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.249646}", "{'[0, 6, 4, 3, 0, 6, 1, 1, 0, 15, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.250529}", "{'[0, 6, 4, 3, 0, 6, 1, 1, 0, 15, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.248688}", "{'[0, 6, 4, 3, 0, 6, 1, 1, 0, 15, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.248137}", "{'[0, 6, 4, 3, 0, 6, 1, 1, 0, 15, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.250983}", "{'[0, 6, 4, 3, 0, 6, 1, 1, 0, 15, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.248395}", "{'[0, 6, 4, 3, 0, 6, 1, 1, 0, 15, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.248686}", "{'[0, 6, 4, 3, 0, 6, 1, 1, 0, 15, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.248106}", "{'[0, 6, 4, 3, 0, 6, 1, 1, 0, 15, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.248944}", "{'[0, 6, 4, 3, 0, 6, 1, 1, 0, 15, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.248048}", "{'[0, 6, 4, 3, 0, 6, 1, 1, 0, 15, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.248364}", "{'[0, 6, 4, 3, 0, 6, 1, 1, 0, 15, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.248131}", "{'[0, 6, 4, 3, 0, 6, 1, 1, 0, 15, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.253053}", "{'[0, 6, 4, 3, 0, 6, 1, 1, 0, 15, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.249299}", "{'[0, 6, 4, 3, 0, 6, 1, 1, 0, 15, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.249047}", "{'[0, 6, 4, 3, 0, 6, 1, 1, 0, 15, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.248932}", "{'[0, 6, 4, 3, 0, 6, 1, 1, 0, 15, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.247982}", "{'[0, 6, 4, 3, 0, 6, 1, 1, 0, 15, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.24991}", "{'[0, 6, 4, 3, 0, 6, 1, 1, 0, 15, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.249079}", "{'[0, 6, 4, 3, 0, 6, 1, 1, 0, 15, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.248035}", "{'[0, 6, 4, 3, 0, 6, 1, 1, 0, 15, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.250127}", "{'[0, 6, 4, 3, 0, 6, 1, 1, 0, 15, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.246919}", "{'[0, 6, 4, 3, 0, 6, 1, 1, 0, 15, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.247844}", "{'[0, 6, 4, 3, 0, 6, 1, 1, 0, 15, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.247275}", "{'[0, 6, 4, 3, 0, 6, 1, 1, 0, 15, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.247601}", "{'[0, 6, 4, 3, 0, 6, 1, 1, 0, 15, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.247664}", "{'[0, 6, 4, 3, 0, 6, 1, 1, 0, 15, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.247997}", "{'[0, 6, 4, 3, 0, 6, 1, 1, 0, 15, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.248058}", "{'[0, 6, 4, 3, 0, 6, 1, 1, 0, 15, 0, 23, 1, 1, 0, 1, 0, 1]' : 0.247565}"]
returning from 'run': {'[0, 6, 4, 3, 0, 6, 1, 1, 0, 15, 0, 23, 1, 1, 0, 1, 0, 1]': ([0.248619, 0.249646, 0.250529, 0.248688, 0.248137, 0.250983, 0.248395, 0.248686, 0.248106, 0.248944, 0.248048, 0.248364, 0.248131, 0.253053, 0.249299, 0.249047, 0.248932, 0.247982, 0.24991, 0.249079, 0.248035, 0.250127, 0.246919, 0.247844, 0.247275, 0.247601, 0.247664, 0.247997, 0.248058, 0.247565], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 4, 3, 0, 6, 1, 1, 0, 15, 0, 23, 1, 1, 0, 1, 0, 1]': ([0.248619, 0.249646, 0.250529, 0.248688, 0.248137, 0.250983, 0.248395, 0.248686, 0.248106, 0.248944, 0.248048, 0.248364, 0.248131, 0.253053, 0.249299, 0.249047, 0.248932, 0.247982, 0.24991, 0.249079, 0.248035, 0.250127, 0.246919, 0.247844, 0.247275, 0.247601, 0.247664, 0.247997, 0.248058, 0.247565], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	4
        Additions: 		304
        Multiplications: 	108
        Divisions: 		0
        Logical: 		0
        Reads: 			736
        Writes: 		176
        Comparisons:		10
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest36.exe __orio_perftest36.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest36.exe  
Program Test Output: 
{'[6, 5, 0, 0, 0, 4, 0, 0, 26, 0, 19, 0, 0, 0, 2, 1, 0, 1]' : 0.64531}
{'[6, 5, 0, 0, 0, 4, 0, 0, 26, 0, 19, 0, 0, 0, 2, 1, 0, 1]' : 0.646132}
{'[6, 5, 0, 0, 0, 4, 0, 0, 26, 0, 19, 0, 0, 0, 2, 1, 0, 1]' : 0.65135}
{'[6, 5, 0, 0, 0, 4, 0, 0, 26, 0, 19, 0, 0, 0, 2, 1, 0, 1]' : 0.646241}
{'[6, 5, 0, 0, 0, 4, 0, 0, 26, 0, 19, 0, 0, 0, 2, 1, 0, 1]' : 0.645087}
{'[6, 5, 0, 0, 0, 4, 0, 0, 26, 0, 19, 0, 0, 0, 2, 1, 0, 1]' : 0.644467}
{'[6, 5, 0, 0, 0, 4, 0, 0, 26, 0, 19, 0, 0, 0, 2, 1, 0, 1]' : 0.645107}
{'[6, 5, 0, 0, 0, 4, 0, 0, 26, 0, 19, 0, 0, 0, 2, 1, 0, 1]' : 0.64544}
{'[6, 5, 0, 0, 0, 4, 0, 0, 26, 0, 19, 0, 0, 0, 2, 1, 0, 1]' : 0.6443}
{'[6, 5, 0, 0, 0, 4, 0, 0, 26, 0, 19, 0, 0, 0, 2, 1, 0, 1]' : 0.645527}
{'[6, 5, 0, 0, 0, 4, 0, 0, 26, 0, 19, 0, 0, 0, 2, 1, 0, 1]' : 0.645707}
{'[6, 5, 0, 0, 0, 4, 0, 0, 26, 0, 19, 0, 0, 0, 2, 1, 0, 1]' : 0.645622}
{'[6, 5, 0, 0, 0, 4, 0, 0, 26, 0, 19, 0, 0, 0, 2, 1, 0, 1]' : 0.644928}
{'[6, 5, 0, 0, 0, 4, 0, 0, 26, 0, 19, 0, 0, 0, 2, 1, 0, 1]' : 0.64521}
{'[6, 5, 0, 0, 0, 4, 0, 0, 26, 0, 19, 0, 0, 0, 2, 1, 0, 1]' : 0.644491}
{'[6, 5, 0, 0, 0, 4, 0, 0, 26, 0, 19, 0, 0, 0, 2, 1, 0, 1]' : 0.648082}
{'[6, 5, 0, 0, 0, 4, 0, 0, 26, 0, 19, 0, 0, 0, 2, 1, 0, 1]' : 0.647428}
{'[6, 5, 0, 0, 0, 4, 0, 0, 26, 0, 19, 0, 0, 0, 2, 1, 0, 1]' : 0.644972}
{'[6, 5, 0, 0, 0, 4, 0, 0, 26, 0, 19, 0, 0, 0, 2, 1, 0, 1]' : 0.644909}
{'[6, 5, 0, 0, 0, 4, 0, 0, 26, 0, 19, 0, 0, 0, 2, 1, 0, 1]' : 0.645562}
{'[6, 5, 0, 0, 0, 4, 0, 0, 26, 0, 19, 0, 0, 0, 2, 1, 0, 1]' : 0.645199}
{'[6, 5, 0, 0, 0, 4, 0, 0, 26, 0, 19, 0, 0, 0, 2, 1, 0, 1]' : 0.645958}
{'[6, 5, 0, 0, 0, 4, 0, 0, 26, 0, 19, 0, 0, 0, 2, 1, 0, 1]' : 0.646078}
{'[6, 5, 0, 0, 0, 4, 0, 0, 26, 0, 19, 0, 0, 0, 2, 1, 0, 1]' : 0.645905}
{'[6, 5, 0, 0, 0, 4, 0, 0, 26, 0, 19, 0, 0, 0, 2, 1, 0, 1]' : 0.645613}
{'[6, 5, 0, 0, 0, 4, 0, 0, 26, 0, 19, 0, 0, 0, 2, 1, 0, 1]' : 0.645303}
{'[6, 5, 0, 0, 0, 4, 0, 0, 26, 0, 19, 0, 0, 0, 2, 1, 0, 1]' : 0.645799}
{'[6, 5, 0, 0, 0, 4, 0, 0, 26, 0, 19, 0, 0, 0, 2, 1, 0, 1]' : 0.645624}
{'[6, 5, 0, 0, 0, 4, 0, 0, 26, 0, 19, 0, 0, 0, 2, 1, 0, 1]' : 0.645337}
{'[6, 5, 0, 0, 0, 4, 0, 0, 26, 0, 19, 0, 0, 0, 2, 1, 0, 1]' : 0.646482}

out:
 ["{'[6, 5, 0, 0, 0, 4, 0, 0, 26, 0, 19, 0, 0, 0, 2, 1, 0, 1]' : 0.64531}", "{'[6, 5, 0, 0, 0, 4, 0, 0, 26, 0, 19, 0, 0, 0, 2, 1, 0, 1]' : 0.646132}", "{'[6, 5, 0, 0, 0, 4, 0, 0, 26, 0, 19, 0, 0, 0, 2, 1, 0, 1]' : 0.65135}", "{'[6, 5, 0, 0, 0, 4, 0, 0, 26, 0, 19, 0, 0, 0, 2, 1, 0, 1]' : 0.646241}", "{'[6, 5, 0, 0, 0, 4, 0, 0, 26, 0, 19, 0, 0, 0, 2, 1, 0, 1]' : 0.645087}", "{'[6, 5, 0, 0, 0, 4, 0, 0, 26, 0, 19, 0, 0, 0, 2, 1, 0, 1]' : 0.644467}", "{'[6, 5, 0, 0, 0, 4, 0, 0, 26, 0, 19, 0, 0, 0, 2, 1, 0, 1]' : 0.645107}", "{'[6, 5, 0, 0, 0, 4, 0, 0, 26, 0, 19, 0, 0, 0, 2, 1, 0, 1]' : 0.64544}", "{'[6, 5, 0, 0, 0, 4, 0, 0, 26, 0, 19, 0, 0, 0, 2, 1, 0, 1]' : 0.6443}", "{'[6, 5, 0, 0, 0, 4, 0, 0, 26, 0, 19, 0, 0, 0, 2, 1, 0, 1]' : 0.645527}", "{'[6, 5, 0, 0, 0, 4, 0, 0, 26, 0, 19, 0, 0, 0, 2, 1, 0, 1]' : 0.645707}", "{'[6, 5, 0, 0, 0, 4, 0, 0, 26, 0, 19, 0, 0, 0, 2, 1, 0, 1]' : 0.645622}", "{'[6, 5, 0, 0, 0, 4, 0, 0, 26, 0, 19, 0, 0, 0, 2, 1, 0, 1]' : 0.644928}", "{'[6, 5, 0, 0, 0, 4, 0, 0, 26, 0, 19, 0, 0, 0, 2, 1, 0, 1]' : 0.64521}", "{'[6, 5, 0, 0, 0, 4, 0, 0, 26, 0, 19, 0, 0, 0, 2, 1, 0, 1]' : 0.644491}", "{'[6, 5, 0, 0, 0, 4, 0, 0, 26, 0, 19, 0, 0, 0, 2, 1, 0, 1]' : 0.648082}", "{'[6, 5, 0, 0, 0, 4, 0, 0, 26, 0, 19, 0, 0, 0, 2, 1, 0, 1]' : 0.647428}", "{'[6, 5, 0, 0, 0, 4, 0, 0, 26, 0, 19, 0, 0, 0, 2, 1, 0, 1]' : 0.644972}", "{'[6, 5, 0, 0, 0, 4, 0, 0, 26, 0, 19, 0, 0, 0, 2, 1, 0, 1]' : 0.644909}", "{'[6, 5, 0, 0, 0, 4, 0, 0, 26, 0, 19, 0, 0, 0, 2, 1, 0, 1]' : 0.645562}", "{'[6, 5, 0, 0, 0, 4, 0, 0, 26, 0, 19, 0, 0, 0, 2, 1, 0, 1]' : 0.645199}", "{'[6, 5, 0, 0, 0, 4, 0, 0, 26, 0, 19, 0, 0, 0, 2, 1, 0, 1]' : 0.645958}", "{'[6, 5, 0, 0, 0, 4, 0, 0, 26, 0, 19, 0, 0, 0, 2, 1, 0, 1]' : 0.646078}", "{'[6, 5, 0, 0, 0, 4, 0, 0, 26, 0, 19, 0, 0, 0, 2, 1, 0, 1]' : 0.645905}", "{'[6, 5, 0, 0, 0, 4, 0, 0, 26, 0, 19, 0, 0, 0, 2, 1, 0, 1]' : 0.645613}", "{'[6, 5, 0, 0, 0, 4, 0, 0, 26, 0, 19, 0, 0, 0, 2, 1, 0, 1]' : 0.645303}", "{'[6, 5, 0, 0, 0, 4, 0, 0, 26, 0, 19, 0, 0, 0, 2, 1, 0, 1]' : 0.645799}", "{'[6, 5, 0, 0, 0, 4, 0, 0, 26, 0, 19, 0, 0, 0, 2, 1, 0, 1]' : 0.645624}", "{'[6, 5, 0, 0, 0, 4, 0, 0, 26, 0, 19, 0, 0, 0, 2, 1, 0, 1]' : 0.645337}", "{'[6, 5, 0, 0, 0, 4, 0, 0, 26, 0, 19, 0, 0, 0, 2, 1, 0, 1]' : 0.646482}"]
returning from 'run': {'[6, 5, 0, 0, 0, 4, 0, 0, 26, 0, 19, 0, 0, 0, 2, 1, 0, 1]': ([0.64531, 0.646132, 0.65135, 0.646241, 0.645087, 0.644467, 0.645107, 0.64544, 0.6443, 0.645527, 0.645707, 0.645622, 0.644928, 0.64521, 0.644491, 0.648082, 0.647428, 0.644972, 0.644909, 0.645562, 0.645199, 0.645958, 0.646078, 0.645905, 0.645613, 0.645303, 0.645799, 0.645624, 0.645337, 0.646482], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 5, 0, 0, 0, 4, 0, 0, 26, 0, 19, 0, 0, 0, 2, 1, 0, 1]': ([0.64531, 0.646132, 0.65135, 0.646241, 0.645087, 0.644467, 0.645107, 0.64544, 0.6443, 0.645527, 0.645707, 0.645622, 0.644928, 0.64521, 0.644491, 0.648082, 0.647428, 0.644972, 0.644909, 0.645562, 0.645199, 0.645958, 0.646078, 0.645905, 0.645613, 0.645303, 0.645799, 0.645624, 0.645337, 0.646482], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = iii
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	5
        Additions: 		8338
        Multiplications: 	2480
        Divisions: 		0
        Logical: 		0
        Reads: 			12691
        Writes: 		1354
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest37.exe __orio_perftest37.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest37.exe  
Program Test Output: 
{'[4, 1, 1, 2, 6, 1, 0, 0, 26, 29, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.518468}
{'[4, 1, 1, 2, 6, 1, 0, 0, 26, 29, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.522388}
{'[4, 1, 1, 2, 6, 1, 0, 0, 26, 29, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.517844}
{'[4, 1, 1, 2, 6, 1, 0, 0, 26, 29, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.51776}
{'[4, 1, 1, 2, 6, 1, 0, 0, 26, 29, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.516456}
{'[4, 1, 1, 2, 6, 1, 0, 0, 26, 29, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.522105}
{'[4, 1, 1, 2, 6, 1, 0, 0, 26, 29, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.524149}
{'[4, 1, 1, 2, 6, 1, 0, 0, 26, 29, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.516978}
{'[4, 1, 1, 2, 6, 1, 0, 0, 26, 29, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.516691}
{'[4, 1, 1, 2, 6, 1, 0, 0, 26, 29, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.516037}
{'[4, 1, 1, 2, 6, 1, 0, 0, 26, 29, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.517991}
{'[4, 1, 1, 2, 6, 1, 0, 0, 26, 29, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.517689}
{'[4, 1, 1, 2, 6, 1, 0, 0, 26, 29, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.518168}
{'[4, 1, 1, 2, 6, 1, 0, 0, 26, 29, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.516467}
{'[4, 1, 1, 2, 6, 1, 0, 0, 26, 29, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.51711}
{'[4, 1, 1, 2, 6, 1, 0, 0, 26, 29, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.516918}
{'[4, 1, 1, 2, 6, 1, 0, 0, 26, 29, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.521929}
{'[4, 1, 1, 2, 6, 1, 0, 0, 26, 29, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.520926}
{'[4, 1, 1, 2, 6, 1, 0, 0, 26, 29, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.519314}
{'[4, 1, 1, 2, 6, 1, 0, 0, 26, 29, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.517031}
{'[4, 1, 1, 2, 6, 1, 0, 0, 26, 29, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.519514}
{'[4, 1, 1, 2, 6, 1, 0, 0, 26, 29, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.5159}
{'[4, 1, 1, 2, 6, 1, 0, 0, 26, 29, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.516071}
{'[4, 1, 1, 2, 6, 1, 0, 0, 26, 29, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.516513}
{'[4, 1, 1, 2, 6, 1, 0, 0, 26, 29, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.525642}
{'[4, 1, 1, 2, 6, 1, 0, 0, 26, 29, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.517144}
{'[4, 1, 1, 2, 6, 1, 0, 0, 26, 29, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.515015}
{'[4, 1, 1, 2, 6, 1, 0, 0, 26, 29, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.531672}
{'[4, 1, 1, 2, 6, 1, 0, 0, 26, 29, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.528286}
{'[4, 1, 1, 2, 6, 1, 0, 0, 26, 29, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.520222}

out:
 ["{'[4, 1, 1, 2, 6, 1, 0, 0, 26, 29, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.518468}", "{'[4, 1, 1, 2, 6, 1, 0, 0, 26, 29, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.522388}", "{'[4, 1, 1, 2, 6, 1, 0, 0, 26, 29, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.517844}", "{'[4, 1, 1, 2, 6, 1, 0, 0, 26, 29, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.51776}", "{'[4, 1, 1, 2, 6, 1, 0, 0, 26, 29, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.516456}", "{'[4, 1, 1, 2, 6, 1, 0, 0, 26, 29, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.522105}", "{'[4, 1, 1, 2, 6, 1, 0, 0, 26, 29, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.524149}", "{'[4, 1, 1, 2, 6, 1, 0, 0, 26, 29, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.516978}", "{'[4, 1, 1, 2, 6, 1, 0, 0, 26, 29, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.516691}", "{'[4, 1, 1, 2, 6, 1, 0, 0, 26, 29, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.516037}", "{'[4, 1, 1, 2, 6, 1, 0, 0, 26, 29, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.517991}", "{'[4, 1, 1, 2, 6, 1, 0, 0, 26, 29, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.517689}", "{'[4, 1, 1, 2, 6, 1, 0, 0, 26, 29, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.518168}", "{'[4, 1, 1, 2, 6, 1, 0, 0, 26, 29, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.516467}", "{'[4, 1, 1, 2, 6, 1, 0, 0, 26, 29, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.51711}", "{'[4, 1, 1, 2, 6, 1, 0, 0, 26, 29, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.516918}", "{'[4, 1, 1, 2, 6, 1, 0, 0, 26, 29, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.521929}", "{'[4, 1, 1, 2, 6, 1, 0, 0, 26, 29, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.520926}", "{'[4, 1, 1, 2, 6, 1, 0, 0, 26, 29, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.519314}", "{'[4, 1, 1, 2, 6, 1, 0, 0, 26, 29, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.517031}", "{'[4, 1, 1, 2, 6, 1, 0, 0, 26, 29, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.519514}", "{'[4, 1, 1, 2, 6, 1, 0, 0, 26, 29, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.5159}", "{'[4, 1, 1, 2, 6, 1, 0, 0, 26, 29, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.516071}", "{'[4, 1, 1, 2, 6, 1, 0, 0, 26, 29, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.516513}", "{'[4, 1, 1, 2, 6, 1, 0, 0, 26, 29, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.525642}", "{'[4, 1, 1, 2, 6, 1, 0, 0, 26, 29, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.517144}", "{'[4, 1, 1, 2, 6, 1, 0, 0, 26, 29, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.515015}", "{'[4, 1, 1, 2, 6, 1, 0, 0, 26, 29, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.531672}", "{'[4, 1, 1, 2, 6, 1, 0, 0, 26, 29, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.528286}", "{'[4, 1, 1, 2, 6, 1, 0, 0, 26, 29, 0, 29, 0, 1, 0, 0, 1, 1]' : 0.520222}"]
returning from 'run': {'[4, 1, 1, 2, 6, 1, 0, 0, 26, 29, 0, 29, 0, 1, 0, 0, 1, 1]': ([0.518468, 0.522388, 0.517844, 0.51776, 0.516456, 0.522105, 0.524149, 0.516978, 0.516691, 0.516037, 0.517991, 0.517689, 0.518168, 0.516467, 0.51711, 0.516918, 0.521929, 0.520926, 0.519314, 0.517031, 0.519514, 0.5159, 0.516071, 0.516513, 0.525642, 0.517144, 0.515015, 0.531672, 0.528286, 0.520222], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 1, 1, 2, 6, 1, 0, 0, 26, 29, 0, 29, 0, 1, 0, 0, 1, 1]': ([0.518468, 0.522388, 0.517844, 0.51776, 0.516456, 0.522105, 0.524149, 0.516978, 0.516691, 0.516037, 0.517991, 0.517689, 0.518168, 0.516467, 0.51711, 0.516918, 0.521929, 0.520926, 0.519314, 0.517031, 0.519514, 0.5159, 0.516071, 0.516513, 0.525642, 0.517144, 0.515015, 0.531672, 0.528286, 0.520222], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
Code stats:
        Number of loops: 	26
        Max loop nest depth: 	5
        Additions: 		1366
        Multiplications: 	594
        Divisions: 		0
        Logical: 		0
        Reads: 			2623
        Writes: 		450
        Comparisons:		26
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest38.exe __orio_perftest38.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest38.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest38.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest38.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest38.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	37
        Max loop nest depth: 	5
        Additions: 		2574
        Multiplications: 	714
        Divisions: 		0
        Logical: 		0
        Reads: 			4140
        Writes: 		475
        Comparisons:		37
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest39.exe __orio_perftest39.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest39.exe  
Program Test Output: 
{'[1, 1, 2, 0, 0, 5, 1, 0, 0, 19, 7, 0, 0, 1, 1, 0, 1, 0]' : 0.782289}
{'[1, 1, 2, 0, 0, 5, 1, 0, 0, 19, 7, 0, 0, 1, 1, 0, 1, 0]' : 0.783579}
{'[1, 1, 2, 0, 0, 5, 1, 0, 0, 19, 7, 0, 0, 1, 1, 0, 1, 0]' : 0.781733}
{'[1, 1, 2, 0, 0, 5, 1, 0, 0, 19, 7, 0, 0, 1, 1, 0, 1, 0]' : 0.784106}
{'[1, 1, 2, 0, 0, 5, 1, 0, 0, 19, 7, 0, 0, 1, 1, 0, 1, 0]' : 0.783878}
{'[1, 1, 2, 0, 0, 5, 1, 0, 0, 19, 7, 0, 0, 1, 1, 0, 1, 0]' : 0.783659}
{'[1, 1, 2, 0, 0, 5, 1, 0, 0, 19, 7, 0, 0, 1, 1, 0, 1, 0]' : 0.781452}
{'[1, 1, 2, 0, 0, 5, 1, 0, 0, 19, 7, 0, 0, 1, 1, 0, 1, 0]' : 0.780558}
{'[1, 1, 2, 0, 0, 5, 1, 0, 0, 19, 7, 0, 0, 1, 1, 0, 1, 0]' : 0.784579}
{'[1, 1, 2, 0, 0, 5, 1, 0, 0, 19, 7, 0, 0, 1, 1, 0, 1, 0]' : 0.782861}
{'[1, 1, 2, 0, 0, 5, 1, 0, 0, 19, 7, 0, 0, 1, 1, 0, 1, 0]' : 0.782565}
{'[1, 1, 2, 0, 0, 5, 1, 0, 0, 19, 7, 0, 0, 1, 1, 0, 1, 0]' : 0.78311}
{'[1, 1, 2, 0, 0, 5, 1, 0, 0, 19, 7, 0, 0, 1, 1, 0, 1, 0]' : 0.782595}
{'[1, 1, 2, 0, 0, 5, 1, 0, 0, 19, 7, 0, 0, 1, 1, 0, 1, 0]' : 0.780844}
{'[1, 1, 2, 0, 0, 5, 1, 0, 0, 19, 7, 0, 0, 1, 1, 0, 1, 0]' : 0.782883}
{'[1, 1, 2, 0, 0, 5, 1, 0, 0, 19, 7, 0, 0, 1, 1, 0, 1, 0]' : 0.782244}
{'[1, 1, 2, 0, 0, 5, 1, 0, 0, 19, 7, 0, 0, 1, 1, 0, 1, 0]' : 0.783887}
{'[1, 1, 2, 0, 0, 5, 1, 0, 0, 19, 7, 0, 0, 1, 1, 0, 1, 0]' : 0.780675}
{'[1, 1, 2, 0, 0, 5, 1, 0, 0, 19, 7, 0, 0, 1, 1, 0, 1, 0]' : 0.781441}
{'[1, 1, 2, 0, 0, 5, 1, 0, 0, 19, 7, 0, 0, 1, 1, 0, 1, 0]' : 0.781038}
{'[1, 1, 2, 0, 0, 5, 1, 0, 0, 19, 7, 0, 0, 1, 1, 0, 1, 0]' : 0.781212}
{'[1, 1, 2, 0, 0, 5, 1, 0, 0, 19, 7, 0, 0, 1, 1, 0, 1, 0]' : 0.780735}
{'[1, 1, 2, 0, 0, 5, 1, 0, 0, 19, 7, 0, 0, 1, 1, 0, 1, 0]' : 0.783589}
{'[1, 1, 2, 0, 0, 5, 1, 0, 0, 19, 7, 0, 0, 1, 1, 0, 1, 0]' : 0.782466}
{'[1, 1, 2, 0, 0, 5, 1, 0, 0, 19, 7, 0, 0, 1, 1, 0, 1, 0]' : 0.782166}
{'[1, 1, 2, 0, 0, 5, 1, 0, 0, 19, 7, 0, 0, 1, 1, 0, 1, 0]' : 0.783558}
{'[1, 1, 2, 0, 0, 5, 1, 0, 0, 19, 7, 0, 0, 1, 1, 0, 1, 0]' : 0.781616}
{'[1, 1, 2, 0, 0, 5, 1, 0, 0, 19, 7, 0, 0, 1, 1, 0, 1, 0]' : 0.780513}
{'[1, 1, 2, 0, 0, 5, 1, 0, 0, 19, 7, 0, 0, 1, 1, 0, 1, 0]' : 0.780389}
{'[1, 1, 2, 0, 0, 5, 1, 0, 0, 19, 7, 0, 0, 1, 1, 0, 1, 0]' : 0.782004}

out:
 ["{'[1, 1, 2, 0, 0, 5, 1, 0, 0, 19, 7, 0, 0, 1, 1, 0, 1, 0]' : 0.782289}", "{'[1, 1, 2, 0, 0, 5, 1, 0, 0, 19, 7, 0, 0, 1, 1, 0, 1, 0]' : 0.783579}", "{'[1, 1, 2, 0, 0, 5, 1, 0, 0, 19, 7, 0, 0, 1, 1, 0, 1, 0]' : 0.781733}", "{'[1, 1, 2, 0, 0, 5, 1, 0, 0, 19, 7, 0, 0, 1, 1, 0, 1, 0]' : 0.784106}", "{'[1, 1, 2, 0, 0, 5, 1, 0, 0, 19, 7, 0, 0, 1, 1, 0, 1, 0]' : 0.783878}", "{'[1, 1, 2, 0, 0, 5, 1, 0, 0, 19, 7, 0, 0, 1, 1, 0, 1, 0]' : 0.783659}", "{'[1, 1, 2, 0, 0, 5, 1, 0, 0, 19, 7, 0, 0, 1, 1, 0, 1, 0]' : 0.781452}", "{'[1, 1, 2, 0, 0, 5, 1, 0, 0, 19, 7, 0, 0, 1, 1, 0, 1, 0]' : 0.780558}", "{'[1, 1, 2, 0, 0, 5, 1, 0, 0, 19, 7, 0, 0, 1, 1, 0, 1, 0]' : 0.784579}", "{'[1, 1, 2, 0, 0, 5, 1, 0, 0, 19, 7, 0, 0, 1, 1, 0, 1, 0]' : 0.782861}", "{'[1, 1, 2, 0, 0, 5, 1, 0, 0, 19, 7, 0, 0, 1, 1, 0, 1, 0]' : 0.782565}", "{'[1, 1, 2, 0, 0, 5, 1, 0, 0, 19, 7, 0, 0, 1, 1, 0, 1, 0]' : 0.78311}", "{'[1, 1, 2, 0, 0, 5, 1, 0, 0, 19, 7, 0, 0, 1, 1, 0, 1, 0]' : 0.782595}", "{'[1, 1, 2, 0, 0, 5, 1, 0, 0, 19, 7, 0, 0, 1, 1, 0, 1, 0]' : 0.780844}", "{'[1, 1, 2, 0, 0, 5, 1, 0, 0, 19, 7, 0, 0, 1, 1, 0, 1, 0]' : 0.782883}", "{'[1, 1, 2, 0, 0, 5, 1, 0, 0, 19, 7, 0, 0, 1, 1, 0, 1, 0]' : 0.782244}", "{'[1, 1, 2, 0, 0, 5, 1, 0, 0, 19, 7, 0, 0, 1, 1, 0, 1, 0]' : 0.783887}", "{'[1, 1, 2, 0, 0, 5, 1, 0, 0, 19, 7, 0, 0, 1, 1, 0, 1, 0]' : 0.780675}", "{'[1, 1, 2, 0, 0, 5, 1, 0, 0, 19, 7, 0, 0, 1, 1, 0, 1, 0]' : 0.781441}", "{'[1, 1, 2, 0, 0, 5, 1, 0, 0, 19, 7, 0, 0, 1, 1, 0, 1, 0]' : 0.781038}", "{'[1, 1, 2, 0, 0, 5, 1, 0, 0, 19, 7, 0, 0, 1, 1, 0, 1, 0]' : 0.781212}", "{'[1, 1, 2, 0, 0, 5, 1, 0, 0, 19, 7, 0, 0, 1, 1, 0, 1, 0]' : 0.780735}", "{'[1, 1, 2, 0, 0, 5, 1, 0, 0, 19, 7, 0, 0, 1, 1, 0, 1, 0]' : 0.783589}", "{'[1, 1, 2, 0, 0, 5, 1, 0, 0, 19, 7, 0, 0, 1, 1, 0, 1, 0]' : 0.782466}", "{'[1, 1, 2, 0, 0, 5, 1, 0, 0, 19, 7, 0, 0, 1, 1, 0, 1, 0]' : 0.782166}", "{'[1, 1, 2, 0, 0, 5, 1, 0, 0, 19, 7, 0, 0, 1, 1, 0, 1, 0]' : 0.783558}", "{'[1, 1, 2, 0, 0, 5, 1, 0, 0, 19, 7, 0, 0, 1, 1, 0, 1, 0]' : 0.781616}", "{'[1, 1, 2, 0, 0, 5, 1, 0, 0, 19, 7, 0, 0, 1, 1, 0, 1, 0]' : 0.780513}", "{'[1, 1, 2, 0, 0, 5, 1, 0, 0, 19, 7, 0, 0, 1, 1, 0, 1, 0]' : 0.780389}", "{'[1, 1, 2, 0, 0, 5, 1, 0, 0, 19, 7, 0, 0, 1, 1, 0, 1, 0]' : 0.782004}"]
returning from 'run': {'[1, 1, 2, 0, 0, 5, 1, 0, 0, 19, 7, 0, 0, 1, 1, 0, 1, 0]': ([0.782289, 0.783579, 0.781733, 0.784106, 0.783878, 0.783659, 0.781452, 0.780558, 0.784579, 0.782861, 0.782565, 0.78311, 0.782595, 0.780844, 0.782883, 0.782244, 0.783887, 0.780675, 0.781441, 0.781038, 0.781212, 0.780735, 0.783589, 0.782466, 0.782166, 0.783558, 0.781616, 0.780513, 0.780389, 0.782004], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 1, 2, 0, 0, 5, 1, 0, 0, 19, 7, 0, 0, 1, 1, 0, 1, 0]': ([0.782289, 0.783579, 0.781733, 0.784106, 0.783878, 0.783659, 0.781452, 0.780558, 0.784579, 0.782861, 0.782565, 0.78311, 0.782595, 0.780844, 0.782883, 0.782244, 0.783887, 0.780675, 0.781441, 0.781038, 0.781212, 0.780735, 0.783589, 0.782466, 0.782166, 0.783558, 0.781616, 0.780513, 0.780389, 0.782004], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		296
        Multiplications: 	76
        Divisions: 		0
        Logical: 		0
        Reads: 			556
        Writes: 		75
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest40.exe __orio_perftest40.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest40.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest40.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest40.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest40.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/phrb/code/orio/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/orio/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/orio/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/phrb/code/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Complete design, with measurements:
     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
40      1    4    4    0    6    3       1       0    6   2   0  24    2    0
118     1    5    0    6    6    4       0       1    5   0  13   5    0    2
324     0    1    1    0    5    6       1       0   23  24   0  14    0    0
472     3    1    5    0    6    4       0       1    7   5  22   0    0    0
600     5    3    2    0    0    0       0       1    3   0  21  29    1    0
643     5    3    1    0    0    0       0       0    8  17  26   0    2    0
780     1    0    3    5    0    3       1       1    5   0  14  18    0    0
806     0    0    6    1    5    6       1       1   27   0  28   8    1    1
1036    5    5    6    3    6    5       1       1    1  29  26   0    1    0
1174    4    3    6    2    3    5       1       1    8  26  14   0    2    0
1323    2    3    2    6    4    6       1       1    5  23  26   0    1    1
1406    5    5    0    6    5    1       0       0   20  18   0   5    0    1
1795    6    1    0    4    6    4       1       0    0   0  27  28    1    0
1797    1    3    0    6    0    6       0       1   29  24  24   0    2    0
2090    5    0    6    5    6    0       0       0    0  27   9   0    0    1
2113    4    0    3    6    2    2       0       1    0   0  23  26    0    0
2142    0    0    4    0    2    0       0       0   28  24   0  21    0    0
2389    0    4    3    2    4    6       0       1    6   1   0   0    0    1
2426    0    4    5    6    6    0       0       1    3   0  28   0    0    0
2464    3    0    1    1    5    3       0       0   16   1   0   1    1    0
2511    0    2    6    6    2    0       0       0    0   5  25   0    0    0
2876    0    3    4    5    0    3       0       0   25   2  26   0    1    0
2895    3    5    6    6    4    6       1       0   27   0   1   3    2    0
2900    1    2    6    2    2    4       0       0    8   0   8   9    0    0
3085    2    0    0    3    3    0       0       1    3  13  18   0    0    0
3220    0    2    0    0    1    5       1       1    3  22   8   0    1    0
3388    0    6    1    2    6    3       1       0    0   9   0   2    0    0
3490    3    6    6    5    0    6       0       0   14   0  28  18    0    0
3567    0    6    4    3    0    6       1       1    0  15   0  23    1    1
3592    6    5    0    0    0    4       0       0   26   0  19   0    0    0
3729    4    1    1    2    6    1       0       0   26  29   0  29    0    1
3822    1    1    2    0    0    5       1       0    0  19   7   0    0    1
     RT_K SCR VEC1 VEC2 cost_mean
40      0   1    0    0 0.3972164
118     0   1    1    1 0.7236905
324     2   1    0    1 0.6286805
472     0   0    0    1 0.3245279
600     1   1    1    1 0.3492586
643     0   0    1    1 0.6106785
780     0   1    1    1 0.8712429
806     0   0    1    0 0.3149780
1036    1   1    0    1 0.4608923
1174    0   0    0    1 0.4111281
1323    0   0    0    0 0.2589776
1406    1   1    0    0 0.4314619
1795    0   1    0    0 0.2703644
1797    0   1    0    0 0.8182561
2090    1   1    1    0 0.4468637
2113    1   0    0    1 0.8529958
2142    0   0    0    0 0.5220045
2389    1   0    0    1 0.5110560
2426    1   0    1    0 0.8475429
2464    1   0    1    1 0.3255891
2511    2   1    1    1 0.2990261
2876    1   1    0    1 0.4861551
2895    0   0    0    1 0.4975370
2900    0   1    1    0 0.6549250
3085    1   0    0    1 0.5136916
3220    0   0    1    0 0.2797933
3388    0   1    1    0 0.3639626
3490    2   0    0    0 0.7262832
3567    0   1    0    1 0.2487221
3592    2   1    0    1 0.6457723
3729    0   0    1    1 0.5192799
3822    1   0    1    0 0.7822741

