
====== START ORIO ======

----- begin reading the source file: atax2.src1.c -----
----- finished reading the source file -----

----- begin parsing annotations -----
----- finished parsing annotations -----

----- begin optimizations -----
Search_Space         = 8.234e+13
Number_of_Parameters = 18
Numeric_Parameters   = 13
Binary_Parameters    = 05
['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
[[1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [False, True], [False, True], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 8, 32], [1, 8, 32], [1, 8, 32], [False, True], [False, True], [False, True]]

----- begin empirical tuning for problem size -----
 N = 10000
Parameters: {'ACOPY_x': [0, 2], 'ACOPY_y': [0, 2], 'RT_K': [0, 3], 'T1_I': [0, 7], 'T1_J': [0, 7], 'T1_K': [0, 7], 'U_K': [0, 30], 'U_J': [0, 30], 'U_I': [0, 30], 'U1_I': [0, 30], 'T2_K': [0, 7], 'T2_J': [0, 7], 'T2_I': [0, 7], 'VEC2': [0, 2], 'VEC1': [0, 2], 'RT_I': [0, 3], 'SCR': [0, 2], 'RT_J': [0, 3]}
Parameter Range Values: {'ACOPY_x': [False, True], 'ACOPY_y': [False, True], 'RT_K': [1, 8, 32], 'T1_I': [1, 16, 32, 64, 128, 256, 512], 'T1_J': [1, 16, 32, 64, 128, 256, 512], 'T1_K': [1, 16, 32, 64, 128, 256, 512], 'U_K': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_J': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U1_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'T2_K': [1, 64, 128, 256, 512, 1024, 2048], 'T2_J': [1, 64, 128, 256, 512, 1024, 2048], 'T2_I': [1, 64, 128, 256, 512, 1024, 2048], 'VEC2': [False, True], 'VEC1': [False, True], 'RT_I': [1, 8, 32], 'SCR': [False, True], 'RT_J': [1, 8, 32]}

----- begin random search -----
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Inverse Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Building seed search space (does not spend evaluations)
Using pre-generated space for this size
Starting DOPT-anova
Step 0
Full Model:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Fixed Factors: {}
Full data does not fit on budget
Computing D-Optimal Design
Updating Constraints
Parameter Range Values: {'ACOPY_x': [False, True], 'ACOPY_y': [False, True], 'RT_K': [1, 8, 32], 'T1_I': [1, 16, 32, 64, 128, 256, 512], 'T1_J': [1, 16, 32, 64, 128, 256, 512], 'T1_K': [1, 16, 32, 64, 128, 256, 512], 'U_K': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_J': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U1_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'T2_K': [1, 64, 128, 256, 512, 1024, 2048], 'T2_J': [1, 64, 128, 256, 512, 1024, 2048], 'T2_I': [1, 64, 128, 256, 512, 1024, 2048], 'VEC2': [False, True], 'VEC1': [False, True], 'RT_I': [1, 8, 32], 'SCR': [False, True], 'RT_J': [1, 8, 32]}
Variable Ranges: {'ACOPY_x': [False, True], 'ACOPY_y': [False, True], 'RT_K': [1, 8, 32], 'T1_I': [1, 16, 32, 64, 128, 256, 512], 'T1_J': [1, 16, 32, 64, 128, 256, 512], 'T1_K': [1, 16, 32, 64, 128, 256, 512], 'U_K': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_J': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U1_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'T2_K': [1, 64, 128, 256, 512, 1024, 2048], 'T2_J': [1, 64, 128, 256, 512, 1024, 2048], 'T2_I': [1, 64, 128, 256, 512, 1024, 2048], 'VEC2': [False, True], 'VEC1': [False, True], 'RT_I': [1, 8, 32], 'SCR': [False, True], 'RT_J': [1, 8, 32]}
Current Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Constraint Text: True and (((T2_I ==1 )or (T2_I %T1_I ==0 ))) and (((T2_J ==1 )or (T2_J %T1_J ==0 ))) and (((T2_K ==1 )or (T2_K %T1_K ==0 ))) and ((RT_I *RT_J +RT_I *RT_K +RT_J *RT_K <=150 )) and (((U_I ==1 )or (U_J ==1 )or (U_K ==1 )))
Updated Constraint: True and (((variable_ranges["T2_I"][int(x[3])] ==1 )or (variable_ranges["T2_I"][int(x[3])] %variable_ranges["T1_I"][int(x[0])] ==0 ))) and (((variable_ranges["T2_J"][int(x[4])] ==1 )or (variable_ranges["T2_J"][int(x[4])] %variable_ranges["T1_J"][int(x[1])] ==0 ))) and (((variable_ranges["T2_K"][int(x[5])] ==1 )or (variable_ranges["T2_K"][int(x[5])] %variable_ranges["T1_K"][int(x[2])] ==0 ))) and ((variable_ranges["RT_I"][int(x[12])] *variable_ranges["RT_J"][int(x[13])] +variable_ranges["RT_I"][int(x[12])] *variable_ranges["RT_K"][int(x[14])] +variable_ranges["RT_J"][int(x[13])] *variable_ranges["RT_K"][int(x[14])] <=150 )) and (((variable_ranges["U_I"][int(x[9])] ==1 )or (variable_ranges["U_J"][int(x[10])] ==1 )or (variable_ranges["U_K"][int(x[11])] ==1 )))
Computing D-Optimal Design with 46 experiments
Design Formula:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Generating search space of size 1380 for optFederov (does not spend evaluations)
Tested coordinates: 10000
Valid coordinates: 276
Tested coordinates: 20000
Valid coordinates: 552
Tested coordinates: 30000
Valid coordinates: 828
Tested coordinates: 40000
Valid coordinates: 1104
Tested coordinates: 50000
Valid coordinates: 1380
Valid/Tested configurations: 1380/56055
Generated Search Space:
NULL
Model Matrix Names: NULL
Model Matrix Det: 1.4880372594574742e+84
Computing Dependency Between Columns
Starting "optFederov" run
Using Search Space:
NULL
Data Dimensions: [1] 1380   18

     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
23      0    0    4    0    6    4       1       0   26   0  17  20    1    0
109     5    2    1    0    4    0       1       1    0   0  20  17    0    1
198     4    6    0    2    6    2       1       1   13   0  24   9    0    0
241     5    6    3    0    0    5       1       0    4   9   0  26    1    0
243     5    0    5    6    6    3       1       0    6   9  28   0    0    2
258     3    3    1    2    0    1       0       0    7   5   4   0    1    0
271     2    4    3    0    2    0       1       1   17  17  25   0    0    1
308     0    2    2    2    3    3       0       0    3  21   0  27    0    0
353     2    2    3    2    2    5       0       1    8   0  27   9    2    0
416     4    2    1    5    6    5       0       0   23   9  12   0    2    0
440     0    6    6    2    4    5       0       1   10  27  27   0    0    1
446     2    6    2    0    0    6       0       0   20   5   0   8    0    1
450     5    1    4    0    5    2       0       0   25  26   0   9    0    2
470     0    3    0    1    0    1       0       0   19  26  21   0    0    2
482     2    0    1    1    0    3       1       0    2   9   0   6    0    1
510     6    0    5    4    0    0       0       1   24   0  23  18    0    0
540     4    4    6    5    3    0       1       0    8   0   9  27    0    1
606     1    2    0    3    2    2       0       1   29   9   0   0    1    0
608     3    2    4    3    0    2       1       0    1  22  29   0    1    1
641     1    3    4    3    2    5       1       0   13  15   6   0    0    0
735     3    2    5    2    0    5       1       1   27   1   0  16    0    2
758     0    0    6    5    4    6       0       1   13  26   0  28    1    1
776     5    1    2    4    2    1       0       0   13  15   0  15    1    1
781     6    3    2    6    5    4       1       1   29  13   0   7    0    0
853     4    0    2    3    0    5       0       1    8  18   9   0    0    0
857     6    4    6    0    0    6       1       1    4  26   0   8    2    0
926     6    3    0    5    5    6       0       1    4   1   0   8    0    2
942     0    3    0    5    5    1       1       1   16  13   0   9    0    1
949     2    6    0    6    5    3       0       0   11   0  28   1    1    0
957     4    3    5    5    3    4       0       0   29   0  27  29    0    0
968     4    4    2    3    2    3       1       0    2   0   7   0    0    0
1001    2    2    6    4    5    4       1       0   20  28   0  29    1    0
1040    3    2    6    6    3    5       1       1   13   0   0   9    2    0
1048    4    2    2    5    0    2       1       0   24  25  25   0    0    1
1074    5    1    0    5    0    0       1       1   13   0  17  15    0    0
1087    4    0    6    5    3    0       0       1    3  10   0   3    0    0
1199    4    0    1    4    2    6       1       0   14  29   0  12    0    0
1205    3    6    0    0    6    0       1       1   29  28   9   0    0    2
1241    0    6    6    6    0    0       1       0   14  24   0   6    2    0
1247    2    5    3    5    5    2       1       1   10  28   0  10    0    0
1252    0    1    2    6    0    6       1       1   14   7  29   0    1    0
1265    2    4    4    2    4    2       1       0   20   6   1   0    0    1
1267    1    1    0    0    6    2       0       0    1   0  23  27    0    0
1285    4    0    2    2    3    2       1       0   15  25   0  22    0    0
1327    1    2    2    1    3    3       0       0   22   9   0   9    1    0
1356    0    1    2    6    2    2       0       1   19   0   9  20    2    0
     RT_K SCR VEC1 VEC2
23      0   1    1    1
109     1   1    0    0
198     2   1    0    0
241     1   0    0    0
243     0   0    0    1
258     0   1    0    1
271     1   0    1    1
308     2   0    1    0
353     0   1    1    0
416     0   0    1    1
440     0   0    1    0
446     0   0    0    1
450     0   1    1    0
470     0   1    0    0
482     0   1    1    0
510     0   1    1    0
540     1   1    1    0
606     0   0    0    1
608     0   1    1    0
641     1   1    0    1
735     0   1    1    1
758     0   1    1    0
776     0   1    0    1
781     2   1    1    0
853     1   1    0    1
857     0   1    1    1
926     0   1    1    1
942     0   0    0    1
949     1   0    1    1
957     2   1    0    1
968     0   1    0    0
1001    0   0    0    0
1040    0   0    1    1
1048    0   0    1    1
1074    1   0    0    0
1087    2   0    1    1
1199    2   0    1    0
1205    0   0    0    1
1241    0   1    1    1
1247    0   1    1    1
1252    1   0    0    1
1265    1   1    0    0
1267    2   1    1    1
1285    1   0    0    0
1327    1   1    1    1
1356    0   1    0    0

D-Efficiency Approximation: [1] 0.335

Measuring design of size 46
Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Complete design, with measurements:
     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
23      0    0    4    0    6    4       1       0   26   0  17  20    1    0
109     5    2    1    0    4    0       1       1    0   0  20  17    0    1
241     5    6    3    0    0    5       1       0    4   9   0  26    1    0
258     3    3    1    2    0    1       0       0    7   5   4   0    1    0
271     2    4    3    0    2    0       1       1   17  17  25   0    0    1
308     0    2    2    2    3    3       0       0    3  21   0  27    0    0
353     2    2    3    2    2    5       0       1    8   0  27   9    2    0
416     4    2    1    5    6    5       0       0   23   9  12   0    2    0
440     0    6    6    2    4    5       0       1   10  27  27   0    0    1
446     2    6    2    0    0    6       0       0   20   5   0   8    0    1
450     5    1    4    0    5    2       0       0   25  26   0   9    0    2
470     0    3    0    1    0    1       0       0   19  26  21   0    0    2
482     2    0    1    1    0    3       1       0    2   9   0   6    0    1
510     6    0    5    4    0    0       0       1   24   0  23  18    0    0
540     4    4    6    5    3    0       1       0    8   0   9  27    0    1
606     1    2    0    3    2    2       0       1   29   9   0   0    1    0
608     3    2    4    3    0    2       1       0    1  22  29   0    1    1
641     1    3    4    3    2    5       1       0   13  15   6   0    0    0
758     0    0    6    5    4    6       0       1   13  26   0  28    1    1
776     5    1    2    4    2    1       0       0   13  15   0  15    1    1
853     4    0    2    3    0    5       0       1    8  18   9   0    0    0
857     6    4    6    0    0    6       1       1    4  26   0   8    2    0
926     6    3    0    5    5    6       0       1    4   1   0   8    0    2
942     0    3    0    5    5    1       1       1   16  13   0   9    0    1
949     2    6    0    6    5    3       0       0   11   0  28   1    1    0
957     4    3    5    5    3    4       0       0   29   0  27  29    0    0
968     4    4    2    3    2    3       1       0    2   0   7   0    0    0
1001    2    2    6    4    5    4       1       0   20  28   0  29    1    0
1040    3    2    6    6    3    5       1       1   13   0   0   9    2    0
1048    4    2    2    5    0    2       1       0   24  25  25   0    0    1
1074    5    1    0    5    0    0       1       1   13   0  17  15    0    0
1199    4    0    1    4    2    6       1       0   14  29   0  12    0    0
1241    0    6    6    6    0    0       1       0   14  24   0   6    2    0
1247    2    5    3    5    5    2       1       1   10  28   0  10    0    0
1252    0    1    2    6    0    6       1       1   14   7  29   0    1    0
1265    2    4    4    2    4    2       1       0   20   6   1   0    0    1
1267    1    1    0    0    6    2       0       0    1   0  23  27    0    0
1285    4    0    2    2    3    2       1       0   15  25   0  22    0    0
1327    1    2    2    1    3    3       0       0   22   9   0   9    1    0
1356    0    1    2    6    2    2       0       1   19   0   9  20    2    0
     RT_K SCR VEC1 VEC2 cost_mean
23      0   1    1    1 0.2768295
109     1   1    0    0 0.9249183
241     1   0    0    0 0.2799249
258     0   1    0    1 0.2349214
271     1   0    1    1 0.6202163
308     2   0    1    0 0.5855932
353     0   1    1    0 0.4016510
416     0   0    1    1 0.5872257
440     0   0    1    0 0.4342395
446     0   0    0    1 0.3548873
450     0   1    1    0 0.3219709
470     0   1    0    0 0.5540938
482     0   1    1    0 0.3359672
510     0   1    1    0 0.7513547
540     1   1    1    0 0.6478093
606     0   0    0    1 0.2059157
608     0   1    1    0 0.2311088
641     1   1    0    1 0.5690834
758     0   1    1    0 0.2562038
776     0   1    0    1 0.2363169
853     1   1    0    1 0.7492676
857     0   1    1    1 0.3233281
926     0   1    1    1 0.5602464
942     0   0    0    1 0.4125815
949     1   0    1    1 0.4869496
957     2   1    0    1 0.6501493
968     0   1    0    0 0.6755878
1001    0   0    0    0 0.3075052
1040    0   0    1    1 0.3231650
1048    0   0    1    1 0.5413024
1074    1   0    0    0 0.7755329
1199    2   0    1    0 0.6661386
1241    0   1    1    1 0.4716440
1247    0   1    1    1 0.5339200
1252    1   0    0    1 0.2959154
1265    1   1    0    0 0.2997758
1267    2   1    1    1 0.6442014
1285    1   0    0    0 0.4818445
1327    1   1    1    1 0.2596232
1356    0   1    0    0 0.4623999

Step Space Names:  [1] "T1_I"    "T1_J"    "T1_K"    "T2_I"    "T2_J"    "T2_K"    "ACOPY_x"
 [8] "ACOPY_y" "U1_I"    "U_I"     "U_J"     "U_K"     "RT_I"    "RT_J"   
[15] "RT_K"    "SCR"     "VEC1"    "VEC2"   

Heteroscedasticity Test p-value: 0.874048959005
Regression Step:                Df  Sum Sq Mean Sq F value   Pr(>F)    
T1_I             1 0.13342 0.13342  31.104 0.000524 ***
T1_J             1 0.00144 0.00144   0.336 0.578213    
T1_K             1 0.05659 0.05659  13.192 0.006665 ** 
T2_I             1 0.02357 0.02357   5.495 0.047104 *  
T2_J             1 0.00773 0.00773   1.803 0.216187    
T2_K             1 0.06787 0.06787  15.823 0.004074 ** 
ACOPY_x          1 0.00169 0.00169   0.394 0.547701    
ACOPY_y          1 0.03147 0.03147   7.336 0.026720 *  
U1_I             1 0.02272 0.02272   5.297 0.050351 .  
U_I              1 0.00226 0.00226   0.527 0.488445    
U_J              1 0.12018 0.12018  28.018 0.000734 ***
U_K              1 0.04141 0.04141   9.655 0.014505 *  
RT_I             1 0.17114 0.17114  39.897 0.000229 ***
RT_J             1 0.07740 0.07740  18.044 0.002808 ** 
RT_K             1 0.02671 0.02671   6.226 0.037219 *  
SCR              1 0.01683 0.01683   3.925 0.082908 .  
VEC1             1 0.00536 0.00536   1.250 0.296083    
VEC2             1 0.01636 0.01636   3.815 0.086571 .  
I(1/(1 + T1_I))  1 0.02835 0.02835   6.609 0.033089 *  
I(1/(1 + T1_J))  1 0.00008 0.00008   0.019 0.893760    
I(1/(1 + T1_K))  1 0.00152 0.00152   0.355 0.567757    
I(1/(1 + T2_I))  1 0.02681 0.02681   6.250 0.036941 *  
I(1/(1 + T2_J))  1 0.00741 0.00741   1.727 0.225162    
I(1/(1 + T2_K))  1 0.14746 0.14746  34.376 0.000377 ***
I(1/(1 + U1_I))  1 0.01041 0.01041   2.427 0.157899    
I(1/(1 + U_I))   1 0.09027 0.09027  21.044 0.001785 ** 
I(1/(1 + U_J))   1 0.04428 0.04428  10.324 0.012367 *  
I(1/(1 + U_K))   1 0.00097 0.00097   0.227 0.646398    
I(1/(1 + RT_I))  1 0.08071 0.08071  18.815 0.002486 ** 
I(1/(1 + RT_J))  1 0.00514 0.00514   1.198 0.305499    
I(1/(1 + RT_K))  1 0.00619 0.00619   1.443 0.264039    
Residuals        8 0.03432 0.00429                     
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Predicting Best
Identical predictions (tol = 1e-5): 1
Getting Best from Design
Response: ['cost_mean']
Design Names:  [1] "T1_I"      "T1_J"      "T1_K"      "T2_I"      "T2_J"      "T2_K"     
 [7] "ACOPY_x"   "ACOPY_y"   "U1_I"      "U_I"       "U_J"       "U_K"      
[13] "RT_I"      "RT_J"      "RT_K"      "SCR"       "VEC1"      "VEC2"     
[19] "cost_mean"

Design Response:      cost_mean
23   0.2768295
109  0.9249183
241  0.2799249
258  0.2349214
271  0.6202163
308  0.5855932
353  0.4016510
416  0.5872257
440  0.4342395
446  0.3548873
450  0.3219709
470  0.5540938
482  0.3359672
510  0.7513547
540  0.6478093
606  0.2059157
608  0.2311088
641  0.5690834
758  0.2562038
776  0.2363169
853  0.7492676
857  0.3233281
926  0.5602464
942  0.4125815
949  0.4869496
957  0.6501493
968  0.6755878
1001 0.3075052
1040 0.3231650
1048 0.5413024
1074 0.7755329
1199 0.6661386
1241 0.4716440
1247 0.5339200
1252 0.2959154
1265 0.2997758
1267 0.6442014
1285 0.4818445
1327 0.2596232
1356 0.4623999

Getting fixed variables
Fixed Variables: {'T2_K': 3, 'U_J': 0, 'T1_I': 1, 'RT_I': 1}
Pruning Data
Predicted best column T2_K: [1] 3

Predicted best column U_J: [1] 0

Predicted best column T1_I: [1] 1

Predicted best column RT_I: [1] 1

Dimensions of Pruned Data: [1] 1902   18
Pruned data names:  [1] "T1_I"    "T1_J"    "T1_K"    "T2_I"    "T2_J"    "T2_K"    "ACOPY_x"
 [8] "ACOPY_y" "U1_I"    "U_I"     "U_J"     "U_K"     "RT_I"    "RT_J"   
[15] "RT_K"    "SCR"     "VEC1"    "VEC2"   

NULL
Pruning Model
Best Predicted:       T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
65493    1    0    4    0    2    3       1       0    7   4   0   3    1    1
      RT_K SCR VEC1 VEC2
65493    0   0    0    0

Best From Design:     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
606    1    2    0    3    2    2       0       1   29   9   0   0    1    0
    RT_K SCR VEC1 VEC2 cost_mean
606    0   0    0    1 0.2059157

Pruned Factors: ['T1_J', 'T1_K', 'T2_I', 'T2_J', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_K', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Fixed Factors: {'T2_K': 3, 'U_J': 0, 'T1_I': 1, 'RT_I': 1}
Length of requested configs: 1
Result was on Database, Returning Now
Starting Point (-O3):
0.6593555
Predicted Best Point:
[1, 0, 4, 0, 2, 3, 1, 0, 7, 4, 0, 3, 1, 1, 0, 0, 0, 0]
Length of requested configs: 1
Result was on Database, Returning Now
Design Best Point:
    T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
606    1    2    0    3    2    2       0       1   29   9   0   0    1    0
    RT_K SCR VEC1 VEC2 cost_mean
606    0   0    0    1 0.2059157

Slowdown (Design Best): 0.31229849957016115
Slowdown (Predicted Best): 0.521400316925644
Budget: 40/180
Step 1
Full Model:  ~ T1_J + T1_K + T2_I + T2_J + ACOPY_x + ACOPY_y + U1_I + U_I + U_K + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Fixed Factors: {'T2_K': 3, 'U_J': 0, 'T1_I': 1, 'RT_I': 1}
Full data does not fit on budget
Computing D-Optimal Design
Updating Constraints
Parameter Range Values: {'ACOPY_x': [False, True], 'ACOPY_y': [False, True], 'RT_K': [1, 8, 32], 'T1_I': [1, 16, 32, 64, 128, 256, 512], 'T1_J': [1, 16, 32, 64, 128, 256, 512], 'T1_K': [1, 16, 32, 64, 128, 256, 512], 'U_K': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_J': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U1_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'T2_K': [1, 64, 128, 256, 512, 1024, 2048], 'T2_J': [1, 64, 128, 256, 512, 1024, 2048], 'T2_I': [1, 64, 128, 256, 512, 1024, 2048], 'VEC2': [False, True], 'VEC1': [False, True], 'RT_I': [1, 8, 32], 'SCR': [False, True], 'RT_J': [1, 8, 32]}
Variable Ranges: {'ACOPY_x': [False, True], 'ACOPY_y': [False, True], 'RT_K': [1, 8, 32], 'T1_I': [1, 16, 32, 64, 128, 256, 512], 'T1_J': [1, 16, 32, 64, 128, 256, 512], 'T1_K': [1, 16, 32, 64, 128, 256, 512], 'U_K': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_J': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U1_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'T2_K': [1, 64, 128, 256, 512, 1024, 2048], 'T2_J': [1, 64, 128, 256, 512, 1024, 2048], 'T2_I': [1, 64, 128, 256, 512, 1024, 2048], 'VEC2': [False, True], 'VEC1': [False, True], 'RT_I': [1, 8, 32], 'SCR': [False, True], 'RT_J': [1, 8, 32]}
Current Factors: ['T1_J', 'T1_K', 'T2_I', 'T2_J', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_K', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Constraint Text: True and (((T2_I ==1 )or (T2_I %T1_I ==0 ))) and (((T2_J ==1 )or (T2_J %T1_J ==0 ))) and (((T2_K ==1 )or (T2_K %T1_K ==0 ))) and ((RT_I *RT_J +RT_I *RT_K +RT_J *RT_K <=150 )) and (((U_I ==1 )or (U_J ==1 )or (U_K ==1 )))
Updated Constraint: True and (((variable_ranges["T2_I"][int(x[2])] ==1 )or (variable_ranges["T2_I"][int(x[2])] %16 ==0 ))) and (((variable_ranges["T2_J"][int(x[3])] ==1 )or (variable_ranges["T2_J"][int(x[3])] %variable_ranges["T1_J"][int(x[0])] ==0 ))) and (((256 ==1 )or (256 %variable_ranges["T1_K"][int(x[1])] ==0 ))) and ((8 *variable_ranges["RT_J"][int(x[9])] +8 *variable_ranges["RT_K"][int(x[10])] +variable_ranges["RT_J"][int(x[9])] *variable_ranges["RT_K"][int(x[10])] <=150 )) and (((variable_ranges["U_I"][int(x[7])] ==1 )or (1 ==1 )or (variable_ranges["U_K"][int(x[8])] ==1 )))
Computing D-Optimal Design with 34 experiments
Design Formula:  ~ T1_J + T1_K + T2_I + T2_J + ACOPY_x + ACOPY_y + U1_I + U_I + U_K + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Generating search space of size 1020 for optFederov (does not spend evaluations)
Valid coordinates: 204
Valid coordinates: 408
Valid coordinates: 612
Valid coordinates: 816
Valid coordinates: 1020
Valid/Tested configurations: 1020/4106
Generated Search Space:
NULL
Model Matrix Names: NULL
Model Matrix Det: 1.47315994310401e+31
Computing Dependency Between Columns
Starting "optFederov" run
Using Search Space:
NULL
Data Dimensions: [1] 1020   14

